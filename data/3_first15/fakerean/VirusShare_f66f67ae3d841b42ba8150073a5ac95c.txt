sbb
add
mov
pushf
mov
add
cmp
pop
jo
mov
xor
in
dec
call
scas
jbe
add
adc
lret
add
mov
adc
push
xchg
xchg
mov
cld
shr
dec
out
std
or
lahf
fs
push
ret
add
nop
ds
pushf
stos
in
sub
mov
xchg
shll
int
jle
jnp
fildll
add
sar
fucomip
adc
inc
dec
pop
sub
ja
aad
dec
scas
mov
or
ja
ljmp
add
mov
sub
ret
mov
and
fst
sub
mov
xchg
insl
fcmovu
mov
fs
std
jne
xchg
in
pop
cwtl
loope
in
or
lret
insb
xchg
xchg
add
mov
cltd
loop
or
shl
jno
mov
inc
ret
push
imul
inc
mov
leave
cltd
shrl
cwtl
lahf
cmp
or
or
int3
lret
hlt
or
lcall
xor
jne
xchg
lds
negb
sub
and
out
sbb
mov
or
fmuls
lock
lret
outsl
fwait
mov
bound
lret
and
xchg
repz
adc
movsb
xchg
mov
cmp
scas
mov
sbb
add
movsb
insb
loop
mov
sub
out
and
hlt
sbb
jbe
inc
mov
and
inc
and
mov
in
pop
rclb
jle
inc
xchg
mov
xchg
test
test
scas
inc
repnz
and
out
aaa
add
data16
xor
out
jns
xor
mov
xchg
fcmove
and
jns
fistl
call
popl
out
fs
jecxz
insb
cmovs
dec
fadd
dec
into
les
mov
addr16
stos
mov
daa
outsb
jle
arpl
sahf
in
js
inc
dec
fbstp
sahf
mov
xor
jo
imulb
mov
push
ret
shl
jle
or
aas
fdiv
cmpsb
mov
dec
push
add
nop
or
xchg
cmp
inc
pop
clc
or
mov
sbb
or
fnstcw
dec
div
push
enter
push
mov
je
pop
xchg
dec
adc
movsl
divb
lock
iret
mov
xchg
nop
jl
mov
jae
insb
jbe
cwtl
inc
test
gs
imul
dec
test
xchg
je
jge
push
adc
inc
test
sbb
cmpsl
out
aam
cmc
ljmp
dec
mov
lcall
mov
jmp
xchg
inc
in
dec
nop
pop
push
loop
inc
cmc
push
insl
or
pop
or
lds
xlat
in
add
dec
sbb
push
stos
sbb
mov
nop
push
aaa
stc
lret
sbb
mov
dec
dec
std
repnz
mov
xor
je
cmpsb
icebp
adc
jb
sub
sbb
shrl
mov
or
cmp
mov
insl
subl
fsubl
push
enter
in
bound
push
hlt
fwait
xchg
xchg
xchg
dec
mov
ret
xor
lds
iret
or
jbe
xchg
xor
cmp
mov
sub
mov
sarl
cmp
mov
ret
ret
in
mov
cld
cld
pop
mov
out
xor
adc
mov
xchg
ljmp
ret
mov
and
cli
inc
adc
popa
int3
fistps
cmpsb
faddl
xchg
push
sub
inc
cmp
sahf
xchg
pop
push
movsb
mov
adc
xchg
outsl
je
test
fdivr
mov
movsl
sub
stos
bound
stos
inc
jo
mov
icebp
ds
sub
fwait
aas
and
sysenter
into
dec
cli
pop
sbb
shrb
imul
test
scas
push
mov
xor
test
cmp
add
jmp
cltd
mov
insb
sub
mov
cld
repz
lds
stos
dec
sahf
leave
lods
nop
jb
jno
clc
mov
sahf
lahf
cmp
xor
sbb
ja
xchg
data16
push
cmp
mov
mov
ljmp
sub
xchg
fadds
fcmovnb
mov
adc
outsb
jns
pop
ret
hlt
into
lret
sub
xchg
rclb
xchg
sbb
push
shr
icebp
shlb
mov
and
pop
popa
push
test
js
popf
stc
pop
data16
sub
daa
xchg
movsl
mov
hlt
adc
dec
cwtl
xchg
fcompl
push
addr16
ss
or
lret
dec
xchg
dec
sub
xor
adc
jp
jae
inc
push
push
add
sbb
mov
cmp
fdivrs
sub
mov
push
ljmp
push
out
adc
push
in
sub
popa
pop
ret
mulb
adcb
xor
dec
lods
addr16
dec
arpl
adc
out
jge
test
mov
inc
xchg
cmpsb
and
popf
push
insb
xor
mov
xor
test
sbb
mov
push
push
add
mov
pop
ret
lahf
test
xchg
repz
push
lret
jp
cltd
inc
fistpll
repnz
rcr
jle
mov
pop
repnz
and
fcomps
or
mov
fiadds
inc
addb
fnstsw
jge
xchg
push
inc
out
aad
lret
push
xchg
xor
ja
push
mov
in
es
mov
movsl
sbb
or
sub
or
xchg
ret
jp
adc
inc
gs
int3
cmp
rorl
mov
bound
xchg
and
repz
popf
lock
aaa
ss
cmc
jne
cmp
je
ficoms
int3
pop
or
stc
mov
repnz
adc
idivl
popf
jp
lret
nop
dec
adc
pmaxub
and
int
jg
mov
andb
push
fs
or
pusha
push
cltd
jo
cmp
mov
mov
add
jmp
shl
jecxz
mov
loopne
clc
into
pop
shrl
fwait
aad
iret
ficompl
andb
cltd
movsl
imul
aas
mov
jp
dec
loope
nop
jge
inc
aas
lret
pop
sbb
add
cmp
jb
dec
ret
jae
dec
cs
add
lcall
cmp
dec
mov
sub
mov
fwait
and
out
add
out
ffreep
pop
mov
in
lea
push
ljmp
pusha
inc
lock
jae
sti
aam
dec
jns
aas
and
push
cwtl
xchg
xchg
mov
mov
ror
sub
cli
xor
insl
arpl
in
inc
sbb
mov
jb
imulb
mov
fstl
in
cli
dec
xchg
les
pop
mov
mov
addr16
cld
pop
push
hlt
push
test
jae
mov
sbb
into
in
fstpl
leave
inc
sarb
insb
mov
sub
gs
cmpsb
dec
pop
test
ret
push
xor
jl
in
push
ljmp
dec
out
add
idivl
insb
dec
xchg
inc
iret
lahf
inc
scas
leave
loopne
jle
rcrb
dec
sub
sub
std
int
cltd
sbb
mov
stc
cltd
adc
pop
mov
lret
jle
inc
push
pop
mov
dec
mov
mov
jne
mov
mov
lret
iret
stc
jnp
sahf
pop
pop
cwtl
push
arpl
bound
lahf
stc
pop
and
int
imul
pop
pop
std
cld
nop
push
mov
xchg
hlt
mov
pushf
jmp
bound
or
adc
and
mov
jp
sbb
pop
inc
sub
cwtl
das
mov
xchg
cmp
xor
dec
dec
rolb
xlat
xchg
xor
and
nop
arpl
popa
mov
add
push
je
ret
lock
xor
lret
mov
pushf
insl
adc
push
mov
fcomi
or
addr16
das
mov
xor
repnz
insb
insl
pop
fs
and
in
ret
xchg
hlt
jno
dec
cmp
and
pushw
cmpsb
lret
push
adc
lods
sbb
inc
sub
dec
rcrl
jl
jno
int
jne
or
roll
xchg
outsb
fistpl
lret
push
repnz
add
iret
xor
sbb
icebp
mov
in
inc
inc
shlb
lahf
xchg
imul
repz
je
xchg
aam
jmp
fistpll
dec
mov
std
out
scas
imulb
jle
jp
sbb
addl
in
js
pop
add
pop
lods
push
push
jne
cmc
add
push
rorl
icebp
aad
cmpsl
mov
dec
mov
ja
dec
or
lahf
xor
mov
sub
mov
nop
sbb
sbbl
sub
mov
das
fsubs
push
ja
sarl
jge
les
and
icebp
scas
fistpl
repz
shr
xor
call
aam
insl
in
outsb
mov
out
jp
fistps
sbb
or
cmp
or
sbb
in
sub
xor
xorl
data16
pslld
iret
dec
stc
add
push
cltd
pop
nop
lods
jb
test
call
dec
add
inc
mov
sub
cmp
or
pop
fcoml
rorb
or
test
sub
sbb
leave
rorb
xlat
sub
add
pushf
sub
ds
mov
xchg
lcall
xchg
aam
test
clc
lock
ja
outsb
adc
jle
cmpsb
pop
mov
and
sub
psrad
or
adc
repz
je
int
push
mov
mov
repz
lock
outsb
cmp
pop
inc
ret
inc
aas
push
adcl
stos
adcl
pop
mov
mov
and
or
test
outsl
or
ret
outsb
ljmp
sub
jmp
push
sbb
imul
shl
add
pop
xor
stos
sahf
dec
cmpsl
xchg
daa
mov
cmpsb
xor
add
lods
pushf
sbb
popf
int
testl
scas
and
jae
into
in
loop
stos
mov
mov
add
lret
jl
and
mov
add
cld
dec
ret
xchg
xchg
mov
xor
cld
mov
dec
pushf
loop
mov
xchg
pop
pop
pop
sahf
int
sub
push
add
sbb
leave
sbb
daa
mov
popa
pop
sub
cmp
aaa
popf
pop
mov
dec
andl
xchg
pop
mov
movsb
pushf
imul
inc
mov
je
pop
into
outsb
mov
sub
push
or
addr16
inc
xor
push
or
dec
add
push
cltd
shlb
mov
add
in
mov
fsubrs
fnstenv
pop
mov
mov
movsl
mov
jmp
pop
jg
pop
ficomps
ret
pop
cmpsb
pop
mov
fwait
icebp
pop
dec
into
and
cmpsb
inc
pop
fimuls
push
xor
xor
negl
cmp
out
rcl
sub
inc
jns
outsb
push
adc
xor
sbb
cmp
sbb
testl
imulb
push
in
pop
xor
push
xor
aam
xchg
mov
aaa
jg
mov
inc
std
xor
mov
and
in
scas
jns
xlat
pop
orb
mov
lahf
dec
push
push
jnp
lret
ret
std
mov
fwait
sti
jb
push
jl
dec
sub
pop
decl
dec
int3
sar
outsl
lods
lahf
pop
sub
mov
pop
adc
popf
adc
pop
addb
mov
sub
fwait
xorl
mov
push
aad
sbb
mov
daa
ret
dec
mov
cmp
fildll
cwtl
out
inc
je
cwtl
jl
cmp
inc
cmp
cmp
decl
sub
ss
lock
adc
and
push
sbb
jle
xor
in
sbb
jbe
lods
mov
mov
int3
addl
mov
stos
mov
xor
or
repz
flds
cmp
xlat
mov
pushf
subl
mov
or
xchg
pop
and
testb
and
es
cmp
fstpl
mov
xorl
inc
subl
cli
outsb
lret
dec
mov
dec
push
jno
pusha
xchg
inc
outsb
or
fdivp
data16
in
rcrl
movsl
xor
ja
mov
fistpl
pop
sbb
pushf
mov
mov
imul
imul
gs
nop
addr16
xor
mov
jecxz
inc
sahf
jmp
cmp
mov
adc
pop
cmp
cmp
addr16
xchg
jnp
ja
mov
push
fiaddl
mov
mov
in
push
dec
ret
movsb
daa
mov
mov
jne
xlat
xchg
push
jp
push
call
adc
out
mov
xorl
setl
mov
incb
xor
sub
adc
adc
mov
in
inc
jp
stos
push
jo
out
cli
push
fidivrs
xlat
xchg
das
daa
sbb
or
lods
sbb
sbb
popa
cmpl
mov
mov
mov
cmpsl
in
sub
xchg
mov
das
sub
icebp
daa
insb
dec
xchg
icebp
mull
xchg
pop
sbb
mov
inc
jnp
xchg
notb
fsubrl
adc
imul
sbb
ret
adc
inc
lods
andl
clc
dec
ja
out
cmp
pop
cld
ret
push
xchg
push
pop
addr16
sub
daa
adc
cmpsb
push
cltd
cmp
test
dec
lahf
mov
divl
push
cmp
jle
rcll
out
aam
xor
jl
lods
lahf
adcb
inc
mov
add
movsb
or
push
cs
push
or
sbb
cmovnp
adc
or
sub
int3
fcmovne
mov
repnz
cltd
mov
adc
and
std
gs
rorb
or
xacquire
sub
ja
adc
cmp
wbinvd
push
mov
lcall
inc
into
pop
iret
scas
jp
ds
cli
aas
xchg
ror
cmp
add
shlb
cmp
fmull
lods
in
and
cmp
inc
and
gs
push
mov
ljmp
mov
jnp
fcmovnb
cs
add
or
into
daa
sbb
imul
mov
shlb
adc
clc
or
mov
sbb
jmp
je
lds
imul
inc
xor
sbb
insb
pop
or
xchg
xor
sahf
sub
mov
stos
test
cmp
adc
mov
cltd
aad
not
or
por
sub
push
and
les
push
cli
icebp
cmc
jo
jp
imulb
mov
fsubrs
xchg
into
repz
lret
xchg
cmp
nop
jo
cmp
add
mov
out
jo
cli
mov
jl
rclb
jge
ret
and
aaa
loop
das
xor
aaa
sbb
jbe
sbb
stc
mov
es
sub
out
mov
jge
pop
in
xor
add
adcb
jbe
sub
push
mov
push
out
mov
test
cld
sub
add
mov
pop
mov
push
pusha
mov
mov
repz
push
int3
shlb
leave
pop
sbb
xchg
sti
repz
daa
or
gs
jecxz
divb
mov
stc
cltd
cmp
jg
pop
xor
sub
notb
fldpi
sub
xchg
pop
mov
dec
add
and
dec
in
push
push
jle
fld
std
sub
add
sbb
and
testb
sub
shrl
sbb
scas
sbb
adc
cli
xlat
jmp
push
mov
stos
push
cs
push
cmp
and
xchg
rol
rcll
push
or
lahf
push
mov
outsb
mov
or
pop
jb
daa
cli
loop
fwait
push
popf
jo
inc
sub
imul
mov
fmuls
inc
lods
mov
mov
mov
ss
add
cmpsb
aas
ja
rcll
add
jmp
fnstsw
sbb
and
sub
push
outsl
mov
adc
or
pop
mov
rcl
mov
ss
mov
loope
fcoms
pause
icebp
push
sbb
lret
data16
enter
inc
sub
push
lahf
jmp
mov
jae
and
xor
fnstenv
cmp
shlb
sbb
hlt
jl
out
subl
lods
inc
xchg
push
loopne
dec
mov
leave
pushf
sbbl
out
imul
xlat
popf
in
sbb
ja
fisttpll
jnp
ja
bound
sbb
mov
push
or
es
cmp
fisubrs
adc
cmpsl
jle
add
gs
rcll
fs
xlat
addr16
or
push
pop
or
jb
cmp
xor
fisubrl
hlt
jle
adc
fbstp
sub
push
or
pop
icebp
movsb
mov
cmpsl
jge
jp
shll
jne
aaa
jmp
stc
out
sti
adcb
imul
bound
stos
push
lcall
iret
sbb
push
jge
ds
mov
pop
or
xchg
ret
jae
in
fs
add
pop
or
das
mov
into
jp
jo
and
sbb
fs
and
pop
fbstp
rcrb
mov
mov
push
arpl
ret
cli
add
iret
mov
add
lods
adc
mov
cmpsl
sub
daa
push
dec
es
sbb
fbld
aas
pop
hlt
xchg
inc
or
xor
insb
cmp
shr
mov
fs
sub
xchg
ja
imul
push
sbb
cmp
cmp
adc
fsubl
cvtpi2ps
clc
mov
and
xor
push
outsb
sbb
lahf
int
sbb
aaa
inc
data16
outsl
das
test
inc
insb
sbb
lods
es
jle
sbb
mov
pop
xchg
xor
mov
icebp
movb
mov
push
dec
lods
pop
dec
popf
aas
mov
mov
xchg
outsb
lcall
fsts
dec
mov
aaa
add
adc
movsb
push
add
cli
loopne
outsl
jno
aas
in
push
jg
jb
pop
dec
and
mov
fcomps
outsl
jno
mov
and
mov
inc
rcll
mov
notl
sub
jp
out
cmpsb
push
fldl
jne
xchg
mov
xlat
dec
addb
jmp
cmp
mov
adc
push
outsb
mov
push
nop
and
dec
in
lahf
shll
and
push
xchg
cmpsl
out
xlat
insl
sub
jne
pop
inc
test
mov
or
aam
mov
daa
xchg
sbb
xchg
shl
fistps
jecxz
cmpb
push
pop
inc
mov
loop
mov
add
pop
add
add
mov
pop
and
addb
sub
call
test
sbb
aam
sub
xchg
sbb
xchg
xor
or
push
mov
cmc
jmp
nop
cmp
icebp
and
ret
sub
mov
push
mov
gs
adc
mov
xor
add
nop
icebp
outsb
adc
mov
in
pop
insb
lcall
sbb
mov
ljmp
and
insb
jb
imul
pop
ret
cmp
jns
mov
nop
clc
mov
mov
shrb
xchg
imul
inc
jb
sub
das
outsb
push
loope
cmpsl
loop
outsl
jecxz
aad
dec
repnz
or
jecxz
clc
dec
sahf
jns
leave
mov
adc
and
mov
xor
in
push
adc
mov
xor
sub
and
test
cmpsb
and
mov
xchg
mov
inc
rclb
mov
jp
ds
mov
lods
dec
scas
jp
cmp
cmp
stos
fidivrs
cmc
ljmp
les
pop
and
lea
dec
lea
mov
adc
and
mov
mov
loopne
rcll
aad
dec
lock
frstor
cmova
adc
dec
sbbl
es
addb
fadds
fidivrs
adc
jns
sbb
jae
push
xchg
add
imul
xchg
sbb
push
lods
shlb
sbb
lods
aad
and
fiaddl
xchg
xchg
repnz
add
dec
or
mov
js
cmp
inc
ja
in
dec
scas
outsw
jl
enter
or
inc
rol
push
adc
or
or
push
das
mov
push
ret
test
arpl
popa
jae
adc
mov
add
cmp
dec
dec
pop
inc
cwtl
xorps
aam
insb
loop
inc
gs
cltd
lahf
out
mov
xchg
fbld
jnp
jecxz
dec
jbe
xor
sub
xchg
imul
test
stos
rcr
clc
inc
lret
test
outsb
stc
lret
ret
pop
xchg
mov
sbb
dec
rcr
mov
mov
ljmp
jmp
jmp
insb
mov
out
push
lahf
sahf
insb
mov
add
dec
sahf
cmp
sub
or
test
insb
pushf
pop
jecxz
mov
test
jno
stos
push
jecxz
mov
cmp
int
test
sbb
jo
rorl
sub
nop
mov
xchg
add
rcll
sub
gs
xorb
cld
mov
push
ret
jae
ja
push
and
loop
cs
pop
dec
mov
test
adc
clc
dec
shll
push
pop
jb
pop
fdivrp
aam
pop
mov
push
arpl
in
aad
xchg
scas
es
mov
out
cwtl
in
jg
xchg
mov
lods
or
out
inc
ret
ljmp
fwait
mov
and
shll
sub
test
cmp
xchg
movsl
mov
dec
add
stc
mov
ffreep
jmp
pop
mov
inc
stos
pop
cltd
shlb
mov
mov
adc
sbb
adc
mov
int
jl
mov
xchg
addr16
iret
push
mov
jg
fstps
mov
fcmovne
inc
pop
xchg
add
cmp
outsb
pop
or
add
push
and
dec
add
addr16
popf
inc
or
enter
test
mov
sarl
jle
dec
inc
into
mov
test
adc
jmp
mov
inc
fldenv
dec
sub
cld
inc
les
cmp
lret
dec
mov
wrmsr
shrb
jne
dec
cmpsl
pop
push
xchg
cmp
or
psadbw
rcr
and
lret
popa
lods
jae
xchg
icebp
icebp
dec
lds
cmp
pusha
xor
sbb
ficoml
je
mov
repnz
mov
push
js
jae
push
push
and
pop
fpatan
jno
mov
or
pusha
xchg
loope
rcrl
fisubrs
pop
xchg
adc
jge
pushf
sub
aas
add
addr16
add
mov
subb
js
outsl
add
push
inc
jns,pn
ret
repnz
pushf
sub
imul
in
int3
mov
mov
call
jo
fistps
sbb
pop
sub
pop
jmp
pop
cmpsl
lea
pop
arpl
mov
inc
test
adc
mov
xchg
jbe
mov
adc
and
xchg
mov
jb
cltd
fstps
sub
ljmp
xchg
push
pushf
xor
cmp
jnp
lock
icebp
cltd
int3
out
mov
mov
push
dec
mov
insl
sub
push
adc
jg
jmp
es
jp
icebp
inc
cwtl
imul
push
and
lock
imul
pop
jge
les
sahf
sarb
add
ror
in
ficoms
int3
sub
scas
push
gs
inc
repz
fldl
repnz
rclb
adc
aad
mov
inc
lcall
push
lret
into
cltd
mov
add
inc
pop
mov
inc
lods
jbe
enter
pushl
mov
cmpsl
nop
or
mov
pop
ret
lahf
lods
popa
xchg
testl
std
sbb
xchg
clc
mov
jno
mov
xor
mov
aaa
shll
das
sub
mov
stos
jo
test
adc
xchg
pop
xchg
xchg
jp
rcrl
andl
xor
scas
aaa
cli
test
hlt
cltd
mov
or
mov
scas
mov
xor
adc
mov
and
jno
adc
push
repz
inc
mov
mov
sub
test
insl
ret
pop
push
fs
mov
clc
lock
mov
scas
inc
jle
jne
push
insb
dec
cmp
popf
fldz
popf
mov
fidivrs
xchg
push
scas
push
dec
lahf
mov
adc
push
dec
dec
xchg
push
aam
cmp
into
test
xor
ds
test
das
cmp
lcall
cli
dec
rorl
pop
mov
jnp
mov
addr16
mov
insl
xor
shlb
mov
dec
mov
inc
jns
sub
jae
mov
dec
push
mov
scas
xchg
in
cmpb
or
into
jnp
cmp
sbb
ret
lret
sbb
lret
push
repnz
xchg
or
push
rcrl
out
mov
inc
adc
cld
fstpl
rcrl
shrb
cs
add
sub
mov
and
ja
dec
adc
sahf
scas
mov
mov
mov
sub
out
dec
sub
or
fwait
jo
dec
pop
fmull
inc
jo
adc
push
repnz
cmp
xor
dec
nop
lahf
mov
push
xchg
sbb
push
ret
push
xchg
or
mov
or
mov
mov
mov
sbb
adc
xor
test
lea
dec
inc
ss
push
mov
push
cld
inc
dec
int
iret
in
gs
xchg
int3
imul
rorl
mov
mov
xor
fdivrp
inc
cwtl
int
sbbb
ljmp
xchg
popf
push
mov
dec
sub
pushf
mov
adc
sbb
cmpsb
stos
movsl
and
adc
das
pop
or
cwtl
mov
push
outsb
add
into
dec
fsubrs
push
test
jge
pop
fwait
cli
add
adc
adc
test
in
mov
adc
inc
test
scas
std
cmpsl
pop
cli
fs
xchg
fs
xchg
and
loop
mov
ret
jns
lahf
jns
fxch
aaa
stos
fsubl
sbb
add
lock
mov
lcall
or
xchg
mov
pushf
add
inc
xor
sti
xchg
arpl
and
adc
dec
xchg
xlat
and
out
dec
mov
rol
sbb
adc
bound
mov
andb
xorb
adc
dec
mov
hlt
loope
xchg
sub
loop
inc
fsubs
outsl
ja
repz
hlt
shr
shl
ja,pn
adc
into
imul
das
add
pop
pushl
push
pop
xor
leave
enter
dec
mov
loop
adc
or
sbbb
pop
mov
xchg
pop
seta
movq
mov
or
mov
lret
out
jecxz
fisubrs
jge
sarb
sbb
out
mov
xchg
xchg
xor
arpl
cmp
xchg
push
push
push
and
xchg
pop
rcll
cmpsb
cmp
fistpll
loope
push
add
addl
jmp
pop
out
mov
shll
movsl
push
dec
jnp
fs
or
out
rol
int
or
cmp
invd
sbb
or
es
or
cltd
mov
mov
insl
jg
out
xchg
leave
cwtl
nopl
or
jno
popa
jecxz
sbb
inc
out
cmp
movsl
test
xorb
lds
mov
adcl
add
fst
loope
rol
or
gs
jl
xchg
add
mov
imul
movsb
dec
ljmp
fsts
dec
push
rorl
push
test
aam
iret
test
jnp
popa
mov
cmpsb
ror
xchg
mov
subb
xchg
clc
xor
inc
mov
xchg
sahf
mov
jne
int3
iret
test
pop
xor
add
push
sub
mov
or
push
notb
aad
addr16
push
sub
dec
popa
pop
fldt
pop
push
mov
mov
ja
insl
rep
sbb
add
pop
xchg
jae
cmpsl
sbb
jge
js
fdivrs
mov
cmp
test
xor
xchg
pop
popf
arpl
sbb
sub
dec
lahf
add
add
ss
dec
adc
mov
fnsave
mov
pushf
dec
bound
jbe
mov
lret
or
mov
sub
mov
aaa
push
test
aam
inc
ja
ljmp
loop
mov
movb
aad
loope
imul
movsl
inc
shrb
lods
push
sti
sub
jnp
dec
hlt
mov
inc
xchg
rcrb
mov
cmp
sahf
xchg
outsb
adc
push
pop
push
cmc
sbb
adc
xchg
dec
fists
xor
mov
push
push
jecxz
fwait
ret
loopne
jne
add
pop
in
push
add
cmp
aam
pop
cmp
inc
dec
push
rcrb
mov
mov
inc
negb
mov
xchg
fdivr
cmpsb
cmp
xor
daa
push
sub
xor
pop
test
fwait
ret
lods
pop
mov
divl
loop
enter
fwait
xchg
adc
pop
cmp
xor
xchg
cmc
and
sbb
movsb
jle
inc
imul
add
dec
stos
mov
ret
push
aaa
adc
in
jmp
xchg
jl
push
mov
fisubs
inc
jno
jne
aaa
adc
test
and
aas
aam
inc
or
or
pusha
or
out
fdivrs
add
fiaddl
imul
cmp
mov
xchg
push
out
and
std
jmp
in
push
xorb
popf
fs
filds
xor
repz
lea
fistpll
push
mov
into
int3
inc
jo
xchg
shr
mov
out
xor
xchg
dec
xor
inc
lahf
data16
in
fs
mov
adc
pusha
outsb
sti
bound
daa
popa
push
mov
add
cmp
pop
idivl
stos
mov
setns
lea
inc
pop
cmp
fists
push
pop
xor
sahf
sub
mov
and
test
mov
or
sbb
or
test
or
stc
push
les
pop
push
dec
or
dec
pop
push
add
xor
pop
push
lods
jne
les
repnz
aad
mov
ss
xlat
in
lds
mov
iret
jno
test
icebp
aas
pop
shrb
shrl
insl
dec
mov
jno
std
sub
dec
lret
xchg
jne
mov
lods
push
and
movsb
cmpsb
loop
out
ficompl
sbb
cltd
int3
int
inc
push
push
movsl
insb
and
outsl
and
hlt
imul
sub
adc
mov
lea
ret
aaa
shll
push
or
or
mov
mov
adc
cmp
cmp
add
jp
add
or
bound
mov
subl
pop
int
adc
aad
dec
cmp
xor
adc
mov
popf
rorb
lret
mov
popf
int3
addl
mov
cmp
dec
jnp
xchg
scas
push
loopne
lret
inc
jae
pop
mov
rcrl
push
mov
test
mov
lock
bnd
sbb
mov
in
adc
mov
aam
sahf
lods
jp
lds
jle
test
gs
imul
push
mov
neg
add
add
push
lds
xchg
ja
pop
shlb
mov
mov
sub
imul
out
xchg
scas
adc
xor
divl
into
ret
sub
mov
push
leave
mov
ja
cmp
lcall
adc
nop
jns
sarl
jecxz
xor
les
inc
clc
or
shlb
adc
repnz
pusha
ret
xchg
in
popa
aam
push
push
inc
aam
dec
dec
hlt
adc
movsl
dec
jge
pop
stos
fwait
imul
or
xchg
ss
stos
mov
ret
mov
add
mov
add
cmp
ret
xor
sub
arpl
or
or
stc
out
movsb
jns
ss
xor
roll
out
mov
mov
cmp
in
push
jno
fwait
mov
mov
inc
jno
into
xchg
or
scas
mov
xchg
mov
sbb
fdiv
test
hlt
xchg
mov
mov
test
daa
mov
rcrb
lahf
data16
add
add
mov
xor
cmpsb
jns
cmp
lds
jl
fstps
add
push
xor
addr16
out
mov
mov
mov
test
cmp
push
notl
jmp
pop
cmp
jmp
mov
inc
mov
fwait
shll
daa
cmpsb
jmp
test
test
jnp
clc
sub
and
pop
ja
lods
je
mov
stc
jne
xchg
push
shr
scas
in
adc
lea
das
xchg
mov
daa
into
and
add
insb
aas
sub
out
pusha
nop
cmpsl
cmp
mov
lods
loope
cmp
xchg
fmuls
pop
in
ljmp
xlat
mov
inc
aaa
pop
out
and
push
jae
gs
clc
clc
xchg
inc
xchg
pop
call
xor
xchg
enter
loopne
cmp
dec
jae
push
and
sti
arpl
xchg
icebp
test
mov
pushf
idiv
imul
pop
jns
mov
push
arpl
mov
ds
repnz
repnz
clc
mov
repz
pushf
insl
das
stos
ret
fistpll
and
add
xor
push
or
pop
push
das
in
mull
bswap
adc
pop
cld
int3
roll
push
addr16
mov
mov
jge
lds
ret
dec
dec
mov
and
out
js
xchg
popa
dec
sbb
into
sbb
sub
adc
pop
xchg
add
pop
aam
fsubrl
iret
pop
push
mov
flds
jbe
fs
dec
mov
cmp
das
push
cmp
push
or
stos
jg
loop
adc
bnd
test
cs
pop
mov
sahf
add
push
pop
cmp
add
inc
or
xlat
sbb
repz
ljmp
add
pop
cmpsl
in
test
jb
mov
jp
scas
mov
into
xor
loopne
out
mov
mov
lcall
mov
pop
adc
sub
add
or
ret
test
pop
bound
fimuls
shlb
cli
pop
mov
jbe
xchg
adc
insb
dec
xchg
and
notl
js
push
inc
cli
adc
pop
xor
add
cmp
xchg
jge
dec
ret
fildl
and
or
jne
cmp
xlat
dec
fisttpl
mov
inc
stos
aam
jecxz
loop
xchg
or
repz
xor
xchg
decb
iret
mov
add
pop
arpl
nop
idiv
mov
xor
jp
imul
in
or
xchg
movsb
sarb
test
insl
and
xor
lret
cmp
ds
dec
sbb
mov
add
cli
ret
scas
pop
push
inc
rol
arpl
mov
mov
jbe
mov
adc
lock
in
and
outsb
mov
push
jmp
mov
shrl
add
daa
arpl
cmp
rol
pop
xchg
js
xchg
mov
arpl
jle
pop
push
fists
mov
pop
shl
ret
sub
loop
loope
loopne
out
push
dec
adc
mov
lock
int3
hlt
push
outsl
daa
in
pop
lods
int
ja
lahf
stc
inc
test
enter
jle
sbb
mov
jnp
sti
push
popf
inc
sub
bound
insl
dec
pop
lea
ret
push
or
cli
jecxz
fcmovnb
xchg
or
scas
mov
mov
push
push
idivb
xlat
cmp
lods
mov
clc
clc
stc
daa
lds
xor
out
dec
sub
enter
lret
int3
leave
pop
in
sub
mov
inc
in
sbb
add
push
test
sub
andl
bound
mov
shlb
push
push
push
cld
js
mov
adc
mov
aam
fcmovbe
xchg
cwtl
cmpsl
xchg
pcmpgtd
mov
orb
push
adc
lock
fcomi
push
dec
sub
pop
mov
or
lahf
xor
jp
adc
shrl
mov
jmp
push
xchg
cwtl
pushl
test
cs
lahf
inc
das
mov
cmp
and
out
mov
insb
fldt
or
mov
mov
lcall
ljmp
pop
jecxz
iret
sbb
xor
cmc
push
aas
out
and
pusha
jbe
cld
jl
addr16
inc
sub
xchg
cmc
cmpsl
mov
fistl
or
inc
jp
jecxz
cwtl
push
jb
mov
push
icebp
mov
iret
test
rolb
cmp
jnp
push
pop
mov
mov
mov
std
xchg
pop
rcrb
sub
rcl
lock
and
sbb
lret
cmp
push
das
xorl
sahf
mov
cmpl
jle
cmp
push
shlb
pop
and
push
add
dec
add
jp
dec
imul
js
xor
loope
dec
xchg
mov
in
dec
adc
je
stos
sbb
add
sub
xor
lods
and
sbb
mov
pop
clc
stos
jl
jl
scas
hlt
adc
dec
addl
sbb
xor
push
pop
mov
or
push
bound
int3
pop
adc
ror
lds
push
and
push
ret
mov
mov
jg
push
xor
adc
rcl
mov
jo
loope
adc
sub
mov
mov
hlt
int3
popa
mov
lods
mov
fwait
fs
out
add
cli
jmp
push
jl
pushf
sub
rorl
mov
pop
sbb
in
jnp
fidivl
popa
mov
scas
out
rolb
popa
pop
lahf
xor
add
jne
aad
mov
mov
testb
push
add
or
pop
mov
inc
add
sbb
mov
fwait
leave
mov
xor
sub
out
dec
push
jge
mov
popa
mov
sbb
inc
iret
or
outsl
inc
pop
es
jp
rcrb
xor
mov
mov
inc
add
mov
jae
jle
imul
cmp
push
aam
in
or
imul
cmp
pop
or
outsl
xchg
jle
inc
inc
pop
sub
out
pop
adc
sbb
push
push
outsl
ja
mov
lds
shrl
inc
mov
or
pop
in
sub
in
mov
clc
fistpll
mov
out
rolb
add
inc
or
jl
adc
pop
ret
adc
pop
repnz
clc
sub
jne
lds
cmp
clc
ds
scas
and
cmc
scas
inc
movb
cmp
shrl
in
sahf
jb
lods
in
xchg
jnp
cmp
in
ss
adc
mov
pusha
add
outsl
outsb
push
push
cmp
xchg
or
adc
mov
sbb
test
movsb
inc
xor
lcall
sub
push
jns
iret
fcmove
mov
sub
sub
scas
inc
insb
rcll
in
xor
js
addl
jle
pop
or
shlb
out
jne
jmp
call
pop
dec
ret
mov
fcmovne
inc
mov
mov
push
inc
inc
cmc
xor
popf
cmc
fucomi
cvttps2pi
cmp
and
clc
add
gs
jecxz
push
dec
xchg
sbb
xchg
mov
in
mov
sbb
test
in
int
mov
test
xlat
add
cwtl
inc
sbb
add
cmpsb
dec
xchg
dec
push
sbb
fwait
add
loop
mov
mov
cld
xchg
cld
jge
sbb
aam
cmp
in
cli
push
rolb
xchg
fucomi
sbb
inc
dec
push
loop
adc
into
xchg
loope
ds
lock
daa
cli
call
push
sbb
icebp
sbb
cmp
xor
clc
xor
cmp
test
lods
loopne
xchg
push
xorl
inc
adc
dec
in
lock
fs
movsl
sbb
popf
mov
aam
mov
push
sbb
mov
xchg
mov
dec
push
popf
fbld
push
inc
jns
push
inc
shl
mov
mov
and
jp
movsl
loop
fistps
inc
add
imul
add
in
pop
inc
cwtl
push
pop
jbe
ds
push
movsl
mov
lock
testl
mov
cltd
adc
and
lret
movsb
cmpsl
rcl
sub
out
xchg
pop
movsb
mov
in
fstp
and
add
adc
pop
xchg
inc
scas
fisttpl
sub
push
lods
dec
and
hlt
mov
push
mov
cmp
ljmp
jecxz
lcall
dec
xchg
hlt
cmp
lahf
xor
fcomip
pop
mov
dec
in
cld
cmpsl
lret
xchg
fnstsw
in
xlat
lods
jo
cltd
sbbb
push
lahf
pop
mov
xchg
addr16
cmp
mov
xchg
sbb
xor
xor
and
cmpsl
movsl
push
add
push
mov
jbe
push
xchg
cld
add
cltd
frstor
mov
or
jne
sub
jle
mov
fcoms
sbb
push
push
imul
mov
mov
ss
fwait
cmp
fsubp
sbb
add
fidivs
fsubrl
mov
lds
fstpt
bnd
dec
lcall
xor
add
cmp
sbbl
in
mov
fs
mov
pop
stos
popf
pop
pop
out
pop
sub
inc
pop
add
test
adc
popa
inc
pop
push
xchg
pushf
pop
ss
ja
mov
and
push
or
pop
fimuls
ret
out
adc
xchg
stos
mov
xor
out
and
dec
ret
inc
out
inc
decb
shll
loopne
fiadds
mov
andl
jecxz
jecxz
test
sub
lea
xchg
fs
and
popf
xchg
mov
pushl
jns
xchg
adc
jnp
pop
xchg
mov
sub
ja
bswap
push
pop
cmp
aam
dec
push
sbb
orb
ja
sub
xchg
loopne
mov
xlat
pop
jecxz
inc
cmp
cmpsl
es
mov
leave
sub
mov
cli
cld
and
push
xor
mov
xchg
pop
fstpl
sti
add
rorl
jmp
sti
insb
inc
es
xchg
xor
mov
pop
ror
shll
and
inc
pop
popa
dec
jno
js
xchg
and
push
add
cltd
mov
popf
sub
das
jg
push
and
nop
call
fistps
push
out
dec
mov
mov
sti
cwtl
lcall
jnp
or
mov
jnp
hlt
in
dec
ss
cwtl
jp
xchg
pop
lret
pusha
mov
inc
mov
sbb
adc
xchg
adc
jp
jae
mov
add
mov
mov
ds
arpl
das
js
inc
sub
mov
jno
mov
mov
aad
mov
iret
inc
loope
sbb
arpl
daa
loop
cmpsb
addl
mov
xchg
popf
test
xchg
push
arpl
xchg
gs
lds
push
jno
inc
dec
iret
stos
std
jb
xor
out
lods
outsb
and
sub
push
cwtl
std
vpcmpgtb
adc
in
pop
xor
jnp
fildl
movsl
out
sub
push
orb
fsubs
out
lret
mov
pop
int
and
roll
mov
repnz
xchg
cmp
stos
push
loopne
lds
fwait
xor
mov
je
flds
test
sub
adc
pop
repz
and
rcll
cmp
faddp
aad
dec
lret
scas
ljmp
push
idivb
adc
insl
imull
rolb
ds
cmpsb
lock
fld
cmc
popl
mov
movsb
jl
cmpsb
fisttpll
movsb
pop
mov
test
out
mov
inc
adc
inc
adc
jecxz
or
lods
insb
sub
int
popa
loopne
into
push
out
int
sbb
mov
push
sar
sti
add
std
add
daa
mov
lret
xor
loop
outsb
jle
adc
lcall
stc
js
cs
shll
jecxz
mov
adc
mov
sysenter
adc
cmp
test
push
inc
lds
rcll
jae
sub
sbb
xchg
insb
enter
push
les
cltd
imul
pop
call
xchg
or
repz
ds
jb
push
subl
sbb
xchg
aad
lcall
leave
jecxz
movsl
or
push
push
xor
dec
out
sbb
cmpsl
adc
xchg
pop
adc
je
aam
in
cmp
cmp
jne
pop
cmpsb
dec
mov
mov
push
flds
out
int
and
pop
add
lea
loopne
cwtl
mov
bound
or
cmp
imul
adc
daa
jecxz
xor
jne
ficoml
inc
mov
iret
andl
inc
out
and
inc
xchg
mov
push
pop
scas
ror
stc
or
and
lods
lahf
inc
xchg
push
and
mov
das
incb
adc
mov
fucompp
push
dec
shl
ljmp
jne
fidivs
jmp
push
cld
mov
cmp
mov
xor
mov
repz
gs
and
sarb
xchg
cs
mov
inc
fwait
scas
sarb
flds
lahf
xor
inc
jns
pop
mov
or
jne
imul
inc
lahf
call
sub
mulb
mov
lods
cld
popf
mov
xor
xchg
push
or
inc
aam
fimuls
jmp
fnstenv
pop
stos
sbb
sub
jbe
mov
adc
xchg
jecxz
cmp
div
fnsave
xlat
mov
push
loope
sbb
frstor
daa
mov
out
pop
test
stc
or
adc
notb
out
mov
xchg
aas
popa
pop
aaa
outsl
xor
ror
bound
mov
cmp
jnp
ret
xchg
add
loopne
inc
cmp
mov
jnp
sbb
orb
into
fs
xor
sbb
or
popa
sbb
pop
lea
cmp
mov
sub
sbb
jge
dec
ja
push
xchg
int3
pushf
sbb
inc
das
dec
pop
ror
fs
sbb
pop
out
fwait
loopne
fists
sub
loop
push
xchg
sub
ja
add
cmpsb
dec
sarl
fsubrp
ja
dec
repz
pop
inc
push
dec
jbe
mov
stc
iret
cmp
sub
rcl
clc
in
int3
test
lahf
lcall
incb
mov
jbe
and
xchg
ss
and
aaa
out
daa
xchg
dec
daa
mov
xchg
push
push
xor
ds
cltd
mov
xor
push
xchg
sbb
rcrb
stos
cwtl
mov
bound
and
sub
mov
ret
xor
adc
stos
inc
xor
popf
adc
mov
xor
push
int
lods
and
push
repnz
jle
loope
pop
imul
push
inc
imul
cs
je
adc
out
mov
inc
sti
mov
in
xor
push
test
scas
imul
nop
sub
mov
ljmp
cli
lret
mov
adc
jo
mov
cli
push
aad
inc
inc
rorb
sub
mov
or
mov
testb
mov
test
cmp
mov
sub
xchg
dec
mov
dec
jle
xchg
lret
xchg
jecxz
int3
icebp
mov
jns
cmp
in
mov
xchg
sbb
add
fldenv
es
lds
xor
and
mov
sbb
sarl
cwtl
imul
popf
sub
scas
test
call
sbb
sub
movsb
icebp
push
call
sbb
jnp
addr16
jns
mov
imul
dec
inc
arpl
aas
add
negl
das
popa
pop
incl
lods
cmp
dec
jl
pop
repz
sub
cwtl
mov
xorl
scas
dec
in
push
iret
mov
jmp
push
arpl
sub
call
imul
add
dec
ss
inc
fisubs
fs
jmp
cmpsl
insl
jb
or
lock
aaa
adc
mov
rcl
jg
fistps
repz
inc
mov
mov
rorl
jbe
out
xchg
pop
test
pushf
cmp
inc
and
jns
je
mov
inc
inc
adc
push
jne
mov
or
adc
fldlg2
sub
rol
shrl
xor
cltd
fcoml
loop
je
sbb
andb
inc
out
sub
push
jnp
push
std
aaa
dec
cmp
jne
das
push
int
add
xor
sub
ret
out
jge
cmpsb
push
add
adc
lds
mov
repz
and
xor
daa
icebp
iret
cmc
sub
jl
cmpsb
cmp
xchg
jb
int
mov
push
lahf
or
mov
push
test
shlb
cmp
je
add
inc
adc
stos
scas
loop
mov
dec
cld
ja
cmp
sbb
jne
out
push
add
lret
xchg
mov
xlat
mov
imul
test
push
daa
push
jns
sbb
fidivs
lahf
ljmp
or
or
stos
sub
cmp
adc
xor
jae
inc
push
pop
jbe
lods
xchg
adc
outsl
popa
mov
daa
pop
xorb
sbb
jmp
sub
mov
shrl
lret
add
mov
mulb
cltd
fwait
push
inc
mov
cmp
movsl
push
mov
es
mov
sbb
insl
jne
mov
insb
testl
mov
sbb
jg
lret
mov
xchg
out
mov
mov
test
add
movl
push
and
shlb
inc
dec
pop
lods
xor
mov
adc
mov
sub
movsb
in
iret
scas
lahf
call
mov
pop
sub
inc
mov
jns
push
mov
iret
sbb
or
repnz
or
fidivl
popf
add
push
cltd
and
popa
cmp
in
mov
or
pop
sub
ds
add
mov
or
testb
sub
pop
sahf
scas
loop
es
pop
mov
add
inc
inc
rcl
pop
mov
pop
cmc
loope
adc
outsl
enter
test
fstpt
cs
int
dec
xor
jne
add
mov
aad
clc
je
movsl
inc
ljmp
rcll
repnz
in
pop
fildl
jnp
cmp
pop
shll
lods
leave
jle
bswap
or
les
inc
pop
jge
pop
orl
mov
jnp
pop
cwtl
mov
add
sbb
sti
jo
call
jmp
xor
add
add
jge
les
test
out
aad
mov
cltd
andb
xchg
xlat
cmp
popf
stos
popf
out
mov
and
shrl
mov
inc
cmp
loopne
push
push
call
add
ret
adc
mov
sub
cmpsb
mov
outsb
cmp
adc
push
mov
mov
fcmovu
cli
mov
lock
icebp
in
xchg
lods
mov
sahf
pop
clc
xor
mov
jg
cmp
mov
cmp
cmpsb
jo
or
sbb
and
imul
lahf
jmp
inc
sub
pop
xchg
dec
pop
mov
pop
xchg
adc
xor
into
pushf
fildll
push
mov
rol
ror
cmc
jae
or
sbb
mov
jle
jo
icebp
dec
add
aad
jne
mov
cmpsl
mov
cmp
loopne
inc
xchg
test
mov
hlt
jge
ss
cltd
jne
push
push
fcoml
mov
jns
stc
dec
test
arpl
pushf
repz
mov
sbb
and
inc
mov
sub
sub
in
mov
sbb
cltd
cld
mov
or
subl
jne
out
pop
pop
cltd
cmpsb
movsb
cwtl
pop
add
mov
xchg
out
pop
gs
sbb
xor
test
test
adc
jnp
arpl
jp
or
dec
push
lods
and
sarl
pop
test
pop
and
les
push
mov
outsl
or
inc
inc
push
jbe
repz
mov
xor
mov
out
mov
adc
adc
jo
popf
repnz
mov
xchg
lods
add
mov
mov
jns
test
push
pop
jp
push
hlt
aad
icebp
add
mov
push
cmp
fdivs
push
lea
mov
test
cs
inc
jae
jge
imulb
dec
inc
lret
add
call
into
mov
test
adc
cmp
mov
popw
sub
insl
mov
lds
hlt
cmp
sar
stos
test
adc
repnz
inc
mov
rcrl
xchg
inc
cmp
je
sub
jb
or
icebp
js
xor
mov
sahf
mov
loop
cltd
fildl
push
dec
inc
outsb
pop
cmpsl
insl
xlat
inc
enter
leave
cmpsb
outsl
or
movb
ss
sbb
inc
adc
or
jno
iret
pop
out
sub
aaa
std
iret
fistps
fwait
cmp
rorl
sbb
adc
fst
loopne
orl
or
dec
pop
inc
adc
repnz
cmc
ret
xlat
xor
dec
loopne
int
xchg
mov
adc
lods
mov
enter
xchg
mov
les
insb
pop
sbb
pop
mov
test
jo
mov
int3
mov
in
xor
cmpsb
mov
cmc
ljmp
mov
adc
out
xchg
rclb
xor
and
jne
sbb
mov
cmp
push
push
jmp
dec
jne
fisubrl
mov
xchg
cmp
sub
sub
fmuls
in
repz
xchg
dec
daa
roll
xor
push
fxch
hlt
mov
xlat
xchg
dec
pushf
inc
cmp
cmpsl
hlt
ror
mov
jle
nop
int3
inc
movsb
inc
mov
ja
out
ss
ficomps
pushf
ljmp
xchg
daa
pop
adc
adc
sub
or
sub
and
adc
mov
pop
fisttps
imul
mov
sub
call
out
aas
fs
mov
addr16
in
dec
sub
push
push
inc
in
inc
add
cmp
dec
or
mov
and
incl
mov
and
pop
shlb
imul
in
mov
lcall
push
sub
dec
jge
sub
mov
fsubl
jecxz
push
mov
insb
and
adc
xor
add
testb
lds
jne
fadds
sbb
cmp
sahf
inc
sbb
ret
es
fnstsw
add
lret
mov
inc
xor
std
mov
push
fiaddl
mov
roll
es
mov
popa
aad
mov
pop
adc
and
cmp
add
es
std
enter
add
mov
adc
add
xchg
jp
cwtl
cmp
gs
dec
jecxz
dec
xchg
and
jnp
pop
pmuludq
cli
xchg
jnp
outsl
fsts
repz
mov
xlat
jne
dec
jo
cmp
xchg
cltd
fsubr
sbb
mov
jb
mov
and
ret
out
sbb
cmp
cld
mov
scas
cmc
xor
enter
or
mov
test
mov
jne
scas
sarb
inc
std
xchg
pushf
lret
xor
mov
movsl
adc
mov
shlb
dec
jnp
jge
inc
sti
jbe
sub
icebp
mov
orl
cmpb
shl
pop
fistps
ja
pop
inc
xchg
adc
pop
dec
mov
or
fdivs
mov
lahf
rcrl
add
cmpsb
jnp
nop
pop
and
xor
out
pop
mov
insb
in
adc
pop
mov
and
scas
xor
jle
sbb
pushf
or
xchg
inc
sbb
sub
add
mov
xor
sbb
cld
jmp
repz
mov
pop
lret
pop
jge
mov
fwait
and
pop
arpl
sbb
jecxz
pop
adc
inc
cs
xchg
pusha
pusha
out
jp
pusha
fstpl
clc
fidivl
pop
cli
cwtl
jne
adc
push
and
push
in
xor
int
push
xchg
mov
fwait
orl
sub
dec
cmp
pop
xchg
sub
fdivrp
push
and
mov
push
mov
jl
mov
js
lcall
das
scas
mov
xor
inc
cwtl
push
rcrl
sub
addr16
in
mov
fcmovnb
mov
out
popf
fcmovne
data16
mov
jmp
xchg
pop
leave
rolb
test
adc
mov
fisubrl
push
mov
stc
push
fdivrs
es
or
stos
cld
shl
cmp
leave
fadd
xor
sbb
das
aam
mov
ss
push
stc
mov
jbe
test
xlat
mov
adc
sub
pop
adc
outsb
xchg
push
out
das
sub
pop
scas
inc
push
cld
mov
xor
mov
push
out
lret
dec
leave
fwait
add
loop
stc
std
out
sbb
and
xor
xchg
add
stos
test
test
pushf
or
mov
sbb
add
das
aad
pushf
sbb
push
push
out
xchg
das
jmp
mov
cmc
shl
nop
and
iret
mov
inc
mov
or
das
gs
adc
inc
inc
add
and
sbbb
fisubrl
rclb
and
dec
mov
aam
pop
pusha
stos
loop
lods
pusha
scas
mov
xchg
mov
les
arpl
rorb
push
mov
lods
pop
jns
lds
imul
movsl
push
fs
xchg
jge
add
xchg
push
mov
mov
mov
inc
dec
mov
sbb
jmp
js
aad
aad
push
xchg
fs
sbb
push
jae
xchg
jle
jae
inc
cmp
or
pop
sbb
hlt
imul
aaa
loopne
push
aam
movsb
mov
or
test
js
and
daa
mov
mov
pop
mov
test
push
popf
scas
ljmp
sbb
ljmp
repnz
scas
or
imul
mov
popa
add
fldl
and
aad
or
test
pop
scas
daa
mov
add
aad
mov
pop
sub
sub
gs
inc
add
dec
dec
mov
lock
jae
xchg
sbb
fdivrl
andl
push
pop
cmpsb
pop
pop
add
dec
xlat
jae
fsubrs
negl
and
jns
pop
call
inc
mov
push
in
in
mov
mov
imul
aas
mov
cwtl
or
lret
ret
aad
imul
pop
into
push
and
pop
int
mov
cmp
add
xchg
lea
outsb
pushf
inc
dec
mov
or
xchg
mov
jecxz
icebp
outsb
push
cmp
sbb
cmp
pop
lea
and
lret
jg
push
rol
lods
add
xor
in
hlt
loop
sbb
dec
inc
adcb
adc
mov
loopne
pop
sub
xchg
popa
les
push
imul
jb,pn
push
cmp
adc
hlt
mov
add
jnp
mov
rclb
dec
call
in
data16
adc
sub
les
xchg
mov
pop
pop
add
sysenter
pop
iret
or
fiadds
jmp
cmpsb
repnz
sub
test
mov
fmuls
in
fwait
add
xchg
inc
inc
orl
cmpsl
inc
and
push
inc
cmp
mov
and
xlat
sub
xor
ja
testb
mov
push
sahf
les
xchg
hlt
les
push
add
jbe
dec
pop
nop
xor
lcall
data16
xchg
push
mov
sbb
inc
jl
or
leave
call
cmpsb
mov
addr16
outsb
in
mov
lret
or
cwtl
int
push
adc
add
or
pop
shrb
stos
ret
cmpsl
sub
insl
popa
mov
leave
clc
loopne
jp
sbb
xchg
or
xchg
scas
or
mov
out
cs
xchg
push
jne
push
aam
mov
mov
xor
punpcklbw
sahf
andb
mov
add
or
adc
sub
call
jecxz
nop
inc
ret
xchg
mov
mov
xchg
call
je
sub
push
or
es
stc
ret
shlb
push
mov
int
add
lcall
or
lea
xor
mov
and
sub
sbb
cmp
and
sarb
out
push
jbe
mov
lods
mov
shrb
daa
xor
cmc
dec
inc
mov
dec
stos
aam
lret
out
stos
jmp
ss
orb
iret
fcomp
into
out
bound
xorb
outsb
test
enter
mov
jae
inc
fmuls
sahf
pop
fwait
dec
cmp
in
fisubrl
mov
ja
aam
insl
std
inc
lret
in
movsb
fld
dec
imul
inc
adc
inc
cmp
into
daa
enter
sbb
rorl
int
je
loop
insl
or
ljmp
jb
sub
cmp
jae
cmp
daa
das
mov
jle
add
stos
mov
data16
movsl
int
xlat
and
push
mov
fstl
push
incl
mov
or
out
loopne
lret
xchg
lahf
mov
shl
rol
stos
cltd
clc
xchg
and
jge
sti
inc
jg
pop
shll
in
and
add
out
mov
call
outsb
scas
sbb
sub
mov
mov
idivl
dec
adc
xchg
push
aad
sub
insb
or
out
add
push
cmpsl
sub
fisttpll
std
notb
into
cmp
pop
push
jecxz
fistpl
mov
inc
nop
xchg
out
fmull
out
shr
je
ret
aad
mov
in
jnp
lcall
loope
mov
lret
mov
mov
mov
inc
enter
mov
aad
add
mov
inc
adc
mov
pop
movsl
data16
insb
std
mov
pop
jp
mov
cli
jg
jo
xor
scas
dec
loop
out
popf
dec
js
push
lret
pop
into
out
pop
jne
xchg
in
int
das
inc
fsubrl
push
jp
cmpsl
xor
cmp
xor
dec
xchg
mov
mov
imul
lods
int3
repnz
xchg
or
je
dec
cmpsb
addb
pop
xor
cld
out
push
sbb
fists
arpl
gs
popf
arpl
push
jnp
divb
cli
pop
push
cmp
cmp
icebp
mov
or
or
mov
push
jle
add
pusha
sub
sub
fbstp
jg
jmp
rep
push
xorb
dec
inc
push
mov
mov
lds
cmp
dec
inc
jne
dec
cli
sbbb
loop
addr16
test
mov
ds
pop
pop
mov
jge
mov
ret
call
out
pop
lds
and
movsl
iret
popl
dec
dec
inc
xchg
addr16
mov
mov
inc
test
leave
push
call
ret
sbb
loop
mov
icebp
sub
push
add
mov
jne
mov
pop
cmp
xchg
int3
adc
cld
imul
pop
rcrb
and
inc
popf
stos
loop
cld
mov
sbb
imul
pop
mov
lods
or
lret
lds
sbb
loop
cmp
pop
fistpll
add
jo
xchg
mov
push
or
dec
pop
dec
cmpsb
or
in
movsl
and
inc
add
arpl
cmp
loope
ss
push
aaa
mov
and
stc
cmp
jne
fwait
cmp
adc
les
sub
mov
in
cld
or
mov
or
add
jge
loope
imul
push
jbe
jno
subb
sub
cmpsl
adc
sub
or
lret
jb
add
test
and
inc
pusha
mov
lcall
jge
cmpsl
jo
mov
dec
addr16
std
sahf
jo
orb
mull
xchg
mov
mov
scas
and
push
push
fsub
inc
test
psubd
mov
add
pop
cs
movsl
mov
dec
inc
jg
cmpsb
push
sub
inc
adc
push
xchg
mov
mov
dec
sbb
mov
cmc
adcb
xorb
lret
pusha
cli
xor
sub
lcall
dec
iret
and
push
jcxz
xchg
dec
dec
mov
adc
cmc
lods
sti
mov
inc
sahf
jne
in
adc
ficomps
sbb
fmull
lret
fisttpl
jge
popa
jno
pop
add
mov
xchg
and
lcall
das
push
stos
push
pop
iret
pop
mov
lret
pushf
popa
ds
sti
add
std
ja
add
mov
or
pop
fcom
jo
mov
jnp
dec
mov
mov
in
jmp
cmpsl
inc
mov
jp
pop
mov
add
adc
add
mov
outsb
fsubl
rclb
mov
xor
pushf
sti
lods
inc
out
insl
mov
and
add
sbb
ret
daa
ss
jbe
test
mov
dec
push
test
dec
mov
in
pop
dec
or
shrb
or
nop
mov
jne
fwait
sar
test
mov
or
inc
mov
testb
mov
lock
dec
mov
sub
mov
adc
pop
mov
push
aad
mov
sbb
lods
out
cmp
add
sbb
pushf
dec
dec
jge
test
movsb
ljmp
push
dec
or
cmc
call
dec
das
jb
sti
mov
pushf
repz
loop
xor
xchg
add
sti
insb
pop
les
nop
pop
mov
rcrl
mov
aas
adc
adc
jmp
dec
or
sbb
and
js
hlt
fcomip
test
sbb
xor
mov
push
roll
sbb
xor
cld
push
subb
or
xor
ljmp
jmp
ja
std
mulb
out
lock
aaa
clc
mov
sahf
das
sub
scas
sarl
pushf
mov
loopne
pop
jns
cmp
int3
lcall
or
fmuls
push
cld
imul
stos
mov
sbb
les
sbb
fmuls
ffree
push
cwtl
add
inc
mov
xchg
mov
push
pop
jae
mov
ja
jbe
addr16
das
shll
xor
movsb
or
gs
jecxz
insb
pop
test
in
add
push
and
push
test
add
test
jmp
mov
push
adc
pop
lahf
pop
insb
loopne
ljmp
sbbl
mov
nop
xor
cmp
movsb
pop
dec
adcb
dec
in
push
js
mov
jmp
mov
add
adc
mov
xchg
ja
mov
data16
fdivr
and
jecxz
or
xor
push
popf
dec
mulb
adc
in
inc
lahf
in
xchg
fxch
mov
js
cwtl
adc
push
xchg
adc
xor
enter
mov
dec
out
or
xchg
and
idivb
neg
ljmp
subl
jne
daa
nop
stc
mov
mov
incl
notb
data16
sbb
testb
nop
adc
fwait
jbe
stos
and
mov
ror
insl
pop
xchg
pop
jns
cmc
lea
fwait
pop
cs
pop
inc
stc
xchg
push
clc
sub
test
out
gs
push
adc
jle
test
mov
lods
pusha
xchg
pop
push
and
push
imul
cmp
adc
mov
fsubrl
rcrl
mul
pop
mov
jecxz
xchg
mov
out
enter
iret
imull
jmp
jns
jp
xor
cmc
in
or
jl
out
pusha
popf
loop
int
test
in
rclb
push
dec
xchg
or
fscale
mov
sbb
jge
xchg
mov
ja,pt
xchg
arpl
mov
xor
add
inc
sub
das
adc
pop
fstl
mov
sbb
pop
lret
or
insl
add
mov
fs
fs
or
insl
mov
or
int
loopne
out
scas
popa
xorb
or
and
cmc
push
cmp
insl
rol
pop
lods
mov
imul
stos
dec
dec
mov
aaa
lods
into
or
lcall
jge
fs
sbb
icebp
mov
mov
ljmp
or
loope
cwtl
dec
das
es
sub
fists
inc
aaa
cmp
and
mov
pusha
push
outsb
jg
sub
push
adc
adc
fdecstp
mov
cmc
sub
lea
jge
xor
rolb
push
or
test
icebp
pop
sbb
rcrb
les
xlat
inc
xor
push
mov
cli
roll
test
push
and
outsb
mov
lods
addr16
dec
stos
inc
cltd
fistl
and
xchg
push
bnd
mov
dec
pop
sub
popf
into
insl
or
xlat
fists
imul
mov
adc
mov
cltd
fs
cmp
in
push
daa
mov
jae
cld
mov
lods
jecxz
inc
jecxz
xor
push
xchg
xchg
sti
pop
stos
jae
repz
xor
mov
mov
nop
iret
add
mov
pop
pop
int3
cwtl
test
loopne
sahf
std
fldcw
cli
add
push
inc
cmp
xchg
mov
mov
lret
adc
sbb
jecxz
dec
xor
jo
jnp
daa
aam
inc
sub
testl
push
or
cwtl
mov
lods
push
jns
cli
mov
xchg
inc
adc
sub
mov
jp
jae
add
jne
leave
stos
loop
outsl
ror
and
enter
clc
stc
stos
inc
dec
mov
repnz
icebp
aam
sti
les
popa
call
ret
mov
daa
popa
lcall
fdivl
jb
xor
cmova
cli
aaa
cmp
hlt
sarl
bound
outsb
mov
jae
add
or
je
dec
xor
fisubrs
fstpt
cmp
mov
outsb
leave
dec
loopne
pop
lret
cwtl
sbb
push
adc
lods
jp
sub
sbb
sbb
push
push
cltd
aas
pusha
rol
add
cmp
jge
in
adc
ja
dec
or
push
jo
pop
pop
fsubl
leave
pop
stos
xor
add
test
ds
pop
ja
push
sbb
es
les
jge
rcrb
push
gs
mov
stos
mov
ret
add
je
mov
sub
gs
mov
xchg
pop
dec
lods
pop
pop
jae
cwtl
jb
stc
xchg
rclb
or
pop
mov
pop
adc
pusha
fcomps
push
pop
adcl
sub
mul
loope
xchg
pop
push
inc
mov
dec
mov
add
xchg
jno
push
jb
xlat
xchg
add
sub
xchg
mov
aaa
cmc
pop
cwtl
adc
xor
shlb
js
out
std
pusha
mov
sbb
repz
mov
fs
push
xor
push
aas
fs
add
push
sub
inc
adc
and
mov
mov
movsl
xchg
in
add
cli
cli
or
fildll
cmc
movsl
daa
fucomip
fs
movb
cmp
movsl
daa
lea
jbe
data16
fs
aaa
inc
movl
test
loop
cs
adc
push
outsl
dec
jl
mov
test
sbb
addl
sub
ret
cmp
shll
int
add
xchg
roll
cwtl
mov
addr16
js
std
push
stos
aas
iret
addb
or
insl
jge
mov
fldt
adc
pop
int3
test
mov
mov
pop
dec
push
xchg
or
idivb
pop
je
std
dec
mov
fistl
icebp
pop
mov
fisttpl
push
repnz
nop
out
xchg
mov
ss
cmp
fiaddl
shrl
pop
and
cmp
mov
aad
fsubs
inc
cmpb
int
dec
cmp
stos
fs
jo
sub
and
sahf
jbe
test
jg
mov
jecxz
test
add
sub
adc
mov
in
xchg
jle
xor
or
push
mov
stos
lahf
mov
fwait
lret
iret
mov
and
out
negb
and
outsl
xchg
repnz
pop
or
push
outsl
and
sub
int3
jp
and
mov
pop
sbb
inc
rorb
popa
dec
in
leave
popf
sbb
and
mov
test
ret
mov
sub
push
dec
push
jp
pushf
insb
ja
lret
test
push
mov
sbb
lcall
jo
lret
testb
mov
sub
sarl
adc
xchg
add
cmpsl
and
and
rcl
lods
add
fdivrs
call
sti
cmp
inc
mov
dec
jae
test
roll
out
cmp
inc
sub
in
push
adc
test
movsb
and
push
inc
or
sub
add
push
jns
jecxz
jns
daa
push
aam
inc
shll
cmovo
bound
shll
add
inc
xchg
push
nop
scas
inc
fwait
in
out
dec
and
fcompl
push
sbb
dec
adc
roll
xor
dec
pop
sub
data16
mov
in
sbb
jne
pop
out
imul
mov
test
fs
mov
dec
jle
incl
inc
int3
inc
std
ljmp
sub
lods
mov
lea
add
xor
dec
jge
adc
xchg
imul
cmpl
leave
stos
movsb
adc
xchg
dec
mov
inc
out
out
leave
jno
push
xchg
push
stos
add
jno
mov
sub
sub
xor
cmp
adc
xorl
loope
mov
adc
arpl
mov
jno
subb
mov
aaa
or
or
lahf
jno
push
xor
scas
add
mov
adc
cmp
leave
or
xor
out
and
cmpsl
dec
jne
lcall
pusha
mov
and
ds
loope
dec
mov
cmpsl
push
xchg
sbb
dec
in
xchg
cmp
add
popa
clc
int
gs
and
mov
das
add
sub
lock
sti
pop
sub
leave
push
pop
push
repz
aam
fsub
pop
push
icebp
and
and
xchg
pop
imul
adc
mov
shll
test
leave
mov
dec
imul
sbbb
add
inc
lods
in
cld
jge
or
push
or
xchg
or
xchg
mov
lock
jo
xchg
es
hlt
insb
movsl
cs
xchg
xchg
into
pop
mov
bnd
pop
int3
std
xor
and
xchg
dec
jbe
lret
lods
and
shrl
jo
nop
repz
pop
mov
out
or
pop
dec
scas
jbe
mov
or
jle
gs
mov
pop
stc
bound
xor
push
xorl
push
fadd
int
dec
test
mov
mov
mov
insl
adc
addw
pop
inc
ljmp
jns
stos
lods
xor
movsl
jnp
inc
dec
aas
push
mov
sub
rcrl
xor
dec
dec
jbe
inc
and
adc
add
xchg
lock
repz
test
xor
and
fists
mov
bound
in
jg
jp
popa
push
pusha
xlat
popf
shl
inc
adc
or
sub
sti
out
fisubs
add
and
or
adc
add
lahf
dec
dec
inc
popf
cmpl
mov
movsl
pop
incl
jl
arpl
pop
rcrb
push
mov
lock
aam
gs
push
mov
cmp
jne
dec
mov
xchg
rcr
jb
fidivs
mov
pop
mov
cmp
lret
push
add
adc
pusha
xor
sbb
ss
lret
imull
cmpsl
int3
lret
jp
jno
into
cmp
ljmp
popa
dec
mov
aam
cmpsb
mov
jbe
lret
test
adc
xchg
test
pop
aas
adc
pop
cmp
xor
sub
mov
pop
loope
dec
dec
shlb
mov
std
popf
fcoms
cmc
sar
push
mov
dec
jecxz
test
cltd
jno
mov
xchg
adc
insb
pushf
mov
test
hlt
call
out
stos
testl
xchg
test
jae
rorl
fwait
jg
dec
xchg
leave
xor
and
aas
push
add
in
push
cmp
pop
xchg
stos
add
mov
std
outsb
das
fwait
xchg
adc
inc
inc
dec
mov
or
cld
shr
ret
sarb
push
in
daa
insb
repnz
test
sub
lret
xchg
sbb
shll
into
out
stos
leave
and
loopne
sub
in
xchg
cmpsb
mov
sarl
adc
mov
or
fldt
rcl
push
ljmp
and
inc
pop
das
cmp
add
mov
add
and
and
cmpsb
fisubs
inc
cmp
int3
add
lock
out
push
mov
std
jae
ffree
loop
add
xor
jl
ss
inc
mov
fs
mov
pop
xor
xchg
dec
rcrl
dec
jb
or
jge
pop
add
mov
xchg
or
lahf
sbbl
addb
outsb
jo
sbb
xor
mov
adc
stc
xor
mul
clc
fdecstp
xchg
sbb
ds
call
roll
sbb
fld
inc
inc
dec
inc
gs
cltd
mov
add
push
sahf
fs
pop
lcall
mov
mulb
dec
fs
add
pop
ljmp
in
push
out
neg
jns
push
iret
int
mov
adc
out
or
adc
xor
mov
mulb
dec
xor
dec
mov
and
fiaddl
in
lcall
shr
outsl
cs
outsl
mov
cmp
mov
sbb
push
test
pop
inc
inc
aas
ret
je
sub
mov
daa
sub
dec
xor
mov
xor
ss
xchg
jmp
or
clc
les
insb
pop
aam
aaa
or
xchg
sbb
or
dec
push
arpl
scas
dec
mov
mov
std
insb
and
mov
lahf
in
add
xor
les
sahf
jp
mov
rclb
ja
sahf
sbb
mov
fs
add
repz
add
fcmovnu
fldl
cmp
push
out
lcall
push
pop
out
and
inc
int
mov
out
xchg
test
and
mov
in
lret
fadd
bound
call
jb
dec
aam
mov
in
insb
dec
movsb
pop
pop
cmpsl
push
lock
mov
fisttps
jle
sub
fisubl
out
inc
push
gs
std
leave
sub
pop
mov
sbb
xchg
movsb
jecxz
lcall
mov
xchg
cmp
enter
mov
sbbl
xchg
sbb
or
clc
jb
xchg
pushf
jbe
jp
not
mov
es
sub
cmp
dec
leave
pop
sub
mov
hlt
jo
inc
mov
sub
pop
cmp
pushf
outsb
das
mov
push
adc
mov
jne
inc
or
mov
leave
jnp
pop
leave
jns
mov
xchg
pop
add
inc
pop
loopne
shr
stc
mov
xlat
mov
pop
scas
sti
mov
push
outsb
popf
dec
imul
add
repz
dec
ret
fisubrl
mull
inc
test
mov
clc
repz
aad
push
mov
mov
dec
inc
xchg
xchg
popf
fmul
shlb
in
test
mov
pop
pop
add
movsb
push
test
je
and
enter
mov
jmp
pusha
aas
mov
mov
out
push
es
ret
shlb
mov
add
lahf
xchg
insl
aaa
pop
push
cmp
sbb
cld
mov
loop
jp
std
jle
out
in
or
outsl
inc
mov
out
mov
adc
loope
inc
mov
sub
pop
fisttps
xchg
xchg
clc
inc
addr16
testl
mov
lods
jp
xchg
roll
mov
mov
mov
jbe
jmp
test
out
push
loopne
std
dec
mov
loope
shll
adc
sbb
test
loope
cmpsl
fs
ds
imul
andb
jl,pt
xchg
or
adc
cmpsb
jl
sbb
mov
insb
xor
dec
pop
add
adc
hlt
mov
pop
cmp
adc
or
into
pop
movsl
pop
pop
loop
mov
out
cmp
or
mov
xchg
mov
jnp
xchg
jno
pop
adc
jns
jb
repz
jge
cmp
int3
cmp
cwtl
mov
sarl
enter
repz
jecxz
bound
pop
mov
jno
js
aad
cmp
inc
popf
xchg
push
scas
and
dec
ljmp
xor
lret
mov
sub
cltd
xchg
ds
inc
fs
jno
dec
sub
int3
mov
sub
mov
sahf
icebp
mov
xchg
mov
mov
nop
pop
push
inc
popf
fadds
jns
cmpsb
arpl
xor
mov
sbb
in
scas
cmp
in
arpl
stos
jno
dec
add
dec
sub
das
sbb
cs
inc
data16
ret
cmp
addb
and
jno
mov
push
rorl
lret
in
xchg
bound
std
adc
pop
xchg
mov
push
push
insb
lds
add
cmp
shr
ja
mov
xor
mov
stc
sarb
stos
xor
sub
in
andb
fnstsw
lea
mov
mov
mov
xchg
dec
xchg
xchg
xchg
mov
push
and
dec
aaa
mov
aam
ret
mov
and
loop
call
jecxz
and
cmp
das
or
aam
imul
sub
mov
xlat
mov
popa
xor
testb
mov
fwait
lods
aas
mov
mov
pop
mov
mov
ja
lahf
pop
imul
addr16
adc
mov
add
lcall
pop
icebp
faddl
mov
inc
ficompl
cmpsb
ret
or
notl
mov
push
stc
pop
das
ret
sti
mov
ljmp
dec
arpl
test
pop
fwait
pop
fdivl
push
pop
cs
in
pushf
mov
pop
jbe
les
mov
dec
inc
int
adc
loop
add
and
adc
or
sahf
mov
mov
lods
mov
cmp
mov
inc
test
bound
mov
loope
jmp
mov
bound
nop
push
jge
pop
jecxz
pop
cwtl
fiaddl
cld
add
test
out
or
pop
adc
push
ret
addr16
adc
cmp
bound
lds
xchg
push
jle
mov
rep
mov
out
mov
push
pushf
cmp
loope
fsubp
push
sbb
mov
cmpsl
cmpsb
aas
fcoml
or
push
popa
add
or
cmp
jae
and
sub
xor
jo
add
sarb
out
and
dec
mov
inc
hlt
aas
les
fbstp
push
jnp
out
mov
pop
push
ror
pop
jg
cltd
ss
call
popa
sbb
jle
inc
inc
lock
jno
dec
stos
cmp
or
mov
je
pop
push
vcvtdq2ps
in
stos
jbe
das
cmp
add
jbe
jae
cwtl
push
lret
mov
mov
push
lea
stos
andl
lods
test
in
stos
gs
stos
sub
fidivrl
imul
sub
jae
fcmovbe
push
push
outsb
sbb
xlat
adc
repnz
aas
out
mov
jmp
pop
push
lock
loopne
aad
push
sub
call
push
popa
mov
cmc
stc
mov
push
test
pop
xchg
and
aad
jno
out
cltd
pop
pop
lods
jb
pop
cmp
and
repnz
mov
pop
lea
insl
nop
mov
jp,pn
xor
jbe
inc
pop
dec
lods
mov
test
push
jbe
push
lds
mov
shrl
into
repnz
fucomp
sti
loope
loop
cmpsb
fwait
xchg
mov
out
or
test
push
pop
pusha
push
sub
lcall
xor
and
loope
pop
in
into
out
nop
mov
fldt
ficomps
mov
add
cmpsl
mov
in
sub
pusha
dec
cld
xor
das
cli
fs
dec
cmp
out
addr16
jle
adc
mov
call
push
shrl
std
fists
fmull
or
xchg
dec
fldl
lcall
in
sahf
add
subb
adc
inc
fisubs
fiadds
sub
out
sbbb
test
scas
dec
push
and
push
sub
xchg
imul
sbb
inc
int3
jle
ljmp
aaa
cmpsb
sub
aaa
push
popa
pop
cltd
shl
cld
add
mov
add
jge
ss
or
and
mov
out
xchg
add
and
xchg
mov
movsb
sti
xor
add
js
in
pop
push
adc
iret
mov
ret
cli
aas
lock
jbe
mov
sbb
arpl
hlt
test
push
fstp
repnz
test
pop
shll
mov
insb
loopne
mov
sahf
fldcw
cmpsb
loope
mov
arpl
add
xchg
lea
and
scas
sbb
stc
xchg
jle
dec
jae
mov
add
leave
sbb
and
cmp
add
jno
inc
out
xor
or
test
loop
sbb
mov
es
mov
mov
mov
mov
xor
dec
or
mov
adcl
or
ja
mov
xor
movsb
pop
or
aam
out
inc
push
and
leave
sahf
ficoml
adc
sbb
sbb
imul
ucomiss
inc
mov
mov
frstor
pop
out
push
push
lahf
lods
jl
repnz
and
outsl
push
out
das
scas
push
jbe
test
lods
mov
rorl
imul
rorb
adc
cld
jno
negl
lahf
push
pop
cli
sub
inc
jne
aam
pop
movsl
mov
sbb
imul
lret
pop
call
mov
sbb
cmp
or
mov
inc
sub
xor
adcb
pop
or
clc
sbb
das
xchg
dec
xor
dec
mov
push
mov
popf
rol
loop
xorb
jg
fcmove
inc
dec
sahf
out
je
inc
xchg
jo
push
push
and
rol
xchg
ret
imulb
fdivl
bound
sub
jno
dec
int
out
xor
pop
xor
outsl
sbb
push
mov
jno
les
loop
stc
pusha
aad
xchg
in
scas
lock
ja
fisttpl
out
lcall
cmc
mov
aas
ret
iret
lods
pop
movsl
fmull
out
ss
add
fmulp
mov
jecxz
push
cmp
fcomi
fbstp
cmp
sti
movsl
daa
insl
jecxz
add
xchg
push
inc
inc
push
lds
fcompl
mov
jb
cmpsb
lods
pop
ja
test
ficoml
push
out
cmc
lods
test
scas
cwtl
lds
push
loopne
call
sbb
inc
cltd
jp
push
pushf
cmp
insl
xchg
adc
cli
aad
addr16
jns
xor
fldenv
sub
and
dec
ret
arpl
leave
nop
jle
sahf
loopne
jo
xor
inc
mov
and
mov
dec
add
lds
sarl
aaa
jmp
scas
cmp
cld
sbb
inc
test
bound
jnp
add
pop
in
and
iret
sbb
mov
roll
out
popf
insb
jmp
cltd
leave
lock
xchg
pop
dec
cmp
shlb
sub
jmp
sbb
aaa
and
aad
stos
ljmpw
movsb
ja
enter
sbb
dec
sub
iret
xor
dec
pop
mov
imul
sarl
dec
sbb
outsl
sbb
jmp
movsb
inc
popf
fcmovne
xor
jb
scas
adc
or
pop
push
inc
push
test
or
pop
fmuls
outsb
jo
int3
movsl
mov
arpl
ljmp
daa
mov
jne
les
fldt
lret
cmp
jnp
add
insl
pop
xchg
push
push
adc
cmpsl
jecxz
lods
jbe
push
xchg
mov
jl
outsl
cld
mov
adc
lods
xor
scas
or
sub
lret
sarl
pop
jb
mov
xlat
mov
xchg
enter
fs
stos
sbb
fs
ss
daa
test
loopne
cmp
arpl
add
or
pusha
lret
lea
mov
std
mov
loope
jbe
mov
push
add
test
adc
dec
and
mov
push
movsl
push
lcall
and
das
pop
mov
leave
or
xchg
repz
lods
ficoml
add
stc
lret
push
sahf
add
je
lock
inc
imull
fsubrs
invd
inc
mov
stc
mov
or
jb
mov
shll
sub
mov
sbb
das
aad
jbe
inc
sbb
xchg
repz
lcall
js
int3
mov
imul
arpl
sub
sub
mov
adc
rcrb
out
dec
std
insl
sbb
dec
mov
out
inc
xor
and
pop
inc
or
dec
shr
bound
xlat
mov
fsubrp
mov
ds
fiaddl
nop
xlat
mov
sarl
mov
mov
arpl
scas
mov
shrl
repnz
mov
sub
aam
add
outsl
mov
xor
mov
lret
mov
push
pop
cmpsl
iret
dec
push
inc
sbb
inc
shl
jg
sbb
int3
into
call
jns
lcall
sbb
or
pop
ja
incb
mov
jo
popa
mov
lret
mov
cmp
mov
push
repnz
cmp
xor
mov
lret
stos
push
xor
cwtl
lods
les
scas
scas
push
push
xchg
shl
cmp
sub
mov
into
ret
clc
add
das
in
invd
stc
mov
aad
fsubl
out
pop
jl
std
mov
out
cmp
or
dec
test
loopne
scas
clc
push
and
aas
jbe
mov
cmpsl
adc
lods
sbb
mov
cltd
das
movsb
add
insl
and
dec
jns
imul
cld
push
cmp
jmp
sbb
or
les
cmp
and
rcr
sub
imul
mov
fcoms
mov
push
cltd
inc
leave
mov
and
mov
inc
int3
cld
mov
and
and
and
push
repnz
mov
aas
or
fiaddl
les
into
out
xor
adc
clc
sti
cmpsl
js
pop
dec
icebp
outsl
iret
and
movsl
out
ds
xchg
mov
rcrb
int
sub
xor
leave
sar
movsl
cmp
mov
es
in
call
sbb
and
mov
and
xor
adc
je
addr16
ljmp
xchg
icebp
push
cmp
addr16
test
sti
push
mov
adc
jb
ds
add
adc
dec
xchg
cwtl
popf
mov
std
and
icebp
sub
and
xor
shrb
les
mov
pop
aad
insb
fcom
mov
mov
fisubs
mov
cli
cltd
rcl
repz
shll
inc
in
push
jns
out
scas
mov
cmp
mov
sbb
loopne
or
test
pop
pop
sub
std
pop
cmp
push
movsl
repz
pop
cmp
cmpsb
icebp
repz
push
popa
outsl
and
mov
dec
pop
shl
aam
adc
pusha
out
xor
pop
dec
insl
mov
aam
adc
xor
mov
cmp
sbb
out
in
dec
out
xchg
cmp
inc
arpl
icebp
rorb
pop
shrl
jecxz
jae
popf
mov
cwtl
adc
in
cs
jecxz
addr16
lcall
and
or
cmp
add
pop
out
lret
loopne
ds
dec
in
adc
adc
mov
aaa
cmpsb
mov
fisubl
mov
jg
adc
cmp
pushf
test
ret
pop
push
push
js
loopne
or
outsb
mov
add
push
pop
sbb
iret
adc
cmp
popf
and
fstpt
loop
cld
adc
push
lcall
xor
sub
cmp
cmpsb
adc
icebp
bound
arpl
loop
mov
lret
jge
mov
adcl
and
lds
xorl
ror
es
mov
adc
sub
add
shlb
sahf
aam
push
lea
outsl
xor
sub
push
in
xchg
mov
insl
mov
xchg
pop
loope
inc
adc
lea
adc
xchg
sub
subl
add
test
jb
jg
shl
jns
sub
sbb
push
jl
lahf
iret
dec
das
sbb
cmpsb
nop
xchg
fcmovnu
mov
xchg
jp
test
sahf
and
inc
jo
movsb
xor
jp
aaa
and
xor
push
dec
jne
aad
test
push
mulb
pop
jecxz
sbbl
rcrb
lcall
in
adc
loop
pop
mov
add
test
pusha
sub
scas
fsubr
imul
mov
mov
repnz
xchg
arpl
call
lret
cmc
aas
mov
cmpsl
inc
test
or
pop
mov
cmp
cs
stos
jmp
mov
add
pusha
pop
mov
pop
ja
pop
xchg
adc
scas
fcmovb
xor
jmp
dec
push
jb
leave
and
xchg
sbbb
mov
dec
jns
xchg
dec
fadd
and
xchg
adc
insb
mov
jl
ss
cmpl
inc
out
adc
jle
aaa
jecxz
mov
ja
push
push
enter
dec
dec
push
push
or
mov
adc
xor
dec
int
or
pop
mov
int
inc
add
mov
lahf
add
push
fidivs
lds
inc
sbb
xchg
add
insb
inc
xor
sub
les
mov
arpl
sub
ret
movsl
push
add
aas
ss
push
loop
mov
mov
andl
das
cs
sar
mov
cmp
lcall
add
mov
pop
xchg
iret
stc
out
push
js
jns
data16
push
fisubl
push
push
loopne
sub
arpl
mov
in
fildll
test
imull
mov
add
add
std
mov
pop
mov
icebp
mov
testb
pop
stos
cltd
xchg
push
push
hlt
leave
leave
pop
lea
jg
mov
popa
push
mov
mov
pusha
mov
imul
jp
push
fbld
flds
adc
enter
pop
mov
loope
xor
inc
lcall
ret
and
xchg
push
insb
jge
lret
cmpsb
test
or
ja
dec
adc
mov
dec
into
lret
aam
js
jbe
out
inc
add
in
test
inc
and
add
inc
or
in
sbb
fsubs
cmp
jl
shl
leave
inc
sub
add
xor
aad
fucom
fidivrs
add
lret
push
mov
aad
mov
jge
lock
cltd
repz
sub
movl
mov
aaa
jp
jns
bound
sbbl
das
enter
push
xor
and
imul
insb
jno
or
adc
out
xchg
push
or
push
xchg
lret
addr16
xor
enter
adc
addr16
cmp
pop
fists
cli
imul
mov
rolb
inc
bound
jge
fucom
jg
push
shrb
orb
add
sbb
or
pop
push
jns
repnz
jle
adcb
fs
arpl
lahf
inc
mov
sahf
addl
sub
push
sub
insb
in
and
repz
out
xor
call
call
adc
fwait
mov
adc
xchg
addr16
mov
xor
lret
movsl
pop
cmc
cld
dec
test
inc
xor
cmp
int
mov
push
mov
sbb
and
lods
aas
cmp
inc
in
mov
mov
ss
scas
scas
and
jmp
xor
in
fnsave
jl
push
in
pop
jecxz
rolb
fdivs
popa
push
push
mov
sub
cwtl
in
and
mov
cmp
lret
xchg
push
jmp
scas
xchg
dec
mov
addr16
fmull
mov
std
lret
inc
outsb
ljmp
cli
dec
push
rolb
cmc
lret
imul
xor
scas
mov
push
adc
std
stos
movsl
inc
and
in
xchg
cmpsl
imul
push
ret
movsb
add
cli
jl
in
cmp
pop
adc
sbb
xchg
aas
add
cmp
dec
mov
lea
mov
mov
jl
ret
mov
arpl
loop
inc
aad
and
test
push
int3
inc
cmp
lret
xchg
jnp
add
jne
push
vandpd
adc
ss
and
ret
or
enter
sub
lret
hlt
cmp
les
leave
pushf
dec
xor
dec
je
inc
mov
mov
lret
nop
sbb
adc
push
out
lahf
inc
push
xor
cmp
scas
cmp
and
mov
cld
es
loope
xchg
es
les
xlat
stc
xor
ljmp
push
loop
sub
dec
adc
mov
clc
lcall
adc
push
mov
jmp
jecxz
pop
gs
dec
jo
in
addr16
mov
push
mov
insl
icebp
sbb
cmp
jo
dec
clc
pop
rdpmc
fistpl
out
jp
xor
jge
mov
push
scas
stos
mov
push
scas
push
dec
jnp
dec
xchg
inc
outsb
icebp
in
xor
sbb
mov
loope
adc
sub
mov
push
int3
jb
outsb
xor
xor
mov
add
fmull
or
sub
push
clc
std
fwait
jae
add
xlat
and
add
fstp
push
dec
xchg
xlat
and
shr
in
dec
jae
or
or
out
cs
cmp
out
ret
push
or
test
stc
shlb
test
mov
sbb
inc
pop
mov
mov
xchg
add
mov
in
rorl
adc
jg
pop
in
and
lahf
inc
mov
mov
push
xchg
sub
cmc
mov
incl
jbe
mov
push
subb
mov
mov
mov
jmp
jg
dec
shl
pop
loopne
and
out
xor
sbb
leave
cltd
and
push
fidivrs
add
or
jecxz
xchg
clc
stos
xor
inc
scas
shlb
mov
aaa
or
jns
fmull
xor
add
jbe
or
jge
adc
ss
lret
xlat
test
pop
shl
and
sub
and
iret
fadds
aam
loop
test
and
jb
cld
das
inc
scas
dec
mov
stc
fadds
notl
lret
inc
push
dec
cmp
das
loopne
in
dec
push
filds
mov
jmp
shrb
sbb
or
adc
sarb
pop
loope
or
inc
out
stc
dec
nop
js
addb
mov
pop
inc
mov
inc
xchg
cld
cmpsl
push
mov
xchg
iret
call
negb
movsb
mov
mov
mov
dec
jge
jae
push
mov
fwait
sbb
addr16
cmp
jo
jne
fst
in
popf
jne
xchg
mov
sub
call
add
je
in
jg
sub
cmp
aam
push
sbb
xor
inc
in
fnstcw
push
jb
push
mov
test
jo
or
out
mov
repnz
sub
push
lock
xchg
cmp
xchg
inc
push
insl
int
or
fcomps
sbb
mov
fists
add
bound
push
nop
mov
dec
inc
pop
inc
mov
popl
mov
xchg
inc
mov
push
sub
dec
mov
xchg
jnp
std
xor
add
or
repz
pop
mov
sbb
xor
mov
icebp
cmpsb
jmp
inc
imul
adc
inc
call
add
out
movsl
clc
push
cltd
adc
sub
sub
mov
psubb
xchg
orps
adc
xor
jp
out
jae
lock
adc
sti
pop
mov
rcll
dec
test
fisubl
jbe
and
pop
pop
ss
gs
sarb
in
dec
scas
dec
fmul
pop
sub
mov
mov
lea
mov
repnz
xor
lock
stc
testb
sub
lea
cmp
je
fisubrs
mov
je
call
xchg
mov
cltd
adc
cltd
cmc
or
scas
mov
pop
mov
loopne
stos
sbb
nop
jmp
cmpsb
imul
mov
scas
cmc
xor
movsl
cltd
add
mov
mov
push
mov
add
shlb
arpl
inc
pop
lock
insb
divl
test
not
adc
jmp
or
cmc
filds
dec
fisubrl
jb
sub
or
sub
push
mov
lret
xor
pop
xchg
fwait
std
mov
out
gs
mov
lock
mov
dec
sub
mov
and
out
xchg
ret
cmpsl
jle
idivl
adc
xchg
adc
int
lock
gs
push
adcb
add
stos
inc
aas
add
dec
test
aaa
cmp
or
pop
inc
push
cmp
ret
and
add
sub
enter
jle
xor
dec
push
mov
mov
int3
pusha
add
int3
sbbl
cli
mov
jae
cs
dec
inc
dec
push
sti
dec
leave
cltd
data16
mov
inc
push
jmp
mov
hlt
stc
and
jmp
sbb
jb
jnp
loopne
inc
pop
fs
into
daa
lretw
inc
cmpsb
cmc
push
rorb
cmp
into
cmc
push
and
aad
idivl
nop
xor
adc
mov
cltd
imul
inc
lahf
jmp
jnp
sbb
stos
mov
sbb
roll
int
int3
into
xlat
js
mov
ds
sti
lock
repnz
cmp
jge
lahf
js
cmp
dec
scas
sti
loopne
stos
mov
add
xchg
mov
mov
push
enter
xor
idivb
nop
mov
std
adc
outsb
lahf
sahf
mov
stos
aam
dec
mov
sbb
pop
imul
xchg
adc
push
xor
sbb
test
lds
xor
aad
and
repnz
push
jecxz
lods
int
cwtl
inc
cmpsb
adc
or
mov
cmp
pop
cld
push
lea
xor
daa
cltd
repz
mov
inc
dec
jae
add
xchg
sub
repz
sub
je
mov
mov
mov
lahf
pop
mov
fisubrl
pusha
push
das
jmp
mov
js
and
jl
adc
mov
pop
and
push
sbb
sub
or
add
adcl
ds
or
xchg
pop
push
cmp
xchg
bound
adc
and
or
push
ret
ljmp
pusha
pop
iret
jbe
nop
insl
pop
rorb
xchg
and
push
and
cwtl
dec
push
mov
mov
adc
cmp
imul
ret
sub
cmc
push
inc
cmp
fsubr
lods
push
xchg
or
inc
sbb
xchg
lock
test
mov
inc
push
add
int3
push
sbb
cmp
cmp
stc
jg
lret
andb
or
mov
inc
mov
std
mov
loop
int3
cmp
cmpb
sahf
push
dec
mov
pop
in
dec
fdivl
adc
jb
pusha
pusha
outsb
sbb
and
test
popf
and
sub
jle
mov
or
pop
out
push
cs
dec
mov
in
pop
subb
pop
arpl
xchg
push
push
js
int3
imul
rorl
xchg
add
jae
stc
repz
or
dec
mov
xor
popa
dec
inc
lret
loopne
clc
out
ja
test
inc
xchg
xlat
movsb
dec
mov
clc
jp
xor
lds
fistl
test
pop
dec
arpl
gs
xchg
or
sahf
cmp
sub
and
ret
scas
clc
jg
jo
sub
shlb
cmpsl
fwait
xchg
mov
push
pop
jnp
shll
rolb
and
cwtl
pop
arpl
sub
icebp
lock
xchg
hlt
jl
dec
fidivrl
or
push
inc
xlat
and
jbe
in
jbe
out
std
mov
rclb
push
mov
pop
add
sahf
cs
mov
jnp
adc
dec
mov
int3
cmovg
cmp
or
sub
popa
and
aam
popf
xchg
push
push
jecxz
in
or
push
or
cltd
cli
inc
repz
mull
loop
xor
jnp
unpckhps
fs
fwait
and
inc
dec
imul
testl
nopl
shrl
add
loopne
aaa
dec
pop
xchg
js
in
in
leave
into
and
sub
loope
jl
cli
lahf
leave
dec
jae
test
push
adc
cmp
jno
and
fidivl
adc
test
sahf
imul
outsl
mov
jbe
mov
adc
pop
cmc
lcall
repz
js
and
sub
jp
bound
mov
arpl
out
movsb
leave
inc
lahf
cmp
lds
inc
jne
repz
adc
dec
adc
in
addl
push
call
sarl
push
and
jb
mov
dec
sub
fisubrs
leave
xchg
cmp
loopne
cmpsl
cmp
rorb
cs
fsubrl
cmp
and
test
xchg
mov
in
imul
movsb
mov
lods
stc
loop
clc
mov
pop
rol
mov
dec
pop
lods
and
sub
jns
push
rcrl
dec
ds
sbb
paddd
cltd
sbb
mov
jb
or
mov
orl
push
jle
adc
ret
lcall
add
mov
addr16
test
add
mov
cmp
ss
hlt
mov
mov
jae
jle
ret
fs
sti
jg
jmp
add
cmp
xchg
push
or
or
sub
dec
mov
jmp
sub
test
add
adc
ss
xor
mov
fstpl
js
or
and
dec
out
dec
dec
fcomi
scas
mov
cltd
or
fbstp
jb
cwtl
sub
push
lret
std
jp
lcall
es
pop
and
xor
jl
pushw
pop
cmp
nop
xchg
and
icebp
push
pusha
jb
fistpl
into
inc
lret
in
icebp
sahf
pushf
test
mov
test
popf
dec
push
inc
cli
sbb
movsl
mov
mov
jle
ds
mov
add
out
shrl
out
scas
lock
into
or
out
mov
adc
mov
push
loopne
or
lret
dec
pop
jb
ret
adcb
es
or
push
push
loope
insl
dec
dec
scas
inc
mov
xchg
je
mov
xchg
lret
insb
fstl
push
fnsave
js
pop
push
data16
jecxz
insl
clc
lea
icebp
pop
sub
add
sub
xchg
jbe
les
mov
stos
pop
pusha
pop
sub
and
mov
sbb
in
jb
jno
ja
add
cltd
test
add
icebp
sub
xchg
das
cs
push
cmpsb
sub
arpl
xchg
movsl
repnz
jb
mov
xor
inc
adcl
mov
xor
dec
pop
dec
mov
and
adc
loope
gs
ss
in
insl
ret
ficomps
adc
in
outsl
dec
sub
loopne
test
fidivl
pop
orb
jae
fiadds
out
jno
fisttps
idivb
mov
mov
insb
hlt
lret
testb
inc
jmp
cltd
jbe
gs
rcrb
pop
les
cmp
jnp
js
mov
mov
jbe
jno
call
pushf
loop
es
iret
inc
cs
push
insb
cmp
pop
dec
dec
mov
adc
adc
pushl
inc
frstor
movd
adc
add
jae
jno
mov
xor
stc
movsb
int
push
jg
sub
jg
rclb
rcll
push
sbb
daa
and
je
mov
jnp
sbb
lret
decl
leave
stos
shlb
dec
scas
lret
icebp
fs
mov
jecxz
icebp
lods
pop
pop
xor
jae
in
inc
cmp
cmp
mov
addr16
pushf
sbb
test
inc
int
loopne
dec
test
sub
dec
iret
loop
rorb
imul
and
in
enter
xor
dec
jle
xor
mov
pop
sub
loope
filds
mull
int
push
dec
cli
cmc
dec
mov
xchg
pop
xchg
xor
add
and
adc
mov
arpl
fwait
ucomiss
fstpt
rcrl
and
in
xchg
pop
sub
mov
mov
pop
push
cmpsb
xchg
push
rol
fildll
push
jns
and
sahf
lock
push
jp
sahf
setl
cmpb
push
xchg
ja
cmp
sbb
ljmp
and
imul
pop
push
dec
jns
push
cmpsb
inc
fistl
cli
jae
mull
sbb
and
fwait
leave
jp,pt
in
fidivrs
faddl
fwait
daa
sub
in
fstpl
pusha
xchg
fnstenv
shl
ja
cmc
nop
jnp
push
repnz
push
in
or
lds
mov
push
lock
and
clc
cmp
movsl
fwait
movsl
orb
sub
into
dec
adc
mov
jge
test
inc
jmp
jnp
mov
sbb
sbb
out
pushf
add
xchg
mov
xchg
mov
xor
pop
imul
pop
ja
dec
fldt
sahf
ja
xorb
xchg
or
jmp
ret
lret
fwait
in
xlat
dec
sbb
and
insb
pop
mov
cmpsl
mov
jo
dec
cmpsb
mov
lods
ds
pusha
fwait
lcall
dec
xor
enter
pop
cmpsl
add
mov
jmp
movsb
sbb
hlt
lock
cli
movsl
pop
jb
xchg
lret
cmp
scas
negl
fsubrs
or
lock
arpl
or
mov
fwait
inc
xlat
or
orb
int3
movsb
hlt
mov
cmp
and
fcoml
push
mov
jne
das
jns
xchg
enter
idiv
and
in
dec
xchg
pop
call
cmp
xchg
clc
lods
dec
out
in
and
xor
jns
push
and
mov
xor
add
pusha
inc
mov
ficomps
mov
fs
sub
jo
pushf
xchg
leave
aad
inc
mov
fcmovnu
mov
or
jp
inc
pop
and
xchg
out
pop
mov
mov
xor
jbe
insb
int
pop
mov
sti
nop
movsl
nop
in
sub
mov
adc
cmp
lea
xchg
cs
xchg
xor
adc
mov
cld
nop
stc
jmp
push
fdivs
cltd
or
or
jo
test
xchg
xchg
enter
movsl
dec
int3
sbb
or
jge
mov
and
xor
cli
xor
into
mov
aad
aas
je
inc
mov
jge
popf
mov
xchg
in
push
mov
es
in
sbb
in
push
push
mov
push
je
mov
clc
add
addl
daa
aas
shrb
dec
ret
insb
fistpl
or
push
ljmp
dec
call
loope
fldcw
call
push
pop
or
sahf
jle
jne
pop
cmp
cmpsb
dec
icebp
pop
push
loop
or
cmpsb
shlb
mov
sbb
cmc
mov
add
mov
test
add
enter
xor
test
outsb
test
leave
ss
sbb
shrb
lcall
xchg
sbb
and
jmp
clc
and
mov
jmp
and
mov
mov
mov
sbb
add
scas
jb
fildll
loopne
scas
pop
xlat
xor
xchg
nop
sub
loopne
js
loopne
inc
add
roll
loop
jnp
test
call
add
push
mov
cmp
outsl
mov
inc
shlb
cmpsl
sub
dec
aas
pop
push
dec
sub
cmc
pushf
clc
aad
mov
popa
outsl
and
and
push
ret
add
cmp
mov
jbe
insb
mov
into
xchg
jns
push
push
push
or
add
in
pop
jecxz
pusha
cmpsl
in
out
mov
or
dec
push
mov
and
sub
and
stos
xchg
lahf
into
inc
in
bound
sub
loopne
stc
les
pop
imul
push
sbb
int
mov
cmp
das
out
lods
push
cwtl
add
in
jmp
cmpb
andb
and
movb
bound
shrl
pusha
clc
out
xor
in
int3
lret
insl
xor
jmp
mov
push
popw
imulb
arpl
dec
pushf
mov
and
jo
jns
loop,pt
test
mov
sbb
mov
mov
push
loopne
imul
pop
xchg
push
jle
rcrl
shll
mov
and
insb
xor
repnz
pop
scas
pop
loope
adc
lahf
int
push
stos
pushf
sub
bound
dec
jno
cmp
jmp
icebp
test
sbb
adc
pop
or
push
arpl
pop
or
nop
jg
inc
jp
xchg
arpl
fsubp
xor
loop
jmp
push
testb
popa
test
and
adc
addr16
and
mov
jb
aad
call
test
mov
dec
push
xchg
movsl
orb
rcrb
fscale
cltd
cmpsl
ljmp
mov
lret
lods
lahf
cmp
jo
cs
xchg
xor
das
sbb
sub
xor
dec
lcall
jl
bound
cmpsl
fistpll
dec
sub
insb
mov
pop
pop
sbb
das
cltd
fcmovb
xchg
mov
lret
jp
push
and
ljmp
aad
scas
idiv
mov
sarb
xor
inc
test
std
ljmp
loopne
movsl
scas
enter
mov
inc
addr16
aas
and
inc
sub
aad
sub
or
xchg
stos
nop
xchg
repz
mov
mov
mov
jne
mov
popf
inc
xorl
mov
mov
mov
xlat
pushf
outsb
pop
xlat
dec
inc
mov
movb
add
and
and
sbb
push
int3
fdivl
adc
sub
subb
sbb
jge
jns
daa
jne
push
jo
mov
mov
sbb
loope
bnd
pop
popf
sahf
sbb
ja
add
and
shl
outsb
and
cmp
xor
arpl
in
xchg
mov
cmp
cmp
stc
ss
les
aam
imul
mov
imul
lock
cmp
popf
jno
clc
push
mov
mov
push
outsb
movb
mov
sbbb
mov
shlb
pop
sub
jbe
lea
inc
in
loop
adc
cmpb
or
popf
jmp
sub
and
ret
out
mov
in
push
pushf
pop
xchg
daa
push
mov
sub
loopne
scas
and
and
jnp
mov
jmp
dec
rcl
movsb
lcall
loopne
push
inc
aas
es
ret
or
cli
test
sub
xor
xchg
pop
les
movsl
adc
pushf
add
js
dec
xchg
sarl
push
ljmp
inc
repnz
or
cmpsb
bound
add
mov
pop
in
in
push
loope
sarl
sbb
lea
xor
xor
and
or
iret
push
and
jp
xor
mov
sub
xchg
mov
or
sub
fucomip
xor
jmp
xchg
or
adc
sub
mov
imul
mov
adc
insb
adc
pop
push
sub
xor
inc
data16
js
pushf
pusha
div
xchg
stos
mov
jecxz
popf
ss
mov
aaa
out
out
mov
repnz
mov
push
and
shl
movsl
sbb
push
sbbb
xchg
add
sti
and
jl
nop
inc
jg
mov
mov
inc
dec
cmc
cmc
mov
and
push
xchg
insl
add
mov
push
jmp
sub
leave
lea
adc
shlb
adc
mov
jb
test
std
loopne
mov
cli
push
pusha
xchg
mov
xorb
push
sbbb
adcb
xor
pop
sub
scas
pushf
cwtl
adc
jbe
sbb
ss
push
in
mov
inc
jecxz
shl
scas
dec
fwait
lahf
jns
out
loop
fisttps
pop
xlat
dec
xchg
mov
jae
int3
sub
mov
mov
fs
je
cmp
dec
fcmovnb
imul
lock
mov
push
call
pop
cmp
ljmp
add
nop
sbb
cmp
repnz
pop
addl
outsb
jl
sbb
pop
jnp
sub
cmpsb
lret
mov
cli
je
js
add
out
push
ss
lret
test
lods
out
pop
cltd
fdivl
loop
hlt
sbb
pusha
push
or
xchg
outsl
or
sahf
add
add
fnstcw
jl
or
gs
inc
mov
xchg
cmp
dec
inc
or
inc
xchg
xchg
bound
movsb
cli
sub
sbb
push
out
aad
push
lock
popf
sub
incb
add
push
sub
mov
test
stos
out
inc
das
mov
xor
bnd
add
ja
movb
push
adc
mov
out
nop
or
pop
test
movsl
push
mov
fcomps
sub
lea
mov
popfw
das
outsl
sbb
mov
leave
in
push
mov
jnp
sbb
inc
pop
imul
daa
xchg
xlat
mov
cmpsb
jge
pop
pop
std
cmp
mov
cld
notb
xlat
dec
scas
xor
cli
into
ds
push
stos
cli
adc
cs
cli
push
stos
pop
movsb
ljmp
call
in
jg
in
sub
mov
fists
push
and
mov
int
sbb
lds
and
jmp
pop
ret
cmp
dec
xchg
cmp
mov
in
dec
leave
inc
shrl
mov
jg
jmp
fnstsw
and
js
mov
mov
adc
dec
pop
subl
sbb
aas
or
icebp
mov
inc
or
cmpl
add
adc
push
mov
aam
pop
jo
idiv
jne
in
mov
cwtl
mov
bt
and
loopne
rol
push
sbb
cmpl
scas
movsb
rorb
xchg
rcll
push
fwait
mov
out
pop
inc
sbb
ret
and
mov
sub
jg,pt
push
lcall
aaa
das
test
inc
pop
es
inc
jge
jmp
push
loope
dec
sbb
push
adc
or
mov
cltd
mov
jns
sub
hlt
pop
mov
inc
push
add
jno
fiaddl
adc
in
cli
loopne
ficomps
add
mov
dec
sub
push
repnz
or
add
cmp
jbe
push
sub
cltd
movsb
sub
mov
in
xor
lret
jp
sbb
add
mov
or
jecxz
ds
in
adc
movsl
jbe
pop
or
pop
jmp
or
dec
imull
out
jne
inc
movsb
or
aas
inc
inc
inc
adc
js
xchg
cmp
mov
jg
divb
xchg
into
fdivrs
iret
jo
call
push
outsb
sbb
mov
xchg
xchg
push
xlat
mov
iret
scas
mov
jl
push
testb
cmc
sbb
lret
mov
in
jo
xchg
xchg
stos
int
inc
xor
jno
out
sbb
jno
mov
out
jns
fisubrs
sbb
nop
cli
xchg
jno
add
mov
call
loopne
sarb
les
das
jnp
inc
add
cmpsl
movsb
inc
sub
jnp
xchg
stos
mov
dec
mov
and
imulb
inc
sub
fisttpll
sbb
in
pop
push
adc
insb
xor
jno
push
in
lods
inc
popf
icebp
push
xorb
popa
add
jnp
rcrl
iret
clc
test
ja
ss
ljmp
int3
aam
xchg
add
int
fdivl
dec
sub
or
dec
jae
cmp
jo
pop
cmp
shll
popa
xchg
sub
cmp
sbb
outsl
xor
adc
xchg
roll
push
addr16
leave
add
lea
outsb
mov
icebp
mov
xchg
mov
daa
push
testl
ljmp
scas
lds
stc
jp
inc
add
sbb
ret
xchg
and
ljmp
out
rclb
dec
outsb
cld
or
std
mov
mov
mov
xor
lea
xchg
and
in
xor
cmpsb
jnp
or
mov
inc
int3
or
mov
push
lea
and
jmp
fsubr
testb
push
jnp
inc
add
sti
repnz
inc
mov
inc
xor
xchg
sub
fst
xchg
pop
mov
out
sahf
test
mov
mov
mov
js
push
cmp
jg
cmp
or
test
mov
lret
xchg
add
mov
mov
insl
mov
push
sbb
les
sbb
dec
jae
lea
stos
xorl
mov
and
jecxz
add
lods
jno
add
push
xor
repz
jmp
jg
cmp
or
sbb
jb
jnp
cmp
jle
cld
pop
xchg
mov
cwtl
stos
in
icebp
push
jae
decb
pop
mov
lret
fistps
or
inc
mov
idivb
imul
mov
or
test
push
cs
mov
mov
and
inc
xchg
out
xor
xchg
push
test
add
cli
enter
add
push
push
call
rcrb
inc
sbb
and
inc
aaa
and
leave
and
push
add
sbb
sub
mov
ret
outsl
jmp
push
int
push
imul
movsl
add
cmp
add
in
stos
inc
push
in
dec
movsb
mov
loopne
xchg
and
test
int3
sub
fldcw
inc
mov
loop
pop
cmpsb
and
leave
cmp
and
xchg
test
fwait
adc
and
push
call
call
into
imul
mul
pop
inc
out
add
movsl
jnp
sub
sub
jne
out
jno
sahf
jne
dec
aaa
fbstp
xor
jno
stc
outsb
mov
cmp
stc
xlat
cmpsb
xor
clc
xor
outsb
call
adc
xchg
xchg
or
xor
insb
jl
outsb
ljmp
test
mov
jbe
inc
sbb
xchg
push
in
out
fwait
fs
std
iret
jecxz
push
stos
push
or
jb
xor
mov
test
lock
out
xor
lods
xchg
std
das
xchg
sbb
leave
cmp
pop
dec
daa
adc
mov
lahf
xorl
mov
outsb
pop
hlt
or
mov
xor
clc
adc
xchg
into
aas
xchg
push
imul
sbb
and
fbld
mov
call
fldcw
xchg
push
inc
add
sahf
jmp
and
xor
jl
stc
cmpb
movsb
xchg
ja
jo
int3
mov
repnz
movlps
sub
addr16
iret
cmp
test
pop
subl
cmpsb
mov
cmp
jo
les
iret
pushf
int3
lcall
push
out
nop
fdivl
lcall
jmp
inc
mov
sbb
mov
jp
insb
mov
xor
mov
imul
jns
push
jo
ss
call
daa
mov
push
push
cmp
pop
mov
add
sbb
outsl
cmp
sbb
mov
int3
dec
add
lret
roll
stc
cmc
add
mov
adc
adc
sahf
jae
cmp
mov
into
add
xchg
sahf
mov
ds
cmp
ja
arpl
sbb
test
jecxz
inc
cmp
push
mov
scas
enter
cltd
inc
not
inc
idivl
dec
loop
adc
add
ficoml
addr16
hlt
adc
arpl
scas
mov
xor
rep
xchg
dec
mov
insl
pop
sub
insl
shrb
add
test
lock
stos
mov
movsb
mov
pop
xor
jl
idiv
outsb
pop
fwait
and
imul
arpl
negl
dec
inc
fsubp
push
aas
cld
addr16
es
dec
sti
data16
dec
xchg
cmp
cltd
mov
jle
pop
cli
pop
ss
nop
jecxz
mov
cli
int3
cs
pop
imul
jge
pop
insl
add
and
lods
add
out
xchg
cmc
mov
and
addr16
push
add
cltd
ds
sub
ds
jne
fldenv
dec
popf
mov
inc
xchg
adc
fbld
jns
test
jnp
mov
andl
insb
lret
and
in
xchg
lds
outsb
mov
inc
addr16
jmp
sub
jns
cmp
pushl
sub
cwtl
insb
call
popf
jns
fsubrl
cwtl
cmp
pop
loop
mov
addr16
cmp
pop
mov
fsub
gs
xor
mov
inc
popf
mov
mov
lcall
test
nop
test
rolb
sbb
jmp
in
and
sub
fdivrs
sbb
insl
add
call
addl
sbb
clc
mov
scas
sub
fdiv
sbb
sub
insb
add
int3
lea
mov
iret
inc
inc
stc
mov
imul
cmpsl
inc
inc
cmp
mov
addr16
push
pop
xor
mov
repnz
jbe
xchg
sahf
sub
adc
inc
inc
call
pop
pop
test
mov
add
push
ret
add
adc
xchg
ret
mov
loopne
sahf
cmp
jecxz
seto
or
lret
ret
repz
int3
or
xor
hlt
dec
stc
pop
add
les
aam
aas
mov
mov
dec
in
or
shlb
gs
fnstsw
jecxz
adc
pop
adc
or
enter
loopne
jno
iret
cld
cmp
arpl
jne
add
cwtl
cmp
cmp
mov
sbb
and
mov
notb
push
fxtract
push
xor
inc
pop
add
mov
cmp
insl
rcll
pop
out
push
loopne
or
fildl
mov
aaa
jae
dec
jno
in
cmc
jp
adc
and
js
jno
inc
xchg
popa
jg
pop
pop
pop
daa
ljmp
mov
adc
and
out
cmp
mov
testb
stos
sub
push
fmuls
push
pushf
xchg
inc
lds
xor
mov
mov
add
fsts
cmp
lahf
sti
pop
xchg
fistpl
sub
sub
push
mov
scas
out
pop
dec
lock
fmuls
test
sub
or
aas
mov
pop
mov
add
and
fldcw
jno
mov
inc
sahf
fucom
or
in
cli
arpl
test
in
je
mov
inc
jp
mov
scas
aas
pop
test
rol
push
mov
ret
xchg
inc
frstor
cmp
jmp
imul
mov
sar
and
sub
dec
push
fcoml
testl
dec
cmp
fs
xchg
push
jae
in
mov
dec
dec
std
out
ja
cwtl
idivl
sub
shlb
add
or
xchg
jge
loopne
mov
xor
cwtl
shr
adc
jg
mov
push
push
mov
cld
outsb
xor
and
lock
loope
sbb
or
les
cld
cmp
insl
cmp
xor
add
push
lahf
aaa
cmp
mov
mov
add
xchg
arpl
inc
push
sub
shl
or
fwait
inc
inc
cld
jnp
fwait
sbb
aad
mov
and
jl
sub
insb
lret
or
mov
dec
mov
push
sbb
nop
jmp
je
mov
daa
stos
inc
cmpb
fdivp
shlb
shlb
mov
push
pop
dec
movl
or
mov
or
mov
bound
cltd
fdivp
repz
sub
aad
fucom
fs
cmpsb
xor
mull
dec
andl
mov
mov
push
adc
push
cmpsl
pop
jbe
pop
inc
mov
pop
jno
out
adcl
and
cmp
daa
in
jle
stos
add
mov
push
inc
int
mov
sbb
insb
aas
in
mov
js
pop
call
inc
lods
lods
scas
int3
iret
cmc
aaa
jge
shl
mov
int3
dec
jge
ret
or
int
jecxz
inc
push
inc
xchg
push
arpl
or
xchg
jl
push
jmp
gs
inc
add
inc
jo
scas
andl
inc
les
pop
pop
ret
cmp
lret
lret
lret
dec
mov
mov
and
pop
dec
xchg
add
call
sbb
jl
lds
pop
mov
and
push
and
shlb
cwtl
mov
adc
xor
jnp
dec
stos
aaa
xor
outsl
test
pop
pop
hlt
sub
xor
adc
dec
dec
jns
out
jge
cmp
int
or
arpl
jl
les
mov
cmp
bound
test
icebp
sub
pushf
mov
push
int3
and
mov
bound
jle
xor
or
pushf
xor
mov
loope
scas
and
mov
jge
jnp
jl
cmp
aaa
push
lock
cwtl
lock
xchg
or
xchg
push
cmc
out
push
mov
das
pop
inc
aaa
insb
add
and
cwtl
data16
mov
or
sub
cld
xor
test
fisubl
sar
hlt
in
addr16
xor
push
push
cwtl
aad
jae
dec
repz
aaa
inc
mov
sahf
sbb
inc
sti
lods
icebp
xor
movsb
push
sbb
fs
inc
fistl
xchg
fdivl
cmpsl
data16
lods
and
add
sbb
fcoms
out
pop
xchg
adc
clc
das
shlb
jb
xchg
and
jns
popf
data16
xor
js
xor
or
or
je
jle
pop
inc
dec
in
movb
outsb
jp
fcmovbe
pop
mov
add
jmp
shll
mov
sub
cli
xlat
inc
arpl
push
cmp
xchg
das
pop
lods
mov
popa
stos
cmp
cwtl
js
ret
out
mov
sahf
outsb
mov
sarb
loop
rclb
aas
inc
lods
aam
hlt
fldenv
repnz
scas
sub
loopne
bound
shll
mov
inc
xlat
icebp
jecxz
jno
test
movsb
jo
rcrb
mov
and
mov
shlb
sbb
loop
cmp
sahf
fwait
in
push
fidivrs
lea
in
pop
pushf
icebp
daa
popf
aaa
adcl
out
aaa
mov
fdivp
mov
int3
inc
shlb
enter
and
push
fisttps
mov
xchg
sahf
push
lret
inc
jmp
call
dec
repnz
push
aad
add
mov
mov
rcll
shll
in
lea
dec
mov
sub
les
sbb
in
mov
adc
testb
mov
es
add
imul
rcll
adc
test
xor
cld
adc
popa
mov
test
sbbl
dec
pop
cmp
clc
push
cmp
cmp
jnp
push
fisttps
cmp
pop
cmpsb
pop
mov
add
cli
cmp
rol
mov
ja
subl
inc
lret
sbb
les
lock
xlat
jecxz
inc
movsl
sbb
xchg
icebp
enter
repz
sbb
cltd
test
int
xor
int
arpl
nop
xor
mov
cmp
ret
xchg
xor
ds
jmp
ljmp
lds
pop
divl
pushf
jnp
mov
pusha
daa
sbb
add
out
dec
xlat
loope
adc
sti
dec
enter
dec
gs
ret
jnp
out
mov
mov
decl
sti
js
pop
and
pop
or
std
sbb
out
leave
psubw
and
mov
mov
pusha
mov
lret
stos
xor
fwait
pop
push
in
lea
sub
sub
mov
int3
push
sbb
aad
pop
cmp
nop
xor
pop
repnz
jmp
ljmp
xor
fwait
dec
xor
cmp
sub
arpl
sub
movl
and
out
iret
ds
jge
adc
shll
arpl
rol
js
gs
sti
sub
mov
in
inc
adc
cmp
cmp
jl
jle
mov
and
add
cltd
fs
mov
jg
movsb
pop
add
imull
and
in
xor
push
fildl
pop
or
popf
mov
bnd
loope
or
mov
leave
scas
dec
sbb
aas
xchg
stos
and
enter
movb
push
push
cltd
lds
aaa
push
test
push
gs
addr16
mov
pop
cwtl
pop
out
mov
pop
lods
int3
loope
rclb
aaa
push
rcrb
in
sbb
inc
dec
fs
ret
fwait
ja
pop
data16
out
loope
in
movsl
xor
cltd
fildl
hlt
cmp
jle
inc
sbb
add
repnz
pop
adc
xchg
pop
dec
stc
jl
scas
sbb
adc
xchg
add
xchg
push
iret
scas
adcb
add
sub
add
sub
jmp
sub
sbb
sbb
push
dec
jecxz
jnp
sub
jae
cmp
test
sbb
xchg
mov
dec
shl
negb
pop
mov
in
data16
mov
add
mov
cmc
enter
daa
dec
mov
sbb
adc
xor
stc
out
mov
imul
loope
pusha
lcall
shl
std
sbb
mov
xor
in
mov
xor
loopne
imul
xlat
mov
out
push
out
loopne
xor
pop
adc
cmp
and
fsub
jg
and
xor
repz
aaa
push
pop
out
push
sbb
and
dec
xchg
out
lock
outsl
dec
imul
out
mov
xchg
jno
lcall
je
xor
and
push
gs
push
inc
je
xor
imulb
jo
pop
mov
or
xchg
sub
loope
lret
sbb
iret
dec
cmp
daa
pop
mov
popa
pop
xlat
cs
adc
cmp
enter
test
leave
or
lock
dec
dec
xor
repz
stos
xor
lret
movb
push
fistps
push
stc
add
pop
push
pusha
add
clc
push
pop
xor
adcl
clc
fnsave
sub
xor
in
icebp
adc
pop
enter
xchg
das
mov
rsqrtps
or
mov
rorb
insl
cmp
inc
adc
mov
jns
mov
out
mov
mov
sub
std
and
shlb
in
rcr
add
fisubrl
dec
lods
call
loopne
fucomp
shr
loope
push
xchg
jnp
andl
int3
add
jo
fsubl
and
add
xlat
push
jb
nop
call
push
fsubl
adc
xorb
inc
mov
shrl
clc
inc
cmpsb
mov
sub
xchg
fadd
in
xchg
or
insb
mov
lcall
jns
movsb
mov
jl
out
pop
cmp
rorb
aaa
xor
ds
test
pop
xchg
jae
dec
dec
adc
inc
imul
sub
jne
or
cmc
add
sbb
cmpsb
cmpsl
xorb
aas
outsl
andl
cs
rcrb
subl
enter
mov
pop
sti
sub
outsl
les
push
out
push
pop
xlat
stc
in
aaa
cmp
and
xchg
xchg
out
es
into
xor
inc
dec
add
push
stos
push
pushf
fiadds
pop
cmp
xor
sub
fcoms
mov
hlt
xchg
test
add
aaa
ljmp
push
xor
adc
and
dec
pop
pushf
stos
mov
xchg
and
add
fisubl
shll
cld
jmpw
fwait
sbb
xchg
das
scas
imul
push
push
xchg
push
lock
sarl
clc
mov
or
aaa
cld
int3
pop
and
shrl
cltd
mov
in
lret
aaa
cmpsb
or
dec
cmpsb
add
pushl
and
cmp
fidivrl
lods
jmp
test
xorl
fdivp
xor
jmp
sbb
cmpsl
jbe
bound
mov
cld
mov
pop
sub
rclb
bound
jp
test
jae
es
outsl
cmp
loop
mov
mov
test
mov
dec
cltd
shrb
push
jae
inc
push
xchg
fisttps
cmpsb
test
adc
push
push
cld
iret
xchg
mov
rsm
adc
jns
mov
jno
jl
mov
std
js
jle
repnz
inc
mov
icebp
sbb
arpl
lea
out
jle
das
inc
popa
push
and
pop
push
das
aaa
xchg
add
xchg
push
nop
repz
sahf
out
xchg
sti
jmp
hlt
data16
fadds
xorl
daa
scas
cmc
sbb
repz
jg
hlt
or
pop
test
jbe
adc
pop
mov
mov
mov
mov
arpl
push
aaa
in
shlb
out
pop
rcrl
inc
mov
int3
in
inc
or
jecxz
dec
and
leave
adc
loop
sub
lds
and
pop
cld
lds
rep
mov
xchg
adcb
cmp
sub
leave
mov
pop
and
add
outsb
hlt
pop
lock
pop
cli
lret
inc
rcl
mov
add
roll
ja
jnp
sub
clc
pop
xorl
scas
ds
outsb
adc
mov
xor
push
popf
inc
mov
sub
ret
std
enter
rcrb
inc
and
kmovd
mov
or
push
and
and
fisttpll
mov
dec
push
push
lret
add
and
sahf
and
pusha
fnstcw
lahf
daa
mov
xchg
ror
or
cmc
mov
aaa
stos
stos
dec
ljmp
push
test
repz
mov
lret
icebp
inc
mov
imul
pop
xor
outsb
pop
testb
js
insb
and
cltd
inc
out
and
jecxz
and
lds
test
lea
cli
into
xor
test
mov
mov
lods
and
pop
cmp
imul
ss
or
jecxz
rcrb
nop
mov
ja
andb
xor
dec
jle
mov
mov
insl
lock
push
jle
xchg
push
out
and
mov
pop
push
jecxz
xor
or
rorb
sbb
pop
inc
testl
shl
jecxz
sbb
jo
ror
out
lods
cmp
insl
jae
loope
cmpsb
fucom
bound
ja
ror
or
pop
movsl
push
inc
or
sbb
fstl
sbb
pop
inc
clc
pop
lahf
pop
std
dec
jns
insl
jge
int
clc
xchg
repnz
in
mov
lods
loopne
add
stc
pusha
ljmp
mov
xchg
push
pushf
dec
add
and
push
shll
andl
movsb
jmp
sbb
inc
cli
decb
test
and
dec
dec
mov
adcl
inc
mov
dec
aad
add
inc
scas
mov
fbstp
movsl
lahf
xchg
pop
aaa
xchg
sub
test
jge
jmp
sbb
inc
adc
jno
xchg
repnz
mov
les
push
or
xor
clc
xor
insb
test
jb
arpl
dec
sbb
sbb
fwait
loopne
mov
jmp
std
xchg
jge
aaa
shl
cmpsb
xchg
test
push
jne
pop
add
lcall
test
mov
dec
sbb
andl
shrb
ror
popa
mov
push
imul
decl
inc
imul
pop
rclb
mov
rcr
pusha
insb
mov
rorb
lods
and
rcl
aas
adc
ds
lods
mov
pop
call
or
sub
lret
shlb
orl
ficomps
in
push
xorl
mov
clc
fwait
xor
and
iret
jle
ds
fsubs
dec
jle
fldcw
jg
pop
ss
xor
mov
adc
je
xchg
push
pop
push
insb
push
notl
push
sbb
and
xor
sti
test
test
fildl
testb
add
ljmp
mov
imul
jno
sahf
cs
pop
push
dec
movsl
or
and
in
xor
adc
pop
or
pusha
push
add
fnstsw
add
mov
dec
jo
mov
lods
mov
dec
mov
xlat
adcb
inc
outsb
cmp
push
test
loope
push
sub
inc
sbbb
inc
inc
mov
push
insl
adc
push
test
or
adc
cld
pusha
jne
sbb
sti
and
std
mov
aam
repz
daa
out
xchg
mov
xchg
bnd
add
mov
or
xor
ss
mov
sbb
jp
dec
add
xchg
imul
mov
repnz
fistpl
xor
loopne
pop
scas
or
push
cmp
sub
sti
in
jl
sbb
pop
popf
cmp
data16
mov
cmp
mov
hlt
cwtl
or
cmp
xchg
or
loopne
call
int
fadds
inc
push
mov
int3
sbb
mov
pusha
mov
sarb
sub
cmp
mov
aas
sub
adc
pusha
es
cltd
imul
into
stos
xchg
stos
or
into
cmp
test
cmovl
mov
push
pusha
sub
sub
mov
test
mov
dec
push
je
lods
cmpsl
mov
in
jg
adc
mov
adc
lods
cmp
pop
shll
xchg
jge
and
rorl
mov
in
push
push
mov
add
jmp
mov
and
mov
dec
lahf
fldenv
xor
push
jns
out
sub
leave
add
nop
roll
addr16
ret
icebp
sahf
jbe
sbb
fimuls
cmp
xchg
dec
in
pop
pop
xor
cmp
push
stos
sbb
aas
mov
cmp
hlt
pop
or
mov
in
shl
test
jae
xor
jbe
ljmp
pop
add
lock
pop
out
pusha
jbe
stos
xor
shl
add
or
pop
dec
stos
or
int
jmp
lcall
inc
mov
fstl
or
or
mov
cld
arpl
call
push
xchg
or
imul
test
dec
xor
loope
popf
rcrb
xchg
mov
mov
and
pop
pop
clc
or
popa
lods
jp
lahf
lret
jl
scas
jmp
scas
mov
adc
ret
mov
jecxz
xchg
subb
popa
test
jbe
push
mov
pusha
popf
jb
aad
xchg
cmpsl
dec
jns
adc
add
shrl
pop
adc
and
mov
mov
mov
pop
pop
out
inc
mov
jo
icebp
cs
mov
mov
fadds
mov
insb
and
rcrl
out
das
ficomps
sub
mov
nop
and
in
sub
adc
xsha256
cmpsb
xchg
scas
pop
xor
cli
ljmp
adc
flds
add
sbb
push
jns
fwait
bound
popa
mov
mov
mov
and
and
adc
data16
mov
cmp
imul
jno
mov
ljmp
pop
gs
mov
test
gs
cmc
jnp
xchg
push
mov
daa
stos
lcall
testb
push
push
test
inc
shll
cwtl
test
fnsave
pop
push
jns
movsb
hlt
cmpsb
adc
dec
mov
adc
or
lods
inc
aaa
push
mov
mov
push
ss
in
lea
mov
fmulp
push
cmpsl
repz
lahf
call
in
test
out
rcr
mov
fdivs
call
inc
mov
lds
add
rcll
xchg
cmpsb
push
icebp
jae
jae
push
out
mov
mov
or
out
mov
xor
adc
lods
cmp
jl
sub
test
mov
in
sbb
xor
ljmp
mov
lahf
ret
frstor
mov
cwtl
ds
mov
jns
inc
push
test
je
push
cld
adc
fidivrs
cmp
lock
adc
sti
stc
ss
add
ret
mov
push
cltd
mov
imul
dec
cmp
cmpsl
adc
leave
popf
pop
testl
xor
shll
xorl
pop
pushf
js
call
adc
cltd
and
test
test
mov
mov
cmp
cmp
cmp
push
pushf
js
inc
in
and
adc
or
mov
into
les
popa
cmp
adc
add
dec
jo
sahf
into
push
popa
xor
jle
sub
addr16
cmp
push
sarl
mov
lahf
inc
int
cmp
add
cmp
sbb
sbb
in
cld
cmp
stos
mov
stc
cli
dec
cmpl
inc
mov
pop
mov
mov
add
add
cmp
enter
adc
repz
jns
pop
jb
pop
dec
mov
fs
ljmp
test
mov
inc
fwait
aad
in
push
dec
dec
in
or
sarw
pushl
dec
mov
icebp
movsl
jp
popf
mov
sarl
test
cs
add
lahf
mov
cld
lret
jp
and
addr16
jae
or
jl
mov
cmpl
shr
mov
push
movsl
out
sub
mov
adc
fcomp
aaa
shl
data16
int
push
mov
fs
idivl
xchg
inc
cmp
addr16
loopne
mov
push
push
adc
xchg
pop
mov
cwtl
mov
xchg
out
imul
sbb
out
ljmp
xor
cmpsl
hlt
addb
cltd
push
cmp
stos
popa
imul
rorb
xchg
fsubrs
xchg
adc
mov
dec
call
arpl
xchg
inc
jmp
mov
or
cmpsl
sub
stos
mov
push
in
jg
xor
pop
cld
mov
push
fstps
and
enter
jbe
enter
lock
dec
xchg
leave
mov
jns
cmc
arpl
pushf
jecxz
js
pushf
hlt
add
adc
sahf
cmp
jecxz
or
push
iret
cmpb
mov
hlt
divb
jge
pop
push
shlb
lods
in
lods
dec
test
sarl
shlb
push
mov
call
mov
lods
rcrl
sbb
mov
test
daa
mov
clc
and
imul
sar
push
jno
pop
fldl
push
adc
sub
idivl
repnz
ljmp
pop
int3
mov
mov
loope
inc
jmp
xchg
pop
push
mov
xchg
fwait
std
and
xchg
mov
icebp
sub
and
dec
jp
adc
jns
movsl
and
insb
vcomisd
fldcw
pop
in
in
enter
scas
adc
and
jl
and
jno
add
mov
cmc
sub
mov
fistpl
add
lea
sbbb
jo
lods
mov
mov
mov
movsb
pop
sahf
test
cmp
inc
movb
cmp
push
shl
add
adc
ret
inc
in
xchg
shll
jp
test
or
mov
cwtl
test
mov
subl
and
sbb
adc
outsl
ljmp
sti
jno
or
mov
mov
aad
mov
mov
mov
data16
js
adc
repz
sbbb
mov
pop
cs
and
test
add
subb
inc
stos
hlt
call
in
mov
repz
into
incl
push
js
movb
mov
test
cli
mov
pop
lds
dec
daa
add
stc
sti
and
jb
pop
sbb
mov
sub
mov
and
movsb
mov
push
cmp
pop
push
jb
nop
test
mulb
int3
and
xorb
mov
inc
jmp
mov
ret
std
cld
mov
outsl
mov
add
cltd
add
icebp
icebp
enter
jbe
jno
lret
push
pop
xchg
jno
daa
rolb
loopne
cs
or
mov
stc
and
push
sbb
sti
xchg
lods
fwait
inc
clc
mov
outsl
gs
push
mov
pop
sbb
jns
push
cmp
jo
movsl
pop
mov
or
push
pop
xor
jns
and
iret
fbstp
movb
sub
xchg
mov
xor
fadds
sbb
stos
enter
lods
out
or
insb
fs
shrl
stc
push
sub
add
inc
outsb
jg
adc
lods
out
enter
xor
sbb
shll
les
cmc
sub
lds
lret
xchg
mov
movb
push
adc
ljmp
add
add
or
mov
imulb
lods
adc
mov
xchg
divl
mov
or
inc
mov
cmp
insl
xorb
ret
lods
call
or
movsl
cmp
mov
push
ret
cmp
pop
push
push
lret
cmp
dec
aam
xchg
dec
mov
loopne
mov
lea
or
dec
cmpsl
in
ss
sub
mov
sbb
push
mov
out
mov
cmp
repz
xor
in
lods
mov
mov
lock
aad
and
dec
cmp
mov
xor
mov
jmp
mov
or
sahf
insb
lds
sbb
loope
lea
cmp
mov
filds
pop
repnz
push
js
sub
rcll
or
mov
xor
nop
mov
es
cmp
and
cld
jg
cwtl
and
mov
movsb
leave
test
inc
int
popf
mov
jno
adc
leave
push
hlt
flds
inc
and
push
arpl
sbb
mul
xchg
xor
jecxz
jo
ret
outsl
cs
add
test
mov
lret
ja
mov
lahf
cmp
dec
xor
jne
fisubl
xor
ret
mov
cmpsl
hlt
lret
pop
mov
push
adc
pop
push
sahf
aaa
mov
adc
iret
and
stos
sbb
add
fdiv
add
xchg
jg
cwtl
adc
shlb
scas
mov
lock
jae
in
mov
aam
mov
addr16
in
imul
sahf
stos
sub
push
into
xor
mov
xchg
and
sahf
sbb
jecxz
int3
cmp
es
cmp
aas
push
rcr
or
jle
enter
cld
mov
js
lret
jp
sahf
add
jecxz
jne
pop
jecxz
inc
mov
fucom
dec
pop
test
int3
enter
stc
pop
test
in
pop
adc
push
nop
adc
and
push
test
movsb
mov
je
testb
das
jno
inc
inc
pop
insb
adc
sub
ret
cmp
test
xor
sub
jecxz
jae
ret
sbb
jg
mov
and
movsl
xchg
push
pop
dec
sub
imul
inc
fldenv
rolb
in
std
inc
pop
fwait
loopne
jmp
lcall
push
pop
addr16
add
fcomi
jae
mov
xchg
xor
inc
or
or
mov
jnp
and
and
jns
orb
dec
inc
adc
popf
adc
enter
aaa
leave
pop
mov
lret
push
insb
mov
ds
and
mov
xlat
adc
es
arpl
push
mov
xchg
push
pop
sti
inc
out
add
dec
pop
inc
fdivs
outsl
adc
mov
mov
xchg
sbb
jae
push
sbb
push
mov
fsubrs
mov
add
and
pop
out
dec
stos
jne
inc
cmc
cmc
mov
ss
pop
pop
aas
nop
xchg
dec
shlb
loope
dec
fnstenv
cli
outsl
and
outsb
shll
jl
sub
sarb
dec
std
in
jecxz
push
lcall
imul
or
andl
or
jb
xor
out
inc
mov
xchg
cmp
ret
inc
cmp
test
xor
stos
or
sbb
aam
shlb
jns
push
addr16
or
ds
push
mov
inc
dec
jb
mov
cld
sbb
or
mov
js
shrb
pop
mov
pop
jge
mov
aad
and
mov
push
aad
movsb
mov
lret
rorl
pusha
lcall
adc
sbb
scas
jle
dec
adc
dec
pop
mov
movsb
ret
xchg
jns
cltd
or
pop
ja
or
jecxz
xchg
pop
cmc
mov
mov
sarb
push
mov
int3
pop
xor
lret
sbb
repnz
xchg
or
lock
xchg
dec
icebp
test
stos
and
lea
sbb
dec
jne
push
shlb
lret
sub
jle,pt
pop
mov
mov
adc
aam
add
dec
dec
push
push
fnstcw
std
stos
add
leave
cwtl
mov
pop
enter
inc
fistpll
fcmovnb
add
test
pop
fstpt
clc
lea
add
inc
in
jle
inc
fsubrl
mov
adc
adc
std
lret
in
jle
push
sub
push
cmp
mov
mov
mov
cltd
inc
ss
inc
rol
xor
xchg
mov
and
add
adc
cltd
inc
pop
push
roll
pop
arpl
scas
dec
sbb
push
xor
dec
push
stc
clc
out
xor
mov
jae
jecxz
pop
jl
or
orb
mov
scas
push
ds
xchg
popf
mov
sbb
leave
in
adc
cmp
sbb
lock
and
push
fmull
or
xchg
icebp
xchg
ds
lret
cmp
in
lods
sub
jmp
add
addr16
xchg
sbb
in
xchg
jl
pop
fdivrl
mov
sub
call
in
sub
lods
lds
sbbl
pushf
in
test
das
inc
push
pushf
mov
add
mov
cmpsl
dec
dec
jne
push
repz
xor
mov
or
stos
sbb
or
ret
call
jae
sub
lahf
jle
lods
dec
xor
jno
cmp
jns
mov
movsl
and
add
lods
clts
dec
mov
or
cmp
gs
mov
and
dec
xor
add
mov
dec
rcrb
cltd
mov
cli
cmp
xchg
cmp
jnp
cmp
xchg
movsb
lret
add
jl
lret
divl
inc
cmp
inc
cltd
and
add
mov
imul
imul
jmp
jmp
xor
js
jecxz
inc
fwait
jbe
je
xchg
mov
sbb
mov
sub
xchg
aad
mov
loopne
mov
cmp
xchg
dec
xchg
mov
int3
push
adc
xchg
add
mov
je
mov
mov
add
adc
mov
and
sub
cli
xor
or
and
push
ror
xchg
jno
xchg
xor
popf
sahf
ret
lahf
incl
and
and
repz
mov
jno
sbb
js
test
rclb
jbe
daa
in
mov
pop
xlat
pop
cmp
loopne
mov
and
mov
mov
push
jmp
cmp
dec
mov
loope
lds
inc
test
or
call
clc
cmpsl
test
ret
adc
push
pop
aaa
add
inc
movsl
out
stos
std
xor
and
mov
sbb
pusha
mov
mov
xor
push
shll
dec
jge
shrb
je
and
lock
movsb
cs
mov
notl
pop
pushf
xchg
jg
enter
fs
enter
dec
clc
lods
ret
or
outsb
inc
filds
mov
pop
insb
hlt
sub
pop
fldenv
in
jo
cmp
rorb
inc
jbe
ror
dec
mov
lea
mov
mov
sbb
lds
xchg
out
sub
popa
std
out
aad
add
das
gs
inc
pop
test
mov
icebp
jmp
sub
pop
test
adc
xchg
mov
push
xorl
ret
push
mov
adc
xchg
xchg
dec
aam
cmpsb
or
mov
subl
sbb
or
mov
mov
fldenv
or
or
mov
mov
lods
xchg
lahf
pop
jle
and
fnstenv
sti
mov
aaa
push
xor
cmp
popa
mov
out
mov
or
xchg
jg,pt
cmp
mov
psrlw
jg
fwait
stos
inc
arpl
je
cmp
mov
push
into
cmp
adc
jecxz
xor
in
xchg
cmc
jl
enterw
jbe
mov
and
adc
cmpsl
sbb
xchg
add
daa
aas
cmp
pop
cbtw
xorl
stc
mov
lret
xchg
cmp
jp
cmpsb
add
mov
mov
jge
xchg
xor
jge
add
adc
push
xor
loopne
into
jle
bound
ljmp
jbe
int
push
inc
lret
cmpsl
push
pop
sbb
pop
cmp
repz
sub
mov
ja
add
bnd
mov
and
sub
test
int
add
ljmp
aas
inc
inc
aam
cmc
in
outsb
push
inc
or
vucomisd
loop
mov
hlt
jg
fdivrl
jmp
push
dec
repz
jmp
jmp
jbe
xchg
fnstsw
jecxz
hlt
xlat
cs
mov
sbb
jmp
adc
loop
xchg
testl
push
adc
cmpsl
addr16
mov
loopne
lahf
pop
inc
adc
fistl
inc
and
jmp
cmp
cmp
les
loop
ja
or
je
int3
fwait
into
es
mov
adc
rorl
and
sbb
inc
sahf
dec
ja
mov
mov
cmp
adc
repnz
pop
jnp
adc
jne
inc
cmpsb
adc
push
xchg
inc
cmp
push
dec
pusha
push
mov
pop
stc
popa
outsb
outsl
pop
ja
fwait
loope
in
sahf
xor
dec
lret
add
lods
xor
mov
mov
out
push
and
and
pushf
xchg
push
popf
sti
pushf
and
aaa
test
enter
mov
dec
cld
pop
and
cli
cs
leave
cmp
push
lcall
leave
ret
jns
jecxz
pop
lods
test
add
jo
roll
sbb
dec
leave
out
ljmp
pop
out
popf
push
popa
adc
imul
mov
test
or
push
movb
outsl
mov
pop
scas
push
and
mov
adc
adc
add
into
pop
push
stc
lret
rcr
outsl
adc
imul
orb
dec
dec
push
or
ja
jl
mov
cmp
add
mov
das
cltd
mov
ret
test
stos
cmp
fs
mov
mov
mov
aaa
test
jno
loopne
adc
cmp
xchg
sahf
scas
push
jge
add
push
cwtl
fisubrl
ret
pop
scas
out
pop
push
ffreep
stos
std
mov
out
inc
sbb
adc
inc
adcb
mov
jns
or
out
and
shll
mov
adc
clc
mov
and
aaa
mov
in
jne
repnz
clc
push
inc
dec
dec
push
lret
insb
clc
dec
lcall
xchg
ja
mov
inc
cmp
jp
push
xor
dec
xchg
pop
adc
mov
pusha
cld
scas
sub
mov
out
inc
inc
in
insl
jns
int3
jle
sar
test
aad
cmp
in
shrl
cmp
and
xchg
mov
sbb
popa
xchg
mov
bound
sub
cmp
dec
std
sub
inc
fstpt
iret
les
jnp
into
push
xor
sbb
hlt
ds
mov
xor
rclb
gs
dec
in
sti
cmp
sbb
push
in
addr16
mov
dec
mov
decb
sub
pop
cmp
nop
dec
bound
es
repnz
lret
mov
pop
sub
jge
sub
dec
iret
pop
aad
sub
inc
jge
mov
clc
xchg
fcom
mov
je
aas
cld
lahf
int3
fsubrl
shl
jbe
fs
pop
orl
mov
sbb
mov
ret
cs
pop
stc
sub
out
dec
aam
jmp
lret
xor
pop
inc
loope
xchg
sub
mov
jbe
into
imul
call
into
jno
test
sti
outsb
jno
pop
fldt
cmpsb
inc
jo
cwtl
pop
outsb
nop
sbb
mov
and
jp
push
jmp
xor
pusha
mov
or
pusha
mov
fwait
mov
cs
push
imul
adc
ficoms
push
sbb
push
push
sbb
lea
push
repnz
and
out
and
pop
xchg
enter
xor
cmp
inc
dec
adc
ljmp
sbb
mov
or
push
adc
das
cld
gs
aaa
mov
sub
jns
pop
pop
icebp
in
stos
fldt
js
pop
cmp
mov
out
mov
jns
pop
mov
ljmp
lods
dec
jns
loopne
or
orl
pop
dec
jp
repnz
push
cwtl
mov
insb
push
data16
cmp
mov
mov
popa
mov
adc
push
push
xchg
xchg
pop
lock
pop
repnz
adc
xchg
xchg
inc
cmp
pop
repz
lds
xchg
xchg
jnp
gs
in
push
mov
sub
lcall
pop
fcom
in
jo
xchg
mov
inc
ffree
dec
cmp
insl
scas
cltd
cltd
jae
scas
sub
outsl
gs
mov
push
sub
dec
rcl
std
xchg
fwait
jb
inc
out
scas
rclb
orb
addb
pop
mov
lahf
push
sub
pop
repnz
out
nop
jp
movsb
sbb
loope
sahf
ror
sub
lret
or
sbb
jg
jns
mov
add
fs
je
push
inc
cld
sbb
mov
pop
pop
mov
arpl
lret
mov
mov
imul
push
inc
sbb
pusha
cmp
sub
xchg
push
pop
popa
inc
mov
inc
jo
add
popf
pop
or
xor
jae
inc
out
mov
loop
movsb
call
pop
cmpl
jb
mov
xchg
push
into
xchg
xchg
add
mov
dec
push
repz
ds
push
enter
dec
xor
out
in
dec
mov
add
js
jae
mov
and
rcrb
ret
pop
sub
test
cli
ja
arpl
addr16
jp
mov
sbb
in
and
pushw
enter
mov
sub
jmp
cmp
xlat
cmc
sbb
mov
bnd
stos
sub
xchg
aaa
mov
dec
je
sysexit
sbb
inc
push
in
jge
arpl
cld
mov
adc
sbb
arpl
sbb
ljmp
ljmp
mov
pop
cmp
jbe
in
inc
test
mov
loopne
pop
cmp
push
into
add
xchg
mov
jb
jb
shll
std
xchg
sub
ljmp
pusha
xor
sahf
mov
andb
push
mov
fsub
mov
inc
in
insl
gs
pshufw
jmp
dec
orb
bound
sbb
sahf
mov
sarb
cmc
rcll
lds
push
inc
jmp
push
dec
sub
hlt
dec
push
pop
fimuls
mov
fiadds
push
mov
insl
fidivrs
sub
popa
scas
je
xlat
cmp
aaa
and
test
testl
imul
rorb
adc
jo
in
fsub
arpl
inc
out
cmp
push
push
ja
fmuls
jecxz
jge
enter
or
xchg
jns
jnp
and
vunpcklps
insl
es
lods
aad
sbb
jne
sti
jge
mov
cmpsl
mov
cmp
add
in
push
mov
inc
jne
mov
ss
cltd
xor
test
mov
lahf
lods
pop
inc
mov
xchg
sbb
call
jmp
adc
pslld
cmp
iret
enter
loopw
mov
push
test
sub
ja
adc
fimull
jmp
jecxz
movsb
test
xchg
or
jb
adc
movsb
adc
sub
adc
movsl
mov
in
sbb
xor
cld
loopne
ror
cmc
mov
in
inc
cwtl
scas
and
notl
addb
ljmp
or
pop
int
data16
mov
add
lret
ret
je
mov
pop
enter
lret
subl
test
fwait
cmc
fcoml
mov
xchg
cmp
mov
in
sbb
sub
dec
dec
mov
push
sub
bound
iret
clc
add
rorl
test
xchg
jecxz
mov
and
in
pop
das
xchg
stos
fsubl
loope
fwait
les
add
js
pop
push
or
insb
jnp
aad
and
jae
sbb
dec
sbb
inc
add
in
in
mov
dec
icebp
xchg
dec
ds
mov
pop
push
ss
jecxz
std
aad
xchg
push
test
ret
add
jge
popf
cmc
lods
ss
xchg
cli
lret
dec
xchg
xor
cmc
iret
mov
mov
mov
push
mov
imul
shll
and
stc
and
cmp
leave
das
jno
xlat
xchg
aad
push
mov
fidivs
dec
cli
pop
das
jmp
and
push
or
pop
rorl
cmpsl
sahf
push
xor
and
inc
test
rclb
mov
adc
nop
nop
adc
mov
iret
xchg
sahf
stos
mov
xor
sbb
adc
inc
pusha
xchg
cmpb
movsb
sti
lods
add
mov
cs
dec
jnp
adc
jp
xchg
lret
dec
jne
add
cli
ret
sub
xchg
inc
rcll
lods
arpl
dec
add
jge
mov
sti
mov
pop
cmp
in
and
and
mov
fisttpll
icebp
lock
push
adc
sub
outsb
lods
jp
adc
sbbb
gs
dec
mov
dec
vpmadcswd
outsl
test
mov
test
sahf
cmp
nop
movsl
imul
mov
lea
inc
sub
sarl
jecxz
cwtl
fcoms
xchg
leave
aaa
jns
sti
out
push
lcall
sahf
mov
xor
dec
ret
dec
aad
dec
mov
adcb
mov
jno
mov
negl
lock
pop
jle
ljmp
outsb
pop
cmp
rcrl
sar
push
push
int
pop
popa
mov
popa
cmp
sub
cs
cmp
lret
sbb
ret
jle
push
xchg
orb
xor
adc
cmp
das
fdivr
shrb
push
incb
rclb
js
aas
test
mov
dec
sbb
and
loop
jle
jmp
stos
cmp
repz
pop
fistpll
cmp
js
das
xchg
cmp
jnp
insb
rolb
mov
or
jo
lret
test
ror
mov
pop
fidivl
enter
out
xorl
xchg
data16
andb
lret
sar
adc
lock
push
jecxz
pusha
sub
mov
adc
movsl
dec
mov
xchg
jae
push
cmp
lcall
rclb
std
rcl
jge
add
out
lret
and
dec
push
xlat
sub
push
mov
xor
xchg
push
in
jo
cmp
and
ljmp
cltd
outsb
sbb
cmc
push
sarl
fwait
mov
adc
cltd
rdtsc
popa
mov
cmpl
adc
hlt
and
jo
cmp
adc
fstpl
adc
test
push
mov
lds
mov
cmpsb
xor
add
xor
imul
movd
addr16
pop
inc
out
push
pop
fldcw
xchg
popa
lds
sbb
lea
jmp
pop
xchg
ret
push
loop
into
mov
xor
imul
fbstp
xchg
fldt
sub
shl
rolb
sub
cltd
ss
push
mov
xchg
test
mov
nop
pop
stos
mov
adc
cmp
mov
cmp
jae
data16
push
in
and
out
sub
sub
cmp
jae
arpl
push
sub
xchg
jmp
ljmp
mov
shr
adc
lcall
push
adc
sub
ljmp
xor
fs
pop
dec
or
jmp
xor
test
jp
outsl
add
cmc
in
inc
lds
cld
icebp
xchg
mov
ret
bound
lea
ljmp
sbb
adc
sbb
or
jmp
cli
mov
sbb
cli
addr16
push
in
test
mov
fwait
jecxz
test
adc
rcrb
enter
in
lods
add
jecxz
cmc
mov
in
popa
xor
out
repnz
insl
sbb
push
movsb
or
pushf
fiadds
xchg
js
pop
imul
clc
adcl
test
inc
and
inc
fnstsw
orb
xchg
shrl
and
cmp
repz
lahf
sub
loope
jmp
ret
cltd
fbstp
fwait
js
jg
out
mov
push
lret
fcompl
dec
jo
leave
push
dec
testb
add
insl
mov
mov
shll
jbe
xchg
xchg
loop
or
push
xor
inc
or
sahf
push
jge
mov
cli
push
mov
arpl
pusha
xor
roll
inc
imul
mov
outsb
lret
lcall
std
push
lods
lock
loope
jo
xchg
xchg
icebp
aad
into
push
sub
ret
jne
pop
sbb
mov
push
xchg
pushf
sub
xchg
adc
jns
sar
scas
jbe
movsl
mov
je
xchg
aam
loop
mov
pushf
add
cmpsl
and
test
and
nop
aad
adc
mov
ljmp
orl
jl
sarl
mov
inc
test
dec
jecxz
inc
loop
mov
dec
shr
and
icebp
sbb
cmpsb
dec
xchg
fwait
push
push
xchg
sbb
sub
and
push
mov
ret
orb
test
out
lahf
test
add
outsb
mov
dec
cmc
lock
jl
stos
cmp
adc
push
imul
or
push
sarl
call
xchg
dec
icebp
popf
or
sub
mov
bound
jno
cwtl
test
test
push
jle
or
mov
xor
cmpsl
fmuls
mov
fmuls
ror
inc
popf
icebp
push
nop
jb
sbb
ret
fs
sbb
rcll
xchg
test
lret
ds
rorb
rorl
jnp
adc
jp
int
out
neg
inc
call
push
jmp
or
ror
sbb
inc
ficoml
dec
cmp
xchg
lods
mov
mov
sbb
add
icebp
ljmp
lahf
ljmp
jl
sub
adcl
and
or
xor
fcmovb
fstps
out
imul
inc
outsb
stc
in
xchg
sbb
inc
nop
push
arpl
ss
out
mov
in
insl
and
mull
repnz
push
popf
shlb
outsb
cltd
push
mov
imul
cli
out
nop
jbe
mov
xchg
cmc
mov
jmp
insb
cmpsb
and
push
adc
pop
sbb
adc
addr16
pop
roll
pop
dec
hlt
jmp
push
nop
into
add
hlt
addb
or
cmpsb
xchg
xor
fld
cs
cmpsl
xchg
fwait
repz
or
xchg
adc
popf
pop
sbb
inc
inc
or
outsl
addr16
loop
push
mov
stos
outsl
mov
imul
xchg
mov
sbb
rcr
sub
mov
sarb
addr16
jecxz
test
or
sarl
cmp
cmp
adc
ds
dec
sbb
mov
imul
cmc
cwtl
jae
jb
stos
iret
cli
or
sbb
rcrb
lahf
nop
scas
hlt
dec
lcall
inc
enter
mov
hlt
jae
int
sar
sub
loop
add
repz
in
jmp
push
dec
out
test
negl
jecxz
pop
and
rolb
jmp
inc
fwait
out
mov
or
cli
pusha
dec
add
dec
mov
push
sub
bound
sbb
repnz
mov
xor
pop
ljmp
lods
mov
popf
loop
mov
int3
fsubrl
cld
mov
leave
scas
lods
frstor
fadd
in
inc
je
imul
add
dec
and
push
pop
jb
mov
lds
lret
or
mov
js
shlb
push
mov
xchg
xor
mov
lock
mov
in
repnz
xor
pop
outsl
mov
std
jmp
aam
icebp
jb
loopne
andl
jns
sub
xor
cli
fcoms
xor
xchg
fistps
nop
pop
mov
stc
ljmp
jne
loop
insb
jl
int
pop
in
and
xor
les
repz
jnp
push
mov
test
mov
cmpsb
push
lds
icebp
cmp
mov
in
mov
mov
fucom
pop
les
sbb
mov
outsl
inc
scas
lea
daa
repnz
or
lret
push
inc
not
mov
lods
dec
rclb
xor
cmpsb
aad
je
fmull
leave
aad
arpl
mov
cltd
repz
inc
inc
mov
ljmp
sbb
mov
inc
in
in
fs
imul
je
pop
adc
shrb
cmpsb
shl
in
out
inc
lret
clc
fadd
cmp
fisubrs
jo
cmp
mov
jo
and
and
shlb
cld
sub
mov
call
add
pop
sbb
test
test
mov
call
pavgw
pusha
dec
ljmp
les
cmp
fwait
mov
out
cmp
data16
sbbb
ss
lock
fisttpll
jge
insl
test
testb
mov
int3
pop
cmpl
repnz
imul
ret
dec
inc
lret
sbb
pop
push
xor
leave
push
test
mov
sti
mov
push
push
imul
lret
sti
shrl
xchg
fdiv
bound
daa
out
data16
add
xchg
in
fwait
mov
imul
dec
mov
adc
dec
mov
jo
pop
fiaddl
xchg
insb
add
clc
sbb
inc
dec
imul
es
inc
sub
add
mov
sbb
xor
pop
imul
data16
push
xor
notb
aaa
push
mov
clc
outsl
out
or
mov
lea
adc
push
loope
iret
out
scas
add
jp
int3
lret
xchg
cmc
add
sub
cs
mov
ror
pushf
ror
push
dec
icebp
push
pop
rol
xor
cmp
lcall
rdtsc
icebp
inc
movsl
insl
in
mov
push
and
or
fwait
imul
xchg
dec
adc
jb
sarl
cltd
in
data16
mov
iret
mov
in
mov
inc
shl
push
push
pop
jle
popa
xor
xchg
and
outsb
call
and
jg
pop
add
leave
xor
adc
repz
stos
iret
jp
jge
and
jae
mov
dec
mov
sahf
sbb
fbstp
cld
sbb
cmp
popa
dec
pop
icebp
clc
call
cld
subb
loop
enter
jge
fs
daa
in
pop
pop
enter
jl
jbe
fwait
stos
push
pusha
mov
pop
push
add
mov
adc
cli
mov
mov
mov
jle,pn
roll
lahf
and
lock
jmp
in
imul
dec
gs
mov
mov
dec
add
repz
lods
hlt
lock
rcrl
outsl
ret
icebp
subb
repz
sbb
push
clc
and
and
and
lahf
imul
xchg
mov
mov
cmp
into
xor
jb
mov
test
hlt
cmp
adc
jne
dec
ret
push
aaa
mov
aad
negb
aas
adc
xchg
out
out
xchg
mov
mov
or
std
pop
test
insl
enter
jecxz
fnstcw
mov
xor
pushf
add
insb
mov
cmp
push
push
dec
rorb
push
cli
sub
add
dec
ss
popf
in
push
dec
psllq
pop
adc
insl
cmp
repnz
adc
loop
sbb
mov
test
lods
fimuls
int3
mov
ret
mov
and
pop
data16
mov
jmp
popa
pop
out
arpl
add
insl
leave
ds
push
xchg
or
in
mov
or
dec
jns
pusha
jo
dec
orl
es
sbb
push
mov
mov
adc
pop
or
lds
or
enter
fists
xor
sbbl
ja
mov
in
mov
sbbl
cltd
pop
in
shrb
mov
xchg
fimull
insl
call
popa
mov
sub
inc
inc
push
sbbb
mov
adc
or
jle
cld
fiadds
insl
mov
in
icebp
inc
pop
push
stc
out
outsb
sahf
mov
and
cmp
mov
hlt
les
cltd
cmp
mov
sbb
push
imul
inc
popf
sbb
movsl
sbb
mov
sbb
dec
cmp
imul
mov
lret
in
cmpsb
jl
leave
stc
mov
stos
pop
aaa
sbbl
mov
adc
es
stos
add
dec
add
jg
outsl
fs
enter
jecxz,pt
or
rcrb
push
nop
pop
xor
das
and
jo
call
lods
roll
lock
xchg
pop
mov
pop
cmp
pop
pop
adc
xor
cwtl
je
xchg
scas
outsl
ficompl
cmp
push
jns
mov
pusha
dec
mov
xchg
cmp
data16
daa
lods
cmp
pusha
call
dec
push
mov
push
mov
aas
fidivrs
xor
in
hlt
aad
jo
push
and
xchg
xlat
jl
or
shrb
dec
push
lret
rolb
inc
gs
std
dec
enter
cmp
addr16
cmp
lods
pop
popa
jnp
push
xor
push
popf
jmp
jecxz
push
ds
lret
in
jle
inc
sub
mov
adc
xor
inc
and
push
ljmp
addr16
mov
lcall
xchg
push
fwait
icebp
mov
lds
pusha
sarl
mulb
mov
pop
insl
dec
add
and
stos
cltd
data16
loopne
shr
adc
push
mov
cmpsl
je
mov
dec
mov
mov
pushf
pushf
push
insb
leave
in
xor
or
iret
aas
mov
jl
cmp
push
xlat
lods
sahf
jl
cltd
mov
sahf
jnp
mov
ss
imull
popa
adc
xchg
pop
mov
shr
dec
dec
mov
jns
sub
push
xor
inc
out
loop
cld
dec
sub
xchg
ljmp
jae
cmpsb
ret
lods
sbb
insl
dec
mov
adcb
dec
adc
int3
test
cmp
jae
out
cmp
cmpsl
or
call
mov
mov
addr16
push
mov
mov
or
adc
fmuls
rcrb
insb
rol
cmpl
in
sub
sahf
mov
cld
or
mov
mov
clc
pop
jb
jp
es
sbb
insb
push
sub
icebp
cmp
shrl
shl
xchg
and
adc
gs
push
fsts
inc
lock
imul
jb
mov
ss
sbb
inc
dec
ljmp
pop
sub
in
aaa
lods
ljmp
mov
xor
cmp
in
lds
insb
shll
dec
pop
xor
ret
push
mov
dec
xchg
or
mov
cmp
dec
sbb
pop
dec
in
addr16
add
repz
das
dec
std
js
mov
adc
movb
notl
xorl
jl
repz
mov
mov
outsl
jmp
cmpsb
mov
scas
insb
ljmp
out
push
sub
cwtl
push
daa
mov
mov
pop
movsl
mov
jno
incb
pushf
arpl
sub
mov
aad
fistl
repz
rorl
fsub
orl
pop
sub
add
ds
cmc
cmc
lret
push
rol
cwtl
iret
xor
popa
imul
adc
popf
aaa
xor
inc
dec
mov
push
and
out
and
test
lret
fs
shrl
sbb
pop
push
or
mov
std
add
mov
ds
push
mov
push
imul
paddw
imull
mov
adc
test
push
shll
pop
sbb
push
lcall
pop
ficompl
mov
enter
cmpsb
push
push
test
cmp
xchg
into
jg
popf
mov
add
adc
push
and
mov
aaa
jae
jnp
outsl
mov
les
inc
jmp
js
jg
jb
pop
lods
insl
out
loop
fsubs
cmpsl
cmc
sub
ds
mov
mov
add
sbb
mov
mov
js
imul
loop
fidivs
pushf
icebp
mov
dec
loope
lods
xchg
sbb
push
xor
cmp
ret
mov
sbb
mull
in
sub
std
add
repnz
adc
xchg
or
adc
push
dec
sbb
inc
insl
sbb
mov
nop
push
les
pop
out
jae
inc
inc
sbbb
dec
push
mov
clc
cmp
xchg
out
add
cmp
add
repz
mov
and
inc
add
lea
pushf
std
cmp
sbb
ffree
or
push
adc
pop
sarl
xchg
out
testb
or
or
outsl
xchg
inc
jmp
cs
dec
outsb
xchg
cmp
mov
sahf
rcr
imulb
ss
push
stos
push
clc
sbb
jg
pop
ret
clc
mov
cmp
dec
adc
cmp
or
sahf
mov
insb
xor
shrl
or
sbb
dec
shr
js
cmp
clc
jmp
mov
hlt
loop
dec
sbb
dec
aad
fidivs
andl
or
popa
or
and
fisttpl
mov
add
mov
mov
pushf
repnz
hlt
jecxz
sub
and
in
mov
dec
or
mov
test
xchg
jp
mov
push
addr16
mov
push
adc
add
sarb
jg
jmp
loopne
pop
scas
ror
sbb
popa
xchg
adc
js
and
orl
inc
call
sbb
das
dec
cmc
testl
mov
inc
inc
inc
fcompl
cmp
mov
inc
jo
sahf
popf
mov
and
orl
jl
xchg
push
and
jns
jl
inc
out
mov
add
sub
jge
sub
jmp
sahf
call
ret
cltd
jge
inc
mov
pop
rcll
cmp
jo
fsubrl
push
lret
ffreep
cwtl
sbb
jae
and
fs
pusha
data16
imul
repnz
sub
jecxz
cmp
scas
xlat
pop
or
add
aad
icebp
adc
loop
rcl
mov
gs
push
pop
popf
lret
pop
hlt
adc
insl
sbb
jo
outsl
cld
rol
scas
in
out
xor
cwtl
xor
push
mov
mov
xchg
arpl
pop
and
adc
jp
mov
mov
inc
js
sbb
cmp
and
test
dec
jb
dec
icebp
in
out
ja
add
fwait
popa
dec
sbb
lock
mov
sarb
sub
cmp
repnz
repnz
xchg
cmp
orl
in
cmpsb
jb
add
adc
out
lock
fisubrs
push
inc
inc
pop
shl
rorl
mov
mov
dec
std
sti
andb
add
jno
dec
sub
das
aaa
arpl
mov
out
test
dec
inc
roll
lret
adc
lods
insb
or
call
popa
call
movsb
sub
movsl
fldcw
aaa
insb
adc
add
xchg
mov
dec
das
mov
bound
cmpsl
jb
inc
adc
pop
jg
jno
cmp
mov
xor
cli
hlt
fcompl
mov
repz
mov
cmpsl
xlat
aas
xor
scas
loopne
push
pop
movl
sti
nop
xor
movsl
add
je
je
leave
std
mov
out
es
sub
lret
adc
outsb
sbbl
or
xor
out
add
test
fcomi
push
xchg
pop
ljmp
les
pop
mov
cmp
fcmovb
sbb
sbb
iret
adc
out
insl
add
es
sbb
inc
mov
push
ljmp
inc
ret
inc
mov
je
pop
sub
jle
not
dec
adc
dec
frstor
arpl
repnz
mov
inc
pop
ret
inc
xor
fs
icebp
lods
pop
mov
pop
addl
popa
sub
push
push
adc
rcrb
cmp
inc
data16
jnp
sarl
lods
sti
les
pop
cmp
xchg
lahf
call
mov
cmp
mov
sbb
shll
inc
and
arpl
ja
push
lods
mov
adc
pop
int
jo
jb
aas
cmp
xchg
cmp
pushf
pusha
jns
mov
ja
rcll
inc
cmp
nop
movl
je
push
mov
mov
mov
inc
stos
sub
mov
fisubs
mov
jp
out
jp
and
jno
popa
dec
loope
pop
stos
outsl
sub
test
pop
pop
iret
xor
lahf
ja
mov
popf
jb
xchg
stc
xor
scas
sbb
cs
cs
xlat
out
shl
push
fdivl
nop
test
test
mov
mov
movsl
and
mov
les
and
dec
repz
push
fcmovnbe
jcxz
jp
mov
hlt
push
dec
nop
adc
push
insb
ror
int
mov
mov
sbb
shll
sub
aam
pop
shll
xchg
mov
sbb
jmp
shll
inc
stos
xor
daa
inc
xchg
add
movsb
mov
out
test
or
ret
int3
pop
mov
aas
add
rclb
mov
cs
or
sbbl
add
or
add
add
jo
pusha
out
les
dec
mov
jecxz
sbb
sbb
out
jl
mov
stc
cmp
lods
mov
sbb
adc
or
pushf
mov
mov
int
loope
aam
stos
xchg
inc
pop
inc
add
inc
loope
out
std
iret
stos
mov
mov
cmp
lods
and
scas
cs
out
mov
popf
mov
dec
mov
dec
dec
test
push
add
xor
ja
out
jge
push
pushf
add
mov
lret
clc
rcrb
and
es
ret
push
pop
test
sub
fnstcw
mov
xchg
lock
xchg
push
popa
dec
add
dec
mov
in
and
cmp
out
and
scas
mov
shll
stc
push
push
lods
mov
pop
ljmp
sbb
loopne
fsts
mov
and
cmp
cs
imul
xchg
cmp
movsb
nop
test
test
ds
sbb
cmc
sbb
add
inc
push
stc
push
popa
ret
repnz
push
enter
les
leave
call
adc
mov
clc
cmp
outsb
and
push
add
jb
jmp
divl
jmp
adc
pushf
aas
stos
insb
mov
and
fcmovnbe
jo
jno
inc
outsl
jne
or
sub
inc
cli
stos
jmp
pushf
jl
popf
sahf
or
cld
sbb
push
sub
and
push
mov
xchg
jmp
aas
mov
mov
cmp
jae
stos
int
lahf
cmc
mov
test
dec
repz
inc
jo
aas
daa
dec
imul
sbb
xchg
add
out
movsl
xor
push
push
hlt
push
or
pop
fwait
in
xchg
jnp
sbb
push
xor
mov
mov
cltd
mov
cmp
jmp
pop
cli
push
add
sbb
aad
jmp
in
dec
addr16
cwtl
loopne
inc
or
add
insb
sbb
push
or
mov
cwtl
lods
and
mov
cmp
movaps
inc
xchg
push
test
inc
stos
cmpl
jecxz
fisttps
ret
decb
imul
fcompl
sahf
xor
or
sbb
pop
cmp
roll
rcl
out
fwait
rolb
xor
sahf
out
test
xchg
je
shll
idivl
xor
aad
dec
rcrl
or
imul
ja
fidivs
jge
mov
loop
push
jns
inc
test
popf
pusha
add
insl
mov
mov
sub
inc
aad
sbb
jle
std
fsubl
mov
int3
bound
lock
mov
arpl
mov
mov
iret
sbb
outsb
mov
mov
popf
lahf
into
hlt
stos
jg
lds
pop
es
jl
sahf
ljmp
fs
fcmovne
imul
dec
mov
fs
lahf
mov
scas
popf
in
aas
mov
xchg
or
pop
dec
inc
int
lods
push
lahf
adc
push
shlb
or
or
add
inc
pop
and
sbb
mov
or
xchg
movsb
les
dec
les
mov
dec
in
jb
repz
inc
popf
push
inc
lods
das
shl
xor
outsb
mov
adc
cmp
stos
add
ret
js
daa
jb
in
lock
mov
call
imul
add
cmp
cltd
inc
sbb
mov
icebp
sti
sbb
inc
mov
cwtl
dec
fcomps
add
inc
in
mov
jmp
xchg
sti
stos
out
stc
mov
sub
not
mov
jbe
es
rcr
sbb
mov
xor
ja
clc
mov
mov
test
out
cmp
into
mov
enter
out
xchg
rcr
jbe
pop
mov
arpl
pop
sbbl
mov
jns
sahf
mov
mov
jo
adc
and
jns
insb
sub
cs
popf
dec
and
xor
jmp
insl
mov
xor
hlt
pop
mov
dec
call
adc
insl
push
adc
sub
sbb
add
in
imul
arpl
dec
cmc
js
or
adc
cmp
dec
rorl
and
sti
js
ja
mov
push
push
cmpsb
call
je
in
lret
in
in
sbb
andb
jecxz
dec
test
xchg
addr16
shrl
and
mov
int3
xor
mov
arpl
fbstp
jl
jb
and
ffree
js
add
cmpsb
push
push
mov
stc
pusha
cmp
and
jo
pop
inc
jge
push
sub
or
cmpsb
jmp
cmp
pop
adc
mov
jne
xchg
sahf
out
gs
shll
inc
pop
stos
jp
adc
scas
cmp
les
insb
pop
loopne
mov
cs
into
xchg
mov
and
mov
jmp
std
mov
cmpsb
xchg
cmpsl
inc
inc
xchg
push
mov
imul
adc
mov
mov
out
test
adc
dec
push
fwait
lret
jne
out
shlb
xchg
arpl
sbb
mov
adc
add
and
pop
cmp
pop
pop
mov
das
inc
test
add
sub
or
inc
adc
and
shl
inc
dec
loop
arpl
adc
and
mov
adc
mov
pusha
xchg
outsl
xchg
sar
out
pop
iret
insl
mov
int
insl
jae
mov
leave
dec
jo
fs
mov
sub
loope
sbb
xor
mov
ja
subl
xor
mov
jae
loop
and
or
test
mov
mov
imul
test
mov
push
inc
mov
jg
fiaddl
rorl
lret
mov
jmp
sub
push
pop
jne
jno
or
xchg
dec
xchg
in
cmp
xchg
in
and
rorl
jb,pn
out
push
mov
mov
and
xchg
std
cs
aas
inc
jmp
pop
lock
les
aam
daa
scas
mov
sbb
xor
xchg
sti
sbb
sub
xchg
lret
or
test
into
daa
xor
push
sub
int3
inc
pop
inc
ret
mov
pop
lret
sbb
jnp
imul
rcrb
movsb
jle
lock
fwait
daa
out
cmp
mov
sahf
jmp
repnz
sbb
inc
adc
or
stc
push
add
mov
aaa
push
clc
in
jmp
icebp
test
ss
jmp
jmp
cltd
data16
dec
jns
add
dec
rol
mov
jmp
mov
push
lea
test
cmpsl
jns
dec
dec
enter
mov
jmp
push
mov
xor
arpl
iret
push
xchg
adc
or
cmp
test
or
loop
pop
jb
cltd
add
pop
pop
adc
nop
or
movl
and
push
push
adc
pop
daa
cmpsl
movl
in
cmp
cmc
mov
inc
sbb
shr
mov
and
pusha
dec
ljmp
in
dec
les
andb
mov
stc
je
shll
bound
orl
std
adc
scas
sbb
or
sub
dec
popa
icebp
pop
sbb
js
fildl
js
insb
xchg
jl
imul
lods
lret
jp
push
or
cmpsl
sbb
imul
out
sbbl
mov
and
adc
in
mov
xor
daa
sub
or
cs
sti
adc
push
popf
lods
jbe
into
scas
sbbb
loop
cmpsl
arpl
or
inc
hlt
das
icebp
pop
shl
test
mov
adc
xor
pop
daa
xchg
dec
dec
in
lret
xchg
loop
int
das
xchg
out
addr16
inc
int
lods
push
fcoms
es
mov
adc
add
xor
cmpsb
mov
jne
mov
lret
lcall
inc
shrl
pop
iret
shrb
xchg
mov
add
stc
fs
es
add
aad
mov
int3
addb
sub
sbbl
in
in
stc
shrb
mov
xchg
pop
aad
cmp
test
shr
mov
mov
clc
or
mov
adc
add
or
adc
push
cmp
shr
nop
call
push
ljmp
sub
imul
mov
add
stc
inc
cmp
mov
mov
pop
dec
xchg
mov
push
sbb
lea
repnz
cmc
lcall
cmp
mov
ret
pop
fcompl
cmp
add
adc
jnp
lds
sbb
fdivrl
cs
and
dec
mov
jbe
add
jbe
test
dec
nop
mov
pop
roll
mov
dec
pop
lods
orb
pop
stc
jle
push
sub
xor
or
imul
fsubrs
mov
ljmp
jb
pop
cmp
out
xchg
mov
mov
nop
lea
sub
movsl
lock
xor
dec
fcoms
ljmp
fidivs
or
or
or
mov
push
pop
hlt
sbb
push
adc
dec
icebp
mov
cld
and
out
daa
pop
push
jo
imul
cltd
xchg
outsl
das
test
inc
jno
in
imul
aaa
sbb
or
pop
dec
repz
dec
push
mov
loop
ss
rcrl
inc
add
test
iret
and
mov
aaa
pop
das
inc
sub
sbb
out
xchg
cmp
ljmp
arpl
inc
loope
loop
jle
ret
in
rclb
inc
cs
xor
cltd
jnp
scas
pop
aas
in
mov
popf
test
push
test
xor
add
outsb
xor
dec
and
push
std
sbb
test
mov
or
push
movsb
adc
outsl
mov
fstpl
push
and
lahf
and
in
pop
and
pop
add
xor
inc
mov
sbb
lcall
jne
jmp
shlb
push
mov
shll
push
lea
fistpl
xor
push
mov
push
and
ss
sub
fsubrs
mov
or
inc
xchg
jle
xchg
aaa
adc
ja
cs
or
dec
movl
sub
stos
xor
push
fimull
mov
movsl
lods
ficoms
int
jge
mov
sbb
mov
dec
cmpsl
sub
dec
jno
mov
decl
mov
aaa
stos
pop
arpl
mov
pop
clc
sub
lods
in
mov
push
xor
out
stc
dec
mov
rol
jg
sti
daa
in
or
stc
mov
sub
jg
push
fidivl
fistl
dec
push
lcall
fldt
push
or
imul
mov
test
lahf
push
nop
push
cmpsb
adc
mov
in
hlt
adc
mov
insb
mov
add
rorb
dec
push
sbb
inc
test
push
cwtl
push
insl
mov
sub
xor
ja
in
inc
mov
aaa
inc
outsl
imul
in
adc
xchg
adc
jno
lret
test
pop
mov
mov
outsl
cltd
inc
push
or
adc
sub
outsl
leave
fwait
clc
mov
and
xchg
addl
pop
xor
or
sub
test
xor
insb
stc
inc
jecxz
in
outsl
imul
ret
notl
pop
loopne
aas
int
fptan
inc
jb
lds
dec
insb
fisttpl
jl
jne
insl
xor
andb
jmp
jnp
mov
inc
lds
sub
pop
xchg
mov
ja
dec
das
mov
enter
jp
mov
lss
sbb
lret
or
fcomp
in
fwait
int3
adcl
jmp
in
outsb
fs
iret
mov
fidivl
inc
es
or
stos
leave
aam
rolb
cs
and
adc
sub
enter
insl
cmp
std
jl
stc
cs
pop
dec
xor
popf
push
push
adc
push
sub
pop
xor
mov
mov
mov
into
nop
subl
jle
fldenv
adc
call
pop
decl
sbb
lahf
sahf
aaa
mov
arpl
jl
sbb
adc
call
cmp
cmp
sbb
or
dec
xchg
out
xor
push
jge
enter
testl
ja
or
mov
int
xor
shll
xchg
mov
in
cltd
mov
call
ret
add
jae
mov
fwait
jmp
or
movsb
xchg
jne
ffreep
inc
xchg
mov
mov
lret
es
popa
mov
push
orb
pop
fcoms
pop
push
loope
out
push
xchg
sub
cmp
cmp
inc
inc
dec
mov
cld
adc
adc
nop
stc
cmp
mov
lret
sub
xchg
sub
sbb
adc
imul
mov
mov
or
mov
es
mull
shrl
mov
in
shrl
xor
lds
dec
pop
jnp
adc
sub
loopne
pop
fst
mov
push
jle
rolb
push
mov
aam
sahf
jecxz
mov
mov
std
sub
enter
sbb
sbb
les
or
sub
fiaddl
lret
adc
pop
or
add
shll
shrl
xchg
inc
mov
out
nop
inc
sub
cs
push
and
sahf
mov
fucom
pop
sbb
rorl
shlb
in
in
jg
push
mov
pop
fnsave
mov
fisttps
jne
bound
xchg
sub
jbe
out
jg
fldcw
cmpsb
fs
pop
out
cwtl
les
adc
dec
inc
mov
mov
negb
mov
dec
mov
cmp
add
push
int
jecxz
aam
mov
in
out
shrb
push
hlt
mov
lret
push
lock
and
xchg
push
ljmp
push
flds
sbb
imul
sub
xor
cmp
jmp
insb
xor
icebp
cmpsb
mov
jmp
mov
scas
lock
ret
add
sub
into
jns
out
mov
pop
jecxz
inc
mov
xchg
or
xor
jl
das
mov
aam
sbbl
call
inc
jne
dec
aad
call
int3
call
fcoml
and
pop
outsb
mov
test
clc
jo
mov
mov
cwtl
not
iret
rcrl
adc
push
mov
mov
int3
add
xchg
pop
leave
mov
test
adcb
in
std
xchg
shlb
sti
inc
mov
repz
call
out
fadd
arpl
adc
jno
aas
out
jmp
aas
add
mov
lods
push
mov
imul
ja
das
mov
inc
jmp
rorb
or
xchg
jno
inc
lret
mov
lahf
xor
push
jle
js
gs
mov
jno
sub
sub
mov
fsubrs
fwait
sbb
out
int
jns
pop
xchg
lret
or
loope
mov
arpl
mov
data16
jne
adc
scas
mov
lahf
xlat
mov
sub
sbb
pop
imul
mov
mov
inc
mov
adc
cmp
loopne
and
adcl
loope
jb
mov
xchg
push
in
or
pop
jnp
movsb
js
inc
push
cltd
adc
inc
jecxz
sbb
mov
pusha
cmp
lcall
or
lods
mov
popf
jo
sbb
repnz
lret
pop
jg
in
ret
push
dec
shrb
xchg
int3
xchg
pop
push
sbb
dec
jb
dec
xor
in
jae
js
push
test
movsb
out
scas
fsubs
pop
nop
mov
sarb
ds
xchg
iret
jae
outsl
out
pop
and
push
sub
mov
xchg
push
stc
or
out
xchg
push
adc
adc
adc
test
in
imul
xchg
and
rolb
sbb
xchg
andl
sahf
and
jmp
jne
out
jmp
inc
push
insl
push
shlb
ficoms
cltd
in
xchg
push
dec
int3
push
mov
test
std
jae
cmc
jae
sahf
gs
jb
mov
fisubl
push
inc
xchg
ror
or
fildl
xchg
mov
mov
xor
sbb
repz
std
mov
nop
xchg
fldl
lret
int3
bound
mov
loope
mov
xor
loop
pusha
sahf
fstpt
xchg
pusha
rclb
mov
ret
sub
add
pop
inc
lods
lds
andb
test
add
add
es
aas
fisubs
dec
andb
pop
and
mov
lods
pop
ret
pop
xchg
pop
cwtl
sub
cmp
test
addr16
or
dec
push
lea
add
out
adc
mov
gs
mov
int
inc
sbb
int3
aad
pop
sbb
or
incb
sbbl
int
ror
ret
pushf
mov
arpl
push
mov
aas
dec
clc
inc
adc
xchg
scas
mov
xlat
or
xor
lret
xor
scas
popf
in
xchg
in
inc
mov
inc
fildl
js
xlat
xlat
dec
mov
popf
mov
adc
rcrb
lea
cltd
xor
mov
mov
shl
popf
mov
popf
sub
fs
adc
mov
lcall
pusha
ss
test
int3
push
xchg
jl
in
negl
fwait
inc
mov
stc
dec
sub
lret
out
lret
es
inc
jge
add
push
xchg
cmpb
and
pop
adc
adc
pop
in
mov
inc
enter
cmpsb
jg
jne
pop
out
mov
sbb
mov
mov
pop
lret
push
lods
xor
in
testl
sahf
test
dec
lock
xchg
jle
lods
lcall
lods
shll
jp
aas
mov
push
stos
pop
fdivs
pop
push
jae
cltd
mov
push
sub
dec
mov
mov
insl
inc
and
add
loopne
sub
pop
or
inc
fwait
sub
mov
add
inc
adc
ss
cmc
subb
dec
mov
imul
cs
mov
jno
pop
sbb
dec
insl
adc
imul
cmp
jno
scas
mov
sub
xor
push
call
hlt
mov
jo
pop
mov
dec
push
cld
fwait
arpl
pop
or
dec
dec
dec
cmp
dec
mov
cmpsb
int
stc
ss
xlat
cmpsb
int3
scas
cli
add
popf
adc
call
out
stos
mov
push
inc
jmp
call
clc
aad
mov
cmpsl
out
in
jg
enter
dec
mov
push
fildl
lods
add
mov
sbb
loopne
mov
jae
and
incb
fs
cmpsb
stos
imul
stos
lret
and
mov
lret
call
es
loope
add
lods
sub
fucomip
jns
pop
repz
dec
adc
and
or
repz
push
leave
in
loop
dec
pop
mov
jne
icebp
jne
xlat
fwait
pop
je
inc
sub
shll
aas
into
or
jle
or
sbb
and
cld
cmp
dec
push
jbe
incl
and
sub
aad
push
cltd
sbb
shll
xchg
fisubs
mov
lea
dec
out
sbb
ja
lds
mov
nop
push
in
out
in
movb
aaa
jg
out
sbb
mov
loopne
scas
mov
aas
inc
xchg
out
popf
popa
ret
lods
lahf
jns
jo
int
enter
filds
jo
xor
pop
test
sub
jae
mov
ss
pcmpeqd
ficoml
movsb
insl
bswap
ficompl
sahf
mov
push
iret
mov
xor
push
mov
pop
mov
negl
imul
mov
imul
mov
fdiv
sbb
push
nop
push
mov
cmc
in
stos
push
jp
dec
sbb
mov
jecxz
iret
cmp
xchg
add
pop
iret
mov
sbb
mov
cmp
push
add
cld
stos
or
pop
sbb
aad
lret
cmc
ljmp
mov
and
xor
mov
inc
push
stc
push
les
movsl
popl
mov
xor
and
and
loope
bnd
ret
repz
mov
dec
jae
and
mov
loope
repnz
pop
repnz
stos
cmp
in
sbb
add
rorl
xchg
pop
int3
mov
add
jge
mov
xlat
scas
cmp
mov
insb
sti
mov
inc
test
stos
fdiv
fsubl
lea
dec
out
xor
pop
push
jge
test
push
pop
pop
lret
loope
pushl
pop
mov
sahf
lds
aad
shlb
mov
das
fbld
xchg
sbb
mov
mov
das
mov
push
mov
dec
inc
fisubl
in
add
jno
daa
aas
pop
mov
repnz
or
jbe
in
js
ljmp
xchg
addl
push
and
and
negl
push
xlat
movsl
push
push
adc
mov
leave
cmc
or
loop
movhlps
pop
sub
leave
xor
fldl
enter
adc
test
sar
jge
cmp
icebp
call
push
mov
inc
call
clc
push
lcall
add
shl
jae
rclb
stos
mov
insb
pop
out
lcall
mov
movsb
jae
mov
orb
arpl
movsl
adc
mov
mov
push
mov
lcall
cmpsb
fcomp
hlt
jmp
xlat
loop
pop
test
sub
push
dec
cmp
icebp
jbe
mov
scas
dec
sbb
push
dec
sbb
mov
pop
adc
mov
ja
mov
sub
xor
imul
mov
dec
imul
mov
test
lcall
dec
fcmovnu
mov
xor
dec
and
xor
mov
and
push
jb
mov
mov
xor
jnp
xchg
add
ss
cmp
and
mov
out
psubq
hlt
out
push
cwtl
int
add
push
mov
add
push
test
mov
into
pop
mov
mov
cmp
push
test
xchg
mov
loope
lret
hlt
add
jl
jb
xor
les
into
loope
jno
jle
push
popf
pushf
loopne
sahf
das
rcrb
in
lret
mov
sub
fistpll
in
cmp
mov
cmp
rorl
push
cli
sbb
adcb
inc
nop
and
cltd
and
jmp
iret
adc
and
sbb
cmp
push
xchg
ja
add
sarb
and
fmulp
fdivrs
into
into
push
xor
cmc
xchg
mov
sub
jne
push
ljmp
aaa
out
leave
pusha
xor
cwtl
cmp
and
scas
nop
pop
lahf
in
fwait
mov
and
imul
inc
mov
das
sub
pusha
xlat
fwait
or
dec
scas
in
or
mov
aad
adc
clc
and
or
add
cwtl
or
std
js
dec
testl
push
das
adc
mov
in
insb
sarl
dec
inc
xchg
call
inc
iret
add
jo
pop
mov
mov
or
mov
xchg
cwtl
and
fldz
push
sbb
je
pop
jp
adc
scas
cs
add
pop
adc
ss
mov
cmp
aam
loopne
faddp
adc
lret
push
stos
adc
shl
cmpsb
in
inc
int3
pusha
xchg
pop
scas
int
push
aas
shll
push
ficomps
insl
test
les
fimuls
lret
cmp
nop
push
inc
push
mov
lret
or
inc
ficoml
pop
sub
sbb
adc
mov
add
cwtl
sbb
xchg
mov
push
dec
sub
lock
mov
xchg
xor
xchg
mov
push
daa
das
addb
testl
bound
push
add
movsb
ljmp
out
jmp
pop
push
push
cli
mov
inc
inc
cmp
lods
sub
into
dec
xchg
mov
dec
out
jmp
addr16
inc
aad
xlat
push
adc
sub
cmc
dec
in
push
inc
push
shl
add
out
pop
mov
adc
imul
sub
in
mov
aam
mov
iret
hlt
push
add
popf
push
mov
iret
mov
ja
pop
cld
jl
pop
sbb
lahf
inc
jbe
and
pop
add
mov
pop
cwtl
lret
push
cmp
inc
push
imul
xor
pop
sub
dec
sti
cmp
pop
xchg
adc
movsb
pusha
push
arpl
daa
cmpsl
inc
int3
pusha
out
cmpsb
push
sbbb
pop
jns
jne
sub
push
scas
repnz
mov
adc
lret
andl
ret
frstor
mov
sub
inc
imul
fwait
add
add
mov
xchg
mov
sub
data16
and
add
mov
incl
nop
pop
mov
cmpsl
js
inc
jno
outsl
arpl
test
jge
in
test
js
xchg
addr16
cmpsb
pop
insl
xchg
sti
add
arpl
jecxz
mov
inc
scas
add
xor
jle
fdiv
inc
notb
pushf
out
movsb
xor
mov
sbb
sub
mov
rclb
int3
mov
adcb
jno
out
cs
jb
ret
ret
jbe
mov
sahf
jnp
jbe
subb
or
loop
dec
mov
xor
scas
cmpsl
rcll
dec
out
xchg
pop
jecxz
mov
mov
adc
xchg
adc
mov
repz
dec
sbb
and
repz
xor
mov
popa
push
xor
push
lahf
test
aam
cmpsb
addr16
dec
mov
ss
lods
mov
add
fs
imull
std
out
jl
out
aas
icebp
popf
mov
dec
push
mov
into
test
daa
in
les
inc
hlt
andb
sub
pop
inc
out
int3
xchg
out
sub
rcr
pop
stc
and
out
sub
out
xlat
faddl
les
sbb
mov
insb
fdivrs
int3
add
xchg
movsl
mov
aam
int
lock
mov
pop
sbb
or
cmp
ja
sbbb
xchg
mov
cs
rcrb
pushf
push
movsl
and
ret
or
fadds
lds
add
jmp
pop
test
pop
pop
icebp
and
push
iret
test
sarl
push
scas
and
cmp
mov
cwtl
mov
cwtl
and
add
xchg
push
gs
aaa
and
in
fwait
mov
push
iret
daa
mov
lock
inc
push
jnp
cmc
pop
add
push
int3
mov
jno
mov
pop
inc
sarb
insb
je
push
dec
mov
push
dec
adc
cmp
fwait
dec
mov
add
dec
call
cli
lds
jns
inc
mov
adc
inc
push
mov
jge
xor
cmpsb
sarl
stos
cld
cmp
test
xor
addr16
jb
fimull
mov
enter
add
and
push
cs
mov
fisubl
imul
mov
sub
xor
test
inc
nop
roll
scas
stc
cld
mov
xchg
leave
adc
cltd
jne
out
jne
push
sti
scas
aam
jns
dec
add
aaa
jge
in
cmp
jno
push
pop
stos
mov
push
clc
cmpsb
lret
fsubrl
sahf
mov
xor
mov
mov
cmp
mov
daa
adc
repz
loopne
mov
cmpsl
mov
fwait
mov
popf
popa
mov
dec
fldz
jmp
loopne
fsubrs
out
jno
repnz
aad
in
cmpsl
imul
sub
out
xor
lret
inc
cmp
or
mov
xchg
sbb
cmp
outsb
or
cmp
sbb
jmp
je
lret
cmp
adcb
mov
arpl
sbb
sbb
mov
xchg
push
xchg
bound
mov
adc
cmpsb
cmp
adc
push
push
mov
iret
cld
out
mov
imul
and
dec
xchg
mov
jnp
push
push
cmp
xchg
iret
imul
hlt
cwtl
test
sub
adcb
pop
ss
ja
cmp
xchg
xchg
in
in
out
rcrl
inc
pop
ja
out
mov
jmp
lcall
dec
imul
mov
lret
and
and
push
or
pop
int3
in
leave
pop
add
xlat
xor
sbb
xchg
sbb
xchg
stos
sti
and
fsub
lret
subl
or
in
inc
jne
lcall
or
idivl
mov
ja
xchg
push
jne
mov
jmp
pop
push
scas
mov
movsl
xchg
add
popaw
xchg
xchg
xor
mov
aas
sub
outsl
cwtl
and
inc
jge
mov
dec
inc
movsb
sub
jg
ret
dec
ljmp
inc
shr
add
lea
fimuls
xlat
xor
xchg
fsubp
push
int3
stc
pop
fildll
roll
add
fadd
xchg
loope
scas
cmp
add
jne
je
stos
jp
and
in
mov
inc
popl
int
inc
mov
rcll
xchg
mov
sti
mov
push
cwtl
push
push
addb
ret
cmpsb
stos
or
sbb
ss
cmpb
insl
add
adc
mov
mov
cmp
inc
inc
in
je
fimuls
push
pop
push
sar
movsl
cmc
add
push
arpl
ss
pop
add
jge
shll
fwait
ljmp
mov
jge
nop
arpl
sti
repnz
repz
cmp
dec
imul
lcall
rolb
outsl
and
xchg
cld
inc
decl
out
adc
ror
cmp
daa
and
mov
das
lret
out
xchg
loope
jge
mov
mov
ss
xor
push
lock
push
xor
xchg
add
insl
mov
jge
push
lret
imulb
sbb
cmpsl
insl
rorb
jne
sub
dec
xchg
jge
shl
dec
mov
leave
into
dec
ljmp
mov
ret
mov
in
sub
add
push
daa
arpl
sbb
sarl
or
sbb
mov
jae
outsb
add
mov
in
imul
add
mov
xchg
cmp
mov
jmp
ss
in
mov
ss
shll
mov
jp
jecxz
js
mov
add
push
pop
jmp
out
mov
arpl
and
inc
sub
pop
push
mov
mov
decb
lahf
push
mov
pusha
std
test
dec
pop
xlat
imul
or
or
pop
xchg
xor
jo
lea
scas
add
xchg
das
cld
lret
repnz
dec
cld
sub
inc
or
mov
cmp
lret
sahf
lcall
lret
xor
fwait
mov
outsl
jecxz
cltd
in
add
cmpsl
daa
adc
shll
mov
frstor
test
dec
fs
arpl
dec
sub
insb
adc
loope
mov
rcrb
pop
mov
in
pop
dec
mov
push
popf
leave
sub
pop
pop
or
add
int
sti
outsb
dec
xor
sbb
mov
lock
out
sbb
cmp
fcom
dec
orb
and
aaa
cmp
fcmovnbe
xchg
std
xorl
inc
cld
pushf
dec
push
add
dec
into
sbb
js
xorl
inc
adc
add
or
jp,pt
mov
mov
jo
jae
scas
pop
popf
sub
mov
xchg
sub
push
or
andl
shlb
data16
rcrl
iret
dec
mov
mov
mov
into
jg
enter
shlb
out
pop
addl
inc
pop
xrelease
out
cwtl
divl
pushf
fs
sahf
aad
loopne
out
ret
jnp
ret
push
inc
in
inc
xor
jmp
sub
xchg
imul
sbb
xor
mov
mov
aad
push
arpl
adc
xor
shll
adc
mov
inc
jg
jl
test
pop
pop
aam
test
stos
outsl
cmpsl
repnz
inc
and
fstl
mov
mov
jge
fs
mov
sbb
cld
mov
cmp
repnz
in
iret
mov
dec
es
test
xor
xchg
mov
mov
and
inc
ljmp
mov
push
repnz
push
fstl
adc
sarl
xorl
in
cltd
sub
popf
sbb
xchg
shll
add
cmp
jecxz
retw
mov
aad
mov
into
mov
pop
xor
cmpl
push
push
aam
jecxz
jnp
push
push
in
ljmp
rcrl
movsl
dec
adc
out
push
ja
or
pop
fdivl
imul
inc
dec
cwtl
insl
jle
push
insl
xor
ret
sub
mov
push
ffree
add
daa
pusha
int3
movsb
cmp
sub
pop
adc
in
dec
jle
hlt
cmp
xchg
adc
push
mov
or
jle
cmp
push
dec
aad
cld
mov
cltd
mov
aaa
ds
sbb
or
arpl
pop
dec
pusha
lret
push
push
push
loope
out
pop
pop
jmp
imul
jne
jle
jo
fsubl
mov
push
xchg
mov
mov
outsl
outsb
ds
enter
mov
int3
mov
push
fs
idivl
sbb
mov
les
repz
out
sbb
sbb
cmp
mov
sub
insb
or
mov
mov
hlt
cmp
adc
int
mov
lods
xorb
sbb
sub
xchg
push
pop
fsubs
jo
xor
hlt
mov
cmp
outsl
jp
push
les
xor
mov
xchg
sbb
movsb
arpl
clc
into
stos
leave
inc
push
insl
je
out
cmp
mov
movsl
int3
enter
test
mov
mov
std
ror
arpl
pop
aad
mov
push
fs
lods
xor
or
lcall
pop
cld
fimull
push
sbb
dec
filds
les
and
pop
push
mov
or
jp
lahf
scas
iret
sarb
out
xor
rorl
cmc
jg
cmp
mov
xchg
ds
sbb
mov
mov
std
jmp
xchg
hlt
scas
mov
inc
and
dec
arpl
stos
add
mov
loop
in
loope
rol
fadd
nopl
into
lds
mov
movsl
mov
cmc
arpl
mov
mov
ss
mov
sub
jb
lahf
adc
mov
cltd
mov
add
mov
push
imul
sub
hlt
dec
add
mov
mov
adc
inc
sub
jl
ss
roll
popf
cli
push
scas
cmp
iret
insl
mov
call
or
mov
fistpll
ja
sahf
aad
sub
and
mov
repz
push
hlt
mov
xchg
jecxz
in
mov
shrb
bound
shll
lea
cmc
dec
stc
sahf
xchg
es
enter
lret
loope
sub
xchg
scas
cmp
or
call
test
lret
out
or
sahf
dec
inc
fldt
das
push
stc
xchg
ds
xor
int
inc
dec
add
fisubrl
hlt
pop
daa
stc
les
in
imul
aas
inc
addr16
push
ss
cmp
sbb
pop
scas
fimull
mov
pusha
stc
aad
inc
arpl
int
dec
mov
sub
aad
cmp
rcr
pop
jp
cmp
dec
test
mov
daa
mov
add
add
adc
shl
cmp
int
call
adc
addb
or
xor
paddq
imul
fcoms
lock
fadds
das
test
shrb
jae
sbbb
sub
sub
adc
enter
cmp
in
and
iret
inc
sbb
lods
frstor
aas
sbb
aas
fidivs
mov
push
stc
add
ret
sub
call
push
shrl
les
fcomp
int3
adc
mov
fnstcw
push
movsb
mov
outsl
ret
xor
push
bound
jl
jmp
and
inc
push
movsl
inc
shlb
mov
mov
aas
lahf
pop
andl
sub
fstpt
nop
jle
jbe
mulps
inc
ja
mov
insl
in
inc
push
pop
adc
rorb
mov
cwtl
arpl
push
fistpll
cmc
mov
adc
clc
mov
call
and
pop
repnz
repnz
pushf
push
lock
xchg
xchg
cmova
lret
daa
add
adc
test
add
dec
sub
outsl
mov
adc
or
andl
cld
sbb
cmpsl
shrb
jne
or
mov
cmp
testb
leave
mov
lret
mov
add
test
cltd
inc
test
mov
or
into
imul
dec
idiv
mov
xchg
out
js
pop
lds
fst
in
xchg
lock
lret
cmpsb
mov
out
out
xchg
mov
lret
jg
in
out
xlat
mov
ficoms
xor
xor
push
mov
ss
mov
jbe
pop
mov
and
and
mov
push
xchg
je
and
dec
sub
lcall
mov
dec
cmp
hlt
lock
jnp
mov
ret
cmp
std
mul
in
sub
in
jge
adc
push
call
cmp
jmp
sbb
mov
jnp
pop
rcrb
out
gs
rcrb
mov
push
repnz
inc
sub
xor
mov
pusha
in
movsl
xchg
shll
mov
sbb
test
cmp
or
mov
ljmp
cld
jnp
cmp
test
push
rol
xchg
mov
pop
jns
loopne
and
es
popf
or
insl
jae
imul
jg
sbb
ljmp
je
xchg
mov
mov
lcall
xlat
adc
add
mov
cltd
push
dec
into
push
dec
loop
cmp
test
ljmp
bswap
orl
scas
jnp
and
stos
cmc
fwait
jecxz
ljmp
pop
je
mov
lods
pop
xlat
jl
sub
mov
mov
mov
mov
adc
mov
insb
jecxz
clc
shr
mov
pop
pop
mov
or
dec
iret
pop
xchg
cmp
jne
int
in
xor
lods
mov
mov
insl
lahf
mov
mov
push
jle
shrl
mov
inc
mov
pop
enter
sub
test
lods
retw
in
xchg
xor
adc
test
stc
inc
push
xchg
iret
dec
adc
aaa
jo
push
in
loope
fisubrl
push
and
enter
cwtl
popf
xor
pop
dec
or
add
mov
mov
out
xchg
dec
iret
sbb
push
adc
pop
dec
fcmovu
sub
adc
jo
pop
mov
xor
adc
scas
clc
mov
mov
mov
inc
push
cltd
in
push
cli
jns
jns
sahf
popf
jp
pop
dec
push
jp
adc
add
mov
in
lods
push
repz
scas
push
imul
adc
data16
jns
xchg
repz
shl
xor
sahf
pop
push
out
out
pop
fwait
lods
xor
ljmp
add
xor
and
imul
mov
push
iret
rorb
sarb
jns
leave
dec
js
pop
es
mov
mov
push
or
xchg
sub
push
sub
cmpsl
fsubl
sbb
cld
popa
aam
cmp
push
movsl
mov
xor
mov
in
jp
ds
xchg
pop
jg
mov
sti
push
test
in
rcr
add
leave
jge
inc
jg
push
mov
repz
inc
push
mov
cmp
mov
dec
test
loop
mov
loopne
dec
mov
bound
mov
sub
mov
loopne
cmpsl
fs
popf
dec
arpl
out
adc
les
add
aaa
cmc
fmuls
sti
dec
sti
mov
divb
push
enter
cmp
icebp
shlb
test
pushl
test
jb
jo
cmp
ret
movsl
test
fisubrl
mov
push
in
and
popa
sbb
pop
inc
fstp
cs
repnz
mov
fmull
cmp
jle
or
sahf
imul
stos
js
inc
push
dec
xor
adc
fidivl
sub
sub
pop
sub
les
out
jnp
daa
pop
push
aas
xchg
nop
stos
hlt
sub
nop
jg
popa
dec
push
mov
sub
mov
jecxz
mov
and
pusha
in
sub
mov
cmc
js
sti
or
pop
sbb
xor
out
or
mul
push
loope
sbb
stc
movsl
js
jmp
mov
pop
in
adc
fxam
inc
sub
push
sub
cmp
cmp
mov
xor
lock
lock
jne
sub
and
jnp
or
xchg
imul
jnp
push
xchg
jns
add
ljmp
push
jl
push
mov
push
scas
or
adc
leave
hlt
lcall
sahf
or
inc
push
cmp
inc
mov
insl
xchg
jg
loop
or
std
mov
mov
sarb
popf
flds
lahf
stos
lret
bound
cmc
fldz
xlat
sub
add
repnz
xor
jg
addr16
shrb
push
jp
sbb
loope
push
push
ret
cli
lds
ja
inc
lods
and
cs
push
xor
call
mov
in
lahf
lea
mull
dec
jle
dec
subb
lsl
shlb
aam
push
and
lcall
gs
push
in
rcrl
loop
xor
fsubr
in
iret
xchg
pop
stc
sub
outsl
xchg
pop
xchg
shl
pop
add
mov
loopne
sti
add
dec
inc
and
jle
ret
dec
int3
jo
mov
jnp
out
mov
outsb
cmp
cmp
stos
inc
mov
sbb
imul
add
aam
push
lret
adc
out
mov
sub
and
mov
mov
sub
test
ljmp
push
pop
dec
or
shl
nop
add
push
and
mov
xor
arpl
and
addl
push
cmpsb
decl
or
into
push
or
aas
imul
imul
jbe
dec
mov
sbb
pop
aam
adc
mov
and
repnz
mov
xor
in
aas
inc
repz
cmpsl
jecxz
bswap
shlb
adc
fcomps
mov
fwait
je
dec
loopne
ss
pushf
fcmovne
rcrb
mov
sbb
lods
inc
jae
cmp
push
mov
ret
mov
pop
lret
xchg
or
inc
or
lods
imul
movsb
int
repz
add
fiaddl
cli
xchg
add
lea
xor
les
and
test
and
iret
xor
sub
push
mov
jbe
ret
iret
push
sti
add
shll
pop
enter
jne
xor
push
and
negb
lods
lret
adc
scas
in
push
push
popf
stos
jp
cmp
popf
pop
add
xchg
cmp
es
test
and
push
dec
jmp
push
sbb
fs
or
cmpsl
jp
adc
xchg
mov
xor
jb
pop
imul
xchg
sbb
out
adc
pop
movsb
mov
jno
scas
lods
call
pop
xor
mov
sub
cwtl
mov
pop
adc
cmp
iret
int3
out
push
adc
sarl
mov
xchg
sub
ljmp
mov
sub
scas
imul
pusha
mov
pop
cmp
mov
pop
aad
std
imul
jbe
shl
mov
dec
xchg
cwtl
add
inc
lret
cmc
movsb
fwait
or
jo
sub
pop
add
aam
int
mov
cmp
pop
dec
and
add
xchg
sbb
sbb
fs
rorb
sbb
push
rorb
pop
flds
es
cld
out
push
ljmp
adc
mov
es
hlt
xchg
xchg
cmp
jb
push
repz
pop
mov
syscall
and
pop
sub
mov
in
inc
xlat
sub
inc
stos
dec
inc
outsb
inc
stos
pop
pop
fadd
test
sbb
ss
push
stos
adc
sbb
push
aad
lock
mulb
jp
mov
fadds
gs
aas
xchg
mov
cltd
jmp
stc
or
mov
sub
add
out
in
rcll
sub
inc
push
inc
popa
outsb
lret
jge
fidivs
fstps
pop
pop
cmp
jg
mov
nop
sti
xchg
ljmp
jae
orl
dec
mov
movsb
or
cs
fimull
outsl
pop
inc
gs
cmpsw
jne
sub
and
repnz
dec
pop
mov
push
inc
lret
push
inc
dec
lcall
sub
push
mov
sbb
or
lds
movsb
add
cld
jnp
sbb
loope
rcll
ret
push
or
sub
repz
dec
ret
sub
dec
movsl
push
cmp
pop
adcb
adc
cmp
pushf
std
lahf
sub
ret
mov
add
andl
jne
push
jnp
mov
flds
loop
jne
icebp
xlat
rcll
jmp
rep
rcrl
rorb
or
ja
dec
daa
nop
or
xlat
pop
cmc
lret
inc
aam
sbb
das
lods
bound
push
mov
lret
sbb
mov
orl
inc
inc
shrl
test
xchg
hlt
jnp
mov
add
pushl
rolw
into
mov
mov
mov
sub
repz
mov
gs
bound
mov
cmpb
cmpsb
pop
add
and
adc
std
fbld
shrb
dec
adc
fcoms
leave
add
push
cmpsl
pop
xchg
or
mov
clc
xchg
fcmovnbe
xchg
addb
filds
ja
and
jl
mov
jg
mov
push
mov
push
insb
call
movb
sbb
jbe
es
fimull
arpl
fmul
pop
gs
rcll
lods
add
mov
mov
push
adc
pop
call
dec
adc
cld
and
inc
push
or
loopne
sub
cmp
fsubl
pop
xor
mov
aad
push
aas
cmp
pop
inc
add
push
aam
mov
or
and
movsb
out
cmpsl
rcrb
jo
scas
mov
xchg
aad
jns
rclb
ljmp
loop
jl
lods
sahf
mov
and
stos
push
jle
int3
out
cltd
jmp
imul
cmp
lcall
fnstsw
and
loop,pt
xchg
shl
in
repz
stos
ret
and
out
pushf
out
movsb
push
jmp
int
outsl
cmpsl
movl
hlt
int3
xchg
test
js
out
mov
hlt
push
mov
xchg
pop
mov
xor
push
and
mov
repnz
gs
push
mov
out
imul
push
stos
or
or
inc
add
mov
adc
test
or
test
loopne
cmc
add
insl
fwait
pop
adc
xlat
jns
jl
and
aam
loop
mov
ja
or
jg
shlb
sub
icebp
add
mov
inc
sbb
lcall
cmpsl
pop
dec
or
dec
std
test
lock
lods
into
push
mov
rorl
pop
or
test
adc
xchg
pop
jg
ret
fcmovbe
mov
cmpsb
rcr
mov
add
pop
pop
mov
stos
aas
dec
daa
outsl
lods
test
mov
inc
or
stos
jle
push
popf
push
dec
test
adc
jb
and
stc
fdivs
imul
sar
xchg
std
sbb
call
std
cld
or
mov
pusha
or
test
cmp
add
adc
cmc
nop
dec
xchg
jmp
mov
daa
pop
shlb
hlt
daa
dec
lock
jbe
pop
mov
adc
mov
xor
lret
pop
lods
mov
sbb
jb
xchg
aaa
mov
in
sub
xchg
js
aam
dec
sub
push
sub
lahf
sbb
loope
outsb
int
sbb
jmp
sub
inc
sbb
aaa
cmp
dec
int3
inc
in
and
fcoms
adcl
dec
cmpsl
loopne
idivb
sbb
mov
stos
pop
xor
int3
lock
dec
xor
xor
and
ljmp
imul
xor
xchg
jle
stos
leave
add
xchg
inc
inc
push
call
mov
in
out
add
das
pop
shlb
push
loope
sti
sbb
mov
xchg
int3
cmp
dec
loope
hlt
movsl
dec
movsb
repz
xor
addr16
and
jecxz
arpl
xchg
or
loopne
cmp
rcll
insl
seta
shr
test
outsb
outsl
cmp
and
push
adc
and
imull
add
sub
cmp
movsb
test
inc
push
push
jae
imulb
rcl
fs
fstpl
inc
add
in
pushaw
push
xchg
pop
cmp
add
repnz
cmp
sub
xchg
test
mov
push
arpl
ret
jb
xchg
gs
iret
push
and
mov
pop
insl
ljmp
or
stos
js
mov
mov
pushf
ret
pop
and
ret
jnp
mov
jmp
mov
push
or
es
fsubr
and
out
inc
pop
es
xor
mov
cmpsl
cmpsb
aad
arpl
movsb
fsubrl
add
adc
cmp
mov
mov
and
cmc
jnp
les
hlt
cld
std
cltd
push
pop
lea
aaa
adc
push
and
pop
in
stos
insb
insl
push
mov
inc
loop
jne
push
jg
sbb
rolb
shlb
xchg
jp
fbstp
add
inc
cmp
add
int
fdivs
insb
xchg
pop
dec
insl
sarb
jle
and
inc
jno
adc
xchg
out
fdivs
jbe
push
push
sub
mov
or
in
outsb
and
loop
nop
lcall
and
pop
push
mov
adc
push
push
push
xchg
jmp
inc
fcomps
repnz
mov
cmp
in
mov
and
or
rcrl
push
sbbb
xor
scas
xchg
pushf
mov
mov
xchg
aaa
ja
mov
int3
cmp
hlt
sub
andb
mulb
jbe
xchg
or
gs
notl
das
mov
cmp
add
jae
adc
pop
push
addl
mov
mov
jbe
out
lock
fadd
loope
pop
mov
cltd
and
mov
lock
push
nop
mov
lcall
push
jmp
cwtl
data16
iret
pop
shll
adc
sub
push
jg
and
mov
add
lds
mov
inc
dec
dec
adc
in
insl
adc
push
test
pop
out
cmp
xchg
pop
repz
or
inc
dec
and
gs
xchg
sub
loop
bound
mov
sbb
jb
inc
inc
mov
pushf
sahf
cwtl
add
dec
xchg
adc
mov
dec
jo
shlb
insl
or
arpl
xor
daa
repnz
aaa
jb
dec
les
adc
mov
xchg
pop
sbb
and
mov
call
xchg
mov
ret
mov
cmp
mov
jg
push
mov
fisubl
lcall
jmp
mov
stos
test
test
clc
lret
aad
ret
jl
pop
sbb
mov
ret
dec
clc
xchg
mov
mov
jecxz
mov
sti
gs
mov
mov
andb
push
jno
push
out
inc
cwtl
jmp
imul
inc
call
sbb
jbe
cltd
iret
sti
int
or
xor
jne
test
call
lahf
sbb
and
arpl
push
inc
dec
cmpsl
jo
add
pop
stos
int
inc
cmp
cmp
adc
ja
lds
ret
popa
pusha
out
inc
flds
std
inc
mov
shll
bound
cli
xor
test
pusha
es
or
adc
pop
xchg
xor
je
loope
dec
nop
shlb
and
dec
in
cmp
popa
push
fistps
inc
fwait
int3
xor
into
movsb
inc
xor
mov
data16
inc
shlb
adc
rorl
dec
sbb
mov
mov
ljmp
jns
mov
mov
mov
sbb
ror
push
scas
xchg
or
lahf
add
add
mov
insb
pop
bound
and
int
popf
rolb
xchg
dec
fcomi
xchg
jmp
sub
sbb
leave
xor
inc
mov
pop
mov
hlt
mov
or
fstl
xor
test
f2xm1
and
stos
mov
hlt
mov
mov
test
jbe
cmp
sbbb
inc
test
mov
pop
scas
jns
pop
call
lea
enter
insb
lds
movsb
push
sub
fistpl
xor
xchg
mov
and
push
sub
sub
ret
outsl
mov
xor
add
xchg
fidivs
xchg
imul
xor
sbb
bnd
into
mov
cmpsb
push
stc
arpl
xor
pop
std
pop
leave
jno
in
xchg
mov
decb
dec
add
cltd
testl
inc
add
js
test
jo
xchg
outsb
ror
cmpsl
js
cmp
das
lret
cmpsb
clc
or
shrb
pusha
mov
add
mov
pop
xlat
xchg
out
adc
stos
outsl
js
and
fsubs
mov
add
sub
iret
xchg
dec
mov
inc
inc
sub
pop
mov
push
pop
mov
ficompl
pop
jno
icebp
xchg
shll
inc
jae
testb
test
xor
jg
orb
sbb
mov
out
jne
loop
xlat
sbb
jl
shrl
lods
and
jmp
push
or
in
lcall
adc
in
cmp
push
cmp
mov
sub
fdiv
and
popf
movsb
pushf
mov
loope
adcl
movsl
pop
sub
add
fsubrl
enter
ds
jmp
jle
sti
add
sti
mov
out
jbe
mov
xchg
std
adc
icebp
pop
add
push
mov
mov
or
cltd
fadd
mov
int3
sub
jmp
xchg
js
stos
sbb
sub
sbb
cmpsl
jb
test
or
pop
inc
outsb
dec
push
sarl
push
fisttpl
jae
sbb
jb
pop
andb
popf
sub
mov
adc
or
dec
loop
pusha
jnp
mov
in
stos
pop
jg
mov
popf
sub
mov
scas
inc
dec
sbb
test
arpl
pop
orl
mov
pop
jne
orb
cmp
adc
dec
xor
fmull
pop
adc
lahf
fisubrs
stos
sbb
pusha
sbb
jl
jle
mov
pop
sbb
adc
in
xchg
push
movsl
sbbb
push
shll
cmp
test
ljmp
hlt
mov
je
or
push
mov
cwtl
fidivs
push
mov
jmp
scas
lods
outsl
mov
push
inc
lcall
mov
data16
xor
stc
dec
jne
inc
arpl
mov
popl
add
mov
enter
rolb
insb
mov
imul
mov
aad
cwtl
scas
and
daa
arpl
pop
adc
add
hlt
sbb
fsts
out
xor
jbe
ss
movsb
or
shll
mov
or
and
dec
stos
dec
sub
lahf
push
mov
mov
xor
cmp
xor
or
ret
loopne
push
add
cltd
xchg
mov
cs
shl
jp
sub
loope
sti
push
aad
fadds
pop
jmp
ret
out
jecxz
nop
pop
loope
imul
jecxz
push
add
push
xor
ja
pusha
stos
sar
jae
push
mov
jno
arpl
movsl
loop
subb
shrb
nop
popf
shlb
dec
shlb
xchg
pushf
push
jno
loopne
jns
dec
fwait
ret
mov
pop
and
push
sbb
loope
jge
jb
mov
inc
sbb
cmp
sti
dec
push
les
adcl
sub
je
popa
mov
fnstsw
lods
xchg
nop
add
outsb
pop
test
jno
cmp
xchg
pusha
jp
xchg
cmc
repnz
xchg
pop
cltd
test
pop
loope
and
in
mov
orb
add
jae
bound
in
hlt
es
pushf
cmp
in
xlat
dec
int3
pusha
or
outsb
add
bound
pusha
pop
insl
mov
xchg
hlt
adc
push
pop
jbe
divb
mov
adc
stos
int3
lahf
les
push
cmpsl
fisttps
mov
jmp
jne
and
scas
not
cmp
pop
inc
aam
mov
aad
popa
jp
cmp
js
scas
divl
sub
pop
mov
sub
pop
mov
mov
and
inc
dec
shlb
pop
push
test
fidivs
mov
scas
xchg
cmp
cmpsb
dec
lcall
adc
xchg
idivb
out
jg
adc
mov
inc
push
push
pop
ds
imul
jge
sub
sub
adc
mov
cmc
pop
out
fcmovu
lret
sub
mov
jecxz
scas
fsubrp
pop
enter
orb
lret
lret
cmp
push
mov
and
icebp
sub
inc
mov
int
dec
sub
push
mov
das
adc
xchg
inc
or
xor
repnz
cwtl
cmp
cmp
or
std
pop
lahf
jl
push
dec
int
div
fs
push
sbb
rorb
mov
in
icebp
cmp
sub
je
add
cltd
pop
scas
add
dec
push
add
mov
lods
xchg
cmc
sbb
fstl
movsb
sbb
sbb
or
mov
stos
xlat
fnstenv
out
adc
cmp
xchg
lcall
inc
fdivrl
popa
call
dec
sub
push
lret
int3
add
mov
icebp
add
adc
call
nop
and
lods
stc
imul
pop
inc
aad
ss
ds
jl
inc
add
inc
lods
ret
xor
jno
insb
xchg
xchg
jb
test
jb
sub
call
xchg
stos
pop
ds
lret
lahf
cli
mov
xor
jg
mov
mov
out
push
iret
jmp
xchg
add
dec
incb
stc
adc
jle
push
dec
cmp
or
hlt
push
bnd
cmp
push
icebp
push
iret
xchg
mov
adc
or
les
pushf
mov
adc
lods
inc
add
loope
xchg
jmp
imul
and
clc
fmull
outsb
mov
dec
jg
test
xchg
aaa
lret
cmp
sti
or
dec
mov
shl
and
mov
test
xor
push
push
ja
and
xchg
daa
in
imul
dec
orl
push
mov
in
jae
cmp
pushf
shll
rcll
pop
sbb
movsl
cli
sbb
mov
sub
mov
nop
iret
push
or
out
cmp
lahf
dec
adc
pop
out
sub
cmp
insl
ror
call
in
fs
pop
mov
xor
jl
mov
or
sbb
scas
cmpsb
ficoml
mov
fwait
jne
cmc
or
fdiv
and
xlat
xchg
pop
mov
mov
shrb
mov
fsubrs
loop
push
push
data16
cwtl
aam
addr16
push
and
adc
aad
movd
lds
pop
jno
push
and
inc
jmp
add
jae
roll
push
call
jecxz
fdivr
xor
pushf
mov
push
xchg
xchg
cmc
push
in
out
insl
mov
movsl
adc
shl
mov
repnz
addr16
xor
push
adc
mov
cmc
lret
aam
js
iret
mov
std
inc
ret
jmp
andl
sbb
and
je
mov
mov
inc
and
xchg
es
jne
cmp
movsb
repz
das
sub
ja
cs
jge
addr16
cwtl
dec
test
lock
sub
mov
popf
insl
sbb
add
cwtl
xor
add
sub
push
pop
dec
test
mov
movsl
in
push
pop
jp
adc
outsl
fbstp
xchg
jbe
push
or
push
repnz
push
jnp
jno
and
mov
lret
sbb
lock
stos
popa
add
add
sub
imul
ss
mov
push
imul
mov
cmpsl
repnz
adc
insb
ror
xchg
xchg
fwait
repz
adc
xor
leave
jg
out
mov
dec
cmp
pop
insb
jle
cmp
cmp
xor
out
jge
push
imul
data16
movsl
addr16
push
adc
xor
cwtl
cmp
out
aaa
xchg
mov
push
adc
ss
or
lock
ljmp
dec
jl
or
xor
sbb
lcall
es
xchg
inc
xchg
adc
xor
shlb
xchg
ljmp
ds
lahf
loopne
cltd
mov
add
fmuls
jp
gs
in
inc
clc
rcrl
movsb
cmc
lock
test
imul
mov
jg
xor
push
je
mov
gs
fisubrs
adc
pop
sub
push
add
dec
push
mov
std
fstps
outsl
sarl
mov
sahf
inc
fildll
jb
add
push
push
in
out
pop
movl
xor
fsub
mov
jg
jle
fst
sahf
fwait
push
aaa
ret
xchg
adc
in
es
mov
hlt
mov
dec
cld
xchg
xchg
imull
into
pop
inc
es
push
cmp
adc
cmp
inc
add
sbbb
stos
out
inc
movsl
dec
clc
rcrl
cld
inc
call
cld
and
je
sbb
or
loop
xchg
lret
xor
pushf
xor
dec
daa
pop
push
xchg
fistpl
jne
ljmp
test
and
cmp
xor
enter
mov
in
dec
cmp
xchg
jp
inc
sbb
adc
lahf
xchg
mov
aam
push
daa
mov
lcall
or
jne
int3
sti
mov
out
push
outsl
lods
mov
push
push
stos
bnd
aaa
insb
dec
loope
lcall
cwtl
mov
test
cmp
test
xchg
adc
stos
lret
push
sbb
pusha
jne
mov
inc
dec
je
sub
imul
dec
or
loope
inc
int
sub
dec
test
movsb
adc
cmp
pop
cmp
inc
xchg
adc
rcr
js
jbe
in
jge
xor
loope
and
xchg
shlb
xlat
sbb
test
inc
pop
in
xor
mov
mov
mov
sar
add
xchg
aad
inc
pop
shl
inc
lds
sub
cmc
test
daa
mov
lock
fdivl
cmp
and
or
xchg
loopne
cli
inc
inc
gs
push
push
inc
stos
imul
vpaddusb
leave
ds
test
leave
cltd
adc
lds
xchg
sub
daa
imull
ds
xchg
dec
fldt
xchg
sahf
in
jp
cmp
cmpsb
rol
aad
notb
out
sub
out
xchg
data16
jmp
sbb
mov
or
pop
jb
movsb
xorl
jge
mov
ret
inc
xchg
sub
insb
test
dec
rcr
test
adc
int3
sub
cmp
icebp
lahf
xor
inc
jmp
cmpl
mov
xor
push
adcb
lret
movsl
push
cmpsb
pop
cmc
lods
test
mov
daa
lods
xchg
dec
loop
jl
cltd
jne
notl
sbb
movsl
adc
pop
sub
jb
imulb
push
jmp
inc
int3
jmp
pop
push
aas
mov
and
sub
cmpsb
lahf
out
sbb
in
xlat
cmpsb
ja
push
popf
sahf
mov
adc
in
push
push
pop
imul
mov
push
push
fmull
into
outsl
pop
jae
cld
adc
sahf
sbb
adc
mov
arpl
sbbl
or
popa
shrl
ret
lahf
xchg
test
lahf
mov
testl
test
add
lret
subl
push
mov
je
and
fimuls
inc
cmp
clc
ja
popl
out
sbb
xor
ja
mov
xchg
mov
bnd
repz
divb
insl
aaa
inc
shrl
and
ficoml
xchg
sbb
push
xorb
fbld
repnz
test
mov
mov
sub
jno
hlt
xchg
mov
push
sbb
sub
stos
clc
popf
jecxz
icebp
sub
mov
pushf
push
pop
xor
sub
mov
lret
inc
inc
mov
xchg
push
sbb
push
xor
fldl2e
aaa
sub
out
push
aas
sbb
cli
mov
cmp
adc
cmp
hlt
scas
loop
lret
sub
dec
fisttpll
inc
imul
xchg
sti
mov
in
cmp
ljmp
cli
jne
in
jne
pusha
lods
in
loopne
mov
cmp
sub
and
mov
pcmpgtb
push
inc
and
cwtl
dec
dec
push
pop
inc
mov
sub
sub
jl
pop
rcll
arpl
mov
mov
mov
cmp
xchg
loope
jbe
push
jo
in
xchg
insb
fadd
adc
cmp
repz
shrb
pop
lret
iret
or
loopne
stos
popf
dec
leave
packssdw
jge
in
lods
mov
mov
cwtl
outsb
fisubs
mov
subb
xchg
js
mov
imul
xchg
fildl
icebp
gs
vpsubq
cmp
addr16
jns
ljmp
inc
sub
dec
or
clc
inc
loop
gs
or
jb
ficoml
adc
push
xor
fnsave
adc
mov
jne
mov
and
fadds
sub
in
mov
xor
mov
mov
jge
outsl
add
adc
jecxz
jge
call
adc
pop
push
xor
sahf
xor
mov
jmp
outsl
mov
leave
mov
outsb
jecxz
mov
push
sahf
jae
sbb
cmpsl
adc
je
inc
movsb
and
scas
cmp
ret
repz
pop
lds
cmpsb
xchg
pusha
lods
addr16
test
add
fbstp
mov
or
mov
mov
dec
pop
sbb
lret
outsb
sarl
jo
popa
jae
dec
jbe
nop
je
xlat
les
mov
pop
and
popa
dec
decl
leave
mov
inc
adc
mov
adc
out
sub
les
ret
xor
mov
jo
aad
stos
out
xchg
inc
or
je
cmp
adc
and
mov
dec
lret
push
es
inc
lods
and
mov
ret
xchg
imul
fildl
jl
cmovb
rcll
mov
int
push
or
es
loop
fs
shl
fptan
pop
mov
psllq
mov
mov
xchg
rcrb
je
push
test
out
int
int3
pop
pusha
das
xor
sti
sub
or
add
xchg
test
ficoml
xor
rcll
push
roll
sbb
mov
and
inc
pop
xor
lods
push
js
mov
cwtl
incl
jns
xor
push
push
xor
jge
divl
addr16
sbb
mov
adc
cmc
push
out
lds
inc
pop
or
sub
pop
sub
adc
subl
fsubrl
add
cld
das
inc
pop
fisubrs
rcll
xchg
adc
insl
sbb
shlb
cld
jae
inc
aas
inc
and
sbb
es
xchg
aas
movsl
icebp
sbb
in
dec
insl
xchg
adc
xor
movsb
xchg
cmpsl
sbb
loop
mov
adc
cmp
mov
clc
repz
aam
cltd
jno
sbb
pop
jl
pusha
push
jns
add
fwait
jbe
mov
or
insb
cltd
iret
insb
lahf
bound
push
sbb
out
pop
xchg
xchg
scas
lock
xor
js
in
and
stc
cmp
cmp
add
scas
xor
mov
jnp
aaa
pop
dec
jns
and
xchg
xorl
cmc
push
push
dec
js
or
arpl
inc
mov
test
scas
fsts
aaa
movsl
lcall
sub
jl
mov
xchg
cld
in
jae
dec
std
push
in
popa
lret
jecxz
loope
aam
push
xchg
pop
mov
jg
out
les
xchg
cwtl
test
mov
mov
arpl
icebp
enter
gs
fstpl
enter
aam
insb
mov
ret
push
mov
sub
imul
mov
rcll
out
mov
add
cs
inc
scas
ret
fnstenv
loopne
adcb
pop
clc
jbe
out
shll
pop
cld
in
pop
roll
jb
leave
dec
outsb
dec
cmp
push
lds
cmp
fcoms
jecxz
cmp
repz
shrb
jae
sub
adc
gs
out
stos
or
mov
outsl
jbe
adc
outsl
fldl
or
pop
sub
fs
scas
xchg
cltd
adc
jno
cmpsl
mov
outsl
pop
int
push
and
push
mov
cmc
out
cmc
pop
add
mov
repnz
xchg
mov
xchg
sbb
imul
push
pop
orl
das
stc
jl
mov
cli
jl
ds
xor
daa
xor
in
or
fisubs
adc
or
int
inc
mov
xchg
mov
imul
enter
insl
sub
lcall
ret
mov
stos
pop
cmp
nop
jle
inc
test
inc
mov
mov
rclb
frstor
outsl
inc
and
setns
jge
subl
and
or
or
cmpsl
mov
lods
mov
scas
rcrb
cmp
in
fcoms
push
into
lcall
ds
jns
or
cmp
hlt
mov
rorl
sub
cmc
pop
popf
mov
or
sub
push
or
add
xor
inc
and
enter
addl
stos
ljmp
cli
cmp
bound
bound
add
aam
sti
add
int3
pop
push
shrl
ret
xchg
push
and
mov
mov
cmp
dec
les
jns
mov
sub
cli
pop
pop
icebp
jecxz
mov
shll
mov
mov
pop
adc
xchg
and
imul
jnp
sub
mov
clts
out
pusha
insl
cmp
jnp
mov
stc
mov
fstl
dec
pop
frstor
pop
sub
and
cld
jns
cmc
sub
lret
pushl
xchg
movsb
push
add
jecxz
cld
cmp
xor
mov
enter
int
fldt
jne
push
clc
inc
rol
arpl
iret
sarl
dec
sarl
notl
dec
mov
mov
insl
inc
std
movsl
mov
cmpxchg
outsb
sbb
lods
shll
inc
pop
sbb
clc
push
add
mov
inc
in
mov
out
xor
cs
xor
aam
push
xchg
scas
aas
outsb
cwtl
mov
enter
push
lock
imul
pop
rcll
sub
dec
outsb
and
pushf
pop
repz
pop
repnz
and
jmp
jle
popa
cwtl
sub
insb
cli
insb
xlat
imul
and
add
cmpsl
iret
repnz
cmp
xor
out
shlb
xorb
inc
arpl
enter
inc
inc
sub
vunpcklps
sbb
jmp
filds
dec
repz
xor
xchg
popl
int
cmp
jecxz
imul
add
cmp
or
jl
cltd
shrb
jno
push
lahf
aaa
add
movsb
adc
push
xchg
push
sub
adc
and
lret
pop
inc
or
push
mov
sub
cmp
iret
pop
and
aad
fs
jmp
mov
pop
in
pop
jle
inc
xchg
movsb
je
or
fldl
dec
dec
loopne
shr
gs
mov
sbb
je
xchg
ss
outsl
inc
es
adc
and
mov
test
add
in
dec
pop
xchg
ss
sub
mov
orl
cmp
mov
xor
mov
push
add
lea
mov
in
mov
fs
mov
adc
mov
xchg
mov
dec
xchg
add
xor
inc
mov
sar
add
and
stos
sahf
xchg
adc
xor
pop
xchg
repz
xchg
push
push
dec
imul
xchg
fidivrs
shrl
int3
pop
repnz
cmp
gs
xchg
sbb
or
in
sbb
adc
fiadds
jo
inc
or
pop
ds
jg
lods
add
sbb
push
jb
push
test
or
jle
pop
jae
out
xor
mov
dec
or
xchg
inc
fists
fstl
das
jmp
pusha
jecxz
aaa
dec
ss
inc
fsubrs
mov
lods
mov
mov
fidivrl
jg
push
gs
and
popf
mov
sub
add
push
jnp
lods
mov
sbb
xor
xor
push
xchg
cmp
inc
cs
and
mov
jne
or
cmc
push
fisttpl
repz
scas
pop
cltd
ljmp
daa
in
arpl
aad
aam
inc
dec
jae
sbb
rclb
jp
inc
cmpsb
dec
jmp
jg
mov
lret
adc
dec
cmpsl
jns
pop
out
push
gs
out
repz
pushf
rcll
movsb
mov
clc
lahf
insb
test
lock
stos
fs
andl
leave
sbb
lret
adc
dec
adc
mov
ffree
fstpl
inc
sbb
xchg
lcall
test
cltd
int3
xor
clc
push
bound
in
pop
icebp
mov
mov
ljmp
mov
cmpsb
stc
fnstcw
fs
out
mov
std
fwait
int3
push
adc
sahf
ret
cmp
mov
nopl
roll
aas
sbb
mov
push
or
mov
ja
jns
inc
shlb
sbb
lret
cmpsb
addr16
pop
fldl
or
movsb
jno
test
xchg
imul
push
gs
xchg
lret
cmp
and
push
das
stc
loopne
test
in
ret
cmovl
out
das
test
cmp
jge
ljmp
mov
and
sub
jb
not
inc
xlat
inc
inc
aad
cwtl
inc
dec
mov
push
in
rcrb
ja
and
add
stos
movsb
cmp
aaa
sar
idivl
out
lods
lret
flds
sbb
loop
repz
in
adc
add
adc
cmp
pop
push
mov
cli
cwtl
fxch
cmpsb
dec
add
and
adc
push
lds
dec
fadd
arpl
add
cmpsb
inc
stos
pushf
mov
daa
in
sbb
jge
jp
cmpsb
je
pop
add
cmp
dec
pushf
icebp
bound
add
loope
nop
punpcklbw
pop
das
xor
dec
lcall
imul
repz
sub
je
adc
repz
test
xor
arpl
sahf
outsl
dec
cmpsl
cltd
push
mov
in
and
imul
push
loope
hlt
mulb
in
xlat
lea
push
lea
add
fcomp
andb
cwtl
xchg
sbb
jbe
idiv
adc
decl
adcl
sub
test
push
sub
sar
pushl
imul
sahf
and
push
inc
sar
and
dec
push
xchg
es
insl
ss
mov
in
out
in
inc
dec
pop
sbb
sbb
fsubl
rcrl
jmp
xchg
imul
xchg
mov
repnz
cmpl
adc
std
xchg
jg
fnstcw
or
shrl
enter
out
data16
cltd
pop
les
test
cmc
fistpll
scas
jno
scas
into
mov
ret
add
testb
mov
sbb
adcl
inc
loope
cmp
cli
mov
add
pop
xor
repnz
dec
mov
sub
cmp
scas
push
lods
add
mov
push
sub
rcll
popf
out
popa
pop
jno
mov
xchg
or
sub
cwtl
shl
ffreep
lods
pop
test
aad
jns
scas
sub
mov
mov
out
inc
sub
pcmpgtd
pop
loope
clc
or
dec
out
pop
inc
iret
imul
xchg
mov
mov
cltd
mov
aad
lods
sbb
mov
test
dec
mov
sbb
popa
jno
adc
loope
fwait
sub
lcall
adc
mov
push
mov
pop
movsb
xchg
imul
push
adc
mov
sti
pushf
sbb
mov
mov
js
push
in
mov
test
ja
popf
sarb
aad
test
lods
push
test
lods
mov
pop
jae
dec
insb
outsb
xchg
or
int
or
rcrl
jo
add
pop
push
cli
in
jns
out
adcb
cmpsb
call
add
aas
or
xor
jns
adc
sbbb
or
call
ja
lret
daa
push
and
mov
sub
lea
and
cmp
ds
int
aam
jecxz
mov
int3
scas
out
ss
ss
popa
pop
aaa
and
push
or
mov
mov
jp
mov
and
mov
push
push
xor
push
xor
dec
das
or
push
pop
inc
lcall
mov
mov
cld
imul
jmp
add
stos
and
inc
adc
test
pop
cmp
aad
bsr
pop
out
jge
inc
out
ficompl
push
mov
xchg
mov
ljmp
imul
push
in
mov
mov
sub
cmp
cmp
mov
xor
mov
jb
test
scas
incl
jo
lahf
mov
rcll
xor
out
add
and
mov
inc
js
mov
cmp
xchg
fsubp
push
lods
movsl
adc
shrb
out
xchg
js
imul
in
hlt
sub
gs
mov
and
and
in
xor
hlt
jae
hlt
imul
mov
dec
inc
orl
test
sbb
xor
cs
scas
test
inc
cmpb
repz
xchg
mov
call
inc
dec
ss
push
push
imul
loope
enter
movb
test
dec
fwait
les
dec
xchg
shrb
mov
xchg
filds
int
or
fs
testl
movsb
jnp
mov
popa
sub
pop
mov
sbb
in
in
mov
call
es
adc
add
mov
or
mov
movsl
lods
inc
lcall
shll
insl
aam
mov
fcomi
in
xchg
into
xchg
imul
add
ja
clc
add
cli
out
or
int3
incl
cmp
lret
rcrl
pop
cmc
rolb
inc
sbb
jge
jmp
pop
pusha
jne
faddp
pushl
xchg
add
adc
call
sbb
shrb
rcr
xchg
cld
inc
xor
push
popf
fwait
movsl
movsl
or
mov
mov
xchg
mov
iret
in
cmp
orl
mov
dec
add
dec
icebp
add
or
adc
mov
hlt
dec
outsl
adc
or
and
jle
dec
mov
cmp
ljmp
pop
and
sub
push
or
icebp
mov
jo
sbb
add
cmp
lock
push
mov
rcpps
test
mov
push
inc
xchg
vpxor
int3
push
sub
pop
mov
ds
xchg
jle
ficompl
sbbb
ret
jns
and
jmp
out
mov
or
outsl
sub
inc
cmc
sti
cld
sahf
orb
fiadds
or
das
jmp
lea
sahf
push
mov
je
in
pop
cmp
cmp
sub
xor
popa
int
inc
sbb
mov
add
sub
popf
pop
out
into
ret
inc
pop
sub
in
cmp
outsb
jg
hlt
leave
pop
call
and
jbe
sbb
cmpsl
cmp
jmp
sub
push
add
cmp
lahf
xor
xor
push
ja
push
icebp
sub
inc
std
cmp
pop
or
adc
out
add
dec
test
lcall
fwait
into
scas
jb
outsb
jp
std
jge
sub
rcl
mov
add
mov
pop
cli
dec
stos
mov
pushf
jne
mov
sub
sbb
in
arpl
repnz
sub
movsl
popa
push
pop
and
jge
fldt
leave
cmp
icebp
cmp
dec
cwtl
add
push
mov
cmp
push
mov
push
loopne
push
inc
nop
mov
cmp
scas
cmpl
fidivrl
and
dec
leave
push
dec
stos
and
aad
push
push
test
pop
mov
pop
dec
mov
jg
fadds
mov
jae
cmpb
add
cmpxchg
lcall
mov
pop
stos
sti
cwtl
inc
iret
mov
cmp
push
push
mov
das
jl
jge
jae
push
dec
in
sbb
mov
jmp
lret
push
fiaddl
jbe
movsl
in
test
fmull
jge
test
pop
jl
stc
dec
in
inc
push
cli
lods
das
xchg
jns
bound
fistl
dec
arpl
fs
mov
lret
cmp
dec
test
es
add
mov
dec
icebp
push
push
jecxz
mov
or
aas
jbe
icebp
ljmp
cmpsl
mov
outsb
roll
mov
cmpsl
sbb
xchg
sbb
sbbl
shlb
add
insb
pop
cs
inc
addl
je
or
cs
test
xor
mov
mov
movsl
or
lret
jmp
mov
das
daa
incb
mov
fisttpl
cltd
insb
faddl
xor
fimuls
pop
cmp
rcrb
icebp
adc
inc
shll
xorb
cmp
cli
add
mov
pop
xchg
mov
add
in
push
adc
or
out
inc
into
push
insb
mov
and
mov
data16
stos
cmp
clc
adc
mov
cli
in
jae
xchg
imul
mov
xor
push
insb
pop
sbb
scas
das
loope
mov
popa
repnz
pop
xchg
push
push
dec
sbb
cmc
aaa
pop
mov
out
xor
xchg
mov
adc
push
mov
jg
jb
pop
fs
sub
pop
pop
loope
jno
cmpsl
enter
mov
lahf
imul
aam
inc
andl
mov
scas
orl
pop
mov
add
sahf
ljmp
std
stos
loop,pn
enter
jge
sub
test
jnp
shl
mov
xchg
jne
inc
inc
cmc
jg
les
es
push
es
jnp
mov
jle
sbb
add
pop
xorl
mov
mov
push
ret
pop
lea
int3
jo
dec
cmp
negb
imulb
cli
fidivrl
sarl
std
inc
sub
fdivr
jo
push
shl
inc
lret
sbb
add
std
or
orb
lods
xor
cmp
icebp
fs
sub
jnp
cmpsl
call
pushf
cmp
jno
pop
mov
sahf
daa
pop
sub
repnz
stos
cld
or
daa
loop
ss
popf
into
imull
sub
movsb
mov
mov
ds
pop
xchg
fidivrs
cmp
jbe
popa
shlb
out
and
call
dec
xchg
jge
adc
lods
das
push
xor
orl
std
sbb
sub
add
jle
data16
dec
bound
xor
out
mov
pop
xor
xor
jbe
sbb
push
je
rcl
fs
insl
jl
or
xchg
movsb
movsb
test
cmpsb
jle
push
dec
cltd
shlb
push
data16
daa
loopne
push
stos
rcr
shr
mov
pop
and
pop
repz
sti
sub
add
cmp
sbb
lret
pop
aas
add
rcrb
mov
scas
stc
add
inc
xchg
jp
in
cmp
test
cmpsb
test
cmpsb
ficomps
mov
dec
notl
cmp
sbb
insb
dec
and
or
fidivl
jmp
inc
lcall
mov
sub
xchg
inc
jnp
arpl
shlb
sbb
jl
mov
cmp
mov
out
xlat
mov
inc
xchg
xor
cld
jg
xchg
insl
and
pusha
daa
popf
mov
jge
fisttps
xchg
fistl
mov
sti
xor
and
or
xchg
movsb
mov
pop
int3
pop
mov
xchg
jbe
ret
pop
jae
arpl
inc
mov
mov
pop
and
xor
cmp
rorl
mov
pop
js
push
xchg
cltd
xor
aam
mov
inc
mov
in
push
dec
lahf
arpl
or
int
or
push
dec
stos
fisubl
rcr
fisubl
test
jo
test
lock
jecxz
jg
cmpsb
adc
cltd
in
gs
lcall
dec
rcr
jecxz
in
jne
mov
mov
xlat
add
adc
mov
mov
sub
js
cmpsb
jmp
nop
dec
xor
jno
fsubrs
clc
sub
ficoms
lea
add
sbb
xor
push
jnp
cltd
popa
inc
cmp
add
inc
jge
jmp
adc
xchg
cmpsl
int3
sub
imul
mov
jle
jns
pop
xchg
repz
and
movb
or
mov
fdivrp
test
xchg
push
and
daa
cmp
mov
add
addb
mov
aaa
ja
lock
push
scas
xor
enter
jmp
mov
sub
mov
mov
in
or
das
cwtl
lahf
ud2
mov
push
rorb
add
xchg
lock
fdivrs
mov
pop
in
shrl
jb
cmp
lds
fdivrl
jmp
mov
push
and
mov
mov
test
rcr
sub
lret
pop
mov
scas
and
xchg
jmp
popl
sbb
mov
out
mov
std
clc
mov
aas
adc
aas
aaa
test
pop
imul
insl
out
into
adc
cmpl
jmp
cmp
out
sbb
cmpl
inc
cltd
pop
gs
cmp
lods
or
xchg
lods
out
mov
xchg
or
popa
jecxz
cmc
loop
pop
in
pop
and
inc
shrb
mov
inc
jnp
popa
cmp
xor
shrl
pop
in
cmpsb
flds
adc
pop
test
push
push
aaa
xor
dec
lods
fstl
mov
in
cmpb
cmp
imul
int
mov
mov
mov
adc
mov
mov
nop
bound
push
lahf
imul
or
dec
mov
mov
cmpsb
adc
rclb
inc
mov
into
leave
aas
xchg
frstor
mov
sbb
arpl
lahf
xchg
test
ja
lds
pop
lret
int3
fcompl
inc
cmp
mov
mov
dec
movq
jbe
cmc
cmp
mov
xor
cld
cmp
mov
movsl
sbb
aad
repnz
pop
sahf
icebp
aad
adc
adc
icebp
xchg
push
insb
ret
mov
push
fnsave
shlb
xor
movsb
stc
sbb
cltd
rcr
aas
inc
in
dec
pop
lahf
loop
add
repz
mov
jp
arpl
in
jmp
dec
and
into
pop
inc
dec
mov
fldt
xor
push
test
jae
xor
adc
sub
pop
fbstp
fisubs
cmpl
das
cltd
mov
mov
lods
leave
cmpsb
push
test
push
add
sub
int3
cmc
pop
scas
mov
ljmp
mov
pushf
paddd
cmp
std
sub
pop
xchg
cmp
mov
xchg
out
cli
jle
inc
imul
bound
inc
shll
cld
jg
in
push
push
gs
dec
or
cmp
dec
sahf
push
dec
mov
jnp
pop
mov
ja
lods
xchg
sbb
cmp
call
js
aaa
stos
xor
outsb
aam
jnp
lret
sbb
push
pop
mov
cmc
das
push
adc
sub
xchg
fidivl
inc
hlt
lcall
dec
mov
mov
mov
fistpll
popa
cmp
lea
std
inc
jg
dec
jo
movl
lret
movsb
pop
add
sbb
xchg
mov
fsubrp
push
push
cs
jo,pn
insb
mov
mov
aam
jmp
mov
push
sbb
lea
cmc
mov
inc
in
call
mov
imul
cmp
inc
cmpl
jmp
popa
jo
pusha
or
sub
sbb
pop
ret
dec
cmp
out
loop
jb
lods
arpl
inc
divl
or
add
jge
push
shlb
pop
cmp
dec
movsl
push
in
xor
and
ss
lods
mov
xchg
inc
add
mov
fldenv
nop
mov
mov
mov
call
ja
cld
mov
or
and
movsl
ret
jle
xchg
adc
stc
dec
lds
mov
les
cmpsl
push
add
sbb
add
pop
cmp
aam
aas
mov
test
inc
mov
xchg
xchg
mov
adc
test
into
xchg
mov
mov
adc
stos
frstor
pushf
pop
jnp
lock
aaa
lods
dec
adc
or
lret
clc
popa
inc
test
xor
and
push
leave
mov
cmp
sbb
xchg
in
mov
fucomi
nop
leave
add
test
sub
mov
jg
out
add
and
sub
mov
jp
and
outsb
pop
aam
fnstsw
fcomps
inc
add
lret
add
ja
jmp
testb
sub
xor
call
fnstcw
jl
inc
sub
gs
jmp
xor
pop
ret
push
dec
adc
std
xor
add
lret
mov
ss
cmpsb
or
dec
jecxz
add
ret
orb
cmp
xor
aam
xor
mov
test
sbb
pop
insb
mov
stos
or
pop
les
into
dec
dec
nop
in
mov
dec
adc
dec
fucomip
lods
lcall
and
or
int
cmpsl
xor
inc
flds
mov
push
dec
shlb
mov
sub
bound
fsubl
test
outsl
test
or
sbb
imul
test
cmp
jnp
xor
add
imul
dec
es
and
scas
das
testb
stc
lock
movsl
push
stc
xlat
scas
iret
outsl
loope
cli
cmp
aad
dec
xchg
pop
fmuls
mov
testl
pop
aas
test
and
aad
mov
loop
fdivrl
mov
jecxz
or
inc
fadds
xchg
es
xchg
xchg
mov
insb
add
mov
cli
mov
ja
push
pop
xor
pop
das
inc
xor
pop
out
mov
or
dec
sbb
pop
fs
adc
sahf
sub
xchg
into
xor
cmp
into
mov
xchg
fimull
push
push
dec
movsb
pusha
push
or
icebp
mov
hlt
popa
push
sub
pushf
ffreep
mov
lcall
push
movsb
adc
scas
jle
das
sub
mov
push
sub
in
pop
je
sar
lods
xor
out
inc
lods
xor
jno
pop
nop
xor
rorb
aas
dec
or
cmp
rorb
call
sub
jnp
dec
xchg
out
mov
add
jg
add
sbb
cmp
lds
ret
mov
addr16
xor
push
adc
cld
mov
sarl
pop
jmp
mov
jl
or
pop
mov
cmp
pop
push
ja
mov
add
addr16
lea
adc
sub
pop
xchg
inc
movsb
adc
jge
idivl
in
jmp
jg
movsb
sbb
imul
push
lds
fsubrs
cmc
pusha
inc
pop
into
sbb
movsb
dec
cld
arpl
imul
fildll
sub
mov
jl
pushf
push
scas
push
cli
loopne
pop
movsl
pop
in
testb
insb
in
insb
mov
rorb
pop
xchg
mov
fwait
sti
and
cmpsl
loope
cltd
cs
dec
cmp
ret
mov
adc
in
pop
sub
jb
sub
mov
mov
out
pop
cld
outsl
stos
cmp
outsl
ss
stos
movsb
testl
or
mov
in
push
or
arpl
dec
insb
insb
mov
push
sub
push
inc
or
sbb
dec
aas
add
xor
loope
mov
test
addr16
ret
aam
lods
ja
and
dec
je
xor
lods
leave
pushf
inc
xchg
xchg
sbb
mov
cld
xchg
incl
jecxz,pt
js
lahf
push
mov
jae
add
pop
inc
popf
lock
sbb
sbb
inc
es
hlt
jp
jp
cwtl
nop
xchg
fisttpl
insb
jecxz
imul
test
subl
xor
add
enter
aam
adc
mov
in
jg
mov
mov
fwait
add
pop
repnz
pop
shl
mov
iret
aam
add
and
out
arpl
dec
push
push
mov
idiv
jbe
pop
xor
lock
xchg
dec
mov
fnsave
xchg
fs
xchg
sub
fsub
arpl
jle
shrd
mov
dec
cmc
jo
lods
hlt
lret
out
mov
lcall
mov
movsl
mov
imul
movb
cli
js
push
push
das
add
mov
aam
fdivr
inc
sub
cmc
cmp
push
and
out
scas
test
cmc
xor
int
adc
inc
test
sub
and
negb
cli
inc
out
jae
cmp
xor
mov
in
jmp
lret
js
idivl
sub
popf
outsl
lahf
cmpl
test
sbb
pop
test
pop
inc
mov
stc
push
adc
push
scas
sub
cmp
mov
mov
scas
dec
fs
andb
shl
mov
push
sti
repnz
fucompp
fcoml
fcomp
leave
loop
bound
inc
mov
aad
dec
bound
dec
and
jg
xor
addr16
outsb
dec
fdivrp
aas
or
sub
data16
or
hlt
cmp
iret
fcmovnbe
xchg
jb
inc
jge
xor
lds
mov
inc
test
mov
mov
stc
lahf
shlb
push
xor
jmp
sbb
jae
dec
jg
push
xor
mov
fiadds
lret
test
push
test
mov
xor
xchg
imul
movsl
mov
mov
cs
or
dec
jge
popa
lahf
lcall
xor
lret
mov
mov
or
jmp
lods
sub
in
push
push
scas
xorb
jl
pop
and
mov
jle
sbbb
and
insb
or
rcll
jbe
fsubs
mov
push
mov
push
lcall
jge
mov
fisttpl
ljmp
in
pop
push
cmp
pop
sbb
mov
das
repnz
rolb
xor
mov
and
xor
loopne
sub
mov
mov
lock
dec
mov
and
add
adc
jbe
jmp
nop
jno
repz
xchg
sbb
arpl
in
loop
sti
jnp
lea
popf
push
fisubs
ret
dec
pop
lods
sub
scas
mov
fstp
mov
cltd
into
insb
jno
subb
dec
sub
ret
dec
xor
xchg
ljmp
lods
lods
mov
push
sbb
fldcw
mov
in
mov
fcoml
xchg
mov
jno
jmp
inc
xor
testl
ret
xchg
mov
jl
popa
icebp
out
dec
clc
rorl
ret
dec
and
mov
inc
out
or
push
decb
sub
mov
lahf
inc
sub
fwait
jle
pop
imul
mov
xchg
test
clc
push
arpl
xor
xchg
out
das
test
dec
std
movsl
adc
in
cwtl
lret
jnp
cmp
add
inc
sbb
push
mov
jb
lock
jb
and
faddl
add
fcomi
notl
pop
xchg
pop
add
subl
out
cmp
add
fimuls
test
ss
xor
scas
sub
lods
mov
nop
fcmovbe
xchg
jns
sub
cmp
shlb
push
xor
adc
mov
adc
xor
xor
sti
aam
pop
jne
imulb
mov
popa
rclb
loop
and
cmpl
inc
jnp
xchg
stos
cmp
inc
sub
js
sbb
add
iret
or
mov
jecxz
sbb
or
stc
dec
iret
jg
das
mov
negl
mov
js
scas
int3
rorb
fsub
mov
aam
mov
lods
add
push
fdivrl
addl
inc
mov
je
mov
sub
mov
mov
or
mov
pop
cs
sub
jl
or
clc
icebp
jo
mov
inc
lret
pop
inc
push
xchg
icebp
rorl
mov
fwait
cmp
ret
ljmp
xchg
sbb
add
cmc
push
outsl
mov
push
fdivl
cmp
pop
sbb
mov
sbb
ret
mov
adc
jno
cmp
lods
aaa
test
jp
push
mov
xchg
xchg
movsb
lahf
add
sub
test
xchg
jge
aam
push
popf
jl
and
lods
mov
cmp
sbb
cmp
sub
imul
push
pop
mov
mov
sub
popf
fildl
ds
inc
adc
sub
mov
sub
jns
idiv
lea
sub
jo
cli
mov
mov
and
mov
es
adc
outsb
setns
sti
mov
pop
aas
and
push
std
test
dec
cmp
aaa
xchg
aaa
daa
pop
inc
cmp
pop
inc
xchg
sbb
or
lds
lds
outsb
ljmp
ja
jb
jb
sub
xchg
xor
popa
push
loope
jnp
pushl
dec
and
aad
aas
into
mov
adc
xlat
mov
insb
add
outsl
aas
insb
pop
mov
dec
icebp
in
adc
mov
xchg
js
rcrb
dec
outsb
mov
and
jnp
test
cmpsl
iret
test
or
sub
inc
sbb
push
sti
inc
lret
sbb
or
sub
shlb
mov
mov
jmp
aad
push
idivl
notb
repz
fstpt
adc
pop
les
stos
cmp
nop
popa
adc
adc
mov
adc
lods
fldenv
stos
add
fistps
in
fsubl
mov
test
test
mov
int3
mov
addr16
sarb
mov
test
test
jae,pn
sbb
push
movsb
mov
rcrb
fwait
dec
sub
sub
adc
mov
fwait
sti
mov
test
cmp
xorb
and
xchg
xchg
xor
in
lahf
popf
add
rcrb
mov
test
jnp
xchg
cmp
mov
adc
les
inc
lods
sahf
inc
mov
mov
mov
iret
jecxz
enter
pop
ret
arpl
cmp
push
xchg
scas
test
lcall
popf
add
loopne
movq
inc
push
inc
into
movsl
mov
push
xchg
lods
mov
mov
dec
fdivrl
push
pop
inc
xor
mov
in
mov
xor
sti
lods
pusha
cmp
cmpsb
adc
jnp
push
les
mov
sbb
or
mov
sbbb
movsl
cmpsl
mov
xchg
insb
ret
xchg
add
jp
nop
jge
and
je
inc
push
insl
or
pop
xchg
sbb
out
stos
xor
push
popa
sbb
fsub
mov
scas
sbb
xor
mov
dec
lcall
gs
pop
dec
jp
pop
adc
and
in
adc
hlt
rclb
add
loope
and
push
jge
mov
sub
and
call
mov
or
not
push
sbb
push
ljmp
stos
mov
xor
add
jmp
add
and
jecxz
rclb
xor
popf
dec
xor
pop
decb
movb
xlat
loopne
popa
jg
dec
insb
imul
jecxz
push
pop
lods
movswl
adc
lcall
cs
and
test
push
or
les
inc
sub
inc
lds
adc
bnd
fildll
inc
cmp
jecxz
sub
push
subb
adc
jno
dec
push
jo
pop
mov
insb
popa
sub
cmp
inc
es
ficoml
rcr
sbb
mov
int
into
pusha
mov
adc
add
insb
or
fucomp
cmp
mov
mov
jnp
repz
mov
rorb
cmpsl
mov
jne
sahf
int3
dec
and
push
std
jle
mov
dec
adc
jl
sbb
mov
pop
jo
sti
je
leave
xchg
dec
sub
lcall
sub
mov
adc
adc
in
sub
mov
add
or
iret
in
ljmp
mov
sub
clc
fisubs
addr16
push
sub
loopne
outsb
xchg
mov
push
fistps
jmp
mov
inc
add
and
ds
or
jns
aas
mov
sbb
sahf
mov
jg
xchg
dec
mov
dec
ret
mov
insb
xchg
addr16
push
aad
fmull
in
pop
mov
insb
hlt
add
mov
dec
adc
loope
sub
jb
pop
mov
stos
or
jb
cmp
insb
scas
js
rcrb
lcall
jns
jecxz
aam
out
lds
add
insl
mov
dec
mov
loope
jmp
outsl
cmp
inc
je
mov
test
in
repz
dec
imul
or
inc
and
inc
cli
cmp
mov
fsubs
daa
cmp
lods
mov
adc
push
in
lds
test
jmp
mov
andl
mov
sbb
ljmp
dec
cmp
dec
xorl
inc
push
push
inc
mov
sub
cmp
jae
mov
push
mov
pop
movsb
outsb
sbb
and
or
je
lcall
std
pop
mov
outsl
xchg
xchg
push
pop
int
mov
insb
mov
roll
addb
push
xchg
repnz
mov
addr16
and
push
adc
cmp
pushf
cs
adc
fmull
sub
clc
icebp
jp
dec
and
mov
mov
negl
dec
inc
adc
pop
stos
jno
inc
push
das
mov
sub
push
xchg
arpl
pusha
jno
loopne
mov
enter
imul
inc
in
mov
aaa
jg
adc
test
aad
add
out
mov
idivl
mov
pop
xchg
repz
mov
inc
idivb
xchg
push
sbb
xchg
sbb
sbb
pop
cmc
mov
fisubl
or
notb
in
push
adc
cmpsl
les
ljmp
add
repz
xor
dec
dec
jne
in
into
mov
imul
lods
xchg
ljmp
sbb
nop
jne
add
sub
inc
mov
xchg
mov
mov
sbb
xchg
sub
inc
rdtsc
pusha
pop
inc
add
jg
push
push
pop
add
push
cmp
rcl
xchg
or
stc
ror
xor
dec
push
jnp
addr16
and
inc
mov
cli
pop
les
movsl
std
ja
test
fdivp
idivb
push
xchg
int3
jp
jmp
dec
cli
dec
mov
int
in
xchg
pop
mov
add
mov
mov
ja
cmp
mov
and
xchg
fbstp
lahf
imul
cmc
arpl
movsl
adc
sub
lret
shll
pop
in
jle
jns
pop
xchg
mov
enter
pop
je
aaa
loope
je
push
ja
imul
mov
cmp
mov
fbstp
std
mov
sarl
dec
jmp
xchg
fisubrs
pop
je
cmp
incl
mov
loop
pop
inc
sub
bound
push
lret
inc
inc
jp
lods
dec
fsubl
jl
aaa
pop
pop
inc
mov
mov
mov
ret
mov
test
inc
repz
pop
into
test
adc
mov
jbe
insl
xor
mov
jmp
jne
pop
dec
jl
jecxz
jo
pop
addl
xchg
lahf
movb
subl
testl
push
aaa
push
int
sub
jae
inc
xor
add
mov
push
mov
cltd
dec
pop
cs
adcb
xor
push
in
jae
jne
ja
inc
add
in
xor
jmp
mov
rcr
or
cmpsb
mov
push
and
xabort
out
dec
jmp
add
inc
pop
xor
mov
jg
aam
in
pop
jmp
jmp
andl
or
sbbb
push
or
mov
push
pop
dec
jbe
or
inc
add
ficoml
ret
xlat
cmpsl
or
out
rcr
push
dec
add
and
leave
xor
jmp
insl
push
out
or
cli
lahf
cmp
jnp
sub
cmpsl
jmp
push
adc
arpl
call
push
adc
lods
aad
or
push
xchg
mov
test
xchg
sub
mov
xchg
outsl
pop
icebp
lods
xor
dec
or
ret
cmpsb
cmp
stos
shlb
dec
mov
test
and
add
rorb
fnstcw
pop
int
dec
das
notl
aaa
stos
xor
sub
sahf
mov
test
mov
mov
dec
movl
dec
ds
pop
mov
pop
ret
adc
in
push
icebp
pop
cmp
dec
cltd
cld
jp
add
jle
cmp
sahf
aam
lea
jbe
pop
cli
pop
mov
sub
push
imul
push
aaa
movsl
movsbl
cli
push
inc
cltd
mov
mov
adc
add
jp
mov
cmc
xorl
or
inc
cmpsl
cmp
std
std
xor
jne
xchg
inc
or
adc
call
mov
addb
cmp
sub
iret
xor
and
cs
lret
das
leave
ret
scas
idiv
or
sub
pop
aad
int3
jle
pop
clc
mov
shll
adc
imul
mov
out
fists
pop
je
mov
push
lods
div
inc
lahf
dec
push
xchg
add
dec
or
and
sub
test
sbbb
xchg
aas
sbb
mov
aaa
mov
sbbb
in
sub
es
inc
pusha
pop
sbb
xchg
push
js
popf
jo
and
pop
fldl
adc
sahf
bound
fs
int
cmpsb
pop
pop
adc
xor
mov
mov
add
dec
adc
das
in
xor
movsb
or
lahf
push
pusha
imul
mov
enter
mov
jge
iret
fistpl
movsl
adc
xor
pop
pop
les
sbb
imul
ret
data16
xchg
arpl
cmp
jecxz
dec
bound
sbb
repnz
cmpb
scas
test
jne
mov
mov
scas
ds
clc
stos
xor
sub
fninit
or
out
add
jno
push
dec
mov
xor
cmpsb
cmpsl
inc
out
leave
ljmp
ja
nop
std
decl
push
mov
les
dec
mov
cmp
pop
orb
jb
inc
in
adc
mov
loopne
xchg
jns
ja
lea
adc
push
mov
mov
jle
test
adc
ljmp
xchg
ret
je
sub
jmp
pop
mov
cmp
mov
shll
ja
leave
popa
cmp
gs
aaa
ds
jmp
insl
xor
mov
xchg
adc
lock
push
xchg
pop
push
ret
mov
jne
fadd
cmp
push
aad
in
cld
dec
mov
in
sub
sub
in
sub
xchg
ljmp
mov
repz
jl
dec
test
mov
fmul
pusha
mov
push
icebp
mov
jnp
scas
sbb
sbb
xchg
sbb
aam
cmpsl
data16
inc
fdivrl
xorl
faddl
lods
int3
sub
out
sub
addr16
imul
push
insb
int3
sti
sub
sarb
inc
sub
out
aaa
nop
pop
in
mov
aaa
filds
loop
add
or
cli
add
jne
mov
imul
dec
out
ss
stos
loop
cmp
or
stos
pop
mov
and
or
add
jl
enter
cmpsl
lret
xchg
loop
cmp
pop
xchg
jb
cmp
outsl
idiv
or
inc
dec
shl
mov
cmp
xor
fstps
fwait
icebp
dec
shl
leave
loope
movsb
out
mov
mov
mov
aaa
int3
shl
lret
js
sti
out
movsl
incb
incl
xor
add
add
sar
cmc
sbb
out
data16
xchg
mov
push
aaa
fstps
out
jno
add
shr
pop
mov
fdivl
ret
aad
fwait
mov
enter
adc
push
add
mov
jns
pusha
mov
adc
cltd
xor
sahf
ljmp
xchg
mov
mov
repnz
inc
orl
sub
aaa
stos
sub
mov
jno
xchg
cmp
add
movsl
nop
xor
inc
ja
inc
enter
stc
pop
cli
nop
pop
mov
mov
or
dec
fimuls
hlt
jno
rclb
jp
hlt
je
and
decb
imull
adc
into
rolb
fucomi
inc
cli
fcmovnu
test
mov
inc
lcall
dec
lret
sahf
lea
xor
or
and
push
cwtl
lret
fmulp
cwtl
xor
or
call
bound
repnz
push
inc
in
cmpsb
mov
mov
shll
sbbb
and
dec
sub
in
add
push
push
or
movsb
pop
cmp
lcall
inc
adcl
cmp
sbb
jbe
adc
rcrb
add
add
xchg
roll
mov
fldcw
jo
xor
fistps
jae
sarb
inc
imul
add
popa
popa
mov
sub
sub
lock
adc
pop
ljmp
nop
jo
or
ljmp
adc
xchg
xor
pop
fcmovnbe
mov
ja
rorb
add
dec
out
insb
fstpl
adc
hlt
test
xor
adc
mov
shrb
call
sbb
loop
sti
push
das
je
or
pop
add
inc
cs
mov
jo
mov
lods
cmp
lods
mov
pushf
fistpl
mov
addl
les
dec
jno
fs
sbb
jno
xor
repz
dec
mov
lds
out
stc
mov
sub
addl
shll
idivb
jo
mov
xchg
add
push
pop
jl
ss
pop
sahf
mov
lcall
call
push
mov
sub
insl
and
push
test
pop
push
or
mov
sahf
xchg
mov
sbb
sti
dec
movsb
mov
push
fwait
mov
cmp
jmp
pop
repnz
jbe
pop
mov
testb
roll
aad
xchg
rcrl
pop
jle
ret
lods
lds
and
and
popa
mov
mov
xchg
jg
popf
pinsrw
std
sbb
das
add
and
out
in
inc
adc
lahf
push
stos
jp
cli
pop
je
pop
in
adc
sbb
jg
mov
or
sarl
mov
shl
filds
dec
pushf
gs
jno
rcl
xlat
popaw
adc
adc
cmp
aas
sbb
pop
xchg
xchg
rclb
add
jmp
in
imul
in
push
and
shll
push
rorb
push
repnz
push
cwtl
adc
xchg
enter
outsb
fisttps
imul
cld
push
jne,pn
std
inc
mov
mov
xor
adc
push
pusha
pop
xchg
dec
dec
pop
jbe
int3
cmp
cld
or
insl
jp
mov
cld
stos
xchg
cwtl
inc
mov
jl
mov
arpl
mov
mov
mov
inc
les
sub
rclb
ss
mov
aad
add
lret
inc
mov
mov
and
sar
subl
test
jge
cmp
aaa
lret
lret
out
subl
dec
std
and
mov
out
fidivs
ja
pop
inc
pop
test
iret
xorb
fsts
sbb
adc
pop
into
cld
xor
lret
nop
aas
dec
or
jge
data16
cwtl
blcfill
mov
dec
jae
xlat
xor
repz
pop
push
into
mov
mov
test
add
movsb
fisttpl
push
mov
stos
mov
mov
jp
pop
dec
outsl
xchg
mov
fsubl
iret
out
gs
jl
jnp
jns
out
jnp
sbb
adc
pop
ret
or
xor
jno
cmpsb
mul
sub
std
mov
daa
ja
cwtl
out
mov
pop
insb
inc
jb
and
popa
cwtl
imul
add
xchg
ja
or
lcall
pop
aas
jbe
sub
xchg
gs
rorb
fists
mov
push
js
xchg
jle
push
sub
push
push
push
pop
sub
movsl
push
dec
mov
bound
xchg
jle
sub
add
pop
pop
dec
xchg
push
mov
std
jno
or
add
aad
jns
or
pop
arpl
ljmp
sub
fs
faddl
mov
leave
xchg
jl
ljmp
sbbl
es
adc
jecxz
adc
push
mov
mov
or
out
mov
aad
jp
sub
jg
pop
test
notl
dec
into
daa
adc
or
stos
gs
data16
ljmp
leave
out
dec
pop
push
mov
pop
push
mov
push
dec
call
jecxz
and
or
cmp
dec
xor
mov
pop
mov
in
lcall
std
cmc
xor
mov
outsb
adc
sbb
out
mov
ljmp
cwtl
jne
lock
push
push
xchg
mov
xor
xor
pop
push
mov
je
xchg
sub
mov
mov
js
sbb
and
outsb
inc
mov
bound
jns
fldenv
enter
sahf
push
mov
test
mov
mov
xor
sbb
push
sbb
sub
fcoml
mull
sub
or
mov
xor
lahf
adc
inc
adc
stos
and
loop
pusha
leave
adc
push
xchg
xorl
fcoms
cmp
xchg
ljmp
int3
inc
pushf
push
mov
scas
push
imul
adc
xchg
adc
mov
lret
or
addr16
cmp
das
outsb
cmp
pop
repz
add
repnz
iret
jg
add
negl
sub
js
adc
daa
push
stos
aas
iret
push
mov
lcall
push
sub
fnclex
divl
mov
mov
push
and
mov
orl
and
mov
shll
jno
movsl
cmpl
popf
jne
inc
xchg
scas
sub
sub
rcll
add
out
sbb
cld
dec
sub
jo
push
dec
pop
xchg
cltd
jne
mov
jle
int
in
xor
cs
sub
xchg
mov
fdivr
pop
imul
data16
jno
lahf
xchg
fisttps
mov
mov
out
stos
push
sahf
sub
fsubs
or
cmpsl
cltd
stos
jl
ljmp
movsb
dec
push
aas
inc
popa
iret
loope
aaa
imul
lahf
pushf
sbb
lods
xor
xchg
mov
push
sarl
or
mov
shll
fst
and
jbe
push
gs
test
push
sarb
mov
or
add
xchg
aad
jbe
push
ficomps
lahf
and
lock
arpl
mov
cld
imul
inc
mov
sbb
out
nop
lds
pop
xchg
out
mov
js
dec
in
in
movl
or
movsb
orb
cs
sbbl
les
shlb
int
adc
dec
add
nop
pop
mov
daa
push
pusha
jmp
mov
adc
cmp
outsb
dec
jbe
sbb
fistpl
pop
cmc
adc
jbe
lea
xchg
add
repnz
in
scas
add
jns
adc
aas
fidivs
out
mov
cltd
rcll
loopne
out
pop
psubw
popf
pop
leave
sub
stc
inc
rolb
es
stos
es
add
cmp
ja
mov
xchg
fsubs
sbb
pushf
mov
sti
fwait
lds
xchg
fidivs
mov
std
js
dec
repz
inc
fisubrl
push
mov
dec
stc
leave
mov
test
in
mov
cmp
les
jecxz
in
jl
sbb
inc
mov
rorl
jge
jbe
shll
jle
sbb
nop
notl
add
add
pusha
fnstcw
rcll
jmpw
lahf
xchg
xchg
imul
test
jmp
ss
mov
in
mov
mov
lahf
loopne
cmp
push
fidivrl
scas
push
stos
adc
test
push
in
push
les
sub
cli
sbb
xchg
imul
out
out
mov
and
loopne
cmpsb
insl
mov
ss
test
push
sub
test
jg
loop
inc
icebp
das
adc
loopne
imull
lahf
scas
cmpsl
add
call
adc
nop
jl
negb
xor
cmc
popa
inc
dec
sbb
mov
in
mov
mov
dec
shrl
xchg
or
lret
jp
jo
outsb
lcall
jge
cld
les
loope
pause
push
inc
sub
sub
ss
xchg
adc
pop
or
jne
or
and
inc
mov
mov
rorb
push
cmp
sbb
sbb
scas
stos
leave
or
pop
lods
daa
sahf
inc
int
ss
and
enter
mov
dec
mov
fisubrs
adc
add
in
in
scas
add
ljmp
mov
ljmp
ss
jge
and
push
sarb
adc
int
popf
insl
sub
adc
jae
adc
push
inc
add
or
test
jge
test
sub
in
pop
cmc
mov
jbe
xor
push
push
adc
popf
nop
fwait
out
and
lods
repnz
cld
andb
add
mov
dec
repz
cld
fwait
sub
outsb
push
sub
sbb
nop
pushf
aad
xchg
loope
mov
mov
imul
xor
incl
movsl
push
sub
xor
ret
xchg
std
scas
cmc
roll
pop
cli
stos
test
inc
sbb
mov
stc
divl
cmpsl
dec
sahf
cli
xchg
daa
mov
into
rorb
test
lods
into
and
js
ljmp
push
aas
add
push
pop
out
pop
inc
jne
mov
rclb
cmp
inc
push
iret
dec
test
mov
pop
or
js,pn
xchg
sub
push
in
cld
xor
mov
jo
pop
rcll
add
mov
stos
jecxz
lea
and
lods
or
push
and
repz
movsl
fs
xor
inc
pop
scas
out
pop
xor
pop
adc
jp
sub
xor
jnp
ss
jns
cmp
movsl
ror
out
pop
mov
mov
dec
and
lea
ret
out
push
sahf
in
js
sub
cltd
dec
pop
mov
cltd
pop
addb
in
hlt
js
data16
outsb
mov
jmp
mov
push
scas
fstpt
idivl
and
lods
sti
aaa
xor
pop
xor
or
cwtl
movsl
push
fwait
ds
cmp
inc
push
bound
call
outsl
xor
sahf
jo
cwtl
inc
xchg
sub
xchg
jle
in
stos
sub
divl
pop
xor
out
and
or
imulb
or
xchg
dec
push
stos
lahf
cmc
int3
mov
aas
push
add
push
scas
fldl
mov
inc
dec
sbb
and
loop
or
mov
add
inc
or
jno
jnp
clc
lock
and
js
cld
js
lock
or
test
sub
hlt
inc
sbb
into
lock
cld
rcrb
lcall
lods
sbb
mov
scas
movsl
cmpsb
insl
pop
push
xor
adc
lds
data16
mov
rolb
ret
js
mov
je
mov
pop
ret
inc
dec
inc
cmpsl
fdivs
push
inc
xchg
aam
jp
jnp
and
outsb
das
leave
loop
stos
dec
dec
iret
fwait
js
mov
leave
in
pop
pop
add
shll
mov
addb
and
and
insl
out
mov
loopne
adc
outsl
ja
divb
enter
clc
int3
mul
push
inc
out
add
das
fcmovbe
sbb
jmp
add
pushf
sbb
cmpsl
std
push
neg
scas
sahf
add
jae
stos
jb
sbb
add
cmpsl
jo
dec
sbb
ss
sub
push
jne
sub
inc
test
outsb
mulb
mov
inc
dec
lock
mov
imul
outsl
repnz
imul
aas
adc
dec
jns
cmp
shr
icebp
sahf
mov
mov
pop
ret
in
popa
push
jne
fs
sub
lods
sub
fdivp
data16
test
std
dec
cmp
jecxz
ret
leave
sub
rol
hlt
dec
inc
mov
shll
enter
out
je
push
out
mov
bound
stc
clc
xchg
ffree
mov
stos
enter
adc
nop
das
pop
lods
pop
mov
in
std
mov
iret
test
xchg
xchg
rclb
stc
push
movsl
mov
mov
icebp
jecxz
js
jg
push
push
push
sbb
int
repnz
fdivrl
pop
dec
stos
push
cmpl
xchg
lods
std
inc
jnp
mov
fdivr
cltd
jne
xlat
inc
adc
jg
scas
sub
loope
cmpsl
out
insl
dec
mov
jb
jno
xchg
divl
xchg
popf
in
iret
jmp
and
cltd
and
add
sbb
adc
jb
push
cltd
sub
sahf
std
notl
xlat
in
adc
cld
jnp
pop
mov
fldt
scas
push
mov
push
sbb
movsl
sbb
ret
or
cmp
fldenv
jl
sbbl
dec
test
sar
in
pop
or
test
aam
adc
xlat
push
xorb
add
jno
scas
out
aas
in
jmp
jno
adc
pop
push
shlb
push
dec
sbb
in
ja
sub
and
js
mull
movsl
lock
nop
xchg
in
adc
inc
in
cmp
add
mov
out
sbb
add
inc
daa
in
jae
dec
push
cmc
fwait
jl
or
outsl
lret
mov
sub
mov
pminsw
mov
notl
outsb
adc
lock
int3
je
push
push
xlat
xchg
adc
lahf
cmp
sti
or
nop
sbb
jbe
push
lret
mov
shl
cmpsb
jl
test
std
mov
les
aam
sahf
lahf
adc
mov
add
jge
add
gs
imul
xchg
sub
adc
push
rcl
cmp
jecxz
ss
sti
push
imul
nop
ret
decb
sbb
xchg
pop
dec
xchg
push
xchg
pushf
or
and
and
es
sub
inc
data16
sti
fcomps
mov
data16
aas
cs
mov
dec
jno
sahf
push
push
and
subb
xchg
xchg
fmuls
sbb
fs
xchg
in
jge
adc
pop
dec
arpl
push
xor
jne
mov
push
lods
pop
ljmp
pop
shlb
jnp
lret
pop
popf
and
pop
js
das
fisubrs
pop
adc
div
adc
sbb
adc
pop
loopne
data16
subb
push
js
imul
fisubs
and
rorl
cwtl
cltd
sub
xchg
jbe
mov
mov
dec
repz
inc
aas
loop
cmp
repz
ja
inc
ja
rclb
pop
fsts
gs
cmp
and
loop
pop
sbb
mov
pop
shlb
sub
scas
insb
adc
xchg
adc
stc
add
lret
jp
leave
enter
lods
cmp
pop
decb
mov
jecxz
sub
jecxz
mov
xor
mov
repz
daa
movsb
popf
mov
inc
cmp
aas
loopne
movl
jo
cmp
and
cwtl
imul
imul
in
sti
and
aam
js
inc
mov
out
pushf
pop
sub
inc
adc
inc
loopne
sahf
dec
fsts
or
cmp
jge
cmp
rcll
push
out
arpl
pop
xchg
add
cmpsl
push
lods
mov
mov
and
and
cmpsb
mov
test
jge
cwtl
imul
addr16
push
mov
stos
jo
out
jle
popa
lea
push
shlb
test
mov
xchg
dec
sub
ss
test
sbbb
scas
mov
test
add
test
and
push
stc
mov
jecxz
popf
cs
fisubl
loop
inc
dec
loopne
push
cmp
sub
fmul
sbb
imulb
inc
xor
fsubrs
adc
loop
cltd
data16
jp
push
repnz
pusha
ret
je
adc
push
push
test
cmpl
push
sti
lret
lock
fcmovb
cmpsl
fidivl
enter
or
in
mov
add
push
rcll
xchg
imull
insl
cmp
ss
and
fs
and
or
ss
xlat
decl
pusha
mov
sub
and
loopne
repnz
fwait
or
cmp
pop
xor
pop
aaa
aad
in
inc
pop
fiadds
sarb
mov
inc
int3
and
or
repz
imul
ds
loope
or
mov
dec
sbb
pop
adc
addr16
iret
jge
pop
outsb
fwait
add
or
jg
outsb
and
inc
les
iret
jge
mov
jb
cmp
cmp
inc
test
lds
mov
sti
sbb
mov
mov
psrld
out
in
add
lahf
sub
jle
mov
inc
sbbl
ds
dec
repz
jecxz
cmp
xor
adc
or
mov
xlat
das
repz
push
jne
jno
mov
cmp
pop
mov
fdivrs
push
mov
jmp
add
pop
jne
inc
mov
mov
cli
sti
hlt
lahf
sbb
jecxz
inc
es
inc
aas
mov
jl
test
lds
sub
sbb
or
lea
enter
iret
clc
sbb
mov
pop
mov
dec
test
je
mov
stc
negb
lcall
sbb
mov
aas
xchg
ficomps
push
and
dec
jns
pop
push
ret
arpl
mov
iret
insl
mov
mov
pop
mov
bound
xor
mov
arpl
jo
stos
xchg
std
xor
in
enter
xchg
cld
orl
btc
lret
lods
andps
je
cmp
adc
test
push
aam
mov
or
dec
dec
mov
and
jno
sbb
mov
jecxz
xchg
and
xchg
xlat
mov
mov
push
mov
hlt
ret
dec
dec
pushf
cmp
test
xchg
jecxz
push
jl
xor
rorl
ss
or
in
movsb
push
aas
or
mov
mov
jl
sbb
cmp
dec
push
pop
sub
xor
pop
movsl
dec
stos
mov
mov
sbbl
outsb
sub
ret
data16
daa
stc
push
popa
daa
mov
add
mov
or
mov
jnp
adc
into
dec
inc
sahf
ror
aam
sub
sbb
cltd
lds
dec
jae
in
mov
mov
mov
dec
mov
xor
sbb
jmp
sti
pushf
push
cmp
mov
push
test
jle
std
into
jne
movsb
xchg
jno
std
pop
jns
xor
and
mov
or
jno
cmp
mov
or
loope
inc
sbb
aas
out
mov
push
inc
insl
scas
inc
roll
push
cmp
lret
mov
daa
insb
pop
pop
sub
cmpsl
add
mov
mov
dec
pusha
repz
pop
ljmp
lcall
or
pcmpeqb
sub
pop
xchg
lods
cmc
xlat
dec
icebp
jo
ror
inc
inc
fwait
push
adc
fst
pop
cwtl
lds
lods
stos
lret
pop
test
sbb
xor
out
xor
xchg
icebp
cmp
mov
sub
pop
cli
jnp
mov
repz
jl
arpl
pop
pop
xchg
xchg
pop
mov
repz
loopne
sbb
in
test
cmp
aam
mov
jns
addl
inc
and
jmp
inc
daa
mov
ss
add
rclb
mov
jmp
andl
cmc
or
je
out
inc
mov
push
ljmp
dec
add
mov
out
pop
cmp
cmp
cmc
add
imul
mov
aaa
mov
lds
jnp
bound
xlat
cmp
repz
outsl
movsb
jns
add
ljmp
stc
pop
cmp
cmp
lods
dec
sub
ret
shld
or
cwtl
stos
sbb
mov
into
pop
sbb
out
push
mov
bound
adc
fstps
insb
mov
dec
jge
loopne
xor
or
adc
cmp
cmpsb
lods
cmp
leave
dec
cmpsb
jmp
int3
push
rcll
push
push
mulb
push
sbb
pop
fucomip
outsl
mov
out
xchg
cmc
dec
enter
mov
or
fdivrs
jecxz
cmp
push
xchg
pop
fstpt
daa
xor
jns
mov
pop
or
scas
inc
cmp
push
adc
outsl
clc
xchg
lcall
imul
data16
icebp
xchg
das
rcrb
dec
jle
shlb
pop
nop
or
stos
ss
imul
es
pop
xor
and
mov
xchg
sahf
push
ljmp
leave
inc
popf
imul
ds
jp
fwait
insb
js
out
je
xor
mov
mov
or
jae
mov
std
and
gs
xor
faddl
stos
xchg
mov
mov
jge
sub
scas
add
xlat
dec
sub
out
fisubl
flds
subl
push
cmp
inc
push
loope
xlat
jno
xchg
addr16
adc
sbb
fadds
mov
adc
and
int3
pop
ljmp
rorl
arpl
mov
lcall
in
in
mov
ds
imul
insl
inc
fidivrl
call
xchg
leave
stos
orb
ja
jp
shll
push
cmp
ror
sbb
mov
jge
fs
fnstsw
adc
add
mov
es
popf
dec
and
pop
scas
jg
mov
loope
scas
mov
jno
or
cmp
mov
cmp
out
jmp
mov
or
sti
in
pop
movsl
mov
pushf
mov
add
add
or
stc
pop
inc
push
je
xchg
inc
pop
rcrb
dec
jne
fistpll
pop
dec
loopne
xor
rep
out
jnp
and
adc
loope
add
cmp
lea
rcrl
mov
enter
add
aas
adc
insb
in
fwait
push
dec
fidivrl
push
int3
inc
test
aaa
fwait
mov
push
insl
js
inc
xchg
int
out
or
sti
mov
xchg
ds
aam
enter
mov
push
pop
pop
sti
mov
gs
insl
cmc
test
loop
cmp
xlat
test
or
mov
or
imul
sarb
jb
push
push
dec
jg
ror
loopne
arpl
add
push
int
leave
pop
sbb
cwtl
stos
inc
adc
outsb
outsb
xchg
fwait
push
sarb
push
outsl
lahf
outsb
ret
sahf
mov
add
mulb
sub
dec
aad
pop
movsl
jecxz
lods
ret
xchg
imul
lret
lret
pushf
lods
xchg
pop
fmul
std
cwtl
rorb
aad
or
lods
scas
push
aam
pop
imul
in
into
scas
repnz
and
dec
cltd
mov
sti
and
mov
inc
cltd
or
jle
stos
mov
jp
sahf
xchg
adc
jge
push
dec
adc
pop
adc
inc
xor
dec
inc
sti
aaa
das
int3
sarl
dec
js
rorl
js
xor
repz
ret
lock
adc
inc
jo
adc
repz
pop
mov
outsb
add
bnd
andb
lods
inc
pop
daa
imul
dec
mov
dec
cli
push
and
daa
sbb
cmp
lret
push
and
push
addr16
imul
in
pop
mov
push
xchg
js
or
xchg
pop
test
add
lods
xchg
mov
popf
mov
fildll
and
lods
mov
push
sbb
imul
sub
mov
jl
js
lcall
pop
cmp
lods
mov
xor
push
xchg
nop
push
xchg
add
ss
mov
js
ret
jp
loopne
adc
or
push
jae
push
xor
xchg
insb
fdivrs
lcall
jbe
test
cld
int3
dec
mov
hlt
ret
inc
sub
sub
fwait
inc
icebp
das
leave
int
je
out
push
sub
sti
mov
mov
pop
push
call
sub
loopne
inc
lea
rorb
jg
mov
cmp
mov
sub
xor
pop
xor
test
test
adc
xchg
cmp
sbb
push
lahf
arpl
mov
leave
adc
mov
ljmp
movb
adc
add
mov
stos
ror
sub
or
nop
mov
push
shlb
out
fdivrl
cli
mov
sbb
insl
push
fcoms
cmp
test
aam
loopne
gs
stos
ficoms
les
ds
out
sti
ds
sub
shrl
das
xchg
mov
mov
aad
sbb
xor
call
push
hlt
popa
and
js
cmc
xor
or
pop
sbb
push
push
into
aaa
cmp
test
les
mov
jecxz
push
or
clc
lods
out
xor
sbb
mov
lods
jne
lahf
pusha
jae
or
test
jb
mul
cmp
xor
inc
setb
pop
cmp
rcrb
bound
mov
decb
cmpsb
js
ds
sbb
cmp
setbe
xchg
mov
ss
test
pop
xor
in
cwtl
jbe
lock
push
sub
cmp
cmp
gs
and
lahf
inc
xor
test
jne
dec
sub
cli
push
aam
fsubrl
shr
dec
popf
int
lock
xor
push
pop
add
cld
fcmovu
dec
ret
scas
jb
add
mov
jnp
mov
or
mov
shll
cmp
sahf
cli
add
xor
and
dec
inc
in
in
or
inc
sbb
push
adc
insb
xchg
xchg
push
xchg
add
dec
lea
cltd
mov
lahf
in
push
movsb
cmpl
push
xor
or
and
lock
hlt
mov
fidivrl
pop
mov
jbe
ret
xchg
in
jg
fwait
xchg
pop
shll
mov
and
scas
popf
mov
lock
cmp
insl
cmc
dec
jno
add
mov
fdivrs
mov
aam
xchg
insb
adc
xor
xchg
les
jmp
push
into
sub
fsubs
and
int3
das
cmp
ret
std
cmp
repz
ljmp
pop
in
fstpl
add
mov
jae
xor
rclb
add
dec
push
cwtl
dec
mov
or
pop
cmp
mov
imul
out
push
add
sbb
sbb
leave
mov
mov
xchg
cmpsb
dec
cltd
xor
in
fs
aaa
pop
jbe
aas
shr
sbb
lds
sahf
imul
ret
sbb
clc
sub
mov
int3
adc
arpl
lret
add
xchg
mov
jecxz
stos
shll
ljmp
dec
and
popf
jb
sbb
out
xchg
pop
data16
adc
add
outsl
bound
les
loop
movsl
lahf
ret
shlb
pop
mov
pop
das
idivl
jno
shr
shl
jle
mov
push
dec
sahf
push
pop
faddp
ficompl
sbb
aas
jo
fwait
mov
scas
xchg
stc
fistpll
push
xchg
loope
cmp
pop
fcoml
cmovae
cld
xor
aaa
jp
jg
pop
mov
cltd
ds
mov
cld
push
inc
pop
push
incb
xchg
xlat
popa
ret
inc
mov
dec
cwtl
or
mov
sub
arpl
cmp
loopew
jno
int
xchg
push
imul
cmp
enter
ds
push
fnstsw
fcomi
cli
js
in
add
adc
cmpsl
fsubp
or
mov
mov
enter
push
or
stc
jmp
mov
enter
es
xlat
pusha
movsb
std
mov
test
les
test
mov
jbe
ja
push
mov
aam
iret
cmpsb
jb
xchg
jp
loopne
pop
jne
pop
sub
shl
insb
jb
jnp
push
xchg
mov
dec
jbe
xchg
cmpsb
inc
fdivs
inc
test
adc
xor
mov
xlat
pop
xchg
sbb
aad
or
push
fdivr
cmp
hlt
or
lcall
nop
xor
lea
add
push
daa
inc
sahf
jno
movsl
dec
sub
xchg
cmpsb
sti
movsl
test
push
push
dec
mov
daa
clc
mov
or
sbb
sbb
into
rorl
aad
mov
pop
scas
mov
mov
lahf
test
movsl
mov
push
test
inc
out
imulb
jbe
mov
data16
and
gs
cmp
pop
addr16
in
scas
fildll
push
je
cltd
or
negl
xchg
xchg
sub
jo
loop
add
push
or
jg
fdiv
inc
addr16
inc
out
mov
jg
aam
sti
push
cmp
jmp
push
or
arpl
fdivp
rcrb
pop
sbb
and
sub
mov
push
inc
mov
aam
in
pop
into
push
xchg
inc
imul
mov
lods
outsb
bound
shll
xchg
mov
and
jae
push
xchg
xchg
cld
sbb
inc
test
std
mov
dec
fs
dec
mov
adc
data16
xor
inc
dec
fbstp
emms
or
add
pop
add
mov
pushl
sarl
and
push
test
sbb
jb
dec
mov
and
int
sar
mov
xchg
inc
aaa
repz
jbe
bound
imul
mov
icebp
push
adc
int
scas
xchg
pop
pusha
cs
xchg
dec
push
adc
xor
gs
test
decb
adcb
add
out
push
mov
out
add
inc
pop
and
jp
cmp
lcall
and
or
mov
lcall
pop
inc
insl
call
mov
in
das
out
nop
cmc
push
xor
mov
sub
repz
xchg
sbb
sub
imul
push
or
pop
xchg
test
test
vmptrst
sub
xchg
repz
inc
jno
je
add
int
cmpsb
mov
test
push
adc
or
jg
mov
mov
xchg
lea
push
mov
add
push
insb
repnz
addr16
dec
adc
fsubl
rclb
pop
or
ja
or
sbb
pop
movsb
pop
mov
gs
sahf
test
jns
lcall
and
ljmp
ljmp
andps
enter
mov
fdivs
or
arpl
mov
ljmp
movsb
lret
fdivrl
imul
lock
pop
and
pop
ss
fwait
stos
pop
mov
push
push
shr
cmpsb
xchg
shlb
mov
xchg
pop
xchg
jmp
cmpsl
dec
xor
stos
mov
ret
jp
dec
iret
pop
dec
shl
imul
push
arpl
insl
mov
loope
ret
fiadds
sbb
mov
add
pop
add
cmp
rcrl
jp
push
and
xor
add
jp
push
add
inc
in
mov
xor
repz
push
sbb
pusha
out
js
lret
xchg
inc
lcall
sub
inc
imul
cmp
inc
jle
and
daa
scas
shr
adc
jmp
mov
outsl
std
bound
push
xor
jecxz
std
cmc
sahf
push
or
mov
sbb
in
inc
jl
xchg
push
pop
sub
and
into
and
jg
or
gs
vpsrlw
cmp
cmp
insl
cmp
inc
push
popl
mov
xor
inc
cmp
dec
loopne
insb
in
jmp
jmp
jmp
mov
and
adc
in
xchg
cmc
fidivrl
ja
sbb
add
sti
inc
stos
les
push
pop
push
lret
lods
jnp
lcall
and
andb
jnp
adc
xchg
jecxz
sbb
test
shr
or
or
mov
cmc
fstps
in
pop
push
insl
loop
or
cmp
stos
jae
dec
push
pop
cmp
lds
shll
mov
and
ret
in
and
lds
js
rclb
inc
xchg
pop
dec
insb
mov
jge
or
int
mov
dec
test
fsubrs
push
out
mov
mov
jnp
jnp
aas
mov
dec
cmc
jb
adc
jns
dec
xchg
insb
fs
mov
inc
sbb
adc
insl
lods
ret
call
pop
mov
lret
adc
cs
fsubs
mov
out
jle
pop
inc
pop
mov
repz
iret
cmp
adc
jbe
inc
mov
mov
shrl
lock
mov
fdivr
pop
cmpsb
cmp
pop
and
fsts
js
push
xor
es
xchg
xchg
xor
test
jg
ret
je
cmpsl
mov
inc
imul
outsb
push
ja
in
dec
xchg
testl
cmp
pusha
sbb
inc
out
jg
add
int3
sub
sbb
inc
mov
adc
cmp
sti
fwait
inc
inc
sarb
sti
into
in
loop
movsb
sub
jle
cli
lods
dec
jge
mov
pop
jle
mov
mov
cmp
add
mov
inc
push
cmp
insb
sbb
mov
in
or
pop
je
push
mov
test
push
fisttpll
jl
jne
lea
mov
inc
test
push
mov
cmp
inc
jp
nop
cmp
add
xchg
fdivr
insl
mov
aam
adcl
sbb
movsb
mov
cli
and
ja
std
push
and
add
jnp
ficompl
arpl
mov
mull
pop
sbb
inc
fsubs
popa
cmp
push
enter
xchg
mov
cmp
js
std
and
xchg
pop
push
xor
jo
js
xor
dec
add
dec
lods
int
gs
dec
dec
bound
call
mov
fsubl
out
xor
pusha
xor
pop
dec
testb
jae
xchg
lahf
into
and
xchg
xchg
std
in
out
add
call
mov
mov
dec
cmp
push
int3
sub
sbbl
xchg
in
jo
add
outsb
inc
lock
adc
dec
outsb
cmp
and
ja
jl
je
pusha
gs
dec
stc
out
dec
loopne
push
test
jl
rolb
gs
test
xchg
inc
loope
cld
xor
aas
mov
ljmp
jno
dec
enter
repz
pop
adc
cmpsb
comiss
fcmovnu
cld
mov
dec
mov
adc
xchg
jbe
mov
inc
and
mul
cmc
xchg
mov
sbb
je
ljmp
adc
dec
incl
lcall
outsl
pushl
rsm
jnp
pop
lea
repz
and
cmp
repz
jge
sbb
dec
add
mov
lret
pop
mov
xor
add
jg
xchg
outsl
cltd
xor
hlt
cmp
repnz
cmp
add
mov
pop
pop
lods
hlt
mov
push
xchg
arpl
mov
call
jns
add
sub
dec
xchg
inc
or
or
cltd
mov
mov
push
add
xchg
xor
cmc
mov
shlb
pop
inc
mov
lea
lret
cmp
das
dec
in
pop
ret
cwtl
cmp
sub
mov
ljmp
dec
fisttpl
adc
xor
sub
mov
jle
xchg
ds
push
shrl
les
loope
lods
in
xor
and
rcr
addr16
dec
hlt
push
mov
sbb
cmp
jbe
mov
cmpl
xorb
push
adc
inc
sti
out
shr
push
lret
outsl
imul
int3
stc
mov
test
push
or
mov
lea
and
sahf
icebp
std
inc
mov
adc
pop
fwait
mov
mov
push
test
pop
nop
cmc
xor
iret
mov
scas
mov
xor
jnp
insl
outsb
mov
mov
jle
push
mov
bound
repz
sub
adc
or
sbb
dec
mov
jbe
test
ficoml
fimull
jg
jnp
pop
mov
aaa
inc
and
nop
mov
lods
xlat
sub
and
jbe
test
fwait
mov
fmull
xchg
out
or
es
popf
insb
shrl
aad
jno
adc
and
bound
jo
lret
inc
jno
stos
int
test
dec
mov
scas
jge
mov
add
mov
aam
out
insb
and
testb
push
popa
lock
insl
scas
ret
cmp
push
test
xchg
xor
and
inc
add
into
cmp
clc
lret
mov
mov
jne
sbb
std
sub
loope
daa
loop
sub
xlat
dec
xlat
test
xor
mov
jmp
dec
das
pop
ror
mov
js
out
sub
jb
jnp
jb
or
shrl
out
adc
orb
or
outsb
mull
flds
rcll
and
xor
icebp
jle
insl
or
add
pop
js
into
push
sbb
jns
xchg
pop
sti
mov
out
pop
jmp
mov
mov
icebp
and
outsl
pop
or
inc
cli
jp
mov
pop
arpl
imul
sbb
int
fildll
mov
imul
movsl
iret
pop
xor
xor
hlt
pop
test
xchg
pop
add
sub
dec
mov
and
out
xchg
test
in
mov
pop
shrb
ja
mov
shll
cmp
in
adc
or
inc
sub
aad
lods
out
pusha
out
xchg
rolb
mov
ud0
leave
dec
inc
xchg
pop
cmpsl
out
and
je
xchg
mov
inc
add
add
inc
and
pop
lahf
mov
mov
dec
push
push
inc
inc
sub
ret
out
jle
cs
jp
clc
lods
and
repnz
pushf
outsl
pusha
dec
cs
pop
jne
add
inc
or
adc
fiadds
cmp
pop
scas
jmp
icebp
mov
cmp
mov
mov
movsb
add
das
scas
sbb
popf
mov
or
shll
das
pop
xor
jge
aaa
push
shrb
ffree
loope
cmc
fildl
icebp
enter
sub
jne
lods
add
movsb
int
fst
add
adc
xchg
std
call
shll
xchg
cmpb
pop
fcmovnu
inc
aas
push
pushl
sub
ror
xchg
xor
cmpsl
orps
mov
sbb
pushf
cwtl
xchg
inc
fstl
lock
mov
jmp
int3
push
leave
fists
lahf
addr16
dec
repnz
std
jno
push
fstpl
jp
pop
xchg
jmp
sub
lods
jle
test
sbb
lea
movsl
mov
cltd
aad
cmp
popa
pop
add
mov
sbb
or
mov
xlat
cmpsl
jp
xor
jg
dec
clc
add
ds
gs
mov
shlb
xlat
xlat
stos
jbe
jae
cmpsb
xchg
lcall
jmp
sbb
xor
adc
stos
shlb
sbb
push
dec
out
bound
xor
push
loopne
mov
into
dec
jo
fisubrl
call
sub
adc
icebp
pop
fnstcw
jno
test
adc
outsl
and
add
stc
jae
out
mov
outsl
cmc
iret
fbld
pushf
leave
stc
out
roll
lahf
mov
in
jno
jo
lock
in
out
movsl
ret
mov
fwait
out
xchg
in
in
int
add
inc
mov
or
adcb
xchg
push
repz
orl
enter
push
cmpsb
ds
adc
push
mulb
cmp
dec
test
pop
inc
and
xor
popa
shlb
add
add
lcall
push
cmp
cmp
insl
xchg
mov
mov
push
ret
dec
fsub
mov
lock
and
add
adc
adc
xor
sti
xchg
or
fnstenv
and
popf
mov
push
xchg
inc
jmp
sarb
out
push
outsb
pushf
cmpsl
pop
adc
arpl
push
mov
pop
ret
mov
cs
sbb
add
insb
ljmp
sbb
pushf
addr16
lds
mov
call
ret
test
outsb
sbb
popa
push
mov
adc
dec
and
rcrl
stos
mov
add
es
push
pop
pop
xor
pop
icebp
pushf
in
movsb
insb
dec
sub
add
inc
popa
lahf
mov
loopne
fsubs
jbe
popa
cmp
jo
push
sbb
loope
inc
pop
les
add
mov
or
cmp
repnz
cmp
lahf
adc
inc
xor
in
sbb
mov
inc
jg
add
add
popf
pop
or
cmp
jo
ljmp
in
add
sahf
in
inc
push
mov
push
mov
cli
dec
rcl
xchg
sti
xor
add
popa
sbb
or
push
dec
xor
mov
int3
add
mov
jae
jno
lea
cmp
mov
xor
cmp
push
add
mov
inc
jae
fs
adcl
inc
std
pop
jle
popa
pop
push
fs
inc
mov
add
popf
btc
xor
push
xchg
icebp
cli
sti
rcrb
popa
lods
into
insl
jb
outsb
dec
cli
add
sbbb
jnp
xchg
addr16
int3
subl
arpl
sahf
lret
cwtl
cli
notl
pusha
and
enter
jmp
sahf
jmp
pop
jle
push
mov
cmp
pop
call
mov
je
rorl
mov
movl
movsl
ja
imul
add
xlat
push
pop
aaa
push
lcall
js
push
fiadds
xchg
jne
test
movsl
dec
std
lret
mov
clc
ss
idivb
les
pop
xchg
stc
dec
lods
jmp
lcall
cmp
and
lret
loope
stos
pop
cmp
repz
movsl
test
je
int
inc
mov
leave
cmp
lods
shlb
adc
add
lcall
dec
pop
ds
call
cmp
mov
hlt
cmp
in
jecxz
dec
repnz
or
cmp
push
imul
xor
clc
imulb
sub
sbb
ds
je
int
ret
int3
lds
repnz
aas
mov
je
sbb
xchg
adc
nop
jg
test
repz
jns
leave
loope
scas
dec
or
rorb
add
repz
pop
sub
aaa
std
call
push
mov
add
gs
cmc
jbe
into
cmpsb
or
loope
into
cmp
xor
fdivl
sbb
cmc
cmp
movsb
mov
mov
cmp
add
into
xchg
or
das
sbb
mov
cmp
rcrb
frstor
push
mov
cmpsb
sbb
xchg
add
mov
xor
pop
cmp
les
xlat
pop
hlt
icebp
sbb
out
lock
pusha
inc
cmp
int
xchg
jl
popa
mov
or
push
jecxz
pusha
inc
add
int3
jl
mov
cltd
jecxz
leave
inc
sbb
or
call
gs
data16
push
fisubrl
push
jp
pop
sub
lcall
addr16
add
jnp
or
jl
jae
lcall
jnp
jo
xchg
xor
outsl
cld
sbb
lds
insl
repz
inc
lock
dec
mov
push
out
pop
push
cli
and
repnz
pop
insl
jne
into
mov
push
jo
sarb
les
cmp
test
add
lds
and
sahf
rclb
call
sbb
xor
dec
inc
je
xchg
ror
imul
cmp
fisubs
cmpsl
sub
cmp
scas
lds
dec
mov
scas
dec
xor
xor
test
stos
stc
mov
push
add
pop
mov
data16
mov
xor
mov
nop
jno
adc
xchg
filds
mov
cmp
leave
adc
movsl
std
adc
int3
xchg
lea
cs
jmp
jp
add
pop
pop
fidivs
rol
insb
and
jp
jle
ret
push
sarb
lock
xorb
jns
je
in
push
movsl
iret
mov
mov
jns
nop
sarl
add
push
adc
cmp
sbb
jno
pop
cmp
mov
mov
push
inc
jae
pop
push
outsb
jp
dec
pop
inc
in
lods
sbb
out
hlt
pushl
pop
loopne
add
jns
pop
ss
mov
and
imul
int3
inc
bound
fcmovu
cmpsb
xchg
jns
pop
cld
inc
hlt
aas
aas
dec
sub
sbb
outsl
out
insl
and
add
xchg
fs
orl
sbb
pop
adc
dec
mov
mov
mov
xor
xlat
test
dec
xchg
shrl
xchg
int3
adc
sbbl
xlat
jmp
mov
mov
mov
fstpl
push
jae
xchg
rclb
loope
jmp
ds
mov
fbstp
bound
enter
jecxz
xchg
xor
psubw
push
sahf
aas
xchg
test
lock
push
inc
mov
mov
mov
movsl
xchg
inc
mov
mov
jne
inc
adcb
push
lret
outsb
std
push
leave
adc
mov
or
subl
mov
int
and
gs
insl
movsb
std
mov
jge
jmp
movsb
orl
clc
or
dec
insb
mov
pushf
sbb
mov
enter
jo
dec
jl
stos
ret
cmp
lods
inc
out
add
out
aaa
adc
xchg
btc
pop
in
sub
cmp
or
push
lds
pop
xchg
ds
aaa
fildll
dec
lock
xor
dec
add
mov
push
loopne
clc
sub
cli
ret
std
daa
cmpsb
cmp
pop
xlat
ret
cltd
mov
repz
lea
adc
inc
pop
shlb
fmulp
mov
ret
adc
pop
das
pop
movsb
stos
jnp
jae
hlt
insl
mov
shlb
popa
out
int
xchg
enter
or
repnz
repnz
jnp
dec
pop
add
or
and
test
ljmp
loopw
mov
add
cmpsb
lret
loop
mov
aas
aam
xchg
pop
xchg
or
adc
call
dec
sbb
xor
outsb
jbe
lcall
sub
add
sarb
aad
sahf
inc
cld
out
add
insl
sbb
and
ret
mov
mov
pop
cld
loopne
jne
leave
stos
cmp
or
inc
clc
jle
out
cmp
push
addl
iret
adc
adc
jg
mov
pop
lret
daa
stos
push
push
inc
in
ja
xchg
pop
iret
mov
xor
sub
and
mov
jo
xor
outsl
sbb
rcll
shlb
shll
lods
push
fsubrl
or
les
inc
lret
mov
dec
shlb
fwait
mov
fs
jo
popl
stc
pop
cmp
cwtl
sahf
sub
cmp
test
adc
sub
lods
test
sbb
xlat
fstp
or
xchg
fldcw
sti
mov
lock
xchg
push
loopne
or
sub
clc
shl
insl
dec
pop
test
inc
test
daa
push
ss
ss
adc
mov
in
push
xor
pop
in
dec
inc
mov
push
into
add
sahf
push
xchg
jns
dec
clc
aaa
imul
out
jae
mov
adc
call
cmp
sbb
mov
xlat
icebp
pop
in
ds
imul
sub
cmp
lds
adc
jno
add
test
inc
addl
dec
movsb
mov
popa
push
push
push
rcrl
rolb
loope
cmpsb
xlat
jmp
or
ds
push
sub
xchg
mov
fidivrs
loopne
jmp
pop
jnp
daa
aas
hlt
mov
test
mov
dec
mov
in
fisttpll
lret
push
roll
mov
and
push
shlb
leave
mov
scas
jno
adc
ret
dec
sbb
shl
test
and
inc
xchg
mov
mov
orl
cwtl
daa
out
mov
rcl
clc
cld
cwtl
mov
xlat
push
insl
xchg
outsb
pop
cmp
test
pop
mov
xchg
sub
push
icebp
mov
scas
cmp
daa
xchg
adc
ret
xchg
std
mov
and
jl
in
pop
mov
lahf
fimull
add
std
mov
lret
dec
jae
rcll
mov
pop
das
int3
nop
arpl
mov
mov
mov
test
aaa
rolb
jo
sbb
sub
mov
jb
push
scas
mov
repnz
xor
inc
or
mov
lret
xchg
ficoml
sub
pop
mov
cwtl
xor
inc
sub
enter
enter
sub
out
and
mov
sar
stc
sbb
pop
rcr
adc
js
jmp
rcr
inc
les
mov
sbb
lret
xchg
iretw
into
add
enter
call
jb
rcrl
add
out
fimull
add
scas
dec
leave
dec
adc
call
xor
aam
lahf
test
push
jb
add
aam
cmp
aam
rcl
dec
dec
add
or
insl
fwait
lods
push
fst
test
cmp
out
ret
insb
adc
out
sbb
mov
sub
jbe
ljmp
outsb
inc
inc
in
sub
fwait
cmp
inc
inc
loope
and
mov
pop
cmp
shll
push
cmpsl
jns
xor
pop
xchg
cli
lahf
sbb
lock
insl
mov
add
and
xor
xor
movsb
arpl
aas
outsl
inc
test
sub
push
xor
and
sbb
jne
jecxz
adcl
xor
sarl
add
pop
cs
mov
push
jle
in
push
dec
arpl
push
cmp
push
dec
mov
sub
cmp
mov
sub
dec
mov
or
mov
sbb
sbb
mov
mov
fimull
stos
pop
push
or
jns
jg
test
cmp
rclb
mov
sbb
mov
cmpsb
lods
jcxz
ja
in
leave
and
and
xor
fisubrl
cmpsl
pop
sub
dec
add
les
sub
test
mov
dec
fsubs
mov
sbb
jb
or
add
iret
or
mov
xor
es
inc
push
ss
sub
jge
dec
push
clc
xchg
mov
cmp
mov
rolb
jmp
sub
mov
arpl
mov
jno
mov
out
in
dec
cwtl
add
lea
inc
pop
ja
xchg
jb
add
jecxz
mov
jae
in
lods
jb
mov
stos
jno
cmp
test
jb
push
add
push
and
scas
cmpsl
lret
outsl
les
sub
lods
iret
cltd
pop
adc
popl
and
stos
or
inc
push
add
cs
pop
adc
xchg
shlb
dec
jmp
xchg
test
loopne
cmp
shl
lahf
jno
fisubs
js
cwtl
lods
push
inc
xchg
or
iret
bound
test
sub
call
dec
and
or
scas
inc
xchg
cmp
daa
lods
roll
push
jl
pushl
popa
fisubl
inc
pop
ret
cli
insb
imul
mov
xchg
jns
test
mov
into
les
call
pop
cmp
test
cmpsl
dec
add
mov
sub
or
test
push
sti
scas
icebp
add
lods
pop
popf
push
jns
cltd
push
and
popa
loopne
mov
pop
mov
pop
mov
xchg
and
sbb
jl
ja
mov
sbb
dec
mov
bound
stos
in
nop
mov
outsb
pop
hlt
push
test
cmpsb
pusha
cld
jae
jb,pt
lretw
jp
js
cmp
call
in
lods
or
fiaddl
push
lcall
arpl
inc
cld
adc
repnz
dec
arpl
pop
pop
mov
stc
shl
adc
dec
aad
stc
rcrb
lea
and
stc
in
into
cld
loope
jb
sub
sub
mov
jne
jge
mov
push
cmc
or
cli
dec
add
xchg
imul
in
mov
push
sbb
and
xchg
xchg
push
int3
add
dec
and
aad
lcall
lret
jnp
jae
imul
in
jae
inc
xchg
nop
xchg
call
out
out
stc
cmpsl
jle
pop
leave
les
scas
sbb
pop
imul
lods
lds
fsts
fnstcw
cmp
icebp
jnp
xchg
and
add
fistpl
xchg
push
inc
push
flds
xor
rcr
jno
or
je
and
mov
inc
jge
or
or
mov
xchg
or
mov
das
or
or
dec
cmp
in
mov
or
jecxz
dec
icebp
addr16
cmp
jg
ds
mov
xlat
push
push
sti
pop
pop
pop
popl
je,pn
sub
inc
or
xchg
ja
inc
xor
loopne
mov
add
push
mov
inc
lds
ret
xlat
inc
inc
jb
dec
test
jnp
cmp
sbb
cltd
xchg
sbb
pop
adc
adc
dec
testb
or
mov
lds
pop
jbe
dec
stos
je
push
nop
pop
cld
aam
or
add
pop
mov
stos
jecxz
fidivl
ret
push
into
rol
out
sub
mov
stos
mov
adcl
loope
lods
xchg
cmp
jbe
cs
hlt
mov
sub
cmp
inc
push
and
xchg
sub
iret
xchg
xor
adc
sbb
inc
fadds
lret
js
fstps
int3
fidivrs
jg
jecxz
push
mov
pusha
xlat
mov
je
sbb
or
mov
cld
sti
adc
ja
shrb
xchg
lahf
cld
jp
test
xor
enter
xchg
dec
pop
lods
outsb
out
shrl
jb
jmp
mov
pop
adc
sbb
out
xchg
mov
pop
adc
mov
pop
and
lds
fwait
imull
imul
cmpsb
cmpsl
mov
movsb
fnstsw
jne
gs
push
dec
push
mov
dec
pusha
inc
dec
icebp
icebp
outsl
adc
aas
mov
push
subl
push
enter
mov
push
mov
test
jecxz
adc
xor
sbb
push
cltd
ss
or
cmp
or
inc
imul
jecxz
mov
cmp
repnz
sub
ljmp
add
push
jbe
add
or
or
inc
xchg
xlat
jmp
xchg
xchg
xlat
pop
imul
push
dec
sahf
xor
dec
in
aaa
sbb
imul
or
mov
sub
inc
jno
repz
movsl
push
lret
mov
jbe
pop
inc
pop
mov
outsl
adc
pop
mov
out
les
in
jge
imul
sbb
fidivrl
dec
es
push
lds
cmc
fidivrl
or
cmp
lea
pop
lret
imul
fst
fsubrl
cmpsb
adc
xchg
mov
jb
sbb
cmovle
loop
es
outsl
mov
and
xchg
es
addr16
sahf
adc
lea
pop
test
push
push
scas
scas
mov
repz
and
cmp
add
jp
and
cltd
daa
mull
push
xchg
test
cwtl
cwtl
stos
and
daa
out
andb
sub
out
in
test
lods
and
shll
sbb
sub
ja
xor
in
test
xchg
dec
stos
push
imul
icebp
ret
movb
imul
and
mov
popf
cld
movb
dec
outsl
mov
repnz
out
mov
and
push
push
push
and
jnp
sbb
scas
cmp
cmpsl
lds
int
inc
shrl
pop
lret
sub
popf
orl
push
sub
jnp
or
xor
repnz
xor
jmp
or
test
das
clc
subb
lahf
push
xchg
pop
jno
movsb
rcrb
mov
cmp
in
test
lds
adc
enter
inc
add
cwtl
mov
jnp
adc
pop
test
jl
in
pop
jp
cmpsl
jae
xor
mov
push
in
imul
cmp
sbb
cmpsl
push
push
pop
xor
push
test
imul
xchg
adc
mov
pop
adc
test
xchg
jno
sbb
adc
mov
and
xchg
sbb
ljmp
xlat
push
fstpl
cmp
adc
add
dec
jge
inc
adc
cmp
les
jle
test
das
mov
lods
lods
lock
in
pusha
inc
pop
aaa
cmp
inc
outsl
lods
or
loopne
ja
cmpsl
xchg
cmpl
mov
add
xorb
int3
pop
mov
bound
arpl
sbb
or
bound
mov
jo
push
jmp
push
cmp
jl
int3
jmp
jmp
aas
repz
cmp
sub
xchg
push
xorb
bound
rclb
inc
add
out
addr16
mov
dec
xor
scas
jg
sahf
in
out
mov
mov
shrb
or
mov
mov
les
roll
mov
in
adcl
mov
jg
and
in
out
insb
xchg
jne
adc
out
ficomps
or
aas
sub
cmp
xor
push
mov
das
pop
mov
cmc
pusha
xor
dec
add
fwait
stos
push
dec
adc
loop
jo
mov
inc
jbe
mov
push
cmc
popa
cltd
xor
push
mov
push
xchg
push
imul
xor
stos
daa
je
shrb
pop
in
mov
iret
insl
dec
push
aam
mov
push
pop
in
daa
push
cmp
hlt
stos
pop
pop
pop
push
fdivrl
xchg
adc
jmp
xchg
sub
inc
ds
loopne
inc
mov
xchg
cmpsb
xor
orb
mov
fildll
add
std
jmp
mov
in
xor
fs
out
cmpb
aaa
mov
aad
jp
lock
jge
lret
pop
mov
and
fwait
aas
aam
inc
mov
adc
or
xchg
out
popa
inc
clc
push
jne
add
pop
mov
inc
das
mov
scas
test
test
inc
pop
push
mov
and
cwtl
add
je
sti
mov
jne
jge
cmpsl
jge
inc
int
xchg
addr16
arpl
rol
dec
pop
popf
cmpb
aas
cmp
sbb
mov
inc
data16
pop
mov
lea
sarl
mov
movsb
loopne
pop
enter
mov
add
pop
cmc
test
clc
scas
out
sub
stos
out
in
push
rorl
imul
sbb
pop
sbb
mov
lock
ror
cmc
push
stc
xor
repnz
lods
xchg
or
push
test
stos
dec
notl
dec
add
imul
push
adc
subl
pop
mov
movsb
lods
inc
dec
daa
dec
and
int
mov
loopne
insb
stos
mov
jp
cwtl
or
loopne
mov
sub
repz
loopne
fstpt
pop
js
push
push
cs
mov
sahf
xchg
xchg
scas
jo
fdivrp
jns
insl
fsub
loope
push
push
in
mov
ret
stc
jl
jo
dec
std
adc
pop
push
out
les
sbb
bound
push
cmp
fildll
jle
loop
sbb
loop
aam
pop
push
mov
push
pop
call
push
or
xchg
add
pop
mov
mov
xchg
ds
outsb
int3
add
stos
test
xchg
cmp
sbb
in
push
push
out
orb
pusha
jl
jnp
xor
outsl
inc
jecxz
lcall
fadds
cmpsl
gs
mov
mov
mov
insl
imul
movsl
xchg
jns
cmp
in
and
loop
das
sub
scas
in
inc
add
inc
pusha
inc
sub
cmpl
jb
dec
inc
aad
in
ret
jne
or
mov
loope
inc
data16
cmpb
xchg
push
lret
adcl
cmp
jae
mov
lcall
es
mov
daa
call
push
lret
jle
mov
and
repz
negb
adc
sub
in
dec
cs
xor
mov
mov
cld
adc
test
sub
adc
aas
in
cmp
popa
fwait
jmp
fninit
mov
cmp
mov
leave
clc
xlat
dec
jp
fwait
push
push
sbb
mov
jnp
dec
jecxz
aad
jg
movb
cmpsl
push
imul
push
or
out
rcrl
lea
mov
xor
rclb
sub
or
scas
inc
les
xchg
sbb
pop
jb
ret
push
sti
gs
cwtl
or
data16
inc
loop
lahf
pushf
xor
mov
aas
xchg
pop
jmp
sub
cwtl
or
xchg
adc
std
jae
jae
stos
and
push
repz
stos
mov
lds
xchg
pop
lods
push
enter
xchg
push
sbb
xchg
mov
fcomps
cmpl
in
lods
jno
stos
xorl
mov
adc
cmc
aad
mov
add
dec
push
mov
add
mov
sub
pop
jne
ja
arpl
int3
mov
xor
jmp
jp
daa
cmc
mov
adc
xor
xlat
mov
movsb
out
ret
rolb
cli
and
jno
call
fimuls
cmpsl
mov
mov
xchg
sar
dec
sub
mov
cmpsb
or
inc
adc
lds
je
pop
inc
sub
pop
jne
inc
push
add
call
push
mov
dec
out
push
sub
or
cmp
jmp
adc
xchg
mov
mov
iret
jmp
test
ljmp
xor
mov
jnp
lret
push
out
shrb
cmp
lea
pop
adc
pushf
out
inc
pushl
sbb
cltd
pop
sbb
push
jmp
cs
add
jge
jg
ret
cmpsb
mov
sub
add
ret
lds
test
xor
pop
int3
rcl
lea
pushf
int
lcall
imul
scas
movsl
sub
fnstenv
xchg
stos
fsubl
ss
pop
mov
or
fldcw
call
push
sub
jae
scas
push
xchg
mov
lods
cli
int
mov
test
mov
and
pop
movsl
ds
mov
push
into
movsl
mov
inc
and
ret
mov
movsb
add
mov
dec
push
adc
jle
xchg
movsl
xor
popa
leave
jmp
shlb
lret
pop
jecxz
mov
rcrb
sbb
xor
cmp
hlt
sbb
xchg
and
mov
iret
xchg
clc
or
sbb
ss
adc
sti
loop
and
stos
xlat
sbb
call
or
mov
movsb
or
sahf
test
pop
mov
lcall
addl
sbb
lret
out
push
movsb
pop
push
xchg
mov
and
mov
cmc
outsl
pop
xchg
enter
sahf
push
mov
addr16
mov
inc
push
jbe
xor
cmp
sub
movsb
mov
scas
pop
leave
pop
jns
sub
mov
xor
jno
mov
adc
cmp
movsl
imul
movsl
push
mov
jno
inc
mov
fwait
std
loop
push
repz
push
movsl
push
push
ret
lods
cmp
lahf
cmp
or
popf
lds
ret
and
int3
mov
jb
dec
sub
in
pop
xor
inc
and
int
mov
xchg
inc
lds
addb
and
or
hlt
iret
loope
repz
jl
cwtl
sbb
push
insb
xchg
sbbb
push
mov
cmp
repz
or
loop
fs
inc
inc
mov
insl
sbb
ret
xchg
cmp
das
inc
loopne
in
enter
daa
ret
movsl
cwtl
divl
ret
fldcw
xchg
pop
sub
fistl
mov
push
dec
icebp
divl
fcmovnb
inc
pop
mov
mov
inc
dec
nop
mov
or
jns
imul
cltd
popf
pop
fsubrl
les
push
test
mov
adc
clc
xlat
jmp
mov
stos
lods
or
jnp
cmp
in
hlt
hlt
std
cli
cmpsl
push
push
or
mov
jbe
xor
imul
jno
lret
mov
popa
pop
adc
mov
xor
jae
jne
adc
xchg
mov
jo
jp
dec
add
push
push
test
pop
xor
inc
jecxz
jmp
pop
mov
cltd
mov
stos
in
ret
lahf
push
pop
push
iret
loope
outsl
xchg
xor
and
shll
xor
test
sbbb
inc
rcr
push
push
js
add
xchg
mov
mov
hlt
sub
mov
repz
loop
cmp
pop
dec
insl
in
out
or
clc
movsb
push
sub
add
andb
push
repnz
push
ret
xlat
int
and
xor
jo
mov
mov
fimuls
out
mov
push
mov
jno
sahf
ljmp
loopne
xchg
mov
xchg
lea
sbb
sbb
aam
ret
jg
decb
jnp
in
repz
add
fstps
push
int3
stos
cmc
add
es
fstpl
ds
mov
mov
xchg
push
push
sahf
jb
jp
add
repz
push
adc
and
ret
lret
xor
xchg
mov
ds
movsl
mov
lahf
ljmp
or
mov
adc
lock
dec
pop
adc
push
call
adc
mov
out
jmp
ret
cmc
fs
adc
jge
jno
and
jg
stos
mov
aam
out
cwtl
pop
aam
aam
mov
add
or
mov
loop
jge
and
xor
das
aad
repnz
int
or
cmp
inc
mov
fstps
dec
xchg
xchg
xchg
mov
fsubs
sub
lea
push
call
shrl
fistpl
mov
fcoml
lahf
or
inc
sbb
iret
out
inc
jmp
pushf
mov
add
aad
adc
sbb
shll
lcall
imul
jmp
cmp
cli
xchg
adc
ja
mov
movsb
xchg
xchg
aaa
gs
ja
inc
pop
mov
dec
and
popf
xor
mov
jge
add
or
fdiv
clc
add
and
mov
push
movsb
cs
sub
mov
xchg
add
push
mov
xchg
xor
cmpb
inc
pop
push
pop
test
fsubrp
xchg
adc
popa
frstor
roll
add
into
or
out
sbb
arpl
lods
out
jl
addr16
fisttpl
adc
scas
bnd
cmpsl
xchg
and
add
mov
cmp
pop
lock
stos
push
push
pop
mov
jmp
movsb
pop
pop
lds
pushl
data16
ljmp
decl
mov
out
shrb
cmp
mov
pop
or
mov
dec
into
cs
cwtl
fldcw
add
and
shrb
cmp
shrb
pop
mov
movsb
sub
sub
fldl
xchg
sub
jae
movsb
jb
fisttps
or
inc
mov
xchg
and
out
call
in
xchg
arpl
outsl
sub
les
lea
adc
and
mov
shll
ss
push
pop
mov
addr16
mov
cmp
loopne
dec
movsl
fsubr
mov
test
mov
lea
jae
inc
xchg
cltd
xchg
mov
push
mov
rorl
mov
insb
sub
mov
inc
pop
mov
movsb
leave
mov
jnp
xorb
mov
in
scas
or
push
mov
test
inc
dec
fs
scas
pop
and
lods
jecxz
scas
jbe
pop
mov
addr16
xchg
fwait
lret
jmp
inc
push
jb
lahf
loope
inc
and
repnz
repz
aas
les
xor
mov
inc
jnp
jno
add
popf
xor
jbe
lret
adc
push
mov
testb
jb
inc
inc
test
popa
lcall
inc
cli
sbb
ret
jp
jns
sub
shll
cmc
sbb
enter
cmpsb
aam
xchg
in
sti
push
jbe
test
fdivrl
iret
adc
aam
add
rolb
xor
dec
sub
mov
mov
subb
mov
mov
je
test
int3
add
testb
and
lds
aam
cmc
inc
lcall
mov
push
mov
imul
jge
jge
aad
movsb
mov
and
or
cmpb
pop
sbb
mov
fs
cmp
rep
in
and
push
cmp
pop
or
fisubl
jg
imul
push
pop
daa
mov
scas
gs
adc
dec
push
popf
stos
add
inc
mov
pop
or
loope
mov
mov
aad
mov
sub
adc
popf
sub
scas
test
jae
cmp
xchg
cmp
xchg
add
add
outsb
ljmp
adc
xor
in
out
mov
stos
mov
cs
popf
add
cwtl
jl
pop
insb
mov
loope
fwait
pop
cmpsb
jo
pop
loope
xor
outsb
sub
dec
insb
xchg
fistpll
lds
inc
out
jno
and
sub
mov
dec
mov
movsl
aam
in
add
jb
stos
or
jge
pop
shlb
outsl
lock
scas
mov
jae
out
push
mov
add
xor
mov
adc
adc
sub
adc
jecxz
inc
or
les
in
push
decb
jno
add
cwtl
add
insl
sub
cmp
ds
dec
jb
lret
cmpsb
cwtl
decl
sub
fisttps
ja
out
or
dec
push
jl
ret
mov
loop
aas
pop
push
insb
ss
pop
jge
jmp
push
cltd
repnz
daa
inc
adc
and
xchg
lods
insl
xchg
sub
or
jbe
and
es
xor
pop
imul
and
inc
pop
scas
push
or
xchg
jge
or
roll
pop
cmp
call
negb
data16
mov
cwtl
dec
adc
mov
lret
scas
sahf
inc
stc
push
clc
jbe
sub
xchg
mov
mov
clc
cmp
popa
push
mov
mov
insb
frstor
ficompl
shlb
pop
into
andl
das
mov
xorb
repnz
dec
jo
jp
adc
add
mov
lea
cmp
lahf
rorb
sbb
cmpsb
sub
inc
cmpsb
repnz
mov
jp
pop
stc
in
pop
add
push
xor
sbb
out
dec
sub
cmp
jmp
mov
int3
sub
xchg
mov
adc
push
pop
fs
repnz
mov
jecxz
cwtl
popf
bound
arpl
les
testb
mov
jg
jl
inc
cmpl
daa
mov
mov
xor
mov
test
xor
loopne
fs
pop
addr16
cs
sbb
push
cwtl
and
cmp
outsl
test
pop
jp
lods
movsb
mov
stos
fidivl
daa
mov
pop
mov
sbbl
sbb
mov
jecxz,pt
adc
dec
cltd
outsb
xor
or
scas
push
cmp
fwait
mov
jle
inc
roll
pop
mov
cmp
pop
out
mulb
mov
and
xchg
mov
inc
jbe
mov
push
add
jno
xor
jnp
fisttpll
jp
add
cmpsb
mov
xchg
add
fsubs
and
sub
cmc
icebp
lock
repz
inc
sub
mov
mov
jecxz
enter
pushf
push
arpl
out
dec
lods
add
mov
xchg
in
lock
cs
cmpsl
inc
lods
push
rcll
sub
ficompl
mov
repnz
bound
lods
add
mov
cmp
mov
mulb
mov
cwtl
out
mov
or
data16
sahf
pop
mov
or
jp
std
push
jmp
xchg
add
sbb
dec
jp
loopne
dec
mov
cmpsb
push
lret
cltd
push
mov
sub
stos
sbb
and
test
rcrb
xchg
orb
sub
dec
sbb
int
cltd
and
xchg
fs
push
mov
pop
mov
jne
fsubrp
sahf
mov
dec
xchg
add
adc
push
fs
les
add
lret
cmc
push
rol
sbb
mov
xchg
cmpsb
cmpsl
dec
cmpsb
lea
push
test
add
imul
sbb
xchg
mov
cmpsb
in
into
sub
jns
add
cmpsb
outsl
add
je
pop
leave
jnp
lret
fcompl
lcall
dec
dec
bound
sub
test
push
popw
mov
sub
aam
shrl
xor
push
test
jae
xchg
jae
fucomip
rolb
aaa
mov
int
dec
push
aam
push
stos
or
faddl
xor
sub
cmp
push
push
inc
cmp
sbb
ja
testb
cmp
aam
xchg
xor
call
sub
js
call
stc
movsb
mov
sub
orl
rorl
repz
push
pop
les
ss
push
mov
daa
inc
pop
lret
jg
fcmove
xor
adcb
xor
insb
mov
adc
adc
adc
xchg
mov
sub
xor
sbb
cmp
sub
hlt
xor
add
pop
out
andl
mov
jecxz
out
sahf
inc
xchg
ljmp
xor
mov
lahf
mulb
pusha
jg
pop
pop
push
jmp
dec
mov
xor
and
mov
in
mov
cs
and
leave
mov
mov
push
pop
popf
mov
mov
outsb
mov
stc
inc
add
sti
aas
push
mov
lods
mov
pop
shr
lods
aam
fmul
mov
cmp
pop
mov
outsb
ja
sahf
outsl
xor
in
sbb
push
rolb
inc
jb
xchg
push
sbb
push
xor
jge
xchg
or
adc
js
sbb
dec
sub
shlb
adc
or
sbb
fwait
dec
sub
push
sbb
jo
cmpsl
jmp
sbb
loopne
sub
dec
or
add
pminsw
cmpsl
jp
out
inc
push
mov
push
xchg
ds
scas
insb
inc
loope
xchg
lret
inc
cli
jg
ds
leave
repz
fcompl
out
fldt
mov
fistpl
sbb
dec
inc
pusha
fsubl
sub
mov
add
adc
ror
jo
cmp
add
aaa
mov
inc
es
xchg
jmp
cmp
mov
mov
fisttpll
cmp
xchg
test
mov
cmp
lahf
ss
addr16
sarl
lcall
mov
sarb
roll
addl
push
cld
cmpsl
jge
fcmovnb
dec
jle
addr16
jb
pop
sub
in
push
int3
fstl
push
in
aam
adc
jnp
addr16
sbb
adc
vmulss
jmp
push
rcrb
sub
push
in
mov
int3
test
xor
or
cmp
cmc
jl
push
shlb
cmp
imul
cli
dec
int
mov
adc
sbb
shll
jmp
xor
or
adc
jp
dec
xor
jb
pop
fwait
sarb
ret
pop
cmpsb
dec
repz
je
push
pop
adc
adcb
fcom
stos
push
mov
mov
push
xor
call
jo
sbb
inc
pop
out
js
mov
loope
aad
mov
lcall
addl
dec
enter
adc
mov
jp
fbld
xchg
divl
xor
jne
push
loopne
xor
imul
jno
jl
and
add
fisubs
push
and
add
popf
cmp
jg
inc
sub
insb
ret
int3
repnz
jne
aad
std
cmc
push
iret
mov
add
int
adc
jp
pop
or
fstpl
push
stos
movsl
pop
insb
add
inc
xor
and
je
es
push
and
cmp
mov
inc
jo
rorb
dec
adc
dec
add
xchg
imul
or
mov
push
pop
mov
insl
ja
push
rolb
dec
gs
sti
jb
test
loop
into
inc
aad
int3
jmp
in
in
xchg
clc
iret
sub
aam
ds
cmp
sar
sbb
es
pop
add
clc
or
ds
or
add
xlat
jle
pop
mov
sub
adc
jne
into
ret
pop
pusha
jmp
xchg
shlb
stos
scas
pop
test
mov
dec
imul
insl
jnp
imul
repnz
fldt
arpl
sub
insl
jbe
jp
push
mov
adc
cmp
xlat
es
das
push
mov
pop
gs
pop
and
mov
sub
pop
repz
loope
add
or
outsl
xchg
jge
dec
ljmp
mov
out
adcb
push
dec
pop
pop
loopne
pop
mov
stos
hlt
adc
lret
jmp
cmp
push
xchg
fistl
jb
jne
sub
fldenv
lods
xchg
sbbb
rcrb
mov
mov
bound
ret
shr
dec
jg
inc
mov
arpl
jl
or
stos
or
arpl
xor
lret
insl
and
add
sub
fwait
out
adc
jle
outsb
inc
fs
std
cmp
adc
xchg
mov
pop
pop
imul
pop
out
pushf
xor
jbe
add
mov
jo
fsubrs
fld
jbe
repz
mov
fsubrl
adc
pop
testl
inc
les
or
fsubs
repnz
and
popa
ja
or
mov
aaa
or
fldenv
fimuls
jle
sahf
fisttpl
stos
cltd
xor
inc
in
std
pop
test
repz
lcall
mov
fldt
push
aad
inc
jp
nop
mov
sub
add
push
inc
dec
mov
ja
or
add
jbe
push
add
xor
or
pop
test
pop
sub
shll
rorl
imul
das
testl
notb
pop
or
out
sbb
add
mov
testl
sbb
xor
adc
dec
mov
leave
lods
into
aam
sub
mov
inc
xchg
es
fs
fnsetpm(287
fiaddl
mov
sbb
daa
in
xchg
push
test
in
jne
test
divb
cmpsb
sbb
pop
in
fs
rolb
stos
loop
inc
inc
dec
in
mov
imul
je
sub
loopne
jg
leave
icebp
xor
andb
stc
jge
mov
test
out
cwtl
sti
ss
loope
enter
xor
in
fistpll
mov
mov
not
mov
push
int
push
pop
adc
xlat
xor
add
jp
jle
lcall
xchg
cld
out
sub
sbb
cmpsl
imull
les
mulb
aam
outsl
sbb
and
push
sub
scas
pop
and
sbb
push
xor
ss
pusha
sbb
mov
inc
and
loopne
jns
pop
loop
add
repz
adc
mov
ja
decl
mov
cmpsb
xor
lods
test
or
cmp
sbb
jns
gs
cmpsb
js,pn
jb
sub
push
arpl
mov
imul
fmuls
shll
pop
mov
fldcw
inc
outsb
out
pop
pop
shrl
in
xor
pop
test
ss
jb
add
cwtl
fsubrs
inc
ja
xor
xchg
les
repnz
and
cmp
pop
out
mov
add
mov
add
inc
push
sbb
ror
mov
incb
pusha
mov
lcall
stc
mov
or
jbe
aas
scas
fdivr
in
cmp
sub
shll
aam
dec
sbb
mov
pusha
add
mov
in
xchg
out
in
hlt
add
sbb
dec
int
cmc
dec
adc
in
dec
arpl
mov
add
pusha
push
inc
sub
adc
gs
cmc
cmove
stos
inc
xchg
push
outsb
or
adc
cli
sti
mov
jecxz
jae
clc
jmp
dec
out
adc
clc
pushf
mov
mov
or
cmp
test
sbbl
jmp
mov
adc
aas
add
xchg
add
sbb
or
push
les
inc
ss
xchg
xchg
popa
dec
dec
cmp
sub
jns
mov
sahf
inc
fwait
mov
icebp
pop
bswap
mov
dec
cmc
popf
dec
test
xlat
call
lds
or
cmp
inc
leave
sarl
fidivl
rclb
xor
bnd
test
xchg
mov
pop
and
ss
inc
and
fisubs
repnz
mov
dec
iret
sub
xor
insb
das
sbb
dec
mov
push
or
pop
shrb
xchg
cmp
or
insb
and
aad
hlt
jbe
mov
pcmpeqb
in
iret
jg
mov
cmpsb
call
add
push
in
fwait
fs
mov
or
add
data16
mov
push
test
scas
leave
es
inc
jb
into
cmpsb
into
push
adc
test
or
aas
jl
pop
push
mov
pop
and
jns
push
xlat
and
je
adc
scas
sbb
push
mov
stos
cmp
pop
enter
sbb
push
test
sti
add
std
mov
xor
jbe
dec
in
gs
std
dec
or
mov
add
mov
mulb
xchg
push
imul
xor
sbb
cmp
fidivs
in
std
inc
inc
cmp
inc
inc
xor
ds
dec
push
fists
pop
ja
jns
mov
pushf
push
inc
adc
ja
pusha
jmp
inc
pop
xchg
fwait
and
push
mov
stos
jns
xor
mov
ds
cmp
rcr
mov
lret
psubusw
xor
fs
aad
insb
dec
sub
je
mov
jle
xor
mov
xchg
insb
scas
dec
pop
stos
adc
daa
fwait
xchg
jnp
stos
dec
fildl
pop
cmp
repz
jo
fucomip
cltd
jge
jno
in
mov
jnp
sbb
pop
int
arpl
sbb
sbb
sbb
adc
lds
in
aam
jne
sar
add
repz
out
cmp
add
popf
jae
jecxz
and
into
jo
adc
push
jmp
ja
mov
mov
mov
test
test
push
cli
movsl
cmp
mov
pop
mov
sarb
cmp
jo
xorb
jmp
jg
push
shrl
lcall
dec
cmp
mov
mov
mov
lods
add
sub
dec
xlat
out
aam
pushf
ljmp
faddp
mov
mov
adc
stc
cmpsl
jno
sub
gs
lret
mov
push
fs
enter
lret
sub
mov
inc
inc
movsl
push
or
jge
ret
xchg
fsub
sbb
mov
fldcw
fstp
jne
pop
int
jnp
push
xlat
add
sar
sub
rol
nop
xchg
or
jle
jle
lahf
sub
add
xchg
in
mov
sbb
and
sbb
dec
xlat
push
xchg
repz
or
sbb
ret
xlat
ret
pop
mov
lock
incl
shll
inc
das
adc
imul
rcll
test
mov
adc
sbb
jg
pop
pop
sub
lods
cmp
cmp
dec
pop
rorb
xor
sbb
jb
adc
pop
sbb
cmp
jmp
mov
mov
sbb
add
ret
mov
popa
push
adc
add
rorb
jmp
cmp
cmpsl
push
negl
ljmp
iret
shrb
jns
add
and
repnz
cmp
ss
ljmp
ljmp
imul
out
or
inc
add
subl
xor
add
or
lea
sub
sti
and
fnsave
inc
jp
mov
adc
div
popf
pop
jbe
repz
jns
cmp
mov
loop
cltd
outsl
scas
and
sbb
sti
xor
jb
jecxz
sub
ret
mov
xor
jne
push
shrb
inc
mov
cltd
shlb
mov
daa
xor
pop
outsl
sbb
sub
das
stc
and
sub
xchg
lods
adc
adc
sub
push
pop
out
mov
pop
outsb
xchg
push
dec
inc
mov
insb
xchg
push
das
pop
es
in
mov
mov
add
cli
sbb
popf
push
cltd
xchg
jl
out
push
pop
xor
icebp
push
add
mov
sarb
mov
jge
push
add
fwait
push
or
jp
out
sbb
fimuls
mov
push
xchg
sbb
jb
mov
pop
outsb
mull
mov
pusha
mov
in
xchg
popa
shrb
rcrb
mov
cmp
movsb
pop
lret
adc
mov
sub
clc
adc
in
mov
lahf
xchg
mov
push
repnz
shrb
cld
mov
mov
mov
sbb
loopne
mov
pop
aam
add
cs
xor
fwait
jb
fdecstp
mov
test
xchg
push
lcall
movsl
push
pop
mov
or
mull
mov
call
push
cmp
lcall
call
jno
mov
mov
mov
in
jecxz
or
xor
mov
mov
mov
push
popa
cmpsl
in
cmpsb
shrb
ss
rclb
mov
inc
cli
popa
dec
mov
push
jg
mov
jbe
jo
out
inc
add
andb
cli
jo
jp
mov
dec
psubw
pusha
test
jecxz
pop
xchg
sbb
xchg
mov
push
cli
bound
imul
stc
add
movsb
mov
lahf
lock
je
and
in
jae
lods
sub
in
add
fcompl
test
fcoms
imul
fnstenv
xor
imul
add
ficompl
pop
shrl
sub
mov
daa
mov
ss
push
pop
xor
stc
dec
dec
mov
push
or
mov
and
mov
mov
push
mov
fwait
mov
xor
scas
sahf
mov
stos
sbb
cmpsl
push
mov
push
or
xlat
mov
leave
aam
push
mov
mov
lock
ret
mov
sub
push
mov
adc
in
sbb
stos
xor
aam
in
movb
jns
aam
dec
test
call
clc
add
adc
push
xchg
xor
ljmp
lcall
mov
push
lea
out
loope
icebp
add
inc
adc
repz
pop
outsb
ret
push
push
inc
mov
in
je
shll
dec
cmp
ficoms
xor
or
stos
adc
jge
sub
cmp
pop
jnp
je
in
push
or
and
popl
jns
or
lock
push
cmpl
scas
sbb
lret
fcmovbe
jmp
push
loop
ljmpw
dec
xchg
adc
adcl
mov
mov
mov
mov
lods
sbb
loopne
cmp
xchg
pop
ljmp
scas
adc
jo
popa
scas
xorl
pop
jecxz
xlat
clc
movsb
mov
in
jns
testl
add
repz
or
adc
shl
dec
testb
xorb
mov
adc
and
push
push
int3
mov
insb
test
mov
daa
sbb
jp
jbe
mov
cmp
inc
mov
clc
sbb
mov
push
inc
pop
shl
xchg
into
imul
cmp
xchg
jmp
es
xor
pusha
sub
mov
aaa
mov
enter
cmpl
lock
cwtl
and
cltd
add
mov
aad
out
ss
sbb
jbe
in
outsb
popl
bound
mov
shrb
imul
mov
int
xor
cli
dec
xor
ds
sub
or
push
ror
mov
ja
dec
test
ss
icebp
xchg
push
fs
cmp
icebp
xor
cmpsl
int
dec
push
into
icebp
inc
jns
dec
push
cmc
and
out
cmpsl
push
inc
outsb
ret
jg
jnp
dec
and
stos
pop
inc
jb
mov
cmp
outsb
and
or
mov
and
int3
mov
push
dec
adc
and
mov
mov
loop
xor
inc
ds
orb
or
adc
xor
pop
outsl
enter
fstps
xchg
lahf
mov
sbb
jl
sub
cli
lcall
daa
sub
push
push
sub
jge
mov
inc
fdivrs
insl
push
pop
mov
cli
pusha
and
or
test
cs
sti
sub
in
push
andb
aad
fs
sub
in
pop
push
pop
lret
imul
pop
pushf
add
imul
sbb
es
or
lret
push
orb
fs
std
add
cmp
lods
push
hlt
dec
jg
movsl
sbb
test
iret
in
dec
sbb
push
insl
lcall
jae
mov
and
bound
push
adc
sahf
in
call
into
fcmovbe
xor
rolb
fs
xchg
test
cmp
mov
pop
lods
sub
inc
rcll
xor
add
decb
lods
imul
jno
jecxz
lock
and
mov
sub
gs
lahf
push
jge
iret
adc
movsl
jae
xorb
js
aam
and
xor
xchg
jnp
das
or
sarb
out
jnp
dec
pop
sub
movsb
loopne
sbb
dec
clc
hlt
mov
clc
lock
pop
std
call
addr16
fsts
sub
std
inc
addr16
and
inc
ror
sbb
sti
fdivl
cmc
pop
vpsubd
push
out
aam
ffreep
aad
mov
cmpsb
fistpl
dec
test
push
mov
leave
pop
stos
and
xchg
dec
inc
rol
les
jb
rcl
roll
mov
pushf
xor
inc
mov
lret
and
nop
push
shld
lock
mov
imul
lods
xor
dec
cli
push
js
lods
adc
mov
mov
jo
sbb
inc
cmp
mov
nop
cmp
lea
in
insl
mov
imul
aam
sbb
pushl
pusha
push
lahf
mov
push
jge
inc
sbb
bound
stos
jmp
xor
jb
add
ljmp
xor
adc
subl
cmpsb
ss
rol
out
jo
arpl
mov
pop
sub
pop
pop
aam
stc
ja
add
adc
rcrl
inc
sti
push
xchg
aaa
das
cmpsl
add
mov
mov
push
mov
mov
data16
mov
xchg
pop
mov
pop
mov
fcomp
lea
push
rclb
push
xchg
ljmp
out
repnz
rcll
sti
mov
sbb
inc
daa
dec
sahf
ret
lods
and
loope
int3
mov
sti
adcb
jbe
ret
push
add
jnp
int3
dec
cmp
mov
mov
fisttpll
mov
rorl
pusha
dec
test
mov
mov
insl
push
jle
mov
push
jne
xchg
mov
and
dec
inc
mov
insl
call
sbb
pop
sbb
mov
xor
xchg
cmp
std
mov
mov
push
sar
xlat
icebp
xor
insl
push
mov
iret
pop
cli
cmpsl
add
sub
gs
mov
cmp
mov
xor
outsl
int3
out
cwtl
fisubl
orb
xchg
hlt
xor
mov
das
or
cmp
add
xor
dec
jbe
sbbl
dec
cltd
adc
out
in
loope
adc
in
test
or
inc
mov
cmc
ljmp
mov
and
mov
jp
filds
imul
or
dec
cwtl
xchg
outsb
ja,pt
jbe
sub
out
out
pop
and
cmp
mov
cmc
pop
xlat
push
jnp
push
mov
cmp
mov
movsb
dec
test
xchg
jmp
sbb
ret
mov
fsubrp
xchg
jno
test
lret
faddp
jae
pop
ljmp
cmp
jmp
shll
rcl
adc
sahf
notb
xchg
aad
or
adc
cmp
es
pop
sahf
notl
fadds
enter
fwait
and
into
stos
pushf
cmpsl
cli
divb
sbb
shrb
jle
jne
sub
in
or
fldt
mov
shll
push
add
jp
lret
push
pop
inc
sbb
adc
sub
xchg
call
mov
in
jmp
xor
faddl
mov
jle
pusha
lea
sahf
scas
dec
outsl
ljmp
sarb
mov
xlat
mov
xchg
imul
mov
leave
xchg
pusha
rcl
mov
clc
daa
scas
pop
loopne
push
fildl
pop
test
popa
or
mov
or
loopne
cmp
dec
inc
dec
xchg
icebp
mov
mov
test
ret
dec
push
leave
push
int3
mov
sbb
aad
ret
cltd
mov
outsl
movsb
push
add
dec
movsl
clc
xchg
in
daa
lods
fcmovb
mov
fdiv
adc
cmc
sub
jge
and
adc
stos
lret
cmp
out
jmp
int3
jns
mov
mov
jo
inc
jg
add
jecxz
pushf
mov
xlat
sub
add
and
mov
lds
mov
mov
or
mov
mov
pusha
jecxz
decl
cmp
ficoms
adc
in
aad
ret
add
pop
jecxz
dec
pop
lock
insl
jge
mov
sub
test
stc
das
adcb
nop
mov
xor
push
sar
xchg
mov
dec
scas
jmp
sub
fldcw
sarb
xor
xchg
in
push
scas
cltd
push
in
in
movsb
mov
movsb
and
pop
pop
xchg
mov
sti
mov
rorb
sub
mov
inc
enter
xor
dec
sub
js
inc
adc
mov
mov
or
add
sub
adc
loope
movsb
popa
aad
pop
ds
push
jmp
sub
scas
xchg
arpl
dec
sub
orl
mov
inc
jno
xchg
xchg
cmp
push
fs
leave
mov
push
adc
addr16
mov
and
or
sub
xor
and
xchg
lea
mov
sti
jb
dec
popa
mov
push
jb
les
push
insl
mov
xchg
sbb
in
pop
add
mov
mov
sbb
sub
shr
and
pop
inc
pop
lods
nop
pop
mov
fists
inc
xor
movsb
stc
movsl
push
aam
jb
nop
push
or
dec
jae
cmc
jae
push
stc
nop
pusha
rolb
push
imul
push
repz
and
popf
jne
mov
xchg
ret
mov
and
mov
lahf
mov
rcl
jle
ljmp
mov
cmc
push
outsl
push
pop
mov
sbb
xchg
adc
shll
push
imull
jmpw
and
movsb
mov
pop
dec
xchg
test
loop
jno
mov
add
dec
leave
fadd
loopne
mov
je
push
xchg
out
cmp
dec
leave
test
rol
xor
mov
dec
fs
jo
sarb
mov
cwtl
sbb
aam
push
pusha
xchg
call
cmc
pop
imul
jo
jnp
orl
andb
ficomps
fiaddl
add
and
push
mov
mov
out
loope
daa
and
or
es
pop
xlat
mov
js
mov
in
out
aaa
lea
adc
xchg
lea
add
jl
jo
pop
in
jae
dec
fstl
sti
mov
es
call
adc
and
lcall
in
sub
push
xchg
add
xor
jae
mov
sbb
jle
imul
jb
xchg
xchg
fdivrs
pushf
pop
data16
ret
mov
aas
cmp
shrb
cli
mov
push
aam
ds
rcll
call
add
jbe
push
mov
icebp
pop
std
xchg
lret
mov
js
fdivrs
cs
jb
loope
mov
pop
sbb
sbb
inc
stc
fdivr
mov
repnz
clc
xlat
jo
or
fxch
mov
cmpb
add
pop
jg
mov
ss
fcomi
sar
mov
les
ljmp
arpl
imul
and
jae
adc
adc
push
pop
sbbb
sbb
or
add
push
xor
xor
fistpll
push
repz
out
xchg
addl
cltd
or
cmp
fmulp
push
call
imul
adc
shl
mov
pusha
xor
jmp
adc
or
mov
clc
aad
pop
cvtps2pi
imul
xchg
into
sub
mov
je
jl
inc
cld
rcll
jg
stos
ds
inc
pop
shll
stos
jo
in
sbb
scas
rorb
or
lods
xor
leave
jnp
cs
test
adc
arpl
add
test
fiaddl
add
push
rcll
fnstsw
pop
cmpl
rolb
xchg
push
or
das
add
xor
dec
dec
pop
push
cmp
loopnew
nop
adc
sbb
repz
lods
pop
stos
pop
cmp
xor
xchg
ss
enter
pop
cmc
add
ljmp
and
jp
pop
dec
bndldx
bound
xor
lcall
jmp
add
stos
xlat
aas
mov
imul
insb
ja,pt
dec
push
es
jno
mov
mov
and
loop
daa
rorb
lods
sub
mov
popl
iret
stos
xor
ret
mov
test
push
fwait
orb
lret
int3
xor
push
mov
insl
aad
jns
push
xchg
fnstcw
stc
in
jl
cmpl
xchg
push
clc
pusha
pusha
and
push
add
repz
testb
adc
xchg
dec
stos
inc
dec
outsb
leave
gs
popa
sbb
xchg
add
insb
pop
xor
inc
mov
mov
add
adc
lcall
not
shrb
stos
cmp
lahf
shl
imul
mov
add
xchg
or
push
mov
in
adc
xchg
imul
fs
xchg
je
rcrl
and
push
add
in
jge
js
mov
incl
jecxz
xor
cmpsl
std
xchg
les
js
out
mov
sbb
shlb
mov
push
fisubs
lods
sbb
lret
lea
mov
mov
int3
lahf
call
pop
jo
pop
inc
jl
push
or
lcall
push
mov
push
clc
ss
fcomps
cwtl
les
fimuls
dec
xlat
out
or
inc
cmp
or
out
fs
mov
test
pop
sbb
sbb
cmp
xor
out
stos
fadds
xchg
adc
or
pop
int
mov
adc
andl
imulb
roll
mov
test
xchg
dec
dec
fldl
add
call
jge
lret
popf
hlt
clc
movsl
adc
lahf
pop
fcompl
adcl
hlt
mov
xor
inc
mov
xor
decl
es
mov
test
addr16
xchg
jnp
inc
xchg
stc
out
add
js
in
inc
or
out
incl
mov
sub
mov
cltd
or
jns
sub
fcmovne
dec
movsb
cmp
mov
pop
xchg
push
les
lret
pop
pushf
pop
or
cmpsb
push
cmp
into
lcall
pop
push
les
imul
je
rcrb
sbbl
mov
ljmp
cli
test
pushf
fistps
lcall
mov
xor
add
mov
or
add
or
fstpl
aas
push
sti
stos
pop
fsubr
in
sub
ss
pop
outsl
gs
sahf
js
dec
push
cmpsl
sub
insl
out
xor
push
adc
imul
mov
and
je
call
jb
lods
repz
xlat
or
adc
pop
pop
jmp
and
jecxz
sbb
ret
pop
cld
int3
gs
push
les
push
outsl
mov
nop
push
or
es
cmpb
mov
clc
in
out
test
loope
std
ds
arpl
add
testl
daa
xchg
jbe
arpl
stos
outsb
xor
sbb
ja
lcall
fmuls
fs
dec
mov
mov
mov
popf
test
lods
jmp
into
out
out
in
lcall
mov
jg
repz
imul
addr16
es
out
inc
int
xor
mov
dec
sarb
and
mov
les
out
popa
cmp
mov
sbb
dec
xor
bound
scas
add
cmp
add
jb
xor
and
dec
adc
add
mov
pop
push
mov
jns
inc
aam
scas
ret
mov
cmpsb
sbb
lret
insb
ret
jmp
mov
in
mov
xchg
jmp
in
mov
outsb
roll
sbbb
daa
cmp
and
adc
push
cmpb
jg
adc
xchg
jge
xorl
jle,pt
shl
push
push
into
mov
sub
sahf
shr
rol
add
sahf
xor
rorl
pop
pop
pusha
pop
imul
sub
scas
popa
or
push
sbb
inc
dec
mov
imul
rorb
add
pop
int3
mov
loope
push
enter
movsb
jae
popa
rorb
les
rorl
sub
outsb
cmp
gs
xor
ret
nop
push
int
les
jl
mov
pop
adc
lahf
sahf
push
dec
add
jg
in
les
pushf
popf
mov
or
mov
int
adc
xor
roll
cli
fstpl
jmp
lcall
xchg
xor
sbb
jp
rcll
negb
or
and
fwait
push
lret
and
or
sti
stc
cli
jl
mov
xchg
push
cmp
sbb
jnp
sbb
mov
jno
push
xchg
lods
xor
cmp
ds
clc
jne
loope
jge
jbe
ret
idivb
inc
es
cmp
xor
data16
orl
add
test
loop
fildll
push
adc
or
sahf
arpl
mov
xchg
dec
fistl
and
fildl
xchg
inc
loop
dec
mov
out
add
outsb
mov
stc
cmp
push
sbb
imul
icebp
pusha
scas
pop
pop
add
mov
out
incb
insl
jmp
inc
sbb
jmp
xchg
mov
out
inc
mov
les
mov
imul
lea
gs
add
dec
clc
dec
or
out
imul
jae
mov
fsubrs
pop
bound
mov
mov
ret
popf
push
sbb
lods
cmp
adc
cmp
repz
and
sbb
ret
cmp
push
add
mov
pop
dec
scas
pop
out
jb
gs
push
jae
xor
jne
pop
cmp
adc
pop
push
jns
movsl
or
or
push
in
xchg
repnz
mov
adc
cmp
filds
cmp
fsubrs
adc
and
lcall
jp
adc
addl
adc
lods
int3
das
add
push
test
out
loop
add
lods
push
leave
fisubl
xor
ljmp
sbb
stos
mov
arpl
inc
push
dec
lods
or
mov
sahf
sbb
dec
daa
outsb
add
cmp
push
ret
subb
mov
push
xor
sar
jle
or
mov
es
ja
add
dec
lock
push
in
push
seta
leave
push
daa
pop
dec
add
and
outsl
leave
dec
fstpt
add
es
or
pop
lods
stos
fisttps
push
mov
push
mov
out
xorb
iret
stc
push
in
and
lret
or
pop
or
xchg
mov
jb
dec
les
aas
sub
jae
sub
adc
outsb
sarb
fimull
pop
out
sub
test
stos
out
pusha
mov
mov
and
pop
test
xchg
sub
push
insl
outsl
xor
or
mov
pop
inc
pop
in
lds
scas
pop
cmpl
std
stc
lahf
fwait
ljmp
mov
or
xchg
inc
fistpl
mov
aad
into
dec
push
repnz
jo
sti
pop
jno
call
and
add
sti
leave
dec
cs
neg
cmpb
sbb
clc
lods
mov
sbbl
mov
and
sub
mov
mov
lcall
js
movb
push
pop
inc
push
jl,pn
fsubl
cmp
movsl
data16
mov
cltd
negb
adc
mov
lahf
pusha
cwtl
push
repz
in
cltd
jb
jg
xor
loopne
and
xor
inc
test
cmpl
ja
sub
in
jmp
push
xchg
rolb
and
mov
sti
cmp
xor
sub
pop
push
aas
es
popf
mov
clc
jnp
lock
int
dec
push
adc
add
xchg
xlat
addr16
push
hlt
dec
aad
jge
hlt
js
not
outsl
rorl
idivl
iret
dec
mov
scas
outsb
repnz
or
jmp
inc
push
adc
sub
and
xlat
mov
call
daa
into
cs
movsl
pop
jmp
or
push
inc
or
jle
ds
stc
or
lock
lcall
loopne
and
jle
push
push
dec
xchg
pop
adc
or
cmp
jmp
sub
divb
movsb
pusha
outsb
hlt
sub
lods
ret
rclb
mov
push
clc
ficompl
mov
pop
xchg
sub
push
in
mov
hlt
jmp
mov
out
mov
inc
out
dec
gs
adcl
push
rol
jp
call
sbb
mov
imulb
lret
scas
fildll
cmpl
mov
sbb
insl
jnp
dec
pop
jo
bound
mov
jns
test
push
outsl
mov
outsb
jnp
fwait
dec
xor
insb
cmp
push
not
mov
adc
jns
add
dec
imul
das
test
inc
cmp
or
and
mov
test
and
addr16
pop
cmc
ss
dec
lock
clc
loop
jmp
clc
push
das
mov
test
adc
and
cmp
inc
fisubl
aaa
cmpsl
mov
ljmp
mov
mov
aas
xor
daa
movsb
jg
pop
mulb
mov
inc
xor
nop
aam
lahf
push
sbb
push
and
je
jmp
mov
orl
push
pop
pop
int
test
shl
ss
orb
fs
pop
adc
lret
adc
mov
mov
shlb
or
sbb
or
sub
into
out
ljmp
dec
dec
push
jno
dec
loop
or
mov
fildl
lds
sahf
daa
dec
jge
je
test
pop
jecxz
sbb
out
cmc
sbb
dec
stos
dec
inc
mov
dec
insl
inc
cmp
cmp
adc
jecxz
out
cmc
xchg
lea
test
ds
xlat
stos
mov
es
cmp
cld
cmovno
and
and
inc
mov
cmp
lea
lds
mov
inc
jb
cmp
loope
xchg
adc
push
stos
mov
or
jmp
aas
es
nop
sbb
stos
jns
pop
add
pop
mov
lds
mov
xchg
add
in
adc
dec
pushf
fs
and
jo
cs
sbbl
stos
roll
xchg
lds
stos
inc
ja
lret
dec
mov
adc
push
dec
jg
fdivrl
rcl
mov
mov
or
jb
add
adc
jp
lcall
inc
sub
mov
mov
add
sti
cmc
mov
pop
outsb
pop
sub
adcb
sub
jge
cli
jae
hlt
subb
jo
fists
pop
add
stos
in
rcll
jne
out
mov
mov
xchg
xchg
mov
aam
outsl
cmp
std
dec
bound
mov
add
jge
popf
push
sub
test
shrl
xchg
insb
cmc
pop
pop
out
inc
sarb
cmp
xchg
push
leave
testl
lahf
aam
jns
movsl
xchg
iret
loop
xchg
mov
test
mov
lret
jmp
mov
adc
xchg
dec
imul
jge
or
jbe
pop
fadd
mov
xlat
push
jo
jno
dec
sbb
mov
lret
pushf
jno
shll
jnp
pop
subl
in
arpl
pop
xchg
xchg
and
mov
and
jge
or
pop
cmp
mov
xor
push
dec
dec
iret
rclb
add
in
repnz
add
outsl
jp
das
pop
pusha
jg
inc
fwait
rcrl
xor
out
dec
jmp
or
sub
adc
ss
arpl
es
pop
lods
incb
xor
adc
mov
adc
mov
fcomps
mov
test
lods
lock
jp
or
lods
lahf
and
push
push
mov
in
xor
pop
lcall
movsl
jle
es
andl
push
fidivrs
hlt
xchg
jp
scas
and
jnp
sbb
adc
dec
mov
mov
sbb
jp
inc
xchg
sbb
inc
stos
cs
clc
je
test
jnp
cmpsl
lea
add
movw
inc
decb
movsb
movsl
notb
xor
pushf
jmp
out
out
negb
push
jns
push
mov
scas
lods
in
insb
inc
ja
cmp
cmp
loop
sub
or
lds
cmp
push
idiv
jge
mov
mov
out
sarb
jae
icebp
lods
loope
mov
icebp
out
adc
xor
inc
popa
mov
dec
xchg
xor
loope
sbb
idivb
jne
aaa
stos
push
xchg
icebp
dec
xchg
or
pop
sbb
lret
cltd
sbb
pushf
pop
add
xor
jge
lds
loopne
mov
pop
mov
sub
adc
leave
mov
xorl
xchg
and
repz
daa
aaa
mov
test
rolb
ljmp
mov
xchg
cltd
and
mov
in
imul
js
out
les
push
push
lret
fwait
adc
and
scas
xchg
incb
movsl
sub
mov
xchg
sub
es
int3
in
sub
arpl
test
sbb
jno
in
cld
imul
adc
mov
jecxz
popf
pushf
jbe
mov
push
add
sub
not
add
enter
fcompl
xor
sarb
cmpl
dec
and
mov
int
xor
ljmp
mov
pushf
and
mov
jecxz
cmp
or
ja
insl
mov
iret
sbb
xchg
popa
stos
les
dec
shr
adc
dec
data16
shlb
dec
sub
lods
movsb
jl
xchg
xchg
insb
std
cmp
bound
out
lock
mov
sub
insb
inc
pop
xor
cmp
mov
dec
leave
das
loope
adc
stos
inc
popa
sub
cmp
xor
mov
xlat
fldl
insl
roll
repz
aas
dec
xorb
mov
xchg
into
orb
dec
pop
subb
pusha
pushf
push
push
push
aad
dec
jbe
je
jl
cmp
fidivrs
xchg
pop
outsb
push
xchg
ret
testb
mov
mov
aas
pop
jp
push
ficoml
imul
loop
roll
ljmp
xchg
sbb
jnp
cmp
jae
loopne
mov
pop
mull
stc
mov
call
xor
and
adc
dec
mov
and
cmc
xor
cld
fs
std
movsl
enter
xor
mov
add
data16
push
mov
loop
mov
in
push
mov
sbb
cmp
frstor
add
dec
lret
ljmp
ljmp
lcall
test
es
xchg
out
mov
add
subl
jmp
arpl
inc
pop
pop
cwtl
sahf
test
lret
push
pop
in
xor
fildl
scas
in
lds
sbb
jge
jmp
clc
jmp
popf
lret
aaa
out
mov
aas
cmp
mov
jne
xchg
std
in
jecxz
sti
outsb
jns
dec
or
adc
sar
fld
or
adc
jb
push
cmpsb
cltd
pushf
dec
or
popa
test
xor
lock
ds
rorl
ret
sub
pop
fcoms
mov
adc
dec
mov
mov
sbb
rclb
xchg
or
fwait
loop
sbb
scas
xor
mov
stc
popa
loopne
add
daa
test
adc
mov
cltd
mov
mov
xchg
es
jg
sarb
arpl
add
xor
mov
pop
pop
dec
popa
and
mov
loopne
insb
lods
sub
cld
mov
mov
fiaddl
and
inc
pop
xlat
loopne
sahf
push
fists
jns
cmp
fs
shlb
repz
mov
inc
loop
mov
pop
mov
dec
paddq
or
adc
push
mov
subl
andb
int
ror
add
fcom
and
add
je
push
sbb
movmskps
xor
inc
jne
testl
xor
and
arpl
test
jmp
inc
out
sbb
mov
fldl
lret
xor
dec
leave
pop
gs
lea
mov
cmp
adc
aaa
es
je
mov
mov
dec
je
adc
and
fcmovbe
sub
call
fisubrs
sbb
daa
mov
cmp
inc
in
xchg
jmp
enter
out
pushf
lods
mov
push
mov
xchg
insl
cli
rcrb
fcomps
push
shl
cmc
inc
xor
add
adc
pusha
stos
sub
lds
add
dec
dec
faddl
push
imul
pop
pusha
pop
push
aaa
xchg
add
cs
add
pop
or
xchg
mov
mov
xor
lahf
adc
push
mov
and
jae
mov
loopne
and
push
out
sub
in
das
insb
or
mov
mov
add
and
cmp
dec
movsb
jle
sahf
orb
cwtl
fcmove
mov
jmp
imul
and
push
xchg
das
das
std
das
lcall
inc
rcrl
in
hlt
pop
out
xchg
mov
mov
pop
fistpll
add
ds
pop
or
xchg
dec
mov
orb
fcoms
sbb
push
popf
enter
push
xchg
jnp
mov
dec
adc
and
mov
out
lods
mov
ret
gs
hlt
enter
sbb
sbb
inc
jbe
outsb
sbb
xchg
aaa
push
adc
xchg
lock
insb
stos
loopne
lret
out
jge
adc
sbb
inc
xor
cmp
mov
sub
fneni(8087
lea
mov
mov
out
inc
leave
rclb
imul
fcmove
lcall
enter
xorl
outsb
add
pop
aas
adc
dec
adc
addr16
fiadds
sub
lret
fwait
sar
das
xchg
or
pop
add
push
adcb
clc
xor
movsl
push
std
sub
mov
rorb
inc
call
inc
popa
mov
dec
pushf
mov
dec
repnz
pop
lahf
inc
inc
or
xchg
es
shrb
movlps
push
cmp
sbb
and
and
and
mov
jmp
cmc
cli
movsl
rcl
mov
or
add
push
push
sahf
cmp
sub
push
pop
stc
sub
popf
pop
fmull
js
int3
mov
movsb
je
jmp
in
sbb
jb
mov
mov
lea
mov
aas
js
xor
xchg
cmp
push
jns
fwait
inc
jnp
sbb
ja
jmp
leave
loopne
mov
popa
sub
into
mov
repz
dec
lock
add
insl
test
mov
sub
stos
lods
lahf
fildll
inc
pop
addr16
inc
fwait
aam
xlat
cmpsl
int
in
mov
pop
dec
xchg
mov
addr16
call
insb
outsl
ds
pusha
mov
push
fisubs
mov
xchg
out
sbb
aaa
or
adc
sbb
inc
lahf
sahf
push
mov
sbb
rcrb
inc
daa
es
mov
ret
movsl
in
inc
mov
in
ret
out
add
popf
hlt
and
loop
addr16
or
test
rol
insl
and
xor
pop
shlb
push
jbe
into
fwait
test
test
movb
push
idivb
rclb
cs
dec
imul
shrb
xlat
imull
push
xchg
int
in
insb
xor
int3
lock
xchg
sbb
push
mov
xchg
aad
gs
or
cmp
mov
and
fstl
adc
hlt
adc
fiadds
mov
xchg
je
sbb
or
pop
cmpsb
sbb
fsubr
cmp
gs
xchg
lret
fwait
iret
test
mov
cli
xchg
xchg
in
aas
xorb
aad
xor
push
or
imul
or
dec
cmp
xor
push
stos
inc
jo
or
ss
adc
or
sub
sysenter
sub
push
jecxz
push
sar
jns
bound
xor
outsb
jbe
add
ljmp
add
cwtl
call
lock
ret
int3
std
les
xchg
xorb
mov
lods
push
xor
xor
aas
push
scas
pop
fnsave
gs
adc
inc
fsub
cmpsb
aas
sub
scas
enter
mov
sbb
or
mov
test
out
dec
sbb
mov
fbld
aas
addl
cwtl
push
xor
call
mov
loope
mov
enter
insl
pop
pop
sub
test
or
lods
sahf
lret
shll
fiadds
or
inc
push
in
mov
xchg
and
fiadds
mov
stc
ja
mov
and
cmp
cs
gs
mov
jb
xchg
pop
in
cli
push
stos
push
inc
out
adc
shll
ret
mov
mov
jno
ljmp
sub
pusha
jo
cltd
fwait
adc
xchg
push
aad
xlat
push
jg
cmp
push
xor
das
ficoml
popf
jb
sbb
fwait
gs
inc
pop
pusha
xor
mov
add
les
pop
mov
out
dec
add
jno
xchg
pop
cs
stos
cmp
xchg
int3
popf
xor
pop
shrl
mov
stos
rclb
and
xor
mov
add
sar
sub
loopne
lock
inc
pop
cmp
add
outsl
mov
hlt
xchg
jl
cli
mov
ljmp
cld
add
movsb
scas
sub
xchg
xor
sbb
xorb
adc
inc
std
cmp
insl
adc
lea
mov
les
add
push
fscale
jle
shl
add
inc
lret
aaa
inc
test
pop
sbb
fildl
jmp
sarb
dec
sub
mov
sub
xor
jge
jecxz
xchg
push
jbe
push
sub
mov
mov
outsb
pop
lods
scas
cmpsl
xchg
jo
pushf
je
ja
adc
mov
imul
cmp
mov
push
test
push
mov
or
push
insb
mov
cmp
imulb
lods
mov
pushf
mov
xchg
add
sar
xchg
push
sbb
pop
sub
inc
push
bound
ss
pop
mov
movsl
sbb
das
orb
mov
ficomps
mov
xor
mov
repz
and
jge
arpl
sbb
or
test
cmc
xchg
sbb
jns
fildl
mov
add
aaa
loope
scas
out
push
scas
fcos
add
stos
or
cmpsb
xchg
push
xor
cmp
out
push
xchg
sarl
lds
mov
xchg
and
std
xlat
xor
xor
jbe
pop
in
xorb
lea
shlb
int
mov
clc
pusha
xor
lds
sub
insb
daa
dec
mov
xchg
jo
in
insl
push
es
sub
movsb
out
add
mov
xchg
add
popa
push
ljmp
in
sub
cmpsl
pop
bound
sbb
lahf
xor
paddusw
add
ret
and
inc
push
cltd
in
jbe
data16
cmp
pop
xor
pop
into
rolb
dec
es
cs
sbb
dec
mov
adc
sub
mov
stos
lret
add
xor
or
fdivl
mov
xchg
inc
mov
pop
mov
loop
dec
loopne
jecxz
cld
xchg
sub
loopne
jbe
test
movsl
out
in
stos
lods
shlb
les
xor
jmp
cmp
xor
aaa
pop
push
inc
cmp
cmpsb
mov
out
dec
jp
out
jne
xchg
mov
or
dec
xchg
pushf
outsb
je
add
dec
inc
jne
insb
bound
sub
mov
lock
aas
cmp
sub
jl
fmull
mov
decb
and
int
adc
add
push
cmp
pop
mov
lcall
and
dec
in
bound
sub
fdivrs
loop
jno
or
lcall
jge
insl
add
ss
inc
and
sub
dec
sbb
push
scas
jge
test
nop
xchg
out
loop
cmpsl
fxch
adc
aaa
nop
mov
fnstenv
add
fdivrl
and
sub
push
push
pop
test
and
xor
sahf
push
push
mov
sbb
pop
jg
add
xor
int3
xchg
sar
add
cs
cmp
pushf
add
pop
ds
mov
sbb
or
and
ret
mov
jecxz
inc
rcl
add
aad
jnp
or
push
imul
inc
imul
test
jle
or
inc
stos
cmpsb
pop
mov
push
mov
test
dec
cmovns
mov
lret
cmp
inc
or
enter
sub
mov
call
pop
pop
push
cmpl
call
cmpsb
xlat
pop
fisttpll
adcb
sti
xchg
jae
ds
outsb
repnz
das
shr
repnz
inc
xchg
push
imull
fistpll
mov
mov
jno
test
adc
add
les
pop
push
mov
jmp
adc
sub
dec
xor
mov
cli
mov
loop
or
out
stos
dec
mov
dec
sbb
push
insb
jmp
dec
imul
iret
sbb
movsl
das
repnz
addr16
test
les
push
push
mov
ret
sub
std
test
jl
pop
inc
sbb
jl,pt
sub
std
enter
sub
ret
pop
sub
adc
push
repz
ljmp
adcl
lds
cwtl
or
neg
xchg
aam
and
dec
mov
fildl
inc
in
or
adc
scas
es
cmp
dec
cli
int3
mov
jle
in
or
sahf
movsl
repz
cmp
jae
scas
xchg
mov
push
test
sbb
push
movsb
and
rolb
inc
dec
push
testb
out
cmp
xor
shll
pusha
daa
fmuls
movsl
jnp
or
xor
fidivrl
sub
pop
push
pop
or
pop
arpl
shrl
mov
jbe
dec
pop
pop
daa
jae
pop
je
lcall
add
repnz
mov
jle
and
lods
push
sbb
sub
pop
mov
pushf
out
pop
fldenv
out
sbb
jg
fsubrs
xchg
or
mov
iret
mov
xor
cli
fisubl
cli
jo
jne
cmpsl
jo
push
fwait
mov
in
lock
adc
xchg
dec
xchg
cmp
popf
nop
das
shll
push
arpl
jl
test
inc
dec
sbb
xorb
out
mov
add
mov
stos
stos
std
popa
xchg
jae
mov
push
cmpsb
jne
bound
or
pop
jle
xchg
fcompl
insb
push
daa
fs
mov
cmpsb
cld
jno
add
ffree
xlat
cmp
cmp
rcrl
aam
jo
and
fdivr
dec
lds
lods
sbb
sbb
or
popl
push
dec
push
adc
push
jle
or
jne
stos
inc
stos
jne
adc
jmp
nop
mov
mov
cmp
outsb
les
cld
dec
lcall
add
push
ret
out
insb
lods
js
jg
imul
imul
sbb
negb
cltd
fnstsw
sbb
cmp
add
cli
shlb
scas
dec
out
add
xchg
and
pop
pop
sbb
mov
dec
or
testb
int
fsubl
int
hlt
das
ret
pusha
shll
bound
cmp
cs
mov
lahf
jmp
xchg
cmpsb
outsb
xchg
ds
jl
adc
repz
push
inc
mov
aam
fdivrs
jl
push
rcr
outsl
fdivr
sbb
dec
clc
or
mov
out
std
stos
xor
call
xchg
jg
mov
imul
adc
jo
and
push
fwait
sub
sub
shr
pop
test
jmp
sti
fmulp
jecxz
cmpsl
scas
lcall
cmp
jnp
aaa
stos
mov
lcall
cmp
xchg
int
sbb
xlat
mov
in
jecxz
cltd
mov
nop
inc
ficompl
ret
and
fsubrs
in
cs
mov
jns
or
pop
sahf
pop
lret
ljmp
sbb
inc
mull
cmp
push
rorl
aad
fisubrs
pusha
repz
sub
repnz
mov
fisubrl
clc
repnz
les
fs
dec
pop
add
pushf
and
sahf
xchg
fdivs
xchg
inc
sarl
add
in
call
add
adc
popf
int
dec
or
mov
inc
stos
mov
xor
inc
test
cli
fisubrs
fimull
push
nop
ja
jp
jp
adc
cmp
and
and
xor
aam
in
pop
inc
sar
xchg
insb
cmp
loope
dec
jmp
mov
cmp
push
jl
scas
int
pop
js
mov
dec
imul
sbb
jno
lret
pushf
mov
push
sbb
cmp
in
fwait
stos
push
aad
push
stos
mov
mov
add
repz
lret
movsb
fwait
pop
jmp
cltd
push
add
and
ret
mov
stc
cltd
adc
das
xchg
add
idivl
fcmovnb
sbb
push
in
jmp
insl
into
popf
add
sahf
inc
push
and
dec
pushf
mov
inc
lods
into
jb
fiadds
insb
inc
mov
fbld
sti
push
push
dec
xchg
xchg
testl
jl
std
mov
inc
int
pop
cmp
mov
mov
jle
aad
lock
dec
push
pop
mov
mov
out
xor
test
popf
les
in
arpl
dec
lea
outsb
loop
js
and
pop
jp
cmc
iret
push
idivb
sbb
aad
bnd
mov
sub
push
or
das
fistps
jecxz
push
fnstcw
push
movsl
test
pop
sub
ds
rorl
mov
fsubrs
or
push
arpl
fisubs
adc
mov
inc
popa
out
dec
jl
dec
mov
cmp
ret
int
mov
add
cmp
cmc
mov
xor
repz
xor
inc
rcr
xlat
mov
scas
decb
or
loop
mov
jp
pop
std
push
pop
imulb
dec
movsl
mov
jne
sahf
iret
jmp
popa
and
imul
cltd
in
cli
pop
pop
dec
clc
ds
add
adc
insb
ljmp
xor
test
xchg
into
adc
xchg
mov
popf
xchg
orl
xor
jp
insl
add
aam
xor
push
cmp
xchg
or
xor
repz
cmp
xlat
sub
sbb
lock
stc
mov
cmp
fs
iret
xchg
mov
push
and
lock
scas
jnp
fisubs
aad
dec
pop
xorl
add
repnz
mov
sarb
fsts
mov
sub
sub
daa
push
mov
call
mov
xor
sbb
jno
xchg
pusha
stos
call
cmp
xchg
xlat
js
jge
and
notl
inc
push
lcall
scas
pop
xor
xchg
adc
cmp
cltd
icebp
adc
aas
mov
xchg
rorb
push
sub
shlb
in
inc
and
xchg
jmp
outsb
inc
lret
and
hlt
lret
lcall
mov
mov
into
cmc
and
xor
pop
iret
sub
push
sbb
xor
adc
imul
sub
fwait
sub
xor
or
sub
dec
sbb
add
sub
or
push
xor
aad
adc
inc
mov
sub
sub
int3
pop
push
loopne
jo
ss
cs
jmp
popf
pushf
sub
xor
mov
pop
dec
xchg
dec
push
sub
xchg
scas
push
loopne
inc
mov
test
clc
sahf
out
pusha
in
cmp
push
mov
idiv
and
jmp
into
mov
add
adc
xchg
sarb
sbb
jne
insb
pop
xchg
pop
fs
decb
testb
cmpb
fistpll
je
sahf
xor
jb
push
mov
jg
loope
and
dec
sub
push
xchg
jl
out
push
and
adc
test
pop
or
fdivrl
ret
jle
aam
dec
movsb
and
sub
push
sub
lret
mov
dec
push
pushf
leave
jo
sbb
jle
sub
imul
out
ljmp
jns
cmp
add
fcmovnbe
pusha
push
cmp
leave
mov
add
push
adc
ret
and
out
mov
enter
add
or
xor
lods
push
aam
sbb
dec
and
nop
test
cmp
dec
xor
jge
pop
sub
movsl
fcomps
or
cmp
cmp
adc
mov
je
jo
orb
cmpsb
repnz
cli
xchg
es
repnz
cmpsl
repnz
jae
sbb
or
lcall
addl
push
adc
adc
dec
inc
mov
pop
jbe
push
mov
mov
push
push
data16
push
in
pop
lods
stos
pushf
bound
and
xchg
ja
jmp
mov
cltd
mov
add
aas
jecxz
mov
push
fwait
add
andl
lds
pushf
mov
add
dec
jl
int3
aaa
cmp
repz
cmp
out
sub
daa
test
pop
xor
repnz
ja
xchg
aas
ret
movsl
negb
adcb
jle
rol
arpl
int3
adc
mov
push
arpl
fisttpl
cli
mov
repz
xchg
insb
pop
add
jg
add
sub
xorb
cmp
sub
cmpsb
push
loope
inc
in
or
push
push
adc
sbb
enter
movsl
mov
jno
fnstsw
inc
add
outsl
xor
sbb
and
mov
sbb
stos
stos
mov
les
push
hlt
clc
sbb
outsl
mov
dec
out
clc
pushf
rolb
imul
out
imul
mov
lods
jmp
fs
xchg
sbb
xor
push
out
jp
sbb
xchg
inc
das
sarl
cmp
pop
push
les
xchg
jmp
in
xor
or
adc
lds
and
je
bnd
clc
push
in
add
dec
mov
nopl
inc
jb
cld
pop
dec
imul
rcrl
test
out
mov
pop
add
jb
cs
pop
adc
or
imul
clc
and
imul
push
push
lret
sbb
out
push
dec
ljmp
insb
adc
jle
sbb
jecxz
xor
adc
jge
sbb
fcomp
sti
adc
dec
push
sbb
jae
mov
xor
push
lcall
push
and
xchg
cwtl
xchg
push
and
inc
into
xchg
jge
push
adc
test
insl
mov
adc
push
mov
and
arpl
sub
jg
test
push
std
imul
sti
mov
xor
cmp
imul
ss
ds
sbb
xchg
ret
mov
mov
stos
sub
push
cli
mov
push
adc
call
dec
lods
sbb
dec
fnsave
push
push
out
jmp
popa
mov
sbb
dec
enter
fidivl
les
push
inc
pop
loopne
cld
mov
gs
lea
enter
mov
or
sbb
add
mov
rolb
lret
leave
sub
pop
sahf
scas
daa
nopl
insl
mov
stc
pop
outsl
mov
jl
adc
int3
jns
into
pushl
sub
dec
adc
sti
fldenv
sti
call
leave
int
push
es
xor
es
add
and
and
cmp
adc
xor
shl
mov
orb
and
and
inc
into
lahf
push
cltd
pop
nop
insl
mov
push
fwait
in
mov
stos
shll
mov
or
pop
iret
arpl
repz
xor
mov
jae
out
pop
aad
mov
cld
les
lcall
xchg
into
stos
in
fstl
cmp
aaa
cmpsl
jno
stos
les
ds
out
adc
cmp
jo
or
enter
xchg
in
arpl
lds
mov
push
mov
ret
xor
push
mov
dec
jae
sbb
inc
ljmp
cmp
inc
lea
pop
xchg
jnp
ljmp
ret
or
inc
cmp
inc
xor
jg
fscale
dec
pop
xchg
test
leave
in
aam
jl
sbb
inc
dec
sahf
add
out
mov
leave
and
sub
cli
jl
pop
push
xor
or
jmp
or
scas
rclb
movsb
outsl
pop
aad
pop
cwtl
call
sub
lret
or
xor
sti
in
sbb
adc
icebp
jnp
dec
fs
sti
xor
adc
adc
add
je
mov
jnp
incb
iret
hlt
sbb
lret
fcoms
jmp
xchg
add
fstl
or
inc
in
out
dec
xor
mov
jle
mov
xlat
xchg
repz
dec
stos
pop
add
fstpt
xchg
mov
xchg
outsb
mov
in
pop
jle
das
call
scas
fsubrl
inc
loope
test
stos
sub
mov
push
addb
popa
pop
xor
push
or
mov
or
ljmp
sub
cmp
cmp
mov
ret
lock
adc
push
mov
cmpsl
fsts
sbb
lahf
out
enter
jne
add
pop
mov
negl
push
or
int3
sub
bound
cmp
xchg
incb
out
lds
xor
sub
xor
xchg
inc
push
mov
push
fisttpll
pop
cmpsb
fimuls
je
idivb
cwtl
je
jmp
les
popa
out
push
popf
jge
xchg
fimull
inc
test
ret
cmp
insb
shll
cmc
leave
insl
push
xchg
test
jnp
mov
clc
popa
cli
rclb
lods
daa
cmpsl
xlat
xchg
adc
pop
hlt
insb
inc
and
fistpll
cmp
push
fistpll
mov
mov
mov
push
adcl
in
mov
add
push
movsb
scas
lahf
scas
shlb
push
mov
adc
adc
inc
loop
sub
pop
push
std
fsub
jne
fdivl
icebp
mov
and
xor
xchg
sarl
and
dec
and
ficoms
mov
cwtl
loop
cmp
out
arpl
sahf
fs
xor
das
or
ja
jmp
jecxz
outsb
or
ss
mov
subb
icebp
or
jnp
dec
adc
inc
pop
in
push
inc
xor
adc
xchg
call
inc
sub
cmp
cmc
jno
inc
sub
xor
or
sub
call
sbb
aad
dec
stos
sbb
popf
inc
mov
sbb
aaa
push
clc
adc
xchg
xor
test
aaa
push
pop
pop
fnstcw
jns
push
movsb
cmp
addl
enter
out
int3
adc
mov
xor
or
sti
inc
sbb
lds
fs
cmp
mov
sbb
push
fstpt
stc
add
adc
arpl
push
filds
pop
and
sub
daa
adc
sbb
jp
aaa
sbb
popf
lahf
cmp
or
or
in
mov
sbb
mov
ds
mov
sbb
adc
in
ja
addr16
mov
inc
stos
test
scas
xchg
loopne
jns
addr16
stc
jl
out
push
xor
daa
andl
xchg
fwait
inc
jmp
clc
divb
cmp
cmpsl
lret
adc
cmc
mov
mov
lea
lods
add
and
xchg
in
push
test
sahf
mov
popa
sti
xor
stc
adc
mov
push
xor
lahf
push
int3
jl
test
mov
popa
dec
ror
jl
pop
js
leave
xor
mov
push
into
add
cli
sub
xchg
repz
mov
je
mov
loope
clc
mov
push
mov
popf
popa
xchg
std
gs
out
inc
xorb
dec
pushf
mov
cmp
orl
and
cmp
out
loope
jecxz
int
int3
repz
jb
and
mov
sahf
pop
and
imul
mov
mov
nop
sbb
loope
hlt
cmp
xchg
xor
mov
pushf
jo
jmp
jl
imul
sbb
mov
inc
inc
imul
in
ss
test
sahf
xchg
arpl
or
pop
cmp
inc
sbb
adcb
test
sub
mov
push
cmpsl
dec
sub
sub
pop
pop
pop
movsl
sbb
xor
and
mov
add
sub
mov
jne
gs
sub
or
ss
leave
cmp
cld
cltd
jns
jg
and
or
imul
dec
and
adc
ja
js
sbb
int
mov
dec
inc
repnz
lods
add
aas
popf
fildll
mov
aad
xor
xchg
out
cmpsb
nop
sbb
and
and
test
stos
lds
jp
xor
pop
push
aaa
add
enter
popf
mov
xor
arpl
xor
int
cmp
dec
ret
push
inc
imull
push
sbb
xchg
aaa
mov
cmp
xor
add
pusha
in
ja
jmp
push
mov
pushf
call
je
and
lods
mov
or
pop
sub
insb
sub
mov
lret
push
adc
jmp
imul
and
inc
pop
mov
add
popa
lods
insl
inc
orb
xchg
or
push
xor
daa
enter
and
mov
inc
pop
ja
sub
mov
sub
mov
je
es
xchg
mov
insl
mov
leave
ror
cmpl
sbb
push
mov
inc
xchg
aad
xchg
cltd
aaa
adc
sbb
xchg
push
xlat
xchg
call
inc
test
stos
sub
loop
push
pop
mov
jbe
rclb
subl
call
imul
pop
or
sti
jl
add
add
andl
cs
imul
shll
cltd
mov
jmp
jmp
lea
pop
jl
js
scas
arpl
xor
pusha
cmp
jle
pop
mov
sub
ja
insl
inc
xor
jae
mov
outsl
or
idivl
movsl
ss
xchg
mov
dec
jb
data16
jb
or
popl
mov
cltd
test
jmp
sti
rcrb
xchg
sahf
xchg
sti
dec
xchg
xchg
stos
movsl
cmc
into
jecxz
lds
pop
jecxz
sbb
pushf
into
jl
popf
repnz
ret
rcrl
imul
ja
rorl
nop
add
jae
sbb
mov
mov
incb
dec
or
sbb
jmp
adcl
mov
ret
ljmp
lcall
add
pop
adc
and
arpl
aaa
jns
add
ficompl
push
push
lret
cmp
mov
loopne
push
mov
jns
sbb
mov
jae
popf
xchg
sarb
mov
cmp
sbb
fldcw
imul
and
mov
adcl
stos
adc
fs
lock
sbb
xor
rclb
jp
es
mov
or
push
dec
mov
adc
jp
movsb
push
fwait
pop
fst
jnp
rcll
xchg
adc
jno
loopne
push
adc
cmp
and
jl
xchg
inc
lcall
js
lds
mov
movsl
ja
dec
mov
les
daa
xor
lcall
add
int
adc
adc
imull
fmull
mov
insl
xor
movsl
mov
in
xchg
jge
addr16
cmc
nop
xor
cmp
jle
orb
adc
jo
xorb
and
sub
mov
std
cmp
popa
lods
sbb
es
stc
or
mov
sub
pop
repz
and
adc
lock
or
mov
aaa
jle
mov
into
xor
sub
aam
lods
test
cmp
clc
add
iret
mov
or
cli
test
push
iret
fiaddl
fmul
mov
cltd
fists
pop
aas
stc
int
xor
mov
hlt
cmc
std
xor
test
pop
test
adc
dec
ljmp
insb
pop
mov
add
push
sub
mov
cmp
icebp
test
movsb
fcmovu
and
sub
loopne
xor
ret
xchg
jbe
and
dec
aam
sarl
and
addb
jb
mov
mul
mov
ss
push
leave
pop
out
xchg
sub
push
scas
sbb
subb
test
push
imul
movsb
inc
sub
xlat
pop
mov
adc
cmc
xor
cs
cmp
fistps
inc
jne
inc
rol
and
xlat
fsubr
sbb
adc
fs
in
sti
repnz
push
dec
push
fiadds
inc
xchg
mov
testl
sbb
insl
in
fsubp
sub
hlt
repnz
gs
mov
mov
fcos
sbb
bound
mulb
inc
shll
adc
dec
data16
fcomp
cltd
pop
cwtl
rcll
in
jp
imul
cmp
sub
and
out
inc
lea
popa
dec
sub
in
lock
pop
xchg
mov
and
xchg
testb
dec
bsr
ja
cmp
outsl
add
jb
dec
daa
push
sarl
icebp
and
push
and
rcll
or
sub
faddl
xchg
xor
ljmp
push
icebp
lahf
xchg
into
sub
stos
aas
sub
fimull
inc
push
sbb
in
cmpb
outsb
push
cmp
sti
stos
or
sub
lret
decb
add
or
nop
jnp
sub
lahf
jecxz
dec
inc
test
add
scas
pop
int3
clc
das
roll
lods
jb
orb
jnp
jnp
aam
rcrb
mov
call
cmpsl
mov
inc
ffreep
mov
insl
jo
mov
pop
push
andb
rcl
testl
pop
mov
dec
push
add
lods
mov
lret
push
cltd
imul
xchg
pop
into
inc
insb
out
addb
pop
pop
stc
rorb
faddl
add
mov
iret
mov
add
xor
inc
add
sub
or
sahf
shlb
fsts
in
jbe
cli
xor
repnz
repz
scas
mov
cmp
cld
xchg
jo
cmp
enter
sti
lock
jg
xlat
ficoms
mov
mov
out
sbb
jae
pop
mov
dec
scas
cmp
divl
jb
sub
pop
pusha
mov
xor
xchg
call
pop
jae
and
sbb
push
adc
je
jmp
fnstcw
aas
adc
in
sub
sub
mov
jecxz
or
je
add
dec
jnp
mov
out
or
imul
pop
sbb
pop
add
adc
es
mov
bound
loopne
pushl
adc
sbb
es
inc
pop
adc
dec
lret
sahf
dec
mov
xchg
sbb
dec
fsubrl
sub
je
cwtl
mov
test
inc
sarl
jae
je
aam
jnp
sub
fdivs
sbb
mov
aad
cmp
int3
xchg
stos
imul
std
mov
dec
outsb
gs
push
stos
and
and
out
adc
mov
or
jmp
mov
arpl
icebp
test
or
dec
aaa
insb
add
add
xchg
daa
movlps
test
pop
outsb
push
enter
adc
cmpsb
jnp
sbb
cmp
hlt
lahf
stos
shrb
lret
mov
sub
clc
fs
or
imulb
loopne
sub
add
mov
daa
cmp
xchg
repz
rorb
jp
fldenv
out
into
les
sbb
inc
adc
or
dec
out
mov
popa
pop
insb
mov
push
mov
call
out
jnp
xchg
add
loopne
mov
pop
cli
inc
mov
sub
mov
in
cmp
out
sbb
cld
jp
jle
loop
or
jecxz
mov
push
xchg
fdivrs
ret
loop
fistl
mov
and
popf
aad
sub
push
stos
dec
fistps
lret
and
stos
mov
popa
arpl
inc
fcoms
lret
les
pop
in
hlt
or
fcoms
movsb
sarb
jmp
bound
lock
cmp
enter
fistpl
inc
test
xor
stc
inc
jne
jb
addr16
sub
dec
xor
sbb
jmp
ret
loop
or
lods
mov
aad
pop
pop
dec
mov
dec
mov
pop
push
mov
add
stos
and
outsb
stc
cmpsl
push
xchg
xchg
test
xchg
aad
mov
js
popa
cli
js
and
inc
stos
jl
inc
mov
xor
xchg
pop
call
mov
loope
mov
cwtl
dec
clc
mov
insl
and
cli
or
call
arpl
pop
das
ss
push
scas
out
ss
cmp
test
ss
leave
xor
mov
inc
lahf
xchg
fwait
xor
dec
imul
mov
inc
push
and
adc
xchg
fcmove
popf
bound
bnd
rorl
mov
int3
sbb
movsb
mov
sbb
and
jmp
jno
mov
inc
push
pop
int3
xchg
pushf
and
push
push
nop
pop
jmp
lods
jns
xchg
sbb
out
addr16
push
inc
cmpl
orb
cltd
jle
iret
dec
mov
pusha
sbb
dec
sbb
sub
sbb
test
scas
add
mov
mulb
xchg
inc
in
sbb
out
xlat
test
andb
lcall
inc
jp
mov
test
lret
fadds
insb
rcrl
mov
dec
mov
int3
xorl
movsl
sub
or
jb,pt
rcrl
adc
mov
push
negl
pop
adc
dec
jnp
sbb
jnp
adc
add
sbb
mov
adc
lahf
repnz
xor
cmp
lock
push
popa
push
into
into
insb
cmpsb
nop
dec
pop
xor
pop
pop
add
mov
cmp
mov
es
int3
sub
call
jl
mov
and
cs
icebp
cmpsb
data16
ret
sbb
loop
in
js
lods
cltd
nop
test
sbb
dec
scas
fs
xchg
loopne
xlat
jno
mov
enter
ja
xor
and
popa
xchg
call
ret
and
xor
movsb
outsb
push
or
inc
test
icebp
sub
mov
aas
adc
test
loop
add
cli
jp
mov
js
sbb
xchg
loope
xor
in
push
cwtl
mov
sbb
dec
adc
jne
adc
mov
pushl
stc
add
cltd
lock
pop
cmp
call
sub
push
adc
sub
and
mov
imul
test
inc
mov
jo
mov
pop
xchg
vmaxps
call
mov
cmp
xchg
xor
xor
jb
insl
dec
leave
xchg
jb
test
je
mov
mull
roll
addb
push
test
jno
jne
nop
sbb
stc
xchg
insl
or
pop
jae
push
cmp
lods
sub
mov
mov
sbbl
add
xor
inc
xchg
cmp
inc
or
shll
loop
push
int
addr16
dec
out
std
lret
out
dec
dec
ret
sbb
sti
lods
push
and
mov
vmovq
dec
or
loopne
xchg
mov
sarl
xchg
sbb
lods
lcall
pop
inc
out
dec
xor
adc
lcall
test
incl
xchg
call
mov
push
enter
push
dec
outsb
imul
push
pop
mov
adc
xchg
cmp
add
pop
and
xor
fwait
jbe
push
xor
xchg
bound
lret
cwtl
jb
pop
jno
dec
out
mov
inc
les
and
aas
iret
int3
fsubrl
xchg
pop
push
xor
lods
mov
or
xor
cmpsb
gs
mov
sbb
fisttpl
xchg
jmp
fsubrs
jecxz
cmp
and
inc
sarl
pop
leave
push
dec
in
imul
inc
xchg
push
sahf
push
mov
adc
pop
icebp
mov
mov
push
jg
aam
jns
xorb
insb
dec
pop
iret
loope
lock
pop
in
outsb
stc
lcall
xchg
mov
imul
movsb
mov
call
fwait
cld
sub
lds
xchg
das
mov
subl
xor
movsl
jl
lret
movsl
cmpsl
pop
inc
mov
xor
insb
outsb
test
push
ljmp
jo
movsb
outsb
andb
xchg
mov
rolb
dec
into
dec
bound
pop
and
jmp
inc
sbb
imul
sbb
mov
int
stos
cld
iret
mov
les
jecxz
pop
dec
jno
inc
sbb
clc
out
push
xchg
lea
sbb
push
data16
out
and
inc
mov
fsubrs
push
jbe
movsb
hlt
dec
push
addb
sti
pusha
lret
mov
sbb
ffreep
or
shrb
mov
xchg
mov
into
xor
lahf
imul
jmp
stc
pop
mov
mov
or
lea
xor
push
mov
ja
dec
push
cmp
sub
lret
jmp
push
cmpsb
cmp
iret
testb
add
iret
ret
fsubrp
xor
mov
pop
jmp
mov
mov
outsb
jle
mov
sbb
push
inc
jae
fs
xor
push
lods
loope
stos
movsl
rorb
mov
ja
fsubp
cmp
inc
dec
jne
jl
lods
inc
xchg
and
outsl
inc
popf
mov
jno
ljmp
cmp
loopne
test
pop
aaa
incl
inc
jne
inc
out
and
outsl
cmc
sub
fdivs
inc
leave
pop
stos
mov
sbb
aaa
xchg
and
sub
jae
mov
jecxz
add
imul
pop
adc
mov
xchg
mov
addr16
xor
push
xor
cs
sub
add
lret
bound
in
and
lea
into
lock
push
in
cmp
push
verr
xchg
cmpsb
cli
lret
fisttpll
mov
xorb
and
xor
push
sub
and
mov
cmp
xlat
cmp
pop
sbb
adc
or
and
xor
loope
mov
cmp
fimuls
push
aad
and
pop
ret
adc
cmp
adc
fldcw
pop
xor
xor
jmp
cltd
sub
jnp
and
movl
and
xchg
aam
test
mov
add
mov
mov
mov
sbb
pop
jge
testl
cmp
mov
pop
mov
jo
cltd
mov
stc
adc
hlt
cs
movsb
clc
or
out
mov
lock
sbb
iret
sbb
pop
xor
jmp
in
daa
add
addr16
or
inc
stos
ret
sub
sub
daa
es
cltd
or
mov
cld
out
aaa
push
mov
sbb
repz
loopne
lea
scas
sbb
jp
and
jnp
das
jae
repz
pop
lahf
sbb
xlat
xor
shll
jb
lret
cmp
cmp
push
mov
or
pop
push
push
pop
inc
pop
lock
nop
outsb
movsl
adc
cs
mov
jnp
shrl
daa
ja
cmp
jl
mov
inc
adc
mov
sub
into
dec
fsubs
jo
leave
jg
jno
cwtl
jnp
gs
arpl
mov
test
aaa
fmull
inc
cli
adc
outsl
and
test
aam
sub
aaa
out
iret
lea
dec
fnstenv
adc
push
out
hlt
or
pop
lods
adc
sahf
call
aaa
imul
adc
outsb
push
es
pop
sub
xchg
nop
xchg
out
arpl
cmp
cmc
mov
pushf
jo
lahf
dec
mov
cmc
neg
icebp
pop
das
mov
cmp
cmpsb
xor
pop
iret
fsts
imul
add
ja
cld
jbe
lret
fcmovnb
addb
sbb
mov
or
xor
imul
jns
xor
inc
and
mov
in
cli
xchg
inc
add
daa
sub
or
mov
lds
push
sahf
adc
mov
jecxz
add
sbb
sbb
pushf
in
fimull
js
push
sti
jl
xor
fcoms
div
and
inc
push
pop
jnp
loop
add
xor
push
sbb
lods
sbb
xor
mov
mov
add
xor
adc
lods
clc
negb
fimull
jmp
std
cli
mov
lock
jmp
rorb
out
xchg
xor
pop
loop
and
std
ret
aas
xchg
ret
mov
sbb
enter
mov
xchg
sbb
mov
subb
pushf
test
mov
rcrl
mov
jl
lret
in
cmp
and
movsl
cmpsb
iret
je
mov
std
lods
dec
mov
leave
xchg
movsb
fwait
shl
mov
mov
mov
mov
cmp
jnp
pop
jmp
xor
fbstp
sbb
mov
gs
dec
mov
mov
inc
sbb
stos
pop
ret
adc
shrl
or
imul
or
xchg
test
cmpsb
xor
mov
je
fnstsw
pop
es
adc
pushf
ljmp
mov
inc
ret
sub
push
subb
inc
jmp
cmc
push
xor
push
mov
imul
stos
int3
jae
lret
adc
outsb
gs
adcb
aam
pushf
subb
sub
repz
fmul
lods
and
scas
xor
mov
mov
pop
das
push
push
insb
fnsave
je
nop
and
inc
repnz
lret
lret
push
ret
pop
adc
or
and
xor
les
lret
mov
pushf
mov
adcb
dec
mov
je,pt
data16
jecxz
clc
sbb
fistl
and
push
add
dec
xchg
xchg
fnsave
xor
add
dec
cmpsl
or
jle
xor
test
add
pop
and
inc
mov
mov
scas
insb
addl
push
roll
pop
lock
out
in
mov
cmpsb
xchg
dec
leave
sbb
xor
fs
inc
sub
cmp
dec
stc
xchg
insb
adc
in
jmp
fisubl
lea
loope
push
lock
mov
mov
es
and
rclb
fwait
pop
xchg
out
push
inc
scas
mov
jecxz
xor
push
inc
repnz
push
aaa
sbb
jmp
orb
je
xor
fsubrl
mov
repz
rcr
push
jg
xor
out
xchg
push
adc
fisttpl
outsl
test
mov
loope
cwtl
popf
mov
loope
movsb
mov
and
and
insb
fisubl
mov
aas
test
ds
or
add
and
pop
into
mov
mov
out
cwtl
sahf
cli
int
stos
and
mov
inc
out
adc
mov
mov
sbb
mov
mov
adc
push
decb
dec
divb
loop
repz
and
xchg
mov
or
imul
rorb
and
and
jecxz
shr
pop
pop
push
ret
mov
mov
enter
fisubs
ret
rclb
rorb
ljmp
mov
or
and
data16
lret
mov
sub
cmpsb
clc
jp
xor
add
in
addr16
and
loop
or
subl
aam
mov
mov
xor
lcall
fstpl
mov
cmc
add
loopne
stos
inc
xchg
mov
inc
mov
sub
dec
addb
js
enter
jne
adc
fistl
js
cmc
lds
in
dec
daa
jns
add
xor
xor
in
test
clc
inc
cmpsb
mov
add
sarb
mov
ret
xor
or
or
rcrb
dec
xlat
mov
fdivrp
add
pusha
in
push
leave
push
add
jne
mov
loop
xor
aas
loope
rcl
cli
ja
sub
fidivs
pop
mov
adc
add
adc
mov
adc
jbe
rep
cmp
leave
xchg
pop
cmc
dec
cld
and
push
pop
mov
or
rorb
jno
cltd
jb
iret
push
pusha
nop
js
xlat
push
pop
fldcw
or
ret
sahf
repnz
repz
adc
sub
and
mov
adc
out
mov
or
dec
imull
cmpsl
xlat
shr
lcall
cld
sbb
fwait
js
xchg
pop
call
mov
fidivrl
cmp
sahf
adc
or
inc
xor
xor
cmp
stc
jl
sbb
shll
sub
sbb
ret
mov
or
or
push
cmpsb
repz
sub
subb
or
sarb
rclb
jmp
jne
lock
subb
dec
ja
test
pop
push
in
stc
add
add
popa
or
mov
ljmp
clc
pop
push
addr16
lret
out
push
sahf
rorb
lret
mov
or
subb
pop
dec
xchg
inc
jne
add
dec
inc
and
mov
sub
into
inc
fs
int3
aam
fistl
xlat
aam
out
mov
or
lea
push
in
test
mov
add
cmc
loopne
lret
popa
movsl
loop
or
int
adcl
or
sbbl
subl
pop
scas
sbb
mov
es
sbb
jp
aaa
add
fdivr
sub
int3
add
cltd
daa
pop
pop
jae
into
jle
inc
push
shll
mov
outsb
and
push
sbb
cmc
jo
jp
jmp
xor
and
cld
and
daa
lcall
sbb
inc
jne
leave
insb
jne
aaa
loop
xchg
jb
imul
xor
and
clc
loope
call
sbb
mov
sbb
cmp
out
add
and
cmp
xchg
mov
mov
cmp
add
push
call
cmp
sbb
jecxz
mov
clc
push
jbe
lods
mov
ja
push
push
int3
sbb
or
lock
jmp
and
mov
sbb
enter
mov
push
data16
mov
pop
in
cmp
nop
idivl
or
or
arpl
push
xchg
lock
std
and
or
dec
jbe
fucom
cli
or
push
js
mov
and
stos
aas
mov
add
xchg
jmp
mov
jb
xor
pop
enter
inc
add
mul
cmpsl
adc
out
cld
ss
adc
push
scas
mov
push
movl
add
jl
adc
cwtl
push
js
fldl
in
xchg
xchg
cmp
rol
push
mov
jne
fwait
adc
cwtl
sbbl
and
ret
pop
cmp
cli
cmp
fstpl
cmp
sbb
mov
fisubl
inc
mov
ucomiss
cmp
sbb
les
push
adc
pop
mov
sub
les
fdivrp
fsubrl
inc
jb
mov
and
icebp
in
daa
sahf
cmp
xlat
pop
cld
addr16
xchg
jne
mov
ljmp
fcmove
in
icebp
sahf
pop
pop
fdivl
push
aam
and
hlt
push
pop
adc
push
mov
es
inc
pop
adc
cli
neg
pop
jg
dec
cmp
incl
fdivrp
icebp
inc
adc
jno
cmp
jg
in
stos
clc
cltd
push
dec
imul
nop
cmp
pushf
jge
hlt
dec
cmp
lea
pushf
push
mov
nop
movsb
lods
sbb
popa
aaa
inc
or
mov
mulb
dec
add
shl
jecxz
in
and
mov
or
out
stc
movsb
imul
mov
adc
xor
cltd
push
sbb
in
jne
cmp
sarl
sbb
sbb
xchg
cmp
mov
out
clc
lret
lods
push
fmull
inc
sbb
aad
leave
lock
clc
push
mov
daa
pusha
mov
rorb
add
adc
ljmp
or
mov
jmp
xlat
xchg
mov
pop
jmp
or
movsb
add
cmpsl
push
scas
cmpsb
clc
ret
inc
cmpsl
inc
mov
aad
testl
stc
nop
or
cmp
mov
arpl
mov
fbld
iret
push
or
pop
loopne
stc
adc
pop
and
movl
sub
cmpsl
mov
add
stos
fisubl
scas
xchg
sarl
fstpl
push
fsub
out
pushf
call
iret
pop
in
insl
mov
call
in
imul
data16
rcll
call
jecxz
leave
jmp
mov
xor
sahf
inc
fbld
jmp
les
icebp
push
test
add
ds
arpl
fbld
fadd
and
into
test
lds
aam
pop
loop
loopne
nop
mov
or
inc
das
xchg
mov
cmpsl
cmpsb
mov
out
inc
mov
pop
scas
fsubl
dec
sub
inc
sahf
js
mov
scas
lcall
mov
jbe
gs
cltd
je
lds
mov
addb
lret
addr16
push
ret
push
aaa
mov
add
mov
jno
push
sub
inc
les
out
or
inc
sub
mov
lea
xor
pop
mov
jle
or
stc
jne
arpl
popa
fcoms
push
or
ja
std
imull
dec
sub
imul
lds
sahf
popf
pop
sti
movsb
jb
call
xchg
lods
xlat
in
leave
push
sub
dec
int
ja
mov
jo
pop
cli
jbe
jecxz
jl
stos
lcall
mov
mov
addr16
or
loopne
cmpsb
jae
std
pop
sbb
cltd
insl
shl
push
loope
testl
pop
stc
sub
xchg
fdivrl
mov
or
push
add
xchg
lock
mov
dec
ror
shlb
push
and
mov
mov
jae
testb
push
cwtl
xor
jp
adc
or
ds
sub
aam
out
push
hlt
cs
xor
xchg
or
lret
dec
movl
sahf
int3
and
add
cmp
fisubrl
add
fwait
sub
pop
cmpsl
in
xor
add
lret
mov
mov
inc
sub
loopne
insb
sahf
mov
mov
jmp
jns
jnp
add
jg
lret
sarb
inc
in
cmp
inc
and
sub
and
mov
mull
inc
xchg
pop
and
aam
pop
sub
or
jmp
dec
adc
cmp
dec
cmp
jecxz
js
or
mov
sbb
sub
lret
arpl
jle
xchg
imul
inc
pop
not
and
inc
push
es
jle
out
dec
dec
jno
xchg
mov
sarl
adc
pop
fmuls
adc
ret
xlat
ret
rcrl
mov
aam
jg
mov
data16
jmp
mov
in
and
bound
pop
adc
jnp
mov
stos
fwait
sbb
mov
xchg
jg
push
inc
dec
cwtl
stc
push
mov
sbb
sub
lcall
andb
cmc
or
adc
inc
push
outsb
popa
pop
mov
jne
jecxz
add
data16
push
push
insb
rcr
push
mov
fldl
or
push
or
dec
cld
adc
xlat
mov
out
mov
pushf
fwait
pop
inc
mov
ja
inc
inc
outsb
push
jns
jae
mov
xor
popf
xchg
fcmovnu
sarl
stos
mov
jns
std
mov
xchg
lahf
ds
jmp
call
xor
dec
lcall
out
xchg
addr16
into
push
mov
add
cmp
imull
cmp
int
loope
fbld
mov
push
rorl
jb
jge
mov
jl
and
lds
adc
outsl
sub
jge
mov
jecxz
mov
and
fwait
fwait
mov
mov
pop
xor
incb
cli
and
dec
mov
mov
sub
add
or
leave
call
and
stos
aam
stos
mov
jp
fstpt
loop
test
sbb
mov
jge
loope
leave
les
inc
int
call
shrl
push
mov
sbb
mov
shll
sub
packsswb
xor
out
add
cmc
push
add
mov
fbstp
xchg
cli
sarb
mov
std
cwtl
and
aas
jo
pop
xor
pop
rcrb
out
outsb
cld
andb
pop
add
mov
insb
or
pop
sub
mov
dec
inc
ss
es
daa
xchg
xchg
leave
dec
enter
and
cld
fidivrl
shl
into
add
cmp
inc
and
imul
ret
or
mov
fs
stos
ljmp
and
stc
icebp
ret
andl
jb
cltd
insb
push
rol
outsl
test
add
mov
into
and
or
loope
xchg
test
fnstenv
xchg
icebp
cs
mov
push
ds
aad
add
inc
push
mov
fbstp
cwtl
push
pop
cld
adc
push
jb
xor
xchg
lahf
push
and
cmpsl
sub
mov
das
mov
cmpsl
sbb
pop
xor
xchg
bound
ret
sub
xchg
add
xor
push
xor
add
shll
jecxz
cmp
stos
cmp
cmpsb
cs
lds
out
push
fdivs
xchg
cmpsl
test
mov
xchg
js
push
mov
lret
out
inc
ljmp
fwait
int3
test
xor
push
add
xchg
outsb
mov
jnp
pop
mov
lds
pop
dec
jne
out
xor
sbb
pop
mov
xchg
dec
nop
js
add
xor
sub
pushf
aas
jne
ret
push
ds
cmp
daa
xchg
dec
inc
repz
sub
pop
movsl
lcall
pop
int
sub
xchg
jnp
push
shrl
xor
ret
fsts
in
dec
jne
add
xor
fadd
rcll
shl
or
jp
insb
negl
push
push
mov
ret
mov
add
fs
mov
lock
sub
clc
fdivl
and
je
and
maskmovq
divl
xchg
xchg
and
push
xchg
dec
xchg
sub
mov
push
lahf
push
xchg
push
pushw
mov
dec
mov
iret
sahf
sub
lahf
sbb
mov
pop
pusha
inc
dec
fisttps
jnp
adc
inc
movsl
ss
mov
mov
repnz
sbb
add
mov
cmp
fnstenv
cltd
xchg
jg
dec
jmp
lds
shl
iret
stc
je
xlat
lods
cs
cmpsb
fdivl
add
pop
mov
loope
mov
stc
cmp
pop
push
jae
xchg
push
ljmp
ficoml
pop
ja
cmpsl
dec
mov
xchg
dec
jnp
ljmp
mov
into
pop
jle
push
inc
mov
cltd
add
roll
sarb
xchg
bound
adc
outsb
adc
fwait
cld
inc
lock
xchg
pushw
push
test
inc
or
inc
mov
push
pop
ljmp
push
push
pop
mov
jbe
add
pop
cmp
jb
aas
les
popa
jae
or
pop
cmpsb
push
clc
aaa
orl
movsl
mov
sbb
inc
out
push
clc
add
stc
cmp
jecxz
in
mov
jo
adc
xchg
mov
out
test
xor
push
jbe
nop
scas
cmpsl
orl
jno
adcl
mov
mov
mov
orl
cmp
pop
mov
ss
setae
mov
test
in
loop
cmp
arpl
in
mov
clc
or
lods
pop
rcl
add
mov
repz
cltd
mov
and
xor
aaa
into
mov
cld
adc
imul
mov
cmpsl
sbb
push
mov
mov
insb
cmp
sub
and
or
fsubrl
popf
mov
jb
mov
xchg
loopne
repnz
sub
sbb
rorl
js
cmpsb
cmp
or
inc
xlat
ds
jne
daa
xchg
mov
add
jns
cmc
lea
push
xchg
addl
cmp
imul
lods
mov
or
div
pop
xor
sbb
jns
inc
add
xchg
das
add
push
and
in
daa
mov
xchg
mov
leave
loope
aas
or
leave
push
sub
mov
pop
xchg
add
lods
shlb
mov
push
mov
shll
mov
mov
sbb
mov
mov
sub
xlat
nop
push
and
mov
push
scas
and
sbb
in
pushf
mov
int3
sub
fsincos
xor
ret
popa
inc
mov
je
repz
pop
sti
mov
fwait
xorl
and
adc
jbe
rorl
inc
clc
rcrb
add
xchg
xor
push
int3
cmc
mov
cmp
xchg
call
inc
mov
and
mov
pushf
xor
sahf
sbb
inc
je
dec
pop
mov
cmp
pop
in
xchg
inc
mov
push
cmp
push
int3
inc
mov
iret
inc
mov
aas
in
cmc
mov
fwait
xor
pop
clc
ret
mov
mov
mov
pop
shlb
and
adc
mov
jmp
ss
mov
in
dec
shlb
push
jle
push
mov
stc
xchg
lret
mov
loope
js
lret
lahf
push
movsb
data16
push
test
test
sahf
lea
cmp
test
cmc
imul
mov
rorl
xchg
mov
shll
in
jl
sbb
jp
lcall
mov
sub
mov
jl
mulb
xor
and
insl
test
add
out
cs
insl
mov
and
loope
out
cltd
fcoms
jmp
pop
movsl
and
push
adc
pushf
xchg
push
cmp
or
ja
stc
aas
icebp
lock
ja
jne
or
pslld
aad
repz
or
repnz
dec
cld
sub
out
mov
sbb
das
lods
pavgw
adc
sbb
pop
jb
jmp
pop
sahf
xchg
lret
pusha
or
ja
or
es
push
ret
testb
call
jle
jno
xor
mov
jnp
mov
push
mov
xchg
and
rolb
adc
or
xor
adc
lcall
xchg
loope
dec
sbb
push
mov
adc
lret
mov
popa
popa
jnp
popa
xchg
sub
jb
roll
inc
fisttpll
imul
sub
cmp
pop
icebp
or
lahf
in
mov
pushf
aaa
mov
jmp
or
popf
jl
mov
mov
ljmp
sub
mov
ss
xchg
jo
flds
fwait
dec
pop
cmpsb
xor
int
mov
fsubl
leave
loopne
dec
je
out
fsubrs
jae
or
pop
push
imul
popf
sub
iret
sub
mov
shl
stc
je
maskmovq
testl
pop
loop
pop
stos
cld
mov
pop
mov
inc
ret
xchg
pop
jmp
mov
cmpsb
pop
fdiv
clc
repnz
mov
popa
inc
or
mov
jo
xchg
xchg
inc
jmp
inc
arpl
xor
test
ja
mov
and
repnz
ret
mov
lds
mov
cmp
imul
shll
mov
or
js
andb
cmpl
pop
push
movsb
jne
lea
pop
or
and
mov
test
fldcw
int
in
push
and
rcrl
xchg
nop
loop
fstl
xor
cmpsb
push
dec
js
cmp
bound
mov
out
xlat
and
fwait
aaa
sub
sarb
test
outsl
xor
loop
bound
enter
pushf
and
mov
or
stos
push
js
popa
adcl
cmp
jp
xchg
and
es
jbe
jmp
mov
cmp
adc
dec
jle
bound
or
andl
jecxz
push
cltd
jmp
shlb
mov
popf
jge
pushf
aas
jno
jl
or
mov
test
js
pop
jae
push
jno
mov
shrl
add
scas
jno
cmp
jno
push
cmp
popf
push
or
in
xchg
fs
jns
insb
push
das
xor
bound
push
outsb
dec
movsl
out
and
jns
pop
int
and
push
sub
jns
nop
xchg
xchg
inc
push
cmp
negl
into
pop
mov
addr16
mov
in
inc
push
push
pop
stos
scas
inc
bndstx
dec
into
cmp
or
push
scas
sbb
stos
adc
out
jg
inc
scas
fcompl
xlat
adc
sub
mov
cli
les
movsl
fsub
out
fbld
pcmpeqw
jae
rolb
insl
addl
inc
sub
jnp
or
jg
pop
out
adc
rclb
aas
pop
sti
sbb
adc
xor
out
pop
into
add
iret
std
lea
inc
stos
xchg
std
sub
and
int
fdivs
adc
xchg
inc
or
enter
div
jle
adc
fistl
mov
dec
lds
pop
mov
es
das
ljmp
sub
adc
xor
shl
mov
popa
sub
hlt
and
cmpsb
test
ds
push
ja
xchg
je
jl
gs
pop
icebp
inc
pop
push
jbe
dec
mov
pop
insb
fnstsw
sub
mov
xor
addr16
cmpsl
loopne
sub
push
ficomps
ds
mov
jo
out
inc
nop
mov
jg
cmp
xor
je
jne
sbb
inc
lret
movl
jg
movsb
mov
jnp
aad
test
cld
jl
ljmp
push
mov
mov
dec
out
in
push
shll
adc
lea
cmp
loope
iret
shrb
fsubrl
mov
std
pusha
cmp
inc
jne
inc
ret
pop
or
pushf
inc
insb
mov
dec
mov
mov
mov
and
and
mov
cld
int
push
subb
cli
bound
push
loop
mov
repnz
mull
xchg
lods
imull
sub
out
incb
push
xor
pop
push
nop
inc
enter
cmpsl
dec
inc
cmp
xchg
add
xchg
mov
xchg
int
dec
add
sub
dec
ret
mov
sub
into
mov
or
or
jg
mov
xchg
mov
addl
adc
sub
jle
pusha
imul
cltd
outsb
pop
mov
outsl
pop
imul
clc
rorl
ljmp
pop
cmp
ret
sub
sub
inc
arpl
dec
outsb
iret
xor
shll
mov
inc
sub
test
aad
dec
sub
sbb
mov
enter
leave
inc
rcrl
xchg
dec
push
mov
mov
shlb
pushf
pusha
add
sbb
xlat
pop
sub
jno
std
mov
ret
mov
dec
pop
shrl
bnd
out
bound
push
or
call
and
dec
sbb
jne
add
loope
aad
test
jne,pn
bound
xchg
repnz
clc
movsb
addr16
push
xor
es
push
cltd
push
outsl
fprem1
jp
mov
hlt
sub
jmp
xchg
lret
out
lret
add
sub
jp
push
xor
inc
mov
shr
outsb
adc
sti
into
pop
into
adc
mov
cmp
cmp
dec
repz
je
dec
loopne
sbb
insb
push
inc
sbb
clc
sbb
jno
pop
jmp
mov
lods
lock
inc
cmp
sbb
jbe
addr16
xor
nop
shl
mov
testl
mov
mov
xor
enter
leave
sbb
dec
lods
outsl
adc
and
sub
mov
clc
out
negl
ja
icebp
fsub
sub
bswap
adc
es
inc
jg
shl
or
jge
jae
push
sub
scas
cltd
ret
sahf
insb
sub
test
stc
push
lret
dec
outsb
icebp
in
push
stos
xor
addb
subb
lods
and
or
lods
inc
aaa
and
xchg
mov
repz
push
mov
dec
dec
out
push
mov
pop
push
popf
imul
shll
jo
in
sub
push
mov
mov
mov
fbld
inc
xchg
inc
jno
sahf
pop
and
mov
daa
fnstsw
or
inc
xor
call
sub
hlt
jecxz
adc
daa
cmpsl
je
mov
out
push
sbb
popa
cwtl
xchg
xor
xchg
xchg
cltd
mov
in
mov
add
pop
mov
jp
cmp
sahf
icebp
mov
push
mov
jo
pop
cmp
mov
mov
enter
add
inc
lods
movsl
add
mov
jmp
cmp
mov
ss
sbb
hlt
outsb
into
xchg
std
scas
or
pop
addl
daa
dec
ljmp
ja
jnp
lea
inc
mov
push
cmpsl
lret
aas
cmpl
test
sbb
mov
dec
jb
jmp
mulb
faddl
mov
cmp
push
scas
pop
cmc
notb
adcb
out
push
fisttpll
dec
sbb
icebp
mov
dec
push
icebp
jae
jmp
shlb
sub
and
insl
xlat
scas
cmp
call
lods
cmp
lods
sbb
stos
stos
push
in
jle
inc
ss
jbe
xchg
test
repnz
loop
adc
cmp
add
pushl
lods
sub
xor
in
jno
cmp
or
jle
out
inc
pop
lds
push
adc
fdivrl
xor
rclb
push
xchg
aas
testl
sub
jp
mov
imul
xor
adc
push
in
pop
repz
test
inc
test
sub
inc
and
jo
xchg
pop
cli
dec
push
or
std
gs
xor
dec
xor
cmp
push
or
orl
cli
pop
ret
pop
xchg
dec
mov
lods
pop
sbb
pop
jbe
cmp
adc
sbb
mov
xchg
fnstsw
pusha
sbbl
mov
rclb
and
and
lock
jae
push
pop
out
mov
xor
sahf
mov
flds
inc
push
cld
push
ficompl
fs
add
ljmp
sub
mov
pop
xor
xchg
mov
cmc
mov
clc
add
xor
mov
sub
add
sub
cmpsl
lock
push
adc
cli
adc
sbb
shr
enter
lea
or
jae
dec
into
jbe
popf
dec
mov
sti
lds
inc
fisubs
jl
push
ficompl
mov
mov
dec
js
lods
jbe
rcrl
mov
mov
test
jno
push
lock
inc
jo
add
jmp
je
mov
stos
fwait
scas
push
stos
dec
jecxz
push
cld
sti
mov
subb
xchg
jo
add
fs
sbb
addr16
mov
fs
add
adc
aaa
imul
lock
dec
add
cmp
inc
mov
fcomip
lcall
and
fucomi
or
repnz
test
cmp
mov
mov
cmpsl
mov
lea
int3
sbb
bound
enter
push
adc
dec
inc
pop
xlat
cmc
dec
push
dec
nop
subb
add
imul
shll
mov
mov
out
or
dec
aaa
push
pop
adc
xor
jecxz
jmp
scas
rcrl
stos
mov
push
mov
or
push
jno
push
push
add
push
cltd
mov
cmp
iret
lods
add
push
fnstenv
mov
mov
and
dec
xor
push
lahf
and
orb
cmpsl
imul
inc
pop
or
pop
pusha
scas
out
fsubrs
mov
lods
mov
mov
mov
loope
dec
and
stc
std
pop
jbe
dec
insb
inc
pushf
mull
adc
sub
int3
cmp
cltd
cmpsl
imul
adc
sbb
mov
and
adc
lcall
push
in
push
dec
add
push
xchg
movsl
xchg
push
fxch
lahf
mov
sub
sbb
pop
pop
mov
xchg
mov
movb
into
xchg
ret
jl
xor
sub
sbb
cmpsl
std
inc
dec
xor
bound
cmp
xchg
dec
xor
stos
jno
subl
jge
mov
sub
mov
sub
int
fyl2x
into
scas
pop
ret
xlat
pop
mov
lds
adc
mov
rcrb
and
push
sbb
mov
jno
in
inc
jbe
xlat
out
in
out
cmp
xchg
sub
popf
jle
outsb
mov
and
xor
ds
and
push
stc
aaa
cli
sub
mov
cwtl
inc
clc
push
iret
dec
dec
shr
in
pop
jge
xor
hlt
rcrb
push
xor
mov
inc
rcl
test
mov
cmpsb
rcr
enter
cmp
cld
jl
loop
inc
lods
addb
sbb
insb
andb
stc
sub
ficompl
mov
mov
shrb
mov
mov
and
lock
push
mov
mov
fldl
es
pop
aas
rcr
inc
mov
les
std
mov
xor
lcall
fwait
movsl
adc
or
adc
inc
mov
and
popa
fisubrl
adc
cld
es
add
roll
push
push
cmp
push
popa
mov
inc
daa
repnz
idivl
inc
insl
pop
adc
jmp
repz
cmp
or
lods
dec
jle
pop
sub
ret
lods
lcall
sbb
repz
mov
mov
and
clc
repz
push
jno
lods
mov
ficomps
orl
push
mov
int3
mov
cmp
scas
push
out
add
in
popf
sub
sub
xchg
jo
imul
xchg
popf
jg
push
push
sbb
ja
cmp
jno
and
add
push
push
andl
inc
aam
add
out
adc
or
loop
je
int3
into
mov
adc
and
test
push
cs
pop
jae
mov
pop
test
pop
call
jge
lahf
roll
xchg
std
in
jb
and
xchg
dec
and
test
inc
add
out
pop
sub
cmp
xchg
xor
in
xlat
movsb
sub
mov
sti
lret
mov
sarl
push
movsl
bound
inc
dec
movsb
mov
jno
sti
int
jae
sub
pop
adc
and
hlt
mov
shlb
mov
cmp
jmp
lret
mov
out
pop
jl
push
adc
xchg
push
test
in
loopne
in
sbb
je
push
and
push
loopne
dec
jae
jns
pop
aam
dec
in
xchg
insl
push
dec
sbb
mov
mov
xor
roll
testb
add
or
sbb
sbbb
cmp
mov
js
ja
push
pushf
aad
outsl
mov
notl
loop
in
ret
xor
push
pop
or
push
sub
jnp
dec
mov
add
rcl
add
andl
cltd
or
das
popa
or
imul
iret
xorb
or
test
and
fildll
outsb
mov
xor
outsb
jne
mov
stos
into
mov
push
sub
sbb
jg
inc
xor
add
lea
js
push
idiv
mov
sbb
jne
dec
mov
mov
dec
xchg
jge
mov
leave
iret
mov
dec
mov
aaa
repz
pop
loopne
jmp
inc
test
and
ds
mov
xchg
pop
loopne
mov
pop
xor
gs
clc
dec
and
rolb
out
mov
cld
lret
cmp
movsl
pushf
paddusw
mov
ljmp
add
xor
jmp
xchg
jno
cmp
pop
jl
xchg
or
or
jno
jo
sbb
fsubrl
lret
cmpl
iret
inc
test
repnz
lcall
jecxz
inc
subl
movsl
lods
movsl
xchg
or
cmpsl
out
lret
hlt
mov
pushf
jge
xchg
ljmp
ja
sbb
and
repz
mov
lret
xchg
add
mov
sbb
and
mov
add
push
lahf
loope
xor
les
push
das
or
insb
pop
daa
mov
mov
jae
push
jmp
rcl
dec
cmp
mov
sub
add
and
mov
lds
xchg
xor
cli
stos
fs
ficompl
sbb
push
notb
std
lahf
stc
mov
inc
and
pop
sar
push
inc
jge
xchg
test
fwait
vsubps
inc
loop
cmp
hlt
inc
hlt
and
mov
and
pop
xchg
inc
mov
inc
orb
or
icebp
lea
inc
pusha
mov
jge
and
lret
add
dec
xchg
adc
lret
outsl
cmc
lock
into
mov
cmp
andl
int
insl
pop
xchg
cwtl
ret
add
mov
inc
movsl
xchg
push
push
or
sbbb
out
and
dec
mov
mov
mov
xchg
pop
cmpsb
popa
jae
inc
hlt
push
jno
xchg
out
fdivrs
mov
or
xor
scas
push
mov
adc
pop
iret
xchg
stc
lret
dec
addr16
pop
test
and
fsubl
cs
adc
mov
int3
adc
cs
shr
xchg
mov
ret
dec
mov
pop
cmp
fwait
mov
push
push
fstl
and
pusha
adc
push
or
daa
fs
cmp
pusha
xlat
push
fs
dec
or
aam
sarb
mov
mov
mov
int
stos
inc
nop
push
jmp
in
and
lods
add
bnd
mov
pop
sub
inc
push
cmp
sbb
sbb
stos
test
lods
rorb
jnp
and
jns
pop
add
xchg
mov
mov
push
out
xlat
inc
insb
lahf
lret
out
rorl
cmp
jl
frstor
cs
js
mov
xchg
jmp
gs
test
fcompl
out
fldcw
inc
imul
cmp
adc
or
xchg
cwtl
ret
iret
movhps
pop
sbb
mov
jge
insb
lret
test
and
insl
sub
repnz
test
pushf
push
sub
sbb
test
je
sarl
jmp
inc
cmpsb
pop
mov
out
cli
movsb
jmp
pop
mov
jg
add
add
xor
outsl
adc
stos
mov
sub
outsb
lods
cmp
orb
dec
pushf
push
pop
mov
sbb
jne
fsts
xor
xchg
xchg
mov
and
xor
clc
mulb
add
in
push
sub
or
sbb
push
jg
jl
mov
and
cmp
pop
in
insl
mov
pop
and
movsl
mov
rcll
jmp
push
outsb
fidivl
xchg
call
pop
imul
cmp
rclb
cmp
clc
popa
dec
jne
arpl
mov
push
jge
aad
sbb
mov
lret
xchg
or
int3
insb
mov
aad
lds
pop
push
adc
push
inc
cmpsl
scas
xor
mov
mov
mov
mov
inc
bound
in
stos
pop
dec
sbb
and
fisubs
ds
mov
sub
jo
jge
jl
mov
sub
xchg
sub
popf
out
or
jae
and
imulb
xor
xchg
rcrl
cs
cmpsl
xor
sahf
hlt
add
icebp
jns
jne
jbe
xchg
xchg
mov
nop
add
pusha
cmp
nop
adc
stos
sub
and
mov
add
cwtl
lea
add
pop
test
and
stos
scas
or
stos
jae
fs
mov
push
push
jbe
int
mov
pop
sti
mov
int
insl
movsbl
mov
addl
shlb
xchg
repnz
dec
jecxz
add
or
mov
insl
cltd
sub
or
bound
mov
xchg
inc
std
and
int3
lea
imul
jns
sbb
push
insb
lods
int3
pop
and
cmp
rol
hlt
xor
stos
lahf
dec
xchg
fldln2
cmp
bound
jmp
aas
xor
cs
cmpsb
jp
loop
jo
adc
mov
arpl
jle
test
enter
flds
adc
cmp
lret
repnz
adc
aaa
jecxz
ficoms
mov
jg
loop
enter
or
cwtl
cmpsl
sarb
xor
add
xchg
lcall
loopne
enter
add
mov
std
mov
xchg
jno
and
das
scas
push
insl
je
mov
ljmp
pop
xchg
sahf
or
fldenv
mov
push
ss
jp
add
mov
mov
lcall
push
mov
mov
push
int3
ds
push
das
sbb
les
dec
inc
jnp
lret
mov
jg
pop
out
push
cmp
ret
push
mov
loope
pushf
mov
test
lret
lret
mov
popf
jns
outsb
xlat
out
test
rcll
jg
mov
lret
cld
bound
outsl
loope
adc
imul
dec
cmpsb
push
cmpsb
insb
clc
test
cmp
mov
cmp
outsl
fiadds
pop
fisubl
cmp
mov
push
cmp
das
addr16
lods
jne
fdivrs
xor
cmp
lds
test
je
das
sahf
sub
ret
push
outsb
xor
stos
ds
jle
push
mov
and
dec
outsb
jmp
call
lcall
add
mov
xchg
cli
imul
data16
push
dec
xchg
sti
xchg
add
mov
and
jne
mov
inc
mov
cltd
cmp
mov
pop
imull
lea
mov
or
xchg
inc
jle
lahf
dec
fnsave
es
je
pop
inc
sbb
push
jne
int
pop
enter
outsb
das
scas
iret
add
fcmovb
jecxz
ss
xchg
add
mov
jg
mov
mov
nop
adc
push
dec
int
dec
push
int3
sbb
pop
xor
mov
movsl
das
subl
mov
dec
xlat
insl
hlt
sahf
fs
inc
mov
pop
aad
sbb
aam
call
rcrl
mov
dec
push
mov
push
das
into
dec
cmp
lods
cs
rorl
and
jo
jle
scas
std
lcall
ficompl
cmpsb
add
in
xchg
mov
inc
test
sbb
adc
fwait
jmp
inc
jne
mov
nop
mov
or
jnp
in
adc
cmp
cmp
jecxz
xor
fs
push
xchg
sub
cmp
sub
sub
push
aad
addr16
fistpll
mov
and
inc
mov
pop
jb
lcall
inc
ret
sbb
push
out
jne
dec
imul
push
mov
loope
dec
push
into
add
cltd
js
mov
and
add
mov
popf
mov
sbb
daa
xchg
add
repz
jnp
in
adc
into
push
dec
sbb
out
mov
add
loopne
mov
jp
xchg
pop
xchg
adc
mov
gs
add
dec
les
test
imull
sub
roll
fsubrl
aas
sbb
gs
mov
mov
rcll
inc
mov
and
in
test
sahf
je
mov
mov
cs
mov
sub
loop
cmpxchg
dec
lods
roll
xchg
shrd
fidivrs
sub
mov
cld
fbld
out
cmp
cmp
scas
push
push
popf
mov
imul
pusha
push
cltd
add
mov
loopne
mov
xchg
test
adc
xor
mov
sbb
jae
mov
lea
xchg
xor
push
les
mov
ror
or
mov
ja
mov
dec
cmp
aaa
shll
xor
imul
lret
sub
sbb
in
push
pop
aam
jl
add
cltd
mov
fistpl
xchg
lcall
cltd
mov
mov
cmpl
xchg
xor
pushf
mov
sbb
es
lea
and
cs
mov
cmpsl
lea
fists
push
insl
pop
std
pop
divl
test
xsha256
cmpsb
xchg
std
add
pop
pop
jle
out
push
pop
lea
and
lea
subb
push
repnz
pop
cli
in
sbb
pop
fwait
inc
add
and
inc
imul
rol
dec
xor
cmovns
daa
add
scas
enter
mov
pop
mov
or
adc
cmp
add
adcb
xor
mov
das
icebp
js
lcall
push
xchg
lock
sti
xchg
jmp
ds
out
xor
push
test
xchg
pop
adc
dec
mulb
sub
and
add
jbe
dec
icebp
insb
mov
stc
in
pop
inc
je
add
mov
add
scas
fimuls
ficompl
daa
sbb
sbb
dec
repz
mov
push
mov
add
mov
ret
jp
and
mov
in
push
sbb
add
fwait
jecxz
int3
xchg
or
add
int
and
xchg
mov
xor
and
sub
xchg
push
inc
cmp
in
inc
sbb
jecxz
fnstsw
mov
call
aam
or
pushf
divps
and
lods
or
sub
jg
insl
adc
fcompl
mov
movb
outsb
pop
int
movsb
fdiv
push
sub
mov
adc
jo
bnd
push
xchg
shll
lret
addr16
outsl
cld
pop
outsl
jo
jg
jae
lret
add
mov
sbb
adc
call
negb
mov
sub
aas
adc
sub
cmp
push
cmp
dec
pop
inc
pop
cli
stc
xchg
ja
and
mov
dec
cmp
mov
cld
jno
insl
pop
stc
rcl
xor
stos
out
and
adc
or
sub
jno
rcll
mov
cltd
xchg
sti
sbb
xchg
mov
imul
xchg
lods
cmp
inc
mov
push
ja
pop
fldt
xor
jmp
or
std
or
cs
scas
inc
mov
jno
in
sbb
push
fwait
push
addr16
sub
fistpl
mov
jb
dec
scas
sbbl
cwtl
imul
jns
lret
in
cwtl
enter
int
add
and
movsl
pop
mov
push
leave
popf
in
mov
cltd
mov
pop
adc
dec
pop
push
pop
aam
ja
and
mov
mov
arpl
push
mov
jmp
hlt
mov
outsb
push
fldt
testb
cvtpi2ps
loopew
pop
loop
popa
nop
xor
out
loopne
pusha
out
pop
mov
int3
mov
xchg
push
pushf
stos
rcrl
int
or
cmp
clc
lds
and
jmp
loope
bswap
push
xorb
in
push
in
fs
imull
bound
push
or
xor
mov
pushl
cltd
es
add
arpl
pop
dec
mov
push
jns
repz
fiaddl
mov
push
mov
xchg
pop
in
es
pusha
test
outsb
xchg
pop
inc
cmp
xor
mov
jle
les
or
aam
mov
xchg
pusha
mov
shrb
inc
and
or
aam
inc
cmovbe
insb
testb
pushf
jmp
scas
shll
lret
out
lret
mov
jnp
rcl
dec
pop
cltd
pusha
fsts
add
mov
std
leave
mov
xchg
ret
aam
inc
adc
test
test
mov
or
xor
aaa
sahf
pop
lret
pusha
xor
push
out
inc
mov
loop
les
shrl
push
and
pop
test
sub
daa
jns
movsl
mov
jns
sub
mov
xor
cld
push
sarl
push
lretw
mov
scas
or
movsb
ror
adc
inc
cmp
mov
pop
out
inc
cmp
inc
and
xor
movsb
inc
add
xchg
movsb
sbb
or
shrb
xor
aad
nop
mov
inc
mov
or
out
fwait
add
jbe
dec
inc
push
pop
jbe
push
stos
or
std
cmp
inc
jb
add
jnp
repz
nop
int3
sbb
adc
sub
jb
or
jmp
lret
pushf
mov
dec
and
sarb
cmp
and
lret
cmp
inc
jns
outsb
push
cmp
mov
loopne
fwait
ret
in
cmp
sar
xchg
push
cmp
xchg
xor
adcb
push
dec
lock
imul
movsb
js
xchg
out
scas
mov
and
std
orl
mov
pop
inc
stos
pmaxsw
js
push
out
mov
dec
inc
dec
mov
jmp
push
dec
iret
addr16
inc
subl
stc
ljmp
ret
push
test
aam
add
mov
mov
mov
sub
xor
lret
ds
pop
test
dec
sbb
and
or
push
lahf
sbb
scas
xchg
fadds
and
data16
or
js
dec
sub
xlat
es
fldenv
inc
push
and
xchg
xor
sarb
push
mov
xor
test
ret
jnp
fstpl
cmp
jl
out
fsubrp
insb
pop
mov
aad
es
outsl
sub
sbb
dec
fidivrs
xor
push
push
xchg
mov
test
cli
cli
cwtl
jg
push
es
inc
imul
sbb
fdiv
out
xor
xlat
xor
inc
mov
cmpsb
adc
movsb
add
sub
js
sbb
sub
dec
pop
adc
sbb
jmp
push
sub
inc
push
fdiv
mov
scas
cmp
dec
pop
addb
cmp
insb
scas
mov
outsb
inc
cmpsb
pop
std
mov
jmp
dec
cmp
sub
ret
aas
jne
and
sub
pop
mov
pop
shrb
cmp
lret
mov
icebp
and
inc
push
xor
push
test
xchg
mov
sbb
rorl
ss
fbstp
gs
push
repnz
scas
fldl
mov
mov
mov
adc
in
in
addr16
leave
and
mov
imul
inc
push
or
pushf
lock
inc
fldenv
movsl
inc
cmp
cmp
negb
enter
jb
int3
daa
push
cmc
jae
and
iret
fldt
dec
mov
cmp
das
in
mov
aam
mov
in
repnz
sti
pop
cmpsb
xchg
pusha
push
mov
dec
ljmp
xchg
push
or
lods
call
or
cmp
or
jl
cmpb
mov
mov
gs
mov
mov
rorb
decl
test
or
mov
jae
xor
cmc
mov
sahf
test
mov
jae
jg
stos
mov
pusha
push
mull
mov
mov
dec
incb
xor
jns
dec
sar
inc
scas
sub
mulb
jg
xlat
std
pop
fnsave
xor
pop
mov
icebp
xchg
push
mov
or
stos
lcall
add
xor
fisubrs
into
ss
add
fs
ljmp
xchg
mov
and
or
jae
pop
js
popf
aad
shl
stos
inc
mov
dec
loop
jmp
sar
negl
adc
fstpt
jae
shll
pop
loopne
inc
mov
jne
mov
inc
inc
out
mov
push
popf
pop
notb
es
jne
shrl
jno
cmpb
adc
mov
fmul
add
lahf
mov
mov
push
sub
outsb
add
push
push
mov
lahf
cltd
lahf
sub
dec
jle
sub
cld
out
mov
sub
aas
cmp
mov
loopne
lret
mov
dec
inc
cmc
cltd
xchg
or
notl
lods
xchg
aam
ret
sub
stos
lret
and
dec
sbb
pop
cmp
loop
or
lret
cmp
xchg
psrld
std
jae
adc
cld
xchg
push
add
mov
pop
test
scas
inc
mov
popa
mov
inc
sub
push
fisubrl
ss
mov
popf
jae
int
sub
fstpl
xor
in
mov
gs
ss
xor
push
mov
sti
pop
clc
call
cmp
rorb
sbbl
repz
sti
pop
inc
dec
adc
xor
cmp
pop
loop
mov
mov
cmc
nop
divl
imul
mov
repz
lahf
adc
adc
jp
jnp
int3
xchg
dec
lods
jne
out
test
adc
sti
dec
jp
mov
popf
mov
shl
nop
scas
lock
sbb
cmp
mov
stc
xor
pop
in
xchg
loope
pop
cli
std
push
push
shll
sub
lahf
stc
mov
mov
int
push
popa
flds
hlt
pop
test
cmp
ret
adc
sub
xor
mov
and
or
push
push
or
popf
inc
cmp
and
pushf
push
sti
mov
call
mov
sarb
push
fsub
sub
add
std
jp
sbb
imul
mov
mov
sbb
jb
sbb
js
imul
stc
jns
pop
jae
idivl
mov
fmuls
xor
sub
add
cmp
test
and
adc
lock
sbb
sub
imul
jp
nop
test
mov
lds
xor
lret
or
push
popa
and
pop
adc
pop
sbb
push
pop
lret
adc
mov
jnp
rcl
jp
fmull
decb
cmp
sti
icebp
mov
mov
cmpsb
fldenv
and
repnz
into
stos
lahf
in
push
inc
hlt
xor
jne
and
dec
int3
sbb
bound
mov
cmp
ss
in
sbb
test
sahf
jne
loope
gs
cld
cmc
inc
mov
repnz
and
popa
jo
push
adc
push
cmp
or
mov
pusha
xchg
je
and
int
pop
scas
push
add
or
jg
out
push
jns
add
xor
bound
push
adc
mov
inc
jl
popa
dec
repnz
push
call
xchg
cli
jne
mov
fnstcw
or
imul
fxch
pop
push
int3
scas
mov
or
andl
xor
mov
xchg
test
xor
and
lahf
fldt
fistpll
cld
dec
adc
push
sarb
loope
add
ficoml
std
jb
cmpsl
mov
push
xchg
shlb
push
loop
clc
je
js
sub
xchg
mov
stos
mov
dec
insl
jp
stos
sub
iret
push
cmp
cmc
es
sub
frstor
pushf
mov
xor
cmpl
jae
add
in
jnp
xchg
lret
sbb
sbb
lcall
ficomps
xor
jne
lock
push
xchg
jbe
pop
push
scas
mov
push
cmpl
jmp
cmp
push
sbb
leave
loopne
pop
jl
into
pop
push
sub
cmc
int3
fldenv
add
call
xor
or
dec
out
loopne
cld
loop
addr16
incl
mov
imul
and
insb
mov
stos
mov
clc
pop
sub
ss
ret
adc
aad
cmc
dec
js
add
add
div
in
pop
in
js
pop
jo
inc
dec
mov
test
mov
cmpsl
shlb
cli
and
and
insl
jmp
pop
and
push
adc
aad
fmuls
shl
jno
mov
push
xchg
pop
stc
and
repnz
ja
test
dec
sbb
lock
stos
call
pop
popf
jbe
cmc
sub
dec
xchg
xor
xor
sbb
jmp
cmp
int
aaa
or
push
jmp
fchs
dec
pop
push
mov
dec
imul
mov
loop
int
ja
push
push
xor
rcr
add
pop
pushf
nop
loopne
mov
pop
arpl
mov
dec
nop
rolb
mov
fidivrl
xor
leave
jnp
jae
xor
clc
mov
sbb
push
cmpsb
rcll
jl
cmp
aas
dec
cmp
dec
data16
mulb
test
test
push
jo
fs
inc
jne
or
xchg
out
ss
loopne
pop
mov
fnstenv
mov
mov
nop
incl
addr16
push
dec
mov
fcmove
pop
dec
push
rcr
and
xchg
std
xor
jecxz
jns
out
add
std
mov
push
sub
adc
jmp
test
mov
add
push
subb
pop
dec
jg
imul
mov
test
jae
add
lds
jp
sub
or
rcr
stos
adc
rclb
xor
loop
push
pop
mov
xor
inc
and
fld
cmp
sahf
scas
pop
enterw
sub
push
jecxz
xchg
mov
add
imulb
insl
sbb
mov
mov
sbb
mov
mov
xor
mov
inc
imul
xor
jnp
ds
test
test
inc
out
adcb
scas
cmp
jbe
popa
mov
mov
xor
jmp
push
jp
rclb
dec
test
push
push
xchg
xor
out
pop
add
xchg
cli
mov
xor
clc
movsb
movsb
jl
mov
jmp
push
lock
es
inc
test
imul
out
iret
outsl
or
pop
xchg
mov
push
stos
xchg
jbe
inc
dec
push
shl
or
mov
outsb
movsl
inc
dec
adc
adc
push
cmp
xor
mov
pop
ljmp
mov
cltd
add
jb
out
sti
jne
sbb
mov
cli
out
add
shlb
pop
fsubl
sub
es
xor
orb
lods
xchg
lret
ss
cmpsl
mov
mov
xlat
fdivr
std
pop
mov
xchg
dec
pop
mulb
jae
popa
push
jmp
stos
and
jecxz
dec
xchg
sahf
mov
or
push
mov
adc
dec
xchg
jne
jp
push
stos
aas
lcall
mov
xchg
cs
stos
sarb
dec
aaa
mov
xchg
dec
push
lret
adc
push
lcall
sub
imul
pushf
push
mov
xor
cltd
test
push
pop
cwtl
and
jnp
jecxz
inc
repnz
ret
mov
adcl
add
loopne
jne
andb
inc
cli
add
jne
adc
loope
sarl
cmp
jns
inc
jmp
or
add
lods
xlat
adc
xchg
xor
sbb
xchg
nop
mov
ret
dec
das
jbe
enter
pop
mov
push
add
ljmp
jns
sbb
mov
dec
cmp
jle
xor
add
sbb
mov
push
xchg
pop
adc
jne
pop
and
adc
push
aaa
mov
adc
add
pusha
out
cwtl
ret
cmp
xchg
fstpt
enter
insl
inc
ja
mov
pop
jo
pop
lret
aas
xchg
or
dec
xor
mov
outsb
jmp
loope
mov
push
out
sub
lret
add
sub
push
xchg
enter
out
ret
and
rcrl
xchg
jp
xchg
in
push
fiaddl
aam
mov
rcll
mov
add
les
pop
add
inc
and
add
push
mov
into
xor
push
out
or
jg
mov
daa
and
and
stos
in
cli
cwtl
push
xlat
push
xor
jmp
in
mov
loopne
push
pop
loopne
lcall
mov
test
cwtl
pusha
and
loope
in
sbb
or
scas
idivl
in
pop
mov
stc
push
pop
lea
dec
out
mov
mov
mov
bound
and
in
jae
into
call
mov
cmp
hlt
fisubrl
add
cmp
xchg
inc
and
out
push
loop
pop
sti
sub
dec
jns
test
icebp
jmp
sbb
movsb
jle
inc
xchg
pushf
sbb
add
je
mov
lock
ficoms
mov
mov
cwtl
jo
xchg
or
daa
cmc
lea
repnz
xor
rol
outsb
call
add
mov
pop
or
test
arpl
scas
mov
into
sub
ficompl
or
add
dec
cmp
push
jmp
jg,pn
pusha
shrl
push
cmp
shl
test
test
rcrb
es
fmul
jge
push
ret
push
roll
mov
pusha
aaa
aam
and
getsec
push
xchg
stos
push
dec
loope
cmp
in
and
test
imul
cmp
adcb
cwtl
jb
push
repnz
dec
jo
cmp
mov
les
stos
sbb
or
pop
leave
mov
sub
stos
mov
or
push
mov
dec
mov
fists
dec
loop
insb
or
loope
mov
mov
dec
loope
lret
mov
or
push
push
jg
loopne
mov
andl
adcl
into
stc
scas
jge
xchg
into
mov
rolb
in
rcr
inc
bound
sub
push
insb
cmp
xor
adc
es
sbb
test
in
dec
hlt
mov
int
out
cmp
jge
sbb
pop
sub
loop
aas
insl
or
inc
push
push
or
push
push
loopne
sar
decb
sub
pusha
js
or
mov
and
push
inc
adc
cmp
sub
mov
ss
fcoml
push
xchg
stc
add
lods
inc
test
xchg
and
dec
pop
hlt
and
add
jecxz
lcall
xchg
bound
mov
andl
sub
mov
das
movsb
clc
adc
fld
mov
pusha
push
fists
pop
cmp
repz
mov
add
mov
fsub
inc
sbb
and
and
mov
iret
sub
dec
add
sub
xor
in
filds
or
mov
sub
cli
stc
dec
inc
push
pop
arpl
xor
test
mov
pushf
int
xor
push
sahf
incl
jne
push
xchg
pop
imul
ss
xor
mov
sub
sbb
push
cld
in
mulb
repz
mov
sbb
or
frstpm(287
inc
push
dec
jns
lret
mov
test
or
fwait
mov
in
jb
push
add
mov
ja,pt
inc
movsl
movb
add
in
adc
xchg
sarl
pop
sbb
jp
sub
adc
jbe
inc
xchg
cld
or
or
enter
sub
rolb
sbb
movl
sbb
divl
push
xchg
notb
mov
mov
xor
cmp
jno
stos
sbb
hlt
jbe
push
sarl
test
push
dec
cli
mov
xor
sti
ffree
xor
fdivrl
sub
dec
cwtl
lds
xchg
dec
clc
adc
jl
mov
pop
pusha
add
inc
push
cmpsl
xor
mov
call
hlt
push
je
inc
jmp
sub
clc
mov
or
sbb
fwait
out
hlt
andb
mov
test
popa
push
cwtl
sub
fidivrl
push
or
or
fneni(8087
xchg
outsb
mov
ds
pop
ss
loope
cli
pusha
push
pmulhw
xorb
cmpsb
js
pop
dec
loop
xor
js
add
xor
inc
scas
out
dec
mov
push
gs
jge
stos
xchg
enter
adc
push
push
in
mov
adc
mov
xchg
repz
pop
filds
aad
mov
cltd
jecxz
pop
sbb
out
mulb
dec
sub
lea
or
dec
jnp
mov
rcrb
leave
loop
ljmp
pop
imul
hlt
add
dec
imull
dec
std
pop
mov
popf
xor
or
mov
add
inc
xor
mov
hlt
leave
lds
push
cmpsb
xchg
cli
loop
jl
mov
lock
das
xchg
int
mov
xorl
cs
jmp
cmpl
sbb
imul
xchg
pop
test
and
adc
sub
jbe
and
rorb
add
lods
rcrb
and
or
push
rcrl
std
mov
mov
push
int3
jg
int
push
mov
out
repnz
mov
add
mov
arpl
or
xchg
ret
hlt
xchg
xor
mov
jge
addr16
repnz
mov
mov
adc
inc
pop
xor
mov
push
xchg
add
xor
xor
and
xor
cmp
cmp
out
shl
and
cs
inc
clc
mov
enter
or
js
mov
mov
add
xor
sbb
dec
add
push
xchg
pop
mov
pop
fbld
out
fwait
jae
mov
mov
loop
fcoms
test
fmuls
cmp
xor
out
mov
popa
jns
repz
jmp
and
sti
push
daa
pop
pop
inc
cmp
outsb
cmp
mov
push
cld
mov
sbb
in
lods
sub
enter
test
clc
cmp
lods
mov
sub
xchg
xor
mov
rcl
in
aad
or
repz
stos
cmp
ja
sbb
and
xor
ljmp
or
shlb
ret
daa
stos
jns
jge
cmc
in
mul
or
push
mov
or
aad
xchg
or
enter
frstor
adc
orb
jae
push
sub
inc
fidivs
xchg
add
mov
leave
mov
push
loope
negl
dec
mov
sbb
mov
push
mov
lahf
fsubl
rorl
pop
xchg
mov
mov
cmp
sti
inc
imul
mov
pop
jbe
leave
leave
mov
ret
inc
cld
test
mov
mov
les
int3
test
sbb
js
pop
nop
jae
stos
jge
pop
cmp
cltd
pop
mov
cmpsl
and
cmp
repz
fnstsw
push
idivl
jmp
pop
jp
adc
in
ror
aaa
decl
inc
shll
dec
mov
into
lock
lret
shl
insb
push
and
cmpsl
or
divl
in
or
testl
mov
test
jp
sub
pushf
dec
pop
movsb
jg
mov
adc
cli
or
icebp
jecxz
jne
mov
jno
cmpsl
fldt
sub
push
cltd
sbb
sub
xor
ja
or
inc
and
dec
dec
mov
cld
sub
jae
in
mov
jae
dec
cmp
jl
aad
fmuls
loope
sub
add
bound
push
dec
rol
push
sbb
shll
sub
hlt
fimull
jns
mov
push
add
adc
fists
xor
dec
pop
dec
dec
movsb
mov
mov
fnstcw
mov
jecxz
dec
fnsave
sub
movsw
js
mov
xchg
das
xchg
inc
pop
mov
or
push
dec
stos
mov
pop
insl
cmp
push
push
pop
mov
pusha
aaa
ret
or
pop
jg
subb
pop
enter
lock
push
mov
aaa
mov
std
xor
adc
jmp
jne
mov
xlat
xchg
aam
nop
adc
icebp
sub
lds
lret
cmp
adc
add
pushf
jae
lods
shlb
push
pop
sbb
push
dec
lahf
add
jmp
push
mov
add
or
mov
mov
mov
dec
clc
ret
cmpsl
enter
inc
add
jae
movsb
jnp
lea
xor
jo
sbb
push
into
js
repnz
jbe
test
popa
into
dec
icebp
and
sub
aad
mov
add
and
dec
jbe
fsubrl
loop
ljmp
stc
stc
or
inc
jo
mov
les
aas
and
out
jle
lret
jno
mov
pop
cld
lea
mov
iret
jb
je
out
fisubrl
ss
xor
fisubl
mov
sub
inc
fs
xor
jmp
pop
push
imul
lods
xchg
add
rorl
out
lret
insb
lret
sahf
inc
insl
in
in
add
sbb
imul
cwtl
stc
sbb
lock
adcl
inc
add
int
sub
mov
fucom
test
mov
shrl
bound
loopne
test
and
jp
aam
stos
mov
or
dec
mov
mov
je
lods
out
paddb
cltd
sub
fistl
addr16
sbb
mov
xchg
jnp
or
cld
xor
inc
in
dec
out
inc
jecxz
mov
inc
cmpsb
add
jno
jecxz
add
xchg
stos
sbb
lds
or
pop
mov
mov
mov
int
ret
out
cmpl
and
nop
ds
jae
ja
test
scas
jp
mov
shll
jno
int
jg
push
iret
xor
pop
pop
andl
push
push
and
shlb
daa
cmpsl
rorb
in
adc
sub
cmp
xchg
mov
push
lds
mov
pop
adc
push
push
add
push
sahf
negb
push
shlb
gs
aas
icebp
xchg
pop
in
sub
adc
pop
adc
jns
jp
push
adc
enter
aas
cwtl
dec
rcr
cmpsb
mov
imul
mov
cmc
cmc
ds
push
pop
pop
neg
pop
inc
outsb
pop
stos
xor
dec
call
jns
adc
rol
cld
jle
push
movsl
clc
fisubrs
sub
jmp
stos
imul
cmp
dec
test
fsin
in
mov
mov
clc
cmp
aad
aam
and
mov
fldenv
cmp
xor
inc
xchg
pop
in
lahf
pop
dec
cmp
aaa
cmp
sub
xchg
insl
sbb
jmp
fsub
mov
pmovmskb
pop
dec
and
daa
sbb
inc
xchg
frstor
fs
stos
jae
inc
xor
inc
pop
in
and
mov
cmp
mov
jbe
fmuls
pop
lods
adc
cmp
and
bound
add
movsb
push
adc
insl
clc
int
xor
in
cmpsl
out
xchg
or
adc
test
loope
push
mov
or
out
fwait
add
mov
and
mov
mov
in
cmc
inc
push
mov
stc
jecxz
cmpsl
mov
out
jp
jp
les
incl
mov
mov
aam
lock
mov
adc
mov
cwtl
xchg
fmul
pop
dec
insl
test
lods
jnp
dec
call
pop
or
inc
mov
xchg
add
aam
rorl
imul
cmpsb
jne
fs
movb
lea
cmpsb
xchg
cli
ds
xchg
inc
aam
inc
fimull
mov
xor
jmp
shl
xchg
xor
inc
cmp
pop
xchg
movsl
or
pop
pop
enter
out
sub
dec
outsl
outsl
jno
mov
dec
js
in
and
and
push
rcl
xor
and
inc
xchg
mov
addr16
sub
shll
sbb
ds
int3
arpl
leave
pop
jbe
cltd
push
push
decl
movsl
aaa
and
scas
add
inc
fprem
xor
roll
out
xor
cld
cwtl
xlat
ds
push
popf
push
xchg
sti
pop
mov
inc
adc
jae
adc
mov
lret
sarb
icebp
mull
into
pusha
dec
pop
sub
pusha
cmpsl
push
inc
and
and
aaa
aaa
sarb
cmpsl
aaa
mulb
xchg
loopne
shlb
cmp
xchg
inc
sub
or
cli
insl
mov
jmp
jo
ljmp
sub
or
aas
cltd
xchg
or
dec
and
mov
jecxz
adc
ljmp
or
inc
in
test
dec
mov
mov
xor
push
mov
scas
mov
pop
fistl
ret
mov
jo
roll
sub
pop
push
sahf
shr
data16
icebp
sub
xor
add
sub
adc
add
pop
dec
out
gs
cmp
lods
call
mov
shlb
adc
push
dec
lahf
sub
jecxz
movsl
movsl
pop
jge
dec
adc
and
dec
shrl
insb
ret
repz
pop
xchg
jo
popa
push
ss
push
insl
pop
jbe
inc
jns,pt
mov
lahf
jmp
sub
xchg
xchg
scas
mov
push
push
les
incl
lcall
sub
mov
sbb
cmpsl
mov
fcoms
push
loopne
inc
sub
adc
addr16
int3
and
jae
imul
mov
adc
inc
cmp
aas
mov
adc
cli
push
jbe
push
cmp
daa
xchg
push
mov
lcall
dec
lock
cmp
test
mov
xchg
xchg
xchg
sbb
cmp
inc
sub
sbb
cmp
loop
jge
aad
in
mov
sub
fwait
negl
iret
ja
push
movsb
into
add
mov
movsl
xor
cmpb
rolb
and
mov
insl
mov
push
cs
mov
sbb
and
push
cmpsl
pop
je
add
jbe
aad
mov
repnz
flds
pop
pop
xor
push
mov
adc
xchg
icebp
call
fnstcw
and
ficomps
stos
xor
ret
lretw
ss
mov
test
cltd
flds
xlat
popa
pop
lahf
add
and
jge
insl
pop
movsb
sbb
push
add
xchg
pop
repnz
enter
daa
dec
jle
mov
xchg
outsb
test
xor
dec
sbb
sbb
add
fstl
stos
stos
mov
aad
jnp
mov
lock
hlt
and
and
enter
outsb
push
adc
incb
stos
push
pop
mov
sub
pop
mov
sub
add
jg
out
outsl
pop
cld
xchg
dec
cmpsl
test
lds
pop
push
test
jae
push
inc
sarl
cli
jecxz
jnp
dec
mov
gs
fsubs
roll
mov
outsb
mov
mov
or
dec
sub
pop
or
mov
lock
into
lret
hlt
leave
and
scas
xchg
inc
scas
push
inc
add
rorl
fnstsw
cmpsl
add
pop
xchg
enter
xor
pop
pop
jno
imulb
pusha
out
inc
and
mov
mov
roll
add
cmp
add
mov
pop
xor
sub
xchg
out
clc
mov
pop
imul
mul
adc
std
xchg
xchg
testl
hlt
adc
mov
inc
adc
dec
mov
dec
pop
xchg
pop
mov
call
das
and
dec
rorb
and
lret
push
fmull
shll
cmp
dec
lods
push
and
sti
mov
xchg
aam
xlat
sub
es
andl
sub
pop
dec
push
cmc
inc
cld
push
outsb
ret
icebp
cld
out
adcl
addr16
jmp
cmpl
loopne
in
pop
adc
scas
fsts
idivb
pop
sahf
xor
dec
inc
sub
ficompl
aam
jl
out
and
mov
xchg
arpl
and
adc
out
pop
push
sbbl
cltd
mov
scas
and
sarl
mov
push
xchg
movsb
ljmp
call
sbb
rclb
sub
ds
sbb
sarb
mov
arpl
xorl
jp
icebp
xchg
imul
jl
dec
dec
mov
iret
add
test
cmp
insb
fistpl
aad
xor
dec
in
rol
inc
jbe
test
repz
scas
mov
adc
sbb
clc
push
mov
sbb
jmp
shl
lahf
push
adc
xor
jne
jbe
pop
sub
mov
cmovge
shrl
mov
enter
xor
fdivrs
lret
fcmovu
daa
and
sub
call
dec
cmp
fwait
xchg
stos
iret
adc
outsb
dec
and
inc
ss
adc
jae
mov
or
dec
mov
test
or
aaa
push
pushf
mov
dec
or
test
cs
data16
out
add
mov
cltd
insl
imul
aad
mov
lods
mov
mov
loop
cwtl
push
or
rorl
adc
mov
popf
dec
inc
xchg
sub
dec
call
lcall
mov
pop
xor
xchg
mov
fisubs
sbb
out
and
sbb
push
xchg
or
lcall
mov
jmp
adc
aas
push
icebp
int
fimuls
pop
and
mov
repz
inc
mov
mov
pop
jp
cmc
nop
xchg
repz
adc
flds
xchg
mov
aaa
dec
scas
cmp
push
aam
mov
sbb
xor
insl
mov
call
int
cmp
pop
push
fldl
iret
icebp
sub
in
mov
movsb
loopne
push
popa
sysret
mov
shlb
test
jmp
xchg
and
mov
cmc
add
inc
cltd
xchg
pop
lcall
mov
pop
pop
test
xor
sub
or
dec
and
sbb
call
mov
xchg
or
inc
pusha
out
add
dec
iret
daa
lret
lds
sahf
adc
lods
imul
lds
mov
loope
decb
shll
mov
cmp
scas
addl
dec
ss
pop
in
jno
inc
pop
dec
push
ret
dec
mov
jnp
pop
mov
gs
arpl
cmp
out
push
dec
ss
jle
hlt
ret
insb
andl
into
xor
dec
adc
dec
adc
into
inc
sub
in
inc
pop
icebp
sbb
mov
inc
adcb
cmc
mov
fmuls
cs
hlt
mov
mov
je
pop
test
stc
dec
mov
bound
push
mov
ss
dec
inc
aam
push
testb
mov
lret
nop
jle
mov
jbe
adc
cmc
adc
xor
sbb
add
push
add
pop
adcb
ds
movsl
mov
fs
repz
jne
repz
mov
out
mov
jp
push
sti
movsb
xor
lcall
or
in
aas
add
jp
rol
add
mov
xor
cmpsl
or
xchg
inc
inc
mov
adc
das
out
mov
dec
jl
inc
mov
aad
fwait
in
mov
xor
mov
jb
stos
pop
imul
push
rolb
push
lods
lea
loop
mulb
xchg
cmpsl
shrb
dec
out
pop
push
push
nop
cmp
and
andb
jecxz
not
jmp
out
arpl
loop
sbb
mov
lods
call
pop
addb
filds
aad
xchg
sbb
and
xchg
mov
rorl
mov
outsb
lea
or
mov
push
add
fldt
mov
inc
dec
sub
cmpsb
push
dec
mov
data16
test
test
cmp
mov
xchg
fnstenv
cltd
mov
scas
sub
je
aas
jl
xor
sarb
xchg
xchg
add
pop
mov
dec
jg
lods
ljmp
inc
inc
xor
decl
movsl
popa
xchg
insb
lret
dec
movsb
pop
lahf
cwtl
int3
je
call
rorl
ja
jo
fsubs
dec
incb
xchg
xchg
and
mov
js
mov
pop
xorl
sbb
cwtl
cmp
fcmove
xchg
add
inc
mov
es
in
sbb
in
jl
iret
pop
aam
xor
xchg
es
push
iret
stc
sub
andl
mov
xchg
mov
loopne
adc
cli
jle
test
inc
mov
dec
dec
mov
mov
xor
jno
sti
repz
out
test
mov
jle
fisubrl
mov
lods
sub
xor
jne
mov
mov
cmp
outsl
and
xchg
insl
das
cmp
mov
insb
in
test
dec
pop
jle
dec
mov
mov
and
adc
push
push
mov
faddp
pop
leave
stc
out
aaa
bound
mov
cli
cwtl
shlb
cmpsb
shll
neg
mov
inc
stc
es
jbe
icebp
mov
sbb
test
int3
jno
jnp
in
and
data16
sbb
frstor
call
cmpsl
push
lock
add
int3
mov
mov
aaa
ret
movsb
clc
xorb
cs
pushf
inc
mov
stos
adc
inc
mov
inc
and
dec
xor
cltd
clc
push
jmp
in
add
push
aad
sub
and
in
inc
fstpt
xchg
je
in
lret
inc
cmp
mov
xchg
cli
imul
push
cwtl
mov
aam
cmp
out
add
ds
xchg
outsl
flds
mov
cld
xchg
inc
mov
popf
dec
pop
dec
in
pop
std
lods
xor
xchg
fsubl
les
adc
fmuls
fsubl
out
jle
les
mov
ljmp
repz
imul
outsb
rol
in
push
stos
cmc
test
out
sbb
fs
enter
pop
mov
mov
xor
rcrb
iret
jmp
mov
xchg
lock
repz
shufps
add
cmp
xchg
lcall
mov
aad
mov
loopne
icebp
inc
xchg
enter
pop
stos
xchg
pop
rorb
iret
int3
sbb
lock
imul
imul
sbb
clc
sbb
cwtl
sti
mov
mov
je
mov
in
push
out
xchg
in
insl
stos
and
leave
xchg
lret
mov
dec
lock
xchg
test
loop
xor
faddl
add
cmp
popa
insl
sub
xchg
mov
pushf
jns
pop
gs
mov
test
lods
pop
jne
sbb
sbb
pop
dec
cmp
leave
data16
push
pop
dec
in
mov
lods
xchg
push
inc
sahf
fs
std
cwtl
xchg
popa
int
ja
bnd
rorb
push
pusha
shrb
aaa
rol
jmp
mov
popf
orl
mov
iret
jl
cmpb
adc
push
xlat
int3
cwtl
loopne
add
movsb
mov
outsb
mov
mov
jbe
pop
das
jle
pusha
cmp
jecxz
jp
push
mov
aam
jge
gs
jge
sbbb
dec
aas
lret
push
mov
outsb
inc
test
push
insb
mov
lahf
mov
test
repz
in
les
inc
or
pop
sahf
insl
or
mov
movsl
dec
cmp
xchg
mov
add
jnp
fcmovbe
scas
sub
mov
adc
mov
mov
push
test
mov
push
sub
sbb
sbb
fistpl
cwtl
sbb
xchg
xchg
les
hlt
dec
das
sub
andb
jns
xor
loop
gs
cwtl
add
scas
fiaddl
das
push
dec
mov
sub
iret
mov
test
ret
mov
dec
repnz
pop
jne
bound
jnp
bound
bound
dec
mov
fistpll
dec
jg
or
cs
and
sub
hlt
jnp
xlat
mov
adc
add
daa
sbb
add
movsl
int
xor
mov
lds
inc
adc
subb
add
sbb
inc
int
push
in
adc
add
dec
sbb
test
push
and
data16
mov
xor
fnsave
jbe
lock
jl
test
ljmp
and
loopne
es
inc
mov
pusha
xchg
mov
and
sbb
inc
sbb
jg
cld
dec
mov
je
add
pop
mov
cmc
lcall
mov
aas
adc
dec
fsubl
ss
push
fcmovnbe
sahf
ret
out
pop
aad
jp
sub
cmc
lea
inc
test
dec
mov
inc
cwtl
subl
cli
lds
cwtl
cmp
stos
movsl
lea
aaa
or
sbb
cmpsl
pop
les
sub
imul
mov
int3
and
leave
sub
xchg
ret
lret
adc
das
add
fs
mov
cmp
jmp
dec
sbb
outsl
bound
daa
test
jmp
movswl
add
fwait
das
aam
mov
mov
and
cmc
test
je
icebp
mov
pop
lock
loop
mov
enter
push
jecxz
ljmp
mov
cmpsb
lahf
fisubs
lea
push
bnd
popf
fbld
int
in
stos
xchg
cmp
mov
push
mov
push
sub
xchg
cmp
inc
jp
jg
insb
jmp
add
sub
push
cmp
or
push
jl
clc
pop
mov
or
mull
sub
test
clc
inc
inc
cs
inc
lods
lret
jns
imul
jl
and
pop
adc
test
stos
lock
subl
xor
add
lods
out
movl
mov
push
call
pop
loopne
mov
adc
add
aam
int3
jp
cmp
or
lods
insl
lds
adc
push
adc
jbe
mov
sub
out
add
jle
dec
jbe
mov
or
insb
ds
add
pop
outsb
leave
dec
mov
ljmp
xchg
mov
mov
incb
pop
enter
mov
sbb
sahf
jns
cmpsl
call
jno
sbb
lods
pop
pushf
scas
testl
jns
icebp
mov
add
aaa
stos
adc
js
and
mov
in
bound
imul
xchg
dec
fiadds
dec
imul
inc
push
jmp
das
rcll
dec
sub
aas
test
jnp
or
outsb
and
hlt
adc
add
pop
repnz
and
inc
addr16
iret
jg
sbbl
add
fs
xchg
int
or
jo
shrb
ds
cli
call
xor
sbb
int3
xor
or
push
jl
lods
cmp
pop
push
out
pop
cld
ja
rorl
repnz
scas
leave
mov
outsl
adc
or
xor
out
inc
loopne
mov
es
les
xchg
out
sub
lea
daa
dec
fidivrl
and
in
fistps
fsubl
xchg
add
pop
mov
jne
cmp
daa
adc
dec
daa
call
int
std
stos
nop
inc
inc
popa
jmp
add
push
dec
inc
ja
push
fmull
pop
push
pushf
stos
push
jo,pn
xchg
aas
scas
fcoml
add
fistps
fcomps
cmp
mov
movl
xchg
enter
xchg
cmp
bnd
movsb
sahf
rcrl
add
shr
ret
pop
mov
int
sbb
ja
repz
and
lret
gs
push
imul
add
insl
jbe
lods
pop
jp
mov
cmp
sbb
fs
and
loopne
mov
jae
adc
push
dec
push
int
insl
outsl
and
mov
push
and
xlat
xor
push
mov
xchg
lea
ja
mov
push
xchg
ljmp
popf
pop
pop
ret
fdiv
xor
adc
cmp
test
imul
jnp
jb
push
aas
cs
pop
adcb
out
je
and
insb
xchg
arpl
add
mov
cmp
je
aaa
icebp
pop
pop
rolb
sub
push
dec
adc
jno
dec
lcall
mov
loop
inc
mov
xor
mov
pop
test
pop
add
and
outsl
dec
aaa
dec
lods
mov
add
scas
xor
mov
test
mov
xchg
dec
inc
inc
mov
adc
sub
dec
xor
addr16
aas
das
cmp
fs
popa
aam
push
sbb
call
lcall
adc
push
cmp
mov
cltd
xchg
mov
xor
inc
sbb
dec
inc
jne
push
or
xor
ret
stc
fstl
and
out
xorl
add
inc
inc
outsb
mov
xor
dec
imul
pop
shll
divb
adc
mov
dec
out
daa
dec
mov
addr16
jle
sub
outsb
or
mov
aam
insl
push
mov
pop
pop
jo
mov
insb
cmpsl
add
stc
loope
cmpsl
mov
or
mov
std
lock
lock
or
push
or
dec
shrb
or
push
cmc
xchg
adc
push
jbe
xchg
dec
jb
test
ret
push
and
push
out
filds
fdivs
mov
push
sti
mov
push
fdivrl
jecxz
cli
pop
mov
push
add
mov
inc
sbb
flds
lea
loopne
insb
jbe
dec
andnps
jno
pusha
jns
push
jnp
cmp
mov
lcall
pop
mov
lcall
sub
fabs
mov
mov
loope
cltd
cmpsb
rcr
lea
jg
dec
enter
sbb
decl
dec
inc
mov
cwtl
dec
mov
fmulp
jbe
mov
and
mov
test
das
jno
sub
cmp
int3
into
jg
icebp
repz
lahf
mov
mov
popa
pusha
jmp
push
xchg
push
les
movl
pusha
inc
sbb
pusha
push
es
loop
adc
pop
mov
ljmp
dec
testl
sub
cmp
lock
xchg
daa
pop
jo
bound
jnp
adc
sub
lret
jp
add
js,pt
iret
fldt
repnz
mov
pop
inc
mov
ljmp
int3
out
imul
movsb
shlb
mov
cwtl
push
lods
into
out
mov
xor
test
out
es
in
pop
aas
outsb
jno
lds
pushf
jne
mov
xor
cmp
negb
pop
xor
shll
gs
mov
inc
inc
and
lahf
sti
dec
orb
es
sub
pushf
adc
ljmp
mov
ret
cs
jg
mov
cmpsl
arpl
out
pushf
xchg
dec
std
push
push
xor
push
xchg
int
jle
push
movsl
push
push
movsb
inc
xchg
pushf
or
enter
jae
vdivpd
xor
jp
imul
sub
inc
xchg
fcoms
jecxz
shlb
pop
sbb
in
iret
mov
jbe
cmpl
imul
mov
mov
mov
xchg
data16
lret
dec
add
ret
xchg
jae
int
jo
mov
mov
xchg
adcl
mov
addr16
sbb
shll
cmp
pop
ud2
das
mov
mov
mov
xchg
mulb
adc
outsb
addr16
sbb
xlat
xor
jecxz
lcall
sbb
popf
add
push
jb
mov
dec
jne
and
lds
pop
ret
fcmovne
pop
rcrl
mov
xor
xchg
sbb
fimull
rclb
mov
and
mov
inc
mov
cs
push
addr16
sbb
lahf
jp
pop
sbb
sub
add
lret
sahf
sti
or
sub
lea
jmp
scas
mov
xor
push
push
mov
push
jno
mov
and
mov
test
jno
inc
fadd
int
mov
xor
push
dec
push
pop
cmp
jmp
adc
sar
cmp
or
dec
pop
pop
repz
jb
inc
adc
jb
or
add
and
mov
xchg
add
out
ret
repz
pusha
lock
xor
test
ja
mov
sub
rcr
lock
add
or
insb
mulb
sbb
je
cli
scas
sbb
dec
push
out
out
xor
ret
cmpb
add
int3
movsl
int
popa
mov
leave
mov
push
pop
inc
shll
std
test
pop
push
loopne
push
call
cltd
push
les
loopne
cmc
les
cmp
insl
xchg
sahf
stos
popa
lcall
cmp
shrb
test
insb
cmp
pop
sarb
jae
mov
inc
mov
std
or
inc
jne
adc
add
jae
mov
sbb
adc
jmp
dec
das
lods
mov
dec
sbb
aas
stc
mov
sti
divb
or
mov
fisttpll
cmp
cmp
pusha
xor
jecxz
movsb
aas
xorl
mov
xor
pop
ret
dec
push
lcall
push
daa
dec
popa
mov
pop
xchg
das
rcrl
adc
push
dec
dec
cmp
int3
jo
dec
sub
mov
sbb
ja
clc
pop
and
sub
and
and
orl
mov
cmp
cmc
mov
cmpb
dec
add
movsl
adc
out
pop
dec
sub
fimuls
nop
ret
aam
sub
mov
mov
call
adc
adc
movsl
pop
xor
inc
jge
adc
fwait
dec
nop
sbb
mov
dec
mov
pushl
or
lahf
add
or
inc
jmp
or
xor
fstps
lret
in
sub
or
xor
dec
fcomps
aas
out
adc
testb
pop
xor
icebp
daa
mov
add
in
fwait
sti
ljmp
iret
lock
push
test
add
fadd
mov
not
or
mov
jle
sti
xchg
rol
add
and
sahf
xor
mov
cmp
in
xchg
loope
inc
lea
lcall
push
movsb
jb
inc
sbb
cmp
lret
sub
xor
push
arpl
cmpl
dec
xor
ret
or
xor
lahf
push
cli
pusha
fnsave
cmpsl
cli
popa
xchg
jo
out
pop
mov
push
stos
inc
push
rclb
xchg
fidivrl
cmp
sub
icebp
xor
mov
xor
jo
js
cmpsl
sbb
push
clc
test
add
add
adc
imul
mov
pushw
add
scas
dec
cmpsb
test
mov
test
neg
add
xor
rcl
dec
lds
jge
and
imul
fmuls
insb
mov
cwtl
arpl
dec
sbb
out
mov
call
pop
xor
scas
js
mov
inc
adc
sub
pop
mov
sahf
pop
jo
or
mov
sbb
jbe
mov
movsb
inc
dec
fisubrs
and
push
inc
mov
sub
fcomi
mov
inc
sub
fiaddl
js
fildl
mov
pusha
pop
aaa
cmp
adc
dec
mov
mov
and
lcall
insl
gs
imul
and
push
outsb
sub
imul
mov
insb
sbb
and
cwtl
shrl
pop
jmp
dec
sub
testl
or
lods
shl
and
iret
adc
mov
cmp
mov
cmc
fisttpl
js
inc
sub
mov
and
push
pop
clc
xchg
push
inc
daa
sarl
push
popa
sub
dec
fimuls
lds
jb
mov
stc
inc
filds
xor
in
aaa
xor
scas
fdivrl
jmp
jne
popa
xchg
loope
mov
xchg
aam
adc
inc
rol
or
inc
xchg
shlb
xor
cmp
bound
dec
pop
ss
push
rcl
movsl
xor
in
lea
xchg
sbb
xchg
xor
mov
enter
or
mov
fsubl
mov
mov
dec
iret
rolb
fisttpl
addr16
loop
add
xchg
dec
pop
stc
mov
inc
jno
out
sub
xchg
jnp
adc
xor
push
cld
xchg
push
adc
rorb
mov
sti
sub
push
jnp
shll
mov
mov
cwtl
pop
fisttpll
les
xchg
daa
mov
pusha
mov
imul
cld
fdivl
mov
movl
je
cwtl
int
jbe
cmp
mov
mov
dec
outsb
jne
mov
cmc
push
icebp
sub
int
bound
jle
ficoml
in
sub
das
cmp
mov
popf
scas
push
sti
orb
fwait
lea
cmpsl
dec
push
fisubl
subl
cmp
cmp
xchg
xchg
jge
jge
lds
add
xorl
repz
pusha
imul
insl
sub
sbb
lods
cs
pop
and
jmp
ljmp
scas
pusha
push
sub
gs
jae
sbb
pushf
jg
stos
add
lods
aas
cld
cmp
push
jle
scas
ret
dec
adc
shrl
rolb
mov
inc
js
sbb
aas
ds
scas
xor
imul
push
mov
scas
sbb
mov
lcall
push
mov
mov
dec
imul
je
jbe
mov
loope
adc
and
or
jo
cmp
cs
imul
mov
or
mov
add
cmp
dec
std
mov
out
mov
inc
jmp
outsl
sbb
js
clc
mov
jg
fs
or
ss
pusha
xlat
pop
ja
icebp
in
jns
mov
cmp
cmpsb
mov
xchg
cmp
dec
loop
mov
mov
in
lcall
popf
pusha
mov
andl
mov
pop
es
lret
mov
xchg
das
repnz
jae
fistpl
xor
inc
jl
jno
mull
fcoms
mov
scas
test
jnp
fstpl
in
mov
xchg
xchg
hlt
xor
sub
leave
xchg
fucom
out
sbb
insb
xor
pop
mov
pop
mov
testl
jle
inc
fwait
pop
scas
cmp
push
pop
test
pop
bound
inc
out
inc
jle
jmp
sub
repnz
sbb
ret
mov
ds
movsb
fiaddl
lods
push
mov
sahf
mov
xchg
ret
jb
insb
cli
mov
push
std
enter
shll
sbb
jns
rdtsc
cmp
fsubr
sub
cmp
jle
xor
sbb
js
and
cmp
pop
sbb
xchg
int3
fsubr
pop
cmpsb
sbb
jg
add
mov
mov
jmp
jg
jne
fcoms
pusha
sub
dec
test
fwait
test
movsl
lret
ljmp
jbe
mov
dec
int
lds
xchg
inc
xor
dec
xor
adc
pop
xlat
loopne
jge
call
fwait
sub
xchg
jle
lds
lahf
cwtl
in
adc
daa
or
stos
sbb
aas
sub
add
in
or
fwait
mov
and
repz
xor
cmp
imul
xor
dec
or
push
cltd
stos
mov
andb
xchg
dec
push
jmp
pop
addl
sbb
shrb
xchg
mov
inc
fucom
sub
mov
fwait
decl
cli
popa
ret
sub
xchg
add
dec
rorl
test
cwtl
sbb
inc
sti
or
in
jmp
cmp
xchg
jno
std
xor
movb
sbbl
cmpsb
movsl
mov
mov
push
sub
lahf
lea
arpl
add
out
mov
test
xor
push
mov
inc
lahf
scas
inc
pop
mov
insl
pop
sub
xchg
test
enter
inc
mov
fiadds
add
xchg
out
cltd
pop
roll
jnp
push
pusha
or
sbb
test
inc
das
jb
jae
ss
icebp
push
fbstp
mov
or
ror
or
xchg
fwait
mov
lock
cs
inc
int3
sub
hlt
and
aas
mov
push
push
lcall
nop
movsb
iret
stos
daa
lds
int
pop
out
mov
rorb
push
sbb
push
int
adc
mov
pop
sti
mov
pop
ljmp
mov
jp
lahf
rcrb
mov
fistpll
adc
cmp
repz
aas
xorb
into
jae
jle
mov
sti
je
xchg
push
push
dec
add
ret
cltd
cli
test
js
adc
lret
std
and
popf
mov
or
lret
lret
loop
cmp
lods
mull
xor
xchg
pusha
sub
lahf
jnp
push
mov
xchg
pop
mov
xchg
cmpsb
dec
mov
jns
mov
jl
mov
stos
add
mov
out
and
and
mov
sbb
add
mov
movsl
dec
inc
out
adcb
push
stos
cmp
xchg
mov
push
pop
into
jle
fs
in
push
pop
add
inc
sbb
mov
inc
or
sub
scas
add
loope
push
mov
out
push
cmp
enter
out
sub
dec
sub
addr16
pop
xor
lods
outsb
sbb
adc
cmpsb
imul
orl
xor
std
test
int
cmc
movsb
jo
lods
pop
fmul
mov
mov
cmp
shl
adc
pop
fstps
xchg
outsl
iret
jecxz
mov
and
xor
mov
xchg
and
dec
push
cld
jmp
mov
bound
repnz
jbe
pop
nop
cmpsl
pop
cmp
in
test
outsl
sub
and
cmp
push
lret
test
sub
sub
icebp
push
lds
dec
js
jecxz
jo
sub
jmp
dec
cmp
std
popa
fidivrl
push
loope
js
and
fwait
sub
jne
movsb
imul
std
xor
sbb
out
sbb
nop
aaa
cmp
sti
adc
sbb
fs
mov
filds
not
mov
adc
sbbl
dec
dec
adc
mov
jno
mov
in
and
dec
fbld
adc
ds
cmc
mov
daa
es
pop
testb
in
cs
and
mov
inc
ret
sbb
insb
pop
fwait
sbb
dec
or
mov
mov
outsb
jno
fnstcw
ret
jne
mov
fnstenv
xchg
inc
sub
lret
arpl
enter
mov
imul
jl
adc
int
jnp
pop
shr
or
adc
in
sub
shlb
dec
dec
dec
jecxz
rorl
imul
adc
adc
pop
out
or
loop
push
xor
lret
mov
mov
xor
and
dec
dec
popa
mov
shl
add
and
mov
jmp
dec
into
rcr
and
arpl
scas
push
test
imulb
out
ja
jb
push
add
test
push
dec
and
aas
dec
or
adc
mov
mov
mov
push
sub
out
aaa
mov
jno
xchg
pop
pop
jg
jmp
mov
jne
and
pop
fsubrs
push
sbb
std
aam
xor
dec
pop
xor
in
andps
jnp
rcrb
iret
pop
das
dec
pop
cld
test
ret
mov
cld
mov
or
in
ficompl
add
insb
or
inc
adc
adc
rorl
and
cmpsl
loop
dec
aas
push
ja
jbe
lods
push
mov
jecxz
arpl
out
mov
dec
mov
sub
push
mov
dec
movsl
xor
dec
jae
jp
jb
repz
mov
pusha
lret
jle
ret
daa
mov
scas
mov
enter
popf
sub
rclb
mov
sar
pop
sbb
imulb
jns
imull
mov
inc
or
add
call
sbbl
cmpb
enter
stos
jge
dec
jb
pop
pop
dec
push
push
insb
test
dec
scas
mov
or
cmc
mov
imul
aas
sbb
jae
jbe
pop
push
jge
outsb
cmp
xor
jbe
les
xchg
lcall
push
push
mov
es
leave
push
movsb
or
mov
popf
or
jecxz
out
jnp
shrb
leave
fcmove
mov
sahf
aas
js
aas
ja
aam
push
sti
notl
orl
out
out
sub
lods
lea
mov
inc
movsb
or
stos
jmp
lret
leave
imul
and
cld
jmp
sub
imul
adc
stc
xor
pop
fcoml
adc
mov
mov
es
add
insl
pop
add
dec
fstp
pop
inc
mov
dec
and
jne
lds
adc
fnstcw
mov
push
dec
in
dec
mov
or
sub
mov
xchg
lcall
dec
cli
inc
jg
pop
sub
mov
or
aad
inc
adc
movsl
lret
mov
mov
mov
ljmp
dec
push
add
in
jae
arpl
mov
or
cmpsb
ret
cmp
sub
je
or
and
movsb
cmp
add
mov
push
jecxz
lods
andl
jne
mov
dec
pop
repz
ljmp
fcompl
add
mov
cmp
test
pop
outsl
pop
data16
adc
shr
mov
pushf
add
es
mov
icebp
das
popf
pusha
outsl
mov
jmp
shrb
inc
sub
push
insl
and
mov
fwait
xchg
icebp
add
mov
jb
sub
jmp
or
das
mov
cmp
xchg
cmp
scas
imul
cli
sub
cmp
out
mov
cmovo
out
mov
call
test
fimull
les
aam
in
mov
insl
dec
add
inc
push
loopne
sub
shl
sub
repz
push
mov
dec
push
loop
lret
icebp
ds
nop
xlat
adc
jns
and
sub
mov
jbe
fisubs
jbe
sbb
mov
mov
mov
add
jle
mov
in
shl
pop
shlb
or
fsubrl
pop
fistpl
add
push
and
das
or
mov
mov
in
jns
shlb
je
in
mov
movl
cmc
notb
mov
mov
jbe
dec
push
repz
xor
sbb
mov
xchg
test
lods
cmc
xchg
movsl
cmc
das
xor
push
jge
xor
cmp
add
push
into
ficomps
out
movhlps
pop
js
push
jne
jno
mov
or
repz
xchg
cmp
mov
in
loop
jnp
int3
psubq
push
sub
pop
jo
sti
push
adc
cli
clc
xor
mov
mov
add
xlat
xor
lods
aas
test
push
lods
cmp
sahf
ja
and
mov
pop
outsb
mov
xchg
or
sbb
call
and
xor
sub
hlt
xor
mov
enter
shll
xor
sub
das
dec
js
mov
pop
xchg
dec
sub
ljmp
jp
rorb
mov
mov
mov
adc
fisttps
fimull
and
iret
or
sbb
mov
popf
test
imul
filds
pop
lret
ja
arpl
and
shl
aad
stos
out
in
dec
movsl
addr16
dec
testl
xlat
mov
loope
jg
mov
inc
repz
aad
out
cmp
jns
mov
sar
loop
xchg
sub
cmp
mov
decb
sbb
pusha
jno
mov
jne
hlt
mov
pop
mov
outsb
outsb
push
lods
pushf
mov
fdivrs
loopne
pop
jbe
and
sbb
fisttpl
jns
inc
inc
lea
jge
lcall
jbe
inc
mov
and
jmp
jno
leave
mov
ss
sbb
ja
lea
mov
pusha
xchg
test
cmp
push
mov
or
push
push
fwait
jae
sbb
scas
pop
ja
lret
ja
popa
loop
fptan
inc
mov
push
hlt
pop
addb
inc
mov
inc
fnstsw
repz
cmpsb
push
xchg
xchg
add
pusha
andb
imul
xchg
push
sar
fdivrl
in
push
xor
pop
in
clc
sub
mov
outsb
out
lret
jp
fcomps
and
sbb
cmp
fwait
lock
clc
mov
inc
dec
cltd
ja
dec
cmc
mov
test
fsubs
sub
loopne
mov
sbb
repz
ret
inc
add
xor
mov
mov
test
pop
jp
push
mov
popa
add
mov
pop
out
sar
insb
xchg
lret
outsl
cmp
das
sbb
xor
xchg
movsb
xchg
and
loopne
cli
dec
and
test
add
mov
jno
mov
sbb
push
out
push
cmc
push
xchg
xlat
sub
pop
pop
xchg
adc
aam
mov
mov
sbb
sub
push
fsubr
push
andl
push
cmp
sti
test
rolb
jl,pn
rolb
cmp
mov
fidivs
rcll
jle
inc
scas
daa
cli
subl
dec
sti
xchg
jmp
ret
sub
cmp
aam
pop
jl
bound
cmp
jle
lahf
int
jne
shlb
inc
pop
adc
cltd
aas
pusha
sbb
xchg
pop
xchg
mov
fistps
pop
dec
pusha
sti
test
mov
push
mov
popa
xor
push
daa
cmp
inc
mov
popf
or
mov
out
add
push
out
mov
decl
pushf
sub
fcmovb
pop
push
jp
jge
adc
xor
add
mov
hlt
push
push
mov
enter
mov
fnstcw
test
dec
jmp
sub
mov
sub
xchg
xor
mov
or
inc
sub
insl
mov
stos
loopne
movsb
fcoms
daa
dec
cmc
out
in
mov
lea
fwait
js
aam
out
and
mov
jle
jb
sub
mov
rol
pop
pop
mov
arpl
cwtl
loope
ret
and
xchg
hlt
push
mov
int
aad
xchg
sbbb
hlt
cmp
roll
aam
dec
scas
xchg
mov
clc
push
and
cld
ret
xchg
fdivl
cmp
pop
div
mov
xor
pop
mov
cwtl
push
push
hlt
ret
mov
inc
fistpl
rcr
sub
loop
cli
dec
dec
add
mov
pop
test
rcr
mov
insb
sub
push
pop
or
aad
sahf
int
and
addr16
sarb
repnz
aad
stc
cmp
out
cmp
lock
push
into
dec
jmp
inc
lock
in
adc
inc
xchg
sub
jg
ret
cmpsl
dec
xchg
xor
insb
adc
mov
pshufw
mov
inc
pop
jns
rorl
mov
push
push
adc
test
inc
push
pop
pop
or
push
jb
sbb
cmp
push
xchg
gs
cli
lahf
clc
call
adc
pop
cltd
fisubrl
loope
sahf
add
mov
daa
jb
insb
punpcklwd
sub
jno
lret
sub
mov
sar
add
stos
les
arpl
cmpsb
leave
pushf
cs
leave
jns
push
fimull
inc
sub
call
aam
inc
inc
pushw
pop
cmpsl
call
stos
jnp
in
stc
add
insb
popa
xlat
in
push
jne
out
sub
xlat
sub
in
dec
clc
dec
sbb
jge
jno
test
cmp
jnp
add
mov
popa
jle
mov
xor
lcall
dec
dec
push
mov
setae
sbb
adc
xor
lock
jns
adc
mov
adc
push
sbb
cmp
inc
leave
movsl
out
outsb
out
jmp
sahf
jno
xlat
push
ret
dec
aas
sub
cmp
testb
xchg
push
inc
in
jbe
cmp
mov
dec
mov
pop
lock
cmpb
mov
fsubr
mov
ljmp
nop
sarb
and
lods
mov
mov
lcall
xchg
jnp
mov
ss
xor
mov
lds
mov
sbb
cmc
mov
sbb
in
sbb
cmp
mov
cmp
pop
xor
dec
out
leave
add
popf
add
in
cmp
in
int3
mov
and
inc
aad
int
mov
ret
pop
dec
icebp
xor
xchg
mov
lahf
and
rcrl
lea
lret
imul
push
or
fistps
xchg
xor
mov
and
jp
inc
sbb
ja
pop
arpl
imul
push
stos
xchg
data16
fstl
push
es
lea
insl
jecxz
sub
fwait
ss
imul
into
xchg
out
push
push
sub
int
or
sub
xorb
xchg
fcomps
movsb
out
jg
push
loopne
stos
xchg
in
les
je
pop
pop
dec
xchg
stos
jge
push
cmp
or
add
jecxz
movsl
pop
inc
pop
mov
add
xor
jmp
and
jmp
inc
jae
into
pop
orl
cmpsb
mov
sti
shlb
imul
rorb
loop
iret
lret
jecxz
popf
test
sahf
in
test
lcall
fdivs
lods
jecxz
dec
mov
sti
out
aam
lea
jno
jns
xchg
mov
lcall
test
mov
fadds
aaa
jle
jnp
fadds
ja
mov
gs
xlat
jne
ljmp
call
iret
mov
pusha
xor
jecxz
das
mov
dec
in
adc
xchg
adc
adc
inc
ja
mov
testl
ficomps
out
lret
inc
fimull
adc
sbb
inc
sbb
out
hlt
dec
add
add
add
pushl
nop
mov
sub
cmc
mov
mov
mov
aas
mov
jo
mov
ja
jns
lret
mov
cmp
imul
xor
in
cmpsb
fmul
test
mov
imul
lcall
inc
mov
push
pop
push
or
aad
cmp
push
in
adc
outsl
int
mov
loopne
push
insb
cmc
rclb
sub
and
sbb
and
pop
clc
cli
scas
mov
adc
outsb
enter
pop
repnz
call
xchg
dec
and
aam
cmc
cmp
cmovbe
mov
pop
jl
sbb
adc
das
ror
nop
xor
sbb
fcmovnb
test
fucom
popf
sub
add
cmp
pop
pop
repz
cmpsl
cmpsb
and
sbb
adc
subl
ss
cwtl
xchg
pusha
add
xchg
loope
jb
repz
fisubrs
pop
movsb
mov
jmp
test
test
dec
loopne
add
mov
and
cli
sbb
lods
addr16
loopne
sbb
fcmove
and
mov
mov
in
dec
loopne
or
enter
daa
scas
ficomps
test
sub
daa
mov
mov
clc
inc
and
cltd
or
pop
xchg
adc
pop
mov
cmp
in
lods
scas
jns
adc
add
xorb
insl
sahf
fs
enter
aas
jle
push
jp
das
xchg
popf
cmpsb
mov
and
push
adcb
cmc
sahf
scas
addb
clc
pop
sbb
jg
mov
pushf
pop
mov
cs
jle
cmp
jne
mov
imul
xchg
push
mov
sub
adc
int
mov
imul
ljmp
popa
decl
and
test
mov
iret
cmp
and
int
aaa
jb,pn
mov
push
and
cmp
outsb
roll
imul
push
jb
dec
cmp
jns
ja
mov
inc
nop
jecxz
add
insl
ja
stos
fiaddl
outsb
fbld
shl
pop
lcall
add
imulb
jbe
xor
imul
shlb
sbb
and
and
cmp
pusha
pop
aad
xor
adc
mov
push
mov
fwait
cli
lods
xor
xchg
inc
or
xor
dec
test
popf
imul
push
pushf
add
push
jge
push
call
jge
mov
inc
aaa
sub
cltd
mov
mov
cmp
inc
mov
jp
in
test
ficoml
lcall
cwtl
into
es
fstps
push
pop
test
out
lea
inc
popa
push
inc
jne
sbb
hlt
and
push
rdpmc
fldenv
lock
mov
adc
loop
xor
add
loop
add
dec
push
xchg
cmpsl
lea
push
dec
es
sub
in
aam
decl
inc
stc
mov
xchg
scas
inc
adc
sbb
imul
xchg
rorl
repz
xor
sub
jbe
inc
or
out
sarb
lods
mov
mov
push
ret
push
repnz
push
mov
loopne
lcall
cmpsb
pop
mov
push
enter
sub
add
sbbl
dec
call
push
pop
jge
mov
cmpsb
ret
data16
cmp
sub
addr16
test
add
cmpl
mov
pop
pop
int
jo
roll
xlat
sub
ret
push
sbb
mov
dec
push
xchg
mov
in
push
jbe
test
dec
sub
inc
or
xchg
sbb
aaa
repz
test
ds
cmp
into
rorl
in
scas
sub
jns
into
std
mov
push
dec
dec
xor
pop
jbe
mov
shll
push
pop
push
int3
in
loope
arpl
inc
daa
fsubrs
in
aaa
pop
push
out
sahf
scas
mov
lds
sub
cwtl
inc
inc
cmp
dec
bound
nop
sub
popf
aas
testl
or
xchg
scas
pop
cmp
jns
xchg
in
enter
pop
pop
out
lret
mov
mov
mov
adc
pop
jmp
inc
sbb
sbb
in
out
jbe
in
out
fs
scas
ret
shll
cmpsb
and
jmp
xchg
dec
repz
adc
ud1
or
pop
loop
clc
popa
ret
jno
fidivs
cmc
fs
dec
push
enter
jmp
adc
add
lds
mov
xchg
jmp
xor
sub
push
xchg
xchg
mov
scas
es
lods
iret
or
jge
adc
add
adc
sbb
inc
or
shlb
arpl
sbb
mov
sbb
sub
cltd
mulb
mov
sub
sbb
dec
fsubl
rcrl
inc
inc
cwtl
out
inc
cmp
cmp
jnp
sahf
ds
test
push
sub
cmp
push
add
stc
lret
dec
inc
xchg
jnp
stc
jnp
pusha
cmpsl
js
rclb
jno
jo
xorb
push
retw
adc
dec
pop
jae,pn
pusha
lcall
sub
sbb
stos
sbb
lret
popa
repz
xor
cmp
hlt
ljmp
arpl
dec
movsl
cld
dec
fsubrs
iret
es
repnz
ds
mov
cmpsl
icebp
mov
cld
js
int
imul
addl
fs
pop
sbb
stc
outsb
mov
gs
movsb
and
and
loop
or
or
outsl
dec
popa
jnp
jae
sbb
xchg
mov
dec
sbb
sbb
scas
je
out
gs
add
inc
fisubrl
push
popa
outsl
sbb
push
es
jns
xchg
ds
adc
xlat
ljmp
mov
stos
sbb
jo
clc
jmp
fisttpll
add
lret
ret
mov
cwtl
inc
and
or
jl
xor
cmc
lcall
jno
push
pop
or
orb
test
xchg
cmp
leave
dec
fstp
jne
int
add
jb
sub
pop
jno
pop
sbb
xlat
inc
push
les
adc
and
outsb
push
adc
sarl
rcl
xor
add
add
stos
add
loope
add
insb
inc
repnz
xchg
fchs
sbb
movsb
adc
lds
lods
mov
dec
inc
mov
aam
mov
inc
cmp
cmp
mov
and
cmpsl
cs
enter
adc
xor
dec
repz
pop
xlat
sbb
xchg
cmp
dec
js
out
popf
add
mov
add
dec
icebp
add
mov
push
jp
js
push
mov
add
cmpb
fwait
shr
add
add
dec
mulb
outsb
sub
fs
add
pusha
popa
cmp
bound
jl
mov
loopne
lret
lahf
xchg
push
test
subb
mov
lds
scas
pop
dec
jbe
mov
loope
sbb
mov
sbb
int
lret
push
dec
loop
rcr
fldenv
push
in
ss
fdivs
out
inc
je
mov
jne
pop
insb
ret
fstp
sub
pop
sti
sbb
leave
scas
jle
rcll
xchg
hlt
or
jecxz
adc
leave
outsb
xor
fs
insb
fdivp
pop
arpl
les
jge
cld
push
out
mov
sti
scas
adc
xchg
out
add
sbb
xchg
lahf
cmp
xchg
jle
xchg
sub
sarl
sbb
pop
xorl
push
mov
or
adc
mov
cmp
popf
dec
shlb
inc
inc
and
fsts
mov
clc
xchg
data16
cltd
imul
push
in
mov
or
lock
push
or
sbb
iret
inc
or
jne
movsl
fwait
xchg
loope
dec
or
xchg
addl
repz
aad
rorb
dec
ss
adc
rolb
inc
cmp
mov
insb
fdivs
dec
packsswb
out
clc
stc
push
xlat
or
cmp
ja
pushf
adc
xor
arpl
std
xor
mov
ret
cwtl
pushf
adc
mov
mov
and
orb
dec
jl,pt
fs
jl
or
jno
test
cmpsl
push
push
inc
push
sub
or
in
mov
lea
lret
add
pop
sub
cs
jns
xchg
loope
and
pop
jb
pop
insl
mov
inc
xchg
fidivrs
js
or
sbb
pop
test
pop
dec
dec
xor
es
int3
mov
sub
scas
mov
xchg
cmc
push
adc
dec
stos
add
aas
inc
pop
or
mov
xchg
or
push
pop
sub
fwait
int
leave
dec
sahf
or
pop
xchg
xchg
pop
push
js
testl
imul
adc
ss
cmc
pop
adc
mov
jp
cmp
xlat
ja
adcl
xchg
xchg
xor
int
cmc
divb
mov
sub
push
pushf
shlb
fs
lret
stc
movsl
push
js
popa
cmp
add
fdivrs
jno
push
xchg
fiadds
jmp
lock
lods
xchg
mov
daa
out
test
xor
mov
xchg
ljmp
push
xor
xchg
xor
movsl
jno
test
mov
sub
in
movsl
pushf
or
pushf
test
jmp
push
adc
call
aad
pop
xchg
cmp
dec
push
ret
lods
add
cmpsl
add
adc
pop
imul
mov
shll
push
lcall
sbb
int3
lcall
loop
hlt
add
xor
sub
lcall
out
neg
js
adc
xor
fwait
push
cmp
push
cmpsb
mov
loope
call
sbb
push
sbb
test
inc
lret
and
fisttpl
enter
sahf
sub
jle
pop
out
cmc
rol
push
xchg
icebp
lret
pushf
addr16
test
flds
fsubrs
ficompl
cmc
aam
inc
cmpsl
sbb
aad
inc
aas
mov
in
or
sub
repz
pop
cld
jns
and
jb
pop
inc
fcoms
fcomps
pushf
inc
sbb
jge
sti
cld
xlat
movsl
inc
cmp
loop
and
add
jle
xchg
add
push
in
jle
test
mov
mov
jle
jle
pop
scas
outsl
push
bound
inc
sbb
mov
mov
in
fistps
loopne
dec
fsubr
jg
xchg
adc
repnz
push
cmpsb
lock
mov
mov
and
clc
fldl
enter
and
icebp
or
std
cli
fistpll
cli
orb
adc
mov
call
dec
xor
lret
add
adc
push
test
dec
mov
pop
cmp
loopne
daa
sbb
in
nop
mov
and
cs
lahf
xor
xor
imul
mov
inc
jl
orb
loop
test
sub
xor
loope
pop
xor
mov
sub
add
mov
lcall
rcl
imul
push
sub
cmpsb
fwait
or
push
ljmp
add
jae
jae
in
sub
les
aaa
add
lods
insb
cs
sbb
mov
mov
cs
push
repnz
xchg
in
xchg
mov
clc
pop
scas
adc
aaa
sub
test
mov
mov
mov
lock
icebp
popf
imul
xor
es
mov
push
scas
adc
mov
push
dec
cltd
xor
je
jb
js
dec
adc
push
push
addr16
mov
out
cmp
xchg
enter
divb
pushf
jp
imul
xor
arpl
push
cs
mov
and
inc
add
negl
lds
push
pop
cmpsl
xchg
loop
shlb
lea
mov
sub
mov
jl
xor
repz
sub
push
pop
push
ret
jge
push
mov
lahf
mov
adc
cmp
cs
cld
or
adc
fwait
cli
and
cmp
mov
not
pushf
adc
xor
leave
lret
lock
xchg
lds
inc
inc
or
fildll
and
adc
xchg
sbb
xchg
rcr
jp
in
push
inc
and
sbb
cs
loopne
mov
scas
adc
jo
in
mov
push
test
jecxz
jne
pop
and
inc
in
arpl
mov
fmul
mov
pop
lret
ljmp
imul
in
pop
jle
mov
daa
fmul
push
mov
add
rcll
xchg
mov
add
setge
xchg
and
inc
test
repnz
pop
in
mov
lods
jnp
mov
or
mov
inc
xchg
iret
cld
movsb
test
das
hlt
movsl
insb
in
add
or
ret
int
mov
ret
lds
dec
mov
adc
mov
mov
sub
xor
cmp
mov
pop
insl
pop
ret
push
sahf
inc
mov
std
pop
inc
pushw
and
faddl
dec
mov
je
mov
leave
test
int3
subb
xchg
push
push
imul
aam
in
and
mov
pop
pop
les
push
stc
jl
adc
cmp
mov
scas
lods
fs
mov
cmp
or
cld
scas
mov
adc
mov
dec
shll
sub
hlt
mov
mov
xchg
sti
or
inc
pop
into
push
xchg
hlt
xchg
jne
inc
mov
sbb
and
out
dec
lods
cmpb
add
and
popa
cmp
inc
clc
sub
out
rorl
dec
fs
and
jae
jp
cmp
pop
add
pushf
add
std
nop
xor
out
rcll
mov
ss
pop
adc
into
fcmove
insb
jle
push
pop
mov
or
inc
sahf
pop
mov
inc
test
cmc
loopne
sbbl
mov
or
pop
cmc
mov
inc
mov
mov
call
lret
mov
out
stos
inc
xchg
sub
xor
insl
and
jecxz
arpl
fcomp
and
push
inc
insb
push
push
push
push
xor
insl
jo
mov
cmp
int3
mov
addr16
sbb
sbb
movsb
shufps
lea
rcll
mov
mov
popf
xchg
jp
push
and
cmp
sbbb
pop
mov
loope
movsl
mov
add
fcompl
cld
aaa
jnp
xor
sti
aad
aad
data16
pop
pop
enter
in
and
fcmovne
icebp
xor
jnp
cwtl
mov
test
add
shl
cmp
add
push
je
into
sbb
insl
repz
imull
lret
cmpsl
xor
pop
imul
dec
loop
cwtl
fimull
sub
inc
or
cwtl
fiadds
jmp
mov
add
lock
jl
jl
rcll
pop
nop
ret
loopne
lahf
arpl
push
mov
jnp
fildl
inc
dec
jmp
ljmp
xor
mov
ret
fists
icebp
cs
or
in
int3
jmp
pop
push
std
mov
lret
xor
out
mov
pop
jbe
adc
mov
shll
jno
jnp
imul
negl
int3
or
ficoms
cmp
jg
daa
out
arpl
lock
rorl
mov
inc
ss
pop
lea
or
andl
fst
xchg
cmpsl
pop
shrl
xchg
mov
and
mov
ret
out
lea
dec
mov
jg
jmp
cmc
adc
in
or
rol
cwtl
mov
loopne
sahf
xor
loope
insl
lcall
push
cmc
mov
sub
and
iret
push
or
leave
pushf
pop
sbb
dec
mov
cltd
cmp
adc
push
add
sub
sbb
sbb
sub
outsb
sub
sbb
fidivl
or
add
ss
jbe
inc
insl
lock
stc
mov
sub
cs
xor
mov
push
mov
outsl
bound
addr16
jnp
pop
je
jmp
shrl
xchg
or
nop
movsb
pop
mov
adc
and
adc
mov
int
pushl
out
leave
leave
or
and
lock
mov
lret
arpl
pushf
mov
cli
repz
out
aas
xchg
pop
push
mov
leave
jp
lods
rorl
push
sbb
jne
mov
adc
std
push
and
push
cmpsl
push
sbbl
mov
imul
iret
popa
jmp
push
fbstp
or
cli
mov
movsb
jle
mov
and
inc
nop
jns
cmpb
push
out
das
clc
pop
ficoms
mov
out
inc
xor
cmp
ss
fnstsw
je
mov
mov
jne
mov
rolb
pop
mull
stos
push
jns
movhps
mov
xlat
leave
pop
cmp
cmpsb
push
jae
adc
mov
sti
frstpm(287
cmc
sub
jbe
push
jae
sub
adc
pop
shlb
int3
xchg
pop
jge
ret
fstp
jae
xor
inc
jecxz
push
mov
sbb
mov
sub
in
int3
inc
jecxz
and
inc
xor
lahf
xchg
or
mov
test
dec
shl
orb
inc
in
pusha
ffree
insb
hlt
and
fmull
push
testl
dec
xchg
test
imul
xor
push
xor
pop
sub
sub
jno
mov
mov
mov
sub
insl
insl
push
dec
or
leave
push
inc
iret
pop
push
xor
mov
repnz
adc
add
sbb
bound
std
loop
daa
hlt
xchg
pop
mov
mov
mov
test
sub
pusha
add
jl
mov
push
ret
lret
push
mov
test
insb
push
subb
insb
fwait
in
sub
aam
sar
inc
loop
icebp
cltd
adc
dec
add
pop
dec
repz
aad
int3
inc
stc
into
cmp
and
jnp
mov
decb
jmp
fs
and
movsb
sbb
clc
movsl
shlb
mov
repz
mov
mov
xor
outsb
or
hlt
sbb
xchg
shrl
add
lods
fcmovu
mov
jp
add
jae
inc
aas
cli
rcl
mov
add
xchg
push
mov
fimull
aam
push
ds
sub
mov
mov
lock
fcomi
xchg
fisttps
lahf
add
mov
push
pop
pop
fwait
ljmp
or
insl
mov
andb
incb
add
js
adc
xchg
in
xor
sub
inc
jg
sbb
ficomps
sub
rol
popf
ret
mov
pop
jae
in
pop
jno
push
mov
xchg
xor
adc
jo
sbb
enter
stos
push
orl
test
mov
lods
pop
movsl
mov
xor
fucom
aad
clc
call
sarb
jnp
cmp
or
data16
rorl
inc
push
push
or
call
aaa
pop
cmp
xchg
int
adc
inc
sbb
push
mov
fwait
enter
cmpsb
inc
and
into
sbb
push
cmp
push
xchg
jnp
jae
lds
push
imull
and
xor
and
xchg
in
push
lahf
sub
int3
and
or
and
shlb
cli
jnp
fbld
imul
scas
adc
jae
clc
test
push
cmp
mov
mov
mov
dec
push
push
ljmp
xor
cmp
mov
shlb
mov
repnz
iret
cmp
sub
jmp
inc
jg
inc
ss
hlt
jo
dec
push
dec
xchg
or
add
mov
mov
inc
xor
or
in
jp
sbb
mov
jle
push
je
push
je
je
testl
xchg
jo
pop
test
sarb
xchg
pop
push
mov
cmp
add
bound
mov
add
ret
mov
loopne
fwait
aaa
push
test
popl
inc
sbbl
dec
and
add
sub
mov
add
ljmp
add
sbb
icebp
pop
inc
or
insb
mov
inc
mov
jecxz
inc
je
pop
push
pop
inc
popf
jae
das
xorb
jmp
sti
adcb
lds
loop
repnz
or
call
lret
dec
xchg
div
out
orb
movsl
jbe
lcall
negl
imul
pop
movsb
leave
inc
sahf
cs
pop
add
lods
and
int
push
test
push
sub
stos
fwait
outsl
push
and
pop
jns
repz
add
out
jne
testl
cmp
out
in
lods
mov
aas
sbb
in
dec
mov
enter
sbb
cmp
mull
xchg
cmpl
cli
into
popa
and
addr16
scas
shll
js
jmp
cmp
xchg
sahf
dec
lods
mov
in
mov
push
mov
pop
hlt
and
mov
icebp
sbb
lods
shll
dec
in
cmc
jp
cmp
popf
movl
aam
cld
loope
xor
out
inc
jle
pop
mov
ja
and
shll
enter
in
ljmp
xor
nop
push
xor
fwait
adcl
push
aad
mov
push
jle
mov
jns
xchg
jne
xchg
cltd
cs
cmc
test
jle
test
insb
xchg
jae
in
cmp
sbb
xor
inc
enter
inc
int3
lods
inc
jmp
daa
daa
inc
cwtl
das
in
shll
insl
cld
dec
jbe
gs
ror
add
or
push
fwait
pop
and
fists
add
or
sub
in
lcall
mov
xchg
sub
or
and
xor
mov
lods
lret
pop
mov
subb
mov
add
int
mov
adc
push
dec
stos
push
mov
dec
mov
cli
mov
movsb
scas
mov
lea
push
or
lcall
fisttpl
cwtl
mov
insl
mov
mov
mov
and
and
inc
adc
sar
rclb
or
lret
cmpsl
sbb
mov
dec
adc
scas
imul
mov
jno
mov
jns,pn
xor
xchg
push
in
sbb
sbbl
ret
out
dec
out
dec
inc
inc
mov
je
scas
dec
mov
addr16
decl
mov
iret
or
push
sbb
outsl
adc
or
jp
cmpsl
lods
sub
add
push
cmp
add
adc
clc
jecxz
mov
cmp
lret
cmp
xchg
push
xor
adc
dec
std
and
push
insl
imull
pop
sahf
cmpsl
dec
aas
adc
sub
lcall
into
xchg
jae
add
sbb
sub
sbbl
and
or
insb
dec
cwtl
int
fistpll
adc
xchg
daa
inc
dec
push
shll
movsl
jecxz
adc
seto
xchg
mov
jp
cs
sbb
jo
repnz
imul
pop
mov
loopne
lcall
aam
cmc
mov
xlat
ja
orb
fs
out
test
mov
ret
rcll
imul
js
mov
jge
loope
cwtl
xorb
loopne
in
ret
andb
out
push
out
call
pushf
adc
mov
arpl
pop
fnstenv
cld
fistps
ja
stos
adc
rorl
pop
test
mov
pop
and
fwait
pop
out
sbb
in
pop
das
or
sbb
movsl
mov
das
lret
add
subb
xchg
leave
add
ljmp
and
es
loopne
jno
cmp
mov
sub
loopne
andl
sub
sbb
std
xchg
loop
mov
adc
hlt
cmc
jbe
dec
push
fstl
out
cmpsl
jl
push
rorl
fs
dec
stc
out
in
fsubl
push
ret
lret
and
out
in
outsb
and
jnp
or
mov
push
nop
arpl
mov
pop
xor
in
aad
jg
stos
and
imul
dec
mov
sahf
mov
loope
cmpsb
jne
test
push
adc
add
xchg
cmc
push
pusha
mov
mov
cmp
mov
lcall
scas
outsb
into
dec
or
mov
mov
popf
int
jg
ss
into
jbe
pushf
dec
fdivs
bound
mov
push
data16
fists
ljmp
test
mov
int
jbe
aam
cmp
shl
sarl
sub
scas
sub
and
rolb
pop
cmp
add
inc
xor
inc
repnz
push
mov
mov
jg
or
inc
jecxz
mov
jae
adc
vmwrite
push
sub
mov
mov
shl
repnz
mov
cld
jb
sti
fs
xchg
cld
das
adc
fbld
push
addl
mov
and
sti
enter
jmp
pop
int
outsb
inc
enter
mov
into
add
mov
mov
shlb
mov
sub
in
cmpl
mov
inc
xchg
iret
mov
cli
adc
mov
mov
adc
or
xchg
jecxz
mov
cmp
mov
bound
sub
jle
loopne
ret
les
mov
out
shll
in
and
test
in
fsubs
mov
mov
cmp
int
stc
aad
inc
pop
stc
add
int3
xchg
jmp
jmp
in
out
jmp
and
mov
dec
xchg
jbe
pusha
subb
cltd
pop
loop
jo
and
neg
pusha
arpl
and
push
pop
aad
loope
mov
add
cmc
cmpsl
out
ss
sbb
push
jne
xchg
push
fcomp
pusha
into
or
pushw
cli
mov
iret
ret
out
xor
mov
cltd
or
or
sbb
cli
and
mov
in
jl
in
mov
fldt
scas
xchg
cld
push
adc
sub
adc
dec
sub
aas
aam
imul
repnz
es
lea
sub
or
subl
push
jbe
mov
ret
adcb
aam
sbb
jbe
mov
dec
add
lock
jl
ljmp
shl
xor
sub
xor
cli
mov
xor
shl
adc
int
xor
sub
adc
es
inc
jne
mov
pop
push
push
cmp
outsl
and
fstpl
jge
mov
pop
mov
aam
pop
mov
push
cwtl
jp
out
fadds
ja
push
lock
and
inc
mov
or
popf
push
and
pop
fsts
pop
insl
sub
cmp
ds
pop
adc
imul
cmp
sub
sarl
xchg
mov
cmpsl
pop
movsl
mov
pusha
lea
push
dec
pop
je
enter
bound
jnp
inc
lods
lods
inc
scas
xchg
pop
lret
fwait
push
hlt
popa
dec
mov
dec
mov
lock
lods
mov
xchg
xor
xorl
cwtl
mov
leave
jecxz
jnp
mov
mov
sar
xchg
ja
inc
stos
mov
les
jbe
outsb
pcmpgtw
mov
scas
jae
cmp
lret
lcall
lret
xchg
xchg
bound
add
dec
adc
jae
mov
rcll
mov
sbb
sub
push
popf
cmp
lock
sub
mov
movsl
es
movsb
add
mov
mov
mov
pushl
add
push
mov
dec
ja
fdivs
lock
fs
sbbl
add
push
push
ret
mov
lods
mov
nop
xlat
jecxz
lods
in
insb
int3
cltd
lret
inc
loope
movsb
jo
arpl
jo
sub
inc
mov
fdivrs
cmp
mov
dec
cmp
lret
pop
pop
push
mov
test
cmpsb
dec
outsl
iret
jmp
into
pop
rclb
cmp
aaa
popa
jmp
pop
cmp
out
mov
pop
mov
push
pop
adc
test
dec
shl
cmp
sub
cmpsb
mov
jmp
movsb
cmp
add
sub
scas
mov
mov
popf
mov
push
cmpsl
mov
rcrb
fldcw
adc
jo
mov
sub
fnstcw
aam
cmp
lret
es
lock
jb
cmp
jmp
jno
and
fdivs
out
mov
and
das
or
ss
cld
cmp
outsb
scas
loopne
inc
push
int
aaa
mov
sub
ret
xlat
mov
cld
iret
jb
or
jno
leave
call
add
outsl
je
pop
jnp
pop
sbb
insb
sbb
or
or
push
inc
sbb
ljmp
push
hlt
mov
xchg
negl
dec
mov
inc
jns
repnz
scas
rorl
out
pop
sahf
xor
jae
lods
shlb
mov
lods
lahf
or
imul
push
cmpsb
dec
mov
scas
and
aad
into
fnstsw
outsb
scas
mov
in
dec
mov
add
pop
mov
cmp
add
push
adc
mov
lret
enter
aaa
mov
xlat
mov
mov
mov
pop
push
test
mov
popf
mov
xor
ret
or
and
pop
repz
dec
xor
leave
fnstcw
int3
jbe
dec
repnz
adc
pop
jmp
dec
movsl
lcall
sti
repz
sbb
sbb
les
jno
out
adc
fidivs
shrb
jg
xor
popa
jmp
pop
mov
mov
iret
out
std
and
outsl
jne
jbe
in
mov
pop
push
adcb
push
cmp
sbb
movsb
ss
cmp
dec
cmp
dec
and
sahf
ds
add
add
xor
lret
sbb
stos
dec
scas
sbbl
sub
cmp
call
ja
xor
mov
lret
jle
cmp
xorb
jecxz
jg
add
test
shll
shlb
ljmp
int3
xchg
mov
cmpsl
notb
adc
adc
and
test
fbld
add
insl
fwait
aad
sub
outsb
in
jge
test
aad
jne
sbb
xchg
outsl
sti
scas
jge
mov
fcoml
cmpsl
aas
push
mov
imul
xchg
in
and
outsb
shll
or
sti
stos
gs
or
outsb
dec
sub
into
xchg
aas
push
adc
jae
inc
add
adc
imul
je
aaa
add
adc
dec
sub
xor
leave
mov
sbb
test
cmp
jbe
into
ret
cmp
push
lahf
or
pop
mov
mov
dec
inc
int
ds
xchg
repz
movsl
cltd
sub
add
push
test
jge
dec
in
xor
push
popf
insb
aaa
push
mov
jl
push
pop
fnsave
fwait
dec
xlat
cli
mov
jmp
je
lea
aaa
idivl
add
cmp
sbb
fisubl
jp
push
or
xchg
cmpsl
adc
ja
cs
lock
mov
outsl
call
aaa
xchg
xor
push
aas
mov
in
lea
hlt
inc
outsl
inc
sahf
inc
fcmovnu
and
test
jb
shll
xchg
cld
push
mov
jnp
roll
adc
add
nop
lods
adc
inc
add
mov
jge
push
aas
lahf
iret
mov
dec
idivb
and
push
clc
hlt
arpl
movsb
hlt
imull
inc
mov
in
dec
mov
sub
cmp
lret
xor
jl
xor
sbb
lods
cmpsl
push
sbb
outsl
or
xchg
fnstcw
js
sbb
lods
aam
loopne
rorl
loope
push
hlt
xchg
es
push
js
or
test
push
lcall
mov
scas
push
fldcw
out
cmp
push
lods
push
xor
cli
call
xchg
push
xor
mov
xchg
dec
jne
xchg
pop
nop
mov
dec
adc
out
mov
mov
xchg
jne
mov
sbbb
clc
lds
fisubs
push
jp
roll
mov
out
iret
xchg
jo
insl
mov
cmp
call
mov
movsb
adc
push
add
sti
mov
xor
add
push
xchg
repnz
sub
pushf
das
jnp
mov
xchg
in
sti
and
xchg
jb
inc
aam
cs
test
imul
add
add
or
movsb
cli
sbb
mov
fprem1
and
cmp
std
dec
sbb
fidivrs
mov
std
into
xlat
dec
adc
test
lods
pop
mov
ror
or
push
mov
bound
xchg
xor
out
iret
ret
adc
or
adc
fcoms
cmp
mov
jmp
push
aaa
xchg
sbb
call
repz
dec
rol
or
cmpsb
adc
xor
ljmp
pop
das
add
jns
mov
insb
dec
jl
pusha
cltd
subb
push
das
aad
shl
sub
push
mov
push
fwait
adc
pop
mov
ja
add
and
mov
pop
xchg
mov
shrb
sti
xchg
inc
xor
arpl
sbb
divb
sbb
addb
xor
add
pop
mov
xchg
mov
push
mov
pop
add
lret
std
ss
lret
imul
out
sbbb
out
push
jno
jp
push
clc
int
xlat
pop
lahf
inc
lret
std
pop
pop
and
push
dec
into
inc
loop
push
imul
xor
stc
pop
dec
inc
mov
shrb
loopne
xlat
stc
or
in
ret
jno
lea
arpl
dec
dec
popa
in
sub
dec
sti
mov
jbe
shll
adc
lods
jns
push
mov
test
pusha
stos
xor
push
jns
loop
and
dec
jp
cld
cmp
loopne
cmp
test
xor
lea
imul
xchg
jge
and
outsb
fsubl
mov
jg
aaa
popf
xchg
decl
sub
or
jge
scas
pop
nop
loopne
sti
mov
arpl
dec
in
adc
or
insb
xchg
add
loope
cmp
das
jp
loopne
mov
pushf
sbb
mov
out
jp
jbe
cmp
hlt
sbbl
cli
mov
iret
pop
or
jmp
sbb
push
lcall
add
push
push
dec
stos
sub
ds
jbe
pusha
sbb
jnp
dec
icebp
cmp
aas
sub
xor
out
jnp
lahf
out
fwait
pop
xchg
repz
je
mov
xchg
fsubrs
xor
pop
sbb
jo
sbb
pop
xchg
mov
in
xor
and
sarl
sbb
xor
pushf
ja
inc
movsb
lock
or
popf
add
xor
in
test
repz
cmpsb
int
jbe
movsl
pusha
fisttpl
adc
cmpsl
mov
and
fisubl
fidivs
mov
xchg
out
sbb
stc
mov
movsb
dec
mov
add
lidtl
shll
dec
cmpsb
pop
sbb
push
std
scas
aas
cmpsl
fs
mov
out
cld
in
adc
pop
mov
ja
push
dec
mov
repnz
pop
xor
repz
ljmp
daa
xchg
push
dec
mov
into
push
sar
cmp
mov
mov
add
mov
orl
push
mov
pop
or
pop
lods
test
sub
enter
test
adc
mul
or
jl
inc
das
jbe,pn
jb
push
call
fwait
mov
cmove
and
inc
int3
xchg
and
pop
lret
add
mov
aam
out
xor
lcall
mov
push
scas
mov
or
push
adc
imul
jnp
aas
xor
test
movsb
cmpsl
loope
loop
pop
or
inc
shll
push
das
mov
lret
cmc
fstps
adc
test
mov
lahf
mov
sbb
outsb
push
stos
cmp
push
mov
inc
push
ljmp
cmp
jns
jnp
pushf
adc
xchg
ficoms
in
aam
jae
iret
mov
repz
adc
out
lret
fsubl
cmp
call
mov
popa
loope
or
out
ds
xor
sahf
mov
ror
and
jb
jg
data16
xchg
ljmp
mov
jno
adc
es
and
and
cmpsl
add
adc
pop
std
or
mov
in
sub
mov
add
jl
pop
js
lock
mov
adcl
jmp
dec
cmpsb
dec
xor
lahf
dec
cli
adc
rorb
lods
mov
sbb
andl
call
pop
inc
in
inc
mov
cmpl
jb
sub
inc
ds
dec
dec
jne
ljmp
aas
lret
and
xlat
nop
mov
scas
cmpsb
movsl
cld
sub
fisttps
lock
pop
fsubr
jg
outsl
xor
and
and
mov
into
jg
nop
fmuls
add
jae
push
pop
xor
inc
sub
push
test
mov
rcr
lds
ja
rcrl
mov
clc
mov
pop
sub
mov
sub
jns
rol
out
lods
mov
pop
mov
and
loop
outsb
inc
mov
and
mov
sbb
out
dec
dec
ror
jp
out
push
scas
shl
popf
xor
cmp
aas
fists
lods
rolb
dec
dec
shl
dec
sbb
xchg
mov
aas
dec
jmp
push
xchg
jmp
lret
std
je
sbb
pop
sahf
pop
aad
shll
lds
xchg
aas
xor
adcb
mov
pop
pop
rcrb
xchg
mov
out
lods
mov
push
push
call
sarb
mov
data16
jo
es
push
pop
bound
sbb
sbb
sbbl
fwait
out
mov
sbb
std
inc
pop
arpl
test
push
call
movsb
nop
ret
cmp
adc
arpl
call
int
les
lret
jo
aam
fstpt
sbb
hlt
out
mov
add
cmpsl
ja
jne
movb
fcoms
roll
lods
jbe
lcall
adc
mov
cmpsl
ljmp
in
scas
loopne
movsl
mov
popa
scas
xchg
sub
sub
add
sbb
or
jg
movsb
inc
sub
dec
mov
mov
jnp
push
cmc
or
push
fmull
int
pop
sbb
repnz
inc
or
fadd
out
or
xchg
je
in
jl
aas
test
out
mov
shlb
jle
mov
adc
cmp
xchg
lods
addr16
dec
pop
test
loopne
and
lods
mov
cwtl
adc
nop
mov
loope
xor
scas
push
push
xchg
test
clc
les
push
xlat
inc
sbb
adc
lock
or
push
cmp
xchg
cli
mov
lahf
jns
jmp
and
mov
sbb
or
scas
gs
inc
xchg
lret
pop
add
js
cmc
xor
mov
jne
shr
fdivrl
lock
out
lods
pop
add
int3
push
daa
clc
mov
xchg
pop
out
imul
mov
lods
ljmp
or
push
inc
sbb
mov
arpl
mov
or
xchg
clc
cmp
imul
dec
push
push
cmp
or
ftst
negb
icebp
cmpsl
dec
aas
ljmp
jbe
outsl
dec
jns
rolb
push
repnz
xor
fdivr
rcl
xlat
mov
sarb
jne
xchg
xchg
or
stos
popa
jbe
adcl
sti
je
ja
add
loope
lds
and
mov
int3
scas
mov
fldt
inc
mov
andl
inc
int3
push
adc
cmp
int
pop
je
and
mov
test
xor
pushf
sub
inc
fldenv
pop
xor
fmull
or
aam
push
pop
add
fimull
pop
ret
add
push
lds
sbb
or
addl
fwait
aaa
xchg
dec
loop
call
loop
hlt
push
and
in
iret
cmc
xor
mov
adc
stc
cs
lret
aad
adc
pop
push
js
bound
sbb
sbbl
dec
adc
mov
lods
mov
add
mov
ret
mov
bsr
jmp
push
and
sbb
push
dec
lock
in
pop
add
cmpsb
aas
bound
mov
sub
scas
adc
add
or
jne
cmp
lock
enter
jl
inc
test
xor
xor
clc
leave
jg
push
adc
jns
inc
ds
inc
aaa
out
call
nop
push
dec
or
clc
jno
push
out
xchg
mov
sbb
rorb
mov
xor
popa
mov
mov
add
setge
test
movsl
push
jo
mul
and
push
in
notb
sbb
push
dec
mov
mov
das
enter
cmp
aaa
mov
stc
outsb
mov
test
cmp
or
jmp
pushf
mov
cmp
mov
inc
sub
sahf
dec
pusha
loope
mov
lods
pop
sbb
xchg
mov
dec
inc
xchg
sbb
ficoml
add
mov
in
mov
push
int3
out
int3
dec
mov
mov
fbstp
mov
fbld
xor
cs
leave
sub
jns
repz
out
xchg
cwtl
into
pop
mov
lds
and
mov
popf
mov
mov
je
outsb
popf
mov
and
andb
je
add
xchg
or
sub
in
and
add
iret
xchg
incl
in
loope
jmp
jp
pop
lds
test
adc
int3
pop
into
jmp
das
xor
add
lret
jp
inc
sarb
or
adc
adc
sbb
push
xchg
es
stos
or
or
add
or
imul
shll
sbb
add
push
mov
jo
push
sbb
xchg
mov
jo
pop
es
mov
jae
idiv
push
or
xor
dec
xchg
movsl
mov
mov
mov
stc
xchg
cli
sarb
repnz
aam
popa
sbb
inc
push
cli
pop
xor
sbb
inc
add
jecxz
or
popf
jp
and
sbb
jmp
es
mov
or
jmp
xor
and
mov
orb
daa
xchg
push
jp
dec
xchg
imul
sub
xor
dec
dec
shr
mov
dec
mov
lahf
mov
inc
in
cltd
inc
mov
and
std
push
inc
adc
daa
pop
aas
fcoms
pop
mov
mov
and
sbb
inc
cli
and
fcmovu
test
xor
scas
in
fs
cmp
lcall
xor
mov
push
scas
sarl
mov
cwtl
pop
inc
xorl
add
xchg
fisubl
cmp
or
xor
push
mov
repnz
pop
fwait
xor
sub
gs
xor
sti
push
hlt
mov
mov
jle
test
jp
jl
pop
dec
test
mov
mov
fs
inc
mov
movaps
mov
pop
popa
cmp
xorb
xor
cmc
movsl
jmp
mov
and
dec
push
nop
ffree
push
mov
sbb
test
enter
dec
in
andl
add
or
mov
cmp
pop
dec
scas
mov
pop
add
lods
mov
push
pop
into
adc
push
sbb
push
cmpsl
push
xchg
inc
or
out
or
aaa
cmp
iret
sub
testl
into
test
dec
fidivrs
arpl
in
jbe
mov
call
mov
in
divl
ret
pop
add
in
imul
push
or
jb
loopne
lret
es
outsl
hlt
pop
mov
hlt
test
sub
xchg
scas
xchg
negl
out
pop
cmpsb
jecxz
sbb
jl
push
jp
push
clc
mov
loopne
xchg
mov
and
push
flds
call
jns
setle
cmpb
mov
jl
addl
push
mov
loope
and
inc
sbb
mov
ss
cmpl
iret
mov
es
out
xor
adc
in
cmpsl
sub
nop
repz
popa
push
cmp
adc
jno
pop
cmp
stc
or
leave
dec
pop
or
test
mov
pusha
push
jle
pop
dec
pop
aaa
dec
aad
pusha
test
setp
push
inc
popa
xor
sbb
xchg
jb
xor
addr16
icebp
pusha
imul
test
inc
ja
sbb
jb
inc
lock
sti
imul
lret
mulb
repz
fldcw
fdivl
xchg
stc
xchg
push
sbb
idivl
adc
popa
fidivs
and
xchg
and
pop
inc
pop
aad
adc
in
jecxz
jp
sti
jmp
add
jns
mov
and
mov
inc
sbb
jbe
test
test
scas
in
mov
and
pop
sub
lcall
test
xor
xlat
xlat
sbb
mov
inc
or
out
decl
repz
mov
push
lahf
ss
push
jmp
into
mov
mov
cld
dec
sbb
sub
mov
inc
rorl
mov
test
dec
sub
out
inc
lret
lret
add
jp
lock
jle
jno
mov
sub
or
dec
pop
fxch
sub
stos
or
jo
clc
mov
push
adc
lods
sbb
andb
jb
stos
int
mov
rorl
fcomps
inc
movsl
mov
lods
test
shrb
jae
out
mov
sbb
dec
aam
add
ja
stos
outsl
adc
repz
add
jo
sarb
jecxz
icebp
mov
pop
insl
mov
ret
cwtl
push
mov
push
xor
gs
sbb
push
inc
mov
pop
mov
insb
dec
sbb
pushf
data16
xchg
rcll
xorb
fidivrl
imul
jae
daa
dec
loopne
add
push
int3
sbb
orb
jns
ljmp
popf
jae
push
rcl
imul
xor
xor
push
into
inc
aad
push
xchg
fcomi
movsl
ret
out
fistpll
push
daa
xor
mov
xor
dec
pop
jge
mov
jg
pusha
cmp
sahf
xor
jae
stos
push
cmp
gs
pop
cltd
xor
outsb
cmp
std
fdivp
pop
mov
push
mov
dec
cmp
sub
sti
negl
push
push
xor
rcrb
xor
fldt
pop
aaa
ja
loope
ror
hlt
xchg
pslld
mov
lods
sbb
cmp
adc
cwtl
jae
lods
mov
xchg
bound
movsb
fstpl
mov
popf
and
dec
sub
pop
lcall
cmp
jecxz
and
lods
sbb
inc
push
test
add
fucomp
xor
push
jno
xlat
or
lods
jp
jae
mov
push
mov
int
xor
mov
mov
xor
mov
cmp
pop
ret
pusha
cmc
test
aad
mov
or
imul
repz
outsb
jp
sub
fcompl
or
xor
iret
push
push
xchg
pop
cld
loop
sbb
or
or
pop
mov
xlat
adc
je
inc
add
xor
repnz
mov
mov
cmpsb
rcll
pushf
mov
lods
mov
pop
in
pop
and
pop
inc
add
movsb
adc
inc
test
pop
pushf
loope
popa
mov
mov
xlat
cmpl
mov
rorl
mov
int3
mov
cltd
mov
inc
fnsave
dec
push
sub
jno
nop
add
jl
mov
and
test
mov
dec
fdivl
xor
les
out
ss
ds
enter
sub
ret
mov
or
dec
stos
sub
sbb
lods
in
push
fstpt
push
cmp
and
test
lret
mov
cli
adc
push
dec
sbb
mov
xor
xorb
cmp
cmp
add
stos
popf
arpl
inc
inc
scas
xor
outsb
add
lds
mov
xchg
jnp
mov
inc
div
ds
aaa
pop
mov
pop
jns
mov
jno
fstpt
ret
outsl
out
std
sub
cli
out
sub
insb
repnz
pop
mov
shll
ds
sbb
sub
pop
push
pop
xchg
addl
repnz
and
add
fwait
sahf
inc
callw
jmp
movsb
cld
mov
movsl
test
fdivr
inc
xor
pop
lock
mov
and
xor
jp
xor
fisubrl
push
cmp
fisubrs
sbb
adc
fwait
xchg
in
push
xchg
cmp
lods
adc
sahf
push
mov
sbb
stc
push
insb
mov
pushw
mov
rcrb
inc
jae
and
lahf
and
xchg
dec
ret
sbb
jecxz
lret
mov
sti
jecxz
aas
mov
jle
pushf
lret
call
daa
sahf
lds
sub
pop
inc
mov
or
xor
or
pop
repz
and
iret
outsb
xchg
dec
out
sbb
dec
cmp
dec
mov
cmp
dec
shll
xchg
leave
andb
cmp
mov
pop
mov
push
xorl
pop
jns
dec
add
jge
out
lahf
jno
dec
addr16
mov
mov
xor
cs
xlat
lods
das
mov
mov
push
mov
ret
loope
adc
xchg
cwtl
dec
shl
adc
adc
daa
jb
jp
or
mov
adc
push
js
lret
mov
aas
inc
and
lahf
sub
lret
inc
pop
pop
adcl
iret
xor
cmp
or
xchg
adc
sbb
rcll
ja
or
xchg
mov
mov
popf
cmp
rolb
xor
or
dec
rep
xor
jbe
dec
push
pop
push
inc
movsb
lods
push
je
cmp
mov
dec
std
ss
add
seto
aad
dec
sbb
nop
lods
xchg
dec
push
inc
fisubs
aaa
shlb
cmp
jmp
shlb
movsb
adc
ja
sub
repz
out
xor
or
addr16
std
shlb
mov
push
pop
int3
loope
movsb
lea
mov
xor
xchg
test
movl
sbb
int
cmpsl
lock
xor
mov
inc
clc
sub
insb
mov
inc
jae
loope
push
jecxz
es
or
int3
sbbl
movd
shrl
jmp
in
jb
stc
daa
add
mov
scas
cmp
xchg
or
data16
xor
out
push
xor
xchg
jge
lcall
mov
jp
or
xchg
fldt
jp
cmp
nop
inc
out
jbe
push
enter
fmuls
adc
enter
xor
scas
nop
pop
jmp
mov
adc
adc
shlb
lahf
sub
lret
pop
mov
add
or
test
sbb
adc
xor
pop
icebp
cmpsl
jb
ret
mov
fistpll
add
fdiv
mov
test
xchg
or
add
out
mov
jle
insb
xchg
fcomps
je
mov
mov
inc
int3
xchg
test
test
call
cmp
and
int3
adc
out
stc
movsl
mov
not
xchg
sbb
test
xchg
mov
inc
cmp
push
xlat
imul
mov
cwtl
lret
mov
cmp
push
push
pop
imul
mov
in
mov
mov
rolb
fcmovu
pop
dec
lret
sub
inc
mov
push
cmp
lods
and
sbb
pushf
dec
adc
dec
sbb
int
sbb
push
js
xchg
push
xchg
je
pop
lret
fnsave
jnp
mov
rcll
pop
mov
sub
mov
test
outsb
mov
cmp
add
mov
pusha
or
jb
cmpl
ss
fsub
mov
les
jge
pop
mov
addr16
shlb
cmpl
xlat
mov
xchg
ja
inc
inc
shl
mov
xchg
es
add
xchg
and
mov
sub
stos
sbb
bound
addr16
mov
jne
rcll
push
push
cltd
cmp
dec
push
xor
stc
cltd
imul
enter
and
cmpsb
push
jnp
lods
xchg
adc
push
jecxz
push
pop
inc
mov
shrl
pop
xor
sub
or
sub
mov
add
sub
mov
das
jns
mov
cmp
sub
sbb
dec
rclb
int
xchg
xor
or
ds
aad
push
xor
jp,pt
inc
repnz
cmp
push
out
xor
cwtl
jbe
fsubl
adc
jmp
jge
xchg
ljmp
lock
cs
insb
cmp
add
xchg
insb
fwait
mov
ljmp
pop
push
loop
push
push
add
fucomip
icebp
mov
push
addl
aas
jg
loope
lahf
icebp
push
and
mov
cltd
into
xlat
enter
insb
mov
out
fs
adc
dec
test
pop
add
hlt
lods
movsl
es
cwtl
xor
mov
jno
sub
jb
mov
cmc
or
imul
inc
mov
mov
add
push
xor
adcl
and
or
out
repz
push
nop
cmp
fcompl
cmpsb
or
outsb
gs
sub
sub
lcall
sbb
int
dec
mov
or
addb
pop
adc
mov
in
arpl
mov
arpl
xor
repnz
mov
fbld
aaa
bound
inc
scas
movl
pushf
cmpsb
jns
adc
std
jns
sub
mov
inc
push
dec
nop
mov
test
je
movsl
or
gs
cmp
test
dec
into
jns
mov
gs
jnp
fistl
jle
call
and
add
cs
les
and
mov
cld
sub
ficoms
stos
fstpt
rcrw
mov
loope
xor
push
pop
pusha
mov
mov
mov
aad
pop
clc
in
dec
mov
add
les
outsl
icebp
repnz
clc
mov
bound
sub
xchg
adc
pop
inc
xor
push
lods
sub
push
cli
daa
loopne
or
and
pop
inc
xor
mov
add
add
xchg
aad
adc
pop
arpl
ljmp
outsb
es
bound
mov
mov
and
xchg
call
fistl
loopne
adc
subl
iret
ss
scas
mov
inc
popaw
insl
bound
pop
sbb
shufps
mov
jle
dec
mov
xchg
aas
xchg
dec
outsl
xchg
scas
ljmp
pop
fs
test
setnp
cmp
jg
sbb
or
es
scas
cmp
lods
or
jo
xchg
cmp
rcr
cmpsb
inc
arpl
or
jle
inc
rcl
fistpll
xchg
mov
mov
int3
and
xchg
sub
sbb
pop
in
mov
push
xor
movsl
test
push
fcomps
stc
dec
mov
xorl
dec
or
mov
push
sub
in
inc
dec
add
psrld
fsubr
cmpsl
push
cltd
and
fisubs
sti
mov
popf
jb
ja
sbb
mov
xchg
sbb
jne
sub
lahf
xlat
test
dec
popa
lretw
aad
jns
cmp
push
inc
mov
dec
or
mov
jno
mov
lcall
inc
outsb
dec
pop
mov
cli
subb
mov
cmp
sti
dec
pop
insl
jae
sbb
add
test
xorl
mov
mov
cwtl
les
xorl
fbld
sbb
lock
fidivrs
dec
jmp
add
push
xchg
int3
scas
mov
dec
xchg
jne
sub
sbb
sbb
and
mov
mov
add
xchg
cmpsl
ffree
fsubl
fwait
out
inc
ja
mov
push
nop
lock
in
jecxz
out
scas
or
pop
cmpb
fucomi
mov
adc
ljmp
ja
repnz
aam
cmp
sub
stc
pop
scas
mov
xchg
xor
pop
fiadds
add
add
cmp
mov
leave
push
jns
pop
divl
ficoml
adc
mov
rorl
stc
lcall
inc
sbb
aaa
out
lea
dec
cltd
push
rcll
xor
push
jl
add
jae
mov
fldenv
popa
mov
jbe
sub
bound
xor
cwtl
and
fs
movsb
pop
sbb
jne
jo
cmp
movsb
imul
inc
ss
jno
cmovne
hlt
mov
stc
dec
fisubrs
stos
cmp
jns
mov
jecxz
fistpll
test
fcomps
aad
cmp
mov
lcall
jno
jecxz
mov
icebp
mov
aad
imul
lea
xor
add
add
cmp
add
icebp
xor
repz
cmp
test
repnz
cmpsb
mov
fistpl
jbe
js
mov
outsb
mov
aaa
xor
inc
test
int3
outsb
outsl
test
mov
mov
cli
pop
jle
mov
lock
cmpb
icebp
ret
fsubs
into
push
mov
mov
sub
adc
mov
out
ds
sbb
ds
scas
adc
lahf
pop
sub
push
pop
lret
jle
xchg
sub
in
rclb
mov
push
repz
mov
loopne
cltd
test
mov
adcl
xor
loopne
es
idiv
xchg
and
xchg
test
jmp
lret
test
inc
mov
sub
mov
mov
out
cmp
or
insb
mov
jp
in
mov
test
xchg
sub
mov
js
les
add
xor
push
mov
mov
adc
dec
repnz
xor
ficoml
sub
sbb
outsb
add
inc
sbb
orl
cmp
pop
xor
ss
gs
xchg
dec
int3
xchg
inc
popf
adc
repnz
jmp
xchg
sti
jae
adc
adc
mov
imul
dec
subl
push
dec
dec
cmp
xchg
mov
sub
sub
mov
popa
mov
daa
cmp
ret
mov
stc
sub
in
xchg
sub
pop
ljmp
dec
adc
dec
xchg
push
add
pusha
push
push
cwtl
pop
dec
add
in
dec
pop
add
test
mov
jp
gs
pop
in
and
shlb
inc
or
ljmp
std
faddl
in
rcll
jbe
sub
aam
add
or
js
mov
loope
rorl
dec
insl
stc
test
out
ljmp
mov
loopne
fnstsw
dec
mov
jbe
cmp
repnz
push
cwtl
add
loop
popa
inc
jae
jne
or
or
lds
jecxz
outsb
inc
xchg
movsb
call
push
push
pusha
mov
adc
mov
dec
in
push
add
push
dec
jg
push
popf
addr16
scas
pushf
daa
scas
and
adc
dec
scas
fimuls
inc
les
fadd
movsl
mov
pop
mov
cmp
decl
add
adc
inc
es
test
xchg
pop
or
mov
shr
sbb
cmpsb
pop
nop
mov
jno
rolb
shlb
add
xlat
pop
repnz
push
int3
mov
mov
fldl2e
negl
jb
ss
jae
mov
sahf
int3
jge
xchg
data16
daa
xchg
nop
test
mov
sub
shrb
les
sti
dec
stc
jp
or
sub
sbb
fs
cmp
inc
add
out
adc
jle
jne
je
cmp
sti
insl
hlt
dec
pusha
lods
fwait
jne
or
cld
in
lahf
mov
aam
sbb
pop
xor
mov
pop
test
mov
mov
aad
dec
mov
iret
lods
add
rcrb
fwait
jne
das
stos
lret
aas
and
push
cmp
adc
adc
inc
push
inc
iret
test
and
xor
jnp
repnz
fdivrl
stos
cs
jl
cmc
int3
dec
xlat
cmp
fmull
sub
repz
notl
call
aam
das
and
stc
lods
sub
mov
testl
jmp
dec
repnz
repz
adc
ds
test
or
call
pop
ds
pushl
insb
jno
decb
lea
inc
js
lods
pop
dec
xor
xor
mov
pusha
test
dec
pop
rcrb
es
pop
loop
lods
cmp
sub
mov
mov
cld
outsb
mov
sub
mov
stos
cld
sbb
xor
mov
xchg
mov
dec
hlt
inc
idivl
cli
mov
jns
aaa
mov
mov
shr
mov
lret
pop
aaa
cli
lods
outsb
je
popf
pop
mov
movzwl
and
cmp
out
sbbb
fiadds
rol
pop
and
lods
es
lea
cs
adc
push
dec
imul
imul
js
dec
test
ds
popf
fwait
inc
sub
adc
in
test
xor
mov
and
mov
insl
inc
les
jae
xor
test
adc
jae
jo
hlt
shll
mov
pop
loope
enter
inc
lahf
enter
or
mov
ljmp
icebp
and
and
cmpsl
adc
push
push
dec
lret
in
pop
das
cmp
pop
xchg
js
add
lods
cmp
dec
or
pop
scas
pop
xor
xor
mov
jecxz
repnz
or
stos
out
imul
sbb
repz
jl
xchg
mov
sbb
dec
xor
mov
lods
and
pop
or
push
xchg
cs
cmpsl
mov
sti
or
lds
cltd
mov
xchg
xor
push
imul
dec
cld
data16
movsl
cwtl
js
mov
add
je
gs
xlat
mov
dec
dec
inc
xor
or
xor
scas
outsb
cwtl
xchg
jno
jbe
sbb
push
cmpsl
repz
shlb
scas
lods
add
mov
mov
fbld
enter
add
add
out
inc
jbe
push
in
xchg
rolb
ret
lret
clc
ja
cmp
mov
jb
and
sbb
aad
inc
xchg
aaa
adc
out
imul
stos
add
add
add
ret
pop
inc
fbld
jne
push
cmp
jnp
sarb
push
movsl
movsb
jo
lea
ljmp
flds
add
fsubrp
xor
or
ret
xor
hlt
inc
nop
imul
lds
shrl
pop
popa
mov
gs
testb
push
cmp
jl
jge
mov
aas
mov
mov
adc
fidivs
les
fiadds
xchg
cmp
jge
mov
mov
lods
dec
ljmp
mov
sbb
cmp
mov
sub
icebp
addr16
pop
jle
mov
gs
dec
imul
dec
daa
data16
xchg
pop
cmp
push
shr
adc
sti
lods
mov
add
or
mov
movsl
push
xchg
in
in
add
insb
scas
aas
test
sbb
gs
lahf
jne
jmp
xchg
cmp
orl
mov
xchg
movsl
cmp
pusha
mov
add
movsl
aam
xchg
push
int3
xchg
add
test
or
jnp
enter
mov
jg
adc
xor
push
and
hlt
xchg
ficomps
fisttpl
mov
sub
icebp
aaa
repz
add
push
sub
outsl
divl
push
lock
xor
insb
pop
push
cmp
insb
xchg
add
push
loopne
jbe
push
push
js
loope
inc
cmp
int3
mov
inc
mov
cwtl
jle
and
test
add
push
clc
sti
cmp
xchg
adc
aaa
cmp
ja
sti
jmp
data16
fdivp
pop
xchg
lods
rcrb
subb
mov
lret
rcl
add
dec
mov
xchg
cld
dec
fildll
and
inc
pusha
pop
sub
mov
test
dec
sub
imul
xor
mov
xchg
pop
jg
fucomip
jmp
or
fistl
inc
pop
loope
int3
testl
sbb
jl
mov
xchg
and
pop
mov
cmpsl
insb
idiv
jno
movsb
inc
std
or
dec
pop
cmp
cli
rorl
movsb
in
test
in
dec
sarb
or
mov
sub
xchg
js
popf
inc
xchg
push
add
pop
sbb
jne
xchg
lret
rcrb
lods
mov
xor
mov
xor
mov
fistps
aaa
mov
cmp
stc
push
inc
cltd
arpl
mov
testl
es
jp
xor
lods
mov
or
push
pop
les
mov
inc
push
decl
mov
inc
inc
in
repnz
pusha
mov
xlat
dec
movsl
mov
mov
cmp
shl
push
push
aas
xor
mov
dec
sbb
incb
xor
imul
ss
pop
loop
test
in
mov
jne
fidivs
xor
fildl
and
aaa
js
jmp
loop
xor
xorb
dec
gs
jbe
nop
icebp
push
mov
mov
add
fisubrs
cwtl
adc
add
and
dec
fdivrs
mov
cmp
mov
mov
shll
addr16
xchg
lret
xor
stc
mov
in
je
add
xor
rol
jnp
pop
aad
incb
cld
jmp
pop
cmp
in
or
loope
fst
daa
lret
mov
cmpsb
mov
out
js
test
cmc
pusha
mov
dec
fs
fs
mov
pop
out
mov
xchg
test
pop
mov
push
loop
js
jnp
ret
pop
add
std
xchg
lcall
push
fwait
push
in
dec
test
push
cmp
gs
xchg
mov
push
jae
inc
in
ret
mov
rorb
mov
roll
add
hlt
aas
clc
xchg
mov
xor
mov
nop
loop
lahf
int3
adc
in
mov
inc
xor
int3
jo
fwait
std
sbb
scas
pop
ds
and
in
repnz
jl
aas
mov
push
or
stc
cwtl
mov
sub
pushf
repnz
jbe
xor
adc
lret
jle
daa
add
jp
add
xchg
mov
outsl
cmp
ret
js
adc
pop
pop
cld
cmpl
push
stc
mov
sbb
fisubrs
dec
out
fs
pop
outsl
repz
lahf
adc
inc
cmp
adc
push
pop
std
cmp
adc
pusha
icebp
push
test
ret
out
push
jo
or
aad
push
cmp
loopne
lods
sbb
cmc
mov
in
inc
dec
test
fwait
pop
sbb
jae
lods
mov
adc
cs
rcr
rclb
sbb
ficomps
adc
mov
scas
test
je
push
mov
xchg
pop
inc
jecxz
cmpl
xchg
dec
xchg
sub
cli
push
out
je
sub
sub
mov
lds
ja
ja
out
mov
adc
dec
push
fiaddl
cwtl
and
add
fildll
jp
pop
icebp
jge
mov
roll
fstpl
jmp
cmc
jb
loope
out
dec
aas
in
xchg
jae
cmp
push
xchg
pop
loope
mov
test
dec
sub
mov
and
lahf
dec
lods
daa
pop
lcall
outsb
clc
aad
xchg
push
xor
or
enter
dec
push
inc
or
je
ss
or
movsb
push
imul
add
inc
cmp
sub
xor
pop
in
fs
pop
mov
lods
lods
adc
mov
xlat
inc
pop
sti
and
inc
imul
inc
push
fneni(8087
fldt
mov
inc
pop
push
mov
push
out
push
mov
add
fadd
mov
in
roll
test
jecxz
mov
or
cwtl
insb
jo
imul
pushf
cs
pushf
mov
dec
fs
fsts
add
sahf
push
lret
inc
sarl
in
cwtl
add
decb
inc
sahf
mov
add
mov
imul
mov
movsl
imulb
mov
enter
mov
push
neg
adc
add
loope
les
xchg
cmpsl
sub
movsl
test
pop
jg
imull
andl
inc
adc
mov
clc
lret
test
push
xor
jl
dec
insb
pop
or
adc
rol
adc
or
idivl
test
xor
int
pop
inc
mov
sbb
inc
adc
test
cmc
pop
xor
into
movsb
push
mov
imul
mov
mov
in
cmp
or
test
xor
jmp
dec
mov
test
or
push
subl
sti
cmp
and
adc
push
in
or
inc
sub
xchg
dec
mov
mov
sub
scas
mov
aad
out
xchg
das
fcompl
cmp
in
fs
jecxz
dec
subl
pop
xchg
dec
add
data16
xor
inc
sbb
or
nop
enter
pop
test
push
iret
out
or
jbe
je
mov
pop
xchg
mov
jae
push
dec
lret
aas
adc
lods
out
jo
lcall
test
xor
sahf
out
jp
cmpsb
lds
inc
loope
lret
push
loop
shll
xor
adc
jno
dec
xchg
roll
push
pop
push
mov
sti
add
mov
dec
clc
rorl
movsb
inc
into
call
sub
or
dec
xchg
sbb
lcall
addl
fwait
inc
sub
dec
repz
mov
loop
outsb
cmpsb
or
loope
mov
in
shlb
push
fildll
xor
repz
xor
mov
cmp
fucomip
mov
jb
jmp
jno
push
xchg
out
sub
xchg
pusha
xlat
je
xchg
ret
sub
add
lahf
mulb
ljmp
cmp
and
pop
jno
push
inc
cmp
js
adc
lods
xor
mov
jmp
mov
ja
cmp
pop
cmp
pop
es
sub
jmp
hlt
mov
stos
dec
cltd
dec
sbb
and
push
jl
popa
pop
mov
ret
jmp
pop
jp
into
mov
push
adc
loopne
cmp
mov
imul
add
pusha
mov
mov
nop
mov
in
cli
stc
loopne
add
pop
mov
jns
andb
stos
lds
add
inc
and
sahf
sarb
pop
jbe
out
xor
pop
lret
sbb
fisubrl
and
fidivl
mov
adc
xchg
mov
mov
pop
popa
push
mov
dec
sub
test
cmpsl
mov
cs
pop
pop
dec
adc
scas
push
pop
sti
push
xchg
stos
adc
lods
shr
scas
cmp
les
gs
je
sarb
pushf
loope
pop
mov
jne
cs
cltd
mov
in
jb
fwait
lcall
pop
or
mov
fldenv
and
dec
sti
mov
or
xor
sbb
ror
pop
leave
mov
mov
icebp
push
popa
and
pushf
mov
ljmp
pop
scas
push
mov
gs
rorb
adc
jle
std
jo
push
mov
in
mov
inc
lret
mov
pop
cmpsb
adc
aad
jge
sti
test
jb
mov
pop
or
repnz
lods
insb
je
out
or
faddl
nop
shlb
inc
push
and
dec
cmp
jb
popa
int3
add
test
or
sbb
sti
call
mov
jp
cmp
cs
loop
ret
imul
jle
push
sub
mov
mov
out
adc
sub
inc
js
push
xchg
roll
dec
movsl
sbb
mov
lea
inc
ja
and
int3
orb
inc
test
scas
mov
hlt
movsb
jb
mov
cmp
rorl
test
inc
pusha
pop
sbb
jb
out
and
in
cmp
sbb
lea
popf
test
mov
rorl
mov
aas
add
add
cmp
in
js
xchg
dec
dec
leave
leave
xor
rcrl
aad
or
jno
mov
arpl
inc
mov
int
mov
nop
loop
pusha
in
xchg
dec
xor
jnp
inc
mov
out
idivl
or
aas
mov
fcomi
pmaxub
push
push
push
out
inc
sub
stos
loope
rol
movsb
mov
aad
jnp
out
shll
loopne
mov
enter
lock
movsl
fistps
dec
jns
inc
sbb
xchg
lds
adc
lahf
jno
es
push
mov
xchg
pop
pushf
push
add
pop
mov
xor
or
stos
dec
loop
cmpsl
mov
aas
dec
test
mov
mov
cmp
cmc
or
das
mov
xor
pop
test
out
adc
cmp
inc
mov
aas
mov
les
leave
mov
cmc
cltd
mov
xchg
test
cmp
cmpsl
pushf
nop
fdiv
push
cmc
or
jne
scas
lea
push
and
nop
lods
inc
lods
leave
xor
add
lods
repnz
xchg
mov
mov
icebp
cmpsl
adc
les
loopne
jle
ja
scas
lret
lcall
add
fsubr
pop
inc
sti
push
adc
pop
out
test
add
pop
loopne
push
and
lahf
out
nop
out
push
inc
jmp
cwtl
rdtsc
ljmp
add
mov
inc
jg
lock
mov
fidivl
cmpsl
addr16
stc
repz
fs
jae
sub
mov
ret
je
in
or
into
inc
fisubrs
push
repz
push
cltd
xchg
add
mov
sbb
test
jnp
shl
dec
movsl
outsb
sahf
in
shr
and
xchg
stc
je
scas
roll
xchg
xchg
ja
sub
pop
fiaddl
clc
scas
inc
dec
or
inc
or
mov
xor
push
imul
hlt
out
imul
leave
cmp
lea
xchg
icebp
out
pop
pop
mov
sbb
cmpsl
std
jmp
adc
jno
pop
xor
mov
add
or
out
push
rorl
xchg
stos
test
add
icebp
pop
ss
mov
test
mov
dec
inc
sahf
jge
outsb
pop
cs
out
mov
scas
mov
jnp
leave
dec
lret
arpl
repnz
sbb
pcmpgtw
pop
popf
jle
jecxz
mov
jge
pop
lret
lock
mov
push
addl
frstor
jl
je
insb
sbb
shr
loopne
rclb
jle
xchg
mov
fldl
ljmp
popf
das
sbb
sbb
inc
xlat
inc
pop
into
in
or
icebp
push
sbb
pop
data16
jae
cld
jbe
imul
xor
mov
inc
mov
mov
adc
xor
test
mov
cmp
dec
xor
mov
inc
sbb
enter
jo
push
repnz
test
test
ss
repnz
mov
fcomps
add
xor
mov
cld
or
sub
fnstsw
js
test
sbb
mov
adc
mov
add
adc
mov
or
cmpb
lahf
insl
dec
outsl
push
imul
shr
popa
and
mov
scas
imul
push
sbbb
movsl
mov
mov
mov
and
and
cmpsl
push
test
dec
add
int3
pop
out
xchg
das
cmp
xchg
testl
pushf
jmp
xor
sbb
push
push
addr16
xchg
loopne
dec
test
ud0
repz
adcl
fcoml
xchg
imul
imul
mov
insb
push
xchg
mov
xor
or
xorl
mov
clc
pop
lea
rolb
adc
mov
lret
or
xchg
mov
sub
jne
int3
int3
or
stos
inc
push
dec
mov
scas
adc
in
jnp
fsubrl
sub
xchg
or
jl
out
inc
repz
ficompl
les
jp
inc
jl
add
and
mov
and
mov
add
iret
mov
iret
orb
mov
sub
or
insl
push
add
jne
cwtl
loope
sub
or
fists
jle
je
ljmp
adc
or
sub
mov
dec
scas
nop
jmp
and
push
fiadds
sub
std
addb
sar
and
out
mov
jne
sbb
das
out
push
sbb
push
pushf
inc
daa
or
out
mov
adc
sbb
int3
leave
cltd
jl
push
sub
xlat
scas
adc
mov
dec
adc
add
mov
xchg
add
push
add
lcall
adc
inc
int3
shll
sbb
pop
pop
xorb
dec
pop
pushf
jg
and
push
or
int
push
mov
xor
xchg
lcall
xchg
hlt
sbb
ja
outsl
add
add
idiv
jp
lods
cld
xchg
and
scas
xchg
test
sub
dec
cmp
scas
hlt
aam
sbb
pop
pop
out
mov
cmp
setl
mov
dec
inc
mov
pop
test
mov
movsl
hlt
cmp
and
and
pop
les
push
pusha
movsb
lds
adc
test
lds
push
or
dec
nop
loop
mov
or
or
cmp
mov
and
movsl
or
adc
pop
outsl
insb
xchg
sbb
jbe
mov
sub
mov
loopne
sbb
mov
enter
clc
mov
addl
jmp
out
mov
repz
inc
es
adc
jg
push
jge
inc
jns
inc
mov
negl
jecxz
lret
push
jbe
test
mov
fsubrs
add
icebp
test
adc
addl
inc
or
or
mov
mov
stos
mov
mov
aas
mov
int
out
push
sti
dec
mov
add
adc
xor
xchg
movsl
adc
dec
sub
or
xor
loop
xor
ja
out
push
clc
pop
cmp
outsl
shrl
ss
addr16
mov
jmp
int
inc
mov
imull
cmp
sarb
fsubrs
cmpsl
cli
mov
lea
pop
loope
dec
enter
shrb
add
sbb
fnstenv
inc
ret
sbb
stos
adc
mov
and
outsb
aad
jmp
fwait
jmp
sti
mov
fisubrl
sahf
cmp
cld
or
mov
mov
cmp
lret
mov
push
jecxz
pop
add
cltd
pop
mov
jmp
enter
add
ficompl
pop
lret
mov
add
fadds
testb
insl
push
mov
lret
repz
jecxz
std
mov
pop
dec
mov
in
dec
gs
inc
imul
push
mov
or
aam
cmc
jecxz
repnz
add
or
push
aaa
pop
fwait
imul
cmp
mov
mov
mov
lret
and
call
xor
mov
adc
fidivrs
mov
bound
je
mov
mov
and
sti
hlt
sub
test
sub
and
add
cmp
fcomi
lret
sub
movsl
stc
add
leave
cltd
and
cwtl
stc
mov
int3
lret
filds
mov
ljmp
adc
xchg
inc
pop
xor
arpl
dec
xchg
ljmp
es
push
pop
enter
jl
mov
pop
fsubl
into
mov
and
sub
daa
sbb
rcll
xor
es
pop
leave
cmpb
inc
movsl
pop
mov
movsl
mov
addr16
mov
and
lea
lods
mov
mov
clc
cmp
and
push
jno
imul
jbe
fsubrp
ret
subb
mov
in
dec
fdivp
cltd
aad
pop
js
ret
push
loop
xor
rcrl
sub
stc
pop
popa
outsl
inc
lods
push
mov
xor
cmpsb
and
shl
cmpb
mov
pusha
mov
out
fxtract
scas
cmc
dec
idivl
ds
stos
mov
add
jecxz
mov
in
jb,pt
jl
pushf
cmpsl
into
stos
inc
add
mov
in
xchg
lret
xor
xchg
sarl
clc
xchg
nop
add
in
xlat
jae
add
sbb
js
cmpsl
mov
inc
xor
xlat
adc
or
sarl
je
stc
adcl
jge
pop
lock
std
lret
jbe
in
mov
or
cmp
jecxz
cmp
nop
adc
xchg
dec
jbe
xchg
cmp
loope
dec
push
in
loop
test
test
mov
cmpsb
fwait
cmp
cmc
cld
jle
add
cmp
filds
bound
fistpl
arpl
cmpsl
cwtl
out
lret
insl
cli
pushf
fs
cwtl
sbb
dec
loopne
mov
sub
sbb
add
loopne
and
loope
jo
sub
shr
jg
dec
sub
sahf
data16
test
jno
out
mov
out
addr16
js
clc
dec
popa
xchg
ret
lock
aaa
add
mov
out
cmp
jmp
inc
loope
mov
flds
ret
shll
jae
and
jl
popf
js
out
out
mov
ret
fistps
ret
fcomip
push
sub
dec
aam
fists
mov
and
test
test
adc
int
repz
daa
data16
int3
inc
sub
mov
dec
jl
popf
pop
repnz
movsb
orb
or
lock
pop
into
mov
add
lock
aam
jnp
hlt
stos
pop
shll
cmp
jmp
mov
mov
sbb
sub
je
xchg
nop
lahf
in
jne,pn
cli
cmp
xlat
sbb
and
dec
adcb
mov
dec
push
xchg
mov
subb
add
jns
or
leave
test
daa
jae
xchg
cmp
and
xor
or
addl
enter
dec
and
adc
loope
cmp
hlt
pop
int
adc
roll
test
popa
test
add
shlb
add
stos
fcomps
jmp
in
lret
aaa
nop
or
cmp
repz
and
in
idivl
lock
fisttpll
add
sar
cmp
aaa
or
bound
mov
divps
or
das
inc
test
daa
and
ffreep
xor
jne
pop
mov
cwtl
adc
pop
dec
div
pop
add
jle
shlb
loopne
pop
pop
lahf
clc
sarb
std
repz
push
jecxz
repz
lret
in
out
jle
adc
and
add
dec
repz
adc
sti
push
in
popf
mov
mov
fcoml
lcall
jl
push
repnz
fs
rolb
jne
xor
rorl
inc
mov
add
jo
mov
dec
test
inc
jns
clc
inc
aas
jb
sbb
movsb
cmpsl
push
cmp
jo
testb
add
jb
sbb
cs
xchg
add
scas
cli
loope
sahf
lds
int3
js
aam
aam
pop
fildl
cwtl
xor
cltd
cmp
xor
sbb
loopne
fucomp
movsl
shlb
fsubs
and
xor
das
push
push
cmp
jge
cmp
mov
clc
shlb
xchg
cltd
add
das
sbb
lahf
and
popf
adc
and
imul
lods
ss
mov
adc
rorl
notl
adc
mov
xchg
lret
push
int
andl
data16
adc
ja
pop
push
add
push
sub
mov
bound
mov
mov
add
adc
push
fs
test
cwtl
pop
std
xlat
mov
push
push
jmp
ds
dec
push
hlt
fnstsw
movl
scas
adc
xor
int
pop
dec
jp
ds
pop
jl
ja
js
jge
and
pop
mov
je
popa
add
push
in
mov
pop
clc
mov
dec
sub
xchg
mov
ret
ljmp
mov
loope
cmp
adc
sub
dec
sbb
add
mov
adc
push
or
nop
and
mov
sbb
call
js
ja
push
dec
and
movsl
push
cmpsl
mov
popa
xchg
inc
cmp
scas
pop
push
lods
int3
pusha
pushf
xchg
fneni(8087
arpl
mov
rorl
mov
push
jo
jb
scas
dec
push
pop
out
push
pop
dec
cld
xor
mov
test
in
adc
cmc
and
xlat
int
mov
mov
lret
shll
lret
push
ja
inc
test
lret
popf
cmp
aaa
addb
dec
or
cli
mov
dec
xchg
add
pushf
mov
lods
mov
adc
lcall
mov
pop
and
xchg
loopne
mov
hlt
bound
out
adc
cmp
in
and
loopne
adc
shl
jmp
push
mov
push
dec
xor
lahf
add
lret
mov
hlt
mov
popf
sub
dec
dec
test
inc
sbb
jbe
inc
cmpsl
cli
mov
sub
repnz
add
cld
aad
aad
lods
cmc
lret
repnz
or
xor
mov
mov
mov
mov
lcall
mov
mov
adc
addl
loope
cmp
xorl
mov
add
push
popa
ljmp
aad
outsl
js
subb
incb
inc
in
sbb
mov
or
flds
inc
mov
ret
jge
sahf
testb
das
cmp
lds
lds
loop
aas
jmp
cmp
movsl
xchg
xchg
adc
pusha
inc
loop
add
in
jb
test
lods
push
or
jnp
jp
iret
lahf
dec
mov
ljmp
jge
aas
sub
inc
cmp
nop
cltd
push
push
adc
cmp
int3
aad
icebp
das
jne
fdivl
aaa
jmp
or
push
ss
xchg
mov
xchg
lea
jnp
sbbl
popf
or
movsb
and
dec
in
push
add
movaps
dec
test
xchg
into
mov
add
ret
cmp
sub
iret
adc
add
cmpl
lret
loop
push
mov
cmp
sbb
out
mov
push
adc
pop
inc
lods
pushf
out
pop
and
pushf
mov
jl
out
adc
lea
sbb
mov
movsb
mov
stos
jle
jmp
out
push
int
into
and
push
push
out
ds
dec
pop
fs
sbb
dec
arpl
mov
loopne
xchg
test
sub
xchg
pop
lret
clc
clc
loop
jg
popa
sub
std
lahf
mov
loopne
adc
mov
mov
lds
test
jl
sub
mov
inc
push
sahf
add
inc
insl
push
sub
insl
in
out
push
mov
jmp
push
push
sub
lret
mov
leave
ds
aaa
movsb
pushf
bound
jl
pop
nop
mov
jmp
pushf
outsl
stos
inc
sub
cld
xor
and
cmp
and
cli
mov
inc
je
pop
rolb
outsb
mov
ds
adc
dec
idivb
xor
jmp
mov
ret
icebp
insl
mov
enter
sub
mov
ds
mov
jae
mov
jp
sub
jne
iret
mov
sub
in
pop
push
leave
loope
dec
jbe
jl
js
adc
xchg
dec
mov
sbb
jmp
mov
jmp
lcall
mov
fucomp
pop
add
and
outsl
sub
mov
lahf
sbb
jne
sti
add
sarb
mov
sti
push
rcll
sbb
xchg
jmp
add
out
repz
mov
mov
mov
fs
inc
dec
fmull
push
shl
mov
xor
bound
mov
xchg
das
mov
mov
pandn
and
sti
cmpsb
inc
mov
cmpsb
fs
sbb
xor
loope
int
inc
sub
push
sahf
jl
std
dec
mov
sub
mov
inc
mov
addb
ret
dec
jp
sub
dec
lcall
sub
cwtl
mov
mov
inc
cltd
orl
sub
mov
pop
mov
imul
inc
adc
or
xor
jecxz
repnz
mov
repz
inc
das
movsl
inc
and
aas
xor
cltd
cli
mov
adc
adc
rolb
ss
cli
mov
scas
insb
fidivrl
mov
addl
xchg
out
jne
dec
pop
pop
inc
ljmp
pop
inc
test
inc
in
mov
popa
mov
xchg
and
stc
cmp
iret
jae
and
mov
jbe,pt
xor
imul
pop
outsb
ja
outsl
adc
ds
dec
pop
xchg
pop
or
test
sbb
or
xchg
sub
pushl
inc
aaa
out
inc
gs
dec
mov
aas
pusha
sahf
rol
adc
jp
rolb
popf
je
or
inc
mov
addr16
ljmp
je
mov
xchg
imul
cmp
xchg
push
fstpt
sti
and
or
stc
mov
push
popa
lcall
or
leave
dec
shlb
push
subl
jbe
insl
push
xor
leave
xchg
mov
les
jmp
adc
sbb
ja
arpl
inc
movsb
cltd
mov
pop
mov
ret
sbb
push
jns
subb
orl
cmp
mov
fisttpl
inc
out
mov
mov
mov
mov
pop
sbb
mov
add
shl
mov
es
cmp
xor
popf
test
stc
pop
lcall
mov
mov
jecxz
int3
pushf
popf
cmp
mov
mov
inc
mov
jne
ljmp
jle
loop
push
push
cltd
jge
mov
push
cwtl
xor
push
imul
xchg
mov
iret
mov
fldcw
out
loop
sbb
sub
add
pop
lods
push
fninit
decl
inc
lods
lret
mov
jne,pn
sub
out
insl
inc
push
lods
add
dec
pushf
sbb
imul
cmp
addr16
push
aas
loopne
clc
hlt
adc
jne
jecxz
imul
jnp
pop
fs
pusha
mov
pop
mov
push
mov
mov
shrb
es
das
mov
add
insl
ljmp
sub
xchg
ds
mov
std
sub
popf
cmp
cmp
xchg
or
push
add
mov
pop
nop
ss
cmc
pop
sbb
and
in
jp
inc
lds
inc
mov
dec
and
hlt
dec
jl
sbb
cld
fsubs
adc
push
pop
mov
test
dec
dec
dec
in
cli
jb
cmp
fidivl
pop
sbb
iret
add
icebp
push
gs
call
imul
inc
jp
popa
orl
mov
inc
out
stos
mov
jo
cmp
mov
jl
adc
insl
rorb
popa
adc
bound
mov
pop
je
mov
ljmp
cmp
jecxz
jle
loopne
mov
movsl
scas
pop
es
shr
bound
adc
pop
push
xchg
lock
std
jbe
add
jg
inc
adc
cli
dec
mov
repnz
xor
ret
int
dec
ja
arpl
xchg
mov
mov
scas
jg
inc
lea
and
dec
in
pushf
adc
ds
jns
into
rorl
icebp
sbb
enter
mov
cmp
and
jg
stc
jns
bound
aas
push
popa
in
jno
sti
or
mov
out
jne
clc
mov
lds
stos
sbb
shr
cmpsl
mov
jg
ret
jge
jecxz
cld
imul
gs
test
sbb
push
inc
jnp
pop
out
xor
lods
stos
mov
push
gs
shll
jle
add
frstor
bound
loop
insb
dec
cli
add
or
int3
ljmp
adc
or
roll
pop
jmp
pop
shll
js
orb
sub
push
mov
cld
cmp
or
cmp
sub
and
push
xor
or
lcall
cli
xchg
and
lock
pop
sub
loope
dec
push
cmc
cmp
cs
mov
xchg
mov
pop
cmp
mov
adc
xor
xchg
pand
push
repz
mov
pop
dec
xor
in
pop
mov
std
insl
jg
add
dec
cwtl
sub
sti
and
loope
cmp
sub
dec
add
pop
mov
fisttps
scas
je
mov
shlb
idivb
xchg
testb
adc
xorl
sub
fsubrs
lret
mov
les
add
fiaddl
push
aas
add
sbb
add
ret
in
sbb
stos
inc
lods
dec
dec
loop
jmp
in
insl
iret
jnp
or
mov
jle
mov
insb
js
test
enter
aaa
ret
jnp
divb
ret
mov
mov
and
fdiv
sbbb
stos
push
lahf
test
xchg
mov
adc
and
test
xor
clc
lods
lcall
movsb
xor
divb
shrb
ss
dec
in
sti
pop
inc
int3
cmc
fwait
jnp
shrb
test
pop
int3
or
out
out
push
lods
cmc
outsl
dec
cltd
and
fwait
testl
mov
jmp
sbb
and
xchg
adc
mov
mov
mov
stos
and
and
into
jmp
pop
push
je
and
sbb
xor
test
bound
or
add
mov
fucomip
mov
inc
mov
push
push
adc
test
add
push
aad
mov
push
inc
cli
es
nop
sub
jmp
pop
mov
or
xchg
sti
aaa
dec
add
xor
jg
jle
popa
mov
bound
pop
stc
outsb
movsl
int
insb
mov
ljmp
mov
mov
jmp
call
leave
cmp
jp,pn
add
xlat
jne
enter
pop
adc
inc
jnp
leave
sub
sub
xchg
sub
push
jnp
mov
xor
mov
clc
xchg
mov
sub
push
incb
lds
les
shlb
fcompl
push
push
bound
movsb
sbb
divb
fwait
jnp
addl
movsl
xchg
lcall
lcall
imul
add
and
ss
scas
fstl
in
push
inc
jbe
ljmp
fnstenv
fsubl
bound
into
mov
dec
mov
mov
cmp
shr
mov
outsl
sub
push
pop
or
lds
add
int
mov
inc
jl
scas
sub
pop
mov
pop
push
mov
cld
lahf
pop
insb
testl
push
sar
in
or
pop
in
mov
test
xor
sub
mov
out
lods
out
push
or
int3
addr16
mov
cmpl
in
xor
sbb
rol
xor
adcb
sub
les
mov
pop
xor
inc
mov
mov
push
pop
xchg
mov
bound
popw
fnstcw
mov
xor
sarb
leave
jnp
mov
js
xlat
cwtl
inc
mov
xchg
xor
push
xor
loopne
push
testb
jb
and
outsl
mov
cmc
out
pop
fs
fcmovb
xor
subl
shr
js
pop
js
adc
das
jb
dec
xchg
sar
ja
out
fmuls
xor
push
cltd
push
aad
or
sarb
incl
dec
jne
aam
xor
sbbl
cs
lock
popa
sub
imul
repz
jno
stc
adc
cmp
fnstcw
ds
sbbb
divb
insl
cmp
iret
push
sub
or
std
push
cmp
scas
ss
xor
xor
xchg
scas
mov
mov
xor
push
popa
cld
stos
lcall
jno
or
adc
jmp
sub
gs
imull
xchg
addb
fwait
mov
addr16
or
mov
pop
imulb
push
jno
cmp
push
fs
or
ljmp
std
sub
xlat
nop
fwait
mov
mov
stos
cwtl
push
inc
push
cmp
cmp
sbb
pop
jle
sbb
pop
iret
insb
mov
je
sti
adc
push
lahf
adc
cmp
push
and
xor
repnz
push
inc
lock
fcoml
jle
call
ss
jmp
and
xchg
loop
jne
pop
ret
test
mov
rcr
pop
inc
outsb
lds
sbb
inc
pop
dec
xlat
rcrl
popf
out
sub
outsb
push
pop
pop
data16
dec
popa
mov
dec
push
mov
ds
pop
nop
lcall
push
dec
outsb
xchg
mov
mov
stc
sub
add
fstpt
cwtl
out
and
je
insb
les
jge
filds
xchg
sbb
dec
inc
movsb
pop
or
xlat
sub
mov
add
xchg
out
insl
lret
pop
dec
mov
sub
stos
nop
lods
xor
push
jge
lea
nop
cmpsl
test
adc
je
jle
jmp
or
into
add
out
shrl
lret
adc
imul
push
or
or
cmp
imul
cwtl
sbb
fmul
xchg
or
es
xor
jl
inc
jae
inc
sub
xor
jo
and
cli
mov
and
loope
or
dec
cmp
insl
test
mov
fstps
push
jmp
and
xchg
mov
add
sub
flds
call
jb
call
jb
cli
test
mov
fnstcw
int3
int
push
in
in
or
push
add
inc
xchg
repnz
mov
test
mov
notb
pop
fucomp
lret
call
nop
fistps
push
das
xchg
leave
out
sbb
push
dec
xchg
adc
push
inc
hlt
cmp
fistl
add
test
das
add
mov
cmpsb
popa
pop
mov
pop
jns
inc
adc
andb
scas
sbb
dec
push
addr16
xchg
gs
adc
les
outsl
add
adc
loope
add
mov
mov
push
lcall
daa
ret
mov
xlat
std
push
out
popf
test
cmp
cmp
xchg
mov
adc
adc
loopne
aas
cmpsl
aas
fildl
cwtl
and
popa
xchg
push
into
or
pushf
into
cmp
mov
addr16
sub
inc
sarb
shlb
mov
dec
adc
das
sahf
inc
cmp
je
adc
lods
loop
mov
xor
das
rcr
jns
test
mov
mov
divb
sub
js
jg
pop
daa
mov
jle
out
cmpsl
sbb
inc
jg
jns
sbb
aaa
lret
push
dec
xchg
dec
add
lcall
jmp
aam
xor
popf
and
xor
addr16
mov
cs
mov
or
jmp
arpl
cli
dec
cmpl
and
loop
aad
push
mov
daa
and
shll
stos
jg
sahf
push
push
dec
push
pop
int3
mov
faddp
ja
cwtl
add
cmp
inc
jge
push
sar
std
jl
test
mov
xlat
inc
mov
jl
adc
movsl
push
mov
jne
cli
xor
and
push
and
adc
mov
sbb
cld
xchg
jno
dec
lret
adc
add
out
cmpsl
cli
pop
aaa
daa
jle
fs
outsb
cmp
enter
sti
mov
xchg
lret
mov
mov
xlat
inc
push
jg
aas
adc
out
xchg
mov
nop
pop
mov
rep
xchg
add
orb
ja
in
cmp
or
cmpsl
sar
sub
cs
jge
testl
mov
push
bound
mov
aaa
xchg
insl
and
mov
xorl
in
push
leave
imul
mov
in
sbb
icebp
sar
loope
sub
js
enter
cwtl
je
sbb
mov
and
fisttpll
push
xchg
dec
repnz
test
xor
in
fwait
das
cs
in
hlt
sbb
stos
push
and
insb
repnz
ja
mov
push
inc
loopne
mov
mov
inc
jno
inc
mov
xchg
aad
or
mov
mov
call
xchg
es
xchg
sbb
sub
test
repnz
cmp
and
push
in
dec
cmp
pop
pop
add
incl
pop
rclb
das
mov
out
scas
iret
das
sbb
mov
insb
sbb
push
xchg
es
imul
adc
outsl
lret
jecxz
mov
loope
cmp
pop
pushl
push
mov
pop
fmul
mov
fistl
fwait
fs
lea
ss
repnz
xor
or
jge
cld
or
xchg
inc
shll
popa
adc
inc
cmp
mov
fs
leave
sbb
ficompl
pop
mov
jne
stos
daa
in
push
sub
dec
jge
mov
mov
dec
sub
add
inc
push
inc
xor
lock
insb
xchg
add
push
cmp
jp
fisubs
push
cmpsl
push
fidivl
or
aas
mov
xchg
sahf
imul
pop
cmp
xchg
fistpl
scas
push
sbb
int
xor
mov
enter
shlb
aad
adc
js
xchg
inc
imul
bound
cmc
sub
rorb
in
xchg
lea
push
jmp
sub
dec
or
aaa
add
cwtl
sbb
stos
mov
sbb
icebp
pop
dec
xchg
xchg
mov
xor
orl
mov
cmp
adc
pusha
lret
inc
inc
xor
mov
notl
sbb
ds
shrb
or
rorb
int
into
shrl
lahf
rorl
cltd
adc
in
dec
sarb
ds
inc
insb
outsb
scas
shlb
xchg
dec
add
out
jns
movsl
test
sbb
xor
push
fidivl
and
leave
cs
mov
lods
dec
dec
test
pop
cwtl
xchg
test
nop
sti
dec
stos
out
popf
nop
subb
mov
xorl
jl
fcomi
lea
movsl
ss
adc
mov
insl
mov
ss
pop
or
loopne
sbb
xor
ljmp
xchg
add
xor
flds
mov
insl
es
jb
sahf
jecxz
lock
pop
cmpsl
xchg
lcall
jne
cmpsb
mov
outsb
xor
mov
mov
outsb
cmp
nop
data16
lcall
adc
adc
inc
pop
cltd
repz
mov
andb
push
data16
and
and
pop
shr
mov
xchg
cmpsb
xorl
inc
fisttps
outsl
aam
mov
xchg
outsl
lahf
push
es
mov
push
xchg
cmp
inc
cli
imul
arpl
push
loope
invd
aam
mov
mov
jbe
je
cmpsl
and
and
jb
cltd
leave
sbb
sbb
push
test
adc
and
sar
fdivs
imul
pop
adc
out
push
mov
add
jo
adc
out
popa
test
jno
pop
mov
push
xor
jns
mov
iret
jnp
mov
jl
inc
into
adc
sbb
pop
in
dec
mov
int
adc
stc
adc
lods
imul
aad
and
in
pop
mov
jne
je
loop
repz
cltd
sub
fs
xor
and
xor
loopne
fstl
or
js
mov
loope
mov
insb
cmp
fsub
std
test
cwtl
pop
xor
mov
shll
mov
adc
mov
repnz
nop
jnp
je
xlat
adc
dec
pop
dec
pushf
pop
out
stc
je
xchg
inc
mov
out
jb
insb
add
aad
lock
hlt
push
repnz
movsl
fwait
aas
pop
or
sub
mov
sub
jbe
inc
pop
hlt
push
sbb
xchg
sub
icebp
mov
push
cmp
inc
jae
fcmovu
jg
outsl
push
ss
decb
dec
jg
mov
push
sub
fldl
stos
loopne
or
popf
and
mov
mov
pusha
rol
push
dec
or
add
or
inc
stos
xchg
iret
jp
dec
push
sbb
cmpsl
movsb
and
fcomps
outsb
push
jmp
dec
xor
mov
lret
test
sti
xchg
xor
xchg
das
sub
clc
sub
test
mov
inc
dec
les
inc
cs
mov
and
dec
sub
mov
jno
jp
mov
fscale
test
js
mov
fstl
mulb
jae
push
push
xchg
adc
or
pop
push
int
std
pop
sbb
xchg
xor
imul
cmpsb
mov
xchg
mov
int
mov
or
add
inc
nop
cmp
cltd
in
pop
popf
in
sbb
adc
and
pop
addps
fildll
stos
stc
sahf
and
cmp
jno
mov
add
insb
push
arpl
ja
add
clc
xchg
loop
mov
lds
arpl
adc
into
leave
stos
dec
pop
jge
imul
test
dec
mov
mov
add
or
xchg
adc
lods
movl
mov
lahf
sub
push
dec
div
fnstcw
sub
hlt
xor
into
gs
fsubr
in
imul
movsl
cmp
and
mov
sbb
test
lea
add
xchg
xchg
mov
adcl
xchg
aaa
in
pop
mov
or
pusha
inc
lret
enter
jne
fsubr
dec
push
jle
pusha
xorb
es
movsl
scas
mov
adc
popf
pop
ss
inc
lcall
and
sti
add
ss
pop
fcomi
pop
pop
pop
adc
pop
push
jne
pop
sub
mov
aam
push
shlb
jbe
push
sub
testl
mov
xor
and
push
add
insl
fsubrs
fbstp
aas
dec
pop
mov
fimuls
mov
fadd
test
test
cmp
sbb
mov
xlat
mov
and
mov
or
sbb
mov
ljmp
push
arpl
mov
out
jnp
fwait
repz
push
sbb
paddw
fldcw
pushl
push
mov
push
xchg
add
negl
jb
idivl
cmp
cmp
pop
aaa
roll
mov
cmc
fldenv
mov
lods
add
push
inc
inc
inc
xchg
sti
push
adc
pop
dec
pushf
test
mov
imul
lret
rclb
push
test
pop
mov
cs
mov
sti
add
inc
lods
fs
mov
pop
or
mov
adc
shll
mov
push
lds
xchg
xchg
push
jae
fs
shrb
adc
je
pop
mov
xor
movsl
fstl
or
cli
and
std
stc
arpl
fs
inc
arpl
inc
pop
lods
mul
dec
xchg
outsb
movsl
push
sub
loop
shll
push
loope
xor
ret
shlb
pop
mov
sbb
out
jb
mov
rorb
imul
or
fimull
push
fcompl
adc
sub
xchg
jp
mov
lea
dec
sahf
mov
and
fwait
out
aas
sub
pop
ss
fidivl
pusha
and
lahf
pop
and
dec
jne
stos
sub
mov
inc
xlat
cs
pop
sbb
loop
ds
rcll
mov
andl
jb
cld
push
jp
jae
mov
fxam
fisubrs
popa
push
and
lods
xchg
cs
or
addr16
rcrl
add
enter
dec
mov
aad
add
lahf
sbb
jbe
loop
jns
mov
popa
fsubs
repnz
out
in
dec
push
ror
dec
loope
lods
jp
lcall
inc
fwait
outsb
xor
pop
in
jnp
movsl
pop
push
pop
jns
aad
sbb
or
xor
push
add
repnz
into
mov
rcl
mov
jo
lea
loopne
daa
int3
jbe
lret
lcall
adc
adc
leave
es
loop
inc
add
mov
dec
mov
adc
mov
xor
leave
push
add
and
adc
mov
fildll
btc
icebp
mov
push
fwait
ja
xchg
cmp
pop
cmp
out
adc
inc
pop
loope
dec
cli
dec
push
je
xchg
cmp
sbb
push
xchg
mov
add
in
aam
std
cmp
fcmovnb
cmp
les
adc
into
xchg
jp
xchg
xrelease
cmp
mov
aam
nop
sti
insb
test
adc
scas
or
movsl
dec
mov
cs
adc
sub
jo
js
and
xor
lea
add
cmp
mov
push
rorb
out
lds
flds
stos
daa
movsl
out
xor
lahf
and
add
xor
cmp
push
enter
test
aaa
outsb
repnz
dec
mov
cmp
test
ror
popa
les
jne
icebp
rorb
aaa
or
lea
cmc
int
pop
mov
ret
mov
cltd
mov
adc
aas
and
std
ficoml
add
lods
mov
pop
fildl
dec
add
sti
adc
mov
stc
call
cmc
pop
mov
rcrl
dec
lock
addl
xlat
stos
pop
cmp
repnz
cwtl
dec
jge
mov
dec
insb
xchg
dec
inc
pop
dec
adc
mov
pushf
inc
enter
fwait
jp
ljmp
sub
fwait
sar
mov
mov
adc
stos
jmp
mov
mov
sub
aas
mov
push
lea
js
bound
mov
mov
xchg
adcl
ds
out
int
test
ljmp
adc
rcl
sbb
dec
adc
cmc
ss
scas
push
mov
sar
xchg
cwtl
dec
movsl
fs
jns
mov
in
js
jmp
xchg
movsl
mov
mov
mov
xor
inc
lcall
stos
fisttpll
or
scas
inc
mov
add
push
enter
pop
mov
es
sbbl
in
push
adc
nop
mov
lods
xchg
jns
push
mov
pop
mov
fildl
enter
fdivs
mov
pop
adc
cmp
mov
pop
cmp
add
or
inc
lock
aas
jno
push
iret
cmpsl
daa
and
sub
adc
daa
sbb
popf
movsb
lds
in
mov
jb
mov
jnp
adcb
xchg
hlt
pusha
loop
pop
ret
mov
jmp
aas
ds
sub
lea
cli
mov
fisubl
shr
cmpsb
mov
cmc
mov
lcall
data16
mov
pusha
adc
nop
lock
mov
jae
dec
jbe
negl
jmp
jo
addr16
int
repnz
lods
rorb
xchg
sub
pop
sar
jns
mov
stc
into
and
push
xor
pop
rorb
aas
icebp
mov
in
mov
mov
dec
mov
push
dec
negb
pop
xchg
mov
sahf
push
imul
pop
test
or
lcall
adc
pop
fildll
mov
fdivrl
subl
sub
adc
inc
ja
outsb
cmpsb
inc
jmp
lret
mov
or
js
push
cltd
fiaddl
clc
mov
mov
gs
xchg
repnz
sbb
cmc
test
lds
or
cld
add
mov
pop
jae
mov
ja
sub
sub
pop
jno
and
dec
jmp
mov
cmpsb
leave
lret
rcl
cld
sbb
test
mull
nop
into
add
lds
sbb
mov
dec
sahf
push
cwtl
inc
pusha
movsl
rol
push
repnz
es
repnz
mov
out
xor
push
fsubr
es
call
cmc
mov
ja
dec
fldenv
movsb
jg
pop
pop
stos
inc
cmpsb
stos
dec
or
sub
sub
jbe
insl
jmp
adc
mov
call
je
push
mov
and
sub
pushf
add
add
subl
xor
dec
jns
cs
movsl
inc
mov
repz
stc
mov
nop
rol
inc
insl
inc
inc
outsl
std
and
dec
lcall
push
jae
sub
add
add
push
add
mov
mov
je
xchg
push
mov
pop
jb
jo
add
cmp
mov
inc
pop
in
cwtl
sbb
pop
inc
or
xor
in
and
mov
push
pop
cwtl
lods
sahf
aas
and
add
lds
fs
adc
maskmovq
sub
push
pop
xor
scas
inc
xchg
pop
jns
ss
enter
and
mov
and
add
add
movsb
jmp
cmp
lds
and
addl
sbb
or
pop
sbb
lret
lcall
or
xlat
and
adc
cs
in
insl
out
pop
repz
fld
mov
movsl
mulb
cs
es
mov
pop
adcl
leave
mov
or
idiv
into
xlat
or
mov
xchg
imul
cmp
imul
jge
andl
shr
dec
rorl
cld
pop
inc
leave
aaa
and
or
ret
in
mov
testb
jl
int
dec
clc
dec
sbb
sbb
sbb
pop
test
sbb
add
push
test
cltd
and
jno
sti
push
push
pop
mov
outsb
adc
xlat
cs
add
add
pop
enter
iret
jbe
xchg
incl
gs
jmp
pop
jp
jnp
sub
mov
jge
and
mov
imul
mov
insl
jle
js
divl
sbb
push
iret
shll
or
pop
add
or
adc
sti
inc
jne
aas
xchg
inc
jmp
out
in
orl
mov
pusha
sbb
xor
pushf
mov
lods
and
arpl
gs
dec
sbb
cmp
xchg
pop
push
cmp
scas
outsw
test
and
cs
sub
dec
test
lcall
test
les
cmpsb
sbb
leave
lods
add
and
sbb
and
rcrl
popl
xchg
andl
fildl
xlat
mov
jge
lea
sbb
and
push
dec
inc
adc
pop
jo
roll
mov
mov
out
gs
jbe
fldt
jbe
sub
sti
add
in
int
xchg
daa
arpl
add
dec
sbb
pop
add
inc
xchg
jecxz
dec
xor
mov
pusha
testb
js
xchg
xchg
add
mov
push
sarl
and
sahf
xorl
jg
call
add
test
dec
jo
jns
xchg
in
test
imul
shlb
adc
mov
push
mov
lods
mov
pushf
nop
push
push
scas
ret
hlt
rclb
or
adc
sbb
test
sahf
mov
dec
mov
mov
lret
out
fwait
test
mov
addb
cld
jns
xor
sbb
stos
aaa
daa
scas
jns
and
mov
clc
test
inc
pop
sub
push
lea
stos
andl
dec
push
stos
lods
lret
aas
in
xorl
or
fstpt
cli
mov
xor
push
roll
or
sbb
decl
les
andb
int
or
js
pop
mov
add
jmp
xchg
pop
pusha
xchg
xchg
aas
mov
mov
hlt
sub
in
mov
movsl
inc
xlat
sub
ret
int3
rcr
pusha
insl
fwait
adc
pushf
jp
sarl
imul
mov
lret
loopne
mov
in
je
mov
test
xor
inc
and
lret
sbb
pop
jo
add
add
sbb
out
lahf
adc
xchg
sub
sbb
xchg
mov
cmp
xor
add
mov
test
insb
xchg
xchg
sub
arpl
aaa
mov
fs
gs
mov
aad
pop
push
sub
repz
int3
ss
and
sbb
cmpb
fdivrl
xor
cmp
out
dec
pop
mov
inc
cmpsl
test
sbb
lock
jle
mov
pop
sub
mul
ja
ljmp
or
scas
xchg
and
inc
cmp
pop
scas
jle
aas
into
dec
push
sbb
std
sub
jge
adcl
sbb
and
mov
rorl
xchg
jmp
fidivs
mov
mov
pop
in
fbstp
ss
mov
cmp
jg
push
jne
movsb
addr16
jmp
outsb
mov
push
fsincos
jl
scas
orb
clc
mov
and
mov
sbb
icebp
and
add
fucomi
mov
in
lea
cmp
std
add
scas
pop
adc
in
mov
add
adc
scas
repz
dec
jae
inc
movsb
cmp
fsubrl
sti
imul
loope
inc
aas
mov
cmp
arpl
mov
sub
mov
adc
push
xchg
lret
lcall
mov
ljmp
push
sbb
sub
fwait
movsl
or
jo
mov
mov
std
popa
lret
xor
into
inc
call
sbb
das
sub
test
push
dec
xlat
add
jp
shrl
mov
push
loopne
inc
and
mov
push
mov
data16
rcrl
mov
inc
test
pop
repnz
dec
in
xlat
push
jnp
je
fwait
leave
fisttpll
sahf
lret
imul
jne
loop
jns
ss
ficomps
iret
ja
jae
jnp
shl
xor
dec
sub
pushf
and
scas
popa
icebp
scas
cs
mov
imul
jbe
mov
lcall
lods
test
fisttps
aad
clc
xchg
rclb
xor
fsubr
cmp
xorb
cmp
xchg
insl
and
sti
cmp
or
mov
test
adc
ljmp
xchg
dec
popf
lea
or
push
add
adc
add
fisubrs
ljmp
aam
add
lret
subl
mov
scas
mov
je
lods
testb
mov
adc
sti
pop
xchg
pop
std
ret
cmp
add
enter
inc
fnstenv
xchg
or
adc
inc
or
adc
fwait
in
sub
sti
das
xor
mov
shll
scas
sub
dec
add
mov
aaa
sub
mov
fstps
mov
mov
pop
xor
clc
adc
xchg
cld
mov
cmp
outsb
sub
sbb
add
sbb
jo
fwait
mov
aad
push
sbb
mov
cmpsb
shll
dec
sbb
push
sbbb
pop
pop
testb
mov
or
sub
sub
fstl
xorl
and
cmp
enter
push
pushf
int
ljmp
jg
divb
push
or
jge
or
fldt
scas
lods
xchg
fdivl
pusha
pop
xchg
insl
lea
cmpsb
ror
xchg
xor
loopne
clc
pop
fcmovnu
cmp
jl
mov
ss
push
fsubl
inc
rcrl
add
sbb
inc
pop
sub
ljmp
sbb
jb
addl
test
gs
mov
xchg
lret
stos
dec
or
outsl
mov
xchg
cmp
inc
or
sbb
or
mov
pop
xchg
fbld
ds
push
xchg
les
or
mov
mov
or
push
ret
push
add
jb
mov
dec
xor
stos
mov
push
cmp
xor
mov
sub
mov
mov
shl
rcrl
lahf
cmp
jle
out
imul
mov
loope
ss
cld
cwtl
int
loop
pop
xchg
adc
jne
mov
outsl
mov
sbb
dec
mov
and
out
jge
je
addb
mov
movsb
or
mov
jae
jmp
shl
clc
xlat
inc
cltd
cld
imul
dec
test
inc
mov
xchg
jo
imul
ljmp
jecxz
fs
xlat
cli
ds
arpl
adc
repz
popa
lds
int
imul
jl
push
sub
sub
cwtl
push
pop
pop
push
dec
push
fcos
je
fadd
mov
inc
and
cmpsl
jne
lahf
icebp
add
xor
xchg
pop
inc
or
inc
or
test
icebp
xor
pop
push
les
iret
pop
push
fs
mov
sbb
pop
xchg
lods
in
and
fistps
lods
xchg
in
shr
jp
or
and
push
das
ljmp
dec
xchg
push
shll
push
orl
ljmp
add
jns
add
or
movsb
mov
shlb
js
aad
ljmp
or
dec
dec
pop
mov
insl
mov
scas
jp
stos
orl
mov
mov
fstpl
xor
pop
dec
sarl
and
jbe
sub
xchg
bnd
das
sbb
in
cmpb
test
fists
lods
xchg
stc
insl
js
cmp
ror
repnz
push
ds
inc
cmpsl
addr16
fdivs
or
aas
mov
imul
and
xor
clc
mov
in
sbb
imul
jo
pop
aaa
shrl
shlb
cli
es
pop
inc
cs
dec
pop
insl
pop
sub
popa
add
jns
push
jmp
jo
adc
gs
movsl
aam
scas
inc
push
out
mov
mov
push
es
movsl
cmc
mov
jl
xchg
inc
adc
adc
xchg
cld
xchg
cmp
xchg
jo
mov
mov
push
popl
mov
sbb
out
in
push
mov
push
xchg
addr16
cmp
aad
pop
mov
ljmp
jnp
cltd
repz
flds
out
daa
imull
lock
out
sub
lret
push
fsubr
test
movsb
addr16
imul
in
cmp
sbb
xor
rcrl
push
xor
add
aad
sub
imul
add
inc
xchg
mov
jno
js
jae
mov
outsl
clc
push
out
fdivrs
pop
shrl
daa
jg
push
addb
popf
bound
dec
cmp
ds
repnz
cld
mov
addr16
inc
in
loopne
mov
cli
insb
jle
ja
or
mov
sbb
stos
inc
push
or
or
cmp
sbb
movsl
mov
enter
pushf
sti
xchg
pop
stc
jg
push
xor
sub
loopne
push
cwtl
and
inc
fwait
mov
divb
ss
shrl
sbb
or
cltd
out
std
shr
test
push
loope
cmp
adcb
je
nop
jnp
std
cmpsl
repnz
and
cmp
mov
pop
push
fstps
push
add
push
jl
aam
stos
inc
imul
ss
loope
add
test
jnp
inc
mov
test
repz
mov
addr16
sbb
jge
test
lods
or
cli
cmp
cmc
and
cmp
push
jnp
std
pop
adc
call
icebp
call
jg
push
push
je
mov
mov
ror
dec
cld
or
clc
mov
mov
adc
test
call
notb
fisubrl
movsb
movsb
inc
cmp
inc
dec
aas
jecxz
jns
mov
sbb
jg
addr16
pop
xchg
fsubrs
add
jecxz
dec
jle
mov
ret
test
inc
push
pop
xchg
inc
inc
push
pop
and
fistpll
adc
mov
fsts
out
pop
jnp
add
adc
icebp
xchg
pop
fsubrs
std
dec
sar
and
cmp
sti
xchg
sub
loope
rolb
int3
and
adc
adc
ss
test
inc
cmc
adc
in
lahf
push
xchg
jno
jle
aas
sti
test
adc
sbb
jno
pop
dec
ja
lea
cli
divb
mov
fldenv
andl
adc
pop
fnstenv
sub
insl
fsubs
cld
pop
inc
aam
loopne
pop
mov
inc
and
pushf
cmp
or
leave
enter
movsl
dec
push
rolb
mov
in
mov
ds
sub
xor
sub
mov
mov
push
repz
xchg
add
xor
mov
pop
je
stc
inc
shrl
xchg
pop
test
fcmovb
mov
jns
mov
shll
enter
mov
pop
xchg
icebp
mov
stos
test
cwtl
test
filds
jle
xchg
fadds
inc
and
mov
ret
dec
shll
sbbl
les
xor
aad
icebp
out
xchg
adc
cmpsb
pop
popa
mov
lds
push
int
or
repz
pop
and
repnz
out
and
mov
int3
inc
mov
fimuls
in
or
enter
dec
int
loopne
inc
outsl
jge
and
pop
jle,pt
fildl
inc
mov
arpl
insl
push
das
fwait
popf
jecxz
test
adc
mov
xor
je
mov
fisubrs
out
cmpsb
addl
sti
push
or
sub
mov
test
loop
xor
adc
sbb
js
jp
sti
pop
shlb
jnp
cmc
std
mov
xor
xchg
xchg
out
and
loopne
std
inc
mov
lock
add
das
nop
xchg
rdtsc
sub
xchg
pop
add
sahf
lock
mov
or
imul
cmp
pop
fdivp
and
pop
ret
inc
fnstcw
add
sub
xor
jo
xor
and
in
fsubrl
pop
xchg
ret
shl
push
popa
jae
cmp
mull
shr
sar
inc
lcall
jne
and
xor
fs
cmpsb
xchg
mov
lds
mov
ja
scas
adc
cltd
xchg
push
lahf
cmpsl
loop
cld
xor
cltd
xchg
adc
mov
pop
stc
sbb
inc
inc
js
cltd
or
jb
and
call
push
push
jns
aas
mov
push
ja
es
inc
leave
sub
sub
xchg
stos
outsb
gs
sarb
inc
std
push
add
and
ds
dec
adc
outsb
add
int
movsb
inc
dec
pop
into
push
mov
fdivl
daa
mov
pop
out
inc
lahf
rol
shlb
ds
scas
mov
icebp
jecxz
int3
dec
sbb
adcl
pop
rclb
aad
in
out
clc
shrl
or
push
outsl
push
xor
xor
xor
mov
fcompl
data16
insb
faddl
jo
lods
call
insb
repz
jbe
jmp
mov
scas
shll
pop
je
fmuls
inc
jb
sarb
or
and
mov
sub
add
stos
jno
xor
push
aam
inc
pop
mov
dec
mov
je
dec
or
push
pop
mov
mov
sub
in
int3
mov
out
xor
inc
movsb
adc
push
clc
sub
mov
jl
xchg
ja
negl
lods
or
mov
pop
pop
jg
mov
sub
dec
xorb
inc
mov
in
pop
xchg
adc
cs
add
jb
dec
mov
xchg
cld
xchg
stc
adc
sbb
out
lds
mov
jge
insb
incb
mulb
mov
push
test
jae
mov
insl
xchg
xchg
insb
add
push
cli
imulb
sbb
bnd
xor
fwait
push
movsb
pop
xor
mov
push
add
das
xchg
jb
outsl
sahf
int3
bound
aad
inc
jbe
push
insb
and
mov
push
lods
scas
push
out
lcall
jp
and
cltd
cmpsb
ret
and
inc
cld
dec
or
adc
cmc
push
stos
dec
decb
cmp
add
mov
fnstcw
or
std
xchg
imul
push
dec
dec
xchg
mov
inc
cmp
insl
inc
xchg
in
call
sbb
out
and
loopne
out
fwait
outsb
sahf
xchg
jecxz
sub
or
jp
mov
jge
nop
hlt
sub
bound
mov
shll
out
lret
fcoml
rcll
jle
dec
js
or
mov
push
test
add
jle
repnz
inc
lods
fdivrs
je
xchg
ja
repz
rolb
mov
inc
inc
cmp
scas
push
gs
cltd
negl
stos
dec
xchg
mov
xchg
xor
ds
pop
dec
push
data16
lcall
pop
and
push
mov
ret
mov
hlt
ret
lcall
add
aaa
or
imul
cmp
in
sbb
es
push
dec
adc
fimuls
push
mov
xor
repz
jo
mov
cmp
lea
imul
xor
call
pop
cmp
pusha
and
lock
fisttps
sbb
dec
insb
dec
pop
lea
mov
dec
push
mov
mov
sub
addr16
movsl
mov
rorl
push
js
stos
frstor
mov
pop
xor
out
push
mov
int
leave
mov
jae
ss
fwait
nop
icebp
mov
ss
push
notb
lods
popa
pop
sahf
imul
xlat
and
cmc
ja
bound
lods
xchg
sti
add
mov
push
jns
push
jae
add
xlat
aad
paddsw
stc
sbb
mov
push
sahf
or
dec
in
cld
mov
mov
pop
mov
mov
adc
clc
mov
test
xchg
in
and
dec
xor
sbb
xchg
mov
push
into
jl
lahf
sahf
or
popw
xchg
popw
fimuls
xor
add
int3
das
imul
cmp
jle
shl
cmp
ret
aaa
sbb
jmp
push
stc
inc
daa
test
lock
sbb
icebp
jg
shlb
fistpll
xchg
mov
cmc
imul
int3
mov
pop
lds
popf
xchg
xchg
adc
ret
pusha
stos
sub
in
inc
andb
add
stos
pop
pop
test
test
jg
inc
cmp
mov
cmpb
jbe
fdivrp
cld
outsl
sbb
cmp
aad
rcrb
ficoml
add
sar
or
mov
jbe
xchg
std
inc
sub
dec
push
inc
or
xchg
int
mov
lahf
iret
sbb
and
push
xchg
mov
out
vpandn
idivl
jmp
aaa
adc
inc
pop
jle
leave
mov
mov
mov
test
add
cmp
sahf
test
call
fwait
inc
dec
mov
scas
pop
fdivrl
inc
xchg
les
cvttps2pi
aam
sarl
mov
cmp
fsubr
fs
or
mov
movsb
jne
cmp
xchg
push
or
pushf
ja
popf
lock
lods
fidivrs
sbb
mov
xchg
inc
jnp
orl
mov
pop
sub
lret
jp
imul
pop
pushf
mov
cwtl
mov
mov
adc
mov
incl
inc
mov
pop
pusha
mov
ret
pop
pop
pusha
mov
jg
push
lahf
pop
adc
fs
cmpsl
add
sub
out
xchg
xor
popa
cmp
sbb
icebp
test
in
dec
call
adc
aam
mov
mov
mov
lds
pop
cmp
pop
fisubrs
inc
mov
cwtl
mov
pop
fdivl
adc
cmpsb
cmpsl
nop
in
int3
sti
movsb
inc
pop
enter
sbb
xlat
outsl
add
pop
test
mov
xor
mov
dec
pop
fisubl
shrb
pop
or
scas
or
and
inc
insl
jns
inc
sarl
arpl
in
lods
iret
adc
pop
adc
mov
mov
xor
stos
test
aam
pop
sbb
out
add
mov
mov
in
xchg
repnz
add
ja
xchg
test
sbb
ds
sti
daa
shlb
loopne
mov
repnz
and
sub
nop
ret
fiaddl
ja
inc
pusha
inc
adc
jb
cli
add
int
std
jp
rorb
mov
or
push
jg
add
sbbb
insb
jo
xchg
ficoml
or
jp
xchg
or
cld
aas
mov
fidivl
mov
dec
test
add
fldenv
sbb
fcmove
pop
stos
adc
lahf
xchg
sub
clc
mov
pop
clc
jbe
or
aaa
dec
dec
ds
es
adcb
sub
sbb
fs
sub
fsubr
cmp
filds
in
lret
mov
inc
sub
mov
jmp
clc
push
add
cmp
popa
inc
loop
scas
push
mov
imul
lahf
cmc
pop
xchg
xchg
add
jl
daa
jo
iret
lret
ret
pop
push
push
bswap
enter
hlt
ss
out
nop
mov
or
mov
dec
popa
leave
sbb
inc
pop
jae
test
addb
mov
daa
loop
push
cmp
push
mov
jp
les
sub
mov
dec
rorb
sub
xor
cwtl
or
jg
clc
push
mov
xchg
dec
loopne
cs
mov
or
clc
mov
inc
or
sub
pop
mov
movb
push
jecxz
lcall
dec
push
rolb
stos
mov
jns,pt
out
jmp
sub
shlb
push
pop
movsb
ss
and
push
cmc
pop
movsb
xor
stc
or
xor
rclb
out
xchg
les
pusha
pop
orb
je,pn
dec
mov
mov
fistl
out
mov
jns
push
mov
shlb
hlt
pop
xor
lea
outsb
jl
js
push
pop
nop
xchg
mov
xchg
mov
ljmp
inc
mov
jle
lods
mov
mov
std
jno
or
pop
insb
cmp
movsb
repz
cltd
in
xchg
outsb
mov
xchg
adc
jo
dec
out
fcom
push
mov
in
add
mov
dec
ljmp
cmpsl
icebp
insl
add
insl
or
add
mov
or
inc
xor
xor
xor
jp
cmpsl
shrl
in
notb
pop
mov
lahf
test
push
ja
cltd
fucomip
cltd
push
inc
subl
xor
sti
pop
fcmovnbe
repnz
sar
inc
fbld
cli
shll
test
or
fisubl
fildll
loop
mov
xor
pop
int
push
sbb
bound
dec
jno
cmc
add
fstps
or
cmpsl
dec
adc
arpl
xor
lds
mov
pop
lcall
xchg
daa
jge
or
xor
sbb
mov
fisttps
push
pop
cwtl
dec
mov
dec
lahf
xchg
sub
jp
jb
stos
shll
sub
mov
pop
xor
push
ja
adc
fldcw
sbb
mov
ret
aaa
sub
push
push
add
or
ds
adc
mov
ret
mov
adc
pop
ljmp
mov
mov
adc
and
sub
dec
shrb
js
sub
bound
dec
mov
pushf
leave
sarb
cmc
jb
test
cmp
xchg
mov
add
out
push
jg
scas
fsubrp
jne
push
loopne
jg
std
add
cli
fiaddl
sbb
pop
lods
mov
mov
imul
sub
push
dec
dec
push
and
mov
dec
sahf
out
xchg
push
stos
ret
pop
loop
dec
push
push
movsb
loope
jle
lea
sub
insl
mov
out
fidivrs
arpl
pop
xchg
testb
push
dec
fidivrs
pop
lds
cmc
xor
js
rcll
repz
addr16
mov
inc
insb
or
or
inc
push
lods
and
sbb
pop
lea
push
mov
mov
dec
je
insl
xor
mov
push
enter
shll
addr16
imul
js
nop
lret
mov
add
mov
shrl
out
sbb
stos
icebp
sbb
out
mov
test
mov
js
inc
sbb
cli
push
imul
jp
inc
mov
sub
pop
mov
and
adcl
sbb
cmp
push
jmp
or
mov
jp
or
mov
mov
jns
pushf
mov
shlb
pusha
out
push
ret
pop
pushf
call
les
push
push
mull
cmp
xlat
out
xchg
jns
lock
cmc
scas
lods
inc
jecxz
out
fisubrs
pop
icebp
xor
cmc
lcall
mov
enter
outsb
cmp
sub
into
push
push
mulb
ljmp
icebp
jg
out
pop
dec
fs
jecxz
mov
push
pop
call
addl
jg
mov
or
fildl
imul
jge
and
aam
sarl
flds
out
icebp
lcall
out
fwait
lods
inc
inc
push
fwait
negb
sbb
lahf
mov
ficoml
das
pushf
imul
cmp
das
mov
in
test
in
xchg
lret
cmpsb
repz
pop
inc
push
pop
pop
sbb
outsl
stos
pop
pop
aam
push
fcmovb
sub
cmpsb
sarl
and
loope
out
dec
movsb
pop
inc
sub
add
sub
adc
xchg
xchg
push
jecxz
push
pop
popf
das
xor
pop
push
pop
lret
xchg
jo
shlb
fmul
xchg
inc
jo
xchg
out
adc
clc
repnz
decb
stos
movsb
mov
test
std
scas
jbe
pop
sahf
les
xor
movsb
mov
sbb
cmpsl
xchg
icebp
xchg
jge
cmp
pop
fmulp
lods
inc
jge
cmp
cltd
jl
inc
ss
in
mov
popa
int
das
mov
icebp
ja
add
fiaddl
data16
sub
sbb
in
sub
call
lcall
lcall
or
fildll
jne
mov
aam
loopne
pop
push
inc
icebp
cmc
fidivl
add
test
aad
inc
xchg
jns
aas
jmp
pop
xchg
enter
iret
adc
or
sbb
mov
bound
rcll
cmp
and
and
mov
and
dec
lock
sbb
lcall
sti
mov
int
xor
rolb
pop
pop
mov
movsl
scas
push
cmp
test
loopne
in
call
or
mov
xor
adc
fwait
je
pop
mov
xor
mov
jmp
lret
add
lods
outsl
mov
pop
inc
jp
fisttpl
sbb
pop
mov
decl
mov
daa
shlb
push
cmpsb
out
pop
cmp
jns
inc
movsl
fcoml
test
arpl
pop
sbb
rolb
sbb
repnz
out
fidivs
not
loopne
mov
adc
add
dec
int
rcl
lret
and
popa
data16
inc
add
fistpll
scas
daa
leave
xorl
jno
mov
jno
jge
ss
xchg
adc
adc
movsl
in
mov
pop
adc
mov
push
test
sbb
faddl
lods
jecxz
std
data16
jle
mov
nop
enter
dec
je
push
sub
jg
iret
inc
std
mov
aad
or
adc
adc
loop
pop
test
or
bndstx
adc
mov
cmpl
fisttps
inc
cltd
mov
push
aaa
mov
jb
jo
scas
clc
push
dec
lcallw
sub
mov
inc
je
fmuls
cmpb
pop
mov
incb
mov
sub
ffree
test
test
add
adc
gs
dec
rorl
inc
add
mov
sub
cmp
lcall
addl
mov
or
inc
pop
shll
jb
js
adc
jl
jmp
dec
mov
inc
dec
mov
int3
add
mov
push
mov
xchg
jge
adc
fisttpl
popf
xchg
enter
fldl2t
dec
xlat
aas
out
scas
insb
mov
lods
push
icebp
xor
loopne
cltd
pop
leave
fucomp
sub
stos
cs
xor
inc
mov
cs
mov
cwtl
push
push
aas
dec
pushf
mov
or
sbb
push
mov
aas
add
push
xchg
outsl
outsb
gs
xor
fldenv
popf
insl
scas
subl
inc
ret
call
out
icebp
cmp
pop
test
idivb
shlb
jg
or
jl
push
insb
dec
sbb
ret
bound
lret
sub
rol
imul
sbb
xchg
mov
test
xchg
mov
or
adc
out
aad
std
stc
into
mov
pop
sti
loop
loopne
iret
mov
test
mov
pop
div
jb
cmp
pusha
mov
test
xchg
ds
sarb
xor
or
sti
xor
xchg
test
rcll
push
jns
sbb
ljmp
mov
lea
ret
loopne
pop
and
insb
ret
fucompp
or
stc
inc
loop
xor
and
mov
cmpsb
and
mov
movsl
mov
cmpsl
leave
jge
push
enter
fsubrs
adc
adc
pop
xor
in
addr16
loopne
repz
mov
test
outsl
cmp
in
andl
dec
faddl
jb
xchg
notb
sub
fisubl
mov
arpl
inc
jl
pavgw
and
aaa
cmpsl
aas
popf
or
push
mov
sbb
aad
and
jbe
cwtl
mov
mov
or
mov
ret
sbb
dec
flds
call
imul
ret
jo
xor
mov
std
xchg
sbbl
aad
cmp
lock
popa
or
or
loopne
bound
push
lods
rcrl
hlt
sbb
fisttpl
lds
and
leave
std
lea
sub
lods
and
xor
xor
jno
fwait
inc
mov
popa
jmp
pop
jne
scas
repnz
fmuls
je
sar
enter
xchg
xor
jecxz
pop
xor
fidivs
out
lahf
mov
xlat
jno
pusha
je
sbb
jno
jge
mov
adc
adc
outsb
loope
pushf
out
push
adc
rorl
shlb
push
into
fwait
add
sbb
ret
in
mov
pusha
bnd
pop
lea
mov
adc
or
loop
subl
push
mov
ret
andl
and
js
and
dec
lds
insl
dec
loopne
xchg
or
scas
inc
push
xlat
popf
aam
or
ss
push
popl
cltd
mov
lods
repnz
call
movsb
dec
xchg
popa
sbb
xor
aam
in
cmp
adc
fisubs
xor
das
xor
xor
cmpl
imul
xchg
dec
ljmp
adc
hlt
imul
xor
stos
mov
cmpsl
xchg
test
pop
incl
jg
cmp
jge
xchg
into
and
ret
dec
mov
cmp
push
dec
pop
mov
sub
jbe
jmp
sub
sbb
out
repnz
dec
mov
push
dec
push
pushf
xor
add
xor
adc
sbb
test
icebp
dec
sub
dec
add
adc
xchg
mov
movsb
push
xchg
xor
mov
fisttpl
aas
je
in
shl
xlat
test
shr
fisubrs
addl
mov
jmp
ror
enter
mov
and
rclb
mov
adc
push
lock
mov
pushf
out
xor
subb
sbbb
jns
in
jne
pop
test
mov
fadds
out
pop
adc
inc
scas
aaa
test
pop
aas
jp
jo
sbb
jmp
ja
cli
outsl
pushl
cmp
push
rolb
aas
aad
or
outsb
outsl
pop
sbb
inc
pop
mov
fdivs
loopne
stc
adc
xchg
sbb
cltd
stc
pop
pop
and
sbb
dec
push
movsb
gs
cmpsl
repnz
jne
mov
outsl
push
test
stc
mov
mov
add
xor
inc
sbb
push
lahf
subl
dec
mov
jo
rcll
mov
or
out
int3
or
fiaddl
int3
inc
cmpsl
lea
pop
sarb
mov
add
push
fs
data16
xchg
js
xchg
pop
xor
xor
aas
xchg
push
fbstp
movsb
cmpsb
in
xchg
xor
and
pop
and
lods
ficoml
cli
test
stos
mov
enter
movsb
mov
push
data16
test
cmp
mov
loop
insb
imul
cltd
xchg
lods
mov
mov
iret
pop
daa
xor
mov
inc
lret
fidivrs
test
cmpsl
imul
and
lcall
and
int3
scas
or
je
push
rcl
xchg
push
dec
mov
and
and
mov
mov
push
fdivrl
jg
and
sub
call
lock
loop
sarl
aam
addr16
scas
pop
les
lret
stc
in
jno
cmpsb
stos
outsb
nop
stc
sub
frstor
sub
mov
les
hlt
lds
aad
nop
jle
mov
outsb
cmpsb
push
shl
out
mov
mov
in
pop
jmp
jb
insl
lret
or
cli
loopne,pt
jp
aad
into
jecxz
push
and
push
fdivl
pop
xor
and
push
pop
mov
pop
bound
sub
popf
es
orl
inc
out
scas
punpcklwd
out
cld
imul
xor
cmp
or
loope
dec
mov
icebp
loope
push
or
mov
rolb
loope
sbb
rcl
push
jnp
pushf
pusha
or
mov
int
jle
cmpsl
sub
out
das
les
mov
aaa
add
mulb
jmp
inc
fistps
js
sbbb
jecxz
push
lret
loopne
in
fcmovb
push
and
mov
daa
pop
aas
clc
lock
pop
leave
scas
mov
jge
aaa
sarb
mov
sbb
test
test
xor
in
mov
or
dec
clc
lods
cld
xlat
xrelease
or
mov
rol
ja
mov
leave
fisttpll
sti
and
xor
jp
cmpsl
ret
pop
mov
or
push
pmaxsw
pop
ret
sbb
and
mul
push
adc
sub
ret
pop
adc
jmp
cmp
addl
cmc
lahf
mov
adc
add
shll
stos
aas
or
sbb
sbbl
pop
aam
sbb
mov
xor
mov
and
sbb
sarb
int
push
lcall
fwait
push
pop
rcrb
push
aam
shlb
cmp
clc
fstl
or
add
leave
imul
cmp
daa
movsb
fld
mov
in
pop
insb
ja
gs
jmp
sub
mov
sarb
adc
sbb
push
adc
nop
fstl
jge
cltd
test
or
sbb
push
mov
imul
push
decl
out
cwtl
add
xorb
sub
imul
idiv
push
xchg
mov
std
add
add
in
fiadds
add
cwtl
jmp
push
outsl
jmp
push
xchg
push
jo
daa
mov
mov
adc
jae
pop
imul
xlat
push
and
pusha
xor
subb
fisubrl
arpl
les
jne
scas
and
lret
jge
aaa
mov
int3
in
js
fsubrs
imul
add
rcl
sar
cmpsl
cmpsb
sbb
cmp
sahf
aam
add
mov
test
push
out
lods
sbb
dec
dec
dec
movsb
push
jbe
dec
popa
jne
dec
xchg
add
bound
scas
enter
add
and
sub
pop
add
sub
sahf
mov
daa
adc
jo
aam
ds
vfrczsd
mov
mov
cmp
sub
lret
or
cmpb
xor
ret
pop
pusha
push
cmp
aad
aad
jl
lret
les
bound
xchg
sub
notl
mov
pop
push
sub
mov
pushf
cmp
jns
adc
inc
add
push
push
cld
jb
cmc
dec
cmpsb
cmp
std
insl
add
in
xor
dec
arpl
jbe
cmp
pop
cmpsl
cmpsb
add
dec
scas
cmpsb
dec
inc
or
addr16
jl
mov
shrb
in
jle
or
nop
fldenv
push
and
mov
mov
jmp
pushf
aam
pop
push
add
mov
push
pop
inc
out
dec
dec
sbb
lods
cltd
cld
jl
mov
add
xchg
xchg
aaa
cmp
lods
jae
sub
out
mov
fwait
cmp
cmpsl
outsl
insl
xor
mov
xchg
popf
or
or
sub
in
shll
add
sahf
scas
adc
and
mov
pop
xchg
xor
lods
add
sahf
imul
movsb
mov
mov
dec
xor
mov
int3
adc
mov
ss
lea
pushf
and
adc
cmc
fs
jmp
push
in
xchg
xchg
sbbl
movsb
movsb
mov
mov
lods
lock
xchg
jbe
xchg
das
and
daa
divb
call
aas
lcall
std
pusha
mov
scas
movsb
ret
rorb
pushf
aad
je
cmp
rclb
out
jecxz
sbb
outsb
xchg
cld
cmp
int
jecxz
cmp
aaa
push
loopne
jg
sub
dec
lods
movl
mov
mov
adc
mov
cwtl
test
mov
inc
xor
adc
cwtl
cmpsb
mov
pop
mov
outsb
xlat
movsl
js
call
das
jae
inc
mov
and
test
pop
out
stos
pop
inc
mov
ss
in
mov
xchg
and
push
mov
xor
mov
push
insl
mov
add
and
mov
push
inc
icebp
sbb
daa
lret
std
in
jg
xchg
lock
pushf
pop
xlat
sub
jo
lock
stc
add
push
adc
repz
jno
add
sbb
add
lret
add
cmp
mov
mov
aad
or
repnz
sti
jmp
and
mov
fdivs
into
jno
rolb
and
push
popf
rclb
inc
fdivs
mov
or
pop
push
mov
dec
push
xor
rcrb
ja
es
mov
add
popf
mov
pop
push
cmp
mov
push
into
mov
dec
mov
adc
mov
add
adc
cmp
or
adc
push
call
or
scas
push
out
mov
ljmp
jmp
shll
sti
xchg
ja
mov
or
mov
fistl
dec
mov
mov
dec
out
or
sub
sbb
xchg
rcll
or
mov
dec
pusha
pushf
adcb
mov
lea
cli
or
xchg
adc
or
adc
push
dec
pop
ljmp
adc
xchg
jne
xchg
xchg
pop
insl
je
sbb
sub
mov
sub
adc
shll
jl
jle
xchg
jno
and
sub
fstps
hlt
sbb
sub
or
bound
fistl
dec
add
cltd
pop
xchg
xlat
dec
push
xor
imul
sub
sbb
adc
mov
lods
mov
ljmp
mov
cs
inc
sbb
aas
out
je
fsubrs
iret
aam
mov
addr16
mov
cmpsb
push
frstor
int3
push
test
clc
mov
fdivp
xlat
pop
mov
push
push
mov
mov
leave
popf
popa
or
sub
cmc
jbe
ja
mov
sub
sub
xchg
popf
inc
cmpsb
movl
jle
cltd
ret
popa
inc
lea
fucomi
dec
movsl
push
js
cmpb
cmpsb
test
mov
hlt
adc
and
push
ret
clc
mov
adc
nop
xor
outsb
inc
push
pop
xchg
je
push
int3
mov
adc
cmp
or
ljmp
subb
jecxz
shll
adc
jl
and
cwtl
and
sbb
sub
imul
jp
pop
std
and
rol
sqrtps
roll
out
pop
xchg
and
jmp
loop
cmp
in
add
movsw
sti
dec
push
filds
daa
push
fdivl
test
sahf
xor
fidivl
and
xor
push
add
cmpsl
bound
add
xchg
in
mov
cltd
aas
pusha
test
movsl
cmp
aam
mov
iret
imul
dec
stos
jp
outsl
mov
and
out
filds
xchg
loopne
roll
sub
cmp
jp
jle
dec
push
inc
inc
xor
push
scas
rclb
icebp
xor
pop
inc
test
push
sbb
push
aas
mov
jmp
cmc
je
sub
stos
notl
test
fiadds
fmuls
packuswb
cwtl
or
jmp
in
orb
imul
inc
stos
xor
das
mov
pinsrw
fsub
pop
inc
or
sub
pop
push
mov
ja
js
mov
jne
hlt
mov
ja
pop
push
mov
xlat
leave
or
inc
lock
test
mov
test
aad
fdivl
mov
or
add
mov
inc
add
jns
dec
sbb
andl
or
movsb
xchg
sub
icebp
cmp
jg
imul
jmp
mov
inc
mov
jae
inc
fstpl
xchg
pop
aad
xchg
pop
xchg
push
loope
rorb
push
icebp
or
pop
jae
nop
add
push
and
push
int
fwait
ss
push
xor
jno
jg
mov
push
cmp
nop
inc
jo
or
je
adc
xchg
ficompl
jge
pop
adc
cmp
push
or
call
andb
inc
pop
mov
inc
mov
lcall
jle
sub
lret
je
arpl
stos
lds
cli
push
rcrl
movsl
fucomp
ret
adc
pop
push
repz
into
iret
adc
push
ret
rorl
jge
adc
xchg
test
dec
add
or
test
fildll
push
outsl
mov
push
xchg
mov
xchg
or
xor
sarl
adc
adc
or
popa
jp
inc
xor
xchg
jg
or
sbb
push
and
mov
outsl
daa
and
fwait
pushf
xchg
fcomip
shll
fcmovnb
and
popa
mov
add
sbb
inc
mov
jmp
insb
push
jbe
adc
shl
jmp
add
rorb
and
js
mov
or
jl
push
testb
imul
lahf
rorb
sbb
jecxz
stos
push
pop
cmp
insb
ds
jmp
nop
loopne
pop
repnz
jge
sub
xchg
scas
aaa
popa
hlt
int
popf
fnstcw
mov
push
adc
xlat
mov
clc
jno
xchg
lods
addr16
inc
sahf
sub
je
or
dec
scas
sbb
and
xorl
mov
lahf
arpl
in
dec
or
outsl
cmp
int
out
xchg
jle
adc
inc
stc
mov
xlat
xchg
sti
add
dec
and
jp
mov
add
cmp
je
jp
sbb
or
mov
or
or
insb
push
pop
lods
movsb
sbb
imul
mov
adc
push
in
mov
addb
iret
push
lcall
cs
jb
fldt
outsl
xlat
xor
xchg
int3
mov
inc
or
cmp
push
adc
inc
into
int
dec
sub
mov
adc
fnstcw
iret
mov
xchg
lds
roll
aad
ss
popf
test
dec
inc
pop
mov
xor
sub
inc
stos
outsl
cmp
xchg
insb
sti
cmp
call
andb
repz
cli
push
jb
mov
jp
inc
cmp
sti
xchg
pop
xchg
cmpsl
loop
dec
pop
cmp
adc
sbb
out
frstor
call
or
lds
cwtl
mov
mov
adc
das
cmp
xorl
jle
fdivrl
testl
add
stos
push
inc
or
xchg
sbb
mov
or
xchg
inc
fcmovnb
fnsave
xchg
mov
cmp
test
add
aad
adc
mov
enter
push
and
sub
iret
ds
mov
ret
scas
sbb
inc
inc
add
push
sbb
fisubrs
xor
movsl
mov
cs
mov
adc
add
push
aam
sarl
jecxz
add
das
cmp
pop
xor
dec
inc
sub
xlat
jle
mov
sahf
int3
sti
inc
jl
adc
push
jle
sbb
mov
mov
outsl
leave
int3
aad
fisubl
xor
sbb
push
cli
jmp
cmpsl
xor
shrl
shrl
push
pop
and
inc
roll
rcrl
adc
sub
int3
xchg
sahf
loope
je
and
mov
cmp
dec
hlt
jecxz
jmp
jge
enter
pop
fbld
lods
sub
repz
or
jg
mov
inc
sbb
outsb
jecxz
adc
fsubrl
cli
mov
test
push
jge
jno
jb
je
jne
pop
push
rol
and
fisubs
movsl
lret
pop
cmp
shll
push
mov
mov
test
fistpll
pusha
push
test
and
insb
aas
sbb
sub
mov
sub
add
sbb
push
add
mov
sahf
sub
or
test
js
out
enter
add
movsl
adc
push
icebp
fadds
cmc
mov
dec
add
insl
rcl
les
add
push
test
xchg
inc
xchg
or
fidivl
xchg
mov
fwait
mov
add
cmp
jg
fcos
xor
je
popf
dec
out
test
adc
or
test
jecxz
rol
fwait
aas
dec
insl
imul
pusha
adc
lahf
xchg
push
push
sub
popa
or
adc
orl
sbb
inc
loop
xchg
rclb
inc
xor
jle
iret
mov
paddd
cmp
mov
mov
in
cmp
aad
stos
jo
stos
pusha
mov
aaa
int
shlb
rclb
cmp
pop
mov
lret
sub
mov
pop
cmp
mov
sub
jb
jp
fdivrs
test
lahf
xor
arpl
push
scas
cli
decb
aad
clc
jle
inc
and
jmp
shrb
xchg
xor
rep
pusha
stos
scas
sub
mov
insb
pushf
popf
int
pop
or
sbb
sahf
inc
pop
mov
sbb
jb
in
sub
xchg
out
lret
xchg
ror
dec
lret
pop
xchg
movsb
or
ja
pusha
scas
leave
cmp
jb
xchg
inc
das
fxch
nop
subl
sub
ret
jecxz
out
pop
hlt
add
cmp
push
jo
into
sbb
or
fcom
daa
jecxz
cmp
mov
sub
pushf
lea
imull
dec
aas
or
pop
mov
rcll
sbb
xor
jo
jl
ret
sbb
mov
fisttps
add
pop
xchg
sbb
or
lret
or
jb
sti
add
or
xor
orb
inc
or
daa
and
add
mov
cmp
std
mov
xchg
mov
mov
pushf
inc
jns
inc
aas
lods
out
mov
les
inc
shl
icebp
pop
dec
adc
xchg
mov
movsl
or
pop
xchg
shll
andb
cmp
pop
and
out
or
mov
scas
dec
push
mov
sub
dec
stc
and
arpl
lret
mov
pop
mov
xchg
add
lret
loopne
jae
mov
mov
fcmovbe
movsb
jmp
push
dec
imul
fidivs
fsubl
int
cltd
sbb
test
divl
mov
loope
in
test
sbb
cmp
mov
lret
add
xor
mov
mov
ljmp
push
push
rclb
mov
sbb
jne
into
loope
aas
int
ret
mov
int
mov
nop
mov
notl
fsubrs
mov
mov
xchg
mov
daa
xchg
jge
lea
ja
jmp
in
cmp
add
aas
sub
cmp
int
add
shrl
stos
or
mov
dec
es
pop
leave
ffree
jns
clc
lods
loop
jmp
fmuls
cmpb
pushf
fdivrs
out
xor
add
adc
push
sbb
xor
cmp
xor
jmp
in
lcall
iret
in
or
js
fidivrl
cmpsl
and
cmp
mov
aam
lret
leave
add
les
sbb
cmp
addr16
add
aad
sub
scas
fwait
in
ja
add
rorl
sbb
or
int
out
shlb
imul
out
pop
jp
nop
mov
loope
divb
out
and
dec
or
mov
cmp
sarb
xor
cmpsl
lcall
inc
clc
sbb
mov
loop
cmp
cmpsl
pop
cwtl
sub
sbb
fldenv
js,pn
push
gs
loope
ret
popa
out
or
mov
sub
test
pop
leave
fnstenv
pop
or
scas
adc
pop
pop
jae
addr16
sbb
mov
mov
iret
pop
movsl
aas
mov
es
pop
mov
mov
movsb
adc
sbbb
pop
mov
adc
clc
imul
pushf
test
leave
pop
mov
aas
outsb
out
data16
test
xorb
sbb
pop
inc
pop
fs
jg
cs
bnd
adc
test
addr16
jp
sti
test
sub
push
adc
dec
popa
ljmp
cmc
shlb
xor
es
cmpsl
add
imull
cld
cmp
cmp
pop
add
sub
or
xlat
sbb
dec
mov
add
loope
mov
push
lods
pop
xchg
bnd
dec
mov
or
or
or
mov
rcr
adc
fcmovbe
xor
add
dec
xorl
js
stc
ss
dec
incb
xchg
gs
psrlw
push
icebp
in
sbb
fidivl
push
pop
inc
adc
add
push
xor
je
test
pop
pop
inc
mov
stos
xorl
mov
jne
loope
inc
sarb
fsubrl
hlt
push
xor
idiv
or
icebp
xor
outsb
fcomip
inc
dec
icebp
movsl
cmpsb
iret
sub
cmp
stc
stc
sbb
dec
inc
cmc
pop
adc
cmp
mov
mov
rorb
movsl
cs
cmc
dec
sub
shr
out
inc
loopne
xlat
in
add
xor
lea
mov
pop
mov
mov
add
push
jmp
mov
fstps
mov
pop
stos
cmp
out
enter
push
inc
mov
loop
out
mov
jnp
mov
addb
xor
dec
sbb
fsubs
or
out
or
es
cmp
adc
inc
pop
jae
cld
sub
fs
sti
stos
into
jmp
loop
sub
mov
aaa
out
inc
jno
bnd
ja
sbb
or
rcll
daa
jl
pop
xchg
dec
les
lret
xor
lds
add
rorb
mov
lret
scas
push
push
fwait
dec
cmp
mov
push
data16
loop
or
xor
dec
fcompl
cmp
and
cmp
out
push
lcall
test
rcll
ret
mov
or
test
mov
imul
xchg
ret
mov
addr16
stc
xor
jg
jb
pop
cmp
hlt
notl
cmc
aaa
repz
scas
ficompl
je
pop
lea
adc
push
or
pop
leave
inc
xchg
and
std
and
add
sub
or
dec
loop
mov
or
stos
mov
ret
push
pop
inc
inc
div
or
movsl
cmp
daa
jl
xor
sti
cmp
inc
stos
jbe
das
lods
xchg
cwtl
shl
push
daa
lret
cwtl
or
jo
repnz
xor
xchg
jg
sbb
jmp
mov
test
fildll
cwtl
or
roll
pop
out
incl
movsb
add
mov
mov
pop
pop
sbb
xor
sbb
mov
iret
cmp
pop
xchg
mov
in
adc
in
pushf
jno
jns
xchg
lods
sub
and
lock
cmpsb
push
pop
inc
sub
push
sbb
jecxz
xor
les
test
ljmp
test
dec
and
popfw
sahf
sbb
in
xchg
pop
dec
loope
or
lods
xchg
ds
push
mov
in
stos
out
shl
or
scas
mov
pop
mov
or
jmp
adc
in
and
ja
les
sbb
or
out
hlt
je
fcmovnu
jo
mov
cmp
cwtl
xchg
adc
in
mov
aaa
rclb
jmp
mov
loope
jae
mov
mov
filds
ja
inc
std
mov
pop
mov
vucomiss
mov
aaa
xchg
dec
in
push
mov
sbb
out
xchg
ds
mov
pop
mov
sub
mov
cmp
inc
push
push
enter
mov
fwait
xor
mov
add
sub
push
jo
addl
mov
dec
lret
mov
ffree
push
jb
in
sub
in
leave
or
scas
pop
inc
jmp
fs
popf
jo
cmp
lea
mov
push
std
repz
rcrl
adcl
popf
lcall
jnp
mov
fwait
ss
pop
incb
ljmp
dec
sub
mov
mov
into
or
test
mov
or
fchs
movsb
cmp
cmp
addr16
lcall
pop
sub
mul
stos
jge
sub
sub
or
flds
in
stc
orb
cmp
cmp
sub
aam
addr16
push
xchg
or
jmp
push
das
int3
cmp
or
dec
xchg
mov
daa
push
jecxz
xchg
insb
inc
mov
sbb
in
inc
mov
in
test
mov
jmp
xor
pop
xchg
jmp
inc
shll
loop
fbld
or
sbb
jp
out
adc
dec
out
pop
or
xchg
pop
cmp
dec
push
mov
ret
lea
fists
movsb
out
jl
jnp
push
sbb
xor
test
out
enter
adc
cmp
mov
pop
xor
aas
xchg
add
mov
and
lret
mov
fs
pop
inc
or
xchg
and
and
dec
out
jns
xor
xchg
popf
das
push
int
inc
js
push
jl
inc
adc
pop
sbb
and
push
stos
lcall
addr16
dec
and
pop
aas
sub
jns
cs
lret
add
and
or
fsubr
sarb
popf
jnp
mov
js
sbb
adc
dec
pop
pop
test
out
popa
scas
movsl
lods
mov
fstpt
aaa
in
inc
and
sbb
mov
loop
dec
lds
subl
call
ljmp
out
push
into
mov
das
scas
outsb
fstps
xchg
inc
enter
and
adc
and
jno
lods
pop
push
push
out
lods
mov
or
stos
std
mov
pushf
inc
shl
jge
xchg
popf
in
push
cmp
stos
icebp
pop
pop
push
push
mov
pop
push
xor
in
add
enter
dec
jb
nop
out
fdivr
icebp
icebp
or
add
out
rcrl
jne
sub
xchg
cmpl
dec
daa
mov
mov
stos
adc
lahf
xor
cwtl
outsb
iret
loop
push
dec
popa
cltd
jp
mov
xchg
repnz
arpl
adc
loopne
sarb
leave
cmpsb
lods
in
cltd
xor
xchg
mov
xor
pop
sbb
or
jmp
sbb
jmp
clc
ljmp
mov
inc
push
subb
xor
mov
shr
lea
shlw
xchg
xor
xchg
jnp
pop
sub
bound
pop
shlb
xchg
ret
bound
stos
dec
nop
arpl
bound
mov
xchg
stc
xor
mov
jbe
sbb
js
ret
pop
dec
inc
daa
stos
cli
pop
cli
dec
pop
pusha
das
in
xchg
push
ss
clc
and
jne
xchg
out
jmp
push
pop
aaa
loopne
add
xor
ss
mov
dec
jbe
sbb
jbe
xchg
js
out
sbb
cmpl
out
fdivl
cmpsb
xor
cmp
loopne
and
jecxz
icebp
jno
mov
cltd
loopne
fwait
lock
enter
xor
int3
ret
push
add
mov
movsl
ds
adc
movsb
mov
sub
ja
mov
loope
jne
outsb
mov
sbb
sti
jle
xor
cmp
or
push
ss
adc
xchg
movsb
andl
xchg
mov
popf
sahf
mulb
jle
cmpsl
mov
adc
and
inc
cmpsb
sub
and
fs
out
pop
mov
mov
mov
jmp
xchg
ror
mov
js
lea
out
faddl
or
jnp
sahf
mov
addr16
roll
mov
sub
mov
fdivs
xchg
cmpsb
loopne
and
shll
pop
mov
test
out
xchg
adc
icebp
pop
pop
mov
pop
mov
and
mov
test
and
mov
jne
pop
mov
lea
sub
push
addl
mov
xchg
lret
rorl
bound
orl
hlt
sti
xchg
imul
pop
in
jge
js
es
daa
add
cld
lds
push
ja
mov
dec
std
add
push
xchg
testl
ljmp
sahf
mov
or
idivl
es
xchg
bound
mov
loopne
mov
jb
loopne
cmpsb
aam
sub
pop
popf
in
clc
sbb
in
testl
push
or
mov
inc
or
sarb
lds
push
jmp
xchg
xchg
daa
dec
ss
pop
loope
pop
sbb
pusha
pop
pop
into
rorl
push
cmp
iret
xor
aad
jl
adc
fdivrs
cmc
push
test
popf
mov
sub
sub
loop
icebp
lahf
test
cli
mov
add
in
ljmp
dec
mov
sti
dec
cmpb
push
jmp
loope
xor
rorb
jmp
and
idivl
jecxz
and
insb
jg
test
pop
or
rcr
or
out
jp
iret
or
push
xchg
scas
fs
add
adc
push
mov
mov
popf
outsl
jb
mov
lret
jmp
inc
mov
dec
or
out
xchg
cmp
fucom
stos
sbb
xor
jbe
addb
pop
xlat
jae
push
aad
and
pop
cltd
insl
jle
mov
mov
aaa
mov
cmp
jno
mov
fsubs
insl
stos
or
pusha
pop
ds
repz
repz
inc
mov
sbb
jmp
nop
add
inc
pop
fbstp
out
subb
arpl
push
sahf
enter
icebp
rolb
mov
sarl
inc
das
and
add
xor
mov
test
inc
arpl
jle
push
arpl
in
lock
movsl
jo
mov
in
aaa
xor
adcl
jne
shrb
mov
xchg
cmpsl
sub
inc
stos
inc
adc
lret
cmp
movsl
xor
cmpl
stc
pop
lea
jnp
aad
repz
test
scas
test
xchg
out
test
inc
dec
fwait
int3
daa
mov
push
hlt
and
bound
xor
mov
in
push
pop
mov
stos
xchg
lds
add
xchg
mov
inc
mov
mov
jne
test
movsb
mov
in
xchg
adc
rcr
lcall
mov
fstps
sbb
mov
jnp
insl
mov
push
fs
sbb
dec
ret
mov
pushf
lea
dec
test
cmp
lods
ficomps
xor
out
out
stos
lock
jb
mov
push
push
mov
sub
sbb
mov
jbe
xor
xchg
fcompl
hlt
mov
adc
mov
pop
out
cwtl
mov
bound
push
jge
mov
arpl
nop
cmp
mull
enter
outsb
cli
fmuls
mov
mov
imulb
jnp
mov
xchg
push
scas
cmp
daa
int3
arpl
outsl
cmp
push
pop
lods
push
adc
pop
mov
xchg
ficompl
or
and
adc
push
push
sarl
lahf
lcall
push
jecxz
int
hlt
dec
mov
adc
jbe
push
jl
arpl
shlb
test
mov
stos
data16
ja
dec
arpl
scas
xchg
imul
add
aad
pop
adc
and
std
mov
subl
fldenv
adc
dec
adc
int3
lock
in
jmp
xchg
cltd
repz
sbbl
pop
xor
and
mulb
push
lahf
sbb
dec
shr
repnz
cltd
test
push
mov
dec
aas
pop
pop
fcmovnbe
mov
mov
add
in
adc
or
stos
sbb
insl
lahf
faddl
pop
ror
xor
jnp
cs
jl
mov
xchg
icebp
movsb
push
lea
mov
stos
es
pop
mov
mov
xor
out
cmp
xor
xor
xor
push
xchg
pushf
jae
or
jb
dec
pop
mov
cmp
xor
cli
xor
scas
sub
test
sbb
scas
sub
jge
pop
push
pusha
test
outsb
mov
xor
xlat
leave
and
or
cli
fs
test
xchg
stc
pop
insl
mov
ss
cmp
enterw
pop
neg
loope
adc
rcr
inc
hlt
lahf
mov
xchg
lcall
jp
int
clc
dec
pop
aas
jns
shrb
mov
shrb
sarb
fucomi
lock
and
mov
cmp
outsb
jbe
pop
and
rcrb
lock
ds
subl
mov
cwtl
push
mov
jo
pop
mov
sbb
mov
cmc
stc
add
cwtl
in
arpl
cmpsl
push
mov
xor
pop
std
aas
in
ja,pt
sti
out
out
out
add
add
out
sbb
loop
movsb
clc
nop
popf
push
popa
sub
mov
pop
jle
sub
aaa
mov
mov
and
stos
mov
sub
pusha
pusha
mov
shll
mov
mov
push
fmul
ds
mov
mov
test
xor
or
lods
daa
or
xor
cltd
arpl
scas
mov
les
js
lret
das
loope
lahf
cmp
ljmp
push
mov
and
mov
pop
xor
mull
push
xor
jecxz
pop
stos
je
xlat
sahf
lret
imul
pop
out
pop
mov
imul
jg
enter
xchg
loop
cmp
dec
pop
cmp
inc
and
and
adc
inc
in
adc
mov
stos
pop
add
ss
dec
outsl
jnp
push
scas
mov
jbe
cmpsl
dec
push
xor
push
pop
out
dec
sub
jl
cltd
cmp
fsubrs
xchg
out
pop
popf
jmp
movsb
adc
push
insb
lret
jbe
popa
sbb
loope
loopne
pushf
lds
shrl
pop
xor
outsb
push
lret
inc
dec
push
sbb
xchg
add
pop
push
scas
out
insb
mov
repz
pop
mov
xchg
mov
pop
mov
jmp
xor
cmp
inc
lret
pop
and
ds
add
sub
sub
iret
jp
xor
frstor
lret
xor
cld
dec
mov
loope
pop
jl
mov
fmull
enter
imul
add
mov
mov
int3
mov
mull
pop
jp
add
call
pusha
sarb
lock
les
cmp
push
and
cmp
mov
fisttps
mov
sub
mov
int3
xchg
aas
mov
cld
hlt
sbb
pop
mov
sbb
mov
jg
sbb
mov
adc
adcl
rcr
bound
and
out
ficompl
mov
popf
dec
fidivrs
cwtl
and
and
sbb
aas
sbb
mov
sahf
jg
mov
dec
adc
sti
cmc
cld
jns
jle
jae
push
jge
dec
dec
bound
rcll
mov
jg
cld
mov
ds
xor
mov
sub
adc
repz
out
cmp
lods
movsb
stc
and
sbb
or
xor
cmp
mov
xor
xorb
dec
adc
xchg
sbb
mov
xchg
push
sbb
imul
sub
movsb
xchg
lock
movsb
jecxz
ljmp
push
mov
push
inc
cld
and
xchg
push
movsl
xchg
ret
decb
adc
push
gs
mov
mov
push
push
mov
mov
iret
dec
and
and
inc
jo
or
mov
mov
pop
out
fcoms
mov
lds
mov
adcl
sub
dec
mov
pop
outsb
mov
addr16
and
jmp
scas
cld
sub
xor
test
in
adc
dec
loopne
xchg
dec
test
lock
inc
mov
inc
and
lret
mov
xor
adc
movsl
cmc
inc
loope
sbb
test
cltd
aam
mov
dec
ret
sarl
lret
mov
sahf
or
cwtl
inc
aam
cmpsl
push
adc
in
out
mov
mov
imul
iret
notb
mov
ss
xor
jo
xor
cmp
xor
jge
outsl
mov
call
insb
jo
add
inc
push
out
xor
clc
cmp
popa
or
sub
inc
xchg
mov
sub
addr16
add
pop
xorb
bound
test
out
mov
pop
dec
or
push
mov
fldenv
jecxz
add
iret
out
lcall
and
into
mov
orb
lcall
xor
push
movsb
adc
add
cmp
lret
gs
mov
insl
lods
rolb
mov
cmp
movsl
jmp
rcll
or
mov
enter
pop
sub
jcxz
pop
out
mov
sub
pop
stc
mov
add
xchg
cmp
mov
mov
roll
xchg
aad
or
mov
jge
push
pop
in
sub
adc
inc
sbb
push
hlt
xor
mov
mov
jb
mov
outsb
lds
push
mov
rorb
jecxz
or
push
clc
test
inc
or
xor
addr16
jae
lahf
stos
je
ret
fldcw
lds
xchg
mov
cmp
mov
leave
and
leave
pop
and
clc
pop
imul
mov
xor
andb
leave
and
cli
or
in
stos
mov
and
lret
adc
mov
fwait
cmpl
shl
xor
jp
imul
and
sbb
into
mov
negl
aad
mov
fs
in
cmp
pop
mulb
adcb
pop
sub
xchg
lahf
imul
dec
les
jns
sub
test
inc
or
roll
lock
jae
jb
or
inc
add
shl
pop
cwtl
test
or
ss
shl
dec
cmp
lret
sub
and
fbld
pushf
lods
mov
and
lret
das
sub
or
iret
sub
cmp
jecxz
xor
ret
dec
push
mov
pop
ljmp
movsl
popa
cli
xor
pop
and
fbld
mov
jnp
mov
and
mov
cmp
push
es
push
stos
mov
adc
pusha
arpl
mov
inc
sbb
mov
inc
insb
jg
sub
push
popf
out
mov
mov
mov
pop
punpckldq
rorb
xchg
js
jl
frstor
mov
inc
cmp
ret
insb
sub
inc
ljmp
adc
xor
pusha
pop
mov
sub
dec
sbb
fisubs
test
aam
jae
xor
pop
cmp
inc
sarl
orb
lods
push
dec
andl
scas
jns
movsb
mov
xlat
jg
es
cli
mov
xchg
adc
push
bound
and
add
outsl
out
cmp
dec
xchg
and
addr16
inc
jmp
sub
popa
push
outsl
jmp
in
nop
mov
scas
add
lea
cwtl
fcomps
adc
fnstsw
cmpsb
test
addr16
cmpsl
sahf
pop
leave
in
int3
or
lret
push
test
xlat
cltd
pusha
jecxz
jmp
sub
mov
ficompl
leave
inc
cs
jae
pop
pushw
aam
mov
ret
mov
out
addb
sbb
cmc
and
xor
mov
aaa
popf
fmuls
sbb
and
bound
mov
call
xchg
fdivrs
xor
mov
aaa
call
in
push
mov
test
lret
popf
mov
or
jp
mov
cli
jp
test
sbb
jo
cmpb
pop
scas
dec
mov
loope
mov
jb
out
add
cwtl
in
mov
cli
sbb
inc
aam
sbb
dec
scas
lcall
push
fildl
test
ds
mov
add
ret
xor
arpl
pop
jp
cmp
dec
mov
inc
pop
sarb
and
lds
push
mov
aam
in
addb
das
aad
xchg
lods
jb
mov
outsb
rclb
jecxz,pt
mov
cmp
std
or
inc
insb
shl
and
xorb
insb
imul
adc
xor
repz
dec
mov
iret
lahf
xor
aas
cltd
outsb
aaa
jae
lods
add
scas
sbb
mov
iret
xchg
leave
push
sbb
fidivl
jmp
cld
push
push
outsb
or
pop
outsl
dec
inc
ljmp
lcall
push
dec
adc
jecxz
mov
cmp
push
arpl
xchg
jl
outsl
jp
incb
in
das
jae
pop
enter
xchg
nop
add
pop
and
inc
outsb
enter
arpl
xor
mov
jae
xlat
jne
jmp
data16
insl
hlt
mov
insl
xchg
and
dec
iret
ret
es
inc
inc
inc
push
repz
mov
jae
mov
mov
adc
test
or
arpl
add
lods
push
xlat
imul
bound
call
sub
inc
ljmp
test
mov
imul
push
xchg
arpl
hlt
fcmovne
icebp
xor
sbb
out
jnp
or
adc
dec
xor
inc
pop
pop
in
int
nop
cld
test
cmp
mov
data16
outsl
push
in
cli
mov
sbb
rclb
xlat
stos
stos
rolb
fidivs
jo
fwait
xor
cmp
loope
dec
dec
lods
push
inc
ret
test
lret
push
add
out
push
loopne
ficomps
xchg
jge
adc
leave
xchg
out
outsl
push
movl
inc
inc
shll
loopne
mov
cli
inc
mov
and
jns
jle
fwait
dec
movsl
add
lock
fs
sbb
pop
jmp
incl
iret
xchg
jle
lods
int3
stos
sub
scas
insl
aam
mov
shrb
out
and
icebp
mov
jge
xorl
pop
loopne
push
adc
inc
fcompl
stos
lahf
push
ret
cmpsb
xchg
into
inc
jne
fldl
test
xchg
mov
xchg
and
cs
adc
sub
mul
dec
xorb
ss
add
pop
sub
insl
nop
sbb
ljmp
sti
jmp
and
cld
or
dec
inc
jbe
xchg
cwtl
push
and
and
mov
jmp
mov
push
sarl
xchg
test
and
jns
sti
inc
cmpsb
jg
adc
cmp
pop
add
push
daa
jle
ficoml
scas
pop
mov
outsb
stos
push
ljmp
jbe
fdivrs
aam
ja
push
scas
xchg
mov
orb
sbb
test
xchg
fidivs
insl
cs
outsl
xchg
repz
ret
stos
lock
jmp
ficompl
pop
js
xor
inc
lcall
in
mov
adcl
pop
mov
mov
and
inc
aaa
mov
popf
and
lods
fwait
xlat
sbb
call
icebp
sbb
ret
mov
cmp
popf
hlt
into
hlt
jg
inc
ret
sbb
jno
xor
cmp
dec
das
cmpsl
arpl
mov
adc
inc
pop
je
sbb
jecxz
es
fiaddl
sbb
lret
mov
test
stos
je
sbb
movsl
sbb
outsb
mov
lods
xor
or
fs
inc
inc
in
or
mov
lods
hlt
or
adc
mov
stos
mov
push
std
sbb
dec
mov
adc
insb
xchg
sub
es
jp
cld
adc
dec
add
push
push
xchg
or
sub
insl
push
inc
sub
imul
addl
fimull
popf
fs
cwtl
in
stos
sbb
in
lods
clc
jecxz
mov
dec
or
xor
cmp
pop
aas
loop
mov
jno
aam
cmp
add
xor
mov
or
xchg
or
push
sub
mov
or
cmp
popa
enter
sub
jg
sbb
push
jne
sbb
insl
insl
lock
in
push
aad
add
cwtl
jbe
xchg
inc
inc
movsb
sub
cmp
repz
mov
mov
or
shll
rcrb
scas
pop
out
xor
daa
icebp
push
hlt
stc
pop
hlt
aam
sub
or
dec
cmp
inc
mov
mov
cmp
cmc
xor
cmp
ja
mov
leave
int3
addr16
jge
mov
add
push
lret
mov
adc
test
addr16
leave
pop
fisubl
pushf
aaa
pop
int
dec
inc
mov
mov
insl
loopne
jo
ljmp
push
mov
fcmovb
inc
jae
mov
jae
jp
xchg
cmp
jl
testl
fwait
jmp
lock
xchg
push
adc
testb
jle
in
adc
inc
add
pop
push
lods
andb
ffree
testl
stos
pop
xor
lea
out
adc
ljmp
push
sbb
iret
rorl
fcomi
daa
ljmp
adc
clc
fucompp
inc
std
enter
push
xchg
xchg
ud2
or
sahf
sbb
cmp
pop
in
sbb
test
push
and
push
fwait
push
sub
leave
add
clc
xchg
xchg
pop
jmp
add
gs
sbb
jmp
cli
nop
xchg
mov
mov
sub
cmpb
adc
out
xor
in
nop
xchg
sahf
cmp
cltd
inc
pop
sbb
movsb
xchg
xchg
push
mov
xchg
xor
push
aas
pop
inc
jns
int3
es
jecxz
mov
cs
push
dec
in
jmp
in
addl
mov
and
adc
aad
mov
pop
out
dec
in
or
mov
ret
jecxz
jne
lcall
leave
fidivs
dec
fildl
call
imull
or
test
lods
pushf
xchg
inc
pop
pop
inc
cmpsb
movsb
pop
jmp
mov
lahf
cltd
int
jo
daa
pop
lea
sbb
push
lcall
and
xchg
sub
add
xchg
loope
fsubrl
cmpsb
sbb
stos
pushf
cli
repnz
push
push
push
inc
scas
push
out
pop
cwtl
dec
enter
ret
jne
fwait
mov
mov
movsl
iret
inc
jecxz
xor
lods
xchg
insl
push
lcall
pop
scas
cs
or
das
add
jg
add
jmp
ds
xor
cmp
es
push
push
mov
into
sbb
xchg
push
mov
sbb
push
xchg
sbb
or
cmp
xchg
aad
pop
std
in
xor
insb
sbb
mov
add
inc
incb
mov
mov
std
cmc
jle
iret
repz
xlat
call
aad
or
mov
mov
sbb
pusha
popf
mov
xchg
jne
inc
jmp
xchg
sbb
xchg
lahf
out
in
cmp
adc
mov
cmpsb
je
jbe
jl
and
jle
in
out
aaa
jl
mov
jmp
push
inc
push
shrl
addr16
out
mov
jns
rcrl
sub
inc
add
testl
test
sub
adc
and
mov
add
xor
jns
inc
xchg
out
pop
mov
mov
test
lods
or
mov
jp
sub
mov
into
sub
aas
sbb
pop
loop
scas
push
sbb
mov
sub
pop
xchg
xchg
imul
push
inc
or
add
lret
xor
and
mov
test
xchg
sarl
out
repnz
xchg
fsubrl
and
lods
add
in
imul
jnp
mov
dec
stos
xor
in
outsl
or
mov
and
xchg
fld
sbb
xchg
cmpsl
xor
lcall
lcall
cmc
ja
cmp
int
inc
repnz
outsb
lcall
jecxz
test
shrl
mov
jbe
negl
imul
inc
pop
and
test
inc
cs
aam
gs
mov
scas
xchg
jb
dec
jmp
in
xchg
sub
test
das
lahf
mov
add
es
fidivl
push
repnz
test
imul
sbb
sahf
das
notb
jmp
xchg
jge
mov
xchg
fcom
insl
clc
push
jne
cs
mov
sub
xor
fs
jle
int3
outsb
inc
mov
les
iret
add
aas
lcall
or
std
imul
push
push
je
cs
int3
push
push
insl
xchg
lds
out
pop
push
daa
cmc
adc
cmp
adc
rorb
mov
xchg
sbbl
inc
add
or
daa
push
mov
lcall
sub
mov
add
sub
sub
xor
outsl
in
scas
ret
ljmp
test
lods
xchg
mov
add
xchg
mov
jge
jl
pusha
xchg
adcl
mov
cmp
jne
xorb
dec
clc
into
jge
lahf
or
and
nop
in
jnp
fdiv
mov
adc
pop
test
repnz
pop
xchg
sahf
sub
push
push
mov
fisubrl
adc
gs
and
mov
insb
jmp
mov
xor
call
fs
fwait
inc
mov
inc
add
or
outsb
ss
sbb
lods
sbb
pop
or
fs
cmp
es
mov
mov
mov
aad
test
xchg
cmpsl
mov
lock
bound
xchg
int3
test
gs
or
js
add
rclb
adc
ja
jecxz
out
mov
stc
jg
rclb
sarl
lcall
dec
add
arpl
xor
or
insl
cmp
push
sub
push
gs
imul
inc
fstpl
push
pop
sbb
xor
xor
mov
sbb
into
ja
lds
pushf
jle
inc
dec
push
aaa
enter
xor
adc
bound
add
cld
jbe
push
das
jg
jne
inc
dec
adc
into
sub
mov
into
fs
mov
loopne
fsubr
ljmp
test
mov
or
dec
lcall
cmp
in
jae
jb
jb
mov
pop
jp
inc
mov
mov
sbb
add
std
or
dec
in
xchg
add
add
movsb
ljmp
adc
dec
das
in
add
or
mov
xor
insl
popa
stos
pop
pop
repz
inc
repnz
and
dec
add
adc
nop
call
push
lahf
subb
add
dec
inc
fldcw
push
sub
lods
jp
jnp
pop
jno
out
push
push
pop
xor
dec
cmp
cmc
data16
push
or
stc
sub
fucomip
shr
jnp
push
mov
cli
stos
xor
pop
test
adc
lods
lds
fisubs
xor
pop
lea
addr16
lock
cmp
stc
add
add
and
jge
sbb
pop
test
scas
shrb
sbb
push
bnd
inc
push
or
enter
jns
adc
or
std
ja
aam
mov
xacquire
cmc
jbe
imul
push
jmp
push
inc
lret
dec
xchg
inc
mov
cmp
or
and
and
int
inc
pop
push
sbb
push
fldcw
mov
out
mov
lretw
jmp
leave
pop
and
jne
or
cld
imul
mov
jge
sar
jns
out
in
or
outsb
jl
fs
je
mov
adc
jle
subl
mov
int3
jmp
lret
sahf
in
inc
cmp
dec
fistps
inc
xor
pop
sbb
into
movsl
sahf
shll
stos
insl
inc
xchg
jg
fistpl
sbb
fisubrl
xor
xchg
jecxz
lods
cmp
repnz
jbe
jo
ja
push
jl
pop
paddusb
std
dec
xor
push
pop
sahf
popa
push
xor
incb
xlat
scas
dec
add
xchg
mov
ret
addr16
lea
sbb
shlb
mov
add
jo
movsb
adc
lcall
subl
andb
jbe
push
ss
dec
jmp
inc
lods
pop
xchg
push
int3
jge
xor
inc
cmp
inc
cmp
fcomip
icebp
dec
orl
pop
cld
or
mov
fisttpl
test
xor
mov
pop
adc
aam
andb
push
xchg
sub
mov
clc
adc
das
in
fwait
mov
incb
jge
out
scas
stos
ret
inc
mov
aad
pop
aaa
out
andb
pop
or
cmc
push
pusha
aaa
pop
inc
call
xchg
add
cwtl
adcl
cmp
or
mov
fs
jno
iret
or
fcom
sahf
sbb
and
int3
movsb
bound
outsb
in
jg
divl
iret
pop
xchg
int
mov
jge
pop
jb
adc
xor
ss
jnp
imul
mov
sub
jns
js
jae
push
xchg
lods
scas
add
sub
js
icebp
sbb
jle
xchg
mov
imul
into
leave
cmpl
pop
js
orl
bound
mov
shl
ljmp
test
sbb
mov
xchg
ret
push
sub
lock
fnstenv
push
in
and
mov
push
add
push
rcrb
push
dec
sub
push
orb
fs
sahf
xchg
mov
and
ja
scas
popf
sbb
cltd
neg
or
std
push
adc
push
mov
xor
cmp
jp
mov
mov
push
dec
lods
test
data16
repz
mov
js
fisttps
mov
xor
jge
cmp
sbb
sub
test
sub
repz
mov
jns
lret
outsl
cmpsl
push
out
mov
add
jno
mov
nop
inc
dec
out
jo
mov
pop
ret
loop
les
inc
movsl
fisubs
push
aad
xchg
sbb
in
cld
push
loope
push
sti
jmp
xchg
clc
dec
in
cld
ja
pop
inc
in
cmp
push
push
fnstcw
test
sub
das
dec
pop
pusha
add
xor
xchg
test
mov
lret
mov
sub
lds
dec
cwtd
lock
push
xor
add
xor
movsl
movsl
sub
mov
add
add
testb
outsl
jmp
fwait
sub
adc
call
jl
dec
sti
insl
mov
add
mov
loope
cwtl
jmp
dec
jp
ja
dec
loop
xlat
xchg
imul
cmp
mov
aas
jns
lods
xor
les
roll
push
pop
inc
xor
xor
ja
iret
pop
push
pusha
adc
rcrb
add
push
imul
mov
sub
xor
clc
aaa
pushl
and
mov
pop
into
pop
sbb
cmp
hlt
or
or
add
cmp
push
inc
out
sbb
push
mov
mov
js
add
pop
push
jno
push
lret
cld
scas
cmp
sub
imul
fildll
icebp
loope
xchg
mov
stc
in
jae
call
jbe
dec
loop
dec
repz
xor
pop
sti
test
sub
mov
pop
dec
jmp
out
sbb
adcl
pop
add
push
push
stos
sarl
and
inc
lods
or
inc
insb
mov
popf
icebp
jmp
fisttpl
push
cmpb
push
pop
jns
inc
add
jle
and
cmc
sbb
and
test
out
rcrb
mov
lock
pop
mov
movsl
clc
ds
pop
or
xor
loope
lods
pop
mov
push
mov
xchg
sti
dec
icebp
adc
sub
movsl
xor
add
mov
pop
fwait
dec
ret
popf
imull
jne
andl
and
lret
movsl
jo
lcall
xchg
cmp
les
and
jmp
sar
adc
cltd
mov
scas
cmp
jmp
xorb
jno
cwtl
das
cmp
gs
out
or
cmp
inc
mov
les
sbb
mulb
fildl
pusha
mov
jne
mov
insb
adc
adcl
pop
push
xchg
xor
lret
fs
pop
xor
adc
add
add
lods
cwtl
test
adc
sar
sti
outsb
scas
adc
dec
scas
mov
daa
sub
sub
xchg
xor
aad
into
loopne
xchg
orb
lods
mov
cmpsb
mov
out
xchg
xchg
nop/reserved
pop
iret
pop
adc
add
bsr
sub
sub
sbb
gs
addr16
jmp
test
inc
outsl
stc
mov
xchg
fsts
and
ffreep
push
mov
inc
nop
das
pop
xchg
mov
push
mov
cmp
push
mov
push
or
pusha
pop
dec
mov
out
mov
test
adc
andb
sub
enter
in
std
clc
and
push
sbb
jns
mov
sarl
jle
inc
sbb
mov
in
xchg
lods
repnz
cs
sub
out
cmpsl
dec
mov
lods
jle
pop
add
sti
or
out
les
or
iret
clc
jmp
add
mov
outsl
pop
bound
push
mov
sahf
frstor
test
mov
cmp
sarl
out
cltd
lods
rcll
les
pop
xchg
dec
push
adc
in
pop
xor
mov
sbb
sub
iret
xchg
cltd
je
dec
movsl
mov
dec
and
cmp
stos
movsb
inc
push
jmp
lock
mov
les
push
adc
movsl
in
sub
cmp
pushf
jno
xchg
mov
sti
push
je
iret
dec
add
leave
leave
aas
cmp
push
insl
pop
aam
paddb
out
mov
int
jno
pushf
mov
push
lods
pop
sub
icebp
cmp
pop
pop
fists
shll
lahf
push
dec
cmpsb
mov
mov
mov
lret
jb
inc
aaa
cmpsl
cs
js
test
xorl
and
mov
or
out
xor
sub
scas
sbb
pop
sub
in
mov
dec
les
pop
push
jp
fs
push
sbb
je
test
sahf
mov
scas
or
sbb
xor
jge
sub
dec
and
lea
and
xchg
adc
add
in
out
mov
mov
push
or
aam
sub
stos
inc
cmp
aad
jae
mov
mov
es
push
aas
jb
cmp
popf
test
js
scas
and
sbb
mov
xchg
inc
fs
jle
jb
loopne
data16
and
mov
cmp
fnstenv
adc
add
cs
pop
push
insb
push
leave
loope
xor
mov
or
cmp
cwtl
rclb
fmuls
pop
ja
ficomps
cmp
les
call
fdivrl
aad
pop
adc
imul
dec
cltd
ja
dec
add
arpl
ret
xor
bound
mov
ja
sbb
fwait
xor
or
in
mov
iret
and
inc
dec
aaa
int3
xchg
arpl
or
dec
jnp,pn
jno
ret
push
cmpsl
cmp
rol
dec
or
fdivl
mov
aad
add
adc
imul
daa
dec
adc
outsl
xchg
xor
lea
insl
or
sbb
xlat
outsl
dec
imul
mov
shlb
dec
jo
cmpl
std
pop
mov
lds
or
mov
pop
dec
fs
pop
inc
mov
popf
outsl
lret
push
in
sahf
pop
adc
cmp
sbb
lds
pop
sar
xor
movsl
and
xor
fs
mov
das
xor
hlt
push
inc
add
ja
jmp
int
mov
inc
fimull
jl
or
into
nop
mov
adc
jg
mov
jle
ret
xorb
faddl
xchg
or
push
notb
in
cmp
sub
dec
push
sub
push
xlat
insl
adc
mov
into
sbb
lcall
fsts
cmp
sbb
int3
inc
repnz
imul
jg
loopne
shrb
mov
add
xor
loopne
sbb
xadd
inc
mov
les
icebp
sti
mov
push
ss
xchg
and
lea
cmp
xchg
arpl
sbb
add
test
and
aas
mov
sahf
mov
sbb
in
sbb
adc
mov
iret
inc
out
xor
repz
sub
jno
push
in
cmp
stc
std
scas
cmc
sbbb
movsl
out
fs
repnz
cmc
xchg
stc
mov
mov
pop
push
popf
movsb
push
xor
adc
inc
fcomip
das
bound
and
inc
jmp
or
mov
bound
stc
dec
subps
mov
push
jp
lds
push
cmp
push
cwtl
xlat
stos
inc
cmp
push
cld
adc
push
test
jle
cwtl
jo
push
push
pop
loopne
icebp
adc
dec
in
divb
rcll
mov
fmull
movsb
inc
push
jmp
add
sbb
daa
shrb
pop
mov
out
jl
push
ret
iret
lods
les
neg
jecxz
dec
pop
sbb
enter
mov
ja
int3
in
mov
push
shlb
sub
stc
mov
and
mov
jge
add
cmc
mov
enter
js
and
loopne
hlt
pop
scas
and
mov
daa
out
pop
inc
aam
lock
push
inc
clc
ficompl
and
ret
shl
stos
loop
lea
nop
lds
mov
fidivl
test
into
mov
clc
pushf
and
stos
inc
xor
jge
push
cmp
mov
into
repz
inc
je
jo
sub
daa
out
ret
bnd
add
xchg
loopne
mov
outsl
adc
push
int3
sbb
jnp
push
shll
stos
mov
not
int3
movsb
ret
hlt
xchg
mov
movsl
jne
xchg
jl
add
xor
pop
sbb
in
sub
or
fmulp
mulb
cmp
daa
iret
add
cmp
adc
mov
cmp
mov
jg
ss
outsl
icebp
scas
jae
cmp
jbe
pusha
not
sbb
xor
or
cmp
fcoms
clc
jae
bound
mov
push
xor
faddl
mul
cmc
mov
mov
test
add
dec
cs
frstor
js
dec
cmp
and
stc
jecxz
test
pop
out
mov
dec
cmp
fs
stc
dec
popa
mov
cld
movsb
inc
stos
or
mov
add
push
aam
pop
in
add
shrb
daa
add
mov
loope
cli
inc
or
aaa
ds
sahf
inc
in
push
adc
stc
cmp
cltd
xor
test
mov
andb
call
test
xlat
test
shll
pop
loopne
movsb
js
pop
cmpsl
lods
out
add
les
cmp
add
mov
jbe
push
dec
jno
jg
push
and
push
jns
sub
shrl
enter
adc
subb
or
dec
mov
push
mov
jmp
imul
mov
fiaddl
jl
repnz
pushf
pop
mov
icebp
ljmp
add
nop
outsl
rcrl
scas
sub
mov
adc
sub
or
xor
push
add
xor
movsb
fldenv
fwait
stc
jb
scas
rcr
js
shr
pop
push
mov
dec
dec
shrl
int3
xchg
cmp
in
lcall
mov
mov
add
sub
or
xchg
in
mov
daa
fxtract
fsubrs
out
mov
sub
in
lcall
lret
xor
pop
das
clc
cmpsl
or
and
aad
push
lock
mov
repnz
testl
mov
adc
sbb
pop
cmpsb
outsl
cmpsb
inc
sub
and
inc
adc
pop
xor
popf
push
mov
pop
pop
inc
cmp
add
mov
stos
rclb
movsb
in
out
cmp
pop
sub
xor
sbb
xor
cmp
mov
pop
movsb
int3
out
ret
sub
mov
addr16
into
adc
or
in
in
xchg
jle
test
scas
lea
cld
or
mov
push
outsl
dec
mov
push
test
out
sub
cmp
ret
or
push
mov
nop
push
adc
gs
fwait
test
sub
push
mov
in
repz
adc
cmp
rclb
dec
popf
ud0
mov
or
je
mov
cmp
inc
cmp
ljmp
test
push
in
cld
sub
dec
lcall
dec
addl
lret
popa
sbb
xor
insl
pop
xor
adc
jbe
and
push
jp
mov
dec
mov
dec
cmp
je
sub
or
jmp
dec
mov
movsb
add
inc
fnstenv
sti
sti
push
negl
aam
pop
stos
testl
jbe
jl
and
ljmp
clc
jno
dec
out
jp
mov
pop
es
mov
cltd
stos
push
arpl
insb
sbb
imul
sbb
leave
cwtl
lds
pop
fisubs
xchg
pop
fs
in
adc
cld
mov
and
iret
inc
pop
xchg
in
mov
jnp
ja
jno
int
popf
mov
insl
popf
and
sub
mov
push
xor
mov
add
sarl
cmc
sub
push
rclb
xchg
roll
aaa
ds
push
out
inc
pop
add
enter
pop
js
int
iret
sub
adc
fdiv
sbb
je
cmpsb
shrb
into
in
mov
scas
je
push
push
cmp
cmp
test
clc
lret
inc
pop
xlat
cmpb
bound
lcall
xor
data16
sbb
adc
xor
sbb
mov
adc
and
rcl
jmp
das
inc
packuswb
rolb
mov
das
movsb
push
xchg
and
popa
clc
pop
pop
or
mov
pop
jb
lock
js
adc
out
inc
xchg
sbb
xor
lods
jno
and
push
sub
test
outsb
lock
mov
sbb
shll
aam
ss
inc
gs
lock
push
dec
cltd
mov
hlt
push
movsl
jge
outsb
cmp
fsubrp
xor
mov
popa
iret
scas
loopne
adc
adc
dec
test
sub
jb
xor
fadds
and
fadds
sub
stos
sub
mov
push
adcb
pop
pop
lret
lahf
loope
je
sbb
and
std
adc
stc
mov
cs
add
inc
int
dec
or
cltd
jae
mov
ja
fistpll
test
adc
idivb
mov
adc
notb
sub
mov
je
fwait
sub
jle
dec
daa
out
push
js
call
cli
dec
push
roll
idivb
jb
push
stos
cmp
cmpsl
dec
stos
pop
out
mov
fsts
fwait
push
inc
or
or
in
scas
push
adc
fistpl
das
or
lods
dec
lahf
dec
pop
jle
xchg
fcmovu
aas
adc
nop
cmp
ds
mov
push
das
fadds
sti
bsr
movb
adcb
push
sub
movsb
imul
or
ljmp
jae
aaa
aam
mov
inc
jnp
int
push
pop
mov
out
movsb
add
jns
rdtsc
dec
stc
xchg
ljmp
ror
fnstenv
mov
xor
sar
sbb
or
clc
xor
xor
cmc
xchg
adc
cmpsl
jne
ljmp
add
shrl
push
shl
cmpsb
push
loope
movsl
cmpsl
dec
pop
lods
pushf
jecxz
mov
jo
scas
stos
adc
arpl
xchg
mov
and
dec
jl
fucomi
and
mov
hlt
test
insl
hlt
in
jbe
das
cmp
or
aas
std
int
fmuls
adc
out
clc
cli
xchg
pop
jns
push
dec
push
mov
jp
mov
in
aad
xchg
and
in
sbb
inc
pop
cmp
jns
mov
cs
inc
cmc
rcr
mov
daa
rorl
push
mov
cmp
mov
sub
or
inc
stc
sahf
and
mov
cmp
xor
jae
mov
daa
sbb
xchg
sbb
mov
insb
xchg
lahf
bound
mov
xchg
pushf
push
wbinvd
jno
rcl
sti
dec
push
lods
adc
mov
mov
mov
enter
lds
jle
xchg
xor
xor
add
mov
inc
xor
mov
faddl
xorb
sub
jle
popa
bound
dec
jp
adc
push
pop
xchg
fbstp
inc
mov
cmp
test
mov
pop
cs
movsb
mov
orl
adc
pop
or
xchg
ret
mov
int3
xor
and
dec
jp
addr16
insb
cmp
jl
test
jge
jmp
xorb
jecxz
fwait
sub
loopne
cwtl
inc
popa
mov
les
add
jae
mov
lods
jne
pop
jmp
sub
push
fs
cmpsb
and
data16
cmp
sub
lcall
mov
inc
loopne
jecxz
jnp
out
cmp
add
and
les
dec
mov
in
mov
cli
loop
ret
movsb
adcb
arpl
movsb
adc
insl
pop
xor
loopne
mov
add
fldt
popf
mov
out
sbbl
fwait
fwait
stc
ret
outsb
jge
leave
mov
pause
push
jo
mov
in
xchg
add
and
cmp
mov
cmp
jo
push
ficoml
hlt
dec
adc
dec
or
adc
je
scas
jg
andl
lret
pop
insb
xchg
push
or
inc
sbb
imul
push
sbb
lret
sti
push
sbb
and
cmp
fwait
mov
or
mov
aam
orb
mov
cmp
xor
test
jle
shlb
ret
scas
inc
sub
mov
idivb
and
shrb
aas
sub
mov
push
ja
jge
or
pop
or
xor
push
adc
loope
nop
xlat
push
mov
cld
mov
andb
mov
xlat
fdivr
sbb
out
adc
pusha
xchg
jnp
xor
lods
pop
mov
mov
inc
ja
xchg
adc
in
test
into
xor
jp
sub
outsl
scas
and
addr16
push
lret
dec
mov
push
xor
add
jg
or
cmp
xchg
push
pop
pop
xor
pop
mulb
out
fdiv
ret
ret
mov
in
lock
xor
pusha
sarl
inc
ss
pop
pop
divl
cmpsb
push
fdivrl
mov
and
outsl
mull
test
aaa
cltd
lahf
ds
jbe
adc
lret
sti
xor
push
jbe
negl
fisubrl
adc
adc
inc
clc
sub
ss
cmp
xlat
inc
xlat
nop
adc
push
and
and
icebp
loope
scas
icebp
jl
nop
fisttpll
adc
sbb
test
jp
xchg
lret
int3
pushf
cmp
xorb
shlb
fnsave
stc
dec
inc
and
mov
sbb
fs
in
inc
pop
int3
push
popf
aaa
cs
mov
and
int3
cmp
cmp
or
lahf
jnp
test
iret
adc
lea
mov
adc
movsl
fsubrs
testb
sbb
out
adc
sub
sbb
je
in
popa
mov
sbb
lcall
pop
inc
sbb
loope
adc
push
mov
xchg
leave
jp
adc
lock
loop
mov
rcr
push
xchg
rclb
mov
in
xor
xor
push
cmp
jl
add
cld
push
insb
sub
pop
ret
inc
in
arpl
icebp
sti
hlt
outsb
pop
inc
out
inc
insl
outsl
adcb
push
sbb
jl
ja
imul
jo
mov
mov
lds
xor
ds
mov
lcall
and
jp
add
and
push
in
arpl
pop
out
pop
into
sbb
or
mov
dec
cmp
mov
enter
in
das
in
dec
or
xchg
dec
inc
sbb
push
push
xchg
test
lods
frstor
sbb
test
cmp
push
dec
adc
icebp
jmp
into
outsb
aam
sub
enter
xor
bound
xor
xchg
lea
movsl
hlt
inc
jp
or
clc
daa
mov
adc
ds
iret
and
jmp
das
pusha
and
push
shll
sahf
test
leave
jo
xchg
pusha
mov
int3
and
push
insb
cmc
cmpsl
cmpsb
dec
dec
dec
insl
add
leave
jp
pop
add
dec
shll
cmpsl
sub
loopne
or
into
shrb
fnstcw
lods
out
nop
lods
nop
jle
repnz
out
ds
mov
sub
sbb
pop
std
orb
lea
pop
jno
sub
xchg
pop
push
hlt
jns
pop
xchg
push
or
cmp
int
sub
andb
xor
sbb
test
push
dec
add
sub
repnz
hlt
and
mov
and
xor
jecxz
fcom
pop
in
mov
imul
jecxz
mov
ljmp
scas
xchg
mov
xor
sub
pop
pushl
mov
fs
cltd
xor
xchg
lret
lcall
xor
pop
or
cmp
xchg
into
mov
sub
leave
dec
pop
mov
push
add
mov
cmpsl
cmp
lock
dec
inc
lods
sahf
aaa
add
scas
mov
push
sbb
insl
jg
pop
loope
adc
sbb
mov
push
fnsave
ja
cltd
outsl
cmc
sub
gs
jecxz
mov
fucomip
rclb
lret
fadd
and
sbb
and
popl
cmp
lea
jecxz
push
jmp
sahf
add
jbe
out
dec
clc
push
mov
shll
inc
bound
shll
outsl
pop
cs
xchg
cs
jbe
pop
mov
bswap
int
je
jl
jbe
cli
enter
les
ficoms
lock
fdivl
mov
and
sbb
inc
call
and
je
inc
push
mov
stos
setno
arpl
cmp
lcall
cmc
rorb
add
push
mov
or
imulb
xlat
mov
add
rcl
sti
ret
jb
pop
out
ljmp
or
push
push
loope
sbb
sti
in
outsl
inc
pop
push
jb
out
add
sub
addb
pusha
cmc
subb
dec
cmpsl
inc
notb
xchg
lods
rol
mov
fcompl
and
xor
mov
jno
or
outsl
mov
jo
xor
outsl
xchg
jb
push
push
shll
jo
xor
test
out
shrl
and
arpl
mov
jecxz
mov
pusha
jge
idiv
and
dec
test
xor
ss
arpl
movsb
push
push
xchg
adc
mov
cltd
mov
sbb
jmp
fsubr
fstpl
js
jmp
fs
xchg
xchg
inc
adc
sbb
cmp
mov
sti
shrb
out
sub
xchg
insl
xchg
mov
mov
push
outsl
fsubs
or
push
out
test
and
ds
pop
out
lds
popl
xlat
jecxz
adc
mov
pop
jl
push
adc
mov
movsb
lds
sahf
ljmp
pop
jle
rcrl
arpl
cmpsl
lret
sbb
cmp
out
mov
in
mov
enter
or
adc
sbb
and
cmpsl
ret
push
in
hlt
cld
or
jl
addl
or
test
pop
jle
cmp
loope
outsl
cmp
mov
addr16
cmp
sub
push
pop
cmc
cmp
fisubrs
xchg
pop
sbb
aad
notb
jp
and
clc
or
xchg
jb
push
out
pop
adc
xchg
andb
mov
aam
insb
daa
and
dec
pop
xchg
insb
inc
dec
ficompl
popf
ficoms
jl
push
stos
dec
inc
sub
jns
xor
orb
push
add
loop
int
dec
mov
in
inc
ret
mov
into
xchg
stos
rolb
les
sub
lea
cwtl
mov
adc
inc
sti
mov
and
inc
xchg
stos
inc
xchg
or
aad
xchg
andb
insl
fisubl
mov
mov
pop
push
call
sahf
mov
cmpsl
sbb
pop
mov
push
jno
test
gs
enter
cmp
cli
fsubs
les
push
int
adc
dec
dec
adc
jle
push
mov
nop
ds
jle
push
scas
cmpl
cmpsl
fnstcw
ss
xlat
test
js
pusha
aaa
int3
mov
iret
dec
mov
out
pushf
xor
xor
xchg
stc
cwtl
mov
jo
inc
and
pop
movsb
and
orl
rorl
cmp
add
push
or
mov
data16
fcompl
repnz
jae
daa
mov
jb
call
fnstcw
aam
inc
mov
and
aam
in
jne
test
cmp
imul
push
into
push
in
out
stc
les
mov
test
mov
lcall
leave
or
xor
jmp
dec
jl
ret
mov
rcll
xor
mov
scas
dec
xchg
mov
xor
mov
nop
sti
in
ljmp
test
mov
in
jg
ljmp
lock
test
lds
xor
scas
rolb
sbb
les
lea
mov
out
or
jno
fcompl
sbb
ret
bound
scas
dec
imulb
clc
test
lock
stos
mov
mov
cwtl
mov
mov
add
mov
xchg
es
jmp
lods
int
pop
testb
sbb
in
test
std
and
add
mov
cmp
in
jge
cmp
aaa
inc
sbbl
mov
sub
faddl
lea
mov
push
dec
dec
inc
nop
shrb
xor
mov
dec
imul
ss
rclb
mov
shl
in
cmp
push
sbb
cmpsl
imul
outsl
pop
out
xchg
sub
jecxz
dec
out
jecxz
popa
in
fmull
out
es
clc
daa
scas
outsb
jge
sbb
dec
xchg
xchg
pusha
nop
aam
imul
xor
loope
test
fisttps
mov
jb
aaa
addr16
jbe
pop
outsl
pop
sub
push
popa
icebp
push
sbb
push
push
sub
xor
mov
xor
mov
cmp
aaa
out
pop
lods
js
pushw
add
pushf
add
push
mov
mov
push
es
xchg
push
std
xor
insb
xor
push
push
mov
mov
xchg
add
dec
jle
rcl
pop
xor
incb
pop
mov
pop
arpl
daa
cmpb
mov
inc
xor
xlat
lods
and
pop
in
stc
push
mov
push
jne
fdivp
mov
movsl
push
ficoms
jo
sub
gs
sbb
mov
push
pop
mov
cmp
lock
sbb
nop
outsl
pusha
aam
jo
int
cwtl
subl
xlat
push
mov
insb
cs
and
fdiv
jle
pop
aam
dec
movsl
les
out
pop
pop
mov
fmull
imul
sti
cmpsb
aaa
rorb
mov
mov
inc
popa
sub
stos
jge
ds
add
jno
call
mov
or
mov
loopne
dec
sub
adc
shl
stc
movsb
in
dec
out
sub
fdivrs
sbb
fwait
repz
pop
jne
in
jb
push
cld
xchg
in
jmp
xor
pushf
push
xlat
pop
movsb
sarl
in
mov
dec
jnp
dec
repz
jle
push
cli
xchg
rcr
scas
xchg
cmpb
adc
sub
fsubrs
jg
xchg
xchg
icebp
and
lret
xlat
jl
subb
push
aaa
popf
sbb
loop
scas
fadd
in
data16
push
xor
and
add
les
test
out
xor
into
stos
mov
jo
and
js
fildl
adc
loop
stos
fidivrl
inc
lahf
adc
fisttps
cmp
pop
mov
mov
dec
cmp
xlat
roll
bound
mov
adc
sub
mov
xchg
xorb
fwait
aas
cmp
sti
xchg
sbb
pop
mov
sbb
cwtl
push
sbb
cmp
inc
pop
std
jg
mov
mov
lods
nop
scas
pop
and
bound
btr
popl
stc
shlb
shll
or
scas
pop
xor
loop
lods
push
mov
test
mov
mov
and
sbb
and
outsb
xchg
inc
inc
jge
push
cld
jnp
rcrl
loop
adcl
mov
decb
mov
outsl
add
cld
sbb
push
out
lahf
xchg
and
mov
les
ss
pop
fisttps
push
orl
bound
insb
ds
dec
jg
repnz
lods
sbb
ds
mov
xor
les
pop
imul
jns
or
movsb
pushf
fisttpll
pop
xor
push
ficoms
nop
inc
fucomp
xor
sub
xlat
adc
lock
xor
loop
insl
call
mov
movb
mov
fisttpll
sub
mov
or
fdecstp
imul
xchg
lret
mov
clc
push
daa
pop
inc
test
clc
xor
lods
lds
loope
in
jnp
lock
and
imul
mov
loope
jns
adc
jg
mov
pop
inc
sbb
ret
popf
aad
jle
stc
mov
daa
fisubl
aad
loope
xchg
in
out
insl
xorb
or
mov
fwait
loopne
imul
das
jo
test
fidivrl
cmp
mov
xchg
mov
jg
fildll
jp
adc
xchg
dec
and
scas
out
mov
aaa
sti
jmp
jg
inc
outsb
clc
push
mov
lret
adc
inc
cmp
testl
adc
xchg
mov
adc
mov
mov
mov
or
adc
mov
xor
iret
cmpb
lcall
rclb
push
or
and
and
lock
int3
data16
cmp
enter
out
out
clc
xchg
or
outsb
out
push
and
and
rcll
inc
mov
inc
cli
adc
mov
dec
xchg
mov
adcb
adc
in
jp
lret
inc
lret
mov
sub
test
fdivl
cli
pop
mov
mov
arpl
push
in
lea
test
mov
es
pop
inc
pop
faddl
jns
pop
rcrb
xchg
imul
dec
addr16
lahf
cmp
iret
xchg
jp
js
jl
icebp
xchg
sub
push
clc
popa
rcr
or
aad
sahf
jns,pt
and
dec
push
xor
add
mov
movsl
fildl
jb
data16
or
sub
pop
out
cltd
jmp
jmp
push
pop
jmp
ret
and
xor
sub
test
cwtl
cmp
or
pop
fsubrl
pop
xor
je
inc
cltd
outsb
jno
es
addr16
pop
and
jle
mov
or
gs
push
jae
fst
push
movsb
jo
push
repz
addb
inc
jb
xchg
dec
es
dec
jno
dec
jb
add
xor
jns
dec
cmpsb
out
adc
icebp
jle
fiadds
and
popf
lods
dec
add
in
or
aaa
cmp
jno
jne
arpl
ret
arpl
add
mov
loopne
out
adc
and
movsl
sti
jg
xchg
pop
and
inc
mov
mov
and
shll
frstor
cld
popf
das
dec
add
inc
inc
fdivrl
movsl
pop
nop
mov
lahf
shlb
loope
cmpsb
sti
aas
ds
inc
push
imulb
leave
sub
rcrl
insl
inc
fisubl
aad
inc
add
ss
leave
sti
pop
dec
cld
xchg
mov
ror
inc
outsb
pushf
lret
std
loopne
xor
add
arpl
sbb
lock
jecxz
mov
out
jg
sbb
scas
jb
sub
cltd
stos
int
sub
lock
push
mov
sbb
jns
and
pop
pop
sbb
leave
fs
imul
dec
test
rclb
jae
mov
mov
movsl
mov
ja
mov
sub
int3
das
insl
mov
test
mov
jl
loop
nop
mul
adc
mov
js
mov
mov
mov
push
cmc
xchg
pop
cltd
mov
aas
subb
jl
jp
mov
ljmp
xchg
and
mov
and
mulb
sbb
stos
add
idivb
test
popf
jnp
fstps
loop
mov
fstps
add
and
push
rcl
jo
mov
cmp
dec
adc
fnstcw
not
mov
or
lea
das
repnz
mov
adc
cmpsl
pop
cmp
enter
or
es
xor
sahf
push
jae
es
cmp
shl
mov
movsl
inc
gs
sub
pop
fsubrl
adc
xlat
stos
inc
and
and
xchg
fwait
jb
ja
dec
jns
mov
dec
ds
inc
lret
out
pushf
add
out
dec
sbb
push
in
cmpl
add
outsb
or
imul
mov
rclb
loopne
jbe
sub
cld
imul
loop
xchg
sub
mov
test
and
push
nop
sub
ret
into
ja
cmp
fsubrl
cmp
outsb
pusha
dec
dec
pop
mov
rcll
loope
xchg
dec
sub
pop
aas
enter
adc
cmpsl
icebp
les
and
lret
les
testl
aad
mov
and
lahf
mov
repnz
scas
add
dec
js
lds
test
pop
fwait
stc
imul
sbb
movsb
push
adc
nop
fmulp
add
inc
in
push
int3
repz
mov
loope
mov
jne
mov
cmp
mov
sub
sbb
pop
xor
bound
pop
popf
cld
push
out
mov
push
fisubl
mov
popa
sbb
fwait
movsl
adc
lock
rcrb
jmp
test
jg
nop
jns
les
mov
sub
and
add
dec
and
adc
xchg
lret
cmpsb
adcb
mov
rorb
test
xchg
cs
pop
test
xor
in
inc
inc
lea
sahf
jb
adc
add
jnp
xchg
jne
pop
and
inc
in
mov
movsb
and
jnp
sbb
call
sti
sub
lock
pop
xor
mov
clc
cmpsl
int
enter
sarb
int3
test
push
sbb
push
in
lret
leave
popf
jge
daa
sub
enter
call
push
inc
mov
popa
popa
add
out
dec
mov
add
lea
les
shll
outsb
push
jge
in
xorb
push
inc
add
xor
jmp
jne
jne
mov
aaa
pop
mov
rcr
or
push
and
mov
mov
and
pop
aam
xor
ds
repnz
xchg
cli
push
jle
inc
adc
and
xor
add
mov
jmp
mov
test
test
stos
xchg
mov
lods
sbb
leave
mov
xchg
gs
je
lahf
test
lahf
div
lods
sbb
incb
out
jns
and
shrl
dec
in
stos
add
push
xchg
push
mov
addl
lahf
xchg
addl
cmp
bound
mov
scas
pop
jns
fistpll
jno
mov
in
in
mov
mov
lds
test
mov
pop
push
dec
gs
hlt
mov
xor
ja
and
xlat
jg
int
in
jl
adc
pop
adc
jne
fbstp
stos
ja
cli
sub
jecxz
sbb
in
jg
pop
and
aam
std
daa
add
sbb
sub
mov
nop
xchg
sub
adcb
adc
add
shlb
or
jno
lds
pop
rorl
mov
pop
pop
or
adc
packsswb
jmp
jle
sbb
mov
outsl
pop
pop
dec
xchg
call
mov
stc
add
jae
xchg
leave
jae
and
lret
dec
and
loop
xchg
outsl
stos
sub
lret
sbbb
push
inc
aaa
xchg
adc
sub
jmp
fwait
add
outsb
adc
mov
mov
push
rolb
mov
fmulp
lods
pop
push
push
shrb
push
loopne
pushf
jg
mov
cmc
adcl
push
call
jmp
mov
sub
out
stc
push
sub
scas
rcrb
inc
add
js
lods
mov
mov
dec
mov
fwait
in
imul
mov
scas
enter
cld
push
dec
xchg
push
call
mov
cmc
mov
jbe
jns
add
js
mov
cmpb
nop
ja
xchg
adc
push
jne
cltd
sbb
pop
in
xchg
adc
sahf
pop
std
fxch
inc
inc
addl
fcoms
cwtl
dec
jecxz
int3
mov
jp
flds
cs
jns
cltd
or
dec
sub
bound
out
test
xor
mov
or
mov
shl
repz
iret
push
xchg
xchg
cmp
in
loope
cli
push
push
imulb
repz
stos
sub
into
push
cmp
xchg
fistps
add
outsl
ficomps
pop
nop
out
mull
ja
or
inc
sti
mov
push
hlt
sbb
mov
daa
mov
xchg
sbbb
cmp
jbe
jae
adc
pop
jl
mov
push
mov
xchg
jecxz
lds
bound
xlat
jnp
mov
arpl
inc
xchg
mov
jle
and
inc
dec
push
mov
mov
xchg
in
or
in
dec
add
cmpsl
mov
orl
or
inc
xor
jns
mov
xor
cs
jns
sbb
or
mov
mov
shlb
adc
or
mov
xor
fcmovnbe
sahf
fmull
test
lret
push
leave
push
stos
sti
or
loopne
pop
in
out
fisubrs
test
adc
sub
rorl
sarb
hlt
clc
stc
sbb
sbb
mov
xor
dec
jae
inc
je
mov
cld
dec
movsl
dec
stc
jecxz
fwait
mov
sti
gs
je
push
xchg
mov
inc
and
lret
inc
fidivrs
or
adc
sbb
push
pop
or
je
popf
jno
push
ljmp
pop
pusha
jne
and
pop
cmpsb
inc
das
pop
mulb
lods
popa
cmp
push
pop
mov
nop
test
jne
jno
push
mov
ret
in
nop
repz
or
cmp
int3
lret
bound
nop
stos
xchg
jmp
add
pop
shlb
jecxz
out
popf
js
aas
pusha
bound
cmp
jne
test
push
adc
movsl
push
mov
add
and
cmp
stc
cltd
fnstenv
xchg
outsl
rcrb
jae
sar
fisubrs
jl
ljmp
xor
sbb
mov
int
iret
pushf
rcll
sarb
pop
movb
das
mov
packuswb
dec
lock
and
sti
xchg
cmpsb
in
ror
adc
dec
xor
mov
pop
mov
inc
in
cmpsb
clc
inc
sub
inc
das
xor
cmc
cwtl
in
mov
out
shlb
cld
cmp
cmpb
fstps
mov
cli
mov
in
je
add
push
jecxz
pop
pop
pop
out
fists
sub
ret
mov
lods
and
filds
xor
jecxz
xchg
dec
cld
xchg
fnstsw
cmpsl
ficompl
push
imul
mov
or
lahf
push
lods
xor
xor
lcall
int3
lods
dec
xor
pop
pop
mov
jb
cld
adc
and
movsb
jno
xchg
cltd
pusha
cmp
pop
and
push
push
add
into
arpl
sub
and
daa
roll
inc
cmp
pop
mov
dec
xchg
lods
mov
fidivs
push
jb
fs
pop
cmp
dec
rcpps
mov
pop
add
mov
and
ss
lcall
into
mov
cmpsl
push
int
dec
test
sbb
sar
add
ds
inc
mov
xchg
mov
cmp
mov
sub
jmp
mov
loop
mov
pop
xlat
fsubs
lahf
dec
in
lret
push
popa
arpl
gs
rolb
stc
or
sarl
cwtl
ficoms
push
jbe
xlat
lea
cltd
mov
adc
xor
lahf
jmp
jge
popf
dec
outsl
mov
or
jb
push
mov
adc
pop
mov
mov
push
and
jnp
dec
sbb
ret
inc
mov
add
adc
scas
lahf
jbe
cld
outsb
cmp
jle
mov
dec
and
xchg
sbb
cmpsb
pop
jp
nop
cmp
adc
loopne
cmp
dec
ror
inc
iret
sbb
cmp
into
outsb
push
and
xchg
cltd
ficoms
iret
aam
or
dec
mov
jne
std
push
adc
pop
mov
mov
sbb
daa
imul
aas
sub
js
jnp
xchg
pop
test
xchg
icebp
xor
add
jne
mov
and
lods
mov
pop
mov
mov
push
add
mov
jbe
je
inc
lods
int
stos
push
aad
int
cmp
fdivrl
xorb
in
jmp
add
adc
dec
sar
mov
scas
cmp
orl
jmp
mov
mov
fistl
aaa
sbb
dec
mov
push
outsl
xor
mov
or
out
out
gs
daa
pop
mov
xor
cmp
add
daa
add
push
add
jle
xor
cmp
pop
xor
xchg
mov
pop
int
imul
cmp
mov
lods
jns
pop
cmpsl
shrl
and
and
xchg
cmpsb
daa
cltd
rclb
lret
out
pushf
xchg
mov
je
inc
or
imulb
mov
fisubrl
in
movsb
xor
cs
pushf
mov
jnp
mov
ss
jns
iret
mov
sub
mov
test
in
or
cli
gs
mov
cmp
sbb
rclb
mov
pop
test
pop
sbb
xchg
sahf
dec
std
imul
pop
xlat
sbb
xchg
stc
test
ret
adc
and
cmc
mov
mov
sti
lret
or
push
jns
outsb
jnp
hlt
mov
mov
idiv
dec
inc
lds
out
call
sub
adc
xchg
scas
mov
bound
scas
jg
inc
cmp
cwtl
push
imul
jnp
adc
call
lret
dec
mov
aas
sbb
xchg
bound
cmp
inc
sbb
cmp
ds
imul
and
jne
pop
out
pop
or
and
das
adc
xor
test
stos
pop
ret
pusha
xor
push
mov
sbb
mov
cmc
xor
sbb
add
in
test
add
sub
ret
cld
push
and
and
push
push
enter
js
fbld
arpl
iret
fnstcw
out
fidivl
fadds
shlb
cmp
sti
and
inc
dec
lcall
movsl
iret
sub
js
dec
hlt
mov
dec
jp
mov
pop
adc
fs
scas
inc
sarw
shr
mov
subb
mov
outsb
fsubrs
mov
insb
sub
jge
dec
es
inc
shrb
notb
cmpsl
pop
cltd
das
mov
pop
pusha
rolb
shlb
popa
lds
loop
into
sub
push
dec
pop
scas
push
pop
nop
lret
xor
xor
mov
mov
jge
or
pop
add
outsb
xor
loop
pushf
adc
subl
jns
leave
lret
pop
sbb
clc
xchg
cli
sti
push
mov
pop
shll
push
mov
or
sbb
daa
imul
filds
lret
dec
nop
and
jae
shll
dec
mov
cmpxchg8b
cmpsl
mov
mov
loopne
push
sbb
cli
subb
push
and
pusha
sub
add
dec
aas
popa
sbb
movsb
out
mov
jns
stos
pop
mov
pusha
mov
push
push
mov
push
dec
fistl
int3
push
push
xchg
lahf
pop
cmp
aaa
hlt
cmp
push
in
jns
mov
loop,pn
sub
dec
aas
int
dec
pop
pop
scas
into
mov
mov
sbb
pop
lea
jecxz
mov
ds
arpl
mov
and
aad
mov
bound
stc
out
sub
xorb
push
inc
ds
lods
pop
dec
inc
aaa
rol
lret
ficomps
cld
mov
ds
or
mov
cld
or
loopne
dec
movsb
and
push
orl
clc
push
clc
jecxz
add
push
mov
jae
shrb
in
jb
sub
cld
icebp
call
add
ss
jbe
test
sub
or
xchg
xchg
push
inc
xor
aad
cmp
fnstenv
les
sbb
test
pop
sub
mov
jle
scas
xor
imull
out
adc
adc
sub
dec
cmp
mov
mov
sub
mov
nop
js
loop
stos
in
and
subl
jno
xor
bound
lret
push
mov
push
out
push
in
jno
pop
pop
sarb
and
leave
ss
dec
adc
cs
xor
push
ret
mov
incb
or
movsb
cmp
int
test
xor
fistpl
pushf
imulb
loope
imul
sub
mov
xchg
xor
and
jp
std
das
pusha
std
test
jae
dec
sarl
mov
add
mov
out
inc
mov
mov
lcall
js
cmp
jp
add
test
dec
sbb
ror
mov
roll
push
fcmovnb
mov
xorb
iret
cmp
jmp
pop
cmp
cmpsl
and
mov
or
subl
bound
sub
test
hlt
sbb
popf
es
push
cmp
cmp
cltd
adc
xchg
adc
mov
pop
std
stc
cmpsb
pop
xor
lods
daa
sti
mov
adc
inc
add
rdtsc
sub
xchg
lock
jbe
jnp
dec
lods
or
mov
movsb
cmp
jl
xor
aas
fisubs
roll
pop
jno
inc
movsb
test
pop
ret
mov
lret
addr16
inc
pop
loope
sbb
and
inc
ficomps
leave
push
imul
xchg
adc
fnstenv
sub
fadd
test
pop
xor
out
dec
dec
out
jecxz
into
scas
mov
ss
pop
stos
mov
xchg
fisttps
pop
jmp
jmp
lods
pop
fbld
pop
push
rcll
sbb
cmc
and
sub
pop
adc
cmp
scas
mov
sbb
or
sub
fsts
ja
ret
out
sub
jno
cmp
js
dec
outsl
push
fs
jne
push
ds
ss
pusha
jb
jl
cmp
xor
outsl
insl
rcll
mov
dec
repz
mov
pop
test
adc
sbb
mov
loopne
xlat
add
xchg
inc
xchg
lcall
sti
fs
iret
cmp
in
mov
gs
xor
sub
dec
shlb
push
or
mov
dec
inc
cmp
ret
push
mov
inc
mov
arpl
in
cmpsl
int3
cmpsb
repz
lret
pop
xchg
jb
icebp
stos
out
xlat
lds
aam
cltd
xchg
mov
fimuls
pusha
pop
push
mov
insb
sub
push
fstpt
pop
data16
les
int
mov
test
enter
fists
pop
test
rorl
std
jl
popf
cmpsb
push
repz
shlb
arpl
sbb
xchg
xorl
aaa
enter
add
cmp
fadds
dec
inc
pusha
roll
bound
push
xor
imul
add
popa
pushf
sub
outsb
repnz
imul
jp
jbe
or
cltd
ficomps
adc
push
inc
ja
fsubrl
mov
push
fwait
add
scas
jg
pop
add
iret
push
in
xor
add
jo
xorb
xor
or
xchg
rorl
sub
cmpsl
lret
push
sub
push
fbstp
add
das
stos
sti
jmp
outsl
cs
mov
pop
stos
mov
push
and
ret
mov
mov
add
ljmp
xchg
rcrb
sbb
into
push
cmp
out
out
pusha
adc
pop
xor
sub
mov
outsl
nop
mov
sti
and
icebp
in
lahf
xchg
dec
or
ds
aad
pop
fcmovb
shrb
push
iret
sub
in
mov
add
clc
mov
es
cltd
dec
pop
jae
jg
repnz
lock
pop
mov
sub
push
stos
sub
dec
test
icebp
mov
movsl
aam
xlat
dec
call
nop
and
inc
sub
mov
mov
loop
mov
cmpsl
jnp
sub
icebp
mov
mov
out
jb
dec
cmp
cmp
popf
mov
or
mov
lods
add
outsb
and
or
stc
inc
shll
lods
ret
push
jp
cs
push
inc
nop
jo
je
jo
stc
lods
clc
jge
push
adc
lds
push
cld
fucomi
mov
outsl
add
idivl
shrl
dec
outsl
sbb
out
nop
shl
add
mov
sub
popl
roll
cmp
fs
xchg
repz
rcr
pop
xor
mov
bound
adcl
inc
adc
aas
cmpsl
mov
lock
mov
and
jns
leave
outsl
sbb
andnps
xchg
cltd
mov
insb
cmp
adc
dec
pop
cmp
loopne
in
add
pop
aaa
sub
jg
jg
pop
sub
fiadds
cmp
mov
push
outsl
mov
es
or
fwait
dec
add
test
mov
add
outsl
or
mov
icebp
jnp
leave
cmc
sub
cmp
jmp
lock
fstl
clc
jmp
push
adc
in
push
lods
insl
ja
movsb
add
les
xchg
inc
rclb
mov
stos
mov
mov
and
cmp
lret
lcall
dec
adc
das
lret
push
pusha
push
push
mov
shll
xchg
mov
lea
jle
xor
push
shll
rcrl
out
xchg
std
and
pushf
and
push
in
into
jmp
mov
jae
sub
mov
lret
repnz
xchg
and
xor
leave
push
jb
lock
sub
ret
xor
das
xor
pop
dec
faddl
dec
jmp
jae
in
or
jle
mov
repnz
or
inc
push
add
das
sub
push
roll
and
sti
mov
sub
sbb
leave
lods
ficoms
movsb
cmpsb
mov
sbbb
jae
fistpl
xchg
or
inc
mov
fildl
sbb
iret
test
mov
enter
ret
add
dec
sti
and
mov
inc
subb
jbe
inc
inc
test
outsl
mov
out
mov
fisubrs
xor
cmp
xchg
mov
xor
inc
adcl
jmp
fldenv
xor
cmpsl
out
cmc
mov
or
addr16
test
es
pusha
leave
sbb
or
xchg
cmp
stos
addr16
pop
dec
mov
in
sbb
loopne
sbb
imul
jne
adc
jle
mov
loopne
js
mov
dec
dec
mov
test
iret
xchg
stos
cltd
rolb
mov
xor
aas
push
inc
xchg
shlb
pop
outsl
jge
cmp
mov
xor
aad
mov
fimuls
xchg
pop
mov
cmp
orb
mov
scas
mov
add
icebp
inc
sub
push
push
movsl
inc
lret
outsb
xchg
add
pop
pusha
xor
inc
dec
and
roll
cmc
fsubr
jmp
aam
dec
sbb
imul
arpl
mov
xchg
jp
mov
ja
and
call
fistps
mov
push
xorb
mov
mov
add
dec
out
or
push
push
ret
and
push
iret
aam
mov
xor
out
outsl
jae
orl
pop
dec
mov
test
mov
fistpll
movsl
cwtl
ret
push
add
pop
push
add
mov
stos
cmp
ds
adc
dec
add
loope
jnp
pop
mov
test
pop
lea
push
pop
mov
cmp
outsl
mov
bound
xor
cmc
setle
adc
and
stos
ud1
xchg
in
stos
lcall
data16
lcall
jbe
push
pop
fisttps
je
stos
push
pop
aad
sbb
sbb
rcl
jne
rcl
jge
sub
adc
pop
cmp
daa
cmp
and
mov
mov
aas
mov
out
xor
sub
lods
mov
fistpll
adc
xchg
sub
clc
aaa
and
cwtl
aas
lcall
sbb
xchg
ret
data16
inc
xchg
mov
mov
xadd
repz
jne
leave
std
dec
test
fs
fsubs
leave
or
loopne
ret
test
rorb
test
mov
loop
cmp
testb
stc
dec
sub
cmp
fwait
stos
and
aaa
dec
fnsave
aad
pop
jge
pop
inc
mov
or
add
imul
adc
ret
cmp
add
inc
aas
sbb
loope
xchg
leave
adc
rorl
ret
pop
cmp
push
stc
mov
push
mov
lds
lods
sbb
aaa
push
inc
pop
xlat
and
std
andl
dec
lcall
loope
xchg
mov
xor
xor
cltd
sub
sbb
ljmp
jo
xchg
jp
in
dec
shlb
or
out
jle
mov
leave
mov
add
lds
jnp
xchg
jns
dec
add
pop
bound
dec
and
lret
jp
or
lods
nop
sub
rclb
das
outsb
mov
mov
fxch
xor
adc
adc
jle
stos
loope
lret
and
cli
mov
insb
testb
fucomp
mov
adc
fsubrl
adc
xor
inc
and
inc
add
pushf
mov
jb
jge
clc
cmp
lret
stos
lahf
loopne
pusha
push
push
repnz
and
mov
mov
jno
nop
imul
mov
inc
cltd
add
adcl
inc
frstor
xor
iret
hlt
pop
jmp
popf
les
loop
mov
ja
add
iret
jo
pop
mov
mov
ror
jo
test
movsl
movsl
xor
mov
jne
popf
add
lret
mov
stc
repz
aaa
xchg
add
push
inc
adc
adc
sti
cmp
mov
dec
fldcw
add
fsubs
std
inc
leave
icebp
es
mov
mul
mov
fisttpll
dec
es
mov
gs
int3
out
add
inc
mov
xchg
icebp
inc
ljmp
sbb
aaa
mov
adc
enter
enter
popw
add
mov
mov
aas
mov
and
test
add
push
ja,pt
aas
xchg
clc
and
xchg
scas
leave
or
pop
loop
rcl
mov
cmp
and
pop
icebp
into
aaa
cltd
in
sahf
sbb
rcrl
aam
into
imul
fisttpll
dec
mov
fnstcw
test
or
mov
pop
stos
popf
and
pop
out
sahf
sub
jp
test
inc
sbb
jns
inc
mov
sahf
cmp
inc
rcrl
mov
push
in
das
or
push
sarl
jb
cwtl
bound
mov
or
pop
or
addr16
fists
mov
ljmp
pop
scas
dec
inc
adc
jp
cmp
pop
inc
lock
lcall
mov
and
mov
orl
mov
xchg
xor
and
je
int3
xchg
mov
cld
scas
push
ret
es
in
test
stos
ja
sbb
mov
in
lods
lret
pop
or
es
cmp
je
repz
loopne
xchg
mov
or
inc
pop
xlat
cli
lcall
inc
adc
out
sub
out
xor
mov
add
jno
adc
ret
scas
sub
mov
mov
fistps
faddp
ds
mov
add
outsb
sub
les
lret
mov
lret
push
rcll
and
sub
and
add
in
ljmp
sub
sahf
sarl
cmpsb
jne
inc
insl
cltd
into
lcall
xchg
xor
xor
mov
scas
call
cli
fwait
call
scas
lds
push
enter
ja
inc
mov
int
adc
lock
sub
das
ss
xor
jecxz
js
arpl
xor
iret
fsubrs
push
inc
inc
fimuls
sub
jp
sti
push
jbe
inc
sub
pop
dec
jo,pt
lea
inc
push
pushf
cli
jns
jge
push
mov
rorl
push
mov
mov
pusha
pop
repnz
leave
pop
adc
push
xchg
mov
test
cmpsb
call
or
popa
pop
pop
jbe
mov
sbb
cmp
and
sbb
stc
push
sbb
orl
sti
xchg
pop
push
scas
iret
in
sbb
pop
leave
shlb
add
loope
and
jle
loope,pn
cmp
in
aam
sub
adcl
add
scas
mov
daa
stos
aam
mov
inc
cs
jge
cmp
push
push
in
inc
mov
cmp
sahf
pop
sbb
pushf
xchg
ljmp
ret
rcrl
mulb
rcrb
mov
sbbb
pusha
into
out
xchg
mov
inc
cmp
std
icebp
pop
loope
rcrb
ss
jmp
jp
adc
popa
sbb
cwtl
push
jle
xchg
or
xor
jb
sar
loopnew
inc
xor
nop
jbe
sub
dec
dec
push
push
dec
lds
adc
pop
cmp
test
mov
or
jbe
jecxz
mov
loop
icebp
stc
pushf
add
adc
mov
or
iret
jmp
je
or
movq
jo
je
cmp
movsb
add
or
inc
sub
sbb
in
cmp
rorl
pop
in
and
lock
lahf
fldcw
fistl
mov
sbb
pop
fstp
aas
out
or
and
or
jmp
shrl
sbb
adcl
pop
adc
dec
popf
cmp
dec
fsubp
add
popa
loope
or
adc
dec
jp
fcmovnb
fdivs
fstpl
shl
mov
dec
sbb
insl
in
jp
jbe
imul
les
mov
cli
pop
xor
push
cmp
jbe
add
clc
push
nop
cmp
lret
loopne
sti
cmp
fcompl
test
mov
test
jne
jecxz
lret
das
jg
or
shll
push
sub
xor
mov
dec
orl
call
loopne
pop
lods
jb
imul
ja
fistpll
sub
sub
mov
or
popa
inc
test
add
push
das
push
jp
adc
xor
clc
or
sbb
push
roll
pop
adc
lods
jle
mov
mov
mov
adc
push
pusha
sahf
and
xchg
stos
ds
nop
ja
jae
jno
leave
push
jbe
dec
fmull
adc
xchg
lods
push
mov
mov
jns
xor
and
addr16
pop
nop
inc
mov
cwtl
lret
sbb
push
fcomi
int
fadds
mov
out
push
xor
sbb
jmp
mov
xchg
scas
movsb
mov
hlt
jns
cmp
pop
in
jo
pop
inc
xchg
sub
and
mov
das
mov
int
push
push
mov
push
sbb
out
sbb
mov
pop
clc
push
pop
dec
movlps
call
mov
cmpl
pop
test
loopne
fadds
jl
push
mov
addr16
imul
and
in
add
and
stc
mov
pop
in
dec
rorl
add
popf
ja
lret
insl
cli
xchg
lods
mov
xchg
sub
pop
in
es
add
mov
jp
dec
ja
sub
lret
xchg
push
add
mov
mov
mov
add
push
push
hlt
cs
inc
sbb
sbb
xlat
lcall
xor
ret
pop
imul
pusha
jmp
mov
mov
jle
int3
mov
imul
aad
std
dec
xchg
push
jle
mov
popa
push
js
cld
pop
cmp
or
jbe
mov
mov
xchg
aaa
adc
sbb
repnz
insl
fstpl
clc
inc
int
loop
out
inc
push
jg
mov
push
loope
popf
sub
mov
aaa
js
jmp
push
fldcw
jno
gs
mov
out
push
cmpsb
dec
fstpt
mov
arpl
push
in
push
pop
cmc
pop
mov
xor
xchg
aad
int
sbb
add
fbstp
inc
push
or
mov
enter
mov
fnsave
sbb
jmp
sub
cld
mov
imul
int3
xchg
das
clc
loope
dec
mov
mov
mov
cwtl
pop
mov
sti
dec
push
lods
jbe
add
jecxz
insl
and
adc
cltd
xlat
or
pop
mov
fidivs
mov
mov
pop
lods
inc
push
xchg
cli
push
aad
cmpsb
mov
ss
mov
push
outsb
cmp
push
addr16
and
mov
movsb
add
aas
dec
jb
or
xor
subl
xchg
lea
push
ljmp
jp
fistps
pop
xor
test
sub
dec
cld
sbb
cmp
lret
pushf
and
cli
les
je
push
scas
fiadds
mov
jb
mov
mov
lcall
and
add
xlat
mov
out
xchg
pop
rcll
out
fldenv
aaa
ret
mov
jecxz
mov
inc
inc
cmp
pop
mov
mov
add
iret
add
and
test
lcall
adc
add
xor
outsl
or
imull
loopne
lods
mov
idivb
adc
stc
addr16
xchg
add
jb
aad
stc
cld
inc
scas
mov
add
dec
in
adc
shlb
mov
cmp
in
lretw
test
mov
push
sub
and
dec
stos
mov
out
or
stos
nop
gs
xor
insl
mov
fnsave
test
lock
push
cmc
ficoml
les
lds
sub
cld
repz
das
in
mov
mov
pop
test
push
mov
pop
add
sbb
jne
xchg
orb
pop
cld
or
stc
mov
pcmpeqb
sub
xor
push
shll
dec
sub
inc
cmpsb
in
in
cltd
daa
push
fisubs
push
test
pop
jbe
pop
xchg
je
lock
leave
jle
cld
push
pop
xchg
out
cmp
and
push
or
in
xlat
lock
adc
mov
ret
push
push
push
test
sti
repz
mov
gs
mov
sub
push
pop
outsl
aad
mov
jmp
int3
push
cmp
adc
pop
int3
add
push
dec
aaa
inc
jae
fsubrs
fwait
xor
mov
cltd
scas
jno
jp
enter
dec
movsb
mov
inc
inc
fcomps
out
dec
pop
cmpsb
mov
aas
dec
pushf
or
fcmovnb
mov
push
addr16
add
xchg
jnp
imul
push
push
push
fimull
pop
in
dec
mov
mov
mov
mov
or
xchg
stc
lahf
xor
popa
jns
ret
out
push
mov
iret
pop
xchg
bound
scas
adc
rol
sbb
enter
sbb
push
sub
xchg
dec
fcoms
nop
scas
js
into
xor
cs
outsb
jle
push
clc
xor
insb
popa
insl
aas
dec
imul
dec
sbb
xchg
mov
sar
mov
insb
ret
daa
sub
or
sbb
aam
mul
jae
imul
leave
mov
fstl
mov
adc
test
ss
sub
orl
push
gs
movsl
push
movsb
imul
and
mov
jp
outsb
mov
imulb
sbb
imul
pop
lret
xor
sahf
in
lea
fmuls
inc
fnsave
push
xchg
xchg
cmc
mov
cmp
icebp
xorl
movsb
adc
mov
or
insb
popa
cmp
ds
or
das
sti
imul
cmp
jns
cld
xor
add
ret
push
scas
jbe
leave
or
jp
and
cmp
xor
xor
or
xor
xor
add
dec
inc
js
adc
test
dec
hlt
sub
in
incb
into
cmp
jmp
outsl
mov
or
inc
sub
mov
sub
jl
mov
push
out
pop
stos
inc
das
cmp
jno
pop
adc
ja
jmp
and
cld
or
into
int
xchg
inc
dec
mov
int
lahf
cmpsb
mov
inc
lret
flds
jo
fimuls
pop
xor
xchg
inc
add
punpckhdq
push
adc
sbb
add
rcll
cmpsb
xor
lret
sbb
or
inc
rcrb
adc
pop
mov
out
dec
xor
or
inc
out
push
pop
int
sub
push
xchg
test
sar
adcb
jp
xor
es
mov
ret
loop
loop
mov
neg
out
sub
leave
ja
mov
dec
aaa
imul
add
add
movsl
mov
push
insb
fsubs
mov
push
jle
push
pushf
ds
mov
xchg
mov
push
add
and
fbld
out
test
sub
dec
mov
cmp
imul
movsb
lods
or
lea
insl
push
hlt
test
lods
cli
mov
enter
popa
sbb
jbe
jle
pop
hlt
xor
sub
pop
and
push
lods
fwait
inc
cmp
and
lret
and
xchg
xor
push
fsubrs
loope
mov
mov
fwait
xchg
bound
sub
xchg
sbb
push
sahf
mov
aaa
cmc
mov
dec
sub
into
mov
outsb
push
outsl
rcrb
inc
sbb
sub
cmp
fsubp
jp
or
mov
lahf
add
pushf
or
pop
push
in
mov
movsl
lock
adc
jns
mov
xor
outsl
xchg
and
inc
mov
mov
iret
sbb
cs
pop
ret
push
adc
push
pop
pop
ror
test
mov
mov
movb
sti
les
cmp
jbe
in
mov
xchg
test
sbb
jno
loope
fnstcw
xorl
ds
mov
stc
jecxz
cmpsb
mov
ds
push
jo
ss
frstor
push
inc
sarb
xor
xor
dec
jl
ds
sahf
test
cmc
sub
or
dec
jle
dec
jge
mov
mov
rcrl
shll
sbb
xorl
sub
popf
rclb
dec
xchg
aam
arpl
mov
or
inc
add
movsb
sbb
addr16
push
sbb
es
js
ja
and
jae
out
es
inc
out
inc
mov
sub
mov
sub
push
popf
lret
mov
bound
and
daa
imull
jnp
pop
cmp
dec
jo
imul
push
mov
add
sbb
jo
into
nopl
lock
rcrb
fnstcw
lock
in
add
pushf
cmp
les
mov
mov
xor
inc
fidivs
and
cltd
test
jbe
or
cmpl
arpl
pop
cmc
arpl
mov
stos
outsb
mov
inc
lea
inc
les
pop
adc
cmp
jb
stos
xor
data16
inc
pop
xorl
hlt
push
xchg
push
cmpsl
push
cwtl
cld
addr16
cmp
lods
push
addb
call
loope
cmp
xor
loopne
mov
addr16
out
xchg
adc
int3
add
sub
mov
xchg
es
xor
push
loop
ds
sbb
pop
outsb
hlt
jnp
pop
test
cmp
jp
repz
popa
lahf
call
rorl
adc
add
or
lahf
lock
adc
je
dec
test
or
push
xor
jno
mov
stc
sub
inc
lea
push
nop
push
fwait
movb
nop
mov
jle
jne
xchg
int
jo
dec
sub
push
cmp
nop
sbb
ds
cmp
sbbb
and
dec
shlb
xchg
stc
jp,pt
in
movsl
sbbl
js
pop
dec
pusha
cld
pop
pop
out
inc
pop
mov
sar
adcb
inc
lea
loope
clc
xor
test
mov
cmpb
imul
or
mov
push
push
std
xor
push
mov
into
repnz
lods
loop
cbtw
lret
out
decl
repz
cld
and
xchg
inc
pop
aad
push
outsb
aam
scas
cld
incl
test
mov
aas
stos
mov
out
jmp
add
fcmovne
notl
pop
out
mov
fs
dec
cmc
mov
push
pop
push
aaa
test
stc
inc
cs
inc
jecxz
or
clc
sbb
inc
out
pushf
iret
test
mov
push
inc
cmp
mov
cmpsb
xchg
jle
sub
cmp
lret
xor
js
xor
bound
cmp
nop
sti
sbb
ljmp
ljmp
or
or
in
adc
lock
or
mov
jb
inc
aas
xor
and
gs
add
cmp
jnp
xor
pushf
into
sbb
jbe
jmp
rorb
push
push
add
inc
lock
mov
inc
inc
ja
in
cmp
subl
aad
inc
in
mov
out
push
fiadds
lea
add
or
dec
mov
pop
jge
mov
inc
adc
and
xorl
xchg
mov
mov
xchg
xchg
popa
popa
je
jecxz
data16
xorl
sbbl
and
fstpt
bound
into
ja
jne
in
sbb
mov
ja
pop
fnstenv
ss
das
or
inc
sar
and
aad
stos
lods
adc
out
out
scas
xor
test
cmp
mov
cmp
insb
xchg
jle
hlt
mov
mov
or
push
jp
adc
push
jmp
sbb
addr16
in
sarl
push
xor
frstpm(287
mov
in
push
push
xor
and
int3
lret
dec
push
push
pop
mov
push
sbb
out
in
dec
cwtl
sbbl
xchg
sbb
sbb
leave
std
aaa
xchg
divb
mov
hlt
mov
aam
sahf
fnsave
adc
out
in
in
cmpsl
or
add
ljmp
mov
and
rolb
fadds
dec
adc
lret
sar
push
sub
movsb
cmpsb
lret
pop
mov
and
fsubrs
leave
adcb
push
mov
js
add
sti
enter
cmovo
inc
rcr
addr16
mov
jne
add
dec
ljmp
xor
dec
jbe
shl
mov
xchg
xor
adc
jae
call
adc
out
insb
insl
jmp
out
and
dec
push
sub
push
sbb
cmp
xor
adc
stos
add
and
rorb
aaa
fwait
and
push
or
cmp
inc
aaa
pop
xor
cmp
out
rsqrtps
and
or
mov
xchg
or
fstl
cmc
xor
mov
dec
nop
dec
aas
fdivrl
testl
int3
inc
pop
lds
xchg
push
scas
leave
testb
jmp
iret
xrelease
or
daa
and
test
bound
push
nop
mov
sub
and
cmpsb
inc
popa
arpl
jb
dec
inc
fmull
daa
loope
cwtl
jmp
inc
mov
push
pop
out
adc
ret
in
mov
pop
inc
and
int
sbb
mov
xchg
icebp
pushf
inc
push
lret
ss
fistpll
hlt
mov
sub
mov
xchg
add
dec
lcall
push
jmp
xor
ror
or
fnstenv
dec
jne
shll
or
mulb
vcomisd
push
xchg
push
outsl
jne
shr
hlt
mov
movsl
imul
inc
mov
sub
sahf
inc
aas
xchg
repz
cmpsb
xchg
push
rcr
out
dec
jle
fistpll
pop
shr
popl
push
inc
mov
mov
dec
push
mov
xor
test
pop
lea
inc
jae
xchg
stc
pop
lods
pop
in
push
nop
enter
xor
xchg
sbb
lahf
aaa
aas
jle
mov
loope
int
fbld
imul
cmc
xor
je
cwtl
jl
or
fsubs
scas
pop
dec
nop
jbe
inc
rep
inc
jnp
fidivs
test
faddl
pop
dec
lret
pop
mov
pop
cwtl
sahf
xlat
cltd
addr16
sbb
xadd
repnz
mov
mov
mov
push
enter
cmp
insl
pushf
sahf
and
notb
pop
or
sbb
add
in
push
movb
movaps
icebp
in
dec
cmp
dec
push
test
lret
cmc
data16
xor
test
ret
pushf
adc
scas
aaa
mov
push
scas
in
aaa
adc
mov
mov
jb
mov
stc
mov
push
adc
call
mov
movsl
adc
hlt
mov
jmp
pusha
insl
xchg
cmpsb
into
fstp
loop
shrb
mov
lods
xchg
mov
push
mov
subl
xchg
mov
push
sub
divl
ret
lock
imul
mov
xor
dec
adc
xchg
les
xchg
shl
gs
and
ljmp
jne
pusha
push
iret
mov
stos
mov
insl
call
leave
nop
jmp
pop
xor
in
add
sub
cmp
mov
sbb
mov
scas
fcmovu
inc
ja
cmpsl
aam
sbbb
fstp
sbb
add
fldt
xchg
add
adc
imul
dec
sti
push
rcrl
fidivrl
scas
push
mov
sahf
mov
iret
jmp
loope
dec
xchg
fldcw
loop
xor
stos
gs
jne
imul
add
and
inc
jno
inc
ja
div
ds
scas
mov
repz
insb
insb
outsb
adc
push
je
aad
pop
call
inc
mov
nop
test
xchg
mov
push
rcll
scas
inc
sub
cmp
mov
rcrl
jbe
mov
xchg
loope
xor
cli
in
push
mov
andl
cli
add
or
jae
in
and
lcall
xlat
and
loop
cmpsb
out
cwtl
push
mov
bound
lcall
push
or
or
dec
add
std
sub
lret
jg
lds
imul
hlt
outsb
or
hlt
add
mov
ret
mov
cwtl
loopne
pop
sahf
mov
add
fwait
outsb
aad
jmp
adc
loop
xchg
pop
into
push
out
push
gs
add
pop
int
jle
fiaddl
dec
fdivr
xchg
sub
pop
es
adc
inc
mov
push
test
pop
or
je,pn
fists
cmp
iret
add
push
ss
dec
stc
fs
test
push
ljmp
js
mov
cmpsl
insl
lds
add
std
push
sarl
rcll
cmpsb
loope
or
mov
xchg
push
jno
movups
push
outsb
sahf
cmp
adc
jno
adc
inc
shrb
jle
imul
jnp
ret
push
sub
addr16
cwtl
iret
pop
dec
pop
repnz
lret
popf
mov
cmp
cwtl
push
mov
rol
loopne
inc
imul
pop
push
insb
fsubr
aad
outsb
std
out
lds
push
in
jmp
std
pop
fcom
jecxz
push
inc
pop
addr16
adc
adc
adc
xor
push
aam
outsb
jle
shr
push
clc
xchg
push
adcl
sub
xchg
mov
jb
sub
sub
mov
fbstp
sub
add
sub
rcrb
cmp
in
stos
push
mov
and
push
bound
lcall
setne
push
cs
loopne
jle
movsb
arpl
je
add
movsb
and
adc
mov
aaa
add
call
dec
lahf
push
adc
mov
scas
int
mov
divl
jge
test
inc
in
cld
mov
inc
out
pop
jnp,pt
and
push
cmpb
mov
xchg
sbb
fiadds
mov
push
jo
sarb
cmpl
lds
cmpsb
fnstsw
mov
js
jbe
mov
jbe
cmp
arpl
pusha
add
xor
mov
test
lea
clc
aas
addl
loope
shll
scas
stc
xchg
arpl
xchg
mov
jns
mov
mov
scas
sbb
fwait
rclb
add
pushf
fucomp
out
pop
int
cmp
out
popa
xchg
mov
push
pop
jbe
ret
not
pop
push
pop
push
mov
movups
jne
push
pop
lods
popa
mov
in
cmp
dec
jmp
js
lcall
int3
xor
popf
jl
pushf
nop
push
mov
and
iret
pop
jl
scas
adc
insb
cwtl
xor
out
sahf
mov
divl
jb
mov
daa
hlt
push
push
sub
sahf
loope
popf
push
cmp
cmp
shr
xor
daa
imul
mov
pop
aaa
rorb
xchg
movb
add
xchg
std
in
std
push
sub
fidivrl
pop
arpl
pop
fsubs
addb
jbe
dec
lods
aas
and
push
popa
mov
mov
aad
test
fnstcw
push
imul
xchg
push
mov
sub
aam
jmp
les
xchg
sub
test
cwtl
mov
shll
rolb
int
jno
and
negl
pop
inc
push
out
inc
xchg
sub
push
test
addr16
jge
or
mov
mov
test
sub
pushf
repnz
pop
idivb
addr16
mov
cwtl
pop
dec
and
push
mov
jae
dec
mov
xchg
rcll
addb
push
mov
mov
jmp
inc
imul
into
or
arpl
sahf
jmp
sbb
push
mov
add
add
dec
dec
cmc
in
dec
fidivrl
test
push
nop
arpl
out
inc
es
and
jbe
and
leave
push
pop
outsb
xchg
fisttps
sbb
jae
cmp
xor
mov
int
negb
push
ds
adc
fwait
push
dec
dec
aam
out
mov
add
mov
jns
push
pop
ret
nop
addr16
stc
mov
cmc
or
and
mov
dec
adc
int
mov
or
test
inc
in
inc
xchg
leave
xchg
cmpsb
pop
les
xchg
and
push
hlt
dec
lahf
or
pop
popf
add
lods
pop
sbb
mov
mov
dec
test
movsl
outsb
xor
and
xchg
popa
cmc
movsb
insb
adc
loop
outsb
or
dec
fnstcw
imul
enter
dec
cld
inc
arpl
mov
sub
add
lret
leave
jmp
int3
dec
test
pop
xchg
xchg
mov
call
shlb
out
push
push
cwtl
mov
mov
pop
jnp
dec
adc
sbb
imul
cmp
jnp
cltd
adc
push
jns
sub
cmp
daa
test
sti
fxch
jae
mov
jne
sti
outsb
and
and
stos
adc
int3
dec
pop
sub
repz
loopne
or
clc
sti
pop
cwtl
int
fwait
dec
fwait
xchg
mov
jg
in
push
mov
scas
lahf
cmp
or
inc
test
and
in
in
sub
cltd
scas
mov
pop
xchg
sahf
test
ja
je
jae
lea
sbb
loope
sub
pushf
mov
idivl
mov
shrb
cmc
sbb
pop
jb
sbb
int
add
ud0
imul
lahf
incb
leave
inc
aaa
sbb
and
outsl
sbb
inc
mov
fidivl
jns
sbb
xor
pmulhw
bound
js
pop
pop
jbe
aaa
mov
enter
or
repz
fs
and
test
xchg
add
push
cmc
les
cmp
stos
and
push
sbb
sbb
mov
bound
xor
jp
mov
mov
nop
adc
sub
push
loope
dec
push
test
mov
aad
dec
ljmp
mov
iret
and
lcall
test
dec
push
or
xor
cltd
push
fdivrs
xchg
aad
out
mov
int3
and
fsqrt
cmpsb
pop
das
aad
push
push
xor
daa
or
or
test
fmull
mov
push
push
push
jbe
add
cmc
addb
or
xchg
iret
cltd
shrb
sahf
popf
lods
ljmp
dec
or
fsubs
mov
pop
in
stos
pusha
mov
sub
sbb
adc
cmpl
or
es
add
jl
shl
addr16
dec
pop
rorb
call
stos
nop
sbb
stos
int3
in
aaa
ret
sbb
xor
cmp
dec
pop
cltd
pop
rcr
cmp
and
pop
push
add
js
push
test
sbb
jne
dec
mov
inc
in
bound
sub
jp
push
push
mov
cmpsl
or
adc
out
fcomp
aam
icebp
into
fsub
mov
mov
rclb
ljmp
lret
hlt
repz
mov
xchg
mov
leave
aaa
in
loopne
mov
jecxz
sbbb
sarb
mov
jle
fdivs
mull
jne
xacquire
fstps
dec
rcl
mov
or
out
sbbb
or
mov
inc
mov
int
mov
mov
sub
sarl
cmp
movb
jae
lcall
sbb
and
or
mov
inc
movsb
xor
xor
imul
pushf
shrl
or
xor
mov
xchg
insl
xor
sub
out
add
je
push
or
ret
ret
popa
les
add
jle
mov
jbe
gs
mov
and
ds
ljmp
jo
jmp
adc
or
inc
xor
fisubrs
arpl
push
jno
mov
sub
xchg
mov
xor
sub
push
push
inc
cmpb
sahf
push
jb
fmull
icebp
xor
adc
mov
loop
fidivs
popa
pop
push
outsb
jl
push
cmc
dec
test
ret
mov
pop
inc
dec
imul
cmpsb
daa
loope
jne
ja
mov
jge
hlt
ret
shlb
rorl
cmp
adc
cwtl
es
cmp
imul
je
loop
insb
push
and
insb
es
in
int3
or
mov
jg
std
push
xchg
pop
push
call
jno
and
pop
mov
les
shrl
fimuls
adc
enter
test
pop
or
sbb
and
rcrl
adc
repz
out
add
dec
mov
sbb
loope
out
test
xor
lret
jns
mov
mov
xlat
xchg
int
jbe
push
repz
pop
call
aas
add
or
push
jne
pop
in
mov
mov
xchg
mov
ret
mov
push
mov
fabs
in
pop
mov
testb
cmp
pusha
movsl
dec
jb
mov
in
push
and
jl
cmp
sahf
dec
jne
leave
fidivl
lret
xorl
out
add
out
mov
sbb
out
dec
enter
pop
arpl
push
jbe
js
xor
mov
je
mov
sti
pop
mov
dec
dec
push
repz
data16
add
dec
jmp
mov
fisubrl
repz
sbb
xchg
addl
lds
xchg
ffreep
fisubrs
push
shll
repz
insb
test
clc
inc
push
push
push
dec
push
cmp
mov
jns
push
in
insl
push
pop
push
pop
arpl
and
imul
fstps
and
sbb
push
push
xchg
jae
mov
rcrb
notb
xor
out
jmp
insb
jne
sbb
das
mov
ja
push
std
cltd
push
xor
loope
sarl
jnp
lea
mov
test
imul
push
stos
gs
jmp
aad
daa
pop
mov
adc
mov
xchg
xor
imul
sbb
lcall
add
stos
shlb
and
and
mov
rorl
jae
hlt
imul
or
movb
mov
test
andb
mov
in
dec
sub
cmpsb
lahf
sti
xor
inc
pop
test
xchg
stos
xchg
icebp
sub
adc
dec
mov
adc
pop
pop
push
inc
int3
cltd
out
and
jl
in
xchg
mulb
add
outsb
sub
push
jnp
imul
jecxz
int
mov
or
pop
xchg
xlat
xchg
cmpsl
out
test
sub
jmp
jbe
cmp
cs
and
sub
jnp
jno
jne
mov
lret
cmpsb
push
pop
jae
or
pop
cwtl
loopne
icebp
adc
inc
aad
fcomi
pop
and
jbe
loopne
aaa
xchg
jae
or
addr16
test
fstpl
push
jae
xor
inc
fistps
push
cmp
push
movsl
subl
insb
or
dec
mov
outsl
rorb
test
mov
insl
outsl
lods
sbb
lds
orl
out
push
sub
add
sub
sub
sar
xchg
leave
in
mov
xchg
xor
iret
popf
out
mov
cs
adc
test
mov
or
or
pusha
aam
stos
push
mov
pop
add
push
xlat
jb
out
mov
test
inc
and
push
xor
sub
cmpsl
add
cmp
stc
popf
mov
aas
aaa
inc
adc
jge
jg
and
repz
data16
outsl
xor
push
jne
add
jne
in
jge
add
push
mov
das
xor
out
faddl
test
xor
inc
inc
jbe
mov
jb
cmpsl
jp
stc
hlt
movsb
jl
repnz
dec
push
pop
sub
lea
and
fidivrl
cmp
out
dec
loopne
jg
ret
cmp
cmc
or
sbb
test
xchg
fmuls
add
cltd
mov
lcall
push
bound
mov
cs
push
cmpsl
pushf
jae
imul
cmpb
xor
test
aad
adc
mov
out
aaa
sbb
loop
test
imul
test
sub
cmpsl
rcr
or
xchg
mov
shl
pusha
rclb
mov
add
pusha
xchg
out
pop
add
mov
pushf
pusha
inc
loope
rclb
nop
fcmovnb
mov
and
jbe
cmp
adc
sbb
loopne
sbb
mov
adc
xchg
inc
jmp
cmpsl
sbb
inc
mov
and
adc
dec
jo
mov
mov
sbb
xorb
enter
mov
cmc
or
push
jecxz
cld
pop
jmp
push
xchg
outsl
rcr
push
jb
add
arpl
cmp
fs
or
add
adc
jle
adcl
stc
popa
inc
sbb
mov
iret
mov
push
xor
mov
in
sbb
ret
decb
add
fstpl
add
dec
mov
add
push
mov
daa
icebp
test
inc
push
lret
es
fisttpl
mov
xor
call
inc
data16
cwtl
ss
jbe
jbe
imul
adc
inc
in
int3
mov
and
add
in
sub
or
pop
adc
ss
pop
iret
xor
pop
jb
mov
in
or
cmp
push
out
rolb
sub
arpl
jae
sti
cmp
mov
stos
into
dec
mov
lret
lret
push
jbe
lret
movsl
fwait
enter
dec
loop
jne
ss
jle
mov
jg
push
fsubrl
movsl
sub
loopne
xlat
cmp
outsl
push
push
jecxz
clc
scas
jp
sbb
push
mov
and
lcall
add
jo
sti
ljmp
adc
and
imul
pop
and
test
xchg
mov
shl
xor
pop
lods
cmpsb
gs
imul
pop
fists
pop
jmp
and
and
lods
and
ljmp
sbb
lods
leave
sub
adc
ds
loop
test
cmp
mov
mov
in
ficoml
loope
push
add
xchg
mov
fnstsw
shl
out
or
adc
out
dec
jge
cmp
and
in
clc
pusha
jo
loop
mov
dec
cld
je
lds
sbbb
xlat
mov
test
ss
mov
or
movsb
xchg
or
js
cli
lea
cmc
dec
test
sbb
mov
sti
test
mov
dec
out
mov
cmp
xchg
xchg
cmp
outsb
int3
mov
loopne
sbb
xor
pop
fdivrl
sub
jmp
or
mov
sti
inc
add
stc
dec
gs
jns
outsl
outsl
jb
scas
cmpsb
adc
divl
data16
xchg
and
lock
fdivrl
cmp
pop
divl
or
mov
movsb
inc
jg
mov
in
shlb
xorb
rolb
jae
stos
ret
adc
inc
fcompl
inc
je
sar
lcall
add
js
xchg
add
incb
mov
sbb
scas
mov
sub
adc
jmp
add
xchg
xchg
add
xor
mov
test
inc
out
iret
fmulp
and
mov
push
jl
sbb
jmp
loope
dec
jnp
cmp
inc
sub
jnp
sub
sbb
add
sbb
test
clc
adc
loopne
mov
jno
ss
jno
mov
in
scas
fisubrs
js
aam
daa
jb
sub
mov
sbb
add
inc
divl
mov
or
scas
push
mov
push
mov
push
rolb
data16
push
push
in
stos
in
adc
mov
cli
xchg
sarb
sub
xchg
dec
pop
addr16
test
mov
movsb
jae
sahf
jbe
mov
mov
int
pop
and
int3
sbb
ret
sbb
sahf
jmp
cmp
fs
push
sbb
cmp
jae
sbb
rorb
and
jns
sbb
dec
cwtl
rcl
fcmovbe
pop
test
push
movsb
in
in
mov
add
pusha
scas
jns
mov
xchg
xor
stos
dec
add
ja
inc
mov
icebp
in
notl
jecxz
mov
pop
arpl
test
sbb
jg
fnstsw
dec
sbb
mov
and
dec
daa
push
mov
pop
add
inc
jmp
mov
dec
add
cld
imul
adc
or
inc
int3
loop
scas
dec
jge
mov
jle
add
mov
push
sbbb
loopne
fwait
cltd
push
and
mov
cmp
xlat
js
aam
and
outsb
bnd
mov
mov
out
daa
cltd
jmp
out
stos
push
inc
mov
lahf
jl
arpl
aaa
icebp
out
cmc
xor
in
lcall
cmpsb
adc
in
sbb
insl
sbb
fstpl
outsb
pop
push
pop
lcall
mov
push
mov
mov
xchg
jne
aam
mov
je
or
das
andb
jno
push
and
sub
fidivrs
sbb
jb
out
push
shll
iret
repnz
notb
vphaddubd
call
lret
psrld
or
xchg
loope
jecxz
gs
mov
push
xchg
pop
xor
jecxz
mov
adc
xchg
push
dec
sbb
push
fcmovnu
in
test
mov
popa
mov
inc
adc
push
push
pop
fnstcw
pop
sub
lods
mov
mov
jp
test
testl
xchg
or
sbb
outsb
loop
sub
adc
add
xor
jns
xlat
pop
aam
cli
lea
insl
dec
sub
and
cmp
sub
cmp
cmp
jmp
cli
dec
adc
daa
pop
add
dec
xchg
negb
aad
xchg
pop
jne
sti
cwtl
out
insl
lds
hlt
xchg
pop
mov
adc
sti
and
clc
repz
addl
inc
mov
aad
cmp
call
xor
out
xchg
outsb
sub
pop
test
rclb
dec
push
mov
shll
fcomps
test
pop
out
bound
fisubrl
pop
xchg
xchg
cmpsl
int
inc
ret
inc
push
dec
imul
loopne
cltd
pushf
sub
lea
jns
dec
popf
aam
jge
arpl
aaa
pop
clc
test
ljmp
mov
arpl
icebp
out
push
and
fidivrl
mov
out
sub
pop
pop
xor
cwtl
in
shl
cmp
cmpsb
xor
cli
jne
sarl
xchg
push
mov
sti
jno
xchg
sar
aam
mov
push
lcall
cmp
add
insl
inc
mov
fiaddl
jae
js
cmp
mov
out
sbb
outsl
icebp
stos
cld
lock
popf
fistps
arpl
xchg
push
jmp
jl
out
push
das
imul
push
cli
add
mov
mov
sub
adc
dec
cmp
out
cwtl
or
fwait
subb
lea
jne
pop
inc
daa
dec
lahf
rcrb
xchg
in
mov
xchg
out
jge
mov
ds
jmp
pop
ss
cmp
call
dec
out
shll
and
xor
xchg
sahf
mov
xlat
testl
inc
lret
pop
popf
shrb
es
cmp
xchg
mov
loop
movsl
dec
sbb
push
int
inc
adc
and
popf
mov
dec
push
lret
repnz
or
and
cmpsb
cli
adc
sub
cmp
xchg
fs
push
adc
fiadds
sbb
mov
and
jo
add
shl
jg
ja
fadd
cmpsb
mov
sub
stos
call
sbb
fisubrl
xorb
pusha
mov
push
outsb
or
hlt
xchg
jg
fcom
outsb
fwait
dec
icebp
inc
pop
sbb
test
ss
cmovno
cmp
jmp
xchg
mov
lret
insl
push
mov
mov
std
int
push
addr16
in
test
popa
popf
mov
mov
jb
shll
pop
rolb
sub
iret
pop
into
push
ljmp
aad
mov
dec
sbb
insl
ds
addr16
mov
fiaddl
pop
xor
scas
xor
sub
pushf
sbb
and
syscall
cmp
xor
cli
mov
enter
sbb
call
cmp
or
dec
pushf
add
out
andb
sub
pop
inc
sub
mov
adc
rclb
movsb
jns
ss
jp
push
sbb
xor
out
jle,pt
sbb
ret
xorb
fbstp
pop
leave
in
cmp
or
jge
and
add
lods
repz
mov
mov
loope
sub
mov
stc
mov
mov
mov
imul
lret
sbb
cwtl
rcrl
and
mov
scas
xor
xchg
mov
jne
in
and
ss
cmc
and
pop
mov
mov
add
enter
scas
lret
fwait
gs
es
insl
negl
mov
pop
ret
and
mov
int
out
push
sbb
add
ret
pusha
inc
out
js
lods
xor
push
nop
scas
fsubrs
idivb
sbb
icebp
loopne
test
ds
test
insl
xchg
jg
imul
hlt
cwtl
inc
aam
movsb
data16
ss
push
pop
test
jecxz
std
dec
sbb
pop
mov
pop
stos
mov
add
adc
dec
mov
jbe
test
arpl
sbb
sar
lret
sahf
rorb
sub
adc
cwtl
fistpl
push
daa
and
mov
fsubrl
pop
cltd
mov
aaa
lea
inc
mov
cli
and
pop
ljmp
mov
imul
push
out
inc
mov
push
push
popf
sub
outsl
imul
xchg
rcrl
add
inc
or
loop
fildll
xchg
dec
hlt
pop
scas
cmp
adc
and
add
sbb
in
add
js
xor
int3
dec
or
inc
mov
dec
cli
sub
adc
jnp
loope
inc
xchg
and
in
mov
fbld
insl
push
adc
fisubrs
xchg
sub
and
adc
jno
pop
xor
or
pop
push
inc
pop
icebp
cmp
mov
shrb
add
into
xchg
xor
pop
jg
pusha
or
mov
push
xchg
push
jbe
cmp
lret
mov
fptan
xor
push
mov
gs
xchg
adc
push
pop
mov
cltd
outsb
dec
stc
arpl
lods
repz
aaa
test
inc
mov
shlb
cmp
in
xchg
adc
mov
sub
hlt
sub
mov
push
dec
dec
pop
fldl
pop
insb
repnz
in
jne
cmp
jb
aas
into
mov
xor
loop
xor
or
push
xchg
push
xor
insl
push
inc
and
insb
fnstsw
sbb
sub
inc
arpl
inc
and
pop
std
push
jno
sub
mov
dec
add
or
out
xchg
pusha
fsubs
sbbl
cmpsl
jl
xor
fstl
push
or
ss
dec
fcmovb
out
into
adc
mov
mov
and
jnp
imul
xor
mov
mov
cmp
jmp
cld
jb
or
lcall
lahf
or
in
aam
jbe
jge
jp
mov
mov
jp
pop
leave
loop
lret
or
pop
imul
ljmp
ret
inc
and
inc
fmuls
sub
adc
fistps
and
mov
jmp
dec
stos
add
repnz
adcb
dec
mov
cmp
jnp
fldcw
ja
fldenv
aaa
test
adc
or
dec
mov
xor
mov
sub
aam
mov
xchg
jns
jmp
jns
push
dec
bound
imull
jge
sbb
sahf
xchg
add
jg
lret
pop
adc
mov
adc
test
lea
cmp
sbb
adc
rorb
mov
dec
outsl
jl
inc
fildl
sbb
outsb
les
jmp
pop
sti
adc
pop
ret
pop
sbbl
aad
stos
fistps
popl
adc
mov
pop
jo
and
mov
add
dec
jmp
not
imul
test
push
mov
mov
fbld
adc
sbb
push
aad
cmp
out
lods
adc
fwait
pop
push
mov
ret
ljmp
fldcw
addb
push
mov
fildll
das
ljmp
push
xor
adc
jns
xchg
fdivl
xchg
xchg
sbbb
sbb
cmpsl
loopne
mov
daa
jne
push
push
repz
jne
ret
mov
daa
dec
scas
fdivrs
and
pop
rcrl
push
mov
mov
les
mov
sti
mov
stos
mov
icebp
push
mov
fimuls
clc
icebp
std
push
aaa
dec
imul
mov
lahf
iret
sub
xor
imul
sbb
dec
adc
adc
std
ret
test
stos
push
pop
mov
mov
pushf
mov
jmp
lcall
xchg
fsubs
jbe
jl
sbb
ret
lock
adc
mov
and
add
mov
scas
subl
dec
mov
es
cs
adc
arpl
movsl
fs
stos
sahf
add
rolb
cmp
and
jl
jmp
int
stos
pop
imul
lahf
test
inc
add
rorl
pop
jo
movsb
fcoml
aaa
jp
mov
jge
xor
daa
jb
js
test
pop
xchg
test
push
dec
out
js
dec
int
xor
rcr
lods
jge
mov
push
fsubrp
push
nop
pop
rolb
and
fwait
pop
rcrb
fs
ret
insb
pop
inc
imul
and
lahf
cmpl
int3
in
mov
lret
int
adcb
mov
mov
dec
loopne
xor
sahf
out
sbb
mov
rcrl
jb
push
dec
dec
mov
pop
add
add
pop
dec
cmp
push
mov
scas
sarl
loope
mov
mov
jmp
lret
mov
mov
jmp
mov
pop
ljmp
enter
inc
lods
push
ret
popa
aad
inc
ret
fwait
bound
sbb
scas
jne
imul
das
ss
push
mov
push
ss
inc
leave
xor
mov
hlt
push
cmpsb
ljmp
dec
sti
jb
jns
dec
movsl
repnz
mov
sub
push
sbb
push
adc
add
inc
aam
adc
mov
mov
lock
int3
sbb
add
or
outsl
movsb
jae
push
shrl
pushf
testl
pop
or
ret
jecxz
loope
push
rolb
out
jg
lahf
push
ljmp
push
into
sti
arpl
mov
mov
mul
xor
adc
cmp
mov
and
add
aad
movsb
sti
aad
loop
and
adc
pop
sti
xchg
and
mov
push
jle
cmpsl
test
mov
test
sti
pop
fwait
sub
ds
xor
lret
test
push
scas
inc
xchg
das
xor
mov
sub
fiaddl
or
jnp
enter
fbstp
xor
aas
jne
lahf
mov
popa
shl
xchg
sub
jmp
push
mov
out
imul
xor
call
and
andl
cltd
into
cmp
add
iret
xor
lds
repz
aas
adc
fcmovb
and
imul
fisubrs
push
jno
mov
mov
ficoms
jl
pop
xor
adc
dec
loope
imul
stos
mov
xchg
in
add
push
pop
inc
inc
inc
jae
pop
jnp
sub
out
cld
bound
mov
xlat
out
or
cmp
or
in
daa
icebp
sbb
and
add
mov
movsl
add
fiaddl
xchg
or
addr16
repz
dec
mov
repnz
xchg
inc
test
je
or
mov
aas
incb
mov
or
inc
mov
jecxz
scas
stc
mov
fmul
ss
sarb
pop
jp
xchg
jge
mov
ds
pop
mov
test
pop
lock
lock
mov
arpl
dec
into
sub
repz
cmp
mov
xchg
sub
inc
jmp
cmp
push
lcall
addl
loope
scas
xchg
out
mov
xchg
and
jmp
inc
sbb
cmpsl
aam
xor
fsubs
insl
sarb
sarb
movb
divl
fistps
in
hlt
std
loop
aad
pop
faddp
outsb
fdivrp
xor
fdivrl
insl
sub
xchg
aas
jns
mov
insl
and
test
cs
sbb
cmp
xchg
aam
and
sbb
test
int3
sar
add
sub
lods
sbb
mov
ja
arpl
fadd
jg
mov
loope
jmp
sbb
sti
sub
jae
xor
and
cmc
jl
ja
pop
movsl
inc
or
js
ljmp
movsl
iret
mov
pop
pop
mov
or
sbb
stos
and
dec
pop
lods
or
je
das
pusha
cld
inc
testl
mov
adc
lods
pushf
push
cmp
scas
jo
jmp
rorb
pop
repz
pop
sbb
stos
sbb
test
fucomi
movsb
or
inc
nop
test
mov
addr16
pop
fisubl
cmc
js
out
or
imul
lcall
jne
pop
je
lea
adc
add
cmp
mov
sub
mov
push
enter
push
or
mov
add
movsl
ss
or
jp
bound
jo
jo
pop
dec
ss
repz
sbb
or
pop
mov
mov
adc
dec
push
in
psubb
mov
hlt
repnz
mov
rcr
call
insb
scas
xchg
imul
xchg
and
mov
jbe
inc
inc
arpl
cmp
mov
cmc
push
mov
lds
mov
in
mov
arpl
and
xchg
adcb
mov
pop
push
or
repz
shr
pop
or
sub
insl
cltd
pusha
jno
xchg
adc
lods
mov
sbb
fs
ss
push
or
adc
mov
and
mov
ficoml
cwtl
std
inc
insb
sub
pusha
ljmp
lds
jno
lods
mov
jecxz
repz
xchg
addr16
je
pop
cwtl
cwtl
push
sbbb
jo
test
adc
mov
loope
jno
test
pop
cld
add
mov
jmp
mov
push
inc
dec
out
or
xor
jne
mov
and
sub
sub
sub
dec
andb
pop
pop
add
lret
inc
mov
xor
mov
cmp
mov
or
dec
jmp
imul
mov
mov
mov
mov
mov
test
cmpsb
or
cs
movsl
ja
or
cmc
pop
jb
xor
imul
out
dec
cmpl
scas
push
ljmp
xor
clc
aaa
insb
aad
lret
ds
xor
cmp
iret
imulb
jb
push
out
icebp
push
aaa
jo
mov
shr
das
mov
xor
imul
das
popa
mov
xor
adc
lock
sbb
imul
dec
pop
inc
jno
mov
sti
inc
stos
int
or
mov
or
ja
lcall
xor
in
lcall
inc
fisubrl
lret
inc
movb
outsb
inc
xor
stos
imull
mov
ja
or
xchg
cli
sbb
xor
out
push
fdivrs
push
outsb
push
scas
push
cwtl
jae
adc
pop
jne
ret
and
test
mov
and
sbbl
inc
insb
mov
enter
cmpsb
and
out
jae
sahf
adc
cmp
aad
inc
aas
scas
fiadds
clc
dec
add
repnz
enter
dec
in
pop
push
jo
adcl
mov
daa
es
inc
add
adc
xchg
sub
dec
jo
and
adc
sbb
and
add
mov
and
loop
jbe
ja
jbe
and
lds
stos
sti
notl
lahf
leave
xchg
pop
mov
repnz
shrl
bound
lret
inc
mov
ds
ret
inc
cwtl
inc
lea
test
cmp
add
add
or
sbbl
daa
test
jns
xchg
fs
ret
push
mov
xor
add
daa
adc
imul
fsts
xchg
adc
and
add
jmp
inc
push
scas
aas
rorb
ror
cs
or
cli
jno
rep
jno
add
and
mov
call
or
cmp
stos
push
add
mov
add
adc
and
mov
adc
out
mov
pop
out
mov
xor
out
sbb
push
test
inc
hlt
sub
lods
xchg
sbb
leave
andl
add
js
cmp
pop
lock
sbb
mov
dec
aad
mov
fidivrl
jne
cmpsl
mov
sbb
fadds
js
mov
inc
movb
mov
loopne
dec
push
push
imul
sti
xchg
inc
adc
jecxz
add
test
push
pusha
push
sub
out
mov
jecxz
cmpsl
lcall
movsb
jb
sub
cwtl
lret
imul
inc
inc
imul
clc
hlt
stos
fildl
sbb
pop
clc
cltd
jae
outsl
jecxz
add
sbb
and
xchg
pop
dec
test
xor
loopne
cwtl
outsb
nop
scas
leave
movsl
xor
loop
imul
movsl
add
pop
push
orb
xchg
inc
outsl
loope
test
sbb
fdiv
cmp
fildll
jmp
push
cmpb
cwtl
out
mov
pop
cwtl
fldt
xchg
push
addl
mov
cs
out
hlt
push
test
pop
jmp
ss
mov
sub
scas
mov
xor
call
mov
enter
insl
push
push
cltd
xor
ja
std
push
stos
adc
cmp
sub
in
pop
lds
sbb
push
xchg
cmpsb
outsl
mov
jnp
out
mov
add
loope
xor
inc
cltd
int3
shl
mov
pushf
call
pop
push
out
cmp
insb
jle
inc
pop
push
mov
outsb
insb
push
add
mov
std
pop
add
adc
insl
pop
cmp
xchg
sub
lea
mov
pop
pop
in
mov
sub
jno
push
mov
mov
xor
add
insl
movsb
fimuls
mov
mov
push
loopne
pop
test
mov
fsts
inc
fwait
pop
mov
sub
push
imul
imul
roll
sti
pop
dec
gs
xchg
repnz
sahf
mov
cmpsb
lret
lea
roll
add
test
dec
jbe
mov
scas
push
cwtl
out
cli
mov
mov
cmpl
hlt
jle
bound
cwtl
mov
jmp
lret
fistpl
pop
and
dec
in
jns
insb
xchg
dec
ss
pop
add
repz
xchg
mov
enter
insb
out
icebp
movsb
pushf
lock
pop
cld
fmuls
mov
mov
cmp
push
ss
imul
jns
sbb
lods
pop
out
addr16
std
sub
arpl
and
jge
divb
xchg
dec
push
jo
andb
xchg
push
mov
lock
sub
in
pop
push
mov
or
movsb
or
loope
push
les
mov
aad
cmc
icebp
dec
jmp
push
jmp
hlt
mov
xor
mov
ret
sub
flds
push
sub
sbb
add
push
filds
sahf
xchg
and
cmc
or
fwait
dec
jne
fdivs
mov
mov
test
mov
dec
in
mov
push
push
sbb
pushf
and
push
int3
repz
insl
stos
sub
pushf
pop
mov
push
pop
mov
mov
gs
pop
mov
push
adc
sbb
fwait
xor
addr16
adc
sarb
xor
and
les
idiv
adc
xor
push
and
sbb
adc
and
mov
ss
jno
push
test
addr16
rorb
jno
xchg
in
push
or
mov
pushf
mov
jmp
mov
test
add
insl
pusha
xor
cmp
cmc
ret
push
jo
adc
stc
xchg
xchg
mov
pop
cmpsl
cmp
popa
scas
xor
mov
push
loop
or
imul
out
and
or
ss
xchg
xlat
leave
pop
dec
jnp
mov
mov
sbb
imul
std
xchg
divl
sub
adc
and
movsl
jnp
pop
inc
push
pop
cmp
lods
loop
push
paddd
push
jns
bound
lea
inc
je
dec
and
sbb
insl
js
mov
sub
lret
pusha
data16
push
insl
out
xchg
repnz
inc
mov
arpl
sub
gs
ds
adc
loope
or
ret
sub
cwtl
scas
adcl
dec
mov
lcall
mov
adc
out
xchg
test
and
mov
pop
push
nop
adc
jmp
jbe
imulb
mov
pop
cmp
fistpl
sbb
cmpsl
call
push
mov
sub
mov
push
scas
dec
fsub
inc
pushl
aaa
je
out
out
aam
lds
inc
and
cmp
or
out
rclb
std
jmp
addb
dec
or
lahf
sub
pop
push
sub
cmp
stos
mov
pop
inc
call
push
lds
push
call
test
add
cmp
and
jp
sti
hlt
lahf
orb
jbe
xchg
or
push
mov
cli
mov
icebp
sahf
sbb
gs
fimull
inc
xchg
push
lods
movl
cmp
pop
ret
push
in
popa
into
orl
test
mov
mov
push
fwait
inc
dec
imul
cmpsb
sbb
add
fs
pop
add
loope
pop
aad
outsl
repz
shr
push
fwait
pop
leave
mov
add
mov
mov
dec
adc
dec
adc
add
pop
jecxz
repz
int
hlt
xchg
or
loop
push
daa
mov
ret
stos
push
aam
inc
cmp
enter
cwtl
orb
sub
pmulhuw
mov
inc
push
push
push
arpl
sahf
adc
pop
mov
sbb
push
dec
mov
adc
arpl
loope
cwtl
jae
es
jmp
mov
out
lret
push
sbb
lock
jp
or
mov
fnstsw
sub
xchg
out
inc
adc
pop
mov
lock
pusha
mov
adc
add
dec
adcl
out
mov
adc
mov
in
mov
jae
xor
enter
cld
outsl
aas
or
jno
sub
jae
addr16
dec
or
ret
into
xchg
fdivr
fisttps
sub
mov
push
test
in
fstps
inc
dec
sti
pop
push
dec
rorb
jg
pop
jae
test
fdivrs
in
call
cmp
and
inc
icebp
cmp
mov
inc
push
mov
adc
clc
insb
insb
jmp
cs
jae
pop
lods
jns
testb
mov
mov
lret
fidivs
adc
cmpsb
jb
sub
add
sbb
sbbb
or
jb
and
fnstcw
pusha
mov
mov
and
push
in
test
popl
ss
adc
dec
imul
ret
cmpsb
jb
dec
pop
outsl
sahf
jne
cmp
or
sbb
jecxz
mov
jo
cmpsl
mov
push
loop
ret
int3
jo
xlat
rolb
push
out
sar
loope
fstpl
in
sub
push
dec
inc
test
xor
add
inc
popf
sub
popf
sti
popa
or
nopl
lret
mov
push
out
iret
xchg
inc
pop
sbb
clc
sub
movb
add
pop
or
xchg
lds
or
push
imull
hlt
ljmp
xor
inc
loop
jmp
jno
dec
push
mov
jbe
sbb
mov
in
xor
lods
mov
inc
fcmovbe
divl
sbb
or
push
mov
outsb
lretw
jno
out
scas
mov
and
mov
rolb
push
jle
mov
pop
std
scas
cmp
mov
ja
add
repz
fcoml
lret
test
aas
pusha
jl
outsl
int3
call
fidivs
clc
rcl
pop
loope
push
and
leave
push
mov
xor
xchg
push
xchg
mov
jnp,pn
dec
mov
leave
stc
pusha
in
imul
shr
mov
pop
add
pop
arpl
fistl
cwtl
sbb
sbb
lcall
cmc
sbb
jg
pushf
std
push
sub
xorb
sbb
xchg
movsl
shlb
ret
sbb
lret
rorb
loop
xchg
jb
nop
cmpsb
mov
ret
flds
sbb
jl
dec
ss
inc
rorl
inc
xchg
pop
mov
outsb
cmp
addr16
negb
xchg
arpl
mov
xor
cmp
inc
cld
mov
xlat
movsl
fld
and
in
imul
scas
push
push
jg
data16
cld
notl
sub
dec
inc
mov
adc
int3
jne
je
jle
test
jmp
mov
xchg
dec
sbb
repz
call
in
pop
icebp
imul
jb
add
fwait
inc
sub
ja
jle
push
icebp
xchg
rcll
push
fcomps
loope
jg
adcl
mov
mov
adcb
mov
stos
cmp
popf
mov
xor
push
add
sub
xchg
iret
xchg
mov
notb
pop
dec
test
mov
scas
mov
push
fs
xorb
cmp
fldenv
inc
dec
or
nop
jl
xlat
mov
jg
pop
popa
inc
mov
imul
int3
sbb
ss
push
in
adc
sbb
jbe
outsl
cli
leave
out
out
pop
inc
pop
data16
adc
and
cmc
mov
push
sbb
push
outsl
dec
and
iret
clc
mov
mov
js
xchg
mov
mov
jg
sbb
cld
pop
mov
lahf
xor
mov
cld
lcall
push
cmpsl
adc
sti
push
das
rolb
push
test
sarb
dec
rorb
mov
sub
cltd
test
fs
stc
outsl
lret
cmp
and
aaa
lea
jecxz
outsb
stos
ficoml
or
push
es
loopne
xor
jnp
pop
xchg
or
outsb
add
pop
out
ret
jb
pop
mov
and
jb
adc
jecxz
add
jl
imul
ror
sahf
movnti
mov
cli
fstl
outsl
push
jns
pushf
adc
movsb
mov
loopne,pn
and
sbb
lods
in
push
outsl
mov
jg
out
or
mov
shll
sbbl
dec
lock
arpl
popa
push
leave
xor
push
js
lea
mov
sbb
and
addr16
mov
mov
cmp
test
mov
jmp
sub
and
jp
mov
xchg
mov
stc
jae
in
les
movsb
push
iret
sahf
or
mov
shlb
mov
aad
fldt
stos
inc
push
mov
dec
addr16
xor
sti
mov
jne
push
xor
jo
imull
jnp
ret
in
popa
daa
imul
data16
push
repz
mov
fdiv
inc
xchg
imul
push
incb
jb
jg
out
sbb
movsb
mov
sbb
xchg
jns
sti
jge
add
subb
pop
pusha
mov
push
sarl
lcall
add
ret
clc
rcrb
sbb
cmp
mov
jns
mov
cltd
xchg
or
movsl
test
ret
xorb
mov
popa
or
add
ljmp
jge
stos
les
fdivs
lods
lahf
enter
or
jecxz
gs
mov
out
dec
mov
arpl
ret
mov
pop
mov
pop
push
sahf
xchg
add
js
pop
cmpsb
mov
jg
pop
aas
leave
inc
pop
xor
mov
mov
pop
cmpl
or
stos
ja
xchg
sub
mov
aad
inc
mov
jns
mov
call
mov
cmp
dec
push
mov
jecxz
cmp
dec
insb
mov
xchg
sbb
repz
jb
adc
jl
test
cmpsl
ret
loope
mov
pop
xchg
int
adc
lahf
fucomp
lock
aad
mov
in
cmpsb
nop
jmp
stos
imul
fsubrs
out
mov
lcall
dec
mov
out
mov
loope
out
scas
inc
out
iret
pop
cmpsb
sbb
cltd
xor
sti
mov
cmpsl
adc
loop
scas
pop
ds
jno
pop
cld
xor
push
movsb
into
mov
mov
cwtl
jo
jbe
inc
mov
cmc
outsb
test
fcomi
cs
insl
inc
dec
cmp
push
push
addr16
rcll
adc
cmp
and
cli
sbb
xchg
and
pop
hlt
jns
ljmp
dec
pop
lea
inc
cmpsb
daa
jae
aam
fwait
cmc
pop
std
push
loop
mov
cmp
sub
das
cmp
jno
or
sti
pushf
mov
aad
repnz
sahf
mov
pop
inc
or
jg
and
pushf
dec
jl
adc
cld
movsb
mov
shrb
fs
jmp
add
cltd
lahf
push
xchg
stos
dec
test
push
stos
mov
gs
push
cld
fidivrs
test
pop
outsb
pop
sbb
rcr
int3
popa
les
fwait
or
cmp
in
aaa
mov
cltd
insl
sbb
jno
push
add
sub
add
outsl
enter
pop
dec
mov
and
mov
mov
in
enter
imul
xchg
sahf
pop
cli
ja
adc
fwait
push
out
mov
mov
fsubp
loope
push
xlat
ja
dec
jb
stos
dec
hlt
and
aas
in
es
mov
xor
scas
push
test
aad
sub
imul
daa
xchg
mov
xchg
je
inc
inc
aas
add
adc
push
fs
cmc
push
or
mov
ljmp
mov
stos
cmp
cmp
xchg
adc
sub
outsb
lret
outsb
call
pusha
outsl
push
adc
insl
mov
add
and
or
jecxz
imul
add
inc
adc
sbb
dec
lock
dec
jno
rolb
cmc
scas
fwait
or
push
frstor
popf
pop
pop
out
mov
rorb
dec
test
or
insl
es
mov
daa
mov
js
mov
add
sub
xchg
scas
shll
sbb
sub
mov
imul
fsubl
hlt
cmp
loopne
je
dec
xchg
scas
sbb
or
rcrb
pop
jp
cmp
and
leave
pop
jb
mov
pop
test
jno
push
mov
dec
pusha
popf
pop
fsubr
pop
and
ja
icebp
ljmp
mov
lahf
jb
imul
je
imul
sub
les
push
cmc
insl
scas
cmc
sbb
jecxz
mov
imul
ja
bnd
stos
loopne
insl
jecxz
xchg
inc
dec
lret
ficompl
inc
dec
mov
jmp
mov
inc
fists
rol
sbb
fldcw
rol
push
and
stos
loop
add
adc
dec
mov
jbe
xchg
test
gs
loopne
push
in
mov
mov
addr16
ss
les
add
call
fimull
test
xor
adc
and
jns
sub
xorl
xor
mov
inc
mov
pop
clc
jb
lret
xor
adc
roll
test
adc
mov
dec
mov
in
dec
ds
jecxz
clc
cmp
xchg
push
pop
inc
jb
xlat
pop
lods
and
outsl
lret
loope
scas
es
scas
mov
or
inc
sbb
sub
shl
fs
adc
pop
push
mov
clc
xor
rclb
mov
outsl
sub
out
dec
clc
enter
fcomps
repz
aad
push
pop
cmc
js
insb
push
fdivs
and
lods
adc
mov
mov
hlt
push
sbb
insb
aaa
scas
jns
cmp
or
jl
or
sbb
xchg
mov
adc
cmp
xor
inc
fiaddl
push
or
xchg
into
shll
ret
cld
cld
cld
mov
pop
ficomps
pop
movsl
inc
mov
nop
add
imul
sbb
outsl
scas
or
lds
ja
outsb
sub
loopne
mov
call
sub
lods
popa
push
inc
mov
lcall
mov
pop
loop
dec
std
cmp
push
gs
scas
andl
dec
mov
int
pop
stos
inc
shlb
add
push
aas
or
lea
mov
loope
push
pop
push
push
jmp
out
sub
cmp
mov
fwait
pop
adc
xor
xor
int
inc
inc
mov
and
jmp
test
push
fwait
jne
mov
idivb
pop
cmp
ss
push
pop
push
cmp
jmp
dec
nop
xor
add
cmp
outsb
cwtl
inc
stos
lock
je,pt
adc
push
jb
ror
mov
js
ss
mov
xor
stos
or
shlb
gs
jb
mov
cmp
or
inc
inc
addr16
and
ss
mov
cmp
xchg
jnp
repz
jbe
mov
imul
cmp
hlt
xlat
dec
in
mov
jl
ret
in
or
fucomip
imul
jl
cmp
sub
in
push
cmp
addr16
das
pop
and
and
rcrl
call
fildll
loopne
lods
lds
std
sbb
movsb
repz
call
das
pop
xchg
and
adc
dec
sahf
and
sub
add
rorb
jecxz
flds
fsubrl
jp
mov
add
lock
and
scas
add
pop
jae
int
iret
sub
adc
mov
mov
rcrb
fldt
dec
decb
mov
rorb
lock
sahf
jecxz
xchg
cmpl
xor
loope
rorb
and
pop
movsl
push
jge
push
pop
inc
insb
ret
push
arpl
push
adc
sub
outsb
cmp
cmp
iret
lret
aam
xchg
outsb
xor
es
pop
inc
xor
xor
push
jle
pop
mov
or
mov
or
and
call
cmc
sub
aas
cmc
cs
pop
xor
shlb
push
inc
adc
sub
push
gs
and
into
mov
popa
inc
mov
ds
jbe
aam
sarl
xchg
mov
xor
lods
ret
push
xchg
mov
popa
pop
das
fidivl
ret
into
push
jb
mov
call
inc
lods
push
push
insl
sbb
dec
push
cltd
insb
push
stc
hlt
in
inc
ss
shl
imul
xchg
ror
loop
sub
mov
insb
aas
das
dec
mov
test
dec
mov
cmp
aam
add
sbb
mov
dec
mov
xor
cmp
fisttps
jg
dec
in
push
mov
pusha
inc
jne
push
inc
sub
jl
mov
into
push
cmp
fstl
rolb
aas
dec
jp
mov
pop
jmp
cli
pusha
aad
add
les
add
sbb
mov
bound
fdiv
sub
sub
pop
mov
jmp
inc
cwtl
mov
test
cmpsl
in
adc
cld
mov
rorl
or
mov
pusha
xchg
scas
pushf
inc
or
repnz
inc
mov
leave
xchg
jne
push
inc
fwait
xchg
jle
xchg
mov
orl
movsb
push
loop
inc
das
jo
popf
inc
popa
mov
mov
inc
add
mov
pushf
cmp
icebp
imull
adc
test
jae
cmp
pop
add
clc
xchg
popa
push
push
popa
add
lock
sbb
xchg
pop
sub
rcl
mov
mov
pop
in
ret
lret
xor
push
insb
or
push
or
inc
sbb
inc
inc
push
pop
popa
dec
xchg
sbb
mov
xchg
mov
jl
jl
stos
imul
aaa
out
lods
popf
sub
lock
arpl
or
or
and
jmp
mov
dec
jno
pop
dec
cmp
inc
fiadds
mov
sub
mov
dec
and
cmp
adc
loop
cmp
popf
aam
mov
mov
adc
imul
mov
lods
lods
or
inc
pop
or
and
aas
rcrb
enter
enter
movsl
adc
stos
sub
icebp
jge
repz
push
and
je
adc
jb
cmp
insb
jmp
scas
rclb
push
cmpsl
ds
cmp
rcll
inc
insb
fsubrs
xchg
cld
cmpsl
inc
or
add
push
enter
rcll
insb
stos
movsl
dec
in
inc
cltd
fsubrl
loop
or
adc
push
pop
mov
jns
into
iret
add
out
xorb
jge
pop
int
xor
mov
imul
and
xchg
mov
ljmp
cmpsl
add
test
mov
out
mov
rclb
repz
pop
fwait
out
popf
or
jmp
mov
fdivl
bound
xor
fistpll
daa
mov
sub
jne
out
cmp
mov
orps
mov
fistpll
iret
xor
pop
cwtl
pusha
push
arpl
and
mov
je
mov
aam
imul
ljmp
into
movsb
les
out
movsb
lea
sbb
adc
adc
cmp
inc
jbe
inc
inc
pop
mov
inc
mov
pop
xchg
es
and
scas
gs
scas
sbb
lds
ljmp
add
xor
mov
jnp
jno
mov
int3
shlb
adc
insl
sbb
test
fstpt
cld
js
rcll
orb
sub
shll
fistpl
pop
daa
pop
mov
sub
sub
push
sub
and
repz
out
mov
repz
sbb
sbb
push
jecxz
jo
sub
dec
rcr
inc
jge
xor
test
push
or
bound
mov
push
mov
add
pop
cmc
lock
ja
jne
les
inc
aad
jns
js
add
and
xchg
movsl
lret
and
cmc
clc
pusha
sbb
or
pop
ljmp
jns
inc
por
xchg
xor
xchg
lret
stos
pop
nop
push
int3
cmp
inc
push
push
pop
and
add
rorl
mov
insb
out
mov
push
inc
icebp
aad
sbb
cmpsl
repz
push
mov
arpl
lret
into
jle
ds
fmuls
rep
or
js
daa
inc
cli
dec
repnz
das
or
mov
test
mov
or
ret
pop
or
adc
inc
ret
ds
cmpl
inc
inc
rcl
inc
imul
movsl
icebp
test
xchg
add
sbb
insl
jge
cmpsl
adc
cmp
fwait
mov
nop
cmp
test
lahf
xor
movsb
jecxz
fldenv
std
sbb
cwtl
add
xchg
lret
xchg
out
pop
repz
psubsw
fists
das
movsl
aas
or
addr16
xchg
inc
repz
gs
cmc
cmp
iret
push
call
stc
out
mov
cmp
mull
xchg
sub
xchg
dec
and
mov
push
and
fs
testl
std
pop
push
push
stc
sbb
movsl
cli
or
mov
icebp
out
in
mov
leave
jns
sub
xor
sbb
mov
pop
sub
xorb
inc
sub
mov
out
jle
fldenv
sub
int
jae
jb,pn
fisttps
jo
jp
xor
lods
leave
scas
into
int
stos
mov
mov
push
and
cmp
xchg
pop
sub
ljmp
jle
and
jo
fisubs
in
sub
push
in
lcall
mov
pusha
add
xchg
xchg
jmp
bound
mov
dec
rcll
xorb
lock
lret
mov
inc
or
inc
add
pop
pop
fildl
dec
sbb
sbb
sub
mov
jb
insb
push
mov
xchg
pusha
js
outsb
add
jl
xor
stc
cmpsl
fstps
jmp
push
add
adc
outsb
xchg
iret
stos
dec
pop
fbstp
adc
inc
cwtl
stos
pop
pop
cwtl
jg
sub
sub
push
pop
pop
data16
scas
dec
xlat
mov
notl
movsb
dec
pop
jp
pop
adc
insl
gs
cmpsb
cli
sub
sbb
xchg
mov
push
cmp
cmc
inc
inc
adc
xor
nop
cmp
xlat
cli
stc
or
out
pop
push
mov
aam
lds
jle
popa
sbb
aaa
in
sbb
push
sbb
push
test
clc
jge
adc
dec
add
loop
jns
int
mov
popa
jg
inc
dec
mov
dec
sbb
int3
cmpsl
enter
mov
ljmp
out
and
sti
jg
stc
sub
data16
pop
xchg
mov
dec
push
inc
lods
cld
punpckhwd
xchg
xor
adc
xlat
clc
adc
int3
mov
mov
outsb
push
add
cmp
dec
popa
mov
sti
xor
jge
xchg
inc
into
xchg
ljmp
and
mov
xor
fwait
imul
sti
ret
imul
fnsave
sub
loop
clc
fdivr
mov
sub
imul
lahf
negl
lcall
sub
pop
addr16
mov
sub
arpl
je
mov
std
jl
repz
fadds
pop
add
and
iret
jbe
mov
sbb
sahf
lcall
inc
dec
repnz
test
mov
mov
cmp
pusha
pop
in
fwait
xchg
scas
mov
dec
adc
vpcmpgtw
cwtl
outsb
add
pusha
push
mov
push
loopne
aas
scas
cld
jb
sub
push
pop
mov
push
push
fists
push
jle
or
inc
push
aas
mov
test
cltd
cmp
xchg
addr16
lods
sbb
jge
loope
icebp
je
or
inc
dec
add
dec
sahf
push
fs
es
out
cltd
test
pop
inc
fmulp
mov
jns
scas
push
xchg
fwait
jp
divl
dec
mov
mov
stos
out
add
dec
dec
rcrl
fldl
mov
lods
cmp
dec
scas
imul
push
sbb
push
mov
cmp
pop
and
aas
dec
lahf
scas
xor
mov
outsl
push
pop
mov
pop
sahf
imulb
xchg
xchg
loop
fildll
inc
pop
imul
jecxz
rclb
dec
adcl
inc
xlat
in
add
lret
xlat
ds
lods
das
repz
add
lea
push
add
and
inc
rorb
pusha
jb
test
cmp
fistpl
mov
mov
notb
inc
inc
call
pop
xor
and
pushl
mov
push
shrb
iret
ja
pop
leave
addr16
jns
fsubs
jp
jl
adc
insb
gs
mov
ret
or
fldt
jae
aad
leave
mov
imul
dec
push
fnop
ja
jg
adc
jae
aad
dec
ret
or
dec
repz
pop
loop
iret
and
mov
adc
es
adcb
xchg
inc
and
daa
or
jb
lcall
pushf
adc
sub
inc
jae
xor
vpsadbw
adc
lahf
leave
shl
repnz
cwtl
je
push
aas
cltd
jge
lds
dec
outsb
push
ljmp
popa
dec
mov
or
pop
adc
addr16
js
or
ror
pop
or
and
xor
fistps
lods
xlat
in
insl
pop
fdivl
ja
xchg
rcrl
in
neg
popf
or
push
out
jbe
shl
cli
mov
lret
es
mov
fildll
xchg
test
inc
scas
mov
arpl
jnp
dec
sarl
mov
mov
jmp
sahf
lock
aaa
dec
xchg
adc
das
cli
lods
xor
mov
scas
les
ds
imul
lahf
dec
sub
or
inc
mov
and
jp
or
loopne
inc
add
sub
clc
dec
mov
add
pushf
imul
or
cmpb
adcl
and
test
out
push
stos
pop
inc
push
sub
adc
lcall
cmpsl
mov
add
push
and
pop
adcl
mov
xchg
push
jo
mov
aaa
stos
mov
sub
sti
mov
jge
mov
lahf
mov
shrl
inc
xor
jecxz
sbb
call
lock
add
lds
scas
cmp
dec
dec
mov
sub
daa
test
jle
add
shlb
cmp
outsl
fdivl
xchg
sbb
outsl
mov
sub
out
daa
outsl
mov
test
push
ficomps
data16
and
cmp
mov
mov
xor
sub
push
dec
adc
stos
xor
clc
push
push
jg
inc
jle
call
mov
or
repnz
dec
cmpl
mov
shl
add
inc
mov
push
inc
incb
mov
ds
and
cld
ficoml
pop
cld
inc
lock
and
sbb
xor
jae
scas
inc
jp
insl
dec
pop
fimull
pop
xor
mov
adc
shlb
aaa
mov
imul
or
movsb
sbbl
dec
pop
xor
sbb
lret
jg
dec
mov
jge
and
ljmp
neg
mov
push
in
imul
xchg
aad
mov
xchg
nop
pushf
jecxz
sbb
mov
cmpsb
dec
pop
sub
loopne,pt
add
xor
sbb
test
scas
cltd
orb
jae
push
repz
or
lahf
sub
stos
sbb
or
push
adc
and
mov
lods
push
insl
xchg
inc
jle
inc
fcomps
es
adc
push
xchg
jo
test
jbe
sub
xlat
inc
cli
in
loope
mov
ljmp
jne
fucomi
xor
cmpsb
adcb
xchg
shl
lcall
jns
dec
cmp
dec
mov
inc
mov
lds
insb
and
int
lea
test
jecxz
lock
sbbb
insl
stc
les
xchg
mov
les
sub
mov
icebp
xchg
push
pmaddwd
movl
iret
sub
push
pop
testb
xor
popf
adc
sti
bound
push
pop
adc
hlt
repnz
mov
sbb
scas
es
mov
pop
aam
jl
xchg
popf
sbb
int
pop
jg
pop
leave
gs
or
mov
and
aaa
gs
cmp
jnp
xor
pop
mov
insb
mov
mov
xlat
xchg
mov
ss
repz
pusha
fisubl
push
mov
lret
lahf
jp
lods
stos
inc
or
addr16
fs
dec
dec
jne
lds
enter
ret
xchg
test
iret
insl
imul
adc
mov
mov
adc
xor
lock
xor
out
in
mov
adc
xchg
movsl
inc
data16
xorl
pusha
mov
mov
std
jmp
mov
imul
popa
mov
xchg
push
inc
cs
dec
mov
icebp
cmp
icebp
jg
arpl
sarb
dec
push
cmpps
and
xor
mov
xor
mov
dec
or
pop
rorb
out
insl
adc
xchg
pop
jbe
inc
jne
sub
int3
les
push
aas
mov
icebp
pop
out
mov
cmp
das
sub
inc
xor
mov
add
xchg
leave
jmp
push
lods
push
iret
push
push
inc
xlat
in
ds
cmpsl
jmp
lcall
adc
fs
mov
jp
jl
push
dec
sub
into
and
loopne
adc
xchg
out
cmc
pop
testl
pop
ret
ret
fldl
jbe
lret
rol
adc
dec
push
fisttpll
fs
cli
lods
es
popa
cmc
popa
or
dec
sbb
jl
leave
adc
fxam
ja
cld
cmp
imul
or
outsl
outsb
sbb
xchg
jae
sbb
mov
push
loopne
cmp
add
pop
stos
push
mov
movsb
sub
fsubrs
jbe
jo
nop
and
cltd
xchg
xchg
mov
pop
xchg
iret
ja
out
sbb
sbb
mov
adc
mov
pop
xchg
leave
fwait
cmp
jmp
sbb
mov
leave
or
or
shll
inc
sbb
mov
inc
es
xor
cmp
arpl
push
pop
scas
mov
lods
decb
jb
push
xchg
call
cli
stos
aas
dec
movsl
subl
pop
in
adc
push
cltd
dec
nop
int
sahf
jg
sub
xchg
cmpsb
sbb
jbe
adc
mov
jg
mov
ss
mov
test
inc
gs
and
jbe
pop
loope
imul
mov
aam
mov
cmpsb
mov
outsb
pop
push
xor
imul
fdivrp
dec
scas
jae
pusha
test
mov
push
rcll
mov
scas
adc
addr16
cs
lahf
push
nop
mov
mov
pusha
cmp
sbb
cmpsl
push
subb
xchg
mov
push
in
hlt
push
mov
popf
pop
sarb
mov
iret
jb
aam
mov
fimuls
lds
dec
popf
jp
mov
push
mov
lahf
add
adcl
jle
test
lds
call
sbb
cli
or
push
mov
mov
repnz
and
cmp
add
cmpsb
inc
jecxz
sub
pop
jns
xor
scas
xlat
adcl
popa
and
jle
bound
mov
insb
mov
cld
fdivp
pop
jns
sbb
dec
mov
in
inc
arpl
aas
push
jl
addr16
int3
idivl
cmp
stos
xlat
sbb
or
shr
and
sbb
rolb
ljmp
mov
test
lds
push
dec
inc
sti
cmp
and
stc
or
jecxz
inc
adc
mov
xor
ret
mov
sbb
mov
cmp
jecxz
sarb
jns
cmp
mov
lcall
jb
dec
inc
addb
pop
iret
xor
mov
lret
call
dec
loop
ret
roll
jg
jno
dec
xor
xor
inc
int
test
outsb
mov
push
outsl
mov
lcall
ret
sbb
jmp
cltd
lcall
fs
pushl
clc
mov
xor
push
clc
dec
add
mov
lcall
cmp
inc
div
loope
les
sbb
xchg
lahf
push
or
jo
es
enter
xlat
pop
arpl
mov
ja
or
out
mov
inc
imul
and
call
cs
mov
mov
adcb
add
sbb
mov
and
inc
pop
mov
adc
push
cmp
movb
inc
cld
xor
sbb
fdivrs
in
and
stc
fbld
add
js
sti
fs
lods
aad
jno
or
ret
adcl
cmp
or
or
cmpsb
mov
and
sti
jle
xchg
pop
fstpt
inc
fsub
mov
push
jmp
lds
loopne
and
sbb
sub
xchg
arpl
pop
pusha
fs
test
pop
inc
mov
push
add
js
mov
jbe
jmp
and
call
pop
mov
adc
mov
cli
fisubs
pop
stos
ss
ss
mov
jle
out
mov
pop
cmp
sub
cld
std
mov
das
push
stc
repnz
das
and
mov
dec
pop
ja
leave
lods
jg
je
xchg
pushf
outsl
notl
sub
push
push
ds
incl
lds
test
cmc
pop
sub
dec
cld
push
aas
xchg
mov
les
xchg
push
or
bound
scas
filds
xchg
mov
jg
inc
aas
popl
mov
sub
pop
adc
xorl
xor
mov
cmp
mov
sub
les
mov
gs
xchg
fs
push
les
arpl
push
movsb
xchg
ja
aaa
push
stc
out
mov
daa
sarb
or
data16
mov
add
jle
test
jl
pop
orps
cld
pop
int
mov
imul
je
mov
mov
mov
cmp
inc
jno
ds
cs
mov
gs
push
insb
jl
add
mov
jo
cmp
inc
cld
pushf
xchg
in
ja
data16
out
addr16
xchg
pop
nop
je
pop
sbb
lods
notb
imul
sbb
out
call
or
js
fsubrl
lea
adc
pushf
push
pop
and
jl
mov
mov
xor
xchg
add
push
sbb
ljmp
push
in
inc
and
mov
pop
fistl
mov
add
mov
imul
fistpll
mov
fbstp
fisttpll
dec
push
mov
dec
orl
mov
mov
or
fdivrs
cmp
push
sub
xchg
lds
lcall
cld
in
int
xor
andb
push
sarl
dec
mov
mov
adc
je
pop
inc
insl
pop
sbb
inc
fisttpl
sbb
lret
jno
mov
nop
adc
mov
out
mov
out
or
fwait
sbb
leave
sub
xchg
loopne
mov
fwait
push
mov
mov
jl
inc
sub
ja
js
push
cmp
rcl
shrb
loop
mov
adcb
pusha
imul
mov
mov
sub
inc
aad
xorl
es
xor
out
jge
dec
xchg
in
dec
lea
mov
pop
push
data16
pop
xrelease
pop
mov
std
call
push
pop
arpl
addl
sbb
lcall
xor
stc
clc
mov
mov
push
xlat
adc
repz
jnp
adc
inc
pop
lret
or
cmovae
and
jne
movsl
pop
sti
sahf
cmp
outsb
jecxz
bound
mov
mov
sbb
roll
stos
loope
pop
ja
inc
les
push
test
lea
mov
pop
mov
in
lods
loopne
cmc
rolb
jecxz
mov
cmc
movsl
or
imul
inc
rcrl
jb
lds
mov
dec
je
aaa
jecxz
cmpsl
xchg
ss
jmp
fsts
incb
mov
ja
gs
fcmovbe
fiaddl
cmp
in
into
sub
cwtl
jbe
pop
cmpsl
mov
inc
mov
inc
sub
std
inc
sbb
xchg
jg
xchg
mov
js
dec
dec
jecxz
sbb
popa
xchg
push
dec
iret
icebp
sub
in
push
test
mov
stos
subb
stc
adc
mov
bound
xchg
sub
fsubl
cmp
jge
pusha
pop
loope
es
mov
in
enter
jl
nop
lds
jle
adc
push
aaa
jo
mov
cwtl
stos
xchg
mov
add
insb
mov
clc
movsl
xlat
sahf
andl
push
and
xchg
inc
mov
test
adc
rorb
lods
rolb
add
hlt
mov
out
scas
scas
test
adc
int
cmp
pop
sahf
jp
cwtl
cmc
pop
in
in
es
mov
inc
ja
test
cwtl
pop
lahf
fdivs
leave
and
cltd
into
movsb
cmc
fildll
push
aaa
ffree
mov
adc
xchg
les
nop
loope
fsubp
pop
mov
mov
inc
mov
add
or
lea
pop
jge
clc
mov
pushf
xchg
aas
clc
cmpsb
ljmp
mov
dec
dec
jbe
clts
adcl
cwtl
xchg
adc
jp
or
or
fcoml
out
xor
inc
jae
xchg
shl
sub
dec
or
xchg
sub
fdivrp
cmpsl
xor
xchg
jb
xchg
sbb
add
sub
movsl
lcall
adc
cmp
adc
mov
outsb
sbb
enter
xlat
mov
pop
test
daa
jl
and
jbe
inc
ds
repnz
jnp
test
xor
inc
dec
push
sub
fucom
lret
out
jb
adc
mov
fcmovnb
pop
in
mov
push
ss
cmpb
sbb
mov
mov
jnp
cmp
insb
aas
mov
movsl
push
mov
fs
insl
dec
jo
sahf
std
mov
sub
rcrl
call
in
adc
dec
dec
jg
lea
xor
cmp
pop
gs
push
pop
nop
sub
xor
imul
jmp
outsb
xchg
loop
mov
incl
dec
push
inc
xor
mov
lods
mov
int
cmpsb
jge
ficompl
stc
sub
out
adc
adc
push
jl
test
es
int
adc
pop
jp
bound
pop
rcpps
daa
xor
push
imul
mov
repz
xor
and
mov
and
rorb
in
add
pusha
mov
lods
mov
jp
fistpl
push
lods
jns
dec
pushf
dec
stc
arpl
int3
cmp
dec
ds
rcrb
repnz
jge
loop
mov
cmp
out
jmp
sbb
pushf
insb
sarl
shlb
or
adc
scas
push
sbb
cmp
ret
lcall
out
mov
ljmp
insb
scas
sub
push
jo
or
push
xchg
mov
and
lret
repnz
out
mov
pop
test
and
cli
mov
imul
mov
mov
adcb
sarb
pop
cmp
push
cmpsb
imul
ficoms
sub
shlb
in
jnp
into
mov
insl
adcl
adc
clc
scas
fwait
cmp
inc
arpl
mov
jmp
mov
adc
or
or
nop
mov
stos
pop
cmp
push
mov
sub
lcall
xor
and
push
in
out
out
push
mov
dec
stos
js
mov
lods
je
mov
das
sub
test
inc
adc
lock
inc
sti
inc
jl
cmp
push
jl
mov
pop
stos
mov
sub
mov
mov
movsl
adc
xchg
rorb
lods
rolb
cmp
scas
inc
pop
and
ret
add
inc
insb
or
mov
jmp
repz
rcrl
mov
mov
call
scas
adc
xchg
add
int
insl
xor
or
fdiv
inc
jl
push
lods
stc
pusha
ret
xchg
inc
push
ljmp
and
inc
pop
jecxz
insl
stos
mov
mov
push
ljmp
and
dec
dec
les
mov
xor
cmp
xor
push
or
fstps
rorl
ljmp
xchg
insl
shll
inc
dec
xchg
adc
mov
fnstenv
loopne
lods
cmpsl
sbb
nop
stc
pop
sub
loopne
push
pop
cmp
sbbb
fmull
inc
mov
pop
cwtl
mov
push
cmp
mov
jge
pop
inc
jo
insb
push
jle
hlt
outsb
xchg
in
movsb
jb
cltd
fsubr
cld
sub
arpl
dec
dec
mov
xor
push
or
fcoms
fistl
ds
lret
stc
mov
popf
jae
inc
xchg
xor
ss
ficomps
jno
sub
mov
push
addl
push
add
pop
and
inc
hlt
or
sub
pop
daa
das
jbe
dec
inc
nop
hlt
addl
cmovle
inc
xor
or
decl
insb
shrl
repnz
sti
int3
xchg
je
sbb
lock
lds
jmp
xor
notb
sub
pop
aad
cs
lahf
mov
rcl
leave
pop
imul
xchg
nop
aad
sbb
mov
in
mov
pop
cmp
cwtl
cmc
dec
orb
sub
fimull
hlt
ja
imul
gs
pusha
mov
push
add
fcmovu
pop
nop
adc
cmp
push
scas
sub
add
inc
jae
sub
lahf
scas
test
push
pop
mov
xchg
add
fadd
or
enter
aas
mov
xchg
mov
daa
addr16
push
or
ret
mov
inc
xchg
jle
pextrw
test
xchg
sub
pop
pusha
bound
in
xor
loop
ja
aad
loope
bound
iret
es
dec
mov
addr16
sub
test
data16
mov
shlb
inc
sbb
or
mov
aad
mov
mov
pop
pop
sub
jns
and
sub
fwait
std
mov
enter
popa
lret
subb
push
push
insb
imul
mov
inc
cli
xor
lock
push
jbe
push
dec
mov
fsubrs
mov
stc
inc
or
into
cmp
loop
push
push
mov
xor
push
xlat
daa
xchg
mov
scas
into
jp
and
or
icebp
loopne
xchg
sbb
xor
daa
rcl
pop
pop
int
xor
pop
or
mov
pop
push
pop
mov
popa
out
adc
popa
data16
scas
in
mov
dec
xchg
push
or
ljmp
inc
lahf
repnz
pop
mov
inc
sub
frstor
add
ret
mov
shrb
adc
jle
stc
cmpl
or
mov
lods
inc
and
pushf
in
inc
inc
aaa
pop
jge
xchg
sti
cmp
add
sub
mov
mov
xchg
shll
cli
and
pop
clc
xchg
sbb
mov
rorl
push
sub
fsts
cld
sbb
mov
dec
xchg
or
dec
sti
add
push
sub
icebp
mov
xor
cmp
jne
imul
sub
sbb
insl
xor
add
inc
cmp
jno
and
inc
cs
push
cmc
and
and
adc
mov
fistl
jnp
xor
sub
xchg
movsl
ds
inc
data16
xchg
sub
rcrl
movsb
ds
je
xchg
pop
call
mov
enter
add
hlt
xchg
cmp
jmp
in
ss
inc
mov
push
iret
aas
xchg
insl
mov
fnstcw
aad
sbb
idivl
test
dec
idivl
loope
cmpsb
pop
mov
mov
jmp
js
pop
popf
int
dec
loopne
mov
mov
and
int3
mov
sbb
and
push
adc
cmpsb
orl
fdiv
jp
jmp
cwtl
add
mov
out
or
push
adc
inc
aas
cld
mov
dec
insl
mov
inc
xlat
jne
jp
subl
push
mov
xor
popf
das
cld
loopne
imul
or
push
addr16
mov
lahf
pop
mov
dec
xor
cmp
or
sbb
imul
push
dec
or
xor
shlb
jb
mov
scas
call
mov
shrl
in
add
xor
xor
mov
jmp
adc
add
sbb
push
pop
enter
jns,pt
pop
xor
and
mov
mov
jns
jno
add
sbb
ret
dec
fstps
sti
add
cmpsl
mov
cld
fsubr
dec
sbb
mov
xchg
and
test
sbb
pop
lods
xchg
pop
jmp
ja
pop
cmpsl
cltd
movsb
in
loope
inc
mov
cli
xor
sbb
dec
data16
inc
shl
gs
mov
stos
adc
cmc
jecxz
pop
sub
test
mov
pop
fldl
cwtl
adc
fsts
je
mov
hlt
add
cltd
mov
jge
push
and
jl
pop
aas
leave
sbb
cmp
and
xor
or
mov
bound
rclb
loopne
xchg
loop
ja
gs
rorl
push
adc
data16
cmc
pop
lahf
out
sub
jl
lock
out
sbb
hlt
pop
lds
imul
cltd
jp
sub
jecxz
mov
or
inc
inc
jb
aaa
pop
gs
sbb
jecxz
pop
inc
inc
stc
movsl
xchg
dec
and
lahf
inc
cmp
out
mov
loopne
push
push
int3
push
fsub
mov
adc
or
es
das
stos
dec
int3
cmc
inc
mov
pop
cmpsb
stos
testl
mov
pop
aad
xchg
jecxz
xchg
mov
nop
iret
or
cmp
xchg
mov
inc
pop
pusha
sarl
and
and
lahf
cli
and
testb
iret
inc
test
sahf
fwait
in
push
inc
xor
mov
push
lret
mov
xchg
xchg
inc
sbb
mov
ljmp
sub
pusha
aaa
mov
push
add
mov
shrb
xor
ret
out
stos
std
int
outsb
xchg
pop
push
bound
mov
sbb
or
mov
repz
cmpsl
or
sbb
inc
cmpsl
adc
test
xchg
jae
ja
xchg
xchg
and
fwait
pop
dec
scas
push
test
cmpsl
pop
mov
dec
nop
push
stos
pop
add
mov
mov
int3
iret
adc
cmpsl
mov
push
mov
cmc
cld
std
std
in
cmpb
add
bt
inc
shl
int
stc
jno
mov
adc
fnsave
inc
mov
pop
int
stos
repnz
adc
data16
test
inc
push
push
jb
test
mov
cmp
and
xor
mov
jns
xchg
aam
out
jno
jmp
pop
cmp
jnp
cmp
and
out
push
xor
pop
mov
bound
dec
ret
sbb
jmp
jge
aaa
sub
mov
cs
or
add
lods
mov
mov
inc
mov
mov
sti
dec
pop
enter
pop
nop
daa
inc
jo
rclb
adcb
and
lahf
loop
inc
ss
mov
sbb
roll
pop
mov
shl
pop
add
cs
into
adc
jno
mov
jge
iret
sub
dec
mov
addr16
fbld
int
mov
cmc
out
push
aad
test
aad
pop
cmp
cmp
push
out
nop
add
inc
xchg
test
pop
filds
aaa
ret
dec
and
push
jmp
out
and
push
fcoms
leave
jecxz
sbbb
data16
andl
mov
and
xchg
roll
and
lahf
cmpsl
mov
mov
jne
mov
sub
jbe
or
jns
pop
in
xchg
pop
stos
ficoms
add
inc
sub
push
movsb
jecxz
addr16
aas
and
imul
cs
or
fwait
bound
sub
add
lods
notb
sub
xor
outsl
cmp
pop
sbb
push
inc
aad
lock
cld
ret
insl
mov
xor
lods
out
mov
mov
in
sub
inc
inc
jns
push
inc
insb
lret
mov
in
jg
jne
loopne
mov
push
test
cmp
xrelease
aaa
jge
pop
int
dec
mov
je
lods
dec
mov
or
cli
loopne
mov
leave
jns
insl
cmpsl
data16
lcallw
lods
jnp
inc
je
sbbb
ljmp
popf
mov
adc
loop
xor
lcall
jle
adc
subb
dec
xchg
mov
ds
and
aad
xor
js
or
aas
xchg
jbe
fisttpll
push
lock
sbb
hlt
mov
xor
cmp
jmp
fcmovu
xor
inc
xchg
loope
outsl
jmp
test
fcompl
pushf
mov
dec
fisubrl
push
push
pop
dec
pop
addr16
icebp
sti
mov
out
movsb
movsl
inc
add
xor
repz
out
inc
sub
sti
mov
dec
add
or
repz
jp
repnz
aam
adc
add
xchg
add
mov
cmp
test
sahf
mov
dec
mov
lahf
lret
push
push
sbb
fs
and
ss
pop
rorl
cmp
mov
shrb
inc
lds
test
and
dec
daa
push
sbb
jnp
xchg
pop
adc
jo
jb
out
sub
gs
out
loope
adc
jne
pop
add
js
push
pop
testb
xchg
hlt
sahf
cmp
bound
mov
pop
jmp
mov
in
or
shlb
sbb
ds
or
cwtl
shrb
pop
into
add
add
clc
stos
add
xchg
pop
pop
add
rclb
addr16
mov
jg
adc
jge,pt
jg
inc
jp
xchg
pop
cltd
in
icebp
mov
xor
stos
xchg
mov
xchg
dec
xchg
lods
add
push
cs
lret
xchg
stos
sbb
aad
lods
inc
xchg
pop
aam
lea
jns
inc
jo
xor
out
in
xor
out
leave
jno
add
cmp
jae
int
add
in
jle
sub
les
int3
jmp
enter
test
movsl
mov
xor
cmp
fildll
add
loopne
je
lret
lock
or
pop
leave
mov
mov
inc
xchg
sub
xor
or
into
mov
push
repz
fwait
pop
ljmp
out
dec
nop
and
or
out
and
mov
pop
mov
jnp
inc
jg
enter
sbbb
out
out
or
lret
xchg
insb
cmpsl
mov
dec
sbb
mov
int
and
out
pushf
jb
inc
stc
xchg
inc
cmp
adc
imul
pop
loop
lcall
inc
inc
xchg
adc
xor
sarb
cmp
xchg
movq
in
sbbb
in
in
mov
inc
xchg
aam
shl
roll
in
push
cmp
or
dec
add
push
cli
xchg
fcoms
jmp
in
ss
jne
lods
ret
jmp
xchg
arpl
dec
push
pop
mov
shrb
fld
lahf
add
adc
enter
mov
mov
fsubr
imul
dec
cmp
pop
sarl
sbb
js
sbb
cmc
xor
xchg
jmp
lahf
mov
push
or
cltd
jg
mov
cs
or
out
push
jmp
int
pop
jecxz
push
pop
push
aaa
shrl
int3
jp,pt
jns
aas
incl
add
bnd
mov
test
cmpsl
adcb
std
notb
cld
aas
aam
mov
dec
sti
cmpsb
js
xchg
dec
je
mov
test
adcl
jmp
movsl
push
repz
scas
std
rorl
cmpsb
insl
hlt
cs
pop
push
aaa
es
inc
adc
xor
test
movsb
mov
mov
stc
jge
dec
xchg
int
push
ss
mov
das
mov
sub
bound
sub
and
cs
xchg
pop
rcl
xlat
adc
sbb
jl
pop
cbtw
jo
push
sub
or
pop
dec
iret
xchg
mov
mov
jecxz
add
mov
or
sbb
testl
loop
aad
nop
push
jmp
clc
popf
cmc
dec
dec
in
fs
inc
cmpl
dec
orb
andl
loop
add
mov
fsubs
js
cwtl
cld
fmull
ret
repz
call
in
shrb
cwtl
popf
xor
mov
cs
xor
negb
clc
and
inc
pop
aas
sti
insb
div
in
inc
lahf
int
dec
dec
lock
clc
aaa
inc
cmc
mov
fsub
enter
les
cmc
dec
imul
scas
sbb
add
or
jbe
mov
pop
add
sbb
push
inc
cbtw
xlat
add
js
push
or
adc
nop
jno
dec
pop
int3
ret
popa
aad
jb
mov
dec
pop
ret
imul
in
mov
xchg
push
clc
sbb
imul
sbb
add
sbbl
mov
pop
test
jns
cmpsl
cs
sarl
mov
adc
int3
out
sub
lret
xchg
dec
fdivp
int
popf
cs
inc
cmpsb
icebp
mov
aam
pop
lret
enter
pop
cmp
xorl
aaa
mov
mov
lock
push
pop
adc
data16
mov
into
mov
sahf
or
jecxz
dec
and
std
rcrl
xchg
push
repnz
push
addr16
js
push
add
cmpsl
mov
test
fcomp
and
cltd
inc
xchg
test
rcrb
pop
daa
je
mov
out
es
test
jle
ss
sub
lds
sub
stos
or
push
in
inc
xor
xchg
xchg
test
jmp
adcb
fmull
fistpl
rcr
lcall
leave
icebp
ss
jmp
or
subb
lds
xchg
cli
xor
fldenv
leave
lods
in
mov
rorl
ret
inc
add
push
mov
in
jmp
inc
dec
dec
mov
xor
mov
push
daa
xchg
sub
adc
std
or
jnp
fsubs
jnp
pop
iret
arpl
adc
mov
add
call
cltd
loop
addr16
mov
xor
pop
xchg
scas
imul
ljmp
dec
mov
imul
cmpl
ret
mov
add
mov
jb
loopne
mov
pop
xchg
mov
adc
xchg
std
cmp
pop
xchg
inc
xor
fwait
dec
jecxz
cmp
stos
enter
repnz
xchg
push
fwait
jge
mov
ret
or
mov
mov
cmp
pop
test
inc
push
mov
lret
pop
out
jmp
cmpsb
mov
les
mov
push
gs
fidivl
ret
sarl
jge
pop
out
xchg
mov
bound
push
icebp
out
scas
adc
dec
xor
sbb
rolb
cmp
lods
pop
lock
outsb
addr16
mov
lods
adc
add
test
adc
popa
dec
xchg
mov
adc
fs
push
jae
jg
repz
insl
rcl
inc
stos
mov
sbb
ficoms
jnp
mov
popf
push
inc
cmp
mov
push
jp
xor
pop
pop
mov
dec
sub
lds
mov
nop
adc
in
std
divb
icebp
add
ret
jp
ja
out
leave
push
jnp
mov
pop
add
dec
xchg
and
or
mov
movsl
inc
rclb
and
sbb
sub
and
ds
and
aas
push
push
xchg
mov
loopne
mov
in
cmc
push
shlb
ret
push
out
mov
jno
cmpb
ss
jp
mov
mov
shrl
movsl
jns
clc
push
add
test
add
xchg
aad
push
js
dec
adc
das
jp
cli
xchg
cltd
push
mov
out
inc
or
jp
ficoms
sti
pop
or
pop
call
mov
scas
jbe
mov
mov
adc
subl
stc
add
jno
push
xor
call
sub
outsl
pop
rolb
pop
pop
jecxz
outsb
mov
dec
pop
adc
sbb
jbe
jne
jmp
cs
xchg
aam
out
and
or
leave
mov
push
adcb
pop
mov
mov
pop
imul
psrlq
fwait
bound
pusha
test
mov
clc
sub
jbe
mov
cli
repnz
test
inc
cmpsl
mov
push
scas
xor
dec
adc
in
outsb
sbb
fdivrl
or
scas
pop
pop
add
pop
sbb
inc
mov
pushf
push
scas
jl
xor
imul
std
cmp
mov
sbb
push
rcrb
aam
call
sbb
pop
cmp
push
push
push
call
es
xor
add
cmp
xor
sub
ds
cs
xchg
icebp
mov
jb
dec
inc
in
mov
push
dec
pop
leave
jg
sti
mov
scas
popf
insb
sub
or
cmp
adc
iret
xchg
pop
push
insl
cli
mov
pop
cmp
or
jbe
xor
clc
jecxz
cmp
lcall
mov
roll
data16
push
xchg
subl
cwtl
adc
mov
or
ds
dec
ja
push
push
add
repz
sbb
jbe
test
repz
mov
jge
cwtl
ret
les
ja
nop
hlt
test
jg
test
stos
or
sti
test
int3
mov
or
inc
lods
sarl
sbb
xor
pop
pop
mov
cmp
sub
jnp
push
ret
loop
repnz
add
rcr
rcl
pusha
in
sub
test
adc
inc
icebp
ds
arpl
out
adcb
sbb
mov
mov
mov
xor
xchg
in
andps
pop
pushf
inc
daa
xor
aam
aam
shlb
roll
insb
or
dec
sub
lea
pop
jae
and
into
pop
cs
adc
test
outsl
cmpsb
add
dec
cmp
xchg
jp
leave
mov
mov
ss
nop
cli
mov
xor
nop
iret
xor
into
xchg
sub
mov
mov
jge
scas
repz
aad
lretw
pushf
push
inc
sub
sub
les
das
jecxz
adc
pop
shll
jae
jge
test
loopne
iret
mov
sbb
cmpsb
add
cmp
pop
mov
or
jl
test
sub
mov
ja
stc
ret
push
test
mov
aas
add
and
repz
inc
mov
push
and
ficoml
jg
aam
in
hlt
jb
inc
or
outsl
push
dec
mov
push
or
push
cmc
jecxz
rcr
adc
enter
insb
out
adc
sub
shlb
scas
mov
out
fs
xor
push
mov
decl
ja
mov
push
sbb
fbstp
sahf
pusha
stos
push
inc
sub
ss
dec
xchg
inc
imul
jle
sbb
push
in
mov
sbb
jg
rcr
stos
xlat
fdivrl
or
movsl
pop
xchg
outsb
xor
cltd
jno
mov
adc
add
sti
lods
jmp
in
push
ss
je,pn
fsubl
pop
adc
in
repz
pushf
mov
mov
jge
adc
push
ds
enter
push
fildll
pop
dec
out
call
mov
mov
out
add
xchg
in
das
or
fldenv
insl
push
sbb
sbb
fmul
out
sbb
push
dec
scas
test
mov
cmpsb
test
cmpsl
inc
inc
and
and
ss
mov
ss
cmc
cmp
mov
and
pop
aam
add
fisttpll
sub
push
pushw
je
ds
addb
loop
sbb
in
hlt
inc
test
shll
push
int3
fisttpl
or
nop
int3
divl
dec
adc
aam
sub
push
push
insl
cs
arpl
xor
sti
adc
push
add
sbb
xor
js
xchg
and
dec
jbe
in
daa
jb
fisttpl
jnp
ss
mov
sbb
lcall
lea
js
dec
clc
mov
push
pop
cmp
jl
mov
shr
sbbb
leave
pop
stos
fistpl
xchg
loope
loop
ljmp
mov
test
inc
push
jb
dec
mov
jg
pushw
ret
xor
mov
sub
add
stc
into
mull
shrl
fucomp
rorl
pop
stc
shll
mov
cmovge
jp
sbb
mov
cmpsb
shr
js
mov
xor
mov
lret
out
jecxz
in
scas
adc
jo
mov
jge
mov
cmc
add
push
jo
sub
ds
xchg
mov
ljmp
movsl
btc
ljmp
lock
testl
mov
aaa
faddl
and
xchg
fstl
cmp
sarl
out
scas
pop
ja
outsb
mov
fcmovnb
roll
loope
add
out
data16
sub
shlb
jne
lods
dec
pushf
es
hlt
jns
sbb
xor
leave
cmp
sbb
outsb
dec
enter
pop
xchg
lea
xlat
ss
and
inc
add
sub
mov
pop
into
lret
xchg
mov
cmp
inc
rorb
daa
adc
gs
cmpsl
aam
movsb
xchg
mov
mov
cmp
or
or
jp
in
jecxz
mov
sub
xchg
lret
cmpsb
dec
into
mov
aas
cmpsb
xor
add
and
inc
jl
loope
inc
dec
lock
jg
cltd
pop
push
fcmove
jg
dec
mov
repz
inc
sarl
loopne
bound
mov
cmp
iret
xor
or
in
sub
js
cwtl
outsl
iret
aad
cwtl
inc
inc
mov
test
ror
push
pop
sub
out
in
push
cmp
sbb
dec
jne
fmull
aas
inc
sbb
push
in
xchg
call
outsb
arpl
mov
adc
stos
jle
jnp
and
add
shrb
into
xchg
mov
push
aam
or
test
push
insb
sbb
ret
sub
imul
adc
add
cmp
lods
add
cld
push
insb
cmp
ret
clc
ds
or
mov
jnp
clc
push
pop
pop
in
inc
sahf
jmp
add
stos
bound
enter
sahf
outsb
sbb
and
xor
xor
inc
pop
repz
sub
inc
pop
cmp
rol
fisttps
out
jp
bswap
inc
cld
xchg
ret
shll
mov
rcll
push
push
movsl
sbb
xor
jno
push
ds
mov
inc
testb
mov
xchg
mov
pop
jmp
xor
fmulp
sbb
adc
test
roll
data16
movsl
shr
test
adcl
mov
and
ss
xchg
xchg
popf
pop
inc
fwait
je
inc
test
mov
sub
mov
aam
out
adc
mov
pop
push
dec
loope
inc
inc
push
inc
jne
shll
mov
inc
mov
mov
add
ret
in
xchg
aaa
movsb
jge
rorb
mov
pop
lcall
sub
in
mov
cli
std
cmp
cmp
push
into
movsl
add
stc
pop
popf
mov
into
loopne
cmc
lods
stos
mov
cmp
or
mov
incl
xlat
cmpsl
into
in
inc
xorb
jg
or
or
shlb
sbb
fs
or
add
sbb
push
leave
fisttpll
sbb
sbb
mov
mov
popf
imul
divl
dec
adc
test
lret
out
add
inc
adc
add
add
inc
enter
js
jl
dec
popf
mov
or
pop
imul
subb
nop
shll
xchg
scas
jle
xor
jg
sub
adc
mov
adc
outsb
xchg
inc
in
insl
dec
cmp
inc
mov
repnz
sar
sbb
loop
loope
mov
insl
ret
jbe
cltd
or
cs
insl
mov
adc
in
and
in
pop
iret
mov
loop
lcall
mov
fwait
xor
jmp
and
insl
xchg
scas
and
and
ja
aaa
roll
fisubl
ja
pop
pop
mov
cmp
and
mov
mov
test
add
dec
pop
mov
lret
nop
outsb
loopne
std
loope
mov
testl
cmp
xor
or
mov
cmp
xor
pop
sbb
and
inc
orl
sti
push
jns
icebp
int
lock
dec
adc
dec
int
jne
pop
pop
imul
xchg
pop
adc
xor
pushf
push
push
xchg
dec
popf
adc
pop
das
push
test
sub
xor
inc
movsb
mov
push
popa
call
mov
mov
pop
add
rcrl
jno
movb
inc
cmpsb
jne
mov
jge
sub
push
mov
test
sbb
inc
lahf
mov
or
pop
jo
xor
stos
sub
in
ret
fucomp
or
xchg
dec
or
push
mov
inc
lcall
mov
push
negb
lcall
inc
and
mov
test
jg
test
sbb
rorl
push
mov
imul
loopne
cmp
aaa
push
roll
xor
sub
test
ret
rcrl
insl
lcall
aas
inc
dec
stos
pop
out
jg
jp
lock
cmpsb
stos
xor
xor
aas
add
jge
data16
jne
das
lcall
stos
pop
mov
arpl
mov
mov
xor
roll
out
adc
sar
mov
mov
mov
xor
jbe
xchg
scas
addr16
adc
dec
sub
and
hlt
mov
mov
xor
std
decl
sub
and
push
xor
cld
mov
xchg
mov
xchg
loope
lea
jmp
inc
mov
mov
sbb
pop
push
popa
fwait
sarl
pop
aaa
ficompl
inc
mov
mov
and
std
nop
inc
or
push
adc
lea
pop
repz
pop
clc
jg
pusha
push
and
divb
push
sbb
mov
mov
outsb
push
js
xlat
incb
lahf
bound
mov
pop
jp
jp
cmp
pusha
pop
add
stc
insb
inc
pop
sti
enter
sub
push
sub
mov
lahf
push
jns
adc
pop
je
cmp
adc
mov
and
jnp
mov
lret
jo
push
fsubrl
sub
push
and
mov
flds
mov
xchg
or
pop
dec
lds
inc
adc
fidivrl
mov
add
and
mov
lahf
dec
mov
std
ljmp
push
fcomps
lea
xchg
iret
xorb
sub
std
dec
popf
dec
sub
xorb
in
cld
ret
cmpsb
jno
inc
dec
in
lods
or
inc
ss
call
push
popa
mov
divb
jp
ror
int
add
adc
sbb
inc
ljmp
cld
push
nop
jl
xor
iret
adc
inc
jne
addr16
add
inc
popa
ja
les
rcll
call
inc
push
iret
pop
adc
test
sub
lods
cmpsl
nop
jecxz
or
dec
lret
cmpsb
mov
adc
sbb
dec
mov
test
insl
mov
jae
sub
aam
mov
mov
pushf
das
in
add
test
inc
mov
out
lret
or
pop
cs
mov
insl
loop
sti
push
hlt
push
mov
push
inc
in
xchg
loope
fiadds
sbb
add
ret
clc
push
mov
cmp
das
jecxz
mov
stos
cmp
mov
scas
cwtl
sub
sbb
cs
insl
cmp
sti
adc
xchg
push
cld
jns
out
shrl
fwait
jb
pushf
push
or
lods
daa
rcll
mov
sbb
test
or
rol
cmp
mov
cwtl
jnp
mov
dec
call
scas
out
mulb
inc
mov
in
xchg
xchg
scas
or
ja
scas
ss
mov
jp
cli
movsl
sbb
imul
test
test
and
pop
aaa
ljmp
pop
inc
iret
dec
adc
or
push
int3
sar
add
js
mov
sbb
dec
adc
xchg
xchg
call
daa
jecxz
mov
mov
test
add
lock
pop
leave
ljmp
mov
or
xchg
xor
cld
in
bound
mov
pop
fildl
popa
sub
mov
xchg
fwait
pop
push
push
bound
test
push
adc
jg
mov
and
mov
ret
insl
xorb
push
push
mov
sti
cmp
pop
aaa
out
cmp
mov
pop
sbb
loopne
inc
mov
or
fiaddl
dec
sbb
out
insl
sete
pop
stc
mov
or
push
dec
pushf
sub
mov
outsb
add
enter
push
cwtl
xchg
push
jge
dec
push
rcrb
es
xor
cmc
test
pop
repnz
adc
in
into
leave
inc
xor
iret
pop
aam
dec
cwtl
push
jmp
fld
add
add
fcoms
inc
push
inc
aad
imul
mov
ss
in
call
das
gs
test
sub
ds
fldenv
movsb
pop
fnstsw
pushf
stos
shll
enter
mov
jb
stos
adc
mov
lcall
mov
aam
or
jmp
and
cmpsb
in
fimuls
repz
pop
fcoml
cmp
hlt
pop
add
mov
lods
loopne
adc
cld
push
fsub
jge
jnp
jle
xchg
sub
jmp
or
sahf
push
icebp
lds
mov
nop
fadd
lret
cmp
jle
xchg
adc
nop
fistl
adc
dec
and
nop
mov
dec
mov
icebp
jo
jle
sti
mov
dec
in
das
ret
icebp
stos
fstpt
std
das
ret
insb
fnstcw
or
sbb
lds
addr16
fistpll
ret
repnz
addr16
mov
frstor
add
xchg
xchg
negb
mov
repz
cs
mov
xlat
je
jns
cld
aas
mov
pop
mov
pop
ret
fisubs
cld
pusha
cld
lds
sbb
sahf
xchg
jae
mov
test
scas
mov
cwtl
inc
test
pop
out
dec
push
iret
cmp
insb
mov
stc
fldenv
xchg
sub
es
syscall
xchg
xor
cwtl
jecxz
ret
in
xchg
daa
jg
leave
mov
imull
cwtl
aas
adc
adc
stc
sarb
rol
test
push
aas
or
cmp
lahf
inc
subl
pushf
mov
sub
mov
dec
sti
xchg
insl
not
mov
jle
mov
mov
ljmp
sarl
sbb
shlb
std
fldl
rcr
add
pop
xchg
das
imul
out
in
sbb
add
fwait
inc
xor
lcall
pusha
stos
pop
movsb
cs
and
jmp
icebp
in
fdivr
cmp
push
jl
mov
xchg
fildl
jo
push
hlt
sub
add
sub
mov
adc
mov
pop
clc
pop
aam
mov
imul
pop
push
leave
xor
cmp
pop
xor
fisttpl
cld
sub
sbb
pop
jl
dec
stos
add
xchg
popf
ljmp
aad
push
mov
xor
lret
jno
pop
sub
or
or
out
mov
addr16
pop
in
push
lret
cli
jnp
jmp
in
inc
filds
lock
lods
xchg
adc
insl
mov
cmpsl
cmp
push
mov
push
mov
dec
scas
jae
mov
add
adc
jle
cmp
xchg
and
ret
data16
mov
xor
lds
lods
sub
add
lods
lods
inc
icebp
add
inc
test
fs
psadbw
out
inc
jg
std
fcmovu
mov
test
and
mov
sub
xchg
ja
sbb
fcomp
adc
push
bound
ljmp
stc
jns
sbb
sub
pop
lret
into
aaa
in
repz
pusha
addr16
or
ret
push
push
mov
jo
inc
sub
mov
rorb
leave
or
fsubs
inc
in
sub
jmp
add
mov
je
adcb
ds
pop
mov
push
call
xchg
xchg
mov
xor
inc
fwait
sbb
mov
gs
fidivrl
jle
mov
mov
andl
shll
das
sahf
jb
and
mov
xor
data16
test
mov
push
jae
out
sub
or
cmp
sbb
ret
push
xlat
and
lods
add
mov
push
jmp
lods
push
stos
enter
insl
mov
testl
nop
push
pushf
mov
js
jg
lds
jns
xchg
fists
arpl
es
mov
push
mov
stos
xor
xchg
fs
incl
mov
pop
sbb
inc
mov
cmpsb
lods
sub
lret
add
xor
mov
pushf
pushf
cmpsb
icebp
dec
sbb
andb
test
stos
adc
xchg
adc
loopne
inc
or
sbb
call
fwait
sub
push
insl
clc
aad
imul
mov
pop
lods
push
push
cmp
test
fsubrl
push
jno
cmp
popf
bound
sbb
pop
lods
xchg
and
leave
jne
cmpsb
scas
sub
adc
sbb
fbstp
jnp
xchg
in
cmp
add
sub
int
pusha
cmp
mov
jecxz
mov
in
adc
add
bnd
and
add
adc
pop
lea
push
aaa
icebp
pop
fmull
dec
shrb
add
jno
rorb
adc
add
sbb
out
xchg
aad
jg
pushf
xor
jbe
dec
adc
sbb
rolb
sbb
cltd
insb
xchg
fs
cli
fld
mov
inc
xchg
jmp
insl
xor
repz
imul
add
mov
mov
pop
fwait
jns
mov
dec
dec
es
inc
jnp
call
test
and
push
xor
cmp
in
push
jecxz
cmpsb
add
test
lods
in
jbe
inc
push
into
movsl
cmp
loop
shlb
or
push
mov
xchg
inc
in
sbb
sahf
outsb
jae
push
mov
lock
push
mov
push
jg
repnz
mov
outsl
or
cmp
lret
call
mov
lcall
popa
dec
call
mov
lahf
inc
push
aas
push
mov
add
jge
cmp
nop
nop
sub
xor
rcr
cli
and
lock
pushf
sbbb
mov
sub
rclb
adc
xchg
sub
stos
es
add
jb
fiaddl
out
fidivs
mov
test
sti
sahf
lret
ss
fldcw
dec
adc
add
aam
and
ret
add
add
loope
add
les
xor
repz
data16
push
jns
cmpsb
xor
sub
imul
inc
cmp
xor
rolb
arpl
aad
lods
dec
repnz
push
movsb
push
leave
adc
mov
xchg
out
pop
mov
fstps
cmp
inc
push
dec
xchg
ret
push
scas
mov
scas
push
lret
orl
sgdtl
xchg
jnp
mov
lock
jmp
aaa
push
pop
out
lods
adc
xor
enter
les
lds
sbb
loopne
jae
mov
pop
mov
cli
cmp
add
mov
mov
sub
mov
push
mov
jl
adc
jo
adc
call
jbe
aas
dec
notl
mov
push
mov
mov
push
in
inc
imul
movsl
outsb
or
jbe
std
test
outsl
cmp
je
mov
into
jecxz
sub
imul
mov
sbb
insb
fbld
dec
cld
loope
jne
xor
and
hlt
jbe
rol
daa
subl
andl
lea
test
sub
lods
aas
push
push
xor
jg
jns
loope
rcrb
repz
leave
stos
dec
mov
loope
gs
bound
mov
and
adc
lret
mov
ja
adc
ja
inc
insb
ret
sub
xchg
mov
fisttps
push
xor
lret
cli
fstps
inc
dec
std
std
ljmp
mov
mov
out
fdivl
lcall
or
jmp
pop
in
fs
cmp
fidivs
mov
sub
push
pusha
adcl
ds
faddl
xchg
out
jmp
jge
push
lcall
jge
lea
mov
push
aad
jmp
sub
fsubr
cmp
lea
sbb
xor
jl
movsl
xchg
adc
cmc
push
cmpsb
movsb
sbb
xchg
int
cltd
ret
jns
insb
sbb
js
adc
or
mov
pop
je
push
iret
or
push
cmp
lds
iret
cmp
dec
hlt
push
and
push
xor
mov
mov
pop
pop
or
add
scas
push
daa
xor
push
daa
lods
movb
lods
movsl
arpl
pop
popa
cmpsb
push
add
popf
jg
ret
mov
adc
mov
add
jg
ss
fisttps
mov
je
ficomps
push
mov
clc
push
fs
xchg
nop
pop
pop
add
int3
sub
testb
add
dec
lahf
sar
pop
insl
pop
leave
mov
and
xor
lcall
cmp
xlat
jno
inc
jge
inc
lea
or
cwtl
stos
inc
mov
push
bound
imul
xchg
cld
fstcw
xor
sbb
mov
movsb
mov
dec
mov
imul
push
xchg
push
xlat
cmp
leave
ret
mov
mov
enter
cmpsb
lods
and
sub
sbb
inc
loope
ret
xor
lret
add
mov
cwtl
or
or
pop
arpl
jbe
cmp
clc
inc
xchg
inc
fistpl
mov
xchg
lret
fisttpl
mov
lods
mov
mov
cmp
mov
addr16
and
cmp
xchg
in
faddl
jg
outsl
loopne
and
mov
aas
jl
mov
loop
mov
pop
xchg
or
mov
xchg
xlat
sbb
pusha
pushf
aad
js
cmp
clc
and
daa
dec
inc
jns
add
mov
scas
lds
jno
mov
and
cmp
jbe
push
xchg
jl
mov
pop
mov
adc
stos
push
mov
add
lods
cmp
or
push
pop
sbb
jl
mov
xchg
cmp
lock
leave
arpl
decb
jecxz
mov
xor
xchg
sub
test
out
repz
roll
inc
hlt
test
push
popf
arpl
lock
mov
adc
fisttpl
sub
push
jl
addr16
insb
jne
or
jecxz
loope
pop
and
dec
ja
dec
xor
xor
inc
iret
fdivrp
pop
mov
xchg
mov
push
les
xlat
pop
js
out
push
addb
sub
sti
scas
pop
pop
xor
fistpl
pop
mov
nop
fistps
push
aaa
mov
and
scas
jl
or
inc
xor
push
clc
mov
xor
sbb
sahf
mov
adc
xchg
lds
leave
mov
lods
dec
cmp
cmpsl
adc
cmpsl
nop
pushf
stos
and
pop
xchg
dec
loopne
pop
in
push
adc
or
pop
outsb
outsl
or
aas
loop
fwait
sbb
xchg
xchg
nop
es
rcrl
leave
hlt
test
push
mull
pop
add
mov
fsubp
and
js
cmpsb
jecxz
lret
xor
xchg
lahf
cmp
popa
xchg
xor
or
pop
or
dec
cmpsl
les
xchg
mov
jle
pushf
add
add
call
scas
and
fsts
jne
addb
mov
stos
cmp
xchg
int
dec
cltd
lret
mul
jns
sbb
inc
add
cmp
sub
pop
mov
jne
mov
jecxz
xchg
out
mov
mov
imull
aad
add
mov
mov
dec
inc
js
ss
jns
lahf
aam
dec
jae
aad
test
jecxz
lods
mov
adc
mov
iret
pop
ljmp
fsubl
add
push
jecxz
das
jl
mov
sbb
or
dec
jge
mov
mov
xor
lret
push
add
out
arpl
mov
dec
into
sub
arpl
adc
scas
aam
sbb
pushl
call
daa
or
sub
sbb
cmpsl
pop
push
cmpsl
pop
sub
gs
jg
test
jg
mov
lret
pop
sbb
push
enter
int
ret
orl
xor
adc
outsl
xchg
xchg
daa
lock
test
andl
outsb
test
cs
out
pusha
negl
icebp
in
and
in
push
xchg
inc
loop
mov
jecxz
cmpsl
cmp
sbb
insb
fs
push
and
push
adc
mov
jbe
dec
lahf
outsl
mov
ljmp
lret
mov
xlat
fimull
sbb
or
xchg
sti
dec
popa
jne
jne
jp
inc
out
jle
pop
int
lods
in
lahf
dec
lret
lods
jle
add
lods
mov
xchg
clc
xor
jp
icebp
rcr
jo
and
not
sbb
pop
inc
jo
cmp
xor
insl
mov
cwtl
add
or
add
lea
inc
clc
push
mov
daa
out
jle
xor
mov
sub
scas
enter
ss
pop
jmp
scas
in
push
mov
shlb
pop
loope
mov
add
xor
aam
das
ss
insb
cs
scas
mov
fwait
xchg
inc
lock
insl
in
fsubrs
jns
mov
sbb
mov
inc
popa
inc
add
mov
mov
pop
push
xor
mov
xor
ret
insb
out
push
mov
xchg
and
jg
pop
in
add
pop
push
icebp
xchg
ja
in
inc
mov
cli
adc
mov
incl
repnz
bound
jns
add
jbe
adc
mov
outsb
aad
pop
sub
adc
nop
sbb
out
xor
mov
pop
dec
lret
addr16
das
mov
rolb
adc
sbb
sub
push
je
mov
jno
mov
mov
sub
rcll
push
dec
sbb
pop
scas
lret
push
pop
mov
pop
mov
mov
fidivs
jle
stos
arpl
pop
push
outsl
xor
imulb
movsl
inc
loope
and
xchg
subl
inc
mov
out
cmpb
aad
add
mov
insb
test
leave
push
repnz
adc
inc
xor
pop
mov
repnz
xchg
scas
jbe
or
iret
sub
ja
xor
outsb
and
iret
cmovb
ds
and
loop
add
scas
pusha
dec
xor
xor
addl
cmp
test
adc
daa
jae
je
and
inc
fstpt
rorb
add
or
shlb
mov
and
jp
leave
add
cmp
inc
test
pushf
in
outsl
mov
pop
lock
cltd
xchg
repnz
out
sub
cmp
out
aad
fwait
scas
fstl
jne
xor
outsl
cs
sbb
cmpsb
cmp
lods
imul
dec
mov
mov
or
dec
repnz
inc
push
or
or
cmp
repnz
and
sbbl
push
shl
add
pop
mov
sub
push
ds
sub
dec
lods
or
dec
adc
fnsave
or
outsb
xchg
scas
cmp
lret
xor
mov
imul
xor
sbb
inc
sarb
mov
leave
push
cmp
cmp
pop
arpl
sub
pop
or
lock
insb
cmp
sti
add
xchg
add
imul
in
in
ret
xchg
and
mov
inc
loop
mov
mov
dec
imull
xor
push
mov
sbb
lock
fstps
aas
out
pop
push
mov
orl
sbb
cmc
imul
push
jg
mov
push
cmp
pop
mov
dec
fistpl
loopne
sub
cmp
inc
mov
inc
lahf
in
loope
inc
ret
mov
popf
xchg
fidivl
jb
inc
and
mov
cmp
sbb
mov
ret
addl
sbb
lret
add
sub
mov
or
imul
and
fs
stos
rclb
popf
repnz
les
test
jmp
mov
insb
cmpsl
roll
popf
mov
pop
adc
enter
xchg
inc
ljmp
push
or
es
inc
sarl
mov
jo
xor
std
ds
shrb
cmc
stos
pop
clc
rcrb
insb
test
bound
ljmp
mov
sbb
int
and
mov
add
imul
fld
mov
push
mov
inc
loope
outsb
scas
and
mov
arpl
scas
jbe
pop
ds
sahf
outsb
mov
in
dec
pop
jns
xchg
loope
cmc
into
lock
lock
inc
mov
xor
ret
inc
ss
add
dec
ljmp
mov
mov
mov
notl
mov
fcom
inc
decl
xchg
mov
xchg
and
cmp
fiaddl
mov
outsb
aaa
mov
add
and
lcall
out
fwait
dec
sbb
xor
outsb
add
xchg
enter
jecxz
lea
sahf
fsubp
add
pusha
cmc
xchg
adc
andb
inc
lds
aam
nop
push
ss
jg
ret
roll
outsl
fs
inc
pop
mov
mov
cmpsl
mov
nop
push
shrb
mov
test
cltd
cmp
insl
iret
shll
mov
xchg
lea
jnp
adc
adc
das
push
xchg
cli
loopne
dec
shlb
pop
enter
xchg
dec
pop
int
ret
cmp
movsl
icebp
cltd
jmp
outsl
nop
jnp
sahf
call
sbbb
push
jo
test
popf
or
jp
lods
adc
lret
scas
add
insl
push
jg
subw
das
jecxz
xchg
lahf
and
or
inc
jbe
es
pop
insl
test
xchg
push
xor
repz
stc
aas
adc
loopne
jmp
movsl
stos
repz
in
xchg
shlb
add
call
jmp
sbb
sbb
push
cmp
inc
stos
cwtl
pop
sbb
jno
add
imul
jmp
mov
or
pop
aad
mov
adc
out
jae
pop
movsl
movsb
popa
xchg
adc
pop
sbb
rcrl
pop
mov
inc
cmp
in
xor
cltd
jne
mov
sub
out
jg
lock
movsl
mov
pop
mov
out
cmpl
stos
das
jp
fcomp
pop
ljmp
xchg
out
in
sub
sbb
add
jb
push
xchg
cld
sub
lret
push
shlb
cmpsl
xor
push
mov
dec
mov
fldenv
mov
pushf
in
cli
leave
sub
cld
jmp
jnp
and
and
or
nop
jne
cmp
jae
or
cmp
test
add
mov
rolb
inc
pop
and
push
push
jge
paddusw
pusha
push
push
stc
stos
adc
mov
insb
cmpsl
push
scas
repz
push
movsb
stc
pop
outsb
popa
loopne
popa
sub
and
out
or
pusha
pop
add
cltd
mov
xchg
loopne
movsb
adc
push
ja
sbb
inc
jae
cmp
ret
fisubl
in
loopne
bound
dec
or
jbe
mov
sbb
xor
sub
hlt
dec
rclb
stos
mov
inc
aam
movsl
aad
nop
adc
mov
push
iret
in
stc
popa
inc
test
mov
xchg
in
lock
xor
mov
pop
inc
jecxz
inc
jnp
jle
shrl
leave
ds
pop
enter
shrb
sti
nop
pop
sbb
mov
and
xor
xor
cmpsl
mov
add
mov
and
fadds
stos
inc
cltd
mov
imul
xor
jne
vpminub
ljmp
xor
or
mov
xchg
daa
scas
cmp
inc
sahf
ds
pop
test
mov
xchg
and
pop
inc
add
pop
nop
faddl
idivl
leave
aam
rcl
push
mov
dec
imul
out
aas
sbb
sub
ret
mov
adc
inc
ss
cmp
ret
addr16
insb
push
rcll
into
loope
fcompl
dec
mov
lods
sub
daa
pop
cld
mov
imul
in
xor
adc
dec
dec
popa
fs
sbb
pop
push
mov
xor
sbb
pop
cmp
add
pop
mov
push
sbb
lds
add
push
das
rclb
xor
jl
cmp
dec
in
jg
mov
push
or
mov
push
pop
adc
and
cmp
lret
or
add
xchg
pop
dec
inc
pushl
mov
push
sub
push
sbbb
rcrb
cmc
mov
inc
or
and
ret
mov
shl
clc
adc
dec
dec
fs
repnz
push
mov
sub
pop
dec
pop
ret
sub
stc
movsl
cltd
stos
xchg
negl
aam
je
hlt
mov
mov
fistpll
add
iret
push
xor
xchg
xchg
cwtl
jge
or
mov
jp
jnp
mov
inc
xchg
or
lahf
mov
and
add
cmp
cltd
shll
jnp
xchg
and
xchg
aam
gs
cli
sbb
jns
inc
mov
js
sar
loop
pop
sbb
mov
sub
rorb
fldt
push
pop
mov
sub
fnstsw
sub
xchg
sub
icebp
popa
push
inc
mov
sbb
pop
pop
insl
notl
loope
ds
jp
jmp
push
mov
pop
pop
push
cmc
daa
movsl
pop
adc
cmp
out
add
jmp
inc
mov
jecxz
in
movsb
mov
xorl
mov
mov
add
lds
xor
movsb
mov
loop
jecxz
shlb
mov
lret
outsb
lret
shr
push
cltd
pop
sti
cmp
inc
sbb
cmp
fst
inc
jb
repnz
sti
loope
or
adc
cltd
mov
movl
pop
sub
das
or
mov
movsl
loopne
or
ds
sbb
xchg
xchg
jne
lea
jl
push
mov
adc
cmc
in
xchg
xchg
cmp
xchg
out
xor
iret
test
into
mov
push
loop
or
sbb
std
cmp
inc
adc
jb
stos
mov
movsl
pop
sub
inc
lods
hlt
jb
cld
ret
cmpsb
ds
loop
dec
das
sbb
or
cmp
xchg
inc
test
pop
fimull
adc
test
jg
fnsave
repz
ds
and
and
flds
out
das
insb
inc
lret
jns
push
in
pop
dec
or
xchg
cmpsl
mov
mov
cmp
icebp
aam
add
nop
test
scas
pusha
push
sub
pop
test
setle
jae
iret
and
jns
fs
push
js
push
aad
fcmovnu
mov
adc
jb
lret
hlt
add
lcall
test
mov
jae
pusha
or
in
mov
lock
fldt
jne
fdivrs
popa
into
shll
dec
decl
pop
fisttpll
popf
and
mov
push
inc
and
out
cmp
daa
mov
jo
jbe
lods
xor
pop
int3
adc
shlb
push
and
enter
mov
mov
sbb
dec
dec
sub
xor
push
outsb
mov
in
pop
jnp
mov
add
cwtl
xchg
ret
push
dec
shll
dec
jmp
dec
mov
add
out
repz
xor
scas
jecxz
fcomps
mov
leave
popf
pop
push
cld
cmc
es
lds
cmp
rclb
pmaxsw
addr16
jge
cmc
sti
or
test
push
and
inc
mov
inc
jne
test
pop
lret
push
jecxz
adc
cmc
jbe
mov
push
loope
xor
ds
pusha
push
push
jo
addr16
pop
jo
lahf
fs
stos
mov
jb
mov
sbb
adc
mov
test
fmuls
jne
cmp
test
popa
es
mov
call
mov
mov
rorb
or
cmp
daa
iret
pushf
sti
subb
addr16
popa
out
sbb
adc
pop
ret
cmp
repnz
dec
or
xchg
xchg
daa
jg
jle
or
out
in
pop
gs
cwtl
sbb
nop
leave
xchg
mov
test
mov
ret
insb
mov
inc
mov
lret
push
std
xchg
mov
out
cmp
fldenv
nop
ss
and
sbb
xchg
cs
cmp
inc
dec
sbb
lcall
and
sub
pop
jne
pushf
movsl
stos
out
mov
xchg
jecxz
shr
or
rol
or
movsl
iret
movsb
jo
jb
push
dec
pop
pop
xchg
int3
loop
mov
cltd
pop
add
fsubrl
je
push
cld
repz
sub
inc
or
arpl
imul
lods
icebp
jns
subl
xchg
adc
or
into
push
fsubrs
std
hlt
mov
movsl
cmpsb
sbbb
shlb
sub
bswap
add
movsl
ljmp
push
mov
sbb
sbb
or
adc
inc
cwtl
repz
int
jl
jmp
mov
dec
add
add
pop
into
add
xchg
pop
push
inc
fmuls
jp
xlat
or
sub
test
test
aas
out
pop
pop
mov
hlt
fdivr
lret
std
iret
xchg
lock
dec
adc
jecxz
mov
or
rcrl
dec
mov
idivb
sbbb
mov
jg
in
sub
stos
mov
clc
sub
cmp
aaa
pop
sub
add
xchg
add
push
fs
xchg
pop
push
add
sahf
movsb
dec
bound
jecxz
mov
dec
subb
dec
or
mov
mov
ret
inc
inc
xchg
mov
rcr
lds
daa
mov
pushf
jmp
xlat
and
xor
dec
loop
movsb
and
int3
sbb
call
stc
sub
mov
sbb
xchg
lods
jge
mov
add
call
movl
jae
test
xor
mov
push
lret
push
dec
rcrl
dec
mov
je
idiv
out
xchg
pop
sar
push
fnstsw
pop
or
mov
mov
adc
repnz
xor
push
push
sub
push
jg
lret
jo
cmc
loop
mov
fdivl
pop
fsubrl
out
mull
mov
jns
test
fistpl
xchg
inc
enter
gs
scas
notl
mov
jno
test
dec
mov
loop
repnz
icebp
jl
mov
pop
sti
xchg
mov
fdivl
cmp
inc
test
pop
out
pushf
icebp
or
stos
leave
lds
aaa
scas
xchg
test
mov
fldt
test
pop
das
enter
into
add
jo
sub
sub
mov
pop
movb
jp
cs
xor
gs
int
aas
mov
popa
shrb
inc
clc
dec
lea
clc
mov
popa
ret
mov
das
cmpsl
outsb
push
mov
psadbw
in
sbb
sub
lret
dec
sbb
cmp
or
jmp
sahf
mov
in
loopne
lods
xlat
cwtl
dec
loopne
or
dec
ss
mov
mov
add
pop
pop
mov
sbb
add
mov
jns
lret
lods
inc
aas
ret
inc
fwait
or
sub
dec
inc
sbb
lret
jle
cmp
mov
mov
xchg
push
ja
mov
push
out
aam
movb
push
insl
rorl
mov
push
negb
outsb
fldcw
mov
sbb
cli
int3
adc
and
loop
jecxz
and
shlb
es
jnp
js
inc
ret
pusha
jge
add
jp
mov
sub
out
xor
jns
loope
jmp
test
xor
add
mov
sub
sbb
mov
mov
int
mov
mov
pop
pushl
or
lret
xchg
mov
mov
clc
cmp
mov
push
xor
mov
jo
popa
call
out
xchg
mov
in
and
jo
add
dec
add
push
adc
lret
out
test
add
outsb
pavgw
rcll
push
in
dec
mov
jl
bound
mov
lods
xchg
fldenv
insl
pop
sbb
les
dec
and
std
mov
push
mov
test
xchg
les
push
lret
add
mov
xchg
mov
push
add
or
mov
cli
roll
mov
test
dec
fstl
push
or
inc
inc
and
loop
pop
rorb
pop
les
nop
test
dec
mov
cltd
cmp
cli
out
jno
adc
mov
ljmp
div
mov
xchg
movsb
out
adc
adc
ds
dec
sub
fadds
add
rcrl
mov
push
je
xchg
es
lcall
mov
repz
cmp
icebp
cwtl
stc
xchg
out
push
mov
pop
xor
and
add
jns
test
out
or
loopne
shrb
outsl
jo
das
jp,pn
icebp
push
fnsave
add
mov
mov
dec
and
jle
inc
mov
mov
cmp
test
mov
jae
jae
mov
stc
add
sbbb
leave
mov
adc
pushf
push
cmp
sub
xchg
xchg
mov
iret
ss
push
add
and
out
dec
in
xchg
add
add
fcompl
and
pusha
aad
pop
mov
push
pop
or
mov
sbb
push
sbbl
cmp
popa
pop
sbb
cmp
or
mov
and
aaa
in
jno
fildl
in
fwait
xchg
pop
cmp
shl
stos
outsb
sbb
fdivrp
push
loopne
pop
lock
outsb
lahf
in
sbb
cs
imul
pusha
inc
and
or
in
and
sbb
push
mov
sub
sub
in
pop
lods
outsb
lods
xor
adc
sti
add
fwait
test
sub
push
loop
stos
std
loopne
mov
lods
cmp
xchg
sub
aaa
xchg
mov
jne
das
sub
dec
js
and
push
mov
pop
lods
leave
or
mov
int
xor
add
xchg
in
push
out
sub
sbb
inc
push
movsb
and
call
add
loopne
in
dec
and
dec
xor
inc
aas
ss
xadd
pop
fst
sbb
xor
js
pop
daa
adc
pushf
push
inc
or
enter
pop
stos
in
adc
and
or
icebp
xchg
lds
es
aam
das
in
inc
push
sub
mov
xor
or
jae
je
out
mov
xor
into
mov
aaa
sbbl
add
mov
aad
mov
dec
dec
out
mov
cmp
inc
fnsave
push
sub
cltd
in
gs
in
jmp
jnp
jmp
es
cmpsl
push
jmp
sub
pop
mov
cmpsb
cld
cmpb
cld
mov
fs
les
jns
mov
mov
jnp
xor
addr16
push
sub
or
pop
inc
orl
mov
jmp
adc
call
mov
sub
jp
xchg
inc
sbb
lahf
pop
pop
int
sub
aam
cmpsb
jmp
jbe
mov
sub
dec
add
icebp
push
inc
xor
mov
in
sub
mov
popa
push
les
xchg
mov
xchg
push
sub
or
hlt
imul
ret
add
adc
mov
filds
lret
push
imul
pusha
cwtl
lahf
mov
dec
rcll
mov
cmpb
jo
rcll
jo
mov
test
imul
jle
pop
loopne
fs
in
jg
cmc
jb
mov
das
sbb
mov
sub
fildll
sub
fincstp
xor
popf
lods
mov
popf
ja
jecxz
or
out
mov
bound
pop
leave
mov
push
sub
push
rolb
pop
mov
pop
shr
aad
push
or
push
pop
push
pop
orl
sbb
rol
pop
int
pop
pop
insb
stc
test
fs
test
cmp
arpl
test
add
out
sbb
inc
lahf
xchg
mov
fidivs
mulb
out
sbb
jl
punpcklwd
ds
dec
jl
shrl
lds
ja
fldcw
cs
or
std
aad
nop
mov
xlat
ja
or
addr16
mov
mov
lahf
adc
ffree
xor
pop
sub
addr16
in
jno
dec
push
and
xchg
ret
lods
sti
jle
pop
adc
out
hlt
iret
into
cmp
mov
sub
testb
fnstcw
add
pop
jne
jmp
mov
lret
jmp
testb
sub
out
andb
fsubrs
les
mov
mov
ds
outsb
jg
xor
loope
jle
loop
cltd
gs
fstpl
movb
rorl
js
adc
sbb
mov
cltd
adc
adc
push
mov
pop
pushf
cwtl
push
stos
call
xchg
inc
lock
jns
mov
mov
mov
sbb
popa
xchg
cmp
xor
imul
imul
jecxz,pn
fs
xor
add
jbe
mov
mov
inc
xchg
jge
sti
push
mov
ljmp
shlb
or
and
mov
stc
cld
fbstp
es
je
call
repz
daa
ficompl
xchg
sbb
xchg
or
stos
xchg
and
pop
sub
popf
je
cmp
jns
scas
jp
pop
mov
aaa
push
call
jns
inc
inc
push
xchg
das
outsl
out
mov
sti
pop
jno
push
add
test
xlat
repz
ljmp
push
push
movsb
loope
ror
inc
repz
cmp
adc
or
push
xchg
jbe
jmp
ja
pop
pop
lock
pop
test
outsb
sarl
xchg
dec
cld
xor
jae
pop
dec
nop
lock
ds
add
adcl
into
loope
mov
dec
mov
ljmp
in
stos
cwtl
sbb
mov
call
inc
fstl
fwait
repz
lods
and
xchg
stos
push
mov
aam
xchg
jnp
dec
sahf
mov
sahf
gs
jns
sbb
jecxz
jle
and
add
sahf
cs
inc
das
inc
and
jg
pop
dec
adc
mov
cmp
xlat
outsb
jae
andl
sbb
ja
mov
jae
addr16
ljmp
push
not
mov
lods
mov
adc
ljmp
inc
pop
stos
arpl
cs
das
xor
xchg
mov
mov
add
jmp
mov
fsub
fabs
xlat
fiaddl
mov
stos
enter
cmp
push
shl
loopne
loopne
mov
jmp
in
mov
lcall
test
add
loopne
push
pop
push
lret
popa
rolb
sbb
jno
cmp
nop
pop
pop
push
cmp
push
ds
fs
dec
in
xchg
jb
dec
ss
test
hlt
insl
dec
pop
lret
push
ss
shlb
in
cld
imul
cld
cli
fldenv
out
xor
loop
out
xor
push
loopne
mov
rcr
jle
cmp
pop
inc
cli
mov
daa
repnz
dec
ds
jo
addr16
sub
sub
es
jns
push
cltd
xchg
sbb
push
lahf
popa
add
xor
xchg
lcall
mov
test
insl
push
pop
inc
mov
fs
adc
stos
mov
adc
jp
daa
in
mov
sti
xchg
jne
scas
pop
and
adc
movsl
dec
loope
mov
sbb
push
fcompl
out
cld
fistps
aad
mov
push
ret
mov
scas
or
repz
xor
movsb
push
xor
fdivrs
mov
mov
xchg
push
cmpsl
xchg
ret
test
add
pushf
pop
mov
imul
int
ror
shll
arpl
xor
and
in
sbb
mov
je
xchg
sub
mov
popa
mov
ja
mov
and
sbb
xchg
xlat
and
mov
cmp
les
lods
mov
push
jb
fdivrs
arpl
push
push
int
jmp
lods
aam
add
ja
jnp
sahf
ret
fsts
push
cmc
adc
dec
in
mov
daa
pop
int
xchg
fsubr
movsl
out
inc
mov
cmpsb
mov
xor
out
mulb
pop
call
ss
push
add
inc
pushf
mov
ljmp
jo
mov
jg
jle
adcb
mov
pop
jo
jnp
xchg
int
sahf
scas
mov
les
scas
jb
fwait
xorl
cltd
pop
and
xor
push
in
xlat
shrb
in
pop
pusha
sub
mov
out
cmp
arpl
sbb
paddw
xor
int
aas
idivl
call
and
and
scas
sti
sbb
mov
xor
adc
mov
push
inc
push
negl
pop
sbb
or
lods
stc
push
pop
pop
and
lcall
push
jno
scas
push
rcrl
pop
fld
jg
xor
push
push
imul
incl
cmp
movl
lds
out
mov
jns
mov
into
adc
mov
lock
and
loop
leave
icebp
das
repz
jl
ljmp
leave
push
js
and
loope
mov
xor
adc
mov
xchg
inc
pop
add
out
xor
mov
cltd
jg
xchg
out
mov
inc
mov
daa
jmp
sub
ds
scas
jae
mov
fimull
jge
int
xchg
jp
pop
xor
cmp
cmpsb
cmp
jl
cwtl
pop
fldl
jl
and
ljmp
test
sysret
mov
mov
int
jae
pushf
sbb
gs
jno
imul
mov
or
adc
aaa
jo
push
stc
pusha
xchg
in
lds
mov
stos
mov
adc
repnz
int3
jle,pt
inc
cmp
and
in
and
sub
dec
mov
mov
mov
sub
xchg
jae
loope
ljmp
mov
out
pusha
outsl
mulb
mov
dec
ret
sti
subb
cmc
xchg
dec
sub
movsb
adcb
daa
imul
push
jnp
mov
fisubrs
outsl
bound
in
sub
adc
icebp
dec
lahf
and
pop
and
in
out
jnp
add
rclb
sub
xchg
mov
push
divb
sbb
mov
mov
in
jp
call
cmp
in
mov
pop
push
repnz
cmpsb
mov
lret
addl
mov
test
mov
jge
or
fwait
mov
adc
cs
xchg
sub
in
adc
int
jmp
imul
mov
add
adc
jo
mov
or
adc
ret
stos
lcall
xchg
je
mov
sbb
cmp
mov
sahf
icebp
rcll
int
dec
enter
addb
imul
in
psubsw
repnz
adc
aam
pop
adc
sub
jle
ret
addr16
mov
xor
aas
adc
or
xor
xchg
xchg
mov
cli
test
test
pop
leave
push
in
pop
mov
fildll
out
inc
in
fsubrl
sub
jbe
testl
les
popf
insl
xchg
mov
ja
dec
push
cmp
mov
xchg
lret
lds
jecxz
insb
xlat
adc
je
dec
mov
mov
inc
cmp
cmp
adc
popa
out
push
and
xchg
sbb
shll
mov
xchg
aad
fidivl
add
imul
xor
cmpl
jne
test
add
in
mov
leave
jge
mov
ficompl
sbbl
rorb
pop
adc
mov
cmp
mov
lcall
dec
push
sarl
arpl
shll
pop
fnstenv
lahf
jmp
mov
inc
dec
mov
sub
adc
out
out
cli
add
push
insb
lret
xor
clc
jae
adc
add
xchg
ljmp
or
loopne
test
clc
jno
icebp
mov
pop
add
lret
pop
pop
or
cmp
push
negl
pop
das
push
xor
or
lret
inc
mov
mov
popa
sbb
cmp
je
and
sub
sub
lret
cmp
mov
stc
pushf
dec
sub
pop
popf
mov
cmp
jecxz
cmp
pushf
andb
lds
clc
xor
xor
sub
cs
sbb
cmp
adc
popf
mov
mov
push
dec
lods
cmpsb
xchg
inc
jno
lret
jg
push
push
movsl
fstl
cmpsb
mov
ds
mov
adc
dec
inc
dec
out
lods
rcl
std
movsl
cmp
fs
sysexit
pop
mov
pop
cmp
mov
adc
mov
add
mov
std
adc
mov
idivw
cmp
int
lock
pop
repz
adc
and
out
sbb
pusha
decl
inc
xchg
int3
inc
mov
rclb
and
add
xor
pushf
cmpsb
lods
mov
inc
cmp
inc
xchg
shlb
lahf
in
mov
jb,pt
std
test
testl
push
or
mov
jb
cmp
adc
and
or
push
adc
adc
ljmp
lea
cmp
subl
popf
in
pop
leave
lahf
push
pop
aad
lahf
in
js
push
into
mov
inc
pop
sub
hlt
outsb
dec
insl
xchg
dec
shrl
cmp
in
ja
xchg
lds
sti
test
jb
cmpl
add
sar
andb
js
jb
jp
lret
ror
and
sub
fcmovb
mov
ss
xor
cli
mov
mull
adc
xor
or
in
js
je
stc
mov
jl
xor
insb
mov
inc
pushf
mov
loop
es
add
add
outsb
push
fdivrs
fwait
sbb
cmpb
mov
arpl
cmp
loop
aas
neg
pop
iret
pop
mov
scas
push
sub
mov
shrl
cmp
mov
in
hlt
enter
repz
or
gs
push
push
mov
data16
cs
adc
into
arpl
adc
xchg
jg
xchg
jge
dec
hlt
xorl
es
mov
inc
ljmp
ror
enter
pop
loop
jns
pushf
rcrb
scas
mov
loope
mov
dec
stos
xchg
scas
das
call
adc
out
in
mov
adc
mov
push
or
mov
adc
sub
sub
and
cmp
int3
ja
icebp
jp
sbbl
loopne
cmpsb
pop
dec
leave
inc
or
loope
in
mov
syscall
lds
sbb
xor
add
jbe
mov
icebp
push
xchg
mov
mov
sub
int3
aad
int
imul
stc
stc
mov
shl
dec
lods
cld
mov
scas
repz
push
sarb
pop
xor
je
xor
xchg
jo
mov
int
xchg
flds
mov
mov
cld
call
les
adc
mov
pop
in
mov
sub
ficompl
imul
and
xor
scas
insl
cmp
adc
mov
mov
mov
jecxz
push
ret
pushf
push
int
dec
mov
xchg
xlat
cmpsl
dec
ss
push
sti
adc
ljmp
mov
pop
std
xor
jae
fwait
mov
stc
push
imul
cmpsl
dec
jae
out
mov
mov
mov
mull
jle
leave
jl
jnp
out
pop
repnz
hlt
sub
push
sbb
dec
out
push
insb
inc
push
ja
adc
push
push
popf
mov
ret
sbb
pop
or
rclb
test
pop
lock
jmp
or
push
xchg
stos
xchg
dec
or
mov
inc
sub
stos
pop
jge
mov
jge
adc
dec
xchg
mov
xchg
daa
fisttpl
adc
popf
aaa
xchg
aaa
mov
imul
pushf
or
test
fistl
xor
je
mov
clc
cmp
out
aam
adc
into
mov
pushf
push
dec
and
and
xchg
inc
and
sarl
push
pushf
mov
repz
xchg
pop
lods
test
mov
test
mov
mov
lock
out
mov
jbe
fs
in
and
add
mov
or
inc
mov
bound
cld
mov
enter
cmp
sub
jne
insl
call
adc
movsb
iret
std
cmovbe
addl
in
test
jp
test
mov
mov
mov
xor
shlb
js
test
popf
mov
in
push
cli
sti
mov
das
in
jae,pt
sub
mov
in
adc
or
data16
sub
cmc
jmp
mov
adc
dec
push
and
test
fsubp
adcb
iret
iret
out
jae
sub
inc
iret
repnz
xchg
jmp
pop
out
sbb
pop
xchg
popa
aas
sbb
bound
mov
rclb
or
mov
in
mov
adcl
sub
adc
pop
std
pushf
add
mov
cmp
fimuls
dec
int
jmp
test
pop
sarl
cs
and
or
mov
xor
cmp
gs
cld
loopne
pop
int
das
add
pop
jmp
sub
add
pusha
mov
mov
pop
jne
pop
fwait
cmp
stos
mov
mov
mov
insl
or
adc
dec
das
xor
sub
xchg
pop
sti
mov
mov
mov
cmp
aaa
inc
inc
dec
nop
inc
add
ja
push
xchg
add
clc
dec
sub
xchg
xchg
cmc
jl
testb
nop
int3
mov
sti
cwtl
bound
in
out
int3
imul
aam
subb
out
mov
pop
push
out
popa
mov
xor
mul
inc
adc
xchg
inc
aaa
popa
xchg
push
inc
push
fmuls
fnstsw
xor
or
jp
xchg
adc
loopne
shrl
cmp
outsb
enter
push
bound
jo
pop
dec
leave
or
xor
rol
movsl
jmp
das
dec
cmp
fisttps
jnp
jl
test
repnz
and
cld
push
stos
xor
into
es
test
aam
cmpl
sbb
adc
add
bound
jge
mov
popa
jmp
into
pushf
inc
push
test
xor
push
push
inc
or
mov
testb
pop
lods
in
jmp
bound
leave
fiaddl
loope
stos
pushf
in
popf
push
cwtl
faddl
scas
sub
cwtl
jb
fcmovbe
stos
lret
mov
icebp
pusha
movsb
int
das
mov
in
in
aad
xchg
orb
in
push
inc
cli
test
jb
push
adc
xlat
push
mov
sti
or
pop
in
mov
xchg
jecxz
lds
out
xor
das
popa
call
fsubs
dec
cli
cmp
sub
aad
imul
jbe
lret
push
push
pop
je
aas
pop
lahf
lahf
in
jmp
mov
movb
or
std
sahf
mov
xor
push
in
ds
jp
aaa
jmp
jo
mov
jl
pop
nop
cld
mov
ljmp
xchg
mov
mov
jl
mov
imul
mov
cld
loope
jb
mov
cmp
mov
cmp
cs
fsts
sub
mov
mov
xchg
bound
cmp
mov
les
jae
or
push
stc
mov
aaa
fs
xor
es
mov
pop
imul
int3
dec
pushf
cmp
or
pop
int
bound
cmp
push
dec
cmc
arpl
out
movsl
icebp
sbb
pshufw
pop
mov
stc
pop
jg
mov
jmp
xor
shll
lret
imul
mov
mov
dec
jecxz
pop
mov
aad
popf
adc
inc
les
orb
mov
js
adc
pop
mov
faddl
movsl
sub
dec
cld
pop
pop
cmp
out
cs
cmc
popf
popf
mov
shlb
xchg
xor
cwtl
mov
and
lods
repz
jns
sbb
push
clc
mov
aad
sub
out
loope
mov
sahf
mov
inc
loopne
dec
loope
cld
dec
aaa
sub
lret
cli
mov
dec
shrb
push
mov
xorl
push
pop
repnz
mov
jae
pop
pop
xchg
lcall
mov
in
lahf
cmpsb
sbb
clc
movsl
jb
or
mov
lcall
fdiv
cmp
mov
mov
rorb
cltd
dec
in
out
shlb
lods
cmpsl
sub
shlb
inc
mov
movsl
or
repnz
push
cmp
adcb
and
andl
push
jecxz
inc
test
mov
jae
pop
cwtl
cmp
add
mov
jmp
movsb
cmp
clc
repnz
inc
mov
xchg
aad
push
idivl
nop
shlb
xchg
or
and
scas
jecxz
je
ljmp
leave
or
mov
pop
push
addr16
scas
js
add
inc
movsb
imul
ss
roll
jnp
fldl
and
int
repnz
out
inc
jge
addb
cmp
lret
or
cmpsl
jmp
push
adc
dec
call
popa
jmp
mov
sub
das
je
jno
test
lcall
lret
aam
dec
push
xchg
je
negb
cwtl
xchg
sti
dec
ret
jno
cwtl
cmp
lock
xlat
jle
loopne
fnstcw
jo
pusha
or
dec
or
iret
push
cltd
pop
btr
push
ss
mov
aam
cmp
or
cmp
adc
mov
or
cmc
add
lahf
xor
sti
pop
repz
inc
sbb
in
dec
push
insb
test
rcrb
lret
xor
enter
xor
lcall
imul
and
icebp
mov
adc
adc
jmp
int
sub
lcall
sahf
push
in
mov
sbb
push
stos
into
fcmovu
lods
sbb
jns
mov
repz
inc
sbb
push
mov
sub
mov
adc
pop
lods
leave
arpl
mov
iret
add
mov
pop
popf
cmp
pop
dec
mov
lods
inc
jb
mov
fucomip
mov
test
sbb
sub
in
pop
addl
in
fdivr
subl
flds
mov
and
cltd
cwtl
cmp
mov
mov
leave
sbb
pop
sub
stc
int3
xchg
sub
cltd
stos
leave
jns
fists
ds
pop
adc
sbb
xor
scas
jbe
leave
inc
punpckhwd
test
xchg
mov
push
mov
inc
push
dec
jmp
cmc
xor
pop
test
ret
cmp
sub
loopne
rorl
test
adc
mov
sub
insb
inc
out
rolb
or
decb
ret
mov
incl
lea
leave
outsl
adc
out
clc
or
mov
loop
fsubs
dec
fcoml
dec
xchg
cld
lock
xor
add
jge
stos
jp
dec
clc
add
inc
or
mov
or
cmp
rcll
xor
sub
ja
cmp
shll
enter
repz
and
jl
insb
add
cmp
loope
inc
lea
jbe
into
bound
sub
cmp
or
inc
pop
mov
xor
cld
add
pop
imul
cmc
cmp
xchg
mov
sti
sarb
and
addr16
fisttps
xchg
pop
jnp
mov
mov
xor
xor
pushf
das
scas
lods
jp
cmpsb
xchg
dec
pop
je
nop
push
dec
adc
gs
push
addb
enter
push
adc
xchg
adc
andb
pop
daa
sbb
or
adc
movsl
mov
pop
jb
std
push
cmp
stos
mov
add
mov
cltd
xchg
push
xchg
mov
xacquire
xchg
lret
jb
jle
push
into
adc
pop
repz
or
xor
mov
push
imulb
push
push
js
popa
data16
in
pop
stos
call
test
xchg
lahf
cmp
mov
repnz
lahf
mov
dec
and
es
and
sub
xor
adc
cmp
push
push
mov
xor
ret
xchg
xlat
mov
mov
jmp
hlt
and
mov
lock
sbb
dec
inc
add
shlb
xor
sbb
scas
mov
xor
mov
stos
test
or
mov
ss
pop
subb
std
popa
in
mov
xchg
stc
insl
push
movsl
mov
in
pop
pusha
pop
cld
sbb
lret
xchg
xchg
outsb
jns
into
or
in
sbb
in
mov
pop
data16
jge
into
xor
inc
popa
jbe
mov
mov
sub
cmp
mov
icebp
rcrb
mov
and
mov
sbb
inc
and
push
jae
int3
dec
andb
inc
js
shll
pop
stos
xchg
inc
xchg
sbb
lods
and
mov
pushf
in
icebp
out
mov
jp
ret
imul
sub
mov
push
inc
mov
adc
mov
fwait
lock
movsl
and
and
rol
loop
mov
xchg
loope
mov
loope
in
xchg
and
dec
sbbb
xchg
rcl
mov
pop
jb
cmp
sub
rcr
insb
daa
or
mov
std
cmpsl
mov
imul
dec
in
shl
movsb
mov
stc
into
bound
jno
orl
shlb
sub
jmp
sbb
call
stos
divl
mov
insl
nop
stc
mov
insb
mov
sub
std
cmp
lret
add
mov
aaa
pop
push
xlat
rep
cli
in
fptan
ljmp
outsl
push
stos
popa
mov
mov
mov
inc
adc
clc
popf
notl
pop
psubq
aaa
mov
mov
push
pop
fstl
std
sub
aaa
cmp
dec
and
cmc
xor
test
adc
in
insb
rorb
shlb
loope
add
std
mov
xchg
adcb
das
aaa
dec
jo
cmpb
gs
aam
pop
in
enter
test
int3
mov
mov
rcr
dec
icebp
pop
call
mov
mov
mov
sbb
int
add
ljmp
pop
pop
inc
inc
iret
addr16
inc
push
jne
js
mov
mov
push
cli
jl
cmpsl
push
mov
add
das
loop
dec
pop
and
add
lods
mov
xchg
cmp
mov
or
je
pusha
sbb
out
clc
pop
fisubs
addr16
or
push
and
les
sub
pop
popf
out
sub
or
xchg
stos
gs
or
lret
fldl
or
push
icebp
or
sub
stos
adc
je
pop
pop
jecxz
jge
or
xchg
bound
push
inc
mov
dec
push
outsl
pop
fstpl
pop
add
xor
inc
push
sbb
repnz
nop
popf
inc
push
jl
popa
arpl
pop
push
mov
sbb
mov
sbbb
inc
xor
stos
and
xor
jecxz
cmp
mov
mov
test
shlb
jb
push
pop
pop
xchg
rcrb
mov
aas
cmc
popa
loop
imul
push
pop
push
pop
popa
push
rclb
xchg
lds
add
out
testb
and
or
mov
mov
inc
mov
add
repz
scas
xchg
push
nop
fcmovnu
sahf
mov
stc
cmp
inc
adc
sbb
jl
xor
out
push
cmp
addl
gs
dec
pop
cmc
inc
add
sub
scas
jmp
mov
or
mov
jl
lret
cmpsl
push
std
and
inc
lods
lods
jnp
pop
jnp
mov
pop
cmpsb
jae
dec
aad
or
movsb
jge
inc
push
mov
pop
enter
repz
inc
aad
jae,pt
sbb
mov
lcall
mov
dec
mov
ja
push
sbb
daa
inc
outsb
sub
and
mov
pop
xor
stos
push
outsb
mov
fstps
xchg
call
adc
add
leavew
sbb
movsb
push
adcl
mov
int3
ret
scas
add
pusha
pop
jp
or
sbb
pop
icebp
push
cmp
mov
lret
jge
and
pushl
push
movsl
push
cmpsb
adc
test
out
adc
mov
mov
sahf
push
xor
data16
sahf
sahf
filds
jmp
xchg
sub
mov
das
or
lea
vpsadbw
sub
cmp
sti
sahf
inc
pop
mov
add
fnstcw
ljmp
stos
inc
push
mul
push
add
push
xor
test
out
movsb
cmp
push
pop
add
pusha
add
sub
sub
jnp
adc
and
or
push
fidivs
or
jle
cmpsl
sbb
mov
in
dec
mov
push
scas
jae
sbb
aaa
sbbl
add
movsl
pusha
cld
testl
mov
pop
sbb
adc
adc
mov
cmc
push
and
fstps
jns
xchg
cmp
cmpsl
popf
cmpsl
dec
push
xchg
out
lcall
in
cmp
push
fidivrs
mov
dec
ss
jne
ja
daa
sbb
mov
and
inc
shl
cmp
lret
lcall
sbb
enter
fwait
subb
adc
mov
movsb
notb
rorl
jno
jbe
mov
jmp
outsl
loope
jp
dec
adc
iret
test
cmp
push
paddb
pop
js
stos
mov
sbb
add
pop
les
ds
adc
rol
mov
es
jmp
push
cmp
inc
or
dec
adc
add
push
stos
icebp
stos
mov
sarb
mov
mov
jbe
xchg
xor
xor
idivl
mov
lret
mov
sub
into
mov
lcall
fistps
cmp
addb
repz
sub
rcrl
aaa
pop
sahf
jb
cs
push
cmpsb
dec
stos
cmp
xor
push
cmp
pop
out
dec
jbe
lret
mov
shl
jp
and
data16
or
mov
jnp
das
fdivl
cmp
adc
push
jne
aam
xor
mov
cmp
mov
push
mov
jmp
rclb
out
jge
clc
cmp
pop
shl
cwtl
pop
mov
rolb
adc
js
pusha
adc
popa
mov
std
into
pop
jmp
lret
and
adc
bound
test
xchg
adcb
stc
fcompl
and
jb
or
lods
push
or
enter
sbb
push
xchg
push
inc
fs
scas
lcall
arpl
pop
cmp
jns
mov
sahf
cmpsb
scas
cmpsb
in
mov
ss
cli
jle
push
jl
add
dec
outsb
shlb
sahf
out
leave
daa
mov
inc
fwait
adc
and
jne
sahf
imull
mov
sub
xchg
imul
jbe
js
mov
in
push
jne
in
out
bound
xchg
mov
sbb
jmp
mov
jnp
mov
rclb
in
bound
mov
inc
mov
mull
stos
sbb
dec
out
pop
insb
ljmp
pop
ss
jo
in
dec
sbb
lods
xlat
jg
out
nop
rclb
dec
or
push
ficompl
fcmove
push
int3
ret
mov
fsubr
out
cwtl
movl
pop
jp
ret
xchg
fdiv
mov
mov
push
pop
and
sbb
pop
dec
fstps
or
mov
lcall
adc
into
inc
or
lahf
mov
rol
pushf
xor
mov
mov
mov
dec
cmp
and
sub
cli
adc
push
shlb
sti
dec
push
mov
pop
adc
add
adc
into
in
addr16
xchg
mov
ljmp
out
mov
cmpsb
add
shll
sbb
sbb
pop
mov
cmp
push
sub
mov
mov
fwait
add
cmp
cmp
push
push
cmp
das
pop
mov
addl
pushf
lods
sub
sbb
cmp
inc
push
adc
xchg
xor
xlat
cmp
sub
cmp
imul
mov
lret
out
sub
lods
out
lock
jne
cmp
inc
or
cs
cmp
cmpsl
movsl
cs
mov
fidivl
add
sbb
mov
out
xlat
fs
or
test
jl
cmp
or
popf
jmp
push
adc
mov
and
dec
cmp
pop
dec
outsl
in
iret
sbbb
cltd
adc
ret
push
loopne,pn
jle
adc
fstpl
xchg
test
cld
xchg
inc
test
adc
sbb
xchg
mov
jecxz
push
les
lahf
enter
mov
add
and
xchg
xchg
sub
push
fldenvs
adc
pop
pushf
adcl
rcl
xchg
or
push
dec
faddl
lods
xchg
out
xlat
repnz
daa
sub
sub
ds
andl
add
mov
sarl
in
cmp
pop
mov
dec
mov
sbb
out
sbb
and
lea
cmpsl
dec
push
pusha
test
cmp
lods
fnsave
xchg
push
imul
add
sub
out
dec
jmp
dec
loop
lcall
jb
in
adc
push
cmp
inc
je
lcall
and
cmpsb
sbb
sub
sarb
test
adc
xlat
xor
popa
pop
push
imul
das
xor
inc
jge
arpl
and
inc
popf
mov
cmpsl
push
mov
orl
in
and
and
mov
in
xor
mov
mov
inc
push
push
and
imul
std
or
pop
addl
push
mov
jl
xchg
jno
leave
fistps
cld
sahf
dec
cmp
out
in
xchg
hlt
js
repz
movsl
mov
je
jecxz
jns
mov
push
fwait
fwait
ret
out
mov
mov
sub
mov
out
cltd
imul
ss
out
pop
ljmp
mov
test
mov
jae
add
push
dec
cmp
test
adcb
mov
pushf
enter
fstpl
or
in
aad
mov
ficomps
jno
out
mov
xor
fsubrs
jecxz
lret
ficomps
mov
push
push
pushf
sub
sbb
notl
fwait
mov
es
cmp
std
fisttps
cld
addl
sub
add
jecxz
fadds
adc
and
pushf
insb
fisubs
test
scas
jb
lcall
test
fcompl
inc
add
jp
and
rorb
jnp
sbb
xor
xchg
enter
inc
push
and
je
pop
pusha
push
cmp
pop
aam
mov
adcb
xchg
mov
adc
lods
xor
inc
pop
testb
push
bound
xor
pop
pop
xchg
mov
cmc
je
sti
push
pop
out
mov
or
clc
sub
mov
xchg
test
repz
xor
sti
mov
es
rolb
sub
dec
lea
aas
fidivs
insb
xor
xchg
imul
xor
pop
cmp
aas
mov
lds
ret
jb
dec
pop
insl
sahf
insl
jb
pop
xchg
jno
xor
add
xor
arpl
add
mov
mov
pop
add
out
or
xchg
roll
sbb
push
cld
std
testb
popa
push
das
dec
aad
inc
sbb
cmp
and
sbb
das
cmp
clc
mov
pusha
mov
push
push
mov
je
mov
call
aas
push
leave
arpl
loop
dec
inc
add
pop
xor
sti
rcr
das
mov
pop
lea
int3
adc
jp
and
and
inc
test
call
test
mov
enter
xchg
call
push
pop
pushf
ja
jnp
lea
mov
mov
lods
je
push
dec
cmp
mov
pop
pop
add
loop
andb
ret
add
inc
rcl
mov
xchg
std
dec
mov
xor
inc
in
mov
mov
movsl
sub
dec
test
addr16
cld
popa
xorl
leave
push
insl
mov
jmp
or
pop
cmpsb
sub
cmp
xor
inc
sub
or
flds
into
repnz
bound
fsubs
nop
fdivp
ja
daa
and
adc
jp
sahf
mov
stos
mov
inc
add
imul
xchg
and
cmp
sub
pop
jmp
hlt
mov
shll
neg
adc
sub
mov
out
in
and
iret
mov
xor
es
iret
popl
push
jl
cs
xchg
push
adc
adc
scas
push
les
aas
mov
sahf
jnp
add
push
addr16
cmp
push
push
inc
nop
sbbl
mov
arpl
xchg
fidivrs
mov
popf
pop
jl
das
xchg
fwait
cmp
es
int3
cmc
xor
mov
cmpsb
loope
idivl
adc
sub
pop
shlb
mov
fbstp
xor
jne
aad
jl
xchg
mov
aad
adcb
mov
inc
addr16
mov
dec
mov
lcall
push
imul
jo
mov
jae
je
xlat
mov
cmp
dec
sbbl
dec
dec
fcomps
in
icebp
add
pop
mov
popf
loopne
jecxz
adc
pop
push
xor
jns
test
ret
cltd
xor
mov
sub
mov
leave
ljmp
cltd
cmp
push
dec
scas
xor
cmp
lea
cwtl
pop
andl
stos
movsb
ds
pop
lea
sahf
jb
lods
das
xchg
pop
arpl
js
fwait
sub
mov
pop
es
jo
pop
es
repz
jp
adc
jns
shl
int3
adc
cltd
dec
sar
popa
arpl
in
jne
cli
cmp
dec
mov
out
pop
dec
add
and
and
ja
ds
repnz
je
incb
push
outsb
sub
std
fldl
jbe
mov
sub
ljmp
xor
shr
imulb
cld
daa
pop
in
lcall
mov
mov
outsl
adc
mov
leave
inc
insb
push
mov
add
cmp
and
inc
addr16
jnp
dec
mov
or
pop
push
pop
data16
adc
stos
xchg
push
test
mov
rorb
mov
push
inc
test
sti
jae
or
cmp
push
mov
mov
dec
pop
lods
mov
mov
adc
loopne
mov
jae
cmp
pop
inc
out
mov
repnz
addb
ror
lods
pop
push
add
xchg
and
shr
insl
cmp
inc
sti
rorb
and
cmc
clc
add
sbb
lahf
lret
jle
pop
xchg
pusha
mov
mov
pop
les
dec
ret
leave
mov
int3
sbb
mov
mov
or
dec
and
mov
decl
pop
add
aas
sbb
daa
shll
add
pushf
push
sub
sub
cmpsl
les
pop
jne
daa
imul
inc
fldpi
dec
jmp
xchg
les
push
or
xchg
in
mov
push
or
dec
dec
adcl
mov
pop
in
xchg
stc
xchg
sub
and
pop
mov
xor
es
inc
or
movsl
mov
jns
lock
out
stc
add
mov
cmp
push
nop
mov
xchg
add
mov
je
cmp
sbb
cmpsl
into
pop
pop
dec
cs
cltd
insl
mov
xchg
xor
test
and
cmp
scas
lcall
adc
cld
add
xor
inc
fwait
mov
out
sbb
enter
repnz
pop
in
sbb
jle
call
jo
jno
jl
mov
rcll
addr16
pop
sbb
mov
cmp
lret
inc
or
or
imul
prefetcht0
push
xor
mov
mov
xchg
and
insb
hlt
adc
test
mov
cmpsb
and
leave
mov
fwait
test
mov
sub
pop
out
or
shll
in
stc
pusha
ds
add
shlb
hlt
addr16
enter
jae
nop
add
pusha
cli
adc
xchg
push
dec
in
cld
mov
push
pop
pop
lock
xchg
test
filds
mov
xor
orl
mov
mov
jle
xchg
mov
dec
jno
cli
lret
jmp
std
cmc
shl
movsb
into
xchg
jge
divl
push
pop
in
sub
loop
in
popa
xchg
lret
or
out
fwait
icebp
lods
out
and
jl
inc
xor
add
lock
xchg
shll
inc
cmp
loop
js
in
rcrb
push
lds
and
jecxz
loop
frstor
lret
xchg
mov
mov
sbbl
fstpl
testl
cmpsb
rcll
out
mov
fidivrl
inc
lock
xor
xlat
inc
sub
mov
sbb
mov
mov
dec
adcw
push
cmp
push
aad
or
push
into
gs
inc
dec
mov
mov
pop
mov
add
in
xchg
inc
lods
cmp
jae
loope
cmp
mov
mov
fcmovnb
int
mov
fs
cmpsb
in
add
orl
or
pop
pop
jp
movsb
push
dec
repz
mov
or
popa
aas
int
dec
and
decb
es
xor
int
mov
or
test
outsl
and
or
xchg
mov
jae
sbb
xlat
outsl
shrb
nop
mov
lock
imul
cmp
scas
jno
mov
push
inc
lret
pop
mov
jp
inc
jae
int
push
lods
mov
xchg
mov
adc
and
inc
jp
pop
movsl
jg
xchg
dec
and
shr
int3
add
repz
push
movsl
mov
mov
imul
int
cli
out
add
add
xlat
out
popf
ja
loopne
push
jge
dec
sbb
dec
insb
movb
mov
and
fimull
sub
xor
jg
fidivrl
xchg
nop
cld
jl
sub
mov
dec
cmp
push
cwtl
inc
dec
mov
mov
mov
pop
movb
cmpsb
fwait
pushf
and
fildll
push
iret
rorb
fs
inc
aas
test
jge
es
jo
sub
lods
sbb
mov
lods
bound
shlb
imul
mov
xor
pop
jae
dec
repz
mov
xor
push
push
loopne
stos
mov
pop
test
sbb
mov
dec
fdivl
pop
jb
mov
mov
xor
aas
and
pop
fdiv
imul
sub
ficomps
inc
insl
sti
lahf
xchg
push
jp
dec
shlb
sahf
xchg
std
xchg
mov
mov
mov
fst
addl
mull
mov
daa
jno
into
xchg
cmp
test
mov
xchg
push
mov
jnp
xor
inc
cltd
fs
sbb
add
ljmp
inc
sbb
xchg
aad
int
iret
push
jmp
and
gs
cltd
fs
aaa
subb
add
scas
xchg
pop
or
out
movsb
sbb
jnp
int
mov
cmc
dec
subb
ljmp
push
pop
rcr
sub
scas
daa
mov
loopne
ds
push
or
subb
jecxz
add
and
movsb
inc
loope
push
sahf
and
daa
mov
jle
dec
enter
orb
push
mov
lods
jbe
xchg
lods
sub
sbb
xchg
out
jge
jg
lock
testl
frstor
vandps
or
insl
cli
sarb
and
pop
mov
jmp
push
out
xchg
ficoml
add
mov
add
cmpsl
xor
sarb
pop
test
or
test
stos
or
movsb
or
test
xor
add
inc
das
cld
addb
cltd
add
add
notb
addr16
xchg
jl
imul
xor
pop
popa
xchg
xchg
dec
cmp
leave
int3
sub
xor
mov
leave
mov
and
mov
js
repnz
xchg
icebp
add
jae
push
cmp
subb
and
or
sbb
movsb
fdivl
adc
sti
xchg
bnd
stos
mov
cmp
pop
add
and
xchg
ljmp
adc
xor
dec
pop
loopne
sub
adc
sub
nop
adc
rcr
lahf
mov
adc
cltd
and
push
daa
aam
andl
jo
xor
call
out
jmp
int3
push
inc
lret
ljmp
fisubl
adc
pop
mov
call
test
shll
mov
jne
and
sub
aad
xor
outsl
negb
mov
mov
adc
mov
push
mov
xor
das
cmpb
jbe
mov
inc
in
add
and
sbb
or
sbb
repz
mov
mov
inc
dec
jo
lahf
xor
es
xchg
push
shlb
xchg
inc
cvtpi2ps
inc
in
xchg
and
dec
test
add
xchg
shlb
bound
jmp
pop
add
test
push
loop
jo
cltd
loope
push
lock
add
dec
mov
test
in
and
test
int
es
inc
pushf
mov
or
roll
push
lock
push
jmp
sbb
push
xlat
mov
push
aad
cmpsl
in
adcb
imul
sub
mov
clc
arpl
lcall
es
adc
psllq
fucom
cmp
add
sbb
push
ret
pushf
sub
testl
daa
adc
sub
imul
jno
out
ss
adc
inc
mov
xorl
scas
xchg
mov
sbb
fnstsw
cltd
pop
repnz
out
out
in
jp
leave
mov
lds
jnp
mov
push
and
push
hlt
add
inc
out
inc
adc
hlt
xor
xchg
push
xor
mov
mov
iret
mov
fstl
and
repnz
sub
xor
fistps
aas
xor
push
xor
sarb
pusha
sub
in
subb
mov
mov
push
scas
push
mov
movsb
adc
sarb
stos
addr16
xchg
fld
test
aam
loope
in
pushf
subl
fimuls
notl
push
xchg
stc
jo
loope
testl
popf
inc
push
sub
bsf
js
xchg
rep
sub
mov
mov
mov
sahf
add
lcall
jmp
es
leave
daa
jmp
and
lret
imul
pushl
pop
xchg
cwtl
movsl
fsubrl
lret
mov
lret
xchg
jne
stos
push
mov
imul
xchg
rorb
mov
and
mov
jae
mov
and
and
mov
adc
shr
dec
adc
xchg
or
js
mov
neg
leave
fistpll
cmpsb
ja
data16
pop
iret
pop
bound
sti
sub
mov
and
or
jbe
mov
movsl
fbstp
jae
pop
repnz
mov
stos
mov
sbb
enter
mov
addl
jl
es
jge
das
mov
xchg
mov
mov
jnp
loopne
lea
sub
ljmp
inc
clc
inc
std
jp
lds
adc
and
cmp
sti
jo
xor
sbb
clc
addb
inc
mov
sub
in
push
ret
push
xor
xor
frstor
pop
dec
and
mov
inc
addb
inc
cmp
push
push
loop
adc
cmp
lods
xchg
out
sub
fmul
pop
and
vpextrw
lds
ja
add
idiv
xchg
mov
mov
pop
adc
sub
inc
xchg
xchg
lods
clc
mov
clc
in
ficoms
pop
call
pop
repz
repnz
fisttps
push
stos
pcmpeqw
cmc
xor
popf
pop
in
mov
or
and
hlt
ret
movsb
add
cmpsb
mov
push
subl
pop
cmp
mov
cmpsl
repz
add
or
js
mov
aam
dec
sbb
ret
adc
js
dec
fsubrp
mov
jno
dec
aad
test
mov
test
arpl
cmc
or
stc
push
ret
cmp
push
jecxz
in
mov
sub
mov
jbe
insb
jb
out
dec
sub
jecxz
push
sub
arpl
mov
and
push
addr16
sahf
pop
mov
lret
fisttps
aas
test
les
std
or
inc
mov
inc
mov
xchg
xlat
int3
and
outsl
cmp
lods
push
fadds
dec
mov
push
cmp
std
pop
or
int
fdivrp
jae
addl
jmp
aad
stos
outsb
call
data16
loopne
jne
jae
sub
mov
xchg
add
jne
in
sub
aaa
or
jb
es
xchg
fmull
xlat
imul
popf
shrl
loop
inc
icebp
test
jb
ror
push
loopne
repz
push
mov
jg
add
mov
arpl
dec
aad
decb
adc
jge
aas
xor
push
inc
stos
fimull
ret
lret
int3
push
push
cltd
invd
push
pop
sub
mov
or
sub
sbb
test
cmpsb
sub
ret
xchg
mov
out
jb
adc
addb
inc
cmpsl
cmc
or
xchg
inc
dec
inc
jl
pop
mov
dec
lahf
push
enter
push
in
jmp
stc
xlat
aam
cmpsb
add
and
pop
shr
fistps
push
rorl
jmp
jecxz
fisubrl
cwtl
push
ss
jae
adc
pusha
adc
repz
jo
pop
jb
xchg
push
add
inc
in
aaa
sti
scas
add
popf
pop
pop
repnz
jae
jle
pop
fdivr
mov
cmpsb
pop
sbb
dec
adc
push
lock
or
hlt
cmpsb
sub
call
inc
or
jge
add
nop
and
xchg
sbb
movsb
push
add
mov
xor
mov
mov
jl
push
fisubl
mov
in
and
mov
sbb
out
lods
and
add
mov
sbb
imul
leave
sub
out
leave
dec
adc
loop
arpl
nop
js
push
stos
fdivs
loopnew
and
cli
pop
pop
mov
ret
cmp
pop
sbb
mov
enter
mov
mov
mov
sahf
push
push
scas
jno
les
pop
push
clc
addb
mov
das
xchg
adcl
leave
mov
ret
test
in
out
mov
aad
icebp
popf
jns
std
neg
repz
add
adc
sbb
sbb
xor
aas
and
in
repnz
push
sbb
fnstcw
push
dec
xchg
popf
ja
push
and
out
inc
movsb
inc
dec
inc
aad
pop
mov
inc
out
nop
out
loop
movq
stos
cli
mov
add
or
mov
cmpb
pop
cmp
ret
bound
into
or
popf
aaa
jnp
es
std
fcoms
sbb
mov
inc
add
popf
push
fldt
movsb
lods
and
into
dec
out
push
inc
and
insb
iret
out
inc
lods
notl
loopne
stc
adc
pop
xor
clc
sub
clc
popf
inc
push
mov
lea
dec
ss
inc
push
decl
sbb
repnz
ud0
xchg
stos
test
popa
cmp
xchg
fldcw
scas
mov
outsl
sbb
enter
cmp
sbb
adc
jmp
sbb
popf
mov
aas
sbb
data16
mov
mov
mov
add
ret
jp
cmp
pop
insl
inc
sub
sub
in
daa
mov
out
jmp
mov
sub
and
add
bound
popa
popa
xchg
fisubl
lea
mov
add
add
nop
mov
mov
or
or
loopne
out
out
inc
pop
adc
rcr
es
or
clc
out
enter
pop
adc
lcall
out
xchg
mov
add
push
test
jp
sub
or
pop
lods
lret
jno
fldl
jo
sub
out
add
adc
lcall
jb
test
adc
inc
rcr
ret
pop
cmc
pop
call
fnstsw
inc
mov
mov
push
mov
pop
xor
pop
scas
push
push
mov
push
sbb
pop
fsts
shlb
pop
popf
push
out
mov
popa
jne
cli
in
sub
popf
jno
sarb
add
pushf
sub
or
cmpb
push
movsb
push
sets
loopne
bound
shlb
push
subl
sub
popf
leave
in
add
loope
xchg
sub
mov
mov
fistpl
xor
sub
dec
clc
fisttps
mov
push
lods
jns
jae
std
xor
aas
ret
test
out
dec
jbe
ja
stos
not
and
je
in
xchg
mov
xor
mov
adc
dec
lds
xchg
sub
cld
int
xor
gs
push
inc
daa
dec
std
push
and
out
out
mov
scas
scas
pop
sbb
inc
mov
xlat
into
adc
ds
arpl
adc
pop
enter
mov
fmuls
stos
roll
fwait
pusha
jno
sbb
das
pop
and
int3
cmp
adc
cmpsb
cmp
pop
hlt
add
push
test
test
cmp
cli
sbb
cli
adc
mov
int3
sbb
push
pop
outsl
sub
js
mov
lods
pop
roll
dec
orl
pop
push
clc
pop
and
popf
cmpsb
lods
fldl2t
mov
sbbb
xor
mov
je
dec
dec
sub
dec
cli
subl
xor
inc
sahf
sarb
xor
ja
jbe
test
mov
and
call
ds
push
arpl
nop
cmc
clc
mov
sbb
shlb
in
pop
mov
ss
rorb
dec
inc
lret
adc
popf
ffreep
add
sbb
imul
call
jmp
fcoms
loop
add
cmc
mov
jp
sub
call
cltd
sti
sbb
sub
push
stos
mov
adc
lret
pop
xchg
loope
addr16
pop
test
hlt
fxtract
add
filds
and
divb
sar
jne
mov
outsb
push
cmpsb
cmp
js
out
les
aam
addr16
or
fs
test
push
push
fwait
add
iret
sbb
push
in
adc
fs
js
pop
or
icebp
mov
adc
sub
mov
cwtl
or
outsb
loop
testl
cmp
cmp
subl
pusha
cmpsl
arpl
movsl
and
jmp
out
call
push
in
mov
xor
and
xor
bnd
pop
nop
mov
mov
sub
imul
lea
call
push
idiv
popf
jo
mov
push
xchg
xchg
xor
sub
outsb
jmp
inc
dec
inc
inc
push
jge
mov
lcall
testl
mov
push
sub
lcall
xor
leave
ret
inc
dec
jmp
jno
addl
call
out
push
jae
jo
mov
popf
xchg
or
jmp
mov
pop
add
fdivs
shll
push
push
shll
pop
stc
test
das
pop
mov
pop
xchg
out
fsubp
lret
push
es
inc
sbb
mov
push
jge
cltd
in
aam
push
loop
negl
xchg
cmp
mov
repnz
outsl
or
ds
pushf
xor
or
outsl
aad
jb
mov
push
mov
inc
and
ficompl
xchg
loop
icebp
inc
mov
xor
mov
add
inc
push
cmp
iret
add
int
lock
jl
ret
xlat
xchg
cmc
lret
cmc
negl
jge
mov
sbbb
lret
jno
addr16
int
in
mov
or
pop
mov
xchg
inc
jbe
imull
and
int3
int3
das
lcall
bound
loop
lea
test
movsb
ret
std
mov
mov
adc
sub
jbe
mov
push
mov
adc
push
jle
addr16
cltd
pop
xchg
aaa
mov
mov
or
divl
inc
inc
loopne
cltd
xor
sbb
cmpsb
pusha
call
dec
adc
and
lret
adc
xor
adc
rorl
pop
mov
push
cmp
aad
fistl
lret
or
int
push
jmp
addr16
sbb
mov
mov
jnp
xchg
push
loope
xor
push
gs
sub
jge
sub
jb
test
add
jecxz
insb
pop
inc
xchg
ja
and
popf
in
add
sub
mov
mov
xor
mov
cltd
xchg
int3
add
pushf
pusha
mov
cld
test
jmp
mov
adc
sub
xor
cld
xchg
push
push
dec
mov
adc
clc
mov
mov
cmp
dec
push
cmp
ja
add
test
push
xchg
xor
pop
inc
mov
pop
pop
cwtl
lock
jbe
mov
dec
push
scas
push
add
imul
stos
add
add
mov
cmp
jnp
rcr
cs
sti
push
sub
sub
cmpsl
scas
cmp
and
xor
push
pusha
outsl
enter
movsl
cs
mov
mov
mov
ja
das
or
dec
inc
call
cmp
mov
mov
mov
data16
out
ret
add
imul
shrb
dec
sub
adc
iret
lret
xchg
pop
push
vshufps
fmul
push
loop
and
jmp
push
dec
fmul
pop
loope
out
mov
call
jno
ss
leave
sub
adc
xchg
add
in
jae
dec
aam
jle
jns
xchg
loop
es
xchg
mov
fdivl
mov
xchg
test
lret
dec
sbb
mov
sti
nop
cmp
sub
daa
gs
push
mov
xchg
add
mov
imul
scas
fisttps
lds
jp
iret
ret
pop
test
sahf
gs
xchg
adc
out
pop
mov
cmp
inc
mov
cmpsl
adc
pop
cmpsl
lret
mull
dec
call
mov
test
pop
pop
rcl
in
sub
inc
rcr
mov
mov
aad
ret
sbb
es
push
cmp
dec
mov
jg
mov
push
sub
mov
jbe
or
loop
mov
mov
in
clc
or
dec
xor
mov
jle
hlt
jle
scas
clc
cmp
outsl
sub
add
jno
mov
dec
dec
mov
dec
jns
jg
dec
sbb
add
aam
or
nop
adc
mov
mov
xchg
cmp
ljmp
cmp
xor
add
pop
cld
lcall
nop
sbb
movsb
push
cli
mov
cmp
outsb
lds
out
xor
cmpsl
cmp
lods
sub
xchg
cli
pop
filds
pop
adc
mov
mov
fistl
scas
es
cmpsb
adc
xor
bound
xor
sub
jne
xchg
lcall
add
insl
mov
out
mov
shr
jnp
into
fnstcw
cs
loop
subb
jge
scas
mov
popf
push
and
mov
jne
xchg
aaa
jl
stc
adc
and
or
cmp
sbb
xor
push
or
repz
xor
mov
stos
mov
ss
bound
and
testb
jmp
pop
testl
jl
rcl
fdivl
mov
pop
adc
adc
jp
out
sub
ja
or
daa
or
inc
mov
lahf
dec
jo
and
pop
fisubrs
pop
js
adc
cmp
add
lret
aam
push
inc
cld
jns
xchg
icebp
les
add
dec
jno
not
xchg
sub
inc
inc
imul
out
pop
add
jns
push
and
cltd
scas
add
xor
pop
jge
cs
or
into
mov
and
shlb
mov
lahf
cmp
dec
xchg
mov
mov
cmp
cmp
jecxz
loopne
mov
ret
add
lret
nop
iret
mov
stos
stos
adc
test
mov
scas
mov
xchg
add
dec
cmpsl
aam
cld
adc
loop
test
pop
sti
push
mov
es
xor
xchg
rolb
jnp
scas
in
in
sub
adc
test
icebp
pop
mov
js
data16
adc
xor
add
xchg
push
jne
aam
loopne
xor
push
jbe
mov
sub
hlt
in
fwait
mov
jns
testb
aad
enter
push
mov
jecxz
cmpsb
insl
rorb
shrl
cmp
in
sub
mov
push
dec
pop
out
rcl
ret
mov
jl
ss
push
xor
test
movsl
daa
pop
repnz
gs
lods
dec
mov
adc
outsb
jge
xchg
mov
shlb
xor
mov
push
pop
in
popf
nop
cmp
scas
hlt
jbe
shll
ja
push
mov
mov
cmp
adcb
int3
dec
jge
loope
mov
adc
aam
inc
scas
add
pop
movsl
add
sarb
cmpsb
es
push
sub
data16
subb
loope
data16
xchg
imul
xchg
cmp
dec
sub
ret
ss
mov
xchg
mov
nop
test
mov
dec
jle
mov
insl
sub
stos
push
mov
clc
push
clc
mov
aad
xchg
stos
adcb
sbb
movsl
or
aam
mov
lds
lret
ret
data16
add
sub
nop
sbb
xor
or
sti
mov
jae
sahf
sahf
pop
mov
xor
out
fdivrs
call
icebp
cmp
mov
jp
mov
mov
mov
cmc
sar
lods
adc
or
cmpsl
mov
inc
add
ficompl
icebp
sub
mov
fwait
jb,pn
push
loopne
inc
stos
hlt
stos
push
insl
jecxz
jle
out
imul
mov
sbb
popa
adc
hlt
add
adc
pusha
popf
push
inc
lret
rcrb
es
daa
add
in
js
mov
push
dec
dec
xchg
jecxz
fstpl
mov
mov
jb
movb
pusha
jecxz
mov
sub
ds
xchg
mov
lahf
gs
inc
sti
or
pop
outsl
push
arpl
xchg
pop
or
mov
std
das
pusha
sbb
and
pop
filds
mov
jp
push
cmpsl
negb
shll
stc
jns
or
test
mov
in
in
out
and
mov
popf
addr16
cltd
fists
and
int3
jle
dec
xchg
fdivl
lcall
ffree
std
xchg
loop
aam
je
stos
stc
jne
fnstcw
leave
in
movsb
jecxz
cmp
mov
inc
jo
clc
lock
mov
pop
sbb
dec
mov
fucomip
scas
sbb
jns
lock
inc
mov
ds
icebp
out
inc
test
call
inc
std
and
xor
jmp
mov
movsl
dec
lock
loop
xchg
ret
int3
xor
pop
lahf
daa
scas
add
pop
inc
inc
mov
shrb
mov
fcmovbe
scas
mov
and
push
mov
iret
jle
push
cmp
pop
push
sub
or
dec
inc
adc
push
or
mov
mov
xor
dec
scas
ja
in
pop
mov
pop
mov
sub
xchg
and
repnz
and
add
dec
mov
cld
mov
lods
in
or
inc
pop
sbb
cmp
xlat
addr16
fisubrl
mov
aas
adc
gs
fnstenv
mov
repnz
or
xchg
mov
xchg
loop
testb
int3
pop
ret
cmpsb
xchg
lahf
mov
jmp
mov
mov
scas
pop
sbb
daa
sbb
xchg
imul
stos
insl
inc
loopne
sub
pushf
cli
ljmp
or
int3
js
fwait
xorl
aad
arpl
adc
xchg
sub
mov
jp
add
mov
mov
cmpsb
jno
nop
mov
xor
dec
jmp
push
shrb
cmpsl
js
mov
cmp
pop
sbb
xorl
lret
mov
xor
mov
aas
sub
mulb
lds
cs
cmp
adc
insb
lock
ss
and
and
dec
lods
orb
or
pop
sub
cmp
jle
dec
ret
lds
nop
dec
fwait
xor
subb
jno
dec
xchg
addr16
and
push
pushf
mov
dec
pop
xchg
repz
jmp
andb
mov
ja
cli
ds
dec
mov
jno
imul
fcomi
jb
cmp
push
jmp
mov
inc
pop
xlat
rorl
fstps
aad
cwtl
lahf
pushf
mov
adc
adc
addl
xorb
cmp
add
popa
mov
and
ror
daa
or
cwtl
add
loope
add
cmp
arpl
insl
repz
dec
dec
test
add
dec
dec
mov
rolb
push
subb
mov
mov
xchg
dec
fnstcw
xorps
add
movsb
rorl
fidivrs
mov
out
movsb
mov
and
mov
xchg
lods
ficoml
imul
lods
and
sahf
inc
rclb
call
and
das
ss
ljmp
loop
adc
cmp
insl
or
sub
test
loop
cld
or
fsub
jmp
test
xor
nop
stc
xchg
lret
imul
daa
sbb
jne
lret
and
xlat
imul
pop
iret
insl
fisubrs
pop
push
sub
sbb
mov
clc
sbb
je
push
add
orb
daa
mov
imul
in
mov
in
outsb
cmp
or
popa
push
fwait
adc
jnp
outsb
xor
insb
shlb
iret
mov
or
pusha
pop
mov
aaa
jp
push
fwait
mov
mov
sbb
popa
pop
fstpl
cmp
test
dec
xor
stos
jmp
sarb
cld
adc
xchg
repz
mov
or
cltd
jg
sti
sbbb
and
jge
xchg
in
sarl
sti
jae
ss
sbb
add
pop
fadds
mov
xchg
je
sub
sub
imul
xlat
rorb
leave
pop
sub
cmpsl
or
fucomi
adc
cmp
repz
out
test
mov
inc
mov
mov
mov
and
add
fs
inc
sub
cmc
mov
sbb
mov
add
or
out
hlt
push
mov
mov
pop
jne
lahf
sti
add
push
repz
inc
test
aas
js
mov
and
enter
mov
test
movups
sti
ja
in
push
cmp
dec
shll
sahf
loop
int3
adc
es
test
loopne
push
xor
xor
or
ss
mov
rcr
nop
aaa
mov
mov
sub
xlat
xchg
sbb
sub
test
push
shl
div
lahf
clc
inc
movsb
adc
fstl
cmp
andl
inc
mov
shll
pop
fimull
fs
mov
lret
aas
mov
pusha
loope
pop
es
push
and
add
sub
pop
ficoml
test
xchg
dec
out
cltd
jns
cmp
dec
mov
dec
adcb
enter
ret
or
push
mov
bound
jae
and
enter
loopne
addr16
xchg
sbb
out
insl
test
rcrb
mov
adc
xorl
xchg
daa
fwait
pop
pop
hlt
push
cmp
aas
pop
test
pushf
and
lahf
fcompl
xor
shrd
dec
adc
xchg
adc
fcomip
call
xor
cmc
cmp
lods
cli
out
in
lret
popa
pop
cmpsl
cmp
pop
dec
test
jnp
dec
xor
jns
push
call
std
ja
dec
dec
mov
mov
inc
scas
sbb
inc
call
stc
xor
push
jle
outsl
mov
andl
push
ds
lahf
adc
icebp
loop
pop
daa
hlt
mov
mov
outsl
adc
add
mov
mov
adc
nop
movsl
inc
scas
popa
loopne
add
imul
insl
mull
sub
adc
addl
movsb
dec
jbe
fildll
add
hlt
pop
enter
sub
and
into
test
xchg
faddp
dec
push
push
mov
sarb
out
sbb
rorl
adc
cli
inc
pusha
imulb
cmpl
js
push
mov
outsl
push
std
outsb
fnstsw
lea
xchg
mov
ret
inc
pop
push
jecxz
stc
fs
aad
push
cmp
sub
or
cltd
lahf
add
das
aad
and
and
or
das
mov
mov
push
push
lret
cmp
mov
push
cwtl
mov
ds
xchg
in
mov
sub
pop
jae
cmp
test
cmpsl
aad
and
sbb
loopne
in
add
add
add
pop
pushf
arpl
into
mov
cmp
ljmp
popf
mov
dec
sbb
out
jge
orl
int
cmp
loop
lea
not
lcall
mov
aas
jnp
imul
cld
and
or
fstps
xchg
cmp
lock
push
lock
or
or
and
pusha
add
loope
bound
or
and
push
fistps
xor
mov
xor
inc
pop
jmp
popa
fs
dec
loope
push
pop
add
lock
push
pusha
inc
inc
ss
xchg
idivl
in
ret
mov
mov
sub
out
rcrb
ret
fwait
imulb
test
fidivrs
pop
cmp
mov
mov
mov
scas
pusha
hlt
pop
xchg
mov
jae
mov
aam
mov
xchg
lods
stos
lret
pusha
mov
ror
flds
stos
push
add
sbb
jnp
fsubr
in
jge
das
fldl
je
and
test
adc
fiadds
xchg
rolb
push
sbb
rorb
push
pop
shlb
fidivl
int3
adc
repz
sahf
scas
fidivs
xor
jle
in
rolb
clc
xor
push
sub
sbb
gs
pop
out
hlt
or
push
sbb
je
daa
add
mov
into
stos
jmp
push
or
xchg
cltd
in
out
sub
clc
cmp
sub
add
inc
add
push
leave
push
jnp
jno
bound
add
mov
fxtract
mov
inc
negl
or
pop
jg
icebp
mov
popa
daa
ss
and
incb
dec
cmp
jne
in
mov
pop
or
loop
and
fs
or
fwait
inc
mov
cmp
xchg
add
fidivrl
sbb
ror
aam
clc
jle
js
xchg
aas
in
into
adc
pop
or
push
popf
adc
mov
pop
fists
loope
aam
cmpsl
ret
xor
jne
mov
push
xchg
js
or
rclb
test
stc
adc
mov
pop
cmp
dec
out
ja
jmp
clc
fldcw
adc
pop
out
in
mov
rcr
adc
fscale
aam
mov
mov
in
add
inc
jmp
inc
test
xchg
push
push
cld
cmpl
add
test
mov
lods
push
ljmp
ss
and
addl
outsl
push
les
rcrb
pop
les
push
mov
outsl
pop
push
or
dec
adc
mov
cmp
xor
repnz
pop
sarb
lods
xchg
inc
cmp
cmp
xor
and
mov
pop
jnp
sbb
push
out
aaa
sub
call
insl
imul
and
xor
ljmp
addr16
movsl
add
shrb
push
int
cmp
inc
loopne
pop
push
out
sbb
mov
test
lret
in
repnz
jmp
ficoms
sar
inc
fsub
arpl
xchg
shll
out
movsb
sub
nop
subb
mov
in
ret
mov
out
pushf
imul
imul
mov
sbbb
adc
rol
push
lret
mov
adc
cmp
insl
js
or
dec
add
lods
mov
and
sbbl
cld
rcrb
mov
sbb
stc
daa
pop
int
in
mov
imul
mov
in
js
pushf
lret
ret
push
mov
dec
sub
lock
xlat
jbe
jo
or
add
mov
or
mov
jae
pop
test
inc
mov
mov
xchg
ds
adc
sbb
pop
out
fidivs
push
jmp
push
pop
out
push
mov
or
flds
ss
mov
xchg
out
dec
movsl
arpl
rcl
int3
lods
cmovp
std
movsb
adc
pusha
cmp
imull
out
outsl
or
sub
insl
pop
xor
frstor
sbb
movsb
fdivrl
or
js
inc
adc
cltd
decb
or
adc
lods
jbe
notl
hlt
xchg
sbb
fcmovne
push
repz
inc
insb
popa
cmp
insl
pop
mov
in
inc
in
push
cmp
jb
loope
sub
sub
jb
repz
in
stc
or
jae
inc
xor
es
je
das
mov
sub
mov
inc
cld
adc
dec
stos
mov
jl
call
pop
dec
inc
add
mov
and
jo
test
sbb
in
or
dec
jp
add
nop
clc
jae
pop
mov
fsts
fucomi
adc
mull
cli
shll
loop
dec
test
call
mov
mov
xchg
jmp
stos
lds
push
push
xchg
and
addb
xchg
daa
ss
test
jp
out
rorb
add
fistps
call
lret
fiaddl
inc
push
mov
aam
test
add
pop
mov
insl
loop
cmp
xor
movsl
jo
mov
jne
adc
or
push
and
pop
dec
shll
inc
sub
sbb
js
fcomip
push
xchg
mov
pop
add
daa
outsb
pop
stos
test
sahf
or
xor
inc
lds
shrb
push
rorl
addr16
dec
jmp
cmpsl
or
sbb
jo
sub
icebp
xchg
rolb
aam
nop
mov
dec
std
dec
ficoml
in
cmp
xchg
pushf
scas
sub
es
repnz
xor
xor
pop
pop
mov
push
jnp
jecxz
out
shlb
sarl
mov
add
ret
andb
push
pop
aas
mov
xor
shrb
pop
dec
ljmp
cwtl
mov
mov
call
xbegin
shll
cld
std
xor
and
or
mov
popf
iret
fwait
xor
sub
sub
jecxz
outsb
std
test
xlat
xorb
gs
xor
inc
pop
out
inc
paddd
push
out
in
pop
or
cmpsb
cli
pop
push
sub
loop
pop
and
fbstp
pop
pushf
and
out
iret
fldenv
adcb
push
outsl
dec
ds
inc
cmpl
mov
ret
dec
loop
cmpsl
enter
fsubrl
test
out
add
or
mov
sub
rcrl
outsb
aam
pop
sbb
mov
push
imull
push
test
or
cltd
roll
push
in
lds
pushf
inc
imul
loopne
push
pop
xchg
and
xchg
ret
test
jp
fs
xor
dec
inc
cmp
or
cmp
or
inc
add
fidivs
sahf
mov
or
jae
iret
fdivp
dec
pushf
in
jno
popa
push
in
mov
inc
xchg
mov
xlat
inc
rcrb
fnstcw
sti
mov
jge
repnz
push
ljmp
fwait
inc
imul
mov
rclb
aas
push
xchg
sub
daa
test
scas
repz
xchg
das
xor
int3
lahf
imul
fdiv
cmp
loop
shl
andl
cmp
xor
cmpsl
lret
add
inc
adc
jns
fxch
hlt
xchg
andb
and
in
sub
and
daa
cmp
jmp
pop
xor
pusha
sbb
lret
mov
dec
fcomip
push
lcall
xchg
or
mov
fstpl
push
in
imul
idivb
orb
sub
lea
inc
mov
cmp
mov
jp
loopne
or
ret
xor
lock
inc
pop
xchg
mov
adc
test
jp
loop
insb
shrb
adc
pop
fldl2t
sbb
cmp
ret
pop
setp
loop
push
dec
fisttpll
icebp
scas
pop
dec
leave
cs
xor
inc
inc
std
pop
xor
mov
push
out
scas
insb
insb
pusha
jno
and
rcll
in
add
inc
aad
push
mov
dec
mov
pop
pop
mov
mov
bound
stos
enter
cmp
push
and
hlt
cmpb
and
cmp
jp
rorl
rcl
dec
sahf
inc
es
mov
int3
iret
cltd
pop
cmp
lods
or
xor
sub
pop
in
jno
dec
sub
push
sbb
mov
mov
push
push
mov
hlt
sbb
cmpsl
and
push
sbb
sarb
jno
adc
sbb
sub
xchg
cmc
xor
mov
jle
xor
idivl
scas
add
test
ret
out
daa
cmpsl
mov
mov
pop
test
rcrb
outsl
pop
int3
inc
fnstsw
mov
mov
out
addl
test
test
sub
pop
aas
add
aaa
push
sub
test
add
add
jns
xchg
mov
xor
xor
test
sub
dec
xchg
mov
push
call
dec
inc
inc
jno
test
pop
rclb
xchg
push
and
dec
sub
xchg
xlat
stos
pop
mov
jbe
push
or
pop
and
into
mov
mov
popa
popf
js
popa
std
mov
jl
pop
mov
cmpsb
out
cmp
rcl
mov
nop
jg
scas
arpl
pop
add
or
mov
lock
rcrl
or
test
scas
fiaddl
fstpl
jmp
es
jo
and
jns
pop
imul
mov
cmp
popa
push
outsb
aas
imul
push
lcall
xchg
daa
les
adc
mov
xlat
nop
sub
adc
insb
in
adc
pop
mov
es
sbb
mov
fsubrp
jbe
mov
popa
rolb
inc
dec
jnp
jo
fidivl
mov
fyl2x
cwtl
cmp
xchg
call
pop
movsb
push
out
cmp
sub
data16
sbb
test
rcl
jns
movsb
pop
fptan
fwait
push
ljmp
adc
outsl
cmp
pop
pushf
sbb
xchg
pushf
mov
push
cmp
andl
imul
loop
xchg
jge
mov
or
push
mov
fisubrs
adc
cmp
pop
out
cs
mov
mov
or
mov
shrd
sahf
push
mov
push
mov
xlat
xor
pop
outsb
push
fucomip
les
daa
clc
mov
lods
jnp
mov
push
test
ja
mov
cmp
cmp
hlt
jno
ds
in
lcall
lcall
cmp
stos
lods
add
fldcw
jnp
cmp
std
cmp
sbb
mov
dec
cmp
and
adc
in
cli
push
lock
dec
pop
dec
mov
pop
shr
pop
cmp
lods
lea
cmpsl
cmp
arpl
ljmp
sub
xor
bound
int3
mov
or
shld
addr16
cmp
mov
jo
lcall
sbb
and
into
cmp
repnz
or
and
jns
jne
shrl
fcomip
mov
pop
std
xlat
mov
shl
mov
push
adcb
or
imul
push
call
jp
mov
cltd
lds
xchg
or
push
outsb
push
jbe
inc
xchg
mov
inc
mov
pop
je
sgdtl
bound
and
insl
add
push
fnstsw
subl
pop
lods
and
xorb
pop
xor
movsb
outsl
pop
dec
lods
mov
sub
loop
add
push
cltd
cwtl
inc
int3
xor
push
fstl
jl
mov
imul
rolb
mov
test
xor
andb
std
pushf
xor
std
xor
icebp
push
adc
insb
popa
insb
mov
add
dec
pop
cmpsb
push
rclb
lea
pop
fnstenv
push
std
lret
and
fs
rcrl
jle
pop
push
movsb
sub
adc
or
test
mov
xchg
mov
rcll
imul
jnp
paddsw
int
out
shrl
inc
jnp
mov
jmp
jnp
fdiv
popa
rorl
loopne
cmpsb
cmpb
ret
and
fcompl
mov
repz
cmp
adc
mov
xchg
and
int3
aas
shl
mov
dec
cwtl
jb
and
sub
out
js
xor
pop
push
push
hlt
jb
popf
data16
cmp
pop
cmpsl
call
stc
mov
adc
jns
mov
cmc
jg
push
cmpsb
mov
or
test
lcall
pop
test
outsl
stc
filds
sub
xchg
inc
add
xchg
mov
sbb
adc
fsubl
mov
mov
repnz
push
sbbb
dec
push
sub
sub
xor
adc
mov
dec
mov
pop
pop
into
mov
lods
push
sbb
testl
mov
jno
loop
push
test
dec
jl
insl
or
scas
inc
mov
nop
gs
push
cmpsb
fnstcw
add
pushf
cmc
and
inc
dec
faddl
jg
pop
arpl
cmc
sub
mov
push
jnp
lock
loope
mov
mov
mov
lret
sub
xchg
jecxz
sub
xor
lret
mov
icebp
xchg
repnz
jge
clc
sarl
fucomi
jne
xor
popf
inc
insb
cltd
cmp
jnp
loop
lahf
cmp
jb
jecxz
js
cli
mov
repz
pop
or
xor
inc
dec
movsl
and
jle
mov
frstor
cmp
int
inc
xor
lret
push
imul
mov
loop
mov
outsb
sarb
lret
inc
shrb
sbb
imul
stc
push
pop
add
adcb
xchg
in
sbb
call
sti
imul
mov
ret
lds
xchg
loopne
fldl
pushl
push
mov
jno
lock
movsb
cmp
or
lret
fstps
fstl
js
adc
pop
fisubl
cld
ret
cmp
pop
add
lods
add
gs
lret
sub
sub
and
rcrb
and
sub
arpl
fimuls
sub
cmc
jne
and
daa
push
insl
loope
sbb
xlat
out
xadd
inc
mov
xor
xor
rcrb
and
or
pop
sub
mov
call
pop
mov
popa
iret
lahf
inc
std
xor
pop
sbb
push
cli
js
repz
aam
mov
mov
jo
aas
mov
loopne
inc
or
xchg
lret
cltd
pop
cmp
aas
jno
mov
adc
in
mov
pop
stc
gs
jb
jbe
xor
xchg
xchg
adc
ret
mov
and
das
cltd
lods
mov
push
push
push
or
iret
leave
xlat
cmp
xlat
outsl
and
rorb
fldcw
aas
mov
xor
or
xchg
das
or
call
and
dec
sbb
jne
or
insb
nop/reserved
jp
sbb
mov
fldt
push
lret
xchg
stc
ss
aas
cmp
stc
mov
into
pop
adc
into
or
mov
imul
shrl
xor
pushl
lods
mov
fbld
out
adc
push
dec
call
shlb
cs
movsl
adc
adc
jae
mov
popf
sbb
xchg
and
or
mov
cmpsl
mov
adc
push
inc
jle
shrl
dec
jae
rcrb
sbb
in
xchg
scas
nop
das
xor
push
sbb
or
sub
stos
adc
movsb
xchg
jne
ret
and
xchg
outsb
mov
test
mov
fcmovnu
fcoml
stos
xor
push
test
sbb
sbb
jecxz
out
addr16
adc
mov
cmpsb
mov
sbb
lahf
xlat
stc
adc
push
test
and
dec
jge
or
fisubs
xor
pop
pop
mov
hlt
cmpsb
mov
adc
jns
inc
imul
mov
jecxz
mov
jae
je
ja
and
push
dec
das
dec
std
dec
adc
jmp
adc
stos
arpl
push
es
loopne
out
insb
sbb
push
jmp
mov
pop
and
hlt
dec
jnp
je
notb
shll
clc
mov
mov
pop
mov
jno
jbe
sbb
mov
pop
mov
sahf
out
xlat
bound
cmp
out
push
jg
imul
xchg
mov
add
push
mov
aas
fcoml
xchg
test
pop
push
xor
or
mov
loope
cld
rcr
cmp
inc
stos
jmp
loopne
or
cld
inc
jg
jl
pop
lea
push
sub
lea
hlt
and
push
xchg
bound
fwait
lods
cmpsb
fucomip
lahf
lret
pop
lahf
xor
lods
orl
push
repz
rcrb
fistps
and
xor
cs
add
push
aam
xchg
and
test
mov
in
cmp
scas
mov
and
lret
lret
pop
in
in
inc
aad
pusha
repnz
add
movsl
addr16
mov
lods
fs
pop
dec
lods
ja
popa
mov
inc
movl
xchg
adc
jns
lret
stos
push
mov
shlb
push
rolb
mov
xchg
in
shlb
xchg
fsubrs
stos
addr16
xor
adc
lods
fnsave
outsl
pop
shlb
scas
mov
repz
into
sbb
add
or
psubd
mov
movsb
push
fimuls
mov
int3
andl
movsb
push
sub
fwait
inc
xchg
mov
xor
fucomi
pop
xchg
loope
mov
pop
out
sbb
aaa
push
and
test
out
adc
mov
stos
add
or
shlb
lcall
lock
xchg
inc
sbb
icebp
mov
jo
mov
call
mov
jnp
fdivrs
jnp
popf
mov
xchg
sbb
out
add
insb
sbb
rcrb
cmp
ljmp
lds
lds
imul
or
push
in
adc
fnsave
xorl
ljmp
mov
inc
jb
mov
xchg
inc
add
mov
cmp
mov
cmp
ficoml
scas
jl
adc
add
sbbl
push
das
push
sbb
inc
test
cs
sub
call
test
push
jecxz
mov
xlat
lret
sub
jl
mov
add
stos
out
fwait
pop
sahf
inc
enter
jmp
mov
adc
add
mov
cwtl
xor
fildll
mov
sbb
fwait
mul
push
push
leave
ret
cs
xor
cmpsl
cli
push
arpl
shrl
inc
orl
dec
ficoml
shlb
adc
repz
push
stc
aad
loope
cmp
inc
inc
xor
je
sti
test
lock
fistpl
and
sbb
mov
faddl
mov
mov
or
inc
xor
fiadds
xor
inc
pop
cmpsb
into
call
repz
insb
fwait
test
ret
inc
mov
lods
int3
aas
imul
xor
popa
pop
outsl
push
or
popf
rcrl
dec
xchg
sbb
aad
cmc
pop
mov
sub
ds
dec
pop
je
addr16
mov
jb
xchg
adc
sub
adc
inc
bt
in
adc
rcr
xchg
cmp
insb
adc
xchg
and
inc
jne
and
repz
out
rol
inc
push
cli
inc
sbb
mov
ret
addr16
dec
mov
ja
pop
lret
xor
mov
jbe
push
arpl
mov
ds
mov
xchg
sbb
stos
jns
std
dec
xor
lea
fnstenv
inc
jge
repnz
cmc
add
cmp
cltd
add
mov
int
icebp
pop
mov
shr
lret
ja
test
arpl
rorl
mov
lahf
pop
dec
adc
and
out
andl
nop
inc
pushf
insl
inc
cmpsb
adc
adc
pop
push
imulb
cli
jnp
rolb
into
lret
mov
or
aas
popf
push
xchg
mov
lcall
leave
xchg
cld
std
inc
scas
subl
call
pop
xchg
mov
cmc
cmpsb
inc
xor
les
adc
sub
out
int
mov
je
inc
pop
ret
jbe
inc
fdivrl
cmp
lods
jo
jb
ficomps
or
xchg
lds
mov
je
xchg
add
decb
jae
pushf
push
fwait
jle
jmp
test
in
mov
jbe
pop
jne
push
sub
out
jmp
in
xchg
rcrb
inc
hlt
movsl
fildl
loope
and
movsb
fnstenv
adc
sbb
adc
fsubl
daa
decb
sbb
push
cmp
xor
cs
pusha
cmpsb
fcomi
inc
out
out
loop
loope
shlb
dec
dec
lahf
andl
and
dec
push
push
cld
f2xm1
lgs
adc
xchg
imul
pop
rcrb
mov
shll
xlat
jmp
jnp
inc
pop
lahf
fsubl
jge
lahf
add
cmp
mov
push
sbb
pop
lods
stos
pop
lea
bswap
and
lea
les
lcall
dec
rorb
lret
push
popa
adc
sbb
repnz
push
or
in
pop
mov
std
sbb
push
jb
mov
stos
push
or
ja
cs
lods
cs
sbb
sbb
push
cltd
push
mov
adc
mov
push
sub
fstp
mov
and
lret
neg
insl
dec
stos
loop
jae
jno
lret
movsb
add
popf
mov
and
sbb
adc
xchg
stos
or
pop
dec
sbb
mov
lods
mov
push
xchg
push
sbb
hlt
pushf
xor
mov
lock
mov
out
jmp
mov
pop
dec
fistpll
int3
repz
rorl
shl
mov
cld
xchg
sti
outsl
cmpsb
cmp
sarl
inc
pop
mov
push
add
sub
inc
push
cmp
jb
sarb
shr
and
ret
and
scas
cwtl
mov
mov
scas
cmc
sub
inc
das
iret
mov
bound
fucomi
hlt
std
mov
xor
mov
cmp
sti
mov
test
lea
sbb
pop
in
inc
or
cs
mov
cltd
cmp
cmp
stos
mov
hlt
scas
insb
nop
adc
add
mov
pusha
and
push
add
jecxz
pop
nop
insl
mov
or
cli
clc
mov
and
add
push
pop
adc
out
mov
iret
pop
ss
inc
lcall
call
mov
mov
sub
pop
sbb
add
into
sub
mov
dec
stos
lret
or
mov
push
cltd
or
push
add
movsl
or
add
cwtl
leave
ds
cli
pusha
dec
pop
cli
notl
ret
test
sbb
xchg
mov
ret
shrb
mov
insw
jne
icebp
icebp
scas
and
ds
iret
jbe
push
and
jle
sti
mov
inc
cmp
lods
push
pop
xchg
dec
sahf
aas
push
mov
cmp
inc
jg
inc
dec
aad
adc
push
xor
sbb
stos
cmc
pop
mov
fstpl
popa
notb
or
or
mov
push
xor
cmpsb
sti
aas
test
mov
pop
loopne
rclb
fisubl
loopne
jmp
cli
adc
mov
jae
test
cmp
into
sbb
mov
imul
sbb
jmp
fildll
push
push
sub
inc
adc
repz
js
dec
cwtl
xchg
xchg
rcr
or
pop
push
call
movsb
cmp
data16
fildl
mov
mov
jmp
or
adc
xchg
lret
popa
xchg
cs
lods
cmp
add
test
out
ljmp
mov
dec
adc
pop
jp
or
xchg
xchg
inc
mov
ds
mov
mov
dec
hlt
cld
shlb
insl
mov
rorb
lret
cli
and
das
push
push
repnz
dec
jmp
inc
and
leave
rcl
cmp
fisttpl
loope
push
aas
jmp
outsl
jp
popa
jl
clc
les
cmp
sbb
movsb
in
lock
decl
int3
std
ss
sahf
mov
std
cmp
leave
xchg
xchg
mov
jo
nop
pop
lea
dec
mov
jae
subb
test
mov
xchg
fcoml
and
repnz
xor
inc
inc
and
or
mov
push
and
fdiv
nop/reserved
ss
push
aam
xchg
enter
clc
push
stc
ljmp
xor
lahf
inc
push
push
lock
out
adc
and
adc
loope
inc
movsl
inc
fildl
push
jb
push
scas
push
sbb
sbb
sbb
cli
test
cmp
stos
sarb
fdivrl
out
hlt
and
fprem
mov
adc
call
test
clc
pop
sub
cli
cld
dec
sbb
mov
repz
in
mov
mov
push
jnp
jge
or
nop
sbb
jp
pop
stc
test
jmp
faddl
aaa
pop
jae
mov
fnsave
cmc
inc
loopne
fmuls
fbld
ss
inc
pop
dec
rclb
inc
int
dec
mov
cmp
pusha
movsb
inc
mov
mov
mov
jg
add
lea
aad
push
or
pushf
and
add
addr16
test
loop
jnp
mov
cmp
sbb
sbb
test
lds
pop
push
or
mov
insb
fistps
lret
fs
loope
cmpsl
ret
subb
repnz
pop
daa
mov
fldenv
cld
xlat
fmul
and
xor
arpl
jne
lahf
aas
aad
mov
iret
xorl
xor
adc
dec
cmpsb
add
test
pop
data16
lock
js
sbb
test
enter
stc
call
push
test
xor
xchg
push
rorl
cmp
sbb
xchg
imul
fdivrp
jp
push
jno
out
mov
push
cmc
mov
or
mov
es
nop
lods
sub
rorl
add
divl
loop
sar
and
fidivrl
mov
out
sub
xchg
gs
xchg
leave
and
hlt
push
inc
add
jb
test
lods
adcl
mov
jno
push
sub
adc
sbb
sub
dec
sbb
add
mov
or
ret
in
jecxz
cli
mov
push
test
jmp
loope
jp
mov
pop
mov
in
pop
inc
and
sbb
loope
adc
dec
cmp
push
pop
mov
stc
outsb
push
adc
adc
cmp
ljmp
xor
pop
hlt
push
stos
ljmp
or
or
jg
mov
and
mov
pop
mov
and
xlat
dec
push
popa
lret
in
sti
or
sub
add
das
lahf
test
push
sbb
std
add
loopne
daa
in
mov
orl
jns
cmp
jle
ret
sub
mov
shrl
push
mov
mov
push
punpcklbw
xor
sub
dec
or
sub
dec
cli
xor
loope
mov
pop
adc
imul
or
or
jg
inc
into
fcompl
sbb
out
cmp
xchg
mov
stc
mov
out
imul
xchg
add
add
pop
imul
and
stc
out
dec
in
lret
jbe
stos
sbb
sbb
shrb
ficomps
sbb
fistpl
or
dec
cmpsl
gs
call
ss
in
xor
mov
or
es
cmp
mov
pop
ret
push
and
adc
mov
sti
push
or
and
sbb
stos
pop
out
neg
mov
inc
xchg
leave
and
jb
or
sahf
and
sub
jp
sbb
jg
jl
out
mov
xor
mov
js
lahf
mov
dec
inc
and
out
cld
jmp
aaa
jmp
std
cwtl
daa
lahf
xor
or
inc
iret
push
arpl
xor
in
xor
sub
mov
mov
call
jnp
loop
and
adc
pop
aaa
cmp
sbb
mov
icebp
rol
jle
sub
sti
movsl
push
sub
push
pop
jge
mov
clc
orb
and
ds
cltd
push
scas
xchg
dec
sub
push
testl
jp
xchg
jae
lret
mov
dec
int
cltd
inc
cmpsb
dec
stos
inc
movl
mov
xor
roll
clc
xor
adc
insl
or
adc
mov
mov
lret
mov
sub
loope
xor
out
dec
sub
cmp
sti
in
or
test
xor
jmp
mov
xchg
out
add
into
mov
or
fs
das
inc
jno
xor
ret
xchg
add
jle
adc
xor
and
mov
mov
lea
dec
int3
loopne
add
and
gs
xor
popf
outsl
outsl
mov
jmp
inc
mov
popa
cmp
shll
dec
pop
sbb
sub
inc
push
and
iret
addb
xchg
xor
push
xchg
stos
add
test
imul
rcrl
jle
or
push
lret
sub
push
nop
test
mov
inc
inc
movsl
cltd
adc
popa
mov
rcrb
adc
pop
repnz
jnp
mov
int
mov
shl
into
nop
push
mov
push
pop
xor
xchg
dec
aad
push
scas
and
and
cld
jl
sbb
dec
or
loope
lcall
sbb
in
outsl
mov
pop
jno
add
and
lods
mov
and
stos
xchg
jmp
cmp
dec
jno
sar
inc
pop
in
ja
dec
cli
adc
or
shlb
in
pop
ss
xchg
add
stos
mov
mov
adc
je
inc
lock
int3
push
arpl
in
imul
lea
aam
nop
push
push
sub
adcb
aad
je
fdivr
inc
mov
scas
sbb
les
rorb
or
movsl
outsb
outsb
gs
sbb
testl
pop
jmp
pop
mov
mov
std
or
mov
out
inc
jns
jne
mov
cmpsb
sub
mov
xchg
and
adc
popf
cmpb
inc
jle
lods
movsb
and
mov
shrb
cmc
das
cmp
scas
sbb
sbb
jo
lods
lea
cmp
and
aaa
cmp
mov
sub
or
std
xor
jl
loop
jnp
rcrb
jmp
repz
cli
jo
mov
ja
out
add
mov
rol
mov
enter
jns
mov
stc
hlt
ss
lret
inc
xor
cmc
lea
dec
ja
cmp
pop
out
push
push
pop
cmc
add
sbb
xor
mov
mov
mov
mov
dec
and
lahf
out
or
les
in
je
addr16
in
andb
sarl
insb
mov
add
rcrb
lcall
or
loope
in
adc
push
hlt
dec
adc
adc
stc
push
and
lret
in
mov
cmpsl
test
cltd
mov
push
xchg
dec
push
jmp
imul
pop
mov
jl
or
add
popa
dec
daa
sti
jmp
out
rorb
cmp
adc
pop
leave
push
test
push
icebp
mov
roll
or
jmp
xor
dec
jns
mov
rorl
xchg
jo
inc
rol
shlb
pop
out
pminsw
fs
das
out
push
mov
pop
mov
mov
jb
loopne
fdivl
jne
and
push
add
pop
add
sbb
sbb
mov
xchg
sbb
adc
xor
inc
add
and
add
mov
push
fs
pop
or
ljmp
pop
data16
adc
pusha
mov
out
mov
fwait
out
andb
movsb
and
in
sbb
das
jl
adc
sti
jmp
jl
out
pop
dec
pop
cli
add
cs
jae
into
data16
aas
sbb
stc
push
push
shrb
popf
test
pop
loop
mov
dec
mov
or
sub
nop
or
xor
and
data16
data16
lods
rep
loope
negb
and
scas
cmp
int
out
imul
movsb
mov
inc
xchg
push
mov
icebp
repz
xchg
sbb
aas
jbe
ljmp
ss
lret
lahf
xchg
int
mov
mov
adc
and
mov
sti
loop
sbb
xor
out
xchg
and
mov
mov
sub
xor
xor
divb
push
inc
and
movsb
dec
loop
scas
adc
mov
mov
scas
scas
shlb
sbb
cmpsb
movsl
xor
cmp
popf
push
pushf
mov
ret
cmc
push
sub
xor
push
mov
pop
pop
fdiv
jecxz
subb
mov
mov
pushw
xor
sbb
pop
or
inc
pop
movsl
sbb
test
sahf
dec
add
dec
and
or
imul
cmp
cmp
popl
lods
icebp
inc
notb
sbb
ret
push
mov
and
cmp
dec
sbb
ss
pushl
adc
addr16
mov
cmp
negb
in
or
xchg
outsl
or
test
stos
repz
lods
xor
jecxz
cmovl
mov
push
std
jmp
xor
out
test
add
jmp
or
dec
add
btr
data16
prefetch
fs
int
jb
ret
mov
xchg
ret
pop
adc
dec
icebp
ljmp
cmpl
jl
rorb
nop
fadd
je
mov
adc
xor
sahf
add
outsl
sbb
fs
mov
into
outsb
js
xchg
push
les
mov
push
mov
filds
inc
mov
or
inc
cmp
ret
cwtl
ud0
fstps
or
mov
bswap
mov
push
test
adc
sti
lret
lret
jae
xorb
push
dec
rorb
jle
in
xor
add
add
sbb
or
lds
and
cltd
mov
out
push
cmp
imulb
pop
lods
and
mov
push
push
jne
sub
sbb
push
icebp
lds
push
sbb
jecxz
pop
insl
adc
sbb
aaa
push
add
outsb
sarl
aas
mov
js
jmp
jl
mov
out
mov
lods
xor
add
les
push
int3
mov
adc
and
out
mov
mov
ljmp
shl
data16
loop
loope
push
xor
enter
and
adc
test
adc
imul
add
jmp
arpl
xor
call
mov
adc
mov
and
addr16
dec
mov
lock
add
mov
ss
fildl
mov
and
out
mov
loope
sbb
xor
in
pusha
cmp
sub
inc
sahf
mov
push
negb
insb
call
push
sub
xchg
dec
iret
xor
add
shll
insl
addr16
outsb
out
repz
jno
ja
and
push
push
dec
xor
xchg
shll
pop
lock
loopne
sub
push
insl
test
fwait
fiadds
mov
xor
ss
push
fidivs
adc
icebp
push
add
enter
test
ret
pushf
jl
add
es
push
lret
sbb
movsl
pop
repz
loop
in
xchg
and
xchg
sbb
sbb
push
push
pop
mov
sub
dec
sub
lret
mov
push
lea
int3
dec
sbb
adc
inc
in
rep
mov
xchg
mov
inc
fisttpl
out
out
icebp
out
pushf
mov
and
mov
ljmp
sbb
jno
cmp
lock
bound
ja
sbb
jns
xchg
movb
sub
int
push
leave
dec
jg
stc
cmc
add
outsl
dec
daa
cli
fildl
or
xor
loope
cmp
push
mov
sbb
xchg
mov
mov
xor
loope
cmp
push
cltd
xchg
mov
inc
mov
cmpb
insb
roll
sub
xchg
mov
dec
popa
push
aam
mov
pop
imul
add
wrmsr
xchg
in
popf
in
cmp
lds
popa
ja
lds
nop
arpl
push
adc
decl
arpl
xchg
dec
lahf
and
aaa
xchg
dec
inc
pop
dec
subb
into
shl
push
cmpsl
jmp
and
stos
cmp
in
mov
and
mov
testl
mov
and
lods
or
repnz
push
ss
movsb
pop
leave
jp
psubq
call
stc
ss
inc
out
pop
cmp
adc
or
lret
pop
leave
dec
mov
mov
adc
lcall
pop
xchg
fwait
xchg
out
pop
cmp
sub
addr16
mov
cmp
lock
xor
jg
iret
xchg
in
sahf
mov
push
in
frstor
sahf
xchg
pop
pop
push
sarb
ffreep
sbb
add
fcmovnbe
sbb
fsts
addr16
jb
iret
nop
sahf
test
in
push
mov
movb
adc
mov
mov
lahf
popf
and
pop
sub
add
incl
sub
xor
out
cld
cmp
sub
or
into
frstor
mov
push
sti
push
pop
out
rorl
cmp
stc
fadds
lret
nop
and
mov
imul
int
mov
out
in
push
push
ret
icebp
dec
adc
mov
pop
mov
ja
aas
pop
pop
lds
dec
dec
sbb
sbb
insb
aad
sarl
jmp
ret
int3
mov
sbb
mov
movsb
or
inc
jl
jbe
loopne
sbb
sbb
ret
gs
push
lods
adc
xchg
push
push
push
cwtl
dec
out
or
shr
jmp
movsl
test
pop
adc
sub
mov
std
add
mov
sarl
fmull
cltd
movsl
sbb
addr16
das
mov
idiv
and
lret
add
jo
adc
xchg
or
fmuls
mov
js
jmp
hlt
test
icebp
gs
jbe
pushf
xchg
adc
aas
scas
enter
pop
sub
pop
add
and
adc
mov
push
nop
clc
aas
dec
sub
dec
mov
sbb
mov
cli
rcll
arpl
push
sbb
in
push
in
push
push
and
push
jb
imul
outsb
js
jnp
inc
fnstsw
out
int3
xor
lods
mov
lret
xchg
cld
in
daa
xchg
divl
adc
push
ret
mov
xchg
push
sbb
inc
dec
push
push
pop
inc
pop
push
orl
jno
push
inc
ja
cmp
xchg
pop
push
out
dec
rcrb
cmc
lcall
cmp
cmc
push
adc
int
mov
adc
cmpsl
xchg
lea
popa
je
addr16
jae
and
cmp
test
pop
pop
and
pushf
insl
shlb
insb
pusha
imul
call
cld
fnstcw
lret
cmp
leave
test
stc
jmp
mov
idivl
and
movsl
pop
sub
mov
mov
call
stos
stc
sbbb
xor
test
icebp
xchg
cmpb
mov
adc
dec
fsubl
pop
mov
cmp
cld
fs
push
ja
xchg
addr16
pop
push
mov
out
ljmp
aam
scas
stos
lds
arpl
cs
popf
cmp
lcall
xor
test
mov
pop
xor
pop
mov
add
dec
inc
outsb
xor
in
mov
lret
pushf
mov
data16
xorl
call
adc
fdivs
imul
xchg
add
jae
jecxz
or
adc
jmp
mov
ljmp
in
data16
xlat
lret
dec
cs
push
cmpsl
ss
add
loop
stc
adc
les
inc
insl
out
and
shl
adc
push
and
in
jmp
sbb
and
push
mov
std
fldl
lahf
cwtl
cs
fldt
push
mov
mov
lods
stos
or
das
nop
pop
jg
xorl
or
jnp
rcrb
inc
sarb
ljmp
cmp
fsts
pushf
test
xor
xchg
jbe
push
enter
fisttpl
out
arpl
into
xchg
hlt
inc
jmp
out
jg
push
lret
mov
inc
arpl
mov
xchg
out
add
or
mov
andb
aam
push
movsb
lods
jae
pop
cs
push
ret
pushf
fidivs
cmp
pusha
addb
xchg
lahf
sti
insl
jno
dec
sbb
mov
ret
into
sub
jp
pop
or
or
je
cmp
and
or
sbb
call
pop
mov
loop
insb
push
cmp
sahf
dec
or
fadds
movl
sub
fwait
pop
rolb
xchg
subb
pushf
shrb
mov
jo
add
xor
add
fisttpll
repz
call
mov
js
xor
adc
xor
pop
mov
pop
and
or
in
and
xor
sti
icebp
aaa
pop
jp
push
jecxz
cmpl
subl
jg
inc
loop
cmp
cmp
cmpsb
jno
jae
dec
test
imul
in
nop
ds
sbb
scas
loope
fsubrs
mov
jne
loop
cmp
out
xchg
cltd
and
sahf
jmp
daa
std
psrad
push
lods
je
or
ret
inc
mov
or
xchg
movsb
es
ret
rol
setnp
scas
and
inc
lea
push
jle
pop
push
outsl
mov
repz
inc
lcall
dec
out
push
push
das
repnz
mov
aam
sub
mov
mov
pop
push
pop
jge
xchg
mov
xor
mov
ret
das
rcr
dec
mov
sbb
xor
dec
iret
ljmp
in
and
mov
sub
ja
cmp
inc
lahf
xlat
xchg
xor
pop
push
and
add
std
pop
lret
and
lret
xchg
xchg
rolb
adc
lods
stos
sub
outsb
add
dec
and
fs
out
dec
cmp
jnp
mov
fcmove
ret
jl
jl
out
jp
sub
pop
xor
je
js
xor
lea
mov
movsl
insb
pop
out
dec
dec
test
sbb
int3
test
ljmp
sub
adc
and
enter
cltd
sbb
cli
into
lods
fwait
fs
into
cmp
repz
fs
push
pop
je
mov
add
rorl
or
adc
mov
sbb
es
adc
mov
xchg
jns,pt
mov
in
out
sbb
outsb
xchg
lret
push
dec
dec
sar
or
mov
xor
fs
aaa
inc
ficoms
lret
bound
mov
cmp
sub
lock
xchg
adc
mov
push
cs
ror
fs
loopne
dec
and
mov
mov
dec
cltd
ret
in
dec
xor
xor
pusha
xor
lods
sub
ffreep
lcall
and
leave
inc
cmpsl
mov
jmp
xchg
andb
jge
movl
dec
lcall
adc
ljmp
and
retw
pop
shll
sbb
jle
aad
fisubrl
add
mov
dec
fidivrl
inc
aas
stos
clc
pop
push
ror
mov
in
pusha
rcrb
not
mov
lods
push
push
xor
fldenv
sbb
in
je
sub
lcall
insl
fisubrl
lcall
inc
jge
outsl
movsb
insb
pop
add
add
cli
mulb
push
jno
aad
int
aam
orl
mov
push
pop
jo
sahf
scas
adc
ficomps
xchg
lock
mov
icebp
push
ret
pop
std
or
sbb
andb
xchg
loope
xchg
jo
pop
xor
mov
dec
adc
xor
lret
sbb
in
sub
mov
in
mov
sbb
pop
sub
jne
mov
add
xchg
xchg
nop
sub
stos
cmp
xor
jnp
cltd
js
sbb
mov
out
jecxz
inc
faddl
in
pop
xchg
std
out
retw
xchg
mov
fwait
mov
sahf
outsb
xor
mov
mov
jbe
push
mov
jp
mov
arpl
movsb
loopne
daa
fldenv
aaa
scas
addr16
pop
mov
mov
enter
pop
inc
jnp
fs
loope
push
inc
mul
mov
or
sub
pop
push
outsl
or
int3
mov
nop
xor
pop
test
out
movsb
or
pusha
outsl
lret
test
sub
je
or
std
int3
ja
daa
scas
repz
inc
xchg
inc
jno
stos
mov
movd
out
fsts
xchg
pushl
es
std
movsb
pop
sub
inc
or
leave
cmpsl
cmpsl
xlat
jge
bsr
xor
cmovge
xor
pop
hlt
lea
jno
outsb
pop
pop
xor
and
mov
adc
add
mov
imul
hlt
lret
test
insl
mov
sub
into
mov
mov
mov
cmpsb
sbb
mov
and
add
mov
xchg
cmp
dec
mov
pop
or
pop
push
mov
xchg
mov
jp
push
xorl
ss
stc
add
mov
inc
gs
mov
test
loop
or
mov
ss
stos
or
ja
xlat
daa
push
fisubrs
fnstsw
fldcw
lcall
fsubrs
mov
test
aam
jge
xor
add
jmp
scas
push
mov
cmp
sub
mov
sub
sub
inc
xchg
adc
clc
cmc
sahf
sbb
je
and
cmp
push
iret
std
stos
sub
movsb
pop
push
in
xchg
pop
push
fdivl
mov
push
lods
dec
stos
adc
into
jnp
out
or
test
xchg
js
addr16
imul
inc
ret
mov
pop
mov
or
mov
mov
or
icebp
xor
push
fs
mov
jns
adc
xor
mov
cltd
push
sarb
or
lret
xchg
cwtl
xor
mov
xlat
iret
and
fldlg2
dec
mov
int3
and
jge
call
or
mov
jg
imul
dec
inc
cld
enter
scas
push
jp
mov
sbb
xor
out
dec
pop
mov
xor
jno
faddl
mov
out
jb
inc
inc
popf
jmp
jecxz
sub
or
cmp
pop
loop
pop
jbe
fs
scas
in
xor
sub
or
pop
icebp
dec
iret
je
jns
lahf
mov
mov
mov
pop
flds
push
mov
clc
mov
inc
ds
das
or
imul
outsl
sbb
in
rcll
int
sahf
or
jp
adc
testl
pop
jmp
pop
add
gs
cli
roll
jg
add
xor
cmp
cmp
imul
and
xchg
test
fwait
mov
and
arpl
cld
dec
shll
loopne
gs
jmp
sub
adc
adc
cmp
lods
sub
or
int
mov
loop
int
out
pop
pop
jl
sub
fsubrl
dec
out
out
popf
fstl
or
push
lea
dec
xor
fistl
cmpl
and
and
cmpsl
and
inc
in
push
push
fwait
mov
push
mov
and
into
sbb
cmp
insl
addr16
or
icebp
nop
adc
ret
iret
rcl
cld
fisubrs
into
xor
sbb
cs
fst
and
pop
push
lds
rcr
add
shl
insb
aaa
ljmp
cwtl
pop
jo
lea
in
mov
out
fildl
repz
outsb
inc
rcll
jo
rorl
stc
imul
aas
ficompl
movsl
mov
lret
or
dec
shl
sti
add
sbb
rorl
mov
aas
lds
icebp
pop
mov
insb
movsl
jb
push
movsb
xor
dec
inc
ret
sarl
scas
cmpsl
mov
cmp
cwtl
aaa
andl
ret
lcall
out
mov
jl
mov
stos
cli
scas
xor
movsb
pop
inc
cmp
addr16
xchg
mov
xchg
mov
cs
xor
sbb
sbb
repz
sbb
repz
shlb
repz
loop
dec
pop
in
insb
fdivp
jbe
stc
je
aas
pop
fs
not
insb
loop
sarl
loope
adcb
popf
mov
sbb
jbe
sbb
xor
or
dec
int3
jb
movsb
fcomi
fsubl
mov
pop
fistpll
cwtl
ret
clc
pop
xor
sub
inc
dec
dec
test
xchg
or
sub
clc
out
push
pop
push
popa
repz
mov
ljmp
jp
push
pop
mov
sarb
pop
add
cmpsl
pop
cld
dec
data16
sbb
and
insl
jmp
adc
int
jg
gs
xor
add
lcall
ds
lret
jg
in
sti
test
jle
adc
sub
fwait
scas
rcll
js
and
mov
insl
std
mov
and
or
icebp
jle
dec
cmp
pop
mov
daa
icebp
enter
sbbl
addr16
addr16
push
ss
push
popaw
daa
bnd
mov
scas
jo
pop
mov
orb
xchg
bound
xcrypt-ofb
jl
pop
ds
sar
ljmp
xor
ljmp
shrl
out
jge
shrb
clc
jmp
ds
shrl
jg
iret
mov
or
mov
cmp
mov
pop
imul
sbb
sbb
sbb
dec
sub
xchg
add
pushl
test
les
mov
dec
loop
pusha
push
sub
aas
xorb
je
sti
mov
pop
xor
roll
fdivs
fsub
pop
sti
fidivrs
cld
lret
mov
fucomi
pop
aas
out
addr16
xchg
hlt
insl
lea
lea
mov
les
out
inc
mov
push
and
pop
mov
inc
cs
cmp
mov
push
or
or
jo
and
out
adc
add
dec
testb
mov
xchg
aam
push
adc
xchg
repnz
sbb
repz
or
mov
or
push
sbb
push
js
xor
jge
sbb
push
mov
lcall
pop
dec
xchg
outsb
pushf
shll
push
hlt
push
out
out
cmp
cmp
mov
fwait
in
adc
and
or
gs
sarb
mov
icebp
ljmp
out
das
mov
xor
pop
pop
dec
mov
mov
daa
rcrb
in
fsubr
xchg
jmp
cmp
xchg
outsl
pushf
pushf
and
jb
in
je
js
xchg
daa
inc
testb
dec
shr
mov
mov
int3
stc
int
es
add
das
mov
scas
ds
loope
ret
int
sbb
es
or
icebp
flds
test
popf
inc
divl
adc
sbb
fsubrl
mov
jge
mov
xchg
mov
pop
leave
inc
dec
mov
pop
push
adc
movsb
sub
pop
addr16
test
pop
outsb
adc
cmc
out
std
push
call
mov
mov
out
pop
xor
ja
pop
xchg
sub
fnsave
sub
mov
cmp
jbe
stc
mov
mov
test
jbe
fsubrl
mov
add
out
jno
lods
pop
movsl
fwait
mov
out
mov
mov
ja
push
insl
or
arpl
mov
scas
aad
adc
inc
pop
mov
and
push
mov
cmp
pop
mov
sbb
fdivrs
push
cmp
ljmp
fldcw
mov
and
faddl
lret
inc
or
fistps
dec
ja
pop
mov
aad
mov
scas
cltd
insb
jne
cmp
mov
jle
sub
sbb
leave
out
mov
cmp
in
fidivrs
mov
outsb
pushf
mov
into
out
pop
mov
enter
lret
sub
testb
ret
pop
xchg
inc
jmp
stc
mov
add
push
pop
bound
dec
shlb
hlt
loopne
pop
push
mov
stos
cli
aam
rcll
cwtl
fistpl
rorl
ret
rcl
add
mov
leave
into
rcll
mov
mov
jle
cmc
xchg
inc
mov
call
inc
jo
mov
int
mov
test
outsl
xor
sub
cs
mov
dec
inc
mov
inc
xor
imul
mov
or
fwait
sbb
mov
cmp
leave
push
sbb
add
xchg
mov
pop
out
jne
fcom
mov
shll
xor
pop
pop
out
inc
mov
sub
cmp
jge
or
jb
adcb
push
in
sub
and
out
xchg
jns
and
mov
lcall
sub
repz
enter
jge,pn
dec
std
cltd
jl
add
jb
das
pop
dec
pushf
xchg
hlt
bound
dec
jmp
std
std
sbb
call
mov
repz
pop
int
sbb
push
inc
mov
jb
and
aaa
xor
dec
inc
xchg
vpminsw
movsl
clc
repnz
mov
pop
adcl
jge
and
enter
jns
mov
cwtl
call
jl
ss
push
cmpb
frstor
inc
ss
aas
xor
das
mov
test
push
sub
cmp
ja
stc
mov
push
fmuls
popf
inc
add
xchg
or
nopl
jecxz
aad
pop
test
dec
gs
movl
sub
clc
and
ret
mov
hlt
push
adc
push
mov
push
fs
push
xor
add
enter
push
in
inc
pop
arpl
inc
pop
or
nop
sub
pushf
sbb
repz
rol
push
andb
movsl
daa
rorl
inc
mov
cld
repz
mov
xchg
aad
jl
inc
inc
xor
mov
push
jne
repnz
jmp
aam
out
xor
clc
add
xchg
mov
gs
jp
pop
adc
push
hlt
mov
inc
push
ljmp
adc
repnz
hlt
outsb
aas
fwait
adc
jae
popf
out
or
incl
sbb
cwtl
push
pop
insl
scas
inc
in
push
cmpsb
add
jle
inc
mov
cltd
out
aas
mov
fimull
xchg
mov
scas
pop
out
out
mov
dec
sub
addr16
in
aaa
dec
aam
xlat
jl
das
mov
push
or
pop
out
mov
fiaddl
bound
and
jge
fistps
je
xchg
adc
sub
jno
xor
dec
xchg
lcall
js
push
mov
inc
ret
in
pusha
inc
mov
mov
stos
ja
out
mov
popf
or
es
xchg
repnz
fmul
lds
cli
popa
aaa
mov
mov
push
pop
lcall
jge
mov
in
cmp
data16
gs
sub
jno
inc
repz
xchg
subb
dec
arpl
cmp
popa
push
dec
mov
push
mov
or
xor
cltd
fadds
xchg
stc
adcb
ds
scas
xor
mov
jb
out
mov
jmp
xchg
jno
fisubrs
aas
xchg
pushl
repnz
fs
sub
jle
add
loopne
icebp
pop
xchg
pop
jb
inc
mull
cwtl
fistps
sub
imul
pop
lahf
outsl
jle
mov
fdivrl
aaa
shll
xchg
test
test
jnp
jg
mov
lcall
adc
adc
sbb
adc
push
mov
xchg
push
or
addb
inc
and
divb
adc
jg
out
mov
mov
adc
mov
imul
and
movsl
cmp
adc
aaa
psadbw
stos
jmp
ljmp
scas
adc
mov
xchg
pop
push
cmp
fisubs
mov
or
dec
cmp
sub
les
sahf
rcrl
sbb
mov
ficompl
cltd
lcall
xchg
cmpsl
cmpsl
pop
jb
mov
outsl
xchg
jle
dec
test
mov
std
push
jne
adc
hlt
mov
out
xlat
mov
cwtl
pop
add
popf
pusha
mov
xorl
movsl
aam
movsb
pop
pushf
movsb
mov
mov
cld
jg
bound
mov
imull
inc
fsub
fmull
jns
int
in
mov
mov
loopne
icebp
lea
jp
pop
xor
orl
mov
push
gs
push
scas
mov
mov
sbbl
pop
xor
outsl
pop
pushf
xchg
xchg
xlat
or
sti
jb
leave
lahf
adcl
or
test
imul
iret
or
adc
loopne
add
aas
mov
hlt
sbb
or
add
inc
andb
xchg
dec
mov
stc
inc
loop
pop
cmc
nop
out
repnz
cmp
push
movsl
stos
xchg
roll
sbb
sub
or
insl
xchg
jg
shll
shll
sbb
mov
mov
sarb
xchg
cmp
div
push
mov
mov
inc
fisubrl
jbe
xor
mov
in
mov
shll
xor
call
push
push
in
pop
push
adc
call
jo
lock
popaw
test
inc
sbb
adc
push
fcompl
xchg
pop
daa
stc
sub
cmpsl
inc
mov
repz
jmp
fdivrs
fcmovb
xor
mov
xchg
or
jp
call
lret
fistpl
mov
ret
cmp
leave
nop
pop
gs
sbb
push
lahf
stc
and
add
in
dec
jae
pushf
mov
xchg
xchg
xor
repz
fcmovne
cltd
lcall
inc
call
lock
push
fisttpll
mov
repz
dec
cmpsl
xchg
cli
or
mov
stc
gs
testl
fdivs
out
test
rorb
mov
dec
lahf
push
sbb
pop
es
inc
sub
xor
adc
imul
add
cmp
mov
mov
push
or
aam
jnp
outsb
ffree
pop
xor
pushf
or
icebp
stc
and
inc
adc
add
sbb
std
mov
sbb
in
ljmp
ja
pop
mov
fwait
lods
stos
mov
inc
sbb
pop
in
imul
sti
push
pop
sahf
jo
das
shr
sub
pop
xchg
aam
ljmp
in
mov
mov
cmp
bound
jne
jmp
in
dec
mov
xchg
scas
jp
adc
loop
dec
xor
pop
push
outsb
cmp
call
test
loop
inc
pop
mov
dec
dec
sub
ja
inc
jmp
pop
and
lcall
shlb
jo
stos
out
xor
jno,pn
adc
test
ds
stc
ljmp
adc
sub
outsl
stc
movsl
push
adc
pop
aam
push
xor
scas
scas
in
mov
sbb
sub
jae
call
dec
jbe
mov
adcl
fistpll
shr
mov
mov
ds
add
add
into
pop
dec
pushf
or
dec
xor
test
lcall
out
ffreep
pop
xchg
loop
cmp
push
sub
mov
add
fsubl
mov
jp
leave
js
ret
adc
adcl
mov
loope
test
in
lcall
cmp
or
xchg
fisubs
fs
jno
data16
cmp
dec
int
add
sbb
icebp
or
repz
scas
xor
fdiv
add
movsl
fisubrs
adc
outsb
pop
mov
mov
scas
aam
es
je
cwtl
pop
inc
cmp
jp
lea
enter
imul
bound
mov
push
cmp
insb
xchg
add
xchg
loopne
jnp
and
cmp
xchg
adc
ret
adc
lds
fucomp
xorb
push
pushf
pop
add
xchg
sbb
and
dec
lret
xor
cld
mov
dec
inc
imul
mov
add
mov
les
mov
movsb
js
and
jge
lahf
scas
push
cmp
rorb
mov
dec
lods
sbb
xchg
cmp
insb
pusha
dec
dec
sub
or
lahf
adc
mov
je
xor
fnstcw
pop
jmp
inc
sahf
lea
sub
push
push
and
dec
sarl
mov
fstpt
push
xor
xor
xchg
mov
icebp
aad
cmpsb
outsb
testb
dec
or
xlat
ss
repnz
xlat
sbb
or
lock
rolb
mov
xchg
iret
out
lret
dec
sbb
repnz
dec
xchg
and
or
mov
stos
inc
sub
sti
or
cmp
pop
inc
insl
imul
pop
dec
mov
mov
push
dec
loopne
call
push
mov
fstl
imull
mov
push
dec
push
push
adc
add
pop
jnp
pusha
insl
sub
xchg
push
xor
mov
ss
push
sarb
bound
out
jmp
aad
insl
jmp
jns
xchg
bnd
in
push
int
cmp
jmp
add
sahf
push
jmp
dec
sub
mov
xchg
popa
xor
pop
xchg
or
sahf
mov
icebp
mov
inc
push
push
pop
pushf
out
movsl
flds
pop
mov
inc
sbb
jg
mov
dec
push
mov
ficomps
push
jb
mov
jnp
sub
arpl
in
rcll
mov
mov
push
cmp
jmp
adc
fcomp
dec
aad
xor
fwait
out
dec
dec
push
out
xchg
daa
push
sub
cmc
pop
or
and
das
xchg
ficoms
lds
jne
roll
push
rcrb
leave
xchg
dec
inc
cmp
ds
dec
cmpsb
test
lret
fwait
add
jne
adc
mov
in
sub
mov
loope
add
dec
movsl
in
cmp
dec
aaa
xchg
es
inc
sbb
mov
cmp
imul
imul
or
xor
xchg
jne
inc
pop
mov
adc
movsb
movsl
stc
lahf
addr16
or
mov
dec
jg
pop
pop
dec
jb
ret
pop
pop
xor
mov
cmp
and
push
outsl
loopne
movsb
fwait
daa
and
cmp
push
fadd
cmovno
shl
movb
cmp
cltd
fs
sbb
loope
scas
xchg
sarb
loope
subl
pop
push
xor
push
lods
loop
xchg
loop
cmp
int
add
mov
stos
popl
mov
inc
and
shrb
inc
push
dec
inc
shll
pop
pop
out
out
enter
jne
pop
mov
mov
jae
xorl
inc
inc
add
mov
xchg
and
xor
cld
adc
sbb
mov
lods
inc
mov
mov
sub
sub
aas
dec
imul
fxch
mov
xchg
ret
xor
daa
jbe
sub
and
enter
adc
and
loope
aam
cmp
push
fmull
lret
loope
out
jne
pop
aaa
lahf
add
test
das
xor
es
loop
cs
cltd
iret
out
dec
dec
pop
scas
das
sbb
push
jl
popf
sbb
cltd
jnp
pop
rcrb
sub
sbb
mov
dec
dec
or
ret
out
ficompl
lods
sub
sbb
dec
rcr
divl
inc
mov
mov
mov
jge
movb
inc
dec
pop
mov
test
mov
xor
inc
hlt
js
sbb
adc
push
int3
xor
loop
mov
orb
pop
cmc
loopne
in
mov
pop
mov
xchg
leave
je
insb
insb
es
pop
jl
push
addr16
or
push
and
and
pop
nop
lods
ljmp
roll
ret
dec
sub
cwtl
push
sub
in
sbb
rcl
addl
fcompl
and
dec
xchg
jecxz
stos
mov
adc
mov
jge
cmp
sahf
and
pop
sub
testb
and
shrb
lock
lock
cli
or
add
push
cmc
aas
fildll
or
aas
fcmovu
and
or
mov
sub
push
jnp
outsb
notl
clc
test
push
xor
inc
gs
jmp
out
mov
cs
mov
pop
lcall
dec
scas
pop
movsl
jnp
daa
xchg
ss
cld
adc
aaa
test
push
pop
or
xor
mov
test
and
out
pop
sbb
cltd
sbb
jg
jp
adc
daa
arpl
iret
dec
sbb
lea
aad
or
les
push
xchg
and
inc
in
xor
xchg
mov
and
push
lret
mov
mov
pushf
mov
in
ds
faddl
mov
jb
mov
movsl
jno
push
dec
sbb
push
cmp
stos
shlb
sbb
ror
arpl
sub
mov
ds
adc
mov
jecxz
cltd
shr
scas
mov
sbb
cmp
and
sbb
mov
jecxz
scas
subl
dec
sar
jg
jge
in
leave
push
jno
icebp
dec
fwait
dec
insl
push
test
dec
inc
mov
sub
gs
pop
out
call
test
outsb
adc
lcall
or
es
mov
xchg
in
or
mov
cmp
insb
test
sbb
jnp
push
sub
or
pop
lahf
test
push
xor
mov
inc
sbb
stos
shrb
test
mov
inc
cmpsb
or
cli
xor
addr16
pop
ret
ljmp
adc
daa
xor
mov
push
cmpsb
sub
aaa
aad
daa
mov
dec
imul
pop
cmpsl
scas
or
cmp
push
mov
lock
dec
stc
stos
push
pop
repnz
stos
dec
or
lahf
das
movsl
adc
jno
loopne
ljmp
stc
cs
mov
mov
pop
in
sbb
or
sbb
clc
dec
inc
mov
mov
lods
imul
aas
mov
addb
cltd
jmp
jmp
dec
and
adc
out
xor
dec
enter
out
jp
cmp
popa
in
outsb
pop
rcr
add
ja
adc
push
mov
js
jno
in
adc
cmp
popf
lods
std
inc
cwtl
js
or
push
enter
arpl
insb
scas
push
jmp
mov
dec
push
adc
jnp
loop
call
mov
shll
enter
adc
add
add
lcall
dec
ljmp
rorl
sbb
sub
test
adc
xor
pop
adc
dec
icebp
push
test
dec
mov
shll
or
or
xor
lods
jmp
fisubrs
shl
ret
inc
fcom
lahf
mov
pop
dec
mulb
lods
icebp
pop
lock
stos
pop
jmp
xlat
cmp
loop
ret
fdivl
push
mov
push
fnsave
hlt
std
pop
dec
subb
or
insl
test
fs
adc
shrb
xor
imul
loop
push
mov
xchg
orl
jge
adc
lahf
add
sbb
fisttpll
adc
test
int
xchg
xor
out
pop
mov
xor
lret
sbb
test
out
hlt
shr
adc
adc
daa
xchg
in
mov
aas
jp
mov
push
jbe
adc
leave
xchg
xor
pop
sti
divl
out
dec
mov
lea
inc
daa
jle
js
jmp
mov
sub
dec
sub
cwtl
and
xchg
mov
popa
stos
adc
aaa
nop
sub
clc
jno
cmpsb
scas
inc
std
and
outsb
mov
sbb
test
cmp
xchg
mov
xchg
push
jbe
pop
or
mov
mov
cmp
rcrl
xchg
and
lds
cld
mov
arpl
push
push
xor
mov
ja
movsl
leave
sti
ja
loope
les
push
stos
pop
cmpsl
pushl
mov
dec
and
clc
lret
add
inc
xor
stos
stos
xor
sub
add
cmp
fwait
mov
dec
roll
xor
push
fcmovbe
push
test
pop
cmp
jmp
pop
outsl
inc
adc
mov
cld
jns
and
mov
or
dec
fisttpl
test
das
bnd
push
decl
add
std
js
movsb
xchg
into
pop
pop
in
repnz
push
sbb
out
out
jp
adc
pop
sbb
push
movsl
mov
ret
jge
insb
pop
test
cs
inc
mov
and
xor
dec
cmpsb
aam
pushf
xchg
push
ja
loopne
cwtl
call
jbe
rcrb
lods
xlat
das
ljmp
lock
shlb
iret
ret
mov
adc
inc
xor
test
push
adc
adc
out
test
enter
jmp
enter
xor
sbbb
mul
lret
push
pop
sub
mov
lods
dec
inc
pop
outsb
inc
sub
scas
adc
nop
jnp
imul
pop
pop
mov
add
sbbl
inc
insl
cmp
fwait
xchg
ja
outsl
sbb
enter
or
mov
test
push
cmpsb
push
cmp
hlt
ss
shll
lret
xor
mov
xchg
das
add
xchg
addr16
loopne
outsl
mov
pop
jae
or
aam
shll
std
push
stc
leave
cwtl
lret
out
sub
pminub
sbb
inc
push
mov
fwait
aaa
cmpsl
rorl
and
das
sbb
push
shl
hlt
adc
ja
fstpt
dec
cmpsb
sbb
add
cmp
out
pop
mov
xchg
popa
divb
add
cwtl
sub
push
mov
std
test
fpatan
int
mov
dec
repz
out
test
fsubs
ja
popa
mov
call
int3
jo
jecxz
inc
cmp
cmp
jecxz
pushf
pop
fdivs
shrl
outsb
lcall
pop
insb
sub
and
iret
cmp
add
sub
push
push
xor
daa
sarb
loopne
pop
scas
daa
in
cmpsl
or
test
sub
add
fstpl
mov
shlb
cmc
mov
aaa
jbe
mov
lret
pop
scas
push
repz
insl
lods
add
xchg
mov
mov
cmp
pop
jne
adc
gs
stos
xchg
sbb
cmp
rolb
xor
lods
or
push
leave
lret
loopne
lret
xor
push
sub
sub
fwait
jl
sub
imul
popf
cmc
push
sbb
or
enter
stc
or
push
fs
lcall
jl
inc
xchg
movsb
roll
push
push
push
repnz
mov
sti
in
adc
xor
pop
test
push
cmp
xchg
arpl
mov
push
bound
xchg
pop
jl
es
stc
hlt
inc
insb
les
mov
mov
rcr
aam
cli
cltd
dec
scas
pushf
xchg
imulb
lods
add
shl
adc
mov
mov
inc
sti
jns
sbb
xor
xchg
pushl
and
cmp
and
mov
ja
jns
lock
wrmsr
and
cmp
movsl
inc
icebp
jp
cwtl
pop
clc
xchg
leave
jmp
stos
push
cli
rorb
sbb
push
cltd
dec
inc
cld
daa
push
call
outsl
cwtl
stos
fildll
pop
pop
in
rorb
cs
rclw
push
js,pn
mov
lahf
pop
xor
dec
loope
daa
test
jg
xchg
negl
pop
pop
cmp
xchg
insl
fnstsw
andb
mov
cmp
fisubrs
es
lock
mov
mov
add
and
and
or
xchg
mov
lds
dec
data16
xor
roll
add
hlt
or
fadds
dec
xor
lret
aas
mov
jle
notl
cmp
lcall
fcomps
daa
push
js
mov
call
inc
and
jg
and
mov
movsb
or
aas
cmp
ja
add
std
movsb
xorl
testl
je
int3
mov
cmp
shr
cmc
lret
lcall
sti
pop
mov
pusha
in
push
test
fisubs
and
mov
adc
je
inc
je
push
stos
lea
int3
test
push
orl
push
insl
push
fcompl
mov
ror
in
and
test
cld
pusha
push
aas
cmpsl
punpckldq
lahf
cmp
push
add
cmp
push
dec
dec
add
scas
cmp
rcr
pop
mov
dec
and
and
test
sbb
sbb
insb
xchg
ret
das
fidivl
and
mov
dec
dec
and
in
cltd
ljmp
daa
loope
scas
cmc
xor
jns
ja
jno
sarb
sub
or
lret
test
mov
daa
inc
bound
inc
lahf
xor
push
out
imul
mov
or
inc
sub
push
xchg
push
add
add
xor
outsb
bound
mov
test
xchg
fsubr
dec
repz
insl
movsl
jmp
and
inc
das
xlat
jge
loopne
xchg
xor
jb
test
jb
sub
leavew
pop
jnp
stos
cmp
adc
lret
arpl
lods
ja
aam
pop
adc
aaa
movsl
int3
sub
mov
loope
adc
xor
cld
and
das
sbb
jg
sti
or
fbld
setb
ficomps
xchg
cmp
and
dec
and
fadds
cmp
test
add
pop
iret
and
sbb
pop
mov
mov
jne
sub
repz
fmull
out
xor
push
iret
imul
rcrb
xchg
inc
pop
sub
push
mov
cmp
mov
fdivp
dec
mov
aam
and
inc
lret
shll
pop
mov
sub
push
sbb
sbb
mov
repz
jp
adc
insl
inc
push
mov
out
jne
mov
out
lahf
or
outsl
call
mov
push
cwtl
movsl
outsl
inc
dec
inc
jg
mov
and
fdivrp
roll
pop
inc
sub
cmc
jmp
jae
sub
fnsave
stos
mov
dec
sbb
loopne
mov
jl
pusha
setl
adc
imul
mov
pop
xor
rclb
jecxz
mov
loope
adc
gs
push
popf
sti
fisubrl
mov
dec
call
call
mov
add
test
int3
mov
cmp
test
dec
out
xor
xchg
test
in
sub
mov
aaa
leave
lods
pop
cmp
dec
mov
leave
sbb
iret
aam
inc
adcl
inc
test
inc
jge
sbb
mov
push
out
std
and
in
push
add
pop
arpl
fisubs
stos
popf
push
addb
in
cli
test
out
iret
fwait
rol
sub
out
movsl
imul
xorb
popf
jle
notl
fsubrl
adc
test
test
pusha
xchg
cmp
pop
mov
insl
shlb
dec
xchg
idivb
dec
loope
bound
jmp
pop
fdivr
adcl
or
and
pop
sub
das
xor
add
push
jl
lret
xor
cmp
es
fcmovb
es
xor
scas
fimuls
imul
add
mov
or
enter
cmp
or
fsubs
test
cli
into
icebp
inc
xchg
mov
test
push
pop
imul
mov
idivb
lods
pop
adc
test
test
jmp
inc
sbb
out
cmpsl
cmp
fcoml
xchg
dec
and
add
push
cld
fucomip
imul
fs
rol
fucom
inc
sahf
lods
and
stos
or
es
adc
addl
sar
push
cmp
jnp
mov
and
dec
inc
mov
lds
xchg
pushf
jmp
and
movl
jmp
sahf
xor
sub
mov
imul
inc
mov
test
test
mov
inc
and
dec
sub
pop
lret
jno
cli
mov
mov
ljmp
fcoms
cmp
hlt
jnp
sbb
pop
inc
fsubl
mov
int
stc
rorl
jnp
popa
aas
mul
mov
stc
imul
loop
in
xchg
inc
sbb
rclb
insl
mov
mov
xchg
pusha
inc
add
sub
pop
inc
jae
jnp
imul
and
adc
mov
add
mov
mov
adc
pop
xor
push
aaa
repnz
das
pmulhuw
jne
or
rcll
mov
jmp
or
push
push
fcoml
dec
mov
pop
mov
lea
add
mov
pop
js
ret
loop
cs
data16
movsb
pusha
ja
fidivrl
cmp
sbb
inc
adc
or
mov
adc
cmp
int
pop
xchg
shrl
sbb
inc
add
popf
pop
and
ja
mov
jecxz
scas
ficomps
adc
and
andb
jns
pop
xchg
insl
mov
orb
gs
mov
sub
push
aam
and
mov
dec
jno
lret
or
adc
lret
enter
lods
cmpsl
sbb
loope
pushf
popa
fnstsw
outsb
sub
clc
pop
jecxz
test
sti
repnz
outsb
enter
cmpl
push
cmp
repnz
out
mov
mov
fisubs
cmp
repz
jmp
mov
and
fwait
cmc
pop
jns
popf
ret
cmpsl
pop
push
es
sbb
and
call
or
lea
mov
das
and
inc
mov
push
jecxz
lret
add
and
rcrl
mov
aam
xchg
inc
sbb
inc
cmp
jbe
loopne
xlat
mov
sub
orb
aad
pop
scas
push
and
cmpsl
test
adc
adc
sbb
hlt
call
gs
imul
pusha
xor
pop
inc
clc
sarl
cmc
cmp
cs
imul
mov
or
push
imul
or
or
mov
stos
xchg
xchg
aam
addr16
or
pusha
xlat
gs
les
pop
xchg
dec
xor
sub
lock
sbb
jne
jmp
jb
lcall
jbe
sahf
rcrl
stc
stos
jb
imul
rcrb
push
xchg
int
sub
dec
pop
push
adc
stc
jge
jmp
gs
stc
leave
stos
test
jp
jno
inc
or
xchg
sub
mov
jae
mov
in
mov
mov
push
icebp
movsb
push
xor
pop
pop
int
push
popa
clc
adc
pop
dec
mov
pop
mov
mov
mov
test
jle
js
sbb
pusha
xorl
sub
push
push
popf
ret
lods
cmp
shrb
mov
and
sub
int
pushf
jns
xchg
jp
xchg
pop
sbb
xlat
mov
jno
lds
xor
mov
add
sub
xor
pop
inc
pop
je
scas
ja
repnz
mov
pop
mov
or
daa
mov
int3
lret
jmp
sub
push
into
push
inc
daa
cmp
adc
inc
pop
xchg
or
jmp
sbb
adc
ljmp
mov
rcr
dec
or
adc
int
das
test
mov
push
sbb
fstpt
adc
jbe
and
cld
lds
add
je
push
popf
jge
and
xchg
ss
insl
cmp
xchg
add
jl
in
fistpl
xlat
data16
jmp
jnp
mov
inc
mov
iret
ja
hlt
sub
sbb
or
aaa
mov
mov
cmc
and
in
or
mov
xchg
lods
sub
outsl
add
stc
loop
mov
test
imul
mov
xchg
mov
test
clc
or
sahf
adc
xchg
ja
dec
mov
jecxz
movb
negl
lret
loope
jmp
es
stos
and
push
mov
mov
push
ja
repnz
cmpsb
inc
pop
dec
fisttpll
lahf
ret
mov
fidivrl
pop
mov
stos
mov
int
add
sub
push
mov
and
lock
mov
je,pt
push
test
cmp
scas
adc
push
test
mov
inc
cmpsl
jno
add
xchg
test
mov
push
jnp
sti
inc
ret
xlat
push
bound
test
push
adc
shlb
fwait
xor
xchg
mov
mov
out
movsl
dec
daa
xorb
repz
ficoms
mov
adc
sub
mov
negl
movsl
mov
sahf
mov
and
add
jne
push
vmwrite
lds
cli
pop
pop
fldenv
mov
or
aas
jmp
mov
or
cmp
inc
in
icebp
push
bound
mov
sub
loopne
mov
xchg
scas
or
cs
rep
fsubl
push
add
je
cmp
cmp
data16
and
outsl
nop
xchg
add
mov
inc
imul
andb
push
xchg
pop
push
or
aaa
lods
cwtl
mov
int3
xor
dec
xchg
std
or
fidivl
orl
clc
pavgb
and
push
imull
adc
fs
loopne
cmpsl
rcrl
inc
adc
pop
cmpsl
lods
cmp
pushf
inc
test
lret
and
fbstp
andb
cmp
and
add
das
gs
xchg
frstor
scas
movsl
add
cmp
gs
xchg
jno
xchg
ret
xchg
test
mov
in
jnp
xchg
call
adc
xchg
xor
into
sub
push
icebp
xchg
mov
in
xchg
cs
and
arpl
loop
inc
aas
xchg
shlb
rcr
push
js
aad
mov
ret
sahf
aaa
out
push
std
xor
fsub
inc
sbb
out
stos
sub
sub
jmp
jge
lea
icebp
stc
test
and
repz
les
into
adc
sub
push
inc
pop
mov
adc
movsb
adc
add
loop
pop
repz
pop
adc
mov
adc
fwait
xor
das
inc
mov
xchg
nop
sti
out
jae
lds
inc
scas
add
insb
pusha
sti
xchg
jnp
adc
ljmp
xlat
ljmp
dec
loop
or
iret
les
push
fs
pop
sbb
loopne
lcall
pop
inc
stos
rclb
sub
dec
cmp
fwait
stos
sbb
cwtl
mul
jp
sub
movsb
mov
xchg
das
push
rorb
sub
or
sbb
xchg
sbb
movl
lods
aad
dec
sub
xchg
pop
jae
ret
insl
movsb
cmc
mov
dec
inc
sahf
jnp
sub
js
sbb
call
jl
push
adc
mov
cmp
pop
leave
jge
sbb
push
dec
mov
rclb
lock
fimuls
dec
mov
pop
adc
push
mov
adc
icebp
lcall
in
fcoms
jne
clc
mov
push
mov
jmp
cmpsl
movsb
mov
adc
stos
inc
xor
jne
sub
mov
jmp
push
fs
clc
mov
inc
out
das
push
dec
mov
dec
mov
mov
gs
jae
cli
mov
cmp
stos
mov
aas
mov
push
addl
ds
aas
mov
mov
jmp
pop
into
stc
nop
cld
leave
lock
inc
out
fdivl
push
jecxz
pushf
push
pop
mov
jge
shl
jp
sbb
sub
sub
inc
jp
xor
mov
and
sub
fcmovnu
nop
mov
sub
cs
sbb
popf
jecxz
dec
dec
pushf
sbb
ficoms
push
das
cltd
push
std
nop
lahf
jmp
in
js
xor
notb
dec
mov
sti
add
mov
fucomi
ror
in
fisttpll
loopne
pop
outsl
addb
out
xor
sbb
pop
mov
popl
outsb
stos
add
add
jp
jmp
jae
and
shrb
clc
arpl
test
lcall
jae
jecxz
nop
ljmp
out
fcoms
cmpsl
loope
das
sbb
lret
notl
xor
push
sti
jle
cld
jne
xchg
mov
adc
jo
mov
iret
mov
fldt
ja
leave
add
mov
mov
mov
pop
movsl
mov
cwtl
inc
jl
jp
mov
or
aaa
outsb
out
xor
xchg
push
pusha
pop
or
icebp
sub
stc
mulb
sbb
insl
mov
adc
jae
clc
shlb
daa
mull
es
in
repnz
jle
pop
xor
jecxz
imul
adc
mov
dec
sub
mov
ret
dec
out
icebp
test
fsubs
jnp
scas
mov
xchg
lods
xchg
inc
inc
xchg
clc
imul
out
pop
shrl
pushaw
js
jbe
sbb
pop
shll
jne
out
scas
inc
insl
stos
jno
or
scas
inc
repz
sub
ja
int
test
aaa
stc
pop
in
mov
loope
cmp
mov
stos
inc
xchg
dec
push
scas
pop
jmp
decb
inc
push
adc
pop
add
cmp
je
xor
or
push
push
test
jae
jae
cmp
pop
cltd
fldl
ja
test
icebp
cs
xchg
push
mov
sbb
add
test
out
stc
loop
ret
cs
pushf
div
add
cmc
hlt
test
mov
sub
adc
shl
bound
dec
adc
dec
inc
jecxz
sub
js
rolb
imul
or
fmull
fisubrs
test
ret
popf
outsl
push
lods
sbb
dec
aas
sarl
das
mov
mov
dec
push
adc
aas
ds
xor
cmpsl
into
arpl
cmp
hlt
hlt
popf
cmpsb
cli
jge
dec
xor
jge
cmpsl
les
mov
push
rcll
dec
je
sbb
popa
jo
xchg
xor
pusha
push
shlb
xchg
mov
sub
adc
dec
imul
add
ret
out
or
pop
jns
pop
movsl
int3
aam
fmull
sub
jae
mov
pop
mov
inc
sbb
iret
sub
in
leave
pop
jecxz
aaa
inc
cli
leave
repnz
pop
pop
notl
sahf
sti
pop
sub
aas
dec
push
jp
jo
sub
ret
mov
xor
outsb
jnp
mov
xchg
mov
cmp
cmp
cmpsb
xor
enter
xor
roll
add
add
inc
scas
in
sub
mov
push
xchg
scas
xor
pop
mov
outsb
bound
je
rorb
fsubrp
fisubl
jl
in
sub
iret
aaa
scas
mov
mov
iret
add
mov
lock
sub
das
mov
shlb
jge
jmp
inc
mov
ss
jmp
in
push
sbb
adc
sub
mov
sarl
ret
shll
cmp
mov
push
adc
inc
jnp
jp
push
mov
cmc
in
pop
sahf
pop
xchg
aas
push
mov
adc
sub
push
sub
aad
ficoml
adc
pop
movl
xchg
sahf
sti
iret
push
ret
arpl
mov
out
stos
fmul
dec
lahf
add
in
popf
mov
and
ret
sbb
and
xchg
sar
lods
rorb
lret
lret
enter
loop
inc
sbb
aas
psubw
dec
fisubl
add
xor
sbb
sub
lahf
adc
popf
call
xor
xor
sbb
or
xor
mov
add
add
outsb
arpl
or
xor
aas
cmc
xchg
add
sbb
lods
into
fsubr
decl
mov
repnz
pusha
in
enter
xchg
pop
xchg
and
mov
loope
fistl
pusha
fldenv
unpcklps
lock
or
into
mov
loopne
push
xlat
in
xor
or
int
xchg
inc
subb
sub
test
xor
add
dec
and
mov
jecxz
jno
fiadds
rorb
lcall
scas
lea
xor
cmp
mov
outsl
es
iret
fnstenv
mov
pusha
pop
or
mov
mov
xchg
sub
inc
aas
mov
jnp
cmpsl
xchg
lods
div
outsb
mov
sub
orb
jg
pushl
or
pop
inc
mov
cli
test
pop
jnp
lea
mov
enter
pop
addr16
je
mov
fwait
mov
popw
pop
testb
or
test
cmpsl
push
jle
sbb
mov
fsubrs
nop
sarl
sbb
mov
sti
rcrl
data16
int3
rcrb
push
stos
jb
les
js
cmp
aad
or
in
loopne
dec
xor
pop
push
push
push
dec
incl
js
or
xchg
jmp
dec
ret
aas
push
jg
in
jns
in
xchg
and
mov
pushf
mov
adc
add
rclb
push
je
add
je
jmp
xchg
dec
jae
xlat
jle
and
adc
add
cmp
in
cmp
xlat
push
ret
pop
cltd
fistl
push
ja
or
daa
mov
and
xor
aas
push
sub
mov
cmp
call
cltd
in
pushf
pop
xchg
jo
stc
aas
mov
mov
js
sbb
mov
dec
adc
insb
pusha
inc
and
imul
jge
add
pop
int3
xor
sbbl
jns
scas
sub
xchg
sub
hlt
mov
jno
push
push
xlat
movsl
jno
stos
dec
push
pop
mov
and
pop
pop
mov
sub
cmp
jne
xor
jp
loope
movsb
mov
pop
imul
adc
sub
cmp
dec
dec
iret
dec
ds
or
rol
es
je
dec
in
inc
pop
roll
negb
das
fcompl
sub
test
jns
pop
jno
jae
popa
mov
mov
dec
inc
jne,pn
pop
scas
sub
sbb
scas
movsl
jle
cmp
movsl
mov
add
fbstp
or
xlat
sbb
xor
add
sti
les
outsb
loopne
stos
and
inc
cmc
jge
rol
clc
and
ret
lret
imul
add
fucomi
in
jae
cmpsl
adc
out
cmp
inc
adc
fistps
mov
sub
xor
flds
test
push
xor
aam
pop
ljmp
push
in
push
fldt
hlt
sub
out
or
and
xchg
inc
inc
iret
popf
mov
scas
inc
out
dec
dec
repz
loope
into
mov
testl
xor
xor
sub
lahf
imull
push
movd
mov
sub
pop
fcompl
out
cmp
adc
and
inc
sahf
or
lret
jae
hlt
sbb
les
pop
mov
repz
test
cli
shl
mov
sbb
sbb
adc
cmp
mov
fistpll
sbb
out
rcrb
stos
mov
enter
xchg
out
xor
les
arpl
lret
sbb
pop
fwait
jl
scas
pop
cltd
dec
mov
dec
fidivrl
iret
and
adc
scas
inc
sti
sub
and
in
jcxz
rorb
fwait
cltd
out
aaa
popa
js
sahf
sbb
pusha
push
jl
xor
and
fildl
and
jle
in
or
inc
clc
test
or
sub
insb
mov
es
sbb
test
movsl
push
movsb
add
dec
add
mov
dec
jo
incl
pop
testl
jecxz
sub
push
pop
mov
xchg
and
movsl
sub
lret
jne
pop
dec
mov
jb
std
aad
xchg
fst
testl
or
lea
mov
jnp,pn
jmp
imul
mov
sub
pop
sbb
mov
ja
fdivp
scas
sub
pop
jno
pushf
mov
nop
cs
orl
decb
mov
fiaddl
sub
mov
loop
shrb
ret
jb
xor
sub
icebp
sub
add
cmp
inc
or
dec
and
and
xor
mov
ss
loop
sbb
adc
adc
loopne
in
cmpsb
addr16
adc
adc
fdivrl
xchg
dec
mul
push
jne
movsb
test
dec
shrl
fisubrl
rol
cmp
xlat
inc
inc
popa
and
xchg
adc
hlt
data16
rorb
xchg
xchg
loop
imul
lock
jecxz
mov
fisttps
fisttps
fs
sub
xor
leave
inc
or
dec
mov
xchg
pop
repnz
pop
push
sbb
cmp
pop
pop
mov
xchg
pop
lods
into
xchg
stos
cmp
xor
push
stos
mov
enter
femms
push
fsts
je
dec
sub
adc
fistl
cmp
lods
push
lock
cs
je
imul
mov
test
push
inc
out
and
adc
lret
fldcw
sbb
mov
daa
cmpsb
adc
icebp
xchg
sbb
xchg
cmpxchg
and
dec
or
out
fistl
push
jle
or
in
xchg
aam
pop
daa
mov
adc
shll
and
cmpsl
les
iret
xor
dec
rclb
push
loope
stos
mov
xchg
push
add
pop
adc
stos
jnp
sub
push
pop
pop
testl
cs
pop
stos
lds
fnstenv
cwtl
leave
lahf
xchg
dec
cwtl
fistps
push
je
pop
fcoms
push
in
movsl
rcrl
es
jecxz
dec
arpl
xor
sub
loope
clc
sub
cwtl
push
movsb
mov
movsl
pushf
mul
daa
stc
sbb
movsb
jge
xor
out
sub
addr16
arpl
jbe
mov
imul
popf
mov
xor
push
adc
mov
cltd
jbe
inc
jecxz
mov
sub
cmp
add
scas
jne
inc
mov
adc
movsl
add
xchg
mov
mov
push
adc
xor
xor
aaa
repnz
cmp
and
mov
stc
sub
cmp
cmp
sbb
fisubs
mov
mov
int
pop
mov
test
push
mov
xchg
sbb
inc
jb
in
inc
sub
sub
and
call
sub
fisubrs
lahf
out
push
data16
das
or
mov
push
adc
or
xor
shrb
jge
adc
push
shlb
xchg
addr16
cltd
sarb
outsl
outsb
push
cmc
mov
ds
cmp
lret
add
sub
push
cmp
mov
add
jmp
jne
mov
push
iret
mov
pop
dec
inc
and
mov
and
ror
sbb
push
adc
push
xor
push
clc
adc
jae
incl
or
sbb
shlb
cwtl
jne
xor
je
rep
stos
xchg
std
adc
mov
pop
fimuls
xor
repz
push
push
cld
addr16
mov
sti
sbb
mov
pop
mov
das
repnz
cli
popa
imull
sbb
sbb
fsubr
into
aaa
sbb
popa
mov
test
les
shl
cltd
mov
fwait
sub
xor
inc
lds
inc
cmp
xchg
mov
ja
jno
out
out
jmp
stos
push
sub
mov
adc
lret
sbb
mov
mov
pop
fnstcw
ror
add
push
xchg
out
nop
outsl
inc
and
push
push
xor
in
insl
ficoml
add
inc
jae
pop
jl
aaa
and
icebp
filds
test
andb
test
and
inc
sbbl
ljmp
jno
lds
jl
push
mov
sbb
cmp
jmp
mov
sub
xor
scas
cwtl
sbbl
insl
mov
cmc
fisttps
dec
pop
scas
inc
popf
inc
jmp
sbb
or
test
cld
sub
push
imul
int
push
or
jmp
xchg
inc
xchg
fucomip
and
daa
out
sbbl
es
lock
std
xchg
xor
jno
or
adc
xchg
mov
cmp
subb
mov
jmp
pop
movsl
cmp
ds
testl
add
mov
xor
das
cwtl
xchg
repnz
pusha
int3
iret
pop
xchg
lcall
and
es
sbb
dec
aaa
and
test
jne
inc
dec
mov
lret
add
mov
adc
pop
hlt
xchg
fs
inc
scas
int
mov
stc
std
pop
adc
aas
and
ljmp
sbb
jge
shlb
adc
jno
mov
jp
fists
sbb
adc
dec
xor
push
das
out
jne
cmpsb
cli
rolb
sbbl
adc
insb
repnz
aas
lods
scas
out
mov
xlat
lods
out
testb
pop
ss
sbbl
je
sbb
in
lcall
test
sub
aas
mov
xlat
cltd
fwait
js
mov
xchg
repnz
sub
pop
sbb
cmp
push
xchg
jle
aad
or
add
inc
xorl
repnz
push
pop
add
and
das
lds
pop
fcompl
rcrb
ficomps
and
inc
outsb
shr
push
xchg
nop
pop
push
mov
in
outsl
insl
adc
push
cwtl
add
insb
xchg
ds
pop
mov
test
cmp
clc
or
xor
mov
xchg
mov
or
daa
push
adc
cmp
orl
xor
jmp
in
lods
js
movsl
or
in
outsl
mov
sahf
add
jp
imul
pop
cltd
push
mov
or
loope
clc
push
jecxz
aad
add
mov
mov
xchg
xor
test
loope
dec
shll
ficompl
fidivrl
sarw
pop
xchg
pop
hlt
lcall
and
fxch
sbb
test
mov
in
out
imul
leave
shrb
sti
cmp
gs
jecxz
dec
inc
cmpsb
xchg
push
xor
fdivrl
adc
inc
mov
sqrtps
in
xchg
das
stos
loopne
addr16
test
rolb
int
push
loop
stos
gs
push
ljmp
mov
data16
push
les
rcl
adc
xor
sti
incb
sbb
leave
imul
and
jle
mov
push
lds
cmp
add
pop
mov
out
dec
js
adc
jae
dec
imul
add
cmp
inc
or
push
fwait
adc
std
jae
inc
cmp
push
fmull
or
addr16
sub
movsl
lea
mov
jbe
fs
sub
push
aam
fs
pop
mov
jp
fistpl
cwtl
pop
inc
ret
lcall
or
movsl
mov
sub
sub
fldt
cmp
icebp
in
mov
pop
cmp
xor
aas
fdivrs
and
and
sti
bound
popa
cmpsb
loop
fnstcw
addl
sbb
lods
js
movsl
push
pop
mov
adc
imul
xor
mov
dec
jae
xor
push
sbb
jle
inc
mov
or
add
xor
mov
jg
xchg
nop
sub
cmc
stos
cmp
dec
xchg
dec
mov
fistpl
mov
adc
call
xchg
int
and
cli
xchg
dec
push
jae,pt
and
repnz
jo
xchg
sub
cmc
lds
cs
pop
ds
xchg
xchg
and
ret
mov
fwait
sub
inc
pop
stos
xchg
aas
sti
cwtl
and
scas
cltd
lret
xor
xor
inc
jecxz
adc
loopne
incb
leave
mov
dec
cld
mov
daa
add
sbb
sbb
pop
ficoms
ficompl
push
pusha
js
and
jae
sub
fisubrl
test
ds
into
jb
push
push
dec
mov
cmp
mov
outsl
jmp
xchg
sub
xchg
push
outsb
sub
xlat
rclb
sbb
lock
xlat
mov
jae
push
jne
stos
pop
rcll
mulb
xchg
pop
movsl
imul
jecxz
test
repz
adc
pop
addr16
xor
inc
nop
sahf
dec
dec
cmp
sarl
aam
jnp
fbld
adc
cmpsl
insl
out
inc
int3
out
mov
fwait
sbb
mov
decb
push
fsts
cld
pop
andl
xorl
out
pop
jmp
mov
mov
call
xor
xchg
shll
inc
add
lret
addl
mov
fnstcw
ficoml
scas
push
addb
popl
xorl
xchg
and
aam
jge
sub
mov
mov
fxch
loop
sahf
iret
ss
xlat
pop
mov
cltd
clc
mov
mov
xchg
mov
iret
hlt
dec
orl
mov
int3
stc
test
aas
in
or
insb
add
data16
out
fisubs
adc
cld
insl
or
aaa
fbld
aas
jb
pop
inc
dec
add
add
out
dec
cmp
dec
push
fsub
add
mov
sti
pop
leave
daa
mov
jmp
out
adc
dec
lds
sub
lea
mov
jbe
ss
loopne
stc
lcall
insb
fbstp
shl
xchg
mov
fwait
inc
pop
jmp
divb
iret
loop
mov
jae
jbe
mov
pop
cmp
fmuls
fcmovne
xor
cltd
push
jo
stos
loope
ret
aas
repz
fwait
movsb
mov
insb
pop
sbb
sbb
push
cld
pop
fdivr
ret
mov
mov
and
shrb
push
imulb
push
add
or
push
jmp
pop
movsl
mov
lods
pushf
insb
mov
adc
adc
push
lea
out
sbbb
insl
xlat
mov
in
jecxz
xor
shll
lret
cmp
imul
sub
mov
ja
xor
sbb
sbb
jecxz
push
sbb
pop
test
and
add
and
mov
pop
jmp
push
aad
stc
inc
or
or
mov
lock
xor
mov
les
mov
dec
dec
sti
jo
pop
and
scas
lods
jp
cmpsb
hlt
mov
or
sbb
std
lea
xchg
in
add
fnsave
scas
out
dec
mov
fdivs
xor
push
lea
out
dec
fsubrl
cmp
xorb
pushf
fcoml
jne
std
mov
mov
jmp
sub
leave
mov
int
jmp
test
cmp
ja
xchg
arpl
sub
jo
lods
or
les
mov
ret
inc
add
xchg
dec
jl
aad
out
dec
insl
pop
push
iret
jnp
add
sub
pop
xor
jo
mov
ret
mov
xchg
xor
xchg
addb
dec
outsb
lods
mov
jg
sti
push
jnp
fistl
adc
push
arpl
call
mov
xchg
adc
dec
sbb
add
insl
scas
mov
pop
sbb
jbe
stos
je
inc
xor
sbb
cmc
mov
mov
cmp
loop
and
cmp
cmpsl
int3
xchg
or
dec
jp
icebp
add
cmc
or
mov
movsl
repz
mov
movsl
fists
mov
xor
sbb
dec
ret
dec
dec
xor
or
and
mov
xor
lods
ja
repz
xchg
nop
popf
mov
out
out
xor
dec
stos
clc
add
cli
out
dec
fmuls
xchg
repz
in
fiaddl
sbb
add
pop
rcl
repnz
add
fsubp
pop
mov
loop
jb
dec
imulb
dec
outsl
inc
out
sbb
shll
cmp
fnstenv
stc
mov
push
cmp
into
popf
jns
lahf
sub
xchg
adc
ss
xor
out
adc
add
cli
shl
mov
andl
movsl
mov
mov
loop
add
or
and
mov
mov
loope
cmp
push
adc
clc
lods
mov
mov
pusha
xchg
clc
and
stos
pop
aam
adc
jnp
fnstsw
push
jp
outsb
mov
jnp
addl
push
aas
ja
clc
mov
ja
jmp
sub
sub
lcall
jecxz
sarb
xchg
pop
cmpsl
and
mov
pushf
notb
jnp
fwait
lea
jbe
mov
add
adc
sbb
call
std
lret
fists
push
loop
pmaddwd
xor
dec
ja
xchg
push
imul
test
cs
jno
mov
sbb
inc
pop
push
test
inc
xchg
push
jo
outsl
xlat
fsub
cmp
jle
lcall
mov
jecxz
int
rclb
push
mov
inc
mov
cmc
jns
sbb
fmul
xor
push
ret
das
pavgb
test
cmp
gs
or
add
ret
insl
imul
stos
iret
dec
and
lahf
ljmp
mov
xchg
mov
std
xchg
jl
hlt
and
cmp
mov
arpl
testb
mov
jae
mov
jl
push
or
inc
jl
dec
in
enter
jnp
into
jne
mov
and
insl
sub
mov
jle
dec
adc
lcall
imul
or
inc
ds
pop
ss
xorb
dec
fimull
sub
adc
push
jno
mov
jle
stos
or
shll
stc
ljmp
xlat
cmp
xlat
cmc
sub
fadds
push
fs
test
sub
ss
lods
mov
xor
jbe
lock
add
push
adcl
push
jg
sbb
stos
rorb
fisttpll
jnp
shl
inc
outsb
pop
sub
sbb
fldenv
or
inc
push
scas
ficompl
cltd
sub
pop
dec
es
dec
in
loope
sbb
in
jg
inc
push
mov
add
push
xchg
enter
sbb
mov
cld
xchg
das
movsl
cs
inc
cwtl
out
ret
inc
inc
mov
pop
not
fstl
add
push
fs
test
pop
out
xchg
jnp
movsl
cmpsb
stos
xchg
add
sbb
imul
js
bound
dec
xor
xlat
jo
lahf
xor
jb
js
pushf
jecxz
jge
mov
loope
xor
dec
xchg
push
insl
sbb
cmp
push
mov
lods
inc
fimuls
dec
jmp
nop
push
add
cld
into
mov
cmpsb
fsubrs
xchg
les
mov
xor
cmpsl
loopne
sub
fcmovne
jo
pop
mov
lock
pop
jmp
jg
mov
dec
mov
pop
inc
push
dec
pop
mov
aas
xchg
sub
fwait
xrelease
mov
sub
adc
nop
sub
les
loop
or
mov
stc
iret
pop
daa
push
sub
stos
push
stos
jb
sbb
lret
aam
call
mov
hlt
cmpsl
xor
out
mov
daa
fcmovne
pop
cmp
push
jne
jp
push
hlt
cmpsl
fcmovnb
fldt
jle
mov
xchg
outsb
sbb
in
pop
data16
push
xor
xor
lret
mov
scas
dec
loope
out
sub
andl
mov
adc
iret
sbb
or
out
dec
pop
sub
fsubr
dec
addr16
mov
cld
mov
mov
and
lret
pop
cs
fmul
xlat
mov
lret
imul
pop
sub
popa
xchg
inc
pop
rcr
mov
gs
out
imulb
lds
sub
movsb
push
iret
pop
add
pop
jnp
pop
push
gs
dec
sbb
mov
push
stos
fldl
hlt
sub
mov
stos
or
in
jecxz
mov
fimuls
lcall
add
in
sub
push
push
xor
das
dec
xchg
cwtl
negb
xor
or
jne
dec
jle
les
mov
or
loopne
jmp
mov
pop
ficoms
mov
shll
es
jbe
iret
inc
fsubr
and
scas
pusha
jg
add
adcb
bound
and
adc
sahf
mov
and
adc
test
sti
icebp
scas
ss
test
pusha
pop
jb
push
inc
lcall
push
mov
gs
jge
fiadds
mov
push
jae
gs
arpl
fisubl
fiadds
jnp
insl
and
inc
cwtl
sarl
call
into
ficompl
int3
xor
and
enter
cli
and
jl
popa
cld
mov
jb
push
jno
xlat
xchg
jecxz
inc
enter
out
xor
aas
icebp
and
mov
jb
in
inc
daa
lret
iret
jbe
dec
insb
mov
ds
mov
aaa
pop
fst
xor
out
cmpb
push
insb
or
mov
roll
lock
call
push
fisttpl
test
and
shr
lret
dec
jne
add
jge
cs
pop
jecxz
xor
fadd
pop
mov
mov
movsb
cmp
xor
mov
jno
mulb
fwait
dec
inc
ljmp
rclb
int3
or
cmpsl
icebp
mov
jle
aaa
mov
clc
fwait
add
jle
cmpsl
ljmp
sbbl
loop
dec
xor
aas
push
in
sub
sbb
dec
xchg
push
push
inc
jmp
scas
out
or
leave
lcall
xor
insb
sub
cltd
xor
xchg
lea
push
sub
jb
outsb
mov
push
mov
sahf
push
cmp
daa
adc
rcll
sbb
fdiv
dec
popf
aaa
push
dec
jg
xchg
sub
test
lret
loopne
stos
mov
in
cmovg
or
shrb
sar
fwait
jno
retw
and
clc
inc
lock
xchg
call
pop
outsb
fcomp
xchg
rcr
sub
cmp
mov
mov
imul
jge
xchg
cmp
icebp
inc
cmp
push
addb
stos
push
mov
insl
and
jg
enter
imul
xor
orb
or
xchg
cld
xchg
jge
sbb
mov
xor
jmp
mov
add
and
pop
pusha
xchg
loope
push
insb
dec
fistps
and
or
or
push
cmp
or
lcall
lahf
add
sub
sub
push
xchg
mov
adc
jno
cld
loope
loopne
push
or
cmp
push
xchg
xchg
jp
ficoms
dec
stos
jne
neg
xchg
pop
or
fwait
andb
xor
pusha
lods
fsts
daa
sub
sarb
inc
and
cmp
dec
loope
popa
and
in
cmp
xchg
imul
aas
cmp
push
mov
or
and
dec
xorb
pop
outsl
mov
jecxz
push
xchg
js
xor
xchg
pop
movsb
mov
jnp
call
stc
dec
xchg
mov
mov
in
adc
or
inc
jo
jne
pop
and
adc
cs
dec
dec
pop
fcomps
clc
sbb
dec
xor
or
cmp
lods
ljmp
lods
sarl
loope
cmp
bsf
insb
in
icebp
xchg
mov
mov
xor
mov
or
push
mov
sbb
jb
ss
sbbb
lret
lods
jae
adc
inc
inc
pusha
mov
test
fstl
aaa
jae
jae
sub
aam
mov
popa
jp
addl
test
mov
cs
insl
jp
or
mov
int
fs
sbb
sbb
push
sbb
xor
out
push
stos
jp
push
aaa
out
movsl
push
das
inc
ds
loopne
mov
es
add
dec
daa
shr
sbb
dec
ss
or
push
sahf
mov
imul
cld
rcr
loopne
scas
rorl
mov
ret
into
loop
cltd
and
xchg
testl
adc
xchg
dec
int
jle
js
enter
out
sbb
adcl
cmp
xor
adc
icebp
xor
fbstp
sub
ja
outsb
popa
jnp
xchg
pop
lcall
jnp
stos
inc
aad
xlat
lods
faddl
sbb
pop
xor
iret
mov
pop
xor
add
cwtl
ja
mov
daa
fdivl
push
mov
xchg
stc
jne
adc
nop
scas
mov
jns
out
xchg
xchg
fsubr
fisubrl
add
jo
bound
in
lret
fstpl
subl
cmpl
ds
xchg
pop
sbb
test
movsb
mov
gs
xchg
stos
arpl
cwtl
fbstp
data16
mov
add
jbe
int
push
jae
aaa
sarl
dec
dec
bound
loope
lret
or
mov
sub
mov
pop
mov
lret
jge
adc
lods
shll
cmpsb
jno
jmp
jns
mov
and
push
lret
mov
cmpsb
movsl
xchg
mov
push
jle
add
cld
fcomps
push
xchg
push
xchg
sbb
mov
xchg
enter
inc
push
sbb
int3
xchg
sarb
nop
sub
cmp
in
in
and
mov
gs
mov
aam
das
add
je
mov
xchg
imul
xor
pop
sbb
ret
gs
mov
movb
jmp
mov
mov
mov
lods
fstps
fcmovbe
sub
and
ficomps
icebp
lret
mov
push
ficompl
mov
shll
mov
or
mov
shll
lcall
arpl
aas
dec
lds
popf
sahf
pop
xor
or
insb
jne
mov
movsl
fcoms
adc
imul
push
sbb
dec
dec
popf
adc
dec
dec
lds
loope
and
inc
pop
aam
aas
dec
test
rcll
and
out
out
outsb
cmc
or
mov
out
push
add
rol
and
pop
mov
lahf
movsb
int
xchg
in
jmp
jl
jg
cmp
sbb
jae
popf
fimull
jge
cmpl
or
flds
negb
and
dec
dec
pop
push
fcomi
aad
loope
or
sbb
sub
push
mov
xor
cmpsl
cld
mov
jg
jbe
hlt
mov
push
imul
sub
cmp
cs
lods
jg
mov
hlt
xchg
js
mov
and
jbe
lcall
pop
mov
dec
and
out
jbe
cmc
sbb
xlat
aaa
lea
push
aam
imul
cmp
rcr
cmp
fmull
es
xchg
pop
sub
jns
addr16
das
arpl
inc
pop
fdiv
es
xchg
jmp
dec
int3
fwait
ja
int3
stos
mull
sarb
xor
xor
or
jns
xor
jge
push
std
xor
loop
pop
xchg
in
lret
aam
loop
sub
and
xor
xor
dec
ss
push
add
clc
out
dec
jg
jae
sti
adc
dec
jmp
lods
inc
daa
mov
jecxz
dec
jmp
cmp
xor
repnz
jp
incb
jnp
les
pop
mov
mov
jl
add
loopne
data16
test
xchg
cmp
jb
cmp
punpckhbw
stos
lahf
pop
nop
outsb
out
jno
ljmp
out
inc
and
in
icebp
out
push
sbb
adc
push
out
add
scas
dec
and
repnz
cmpsl
sbb
cmpl
fdivl
pop
inc
ds
rorb
and
xchg
sbb
xchg
push
adc
fiaddl
pusha
mov
fmull
cmc
push
imul
pop
jecxz
cs
sbb
and
lea
xlat
loop
pop
cltd
dec
pop
add
cs
leave
sub
clc
js
sub
popf
fisttpl
orb
roll
mov
push
shrl
inc
cld
push
mov
inc
iret
movsb
sbb
mov
mulb
xchg
pop
dec
sbb
cmpsb
hlt
stos
or
pop
add
daa
scas
add
jle
mov
push
push
loop
cmc
adc
pop
adc
cld
in
popa
sbb
adc
in
mov
insb
or
das
and
pop
cmp
es
inc
stc
aam
dec
push
push
push
and
call
xchg
push
leave
jne
jmp
addr16
push
jle
xor
xor
in
shlb
inc
lahf
je
ret
sbb
xor
inc
test
shrl
sbb
push
adc
pand
shlb
in
test
xchg
aaa
out
cltd
ss
pop
test
outsl
sub
push
jns
sbb
push
in
dec
enter
push
or
push
out
pop
outsl
test
xchg
sub
xor
shr
xor
jg
ret
jg
dec
mov
sbb
inc
or
mov
loop
sbb
fdivs
jns
insb
outsb
push
or
dec
push
test
test
adc
in
cmp
jmp
dec
es
gs
xchg
fwait
xchg
sbb
push
jg
jecxz
int3
xor
into
cmp
push
lock
mov
xor
jmp
mov
sub
cmp
pop
test
rclb
repnz
push
dec
lods
cmp
out
pop
pushf
nop
shll
or
mov
ljmp
or
cmp
inc
jbe
inc
xchg
add
icebp
addr16
ret
sbb
mov
mov
jne
mov
inc
add
dec
jp
fists
js
test
imul
mov
movsl
lods
or
lahf
ds
mov
in
daa
lods
mov
inc
xchg
sbb
mov
mov
mov
aas
inc
jo
fdivr
mov
mov
xchg
pop
mov
jno
ret
divl
lahf
xchg
mov
leave
xchg
mov
fnstcw
xor
jae
lds
adc
dec
lods
mov
inc
arpl
out
std
cmpsl
cmpsl
neg
dec
iret
stos
or
lcall
pushf
sbb
in
dec
cli
imul
fs
clc
cwtl
dec
or
insb
lods
stc
in
pop
mov
out
shlb
push
lea
add
mov
pop
stos
imul
adc
jno
imul
jle
shll
jle
popf
push
push
xchg
cwtl
jno
or
inc
sub
pop
xchg
lods
or
sub
daa
add
dec
xor
shr
cltd
dec
outsb
stc
jle
cmp
pop
out
push
stos
scas
lods
fst
jl
imul
or
iret
sub
sbb
nop
mov
dec
sub
xor
jno
push
outsb
mov
xchg
mov
xor
aad
mov
stc
cwtl
and
adc
shlb
jo
or
sbb
pop
dec
rorl
iret
push
lock
ret
and
xchg
sbb
xchg
sub
mov
jmp
outsb
sbb
jecxz
xor
arpl
loopne
shl
add
dec
xchg
xchg
mov
xchg
jl
outsl
filds
or
add
adc
loopne
jg
out
jle
loopne
les
mov
shrl
mov
jmp
nop
jecxz
dec
icebp
jo
mov
rcr
test
bound
mov
scas
into
aam
mov
xor
stos
push
mov
iret
js
ds
mov
push
dec
push
out
adc
pushf
sub
xor
scas
int3
ds
je
loope
sbb
jno
nop
sub
notl
adc
xorl
ss
dec
iret
add
mov
outsl
call
iret
lret
lds
mov
or
adc
push
outsl
and
jl
xor
loop
ret
movsb
je
ljmp
rorl
mov
xor
adc
test
notb
fwait
hlt
mov
lcall
clc
in
push
movl
in
outsb
and
jnp
push
mov
or
mov
cmp
bound
pop
pusha
xchg
xor
rcrl
ja
movsb
dec
push
sbb
in
sbb
sub
push
ds
dec
fisubrl
imul
cmp
ljmp
out
mov
stos
addb
adc
shlb
xor
enter
clc
lret
pop
xchg
out
push
mov
sub
dec
enter
sub
sbb
iret
push
leave
push
call
sub
xor
addr16
adc
cli
call
scas
into
adc
rcll
out
mov
mov
jnp
xchg
clc
test
lds
jge
xchg
mov
out
das
lcall
stc
loop
inc
cmp
mov
idivl
out
ja
mov
push
and
testl
rolb
cld
cwtl
lods
adc
dec
lea
xor
xchg
xlat
jmp
sbb
sub
lea
in
insb
fsts
enter
rorl
pop
sbb
mov
popa
sahf
add
popf
lea
adc
ljmp
into
aam
xchg
jmp
mov
negl
ret
jo
ss
and
out
xor
lret
call
into
or
pop
lahf
push
ljmp
clc
pop
sub
jecxz
repz
push
arpl
adc
xchg
pop
popf
cmp
pop
xchg
jle
int
and
sub
incl
outsb
ja
fdivl
shlb
dec
jg
pop
push
or
out
fisubs
nop
dec
bound
jle
aaa
sarb
sub
out
cmc
mov
cli
inc
mov
cwtl
xlat
jae
or
data16
jns
arpl
push
es
mov
pop
xlat
xor
lret
gs
fimuls
arpl
cwtl
in
lods
xchg
xchg
movsb
sub
in
mov
fdiv
out
jg
mov
sub
mov
or
mov
inc
test
add
jnp
pop
jae
mov
cmc
fdivs
xor
cmp
push
xor
rolb
xchg
jae
add
subb
fwait
jnp
pcmpeqw
inc
rcll
push
les
add
mov
or
dec
push
mov
in
xchg
pop
scas
sub
xor
nop
sub
adc
imul
jo
adc
push
jecxz
cmp
sbb
mov
test
push
shll
sbb
repz
mov
mov
enter
aam
dec
neg
mov
cmp
mov
in
les
dec
test
clc
mov
scas
mov
and
clc
aad
ds
scas
outsb
push
fwait
xor
incl
sub
sbb
loopne
out
xor
xor
jns
and
jmp
subl
es
or
mov
rcrl
jne
pop
dec
pop
push
jmp
dec
fstps
imul
inc
xor
pop
sub
cltd
enter
movsl
scas
mov
push
xchg
jge
pusha
jmp
xchg
jae
xchg
jp
xchg
mov
mov
pop
js
inc
andl
int
jo
pop
call
xor
addb
mov
and
mov
dec
iret
cmp
loop
movsb
cli
add
push
push
cli
adc
mov
jmp
les
jl
hlt
clc
cmpl
jge
mov
xlat
aas
adc
out
push
aaa
and
jae
aas
sarl
cltd
cmp
js
pusha
dec
aam
mov
xchg
arpl
pop
lcall
out
mov
sbb
test
add
icebp
pop
lret
mov
mov
idiv
lcall
aaa
xchg
fcom
icebp
dec
into
repnz
lcall
lods
xlat
in
pop
jo
orb
lcall
cmpl
cmc
hlt
insl
fsubp
mov
and
int3
pop
add
cmc
mov
dec
shl
xchg
inc
adc
push
dec
fistps
movsb
and
fcmovnb
push
sub
pop
cwtl
add
jae
out
loopne
scas
cltd
or
jno
jnp
hlt
add
dec
arpl
cmp
sub
push
cs
mull
mov
pushf
ficompl
mov
sbb
rcll
ret
push
jo
clc
loopne
pcmpeqw
unpcklps
outsl
add
movsb
outsl
ret
dec
movsl
scas
sub
xchg
xchg
adc
rcrl
mov
subl
pusha
cltd
pop
addr16
adc
ss
fdivp
cmp
stos
mov
jmp
in
cs
xchg
int
inc
add
testb
dec
add
jmp
out
xchg
fidivs
out
dec
mov
mov
ds
push
adcb
mov
addl
scas
fs
cmp
insl
in
pop
mov
das
push
iret
xchg
enter
sbb
gs
cltd
repz
int
imul
adc
cli
sbb
jge
inc
xchg
jnp
lea
lret
int3
add
dec
das
arpl
sub
cmpsl
bound
mov
dec
or
mov
popf
stos
cmp
clc
lock
or
loop
rcrl
vmovsldup
pusha
fcompl
pop
ja
cmp
lock
mov
das
pop
mov
lahf
shrb
or
cmp
sarb
test
loope
xor
test
push
outsb
inc
scas
mov
pop
daa
arpl
int3
mov
lret
dec
dec
loope
mov
adc
xchg
adc
out
pop
dec
pop
and
sarl
pop
aad
inc
dec
pop
arpl
mov
cmp
lret
mov
cmc
popa
movsb
leave
outsl
or
mov
aam
stos
and
call
jg
std
pop
mov
push
popa
shll
adc
popf
xor
into
push
inc
mov
fistpl
fnstsw
xor
jne
add
movsl
jb
dec
pop
fdivl
xor
ds
fwait
mov
dec
sub
lock
or
sbb
movsl
jnp
adc
stos
mov
cmp
int3
loope
mov
clc
bound
dec
pop
or
sarb
fstps
push
fdivs
add
lret
stc
push
fisttpl
nop
mov
pushf
and
outsl
pop
leave
lret
lahf
ja
inc
xor
jbe
cmp
mov
inc
xor
push
add
and
insl
mov
cli
inc
jns
stc
popf
lcall
dec
mov
dec
xchg
adc
stc
mov
dec
cmp
pop
sub
cmpsb
pop
xchg
in
push
jp
cmp
xor
jl
daa
rolb
inc
mov
pusha
or
pop
in
adc
cld
add
mov
jecxz
sub
lock
dec
pushf
sbb
jns
aad
lcall
adc
add
or
xchg
icebp
mov
xchg
adc
xlat
mov
xor
cwtl
int3
push
xchg
out
xor
in
imull
xlat
movntps
daa
jb
ficompl
mov
cwtl
push
mov
cld
fbld
push
cmp
lret
adc
add
mov
pop
and
mov
cld
pop
ret
add
inc
lcall
lret
mov
outsl
lods
mov
pusha
movsl
push
ret
jecxz
lods
iret
add
xor
mov
inc
fisubl
loope
xchg
enter
subb
add
mov
jbe
pop
je
inc
movsb
jnp
enter
push
bnd
add
ljmp
decb
fdivl
and
inc
repz
fidivl
rolb
add
push
insl
pop
daa
jl
and
jecxz
sub
cmc
or
stc
nop
fisttpll
ds
xchg
fimuls
and
hlt
js
mov
cmp
in
or
rcrb
roll
lea
or
dec
mov
sbb
sub
aam
mov
outsb
lock
cwtl
test
lret
pop
lret
pop
fwait
jne
push
sbb
sbb
pop
dec
add
pop
in
dec
adc
mov
orb
addb
add
push
jbe
fsubrs
sbb
push
jp
adc
fsub
out
int
xlat
mov
and
in
cld
or
inc
jae
inc
sbb
stos
andb
loop
or
push
inc
jb
jl
lock
push
sbb
gs
lods
cmp
pop
in
lea
scas
out
loop
movsb
add
add
mov
fsubrs
insb
jbe
jmp
mov
push
jnp
jae
pushf
rcr
aas
xor
fbld
or
mov
jns
fstl
out
jge
sti
out
push
out
dec
aaa
jo
jmp
fcmovu
imul
dec
ds
cmp
jge
loope
and
mov
mov
xchg
xor
aaa
pop
insl
mov
mov
xchg
insl
pop
sahf
daa
nop
out
aas
push
call
push
shlb
je
or
out
cmp
test
and
popf
mov
dec
mov
jl
xor
arpl
mov
add
je
mov
loopne
mov
xor
adc
leave
lahf
push
xor
popa
jl
sub
mov
inc
xor
pop
inc
jae
adcl
jns
insl
jle
adc
adc
jmp
lds
dec
push
movsb
jmp
movl
push
ret
mov
cmp
cmp
ja
int
push
mov
fdivr
fs
in
cltd
mov
cmp
xchg
inc
jmp
cmpb
daa
hlt
popa
xchg
xlat
mov
mov
add
lret
fwait
test
sub
jae
add
lret
jns
outsb
fistps
out
add
out
jp
fsubrs
call
cltd
and
faddl
inc
out
test
xchg
pop
js
loopne
notb
icebp
jg
js
mov
and
mov
in
into
lahf
add
iret
ror
push
pop
mov
inc
aaa
pop
stos
dec
push
adc
mov
xlat
push
subb
cwtl
add
nop
push
dec
mov
pop
cs
jmp
bound
mov
negl
mov
xchg
lea
pop
je
xchg
or
cmc
scas
jle
nop
nop
inc
ret
sbb
cmpl
inc
fmul
into
imul
cwtl
pushf
dec
shld
inc
repnz
outsb
or
push
sti
pop
repz
dec
lahf
sbb
and
imul
cli
push
ret
cwtl
stc
add
jp
mov
cmc
hlt
cmp
add
cmp
dec
repz
in
into
jo
sarb
rolb
sbbb
xchg
stos
hlt
hlt
pop
fidivs
out
stc
mov
repnz
js
pop
aaa
mov
test
lcall
push
mov
rclb
pusha
mov
and
test
je
and
mov
and
in
cwtl
mov
pop
pop
cmp
je
mov
and
jo
pushf
mov
mov
loopne
jno
test
sbb
pop
jno
inc
lcall
dec
dec
sti
ss
jnp
xchg
lahf
mov
es
cli
push
jg
out
iret
push
lock
lea
lods
sub
xor
jp
mov
mov
aaa
fsubr
int3
roll
or
insl
fmuls
dec
iret
lret
ficoml
test
and
sbb
popa
hlt
fisubrl
int
repz
and
xor
jae
pop
call
lahf
and
and
js
dec
cmp
inc
sub
imul
sbb
xor
pop
xor
jo,pt
dec
punpckhdq
pushf
insl
into
popl
xchg
sarl
sub
aaa
adc
jle
mov
in
fldcw
fwait
iret
dec
insb
pop
adc
rcll
or
mov
hlt
sbb
xchg
inc
icebp
icebp
lock
cld
lret
fnop
mov
inc
in
dec
pop
sti
out
scas
ret
dec
mov
push
imul
stos
loope
cmp
xchg
andl
add
sbb
ljmp
repnz
mov
jnp
and
xchg
mov
jmp
inc
pushf
fists
sub
dec
pop
xchg
push
add
cmp
loopne
enter
xor
mov
test
push
imulb
mov
push
pusha
mov
fcomi
mov
sub
jnp
loop
add
xchg
adc
insl
pop
lods
outsb
inc
into
push
sbb
outsb
sbb
xchg
in
int
xor
pop
int
cmpl
imul
push
sbb
je
sbb
mov
dec
sub
jae
mov
xchg
mov
out
pop
movsl
jp
mov
or
jno
xor
andl
or
inc
jge
ljmp
mull
fnstcw
add
adc
mov
mov
or
insb
test
pop
loope
ret
in
push
jnp
add
ret
shlb
adc
and
jae
add
lret
adc
mov
shlb
inc
cmp
mov
notb
xor
xor
rolb
push
mov
adc
sub
cltd
icebp
sysenter
fsubrl
sub
imul
xor
add
inc
add
lcall
call
fwait
sbb
dec
imul
pop
mov
mov
into
rol
shrl
push
dec
cltd
out
and
mov
loope
repz
icebp
jl
jmp
ret
lahf
xchg
stc
adc
push
mov
mov
arpl
dec
insl
xlat
out
mov
leave
mov
xorl
dec
sarl
lods
and
inc
sar
dec
std
mov
mov
or
aaa
and
into
outsb
push
mov
repz
sbb
fmul
jge
sub
jnp
inc
sbb
cmp
addl
into
inc
cmp
js
mov
sahf
jbe
cmc
xor
sub
fisubs
add
sub
or
jmp
lret
dec
cli
inc
and
jecxz
vpunpckhdq
dec
xor
mov
negb
dec
gs
push
loop
into
ss
jb
adc
inc
ficoms
or
cli
mov
and
add
dec
aam
test
add
sbb
mov
xor
mov
push
and
sbb
and
or
out
pushf
test
xor
out
pusha
mov
mov
xor
sub
insl
stos
rclb
cwtl
sti
das
adc
xor
push
pop
jle
loop
test
jge
mov
adc
dec
mov
mov
add
sti
xor
or
sub
dec
lahf
mov
jae
push
cmp
popf
loop
repz
imul
mov
decl
xchg
mov
jmp
filds
adc
ss
xor
and
popa
aaa
sbb
mov
mov
xchg
xlat
push
gs
dec
push
jmp
add
inc
lock
in
cmpsl
push
inc
jl
loope
ja
imul
scas
into
movsl
out
ret
aas
andl
sub
pop
cmp
movsl
sbb
add
dec
dec
gs
add
rcrl
scas
xor
xlat
add
cmp
rcrl
xor
insl
mov
xor
mov
jnp
divb
aam
inc
leave
jne
mov
cld
adc
sbb
stos
cmp
xchg
adc
and
jecxz
ja
int3
nop
sbb
mov
mov
mov
jecxz
xorb
in
decl
push
mov
mov
adc
xor
inc
insb
mov
cmpsb
sbb
jp
repz
pop
jnp
dec
rcrb
adcb
jne
push
or
ret
addr16
iret
call
test
xchg
and
test
mov
lret
push
adc
mov
je
cmp
xchg
andl
cs
jmp
dec
or
jno
lahf
subb
inc
je
sbb
jb
fcmovnb
iret
pushf
ret
out
jmp
decl
and
into
push
mov
stos
outsb
in
loop
sub
or
bound
popf
movsl
dec
and
xor
lock
clc
xorb
gs
cld
rcl
jmp
lret
sti
out
push
sbb
scas
shlb
stc
adc
mov
dec
sbbl
push
sub
jne
push
ret
mov
mov
in
imul
add
mov
pop
pop
enter
loopne
data16
mov
jae
push
mov
inc
loope
add
sbb
lcall
pop
loopne
jg
jl
xchg
bound
fsubl
sub
mov
jg
cmpsb
fsubrs
push
fs
lds
push
into
pushf
and
mov
xchg
loop
gs
popf
add
insl
cli
pop
and
mov
outsb
mov
mov
mov
arpl
sbb
cmc
cmp
stos
bswap
push
cs
push
out
inc
push
mov
cmp
out
push
test
notl
addr16
movaps
testb
mov
sbb
mov
fwait
test
dec
add
mov
popf
idivl
bound
fsubr
fwait
mov
das
push
je
xchg
cltd
imul
pop
popf
and
ret
jb
call
push
sub
dec
scas
in
cmp
scas
pusha
xchg
dec
fwait
dec
enter
call
lcall
fcomps
inc
in
cmp
mov
sbbl
aad
push
movsb
aaa
pop
pop
jno
adc
pop
add
mov
roll
cs
cmpsb
arpl
adc
jb
add
leave
ja
dec
xchg
bound
cmpsl
and
mov
xchg
mov
arpl
addl
paddd
sub
aaa
dec
mov
push
push
mov
add
fdivrl
lret
int
cli
sub
xor
pusha
mov
call
dec
loop
add
das
adc
das
push
ljmp
dec
mov
aaa
shll
xchg
push
push
and
jo
push
das
push
add
sub
mov
sbbl
inc
mov
cli
repnz
sar
jo
xor
std
pop
jo
and
pop
xlat
shlb
push
xor
andnps
mov
pop
mov
mov
aaa
sbb
or
int3
out
push
imul
sbb
addl
repz
sbb
popa
in
cli
fidivrl
xor
adc
push
dec
push
mov
sbb
jns
jg
dec
int3
cmp
mov
shl
cmp
clc
dec
jb
or
inc
cltd
xchg
push
pop
inc
bound
or
mov
inc
les
mov
stc
hlt
int
xchg
cmc
jno
and
bound
outsl
in
sub
push
sub
pop
roll
xchg
pop
test
jmp
inc
mov
out
loope
movsl
aam
xor
and
mov
adc
jecxz
in
jae
lretw
mov
jb
push
and
xorl
test
jg
loopne
loopne
loopne
dec
push
or
subb
push
jge
jge
cmp
push
pop
inc
inc
mov
iret
enter
push
sbb
inc
adc
out
adc
in
cmpsb
inc
pop
push
rcrl
and
pop
cmp
cmp
inc
mov
jmp
xlat
es
in
lods
jl
sahf
sub
icebp
aaa
mov
sbbl
mov
sbb
pop
pop
aam
mov
sub
imul
std
das
mov
ja
or
jnp
push
mov
push
xor
push
repnz
dec
sub
dec
lods
je
mov
imul
mov
icebp
cmp
inc
ds
mov
repnz
xor
cld
push
jecxz
dec
negb
je
mov
mov
inc
jbe
xchg
repz
ljmp
cmc
in
xor
push
dec
push
ss
mov
arpl
bound
inc
sbb
outsl
add
nop
test
icebp
pop
push
cmp
test
in
jmp
test
push
xchg
roll
aaa
insb
int
sti
push
cltd
xor
fnsave
cmpb
mov
xchg
jno
push
mov
ljmp
jg
scas
outsb
stos
scas
and
fwait
int3
in
adc
jns
scas
jbe
jns
fmulp
insb
or
mov
andl
add
xchg
xchg
jo
xchg
test
cmp
sahf
and
inc
dec
out
stos
sbb
leave
enter
adc
or
leave
adc
adc
popa
daa
movsl
mov
xchg
jnp,pn
mov
mov
xchg
mov
jb
mov
cs
sbb
into
mov
mov
pop
sbb
negl
je,pn
shll
test
cwtl
cmpsb
fwait
arpl
mov
mov
fildl
insb
sub
sbbl
jmp
inc
jmp
dec
push
cltd
sti
and
ljmp
cwtl
jmp
pop
push
mov
icebp
lret
imul
jle
out
cmp
rclb
jmp
pop
sub
movsl
sbb
test
mov
cmp
pop
sarb
call
jle
mov
push
das
jle
test
dec
xor
cmp
pop
xchg
pop
test
or
cmp
mov
jge
sub
test
daa
adc
inc
mov
sub
xor
shr
push
or
push
sbb
adc
les
fisubs
xor
mov
jb
lahf
repnz
or
xchg
jmp
sub
out
xchg
jp
and
dec
mov
mov
addl
pushf
dec
or
mov
lods
fisubl
in
adc
pop
push
cmp
push
dec
or
stos
xor
mov
inc
inc
popa
jmp
aaa
sub
jo
add
dec
outsb
into
js
fidivl
stos
movsb
add
and
outsb
test
mov
iret
test
jmp
add
or
jne
daa
mulb
addl
dec
pusha
loopne
add
and
sub
call
sub
icebp
pop
add
in
xor
popf
jl
push
cltd
aam
sub
aad
fsubs
icebp
xor
enter
fsubrl
rolb
dec
sub
and
push
mov
loop
mov
in
xor
and
mov
pop
test
int3
jnp
mov
push
pop
inc
aaa
fnstsw
test
sti
bound
fwait
xor
icebp
inc
iret
inc
add
inc
adc
pushf
jbe
sti
call
in
lret
mov
cmc
adc
dec
or
cmp
inc
mov
pop
mov
sbbb
dec
ljmp
popa
in
shll
test
pop
add
das
cmp
xchg
inc
out
pop
call
lods
lret
pop
push
scas
xchg
cmpsb
cli
dec
imul
jge
xchg
stos
cmp
in
inc
aam
jne
shrl
inc
mov
sub
jg
add
add
pusha
push
std
pop
ja
cmpsb
mov
and
int3
int3
lock
in
xchg
push
adc
mov
int3
sti
push
pop
fidivrs
xchg
jno
jle
and
and
mov
aam
data16
mov
movsb
shrl
pusha
inc
pushf
gs
in
inc
adc
rorl
fnstsw
ss
xor
rorb
xchg
xor
sbb
inc
out
std
lods
inc
mov
jmp
sbb
loop
mov
inc
inc
add
popf
cmpsl
rcr
add
add
jns
inc
stos
jge
xor
dec
outsb
lcall
inc
mov
lock
cld
push
cmc
cltd
jo
jae
xchg
addb
popf
loope
dec
push
test
mov
shll
jp
test
lret
mov
pop
xchg
pop
cmp
movsl
dec
ss
mov
leave
pop
jp
sbb
and
sbb
mov
mov
call
inc
and
into
jp
stos
jl
dec
jbe
mov
mov
jnp
or
xor
and
ret
inc
sbb
inc
jnp
dec
stc
sub
jle
bound
mov
pushf
sub
outsl
dec
aas
cmp
mov
mov
xchg
loope
lods
or
test
xchg
sbb
pop
xor
adc
popa
loop
mov
xor
je
sahf
cmp
dec
clc
rol
inc
dec
arpl
cltd
cmpsb
in
fistps
lods
or
xor
in
dec
and
sbb
sub
cmp
xor
test
out
jg
mov
add
shufps
push
ss
cmp
daa
add
inc
js
sti
xor
push
ret
dec
sub
sbb
and
enter
dec
lret
adc
jnp
pshufw
aam
xor
pop
sub
cltd
cwtl
arpl
pop
out
jle
fdivrl
addr16
andl
scas
mov
sbb
fmul
mov
inc
and
inc
shrb
pop
insb
xlat
bnd
lahf
mov
rcl
xchg
cmpsb
push
mov
pop
mov
cmp
or
and
sub
inc
cs
push
scas
inc
popa
rolb
outsb
cmp
test
stos
mov
pop
cmp
ds
sbb
cmp
cltd
repz
jns
ljmp
aam
adc
popa
rcr
inc
mov
int3
addl
sti
xchg
and
pop
pop
sbb
pop
icebp
add
outsb
out
push
pop
test
iret
fldcw
bound
inc
and
cld
nop
xchg
dec
adc
cli
push
jno
push
pop
std
sub
mov
and
decl
xchg
into
add
add
pop
lods
dec
faddl
cltd
inc
cwtl
ds
test
lret
mov
flds
loopne
mov
mov
movsl
loopne
mov
out
gs
das
inc
adc
andb
xchg
adcb
xchg
fists
les
in
mov
ljmp
pushf
adc
and
psrlq
popf
aaa
lcall
pop
jae
lock
data16
shlb
inc
scas
xchg
out
repz
jb
sub
sahf
test
in
sbb
shlb
cwtl
cmp
shrb
cmc
movsb
arpl
sub
push
jbe
lods
and
outsl
pushf
mov
and
push
rolb
add
je
sti
dec
shrl
xchg
sbbl
mov
ficoms
mov
jb
fsubl
dec
mov
inc
data16
pop
rcll
test
push
or
filds
mov
adc
push
pushf
int3
cmp
mov
stc
cmp
mov
sti
pop
out
jbe
and
mov
jne
push
fnstenv
pop
loopne
in
add
aaa
mov
add
in
xchg
iret
mov
int
or
xchg
xchg
jb
frstor
dec
daa
adcb
imul
xchg
call
loop
rcr
ret
jnp
xchg
xor
jns
mov
xor
es
js
mov
push
movl
xor
dec
outsl
or
lods
and
int
xchg
in
cli
push
inc
stos
loopne
jb
cmpsl
push
or
in
sub
push
cmp
insl
mov
adc
cld
test
and
pop
out
adcb
lock
int3
mov
dec
movsl
outsb
sbb
pop
mov
mov
xchg
mov
add
add
enter
ljmp
call
sub
and
cmp
mov
cld
cmp
pop
add
xor
or
xor
cmpsb
jmp
pop
or
icebp
push
push
mov
pop
sbb
mov
mov
mov
cmp
xor
xor
dec
outsl
lcall
pop
int3
xor
jne
cwtl
pop
push
aas
pop
pop
xchg
bound
rorb
adc
xchg
jno
test
dec
xor
xchg
sub
jl
or
test
jb
inc
or
mov
in
jle
mov
add
aam
xchg
out
mov
dec
and
call
test
jns
outsb
movsl
dec
jnp
or
insb
or
test
xor
dec
cwtl
call
inc
add
loop
loopne
mov
sub
sbb
mov
nop
cmp
cs
add
inc
repnz
add
daa
shrl
lret
sub
insb
adc
jp
sub
loope
lahf
hlt
xchg
adc
pop
test
lock
add
jns
aam
xor
mov
or
loopne
loop
icebp
xor
imul
insl
adc
pusha
cmp
jno
push
xor
das
shrl
out
mov
lret
cmp
push
test
cmpsl
ffree
imulb
ljmp
mull
mov
es
movsb
mov
js
enter
dec
lret
mov
out
sbb
ljmp
dec
cld
outsl
mov
movsl
mov
pop
add
test
stc
and
sti
test
cmp
mov
xor
jno
or
mov
stos
mov
ret
cmp
or
ljmp
xor
jecxz
jb
sbb
fistl
push
cmc
lret
sti
mov
sbb
and
mov
sbb
jno
sbbb
and
movb
pop
aaa
xchg
das
inc
gs
ret
jl
out
sti
cmc
lds
xlat
sub
lahf
mov
sbb
int
fisubl
xchg
sbb
sar
pop
fisttpl
push
push
push
hlt
cwtl
fidivrl
sbb
push
cmc
je
gs
and
ficompl
adc
dec
es
dec
jle
je
addr16
cmpsb
push
loope
cmp
sarl
loopne
shrl
xlat
mov
pop
shll
test
and
arpl
aad
hlt
mov
std
cltd
xchg
jno
icebp
or
cmp
push
ja
dec
sub
dec
sti
fildll
mov
subl
ror
cli
hlt
mov
dec
dec
insl
or
adc
push
pop
and
cmp
add
fcomp
or
jg
cwtl
lahf
rclb
mov
rolb
scas
stos
xchg
jmp
inc
jo
lret
addr16
jl
xor
sbb
out
xchg
test
rolb
imul
dec
in
pushf
push
shr
sub
pushf
ljmp
jl
fcoml
push
gs
mov
xchg
sbb
xlat
ret
rcl
xor
negb
sbb
fldl2e
test
adc
jp
mov
stos
jp
inc
add
push
pushf
enter
shl
adc
sahf
pop
mov
add
sahf
clc
inc
lds
sub
aam
sub
pushf
int
jbe
repnz
cmpsb
mov
jo
lret
mov
push
adc
repz
inc
jb
mov
add
std
pop
mov
xor
lret
adc
out
out
fistpll
and
aas
cwtl
and
dec
or
inc
sub
mov
lahf
jp
aad
mov
clc
push
test
sub
inc
nop
test
repz
aaa
xor
cli
ss
pop
jae
xor
push
lds
lea
stos
addb
xchg
cmpb
dec
adc
ficompl
cmp
orb
jno
mov
mov
xor
inc
les
ret
sti
mov
adc
fs
adc
clc
int
filds
testl
pop
incl
xor
adc
outsb
sub
sahf
dec
cli
push
out
push
mov
mov
std
pop
sbb
cs
sbb
sub
jecxz
jecxz
repnz
ja
mov
sub
inc
xor
cmp
mov
adc
popa
push
mov
xor
jmp
mov
sarb
add
lock
cmp
inc
cmp
iret
mov
std
aad
or
popa
clc
or
pop
mov
mov
jg
stc
sub
jmp
or
into
rep
psubsb
mov
dec
xor
add
adc
push
lods
inc
mov
and
xchg
ret
dec
pop
fwait
sti
jg
mov
sti
lds
aaa
xchg
repz
mov
arpl
lods
cmpsl
imul
jne
pop
sub
jle
daa
les
imul
insl
cltd
aam
pop
lock
call
or
imul
repz
push
pop
pop
sbb
jmp
sub
mov
in
or
sbb
add
inc
mov
data16
rcll
daa
jae
mov
scas
sub
dec
cmp
dec
icebp
pop
cs
out
ds
fistpl
outsl
push
push
xor
cmc
fstl
cltd
cmp
lahf
jg
orl
mov
mov
sbb
pusha
mov
test
fdivrl
lock
cli
mov
dec
dec
arpl
ja
add
daa
ljmp
pop
jge
popa
dec
outsb
lea
loope
in
xor
imul
ffree
mov
setge
es
mov
and
lret
insl
inc
fdivl
out
mov
and
add
cmpsb
add
int
jl
cmp
or
xorl
dec
jl
push
outsl
or
mov
and
fimull
pop
mov
aad
inc
jns
cvtdq2ps
cmpsb
les
stc
mov
hlt
or
repz
dec
int3
mov
push
sbb
std
mov
mov
xlat
sub
add
push
int3
jae
dec
popa
xchg
jb
ror
jl
data16
push
out
lret
sbb
adc
prefetch
scas
out
test
out
inc
cmpsl
bound
sub
int
es
fadd
ret
js
clc
mov
cli
lods
push
fs
mov
int3
out
or
ljmp
mov
es
insl
ja
or
or
outsb
bound
rcl
lret
dec
call
int3
outsb
out
lock
add
cli
dec
icebp
push
push
xchg
add
jg
push
out
mov
out
mov
jae
push
or
pop
adc
call
and
aad
sbb
inc
fisubs
fcmove
cmp
cmpl
stos
lea
cltd
mov
std
inc
sbb
push
cmp
lcall
push
cmp
mov
or
add
int3
push
push
mov
mov
jno
mov
xor
sub
lret
lret
pop
cmp
loope
rcrl
in
mov
add
mov
xor
repnz
bound
mov
clc
stc
gs
enter
scas
repz
inc
data16
mov
pusha
jo
push
jp
ja
loope
ja
sbb
xchg
bound
pop
and
lods
aam
pushf
rorl
stos
loopne
enter
mov
sbb
hlt
out
mov
push
outsl
adc
ret
lret
push
add
stc
divb
rorl
push
or
mov
rorl
push
shll
mov
ja
inc
xor
mov
out
push
adc
fdivrs
out
mov
add
adcb
mov
pop
test
add
sub
or
jl
jb
jp
cmc
scas
test
push
mov
repz
jle
ja
fs
rorl
pop
push
lock
ret
sarl
aad
enter
cmpsl
xchg
pop
fisttpll
lret
test
cmpsb
jo
cmp
or
pop
test
loope
std
imul
jb
jge
sub
test
sub
and
mov
mov
mov
cmp
shrl
test
incl
sub
sbb
xor
ljmp
sti
roll
add
jge
xor
pop
xor
inc
xor
mov
ficomps
sub
add
mov
or
xlat
inc
xorl
insl
repnz
pop
fisttpll
push
std
les
cltd
out
jge
fsubrl
pop
jmp
rcl
sbb
scas
fs
sysenter
testl
mov
cmc
jns
jae
push
loopne
imulb
pop
pop
and
inc
and
insl
jno
test
push
decl
xchg
mov
xchg
pop
or
cmc
ret
stos
lods
in
dec
lods
xadd
and
movsl
ret
pushl
xlat
sub
push
push
cld
jno
fs
sbb
lods
jle
xor
orl
mov
lcall
add
pushf
in
ds
mov
les
cltd
xchg
test
loop
sbb
inc
sbb
pop
decl
cmp
in
xchg
ss
or
loop
cmp
pop
sub
or
mov
pcmpgtw
lods
mov
mov
cwtl
loop
repnz
pushf
lahf
dec
aam
loop
enter
or
not
ljmp
xlat
xchg
outsb
cmp
or
scas
xchg
fdivr
cmpsl
jae
fidivs
cmp
scas
adc
add
out
idiv
xor
jo
inc
mov
popf
sub
ljmp
jecxz
jp
into
in
cmovnp
pop
xor
inc
arpl
fsubrp
add
xchg
sub
ljmp
mov
inc
int
inc
lods
inc
pop
cmp
mov
push
imul
aas
mov
adc
add
cmp
cmpl
and
mov
push
push
dec
xchg
ficoml
xchg
xchg
lcall
inc
fistpll
ljmp
inc
in
sub
push
test
cltd
adc
push
movsl
test
mov
aaa
xchg
repnz
cld
jns
shr
mov
xorb
or
stos
inc
jnp
pop
stc
xchg
daa
inc
movsb
sbb
ffree
adc
pop
aaa
sbb
aaa
mov
jno
ljmp
mov
mov
push
xchg
pop
dec
leave
push
push
lcall
lea
jg
mov
ret
jae
aas
decl
ja
mov
mov
mov
push
sbb
mov
call
jmp
push
pop
mov
in
mov
insl
pop
ljmp
add
out
or
shlb
mov
imul
push
daa
sti
fsubrs
sarl
into
scas
minps
insl
in
and
pop
int3
subl
xor
cmc
cmc
push
sbb
inc
daa
lea
xor
lcall
imul
ret
cld
sub
inc
xchg
pop
adc
and
lea
idiv
daa
in
push
shll
dec
test
push
jmp
jne
mov
cld
jb
or
mov
inc
sbb
fs
pop
xchg
out
sub
mov
cmp
and
or
pop
adc
out
into
mov
lods
sub
or
push
out
cmp
addr16
xor
pop
dec
xor
in
push
or
dec
aad
adc
inc
test
iret
pushl
clc
dec
push
mov
pop
lods
add
test
push
add
repz
mov
out
push
pop
ljmp
negb
cmp
add
pop
xchg
and
push
sbb
je
inc
pop
sub
mov
adc
decb
push
cld
test
ret
xlat
sbb
bound
jb
int3
sub
loopne
pop
out
dec
jmp
jle
pop
cmp
repz
add
jo
lret
mov
jo
xor
cmpb
jle
ret
and
fcoms
push
jae
xchg
inc
loopne
dec
mov
mov
fldenv
sub
popf
jno
mov
mov
mov
jo
and
xchg
ficompl
add
inc
js
mov
xchg
mov
xlat
jns
inc
ljmp
pop
es
insb
mov
popf
adc
imul
rcr
bound
test
or
cmp
lahf
add
mov
xchg
test
push
stos
jo
cltd
test
or
stos
scas
ret
mov
bsr
xchg
jne
push
bound
cmp
loopne
pushf
pop
jmp
in
repnz
pop
bound
cld
nop
ja
or
push
xlat
aaa
daa
icebp
decb
pusha
sub
cmp
movsl
jecxz
sub
lcall
imul
mov
mov
or
icebp
pop
inc
mov
pop
xchg
or
fdivrs
or
mov
add
sub
fbstp
or
xchg
dec
cmpb
shlb
cmp
sub
mov
xchg
lret
andb
stos
and
fmuls
lods
sti
push
repnz
test
call
mov
jae
push
insl
cli
ja
scas
insl
sarl
adc
aad
push
es
sbb
ret
or
sbb
cmpsb
push
daa
lods
out
push
jae
pop
pop
repnz
add
adc
inc
jp
aaa
sbb
jl
movsb
sub
dec
outsb
roll
or
pop
or
cwtl
rcll
pop
in
push
jl
lret
loop
xchg
aam
repnz
lds
dec
and
lods
fs
mov
or
adc
push
addr16
xchg
add
mov
jle
xchg
ficoml
repz
ja
sub
push
push
sahf
xchg
clc
mov
lcall
cmp
jmp
jp
dec
xchg
mov
lods
sarb
inc
stos
inc
stos
mov
jno
inc
mov
or
and
and
add
aas
arpl
call
sbb
mov
jg
add
jle
divl
movsb
out
lahf
inc
sub
inc
fdivs
inc
lods
mov
icebp
jae
pop
dec
test
addr16
mov
daa
cmp
fst
push
incl
jno
arpl
nop
loop
add
inc
daa
in
mov
push
insl
inc
repnz
sbb
movsb
subl
mov
xchg
call
out
inc
xchg
lret
hlt
mov
out
or
push
loop
inc
pop
out
mov
leave
inc
fidivrs
cmpsb
dec
fs
int3
xor
and
inc
popa
imul
mov
mov
jno
leave
push
and
in
lret
arpl
mov
sub
test
mov
sbb
fdivl
data16
xor
ja
scas
test
xchg
call
pop
adc
aad
push
push
adc
inc
and
xor
inc
pushf
sti
dec
lret
adc
cwtl
sbb
pop
cmp
cmp
mov
gs
jbe
lea
sub
adc
lahf
sub
cmp
out
dec
sub
test
or
lock
call
and
in
and
inc
stos
int3
jne
pop
and
fcoml
cmp
negb
push
xor
stc
and
aam
push
mov
or
aad
lock
int
imul
outsl
pop
dec
add
imul
ljmp
shrl
fimull
jp
add
inc
lcall
push
push
iret
insl
aaa
mov
lahf
rcrl
packuswb
arpl
test
jnp
sahf
cmpl
push
mov
mov
ss
cld
fs
xchg
idiv
xor
scas
shll
adcl
shll
jb
dec
icebp
sbb
ljmp
mov
fcom
push
cmp
jecxz
fisttpll
xor
xchg
cmpl
js
out
cmp
or
out
xchg
jne
orb
cmp
leave
xchg
inc
mov
callw
call
push
loope
stos
lret
pop
or
ret
popf
inc
test
inc
stc
push
jne
pop
fbstp
push
aas
insl
fcmovb
jno
jp
in
and
loop
fisttpll
adc
movsb
out
insb
imul
xchg
and
rorb
and
xchg
jnp
imul
cltd
cli
std
jns
fwait
xchg
jg
scas
and
pop
sub
in
inc
xchg
cmp
in
sbb
mov
in
nop
jbe
insb
call
xor
jns
scas
in
push
js
adc
adc
jns
pop
xchg
shr
pop
outsb
push
mov
or
imul
aad
iret
cmp
shl
nop
sti
push
mov
cmpb
sub
jne
pushf
xchg
pop
dec
fs
mov
adc
es
negb
pop
out
xor
cltd
test
adc
sti
ss
loopne
sub
cmp
push
dec
inc
outsb
pop
mov
push
lock
jecxz
pop
fs
clc
push
dec
jge
fdivrs
cs
outsb
notl
cmp
lds
pop
push
addr16
lods
scas
fsubrp
xchg
pop
sti
cwtl
lcall
imul
jge
mov
test
push
mov
mov
add
dec
test
les
ret
dec
xchg
push
xchg
mov
je
pop
movups
and
add
ja
inc
push
push
daa
lods
out
cmpsl
mov
cmpsl
xor
pop
push
lea
fyl2xp1
cmc
mov
push
dec
mov
clc
xor
cli
xor
insl
pop
push
or
push
inc
mov
adc
sub
mov
fisubl
xor
jns
inc
jmp
aam
imull
jbe
das
dec
push
mov
cwtl
ret
les
push
xor
ficoml
cwtl
lret
sbb
je
xor
xor
test
movsl
lods
push
scas
into
push
popa
stc
std
popa
dec
push
dec
cmp
jecxz
test
jmp
mov
jnp
xlat
bound
stc
out
add
jnp
mov
shl
lods
out
cld
fisubs
cmp
mov
adc
out
arpl
push
aaa
orl
push
add
imul
push
call
ja
and
pop
adc
shl
or
push
pop
out
in
pop
mov
shrl
pop
cmpsb
outsl
jp
sub
out
out
mov
out
scas
xchg
ret
xchg
inc
jmp
test
cwtl
cltd
mov
and
inc
pushl
testl
popa
in
test
bound
aaa
sbb
or
inc
test
cmc
frstor
sbb
or
ror
sub
nop
or
sbb
out
mov
ss
xor
cmp
pop
dec
pop
xchg
testb
and
jae
pop
lret
into
cs
fcmovne
out
outsl
push
adc
mov
sahf
pop
ret
mov
cmpsb
insb
stos
stc
xchg
cld
loope
and
lret
dec
pop
push
dec
clc
inc
int3
inc
adc
and
movsb
mov
loop
mov
jmp
add
addr16
rolb
test
xlat
inc
fwait
lahf
pop
pusha
popf
out
das
imul
fiadds
push
mov
in
fstpt
mov
js
shrb
insb
fisttpll
test
rorb
add
adc
adc
out
xor
xor
popl
scas
aas
or
in
mov
jmp
insb
daa
ja,pn
or
mov
lret
mov
hlt
pop
mov
adc
mov
cmc
add
and
data16
jnp
pop
fnstenv
cli
sub
jne
orb
xor
jmp
lret
int3
mov
push
repnz
xchg
sbb
rcl
xor
xlat
mov
lahf
clc
and
jns
lds
outsl
cmp
rorl
push
cwtl
sub
pop
aas
inc
icebp
inc
add
jl
jne
cmp
mov
xchg
cmp
mov
sub
mov
insb
jecxz
dec
frstor
mov
pop
adc
shlb
and
lret
mov
xchg
jmp
inc
add
sbb
sub
xor
add
clc
int
pushf
xlat
adc
jp
pop
add
push
push
imul
int3
dec
fwait
loopne
in
inc
mov
sbb
cmp
jbe
jge
pop
dec
addr16
jbe
repnz
movsl
repnz
movsl
mov
outsb
cmovo
fdivp
imul
aaa
icebp
push
rclb
movsb
pop
test
icebp
pop
fcos
out
fistpll
push
mov
mov
and
fidivrl
fdivrs
jecxz
fstl
mov
shlb
xchg
js
stos
icebp
test
pop
xchg
mov
das
leave
cmp
mov
mov
xor
shll
jecxz
fs
and
outsl
sbb
adc
sub
pop
xchg
sahf
jbe
add
push
sbb
fcoml
jl
xchg
or
sub
sub
sub
cmp
ja
dec
loop
jecxz
push
push
fmull
push
mov
fsubr
fsubl
mov
mov
mov
insl
push
sar
es
push
jbe
into
lds
pop
inc
mov
mov
cmpsb
loope
ja
xchg
lret
and
push
push
xor
xchg
inc
sahf
aaa
adc
clc
sbb
aad
xor
insl
in
sbbb
xor
jb
mov
and
jle
fwait
add
xor
fimuls
mov
or
and
imul
clc
sarb
je
adc
pop
jp
push
push
or
sbb
sub
add
lds
jmp
mov
add
ret
dec
mov
dec
jge
rcrl
mov
int
sub
mov
and
xchg
in
push
mov
sub
xchg
orl
pushf
jno
cmp
push
ds
adc
lahf
stc
mov
mov
pop
fldz
mov
add
xchg
lea
int
pop
and
ret
pop
idiv
cmpsb
inc
jnp
outsl
adc
or
adc
notb
dec
cli
insb
sub
adc
dec
pushf
xchg
xor
outsl
fcomip
inc
movsl
fdivs
aaa
int
push
pop
jnp
add
mov
pusha
int3
pop
arpl
push
cmc
out
pop
jmp
sbb
repz
dec
cmc
shrb
mov
stos
lea
inc
mov
leave
cmpsb
mov
add
scas
repz
sub
sbb
stos
je
jg
shl
pop
xchg
pop
jnp
shrl
xchg
adc
adc
fisttpll
je
filds
lock
ds
loope
mov
mov
lret
push
dec
pop
int3
int3
test
rorb
inc
or
xchg
jno
push
pop
cmp
xchg
fs
loope
push
add
or
popl
shrl
ror
je
push
outsb
push
aas
push
fiaddl
daa
sub
movsl
mov
lods
dec
dec
or
or
xchg
sub
imul
mov
push
enter
push
scas
mov
jne
outsl
enter
sub
jnp
or
fdivrl
inc
jnp
lret
dec
loopne
or
inc
push
push
push
mov
ss
fstl
push
xchg
pop
rorl
mov
ficompl
mov
push
sbb
adc
add
insb
insl
adc
and
mov
pop
cmp
and
inc
lods
cmp
cmp
inc
mov
jp
or
sbb
scas
sub
je
jg
dec
imul
or
mov
ficoml
or
fisttpll
and
enter
jae
xor
push
add
push
movb
mov
jno
pop
outsb
inc
sahf
ret
rcll
enter
int3
mov
enter
cmp
dec
add
loope
mov
push
mov
xchg
push
push
mov
daa
imul
outsb
scas
xchg
test
rorl
jmp
mov
mov
xor
jecxz
in
xchg
fstps
pop
cs
pop
and
nop
sub
sysexit
sbb
pop
popf
add
mov
dec
js
or
jmp
fld1
sub
add
xchg
pop
adc
cmp
or
cli
sub
adc
or
push
adc
jecxz
fcoms
loop
sbb
ficompl
dec
mov
test
xchg
sub
cltd
inc
jle
fdivl
mov
loopne
stc
mov
cmp
in
adc
aaa
cmp
and
scas
dec
pop
mov
cs
jbe
lret
pop
out
sub
xor
outsb
sub
fmull
pop
dec
adc
mov
mov
repz
push
jmp
enter
testb
in
jp
mov
aam
adc
mov
out
insl
out
js
gs
out
push
mov
divb
imul
daa
int
inc
and
mov
out
push
in
pop
jno
aaa
inc
leave
mov
add
subl
aad
cmpsl
jns
pop
mov
mov
cmc
push
mov
inc
mov
dec
push
adcb
xlat
testl
xchg
rclb
leave
sarb
mov
int
pop
loope
mov
stos
jle
aas
fisubrl
dec
jbe
aam
clc
pusha
pop
mov
dec
cmp
xor
sub
push
sarl
repz
mov
mov
arpl
cmp
sti
hlt
xor
dec
mov
jo
divb
and
fimuls
idivb
lds
or
and
loopne
sbb
sbb
pop
subb
add
xchg
xchg
jmp
andb
cwtl
repnz
xlat
sbb
xor
pop
pop
push
addr16
push
movsl
imul
std
jecxz
cbtw
lea
popa
sbb
out
lret
shr
loope
into
or
cmp
fisubrl
popf
cmp
pop
mov
into
sub
push
and
into
pop
test
int
xchg
mov
and
xor
fidivrs
repz
test
xchg
jg
fs
fwait
mov
xchg
mov
pslld
pop
adc
sub
xor
mov
and
xchg
nop
ret
inc
jge
pop
cmp
lahf
rcll
sbb
stos
aam
jns
imul
ja
sub
or
stos
inc
push
push
loope
push
jnp
and
insl
inc
inc
sahf
sbb
and
rcrb
cltd
and
cmp
pop
dec
fists
jo
inc
ljmp
pop
fcomps
dec
mov
jmp
push
outsb
push
inc
pushl
mov
push
push
test
xchg
sahf
pushf
popa
xor
jge
sbb
jl
add
iret
daa
jno
pop
adc
push
hlt
push
ret
stos
pop
push
lock
imul
fldenv
jmp
sbb
push
ja
shrb
outsb
adc
adc
aam
mov
cmp
add
jnp
mov
dec
dec
jns
iret
xor
fsubr
shl
sbb
call
cmp
aad
inc
ljmp
and
inc
repz
push
test
lds
es
loope
insl
bound
das
cmp
pop
addr16
mov
mov
in
push
mov
cmp
test
mov
cmp
in
sbbb
cmp
inc
out
sti
xor
push
sbb
jge
or
adc
adc
aas
pop
sbb
mov
jge
mov
shll
jg
xor
and
nop
pop
cltd
fildll
mov
xor
or
call
jns
jae
dec
cli
push
sub
leave
cld
cmp
popa
pusha
xor
sub
xorl
lret
cmpb
adc
push
mov
sbb
inc
test
scas
push
jl
cmc
inc
push
mov
mov
xor
fsubrs
repnz
in
push
scas
popf
sarb
adcb
testb
je
mov
testl
cld
dec
mov
push
pop
insl
mov
sub
add
mov
mov
lahf
sbb
sti
or
repz
xchg
repnz
test
cwtl
shrl
movsb
filds
pop
rorb
push
and
aad
push
fdivrl
dec
cmp
mov
into
sti
mov
cmp
fcmovb
movsl
jg
rorl
pop
lahf
movsl
aam
out
mov
insl
lods
jle
sub
test
daa
test
repz
data16
scas
and
shrb
push
xor
or
je
in
sahf
jl
adc
or
das
mov
icebp
lcall
scas
or
pusha
rolb
pop
mov
cmpsb
outsl
cmpsl
ficompl
inc
push
pusha
pop
pop
push
mov
add
hlt
rclb
xchg
mov
add
icebp
aad
xlat
rcrl
xchg
xchg
leave
mov
push
sbb
push
je
pop
jnp
orb
add
cmp
mov
pop
dec
mov
scas
sbb
and
or
jle
repz
xchg
adc
jg
in
lret
inc
jp
dec
cmp
test
sub
pop
test
or
xchg
es
aad
mov
bound
push
cmp
jo
ss
mov
repnz
cli
or
aam
enter
mov
xlat
cmp
fidivl
sub
xchg
push
xchg
das
faddl
xchg
loope
cwtl
daa
data16
sbb
jb
ja
xchg
lretw
or
test
sbb
xchg
sub
adc
dec
sub
push
pop
adc
je
mov
pop
adc
push
imull
rcrl
arpl
xchg
insl
mov
push
xchg
lret
mov
xchg
xchg
loop
js
pushf
dec
adc
in
test
andl
pop
fldcw
jmp
or
xor
dec
jno
cmpsb
or
dec
imul
ja
xchg
push
inc
push
fwait
cli
test
cmp
push
lahf
mov
ds
adc
push
mov
test
lcall
mov
mov
push
dec
sbb
js
mov
jae
mov
add
pop
hlt
out
jp
cmp
push
cld
adc
cs
popf
mov
xchg
jmp
mov
ret
xchg
xchg
and
pop
mov
mov
cld
nop
jae
loop
adc
daa
cmpl
outsl
sbb
movsb
les
dec
inc
add
notl
int3
xchg
rol
scas
out
popf
outsb
bndcu
sbb
movsb
mov
lds
xlat
adc
lea
stos
stos
xor
test
add
inc
mov
sub
and
cld
push
push
aaa
cltd
fbld
mov
out
ficoms
mov
or
imul
jo
xor
xor
sbbl
mov
stc
sub
cmp
lcall
dec
cmpsb
rcrl
testb
fdivrl
lods
pop
cmp
loop
test
int3
mov
outsl
sahf
inc
lock
dec
repnz
fistps
movsl
sbb
lods
std
ret
lcall
scas
cld
xchg
popa
pusha
es
mov
aam
cld
or
enter
lahf
push
aaa
mov
dec
mov
push
push
insb
andps
or
test
insl
test
cmp
mov
gs
loopne
fmuls
dec
in
mov
je
lret
rclb
mov
push
mov
aas
mov
dec
xor
out
leave
lock
leave
xor
int3
repz
mov
or
lcall
dec
scas
xor
adc
imulb
fs
mov
stos
data16
iret
xchg
and
cmpsb
and
aas
hlt
xor
not
inc
jmp
cmp
cs
xchg
lock
xor
pushf
jnp
xchg
rcrl
adc
mov
and
mov
lea
in
mul
sbb
sub
mov
scas
into
mov
test
pop
or
test
in
lahf
daa
mov
gs
xor
inc
push
call
fcmovu
add
push
xor
fsubl
insb
in
adc
mov
mov
jo
popf
repz
scas
pop
ja
out
and
sub
adc
cld
lahf
mov
lock
stos
pop
movsl
jmp
ss
mov
mov
sbbb
fildl
mov
rclb
je
mov
and
stos
cmc
mull
pop
nop
xchg
insb
cmp
sti
dec
xor
adc
sbb
stos
icebp
je
mov
push
mov
ja
xchg
call
outsb
mov
add
out
in
test
jge
test
in
mov
cmp
lahf
xchg
pop
add
xchg
fcoms
test
mull
push
pop
mov
cmpsl
cmp
fs
jno
xchg
lea
lea
lret
out
adc
sbb
cmp
cmc
add
cltd
and
clc
out
and
add
sub
xchg
xor
or
pop
in
shll
jecxz
les
jnp
fwait
jmp
pop
dec
jb
mov
xchg
into
sbb
incl
cwtl
push
sub
cli
addl
vmovdqa
cmp
fstpt
mov
or
mov
cld
je
or
jnp
cli
out
push
fidivl
test
rcrl
sub
js
push
das
out
js
jmp
inc
pop
or
push
jnp
aam
scas
cltd
inc
xchg
or
jge
lods
popa
push
push
insb
pushf
outsl
lcall
xchg
xor
dec
data16
aas
jb
sbb
ljmp
cmp
jb
int3
ja
shlb
ljmp
sti
sub
fs
testb
jg
xchg
bound
mov
popl
das
in
cmp
iret
jl
push
mov
cmp
test
dec
mov
pop
sbb
fcomps
and
cwtl
ljmp
ss
push
pop
scas
iret
test
and
lret
stos
mov
jecxz
in
iret
popf
xchg
pop
cmpsb
jecxz
jae
cmp
sbb
push
dec
test
rclb
jnp
pushf
xchg
push
jg
gs
pop
mov
in
icebp
push
mov
inc
in
or
cmp
cmpsl
jmp
cmp
cmpsb
icebp
inc
nop
mov
jne
rclb
mov
jae
jmp
xchg
adcb
jbe
xor
je
dec
fstpl
imul
mov
js
jae
xchg
mov
mov
mov
sbb
ja
add
sub
aaa
in
mov
mov
pop
push
add
mov
sub
or
cmp
js
dec
rorl
xchg
scas
fiadds
ja
ja
hlt
lds
xor
lea
call
hlt
nop
cld
mov
int
ja
in
cmp
rorl
pop
insb
aad
pop
imul
loopne
cmp
push
adc
mov
mov
xor
out
inc
in
fwait
pop
cli
mov
fcmovnb
shrb
fldpi
sbb
xchg
dec
sbb
shl
out
fstps
mov
dec
adc
mov
int3
push
push
mov
clc
mov
imul
imul
repz
add
sbb
bound
dec
cwtl
fimull
pop
sbb
test
lahf
call
xchg
ret
leave
test
cmp
rcrb
popl
in
lods
aam
dec
mov
xchg
out
adc
push
sub
jecxz
das
in
or
sbb
sbb
fcmovb
je
cmp
lock
cltd
and
jge
adc
sbb
and
xor
sbbl
mov
sbb
mov
arpl
push
out
xchg
cld
inc
xor
xlat
fnstsw
sti
insl
and
cmp
pop
clc
and
and
mov
fwait
push
xchg
xor
out
pop
jge
mov
pop
xor
pop
imul
shl
add
repnz
xor
lea
mov
jmp
arpl
push
jmp
cli
xchg
xor
fldl
push
or
add
stc
xlat
or
inc
sub
js
push
cmp
push
mov
sbb
in
dec
jg
jecxz
push
out
mov
loop
add
sub
pop
inc
dec
rorl
cmp
neg
js
clc
xchg
mov
or
ljmp
dec
xchg
push
cmp
arpl
pop
cvtps2pd
outsl
inc
adc
cld
daa
add
mov
mov
mov
cmp
cmp
icebp
jecxz
push
mov
aam
insb
push
cmc
lea
shlb
mov
addr16
jmp
fdivp
jmp
push
mov
inc
icebp
xchg
subl
in
mov
jge
jns
pop
mov
push
lods
fisttpl
inc
mov
xchg
outsl
cmpsl
dec
mov
incb
sti
mov
das
jecxz
jno
iret
in
stc
std
xchg
mov
xchg
dec
lock
sbb
or
and
mov
dec
xor
out
dec
cwtl
adc
fwait
and
dec
dec
rcl
add
mov
push
insb
lea
insl
dec
fiadds
gs
inc
movsl
test
arpl
sbb
push
insb
in
dec
cld
or
cltd
fmuls
out
mov
jae
pop
outsb
std
pop
cli
je
sbb
mov
repnz
stos
sub
mov
cmp
pushf
inc
sub
shrl
decb
mov
lds
jle
js
dec
filds
pop
bound
dec
arpl
fildl
lods
adc
mov
dec
lahf
lods
inc
sub
lcall
pop
mov
cmp
mov
aas
shlb
cmp
movsb
into
xchg
pop
cmc
cmpsl
mov
adc
dec
out
mov
mov
jbe
mov
cltd
push
add
into
inc
fwait
cwtl
fisubs
pop
ss
pop
sub
push
into
hlt
addb
xor
aas
repnz
arpl
push
inc
add
stos
push
lods
dec
sahf
cmpsl
mov
pop
sbb
or
dec
clc
aas
stos
jmp
outsl
xor
inc
add
dec
aas
cmp
fiadds
in
jns
out
pop
jmp
dec
pop
xor
dec
mov
pop
mov
cmp
fsts
adc
add
test
je
xchg
cmpsb
dec
cmp
xor
jns
loopne
mov
mov
nop
sub
xor
out
mov
push
mov
ss
fidivl
das
stos
pop
mov
out
cwtl
inc
lock
movsb
pushf
sub
dec
or
xor
arpl
inc
stos
hlt
repnz
aam
shll
mov
cmpsb
inc
int
movl
out
arpl
test
out
or
mov
mov
outsl
or
imul
and
push
adc
rorb
out
jecxz
test
mov
faddp
sub
gs
pop
je
xchg
fadd
arpl
push
out
pop
lods
cwtl
jne
cmc
insl
push
sete
inc
mov
out
pop
in
scas
add
xchg
mov
and
pusha
out
fstp
mov
cmp
js
fucomi
sbbb
cmp
lock
mov
clc
jge
mov
lea
add
insb
lcall
loop
filds
inc
adc
mov
cli
xchg
int
insb
dec
mov
mov
cmp
adc
sti
mov
sub
cmpsb
xchg
adc
out
int3
sbb
shl
mov
fldt
fildll
cmp
fs
xchg
imul
push
dec
mov
andl
push
jns
add
mov
jo
jecxz
out
rcll
mov
jns
stos
mov
cmp
push
mov
mov
mov
cmc
div
or
mov
push
adcb
sbb
or
into
push
jp
iret
out
push
adc
cmp
popa
ja
lahf
mov
cltd
mov
stc
lods
xchg
adc
push
xchg
insl
add
stos
jo
out
adc
dec
mov
loopne
xchg
icebp
cmp
jl
jnp
std
leave
fbstp
test
lods
adc
jno,pt
rorb
fisttpll
inc
fs
ja
popa
cmp
loop
pop
fwait
mov
test
push
adcl
cwtl
bound
push
lock
in
repz
ljmp
lcall
loope
popa
movsl
loope
fisubrl
ljmp
dec
pop
insb
jecxz
mov
jno
push
jl
inc
jmp
dec
outsl
adc
jae
jecxz
cmp
fmull
cli
jne
jnp
inc
sbb
xchg
push
mov
pusha
in
int
aad
push
es
popa
insl
outsl
sub
jnp
jae
pop
pop
loopne
pushf
js
jb
fsubl
mov
inc
push
ss
push
lds
shl
loope
stc
jo
shl
dec
mov
testl
cmp
inc
lret
adc
clc
out
ret
bound
ljmp
out
mov
xchg
scas
inc
sub
cs
xchg
inc
out
out
cwtl
sub
sarl
lds
jbe
sbb
idiv
sbb
mov
xor
sub
xor
add
ret
ret
shlb
or
push
out
mov
mov
addr16
shlb
sbb
mov
push
in
mov
inc
jo
insb
imul
xchg
jge
fidivl
bound
inc
jp
in
jmp
sti
mov
cmp
jl
dec
inc
dec
xchg
ja
adc
xchg
testb
pop
mov
pushf
sub
or
int
loope
repz
bound
jbe
scas
out
fwait
mov
pop
rclb
sub
fisttpl
sbb
or
pop
sub
in
and
ljmp
or
and
scas
jb
mov
push
xorl
test
stos
fadd
cltd
mov
fadd
es
or
cmovno
insl
stc
cltd
sbb
push
rorb
lcall
mov
pushf
jo
or
xorl
movsl
into
dec
add
jle
in
mov
add
shlb
test
loope
push
and
fcoml
and
jne
rolb
ds
mov
call
mov
arpl
sbb
and
cmc
and
sbb
push
and
loope
push
and
pop
xchg
or
jne
lcall
mov
stc
xor
into
cmp
and
mov
jge
bound
bswap
pop
nop
sbb
jle
or
dec
imul
ret
xor
mov
push
adc
xchg
insb
dec
rorb
or
pop
sub
xchg
enter
dec
out
lods
jo
mov
idiv
adc
movsl
mov
cmp
test
shr
jmp
daa
inc
imul
roll
ljmp
bound
push
insb
and
stos
cltd
cmc
sbb
mov
pop
adc
stos
adc
sbb
scas
stos
repnz
stc
cs
rcrb
bound
push
addr16
cmp
pop
fdivrl
loope
xchg
mov
testl
push
sub
les
enter
test
mov
push
test
add
loop
rcll
das
xchg
fisubs
cmpsb
cmp
cmpsl
xor
lahf
or
gs
mov
stc
push
push
add
fwait
cli
in
xchg
aam
jecxz
std
outsl
or
test
pop
rcl
jecxz
cmp
loopne
jnp
test
jp
jo
test
fcoml
xor
sub
inc
lea
bound
mov
ss
mov
mov
or
iret
scas
and
xor
hlt
mov
sub
les
inc
movzwl
sahf
ljmp
clc
and
ret
push
aam
pop
cmp
mov
leave
cmp
mov
inc
add
jbe
lods
or
in
mov
jge
cli
faddp
call
negb
ds
stos
enter
jl
cs
mov
sbb
shrb
cli
icebp
rclb
rclb
fcoms
insl
insb
ret
cmp
test
roll
pop
cwtl
lcall
cmc
stc
push
lock
or
cs
xor
repz
je
sub
les
sahf
es
cli
fwait
xchg
outsl
push
or
fdivr
add
inc
adc
mov
shl
cltd
mov
and
jb
pop
add
test
arpl
cli
pmulhw
cld
sbb
shlb
jl
or
dec
dec
cmp
adc
inc
pop
or
idivl
das
out
cmpsb
test
ljmp
aad
dec
mov
xlat
mov
pop
mov
jae
outsl
mov
fsubrl
cmpsl
push
dec
xorl
popa
push
mov
aaa
xchg
loopne
sahf
push
xchg
jno
mov
data16
and
xchg
adc
push
fyl2x
imul
jp
and
and
shl
fisubrl
xchg
es
jae
push
push
mov
stc
cmp
movsb
adc
arpl
outsl
inc
sti
cmp
rorl
insl
rolb
mov
insl
leave
xor
movsl
push
xchg
mov
cs
insl
xchg
out
mov
shrl
das
sub
ror
jnp
subb
pushf
add
movsb
or
cltd
mov
gs
push
inc
scas
dec
cli
les
dec
add
xorb
scas
movsl
mov
xchg
movsl
inc
sub
mov
mov
or
fisttpll
jne
lahf
out
popf
in
das
loope
subb
bound
inc
out
js
in
js
push
sbbl
call
sbb
and
jp
repz
or
pop
mov
pop
cwtl
xor
outsl
pop
push
mov
mov
mov
dec
jecxz
pushl
sahf
shl
cmp
inc
push
stos
and
arpl
mov
mov
xchg
negb
shll
cmp
test
aaa
push
cld
sahf
pop
add
lret
jge
mov
and
cmp
ror
pushf
dec
mov
and
xchg
sub
adcb
jp
jp
test
adc
clc
leave
and
movsl
and
pushf
jp
ja
push
push
and
fistps
fnsave
sub
pop
insl
sub
sub
jno
cmp
lea
movsb
xor
or
cmp
das
sub
mov
mov
jmp
pop
sbb
lret
push
cltd
std
int
sbb
xor
mov
pushf
loop
jb
pop
xchg
insl
adc
cmp
dec
xchg
fidivs
enter
mov
xor
fnstsw
les
roll
mov
ljmp
loope
xor
cltd
sub
es
cmc
addr16
hlt
sarl
dec
movsl
push
imulb
jo
cwtl
add
imul
cld
out
inc
pusha
push
filds
jbe
imul
jmp
mov
ljmp
pop
fs
cli
mov
cld
out
sbb
dec
mov
dec
xchg
mov
pop
fdivs
lcall
sub
scas
mov
lahf
leave
sub
and
mov
mov
xor
pop
test
test
lret
jl
xchg
sub
fst
clc
stos
push
lock
pop
inc
cmp
pop
pop
mov
int3
into
dec
loopne
and
movsb
pop
mov
int3
das
cmpl
mov
jle
cmp
mov
rolb
imul
div
mov
cs
sbb
xor
xchg
popa
lods
loop
xchg
sub
addr16
cmp
shlb
inc
xchg
insl
imul
add
fildll
dec
call
mov
arpl
int
jnp
xorb
enter
outsl
popa
push
testb
or
cmc
push
inc
push
add
icebp
xor
adcl
rcll
scas
mov
lods
mov
jo
cltd
pushf
jne
out
pop
sbbl
testl
cmp
in
or
jb
ds
mov
sbb
mov
jmp
xchg
iret
ret
hlt
mov
int
inc
pushl
icebp
ja
movsl
and
inc
pop
and
std
insb
cmp
or
mov
testl
or
add
sbb
sub
rol
pop
rcl
call
loopne
pop
int
inc
fs
std
pop
xor
out
lods
test
arpl
pushf
cmp
add
add
int
notb
add
mov
ficoms
pop
pop
cld
xchg
sub
pop
add
mov
aas
enter
xor
and
sbb
insb
xchg
and
in
cwtl
cmpsl
fcomps
sub
pop
pop
sbb
leave
cmpsl
cltd
aam
cmp
and
push
outsb
xchg
fdivrl
gs
jg
idiv
push
jns
mov
scas
repz
mov
xchg
cmp
fisttps
xchg
sub
adcb
xchg
or
inc
jecxz
dec
lret
sbb
div
push
and
sub
pushf
jge
outsl
sbbl
pop
mov
pop
fcmovnb
inc
lahf
adc
orl
icebp
lds
jbe
cmpsb
les
sub
adc
and
mov
mov
xchg
push
lods
sbb
pop
in
fisubrs
out
in
cmp
outsl
es
addb
jnp
and
arpl
add
jmp
push
les
repz
inc
xor
pop
inc
and
mov
cmpsb
jno
xchg
xchg
jno
pop
aas
sahf
mov
pop
nop
sahf
xchg
cltd
popa
movl
mov
push
inc
push
addr16
and
addr16
je
fs
xchg
ret
pop
mov
lret
aas
adc
lock
popf
sub
rcl
orl
push
mov
xchg
cmp
mov
and
xor
sahf
cmpb
fnstsw
push
pop
in
pop
lods
xor
jno
mov
adc
cmp
sub
and
mov
test
add
xchg
fadd
nop
add
jg
push
mov
mov
sbb
loop
cmp
pop
xlat
cli
fcoml
add
sbb
scas
aad
fcmovb
fimuls
jb
mov
mov
fdiv
and
push
ret
mov
push
dec
xor
adc
xor
cmp
push
fidivl
xor
insb
pusha
cli
das
dec
mov
pop
enter
inc
pop
std
push
sub
test
mov
dec
jbe
addb
push
or
hlt
sbbl
fucomip
xor
out
outsl
adc
cmp
and
in
aam
dec
xor
inc
or
dec
cltd
fmull
add
push
sbb
push
push
hlt
int3
stos
loopne
jl
fadds
pop
adc
inc
incb
push
pop
fdivr
xchg
mov
add
test
xchg
sbb
cmp
faddl
jge
sti
sub
rol
bound
addl
lods
repz
jle
clc
test
ficomps
jp
sub
jge
lods
mov
push
mov
mov
push
iret
add
mov
fs
dec
cmp
xor
mov
roll
cmp
sahf
notb
jno
pop
sarl
js
mov
outsl
jnp
and
rolb
enter
cmpsb
lods
ss
xor
stc
sbb
movsl
fldl
cld
arpl
add
and
mov
jp
inc
lret
pop
pop
adc
pop
lret
repz
cmc
insb
xchg
sbb
pusha
orb
sub
pop
push
dec
mov
push
jb
enter
xchg
test
sub
push
sbb
fucom
pop
stos
insb
sub
pop
lock
jae
out
dec
cmp
or
cltd
bound
pop
add
add
shlb
mov
call
xchg
xchg
arpl
idivb
sarb
sbb
ret
daa
add
adc
cmp
enter
cmp
mov
lret
dec
sub
add
push
inc
jb
addr16
push
nop
shlb
adc
and
test
and
mov
ret
xchg
and
cltd
outsb
pop
push
sub
mov
fwait
and
fcmovnbe
daa
mov
sub
ret
test
xchg
lret
pop
incl
or
push
add
jp
repnz
ljmp
mov
xor
cmp
clc
loop
daa
push
sub
sub
pop
xor
xlat
pop
scas
jnp
scas
out
mov
and
movsb
ds
mov
shrl
mov
inc
data16
cmpl
outsl
fsubs
mov
and
cmp
in
out
andl
hlt
and
pop
xor
and
fimull
add
cmpsl
or
adc
mov
mov
mov
and
cmp
das
lcall
push
push
out
jns
sub
xor
lods
stc
inc
cmc
pop
adc
and
mov
sbb
divl
sbb
inc
cli
xor
pop
sbb
xor
mov
cs
andb
aad
sbb
xor
pop
add
mov
pmulhuw
in
popf
push
sub
in
jno
cmpsb
dec
stos
or
xor
lret
mov
xor
int3
insb
xor
test
fistps
mov
or
adc
jbe
mov
cmp
mov
gs
jo
add
lds
clc
push
pop
aaa
insl
xlat
addr16
push
push
dec
outsl
stos
pop
mov
jnp
add
or
jb
loop
mov
sbb
out
push
fisttps
cmpsb
xchg
sar
fiaddl
aam
pop
das
pushf
pop
mov
adc
imul
aas
movsb
iret
xor
mov
mov
hlt
xor
add
adc
gs
insb
and
leave
adc
push
cmp
jns
int3
test
add
out
fisubrs
movsb
mov
and
mov
imulb
pushf
test
in
push
adc
mov
pop
stos
popf
sub
cli
iret
out
aas
sbb
ljmp
add
inc
add
mov
xchg
push
loope
sbb
inc
sub
in
lahf
and
arpl
scas
add
mov
rolb
mov
ss
pushf
cmpsl
push
nop
dec
fs
pusha
pop
cmp
out
imul
inc
cli
aaa
lea
test
xchg
cld
ficoms
gs
testl
scas
andl
mov
lods
xor
jg
mov
mov
pusha
scas
and
fwait
in
arpl
or
jns
js
pop
int3
mov
or
jns
cld
xor
sub
xchg
xchg
ljmp
or
aam
mov
mov
test
cmp
sbb
dec
cmp
cld
jo
pushf
mov
jge
lahf
xchg
cmp
ljmp
jbe,pn
shlb
sahf
insl
adc
pop
inc
addb
shlb
in
nop
mov
jns
cmpl
and
mov
sahf
jno
sub
push
outsb
fincstp
cmp
cmp
imulb
push
sarl
push
pop
inc
jbe
std
stos
stc
fxch
mov
pop
subb
popa
dec
inc
sub
inc
repz
dec
push
cmp
push
in
or
sub
push
dec
dec
test
inc
and
lret
xlat
inc
out
jne
daa
ds
or
sub
xor
adcb
xor
add
arpl
mov
mov
jecxz
lahf
adc
push
push
pop
jno
xor
outsb
mov
mov
pop
fdivs
test
loop
daa
or
repnz
mov
push
or
mov
adc
push
add
cmpsb
mov
xchg
insb
sub
gs
pop
mov
nop
lret
jns
pop
dec
cwtl
mov
bound
imull
popf
jp
rcrl
mov
sbb
scas
adc
pop
lods
sbb
and
xor
xchg
sbb
xchg
mov
outsb
mov
stos
or
xor
jg
aaa
dec
and
adc
xor
popa
mov
pop
sbb
xor
cli
cs
aas
push
jmp
push
ret
dec
pushf
push
test
pop
inc
loop
aas
xor
sti
stc
xlat
mov
cld
mov
cmc
std
mov
and
add
dec
in
inc
add
cmp
outsb
jmp
mov
lods
cli
mov
addb
and
les
cmp
gs
sbb
test
rcrw
push
mov
mov
jecxz
gs
ror
or
pushf
inc
repnz
jb
cmp
xchg
in
pop
mov
nop
or
cmp
sub
xchg
adc
insl
sar
or
dec
lds
scas
pop
jae
in
add
adc
inc
xor
in
fstl
icebp
loope
push
scas
jecxz
out
lods
lods
jb
popa
cmpsb
inc
mov
dec
loopne
mov
test
fsubs
xchg
sbb
loop
shrb
mov
lret
iret
push
outsl
dec
mov
out
xchg
testl
ret
rolb
xchg
sarb
adc
and
test
inc
xor
pop
loop
or
ljmp
in
ret
jns
and
xchg
leave
mov
dec
clc
jge
addr16
loop
mov
test
jp
movsl
cmpsl
sbb
dec
mov
pop
ljmp
ja
lret
mov
fstpt
out
fcomi
outsl
outsl
jae
imul
jbe
push
push
hlt
pop
cmp
repz
int3
addl
insb
push
cltd
xchg
in
test
push
jbe
fdivrs
movsb
xor
jbe
cmovp
sbb
leave
mov
push
mov
fildl
inc
dec
mov
and
lock
and
jns
cltd
aas
mov
aam
pusha
xchg
inc
hlt
jecxz
call
mov
sub
xor
push
pop
femms
sti
ret
jg
jmp
repz
daa
call
sbb
adc
scas
fbld
jl
xor
icebp
push
cltd
jp
cli
in
pop
out
inc
xor
pusha
or
insb
loop
pop
inc
mov
mov
out
mov
fdivs
mov
jge
push
shlb
adc
sub
add
dec
inc
adc
mov
push
xlat
imul
fucomi
and
pusha
jbe
test
push
sbbb
or
int3
rcrl
pushf
jb
inc
insl
jbe
mov
dec
and
sbb
sub
rclb
div
lcall
lods
ja
subl
js
test
or
loopne
adc
adc
testl
pop
mov
fsts
enter
lahf
je
add
add
mov
mov
cltd
fildl
dec
fidivrs
mov
rorl
and
in
fs
jo
stc
mov
pop
add
mov
ret
iret
and
aad
add
imul
sbb
add
jns
pop
insl
es
nop
sub
sbb
dec
xor
repnz
insl
or
fs
xor
pusha
loop
xlat
lahf
xor
jb
xchg
cmp
and
clc
and
and
cmpsb
gs
in
mov
aas
adc
sub
sub
subl
xchg
inc
mov
mov
pop
bnd
sbb
mov
clc
pop
fcomi
adc
jecxz
push
fsubl
or
xor
fisttpl
cmp
mov
icebp
push
inc
inc
push
lods
repnz
sbb
fwait
repnz
cmpsb
push
cmp
sub
sbb
or
xor
jmp
push
adc
lds
jle
dec
stc
jmp
pop
push
mov
shrl
bound
sbb
mov
dec
xchg
mov
call
ret
inc
inc
mov
nop
sti
out
loopne
fdiv
lret
sti
mov
mov
fucom
in
jae
adc
mov
lods
mov
dec
ror
sub
sbb
cmp
xor
out
xor
pop
ja
ret
das
lods
in
inc
repnz
insl
in
sbb
or
adc
cltd
add
fstpl
enter
inc
bound
stos
xor
or
xchg
dec
stos
lcall
rcrl
add
je
push
aas
mov
xchg
mov
je
arpl
adc
dec
aaa
adc
outsl
mov
inc
daa
sub
push
mov
gs
xchg
repnz
push
aam
adc
mov
or
jne
jmp
scas
stc
push
cmp
or
pushl
sbb
push
dec
mov
cmp
bound
ds
dec
dec
int
fildl
xchg
sbb
ljmp
cld
shll
int
jns
adc
lret
add
iret
cmp
pop
fcomps
frstor
xor
mov
or
movsb
loop
in
cs
push
ss
or
into
cmp
cmp
imul
iret
fnsave
sub
iret
in
roll
pop
sub
pop
push
jmp
jb
mov
inc
in
push
testb
addb
or
aam
sahf
xor
daa
outsl
jno
out
or
xor
mov
aad
arpl
fwait
inc
stc
xchg
in
xchg
or
jmp
lahf
mov
loop
jbe
dec
pop
lea
pop
mov
mov
bound
leave
jne
lcall
scas
out
jno
mov
mov
out
jnp
cmp
mov
jbe
lcall
mov
xchg
xchg
dec
int
adcb
out
sti
outsl
xor
push
imul
pop
mov
sbb
push
fadds
xor
mov
sub
clc
loop
pop
stos
pop
xchg
jp
sub
sarl
jecxz
orb
aad
in
loope
jl
mov
dec
clc
mov
pop
pmulhuw
cmc
int
push
pushf
xor
dec
and
leave
fcmovnb
enter
shll
pop
stos
mov
ret
jno
xor
push
call
sti
movsl
sub
pusha
lahf
inc
mov
nop
shl
push
xor
push
mov
xchg
dec
or
pop
jo,pn
jne
push
fwait
mov
fistpll
aad
push
mov
and
sbb
pop
adc
sbb
fwait
dec
cmc
xor
test
lds
mov
in
xor
jo
xchg
movsb
pop
push
imul
cmp
cmpsb
lds
xchg
pushf
adc
or
cmp
add
data16
xor
dec
xor
xchg
inc
out
and
leave
cmp
add
ds
add
fdivrs
xchg
xchg
cmp
sahf
loop
out
loopne
nop
xlat
ret
adc
notl
pop
aaa
pop
fisubs
daa
scas
ret
push
cmp
or
cmc
mov
pop
out
or
cmpsb
or
xlat
sti
mov
cld
push
mov
jne
or
inc
arpl
adc
test
mov
sahf
cmpsb
jno
mov
push
mov
adc
mov
pushl
es
and
cmp
mov
sbb
rclb
push
inc
pop
daa
add
add
rorb
jmp
adc
cwtl
xor
inc
mov
jp
sub
nop
call
stc
dec
aam
push
aam
negb
into
adc
xor
imul
dec
sbb
test
popa
sub
jle
out
mov
adc
fs
int3
loopne
xlat
jb
in
sbb
stos
xchg
jecxz
or
fisttpll
icebp
cltd
jns
mov
div
repnz
sbb
ja
xchg
lahf
push
popa
jns
pusha
inc
sti
cltd
mov
leave
and
popa
xchg
fnsave
icebp
xor
adc
es
addr16
add
mov
adc
loope
sbb
outsl
mov
sub
scas
jno
mov
fucomip
dec
dec
mov
add
dec
mov
mov
pop
loope
mov
xor
adc
add
shlb
js
out
dec
test
out
mov
pop
jle
iret
iret
push
or
leave
pop
and
andb
pop
jg
jnp
or
inc
fdivrl
mov
insb
cmp
xchg
cmp
aad
dec
into
push
mov
jg
movsl
ret
mov
mov
jecxz
xlat
scas
adc
pop
iret
clc
test
mov
repnz
leave
enter
mov
fmull
nop
sbb
clc
ja
sbb
inc
inc
mov
sti
loop
mov
push
loope
jno
rolb
cwtl
mov
ja
mov
or
pop
enter
outsb
lock
out
aam
mov
mov
mov
adc
cmpsl
or
into
push
lahf
out
loop,pn
dec
push
fdivr
cli
negb
sbb
cs
sbb
outsl
hlt
xlat
lret
pmaddwd
mov
cwtl
lods
gs
mov
adc
stos
push
xchg
xor
pushf
xchg
test
push
iret
push
faddp
js
icebp
or
dec
mov
dec
hlt
mov
mov
stos
arpl
xchg
addr16
cs
add
jg
hlt
sahf
daa
cmp
jge
push
dec
mov
ds
call
cmp
cmpsl
shlb
push
mov
cmpl
inc
cltd
int3
mov
mov
xchg
or
aas
add
mov
lret
addr16
jl
test
inc
movsb
popf
fistps
es
mov
test
shl
or
xchg
pop
xor
sbb
dec
jge
sub
xlat
fdivrl
cmp
cmpsb
and
sbb
inc
jb
hlt
test
ss
js
or
pop
mov
lods
sbb
and
pop
push
adc
idivb
leave
daa
jecxz
popa
int3
inc
mov
sub
enter
fistpl
and
mov
decl
pusha
pushf
stos
gs
ljmp
cmpb
and
imul
jno
jp
test
and
push
ja
nop
add
gs
push
dec
jle
push
push
repz
std
ret
out
push
mov
nop
test
sbb
lret
stc
adc
ss
notb
int3
inc
call
je
ljmp
and
mov
out
popa
mov
mov
fs
mov
fstps
pop
lret
outsl
jno
xchg
jecxz
mov
leave
shlb
xlat
mov
sti
scas
lock
lds
or
int
loop
ret
xchg
test
lods
outsl
cmp
hlt
mov
test
loopne
gs
notl
imul
rcll
xchg
inc
insl
or
sbb
pop
mov
and
and
inc
pop
divb
sbb
cwtl
out
fsubl
mulb
int
enter
ja
push
scas
or
ret
rcrb
sbb
push
pop
les
aas
lods
xchg
add
inc
int
test
mov
popf
sbb
mov
stos
dec
das
mov
pop
test
in
mov
fdivrp
frstor
sub
movsl
fists
sub
xchg
pop
js
shr
js
or
pop
aam
shll
lods
add
push
bound
fxch
aaa
push
jmp
or
inc
data16
mov
xor
imul
cmp
mov
rcr
dec
out
insb
xchg
mov
mov
rcl
xor
xor
xchg
mov
mov
mov
cwtl
add
jbe
push
addr16
and
sbb
adc
scas
sahf
test
dec
stc
popa
cmp
sbb
andl
jb
mov
inc
out
int3
popf
in
push
pop
adc
fisttpl
adc
cmp
cmpsl
jne
sbbl
push
xor
mov
divb
dec
ret
adc
dec
jbe
mov
adc
mov
mov
lods
cmp
and
mov
adc
pop
pop
mov
cmpsb
cmp
in
jg
add
pop
add
subl
adc
int3
add
xchg
clc
xlat
and
cmpsb
fldenv
sbb
daa
pop
xchg
mov
loop
clc
rcrb
jg
stos
ljmp
pushf
push
mov
mov
mov
pop
scas
dec
jp
cmp
movsl
mov
popa
imul
insl
sbb
xor
xor
lods
adc
push
ret
enter
scas
or
enter
xor
and
xchg
add
inc
xor
and
mov
mov
rclb
in
aam
xorl
dec
imul
or
push
sbbb
stc
ss
imul
inc
popa
inc
adc
scas
push
mov
fistps
js
mov
mov
pop
mov
cwtl
sbb
pop
jecxz
stc
mov
lods
mov
cmc
fisubs
in
scas
xor
sbb
test
mov
push
sub
adc
bound
pop
ja
lds
stos
fsubl
aaa
arpl
xor
into
cmp
cmpl
clc
add
adc
inc
movsb
cmpsl
loop
js
mov
jp
shrb
inc
movsb
shl
outsl
jb
push
push
data16
pop
jmp
test
std
mov
xchg
lods
into
push
call
xchg
repnz
or
aad
xchg
mov
mov
and
xor
insl
rclb
xchg
inc
mov
or
call
adc
mov
nop
sbb
jl
push
mov
mov
mov
imul
nop
push
cmp
push
lea
sahf
inc
xchg
daa
stc
mov
mov
mov
lds
fsubp
in
int3
sub
and
or
out
arpl
repz
push
out
xchg
out
mov
jl
lods
pop
nop
sbb
xlat
mov
cmp
inc
xor
das
lcall
lods
pop
jle
movl
cli
mov
adc
dec
pop
enter
jge
cmp
inc
fsts
bound
leave
cmp
xor
push
push
out
mov
gs
test
dec
test
xor
jge
mov
insl
xor
push
jmp
jb
ds
popa
out
xchg
cs
xchg
inc
or
mov
mov
jge
ret
sub
repz
bound
push
lods
pop
sub
adcl
daa
addr16
xor
ds
jns
and
xor
pop
aaa
push
add
sub
lea
mov
add
mov
lret
jle
dec
add
lods
cmp
roll
xchg
idivb
pop
xor
fwait
lcall
pop
pop
testb
fisubl
inc
xchg
pop
xchg
sti
lock
fs
xor
andl
das
jmp
inc
xchg
mov
in
mov
push
lods
mov
push
insb
ljmp
inc
pusha
int3
insl
sbb
scas
ret
movsb
adc
inc
dec
pop
loope
data16
cmp
push
cmc
cmpsl
pop
rolb
sub
inc
mov
pop
or
mov
in
sbb
cmp
adc
test
stos
adc
jae
push
push
imul
ret
lcall
into
mov
sti
arpl
sub
pusha
sub
xchg
xor
jnp
mov
inc
push
pusha
jns
jle
lahf
mov
add
push
sbb
adc
insb
xchg
lahf
ja
in
sti
mov
or
mov
adc
pop
repnz
xchg
mov
pop
fmulp
test
imul
mov
rclb
pop
fcomp
pop
mov
dec
fimull
lea
sbb
sbb
mov
or
jae
xchg
scas
movsb
cmp
push
fmuls
mov
in
mull
xor
insb
push
mov
imul
ljmp
sbb
xchg
lahf
jb
sar
int
subl
fdivl
mov
xchg
fildll
mov
fmuls
in
fcomps
jecxz
lods
inc
push
mov
fistpl
mov
jb
hlt
add
inc
dec
dec
xchg
pop
cwtl
inc
test
xor
cli
cmp
adc
lcall
xchg
jle
inc
movsb
mov
or
imul
adc
xchg
pop
outsl
rcrl
out
mov
cmp
scas
sub
mov
push
mov
out
push
push
enter
lea
inc
and
xchg
jl
fs
les
jns
and
mov
popa
xchg
idivl
ret
leave
dec
imul
jl
lock
inc
or
les
cld
sub
mov
shl
sub
scas
lret
push
hlt
andb
ret
push
jmp
out
insb
repz
cmp
push
sbb
dec
push
aad
pusha
lds
adc
dec
push
lock
cmpsb
data16
lds
mov
jnp
es
jmp
xchg
stc
aad
mov
sahf
pusha
jns
gs
ret
fwait
xor
adc
jmp
test
in
xchg
arpl
scas
push
jg
adc
pop
push
fstl
movsb
stos
xchg
fstl
xchg
int
jb
inc
movsb
mov
cli
add
xchg
lret
or
scas
icebp
jb
dec
sahf
rolb
sbb
scas
pop
hlt
pop
cmp
enter
mov
push
mov
xchg
fdivrs
hlt
sahf
cmpsb
add
jno
inc
sub
pusha
xor
inc
add
neg
xor
int3
push
cmp
mov
cld
xor
dec
push
imull
jae
std
xchg
fcompl
xchg
mov
jge
push
xor
adc
cli
and
scas
mov
mov
inc
adc
in
xchg
mov
nop
sub
push
xchg
loop
test
jno
nop
scas
into
cmp
mov
rolb
outsb
movsl
icebp
loop
fists
mov
aad
test
enter
pop
mov
icebp
mov
cmp
cmpsb
outsb
fabs
ficoml
cmpsl
fidivl
iret
xchg
in
cmp
fisubrs
sbb
mov
lcall
add
mov
in
pushf
adc
sahf
or
repnz
jno
pop
dec
nop
mov
xchg
das
mov
lret
in
popa
jbe
sub
sti
pop
fidivrs
dec
and
pusha
out
lahf
jmp
sub
rol
sbb
fs
ja
js
pop
cmp
mov
push
sbb
mov
insl
subb
div
jb
out
flds
repnz
rolb
jns
out
movsl
xor
cmpsl
sbb
jmp
sub
sub
sahf
inc
orb
cmp
imull
inc
mov
mov
add
fdivr
or
out
addb
mov
sub
pop
cwtl
pop
mov
pop
add
popa
loop
rorl
inc
xchg
ret
xchg
fisttpll
push
arpl
xchg
ret
dec
inc
add
mov
test
outsb
hlt
and
mov
dec
jne
pop
das
mov
pop
shl
out
popf
jmp
scas
add
xor
jae
jbe
sub
jb
sbb
ja
mov
xchg
shr
sbb
loope
fldln2
jmp
shl
adc
dec
xor
sub
pop
pop
jne
aas
shll
mov
popa
sti
divl
int3
cmp
ja
inc
adcl
sbb
and
out
push
in
mov
pop
fwait
sti
clc
pop
xchg
xchg
movsb
ret
dec
jae
mov
icebp
sub
hlt
cmpsl
mov
adc
movsl
out
jl
ret
sbb
ljmp
and
mov
ja
inc
add
cltd
add
subb
nop
xchg
cmp
lods
ss
mov
jge
sar
cld
or
int3
mov
in
mov
iret
jmp
jae
lret
or
jnp
movsl
xlat
push
shlb
mov
adc
mov
cld
cmp
pop
and
mov
pop
sbb
sub
mov
cld
cmpsb
mov
sti
push
adc
mov
cli
in
sbb
pop
adcb
xchg
pusha
push
inc
outsb
mov
fnstcw
and
push
bnd
add
push
aas
jno
and
js
adc
es
cmpsl
pop
inc
pop
in
addr16
sti
addr16
lds
xchg
push
push
pop
mov
cmp
mov
out
jbe
pop
xchg
sub
pusha
in
rclb
fnstenv
cmp
je
xor
sub
or
movsl
faddl
ds
inc
add
push
cs
add
sub
cmp
js
and
rcrb
insl
inc
mov
mov
mov
shll
xlat
pop
in
cmovns
cmpsl
adc
fistl
cmp
fisttpll
orb
pop
scas
inc
jg
pop
sub
sub
test
xlat
mov
lods
sbb
push
mov
adc
shlb
dec
into
bound
or
pop
dec
ss
out
jns
xchg
cwtl
lcall
or
push
pop
mov
xchg
push
pop
in
aaa
dec
xor
sti
pop
mov
scas
js
cmp
insb
faddl
and
fiaddl
cmpsl
push
rcl
ljmp
in
jne
lock
xchg
in
jecxz
in
lds
gs
or
test
inc
test
lods
push
and
adc
add
mov
rcrb
mov
mov
fidivrs
movsl
sub
aam
and
dec
cmpl
les
mov
pop
inc
mov
adc
jle
push
xchg
je
fistps
ret
in
mov
jg
cmp
mov
inc
lock
movsl
stos
ja
push
add
push
ret
repz
add
cld
in
mov
in
data16
int
and
adc
or
inc
mov
push
mov
mov
incb
lahf
xor
int
push
or
gs
jae
in
bound
inc
call
out
mov
sarb
xor
push
dec
sbb
mov
insb
mov
mov
mov
dec
out
fdivp
jmp
js
aaa
loopne
jmp
fimuls
fisubrs
and
out
pop
imul
je
gs
mov
mov
scas
bound
or
pusha
cmovge
lds
test
jbe
in
push
dec
popf
add
cli
mov
cmc
ret
in
imul
loope
dec
jo
xor
cltd
rcrw
lcall
dec
adc
mov
in
in
sub
rorb
push
bound
xchg
cmp
and
cmpsl
enter
gs
aad
lods
leave
lods
fdivl
cli
test
pop
dec
push
jecxz
dec
rcl
mull
int3
jge
rcl
dec
call
addr16
cwtl
jnp
xchg
mov
dec
sbb
out
cmp
push
cmp
jns
call
xchg
jmp
in
loopne
dec
fwait
dec
xchg
shlb
dec
iret
mov
dec
les
stos
imul
lock
nop
ret
xlat
sbb
fwait
dec
xor
inc
imul
mov
mov
cmp
into
insl
sarb
andl
popf
leave
sub
fidivs
push
jle
jno
andl
add
lcall
sbbl
add
push
jle
fidivs
jl
gs
les
or
and
insb
mov
inc
lods
mov
jnp
scas
cmp
lret
bound
lcall
or
mov
jae
dec
cwtl
sub
mov
loopne
inc
pop
inc
pop
add
dec
and
in
dec
push
fisubl
push
dec
mov
daa
mov
mov
rolb
or
das
sub
test
add
shlb
das
or
int
scas
xchg
sbb
add
xor
add
stc
sub
xchg
data16
pop
div
mov
push
dec
mov
pop
sbb
pop
in
addr16
imul
pop
call
xchg
cltd
xchg
popa
push
xchg
fwait
jge
xchg
outsl
and
sub
in
shlb
push
rorb
mov
cmpsb
idivb
mov
dec
test
imul
push
mov
hlt
and
inc
mov
lcall
popf
ret
mov
iret
jo
jns
adc
lds
in
sahf
lret
cltd
jg
or
fisubl
add
push
cmc
sti
sbb
stos
scas
cld
push
ret
dec
lock
in
std
mov
inc
mov
lds
outsb
mov
push
sub
aam
test
xchg
sbb
imul
pushf
inc
add
jae
cli
mov
fsubrs
cmp
sarl
mov
aas
scas
jne
ret
inc
cmpsb
or
inc
scas
adc
rcll
lods
jbe
jmp
sub
movsl
imul
push
fs
ss
cmp
dec
loopne
jle
test
pop
xor
frstor
cmp
add
scas
pop
push
pop
addb
inc
inc
jge
int
lea
jb
scas
sub
in
inc
insl
mov
imul
out
adc
cmp
test
fwait
dec
push
inc
dec
pop
pop
test
sub
jge
mov
inc
nop
sub
cld
add
pop
sbb
bound
ret
imul
ljmp
fs
cmp
pop
sub
sbb
scas
inc
pop
aas
test
push
pop
clc
add
shll
and
jmp
mov
cmp
xchg
test
lcall
pop
loopne
and
push
mov
dec
push
jecxz
frstor
sbb
add
add
mov
or
stos
mov
pushl
outsb
sub
lret
cmp
or
sbb
mov
scas
lret
pop
jb
jno
test
test
and
adc
xor
loop
jp
sbb
clc
outsl
test
xchg
pop
dec
ss
mov
mov
or
dec
mull
mov
xor
cli
push
icebp
gs
rcll
push
sbb
cmp
sbb
enter
lret
xor
sub
sub
bound
pop
sub
fnsave
cmpsb
adcb
es
pop
jae,pn
out
adc
ret
adc
jb
lods
out
pop
pop
jl
add
call
dec
push
xlat
inc
push
out
dec
xchg
mov
cmp
gs
js
xlat
shrl
inc
add
incb
rcr
les
jge
lods
push
adc
stos
add
pop
xor
adcl
jae
loope
pop
sub
inc
adc
out
fwait
push
or
insb
adcb
add
sbb
sbb
out
test
add
aam
fidivs
icebp
push
lret
push
cli
jl
insl
mov
dec
xor
xor
add
cs
mov
in
rcl
gs
mov
pop
roll
or
jp
leave
adc
lret
in
mov
in
dec
push
and
call
pop
push
sub
popa
nop
jnp
scas
push
dec
mov
push
ret
xchg
mov
pop
adc
mov
data16
sbb
or
es
mov
mov
test
cmp
mov
aad
in
cmp
and
xchg
ljmp
adc
stos
testl
gs
xor
sbb
pop
fistl
jb
push
enter
data16
fidivs
aam
jnp
lcall
or
jmp
and
jmp
std
int
ja
cmp
pop
flds
jae
rcrl
lret
mov
dec
push
sbb
int3
ret
add
xor
fstpl
shrl
sahf
repz
cwtl
mov
arpl
mov
jl
iret
sbb
add
xor
pusha
mov
xor
subl
out
jp
xor
and
sub
sahf
push
mov
fsubl
mov
fadd
out
data16
movsb
pop
inc
popa
imul
adc
icebp
subb
sbb
popa
aad
dec
dec
divl
jp
es
cmp
into
cmp
cmp
ja
mov
fidivrs
rorb
xor
sub
or
not
cmp
test
divl
je
mov
lods
and
sub
sbb
inc
cli
out
ja
call
popf
jle
jbe
popf
sbb
xchg
rclb
outsb
mov
lcall
or
mov
pushf
sbb
dec
sub
push
flds
pop
dec
gs
push
or
gs
fs
cmpsb
add
and
sti
push
mov
or
and
scas
jbe
jp
fcomps
xchg
hlt
mov
dec
xor
mov
ja
in
push
dec
and
jno
jecxz
insl
adc
int3
cs
sub
adc
in
repz
hlt
cmpsb
jp
out
pusha
jb
sub
mov
jns
mov
fsts
adc
mov
dec
inc
cmpsb
add
jae
lret
mov
int
mov
js
icebp
lods
dec
xlat
scas
fwait
lcall
je
sbb
xor
les
mov
jnp
xor
rcr
icebp
pop
adc
mov
cmp
xor
ret
push
fsubrl
xor
jo
adc
add
cmc
mov
jb
nop
insl
sbb
orl
cmpsl
and
push
sub
aas
aaa
enter
mov
outsl
jecxz
fiaddl
jb
xor
mov
jnp
mov
arpl
inc
pop
jbe
inc
scas
push
push
dec
adc
js
popa
sbb
and
mov
xchg
push
mov
cmp
ljmp
jns
dec
or
fstpl
andps
cli
push
xor
adc
add
cmp
ss
and
std
pop
aaa
sbb
inc
cmp
fucompp
aaa
pop
imul
adc
cmp
rolb
xor
fdivrp
int
xchg
add
dec
dec
mov
mov
scas
dec
pusha
out
mov
in
in
xchg
cwtl
xchg
fnstenv
cmpb
rclb
cli
dec
pushf
pop
pop
in
ja
ja
ss
mov
lds
std
and
xchg
jge
sbb
push
xchg
cmp
std
fnstcw
pop
add
sahf
cmp
jae
addr16
mov
lret
les
je
xchg
stos
mul
enter
es
push
mov
in
push
test
pop
cli
push
dec
shll
mov
repnz
fdivrs
aam
ret
int
mov
inc
jecxz
sahf
push
pop
das
jg
jb
in
mov
jle
adc
ret
fsubrs
or
hlt
jge
aaa
sub
inc
lock
push
fsubrl
inc
sbb
call
pushf
sbb
arpl
ret
xchg
lds
xchg
xchg
leave
mov
xchg
cmpsl
popaw
push
std
adc
je
divb
sbb
or
test
fsubl
hlt
push
cmp
aad
mov
adc
add
mov
dec
fstpl
jns
jl
push
jle
push
movsb
pop
mov
add
out
jl
inc
int
inc
push
push
aas
xchg
adc
pusha
mov
sub
mov
jb
jmp
std
mov
int
call
test
popa
inc
push
mov
jbe
fsub
test
xchg
xchg
inc
bound
movsb
movsb
add
fisttpl
cli
in
mov
dec
insb
mov
sub
es
mov
arpl
and
mov
iret
lahf
fnsave
inc
push
sti
popf
call
and
mov
add
pop
dec
push
push
out
test
pushf
pop
mov
push
xor
inc
jmp
xchg
cmp
mov
mov
cltd
push
das
and
push
rorb
outsb
aaa
cmp
lret
xor
jp
fs
fxch
insb
or
bound
aad
sarl
in
jge
lods
sbb
hlt
std
xchg
js
push
push
ret
mov
push
jg
mov
fisttpl
shll
int
push
inc
int
lods
negb
inc
out
push
jmp
test
jne
inc
lea
fisttpll
rcll
inc
dec
xchg
push
leave
gs
nop
insb
mov
mov
lahf
cmp
cmpsl
sti
nop
sub
mov
test
outsl
mov
mov
xchg
adcb
and
popa
or
icebp
pop
les
mov
add
nop
sbb
imul
sub
movsl
fsubp
mov
cmp
adc
mov
pop
popa
push
cmpsl
popf
jge
nop
out
cld
cmp
mov
outsl
pop
cmp
cmpsl
dec
in
mov
lahf
push
repnz
or
lret
gs
test
imul
adc
xorb
xor
bound
sarb
push
out
and
and
mov
dec
jl
cmp
mov
je
andb
gs
test
push
cwtl
insl
push
orb
push
sub
ss
fcmovnb
sub
les
mov
out
mov
movaps
or
sahf
rcrl
aad
pop
push
insl
fdivrs
mov
pop
dec
cmpsl
sahf
push
sbb
push
mov
jl
jo
push
and
pop
fcompp
in
and
fldcw
mov
jno
dec
inc
iret
icebp
mov
test
pop
mov
cmpsl
scas
test
adc
and
js
push
xchg
cwtl
int
jno
jle
out
sahf
stos
mov
pop
arpl
xor
push
pusha
movsb
ja
imul
repz
push
in
test
adc
jecxz
and
and
outsb
in
push
sarb
dec
dec
cmpsb
inc
mov
test
ja
ffreep
and
adc
daa
addr16
rcr
jbe
aas
scas
cld
mov
mov
jge
ds
int3
add
push
cmc
stos
int
mov
mov
fucomi
and
sti
cmpsb
xchg
imul
sbb
pushf
and
add
test
lds
push
aad
dec
pop
dec
mov
sbb
mov
inc
or
add
movsb
push
add
or
or
inc
sar
int3
sub
into
es
mov
adc
adc
sub
in
inc
test
imul
sbb
and
rorb
cltd
mov
jle
mov
mov
ret
dec
out
jne
or
mov
pop
pop
fimuls
fcomp
pop
stc
int
cmc
imul
pushf
test
adc
daa
cmpsl
dec
sahf
loopne
add
dec
rorb
add
sbb
inc
xchg
mov
mov
push
clc
jge
pop
push
mov
mov
fcoms
cs
mov
xor
mov
mov
push
inc
cld
data16
mov
mov
call
stc
xchg
pop
sbb
lret
and
adc
or
scas
or
idiv
lcall
sbb
mov
pop
ret
pop
xchg
mov
out
out
fnstenv
jp
push
mov
xchg
or
insb
xchg
mov
dec
and
data16
mov
sub
dec
xor
adc
pop
push
lcall
dec
add
repz
les
aas
mov
ret
rcrl
out
xchg
andb
jl
mov
sarl
push
shrl
std
pop
and
outsl
cmc
xor
xchg
inc
das
or
inc
shlb
xchg
repz
xchg
shll
xor
or
mov
and
jno
fcompl
cli
xchg
mov
mov
test
mov
or
xchg
outsl
dec
pop
xchg
mov
aam
jge
mov
pop
pop
insb
in
xchg
push
xchg
xor
jae
mov
xchg
out
inc
rorb
mov
mov
mov
sbb
pop
rorb
dec
imul
or
orl
pusha
popa
adc
sub
inc
mov
sub
mov
mov
push
pop
xchg
adc
loopne
out
mov
cmc
fisttpll
xchg
pop
mov
pop
fnstenv
das
pop
or
lods
ficomps
dec
ds
sti
push
fcom
pop
stos
nop
stc
cltd
lahf
lea
adc
push
push
pusha
sub
insb
mov
or
adc
pop
repz
lahf
jg
insl
bound
test
cmp
inc
fcompl
and
pop
popf
cmc
dec
xor
push
aam
xchg
lret
andb
std
lea
xchg
mov
sbb
cmp
mov
pop
out
les
out
mov
inc
xchg
sub
xor
fdivrl
shrl
cs
dec
mov
rcrl
xor
in
movsl
cs
or
and
rcll
cmc
mov
inc
in
sbb
and
sub
push
sbb
mov
dec
out
stos
lcall
addl
and
mov
cs
daa
jge
sahf
cli
sbb
mov
or
lods
sub
add
lods
mov
mov
lahf
jle
cltd
sti
dec
inc
push
je
je
inc
pop
xor
xor
push
les
sub
jg
fildll
sub
xor
pop
test
jmp
jmp
insb
inc
mov
xchg
and
dec
mov
sub
sbb
jae
mov
iret
jae
mov
xchg
mov
lret
or
lods
cltd
ret
pop
push
mov
leave
test
adc
dec
pushf
ret
mov
jl
mov
arpl
add
movsl
push
cmp
xchg
jnp
adc
lret
xor
negb
pop
pusha
jl
mov
das
jb
in
add
sbb
mov
in
lahf
cmp
rcr
cmp
adc
out
in
fmull
in
cmp
rcr
push
and
bound
dec
xor
xor
jb
rcl
jmp
inc
mov
xchg
shrb
insl
sbb
pushf
sahf
jecxz
lock
or
xorl
data16
push
leave
aam
push
cmp
ljmp
imul
repz
xchg
lods
adc
mov
test
lahf
sub
loope
push
dec
jmp
mov
pop
mov
cmp
aam
xor
test
mov
jbe
daa
cwtl
nop
xchg
fwait
dec
pop
gs
rcrb
xchg
inc
in
ljmp
stos
in
and
movsb
mov
stos
pusha
and
in
mov
or
fmuls
or
cld
cwtl
fcoml
xchg
inc
push
iret
and
stc
xchg
out
ret
xor
fidivrl
lcall
jge
lods
push
jne
xchg
ret
inc
xchg
arpl
or
popf
push
sbbw
and
addr16
pushl
jg
mov
std
loopne
mov
xchg
dec
adc
inc
les
cltd
jns
jp
icebp
xor
insl
lea
inc
scas
and
lahf
or
jmp
sbbl
out
iret
sub
add
inc
leave
in
xor
push
cwtl
or
aam
xor
pop
sbb
mov
fadds
adc
sbbl
daa
sub
sbb
popf
pop
imul
mov
push
mov
aam
pop
mov
sub
sub
inc
jae
cwtl
test
aad
push
push
inc
leave
fcoml
mov
imul
aaa
cmpl
divb
xorl
lret
ds
daa
adc
popa
mov
fpatan
mov
iret
lods
sti
sub
inc
aas
push
iret
push
mov
sbb
xchg
xchg
jns
adc
or
push
movsl
push
js
in
and
fdiv
aad
jns
mov
inc
push
das
repz
or
add
sub
sahf
mov
dec
in
xor
movsl
xchg
call
es
scas
aam
ja
xchg
adc
dec
loopne
mov
fisubl
mov
movsl
jmp
jle
test
imul
or
shll
sbb
dec
push
es
stos
outsl
mov
cli
jge
inc
xor
or
pop
pop
enter
push
dec
pop
jo
sbb
es
lods
inc
cmp
jl
addb
addr16
fistl
mov
out
test
mov
fdivrl
jecxz
adc
rolb
xor
test
add
popa
cld
sub
cmp
mov
sub
ret
jbe
or
loope
mov
aad
push
sbb
mov
xor
mov
mov
bound
call
add
into
push
dec
fists
pop
cltd
xor
int
push
jo
mov
mov
sbb
mov
test
mov
dec
dec
daa
cmpsb
mov
mov
adc
cmp
cltd
cwtl
cmp
pushf
scas
clc
cltd
aam
cli
nop
jle
push
mov
and
pusha
in
mov
or
aaa
or
cmp
daa
insl
fcomip
add
addl
testl
mov
repz
enter
and
popf
dec
pusha
stc
lds
xchg
rclb
insl
rcrl
dec
dec
mov
inc
sub
pop
xchg
mov
xor
sub
aad
add
mov
xchg
mov
daa
fists
das
aas
cmp
outsb
cmpsb
jl
bound
es
test
and
inc
or
push
sub
xchg
int3
adc
push
cmpsb
xor
in
mov
fwait
jns
fcoms
loop
lret
cld
xor
mov
mov
imul
arpl
idiv
mov
mov
xchg
sub
incb
in
pusha
cmp
add
dec
ret
fistpll
inc
mov
movb
andl
cmc
inc
adc
jle
push
jl
sbb
push
enter
pop
jl
dec
in
jp
and
negl
push
mov
jb
mov
cmp
xlat
scas
xchg
mov
adc
inc
cmp
xor
cwtl
or
scas
jbe
mov
inc
mov
xchg
push
push
lret
push
ret
jne
pusha
fidivrs
scas
xlat
adc
fcmovne
pushf
adcb
js
ss
adc
call
push
icebp
push
stc
loop
rcr
rcr
mov
sarl
and
inc
sti
fsub
movsl
arpl
adc
xor
fisttps
test
pop
in
shlb
mov
loope
jp
arpl
hlt
test
cmp
or
arpl
mov
rorl
dec
sbb
push
and
lock
inc
xlat
add
mov
push
fcomps
out
movsl
in
cmp
jne
add
add
sub
mov
xchg
and
add
pusha
fsts
subl
pminsw
xor
jge
cmp
mov
insl
xorl
shrb
mov
inc
or
mov
into
frstor
lea
hlt
iret
xchg
push
inc
mov
arpl
xchg
and
sahf
jle
mov
je
mov
insl
fs
dec
adc
dec
inc
mov
jge
jmp
repnz
lods
jnp
push
in
mov
mov
xchg
test
mov
dec
mov
jl
push
inc
mov
jnp
inc
mov
lahf
movsl
insb
cmpsl
ret
jo
adc
cmp
lock
dec
xor
popf
add
bound
cld
mov
xchg
loop
inc
ret
mov
push
sbb
pop
mov
shr
addr16
cmp
mov
adc
jb
fildl
loopne
jge
cmp
shlb
aas
inc
sahf
test
inc
xchg
inc
pop
jns
mov
ja
mov
push
repz
mov
cmp
ret
and
arpl
push
out
clc
shlb
sub
add
sarb
ud2
fwait
movsl
sub
push
rcll
lret
in
add
jnp
mov
and
lret
pop
push
cltd
jno
push
repnz
fs
dec
out
into
aas
add
mov
or
popa
scas
mov
lret
popf
loope
out
dec
cmpsl
inc
and
inc
and
xor
mov
push
scas
mov
cmp
adc
mov
cmp
push
mov
ss
lretw
lret
mov
adc
dec
or
cmp
jge
add
testl
xlat
or
inc
test
add
sbb
je
xor
ret
aaa
inc
movsl
dec
nop
test
enter
mov
mov
pop
adc
adc
movsb
or
lods
pop
lahf
mov
inc
lahf
jbe
sti
xchg
push
cmc
lods
js
jle
jne
xor
les
mov
data16
test
lret
test
pop
out
xchg
add
pusha
daa
arpl
xchg
js
xor
sub
pop
rclb
enter
sbb
add
mov
lods
pop
mov
mov
sti
jnp
xchg
jbe
mov
xor
pop
or
jge
sbb
adc
aad
push
int3
ja
icebp
leave
cld
inc
push
add
mov
arpl
mov
pop
xorb
mov
jg
fdivrl
hlt
push
ja
minps
sbb
dec
leave
mov
lds
scas
inc
xchg
mov
jmp
jle
mov
sbb
sub
and
imul
xchg
xlat
pop
mov
push
mov
lahf
mov
aaa
mov
and
sbb
orl
add
dec
mov
test
adc
dec
hlt
cltd
sti
scas
inc
push
cmp
sbb
or
pop
mov
das
hlt
cwtl
push
add
xchg
js
cmpl
jg
sub
inc
outsb
mov
js
aaa
popa
sbb
push
les
icebp
jl
lret
ljmp
mov
aam
inc
in
fnsave
xchg
out
dec
pop
jmp
popf
and
mov
cld
sbb
or
fwait
in
test
dec
cmp
pop
adc
inc
mov
jp
xor
nop
mov
dec
pop
mov
lret
jns,pt
dec
cmp
cmc
cmp
xlat
push
xchg
dec
nop
or
or
mov
inc
sahf
fs
popf
cli
jmp
mov
mov
into
or
icebp
es
dec
sbb
push
mov
inc
or
popf
and
cmp
imul
inc
dec
xchg
sbb
or
sub
dec
xor
xlat
pushf
shlb
and
jge
mov
mov
cltd
pushf
pop
inc
das
std
xlat
loope
aad
or
ror
mov
fbld
mov
lahf
cmp
ja
or
fisttps
push
into
push
sbbb
cmc
fs
push
mov
xor
xchg
aam
in
fmul
dec
repnz
pop
aam
push
insb
mov
xor
ret
das
les
cmc
dec
sub
jb
push
xchg
sbb
inc
cs
lea
pusha
jne
fwait
add
testb
sahf
pop
adc
scas
outsb
les
pushf
cmpsb
test
jb
fcoms
pop
into
adc
pop
ret
repz
int3
das
repz
jae
sarb
add
lds
aad
loope
outsb
pop
movsb
or
xorl
sub
hlt
fdivl
xchg
push
mov
or
push
mov
clc
int
outsl
aam
mov
stc
sbb
in
loopne
or
pop
stos
and
mov
cs
mov
adc
cwtl
insb
sub
xlat
call
test
loopne
aaa
sar
mov
sub
push
hlt
jo
aas
cmpb
subb
adc
push
je
mov
jnp
pop
ret
sbb
xchg
jns
push
lods
inc
mov
lods
sub
loop
and
xor
scas
ret
mov
sarl
cmp
and
ja
leave
loop
mov
dec
stos
cmp
xchg
lret
jno
jecxz
and
xchg
repnz
popa
das
xchg
jmp
jbe
call
add
stos
fmulp
pusha
push
xchg
xchg
xor
cmp
fs
and
ja
push
inc
sub
cmp
mov
dec
and
and
ljmp
stos
xchg
fstpl
dec
mov
mov
shrl
jle
mov
sahf
pusha
fcoms
jb
xor
sbb
aad
sub
or
mov
loope
pop
push
dec
mov
cmpsb
fwait
or
mov
pusha
enter
mov
mov
rcl
cmp
cld
push
push
mov
add
xchg
sbb
in
mov
add
add
mov
int
imul
out
fcompl
loope
adc
popf
repz
subb
mov
rcrb
pop
jmp
push
and
test
es
dec
fcmovnbe
inc
clc
or
or
or
or
out
es
pop
jge
inc
push
inc
inc
and
sbb
mov
pop
gs
sub
inc
out
lea
gs
adc
push
xchg
jmp
shr
loop
mov
mov
shlb
mov
cmc
iret
ds
dec
inc
hlt
mov
test
adc
mov
or
or
je
adc
push
xchg
add
mov
movsl
hlt
inc
pusha
in
mov
and
mov
cli
cmpsb
mov
das
inc
push
jns
scas
mov
or
add
push
cmp
mov
and
out
pop
popf
aad
cld
add
lahf
mov
enter
dec
mov
dec
addr16
push
js
lahf
bound
mov
ds
insl
fildl
in
test
xchg
ret
mov
mov
push
out
add
mov
adc
daa
inc
xchg
pop
adc
aas
repz
xor
mov
ja
and
imull
les
sub
jmp
mov
cmp
inc
lea
shlb
filds
push
add
inc
jge
aad
jb
lea
outsl
inc
mov
inc
pop
gs
cmp
jecxz
bound
test
aam
jecxz
mov
cmp
stos
aas
bound
repz
push
subl
fidivrl
adc
iret
and
jo
xor
or
and
aaa
rorb
jle
xor
xchg
into
inc
jmp
adc
inc
stos
mov
xor
lods
fistpll
cmp
movsb
fldl
or
pop
cmc
arpl
xchg
and
shl
mov
fidivs
roll
popl
in
dec
js
xchg
inc
dec
sbb
mov
jge
in
lock
les
imul
jb
xchg
adc
or
xor
add
jns
or
pop
test
out
cmp
mov
dec
shll
xor
dec
mov
daa
cmp
enter
hlt
dec
iret
fstp
mov
rcr
mov
xor
jge
out
or
repnz
les
mov
ret
sub
mov
std
or
test
xchg
mov
push
mov
add
loopne
hlt
cld
push
subb
addl
jo
cmp
adc
mov
pop
sub
fwait
dec
jno
test
inc
fisubs
xor
xor
out
rolb
push
mov
xchg
add
sar
and
inc
movsb
imull
jno
lea
shll
lret
cli
push
mov
lahf
xchg
mov
test
jg
push
adc
bound
xchg
add
pop
cmpsb
cli
xor
push
arpl
inc
fdivrl
mov
lret
add
add
mov
decl
push
das
scas
xor
jp
repz
add
jmp
xrelease
and
test
jmp
cmp
test
fmull
xor
stc
or
jno
shlb
inc
jnp
inc
iret
pop
outsb
cmp
cmpsb
fldcw
mov
jne
dec
bound
out
push
sbb
popa
inc
repnz
push
mov
dec
jne
movsb
adc
hlt
ficompl
dec
notb
popa
cs
setl
sahf
es
jnp
jg
enter
inc
and
popa
test
cli
pop
dec
mov
ds
imul
cld
inc
pop
and
arpl
jae
jecxz
enter
jmp
aam
stos
or
dec
inc
pop
rclb
dec
jns
fcmovnb
andb
xor
and
push
mov
push
adc
loope
mov
addr16
ss
in
int
std
das
cltd
in
or
mov
je
rcll
lods
mov
mov
cmp
pop
sbb
sbb
repnz
push
push
test
imul
sbb
push
loope
pop
bound
aad
push
add
mov
cld
mov
sbb
fldcw
sub
enter
insb
adc
jp
popf
adc
mov
mov
mov
inc
cwtl
xor
sbb
out
inc
stos
dec
mov
data16
dec
inc
mov
popa
clc
inc
pop
rcll
pop
jp
cmc
stos
aad
jne
jno
mov
scas
mov
mull
lods
out
sbb
imul
mov
mov
out
pop
jge
repz
ret
inc
pushf
out
pop
jecxz
mov
loopne
pop
idivl
adc
add
cmpsl
sbbl
push
jg
leave
xor
int
cltd
inc
sahf
scas
push
sub
cltd
cmp
push
adc
outsb
dec
call
int
xor
lods
jmp
lea
push
dec
pop
fsubl
xchg
push
and
loop
popa
adc
cmp
mov
add
test
fstl
mov
nop
fcoms
pop
adc
ret
test
lahf
jno
repz
add
adc
xchg
mov
imul
sbb
fmull
hlt
je
aad
cltd
mov
in
xchg
repnz
daa
ja
mov
xchg
movsl
pop
push
decl
mov
add
data16
fmul
into
ss
aad
test
xchg
jecxz
xchg
daa
mov
cmpsb
loope
mov
cmc
shr
sub
repnz
loopne
fs
out
mov
jno
aad
adc
jbe
jp
ja
in
or
or
jp
loop
push
mov
mov
xor
stos
cld
sbb
or
inc
insl
dec
les
jns
dec
push
dec
or
gs
into
in
movsl
jge
rcl
in
psrad
sub
test
adc
xchg
test
mov
dec
sbb
imul
sbb
enter
xor
pop
sbb
xor
aas
aam
ds
push
jmp
rcrb
and
ret
sub
xor
push
mov
sbb
jns
iret
xor
jp
sub
jno
popa
or
sbb
shrb
mov
sbb
xor
xor
test
jae
pop
clc
and
mov
test
pop
xor
not
mov
mov
lods
inc
fstl
mov
cltd
pop
xlat
fimuls
mov
testb
ljmp
fsts
cmpsl
mov
jmp
rorb
sbb
rorl
fdivl
xchg
imul
sahf
mov
sub
or
insl
push
mov
add
insl
jne
lea
fidivrs
cmp
dec
jae
inc
mov
adc
xor
push
negb
add
and
lret
mov
mov
movsl
adc
mov
pop
pop
into
mov
inc
and
aas
lds
push
dec
les
cmc
mov
mov
jmp
dec
movsb
and
shll
jne
push
pop
rorl
or
shlb
ss
sub
rcrb
fmull
mov
xor
es
imul
or
test
add
fsubrp
popf
pop
icebp
inc
add
jo
adc
push
pop
jle
jmp
daa
movsl
mov
lds
mov
arpl
fwait
xchg
loope
jno
pop
pop
or
push
ds
xor
sti
in
cmpl
movsl
insb
lock
scas
addr16
and
dec
rolb
and
xchg
jg
pop
lcall
icebp
cmp
mov
mov
pop
gs
sarl
daa
aad
nop
fs
or
sbb
leave
repz
lret
fisttps
push
je
dec
push
sub
lret
xor
mov
inc
and
aad
iret
mov
aas
sbb
cmp
mov
stc
xchg
cmp
and
cli
and
iret
popf
in
cmp
outsl
shl
sbb
les
inc
cmp
aam
jmp
mov
mov
pop
leave
out
xor
sbb
adc
inc
push
fimuls
adc
pushf
xor
test
out
cli
rcrl
xlat
jne
mov
sub
sbb
and
mov
dec
dec
push
mov
xchg
jge
scas
mov
xchg
hlt
fsubs
dec
mov
loopne
in
add
test
call
test
aad
mov
dec
outsb
pop
mov
jno
add
mov
push
fwait
test
inc
mov
mov
push
lea
push
inc
out
inc
mov
push
lret
lret
ja
xchg
jnp
push
sub
pop
mov
es
cmpsb
jne
arpl
ret
pop
mov
addr16
stos
mov
pop
jb
mov
imul
shrb
jae
dec
call
sub
pop
imul
cmp
xchg
xchg
dec
fiaddl
jo
fdivs
in
and
jecxz
dec
jmp
mov
cmc
imul
cmp
sbb
pop
push
pop
dec
arpl
mov
shl
hlt
ja
jge
movsl
lcall
mov
fidivl
mov
sbb
rcrb
lret
cli
mov
adc
xchg
push
fsubrs
outsb
push
pop
gs
stos
push
jl
xor
shr
clc
jb
xchg
dec
repnz
sub
outsl
jns
push
pop
sarl
add
xchg
aaa
mov
jl
mov
push
push
sahf
and
arpl
xor
xor
xor
aam
lods
adc
leave
push
mov
xchg
pop
push
movsl
movsb
les
cld
add
push
mov
dec
cld
add
mov
jle
jne
mov
enter
les
aad
mov
pop
jecxz
popa
lcall
filds
add
test
cwtl
or
ret
negl
cmp
aaa
inc
cwtl
push
push
out
lods
lds
rcrl
mov
in
mov
mov
add
xor
das
dec
in
stos
ljmp
movsb
sub
cli
and
dec
fisubl
cmp
fidivs
aam
add
in
scas
aas
ret
jle
sbb
adc
repz
jae
add
pop
pusha
in
call
into
dec
pusha
cmpl
stos
cmp
js
aas
cwtl
aad
pushf
lret
stc
or
adc
sahf
jecxz
mov
jge
loop
mov
cmp
fistl
or
sbb
mul
and
fsubrs
fimuls
xor
mov
fs
xor
dec
xchg
and
into
fdivl
cltd
imul
push
add
nop
lods
into
lahf
ret
fbld
and
xor
sbb
bound
xlat
sbb
sbb
push
in
mov
subl
cmpsl
fidivrl
jno
xor
or
add
addr16
pop
push
adc
jo
mov
jbe
gs
sub
mov
incl
add
shld
dec
js
dec
fsubrl
in
in
test
call
cmp
mov
xchg
cmpsb
sub
data16
imul
and
repnz
leave
je
mov
xchg
cmpsl
adc
push
rcll
mov
xor
das
push
push
push
mov
mov
cli
xchg
xchg
sar
dec
sub
xchg
jno
inc
test
or
arpl
sbb
out
sub
test
pop
test
push
leave
jmp
and
jp
rolb
lock
xlat
popa
lcall
xor
mov
enter
and
les
loop
jmp
mov
rolb
scas
lds
sub
push
je
loope
push
dec
fildll
mov
adc
aas
adc
cmc
call
jmp
mov
pop
pushf
xchg
rorb
xchg
xchg
xchg
or
mov
sbb
es
mov
fidivl
ljmp
in
in
cmp
insl
aam
add
add
add
cmp
jp
and
sti
ret
stc
mov
or
nop
in
fsub
adc
xor
push
fmuls
add
test
cmp
arpl
inc
inc
push
add
jns
or
scas
push
loopne
push
lret
test
rorl
pop
test
mov
das
or
imul
frstor
jbe
sub
xor
test
fwait
lret
test
or
mov
fiaddl
sbb
xor
sub
test
dec
repz
out
mov
mov
dec
sbb
out
call
sbb
subb
pushf
dec
jp
or
dec
cmp
xchg
in
xchg
insl
sar
arpl
pop
and
std
stos
mov
in
imul
pop
test
xchg
or
js
mov
jno
cli
sub
sub
pop
adc
std
jecxz
push
sti
dec
es
mov
push
jns
sarb
cmp
xorl
adc
sub
mov
dec
sub
enter
ljmp
push
out
inc
pop
mov
int3
je
dec
push
xchg
cmp
sahf
out
out
xor
jne
loope
inc
pop
push
lahf
adc
dec
stos
mul
mov
sbb
jmp
pop
pop
mov
andl
or
nop
aas
insl
pop
lahf
xchg
and
xchg
data16
fwait
scas
int3
sti
cmp
lahf
xchg
mov
inc
jnp
jne
pusha
sahf
mov
fcoml
mov
mov
jmp
lcall
jnp
xor
push
vmovntdq
lret
outsl
xchg
mov
stc
cmpsb
xchg
clc
aad
xorl
xchg
jle
movsb
push
imul
ss
lret
incl
icebp
mov
ja
cmovb
push
loop
add
xchg
nop
fldt
lods
and
pop
sbb
lock
icebp
pop
scas
mov
imul
xor
js
dec
mov
jb
jb
xchg
and
and
or
fildll
or
mov
aaa
xchg
je
iret
test
shll
pushl
mov
pop
cltd
rclb
adc
icebp
loop
je
sti
sbb
inc
xor
pop
pop
push
repz
je
pop
mov
movsl
shll
stc
ja
mov
lock
and
push
inc
mov
adcb
sbb
mov
xchg
jnp
mov
push
movsl
fisttps
cli
jl
or
dec
xor
icebp
mov
xor
sub
pop
das
push
push
push
mov
outsb
in
rclb
sub
insb
out
loopne
cmp
inc
push
in
mov
loop
sub
adc
xchg
xor
xchg
std
cmp
dec
sbb
jne
adc
sahf
test
mov
pop
rcrl
add
iret
lods
push
sub
sbb
js
cs
insb
push
pop
adc
inc
shr
outsb
sbbl
cmpsb
loopne
cli
xchg
arpl
cmp
sub
and
ret
jle
mov
mov
jb
mov
or
adc
adc
or
and
mov
bound
testb
and
sub
lods
cmp
fstpl
mov
add
and
xchg
pop
push
jmp
xchg
or
clc
push
pop
cmp
add
inc
jge
rcll
mov
out
leave
and
inc
jle
js
and
mov
push
das
sbbl
sbb
xchg
popa
imul
adc
push
lret
xor
ds
fdivrs
jo
mov
ds
cmpsl
je
xor
inc
aas
push
daa
mov
dec
fisubrs
repz
pop
imul
enter
test
dec
inc
or
imul
out
push
adc
inc
add
in
imul
call
adc
push
lahf
clc
inc
outsl
mov
adc
inc
nop
scas
stc
dec
repz
mov
pop
or
jg
sub
decb
pushf
test
inc
push
jecxz
test
aam
mov
fildll
daa
pop
inc
popf
stos
ja
aas
push
sub
loop
js
frstor
jmp
lret
in
jmp
adc
shr
jg
sub
inc
lret
out
add
mov
nop
ret
xchg
jp
clc
sahf
sbb
sbb
rorl
lahf
or
jnp
mov
jge
pop
imul
xlat
in
into
mov
movb
xchg
jo
rcll
dec
push
push
inc
outsl
xor
cli
js
rclb
or
or
ret
iret
rcrl
xor
push
adc
cs
mov
jnp
imul
fstl
scas
mov
inc
or
inc
jns
cli
iret
dec
divl
dec
push
iret
fsubrs
xchg
adc
popf
out
setnp
xchg
pop
std
sub
add
sbb
jnp
imul
lret
xor
jg
inc
xchg
push
repnz
dec
lds
loop
mov
lahf
jne
prefetchw
or
out
or
inc
daa
dec
loope
sbb
int
sub
repz
test
fistpll
cltd
arpl
ror
mov
ret
aaa
xchg
loopne
lds
dec
sub
inc
lret
popf
jnp
lods
fwait
xchg
push
inc
sti
sarb
xchg
hlt
scas
cmp
lahf
loopne
mov
ljmp
nop
xor
or
or
out
roll
out
jl
in
pop
in
inc
dec
inc
cmc
xchg
rolb
mov
insb
fwait
shlb
mov
cld
dec
sbb
cmp
lods
cmpsb
xchg
pop
sub
mov
push
jo
fadd
mov
out
jp
pusha
sbb
test
in
xchg
push
inc
lcall
shl
les
clc
repnz
mov
and
xor
out
xchg
cld
push
out
push
or
testb
inc
mov
loope
sbb
dec
sahf
adc
cmc
and
mov
test
add
out
es
xchg
stc
xor
repnz
cmp
fisubrs
pop
inc
and
sahf
cld
mov
cmpl
and
jg
repnz
and
subl
loopne
inc
sub
andb
pop
mov
push
jne
ss
pop
ja
xor
fcompl
xchg
sub
das
or
xchg
push
je
push
push
push
inc
xor
push
mov
bound
or
and
and
clc
mov
popf
xchg
and
add
jb
sub
test
punpckhbw
repnz
scas
sub
and
mov
ret
std
popf
mov
push
xor
inc
inc
or
sahf
loope
mov
cmp
fs
dec
jnp
jecxz
test
mov
adc
mov
or
sub
and
test
sub
xchg
out
or
jne
loopne
in
dec
sub
sbb
lahf
stc
ja
std
test
jmp
int
and
cmpsl
cltd
adc
push
popf
bound
movsb
inc
leave
stos
xchg
adc
out
movsl
adc
pop
mov
ret
xor
cli
pop
loop
sbb
pop
ljmp
pop
outsl
push
mov
std
in
fiaddl
scas
movsb
sub
daa
mov
xchg
cmp
aad
and
mov
shlb
push
loop
sub
and
push
pop
ljmp
pop
mov
div
lahf
gs
int3
sar
ret
data16
daa
pop
inc
pusha
mov
call
icebp
sub
xor
or
jne
push
insl
lea
fwait
mov
aam
lahf
inc
adc
pushf
lods
sbb
out
xchg
out
adc
xlat
jge
fidivs
repz
xchg
out
jno
sbb
mov
stos
idivb
xor
int
mov
push
xchg
jne
push
cs
nop
cmc
scas
out
mov
adc
inc
lret
inc
xchg
das
push
popf
idiv
fistps
sbb
jnp
divl
sub
loope
sarl
push
xchg
lods
filds
pusha
push
sbb
mov
daa
lret
or
push
sub
lret
mov
or
pop
cmp
mov
cmp
aad
mov
daa
icebp
mov
pop
mov
cld
jg
sbb
adc
xchg
in
add
sbb
stc
and
fs
cs
pop
sbbb
mov
data16
xchg
mov
sub
popf
mov
or
mov
and
cmp
push
cmc
and
stos
fisttpll
mov
xlat
popa
and
cwtl
out
cltd
pop
cmp
rcrb
xchg
imul
int3
xor
pop
inc
or
mov
sub
ljmp
rcll
int3
ss
dec
imul
cmp
outsb
mov
jb
pop
inc
loop
fwait
cs
sub
pushf
jmp
insl
imul
loopne
mov
adc
aad
mov
xchg
push
fidivrl
mov
add
test
repz
popa
repz
aam
mov
push
rolb
jle
or
add
cltd
rclb
repnz
scas
ret
dec
scas
mov
lods
or
mov
cmp
mov
dec
add
cld
sbbl
inc
iret
mov
xchg
push
dec
jl
mov
xchg
and
mov
pop
mov
xchg
push
out
aas
das
les
repz
sbb
inc
xlat
mov
pop
cmpsl
lds
daa
and
sahf
mov
adc
dec
fst
mov
mov
insl
lock
xchg
icebp
ret
and
xchg
xlat
xchg
arpl
hlt
test
dec
mov
ss
xchg
adc
jnp
dec
pop
ja
sbb
mov
call
aad
ds
cs
pop
les
mov
inc
stos
jge
loopne
loopne
xor
data16
push
jb
mov
in
xchg
xorb
adc
mov
mov
fsubl
aad
sub
dec
cmp
scas
iret
lods
cmc
or
cmpsl
mov
daa
xorb
mov
sbb
and
hlt
fcoml
aaa
mov
push
mov
pop
testb
add
mov
cmpsb
mov
inc
cmp
mov
out
pop
push
xor
dec
xchg
pop
out
clc
stos
mov
notl
jns
test
dec
test
xchg
sti
fadd
insb
add
das
lds
mov
sbb
sub
push
push
imul
cli
cmp
xor
mov
xlat
cmp
adc
cwtl
imul
popf
adc
push
push
sarl
cli
jo
mov
incb
xchg
ret
mov
jge
loopne
pop
adc
mov
arpl
and
inc
in
adc
andl
or
addb
mov
adc
lods
imul
fisttpll
mov
insl
pop
push
dec
cmpsl
fstpl
or
jae
sub
sbb
faddl
xor
pop
add
pop
add
sbb
hlt
shl
cmpb
mov
leave
and
push
filds
inc
xchg
cmpsb
push
cmp
fcomi
shrl
xor
cltd
sti
push
push
pop
sbb
fisubrs
cs
int3
push
adc
jmp
mov
mov
cmp
insb
or
lret
and
fisubrl
add
lods
xchg
aad
xchg
mov
cmp
push
pop
mov
in
push
push
test
pop
xchg
hlt
test
outsb
xlat
mov
sbb
es
icebp
ljmp
clc
out
cmpsb
xchg
mov
in
xor
inc
lock
cmp
es
mov
les
sahf
aaa
cmpsb
insb
pop
jno
lret
mov
or
stc
xlat
dec
aas
inc
jge
data16
and
icebp
pushf
push
inc
gs
sbb
jne
xchg
and
stc
pop
xor
fwait
mov
jae
mov
sbb
jmp
or
repz
mov
nop
add
leave
push
fld
test
xor
jp
jmp
xor
push
and
je
pop
mov
addr16
fldl
js
mov
jae
fldcw
adc
call
sub
add
std
xchg
jns
adc
les
jbe
je
aas
cmp
mov
cmp
jl
push
mov
sbb
pop
into
and
sahf
cmpsb
mov
dec
clts
paddb
js
mov
loope
mov
push
xlat
idivb
bnd
cmp
mov
cmpsl
or
cmp
mov
shl
xor
pop
push
fisttpll
lret
outsl
xchg
mov
aam
push
adc
fidivrl
movsb
icebp
mov
adc
cmp
or
or
sar
mov
jb
repnz
jne
scas
js
xchg
ret
and
shll
fsubl
dec
xor
mov
outsb
xchg
movb
movsl
mov
pop
fisubs
xchg
clc
das
mov
xor
add
je
ss
inc
sbb
push
nop
xchg
into
popa
imul
push
sub
cmp
sbb
imul
imul
ja
rcrb
add
cmpsb
push
add
pop
pop
mov
into
pop
cmc
push
mov
mov
out
out
out
push
pop
and
cmp
push
sbb
in
out
inc
mov
hlt
sub
lock
inc
in
ret
xlat
mov
insl
sbb
mov
add
repz
mov
or
aas
mov
add
notl
lret
in
sahf
mov
add
ja
mov
mov
and
xchg
mov
sarb
call
data16
push
out
loope
or
icebp
cmpl
push
gs
cmp
clc
subl
cli
loop
xchg
enter
cmpsb
sahf
jl
or
repz
cmp
cmpsb
and
mov
pop
bsf
mov
xchg
fistpl
aas
add
ljmp
mov
and
sti
xchg
mov
rcrb
jo
mov
fwait
xchg
shrl
popa
call
shlb
ret
pop
pop
mov
in
rcrl
xchg
pusha
shl
ror
adc
repz
pop
xchg
js
out
pop
cld
add
pop
push
movsb
xorl
inc
cmpl
add
hlt
out
sbb
adc
mul
pusha
fincstp
out
test
loop
cmp
mov
in
stos
cwtl
mov
mov
and
add
shlb
jg
jg
out
imul
adc
popa
adc
nop
sub
mov
adc
dec
xor
xorb
insl
repnz
dec
pop
add
jo
ror
mov
js
cwtl
and
pop
jo
sub
in
lahf
lods
add
xor
cmpsl
clc
lret
sbb
data16
dec
mov
cmp
sahf
jle
sbb
into
add
mov
into
jnp
or
jg
xchg
rorl
je
stc
adc
xchg
inc
jb
push
push
or
xchg
ljmp
xor
pop
sub
dec
push
inc
pop
push
push
mov
xchg
dec
cmp
imul
lret
das
aas
inc
and
test
sbb
xlat
xchg
fistl
aad
call
inc
out
mov
shll
lock
xchg
lea
enter
in
sbbb
push
xorl
sub
ss
stos
fs
lahf
inc
cmpl
in
je
cltd
loop
insl
cmp
jp
pop
sbb
iret
sarl
pop
or
dec
cmp
test
insb
in
cld
xchg
or
pop
hlt
xlat
mov
add
jecxz
outsb
dec
arpl
loopne
inc
dec
mov
divb
das
add
push
push
ljmp
jp
sub
fsts
cld
cmpsb
and
and
outsb
push
movsb
add
cmp
into
js
cmp
xchg
mov
add
mov
lea
xchg
xchg
inc
push
in
fcomps
push
xor
pusha
and
inc
or
adc
rcrl
inc
xchg
mov
dec
rcll
adc
pop
repz
or
mov
hlt
mov
pop
into
or
sbb
push
xchg
mov
sub
and
subb
loopne
push
jle
jne
mov
xchg
add
mov
inc
xchg
imul
test
fstpt
das
xchg
or
bound
out
jo
mov
xor
das
inc
xchg
push
daa
fdivs
sar
cmp
fildll
adc
push
cmp
into
ficompl
jmp
enter
mov
sub
sahf
mov
dec
jbe
sub
dec
in
cmp
es
mov
push
sub
fldt
xchg
and
xchg
xorb
or
adc
xchg
jno
mov
cltd
mov
rorl
pusha
cmp
pop
stc
test
pop
push
mov
vmptrld
incb
add
adc
jns
add
loopne
mov
lret
cld
jb
xor
aas
and
ss
add
adc
jecxz
mov
adc
or
add
push
jl
es
call
test
ret
sub
push
and
adc
fisubs
pop
sub
sahf
movsl
and
sbb
hlt
mov
sub
sub
aad
inc
ret
xor
popa
mov
into
lock
pop
inc
xchg
jg
stos
and
add
repnz
lea
dec
out
gs
xlat
mov
leave
mov
or
push
xor
out
mov
push
mov
out
cmp
pushf
filds
lahf
xor
pop
sbb
insb
mov
and
mov
hlt
enter
sub
pop
add
sub
stc
les
sbb
cmp
inc
and
push
arpl
iret
lret
mov
lea
rorb
push
push
lea
test
push
jb
lret
cmp
pop
jnp
pop
and
out
cld
pop
mov
lea
enter
bound
xchg
mov
movd
icebp
jmp
enter
pmaxsw
imul
lret
sahf
leave
lods
jmp
add
sub
jge
mov
mov
out
jns
rclb
fmuls
xor
xchg
jns
or
shrl
ds
sub
inc
fisubrl
dec
je
xchg
fsts
fucomi
push
jecxz
or
jge
mov
lret
ror
add
inc
jne
pusha
push
jmp
mov
mov
lret
arpl
leave
fnstenv
int3
or
out
jge
mov
xor
xor
outsl
repz
pushw
push
inc
cmp
mov
daa
aam
add
outsl
mov
mov
inc
in
sbb
imul
and
fdivrl
jnp
outsl
bound
xlat
push
jae
mov
test
dec
icebp
std
rol
sub
sbb
cmp
xchg
test
outsl
in
lods
out
imul
scas
mov
inc
sbb
ljmp
cmp
add
mov
mov
mov
movsb
dec
or
xor
and
inc
rcll
clc
adc
inc
jge
jo
lret
jae
iret
test
push
repnz
xlat
add
in
mov
scas
testl
mov
dec
and
inc
mov
test
sbb
xor
xor
lret
clc
jecxz
lods
test
lret
mov
mov
sahf
fstl
cmpsb
pop
decb
clc
insb
int3
mov
or
add
dec
test
xor
xchg
mov
jg
fadds
ss
sbbl
in
aad
ret
xchg
scas
cmp
adc
leave
sub
mov
cmp
in
movsb
and
push
or
mul
aad
shl
ret
mov
aam
fildl
mov
mov
lods
dec
xchg
pop
mov
mov
inc
xor
fisttpl
in
add
cmp
aam
shll
mov
add
jbe
in
leave
fisubl
test
push
xchg
xchg
je
imul
pop
and
insb
dec
shll
jg
pop
inc
cwtl
dec
or
cli
ret
adc
inc
sbb
and
xor
rep
je
les
cwtl
into
imul
inc
int3
insl
clc
mov
insb
mov
stos
push
insl
ds
add
pop
ror
dec
xor
test
jno
mov
in
aaa
and
mov
js
jge
mov
cmp
push
shll
shrb
fbld
mov
pusha
mov
sar
xchg
stos
sbb
lcall
loope
pop
xor
fmul
std
dec
cmp
dec
int
js
popl
test
push
test
test
dec
inc
ret
popa
sbb
std
aad
inc
lret
push
push
xorb
js
xchg
push
sub
mov
pop
push
into
lahf
adc
mov
ror
dec
mov
push
xorl
fstpl
adc
rolb
cmp
aaa
adc
ljmp
and
push
xor
fs
shll
sbb
lahf
sub
test
test
not
mov
mov
pop
jb
aas
or
xchg
mov
jg
xor
popa
pop
cli
cmc
pop
dec
xor
popf
enter
fwait
cld
adc
stos
inc
xchg
xchg
negl
mov
repnz
xor
adc
shll
inc
out
mov
push
add
stos
lock
imul
xchg
xchg
sbb
adc
jae
rclb
adc
adc
and
addl
dec
xchg
movzwl
lahf
loopne
stos
mulb
out
in
cmp
sbb
shll
cltd
leave
movsb
push
es
ss
jmp
xor
fs
xchg
hlt
ss
push
dec
adc
popf
xchg
iret
popf
dec
pusha
rolb
out
dec
jmp
mov
out
sub
and
jecxz
popf
jne
dec
clc
std
pop
shrb
sti
xor
adc
sbbl
push
mov
leave
pop
stc
pop
in
rorl
lods
mov
mov
lcall
add
jecxz
add
and
xchg
movsl
enter
cmp
ficoml
sub
aaa
sub
mov
add
lods
inc
dec
das
sbb
jno
leave
or
into
loope
cmp
or
pop
aas
dec
inc
popa
jp
and
jb
in
sub
dec
aad
rclb
xchg
jl
adc
cmpsl
out
xchg
insb
dec
pop
push
mov
mov
pop
xlat
push
shl
jle
lcall
mov
fwait
adc
pusha
lea
aad
pop
fistpll
push
arpl
adcl
or
inc
xor
subb
or
sahf
gs
ds
pop
pop
cmpsb
adc
xor
movsl
mov
mov
rorb
pop
int
adc
stc
inc
inc
leave
orl
sbb
and
adc
sbb
iret
xor
ljmp
cmpsl
jmp
repnz
lock
mov
pusha
mov
fstps
jmp
lds
idivl
fadds
daa
ja
in
and
test
mov
push
insb
mov
cld
mov
scas
ret
sti
lahf
mov
pop
jb
xor
push
adc
lret
mov
mov
shrb
xor
push
dec
push
xchg
aas
dec
and
or
cs
or
int
adc
in
pop
dec
bound
pop
push
push
hlt
loopne
sbb
cli
fisttpll
cmp
out
int
cmp
xchg
dec
or
jae
adc
fdivrs
xchg
ss
xchg
jecxz
fimuls
inc
mov
push
lret
out
cmpsl
add
inc
shl
sbb
add
xorl
cmp
xchg
loope
xor
cmc
push
jne
sahf
mov
lcall
icebp
push
and
lahf
roll
xchg
loop
stc
pop
imul
dec
and
dec
inc
rorl
cmpsb
pop
xor
xchg
xchg
lods
cmp
dec
dec
repz
nop
xchg
call
ds
inc
pop
out
mov
xlat
outsl
lds
test
push
add
inc
fsubrp
add
mov
dec
dec
jg
mul
xchg
outsb
xchg
pushf
icebp
inc
inc
ja
popf
push
shlb
inc
sbb
adc
das
sbb
call
loope
pop
std
out
push
nop
lods
clc
jg
mov
inc
cs
jb
test
xchg
mov
mov
mov
cmp
repnz
stc
fwait
mov
xor
push
cmp
aaa
sbb
cmpsb
test
push
out
cs
adc
jmp
add
xor
jle
push
mov
or
cld
decl
fwait
and
into
dec
addr16
fs
push
lock
cmpsl
icebp
sub
push
repz
das
stc
xchg
sub
jg
sbb
cmp
int3
xchg
push
sqrtps
jle
rcrb
std
xor
dec
xor
push
fwait
push
int
test
sub
pushf
pop
cld
jp
out
sbb
push
loopne
bound
and
in
loopne
fstps
out
rorl
jp
insl
jge
arpl
xchg
push
inc
add
xor
xchg
push
mov
and
adc
scas
or
dec
loope
shll
dec
add
mov
xchg
inc
outsb
xor
cs
sahf
dec
mov
xor
sahf
into
lret
cmp
imul
data16
cmp
rolb
int3
xlat
and
stos
enter
xchg
lds
loopne
pop
sbb
notb
xchg
dec
push
das
mov
add
les
bound
mov
std
stos
sub
das
jae
sub
cmp
mov
push
jl
cmp
les
arpl
outsl
mov
sub
mov
xlat
fwait
and
sub
and
les
andb
or
push
xchg
jae
popf
jns
das
leave
scas
data16
and
adc
scas
xor
cs
int
enter
mov
cs
xor
das
or
cmp
mov
insl
orl
jo
or
jne
add
jg
iret
pop
sub
aaa
addr16
push
and
mov
aaa
xor
repz
jge
out
pop
or
xchg
xchg
inc
gs
data16
loop
cmp
inc
fadds
stos
push
in
outsl
mov
or
pop
ret
push
xchg
jno
cmpsb
ja
jno
push
fcompl
or
pop
xor
mov
xchg
push
out
xor
ds
loopne
sbb
cmpsb
arpl
sarb
es
jb
mov
adc
fmulp
mov
sbb
dec
fcmovb
xchg
xchg
lahf
in
cmpsl
stos
jle
cs
or
and
push
pop
xchg
push
aaa
mov
mov
adc
aaa
gs
das
js
jg
stos
mov
jg
stos
lods
mov
jae
aaa
mov
test
xor
cld
negb
inc
dec
dec
mov
aad
stos
clc
mov
pop
shll
xor
jecxz
push
jmp
jge
lcall
out
adc
mov
dec
leave
push
das
xchg
andb
mov
repz
or
add
imul
in
fidivs
jl
or
icebp
sub
adc
daa
adc
mov
cs
mov
xchg
mov
mov
aaa
out
push
xor
push
or
stos
cltd
fs
dec
pop
dec
adc
call
in
mov
or
call
xor
loopne
out
and
or
dec
and
out
push
dec
xor
ds
popa
xchg
cmpsl
adc
pusha
jmp
aam
xor
fucomip
mov
roll
scas
inc
inc
inc
jb
push
outsb
jl
pop
add
dec
mov
loope
aaa
fmulp
xchg
popf
push
arpl
stos
jne
mov
mov
jg
and
insl
fstl
in
cmpb
mov
add
ficompl
sbb
scas
xor
or
out
and
and
insl
ror
mov
mov
ds
adc
push
push
js
xchg
mov
ret
mov
ja
test
shlw
dec
cmp
add
insb
add
test
xchg
inc
mov
sbb
cmp
hlt
mov
inc
movb
sub
fucom
jp
xchg
in
cmpb
xchg
mov
adc
dec
loopne
nop
or
jmp
mov
push
or
cmp
shlb
lock
xchg
xchg
xchg
stos
mov
lock
jle
xor
jae
lret
jne
std
icebp
popf
icebp
cwtl
cmp
lods
scas
pushf
popl
xchg
test
sti
jns
inc
jmp
out
stos
cmp
in
fldl
sbb
clc
push
cli
cmp
pop
and
sbb
test
push
push
fwait
loop
imul
or
in
jp
loop
mov
inc
cld
push
pop
dec
insl
pop
cmp
in
std
pushf
aas
dec
lock
and
inc
dec
mov
jle
mov
lret
clc
shrl
rcl
icebp
adc
adc
into
insl
insl
inc
stos
data16
mov
cmp
inc
push
sub
leave
jbe
mov
push
std
loope
lret
mov
push
xchg
adc
inc
ss
leave
dec
ja
icebp
out
push
mov
fs
pop
lods
movsl
leave
mov
xor
dec
mov
dec
int3
les
in
add
rcl
mov
ficompl
xor
mov
xchg
pop
mov
cmpsb
dec
in
xchg
cmp
cwtl
ljmp
mov
lcall
fisttps
lods
inc
mull
orl
das
movsl
inc
push
mov
pop
add
jnp
inc
jge
call
add
lcall
popa
pop
xchg
pushf
leave
test
ja
decl
pusha
or
push
in
sub
add
insl
mov
adc
movsl
lcall
jl
mov
and
mov
daa
adcl
sub
xchg
pop
rolb
ret
adc
cmpsb
popa
add
in
xchg
fwait
popa
orb
xchg
pop
adc
mov
push
xor
aad
bound
cmp
or
outsb
mov
and
popa
daa
out
xchg
ds
mov
and
cmp
xor
out
or
jg
jns
adc
pop
mov
inc
mov
xor
mull
fildll
lret
stos
movsl
or
cwtl
pop
mov
data16
and
sub
lahf
adc
std
fisubs
sub
mov
testl
psrld
shrl
faddl
xchg
mov
dec
sbb
or
iret
roll
add
mov
cmp
adc
loop
pop
repz
sub
in
mov
or
jg
cmc
fistl
jno
xchg
mov
or
sbb
addr16
push
daa
adc
popa
rol
inc
mov
xchg
mov
fcmovb
ds
xchg
pop
mov
mov
lea
fildl
ljmp
popf
out
mov
sub
pop
jg
cmpl
mov
ds
push
ljmp
lds
in
pushf
sbb
into
andb
inc
push
sahf
cwtl
dec
sub
xor
shrl
out
xchg
fisubl
imul
cmpsl
push
push
lock
mov
cmp
pusha
pop
adc
stc
clc
int3
xlat
pop
sub
mov
imul
ror
push
test
add
leave
nop
outsb
sahf
or
sbb
xor
and
mov
inc
test
outsl
imulb
filds
pop
addr16
mov
jo
je
inc
imul
mov
pop
xchg
sub
mov
lret
stc
mov
cld
inc
pop
and
cs
sub
aas
dec
cmpsl
sbb
jb
mov
lcall
lahf
shrb
and
lret
pop
inc
lret
jnp
in
push
cmp
daa
sbb
cmp
jns
xchg
inc
or
push
pop
daa
fwait
aam
mul
push
outsl
pop
push
inc
inc
cmpsl
js
call
dec
pop
sub
jle
pop
jge
lret
or
and
xlat
loopne
push
sbb
or
push
out
add
addr16
xchg
movsb
mov
mov
or
pop
scas
fld
or
or
adc
xor
out
imul
imul
xchg
imul
rorl
sub
mov
fwait
int3
push
movsl
decl
in
inc
jg
das
das
testl
xor
or
js
cmp
sahf
cmp
in
arpl
sbb
add
arpl
pop
jnp
movsl
jmp
add
sbb
das
cmc
rclb
into
cltd
aam
add
lea
sbbl
jecxz
stos
stos
in
pop
imul
adc
sub
xor
lret
add
push
scas
repz
scas
in
insb
popa
pop
pop
out
inc
in
cli
mov
mov
push
repnz
fdiv
or
fstpt
adc
mov
arpl
mul
stc
test
mov
cmp
push
mov
ret
xor
shrb
cmpsl
cmpsb
stos
mov
loop
jo
dec
aam
js
add
adc
add
and
push
call
mov
add
or
jae
imul
xlat
imul
outsb
adc
out
mov
jb
aad
cwtl
mov
xor
cmp
xor
mov
mov
push
adc
pop
mov
arpl
les
stos
xchg
in
adc
dec
jo
fiaddl
push
inc
xchg
gs
loop
cmovno
xchg
cmpsb
adcl
mov
pop
pop
loope
in
ljmp
in
or
push
jecxz
cmp
test
xor
xchg
lahf
or
xchg
cld
aas
push
jae
bnd
mov
sbb
pop
in
fisubs
andl
push
adc
aad
mov
aaa
dec
ret
cmpsb
lock
test
iret
or
ljmp
dec
sbb
outsl
pop
mov
fnstcw
mov
in
xor
ret
in
scas
mov
test
scas
es
loop
pusha
xchg
xlat
mov
jne
leave
out
mov
xchg
cmp
loop
dec
xchg
jp
mov
inc
mov
int3
sbb
rol
sti
xchg
add
call
lret
inc
xchg
insb
mov
and
paddw
push
inc
loopne
dec
ljmp
jns
cmp
outsb
into
ret
xor
mov
insl
je
pop
push
jle
mov
inc
and
int3
or
and
mov
movsb
push
and
sbb
mov
xor
lods
lahf
inc
rcll
add
lods
cmpsb
lds
cs
sbb
pop
std
cmp
and
xlat
in
cmp
mov
jg
push
push
lret
pop
push
mov
movl
and
adc
idivl
out
jle
inc
and
or
xor
jp
mov
data16
dec
ss
or
stc
mov
fisttps
inc
int3
sbb
jp
lret
mov
mov
dec
int3
cld
out
add
xchg
add
gs
dec
inc
mov
aam
mov
or
nop
mov
rcr
pop
mov
scas
or
jb
xor
pop
push
mov
stc
mov
scas
mov
sub
lahf
sub
test
jmp
sub
in
mov
pop
xor
xchg
xor
in
cmp
int
sbb
dec
stos
pop
dec
cmp
mov
js
mov
jbe
xor
mov
mov
adc
jae
popa
mov
sub
xor
add
lret
jecxz
pushf
imul
xor
xorb
or
and
adc
in
mov
jne
mov
int
fmul
dec
scas
fstps
mov
ds
mov
repnz
cmp
dec
enter
jmp
pop
sahf
insl
into
cs
mov
adc
or
xor
imull
rol
flds
pop
or
jbe
cli
pop
lods
jnp
dec
imul
fimull
ds
add
das
aam
lods
sbb
dec
pop
stc
and
or
scas
imul
mov
in
dec
and
inc
jecxz
mov
push
pop
in
nop
push
adc
movsl
into
dec
xor
pop
addr16
xchg
pop
cmp
and
xchg
jne
or
jmp
arpl
or
cmp
icebp
cwtl
popa
int
repnz
inc
inc
hlt
add
adc
movsb
add
rcll
rol
mov
inc
sahf
lock
loop
aas
xor
decl
insl
repz
stos
push
mov
mov
pop
data16
xchg
dec
cwtl
xchg
xor
fsubrl
andb
sahf
adc
adc
dec
rorb
loopne
adc
xchg
mov
je
mov
xchg
sti
adc
subl
push
hlt
leave
lcall
rorl
xchg
test
push
call
roll
inc
jae
scas
lret
pop
shrb
or
repz
les
leave
test
and
popaw
add
out
daa
adc
out
mov
mov
push
jo
push
and
cmp
push
test
mov
invd
push
inc
rcrl
push
inc
push
mov
rcr
add
das
pop
and
aaa
out
outsb
imul
rcr
adc
mov
lret
dec
pushf
push
mov
cmp
or
jb
adc
xchg
fcompl
das
add
mov
lods
xchg
data16
out
stc
fimull
lock
out
jo
in
aaa
mov
and
mov
cli
and
pop
inc
xor
loop
outsb
mov
mov
sti
bound
mov
or
sbb
add
aas
add
push
pop
jecxz
in
jnp
and
fsubl
jae
push
gs
sub
push
int
dec
les
sub
jp
out
or
lea
pop
mov
pushf
mov
mov
addr16
mov
dec
out
jle
js
std
aad
arpl
xor
ds
and
ss
sbb
jg
insl
dec
insl
add
iret
jne
mov
pop
mov
lock
out
mov
push
subb
fldt
xchg
pop
xchg
xor
push
flds
mov
cmp
hlt
scas
cmpsl
je
ret
inc
nop
fwait
scas
xchg
sahf
ljmp
shrb
and
sbb
cld
cmp
lret
pop
sbb
iret
fwait
imul
out
ret
ja
cmp
cmp
aad
ds
fdiv
gs
sbb
jg
mov
mov
adc
mov
cmp
dec
std
inc
jg
mov
xor
pop
or
and
sti
mov
hlt
lock
imul
stc
or
push
mov
fwait
jno
add
jg
xor
cmp
pop
inc
pop
icebp
mov
cmp
lret
mov
xchg
xchg
xchg
dec
or
jne
testb
test
test
js
inc
rorl
pop
adc
cmp
inc
sub
cmp
outsl
cltd
add
jo
mov
push
pusha
dec
mov
pusha
xchg
ss
mov
xlat
mov
out
in
push
ja
xchg
aad
cmpsl
out
lods
mov
mov
mov
adcl
iret
jp
xlat
or
mov
jae
aad
dec
movsl
mov
gs
cmp
jecxz
dec
imul
sbbl
andb
testl
shl
and
inc
mov
out
scas
cmc
imul
test
and
insl
sub
jnp
pop
cs
cmp
mov
in
nop
or
inc
sbb
and
enter
fld
push
movsl
push
sbb
popf
jno
orb
scas
aad
daa
jb
lret
and
repz
xchg
inc
cs
notl
fcomps
adc
imul
js
not
aad
jmp
insb
clc
daa
mov
pop
clc
mov
inc
mov
lock
dec
xchg
cltd
gs
xor
into
shll
flds
xchg
jo
mov
push
mov
cs
mov
mov
fwait
cli
shlb
int
lret
inc
test
add
adc
dec
je
xchg
pop
insb
cli
leave
adc
rcrl
and
pop
add
or
lods
lock
dec
cmp
cmp
lret
push
jnp
scas
addr16
je,pn
inc
ss
mov
shll
stc
pop
xchg
std
movsb
ret
push
jb
cli
loope
cmp
mov
lock
dec
mov
lock
fcomps
mov
pop
pop
lahf
mov
lea
xor
mov
frstor
in
mov
test
lds
jbe
cmc
je
jge
rcr
dec
push
ja
js
daa
data16
fcmovu
out
xor
stos
nop
out
pop
xor
mov
pop
cmp
out
mov
xor
push
enter
das
insl
lock
popl
out
adc
js
arpl
mov
add
inc
jl
fld
ss
jns
lea
adc
jb
mov
mov
mov
mov
lods
pusha
lds
mov
imul
stc
xchg
mov
dec
stc
outsb
hlt
fnsave
push
movsl
push
cmpl
xor
adc
clc
dec
push
or
leave
sbb
add
fildl
mov
xchg
mov
and
xor
addr16
insb
daa
outsb
jg
test
pop
jae
repnz
push
push
outsl
push
jbe
sub
test
movsb
leave
jl
mov
leave
add
pop
fsubl
movsb
test
xorl
je
call
fdivp
push
inc
mov
sahf
push
sbb
add
js
sub
outsl
pop
adc
call
push
cwtl
or
iret
sahf
pop
or
in
add
lea
jg
int3
clc
loopne
inc
nop
adc
push
clc
sub
push
pop
fldcw
jbe
aaa
sbb
xchg
rclb
paddsw
cmpsb
xor
xlat
div
jo
lea
adc
ret
mov
push
es
enter
int3
fcomps
sar
lea
in
pusha
adc
cmpsb
sbb
mov
bound
mov
adc
push
aad
sbb
mov
cmpsl
pop
clc
lods
les
push
sub
cmc
pop
cmp
inc
test
mov
dec
cwtl
mov
mov
repnz
pop
mov
lock
ljmp
pop
jne
pop
cwtl
dec
cmc
aas
icebp
push
jmp
into
mov
gs
sbb
imul
dec
push
push
fdivrs
testl
and
cmpsb
add
ljmp
lahf
xchg
fsts
and
mov
fidivs
inc
fsubrl
sahf
xchg
sbb
dec
in
stos
andb
les
stos
inc
aam
jecxz
sub
mov
iretw
icebp
mov
aam
cld
cmp
lods
cmc
adc
lock
fs
pop
sub
mov
mov
adc
mov
pushf
push
bnd
in
dec
add
imul
lret
icebp
adc
add
xor
int3
jb
sar
imul
cmc
and
js
ss
mov
pop
repz
xchg
filds
hlt
xor
add
cltd
aas
pop
adc
xor
fcompl
enter
into
sub
ds
add
daa
sarb
dec
jge
jns
sub
adc
cli
dec
xor
data16
xor
sti
mov
fistl
lea
imul
aam
ror
roll
popf
add
js
negb
out
repnz
je
cmp
jno
mov
mov
sub
mov
cmc
adc
mov
or
or
rorb
into
enter
ret
repnz
xchg
lahf
scas
push
xchg
jle
pop
rol
orl
fsubrs
add
jb,pt
or
cmc
mov
mov
mov
aas
clc
outsl
pop
pop
mov
orl
sub
ja
mov
cmp
in
sub
scas
mov
dec
sub
repz
pop
std
xchg
jb
xchg
pop
imul
and
cmpb
cmc
lcall
push
loopne
inc
push
mov
mov
sub
scas
cwtl
rcll
xorl
roll
lods
sahf
arpl
jne
mov
pop
xor
xor
sub
imulb
mov
xor
sub
roll
cmc
out
add
push
pusha
mov
push
fisubs
mov
xor
leave
xlat
jbe
xchg
or
lock
jns
test
loop
xchg
ficompl
ja
shll
mov
sub
loope
out
and
jmp
mov
push
lock
xchg
daa
pop
ss
pop
xchg
xor
mov
push
cld
cli
jmp
xor
xor
out
enter
pop
cmp
repnz
and
mov
orb
mov
fadd
or
push
int3
scas
dec
sahf
mov
hlt
enter
loopne
pop
insb
pop
testl
shrl
aad
inc
sub
and
imul
dec
emms
add
out
mov
inc
push
xchg
adc
rol
dec
imul
jp
lds
mov
gs
cmp
adc
inc
mov
sbb
clc
ret
shl
mov
addl
mov
fadds
movsl
bound
sub
inc
movsb
push
sub
pop
arpl
mov
rcll
vpermps
or
fmull
mov
fsubl
pop
loopne
jg
cwtl
lret
scas
xlat
int3
push
shrb
mov
enter
pop
idivl
mov
test
mov
mov
dec
stos
push
xchg
in
cmp
adc
xchg
loop
mov
fwait
mov
push
or
sbb
jbe
rcrl
sbb
sbb
cmp
fldt
pusha
mov
mov
sahf
dec
adc
cmp
cmp
or
or
sbb
mov
cmp
fsubs
pusha
pop
xchg
stos
sub
jbe
test
or
push
cmp
jne
push
insb
mov
pop
push
push
clc
sbb
pop
mov
rcrl
nop
ret
call
ljmp
sub
sub
lock
ret
push
add
xchg
xchg
data16
mov
adc
sbb
fsubl
inc
sub
ss
pop
es
xchg
std
push
call
mov
cmpsl
cli
cmp
mov
add
mov
ss
movsl
gs
das
hlt
jo
lcall
mov
stos
cmp
jmp
cwtl
icebp
fistpll
add
mov
dec
ret
jne
insb
adc
stos
hlt
shrl
adc
dec
rcrb
pop
test
andb
roll
psubq
bound
jbe
sub
sti
movsb
test
push
adc
gs
test
cltd
addr16
sahf
xchg
dec
int3
pop
or
gs
clc
in
cmp
dec
push
push
les
sub
mov
xchg
repnz
pop
add
or
jno
mov
xchg
push
pop
fdivrl
jns
ljmp
mov
mov
or
sub
pusha
and
mov
popf
or
cwtl
mov
cwtl
sub
mov
jns
push
mov
daa
add
jae
mov
adc
mov
jae
dec
out
cltd
pop
test
sbb
iret
push
xor
gs
movsb
ret
pop
jl
xlat
inc
mov
je
std
mov
int3
sar
adc
jae
mov
jle
xor
or
adc
sub
repz
jae
mov
inc
pop
out
mov
mov
or
adc
xchg
sahf
push
mov
jb
inc
inc
loopne
sbb
adc
in
les
arpl
push
dec
aad
sti
pop
sbb
ss
test
mov
push
into
xchg
in
fisttps
sub
jmp
loope
pushf
dec
adc
lea
jne
loop
sub
dec
mov
mov
lahf
fwait
adcb
test
mov
dec
nop
pop
ror
cmpsl
dec
mov
lds
pop
adc
faddl
repz
xor
push
or
insl
xchg
push
arpl
rorl
add
iret
test
push
inc
xor
in
xor
shlb
pop
pop
ret
ret
push
xchg
xor
cmc
cs
jmp
jno
push
loopne
aam
sub
cmc
loop
jge
mov
dec
pop
lds
fcmovu
lret
ret
rorl
aas
aad
jg
fsubrl
add
push
dec
loop
bswap
jb
push
ds
shll
or
sub
inc
adc
cmp
fcom
xchg
rorl
push
out
jnp
xchg
cmp
and
clc
mov
lret
mov
iret
test
push
dec
sub
adc
in
pushl
out
jbe
push
push
push
outsl
fwait
xor
jecxz
call
hlt
repnz
hlt
cltd
pop
lock
aam
imul
xor
fwait
mov
add
lret
add
das
sub
add
xchg
movsl
jns
test
push
mov
fwait
fs
loope
in
jnp
dec
mov
push
or
mov
mov
cmp
cmp
iret
adc
sbbl
pop
loope
cmp
sbbl
pop
ret
std
fstps
push
cmc
shlb
enter
jno
pop
mov
cmc
cmp
addr16
pushfw
test
sbb
pop
daa
jg
ret
movsl
pop
imul
mov
xchg
inc
dec
clc
mov
into
mov
adc
cmpsb
mov
mov
fsubl
pop
mov
sahf
ljmp
cmpsl
inc
inc
xchg
push
sub
cmpsb
adc
inc
scas
dec
adc
mov
mov
rolb
not
sbb
or
add
and
push
sbb
gs
mov
jne
pop
pop
nop
jle
mov
cwtl
push
das
pop
fcomi
fsubrl
sbbb
cmp
aaa
test
mov
jnp
push
int3
push
inc
pop
add
das
loopne
inc
pusha
jo
imul
adc
in
es
mov
mov
in
das
leave
das
gs
scas
and
test
sub
xor
inc
xlat
gs
out
cli
mov
and
flds
or
adc
popa
lea
aam
mov
aaa
mov
xchg
in
inc
mov
mov
and
es
popf
jnp
adc
mov
push
mov
or
fisttps
mov
cmc
clc
sub
popa
mov
push
mov
test
pop
lahf
rcr
negl
mov
pop
dec
adc
xor
inc
addr16
clc
cmpsl
int3
insl
push
loopne
mov
and
ficoms
cmp
inc
stos
pop
cmp
or
fdivl
mov
dec
fldenv
jne
lret
jnp
movsb
cmp
loope
sub
notl
out
jle
sahf
jbe
jp
jge
fdivrp
call
push
call
bound
mov
xor
out
imul
repnz
popa
movb
dec
sbb
pop
cwtl
mov
mov
or
movsl
xchg
test
cmp
sarl
mov
adc
mov
xchg
mov
mov
out
mov
std
mov
push
push
dec
mov
mov
aad
cmp
jge
lret
in
push
ss
add
cmp
xchg
push
jno
ljmp
movsl
pop
adc
or
jg
dec
add
xchg
sahf
mov
dec
inc
into
inc
dec
loope
cmp
pop
in
fistl
pop
mov
call
xor
push
int3
mov
repz
fdivrs
fiadds
iret
hlt
shrb
mov
popa
divb
les
sbb
dec
mov
mov
and
sub
aas
xchg
sbb
sbb
les
cltd
jg
stos
aas
shrl
jo
dec
iret
mov
adc
xchg
sub
insl
mov
inc
stos
ss
data16
adc
sbb
jecxz
loope
lret
sub
movsl
or
call
fidivs
dec
cmc
ss
mov
adc
mov
mov
nop
int
aad
sub
mov
ds
push
dec
packuswb
sbb
pop
call
jns
push
jb
xchg
jp
adc
dec
dec
sub
lods
repnz
jbe
sub
std
jge
and
sub
imul
cmpxchg
orb
mov
or
push
and
dec
ljmp
xlat
pop
pop
stos
jl
mov
mov
push
test
pop
mov
push
add
mov
lock
or
fs
hlt
jl
inc
add
mov
push
xchg
jb
call
mov
sbb
inc
loop
rcrb
mov
mov
sub
test
or
cmp
rcrl
lret
sbb
lret
out
lret
in
mov
rcr
sbb
jnp
test
pop
xchg
xor
pop
push
mov
adc
aam
inc
ficompl
stos
int
push
mov
pusha
jo
jge
adcb
divl
dec
jae
imul
xor
popa
mov
xchg
pop
cmpsl
or
repz
aad
je
sar
adc
aad
fsubrl
mov
xchg
cmc
xor
or
push
pop
mov
into
fs
lods
jecxz
dec
mov
push
mov
pop
aas
loop
mov
push
pop
dec
nop
lods
adc
cmpsl
or
or
pop
and
inc
lock
int3
imul
xchg
inc
or
das
mov
xchg
fists
daa
mov
fsubp
xor
cmp
in
in
or
aad
in
in
xchg
call
filds
or
idivb
ret
mov
shr
gs
insb
or
lret
jge
mov
adc
dec
add
xor
pmulhuw
fcomp
lock
jae
cmp
cmpsb
fldt
xchg
add
jge
pop
roll
aaa
fnstcw
pop
jle
adc
mov
shlb
ljmp
cmp
mov
ljmp
jmp
xor
out
pushf
dec
xor
pop
xchg
inc
leave
adc
imul
leave
xchg
push
out
js
xchg
cmc
aaa
and
in
sbb
aas
fsubrl
push
ja
xchg
sub
outsb
jle
xlat
xor
dec
bound
neg
cmp
dec
out
jmp
ss
clc
and
shll
int
mov
push
hlt
sarl
adc
mov
lea
xchg
daa
stos
jnp
pop
fstpt
pop
add
cmpsl
mov
mov
cmpsl
int3
push
lds
dec
inc
lahf
sbb
adc
push
call
sti
lcall
aad
pop
imul
sub
lods
mov
aam
cmp
or
jl
rorb
out
shrl
push
push
leave
shr
mov
sbb
mov
push
and
dec
cld
aas
test
fidivs
dec
aam
jne
pop
lock
sub
imul
lret
fbstp
sahf
xor
daa
mov
or
inc
fsubrs
daa
dec
sbb
inc
lods
add
jp
mov
xor
loope
sub
pop
repnz
test
and
lds
sbb
sahf
sbb
pop
mov
push
rol
cmp
and
or
insb
insb
sbb
dec
jb
add
aam
adc
in
push
sub
or
mov
loope
or
mov
add
rcll
pop
xchg
xchg
lods
in
xchg
sbb
test
out
cmpsl
fdiv
in
add
lcall
add
xchg
and
cltd
mov
xor
mov
dec
mov
adc
scas
jmp
lahf
push
cs
sarb
pusha
cmp
stos
push
cmc
flds
xlat
xchg
notl
or
neg
cs
jg
sbb
test
push
jg
dec
mov
iret
jl
xchg
or
push
mov
xor
mov
movsb
push
loope
push
jecxz
sbb
sub
pop
cmpsl
jo
cmp
jl
dec
gs
pop
loope
push
add
sbb
ljmp
add
dec
cmp
inc
sub
aad
lds
rorb
insl
sub
push
cmpsl
sbbl
mov
stc
enter
int
jge
pusha
mov
fidivs
outsb
mov
into
popf
add
lahf
mov
mov
dec
out
test
imul
stos
and
les
pop
sub
test
xchg
pop
and
sub
aad
popl
cs
pop
setnp
daa
stc
repnz
fucomi
stc
sbb
jns
call
loope
insb
das
arpl
cltd
mov
xchg
orl
jae
test
cmp
adc
fs
mov
and
mov
arpl
mov
xchg
add
lods
std
add
sbb
fdivp
jae
arpl
lock
jns
cwtl
fwait
aam
mov
vandnpd
mulb
fmuls
lcall
out
xor
add
lods
out
fwait
push
push
out
sbb
aad
push
test
shrl
or
rorl
lds
loope
insl
js
rcrl
cmp
mov
mov
inc
popa
mov
push
femms
out
aam
iret
les
notl
lahf
int
insl
cmpsb
fbstp
daa
out
es
int3
xchg
pop
ret
mov
jo
imul
push
mov
cwtl
push
sbb
and
adc
dec
sbb
push
lds
scas
push
stc
mov
mov
jno
pop
mov
sbb
jmp
inc
jnp
ret
cmp
mov
sub
outsb
dec
add
push
stos
cmp
idivb
aam
jno
jne
shrl
push
and
in
subl
stos
aam
lods
dec
dec
inc
push
dec
das
std
test
jns
insb
sub
sti
mov
jp
repnz
int3
xchg
xchg
into
daa
fsubr
setns
mov
andl
xor
addr16
popf
inc
lods
shrl
jne
pop
mov
and
aam
pushf
hlt
dec
pop
sbb
in
adc
and
aad
nop
fwait
dec
mov
push
sub
cmp
adc
fmul
sub
adc
mov
adc
into
les
dec
stos
int3
push
dec
stc
jno
pop
cmp
cmp
mov
dec
roll
xor
sahf
sbb
popa
ds
xchg
dec
or
sbb
jl
lods
in
xor
fsubl
xor
mov
or
out
mov
or
cltd
scas
jns
shrd
sub
adc
pusha
xor
jle
xor
pop
call
dec
insb
fcompl
mov
push
dec
sbb
or
jp
mov
arpl
int3
xchg
inc
cmp
jno
sub
jp
push
jg
push
xchg
aam
sar
es
xchg
mov
jno
and
mov
jp
jns
call
cmp
jg
mov
lods
test
inc
test
sbb
popf
testl
ds
fdivr
xor
sbb
call
push
adc
cmp
xor
xchg
shr
int3
push
or
icebp
pop
rolb
lock
mov
shll
mov
and
lods
loope
dec
mov
daa
stc
arpl
stos
and
out
adc
sub
aas
dec
sub
ret
loopne
loope
loopne
and
cli
cld
or
or
mov
push
dec
out
mov
cmc
xchg
mov
jnp
and
adcb
sbbb
pop
jne
and
or
push
les
dec
mov
jo
sub
ljmp
aad
xchg
ds
out
imulb
lock
push
pop
dec
jnp
jg
push
lds
loop
sbb
aad
aas
aad
push
xchg
inc
push
and
pop
fadds
fstl
cmp
rorl
mov
dec
icebp
adc
shr
jle
xorl
and
call
cld
lahf
loop
inc
mov
mov
movsl
in
push
inc
mov
aad
loope
jae
sub
call
and
lea
pop
sbb
mov
or
jmp
outsl
mov
add
sbb
push
ss
and
ret
sub
mov
repnz
incb
sbbb
ds
scas
mov
pop
pop
ss
add
and
es
stc
inc
dec
xchg
jno
fbstp
cmp
add
inc
cld
dec
dec
imul
movsb
mov
mov
cwtl
push
ret
cltd
icebp
pusha
push
push
jp
xorl
fsubr
push
cmp
sbb
adc
out
pop
jg
add
out
and
jge
jp
lret
cld
stos
and
pop
mov
stos
push
fidivrl
lret
push
call
daa
add
push
ss
js
lcall
sbb
ret
clc
add
aaa
adc
sbb
cmp
lret
inc
adc
inc
jnp
out
mov
cmpb
pop
push
mov
mov
test
outsl
andl
test
mov
push
mov
jno
dec
insb
lahf
repz
mov
mov
je
lahf
inc
jne
cmpsl
adc
repnz
xor
cmp
xchg
lahf
clc
iret
cwtl
stos
jge
lahf
fisttpll
shll
adc
or
mov
aaa
ja
or
loope
aad
mov
or
mov
mov
or
movsb
fnsave
push
roll
cmp
pop
cmp
rolb
insl
cmp
sbb
mov
cmp
xor
test
and
cwtl
neg
icebp
jl
jns
and
ljmp
mov
mov
rcrl
dec
mov
dec
in
outsb
andb
adc
mov
xor
push
arpl
and
dec
test
cli
in
jecxz
push
sahf
inc
jo
fisubrl
push
push
mov
sub
xor
mov
push
test
cs
stc
lea
idiv
push
mov
add
and
mov
scas
mov
xor
adc
push
cmc
movsl
dec
inc
pop
aas
stc
loopne
push
test
mov
pop
xor
shrl
jnp
jne
add
in
push
xchg
pop
mov
mov
mov
ljmp
mov
jl
movsb
hlt
std
mov
addb
lea
testl
fidivl
and
sub
add
test
fs
mov
movsl
bound
mov
sub
add
or
aam
pushf
cmpl
cmpsl
pop
mov
inc
int3
aam
inc
pop
iret
sbb
cs
mov
or
adc
repz
push
mov
dec
inc
dec
sbb
fidivrs
inc
sbb
or
lret
add
mov
pop
dec
scas
outsl
lcall
lret
xchg
or
pop
inc
mov
stos
lods
fcom
fcoms
inc
mov
add
push
lods
xchg
lods
dec
pop
adc
cmc
xchg
testb
and
sub
mov
jg
add
imul
cs
mov
xlat
xor
lods
inc
psubd
push
push
mov
xor
jne
xchg
push
cmpsl
int
fwait
cmp
jl
or
and
xor
loope
outsb
push
cwtl
mov
jge
inc
ja
testb
cwtl
pop
inc
stos
shlb
cwtl
pop
std
lea
rorl
dec
lods
andps
outsl
je
push
repz
hlt
xchg
inc
ja
shrb
pop
lods
popf
push
in
push
test
xchg
imul
sub
push
lret
lea
cmpsl
daa
scas
pop
jnp
mov
push
jb
xor
clc
ljmp
xchg
jmp
mov
shl
xor
cld
and
or
insl
mov
mov
or
xlat
aam
inc
add
mov
mov
cmp
jno
pop
dec
xchg
push
push
rcrl
ss
or
shlb
test
les
adc
call
and
and
das
pusha
jp
xchg
xchg
jle
jno,pt
repz
ss
add
dec
sbb
fdivs
and
mov
sbb
out
sbb
sarb
sbb
fisubs
inc
jecxz
test
mov
sbb
jp
fcompl
and
jae
scas
rorb
xor
cmpsb
lods
add
or
out
into
sub
add
sub
or
push
out
mov
hlt
or
inc
mov
test
push
push
xchg
repz
adc
repz
in
dec
xor
cli
xor
sbb
negb
fidivl
dec
cs
push
bound
mov
inc
rcrb
or
adc
push
add
push
cs
xchg
mov
out
sbb
jne
push
ss
sahf
aas
adc
push
std
jg
jae
in
pop
nopl
leave
mov
lods
xchg
mov
add
scas
call
inc
stos
xchg
xchg
adc
std
mov
cmp
vpcmpeqd
mov
mov
lock
rclb
xor
add
in
mov
mov
xchg
push
pop
inc
mov
mov
imul
mov
jg
jbe
pop
cltd
cmc
and
sti
sub
jle
mov
repnz
and
pminub
aas
inc
pop
cmc
rorb
xchg
inc
sub
lret
aas
insb
cmp
sub
jnp
sbb
repnz
cmp
and
nop
xchg
fnstenv
fs
adc
cmp
mov
addr16
dec
xor
bound
shlb
loop
mov
daa
push
sbb
jl
hlt
xor
sbb
aas
das
jp
jg
or
sub
icebp
ret
xchg
cmc
cwtl
das
cmp
lret
outsb
sub
inc
mov
lahf
ret
into
and
xor
push
push
lcall
icebp
sbb
shl
sub
cmp
fs
and
imull
in
xor
push
inc
fldl
cmpb
dec
add
xchg
sbb
push
xchg
mov
mov
fldl
push
movsb
mov
inc
mov
in
add
enter
movsb
sbb
fnsave
jmp
and
lret
cli
dec
sbb
addl
shll
xchg
mov
xchg
mov
int
clc
mov
jp
mov
les
aas
mov
mov
and
es
fcomp
sub
pop
lea
pop
cltd
add
add
scas
das
or
push
pop
push
inc
leave
mov
sbb
xor
pop
jg
push
jge
incl
mov
gs
pusha
and
add
inc
push
sub
add
add
popf
inc
icebp
sbb
cmp
pop
stos
ljmp
adcb
sahf
leave
push
fxch
mov
push
jl
jns
inc
insl
pop
popa
stc
out
ja
sub
dec
push
sub
mov
dec
lods
fisubrs
inc
arpl
hlt
mov
mov
adc
and
pop
fcoms
sbb
ja
and
cmp
mov
lods
outsb
sbb
sbb
sub
xlat
xchg
mov
xor
pusha
mov
cmp
sbb
jne
pop
fstpl
cmpsb
jns
stc
mov
push
lcall
jae
inc
imul
pushf
pop
fdivp
call
fisubl
icebp
rcrl
cmp
out
dec
xchg
dec
mov
xchg
push
mov
ds
sahf
pop
inc
mov
cmp
lds
add
inc
pusha
loope
les
jl
call
cmp
xchg
sti
sti
pop
sub
push
lcall
inc
mov
xorl
add
cwtl
lds
rcl
idivb
sub
jge
xchg
test
sub
sar
lock
inc
jns
push
jbe
add
clc
mov
mov
xor
pop
sbb
and
shrl
scas
rol
ret
xor
mov
xchg
test
stc
sbb
leave
xchg
or
dec
jns
insl
rclb
xlat
jne
ljmp
nop
test
or
clc
es
aas
ss
insl
mov
add
jle
inc
mov
in
add
rcrl
mov
dec
pop
leave
inc
test
fs
pop
add
lods
sub
mov
xlat
adc
jns
xor
lods
idiv
sub
mov
pop
push
cs
movsl
xchg
dec
lea
inc
jmp
call
cmpsl
lods
subb
mov
mov
jne
mov
cmpsb
jno
jl
push
mov
leave
les
sarl
sub
or
add
pop
test
ror
and
mov
pushf
or
xchg
add
sub
nop
insb
mov
pop
inc
shrl
mov
cmp
mov
adc
lcall
adc
push
pop
sub
lret
inc
mov
jge
and
lret
aas
icebp
cwtl
add
ss
js
dec
mov
jle
mov
pusha
cmp
mov
push
fldcw
in
cmp
lahf
dec
jl
pusha
lea
adcb
pop
ficoml
adc
hlt
sbb
sbbl
cmp
add
xor
dec
mov
adc
mov
out
push
stos
dec
add
jb
shll
mov
iret
roll
mov
xor
pop
fisttpll
mov
or
stos
popf
push
sub
sti
testl
ljmp
sub
push
dec
inc
lret
dec
pusha
mov
mov
mov
or
adc
lcall
idivb
xor
stos
push
pop
rcll
das
pop
xchg
pop
xchg
pop
in
inc
and
insl
fiadds
push
mov
mov
cs
mov
lods
pop
add
out
icebp
enter
subb
outsb
int3
lds
jbe
test
adc
inc
rorb
cmp
pushf
sub
dec
xchg
pop
sbb
jg
pop
je
mov
mov
aas
cltd
int3
fidivs
sbb
cld
sub
pop
subl
cmp
mov
inc
jnp
xchg
addr16
stc
cmpsl
sbb
loop
inc
fwait
xchg
pop
adc
cmp
ret
add
ljmp
hlt
pop
movsb
jge
inc
mov
lcall
data16
bound
mov
pop
mov
dec
jl
pop
mov
cmpsl
rcll
clc
lahf
xchg
cltd
pop
dec
adc
fmull
mov
pop
decl
das
adc
jne
sbbb
data16
jp
in
scas
sub
lods
add
sti
ds
sbb
sub
iret
hlt
push
cmpsb
popa
jo
xchg
dec
add
jae
xchg
js
jns
sbb
lcall
fisttpll
nopl
inc
xchg
sbb
popf
cmc
mov
add
out
pop
sarl
or
push
ds
xchg
push
outsl
fdivl
in
icebp
cmp
lahf
jecxz
cmpsl
bound
cmp
addl
mov
push
daa
cltd
sub
andl
sbb
mov
int3
pop
pop
inc
push
adc
mov
shrb
mov
or
mov
shll
dec
inc
lcall
sbb
stos
ficoml
shll
sbbb
mov
repnz
shll
jecxz
adc
neg
dec
mov
sub
and
mov
mov
dec
and
aaa
ljmp
movsl
test
lock
dec
loopne
add
lods
jmp
push
aad
in
inc
inc
mov
shll
sbb
xchg
xchg
mov
xchg
add
pop
bound
pop
lods
iret
js
lea
cmp
mov
push
popa
push
mov
mov
push
inc
out
or
mov
and
mov
mov
call
adc
cmpsb
pop
fimuls
pop
cs
sbb
xchg
and
inc
into
inc
mov
mov
mov
sbb
sub
shr
enter
sti
pop
dec
xor
bound
add
sub
mov
sub
cli
sub
iret
cmpsb
jnp
in
xor
movsb
pop
sub
test
pop
les
dec
roll
repz
mov
mov
lds
jge
test
sti
xor
jae
push
push
xchg
int3
cli
unpckhps
fs
add
loope
aam
xlat
test
lahf
ficomps
mull
xchg
pop
out
stos
cmp
cltd
jmp
ljmp
jb
stos
adc
pusha
test
mov
xchg
mov
mov
jp
outsb
pop
mov
es
es
dec
bound
push
inc
pushf
mov
cmp
test
jecxz
test
out
cltd
add
adc
shl
inc
lds
mov
push
pop
int
jl
push
inc
sbb
jo
jbe
push
mov
stos
push
cmpsl
pop
add
xchg
jo
jae
or
mov
lea
jp
lret
xchg
add
or
push
mov
jae
inc
cmp
setge
xchg
xchg
inc
call
rorb
cmp
movsb
mov
lahf
int
mov
fldt
sub
and
stc
push
sbb
orb
ja
push
dec
xlat
cmp
jmp
or
pop
cmp
sub
adc
in
cmp
mov
out
loope
and
pop
sahf
mov
loop
nop
jmp
push
xchg
and
std
jno
roll
xchg
rcrb
sub
jae
cld
shrl
mov
push
out
and
mov
xor
rcrb
sub
stos
dec
pusha
push
loope
aam
repnz
fxch
aam
scas
adc
shrl
jle
push
pop
lret
movsb
lods
dec
out
lcall
lea
icebp
call
js
popf
lret
dec
push
jle
xchg
adc
mov
ss
int3
repnz
sbb
push
push
mov
xchg
pushf
cwtl
repnz
in
xchg
or
iret
inc
popf
dec
add
xchg
inc
pop
imul
or
pop
mov
sub
lcall
in
or
in
iret
insb
rcrl
cmp
and
cmp
repnz
sbb
aad
jae
arpl
sub
cmp
add
shlb
in
xchg
cmp
mov
mov
movsb
movsl
and
test
stos
shrl
iret
lahf
and
mov
mov
shll
inc
insb
mov
mov
inc
pop
cld
inc
loopne
inc
sbb
fldl
xlat
mov
insl
aaa
xchg
xchg
leave
dec
jae
fnstenv
repz
and
aaa
repz
hlt
cmp
movsl
pop
push
loop
mov
xor
sub
loopne
mov
mov
jle
cwtl
mov
inc
mov
cmp
hlt
push
rcrl
jbe
xchg
fdivs
pop
pop
das
fdivs
into
xor
mov
sub
jle
mov
mov
lahf
das
lock
ds
int
jno
mov
pop
or
dec
pop
mov
cmp
pop
xchg
mov
in
cwtl
jp
aad
jecxz
cwtl
and
test
lods
nop
nop
ja
bound
fbstp
out
mov
bound
aas
ret
imul
cmc
rcl
mov
fadd
ret
loopne
mov
pop
stos
sbb
mov
inc
mov
filds
sahf
out
orl
xor
jg
es
sub
mov
icebp
andb
or
fistpll
je
popf
pop
mov
pop
outsl
jg
push
push
pop
notb
jl
dec
aam
imul
int
psubb
test
xchg
cli
push
movsl
lahf
mov
sbb
push
pop
lahf
fcoml
mov
decl
js
mov
cltd
adc
inc
push
jns
sti
adc
sbb
dec
fdivl
xchg
std
divl
xchg
jg
popf
mov
xor
pop
mov
pop
sub
repnz
addr16
sarb
lcall
sbb
sti
push
test
inc
xchg
ja
and
and
iret
ja
sub
mov
xor
mov
cmpsl
dec
sbb
cmp
add
rcrb
shll
in
xchg
mov
jp
test
call
jne
popa
dec
xchg
loopne
insl
xlat
dec
out
les
scas
mov
jo
mov
les
mov
or
into
outsb
sub
xchg
xchg
mov
sbb
jl
popf
enter
sbb
cmp
mov
mov
sahf
popf
idivl
pop
xchg
adc
stos
fmull
nop
mov
std
xchg
sub
out
lods
cwtl
rcll
xchg
lea
push
mov
mov
loopne
inc
std
mov
test
ret
xchg
lods
stos
imul
mov
mov
jmp
sahf
lahf
sub
lret
or
out
into
cmp
movsb
rcr
ja
outsl
xchg
cld
pushf
inc
fmull
cld
pop
cmp
dec
outsb
pushf
roll
jmp
fists
sbb
mov
push
lods
scas
in
in
ljmp
aam
ret
or
jecxz
out
mov
push
xchg
mov
data16
popa
cmp
push
out
xor
jle
clc
jb
hlt
fadds
ss
imul
dec
pop
mov
jge
or
cli
jmp
or
jno
lret
test
cmp
jmp
push
dec
jns
push
push
and
ror
out
dec
push
jge
adc
inc
sub
subb
int3
loopne
sti
test
mov
add
pop
pop
lds
inc
lret
mov
mov
nop
mov
mov
mov
mov
sub
add
je
or
cs
mov
push
aas
out
pop
xchg
negb
je
dec
in
insb
sbb
mov
mov
xchg
sahf
fdivp
push
rcrl
inc
insb
lahf
lcall
test
jle
outsb
dec
repnz
nop
les
aas
negb
mov
mov
je
mov
add
cmp
gs
mov
shrl
sahf
inc
jmp
leave
cmp
lret
sub
lds
dec
lret
jecxz
sub
mov
fwait
sub
jp
enter
enter
cmp
stos
fistps
aad
mov
xor
shrb
aas
xor
pop
ror
mov
xchg
insl
and
cmp
inc
or
jns
clc
shlb
imul
fwait
in
es
jge
pop
lods
xorb
loop,pt
stos
mov
lods
bound
aaa
xchg
adc
add
and
sbb
call
je
mov
xor
outsl
je
pop
mov
push
sahf
lods
add
jmp
data16
ds
fstps
dec
lret
pusha
xchg
adc
mov
ret
ret
faddl
jae
inc
mov
arpl
data16
or
adc
stos
mov
pop
movsl
std
jb
adc
or
movsl
mov
mov
push
pop
xchg
lahf
bound
imul
lcall
push
add
xchg
ficoml
imul
xor
mov
xchg
inc
push
aam
dec
icebp
sbb
insb
and
adc
mov
jl
mov
adc
xchg
rcr
jbe
pushf
test
add
pop
push
out
sub
cld
cwtl
mov
add
imul
in
aad
push
cs
mov
dec
aaa
sub
hlt
jae
ret
loope
mov
lcall
push
scas
pop
clc
sub
add
mov
stc
sbb
repz
es
fdivrs
divl
push
add
fmuls
je
mov
lcall
cmpl
mov
jae
dec
adc
dec
or
fcoms
lret
lea
jae
jecxz
push
lods
in
sub
xchg
rcrl
lahf
in
and
mov
pop
push
daa
popa
out
loop
pop
out
data16
dec
pop
test
stos
cmp
rcll
xchg
jbe
out
jge
int3
push
fs
sub
repnz
xor
dec
std
push
dec
xor
or
push
jno
insb
lock
ljmp
stos
mov
add
or
lret
fldcw
mov
push
dec
stos
movsl
fsubl
mov
mov
sbb
sbb
jle
adc
inc
push
inc
dec
rcrl
xor
outsl
sar
popa
pop
dec
fisttps
jge
test
scas
lahf
fwait
ret
leave
ret
lret
add
sbb
sub
mov
out
xchg
std
xchg
and
pusha
test
out
in
aas
mov
push
fistpl
push
and
sub
push
jns
sub
mov
sbb
rclb
mov
pop
out
out
or
xchg
cs
loope
dec
cmpsb
push
int3
arpl
add
pusha
push
mov
cmp
xor
repnz
push
cmp
outsb
jnp
pop
pop
lret
adc
and
aas
rcrb
cltd
push
cmpsl
cmpsb
fistl
fsubl
sbb
mov
lods
in
cmpsb
adc
aaa
adc
ss
adc
sbb
push
js
shlb
orb
xchg
gs
stc
pusha
pop
vandnps
xor
mov
dec
shrb
ret
lahf
in
jb
fcomi
sub
mov
xchg
sub
cwtl
ss
stc
cmpl
push
fiaddl
adcl
add
sbb
inc
mov
or
mov
sub
xor
cmc
mov
test
cmp
inc
stc
mov
pop
xchg
jbe
lock
fsubs
jg
insl
into
mov
adc
xchg
mov
inc
adc
xchg
and
mov
mov
adc
adc
pop
or
xor
insl
push
cs
cltd
addr16
xchg
mov
and
dec
ret
mov
add
sub
repz
in
dec
or
jbe
pop
rcrl
sahf
xchg
cmp
decb
ss
test
ficoms
jno
lock
in
dec
stos
push
mov
xlat
pop
dec
bound
add
xor
sbb
jae
inc
orb
mov
ja
pushw
int
jle
dec
roll
mov
in
jne
outsb
xor
cmpsl
cmp
aam
lcall
roll
sub
popf
mov
ss
pop
movsb
shlb
jg
cmc
hlt
adc
xorl
ret
divw
addl
divl
xchg
lret
int
inc
push
adc
add
add
out
mov
aam
stos
in
xor
arpl
or
sub
mov
pop
mov
add
mov
loope
test
or
xor
mov
inc
dec
jmp
xor
test
sbb
mov
jge
jns
jecxz
xchg
popa
enter
mov
xchg
popf
loopne
stc
js
sbb
aas
dec
mov
dec
aad
test
in
sti
dec
pop
sbb
add
out
mov
fldt
in
pop
push
cmp
bound
add
push
pop
call
icebp
sbb
fnstsw
ds
repz
inc
adc
inc
ret
add
mov
adc
lret
es
int3
les
pop
popf
int
mov
sbb
nop
int
mov
pop
push
xlat
sbb
jns
xor
add
iret
ret
push
or
enter
cli
fbld
out
add
inc
jnp
jo
out
arpl
mov
icebp
xor
lcall
push
das
jp
adc
push
cltd
aam
loop
inc
mov
adc
cmp
pusha
and
test
cli
ret
cmp
adc
push
xor
mov
adc
repnz
push
adc
dec
jmp
mov
mov
pop
or
mov
or
mov
jns
int3
fwait
or
lock
sbb
sub
sarl
mov
pop
insl
ds
sbb
xor
inc
insb
enter
enter
repnz
lock
push
mov
scas
outsl
lcall
mov
aaa
mov
jne
mov
rol
xor
mov
movsb
std
adc
sbb
push
add
xor
mov
pop
out
pusha
stc
cwtl
xchg
lcall
xor
loope
ljmp
rol
adc
sbb
pop
mov
push
cld
sub
inc
cmp
or
xor
cmp
outsl
mov
push
pop
nop
pop
icebp
push
xlat
mov
lcall
adc
addr16
dec
or
lea
out
ret
cld
xchg
fidivl
mov
leave
lds
add
xchg
mov
mov
imul
fwait
int3
mov
test
sub
popa
dec
inc
xchg
jno
lea
movsb
cmp
sti
sub
mov
jb
jae
lods
push
xchg
lds
or
in
out
jno
pusha
jp
out
jns
add
pop
push
mov
mov
add
shld
mov
ja
in
inc
cli
add
dec
adcb
bound
add
out
stos
into
push
fldl
inc
jno
sub
test
or
or
jno
push
scas
push
faddl
mov
sbb
fmul
fnstsw
cs
mov
sub
es
insb
add
sub
cbtw
sub
cli
adc
loop
inc
or
insl
sbb
jecxz
xchg
daa
in
hlt
sub
fsubrs
sub
mov
loop
sub
sbb
cmc
and
push
popa
xor
xchg
xchg
in
cmc
jno
and
cltd
sti
or
loopne
rcll
pop
add
push
mov
cmpsl
adc
filds
pop
xchg
mov
add
mov
imul
mov
mov
loope
sub
js
lds
stos
pop
lea
push
nop
or
jno
mov
nop
xchg
pop
into
xchg
inc
loop
js
aas
cmpl
cmp
lds
int3
jge
cmpb
icebp
lcall
dec
mov
pop
mov
cmp
inc
jo
xlat
inc
pop
inc
test
sub
ret
inc
mov
mov
inc
mov
dec
dec
repz
xor
adc
pushf
data16
mov
fimuls
lods
inc
orb
jecxz
shrl
scas
das
rolb
jno
dec
sbb
notl
mov
stc
mov
pusha
dec
cmc
push
mov
scas
nop
cmpsb
adc
adc
sub
pop
aam
xchg
xchg
and
and
jge
push
sub
fsubrp
mov
dec
jle
icebp
loope
xchg
clc
loopne
inc
inc
push
mov
popa
rol
aad
sbb
nop
mov
lahf
movsb
subl
in
inc
and
inc
ljmp
add
psubd
pop
addr16
push
lcall
push
mov
and
jns
idiv
out
inc
fildl
repnz
or
xlat
fs
dec
lret
push
cwtl
gs
ds
pop
scas
call
pop
pusha
xchg
cmc
pop
jnp
arpl
or
insl
xor
nop
call
dec
add
sub
push
lret
dec
cmc
neg
mov
shll
aad
pop
xchg
inc
cmp
pop
sub
mov
sub
ljmp
mov
xor
cmp
daa
mov
std
adc
pop
or
adc
lcall
jecxz
xor
xchg
outsb
test
jne
jo
dec
pop
add
lds
fsub
int
adc
std
ret
ljmp
cmpsb
mov
jb
or
cmp
inc
xor
sar
add
les
or
and
mov
lcall
sbb
outsb
jb
jl
and
stc
fcoml
xchg
std
fimuls
jne
pop
fistps
or
out
rorb
or
nop
mov
movsb
jp
int3
stos
cmp
mov
test
enter
dec
mov
cwtl
push
mov
rcrb
js
pop
inc
repnz
jnp
jnp
ret
pop
faddl
addl
call
rcll
test
insb
add
mov
test
scas
inc
add
fwait
je
loop
xchg
les
or
xchg
mov
lret
xchg
push
fcoms
adc
jb
push
cmp
mov
ja
pmaxsw
sub
sbbb
or
ljmp
jnp
push
dec
cs
push
repnz
push
jmp
or
cmp
jns
mov
pop
jb
add
repnz
pop
sbb
repz
push
xor
mov
in
pop
cmpsb
jecxz
jle
mov
fisubrl
sbb
cmp
lret
pop
jle
ja
je
insl
or
pop
fimuls
inc
iret
movl
sbb
jp
push
and
inc
pop
cmp
add
adc
xor
daa
mov
or
nop
imul
inc
sarl
inc
add
mov
jbe
movsb
sbb
cmpsl
sbb
andb
in
inc
enter
lahf
test
std
insb
jne
adc
add
cld
test
lea
outsb
add
lods
ss
sbb
mov
push
test
mov
sti
daa
xor
xor
aam
cmp
gs
cld
jle
popa
inc
pop
mov
adc
movsb
push
dec
pop
or
das
movsl
push
bswap
repz
rcrb
movsb
cwtl
cwtl
push
mov
sbb
rcll
in
lret
xor
xor
jmp
push
movsl
sti
sbb
dec
fdivrs
das
sub
mov
adc
xor
adc
jbe
aam
dec
or
insb
push
imul
lock
add
lods
dec
enter
sub
xlat
xchg
sbb
or
shrb
mov
clc
aad
mov
inc
ss
shr
fstp
jecxz
mov
mov
fadds
mov
pushf
lds
das
cmp
pop
sar
mov
cltd
xchg
push
cmp
pop
lods
jge
fcmovnu
adc
and
dec
aad
xorl
movsl
popa
adc
andl
jae
js
mov
mov
adc
lahf
js
int
rorl
jnp
mov
dec
pop
push
mov
mov
pusha
pop
xor
add
jmp
aam
jp
jno
cwtl
mov
cmp
jge
in
ja
jns
jle
jae
jo
sbbl
aam
scas
add
dec
ss
das
subb
add
test
loope
or
notb
or
pop
adc
ficomps
nop
sbb
mov
sti
adc
je
inc
or
imul
add
jns
cld
std
pushf
sbb
out
incl
out
scas
movsl
pop
mov
insl
adc
ljmp
cltd
testl
out
inc
cmpsb
sub
xor
mov
pop
pusha
jnp
psllq
xchg
mov
shll
add
das
aas
outsb
popa
dec
clc
out
mov
and
ss
loop
dec
cmpsb
cmpsl
dec
ret
outsb
push
mov
addr16
in
fld
out
sub
cli
mov
out
add
lock
sbb
ljmp
fstl
xchg
xor
lods
cmp
lds
cmp
arpl
and
cmpsl
mov
jnp
cmp
push
fdivrs
test
jmp
out
imul
cld
dec
rorb
notl
jge
push
cld
fstpl
push
jge
jae
push
push
xorl
roll
test
jb
outsb
mov
ffree
mov
jecxz
pop
pop
jecxz
adc
mov
insl
pop
fdivrp
out
inc
mov
jmp
ljmp
jns
or
lea
add
or
add
dec
mov
ja
xor
rorb
push
mov
fsubl
testb
mov
ret
push
mov
roll
pop
mov
sub
in
repnz
stos
mov
mov
into
pop
leave
push
mov
push
icebp
push
out
pop
and
lcall
xchg
xorl
daa
jmp
jg
out
stc
es
mov
out
mov
mov
sarl
jb
mov
pminsw
mov
push
cmc
inc
inc
cmp
clc
sbb
repz
cli
push
xchg
jg
fwait
in
js
pop
push
lds
movsb
jecxz
pop
sbb
inc
xor
xor
jns
sarl
add
mov
in
xchg
mov
daa
movsl
sub
inc
iret
or
sahf
popl
xchg
dec
fwait
xchg
jl
repz
mov
dec
pop
ss
test
dec
test
fistpl
leave
out
pop
and
lret
andl
jge
icebp
pop
cmp
or
and
test
insl
dec
pop
das
outsb
mov
aam
leavew
scas
in
push
xor
lea
in
lret
je
pop
add
inc
cmp
or
mov
jo
popf
int
jle
cli
repnz
push
in
loope
lahf
pop
sbb
pop
or
scas
insl
push
xchg
arpl
ret
sarb
xor
pop
jo
out
and
fidivrl
xchg
xchg
push
mov
scas
jnp
sbb
inc
xchg
xor
cmovl
leave
jo
or
dec
pop
pushf
aaa
insb
mov
cld
es
movsl
arpl
dec
das
adc
or
xor
mov
mov
mov
cs
mov
mov
sti
mov
cwtl
popa
xlat
mov
mov
cld
leave
mov
mov
add
jb
push
insb
loop
mov
jae
push
mov
cmpsl
bound
cs
push
test
sbb
cmp
loopne
dec
lcall
test
or
and
sbb
cmpsb
ja
jg
sahf
data16
inc
int
iret
mov
scas
dec
into
sub
ja
mov
outsl
push
dec
xchg
pop
mov
mov
cmpsl
pop
inc
xor
add
imul
jns
es
inc
mov
repz
das
push
sarb
dec
or
add
popa
sbb
clc
scas
mov
dec
sub
push
adc
mov
rcl
lret
sahf
cmpsl
nop
jbe
adc
stos
pop
cmp
pop
inc
adc
dec
adc
or
sarl
adc
jl,pn
test
fnstenv
inc
jb
shrb
mov
push
pop
add
push
insl
nop
push
sub
dec
out
scas
inc
cmp
add
mov
ret
ret
ror
dec
hlt
sub
mov
adc
adc
jge
loopne
out
fwait
mov
in
sbb
sahf
scas
rorl
dec
addl
push
enter
pop
push
les
lret
scas
add
mov
sub
push
outsl
inc
pop
das
pop
push
scas
sbb
xor
enter
dec
push
dec
add
negb
imulb
mov
xor
jne
inc
add
lods
leave
fisubs
test
sub
and
repz
outsl
ret
jae
aam
xor
ficoms
gs
aad
rolb
pop
repnz
arpl
in
cld
fcomp
in
lods
fidivl
inc
mov
aaa
cmp
pop
lock
push
xchg
fdivs
mul
popa
aad
sbb
xchg
mov
lahf
ss
inc
ljmp
inc
enter
fisubrs
loope
mov
in
dec
movsb
popa
push
pop
insl
lgs
sahf
ficoms
xchg
sbb
mov
mov
movsl
cmpsl
or
lcall
pop
and
sbb
sbb
das
jno
and
cmp
dec
sbb
sbb
push
lock
cltd
int
fcoml
xor
movsb
sub
cmp
leave
xchg
pop
gs
hlt
or
mov
gs
push
fs
xchg
je
arpl
addr16
imul
lea
lea
outsl
adc
xor
int
enter
dec
mov
stos
mov
add
mov
or
bound
mov
jp
pop
lahf
dec
insl
xchg
pushf
xor
imul
cltd
xchg
jne
js
jl
adcb
jmp
icebp
lcall
jno
repnz
and
iret
loop
stos
shlb
sti
mov
push
dec
fcomps
mov
cmc
mov
and
scas
xor
leave
jae
mov
adc
fnstenv
pavgw
repz
lahf
xor
pop
or
outsb
sbb
and
jne
sub
jge
nop
sbb
and
loope
jg
jl
hlt
xchg
or
inc
or
jl
adc
sub
iret
popf
insb
pop
xor
and
in
pusha
lea
loop
jo
xchg
mov
push
jecxz
adc
sub
jno
xchg
lds
jb
dec
adc
add
mov
push
mov
jle
aam
out
cltd
aas
jns
mov
insb
into
inc
insl
fstpt
cwtl
inc
lods
lods
mov
ret
and
call
movsb
cwtl
sub
xorb
xor
dec
inc
arpl
movsl
jp
imul
adc
inc
call
push
xchg
popf
push
lock
xchg
mov
hlt
dec
sub
xor
cmpsb
cltd
subl
fwait
jb
mov
ret
sbb
jp
ret
or
stos
addr16
or
clc
sub
test
mov
lods
mov
push
xor
mov
and
mov
mov
in
imul
xchg
adc
jmp
add
add
add
sbb
lahf
aad
push
inc
jo
sub
out
jecxz
ljmp
clc
aam
stos
pop
jmp
or
mulb
pop
fdivrs
sbb
cmc
inc
mov
jo
stc
pop
stos
test
add
lods
mov
stc
pop
xchg
outsl
mov
cmp
xor
cmp
pop
sahf
sti
push
mov
lods
ret
push
push
fscale
jo
jle
mov
sbb
dec
or
std
adc
popf
call
adc
in
add
movsl
and
xchg
cmp
sbbl
stos
jecxz
push
in
mov
add
lret
and
ret
movsb
pushf
pop
imul
in
fidivl
dec
stos
cld
push
sahf
mov
je
add
adc
mov
and
stos
or
rcl
addr16
push
cld
js
test
mov
sbb
outsb
stos
and
inc
or
adc
cltd
xchg
sbbl
fwait
push
sub
adc
pop
lret
ja
out
lods
push
lods
xchg
mov
cmp
ja
aam
rcrl
xchg
cwtl
push
cld
sbb
dec
lea
mov
push
shll
mov
cmpsl
xchg
addr16
dec
or
aam
lock
ss
jl
aas
mov
stos
add
leave
jge
bound
gs
sbb
jge
mov
aas
push
cld
int3
negb
xlat
icebp
or
sbb
jl
pop
ret
xchg
mov
in
pop
in
pusha
xchg
mov
mov
pop
push
mov
add
loop
je
jns
add
pop
ds
push
push
xchg
mov
ss
es
sbb
pop
incl
sbb
adc
push
in
lds
dec
add
adc
xchg
push
nopl
pop
mov
int
sbb
js
and
cmpsb
inc
fmull
lods
adc
and
repnz
mov
push
cmp
repnz
and
fbstp
inc
js
xor
jmp
test
loopne
xor
add
xor
or
or
cli
les
push
fwait
mov
in
or
popf
adc
mov
pushf
dec
orl
movsb
mov
fsincos
push
pop
shl
and
and
mov
lret
mov
pop
fisubrs
pop
fsubrp
and
cmp
aad
push
sbb
pop
cli
out
push
arpl
mov
sub
shrb
mov
in
dec
push
call
lock
pop
imul
push
xchg
push
popf
add
adc
cld
cli
sub
jbe
shr
iret
mov
push
push
scas
or
xchg
movsb
aaa
mov
adc
int3
push
xor
cmpsl
aad
rorl
push
push
cmp
add
lods
fdivl
stos
fstl
rcll
je
mov
roll
jne
mov
mov
push
mov
out
into
cwtl
aad
adc
rorl
cmp
imul
dec
mov
out
dec
je
inc
enter
sub
fld1
sti
fcoml
jo
lahf
jnp
fadds
out
hlt
pop
loopne
jecxz
xchg
pop
xorl
aaa
sub
imul
iret
pop
test
adc
inc
dec
outsl
mov
addl
outsl
outsb
mov
sbb
pop
pop
xchg
shll
out
xchg
mov
mov
cwtl
fs
jns
pop
imul
push
xor
fdivrs
sbb
push
xor
xor
cltd
gs
inc
lcall
clc
call
sub
xlat
subb
lahf
mov
sub
sub
sbb
xor
and
or
in
movsl
repnz
pop
scas
cwtl
jne
xchg
leave
int
add
mov
pop
pop
and
dec
pushf
hlt
rclb
jp
ja
adc
push
sbb
lea
or
icebp
pop
loop
fsub
mov
mov
jg
mov
loop
dec
rcl
adc
bound
daa
loope
and
insl
scas
out
mov
xchg
or
ret
outsl
push
in
pop
loop
out
roll
mov
mov
test
push
dec
pop
pop
push
push
cmp
and
scas
aas
fwait
test
dec
lds
jmp
pop
out
enter
mov
outsl
push
out
mov
fisubrs
mov
sbb
sub
jl
in
mov
movsl
loopne
sbb
in
cmp
fwait
dec
ret
test
lret
mov
xchg
adc
sbb
icebp
xchg
xchg
xor
jns
js
gs
sbb
leave
xor
inc
cmpsl
loope
dec
adc
fisubrs
roll
xchg
and
sbb
sahf
sub
jl
hlt
add
lds
jne
shlb
sub
out
js
cwtl
dec
mov
lret
or
and
or
adc
or
adc
push
or
dec
dec
jle
sbb
or
mov
js
mov
out
dec
add
sub
outsl
sahf
or
jae
fdiv
sarb
scas
sbb
mov
lahf
jae
aas
stos
and
mov
jno
and
jp
mov
lods
xor
pop
movsl
lret
jge
add
cli
adc
dec
jecxz
repz
push
fisttpl
mov
imul
cmp
pop
in
mov
push
mov
dec
push
scas
mov
push
pop
bound
test
inc
pusha
or
xchg
mov
stos
and
pop
xchg
adc
mov
pop
push
sbb
pushf
out
add
pop
pop
sbb
in
xchg
push
sub
sub
icebp
and
and
push
jg
and
pop
loope
orl
lock
and
bound
rcr
push
test
sbbb
dec
xor
sub
cmc
ror
fnstsw
into
sub
sbb
pop
fistpll
andb
jl
dec
inc
in
mov
jbe
push
insl
mov
jnp
mov
jb
mov
in
inc
rcrb
test
and
ja
and
and
jbe
pop
and
jne
pop
popf
lea
push
or
sbb
mov
ret
fmull
adc
inc
add
fstpt
dec
test
push
dec
imul
adc
add
lea
sbb
ret
or
loop
xchg
loope
mov
and
lock
push
punpckldq
call
mov
sti
movsb
mov
sbb
aad
cmp
jno
mov
cmp
rcrl
mov
fsubl
in
pop
filds
sahf
loop
stc
jbe
mov
roll
orl
xor
iret
fucom
test
jp
test
fldcw
shrl
jbe
or
xchg
repnz
cmp
data16
cltd
adc
out
cmpsl
push
cmpsb
js
cmpsb
and
addl
mov
ljmp
xor
test
dec
lea
aas
cmp
and
mov
or
push
sarl
sub
outsb
test
mov
xor
in
mov
inc
cmpsl
adc
call
xor
scas
int3
rol
add
add
int
je
out
inc
aaa
add
insl
fadds
xchg
shll
int
dec
nop
outsl
dec
xor
popa
in
aas
jle
xchg
mov
xor
out
add
pop
jo
adc
cmp
push
aas
push
mov
sbb
out
clc
sbb
lret
sub
clc
leave
cmp
aad
dec
aad
mov
cmp
cmp
or
and
sbb
and
loopne
xchg
jmp
adcb
pop
ret
push
jne
jmp
in
inc
out
mov
fisubl
cmp
in
inc
pop
mov
adc
xchg
push
pop
or
fnstenv
mov
insb
les
sbb
pop
sbb
arpl
mov
mov
sub
sub
sub
pause
js
pushf
or
in
inc
mov
jecxz
dec
push
add
movsb
mov
sub
mov
filds
or
fcmovnb
sub
test
lret
and
mov
cmp
pop
mov
fldcw
subb
cs
sbb
icebp
push
aas
addr16
cmp
sub
lds
scas
ljmp
scas
js
mov
out
add
cmp
cmpsb
rcl
add
mov
pop
addr16
jg
mov
pop
cmc
mov
mov
jl
int
scas
or
cmc
cs
push
mov
in
incl
int3
cmp
stos
dec
inc
inc
add
lods
xor
loop
lret
pop
xchg
mov
xor
mov
fwait
mov
outsb
adc
xor
add
inc
sub
xor
ss
add
mov
outsb
icebp
lock
mov
cltd
mov
aaa
cmp
push
lods
in
cltd
pop
les
jg
xchg
sbb
mul
fildll
pusha
cmpsl
pushf
mov
nop
add
push
mov
rcrl
ret
mov
cmp
adc
mov
fldt
iret
dec
cmp
repz
outsl
lcall
addr16
sahf
leave
inc
xchg
push
mov
add
xchg
icebp
xor
nop
lret
mov
push
jecxz
pusha
pop
mov
lods
or
sbb
dec
ss
xor
lock
movsl
std
add
lcall
adc
arpl
fwait
jl
or
movl
adc
jne
test
js
push
mov
sbb
ficoms
mov
aas
pop
jl
mov
push
and
mov
inc
popf
lods
int
enter
sbb
add
jl
popf
scas
sbb
mov
dec
adc
aaa
inc
and
pop
mov
jb
ret
pop
mov
js,pt
jae
mov
fdivs
inc
add
ljmp
repz
movsl
mov
aaa
cmp
adc
dec
mov
sbb
xchg
mov
inc
rolb
fstl
jge
mov
pop
fwait
sarl
pop
outsb
and
jne
shll
imul
push
dec
outsb
cmp
stos
ja
iret
mov
sub
sbb
aaa
dec
dec
and
movsb
in
addl
and
add
mov
cmp
push
lret
pop
adc
xchg
inc
add
imul
sub
test
cmp
es
rorb
or
rep
sub
mov
aaa
sbb
adc
push
sub
popf
js
pop
cmp
xchg
cld
pop
mov
mov
xor
cmp
lcall
imul
inc
pinsrw
sub
push
addr16
aam
and
jnp
fs
mov
insb
push
xchg
sbb
and
xor
or
scas
jle
leave
sub
or
xchg
lcall
xchg
add
shll
push
push
pop
inc
sub
fistps
mov
fisubrs
and
fimuls
lea
and
inc
das
sbb
jecxz
or
loop
inc
or
cmp
dec
pop
daa
jno
clc
xchg
out
lock
mov
movl
xor
js
dec
sub
jae
aam
in
loope
add
xchg
cli
sarb
push
xchg
das
and
test
and
and
stos
cs
rcrl
mov
jb
test
xchg
add
inc
stos
mov
sub
push
sbbb
in
leave
add
aam
out
stos
push
mov
dec
push
push
ret
pop
lcall
jo
into
lods
js
inc
test
aad
cmp
jmp
push
lahf
push
out
push
in
sub
xor
dec
mov
ret
lods
test
repnz
add
dec
jne
push
jle
sub
fmul
mov
jae
fs
stos
inc
call
mov
or
jmp
push
jns
xor
or
pushf
ret
jnp
xchg
sub
sarb
or
jecxz
xchg
fmulp
xor
jmp
mov
or
or
xor
test
iret
lcall
ljmp
cld
aad
sbb
xchg
lds
clc
mov
xor
lods
jge
sti
loopne
push
dec
inc
out
fdivrp
pop
ja
cmp
in
in
lcall
es
ljmp
fs
pop
sbb
dec
jne
xchg
sti
dec
xor
aam
pop
mov
lahf
cmp
rol
and
out
lahf
xor
sub
jnp
jb
loop
push
mov
mov
test
stc
and
scas
fwait
mov
xor
mov
fistl
dec
int
popa
bound
push
sub
fistl
or
call
mov
push
pop
xchg
and
les
dec
mov
mov
xchg
xchg
push
cmpl
pop
fisttpll
dec
xchg
shlb
jae
enter
push
lret
lahf
cmp
movsb
inc
fcmovb
sub
outsl
pop
dec
mov
cmp
sbb
enter
pop
mov
xor
cs
push
out
jbe
inc
adc
out
mov
outsl
and
pop
lea
lret
cmp
mov
push
xor
dec
test
xchg
jmp
scas
push
fdivs
movsl
aaa
and
stos
test
scas
loop
fwait
int3
pop
xor
mov
rolb
int3
jle
add
xchg
arpl
fnstenv
sbb
gs
in
or
pop
das
fwait
repz
inc
fisubs
cmp
push
pop
mov
dec
pop
repnz
lods
scas
jge
push
popa
lcall
fnstsw
pop
enter
or
aad
test
cmp
gs
mov
xor
cwtl
dec
lea
pop
sub
pop
mov
mov
mov
fstpt
and
pushf
xchg
int
jnp
pop
test
sahf
ret
sbb
fcmovnu
add
xor
mov
inc
fsubr
js
mov
and
cmpsb
jbe
add
pushf
adc
std
insb
inc
or
orl
testb
mov
adcl
xchg
mov
mov
ret
mov
mov
rorl
div
mov
mov
into
cmp
decb
mov
mov
stc
dec
adc
or
loope
aam
ss
inc
jge
ljmp
fstpl
call
xor
loop
cmpsb
and
jns
testb
int3
pop
push
cs
test
icebp
mulb
in
repz
lods
push
sbb
cmp
sbb
adc
aaa
xor
fwait
inc
pusha
std
mov
pop
sub
xchg
cmp
xlat
cli
lea
adc
das
addr16
dec
out
pop
lahf
ss
mov
jae
push
fwait
and
popa
and
ficomps
mov
dec
xor
pop
insb
out
pop
in
sbb
movsbl
jo
add
imul
xor
push
dec
int3
cwtl
shrb
lea
pop
inc
iret
std
cmp
lock
ss
adc
sub
int3
shll
and
jge
pop
add
pushf
inc
sti
mov
out
ret
lret
xlat
xchg
pop
shl
inc
pop
outsb
popl
inc
push
lret
add
jl
xlat
and
push
fdivs
sbb
lock
stc
fdiv
rcr
xor
ficoms
pushf
push
fimuls
pop
xlat
loopne
mov
aam
pop
jae
inc
xchg
shl
je
adc
pushf
jae
out
inc
int
sub
leave
sbb
dec
ds
jg
iret
sti
data16
mov
insl
push
sbb
clc
stc
nop
adc
out
pop
in
adcl
sarl
insb
xor
push
and
testl
das
outsl
inc
mov
notb
mov
fstl
cmc
sub
js
fcompl
das
test
hlt
inc
mov
dec
rcll
cmc
movsl
jge
sub
inc
lods
push
xor
lcall
jno
jecxz
jl,pn
push
movsl
sub
int
lret
fists
std
mov
adc
and
sbb
adc
cmp
ja
stc
dec
cmp
mov
push
push
sub
fmull
pop
lea
sbb
scas
pop
push
fmul
dec
pop
dec
arpl
loope
rcr
insb
inc
xor
repnz
cli
sub
int3
scas
jb
cwtl
pop
subb
sbb
dec
xor
push
addr16
adc
sbbl
and
fimull
dec
mov
add
popa
sub
shll
pop
iret
xchg
fwait
shll
pop
testb
jecxz
out
inc
jl
dec
js
lods
test
into
inc
pop
or
ret
push
pop
jmp
jbe
jnp
jl
cs
inc
adc
xor
push
xchg
repz
mov
lahf
or
inc
or
fucomi
fsts
push
pop
xor
sbb
sbb
xchg
shrl
xor
jecxz
andb
jno
das
xor
push
xchg
les
aas
dec
and
lods
enter
mov
pop
dec
push
dec
gs
sbb
push
sub
leave
inc
pusha
pop
les
fst
cli
xchg
sbb
mov
sub
in
cmp
lock
imul
pop
push
and
cld
ja
xlat
dec
aad
mov
xchg
jb
sub
sub
out
cmpsl
or
xor
adc
addb
push
enter
rclb
pop
inc
test
sarb
out
stos
jmp
cwtl
stos
jmp
push
mov
cld
out
jl
ja
inc
sub
ljmp
or
cltd
jnp
inc
mov
mov
xchg
cmpsl
mov
movsb
stos
les
aad
sbb
int3
mov
lods
dec
popf
sub
das
ret
xor
repz
bound
jge
push
ja
add
pop
mov
xor
ja
jbe
cs
sub
out
mov
daa
cld
sub
xor
scas
loope
dec
fsts
xchg
jge
mull
mov
jp
pop
popf
push
and
xor
mov
lret
mov
cmp
xchg
cmpsb
mov
sbb
pop
mov
loop
addr16
adc
gs
mov
or
pusha
push
and
js
aaa
dec
popa
adc
dec
cmp
ljmp
mov
pusha
mov
dec
imul
sub
push
fcompl
loope
in
adc
inc
push
xor
sahf
imul
cltd
mov
jl
mov
stos
mov
pop
xlat
dec
mov
mov
jg
fmull
mov
bound
xor
mov
push
mov
lret
xchg
xchg
add
mov
outsb
shlb
push
push
xchg
lods
jl
sub
andb
shlb
rcrb
pusha
mov
or
nop
leave
outsb
mov
clc
xor
mov
xchg
add
sahf
mov
frstor
xchg
inc
test
mov
xor
fsts
scas
outsl
jne
dec
cmp
jo
sbb
pop
dec
mov
xor
mov
inc
ficompl
sub
outsb
andl
inc
fs
jbe
cmp
mul
or
and
andb
sub
daa
sbb
mov
dec
das
out
testl
orl
adc
mov
mov
dec
rcr
out
sbb
shll
std
leave
dec
inc
push
sub
push
outsb
insl
mov
mov
adc
cmpsb
mov
jne
xchg
pop
cwtl
pop
mov
stos
jmp
or
loopne
data16
and
sbb
int
sub
mov
jnp
sti
jg
sbb
jae
int
in
push
xchg
push
cmpsl
cltd
loope
outsl
and
sub
sbb
stos
sti
pop
mov
cld
dec
push
cltd
stc
mov
dec
xchg
mov
sbb
fidivrl
fcom
xchg
mov
hlt
es
cwtl
xchg
inc
jae
xchg
or
fiaddl
cwtl
mov
push
dec
xchg
idivb
and
std
out
lcall
dec
stc
xchg
test
decl
mov
jne
daa
push
mov
into
jl
sub
cli
jmp
and
dec
movl
cmpsl
pop
cmp
test
jmp
call
ud0
sbb
mov
es
fcoms
jge
push
fcmovu
xchg
xchg
mov
icebp
add
js
xor
xchg
mov
jno
add
xor
mov
jo
pusha
mov
xchg
scas
jno
int3
ffreep
mov
fidivl
sub
jmp
arpl
dec
andl
out
sub
test
sub
scas
mov
sbb
jle
and
mov
xchg
inc
aam
js
sbb
fisttpl
fwait
ljmp
scas
pusha
push
or
cmpsb
xor
push
jmp
mov
das
sub
dec
aaa
lret
scas
pop
xchg
jmp
ret
or
xchg
jle
push
lods
mov
push
lods
clc
xor
xchg
sbb
fwait
das
mov
push
pop
and
xchg
pop
pop
mov
inc
mov
jnp
test
addr16
add
outsb
jecxz
js
mov
lea
mov
gs
xorb
ljmp
iret
xor
lahf
imul
push
faddl
aad
add
adc
insl
inc
out
inc
ss
add
mov
js
jecxz
lret
outsb
repnz
mov
mov
cmp
mov
mov
cmp
add
insl
daa
xor
xchg
add
add
fistpll
xchg
fcomip
pop
adc
je
hlt
cmp
push
inc
xor
int
pop
lods
jnp
sbb
ss
stc
and
xor
iret
push
pop
das
fcompl
fsubrl
in
sub
xchg
rcr
sbb
ret
fndisi(8087
lods
cld
repnz
daa
push
pop
test
lods
mov
sbb
movsl
jns
jno
mov
inc
and
fs
xchg
cmpw
pop
pusha
push
out
mov
mov
loope
cli
jb
cmp
es
xchg
mul
inc
add
add
pop
orb
je
dec
or
test
cmp
ret
mov
rcrl
lcall
sub
mov
rol
sub
xchg
popa
enter
fcmove
test
pop
sti
es
jmp
scas
dec
mov
and
arpl
mov
ja
mov
push
stc
and
adc
iret
inc
jmp
xor
mov
subb
scas
jne
loop
inc
pop
dec
lods
lret
lods
pop
imul
push
mov
sbb
lods
pop
jmp
stos
or
outsl
movsb
in
adc
dec
jnp
xchg
xchg
sti
les
loop
pop
fdiv
rclb
or
fwait
and
ds
lods
lock
lcall
fadds
mov
std
pop
sbb
add
inc
jmp
js
imul
inc
sub
sub
pop
mov
pusha
gs
insb
lods
mov
lret
cmc
loop
mulps
mov
mov
jl
std
xchg
mov
pop
aas
int3
pushf
adc
iret
stos
push
mov
mov
pop
jae
lods
ljmp
xchg
addr16
jo
ljmp
stos
pop
sub
cmp
movsl
xor
adc
jno
fisttpll
mov
in
shrl
adc
cmp
xor
lea
sub
das
cmp
stos
and
mov
popa
jbe
jnp
test
fwait
mov
in
aaa
sbb
xor
aaa
outsb
mov
pop
sbb
xor
push
into
xchg
into
xor
jno
adcb
divl
cmp
add
call
or
test
sti
dec
jg
out
icebp
fldt
out
rcrl
fbld
inc
std
icebp
pop
jl
inc
adc
in
jne
add
and
in
dec
mov
add
nop
lods
outsl
cmpsl
dec
cmp
mov
std
dec
mov
mov
fbld
cltd
orl
jno
cmp
sbb
fcmove
dec
lea
inc
pop
or
xchg
aaa
xchg
inc
jge
mov
xor
pop
push
int
jno
dec
sbb
inc
dec
outsl
sbb
arpl
mov
mov
adc
mov
or
cmp
adc
inc
xchg
dec
sbb
push
iret
sahf
lret
mov
inc
pop
push
mov
test
faddl
mov
gs
cmc
pop
add
or
inc
lcall
lret
lds
jno
pop
inc
push
adc
ds
aaa
adc
cmc
cltd
jne
jge
fcmovnbe
jmp
push
std
lock
mov
add
xchg
call
addr16
sub
cli
xchg
sbb
xchg
adc
pop
std
lea
es
and
out
push
sbb
bound
dec
push
pop
fld
icebp
ja
xchg
push
jno
mov
std
mov
pop
jno
mov
fistpl
pushf
pop
push
les
loop
loope
push
jbe
dec
push
ljmp
stos
push
sbb
jb
test
push
movsl
hlt
jg
dec
mov
stc
jmp
inc
pop
or
pop
lock
push
mov
lock
sub
push
adc
xor
outsb
stos
push
gs
mov
adc
mov
out
jne
shrb
rorl
pop
jp
sub
cmpl
mov
inc
int
pop
xchg
mov
and
leave
inc
ret
mov
or
pushf
lods
sub
xchg
hlt
pop
sarl
daa
icebp
xor
sub
xchg
xchg
add
arpl
in
inc
test
repnz
das
roll
leave
dec
adc
pop
cs
cmpsl
push
xchg
test
sarl
sbbb
xchg
jo
into
in
pop
mov
nop
sbb
jg
dec
sub
out
push
mov
sbb
cld
pop
jge
mov
sti
adc
sub
lods
dec
test
lahf
sub
pop
mov
insl
sub
ret
shrb
fnstenv
popf
cmpsb
mov
sbb
inc
or
and
sub
jmp
mov
push
xchg
push
pop
sahf
jb
xchg
test
and
push
add
jbe
mov
notl
mov
mov
mov
inc
das
out
stos
inc
movsl
jmp
dec
adc
or
and
push
xor
popa
add
sbb
pushf
pop
push
dec
dec
lds
sub
mov
sub
inc
rcll
or
repz
movsb
nop
inc
popf
outsl
out
clc
sub
popf
rcll
push
insl
mov
xor
adc
mov
popf
sbb
cwtl
fwait
ss
lea
push
movsl
mov
sub
addr16
jl
push
xchg
adc
subl
pop
mov
or
mov
mov
jge
test
rcrl
jns
out
loop
leave
jle
sub
aad
push
in
shr
hlt
rorb
pop
inc
mov
stos
jecxz
and
jbe
in
mov
adcl
cmp
and
addr16
out
sub
inc
addb
sbb
lods
das
pop
scas
and
outsl
lret
pop
sbb
sub
add
jmp
push
stc
aad
adc
and
insb
cmp
outsl
mov
clc
xchg
jge
in
shrl
divb
push
pop
mov
mov
mov
pop
mov
aas
jl
aad
pop
das
pop
popf
stc
push
jo
test
mov
xchg
aaa
mov
scas
in
in
popf
in
cmp
repz
ja
aas
add
in
fdiv
pop
xchg
leave
mov
lods
lcall
das
dec
test
dec
iret
loope
mov
adc
cwtl
dec
xchg
sbb
jae
adc
xorl
stos
inc
or
scas
pop
movsl
push
cmpsb
leave
xor
dec
cmp
shrl
lds
inc
xchg
cmp
mov
jg
insb
rclb
orb
jl
pusha
daa
adcb
mov
hlt
xchg
pusha
ja
sbb
in
pop
jne
mov
out
sti
cmpsb
xchg
hlt
int3
xor
sub
jp
dec
cwtl
shlb
fs
pop
clc
pop
mov
mov
push
cmpsl
in
push
push
fdivrl
and
loopne
sti
jmp
ds
add
pushw
pop
cmc
pusha
inc
sbb
push
or
xor
add
outsl
pop
add
jle
lea
or
jge
and
iret
jo
cmp
jne
test
and
rcll
pop
xor
popa
inc
xor
sub
sbb
add
mov
test
call
fstl
xchg
dec
lahf
mov
test
mov
pop
add
jg
or
fldl
fiaddl
pop
rcrl
jp
mov
movsb
shrb
push
decb
mov
std
imul
hlt
aaa
lret
cmpsl
xchg
in
aam
fsubl
jae
js
dec
adc
fidivs
ret
dec
decl
in
adc
leave
rcr
sarl
adc
aam
add
dec
dec
and
outsl
adc
and
cmpsl
mov
daa
fimull
pop
push
and
aas
and
mov
enter
daa
mov
test
pop
lods
lock
mulb
cmp
mov
rcr
inc
stos
cmp
push
pop
jbe
loop
in
imul
xor
mov
pop
cmp
mov
jg
xor
fnsave
or
lret
mov
stos
bound
sbb
sbb
add
fdivs
imul
mov
mov
xor
lret
dec
push
fidivs
mov
cmpsl
test
xchg
or
or
mov
and
xor
dec
dec
push
loope
out
stos
jnp
or
rclb
sbb
vpsraw
orl
xchg
sti
rcl
out
xor
mov
or
sub
adc
push
or
rcl
int
cld
or
scas
add
andl
sti
jbe
sub
popf
sub
xchg
mov
inc
imul
testl
mov
ds
or
lret
push
xchg
jg
rorl
leave
inc
sub
lock
insb
inc
mov
push
mov
fistps
or
inc
rcl
mov
pop
incl
inc
fidivrs
push
inc
in
xor
xchg
sub
or
outsb
imul
jnp
int3
scas
lret
insb
shr
fwait
ja
cltd
je
fstps
inc
scas
dec
cs
or
in
adc
cmpsb
stos
or
sub
and
js
lock
fwait
in
mov
add
icebp
in
xor
mov
cltd
mov
iret
mov
mov
js
lods
xlat
push
lea
add
push
xchg
sbb
jl
mov
inc
jmp
push
push
dec
ds
xor
dec
jno
movsl
and
cwtl
iret
cmpsb
out
hlt
mov
lds
mov
sarl
js
popf
lret
jle
ljmp
sub
out
ret
sbb
pop
ja
mov
cmp
mov
pcmpeqd
out
xchg
dec
or
out
inc
jns
xchg
mov
daa
mov
sbb
inc
dec
movsb
dec
jmp
cmpsl
fwait
rolb
lods
push
stos
pop
icebp
jmp
push
sub
fimuls
lea
aam
dec
icebp
lahf
push
ds
test
jno
icebp
jg
push
and
rorb
fadds
lea
jns
daa
sarb
aam
add
test
jno
pop
sub
mov
test
push
mov
jo
test
mov
inc
mov
adc
pop
rolb
mov
pop
fadds
mov
mov
jmp
mov
cltd
xlat
sbb
ds
cmp
inc
adc
sub
mov
mov
leave
daa
sbb
mov
xchg
xchg
cwtl
inc
dec
out
xor
cmp
or
lret
nop
das
inc
jne
jmp
jle
movsb
stc
mov
outsb
sub
mov
outsb
push
push
jecxz
jp
inc
fmuls
lds
dec
jns
push
clc
cwtl
xor
ljmp
cmp
sarb
cmp
jg
filds
inc
test
push
sbbb
and
divb
out
das
orb
sub
push
js
jae
sub
adc
ds
adc
cltd
pop
cmp
dec
or
aad
aaa
cli
jp
sbb
std
jno
add
mov
in
push
std
imul
inc
int
leave
bound
in
add
dec
aam
rorb
call
rcrl
inc
filds
sbbl
push
cmpsl
jnp
out
add
xor
sbb
xchg
xchg
lcall
je
stc
jno
mov
push
mov
lods
movsb
shlb
test
fdivs
les
jne
shr
jae
ss
add
inc
out
fistpll
xor
dec
test
aaa
cmp
test
fincstp
jne
ds
cwtl
inc
imulb
pop
jl
je
lret
loopne
idivl
pop
add
mov
cmp
mov
aas
xchg
or
mov
xchg
pusha
insl
iret
inc
fistps
pop
xchg
in
adc
xchg
sarb
mov
pop
lea
iret
inc
clc
stos
dec
xchg
push
pop
shl
fcomps
pop
xor
lea
jae
sbb
push
into
in
dec
add
xchg
dec
mull
fidivrl
push
mov
inc
mov
das
insb
mov
clc
enter
imul
fdivr
inc
aas
jp
push
popf
lea
push
xchg
sbb
lret
insb
call
inc
sub
inc
jge
mov
ret
add
xor
std
sahf
lock
jg
test
scas
out
push
mov
push
jb
push
jne
mov
addl
iret
int3
adc
out
xchg
sub
stos
adc
repnz
int3
hlt
incl
inc
xor
scas
cmc
mov
mov
fldt
in
mov
cmp
and
cwtl
movsl
enter
jl
mov
xor
addl
sbb
repnz
pop
mov
in
repz
fucomip
cmpsl
mov
adc
sub
inc
fcom
cli
inc
ret
push
movsl
cmc
fistpll
loop
ljmp
rcrl
jne
gs
es
xor
aaa
and
xchg
movb
inc
fsubs
fldenv
insb
bound
lea
cmp
cmp
in
push
repnz
jmp
loopne
enter
sar
mov
ficompl
roll
push
out
jl
test
xchg
sbb
ja
scas
mov
lds
sbb
pop
cmp
dec
dec
mov
mov
jl
adc
enter
lds
shl
adc
mov
in
jg
int3
mov
sbb
push
into
lods
inc
gs
xchg
adcb
xchg
fcmovbe
adc
mov
mov
dec
xor
xchg
mov
jns
jg
sti
les
sub
ret
sahf
icebp
jmp
mov
fdivs
mov
test
addb
sub
scas
and
xlat
filds
dec
movsb
xchg
lahf
test
fldt
adc
jecxz
dec
cmp
dec
aam
ret
pop
xchg
sarb
movsb
sub
inc
mov
jecxz
push
push
lret
jne
xor
out
inc
scas
and
and
jge
xor
inc
pop
push
push
sbb
xchg
lahf
mov
in
iret
div
bound
mov
mov
movsl
mov
insl
in
gs
sbb
mov
test
lea
inc
test
jns
cmp
mov
sti
sub
pop
out
add
adc
aad
pop
mov
inc
pop
movb
sub
cmp
inc
aas
subb
mov
mov
xchg
mov
jo
sub
clc
insb
and
add
scas
xlat
clc
cmc
adc
jnp
dec
cmp
out
jo
jge
add
scas
mov
lret
fdivrl
dec
popa
js
xlat
clc
cmp
xchg
aas
sbb
pop
mov
adc
and
push
or
icebp
mov
movsb
cmp
and
aad
movsb
push
mov
movsb
push
add
xchg
sub
ret
mov
push
xchg
or
fnstcw
sbb
test
shrl
popf
shrb
xchg
jle
xlat
dec
sub
ucomiss
jns
jb
xchg
cs
dec
mov
push
add
cmp
repz
rclb
scas
mov
or
mov
dec
or
xor
shll
in
xor
jbe
mov
push
push
mov
cmpl
jecxz
movl
dec
ret
jno
cltd
xor
xor
aaa
dec
inc
cli
jns
movsb
inc
xor
lods
cmp
incb
lock
inc
mov
movsb
mov
and
mov
pop
stos
scas
xchg
pop
mov
out
outsb
es
mov
mov
cld
sbb
xchg
jle
icebp
adcb
loope
dec
adc
xor
mov
add
and
mov
or
aad
das
lds
push
adc
pop
adc
push
pop
pop
inc
push
jo
sub
imul
xor
push
mov
scas
and
test
in
and
and
cmpsl
jge
inc
movhps
int
pop
aaa
sbb
pop
inc
mov
jbe
jg
imul
sarb
notl
mov
push
or
clc
stc
rorb
fs
lret
mov
pop
ds
inc
cmp
fwait
mov
gs
adc
sub
mov
mov
pushf
mov
jmp
jnp
fldenv
fnstenv
inc
cwtl
mov
mov
dec
into
lret
imul
std
push
or
stc
ljmp
enter
pop
mov
ret
jae
inc
lock
out
inc
ret
movsl
mov
mov
nop
jne
push
mov
cli
sbb
shlb
popa
inc
push
mov
dec
or
jecxz
mov
sbb
pop
mov
jmp
pop
jmp
lret
ja
bound
pop
daa
and
xlat
jae
xchg
lret
scas
xchg
js
lock
sarl
repnz
mov
popa
xchg
clc
ret
mov
pop
test
or
mov
sub
addr16
int3
add
sbb
clc
mov
ret
jo
mov
repz
mov
mov
aaa
push
addr16
popf
dec
cmp
pusha
pop
xchg
push
dec
or
cs
test
sbb
mov
out
push
jb
nop
jnp
sub
add
pop
shrl
sti
xlat
mov
and
push
mov
xchg
or
jl
pop
and
xchg
xor
xchg
jns
ds
and
xlat
xorl
pop
jo
mov
xchg
ret
mov
imul
es
repz
sub
pop
hlt
or
stos
data16
or
mov
push
pop
dec
scas
inc
mov
aad
sub
test
fwait
cmp
sti
pop
fwait
aam
jle
adc
gs
lret
pop
mov
repz
gs
add
ljmp
cmp
test
mov
pusha
adc
stc
call
test
mov
push
leave
cmp
jmp
imul
pop
sub
out
pushf
xlat
and
cs
dec
and
sbb
arpl
and
or
or
outsb
cs
das
xchg
jne
scas
je
hlt
add
push
inc
pop
xchg
mov
data16
fistpl
cmp
adc
jns
push
dec
jnp
push
mov
imul
pop
jbe
mov
movsb
gs
shll
xchg
cmpsb
test
pop
xor
mov
push
xchg
dec
leave
rcll
add
adc
sbb
mov
push
fsubs
loop
cld
jmp
insl
add
xor
mov
out
lea
es
ds
insb
stos
imul
rclb
mov
inc
xchg
mov
add
or
test
mov
scas
outsl
xorb
adc
xor
mov
call
mov
and
xor
mov
cltd
lods
cmc
dec
mov
and
and
ret
test
std
and
mov
orb
in
jmp
dec
mov
int
fbld
cwtl
add
mov
pop
pushf
scas
dec
pop
inc
sbb
int3
jmp
hlt
mov
add
push
xor
fwait
testl
jmp
loope
bound
inc
repnz
lods
out
popa
adcb
aas
adcb
push
or
or
and
inc
add
rolb
jecxz
ds
mov
inc
repnz
jmp
jne
aam
mov
bound
push
or
inc
sbb
dec
fidivs
dec
icebp
in
call
fisttpll
das
mov
push
adc
adc
pusha
daa
scas
push
xchg
push
dec
jnp
pop
sbb
shr
test
loop
jo
out
inc
mov
repnz
movsl
rcrl
bound
int3
rcpps
sub
dec
dec
mov
pusha
orl
daa
fwait
cs
dec
mov
lock
cmpsb
mov
leave
lcall
test
push
scas
sub
aad
mov
mov
xchg
stc
je
cli
out
cld
gs
out
mov
mov
pop
stos
test
pop
jno
push
add
xchg
and
jo
jge
fdivr
push
inc
ret
add
jbe
jbe
scas
shll
icebp
and
test
adc
shll
ja
mov
lea
xlat
push
dec
in
jecxz
mov
fcoml
adc
nop
mov
arpl
imul
mov
jmp
pop
mov
in
add
movsl
and
adc
push
int
inc
push
or
pop
aad
gs
popf
and
jbe
outsb
cmpsb
ss
jae
mov
loop
or
add
xchg
clc
xor
dec
lgs
mov
cs
cmp
dec
xor
inc
in
fidivrs
fldl
ss
ret
sbb
scas
fisttps
xorb
repnz
mov
xchg
cwtl
mov
adc
call
xchg
pop
in
xor
sub
sub
popl
aaa
push
jno
jmp
jmp
ret
negl
mov
enter
xchg
jp
dec
dec
add
xor
int3
mov
pop
mov
pop
add
xchg
movsb
and
ret
cmpsl
jno
mov
fisubs
jae
fdivrl
ss
xchg
jecxz
jle
inc
out
out
fldenv
cmp
sub
sub
loopne
div
sbb
jbe
mov
mov
add
mov
cmc
xchg
sbb
in
lods
mov
xor
fists
cmpsb
xor
adc
pop
jae
cltd
push
repnz
sbb
imul
lods
inc
fistpl
pop
lea
std
pop
inc
fistpl
hlt
inc
enter
xor
inc
and
insb
shr
addr16
test
into
sub
insb
bound
cmp
insb
sbb
sbb
pusha
repz
in
xor
mov
lds
mov
es
or
cmpsb
scas
add
shlb
mov
adc
insb
cmpsl
subb
mov
dec
inc
cmc
rcll
adc
push
mov
mov
mov
std
mov
int
mov
add
jbe
jl
push
push
ja
repz
pop
and
pop
mov
movl
clc
inc
jne
cmpsl
shlb
xor
jle
sarl
add
das
sbb
jns
sub
mov
loopne
pop
or
pop
jl
pop
jecxz
fwait
inc
xchg
in
xor
xchg
dec
dec
std
cmp
filds
fstpl
or
adc
mov
jae
mov
out
lea
popf
mov
push
ret
xchg
je
jno
in
ret
xlat
mov
outsb
cmc
mov
cltd
jmp
ljmp
jmp
mov
mov
xchg
mov
in
rorb
cwtl
lcall
sub
scas
bound
cltd
mov
fs
jle
mov
pop
push
pop
dec
dec
cmp
sbbb
xchg
mov
and
shll
mov
ds
dec
adc
int
mov
sub
mov
les
xchg
pop
mov
dec
pop
in
xchg
adc
inc
fidivrs
lods
dec
push
mov
push
aad
add
inc
mov
sti
loop
imul
adc
enter
mov
xor
fimull
sbb
mov
jne
pop
and
xchg
test
jl
mov
les
xor
repnz
add
aas
fdivs
dec
add
lods
cltd
mov
or
mov
inc
adc
mov
mov
lret
daa
jp
sub
dec
fs
cwtl
sbb
add
cmpsb
ss
adc
repz
push
insb
into
pop
aaa
lret
pop
imul
test
jnp
pop
xchg
mov
jbe
aad
add
loop
ljmp
pop
out
and
cli
movsb
dec
cltd
cltd
jmp
daa
popf
outsl
adc
mov
cmp
arpl
stc
cmpsb
adc
fucomip
fdiv
in
fiaddl
pop
nop
xchg
xchg
push
dec
in
cmc
rclb
sub
in
dec
inc
stos
sub
cli
cmpsl
testl
jmp
mov
jl
mov
ljmp
lea
fimull
jle
jno
shr
xadd
in
and
pop
rorl
and
imul
jne
in
sub
pushf
icebp
cmp
or
mov
ss
dec
lods
sub
add
hlt
xor
fs
cmpl
mov
fwait
hlt
push
and
shl
js
addb
or
fimull
inc
cmpsb
xchg
out
dec
adc
outsl
jno
shll
lods
lock
daa
das
in
rcrb
out
pushf
mov
rol
aad
jno
or
test
fstpt
mov
fstp
das
jle
jle
or
ds
aad
mov
into
jp
jle
xor
sbb
cmp
sahf
icebp
popl
ss
adc
jle
mov
push
inc
jmp
loopne
mov
call
inc
call
mov
cmp
lret
sub
lcall
inc
roll
in
leave
inc
mov
push
jmp
mov
stos
dec
add
and
or
push
dec
push
rcr
pop
inc
jl
push
or
movsb
pop
repnz
mov
rclb
pop
js
pop
repz
cmp
jge
add
loopne
xor
scas
xor
push
jecxz
inc
sub
lcall
adc
and
add
ss
mov
pusha
mov
and
call
ret
lods
xchg
arpl
adc
adc
xchg
and
jae
nop
inc
in
add
lahf
sbb
iret
inc
push
sub
lret
or
mov
inc
sarb
xchg
cwtl
or
mov
in
call
xchg
jo
test
mov
icebp
and
dec
aad
sbb
dec
xchg
repnz
push
dec
mov
jecxz
jecxz
fmuls
sub
pop
xchg
inc
add
sub
rcrb
test
and
jo
adc
cmp
mov
fbld
imull
inc
jb
cmpsb
std
int
sbb
dec
insl
les
movsb
sub
fmuls
cmpsl
fs
sbb
iret
and
pop
popf
ror
push
xor
xchg
scas
out
cmp
inc
imul
xor
add
jle
push
mov
jecxz
mov
enter
adc
out
or
sub
cli
sub
call
pop
sbbl
daa
pop
cmc
xor
sub
sarb
mov
in
les
and
out
ja
dec
fmuls
adc
add
and
push
pop
mov
sub
pop
mov
jo
imul
movsb
jns
sub
pop
adc
mov
jmp
jnp
mov
sub
jns
pop
inc
mov
cmp
adc
mov
fcmovnu
jmp
into
lea
adcl
cld
xchg
sub
int3
push
or
pop
leave
pop
test
leave
lahf
dec
dec
test
xor
ret
inc
xchg
int
xchg
jne
jae
push
je
test
jge
push
push
add
js
addr16
push
jnp
and
add
int3
mov
lods
iret
cld
shlb
xchg
or
mov
js
data16
mov
xor
insb
stc
std
fsub
sarb
add
in
pop
fnsave
insb
ds
sub
and
fists
mov
jmp
sub
jb
jg
mov
inc
sbb
stos
jle
sbb
cmp
div
add
push
adc
lea
mov
mov
stos
mov
mov
aaa
xchg
in
sahf
addr16
in
loope
in
insl
dec
push
sbb
in
mov
aas
mov
rorl
mov
pusha
mov
inc
or
fstp
mov
xor
rcll
mov
les
jl
inc
jg
repz
cmp
dec
add
and
vpmaxsw
shlb
hlt
mov
jbe
bound
jo
imul
adc
xchg
xchg
call
sbb
cmp
sbb
cmp
inc
sbb
mov
fcomps
fadds
jle
add
pop
mov
xchg
fwait
sub
cltd
loop
int
loop
inc
clc
add
inc
aas
je
adc
rcll
adc
hlt
scas
repz
test
mov
jbe
scas
pop
je
xchg
xor
add
add
pop
pop
outsb
sbb
lret
rcll
mov
sbb
mov
sti
dec
pop
ds
aas
mov
dec
shlb
addr16
sub
sub
mov
movsb
shl
xlat
cmp
xchg
js
xor
cmp
inc
cwtl
or
mov
stos
insb
insl
cmpsb
xor
movl
bound
jge
add
into
fisttps
inc
in
in
stos
mov
mov
or
fmull
xor
mov
xchg
xchg
inc
mov
sti
mov
es
mov
jg
pop
mov
cmp
fdivrl
movsl
inc
pop
jno
mov
jae
mov
pop
sbb
lcall
aaa
add
aam
iret
repnz
arpl
pop
call
xchg
stos
jno
int
loopne
cmpsb
xchg
jb
pop
and
incl
out
pop
push
sbb
jecxz
fcmovbe
sbb
pop
jne
jg
aas
pop
jecxz
mov
fdivrl
dec
jnp
inc
pop
push
andb
pusha
sbb
out
push
clc
xor
dec
sahf
daa
stos
jae
jle
add
lea
clc
stc
imul
clc
adc
mov
pop
sbb
lret
mov
lds
push
ja
jge
sub
cmpsb
or
cltd
sub
push
add
out
loopne
lcall
pop
stos
adc
iret
lods
movsb
mov
jg
cmp
or
or
mov
test
orl
sti
aad
aaa
push
sbb
inc
cmc
mov
fsubs
mov
mov
and
and
imul
ret
push
jne
xchg
jae
hlt
dec
test
cwtl
rclb
mov
inc
dec
shrl
jmp
scas
ljmp
cwtl
mov
leave
xchg
push
adc
daa
push
jbe
inc
jo
add
sahf
ret
mov
mov
lcall
in
inc
or
cmc
insb
mov
mov
lret
cli
enter
push
sub
rorb
sbb
push
test
fsub
adcb
push
adc
call
imul
or
int
mov
mov
inc
xchg
inc
decb
mov
test
std
gs
add
and
sbb
mov
lods
pop
or
jg
push
push
iret
xchg
cwtl
test
cmp
jle
mov
cmp
sub
dec
int3
mov
mov
push
mov
pop
jmp
pop
jb
movsb
int
mov
into
xor
fldl
xlat
cmp
jmp
cwtl
je
mov
xorb
and
cmp
ficomps
sarb
enter
add
into
pusha
dec
out
mov
in
push
or
aas
pop
and
jne,pt
stos
cld
pop
movsb
imul
add
mov
pusha
push
nop
das
in
jge
scas
pop
pop
pop
in
and
repnz
dec
or
fstl
fstl
mov
in
dec
sbb
imulb
scas
mov
sub
push
push
inc
cs
fisubrs
ret
in
dec
pop
inc
mov
add
inc
into
arpl
mov
mov
cld
inc
sarl
sbb
or
popa
or
fidivrl
stos
in
mov
mov
cld
aas
in
incl
or
xchg
xor
mov
popa
mov
nop
dec
stc
jae
stos
in
adc
fsubrl
lret
in
nop
pop
jb
fsubrl
rcll
popf
mov
mov
rorl
dec
and
and
and
and
lahf
popf
js
cld
repz
pusha
or
lahf
or
gs
sbb
sahf
js
jne
icebp
push
dec
rorl
add
test
mov
or
ret
imul
xchg
testb
mov
xor
mov
adc
sbbb
and
jb
mov
in
cmp
inc
jmp
je
shrb
cli
pushf
lds
int3
nop
stos
cs
or
or
mov
flds
out
arpl
arpl
icebp
je
lret
lea
imul
pop
loop
in
js
push
xchg
lock
repnz
loope
shl
cmp
push
jmp
or
bound
scas
mov
dec
push
jl
add
push
add
inc
daa
cltd
cld
rcl
and
cmp
sbb
popa
or
sub
int3
sub
dec
sub
jecxz
mov
dec
push
nop
pop
adc
lock
scas
lock
xlat
pop
mov
xchg
int
jnp
push
sti
jnp
or
inc
and
scas
push
adc
mov
jnp
fwait
call
ret
loope
repnz
cltd
mov
push
and
adc
or
sbb
fisubl
sbb
inc
jo
nop
cmp
mov
jmp
jnp
outsb
push
xchg
je
xchg
nop
push
jnp
inc
loop
imul
incb
push
pop
dec
loop
push
shlb
sbb
stc
and
xchg
sldt
push
je
ret
dec
inc
pop
rcrb
mov
sbb
sarb
stos
add
add
xchg
out
cwtl
mov
dec
xlat
mov
pop
lcall
adc
jno
inc
mov
les
cmp
mov
inc
shl
lock
cmc
mov
jae
in
jp
jecxz
mov
jbe
in
into
push
pop
out
mov
movsb
rorb
in
and
dec
jb
movsl
dec
rorb
jecxz
mov
jecxz
pop
adcb
cmpsl
test
div
lret
ss
rorb
add
aaa
sbb
or
iret
rorl
jl
movsl
inc
mov
cld
pop
ret
imul
inc
adc
js
lret
xchg
inc
test
jno
xchg
or
rcl
mov
and
push
test
cmp
test
jmp
into
adc
push
xor
dec
or
add
fisttps
jo
add
into
mov
in
addr16
jmp
inc
aaa
push
pop
jb
int
shrb
inc
cmc
dec
xchg
add
adc
push
and
mov
jnp
push
add
push
popa
pusha
ret
insl
fucom
das
sub
lods
lret
mov
scas
hlt
dec
int
and
push
sbb
bound
inc
imul
lcall
pop
xchg
addr16
inc
repz
jb
push
fucomip
aaa
xchg
push
lods
jb
dec
pop
dec
adc
mov
test
adc
jo
cwtl
test
jno
loop
jb
adc
iret
push
test
ret
nop
in
insl
mov
dec
es
and
lret
sbb
pop
std
aas
jbe
inc
adc
outsl
dec
sbb
loopne
cmp
dec
jp
daa
fisttpl
mov
pop
fdivl
stc
rcrb
cld
arpl
push
cmp
xor
ficoml
mov
mov
push
jb
subb
sbb
jne
addr16
xor
out
add
inc
xor
sahf
jp
es
sarb
addr16
sar
mov
adc
roll
sbb
cmp
ror
dec
mov
and
push
xchg
mov
test
imul
mov
mov
ljmp
fidivs
aas
stos
loop
jge
cmp
add
mov
pop
xor
pusha
test
ds
and
mov
push
cld
imul
std
mov
int
rolb
hlt
fldcw
mov
xor
dec
cmpsb
int3
push
xchg
sbb
inc
subl
sub
and
jne
jle
in
jne
add
jae
test
cld
push
outsl
mov
push
arpl
push
or
pop
testb
and
mov
xchg
jns
fwait
aad
xchg
ret
fnstsw
xlat
lahf
adc
jb
movsl
push
repnz
cmp
xchg
cmp
dec
jb
sbb
in
add
es
daa
out
out
sub
xchg
adc
xor
xlat
push
cmpsb
lods
in
out
sbb
pop
movsl
mov
and
ljmp
jecxz
sbb
insb
push
push
ljmp
rolb
cmp
scas
mov
pop
cmp
sbb
mov
scas
call
sub
sbb
daa
dec
inc
add
push
movd
out
loope
jb
loope
push
out
jmp
xor
sub
mov
jae
cwtl
cmpsl
cmpsb
and
xchg
dec
and
mov
aaa
test
ljmp
shrb
sub
inc
lods
push
xchg
leave
mov
ret
test
mov
and
in
dec
dec
jg
test
mov
push
or
repnz
stos
push
inc
xchg
test
mov
lahf
push
push
adc
mov
movsl
push
add
fdiv
dec
push
aad
call
xor
jnp
lods
loopne
aas
or
mov
dec
adc
lods
or
add
mov
je
fprem
data16
into
xchg
mov
int3
loope
iret
cld
xor
rclb
insl
cltd
mov
divb
sub
pop
pop
movsl
in
xchg
stc
push
aam
and
popa
mov
ficoml
mov
mov
repnz
fsubrs
cmpsb
inc
mov
jno
ss
and
xor
movsb
jg
stos
outsl
lods
jp
outsl
loop
shrl
inc
nop
jno
js
aad
es
call
xchg
ret
pop
dec
stos
das
mov
mov
push
xor
pop
or
aaa
push
js
mov
popa
mov
enter
gs
imul
ds
push
add
xor
sbb
pop
sub
stos
std
bnd
outsl
mov
rclb
mov
mov
adc
mov
psubw
fwait
mov
mov
add
sub
cltd
jmp
jae
jl
jnp
in
fidivrs
pop
int3
jb
adc
jecxz
mov
and
int3
xlat
and
add
adc
sar
pop
std
sbb
mov
frndint
insb
dec
push
cmp
cltd
enter
movsb
sbb
pop
lcall
sbb
pop
mov
ljmp
ja
push
cmc
out
adc
fdivl
jb
std
and
xchg
push
mov
mov
jl
push
or
xchg
sub
jl
ja
fidivrs
dec
xchg
mov
rolb
push
fnstsw
push
mov
push
lods
adc
and
and
xor
push
cs
mov
mov
mov
aaa
ss
mov
addr16
fs
aad
rcl
xchg
mov
pop
stc
icebp
into
out
pop
movb
xchg
sub
adc
sub
es
or
sub
xchg
inc
push
lods
sub
adc
aaa
int
jmp
jb
mov
xor
sbb
adc
or
subps
dec
daa
out
adc
leave
sarl
pushf
or
xchg
push
jbe
test
lods
xchg
fldlg2
negb
es
rcll
fucomi
cltd
dec
mov
in
mov
mov
xor
dec
mov
insb
and
iret
xor
xlat
stc
mov
push
mov
mov
mov
or
sub
lods
sbb
imul
cmp
xorb
jmp
lret
inc
push
repnz
cmc
fwait
mov
sbb
xor
pusha
lcall
shlb
jmp
data16
inc
in
mov
sbb
orl
int
and
test
xchg
insb
jge
pop
and
shlb
jmp
or
pop
leave
adc
jno
into
xchg
fidivs
jmp
ljmp
xchg
pop
mov
popa
sbb
jl
dec
cmpl
imul
popa
mov
bound
cmpsb
xchg
and
or
fidivl
pop
dec
cmpl
les
cmp
sub
enter
cmp
ret
ds
push
sbb
dec
jge
fsts
xorl
inc
jne
xor
xchg
fcomps
divb
sbb
aas
pop
pop
inc
lods
aam
push
xchg
out
movsb
mov
cmp
cmc
sbb
clc
cmpsb
add
jg
xchg
iret
outsb
sysret
cmp
ds
je
jecxz
xor
mov
dec
fisubl
mov
and
inc
pop
lcall
xchg
ret
lcall
mov
dec
push
and
mov
clc
inc
sarb
in
mov
out
jecxz
or
outsb
mov
sti
insl
cmp
and
xchg
and
mov
add
les
imul
dec
imul
push
cmpsl
loop
or
mov
adcl
shrl
push
outsl
sbb
jmp
lahf
scas
aad
fsubrp
adc
sti
aam
lahf
test
dec
out
or
call
adc
inc
sbb
orb
jns
jno
fucomp
mov
push
cs
into
shl
into
sub
sub
push
mov
call
push
aam
cmp
repz
xor
daa
add
jno
movl
xchg
push
pop
bound
push
xor
mov
aad
cwtl
loopne
pop
xchg
jmp
sbb
add
sub
out
xor
dec
mov
nop
mov
bound
push
xchg
pop
mov
lea
in
jnp
and
push
sbb
inc
adc
pushf
adc
mov
outsb
pushf
xchg
mov
cmp
jmp
xor
scas
xor
sub
mov
sub
fldln2
xorl
cld
icebp
push
adc
or
ss
test
mov
movsl
je
xor
stc
data16
and
adc
lret
push
sub
mov
fwait
stos
and
add
mov
jb
jb
sub
repnz
and
sbb
inc
nop
sbb
sbb
pop
add
fdivs
xchg
jo
roll
cmovl
addr16
fmull
loop
test
fidivrs
fldl
or
inc
rcrl
push
dec
jecxz
pop
cli
sub
sub
into
mov
adc
les
popf
add
gs
lds
loope
aad
and
lods
sar
cmp
pop
into
inc
pushf
or
decl
in
int3
add
enter
add
inc
loope
push
xor
add
dec
pop
andl
jg
sub
inc
mov
adc
dec
lcall
js
mov
mov
rol
sbb
push
xchg
mov
faddp
push
or
jle
mov
xchg
cmp
sub
pop
inc
enter
pop
pusha
fs
sbb
mov
push
add
mov
xorb
dec
xor
cmpsb
xchg
stos
adc
mov
lret
jmp
popf
xor
and
jmp
sbb
dec
mov
xor
ljmp
mov
nop
mov
and
push
test
jnp
call
xor
sub
dec
push
and
lret
jle
pop
jmp
xchg
imul
pop
cmp
repz
lds
mov
xor
std
out
je
sub
arpl
stos
sub
mov
clc
push
scas
in
cmp
mov
push
js
push
xchg
push
xchg
lcall
out
push
out
sbb
mov
push
push
push
push
sbb
adc
mov
push
pop
mov
mov
nop
adc
mov
out
mov
add
sahf
jnp
mov
mov
push
jmp
scas
jbe
rcr
push
lods
push
arpl
inc
xchg
sub
push
sub
pop
pusha
call
push
or
cmp
mov
mov
inc
cmp
cmp
aam
and
add
mov
mov
daa
in
jnp,pn
cmp
sub
std
and
and
mov
dec
or
ss
dec
jg
cmp
mov
or
daa
nop
or
push
add
sub
inc
push
mov
adc
ss
cltd
das
xchg
cmp
aad
mov
shrb
jbe
das
or
push
and
scas
imul
and
fucomp
lods
mov
sub
adc
sub
xchg
add
jl
add
je
push
ja
xor
jg
test
add
inc
add
enter
lcall
pop
pop
mov
mov
clc
fldenv
cmp
call
dec
inc
cwtl
pusha
sub
push
insl
xor
push
pop
xchg
imul
ss
xlat
icebp
pop
adc
ljmp
fiaddl
js
cmp
shl
jl
lds
push
xor
lock
int3
inc
fwait
push
div
jp
sti
sub
sub
insb
in
fstpt
cs
add
mov
pop
insb
into
jg
or
mov
cmp
in
jne
cmp
and
jo
mov
addr16
xlat
lods
imul
push
das
dec
cld
cmp
je
jnp
fdivrs
or
les
lahf
stc
popf
mov
dec
sbb
pop
faddp
loope
bound
xchg
or
cli
and
aaa
dec
fwait
mov
pop
cmp
mov
mov
aaa
aam
in
out
test
adc
push
je
stos
mov
inc
mov
sub
imul
shlb
aam
inc
subl
sbb
in
call
adc
adc
pop
adc
sti
add
icebp
add
adc
mov
les
loop
push
sub
stos
jae
imul
cld
sbb
movsb
addr16
cltd
loopne
fwait
stos
cmp
push
mov
sar
inc
push
add
test
test
xor
rclb
lods
shrb
fwait
pusha
icebp
sti
leave
jae
fs
sahf
mov
xchg
or
xor
inc
mov
rcll
mov
cmp
scas
sub
dec
mov
sbb
out
adc
movsb
adc
jmp
mov
test
test
lret
sbb
test
mov
lcall
cwtl
jno
js
mov
add
mov
lret
xchg
sbbb
mov
sar
sbbl
scas
and
mov
enter
int3
push
test
mov
and
or
test
aad
sahf
dec
rcl
and
mov
iret
jnp
inc
js
ljmp
fldenv
lods
pop
xchg
mov
fwait
lods
int3
jmp
xchg
aaa
shll
mov
sahf
dec
dec
cmp
xor
push
inc
xor
idivl
jl
adc
mov
jns
cmp
ficompl
xor
mov
cwtl
test
fwait
and
pop
daa
popf
test
xor
ret
repz
cmpsb
mov
xchg
xchg
mov
and
sbb
mov
clc
mov
cmpl
iret
add
push
loopne
jbe
adc
xor
mov
out
or
fisubl
mov
sbb
xlat
out
lock
sub
pop
mov
add
jbe
es
out
or
sbb
cmp
arpl
or
xchg
frstor
lahf
fwait
aaa
icebp
push
mov
mov
lahf
mov
lea
dec
sbbb
xchg
outsb
adc
mov
dec
movsl
lret
inc
fidivrs
sub
add
fisubl
xor
hlt
movsb
sbb
stos
aaa
pop
call
sarb
adc
mov
in
pop
out
jle
mov
arpl
fcmovnbe
sti
push
in
xor
and
xor
jnp
aas
pop
or
mov
popa
movsl
loope
cmpsl
push
movsl
bound
push
fwait
imul
inc
nop
inc
inc
sub
mov
adc
dec
pop
push
lret
jo
cmp
pop
pop
lahf
mov
pop
cmp
aad
sti
pop
pop
cli
xor
iret
cmp
xchg
mov
int
push
lods
xorb
xor
in
mov
sbb
mov
cmpsl
je
mov
mov
sti
stos
insl
adc
pop
shll
dec
mov
push
mov
insb
aas
fcomps
xor
ja
and
fisubrl
push
dec
jno
jge
mov
dec
in
sar
data16
mov
push
push
push
sysenter
mov
fadd
int3
lods
mov
mov
orl
inc
cmc
js
aas
dec
xchg
js
test
sbb
bound
jecxz
and
fnstenv
push
sub
adc
cmp
mull
je
inc
insb
xor
in
xchg
bound
popa
push
add
sub
popf
pop
loopne
stc
hlt
sub
leave
adc
fisubl
sbb
hlt
sahf
dec
jge
in
mov
mov
in
stos
or
clc
and
mov
out
cli
mov
int
push
cltd
ret
test
fs
push
sub
sti
ljmp
pop
addr16
and
fcoml
push
and
cli
call
inc
adc
cmp
mov
push
ja
mov
mov
xchg
adcb
aaa
push
gs
sbb
pushl
push
pushf
mov
test
xlat
fisubrs
sahf
and
std
push
sahf
xchg
mov
jmp
lods
in
mov
xor
lea
fsubrs
mov
xchg
mov
insl
sub
fldpi
add
mov
xchg
sub
popf
roll
notl
mov
int3
mov
daa
dec
out
xor
sbb
xchg
stos
loopne
popf
push
lahf
xor
jb
cmpsl
push
add
cmp
add
repnz
je
or
roll
pusha
ret
filds
repnz
push
insl
test
std
xchg
cmpsl
test
cmpb
push
rorl
mov
test
adc
mov
fcoms
ret
xor
push
aas
icebp
lock
xor
shrl
jmp
jmp
cmp
sub
mov
std
add
jl
clc
lahf
pop
jl
dec
test
ljmp
sysret
cmpsl
out
jnp
repz
add
negb
mov
or
jb
out
cmp
pop
fs
fxch
sbb
pop
xor
mov
into
mov
ss
or
scas
mov
inc
ja
sub
jae
cmp
inc
lcall
cmc
and
sub
fwait
mov
ret
push
jecxz
leave
mov
jl
xchg
add
lret
and
cmp
cmp
cmp
pop
sbb
push
push
add
and
sub
fldt
sub
push
lods
dec
jno
jbe
sub
std
and
bound
cmc
mov
mov
sahf
sahf
jne
adc
ds
mov
mov
xor
or
adc
mov
jge
or
sbb
clc
cmp
add
or
lahf
pop
les
add
dec
and
dec
inc
mov
xchg
call
or
mov
js
xor
popa
cld
cmp
push
inc
and
sbb
push
push
mov
mov
push
push
cltd
roll
shlb
sub
xor
dec
popf
cmp
out
test
mov
push
xor
sub
mov
aad
xor
loopne
and
das
sub
outsl
lock
push
lods
xor
jne
lahf
mov
fildll
movsl
repnz
in
mov
fldenvs
dec
mov
bound
icebp
int
or
mov
pop
sbb
push
push
jp
aas
push
lock
mov
lcall
dec
roll
cmp
arpl
dec
data16
mov
mov
icebp
and
pop
mov
inc
sub
shll
and
mov
mov
out
icebp
push
lret
jbe
bound
jbe
xchg
fsubrp
inc
cmp
pop
push
rorb
mov
push
loopne
jno
and
xchg
insb
insb
testb
aaa
cpuid
mov
ds
dec
and
xorl
popa
mov
out
fldcw
cmc
inc
inc
inc
inc
add
in
adc
into
sbb
cmpsl
push
pusha
jl
cmp
or
adc
mov
inc
shlb
inc
or
xor
or
ljmp
xor
sub
jno
das
cs
fwait
subl
mov
pop
xor
ss
mov
leave
cltd
cs
insb
and
fistps
ljmp
sbb
rclb
xchg
dec
test
mov
jmp
daa
sub
jecxz
test
aam
jnp
mov
leave
fs
add
xchg
jae
shrl
cmp
mov
sti
fnstsw
pop
xchg
xchg
cltd
out
out
or
or
ret
popa
jbe
jg
jno
jbe
jge
out
xchg
rol
lcall
jle
ljmp
call
lea
aas
and
xchg
jl
or
fnstenv
dec
fcoml
movl
jl
es
pop
and
out
jnp
xor
mov
bound
mov
push
dec
pop
ljmp
mov
jns
mov
mov
inc
push
push
lret
dec
mov
sbb
imul
aas
in
test
movsb
mov
sub
daa
mov
bnd
scas
and
xchg
or
outsb
dec
pop
jno
test
stos
xchg
jmp
test
add
mov
aad
jmp
push
pop
mov
ret
dec
fistpl
shrb
les
out
shlb
lret
in
scas
test
sahf
and
xchg
mov
popa
frstor
addb
hlt
dec
idiv
popa
or
xchg
and
or
repz
mov
cmpsb
mov
mov
std
in
out
testl
push
cld
adc
stos
fdivrl
popa
je
in
jnp
into
add
je
repz
pop
iret
cmpsb
sbb
rolb
jle
and
pop
xchg
and
and
pop
mov
into
inc
iret
daa
les
adc
arpl
ljmp
xor
cmp
stos
out
orb
fbstp
movsl
sub
jnp
xchg
or
rolb
gs
scas
jno
in
into
loope
push
aam
cmpsl
dec
bound
inc
test
loop
mov
test
ss
shll
loopne
sub
in
fcoml
pushf
movsl
dec
std
adc
push
aam
in
add
mov
iret
out
xor
outsl
cmp
jecxz
insb
fisttps
jbe
jb
rcl
pop
jno
cmpsl
mov
lcall
in
jg
push
and
cmpsb
dec
imul
push
push
xor
inc
sub
sahf
pop
ror
pop
iret
data16
mov
mov
cmp
scas
or
and
mov
mov
xchg
mov
jno
test
push
out
movsb
repz
in
adc
adc
cmpsl
arpl
sarb
aad
xchg
inc
sbb
lods
cltd
fimuls
inc
dec
orb
aas
in
imul
sub
cmpsb
cmp
sub
cmp
mov
mov
mov
mov
xchg
cltd
inc
pop
sub
imul
cmp
mov
adc
cmc
out
mov
xchg
mov
lahf
mul
insl
mov
mov
adc
pushf
gs
movsl
push
sbb
push
mov
dec
xchg
repz
and
inc
daa
fldl
movsl
dec
pop
sub
xchg
xchg
dec
mov
scas
adcl
mov
nop
fdivrs
pop
mov
aaa
iretw
jmp
in
mov
sub
lds
pop
mov
sbb
cmp
mov
loope
sbb
popa
xor
sub
adc
fidivrl
mov
outsl
test
js
aaa
in
adcl
add
sahf
rol
adc
inc
pop
sub
cs
inc
insb
mulb
add
fidivs
jp
mov
or
fstpl
mov
jae
xor
test
or
in
outsb
pop
push
pop
loop
lcall
daa
ret
sub
pop
test
push
adc
add
or
xchg
lcall
rep
xchg
js
xor
ss
ret
fwait
inc
nop
push
pop
jle
dec
daa
add
sub
sbbl
adc
xchg
or
outsl
mov
in
inc
fbstp
sahf
mov
fstpt
push
mov
sbb
sbb
pushf
adc
shll
push
xor
or
sbb
adc
sbb
mov
add
xor
jmp
ret
fimull
aam
iret
cwtl
lcall
aam
cmp
shll
inc
lret
add
xchg
cmp
test
popf
rcr
enter
aaa
popl
insb
mov
movsb
in
shll
inc
mov
hlt
call
mov
and
lods
enter
mov
cld
addb
repz
cmp
xor
lcall
popa
xor
or
xchg
adc
movsl
pusha
cmp
lcall
daa
clc
pushf
dec
leave
arpl
int
jle
jmp
into
lods
and
lods
or
call
cmp
jae
sar
insl
jae
inc
mov
loopne
mov
jne
ret
xchg
mov
dec
cwtl
sbb
repz
sbb
lret
shrb
mov
xor
pop
add
sbb
xor
cmc
test
and
inc
jns
push
das
pop
mov
mov
je
outsl
cwtl
cmp
mov
jge
les
loope
pushf
sub
jne
sbb
sbb
out
repz
les
inc
push
pop
fnop
adc
imull
fists
lods
call
xchg
mulb
sub
mov
inc
push
stos
xor
fisttps
cmc
ret
cwtl
cmp
dec
pop
lods
mov
cli
out
pop
and
push
inc
dec
mov
stc
xchg
jbe
in
aas
lock
inc
dec
sti
mov
stos
pop
call
loopne
test
aas
mov
cmp
sub
shl
cwtl
mov
mov
icebp
sub
test
cmpsb
shr
mov
lahf
repz
rorb
lods
push
scas
into
in
in
or
test
gs
sbb
mov
xor
icebp
les
cld
adc
adc
push
cmp
cmp
and
cmpsl
out
out
xorl
fisubl
ds
dec
mov
jle
insl
aaa
mov
or
mov
aad
jne,pt
add
sbb
lcall
dec
and
jl
sbb
rcrb
mov
and
xor
imulb
xchg
adc
call
loope
iretw
and
sbb
and
nop
pushf
adc
push
cmp
pop
jmp
adc
xchg
ja
fisubrl
add
dec
cmp
push
fs
mov
stos
and
outsb
push
inc
mov
sarb
inc
repz
xor
lods
mov
les
xchg
or
mov
outsb
xchg
push
inc
and
xchg
je
push
add
lods
stos
imul
popa
and
cmp
pop
pop
cmp
ja
mov
xchg
mov
dec
pop
cmp
test
cmp
aam
lret
pop
jnp
mov
jbe
cwtl
cli
mov
loope
lret
push
mov
xchg
cli
jae
cmp
mov
jecxz
rcll
clc
cld
ljmp
mov
mov
data16
aam
sub
subb
mov
repz
movsl
inc
out
xlat
repnz
dec
jne
call
push
dec
jecxz
vmread
clc
push
xor
pop
pop
sbb
out
mov
ds
jae
xor
jne
fwait
adc
or
xor
ret
inc
lret
aas
ljmp
cmp
add
repz
into
std
daa
cld
fmuls
push
ljmp
push
lock
jge
mov
leave
xchg
decl
gs
lret
dec
daa
pushf
dec
outsl
and
bound
jnp
push
sbb
ds
in
mov
cmpb
out
jge
add
or
mov
adc
fdiv
inc
xor
fisubrs
pop
and
cld
icebp
mov
inc
mov
xchg
iret
pop
adcl
xchg
shlb
mov
mov
add
sbb
nop
movsb
imul
mov
shrb
rcll
mov
dec
xor
sbb
mov
leave
ficompl
fisubrl
mov
sub
push
xlat
jmp
int3
mov
leave
pop
in
cwtl
push
push
scas
cmpsb
push
std
xor
jecxz
in
inc
cmpl
mov
sbbl
stos
cmc
pusha
jle
sbb
notl
sbbl
popf
insb
std
aaa
add
add
sub
xchg
icebp
push
mov
jno
jp
lea
scas
dec
push
add
mov
lea
data16
xor
or
pop
sbb
orl
adc
jle
jbe
out
or
pop
negb
fcoml
sti
adc
pop
jb
popf
flds
outsl
push
cwtl
scas
out
sub
mov
fcomp
pop
ss
mov
cmpb
inc
adc
lock
jp
arpl
sahf
xchg
push
inc
jecxz
enter
sub
cmp
leave
inc
movsl
pop
rep
aaa
jb
dec
jne
xchg
or
rolb
adc
cmp
pop
aam
xchg
lods
dec
mov
int3
jg
xchg
cmp
scas
jg
imul
std
les
loop
sarb
inc
lcall
test
fld
lahf
mov
jnp
push
lret
in
clc
sbb
loop
push
cltd
sub
cmp
in
imul
lret
daa
cmpsb
xor
clc
sbbl
mov
sahf
mov
movsb
stos
mov
mov
jae
gs
repnz
xor
stos
push
push
xor
scas
aaa
fdivp
scas
dec
stos
in
ret
loopne
and
insb
mov
adc
jbe
and
inc
sbb
aas
mov
xchg
in
in
cmpl
cmp
or
fcomps
inc
jne
adc
stc
mov
icebp
xchg
xchg
js
cmp
pop
cmp
mov
neg
lds
sarb
jo
repnz
cld
dec
clc
add
daa
aas
sub
int3
and
mov
cmp
or
iret
sbb
xchg
mov
loopne
jg
sub
push
sbb
sub
lea
lods
pop
into
fcomp
and
cmp
lret
in
cmp
insb
rcl
clc
jecxz
sbb
push
lea
jno
aam
fcmovbe
data16
jo
mov
loop
adc
push
ret
adc
jb
outsl
push
jle
pop
insb
adc
test
xchg
in
shrl
adc
std
mov
lret
push
jo
aas
aas
xchg
and
or
sbb
int3
out
mov
scas
ret
sbb
in
int3
lahf
cmp
xor
lret
jl
sbb
lods
out
push
jo
adc
xchg
dec
in
je
xchg
adc
pop
pop
dec
mov
stos
inc
into
sbb
push
sub
cld
xchg
mov
shr
push
ljmp
daa
mov
out
lret
push
mov
inc
mov
popf
cmp
cs
notb
and
lods
jg
pop
scas
scas
adc
hlt
or
imul
add
and
rorb
and
outsl
cmp
mov
mov
and
ficomps
scas
mov
push
xor
ss
jp
jl
clc
lock
or
adc
fistpl
scas
subl
mov
divl
add
fisubrl
movsl
sub
shlb
sub
pop
mov
ljmp
cmp
les
pusha
jle
mov
scas
pop
mov
inc
xchg
dec
sbb
repz
movsb
push
mov
insb
cmp
fwait
adc
repnz
sqrtps
jbe
mov
and
fnstsw
mov
xchg
pop
nop
stos
out
sbb
pop
xchg
jl
add
xor
arpl
daa
jnp
int3
icebp
push
ljmp
cmp
les
mov
fwait
or
fcompl
rclb
inc
add
mov
stos
add
sbb
dec
adc
cmc
aas
jle
sbb
cmpsb
cmc
inc
inc
sub
xlat
std
loopne
mov
xlat
or
ds
cwtl
and
rcl
mov
lea
imul
pushl
cmp
mov
scas
ja
out
aam
xor
push
inc
sti
dec
push
jle
xor
divb
jle
xor
adcb
jo
or
sub
xlat
mov
cmc
sarl
pop
std
and
lcall
dec
mov
or
test
arpl
jmp
xchg
xor
stc
rcrb
lret
jp
add
aaa
cmp
cmp
cmc
sarb
lds
ret
ss
add
flds
mov
add
js
inc
popa
test
je
stos
fidivrs
inc
fmuls
outsb
xchg
xchg
cs
push
push
mov
mov
xor
or
hlt
or
arpl
mov
nop
arpl
or
cmc
cmp
mov
das
mov
cmp
addr16
cli
arpl
push
aad
mov
scas
sbb
mov
sbb
cmc
lcall
icebp
les
add
mov
ret
nop
pop
and
mov
jnp
jb
adc
inc
pusha
rcr
shlb
mov
aas
cmc
fsubr
jp
nop
and
xor
hlt
mov
bound
clc
es
and
pop
xchg
push
mov
imul
push
loop
sub
mov
jno
ss
insb
jecxz
sbb
rcrb
adc
sahf
fsubr
jo
add
jnp
hlt
loopne
cmp
pop
sbb
or
fdivrl
ret
lods
dec
mov
cmp
or
xor
xchg
test
mov
mov
call
andps
push
cli
dec
sbb
mov
jmp
movsb
in
xlat
iret
fsubl
into
add
rol
fs
mov
xchg
stos
jle
js
push
dec
pop
sbb
cli
loopne
mov
add
aaa
jge
movl
andl
cmp
dec
enter
lods
ret
cs
data16
adc
mov
sub
int3
jp
scas
jb
popf
xchg
adc
div
adc
pop
cmp
fidivrs
xchg
mov
add
jecxz
lahf
test
and
dec
sub
sub
test
pusha
fisttpll
divl
push
jne
cmp
pop
inc
pop
subb
or
incb
push
xor
je
jp
outsl
lds
fnstsw
inc
cmpsl
or
out
push
fwait
mov
loope
outsl
push
test
orb
fcom
clc
popa
dec
inc
jg
add
div
ds
loop
lcall
mov
mov
sub
xchg
insl
push
inc
rcrb
pop
lcall
jmp
jo
jmp
jmp
jo
fwait
push
rcrl
cli
mov
cmp
stc
icebp
sub
popf
adcl
repz
sbb
fistpl
cmpl
adc
stc
mov
sarl
test
cmp
repnz
outsb
adc
pop
mov
push
and
push
jle
int3
add
cmp
fistpll
sbb
test
mov
inc
mov
push
push
mov
jae
mov
loope
das
sub
jo
fisubrl
mov
inc
lods
shlb
push
stc
sbb
aam
lds
sbb
inc
icebp
cmp
ret
sbb
adc
movsl
cwtl
mov
sub
les
or
test
sub
std
dec
push
in
xchg
and
push
aad
mov
pop
hlt
imul
push
sbb
bound
push
sbbl
sub
xor
cmp
jecxz
cs
inc
dec
outsl
imul
xor
mov
jmp
sub
data16
mov
xchg
jbe
popa
xlat
xor
popf
adc
jns
scas
push
cmp
push
xor
lds
dec
and
lds
hlt
sarl
mov
jecxz
adc
and
popf
nop
xchg
xchg
mov
jae
fld
mov
stc
fnsave
test
jg
stos
push
add
test
pusha
enter
cmp
insl
jb
fcomps
sub
out
or
mov
adc
sub
mulb
add
inc
push
nop
sbb
dec
dec
push
mov
add
sub
xchg
test
mull
je
push
dec
idiv
ljmp
flds
sarb
inc
jg
dec
mov
inc
daa
or
cmp
push
xchg
je
leave
in
xlat
inc
push
mov
push
test
sbb
inc
add
xlat
sahf
testl
enter
out
add
sbb
movsb
xchg
jne
pop
gs
push
jmp
filds
fstl
sub
nop
dec
sbb
fs
clc
out
inc
sub
mov
xchg
mov
jle
in
test
sub
popa
outsl
inc
cmp
xor
mov
out
xchg
push
sub
shrb
cli
hlt
mov
sub
mov
loope
inc
hlt
or
mov
lret
inc
xor
lret
sbb
sarb
cli
gs
push
mov
cmpsb
out
shl
inc
sub
xchg
and
lock
mov
push
sub
xchg
fisttpl
aam
pmulhuw
arpl
das
cmp
mov
clc
call
stc
punpckhdq
rolb
mov
mov
pusha
mov
cmpsb
aad
inc
das
push
jbe
sbb
pushf
dec
sub
xchg
mov
shrb
fisubl
xorl
xchg
cwtl
ds
xchg
or
int
mov
pop
sbb
ljmp
jo
xor
xchg
cmp
hlt
mov
pop
mov
in
outsb
pop
loope
iret
adc
ret
roll
out
sub
popf
xchg
aam
stc
and
call
ljmp
test
mov
in
movsl
mov
pushf
sbb
dec
test
mov
jbe
in
out
mov
mov
xchg
mov
lds
cld
hlt
stos
mov
flds
add
popa
sbb
repnz
cwtl
mov
stc
ljmp
jns
in
ret
cmp
mov
aad
imul
mov
leave
sbb
pop
jp
jne
cs
push
mov
or
mov
outsl
lds
das
mov
push
ud1
push
inc
insl
dec
les
in
pop
push
xchg
aaa
and
pop
leave
dec
or
in
push
jle
idivb
jno
adc
nop
iret
inc
adc
add
filds
mov
mov
ror
cli
in
lock
mov
dec
fbld
out
aad
pusha
stos
pop
sbb
sti
mov
mov
sar
ds
mov
and
add
fsubr
xsave
jnp
pop
fdivp
jns
adc
jb
xchg
push
xchg
sub
xchg
adc
js
xchg
sbb
adc
stc
das
in
insb
jnp
call
stc
movsl
push
repnz
loop
mov
fs
xchg
pop
insb
ljmp
pop
outsb
loop
dec
int
push
or
outsb
mov
adc
scas
ficoml
push
or
lods
sbb
repz
fadds
ret
dec
mov
dec
adc
aas
test
test
andb
add
jp
mov
adc
dec
insl
add
js
sbb
std
dec
mov
test
push
test
ret
and
int3
cmp
pop
addr16
insb
repnz
cmc
xchg
stos
daa
andl
push
ja
jp
test
imul
leave
movsl
lds
fwait
neg
mov
xchg
jne
dec
mov
outsl
lahf
and
out
pop
movsb
and
filds
pop
shr
xchg
add
dec
push
push
xchg
pop
bound
mov
nop
dec
pop
and
fbstp
jmp
sub
and
fnstenv
xor
sbb
jmp
pop
int3
jmp
lock
bound
lcall
inc
mov
jbe
jg
fnsave
push
mov
add
push
adc
pop
push
sbb
cmp
dec
add
or
pop
sbb
cwtl
subb
je
add
mov
int3
out
fwait
dec
xor
mov
sahf
in
push
shlb
test
inc
xchg
jl
out
mov
add
fs
mov
ja
cmpsb
add
bound
mov
adc
jno
xchg
imul
shll
lds
add
or
aad
lods
adc
sbb
xchg
stos
mov
les
xor
clc
popf
and
push
and
pop
pop
or
rol
pop
add
sbb
clc
rclb
pop
cmpsl
jb
aad
cmp
mov
push
test
mov
cmp
addr16
xrelease
arpl
fxam
cld
and
aad
sub
mov
sbb
lea
push
and
fcomip
inc
cmp
or
je
or
jp
adc
inc
shr
mov
sub
push
popa
js
out
pusha
jle
pop
orb
ljmp
jnp
repz
cmp
fimull
cld
dec
rol
dec
fildll
add
mov
in
data16
cmp
xchg
inc
loope
pop
mov
out
stos
dec
push
jo
lahf
cmp
adc
ret
mov
sarb
pop
adc
sub
push
mov
sbb
in
sbb
push
inc
leave
cwtl
mov
dec
pop
cmp
inc
push
add
hlt
jbe
mov
cmp
xchg
adc
push
xchg
lahf
pop
repz
mov
sbb
clc
pop
xchg
and
xchg
adc
xchg
adc
push
cmp
and
jmp
xor
xchg
mov
inc
sar
aad
cmc
pop
cltd
lea
push
sti
pop
mov
subb
test
dec
adc
dec
nop
into
fwait
out
inc
inc
lods
js
sahf
inc
push
sbb
mov
jae
or
push
or
mov
stc
fucom
jne
push
mov
scas
aas
pop
int
shlb
push
jbe
push
xor
push
sahf
cwtl
sub
cs
jle
xlat
mov
ljmp
or
cmp
push
repnz
push
lahf
push
xchg
and
dec
daa
ljmp
in
jne
test
imul
pusha
ss
cmpsb
in
push
gs
insb
stc
in
mov
jne
neg
inc
cli
mov
sbb
pushf
out
pop
arpl
mov
sub
loopne
mov
mov
jecxz
mov
xchg
cmp
iret
dec
xor
cld
int
push
outsb
test
inc
pop
rolb
dec
js
fnsave
rclb
ss
roll
hlt
adc
in
xchg
ret
popf
cmovp
dec
dec
dec
sub
cmp
push
fbstp
out
test
daa
pop
enter
dec
nop
sbb
mov
dec
inc
inc
mov
mov
push
pop
jle
pop
into
pop
outsb
mov
outsl
out
cmp
lea
mov
mov
fimuls
or
lret
dec
pop
int3
inc
xor
push
add
push
out
pushf
insl
xchg
xor
cmp
and
push
rclb
in
cmp
jge
mov
fdivrp
add
enter
mov
loop
dec
movsb
scas
cmpsl
inc
outsl
xchg
pop
pop
test
jg
shrl
jae
ret
sub
pop
fidivl
das
cli
int3
adc
jns
sbb
xchg
mov
fwait
popa
mov
pop
push
mov
pop
insb
or
sub
clc
jnp
add
dec
sarl
cmc
cmp
mov
push
movsl
mov
or
sbb
push
les
mov
insb
pop
dec
mov
outsb
adc
and
imul
sub
jl
inc
outsb
dec
and
fisttpl
in
das
mov
xor
bswap
adc
insl
aas
pop
jle
jmp
dec
out
cmp
xchg
jle
mov
aad
dec
movsb
jecxz
mov
jb
dec
stos
nop
fwait
jl
ss
js
and
icebp
fmuls
cltd
mov
bnd
cmp
mov
cmp
jg
imul
push
mov
mov
imul
mov
ja
call
cmpsb
addr16
jl
xchg
test
mov
dec
add
xor
pusha
popf
in
sbbl
xor
lods
ret
sub
and
jmp
in
mov
ljmp
inc
mov
add
jmp
add
pop
fnstcw
sub
roll
daa
cmp
ret
or
cld
imul
jp
std
imul
mov
mov
leave
je
aad
lods
fcmovne
mov
mov
dec
call
mov
fmuls
insl
fdivrl
mov
mov
movsl
cmpsb
mov
or
outsl
mov
aas
fldt
adc
mov
mov
pop
xchg
jle
jb
inc
dec
push
loope
xor
fldenv
movsl
das
es
sbb
xorl
fnsave
add
stos
and
movsl
aas
xchg
pop
aas
sub
mov
xchg
fdivrs
outsb
out
rcrb
lock
inc
jae
mov
or
or
push
add
adc
push
push
push
inc
test
pop
jl
pop
mov
pop
inc
out
repz
in
pop
test
es
adc
cmp
repz
jg
jl
dec
pop
pushf
cmp
sahf
bound
mov
xor
dec
pushf
leave
in
loope
sbb
je
xchg
lods
mov
repz
cs
das
xchg
pusha
cmp
xor
scas
fwait
loope
leave
call
sub
into
fs
ja
scas
mov
dec
fistl
mov
sti
ss
dec
mov
repz
repnz
xor
add
lods
push
jns
je
scas
shll
fbstp
movsl
ss
jecxz
mov
xchg
mov
push
dec
add
fidivl
jl
push
inc
jns
jae
xor
push
rclb
sbb
mov
jp
cmp
fadds
or
aas
xchg
lret
mov
fwait
mov
pop
rorb
mov
cmpsl
stc
ret
xor
cltd
adc
cmpsb
das
mov
sahf
ds
fcoml
loop
ficoms
arpl
sub
and
jns
xchg
jecxz
xor
out
ret
arpl
popf
fisttps
notl
aam
aas
jb
jo
mov
or
bound
andl
and
pushf
jnp
stos
cli
add
ret
jbe
jg
or
and
aam
cmp
sbb
xor
les
xchg
mov
pop
jl
cmp
sub
pop
in
pop
gs
or
sub
jp
fisttps
lea
xchg
and
xlat
scas
mov
loopne
mov
xchg
lahf
testb
mov
arpl
mov
cld
mov
xchg
mov
fistpl
je
sbbb
pmulhw
adc
out
pop
and
imul
jns
xor
adc
es
inc
into
fnstenv
call
push
pop
sahf
sub
push
sub
mulb
stos
dec
mov
push
rorb
push
jl
orl
mov
sbb
out
addr16
push
and
int
lds
scas
add
gs
ljmp
cmpsb
fsubl
jge
scas
cmc
bound
shlb
test
arpl
sahf
out
and
or
and
adc
lret
mov
xchg
sbb
xor
bound
mov
mov
jnp
pop
bound
mov
fstpt
mov
mov
add
cmc
inc
or
test
cld
dec
imul
pop
stos
xchg
sub
test
inc
pushf
sub
or
aaa
in
mov
xchg
jb
mov
addr16
or
popa
je
dec
test
xchg
or
mov
ret
stc
mov
nop
sbb
add
sbb
addr16
aaa
popf
aas
xchg
add
or
outsb
std
scas
cli
pop
cmp
testl
push
ret
or
rol
xchg
sarb
mov
mov
push
mov
and
mov
and
and
loopne
gs
mov
inc
mov
bound
fiadds
std
test
or
jb
sub
adc
shlb
dec
push
inc
adc
push
adc
mov
cmc
pop
mov
cmpsl
adc
cmp
sbb
cmp
adc
aas
call
scas
inc
sub
sub
mov
das
in
scas
mov
add
push
and
jg
xchg
push
bound
dec
mov
movsl
push
mov
mov
push
dec
out
xor
gs
jnp
mov
fistpl
fiadds
das
negl
pop
dec
jg
je
and
test
hlt
aaa
dec
roll
in
inc
fstp
int3
fcmovu
lret
mov
dec
xchg
int
ss
fs
popa
int
push
pop
es
je
add
out
fadds
xchg
fwait
or
jg
mov
lahf
mov
lcall
mov
aas
mov
adc
or
pop
push
cltd
mov
outsl
sub
fwait
sub
leave
movsl
loope
mov
out
dec
fwait
adc
iret
test
imul
imul
nop
scas
lods
mov
hlt
in
cmp
sub
enter
jo
aas
pop
mov
stc
xorb
or
mov
adc
neg
fildl
or
sarl
aas
call
pop
dec
add
mov
xrelease
push
mov
sahf
notl
mov
mov
push
lahf
cmp
aam
rcll
push
add
cli
and
dec
cmp
dec
xchg
push
mov
lret
fsubp
std
xchg
call
aaa
mov
mov
push
mov
add
pop
fs
fucomi
jo
xlat
pop
test
loopne
dec
push
loope
dec
arpl
mov
mov
fdiv
mov
push
repz
mov
les
and
cmp
lods
pop
cwtl
cmp
xchg
mov
rcrl
shrb
pop
pop
dec
mov
js
imul
mov
dec
adc
pop
test
add
pop
and
imul
xchg
cli
pushf
outsb
mov
mov
inc
adc
and
jb
mov
in
xor
test
xor
inc
cmp
out
sbb
adcl
rorl
or
mov
jbe
inc
sbb
mov
nop
mov
iret
sbb
in
pop
js
dec
hlt
or
pop
int3
iret
add
insl
sub
pop
ret
orl
push
ss
mov
add
jge
pop
push
je
rcr
mov
cmp
mov
and
sub
mov
sub
lock
popa
cwtl
into
dec
cmp
mov
popa
mov
repnz
test
outsl
cmp
or
hlt
subl
dec
sbb
push
adc
cmp
mov
jmp
shl
sub
sar
mov
rcrb
orb
pop
sti
xchg
in
jno
fsubl
pop
jno
push
stos
cltd
mov
add
push
out
pusha
inc
aam
data16
das
ret
and
sti
out
in
add
mov
jg
out
movsb
lcall
test
or
xlat
or
repz
sub
push
mov
ja
or
mov
fnsave
xchg
daa
sbb
popa
add
repnz
inc
outsb
gs
dec
dec
pop
pusha
call
fsubs
leave
and
mov
mov
adc
cmp
xor
sub
or
or
fsubrp
or
testb
xor
push
jl
movsb
push
pusha
jnp
test
push
es
xchg
jnp
leave
sub
dec
push
out
push
iret
inc
lcall
clc
jnp
adc
in
cmpb
or
add
jmp
dec
iret
test
sub
jg
adc
rclb
dec
jae
jle
or
bt
jmp
cmp
lret
mov
test
xlat
test
nop
xchg
cmpsl
mov
dec
inc
or
divb
cmp
fidivl
xor
ret
int3
sbb
add
fcomi
fucomp
mov
push
jo
gs
mov
mov
iret
xor
rcrb
dec
xor
adc
or
fistl
lret
lret
andl
jmp
push
movsb
adcb
mov
in
loopne
push
xchg
rclb
jne
or
and
sub
mov
imul
jp
push
mov
sub
cmp
pop
rcll
rorl
xchg
mov
and
adc
insb
sbbl
sbb
inc
adc
das
dec
mov
jmp
fwait
mov
inc
mov
lds
inc
mov
sub
insl
and
icebp
clc
out
into
cmp
mov
int3
push
fwait
je
das
out
jae
push
add
daa
test
fsubl
int3
add
dec
jo
or
lahf
test
pop
push
mov
adc
ret
popf
ss
out
cmp
lahf
sahf
test
lea
xchg
lods
psubq
jnp
shlb
xchg
int3
xchg
fisubs
xchg
testl
test
dec
scas
push
fdivrl
mov
sbb
mov
pop
xor
jnp
data16
shlb
lahf
sbb
adc
loope
popf
mov
cmp
add
icebp
pop
fmuls
xchg
aam
adc
sbb
imul
mov
loopne
leave
inc
mov
cmpsb
and
jne
fwait
outsb
jle
push
lret
mov
sbb
lea
daa
push
sub
sub
packsswb
jno
iret
jecxz
dec
int3
repnz
dec
inc
and
push
mov
pop
cmpsb
fdivl
data16
xchg
mov
arpl
xor
int3
adc
or
jb
dec
imul
call
inc
scas
ffreep
xchg
out
daa
cs
cwtl
cmp
out
ja
add
mov
test
push
mov
lods
push
arpl
dec
jns
push
jmp
sahf
xor
negb
add
add
lahf
mov
fcompl
insl
stos
addl
pop
xor
mov
mov
mov
sub
jae
mov
sub
xchg
rcl
jo
xor
fstpt
sub
add
push
mov
sbb
je
inc
adc
popf
loope
mov
test
jno
test
sbb
aaa
fwait
or
div
mov
mov
xchg
mov
loopne
and
push
push
ja
sub
xorb
sub
cld
pop
pop
inc
cmp
sub
test
sbb
lock
adc
cs
mov
jno
outsb
daa
pusha
sub
fnstcw
mov
inc
clc
mov
adc
xlat
pop
mov
imull
icebp
pop
loop
cs
pop
hlt
adc
repnz
sbb
adc
add
pop
cmpsl
std
pop
andl
cld
mov
sub
iret
daa
pusha
mov
cmp
xchg
ficompl
mov
inc
ret
adc
fdivs
add
and
fidivrs
mov
stc
inc
inc
cmpsl
xchg
jmp
sub
dec
mov
lods
dec
inc
rorl
push
mov
pop
cmp
pushf
or
mov
lods
sub
shl
mov
fsubrl
mov
or
push
dec
adcb
dec
enter
inc
lea
fcmovnbe
jno
push
xchg
xchg
or
dec
mov
or
pop
lcall
in
out
mov
jo
mov
push
movsl
cmp
pop
or
push
loope
bound
push
lea
jno
mov
int
outsl
lcall
mov
sub
jbe
ljmp
cltd
gs
icebp
fldl
js
cmp
mov
xchg
stos
inc
dec
cmp
pushf
int
fstl
inc
inc
add
scas
dec
mov
pop
inc
cmc
mov
mov
outsl
bound
mov
sub
int3
inc
or
pop
mov
and
dec
nop
pop
sbb
stos
pop
clc
push
adc
test
testb
lahf
xor
and
mov
scas
lret
dec
fstp
jo
pop
sbb
jmp
mov
rcrb
jg
pop
cmp
and
inc
xchg
xchg
sub
pop
xchg
dec
aad
or
sub
xchg
cmc
sbb
in
and
jnp
xor
pop
enter
jo
es
loop
subb
roll
jecxz
push
push
mov
sbb
xchg
dec
out
bound
xor
ret
inc
and
dec
in
add
shl
push
sarb
icebp
pop
jecxz
pop
jo
mov
push
pushf
cmpsb
xchg
jg
jo
int
add
cmp
xor
jle
out
push
inc
mov
or
pop
fimull
lahf
call
repnz
sbb
inc
or
arpl
nop
cmp
sbb
dec
test
leave
fbstp
lcall
ja
into
addr16
push
mov
mov
pop
cli
sarb
mov
in
scas
pop
ljmp
icebp
jge
jo
shl
clc
lea
pusha
stc
push
or
xchg
ret
cs
inc
xchg
sti
mov
fwait
loope
push
sbbb
test
mov
out
setb
leave
adcb
repnz
mov
mov
cli
dec
cmp
add
dec
in
jle
push
out
xchg
push
fcompl
outsb
xchg
fldl
and
je
pop
push
jbe
dec
push
das
jns
cmpb
bound
mov
and
jns
fiaddl
test
je
pop
cld
jne
shrl
xor
pop
fisubs
sub
pop
cmp
mov
push
adc
adc
pushf
inc
pop
pop
idivl
fildll
mov
and
loop
mov
sarb
adc
or
pusha
jg
inc
sub
pusha
inc
xor
jb
push
pop
add
bnd
pop
xchg
mov
push
in
adc
sbb
lahf
push
sub
shrl
pop
inc
mov
jecxz
pop
add
sub
sub
xchg
testb
lret
clc
fadds
hlt
loope
mov
pop
test
into
call
arpl
dec
push
dec
jl
sub
fisttpl
sub
adc
std
xchg
pop
mov
ret
shlb
mov
xlat
mov
mov
or
mov
add
sub
imul
push
inc
push
outsb
add
xchg
inc
stos
sbb
shll
cmp
mov
shll
out
ss
mov
xor
mov
pop
xchg
pop
movsl
mov
adc
enter
jns
mov
pop
leave
mov
add
pop
lcall
cwtl
clc
insl
leave
and
and
and
push
inc
ss
xchg
jae
aad
repz
jle
stos
roll
es
add
in
push
xchg
fistl
push
pop
in
faddp
stc
mov
ja
stos
imul
and
jne
test
pop
cli
pop
sub
pop
adc
stc
adc
mov
and
test
mov
aaa
jno
subl
cs
lcall
fstl
sub
gs
mov
in
dec
cli
out
or
cltd
int
add
loop
daa
std
mov
ret
cmp
repz
aas
imul
rorl
mov
ffree
push
adc
dec
mov
mov
sub
lcall
shll
enter
scas
adc
andl
out
pop
dec
into
dec
ss
inc
ss
xchg
fiaddl
mov
xor
xor
xchg
aas
loopne
dec
dec
ret
stos
pop
test
jo
sbb
jmp
cwtl
sbb
int3
enter
out
jg
dec
out
ds
jle
ja
imul
scas
adc
pop
jle
inc
mov
mov
icebp
inc
sbb
in
dec
and
jno
mov
popa
test
jne
lahf
add
dec
hlt
dec
or
add
push
shlb
xor
xchg
shl
mov
pop
mov
mov
pop
push
jae
push
dec
mov
loope
mov
pop
sub
xchg
in
adc
dec
mov
and
sub
mov
sbb
lret
lcall
sub
insb
mov
insl
not
mov
dec
push
insl
dec
fs
stc
mov
mov
pop
lods
xor
mov
repnz
mov
mov
subb
mov
push
mov
shlb
add
inc
mov
pop
test
dec
sarb
xlat
dec
or
push
mov
inc
cwtl
xchg
sub
xor
in
mov
lret
jl
mov
nopl
les
lea
iret
lahf
jg
rolb
in
pop
inc
push
add
add
test
push
inc
mov
jb
push
pushf
mov
lods
xor
inc
cs
sbb
jle
mov
push
mov
dec
inc
loopne
scas
ret
ds
stos
cmpsb
push
jge
out
ret
xor
add
lea
mov
pop
mov
in
cld
xchg
sbb
jno
mov
add
movsb
mov
out
out
jmp
mulb
loop
scas
jl
filds
mov
mov
jb
stc
cmpsl
dec
ss
add
push
test
or
mov
sbb
xchg
add
in
outsb
dec
inc
jmp
shr
push
call
push
aaa
aaa
push
je
imul
cmp
inc
push
gs
mov
mov
cmp
test
pop
arpl
fcmovnbe
mov
mov
and
lret
push
stc
mov
xchg
les
out
loopne
call
xor
std
test
sub
jbe
inc
push
ljmp
js
out
aam
andb
out
push
jmp
incb
stos
incl
cmp
insb
jae
jp
fisubl
outsb
sbb
scas
push
mov
insb
arpl
dec
pop
mov
aaa
xchg
xlat
cmc
jno
sti
add
or
sub
or
pop
arpl
jge
adc
mov
je
mov
out
jecxz
push
mov
mov
push
mov
jle
inc
int3
jg
out
push
mov
iret
mov
add
movsl
cmc
inc
adc
enter
ljmp
pop
cwtl
mov
mov
sub
push
cwtl
mov
cs
cmc
insb
jne
mov
push
ds
and
mov
cmpsb
dec
pop
pop
in
dec
sub
test
mov
outsl
bound
add
or
notl
mov
dec
hlt
xor
push
lret
enter
dec
push
shll
mov
xchg
cltd
pop
sbb
or
das
mov
idivl
pop
aas
insl
mov
daa
sbb
data16
xchg
xchg
push
sub
push
fmuls
ficoms
adc
cmpsb
sub
jb
mov
test
fisttpl
andl
jno
insb
cmp
call
sbb
add
hlt
int
data16
aas
mov
mov
cwtl
push
out
add
add
dec
pop
pop
imul
int
fildll
into
mov
xchg
outsb
pop
movsl
aas
and
cmp
test
add
cwtl
jb
pop
imul
clc
fwait
pop
jmp
cmp
dec
xchg
or
sub
mov
adc
inc
cmc
call
movsl
loopne
daa
push
addl
pusha
sarb
shrb
mov
xchg
dec
test
nop
jno
nop
cmc
sbb
cltd
sbb
push
dec
dec
pushf
inc
xchg
mov
out
pop
inc
adc
loope
cmp
push
or
push
adc
add
push
add
cmp
jecxz
cmp
lret
cli
mov
subb
lea
insb
pusha
lcall
clc
vsubsd
jge
loopne
cmp
or
adc
cmpsl
lcall
rolb
aaa
divl
xor
clc
int3
pusha
xchg
repnz
ja
cld
add
repnz
jno
in
push
sbb
xor
popf
sub
mov
fwait
dec
sahf
mov
leave
or
loope
and
jp
movsl
mov
dec
jae
push
jbe
mov
mov
mov
arpl
es
aas
out
loop
and
in
sbb
fwait
rolb
test
cs
dec
push
jns
lea
pop
mov
mov
jmp
and
pop
cmp
xor
je
sub
cmp
jo
jg
jns
dec
push
mov
ljmp
dec
insb
xor
jo
fidivrl
or
idiv
xor
cwtl
push
pop
jge
mov
repz
or
fcomip
or
and
mov
pop
cmp
xchg
sbb
ja
mov
pop
jnp
jae
aaa
push
imul
out
in
fnstenv
loopne
cmp
cmp
stc
sub
or
pop
mov
cmp
inc
jno
loopne
mov
push
jae
xchg
scas
jae
push
mov
fadds
inc
repnz
and
test
popa
bound
or
pop
push
loope,pn
mov
or
mov
dec
cs
mov
test
imul
test
vmwrite
int3
je
push
mov
dec
popa
int
les
sahf
and
inc
cmpsl
push
mov
pop
test
xor
mov
loop
inc
lahf
mulb
jg
leave
lahf
bnd
out
stc
xchg
sub
cmp
fcoml
pop
adc
sub
cltd
rolb
dec
pop
add
shlb
mov
mov
push
js
pop
pop
sbb
sbb
outsl
mov
jb
dec
mov
addr16
xchg
insl
pop
xchg
pop
into
in
xor
out
les
insl
loope
flds
push
sub
lock
test
xchg
sbb
scas
rcrb
out
push
dec
out
movsl
add
jecxz
mov
cs
xor
insb
cmp
pushf
xchg
lcall
ja
hlt
ljmp
lret
inc
sub
fnsave
adc
mov
mov
loop
je
cmp
cwtl
shl
cs
add
xchg
xor
lock
xor
push
int
or
mov
xchg
sti
hlt
adc
inc
or
ret
shl
and
dec
outsb
pop
mov
push
ss
mov
aad
faddl
and
push
flds
dec
out
aam
cwtl
sub
andl
fdivrl
popf
mov
cmp
stos
and
jbe
lret
lcall
jecxz
push
out
arpl
sub
mov
lret
dec
jo
push
adc
cmp
xor
ret
jne
lods
push
sar
and
inc
add
mov
cmp
jnp
or
jnp
addl
sbb
jge
nop
or
loop
popa
jnp
push
sub
xor
ficoms
mov
fwait
inc
mov
inc
sub
fstps
mov
out
jl
or
push
or
or
and
adc
repz
inc
sbb
les
mov
cmp
repnz
bound
cltd
push
xchg
or
pop
add
pop
dec
push
ds
out
push
lcall
movsl
jno
or
loop
sbb
cmc
inc
cs
movsl
xor
sub
cmc
mov
sbb
jecxz
mov
cmpsl
mov
mov
stos
out
pop
pop
add
sbb
loop
rclb
inc
daa
cs
mov
gs
mov
mov
and
stos
je
inc
sbb
mov
hlt
je
mov
pop
sarb
xchg
pushf
lret
cmpsb
inc
push
jae
sahf
mov
test
sub
cmp
movsl
ds
push
nop
mov
ss
xlat
mov
ret
mov
ljmp
in
or
dec
aas
dec
sbb
in
hlt
push
aaa
mov
lret
dec
mov
or
mov
jle
pushf
or
push
pop
push
push
js
jp
mov
jl
ds
add
ja
loope
push
addr16
jecxz
mov
bound
cmpsl
mov
push
in
sar
add
insl
cmp
dec
popf
adc
push
or
cltd
icebp
sbb
jge
loopne
std
cmp
jmp
xchg
dec
mov
in
cmp
stc
inc
xchg
push
sahf
xchg
repnz
inc
mov
lods
stos
mov
lods
push
insb
testb
xor
je
ja
xchg
addr16
loop
adc
idiv
add
scas
cmpsl
inc
sbb
or
ret
test
popf
addb
inc
jmp
fwait
imul
lea
sti
ljmp
sub
pop
sbb
lahf
pop
faddp
je
sbb
xor
fs
in
dec
in
xor
dec
shrb
push
mov
xor
xlat
mov
mov
loop
test
dec
shl
push
xchg
dec
mov
repz
sub
cmc
lock
dec
xrelease
pusha
mov
xor
in
cld
sbb
push
stc
xchg
pop
push
cmp
mov
jl
imulb
cmpsb
jp
lods
sub
outsl
or
or
out
sub
mov
fcomi
jmp
dec
push
fdivrl
pushf
adc
in
inc
mov
imul
mov
test
lea
imul
cmp
pushf
mov
sub
inc
fcompl
lods
data16
mov
cmp
push
cmpsb
jecxz
je
sbb
pop
push
add
fldl2e
faddl
xor
bound
jb
gs
pop
sbb
push
xor
leave
lock
dec
mov
lds
mov
adc
jle
adc
je
adcl
ja
dec
xchg
xchg
test
xchg
jecxz
sarl
movups
mov
in
mov
ja
push
fnstcw
hlt
cmp
sub
daa
data16
xchg
lea
and
scas
leave
mov
dec
xor
push
jg
negl
or
iret
cmp
or
pop
adc
je
int
mov
mov
outsb
popf
loopne
mov
neg
loop
imul
mov
jae
xchg
jmp
push
int
mov
mov
sub
xchg
add
mov
andb
push
and
outsb
sbb
lcall
add
or
push
lea
fs
xor
addr16
cmp
or
incl
or
inc
ret
and
pop
fcomip
xor
lods
cmpsb
std
pop
sub
xchg
outsb
inc
sbb
and
cli
or
stos
push
push
or
test
cli
sub
mov
dec
or
iret
fwait
push
enter
xchg
sbb
das
pop
dec
mov
inc
stos
dec
and
fwait
jbe
punpckhwd
mov
shl
dec
push
cwtl
lods
dec
adc
or
aad
sti
mov
or
pusha
jnp
jmp
mov
imul
dec
es
push
iret
mov
push
rcr
cmp
sub
int
sbb
fdivrs
stos
gs
lcall
iret
sub
sbb
imul
or
xor
arpl
mov
xchg
dec
inc
xor
pop
push
push
jmp
shll
orb
mov
dec
mov
imul
std
inc
ret
xor
inc
mov
fwait
xor
les
bound
xor
or
pushf
adc
test
call
test
pushf
sbb
or
rorb
lock
ficomps
cmc
xchg
xlat
lods
or
cmp
bound
test
jp
inc
xchg
inc
bnd
mov
jecxz
fildll
mov
iret
pop
adc
imul
lds
and
test
test
iret
and
aam
aas
rclb
lods
into
mov
xor
xchg
cwtl
das
cmp
mov
xchg
nopl
mov
jmp
ret
js
push
mov
les
aaa
shrl
push
push
mov
mov
sbb
sbb
push
ds
int3
adc
xorb
rcrb
mov
ss
mov
test
mov
xchg
repz
push
jno
pop
loopne
ss
mov
out
sbb
push
push
inc
test
xlat
push
inc
ja
jne
xchg
fildll
fs
push
fldl
cmp
adc
scas
scas
stos
sar
ficoml
bound
andl
test
dec
cmp
push
rorb
pop
loop
pop
pop
movb
das
out
fcmovnu
sbb
outsl
pop
sbb
pop
push
xchg
daa
int3
push
or
pushf
or
add
aam
mov
push
lods
jnp
mov
pop
test
jge
xchg
insb
rorl
je
pop
xor
xor
aad
out
loop
jbe
fsubl
stos
cmp
xchg
mov
femms
lock
movsb
push
rcll
in
rorb
test
fisttpl
ja
or
pop
mov
es
lds
mov
and
sub
sub
xor
shll
mov
xchg
iret
pop
out
out
pop
fwait
pusha
in
inc
stos
cmp
jnp
pop
xchg
mov
call
movsl
mov
dec
ficoms
xchg
movsl
shlb
jae
je
stc
mov
lahf
loop
add
push
xchg
jmp
jmp
cmp
repnz
popa
jns
pop
dec
je
jb
insl
fsubl
nop
dec
int3
popa
imul
out
jle
negb
int3
cmp
and
icebp
sbb
xor
repnz
adc
scas
push
jae
mov
lods
add
fcoml
subl
dec
adc
push
insl
jbe
xor
cmovnp
gs
adc
cmpsl
push
push
fdivl
xor
inc
mov
jbe
sbb
call
stos
popw
movsl
andb
sahf
repnz
adc
dec
push
pop
ja
movsb
cmp
inc
jl
shlb
nop
and
fs
jno
xchg
dec
rol
inc
push
mov
into
and
or
mull
rol
aaa
cmpsl
fs
xor
lods
loopne
mov
and
push
jle
idivl
mov
push
mov
std
std
inc
insl
cli
es
pop
jae
mov
cmp
lds
or
imul
outsb
sti
ffreep
pushf
pop
sbb
push
mov
out
push
adc
mov
movsb
pop
repz
or
popa
div
jnp
pop
cld
cmp
imul
or
or
push
test
sbb
sbb
mov
xchg
cltd
xchg
or
cmpsl
shll
mov
xchg
inc
dec
mov
call
int
adc
xor
rcll
in
sub
fidivl
lret
push
mov
out
ret
out
bound
jne
mov
cli
aaa
xchg
or
mov
jae
lret
outsb
out
mov
loopne
leave
xor
mov
push
lods
push
lret
sbb
icebp
dec
loop
mov
push
sbb
aam
sub
insb
jne
push
jb
xchg
lret
pusha
mov
mov
mov
lahf
xchg
out
or
fnstcw
popf
out
mov
cmp
dec
cmp
out
in
aam
es
mov
mov
aaa
lret
xchg
mov
scas
add
xchg
loopne
add
ret
ss
adc
dec
or
or
inc
lea
scas
xchg
in
aad
pop
mov
les
divb
xchg
pop
icebp
out
pop
push
or
and
inc
insl
test
xor
into
dec
inc
test
jne
sub
dec
loop
loop
stos
shll
and
pop
push
sbb
and
int
mov
push
arpl
add
cmpsl
push
mov
stos
ret
bound
mov
adc
mov
in
dec
leave
dec
aad
cmp
arpl
shll
sbb
jns
pop
sbb
daa
nop
xor
dec
aaa
xchg
ja
stc
fldt
add
jo
xlat
adc
lods
xor
daa
test
in
outsl
jg
lahf
dec
les
fiaddl
mov
add
push
jne
mov
mov
les
mov
aam
clc
jg
dec
jo
subl
push
jmp
dec
and
ds
and
dec
xor
sub
mov
jmp
pop
lods
xor
xor
sahf
jecxz
call
iret
add
sbb
cmp
cmp
sub
cwtl
push
mov
push
jmp
aam
out
out
and
xchg
mov
jb
cmp
lret
jecxz
xchg
push
dec
leave
sbbb
das
sbb
cmpsb
je
pop
addl
xchg
jns
mov
scas
enter
add
and
xor
push
mov
dec
xchg
mov
std
pusha
jmp
jg
sar
aad
dec
mov
cvtps2pi
cmp
ret
inc
mov
pop
mov
xchg
add
and
xchg
in
bound
xchg
dec
sbb
out
scas
call
repnz
push
pop
fs
outsb
cmp
xchg
adc
add
lock
pop
xchg
loopne
sub
imul
repnz
lods
test
cmp
mov
stc
mov
mov
cwtl
add
adc
das
lods
inc
mov
pushf
inc
add
mov
aaa
mov
sbb
sub
add
sbb
jne
or
xor
mov
sbbl
mov
mov
int
mov
scas
loopne
mov
cmpsl
xor
ljmp
sub
stos
icebp
insl
and
and
jmp
pop
jo
shl
or
xchg
scas
flds
call
jne
adc
pop
mov
iret
xchg
ljmp
and
dec
lahf
adc
js
xor
mov
xor
xchg
pop
xchg
cmp
sub
mov
ljmp
test
dec
popf
int3
pop
pop
out
sub
xor
sti
stc
test
add
xchg
stos
movsl
rorb
shr
fcompl
enter
push
imul
xlat
sub
pop
mov
inc
add
mov
dec
mov
sub
mov
outsl
xchg
push
mov
cmp
mov
fbld
pop
lcall
lods
dec
xor
push
jmp
inc
add
fidivl
lock
or
pop
outsb
sbb
insb
mov
adc
outsl
dec
push
sbb
cmp
clc
xchg
xchg
push
jns
jecxz
jo
add
in
cltd
mov
jne
push
xchg
jae
pop
ffree
inc
xchg
pop
sti
adc
pop
dec
scas
adc
pop
dec
pop
inc
jmp
mov
push
pop
ret
movsl
xchg
loope
cmp
sub
loope
cmp
andb
aad
sti
cmpb
xchg
icebp
mov
out
setae
mov
push
mov
push
and
or
insl
cs
loope
roll
aam
mov
inc
fldl
push
cwtl
jne
clc
fsub
jnp
int
arpl
and
sbb
dec
ljmp
enter
fisubrs
push
mov
repnz
leave
pop
mov
pop
or
jmp
mov
stos
push
out
mov
lret
in
jns
hlt
mov
sbb
rorb
cmp
lret
int
cmp
imul
cmp
repnz
xchg
or
xor
jl
in
lods
push
dec
iret
push
lock
rorb
bound
fbld
jle
js
lahf
pop
jno
nop
xor
sbb
or
sbb
out
dec
or
pop
cs
jg
cmpsl
push
cs
nop
mov
wbinvd
stos
cmp
into
lods
mov
pop
jnp
testl
adc
push
fs
fs
jp
jge
scas
out
pop
sub
std
sbb
pop
xlat
nop
les
dec
dec
sub
rclb
ss
mov
mov
add
outsl
fwait
pop
jo
int
insl
insb
out
mov
xor
sub
add
or
inc
lods
lret
lods
cld
or
adc
push
repnz
daa
rcll
ss
ret
mov
rcrb
lret
cmp
dec
mov
xor
loop
jo
or
mov
mov
fcomp
pop
icebp
fld
push
inc
mov
push
das
fdivs
paddusw
pop
jo
adc
sti
sub
ds
mov
dec
cmp
inc
movsl
gs
rcll
and
pop
in
or
cmc
xor
xor
pop
add
push
testb
xchg
repz
adc
mov
imul
mov
in
out
jge
out
push
in
sahf
scas
call
push
pop
sub
ja
xor
push
jp
fucomip
pop
es
pop
stos
lahf
lods
repz
clc
lahf
out
in
loop
xchg
imul
pop
jno
add
pop
mov
xor
push
aam
in
ret
cltd
xchg
xchg
stos
arpl
xlat
into
inc
and
lock
mov
insl
add
cmpsl
xchg
mov
retw
pminsw
lahf
loop
insl
or
push
add
sbb
adc
fisubl
inc
inc
jnp
inc
xor
dec
pop
pop
add
sub
pop
in
mov
and
call
in
mov
jge
inc
in
adc
repz
pushf
dec
jge
jmp
loopne
mov
popl
insl
cld
push
mov
adc
popa
shll
cs
mov
sahf
xor
dec
xchg
test
adc
cltd
add
daa
movsl
mov
lahf
je
adc
sbb
test
mov
data16
popf
test
icebp
daa
pop
mov
sbbb
mov
mov
xchg
push
cmp
pop
in
nop
ffree
push
fsubrs
mov
cmp
pop
jge
aaa
sbb
add
push
stos
add
pop
mov
push
jecxz
loopne
nop
out
mov
add
addl
cltd
clc
xor
divl
xchg
cmp
adc
or
mov
dec
mov
popf
int3
mov
dec
aad
inc
fwait
pop
fwait
std
adc
ja
out
sbb
xchg
push
add
mov
sbb
fnstcw
mov
cmp
loope
xchg
dec
stos
scas
or
pushf
xchg
xor
int
orb
mov
das
jae
xchg
mov
in
je
mov
mov
inc
cmc
into
movb
sbb
loopne
push
push
adc
dec
mov
test
push
das
or
popf
fsts
cmp
inc
fiaddl
pusha
fisubs
cltd
jmp
sar
mov
lcall
adc
int
sbb
stos
cmpb
or
mov
pop
mov
mov
mov
and
cltd
or
cmp
enter
cmp
cmp
into
fistl
adc
xchg
sub
push
add
ret
loopne
jg
and
test
rcrb
pop
lods
pop
stos
cmp
xchg
cld
ror
cli
adc
in
adc
xor
push
arpl
push
stos
or
push
in
inc
mov
fbstp
dec
cltd
les
jbe
xchg
test
pop
repnz
fcoms
xor
imul
sbb
add
test
mov
xchg
aas
xor
lret
rolb
and
push
mov
xor
cmp
orb
pusha
mov
xchg
add
or
sbb
pushf
add
inc
outsl
or
data16
pop
test
push
sbb
add
inc
outsl
jo
fs
jo
gs
aas
cmp
lods
mov
mov
adc
mov
jp
test
call
out
or
outsl
out
dec
lret
mov
lea
addr16
jg
xor
sbb
sbb
pop
xor
adc
fwait
mov
ret
xlat
test
jge
xor
and
shrb
mov
je
stos
pop
hlt
push
or
incl
iret
repz
add
test
ffreep
shlb
fcoms
shlb
stc
daa
dec
mov
aam
test
push
or
repnz
push
sub
xchg
in
push
out
cmp
aad
cmp
cmpsl
or
push
push
adc
test
insb
xchg
push
cmpsb
jno
lcall
shr
lock
out
mov
add
inc
iret
xor
xchg
imul
push
js
inc
mov
sbb
stc
fidivrs
movsb
rcrb
sub
mov
cli
xor
gs
ret
push
dec
mov
sub
add
pop
push
xchg
mov
adc
mov
mov
push
add
enter
dec
adc
pushf
loop
mov
pop
cwtl
cwtl
sahf
sarb
add
notl
rol
fyl2xp1
jb
in
rcll
es
and
xor
xchg
sbb
mov
fs
sarb
adc
outsb
inc
mov
xchg
lods
push
and
jmp
mov
push
adc
in
addr16
xchg
enter
add
gs
int
insl
jnp
data16
stos
out
dec
add
imul
fdivrl
pushf
sbb
bound
jp
pop
sub
and
or
fsubrl
cmp
repnz
or
mov
loope
xchg
in
jecxz
aas
fstpl
into
loopne
cwtl
iret
jecxz
jne
into
mov
pop
int3
add
jecxz
cmp
dec
pop
or
fsubs
movsl
mov
jmp
push
movsl
mov
inc
fmuls
and
test
xor
insl
es
fcmovnu
out
gs
loop
or
dec
addb
fwait
rolb
jo
insb
into
bound
cmp
fadds
leave
dec
scas
push
in
mov
jbe
lds
scas
mov
out
push
jb
ja
les
je
lea
inc
jmp
jge
aaa
mov
icebp
repnz
ret
mov
mov
andl
pop
ds
xorl
push
xchg
mov
leave
push
inc
mov
cmp
lods
xchg
sarl
test
cmp
xchg
xor
pop
push
dec
insl
mov
out
cmpsb
mov
mov
and
ret
into
jecxz
cli
jbe
std
and
jp
fs
out
movsl
pushf
lock
popf
mov
mov
rcrl
movsb
lds
dec
shrb
andb
inc
scas
shr
xor
jl
in
mov
ds
icebp
jb
popa
je
lods
mov
inc
xchg
push
mov
into
in
mov
mov
cwtl
xchg
push
pop
loope
gs
dec
jl
insl
scas
sahf
idivl
jns
sbb
jmp
enter
cmpsb
cwtl
or
cmpsb
shl
daa
outsl
xor
mov
xchg
pop
mov
out
and
in
xchg
and
jae
dec
test
sbbl
mov
aam
jns
imul
sbb
sbb
xor
add
jno
inc
mov
add
sahf
mov
mov
lcall
jp
push
cmp
adc
dec
sbb
pop
out
addr16
ss
cmp
mov
xor
fistpll
xchg
jns
mov
fwait
ss
hlt
in
dec
xchg
jg
call
cmp
add
dec
or
icebp
xchg
addl
in
jb
mov
sub
ds
pop
sub
fisubs
cmp
or
cmp
cmpb
lret
jns
adc
mov
jp
int3
in
mov
push
pop
mov
in
cmpsb
int3
or
cmp
inc
pop
pop
xor
adc
inc
or
sbb
mov
pop
in
loopne
xor
dec
lcall
sub
repz
or
sarl
mov
aam
cmp
inc
push
jecxz
leave
xorb
in
inc
pop
arpl
shll
pushf
out
leave
adc
imul
add
js
and
nop
add
pop
xorl
xor
push
cmp
add
push
cli
push
leavew
dec
movsb
in
xor
arpl
add
aad
mov
lret
lcall
pop
mov
push
jmp
sbb
xchg
add
jle
inc
and
xchg
jbe
sbb
pop
mov
rorb
sarl
lcall
outsl
fwait
xor
cmp
push
push
into
mov
push
dec
popf
jmp
pop
cmp
add
mov
ds
pop
daa
mov
les
mov
outsb
enter
jmp
cmp
mov
gs
popa
fidivs
sbb
mov
adc
cmp
sbbb
icebp
frstor
dec
testl
insl
cltd
enter
nop
xchg
and
test
and
shrl
jnp
movsl
hlt
cmp
stc
testl
insl
and
inc
ficoml
enter
bound
push
dec
int
lods
fbld
scas
sbb
mov
jge
jmp
dec
ss
cmp
jb
add
cld
jle
xorb
jne
adc
push
or
ds
cmpsl
jae
xchg
stc
xor
sub
or
adc
mov
and
outsb
or
adc
sahf
std
cmp
sbb
xchg
popf
push
push
cmp
sub
pop
js
pushf
xor
mov
nop
push
sbb
icebp
adc
sbb
daa
cmp
adc
dec
inc
sub
fistpl
mov
inc
xchg
or
outsb
sub
int3
subl
lcall
mov
adc
xor
mov
push
jmp
loop
pop
inc
addr16
adc
adc
lahf
nop
negl
seto
push
xlat
jo
loope
inc
mov
test
hlt
ss
ss
fcoml
or
xor
inc
jno
psadbw
jg
imul
hlt
jecxz
lds
mov
cmpl
cmpsb
xchg
push
mov
xchg
jmp
and
aam
add
lret
jp
adc
sub
inc
push
icebp
push
movsl
idivb
xchg
mov
jle
cmpsl
icebp
mov
pop
mov
ja
cmp
fwait
lods
sub
mov
gs
ficoml
vmulps
mov
mov
pop
in
sahf
clc
inc
jg
into
pop
imul
push
in
sbb
sbb
call
sbb
lods
dec
pop
mov
add
int3
mov
scas
push
aas
cmc
mov
pushl
or
xchg
xchg
call
enter
xor
cs
loop
dec
testl
std
test
and
cwtl
hlt
pop
divb
add
rcll
sub
xchg
dec
je
inc
and
xor
loopne
jl
mov
cwtl
je
or
icebp
cmp
scas
pop
push
mov
scas
js
fildll
out
xchg
and
mov
or
jge
popf
std
xchg
sbb
mov
negb
cmp
add
jb
dec
xchg
sbb
out
shr
jae
lea
and
adc
or
test
jmp
pop
cltd
dec
xchg
stc
jmp
movsl
les
or
out
fdivrl
icebp
sub
je
cmp
nop
addr16
insl
insb
mov
lret
cltd
or
divl
mov
pop
mov
mov
enter
push
mov
out
mov
in
xchg
add
sub
add
mov
stos
sub
jle
fs
push
adc
dec
icebp
loopne
negl
or
outsl
mov
addr16
mov
push
test
into
sub
adc
cltd
inc
push
icebp
sub
cli
xor
lcall
jnp
notb
xor
fwait
mov
pop
cmp
insb
xchg
fidivrl
arpl
shr
jb
pop
cmpsb
mov
pop
mov
ds
xor
xlat
and
fists
test
lods
imul
add
dec
xor
sbb
fcmovb
mov
xor
and
adc
adc
sub
das
fcom
imulb
cmpl
sarb
pusha
inc
loopne
nop
inc
cwtl
push
clc
sbb
mov
shrl
ret
imul
hlt
mov
pusha
xchg
inc
lcall
lods
jl
fcompl
dec
xchg
adc
lret
arpl
add
jp
fadd
fyl2xp1
mov
lods
and
imul
xchg
push
adc
push
pushf
sti
mov
mov
mulb
imul
sub
inc
xor
lds
out
test
sub
in
lea
mov
adc
fnstenv
dec
pop
jle
mov
xor
gs
xchg
jo
sahf
jne
mov
push
add
aas
inc
mov
jb
cmp
rclb
rclb
repnz
sub
or
jge
jns
lahf
add
out
out
mov
mov
sub
push
mov
std
dec
dec
bound
jl
pop
xor
dec
outsl
movsl
and
out
mov
add
push
je
and
outsl
js
jmp
lock
in
add
push
mov
push
jo
int3
xor
lcall
mov
jno
out
xchg
pop
cmp
or
pushf
pop
sahf
mov
pusha
dec
jb
xor
fdivr
arpl
and
mov
mov
sub
repz
add
les
and
xchg
cs
mov
mov
mov
lea
mov
jne
js
cmpb
into
push
int
add
cmp
mov
fsts
ss
push
mov
fdivl
inc
lret
push
ja
mov
cmp
ss
adc
jne
pop
ret
decb
js
rcr
arpl
sahf
mov
fadds
addr16
push
call
add
sbb
jns
lea
mov
pop
cmp
mov
arpl
lods
movsl
cmpsb
popa
daa
sub
mov
popa
pushf
push
push
out
in
mov
and
mov
sub
ficompl
adc
imul
rep
xchg
jecxz
mov
inc
movsl
ljmp
pushf
jnp
mov
mov
xchg
fstl
and
inc
icebp
mov
push
mov
lds
cmp
add
jb
ds
push
jmp
add
adc
loope
nop
push
js
push
push
jns
mov
jp
lods
or
ja
fdivl
add
aas
pop
int3
jnp
xchg
jb
stos
out
std
sub
in
aam
xor
mov
or
cmp
jle
or
cs
push
addr16
sbbb
lds
jmp
cltd
sti
or
cltd
fwait
loop
addl
test
fistpll
and
rcr
aas
icebp
mov
lods
lcall
lea
and
sbb
sbb
js
xchg
mov
push
add
cmc
jns
in
cmpsb
ja
repz
aaa
pop
lods
inc
sbb
adcl
jae
rolb
dec
cwtl
bound
pushf
mov
push
out
cmp
push
inc
test
repnz
cld
cld
in
test
xchg
dec
in
icebp
outsb
outsb
fldcw
sbbl
leave
test
cmp
sbb
dec
add
jae
push
sti
adc
inc
mov
movsb
cmp
jnp
sub
test
dec
imul
test
jge
jns
mov
jecxz
mov
cmp
jb
sbb
fsub
mov
xchg
mov
sub
add
mov
or
push
cld
ljmp
xchg
jbe
jno
push
mov
adc
ljmp
xchg
iret
dec
lds
mov
movsl
imul
mov
mov
pop
xor
sbb
xor
bound
int
out
iret
lock
fs
pusha
stos
cmpsl
cs
xor
mov
add
jge
mov
add
loopne
daa
scas
repnz
stc
xor
jp
add
pop
xchg
push
imul
pop
push
or
dec
mov
outsl
out
ja
lret
orl
daa
xlat
xor
mov
mov
sub
popa
xor
sbb
xchg
push
pop
mov
jne
icebp
das
pop
inc
and
and
aas
and
nop
fstpl
orps
bound
xor
aaa
mov
leave
js
sub
lahf
ret
add
loopne
cli
xchg
aam
sbbb
fstl
jnp
adc
fcmovb
mov
sbb
and
and
cmp
dec
sahf
mov
xchg
mov
aaa
push
cmc
inc
std
inc
xchg
test
and
mov
ljmp
dec
push
fsubrs
push
add
imul
mov
adc
mov
repz
pop
cs
ja
stos
outsb
or
mov
popf
cli
mov
lea
or
popf
scas
xchg
jo
xchg
sahf
ficompl
nop
inc
pop
fcoms
push
nop
lds
sub
xchg
push
mov
pop
pusha
adc
sub
add
lea
and
push
mov
enter
pop
xchg
and
xor
xchg
mov
adc
and
mov
jp
test
fdivs
mov
jae
sbb
dec
push
int3
cmp
inc
leave
mov
loope
into
int
in
jnp
shlb
push
gs
or
adc
sahf
test
outsl
bound
xchg
lcall
inc
cmc
mov
jg
sub
adc
jmp
cmp
je
lods
xor
xor
decb
mov
pushf
lods
jnp
mov
push
enter
jns
mov
hlt
cld
test
lret
loope
mov
xor
sbb
nop
push
sahf
jno
sbb
pop
mov
out
out
mov
xor
add
push
cmovl
mov
cwtl
rol
or
cs
fistl
iret
in
and
mov
pop
or
dec
andb
insl
xor
mov
inc
or
push
push
sbb
sub
ds
pop
and
mov
mov
xchg
add
pop
fwait
test
xchg
pop
push
cmpsb
fldl
lcall
jge
and
adc
dec
cmp
jg
inc
clc
loopne
jne
mov
add
adcl
adc
push
rorb
pushf
shlb
jne
xchg
sar
ret
inc
aad
mov
decb
stc
and
test
xchg
push
out
mov
jmp
push
sub
testb
lcall
popf
in
cli
dec
add
stos
cmp
jb
jnp
movsl
ja
insb
out
push
loop
scas
fcomps
mov
sti
jo
fcmovu
mov
push
xor
adcl
xchg
ret
rcll
pop
lea
push
popa
dec
out
lahf
jne
mov
iret
mov
adc
xor
pop
ljmp
adc
call
mov
sub
xor
mov
into
js
ja
sub
pushf
xchg
fucom
loope
call
xchg
sub
enter
mov
jnp
xchg
lret
insb
or
in
stos
push
sahf
aam
dec
xchg
dec
pushf
lahf
arpl
jmp
lods
subb
dec
mov
pop
jge
jnp
lods
xlat
inc
aas
inc
cmpb
out
dec
mov
fdivs
sbb
mov
lock
or
mov
mov
call
mov
push
aas
test
mov
int
add
pop
enter
nop
mov
push
xchg
pop
push
mov
scas
fcmovnb
rorb
negb
sbb
inc
adc
out
and
mov
push
flds
insl
in
sbb
fisubl
cltd
pusha
loop
test
int
adc
icebp
fimull
sbb
jo
lods
push
xor
or
jl
std
pop
pop
das
into
pop
dec
sbb
cmp
xchg
loopne
or
push
sub
bound
inc
fcompl
jl
leave
cs
or
mov
movsl
mov
jmp
push
lea
fwait
dec
sbb
test
jp
dec
push
mov
push
xchg
mov
mov
xchg
pop
das
jno
jle
into
push
cmp
popa
and
dec
push
push
dec
xor
adc
imul
cmp
mov
shrl
jne
fwait
sahf
jnp
sub
jno
data16
push
aas
out
inc
dec
fisubs
popf
lods
addr16
push
inc
mov
repz
shrb
mulb
adc
push
lea
push
push
sbb
dec
pusha
inc
push
add
out
pusha
arpl
pushf
cwtl
lds
insl
rcll
add
adc
and
pop
sub
inc
jo
fsts
imul
lea
pop
or
push
xchg
xchg
dec
mov
cmpsb
fidivrl
mov
mov
imul
outsb
pop
leave
int3
cli
rcrb
cli
or
sbb
xor
sub
hlt
mov
dec
in
addl
jg
mov
push
arpl
in
cmp
and
out
jmp
jle
repz
insb
dec
shrl
push
pop
frstor
popa
cmp
pushf
pusha
in
xchg
pop
dec
pop
out
mov
push
cmp
gs
dec
lods
xorb
jne
iret
pop
int3
les
lods
xchg
jae
mov
adc
mov
leave
std
outsb
sbb
push
sub
sbb
jne
insb
fidivrs
rorb
shll
ljmp
pop
sahf
cmp
xchg
xchg
fbld
sbb
cwtl
jne
leave
xor
pop
xchg
and
in
clc
add
scas
jae
aad
clc
icebp
adc
insb
cmp
ror
pusha
sbb
loop
push
inc
mov
push
test
mov
movsb
orb
mov
pop
ret
aad
mov
outsb
and
ret
cmp
add
loopne
jne
shrl
adc
adc
arpl
or
outsb
test
outsl
cmp
outsb
sti
add
lahf
pop
sahf
insb
push
pop
jbe
mov
repnz
dec
fnstcw
addr16
rcr
aas
mov
adc
push
add
dec
sub
ljmp
sti
jae,pt
inc
cmp
in
or
fisubrs
mov
dec
lret
push
add
xchg
cmp
int
cmp
mov
clc
stos
dec
adc
inc
add
mov
pop
mov
addl
std
fsubl
sahf
outsb
pop
mov
es
pusha
stos
mov
lea
popf
cmp
dec
add
je
mov
mov
das
insb
loope
and
xchg
in
add
das
inc
mov
xor
enter
inc
jl
add
gs
aam
inc
std
xor
int3
fcmovnb
daa
pop
jns
pushf
add
movsb
dec
jo
stos
pop
jg
inc
insl
ret
sub
je
ss
test
arpl
popf
adc
inc
lea
pushf
sbb
repz
dec
jne
scas
ret
or
neg
iret
into
fwait
push
mov
cmp
lcall
mov
push
imul
int
arpl
repz
xor
xchg
outsb
jbe
xor
dec
xor
lock
mov
fucomip
repz
dec
xor
jns
fsubs
add
fisttpl
ret
xor
sahf
sub
or
dec
pop
sub
adc
dec
sub
push
push
lahf
int
fnsave
jp
pop
mov
repz
fmul
and
xchg
mov
movsl
out
test
in
mov
roll
push
in
or
pop
lds
and
or
test
jbe
adc
add
lea
rcr
aam
shrb
jno
mov
add
das
jbe
test
and
movsb
mov
repnz
shll
inc
mov
lcall
sbb
scas
xchg
jg
mov
ret
or
or
and
jmp
push
or
aas
xor
cld
mov
dec
bound
sahf
adc
pushf
inc
mov
sbb
std
sub
mov
inc
sub
sub
ljmp
fistpll
add
insb
cld
jno
scas
ret
xor
dec
test
adc
sbb
jae
dec
fildl
jnp
inc
decl
mov
mov
mov
dec
push
cmp
xor
cmp
lret
xor
mov
clc
mov
fsubl
and
fsub
loopne
shrb
stos
fists
scas
shl
push
mov
popf
loopne
test
adc
loope
stos
call
sub
jae
adc
jl
repz
cld
inc
xchg
push
cmp
mov
in
xlat
out
jae
mov
xor
out
in
cmpsb
inc
or
icebp
jmp
cmp
or
dec
mov
push
pop
icebp
push
xchg
inc
sub
in
gs
out
cmp
stos
jg
push
sbb
sub
hlt
jno
in
movsb
xlat
xchg
mov
adc
ja
sbb
mov
mov
xor
xchg
adc
xor
es
ss
cld
lock
push
cmp
movsb
or
insl
into
xor
lock
aaa
dec
and
inc
sub
addr16
repz
es
lock
cmpsl
shr
xor
nop
lret
inc
les
push
pop
mov
xchg
cltd
pusha
xchg
cwtl
popa
inc
jg
cld
cmp
outsl
mov
iret
dec
das
add
pop
icebp
sbbl
mov
add
add
out
test
pushf
mov
sub
mov
inc
in
es
xor
pop
leave
xchg
cltd
fnstsw
pop
adc
sub
lds
fbstp
cmp
sub
xor
dec
shr
xchg
ja
fwait
xchg
push
lcall
test
and
mov
in
sub
lea
adc
sti
cmp
aaa
mov
sub
jb
and
cld
xor
ror
lds
shl
insl
scas
mov
mov
xchg
bound
mov
or
push
stc
jo
and
iret
fdivrl
stc
ja
sub
pusha
out
inc
mul
sbb
adcb
test
xor
movsb
cwtl
sbb
jle
or
call
adc
jmp
aad
dec
push
jnp
test
push
inc
mov
fdivl
cmp
push
push
mov
ret
fnstcw
push
jo
js
sbb
mov
and
sbb
dec
dec
sbb
xor
sti
hlt
pop
icebp
lret
jnp
pop
lock
sub
pop
jmp
aas
push
or
fistl
xchg
lcall
es
mov
ret
stc
mov
and
pop
fnstsw
or
push
sahf
jle
mov
or
loopne
and
pop
adc
or
icebp
outsb
add
add
mov
bound
inc
sbb
movsb
mov
cmp
arpl
mov
dec
mov
jmp
test
push
out
sub
pop
xchg
mov
mov
ss
sahf
sub
insb
jp
mov
fisubrs
fistps
lods
add
cmp
pop
jl
mov
mov
repz
loope
push
test
mov
aas
pop
lds
pop
push
xchg
cmp
lahf
addr16
int
jmp
sub
xchg
test
jecxz
push
xchg
push
cld
ds
in
dec
cmp
adc
sub
jmp
stos
ja
lcall
daa
cld
cmp
add
out
mov
iret
mov
lret
pushf
jae
mov
mov
hlt
addr16
push
test
sub
push
mov
out
sub
dec
sub
scas
into
sti
scas
fimull
outsb
mov
add
test
dec
loope
xor
and
fcomps
testl
and
popa
mulb
les
jp
sub
cmc
fs
cmp
idiv
mov
cmc
call
lods
imul
or
movsl
cmp
and
xor
jge
mov
outsl
sbb
out
out
or
mov
xor
je
pop
adc
pop
jae
dec
fsubrp
pushf
sahf
cmp
sbb
lock
pop
out
loop
cmp
fdecstp
rclb
xchg
pop
adcb
lock
jae
dec
xchg
ror
mov
cltd
inc
lods
mov
add
push
xchg
fadds
daa
insl
or
adc
or
filds
ds
xor
cmp
stc
pop
rclb
and
pusha
xor
mov
and
jp
push
lods
fdiv
nop
fists
popf
or
fwait
mov
xchg
rolb
sbbb
or
sbb
inc
enter
sahf
cmp
xchg
out
in
mov
lods
imul
das
sub
aas
fistps
add
adc
stc
sbbb
xchg
sub
mov
aas
or
lea
fdivrs
lret
popf
adc
int3
popa
lret
jp
inc
push
push
push
jmp
scas
jno
push
xchg
cmp
push
ja
cmc
and
bound
inc
mov
push
aad
mov
cmp
stos
push
push
fistpl
stos
push
xchg
mov
movsl
sbb
shrl
sub
dec
push
or
scas
stos
loopne
cld
push
clc
mov
mov
mov
fstpt
out
cld
test
fbstp
xor
mov
popf
adc
enter
add
and
cmc
sub
insb
movsl
or
dec
add
mov
popf
add
mov
movb
mov
inc
or
push
notb
mov
push
sbb
xor
mov
adc
adc
fidivl
or
xor
sub
les
sbb
enter
lret
cmp
sahf
call
sbb
sbb
dec
sahf
ja
or
and
cmc
push
ror
dec
fistl
inc
or
dec
bound
outsl
icebp
and
decb
dec
fcompp
xor
cmpsb
xchg
aad
pop
cmp
or
dec
xlat
mov
mov
test
ret
xorb
cmp
jnp
mov
jbe
inc
mov
cmp
repnz
mov
xor
fsub
subl
int3
fcom
mov
nop
testl
sbb
mov
mov
mov
stos
mov
fsubl
mov
mov
xor
test
stos
mov
fldl
adc
sub
mov
das
out
adc
arpl
test
add
push
aas
aaa
or
inc
js
lea
adc
mov
es
inc
test
icebp
cwtl
pop
movsb
aas
lods
xchg
jno
pop
in
mov
push
mov
adc
pop
jbe
sub
mov
dec
mov
out
push
sbb
fwait
gs
xlat
mov
mov
sti
imul
jecxz
icebp
mov
add
jl
es
fs
mov
arpl
imul
sbb
jecxz
jo
jl
test
ss
loop
arpl
subb
mov
mov
std
roll
add
aas
cmpl
sub
popa
cmp
mov
out
jle
gs
scas
jbe
and
and
inc
and
clc
mov
mov
orb
test
dec
dec
and
push
push
jmp
adc
and
ret
push
and
aam
mov
inc
add
sbb
xorb
push
pusha
daa
mov
fildll
das
test
lret
fmuls
shr
ss
jns
inc
inc
into
dec
xor
das
mov
mov
adc
mov
repz
xchg
mov
jae
add
lret
or
push
sarb
daa
jo
mov
fcmovnb
inc
fwait
int3
push
xlat
int3
xor
stos
lret
sbb
das
shlb
ret
call
fwait
cmc
inc
aaa
out
pop
add
mov
inc
out
scas
adc
mov
imul
scas
out
and
fcoml
arpl
fdivrl
out
pop
pop
data16
sarl
adc
mov
lahf
xor
cmp
insl
push
mov
add
adcb
popa
jp
clc
dec
notb
jnp
cwtl
fadds
add
pusha
inc
mov
cmpb
cmpsb
fimull
xor
fdivs
push
les
stc
shrl
or
inc
xor
lods
xchg
mov
pop
pop
sbb
data16
dec
sub
lods
mov
pop
mov
cmp
sub
and
xor
fnstenv
fwait
adc
lea
mov
xor
arpl
outsl
dec
xchg
push
mov
es
push
mov
in
outsl
out
je
pop
sbb
dec
xchg
push
jo
js
aas
pop
jns
fs
imul
aas
clc
leave
nop
pop
jb
xchg
mov
inc
fcompl
test
mov
sbb
mov
sub
es
std
fsubl
leave
jns
cwtl
cltd
push
and
cld
xchg
mov
adc
bound
mov
arpl
pop
std
popa
or
add
cmp
call
dec
aas
fisttpll
out
in
xchg
add
lret
jecxz
pop
aam
xchg
and
jle
sub
scas
jecxz
and
mov
dec
shlb
ja
and
pop
pusha
lods
xor
sti
in
jns
mov
enter
imul
jle
dec
mov
and
mov
add
test
in
iret
lret
pop
or
or
cmp
out
test
insl
mov
xlat
arpl
mov
jb
adc
lret
xor
stc
jmp
icebp
xor
adc
aam
or
mov
mov
pop
addr16
stos
loopne
sahf
fs
sbb
lret
addr16
orl
jle
mov
int
cmp
in
xchg
test
scas
or
or
into
and
mov
add
pushf
aam
cltd
xor
xor
aam
cmp
xchg
out
mov
sbb
xor
push
add
lds
adc
out
lods
fwait
test
jne
or
arpl
jb
inc
inc
and
xchg
sti
test
and
inc
and
je
mov
and
pop
adc
sub
xlat
fldenv
jb
mov
mov
cmp
cs
jp
sbbl
add
pusha
lods
sti
hlt
mov
mov
repnz
pop
inc
xor
fisubrl
jmp
mov
inc
loop
inc
pop
std
enter
mov
cmp
pop
int3
sti
and
test
adc
inc
outsb
and
push
add
pop
dec
mov
xchg
fstpl
lret
aad
ja
push
pop
shlb
xor
jnp
sbb
cmp
mov
daa
or
and
jno
xchg
cli
sub
mov
xor
sub
add
cwtl
pop
fidivrs
or
mov
test
dec
cld
inc
cltd
xor
sub
loope
jb
sub
add
push
roll
jae
sub
mov
sub
fcoms
imul
xor
and
xchg
xchg
sti
insb
out
add
stos
out
push
push
icebp
fmull
inc
in
aaa
sub
in
pop
or
jb
je
movsl
stos
addl
and
pcmpgtb
or
scas
xor
stos
mov
dec
sbb
stos
sahf
mov
test
mov
push
aas
xor
daa
inc
mov
ljmpw
notl
inc
test
rolb
mov
sbbl
mov
mov
andl
push
mul
mov
fisttpll
dec
jns
enter
xchg
pop
jns
dec
cmpsl
fstps
sbb
pop
adc
enter
and
stos
std
push
cwtl
adc
and
int
pop
add
dec
xor
xor
push
addb
test
inc
mov
adc
pop
into
sahf
jns
pop
in
pop
in
cmc
cltd
es
lret
cwtl
daa
mov
aam
jnp
sub
out
cwtl
push
inc
or
sarl
add
jecxz
sbb
inc
lock
mov
inc
xchg
add
pop
fs
outsb
clc
and
popa
loop
push
sti
pop
loope
data16
stos
test
les
fs
mov
add
and
cmp
inc
mov
shl
dec
mov
cwtl
in
ret
scas
adc
sub
sbb
mov
es
test
shrl
mov
loopne
xor
scas
sbb
push
or
out
dec
inc
cmp
adc
jp
mov
test
repz
sbb
dec
mov
cmp
subb
mov
stos
adcl
imul
and
adc
loopne
shl
or
std
mov
xor
pop
xchg
adc
cmp
mov
test
xchg
popa
pushf
mull
in
mov
inc
int3
movsl
adc
dec
loop
lods
insl
and
bound
cmp
push
push
sti
sub
xor
out
cmpsb
xchg
orb
jae
mov
enter
cmp
and
testb
ds
and
jo
out
stos
in
vmovss
incl
xlat
sbb
xor
add
mov
lea
in
mov
mov
cmpsl
test
jo
addr16
stos
inc
daa
cmp
pop
ljmp
aaa
cld
add
cs
lock
inc
push
int
fucomi
xor
dec
jecxz
xchg
pop
jg
or
pop
sbb
inc
aam
cld
lds
fs
in
lahf
sub
shrb
add
xor
dec
mov
clc
lcall
or
hlt
loope
iret
and
dec
sbb
add
loopne
inc
push
mov
add
mov
jne
mov
nop
inc
cmp
sbb
ffree
sahf
xchg
adc
fisttpl
lock
mov
fs
xor
xor
cmp
xchg
popf
or
les
xchg
cmp
movsb
mov
push
cwtl
xor
dec
jle
sub
xor
rorl
dec
dec
ret
sbb
das
out
fs
add
loop
jbe
or
andl
inc
dec
ljmp
mov
xchg
pusha
out
stos
and
stc
sti
nop
fiadds
mov
stos
cmp
mov
adcb
xchg
in
xor
test
fs
push
rcl
xchg
mov
ret
and
pop
inc
scas
lods
pop
push
xchg
xchg
int
push
jne
xor
push
or
mov
enter
mov
or
sub
adc
cld
or
sub
push
gs
or
inc
movsb
push
mov
insb
lret
lods
mov
and
addl
jmp
clc
call
mov
dec
arpl
mov
mov
cwtl
inc
cmp
ss
cmp
nop
rol
mov
mov
cmpb
negb
out
and
inc
ret
adcb
dec
rorl
pop
add
es
rclb
and
jmp
mov
inc
cmp
mov
fimuls
xor
lods
pop
aas
mov
dec
repz
mov
rcrb
inc
ljmp
add
mov
aam
repnz
aad
sahf
push
leave
mov
cmp
out
xchg
or
push
in
sar
mov
xchg
pop
dec
stc
lahf
jb
iret
sub
jle
mov
iret
lret
mov
js
mov
mov
ss
in
test
adcl
sbb
mov
push
adc
cmc
mov
xlat
mov
iret
mov
cmpsl
lahf
sti
cwtl
scas
and
add
test
repz
push
in
cltd
mov
dec
popf
cmc
icebp
inc
sub
lods
fwait
gs
daa
mov
push
or
xor
jo
mov
push
xchg
adc
push
fldl
dec
inc
inc
into
mov
movsl
cli
js,pt
inc
mov
xchg
lods
ljmp
icebp
sub
dec
imul
push
daa
test
dec
cmp
adc
mov
mov
adc
pop
pop
sahf
xchg
shl
push
adc
test
fdivrs
or
xchg
adc
add
stos
ss
add
pop
leave
in
xchg
push
fldcw
pusha
dec
nop
sub
pop
mov
mov
shll
lock
lahf
test
xchg
jnp
imul
nop
imul
sub
and
ljmp
xor
cmp
pusha
or
adc
cli
loopne
test
repnz
mov
cmpsb
dec
sub
sbb
jmp
jecxz
mov
or
cld
and
decl
pop
fstp
mov
and
add
mov
hlt
add
mov
mov
pop
inc
push
js
jl
inc
inc
cmpsl
stos
lret
sub
xchg
mov
add
xor
scas
add
es
pop
adc
insl
shrb
lahf
cmpsb
stos
loope
mov
push
mov
in
jne
pop
mov
int
popa
int
out
or
fisubrs
cmp
and
dec
fstpl
je
fstl
test
sbb
jecxz
xchg
add
lock
push
imull
push
inc
mov
ret
mov
pop
cld
sub
cmp
push
int
sbb
mov
loopne
call
out
mov
jp
sub
mov
mov
fucomp
enter
cmp
pop
cltd
jl
fisttps
or
mov
into
test
and
add
push
push
mov
jge
mov
mov
pop
subl
xchg
mov
outsl
push
inc
add
mov
xor
in
hlt
xchg
mov
mov
mov
dec
jl
inc
int3
or
fwait
shl
test
sbb
and
push
cmpsl
dec
sub
inc
hlt
jle
mov
xchg
test
jmp
cmp
test
cmc
inc
not
ret
mov
xchg
mov
push
xlat
and
sub
mov
test
loope
pop
pushf
push
xchg
aaa
pop
dec
andb
call
popf
mov
js
mov
sbb
mov
loopne
cltd
movsb
lea
cmp
jge
jb
jmp
or
imul
sahf
jo
or
cmp
pushf
mov
push
movsl
mov
dec
test
lea
inc
pop
mov
repz
xor
mov
fnstsw
xchg
test
cli
jbe
adc
jbe
dec
add
mov
nop
fisubrs
dec
xor
adc
mov
stos
pop
jmp
jg
push
std
dec
add
ret
lock
cmpsb
in
aam
mov
lret
adc
push
ret
inc
adc
mov
mov
push
insl
jg
int
cld
rcll
sub
hlt
mov
jcxz
and
fs
sahf
ret
push
aaa
push
aas
xchg
or
mov
shlb
loopne
stos
cmp
push
xchg
inc
dec
dec
or
mov
repz
rolw
icebp
stc
mov
mov
mov
push
jne
lods
push
mov
mov
and
shl
ss
fucomip
xor
outsb
cmp
aam
divl
sarl
sbb
frstor
int3
add
cmp
hlt
xchg
xchg
adc
mov
cmp
mov
jb
push
push
fs
lods
popa
push
pop
lahf
add
add
or
pop
mov
or
std
stos
or
pop
scas
movsb
pop
and
sub
cmp
outsb
ja
xchg
stos
and
jmp
cmp
pop
or
insl
movsl
leave
ja
sahf
ja
xor
dec
pop
loope
pop
or
cmpsb
int
sbb
ret
fmuls
add
xchg
mov
ljmp
jnp
inc
test
cmc
lret
sub
std
lret
add
xchg
lods
pop
xchg
or
lahf
cmp
jne
out
imul
rcll
call
aaa
mov
in
pop
popf
jl
js
mov
js
mov
xlat
or
je
aam
mov
in
mull
lret
and
jecxz
mov
cmp
enter
xlat
aas
les
push
push
mov
xor
scas
ss
fneni(8087
jl
arpl
sub
dec
xchg
lret
mov
sub
lods
daa
pusha
aad
fcos
or
lods
nop
sbb
aas
lret
sahf
adc
std
push
xchg
lods
or
cmc
adc
into
mov
sub
jg
addl
or
mov
dec
push
shl
push
fs
aaa
jae
dec
lock
mov
pop
in
push
pusha
adc
scas
xchg
pop
addr16
pop
cli
fmulp
push
mov
mov
lods
mov
xor
into
cmc
add
stc
shrb
mov
push
nop
decl
out
test
repnz
mov
xchg
xor
sahf
out
repnz
ss
mov
fs
add
ficompl
shlb
add
in
jno
les
bound
rol
js
add
orb
out
aad
sbb
mov
pop
adc
inc
jb
push
jge
pop
push
ljmp
orb
repz
pop
gs
aas
repz
in
adc
adc
cli
test
or
test
mov
fnstenv
add
mov
les
inc
jp
into
jnp
mov
shll
aaa
push
repnz
and
and
sub
jae
sub
sub
pop
sbb
mov
ds
sub
xor
jecxz
push
pop
jo
ret
mov
out
movsb
sbb
mov
mov
add
rcrl
xlat
or
pop
addr16
addr16
ficomps
pop
mov
jmp
pop
xlat
test
call
mov
mov
sub
xchg
cmp
sahf
out
mov
test
cmp
jns
push
push
xchg
pop
xchg
outsb
sarl
ficomps
inc
or
sbb
pop
dec
ret
jp
fdivp
lods
cmp
jle
sub
lahf
jne
ja
jge
jo
inc
xchg
sub
jns
std
cmp
or
xchg
push
fadds
mov
cmp
xchg
dec
cmp
loope
in
cmp
xor
jbe
inc
xchg
mov
mov
pushf
and
imul
push
lret
out
inc
in
pop
cli
insb
into
dec
cltd
xlat
xor
mov
xor
push
les
pusha
xlat
fwait
cmp
pusha
jl
sub
in
jl
xlat
dec
add
mov
mov
jp
push
les
jmp
ljmp
sbb
aad
insb
js
jne
shr
xlat
shll
dec
pop
mov
iret
ret
mov
adc
into
add
icebp
lods
in
mov
and
lods
jo
adc
push
rol
stos
out
outsb
out
sbb
movsl
movsl
daa
add
inc
xchg
lcall
xor
mov
cli
ljmp
mov
sub
xor
jns
cmp
es
sti
pop
push
nop
push
out
lcall
vcvtdq2ps
sub
aad
inc
andl
repz
cld
call
cli
mov
inc
in
cmp
addb
jns
test
es
test
and
dec
outsb
shrb
shr
mov
xrelease
cs
jmp
push
in
inc
inc
ljmp
sbb
lret
lods
pop
rorl
add
test
jmp
in
icebp
addr16
repnz
inc
pop
or
std
sbbl
mov
hlt
mov
sti
cmp
push
bound
sbb
hlt
add
mov
mov
ret
lea
sub
je
push
sahf
mov
jle
push
nop
shlb
ss
cwtl
dec
aaa
ja
push
pop
or
pop
out
adc
rcrb
mov
cmp
int3
or
call
into
push
test
push
inc
inc
test
lret
dec
mov
pop
push
sbb
imul
shlb
rcll
div
mov
dec
sarb
pushf
sbbb
push
dec
and
xchg
inc
xchg
cltd
lret
lock
out
insb
mov
mov
sarl
sub
leave
add
inc
lock
in
dec
cmc
push
test
cmpsl
lds
mov
inc
cmc
cltd
lock
and
aaa
int
out
lret
js
inc
or
push
xchg
sub
mov
stc
add
push
ds
lahf
inc
and
int3
out
xchg
pop
adc
imul
bound
mov
push
iret
out
pop
xor
or
sub
xchg
lret
add
mov
sub
mov
add
sbb
dec
cmp
xchg
lds
sbb
in
jecxz
cmp
mull
sub
inc
mov
dec
cwtl
push
into
inc
sbb
jo
nop
push
dec
mov
jbe
xor
cmpsl
mov
dec
in
or
cmp
push
addl
das
mov
jo
pop
lret
mov
sbbl
shlb
mov
iret
aas
jbe
jb
dec
shlb
dec
cmp
xchg
lock
sbb
loop
lods
les
stos
mov
or
sbb
sub
pop
jl
mov
lds
push
in
popa
adc
pop
aad
xor
push
pop
sub
call
inc
mov
clc
in
jg
cmp
mov
xorb
out
jbe
adc
imul
inc
sub
aas
pop
pop
fldl2t
jns
pop
gs
movsl
dec
scas
dec
and
popa
lahf
mov
adc
push
stc
mov
inc
addr16
adc
mov
push
push
sub
jge
movsb
mov
jne
bound
jns
and
cmp
mov
mov
movsb
xchg
aas
rcrb
lods
inc
jo
popa
bswap
cld
in
push
or
rorb
lret
sub
iret
cs
mov
outsb
pop
mov
push
xor
pop
sbb
imul
dec
dec
inc
test
lahf
jle
sub
pop
mov
sbb
jecxz
xchg
leave
and
cmp
mov
into
mov
mov
push
pop
push
cmp
or
dec
into
jns
call
aam
aam
icebp
push
cltd
or
and
roll
cmpb
mul
mov
jae
fnstenv
push
mov
cmp
or
dec
mov
or
ds
adc
adc
stos
js
fsubrl
inc
cmp
or
clc
mov
pop
or
push
rcrl
mov
lahf
jns
push
push
sbb
repz
and
cmp
push
pop
pop
jbe
mov
addr16
xchg
lret
xchg
mov
inc
pop
imul
sbb
push
dec
sub
bound
cwtl
mov
mov
aam
adc
jne
cld
daa
nopl
sbb
pushf
xchg
adc
enter
cmp
pminsw
ljmp
mov
outsb
fstp
loop
mov
cmpsl
adc
inc
ret
xor
sub
inc
out
or
mov
pop
ljmp
stos
sub
xlat
inc
filds
jnp
pop
xchg
or
stos
in
jg
jb
sarl
int3
stos
sub
pop
mulb
push
mov
or
push
sub
in
push
popf
xchg
test
pop
mov
pop
aam
ret
pop
loope
pop
push
cmpsb
decb
lea
xchg
out
mov
mov
sti
adc
or
pop
out
ds
addl
sahf
dec
and
js
mov
cmpsl
inc
jecxz
jo
mov
mov
int3
pop
ljmp
clc
xchg
loop
xchg
jno
sbb
push
push
sbb
add
sub
mov
rorl
in
leave
addr16
pop
xchg
xchg
pop
inc
daa
jg
icebp
pushf
push
lret
movsb
jnp
pop
fisubs
jge
adc
dec
jg
mov
mov
jg
add
fdivr
lock
test
insb
ljmp
cmpsb
imul
int3
ficoml
aas
lcall
xchg
xchg
ret
mov
movsl
push
pop
nop
fcompl
adc
idiv
mov
subl
inc
or
aaa
xor
sahf
and
cld
fwait
xor
mov
fistpl
jae
mov
mov
pop
inc
ret
cli
in
cwtl
add
cmp
or
das
sbb
or
ss
daa
inc
test
xlat
push
out
and
call
repnz
mov
hlt
sub
jp
notb
icebp
xchg
cwtl
mov
mov
xor
dec
pop
arpl
xchg
fsts
dec
ljmp
fs
pusha
cmp
jbe
xchg
mulb
add
cs
or
adc
push
jnp
add
inc
xchg
int3
xor
mov
push
loop
pop
js
mov
mov
push
aaa
cli
ror
pushf
rolb
mov
fildl
jmp
ret
test
add
add
mov
es
cmp
mov
sti
xor
mov
mov
dec
jl
ja
xchg
jo
arpl
sub
aam
pop
xorb
int
into
adc
xchg
xchg
pop
imul
lcall
push
push
adc
inc
xor
inc
in
insl
scas
out
mov
lret
int3
popa
test
addl
sbb
fnsetpm(287
pop
lea
or
mov
mov
adcl
insb
int
inc
call
ret
cli
test
mov
loope
or
pusha
mov
dec
popf
fstpl
stc
lea
lcall
je
lods
add
int
xchg
outsl
stos
xchg
fmul
push
xor
adc
subl
outsl
lds
out
pop
std
or
stos
insb
in
or
xor
cli
std
jae
ss
xor
pusha
xor
jp
xchg
mov
mov
lahf
ss
leave
movsb
jp
out
repz
sub
jae
lock
adc
nop
mov
out
pop
orl
dec
mov
leave
push
jbe
aas
mov
pop
leave
cs
pop
rclb
sbb
lds
or
fucomip
adcb
push
pop
out
mov
incl
repnz
insb
lret
imul
jnp
inc
outsb
push
push
add
xlat
lods
xor
jb
fs
adc
lret
out
clc
mov
mov
imul
movsb
and
inc
and
xchg
push
xchg
xor
daa
popf
in
push
mov
xor
or
or
jmp
sbb
jp
inc
in
popf
add
ljmp
dec
mov
imul
sub
jns
mov
and
mov
unpckhps
imul
inc
lret
pop
jmp
popf
subb
and
jmp
mov
nop
mov
inc
out
and
out
dec
sbb
mov
cmp
add
test
and
cmp
pop
and
cmp
iret
movsl
fisttpll
fstpl
dec
mov
bound
dec
pop
out
in
jns
add
fsubs
sub
stos
test
rcrl
fwait
leave
or
andl
push
sbb
inc
pop
sbb
mov
ljmp
notb
adc
cmp
sahf
and
jns
gs
sub
xchg
lcall
sbb
mov
sbb
and
out
pop
xchg
mov
xor
mov
jge
mov
mov
int
pop
push
fsubp
fdivp
xchg
outsb
sbb
shlb
mov
arpl
sbb
inc
bound
inc
lods
sub
fildl
fidivs
insl
imul
lock
sub
data16
insl
sub
mov
mov
and
lcall
jle
sub
repz
fxtract
call
faddp
enter
inc
xchg
imul
call
data16
aaa
mov
xchg
push
cmp
jp
in
sbb
call
pop
movsl
ret
add
ja
sub
push
mov
mov
mov
pop
inc
sti
and
das
inc
inc
jne
imul
and
scas
loopne
test
or
sbb
dec
popa
sarb
popa
insb
inc
adc
xor
push
rolb
es
inc
shll
cmp
fwait
daa
and
les
fistl
lret
xchg
stos
mov
cmp
ja
gs
inc
adc
add
shlb
push
call
pop
in
jmp
mov
and
sbb
push
cli
jnp
fwait
in
in
imul
ljmp
pop
aam
cwtl
fs
negb
or
inc
push
inc
mov
jp
pop
dec
js
jae
sbb
out
xor
jo
sub
subl
idivb
jge
add
out
xchg
ret
dec
sub
mov
xchg
dec
xor
sbb
in
sarl
stc
stos
loop
jbe
jp
shl
cwtl
push
mov
xchg
xor
mov
or
ds
sub
sahf
inc
stos
push
or
dec
mov
mov
and
pop
adc
cmp
xchg
insl
pop
sub
xor
cmp
jle
cli
pop
dec
stc
jl
sbb
int
sahf
cmp
out
stos
lret
jno
cld
xchg
or
fdivs
push
icebp
and
sub
movsl
xor
adc
pop
pop
icebp
cld
xor
test
aas
add
jbe
xchg
xchg
shlb
add
push
pop
jmp
cs
xor
sub
mov
jg
arpl
sub
add
jns
xor
lods
mov
xor
and
dec
popa
or
dec
pusha
inc
mov
cli
pop
lods
mov
jge
cmp
insl
shrb
jp
or
in
and
pop
inc
mov
push
bound
push
inc
popa
pop
int3
adc
and
lcall
fldl
rcl
xor
jmp
dec
inc
xchg
mov
xchg
aam
fs
sub
test
pushf
cltd
pop
push
shll
cmp
pop
inc
push
out
add
pushf
test
or
sub
bnd
test
inc
sub
je
dec
cmp
dec
addr16
jecxz
out
xchg
xor
push
lret
jae
int3
rcrl
mov
mov
and
gs
dec
imul
aad
jle
loope
xlat
cmp
and
or
std
xchg
icebp
out
sbb
addl
ljmp
or
fwait
cmp
inc
outsb
xchg
int3
xchg
push
pop
cmp
pop
inc
sti
loope
lret
push
inc
mov
mov
add
pop
insb
adc
push
inc
clc
dec
jbe
mov
sbb
test
out
dec
iret
ja,pn
loope
ror
stc
dec
arpl
aam
xchg
popa
in
daa
adc
loop
inc
rclb
sti
add
rcrb
mov
inc
mov
jmp
lahf
imul
or
mov
lea
clc
or
mov
jb
mov
outsb
push
xor
cs
popf
pop
andl
repz
jnp
lods
mov
fldt
pop
and
push
je
jp
adcl
pop
in
mul
pop
shlb
popa
dec
sbb
mov
out
lahf
idivl
mov
cmc
popa
movsb
dec
loope
inc
hlt
stos
or
shrb
sbb
dec
int
mov
sti
loope
pushf
jge
ljmp
out
repz
call
cwtl
push
lret
dec
in
jl
fwait
negb
loop
mov
scas
out
xor
sbb
loop
insl
loopne
dec
int3
pop
lret
mov
int3
cmc
cs
jg
mov
cli
sbb
hlt
lea
or
and
pop
push
and
sbb
movsb
sbb
das
aas
test
cmpsb
xchg
insb
adc
jno
mov
sub
sub
daa
lahf
js
std
cmp
pop
adcl
sub
inc
stc
sub
cmp
xor
push
xchg
jle
sub
ficompl
das
sbb
icebp
lds
xor
pop
push
xor
push
mov
arpl
mov
inc
cmp
cs
mov
cmp
pop
fmull
and
mov
lahf
out
or
adc
cs
fwait
mov
flds
inc
mov
jp
xchg
mov
sub
or
xchg
xchg
xchg
das
lret
rdpmc
push
orl
or
andb
mov
jbe
pop
js
cmpsl
mov
jecxz
mov
xor
arpl
push
or
mov
test
test
and
ret
je
sti
xor
cmc
cmp
mov
cli
mov
sub
cmp
hlt
mov
gs
fsubp
cmp
pop
or
push
xchg
imul
in
dec
cmpsl
jae
inc
subb
pushf
jecxz
xor
pop
jl
and
pop
mov
out
mov
jnp
imul
clc
jnp
mov
rcrl
mov
std
out
pusha
mov
inc
jp
call
sub
cmp
popa
and
jno
aas
push
jg
orb
insl
aaa
mov
jmp
js
testb
shl
push
lods
xchg
dec
adc
sub
push
repnz
sbb
lcall
and
add
movsl
sub
mov
dec
or
cmp
imul
add
push
dec
dec
pop
mov
dec
or
cltd
test
mov
sub
icebp
gs
xlat
out
jecxz
sub
mov
sub
mov
inc
or
pop
dec
daa
or
sbb
sub
clc
add
add
cltd
lahf
cwtl
js
rorl
fdivs
mov
mov
aaa
int3
lahf
inc
mov
mov
jecxz
bound
clc
sbb
inc
jmp
inc
mov
shlb
mov
cs
mov
dec
andl
rorb
cmpl
push
mov
dec
stos
popf
fldt
call
mov
mov
mov
inc
repz
mov
es
mov
mov
add
test
fnstsw
fsubl
inc
push
mov
sbb
mov
ljmp
cmpsb
inc
xchg
mov
jl
cmp
cmc
or
pop
mov
mov
lock
cmp
cmpsl
pusha
js
mov
imul
out
sbb
rclb
or
sbb
and
push
mov
push
sbb
push
xchg
ret
mov
pop
xor
fadd
icebp
sbb
xchg
lea
inc
insb
or
cmp
stc
cmc
fucom
fcmovnbe
jecxz
sub
dec
scas
mov
push
or
dec
insb
cmp
adc
sar
sbb
pextrw
fnsave
xor
and
adc
cmpsl
shl
xchg
data16
add
dec
dec
and
xor
adc
jmp
test
dec
and
mov
mov
jge
ret
sub
ffree
push
mov
push
test
insb
pop
jmp
rcrl
and
shrl
out
mov
test
mov
sub
mov
insl
mov
mov
mov
mov
inc
add
push
mov
fwait
dec
idiv
rcl
sbb
andb
cmp
xchg
stc
dec
into
and
sti
insl
shl
in
arpl
xchg
cmp
mov
mov
and
mov
and
sbb
pop
mov
pop
addr16
pop
sub
dec
cmpsb
jb
leave
loop
adc
imul
loop
cmp
inc
outsl
adcl
popf
loop
or
test
ret
cwtl
sbb
pop
push
adc
jae
push
cmp
jg
daa
flds
insl
in
inc
scas
scas
lahf
imul
out
push
mov
mov
xchg
stos
shll
mov
mov
nop
dec
jb
adc
adc
lret
and
inc
cld
xchg
fcomps
cmp
fcomps
xchg
xchg
notl
adc
sub
jno
add
mov
faddl
imull
dec
mov
push
in
lahf
sbb
mov
adc
popa
mov
divl
int
sub
fmull
movsb
jne
xlat
pop
push
leave
fisttps
mov
xor
int3
xchg
pop
shrb
xor
lea
pop
mov
mov
lret
fimuls
sbb
popf
sub
inc
pop
cmp
sbb
pop
daa
cltd
xchg
shll
mov
adcl
sub
mov
dec
out
jge
pushf
adc
xchg
sub
icebp
out
jle
jmp
hlt
jmp
lret
sub
ret
rcl
movb
xchg
dec
lea
mov
add
leave
rorl
or
adc
out
mov
jp
pop
imul
popf
jnp
cwtl
adc
xorl
lea
cmp
mov
lret
add
sub
ret
sub
pushl
pop
inc
push
and
test
sub
fcom
pop
repz
mov
cmp
or
adc
xchg
repnz
mov
jecxz
aas
clc
or
pop
int
test
rcrb
lret
jp
sbb
stc
int3
mov
lds
add
sbb
inc
outsb
adc
loop
int3
subb
pop
mov
xor
inc
mov
scas
stos
test
xchg
outsl
mov
dec
cmc
leave
jecxz
jg
je
inc
mov
shll
cmp
or
sbb
jge
mov
mov
in
inc
push
scas
outsl
ret
xchg
cmp
jg
mov
mov
dec
mov
push
cmpsl
test
fwait
cltd
imul
fs
icebp
mov
ret
je
call
lds
in
insw
pop
cmp
bnd
into
xor
int
xorb
test
scas
repz
xchg
xchg
and
mov
push
fdivl
cmp
pop
push
mov
ds
lock
inc
adc
pop
push
movzbl
aam
xor
insb
pop
and
and
dec
jecxz
mov
mov
push
sahf
std
mov
negb
popa
pop
add
dec
imul
rolb
sbb
xor
mov
ret
es
mov
sbb
xlat
nop
insb
stc
inc
flds
in
fisubl
push
inc
xor
dec
sbb
out
out
js
sub
ret
lds
sar
xchg
nop
mov
mov
cmpl
mov
fsubr
mov
dec
push
cli
push
add
xchg
jnp
jbe
mov
js
mov
pop
xor
xchg
imul
mov
aas
mov
adc
out
pop
loopne
and
push
and
pusha
outsl
outsb
loop
or
insl
push
jp
adc
mov
or
das
movsl
and
scas
fstpl
pop
jp
incb
or
add
ds
cmc
push
rcll
loop
lret
jle
ret
aas
scas
mov
mov
pop
or
testl
xchg
shlb
mov
adc
pop
imul
rclb
jmp
subl
inc
loope
adc
fwait
mov
jae
mov
ret
sbb
addl
mov
rcll
adc
fxch
ss
sbb
scas
cmp
aam
movsb
mov
adc
sub
jb
stos
or
ja
add
cmp
pop
aas
or
jno
xchg
iret
xor
js
mov
lea
xorl
lret
loope
scas
adc
std
sub
pop
mov
jle
sub
insb
pop
mov
leave
inc
add
sub
cmp
mov
inc
add
jae
out
cs
jmp
sbb
sbb
gs
test
sub
pop
add
cmp
cmp
mov
dec
sbb
xor
mov
push
shrb
sub
imul
sub
mov
or
push
orb
neg
mov
aad
mov
ja
int
mov
pop
int
aad
pop
repnz
inc
push
xor
pop
cs
fwait
ret
ds
cs
dec
iret
roll
lahf
test
sbb
ljmp
sti
mov
push
lea
xor
cwtl
ficomps
pop
dec
out
movsb
subb
jb
inc
lret
cmp
pop
jp
fildll
les
inc
fbstp
inc
xchg
les
jb
test
sbb
loope
adc
icebp
lret
sub
test
jb
dec
cmp
fdivrl
adc
xchg
in
mov
push
out
mov
jnp
xor
mov
cs
insb
and
inc
fcompl
mov
sbb
repz
fs
sub
test
inc
mov
out
cmp
sbb
test
sahf
out
das
jp
enter
mov
sub
test
repz
test
ljmp
enter
xorl
subl
and
mov
sub
xchg
sbb
xchg
sbb
leave
loopne
testb
push
popf
and
xchg
push
repz
sti
addr16
out
and
cltd
movswl
cmp
popa
add
mov
outsb
cmp
push
in
jo
mulb
inc
mov
jo
mulb
mov
imul
cmp
mov
sub
dec
adc
push
push
sti
pushf
sub
add
dec
dec
dec
dec
imul
inc
jae
call
push
test
psrad
add
mov
sti
mov
imull
fsub
pop
out
dec
xchg
popf
mov
add
mov
xchg
sbb
insl
lods
roll
dec
int
jns
sbb
rclb
sbb
and
or
fcmovnu
lds
int3
add
and
push
fs
mov
mov
dec
xchg
ret
add
imul
xor
sub
adc
xor
or
dec
cmpsl
xchg
lea
scas
jns
daa
or
push
mov
imul
mov
shrl
mov
sub
adc
dec
mov
adc
mov
daa
mov
or
xor
ret
subl
shr
dec
sub
mov
inc
add
sahf
jle
xchg
ret
jno
add
dec
inc
sbb
and
int3
popl
pop
in
pop
rcl
push
stos
rcrl
aas
cmc
mov
test
xchg
mov
scas
ficoml
icebp
inc
stc
cwtl
mov
jno
and
sub
pop
test
lret
pop
push
fbld
repnz
roll
jno
pusha
mov
daa
xchg
orb
mov
and
mov
mov
xor
fcmovne
loop
or
ret
sbb
xor
jge
add
fimull
in
movsb
insl
clc
add
mov
inc
adc
std
lea
xor
mov
data16
mov
mulb
inc
xchg
and
cld
ljmp
dec
cmpb
addr16
add
lret
shll
stc
cmp
in
pushf
ret
or
xchg
das
fs
mov
in
gs
repz
lods
in
xor
and
xchg
jmp
mov
mov
test
and
dec
into
push
jp
mov
dec
movd
xchg
sbbl
cmp
stos
push
push
mov
xchg
sbb
or
cs
cmp
or
push
sub
cmc
jbe
outsl
adc
jmp
ss
out
fmuls
aas
data16
leave
mov
lds
sub
push
out
cld
pushl
cmp
push
mov
nop
push
aas
and
jns
sub
mov
in
push
sbb
dec
push
lahf
and
mov
push
pop
pushf
lret
jge
out
xchg
dec
popa
adc
mov
xchg
sar
pop
fdivrp
int
cmpsl
xlat
jmp
arpl
jbe
add
xchg
and
jmp
rcrl
imul
in
int3
sub
ret
dec
test
pop
push
fistps
insl
popf
mov
adc
aam
pop
aad
hlt
dec
mov
pop
dec
xchg
mov
inc
sub
rcrl
sbb
mov
xor
jl
push
rcrb
pop
repnz
mov
push
test
aad
stos
loop
lods
jno
or
pop
mov
shrd
pop
pop
lret
js
call
stos
cmpsb
cmpsl
xchg
cwtl
gs
inc
push
fiaddl
fcmovnb
lds
mov
push
and
pop
sub
sub
jb
push
movsl
mov
mov
inc
ljmp
push
jnp
into
shlb
lret
daa
adc
popf
leave
adc
pop
and
mov
add
jae
dec
fs
out
das
mov
mov
inc
jns
jb
jbe
mov
pop
mov
and
and
fs
mov
icebp
inc
ja
out
call
push
add
test
xor
in
xchg
fldcw
cmp
aad
jl
dec
iret
push
out
rcll
jns
push
adc
pushf
push
repz
cli
and
sbb
xor
mov
fs
daa
incl
xor
ret
xchg
jg
cmc
test
lock
imul
cmp
nop
fldcw
adc
mov
cmp
sbb
adcb
push
xchg
clc
inc
cmp
and
jecxz
push
xchg
dec
pop
popa
sub
fisttps
aas
mov
sub
sbb
push
popa
int
test
add
stos
and
xorl
sub
les
xchg
jo
adc
rorb
sub
cmp
das
mov
pop
negl
dec
sbb
push
adc
imul
xchg
stos
or
lods
lods
jp
sbbb
rcl
dec
pop
mov
int3
cwtl
jg
inc
pop
and
loop
lcall
jne
imul
dec
mov
jp
aad
scas
dec
xor
sub
ds
mov
jne
popf
shrl
andb
cltd
lods
push
ret
xchg
repz
enter
adc
xchg
jmp
mov
xchg
out
pushf
filds
mov
pushf
gs
cs
cmp
xlat
mov
cwtl
or
cmp
mov
inc
clc
and
push
imul
push
mov
mov
out
inc
pushf
inc
insl
lock
in
jg
mov
xchg
sarb
jns
lods
cli
scas
adc
cs
sub
jno
add
cld
ret
mov
mov
cmp
add
dec
jmp
mov
lret
imul
inc
sub
cmp
test
xchg
stos
add
jae
push
mov
mov
bound
cli
fcos
mov
fs
jnp
prefetchwt1
or
xor
test
xchg
sub
lock
jbe
rol
test
cmpsb
jno
dec
xor
mov
or
and
stos
mov
scas
fs
loope
jmp
cltd
adc
adc
cmpsl
add
and
lahf
sub
jo
mov
cmp
lods
inc
pop
dec
out
ss
sbb
rcl
imul
nop
sbb
loop
jne
dec
mov
cmp
into
pop
push
xor
jbe
addb
insl
lock
aas
movsb
sub
push
stc
jg
fwait
jle
stos
cs
jmp
or
in
jne
nop
std
loop
and
jb
and
mov
stos
out
sbb
cmc
lahf
sub
cmp
mov
insb
sub
loope
cmp
adc
ss
dec
pop
push
loop
push
insl
inc
int
movsb
mov
push
hlt
sbb
lods
mull
and
mov
out
adc
mov
sbb
mov
lcall
fbstp
mov
add
insb
ret
in
das
popf
ljmp
cltd
popf
add
fisttps
mov
inc
push
les
sub
cld
mov
test
jo
lcall
iret
mov
pushf
xor
jnp
lcall
das
or
add
stos
pop
or
cmp
sbb
xchg
outsl
popa
dec
pop
fidivrs
ret
jl
cmp
popf
aam
mov
es
sbb
mov
adc
push
loop
daa
lea
sub
stos
mov
add
push
dec
es
dec
cli
mov
das
call
inc
mov
arpl
xchg
js
mov
cli
lods
pushf
sbb
sub
orb
or
lret
repnz
les
and
or
fwait
pop
fiadds
pop
lret
jb
lea
pop
in
insb
sbb
xchg
out
sbb
jnp
or
aad
push
jle
jp
xlat
cwtl
int
mov
mov
adc
dec
push
ljmp
mov
cmp
fcoms
jle
jae
ss
out
lea
cwtl
arpl
clc
pop
movsl
jae
outsb
push
daa
xor
xchg
dec
xchg
adc
xor
mov
jge
dec
cmp
pop
cwtl
decl
cld
stos
adc
mov
loope
jmp
out
jb
add
shlb
and
sbb
lods
push
add
pushf
inc
test
or
push
sub
xor
jno
ljmp
add
outsb
daa
xchg
add
loope
lods
sub
outsb
or
lods
or
popa
mov
xchg
adc
xchg
xor
cmp
call
popa
mov
push
or
mov
lahf
clc
adc
mov
add
push
sub
loop
sbb
or
in
sub
cs
sbb
mov
xchg
and
and
fiadds
in
xchg
nop
xlat
test
cmp
movsl
xchg
and
lcall
and
in
ficompl
jmp
jb
push
xchg
pop
out
jo
stos
xor
adc
out
lods
sbb
pushf
or
and
push
lods
fyl2xp1
mov
fiadds
sub
cmp
sub
imul
dec
sbb
jp
inc
push
stos
inc
out
mov
jg
mov
cmpsb
adc
push
rolb
mov
cmpsl
sub
jno
mov
xor
cs
fadd
sub
push
lock
adc
stc
mov
xchg
lea
arpl
add
lock
fcoml
push
mov
lods
sbb
add
inc
das
fnstsw
push
cmpsb
and
in
inc
sbb
sbb
clc
jbe
jnp
imul
and
pop
imulb
mov
push
loop
pop
add
rorb
pop
mov
mov
inc
out
cmp
pop
add
and
or
fs
add
adcl
mov
nop
cli
gs
sub
xlat
mov
dec
mov
cmp
sarl
daa
mov
cmp
push
ret
cmpsl
ret
xlat
ljmp
clc
mov
rcrl
pmulhw
fldcw
sti
es
std
and
int3
dec
mov
mov
sti
fwait
add
inc
or
mov
and
pop
pop
lods
std
fidivrl
mov
out
jg
and
mov
jge
insb
scas
daa
mov
inc
loope
popa
mov
and
das
out
out
stos
mov
bound
dec
out
loope
mov
pop
ret
aas
lret
ror
push
jg
push
xchg
cmp
aam
dec
pop
add
enter
ret
int3
das
adc
daa
outsb
js
cmpl
push
cli
fs
aad
fsubrs
mov
gs
shrb
shrb
movsl
cwtl
pop
fistl
stos
or
add
divl
cmp
or
xor
inc
jo
arpl
push
movsb
jp
fcmovb
cwtl
addb
sub
mov
push
cmpl
std
xor
cltd
xchg
mov
push
pusha
gs
mov
daa
bound
in
mov
jo
pop
mov
add
add
inc
out
scas
pavgb
popa
mov
push
ljmp
stos
loopne
lcall
imul
add
scas
cmp
addr16
popf
sbb
hlt
loop
ffree
cltd
mov
cs
jecxz
cmp
mov
repz
repz
sahf
add
cld
cmp
lret
aad
bswap
test
ljmp
adc
hlt
or
xchg
mov
mov
xchg
jmp
in
test
xchg
lcall
iret
test
pop
cmpsl
inc
dec
dec
mov
adc
dec
mov
loop
xchg
out
cli
mov
push
dec
dec
and
insl
ljmp
fldenv
rclb
scas
imul
mov
pop
push
pushf
lods
sub
shll
mov
in
notl
inc
lods
out
dec
mov
pusha
mov
fwait
aad
or
loope
test
hlt
mov
pop
out
pop
fldl
jecxz
adc
nop
or
sbb
xor
jae
int
jecxz
adc
and
push
cs
sbb
jle
lahf
sbb
cmp
xor
fs
xor
loope
sbb
adc
popf
push
cmp
push
in
in
sbb
lahf
or
out
out
ss
xlat
scas
in
add
gs
jns
xchg
test
inc
mov
xchg
mov
mov
int3
lahf
dec
adc
mov
mov
pop
add
mov
test
loop
rcll
dec
xchg
stc
gs
adc
ss
push
movsb
test
pusha
test
sbb
insb
jbe
and
int3
test
xor
inc
push
pop
add
leave
fisttps
dec
gs
das
ficoms
frstor
adc
aam
arpl
and
inc
jnp
addr16
jnp
cmp
jb
pop
inc
dec
and
jne
sub
xchg
mulb
mov
cmp
sub
xchg
sbb
mov
sbb
in
add
adc
xorb
lds
jmp
cmp
sti
sub
ja
scas
scas
dec
js
outsl
les
jle
cwtl
jns
mov
push
ljmp
and
xchg
push
push
push
js
xor
lahf
pusha
push
jle
aaa
inc
xor
ds
sub
and
adc
pop
mov
and
shrb
out
andb
in
pop
mov
loope
push
or
fs
repnz
lret
andb
mov
cmp
je
roll
push
sub
enter
in
pop
inc
fcmovb
int
cmp
sub
cmp
pop
js
fwait
xchg
inc
cmpb
sub
xchg
xchg
fldt
adc
outsb
xor
push
push
cmpsl
xor
pop
xchg
mov
add
mov
data16
pop
cmpsl
or
inc
shll
popa
mov
cli
xchg
jmp
sar
mov
add
cmp
xchg
dec
or
lret
adc
sbb
sbb
sub
scas
xchg
mov
pop
dec
loope
push
mov
push
ret
rclb
repnz
sti
in
iret
add
ds
dec
test
sbb
aaa
pop
pop
adc
and
mov
fdivp
xchg
mov
inc
mov
test
movsb
mov
outsb
xor
cmp
iret
pop
fimull
xlat
mulps
movsb
mov
stc
add
es
xchg
cmp
aam
add
push
inc
add
lahf
arpl
int3
out
cmp
fcoms
outsb
or
aad
sbb
lcall
pop
fdivrs
in
rclb
cmp
ret
jb
dec
aad
adc
roll
mov
dec
test
fs
push
pop
pusha
lcall
call
rolb
hlt
imulb
add
xor
ljmp
adc
ret
sbb
cmp
mov
cwtl
mov
jno
pop
pop
enter
sub
mov
test
test
dec
sub
fildll
rorl
ss
add
dec
xor
adc
movsl
jno
outsb
aam
cmp
in
sbb
mov
xor
cwtl
mov
rcrb
fadds
mov
or
adc
xchg
mov
xchg
jg
outsb
sbb
pop
sahf
andb
dec
scas
cmp
xchg
pop
push
sar
xchg
add
inc
repnz
test
shll
outsl
push
popa
incb
xor
cli
push
lea
xchg
xchg
test
or
inc
or
xchg
xchg
fstl
jb
xchg
xor
mov
sarl
out
pop
jge
divb
adc
int3
cmp
imul
aad
dec
push
sub
mov
or
clc
dec
out
jo
in
jnp
xorb
mov
push
jno
jns
jo
lods
push
xor
clc
jbe
sbb
popa
cld
adc
fs
or
scas
movsl
stos
lods
xchg
inc
test
into
imul
lods
dec
popf
fs
add
fwait
in
jnp
push
aaa
imul
es
subb
mov
lea
inc
jae
mov
mov
sub
test
cli
das
mov
mov
js
stos
add
out
arpl
test
sub
jae
pop
jp
sbb
lahf
or
jmp
decb
and
and
jg
inc
aas
stc
test
aad
stos
jl
cmp
fidivrs
pop
imul
repnz
pop
xor
ret
ljmp
jne
popf
xchg
add
cmp
test
cmp
cmpsl
add
pop
mov
or
dec
jl
fldl
or
jl
inc
jno
shr
popa
loopne
incb
push
jmp
fnstsw
push
cmp
mov
scas
pop
cmp
or
repz
je
or
lahf
pop
into
inc
rorl
popa
lcall
nop
outsl
not
mov
loop
jl
push
stc
and
mov
sbb
lds
and
sbbb
cmc
mov
test
pop
shll
aaa
in
mov
mov
or
out
clc
fdivs
int3
inc
xor
mov
mov
cmp
xchg
leave
jecxz
and
mov
inc
jb
cmpsb
bound
jnp
or
xor
sbb
jae
sub
push
arpl
test
shlb
in
dec
sbb
xor
gs
fcmovbe
call
pusha
mov
into
cmp
or
jnp
call
mov
or
pop
inc
loop
cmpsl
mov
negl
pop
mul
sub
xchg
int
jle
popf
mov
and
adc
negl
sub
fnstcw
insb
mov
sbb
hlt
pop
cmp
mov
sti
adc
pushl
xchg
int3
cwtl
lods
push
pop
jb
add
push
sub
jge
inc
xlat
aas
or
mull
subl
imul
mov
or
push
loop
jnp
icebp
sarl
les
daa
cs
mov
lods
rcll
mov
pop
das
xchg
cmpsb
xchg
pop
cltd
cs
out
idivb
mov
leave
pop
dec
mov
xchg
cmpb
pop
pop
adc
fstps
sub
sbb
cmp
adc
inc
neg
mov
jne
fwait
jl
imul
mov
push
and
dec
jno
fisttpl
mov
ss
das
jb
push
in
mov
testb
lea
dec
dec
cli
inc
xor
test
fsub
repnz
or
fisubrs
inc
jge
dec
jp
xor
push
xlat
sbb
test
enter
add
mov
sbb
lock
sub
jmp
cmp
add
adc
scas
repz
cmc
jle
jmp
fidivrl
in
xchg
xchg
or
stc
ljmp
shrl
outsl
xor
loope
out
shl
push
imul
test
mov
rolb
stos
cmc
cs
jge
sbbb
inc
cmp
iret
xchg
adc
cmp
negl
int3
aam
inc
jmp
push
inc
push
push
adc
adcb
adc
pop
inc
jmp
jg
aam
mov
out
rcr
stos
adc
xchg
push
shll
push
inc
pusha
fldt
ret
fsts
cmp
dec
orl
jge
push
xor
cmp
int3
in
pop
xor
xor
mov
mov
aam
and
adc
popf
jne
add
mov
subb
or
dec
add
sbb
xchg
mov
mov
jl
xor
popf
jno
jle
adc
out
clc
jp
mov
cmp
add
pop
scas
cmpsl
sbb
xor
outsl
mov
aaa
adc
jae
jge
pop
mov
mov
jecxz
pop
mov
aam
jns
movsl
cmpsb
out
cwtl
inc
scas
lahf
enter
ja
push
stos
fmuls
push
insl
and
jo
andb
sahf
stos
mov
pop
lock
pop
daa
push
andb
iret
outsl
fwait
lods
cli
mov
out
pusha
inc
xchg
pop
dec
xor
ja
sti
loop
pushf
insl
xchg
mov
jmp
movsl
push
sub
jmp
cmp
out
push
js
sbb
fwait
dec
nop
inc
add
ds
out
pop
cld
cmp
xchg
xchg
lahf
sarl
add
jne
iret
pop
cltd
jns
cmp
jnp
data16
dec
ds
and
imul
or
sub
rcll
jno
and
stos
mov
mov
add
shrl
call
call
cwtl
mov
or
sub
fwait
pop
mov
inc
xorl
cmc
movsb
xor
mov
pop
ds
dec
mov
and
testb
jae
fidivl
push
or
daa
jns
jmp
mov
lret
addr16
xor
xor
inc
loop
sub
andb
lahf
ret
jnp
movsl
mov
sti
mov
rcr
dec
cmc
test
fistl
adc
cli
sbb
pop
xor
stos
push
sarl
popa
mov
inc
mov
les
mov
xchg
sbbl
add
or
nop
mov
stc
pop
pop
and
xor
push
cmp
inc
mov
mov
pop
lcall
int
in
cmp
je
not
mov
xbegin
mov
xchg
in
aas
out
fwait
js
loope
inc
push
loopne
pusha
adc
cmp
pop
ja
push
lods
inc
das
jmp
push
lock
push
push
xlat
outsb
inc
cmp
out
outsl
int3
sub
fistpll
cmp
mov
mov
fldl
pop
mov
jmp
add
cwtl
flds
pop
lods
xchg
mov
jne
inc
fidivl
arpl
in
sbb
test
in
and
pminub
dec
jae
lret
xchg
nop
psubusb
pop
push
fdiv
push
lret
int
inc
push
out
sbb
lret
ljmp
shll
mov
imul
xor
popa
sbb
nop
fisubl
popa
jle
jb
int
sbb
movsb
outsb
inc
or
xchg
ret
out
cmpb
adc
push
xchg
cltd
arpl
lahf
in
lods
mov
cmp
mul
imul
stc
cmp
mov
add
mov
pop
push
push
popf
outsl
movsb
mov
clc
xor
add
in
mov
das
movl
sarl
mov
sbb
sbb
push
mov
lds
int3
lret
aaa
ss
fsubrl
call
cltd
pop
pop
sub
pop
xor
dec
mov
mov
inc
jl
aam
rorl
daa
fldl
mov
test
sbb
mov
xor
cwtl
lret
mov
cmp
sub
adc
ret
insb
sub
daa
les
gs
aaa
ret
sbb
enter
stos
and
inc
jg
push
jns
hlt
js
cmp
and
adc
cli
loop
bound
push
aad
cwtl
inc
popa
cmp
loop
adcl
mov
aas
push
and
adc
rep
lods
jbe
add
or
push
sub
pop
fstpt
ljmp
sub
sbb
inc
pop
mov
in
xchg
or
pushf
jae
addb
cmp
outsl
sbb
jae
xlat
cmpsl
xor
aaa
pop
and
stos
sbb
jb
xchg
adc
cmp
dec
adc
xchg
sub
and
cltd
scas
inc
das
or
aad
sar
fs
and
jno
negl
lahf
cmp
addl
xchg
push
pop
test
and
xchg
xchg
pop
adc
push
mov
andl
data16
sbb
cs
mov
and
inc
das
xlat
inc
cmp
dec
jne
ret
inc
mov
insl
cmp
mov
push
rcll
cld
subb
xchg
adc
repz
scas
pusha
outsl
clc
inc
sbb
scas
aas
popf
out
cltd
dec
flds
shlb
loop
in
iret
lea
decb
push
mov
cli
mov
add
push
pop
jne
mov
jne
lahf
shl
mov
inc
es
xor
inc
arpl
rep
inc
adc
dec
repnz
loope
imul
nop
adc
add
lret
xchg
xchg
mov
jne
and
idivl
cltd
fs
js
or
push
pop
xchg
lock
mov
push
stos
fwait
jmp
arpl
fists
jae
dec
icebp
xor
push
or
sahf
dec
dec
mov
test
pusha
rol
and
adc
fucomp
mov
or
cmp
aaa
adc
out
push
sub
push
insl
rcl
shll
sarl
pop
test
add
sbb
dec
pop
adc
lock
jmp
pop
pushf
sbb
sbb
ljmp
fs
push
sbb
sub
cmp
sbb
push
xchg
and
or
push
sub
ret
adcb
in
insl
jl
mov
out
dec
insl
add
sub
jle
push
sub
cltd
and
jl
cmp
and
dec
cmp
cs
xor
hlt
and
mov
addr16
cmp
mov
imul
sub
fidivrs
xchg
mov
xchg
jmp
xchg
mov
out
cmp
sbb
icebp
adc
dec
lods
adc
lret
popf
pop
daa
ss
push
sbb
pop
scas
mov
sbb
adc
xor
fadds
lds
ss
push
mov
add
and
jp
lret
xchg
out
jg
cli
outsb
and
jns
enter
sub
inc
fiadds
in
dec
pop
leave
pop
and
arpl
jmp
imul
add
sub
push
add
aas
mov
out
dec
loop
pcmpgtb
insb
test
adc
sbb
cmpsl
xchg
outsl
les
xchg
add
addl
cmpsl
cmp
shlb
je
fmull
test
pop
mov
sub
in
mov
rcl
stos
imul
push
mov
xlat
dec
mov
call
push
sub
dec
sub
inc
out
jne
fcom
fcmovne
xor
cmpb
push
pusha
fs
pop
mov
xor
ret
pop
inc
frstor
push
test
dec
jg
insb
js
mov
movl
addb
push
test
lds
mov
mov
sarl
test
ljmp
fsubrl
outsl
mov
or
sti
ja
and
and
repnz
lea
inc
pop
add
testl
mov
sub
call
xchg
xor
lods
test
aas
jnp
mov
lret
inc
mov
repnz
xchg
incb
in
fistl
sarl
mov
push
pushf
movsl
jge
dec
fwait
das
es
in
in
enter
adc
add
shlb
aaa
dec
xchg
popf
sub
loop
add
ficomps
dec
cld
scas
jo
inc
bound
hlt
or
cmp
ror
mov
mov
out
xlat
loope
test
fidivl
mov
mov
lock
aas
adc
cmp
gs
notl
lea
movsl
lock
repnz
cwtl
and
fistpl
iret
jge
push
inc
data16
icebp
rclb
icebp
negb
popf
jg
lea
ljmp
loope
xchg
pop
mov
pop
sahf
mov
sbbl
iret
xor
sub
and
aam
fisttpl
push
loope
push
das
insb
loopne
enter
shlb
cmp
mov
add
sti
idivl
and
popf
flds
push
std
call
mov
jle
add
or
cld
sub
xlat
pop
inc
int
or
mov
or
imul
dec
aas
jg
mov
outsb
in
outsl
adc
or
inc
push
in
sbb
push
and
movsb
into
and
or
adc
jns
push
andb
into
mov
rclb
scas
rol
stc
xor
pop
xor
int3
insl
adc
cld
aam
pop
repnz
outsl
fsubrs
pushf
in
rclb
adc
sti
adc
jle
add
aaa
pop
pushf
icebp
insb
adc
xchg
pushf
and
xor
sbb
stos
push
ret
push
push
das
ret
adc
movsl
jp
sub
shlb
andb
int3
and
loopne
add
negb
fprem
inc
clc
cmp
das
jb
mov
in
in
sbb
mov
or
in
rolb
pop
xor
das
sub
aam
push
inc
and
mov
cltd
test
jae
shrb
or
mov
mov
dec
pop
adc
aas
dec
pop
cmc
out
pop
or
scas
sbb
push
cmc
sahf
gs
insl
cli
ja
bound
add
lret
lods
and
xchg
outsl
jp
mov
out
or
not
rclb
mov
dec
pop
fbstp
adc
insb
rcrb
ret
mov
mov
std
adc
xchg
sbb
shrl
lret
pop
out
jg
lock
repz
stc
stos
xchg
divl
or
repz
in
push
sub
rcrl
cmpsl
nop
push
shll
popf
leave
mov
mulb
dec
daa
into
js
sahf
inc
call
fcmovbe
pop
cld
shrl
imul
stc
das
div
sbb
decb
inc
adc
jbe
mov
daa
sbb
shll
rcr
push
repz
xchg
mov
mov
repz
mov
insl
or
sub
int
jae
sub
xchg
stos
jb
arpl
cmpsb
cmp
or
rorb
push
lods
in
std
push
jo
xor
dec
cltd
mov
jmp
and
jmp
xchg
add
mov
insl
fildl
adc
mov
lods
cmp
add
jecxz
jmp
mov
test
inc
xchg
inc
repnz
aaa
rcrb
out
dec
pop
jg
out
jns
leave
dec
pop
xchg
jns
or
jecxz
push
mov
push
mov
sbb
and
and
cmp
movsl
cmp
ss
cwtl
lods
mov
insb
and
es
sbb
dec
loopne
addr16
addr16
push
pop
jne
cs
lahf
pop
data16
xor
loope
ljmp
inc
fiaddl
int3
xchg
pop
sub
lods
and
not
loopne
mov
jnp
xchg
mov
add
fnstenv
fs
out
cmp
ffreep
je
enter
inc
lahf
dec
jp
ret
mov
push
lcall
ret
dec
mov
or
negb
shrl
sub
adc
mov
sub
push
rcl
mov
nop
lods
xchg
jbe
stc
push
stc
cmp
sub
daa
insb
negl
fildl
xor
sbb
mov
dec
sub
decl
test
gs
sbb
cmc
inc
xor
out
mov
std
dec
mov
inc
jbe,pn
inc
sbb
inc
sbb
push
insl
xor
xor
lret
aad
jge
xlat
lds
sti
push
out
xor
mov
cld
andb
testb
push
test
inc
mov
cltd
sbb
push
mov
rclb
aaa
and
sub
mov
inc
repnz
push
push
pop
jl
jecxz
mov
and
test
call
aad
sub
inc
popa
mov
and
push
iret
je
je
or
cmp
fstl
lods
cmp
addr16
and
cmp
int
sbb
or
lock
or
jmp
sub
repz
push
insl
call
push
cmp
sbb
and
lds
ret
inc
jecxz
test
dec
cmc
sub
ret
xchg
in
lret
mov
jns
push
inc
das
fimuls
vpsrlq
addr16
movsb
ror
out
std
jl
jp
loop
sub
dec
into
inc
sbbb
movsb
ret
mov
lea
xorps
cmpsl
push
pop
aad
mov
fistpl
and
filds
in
jecxz
mov
and
stos
jle
jecxz
lock
sbb
xchg
ret
sub
mov
cmpsb
add
test
subb
test
mov
int3
jg
popa
repz
idivl
lret
into
incb
add
test
lcall
call
dec
xlat
sub
ficoml
mov
xchg
and
rcrb
test
shl
in
fwait
int
add
mov
pop
mov
pop
mov
call
loope
mov
in
jecxz
mov
lds
push
call
jp
sub
lds
mov
frstor
rcr
cmpsl
popf
fs
mov
scas
popa
pop
fs
divb
js
adc
xor
inc
sbb
cmpb
push
mov
lret
popf
add
shlb
sbb
dec
ret
xchg
mov
sbb
aas
scas
outsb
iret
inc
lea
in
cmp
jecxz
cmp
out
out
loop
ja
cltd
test
mov
xchg
rorb
into
sub
sub
or
xchg
sbb
stos
adc
inc
mov
cwtl
fwait
xor
movsb
shrb
push
jne
inc
jno
mov
cmp
mov
mov
inc
sahf
iret
fistl
xchg
scas
cltd
or
mov
adc
xlat
into
shll
stos
or
in
sub
add
dec
jle
les
adc
fwait
repz
inc
clc
stos
inc
insl
jnp
setno
imulb
jb
call
xor
test
cmp
pushf
outsl
push
iret
test
or
scas
xor
iret
and
jge
pop
fisttpll
sarb
notb
scas
rclb
cwtl
push
push
leave
add
in
into
dec
mov
iret
lods
test
sbbb
inc
cltd
repz
ljmp
fucomi
cmp
mov
add
pop
mov
clc
sub
out
inc
lea
and
out
xchg
jns
inc
xlat
ficomps
mov
les
loopne
into
fdivrs
lods
sbb
push
cmp
scas
lea
cmc
pop
in
in
xor
pop
sbb
mov
rorb
out
add
push
push
fcoms
mov
mov
xchg
leave
and
iret
mov
sti
outsb
cmc
mov
cltd
arpl
sbb
sub
cltd
push
sarl
inc
test
sahf
add
icebp
faddp
lea
lods
pop
push
jnp
lock
jns
mov
lds
jbe
fs
mov
je
sbb
ss
dec
call
lock
pop
ljmp
push
and
pop
imul
mov
lahf
mov
mov
jp
cmpsl
dec
dec
aad
sub
mov
jecxz
mov
loop
loopne
jnp
lods
in
cli
cmpsb
cmpsb
jge
mov
xchg
fisttpll
xchg
sahf
jae
cltd
jns
mov
push
movsl
mull
add
rcrl
cs
movl
shrb
inc
xor
cwtl
push
out
mov
pop
dec
cmp
pushf
push
jl
ret
dec
mov
dec
xchg
fidivrs
mov
inc
cmpsl
cmp
repz
add
fwait
bound
mov
bswap
mov
shl
imul
ljmp
sub
aam
scas
lret
xor
xor
jne
sub
lcall
scas
inc
nop
addr16
popf
mov
cmpsb
jmp
push
cltd
pop
data16
subb
les
dec
xlat
inc
cltd
ret
incl
dec
push
loope
nop
lcall
cmc
ret
aas
adc
sub
add
inc
pop
inc
daa
aam
pop
mov
sub
pop
adc
mov
mov
pop
push
push
pop
xor
and
insb
cli
das
xchg
fnstcw
mov
mov
ja
and
xchg
xchg
gs
cmpsb
or
and
xor
push
xchg
mov
insb
ja
xor
cmp
jl
add
xchg
std
test
sti
sti
dec
jmp
shr
xor
dec
dec
iret
inc
sbb
mov
rolb
push
mov
lret
or
mov
imul
pop
flds
add
cmpsb
enter
xchg
out
scas
pop
pop
mov
out
aam
lret
jae
repz
jp
movsb
dec
in
xlat
loopne
jnp
insb
fistl
mov
sbb
and
inc
dec
int3
cwtl
or
inc
xor
bound
pop
cmpsl
movsl
pop
mov
inc
dec
xchg
pop
adc
adc
arpl
scas
inc
pop
mov
xchg
andb
jne
pop
test
adc
sub
iret
or
dec
movsl
stos
xchg
loope
fsub
sti
pop
sub
out
fs
pop
ficompl
ret
adc
enter
sbb
sbb
pop
sub
mov
sub
rolb
adc
xchg
lea
cli
xchg
jp
pop
imul
outsb
cmp
push
xchg
mov
std
pushf
mov
push
add
xchg
iret
inc
std
add
fstps
xchg
jne
ljmp
pop
push
or
jge
cwtl
xor
cmpsb
or
xor
insl
mov
jge
and
dec
scas
dec
or
mov
cmp
stos
lods
cmpsl
gs
and
adc
loop
imul
xor
ljmp
add
sub
mov
push
pop
sub
testl
mov
xchg
and
pop
ja
jbe
pop
lods
popa
mov
pop
sbb
adc
inc
push
cmp
jo
repz
dec
mov
mov
les
adc
mov
clc
das
xchg
xchg
lods
sarl
push
stos
cli
ret
adc
or
or
pop
push
pop
and
xor
push
add
pop
movsb
or
push
and
arpl
mov
and
jb
inc
icebp
xor
mov
jl
jb
xor
mov
inc
cmpsl
fdiv
pushf
add
stos
inc
xor
jbe
mov
cmp
push
and
mov
adc
pusha
lods
outsb
cld
xor
jg
aas
xchg
mov
dec
pop
outsl
fildl
clc
pop
xor
push
movsl
mov
ret
dec
je
out
in
aaa
lods
and
pop
inc
cmp
add
sub
mov
mov
push
mov
or
fdivs
sub
push
rcll
ja
cmpsl
dec
xlat
icebp
insl
lea
stos
dec
push
fisubrs
dec
pop
dec
add
jge
and
xchg
loope
adc
xor
lds
mov
pop
push
push
lahf
ficomps
mov
cld
mov
inc
dec
nop
jmp
sub
rcrl
push
adc
es
aam
std
in
cmp
pusha
call
fidivs
sti
das
addr16
sarb
repz
cltd
sbb
mov
jo
push
jg
pop
cs
add
les
lock
int3
adc
push
inc
fdivl
aam
sub
filds
rcll
or
cltd
cmp
mov
test
in
cld
push
test
scas
ds
or
sbb
lods
ret
out
mov
js
pop
jo
dec
xor
into
or
mov
insb
fcoml
push
ljmp
mov
movsl
xchg
xchg
mov
fiaddl
xchg
jns
push
imul
mov
clc
out
int
sub
and
pop
mov
jge
pop
adc
inc
push
out
cmp
lret
lret
pusha
lret
cmc
or
subl
lock
jecxz
jnp
clc
cld
mov
les
xchg
sbb
pop
xor
xchg
repnz
loop
dec
movsb
or
xchg
fcoml
idiv
lea
mov
movsl
sahf
push
push
add
jmp
cmp
pop
sub
lock
sub
loop
and
push
dec
ds
sbb
sub
push
cmp
test
adc
repnz
lock
lret
rcrb
pop
fbld
cmp
sti
sbb
cmp
cli
cmp
imul
jg
xchg
das
jge
icebp
fmull
repnz
frstor
std
jbe
mov
ffree
mov
call
mov
das
mov
push
and
push
sbb
mulps
jmp
add
and
cld
int3
loope
sub
gs
jp
push
xchg
test
scas
inc
subl
enter
cltd
jg
sahf
js
cli
mov
and
mov
mov
and
push
xchg
pop
je
fmul
mov
or
imul
xchg
aad
popa
xor
in
pushf
adc
or
mov
push
imul
shll
lcall
lds
push
shrb
push
xor
enter
cmpsl
test
dec
test
cmpsb
pushf
pop
adc
sbb
out
pusha
push
xchg
jae
scas
adc
pop
adc
fdivrs
cmp
xlat
dec
jp
mov
mov
cld
cs
imul
mov
aas
les
cmp
lods
addl
dec
dec
adc
and
adc
mov
insb
fdivrs
or
lahf
aam
ss
xlat
shll
fists
mov
sbb
movsb
jle
adc
aad
dec
adc
fidivrs
fs
mov
rorl
ljmp
popa
dec
andl
daa
push
push
sti
jp
cwtl
sbb
push
xchg
in
cmp
inc
mov
cmp
lret
push
push
or
dec
sbb
mov
test
and
fsubrs
test
push
pop
int3
sbb
lods
xchg
pop
sub
add
das
shll
mov
andb
fld
mov
push
xor
or
mov
out
pop
stc
fists
pusha
outsb
cs
dec
shlb
out
hlt
mov
jge
xor
dec
popa
jb
sub
das
xchg
xchg
and
mov
push
jp
test
ljmp
loope
or
cltd
mov
outsb
mov
push
aad
inc
stos
mov
mov
and
jno
or
and
jle
or
popa
dec
xor
push
in
jecxz
xchg
in
pop
es
cltd
mov
insl
orb
cmp
jge
leave
clc
test
cmc
xor
aaa
jle
xchg
aas
sub
js
fnstenv
cmp
fldl
dec
testl
push
scas
les
mov
out
enter
mov
popa
pop
pop
leave
jp
and
andb
or
sub
andb
push
stc
mull
adc
sbb
xchg
popf
aaa
mov
repnz
fwait
js
lock
fs
adc
add
mov
add
inc
test
cwtl
pop
rcrl
aad
xor
sub
lcall
cs
int3
arpl
mov
mov
insb
iret
jbe
lcall
mov
mov
xchg
jecxz
jge
stc
stos
lods
jg
add
repz
mov
inc
fldenv
adc
sbb
cs
xchg
xchg
fisubs
push
xchg
pop
sti
orb
cmp
test
adc
or
in
aas
cs
gs
jmp
pushf
test
lods
mov
xor
jg
cltd
int
lods
mul
cmp
jo
insl
ret
mov
and
sbb
mov
out
jecxz
jb
mov
cmpsb
ja
in
ret
test
popf
mov
rol
test
xchg
sbb
lds
push
sub
aas
lcall
pop
scas
add
jnp
cmpsl
push
mov
test
cmp
shlb
fadd
enter
fsub
jbe
and
lret
dec
xor
cltd
insb
cmp
cmc
int3
push
je
jnp
out
lods
adc
sbb
mov
loopne
xor
dec
mov
add
xchg
stc
movsb
sbb
sahf
jmp
pop
lock
mov
xchg
mov
lret
adc
aam
out
adc
or
dec
jnp
imul
push
aam
pop
or
sbb
out
nop
mov
mov
sti
add
mov
pop
adcb
shll
xlat
cltd
lods
test
movsb
xchg
sbb
add
sub
pop
xchg
xchg
jo
cmp
jp
xor
ds
shr
shlb
test
test
add
fsubs
fimuls
add
xchg
add
lret
aad
cwtl
xchg
inc
es
sbb
add
sub
imul
mov
adc
mov
repz
cmp
andb
decb
in
mov
jno
stos
xchg
jecxz
cmc
pop
push
jmp
in
sbb
fwait
or
fwait
scas
out
mov
hlt
xchg
xorl
or
mov
insl
jb
enter
std
pusha
jbe
call
out
int3
jl
loope
shl
ret
jl
sahf
fimull
xchg
inc
cwtl
pop
inc
jecxz
andb
xor
rclb
jg
mov
mov
dec
jbe
add
jp
das
xchg
and
cmp
xor
lcall
or
inc
test
outsb
jnp
push
sbb
mov
dec
pop
pusha
sub
hlt
jg
push
lea
inc
fidivl
pop
adc
test
push
and
and
sbb
cltd
push
in
sbb
mov
adc
xchg
jmp
shl
pop
cmp
or
sub
or
out
push
insl
inc
in
insb
mov
and
jg
sub
adc
les
ss
cmp
incb
cmp
sarl
hlt
subl
mov
mov
mov
cmpsb
nop
icebp
imul
dec
je
ds
xchg
mov
mov
ret
negb
inc
stc
lret
andb
inc
int
sbb
lods
imul
jle
jns
es
or
ljmp
mov
cwtl
and
scas
call
pushf
in
add
mov
es
mov
jle
mov
or
pushf
dec
cmp
sbb
aad
das
cmpsb
es
mov
fwait
icebp
xchg
mov
lahf
add
dec
int3
in
popf
lcall
sti
test
dec
push
das
inc
scas
pop
dec
sarb
mov
ja
xchg
aaa
or
sbb
mov
in
rorb
push
dec
and
sbb
enter
adc
mov
les
xor
mov
xor
adc
jg
xchg
xchg
mov
jl
inc
xchg
dec
iret
mov
jns
icebp
push
pusha
outsb
sbb
std
pop
test
pop
xchg
lock
imul
imul
es
outsb
sbb
hlt
sbb
movsl
imul
and
xchg
leave
push
cmp
or
iret
cli
sbb
jg
push
out
mov
mov
ja
jecxz
jg
clc
inc
push
js
test
mov
fs
dec
xchg
mov
outsl
inc
addr16
dec
andb
in
add
out
mov
rol
pop
aaa
lds
and
test
pop
out
push
pop
ljmp
mov
popf
mov
gs
pop
adc
fsubr
cltd
je
adc
aaa
mov
add
sti
std
pop
mov
inc
push
xchg
in
push
std
pop
add
idivl
popf
jno
hlt
lock
pushl
add
lock
ret
cltd
rol
cmpsl
pop
fsts
insb
mov
cvttps2pi
sub
jp
jecxz
fisttpl
imul
mov
xor
jns
clc
xor
pop
adc
cwtl
test
cmc
pop
movsb
testb
jg
dec
popf
out
push
push
and
mov
inc
ja
lds
mov
inc
lret
or
test
and
lcall
stos
push
imul
inc
ret
xor
ljmp
cmp
addr16
in
inc
in
cmp
pop
inc
mov
es
les
jg
addr16
jne
jg
sarl
popl
test
pop
or
aas
fsubr
or
or
lea
jle
xchg
sbb
fdivs
xor
add
sbb
xchg
push
push
push
shl
push
mov
leave
sbb
dec
ret
jb
pop
shld
inc
inc
lcall
test
or
subl
movsl
in
or
call
dec
and
push
mul
pop
dec
mov
sahf
mov
xchg
xchg
push
lahf
mov
adc
out
das
adc
dec
mov
scas
dec
call
mov
shl
int3
jne
lahf
adc
in
test
out
pop
push
int
enter
xor
adc
loope
xchg
cwtl
mov
sbb
xchg
inc
insl
pop
mov
fsubl
lcall
rorl
lret
mov
mov
cmc
mov
add
mov
lret
push
mov
inc
xchg
out
add
ret
dec
arpl
bound
ret
jmp
inc
gs
sbb
das
push
daa
outsb
mov
sub
push
lock
das
sub
jmp
pop
popf
sub
data16
cli
stc
cmp
xchg
push
mov
jp
xchg
mov
repnz
or
aam
test
dec
sahf
imul
mov
sahf
jo
ljmp
dec
inc
jb
dec
pop
test
andl
sbb
jg
nop
cmpsb
aaa
jg
or
pop
out
es
sub
dec
pop
push
mov
mov
or
es
mov
ret
pop
lahf
push
adc
jl
pop
mov
sti
or
stos
mov
xor
rcr
int
push
push
pop
clc
test
popa
iret
push
xchg
fs
sub
xchg
xor
scas
sbb
pop
add
pop
mov
int3
and
xor
clc
push
adc
jo
fsts
cmpsl
loopne
loop
movsb
cmpsl
mov
das
add
mov
cmp
ficoml
das
push
mov
push
add
sbb
push
push
mov
mov
pop
std
push
cmc
mov
std
inc
mov
dec
loop
clc
push
outsb
scas
push
dec
xlat
push
and
out
mov
jle
dec
pop
or
mov
cmc
or
shll
cmp
adc
into
push
mov
xchg
mov
test
sar
push
pop
jns
pop
in
push
in
rol
out
jge
imul
or
adc
inc
add
lods
test
or
addr16
out
sub
jae
fimull
es
mov
mov
sahf
inc
hlt
sbb
pop
mov
test
or
xchg
or
daa
lcall
push
mov
push
rcll
pop
cli
repz
sub
xor
and
pusha
xchg
cmp
mov
push
insb
hlt
push
in
test
adc
scas
push
insl
outsb
sti
mov
pop
mov
inc
nop
mov
xor
stc
cmpsl
int3
or
mov
ja
loopne
xor
ret
sbb
mov
lock
mov
jle
in
fst
icebp
sub
rcll
pop
test
das
cltd
pop
jmp
sub
or
jmp
xlat
lret
xor
call
pop
xchg
mov
call
hlt
adc
je
xor
or
bndldx
and
scas
aad
scas
or
cmp
stc
and
into
mov
in
shll
xlat
mov
test
pop
in
lret
call
loope
add
cmpb
or
gs
push
enter
sbb
mov
rcrl
and
enter
xchg
xchg
divl
out
push
fistl
inc
sub
and
or
push
jle
adc
cwtl
xchg
aaa
inc
pmaxsw
rorb
mov
sti
cmp
adc
dec
hlt
xchg
xlat
cmp
lods
rorl
mov
ljmp
lcall
hlt
popf
mov
xor
dec
xchg
in
mov
stc
pop
jmp
mov
sub
mov
cmpsl
pop
jle
pop
inc
sti
movsl
and
push
fimull
lcall
ja
dec
jne
out
sbb
adc
mov
mov
pop
or
scas
mov
sbb
push
test
in
dec
pushf
fadds
test
add
pop
icebp
imul
sbb
inc
aas
and
cmpsb
mov
aad
jae
mov
cs
xchg
sbb
xchg
xlat
outsb
rorb
in
adc
ret
cs
and
sbb
int3
into
jle
std
cs
push
in
mov
es
les
jb
pushw
xchg
lods
push
adc
jle
mov
jecxz
push
es
push
push
jae
clc
dec
inc
mov
lret
andb
fcoms
aas
sub
fdivs
dec
add
test
inc
inc
dec
je
cmp
or
adc
roll
add
pop
xor
cs
rcr
bound
push
cmp
or
push
jge
pop
test
jecxz
hlt
pop
dec
xor
push
sbb
insb
popa
fwait
dec
xchg
inc
sub
cmc
cld
dec
dec
or
jno
test
push
iret
push
push
fnsave
test
into
adc
andb
pop
adc
jae
mov
enter
outsb
xchg
cmp
in
lret
pop
sbb
cmp
mov
xchg
cmp
jmp
popa
int
mov
pop
adc
cs
cmp
cltd
rorb
sbb
fcomp
data16
adc
test
cmp
cmp
dec
iret
xchg
pop
cmp
arpl
pop
xor
ljmp
push
mov
test
dec
xchg
les
xor
mov
push
sub
les
sbb
out
dec
aam
push
add
jecxz
cs
add
imul
cld
mov
inc
addr16
loop
push
push
in
push
sbb
mov
jns
mov
jbe
insl
adc
jg
in
stc
inc
es
movb
arpl
mov
and
jbe
push
aad
xor
scas
movsl
adc
aam
xchg
ja
mov
fnstenv
clc
rorb
insl
aaa
adcl
sahf
rolb
jo
and
xchg
jae
xchg
pop
pop
cwtl
mov
and
xorl
pop
xchg
inc
mov
aad
jno
mov
inc
aam
jnp
loop
data16
xchg
stos
mov
mov
sub
or
mov
fidivrs
xor
jmp
shrl
movsl
dec
mov
xor
adc
adc
andl
ja
adc
xor
sub
sub
dec
fs
pusha
movsb
mov
add
mov
aam
lods
pop
in
xchg
xchg
sbb
test
or
pop
add
jno
adc
adc
iret
jnp
sar
lods
stc
or
ss
rorl
insb
outsb
lret
adc
or
into
xchg
mov
dec
stc
stc
out
gs
sbb
sbb
dec
xchg
cmp
xchg
shll
cmpsb
or
addr16
lods
scas
testl
sub
dec
popa
repz
mov
adc
jb
pop
mov
mov
pop
or
jmp
jmp
cmpl
cmp
mov
xor
cmc
mov
arpl
test
rcl
push
scas
xor
cwtl
out
stos
jns
mov
clc
shr
call
in
fs
sub
jmp
sbb
cmc
rcll
movntq
out
pop
or
mov
and
adc
cld
fcoms
in
and
sub
mov
cmp
pushf
sub
xor
mov
xor
xor
mov
daa
rclb
add
adc
test
fiadds
gs
pop
adc
inc
je
jmp
cli
mov
popa
loope
rcrb
pop
rcrl
cmpsl
jns
aam
xchg
or
xor
sub
aam
call
mov
mov
xchg
scas
mov
ljmp
dec
stc
or
jbe
gs
das
mov
lret
stos
out
test
test
sub
cmp
pop
fs
mov
jno
cmp
mov
ficompl
xchg
lcall
push
dec
das
sbb
imul
jge
mov
or
or
pop
cltd
leave
adc
fiadds
or
scas
mov
add
cmpsl
sbb
jnp
jae
add
lcall
dec
subb
sti
cmp
insb
stos
and
sub
jecxz,pt
arpl
dec
mov
push
push
mov
xchg
xor
lcall
jno
xchg
pop
scas
cmp
daa
int3
push
in
inc
rcl
mov
mov
push
cld
mov
mov
test
out
adc
fcompl
out
pop
daa
add
sbb
pushf
testb
xor
adc
stos
leave
aas
sbb
inc
or
ds
movsb
scas
xchg
xchg
lret
mov
outsl
mov
mov
clc
push
jl
insb
add
mull
jne
outsl
lock
dec
lock
iret
mov
icebp
test
pop
or
sbb
out
popf
jb
inc
pop
inc
insl
sbb
arpl
lahf
dec
inc
shl
enter
dec
jno
sbb
mov
mov
push
mov
cmc
xchg
mov
add
in
add
and
jge
dec
pop
loope
stos
mov
jnp
test
stos
sti
shl
rcrb
sub
movsb
xchg
icebp
mov
sbb
xchg
movsl
xchg
sbb
sbb
cwtl
push
add
push
sub
inc
leave
leave
pushf
xchg
ficoms
adc
cmc
jg
mov
int3
dec
daa
data16
js
mov
push
fistps
fsubl
fdivp
inc
scas
out
dec
jl
out
outsb
loopne
add
pop
pop
daa
jge
inc
cmpsl
lods
jmp
lcall
mov
mov
and
inc
or
pop
mov
xor
push
push
xor
std
repnz
out
pop
mov
inc
movsl
cwtl
adc
jo
cld
add
mov
lret
mov
xchg
adc
test
xor
clc
repnz
xor
out
inc
cmp
cmp
mov
test
cmp
xorl
push
mov
push
mov
and
mov
icebp
bound
int3
push
popa
cmp
cli
mov
xchg
xor
pushf
jle
dec
scas
scas
es
data16
or
shrl
dec
inc
stos
mov
pop
jns
push
mov
cmp
jnp
cmp
pop
sub
xchg
jb
adc
mov
aas
xchg
add
xor
add
pop
xchg
hlt
inc
scas
jae
jge
lds
movsl
jmp
xor
xchg
inc
dec
add
ret
out
xor
imul
sbbb
sarb
fstpl
lcall
neg
jae
sub
cmpsb
pop
scas
loop
dec
movswl
fdivr
pop
mov
sub
je
or
icebp
out
into
and
mov
ja
cltd
out
mov
ret
test
imul
pop
dec
in
cmp
cmp
pop
subb
jecxz
cwtl
mov
aas
cmp
mov
jecxz
dec
inc
shrb
fisttpl
ja
mov
sbb
pop
mov
sub
imul
jmp
cmc
call
pop
imull
mov
xchg
xchg
iret
ds
pop
or
push
in
ror
cmp
popa
cld
stos
pop
or
adc
jae
xor
outsl
jle
in
ss
pop
sub
pusha
cmpsl
xchg
lret
dec
and
popf
jge
movsl
jbe
arpl
xor
mov
mov
pop
or
cmp
popa
fnsave
in
ljmp
sti
push
cmpsb
dec
int
pop
jno
push
inc
sarl
subb
test
or
adc
into
insl
and
push
pop
dec
push
sahf
rcll
ja
into
test
lods
mov
pop
fmull
cld
adc
push
cmpsl
popf
fnstsw
call
cmp
cmpsb
daa
pop
xor
jecxz
xchg
es
jmp
inc
cmp
add
in
sbb
inc
ret
pop
mov
xor
dec
xchg
sbb
cltd
test
adc
mov
xor
arpl
stos
mov
cld
mov
pop
xchg
xlat
push
xor
out
adc
sub
add
inc
push
dec
push
lcall
jmp
punpckhwd
xchg
loop
lret
fs
lock
cmovg
mov
cmp
jb
std
sbbl
inc
cmp
sub
out
jns
int3
or
sbb
fsub
call
fs
mov
jno
rep
sbb
xchg
and
dec
xchg
inc
add
adc
adc
mull
repz
pop
imul
aaa
sbb
jecxz
lods
pop
sar
mov
sub
push
ds
mov
sbbb
and
shlb
xlat
or
mov
cmp
inc
stos
dec
test
pop
ja
push
ds
mov
loope
out
loopne
or
mov
lret
adc
sub
inc
jno
mov
jle
and
idivl
push
in
dec
pushf
lret
or
or
das
mov
and
out
mov
psrlw
sbb
push
mov
jl
rol
lret
ds
xchg
or
pop
cmpsl
adc
push
sub
ret
push
mov
mov
aad
push
push
loop
ret
in
stos
int3
and
dec
subb
lea
ljmp
push
fdivs
cmpl
sbb
popf
pop
push
inc
std
fldcw
push
rorb
scas
mov
stc
sti
cs
push
dec
in
cmp
xchg
cmc
test
lods
sbb
outsl
fldl
sub
and
shlb
inc
cmpsl
sub
mov
jo
mov
push
pop
aaa
jbe
test
fdivrl
sbb
adc
inc
daa
mov
je
es
sbb
xchg
enter
inc
cmp
sti
or
push
or
popf
adc
arpl
xchg
or
rcrb
jne
xcrypt-cbc
cmpsl
push
mov
sbb
fcmovbe
int3
ficoml
xlat
addr16
stos
mov
add
lahf
in
jl
dec
lods
mov
lock
inc
push
in
xchg
cmp
daa
out
roll
push
inc
adc
scas
mov
lret
dec
add
jge
call
arpl
cmc
mov
iret
or
imul
pop
hlt
les
and
insl
xchg
dec
push
mov
roll
rclb
shlb
xor
rclb
xor
clc
in
or
cli
ficoml
xchg
rorl
into
test
ret
push
adc
dec
cwtl
lret
cmpsl
rcll
jl
and
mov
das
pop
notb
fidivs
shr
mov
push
ret
fidivs
arpl
adc
add
xchg
movb
lcall
or
push
cmp
pusha
outsl
cmpsl
popa
negb
cs
mov
fwait
out
adc
das
aad
sahf
mov
mov
repnz
pop
out
pop
rcrb
outsl
sbb
aad
sub
je
add
jns
fimuls
mov
xchg
sub
mov
adc
fstp
loope
ficoms
and
dec
lods
xchg
push
mov
outsl
dec
jne
cmpsl
push
push
push
int
xor
add
jmp
sub
iret
and
push
jecxz
mov
xor
xchg
pusha
add
lahf
icebp
loop
push
leave
call
arpl
dec
xchg
push
sbb
adc
lods
add
repz
popf
pop
and
mov
jno
cmp
add
xchg
mov
fs
xor
aas
pop
pop
int3
pop
pushl
fldenv
cmp
loopne
add
xchg
xor
lret
push
cltd
call
testb
cmc
ja
and
imul
cli
das
inc
and
pop
imul
sbb
arpl
xchg
fcoml
xchg
dec
leave
leave
sub
mov
movsb
popa
xchg
mov
or
xchg
push
push
sbb
push
out
rcrb
insl
and
xchg
sub
inc
sub
or
cmc
mov
jne
idivb
fcoml
test
inc
mov
sti
pop
xchg
cmp
mov
rol
sbb
push
outsl
jne
add
ret
push
dec
lds
orb
fadd
jmp
mov
adc
xor
aad
outsb
es
movsb
dec
imul
mov
and
stos
dec
mov
imull
inc
add
scas
xchg
xorb
test
adc
mov
insl
iret
les
xchg
push
jb
ds
in
outsl
cwtl
sub
cmp
inc
popa
xor
or
sub
lret
lret
pop
dec
mov
xchg
sbb
xor
push
cmpsb
out
test
bound
mov
xor
dec
clc
mov
xor
push
pop
push
push
lods
adcb
or
fbstp
xor
xchg
jp
gs
fs
jecxz
mov
decb
ds
je
sti
adc
mull
and
fwait
ret
movsb
jnp
frstor
out
mov
adc
aam
add
pusha
ja
adc
leave
sub
test
cltd
jle
les
fstp
mov
fimuls
loop
sbb
int
or
sbbb
inc
push
stos
mov
push
mov
jp
mov
sbbl
add
mov
xchg
adc
data16
mov
pop
and
push
inc
or
addb
sbb
sub
or
scas
shll
dec
lea
xor
jp
pop
bound
cmp
aam
fildl
fdiv
imul
in
test
mov
xor
mov
fnstcw
bound
push
fisubs
jp
in
mov
add
sbb
mov
add
cmp
push
mov
mov
and
ds
pop
jns
scas
jnp
cmp
xlat
fwait
js
ret
sub
mov
popf
and
and
jl
jecxz
addr16
test
int3
leave
in
mov
sub
ja
dec
cld
in
xor
shl
fwait
or
jg
int
mov
push
xor
jns
popa
xchg
jl
jecxz
xor
mov
cmpxchg
inc
imul
mov
loope
cld
jae
mov
stos
fdivs
fwait
push
cltd
fnsave
xchg
int
inc
jecxz
inc
xchg
xchg
int
mov
and
jecxz
cmp
and
xchg
xor
cmpsl
test
mov
mov
call
cmp
orb
fists
push
and
in
popa
js
cmpsb
insb
test
and
cli
int
imul
es
ja
xchg
inc
mov
aaa
inc
sbb
add
push
hlt
pop
sar
loope
leave
mulb
push
daa
leave
test
pushf
roll
int
popf
ss
inc
pop
loop
cmp
imul
or
mov
js
fildl
add
call
out
adcb
cmc
adc
mov
fsubrl
sar
mov
mov
jb
jmp
mov
lret
dec
test
test
dec
pop
int
mov
lods
mov
iret
jge
repnz
test
jge
mov
loopne
rcrl
movl
jmp
mov
fst
in
mov
mov
das
xor
ss
lock
adcl
jle
repz
xchg
sub
push
xchg
dec
ret
xor
insb
cltd
xor
fwait
aas
adc
cmp
pop
imul
pop
test
pop
mov
ss
cwtl
or
xlat
and
iret
leave
xchg
jecxz
lods
stos
add
jecxz
push
dec
push
repnz
scas
add
and
and
adc
into
fucom
jns
dec
xchg
repz
adc
or
cmp
jecxz
sbb
mov
rclb
jmp
cmp
add
pushf
push
jecxz
mov
cmp
add
lcall
and
iret
mov
mov
inc
xor
mov
sbb
xchg
and
push
sbb
ret
push
fsubs
cmpsl
adc
enter
sbb
and
xor
leave
das
ss
push
fidivrs
imul
and
mov
fsubr
fsubrl
xchg
psubd
aaa
mov
cmp
mov
or
push
ljmp
sti
loopne
lea
mov
sbb
fcmovbe
xor
aas
inc
pop
das
or
fstpl
and
dec
fnstcw
cmp
xchg
repnz
inc
cmc
aas
mov
mov
and
xchg
pop
insb
into
and
jb
dec
jg
scas
xor
mov
mov
in
test
out
xor
and
shlb
add
jp
cmp
fcmovb
mov
or
pop
or
push
fldt
sub
xlat
fnstsw
push
jg
ja
add
test
xchg
hlt
or
jp
fsts
push
mov
pop
cmpsl
out
movsb
or
cmp
ja
loop
lret
jno
mov
mov
mov
lahf
out
fwait
and
gs
call
mov
pop
xor
jge,pn
gs
xchg
lahf
movl
in
enter
pop
jae
pop
pop
dec
fs
sub
push
mov
scas
aad
jne
mov
adc
out
lea
dec
dec
cs
jecxz
jmp
test
pop
mov
mov
ss
xchg
mov
lret
hlt
test
enter
lcallw
sub
loope
mov
out
test
fwait
cmp
outsl
add
xchg
pop
adc
ja
clc
rol
call
daa
jbe
inc
mov
test
or
sub
pusha
mov
jbe
mov
shlb
fadds
add
push
dec
dec
and
adc
xchg
mov
cmp
jb
jbe
loop
cmp
out
xor
ja
cmpsb
push
xchg
mov
cmp
sub
dec
adc
push
in
jp
imul
sub
cmp
cwtl
xlat
and
push
and
shlb
movsb
in
notl
jo
inc
dec
jnp
popf
sbb
xchg
outsb
shrb
jmp
dec
aam
add
push
mov
inc
and
outsl
fstpl
xor
xchg
out
jmp
xor
lcall
xor
out
xchg
mov
hlt
into
push
mov
or
out
jne
test
cmp
sbb
pop
xchg
repnz
lret
or
inc
mov
jns
ljmp
popf
stos
push
lock
into
jo
mov
push
xchg
scas
imulb
pop
stos
imul
jmp
pop
mov
pop
sbb
cmp
int
push
xor
fidivrs
popl
insl
mov
add
xchg
cmpsb
lods
rorl
jp
orl
mov
dec
and
in
sbb
push
xchg
aam
mov
out
xor
dec
sbb
je
dec
clc
xor
shll
popf
sti
sbb
pop
mov
out
test
cmp
insb
sbb
mov
xor
push
xlat
repz
jl
adc
ret
rcrl
jno
dec
repz
add
pextrw
sub
aam
cs
inc
xor
neg
mov
test
dec
mov
jae
mov
jl
jmp
sub
fisttpll
jb
lcall
aam
das
clc
push
or
mov
filds
mov
stc
mov
jmp
xor
mov
inc
sbb
or
xchg
mov
xchg
fwait
insl
adc
jmp
cmpb
jb
ljmp
xor
dec
mov
push
rol
enter
fnstsw
mov
mov
ret
popf
leave
rcrl
je
cmp
mov
jmp
xchg
lock
mov
jne
jmp
mov
xchg
out
or
fiadds
leave
lcall
rol
adc
mov
adc
lcall
jle
mov
aad
mov
pop
inc
lea
or
dec
mov
aas
lret
add
rcr
scas
xchg
and
add
xchg
cmp
test
push
mov
ror
rcrl
hlt
adc
push
pmulhuw
shrl
cmpsl
imull
mov
inc
xchg
sub
jl
out
imul
testl
test
hlt
imul
lods
hlt
inc
mov
pusha
xor
ds
fdivs
mov
es
ljmp
data16
idivb
xchg
movsl
stc
push
test
sbb
call
mov
movsl
xor
insb
sbb
sbb
mov
fcoml
rolb
inc
jg
fidivrs
pop
mov
flds
test
jmp
std
pop
mov
cltd
add
mov
inc
imul
fidivrs
leave
ds
xchg
std
aad
inc
xchg
jb
fxch
in
push
fadd
dec
xor
dec
or
sbb
cltd
pop
xor
inc
add
notl
je
or
dec
paddusw
cmp
or
adc
enter
push
cmp
cmp
sub
or
adc
insb
mov
psadbw
mov
mov
movsl
push
out
popa
mov
hlt
push
and
lods
fisubs
jns
sbb
mov
popf
xlat
call
dec
test
imul
jae
dec
lods
rcrb
xor
cmp
not
jno
jmp
cld
pop
in
sub
addr16
mov
pop
or
jle
ret
inc
enter
push
fwait
mov
pop
mov
fbld
xchg
cmpb
cld
cltd
sbb
xchg
inc
cmp
enter
push
xchg
insl
adcb
push
inc
mov
cmp
out
test
sbb
jnp
jb
sub
mov
mov
fbld
addr16
je
dec
push
mov
sub
sbb
dec
adc
aad
sub
lahf
pop
fwait
test
icebp
lcall
xchg
iret
and
cmpsb
cmc
mov
lods
cwtl
fcmovb
xchg
das
or
lcall
xchg
sbb
mov
out
sbb
and
sahf
mov
lods
mov
jb
aas
inc
mov
pop
pushf
popa
push
adc
aad
jae
xchg
xor
pusha
sbb
mov
mov
arpl
int
push
adc
testl
lods
fmul
sahf
xor
mov
in
leave
fmuls
push
sub
xorl
insl
add
or
shll
mov
dec
orb
or
stos
and
pop
push
stos
enter
jns
and
movsl
or
xchg
test
ljmp
jb
pusha
jb
outsb
pop
push
lea
xor
mov
out
lcall
xor
outsb
push
in
add
and
xchg
mov
loopne
rclb
repz
xchg
scas
mov
mov
in
xor
inc
inc
out
xor
cs
cltd
push
add
and
and
pop
daa
mov
lret
in
mov
inc
sbb
cmp
dec
xchg
adc
aas
mov
sbb
fldcw
imul
cmp
enter
xchg
test
sbb
or
enter
adcb
cmp
pop
mov
mov
mov
mov
imul
int
mov
dec
inc
or
je
pop
in
cmp
push
xor
push
push
sub
and
gs
push
clc
or
leave
push
cmp
outsb
fdivl
push
pop
jne
lret
addr16
cmp
ret
and
std
cs
xchg
xor
adc
pop
fmulp
sub
mov
int
push
pop
mov
fs
mov
sbbl
inc
mov
jmp
jbe
mov
dec
and
adcl
jmp
push
jnp
repnz
pop
xchg
dec
and
dec
out
out
dec
testl
add
inc
mov
xor
push
pop
lcall
push
dec
dec
cmpsb
gs
mov
aaa
jmp
mov
mov
fs
jg
mov
clc
in
mov
in
or
scas
jecxz
fcompl
je
cmp
push
jmp
loop
scas
mov
push
or
and
sub
test
test
mov
push
jecxz
lods
in
icebp
push
xchg
mov
push
addl
sti
and
ljmp
mov
fnsave
jb
inc
repz
lahf
xor
lcall
mov
shrb
sub
pop
or
xlat
mov
jae
push
jnp
and
icebp
lret
aad
mov
jl
push
outsb
movd
aam
add
js
or
jecxz
aad
aad
out
daa
ja
lret
loope
lcall
mov
or
outsb
mov
inc
outsb
lret
jnp
mov
xor
xchg
arpl
frstor
fnstenv
sbb
fcmovu
mov
loopne
sbb
jne
inc
frstor
lods
mov
mov
mov
xor
or
int
inc
xchg
xchg
lahf
dec
addr16
imul
test
xor
je
push
add
out
int3
imul
popf
cmpsl
mov
and
mov
sbb
mov
add
jne
aas
les
jecxz
jge
mov
dec
push
push
or
cmp
adc
mov
in
nop
push
mov
es
lret
mov
sub
mov
mov
xor
subb
out
int
add
fs
xchg
andb
sbb
int
pop
cwtl
imul
cmp
rol
sbbl
fbld
stc
pop
outsb
push
jp
icebp
lods
inc
dec
ja
push
xchg
inc
rorb
arpl
xor
test
and
add
ds
fwait
js
fbstp
mov
adc
call
into
xorb
sbb
jb
in
or
add
jmp
mov
pop
sub
sub
cli
jp
jmp
gs
dec
pop
or
aas
inc
cwtl
ds
or
sub
adc
loop
pop
xchg
mov
pop
nop
clc
frstor
out
sub
dec
fdivrl
and
jp
movsl
add
shrl
jo
or
rol
mov
pop
test
adcb
sub
mov
popf
jmp
xor
pop
rcrl
mov
push
incl
les
std
daa
or
xchg
or
daa
aaa
test
shl
icebp
imul
std
ds
mov
mull
icebp
cmp
out
pop
movsb
mov
add
push
pop
cmp
daa
test
data16
or
lcall
divb
aas
push
inc
cs
dec
imul
xlat
imul
iret
ret
stos
xrelease
pop
add
bound
fldt
cmc
arpl
mov
pop
test
lods
loop
push
movsb
mov
inc
adc
ja
adc
push
push
inc
add
xor
mov
mov
or
dec
pop
dec
ss
call
mov
and
adc
lret
out
int
movsb
xorb
mov
out
cmpsb
sbbl
leave
icebp
mov
adc
cli
or
movsl
pop
pop
pusha
inc
push
popa
scas
push
ljmp
mov
lahf
ljmp
sahf
loop
mov
xchg
push
sbb
and
cltd
jecxz
xorb
mov
std
jae
pop
xchg
cltd
js
push
sbb
lcall
push
push
stos
inc
mov
nop
and
xchg
lods
and
or
sbb
cltd
in
loop
sahf
and
sub
sub
xchg
jb
push
ret
lret
cmp
out
test
pop
jbe
mov
dec
xor
orl
rolb
and
rolb
dec
ret
je
in
dec
mov
pushf
lods
cwtl
aas
mov
xor
into
sbb
in
pop
fcompl
ret
ja
stc
lret
sub
xchg
aam
adc
mov
les
imull
mov
aaa
mov
pop
cltd
jae
inc
and
scas
mov
jns
push
test
mov
scas
shll
mull
pushf
sbb
mov
cs
and
movsl
push
push
ret
push
addr16
movsl
xchg
lods
dec
dec
xchg
lcall
test
test
mov
lea
push
insb
into
and
dec
insb
pop
rolb
pop
sub
das
mov
push
ja
push
nop
imul
hlt
dec
out
lahf
daa
cwtl
mov
dec
es
mov
sahf
push
js
mov
jmp
jnp
stos
mov
popf
divb
cmp
in
shrb
cmp
dec
jns
rorb
adc
imul
lock
rolb
mov
xchg
and
pop
inc
jmp
scas
dec
pop
das
subl
add
xchg
inc
into
cmpsl
pop
loop
in
addr16
mov
fsts
outsb
push
and
sub
jne
jg
dec
sub
mov
sbb
and
and
in
pop
dec
mov
add
mov
es
gs
je
loop
aaa
push
cmp
and
scas
or
mov
sub
cld
movsl
mov
ja
pusha
les
inc
roll
push
cmp
sub
test
jg
mov
int3
call
fwait
outsb
pop
decl
and
mov
retw
jg
xchg
in
push
rcl
pop
fs
gs
addr16
sti
adc
jb
out
hlt
fisubs
pushf
jle
sbb
adc
cmp
xchg
jnp
xlat
out
mov
call
sbb
xchg
mov
es
inc
inc
push
sarl
pop
cltd
add
dec
xchg
mov
xor
lea
pop
and
test
insl
popf
icebp
dec
fcmovb
subb
xchg
pop
mov
sbb
test
test
fildl
push
pop
and
pushf
jmp
push
stos
and
loop
stos
in
lea
aam
xchg
sbb
frstor
test
mov
push
cwtl
sub
idivl
aaa
fists
fdivl
cmc
push
cli
xchg
inc
in
lahf
adc
push
pop
pop
mov
add
out
fstps
loop
cmp
jno
adc
adc
push
mov
repnz
sub
js
stos
rcrb
int
movsl
repz
imul
enter
sub
mov
aad
push
cmc
push
test
mov
mov
sub
mov
cmp
ret
cmpsb
cmp
lret
push
pop
add
xor
out
fistpl
lea
jecxz
lods
adc
jo
ficoms
push
int3
xor
mov
flds
pop
dec
movsl
setg
xchg
pop
lods
jge
adc
sub
js
and
cmpsl
popf
push
mov
xchg
or
out
dec
into
dec
inc
fistps
pusha
insl
sbb
cmpsl
jl
das
jo
sub
dec
shrl
loope
pop
stc
cmp
sub
cmp
mov
aam
push
outsl
scas
adc
cs
or
dec
into
mov
pop
xchg
ret
pop
fldl
js
testl
pop
cmpl
dec
adc
fwait
xchg
int
pop
in
mov
cs
push
or
pusha
iret
mov
scas
sti
sub
enter
into
pop
push
test
cmp
call
xor
cmp
mov
xchg
push
cmp
adc
sub
mov
icebp
jo
loop
cmp
xchg
data16
mov
or
movsl
pop
jmp
repnz
push
enter
xchg
imul
push
or
xor
popa
repnz
adc
lcall
or
mov
arpl
and
xlat
cmpb
dec
pop
iret
sub
mov
insb
leave
cmp
imul
aam
leave
jnp
rclb
mov
lods
pop
add
lahf
nop
xor
test
xchg
and
lahf
jnp
inc
sub
push
std
xchg
enter
mov
lods
jecxz
push
mov
or
cltd
push
inc
cmpsb
iret
faddl
repz
or
in
icebp
ret
xchg
dec
pushf
jb
mov
stc
mov
mov
cwtl
movsb
mov
shlw
add
mov
fsubrl
pop
mov
js
out
xchg
fidivs
movsl
imul
out
xchg
lods
mov
movsb
loope
jnp
sti
cs
cmpsb
gs
push
cmp
addr16
jp
pop
jo
dec
insb
xor
mov
imul
and
dec
out
pop
cld
sub
mov
pop
mov
sub
je
js
in
outsl
ljmp
mov
iret
dec
sub
rolb
push
push
mov
fs
sahf
xchg
insb
dec
mov
decl
insl
push
ss
jge
imul
popa
push
mov
lcall
push
inc
jp
aam
int
std
mov
and
and
jl
mov
lods
cmp
lock
push
sub
aam
jns
mov
ljmp
arpl
xchg
push
arpl
scas
out
push
adc
adc
mov
jne
test
into
cmpsb
addr16
cli
pushf
stc
pop
imul
rcr
pop
outsb
fiadds
scas
lods
fcmovbe
and
push
adc
out
roll
das
addr16
xor
inc
mov
jns
dec
rorl
or
scas
push
mov
xor
mov
cmp
dec
fsubrl
mov
xchg
pop
arpl
add
inc
out
cmp
pop
ss
repnz
mov
es
movsl
xor
lods
repnz
sti
testb
xchg
cli
lds
arpl
fwait
sti
xchg
and
jmp
xor
clc
or
scas
inc
lcall
mov
mov
in
mov
push
filds
mov
xchg
mov
gs
sbb
stos
arpl
aas
popf
test
or
movsl
in
push
ja
fs
cmp
sahf
mov
adc
mov
andl
cmp
push
lret
dec
ss
test
repnz
repz
or
aam
faddl
jo
imul
add
mov
ret
insb
adc
into
pop
or
inc
mov
fcmovnb
mov
ret
call
and
fsubs
inc
jg
ret
dec
leave
cmpsb
lods
out
or
inc
push
add
xchg
mov
xor
cmp
push
out
sub
xor
hlt
xor
ret
repnz
aaa
jb
xor
test
call
push
rcrb
sub
mov
adc
or
aas
cli
cmp
dec
sub
dec
and
test
xor
xchg
fstpt
push
in
mov
or
je
mov
mov
adc
add
test
hlt
add
mov
in
cmp
out
nop
mov
icebp
push
inc
xchg
mov
roll
xchg
int3
sbb
add
sub
xchg
inc
xor
lods
push
in
rclb
mov
mov
and
or
aaa
test
divl
add
push
xor
lea
mov
xor
mov
push
mov
repz
clc
dec
leave
movsb
cli
sub
gs
adc
jl
shrl
sbb
cmpsl
or
jno
pushf
pop
insl
insb
imul
lret
push
xor
pop
and
out
mov
pop
mov
inc
adc
andb
sub
test
lahf
mov
jg
sbb
mov
sar
jge
ret
dec
test
cmp
bound
mov
cmpsl
lret
aad
and
cwtl
sbb
add
mov
dec
jbe
les
movsb
mov
fisubs
sbb
aad
sbb
cmc
imul
outsb
xor
xor
movb
jmp
repz
push
addr16
in
inc
xchg
movsb
mov
rolb
aam
mov
call
inc
and
test
fs
rclb
fisttps
rorb
sti
jle
imul
xchg
lcall
dec
test
adc
xchg
push
sub
xchg
mov
stc
push
dec
pop
jl
ret
add
push
add
xor
cmc
cmpsl
loope
xchg
and
mov
sbb
dec
cwtl
movsb
cmp
sub
cmp
xlat
mulb
dec
scas
sbb
xlat
xchg
and
pushf
lret
mov
sbb
dec
rorl
jo
js
xor
jno
insl
cli
es
add
sub
lcall
inc
addb
sbb
gs
jp
cltd
add
nop
in
inc
sub
xor
sbb
repz
cli
xchg
cmp
mov
mov
out
xor
xlat
popf
sbb
mov
dec
lods
mov
stos
pop
stc
jge
rcrl
sub
lea
xor
pop
xor
adc
out
ss
push
pop
sbb
cmpl
cmpsb
mov
push
jle
push
adc
push
inc
jbe
xor
jo
mov
cmc
xchg
xchg
add
inc
xor
xchg
sub
data16
pop
jns
cmp
jmp
hlt
imul
fmull
jp
test
jecxz
and
aad
xchg
dec
mov
shrl
loop
adc
adc
mov
xchg
push
aaa
push
addr16
pop
mov
fwait
subl
call
int3
sbb
out
in
mov
nop
andl
sbb
bound
adc
dec
enter
and
push
decl
push
pusha
xchg
fldcw
fs
xchg
dec
fwait
sbb
jns
pop
testb
mov
mov
push
inc
int
mov
dec
ljmp
inc
mov
and
mov
inc
and
sbb
popf
pop
cld
gs
repnz
or
lock
mov
jnp
jb
xchg
cmp
dec
or
aam
sbb
jnp
daa
xchg
cmp
ret
sbb
cmp
pop
les
int3
bound
and
les
icebp
cmpb
sti
xchg
imul
mov
lods
dec
push
mov
movsb
push
fdivp
sub
mov
out
and
shll
fwait
scas
out
repz
and
or
inc
sbbl
fidivrl
jnp
aas
mov
inc
add
mov
shrl
add
xchg
fcmovu
pop
out
or
out
lock
mov
inc
sbbl
xchg
xor
leave
insb
inc
jg
sti
outsb
or
push
inc
adc
xchg
sub
adc
sbb
in
pop
test
mov
int
imul
jecxz
jl
cmpsl
shl
imul
mov
dec
out
xlat
mov
sbb
in
push
lret
cld
push
scas
lods
inc
cld
stos
pop
iret
sub
lds
xchg
mov
sbb
movsl
mov
cmp
lods
subl
sub
lock
lock
shll
nop
pushf
nop
imul
add
in
and
popa
test
add
pop
int3
pop
pop
inc
xchg
icebp
jb
mov
or
sub
repnz
sub
fiadds
or
scas
jno
mov
push
and
test
add
jb
and
jo
fistpl
testb
cltd
mov
iret
add
mov
add
stos
ds
push
ss
jmp
sbb
popf
pop
repz
mov
jnp
in
imul
sbb
mov
sbb
mov
xor
mulb
out
lcall
mov
filds
cli
stos
sub
add
es
push
jb
sbb
mov
insl
mov
mov
mov
setg
cli
fdiv
cli
movsl
push
idivl
movl
inc
xor
inc
mov
lock
add
xorl
xchg
mov
sbb
sbb
sbb
in
cltd
push
xor
mov
or
jae
ficoms
in
call
push
enter
and
es
int3
sbb
mov
push
jl
push
jmp
mov
sub
subb
ljmp
dec
test
mov
sbb
daa
fnsetpm(287
in
cmpsb
xor
mov
xchg
pop
cld
stc
mov
mov
in
xchg
sbb
adc
addr16
push
mul
hlt
stc
xabort
push
add
add
push
mov
inc
dec
xorb
pop
and
cmpsl
xchg
cli
pop
lods
sub
adc
xchg
cltd
lret
or
test
add
mov
sub
loop
xchg
lahf
rcrl
cld
jl
or
fwait
setae
movlps
lods
cli
cwtl
imul
movsl
add
add
jnp
mov
cmpsl
bound
mov
pushf
jmp
sub
out
repnz
xorb
jmp
mov
xchg
insl
push
fistpll
int3
adc
mov
push
stc
shlb
mov
ja
orb
punpckhdq
rolb
imul
jg
push
loope
test
insb
ret
shll
cmp
lods
insb
jno
dec
pop
lret
aaa
or
gs
jns
js
xchg
ss
mov
mov
ret
sti
jg
je
jp
mov
cmpb
add
adc
or
sub
or
pop
nop
dec
jmp
into
out
mov
fstpt
sub
xor
repz
lods
mov
xor
lcall
cmpsb
dec
movsl
xchg
adc
pop
jno
fsubl
cmp
push
movsl
inc
daa
mov
push
push
inc
lea
pop
jns
addr16
loopne
mov
inc
adc
xlat
push
adc
movsb
call
xchg
cmp
movsb
arpl
cmpsb
add
inc
sbb
scas
push
or
int
mov
addr16
jo
xor
fs
push
addr16
decb
iret
sub
pop
push
insb
loope
jne
sbb
stc
xor
fsubl
cmp
lea
adc
clc
outsl
push
jae
push
addl
jno
pop
shll
mov
mov
mov
and
add
jl
cld
inc
outsb
cmp
loope,pt
xchg
pop
sarb
jnp
sbb
les
bswap
in
push
hlt
mov
addr16
inc
rorl
mov
jbe
sub
xchg
jns
pusha
movsb
adc
inc
cld
or
and
xor
bound
mov
mov
cmp
and
dec
pop
shl
fadds
cmc
cmpsb
in
lret
ja
cmpsl
pop
xor
clc
js
xchg
inc
sub
and
jbe
sbb
aad
lcall
push
mov
pop
push
mov
mov
jge
jmp
mov
pop
fwait
jns
pop
mov
insl
lcall
sub
add
lcall
cmpsb
stos
jp
ret
ja
lahf
rcrl
mov
jg
loopne
xor
dec
repnz
xor
xchg
insb
adc
pop
imul
scas
add
in
sti
pushl
std
scas
fwait
mov
push
cltd
stos
sub
xor
cmp
and
adc
out
movsl
popa
les
push
mov
sahf
outsb
jbe
bound
in
in
andl
pop
xorb
and
cmpsl
mov
aad
mov
movsl
popa
cmpsb
lahf
sahf
and
scas
loopne
cs
xor
leave
xchg
in
imul
jecxz
imul
push
sbb
leave
mov
out
sbb
test
dec
sub
js
sub
dec
jne
inc
seta
mov
xchg
daa
xchg
sub
mov
adc
bound
mov
stc
out
cmp
push
ja
sbb
icebp
pushl
mov
and
loop
stos
cwtl
sub
lods
insb
andl
pop
adc
lods
fs
popf
sbb
sbb
in
sbb
sub
xchg
fs
xor
aas
bound
xlat
arpl
ss
push
aad
mov
sti
stos
adcl
adc
push
repnz
jp
decb
movsl
fsubrl
ficoml
mov
mov
sbb
out
test
push
ret
repnz
lahf
lods
or
into
lret
jb,pn
push
or
int
cmc
push
outsl
lret
cmc
pop
sbb
xchg
sub
mov
ret
lret
jo
cs
xchg
lods
das
and
dec
adc
out
push
lret
push
ljmp
aad
pop
into
cmp
jbe
das
sbb
mov
push
sar
xchg
xor
adc
jnp
jne
inc
nop
imul
push
repz
call
lods
xor
inc
movb
sbb
push
dec
iret
jae
std
imul
jmp
dec
adc
negb
scas
ja
lock
pop
pop
sti
mov
es
imul
outsl
enter
inc
in
cld
imul
popfw
inc
jecxz
jl
icebp
pusha
scas
xlat
mov
jnp
les
dec
test
sbb
sbb
dec
ljmp
dec
push
jb
testb
mov
cmpsb
dec
lea
std
cltd
lret
push
mov
mov
fldcw
cmp
jns
sbb
push
mov
mov
loop
jecxz
stc
ja
inc
popf
xorb
mov
xchg
inc
adc
sub
stos
dec
sbb
mov
test
mov
cmpsb
mull
mov
cli
lea
mov
int3
sub
cltd
cltd
sbb
stos
cmp
arpl
iret
outsb
and
int
push
adc
mov
push
dec
gs
mov
fcoms
lea
pop
add
xchg
iret
adc
sbb
adc
pop
negb
push
pop
mov
es
movsb
shr
cmp
sbb
fcmove
xchg
add
test
int
mov
dec
aam
lret
loop
cmp
testb
pushl
adc
jl
and
sub
ret
aaa
rorl
inc
sbbl
loop
lock
out
xchg
jecxz
or
cmp
sbb
lock
adc
jge
xor
lods
aas
jle
enter
cmpsl
mov
fxch
jno
aas
sub
xor
in
loopne
lea
movsl
rcrb
aam
mov
xor
push
inc
int
inc
ss
or
xor
or
jae
js
adc
mov
fwait
add
add
and
or
mov
add
push
adc
add
mov
hlt
mov
outsl
and
inc
sub
push
or
inc
jne
loop
je
xor
xchg
add
lods
repnz
sti
int
and
xchg
push
outsb
mov
cmp
std
xchg
in
addb
popf
inc
into
je,pn
jle
xchg
inc
dec
mov
cmpsb
and
and
ret
das
lods
xor
push
jns
lea
mov
shlb
cmc
push
lea
test
sbb
icebp
mov
pop
int
jecxz
out
ja
jns
mov
fdivrl
mov
iret
mov
pusha
lods
dec
test
pop
shlb
insb
ja
sbb
leave
or
dec
adcb
jecxz
sbb
cmp
outsl
mov
inc
rorb
test
and
dec
and
sub
arpl
mov
cmp
mov
in
push
imulb
div
cmc
insl
les
jns
mov
je
mov
ds
inc
sar
test
push
in
icebp
ficomps
sub
fcoml
push
out
or
sub
jl
out
xor
mov
mov
movswl
test
inc
adc
dec
cmp
into
and
sbb
push
adc
aas
test
add
or
lea
or
and
and
fs
test
pop
test
inc
sbb
push
push
sub
ret
fisttps
sub
arpl
ja
fs
xchg
inc
dec
pop
xchg
fmull
dec
inc
out
pop
cmpsb
insl
xor
arpl
lods
mov
testl
pop
fdiv
mov
call
push
pop
repnz
loopne
in
push
pop
pop
sub
push
and
out
repz
push
test
xor
cltd
pop
idivb
mov
inc
mov
jae
pop
lods
sub
ss
mov
mov
negl
inc
in
fsubs
in
mov
outsb
out
pusha
dec
cmp
je
dec
push
mov
cmp
repz
xchg
xchg
ds
insb
push
inc
jecxz
mov
into
in
lea
decb
ret
cld
mov
mov
xlat
adc
daa
push
les
jns
sbb
lock
dec
shlb
ljmp
xor
cwtl
sahf
sbb
test
dec
pusha
out
stos
xchg
lcall
push
lahf
mov
push
lods
push
jno
sub
jl
bound
push
fstpt
andb
ljmp
mov
adc
js
loop
mov
push
ja
cli
out
pop
ja
iret
sub
outsb
jl
add
dec
xor
jl
insl
pop
sub
pop
sbb
jo
sbb
lock
lret
lret
test
mov
aas
lock
or
lcall
adc
int3
js
cmp
jo
jle
cmp
sub
cld
push
cmp
mov
sbb
lcall
ljmp
xchg
outsb
xchg
call
mov
jecxz
je
stos
ret
aad
mov
adc
in
ficomps
dec
shlb
add
push
or
xchg
mov
sub
xchg
jg
mov
in
and
imul
jo
mov
cmp
ljmp
daa
jbe
fisttpll
lahf
pop
adc
sub
sbb
les
scas
xchg
sti
scas
jne
cmp
cmpl
pusha
mov
sub
icebp
arpl
bound
add
lret
js
popf
fs
push
ret
add
cli
dec
xchg
mov
and
int
stc
pop
imul
xorb
fsubs
movsl
stos
aaa
and
xor
sub
and
cli
jno
fistpl
imul
jnp
mov
push
into
sub
sbb
fisttpl
sub
mov
push
dec
jb
push
mov
insl
daa
adc
popf
inc
mov
cmp
pop
icebp
inc
jae
add
push
pop
mov
cmp
ja
sbb
sbb
gs
adc
aas
adc
mov
pop
repnz
push
mov
test
mov
fwait
insb
mov
insl
mov
xchg
or
cld
hlt
push
mov
fcmovne
pop
insl
rolb
jp
xlat
mov
fs
or
loope
sub
leave
lahf
in
aad
scas
test
popa
or
popa
lret
mov
or
sub
adc
cmc
pop
sar
pushf
ja
lods
cmpsb
cmp
push
mov
and
stos
jns
mov
pop
dec
mov
ficoms
add
push
outsb
lods
xchg
insl
adc
push
adc
subb
or
jp
mov
pop
xor
scas
test
leave
aam
xchg
arpl
mov
fwait
mov
fsubp
pop
dec
in
nop
fsubl
in
test
cmp
sub
ror
or
dec
rol
in
popf
adc
push
xor
mov
mov
ja
popf
and
idivl
outsb
shl
dec
sbb
testb
out
jne
add
mov
test
shl
mov
sub
out
push
jnp
pop
daa
aaa
lods
nop
lock
fdivrl
lock
or
andb
xor
sbb
push
lds
rcll
dec
fimuls
push
cmp
mov
movsb
into
xchg
dec
sti
shll
jno
sbb
sahf
sub
jle
pop
sbb
pop
lock
dec
imul
sahf
mov
fcoml
push
jb
dec
and
call
imul
and
add
das
iret
decb
clc
mov
decb
ror
push
loope
jg
sarb
dec
in
xchg
cmp
or
in
roll
movsb
mov
gs
xlat
mov
mov
pop
ret
sub
pop
aaa
fcmovnbe
test
sub
cmpsb
out
adc
inc
call
in
ljmp
lret
jb
rorl
inc
pop
pop
adc
pop
push
scas
lea
sar
stc
or
pop
sbb
out
sbb
imul
lock
stos
jmp
add
mov
mov
push
iret
movsl
push
push
sbb
mov
pop
in
adc
lock
rol
pusha
sub
mov
or
fwait
lcall
pop
adc
xor
scas
mov
xorb
aad
mov
mov
adc
xchg
idivb
xchg
sbb
ret
ljmp
pop
std
and
mov
test
rcr
jae
sarb
jae
xor
pushw
cmp
out
insl
mov
outsb
adc
test
lods
jg
pop
lds
pop
arpl
jg
test
js
rolb
test
stc
movsl
stos
int3
call
add
pop
push
shl
enter
ds
jbe
push
mov
ret
jg
das
imul
xchg
stc
icebp
sub
adc
ljmp
leave
jnp
and
sub
pushf
sti
into
arpl
in
mov
jecxz
adc
mov
pop
xchg
out
or
xchg
cmp
fs
cmp
and
sbb
mov
lahf
jle
imul
cs
inc
jmp
cmp
loop
fs
mov
and
loope
mov
outsb
mov
mov
pushf
int
mov
xor
lcall
call
jb
adc
rcr
daa
mov
sbb
inc
sbb
cltd
inc
pop
cmpsb
repz
clc
and
or
cltd
aas
pop
cltd
mov
inc
pop
push
pop
and
push
ljmp
inc
jge
shrl
jnp
cwtl
cmp
inc
ss
jbe
sbb
or
ret
in
push
mov
imul
add
testl
sbb
shll
dec
fisttpll
cmpsl
mov
shll
stos
pop
jnp
inc
mov
andl
jne
aaa
cmpsl
orb
and
fmull
test
mov
mov
rcll
lret
ret
rorl
mov
and
repz
lods
sub
jecxz
or
xchg
mov
cmpsl
jecxz
add
lret
jl
mov
cld
mov
mov
mov
xchg
mov
mov
pop
fidivrl
hlt
mov
out
push
mov
and
ror
adc
addr16
outsb
sub
mov
movsl
mov
xchg
movsl
lods
add
and
push
inc
dec
adc
mov
adc
test
lahf
lds
add
cmpsl
imul
jp
mov
push
and
fmul
daa
movsb
xchg
aaa
adc
lcall
hlt
xor
add
push
dec
icebp
in
aaa
std
rcr
js
js
out
adc
lock
in
dec
loopne
push
jmp
xchg
add
jae
ret
mov
clc
mov
repz
adc
test
jno
je
mov
push
das
fmull
sbb
clflush
lcall
xor
inc
lds
lcall
sbbl
stos
notl
call
daa
mov
outsb
and
fldl
pop
out
pop
push
popf
sbb
xchg
dec
lahf
ficoms
pop
loope
xorb
push
or
mov
sub
adc
push
arpl
and
cs
jle
sahf
sbb
xor
xchg
dec
into
jg
pop
xchg
sub
mov
inc
mov
das
adc
pop
cwtl
popf
iret
mov
xchg
add
add
testb
mov
rcll
push
dec
mov
pop
push
movsl
int3
int3
ret
sbbb
hlt
icebp
push
cltd
mov
pop
imull
xchg
mov
daa
xchg
sub
aas
and
mov
fwait
mov
insl
daa
pop
insb
sbb
xchg
jno
push
fistl
js
inc
pushf
icebp
pop
add
lcall
insl
out
xor
es
pop
push
and
adc
lods
sub
aad
enter
pusha
or
mov
rcr
je
and
aas
sbb
lds
shrl
push
push
or
scas
lcall
push
dec
xor
fmull
xchg
sbb
jb
sub
fs
scas
xchg
orb
mulb
xchg
mov
jmp
jno
inc
addr16
cmp
inc
jle
sarb
dec
push
movsl
call
and
in
lahf
cmp
stos
xchg
filds
or
add
pop
xchg
in
fldcw
push
mov
xchg
out
les
mul
stos
or
js
int3
push
cli
fwait
popl
push
sbb
or
fidivrs
movsb
jns
sub
push
test
ficoml
imul
jne
inc
mov
push
cmp
notl
push
call
aaa
inc
and
jno
jmp
movsb
aas
rorb
fisttpl
mov
ds
fnstsw
enter
pop
shr
jl
mov
mov
mov
inc
xchg
in
and
fdivrl
jnp
pop
stos
xchg
push
mov
in
ss
lret
leave
push
and
push
xchg
dec
cmpsb
pop
pop
mov
inc
pop
cs
adc
aad
push
mov
xor
add
icebp
enter
in
push
popf
xchg
sub
sti
mov
stc
imul
dec
pop
les
std
adc
xor
std
std
jne
mov
push
clc
ss
mov
mov
xchg
or
cld
jns
lret
pop
xchg
sub
push
mul
stc
loop
xor
mov
push
movsb
cwtl
mov
shr
enter
dec
mov
test
outsb
aad
loope
fidivrs
mov
or
leave
shlb
sbb
in
cmpsl
xchg
xchg
mov
scas
ret
loopne
daa
sub
fistpl
rorb
add
movsb
xchg
ljmp
adc
inc
or
je
ror
mov
scas
popa
fidivl
test
jo
xchg
cmp
mov
add
movsl
fldenv
daa
addr16
add
iret
mov
adc
push
fwait
xchg
xor
sub
mov
orl
les
lret
dec
hlt
sub
push
mov
stos
hlt
insl
stos
and
pop
in
je
dec
cli
sub
mov
jo
and
cmp
mov
sub
jae
push
inc
int
inc
shll
leave
in
xchg
jae
push
push
inc
ja
into
push
mov
in
lcall
push
inc
xchg
jg
sbb
and
or
jl
shrb
sti
mov
mov
adc
cmp
adc
arpl
add
mov
vmaxpd
dec
lods
xlat
leave
faddl
adc
cmp
popf
lods
mov
es
dec
add
sbb
push
xchg
mov
imul
pop
and
xor
push
arpl
jae
pop
scas
push
fnstcw
mov
outsl
and
xchg
mov
sarl
xchg
cwtl
mov
dec
sbb
test
movsb
mov
hlt
and
imul
imul
jo
or
insl
scas
push
dec
dec
or
int3
sbb
mov
mov
in
push
clc
cli
sbb
adc
adc
in
dec
loopw
or
inc
rol
dec
shr
add
push
mov
cmp
or
pop
sbb
sbb
aas
jo
xchg
sbbb
test
rol
inc
mov
adc
mov
pop
inc
popf
rcrb
ja
xchg
popf
dec
pop
and
popf
inc
shll
jl
inc
lock
cmpsb
dec
xor
lds
cld
out
cmp
mov
xchg
rolb
cli
out
ret
dec
popf
jge
rcll
loopne
js
sbb
lea
in
fs
stc
int3
xor
cmp
and
jns
xchg
inc
mov
in
mov
or
push
out
push
pop
push
push
jg
add
inc
inc
test
push
mov
inc
out
adc
lcall
ret
xor
aas
mov
inc
cmpsb
mov
es
cmp
mov
in
push
push
sbb
jo
sbb
mov
jmp
mov
mov
enter
push
popa
push
xlat
pop
lock
mov
and
ret
fisubs
clc
decb
mov
mov
hlt
das
sub
cmp
sub
xor
sti
xchg
jne
sti
mov
add
mov
mov
jbe
inc
stc
mov
jg
sbb
cltd
std
roll
mov
shrb
ljmp
fdivrl
push
inc
adc
test
mov
jp
pop
xchg
jne
leave
sub
sbb
sar
push
pop
jmp
outsb
loope
cltd
jle
mov
aaa
popf
popf
adc
mov
mov
sub
xor
pop
push
fisubl
sbb
out
jge
inc
fisubrl
sub
call
lret
out
pop
nop
test
sbb
not
ret
popa
sub
sub
test
ror
shl
push
lret
iret
cltd
jg
ds
ret
inc
push
xor
mov
pop
cwtl
aad
jg
fidivs
fcompl
jmp
cs
mov
sahf
xchg
or
pop
dec
loopne
xor
xchg
add
inc
out
push
icebp
cmp
cwtl
sub
mov
clc
mov
sbb
adc
push
mov
pusha
inc
shlb
movsb
pop
mov
in
aaa
gs
sbb
pop
or
ss
add
inc
jb
call
sub
mov
mov
mov
inc
lret
xorl
push
pop
push
pop
mov
cwtl
cli
sub
dec
pop
push
out
inc
pop
repnz
clc
cld
sti
xchg
xchg
cmp
mov
cld
push
out
inc
pop
mov
dec
push
xlat
jge
dec
sbb
jns
mov
sarl
mov
fcoml
pop
sbb
rclb
orb
push
cmp
test
out
mov
popf
push
xor
inc
push
lods
xor
mov
pop
and
lods
mov
push
ljmp
mov
out
pop
shlb
dec
xor
icebp
jecxz
adcb
cmc
pop
xor
pop
sub
mov
push
dec
sbb
in
or
add
jl
inc
notl
adc
es
fistpl
mov
data16
pop
adc
mov
pop
pop
inc
cli
sub
mov
aam
call
nop
cmp
xchg
pop
and
xchg
fisubl
mov
pop
nop
fs
xchg
jge
or
mov
cmp
je
sti
lds
adc
test
jns
sub
xchg
cmp
mov
lret
mov
inc
cmp
push
push
and
push
jns
mov
xor
sub
sub
sti
es
add
mov
pop
mov
orb
pop
lds
cmp
repz
test
shlb
in
lds
pop
ja
sub
cmpl
mov
fldl
push
dec
rorb
mov
dec
ljmp
dec
dec
jae
int3
pop
sub
inc
scas
mov
mov
insl
movsb
mov
push
ror
xor
daa
leavew
insb
or
mov
push
loope
test
cs
call
add
les
mov
outsb
fistpl
dec
pop
inc
int3
ljmp
sub
cmp
sar
xchg
mov
sbb
jmp
or
adc
add
dec
sbb
dec
icebp
fsubrl
pop
aaa
lds
jecxz
and
dec
lods
add
push
mov
dec
pop
cmp
int3
sahf
cltd
fdivr
out
popa
mov
in
mov
enter
lds
sub
psubsw
scas
add
cmp
sbb
mov
cmp
pop
push
fld
out
dec
and
xchg
cmp
sahf
jl
jo
aad
shrb
int
pop
clc
sbb
ja
cmpsb
sub
cwtl
test
push
sahf
dec
mov
jp
push
pop
add
add
int
pop
cs
adc
jno
call
pop
mov
adc
pop
hlt
daa
fistpl
sbb
js
dec
inc
lods
jnp
aaa
insl
inc
push
mov
adc
fisubs
les
jae
or
push
and
and
mov
mov
mulb
dec
xor
jb
cli
pop
loopne
int3
aam
stc
cmp
jp
out
sub
push
fs
test
push
dec
lcall
dec
test
inc
fwait
cmp
out
pop
adc
sbb
sub
leave
dec
sbb
xchg
fs
nop
iret
jb
mov
dec
scas
fdivrl
and
in
ss
dec
lods
jle
add
and
aad
pop
inc
and
push
je
pop
inc
jmp
aaa
sarl
mov
aas
cmpsl
bound
hlt
pop
mov
or
hlt
mov
add
stos
sarb
stc
sahf
and
cmp
adc
xchg
and
cmpsb
shlb
pop
imull
mov
dec
inc
cmp
testb
mov
cmp
lret
pop
fdivp
or
mov
cltd
cmpb
dec
mov
jl
or
roll
aas
xchg
stc
popf
fsts
test
jg
and
jns
mov
adc
addl
mov
mov
pop
jno
add
fstl
dec
inc
sub
test
xchg
enter
xor
mov
fimull
xchg
cltd
imul
int3
jns
sub
shrl
fs
mov
add
push
sbb
xchg
adc
rcpps
nop
je
or
dec
fimuls
mov
xor
sbb
mov
mov
aad
adc
xor
sbb
fistps
push
shll
adc
pop
in
adc
adc
jns
addr16
add
bound
das
into
into
xor
sub
pop
dec
cmp
loop
rolb
push
ficoms
cmp
cmp
cmp
pop
in
nop
xor
test
mov
leave
in
test
lods
es
xor
dec
jecxz
jp
cmp
fs
ffree
sbb
lds
push
rcll
call
dec
movsb
dec
mov
fistpll
js
push
repz
out
adc
jle
pop
iret
lods
jl
lock
jo
es
daa
cwtl
mov
mov
call
sbb
push
nop
mov
out
in
outsl
cmp
push
mov
out
mov
movsb
fs
inc
pop
add
mov
pop
jl
inc
dec
add
push
sti
sub
mov
jge
push
stos
lea
lea
mov
sbb
jne
xor
pushf
cld
mov
sbb
mov
cwtl
jns
es
cli
pop
xchg
xchg
bound
pop
pusha
lret
ja
xor
shll
andl
loop
push
cmc
mov
lock
aas
pop
and
dec
insl
mov
push
pop
xchg
icebp
cmp
repz
xchg
mov
jae
adc
add
push
data16
aas
in
cwtl
sbb
sbb
add
sub
stos
mov
inc
and
pop
mov
out
xor
cltd
movsb
push
stos
mov
push
lret
aaa
divl
or
jae
cmp
adc
mov
cmp
loope
push
movb
fidivl
lea
sbb
push
out
rcll
out
pop
addl
pusha
in
loopne
es
cmc
sbb
mov
ds
adc
mov
fisttps
push
hlt
mov
push
pushf
mov
add
mov
test
fsubrl
fildll
pop
cmpsl
xor
ds
dec
and
addr16
and
in
inc
sbb
pop
adc
inc
pop
lock
aam
out
cmp
adc
push
and
sbb
adc
pusha
fidivrl
and
fisttpl
pop
rcl
cmp
xor
fsts
push
xor
cmpsb
iret
ret
push
aam
and
or
push
jp
call
mov
in
sti
and
mov
cmp
aas
push
sub
cmp
pop
bound
dec
pop
fdivr
gs
mov
bound
push
loopne
jae
scas
cmc
mov
imul
cs
push
jb
mov
lret
jg
pop
pop
xor
outsl
out
lcall
jge
addb
inc
push
into
sbb
out
pop
push
mov
push
clc
dec
pop
pop
sti
xchg
test
mov
test
jge
mov
ljmp
je
jno
shrl
xchg
add
cmp
pop
shlb
adc
xchg
xor
int
cmp
or
fstl
pop
sahf
imul
sub
loop
mov
mov
aad
repnz
addr16
jmp
or
add
push
or
push
arpl
aas
lock
mov
filds
or
and
cmp
fidivs
test
in
mov
mov
sub
and
sarl
adc
out
push
es
fdivs
shll
cmp
cmpsb
aad
addb
ljmp
mov
pop
test
andl
jbe
cs
outsb
mov
cmp
int
pop
test
mov
cmp
out
push
mov
loop
push
dec
sub
aaa
pusha
jbe
jp
in
jbe
call
pop
xor
aad
add
dec
std
mov
cltd
aam
lods
or
or
cmp
or
test
cmp
adc
lea
xor
cli
and
mov
adc
mov
adc
imul
fwait
cmp
jb
or
sbb
xchg
pop
faddl
xor
dec
cmp
movsl
lcall
movsb
jmp
dec
js
int3
pop
int
dec
dec
lds
add
lods
sbb
dec
pop
push
cmp
test
stos
xchg
test
jmp
adc
xor
xor
push
xchg
and
lea
mov
ret
mov
bound
lods
sti
sub
or
pop
sbb
addb
shrb
pop
push
xchg
sarb
mov
icebp
ja
cli
xor
jmp
pop
cmpsl
popa
orl
popf
cmp
dec
mov
push
pop
mov
pusha
test
hlt
xlat
in
xor
mov
and
icebp
mov
jmp
shll
idivl
sahf
flds
push
cmc
cmp
mov
in
pop
cmp
ljmp
or
xor
inc
mov
push
daa
add
xchg
mov
js
dec
mov
jmp
add
lds
out
xchg
lock
add
sahf
sub
xor
mov
pop
sbb
add
jmp
jae
jle
pop
dec
mov
jl
mov
fidivs
push
fsubl
sbb
ss
xchg
or
add
or
scas
push
or
mov
dec
jne
std
out
fldt
pop
iret
adc
scas
into
jns
dec
addr16
dec
loope
xchg
pop
insb
mov
sahf
pushf
or
jne
and
or
clc
stos
add
int
pop
jbe
loope
call
jg
mov
add
aam
sbb
addl
xchg
pop
cltd
or
mov
jne
mov
std
pop
test
xchg
push
pop
or
pusha
imul
push
int
cwtl
mov
mov
pushf
jle
stc
psadbw
aas
movb
push
les
cmp
xchg
cmpsl
out
jg
mov
push
cmp
enter
int3
std
int3
outsl
xchg
add
hlt
sub
fs
add
outsl
pop
mov
int
cmpl
mov
fidivrs
push
es
jnp
fsubrl
shll
mov
mov
and
sbb
test
dec
add
scas
adc
je
int
jb
jne
xchg
cmp
popa
mov
lds
fildl
xor
rorl
xchg
jnp
addl
cmp
fimull
push
adc
xor
fisubrl
cmc
adc
fiadds
mov
mov
adc
out
outsb
mov
out
jg
in
in
push
popf
shl
sbb
imul
lock
mov
sti
aad
jbe
add
push
xchg
jo
nop
push
push
cmp
lret
aam
dec
bound
jae
rclb
sub
cmp
xchg
add
loop
test
mov
loop
inc
mov
mov
cmp
stc
ja
out
jns
adc
popa
adc
sahf
imul
loopne
mov
data16
in
call
jp
gs
movsb
cmp
clc
dec
jo
sub
push
mov
stc
jns
add
mov
mov
dec
pop
in
mov
pusha
mov
mov
mov
adc
push
outsb
js
ljmp
mov
ret
mov
cmp
pusha
sub
and
fldenv
mov
adc
jno
pop
cmp
mov
mov
push
or
cmc
pushf
stos
insb
inc
dec
aaa
rcl
stos
clc
push
repz
fildl
jb
stos
dec
pop
nop
lds
cmp
inc
out
scas
mov
pop
mov
leave
bnd
jb
xchg
lods
sbb
out
and
jae
lea
ret
insl
cs
daa
or
sub
fcom
and
in
mov
out
lcall
ret
jns
and
into
sub
andl
popf
mov
mov
scas
jo
cmp
sub
add
orl
jg
icebp
ret
dec
dec
fdivrl
push
sbb
inc
add
push
sub
pop
pop
cli
push
or
xor
push
cmp
sbb
decb
nop
cltd
ss
inc
popf
jmp
add
jmp
pushf
jns
mov
les
movsl
jge
mov
xchg
popa
insb
int
mulb
sarb
pop
lea
aas
test
fdivrs
add
push
inc
mov
push
inc
dec
fwait
imul
fs
subb
std
lea
inc
mov
pop
pushl
dec
imulb
mov
xor
test
inc
cmp
and
ljmp
ljmp
adc
fxch
xchg
cmp
pusha
fidivrl
mov
xchg
sbb
sbb
and
test
jl
cmp
mov
sbb
xchg
jne
daa
mov
movsl
out
call
test
push
fnstenv
push
out
sti
outsb
scas
adc
adc
jo
dec
jg
and
imul
jle
adc
data16
sub
mov
or
push
stos
push
add
jbe
out
dec
and
mov
inc
xor
xchg
pop
int3
mov
dec
push
mov
cmpsb
pop
push
push
icebp
rcl
add
xchg
sbb
xchg
ds
cltd
daa
add
cmp
lret
out
mov
inc
fwait
lret
or
les
popa
out
cld
xchg
cmp
mov
rclb
pmaxsw
or
addr16
push
cs
sbb
dec
cld
fstpl
lds
test
out
inc
stos
sub
adc
jg
shll
jb
sub
pop
and
loop
into
pop
mov
mov
lock
mov
or
add
fsubl
push
cmpb
push
mov
aaa
stos
gs
lcall
mov
data16
and
stos
mov
push
addl
mov
mov
sti
adc
xchg
dec
jmp
inc
lahf
stos
jo
ss
out
les
dec
dec
leave
sahf
lret
ja
mov
mov
inc
fmull
mov
je
mov
fsubrs
lret
and
call
fisubs
mov
pop
in
sbbb
frstor
lea
mov
xor
mov
adc
xchg
push
mov
xchg
cltd
stos
ja
mov
mov
xchg
cmp
sahf
inc
std
lcall
adc
jnp
jle
leave
nop
jl
push
mov
enter
or
shlb
mov
dec
mov
and
out
xor
sbb
fdivrs
sbb
rcll
shrl
jbe
ljmp
xchg
sub
stos
pop
jl
push
xor
fildl
xchg
adc
sub
icebp
addr16
lcall
jecxz
add
or
sbb
repz
pop
jae
jge
fstpt
ljmp
faddl
sahf
push
dec
stos
pop
out
sarb
inc
xor
nop
jmp
cli
cwtl
addl
in
test
lods
and
sub
aaa
pop
jmp
insb
in
popa
jae
jno
inc
xor
je
dec
outsb
mov
push
jns
pop
jmp
data16
or
into
movsl
or
aas
sbb
pop
fisubrl
mov
in
add
aad
repnz
cwtl
xor
mov
ss
or
jl
mov
scas
sub
in
mov
xchg
roll
jne
cmpsb
int
or
and
xor
xor
mov
mov
loop
fs
add
into
add
out
push
mov
mov
adc
je
xchg
ds
cmp
inc
or
push
pop
xor
popf
pop
lahf
inc
inc
push
out
mov
cltd
lea
or
xchg
add
clc
adc
push
enter
inc
sbb
pop
fldenv
or
push
jne
cmp
xchg
test
inc
cmpsl
mov
leave
gs
and
cmpsl
sub
push
cmc
pusha
jno
xchg
push
fsubl
mov
or
int
dec
push
daa
lds
mov
ret
inc
aam
aaa
pop
fwait
xchg
lret
pop
jb
inc
mov
cmp
aaa
xorl
movsl
lahf
mov
repnz
pop
mov
daa
jno
cs
adc
inc
xor
hlt
je
xchg
clc
fwait
loop
push
out
lock
pop
loop
dec
cmpsb
mov
outsl
cld
lock
add
shlb
xchg
shrb
movsb
sbb
sbb
xor
hlt
ret
and
repnz
scas
dec
jo
lret
fists
dec
xchg
xchg
aam
mov
js
jp
jle
bound
insb
mov
dec
es
cld
push
pop
add
cltd
cld
mov
out
jecxz
lret
gs
mov
mov
addr16
lret
cli
cmp
push
lds
inc
pop
jb
mov
sahf
jle
out
stc
in
pop
push
aaa
push
pop
jne
lcall
cmp
or
jne
inc
hlt
mov
mov
push
push
sbb
scas
lcall
punpckhbw
mov
imul
inc
jne
decl
jecxz
movsb
daa
pop
or
andl
pushw
in
push
push
test
cmpsl
xchg
lcall
jo
push
mov
arpl
dec
jp
mov
test
dec
fnsave
sbb
cmpsl
movsl
pop
es
repz
sahf
and
out
pop
push
enter
sub
push
inc
or
mov
scas
outsl
shlb
xor
mov
hlt
cli
mov
mov
out
push
cwtl
adc
push
jge
ja
inc
push
xchg
cmp
dec
into
and
gs
cli
inc
jl
jne
lcall
sbb
and
jno
popa
popa
mov
sub
xchg
adc
stos
fcoml
stos
and
xor
test
push
rcl
in
aam
xchg
dec
fidivs
adc
sub
fnstcw
sub
not
jmp
imul
aad
adc
mov
cmp
mov
imul
fs
sbbb
or
enter
jae
push
fdivs
or
test
sub
mov
push
xor
call
dec
cmp
mov
jbe
stos
mov
popa
mov
lods
loope
sahf
cmp
in
push
pop
sub
or
mov
inc
fcmovne
add
sub
inc
dec
mov
or
out
pop
cmp
inc
cltd
arpl
fcom
fsubs
call
imul
int3
out
lock
insb
cmpsl
pop
fnstcw
lock
test
push
jae
sbb
scas
jge
push
mov
inc
lock
push
ror
fistps
dec
dec
push
loope
jp
repz
les
scas
cmp
sub
rcrl
loop
dec
ret
fidivrl
inc
rcrb
push
and
sahf
sbb
pop
add
lea
incl
out
jb
cli
mov
mov
stos
mov
cltd
cmp
out
sti
icebp
or
jmp
fmul
adc
mov
push
xchg
aam
mov
fstpl
ljmp
pop
insb
je
mov
mov
push
out
inc
mov
repnz
lret
mov
cmpsb
and
scas
dec
scas
mov
rclb
pushf
stc
jmp
fsubrs
icebp
jle
add
fimull
dec
xor
sbb
sti
sbb
cmpsl
ret
sub
push
ljmp
xor
stc
mov
xor
sub
dec
xlat
adc
pop
cs
and
xor
sbb
mov
ja
add
xchg
ds
outsl
rcrb
bound
ljmp
sub
mov
sar
sbb
push
fwait
out
mov
test
shrl
dec
cmp
sub
push
pop
pop
mov
mov
add
clc
mov
fisubs
mov
pop
push
pop
mov
xor
jecxz
adc
popa
arpl
cmp
lret
sub
ficoms
push
push
pop
jb
mov
push
ss
insl
fucomp
add
sbb
xor
mov
scas
sub
mov
inc
mov
js
int
xchg
sahf
push
jno
sub
sbb
outsl
cld
xlat
adc
cltd
lds
movnti
mov
or
xlat
call
add
fists
mov
cs
popa
jge
test
xorl
movsb
push
or
and
subb
arpl
sbb
dec
xorl
jl
xlat
jge
dec
ja
jae
mov
popa
inc
xchg
inc
popf
xor
gs
push
fbstp
test
or
add
jnp
pop
mov
js
divl
shll
pop
or
fldt
add
sub
dec
mov
inc
mov
jno
jae
and
xor
mov
xchg
aam
adc
xlat
push
dec
test
out
mov
test
jmp
imul
aaa
sub
sbb
stos
push
and
push
xor
mov
fildl
and
pop
or
add
orb
and
shrl
out
xchg
adc
mov
cld
inc
xchg
and
xor
add
xchg
aaa
push
mov
stos
jl
ljmp
mov
fdivrl
lods
sbb
and
aas
jp
xor
dec
in
pop
push
xor
adc
insb
mov
mov
pop
adc
movsl
or
sub
pop
push
mov
in
push
jle
xlat
sub
mov
mov
mov
pop
data16
push
rorl
xchg
mov
sarl
rolb
lods
dec
adc
dec
mov
dec
fdivrs
pushl
movsl
xchg
aaa
jecxz
je
das
cmpb
dec
jb
test
add
cld
leave
add
rcrl
dec
inc
xlat
cmp
pop
aas
mov
rol
int
adcb
pop
decb
push
popa
add
sub
fldl2t
cli
jno
adc
push
mov
je
subb
xor
add
mov
imul
in
mov
xchg
mov
js
xor
pop
xchg
or
push
push
sti
mov
pop
aad
in
xchg
adc
cwtl
inc
ror
push
fwait
sbb
xor
sbb
push
test
lahf
push
jbe
sti
scas
xchg
sahf
cwtl
movsb
jmp
or
mov
jb
stc
into
cmpsl
cmp
out
push
add
jne
rcrl
sub
pop
scas
data16
mov
fstpl
test
mov
dec
sub
push
mulb
fs
sub
add
out
pop
rclb
pop
or
mov
ret
push
hlt
sbb
ud0
cmpsl
mov
sub
cmp
pop
cmc
aas
or
int3
jbe
shrb
or
mov
mov
ror
mov
ret
psrad
push
fldl
movsl
sub
and
pop
adc
xor
or
movsb
incb
push
in
fidivrs
sub
mov
lds
mov
leave
and
into
aaa
std
in
xlat
dec
or
inc
dec
jbe
test
mov
jae
mov
cld
ja
rcl
into
mov
movsb
mov
in
mov
icebp
xor
lret
push
add
sub
push
ja
sbb
ficoms
test
loope
lret
jmp
cmc
sbb
or
int
repz
cmpsl
jns
call
cmp
push
ret
aad
push
lods
mov
ss
es
shlb
mov
and
sbbb
sub
jp
data16
add
jecxz
jae
or
scas
jne
inc
mov
ja
inc
and
pop
mov
inc
popa
ljmp
js
pop
add
mov
ds
and
cmp
int3
out
pusha
movl
hlt
and
ret
mov
hlt
lahf
jbe
inc
cmp
ss
dec
fcompl
movsb
nop
les
sahf
mov
xchg
repz
xor
pop
shr
and
xchg
mov
into
outsl
orb
pop
aaa
mov
or
or
into
mov
pusha
stc
jmp
cmp
xor
mov
jecxz
add
jle
lods
data16
adc
pop
je
leave
jne
test
clc
in
addr16
scas
pushf
sbb
sti
movsl
mov
sub
push
out
and
pop
xchg
das
jb
jmp
into
sub
mov
mov
idivb
xchg
cltd
lcall
ljmp
shrl
jnp
lds
xlat
inc
or
mov
fldcw
pusha
lods
jo
mov
cmp
cmp
sub
mov
push
test
mov
pop
ljmp
idivb
jg
sub
mov
and
sbb
cli
jp
imul
roll
xlat
adc
push
aam
jmp
xchg
sbb
jne
aas
add
insb
mov
imul
jmp
mov
jns
dec
mov
mov
xor
test
cmp
dec
loopne
inc
pop
iret
jbe
es
into
xchg
sbb
hlt
dec
xchg
mov
mov
mov
xor
loop
inc
out
pop
fnstenv
sub
loopne
imul
fnstcw
mov
movsb
dec
jnp
imul
nop
dec
pop
int
addr16
xor
test
add
lret
mov
repz
cli
push
dec
insl
stos
jg
mov
jge
xor
dec
fcmovne
addr16
loopne
push
add
call
test
dec
sub
push
xchg
jle
test
hlt
stos
push
popa
test
addr16
dec
sbb
lret
add
fnstcw
mov
and
scas
scas
mov
leave
fnsave
daa
in
dec
cmp
inc
hlt
stos
mov
mov
arpl
sbbb
sbb
and
adc
pop
or
out
add
xor
sbb
ljmp
mov
adc
pushf
and
sbbl
pusha
lock
dec
lret
dec
pusha
cmpsb
fnsave
std
sub
push
mov
notl
add
jl
lock
inc
mov
fldl
mov
dec
scas
adc
mov
mov
xor
jg
sbb
push
adc
pop
pop
mov
xchg
jnp
sbb
fucomp
adc
mov
data16
add
mov
push
xchg
mov
ds
bound
ret
cmp
jnp
jl
leave
sub
icebp
mov
enter
dec
ret
add
dec
mov
xchg
dec
jge
xor
cmp
arpl
cmpsl
outsb
or
es
jle
sub
stc
lcall
lcall
insb
out
cmp
sub
fisubrl
pop
outsb
jp
dec
mov
daa
push
lods
les
aad
jmp
stos
je
fnsave
je
fwait
pop
js
ljmp
dec
cmp
in
fsubl
or
push
sbb
cmp
and
xorl
sbb
adc
push
xor
push
adc
ret
inc
mov
xchg
sbb
jb
aam
fcmovu
push
or
cmpsl
enter
or
aad
push
jbe
dec
aas
shrb
pop
insb
cmp
jns
xor
cmc
xchg
inc
mov
loope
or
ss
dec
ret
dec
movsl
lret
int3
adc
xchg
pop
sbb
dec
jge
inc
cltd
in
test
sbb
adc
cmc
jne
aas
sub
sti
mov
rorb
stos
inc
fwait
icebp
jmp
fs
mov
push
or
push
iret
jl
pop
repnz
dec
cmc
sbb
ss
cld
aad
cmp
xchg
xchg
stc
movl
pop
xor
jb
in
inc
idivb
adc
xor
ret
or
mov
clc
jnp
insb
andb
mov
lods
add
or
push
cmc
cmc
jmp
std
call
cs
inc
out
xor
cmc
inc
ret
dec
mov
push
ret
fs
sbb
ret
xor
repz
xor
push
sbb
cmp
jbe
data16
add
and
imul
std
push
loopne
cmp
mov
jns
movsb
cmp
add
stos
xor
jnp
insl
jnp
jle
adc
or
shr
xor
push
sbb
jbe,pn
into
rorl
aas
stos
inc
loop
out
popa
sbb
dec
out
ss
pushf
adc
dec
sub
cmp
xorb
mov
xchg
scas
nop
daa
inc
test
test
rol
sbb
jb
in
xchg
mov
pop
push
imul
jmp
or
or
pcmpeqb
popa
xchg
xlat
push
mov
inc
pop
mov
nop
jne
inc
sarl
mov
test
mov
or
movsb
cmc
sub
xchg
inc
lock
aas
arpl
pop
pop
movsb
mov
cmpb
adc
nop
adc
stos
pop
imulb
adc
fdivrs
sbb
popf
hlt
jnp
cmp
sbb
daa
or
cmp
mov
push
inc
fiaddl
outsl
fbld
fidivl
cs
test
insb
sbb
mov
fcmovu
push
mov
inc
and
rolb
ja
adc
mov
addr16
jno
filds
mov
jmp
clc
out
dec
insl
lea
pop
add
jbe
movsl
loopne
int3
push
pop
or
push
jle
sub
mov
call
aas
xchg
leave
pop
out
pop
sbb
push
mov
dec
aam
jns
ret
inc
dec
jg
fdivs
or
add
inc
sbb
test
mov
inc
iret
rep
or
mov
stos
imulb
jno
sub
in
mov
clc
jbe
xor
aam
and
frstor
negb
mov
ret
outsb
sti
out
je
int3
popf
pop
mov
xchg
dec
fidivl
xchg
rclb
xchg
mov
mov
in
xchg
outsl
orb
insl
hlt
jae
adc
pcmpgtb
cltd
aam
in
cmpsb
or
scas
xchg
int3
jecxz
fcoml
add
add
test
mov
inc
ljmp
dec
add
in
lret
adc
dec
xor
and
xchg
outsl
mov
jb
test
rcr
pusha
aam
xchg
leave
pop
xchg
enter
pop
cmp
xor
and
jno
inc
cli
cmovb
inc
fistl
adc
sbb
xorl
mov
call
dec
and
push
incl
mov
cmp
jle
call
mov
mov
dec
jge
inc
pop
js
bound
inc
add
js
stos
fsincos
jns
and
in
ljmp
stos
dec
or
add
jb
cmp
hlt
aam
loop
push
rolb
push
loopne
push
nop
push
inc
or
js
cmpsl
dec
in
sbb
fildll
in
movsl
cmp
cmp
mov
xchg
dec
mov
adc
test
inc
mov
pop
mov
mov
sub
mov
ret
or
adc
aas
nop
movsb
fstps
dec
test
imul
pop
cli
insl
dec
add
xor
push
xchg
std
out
out
pop
in
push
nop
cmpsl
adc
mov
in
loopne
cmc
loopne
xchg
scas
pop
add
addl
jle
or
popa
stc
push
movsl
fistpl
sbb
subl
inc
sub
add
mov
or
xchg
mov
mov
cwtl
insl
jecxz
stos
shll
inc
pop
xor
sbb
ret
mov
push
inc
xor
stos
push
stc
add
jmp
aam
hlt
inc
cmpsb
fsubl
ja
mov
push
fimull
xchg
shl
icebp
addl
jno
inc
mov
inc
pop
jle
pusha
mov
addr16
sarb
or
push
sbb
out
push
sbb
adcb
xor
push
aad
add
lods
rcrl
or
arpl
xchg
sbb
int
dec
fnstcw
sbb
add
out
sbb
sbb
les
mov
mov
jo
mov
dec
add
mov
adc
mov
ds
fistpl
mov
leave
fiaddl
je
xor
repnz
jo
inc
push
xchg
jno
inc
jl
imul
js
cmp
dec
push
mov
push
iret
popf
pop
xorl
mov
lods
arpl
adc
das
cwtl
pop
out
push
inc
pop
adc
call
pop
add
and
fwait
in
add
pop
cld
movsl
imul
mov
cwtl
mov
mov
dec
in
mov
nop
adc
xor
sahf
rorl
adc
mov
imulb
jl
push
push
es
clc
fimull
cmp
arpl
arpl
mov
inc
cmpsl
jae
jae
mov
mov
xor
rorb
sti
orl
or
xor
into
and
and
mov
push
cwtl
roll
push
mov
mov
jbe
das
cmp
sub
xchg
xor
test
frstor
ja
rolb
nop
mov
test
push
imul
or
jmp
lahf
outsl
clc
rcr
int3
rclb
and
es
mov
sti
shl
jnp
fs
mov
inc
cltd
into
jnp
xor
imul
or
mov
in
cmp
sub
aaa
jae
aad
fimuls
pushf
cld
rcrb
mov
push
cmpsb
std
mov
cld
idivl
add
sub
scas
leave
stos
out
leave
adc
repz
fs
xor
inc
loope
lock
sbb
mov
add
mulb
into
idivl
xchg
dec
sbb
cmp
adc
call
imul
xchg
ret
daa
fiadds
repnz
dec
cmp
mov
jbe
cmp
add
lds
das
out
sbb
stos
jle
rclb
push
cli
pop
mov
lock
outsb
sbb
jle
mov
mov
faddp
jo
ljmp
lahf
inc
adc
pop
std
fcmovbe
pop
mov
movsl
adc
pop
mov
daa
mov
out
dec
mov
cmpsb
out
adc
dec
into
adc
cltd
push
bound
lret
xchg
shrb
inc
imul
adc
xchg
jg
loop
sub
aad
add
dec
out
ficomps
mov
sub
int3
adc
mov
mov
mov
pushf
scas
lcall
or
add
xlat
inc
xchg
in
cwtl
out
jo
cs
enter
jmp
jle
out
pop
movsb
xchg
sub
xor
movsb
or
loop
aad
fcoml
add
fdiv
mov
jp
inc
sbb
imul
pusha
les
leave
sbb
xchg
mov
and
outsb
jne
fisttpll
mov
or
loopne
mov
nop
aaa
ja
mov
clc
cmp
and
outsl
out
test
daa
or
mov
and
imul
sahf
bound
push
xchg
cmc
test
mov
insl
ret
ljmp
jmp
clc
cli
add
lret
pop
xlat
rol
adc
adc
mov
add
cmp
dec
ror
sub
and
sub
mov
mov
fcmovnb
mov
fs
sbb
ja
imul
mov
test
xchg
push
out
ss
mov
push
and
pop
insl
ret
xor
add
out
xor
lods
jp
nop
fistps
xor
hlt
and
aam
jno
push
movsb
negl
imul
fwait
mov
sbb
lret
daa
mov
or
pusha
into
xchg
outsl
mov
mov
imul
push
adc
lods
test
imul
int
fidivl
inc
dec
cli
and
dec
cmpsb
repz
lock
sub
jns
cld
sub
mov
cmp
xorl
xor
dec
inc
push
xor
data16
mov
inc
int3
mov
loop
stos
enter
in
addr16
incl
dec
int3
mov
inc
mov
ficoml
xor
push
into
aad
mov
mov
mov
push
adc
mov
repnz
xor
ret
mov
cltd
add
ljmp
cltd
jno
jge
jmp
icebp
aad
add
add
xchg
sbb
inc
stos
dec
mov
enter
mov
adc
stos
sbbl
popa
nop
jg
pop
bound
jecxz
inc
iret
les
or
loop
mov
stc
jmp
jecxz
lods
test
imul
sarb
and
mov
add
mov
aaa
xchg
push
je
cs
and
enter
jg
sbb
mov
push
cs
xor
out
arpl
std
std
push
enter
add
sahf
ret
add
dec
jle
jo
fimull
add
xchg
in
push
insb
xor
mov
pop
sar
test
std
inc
push
sti
test
shlb
adc
pop
in
dec
aad
arpl
xor
sub
cmp
adc
faddl
out
jno
hlt
mov
push
and
lret
rclb
and
scas
push
push
or
jg
xor
pop
mov
sbb
outsb
js
inc
in
in
push
jp
inc
aaa
push
aam
push
xchg
sbb
pop
ljmp
ret
out
sbb
pop
repz
rcrb
outsb
jmp
mov
mov
push
enter
leave
push
loop
scas
mov
xchg
push
test
outsl
mov
mov
jmp
mov
add
jnp
pop
or
lock
cmp
das
test
xlat
jmp
adc
pop
fldenv
addr16
std
pop
cwtl
push
rolb
mov
scas
out
in
mov
es
fisttps
aas
repnz
sbb
jg
and
jnp
and
or
jo
push
fsubr
out
mov
pop
nop
insb
ljmp
push
add
test
movsb
xor
pop
xor
push
pop
and
add
out
lds
pop
mov
notl
sbb
in
mov
aaa
pop
lods
push
jmp
and
jp
mov
imul
adc
mov
adc
mov
nop
and
and
jge
push
in
sub
push
jno
lds
xor
inc
mov
add
cmp
in
xor
jbe
or
or
mov
ljmp
xlat
mov
pop
cmp
and
inc
mov
dec
pop
sbb
pushf
xchg
ret
jnp
fsubs
dec
pusha
in
cmp
or
cmc
rcrl
sub
imulb
and
push
roll
enter
loop
in
int
outsl
inc
jbe
cmp
movsl
mov
test
sbb
test
divb
sbb
xlat
xchg
pusha
divl
cs
lock
mov
xchg
inc
lods
mov
rcr
and
pop
jns
outsl
add
fldcw
negl
daa
pop
enter
div
dec
xor
loopne
sti
shl
xchg
scas
imul
imul
pushw
fildll
xor
lret
addr16
imul
or
gs
bound
cli
jl
gs
loope
jae
and
inc
movsl
add
push
xor
adc
sbb
sbb
mov
sbb
xchg
pusha
iret
in
lds
iret
nop
jo
mov
daa
mov
sahf
lret
cwtl
inc
das
mov
mov
cmp
out
inc
stos
fwait
jl
ja
aad
pop
jl
adc
jge
add
adc
pcmpgtb
lret
sbb
daa
stc
pop
mov
mov
shrb
imul
scas
les
push
outsl
jbe
and
mov
sub
add
lock
push
ret
fwait
sbb
inc
sbbl
push
and
int3
push
lea
out
aam
adc
js
inc
insl
mov
push
adcl
ucomiss
jne
xor
test
sub
jbe
stc
mov
xor
pop
inc
subl
repz
ds
dec
or
xchg
push
push
mov
xchg
scas
mov
stc
sub
or
cld
jbe
cmp
jo
mov
mov
sarb
dec
aas
rorl
pop
xor
jg
imul
mov
jecxz
in
xor
mov
dec
stos
cmp
sbb
mov
stos
mov
pop
out
incl
jbe
xor
outsl
mov
scas
jnp
dec
mov
fldcw
movsb
es
stos
push
xor
mov
bound
xchg
cs
lret
xor
pop
and
xor
icebp
cmp
das
lds
pcmpgtd
xchg
xchg
sbb
in
mov
jp
fistpl
sti
jg
sbb
or
cmp
mov
in
jecxz
jne
jge
fisttps
loopne
cmc
movsb
sub
and
mov
and
jmp
lahf
testl
in
stc
cmp
mov
pop
push
lods
mov
xor
jmp
icebp
cltd
jg
ljmp
dec
sub
push
pop
xchg
out
stc
sbb
loopne
inc
cmp
xor
or
add
fmulp
or
or
mov
daa
jecxz
push
nop
imul
cmp
lods
dec
mov
jle
pop
lock
xor
mov
es
in
ret
rdpmc
stos
push
pop
dec
jmp
mov
and
cmc
addl
and
loopne
das
xor
sub
mov
add
sbb
jns
in
or
repz
xor
daa
push
dec
sub
add
and
inc
sbb
cld
push
scas
shlb
add
sarb
mov
xchg
xchg
cmp
cmpsb
imul
pop
in
cltd
sub
ret
xchg
repz
xor
jne
lea
insb
aad
popl
and
mov
sbbb
repnz
subb
mov
sbb
adc
sbb
mov
arpl
pusha
or
push
pop
or
mov
out
inc
rol
pop
xlat
pop
int3
and
mov
jno
jbe
pop
push
lret
fs
lods
arpl
pop
add
iret
in
lock
daa
mov
push
loop
jb
pop
bound
lret
imul
and
rclb
push
fidivrs
clc
in
test
add
jmp
push
insl
pop
or
lahf
inc
mov
mov
lods
das
xor
xchg
pop
cmpsl
movsl
movsl
bound
mov
mov
int
xchg
adc
pop
mov
iret
adc
rcrl
jl
mov
xchg
push
daa
jmp
dec
mov
out
mov
aas
pop
mov
mov
ss
sub
sub
lock
ss
in
or
sti
fwait
xchg
lcall
mov
jb
addr16
jns
iret
cli
xor
pop
add
into
imul
rolb
mov
xchg
lock
mov
enter
and
in
sub
js
subb
mov
cltd
mov
sbb
xchg
or
jge
shlb
leave
sbb
imul
jle
bound
insl
mov
js
out
fucomp
lock
in
mov
mov
cmp
lock
dec
rorl
add
test
aas
mov
loop
adc
scas
inc
cltd
js
test
outsl
sub
and
xor
push
jbe
sub
push
test
or
in
lret
test
add
nop
or
jnp
xor
cmpsb
insb
sub
repnz
jecxz
xchg
mov
cmp
ljmp
mov
mov
cmp
mov
orl
xchg
test
mov
bound
lock
mov
subl
cmp
mov
es
sub
mov
subb
ret
popf
ret
adc
imul
ret
in
mov
mov
adc
dec
xchg
jne
push
mov
cmpsl
jno
sbb
add
pop
loop
jle
jae
pop
dec
fisubrl
shr
add
hlt
adc
das
jle
sbb
sbb
ret
and
jbe
dec
sub
insb
pop
dec
or
sbb
cmp
cmp
push
push
fldl2t
xchg
push
jae
adc
scas
pushf
rcll
pop
push
adc
dec
sub
loop
ret
inc
jne
out
ficoml
push
into
int
jmp
mull
xchg
sub
ja
push
xor
xor
jno
push
cmpsb
push
sub
stos
pop
sti
inc
ror
mov
sbb
sbb
dec
add
push
cmp
repnz
cmc
inc
inc
xchg
xchg
test
jge,pn
xchg
push
mov
movsl
pop
mov
repz
sub
test
inc
imul
pop
mov
popf
stos
cld
aaa
jno
test
lds
aaa
testl
xchg
movsb
inc
inc
mov
adc
adc
jmp
or
int
pop
out
sbb
imul
popf
adc
aas
repz
sbb
insl
aam
push
inc
xchg
pop
inc
jl
add
cmpsl
mov
mov
hlt
inc
insb
mov
sbb
or
shll
xchg
mov
sub
and
xchg
adc
add
cmp
mov
and
bound
test
mov
jecxz
ss
lret
inc
cmc
stos
scas
xchg
nop
fadds
xor
xchg
mov
test
sub
out
hlt
dec
mov
dec
and
aad
les
loop
mov
fiadds
xchg
outsb
push
or
add
jbe
lea
repz
loop
arpl
fldcw
add
jecxz
push
cmp
add
popa
lahf
lods
lahf
xor
cli
stos
push
push
and
mov
jno
inc
dec
inc
sub
stc
cmc
bound
fimuls
jae
dec
ret
idiv
addr16
aaa
pop
cmpsb
les
out
pop
repnz
movsl
flds
in
xor
bound
lods
cmp
cmp
xor
mov
repnz
mov
push
xor
mov
dec
dec
adc
sbbl
popa
fimuls
sbb
xchg
dec
mov
out
xor
dec
hlt
xchg
mov
pop
push
insb
add
shlb
dec
sbb
xchg
stos
adc
mov
lret
pop
arpl
dec
jmp
inc
cmp
mov
xchg
mov
test
nop
dec
and
sbb
stos
lret
or
aad
or
dec
sub
jbe
out
in
jl
pop
xchg
sbb
xorl
js
notl
or
jge
stos
pop
pop
xchg
push
push
cmp
add
out
cmp
push
and
xor
in
fwait
daa
inc
mov
sbb
xor
cli
or
mov
jl
mov
in
shl
or
ret
fistl
aaa
push
test
repz
movsb
test
ret
out
xchg
lahf
mov
je
add
xor
cmpsl
leave
cli
and
mov
sub
push
lret
int
mov
push
test
lahf
inc
ss
test
cli
sub
mov
adc
pop
fs
xor
js
imull
or
push
icebp
fwait
add
mov
jmp
jb
call
cli
cmp
fisubrs
outsb
push
and
fbld
and
push
mov
mov
mov
mov
adc
enter
xchg
jle
daa
xchg
mov
adc
repz
cmp
pop
leave
mov
push
mov
sti
or
sbb
loopne
pop
popw
mov
stos
in
test
adc
pop
inc
push
push
xchg
rcll
sub
xchg
cmp
pop
jg
loopne
sbbb
sub
lahf
xchg
fildl
stos
mov
aam
add
mov
stc
mov
fistpl
mov
mov
in
mov
enter
pop
cmp
test
out
inc
scas
or
lods
sub
cmp
je
lahf
cs
ja
fdivl
addr16
jmp
rcl
shlb
ja
fcoms
shll
cmp
in
shl
cltd
or
adcl
jle
scas
sbb
add
enter
sub
push
push
rcll
push
add
jo
or
imul
dec
or
rolb
add
das
push
in
daa
xlat
stos
mov
andb
lods
adc
cmp
mov
dec
in
mov
xor
push
jmp
xchg
xchg
enter
dec
repz
data16
mov
adc
test
fnop
test
jnp
push
and
cltd
outsb
xor
data16
xor
cmpsl
fisttpll
inc
in
fstps
xchg
push
xor
mov
push
mov
imul
mov
sbb
push
dec
adc
cmp
cwtl
jmp
arpl
clc
mov
mov
xlat
lcall
adc
cmpsb
in
fcoms
shlb
sbb
out
pop
adc
xor
sbb
sbb
adc
jno
push
nop
lds
aaa
xor
inc
mov
sub
dec
fs
out
testb
cmc
or
inc
xor
mov
dec
stc
pop
sbb
fists
lea
mov
enter
int3
das
pop
inc
ja
dec
rolb
sub
dec
movswl
sub
dec
inc
sub
xor
mov
data16
shll
mov
xchg
mov
adc
std
sbbl
loop
aad
cmp
or
in
pop
add
scas
cmpsb
pusha
and
or
xlat
jbe
adc
xor
in
mov
ds
in
out
nop
repnz
mov
cmp
sbb
and
mov
repz
push
pushf
add
in
pushf
sbb
mov
push
push
inc
hlt
add
fsubrp
loopne
movsl
adc
push
xchg
clc
mov
sbb
rclb
push
mov
mov
jns
or
inc
cmp
mov
mov
jl
dec
daa
and
test
mov
pop
call
jae
adc
pop
xchg
adc
cld
js
rol
and
or
and
shld
add
lcall
xor
stos
adcl
in
xchg
xchg
sub
sub
push
jg
inc
inc
jmp
jmp
icebp
aam
pop
dec
inc
sub
ss
lret
fcoms
popa
insl
and
das
mov
movsl
jae
xorb
shll
and
aam
adc
int3
jnp
lret
call
cmp
jae
in
adc
or
mov
inc
cld
adc
jp
dec
mov
jne
jecxz
mov
jp
inc
loope
xor
es
and
mov
mov
pop
out
and
sub
mov
xor
fnstsw
outsb
nop
add
aam
add
xor
aad
mov
xchg
mov
adc
insl
fldt
xchg
shrl
rcrl
sbb
dec
mov
stos
lahf
sub
insl
movsb
and
mov
pusha
je
add
push
mov
xor
cmp
xchg
stc
mov
push
pop
cmpsl
mov
mov
or
stos
shll
lea
test
inc
xchg
je
inc
orps
mov
inc
dec
decl
aas
rcl
jbe
testl
out
adc
mov
testb
mov
out
mov
mov
push
leave
pop
shl
movsb
xor
lods
mov
popf
subb
mov
mov
movsl
arpl
and
lret
adc
inc
inc
add
fs
imul
mov
or
and
mov
cmc
adc
pop
cmpsb
dec
into
mov
shr
xor
xchg
inc
mov
cmpl
imul
loop
std
pop
test
ficomps
ds
mov
lret
sub
dec
xchg
mov
int
out
jbe
xor
fcmovb
leave
insl
mov
loop
fidivrl
movsw
pop
mov
test
dec
lret
loop
imul
pushf
sbb
xchg
test
xor
stc
xor
inc
cmpsb
pop
gs
mov
aad
push
outsb
aaa
xchg
and
add
sub
inc
jno
sbb
in
nop
mov
pop
stos
imul
mov
in
das
push
adc
dec
fsubrl
add
jbe
mov
loop
sarb
outsb
pop
stos
insb
mov
outsb
loop
pop
incb
jg
enter
pop
pop
and
pop
mov
add
popa
ss
dec
scas
stos
int3
add
mov
mov
outsb
fnsave
adc
add
cmpl
jmp
jns
dec
or
mov
push
sbb
mov
inc
scas
and
jmp
gs
mov
mov
in
test
jge
outsb
sahf
sbb
popa
fldl
dec
mov
adc
adc
fldenv
xor
lods
arpl
mov
mov
mov
ficoms
push
adc
lods
lahf
addr16
not
int3
cld
aaa
leave
in
xlat
test
rcll
push
pshufw
stos
xchg
movsl
mov
xchg
mov
mov
push
xrstors
gs
add
leave
adc
mov
movsb
std
enter
xchg
xor
lods
movsb
js
shl
icebp
mov
mov
pop
cmc
stos
test
push
mulb
pop
icebp
popf
clc
inc
lcall
aam
dec
adc
cltd
fldl
loopne
mov
add
lret
es
negl
loope
xchg
xchg
stc
cmpsb
and
imul
xchg
mov
sbb
xor
inc
or
xchg
or
or
insb
sbb
ds
mov
addr16
mov
xchg
pop
mov
cmpsl
inc
jbe
nop
cmp
push
mov
mov
jge
movl
mov
push
out
mov
sub
aaa
outsl
mov
jno
pop
imul
sti
push
int3
jne
stc
cmp
test
pop
inc
adc
or
outsl
repz
movsl
ja
mov
test
dec
dec
jae
testb
cld
mov
std
mov
daa
mov
fwait
pop
and
cmp
aad
mov
add
cmp
jbe
repnz
xchg
fcoms
mov
pop
xor
mov
cli
stc
xor
xchg
ja
movsb
das
xor
or
sub
dec
js
sahf
loope
sti
pop
push
push
cmc
mov
and
jne
divl
add
out
sub
inc
or
pushf
inc
cmc
xchg
repnz
pop
jo
div
lods
mov
sub
mov
and
or
test
je
ljmp
stos
mov
int
pop
pushf
data16
sbb
sub
pop
cmp
lcall
mov
pop
ss
sbb
mov
push
lods
add
mov
aad
test
pop
mov
loopne
and
jo
ret
in
adc
ret
sti
mov
xor
cmp
and
or
shll
popf
mov
add
sub
and
insl
mov
mov
gs
orl
pop
xor
jp
mov
fidivrl
and
or
loopne
insb
shl
into
mov
shll
mov
iret
pop
mov
es
scas
cmp
seto
cmp
xorl
outsb
enter
sub
pusha
sahf
mov
add
test
aaa
bound
mov
xchg
cmp
push
lret
dec
sbb
mov
dec
outsl
inc
push
mov
dec
dec
ret
movsl
sar
fisttps
mov
call
scas
loope
js
dec
aas
addr16
xchg
inc
roll
mov
dec
movsl
and
mov
cmp
sbb
cs
insb
dec
fildl
cmp
sub
dec
ja
mov
inc
mov
lcall
mov
iret
stc
push
ss
jp
mov
mov
int3
xchg
jno
pop
mov
stos
into
leave
dec
and
pop
and
xchg
add
aad
out
cld
inc
pop
scas
filds
push
insb
loop
loopne
add
orl
cmp
or
lods
dec
clc
stos
pop
jmp
push
fdivrs
mov
test
mov
stos
sbb
scas
fbstp
cmc
imul
leave
or
aam
sbb
or
xor
jbe
adc
and
adc
jp
stos
shll
jg
push
mov
or
in
test
jb
loope
jg
push
outsl
and
mov
mov
int3
cmp
out
repz
xorb
pop
cmp
fimuls
aaa
mov
xchg
dec
xchg
lahf
into
out
je
into
cmp
cmp
and
daa
or
xlat
mov
pusha
addb
lret
xchg
jne
push
out
leave
addr16
pop
sbb
or
gs
jno
pop
mov
pop
stos
sub
out
push
push
dec
and
push
imul
push
inc
adc
sub
adc
cmp
lret
push
mov
and
je
inc
mov
out
push
lret
cld
add
es
dec
repz
inc
inc
jecxz
dec
adc
add
mov
inc
and
push
out
add
popa
fnstsw
daa
in
inc
bound
mov
repnz
in
sti
out
pop
sbb
mov
fcmove
sub
add
clc
dec
jle
push
push
xchg
or
xlat
das
aas
icebp
js
lahf
icebp
int
xchg
das
mov
dec
mov
mov
inc
mov
inc
push
cld
ljmp
loopne
shrl
shrl
xor
sbb
sbb
sub
mov
mov
leave
int
pop
stc
adc
inc
inc
sysenter
inc
add
mov
ficoms
inc
loop
popa
loopne
push
js
les
test
popf
cmp
push
lcall
popf
lret
insl
cmpsl
imull
mov
mov
pop
jne
stos
in
push
xchg
or
xchg
cmp
add
sahf
in
inc
fwait
add
cmp
sub
cs
cmp
mov
or
add
ds
es
enter
jns
mov
xchg
lcall
push
sbbb
jp
sub
mov
std
mov
jae
mov
dec
inc
in
dec
inc
pop
clc
inc
pop
cmp
mov
data16
stos
pop
xor
popa
jbe
dec
cmp
call
add
loop
push
sbb
stos
pop
xchg
pop
xchg
shll
and
imul
mov
sbb
xchg
push
inc
xchg
mov
xor
lock
pop
inc
inc
mov
xor
cmp
jnp
insl
add
pop
pushf
mov
shll
push
nop
and
ja
notl
pop
pop
and
push
push
sub
cmp
cmpsb
push
adc
sbb
cmc
sub
xchg
call
fstps
aam
jp
push
aas
idivl
inc
jecxz
aam
adc
mov
fsub
add
pop
cmp
test
cmp
pop
std
mov
cwtl
and
fisttpl
popa
adc
hlt
jl
jecxz
sub
cmp
push
mov
pop
or
pusha
paddsw
xchg
sbb
sbb
jbe
push
inc
push
xor
lock
push
mov
in
rcrb
test
movsb
andb
leave
movl
add
lock
scas
pusha
cmp
inc
inc
loop
call
pop
mov
stos
out
mov
pop
jmp
sub
ss
or
lcall
sbb
movl
cmp
sbb
icebp
cmp
test
mov
xchg
scas
jmp
movsb
movb
sbb
int
ss
cmc
mov
in
sub
cmp
pop
adc
sbb
lcall
add
jae
dec
iret
xor
popf
sbb
jns
dec
repnz
dec
or
add
pop
add
add
out
mov
leave
mov
push
test
sub
add
mov
cmp
adc
dec
sbb
sub
mov
sarl
scas
sti
push
push
or
jae
adc
sub
pop
fadd
lret
addr16
mov
fldl
lret
hlt
mov
lea
dec
xor
mov
mov
pop
fs
or
into
mov
dec
mov
jg
in
lods
into
cltd
cmp
add
mov
roll
and
call
inc
divl
inc
and
sbb
push
push
out
in
sahf
insb
inc
push
mul
packsswb
paddd
cld
stos
rol
fisubrl
mov
sub
mov
sub
mov
and
dec
shlb
jno
jg
daa
sbb
xor
xchg
sub
sbb
jbe
out
in
sub
and
mov
mov
mov
or
jno
or
ds
inc
pop
mov
arpl
popf
push
lock
sub
and
cltd
pop
shlb
adcb
sbb
inc
mov
aas
mov
out
xorl
pop
std
test
jecxz
cli
adc
cltd
outsb
jmp
stos
jp
out
out
mov
addr16
sahf
dec
leave
lods
sbb
bound
lahf
shl
negb
orb
cmp
cmp
or
or
arpl
insl
aaa
fnstenv
cmp
xor
jg
xchg
mov
aaa
sub
mov
repz
test
loop
test
push
cmp
mov
lret
fwait
xor
push
jne
popf
mov
ja
mov
test
sbb
enter
lcall
xor
fsubs
xor
sbb
fimull
dec
xor
add
push
or
mov
or
aas
gs
dec
and
popf
pop
mov
inc
imul
divb
xchg
xchg
adc
imul
sub
jle
into
cmp
mull
lret
mov
jne
sbb
mov
xor
cmp
bound
dec
mov
xchg
nop
sub
fucomp
or
dec
mov
inc
scas
dec
pop
sbb
ret
or
movsl
jge
pop
or
xor
dec
mov
cmp
add
xor
push
ja
sahf
fists
push
or
jns
pop
out
mov
dec
mov
push
mov
divb
dec
jmp
clc
inc
xchg
je
fld
mov
pop
aas
cmp
lock
call
inc
mov
mov
je
mull
imulb
jmp
dec
lock
shrl
jae
jns
push
ljmp
fnstenv
mov
dec
inc
xchg
cmp
fisttps
pop
rorb
in
outsl
jl
mov
mov
adc
fists
popa
inc
lahf
lret
jb
sbb
pusha
sar
jne
fistps
sub
test
xor
xor
jbe
or
clc
sub
rcll
pop
push
adc
adc
sub
ret
dec
data16
enter
sbb
xlat
mov
je
cli
sbb
mov
mov
sbb
repnz
mov
pop
test
mov
push
int
loopne
adcl
mov
jl
xchg
jle
xor
jg
mov
adc
mov
jl
das
lods
clc
ret
and
test
sub
xchg
cmpl
mov
std
mov
adc
dec
rclb
push
scas
xor
fwait
in
mov
pop
cmp
sbb
iret
fwait
cltd
and
xor
sub
jne
push
jbe
add
jg
movl
into
inc
les
adc
inc
inc
loopne
into
repnz
mov
adc
data16
jmp
ficoms
sbb
movb
movsl
dec
into
mov
je
pushf
sbb
int
cmp
xchg
loopne
cmp
int
mov
sahf
sub
push
je
jne
lods
adc
and
cmpsl
sbb
fiadds
xlat
sbb
scas
mov
mov
cwtl
shlb
dec
pop
sub
lahf
or
xchg
scas
add
cmp
jae
bound
loopne
jp
stc
mov
inc
mov
out
mov
xchg
jae
cmp
test
ds
xchg
leave
inc
cmp
test
pop
clc
push
xchg
mov
jnp
insb
scas
inc
nop
ret
xor
repnz
outsl
adc
sub
sbb
ret
xor
jnp
out
imul
pop
mov
push
mov
mov
imul
push
lahf
pop
dec
pop
jg
mov
dec
pop
repz
aas
push
push
dec
lret
cli
sbb
fldt
out
subl
and
push
mov
test
and
xchg
xor
sti
enter
mov
sub
arpl
fsubrs
arpl
dec
inc
rolb
imul
cmp
fwait
addb
ss
arpl
pop
cmp
cmc
mov
jle
push
ret
lods
jg
mov
mov
imul
jmp
loopne
imul
mov
push
mov
push
push
pop
shl
outsl
stc
xor
cmp
cmpsl
lahf
lods
enter
sti
out
or
inc
mov
movsb
popf
mov
cld
outsl
adc
sub
pop
sub
cmp
push
aad
gs
sub
mov
add
mov
cmp
inc
mov
and
adc
ja
inc
pop
pop
cs
stos
adc
mov
nop
jl
rorl
mov
pop
push
loop
or
test
push
mov
cltd
xlat
xor
or
mov
adc
xor
jecxz
pop
fcmovu
mov
sub
test
cmp
lret
push
xor
repnz
aas
dec
mov
mov
movsl
mov
movsb
loope
pop
sti
aad
push
data16
rorl
mov
ret
mov
dec
mov
sbb
sbb
dec
mov
call
movsl
sbb
pusha
repnz
bound
dec
sbb
mov
filds
les
xchg
js
inc
mov
jmp
mov
push
xchg
cltd
mov
push
es
rorb
mov
scas
pop
sbb
nop
mov
push
dec
in
daa
orb
into
shlb
arpl
scas
adc
mov
sahf
xchg
adc
dec
pop
adc
sub
imul
aad
push
push
adc
add
aam
mov
cwtl
xchg
xlat
sbb
add
push
jecxz
sub
dec
xor
les
add
mov
testb
jl
outsl
mov
test
stc
add
cwtl
dec
pop
jge
shrb
call
adc
nop
rclb
fimull
arpl
sbb
shll
xor
daa
pop
push
fidivrs
push
ja
pop
call
jnp
sub
jp
push
jmp
mov
sarl
adc
mov
push
jae
pop
mov
xlat
sbb
pushf
in
repnz
mov
in
daa
mov
loope
clc
enter
sub
mov
xchg
mov
pop
sub
push
clc
pop
lahf
loopne
or
fs
ljmp
xchg
xchg
fistps
jno
mov
push
adc
xlat
pop
push
pop
push
insb
add
pop
shll
dec
test
clc
inc
subl
sbb
rorb
add
dec
push
shr
adc
div
dec
cmc
insb
addr16
sahf
scas
repz
cmp
jo
stc
shlb
xor
repnz
xchg
pop
and
xchg
mov
ret
pusha
lahf
sahf
add
fisubrl
out
xor
pop
gs
adc
fwait
push
leave
mov
das
add
xor
loope
cmp
jg
push
rcl
dec
xchg
addr16
imul
stos
lods
adc
xchg
xchg
call
call
leave
cmc
add
pop
int
call
lods
mov
test
or
data16
imulb
mov
dec
cmp
test
sub
cld
in
inc
ja
lea
ret
cld
jmp
pop
lret
inc
loop
mov
sbb
mov
jmp
std
fwait
jp
push
fdivrs
jae
mov
push
mov
pop
gs
jns
push
push
mov
cmp
mov
xor
loop
mov
add
sbb
imul
inc
stc
je
cmp
ds
lods
fwait
vmwrite
mov
or
cmp
mov
or
rcl
push
mov
mov
aad
cld
ljmp
add
fcompp
sub
andl
stc
push
test
or
fstpt
cld
inc
sub
es
push
lret
adc
jecxz
stc
repz
pop
jo
mov
dec
mov
sbb
mov
or
mov
sbb
test
push
fwait
mov
adc
adc
push
inc
notb
or
icebp
std
insb
roll
repnz
jp
scas
lret
int
icebp
or
dec
test
jmp
xchg
xchg
out
fisttpl
sbb
push
jmp
rol
push
jns
jp
scas
sub
mov
add
and
ror
ret
shlb
inc
pop
xchg
cmc
je
jnp
gs
or
jecxz
adc
icebp
cmpsl
push
push
sub
ljmp
sbb
mov
jmp
mov
add
imul
std
ljmp
mov
xor
pop
out
fbld
arpl
mov
popa
cmpsb
or
mov
gs
lock
or
mov
je
and
fs
mov
lods
mov
add
add
jp
jno
mov
in
xchg
mov
je
mov
or
lret
dec
xchg
adc
xchg
xchg
outsl
insl
adc
aam
and
jbe
push
jmp
nop
dec
adc
and
fcmovnu
add
mov
jnp
push
cwtl
mov
dec
fnsave
jg
jnp
loop
inc
sbb
lea
dec
out
or
in
insl
lds
fistpl
xor
inc
mov
inc
out
push
jnp
subl
pop
pop
jae
addl
sbb
es
stc
jns
cmp
aam
adcb
pop
fdivrs
xchg
mov
add
fiaddl
in
push
mov
insl
cmp
inc
add
mov
jp
jg
lds
add
pop
and
add
fistl
jl
rclb
and
pop
pop
rcrb
xchg
bound
sbb
testl
in
xchg
sub
je
shr
push
xchg
sbb
jmp
add
js
leave
pop
loopne
pop
sahf
jae
push
adc
ljmp
sub
dec
insl
andl
xchg
int
adc
shlb
or
test
mov
jp
inc
cmp
js
popa
pop
xor
xchg
push
push
test
scas
subb
aam
xchg
outsb
pop
lret
fwait
shrb
call
adcl
add
fld
push
stc
sbb
mov
push
xlat
iret
and
les
adc
adc
push
movsb
aad
mov
or
repz
clc
add
mov
scas
xchg
test
xor
dec
fldenv
popa
mov
cwtl
std
mov
jg
call
mov
jnp
rcll
push
test
out
mov
xchg
movsb
stos
sbb
push
rclb
xchg
inc
fdivp
xor
mov
test
bound
das
push
dec
shld
dec
push
enter
xchg
push
push
mov
push
pop
cltd
cmp
add
cli
mov
cld
adc
mov
push
aaa
das
iret
xchg
imul
add
daa
mov
mov
xor
inc
push
dec
push
sti
mov
sbb
std
call
mov
out
xchg
data16
xchg
mov
lods
pop
mov
lret
repz
popf
leave
or
mov
outsl
add
lea
out
icebp
xor
das
loop
mov
insb
cmp
add
adc
cmp
stc
jno
jl
mov
out
pop
mulb
mov
inc
push
test
and
sub
das
push
aaa
push
leave
adc
and
shr
lods
cmpsb
push
ja
mov
stc
movsl
sbb
or
iret
hlt
add
addr16
sbb
mov
and
push
push
loope
dec
xor
mov
add
jl
xchg
lahf
pop
pop
push
aaa
lcall
cmpsl
mov
adc
mov
das
mov
insb
mov
add
jl
movsl
add
minps
out
inc
mov
call
mov
leave
fnstsw
jno
imul
stos
negb
jne
jns
leave
push
ffreep
cmp
pop
arpl
jae
cld
pop
pusha
adcb
in
jg
mov
int
pop
xchg
js
mov
and
push
sub
icebp
mov
push
pushf
and
shlb
sub
mov
outsl
insl
mov
add
mov
add
inc
cmp
xchg
add
pop
scas
ljmp
test
sbb
das
or
and
pop
xchg
das
lgs
sti
lahf
push
sbb
cwtl
lods
sbb
ljmp
jle
insb
cwtl
adc
ficoms
leave
loopne
inc
lock
push
sub
or
sub
mov
pusha
rol
jecxz
int
std
lds
pushf
push
ds
sti
ret
ret
mov
or
push
dec
gs
sbb
xchg
jmp
nop
out
or
movsb
int
repz
or
mov
adc
dec
adc
mov
hlt
lahf
shl
pop
out
add
jns
dec
cmp
rcrb
xor
mov
mov
jmp
mov
dec
adc
mov
sub
shll
push
std
lods
adc
lret
or
repz
xchg
popa
push
in
jle
repnz
iret
and
aas
es
sbb
xchg
xlat
add
jmp
out
mov
pop
jle
adc
ret
dec
adc
hlt
pop
notb
scas
push
fs
sub
int
lock
sbb
add
daa
sbb
out
mov
fldcw
cmc
fs
ret
adc
les
mov
stc
outsl
or
stos
jmp
jae
popf
ret
mov
mov
cmp
stos
jo
outsb
insl
xor
fsubrs
xchg
int
mov
sub
add
mov
mov
ja
cmp
mov
cmpsb
imul
cs
pop
repnz
mov
sub
sahf
les
cmp
addr16
in
leave
mov
iret
mov
daa
push
sti
rcl
pop
lret
popf
dec
dec
mov
pop
inc
fildl
rolb
ud0
imul
xchg
js
jo
jb
loope
and
imul
mov
mov
rep
xchg
mov
dec
xor
mov
xchg
fbld
or
cltd
push
sbb
mov
inc
pop
ds
xchg
dec
scas
sbb
outsl
push
bound
out
xor
popl
out
and
outsl
adc
cmp
daa
sub
inc
mov
push
and
jbe
mov
mov
shll
jb
xchg
push
mov
pop
hlt
pop
pop
push
adc
cltd
add
fcoms
test
mov
or
xchg
sub
lret
aad
push
aad
mov
mov
dec
out
sar
mov
xchg
xchg
sbb
ret
pop
cmpsl
sub
or
pop
sub
shl
sbb
in
adc
call
outsl
cwtl
imul
lahf
mov
xchg
xchg
adc
addr16
and
lret
rorl
lock
add
push
inc
push
mov
into
sbb
xchg
cmp
test
mov
mov
mov
cmp
popf
aas
fidivrl
add
mov
xor
int
xchg
cli
push
and
hlt
movsb
xchg
jge,pt
rol
movsb
jl
fidivrl
pop
mov
clc
mov
jge
push
int
into
add
ja
sahf
mov
or
sbb
mull
lret
aas
outsl
seta
icebp
fistpll
add
xor
jae
loope
sub
mov
inc
sbb
hlt
insb
jg
stos
sar
lock
hlt
cmc
xchg
dec
sub
test
xor
and
adc
out
cmp
mov
cltd
out
mov
imul
mov
xchg
out
stos
add
and
add
jb
aam
cs
iret
jo
mov
pushf
test
push
mov
mov
ficoml
inc
sbbb
movsb
jns
mov
int
shll
jno
mov
inc
lret
and
xor
push
imul
mov
movsb
mov
out
lock
cmp
xchg
pop
fs
cmp
adc
cltd
cmp
cld
mov
stos
push
repz
repnz
lds
add
lret
sbb
mov
and
and
out
popa
jns
ljmp
push
rcll
lds
or
jge
popf
inc
lds
mov
jmp
pop
lcall
movsb
insl
add
inc
fdivl
testb
pushf
jbe
rol
out
dec
ret
add
int3
sub
mov
jmp
fwait
aam
inc
je
imul
iret
jbe
add
xchg
adc
jl
mov
jg
push
paddsb
movsb
cmp
fcmovne
cld
movsb
sti
xor
push
test
mov
and
jmp
test
in
fnop
cmpsb
cmp
mov
inc
cs
xor
sbb
outsl
lods
addb
scas
jo
aaa
sbb
rclb
repnz
dec
sahf
in
loop
std
push
mov
aaa
fnstenv
test
sub
cmpsl
out
test
jnp
jb
xchg
ds
push
push
dec
sbb
fwait
lret
fs
cltd
push
adc
jle
dec
aad
xlat
cld
xlat
das
cmovbe
sub
daa
lock
push
jbe
pushf
inc
or
dec
fstps
mov
or
js
mov
cmp
js
inc
push
pop
inc
out
nop
or
fisubl
fucom
sbb
stos
pop
pop
dec
and
mov
jg
repz
mov
in
movsb
push
mov
add
inc
icebp
dec
adc
fildll
mov
xchg
push
push
push
inc
fdivrl
push
test
and
in
sub
mov
adc
nop
movsb
xor
dec
aam
fdiv
fisubs
test
jmp
xchg
lea
jle
popf
xor
fidivl
filds
insl
int3
scas
inc
adc
xchg
aas
and
sbb
dec
jbe
pop
jns
out
cmp
xor
mul
dec
jmp
js
iret
sbbl
jp
xchg
hlt
pop
js
fwait
inc
div
add
push
rcr
sbb
push
jmp
sub
jae
insl
je
out
xorb
inc
lahf
ds
pop
negl
push
jae
dec
xor
mov
add
push
dec
sti
outsl
movsl
cltd
out
test
imul
out
stos
sbb
dec
cmpsl
incl
lods
ljmp
out
mov
cmp
shlb
les
xor
and
adc
cmp
mov
or
das
lock
mov
test
arpl
xor
or
cli
popf
movsl
push
fnsetpm(287
movsl
pop
clc
add
and
shr
es
jo
fisttpl
push
mov
jnp
fucompp
add
das
mov
jmp
sbb
cmp
das
pop
and
mov
aam
insl
out
js
int3
adc
clc
sub
sbb
inc
subl
in
fcmovu
mov
and
push
mov
push
push
push
lret
cmp
insl
lret
xchg
jns
xorb
frstor
xchg
inc
xor
cwtl
pusha
push
call
test
cli
into
add
and
sub
lcall
nop
js
jns
movsb
cmpsb
lahf
dec
lea
nop
bound
mov
dec
ds
push
insl
rorb
call
add
ss
xchg
idivl
test
int
cli
stos
dec
insl
pop
dec
ret
arpl
jmp
mov
repnz
icebp
adc
insb
or
add
ffree
nop
subl
orb
or
cmp
stc
rcrb
sbb
lret
sub
push
repnz
sbb
aad
add
mov
push
mov
scas
imul
and
pop
dec
push
add
repz
push
in
and
cmp
adc
mov
xchg
insl
mov
aam
sti
fldenv
add
xchg
loop
xor
pop
arpl
xor
add
test
lahf
fucomi
add
adc
push
dec
mov
and
jl
fcompl
dec
subb
pop
mov
aam
inc
pop
sbb
in
inc
mov
xor
popa
push
sarl
les
mov
jns
xchg
rep
dec
rorb
dec
in
sbbb
pop
pop
test
rorl
fcomps
push
push
mov
mov
pop
movsl
popf
aaa
lcall
mov
mov
xchg
cli
lret
iret
xchg
mov
test
hlt
jae
mov
test
lods
xor
dec
mov
cwtl
sbb
jecxz
xchg
sub
cmp
push
aad
mov
popa
call
mov
js
loope
mov
inc
out
push
push
shl
popa
jmp
xchg
outsb
pop
aas
es
or
arpl
lds
loop
sarb
movsb
pop
inc
ret
add
xlat
ret
mov
shrl
mov
repnz
mov
in
pop
iret
popf
mov
loop
cmp
mov
xor
test
push
inc
cmpsb
cmc
jne
movsb
jmp
cs
movsb
pop
cmpsb
sub
aaa
push
cmp
mov
dec
int
mov
cmc
mov
jge
or
jl
cwtl
push
mov
in
sahf
push
lock
push
orl
push
outsl
cmc
hlt
mov
icebp
out
dec
xor
aaa
stos
push
pop
sub
pusha
cltd
jge
push
dec
jne
pop
sarb
mov
dec
ret
nop
mov
insl
jp
jg
loop
sbb
or
sbb
push
sub
out
dec
insb
orb
sti
pop
inc
inc
shrb
fs
imul
jae
test
int3
dec
push
xchg
xchg
fs
arpl
xchg
or
sbb
jp
mov
popa
clc
xchg
imulb
jl
aad
in
ret
sub
mov
outsb
pop
pusha
push
mov
int
mov
xchg
or
ds
ds
or
mov
fcmove
es
aam
mov
sbb
xchg
and
inc
sti
fdiv
adc
jl
push
sub
out
push
icebp
lret
push
sub
add
fwait
mov
and
mov
shlb
dec
jo
cld
aam
ss
mov
stos
repz
push
fisubrl
pop
fwait
jae
mov
out
dec
sbb
mov
xchg
fldt
mov
adc
sbb
je
roll
mov
xor
outsb
push
inc
ret
add
and
in
sarl
push
mov
xchg
test
adc
push
sub
fwait
enter
mov
addr16
sti
and
enter
mov
jge
adc
jle
push
fiaddl
outsl
inc
pusha
mov
pusha
mov
std
imull
jge
scas
sarl
push
arpl
cmpl
add
icebp
ficoml
xchg
adc
pop
cmp
adc
out
dec
test
movsb
add
push
mov
lcall
and
fmuls
fistps
addr16
int3
and
inc
jg
daa
inc
mov
adc
adc
imul
jo
mov
and
ret
mov
insb
repnz
jnp
cltd
push
xchg
out
mov
cs
or
push
mov
jo
in
mov
sbb
mov
xor
ja
jae
int3
cmp
sbb
arpl
xor
pushf
or
inc
mov
cmpsb
stos
movsl
mov
mov
clc
test
and
std
ret
dec
dec
cli
jl
pop
jb
xlat
sub
add
pop
push
adc
popa
mov
and
out
push
addr16
fcoml
adc
xchg
loop
mov
icebp
adc
and
cli
add
push
bound
inc
stos
pushf
add
push
mov
xchg
std
ret
loope
movsb
xor
lcall
push
decb
mov
fwait
xchg
aas
mov
nop
and
int
out
pushf
xchg
leave
cmpsb
cs
inc
jne
addr16
popa
xchg
jge
cmp
add
inc
xchg
push
ja
mov
xlat
xor
out
add
cwtl
mov
ds
dec
add
or
bound
lcall
test
lods
mov
jg
ret
addl
mov
jae
and
jle
popf
fnstsw
sahf
add
shll
filds
xchg
push
fildl
push
sub
cltd
ds
xchg
ficoms
push
mov
sarb
jo
sub
gs
ror
mov
adc
inc
andb
mov
in
lahf
icebp
out
fwait
sbb
sti
sub
dec
inc
lods
sub
adc
gs
in
pop
pinsrw
inc
scas
daa
mov
movsb
xchg
xchg
cmp
cmc
mov
daa
out
popa
adc
inc
sub
xorb
and
dec
test
lods
sahf
push
testl
rorl
fdivrl
sub
enter
mov
aas
mov
add
mov
fldl2e
push
nop
stos
pop
inc
inc
adc
lret
cwtl
inc
cmpsb
lds
out
movsl
pop
into
push
fsubrl
inc
push
xor
sbb
add
xor
pusha
adc
test
jle
ss
cmp
inc
add
dec
inc
ret
sbb
fnsave
rclb
jge
mov
movsb
mov
jge
lock
shll
fwait
inc
dec
or
mov
dec
sbb
push
sub
mov
pop
rcll
data16
cwtl
add
cli
fwait
andl
dec
mov
mov
femms
adc
adc
cld
mov
ja
loope
dec
popf
cmp
inc
mov
ljmp
cwtl
mov
jno
aas
push
insl
in
pop
lea
cmp
sbb
or
pop
fwait
xor
movsl
push
mov
cli
xchg
dec
cmc
fimull
imul
mov
cmc
popa
lcall
mov
in
xchg
mov
icebp
jnp
jae
cmpsb
push
out
ljmp
mov
shrl
cmp
pop
or
outsb
add
popa
mov
jae
pop
mov
out
rep
push
test
push
dec
pop
inc
cmp
xchg
mov
jecxz
arpl
pop
cmp
loopne
pop
cli
cmp
sub
push
leave
mov
fisubl
push
ja
xor
jbe
imul
jle
add
ds
addb
push
and
fsubl
sarb
add
call
out
imul
xor
clc
sub
sbb
xchg
xchg
imul
sti
rol
fcomps
enter
mov
aas
pop
dec
cmc
mov
dec
test
sarb
pop
std
aas
js
lods
mov
pop
adc
pop
outsb
dec
std
dec
test
cmp
and
adc
cmc
dec
adc
inc
or
lods
or
mov
cmc
je
sti
mov
cltd
adc
cmp
mov
movsl
and
and
pop
mov
in
shlb
jl
push
pop
mov
mov
cmp
loope
gs
push
inc
mov
out
mov
add
in
cli
push
ret
sti
mov
add
icebp
bound
fmuls
sub
ret
nop
out
sub
mov
cmp
hlt
jb
cmp
cmp
loop
sbb
mov
push
jle
orl
rorl
dec
sub
push
out
jl
inc
mov
js
pop
ficoms
mov
test
loop
fs
int3
and
cld
xchg
cmp
je
lea
sbb
cmp
mov
fdiv
sub
lahf
test
jae
out
aad
add
push
xor
fwait
push
jp
mov
cmp
add
fmul
leave
ret
push
ret
dec
lea
leave
in
insl
cmpsl
shlb
sbb
add
lods
std
cltd
cmp
inc
aas
mov
mov
roll
pop
ret
mov
shlb
out
in
xor
xchg
xorb
sbb
mov
mov
icebp
vmovaps
jno
scas
inc
leave
mov
adc
fsubrl
dec
ret
popa
or
add
jne
shrl
cmp
dec
scas
inc
shl
add
cmpsl
pop
out
xchg
aad
push
stos
lea
pop
ljmp
mov
xor
jl
sbb
loope
xchg
mov
jnp
add
add
or
dec
cwtl
and
shlb
pop
inc
and
or
mov
jno
out
test
fdivr
shll
mov
sarl
cmp
rorb
pop
test
popf
pushf
pop
pop
mov
stc
xchg
and
inc
sub
jne
mov
jns
pop
aad
cmpsl
push
jo
dec
push
int
aaa
ja
and
aas
nop
repnz
les
mov
inc
fs
jno
cmp
insl
js
and
subb
jno
and
inc
xlat
roll
mov
stos
lods
sahf
and
cmp
sbb
cwtl
and
es
sub
scas
jg
lds
xchg
jns
andb
dec
push
add
testb
pop
lods
loopne
clc
xchg
adcb
inc
sub
insl
mov
pop
lret
cmp
sub
divl
fcomps
andl
mov
mov
push
sahf
pop
sub
icebp
jmp
insb
and
bound
xor
lods
into
sub
imul
lret
mov
lods
cs
dec
aaa
push
adc
jb
dec
xchg
and
mov
sub
test
mov
mov
inc
mov
mov
cltd
sbb
ffreep
xchg
push
sub
mov
jl
pushf
jbe
out
dec
cmpsl
or
addr16
and
dec
test
ljmp
lods
or
mov
xchg
mov
sti
icebp
mov
cs
add
jl
add
jbe
fcmovnbe
or
jp
jno
in
sti
les
dec
jne
dec
push
rcl
mov
out
xchg
xchg
xchg
pushf
pop
nop
pop
push
inc
shrw
mov
mov
out
push
mov
aaa
repnz
inc
bndstx
bound
fucomip
pop
out
mov
xlat
mov
repnz
ficoml
pop
pop
mov
cs
push
xor
out
or
sbb
mov
mov
xchg
ror
cwtl
lods
popf
or
inc
cmc
add
mov
andl
pop
and
cmp
mov
andl
and
xor
mov
js
das
or
sub
insl
inc
dec
test
pop
add
add
or
push
leave
loopne
xor
lock
inc
mov
dec
sbb
movsb
flds
jecxz
mov
stos
jmp
push
test
add
or
imul
cli
dec
mov
fs
mov
pop
test
jae
xorb
in
sbb
jo
and
dec
ds
jp
inc
in
pop
adc
mov
cld
fs
xlat
rorl
push
sub
mov
add
inc
inc
and
std
cmp
sbb
lods
cmp
jmp
inc
and
sarb
jno
test
out
pop
dec
mov
adc
aad
test
jle
popa
into
outsl
insb
aam
fstpl
xor
jae
test
ss
push
nop
mov
add
cmp
pop
push
pop
push
popf
std
scas
sahf
out
xchg
jbe
push
pop
xor
gs
lds
push
xchg
mov
push
shrl
push
push
and
jno
mov
outsb
test
or
mov
cwtl
jb
scas
push
sbb
lcall
scas
and
les
push
cmc
aaa
xor
leave
mov
adc
mov
insb
xchg
js
jle
lret
flds
scas
setno
sbb
lret
sti
aaa
das
scas
sarb
xorl
pop
leave
mov
jge
xchg
adc
lods
sub
bound
int3
leave
loopne
push
mov
outsl
adc
hlt
ja
mov
cwtl
add
pop
mov
stos
or
lcall
lea
aam
dec
mov
dec
addl
or
pop
pop
repnz
sub
aad
sti
in
mov
cmpsl
pop
jl
mov
inc
sbb
sub
push
int
and
mov
imul
scas
cs
hlt
lret
int
scas
call
popa
cmc
lcall
pop
testb
xchg
ds
cltd
xchg
je
lahf
rcrb
add
xor
pusha
sub
pop
fidivs
popl
popa
stos
cwtl
mov
push
enter
cmpsl
xor
cltd
xchg
cli
fwait
addr16
cvtpi2ps
ret
ds
testb
jecxz
sub
out
and
mov
repz
push
jge
or
aaa
in
inc
mov
mov
lret
outsb
test
rclb
cmpsb
xchg
mov
sbbl
mov
sub
pop
sub
mov
std
arpl
lcall
loop
mov
rcr
movsb
out
loopne
in
mov
dec
ficoms
lods
cmp
stos
bound
pop
pop
arpl
gs
insl
rorl
scas
sarb
inc
outsl
sarb
or
scas
or
lds
cmpsb
and
hlt
iret
xor
or
daa
inc
outsl
xchg
and
call
lret
cli
jo
out
lods
push
call
inc
scas
add
sub
mov
xchg
mov
pop
sbb
insl
outsb
push
inc
imul
inc
mov
mov
clc
adc
xor
pusha
scas
jp
xlat
cmp
dec
insl
sbb
int
xor
inc
dec
subb
outsl
lods
out
push
mov
aas
movsb
lret
add
jnp,pn
ja
int3
add
inc
mov
daa
dec
nop
xchg
gs
cmp
jge
bound
pop
mov
jge
jg
cltd
int
lea
pusha
or
pop
or
mov
stos
inc
pop
in
loop
adc
or
mov
adc
movsl
mov
and
pop
add
dec
mov
cmpsb
cmp
orl
test
in
int
sbb
aas
loop
mov
cwtl
aas
call
xor
mov
mov
lret
xor
mov
enter
or
add
xchg
mov
dec
jp
loopne
or
mul
mov
cs
jne
sbb
scas
sbbl
push
fistl
lcall
in
pop
ja
scas
roll
in
mov
mov
insl
cmp
push
ret
aam
and
les
dec
and
dec
xchg
sub
daa
mov
lds
push
adc
or
dec
mov
fstpl
push
or
clc
or
push
rol
insl
in
dec
sbb
lods
aad
out
fs
xor
xchg
jo
roll
inc
jl
xchg
mull
push
add
mov
xchg
jmp
test
loopne
aam
adc
mov
lods
mov
and
and
das
or
mov
xorb
fucomp
cli
scas
push
jg
lods
inc
dec
lods
mov
icebp
jl
aaa
mov
xor
cli
lds
push
out
ror
sub
adc
dec
dec
daa
std
xlat
or
inc
movsb
xchg
idivb
les
outsb
in
jo
cs
lcall
sub
sbb
hlt
daa
imul
jb
loope
loop
outsb
ficomps
in
and
cmp
add
mov
aas
sti
fidivs
loope
mov
or
and
call
and
sub
pop
lea
jle
xchg
xchg
mov
sbb
std
or
sbb
lret
pop
push
dec
stos
mov
test
push
dec
sbb
leave
bnd
arpl
dec
lock
cmp
lods
push
test
shll
repnz
inc
pop
sti
sbb
jno
ror
scas
test
lcall
pop
data16
lcall
add
das
pop
jno
mov
out
adc
ret
jl
fidivl
mov
xchg
pusha
test
ds
xchg
and
inc
test
push
adc
outsl
mov
into
adc
call
call
dec
pushf
inc
mov
mov
cmp
cmpsb
arpl
out
lret
fisttpll
outsb
mov
push
and
mov
xchg
jbe
imul
dec
dec
neg
fldt
out
adc
cmp
xchg
jno
test
jmp
mov
je
adc
jnp
ljmp
mov
xchg
jb
ljmp
cmc
pmulhuw
mov
cmp
roll
aam
push
outsl
insl
insl
loopne
add
test
lods
out
adc
out
jnp
pop
das
mov
hlt
lahf
pop
pop
ss
pushl
shlb
test
pop
jecxz
and
outsl
sub
push
adc
repz
rolb
jmp
rol
aaa
cmp
jge
pop
lahf
jbe
daa
inc
ficomps
cmp
fwait
int3
cmpb
sti
ficompl
cli
cmp
ss
and
or
mov
jl
scas
lea
mov
sbb
jae
out
jbe
mov
adc
jle
mov
daa
xor
dec
jmp
ret
dec
imul
xchg
repnz
cmp
xlat
popa
icebp
pop
fiadds
xchg
icebp
sub
sub
arpl
pop
xchg
lods
cmp
xor
outsl
adc
mov
pop
roll
adc
adcl
sub
outsl
je
dec
cmp
xchg
adc
in
or
shrb
push
pusha
xor
sbb
lcall
and
mov
dec
xchg
shrl
push
cmpsl
sub
push
insb
adc
inc
test
inc
cmpsb
cmpsl
ljmp
adc
adcl
enter
cmp
mov
xchg
leave
sbb
clc
inc
fwait
sub
pop
test
jo
movl
jo
andl
loopne
mov
mov
xchg
loope
arpl
icebp
or
mov
dec
ss
sub
pop
lock
inc
jne
jbe
or
lret
xchg
mov
adc
jg
into
out
jno
mov
sbb
mov
push
mov
loop
mov
stos
lea
push
aas
or
inc
sbb
pop
aas
in
xor
mov
xlat
jmp
xchg
mov
fldl
inc
mov
cmp
scas
hlt
shr
neg
js
pop
xchg
xchg
adc
sbbl
pop
insl
test
mov
in
mov
lret
pop
mov
push
iret
mov
inc
and
mov
push
jb
push
xor
test
mov
insb
inc
outsl
cmp
imul
jno
sub
adc
push
adc
roll
aaa
test
aaa
push
cs
pushf
enter
fildll
cltd
in
xlat
or
jmp
fstpt
leave
add
push
lcall
out
out
xchg
push
pop
add
orb
sahf
int
loopne
inc
ficoml
cmp
mov
sti
es
jns
fsubs
out
mov
fwait
push
or
mov
subb
fidivs
imul
cmp
rcrb
adc
mov
popf
fs
xor
mov
leave
ret
dec
dec
lret
fstpl
or
leave
lds
push
or
jae
cmp
mov
inc
ficoml
or
jge
push
xchg
daa
jge
ficompl
iret
ret
into
popf
imul
clc
aam
mov
lods
cmp
push
jne
bound
jo
jb
out
cmc
shrl
out
jb
popf
cmpsl
and
and
lds
push
cmp
jno
repz
cmp
xchg
and
mov
sahf
icebp
mov
cmpb
dec
inc
sub
mov
shlb
mov
outsb
adc
inc
adc
mov
dec
xor
sbb
daa
mov
dec
xchg
cltd
jo
addr16
cld
les
xchg
or
idivb
add
push
push
pushf
add
ret
out
int3
leave
jp
or
sub
and
aas
imul
fsubrs
ficoms
xchg
fisttps
add
movsl
leave
add
cmpsl
aaa
cld
jb
add
mov
jl
cmpsb
push
lret
inc
repnz
sti
jecxz
push
dec
incb
inc
addr16
and
in
pop
dec
add
or
mov
cwtl
in
dec
jmp
push
les
dec
adc
mov
je
inc
jp
ret
test
rcl
cmp
scas
sbb
or
pop
xorl
out
hlt
xor
xor
fs
inc
test
and
out
mov
cmp
mov
mov
loopne
jecxz
mov
mov
jmp
sarb
cmp
xchg
andl
outsb
mov
dec
adc
xchg
sub
lds
add
and
rcr
push
lock
adc
pop
aam
sub
push
xor
loope
in
adc
imul
es
push
enter
rcrb
ror
sbb
lahf
bound
mov
push
test
push
jnp
xorl
push
mov
fidivs
movl
stc
cli
and
pop
das
inc
int
pop
xor
jp
in
pusha
test
adc
xor
clc
sbb
mov
sub
sti
jno
mov
inc
sub
scas
out
repz
fiaddl
icebp
sub
xor
enter
into
dec
lods
jns
sbb
push
sbb
jle
mov
adc
fucomp
ret
test
jl
jge
cltd
into
cmp
insl
hlt
adc
mov
xor
sub
in
jnp
aas
test
adc
out
dec
rcll
or
pop
jne
push
lods
push
inc
jbe
lret
sarb
es
lret
and
push
popa
cmp
push
ds
mov
pop
xor
mov
inc
mov
in
mov
pop
or
sbbl
out
dec
push
out
mov
mov
mov
xchg
cmp
and
fisubrl
lcall
clc
icebp
cmp
es
inc
loop
dec
and
clc
icebp
stos
stos
xchg
loop
ss
mov
cmp
xchg
sar
outsl
cmp
jo
inc
imul
js
jp
mov
sbbl
hlt
adc
dec
mov
add
push
xchg
jno
dec
jno
in
enter
xor
js
aad
leave
inc
in
sbb
dec
je
in
movd
jg
mov
or
mov
jb
or
pop
out
lret
adc
mov
lahf
andl
arpl
mov
lds
rorl
xchg
or
sti
imul
xchg
pop
loope
loopne
lods
pop
mov
rcrl
jns
scas
xor
cmp
xchg
pop
mov
jne
shlb
jb
adc
sub
mov
movsl
cltd
add
fwait
aaa
mov
subb
bound
movsl
shrl
mov
xor
push
loope
jl
loopne
push
rolb
in
mov
inc
dec
test
inc
sbb
push
fsubl
or
mov
lcall
jbe
bound
mov
lock
loope
cs
push
test
mov
pop
fsubrp
cmc
fsubs
xchg
push
xor
fld
out
dec
cmp
call
mov
ja
ds
popf
add
push
cmc
ja
imul
mov
int3
push
aaa
ds
or
sub
lcall
inc
fistpll
xor
mov
xchg
mov
push
sbb
fstl
lret
daa
lods
sub
scas
bound
pop
mov
sarl
push
into
adc
sub
imulb
ss
push
mov
push
jnp
sbb
fidivrl
out
and
imul
push
sub
dec
push
dec
test
add
jae
enter
cmp
dec
mov
lds
add
loop
out
adc
cmp
out
pop
mov
stos
scas
aaa
movsb
ds
adc
mov
loopne
es
jmp
sub
add
aad
out
addr16
arpl
lret
dec
in
pop
fsts
sbb
nop
mov
cmp
je
sbb
int
jne
mov
outsl
test
push
jecxz
adc
xor
aaa
sub
adc
mov
jg
and
mov
mov
push
test
mov
outsb
push
shrl
pusha
mov
and
ret
stc
push
mov
aas
xor
ljmp
mov
inc
fldl
pop
ds
dec
std
adc
rcr
adc
icebp
or
inc
int
inc
lds
sbb
out
xchg
aas
sub
pop
push
rcll
mov
addl
call
pop
and
push
push
incl
scas
rorl
mov
ror
jl
pop
mov
dec
or
sbb
fisttps
xorl
dec
in
sub
lods
fwait
dec
xor
mov
mov
cmpsl
gs
push
pop
fildll
pusha
ljmp
mov
lods
or
fcom
clc
add
test
jb
sbb
js
push
test
mov
sub
andl
aam
out
cltd
js
mov
arpl
push
out
out
mov
ja
add
mov
popf
or
outsb
out
ss
push
xorb
inc
ljmp
scas
fistl
dec
cld
xor
add
mov
inc
jecxz
pushf
push
cmp
xlat
mov
pop
mov
iret
nop
add
aam
test
hlt
push
mov
dec
xor
cmpsl
sbb
xchg
fmull
outsb
xchg
adc
sub
scas
lahf
mov
jmp
lea
test
or
roll
mov
es
popf
xchg
pusha
sbb
push
jb
faddl
jle
mov
into
getsec
pop
inc
dec
std
jnp
pop
mov
in
pop
jp
cmp
call
add
inc
add
scas
mov
jp
iret
jp
repnz
bound
frndint
push
add
xchg
ret
ljmp
xchg
loop
leave
push
push
adcl
cmp
cwtl
lcall
jno
les
push
arpl
cs
int3
je
scas
nop
cmp
nop
leave
pop
jge
push
std
cli
into
mov
andb
iret
popa
sbb
cli
dec
ret
cmp
xorb
andl
frstor
inc
mov
sbb
dec
xor
xchg
scas
mov
mov
cmpsw
int
cmpsb
mov
fistps
lcall
push
shlb
dec
and
mov
frstor
sub
jns
ss
leave
in
dec
push
fldenv
jo
addr16
inc
out
aad
ss
and
mov
std
scas
dec
sbb
xchg
loope
xor
lret
add
push
cmpsl
jns
push
xchg
test
and
loop
pop
jae
inc
push
push
add
dec
mov
or
and
or
iret
sbb
mov
shlb
pop
pop
xor
lret
xchg
cmp
push
add
stc
adc
pcmpeqw
pop
and
sbb
shr
and
and
pop
jmp
jmp
xor
mov
mov
aam
cmp
jmp
rorb
js
sahf
clc
cmpsl
cmp
inc
adc
test
push
inc
xchg
inc
in
sub
lcall
dec
mov
or
les
dec
fnstcw
loop
jbe
mov
lret
pop
cmp
cmp
hlt
fistpl
push
icebp
xor
inc
mov
mov
adc
shlb
out
int3
jbe
add
daa
xchg
add
insb
mov
shlb
dec
sbb
mov
push
in
pop
pop
cltd
test
cmp
sub
add
lods
sbb
int
scas
sarl
subb
mov
push
and
imul
mov
out
mov
mov
add
out
enter
inc
movsl
jecxz
mulps
ja
cmpsb
push
mov
leave
sysexit
xor
hlt
cs
mov
fwait
stos
xchg
lret
pop
fdivr
in
test
mov
je
in
adc
lods
fistps
jge
enter
push
sbb
nop
inc
lock
cmp
jb
jle
sub
mov
iret
int3
or
divl
lock
stos
pop
mov
dec
mov
add
jp
repnz
mov
iret
jl
or
testl
roll
dec
sbb
aam
push
xor
adc
mov
mov
test
xchg
enter
lahf
push
or
push
shll
enter
pop
stos
mov
xor
test
mov
xchg
leave
fdivrs
faddl
dec
into
aas
ret
adc
das
inc
adc
mov
test
and
fcoml
cs
jns
das
push
mov
imulb
mov
bound
cltd
pusha
lea
add
fs
in
mov
imul
pop
in
int3
neg
js
jne
xchg
jl
push
ljmp
sbb
and
ss
idiv
js
jecxz
lret
cwtl
sub
aas
push
pop
mov
aad
mov
mov
xchg
or
outsb
insb
repz
mov
sbb
adc
and
xor
add
sbb
pop
mov
rep
push
cs
ds
or
cs
repnz
mov
cwtl
leave
aad
sti
clc
imul
sahf
enter
dec
mov
daa
mov
mov
repnz
sbb
dec
mov
xchg
pop
mov
adc
fwait
push
adc
int
xchg
orb
mov
jecxz
push
lret
mov
decb
pop
jne
aad
cwtl
add
xchg
rclb
xchg
push
xor
push
into
add
enter
mov
push
cld
inc
insl
pusha
dec
pushf
shl
lret
insb
sub
inc
xor
iret
loope
push
gs
ljmp
fldcw
push
xchg
jns
cmp
dec
sbb
jnp
aad
dec
ljmp
rorl
stos
mov
sub
cmp
je
xchg
xchg
cli
and
pop
inc
jno
inc
push
stos
es
xchg
jne
data16
sub
movsl
imul
push
jne
inc
pusha
out
mov
dec
gs
mov
pop
or
bound
inc
cmp
mov
jne
dec
cmp
mov
mov
or
je
and
aaa
adc
cltd
add
pop
test
add
roll
xchg
push
jmp
push
into
int3
adc
cltd
jge
sti
mov
jns
push
lds
mov
inc
and
sub
rcl
sub
mov
mov
mov
xchg
call
sub
adc
leave
lock
rep
in
sub
sbb
dec
fwait
int
sbbb
or
arpl
sub
insb
clc
adc
cmp
cmp
cmp
das
mov
inc
ljmp
leave
add
int
stc
pop
or
sub
mov
hlt
xor
inc
aaa
fbstp
imul
xor
aad
pop
sbb
dec
jge
cld
ljmp
mov
stc
jbe
lret
fs
orb
sub
sarl
jnp
sub
pop
into
jg
loope
cmp
out
insb
dec
pushf
xor
or
test
xchg
push
jns
mov
mov
lods
pop
jne
lahf
lret
fistps
dec
xor
ds
mov
add
or
clc
jle
add
cmp
xlat
das
add
imul
and
enter
add
hlt
xchg
mov
cs
pop
loope
pmaxsw
test
dec
mov
or
or
push
push
lret
jnp
fsubr
call
dec
lahf
jmp
movsl
or
cmp
adc
xchg
and
cmp
adc
dec
or
pop
std
sbb
aad
cld
push
inc
cltd
sub
add
xor
jo
sbb
pop
mov
sahf
in
movsb
cmp
sbb
xor
movq
mov
push
push
push
pop
inc
mov
ds
mov
xor
jns
xchg
xchg
sub
in
mov
mov
pushf
xchg
pop
imul
in
cmpsb
mov
add
and
iret
popa
fwait
push
dec
in
push
out
sbb
push
mov
xchg
fmul
push
mov
out
jecxz
push
jmp
xchg
and
mov
mov
jge
push
testl
sarl
xor
lds
inc
push
out
test
mov
sbb
ss
pusha
xchg
out
sub
sbb
mov
and
lret
mov
outsb
popa
in
loop
cmp
lds
mov
xchg
test
loopne
push
std
push
scas
xchg
push
fiaddl
or
out
jno
sub
jg
shll
sbb
arpl
stc
pop
inc
pusha
xchg
shll
sarb
xchg
lret
pop
jns
push
call
adc
push
enter
dec
xlat
fcmovbe
add
xchg
imul
jg
sbb
jecxz
movsl
cmpsl
movb
incl
mov
jnp
mov
fbstp
call
aas
pop
imul
mov
fs
sub
sbb
sbb
add
xlat
fcoml
shll
cmpsb
sbb
or
int
je
mov
lahf
sti
mov
imul
les
gs
push
dec
cmp
aam
fiaddl
incl
mov
ficompl
mov
fnstsw
or
xor
into
lods
and
mov
imul
cmc
lahf
pusha
icebp
negl
cmp
push
cmc
mov
add
pop
ds
in
xchg
sti
xchg
xchg
inc
repz
into
dec
jno
inc
fsubs
pop
into
insl
xor
sahf
mov
inc
dec
divl
mov
cmp
into
inc
fwait
adcl
mulb
dec
stos
mov
adc
mov
stos
xor
nop
les
mov
cmpsb
ds
jns
lock
xchg
pushf
bound
lcall
pop
scas
jbe
mov
nop
and
mov
rol
sbb
lea
call
mov
pop
std
pop
movsb
ret
notb
xchg
mov
rorl
xchg
push
loope
xor
and
sbb
push
aad
xor
mov
and
arpl
pop
dec
dec
stos
call
into
cmpsb
dec
add
cmp
and
ss
mov
shll
in
mov
push
loop
les
push
repnz
pop
out
xlat
pop
adcb
mov
fwait
lock
xchg
xorl
popf
out
ljmp
push
test
mov
jne
inc
cmc
push
popa
xor
inc
aaa
xor
and
cmp
push
inc
repz
adc
outsl
out
adc
adc
adc
pop
and
inc
cmpsb
and
inc
sbb
add
add
out
sub
jecxz
aam
lret
jne
repnz
ud0
adc
lret
ljmp
adc
jne
cmp
lcall
outsl
sub
mov
inc
dec
sub
push
xchg
in
sbb
pop
movsb
mov
test
mov
fcomip
mov
pop
pusha
xor
push
cltd
xor
test
rcrb
outsb
lret
xchg
das
fistl
inc
sbb
jb
pop
les
ss
mov
lock
add
mov
push
lods
adc
mov
lret
push
aam
mov
xchg
mov
add
jmp
arpl
or
test
cmp
dec
loop
push
jmp
mov
test
dec
mov
rcl
add
test
mov
jo
mov
cmp
mov
mov
popf
mov
outsb
xchg
repz
insl
repnz
ja
and
aas
and
dec
sbb
ret
push
fistpll
xlat
daa
jecxz
dec
push
stos
jnp
inc
imul
ljmp
dec
call
mulb
xchg
jmp
xchg
mov
and
push
fcompl
lods
ret
mov
pop
sti
mov
cmp
sub
xor
ja
loope
lret
sahf
inc
xchg
pop
jle
xor
cmp
sub
repnz
lock
cmp
jp
mov
scas
fisttpll
jae
add
repnz
sahf
dec
cmp
inc
dec
test
push
stos
sub
fucomi
shrb
xor
jae
loopne
push
lods
in
loop
addr16
cmp
pop
scas
mov
sbb
out
decb
pop
lret
adc
dec
lock
imulb
xchg
jb
xlat
out
cld
lcall
xor
xchg
stos
stos
pop
mov
clc
jle
int3
inc
loopne
lret
and
ja
int3
xor
dec
shll
jecxz
or
nop
push
sbb
lret
add
adc
repz
pop
mov
xlat
inc
xchg
cmp
lcall
pop
cmovbe
dec
in
pop
jae
and
mov
push
ret
es
jecxz
je
nop
js
divl
and
imul
mov
mov
xor
sub
outsb
cmp
mov
dec
sbb
fidivrs
dec
and
push
xchg
or
aaa
aad
ljmp
pop
adc
push
dec
sbb
fucom
push
and
cmp
lods
popa
mov
adc
add
imul
shrl
out
sbb
inc
outsl
xchg
mov
std
inc
ja
jno
add
adc
sub
xchg
mov
xchg
lds
out
inc
gs
inc
das
cltd
jle
shlb
call
cmp
mov
pop
dec
add
dec
push
push
mov
roll
add
scas
adc
dec
out
inc
add
xchg
divb
xchg
dec
rcrb
daa
bound
fwait
imul
xor
inc
mov
push
neg
addr16
sub
inc
jo
in
faddl
add
in
or
pop
cmp
stos
scas
pmuludq
ret
mov
inc
pusha
cmpsl
pushf
add
mov
inc
lock
push
sbb
xchg
les
ror
popa
rorb
push
jg
dec
aad
mov
mov
ss
cltd
mov
mov
rolb
aas
clc
fildl
mov
push
inc
xlat
mov
outsl
out
jp
das
out
into
cltd
ret
ret
mov
and
jae
testl
notl
sbb
push
dec
mov
cld
js
notb
in
cltd
movsb
scas
dec
test
mov
in
mov
mov
push
mov
cmpsb
mov
push
adc
push
xor
dec
jb
sbb
dec
aad
jle
sbb
cmp
imul
cmpsb
or
ljmp
cli
sbb
jae
push
and
xchg
mov
aaa
push
mov
sub
mov
add
mov
jb
lret
pushf
jge
ret
xor
add
test
popa
iret
stos
sarb
push
in
stos
cli
jge
pop
pop
rolb
add
xchg
push
bound
mov
mov
add
outsl
fdivs
pusha
movsb
sar
daa
loopne
test
cmp
or
stc
and
xchg
fsts
xchg
lahf
cmp
xor
sbb
push
push
gs
xlat
add
push
sub
jo
daa
test
lock
xor
or
jne
mov
xlat
repz
cli
ss
insl
pop
cwtl
mov
lcall
fwait
xlat
mov
push
mov
out
xchg
inc
xor
mov
xor
out
stos
mov
jns
adc
arpl
dec
lcall
ret
mov
shrl
or
sbb
push
inc
jo
sti
ret
div
add
lcall
jo
addr16
jl
mov
adc
mov
mov
pop
scas
mov
pop
mov
lret
rsm
divl
shr
lods
dec
shlb
pop
cmp
jmp
rclb
inc
xchg
sbb
aad
xchg
add
mov
pop
shr
leave
rcl
jmp
clc
cmp
testl
inc
rcrb
ds
push
jmp
push
mov
out
fcomip
push
outsb
push
inc
inc
cmp
in
xor
mov
adc
mov
loopne
sub
and
rclb
cmp
pop
jl
ljmp
xchg
dec
in
mov
fucomp
or
pop
jmp
mov
cmc
or
cmpsb
jne
sti
sbb
stos
leave
inc
sbb
js
mov
repz
imul
adc
push
mov
fisttpl
dec
dec
shrl
mov
dec
jmp
cmp
mov
pop
movsb
adc
mov
or
std
imul
adc
cs
mov
fwait
or
and
adc
push
jnp
into
jle
xor
test
arpl
xor
sub
lock
add
xor
push
add
xchg
les
outsb
ds
jp
insb
dec
and
jne
cmpb
and
call
cmp
sbb
lret
xchg
or
jbe
int3
pop
into
cmp
adc
jle
and
or
cli
sahf
stos
fsubrl
rcl
cmp
xlat
divb
adc
push
dec
xor
pop
xchg
les
xlat
mov
lds
mov
xrelease
dec
push
pop
setae
mov
mov
jo
ret
or
and
loopne
fsts
rolb
mov
dec
push
pop
lret
ret
cmp
das
adc
jl
push
arpl
mov
add
pusha
mov
mov
test
or
outsl
lods
hlt
mov
aam
xor
fs
pop
cmp
fcoms
in
aas
arpl
sbb
xchg
stos
faddl
sbbb
lock
outsb
jns
subb
das
xor
fwait
mov
add
jno
mov
mov
mov
cmp
out
mov
cmp
cld
sub
or
lock
inc
inc
mov
test
pop
xchg
insb
xor
arpl
mov
mov
or
mov
cltd
or
sub
repz
idivl
mov
push
jae
fstpt
pusha
mov
insb
or
aaa
pop
mov
mov
push
cmp
push
mov
sbb
push
add
sbb
or
jbe
lret
lret
push
cs
dec
xchg
sti
sub
or
pushf
inc
fnstenv
xor
sub
xchg
je
mov
push
push
xor
jmp
rcll
fcoms
pushf
movsl
mov
pop
inc
scas
mov
push
or
mov
je
test
inc
mov
sbb
adc
test
fdivr
sti
or
jp
dec
mov
scas
jae
data16
dec
arpl
mov
xor
and
pop
push
loop
jb
faddl
shll
cmp
mov
stos
fwait
jnp
dec
cmp
imul
inc
std
mov
jbe
cmp
fidivrs
popa
jae
jb
aaa
push
stos
out
pop
fst
or
fdivrl
fcompl
mul
dec
sbb
mov
cltd
cmp
mov
and
ss
or
addl
sahf
fnstenv
lea
add
sub
push
mov
jb
adc
daa
xchg
pop
sti
aad
pop
in
cltd
mov
aad
lods
lahf
lods
fcmovne
sbb
pop
leave
mov
popf
inc
mov
mov
cmp
aad
jge
fisttps
xchg
dec
add
in
arpl
int3
fsubp
fcmove
mov
jb
aas
fimull
mov
insb
int3
jmp
es
and
inc
xor
leave
js
mov
cmpsb
das
dec
pop
sub
pop
das
icebp
mov
je
leave
jne
mov
cmp
cmp
xchg
in
push
xchg
cld
in
clc
js
jge
orb
or
sub
fsubrs
out
insb
mov
test
std
in
or
mov
push
xchg
in
addr16
jbe
push
push
cld
mov
adc
sbb
test
or
stc
das
int
orb
test
stc
push
fwait
dec
sbb
add
rcrb
loop
aam
rcl
sub
sub
out
fwait
mov
negl
shl
sub
scas
je
xchg
mov
je
ret
fstpl
loope
stc
movsl
leave
inc
inc
xchg
in
inc
mov
lock
or
dec
jb
fldl
pushf
lret
pop
sahf
cmpsb
fiadds
movsl
imul
mov
xor
sbb
xchg
xchg
add
push
sbb
mov
dec
xchg
movsl
out
jmp
ror
and
iret
enter
cmpsl
push
mov
mov
stos
into
pop
pusha
dec
mov
ss
test
xchg
test
pop
pop
aad
stos
cmp
popf
call
fcmovb
gs
arpl
cmp
and
xchg
mov
out
test
aam
loope
mov
fmull
movsl
out
movsb
aad
lret
mov
sbb
sub
dec
and
ret
jae
out
or
mov
in
out
iret
and
sub
fdivrs
mov
outsb
in
popa
mov
or
push
ret
lahf
mov
pop
repnz
inc
push
call
in
es
xor
or
push
dec
stos
leave
cli
lidtl
aaa
fcomps
outsb
cwtl
dec
fisubs
sbb
or
sub
fisttpll
mov
mov
mov
and
sti
pop
test
mov
xor
faddl
aam
push
and
add
xchg
xor
outsb
sub
inc
or
mov
fsubrl
mov
mov
dec
mov
mov
pop
mov
pop
adc
imul
test
push
push
sbb
loop
mov
cmpsb
pop
addr16
inc
pxor
dec
scas
pop
dec
cltd
inc
cmc
jns
jge
in
cmp
shll
sahf
adc
sub
lds
or
or
cmpl
mov
xchg
sbbb
or
jae
lods
cmp
inc
jo
lahf
icebp
cmpsl
das
jnp
and
or
leave
mov
push
lds
loopne
mov
pop
pop
dec
jnp
mov
lock
js
mov
out
xor
xchg
mov
lret
xchg
dec
mov
jnp
je
cmp
adc
out
movl
fwait
push
pusha
and
fdivr
fcompl
or
sbb
loope
popa
sti
sbb
and
sahf
scas
loope
leave
enter
mov
mov
leave
or
dec
mov
mov
stc
sub
jp
shlb
cmp
ja
sub
pusha
lret
jae
pop
cli
push
jge
and
push
jnp
mov
jmp
scas
xchg
mov
test
int
lds
sbb
lods
lret
pop
pop
or
popl
pop
mov
adc
lods
jne
inc
sub
ljmp
mov
mov
ja
addr16
imul
scas
mov
xchg
popf
les
sbb
mov
stos
aad
sti
lahf
adc
mov
mov
add
shlb
leave
jmp
jle
jb
push
and
lods
out
mov
mov
in
push
and
adc
dec
mov
out
pushf
add
sbb
xchg
lret
iret
and
lods
into
loope
call
pop
repz
mov
mov
rcll
adc
and
xchg
sub
jl
test
jbe
fisubrl
outsl
sbb
mov
push
cmp
in
dec
pusha
test
ss
cmp
out
dec
push
aam
jo
fidivrs
xchg
sbb
jecxz
les
rcrb
push
mov
xchg
push
test
jp
sub
push
imul
test
das
repnz
pop
jecxz
lds
sbb
test
std
repnz
inc
xor
sub
int3
inc
jno
leave
mov
jno
mov
das
mov
jns
and
in
lea
mov
invd
pop
sbb
icebp
mov
lock
cmp
inc
adc
adc
or
xchg
icebp
loop
filds
add
lcall
sbb
xor
ret
mov
pop
xor
filds
cli
or
gs
testl
mov
push
test
dec
and
dec
fcomp
xchg
and
mov
bound
mov
add
mov
add
fisttps
push
fsub
pop
cmp
hlt
adc
jb
pop
jb
push
ffreep
hlt
sbb
sub
jae
mov
push
std
adcb
aas
cmpsl
cmp
push
lret
dec
mov
pop
ficomps
mov
push
push
rclb
dec
bound
jmp
mov
cmpsl
sarl
ret
ljmp
negl
or
mov
loope
pop
xchg
pop
cltd
xor
xor
cmp
in
and
add
lds
fdivrp
fcompl
pop
lods
sbb
flds
inc
push
sti
lods
out
pop
negb
fdivl
jns
insl
add
addr16
or
xorl
cmc
mov
imul
lock
imulb
gs
dec
in
scas
xchg
mov
dec
fldenv
nopl
outsl
lret
aad
xor
add
jne
cmpsb
push
jmp
fdivl
push
loope
push
adc
je
int3
push
mov
jp
xor
iret
xor
imul
lods
cltd
jnp
mov
push
pop
push
cmp
xorl
loope
mov
addr16
cmp
movsl
into
cmp
pop
sti
lret
inc
ds
lds
mov
and
leave
fimuls
jg
xchg
cmp
pushf
cld
xor
inc
mov
mov
push
add
lret
loop
cmp
or
jp
xor
jg
jge
push
mov
pusha
xchg
or
imul
cmp
test
enter
lock
pop
test
dec
sub
xor
adc
mov
or
ret
adc
xor
int3
scas
xor
cli
push
ja
lock
in
idiv
fwait
cmpsb
fildll
and
ret
cwtl
mov
mov
dec
dec
or
fisubs
xchg
ja
and
xor
test
push
fildl
aas
push
popa
out
push
adc
push
inc
inc
lret
push
lahf
mov
movsb
or
add
aas
add
jle
out
adc
aad
add
dec
cmp
mov
sbb
lahf
imul
ljmp
push
pop
rorl
fidivrl
mov
xchg
out
sub
or
outsb
jbe
add
push
gs
mov
ljmp
or
cmp
sbb
test
lea
lret
repnz
bound
sbb
jbe
mov
mov
fstps
call
fidivs
fwait
jne
lea
lods
jns
sub
sub
imul
lods
and
cli
add
addb
mov
add
xchg
and
xor
ljmp
sbb
mov
dec
pushf
pop
sbb
imul
xlat
mov
add
mov
jle
mov
dec
or
sbb
sbb
mov
xor
add
pop
cltd
js
fsin
dec
jbe
pop
sub
mov
jmp
movsl
sbb
cli
jg
ja
js
sbb
inc
dec
cmc
pushf
test
shlb
jns
push
bound
jp
jg
nop
mov
outsl
test
aaa
sti
dec
pop
sbb
push
sahf
fsubrl
push
subl
jo
daa
insb
ret
ljmp
cmpsb
popf
pushf
xchg
adc
insl
sbb
jp
cmc
cmp
test
test
hlt
or
sbb
in
daa
jg
push
and
imul
mov
fxtract
out
mov
sub
add
add
jg
inc
aas
orl
scas
rcr
jmp
pop
push
fnstsw
adc
inc
sbb
nop
stos
add
jmp
inc
cmp
sbb
sti
fs
mov
imull
mov
mov
fmuls
mov
jno
jmp
xlat
mov
jmp
sbb
pop
pop
fistps
adc
and
jo
loopnew
mov
add
insl
mov
mov
add
jecxz
insb
jmp
inc
lcall
or
jo
jecxz
insb
push
and
aaa
mov
les
mov
aaa
arpl
lea
pop
jne
inc
push
nop
lret
fldt
mov
or
xchg
add
loop
push
ficomps
or
mov
dec
pop
cmp
je
xor
push
push
push
adc
inc
andl
fidivs
decb
popa
jne
pop
adc
mov
les
mov
jne
std
popa
outsb
mov
sbb
mov
jecxz
add
jae
neg
rcrb
sbb
add
pop
setb
cmp
out
js
rorb
lret
jae
mov
mov
cmp
push
xorb
les
aas
xor
and
jmp
sarb
cmc
rorl
shrl
leave
iret
loop
mov
stos
cmpsl
cld
xor
jge
adc
sarb
push
sbb
push
imul
cmp
sub
je
xchg
dec
xchg
lods
ljmp
xor
jl
bound
inc
ret
push
scas
jecxz
idivl
cmpsl
cmp
cwtl
imul
mov
pop
pop
je
xchg
and
jnp
dec
fisttps
xor
rcrl
rcl
cmp
add
in
loope
jp
fsubl
mov
ret
iret
xchg
into
imul
pop
in
or
pop
aaa
mov
in
sbb
int3
popf
into
inc
js
mov
std
movsl
xor
cmp
jle
xor
mov
push
push
push
divl
rcrl
dec
sbb
call
jmp
outsb
xlat
int
fidivrl
lods
xchg
jp
lahf
sbb
sub
scas
or
xor
mov
pusha
lret
rolb
aaa
test
loopne
xlat
sbb
mov
fdivs
insl
mov
scas
sub
xchg
push
sarl
fimull
cwtl
les
cld
xor
push
dec
int
push
push
lock
mov
stos
stos
xor
dec
into
enter
sbb
add
dec
mov
insb
jg
pop
sub
popa
fisttpl
xchg
jbe
dec
ret
or
pop
scas
mov
pop
push
lock
mov
out
and
pop
enter
sbb
ds
das
icebp
imul
cld
cmp
lods
cmp
adc
ja
xchg
dec
or
mov
push
cld
into
sub
daa
sub
lahf
aaa
lea
aad
pop
shrb
jno
cwtl
loop
ret
mov
inc
inc
fprem
push
xor
sub
test
sub
nop
sbb
loop
btc
ja
loop
cmp
add
mov
pop
sarl
cmp
int3
jns
clc
bound
mov
insl
pop
push
mov
fnstcw
mov
or
mov
stc
test
jnp
cmp
xor
shll
ret
xor
andl
push
bound
out
jge
mov
mov
das
sar
fnstenv
stos
cmp
push
movsb
js
dec
stos
pop
inc
fsts
inc
test
pop
int3
sbb
add
cmc
aad
add
and
shll
je
cmp
push
daa
xor
sbb
hlt
inc
xchg
sarb
push
addb
jge
push
dec
sti
arpl
lret
jecxz
mov
adc
mov
jnp
out
fwait
test
or
inc
into
test
stos
test
jle
aad
cmpsb
add
leave
cmpsl
fcompl
inc
dec
ret
mov
or
cs
inc
lcall
pop
inc
sbb
sub
ljmp
lea
or
mov
mov
ror
cmp
out
cmp
jbe
lahf
xchg
jae
jl
xchg
add
sbb
mov
ds
mov
pop
addl
mov
ja
roll
inc
cmp
dec
push
and
shrl
inc
test
cmp
adc
loop
cmp
dec
leave
or
out
es
cmc
icebp
popa
pop
dec
pop
cli
ret
into
loop
cmpsb
hlt
push
fstps
daa
and
cmpsl
mov
rcrl
adc
push
add
cmpsb
es
push
push
inc
fs
sub
xchg
sub
xorl
orb
clc
mov
int3
mov
mov
cld
fwait
sub
cmp
xchg
sub
leave
lds
and
fnstcw
sub
jp
pop
push
push
mov
fidivl
daa
mov
pop
cld
mov
sub
mov
mov
stos
lea
rcl
mov
jg
adc
pop
dec
divb
lea
xchg
mov
aad
cmp
hlt
cli
jb
sbbb
test
mov
inc
cld
outsl
jl
cmp
mov
clc
xchg
gs
lods
mov
push
enter
push
aas
imul
cmp
fsqrt
xor
sbb
mov
data16
mov
addr16
scas
adc
push
pop
mov
cs
cmp
lea
dec
push
movsb
cltd
fnstsw
or
and
push
or
andb
and
mov
cld
and
dec
out
jecxz
loopnew
add
sub
pop
and
icebp
lds
and
sub
pop
rclb
mov
push
jl
jle
add
mov
lcall
test
push
jnp
test
std
test
pop
std
sub
mov
and
loope
xor
lods
out
add
mov
loope
in
repz
mov
and
lock
xchg
scas
sbb
out
into
sbb
mov
jns
in
pop
cwtl
mov
call
push
clc
push
popf
out
popa
pop
xchg
dec
mov
stos
push
loop
aad
hlt
andl
out
cmp
sub
jecxz
jo
push
imul
inc
pop
shlb
into
xchg
cmpsl
nop
sahf
lods
jb
cmp
push
and
pop
ss
sbb
lcall
push
lret
add
inc
jbe
ds
push
iret
pop
ret
fldt
pop
inc
sarb
pop
ja
add
inc
jmp
and
adc
inc
jmp
sub
jae
lret
insb
shlb
dec
icebp
adc
push
cli
add
fimull
daa
mov
aaa
push
ret
jg
pop
fwait
imul
and
les
dec
je
pop
rol
loop
out
clc
sub
and
jb
mov
dec
stos
or
ret
mov
xchg
mov
dec
and
push
push
cli
mov
sub
xchg
sbb
sbb
repz
int3
mov
jg
mov
movsl
adc
pop
or
ja
pop
mov
push
jecxz
lea
inc
fisubrs
mov
xchg
stos
mov
push
fisubrl
push
mov
mov
int
sbb
in
cmpsl
inc
push
mov
push
cmp
int3
mov
scas
into
dec
test
mov
and
in
repnz
mov
jne
loopne
ret
xchg
add
shlb
sub
ror
add
mov
icebp
dec
xor
mov
mov
int
add
push
adc
iret
int
sbb
inc
jb
mov
inc
add
ljmp
mov
mov
mov
push
out
les
jmp
jecxz
lret
xchg
adc
out
lods
dec
mov
sbb
adc
pop
adc
jbe
push
scas
cmp
aad
call
adc
inc
mov
js
je
push
jne
mov
add
mov
mov
push
adc
fstps
xor
sbb
jns
jb
adc
lods
mov
adc
aam
jne
jo
pushf
xor
pushf
adc
pop
xchg
adc
mov
in
cmp
push
mov
lahf
aas
adc
pusha
xchg
mov
cli
sbb
ljmp
arpl
push
lock
push
int
and
xchg
mov
mov
dec
pushf
sub
push
in
daa
ds
inc
inc
or
out
nop
inc
pop
movsl
dec
aam
int
dec
xchg
jb
or
fs
pop
xchg
sti
cmp
jmp
dec
lods
add
jns
dec
pop
lret
xor
xchg
cmp
xor
add
inc
sub
lret
mov
mov
push
iret
xchg
leave
out
ds
push
les
sub
push
subb
cmc
notb
adc
aam
lods
jb
fisttpl
imul
push
mov
and
mov
sbb
jmp
or
pop
mov
imul
and
mull
outsl
fstp
cmp
and
loope
xchg
into
test
inc
xchg
push
inc
mov
pop
adc
aaa
sbb
cmp
inc
mov
rclw
dec
ret
mov
jbe
lret
fs
adc
in
mov
rolb
je
pop
push
fbld
xlat
cmp
xor
pushf
mov
inc
cwtl
iret
test
out
ss
pop
popl
int3
and
mov
inc
cmp
jnp
shll
lret
push
aam
lret
sbb
fbstp
mov
push
sub
xor
fmulp
push
cmp
dec
test
addb
lret
fdivrs
outsb
mov
cmp
mov
dec
push
pop
mov
mov
pop
push
insl
or
addr16
mov
sub
aad
fisttpll
imul
int
bound
mov
leave
into
bound
sbb
arpl
xlat
mov
out
dec
mov
push
mov
xchg
ljmp
push
ja
inc
pop
fistl
dec
pushf
lcall
pop
xchg
cld
xchg
cmpsb
cmpb
cmp
rclb
out
sbb
mov
xchg
aam
scas
scas
sbb
add
cmp
mov
clc
jb
pop
sub
sub
dec
and
clc
pop
aas
pop
mov
arpl
xor
dec
jp
enter
mov
and
inc
mov
lahf
mov
or
push
out
pop
lds
in
mov
adc
dec
fiadds
xchg
sub
mov
daa
mov
fstl
and
iret
inc
stos
loope
pop
inc
sbb
adc
inc
xchg
and
mov
push
add
into
push
daa
pop
or
insl
xor
cwtl
xchg
fwait
jmp
fnstenv
cltd
adc
inc
popf
loopne
or
mov
fimuls
pop
bound
adc
mov
lcall
xchg
mov
cld
xchg
jnp
clc
cmp
xor
mov
sub
pop
and
stos
lods
call
push
mov
scas
or
inc
or
push
loopne
or
pop
test
pop
sub
fwait
dec
push
insl
fldcw
cwtl
imul
sub
cs
hlt
cmpsl
cmp
adc
xchg
stc
movsl
push
inc
mov
loope
adc
mov
shl
push
mov
xchg
add
sbb
mov
scas
inc
pop
jae
dec
mov
inc
push
jge
cld
cmpb
adc
jbe
pop
mov
cmp
jmp
inc
sbb
mov
pop
mov
lahf
pop
imul
clc
jmp
sti
pusha
mov
pop
mov
push
pop
jmp
push
rorb
lods
inc
jns
mov
jns
inc
js
gs
or
push
xor
enter
jno
jb
xlat
push
insb
push
mov
mov
xchg
cmp
sbb
cmpsb
xchg
push
xchg
outsl
xchg
in
push
pop
sbb
add
inc
fs
out
inc
xor
outsl
int
dec
dec
sub
subl
shr
pop
icebp
xchg
mov
jo
ds
sbb
jno
insb
stos
in
pusha
aam
jp
into
dec
inc
test
xor
xor
mov
mov
adc
in
int
rclb
add
loopne
mov
mov
mov
stc
imul
inc
ja
inc
data16
add
stos
mov
xchg
xchg
das
imul
xor
or
ds
dec
iret
jmp
inc
xor
sbb
das
mov
mov
pop
gs
push
ret
ds
std
and
out
inc
lods
cltd
pop
mov
mov
mov
je
mov
cmp
push
insl
xor
cwtl
add
cld
mov
mov
testb
sahf
xor
xchg
dec
sti
lahf
testb
sarb
jle
and
dec
lock
out
mov
pop
pop
call
xor
xchg
inc
outsl
and
cmp
mov
sub
mov
imul
or
test
cmp
jge
fdivr
lea
inc
cs
stc
adc
adc
test
stos
cmpsl
mov
push
add
inc
aas
jecxz
mov
fwait
popa
dec
mov
dec
shr
lret
addr16
test
jae
je
insl
ljmp
test
sbb
ja
popf
dec
jns
jmp
dec
imul
pop
sub
add
push
mov
and
sbbl
and
mov
adcl
push
in
jecxz
mov
xchg
scas
int
jle
jmp
pop
int3
dec
je
sub
cltd
out
mov
sub
rcr
mov
call
gs
sbb
jecxz
mov
pop
adc
add
pop
les
mov
out
scas
addr16
cmp
push
dec
xchg
iret
pop
xor
sbb
aaa
test
sub
lods
push
jl
aam
popa
push
aam
out
mov
mov
cmp
add
ljmp
nop
cmpsl
xchg
orl
push
xchg
mov
sti
roll
xacquire
lea
dec
clc
es
mov
dec
stos
mov
or
cs
mov
and
mov
dec
mov
es
in
repnz
subb
stos
xchg
pop
gs
scas
inc
testl
push
pop
push
in
std
xor
ret
test
aam
inc
out
addr16
cmp
lret
mov
rcrb
sub
scas
sbb
cmc
mov
out
sbb
jge
lea
fwait
push
inc
mov
adc
popf
loope
mov
leave
in
xchg
push
xor
sbb
in
jecxz
subl
mov
rcll
push
mov
shrb
mov
adc
nop
adc
inc
fisubrl
leave
ljmp
std
mov
mov
add
xchg
mov
sbb
shll
idivl
adc
mov
loop
xchg
xchg
test
jg
aad
adc
cmpsl
add
or
in
cmp
push
dec
or
popf
xchg
jo
adc
mov
inc
orb
adc
adc
and
pop
push
or
xchg
leave
outsb
popf
or
push
nop
ret
subl
fadds
inc
insb
cmp
insb
sahf
ss
repz
pop
xchg
sbb
mov
fwait
and
xchg
pop
add
or
and
jae
in
aad
jo
and
add
shll
xor
inc
cld
xchg
ss
ret
out
inc
clc
xor
jle
loop
dec
data16
sub
adc
push
es
and
mov
mov
sub
out
es
dec
mov
push
enter
sub
add
and
test
xor
fistpll
add
jb
and
fs
pop
dec
int
loopne
vshufps
aas
adc
jb,pt
sbb
out
push
add
nop
ficoms
mov
pop
jno
sbb
enter
ja
shrb
cmp
xor
adc
cmp
mov
xchg
sarl
stc
loopne
dec
addl
mov
insb
pop
repz
dec
sbb
mov
jle
je
aad
xlat
ds
xchg
push
movsb
pop
lahf
jp
or
out
inc
addr16
xchg
jno
jl
and
inc
es
cmp
je
test
xchg
or
add
test
inc
out
mov
leave
je
or
dec
cmp
push
and
popa
and
mov
push
scas
xlat
and
jg
xor
mov
fbstp
xchg
popa
mov
pop
sbb
cld
ret
push
pop
sub
aas
jl
gs
iret
incb
lods
pop
int
es
push
loopne
pop
les
les
gs
es
pop
inc
jo
sub
mov
mov
push
jl
in
xchg
out
jmp
pop
sbb
fadd
pop
emms
repz
cmp
or
int
dec
pushf
jbe
jo
stos
lods
icebp
sub
jne
into
or
in
xchg
mov
lret
into
loop
xor
pop
jns
xor
shll
cmp
aas
bound
add
enter
fcmovnu
and
adc
mov
jo
shlb
push
xchg
rcr
mov
sub
outsl
inc
test
pop
pusha
cwtl
push
in
in
xor
arpl
mov
in
pop
xchg
push
test
mov
xchg
leave
dec
popa
mov
aam
aad
mov
mov
fs
lds
xchg
cmp
jge
pop
push
xchg
xor
leave
mov
xchg
inc
imul
jg
mov
icebp
fbld
jno
popf
hlt
adcl
pop
cmpsl
sub
pop
jle
or
addr16
mov
rclb
sub
fmuls
test
int
inc
cmpsb
push
xlat
mov
pop
ret
repnz
sbb
cmp
push
aaa
sbbb
sub
pop
insl
mov
adc
xchg
ja
mov
rolb
push
xchg
add
sub
mov
orb
int
push
in
and
xor
mov
std
mov
and
dec
xor
xchg
nop
sub
and
push
sbb
gs
pushf
mov
fwait
mov
pop
mov
adc
or
bound
cmp
lds
aad
mov
incb
adc
lea
inc
imul
hlt
sti
in
add
je
inc
push
mov
das
mov
and
repz
lods
sub
lock
jmp
xor
fstpl
xor
inc
out
out
pop
lds
mov
mov
add
sub
insl
inc
jnp
xor
inc
inc
jo
daa
push
mov
mov
pop
stos
sub
es
cmpsb
dec
and
fsubrs
xlat
mov
scas
data16
inc
xchg
sub
fdivl
and
dec
sub
in
into
gs
pop
fstpl
jne
pusha
test
jae
cmpsl
int3
fidivrs
pop
push
mov
sbb
fs
inc
aam
xchg
es
loopne
cmp
sbb
or
test
pop
push
jnp
sbb
shl
lods
fnstcw
jae
inc
call
fnstcw
mov
jecxz
fdivs
pop
rorb
inc
inc
dec
sub
cmp
xor
sub
mov
push
push
xchg
xchg
test
stos
movsl
push
xchg
test
hlt
test
add
adcl
gs
fstpl
xor
repz
sbb
cmp
push
and
jbe
mov
lahf
dec
aam
cmp
mov
or
xlat
push
or
rep
sub
add
cmp
divl
in
call
mov
pop
push
outsl
jb
mov
in
roll
cmp
inc
fstpt
test
cmpsl
mov
lret
insb
insl
xchg
data16
js
movsl
daa
jo
and
jae
aaa
fisubl
push
inc
aad
add
lcall
pop
xchg
icebp
pop
mov
leave
xorb
lahf
fistps
or
in
cwtl
adc
push
cmp
push
out
ja
cmp
jbe
out
outsb
orl
mov
inc
xorb
pop
xlat
push
pop
jb
cwtl
jmp
rcl
fsub
add
jle
fabs
mov
adc
xor
mov
add
jno
or
mov
pop
or
je
mov
xor
add
jle
imul
test
xor
xor
or
aad
cltd
jae
jmp
icebp
and
adc
mov
out
pop
add
daa
jge
sahf
push
xchg
adc
sbb
sbb
mov
bound
cmc
mov
lds
pop
or
jno
shll
leave
xchg
pop
in
jp
cmc
stc
xor
add
clc
aaa
stos
gs
mov
cmp
xor
mov
or
push
popa
jae,pt
mov
or
mulb
pop
enter
icebp
pop
add
arpl
imul
and
sar
lcall
xchg
stos
imul
jae
in
mov
xchg
in
data16
movsl
mov
dec
subl
ja
add
adc
mov
popl
fcompl
sbb
in
inc
stos
popf
cmp
lret
lahf
xchg
mov
jbe
inc
cmp
dec
adc
inc
xchg
fldt
inc
push
subb
sbb
or
xor
adc
and
cmp
and
sbb
lahf
cmp
addl
sbb
in
lcall
mov
and
insb
xchg
stos
push
pop
out
xlat
sbb
mov
sti
shll
cmp
shl
mov
or
or
jle
adc
dec
pop
xchg
rorl
xor
push
lret
loop
dec
je
ret
adc
sbb
cmp
cmpsl
jg
jb
adc
mov
jecxz
dec
xor
dec
xor
cltd
mov
adc
and
mov
mov
add
jmp
lds
mov
cmp
clc
outsb
push
dec
loope
mov
xorb
push
mov
fcmovne
adc
test
std
imul
inc
adc
loop
mov
jno
fisttpll
rcll
out
lret
sahf
out
jns
dec
add
outsl
aas
aad
adc
rcll
popa
rclb
in
pop
dec
xor
xchg
mov
pop
mov
in
jg
mov
mov
pop
int3
testl
lcall
pop
jbe
adc
mov
and
call
pop
andps
push
stos
imul
sbb
int
push
dec
pop
push
sub
dec
shrb
or
jmp
pop
movsl
sub
es
pop
iret
add
les
inc
adc
fsubp
aad
dec
cmp
test
or
mov
repz
push
call
mov
fwait
xchg
lods
pushw
mov
mov
cmp
sbb
sbb
jg
lcall
cmpsl
jg
imul
mov
xchg
add
call
push
test
push
cmc
sub
fadd
sub
int
pop
mov
lock
fdiv
call
sahf
repz
pop
aam
outsl
into
scas
mov
jbe
jb
and
jo
imul
xor
inc
out
mov
push
test
push
aam
sub
dec
pusha
xchg
test
xor
pop
aas
imul
jl
cmpsb
std
sub
stos
pop
jne
clc
inc
mov
lret
add
mov
fcmove
pop
pop
jle
hlt
cli
inc
popf
fnstsw
adc
fnstenv
inc
add
pop
cmc
ror
pop
jmp
xchg
or
loope
cmpsb
push
shlb
jmp
push
add
ret
jae
xor
sub
in
cmpb
adc
pop
dec
add
jns
mov
int
adc
into
test
int
xor
inc
inc
enter
rorl
dec
and
cmp
jns
jg
push
mov
cmp
push
mov
popf
nop
sbb
pop
es
sahf
cwtl
into
inc
mov
cs
arpl
xchg
sub
push
mov
dec
into
mov
int
adc
sbb
shll
and
bound
loop
sbb
lds
movsl
sbb
les
cmp
cmpsl
mov
dec
xlat
cmp
xchg
push
shl
pop
loope
cmp
insl
sub
dec
sbb
popa
jo
cmp
dec
in
shll
call
mov
data16
mov
iret
jmp
add
sub
cmp
addr16
dec
iret
das
aad
add
lahf
xor
xchg
ja
mov
jp
shrb
fistl
pop
or
lahf
stos
inc
sahf
cmpsl
pushf
sti
out
sub
mov
ja
aaa
lock
mov
xchg
xor
fmuls
dec
push
push
xchg
pop
mov
mov
sbb
or
xchg
cmp
sub
fwait
movsl
and
cmpsb
clc
fld1
lock
lahf
mov
daa
popf
cwtl
pop
call
add
fwait
leave
push
or
scas
cmpsl
mov
icebp
out
xchg
cmp
icebp
bnd
lods
push
and
shl
mov
inc
decl
nop
pop
dec
inc
xor
dec
int3
dec
out
dec
pop
jl
jbe
sub
cmpsl
mov
sti
xor
jnp
aam
add
mov
mov
jge
ja
mov
and
nop
sbb
push
aam
cmp
mov
adc
pop
les
test
pop
insl
and
pop
or
cmp
mov
xor
cltd
jbe
cmp
inc
push
stos
or
inc
xchg
mov
or
xadd
pusha
pop
or
or
mov
fwait
dec
inc
pop
pop
adc
mov
mov
xor
jb
mov
sarb
dec
arpl
loope
dec
sub
inc
in
test
xchg
mov
mov
xchg
jge
cmp
std
pop
lahf
movsb
lret
push
adc
push
cmpb
popf
xor
int
shlb
mov
push
ret
or
jno
sbb
bound
xchg
shll
scas
or
sti
jg
adc
rcl
xor
gs
rcll
lcall
mov
outsl
mov
in
imul
fistps
pop
sub
clc
fwait
xor
sbb
push
cmc
stos
xchg
dec
shr
in
push
jbe
cmc
pusha
xchg
sub
mov
stos
xor
ret
pop
cs
xchg
add
dec
xchg
mov
cmp
nop
lods
dec
cmpsb
int3
push
sub
sar
lcall
jae
les
jecxz
jb
jbe
xor
fwait
mov
testb
mov
and
push
or
and
dec
jmp
and
cmp
out
test
gs
out
data16
add
imul
repz
mov
shrl
xlat
and
cmp
dec
adc
jg
pop
leave
pop
ret
subl
sar
xlat
xor
add
xchg
push
cltd
ret
xor
inc
or
pop
dec
sbb
sub
mov
rcrl
pusha
loope
inc
fs
cmp
push
outsl
and
and
mov
jg
nop
mov
xorl
ljmp
dec
imul
and
rcrb
pop
cmp
push
push
sbb
sbb
es
xchg
ret
or
dec
insl
fs
mov
nop
xchg
xor
or
mov
fwait
mov
leave
jbe
push
int3
push
push
jbe
ljmp
inc
dec
jbe
mov
or
push
fidivrs
mov
fistpl
pop
mov
sub
push
les
repz
dec
add
popf
sbb
shl
add
sbb
test
xorl
cmp
or
orb
and
lret
aad
jnp
in
or
in
xchg
adc
scas
mov
or
scas
adc
adc
and
test
cmp
lretw
mov
cmc
add
cmpsl
jecxz
jecxz
jmp
mov
inc
scas
push
or
or
cmc
in
adc
fnsave
cmp
ja
stc
adc
fnstsw
dec
sbb
mov
scas
inc
dec
lret
aam
bnd
and
outsl
repz
rcrb
jecxz
outsl
fcmovb
sbb
lea
mov
sub
lahf
xor
lret
pop
popa
mov
insb
cs
push
sub
movsl
jo
lock
lods
in
inc
rcl
jg
add
mov
and
push
subb
mov
jnp
rorb
lds
out
mov
loop
dec
in
sbb
in
mov
pop
mov
loopne
fs
test
scas
jb
data16
fidivrs
das
loope
repnz
ja
cli
jmp
scas
dec
dec
andb
mov
and
aad
inc
aas
addb
push
mov
aad
addr16
push
xchg
sub
cmpsl
ss
outsl
lahf
icebp
out
popf
sahf
sti
mov
dec
addr16
scas
pop
insb
dec
push
sbb
in
int
popa
lods
data16
xchg
notl
adc
lods
inc
movsl
les
les
xchg
add
and
xor
popa
sub
fdivrl
inc
fmulp
sub
xchg
sbb
dec
das
insb
call
stc
mov
aam
push
mov
lahf
or
enter
scas
push
xor
mov
inc
and
test
sub
sub
push
adcb
mov
test
or
popa
ror
push
out
in
clc
out
push
fldcw
repnz
sbb
ds
or
aaa
setae
jp
call
notb
out
and
ficompl
nop
in
push
jg
fimull
jo
jo
xor
sub
jae
pop
mov
add
in
in
mov
jmp
lods
das
aam
in
je,pn
push
pop
and
jge
lods
ds
stos
loope
cmp
std
xor
add
and
daa
addr16
fsubrl
push
test
dec
rcrb
enter
mov
pop
xor
ret
roll
repnz
loop
ljmp
insb
xchg
sub
jp
cs
in
rclb
xchg
cli
push
jno
mov
test
mov
xchg
test
ret
push
lods
in
mov
fistpl
mov
lods
sub
dec
mov
pop
stc
jge
es
add
int
cmp
stos
jecxz
mov
pop
adc
or
mov
addl
popa
test
xor
push
mov
inc
fsubl
loopne
lods
xchg
mov
sub
pop
push
fidivrl
mov
mov
out
sbb
test
xor
lods
std
push
jnp
add
jp
pushf
adcl
mov
fs
mov
fdivrs
clc
mov
cmp
cmp
pushf
inc
arpl
push
clc
or
xchg
dec
insb
xor
mov
sub
sub
dec
pop
mov
mov
repnz
xor
bound
dec
lods
test
pop
or
and
aad
fs
insl
cmpl
repnz
scas
pop
jae
in
orb
popf
out
or
das
push
pop
cli
rclb
scas
add
cli
pop
pusha
cmpb
inc
push
repnz
xchg
mov
inc
sti
add
xchg
mov
stos
inc
fisttps
ficoml
inc
pop
lock
sbb
cltd
xorl
test
pushf
bound
dec
out
shll
cmpsb
shrb
and
ja
jo
test
repz
adc
data16
inc
ja
ss
adcl
jb
fwait
out
xor
ja
push
repnz
divb
aad
mov
pop
fildl
pop
ljmp
adc
in
mov
mov
or
nop
xchg
push
fdivr
insl
jns
rorb
or
sti
push
ja
inc
inc
push
or
adc
fldl
xor
dec
push
ss
fldcw
push
cwtl
pop
int
fsubrs
mov
jg
cmc
mov
mov
sub
mov
lcall
out
push
aas
jecxz
icebp
xor
inc
cmp
dec
pop
jb
popf
daa
loopne
gs
push
scas
sub
jns
and
sbb
lods
jmp
mov
mov
adcl
aam
fwait
popf
das
loop
xchg
js
stos
test
mov
mov
inc
rclb
jb
inc
pop
in
sbb
data16
lds
xor
iret
dec
xchg
cltd
insl
call
imul
mov
hlt
repz
or
cli
xchg
push
xchg
sbb
popf
sub
add
mov
mov
and
and
pop
push
das
fprem
pop
jns
loop
jbe
cltd
inc
push
sub
cmp
nop
mov
inc
and
mov
inc
inc
mov
repz
ficoms
jbe
and
test
jecxz
cmp
ret
adcb
mov
int3
mov
stos
inc
clc
pusha
jo
dec
and
fisubrs
aas
push
inc
in
aas
push
mov
mov
es
shll
daa
or
sub
xchg
punpckldq
cmp
push
mov
mov
insb
push
mov
mov
push
imul
lea
loop
sbb
iret
lahf
repz
jne
dec
iret
ds
push
icebp
mov
push
imul
mov
fnstcw
inc
or
icebp
pop
xor
dec
jo
sbb
loop
mov
dec
xor
out
cld
out
pusha
sbb
cli
or
fadds
subl
rcl
mov
xchg
lock
mov
and
outsl
fsubr
jnp
xchg
xor
mov
gs
mov
icebp
or
push
into
xchg
fwait
clc
aad
cmpsl
mov
icebp
movsl
xchg
test
cmp
aad
lds
pop
out
mov
jnp
mov
mov
mov
adc
je
mov
out
cvttps2pi
lret
fisubl
out
dec
jl
out
testl
jns
mov
fnstenv
pusha
stc
and
movsb
addr16
popa
aaa
sarl
popf
cmpsl
out
mov
enter
cmp
mov
add
dec
insl
mov
mov
stos
addl
jmp
pop
pop
inc
xchg
popa
or
das
pop
fisubrs
push
cmpsb
pop
shl
nop
mov
movsl
rcr
enter
or
sbb
insb
das
xor
jnp
cmpsl
sbb
xchg
mov
sub
or
dec
cmp
das
add
pop
adc
pop
lahf
add
or
es
inc
scas
movsl
sub
pop
mov
mov
jle
test
aad
jae
cmpsb
stos
cld
lcall
or
lods
ja
arpl
repz
pop
add
sbbl
mov
cmp
jg
or
stos
gs
call
fldt
sbb
dec
sub
adc
mov
xor
cmp
mov
fiadds
adc
mov
repnz
sbb
jmp
std
jnp
push
adc
and
ja
inc
push
outsl
lock
orb
fs
popf
dec
dec
addr16
dec
shll
stos
mov
inc
test
inc
loopne
xor
scas
cltd
inc
lea
dec
adc
sub
out
jnp
loopne
int3
adc
xchg
push
fistpll
pop
jns
lahf
data16
inc
or
push
or
xor
aas
xor
test
adc
xchg
int3
arpl
outsb
pop
movsb
pop
xor
add
cli
xchg
pop
cmp
cltd
add
pop
mov
adc
mov
out
sarb
pushf
xchg
or
into
add
pop
iret
mov
or
pushf
cmpsb
push
int3
adc
inc
aaa
loopne
je
pushaw
aaa
jmp
imul
xor
in
xchg
lods
jns
mov
rclb
aas
stos
xor
scas
scas
iret
adc
dec
mov
adc
icebp
mov
icebp
jmp
fists
sub
sub
add
mov
cmp
push
push
aas
mov
sub
pop
push
outsl
mov
leave
mov
xor
int
das
push
in
out
adc
sub
in
cmp
mov
movb
pop
sub
imul
lds
nop
inc
dec
icebp
les
repnz
pop
and
sahf
outsl
aaa
mov
pop
sbb
cmp
loop
fcos
repnz
mov
pop
dec
shl
xchg
or
mov
jb
and
lret
xor
adc
inc
clc
inc
leave
shlb
or
cmc
jle
test
push
inc
mov
push
lahf
inc
subb
add
jecxz
mov
jo
push
rolb
sub
mov
out
out
lods
loopne
bound
jl
xchg
add
addl
nop
and
bound
sbb
jg
push
or
cmp
and
shll
add
mov
idiv
jbe
aad
sbb
cwtl
std
hlt
pop
mov
jns
add
ja
ljmp
push
les
and
sbb
inc
mov
imul
pop
popa
xor
fwait
adc
xchg
insb
sub
add
sbb
push
out
xchg
cmovl
cmp
xchg
es
pop
or
add
aaa
xchg
inc
sub
sti
mov
int3
mov
ss
aad
xchg
in
sahf
push
in
pop
jg
push
stos
cmpsb
adc
mov
pop
xchg
jae
scas
andl
fdivrl
pop
jmp
mov
push
pop
push
or
lcall
cmp
cltd
or
stos
test
pop
inc
mov
scas
and
lods
addb
test
xchg
adc
mov
pop
stc
mov
fists
or
jae
xor
pop
xor
sarl
mov
xlat
adc
call
sti
jmp
jns,pn
cmpsb
mov
out
sti
pop
push
jo
ja
or
dec
test
out
ror
call
ja
loope
das
push
fdivrl
in
adc
pop
push
loop
rol
cmp
lods
insb
aaa
fstp
std
out
adc
push
rol
outsb
cmovge
dec
pop
jns
pop
movsb
je
adc
aaa
jle
mov
cmp
sub
push
daa
xchg
out
mov
fimuls
int3
pop
outsl
push
fiaddl
pop
dec
outsl
std
inc
rclb
lret
daa
mov
add
pop
xlat
adc
jp
inc
or
mov
xlat
outsb
in
push
les
mov
sbb
faddl
notl
sahf
mov
pop
movsl
inc
lahf
nop
movsb
pop
mov
out
mov
std
shlb
adc
sbb
sar
repz
cmp
push
cmp
xor
fidivl
jo
int3
push
out
sbb
aad
jo
int
and
or
jp
push
lret
or
or
test
xorl
add
fcomps
iret
dec
pop
push
cmp
cmp
pop
push
mov
sub
shll
adc
mov
or
mov
add
pushw
movsb
repz
inc
aad
rcr
sub
mov
out
psubq
nop
iret
dec
or
in
mov
inc
jl
dec
or
clc
iret
in
cwtl
pusha
push
addr16
jp
mov
jb
lahf
mov
sbb
aad
aam
mov
out
sub
call
dec
pop
inc
cs
adc
lock
rcrl
jp
dec
and
lcall
jo
pop
cmp
pop
ret
lret
pusha
xchg
jns
sti
out
mov
push
dec
cmp
push
frstor
cmpsb
add
mov
pop
in
add
inc
mov
into
mov
lea
add
and
cmp
xor
andb
sub
mov
jecxz
push
test
popa
popf
sbb
push
push
inc
sub
scas
xchg
inc
aad
popa
mov
or
mov
add
mov
test
test
out
lock
iret
xor
imul
fnstcw
jae
arpl
cld
pop
xor
xchg
fldl
xlat
dec
mov
cli
bnd
pop
push
aas
subl
inc
aaa
outsb
or
setb
or
dec
iret
rsm
sbb
imul
sbb
inc
int
or
movsl
enter
scas
push
cmp
mov
add
and
jns
dec
popa
xor
cmpsl
jg
int3
pop
cmp
or
test
cltd
cltd
xorl
jmp
pop
adc
fnstenv
add
inc
bound
dec
add
xchg
xchg
cmpsb
or
inc
cmp
mov
lods
faddl
mov
xor
dec
repnz
push
dec
leave
push
cwtl
jae
sbb
out
subb
mov
lret
inc
sub
dec
daa
mov
xchg
fldl
dec
jg
add
xchg
xor
out
or
and
jge
xor
ss
leave
cmp
mov
xor
sbb
int
dec
ja
rclb
mov
fs
xchg
imul
outsl
dec
js
movsb
ss
lea
jl
insl
jns
sti
and
das
and
loop
cmp
adc
inc
fists
adc
push
imul
iret
xlat
mov
adc
divb
mov
xlat
aad
call
addl
stos
or
cmp
insl
mov
pop
or
sbb
scas
dec
aam
jae
mov
xchg
adc
fdivs
popf
add
jp
repnz
push
outsl
jne
scas
inc
push
cmp
fists
stc
sarl
arpl
mov
sub
or
xor
outsb
dec
int
sub
xchg
frstor
testl
adc
bound
daa
push
adc
and
pop
xor
mov
xchg
popl
mov
mov
daa
mov
push
cs
out
adc
xor
cld
add
lahf
rol
scas
out
idivb
mov
rcr
mov
leave
or
sarl
ss
stos
add
in
xchg
hlt
outsl
roll
and
sar
dec
or
inc
out
push
ss
xor
jns
fwait
cmc
imul
or
push
xchg
in
sarb
popa
iret
jmp
mov
ja
enter
cmp
stos
adc
data16
xchg
mov
push
cmpsl
pop
xchg
dec
push
idivb
and
xchg
sbb
sbb
frstor
dec
pop
mov
es
lea
mov
push
addb
adc
cltd
push
fnstcw
lret
pop
test
out
mov
xchg
mov
ficompl
cmp
arpl
xor
adc
dec
push
dec
mov
out
pop
sub
mov
mov
or
jecxz
aas
enter
push
cmp
add
add
out
and
adc
cwtl
lods
lahf
int
adc
xorb
je
fwait
pop
push
lods
jb
jl
mov
jo
ficomps
lahf
loop,pt
push
sahf
scas
loopne
ljmp
test
add
fstl
sbbb
xchg
jmp
push
mov
mov
push
xor
jns
and
mov
or
loopne
xchg
call
pop
xchg
testl
ja
repz
insl
lods
pop
fs
dec
cli
or
popl
xchg
sub
mov
aad
nop
fsubs
and
pop
mov
xchg
mov
adc
imul
cmc
pop
iret
data16
xchg
popa
decb
and
push
jle
mov
pop
mov
lds
push
sarb
iret
nop
aaa
jg
ret
faddl
fsubs
int3
sbbl
into
adc
mov
fdivs
mov
sti
test
jp
xor
daa
jne
dec
imul
cmp
lods
xor
or
ja
dec
outsb
mov
pop
stos
cld
sub
sti
cmp
inc
dec
rol
push
pop
adc
or
and
rclb
xchg
add
adc
dec
stc
pop
pushf
mov
pop
cmp
push
xor
clc
add
xor
call
jno
movsl
dec
pop
dec
jo
xchg
xor
lahf
inc
mov
inc
fisubrl
add
aam
hlt
dec
dec
add
flds
mov
adc
inc
setae
fs
mov
dec
xchg
or
adc
scas
or
enter
push
stc
sbb
cltd
inc
jmp
dec
pop
pusha
fidivs
xor
cmpsl
imul
mov
xchg
inc
test
popa
cmpsb
popa
and
push
repnz
enter
or
bound
ja
xchg
mov
movsl
push
sbb
pop
mov
lret
push
loopne
insl
pushf
std
adc
mov
sbb
jbe
and
xchg
cmp
mov
repz
mov
nop
enter
jbe
es
add
sbb
leave
adc
lds
ljmp
popf
pop
mov
out
mov
sub
sti
scas
aad
arpl
jne
pusha
cmp
mov
ficoms
aad
out
shrl
ret
sub
pop
push
addr16
das
sub
and
mov
jb
push
inc
jns
push
mov
cmp
and
add
movsb
int
or
pop
pop
jmp
xchg
sub
mov
movsl
daa
dec
icebp
sti
jp
cmp
sub
jbe
jno
shlb
xchg
jns
inc
jo
push
into
leave
in
enter
xor
icebp
lahf
data16
je
inc
in
and
mov
sbb
dec
rclb
test
jmp
mov
test
cmp
jnp
jl
addr16
cmp
bound
add
mov
fnsave
test
or
xchg
mov
pop
jns
aaa
mov
dec
or
fsubl
pop
es
sbb
sbb
dec
call
lods
fs
imul
push
ljmp
cltd
scas
lock
inc
mov
daa
xchg
dec
jno
in
inc
inc
iret
push
and
ja
mov
jnp
lods
adc
xor
popf
icebp
pop
aaa
jl
push
xchg
outsb
hlt
es
ljmp
sbbl
mov
stc
es
jecxz
mov
pop
insb
dec
psrlw
test
enter
pusha
pop
hlt
sti
jne
shlb
movsl
test
test
or
stos
and
xor
cmpsb
adc
bswap
pop
and
adc
dec
push
sbb
or
shll
adc
bound
push
inc
cmp
and
pusha
hlt
jne
out
inc
int
mov
add
inc
out
cmp
int
inc
sub
pop
je
add
sbb
inc
xchg
out
lcall
lret
ficomps
nop
hlt
pop
jbe
fs
seto
xchg
xor
add
xchg
fidivrl
movl
mov
ret
cmp
xchg
out
push
mov
and
aad
scas
aam
mov
das
inc
repnz
push
mov
adc
aaa
hlt
filds
cld
gs
dec
or
stos
pop
mov
xchg
dec
cmp
pop
and
add
or
or
enter
mov
rcll
cltd
out
mov
xchg
daa
sub
dec
add
jmp
stc
pop
mov
jne
mov
xor
dec
lret
stc
dec
dec
cltd
xchg
test
jl
dec
inc
xchg
sbb
jl
faddp
insl
inc
mov
sub
mov
add
adc
add
in
popa
das
mov
dec
cs
mov
xchg
jbe
leave
insl
ja
xor
loope
dec
ljmp
jecxz
sbb
mov
fwait
sub
data16
pop
push
orl
jb
push
push
inc
adc
sahf
idiv
mov
je
sub
std
rol
mov
jne
ja
xlat
push
pop
pop
shll
imul
hlt
fcoml
dec
add
test
xor
enter
ja
pop
les
mov
jo
and
fwait
cmp
call
insl
xchg
jmp
inc
fcmove
jecxz
jb
pop
pop
cmp
dec
leave
stos
sbb
cmpsb
push
cs
shlb
push
add
add
sub
in
pusha
push
lods
lret
in
mov
dec
push
mov
fmull
pop
ds
jl
push
push
loope
adc
pop
movsl
out
inc
xor
sbb
pop
popf
and
hlt
movsb
shll
or
fisubl
sbb
hlt
inc
push
mov
call
and
inc
pop
mov
jo
fstpl
in
xor
div
jnp
mov
mov
cli
ret
cmpsb
adc
dec
inc
outsl
push
rcrb
cmp
aam
outsb
xchg
rcl
and
jae
xlat
inc
cmp
push
pop
dec
dec
mov
ss
inc
test
cmpsb
imul
and
xchg
cmp
and
and
inc
stos
add
mov
out
and
nop
clc
enter
ror
dec
xchg
imul
mov
aam
ljmp
inc
out
adc
sbb
in
scas
push
cmp
inc
xchg
jecxz
push
push
shl
mov
lret
outsl
adc
shr
push
repnz
sub
cmp
sbb
ljmp
mov
pop
push
xor
imul
push
push
dec
andl
ds
sbb
daa
mov
xchg
outsl
dec
ret
xor
push
adc
dec
in
nop
aam
in
or
xorb
dec
insl
pop
pusha
loop
mov
in
mov
loopne
aaa
sbb
sbb
xor
cmc
test
mov
pop
mov
xchg
jg
cltd
inc
mov
or
aam
stos
outsb
jl
bound
jae
fisttps
scas
div
iret
inc
pop
stc
arpl
mov
arpl
add
dec
lods
adc
mov
lods
ret
sarl
cltd
ss
xchg
mov
and
jg
dec
sub
jg
push
sar
xchg
xchg
jno
cmpsb
sbb
sbb
in
mov
daa
pop
jmp
pop
dec
mov
sub
icebp
repz
or
mov
je
pop
xor
jb
dec
out
pop
add
call
or
push
mov
std
push
sub
enter
mov
jp
andb
and
sti
fs
sub
pushf
loope
mov
stc
xor
cmpsb
and
xchg
or
imul
in
mov
rorb
push
adcb
or
out
pop
je
mov
xlat
in
dec
jmp
testl
sbb
push
add
dec
mov
shr
mov
fstl
mov
mov
xor
mov
xor
test
std
push
stc
or
shrw
or
mov
xor
ror
psraw
sub
je
data16
push
inc
outsb
sbb
clc
sub
jbe
leave
pop
mov
mov
xchg
xchg
test
pop
jmp
ljmp
nop
enter
mov
data16
jb
lock
or
test
ret
xorb
and
jae
cmp
test
push
loop
js
xchg
xor
or
mov
ja
push
mov
fs
and
push
xor
or
sarb
and
add
jo
popa
sub
or
mov
mov
rcrb
hlt
or
jbe
xchg
mov
or
pop
icebp
and
lahf
push
xchg
pop
add
add
into
test
rcrl
sbb
jns
data16
ss
out
jp
lods
arpl
aaa
adc
xchg
push
mov
xchg
das
outsb
aad
or
push
mov
call
popa
mov
imul
fwait
cmc
sub
into
push
repz
fs
js
movsl
jle
push
xor
lods
icebp
cmp
addb
hlt
nop
mov
flds
xor
adcb
push
repnz
cmp
dec
dec
fildl
xchg
push
pop
cmp
loopne
lret
lea
clc
mov
sub
popf
addr16
out
push
cmpsl
mov
mov
imulb
jne
mov
ss
inc
mov
xchg
lds
mov
and
stc
hlt
inc
pop
cmpl
jnp
and
std
outsl
jp
imul
test
xchg
jle
or
mov
jb
orl
add
rol
pop
pop
mov
adc
add
push
jge
push
pushf
sbb
or
lahf
push
push
sbb
pop
scas
fimuls
push
mov
imul
xchg
fdivrs
jno
ds
inc
lods
popf
aaa
mov
cli
in
xchg
pop
mov
xchg
dec
mov
fimuls
ficoml
out
sarl
rorb
cmc
dec
dec
and
add
or
push
repnz
lock
pushf
pop
jge
or
sub
pop
dec
std
add
push
push
stos
push
mov
sbb
repnz
xchg
repnz
and
js
lahf
dec
lods
mov
xor
int3
jb
or
in
xchg
mov
mov
ss
ljmp
dec
mov
adc
cmc
add
push
popa
frstor
fwait
lahf
jp
dec
int3
adc
jl
subb
in
add
and
fcoml
je
cmp
mov
pop
lock
cli
scas
adc
push
dec
repnz
mov
addb
push
lret
stc
or
push
fcoms
cmp
ret
jp
cmp
in
or
test
pop
mov
stc
mov
test
and
jg
xchg
add
inc
ljmp
loopne
cld
pop
inc
icebp
ja
mov
mov
inc
ficoms
sti
cli
cld
mov
mov
test
test
add
dec
testl
in
lret
cld
cmpb
mov
gs
pusha
add
jmp
stos
fadd
xchg
rcrl
mov
jp
fs
cmp
pop
cmpsl
test
popa
sub
ja
mov
enter
or
int
cmp
repz
and
jo
ds
cmp
outsb
jp
push
inc
push
xrelease
and
int
fildl
cwtl
popa
cs
daa
jl
push
inc
popa
pop
out
out
jne
daa
aaa
daa
mov
mov
inc
fcomip
sbb
lock
push
outsl
mov
pop
dec
jno
ret
jg
sub
cmp
push
hlt
and
mov
adc
adc
repnz
pop
and
jno
lahf
aad
inc
imul
mov
cmp
insl
xor
sahf
and
push
inc
sbb
mov
in
daa
popf
adc
xchg
imul
addr16
lret
loop
dec
xchg
clc
xor
clc
inc
jae
jnp
push
sub
das
adc
cld
cmp
or
push
sub
stos
mov
leave
sti
jl
pop
dec
cmpb
mov
out
aad
lret
jmp
mov
cmp
inc
ret
fdivrl
jo
push
faddl
arpl
movups
sbb
or
int
andb
inc
or
jns
filds
outsl
and
call
or
add
jbe
pop
loope
dec
incb
sahf
xchg
movsb
pop
sub
push
and
mov
pop
jmp
out
into
imul
loopne
shlb
imull
sub
mov
clc
ja
dec
mov
jno
movsb
xchg
xchg
mov
push
shlb
divl
or
in
push
lret
fisttpll
cmc
daa
mov
xor
test
inc
pop
ret
xor
jp
mov
lret
push
mov
pop
push
fdivr
stc
insl
icebp
jae
jb
mov
add
pop
lahf
and
add
imul
lods
jl
fldcw
aaa
inc
imul
sbb
lea
outsb
mov
and
sbb
pushf
adc
sahf
jno
aas
icebp
push
call
sti
in
subb
es
jp
cmc
fadds
jge
jbe
xor
and
js
das
sahf
imul
cli
inc
push
push
push
jnp
mov
lea
mov
add
scas
mov
inc
fs
add
aam
pop
mov
cmp
icebp
adc
std
je
and
xor
mov
push
pusha
inc
jge
lcall
mov
pop
pop
pop
test
cltd
pop
inc
inc
scas
adc
fists
push
push
push
mov
cli
add
jecxz
xor
inc
adc
pop
fs
mov
imul
mov
and
push
adc
xor
push
les
sub
mov
mov
jge
sub
paddb
inc
mov
add
dec
mov
das
jo
lcall
and
cmpsb
out
or
test
pop
sbb
insl
into
push
int3
decl
roll
add
andl
ret
cmp
lock
rorl
rcrl
clc
push
mov
jnp
gs
jns
dec
xlat
cmp
leave
adc
push
and
stc
pop
and
aaa
iret
fidivrs
add
mov
in
xor
inc
loopne
ljmp
sub
daa
jmp
add
dec
ljmp
sub
fistpl
fisubrs
out
mov
les
stos
pop
sbb
test
dec
pop
inc
repz
imul
mov
mov
mov
pop
iret
in
and
jne
sti
repnz
mov
mov
add
std
int
sti
cld
add
xchg
sbb
imul
stos
mov
aas
pop
mov
aaa
jmp
pavgb
or
push
rol
hlt
xchg
sti
jle
bound
and
mov
push
rclb
mov
arpl
pop
cmp
out
dec
repnz
mov
clc
das
pushf
test
push
mov
out
aaa
test
sub
and
jnp
fadd
push
jge
jmp
mov
xor
cmpsb
adc
adc
out
sarb
test
or
mov
push
lods
sub
sub
xor
in
dec
mov
mov
and
or
nop
int3
cld
dec
in
adc
push
js
js
mov
aas
inc
dec
insb
movsl
mov
adc
inc
mov
mov
lahf
lret
pop
loopne
int
push
shlb
mov
das
mov
sub
jb
jl
test
int
mov
cmp
jg
loop
pusha
flds
hlt
jb
out
mov
jecxz
imul
xchg
in
notb
wrmsr
mov
add
cld
xchg
out
fimuls
xchg
cmpsb
jl
fistpl
mov
mov
cmpsl
push
xchg
cmpsb
aam
jecxz
mov
inc
jl
push
jge
mov
xchg
mov
dec
inc
shr
xor
enter
mov
int
push
xchg
xchg
xor
mov
sub
loope
xchg
test
xor
jp
adc
sbb
std
pushf
mov
pusha
out
adc
cmc
pop
movsb
dec
repz
xor
mov
lret
iret
xor
in
sbb
cwtl
dec
pop
arpl
pop
lods
test
cmp
jle
shl
inc
inc
push
sbb
cs
pop
pop
cmc
jp
jg
imul
test
imul
or
xor
cmp
push
lret
outsl
dec
fbld
imul
pusha
xchg
std
outsb
push
xor
stos
pushf
mov
add
xchg
sbb
mov
and
fsubp
dec
dec
jns
out
cmp
push
pop
jnp
adc
out
xchg
scas
nop
inc
pushf
insb
mov
sub
jl
pop
sub
stc
xor
push
and
out
mov
mov
jne
mov
repnz
jae
adc
fdivrs
xlat
popa
push
shrb
push
xchg
or
loopne
or
std
notl
outsl
and
sbb
inc
dec
or
push
pusha
sbbb
add
loope
or
movsb
pop
mov
psubsb
or
mov
cwtl
loope
mov
in
push
xor
fimull
add
in
jl
adc
rcrb
dec
jg
fists
and
cwtl
mov
jecxz
jae
fiadds
xchg
fcomi
jp
ss
fucom
daa
rcrb
jp
mov
push
std
fsubrl
adc
push
call
xlat
rcrb
pop
and
into
inc
inc
idivl
sarb
cwtl
push
rolb
aaa
aad
fistps
adc
xor
int
aas
add
sahf
and
mov
pop
push
mov
mov
mov
lods
lcall
iret
sti
mov
outsb
dec
jae
xchg
sbb
or
jo
dec
push
add
sub
nop
sub
add
imul
xor
insb
push
mov
cmp
idivl
je
mov
rcrl
push
and
inc
in
add
div
je
push
sub
cmp
xchg
scas
sub
mov
inc
sub
loopne
orl
mov
in
icebp
mov
and
push
in
rolb
pop
movsb
pop
insb
jns
pusha
dec
sbb
fisubrl
xchg
fwait
cmp
in
jl
fnstsw
ret
sub
mov
jg
icebp
push
jne
and
movsl
jno
fidivrl
sub
aam
mov
and
push
cmpsb
sbb
pop
jae
sbbl
js
dec
inc
pop
mov
adc
cmp
sub
inc
sbb
ja
js
cmp
mov
xchg
adc
inc
sub
dec
test
cmp
addr16
in
dec
fstps
lahf
in
xchg
mov
mov
adc
test
jmp
jb
test
xor
cmp
cmpl
popa
mov
pushf
mov
cmp
lahf
mov
mov
sub
push
out
push
push
and
dec
cli
mov
sub
and
out
inc
jmp
cmp
cwtl
mov
mov
mov
mov
xlat
or
pop
insb
sti
andb
jl
dec
mov
xor
fidivs
popa
push
sub
jmp
fistpl
push
daa
push
dec
outsb
sub
mov
leave
clc
mov
leave
adc
mov
xchg
ja
cmc
std
adc
imul
in
in
lret
mov
cs
mov
mov
addb
jbe
dec
add
xor
and
cs
or
fiaddl
sub
sub
mov
pop
lret
sub
cld
cld
les
adc
rorb
and
rclb
fldl
out
pop
fidivs
dec
pop
fnstenv
pusha
jl
and
pop
push
dec
daa
xor
mov
ss
cmpsb
loopne
xor
das
sti
mov
push
jle
cmpsb
in
mov
pop
or
xchg
cmp
jge
sub
adc
adc
jnp
rcr
incl
movb
xchg
xchg
jb
ss
jnp
ljmp
outsb
push
addr16
imul
clc
mov
sbb
inc
cmp
add
test
xchg
orb
xor
jge
pop
ret
repz
fistpl
aam
rcll
sbb
pusha
or
inc
pop
add
call
ror
sbb
and
pushf
out
sbb
push
mov
popa
mov
cld
pop
mov
xlat
mov
rcll
popf
fnstenv
pop
inc
fistpll
lock
jp
pop
mov
jmp
mov
icebp
adc
cmp
outsb
sbb
cmpsl
enter
test
pop
cmp
sub
mov
loopne
inc
sub
inc
mov
xchg
enter
ret
fsts
inc
nop
fxch
mov
cmp
inc
add
stos
ret
xchg
and
fwait
ds
imul
inc
shll
test
add
fimuls
or
push
inc
jp
gs
stos
int
mov
or
pop
pusha
xchg
test
push
mov
cmp
mov
enter
outsb
sbb
insl
mov
std
fs
mov
idivb
int
loope
sbb
dec
aas
mov
icebp
dec
pop
inc
sbb
lahf
mov
subb
jo
xor
cwtl
jnp
cmp
lcall
mov
pop
xchg
or
jno
pusha
movsl
dec
hlt
cld
test
push
adc
push
daa
lret
and
jle
mov
mov
aam
dec
aad
pop
dec
xchg
imulb
aas
divl
add
out
clc
loop
bound
mov
addr16
inc
xchg
and
mov
jbe
insb
xlat
in
daa
sahf
mov
es
stc
das
lahf
mov
nop
dec
orl
jo
xchg
jno
xchg
rcrb
push
inc
orl
sahf
adc
pop
aas
lret
xchg
test
dec
xlat
fmul
push
inc
clc
push
xchg
push
jge
popa
inc
enter
inc
addr16
pop
mov
sub
int3
xchg
and
cmpsb
pusha
imul
repnz
xchg
sbb
mov
mov
adc
or
mov
jg
xchg
dec
push
xorl
jbe
sti
jne
imul
fsubp
es
push
jae
and
jle
adc
daa
jl
mull
fisttps
push
mov
mov
int
js
popa
mov
mov
add
dec
jb
push
cs
sub
leave
fistps
sbb
pusha
inc
add
dec
mulb
pop
ret
mov
sub
stos
mov
sbb
sub
xchg
aad
test
mov
insb
add
stos
adc
out
cmp
mov
popa
jge
inc
es
mov
xor
mov
pop
xchg
nop
imul
cmp
std
dec
cs
outsl
ret
notl
dec
sbb
jl
daa
sub
dec
out
in
aas
in
and
adc
dec
fmul
fwait
mov
scas
push
add
and
inc
int3
jo
mov
pop
test
dec
pushf
into
mov
sbb
call
push
sbb
cmpsl
fmull
push
popl
mov
mov
rorb
repz
hlt
fcmovnbe
add
xchg
xchg
mov
push
not
scas
pop
pop
sbb
jb
jnp
out
lret
pop
push
dec
rcrb
jae
test
mov
xchg
pop
push
popa
xor
mov
nop
in
sbb
add
ror
out
outsb
mov
push
pop
mov
bound
adc
add
sbb
sbb
sbb
pop
or
shl
sub
cltd
lret
mov
aad
push
sub
mov
xor
push
and
fcom
lahf
mov
xlat
in
and
adc
pop
push
pop
cmp
lock
inc
sahf
dec
scas
mov
lds
dec
iret
mov
jne
push
stos
jne
aad
mov
arpl
sbb
movsb
pop
sti
push
jno
inc
scas
stc
and
pushl
fidivl
int
jecxz
mov
loop
insb
stos
dec
jmp
push
pop
fstl
mov
cmp
mov
mov
xchg
mov
movsb
das
mov
fwait
jb
sbb
testl
rcrb
push
mov
dec
fiaddl
sbb
ljmp
push
bound
push
or
ret
out
cvtdq2ps
test
out
clc
repnz
decb
or
pushf
in
aam
sti
sub
out
dec
cmp
sbbl
sub
cli
clc
dec
fdivrs
out
dec
pop
imul
and
sub
sub
mov
stos
adc
push
scas
push
inc
sub
pop
mov
add
insb
or
sub
stos
mov
dec
mov
push
pop
push
cltd
loope
push
add
mov
cmp
jo
imul
jecxz
leave
xor
xchg
les
dec
out
push
pusha
loop
jne
xchg
int
clc
in
cmpsl
std
mov
std
xor
add
mov
mov
dec
jp
add
cmp
or
push
in
mov
inc
push
dec
cs
mov
sbb
cmp
in
cld
addr16
pop
add
aad
add
out
imul
cmp
sub
cmp
fwait
pop
mov
clc
sub
dec
xchg
testb
dec
push
mov
push
lcall
rcrl
mov
jo
jbe
vmwrite
push
js
inc
xchg
insl
scas
mov
cwtl
fldt
push
add
adc
scas
cmc
icebp
mov
mov
adc
cmp
or
adc
sti
mov
mov
sub
fsubl
fsubs
add
pop
or
fbld
mov
jno
or
shrb
fstpl
mov
sbb
or
push
and
inc
push
mov
cmp
fwait
fwait
push
je
cli
repnz
or
mov
int3
cmp
xlat
call
lret
or
in
lahf
jno
or
and
pop
mov
rorl
mov
dec
lock
ja
lcall
mov
sub
cli
xchg
push
xchg
xor
mov
adc
mov
int
and
mov
movsb
out
mov
lds
push
adc
popa
push
sbb
cwtl
xor
dec
psrlw
lahf
mov
jb
and
fs
xor
and
pop
fnstenv
ret
jg
push
inc
stos
and
jbe
mov
rorb
pop
sub
dec
jecxz
test
rcll
jge
shlb
xor
fisttps
insl
pushf
fnstsw
nop
cmpsl
fisubl
xchg
cwtl
push
push
jmp
pop
cmpsl
adc
push
adc
or
mov
cwtl
daa
sahf
addr16
sbb
imul
xor
pop
in
pop
insb
mov
push
push
ljmp
fistl
add
adcb
add
in
jb
inc
es
cmp
sub
mov
test
fsubl
daa
arpl
pop
mov
lods
loop
js
xchg
lcall
loope
or
or
shl
sbb
adc
adc
dec
aam
insb
scas
in
sbb
dec
mov
push
punpckhbw
rol
out
sub
xor
pop
sbb
xor
push
mov
fpatan
daa
bound
mov
sti
inc
jb
bound
mov
mov
inc
mov
neg
pop
and
mov
dec
fsubrl
xchg
lcall
movsb
jne
ja
mov
xchg
cmp
scas
add
stos
shl
std
fiaddl
clc
xchg
cmp
test
push
aad
and
inc
mov
mov
sub
xor
js
cs
mov
inc
or
inc
dec
adc
sbbl
dec
imul
call
pop
jmp
pop
ret
aad
sar
pushf
jecxz
mov
mov
mov
and
aad
daa
inc
mov
movsb
or
or
fstl
lret
xchg
sbb
cmp
sub
cmp
dec
cwtl
xchg
aam
sti
insl
rcrb
test
popa
mov
and
fdecstp
jmp
insl
lret
aad
jle
lahf
bound
adc
movsb
jge
cmp
int
mov
push
call
outsb
iret
fdivl
sahf
push
ss
lea
movsb
fistpl
pop
jp
and
xchg
test
movsl
adc
aaa
and
inc
sahf
ret
adc
sbb
test
outsl
rorb
add
xchg
jno
pop
loope
je
or
shll
cmc
leave
pop
sub
mov
insb
xor
and
out
sti
imul
add
mov
sub
mov
xchg
jp
push
mov
adc
arpl
test
loope
scas
fucomip
out
push
sub
hlt
xor
sbb
bound
xchg
xor
popa
add
cmpsl
pop
repnz
mov
add
pop
inc
outsl
inc
rclb
mov
xlat
xchg
popa
cmp
cli
iret
mov
int
xchg
mov
icebp
mov
mov
xor
sbb
cmp
sahf
sar
sbb
je
push
shlb
mov
xor
fisubl
insb
stos
orl
mov
movsl
fistps
loopne
adc
mov
rcr
nop
xchg
inc
dec
push
popa
fucomi
xor
or
adc
js
dec
repnz
lahf
popa
push
call
scas
cwtl
std
cmp
imul
pop
rcrl
out
imul
dec
dec
sti
lods
js
adc
sub
jp
inc
loope
lds
adc
mull
nop
rcrb
inc
xchg
jle
push
test
movsl
and
fisttpl
jle
pop
pop
cmp
inc
xchg
scas
stos
mov
mov
adc
lods
pop
or
sbb
push
push
mov
pop
mov
shlb
ret
xchg
shr
cwtl
les
sub
inc
inc
cmpsl
adc
mov
dec
mov
xchg
inc
les
lods
push
jnp
mov
mov
push
ljmp
cmp
sub
xchg
rcl
idiv
pop
sbb
daa
push
sub
into
addr16
ja
cmpsb
jo
jo
push
xchg
cli
cmp
mov
mov
les
or
rorb
lcall
mov
aaa
out
adc
mov
xor
std
mov
sbb
jp
mov
jp
cmpsl
pop
incl
ret
cltd
idivb
test
adc
mov
sbbb
jmp
std
stos
insl
adc
ret
adc
in
adc
sub
xor
jb
outsl
dec
push
aam
popl
bound
pop
dec
and
sub
fildll
pop
cli
in
test
dec
xchg
aad
mov
lret
jg
inc
lock
lcall
and
cmpsb
cmpsb
inc
push
xchg
pusha
adc
outsl
adc
lahf
mov
aad
add
mov
dec
dec
lds
or
aam
xchg
cmc
or
in
sahf
dec
lock
int
out
push
divb
and
xor
stos
call
inc
push
pop
jo
ja
std
shrb
xchg
rclb
jae
cmp
roll
loop
je
hlt
mov
repnz
cmp
lea
mov
add
push
enter
aaa
pop
leave
js
loop
dec
outsb
insb
lahf
cmp
sbb
sub
sar
or
sub
arpl
xchg
sar
adc
fdiv
ret
inc
push
outsb
xor
jecxz
out
test
add
pop
jp
inc
or
and
push
mov
adc
leave
cmpsl
lds
push
mov
hlt
xor
xor
adc
lock
loope
fcmovne
scas
or
bound
int3
mov
jecxz
aad
mov
pop
out
loop
and
xchg
add
xchg
sub
xor
pop
ja
mov
rcrl
outsl
fcmovb
pop
xlat
jae
add
in
cwtl
daa
dec
pop
cmc
sbb
xchg
mov
ss
fcmovbe
movsl
sahf
sbb
les
dec
pop
fbstp
adc
test
mov
lcall
pop
pop
mov
lea
cmp
jecxz
lret
cmp
shrb
sahf
fisttpl
jns
mov
or
loopne
cmp
les
pop
int
sahf
ret
push
mov
scas
dec
push
pop
shrb
clc
sub
cmpsl
lods
out
js
sahf
pop
testb
push
pop
call
fdivrl
or
cmp
cmp
sbb
add
or
call
in
das
sbb
push
outsb
xchg
pop
cli
xchg
and
orl
xchg
dec
xlat
cmpsl
xor
add
dec
xchg
lds
mov
xor
fsubrl
addr16
ss
les
lret
arpl
in
std
add
aas
mov
mov
shlb
mov
mov
fmull
push
mov
ret
ret
pop
cmp
ds
cltd
add
lods
or
sub
xor
and
inc
mov
push
lds
out
or
xchg
daa
jge
xchg
xchg
dec
and
bound
les
out
cli
xor
gs
mov
pop
and
cmp
jge
mov
stc
clc
jae
inc
leave
jae
inc
idivl
xor
add
or
add
xor
repnz
cmp
mov
jmp
ja
js
popa
mov
int
or
or
pop
inc
add
fcmovnu
jecxz
repz
lods
xchg
fsubrs
add
rorb
or
mov
or
lcall
jns
fyl2x
mov
loope
push
pusha
pop
neg
jmp
cwtl
test
inc
lods
jnp
shl
jg
and
add
fs
lcall
or
and
dec
push
push
pop
mov
and
rcll
jnp
or
clc
pushf
int
aad
inc
cli
loope
adc
lock
sub
or
pop
adc
add
dec
out
sub
arpl
xchg
pop
mov
cs
sub
sbb
sub
pushf
movsl
sbb
jle
filds
mov
xchg
hlt
lock
push
lcall
popf
imul
add
add
adc
loop
inc
cmp
shrb
or
add
subw
push
insb
dec
dec
sbb
xchg
js
adc
pusha
jp
sbb
or
scas
repnz
pop
mov
push
pop
mov
jg
cmp
mov
int3
lock
aad
adc
fstpt
in
shll
out
loopne
mov
dec
aam
mov
push
or
aad
lret
push
imul
imul
gs
scas
adc
mov
dec
jno
sub
dec
dec
mov
sbb
sti
in
mov
xlat
pop
loope
push
imul
aas
aaa
adc
pop
or
xchg
iret
popf
add
iret
aas
sub
xor
stos
xchg
cmp
push
stos
mov
rcll
mov
ss
mov
mov
fwait
sti
faddl
push
lret
pop
cmp
or
sbb
xor
arpl
mov
add
adc
push
adc
rol
or
sub
out
cmp
mov
inc
dec
jb
das
dec
push
or
mov
fs
aam
xchg
xchg
cs
psubb
jb
rorb
sti
bound
adcb
push
adcl
sub
loope
mov
mov
mov
push
test
pop
jo
sbb
scas
xchg
lock
push
pop
sti
mov
lcall
or
jae
lock
xchg
ficoms
xchg
dec
push
inc
xchg
mov
subl
jae
add
inc
fs
adc
inc
lret
sub
iret
lahf
in
int3
dec
shlb
outsl
iret
add
mov
lea
shrl
icebp
or
pop
dec
jno
pop
cmp
pop
lcall
pushf
repz
mov
push
sbb
dec
mov
mov
jae
mov
inc
imulb
or
push
mov
pushf
test
push
les
dec
fadds
in
data16
mov
mov
fisubs
jle
jg
xor
mov
cmp
shlb
sarl
cwtl
push
lret
cmpsb
rolb
push
or
sub
dec
addb
mov
sbb
xchg
mov
inc
add
cld
vmaxss
ds
addb
fs
aaa
cmpsb
call
imul
push
adc
test
outsl
mov
dec
mov
pop
es
pop
push
cli
or
fcoml
mov
jmp
sbb
es
in
hlt
dec
xchg
sbb
dec
sub
icebp
push
jne
add
test
sti
pop
add
dec
cmp
inc
jecxz
ror
xchg
cmp
cmp
in
jp
push
xor
gs
fdivl
xor
repnz
inc
pop
sbb
ljmp
dec
dec
into
jge
pop
xchg
insb
push
je
insb
pop
or
xchg
cmp
or
dec
jns
stos
loope
mov
or
sbb
adc
repnz
loope
aam
mov
push
addr16
bound
ss
jecxz
outsb
jl
mov
mov
cmp
test
xchg
fs
sub
push
in
cltd
mov
add
lret
mov
roll
jmp
push
dec
mov
jb
xor
xchg
sub
adc
add
sub
pop
pusha
push
mov
lods
or
mov
call
jle
or
ss
mov
lret
jae
and
imul
imul
rclb
and
sub
outsb
test
add
xchg
cmp
js
push
fdivrl
mov
mov
ss
add
push
xor
push
das
pop
dec
scas
adc
aas
aam
xchg
and
test
dec
ss
jle
jmp
jnp
mov
pushf
adc
xchg
sbb
fsubl
add
fcoml
cwtl
stos
adc
and
movsb
xor
nop
jne
test
aas
adc
sub
sub
sbb
jle
jb
lock
xchg
sbb
test
cmp
movsb
jnp
mov
xchg
ljmp
jae
ret
dec
hlt
dec
call
dec
fldenv
icebp
test
leave
sbb
gs
sub
add
daa
lret
fiadds
lcall
aas
ss
sub
pushf
dec
add
sbb
js
rol
outsl
into
rorl
pop
jbe
decl
add
in
and
mov
cmp
lret
dec
jl
fs
fnstsw
bnd
xchg
sbb
mov
xchg
sbb
xchg
adc
push
sahf
test
popa
push
mov
dec
mov
mov
dec
sub
cltd
sbb
loop
mov
in
xor
dec
aad
or
scas
xor
mov
xchg
sub
push
or
mov
xchg
jecxz
dec
fsub
jnp
mov
xchg
mov
pushf
fldt
inc
sbb
mov
insb
scas
and
jns
mov
inc
gs
addb
pop
notb
cmpsb
add
int3
sbb
ja
sbb
gs
repz
ret
les
inc
xchg
sarb
sub
jl
orb
mov
jle
pop
aad
push
sbb
subb
cli
pop
xor
mov
cmp
xchg
or
in
ret
jecxz
jl
inc
sub
ss
mov
dec
aas
dec
dec
dec
out
or
sti
and
push
fsubp
sbb
pop
mov
icebp
jnp
xchg
mov
xchg
sbb
add
adc
loope
fmulp
adc
mov
inc
fcom
xchg
pop
cmp
inc
xor
popf
add
jnp
daa
lds
mov
jbe
xchg
ret
popa
adc
testl
aad
adcl
es
jo
xor
call
paddsb
sbb
outsb
gs
pop
and
or
cmp
mov
xchg
cmp
push
mov
cmc
adcl
cmpsl
divl
nop
mov
or
xor
adc
push
adc
jo
add
mov
xchg
jbe
aam
int3
in
faddl
negl
xchg
fisubs
mov
sbb
shlb
mov
scas
negl
push
and
push
xlat
insl
lahf
xchg
jp
inc
adc
outsb
add
sahf
inc
sub
mov
jp
pushl
mov
or
mov
loopne
xchg
add
sub
je
add
xchg
cwtl
sbb
cwtl
cmp
jne
xlat
push
xlat
movsl
jns
repz
pop
das
lea
insb
xor
icebp
rorl
push
lcall
ss
push
xchg
stos
outsb
aaa
sub
negb
xchg
gs
imul
jno
pushf
xchg
out
pop
push
adc
bound
jnp
in
out
add
std
int
inc
jo
jbe
jecxz
js
pop
or
testl
mov
test
mov
clc
rorl
add
mov
jb
stos
or
cmpsb
fnstsw
xor
data16
imul
das
fimull
mov
into
scas
inc
pushf
add
adc
add
out
cmp
fldl
inc
jecxz
ds
add
out
adc
in
sahf
sbb
or
into
sub
push
xor
pop
test
call
in
popf
loop
repz
pop
stos
sub
sbb
pop
jno
xor
mov
jnp
ret
pop
sbb
sbb
into
dec
loopne
fs
test
inc
sbb
shrb
mov
pop
loope
and
pop
mov
hlt
sub
sbb
repnz
push
mov
cmovl
popf
inc
or
sbb
or
jmp
xchg
mov
pop
pop
fbld
jne
mov
push
test
insl
clc
mov
out
test
jge
and
inc
outsb
or
clc
decb
loop
xchg
xchg
or
lahf
sbb
test
jg
sahf
add
lods
jb
adc
and
sub
scas
icebp
data16
xor
lods
push
ds
dec
sub
out
test
jo
pop
aaa
clc
adc
arpl
mov
das
insl
mov
mov
jl
orb
lods
add
aad
jno
jns
push
cmp
add
sbb
lea
lea
pop
inc
mov
cmpsl
loopne
ret
cmp
and
add
in
and
sbb
aas
dec
out
fbld
push
leave
adc
mov
mov
sbb
xchg
es
iret
lahf
jecxz
jp
arpl
or
mov
je
or
cwtl
pop
dec
inc
jg
mov
call
dec
repnz
pop
lods
lock
outsl
jg
sbb
pop
pusha
mov
loope,pt
push
sub
add
pop
push
loop
mov
add
jl
jp
aaa
mov
loop
addr16
jg
mov
out
and
lahf
cmp
aad
pop
mov
enter
shrl
mov
xor
loopne
aad
cmpsl
cmpsb
dec
cs
pop
or
push
cltd
or
cmp
dec
inc
add
iret
mov
mov
insb
sub
imul
xchg
ss
or
jns
adc
mov
add
into
icebp
icebp
add
jno
in
push
repnz
sbbb
loopne
xor
mov
inc
test
call
dec
adc
xor
cmp
lds
nop
stos
les
ds
mov
int3
ficoms
in
dec
mov
imul
cmp
ja
divl
cltd
cwtl
cmc
fwait
out
call
test
push
sub
xor
stos
movsb
test
inc
ds
addr16
lret
js
push
lock
mov
mov
mov
pop
out
test
addr16
cmp
ja
dec
idiv
push
arpl
outsb
mov
cmp
sbb
inc
fimull
lret
xchg
sbb
imul
popf
cmpsb
dec
pop
pop
add
sti
xchg
jb
mov
sub
fwait
rcrl
mov
pop
enter
out
arpl
leave
clc
aad
pop
xor
mov
les
cmp
int3
loope
shl
lahf
xchg
push
add
fs
pop
cmp
pop
lods
push
cli
loopw
dec
add
fisubrl
mov
test
cli
mov
jbe
cltd
lds
into
inc
std
roll
sahf
sbb
adc
or
xor
cmp
or
cmpsb
ficompl
cmp
lcall
or
enter
push
lcall
test
icebp
out
cld
sub
push
mov
call
dec
lods
dec
imul
dec
cmp
insb
mov
pop
stc
add
fcmovnbe
mov
scas
adc
ja
testb
iret
adc
inc
mov
fists
xor
pop
call
push
push
mov
xchg
mov
pop
fsincos
inc
pop
adc
mov
outsb
cmpsb
xor
mov
out
dec
push
pusha
jecxz
push
mov
mov
lcall
repz
lock
ror
fisttps
inc
sub
daa
lretw
cltd
mov
dec
jo
js
push
mov
stos
push
inc
ja
xor
fwait
or
roll
mov
repz
ja
dec
add
sahf
cmc
or
xchg
leave
lcall
or
xchg
imul
in
sub
cld
jbe
and
dec
in
iret
fisubs
inc
jmp
popf
push
fs
add
jg
pop
jp
lret
cmp
lods
out
jnp
xchg
and
push
scas
lds
cmp
cmp
xchg
bound
out
add
icebp
bound
call
inc
lret
sbbb
cld
faddp
leave
or
xchg
stos
into
ss
jnp
inc
aaa
inc
pop
xchg
jb
pop
fstl
mov
pop
adc
push
xchg
adc
es
stc
mov
addr16
iret
pop
cmp
int3
cmp
clc
jl
mov
ficoms
fsubr
daa
jo
clc
pushf
lahf
mov
cmp
jecxz
aad
pop
inc
bound
arpl
scas
jle
mov
outsb
clc
jns
mov
call
jb
cmpsl
or
outsb
fsubr
lcall
sub
jo
sahf
add
sbb
iret
mov
push
jne
adc
test
cli
movsb
xlat
adc
mov
adc
mov
jne
add
sub
loop
dec
mov
xchg
mov
push
cli
sub
stc
mov
addr16
xchg
jno
ds
mov
stos
xor
icebp
in
cmp
loop
add
push
sahf
scas
ljmp
orb
dec
mov
xchg
jl
fistpll
in
lea
cmp
int3
lds
testl
aas
xchg
cmpb
mov
push
xor
mov
movsb
adc
cs
and
sbb
test
jmp
add
mov
mov
cmc
push
popf
mov
jno
mov
ljmp
cmp
xchg
aad
sbb
pop
es
clc
cmp
xor
clc
or
fsts
das
test
jns
push
cs
mov
out
rcll
pop
shll
add
sbb
dec
mov
add
dec
in
shlb
push
or
mov
jb
sub
pop
push
jno
mov
xchg
std
cli
adc
and
aad
pop
jg
in
pop
inc
jno
rorl
push
mov
nop
cmp
idiv
mov
sbb
arpl
bound
icebp
push
inc
test
into
add
sub
pop
pop
lcall
cmpsb
das
dec
mov
pop
xchg
and
mov
push
nop
mov
outsb
dec
fmuls
xor
stos
dec
inc
xchg
mov
push
mov
fisubrs
sti
mov
in
push
pop
xchg
and
repnz
adc
pusha
adc
push
push
hlt
andl
insb
ret
jne
or
sbb
jmp
ja
lock
xchg
jb
iret
hlt
out
repnz
xor
xchg
push
mov
pop
pop
shll
push
shr
mov
jg
pushf
std
mov
pop
inc
xchg
dec
cmp
push
js
add
sub
dec
adc
add
push
xchg
or
cwtl
mov
pop
xchg
sbbl
cltd
xchg
jmp
cmp
jns
jae
hlt
insl
inc
jae
sbbb
ljmp
adc
jbe
pop
xchg
cmp
adc
or
push
bound
jnp
sub
cmpsl
scas
cwtl
stos
mov
mov
inc
adc
cmp
ret
xor
push
mov
xchg
in
push
sub
adcb
fidivl
nop
adc
inc
cld
lret
xor
pusha
addl
dec
call
fwait
lcall
pop
stc
and
inc
test
leave
pop
inc
data16
ss
inc
arpl
in
cwtl
ret
sbb
call
je
insl
xchg
xchg
hlt
jns
cmc
adc
arpl
and
fisttpll
cmpsb
lcall
xlat
push
xchg
pop
jmp
mov
jge
lret
inc
leave
or
cmpb
leave
out
mov
cmp
inc
leave
leave
lcall
cld
push
push
cmpsb
out
add
pop
addl
cli
mov
cld
daa
ja
mov
addb
push
fs
xchg
add
cmp
shlb
arpl
jnp
xor
mov
adc
cli
call
and
inc
addr16
mov
das
inc
jp
cvttps2pi
call
fsubrl
loopne
imul
jl
xchg
loopne
add
andl
mov
fs
fs
sub
popa
pinsrw
shr
adc
cs
fidivrl
pusha
mov
jg
int3
popf
gs
in
lods
lea
outsb
aad
sub
xlat
fbstp
sbb
sahf
pop
pushf
or
xor
cld
sub
sti
divl
shll
sub
cs
xor
fsubrp
jg
lds
fistps
jno
jle
xlat
sub
in
sbb
lds
add
xorl
dec
sub
rolb
dec
or
ja
fsubl
sahf
enter
cmp
inc
mov
sub
lret
fwait
push
cmpsl
sqrtps
or
pop
dec
ficompl
arpl
dec
imul
xchg
movb
cli
mov
mov
pop
push
or
push
incb
mov
push
clc
mov
ja
mov
mov
inc
xor
data16
xchg
loop
xchg
xchg
stos
std
fwait
stc
je
outsb
fdivrs
inc
pushf
xor
xor
frstor
jnp
pop
dec
push
cmpsl
sbb
xchg
sbb
das
push
xchg
mov
mov
mov
cltd
mov
mov
mov
test
xchg
sbb
sbb
sbb
mov
neg
mov
fsub
int
jns
pop
dec
mov
cmp
test
js
adc
test
or
pop
fldt
outsb
sub
test
pop
mov
sti
push
pop
mov
sub
dec
loop
sahf
lahf
adc
sbb
fxtract
inc
jmp
lods
mul
mov
xchg
pop
sbb
sub
icebp
roll
into
xchg
inc
fisttpl
lods
in
pop
dec
andb
adc
xor
movsb
sub
in
add
adc
inc
pop
jp
imul
call
mov
xor
fadds
nop
mov
rclb
inc
jecxz
in
stos
or
or
inc
or
lret
pusha
and
dec
lock
js
adc
jne
les
sahf
fcmovnbe
pop
dec
fcmovu
push
push
dec
cmp
mov
mov
neg
add
mov
pop
cld
das
cmpb
pop
aaa
dec
sub
cmc
ret
lds
ret
fsubl
addr16
mov
mov
push
adcl
or
xchg
lahf
cmp
scas
mov
jl
jmp
pop
cmp
test
popa
dec
sbb
in
pop
sbb
adc
push
mov
es
jle
xchg
imul
pop
scas
pop
pop
push
ljmp
cwtl
out
mov
ret
push
inc
inc
pop
mov
jb
lods
sbb
dec
shlb
popf
mov
sahf
cmp
stos
inc
outsb
in
clc
mov
inc
dec
pop
dec
in
mov
fs
subb
inc
adc
xchg
mov
dec
jmp
call
xor
enter
in
aad
inc
add
testl
jmp
dec
imul
add
jbe
sub
cmp
xchg
enter
aam
cmp
or
or
ret
cltd
cmova
loope
daa
imul
push
jo
mov
hlt
mov
inc
iret
pop
push
mov
orb
in
mov
pop
scas
cltd
sub
xchg
daa
dec
das
movsb
mov
cld
bound
sub
dec
inc
sbb
adc
in
mov
mov
shlb
mov
ljmp
icebp
pop
loope
loop
mov
aaa
fcmovnb
sub
sub
mov
sub
xor
or
outsb
jne
int3
and
push
fldl
sub
pop
adc
dec
test
pushf
xchg
dec
dec
je
ja
fistps
dec
andl
cmp
pusha
jo
in
and
jnp
filds
xor
mov
mov
and
inc
and
pop
pop
xchg
das
lock
add
xor
cwtl
gs
cmp
push
cmp
fnstsw
dec
loope
pop
xchg
movsl
lods
xchg
les
sti
das
or
jae
mov
xchg
jne
sub
xor
pusha
fwait
dec
test
mov
into
xor
lods
fsubrl
adc
jo
jg
push
lcall
pop
mov
std
add
fbstp
imul
push
insb
insl
in
cli
mov
cli
xchg
inc
xchg
imul
mov
stos
sbb
adc
movsb
jbe
and
stc
movsb
inc
lcall
pop
pop
test
push
dec
out
push
xchg
jg
es
push
in
in
cmpsl
push
js
dec
inc
or
inc
xor
push
pop
scas
lock
xchg
pop
lods
int3
jno
test
fcomps
jp
inc
xchg
mov
aaa
pop
out
arpl
push
xchg
push
or
adc
dec
mov
push
imul
inc
xchg
xchg
add
push
mov
pushf
es
jae
shl
sbb
xor
inc
shrb
sub
popf
leave
mov
mov
out
int3
ficoms
mov
fnstenv
sti
and
pop
cs
cs
push
shl
dec
leave
dec
or
xchg
jae
push
orl
jns
adc
mov
mov
loop
xchg
stc
and
mov
imul
jne
xchg
mov
or
outsl
dec
movsl
aad
sbb
cwtl
aam
cmc
out
dec
insb
pop
ljmp
lret
inc
lods
lret
addb
mov
sub
lahf
les
xor
ss
leave
xor
push
fimuls
pop
lahf
test
add
sbb
pop
jmp
jg
ret
lods
ret
out
outsl
js,pt
imul
mov
sub
sbb
jge
jmp
pop
fisubs
lock
add
push
sub
mov
mov
fadd
sub
les
adc
adc
push
push
pop
in
pop
lcall
inc
out
mov
and
mov
sbb
mov
push
mov
cmp
outsl
xchg
push
lea
xor
addb
stos
inc
enter
pop
xchg
push
pusha
push
or
idivb
mov
mov
push
add
aaa
incb
dec
pop
jecxz
sbb
es
mov
xchg
arpl
cmp
fbstp
pop
inc
cmc
repz
pop
pop
clc
testb
push
test
call
xchg
pop
xchg
aam
loope
fs
cmp
cmp
mov
out
popf
int3
stos
push
int3
mov
lcall
cmc
adc
out
sahf
xchg
or
or
int
leave
mov
sub
mov
rcrb
orb
stos
or
push
and
or
data16
cmp
or
pusha
jno
add
and
ss
dec
pop
mov
adc
clc
jl
cltd
out
jbe
xchg
ds
inc
lods
iret
inc
enter
scas
pop
mov
jmp
imul
sti
mov
lock
add
mov
xchg
adcl
cmpsb
and
push
mov
xor
push
or
add
dec
push
cld
or
jnp
and
loop
insl
test
mov
sub
outsl
rclb
xchg
stc
lods
mov
rclb
mov
scas
fs
enter
add
mov
mov
fs
push
daa
popa
ljmp
mov
dec
stc
and
cli
mov
cmpb
cmp
frstor
mov
push
sub
jae
pop
test
jp
adc
pushf
and
aad
popf
fidivrs
data16
mov
jbe
mov
faddl
ret
das
sbb
and
ret
mov
sbb
clc
lret
adc
cltd
rolb
outsb
mov
ljmp
sysenter
xlat
push
ret
push
jecxz
aam
jnp
jbe
mov
xor
add
out
or
lods
popf
mov
lret
xchg
pop
fcmovne
into
xchg
add
movsb
mov
adc
cwtl
cld
fs
ret
sbb
dec
aam
rcrb
pop
pop
sbb
cs
adc
xchg
js
add
jle
inc
cltd
dec
arpl
pop
mov
sub
xor
xchg
mov
cmc
out
ret
adc
mov
pop
lahf
mov
ret
ss
add
jo
xchg
loop
push
jne
std
fimull
and
xor
push
fndisi(8087
and
add
mov
mov
inc
adc
or
in
pop
leave
fcomip
sbb
lea
andl
push
jno
jo
jecxz
dec
outsb
test
int3
inc
mov
ljmp
repz
ret
or
pop
fsubl
jg
stos
mov
scas
js
nop
mov
xchg
add
adc
shll
fstpl
mov
dec
mov
ljmp
out
pop
jb
jne
movsl
repnz
rorl
add
inc
testb
adc
add
ret
inc
cmpsl
loope,pt
lahf
sub
mov
xchg
cmpsb
sbb
shl
daa
dec
sbb
in
mov
dec
pop
das
pop
outsl
cltd
mov
xchg
jecxz
roll
ds
mov
xchg
or
push
and
dec
testl
js
shll
jp
mov
cmpb
insb
outsl
outsl
or
add
rcrb
aas
add
xchg
xchg
xor
rcrl
push
cmp
loop
jae
and
shlb
enter
les
loopne
mov
fcomps
mov
sbb
cmp
out
dec
sbb
cmc
pcmpgtw
leave
cli
xor
rcrl
stos
in
push
cmp
addr16
ret
dec
into
pop
mov
stc
fldcw
insb
dec
mov
fldcw
cld
clc
cmp
inc
push
adc
pop
inc
iret
adc
into
in
and
in
or
sbb
in
nop
orb
xor
and
push
dec
scas
jns
sub
add
test
mov
shlb
pushf
cltd
or
out
mov
in
imul
inc
jle
push
xor
or
fwait
aam
sahf
lret
andb
imul
enter
jno
mov
ret
sahf
dec
inc
imul
jmp
xchg
jno
test
insl
aas
dec
sub
sbb
cltd
je
ret
or
inc
mov
cmp
leave
xchg
fisttpll
stos
les
sahf
subb
xlat
arpl
movsb
add
cwtl
push
push
aaa
adc
pop
movsl
jl
orl
push
testb
and
xor
add
push
add
out
push
fcomps
mov
lock
fcomps
mov
cmp
ror
mov
push
aad
outsl
pop
pop
cmp
cmp
insb
fucomi
jns
mov
add
lds
insl
movsb
adc
mov
loope
add
pushl
lret
add
sub
mov
jbe
lret
jno
pusha
jg
dec
xchg
test
popf
inc
ret
cmp
loop
or
xchg
repz
data16
inc
push
pop
pushl
sbb
add
adc
mov
mov
add
daa
dec
mov
add
js
mov
fsubs
insl
mov
loope
push
in
test
adcl
rolb
push
roll
test
cmp
adc
lcall
mov
movsl
or
cmp
xchg
sbb
test
jne
insl
ja
shr
inc
fstpl
dec
cmp
push
je
popf
inc
stos
cmp
cwtl
xchg
jp
adc
in
call
movsb
push
test
inc
jge
call
xlat
fdiv
push
cwtl
adc
jo
adc
std
into
jp
testl
addr16
sahf
and
pushf
mov
jl
cmp
sbb
jnp
popa
in
mov
and
in
pop
mov
inc
scas
or
stc
xor
mov
hlt
adc
movswl
stos
mov
cld
xor
cmp
inc
jae
aam
int
cmp
test
sub
addr16
adc
mov
cmp
adc
xchg
inc
push
jmp
in
mov
cli
bound
jecxz
jge
dec
xlat
enter
pop
jmp
or
sub
rcrb
daa
xor
pop
push
sub
mov
dec
pop
and
adc
mov
popa
adc
and
sahf
fisttpl
pop
sub
pop
lea
push
das
loope
fcomip
sub
je
sub
lcall
int3
and
loopnew
pop
imul
hlt
sbb
stos
pop
cwtl
iret
jmp
mov
lret
push
mov
hlt
bound
jle
test
rorb
negl
rorb
imul
xchg
xchg
das
or
mov
jle
sbb
push
cld
mov
out
mov
cmp
mov
subb
or
cli
pop
out
ss
push
xchg
je
je
dec
mov
rolb
mov
jecxz
rorb
jo
fadds
xor
push
and
inc
movsl
divl
mov
dec
scas
fdivr
add
push
int
or
ljmp
mov
jnp
push
inc
aam
jp
loop
xchg
fdivr
pop
cmp
rol
push
in
pop
dec
mov
and
mov
pop
pop
sbb
jge
jp
rcll
enter
jno
mov
add
jo
loopne
imul
nop
sti
push
int
add
mov
mov
add
push
mov
enter
add
adc
or
mov
sbb
xor
xchg
inc
fcomps
fimuls
test
out
add
mov
out
sub
push
movsb
nop
cmp
lahf
push
ja
int3
mov
imul
cld
jl
inc
out
pop
cmp
mov
sub
into
enter
movsl
push
mov
fidivrl
in
pop
pop
xchg
pusha
js
fstpt
xlat
cmp
jp
mov
cmc
inc
mov
xor
test
xor
cmp
stos
mov
add
adc
hlt
shl
sti
xchg
shlb
push
add
cmp
or
and
into
loopne
rorl
add
xor
das
push
inc
inc
fnsave
push
sbb
movsb
rcl
out
add
mov
stc
and
fstpl
aas
push
inc
frstor
jb
mov
lods
sbb
add
scas
push
pop
sub
jecxz
test
icebp
inc
jg
scas
jne
mov
jae
ss
cld
lret
cmpl
lahf
inc
mov
push
or
cmp
add
add
cmc
cs
mov
or
pop
mov
mov
das
stos
jl
mov
jge
inc
xor
outsl
jp
sbb
cmp
jns
and
fs
mov
sbbl
pop
rcll
mov
jp
xor
xchg
and
pop
incl
fs
in
sbb
mov
xor
mov
mov
das
sub
jb
adc
sbb
inc
add
lahf
int3
aam
cmp
in
stos
push
xor
js
icebp
adc
fstl
fiaddl
push
push
xchg
push
cmc
push
test
add
or
aaa
cmp
ret
mov
dec
jl
jno
mov
cmp
lret
xor
in
adc
jns
lret
sahf
mov
cmc
fidivrs
popa
jg
mov
xor
and
mov
out
mov
testl
pop
insl
aaa
jns
inc
shr
sub
push
insb
movsb
scas
cli
sbbl
push
pop
jne
mov
sub
nop
push
ss
jg
jmp
push
loope
and
mov
ret
sarl
fmul
daa
insb
mov
push
lret
pop
fildll
pop
fmuls
push
fwait
adc
int
data16
cmc
pop
insb
inc
mov
adc
xchg
add
mov
lret
inc
test
mov
nop
repz
sbb
adc
mov
ror
dec
orl
scas
dec
cwtl
mov
sahf
cmp
jbe
dec
mov
fidivrl
mov
cmp
icebp
cmpsl
rorb
jae
loop
loop
into
xchg
push
sbb
out
sub
out
mov
lea
jbe
ret
fsubr
mov
jae
ror
add
adcl
leave
jle
xor
in
stos
sbb
xchg
call
cmpl
pop
out
lea
jb
or
cmc
cli
xchg
xchg
fadds
mov
orb
lods
or
adc
sub
test
inc
dec
fisttpl
insl
mov
icebp
movsb
xlat
mov
shl
mov
ret
add
mov
jae
inc
xchg
add
xor
inc
xor
push
push
popf
fwait
add
fmull
mov
insb
dec
push
pop
pop
inc
psadbw
mov
dec
popf
push
pop
sbb
repz
sbb
xchg
jecxz
xchg
dec
jmp
addr16
scas
hlt
push
cltd
and
push
insb
mov
loop
dec
xchg
sub
inc
loope
mov
hlt
sub
pusha
das
sbbb
xchg
cmp
lahf
fsubl
gs
mov
fs
inc
push
jbe
mov
test
mov
pop
aam
insl
xchg
mov
cmp
insl
xor
shrl
inc
into
ss
fsubr
js
mov
xchg
push
mov
jg
sub
push
out
pop
push
pop
fstpt
xor
popa
hlt
xchg
cmp
mov
mov
loop
aad
xor
test
pop
in
cs
out
sbb
stos
lods
cmp
subb
push
sbb
xor
out
je
aam
outsl
sti
or
adc
push
mov
ja
mov
xchg
cli
das
loope
dec
cmp
or
shrb
jae
jbe
jae
or
imul
in
push
xor
mov
dec
jecxz
rclb
stos
xchg
cmc
adc
ss
in
cld
fwait
div
outsb
shrb
clc
das
ss
or
mov
xlat
sbb
push
pop
in
mov
lcall
xchg
or
enter
push
movsl
outsb
rolb
and
jns
dec
aad
repz
lret
fadd
in
je
or
fstl
sub
inc
ja
js
cmp
cmc
icebp
fwait
adc
ljmp
mov
mov
loope
mov
shlb
xchg
push
scas
pusha
test
inc
mov
int3
push
adc
pop
or
push
xor
int
push
cmp
mov
adc
pop
xor
iret
jns
pop
mov
pop
sbb
into
stos
push
aam
sti
das
push
stos
int3
hlt
out
cmp
xor
cmpsl
pop
dec
jge
push
add
scas
div
fnstsw
mov
and
mov
bound
sbb
mov
mov
dec
repnz
sub
jns
jae
call
out
cwtl
vmovaps
or
mov
cmp
dec
cmc
inc
out
cwtl
add
mov
sub
sahf
fidivl
stc
subb
ss
in
xor
adc
flds
sbb
or
and
sarl
or
dec
movsb
or
inc
and
mov
mov
rcrl
call
dec
sbb
jo
mov
in
push
popa
arpl
mov
les
adc
jp
xor
imul
popa
mul
mov
lock
xchg
test
inc
cld
jo
pusha
inc
mov
jle
andl
push
adc
push
add
call
sbb
aad
inc
xchg
push
and
jae
imul
cmp
adc
call
mov
push
mov
sub
inc
rol
cli
enter
xchg
pop
add
aas
stos
sub
sub
sbb
aam
jmp
dec
pop
insb
outsl
pusha
ret
mov
loopne
loopne
add
inc
fwait
and
gs
cmpsl
or
fs
ficomps
adc
add
mov
test
fisubs
sti
push
jno
gs
mov
fcmovbe
cmp
mov
scas
out
repz
cmp
mov
dec
mov
je
aaa
mov
fwait
outsb
fisubs
movsl
loopne
int3
ret
mov
and
mov
pusha
clc
clc
jb
es
sbb
jae
push
pop
divl
shlb
aaa
fcompl
mov
pop
addr16
cltd
and
test
sbb
push
aad
add
lret
cmp
ss
ficoms
or
repnz
lea
fnsave
xor
lock
jnp
pop
sbb
lret
fsubrs
fstl
insl
andb
sub
imull
mov
in
pop
jno
or
mov
fisubl
jmp
les
insb
xchg
push
dec
pop
xchg
push
in
ret
xchg
sub
repz
mov
xor
rcl
sbb
xchg
cs
dec
cs
pop
add
mov
jg
scas
scas
dec
pop
pop
dec
xchg
mov
cmp
test
xor
stc
jp
fldl
leave
call
inc
sbb
inc
mov
mov
std
or
and
stos
jno
jmp
jns
pop
pusha
in
dec
ror
push
push
jmp
aam
or
xchg
add
inc
cmc
mov
cmp
xchg
sbb
pop
adc
fwait
cmpsb
jle
push
or
jp
hlt
rorl
cmp
jmp
les
js
sbbl
xor
dec
dec
repnz
and
and
and
out
pusha
xlat
jo
loopne
movsl
addr16
nop
jno
popf
gs
iret
addr16
hlt
shrb
sbb
mov
adc
dec
xchg
int3
or
or
or
test
fwait
and
std
lret
pop
rorl
scas
or
push
adc
fadds
repz
push
jb
loop
repz
inc
jnp
dec
das
ret
sbb
add
std
mov
jp
or
cltd
dec
xchg
sbb
popf
repnz
push
mov
inc
adcl
sbb
cmpsl
mov
adc
mov
mov
or
addr16
push
xor
in
into
lahf
adc
push
lret
adc
adc
xchg
mov
sub
inc
jge
fs
dec
dec
cmp
jle
xchg
repz
sub
inc
hlt
pop
mov
xor
cmp
push
fcmovnbe
xor
and
fistps
ret
call
aam
aam
out
dec
jg
jmp
dec
pop
test
push
xchg
mov
cmpsl
sbb
clc
xchg
mov
cmp
push
daa
lahf
js
cmp
cltd
push
lcall
rcrb
int
mov
data16
sub
repnz
test
mov
cmp
push
xor
outsl
mov
testb
inc
fidivrl
or
mov
sbb
push
pop
mov
mov
test
scas
std
loope
mov
arpl
xchg
orb
ljmp
insb
loope
inc
and
cmp
fwait
movsb
jnp
cmp
inc
push
xchg
gs
incb
add
adc
push
aam
in
xchg
lds
mov
pop
mov
pushf
test
jl
push
jns
and
in
push
outsb
mov
dec
and
dec
push
add
push
push
cmc
rolb
mov
jecxz
pushf
fimuls
adcb
insl
mov
in
scas
sub
fldl
cmp
or
ja
mov
adc
add
fsubs
fisubl
inc
mull
imull
loope
cmp
jg
xchg
mov
test
repz
loopne
in
and
movsb
test
icebp
cmpb
mulb
aaa
js
adc
daa
call
in
cli
sub
jo
push
push
pusha
ret
int3
scas
push
test
rcll
aaa
sub
push
pop
gs
out
scas
pop
jge
add
fiaddl
jnp
cmc
out
sbb
dec
ret
jecxz
xor
or
test
xor
mov
sub
notb
mov
stc
scas
out
adc
mov
mov
push
mov
loope
out
pop
iret
and
dec
jbe
jle
inc
loop
mov
xlat
cs
mov
cld
inc
fimull
out
xor
push
aaa
in
mov
lcall
adc
mov
or
daa
pop
incb
pop
xor
rolb
int3
subb
in
lods
int3
mov
inc
shl
push
out
add
mov
xor
mov
pop
jp
sub
mov
jmp
dec
adc
dec
sub
into
movsb
popf
scas
movsbl
xor
xchg
in
jo
pop
jecxz
lock
xor
add
dec
dec
push
or
and
add
shlb
les
and
imul
fildll
pop
mov
ret
jge
mov
aad
mov
mov
xor
scas
cwtl
aad
dec
mov
cmp
push
push
fsubs
and
jg
in
aad
or
pop
sub
lahf
idivb
call
or
into
mov
test
mov
jge
bound
shlb
lods
into
mov
cmp
pop
mov
sahf
push
in
in
pop
pop
scas
fistpl
jmp
test
mov
cld
xchg
sbb
rorl
jge
daa
cltd
add
or
xor
loopne
adc
in
pop
divb
sub
xchg
add
xlat
rcrb
les
stos
shll
pusha
imul
loopne
decl
push
iret
inc
mov
push
sub
rolb
cld
dec
and
lea
inc
sub
repz
lds
cli
fldcw
mov
lea
fwait
shll
inc
push
adc
dec
insb
dec
or
or
xor
loopne
dec
push
js
repnz
test
sub
add
shl
scas
out
xchg
insl
pop
scas
jb
xor
xor
loop
sub
imul
dec
daa
in
cmp
iret
sub
xor
push
mov
push
jo
addb
aam
add
adc
and
unpcklps
jbe
int3
idivl
mov
arpl
add
fdivrp
inc
mov
add
jns
dec
inc
ljmp
xchg
pop
mov
jbe
mov
test
sahf
push
into
mov
jp
xor
mov
or
cmp
mov
add
out
xorl
inc
xlat
mov
fnstsw
das
insl
cltd
push
fldl
sbb
push
movsl
ja
mov
in
out
daa
and
or
xchg
popa
mov
pop
sbb
les
push
jle
xor
leave
push
insb
negb
jmp
aaa
pop
xchg
push
aaa
push
addl
mov
dec
stos
dec
cmpsl
repz
div
push
cmpsb
stc
and
xchg
leave
aam
scas
fimuls
xchg
popf
add
add
jb
push
adc
lahf
jl
adc
sbb
mov
testb
adc
jg
jnp
test
sarl
out
stos
sub
in
rcrl
mov
sbb
sub
push
add
mov
adc
or
xchg
sub
data16
mov
sbb
adcb
enter
xchg
push
lods
bound
lods
shlb
lds
mov
pop
push
scas
flds
push
sbb
pavgb
ljmp
mov
jns
push
fstl
push
jge
mov
arpl
pushf
call
bound
sub
adc
ficoml
push
and
inc
adc
pop
movl
mov
xchg
push
cli
inc
fwait
int3
xor
sti
ret
adc
cld
ja
ss
repz
push
arpl
loop
mov
inc
lock
int3
fnstcw
jbe
stos
and
les
add
popf
outsb
int3
test
roll
loop
fisubrl
push
push
mov
frstor
dec
rolb
xor
cmp
fmul
incl
nop
mov
pop
push
push
sub
push
das
or
cmp
adc
int3
pop
jl
lods
test
in
inc
xchg
push
mov
xchg
data16
stos
cmc
jae
stc
xchg
xchg
and
repnz
inc
mov
xor
decb
or
inc
ret
cs
mov
push
enter
je
adc
mov
out
fimuls
stos
insl
in
add
push
jo
lea
dec
mov
dec
push
or
push
push
aam
gs
mov
dec
sti
pop
rclb
sbb
xchg
loop
cltd
mov
mov
ret
mov
fstps
sub
frstor
add
imul
cmp
cmp
cwtl
mov
fwait
push
fisubl
rcll
dec
mov
jb
les
subb
fcompl
xchg
out
aad
rcrb
fcoms
mov
vpsrlq
out
xlat
stos
cmp
sub
push
inc
jb
or
xchg
clc
outsb
rolb
xchg
push
inc
xlat
gs
rclb
mov
jo
adc
pop
mov
loope
add
jg
out
fcoml
push
shll
sub
inc
icebp
ds
pop
dec
dec
xchg
popf
or
sahf
fadds
sub
ret
repz
fldenv
jo
jno
jg,pn
and
mov
lods
mov
aaa
sbbb
scas
sbb
inc
pop
inc
jno
add
jb
or
xchg
add
cmpsl
mov
cmp
pop
popf
repz
in
clc
jno
fs
xlat
movsl
js
cmpsb
or
fwait
push
push
jmp
fildl
add
or
dec
ret
ja
pop
push
leave
into
imul
or
add
lock
sbb
push
in
int
out
mov
outsl
pop
lcall
rclb
std
cs
xchg
test
pop
sahf
mov
rcll
fldenv
dec
mov
jge
sub
mov
not
sub
cs
pop
adc
cmc
cwtl
das
sahf
add
negb
insl
adcb
jmp
es
xlat
clc
cmp
outsl
out
xchg
dec
pop
cmp
jmp
leave
notl
add
mov
popa
shll
rsm
xor
pop
or
and
sub
lret
mov
dec
in
cmovb
cmp
dec
aas
inc
pop
insl
mov
jle
mov
out
int
xchg
repnz
gs
out
xchg
sbb
roll
push
std
cltd
sbb
popa
mov
jnp
sub
mov
adc
xchg
fs
incl
and
mov
test
ret
xchg
add
cs
mov
es
das
rcrl
xlat
pusha
daa
push
jno
push
testb
psubw
shll
add
pop
mov
out
scas
in
jle
ss
xchg
lods
jae
in
mov
inc
rclb
lock
gs
dec
lahf
mov
and
xchg
loope
adc
stc
mov
push
adc
jp
imul
pop
mov
xchg
jmp
push
or
and
adc
loope
andl
jbe
in
data16
add
roll
jne
dec
sahf
xor
sbb
mov
fs
sbb
loope
test
push
xor
out
cwtl
nop
js
pop
sub
inc
imul
inc
das
in
in
or
jbe
inc
xor
mov
fwait
xor
fisubs
jnp
adc
mov
dec
js
aad
imul
mov
mov
ja
mov
out
imul
inc
xlat
mov
sbb
nop
test
xor
idiv
mov
es
mov
add
call
leave
rolb
cmpsl
or
adc
or
addr16
clc
jae
cmc
xchg
repz
dec
ret
stos
outsl
pop
ds
push
ret
mov
xor
gs
lahf
inc
xor
sbb
jb
cmp
xchg
pop
mov
add
lock
hlt
sbb
ret
fsubr
adc
inc
flds
pop
inc
adc
xchg
add
outsl
cwtl
into
sbb
test
pop
int
cwtl
and
ret
and
loope
dec
dec
xlat
jns
xlat
aas
sbb
jl
test
sbb
out
jbe
popf
xor
mov
sub
test
push
pop
stos
push
stos
push
mov
fidivl
out
sbb
push
and
scas
outsl
xor
fs
jnp
jo
xorb
sub
je
xchg
jae
mov
push
popf
inc
or
scas
test
inc
xor
addr16
les
push
fcom
out
dec
iret
cmp
clc
fcompl
cmp
test
insl
popaw
lcall
mov
movsl
mov
dec
jg
outsw
lods
and
jno
pop
xor
mov
xor
fidivl
dec
popa
int3
mov
pop
in
cmp
dec
push
push
mov
or
popa
mov
aad
aas
sub
or
and
pushf
pop
pusha
jnp
dec
push
sarb
or
jp
and
in
jle
aad
roll
out
adc
movb
push
mov
mov
and
dec
push
aad
mov
push
push
leave
adc
add
fstpl
mov
out
lds
nop
mov
leave
lock
push
inc
dec
inc
dec
mov
pop
xchg
jg
and
frstor
cld
jg
push
stc
ds
mov
xor
xor
out
mov
lcall
pushf
out
pop
add
and
pop
aas
inc
sbb
jae
add
mov
fildl
ret
in
xchg
lock
inc
test
frstor
sarl
pop
mov
je
lds
imul
imul
push
insb
lret
popf
lcall
sbbl
stc
xor
mov
inc
stc
cmp
std
mov
dec
xor
sti
lods
movb
mov
leave
mov
lea
xor
loope,pn
and
movsl
mov
cltd
aam
lods
inc
mov
sub
fwait
push
fisubrs
and
adc
sub
dec
mov
mov
dec
imul
mov
insb
out
adc
lods
jne
xchg
mov
dec
or
insl
fcomps
fistpl
sub
push
adc
cmp
mov
mov
jecxz
pop
xlat
sub
cmpsb
sub
cmc
cwtl
iret
jmp
scas
sti
stos
cltd
pop
mov
insl
insb
movsl
iret
outsb
cmp
pop
iret
orb
mov
cmpsb
and
xchg
pop
mov
cld
inc
rclb
mov
popf
mov
jns
ja
or
cmc
adc
bound
cmpsl
arpl
mov
stc
out
aas
fsubrl
int3
enter
stos
push
cmp
in
mov
lods
adc
movsb
outsl
push
pop
cld
dec
pop
pop
adc
mov
xor
jns
leave
cmpsb
imul
jb
mov
mov
xchg
inc
mov
aas
push
push
mov
lods
mov
dec
psubw
pop
movsb
in
mov
addr16
cltd
ret
shll
mov
lcall
or
rolb
popf
jmp
xor
out
cmp
push
sub
push
mov
gs
inc
pop
cwtl
repz
pop
or
xchg
sbb
pop
imulb
pop
ds
aad
not
idivb
adc
cli
aad
or
push
jmp
outsb
enter
popf
mov
add
pop
scas
and
xchg
rorl
ds
push
fimuls
aaa
int
cli
mov
or
xorb
jecxz
jb
mov
notb
out
test
mov
pop
jge
pop
sub
mov
dec
mov
mov
call
jle
cmpsb
jge
mov
or
jnp
cmp
arpl
xchg
mov
adc
loopne
mov
sub
test
push
mov
sbb
jge
cmp
test
or
pop
stos
pop
inc
push
leave
jb
mov
xchg
pop
andl
pop
push
subl
dec
xor
fdiv
fcmovne
adc
aam
jns
aad
shll
inc
or
mov
add
add
dec
insb
xor
nop
pop
pop
mov
add
icebp
push
aad
pop
or
cwtl
stc
cmpsb
push
out
push
cwtl
in
fsubrl
repnz
mov
sbb
xor
inc
lahf
outsl
fcoml
aam
or
cmp
iretw
cli
pop
mov
push
cmpsb
imul
push
out
jle
mov
pop
shrb
icebp
add
lea
hlt
mov
push
cmpsw
pop
movb
jnp
stos
pop
std
nop
jno
repz
fcoms
mov
sub
imul
in
rorl
mov
push
xor
insl
inc
hlt
insl
jle
pushaw
ret
sub
sub
movsb
pop
sbb
leave
sbb
cld
jmp
pop
push
scas
lahf
es
push
ficoms
imul
pop
lahf
xchg
add
mov
push
mov
mov
loop
aas
repz
xor
hlt
aaa
pop
mov
push
xchg
cmp
dec
mov
mov
hlt
xor
fsts
cmpsb
test
shl
xor
scas
adc
push
adc
xor
lds
mov
and
enter
out
nop
ja
jae
loopne
mov
xlat
mov
mov
sti
dec
mov
aad
xchg
in
mov
cvtdq2ps
push
push
jge
mov
mov
pop
cld
pop
mov
icebp
adc
pushf
cmpsb
mov
decl
repnz
or
mov
push
insl
insb
out
dec
test
aam
pop
and
inc
jecxz
lea
mov
dec
or
outsb
loopne
add
mov
push
sti
and
addb
add
sbb
xchg
and
add
punpcklbw
mov
pop
mov
js
xchg
inc
flds
pop
jmp
es
pop
enter
shlb
push
xor
call
dec
movzbl
inc
xchg
frstor
fcompl
fdivs
mov
mov
sub
movsb
dec
movsl
sub
jle
out
idivb
xchg
mov
cmp
orl
je
sub
pop
fdivrs
mov
lea
int
cmp
fisttpl
push
movsl
push
out
sbb
out
mov
push
ds
push
out
mov
fidivrl
jne
mov
dec
in
inc
and
mov
jp
push
gs
pusha
stc
addb
int
cmc
shlb
pop
push
icebp
inc
fs
xor
dec
sbb
jnp
addr16
shlb
sub
mov
lods
dec
and
ds
sub
test
es
pop
pop
out
addl
lock
ljmp
jmp
mov
cmp
fldenv
add
pop
inc
scas
sbb
jno
jns
push
jnp
subl
loop
xor
rcrb
xchg
negb
aaa
leave
scas
cwtl
dec
or
dec
sbb
xor
jg
jl
cmp
add
pusha
mov
sub
cli
cmpsb
fidivl
add
pop
idiv
jne
jge
js
gs
mov
adc
lds
xchg
ja
push
adc
xchg
add
jne
test
std
push
stos
push
pop
out
arpl
rcr
cmp
std
sbb
arpl
int
cmp
lret
das
leave
mov
jecxz
ret
inc
gs
lret
jae
mov
mov
add
out
and
gs
fcoml
mov
pop
adc
adc
cmp
lret
add
push
in
pmullw
gs
lock
and
out
jecxz
mov
movsl
push
pusha
dec
das
push
and
jns
dec
push
je
adc
mov
adc
jg
cli
push
fcoms
sub
mov
and
cmc
jno
dec
inc
fadds
lds
pop
stos
xor
sub
add
push
mov
imul
xchg
push
xchg
inc
jmp
push
js
clc
cmpsl
addl
fmul
aas
stc
mov
aam
mov
dec
inc
addb
lea
inc
xchg
jl
mov
sub
sub
xchg
js
pop
mov
es
push
mov
mov
sbb
repz
mov
adc
fidivl
btrl
push
pop
lock
pop
and
sbb
dec
mov
sbb
fstl
fldt
in
add
inc
js
divps
or
in
aas
cwtl
fidivl
mov
ss
mov
test
cmp
dec
mov
dec
aaa
sbb
in
pop
in
sysenter
out
call
mov
mov
enter
jg
mov
outsb
xor
mov
adc
mov
fisttps
dec
mov
xchg
xchg
pop
stos
and
inc
loope
push
push
outsl
adc
push
sahf
in
pop
fbld
mov
xchg
adc
inc
add
test
jo
gs
and
cwtl
dec
dec
int3
lods
mov
aas
enter
push
lahf
callw
cmp
push
sub
stc
inc
ficoms
loope
cmpsl
outsb
aas
or
dec
fs
cmp
jge
mov
sar
mov
lods
sbb
xchg
sbb
je
ret
das
icebp
sub
jae
nop
shlb
inc
shl
sub
mov
xchg
ret
pop
testb
mov
stc
rorl
rcl
testb
enter
lock
inc
in
sti
and
in
mov
sub
popf
rcrl
das
xor
dec
and
out
jmp
or
cmpsl
icebp
addr16
cmp
or
bound
jp
orb
scas
xor
ds
mov
adc
mov
dec
pop
aas
loope
inc
repz
xor
bound
xor
fwait
and
sub
xchg
je
dec
and
jne
cmpsb
dec
roll
pop
iret
testb
mov
out
and
bound
mov
push
add
mov
sahf
jne
insl
dec
pop
xlat
jg
xor
scas
mov
mov
cwtl
aaa
xor
movsb
cli
jae
mov
xchg
stc
cli
call
xlat
jp
neg
dec
into
mov
jae
push
xchg
mov
mov
dec
in
enter
aam
out
or
pop
add
pop
imul
dec
mov
outsl
in
sbb
pop
incb
pop
pop
mov
sub
jp
ds
loop
fstpt
mov
ja
push
xchg
sub
jg
pop
mov
testb
pushf
cmpsl
jae
mov
arpl
in
jne
lods
xor
in
lahf
in
jb
mov
mov
dec
aad
js
cmp
movsl
stc
push
rcr
mov
add
ds
cmp
inc
aam
pop
scas
mov
or
scas
xchg
and
jmp
adc
push
mov
add
add
add
inc
lea
inc
jno
mov
sbb
cltd
into
jnp
dec
lock
adc
dec
cwtl
mov
hlt
dec
add
inc
js
xorl
pop
sub
in
xchg
fwait
hlt
imul
mov
aas
and
pop
repnz
mov
frstor
xor
je
cld
shll
lds
xchg
jae
add
and
jbe
adc
shrb
push
mov
pushf
fsts
cmp
sub
lock
sbb
mov
xlat
mov
mov
mov
add
mov
jg
adc
lahf
dec
jecxz
xlat
mov
out
enter
dec
adc
les
imul
fimull
mov
loop
adc
dec
cmpb
push
jg
mov
shlb
adc
mov
pop
sbb
dec
stc
mov
enter
lret
sub
sbb
lret
sub
jno
cmp
ss
adc
xchg
hlt
out
icebp
mov
daa
fwait
jo
mov
adc
jg
inc
outsb
inc
jns
lock
jecxz
fdiv
lods
xchg
fstl
jge
jo
xor
popf
push
aas
rol
inc
sahf
add
push
mov
pop
mov
jns
je
sub
fcompl
push
cmp
aas
bound
and
aad
adc
mov
jns
sarb
js
push
push
aaa
and
pop
cmc
jae
push
loope
pop
andb
lock
mov
mov
pop
arpl
dec
mov
cs
xor
clc
or
movsb
xchg
lods
icebp
cmp
or
xchg
inc
mov
test
jmp
inc
cmp
loopne
xchg
mov
adc
popf
ffree
cli
xlat
push
fstpt
addb
sub
mov
cli
or
pop
jne
cmp
mov
fsubs
mov
mov
dec
imul
std
int3
adc
add
sahf
mov
jp
or
mov
push
movsb
sub
cmp
sarl
rcl
cmp
xchg
pop
adc
mul
adc
out
sahf
cmp
add
fwait
sub
dec
mov
stos
add
cmpsb
sbb
inc
lods
in
or
decb
jbe
mov
push
fbstp
das
mov
add
lahf
mov
and
jae
sub
insb
push
je
inc
push
std
pop
fmulp
in
mov
mov
or
sub
scas
rcl
jns
sbb
icebp
lds
icebp
jo
inc
outsl
push
dec
insb
xor
je
xchg
arpl
sbb
cmp
jmp
cmp
aaa
mov
inc
or
notl
sbb
ljmp
push
cmp
sub
stc
mov
aad
sub
push
cmp
das
subb
sbb
enter
iret
mov
sub
cmpsl
add
stc
das
mov
test
add
cmc
daa
cmp
mov
inc
cmpsl
pop
jno
pop
sbb
shll
aas
dec
sbb
cmp
push
lret
pop
sbb
and
push
in
sti
mov
sbb
rcrb
lcall
mov
and
pop
pop
call
lods
addr16
bound
jae
mov
sub
xchg
dec
fisubrl
mov
fsts
gs
gs
ret
shlb
insl
sbb
movl
push
jg
dec
ret
sbb
fnsave
sarb
test
push
xor
in
gs
ss
or
mov
pop
mov
jnp
pushf
fucomp
std
int3
imulb
jmp
pop
xlat
stos
icebp
and
jne
rol
cld
loopne
cmpb
leave
add
aad
push
sti
and
leave
xchg
inc
push
bound
or
loope
lods
jmp
add
or
inc
inc
inc
dec
and
mov
inc
outsb
pop
add
xchg
sbb
aaa
xchg
xchg
test
push
cmp
xlat
data16
push
iret
or
dec
out
stos
jno
xchg
jnp
pusha
mov
hlt
data16
das
je
sbb
pop
out
mov
aad
jle
jns
imulb
mov
lods
cmp
mov
pop
jecxz
out
call
rcll
pop
dec
xor
pop
outsb
jne
xor
std
adc
jae
bound
ret
mov
std
xor
pushf
test
incl
xor
mov
lea
cld
push
popa
sub
iret
call
sub
lods
aam
cli
arpl
push
mov
ljmp
inc
add
and
cmpl
push
icebp
xchg
or
test
nop
xchg
fidivs
adc
ret
xor
pop
dec
imul
mov
cwtl
xor
jns
add
ljmp
fwait
mov
mov
mov
bnd
addr16
outsb
adc
cli
out
or
loop
repz
cmp
jno
inc
xchg
xchg
jne
xchg
xchg
cmpl
test
ljmp
jge
sub
hlt
inc
in
jne
cmpsl
cwtl
lahf
gs
into
out
jnp
out
movsl
cmp
fists
stos
arpl
jl
dec
mov
mov
addr16
shlb
inc
or
pop
push
pop
mov
mov
das
xchg
mov
pushf
mov
xchg
mov
mov
push
xchg
mov
arpl
jge
adc
movsb
inc
jne
mov
push
lret
push
cmpl
pusha
orl
leave
xor
mov
sub
ds
roll
nop
sub
xor
unpcklps
and
fadds
jecxz
addr16
std
popf
pop
mov
lret
push
jl
std
call
stos
xor
push
aas
push
int3
movsb
ret
xor
outsb
insl
push
mov
xchg
cmp
mov
pushf
ret
cmpsb
lahf
or
cs
enter
xor
imul
gs
outsl
or
lret
dec
mov
adc
test
and
dec
push
sub
dec
mov
aad
ds
icebp
fidivrl
xchg
add
cmp
push
pop
orl
sub
push
and
lahf
dec
fimull
mov
enter
iret
fnstsw
mov
adc
pop
adc
lods
xlat
push
sbb
pusha
in
int3
dec
pop
xor
leave
in
shr
aas
movsb
jb
or
ja
push
fs
and
out
cmp
ljmp
inc
jg
jp
bswap
mov
and
xor
lret
adc
add
inc
int
into
mov
cmp
or
jmp
repz
cmp
sbb
pop
outsb
insb
lods
ja
push
or
cmc
add
jecxz
insb
rclb
or
in
jns
sub
mov
bound
loope
mov
out
hlt
movb
cmpsl
adc
mov
stos
out
movsl
out
insb
pop
or
and
xor
mov
shl
adc
push
es
ret
inc
shlb
add
and
dec
xchg
icebp
lods
into
xchg
rcr
shrl
dec
dec
push
sbb
mov
sub
xor
cmp
inc
cmp
rcrb
mov
xor
test
imul
imul
jecxz
or
add
enter
xchg
repnz
rolb
adc
decl
and
and
fwait
ret
mov
inc
jb
dec
fldenv
pop
pop
lds
jae
xchg
sbb
xor
pushf
aad
adc
inc
cs
mov
adcb
and
subb
mov
adc
leave
adc
cmpsb
and
fnsave
pop
aad
mov
add
dec
cmpsl
out
or
push
outsb
xchg
les
ds
scas
insl
in
addr16
jno
js
out
push
ja
pop
push
movsl
inc
int3
stos
js
ss
sub
mov
cli
and
or
lahf
movsb
in
nop
int
adc
je
outsl
and
retw
clc
popa
dec
rolb
add
dec
mov
dec
sbb
int
cld
sbb
scas
mov
add
cmp
jl
pop
aas
dec
sti
ficomps
add
lret
inc
call
es
fsubl
push
rcll
rcrb
mov
mov
test
mov
mov
ja
aad
rclb
push
jmp
fistps
push
dec
ret
popa
xchg
jge
fidivrs
shrl
scas
stos
je
lock
or
icebp
jge
std
xor
leave
cs
out
ds
sbb
jno
adc
ss
pushf
lock
les
pop
bound
dec
adc
jle
sub
lret
push
add
and
sub
wbinvd
int
or
mov
dec
and
sub
scas
fnstsw
add
xchg
int
stos
jmp
loope
xchg
pop
sbb
in
or
data16
or
add
leave
idivl
xor
dec
aam
mov
xor
cwtl
aad
sub
or
sbb
test
lea
jmp
cmpsl
or
push
popf
push
inc
shlb
vcvtpd2psy
pop
out
sub
pushf
stos
incb
sub
dec
lods
scas
arpl
inc
xor
mov
into
xchg
fists
jb
ljmp
fwait
push
xchg
xor
mov
mov
mov
cltd
dec
mov
pop
jns
ret
dec
mov
loop
and
and
xor
sub
std
loopne
mov
jnp
in
ds
int
adc
lret
out
bound
push
or
xchg
lcall
stc
stos
callw
sbb
pop
adc
ss
lcall
aam
test
jge
jbe
mov
rorl
popa
add
in
pop
int
xchg
push
mov
xor
push
fsubs
outsl
out
out
popf
inc
leave
pop
mov
jmp
or
push
push
xchg
lea
inc
fiadds
xchg
fidivrl
sub
pop
fs
jp
sahf
outsb
test
mov
cmp
jle
cmpb
adc
pop
ret
xchg
aaa
testb
fiadds
sbbb
int3
cwtl
decb
shrl
in
jnp
sbbl
push
aad
in
sbb
jge
insl
mov
out
rol
and
inc
jge
mov
mov
and
push
sti
and
pop
dec
lods
mov
adc
movsb
repz
push
mov
outsb
inc
outsb
movq
frstor
fwait
popf
out
add
insb
lcall
xchg
lahf
rep
lds
dec
dec
pusha
ret
push
jbe
xchg
push
mov
mov
aas
fnstenv
movsl
sbb
dec
lods
and
clc
sbb
push
js
addr16
out
xchg
addr16
pop
mov
adc
loope
aam
inc
sarb
dec
hlt
xor
orl
adc
cmp
mov
dec
xchg
lock
call
inc
inc
add
sub
push
sbb
or
sub
repnz
imulb
addr16
mov
and
mov
lods
popf
or
xor
sahf
pusha
xchg
add
jp
cmpsb
mov
and
add
loope
mov
mov
mov
enter
fiaddl
push
mulb
sub
ret
scas
fcompl
aaa
xchg
add
dec
dec
lods
fidivrs
xlat
adc
leave
push
jnp
mov
rcrl
sub
fiaddl
inc
loop
sub
mov
fld
push
cltd
or
cwtl
xchg
cmp
fistpl
cmp
hlt
dec
out
push
sbb
dec
mov
push
pushf
dec
sub
xor
jno
or
adc
call
repnz
xchg
nop
mov
adc
aaa
andl
mov
pop
lock
out
movsl
xlat
and
dec
jo
dec
dec
lcall
push
fdivl
jle
jl
popf
and
xchg
jmp
cmpsb
cli
das
rorl
xchg
adc
cmpsb
sub
filds
rcrl
lock
xor
dec
stos
add
jbe
adc
cmc
mov
lock
repz
in
xor
stos
in
fldt
iret
adc
add
mov
jo
popa
insl
push
dec
pop
add
roll
dec
aam
nop
fidivrs
or
sbbb
leave
push
jbe
pop
add
sbb
iret
orl
jecxz
fildl
dec
adc
lahf
ret
adc
movsb
mov
stos
xor
xor
popl
pusha
sub
clc
mov
mov
shlb
test
imul
push
and
jo
ss
and
jmp
orl
mov
mov
notb
ds
mov
jg
pop
insb
push
aad
shll
fs
cmp
out
leave
loop
xchg
clc
movsl
movsb
jno
add
into
cmp
dec
stos
mov
mov
xchg
mov
mov
incb
test
mov
inc
je
je
dec
pop
jne
mov
fidivl
arpl
mov
gs
adc
and
ss
push
pop
in
aas
mov
adc
xor
xchg
mov
mov
clc
inc
and
mov
xor
and
xchg
vmwrite
aam
adc
pop
sub
filds
pushf
adc
sbb
stos
or
shlb
xor
add
add
push
fldl2e
pop
push
mov
mov
add
push
push
and
std
ret
je
shrl
not
mov
cmpsb
sbb
aaa
inc
hlt
aam
inc
leave
push
jp
or
fcompl
jge
push
jo
arpl
mov
mov
mov
mov
push
in
cmpl
xor
sbb
std
xchg
sub
or
sti
rolb
ja
mov
lahf
inc
icebp
ljmp
dec
fadds
inc
inc
mov
cmp
add
push
fcomi
jns
cmpsb
add
popf
stos
js
adc
lods
mov
and
jnp
pop
jp
xor
mov
xchg
andb
jecxz
push
push
hlt
pop
cltd
xor
sbb
rcr
sbb
lds
mov
dec
xor
ret
sub
mov
jns
jl
push
jo
inc
mov
jae
cmp
mov
pop
int3
out
xchg
mov
xor
mov
inc
and
or
cld
mov
aas
repz
fwait
test
and
pop
xchg
test
in
lods
or
sbb
push
ljmp
inc
dec
leave
mov
int3
test
jns
ret
cltd
out
mov
sahf
pop
push
stos
mov
push
or
jo
jge
sar
xchg
and
push
jne
or
cs
mov
sarl
xchg
ljmp
push
lcall
shl
and
clc
adc
mov
stos
xchg
ds
sbb
jge
movhlps
pushf
inc
jle
pop
xor
aaa
in
add
cltd
mov
mov
subb
test
sbb
lcall
aam
out
ret
cltd
add
mov
daa
inc
inc
not
mov
mov
sarb
enter
mov
lea
cmpsb
into
push
and
scas
pop
mov
push
add
push
and
push
jbe
test
addr16
in
scas
sar
mov
incl
fs
or
dec
pop
push
gs
div
jae
popf
gs
adc
push
xlat
xchg
sub
inc
sbb
in
pushf
ret
inc
sub
mov
jle
or
sub
test
or
insl
mov
popa
push
add
push
lds
popa
fsubrs
mov
stos
and
or
jno
jns
out
nop
xchg
ds
xchg
bound
imul
rorb
shlb
xor
std
cmp
nop
data16
mov
aad
pop
push
inc
clc
lds
xorb
and
or
in
cmpsb
movsb
popf
xchg
mov
fcmovnbe
std
shll
xor
mov
aaa
push
jne
stc
sbb
sbbb
jbe
arpl
or
test
and
push
push
adc
imul
test
fsubrl
mov
or
xchg
lock
ret
in
out
fucomp
mov
aam
jge
pusha
insl
stc
jmp
dec
das
adc
adc
cmp
dec
into
cmpsb
xchg
jbe
jno
push
pusha
loope
sbb
adc
and
add
leave
jb
xchg
rorb
ret
in
cs
dec
mov
fnstcw
jb
xchg
push
jbe
int3
push
mov
fmulp
pop
fwait
pop
push
jne
movsb
ffreep
mov
sahf
daa
lods
sahf
push
and
cld
add
inc
cmp
mov
ljmp
mulb
ss
sbb
xor
mov
clc
pop
mov
push
mov
jnp
fistps
dec
imul
adc
xchg
pop
jae
dec
sti
mov
jp
in
and
leave
mov
adc
fldcw
sub
sub
push
xor
mov
lcall
cltd
cmp
cld
or
hlt
stc
sbb
pushf
je
lods
lock
jo
adc
icebp
mov
les
xchg
in
std
imul
or
loopne
xchg
aas
dec
enter
test
cld
adc
loop
cmp
nop
pop
xchg
mov
lds
lcall
and
xchg
lcall
and
mov
das
dec
jns
add
mov
pop
jmp
jns
jb
mov
mov
std
pop
mov
mov
xchg
pop
addl
dec
test
push
mov
fdivrl
pop
popa
fimuls
mov
mov
cwtl
std
shll
mov
mov
dec
or
aad
add
js
in
and
push
sbb
arpl
rep
cmp
enter
mov
inc
sub
fs
mov
mov
gs
add
sbb
cs
mov
ret
jl
cltd
mov
xor
gs
jb
fidivl
lods
gs
mov
or
cmp
out
out
inc
xchg
ret
popf
xlat
shrb
loop
pop
mov
in
inc
xchg
and
sahf
inc
adcl
ds
push
mov
or
inc
jle
rcll
xor
add
mov
pop
mov
add
lret
icebp
data16
hlt
pop
aaa
test
packssdw
cmpsb
mov
mov
cld
sub
jo
loopne
int3
push
jns
xchg
enter
in
je
push
sub
xor
add
subl
cmp
pop
test
sub
lds
out
das
sbb
push
jne
mov
mov
andb
jne
jae
cmp
arpl
and
xchg
jnp
insb
fstpt
inc
or
inc
lret
lahf
ficomps
fdivs
call
add
inc
dec
inc
push
xorb
mov
and
pop
add
movsl
les
jnp
mov
iret
xor
outsl
insl
fnstsw
in
cmp
repz
es
movb
in
mov
movsl
push
addl
and
jge
mov
xchg
sbb
pop
int
pop
adc
jl
mov
lret
mov
push
fisttpll
std
inc
xor
and
pop
movsb
jae
orb
push
aaa
fcmovnb
mov
sbb
jge
cmpsl
shrb
pop
pop
dec
xor
adc
popa
stos
pop
pusha
pop
push
add
sbbb
adc
push
inc
dec
clc
out
outsl
mov
xlat
repz
xchg
add
fmull
clc
sbb
xchg
bound
cmp
cli
mov
mov
sub
jae
mov
xchg
xchg
in
push
dec
data16
push
xchg
es
adc
sarb
sarb
cwtl
stos
je
dec
fnsave
inc
scas
mov
or
out
pop
mov
int
jecxz
pop
push
xchg
push
dec
mov
push
push
clc
not
pushf
adc
pushf
clc
pusha
and
hlt
test
adc
pop
call
xchg
push
mov
push
push
cld
xor
adc
es
into
mov
adc
iret
mov
sbb
add
and
push
daa
mov
aad
iret
mov
iret
cmp
and
xchg
fistpll
mov
jb
stos
js
adc
sbb
mov
scas
mov
mov
jo
cwtl
push
pusha
orb
dec
push
sahf
inc
and
cmp
ret
xor
bound
sub
xlat
out
sub
inc
cwtl
in
pop
lret
jl
arpl
mov
test
test
fs
adc
or
dec
inc
push
and
mov
repnz
jns
mov
add
sbbb
sub
xchg
cmpsl
and
cld
fs
imul
xor
mov
dec
in
mov
adc
rcrl
xor
inc
xlat
mov
stos
mov
push
fistpl
add
xor
ljmp
test
insl
dec
sub
inc
xchg
xorl
repnz
out
mov
fs
cmpsb
popf
cmpsb
in
cld
push
jbe
xchg
int3
and
test
movsl
aam
push
and
push
nop
rcll
fdivl
cwtl
sub
cmp
repz
hlt
int
mov
addl
push
test
je
cmp
ds
and
js
outsb
push
lea
xchg
xor
add
scas
adc
xchg
jae
hlt
bnd
int3
loope
test
lret
orb
mov
shr
adc
sti
jne
push
sti
sub
push
adc
sbb
loopne
and
ret
pop
xor
test
jp
xor
outsb
shll
sbb
daa
es
pop
and
jbe
xchg
out
lret
mov
cmpl
in
push
sarb
sbb
into
jne
sub
lods
inc
rcrb
ljmp
pop
mov
jp
xchg
icebp
pop
orl
leave
pop
mov
scas
ficompl
pop
in
call
push
cltd
inc
bound
push
add
popf
mov
mulb
push
subb
imul
imul
addr16
adc
xor
lods
push
add
repnz
lcall
xchg
dec
es
add
xchg
mov
xchg
inc
mov
pop
addl
add
push
pop
sbb
xor
es
mov
test
jp
dec
sub
fs
xor
test
add
daa
aas
adc
sbb
sbb
sahf
add
jecxz
inc
sahf
push
mov
cmp
movsb
js
mov
pop
cltd
push
ss
xor
les
shr
jmp
dec
aas
mov
pop
dec
sbb
push
out
mov
adc
jmp
pop
es
ficomps
sbb
lods
sbb
ss
jo
xchg
pop
ja
push
push
sti
mov
cmp
jge
nop
cmpsb
mov
and
dec
test
mov
in
inc
jb
push
insl
pop
mov
lods
mov
enter
incl
adc
inc
fldcw
and
mov
orb
inc
das
imul
stc
adc
gs
jmp
mov
out
dec
mov
jo
imul
or
out
add
sub
push
mov
or
bound
mov
xchg
sahf
ficompl
xor
lock
rorl
push
rorl
popa
sti
gs
adc
push
dec
add
sbb
sti
and
xor
inc
jne
sbb
xor
xor
adc
jg
js
inc
call
gs
out
das
and
popf
cmp
pop
out
leave
jg
test
insb
mov
repnz
push
scas
js
inc
jbe
sahf
mov
cmp
pop
data16
mov
push
aam
repz
gs
add
fldl
xchg
push
out
cs
pop
rep
or
fwait
or
ljmp
fs
inc
or
and
jnp
test
cmp
mov
jno
mov
sahf
stos
xchg
and
push
insl
mull
jle
pop
jno
mov
add
add
mov
scas
sub
jge
sbb
lsl
ds
push
push
xchg
mov
in
mov
in
push
xchg
loopne
or
or
stos
imul
dec
fistpl
jl
jbe
xor
xlat
in
adc
sbb
mov
loope
inc
pop
icebp
icebp
sbb
and
in
gs
push
je
sub
les
cmp
shrb
lock
mov
es
les
adc
xor
mov
int3
adc
mov
addl
addr16
push
push
adc
aam
lret
push
jae
add
jno
out
and
lea
mov
pop
pop
call
xchg
pop
fcom
out
hlt
pushf
xchg
push
rcr
mov
fsubs
dec
ret
and
out
dec
pop
cld
xor
stos
imul
movsb
xchg
xor
pop
fistl
fildll
ror
dec
adc
dec
adc
movhps
dec
jbe
xchg
push
subb
and
sub
mov
aaa
mov
ror
outsl
jns
mov
inc
test
cmc
pop
divl
pusha
add
xlat
jge
cmpb
test
divb
dec
in
fistpll
test
dec
push
ret
pop
jne
pop
leave
hlt
dec
ret
mov
pop
inc
in
and
ljmp
pop
and
cmp
push
xor
push
mov
pop
inc
filds
cmpsb
inc
stc
insb
ss
lea
pop
push
ja
dec
mov
dec
out
cli
xor
int3
push
cmp
xchg
call
ds
test
int
mov
fimuls
nop
sti
pop
in
push
outsb
lret
fs
pop
jne
and
cmpl
and
pop
lds
fsub
stc
mov
icebp
pop
test
cwtl
mov
adc
test
fstps
imul
pushf
xlat
cmpsl
lahf
dec
lods
cltd
xor
jbe
rorl
xorl
das
jle
push
sub
test
inc
mov
adc
aaa
jne
cmp
mov
inc
fs
mov
fpatan
ljmp
and
mov
pop
mov
in
jp
aam
sqrtps
test
cmp
ret
lods
js
jo
jb
lods
fnstenv
nop
push
cmp
push
sub
jne
outsl
shll
in
out
push
sub
xchg
adc
cmp
pop
add
gs
adc
inc
mov
sbb
xchg
test
mov
mov
aaa
aas
and
int
push
into
lds
ljmp
mov
sub
sbb
jmp
push
movsl
sbb
test
lea
rcll
mov
out
cmp
push
add
and
in
add
test
jl
mov
in
fdivrl
ja
adc
inc
ret
shr
push
enter
cmp
inc
mov
stos
je
or
and
outsl
inc
add
pushf
jmp
in
xor
test
lea
cmp
std
out
fs
and
clc
xchg
std
xor
push
jecxz
pop
mov
shrl
add
dec
mov
fcomps
inc
fstl
sub
mov
or
pop
mov
cmp
inc
incl
mov
mov
jg
ljmp
and
lret
hlt
xchg
cltd
or
sbb
test
mov
inc
dec
ss
fcomi
cmp
repnz
cmpsl
dec
out
cmp
jg
call
ljmp
outsb
jge
mov
aaa
repz
enter
add
test
repnz
in
sub
testb
mov
call
insl
mov
and
sub
add
inc
ret
dec
pushf
out
adc
adc
mov
inc
jg
addr16
popa
loope
imul
sarb
lcall
das
popa
out
mov
add
dec
jle
lcall
fstpt
pusha
popa
cmp
mov
popa
loop
popa
jae
xchg
ds
mov
cmp
movb
mov
xchg
into
xor
mov
pop
mov
mov
xchg
jne
sub
cmp
sbb
hlt
mov
stc
mov
and
ss
or
mov
rclb
clc
or
sbb
loopne
cmpsb
jp
shlb
aaa
pop
mov
in
popf
loop
cmpsb
orb
xchg
popa
mov
pop
sub
out
jns
inc
and
xor
xchg
mov
push
repnz
inc
movsl
rcl
imul
pop
mov
ja
ja
cmp
hlt
cmp
pop
pusha
mov
push
test
sub
sub
sarb
pop
out
add
mov
pop
in
aam
outsb
je
inc
ret
add
dec
divb
in
stos
xchg
sub
inc
adc
inc
cmpsb
inc
iret
rcr
jno
into
inc
rcr
fdivp
lds
shll
or
shlb
mov
leave
mov
inc
shrl
jne
push
in
jge
add
pop
mov
inc
jl
jecxz
int
inc
scas
sub
stos
xchg
enter
mov
mov
nop
dec
dec
cmp
aas
movntps
ret
jno
mov
jge
jb
jo
aad
push
int3
in
sahf
jne
jecxz
pop
sbb
mov
mov
data16
test
and
or
and
lods
lds
rcrl
int3
test
aam
xchg
nop
or
mov
inc
jmp
sub
add
mov
je
lock
mov
xor
leave
mov
divl
and
mov
daa
clc
pop
pop
test
shll
and
and
push
push
out
jecxz
nop
out
push
daa
jmp
scas
nop
pop
test
dec
xchg
out
jbe
test
dec
mov
push
rcrb
sbb
and
pop
ret
xor
out
sub
mov
fdivrs
cmp
fimull
push
add
inc
subb
ficomps
sub
pop
inc
jle
ss
cli
imul
cmpsb
ja
adc
cmp
negb
mov
xlat
mov
dec
rcrl
jmp
vcvtps2pd
inc
stc
scas
dec
popf
stos
xorb
jmp
int
stos
lahf
rorb
insb
pusha
and
and
adc
fnsave
cmp
push
aas
and
dec
jno
mov
sti
jns
leave
jo
push
or
setbe
cmc
sbb
push
cmp
insl
mulb
jmp
cmpsb
out
clc
or
xchg
cmpsb
loope
movsb
xchg
in
mov
xor
mov
sbb
sbb
decl
jg
xor
movsb
shl
jp
mov
test
xchg
shr
cmp
mov
mov
cmp
sub
int
mov
push
sub
into
negl
inc
adc
fucomi
test
mov
les
pushf
aad
clc
scas
add
mov
and
bnd
mov
hlt
push
and
mov
inc
pop
sub
aaa
xor
fucomp
addr16
inc
mov
adc
addr16
test
cli
xchg
push
jne
mov
out
jg
dec
outsb
cltd
sub
adcl
into
xchg
sub
push
imul
sbb
loopne
xchg
aas
mov
xlat
pop
lahf
call
lret
les
adc
insl
and
xchg
pop
sbb
out
jnp
inc
inc
je
or
pushf
es
mov
and
aas
mov
push
jns
sub
outsb
ror
clc
dec
std
fs
mov
push
add
mov
jle
pop
and
ret
dec
xor
xorb
fcmovne
pop
inc
jb
out
roll
ficoms
push
pop
or
xchg
pushf
mov
mov
fstpl
xchg
mov
gs
dec
inc
pop
add
aam
out
push
fcomp
int
lcall
pop
cmp
cmpsl
imul
fsub
inc
jb
jb
adcl
cmp
or
jne
mov
add
mov
sub
push
mov
jb
sbb
inc
stos
pop
dec
aad
adc
xchg
pop
repz
jne
flds
or
test
xlat
inc
cmp
xchg
bound
int3
pop
mov
aas
sbb
out
data16
cmp
inc
push
dec
andl
push
andl
jp
mov
mov
test
sub
call
sub
shlb
pop
adc
fdivrl
sub
sbb
jnp
and
sti
and
jmp
mov
cmpsb
jbe
jecxz
mov
jae
mov
arpl
es
loop
push
outsb
or
adc
sarl
sbb
pop
mov
add
fs
jnp,pn
mov
pop
jecxz
stos
into
xor
jecxz
mov
test
sarb
ljmp
adc
pop
pop
test
pop
dec
pop
mov
rcrl
sbb
jp
mov
inc
mov
ljmp
dec
fwait
sahf
pop
mov
push
aaa
push
jecxz
sti
jno
leave
mov
lods
addl
dec
hlt
dec
test
outsb
pop
push
incl
sub
iret
out
cltd
or
cmpsl
jo
cld
rcrb
mov
xchg
xchg
ss
out
add
outsl
cld
test
mov
test
inc
xor
loopne
sub
movsl
clc
lret
xchg
push
mov
loopne
xor
push
outsb
fdivr
mov
mov
js
xchg
xchg
jp
and
sub
movsb
repnz
push
ret
dec
cmp
sub
jecxz
shrb
int
mov
mov
mov
cmp
pop
sub
xchg
xor
or
dec
push
insb
test
lods
arpl
shlb
mov
dec
sbb
xchg
cmc
fsubrs
mov
hlt
mov
lods
push
loope
mov
jecxz
iret
stos
push
pop
sahf
or
jb
pop
fs
cmp
lock
jae
lcall
fidivrs
loope
fcoms
bound
jp
xor
xor
cmp
jg
xor
sbb
cltd
fwait
js
mov
movsl
pushf
mov
sahf
mov
push
hlt
fwait
in
fnsave
dec
dec
mov
mov
mov
mov
inc
mov
push
pop
insb
dec
imul
pop
xchg
mov
dec
stos
sti
jecxz
sahf
lods
mov
xchg
mov
jecxz
movsl
push
cmp
push
enter
or
into
sti
adc
test
scas
scas
imul
test
jno
adc
loope
and
mov
mov
cltd
rclb
imul
jbe
mov
into
in
sub
xor
scas
lret
loop
adc
test
cld
out
enter
jnp
sbb
jp
std
jno
sbb
sbb
mov
je
xor
mov
pop
mov
mov
gs
mov
test
aad
shll
bnd
xchg
dec
mov
lds
push
inc
adc
mov
aam
xchg
mov
sahf
inc
push
outsb
or
stos
mov
fdivl
hlt
sub
jg
add
popa
xchg
je
rorb
lahf
jge
dec
push
cld
mov
mov
cmp
dec
test
pop
push
mov
jo
mov
std
and
ljmp
xor
push
lea
inc
mov
or
rcrl
mov
mov
pop
pop
adc
dec
mov
pop
adc
popf
mov
mov
lea
add
jb
ret
out
push
loope
jmp
adc
jmp
lahf
cmpl
xchg
lods
mov
jmp
push
jp
faddp
gs
mov
mov
mov
or
adc
aad
ret
movl
cmp
dec
inc
mov
call
leave
stc
push
into
sub
test
sub
insb
xchg
add
push
push
xchg
pop
je
pop
dec
mov
mov
insb
aad
subl
jns
xchg
and
lods
adc
push
lahf
jae
dec
or
or
xor
xchg
sub
xor
clc
in
in
cmp
aas
in
or
stc
out
and
push
jae
shlb
sbb
pop
nop
jmp
movsb
inc
jle
add
xchg
gs
mov
mov
mov
ret
fmul
mov
outsb
arpl
add
mov
jmp
aam
add
jg
xor
or
pop
rol
pushw
clc
mov
pusha
cmpsb
lret
outsb
adc
or
push
adc
aad
fdivs
add
ret
sbb
cmpsb
adc
mov
or
adc
insb
mov
dec
mov
mov
inc
dec
push
sub
fnsave
mov
bound
xchg
xchg
inc
leave
leave
repnz
in
fwait
pop
xor
xor
pusha
mov
cmp
or
pop
mov
negb
das
push
ret
movsb
inc
sub
in
inc
bnd
insl
cmpsb
addr16
sub
enter
dec
pop
lcall
test
mov
enter
aad
push
adc
adc
outsb
lret
js
and
sub
clc
sbb
ret
mov
pop
aad
add
in
pop
cmp
lcall
jbe
xor
lods
xchg
pop
aas
rcrl
xor
je
stc
stc
ret
lods
ds
loope
in
adc
push
sub
adc
cmpsl
icebp
push
out
xchg
es
xor
xor
or
mov
enter
pop
inc
xchg
jb
add
pushw
jmp
add
push
adc
lock
in
xor
dec
mov
sub
fists
or
pusha
inc
add
pop
mov
mov
sub
mov
lods
cmp
out
pop
xchg
jmp
mov
dec
jne
add
mov
aad
mov
dec
outsb
rsqrtps
push
push
stos
mov
sub
jle
mov
lea
adc
adc
cmp
lahf
arpl
pop
cmc
pusha
or
xchg
js
pop
adc
fcomps
pop
lret
sbb
xlat
inc
pusha
iret
xor
push
jne
mov
inc
mov
rclb
inc
and
out
sbb
mov
pop
insl
test
sbb
insl
or
and
fistl
xchg
or
mov
stc
scas
das
push
ret
popa
mov
scas
adc
jo
leave
rcll
lcall
cmp
push
mov
andb
add
add
fldenv
or
xchg
mov
jl
cmp
add
xor
fs
mov
out
jg
leave
xchg
push
jb
lds
mov
insb
rclb
push
cltd
aam
sub
dec
je
or
push
jl
mov
sahf
pop
hlt
jne
or
shl
sbb
repnz
sbb
sbb
dec
loopne
sub
cmp
lahf
jbe,pn
les
xor
cvtpi2ps
scas
inc
pushf
mov
int
outsb
cld
xchg
and
jb
inc
sahf
in
sbb
icebp
xchg
xor
int3
in
or
cli
add
adc
add
fisubs
into
and
out
lcall
and
xchg
int
decb
push
jno
jb
cld
lret
xchg
or
xchg
mov
in
add
mov
stc
jge
mov
stos
mov
sahf
sahf
inc
jns
cld
fisttpl
das
sbb
lods
cmp
pop
mov
cmp
hlt
insl
mov
mov
mov
lahf
sbb
in
aam
dec
cmpsl
testl
data16
orl
pop
enter
out
pushf
inc
mov
je
or
pop
add
dec
push
push
push
fsubs
inc
out
call
add
sub
mov
xlat
outsl
sub
xor
cltd
aas
jb
inc
xchg
lret
and
scas
ret
imul
movsl
and
inc
addr16
dec
push
cwtl
movsl
mov
ret
mov
xor
xorb
pushf
in
mov
sti
or
mov
mov
stc
pop
pop
jl
inc
and
pop
subb
jecxz
fwait
jne
cltd
aas
or
imul
sti
imul
jb
insb
xor
pop
ret
adc
test
push
or
sub
or
xor
jmp
push
add
clc
mov
and
fwait
jle
cmp
sbb
out
std
addb
and
js
insb
xor
adc
mov
push
xchg
jb
inc
pop
xor
lret
push
mov
sti
add
inc
pop
pop
sbb
jnp
cli
and
push
sbbl
clc
mov
mov
pusha
mov
in
sbb
repnz
pop
cmp
add
inc
xor
jge
or
xchg
mov
addr16
jge
pop
jno
mov
mov
cli
pop
sub
xchg
cmp
outsl
repz
mov
push
scas
mov
imul
push
cmp
or
sub
fistpl
or
add
xchg
leave
and
push
in
iret
jo
sbb
mov
call
lds
jo
inc
mov
or
int3
adc
popa
sub
xchg
arpl
nop
rcrl
lea
adc
orb
mov
sub
xchg
push
aaa
outsl
imul
data16
fisttpll
push
out
jge
das
adc
fiaddl
cmp
xor
test
popa
sub
xchg
inc
int
arpl
pop
add
sbb
stos
and
sub
sbb
or
in
sbb
iret
subb
jne
and
adc
mov
cli
mov
jp
addr16
outsl
rol
stc
fcmovbe
lock
jp
out
xor
mov
cmp
pop
iret
cmc
test
aam
lahf
cltd
and
test
xchg
mov
jne
outsl
pop
xor
inc
or
notb
rclb
cmp
notb
mov
pushf
dec
cmp
lods
in
daa
jo
mov
aad
lods
jp
mov
stc
repnz
pop
sub
xorl
aaa
pusha
sbb
pop
push
out
outsb
cmp
dec
pop
jo
out
mov
lock
mov
xchg
ljmp
cmp
jne
loopne
mov
xor
ret
jno
mov
sub
fs
dec
aam
sub
repnz
and
xor
popf
lods
inc
cmp
inc
out
xchg
jecxz
cmpsb
faddl
outsl
cmp
aam
sbb
cltd
pop
cmpsb
inc
out
test
and
scas
push
xor
add
pop
or
adc
inc
mov
out
cmpsl
ss
fidivl
stos
pop
pop
dec
add
jae
mov
cmpsl
mov
sub
movsb
jae
add
pop
jbe
jg
repz
loop
lcall
mov
cli
mov
lds
out
inc
or
or
xorl
or
adc
xchg
adc
inc
fcoml
fwait
jmp
xchg
dec
jno
mov
cmp
cs
out
lods
pushf
or
jo
adc
icebp
mov
push
leave
hlt
fcoms
sahf
repnz
inc
icebp
div
jmp
jb
mov
les
outsb
pop
cmp
pop
insl
call
push
sbb
stc
es
enter
xor
jo
push
pop
inc
scas
fsub
repz
out
jge
sub
xchg
and
jbe
dec
test
dec
mov
cmp
adc
push
js
mov
stc
pop
gs
mov
int
sbb
je
aam
xor
loop
sbb
pop
lcall
xchg
sub
fstpl
sahf
push
mov
imul
cmp
inc
pop
sub
lods
movsl
cwtl
pop
lock
xchg
jmp
push
pop
adc
dec
lods
mov
cmp
or
jo
fucom
cs
push
daa
push
aad
push
icebp
loopne
adc
ret
cmp
lret
outsb
mov
movsb
xchg
adc
enter
clc
lcall
lret
push
outsl
jae
cs
popf
push
arpl
pop
cmp
cmp
nop
mov
or
cltd
rorb
lahf
daa
mov
xchg
adc
mov
xchg
ds
push
sub
stc
stos
mov
ja
mov
scas
dec
scas
sbb
enter
mov
call
push
hlt
mov
fcompl
and
lret
iret
dec
cltd
je
mov
shlb
lret
cld
pop
leave
jmp
ja
cmp
mov
mov
mov
je
fwait
aad
sbb
test
jg
dec
sbbl
outsb
mov
jne
subb
mov
push
inc
push
ss
mov
fidivrl
cmpsl
xchg
in
cmpsb
cmp
xor
jne
cwtl
movsl
jle
mov
dec
stc
adc
cli
test
jmp
push
mov
jp
mov
inc
push
dec
mov
aaa
sbb
ret
lret
pop
cs
maskmovq
testl
cmp
rorl
jmp
sub
or
popl
movsl
sbb
cmc
sbb
push
mov
fists
mov
dec
mov
pop
rcrb
dec
push
adc
cli
push
sbb
mov
movnti
mov
mov
dec
add
pop
xchg
dec
xchg
dec
push
decb
rclb
jmp
mov
xchg
mov
mov
add
mov
fisubrl
fs
push
fisttpll
inc
lods
sub
mov
stos
jp
cmp
test
and
adc
and
xchg
mov
sub
stos
and
cmp
xor
cli
repnz
or
pushf
xorl
or
sbb
scas
add
out
je
cmpsb
inc
rorb
icebp
xchg
out
loopne
loop
jno
jecxz
fbld
jecxz
jle
les
sub
adc
add
cli
add
dec
lahf
in
cmp
push
push
add
add
fs
mov
sub
cmp
aad
inc
xor
ljmp
test
xchg
pmaddwd
lret
push
or
jecxz
lock
dec
dec
jno
mov
aaa
pop
lock
rcrl
lcall
stc
push
hlt
xlat
and
fcomps
ret
mov
pop
insb
xchg
pop
push
std
add
popa
imull
pop
dec
push
lcall
adc
aam
fwait
adc
and
jbe
add
mov
or
inc
insb
into
fldt
sbb
gs
xorl
sar
jae
mov
lea
mov
int3
sub
dec
adc
xchg
cld
pusha
mov
icebp
cld
ret
sub
cs
xor
scas
lds
jg
loope
or
inc
icebp
inc
jge
mov
test
push
cmpsb
xor
icebp
add
jns
movsl
xor
sahf
ja
cmp
pop
cli
test
fadd
fldt
mov
lds
in
xchg
mov
sub
sbb
int
test
shrb
adc
ds
dec
out
mov
jmp
test
and
lahf
jmp
dec
push
std
std
ret
jecxz
movsb
push
inc
pop
xor
mov
jl
in
inc
lret
mov
rorl
dec
cmp
xor
cltd
xor
dec
dec
aad
and
sbb
fldcw
mov
xchg
pop
mov
and
mov
repz
mov
sbb
xchg
xchg
jge
dec
cltd
js
jae
out
out
inc
fists
mov
adcb
cld
imul
push
cmp
and
loop
lcall
ja
xchg
cmp
lods
insb
sub
pop
inc
out
lds
mov
cmp
pop
jno
fdivs
nop
clc
loop
andl
push
push
cs
imul
xor
dec
add
movsl
inc
add
lahf
sub
push
inc
xchg
addr16
pop
cmp
jns
fstps
or
dec
add
and
aaa
and
xor
rcr
cmp
cmp
sbb
mov
add
loopne
insl
add
jl
cs
stos
mov
cwtl
inc
sbb
ret
ljmp
pop
lret
xchg
and
xor
cmpsb
or
daa
fmull
ret
pop
adc
fiadds
jne
add
mov
shrl
pop
icebp
imul
xchg
stos
or
adc
jecxz
pop
adc
mov
cmpb
outsb
adc
push
jno
dec
and
sub
loope
nop
sub
or
mov
inc
jnp
les
mov
and
add
xor
push
push
sub
mov
mov
lods
aas
and
dec
xchg
and
out
dec
dec
iret
xchg
xchg
aam
fwait
push
stos
pushl
outsl
insl
enter
rorb
fldcw
cmpsl
roll
out
das
pop
pop
inc
cmpsl
out
sbb
pop
inc
outsb
andb
cmpsb
popf
testl
xor
xor
arpl
mov
jnp
and
cmp
sarl
mov
cmpsl
movsb
or
in
mov
pop
add
and
das
mov
arpl
pop
and
and
push
mov
adcb
xchg
inc
fildl
enter
clc
imul
mov
fincstp
loope
jmp
fs
or
jecxz
xlat
lret
sub
repz
mov
adc
cmp
repnz
movsb
sub
inc
push
js
lea
mov
into
cmpsb
adc
repz
cltd
adc
dec
xor
int
push
pushf
notb
fwait
inc
cwtl
ret
outsl
cli
xor
lcall
pusha
adc
push
mov
dec
aam
adc
xchg
adc
shll
incb
cwtl
rcll
movsl
inc
lods
leave
sub
sub
sub
insb
scas
aad
adc
popf
cltd
pop
xor
mov
sub
aad
sub
adc
rolb
jns
lods
add
sbb
insl
pop
ds
mov
xor
pop
int3
les
xchg
aam
sbb
sub
or
cli
stc
sub
test
loop
mov
mov
or
sbb
test
sarb
sbb
and
test
loopne
xchg
cli
jecxz
hlt
cmpsb
neg
shrb
sub
loopne
xchg
dec
cmp
sahf
xchg
outsl
mov
jns
dec
shrl
call
pop
es
adc
rcrb
fstpl
jp
inc
inc
push
movsb
push
mov
sub
and
adc
xorb
test
mov
lea
fnstenv
cmp
addb
flds
sti
adc
in
or
xchg
push
mov
pop
push
cmp
pop
mov
push
sub
or
add
inc
in
sbb
cmp
mov
pop
sbb
into
sbb
aas
ret
ret
sti
iret
adcl
adc
and
popa
push
mov
fiaddl
adc
test
sbb
rcrl
lock
ljmp
mov
xchg
test
aam
xchg
mov
jmp
jb
mov
std
ljmp
xchg
push
mov
fdivrs
lret
pop
sub
rolb
push
jge
push
or
orb
in
bound
jmp
pop
hlt
clc
xchg
pop
das
ds
inc
cltd
nop
xchg
pop
push
outsl
dec
test
mov
cmp
and
cmp
and
xor
sub
dec
imull
cmc
sbb
adc
jmp
xchg
xor
sbb
stos
inc
pop
jo
nop
mov
pop
stc
aam
adc
popf
repz
xor
sbb
xchg
rorl
int
jns
or
sti
xlat
sub
push
fdivp
or
je
sub
jge
shrl
scas
xor
sbb
inc
ss
addr16
cld
loop
mov
shll
sbb
dec
ljmp
sub
add
shlb
stos
clc
in
xchg
mov
sahf
lret
mov
xchg
push
adc
jle
mov
xchg
jb
mov
xchg
sbb
dec
in
mov
imul
shr
pop
pop
mov
mov
xor
lods
lock
dec
xchg
inc
jns
aas
xlat
sbb
stos
ja
push
out
out
mov
aad
inc
cld
mov
mov
inc
or
fldl
xchg
rcr
loop
scas
lret
xor
cltd
mov
xchg
jnp
pop
inc
data16
rclb
pop
test
push
in
vmovntps
sti
lea
xor
stc
lods
jns
stos
sbb
mov
scas
andl
rep
sbb
jns
stc
xchg
mov
ja
or
repz
hlt
in
jge
cs
pop
and
adc
dec
mov
ret
mov
lahf
aam
test
cld
mov
icebp
jae
mov
inc
insb
dec
fcoml
and
std
or
sub
out
or
inc
shlb
and
imul
loop
fwait
xor
push
nop
scas
popa
mov
cs
cmp
sub
jo
scas
cmp
cli
lret
and
ret
in
dec
sub
xchg
or
push
mov
push
or
or
aaa
jl
xchg
aas
imul
jmp
adc
mulb
sti
aad
xchg
cmp
pusha
xchg
test
call
popf
dec
mov
push
inc
pop
lock
and
jae
shll
xchg
jmp
scas
or
shl
adc
rorl
mov
adc
jbe
cmp
sbb
push
int
adc
mov
or
inc
jp
jnp
hlt
xor
mov
fmuls
cmovo
dec
and
sbb
mov
subl
mov
mov
mov
fbld
sbb
lock
fdivl
xchg
bound
xchg
and
xchg
add
cwtl
mov
xor
or
fldt
iret
push
jae
loope
mov
divl
cmpsl
jg
or
sahf
ljmp
ud1
sbb
xchg
push
cli
enter
or
ret
mov
push
lds
scas
inc
sarl
add
in
ret
add
int
bound
mov
hlt
mov
mov
or
dec
sub
jl
int
mov
dec
sub
pop
das
testb
dec
cs
in
cmp
jmp
stc
mov
in
out
scas
pop
outsb
cld
pop
popa
aas
test
out
add
js
hlt
xor
push
xchg
insb
mov
inc
scas
out
shl
aaa
adc
or
dec
jp
push
sub
jno
mov
push
cmc
xchg
cmp
mov
inc
xor
hlt
imul
jbe
js
push
inc
addr16
xor
lahf
data16
cli
pop
fucomi
inc
stos
idivl
test
std
shr
stos
jg
mov
mov
or
sbb
popf
sub
stos
test
sub
addr16
call
pop
roll
loope
movsl
lock
pop
cmp
into
adc
fldenv
adc
push
sbbl
cli
push
or
cmp
arpl
mov
jo
lahf
jmp
add
rclb
sarl
adc
mov
std
les
dec
mov
sub
xor
lret
pop
ret
nop
sahf
into
inc
jbe
sbb
xor
int3
es
ds
xchg
fsubrs
jmp
mulb
inc
rol
das
mov
jl
or
or
aaa
rorb
andl
cmp
insb
incl
cmp
lcall
test
xor
testb
out
test
fcoms
mov
mov
fisttpll
jmp
loopne
shrl
enter
aas
mov
add
push
or
jl
xchg
insl
push
jmp
push
lods
xor
sub
cltd
cmpsb
movsl
rcr
xor
sub
mov
mov
inc
enter
fadds
psadbw
test
out
fnstsw
jne
enter
out
inc
jl
or
sahf
jg
in
mov
inc
mov
imul
push
pop
frstor
int
dec
ret
jl
mov
xchg
jne
sub
out
test
aaa
loope
pop
cmp
mov
data16
fdivl
aas
ret
fwait
mov
pop
es
mov
dec
movsl
add
jae
push
cmpsb
gs
movsb
hlt
add
mov
lock
xor
pop
jecxz
and
or
pop
insl
mov
xchg
int3
pusha
xlat
jmp
pusha
jp
movsb
xchg
jle
mov
leave
jle
popf
jl
pop
dec
adc
lods
jno
lods
sbbl
in
or
adc
lahf
xor
pusha
sub
jb
inc
mov
imul
pop
aad
xchg
hlt
loop
adc
pop
ficompl
push
xchg
mov
stc
xor
adc
imul
mov
iret
js
mov
cld
xchg
mov
bnd
stos
mov
and
int
xchg
and
dec
sbb
mov
lods
jno
loopne
jne
xor
test
sub
adc
push
hlt
jns
ficoms
pop
sub
or
pushf
lcall
mov
fsubs
insb
imulb
andb
out
lret
bound
stos
lret
cmp
and
aad
loop
scas
aaa
xor
jbe
pop
pop
pop
call
mov
inc
fistpl
aam
jno
mov
aad
or
jmp
mov
sub
dec
pop
xorl
mov
les
adc
loope
xor
leave
imul
xchg
push
adc
inc
pop
mov
roll
mov
daa
je
ds
push
xor
xor
cmp
mov
jl
xor
cltd
mov
cmp
clc
push
pop
sar
mov
mov
addr16
fldl
and
cmp
lea
adc
mov
xor
xchg
pusha
scas
out
loopne
push
cwtl
cmp
loope
cmc
ljmp
cmp
cmp
mov
mov
fsubrl
int3
mov
fadds
lcall
jmp
adc
fstpt
xor
aas
clc
cmp
jg
adc
js
dec
loop
sbb
fs
rorb
mov
ds
loop
cli
mov
lods
pop
jae
dec
push
inc
lahf
pop
test
xchg
cmc
push
cmp
xchg
push
mov
imul
scas
leave
stc
hlt
adc
aad
pop
les
mov
fdivl
aas
sub
loope
mov
mov
mov
cmc
int3
movsl
and
mov
lahf
inc
cltd
or
stos
push
lret
inc
dec
inc
and
lret
mov
xchg
ret
mov
in
lock
jg
pop
sub
das
testb
xchg
xlat
scas
jp
jge
xchg
ljmp
ret
or
sti
mov
adc
or
movsl
icebp
dec
mov
ljmp
push
clc
mov
jno
fdivrl
cmpsb
adcl
es
sbb
push
add
movsl
popa
outsl
pop
shlb
jae
cs
xchg
cld
adc
inc
cwtl
push
mov
jp
cltd
addr16
push
bswap
pop
shlb
movsl
xchg
pop
fs
push
inc
xlat
aas
pusha
lahf
cwtl
sbb
mov
and
jl
pop
in
cs
mov
ljmp
leave
xchg
sbb
pop
jp
mov
arpl
sbb
push
aad
out
pop
lods
cwtl
sub
jae
dec
cmpsl
mov
cmpsl
adc
jb
mov
insb
adc
or
lods
inc
mov
nop
or
mov
sub
jb
cmpsl
fdiv
xchg
pop
iret
cs
repz
cld
loopne
jmp
loope
sub
push
xchg
in
mov
jne
xor
stos
dec
cwtl
jle
jl
sbb
jae
lcall
cmpl
xor
lahf
repz
push
jns
xor
fiadds
movb
mov
out
sarb
or
inc
cmp
xor
xchg
aam
adc
dec
imul
pop
jns
jmp
shr
negl
mov
and
ljmp
push
mov
sar
lock
nop
push
push
in
icebp
ljmp
and
fcmovnb
loopne
pusha
cbtw
cwtl
mov
sub
mov
in
dec
pop
lret
iret
xor
cmc
cmc
loop
push
xlat
aaa
repnz
enter
out
and
pusha
push
cmp
repnz
xor
add
inc
das
ret
push
xchg
test
add
mov
nop
int3
add
and
into
mov
insl
sti
lret
in
and
push
cmpsb
outsl
mov
adc
mov
xchg
je
aam
xchg
jbe
movsb
dec
rcl
cmp
xor
xlat
push
xor
and
mov
dec
and
add
mov
shl
idivb
pushl
sbb
adc
add
test
shl
push
icebp
and
imul
ficompl
lahf
mov
inc
cmp
pop
std
rcll
in
adc
shl
imul
or
sub
add
ja
out
jp
into
jl
loopne
add
sbb
and
call
in
iret
mov
push
sbb
arpl
pop
shl
xor
lcall
rcrb
loope
aas
mov
popf
sahf
fisubrl
cwtl
or
and
xchg
push
jg
fs
lret
mov
pop
mov
js
andl
sub
popf
lcall
adc
fdivs
and
jl
mov
cli
jg
into
scas
push
pop
and
popa
pop
cmc
inc
inc
mov
lret
or
push
out
jno
mov
test
adcb
adc
fiadds
cmp
das
in
xchg
outsl
jg
fsubrl
mov
lcall
jae
fbstp
xchg
mov
pop
jb
sub
xchg
fsts
sahf
arpl
or
xchg
repz
hlt
sahf
jnp
adc
clc
bound
inc
lahf
sub
loopne
add
xor
imul
jle
pop
stos
in
fisubl
jle
sub
dec
test
inc
jno
pop
mov
xor
xor
in
mov
add
cltd
outsl
xchg
adc
xor
int3
add
ljmp
cs
dec
push
sub
bound
cmpsl
inc
pop
jg
or
push
push
push
sbb
and
scas
lret
pop
adcb
sbb
sbb
jge
adc
sub
jae
xor
sub
movb
nop
and
jmp
divb
ja
lods
outsb
adc
adc
xchg
pop
mov
sub
and
repnz
pop
push
push
in
fidivrl
and
mov
test
jecxz
daa
leave
xchg
pushl
sub
outsl
invd
adcl
and
jns
mov
shll
mov
cmp
xchg
xor
dec
mov
jle
add
mov
add
aam
sbb
mov
dec
jmp
xchg
scas
push
push
push
add
push
pop
test
push
mov
aad
or
in
adc
or
add
dec
loopne
add
ljmp
adc
iret
fldt
xchg
out
jmp
sbb
xor
lods
hlt
jle
dec
cmp
push
test
cli
push
aas
int3
push
mov
fbld
sub
pop
leave
sub
push
mov
and
push
inc
pop
mov
movsb
jne
pop
in
fdivs
mov
cmp
cmpsb
test
call
mov
lock
arpl
mov
mov
xchg
sarl
push
pop
outsb
mov
push
jl
dec
and
and
xor
test
insb
lahf
jne
lds
cmpb
sti
push
fdivrp
enter
pop
sbb
jg
aad
or
jno
pop
call
ror
xchg
push
hlt
daa
in
ss
xor
push
jne
cmc
adc
cmp
loop
mov
mov
push
mov
popa
lods
popf
dec
fsubs
adc
cmp
or
jmp
and
rcrl
pop
ret
cmpb
mov
fsts
mov
xor
popf
xchg
inc
sarb
clc
inc
jns
movsb
xchg
xchg
mov
adc
ror
add
push
xchg
ficoml
push
mov
leave
pop
incb
lret
fwait
ss
dec
mov
loopne
jno
imul
mov
fdivs
sub
mov
mov
fstps
out
enter
mov
fldl
adc
imul
add
shll
push
sbb
xchg
and
repnz
or
inc
or
sti
sahf
sub
enter
xor
sub
inc
mov
mov
cmc
lock
xchg
arpl
in
push
bound
adc
cmp
mov
lods
sub
mov
sahf
sub
mov
lahf
jne
dec
aas
leave
pop
lcall
pop
sbb
mov
push
cmpb
lds
rol
inc
push
adc
das
dec
dec
jne
mov
push
daa
rcrl
mov
mov
inc
test
pusha
js
cmpsl
out
cmpsb
xor
mov
pop
and
dec
pop
and
push
mov
jp
daa
xchg
sub
mov
filds
xchg
or
dec
mov
mov
mov
cmpsb
div
scas
movsb
mov
pop
out
les
adc
mov
mov
adc
cmp
repz
bound
int
fcoms
xor
in
lods
xchg
push
cltd
dec
ss
jnp
sub
lea
dec
in
jecxz
sub
stc
ficomps
insb
jbe
repnz
pop
dec
adc
testb
test
xor
scas
fdivs
ja
aas
fdivrl
add
jl
push
test
sub
cmpsb
aad
jnp
das
lock
mov
add
and
mov
mov
lods
in
cmp
leave
push
pop
in
dec
lds
and
test
into
cltd
jmp
ljmp
in
fsubr
and
add
rcr
add
repz
popa
sbb
aad
pop
sti
inc
inc
add
mov
push
in
jge
sub
xchg
add
mov
push
incb
mov
test
lahf
out
dec
std
jecxz
arpl
enter
int
inc
jno
fs
mulb
jp
xchg
dec
insb
jp
mov
push
or
push
sbb
lock
ljmp
pusha
aas
cli
dec
xorl
insb
cmpsb
lods
mov
negl
lahf
cli
popf
sub
insl
outsb
test
dec
push
inc
sbb
mov
mov
add
test
jmp
cmc
sbb
int3
mov
dec
ss
stos
inc
push
adcl
mov
inc
fwait
scas
lret
pushf
push
xor
movsl
cmp
outsl
jo
aad
mov
test
jl
mov
outsb
cmp
dec
rclb
movsb
mov
fbld
pop
xor
arpl
inc
mov
popa
mov
sub
pop
jne
add
int
mov
popa
mov
cmpsl
pop
add
das
push
push
xor
xorb
or
outsl
scas
jae
lcall
add
outsl
stos
repz
repnz
push
xorb
fstl
inc
aad
mov
jne
jg
pop
dec
cmpsl
pop
pop
and
bound
sahf
pop
not
dec
shll
inc
xorl
mov
mov
cmp
xchg
bound
inc
mov
mov
mov
cmp
out
jns
stc
mov
leave
pop
and
stos
jbe
out
popf
xchg
cmpsl
mov
xor
test
pop
xchg
pushl
add
inc
ss
add
loope
jge
stc
dec
divl
push
inc
in
sbb
gs
or
pop
popa
in
mov
xchg
std
xor
pusha
dec
cmpsl
pop
les
test
out
add
mov
cmp
mov
xchg
mov
jp
nop
xor
lahf
daa
cld
pop
adc
adc
les
push
js
sub
cltd
inc
sbb
cmp
or
ds
loopne
leave
cmp
inc
add
cmp
mov
rolb
loope
jp
aaa
sbb
xchg
push
notb
mov
repz
mov
jmp
xchg
mov
inc
jnp
js
and
dec
sub
pusha
xchg
mov
nop
lahf
add
pushf
cmp
push
faddp
dec
scas
or
mov
sbb
cmp
dec
cltd
out
cmp
aaa
push
dec
pextrw
cmp
cmpsl
mov
xor
leave
les
repz
insb
mov
add
push
pop
jmp
mov
lods
out
ret
or
cmp
or
xchg
jge
aam
jo
leave
mov
orb
stos
jns
sti
rcrl
out
fmull
icebp
shlb
jae
sbb
adc
add
cwtl
pushfw
cmp
std
repnz
ljmp
nop
dec
pop
cmp
ftst
or
and
jle
sub
push
filds
mov
cmp
xor
xor
imul
jne
add
movsb
adc
ja
jmp
xor
js
lods
mov
pop
inc
push
inc
sbb
jbe
stc
mov
cmpsl
xchg
inc
dec
aaa
rorb
jg
ja
pop
add
outsb
loop
sub
mov
loop
insl
push
in
lret
shlb
and
shll
mov
je
or
mov
mov
xchg
cs
fldenv
jecxz
sti
add
loope
add
jns
jp
int
xor
scas
cmp
lret
add
clc
or
fwait
scas
mov
fisubrl
sahf
xchg
mov
je
popf
sbb
cmp
dec
push
jnp
push
scas
pusha
movsb
mov
sbb
lahf
or
testb
xor
ror
scas
xor
es
jecxz
xchg
mov
call
stos
loop
lock
and
add
adc
jns
int3
in
shrb
jmp
push
cwtl
out
cmp
fcompl
mov
push
std
cmp
sahf
stos
sbb
ss
ljmp
jg
cltd
pusha
or
and
add
jb
push
fstpt
cmp
subl
clc
and
movsl
flds
pop
jge
fisubs
mov
xor
pop
inc
out
sbb
outsl
aaa
add
cmp
dec
xor
enter
cmc
adc
lods
mov
cmp
stc
out
insb
or
mov
xor
or
fistpl
addl
fnstcw
push
xor
enter
imul
xor
mov
idivb
push
fildll
mov
popf
ror
jbe
mov
movsl
in
dec
jbe
mov
loop
xor
cmpsl
fmuls
pop
iret
push
dec
mov
or
add
mov
outsb
int
shl
out
push
inc
pushf
test
lea
outsb
dec
or
loop
sbb
ljmp
sub
or
dec
mov
iret
pop
lods
cmpsl
sub
outsb
frstor
ds
fs
xor
stos
pop
adc
jb
loope
xor
bound
push
mov
loopne
ret
adc
pop
hlt
mov
hlt
add
dec
icebp
lea
in
shrb
scas
push
add
enter
and
push
popa
or
ljmp
add
dec
inc
inc
scas
pop
sbb
mov
xchg
sub
dec
add
aad
movsb
xchg
clc
pop
sbb
add
pop
adc
inc
dec
adc
lcall
ljmp
lods
shrb
xor
leave
cli
les
out
cmp
inc
loop
adc
repnz
enter
cmp
enter
dec
mov
movsl
jne
pop
mov
lods
jb
iret
adc
cmpsl
call
dec
dec
dec
xor
jmp
cmp
dec
adc
mov
xchg
sub
sbb
or
aad
ss
jp
ds
xchg
inc
push
sub
orl
add
movsl
pop
push
sahf
jl
dec
ja
jge
dec
mov
test
mov
pop
sub
mov
test
ret
test
and
inc
cmpsb
push
es
sub
xchg
insl
mov
into
jecxz
xchg
and
mov
mov
inc
jns
cwtl
xor
aas
push
jne
push
and
out
xchg
out
lds
add
int3
lret
mov
mov
dec
lcall
push
inc
inc
xchg
fnstsw
daa
xlat
sbb
fidivrs
shrb
pop
jo
stos
cmc
bound
into
xchg
adc
loop
push
cmpsb
mov
jnp
mov
sbbl
mov
adc
pop
pop
insb
push
or
sub
ror
xor
cmp
mov
push
sbb
jnp
xchg
or
out
popa
dec
loopne
xchg
mov
inc
mov
and
xor
out
adc
js
mov
das
jnp
lock
fwait
mov
push
cmp
mov
jns
and
cmpsl
and
ret
pushw
push
xor
push
imul
xchg
fidivrl
ret
or
jmp
pop
cmc
add
cmp
popa
mov
or
add
fiadds
int
gs
push
test
push
sbb
cmpl
sarb
mov
shrl
rclb
rcll
or
movsl
pushw
mov
mov
aam
test
les
push
fildll
pop
push
adc
enter
pop
adc
ds
inc
std
pop
pushf
jecxz
daa
jg
test
push
inc
mov
mov
rcr
dec
or
imul
mov
enter
push
loop
test
das
std
push
mov
inc
mov
mov
out
inc
mov
inc
lds
lcall
add
mov
pop
sub
sti
mov
dec
ds
dec
daa
fidivl
push
inc
ja
hlt
jno
pop
mov
popf
bnd
negl
popf
fisubrl
adc
pop
xor
mov
jae
loop
test
mov
fsubr
pushf
adc
bnd
imul
xchg
mov
popa
mov
fstpt
push
fucomp
pusha
xchg
ficomps
pop
adc
jle
dec
jno
pop
repz
hlt
icebp
push
cmp
loope
sbb
andl
icebp
dec
aam
inc
mov
jnp
test
or
inc
in
mov
sbb
jns
in
mov
mov
fbstp
sar
popl
enter
repz
jge
test
outsl
add
jnp
pop
sub
pop
fwait
sarb
xor
add
sbb
imul
xchg
xor
dec
cmp
stos
ds
bound
loop
lahf
in
das
cwtl
mov
lret
int3
xor
pop
xchg
bound
test
fwait
dec
adc
sti
fidivs
stos
out
pop
loopne
push
clc
mov
cmp
movsb
imull
inc
pop
pusha
movsb
test
push
sub
jno
ror
jne
inc
and
lods
xchg
imul
das
decb
pop
ret
pop
push
jae,pt
pop
xlat
lcall
pusha
insl
popa
dec
shll
cmc
mov
lods
adc
mov
pop
push
pop
push
xor
and
adc
xor
xor
xlat
out
jno
imul
lds
icebp
lret
xchg
xor
mov
bound
sub
xchg
fnstenv
cli
jo
push
xchg
and
push
push
pop
sti
aas
mov
xor
fstl
cmp
or
mov
jb
out
or
push
movsl
cmp
or
push
and
pusha
or
push
xor
out
add
add
lods
adc
repz
mov
ja
mov
icebp
xchg
jne
push
ret
jp
rcll
mov
test
jecxz
mov
inc
sahf
pop
int3
pop
pop
mov
stos
addl
testl
add
ret
lods
ljmp
adc
cmovns
pop
test
add
loop
xor
out
aaa
sub
adc
clc
cmp
dec
aaa
icebp
fmul
jae
outsb
and
jb
inc
movsb
jnp
cld
popl
inc
push
or
inc
mov
or
jg
and
or
jne
fbld
int
mov
test
scas
je
insl
sub
pop
out
push
je
lock
sub
or
sub
pop
popa
fiadds
pop
push
push
or
cli
aam
rcll
lea
jno
add
ret
mov
stos
push
cmc
pop
adc
or
push
jl
scas
in
sbb
xor
mov
or
or
test
push
push
jmp
cmp
in
adc
mov
shl
pusha
in
mov
sbb
aad
shrb
mov
scas
lcall
packssdw
nop
and
pushf
jecxz
iret
out
and
mov
and
rolb
mov
cmpl
push
cltd
inc
sahf
or
and
xchg
fidivrs
jg
pop
enter
icebp
push
adc
data16
mov
add
sub
and
mov
mov
int
pop
lret
sbb
enter
xor
lea
push
jp
repnz
cli
fcoml
popa
xor
cmp
push
cs
pop
je
faddp
flds
push
addr16
xor
xor
or
pop
inc
or
mov
leave
and
inc
mov
pop
pop
mov
sub
pop
daa
push
test
add
nop
lea
pop
fcomip
cmp
loope
repnz
lret
mov
repz
xchg
bnd
enter
ret
out
repz
imul
or
push
gs
inc
into
out
or
into
mov
inc
jl
xchg
dec
in
adc
jl
fs
jl
add
into
add
sub
mov
add
lahf
ss
mov
fld
subb
pop
mov
inc
mov
dec
mov
fs
fnstcw
scas
mov
in
push
bound
or
xor
ds
nop
mov
jmp
repnz
imul
mov
cmp
cmp
popl
jg
mov
scas
outsl
aas
xor
push
xchg
cmp
xchg
jae
ss
aad
sub
adc
inc
sub
in
jg
sbb
inc
lss
mov
xor
jg
pop
pop
bound
lret
push
jle
mov
mov
jge
cmpsl
sub
pop
shr
xchg
loop
pop
sub
xchg
aam
push
fwait
add
dec
inc
cmpsl
pop
adc
popa
loopne
imul
bound
stos
mov
mov
xchg
mov
dec
sub
and
in
fsubrl
cmp
insl
call
xchg
sbb
and
and
jl
sarb
cwtl
xchg
mov
hlt
dec
mov
xchg
jle
and
lret
leave
cmp
ficoms
mov
add
sbb
lods
push
divb
stc
lret
dec
aaa
cmp
sub
push
sub
or
push
movsl
mov
int3
cmp
inc
orl
data16
add
sub
int
mov
test
xchg
loop
ret
jp
mov
push
ficoms
cld
out
push
fisubrl
call
or
mov
nop
sub
and
mov
or
or
and
ret
add
mov
and
push
fsubr
mov
jg
addb
out
jl
test
or
sbb
sbb
xchg
loop
fstpt
mov
shl
dec
and
lcall
shl
daa
subl
jp
fisubl
adc
shll
inc
push
add
pop
and
aas
push
cmpsl
add
add
adc
data16
xchg
lds
loopne
lret
popa
cmc
int3
push
xchg
rolb
push
sarl
xor
ret
enter
cltd
cmpl
jo
dec
cmp
mov
popf
aam
mov
fs
test
or
jb
pop
xchg
pop
push
faddp
and
adc
sahf
mov
push
xchg
pop
pop
mul
push
rcrl
jle
sbb
into
popf
outsl
inc
loope
daa
in
out
sti
jg
ja
repz
movl
stc
add
lds
xor
xor
add
repnz
test
xchg
xor
pop
jnp
leave
jo,pt
shrl
addb
jnp
jge
repnz
cltd
mov
push
lret
lock
loop
dec
jmp
in
sbb
ror
mov
out
or
roll
or
sub
mov
cmp
push
dec
dec
imul
popa
adc
outsl
cmp
inc
xor
cld
arpl
sahf
xchg
movsb
mov
cmpsb
adc
ja
mov
push
lods
xchg
inc
je
dec
xchg
sbb
pop
xchg
jb
xor
shld
mov
xchg
lahf
fsubl
mov
dec
lods
stc
mov
jno
scas
into
cmp
pop
cwtl
sub
push
aam
xor
mov
in
jp
fnstcw
gs
pop
lcall
addl
fstpt
test
mov
test
and
cmp
fsubl
dec
int
push
sbb
or
lods
dec
sahf
push
mov
aad
mov
cmp
dec
loop
sub
or
daa
lock
sti
pop
insb
inc
loop
imul
pop
stos
and
add
stc
push
mov
sbb
lock
cmp
jp
lret
push
clc
mov
out
mov
adc
xorl
sub
inc
mov
sarb
rolb
mov
mov
imul
inc
not
xchg
sub
lds
sbb
xor
arpl
je
arpl
xchg
cmc
outsb
icebp
movsb
sub
loop
fldl
cld
shl
ja
mov
shrl
xchg
jae
xchg
push
sub
clc
test
movsl
mov
daa
les
jb
cmpsb
ret
lods
or
ret
ljmp
add
loopne
mov
das
sub
icebp
jmp
test
fcoms
loop
out
mov
sub
xchg
pop
sti
stc
ja
arpl
mov
repz
mov
ret
xchg
incl
cmc
stos
cli
into
imul
or
mov
subl
mov
daa
call
sahf
dec
ss
testl
test
out
lock
push
or
cmp
mov
fadds
mov
pusha
push
lret
sbb
test
mov
adc
mov
or
clc
push
imul
push
xchg
aad
enter
xchg
inc
jno
lds
icebp
out
cmc
jns
fnsave
daa
mov
and
decl
bound
fadds
mov
or
leave
andl
sbb
push
sti
and
sbb
sti
dec
xchg
roll
adc
fidivrl
add
je
pop
dec
lods
sbb
dec
mov
repz
mov
or
mov
mov
mov
stos
outsb
xchg
cli
fwait
lret
lret
int3
cmp
jbe
xchg
ljmp
sbb
subb
or
fsubrl
mov
dec
mov
adc
cltd
aad
inc
cmpsb
out
inc
mov
push
pop
xchg
or
pop
mov
cmp
or
nop
push
or
leave
sub
mov
lods
test
xor
sbb
fmul
in
outsl
sti
rclb
scas
cwtl
push
test
les
jl
imull
add
or
xor
lds
lods
inc
sbb
lcall
lods
jecxz
or
ss
xchg
addr16
pop
popf
je
mov
fucomip
jae
cwtl
loope
iret
mov
out
rorb
inc
outsb
xchg
and
or
xchg
je
inc
int3
cmpb
hlt
cld
pop
pop
push
push
movsb
pop
cmpsb
fildl
push
repnz
xor
fimuls
ja
iret
subb
add
ja
mov
xchg
and
lret
xchg
test
cmc
mov
rcll
in
mov
int3
jnp
mov
xor
pop
mov
loopne
push
shlb
push
cmp
and
xor
in
sub
mov
pop
ljmp
ret
mov
sbb
ds
or
fs
movsl
add
pusha
fisubrs
inc
mov
call
sbb
jb
arpl
xchg
out
add
cmp
pop
sahf
mov
scas
pushf
lds
shr
lret
sarl
out
leave
dec
insb
jecxz
out
ret
js
lret
popa
jl
push
popaw
fwait
addr16
mov
call
aad
call
cmpsl
inc
iret
loop
and
hlt
jnp
cltd
lahf
or
bound
cmpsb
push
setp
adc
sub
aad
shlb
inc
imul
sbb
jbe
out
fnstenv
daa
clc
mov
aaa
orl
inc
mov
xchg
nop
incl
fstpt
nop
mull
cltd
push
loope
fwait
daa
mov
xlat
pop
pop
cmp
in
test
xchg
outsb
push
jb
jno
push
dec
push
stos
or
inc
cli
mov
and
lret
inc
jle
pop
push
neg
inc
fsubl
cs
jle
iret
sbb
jge
sarb
cltd
call
stos
mov
cwtl
test
jle
or
ret
pop
das
sub
aam
inc
push
mov
ds
dec
sbb
insb
mov
sub
xor
rolb
push
inc
mov
dec
sub
sbb
jnp
mov
cmp
inc
ss
or
and
pop
pop
bound
mov
das
cs
aam
shll
xor
loop
mov
jo
xchg
push
test
cmp
inc
inc
fimuls
outsb
sub
dec
mov
data16
add
lea
push
mov
in
cmp
cli
xchg
push
xor
lcall
mov
cld
cmp
jecxz
adc
es
insb
pop
mov
adc
sbb
add
cmp
std
push
fcompl
xchg
mov
push
pop
movsl
aas
aad
shrl
or
aad
adc
ljmpw
test
sbbb
loop
pop
or
daa
pop
push
sbb
fwait
dec
xor
pop
push
inc
shrl
mov
hlt
pop
fiadds
mov
mov
fmul
and
sbb
arpl
lock
jecxz
movb
and
fdivr
mov
push
pop
xchg
in
mov
xor
pusha
add
xor
mov
adc
and
xchg
bound
int
lock
les
jge
push
push
sub
push
inc
cltd
int3
adc
rcr
push
sbb
adc
xor
mov
mov
push
jnp
sahf
aas
jb
scas
push
push
jmp
xchg
imul
add
sahf
ds
xchg
xchg
shll
xchg
add
test
jmp
xchg
xchg
push
pop
push
cmp
imul
cmp
mov
inc
push
xchg
insb
stos
out
add
bound
mov
call
add
jecxz
les
out
mov
jns,pt
dec
pop
xor
add
lahf
jle
or
ljmp
cmp
int3
mov
loop
popf
jecxz
mov
popf
out
sbb
cmp
imul
push
dec
dec
lods
pop
mov
add
push
pop
loope
ret
mov
fisubl
xorl
cs
mov
loope
roll
mov
mov
movsl
cmpsb
add
das
lea
xchg
mov
xor
inc
scas
ljmp
jbe
imul
iret
dec
xor
push
and
mov
addr16
ret
shll
or
inc
pop
inc
push
dec
rorl
mov
scas
stos
pop
xor
mov
imulb
or
push
rcll
dec
mov
fidivl
push
imul
dec
in
ljmp
and
dec
inc
jne
sub
or
orb
and
jge
cltd
and
dec
mov
daa
push
sub
fisttpll
jo
and
mov
pushl
xor
inc
adc
cltd
jl
adc
les
sub
mov
in
sbb
lods
mov
or
xor
arpl
and
in
fnstcw
cmp
jle
push
fisttpll
sti
xor
in
mov
push
shll
inc
inc
xchg
not
mov
and
ret
dec
lds
iret
fidivrl
inc
cmp
dec
outsl
inc
leave
pop
test
mov
push
add
xchg
test
and
mov
lds
ficoml
mov
dec
xchg
inc
mov
jecxz
or
out
cmp
enter
xchg
les
add
jmp
enter
and
pop
fsubs
fsub
mov
aas
lods
jae
bound
push
daa
sbb
mov
imul
inc
ja
ljmp
icebp
and
movsb
xorl
lret
add
and
orl
int
jmp
testb
push
xor
out
fs
cld
loopne
or
test
inc
push
sbb
orb
js
jo
add
pop
and
leave
or
mov
push
cs
imul
mov
ss
das
iret
sub
mov
lahf
cmc
add
popa
pop
mov
iret
push
cmp
pusha
outsl
push
pop
int3
push
fs
call
cld
icebp
adc
pop
mov
ret
loop
adc
movsl
pop
adc
jmp
imul
lods
inc
and
and
add
popa
repnz
jnp
jo
loopne
add
cmp
cs
in
cld
subl
bound
dec
outsl
cmp
pop
jno
or
mov
int3
xchg
sbb
lret
loop
ja
push
dec
pop
cmp
and
and
pop
xor
xchg
fdivl
addr16
subb
inc
inc
mov
popl
jae
xor
xor
pop
pop
sub
xchg
xchg
cld
xchg
pop
mov
mov
test
inc
pushf
test
pop
inc
or
roll
test
ds
subl
test
aas
cmpsl
adc
push
clc
pop
cmp
std
mov
rcrl
xorl
scas
mov
jmp
cwtl
notb
shlb
call
xchg
sub
and
test
inc
cmp
push
test
add
jp
cltd
and
outsb
mov
aaa
and
push
jge
xchg
sbb
and
lea
cmp
out
dec
int3
in
imul
and
mov
sbb
js
sub
jnp
cmp
cs
faddl
stos
and
sub
gs
out
dec
xchg
sub
stos
das
pop
mov
test
jmp
sub
cmpsb
stos
aas
pop
hlt
insl
icebp
xor
repnz
dec
leave
int
jmp
fsubr
shlb
cmp
push
mov
mov
or
nop
das
insl
aad
int
jecxz
nop
mov
jg
fcmovb
out
inc
xchg
pop
js
leave
cld
adc
lock
shrb
lods
call
fs
sbb
notb
insl
inc
or
xchg
int
fcmovnbe
mov
nop
ror
mov
in
int3
mov
and
sub
mov
out
mov
mov
inc
or
sbb
aaa
jae
add
sub
inc
dec
mov
mov
adc
sub
aam
in
cld
enter
rorb
out
pop
int3
push
cmp
ror
xchg
add
sub
pop
mov
pop
xchg
notl
cmp
xor
out
push
je
test
ret
dec
imul
nop
dec
jp
pop
imul
push
bound
push
arpl
sti
sbb
add
rcrb
cmp
or
icebp
jmp
std
data16
pop
arpl
and
mov
push
nop
and
leave
mov
scas
in
xchg
enter
jnp
lods
cmp
add
icebp
lods
pop
call
push
stc
inc
loopne
pusha
cwtl
fsubl
leave
icebp
cmpsb
cmc
pop
loopne
fwait
ret
inc
mov
and
push
lahf
or
jl
push
scas
inc
sbb
notl
dec
mov
fnsave
jmp
lahf
daa
repz
enter
adc
inc
push
mov
xor
into
dec
or
daa
rolb
or
lret
ds
inc
adc
enter
pop
add
adc
dec
loop
fimull
xor
cmp
inc
pop
ss
xor
out
inc
add
sub
enter
cmp
dec
sub
cmp
mov
repnz
or
imul
bswap
mov
adcl
or
xchg
adc
mov
sti
test
cmp
and
jae
ja
push
jbe
cmp
xor
dec
arpl
mov
push
pusha
dec
aad
es
dec
jae
cmpsl
jge
pop
mov
daa
pop
das
jle
adc
orl
mov
sbb
test
gs
cmc
js
adc
mov
push
xor
daa
iret
push
mov
dec
inc
cmpsb
push
push
fnstcw
outsb
cli
pop
in
es
fidivrl
mov
arpl
stc
mull
outsl
and
popa
push
jge
and
dec
int3
out
outsb
push
xchg
daa
les
and
mov
insl
push
xchg
imul
adcb
cltd
mov
mov
popf
scas
call
clc
or
push
mov
push
jbe
fisttpll
pop
sbb
xchg
scas
test
jl,pt
pop
mov
sbb
push
mov
ljmp
mov
in
adc
jmp
mov
push
nop
ret
sub
int3
or
and
fs
mov
scas
push
mov
mov
stc
adc
out
and
mov
mov
out
pop
in
ds
ljmp
notl
lcall
cltd
hlt
repnz
mov
sarb
pop
push
fists
xor
push
jg
inc
mov
out
mov
mov
cmp
jl
jnp
sbb
in
add
xor
cs
shr
pop
jns
into
cmp
test
add
aas
or
repnz
mov
dec
dec
pop
data16
sub
iret
test
cmp
mov
scas
out
in
cwtl
xor
shlb
mov
inc
pop
mov
mov
mov
and
shll
ror
popa
lret
pop
and
in
sahf
mov
push
mov
ret
hlt
inc
mov
add
sbb
out
jmp
sbb
or
mov
lcall
fmuls
cwtl
pop
or
in
fcoml
mov
mov
xchg
cmp
ljmp
sub
shlb
lret
sub
out
mov
cld
inc
fs
nop
pushf
fadd
push
xchg
lods
cmpsb
dec
leave
xchg
dec
dec
mov
or
xchg
aaa
arpl
rorl
xor
inc
push
mov
pop
mov
cld
nop
loop
adc
push
ret
sbb
out
shll
cwtl
add
popa
push
call
xor
jg
push
pushf
jle
lods
cld
xor
gs
test
lret
xor
sub
fwait
test
test
js
xchg
push
clc
inc
pop
jle
jno
push
push
sub
mov
push
push
ja
mov
into
test
je
pushf
xchg
test
ret
mov
inc
inc
bound
adc
and
popa
sbb
jno
dec
das
call
dec
jge
jno
mov
mov
sbbl
sbb
outsb
popa
and
mov
xchg
addr16
pop
imul
insl
mov
aad
lods
and
stos
ljmp
insb
jmp
jl
hlt
or
xor
and
xchg
adcb
aaa
out
mov
push
xlat
cmpsl
cmp
or
xchg
and
into
dec
inc
loop
add
int3
aad
loopne
xorb
jnp
nop
and
lcall
and
and
jb
mov
sub
cmp
sti
mov
add
ds
push
mov
sahf
fiaddl
enter
xor
in
cli
testb
addr16
aas
jbe
fmuls
in
leave
out
mov
lock
movsl
mov
ljmp
icebp
stos
cwtl
mov
es
stc
xor
sbb
out
push
dec
or
adc
adc
aam
push
cs
dec
gs
icebp
mov
xchg
fistpll
jecxz
dec
out
inc
jne
cmp
push
push
pop
stos
cmp
jl
pop
xchg
sbb
outsb
imul
mov
test
insb
dec
mov
mov
cs
icebp
mov
xor
fnstenv
in
and
arpl
xor
out
jbe
jne
cld
inc
push
push
clc
push
sbb
cmp
inc
outsb
sbb
xchg
test
sub
int
pop
insl
daa
adc
sub
cmpl
push
dec
and
repnz
in
fs
imul
lods
lcall
mov
add
adc
dec
push
jp
inc
enter
or
fdivp
mov
outsl
dec
out
rcrb
dec
lea
xchg
ss
sahf
pop
lret
nop
pusha
jecxz
xchg
call
in
jge
xor
fisubs
rorl
outsb
sbb
jg
mov
push
ret
jg
ss
in
lcall
pop
xchg
je
lea
loopne
push
repz
push
adc
ss
sub
movsl
jp
mov
xchg
cltd
lahf
shrl
or
xchg
xor
ja
dec
dec
sub
add
rcrl
inc
mov
in
push
sbb
cmp
cltd
cmpsb
add
pop
rol
cwtl
out
flds
or
adc
movsl
inc
inc
push
xchg
cmp
sub
jp
mov
mov
and
mov
ror
push
xchg
sbb
dec
or
test
out
or
jge
movsb
sub
dec
repz
push
cmc
in
inc
mov
and
nop
sub
xchg
aad
add
push
jnp
jmp
sahf
pop
pop
aaa
push
push
cmp
push
sub
xchg
dec
test
movsl
test
xor
xchg
nop
clc
nop
dec
xchg
jb
inc
mov
sbb
jg
lcall
lcall
and
dec
xor
sub
nop
mov
mov
rol
sar
push
lret
idivl
mov
lea
mov
sbb
mov
imul
pop
fmuls
out
out
add
dec
into
in
adc
dec
sbb
jne
xlat
sbb
fdivrs
rclb
into
push
and
scas
mov
imul
mov
push
les
repz
sbb
jno
xchg
movsl
insb
imul
cmp
fsub
sub
cmp
push
push
imul
test
xor
xchg
mov
adc
inc
sbb
cmc
xor
add
nop
js
push
sbb
dec
xchg
lcall
roll
lcall
inc
inc
pusha
roll
loopne
test
sahf
sbb
maskmovq
divl
orl
inc
push
and
fwait
outsl
lret
mov
popl
xlat
sub
loopne
dec
mov
jg
xchg
xchg
push
mov
mov
pop
or
nop
mov
aas
outsb
cmp
sub
fcmovbe
xchg
mov
pop
enter
insl
lcall
into
mov
mov
dec
ljmp
idivl
sub
push
icebp
lcall
ljmp
pop
fs
mov
sbb
dec
bound
sbb
lret
scas
jge
mov
jmp
ja
xchg
mov
shll
adc
in
lret
in
adc
aam
pop
dec
mov
or
out
cmpb
and
jbe
sub
xchg
jo
adc
aad
dec
fwait
shlb
or
shll
lcall
or
test
mov
xchg
or
push
cmp
xchg
mov
lock
push
xor
jns
push
int
icebp
arpl
adc
cmp
sbb
jg
push
cmc
pop
adc
inc
mov
fs
shl
dec
ficoms
sub
mov
adc
ret
xorb
ljmp
cmp
loopne
out
mov
adc
clc
test
add
or
imul
loope
add
xor
imul
jnp
pop
cltd
and
cmp
aad
popa
pop
out
cli
mov
pop
leave
xlat
mov
sbb
dec
fsts
pop
and
call
cwtd
outsb
filds
and
sub
sbb
pop
pop
sub
push
popf
jp
pushf
addr16
ret
out
repnz
add
stc
orb
and
push
and
nop
pop
into
mov
adc
clc
fs
iret
add
xor
in
mov
xchg
es
dec
mov
mov
and
lahf
icebp
jp
leave
xchg
push
push
call
movsl
mov
std
punpckhbw
ret
gs
sub
call
movsb
cmpsl
lods
lret
ljmp
jbe
leave
das
or
shll
push
mov
je
fsubrp
arpl
scas
adc
insl
cmpsb
inc
and
out
and
aam
cwtl
cmpb
jmp
jae
pop
and
ss
cmpb
or
xchg
pop
rolb
shll
and
je
cs
aad
cwtl
xor
nop
repnz
push
into
inc
mov
js
in
fdivs
movsb
outsb
mov
popl
test
lcall
jg
cs
jmp
ret
cs
dec
jg
shrl
lret
cmp
cmovbe
lahf
mov
sub
icebp
cwtl
cmp
mov
std
sbb
or
ljmp
mov
mov
and
sub
test
adc
test
xbegin
dec
sub
mov
in
inc
add
push
cltd
jmp
mov
add
sbb
dec
and
cmpsl
jmp
arpl
leave
push
jmp
ja
jle
stc
mov
jmp
pop
lods
rcr
and
fucomp
jg
inc
mov
sbb
mov
cmovbe
pop
mov
lods
inc
push
sub
nop
andb
pushaw
pop
dec
in
add
xchg
sarl
xchg
pop
ret
arpl
xor
or
aam
cmp
sub
loopne
inc
xorb
stc
pop
or
fldt
repz
dec
cmp
nop
ror
sbb
mov
call
add
sbb
or
cld
adc
xor
lods
or
mov
xor
out
test
mov
pop
or
and
loop
lcall
idivb
or
mov
sub
arpl
mov
jmp
xor
sub
fcmovnu
xchg
xorb
aad
in
adc
lock
cmpsb
dec
popf
jb
sbb
xchg
in
mov
dec
popf
xchg
pop
ret
push
add
aam
jo
in
nop
call
fidivs
jle
iret
stc
scas
cmpsb
std
dec
pusha
mov
inc
sti
push
fiaddl
repz
and
mull
jmp
fs
int3
shl
mov
xchg
push
mov
xor
push
cmp
rcrb
mov
mov
neg
mov
out
in
pop
cs
xor
cmpb
inc
dec
sarl
or
add
in
sub
adc
cld
nop
mov
lods
dec
jl
imul
fiaddl
mov
lret
mov
call
in
push
dec
stos
test
in
push
jbe
cli
adc
mov
cmpsb
repnz
sbb
arpl
pop
test
mov
and
fs
push
xor
dec
jle
sbbl
pop
mov
dec
mov
ret
popf
xchg
push
jp
push
rorb
sti
sarl
xor
add
jmp
push
cmp
mov
movsl
jne
sub
inc
jne
inc
fisttps
aam
mov
inc
xorb
push
inc
sbb
xchg
inc
enter
out
push
fwait
call
loope
sub
into
in
insb
sarl
lock
dec
lock
aam
scas
cld
stc
imul
push
or
cmpsb
mov
add
dec
fdivl
push
stos
loope
sub
test
push
out
or
dec
mov
jns
and
shrb
mov
sbb
jo
or
push
lcall
or
jge
test
repnz
leave
push
jl
cmp
aaa
int
out
push
cmp
push
adc
xchg
ljmp
mov
dec
pop
mov
ja
xchg
mov
mulb
adc
popf
or
mov
jecxz
add
ret
and
stc
bound
ss
and
es
push
mov
adc
jg
xchg
jle
or
mov
pop
lea
push
andl
inc
inc
or
lods
pop
out
dec
xor
jecxz
sub
mov
inc
pop
fwait
xor
scas
dec
xchg
in
inc
push
ds
es
pop
int
les
mov
xchg
pop
enter
loope
imul
test
ret
das
and
push
xchg
jmp
add
mov
lds
mov
out
pop
adc
jno
aam
cmp
inc
dec
insb
sub
outsl
mov
mov
xchg
stc
cwtl
pop
shll
sub
ret
les
fidivl
aad
add
lret
int3
or
cmp
ss
rcll
in
gs
mov
or
jle
xor
fucomip
add
inc
jmp
enter
cld
stos
push
stc
adc
enter
outsl
xchg
decb
jnp
mov
out
pop
xchg
sbb
jmp
loop
imul
ret
lcall
pop
fwait
out
inc
fbld
arpl
push
sbb
sbb
or
xchg
repz
movl
std
test
loop
fisttps
das
fildll
adc
push
dec
xchg
dec
cmp
lods
outsl
adc
lea
in
pop
call
inc
out
mov
clc
inc
ret
pop
and
jecxz
shlb
int3
in
jae
movsb
xchg
xchg
jge
orb
push
sub
out
cli
aas
mov
cltd
xchg
loope
pop
and
rorb
jecxz
mulb
push
add
mov
leave
fldpi
pop
je
mov
add
xor
pop
dec
stos
and
xchg
pusha
xchg
mov
ret
scas
dec
sub
pop
ret
lret
aas
jne
insl
inc
pop
and
mov
mov
repnz
cli
loop
jb
inc
inc
pop
fstps
push
sub
jmp
out
pop
ffreep
inc
shll
add
xlat
das
lcall
push
popf
cmp
push
adc
mov
dec
sub
and
and
xchg
push
cmp
cmc
push
dec
enter
xchg
dec
addr16
mov
dec
fisubl
enter
mov
adc
cmp
push
sbb
fnstsw
jns
xlat
les
bound
dec
push
add
test
aas
sub
adc
mov
pop
inc
xor
fsub
and
mov
imul
lea
aam
aaa
or
and
and
lcall
mov
mov
std
test
cmp
jo
mov
sub
and
pushl
dec
jno
rolb
fcomps
jnp
ret
xchg
in
mov
mov
mov
insb
ret
stos
jg
adc
and
adc
cmp
fldt
ret
jb
push
pop
cmp
fwait
nop
jge
andl
fwait
push
cwtl
jb
push
push
sbb
and
pusha
insl
cmp
in
adc
scas
mov
scas
adcl
inc
adc
push
pop
mov
cwtl
imul
lret
dec
and
test
jp
pop
jmp
xchg
mov
xor
add
outsl
mov
push
aad
mov
insb
ror
aam
or
movsb
jmp
lods
mov
xchg
hlt
xorl
sbb
pop
inc
sbb
daa
fsubp
or
sbb
inc
fcomps
push
mov
fdivp
jnp
pop
aam
sbb
mov
fisubl
jns
push
pop
mov
cmpsl
pop
adc
daa
inc
imul
andl
js
xchg
fdivr
lahf
xchg
sahf
add
dec
inc
lea
insl
imul
jnp
xor
movsl
inc
in
mov
sbb
shrb
mov
test
ret
mov
pop
movsl
pop
push
jb
call
sti
sarb
std
and
cli
mov
and
or
arpl
pop
icebp
not
mov
lahf
les
push
push
pop
mov
sahf
xchg
mov
shl
leave
xchg
xchg
call
enter
lret
pop
addl
push
xor
ss
leave
jnp
sub
mov
mov
mov
fsts
call
xorb
bound
cmp
in
dec
adc
pop
fdivs
imul
sub
cld
fdivr
add
mov
sbb
mov
push
lcall
pushf
sti
mov
add
and
or
pop
out
pop
mov
jg
add
cmp
dec
or
push
into
mov
xor
jge
outsb
lret
sbb
push
mov
dec
ljmp
lcall
enter
add
add
test
cwtl
int3
rclb
arpl
mov
push
push
notl
sti
js
repz
sbb
int
jno
or
jb
adc
dec
test
pop
jae
jns
imul
rolb
in
or
adc
loop
jnp
push
out
xchg
and
xor
sub
jne
movsl
in
cmp
mov
mov
imul
lret
les
sbb
in
movsb
cld
push
inc
xchg
mov
clc
out
pusha
stos
ljmp
xchg
outsl
pop
lods
andb
add
mov
out
mov
arpl
xor
push
xchg
cld
in
test
mov
sbb
push
adc
in
sbb
and
out
test
jl
aas
jecxz
push
pop
mov
mov
push
pop
mov
je
jae
in
lret
out
out
ds
pop
cwtl
and
xchg
test
stos
sub
negb
lods
popa
test
inc
xor
mov
fnstsw
popa
xlat
sub
cmp
movsl
popf
cli
int
adc
inc
data16
sub
xchg
and
rcrb
ljmp
add
pop
push
lock
push
add
inc
cmp
divb
dec
xchg
pushf
push
and
jl
lret
sub
and
negl
mov
icebp
jg
xchg
nop
push
push
ljmp
push
sarb
push
shrb
int3
sahf
clc
repnz
jge
nop
inc
cmpsl
sbb
fstl
inc
notl
out
pop
xor
and
sti
data16
mov
aad
fsubr
push
add
dec
out
pop
xlat
mov
mov
cmp
mov
or
push
xor
xor
jge
pop
hlt
or
repnz
psllq
clc
pushf
cmp
push
stos
lods
or
sub
sarl
pop
sbb
mov
sti
cltd
pop
jmp
enter
bound
add
shll
test
sahf
push
lahf
ficoms
pop
pop
ljmp
arpl
cmpsl
cmpsb
pop
jle
cmpsb
mov
sbb
xchg
fldl2e
insb
mov
or
cld
cmp
push
inc
mov
stc
gs
sbb
sub
xor
mulps
aas
leave
ret
push
mov
push
dec
add
jno
leave
fwait
lock
xchg
adc
xor
jmp
test
mov
out
test
ljmp
adc
add
outsb
adc
insl
ret
cmp
sbb
cmp
pavgb
jo
iret
loop
out
inc
scas
sub
xchg
fs
adc
pop
shlb
cmp
movsl
lcall
fwait
sub
or
int3
out
jmp
adc
lods
push
pop
adc
ret
in
cltd
aas
out
lcall
pop
xor
and
js
xchg
enter
push
dec
push
mov
cld
jmp
xor
enter
cld
inc
out
mov
incl
rcrb
out
aad
sub
or
xchg
stc
nop
mov
insl
xlat
mov
xor
pop
lock
pushf
and
shll
push
jbe
pop
std
mov
push
mov
add
call
xchg
mov
mov
inc
inc
or
loop
mov
xchg
sub
sub
xor
mov
stc
out
jbe
aam
dec
mov
stc
mov
mov
sub
lods
mov
cmp
sbb
push
mov
mov
cmpsl
cmpsl
loopne
mov
and
sub
subl
xchg
push
ret
sub
adc
pop
ja
mov
test
inc
jl
push
xchg
into
rcll
mulb
outsb
cmpsl
add
adc
notl
mov
iret
mov
lret
mov
fisubl
aas
shlb
addps
cmp
stos
stos
popa
adc
add
in
addr16
and
into
mov
inc
clc
mov
out
fsubrl
jno
in
mov
or
es
lea
loopne
icebp
cmpsb
pop
cs
fsubrl
cs
pushf
negl
jp
shrl
cmpsl
sahf
or
dec
sub
sahf
cmc
les
lahf
cmc
in
js
push
bnd
mov
push
xchg
push
pushf
mov
jmp
lahf
xor
hlt
icebp
jle
push
pop
pop
into
xor
les
dec
jae
jne
sti
test
mov
lahf
inc
adc
cmc
cmpsl
imul
call
mov
xchg
je
inc
sub
push
sbb
scas
sbb
lea
ret
cmp
dec
stos
sbb
in
popa
fs
adc
or
leave
xchg
out
mov
xchg
ficoms
lcall
push
pop
js
in
push
sti
xlat
xchg
mov
cmc
out
push
or
mov
xchg
and
mulb
xchg
out
mov
fldenv
jo
push
nop
clc
push
mov
cmpsb
pop
cmp
call
or
sub
cmp
rcr
xor
cmp
rolb
scas
xor
ss
outsl
call
cmpsl
aaa
mov
add
jecxz
xchg
popf
popa
inc
jae
sahf
leave
lods
xchg
stc
imul
jle
fwait
loopne
jge
sti
rorl
mov
add
cltd
hlt
cmpsb
pushf
popf
in
iret
stos
in
mov
movsb
cmp
stos
mov
add
insl
xchg
rorb
imul
idivl
adc
jno
add
jns
jmp
lods
call
movsl
xchg
push
add
inc
int
push
cmp
aaa
imull
roll
push
lret
sahf
je
pshufw
mov
push
sti
enter
imul
add
mov
cltd
add
push
movsb
jl
movsb
cmp
daa
pop
pop
mov
inc
mov
mov
xchg
sahf
xchg
fnstcw
adc
push
gs
dec
dec
xor
ljmp
adc
mov
mov
pop
xchg
je
inc
out
jmp
push
inc
adc
adc
test
cli
lods
xor
rcrl
pop
inc
cwtl
aam
push
ret
ja
inc
std
mov
jne
mov
rorl
fdivr
js
out
or
pushf
ds
sbb
addr16
cmc
jl
ja
addr16
inc
sbb
lahf
popf
jnp
jae
in
mov
aad
sti
jle
pop
dec
rorb
aas
int
daa
pop
loopne
push
jp
sub
outsb
xor
jp
imul
js
push
jg
push
loop
mov
stos
add
add
mov
aaa
movsb
js
insb
push
xor
mov
movsb
or
popf
cmp
push
sub
pop
lcall
or
lods
and
mov
add
mov
xchg
and
jle
xor
test
sbb
insb
xor
scas
int3
mov
inc
ficoms
shlb
imul
mov
jg
adc
push
sub
dec
mov
jge
mov
or
xchg
mov
addr16
xor
or
sbb
sbb
xlat
repnz
sub
dec
mov
aaa
or
fisttpll
jbe
push
cmp
push
sub
and
fs
push
pop
and
es
mov
or
mov
aas
jmp
jne
mov
inc
prefetchw
scas
push
push
pop
ljmp
inc
pop
mov
test
or
push
test
inc
xchg
jns
pop
stos
push
stos
test
leave
sarl
scas
iret
or
outsb
fstps
add
fmull
fcompp
jno
insl
gs
push
cld
dec
and
arpl
mov
and
xor
inc
mov
cmpb
xchg
cltd
xchg
addr16
cmp
test
mov
scas
popa
testl
aam
xchg
push
pop
xor
xchg
nop
iret
clc
call
or
ret
mov
push
loope
xlat
ds
and
pop
in
cmp
jns
mov
mov
push
in
lea
mov
cmp
mull
lods
jo
jo
cmp
sahf
xchg
test
test
dec
push
mov
jmp
dec
rcr
icebp
idiv
push
mov
dec
sub
or
adc
fdiv
les
imul
pushaw
jae,pt
test
sbb
cli
or
xchg
mov
lods
mov
and
mov
icebp
jb
ljmp
dec
das
dec
sub
daa
test
sti
stc
ret
lock
inc
dec
gs
sub
repz
cmp
sub
dec
xchg
mov
dec
adc
mov
xchg
jns
adc
mov
fucomip
test
mov
inc
push
aam
adc
ss
loope
mov
mov
jo
jns
cmp
mov
mov
dec
aas
movsl
cmp
pop
and
and
add
pop
call
cltd
gs
icebp
lds
mov
lea
sub
lea
sahf
es
jl
mov
push
and
inc
mov
cmp
xlat
jl
xor
push
dec
or
mov
in
pop
fs
mov
inc
jmp
push
ljmp
maskmovq
int
lret
mov
cltd
xor
xchg
or
pop
mov
cmpsb
cmp
xlat
pop
or
mov
daa
xchg
mov
das
fimull
mov
hlt
inc
push
outsb
cmp
aam
in
data16
xor
mov
and
cmp
loope
out
sbb
lret
cmc
adc
adc
push
dec
ret
dec
xchg
enter
pop
or
or
mov
into
dec
aam
xchg
loopne
mov
lret
aaa
subps
aam
in
stos
add
jle
pop
dec
jbe
jl
scas
cltd
mov
test
xor
jl
push
push
out
mov
push
popa
or
or
sbb
fisubs
out
jb
insl
das
mov
jae
push
fistpl
stc
bsr
xchg
sbb
sub
scas
mov
testb
cmpsb
add
ret
or
aam
xchg
pushl
jl
add
and
ljmp
adc
push
aam
jo
jb
mov
pop
cmpb
mov
dec
pop
cmp
ljmp
stos
or
dec
fistpl
pop
jle
mov
push
pop
lahf
add
subl
aas
dec
inc
cmp
adc
stos
sbb
mov
xchg
movsl
pop
adc
data16
pop
jo
adc
adc
iret
sarl
pop
mov
jnp
dec
sbb
divb
jmp
movsb
mov
mov
jecxz
je
int
sahf
xchg
aad
lds
mov
xchg
seto
incl
push
add
ret
xchg
pop
push
dec
js
jp
int
or
pop
push
push
cmpsb
sbb
daa
or
adc
movsl
pop
test
cli
daa
push
mov
adc
std
call
inc
mov
add
scas
xchg
xlat
dec
pop
jns
mov
jge
mov
jg
lret
jg
mov
push
subl
jns
hlt
jp
adc
lock
pop
inc
pop
popa
push
lcall
repnz
movsb
pop
sub
sbb
mov
and
jb
cwtl
xchg
mov
lds
rclb
addb
mov
fsubrl
lahf
add
adc
sub
imul
mov
add
enter
inc
aad
daa
inc
push
nop
push
insb
dec
sub
outsl
into
push
test
lds
setg
adc
shlb
pop
frstpm(287
or
xchg
xorb
inc
add
rcr
addb
imul
mov
enter
sub
xor
jne
mov
pop
jae
rep
inc
adc
fcompl
rorb
add
es
sbb
jne
jnp
movsl
mov
xchg
jle
adc
js
jmp
dec
fnsave
sub
jns
dec
in
inc
pop
fnsave
adc
and
outsb
or
movsb
pop
test
lods
subl
ljmp
add
and
fs
insl
sbb
std
add
push
rolb
fsubrl
and
add
jmp
xor
outsl
inc
test
cmpb
mov
into
mov
jp
stc
add
andb
mov
popf
mov
mov
mov
inc
mov
enter
lock
fstps
insb
push
popf
mov
sub
or
in
sahf
xor
xorb
jge
insl
cmpsb
int3
add
mov
sarb
daa
xor
add
cmpsb
sahf
xchg
imul
inc
pop
push
push
jg
test
rorl
ret
dec
lcall
pop
push
add
fwait
push
aaa
arpl
xchg
xchg
xlat
inc
xchg
mov
scas
sti
dec
cmp
xor
fs
int3
rol
sar
aas
loope
cltd
xor
andl
dec
sub
out
in
mov
mov
push
in
pop
incb
nop
cmp
out
cmp
fwait
js
fnstcw
mov
rorb
int3
or
cmp
push
jb
sub
insl
xchg
push
scas
cmpsb
inc
sub
pop
inc
cmpl
movsb
repz
inc
fimuls
popf
arpl
into
mov
das
call
cli
lock
sub
mov
sub
push
mov
mov
dec
cwtl
mov
cmpsl
fwait
aaa
into
push
test
cmp
xlat
addr16
mov
repz
ja
imul
or
insl
push
push
fldenv
test
push
out
xchg
xor
fsubrs
dec
add
int
cmpsl
jp
pusha
inc
push
sub
sub
lahf
scas
and
inc
xor
adcl
pop
and
xor
mov
jge
jne
rcrl
xchg
push
hlt
aaa
dec
lret
sahf
jne
popa
mov
add
mov
jl
or
repnz
sbb
pop
xor
and
jmp
push
and
inc
daa
sub
outsb
out
mov
jbe
idivl
cltd
push
or
test
cmp
pop
imul
iret
dec
out
cs
adc
shlb
fldcw
ss
dec
insl
adc
notb
mov
mov
adc
sub
sub
in
fdivr
sub
add
sub
xor
fst
xor
mov
js
notl
xchg
pop
or
addb
andl
mov
sub
mov
loope
sub
mov
adc
pop
test
fistps
sbb
leave
add
fldt
jecxz
mov
lds
stos
loope
daa
dec
test
mov
mov
mov
cs
test
push
sbb
cmp
and
shll
xor
lcall
fldenv
mov
push
sbb
sahf
cmpsl
lret
loope
loop
ret
sbb
mov
out
icebp
mov
aaa
push
fwait
dec
inc
dec
pusha
in
jb
sub
sbb
pop
cmp
test
das
in
testl
lods
rcrl
xchg
xchg
or
pop
pop
add
push
xor
jg
mov
ret
mov
xchg
loop
out
scas
arpl
sahf
je
in
xchg
and
mov
adc
hlt
pop
lret
loop
sub
jne
pusha
mov
je
mov
out
inc
jp
and
jg
xor
aam
lret
sub
out
mov
aam
pop
pop
pop
ljmp
cltd
or
mov
stc
insb
ja
xchg
sbb
or
jge
call
jne
jl
sbb
das
sub
fcmovu
aam
cli
dec
or
rcrb
imul
adc
adc
fstp
jp
lret
and
stos
in
ja
or
int
scas
and
int3
fidivl
mov
jecxz
mov
idivl
aad
mov
jbe
or
lcall
cmc
int
loope
ss
mov
lods
lret
lock
cli
sbb
pushf
pushf
sub
ja
aam
ljmp
cld
out
movsl
dec
scas
jg
xchg
adc
lret
lock
jge
lods
xor
mov
pop
mov
mov
adc
xor
lahf
aad
es
jbe
loope
pop
sahf
xlat
pop
inc
leave
push
push
xchg
data16
in
ds
int
shlb
fwait
and
sbb
divb
inc
fsubrs
push
data16
inc
lods
test
icebp
test
dec
pop
sbb
sbb
push
pop
xor
xchg
pusha
cmp
test
gs
jecxz
loopne
inc
pop
imul
mov
int3
out
add
and
popf
cs
add
xchg
ja
insl
imulb
aaa
pushf
jge
mov
in
xchg
mov
mov
ds
sub
fisubrl
stos
or
les
pop
mov
leave
lret
rol
inc
popa
andl
popa
cmp
sbb
push
addr16
int3
fwait
in
rcll
pusha
mov
mov
xor
pop
sbb
rep
push
xor
mov
jl
lret
pop
jo
test
rcr
out
imul
rcrb
jl
ret
pop
cmp
ljmp
test
lods
test
push
cld
pop
icebp
mov
mov
iret
scas
mov
imul
or
cli
dec
jb
cs
sar
add
mov
into
ret
xor
xchg
sub
add
xor
stos
sti
push
xchg
and
pop
push
mov
cmp
push
and
fwait
dec
fcmovbe
mov
testb
mov
push
xor
clc
xchg
subb
and
pop
sbb
sub
cmp
cmp
pop
pop
pop
add
out
enter
dec
fcoms
sub
les
daa
sahf
xchg
icebp
sahf
daa
cmpsb
sub
mov
loope
and
jge
xchg
cmp
test
imul
into
mov
xchg
pop
add
jno
mov
inc
adc
jle
dec
ss
es
xchg
ja
mov
jl
cmp
push
cmpsb
or
pop
test
popa
ja
cmp
gs
aam
sbb
lea
push
lret
fdivs
popf
js
push
jecxz
inc
cmp
fwait
jae
and
or
lock
jecxz
rol
jno
mov
adc
mov
sub
push
daa
and
pop
stc
repnz
mov
pushf
pop
js
into
loope
xor
pop
mov
lock
out
mov
xchg
jge
adc
insl
cltd
mov
add
pop
or
sbb
scas
mov
stos
jne
arpl
std
pusha
sub
cmpsl
mov
and
dec
inc
push
dec
sub
inc
sub
fidivl
imul
cmpb
pusha
xor
add
add
push
xor
into
sub
inc
push
subl
sbb
pop
adc
fisttps
mov
cmp
add
es
xor
scas
into
xchg
repz
sbb
data16
jo
or
ja
fsubs
out
shlb
enter
dec
insb
inc
fadds
push
push
outsl
or
push
pmuludq
xor
or
add
outsb
mov
cmp
test
add
pop
mov
in
mov
daa
sub
and
bound
dec
pop
adc
sti
xchg
pop
adc
jnp
lret
jg
hlt
lret
rcrb
insl
out
ja
sahf
push
arpl
ds
into
push
pop
pop
sarb
faddl
jmp
xor
mov
xchg
rorl
mov
add
dec
fs
cmpsl
jp
iret
loop
xor
xchg
imul
fwait
cmp
pop
fcmovnbe
jae
lret
clc
sarl
cli
icebp
popf
sbbl
sarb
pop
lret
push
cmpl
cmp
int
mov
dec
mov
adc
add
adc
xchg
les
xchg
jnp
jmp
stc
push
out
or
sbb
adc
mov
in
or
outsb
mov
lock
dec
dec
hlt
and
nop
lcall
sbb
outsl
pop
dec
lcall
xchg
sub
pop
stos
pop
pop
loop
pop
loope
clc
sahf
xchg
mov
pop
dec
mov
jne
or
insl
adc
xor
lret
adc
cli
aad
or
push
cmp
jne
jne
fistpl
push
cltd
cwtl
out
pop
xchg
and
mov
pop
and
rcrb
insb
inc
push
cli
lcall
out
jmp
testb
stos
push
out
mov
jo
adcb
lret
cwtl
adc
fiadds
testb
add
sub
rolb
fdivr
daa
ja
imul
inc
sbb
adc
pop
push
test
ret
pop
std
add
ss
mov
decl
sub
rorl
jb
and
test
sub
movsl
stos
xor
call
cmp
jb
mov
and
lock
lods
sub
dec
push
or
inc
sbb
icebp
nop
mov
ret
pop
fldcw
mov
mov
lds
dec
daa
xor
test
push
push
sbb
psubd
inc
ja
mov
sub
jbe
or
out
sahf
aad
and
xor
dec
rcl
rol
std
push
mov
mov
ret
mov
lock
push
and
mov
sarl
mov
fs
pop
mov
mov
pop
xchg
add
dec
shl
repz
stos
sub
push
cmc
xchg
popf
or
es
and
in
insl
in
and
xor
mov
aad
outsb
loope
mov
ret
push
ret
out
sub
test
xor
rorb
test
xchg
xor
xchg
add
aam
popf
out
dec
cwtl
enter
jmp
adcb
xchg
out
mov
ret
pop
or
shlb
hlt
call
sti
pop
sub
test
or
aaa
add
dec
mov
mov
mov
movsl
cltd
inc
sbb
outsb
cmp
mov
data16
rol
inc
aaa
mov
lods
xchg
fs
call
int3
mov
in
sub
push
shrb
fs
fcomps
dec
dec
shll
pop
inc
xchg
iret
cmp
test
sbb
sub
xor
xor
mov
or
mul
lock
xchg
loope
test
test
outsl
mov
out
jl
ss
in
jne
sarl
xchg
dec
jg
in
push
roll
insb
push
ret
ret
imul
jno
sub
xchg
stc
or
lret
jecxz
and
cmp
jp
jbe
mov
xchg
xor
push
out
shl
lahf
aaa
mov
cli
fwait
push
loop
xor
and
mov
movsl
cmp
mov
cmp
movsb
or
sbb
pop
mov
sub
clc
cmp
xor
mov
dec
and
dec
shll
test
cmc
mov
mov
pop
jge
and
es
cmpsl
xchg
dec
xor
loope
bound
sbb
xor
cmpsb
mov
cltd
pop
cltd
fs
out
push
dec
add
pop
push
sub
icebp
push
test
lock
sarl
insl
movsb
inc
sub
jle
push
xchg
movsb
mov
jecxz
pusha
inc
pop
mov
mov
cmp
mov
jno
mov
add
mov
loope
je
jo
adc
or
cmpb
sahf
xor
jns
lds
sub
cmp
ljmp
out
mov
sub
loope
and
cmp
ljmp
bndstx
adc
xchg
cmpsb
inc
inc
or
fnsave
cwtl
sub
xchg
dec
bound
into
dec
jg
sub
adc
std
rcrl
mov
mov
imul
lret
mov
cmpsb
mov
inc
out
xchg
aas
cmc
dec
mov
mov
sbb
add
das
xchg
add
insb
cmp
jnp
lret
add
dec
mov
jae
les
push
es
sub
gs
divl
lret
das
pop
cmpsl
ss
les
roll
pop
mov
jg
cld
icebp
cmp
out
mov
push
jge
addl
mov
jl
out
mov
and
or
xor
js
jp
call
mov
sbb
inc
movsb
add
leave
inc
dec
mov
fisubl
inc
ret
jmp
add
push
aad
jnp
jg
mov
jge
testb
in
sbb
scas
mov
and
inc
jne
cld
cld
add
add
pop
jl
pop
jns
inc
test
cwtl
and
in
add
mov
jg
mov
push
repnz
ja
inc
aaa
mov
loopne
push
arpl
cmp
cli
fdivrp
das
jl
vcvtps2pd
and
mov
lea
inc
pop
stc
mov
jge
or
ds
pop
xchg
push
frstor
lcall
js
mov
pushf
mov
loopne
insb
cld
test
ljmp
movsl
pop
pop
adc
xchg
xchg
mov
xlat
fidivrl
rcrb
xor
mov
sbb
std
rcrl
test
and
and
or
mov
pop
shrl
inc
std
mov
jp
mov
dec
fdivrl
cmp
scas
cld
jo
inc
ret
cld
outsl
je
enter
andb
dec
ret
dec
adc
add
test
aaa
cmpb
subl
popf
mov
cmp
cltd
insb
dec
xchg
xchg
add
add
mov
add
or
cld
adc
push
rorb
xchg
cmpsl
daa
stos
sub
mov
mov
xor
jmp
outsl
mov
fidivl
push
pop
mov
ror
cmp
pusha
lcall
mov
dec
cmpl
sahf
dec
in
mov
mov
aas
add
sub
add
sbb
out
cmc
sbb
fdivp
js
js
movsl
mov
into
jle
fiadds
or
sbb
push
pop
sbb
xchg
cmp
jp,pt
in
cmp
xlat
jne
and
shll
int
cwtl
nop
js
je
pop
dec
imul
stc
mov
out
push
es
jle
xor
insb
pop
out
ror
out
in
dec
push
fiadds
in
sbb
stc
mov
pop
lods
cltd
es
shl
push
les
ljmpw
or
cmp
ds
push
test
ljmp
bound
mov
push
inc
pop
mov
mov
xchg
pop
cmp
push
rorl
cltd
ljmp
and
movsl
aam
cmpl
mov
scas
roll
aad
cmp
fisubl
xchg
insb
aad
out
movl
inc
movsb
std
mov
sbb
lret
inc
ljmp
arpl
dec
inc
mov
sbb
fiaddl
cli
pop
mov
and
mov
int
addr16
mov
fildl
in
add
test
ret
mov
cmp
jbe
inc
dec
inc
add
addr16
fldenv
xchg
jp
dec
push
xor
mov
push
call
rolb
inc
cld
pop
mov
push
cmpsl
dec
ret
dec
in
jae
xchg
xor
stc
rorl
adc
mov
call
dec
das
movsb
jle
ljmp
test
fistl
test
loop
sti
bound
mov
inc
mov
adc
sbb
cs
mov
rorb
mov
int3
pop
sub
mov
loop
add
ret
mov
ja
movsl
stos
adcb
push
mov
mov
loopne
in
clc
fwait
mov
rclb
pop
sarl
and
out
mov
push
popl
test
subb
pop
hlt
nop
sbb
and
xchg
int3
and
sti
push
sub
add
repz
ret
leave
clc
sbb
imul
jne
inc
add
dec
mov
rolb
pop
je
cmp
xchg
pop
aas
xchg
lret
sub
or
addr16
js
int
xchg
push
and
adc
loope
push
cmpsl
and
aad
fisubrl
inc
nop
mov
add
cmp
js
daa
ret
mov
nop
add
pop
lret
jmp
pop
or
dec
rcl
popa
xchg
ds
sbb
push
aas
sub
xchg
mull
xchg
cld
jp
adc
stos
fsubrp
fdivl
div
push
hlt
bound
push
inc
sahf
repnz
lret
push
negb
push
pop
ret
sbb
bound
loopne
test
mov
iret
and
popa
fidivrs
mov
cmp
adc
inc
lock
sbb
hlt
mov
out
adc
adc
cs
int
xor
fs
push
adc
pop
loopne
loope
popf
inc
mov
test
sbb
loop
jns
mov
fsub
mov
mov
pop
sub
pop
jecxz
push
jno
movsl
loope
push
mov
cmp
cmp
das
dec
adc
outsb
mov
or
fisttps
scas
fldt
orb
movsb
push
add
mov
or
neg
or
stc
add
inc
mov
pop
mov
mov
inc
jecxz
xlat
pop
test
lea
add
pop
test
jne
xchg
jnp
enter
imul
data16
add
sarb
mov
aam
push
jecxz
xor
jmp
sbb
in
call
arpl
out
aaa
xchg
repnz
arpl
pop
mulb
fidivs
push
mov
lcall
add
adc
testl
mov
inc
icebp
xor
pop
int3
les
adc
sbb
dec
jb
lret
add
mov
les
and
mov
jmp
dec
pop
rolb
fiaddl
add
or
lods
inc
xchg
jb
cs
add
scas
outsl
push
sbb
mov
dec
cli
sbb
jl
or
xchg
adc
inc
inc
inc
shrb
stos
ret
and
rcr
call
xor
pop
sub
mov
stc
xchg
push
mov
in
and
movsb
cmp
cld
test
scas
ret
movsl
pop
and
repz
and
add
push
xchg
cmp
cmp
or
sbb
je
xlat
rcl
or
add
mov
xchg
add
cmp
sbb
icebp
out
jb
mov
fstpl
lods
mov
mov
push
adcb
cmp
pop
mov
in
inc
xor
in
es
out
push
mov
inc
leave
sbb
cltd
gs
mov
gs
jnp
sbb
mull
incb
popf
xchg
pushf
iret
sub
fbld
adc
div
loopne
lds
dec
lcall
xchg
ja
stc
inc
push
rcrl
popa
negl
xchg
ds
popf
add
je
or
les
js
outsb
shl
and
mov
arpl
sub
xlat
sub
ret
pop
test
lcall
pop
pop
dec
movsl
mov
adc
shrb
add
mov
sbb
pushf
adc
mov
jmp
lods
ja
sub
inc
in
cmpl
sbb
lret
jmp
pop
loopne
fcomip
jo
or
cmp
sbb
lea
xchg
test
mov
jnp
sub
les
sahf
push
divb
adc
clc
out
pop
add
mul
in
mov
push
jp
dec
sub
jb
rorb
push
mov
stc
ret
push
loope
xlat
push
sub
add
ret
inc
or
or
inc
in
mov
insb
shll
or
push
fsubl
adc
mov
scas
and
sub
inc
inc
packuswb
daa
jbe
in
ret
in
sub
add
pop
ljmp
push
jns
pop
mov
icebp
imul
mov
jbe
xor
or
xchg
sub
popa
inc
cmpsb
ljmp
dec
push
inc
pop
xchg
pop
or
hlt
enter
ss
jae
xchg
icebp
dec
jae
xor
or
rol
or
in
loope
xor
rorl
cmp
or
outsb
inc
push
jl
aad
lods
ret
sub
rolb
es
adc
xorl
mov
sbb
pop
cmp
dec
mov
xor
and
or
fsub
mov
fisubs
mov
inc
mov
mov
lcall
mov
xlat
mov
push
push
inc
adc
jo
ret
mov
dec
cwtl
pop
push
push
shll
add
ja
lds
dec
jge
rcll
sarl
sti
jne
jge
cmp
or
mov
sar
gs
jno
mov
cmpsb
dec
mov
sbb
repz
je
and
repnz
mov
int3
add
test
leave
outsl
mov
popa
xchg
int3
out
or
into
inc
or
mov
iret
xor
imul
insl
scas
fcmovnu
lret
mov
insl
push
or
mov
ljmp
mov
adc
jae
fisubl
xchg
pop
fsubl
sub
clc
ret
pop
sahf
pushf
aas
mov
mov
xchg
popa
jbe
xchg
jl
test
sarb
xchg
rcrb
push
push
ror
xor
cmp
push
dec
push
or
add
push
aad
pop
lock
shll
lea
ss
iret
mov
stos
inc
test
dec
ja
jmp
mov
clc
or
and
mov
in
and
and
inc
and
or
hlt
out
scas
dec
outsl
flds
and
xchg
lcall
sbb
push
aas
or
jmp
cld
dec
movsl
js
jge
sbb
stos
xor
cmpsb
or
pop
xchg
sub
test
imul
popa
adc
je
and
jae
adc
and
cmpb
das
test
cmp
add
arpl
mov
add
push
add
rclb
out
jl
or
sarb
jb
push
shlb
call
sahf
mov
xchg
outsl
add
fucomp
xchg
sbb
pusha
mov
xchg
es
jno
ljmp
adc
in
sub
sub
out
or
dec
cmpsb
xchg
js
mov
repnz
pusha
addb
jge
iret
shlb
fwait
test
dec
push
jmp
sbb
icebp
adc
nop
inc
mov
jg
nop
mov
fwait
sub
jnp
pusha
cmp
xchg
jnp
jg
xor
adc
adc
sub
lea
scas
call
stos
cmp
cwtl
jecxz
sbb
and
fisttpl
add
lods
insb
adc
push
or
in
mov
push
movsl
dec
add
ret
cmp
mov
xchg
outsb
insb
push
fwait
xchg
mov
jp
int
int3
popf
pop
xor
jle
sar
lock
mov
insl
repnz
cmc
popa
rclb
sub
and
and
je
or
mov
push
xchg
sub
mov
inc
cmp
enter
cmc
jle
es
dec
mov
gs
lock
adc
mov
test
sub
lahf
leave
dec
pop
jnp
pop
cmp
dec
cmp
jp
fwait
mov
cs
pop
mov
push
dec
fsts
out
jae
in
jbe
pop
imul
imul
inc
repz
sub
hlt
and
out
jle
inc
int
add
scas
add
push
in
push
xchg
fsub
push
xchg
inc
ret
sbb
cmpsb
and
dec
ret
stc
and
push
cmp
mov
rorb
dec
inc
enter
cmp
and
mov
lret
lret
shll
and
add
addb
fcmovnbe
adc
mov
pop
or
mov
sbb
cmp
jp
jecxz
xor
pop
loop
inc
fldcw
pop
imul
call
xchg
and
push
push
pop
sahf
pushf
fcompl
mov
dec
es
mov
sub
loop
add
clc
mov
icebp
jns
cmc
mov
adc
add
dec
outsl
mov
push
xorb
mov
ret
in
data16
pop
stos
loop
test
xchg
mov
inc
pop
jno
xor
mov
cmpsl
arpl
repnz
jne
and
leave
jge
inc
xchg
fwait
push
lea
fcomps
aaa
add
stos
inc
xchg
loope
in
and
push
iret
stos
sti
arpl
insl
xor
rcr
sbb
insb
pop
inc
jnp
sub
sub
jmp
adc
fstpt
shll
aaa
out
sbb
mov
mov
dec
popf
xor
jl
mov
pusha
loopne
cld
jne
sbbb
stc
and
fsubrl
or
push
push
lret
pop
cmp
out
inc
aas
in
sub
rcr
jne
inc
popf
outsb
xor
pop
rol
push
lret
das
lods
insl
aaa
loope
pop
xchg
je
dec
cmp
jg
add
push
add
insl
push
insl
cmpsl
add
sub
pop
int
add
in
add
aad
xor
sarl
mov
mov
pop
push
ja
int3
or
inc
cmp
adc
loop
shlb
dec
lea
cmp
movsl
pop
or
mov
add
push
in
fldcw
add
pop
hlt
mov
add
sub
fisubrl
mov
notl
mov
mov
je
fstpt
cmp
xor
push
fidivl
mov
dec
pop
fisubrs
add
aad
dec
aas
jb
cmpb
xor
dec
xor
rorl
jno
xchg
setl
insb
iret
arpl
stos
jmp
icebp
add
notl
jo
cmp
or
loopne
enter
push
and
addb
mov
inc
add
xor
das
ljmp
fisubs
pushf
or
mov
mov
call
mov
out
pop
add
lods
ljmp
or
jge
js
stos
jge
xchg
add
in
xor
mull
scas
mov
shll
outsb
repz
es
sahf
mov
cmp
xor
jle
ret
dec
les
testb
outsl
repz
push
cwtl
imul
cmp
dec
es
repnz
sub
insb
mov
cmp
cs
jp
sahf
xchg
dec
cmp
lret
xor
jle
aad
or
or
or
pop
mov
or
add
add
mov
je
dec
js
ljmp
aad
je
mov
mov
aam
sbb
lods
add
js
xlat
mov
xchg
imul
stos
loopne
pop
movsb
arpl
pop
imul
adc
insl
jne
push
js
add
stos
or
fbld
cli
aaa
dec
push
subb
das
imul
pushf
xlat
mov
pop
mov
mov
cmpsl
push
movsl
mov
sub
push
shll
pop
sub
pop
sub
movsl
in
ret
out
mov
into
xchg
mov
pop
les
scas
iret
insb
das
sbb
add
popa
cmp
mov
sbb
adc
or
xor
loopne
xchg
or
idiv
xchg
jb
adc
aad
push
ja
mov
mov
push
sbb
push
orb
pusha
cmp
sbb
dec
mov
or
jle
aaa
shrb
push
and
jp
jge
or
pop
stos
popa
cmp
decl
push
je
inc
or
push
xlat
cmp
imul
or
rolb
xchg
or
in
test
ret
xchg
xchg
dec
dec
cmp
imul
or
jnp
icebp
mov
jns
data16
mov
fists
mov
out
dec
js
sarb
push
cmc
jb
ljmp
out
fisubs
mov
bound
adc
pusha
and
sub
imul
les
sub
mov
outsb
xor
xchg
test
lods
js
aad
and
in
es
pop
mov
movsb
out
sbb
mov
test
test
inc
lea
loopne
sub
push
push
push
push
testb
es
test
sub
push
scas
lock
jmp
adcb
push
mov
mov
sbb
icebp
xor
cwtl
pop
jmp
out
shrl
dec
push
hlt
popl
mov
imul
cmp
je
nop
repnz
outsl
loopne
ss
or
inc
inc
cmc
push
cld
cmp
sbb
scas
pushf
enter
outsl
cld
test
xchg
inc
mov
or
mov
mov
ja
loopne
lret
sbb
stc
aam
test
dec
fwait
jo
mov
xchg
dec
jge
iret
cmc
shl
mov
inc
cmpsl
mov
mov
xchg
leave
jb
bound
add
push
mov
movq
enter
rorl
dec
aad
mov
lcall
jg
test
mov
hlt
cmp
sub
adc
push
lods
mov
cmp
sarb
or
push
jl
inc
and
icebp
sahf
lods
jnp
push
inc
dec
jmp
adc
inc
or
insl
popf
xor
and
push
scas
std
and
or
or
nop
sbb
pop
inc
adc
jns
imul
xchg
les
insb
cs
mov
aas
xchg
xor
pop
and
push
fidivrs
loopne
cmp
mov
mov
inc
scas
mov
addr16
sbb
jl
xor
dec
loop
adc
lock
sti
sbb
xchg
insb
xor
or
iret
fs
xchg
movsl
lret
cmp
jmp
das
mov
icebp
jne
add
xchg
mov
sti
fldz
inc
icebp
sti
out
adcb
adc
bound
push
jo
pop
mov
aas
xchg
je
cmc
test
jno
xchg
in
popf
stc
lods
mov
dec
xchg
dec
imull
mov
mov
inc
lret
jle
xorl
mov
lret
shlb
fnstsw
add
push
popa
xchg
into
gs
push
pop
dec
loope
test
int
inc
xor
aam
mov
cmp
jbe
test
ret
jg
push
jl
scas
loope
pop
push
mov
and
fisubrl
xchg
icebp
test
jp
outsb
outsl
fstpt
cwtl
push
sub
or
or
or
out
sbb
jb
repnz
and
add
cmp
xchg
mov
jns
push
fldl
jecxz
test
jbe
into
lahf
fldcw
icebp
jecxz
test
arpl
and
movsb
pop
stos
cld
into
jmp
cmp
sbb
mov
lcall
movsb
adc
xor
jp
jo
adc
sub
dec
cli
adc
fwait
in
add
addl
sub
sbb
dec
std
jno
sbb
xlat
and
xor
rorl
jl
jmp
out
cmp
xchg
sub
test
cwtl
lcall
push
dec
pop
cmc
jnp
jns
sbb
lret
rclb
ja
add
shrb
push
les
cli
aaa
jns
mov
jge
aaa
sbb
fs
scas
lcall
aad
dec
inc
divb
call
stos
push
aaa
loope
xchg
sub
add
cmp
and
mov
jno
sbb
movb
leave
into
int
ret
mov
mov
adc
mov
fbld
fstpl
sbb
push
push
add
popa
lods
enter
sbb
ds
out
mov
push
push
push
lcall
xchg
xor
lret
pop
out
sub
and
in
xor
outsl
cwtl
fwait
ljmp
mov
or
inc
jnp
cmpb
xchg
hlt
cmp
xchg
out
movsb
mov
nop
inc
sub
add
dec
add
cltd
dec
pushf
pop
sub
push
test
icebp
mov
pop
aaa
jmp
lahf
sub
ljmp
daa
xchg
inc
aam
mov
fldenv
jne
subb
cmp
ret
fld1
lea
std
mov
mov
test
mov
loopne
dec
lods
inc
out
push
repz
inc
push
pop
cmp
mov
push
int
sub
sub
jo
lods
sub
mov
add
pop
fiaddl
fcoms
mov
xchg
dec
ds
arpl
and
mov
pop
or
push
mov
push
nop
mulb
mov
cmpsb
lret
loop
lahf
outsb
inc
repz
xchg
adc
add
popf
sbb
insl
push
mov
enter
mov
popa
aas
ja
out
mov
int
fistpll
mov
jo
xchg
push
jl
movsl
push
cmp
or
loop
iret
mov
or
outsb
dec
add
inc
pop
stc
stos
loope
mov
or
mov
push
jnp
divb
lods
sbb
leave
repz
push
cltd
scas
lret
repnz
jg
push
test
cmpsb
sub
ret
aam
mov
dec
xor
insl
stc
add
je
mov
inc
ficoml
xor
xor
jmp
pop
dec
test
pushf
mov
aas
shlb
add
popa
sahf
xlat
enter
xor
xor
mov
scas
mov
mov
push
nop
jae,pt
popa
mov
and
cmpsl
add
mov
push
stc
push
mov
das
xchg
push
lret
gs
iret
insl
jl
jno
xchg
movsb
pop
cmp
pop
fnstcw
pushf
daa
test
stos
jnp
repnz
popf
mov
mov
mov
mov
dec
mov
and
cmp
adc
cmc
sti
mov
and
scas
mov
popf
sub
and
pop
push
inc
xor
cmp
movsb
mov
repz
das
jl,pn
jo
xchg
aaa
jl
jae
mov
sub
mov
adcl
lea
shll
xchg
pop
leave
jo
ss
xchg
cli
sub
ret
mov
sti
gs
in
pop
cmp
dec
and
lcall
adc
mov
pop
add
cmp
mov
fstpl
jne
pop
in
ja
jl
jle
shlb
into
popf
ret
mov
repnz
int
mov
jns
add
sub
mov
or
and
mov
nop
sbb
and
shrb
or
test
ret
xor
dec
jmp
jg
inc
jb
ss
mov
inc
insl
fdivrl
lahf
mov
mov
pop
das
push
and
sbb
fwait
mov
jo
sti
pop
aam
mov
sbbl
insb
dec
lods
dec
jnp
push
loope
push
pop
mov
and
push
xchg
pop
add
lcall
outsl
hlt
sub
mov
mov
fbstp
inc
sarb
je
ljmp
dec
jne
cmc
push
xchg
clc
pop
add
test
mov
sub
xor
ja
nop
shll
dec
in
insl
xchg
xchg
aas
inc
mov
mov
add
movsb
das
int
mov
and
inc
iret
mov
roll
xorl
jb
jne
mov
pop
rorb
test
popf
aaa
movl
std
mov
mov
adc
ret
insl
push
push
movsb
add
imul
push
jb
aad
fs
mov
movsl
inc
js
mov
or
mov
mov
sub
sbb
mov
pop
pop
lret
push
repz
movsb
outsb
outsl
lahf
mov
or
pop
xor
and
ljmp
inc
xor
xor
loop
pop
jnp
fwait
push
movsb
inc
cmp
insb
jb
push
mov
push
inc
mov
sub
outsb
sbb
rcll
and
dec
jg
push
test
cs
les
out
popf
cmp
add
and
add
lods
cmp
movsl
lret
data16
lret
outsl
in
gs
insb
outsl
and
sbb
fsubrs
and
pusha
arpl
nop
push
stos
cmp
jmp
jns
sbb
fwait
jle
xchg
add
daa
into
mov
mov
xor
lods
test
xor
xchg
shll
or
movl
mov
in
push
push
xor
mov
lret
mov
leave
mov
xor
adc
repz
sbb
lock
fwait
jae
sti
std
lods
add
mov
in
mov
call
je
inc
cwtl
push
adc
in
bswap
in
mov
xchg
clc
add
icebp
dec
jno
inc
add
shrb
xor
jg
insb
mov
xchg
add
nop
inc
lds
stos
scas
jl
jno
repz
cvtpi2ps
xchg
testb
sarb
out
push
leave
mov
inc
stc
sub
inc
push
sbb
sti
jnp
cmp
xor
movsl
cmp
aas
and
xchg
pop
sub
fstpt
push
dec
loopne
gs
into
fcompl
loopne
inc
push
mov
movl
mov
gs
pop
lcall
loop
xor
imul
into
les
pop
push
jb
in
mov
xlat
cli
mov
icebp
push
test
jp
mov
mov
mov
pop
xchg
mov
in
gs
xchg
jno
rcrb
push
and
mov
in
pop
xchg
xchg
enter
data16
xor
mov
ss
cmpsl
fdivrl
mov
mov
inc
test
cld
cmpsl
or
jnp
inc
idivb
push
or
mov
pop
rcrb
mov
fists
dec
lea
icebp
out
mov
sbb
adc
loope
std
bound
fmuls
and
addl
imul
sub
mulb
pop
cmp
adc
sub
jmp
ret
inc
rcrb
dec
pop
and
sub
push
xchg
mov
push
sub
jbe
jl
sbb
pop
pop
jno
inc
adc
mov
cld
jg
lock
aas
mov
repz
frstor
lods
lods
xchg
aad
leave
repz
imul
cmp
sub
nop
cmp
xor
in
jae
push
sbb
sbb
jno
xchg
pop
dec
jecxz
int
inc
mov
push
stos
cmpsl
push
ret
lea
loope
loop
aas
mov
outsb
push
pop
xchg
int3
aas
cmp
or
dec
out
inc
inc
mov
sub
pop
push
inc
lea
pop
gs
pop
mov
int3
xor
cld
leave
cmc
pusha
jnp
inc
mov
andl
mov
adc
mov
mov
sub
fwait
les
sarb
jnp
out
xor
test
mov
push
data16
aad
sbb
xor
jl
test
mov
call
inc
xchg
dec
rcll
cs
aaa
scas
scas
cmpsb
add
pop
lret
pop
sub
jb
dec
je
movsb
mov
icebp
sub
stos
pop
mov
mov
data16
push
adc
dec
xor
dec
mov
lods
lds
mov
sahf
pushf
out
addr16
cwtl
call
les
inc
sub
test
push
out
shl
jns
cli
mov
shr
hlt
ret
test
in
mov
jnp
popf
adc
or
push
inc
lahf
or
cld
xchg
imull
xchg
lret
inc
ror
out
or
push
test
cli
leave
mov
jns
movsl
push
test
mov
sbbb
sbb
pop
cld
lret
fists
insb
xchg
add
jno
inc
rorb
inc
inc
adc
adc
cmp
add
in
mov
mov
sub
in
aaa
fsub
xor
inc
cmp
xchg
icebp
push
jb
mov
or
add
dec
xchg
sarl
pop
and
adc
out
int
push
or
rcll
ja
shrl
jmp
cmpl
ss
jbe
push
pushf
xor
xchg
mov
xor
hlt
mov
outsl
sbb
dec
cs
addr16
mov
movsl
out
and
mov
push
out
push
fsub
leave
and
and
and
sub
xchg
std
adc
rcr
pushf
lods
out
addr16
cmpb
mov
inc
and
adc
adc
mov
inc
dec
movb
mov
ds
ljmp
lahf
loopne
push
nop
stc
sti
lcall
lods
mov
lcall
test
cmpsl
sub
adc
std
imul
pop
adc
mov
shlb
add
lea
jbe
dec
leave
dec
push
push
je
inc
mov
ficompl
popf
mov
xor
sub
xor
push
negb
fldenv
js
cmpsb
dec
es
aaa
popf
pop
test
dec
adc
xor
std
mov
mov
cli
sbb
xor
push
inc
jp
or
arpl
bound
bound
pop
xchg
inc
mov
xor
pop
inc
cli
jo
mov
jno
adc
or
ja
dec
inc
in
movsb
int3
xchg
call
enter
and
stos
adc
pop
leave
addb
mov
adc
mov
loope
cli
push
fwait
adc
xor
ss
das
jge
sub
or
shl
ljmp
les
cmc
sub
subl
pop
vmovd
in
in
shlb
lods
ret
mov
sti
cltd
pop
mov
pushl
stc
aad
or
lcall
add
mov
push
jmp
inc
arpl
jge
cmp
xchg
int3
andb
sbb
pushf
jb
xor
cli
sbb
dec
adc
inc
add
jmp
sub
clc
addb
pop
out
inc
test
ds
ds
repz
mov
mov
cmp
sbb
sbb
outsb
push
and
mov
push
push
clc
sub
cmp
push
negb
test
shll
cmp
cli
das
and
push
mov
mov
lods
js
dec
and
repnz
insb
repz
mov
loop
fcoml
test
xchg
pop
jl
xor
jle
pop
dec
sub
jo
fistpl
jge
inc
jge
lret
push
inc
outsb
dec
movsb
push
cli
lret
mov
jge
scas
mov
repz
pusha
jge
mov
sbb
or
in
add
adc
mov
add
es
xor
cmp
add
pop
xchg
pcmpgtb
enter
mov
mov
cmpl
mov
adc
rolb
add
iret
add
fdivl
pusha
mov
stc
insl
orb
shr
dec
mov
inc
lods
push
sub
dec
das
dec
out
das
xor
push
inc
imul
ljmp
cmc
dec
cli
in
dec
stos
rolb
rclb
outsl
jns
push
loopne
test
daa
jae
push
push
outsb
xchg
pop
adc
dec
incl
shll
pop
dec
xchg
sub
xchg
idivl
into
xchg
loop
hlt
push
rolb
jmp
and
insl
cld
lock
mov
shll
adc
inc
jno
icebp
leave
mov
pop
mov
add
dec
xorl
aas
cld
les
xchg
pop
and
adc
loope
int3
lods
jae
push
inc
fists
pop
mov
hlt
push
xchg
orb
jo
arpl
lods
xlat
push
adc
push
int
out
aam
enter
sub
xor
cs
out
sub
pop
add
mov
sti
jb
jmp
pushf
testl
or
mov
popf
mov
in
cmp
and
outsb
testb
xchg
lret
pop
jns
pop
out
repnz
test
dec
adc
jns
and
sarb
push
pop
mov
arpl
fsubs
inc
in
cs
mov
mov
sub
orl
std
cmpsb
push
push
jecxz
xor
adc
mov
adc
in
not
mov
xchg
dec
test
cs
scas
roll
pop
inc
or
pusha
xor
sub
imull
ja
mov
popa
adc
out
jecxz
aaa
subl
ffree
nop
mov
negl
popa
cmp
js
lret
movsl
sub
push
mov
in
faddl
test
aam
into
scas
pop
sub
bound
imul
mov
out
call
mov
frstor
hlt
jo
cltd
mov
loopne
movsl
rolb
mov
or
aaa
push
shl
jae
addr16
les
cmp
add
ret
pusha
dec
cmp
psubsb
sbb
pushf
mov
mov
inc
sub
dec
add
lcall
scas
lock
in
movsl
repz
and
pop
mov
in
ja
enter
mov
pusha
mov
jmp
lahf
jp
ror
aas
or
mov
js
das
jecxz
mov
xlat
or
pop
and
repnz
out
adc
push
adc
stc
rorb
xchg
add
push
sbb
aam
ss
ficompl
mov
loope
jno
sti
sarb
pop
mov
out
lds
sbb
sbb
call
pusha
dec
pop
rolb
negl
push
inc
sbb
add
xchg
aas
icebp
fs
cltd
xchg
push
xchg
shr
cmp
adc
fdivrp
arpl
insb
jno
mov
aas
dec
xor
and
pop
push
out
sub
xlat
jbe
xlat
loop
sbb
push
imulb
jle
arpl
aas
std
mov
popa
andl
fidivl
shll
out
pop
pop
fwait
jg
push
addl
cmpsb
lods
push
ja
idivl
fwait
mov
fnstcw
xor
dec
dec
pusha
loop
xchg
adc
adc
jle
lock
int3
iret
mov
xor
popa
lahf
sbb
pop
repnz
mov
mov
jge
leave
mov
pop
mov
inc
mov
mov
scas
dec
mov
and
inc
inc
popf
mov
je
inc
sub
sbb
mov
jnp
mov
sbb
pop
pusha
out
shl
xchg
imul
pop
fxch
sbb
jbe
or
adc
pop
repz
or
and
shl
pusha
aad
prefetch
xchg
inc
xchg
adc
mov
shll
add
dec
and
fadds
xor
mov
stc
jae
les
out
push
sbb
or
mov
rolb
xor
int3
xchg
jbe
int3
ret
inc
les
sub
xchg
jle
insb
jns
out
fnstcw
scas
xchg
mov
rorl
add
incl
cmp
or
popa
push
idivl
cmp
fwait
outsb
dec
mov
xchg
xor
xchg
jnp
out
cmpsl
jle
xchg
ficoml
in
out
lret
test
xlat
cltd
mov
cld
sbbb
loope
stos
sbb
jmp
inc
xchg
lret
jns
mov
pop
jg
xor
mov
icebp
pop
fisubl
imul
ljmp
shlb
aas
push
fistpl
out
jo
lret
fidivl
outsl
push
cmp
xor
jne
inc
aas
push
pop
dec
mov
mov
gs
inc
icebp
aaa
rcrl
cmp
ror
sbb
test
sbb
addb
inc
sbb
arpl
jno
pop
fsubl
std
mov
lock
mov
mov
jle
and
fnstenv
dec
subb
jae
dec
std
repz
push
push
dec
ja
mov
ds
or
xchg
push
bound
inc
pop
xor
pop
xchg
enter
loope
sti
je
rol
clc
aas
inc
lret
sbbb
adc
or
xchg
and
insl
add
rcrb
cmp
or
roll
test
les
lret
adc
repnz
xor
sbb
js
add
fcmovnbe
sub
inc
cmp
or
popa
ret
in
cmc
testl
and
lret
ret
or
insl
sub
push
adc
xor
inc
sub
xchg
jnp
sbb
rorl
xlat
lret
mov
and
add
cmp
negb
cmp
sahf
std
xchg
popf
pusha
pop
mov
dec
inc
test
divb
data16
std
fists
inc
add
mov
fninit
or
lods
cmp
mov
mov
cmp
popl
dec
cmc
or
dec
adc
push
cmpsl
cmpsl
xor
lahf
add
fs
add
dec
mov
jno
js
inc
daa
pop
xor
pop
push
xor
xor
addl
fildl
das
cmp
movswl
cmp
gs
mov
jnp
cmp
jmp
xchg
shll
ret
test
mov
adc
sarb
stos
stos
test
jp
mov
pop
shl
or
popl
cmp
mov
jp
push
pop
pop
mov
fisubrl
pop
pop
testl
push
loope
addr16
jg
cmp
jl
int3
lret
or
xor
push
push
or
gs
lcall
inc
add
jns
arpl
std
inc
ret
inc
and
mov
sub
imul
fiadds
lret
test
shlb
mov
and
push
sbb
mov
jecxz
sub
jle
jecxz
lea
push
loopne
movsb
mov
mov
shrl
pop
fwait
scas
mov
inc
and
iret
cmp
jne
xchg
outsl
scas
xchg
ret
xchg
xor
fdivrl
lods
and
xlat
popa
fucomip
fs
mov
ret
ficoms
mov
or
mov
aam
mov
aaa
sti
les
sub
iret
fcomp
insl
sub
push
lahf
dec
rcr
lods
sub
call
ficompl
mov
cmpsl
adc
push
je
daa
repz
mov
pop
xor
clc
leave
rclb
mov
mov
fidivrs
add
into
outsl
push
loope
int3
divb
movsb
pop
inc
xor
fisttps
push
and
fistps
das
pop
or
or
cmp
fiaddl
xchg
push
push
sub
mov
dec
jbe
mov
cmpsb
test
cmp
aad
vmwrite
arpl
mov
mov
fcompl
dec
or
nop
cmpsl
sub
sub
loop
jae
add
aam
insl
gs
aas
pop
sti
addb
push
stos
fcomps
gs
cmp
sub
pushf
sub
das
add
cmpsb
inc
push
adc
push
mov
les
stos
jmp
cli
and
jns
cmp
cmp
adc
and
jne
leave
pop
movw
icebp
xchg
scas
jae
icebp
fmul
outsl
and
lock
mov
xchg
gs
movsl
mov
push
mov
jecxz
add
xchg
inc
std
mov
or
lods
dec
out
ret
hlt
cmp
sbb
gs
mov
cmc
jle
movsl
stc
repz
adc
pusha
leave
add
orl
cmp
fisubs
mov
jle
js
imul
pop
rcll
jb
xchg
stos
aas
adc
mov
test
test
sbb
fldl
lea
or
jecxz
test
mov
jle
lds
xor
mov
lea
sub
pop
add
push
pop
sbb
dec
pop
jae
add
pop
daa
add
jl
call
adc
movsb
aam
add
dec
pop
inc
into
sub
dec
imul
ljmp
cmp
dec
pusha
jb
sbb
out
in
and
loop
es
xor
in
divl
scas
sbb
dec
or
test
pop
jl
mov
stc
je
fsts
iret
out
dec
stos
idivl
push
call
push
ss
and
xchg
dec
jno
int3
jno
sbb
jnp
xor
inc
dec
or
mov
push
dec
mov
pop
pop
mulb
and
aam
movsb
xor
cmc
push
dec
cmc
jno
mov
divl
push
into
notl
hlt
out
inc
mov
sarb
pop
outsb
aaa
mov
fcomip
adc
pop
or
mov
pop
pop
pushf
in
repz
sbb
fs
imul
add
fwait
cwtl
shrl
scas
lret
test
rcr
sbb
ret
rep
sahf
push
shl
fidivs
aam
stos
pop
cmc
inc
mov
push
dec
gs
movsl
mov
sarl
ds
loope
xor
inc
rcrb
xchg
lcall
data16
cmpsb
adc
cld
add
sbb
in
mov
xorl
push
imul
out
add
xor
imul
insb
out
add
fisubs
aam
lock
scas
into
adc
std
sub
push
jle
cmpsb
push
icebp
pop
inc
lds
lldt
roll
xchg
xor
sbb
mov
or
std
les
shrl
into
or
inc
push
add
popf
jl
sub
lahf
add
mov
dec
add
fdivs
pushl
mov
rcrl
xchg
out
enter
xor
xchg
lods
jmp
pop
fadds
rorl
aaa
adc
fnstsw
ljmp
out
fs
repnz
adc
mov
into
mov
add
cmp
lret
push
mov
in
decb
push
es
mov
sti
cli
std
fcmovu
cld
jns
adc
popa
pop
dec
pop
mov
dec
or
popf
push
cmc
rcrl
inc
adc
jnp
mov
iret
mov
add
nop
xor
mov
pop
int3
jae
into
jbe
bound
mov
pop
xchg
fists
and
jmp
adc
inc
enter
adc
enter
loop
outsl
out
cmp
or
jb
push
aaa
fcoml
push
das
or
aaa
scas
int3
xor
inc
popa
push
push
xchg
mov
inc
inc
cltd
push
push
sar
in
cmp
add
push
mov
xchg
xor
sbb
stos
add
cmp
jl
fimull
repz
dec
cmp
dec
or
pop
repnz
and
dec
cltd
add
test
mov
icebp
push
or
into
cli
subb
shlb
loope
and
or
dec
movsl
xchg
hlt
ds
mov
cmp
in
mov
loope
xchg
jle
mov
push
sbb
in
xchg
mov
sahf
fnsave
fcoml
movsb
repz
pop
xchg
je
ret
add
scas
adc
test
add
xchg
dec
mov
pop
pop
je
shll
sub
and
mov
aaa
xchg
insl
xor
ss
lods
mov
pop
dec
mov
mov
loop
pop
and
ss
xor
int
mov
out
jg
je
rolb
ja
orb
adc
xchg
xor
pop
in
addr16
pop
and
jns
incl
data16
inc
fwait
test
adc
adc
pop
pop
xchg
pop
jecxz
xlat
call
jl
inc
push
jge
mov
rorb
call
adc
iret
cmp
das
stos
cld
or
in
fists
jns
iret
mov
sub
cmp
fisttpll
mov
adc
popl
push
adc
adc
ja
repz
gs
inc
pop
mov
loope
inc
pusha
es
jbe
sahf
sub
push
shll
out
push
mov
xchg
jp
jmp
roll
push
loop
mov
pop
xor
gs
stc
icebp
outsb
mov
push
and
mov
push
xor
or
xor
push
mov
jecxz
xor
jns
xchg
fs
aaa
dec
jno
pop
int3
jmp
lret
mov
pop
out
mov
push
lahf
pop
rcrb
stos
dec
jns
data16
lea
das
sbb
jmp
leave
lock
mov
mov
mov
icebp
inc
jge
mov
ret
sub
dec
cmp
sbb
and
mov
xchg
pop
pop
fwait
das
xchg
ja
mov
mov
outsl
aad
movsl
mov
push
js
popa
sbbl
movsl
push
or
iret
mov
jmp
inc
lret
fcomip
in
shl
insb
sbb
push
mov
push
sbb
or
faddl
sub
jmp
sbb
or
jae
js
sbb
push
mov
std
xchg
xor
mov
mov
inc
stos
addr16
out
shll
xor
jle
mov
clc
out
jne
sbb
and
repnz
decb
sbb
pop
stos
push
jo
pop
test
bound
leave
pop
insl
lock
sbb
sti
lods
xor
jns
push
add
pop
nop
int3
movb
pop
ret
fwait
and
loopne
jbe
shll
stc
shrl
push
sub
pop
and
xchg
cwtl
adc
jge
mov
pop
xlat
leave
call
cld
xor
scas
enter
lahf
mov
jne
and
or
clc
jbe
dec
test
inc
ficompl
jbe
mov
ret
jmp
mov
dec
jbe
and
mov
push
xchg
mov
ret
dec
hlt
cmp
decl
xchg
mov
jle
mov
push
popa
stc
popf
sub
dec
pop
sub
jp
add
icebp
les
dec
out
mov
stos
es
pop
mov
mov
into
test
mov
arpl
xor
inc
push
sub
adcb
lcall
cmp
in
jmp
dec
inc
out
pushf
mov
in
ret
or
in
stos
out
xchg
xor
mov
repz
js
jns
jmp
jne
push
popf
adc
dec
popf
dec
sub
sti
push
lret
cmp
xor
push
sub
or
sbb
iret
les
jmp
inc
sub
out
outsb
stc
mov
add
stc
mov
fldenv
subb
xlat
push
push
stos
enter
mov
xor
xchg
notl
test
sti
add
mov
push
cmp
dec
ss
inc
sbb
inc
int
mov
mov
inc
or
mov
pop
inc
cli
dec
mov
pop
enter
inc
fbld
ds
sub
fidivs
std
or
pop
movsb
xor
adc
dec
pop
cmpsb
outsb
subb
out
decb
lea
mov
add
or
cmp
in
sub
movsb
jae
lret
pop
mov
push
fwait
stos
mov
test
adc
mov
sbb
and
jmp
cmp
scas
push
dec
loop
in
shrb
jl
sub
call
stos
scas
xlat
daa
mov
andb
mov
cmp
push
sbb
in
hlt
cmp
xor
jb
lretw
pop
inc
cmp
cmp
std
xchg
inc
dec
xlat
jle
mov
jmp
or
dec
aaa
incb
shlb
mov
push
shl
in
push
test
out
xchg
pop
stc
popa
rcrl
ds
lods
cmp
jecxz
mov
fimuls
mov
xchg
lret
dec
jnp
jp
or
adc
jg
pushf
mov
fildl
adc
push
rcr
rol
or
fs
mov
push
push
xor
call
cltd
add
loop
push
mov
sbb
outsl
or
mov
push
or
aaa
shrl
jge
jl
scas
and
sbb
or
xor
or
orl
mov
xchg
gs
pushf
or
pop
jns
xor
mov
push
jae
arpl
ret
loope
jecxz
cld
movsl
sub
js
xor
pushf
push
dec
aaa
hlt
in
lods
leave
pop
and
out
mov
testl
sbb
jo
xchg
decl
std
icebp
jnp
pop
mov
outsb
into
push
out
sahf
pop
mov
mov
or
mov
fldt
push
add
push
aas
ljmp
daa
jae
pushf
mov
test
pop
or
sbb
mov
sahf
fucomp
xchg
lods
or
lock
stc
mov
jge
mov
jo
sub
push
cld
arpl
inc
xchg
movsl
movl
mov
xchg
repnz
cmp
pushf
js
lahf
sub
movsb
out
ret
cmp
push
mov
imul
mov
jle
dec
in
jae
leave
mov
add
sbb
jo
and
loopne
jo
push
add
cmp
pop
aas
jno
add
lea
and
mov
cmp
out
into
stos
sbb
push
dec
inc
push
mov
jbe
daa
cs
enter
shl
mov
out
push
les
scas
loopne
mov
jl
fstpt
adc
cld
into
add
push
jnp
lods
adc
xor
mov
push
jge
fcoms
push
sbb
adc
jl
dec
ret
xor
addr16
jg
mov
mov
jmp
dec
popf
ds
or
mov
std
popf
out
cmpsb
popf
popf
xchg
sub
push
or
fistpl
out
imul
mov
pop
jge
imul
mov
int
fwait
xor
or
imul
imul
cmp
lcall
add
scas
push
imul
addr16
dec
mov
xor
xchg
fcomps
mov
fldt
push
mov
push
lahf
in
jge
iret
mov
adc
push
cs
loope
pushf
ljmp
aas
mov
push
xchg
sbbl
aas
jge
hlt
stos
or
jg
mov
mov
dec
das
mov
adc
adc
and
loop
add
inc
repz
xchg
inc
test
add
mov
call
rclb
aaa
mov
jno
mov
ljmp
adc
mov
or
lret
cmpsb
jecxz
clc
or
xor
dec
adc
loop
in
or
push
push
push
xchg
mov
push
add
jmp
sbb
mov
xor
dec
movsb
adc
stos
std
scas
lret
and
gs
and
mov
xchg
rcll
push
sbb
xchg
mov
rcr
mov
cli
andl
xchg
mov
rclb
adc
sub
sti
outsb
subb
dec
aad
mov
mov
lahf
mov
leave
dec
and
js
adc
loopne
add
cmpsl
mov
cmpsl
or
sub
bound
lcall
in
mov
rcr
lods
insl
sarl
pop
inc
lcall
ljmp
push
xchg
leave
sbb
and
in
jb
mov
lahf
lret
popa
mov
inc
daa
mov
xlat
in
jp
negl
inc
leave
out
lret
jo
ret
mov
sbb
xor
test
mov
test
daa
mov
push
repz
push
dec
rorl
stos
push
jl
loop
lret
bound
add
push
push
mov
xchg
es
js
aaa
popa
and
jmp
jg
add
or
jns
adc
sbb
push
push
dec
nop
scas
mov
insl
andb
pop
ja
fsubl
and
adc
jo
out
cmp
lods
loope
movsl
mov
xor
push
out
fcoms
lahf
inc
mov
and
aam
adc
xchg
xchg
mov
and
xor
mov
cmpsl
push
xlat
in
fidivl
stos
push
jecxz
inc
pop
or
fistpl
movsl
push
sbb
sub
jo
dec
stos
scas
fstpl
sarb
sahf
lret
and
scas
adc
ret
mov
aam
cmpsl
out
cld
dec
xor
cmpsl
sub
outsb
mov
out
push
mov
roll
sbb
xor
jmp
xor
or
pop
test
dec
cli
xchg
icebp
decl
lods
mov
pop
add
clc
jl
sbb
in
ja
cmp
inc
jno
fbstp
sbbl
cmp
sarb
rclb
lods
iret
hlt
mov
pop
in
in
icebp
mov
and
add
insb
call
cmp
mov
loopne
inc
sbb
fbstp
xchg
insl
push
mov
imul
imull
pop
cwtl
dec
sbb
and
cli
xor
xchg
sbbb
fs
fcoml
mov
sbb
push
loopne
push
ja
fnsave
xor
lret
stc
dec
mov
jne
mov
inc
adcl
jns
push
lahf
cmpsl
imull
mov
adc
and
sub
pop
rcrl
and
xor
rorb
pop
lret
cld
pop
fimull
mov
mov
sub
sub
inc
pusha
call
add
inc
xchg
cmp
xchg
mov
nop
mov
jmp
lods
pushf
push
xchg
and
sub
mov
push
cmc
jl
mov
and
sub
repz
movsl
aam
js
lock
mov
scas
aas
dec
jb
shrl
repnz
rcrl
jl
sub
insb
pop
loop
aas
dec
mov
fwait
sub
adc
mov
xchg
sub
mov
loope
and
sbb
push
adcl
hlt
loope
adc
add
cmp
mov
pop
arpl
sahf
in
in
or
and
push
rep
jl
adc
add
or
lea
mov
andl
sar
fnstcw
or
dec
inc
bound
movsl
push
rcrb
out
cmp
xchg
sbb
imul
shll
add
stos
jne
cli
mov
scas
andl
call
pop
mov
stc
jae
test
xlat
addr16
push
ja
lock
int
dec
jg
xlat
jle
push
cmpsb
jge
and
sbb
hlt
mov
pop
std
sbb
mov
dec
cs
in
inc
pop
nop
pop
idivl
jb
movlps
out
xchg
push
lcall
inc
add
ljmp
xor
mov
push
mov
xchg
test
sub
out
nop
push
cmpl
fists
sub
add
orb
push
sub
or
cmp
inc
dec
shlb
sbb
sub
cld
cmp
jmp
jb
rorb
shlb
mov
mov
xor
lock
aam
add
iret
mov
pop
pop
lods
cmp
outsl
mov
mov
sub
push
ret
ja
imul
push
xor
push
push
pop
mov
pop
je
mov
cmpsl
fcom
cmp
xchg
mov
sub
imul
adc
aas
mov
push
jbe
jno
push
sub
xor
cmp
shrb
dec
cmp
push
ss
xchg
jle
andb
sub
fldl
xchg
inc
mov
icebp
xor
inc
lret
sbb
sbb
dec
mov
lret
cli
faddp
add
addl
cs
mov
aas
stc
pop
jnp
pop
inc
cmp
mov
add
add
sub
fs
pop
mov
cmpsb
mov
push
fisubrl
and
es
xchg
jle
mov
sbb
xchg
jnp
and
ljmp
and
pand
xor
xchg
jg
gs
add
orl
inc
push
cmp
push
cmp
jg
cmp
jmp
in
out
lret
push
inc
inc
fnstcw
or
mov
inc
inc
mov
cmp
pop
xorb
sbb
xor
insl
bound
ret
dec
mov
out
inc
pusha
data16
shrl
mov
jmp
dec
adc
jb
ds
sbb
jb
paddd
ljmp
xchg
adc
push
bswap
inc
mov
mov
ret
push
je
pop
and
push
loop
rclb
ja
mov
decb
or
lcall
mov
adc
adc
pop
rolb
dec
lods
sbb
mov
test
pop
mov
dec
xchg
cmp
clc
clc
mov
push
pop
pop
pop
cmp
xchg
push
adc
xchg
in
dec
lods
jg
lcall
add
enter
mov
lret
ja
decl
add
repz
outsl
icebp
rorl
sub
repz
push
xor
pop
je
lret
sbb
add
sarw
and
inc
js
fwait
xchg
test
into
bound
ret
repz
xchg
cmp
loope
adc
fildl
mov
les
out
sub
imul
aas
inc
pop
mov
shr
mov
fwait
inc
ja
es
icebp
pop
lahf
push
inc
das
sti
mov
js
fidivrs
push
adc
popl
imulb
inc
in
test
lcall
inc
leave
mov
xlat
lahf
mov
jne
xchg
int
fistl
cmp
mov
xchg
popa
into
and
xchg
jae
subl
mov
cmp
mov
stos
divb
scas
leave
and
mov
cwtl
lcall
outsb
and
lds
mov
mov
mov
and
xchg
cmp
mov
fnstsw
mov
or
push
pop
scas
pop
push
in
hlt
add
in
mov
cmc
lds
aam
inc
push
dec
inc
mov
in
dec
sti
aaa
lcall
enter
lods
and
pop
mov
mov
lcall
xor
std
mov
pusha
or
xchg
sbb
adc
push
dec
inc
les
loopne
popf
bound
insb
and
mov
and
xor
cltd
out
insb
push
jle
mov
push
lods
mov
addr16
lds
out
xchg
cmp
jae
ficomps
inc
add
adc
sbb
xchg
dec
xor
aaa
sbb
cmp
or
icebp
push
inc
jecxz
es
lock
mov
pop
mov
repz
sti
push
xlat
lcall
and
dec
xchg
icebp
pop
xchg
inc
jmp
es
sub
sbb
sub
pop
ljmp
test
inc
repnz
xchg
inc
cli
add
adc
in
or
cld
push
cli
mov
jmp
mov
test
xchg
rcll
jecxz
xor
and
cld
mov
push
leave
pop
jo
repz
and
scas
push
js
or
xchg
cld
push
xor
xchg
sbb
aas
push
out
push
xchg
pop
add
ficomps
jge
and
jno
dec
cmp
adc
addl
sub
les
loope
mov
sbb
dec
dec
fimull
sub
dec
pusha
adc
push
mov
jb,pt
mull
loop
mov
cmp
outsb
sarb
cmc
xor
imul
pop
sbb
pop
lahf
sbb
je
scas
xchg
ljmp
mov
sub
or
cmpsb
adc
mov
popf
ljmp
xlat
imul
mov
popf
enter
out
xor
adc
adc
pop
cmpsl
jo
lahf
adc
jo
dec
test
into
mov
mov
pop
pop
fisttps
jno,pn
mov
push
pop
push
cmp
cli
pop
inc
jb
lea
data16
push
dec
mov
int3
adc
dec
add
and
and
pop
daa
xchg
cwtl
mov
inc
pop
mov
and
xor
pop
jecxz
out
cld
lods
jp
push
mov
sti
hlt
mov
inc
or
test
push
inc
mov
movsb
out
ljmp
mov
mov
dec
in
push
sub
pushf
lock
push
and
pushf
pop
in
lock
xor
xorb
add
xchg
pop
cld
in
out
aad
push
in
iret
adc
sbb
jbe
pop
push
fnstenv
mov
xchg
sub
test
mov
inc
out
adc
int
fadds
outsb
inc
out
xor
int3
scas
fmull
movsl
fwait
inc
in
not
test
jl
pop
pop
pop
enter
data16
imul
fwait
popl
mov
fwait
cwtl
and
mov
xchg
daa
xor
jp
mov
stc
das
adc
loope
sarl
add
push
adc
jae
addr16
xchg
mov
sbbl
sbb
jne
dec
rorl
ror
psllw
push
insl
xchg
or
movsl
mov
arpl
push
xlat
mov
and
mov
xchg
cmpsl
lea
cmp
ljmp
sub
push
dec
xchg
cs
mov
xchg
jbe
les
lret
xor
jp
adc
jne
scas
dec
ret
mov
repnz
adc
inc
popa
inc
pop
cmp
inc
in
xor
pop
cmpl
cmp
jb
testl
push
push
fisubs
test
cmp
ss
xchg
inc
adc
test
and
sub
rolb
arpl
inc
mov
cltd
cmpsl
inc
lcall
lds
adc
mov
add
jg
jg
ljmp
decl
in
loope
jecxz
mov
add
xchg
pusha
sbb
sbb
call
inc
xor
lods
les
inc
push
mov
aas
sub
add
lret
sub
add
icebp
push
push
cwtl
add
sti
nop
mov
mov
mov
pusha
ljmp
sub
adc
jo
scas
inc
cmp
dec
pop
inc
pop
fsts
movsl
aam
out
cmpsb
mov
pop
mov
sarb
jo
and
mov
insl
mov
dec
mov
sbbb
adc
mov
mov
add
jl
fisttpll
mov
cmp
pop
out
insl
iret
cs
pop
lods
cltd
xchg
sub
divb
dec
loope
pop
outsb
cmp
repz
adc
xchg
adc
mov
sub
stc
fldenv
fildll
mov
or
xchg
push
ret
jnp
cld
xchg
jno
mov
push
sbb
test
xchg
dec
mov
loopne
or
out
or
imul
cmp
lcall
insb
aaa
push
cmp
fimull
mov
push
jle
and
lods
or
pop
lahf
mov
inc
divb
fistpll
sbb
fsubrl
cmp
ret
xor
data16
out
insb
dec
mov
adc
pushl
inc
fstl
lret
xchg
into
bound
and
leave
aad
int
jne
xor
dec
cmpl
jle
icebp
dec
lea
add
idiv
dec
push
je
lea
cwtl
sti
pop
xchg
xor
xchg
xchg
push
loopne
push
mov
pop
es
in
out
out
test
mov
shrb
movsb
pushf
mov
loop
mov
inc
subl
mov
xchg
push
xchg
dec
out
bound
addr16
fwait
shrl
add
and
stos
mov
pop
shll
pop
xchg
fdivs
sbb
cmp
or
cmp
push
test
les
xchg
out
pop
cmpsl
lods
jl
not
lea
push
add
jl
call
aam
rcll
fsubs
jns
mov
dec
aam
call
jl
into
call
filds
cld
xchg
adcl
fwait
insl
xlat
mov
in
in
pop
jnp
mov
ljmp
or
pop
mov
mov
jle
sub
mov
pop
roll
cmp
out
arpl
xchg
int3
cmp
aad
cmc
mov
push
jns
dec
inc
mov
stos
sbb
fisttpl
mov
pop
jp
dec
push
jg
mov
loopne
icebp
mov
fsubrs
cmp
push
jo
cli
loopne
out
scas
enter
test
mov
sti
push
stos
jp
ret
dec
mov
cmp
mov
test
fldcw
lds
xchg
cmp
jb
inc
scas
fwait
or
xor
jb
sti
aaa
lock
scas
orl
dec
jmp
movsb
jmp
push
pop
xor
das
sbb
cltd
lahf
push
imul
push
test
scas
call
pop
ss
mov
jae
roll
xchg
movsb
pushw
adc
loope
lds
pop
adc
mov
arpl
jp
xlat
and
jp
adc
push
dec
xchg
fldenv
mov
in
sbb
jp
mov
push
mov
push
and
loopne
test
shrb
leave
and
out
mov
mov
mov
je
pop
ret
enter
lea
icebp
je
shll
and
pop
dec
cli
xorl
int3
and
stos
and
popa
xor
cli
hlt
jns
pop
xchg
into
loopne
xor
sub
lods
scas
xchg
jmp
imul
ret
pop
mov
and
push
cmc
test
xor
xchg
sbb
mov
add
mov
sbb
mulb
jge
xor
xor
fbstp
mov
add
jne
mov
jns
test
outsl
mov
mov
aas
cmpsb
dec
ja
xchg
or
mov
cmp
int3
jno
out
cmp
jno
pop
pop
call
lock
test
nop
shl
xchg
scas
lods
mov
xchg
push
mov
sbb
fists
lret
inc
aaa
add
xor
sti
cmp
stc
lret
push
mov
sub
imul
mov
jae
rcl
and
inc
sti
pop
loopne
mov
repz
fadds
adcl
icebp
inc
cmp
inc
into
mov
cld
sbb
push
fcom
mov
inc
scas
in
loop
dec
lock
sub
addr16
inc
inc
add
rolb
cmpsl
inc
sbb
or
push
push
outsb
push
mov
cmpsb
scas
aaa
adc
sbb
push
mov
inc
bound
xchg
scas
sti
sbb
push
mov
rclb
ret
xchg
jno
xchg
xor
insl
mov
jmp
push
mov
outsl
lcall
negl
inc
jp
jae
pop
leave
ret
push
cs
lahf
bound
xor
jmp
ds
mov
jmp
fwait
outsb
lahf
aaa
pop
int3
add
in
jno
fwait
sub
or
add
lahf
mov
fwait
pop
pop
mov
pop
jmp
add
and
cs
inc
xchg
push
cld
test
cmp
je
sahf
pop
cmp
inc
pusha
inc
leave
fsubrs
stos
jmp
jmp
jg
rolb
mov
mov
mov
jns
sbb
dec
das
add
sti
inc
mov
cltd
jns
or
das
mov
xor
test
pop
sbb
fistpl
pop
add
mov
jle
mov
or
jbe
pop
or
add
push
fstps
or
movsb
pop
jl
sbb
dec
pushf
and
nop
in
sub
test
fists
rol
mov
push
loope
fnop
ja
lea
push
dec
out
xadd
jne
fadds
popf
and
loope
int3
push
movl
fwait
mov
in
mov
out
fcoms
dec
enter
cmpl
sbb
in
lea
ficoms
movsb
lret
mov
xchg
xchg
add
jb
out
sahf
jp
and
jecxz
xchg
inc
or
and
pusha
cmp
xor
jge
repnz
sbb
pop
add
sbbb
mov
jnp
sub
lods
into
pop
filds
into
js
xlat
das
add
ljmp
pushf
out
inc
inc
or
xlat
adc
into
repnz
mov
push
push
adc
movsl
mov
mov
push
cmp
pop
mov
mov
dec
out
push
mov
xor
popf
dec
xchg
sub
and
sbb
data16
outsl
flds
fdivr
adc
scas
int
in
shrl
pusha
insl
add
into
push
inc
mov
mov
nop
add
pushf
adc
xor
adc
out
movsb
int
cmp
cmp
movsl
xor
inc
push
imul
xchg
mov
push
jbe
inc
mov
jb
test
cmpsb
jo
xor
mov
xchg
sbb
xor
jecxz
jmp
or
add
inc
push
sar
pop
test
or
ljmp
inc
xchg
nop
cltd
pop
push
jb
jge
cmp
mov
or
mov
xchg
in
popf
lea
dec
popa
jmp
mov
mov
ja
aaa
dec
rcrb
adc
popf
adc
mov
jge
subpd
cmpsb
jl
outsl
xchg
cwtl
cltd
mov
int3
dec
rcr
out
leave
mov
inc
mov
sbb
mov
repz
dec
test
cmp
test
mov
and
xor
int
nop
and
out
mov
or
lods
insl
popa
dec
enter
push
sbb
mov
loop
mov
push
mov
mov
lret
add
xlat
int3
mov
cli
fdivl
xorl
scas
push
xchg
cmp
daa
sar
data16
test
lret
out
rcr
jbe
and
scas
fimuls
ja
inc
fucom
sub
fsubl
js
enter
cmp
lods
pop
jl
out
imul
not
xchg
shl
repnz
test
or
outsb
icebp
cmpsb
jmp
aam
push
out
jne
daa
pop
jecxz
jae
mov
mov
adc
mov
mov
fiadds
rcll
fnstenv
push
mov
push
out
sahf
dec
mov
mov
mov
mov
leave
xchg
fistpll
fmull
inc
push
mov
xlat
xchg
sub
mov
or
jb
fidivl
cmp
sub
nop
push
rclb
and
jo
cmp
pop
add
inc
fsts
add
mov
mov
test
jmp
daa
lea
lret
pop
out
hlt
and
lret
clc
and
or
add
test
sbb
aas
in
or
aas
push
push
hlt
jle
outsl
cmp
aaa
rcrl
ljmp
mov
pop
jne
push
pop
enter
or
xchg
xchg
ljmp
jb
push
lds
call
lret
ds
gs
mov
pop
test
hlt
dec
je
adcl
pop
inc
jb
cmp
mov
repz
bound
inc
push
aam
add
xor
lret
push
push
push
in
ret
idivl
fninit
cmp
movsl
outsb
mov
cmp
adc
test
fnsave
ret
sub
cmpsl
sahf
test
fdivrs
mov
jns
ja
aam
pop
orb
fxtract
push
xor
sub
adc
cmp
mov
push
inc
push
repnz
addr16
or
aam
xor
orl
dec
add
popf
xor
rorb
ljmp
or
mov
add
repz
mov
mov
adc
mov
cmp
inc
test
push
dec
dec
fstpl
add
loope
cmpsb
dec
jg
xchg
ljmp
xor
fmul
push
paddq
push
sti
sti
or
pop
inc
add
notl
addr16
imul
jecxz
ss
pushf
pop
insb
repnz
cmpsl
outsb
ror
pusha
mov
stos
sub
and
movsb
mov
sbb
bound
imulb
in
stos
pop
pop
imul
inc
outsb
iret
insl
adcb
in
add
aam
aam
int
int
or
jno
dec
or
lret
inc
lret
push
adc
jo
pop
adc
inc
sbb
test
cs
sub
jle
sub
subb
and
out
pop
fdivl
mov
insb
inc
ds
int3
iret
movsb
xchg
pop
lret
mov
mov
mov
mov
pop
xchg
ja
or
mov
and
nop
adc
mov
push
outsl
push
mov
pop
repz
ss
in
and
or
add
lcall
sbb
jge,pt
lods
in
jne
loop
pop
sbb
dec
jbe
orb
mov
adc
outsb
ret
cltd
fnstenv
mov
xchg
ss
enter
sbb
sbb
sti
jb
mov
cmpsb
push
cwtl
lret
jnp
dec
sbb
pushf
mov
or
icebp
or
mov
ret
or
and
adc
scas
int
mov
xchg
stc
fidivs
dec
inc
push
loop
enter
mov
pop
nop
ror
or
popf
out
daa
pop
mov
dec
or
jnp
mov
cmp
ror
sbb
ljmp
dec
xchg
inc
lods
xchg
dec
out
out
mov
push
jne
lahf
inc
adc
jb
cmp
aam
cmp
add
inc
test
cltd
jnp
cmp
pop
adc
adc
dec
hlt
jb
mov
lods
outsb
insl
mov
mov
ljmp
pop
pop
aaa
add
add
add
mov
xchg
dec
and
in
xor
mov
adc
push
jns
out
icebp
or
lods
aaa
mov
nop
ret
shrb
jmp
adc
icebp
mov
jecxz
xchg
mov
mov
push
jno
or
leave
mov
es
xor
ret
inc
rol
lahf
mov
inc
outsl
fistpll
or
pop
mov
mov
sub
mov
pusha
loop
mov
push
push
jge
mov
lahf
push
fisubl
sahf
int3
outsb
rorl
jae
mov
mov
or
cmp
lds
loop
aad
maxps
fsubrl
imul
mov
jb
mov
mov
xor
pusha
sbb
fwait
pushf
int
dec
inc
outsb
in
mov
pop
cld
repz
push
cmpsb
and
mov
lret
inc
sbb
cli
fwait
push
js
inc
mov
cmc
sbb
sbb
adc
fimull
lret
addl
push
and
dec
mov
nop
xchg
fwait
lds
das
out
jmp
mov
shr
insl
int
test
icebp
adc
push
inc
dec
fldcw
dec
xchg
popa
pushf
lock
xor
inc
inc
or
xchg
jmp
ja
int3
and
rclb
scas
xorb
and
imul
sub
pop
into
mov
imul
sbb
mov
cld
out
cmp
fs
xchg
and
push
dec
rclb
scas
xlat
je
clc
js
ret
dec
xor
test
test
pop
out
out
das
fidivrl
shlb
int
cmc
push
mov
mov
and
cmp
sarl
jmp
imul
cmpsb
jns
enter
hlt
loop
mov
jl
push
es
add
fs
dec
icebp
or
jo
push
stos
testb
xchg
out
movsb
pop
cmp
sub
icebp
sbb
xor
popa
sbb
jbe
dec
xchg
pop
subl
ss
stc
jnp
push
add
jbe
scas
out
mov
cs
and
scas
test
mov
push
push
sbb
mov
or
lret
sbb
or
mov
jne
mov
in
dec
mov
xchg
xchg
roll
xor
sbb
or
icebp
ja
cmp
and
push
ficompl
push
rcr
mov
xchg
mov
jp
jmp
dec
fists
mov
xchg
movsl
xor
add
in
adc
insb
ss
out
aas
inc
sbb
push
frstor
aaa
enter
push
inc
lcall
fwait
xchg
pop
and
xchg
adc
lret
enter
jns
and
add
ss
adc
test
xchg
add
rol
xor
cmp
jl
push
xor
je
mov
adc
cmp
pop
pop
push
cltd
push
mov
loop
add
faddl
loop
lret
out
cli
xchg
push
loope
shll
sub
mov
cmp
dec
jg
jle
call
mov
sahf
or
sub
and
push
stos
mov
fwait
pop
sbb
aas
mulb
rcr
pushf
jo
dec
dec
addb
xchg
mov
jns
cmpsb
nop
dec
xchg
nop
inc
das
cltd
mov
cltd
shrb
aas
std
out
mov
dec
out
sahf
ret
push
sbb
mov
mov
lods
test
mov
push
mov
cmp
xchg
adcl
and
adcl
out
pop
inc
xchg
adc
jge
loope
fwait
lahf
push
test
mov
shl
pop
mov
push
aam
lds
test
xchg
cli
repz
shll
sub
jle
je
ret
pop
add
cmp
bound
pop
lea
sbb
out
sbb
sub
xchg
ficomps
inc
fldt
lret
outsb
imul
enter
nop
lds
jnp
mov
cmc
push
test
xchg
pop
xchg
mov
popf
adc
movb
sbb
mov
adc
fcoms
popa
loopne
pop
popa
cmp
xchg
sbb
es
int3
les
mov
add
fldt
cmp
jge
or
pop
inc
xchg
jmp
xchg
fldenv
mov
movl
inc
jg
notl
rcll
mov
pop
push
jne
mov
js
fcoms
lcall
mov
pusha
mov
jae
cmp
push
mov
push
xor
iret
lea
adc
jmp
inc
pop
ss
in
xchg
xchg
pop
repz
jae
jo
insb
enter
sbb
out
mov
mov
adc
sbb
lock
js
jp
js
hlt
jnp
stos
mov
hlt
ret
or
pop
adc
sub
in
push
in
inc
jge
pop
xchg
pop
cmp
es
imul
xchg
in
aas
andb
int
shl
pop
cltd
mov
push
push
mov
xor
xchg
mov
fadds
dec
push
movsl
sti
cmp
cmovp
pop
dec
cmp
xchg
fistps
inc
mov
xor
xchg
popf
adc
xor
pop
sbb
loop
push
sti
and
clc
rclb
xchg
iret
inc
test
fcompl
inc
and
dec
int
cmp
sar
adc
arpl
stos
xor
sbb
dec
xor
clc
lods
int3
sbb
jbe
popa
inc
jmp
add
push
jecxz
xchg
xor
fwait
mov
enter
loope
dec
cmp
adc
test
cmp
cmpsl
sub
daa
insl
cmc
jle
or
mov
clc
mov
and
mov
int
push
repnz
loope,pt
push
into
lret
add
or
cmpsl
ret
cld
icebp
xchg
push
mov
out
int3
sub
sub
xor
add
mov
or
jl
jbe
add
cmc
jbe
sbb
fstpl
jno
insb
in
notl
ret
ficoms
and
xor
sub
push
pop
pop
hlt
push
hlt
bound
mov
add
or
lods
fisubl
aaa
cltd
leave
inc
sub
dec
inc
or
rclb
int
iret
fidivrl
pop
ret
sub
xchg
mov
dec
jno
pop
addr16
arpl
cmp
ds
cmp
mov
push
xchg
outsb
fidivrl
push
out
mov
cltd
sbb
push
or
dec
and
mov
add
and
adc
flds
std
jmp
lea
inc
aas
jge
inc
fsubrl
pop
dec
sbb
lret
mov
xchg
fwait
ljmp
ret
inc
pop
fsubrs
movsl
dec
jno
dec
inc
loop
outsb
jge
arpl
lds
xor
idivl
push
test
xor
adc
ret
jne
mov
cmp
bound
pop
fcmovnb
mov
insb
pop
test
lahf
fadds
pop
mov
add
insl
sub
mov
stos
lea
mov
and
add
cmp
pop
outsb
push
sbb
arpl
clc
adcl
cli
xrelease
test
int
and
adc
xchg
push
jnp
test
mov
push
ret
cmp
mov
filds
or
lods
fsubrl
mov
dec
fcom
lock
inc
nop
jge
into
xor
cmpb
lods
xchg
adc
fdivrp
fcmovnu
repz
rorl
jmp
movsb
out
push
xchg
pop
hlt
mov
lds
mov
dec
add
nop
mul
add
sti
cmp
mov
sub
aas
push
lret
sbb
sub
daa
test
push
mov
pop
repz
scas
adc
adc
dec
push
addr16
inc
ret
cltd
push
xor
and
loope
add
enter
jne
lds
add
fisttpll
mov
dec
add
frstor
sub
sbb
sub
mov
dec
xchg
inc
lret
and
mov
scas
test
mov
stos
rcr
pop
push
popf
mov
pop
movsb
out
pop
add
fwait
jle
into
lods
xor
lret
mov
dec
out
pop
xchg
push
test
jb
icebp
cmp
xchg
inc
pop
test
ficoml
mov
leave
xor
int3
dec
outsb
mov
xchg
pushf
xor
mov
cmp
cld
inc
mov
into
lock
pop
sbb
dec
push
xorb
inc
imul
jb
sbb
dec
dec
jnp
or
cmp
jno
push
rclb
adc
jbe
dec
pop
push
or
shll
popa
add
xchg
mov
fbstp
lea
ljmp
mov
cmpb
inc
xor
leave
jbe
sbb
mov
or
add
out
out
ret
ja
cmp
popa
mov
pop
adcl
stc
insl
nop
mov
ljmp
shrb
push
rcrl
pop
std
movsb
out
lcall
or
or
in
or
imull
dec
xchg
insl
jl
lcall
xchg
jmp
push
loopne
iret
inc
insb
rclb
cmp
sub
les
or
iret
inc
push
inc
add
sti
cwtl
xchg
inc
push
sti
pusha
std
test
sub
mov
js
outsb
outsl
es
cltd
ret
scas
lcall
cs
fiadds
xor
mov
fs
scas
mov
stos
lahf
xor
test
hlt
pushf
mov
push
jp
mov
sti
jbe
mov
int
push
pop
iret
mov
xchg
add
cmp
lds
adc
pusha
inc
or
pop
mov
test
cmp
xor
in
cmp
xor
cmp
xor
and
adc
mov
push
pop
adc
push
aam
mov
insl
sub
cmp
movsb
xor
push
pushf
xor
mov
sbb
hlt
out
sarb
add
jmp
inc
xchg
sbb
fstpl
cmp
pop
mov
aaa
jo
out
ret
dec
imul
inc
or
fstps
js
subl
cmp
outsb
push
stc
mov
mov
mov
int
cmpsb
lods
int
ja
jno
xor
into
and
popl
int3
xlat
adc
mov
cli
ja
mulb
aas
push
jns
jge
out
cld
dec
rcrb
mov
in
add
and
xlat
sbb
repnz
andb
add
jb
sub
pop
and
dec
xor
xchg
cld
fs
pop
stos
cmp
adc
and
xlat
cs
dec
sbb
ret
jle
adc
call
addr16
mov
push
mov
push
lret
and
or
or
fadd
pop
mov
loop
sbb
xlat
sbbl
push
cli
jge
fstl
pop
aad
lds
and
je
mov
aaa
jecxz
jg
add
sub
inc
popa
lea
jo
int
frstor
bound
cmp
cmp
mov
inc
das
sbb
movsl
ret
in
jnp
incl
out
dec
imul
fisubs
add
pop
rorl
insl
lds
adc
xlat
insb
ja
lds
lods
adc
and
aam
dec
bound
xor
adc
mov
sub
ljmp
lods
ffree
mov
dec
jne
xchg
out
clc
mov
in
imul
mov
add
out
loop
push
insl
lds
nop
push
inc
and
adc
xchg
sbb
gs
lods
addr16
sub
mov
jns
imul
and
adc
sub
dec
jle
outsb
xor
pop
pop
sbb
xchg
lds
imul
pop
xchg
test
mov
inc
mov
mov
cmc
test
mov
pop
mov
js
rcrb
cmc
add
or
and
mov
mov
js
cltd
shlb
inc
adc
pushf
pop
push
sbb
out
xchg
loop
stc
mov
cmp
dec
sub
xor
mov
xchg
and
or
push
jg
jb
jnp
movsl
adc
pop
mov
cmc
ds
push
sub
lock
mov
inc
pop
mov
mov
addl
mov
inc
mov
sub
dec
shrl
enter
pop
repz
mov
jmp
push
mov
stos
out
nop
out
pop
inc
gs
into
loope
mulb
andl
mov
lock
mov
mov
pop
faddl
out
lods
jns
sbb
out
cmp
cli
in
sub
call
mov
mov
subb
lret
aaa
out
sbb
jg
add
and
cmp
xor
filds
xchg
mov
adc
pop
push
fdivrp
sbb
inc
pop
jo
nop
or
shlb
mov
fimull
dec
lea
lock
xchg
pop
pop
jnp
sarl
int
dec
inc
addl
sbb
jae
xchg
push
add
dec
add
fists
jo
push
shll
ficomps
mov
mov
jo
cs
pushf
roll
xor
sub
stos
js
pop
cmp
or
add
jnp
lret
add
bound
iret
adc
lret
add
mov
inc
xchg
xor
xor
jne
add
inc
sub
mov
nop
cli
std
jmp
adc
fs
cmp
in
or
mov
daa
js
xor
cmc
push
bound
ret
daa
cltd
or
push
cmp
mov
jmp
sbb
lods
jecxz
xchg
int3
pop
inc
adc
gs
inc
and
in
add
pop
test
jg
mov
ret
sub
mov
fsubrl
jnp
jge
mov
adc
imul
push
or
jp
cmpsl
mov
push
clc
int
notb
stos
mov
test
fidivl
rcrb
or
xchg
test
out
push
in
add
pop
mov
push
push
mov
leave
jecxz
pop
fs
cmp
loope
cs
loopne
sbb
insl
push
inc
and
mov
sub
lret
cwtl
imul
dec
lret
jle
mov
mov
pop
and
in
inc
xor
rcl
mov
bound
or
sub
add
shll
les
pop
ljmp
mov
mov
xor
sub
cltd
lea
pop
jmp
jno
repz
push
pmulhw
xchg
je
jle
dec
fldl
test
ljmp
adc
int3
sub
enter
in
push
mov
cli
cmp
idivl
std
js
push
outsl
idivb
mov
les
add
push
nop
test
clc
out
mov
rorb
ljmp
xchg
out
mov
imul
addb
pop
arpl
sub
hlt
cmpsl
loopne
inc
or
sti
sbb
pop
fs
pop
lcall
aaa
stos
test
test
pop
adc
sub
lock
xorl
xlat
lods
mov
inc
or
imul
pop
test
cmpsb
jb
sub
dec
mov
adc
cmp
xchg
out
adc
inc
sbb
push
jmp
cli
test
or
cli
ljmp
xorl
scas
adc
repnz
xchg
cmp
sbb
je
inc
mov
in
mov
sbb
ljmp
movb
mov
test
inc
xor
pop
add
insb
xchg
das
sti
ljmp
pusha
in
mov
aam
inc
in
call
xchg
sahf
add
lret
ret
test
xchg
cmpsl
inc
out
jl
lret
aam
inc
add
fwait
lret
mov
mov
adc
shll
mov
outsl
imul
mov
cmp
and
out
std
jne
xchg
scas
cmpb
xchg
jns
or
push
sbb
gs
push
clc
pop
dec
and
cmp
fisttps
push
mov
mov
ds
lods
push
lahf
or
leave
cmp
stc
mov
mov
repz
or
adc
xor
jns
cmp
movsl
or
arpl
dec
arpl
bswap
and
nop
jp
dec
out
out
pop
mov
daa
lds
jbe
shll
or
ret
jo
pop
dec
scas
cli
mov
push
add
lcall
out
xchg
push
sarb
adc
mov
pop
fldcw
jmp
xchg
mov
add
sub
lods
jbe
cmp
pop
push
mov
inc
xchg
push
roll
testb
addl
push
mov
sub
addr16
cs
push
sbb
cmc
aaa
jnp
fbstp
jnp
mov
jl
jnp
jno
fsubs
mov
xor
jae
clc
out
lds
gs
imul
movsb
sub
out
pop
mov
pushf
mov
stos
or
into
adc
mov
aas
and
inc
aad
lahf
xor
adc
or
ret
jnp
cld
mov
test
fimuls
mov
fnstenv
test
inc
mov
add
mov
jg
or
adc
sbb
dec
push
xacquire
jecxz
fs
add
imul
pusha
jbe
jb
mov
shrb
stc
jg
popf
repnz
xchg
int3
enter
fwait
aam
xchg
inc
shll
mov
mov
jo
sbb
mov
push
push
sub
adc
adc
sbb
mov
mov
cli
add
cmp
clc
ljmp
push
add
out
cmpl
jecxz
insb
fdivr
or
cwtl
xchg
and
dec
xor
sti
xlat
sbb
and
sbb
fdecstp
or
in
sbb
lock
in
sub
add
pop
push
sbb
icebp
mov
cmpsb
xorb
xchg
fmul
dec
lock
fs
ret
bound
sbb
daa
fisubs
pop
ljmp
sbb
inc
test
cmpsb
mov
loope
out
aam
dec
std
and
inc
fldcw
ljmp
pop
rorb
jg
dec
frstpm(287
mov
clc
jb
out
pop
sbb
arpl
jo
into
mov
mov
push
fidivs
xchg
jle
lods
mov
jmp
hlt
adc
ret
loopne
sbb
push
mov
gs
ljmp
cmc
dec
and
sbb
and
and
jecxz
imul
movsb
lret
repnz
call
addr16
adc
into
push
push
rcr
sbbl
or
adc
cmp
hlt
and
outsb
push
orl
das
cmpsb
arpl
dec
clc
pop
and
jmp
ret
test
shlb
xor
xor
call
call
adc
lahf
mov
rorl
dec
and
repnz
lcall
cmp
ret
ret
nop
js
iret
mov
push
test
icebp
movsb
roll
subl
pop
in
imul
push
inc
in
lods
stos
fsubl
fsubl
jmp
ljmp
dec
repnz
jno
adcb
pusha
nop
es
jmp
adc
jmp
xor
jecxz
pop
pop
in
mov
cmp
mov
push
inc
add
mov
iret
ret
jg
lods
push
bound
daa
lea
mulb
push
dec
or
or
lds
cmp
mov
push
sub
sbb
mov
and
je
shl
lcall
inc
dec
adc
aas
dec
sbb
int3
cmp
sti
mov
dec
pop
sarl
push
jb
daa
mov
imul
sti
jb
pop
xchg
xchg
jno
pop
iret
outsb
pop
imul
in
cld
std
cmpsl
imul
cmpl
mov
lods
arpl
jnp
shrl
xor
repnz
arpl
xchg
fnsave
imul
outsl
sub
mov
mov
fmull
push
popa
xor
fadd
cmp
mov
push
pop
std
cwtl
xchg
repz
out
and
mov
icebp
fcomip
imul
xchg
in
pusha
dec
inc
jbe
xchg
js
sub
idivb
mov
push
mov
xlat
ret
sbb
cmp
push
dec
and
cmp
pusha
loope
fisttpll
sbb
xor
mov
test
push
bound
ljmp
repz
add
mov
ret
lret
lahf
sbb
xchg
clc
sbb
and
jmp
pop
jbe
jns
pop
push
shr
mov
pushf
jnp
lods
sbb
xchg
insb
ror
inc
mov
mov
into
xchg
mov
jg
daa
daa
adc
dec
push
inc
or
pop
pusha
push
stos
cmc
ret
outsl
dec
sub
dec
push
call
xor
cmp
mov
fiadds
jp
mulb
dec
movsb
int
push
dec
sahf
cld
shll
fs
ljmp
aas
or
aaa
or
xchg
inc
clc
dec
daa
nop
call
aad
mov
mov
data16
xchg
cwtl
ficoml
mov
mov
in
pushf
leave
jle
imul
pop
adc
out
cmp
sub
push
mov
test
insl
add
xchg
mov
pop
repz
shrl
fucomip
std
aas
lcall
in
push
xchg
mov
mov
jnp
icebp
ret
lret
push
mov
out
dec
jle
jbe
cld
pop
test
jo
mov
add
or
or
add
roll
rcll
push
mov
loope
push
mov
mov
push
insl
out
pushf
jbe
repz
push
movb
ljmp
fistpll
mov
icebp
cmp
scas
call
mov
jns
imul
sub
mov
mov
insb
push
mov
or
sbb
leave
in
or
in
pmaxub
xchg
cmpb
xlat
or
rol
xchg
ds
insl
dec
call
xchg
pop
push
inc
jo
inc
addr16
add
or
mov
popf
dec
cmpl
pusha
inc
lcall
pusha
sbb
fwait
mov
fistpll
xor
mov
add
ss
out
or
jns
in
je
ds
imul
pushf
push
scas
outsb
inc
xchg
sbb
or
ja
mov
or
push
loopne
cmp
mov
jmp
dec
aas
xchg
or
test
aad
insl
add
mov
push
popa
bound
and
sahf
cmp
jno
push
cltd
cs
sub
cmp
cmpsb
mov
adc
add
icebp
sbb
jmp
mov
fisttpll
sbb
call
or
hlt
inc
mov
add
mov
sub
test
std
xchg
mov
imul
jl
xor
jne
jmp
mov
inc
jl
stos
xor
lods
mov
andl
mov
jp
mov
dec
sbb
bound
and
add
mov
orb
and
pop
loope
faddl
pusha
es
scas
mov
into
adc
cwtl
sbb
xor
pop
cmp
cmp
dec
cld
sbb
out
jno
push
scas
sub
scas
sbb
mov
sub
rcll
cmp
mov
movsb
push
nop
out
inc
xchg
jg
fidivrs
sbb
test
into
mov
and
pop
icebp
adc
and
out
popf
jg
push
sub
mov
movsl
jnp
jae
in
lret
adc
test
mov
out
lods
adc
loopne
adc
cmpsl
out
push
sbb
add
cmp
pop
outsl
int
mov
sbb
pop
sbb
dec
ficoms
mov
ficoms
into
out
fldl
les
pop
sbb
xchg
les
jb
sub
cmpsb
fdivp
cmp
lds
adc
adc
stos
lds
pusha
pop
pop
jnp
mov
push
pushf
mov
mov
pop
jp
mov
iret
ret
dec
loop
jg
dec
xor
fwait
lcall
mov
ja
pop
subb
mov
jg
sbb
clc
inc
scas
ret
jmp
xor
cmp
mov
xchg
jmp
fildl
shlb
test
insl
dec
repnz
subl
jae
aas
jg
sub
push
ja
or
mov
mov
jg
les
rolb
in
sub
dec
out
lahf
push
stos
sbb
scas
add
add
or
mov
jge
push
sub
inc
or
adc
pop
dec
mov
cwtl
pop
popa
loop
xor
xor
mov
test
gs
adc
incl
push
iret
adc
jecxz
cmp
test
or
push
xor
enter
push
pop
jo
mov
pop
repnz
jp
mov
push
fmull
imul
sbb
movsl
sbb
lret
negl
cli
and
icebp
mov
maskmovq
imull
xchg
sarb
inc
hlt
pop
cmp
xchg
stc
or
xor
nop
sbb
and
pop
cmp
stos
jo
data16
cli
aaa
stos
popf
cli
lock
cld
add
sbb
inc
out
rcrl
adc
jg
mov
loop
lret
jb
movsb
and
lods
xchg
fcmovne
std
js
add
pusha
jp
jmp
xlat
lods
inc
xchg
and
jno
adc
dec
pop
xchg
pop
adc
or
int3
insb
cli
call
je
push
mov
sar
add
ret
add
js
in
lods
inc
add
lock
xadd
jne
shll
sbb
insb
jle
nop
mov
test
xor
push
mov
pusha
outsl
inc
dec
fcoml
add
divl
xor
add
repz
push
or
iret
jns
cmp
insb
sbb
inc
xlat
cmp
ret
mov
test
mov
push
fdivl
cwtl
ss
mov
add
daa
jecxz
ja
test
cmp
pop
pop
pusha
cmpsl
dec
aam
pop
psubb
fstpt
cmp
les
iret
or
incb
decl
sub
shrb
stos
sub
push
mov
jmp
inc
or
imul
cmpsb
fiaddl
push
pushf
cwtl
cli
cmpsl
mov
sub
mov
mov
pop
jne
mov
mov
pop
push
xlat
or
call
push
mov
ljmp
sub
mov
pop
pusha
sbb
inc
cmp
push
aaa
test
ret
imul
adc
mov
test
push
jnp
pop
push
push
in
addb
dec
push
je
fmuls
sub
sbb
cltd
aas
lahf
push
cmpsl
or
in
dec
mov
mov
cmp
aad
insl
popa
mov
loop
xchg
inc
sub
adc
mov
lock
js
in
sub
leave
adc
sub
test
push
xchg
jmp
ror
fs
mov
imul
jb
inc
push
fsts
mov
pop
sub
ret
pop
daa
lea
pop
mov
and
imul
xchg
ret
push
xchg
xchg
push
daa
mov
or
dec
jge
imul
push
xor
adc
sub
cld
pop
cli
repz
lret
push
sub
call
add
fcomp
jo
pop
jns
test
add
lret
and
or
in
push
lahf
cli
cmp
push
sar
lods
sub
hlt
in
scas
stc
inc
into
aam
outsl
mov
mov
fadd
add
mov
mov
mov
fstpt
fisttpl
sbb
inc
into
sbb
aaa
imul
andl
sbb
in
dec
scas
xchg
stos
sahf
xchg
out
push
push
sbb
jge
call
xchg
adc
ds
js
enter
or
jmp
cli
xchg
sbb
pop
mov
out
adc
xor
roll
inc
aad
lock
push
sbb
xchg
inc
int3
mov
out
ficompl
dec
orl
mov
stos
int
js
addl
pop
mov
mov
dec
sbbb
adc
add
popa
std
mov
push
cwtl
call
mov
cltd
movsl
test
sar
sbb
mov
and
dec
or
rcll
aaa
adc
sbb
mov
or
push
mov
cmp
lahf
fbstp
aaa
scas
mov
bound
shlb
rorb
mov
mov
stos
add
pushf
fnstsw
mov
xchg
jno
cmpsl
jg
cs
fcomps
xor
je
sahf
mov
xchg
jne
sbb
cmp
cmpsb
pop
add
imul
dec
test
inc
jae
ficoms
lahf
mov
sbb
or
adc
or
xor
push
subl
ret
dec
sbb
movsl
sub
xchg
lds
and
sbb
nop
cwtl
daa
cmp
adc
sbb
pop
jb
mov
mov
jnp
imul
xor
push
std
lret
mov
fs
sbb
adc
and
or
addr16
add
fidivrl
fistps
leave
xor
test
inc
aas
loopne
nop
stos
mov
add
pop
dec
mov
mov
cmpsb
sbb
call
shll
fcomps
or
push
or
xor
xchg
inc
jmp
cli
and
xor
test
rorl
inc
dec
push
ss
mov
dec
dec
lock
mov
mov
loope
dec
xor
dec
mov
mov
push
adc
sbb
pop
and
stc
dec
popf
xorb
pop
sbb
inc
mov
fistps
lods
lea
dec
leave
imul
or
stos
and
popa
jbe
jae
xchg
cmpsb
sti
and
push
addr16
daa
repz
cmpl
mov
push
icebp
push
mov
pop
mov
out
dec
cli
push
xor
sbb
cmp
data16
clc
pop
lods
shlb
cld
hlt
test
test
push
mov
stos
hlt
addr16
add
arpl
sbb
dec
gs
rcll
sbb
imul
dec
idiv
xlat
stc
push
cwtl
or
inc
cld
fildl
dec
pop
rcll
push
xchg
loopne
fadd
push
add
fld
push
fs
dec
into
jl
aam
cmp
mov
xchg
mov
pop
sbbb
fildl
push
inc
cmc
lahf
mov
push
lea
neg
lock
xchg
lods
inc
decl
cmp
xchg
push
jecxz
scas
mov
inc
outsl
cltd
dec
popf
jmp
push
push
and
sahf
pop
jne
lahf
push
clc
sbb
in
jbe
adc
aam
aam
in
outsb
and
div
enter
cmp
iret
bound
mov
jl
imul
push
aam
push
jae
sbb
in
shll
and
std
lock
sub
les
xchg
jl
mov
fcmovbe
bound
cld
add
or
cmp
add
les
jmp
pop
pop
ss
adc
jl
fcoml
pusha
js
ret
push
loop
push
and
int3
aad
xchg
popa
insl
xorb
test
in
jnp
clc
jge
cmpb
scas
insl
out
and
test
push
lds
jbe
js
pop
mov
and
inc
cltd
mov
xlat
scas
mov
add
inc
adc
pop
sbb
fldt
sbb
mov
sbb
shll
sbb
cmp
daa
add
rorb
enter
pop
add
pop
loop
mov
lds
inc
jmp
dec
cli
ljmp
mov
mov
fucom
mov
iret
inc
sbb
push
mov
xlat
mov
addr16
mov
fstpl
imul
jecxz
pmaxsw
cs
pop
push
add
xor
or
push
sbb
outsb
lret
rolb
rcr
les
std
out
adc
push
dec
dec
scas
testb
out
test
jmp
mov
stos
scas
mov
in
in
pop
and
xor
jns
movsl
push
stos
or
enter
shll
push
into
push
ret
jne
jmp
mov
jb
pop
pop
ljmp
fildl
loop
jecxz
aam
mov
mov
mov
pop
sbb
xor
mov
aas
inc
hlt
clc
or
div
js
or
movsl
pop
lret
inc
dec
mov
enter
mov
clc
xchg
sub
mov
into
inc
cmpb
mov
add
cmc
push
test
mov
cmpsb
mov
sbb
inc
in
in
jecxz
dec
fidivs
and
push
mov
in
add
imul
push
mov
cmpsl
cmc
xor
insl
pop
cmp
daa
lret
ret
jb
call
mov
inc
shlb
insl
repnz
xchg
adc
mov
fldl
mov
arpl
loope
add
cmp
xchg
daa
outsl
sbb
mov
repz
push
lea
lds
mov
js
cs
fstl
test
jne
sbb
sbb
pop
inc
and
pop
out
les
mov
shlb
or
or
add
xor
faddp
ja
add
xchg
push
scas
mov
ljmp
mov
pop
subb
stos
xchg
xor
mov
sub
int3
jb
movb
clc
fimuls
inc
jmp
jecxz
mov
push
pusha
add
dec
sbb
xlat
test
sbbb
and
push
popf
or
neg
mov
adc
pop
negb
pop
jae
scas
or
mov
int
shrb
push
adc
or
mov
rcrb
mov
mov
fdivrs
pop
test
and
dec
mov
xchg
rorb
xchg
adc
movsl
xchg
xorl
mov
mov
std
test
push
pop
into
in
lcall
xchg
xchg
dec
lods
add
add
xorb
inc
das
jecxz
mov
jbe
loop
push
xor
test
cli
xchg
pop
sbb
imul
fwait
pushf
push
push
cmpsb
mov
push
jnp
ret
pop
orl
and
mov
loopne
outsb
mov
repz
loopne
cmp
adc
cmc
xchg
cmp
ret
add
pop
dec
into
adc
ret
js
int
jb
mov
stc
dec
or
popf
fsubrs
fmuls
fistpl
adc
repnz
or
xchg
cmc
sub
adc
or
dec
xlat
movsl
jbe
dec
xor
imul
add
pop
imul
mov
ds
sbb
xor
push
stc
jge
cmp
add
mov
jp
imul
insl
or
inc
xor
iretw
lret
adc
les
call
xorps
leave
push
fs
hlt
pop
insb
or
sub
adc
adc
cli
adc
stos
xchg
call
mov
pop
pop
je
jmp
push
mov
clc
xor
repnz
push
addl
mov
outsb
xchg
out
fsubs
jb
sahf
stos
in
push
adc
sub
int
in
xchg
jg
push
and
out
inc
pop
mov
dec
xor
negb
arpl
or
in
jne
and
daa
dec
bound
clc
mov
lock
jp
enter
mov
testl
and
call
loop
xchg
sahf
push
dec
pop
and
jl
push
jne
xor
lahf
enter
jb
out
aam
add
sbb
fs
hlt
pop
movsb
adcl
loopne
mov
sbb
mov
fcomps
leave
mov
mov
scas
push
pop
cmp
jbe
mov
subb
nop
sub
shrb
xchg
dec
fwait
int3
loope
jo
or
sarl
dec
add
call
shld
adc
icebp
popf
adc
dec
movsl
pop
subb
mov
in
xchg
push
mov
clc
mov
cmp
out
fnsave
pop
dec
outsb
push
mov
in
aad
ja
iret
push
gs
in
xchg
into
add
fimuls
pushf
scas
push
fsubs
push
or
jo
adc
stos
loope
sahf
mov
in
push
mov
dec
pop
inc
push
jge
dec
jmp
mov
add
ja
dec
dec
xor
and
or
out
inc
sbb
test
inc
je
rclb
mov
inc
or
pop
jbe
mov
jp
mov
popf
lahf
cmp
insb
inc
mov
fstps
push
aas
sbbl
sbb
jo
lahf
arpl
aad
sub
dec
addr16
dec
jge
out
xchg
inc
aad
sbb
and
arpl
sub
jg
mov
or
mov
jecxz
cmp
add
jmp
jno
es
sbb
dec
cltd
pop
ds
xor
sub
sbb
mov
jns
and
rcll
ds
outsb
xor
cmpl
push
xchg
sub
data16
scas
out
sbb
aaa
rol
cmp
add
push
add
sub
add
jae
push
lds
dec
lahf
pop
lret
pop
and
bound
aam
out
xchg
sub
popa
cmp
or
pushf
ljmp
movb
sub
jp
arpl
roll
stos
or
jmp
out
mov
xchg
aaa
shr
inc
insb
pop
xlat
lahf
cmp
pop
cli
xor
pop
mov
in
arpl
fnstsw
inc
dec
add
mov
mov
add
movsl
mov
scas
sbb
test
mov
mov
addb
push
rcrl
xchg
sub
fisttpl
jge
loopne
sub
dec
mov
movsl
pop
ss
add
inc
stos
aaa
add
or
xchg
js
xor
jo
inc
lock
mov
pushf
ljmp
push
dec
and
xchg
push
xor
jl
outsl
cwtl
push
shrb
das
push
cwtl
sti
mov
lahf
pop
push
sbb
add
imul
lods
call
popf
mov
push
insl
xchg
cmc
sbb
data16
pop
fisttpll
std
jmp
lahf
dec
mov
pop
xor
mov
pop
into
or
cld
scas
and
cmp
mov
mov
xchg
adc
addb
and
out
push
push
scas
xor
or
mov
sub
adcl
pop
xchg
mov
bound
inc
pop
aad
mov
jae
sbb
mov
sub
popa
xor
mov
mov
jbe
jle
lods
subb
jl
cmp
ja
pop
cli
ret
push
je
fwait
in
mov
movsl
ja
and
int3
fwait
xchg
es
mov
adc
not
lods
adc
jno
pop
pop
into
sbbl
pop
rcl
stos
jbe
pusha
sbb
mov
cmc
push
pop
add
xchg
test
shlb
pop
jmp
mov
push
test
hlt
adc
hlt
jne
xchg
push
cmp
dec
insl
inc
sub
adc
dec
andl
lock
jne
leave
scas
cld
push
ds
xor
fdivs
ret
xor
mov
daa
cmp
movsb
fwait
lea
gs
icebp
and
pusha
aas
test
add
sahf
fs
cmpsb
push
mov
cwtl
jae
js
cmp
es
adc
mulb
popa
aad
xchg
push
xchg
aad
jl
out
fisubl
cld
mov
std
pop
jo
sbb
push
jg
test
xor
cwtl
xor
std
mov
scas
je
jl
pop
xchg
adc
pop
das
mov
jns
push
dec
inc
cmp
fisttps
in
sahf
mov
dec
stc
cmp
repnz
xor
xchg
xor
sub
mov
and
dec
fisubrl
enter
ret
jno
addl
ret
sub
gs
mov
mov
sbb
leave
or
iret
pop
jo
js
add
cs
shl
sub
pop
in
push
popa
aaa
jl
jmp
shr
mov
in
mov
or
int
and
loop
shlb
adc
mov
push
dec
push
fwait
jno
nop
cmp
mov
lcall
mov
shll
xchg
sbb
push
je
das
sub
jmp
inc
xchg
cmp
sahf
fsubrs
cmpsb
dec
cmp
adc
sub
mov
arpl
mov
mov
adc
push
pop
pushf
mov
mov
scas
dec
mov
pop
icebp
mov
dec
lods
ss
xlat
dec
fistl
jb
or
cs
mov
in
fsub
inc
lock
mov
pushf
sbb
pop
rol
je
cmp
or
sub
rclb
lock
jns
cmp
sahf
idivl
lods
lock
mov
fs
int
jb
dec
insb
pushf
jno
add
lock
push
test
enter
lock
cmp
int3
lds
xor
adc
jo
lock
inc
es
xlat
ja
cmp
shr
push
out
sub
decb
jmp
fcoms
add
mov
into
and
push
es
adc
dec
adc
out
sub
adc
out
xchg
mov
rorb
add
sub
addr16
enter
test
xchg
xor
test
jl
pop
aam
js
rcr
ror
addl
sbb
cmp
fwait
xchg
rcl
xchg
nop
outsb
std
aaa
mov
in
arpl
insb
jp
imul
popa
inc
mov
jle
dec
push
ja
lds
test
inc
xor
mov
cmp
mov
cmpsl
sldt
cltd
pop
add
pop
pop
jbe
xchg
dec
fwait
test
jae
add
mov
sbb
inc
pop
inc
xor
or
jno
and
inc
mov
pop
loop
mov
lahf
push
and
jnp
xlat
out
loope
out
push
mov
mov
pop
xor
lock
adc
movsl
inc
or
mov
sti
nop
stos
push
cmpsb
pop
mov
lea
mov
mov
mov
and
or
push
adc
jb
sahf
in
cmp
nop
lock
ds
pop
mov
xor
sub
dec
dec
std
fs
pop
mov
pushf
mov
lods
sbb
frstor
sub
insl
pop
jae
jmp
sbb
xchg
enter
jecxz
js
jl
mov
test
mov
adc
popa
ret
cmp
mov
arpl
jmp
movsl
cltd
imull
jb
inc
mov
sbb
jmp
pushf
pop
adc
inc
mov
push
sbb
push
mov
subb
pop
ss
jno
sub
mov
push
cld
ficomps
andb
icebp
jno
and
xchg
mov
lret
loope
je
out
aaa
mov
movb
in
pop
mov
cs
jl
jnp
fwait
ja
hlt
hlt
xor
ljmp
adc
lds
or
ss
xchg
cmpsl
frstor
jbe
mov
imul
or
and
push
aaa
xor
cmc
mov
add
fisttps
fiadds
cmp
out
loope
imull
push
push
pushf
cld
jmp
cld
xchg
sbb
add
sbb
std
loopne
fnstcw
jns
lahf
es
push
in
jb
push
push
add
mov
push
mov
mov
and
js
inc
adc
or
inc
pop
cmp
mov
xchg
dec
cmpsl
fisttps
fsts
enter
sub
hlt
jp
ljmp
and
lock
ficomps
inc
mov
xchg
jno
push
push
std
sahf
in
mov
mov
stos
sbb
push
adc
lds
nop
mov
sub
pop
or
out
nop
pop
pop
fs
cmp
cs
xor
lods
sub
dec
test
jge
pop
std
add
popf
jns
sub
arpl
pop
or
and
push
xchg
sub
jbe
xchg
xchg
sbb
dec
aad
data16
repz
scas
pop
cmpsb
cmp
out
cs
pop
and
rolb
sub
adc
adc
dec
xor
jns
test
dec
sbb
std
aas
or
mov
inc
mov
inc
mov
or
loop
div
add
push
or
cmpsb
shll
es
sbb
pop
lock
or
cli
sub
jae
call
les
out
js
out
daa
fwait
xor
ret
les
pop
add
mov
cmpsb
xor
sub
pop
mov
movsl
stc
mov
loopne
outsl
daa
mov
adc
push
andb
ret
out
test
subl
inc
adc
loopne
lret
xchg
js
sbb
pop
popa
in
pop
ffreep
in
push
sub
adc
or
mov
inc
loopne
jb
pop
popf
pop
xor
mov
pop
inc
or
pop
add
fsubr
aas
pushf
push
into
mov
sub
inc
fwait
pop
out
rcll
pop
cmp
insb
jns
and
push
movsb
std
ljmp
inc
push
or
cmp
adc
daa
fs
mov
sbb
xor
nop
xor
into
pop
ret
and
outsb
std
mov
ljmp
jge
pushf
sbb
mov
int3
mov
ds
bound
cwtl
push
aad
xor
mov
mov
adc
negl
inc
dec
call
fidivs
mov
or
push
lahf
add
dec
pop
out
xchg
jnp
bound
xor
or
outsb
cs
lds
mov
mov
mov
mul
xor
dec
dec
sbb
test
out
enter
xchg
fistpl
leave
dec
cmp
mov
jo
sub
arpl
lcall
sbbl
xchg
xchg
mov
fimuls
push
jl
push
insl
mov
or
daa
jecxz
js
cltd
cmpsl
dec
mov
pop
ljmp
dec
adc
out
pop
push
add
sub
cmpsb
sub
mov
jae
push
popf
cmp
mov
jo
shll
sub
sub
mov
out
dec
sbb
dec
rolb
mov
mov
mov
shl
pop
pop
fstps
arpl
sub
fdivrs
inc
mov
dec
lods
xchg
ret
aaa
rcrb
xchg
pop
inc
scas
test
fsubrl
push
fstpt
cs
mov
cld
inc
pop
mov
sahf
cs
ja
inc
sub
add
stos
icebp
pop
mov
enter
in
xchg
ficoml
shll
mov
push
xchg
scas
clc
push
xor
dec
je
popa
jle
stc
arpl
jo
fs
cmpsb
int
fcom
jbe
push
scas
adc
add
jmp
add
jb
scas
xchg
into
adc
mov
sub
fwait
jl
mov
iret
bound
jno
insl
push
rep
jb
cmpb
push
test
sbb
and
jp
jg
sbb
xor
repnz
fwait
mov
repnz
sarb
push
fistps
fidivrl
xchg
jge
add
lds
xor
push
sarb
imul
in
cmc
out
xchg
add
das
pop
movsb
incl
andl
pop
sahf
negb
xor
mov
test
adc
or
in
cmp
sub
dec
fcmovne
stc
push
aam
out
mov
dec
shr
sub
push
cltd
mov
mov
add
sbb
xor
arpl
imul
inc
out
jmp
cs
and
int
mov
sub
pop
hlt
and
test
jo
scas
in
ljmp
or
fsubrl
add
or
lret
add
sti
loopne
sub
ss
jp
xor
fidivrs
divl
push
ret
adc
stc
es
js
sub
cmp
popa
andl
popa
frndint
xor
push
imulb
cmp
iret
faddl
cmp
sub
outsb
ret
out
and
fdivs
sarb
cmp
out
xchg
gs
out
out
ljmp
jbe
das
loop
cli
fs
repz
bound
push
aad
xchg
dec
sbb
int
arpl
outsl
adc
stos
mov
xchg
repnz
fmul
rclb
xchg
mov
out
fcomps
fcoml
jl
call
cmpsb
sbb
insl
add
enter
xchg
cmpsb
jge
sub
pop
subl
pop
aas
jmp
or
xchg
sbb
in
test
stos
jne
aad
test
jecxz
shrb
imulb
jl
std
push
jle
test
enter
fimull
icebp
xlat
mov
rcrl
jno
xchg
leave
sbb
mov
sub
cmpsb
js
push
sub
cmpsl
rclb
hlt
adc
adc
hlt
popa
xor
int3
push
pop
fadds
mov
mov
mov
shll
cs
mov
cltd
in
dec
scas
cmp
push
mov
gs
add
fsubl
lret
mov
test
mov
push
xchg
shl
ret
and
inc
ljmp
xchg
inc
je
rcl
cmp
or
iret
es
ret
mov
fcoml
lcall
push
lds
repnz
mov
inc
test
mov
and
jecxz
xor
aaa
dec
cmp
clc
mov
jnp
push
sbb
sti
and
cmp
jbe
dec
xor
adc
div
pop
adc
jmp
ss
cmp
push
decl
ja
xor
or
sbb
insb
les
scas
ds
imul
or
mov
ljmp
mov
into
push
sbb
cmp
adc
je
out
sub
test
inc
push
test
in
lea
inc
xor
cmp
or
xchg
imul
and
outsl
xor
mov
repz
jl
mov
pop
movsb
imul
repnz
nop
in
mov
arpl
pop
fs
stos
sub
out
sub
fs
cmpsb
xchg
xchg
cmc
iret
or
and
adc
push
enter
sbb
mov
testw
ds
outsl
adc
pusha
scas
add
dec
jl
hlt
testb
test
out
mov
sahf
es
cli
cli
cmp
add
icebp
mov
fwait
movzbl
jb
pop
scas
ds
stos
sbb
cmp
pop
adc
and
cmp
pop
aas
lods
sbb
in
sub
inc
into
and
bound
pop
loop
scas
jge
addr16
mov
xor
test
int
out
add
jae
mov
lods
lds
xchg
xor
xchg
pop
bound
fistpll
jecxz
arpl
push
push
dec
xchg
cwtl
in
jmp
inc
sbb
daa
incl
jbe
sbb
test
mov
fisubrs
jmp
add
jp
repz
jge
cwtl
out
cmpsl
in
xor
jne
cmpl
jae
inc
dec
lahf
mov
cmpsl
dec
push
sub
lar
popf
push
divb
aaa
pop
inc
push
out
inc
xor
jb
xchg
ds
and
bound
ret
cmc
jnp
lret
cmpsl
daa
js
jno
imul
push
dec
in
sarl
xchg
repz
jg
fsub
cmpsb
push
sti
xchg
sbbb
xor
faddp
pop
fcmovnb
out
es
lock
imul
add
and
repz
mov
jle
aaa
in
stc
push
xor
mov
lret
cmp
ret
stos
add
xchg
jecxz
pop
out
cmp
sahf
jl
sbb
inc
out
mov
push
cmp
jns
pop
sub
les
or
push
inc
push
cmp
test
mov
movsb
movsl
scas
in
sub
xlat
aam
cmpsl
lcall
jb
cmc
js
xchg
shll
xor
in
aam
mov
fisubrl
imul
sbb
aaa
mov
out
cmp
in
inc
sub
sbb
test
or
loop
out
sub
dec
das
mov
test
out
addb
rcll
testb
mov
addl
or
or
xor
shlb
pop
dec
push
mov
pop
cmp
outsb
inc
sbb
push
call
sbb
ret
ret
jo
sbb
adc
dec
enter
into
arpl
dec
cmp
out
adc
call
test
pop
adc
test
cs
dec
sbb
add
rclb
ret
jmp
das
jnp
push
out
ffree
sub
pushf
addr16
push
fidivs
int3
pop
test
mov
push
stos
xor
sbb
adc
mov
and
pusha
lock
arpl
popf
jge
pop
stc
and
fwait
je
pushf
push
fmul
stc
or
jmp
ss
hlt
test
idivl
in
cs
fs
leave
sti
jo
and
sbb
or
mov
inc
ljmp
cmpsl
xor
mov
mov
icebp
movsb
xchg
mov
or
movsb
inc
jnp
cld
mov
loop
push
call
mov
inc
sub
jge
jno
scas
in
pop
sbb
add
cld
cwtl
xor
and
addl
cs
cmp
sbb
stos
ret
or
out
xchg
push
mov
cli
cli
jmp
lea
mov
inc
mov
push
fadds
lret
add
enter
scas
pop
dec
and
sub
sbb
dec
cmp
js
arpl
stos
aad
or
cmpsl
adc
push
movsb
jge
xor
mov
push
movsbl
negb
js
ss
add
xchg
imul
scas
cmp
mov
fisubl
loopne
mov
iret
sbb
fs
pop
movsb
xchg
ss
js
lret
push
cltd
lods
jno
jecxz
inc
ljmp
mov
xchg
ret
adc
lret
adcl
fs
mov
xchg
xchg
sbb
mov
adc
orb
dec
mov
cmp
push
cli
test
mov
inc
inc
sbb
cmpl
outsl
mov
loop
lahf
imul
pop
cld
out
cmpsb
cld
jge
mov
add
daa
add
repnz
fldcw
sub
ss
lahf
cmpsb
clc
lods
xchg
add
dec
scas
cmp
xor
out
das
push
sbb
adc
mov
aaa
mov
dec
divl
mov
aaa
pushf
or
xor
xchg
test
adc
inc
mov
xor
pop
push
js
mov
jle
pop
sahf
jle
xchg
std
mov
lahf
push
int3
xor
ror
mov
dec
mov
cmpsl
jg
aam
pop
test
jb
rorl
sbb
movsl
jge
pusha
sbb
xor
cmp
sub
repnz
or
sbb
jae
lcall
xchg
mov
imul
loop
or
push
jns
iret
imul
push
imull
cmc
push
das
ret
xchg
sbb
add
push
js
mov
aas
xor
outsl
mov
and
lret
mov
sbb
pop
mov
mov
lahf
das
rolb
cs
lret
js
stc
bnd
push
add
push
pop
imul
xchg
stos
loopne
add
mov
imulb
clc
xchg
xor
stos
jge
pop
mov
mov
lods
push
ret
lcall
push
testl
pop
sub
mov
cld
jmp
cmp
cltd
xor
sete
lds
scas
insb
ret
xor
dec
insb
je
js
xor
jno
icebp
lds
pushf
mov
xor
mov
xchg
test
mov
xchg
subl
or
xchg
out
ret
imul
xlat
xor
add
stc
jecxz
aas
loope
sub
mov
cld
inc
idivb
and
imul
ja
test
in
rolb
hlt
cwtl
popf
jmp
mov
das
add
shll
lret
dec
lds
pavgw
out
cwtl
cli
repz
roll
xor
shrl
std
ds
sbb
sbb
mov
push
roll
sbb
ror
fsubrp
loopne
jns
int3
jno
test
mov
pop
stos
mov
flds
in
mov
and
fnstenv
mov
mov
xchg
inc
outsl
mov
faddl
add
mov
push
cmc
movaps
imul
inc
pop
mov
push
fs
lret
or
pop
arpl
sub
movlps
mov
clc
ss
shrb
shll
ja
mov
cltd
int3
imul
sub
xchg
inc
seto
jnp
pop
ljmp
imul
in
mov
cmc
adc
jns
pop
sbb
int
movsl
pop
out
and
fbld
mov
mov
shlb
sub
xor
sub
push
test
repnz
cmpsl
dec
out
outsb
ror
push
xchg
test
ficoms
in
jbe
adc
imul
sbb
or
cmpsl
add
jmp
pop
or
out
mov
out
or
movsb
das
lret
in
out
pop
xor
dec
lods
cmp
aas
jmp
cmp
arpl
js
andl
or
cmp
test
and
cld
inc
xor
sub
jnp
sub
dec
cltd
or
aad
and
push
mov
push
push
mov
ficoml
inc
or
clc
in
push
icebp
jl
pusha
leave
jae
popw
test
adc
sbb
jo
xor
xor
inc
addr16
add
or
mov
cmp
dec
xchg
jae
mov
pop
insl
out
adc
push
xchg
leave
adc
cmpsl
jmp
mov
sbb
pop
cwtl
loop
mov
xor
xchg
not
cltd
or
adcl
clc
das
stos
xor
jl
fdiv
iret
xor
movsl
cmp
inc
fists
mov
lds
int
pop
pop
mov
cmpsl
mov
stc
shrl
out
add
cmp
mov
inc
sbb
push
add
push
cwtl
jmp
jbe
jecxz
repz
mov
movd
mov
jb
jle
push
or
call
test
push
mov
aaa
out
fadd
sarl
jg
pop
push
mov
jl
test
cmp
dec
cld
pusha
adc
dec
cld
pop
mov
fsub
out
neg
pushf
xor
pushf
mov
pusha
lods
lds
jb
std
rcrl
add
outsl
insb
popf
and
test
sahf
cmp
pop
jp
mov
dec
int
mov
dec
mov
leave
repz
adc
jmp
dec
out
fdivs
sbb
rclb
xor
insb
cmpb
pop
inc
and
push
rcrl
shlb
mov
cs
mov
repnz
inc
xor
xchg
cli
fs
andl
stc
dec
adc
and
daa
cmp
dec
andb
mov
push
inc
cmp
inc
out
mov
fistpl
sbb
xchg
insb
sbb
les
daa
push
adc
cmp
pop
je
orl
jg
filds
mov
cwtl
add
xchg
das
fnstsw
in
imul
pop
jp
pop
mov
inc
iret
pushl
add
mov
xor
mov
mov
xor
pop
movsl
mov
mov
imul
jno
dec
je
xchg
jecxz
add
rcrl
xchg
hlt
imul
and
mov
fstl
xchg
addl
cwtl
jl
add
xor
jbe
jg
clc
xchg
in
mov
outsl
daa
out
icebp
xor
add
nop
and
insl
fildl
gs
sbb
cmp
sarb
xchg
mov
add
pop
or
jl
mov
adc
pop
sub
inc
leave
push
cmp
mov
stos
nop
shlb
xor
popa
stos
mov
leave
lahf
mov
repz
repz
lret
pop
imul
pop
mov
std
mov
daa
sub
testl
or
cwtl
call
mov
stos
fdivrs
pop
lret
cld
ret
stos
add
and
adc
xchg
lret
aaa
fldcw
mov
insb
ret
adcb
dec
push
call
jmp
sbbl
push
sub
pusha
in
push
mov
mov
test
cld
or
fsts
dec
mov
pushl
nop
mov
loope
cmpsb
pushl
outsl
andl
cmc
inc
jae
jmp
aaa
dec
cs
jo
push
pop
sbb
cld
mov
mov
movq
loope
mov
cld
sub
jbe
test
adc
arpl
insl
push
mov
pop
mov
addr16
popf
scas
pop
dec
mov
stos
mov
mov
mov
sbb
in
shll
push
shlb
repnz
push
jo,pt
dec
sub
add
mov
add
xor
add
stos
popa
es
and
cmp
jo
sbb
cmp
int3
jnp
js
push
pusha
dec
lret
test
in
iret
dec
in
jbe
mov
dec
dec
xchg
mov
jns
test
pop
and
pop
lods
push
hlt
adc
ficoml
jb
adc
push
lcall
sub
cmpsl
das
pop
jge
mov
mov
inc
icebp
push
andl
mov
add
push
push
or
mov
adcl
mov
jns
fwait
leave
incb
call
jne
xlat
mov
add
xchg
cmp
mov
push
test
inc
scas
test
aaa
jo
inc
sub
imul
cld
mov
xchg
xchg
addr16
in
aaa
jno
test
pushf
testb
out
add
fcmovnbe
loopne
aad
enter
sbbb
lds
sbb
mov
pop
or
xor
push
pop
jmp
rol
lds
int3
push
sub
add
data16
mov
inc
jle
xorb
je
sub
stos
jo
ficompl
jecxz
test
loopne
test
sbb
sbb
cli
add
jno
dec
int3
dec
push
pop
pop
insl
shlb
aaa
add
test
add
push
dec
adc
cltd
out
sarl
sbb
jecxz
scas
mov
pusha
pop
push
popf
xlat
sub
sbb
test
inc
cli
inc
lret
lock
pop
xchg
ljmp
add
inc
push
sbb
loope
or
xchg
imul
or
inc
icebp
cltd
push
xlat
fwait
test
xchg
cli
and
sbbl
mov
add
fidivrs
add
insb
out
cmp
sbb
je
dec
sbb
cmpsl
cli
xchg
jge
jb
xor
mov
sbb
int
xchg
mov
mov
sub
ljmp
and
push
dec
scas
push
fisttpll
je
mov
push
icebp
in
push
add
lcall
push
cltd
lcall
lret
js
stc
push
pusha
dec
mov
out
pop
push
cmpsl
mov
dec
mov
notrack
jmp
xor
aas
jae
dec
adcl
or
test
mov
movsl
sbb
dec
outsb
mov
jns
sub
mov
test
stos
lahf
cmpb
incl
inc
xchg
lock
addl
mov
jo
scas
in
pop
insb
push
out
jp
scas
mov
jle
or
lret
je
inc
mov
jno
push
das
and
stos
sbb
cmpsb
push
jmp
das
pusha
sar
sbb
cmp
mulb
cmc
xchg
xorb
lahf
or
or
iret
iret
cmovs
out
jns
mov
icebp
sahf
data16
fnstsw
mov
and
mov
push
leave
and
into
mov
test
add
sub
push
pop
lahf
or
xor
outsl
push
jp
es
hlt
arpl
outsl
movsb
ds
or
aam
fistpll
outsb
fistpll
sub
sub
pop
icebp
jno
xchg
xchg
push
je
mov
cmp
pushf
and
cmp
cmpsl
jno
inc
push
push
icebp
int3
cmpl
jnp
mov
fnstenv
pop
cmc
bound
rcll
mov
test
xchg
or
jbe
adc
popa
jg
pop
jmp
jae
data16
sbb
and
mov
mov
addb
mov
xchg
mov
inc
addr16
mov
arpl
xchg
inc
and
aaa
movsb
pushf
insb
mov
fldenv
lods
sub
into
xchg
mov
add
lret
insb
cs
repz
sahf
xchg
out
in
int3
pop
lock
adc
xchg
pop
mov
dec
loopne
in
int3
cld
test
mov
push
jae
negl
fidivrl
mov
stc
repz
in
lret
imul
mov
add
cmpxchg
popa
cmc
cs
loop
lret
stos
mov
pushf
popa
dec
add
jnp
addr16
sti
or
imull
in
mov
mov
iret
jo
dec
jno
push
lahf
xchg
dec
adc
jmp
mov
addr16
mov
xchg
loope
cmp
and
cmc
inc
cmc
ret
pop
js
add
cmp
dec
mov
pop
mov
je
jne
or
ret
inc
jns
fidivrs
sti
leave
ficoml
pushf
int3
pop
orb
daa
mov
mov
arpl
jnp
daa
dec
ljmp
dec
and
lds
hlt
pop
adc
test
ret
cltd
iret
icebp
std
in
mov
notl
addb
inc
inc
pop
adcb
fimuls
inc
fsub
lret
adc
jmp
sbb
xchg
lods
bound
adc
ja
imul
iret
jbe
lock
mov
pop
inc
and
into
sub
pop
mov
in
mov
shll
ss
ret
mov
and
push
xchg
test
icebp
popl
mov
jmp
or
scas
pop
sti
or
push
clc
mov
adc
fidivl
dec
stc
push
jmp
fwait
mov
add
pop
maskmovq
testl
sub
inc
popf
mov
cmp
pusha
out
inc
or
pusha
inc
lret
mov
sbb
rolb
subl
loopne
sub
ret
fldl
test
outsl
out
ljmp
xchg
add
push
mov
out
adc
sahf
add
pushf
aam
lods
mov
and
cmp
arpl
pop
mov
add
mov
dec
mov
sub
pop
outsl
xchg
mov
sub
jbe
cltd
test
add
popf
insb
cmp
mov
mov
or
fadd
push
decb
or
lret
or
cwtl
stc
adc
rorb
and
inc
pop
and
jne
xchg
out
je
mov
sti
ret
ret
jo
outsb
inc
loopne
in
adc
int
pop
dec
pop
out
inc
in
aad
stc
jmp
gs
sbb
xor
pop
pop
inc
mov
inc
xor
mov
popf
arpl
ret
adc
push
test
std
push
xlat
test
fs
loopne
pushf
out
adc
sti
aas
or
outsl
addr16
jmp
and
enter
mov
rorb
cwtl
test
scas
movsb
ficoms
shlb
add
popf
call
mov
ret
int
out
mov
cld
pop
inc
out
roll
adc
jb
sti
stos
push
popf
adc
test
clc
cld
mov
ja
cwtl
dec
jecxz
mov
shlb
push
sti
jg
and
scas
mov
fmuls
int
inc
fdiv
push
test
cmp
adc
sbb
lock
mov
or
mov
shrb
push
ja
push
pusha
icebp
lret
outsl
ret
sub
pop
test
mov
and
mov
cmpsb
pop
movsb
xlat
push
repz
jns
ss
jns
cld
fmul
pop
cmp
daa
xchg
xlat
inc
or
mov
movsl
repz
jb
xor
lea
sbb
sub
xor
adc
lock
test
push
lea
jp
cwtl
and
dec
jo
out
cmpsb
jne
add
nop
jbe
out
mulb
and
xlat
mov
push
js
mov
cs
enter
shll
scas
iret
jl
std
xor
sbbl
aad
imul
cmpsl
jg
andb
dec
mov
imul
es
push
pusha
addb
out
inc
or
adc
sbb
sbb
or
sub
jae
or
xlat
out
or
loopne
sbb
sbb
push
sbb
adc
inc
addb
mov
out
je
lods
cmp
xchg
lods
mov
sub
fcompl
aas
cwtl
mov
mov
xor
outsl
pop
jnp
add
mov
leave
bound
xchg
mov
cs
fwait
jp
repz
add
xchg
jb
xchg
cmp
mov
lret
imul
mov
cmp
rep
mov
fwait
fs
sahf
pop
mov
add
ds
je
cmp
cmpsb
mov
pop
mov
pop
mov
push
dec
cmp
cmpsl
lret
sarl
lock
jle
leave
adc
push
pop
gs
insw
dec
jns
repnz
lods
jecxz
or
dec
or
fdivr
stos
outsl
popf
cmp
andb
fimuls
and
and
es
repz
lret
imul
or
inc
lret
pushf
hlt
jne
jbe
push
icebp
or
sti
cwtl
icebp
sbb
pop
xchg
or
sahf
dec
pop
enter
imul
rcrl
or
daa
je
lods
das
push
xor
daa
fs
mov
or
mov
rorb
imul
mov
icebp
inc
lea
mov
rcll
cmp
arpl
nop
stos
push
push
insb
insb
jge
mov
int
outsl
xchg
add
xor
call
jl
cmp
push
test
push
out
arpl
or
mov
pop
dec
or
mov
push
xor
lea
icebp
sub
inc
jmp
loopne
lret
sbb
inc
pop
pop
mov
or
sbb
jb
xchg
cld
clc
cltd
jp
jo
jo
push
xchg
xchg
push
nop
ds
mov
dec
pop
fimuls
add
clc
fs
shrl
cmp
jb
andl
sti
xor
sub
jp
push
fstps
jle
into
pop
outsl
push
leave
cmp
hlt
data16
lcall
pop
test
add
sti
dec
xchg
pop
xor
insb
mov
mov
mov
push
pop
fisttpl
aam
xchg
xor
lcall
jne
aad
jmp
das
outsb
mov
icebp
dec
xchg
jp
dec
popa
jle
repnz
fnsave
pushf
popa
sbb
idiv
fst
pop
scas
cmc
lret
ss
imul
sahf
test
es
push
lea
popa
or
jnp
roll
in
xchg
lahf
call
aaa
gs
or
jp
fiaddl
iret
jbe
shl
enter
adc
mov
pop
push
xchg
mov
adc
sbb
sbb
xchg
es
ror
push
mov
pop
popf
or
mov
pop
sub
pusha
cmp
ret
mov
push
or
jp
pusha
insl
xor
pop
sub
cmp
fstps
in
sbb
rcrb
iret
insb
jl
fildl
push
mov
adc
and
push
andl
xchg
repnz
out
jge
arpl
mov
xor
mov
pop
adc
clc
or
adc
push
jp
mov
adc
test
sub
mov
adc
xor
pop
add
fists
imul
ljmp
sbb
ds
hlt
or
push
jge
out
movsb
cmp
push
and
test
pop
fs
je
jp
push
push
adcb
sbb
cmc
mov
test
loop
in
out
pop
push
and
add
sbb
stos
nop
jmp
jecxz
rorb
sbb
cmpsl
enter
scas
jne
lods
sbb
gs
push
add
scas
mov
sub
inc
aad
roll
insl
pop
jp
cmp
adc
js
push
and
add
mov
pop
int3
shrl
jns
cmp
sbb
add
push
ja
jecxz
add
inc
not
jb
fidivrl
inc
xor
idivl
into
icebp
pop
shll
sbb
ja
inc
sti
call
cmp
shl
jbe
lcall
adc
dec
jbe
ret
lds
into
sub
jmp
insb
pop
call
ret
jge
hlt
xor
lahf
loopne
ret
insl
outsb
incb
push
cmp
push
push
stos
pop
pop
popa
dec
push
scas
imul
xlat
cmp
fcmovnb
jnp
add
lahf
rcr
add
call
rcrl
mov
sbb
mov
imul
call
or
sbb
test
dec
jne
ret
xor
lret
jp
add
outsb
bound
into
jbe
lcall
jbe
les
push
xor
inc
out
adc
dec
stos
scas
mov
jle
int
xchg
cmpsb
das
add
inc
clc
clc
jne
popl
inc
mov
fnstenv
sbb
into
pop
hlt
sti
xor
mov
jp
into
sbb
fld
ret
not
xchg
insl
or
adc
xlat
jg
push
adc
push
test
out
push
sbb
in
stc
xor
sbb
ret
dec
and
sub
mov
mov
lret
sub
imul
addb
std
sbb
xchg
push
nop
fisttpll
popa
xor
out
pop
mov
mov
stc
jo
arpl
rcll
mov
pop
jg
sti
pop
xchg
mov
ljmp
in
scas
repz
jns
insb
jae
dec
mov
xlat
or
dec
adc
enter
cmp
das
enter
or
out
and
cltd
cltd
jecxz
inc
fisttpl
fildll
xchg
test
xchg
add
je
cmp
scas
xchg
push
jns
sbb
adc
loope
imul
push
or
pushf
les
mov
mov
or
fidivrs
or
out
cltd
jno
sbb
mov
pop
pop
pop
lods
clc
cmpsl
addr16
fcompl
std
clc
push
outsb
gs
popf
arpl
fidivl
jns
fnsave
mov
je
aad
mov
pop
cmp
or
push
or
ret
pop
clc
mov
pop
lret
movsl
jl
xchg
ds
lea
adc
mov
ds
sbb
xor
push
iret
mov
inc
pop
xor
data16
mov
ffree
push
xchg
xchg
ljmp
jge
cmpsb
pop
mov
out
cltd
inc
mov
aam
in
xchg
xor
xor
add
pop
es
nop
add
rcr
orl
jnp
daa
or
sbb
fdivrs
sub
in
cs
das
cmp
int
inc
sub
mov
sub
insb
decb
sub
and
out
inc
push
cmpsb
pop
jno
xor
into
bound
mov
jecxz
jmp
push
adc
repz
idivb
mov
dec
mov
jne
xor
cmp
cmp
pushf
xor
shll
mov
sbb
add
shll
xchg
xorb
adc
push
adc
subl
cli
rorb
fsub
dec
mov
rorb
mov
fwait
mov
ficoms
fcmovbe
iret
out
mov
dec
in
testl
mov
sahf
rcrl
out
add
pop
mov
push
sub
das
adc
aam
add
pop
faddl
or
insb
into
jl
xor
xor
adc
mov
je
stc
push
pop
loopne
lret
shlb
out
or
pop
and
mov
stc
mov
test
rcrl
jl
lcall
inc
out
adc
testb
andb
cmpsl
fmul
test
fistl
clc
xchg
xchg
adc
sahf
addr16
loop
xor
sbb
jle
cmp
add
fwait
push
inc
cld
aaa
pop
push
jecxz
fisttpll
mov
int
jge
cmpsb
mov
jnp
push
out
rorb
mov
xchg
xchg
pop
or
sahf
decb
lea
pop
pop
sbb
arpl
add
inc
dec
xchg
outsb
sbb
cmp
lods
and
out
xchg
or
mov
fwait
addr16
mov
test
and
pop
add
mov
scas
cmp
sub
xchg
inc
mov
shlb
add
in
mov
jbe
jecxz
xchg
pop
sbb
sbb
je
inc
shlb
and
iret
cmp
sub
push
dec
mov
imull
inc
fisubrs
pusha
inc
inc
cli
fmull
dec
mov
xor
mov
call
rclb
insl
out
clc
out
stos
lcall
mov
sar
sbb
fidivrl
sub
adc
adc
out
xor
in
mov
loopne
incl
cmp
call
stos
jno
enter
cmp
fwait
movsb
stos
adc
mov
add
sbb
mov
imul
sbb
push
ret
out
ret
push
out
mov
adc
test
push
inc
fs
adc
sti
dec
cmp
jp
imul
jbe
into
xchg
mov
andl
xchg
sub
ljmp
hlt
cmp
repnz
loope
adc
enter
shrl
in
jns
fistl
mov
mov
pushf
mov
je
testl
leave
mov
or
pop
or
daa
loope
mov
add
jecxz
cld
add
dec
int3
xchg
fcmove
xchg
jnp
pusha
and
repz
pop
adc
adc
xchg
dec
cmpsb
subl
sbb
mov
loop
sbb
outsl
je
push
es
and
xorb
jbe
sbb
adc
inc
aaa
stc
into
xchg
sub
lods
xor
fs
cmc
in
lcall
into
pop
cltd
mov
cmp
mov
dec
mov
pop
mov
push
arpl
cmpsb
push
out
stos
rclb
dec
rcr
dec
imull
subb
cmpsl
dec
lahf
out
or
ret
pop
cmp
addr16
mov
fisubs
popa
stos
and
mov
and
xor
popf
jmp
mov
out
test
mov
out
shlb
ret
pop
data16
mov
push
mov
dec
jge
push
test
fisubrl
idivb
std
sub
lds
xchg
repnz
cli
cld
pop
movsb
leave
repnz
lock
scas
inc
mov
out
lret
ret
adc
fiaddl
jne
aaa
les
rorl
xchg
pushf
xchg
sub
lock
sbb
pop
shll
pusha
jp
cmp
ret
pop
fidivrs
jae
sub
das
jecxz
stc
xor
jo
mov
inc
push
pop
and
xor
mov
push
xlat
dec
nop
es
sbb
cmp
xlat
jl
cmp
aam
sbb
adc
in
jb
addl
mov
push
mov
scas
dec
mov
inc
add
dec
adc
dec
fdivrs
push
sti
xchg
adc
jbe
lods
les
and
leave
sahf
in
lds
dec
gs
and
arpl
inc
hlt
jne
mov
lcall
xor
cmp
sbb
sub
push
movsl
aas
push
jae
cmp
and
sbb
cmp
fnstcw
out
shl
fwait
dec
xor
mov
int3
pusha
pop
arpl
or
pop
ljmp
daa
out
add
jl
enter
lea
pusha
in
js
mov
pop
cmc
out
lret
or
adc
lds
xor
push
mov
es
shll
jae
ljmp
xor
cmp
jb
sub
push
pop
inc
cmpsb
call
xchg
inc
mov
mov
aas
push
loop
mov
or
les
mov
cltd
adc
mov
jmp
repz
int
ss
es
sub
mov
jmp
sbb
test
cmc
inc
inc
dec
sbb
xchg
lahf
xchg
in
jne
xchg
outsb
dec
add
dec
sbb
hlt
inc
jno
push
ret
je
push
jbe
xchg
xchg
enter
mov
dec
in
les
mov
push
dec
pusha
cmp
enter
pop
inc
jns
test
popf
loope
gs
mov
stc
loop
sbb
push
sub
loopne
test
dec
push
dec
inc
adc
pop
mov
mov
call
jno
scas
sub
dec
lcall
mov
fdivrl
gs
mov
cwtl
negb
in
mov
subl
jns
jb
sbb
loop
mov
sbb
cmp
aam
xchg
sbb
sub
scas
std
mov
mov
cmpsb
enter
mov
stc
inc
xchg
push
scas
mov
mov
lahf
add
pop
lret
test
pop
aam
jl
in
add
xor
roll
push
bound
ss
mov
dec
adc
movsb
and
das
das
int
imul
sbb
mov
sbb
shlb
pop
sbbl
add
std
call
sbbl
adc
in
add
push
xchg
cmp
stos
xor
repz
sub
dec
cmpsl
inc
push
mov
fwait
pop
cmp
into
fwait
lods
rcr
ud1
push
mov
pop
xchg
sub
rclb
addb
push
xchg
sbb
jl
sub
xchg
movsl
push
aas
ljmp
int3
or
adc
fwait
xor
cmpsl
sub
cmc
sahf
mov
inc
insb
js
shl
out
test
mov
rcl
roll
adc
ss
push
cmp
testl
sarb
movsl
or
out
test
add
mov
mov
adc
test
cmpsl
lods
mov
movsl
pop
mov
pop
call
out
jecxz
leave
data16
dec
push
and
arpl
or
and
roll
ret
scas
js
inc
cmpsl
ljmp
stc
cmc
mov
or
ja
popa
mov
inc
jb
xchg
mov
loopne
into
int3
mov
js
adc
cmp
es
ret
fbld
jnp
cmc
inc
xchg
inc
sbb
xchg
mov
aas
scas
scas
xor
repz
dec
daa
adc
mov
ret
jl
jge
xor
fsubrs
data16
xor
aad
lea
pop
adc
or
sub
sbb
fcmovnbe
popf
gs
test
cmpsl
test
push
and
cmp
adc
jl
aas
jae
adc
xchg
lods
rorl
cmp
pop
lods
dec
dec
test
xchg
ljmp
inc
mov
pop
negb
in
add
cmpsl
inc
into
jge
testl
test
addb
lret
pop
xchg
add
loop
pop
or
test
push
mov
mov
pop
push
xor
gs
cmpl
data16
mov
rcrl
aas
xlat
dec
jle
adc
ret
fisttpl
inc
xchg
test
add
les
or
test
push
les
sub
and
mov
ljmp
lds
insb
fsubrl
mov
shr
ret
jecxz
cmp
ret
mov
lds
mov
sbb
out
in
cmpl
enter
push
push
scas
mov
outsl
lds
test
mov
jns
sub
jae
lock
xor
ret
ljmp
lock
ror
push
cmpsb
loopne
xor
push
dec
arpl
mov
pushf
add
sbb
mov
lret
lock
jle
rcrb
jle
sbb
pushf
in
test
je
mov
mov
jo
sahf
add
testb
xor
lock
sub
aad
dec
lret
push
mov
test
jle
mov
inc
pushl
cli
dec
mov
pop
push
cmp
dec
mov
or
out
pop
cld
mov
fisubs
arpl
xchg
or
pop
cs
sbb
sub
xor
adc
pop
and
or
pop
sub
dec
int
out
movsl
ret
push
stc
pop
cld
push
pop
imull
sbbl
pop
mov
jp
xchg
mov
fistpll
xchg
dec
inc
test
sub
test
sbb
das
push
fidivrl
negl
sub
lret
add
jae
lods
and
in
aaa
push
ss
ljmp
ljmp
push
ret
push
mov
dec
pop
jno
add
mov
ljmp
jno
sub
dec
or
inc
nop
adc
pop
cmpsb
xchg
sub
mov
movsl
fisttpll
push
jno
cmpsl
popf
aas
push
out
jne
or
cmp
jmp
imul
xchg
jns
test
and
pop
fs
mov
jmp
sub
jns
popa
inc
dec
scas
lds
aaa
in
fs
test
rolb
push
mov
jmp
xchg
inc
xchg
incl
sahf
or
push
mov
xor
cmc
cmp
and
cmpsb
mov
mov
out
sub
cwtl
mov
cmp
call
cmpsb
adc
sub
cs
mov
aam
idivb
idiv
add
jbe
xchg
pop
arpl
fistpl
fadds
adc
jb
inc
jnp
repz
aaa
cltd
pop
dec
sbb
movsb
icebp
dec
push
or
inc
stc
dec
pusha
std
pop
dec
jp
pop
lods
mov
js
mov
imul
lea
pop
in
pop
dec
lods
push
lahf
xor
cmc
mov
dec
and
or
and
push
mov
sub
fidivs
fistps
mov
dec
jecxz
sbb
xor
call
lods
outsb
iret
xor
inc
inc
or
mov
loop
pushf
pop
scas
imul
xchg
das
and
push
lcall
enter
rolb
mov
mov
cmp
pop
test
mov
mov
push
mov
jae
xchg
fdivr
outsb
push
in
dec
push
insb
lret
seto
sbb
mov
scas
leave
mov
pop
out
popa
imul
mov
fcomps
fisttpl
cltd
xchg
addr16
xchg
ja
pop
mov
inc
lret
inc
loop
imul
fbstp
cmp
push
mov
loop
cmc
cmp
ss
filds
insl
mov
ret
in
punpckhbw
dec
dec
fwait
inc
cmp
es
and
in
inc
mov
in
mov
cmp
and
int3
mov
mov
dec
push
cwtl
inc
addb
and
mov
jnp
mov
and
les
mov
or
inc
jnp,pn
sub
sbb
outsl
jl
fldl
sub
outsb
cmp
scas
loopne
mov
out
mov
pop
cwtl
mov
dec
mov
les
push
jmp
out
lock
mov
push
jne
out
mov
cmpsb
mov
lods
mov
cmp
mov
jle
inc
cli
sbb
push
push
sbb
out
push
sbb
sub
in
cs
imull
or
cmp
nop
sbb
popf
sbb
jb
stos
cli
sbb
aad
hlt
mov
fucomi
in
sahf
scas
push
push
adc
nop
std
bound
mov
push
out
xchg
adc
adc
mov
scas
sub
ret
ret
push
repz
cli
mov
test
rorl
aam
push
rorl
mov
push
leave
jbe
imul
cli
out
jecxz
pop
cmpl
pop
or
pop
dec
push
pushf
xchg
dec
jns
xchg
loope,pt
nop
lcall
xchg
clc
jle
ret
cmp
pop
push
and
clc
and
sarl
loop
loope
or
cmp
cmp
js
fwait
mov
jns
jo
fs
lea
mov
push
jecxz
jge
es
imul
loopne
cmp
mov
decb
sbb
enter
push
ret
mov
inc
ja
jae
mov
jge
cmp
rcrl
fdiv
cwtl
adc
jecxz
xor
ret
pop
jo
lcall
cmp
mov
xlat
fistpll
cmp
mov
out
inc
jl
arpl
push
arpl
outsb
xor
pop
push
rolb
and
jmp
lds
dec
inc
jo
outsb
in
sti
cmp
inc
test
cli
xor
imul
fildll
lds
lock
mov
daa
xchg
in
insl
xchg
dec
bound
into
ds
pop
into
sub
xlat
into
addr16
int
pusha
xchg
in
movsl
jl
test
ljmp
in
adc
call
dec
addr16
test
push
adc
mov
push
nop
or
xchg
fldt
clc
out
scas
inc
notl
xchg
icebp
jns
sub
jmp
int
adc
cltd
outsl
jb
sarl
dec
mov
cmp
decl
je
sbb
out
out
push
test
adc
sub
xchg
sub
xor
mov
fmulp
pop
insb
pop
or
lds
pop
cs
out
lcall
adc
xchg
imul
push
pop
lret
sub
jne
add
repnz
out
lret
in
sub
rcr
mov
out
test
pop
mov
loop
cmpsb
jb
cli
push
inc
movsl
lods
xchg
push
dec
adc
and
pop
sbb
pop
xor
jae
ja
fucomi
scas
dec
pushf
mov
jae
ja
cmp
xchg
test
arpl
and
rcll
sbb
leave
hlt
adc
xor
jo
aas
pop
aad
sub
cmp
add
popa
or
lcall
push
add
jo
jmp
mov
mov
rorl
mov
test
shl
pop
or
jl
aam
movsl
insb
sti
sub
cmp
fstps
rolb
and
dec
repz
jp
xchg
mulb
dec
js
sbb
add
je
or
dec
aad
arpl
sub
or
loop
sub
mov
pop
xchg
xchg
xchg
out
fwait
jb
pop
lret
sub
sti
mov
insb
xor
and
fistps
sbb
pop
adc
push
pop
jo
cmpsl
mov
jo
add
pop
nop
mov
mov
ficomps
sbb
sub
int3
loope
or
rclb
in
cmp
js
lods
push
sub
leave
not
cmp
sub
or
jne
jne
jo
dec
push
xor
cmpsl
sbb
pop
leave
sub
js
test
mov
iret
andb
sbb
sti
cwtl
shrb
pusha
mov
xlat
jb
divl
loope
jb
out
bound
out
rorl
lods
mov
test
fmull
inc
je
mov
sub
sub
int
push
jecxz
lods
ret
xlat
jbe
adcb
sti
xor
hlt
imul
jecxz
adc
mov
pop
into
repz
cwtl
mov
xchg
mov
adc
pop
jbe
loope
sub
pusha
add
cld
add
int3
cmp
enter
test
lock
or
cmpsb
push
pop
mov
rol
dec
or
fs
pop
les
les
scas
clc
ja
fldenv
push
xlat
test
lgs
cmpsb
add
aam
ds
sub
and
xchg
push
mov
in
insb
insb
scas
ret
insb
test
mov
rcrl
iret
lahf
jl
int
dec
lods
ljmp
enter
das
push
mov
jge
lret
inc
pusha
ja
mov
arpl
pop
mov
inc
stos
mov
gs
das
rclb
xor
test
aaa
mov
frstor
xor
jo
dec
je
adc
mov
xchg
or
sbb
and
xchg
repz
cmp
jo
fcomps
add
lret
mov
insl
sar
popf
and
test
fstps
cmpsb
fxtract
push
xor
sub
jecxz
or
add
loop
adc
mov
call
adc
das
fstps
add
xchg
inc
add
sbb
orl
lret
mov
and
jle
lds
sub
pop
inc
ss
jne
ret
mov
dec
xor
add
xchg
push
out
das
dec
xor
pop
adc
cltd
lock
data16
and
add
movl
outsl
and
lods
cmp
dec
push
jmp
scas
inc
dec
sub
lock
repz
mov
xor
into
cmp
fdivrp
sub
xchg
adc
cltd
repnz
in
add
rcll
inc
pop
stos
fisubl
xlat
add
dec
int
push
sbb
fsubrl
sahf
xchg
arpl
mov
dec
leave
jbe
dec
mov
or
nop
jecxz
inc
inc
pop
xchg
testl
cltd
mov
ret
sbb
outsb
adc
ret
cli
addr16
leave
cmp
push
std
xor
xor
mov
push
stos
dec
push
out
out
sahf
mov
jo
jecxz
or
fwait
repz
adc
ds
sub
mov
pop
gs
bound
cmp
ljmp
orb
xchg
std
mov
mov
push
stos
aaa
imul
idivb
pop
cmp
out
data16
dec
pop
outsl
call
mov
mov
out
out
xchg
inc
pop
mov
stos
mov
movsb
add
outsl
xchg
mov
pop
cli
or
mov
xor
ds
gs
mov
test
add
add
sub
dec
ror
sub
mov
push
aad
cmp
sbb
add
test
cmp
sarl
cmp
inc
inc
push
outsb
fldt
xchg
in
popf
lret
jle
push
cmpsl
enter
xor
xor
insb
dec
adc
insl
mov
add
popf
dec
push
mov
inc
and
loopne
dec
dec
add
mov
int
cltd
cwtl
add
mov
xor
xchg
pop
lcall
ret
jbe
xchg
mov
pop
lods
in
dec
adc
cmpsb
jo
cwtl
xor
push
sti
sbbb
pop
inc
adc
push
push
stc
mov
aam
xlat
mov
lds
sbb
and
test
dec
shll
pop
push
mov
cmp
sbb
dec
xlat
sti
xor
outsb
idivb
or
jno
lods
movsb
xor
push
ret
call
punpcklbw
jne
inc
cld
sti
mov
int
data16
pop
cmp
lock
clc
cmpsb
sub
fmuls
lret
nop
sahf
sarb
ljmp
inc
pop
andb
in
popa
ffreep
in
sbb
out
sub
faddl
add
sub
xchg
test
ds
and
lcall
or
jmp
sbb
addr16
sbb
and
daa
jmp
and
pop
fsubl
lds
fidivrs
jno
mov
jl
lahf
cmpsl
ficoml
xor
jae
and
mov
dec
ja
add
aaa
or
push
sti
xchg
aad
in
ds
or
jae
push
push
pop
sbb
and
lcall
cmpsb
mov
arpl
jge
xchg
pop
adc
ret
ror
or
push
idiv
dec
jnp
addl
pop
adcl
arpl
fnsave
nop
jecxz
add
adcb
dec
imull
dec
sbb
adc
test
lret
call
stc
fcmovnb
dec
mov
xchg
roll
lret
mov
ljmp
insb
neg
imul
ds
dec
inc
mov
fadds
repz
aam
cld
outsb
cmp
popa
push
lock
pop
int3
loop
aam
sbb
mov
lret
push
mov
sarl
push
data16
and
cmp
pushf
adc
dec
rcll
mov
or
push
sbb
stos
shlb
mov
add
js
pop
mov
cmp
in
or
cmp
imul
stos
aaa
in
fiadds
or
ljmp
xrelease
xchg
imul
mov
adc
test
mov
add
and
and
mov
mov
inc
add
jae
daa
in
cwtl
sbb
popf
cli
stos
mov
incb
inc
daa
lret
mov
es
leave
dec
mov
inc
cmp
les
or
mov
cs
jle
mov
sbb
pop
and
mov
cmpsl
aas
out
leave
jge
push
and
nop
mov
jp
xchg
mov
insb
mov
mov
adc
sahf
mov
mov
pop
daa
mov
mov
stos
push
lods
dec
pop
hlt
fwait
mov
int
mov
cmpsb
dec
and
insb
outsl
cmp
testl
cmpsb
jbe
cmp
jge
into
push
outsb
xchg
into
call
sub
push
dec
adc
jle
aaa
mov
push
adc
imul
sub
cli
or
sub
mov
testl
xchg
rcrl
or
push
push
cmc
test
or
jmp
ds
pop
aam
icebp
xchg
test
sub
pop
cmp
js
fnstcw
xor
lahf
jmp
rcl
pop
test
add
std
jle
fidivl
inc
mov
mov
push
stos
xchg
sahf
fiaddl
fisttps
mov
leave
stos
loope
mov
jb
cs
insb
and
xchg
outsl
pop
shl
sti
sbb
xchg
jle
test
fcomps
pop
mov
fs
fmuls
inc
and
call
outsl
out
push
cli
nop
test
mov
or
in
jae
or
sub
adc
jl
xor
mov
imul
adc
fcmovnbe
repz
dec
rcl
mov
daa
pandn
mov
in
or
outsb
cld
jl
pop
movl
les
jge
sbbl
jg
cld
cmpsb
and
lret
or
into
pop
add
fstl
jecxz
cwtl
xchg
rcr
mov
iret
xchg
div
pop
mov
loop
mov
push
addr16
sahf
imul
mov
fyl2xp1
jle
repnz
sbb
jg
bnd
xor
test
and
mov
int3
xor
dec
mov
xor
xchg
stc
dec
push
cmpsl
in
hlt
pop
cld
pushf
out
popf
push
sbb
ss
pop
mulb
pusha
inc
mov
stos
pusha
cmp
aam
adc
mov
add
mov
mov
gs
outsb
jae
lds
sbb
adc
cmp
add
js
push
jp
jb
ret
jno
adc
push
pop
rorl
loopw,pt
push
dec
ret
rcrb
jae
fimull
pop
sbb
fdiv
jmp
fs
sub
imul
cmpsl
fbstp
ret
bound
xchg
xor
mov
push
movsb
xor
int3
sbb
xchg
dec
icebp
popa
out
xlat
or
jb
into
int
mov
mov
ja
jge
sbb
mov
add
adc
stos
daa
push
sbb
mov
imul
inc
or
and
ret
jecxz
adc
icebp
jbe
or
pop
jns
push
mov
add
sbb
or
pop
jb
scas
es
jle
insl
inc
mov
xchg
cltd
popf
mov
rorb
popf
cld
sub
fmull
xchg
add
sbb
in
cli
mov
test
or
repnz
inc
adc
and
mov
mov
sub
mov
jbe
leave
add
pusha
int3
mov
test
icebp
cmp
push
call
shlb
in
aas
sub
mov
fldl
or
hlt
xchg
movsl
lcall
jp
out
cld
xchg
arpl
imul
mov
outsl
jno
adc
push
in
pop
or
sbb
aam
mov
mov
popa
pusha
pop
cmp
daa
push
fmul
ret
scas
pop
dec
rorl
mov
movsl
in
jo
fdiv
inc
repnz
lds
mov
push
xchg
mov
lds
mov
bound
or
mov
in
mov
sub
imul
xchg
pop
mov
jno
push
and
pmaxub
inc
fdivr
addl
cli
js
aaa
xor
ficompl
push
jbe
inc
inc
sbb
popf
lcall
lcall
sarb
pop
adc
sbb
fstps
jne
add
mov
pop
in
adc
in
lcall
ss
pop
sbb
xchg
call
inc
lret
jecxz
pop
xchg
negl
jmp
or
enter
push
add
es
mov
lea
orb
xor
xchg
add
jecxz
scas
pop
jns
push
push
push
jg
leave
mov
xor
out
lcall
aas
fld
sbb
adc
out
or
mov
rolb
or
mov
ljmp
mov
and
jle
pop
mov
dec
add
push
mov
sub
cmp
movsb
pop
shrl
lods
adc
jp
jae
popa
repz
into
data16
int3
cli
push
xchg
mov
push
ret
adc
sbb
adc
out
das
add
fs
push
inc
das
je
mov
mov
dec
fcomps
and
aas
adc
lahf
aad
or
adc
das
pusha
scas
imul
cwtl
dec
add
fidivrs
dec
dec
out
or
push
dec
imul
fcomp
lret
les
cmp
mov
mov
cmp
out
mov
lods
push
sbb
pop
mov
xchg
xlat
mov
enter
pop
mov
mov
nop
and
movsl
inc
adc
mov
fnstcw
dec
jle
lods
rcr
leave
hlt
stos
ret
pusha
jge
push
sub
jl
dec
outsl
xchg
fimull
jecxz
or
pop
arpl
cmp
add
add
sti
push
pop
fwait
lea
mov
nopl
mov
cmp
inc
fnstenv
mov
in
test
in
cmp
mov
add
add
or
xchg
cmpsl
mov
sbb
popf
xor
mov
pushf
pop
sbb
pop
cmp
cmpsb
imull
mov
loope
mov
popf
xchg
outsb
add
mov
stc
dec
jbe
push
jne
stos
xchg
dec
jl
inc
clc
push
psubsw
movsl
sbb
add
mov
ffree
or
adc
mov
and
jge
push
pop
jbe
std
or
fimull
pop
ja
mov
in
pop
ja
add
or
mov
mov
sub
lcall
arpl
jmp
pop
adc
in
push
jge
das
cmp
insb
pop
frstor
les
jne
test
popf
pop
movsb
popf
pop
into
int3
fistps
ds
out
es
push
aaa
lret
test
cltd
scas
aas
adc
and
add
inc
lcall
cmp
push
cli
pop
jbe
rcrl
inc
je
shrb
das
adc
outsl
cmp
xlat
scas
mov
imull
mov
inc
mov
movsb
and
loope
rcll
mov
les
addb
lahf
repz
add
pop
xchg
jecxz
push
sqrtps
jp
out
mov
scas
push
sub
aas
ljmp
orb
cmp
mov
daa
cmp
mov
ret
rcrl
je
inc
idivb
lret
aam
test
add
dec
movb
mov
lret
movsl
fwait
lret
sub
ret
mov
mov
mov
idivl
faddl
xchg
xchg
aad
into
lods
jae
imul
cmp
and
push
aam
push
pop
lods
inc
movsb
outsb
std
pop
dec
mov
lcall
adc
sub
xor
inc
mov
push
xchg
iret
or
inc
ds
inc
jnp
and
adc
pusha
out
adc
es
arpl
movl
sub
sub
xchg
loop
add
iret
mov
cmpsb
dec
subl
ret
dec
inc
enter
fcmovnb
mov
sub
daa
lcall
stos
or
outsl
add
out
insl
push
data16
cld
mov
sbb
testb
divl
sbb
outsb
popa
popa
and
sti
sub
les
xchg
and
test
in
ljmp
gs
sbb
xchg
aas
push
div
fs
xchg
mov
dec
inc
mov
cmp
sbb
pop
les
iret
roll
jg
and
addb
sbb
lods
clc
fsub
mov
mov
fdiv
pop
mov
mov
jl
hlt
test
or
xor
outsl
xor
sbb
jp
mov
xchg
movsl
sub
and
addr16
scas
mov
push
fbld
testl
loop
les
push
in
fsub
add
test
dec
repnz
insb
add
fwait
jnp
stc
jp
out
jnp
push
or
mov
testb
scas
cltd
and
inc
inc
fsubl
lret
stos
not
dec
js
inc
dec
and
in
bound
push
xchg
imul
cltd
pop
stc
daa
inc
and
daa
test
add
mov
in
cld
dec
cltd
xchg
dec
movsb
loope
stos
mov
push
add
fwait
ret
clc
add
loop
out
fstpt
cmpsl
mov
sti
pop
dec
outsb
xchg
aad
dec
decb
sub
div
je
dec
mov
in
add
pop
push
arpl
jl
sub
cltd
sbb
idivl
scas
cmp
pop
mov
xchg
daa
jmp
jnp
fs
mov
lds
pop
lds
jle
in
insl
mov
sti
fnstenv
mov
dec
mov
push
cli
xor
into
mov
addr16
js
add
rcl
xor
adc
scas
icebp
push
mov
cltd
sahf
push
cmp
ljmp
xchg
cld
dec
fstpl
int
jle
cmpsb
inc
mov
int3
jmp
pop
xor
outsb
lods
ss
ret
cmp
out
call
xor
sbb
ror
and
hlt
gs
xor
into
adc
loopne
sbb
sub
ljmp
popa
out
enter
rorb
in
dec
mov
xchg
hlt
call
jecxz
movsb
mov
testl
fldl
loop
repz
stos
ja
pop
shr
sbb
movsl
fldl
jne
int
loopne
ds
loop
dec
or
fucomip
mov
neg
popf
add
push
adc
shlb
dec
sahf
leave
bound
sub
test
xor
adc
sub
pusha
mov
shrl
inc
fcmovne
repz
sub
jno
cs
js
sahf
jae
cmp
ljmp
add
cmp
and
dec
sar
push
es
jle
xor
xor
inc
adc
jb
out
lock
sub
jg
adc
jmp
mov
ret
outsb
jge
divb
aas
xchg
push
xor
pop
loop
mov
sti
shrl
scas
jo
outsl
loop
addr16
mov
enter
jecxz
push
imul
adc
mov
ret
icebp
sub
outsl
push
andl
insl
sbb
cmp
mov
out
xchg
mov
lods
testb
xorb
inc
cltd
push
and
repnz
js
std
add
cli
decb
xchg
jecxz
adc
test
cli
ficomps
or
dec
push
idiv
xchg
aas
fisubl
outsb
mov
fmull
jecxz
sub
ljmp
outsl
inc
add
sub
mov
dec
rorl
in
jb
sbb
js
jb
inc
adc
and
decb
sbb
test
add
outsb
or
cmp
jmp
push
cmpsb
jae
rcl
inc
sbb
cli
sahf
add
lcall
movsb
ficomps
mov
xchg
mov
int3
push
add
aad
jmp
out
xchg
cmp
inc
push
in
pop
loopne
sbb
dec
and
lods
addr16
adc
into
mov
scas
arpl
movsl
das
clc
pop
enter
mov
jmp
and
jae
pop
hlt
addl
das
jo
aaa
inc
xlat
push
jo
push
or
jmp
decl
aas
inc
xchg
insb
jecxz,pn
jl
mov
fsubp
push
xor
adcl
dec
cwtl
jo
dec
ljmp
mov
insl
arpl
in
test
fimull
push
adc
addr16
and
inc
xchg
rorl
shll
das
sbb
stc
jmp
adcb
popa
loop
or
pop
adc
sbbb
mov
jo
cs
add
repz
mov
fcomi
repnz
cmc
mull
movsb
bound
leave
sub
inc
jo
lods
popa
int3
fsubr
iret
fcompl
lds
and
inc
test
cltd
inc
jecxz
adc
iret
sub
sub
push
mov
pop
mov
push
xlat
add
mov
jge
dec
inc
push
jl
adc
jge
pop
movsb
int3
faddl
popf
lock
push
pusha
mov
cmpsl
imul
sahf
data16
stc
scas
imul
sub
stos
int3
movsl
mov
aad
push
xor
scas
loop
mov
aaa
inc
xchg
fs
popa
sti
cwtl
add
adc
lret
negb
jno
mov
add
and
pop
bound
mov
xchg
stc
inc
in
jnp
stos
or
push
pusha
mov
push
push
pop
push
movsl
or
sbb
gs
out
pop
cli
imul
or
call
sub
fwait
and
xor
mov
mov
xor
xor
in
adc
pop
out
das
call
add
adc
clc
enter
out
mov
in
dec
inc
pop
mov
in
push
lret
jecxz
ret
enter
out
bnd
add
mov
xchg
push
cltd
rcrb
addb
jb
pusha
shl
mov
dec
mov
clc
xchg
std
mov
mov
fldt
xchg
jnp
dec
test
mov
jnp
call
push
inc
lret
aad
sub
lds
adc
fs
push
lcall
ja
aas
xchg
stos
call
arpl
push
loopne
push
jae
testb
scas
adc
sbb
sbb
inc
jbe
fsubrs
jno
pushf
in
insb
in
fwait
pop
in
and
push
jmp
push
fsts
add
mov
xor
ja
pushf
dec
int3
sbb
cmpsb
out
inc
push
frstor
scas
pop
ret
ljmp
stos
dec
fmuls
and
xor
pusha
lds
insl
adc
xchg
int
or
les
jne
mov
shl
out
out
aam
pop
and
dec
pusha
aaa
jecxz
jno
scas
cwtl
and
in
mov
xchg
sbb
push
adcl
mov
pop
int3
lock
mov
call
cmp
add
in
sbb
in
inc
mov
xor
mov
out
fisubs
jp
mov
mov
mov
cmpsb
mov
jmp
mov
enter
ss
and
insb
push
and
popf
and
xchg
movsl
loop
cwtl
loope
jb
sbb
bndldx
mov
int3
imul
xchg
mov
or
out
popa
int
lret
psubusb
movsl
out
mov
dec
push
xchg
fidivrl
lods
xlat
sbb
dec
fidivl
or
out
mov
int
push
lock
movsb
out
scas
xchg
and
jecxz
lret
mov
cwtl
adc
fwait
pop
and
mov
notb
mov
lahf
icebp
cmp
lahf
gs
popa
int3
jb
push
cmpsl
inc
repnz
mov
mov
dec
clc
test
push
sbb
rolb
mov
sbb
or
mov
and
sahf
mov
push
sahf
clc
shl
mov
mov
sbb
mov
push
mov
push
xchg
aas
lock
xor
mov
mov
fcoml
ds
mov
ret
jmp
mov
divb
test
mov
sbb
mov
cmpsb
mov
fcoms
pop
gs
xorl
out
mov
andb
fidivrs
stc
adc
leave
cmp
scas
movsb
pop
add
pop
lods
push
imul
or
mov
pop
jl
and
cli
xor
ds
lret
add
push
ret
insl
pop
lret
int3
filds
lds
popa
dec
out
sub
in
out
data16
xor
mov
and
xchg
inc
xor
and
outsl
sbb
pop
jle
pop
nop
sbbb
inc
or
push
sbb
cmpsl
cmpsl
lret
outsb
jnp
loope
add
mov
test
into
or
dec
pop
xor
cmpsl
lds
cs
push
xorb
inc
js
jne
test
ja
jl
dec
adc
dec
adc
add
les
les
cld
mov
nop
sbb
pop
sub
pop
pop
stos
cmpsl
jmp
rorb
pop
mov
sbb
pop
int
movsb
fs
push
push
push
jbe
addr16
mov
inc
sub
movsb
dec
pop
push
jmp
sbb
jp
push
fcomps
mov
dec
fstl
jg
lcall
and
cmpsb
leave
scas
sbb
xor
ljmp
lret
loope
sbb
icebp
cs
test
xchg
and
jno
jbe
aas
stos
add
hlt
shrw
xchg
mov
jp
mov
xchg
cmp
fcomi
movsb
loope
cmp
lock
adc
loop
cmp
cmp
sbb
scas
mov
fwait
sub
push
add
nop
sub
mov
mov
daa
test
or
mov
pop
orl
dec
and
lret
inc
pop
mov
sbb
xlat
imul
xchg
adc
push
xchg
sub
ja
mov
inc
or
loopne
loop
sbb
pop
cmpsb
push
test
add
cmpsb
inc
popa
adc
fwait
arpl
sbb
call
xchg
movsb
add
inc
lods
xchg
sbb
fs
jb
push
loope
test
pop
cmp
shrb
or
pop
jl
jnp
mov
repz
insl
push
mov
sbb
cmp
xlat
sbb
lret
mov
lcall
push
lds
arpl
xor
mov
push
pop
in
or
icebp
in
test
cmp
jne
push
imulb
std
adc
mov
notl
jae
jl
imull
and
sub
mov
cmp
ja
push
cmp
sbb
and
nop
xchg
cmc
and
mov
adc
mov
testb
jns
cmp
andl
pop
ffree
jb
mov
inc
xchg
inc
js
negl
loopne
inc
aas
or
dec
xchg
cmp
scas
cli
cmp
jb
rorb
inc
add
rcrb
or
add
sbb
mov
loop
loopne
jle
jecxz
icebp
fisubrl
mov
pop
cmp
int
mov
and
mov
mov
add
test
sbb
mov
fisttps
cmp
insl
sub
je
inc
test
ret
xor
sub
lds
shrb
and
jne
insl
inc
gs
cltd
xchg
pop
mov
je
movsb
fcom
aas
mov
mov
pop
fists
in
and
data16
mov
nop
jmp
cmc
adc
out
sub
je
add
lock
and
popl
xor
ja
clc
push
xchg
loopew
mov
jb
test
dec
int3
jmp
gs
sbb
ss
dec
push
add
call
push
ljmp
out
or
push
mov
out
inc
jno
rorl
push
xor
jmp
pusha
xchg
add
push
jb
iret
aam
sub
sbb
test
mov
subb
jo
cs
mov
mov
jecxz
ds
cmp
push
cmp
dec
in
inc
xor
adc
lods
push
push
mov
mov
jge
mov
and
lcall
lahf
and
mov
rorb
into
push
mov
dec
push
dec
adc
imul
inc
dec
loope
jne
cmp
jp
mov
inc
xchg
lock
aas
mov
mov
cltd
cmpsb
fbstp
sub
aas
out
lret
fwait
jle
in
dec
mov
pop
dec
xchg
adc
push
movsl
adc
stc
jae
ficoml
sbb
ja
fcomip
push
xor
rclb
int3
in
mov
sbb
ret
sub
jbe
push
and
pop
dec
sahf
cmp
xor
test
loop
push
cs
pop
push
out
icebp
outsl
xchg
sub
in
xchg
leave
or
mov
sub
and
xor
iret
push
pop
cmc
mov
std
lods
sbb
add
cmp
sarl
cmp
mov
sbb
rclb
insb
pop
dec
or
dec
es
mov
cmp
imul
add
fadd
enter
dec
cwtl
sub
cwtl
xchg
cli
or
and
sub
push
dec
xchg
loope
sahf
pop
gs
cmpsb
or
mov
lds
add
push
xchg
testl
push
mov
jb
imul
xchg
mov
cmc
or
xchg
or
test
adc
push
mov
mov
call
popa
pop
loope
lds
dec
out
cs
push
push
in
scas
sbb
add
or
jl
sti
jge
inc
jmp
mov
or
jns
sub
jae
inc
or
xor
mov
cmp
pop
lods
fdiv
xchg
cltd
xor
pop
enter
lahf
or
cld
rcrb
mov
xchg
dec
fstl
das
mov
shr
ja
stc
xchg
fsubr
gs
aaa
and
or
in
jge
lock
pop
and
xor
sbb
xor
xchg
add
pushf
fwait
pop
fcmovnb
bound
sbb
and
ss
adc
movsb
jnp
enter
adc
cmpsb
popa
sbb
pop
pop
fisubl
stos
cmpsb
jmp
push
in
pop
pop
inc
xor
pop
inc
or
insl
cld
dec
lret
loope
rcll
xlat
and
adc
mov
cmp
push
xor
les
sub
jecxz
outsb
adc
test
ja
es
add
xor
jmp
pop
and
or
pop
pop
inc
sbb
mov
outsl
pusha
xlat
hlt
shrb
insb
insb
add
gs
enter
mov
fwait
aad
sub
mov
and
add
xchg
and
cmp
lcall
pop
js
push
filds
clc
sub
rcrb
scas
adc
ljmp
mov
xor
lea
mov
mov
jmp
sub
outsl
fwait
push
adc
push
call
out
jne
adc
xchg
mov
push
call
inc
outsb
inc
xor
scas
repnz
xchg
mov
aad
cmc
add
stos
popa
imul
dec
cmp
cmp
inc
repnz
cld
insl
andb
pop
fstpt
jbe
pusha
and
shrl
outsl
and
inc
ds
out
xor
xor
inc
setle
mov
xchg
test
mov
jo
dec
ja
jmp
repz
cmp
add
imul
cs
cltd
mov
or
mov
in
or
or
imulb
mov
xlat
enter
popa
pop
inc
pop
dec
pop
andb
imul
mov
idivl
je
movsb
pop
dec
dec
add
xchg
adc
cmp
push
xor
xchg
int3
push
jo
xor
fnsave
sbb
add
sub
aaa
call
xchg
in
dec
into
addb
or
inc
lods
sub
xor
inc
aas
mov
mov
cld
ds
and
xchg
and
stos
mov
cmpsl
push
nop
and
adc
cltd
dec
int
lods
cmp
cmpsb
nop
inc
mov
mov
push
mov
jmp
subl
or
xchg
adc
orl
mov
mov
jno
mov
out
cli
imul
pusha
dec
fidivrl
add
push
cmp
rorb
jo
outsb
sub
cmpsl
cmpsb
adcb
mov
fisubl
or
push
mov
rclb
sbb
jae
push
inc
cwtl
lods
xchg
or
ficoml
ds
lret
push
add
lds
sub
fdivr
cmp
scas
push
jl
jle
pop
jne
or
cld
mov
sub
adcb
pop
push
and
pop
cmpsl
push
in
rorb
or
sbb
add
out
ret
push
xor
sub
pop
adc
cmp
out
cmc
push
es
add
loope
jo
stos
cmp
aam
dec
push
add
movsl
repz
mov
cmpsb
out
fnstsw
cmpl
cld
into
sbb
mov
adc
xchg
and
push
mov
icebp
cmp
xchg
or
xor
sbbl
sub
loop
insl
xchg
push
sbb
sbb
jl
mov
nop
xorb
mov
es
lods
mov
sahf
testb
add
in
addr16
dec
idivl
imul
xor
dec
dec
shl
mov
and
call
add
ja
fadd
dec
push
pop
or
sub
roll
incb
fidivrs
inc
pushl
ficoms
and
idivl
pop
lock
cwtl
mov
stc
inc
inc
mov
pop
dec
mov
dec
push
repz
xor
or
cli
fldenv
push
mov
pop
int
push
mov
jl
cmp
hlt
fs
scas
jae
ret
mov
fwait
cmp
imul
inc
cli
sub
pop
les
lret
xchg
mov
sbb
jns
inc
std
leave
xchg
dec
jg
test
cmc
scas
stc
mov
pusha
inc
push
dec
sbb
in
pop
js
lods
nop
xor
cmp
mov
movsl
cwtl
scas
in
cwtl
test
popa
mov
and
xor
xor
sub
sub
sub
sub
or
pop
mov
dec
mov
fwait
movsl
aam
test
pop
dec
pop
pop
fwait
jb
test
mov
xchg
lea
pushl
jne
jb
xor
roll
fmuls
movsl
push
ljmp
lock
mov
xchg
fwait
xchg
mul
inc
xchg
or
das
imul
stos
push
ror
je
cmp
pop
mov
aad
inc
mov
push
adc
inc
add
and
inc
jmp
repnz
shl
js
imul
arpl
shrb
pop
aaa
sbb
scas
fistpll
xchg
loop
push
ret
enter
packssdw
out
fildll
call
popa
and
inc
cwtl
mov
gs
ret
mov
ja
mov
lret
mov
ljmp
ret
mov
pop
shlb
test
add
cs
push
orb
and
aad
test
mov
lods
out
pop
loopne
mov
fwait
mov
sti
ss
pop
std
or
cmp
sbb
fsubr
fsub
cli
clc
or
test
lret
pushf
inc
lds
sti
or
out
int
adc
ja
dec
mov
cs
scas
xor
fidivrl
xor
cltd
fldt
mov
mov
ficoms
sub
pop
cwtl
and
fs
jnp
sarl
int3
fcoms
mov
pop
clc
mov
popf
pop
aad
sub
inc
popf
mov
sub
and
add
push
cmp
jmp
mov
inc
cld
repnz
sbbl
xor
testb
ds
dec
jno
insl
mov
repnz
jmp
mov
movsb
adcl
mov
call
or
loopne
adc
jl
mov
or
cmp
or
mov
rcrl
outsl
inc
inc
addr16
xor
cmp
mov
jno
mov
xchg
xor
xor
inc
cwtl
stos
mov
adc
xchg
xchg
pop
imul
mov
decb
xchg
das
jecxz
pop
aad
pop
push
rcl
das
imul
movsl
mov
aaa
scas
jno
lds
push
inc
xlat
aad
mov
jmp
bound
scas
pusha
mov
xor
test
mov
mov
push
repnz
inc
sub
into
int3
cwtl
cmp
dec
shlb
notb
bound
sub
je
fisttpll
fidivl
iret
cld
pop
lret
inc
int3
push
push
ds
adc
fcomip
cmpsb
fwait
clc
out
fs
je
rorl
and
test
sub
xchg
daa
pop
mov
sub
mov
xor
or
mov
and
mov
inc
push
pop
jmp
inc
cmpsl
std
dec
das
mov
pop
add
ljmp
sub
cs
in
sub
mov
cmp
or
scas
fdivr
xorb
cmp
push
lcall
xchg
fdivrs
rolb
dec
pop
sbb
aaa
jge
int
test
cmp
pop
mov
sub
push
pop
mov
das
xchg
popa
xor
mov
out
xor
mov
ret
ret
out
jb
pop
xchg
jmp
lock
pop
dec
mov
xchg
fwait
mov
mov
pop
pop
lods
iret
mov
test
in
cltd
adc
push
ljmp
push
push
arpl
call
jle
mov
test
xchg
pop
push
mov
lahf
adc
jns
sub
jno
bound
push
arpl
mov
ljmp
xor
clc
icebp
xchg
repz
out
inc
and
dec
mov
jg
sbb
stos
in
sar
xor
shll
mov
sbb
mov
fmull
dec
ss
cmp
mov
push
pop
lahf
ds
imul
push
rcrl
dec
cmc
adc
ss
mov
xchg
jbe
lds
sarl
push
ds
push
jecxz
mov
or
outsl
inc
and
sahf
mov
add
xor
xor
jge
js
mov
mov
ja
ljmp
sub
lds
push
loopne
out
cli
fnstcw
cltd
dec
jle
add
orb
cmc
mov
and
rcl
mov
jg
mov
mov
jmp
xchg
jp
cmpsl
loop
and
in
mov
pop
addr16
out
xchg
lods
add
imul
dec
pop
inc
int3
gs
dec
fdivrs
xchg
xchg
push
inc
dec
jnp
mov
pusha
leave
mov
mov
clc
mov
ret
jns
sbb
mov
rclb
or
mov
clc
jbe
or
pop
cmpsl
daa
pop
outsb
mov
cld
in
ss
xor
pop
inc
or
inc
mov
sbb
movsl
mov
lret
cmp
lds
pop
cli
out
std
je
lret
cmpsl
loop
or
xor
outsb
outsb
xchg
nop
cmp
and
jmp
inc
xor
adc
lock
mov
jno
in
cmpsb
pop
test
mov
mov
ret
cwtl
repz
enter
movsb
int
lret
or
cmp
stc
push
divl
jg
pushl
sub
pop
sbb
std
mov
aam
xlat
pop
nop
dec
or
sub
push
aad
xor
sub
ficoms
data16
jno
dec
jns
jae
aas
or
push
test
flds
dec
lahf
and
test
int
mov
movsb
outsb
dec
push
or
add
inc
std
loop
shrl
dec
xor
cs
outsl
repz
add
xor
pop
push
mov
in
pop
sub
test
enter
int3
sbb
xlat
fsubl
mov
dec
imul
mov
sbb
xor
popf
add
push
enter
sub
sub
pushl
movl
popa
mov
in
pop
push
cmp
cmp
test
cmpsb
or
arpl
inc
push
sbb
jo
mov
adc
sub
mov
pop
xchg
sub
sub
sub
sbb
mov
int
mov
jp
xchg
int
bound
dec
ret
ja
test
inc
pop
jg
push
xchg
adc
push
movl
js
sbb
jo
pop
sub
xchg
loopne
sub
lock
xor
add
mov
xchg
call
sub
mov
push
cwtl
outsb
xor
sti
insl
dec
or
xchg
adc
jns
pusha
xchg
cmc
or
insb
cli
jo
inc
push
or
lods
cmc
pop
or
or
xchg
inc
cmp
push
inc
mov
clc
sarb
mov
dec
jg
add
mov
cmp
loope
sub
sti
push
lret
dec
fidivl
sub
ret
les
mov
ret
popa
add
icebp
or
cmp
lret
ja
fisttpll
push
pop
push
xor
xchg
fisubl
xor
push
dec
pop
dec
dec
mov
push
or
mov
mov
imul
sbb
sbb
add
leave
test
mov
mov
mov
testl
or
jnp
push
lds
sti
adc
fnsave
xor
lea
and
int
insl
push
cmp
das
push
xchg
jno
cmpsb
out
std
mov
mov
inc
ds
push
neg
sbb
fcmovnbe
sub
adc
bound
sbbl
ret
movsl
enter
mov
test
fsubl
mov
outsb
lea
std
inc
dec
jnp
cli
pop
test
ret
in
jnp
adc
es
arpl
daa
dec
imul
out
push
push
subb
and
push
cs
xchg
xor
jns
xor
sub
sbb
mov
adc
pop
xchg
and
cmp
xor
mov
or
pop
push
addr16
push
push
xchg
ret
addr16
mov
jbe
sbb
sub
dec
lock
dec
cmpsl
push
arpl
inc
pop
imul
cmp
lods
push
xor
js
loop
es
cmpsb
mov
pop
cmc
in
adc
push
ljmp
sti
xchg
cs
lods
mov
inc
bound
in
pop
mov
mov
pop
xchg
mov
xchg
inc
jns
mov
and
in
sub
mov
loopne
inc
fwait
push
adc
xchg
mov
pushf
push
scas
sbb
push
xchg
and
mov
push
hlt
push
xor
scas
out
lds
out
test
jno
and
pop
jnp
xchg
iret
daa
inc
insb
cmpsb
or
pop
xor
sarb
sub
mov
js
mov
dec
sub
mov
hlt
mov
cmp
inc
jl
inc
xchg
inc
mov
xor
sbb
das
jae
fcoml
mov
lea
je
cli
jl
stc
ss
adcl
mov
jecxz
shr
jae
nop
loop
mov
cmp
in
sub
aam
pop
sub
sbb
inc
stc
ret
cmpsb
nop
mov
mov
push
push
pop
aas
mov
or
dec
pop
push
out
fwait
pop
or
je
and
daa
jl
sbb
pop
ret
xchg
xchg
jp
ss
repnz
mov
add
sbb
aaa
cmpsb
aam
push
aad
mov
lret
mov
cli
stos
push
js
dec
push
insb
addr16
adc
push
sbb
jecxz
and
mov
xlat
sub
test
inc
insb
andb
int3
sbb
incl
mov
mov
icebp
ret
adc
into
xchg
dec
ret
pushf
mov
adc
mov
sti
gs
aad
jp
mov
xchg
das
add
cli
imulb
push
mov
mov
js
pop
and
ljmp
mov
lahf
fcom
xor
fs
scas
ljmp
jae
or
mov
sbb
scas
mov
movsb
pop
mov
and
les
mov
mov
push
outsb
push
cmp
xchg
adc
push
cli
orb
rclb
mov
lcall
stos
cmp
test
xchg
fucomi
cmc
insb
add
mov
lods
add
or
out
stc
pop
imull
jle
dec
fstl
mov
jg
inc
rcrl
out
popl
jge
orb
cli
nop
out
int
xor
sbb
xchg
or
push
fstl
adc
pop
sub
xchg
mov
cmp
rclb
jge
out
aas
jne
ds
fwait
and
test
or
jmp
cmp
je
aad
loopne
pop
popf
das
rclb
push
sbb
dec
xchg
inc
xlat
pop
push
in
jp
xchg
sahf
stc
jp
mov
aaa
lea
fs
mov
sub
jns
cmp
fisttps
mov
mov
aaa
cld
jge
lock
sbb
mov
adc
mov
or
and
or
xor
enter
fidivrl
cmpsl
jmp
into
rorb
std
cmp
xor
push
sbb
dec
cld
aaa
mov
subb
inc
vmovaps
sbbb
inc
icebp
roll
scas
dec
sub
popf
sub
xchg
sbb
mov
addr16
mov
mov
mov
pop
xor
push
movsl
mov
dec
push
test
in
ret
xor
dec
cmp
repnz
or
dec
lock
xor
outsl
cmp
push
jno
aas
fdivrs
pop
or
test
inc
xlat
sti
aaa
das
dec
adc
inc
scas
mov
cmp
sti
aaa
xchg
xor
xor
fnstsw
xor
jne
push
iret
imul
out
push
sbb
jmp
pop
or
fisubrl
inc
and
repz
int
push
flds
add
mov
test
iret
outsb
dec
xor
mov
pop
aas
lret
shr
into
daa
mov
push
inc
or
cmp
stc
and
jle
jmp
xorb
cmp
mov
and
test
mov
insb
and
ja
dec
or
test
jo
mov
sbb
inc
mov
pop
cmc
cmp
jns
mov
sbb
addr16
fdiv
cltd
mov
addl
repz
mov
sub
push
pop
cmp
dec
ficomps
out
aaa
adc
pop
mov
and
daa
out
std
mov
fwait
jo
imul
or
jo
push
out
loope
out
imul
sub
add
gs
mov
in
mov
dec
pop
popa
dec
mov
cmc
outsb
fiadds
push
cmc
dec
rorl
cwtl
jb
ja
dec
push
sub
repnz
cltd
push
cmp
out
mull
inc
xor
shlb
inc
fnsave
rcr
or
sahf
ret
and
in
call
lret
sub
loop
inc
pop
outsb
popf
repnz
pop
lret
scas
pop
out
mov
sbb
jo
lds
shll
sub
pop
jbe
or
sahf
jne
inc
push
mov
lds
sub
rcr
frstor
dec
mov
adc
push
test
push
mov
lcall
repnz
add
jle
jp
push
fs
lcall
dec
pusha
negl
cwtl
push
sub
mov
cld
inc
mov
shl
push
sub
fsubrl
aam
xchg
fsts
dec
sahf
xchg
bound
enter
aad
dec
mov
fstl
addr16
daa
sahf
pop
in
std
and
mov
pop
pop
filds
mov
int
addl
sub
xor
mov
sub
mov
leave
pop
int3
mov
or
jge
bound
jecxz
scas
testb
iret
push
mov
into
outsl
and
in
mov
rclb
jcxz
and
cmp
sbb
out
pop
cmp
dec
loop
adc
xor
sub
pop
pop
adc
fcoml
cmp
loop
adc
aad
pushf
sahf
mov
mov
jns
stc
adc
ljmp
mov
add
mov
iret
sarl
jbe
mov
sub
jns
sub
adc
pop
aad
sbb
roll
dec
mov
mov
cmp
push
inc
outsb
mov
stos
mov
into
xchg
dec
pop
call
sbbl
cmp
aam
daa
cmp
fistl
mov
nop
hlt
std
adc
inc
adc
sarl
xorb
push
inc
sbb
lods
movsb
xchg
push
push
push
out
cld
or
test
cmp
xchg
repnz
shlb
test
jns
out
add
daa
in
push
outsl
lret
sarl
cmc
pusha
dec
aas
and
bound
xchg
dec
and
push
and
rcr
jb
iret
dec
in
popf
jmp
jge
cmp
push
daa
inc
push
lds
int
sub
pop
repz
sbb
adc
xorb
push
imul
fildl
pop
inc
mov
mov
mov
or
lret
jo
and
fidivl
daa
and
xchg
mov
cmp
lods
xor
mov
nop
cmpsl
and
mov
repnz
xor
mov
in
test
jmp
mov
dec
and
xor
add
movb
bound
das
shll
sbb
inc
mov
add
xchg
adc
push
cwtl
adc
jo
add
aam
je
ret
push
ja
xor
jmp
mov
or
rcr
rcr
lret
push
add
sbbb
dec
cwtl
pop
inc
mull
nop
ret
pop
xchg
lret
dec
jns
repz
xchg
fdivs
stc
stos
mov
or
pop
mov
cld
hlt
push
sbb
cmp
push
popf
mov
push
mov
push
dec
sub
or
pushf
iret
out
enter
add
mov
lret
es
sbbb
xchg
xor
adc
lods
int
es
test
or
mov
cltd
insl
push
jg
lahf
leave
fs
in
nop
dec
pop
jnp
imul
bound
cltd
ficoml
outsl
fwait
mov
int
cli
inc
pop
je
inc
jno
fnstenv
xchg
push
js
ds
mov
scas
popf
rep
call
cmp
inc
adc
cli
das
call
push
mov
es
in
xchg
loope
xchg
jns
iret
jle
call
cltd
in
ret
lods
mov
repz
aaa
inc
mov
out
mov
fwait
rcrb
les
mov
or
inc
xchg
cli
loop
loope
cltd
jne
and
inc
cmp
sbb
pop
or
inc
jecxz
cs
push
push
mov
lock
mov
xor
lods
addb
les
push
sub
shll
std
lret
test
imul
push
loop
stos
xchg
or
sub
dec
stos
xor
aam
pop
inc
xchg
out
fstl
lret
push
shlb
and
pop
loope
paddusw
push
dec
pop
leave
cmc
adc
jb
pop
imul
mov
sbb
in
mov
and
or
inc
sbb
dec
inc
aam
cwtl
mov
sbb
cmpsb
int3
roll
mov
push
adc
cli
or
lods
ret
jg
ljmp
mov
es
loopne
aad
sub
cmp
adc
xchg
popa
aaa
xor
sarb
sbb
cmpsl
dec
cltd
jo
lock
mov
test
inc
inc
cmpsb
pop
push
aam
pop
ret
pop
mov
test
movsl
pusha
sti
test
bound
mov
lds
jp
out
enter
pop
iret
xchg
insl
sbb
clc
jmp
xor
inc
in
inc
addb
dec
mov
sbbb
push
sub
shll
insb
sbb
xor
js
enter
xchg
das
mov
fildl
cmp
lock
inc
jp
sarb
stos
inc
es
dec
aad
mov
add
ss
pop
push
xchg
mov
mov
xchg
mov
mov
add
sahf
or
adc
or
jnp
mov
mov
sbb
add
addr16
std
ljmp
mov
sub
shrb
nop
sub
loopne
jne
jl
mov
push
or
jecxz
mov
push
or
xchg
dec
sbb
imul
ret
pushl
enter
fistl
mov
test
test
adc
xor
jne
call
jb
pop
add
stos
jge
xchg
jmp
adc
push
popf
popf
bound
cmpsl
xchg
inc
hlt
ficoml
sbb
jb
dec
push
push
loop
or
icebp
addr16
add
fistpl
mov
sbb
add
fildll
mov
leave
pop
pop
aam
ja
aaa
jmp
shl
pop
mov
mov
dec
mov
mov
es
idivb
call
inc
add
dec
inc
popa
mov
outsl
call
sbb
lcall
and
pop
cmp
add
stc
into
dec
call
add
std
mov
cmpb
sbb
lcall
push
test
xor
shlb
sub
popa
test
sub
vpsrad
xchg
clc
and
cmp
lock
xchg
sti
xlat
pusha
sub
mov
sbb
pop
popa
mov
mov
sahf
ss
pop
sbb
mov
aad
lret
xchg
pop
aad
mov
mov
mov
jne
arpl
adc
cmc
fs
aad
pop
push
lea
mov
push
das
mov
xchg
push
or
sbb
sahf
and
and
mov
mov
adc
xchg
outsb
into
inc
stos
js
xchg
aas
fidivl
xor
mov
pop
xor
pushf
add
das
dec
wbinvd
icebp
sub
cld
inc
xchg
out
or
std
lods
je
repz
jo
ja
and
stos
pop
xchg
ljmp
jge
int3
cmpsb
mov
cs
mov
add
nop
adc
push
xlat
aam
dec
sub
stc
jne
test
push
int3
jecxz
or
mov
aas
pop
xlat
dec
sahf
sbb
push
jbe
dec
ljmp
mov
movsb
cmpsl
int3
stos
xor
mov
push
ss
leave
xor
adc
xlat
cs
dec
mov
int3
pop
fistl
pop
mov
jl
test
mov
aas
decb
addr16
inc
jnp
lock
pop
add
jae
inc
pop
mov
lock
ficoms
add
je
insb
gs
gs
sbbl
push
sub
mov
xor
mov
mov
cmp
popf
pop
gs
mov
mov
add
and
push
mov
test
sbb
ficoml
xchg
ljmp
jmp
and
push
mov
adc
movl
mov
movl
repz
idivb
sub
movsb
push
addr16
jnp
cmpsb
push
and
imul
pop
or
hlt
add
mov
insb
dec
push
push
lea
ficoml
xchg
lret
xchg
jae
scas
pop
or
adc
jecxz
mov
gs
movl
sub
or
lret
inc
jge
scas
testl
subb
pop
dec
repz
jb
mov
daa
mov
jg
lret
bound
sub
ja
dec
pop
cmp
mov
pop
pop
mov
loop
call
lret
mov
cmp
and
and
test
je
mov
sbb
and
nop
add
xchg
xchg
xchg
shrb
dec
xchg
mov
jecxz
adc
je
pop
mov
pop
data16
in
and
or
and
movsb
out
movsb
cs
lds
and
jp
push
add
push
dec
repnz
arpl
testl
aad
dec
add
sbb
mov
sbbb
je
and
fbld
jmp
loopne
and
jmp
and
pop
fmul
xchg
cmpb
arpl
imul
cmp
cmp
lods
repnz
or
xchg
and
out
cli
nop
cli
out
jl
adc
jnp
xor
lea
leave
inc
test
leave
adc
lds
fsubl
out
loopne
movl
dec
je
sti
push
iret
outsb
mov
mov
in
lods
dec
xchg
pop
cmp
push
sub
movsl
mov
std
pop
dec
imull
mov
pop
test
inc
jle
jns
sahf
push
insl
in
test
cmp
stc
push
sub
testl
sbb
jb
lret
pop
and
jbe
jnp
scas
stos
dec
imul
shlb
xchg
push
jo
scas
xchg
jbe
bound
and
jmp
mov
scas
pop
xchg
popa
adc
push
out
dec
fucomi
push
push
cmp
push
js
lods
xchg
lcall
jmp
imul
jbe
imul
sbb
add
fisubs
addb
ds
xchg
dec
in
mov
push
outsl
dec
adc
push
outsb
or
lods
dec
into
pop
fstps
pusha
in
pop
fisubrl
push
fwait
leave
pop
stc
and
cmc
aas
jne
inc
xchg
repz
jmp
mov
xchg
cmp
rol
nop
popf
leave
add
es
xchg
mov
pop
jge
and
or
sub
xor
mov
test
add
push
or
loopne
bound
test
inc
data16
xchg
ljmp
jecxz
jecxz
cli
sbb
xor
inc
fdivrs
add
int3
pop
add
sub
cmc
std
enter
cmpsb
dec
cmp
sti
pop
sbb
bound
fidivrl
xor
mov
imul
stc
xchg
jae
out
push
xchg
xchg
dec
loope
inc
ret
push
jb
and
xchg
cmpsb
xchg
push
lret
jno
test
jnp
mov
sbb
xor
and
fists
jo
sub
rcll
scas
sbb
xchg
push
imul
jbe
pop
inc
negb
inc
lahf
divb
stc
xchg
movsl
ja
sub
lret
cld
mov
enter
fstpl
sysexit
dec
rolb
iret
sub
pushf
stc
push
add
mov
inc
adc
shlb
mov
add
sub
mov
push
cmp
pop
aas
in
jae
jne
push
aam
sub
fwait
xor
dec
mov
push
inc
addr16
fwait
xchg
loopne,pt
push
js
dec
dec
popf
inc
and
and
lret
push
pushf
mov
pusha
iret
xor
int
rcl
mov
int
out
out
outsl
jae
scas
subl
js
bound
outsb
ljmp
xchg
mov
or
mov
popa
mov
test
jmp
nop
into
mov
or
jmp
cmp
adc
mov
pop
loopne
iret
jb
jnp
and
sbb
push
mov
movsb
push
xchg
mov
xchg
cltd
mov
rcll
fcmovb
and
adc
pop
inc
adc
sbb
xchg
mov
jno
dec
es
add
xor
aaa
dec
xchg
dec
stos
fwait
push
aaa
cmpsb
icebp
jmp
dec
int
cwtl
sti
lahf
cmp
out
in
sbb
sub
xchg
addr16
dec
mov
aaa
dec
jmp
mov
call
add
pop
dec
mov
cmp
push
add
mov
outsl
daa
and
or
aam
and
mov
xchg
xchg
sti
lahf
testb
pop
lea
jnp
rolb
lahf
xor
insl
push
mov
mov
jo
mov
pop
cmpsl
fdivrp
push
aaa
sarl
inc
outsl
lods
sub
jl
jae
lea
push
leave
mov
dec
ljmp
dec
sub
fsubs
adc
lods
lea
xor
fwait
dec
int3
dec
fildll
js
dec
jb
scas
push
mov
outsl
pop
lahf
test
mov
xchg
push
sbb
push
jecxz
popa
or
fidivrs
sub
sbb
xorl
gs
sti
nop
sti
repnz
pop
push
rolb
or
or
scas
clc
pop
mov
inc
inc
fs
jb
pop
test
dec
sub
adc
adc
push
lret
jp
icebp
pop
mov
push
ret
test
cld
jg,pn
cwtl
in
inc
lods
stos
mov
mov
fnstsw
cmp
mov
into
mov
ret
cmp
gs
inc
xchg
jbe
cmp
push
mov
push
jne
daa
stos
in
mov
fiaddl
dec
enter
mov
xor
mov
rorl
andl
cmc
sahf
bound
sbb
lods
jne
lahf
mov
sbb
or
test
fwait
es
cli
jbe
mov
push
repz
mov
xor
xchg
out
xchg
js
loop
addr16
ss
jb
mov
adc
sbb
pop
inc
push
pop
jb
mov
cmp
idivb
cmp
push
push
rcrl
inc
adc
jge
mov
imul
outsl
dec
xchg
mov
mov
fisttpl
adc
mov
jmp
push
lret
stc
icebp
lods
pop
sub
push
inc
push
inc
mov
dec
jge
mov
rcr
mov
addr16
scas
leave
adc
mov
dec
testl
pop
mov
ja
inc
les
mov
push
out
fcoml
xchg
mov
cmp
sub
lcallw
jbe
ljmp
lds
lods
fiadds
inc
addr16
lahf
push
push
add
hlt
cmp
loopne
pop
jno
stos
dec
mov
inc
push
ljmp
push
loopne
jns
pop
lcall
test
dec
jmp
fimull
cmpsl
movb
mov
mov
push
sbb
adc
adc
xchg
std
jmp
mov
lea
xor
and
fisubl
fs
fiaddl
and
hlt
xor
push
add
push
xchg
mov
enter
sub
iret
push
loop
xchg
test
loope
addr16
lods
into
ljmp
cld
mov
jnp
and
movl
ja
aad
test
jp
adcl
mov
sub
and
jp
addr16
xchg
push
xchg
popa
insl
shll
xchg
xlat
dec
aaa
fldcw
cmp
inc
es
sub
orb
jmp
mov
inc
pop
add
push
stos
mov
mov
test
stc
xchg
mov
imul
cltd
or
insb
jns
lods
fstps
push
pop
xchg
test
mov
mov
push
inc
lret
xor
push
mov
xor
repz
cld
cwtl
pop
jmp
mov
test
ret
adc
xchg
sti
loop
cltd
call
sbbl
fbld
mov
gs
popf
fwait
into
push
idiv
mov
xchg
adc
cmpsb
pop
outsl
cs
jne
and
test
sub
inc
and
sbb
inc
test
inc
jno
mov
add
mov
push
mov
aas
push
enter
out
fistl
xchg
adc
cs
cmc
inc
lcall
sahf
pop
pop
sub
shl
notb
inc
aaa
cmp
fisubs
scas
data16
je
mov
shlb
js
lea
adc
sbb
inc
lea
or
add
arpl
and
xchg
add
mov
mov
divl
out
ss
flds
imul
xchg
dec
mov
js
loopne
mov
stos
cmpb
arpl
cmp
dec
das
adc
stos
mov
test
and
push
and
fwait
and
jo
and
pop
stc
sub
xchg
sub
call
pusha
add
sub
xor
lods
ret
js
dec
ja
stc
loope
js
cmpsb
lea
in
mov
push
jmp
xchg
xchg
mov
in
pop
xor
insb
xchg
call
sbb
std
adcl
out
xchg
inc
subl
imul
jae
daa
xlat
fmul
popa
ret
insb
jge
fadd
ds
lret
dec
mov
xor
popa
mov
bound
sub
push
xchg
adc
pop
mov
mov
addr16
adc
aam
sub
push
inc
pop
dec
xor
push
nop
shrb
mov
arpl
or
js
repnz
pop
sbb
inc
jnp
adc
sbb
jg
ds
jno
lret
xor
xor
xchg
or
daa
mov
outsb
add
cmp
xchg
mov
push
jbe
push
mov
hlt
call
scas
push
aaa
call
add
insl
in
and
aam
ds
xor
xor
push
dec
pushf
fcmovb
add
or
in
inc
je
fiadds
bnd
sub
test
dec
fdivrl
or
mov
inc
daa
mov
xchg
pushf
mov
mov
lret
fcoms
icebp
dec
arpl
cmp
add
jecxz
or
push
pop
sub
and
sub
movsb
sub
pop
ret
data16
xor
fsubrs
dec
push
outsl
mov
scas
mov
movsb
jl
sub
jbe
movsl
pop
rcrb
test
stc
incb
lret
ds
rcr
push
mov
nop
in
enter
rcrb
push
std
mov
cwtl
in
dec
or
or
add
fisttpl
lea
or
or
mov
insb
mov
sbb
lcall
pop
pop
xor
cmp
jg
cmpsl
incb
jns
out
lret
in
adc
inc
mov
cmp
mov
jns
dec
xchg
imul
test
les
xchg
cmp
cli
sahf
xchg
loope
lret
pop
cld
jmp
out
call
jg
inc
jbe
fwait
daa
inc
jp
in
push
xor
pop
popa
mov
cmp
xchg
xchg
cld
mov
mov
xlat
sbb
mov
jmp
cs
sbb
xor
cmpsl
push
enter
dec
xchg
cmp
jle
push
out
pop
hlt
jg
int
popf
jge
les
jecxz
pop
lcall
iret
mov
dec
shll
xor
es
std
pusha
cmpsl
cmp
xchg
push
adc
nop
arpl
imul
xor
jecxz
test
sbb
pop
aas
sbb
sub
pop
aad
mov
fwait
mov
dec
leave
and
ret
mov
stos
cwtl
cld
in
cli
jmp
jl
or
or
xchg
pop
jo
sar
int3
pop
pop
sbb
in
mov
stos
dec
adcb
jl
int3
jmp
lcall
repnz
faddl
xchg
lods
dec
mov
mov
sub
pop
das
mov
mov
in
cmp
jge
inc
imul
loopne
rclb
inc
fmul
jb
test
clc
in
xor
addr16
sub
pop
or
dec
add
or
jbe
fldl
mov
jnp
sub
add
xor
je
cmp
loopne
loop
ret
shll
jge
pop
jge
gs
inc
ret
mov
lcall
in
inc
rclb
pop
loope
pop
cs
in
dec
stc
int3
inc
orb
cmp
dec
inc
fbld
xchg
loope
nop
mov
paddsw
push
out
and
lahf
inc
imul
sbb
push
aad
movsl
adc
inc
nop
stc
push
inc
xchg
mov
inc
xchg
fcmovnbe
punpcklwd
xor
add
jbe
gs
cli
push
pop
push
insl
sahf
jnp
mov
lcall
xchg
les
xchg
add
data16
inc
out
ja
aad
mov
lahf
jbe
outsb
mov
mov
mov
repnz
or
cmp
xchg
in
cmpsl
xor
dec
adc
dec
mov
test
shrl
js
inc
in
shll
adc
lods
stc
enter
xlat
test
sbb
mov
shr
adc
jp
push
inc
ret
stos
cld
xor
imul
bound
adc
mov
adc
cld
xorl
lock
or
das
aad
dec
mov
outsl
cmc
repz
je
fsubs
add
xchg
enter
clc
or
into
dec
cltd
or
mov
fstps
mov
sub
cmp
jg
cmpsb
in
nop
sti
cli
xor
pop
or
es
or
shl
fndisi(8087
and
jo
and
sti
insb
sbb
mov
mov
push
mov
les
and
mov
push
push
int3
mov
inc
call
jb
mov
lahf
mov
push
repz
fldenv
stc
sarb
push
and
mov
sbb
lods
subl
mov
sbb
xlat
sub
add
add
mov
pop
mov
jno
dec
pop
xor
jecxz
mov
sbb
cltd
cmpb
test
inc
sbb
in
mov
fstl
pop
xlat
cmp
sub
adc
add
aaa
test
cmp
addr16
sbb
testb
into
and
or
cmp
jbe
lret
mov
jl
mov
iret
stos
sub
out
mov
push
xchg
inc
fnsave
cltd
imull
stos
mov
mov
xchg
mov
add
stc
call
leave
out
mov
mov
ret
andb
lods
mov
ficoml
dec
stos
mov
cmp
push
mov
xor
addl
add
jo
insb
cmpsl
sbb
pop
xsaveopt
mov
jmp
cmc
xchg
icebp
shr
sti
call
jl
adc
fstl
lea
stos
iret
lods
js
arpl
test
sbb
push
insb
add
add
jl
std
ror
adc
adc
fwait
in
jae
pop
add
sbb
and
xchg
xchg
arpl
arpl
dec
jl
and
cld
shll
pop
nop
subb
adc
mov
imul
inc
mov
rcll
daa
adc
inc
addr16
fcomi
xchg
dec
dec
ret
ret
mov
xchg
insl
cltd
cmpb
pop
popf
lods
xor
fucomp
jg
into
xchg
aaa
fnstsw
insl
out
test
psllq
cmpsl
adc
test
jns
dec
xchg
outsb
leave
fs
push
add
mov
aad
adc
fwait
shrb
addr16
add
iret
imul
call
loope
imul
cli
inc
xor
xor
setne
fdivs
and
js
shl
jg
adc
lcall
adc
int3
xchg
mov
ret
and
mov
cli
ret
add
xchg
or
mov
ss
dec
push
icebp
pop
push
cmp
and
bound
dec
cmp
je
pop
cltd
popf
or
dec
adcl
jecxz
xor
popa
dec
jns
insl
sbb
std
cmp
repz
sub
stos
repz
xchg
cltd
mov
or
and
mov
leave
movsl
jae
adc
lock
gs
push
lcall
adc
nop
pop
xchg
in
loope
inc
jbe
or
pop
cmp
stos
ret
ret
push
mov
xchg
pop
and
inc
ret
cmc
out
xchg
bnd
rcrb
dec
mov
scas
mov
jle
mov
pushf
mov
sub
push
xor
mov
jp
in
out
mov
jnp
repz
test
pop
xchg
insl
jnp
push
pushf
cld
adc
cmp
jl
stos
xor
mov
lods
cltd
xor
and
imul
gs
stos
in
mov
cs
sub
movsl
xchg
adc
loope
movsl
push
xor
aad
mov
xchg
test
outsl
dec
add
mov
pop
pop
aam
mov
sarb
cmp
insb
xor
dec
mov
jne
aaa
fidivl
xchg
mov
xor
mov
std
dec
inc
pop
xor
lret
insl
or
adc
push
daa
arpl
adc
mov
sub
repnz
out
cli
aad
insb
leave
mov
lea
mov
sahf
jne
frstor
andl
test
pusha
lret
lds
mov
ret
cld
push
inc
sbb
or
pop
and
sbb
adc
pop
sti
xor
add
add
das
or
mov
and
mov
dec
arpl
sbb
test
icebp
pop
stc
lcall
push
lods
imul
sbb
loop
test
aas
gs
push
aad
nop
enter
push
andb
pop
test
aam
pop
jecxz
out
sbb
mov
sti
jg
pop
xor
ficoml
scas
sub
and
jmp
sti
lahf
mov
movsl
mov
mov
pop
inc
repz
scas
ljmp
pop
lret
or
mov
sbb
xchg
neg
mov
xorl
insb
les
mov
rcr
sub
pop
pop
push
jge
add
mov
xor
xchg
fxch
cmpsb
mov
add
les
jmp
add
out
or
and
dec
adc
dec
cltd
movsb
push
sti
pop
shrb
jo
push
jo
in
push
sbb
or
hlt
xor
mov
or
pop
cltd
mov
mov
mov
iret
mov
lds
push
cmp
push
pop
mov
in
cmp
and
cmp
mov
mov
dec
mov
xchg
outsl
jae
in
cmp
or
movl
sbb
cltd
loop
add
xor
push
push
jo
lods
and
mov
repnz
cmpsb
push
nop
dec
adc
jns
inc
push
mov
fimull
lods
das
mov
out
mov
mov
mov
cltd
ret
add
mov
test
faddp
mov
jns
push
inc
std
mov
cmp
fimull
xchg
push
and
mov
add
sbb
ret
adc
adc
add
mov
push
loope
popf
cmp
cld
or
pop
pop
icebp
mov
jg
stos
in
xor
ljmp
mov
icebp
sti
mov
fs
mov
cmpsb
adc
lea
sahf
icebp
addb
test
xchg
push
cmp
cmp
xchg
jb
rolb
cmp
jp
js
push
jo
mov
fdivl
mov
arpl
hlt
gs
cmp
mov
daa
push
repz
iret
jne
fsubs
mov
pop
les
push
subb
cmp
sub
mov
pop
xor
hlt
and
inc
aad
rcrl
pop
pop
fs
or
sbb
daa
pop
xchg
jnp
xor
pop
adc
enter
lock
aad
cmpsl
in
ds
repnz
push
repz
dec
mov
mov
aas
inc
dec
pop
cmp
push
and
sub
adc
addr16
jne
leave
in
mov
dec
jl
loope
and
cmp
pop
mov
mov
shlb
pop
sbb
movsb
pop
call
movsl
pop
xor
or
push
dec
jae
jbe
xchg
out
pop
loopne
push
xor
dec
dec
lret
jl
mov
inc
mov
pop
ret
mov
pushf
pop
mov
iret
and
int
pop
or
sbb
xchg
add
cmp
sbb
mov
mov
loope
inc
movsb
ret
frstor
push
xchg
fisttpl
push
inc
sub
mov
xchg
scas
and
loopne
int3
and
jp
push
stos
test
pusha
inc
hlt
sti
mov
loop
jo
jmp
sub
xor
dec
mov
and
in
int
call
mov
das
neg
test
mov
or
cmp
outsb
js
insl
sbb
in
xor
jb
inc
andb
dec
arpl
or
dec
sub
icebp
xor
jecxz
mov
jg
mov
dec
mov
add
ds
inc
cmpsb
add
decl
hlt
or
sub
in
pop
stos
lods
push
into
mov
in
push
icebp
popf
jae
cli
add
enter
cs
cmp
cmp
jbe
popf
jne
lret
in
inc
inc
aad
xchg
push
icebp
add
rolb
in
cld
push
sbb
in
jmp
sti
fildll
lcall
mov
dec
orb
inc
stos
pop
aam
pop
cltd
and
mov
push
leave
lods
sub
xor
ljmp
test
lea
adc
push
pop
es
pop
nop
aaa
adc
bound
out
pop
mov
push
adc
daa
sbb
out
mov
insb
in
lock
cs
jle
cwtl
cli
sbb
push
mov
dec
mov
mov
cmpsl
ret
inc
ret
mov
testl
cld
cmpsb
jmp
daa
js
pop
cmp
sar
repz
out
ss
cld
inc
loop
jp
lret
mov
je
ret
mov
or
int
cmp
repnz
insl
daa
nop
add
pop
ficomps
fcomip
popa
sbb
xchg
pop
sbb
jge
cmp
xchg
insb
fmull
mov
mov
or
mov
cmpsl
mov
mov
scas
sub
inc
xchg
in
dec
cwtl
shrb
xchg
inc
sub
sbb
addr16
and
imul
inc
sub
fcomps
push
bound
pop
ljmp
xchg
mov
pop
and
adc
dec
ja
stos
test
xchg
jge
clc
lods
jb
mov
push
or
hlt
and
stos
ret
push
jnp
mov
push
imul
bound
adc
outsl
adc
ret
popa
fidivrs
mov
mov
xor
js
xchg
add
xchg
xor
in
dec
aas
cmc
push
add
or
loopne
sahf
sub
mov
push
enter
pop
loope
lea
ret
mov
fdivl
sti
adc
sub
cmp
mov
jmp
and
sbb
dec
int
adc
xchg
and
sub
sbb
sub
push
js
inc
jae
pop
stos
in
test
inc
push
pop
sti
jecxz
rorl
int3
out
cmp
xchg
jnp
sub
adc
and
or
dec
imul
and
dec
adc
cmp
scas
push
xor
pop
leave
pop
dec
insb
sbb
add
dec
push
ja
pop
call
cmp
outsl
dec
pop
imul
stc
xchg
ja
fs
cwtl
sbb
call
jp
enter
repnz
pop
jns
push
cmc
cmpsl
jge
mul
cmp
inc
cmp
cmpsb
stc
repz
out
sub
adc
push
ds
adc
stos
or
add
loopne
aaa
mov
dec
mov
stos
mov
das
iret
aad
push
repz
stos
rorl
mov
adc
cmp
fdivp
ljmp
addr16
mov
jmp
dec
fisubs
icebp
inc
js
aam
ret
subl
xor
mov
jecxz
js
add
cs
rolb
out
hlt
adc
dec
in
shll
pushf
sbb
stc
pop
and
or
mov
stc
pop
shl
nop
push
rclb
mov
mov
sub
aad
sbb
fidivrs
add
mov
xor
pop
popf
fidivrs
lcall
xchg
jg
fisubrs
outsl
movl
daa
je
jp
jg
sub
inc
xlat
scas
not
das
add
outsl
je
sbb
lcall
add
push
arpl
nop
ret
push
jae
test
pop
cmp
mov
js
cld
mov
scas
xor
in
cmp
mov
movsl
ret
pop
test
add
sbb
popa
movsl
xor
mov
cmp
jbe
sub
shrl
and
push
dec
add
jmp
xchg
cld
mov
push
inc
shl
ljmp
cmpsl
xchg
not
and
mov
inc
and
jge
and
cs
daa
or
ja
aaa
pop
imul
popl
dec
or
mov
ret
jmp
mov
fpatan
cmpsl
mov
and
mov
add
adc
sbb
lret
mov
mov
jnp
dec
daa
cmp
ss
sbb
scas
xchg
cmp
mov
gs
hlt
aas
std
xchg
movsl
leave
cmp
hlt
or
jb
add
xor
or
push
iret
fcmovnu
jp
add
movsb
imul
and
test
or
imul
mov
dec
push
push
loope
push
lds
xor
or
add
sub
jae
inc
gs
sbb
leave
test
nop
popa
sti
sub
dec
ljmp
mov
xchg
clc
iret
xor
add
sti
mov
dec
adc
lea
push
clc
jg
jmp
test
leave
fdivl
mov
cwtl
jg
cmp
jg
jl
je
aam
mov
cmp
pop
mov
xlat
ret
xor
xor
dec
test
jae
fwait
lcall
mov
cld
fildll
scas
stos
loop
in
fistpl
and
sbb
shlb
call
xchg
repnz
fidivs
pop
in
sbbb
in
cmp
shlb
mov
mov
xor
sub
ljmp
in
inc
ja
sbb
push
sbb
and
xchg
fnstenv
bsr
sbb
xchg
mov
cmp
pop
mov
and
ret
insb
fisttps
pop
dec
mov
das
loop
outsl
jle
and
jl
jmp
addb
adcb
cld
and
push
fsubl
push
out
push
mov
inc
movsb
mov
add
ret
mov
loope
in
mov
push
jmp
mov
push
das
sbb
mov
imul
lahf
lret
data16
and
cmp
pop
inc
mov
scas
inc
rcll
xor
in
and
xchg
push
fdivrs
push
mov
push
cmpsl
inc
xchg
ss
insl
lods
fistl
subb
out
test
lahf
jmp
or
hlt
punpckldq
addr16
decb
iret
mov
stc
or
and
outsl
mov
addb
xchg
dec
jp
fbld
mov
out
xchg
inc
test
dec
inc
lods
test
movl
roll
scas
int3
sahf
movsl
push
divps
mov
hlt
mov
sar
out
addb
add
xchg
jb
bound
outsb
notl
push
jl
call
jge
es
ret
lock
sbb
cmp
and
sbb
lods
or
sahf
mov
test
in
pushf
test
inc
pop
test
mov
addr16
jg
out
das
mov
sahf
and
xchg
sbb
mov
aad
sbb
in
or
lcall
scas
mov
pop
and
push
mov
sub
push
arpl
inc
mov
inc
sahf
mov
cmp
or
pop
dec
pusha
xchg
sbb
cld
or
push
mov
iret
push
leave
push
push
repz
test
mov
andl
incl
and
aad
cmp
lret
and
fdivr
movsb
mov
jbe
xchg
movsl
jmp
push
jp
sar
in
adc
sarl
push
aad
stos
ljmp
repz
push
mov
pushf
pop
int
mov
imul
xchg
mov
sub
sti
mov
in
sti
scas
mov
xorb
ret
or
stos
pop
push
data16
mov
stos
mov
cli
inc
mov
sbb
mov
daa
xchg
movsb
sbb
in
xchg
sbb
fildl
adc
pop
add
xchg
aad
cmc
popf
popf
out
repz
in
in
xchg
test
addr16
jl
das
iret
les
hlt
ljmp
push
add
mov
jmp
out
cmc
mov
cld
pop
iret
pop
add
push
imul
jb
dec
xor
jge
jnp
pop
jne
dec
ficompl
and
in
repnz
ror
les
sub
scas
shl
into
jp
push
xchg
adc
shll
cltd
push
dec
cmpl
inc
adc
call
adcb
push
xor
aad
stc
popf
test
xchg
fcmovnbe
test
sahf
or
and
leave
sbb
pusha
out
or
sbb
cltd
rcl
inc
shl
mov
leave
cltd
xor
pop
xchg
mov
and
xchg
fmulp
out
cmpsl
jp
pop
push
outsb
bound
or
repnz
add
js
push
dec
mov
testl
and
pop
in
ret
adc
js
mov
addr16
push
aaa
mov
scas
mov
add
outsb
xor
jmp
or
push
scas
sub
sub
dec
sub
rcrb
xor
in
push
mov
lcall
add
push
or
pop
mov
inc
loopne
push
sbb
mov
pushf
jl
jl
and
xor
rolb
and
sbb
xlat
push
scas
xlat
jecxz
outsb
and
aas
std
je
sub
and
ja
jns
es
dec
mov
lock
dec
stos
pop
jl
xchg
jb
mov
or
gs
mov
xchg
data16
leave
inc
stc
andb
xor
iret
bound
int3
add
adc
sub
outsl
jmp
push
cmp
xchg
add
stos
mov
xorl
push
js
dec
mov
addr16
ja
sbb
insb
jecxz
fs
push
fs
jnp
and
ret
sub
xor
int
pop
shl
xor
cmpb
push
in
mov
std
in
xor
push
adc
dec
cmp
xor
insl
idivb
sub
sti
mov
out
xor
xchg
mov
stos
out
call
sub
cmp
repz
cs
mov
rclb
jge
push
add
xlat
mov
and
inc
outsl
call
out
adc
fldenv
pop
std
fwait
int
xchg
nop
out
mov
mov
or
or
roll
sbb
icebp
inc
mov
jae
popa
push
loopne
and
cld
sbb
pop
sub
jae
jmp
test
add
sbb
hlt
imul
cmpsl
in
sti
mov
shlb
into
sub
in
or
hlt
jae
and
jnp
push
ret
loope
rorb
lods
popa
jb
and
dec
arpl
mov
push
push
xchg
imul
imul
and
cmp
inc
into
jmp
cmp
xor
icebp
hlt
sbb
inc
fistpll
sub
test
dec
pop
das
testl
sbb
daa
out
xchg
and
cwtl
push
inc
inc
test
xchg
ja
pusha
out
xchg
imull
imul
adc
or
add
shl
add
sbb
jne
out
loope
sbb
fisubrl
mov
mov
push
inc
xchg
arpl
push
test
das
ja
hlt
shl
ret
sbb
sub
or
cmpsl
imul
lods
js
add
cli
pop
scas
inc
sti
dec
test
sti
pop
xchg
xchg
aaa
adc
push
js
pop
jnp
fldl2e
fcomp
xorl
lods
xor
es
clc
sbbl
mov
sbb
fmulp
stc
jmp
in
jecxz
std
push
xlat
imul
and
subl
aad
andl
adc
inc
pop
push
js
cmp
mov
cmpsl
sti
sbb
shrl
xchg
scas
sti
push
mov
mov
dec
les
add
sbb
mov
xor
adc
rolb
mov
out
popf
mov
sbbl
sub
or
inc
adc
sub
stc
pop
adc
fidivs
pushf
push
dec
pop
jle
jb
ja
outsb
inc
cmp
loope,pt
mov
into
push
ret
in
xchg
out
cmp
push
aad
imul
divl
daa
xlat
lret
mov
push
ds
xchg
pop
lods
int
pop
dec
loopne
test
ja
inc
mov
xor
cld
iret
push
add
ja
push
mov
aam
and
mov
sti
push
cli
out
and
jg
cld
mov
add
xchg
aas
rcl
shlb
jmp
ficompl
mov
cmp
jb
push
xor
sbb
pop
sub
addb
jbe
jmp
int3
pop
xchg
sbb
aad
jnp
push
add
push
cmpsl
jb
or
out
sarl
les
pop
fs
cmp
adc
mov
push
cli
inc
mov
lock
in
and
addl
test
jne
fdivs
lret
imul
inc
pop
cmp
testl
aam
dec
test
sub
cmpsl
pop
movsb
and
inc
ljmp
adc
shlb
lds
jg
and
jno
push
imul
aaa
pop
jmp
das
je
pusha
dec
add
adc
and
mov
cld
mov
fs
inc
fcomps
sub
mov
rolb
fsubrl
enter
outsb
test
rcl
and
outsl
jo
movsl
push
stos
dec
xor
movsl
rcrl
inc
cmpsb
rcrl
push
dec
cmp
popa
repz
rcrb
mov
jno
out
dec
mov
and
xor
repnz
dec
dec
dec
and
pop
daa
xchg
movsl
idivl
xchg
pop
mov
sbb
or
cmpsb
ss
movb
dec
add
lret
pop
lea
mov
shll
xchg
mov
or
data16
lcall
scas
jb
add
xchg
data16
push
cmc
push
das
and
test
pop
adc
mov
push
outsb
gs
scas
jl
mov
add
mov
xchg
movsb
xchg
dec
movsl
and
aaa
add
sub
loope
dec
pop
dec
inc
int3
lods
mov
rorl
inc
std
xchg
and
mov
mov
inc
jbe
xchg
cmp
femms
cmp
outsb
jne
andl
es
push
add
xchg
std
adc
mov
cs
cld
aad
popf
sbb
xchg
mov
and
jge
lea
and
in
and
notl
sahf
movsb
cmp
sub
sti
sub
sbb
divb
in
test
stos
push
das
xor
add
sub
inc
movsl
stos
push
cmpl
aas
sub
push
cs
shl
lahf
jl
repnz
out
out
aas
mov
ror
mov
leave
hlt
add
int
sahf
out
pop
pop
push
sbb
jo
cltd
push
mov
mov
pusha
inc
mov
loope
fbstp
dec
in
fidivs
cmc
mov
ds
jge
insb
pop
jae
pop
jmp
dec
push
adc
imul
pop
fnsave
lret
dec
lret
aad
sbb
mov
das
movsb
mov
inc
pop
cmpps
repz
fnstsw
add
and
iret
int3
dec
and
inc
xor
rorl
push
xor
add
mov
push
adc
push
bound
out
inc
daa
inc
push
add
and
movsl
push
fdivl
insb
ret
pop
repz
loop
mov
lret
divb
stos
sbb
lock
pop
adc
push
adc
jbe
mov
shll
cmpb
add
in
mov
ss
out
pop
mov
pop
imul
mov
xor
cltd
jge
lret
mov
dec
mov
dec
push
mov
inc
fs
lcall
cmc
mov
in
push
add
xor
inc
das
and
cld
pushf
stos
test
mov
jecxz
lock
popl
test
das
inc
ljmp
mov
dec
xchg
imul
inc
dec
dec
std
mov
dec
loope
xchg
insb
cmpsl
fildll
and
pop
movl
mov
inc
out
shlb
movsl
cld
add
inc
cmc
div
jecxz
int
int3
ljmp
pushl
xchg
pushf
and
xchg
jmp
add
push
cmc
loopne
loop
in
sbb
shll
mov
loopne
mov
movsl
insl
mov
or
jne
dec
jge
add
xor
sub
imul
inc
rclb
test
das
jmp
jle
push
jmp
xchg
pop
outsl
fwait
or
mov
mov
es
inc
dec
add
inc
push
xor
je
addr16
popf
pop
cltd
cld
xchg
arpl
sbb
add
insl
lea
sub
jne
leave
mov
xlat
or
les
dec
push
mov
cmc
pop
mov
iret
cld
push
mov
and
dec
sti
jne
lock
clc
int3
xorl
pop
mov
roll
xor
xchg
xchg
call
add
cmp
add
icebp
getsec
push
rcll
rolb
or
mov
icebp
inc
mov
and
in
jecxz
lret
inc
pop
adc
addr16
push
test
int
pop
fwait
imul
and
fmul
or
cwtl
orb
xchg
insl
dec
xchg
inc
adc
cmpsb
inc
and
pop
pop
ss
bound
mov
test
or
ljmp
jae
in
outsl
out
push
sbb
mov
mov
scas
and
xor
sbb
pushf
or
bound
pop
lods
mov
sbb
push
fsubrs
jnp
mov
rcll
jmp
leave
push
filds
or
lods
cmp
jp
push
add
pop
imul
fildll
ret
dec
jg
jl
es
dec
notl
scas
test
aam
push
call
mov
add
insl
gs
or
insl
test
shr
jnp
cmp
fmul
sub
mov
mov
push
shlb
mov
sbb
js
iret
xorl
push
mov
fwait
push
leave
movsl
mov
jmp
inc
out
jno
std
and
xchg
mov
in
mov
dec
fwait
adc
mov
loopne
leave
aas
ja
inc
pop
aaa
pop
mov
and
dec
xchg
inc
mov
mov
insb
outsb
scas
lock
lock
mov
rorl
cmp
enter
iret
roll
mov
mov
fst
lret
jne
push
sub
nop
shlb
push
mov
mov
or
push
pop
lret
lods
fstps
out
lcall
push
pop
xchg
sbb
dec
sub
dec
fldl
cmp
mov
mov
push
jp
rcrb
mov
jl
add
jne
pop
sub
xchg
call
jb
push
adc
adcl
cs
ja
orl
mov
fcompl
xchg
lds
in
and
repnz
repz
fwait
cmc
insl
inc
imul
jmp
and
adc
out
cmpsl
pop
push
sub
test
ljmp
rcrb
gs
leave
and
xchg
dec
ret
pop
xchg
ds
xor
xchg
or
mov
pop
dec
dec
adc
pop
push
shlb
or
sub
mov
je
iret
out
sub
mov
movsb
inc
xchg
sub
mov
sbb
rclb
ds
cld
cmp
adc
outsb
js
insl
jge
jbe
push
pop
in
in
xor
fimuls
out
push
cld
add
push
hlt
push
cmpsl
pop
outsl
nop
lock
inc
pop
push
fsubr
imull
sahf
insl
sbb
cs
fwait
sbb
mov
dec
jbe
xchg
sub
pusha
aaa
movsl
in
imul
sub
in
mov
loope
mov
aas
sbb
cmp
mov
add
push
out
push
ret
push
in
and
inc
push
aas
dec
mov
push
jae
bound
push
xor
sub
test
mov
lret
or
mov
add
int
mov
movsb
loopne
cmp
rcll
lret
xor
jp
xchg
mov
push
sub
lods
loopne
mov
sub
push
push
add
iret
fnsave
cmp
mov
mov
mov
mov
sti
inc
daa
gs
mov
adc
imul
or
ret
or
inc
out
lret
or
pop
stc
out
or
ss
popl
fists
cmp
mov
mov
ja
leave
add
sub
xchg
sub
je
mov
inc
cli
push
push
outsl
je
cld
mov
mov
dec
push
dec
mov
outsl
or
std
scas
cmpsl
fs
repnz
insl
xchg
jnp
pop
push
das
inc
loopne
jecxz
fiaddl
das
ja
sub
shrl
mov
pop
loopne
insb
mov
pop
mov
mov
hlt
jmp
loop
push
push
fcoms
xchg
adc
xchg
hlt
test
xor
cmpsb
cmpsb
dec
pop
mov
xor
jne
fmull
mov
mov
fs
lods
mov
shr
das
pop
into
mov
notb
mov
add
ja
xchg
daa
mov
mov
les
add
sub
bound
mov
stos
insb
mov
ds
ljmp
mov
xlat
mov
fs
mov
sbb
movsl
and
adc
cmpsl
fldcw
push
call
push
dec
jno
and
rol
and
inc
sub
clc
fisttps
andb
dec
or
movsl
sbb
jp
or
sub
setb
cmp
lods
mov
cmpsl
aas
jbe
add
icebp
add
in
xchg
cmp
jns
sbb
mov
sbb
sub
adc
adc
mov
inc
dec
pop
lods
mov
and
scas
ljmp
xor
dec
inc
loopne
and
mov
and
adc
xor
mov
lds
sub
xchg
adc
mov
scas
les
jmp
ret
push
clc
cmpsb
int3
sub
pop
pushf
jo
dec
or
incb
outsb
jl
mov
adc
sahf
inc
push
fwait
scas
in
ficomps
stos
ret
dec
xchg
inc
clc
int3
out
push
push
inc
push
push
cltd
lcall
push
shr
jo
sub
call
pusha
fistps
cltd
test
inc
sahf
insl
lret
sub
movsl
or
xor
scas
repnz
imul
add
movsl
ret
adc
lods
add
cltd
push
mov
cmpsl
mov
jae
lods
fisubrl
sub
hlt
je
sbb
in
loop
jp
jg
loop
jmp
add
leave
int
jp
add
adc
inc
lods
adc
out
pop
push
inc
cmp
clc
jne
les
cmp
mov
popa
js
jae
cmp
sahf
loop
jle
enter
nop
shl
pop
inc
cmp
stos
rcr
repnz
cmp
ja
adc
or
jp
inc
mov
test
sbb
dec
xchg
sti
and
hlt
dec
jae
jne
rolb
mov
pop
lods
sbb
xor
es
lcall
movsb
out
cmp
sub
movsl
outsb
jmp
cmc
addr16
sub
mov
cmpsb
adc
dec
jb
push
cli
in
push
cli
and
movsl
fcoms
pusha
std
test
sub
popf
faddl
ja
pusha
pop
inc
xor
inc
inc
and
cwtl
xchg
push
lods
inc
jmp
pop
push
fst
fmul
sub
adc
ret
aad
push
pop
jp
rcrb
sbb
test
iretw
pop
lock
fs
bound
insl
sbb
mov
and
ds
mov
ret
andl
insl
mov
clc
jge
sub
push
or
push
sub
movsb
mov
inc
pop
lods
repz
adc
test
imul
out
roll
btr
in
xor
repz
push
cmpsl
cmp
xchg
push
rcl
idiv
call
cmp
movsb
dec
dec
adc
fwait
mov
aam
out
and
mov
pop
loopne
rcrl
in
dec
popa
jecxz
hlt
xchg
sub
stc
dec
adcl
and
inc
into
push
mov
inc
push
out
bound
out
ret
cli
jle
sub
lret
sbb
sbb
mov
test
sbb
pop
je
loopne
push
sti
push
lods
sbb
mov
inc
cmp
in
fstpt
and
adc
xor
fs
push
xchg
test
jmp
jne
in
pop
xor
add
or
inc
mov
stos
aaa
fists
stc
das
cmp
fwait
stos
push
or
sbb
add
push
ret
imul
stc
repz
loopne
sbb
fcmove
clc
ffree
shll
add
fnsave
and
in
dec
stc
nop
cmp
shl
int3
or
sub
or
sub
mov
push
xor
xor
adc
xchg
mov
ror
in
push
xor
mov
xchg
data16
push
cmpsb
ljmp
sbb
scas
cmp
leave
fiadds
cmpsb
jbe
cs
mov
adc
mov
cld
sbb
xchg
sub
xchg
mov
add
xor
test
popf
imul
les
dec
mov
sbb
or
stos
andl
sub
jp
pop
lea
iret
adc
jg
sbb
pop
jae
out
xchg
loopne
test
lcall
xor
call
and
sbb
in
xor
mov
ljmp
mov
test
movsb
xor
pop
dec
adcb
mov
pop
push
xchg
adc
cld
fisttps
pop
rcr
daa
adc
in
pop
xchg
movsb
in
pop
cli
push
sbb
mov
es
ja
jb
inc
iret
inc
pop
xchg
loope
fwait
sbb
mov
in
push
push
sbb
push
push
ljmp
sbb
cmpsb
test
cmp
cmp
xor
popa
fisttps
es
cli
push
insl
mov
imul
and
mov
and
inc
sub
mov
out
jns
pop
jne
leave
data16
call
sahf
hlt
les
inc
into
mov
pop
into
pop
icebp
jge
and
cltd
cmp
mov
repz
fs
inc
cmpsb
subb
out
sub
lcall
jmp
decl
stos
jnp
add
daa
adc
xor
mov
idivl
adcb
flds
adc
pop
fmuls
and
and
aas
mov
std
add
cmp
imul
in
ljmp
xchg
jb
mov
iret
in
int3
inc
repz
sbb
mov
mov
in
addr16
fcomps
in
or
cmp
sarl
sahf
inc
je
cmp
repz
xlat
test
sub
arpl
mov
jnp
in
inc
es
std
loope
and
push
outsl
fnsetpm(287
jecxz
mov
push
jbe
js
in
pop
leave
or
or
out
mov
and
mov
outsl
aaa
xor
mov
and
pop
mov
insb
inc
outsb
stc
fildll
in
mov
mov
stos
xor
mov
cmp
adc
lcall
push
idiv
add
ljmp
cmp
inc
shll
ss
into
fwait
repz
mov
add
xor
rorl
test
mov
leave
rcrb
sbb
sbb
cmp
inc
sahf
add
push
sarl
ret
or
cli
add
mov
or
cmp
lret
call
pop
aam
insb
sub
push
js
aaa
pusha
sbb
mov
scas
pushf
mov
xchg
mulps
and
cltd
sbb
adc
cmp
popf
shlb
dec
sub
cli
lcall
sbb
xor
ja
arpl
add
or
sbb
sarl
aam
pop
fwait
jae
push
inc
jmp
ljmp
or
arpl
fs
sub
insb
or
mov
adc
stc
into
rcrl
push
lret
xchg
imul
xchg
xchg
pop
and
jp
adcb
inc
in
inc
repz
in
mov
ljmp
jmp
sbbl
or
jbe
lret
cmc
mov
out
enter
loopne
and
into
push
jns
in
inc
xchg
repz
stos
sbb
aam
in
inc
sbb
fstps
xchg
jbe
insl
jae
sbb
loop
add
mov
xchg
cld
cld
in
dec
sbb
inc
add
lds
sub
or
and
sbb
test
adc
xchg
imul
sub
ja
movsl
lods
jb
ja
out
ljmp
push
push
decl
xor
rorb
dec
ss
mov
scas
cmpsl
or
push
imulb
sbb
jl
cs
mov
adc
enter
mov
sub
inc
cwtl
leave
sbb
pop
mov
pop
xchg
mov
shll
mov
in
add
outsl
cmp
inc
cmpsl
mov
push
inc
fnstsw
shl
lods
outsb
add
inc
hlt
jo
cltd
incl
ret
es
pop
lahf
rcrl
push
fisubs
add
out
mov
iret
pushf
pop
bound
faddl
add
mov
out
sbb
ja
sub
je
xchg
inc
cld
inc
imul
mov
mov
sub
out
sti
aam
lahf
inc
scas
iret
add
sub
repnz
dec
in
sar
jg
mov
into
sbb
andb
arpl
lea
dec
adc
movsl
sbb
pusha
mov
mull
fistl
lea
cmp
addr16
cmp
sti
adc
mov
and
add
sbb
adc
cmpsl
inc
in
cli
xor
je
inc
inc
aaa
shrb
loopne
scas
xchg
jge
mov
mov
xlat
pop
mov
jnp
leave
loope
ficoms
and
stos
ds
push
adc
pushf
inc
add
or
iret
or
inc
in
out
and
add
and
pop
add
rcl
shl
xchg
pop
inc
push
ds
lcall
insl
dec
stos
leave
dec
mov
in
push
clc
or
sbb
cld
test
sarb
push
push
jg
arpl
cmova
std
add
xchg
insl
pop
xchg
into
jb
push
dec
mov
xlat
mov
clc
cltd
jns
daa
shl
mov
ret
movl
add
clc
mov
xchg
popa
and
fldt
push
pop
hlt
xor
sbb
das
ficoms
mov
mov
nop
add
add
push
add
imul
fidivrs
cmc
mov
sub
cwtl
stc
jmp
cmp
addr16
jle
insb
or
push
adc
jbe
cmp
or
out
add
shr
daa
push
add
rcrl
mov
lock
sbb
jbe
in
cmp
push
mov
loopne
fldcw
or
in
xchg
jne
cmovnp
rclb
xchg
outsb
lahf
jl
pop
mov
cmpsl
mov
add
ljmp
xor
arpl
push
addr16
push
push
in
push
xchg
or
fucomip
nop
dec
leave
mov
call
inc
xor
loop
lds
in
fucomi
out
mov
in
mov
rolb
jp
cwtl
fsubrl
push
out
aam
push
mov
insb
adc
cmp
xor
sub
mov
sub
scas
push
sbb
jp
pop
sub
mov
idiv
arpl
scas
insb
and
pop
dec
loope
xchg
mov
outsl
jecxz
dec
sub
les
stos
sbb
mov
into
stos
pop
sbbl
fs
pop
or
sub
mov
adc
fnsave
jae
popf
out
repnz
imul
jge
mov
jp
insb
adc
test
or
clc
stos
lcall
fcoml
inc
mov
mov
icebp
adc
mov
mov
js
mov
or
cmpsl
cwtl
mov
sub
lahf
jle
mov
das
or
push
jb
sub
scas
xchg
xchg
mov
pusha
cmp
into
inc
leave
push
loop
ds
and
stos
mov
push
mov
rcl
xchg
std
and
addr16
mov
jp
insl
xor
add
jmp
inc
push
aas
jge
rcll
ror
scas
pop
out
add
stc
int
sub
xor
mov
and
mov
add
icebp
adc
jp
add
pushf
mov
aas
mov
notl
mov
imul
jnp
dec
jmp
insl
loope
or
int
es
shrb
xchg
mov
aas
inc
fmul
mov
add
mov
add
pop
pop
lock
xor
scas
daa
je
sub
mov
inc
push
aam
add
sbb
adc
cmp
pop
and
stos
jg
xchg
jae
mov
out
sti
in
xor
fwait
enter
dec
mov
das
push
xchg
test
mov
adc
mov
mov
dec
stos
arpl
out
arpl
lock
lret
push
je
pusha
sbb
pop
les
or
add
push
fstps
sub
xchg
std
iret
add
ljmp
adc
fcomi
cmc
scas
cs
lods
in
lret
push
mov
cltd
sub
inc
bound
push
and
pop
enter
test
mov
push
mov
xchg
xchg
xchg
jne
cmp
test
lds
mov
in
cmp
jae
xor
jg
lea
jl
sbb
stos
es
push
inc
jae
mov
jmp
sbb
mov
mov
scas
call
and
mov
sbb
repz
addr16
daa
inc
mov
cltd
out
dec
mov
jg
dec
movsb
int3
adc
xor
xorl
adc
dec
and
pushf
leave
pop
dec
jmp
mov
jmp
loop
or
insl
repnz
mov
stos
movsb
mov
sbb
je
adc
cmp
dec
cmp
jp
sbb
xchg
push
inc
roll
frstor
mov
repz
loopne
mov
dec
inc
aaa
add
scas
stos
pop
adc
int
xchg
ja
inc
inc
shll
shll
mov
adc
dec
out
jnp
sbb
push
mov
mov
mov
mov
add
cs
mov
sti
sub
jmp
push
int
push
push
sub
push
inc
push
mov
push
fnstenv
sti
popl
pop
das
mov
jmp
pop
sbb
movsb
rcrb
sbb
movsl
jne
push
push
test
ret
rcrl
loope
jle
lea
test
jnp
add
movsl
and
xor
cld
insl
ficoms
addl
shl
pop
mov
dec
data16
and
lds
sahf
mov
sub
lahf
orb
jp
icebp
xchg
mov
and
push
ds
insl
imul
xchg
movsb
xor
lock
push
cmpsl
mov
cmpsb
pop
dec
xor
mov
popa
pushf
mov
subb
sahf
ret
mov
xchg
filds
mov
push
sbbl
xchg
push
mov
push
dec
adc
push
insl
mov
fisubrl
out
aam
fcompl
mov
mov
outsb
inc
pop
xchg
mov
lret
fcoms
inc
movsb
dec
lods
pop
loopne
aad
cwtl
lock
scas
icebp
popa
ljmp
add
dec
and
lods
jbe
adc
das
mov
fldcw
imul
xor
movsb
or
andb
sub
popa
les
es
addb
cmpsl
stos
bound
mov
xor
in
repnz
and
xchg
add
mov
in
pop
dec
sbb
loope
cmp
dec
push
jl
cmc
aad
xor
in
add
add
scas
mov
fisttpll
lret
jbe
mov
xchg
or
gs
xlat
dec
sahf
test
mov
popf
mov
lret
loopne
and
push
lcall
inc
pop
mov
dec
mov
inc
lret
pushf
mov
jb
push
jecxz
pop
lret
call
xchg
jecxz
jno
xor
test
jg
cwtl
testl
es
fldt
shlb
pop
mov
adc
in
je
in
xor
push
in
in
cmp
lods
dec
adc
xchg
push
loopne
dec
jae
mov
sbb
ror
push
fldenv
int3
call
mov
ja
adc
sub
arpl
push
push
std
out
jg
add
mov
xor
jecxz
sub
cmpsl
movsb
inc
mov
cld
jg
aas
xchg
in
les
jecxz
shll
adc
imul
sti
mov
idivl
ret
add
loop,pt
repz
xchg
iret
aam
loope
hlt
adc
test
dec
fsubl
mov
fisubrs
xchg
mov
fbstp
dec
movsl
and
cmp
sbb
insl
pop
push
arpl
in
push
jae
pop
mov
out
les
std
pop
xchg
dec
jmp
xchg
pop
call
dec
pop
sub
ds
xor
and
xor
lahf
in
inc
push
jae
xor
in
add
rorl
jle
cmc
jecxz
js
fwait
mov
sub
ret
dec
xor
xchg
sbb
inc
inc
and
pop
mov
xchg
sarb
xchg
lret
insl
push
add
test
or
sub
leave
or
outsl
sahf
mov
dec
mov
xchg
notl
test
popf
js
loop
pop
mov
outsl
arpl
daa
mov
mov
es
adc
nop
inc
in
test
push
or
sub
addr16
cld
jns
les
inc
push
jne
mov
insl
jp
leave
lds
xchg
xlat
xlat
imul
xchg
mov
pop
lods
jne
aas
xchg
jecxz
and
in
scas
out
mov
xchg
push
mov
les
mov
or
loope
enter
cld
add
mov
fcoms
adc
js
ror
sub
jbe
scas
pusha
and
loopne
dec
addr16
repnz
loopne
mov
xchg
out
aaa
ja
jno
adc
aaa
xchg
xor
sbb
and
test
call
sub
sbb
push
pushaw
rcll
nop
xor
adc
pop
xchg
movsl
adc
push
insb
sahf
data16
in
dec
imul
mov
pop
pop
sbb
sbb
and
and
aaa
sbb
es
or
dec
ljmp
pop
push
jmp
leave
and
mov
or
std
inc
mov
mov
jl
and
xchg
sbb
ficompl
cmc
add
enter
xor
dec
js
push
clc
in
icebp
mov
pop
lcall
aaa
fcompl
inc
adc
out
test
cmc
icebp
xor
mov
mov
shl
out
imul
lcall
aad
test
loopne
imul
dec
pushf
and
int3
and
fists
add
push
sub
add
fsubrp
jns
inc
lret
cld
and
js
aas
pop
pop
pop
movsl
jne
pop
orl
add
cmpsl
fwait
aaa
jbe
and
les
decl
data16
sbb
imul
push
pop
inc
xchg
in
mov
in
jo
adc
cmp
pop
push
data16
cmp
pusha
cmc
pop
ss
cwtl
loope
pop
ja
imul
sbb
pushf
into
pop
jo
lea
popa
inc
gs
jmp
imul
loopne
pop
jp
jno
add
xor
lods
push
sar
push
and
mov
adc
xlat
js
sarl
scas
cmp
push
xlat
xor
cmp
hlt
cmp
fcoms
pusha
sahf
lahf
and
mov
sub
xchg
push
aam
aaa
adc
xchg
cmp
arpl
or
push
cmpsl
shrb
lret
out
sub
pop
cmp
std
arpl
cmpsl
cmpsb
push
pop
adc
outsb
popf
cld
sbb
std
mov
cmpsb
scas
or
hlt
outsl
xor
sub
mov
jbe
fistpl
mov
scas
xchg
fnstsw
nop
outsl
lods
pop
ret
lret
or
cmp
test
imul
cmpsb
cmp
push
pop
push
lods
or
xor
out
pop
test
inc
fs
outsb
sub
je
pop
out
repnz
imul
shrb
dec
or
jnp
jg
sub
mov
fisttpl
in
push
inc
pushl
jnp
orl
lahf
mov
lret
xchg
jo
mov
rcrb
jg
dec
jns
jle
aas
and
pushf
cmp
idivb
nop
xchg
pop
sbb
jb
rorb
adc
jmp
and
into
ds
fs
cmp
mov
sbb
cld
ljmp
cmp
inc
adc
cmp
fld
shll
stc
mov
int
movsb
push
shlb
lahf
bnd
sub
sub
popf
sub
test
iret
cmpsl
or
movsl
cld
fwait
aas
inc
push
add
ret
sbb
add
mov
push
sbb
mov
push
xchg
dec
test
iret
mov
fwait
mov
ss
sub
xchg
and
push
mov
jb
pop
mov
mov
mov
scas
ret
cs
imul
das
xchg
jo
push
sub
pop
dec
es
das
shrb
roll
lahf
xchg
jne
pop
les
cli
mov
mov
jmp
mov
add
mov
cmpxchg
and
mov
arpl
jp
pop
clc
sbb
aaa
into
imull
subb
movsb
lea
ret
inc
mov
stc
das
sub
pushf
into
push
les
lock
sbb
mov
lahf
push
add
cmp
jg
push
lock
insb
mov
and
push
or
mov
sarl
es
je
adc
inc
in
loope
mov
popf
sbb
cld
dec
aad
lea
inc
push
iret
mov
or
xchg
sahf
xor
out
adc
mov
mov
add
sub
mov
stos
xchg
outsb
mov
lock
dec
add
mov
out
xor
flds
pop
push
es
pop
ret
cmp
loop
mov
jle
jb
repnz
lods
push
sbb
push
sbb
cmp
call
fsubs
lds
mov
xchg
lea
or
pop
in
pop
sub
shlb
dec
bound
and
loopne
test
lock
stos
cmpsl
std
in
mov
dec
mov
ds
pop
cmpsb
lock
dec
cli
inc
push
add
jo
sub
adc
test
push
clc
push
and
imul
cmp
nop
mov
lcall
cmp
mov
ss
ret
jl
cwtl
dec
xor
jge
or
cmp
in
dec
test
dec
lret
jp
stos
inc
jmp
pop
in
test
dec
adc
pop
sarb
js
mov
xor
outsl
inc
mov
mov
sbb
and
mov
dec
in
xchg
push
clc
cmp
xchg
cmc
cmpl
aas
rcll
xchg
jbe
dec
jge
fcoml
or
dec
mov
inc
cmpsb
into
xchg
leave
xor
cmpsb
int3
sub
fs
mov
mov
loope
outsl
int3
pop
dec
dec
test
sub
or
lods
pusha
mov
cmp
testb
aam
cmp
jmp
stc
cltd
notb
jbe
pop
mov
sbb
dec
add
pop
dec
popf
mov
dec
mov
pop
mov
push
jmp
inc
loopne
sub
push
or
cmp
mov
sti
dec
push
mov
and
xor
outsb
insl
sbb
mov
inc
push
dec
mov
sub
sahf
xchg
mov
test
mov
ds
out
dec
movl
and
popa
inc
and
outsb
mov
loop
or
xor
pop
xchg
jno
insl
roll
fstpt
imul
inc
pop
or
push
push
lret
mov
repnz
and
sbb
out
cli
fcomps
lea
scas
cmp
jp
lock
in
push
mov
ret
std
jg
dec
les
stos
mov
lea
leave
mov
mov
pop
cld
call
inc
fsubrs
cld
outsb
sahf
add
arpl
fsub
adc
mov
push
repz
cs
add
testb
in
fsubp
dec
cli
out
lea
rorb
xchg
cmp
mov
add
inc
test
xor
mov
or
jns
jae
mov
cmp
cmpsl
inc
cmpl
add
adc
in
xchg
pusha
dec
je
add
inc
data16
push
fildll
adc
sub
mov
fwait
cmp
dec
clc
popf
in
xor
push
jo
outsb
add
xchg
aas
ljmp
sbb
xor
push
in
mov
test
loope
push
fidivl
data16
push
or
xchg
push
out
sahf
jecxz
push
popa
aas
inc
shrl
es
mov
mov
mov
aad
jl
cwtl
iret
or
mov
pop
insb
dec
xchg
repnz
push
mov
and
or
loopne
cmp
daa
aam
mov
aam
mov
jno
pop
mov
es
inc
inc
push
mov
adc
cmp
add
hlt
xchg
cmpsl
xchg
fs
mov
jns
gs
adc
loope
pop
stc
leave
cmc
cwtl
inc
arpl
dec
cmp
xchg
or
repz
lret
push
std
not
mov
sbb
push
sarl
dec
mov
mov
es
lods
sbb
in
aad
lea
pop
push
cmpb
js
and
addr16
arpl
sahf
push
lods
inc
int3
cltd
pop
test
stos
int
jecxz
shll
xchg
es
ret
loope
mov
and
xor
out
ds
aas
xor
fldl
push
fs
sarb
pop
out
stc
fucomp
push
inc
loop
mov
inc
sbb
sbb
das
and
cmpsb
dec
inc
cmpsb
push
fadds
add
test
mov
cmp
mov
cmp
out
xchg
mov
nop
or
loope
repnz
or
insb
insl
dec
jno
mov
mov
sub
test
xlat
jne
test
xchg
dec
repnz
popf
cs
fldenv
mov
pop
fnsave
mov
jae
mov
xchg
ret
das
or
dec
rcl
inc
sahf
sbb
cmp
aam
loop
sarb
lret
movsl
out
test
or
cmp
inc
scas
pop
testb
iret
xchg
cli
clc
out
mov
ss
and
iret
test
mov
sub
inc
je
xchg
int3
mov
xor
mov
mov
sbb
sub
pop
test
dec
or
mov
movsl
push
mov
mov
sbb
into
jae
xor
mov
ja
adc
adc
or
jnp
mov
push
nop
int3
jl
pusha
popa
and
fucomp
mov
out
aaa
loope
test
movsb
dec
and
inc
mov
leave
pushl
ja
movsb
inc
neg
jb
cmc
das
jle
repnz
outsb
jae
out
imul
adc
inc
call
ds
faddp
xchg
mov
mov
pop
cmp
jle
push
outsb
lods
add
mov
cwtl
inc
xlat
dec
sub
ljmp
and
mov
inc
dec
loope
outsb
jne
sahf
mov
stc
ljmp
ja
test
insb
pushf
push
add
popa
cs
mov
popf
pop
push
aad
lds
in
call
jp
lods
cmp
shrl
scas
lret
or
adc
cmp
pushf
ss
ja
rcrb
rcrb
setg
sub
fwait
mov
add
pushf
loopne
adc
insb
test
inc
enter
shl
sub
cli
std
mov
add
jns
mov
sbb
out
add
mov
dec
add
jg
jl
adc
sbb
jge
nop
sbb
add
pop
cli
in
in
xchg
mov
clc
out
jp
cli
mov
hlt
sbb
jle
adc
loopne
fmul
aas
movsb
lahf
popf
or
int
dec
enter
inc
clc
add
mov
out
sbb
add
add
test
rcll
inc
jle
aas
jno
xchg
loop
push
mov
mov
mov
sub
cmp
fs
mov
pop
mov
cmp
push
lret
xchg
jns
insb
jg
arpl
xchg
cwtl
mov
enter
outsl
cmp
or
dec
sub
decl
fcoms
adc
cmp
popf
adc
lret
loope
mov
mov
cmp
push
rolb
fistpll
sbbl
cmp
ss
addr16
ret
sub
scas
and
fldt
int3
mov
sub
add
lahf
bound
jo
cmp
push
les
mov
inc
sahf
sti
aad
imul
into
sbb
inc
mov
imulb
inc
imulb
xor
push
popf
hlt
and
add
xchg
push
lret
xor
xlat
mov
or
mov
xor
mov
int3
push
std
test
add
clc
addb
cwtl
sub
push
xchg
pop
mov
in
push
add
stos
dec
mov
or
dec
scas
iret
push
imul
mov
add
mov
add
mov
sahf
cmpl
jns
loope
jge
xchg
ja
in
cmpsb
lods
insl
and
cmp
cmpsl
and
sub
mov
iret
loop
cmpsl
ret
push
and
loope
cmp
xor
sbb
sbb
pop
lods
mov
lods
test
in
into
dec
je
gs
add
inc
aaa
mov
dec
xor
out
mov
lret
sbb
out
lea
mov
mov
aaa
and
xchg
lahf
push
pop
mov
mov
idivb
pop
xchg
das
push
adc
adc
into
bound
lds
or
adcb
mov
jl
xor
sub
mov
cmp
push
xchg
dec
test
xchg
mov
and
daa
incb
mov
cmp
loopne
nop
pop
pop
arpl
xchg
mov
cmp
pop
inc
cs
adc
sub
mov
sub
cs
test
mov
outsl
cmp
popl
testb
dec
int3
jae
mov
lahf
lods
xor
sub
shrb
pop
lods
lahf
sub
pop
loopne
les
cmpsl
xchg
jg
fstps
mov
into
repz
sbb
push
ljmp
bound
pop
mov
cmp
ds
jo
mov
adc
call
pop
jg
jmp
mov
push
or
mov
push
cs
sbb
mov
and
arpl
sti
in
jp
adc
orl
test
xlat
push
inc
bsr
mull
push
and
xor
inc
mov
xchg
pop
inc
stos
andl
sbb
test
test
push
out
push
les
loop
sub
nop
addr16
fwait
push
sub
test
inc
dec
fwait
lock
cmpl
mov
xchg
push
lods
pusha
cmp
fisttps
mov
push
xor
nop
aaa
push
jae
imul
cs
pop
inc
adc
or
movsl
mov
mov
daa
shll
in
leave
sub
subb
cmp
dec
add
out
pop
pop
mov
sbb
pop
push
or
addb
add
mov
push
ljmp
inc
xchg
movsl
sahf
inc
dec
xor
pop
inc
push
push
js
shrb
subb
mulb
dec
clc
mov
aam
dec
add
cltd
mov
mov
lret
jmp
mov
sub
out
lahf
mov
sub
cwtl
lea
scas
push
aad
sub
mov
or
adc
decl
stos
aam
mov
iret
inc
sbb
cwtd
sbb
xchg
pushf
test
imul
sbbl
and
xor
sbb
cmp
inc
sub
imul
xchg
in
cmpsl
xor
icebp
mov
sbb
popf
popa
push
adc
in
hlt
scas
adc
mov
fstps
lret
push
gs
jae
sti
bound
cmp
sbbb
sub
push
lahf
xor
mov
loope
in
and
std
int3
pop
addr16
inc
ds
push
xchg
dec
lds
or
adc
mov
aaa
mov
incb
sahf
jle
out
sbb
jae
sbb
inc
scas
je
pop
aam
mov
lcall
mov
sbb
scas
push
dec
cmp
jecxz
cli
sahf
mov
push
in
fisttpl
sti
adc
push
jmp
popa
mov
cmpsb
ret
cmc
push
aaa
out
rcrl
push
loope
mov
jne
dec
jnp
sbb
rclb
test
inc
in
sbb
jg
fldenv
or
mov
dec
pusha
ljmp
xchg
sub
call
mov
pop
shrl
lea
push
subb
sbb
jns
add
mov
xchg
loopne
ret
add
jae
pop
movsb
testb
int
push
lcall
out
aam
jnp
pushf
cmc
cmp
sub
add
aaa
adc
adc
movsl
adc
push
inc
shll
jle
jbe
sbb
outsb
sbb
loopne
out
cmc
mov
dec
fimull
pop
mov
mov
test
mov
adc
test
push
rcrb
and
sub
je
sbb
nop
and
popl
loopne
ss
notb
sahf
add
push
mov
xor
sbb
add
add
fistl
xor
pop
js
cmp
mov
or
pop
cmp
in
je
and
lret
xchg
jmp
sti
clc
xchg
jge
mov
dec
aad
cmp
adc
test
rorl
sub
out
mov
loop
test
ret
or
dec
pop
xchg
ud2
mov
nop
sbb
movsl
repnz
cmp
adc
cmp
out
lret
dec
je
fldl
icebp
inc
cmp
pop
je
and
pushf
lret
cmp
pop
cs
inc
dec
jb
mov
mov
in
in
inc
bound
pop
fmuls
mov
adc
adc
push
pusha
popa
push
lds
jns
out
pusha
cld
jge
fstl
cmpsb
lret
hlt
pop
pop
fwait
xchg
fs
and
sub
cmp
test
leave
lcall
into
ret
and
add
add
push
sbb
es
daa
xor
test
push
pop
cmp
daa
fstpl
testb
insl
scas
popf
mov
es
vmread
or
enter
loope
add
inc
pop
inc
lcall
and
and
cmp
inc
mov
mov
movzwl
cmp
pop
and
adc
dec
scas
jne
jl
adc
inc
push
insl
lahf
outsl
lret
loop
add
mov
cmpsb
mov
adc
dec
mov
sbb
pusha
pop
cli
lds
add
mov
mov
mov
pusha
jecxz
jae
loopne
mov
pop
sahf
daa
jno
mov
sbb
loopne
and
lods
shr
outsl
subb
inc
jns
cmp
jbe
jno
add
and
dec
mov
das
dec
push
scas
push
sbb
icebp
xor
push
push
icebp
sbb
add
cmp
add
sub
mov
adc
inc
sbb
ljmp
std
cmp
mov
leave
ja
xchg
or
pop
or
int3
and
and
cwtl
inc
adc
mov
les
or
sbb
nop
and
sub
pop
inc
fcmovnbe
fwait
adc
and
sub
inc
sbb
repz
sub
mov
mov
or
divb
fdivs
mov
jae
cmp
movsl
or
clc
and
sub
or
xor
sbb
mov
icebp
pop
enter
cmp
clc
or
fisttpl
into
add
stos
add
cmpsb
sub
sbb
ja
mov
loopne
mov
out
jb
jo
sbb
testb
xchg
or
std
adc
fsubrl
cli
fidivs
xchg
mov
push
add
mov
push
lret
ret
ret
cmpsl
jno
or
mov
mov
and
jl
sbb
ret
jp
cli
mov
adc
adc
xor
dec
pop
adc
ficomps
dec
out
push
inc
sbb
int3
enter
dec
mov
addl
jo
out
jecxz
adcl
jge
adc
test
test
sub
out
icebp
in
insb
xor
sahf
jbe
ljmp
jp
inc
js
mov
sbb
insb
pop
jnp
pop
mov
out
xchg
mov
fwait
mov
push
cmp
or
popf
xchg
add
add
fcmovnu
test
pop
inc
and
mov
mov
xchg
leave
xor
mov
dec
push
mov
fwait
popa
cmp
jge
je
mov
decb
shll
rcrb
jp
addr16
jle
adc
and
xchg
icebp
lret
std
mov
or
xor
aam
pushf
cmpsl
pushf
data16
push
clc
emms
scas
arpl
aam
test
ja
jno
fstpt
jg
jns
adc
dec
aam
mov
popa
pushf
pop
test
mov
mov
sub
add
add
movsb
mov
pop
leave
lods
lods
jg
push
sahf
sub
add
mov
bound
cmp
sbb
stc
hlt
js
dec
pop
mov
outsb
pop
out
push
out
lds
test
mov
xorb
inc
mov
les
sub
pop
pop
push
lds
roll
push
push
jnp
fcoms
into
lock
cmpsb
xchg
xchg
mov
gs
pop
out
lea
push
xlat
jp
xor
mov
or
aad
or
aas
arpl
jmp
outsl
xor
cli
mov
jae
and
fadds
add
in
and
jg
sbbl
fcomps
aas
rcrb
mov
out
and
mov
pop
bound
mov
imul
pusha
lret
enter
jmp
lcall
aam
or
into
in
xor
popf
push
pop
push
lahf
arpl
adc
jge
xchg
mov
pusha
xchg
cltd
mov
rclb
cmp
enter
mov
lret
insl
adc
out
and
cmpsb
call
push
xor
outsb
cwtl
mov
xor
sahf
or
jmp
cltd
mov
or
dec
xor
gs
gs
push
jecxz
jle
sub
xor
test
pop
insb
addr16
ds
shll
out
fidivl
xchg
das
popa
mov
repz
lea
xchg
shl
fldcw
aad
xchg
int
mov
dec
ds
into
adc
and
dec
aam
adc
pop
inc
cmp
adc
cs
ljmp
mov
in
inc
pop
push
mov
cmpsb
mov
or
outsb
inc
add
fs
je
shl
pop
fabs
xchg
js
push
scas
rolb
push
lret
imul
pushf
add
loop
inc
dec
add
cs
int
jmp
or
jmp
pop
loop
pop
rolb
push
jecxz
dec
jno
dec
mov
and
jae
popa
dec
sub
mov
call
xor
mov
hlt
mov
xchg
push
jno
inc
sub
jnp
daa
dec
js
or
in
mov
xchg
or
in
stos
fldl
add
push
ljmp
pusha
mov
adc
cmp
cmp
movsb
xor
and
inc
dec
lods
leave
sbbb
cmp
and
mov
adc
sbb
imul
cltd
sub
xor
lahf
gs
jnp
out
jg
pop
sub
mov
mov
cmp
aas
scas
shlb
cmp
cmp
sub
je
cmp
sub
xor
aaa
jns
push
cmp
les
in
pop
inc
lods
mov
jae
mov
stos
ss
stos
hlt
enter
dec
ret
dec
jp
in
xor
cmp
popf
mov
xchg
sbb
jo
lock
aas
add
adc
icebp
xchg
jmp
sbb
or
jecxz
or
stos
cltd
icebp
es
sub
test
push
push
sub
ljmp
aam
dec
pop
pop
mov
sub
inc
add
int
mov
js
jb
insl
popa
push
jnp
fbld
mov
pop
pop
push
push
xchg
addr16
jl
in
add
cli
insb
xchg
jg
lods
push
and
xchg
push
lret
outsl
mov
or
sub
cmpsb
xchg
jnp
pop
xchg
idivl
test
xchg
push
int
jp
repnz
mov
test
xchg
sub
ljmp
test
mov
out
fsubs
cmp
js
xorl
xchg
repz
addr16
mov
add
xor
sub
xor
inc
xor
lods
and
mov
pop
and
hlt
xchg
mov
out
sbb
ds
idivl
and
enter
out
loope
mov
xchg
sbb
push
ud0
pop
jg
sti
outsb
fwait
stc
repnz
mov
adc
and
bound
stc
jg
jp
inc
outsb
stc
push
xor
bound
loope
ja
ja
jo
dec
std
sub
or
pusha
loope
into
pop
aas
xchg
cmc
push
lock
insl
ljmp
mov
dec
lods
sti
test
mov
inc
sbb
jecxz
jg
push
jmp
mov
scas
scas
and
sub
movsb
stc
pop
xchg
xchg
movsb
out
fnstsw
xchg
int
push
mulb
fs
mov
cmpsb
pop
jecxz
jle
lods
fstpt
gs
scas
or
dec
sub
mov
stos
jbe
out
adc
aam
xor
loop
test
in
out
pushf
std
adc
xchg
lret
xchg
fisubs
xchg
test
jnp
sahf
leave
jge
adc
andl
cmpsb
push
jg
push
jnp
mov
ds
pop
setg
add
cmpsl
loop
test
push
in
adc
pop
sbb
lods
push
and
mov
std
mov
mov
xor
mov
jg
inc
sub
bnd
cwtl
aas
jle
add
sbb
mov
addr16
into
jo
jg
hlt
cmp
orb
cmc
sub
popa
add
lahf
in
inc
fsubl
fwait
lods
mov
sbb
push
pop
movsl
and
sub
hlt
hlt
into
aad
jbe
xor
mov
mov
loope
js
in
das
stos
inc
jbe
jns
dec
adc
shll
lods
popf
out
sub
adc
xor
dec
test
lcall
xchg
mov
xchg
inc
insb
pop
mov
out
jns
xchg
stos
repz
int3
add
pop
jl
pop
imul
lcall
sbb
mov
adc
xor
loopne
std
jb
int
lds
xor
cmpsl
mov
adc
in
je
fsts
sbb
sahf
out
xchg
aaa
imull
cld
push
addr16
xchg
ljmp
jl
stc
inc
icebp
shrb
jns
test
aaa
aam
pop
pop
pop
mov
mov
hlt
shlb
in
in
push
fmull
daa
mov
mulb
dec
xchg
hlt
xor
sahf
mov
adc
pop
cmp
push
pop
jecxz
imul
in
push
into
cs
fisttps
lods
add
scas
fdivp
lods
fsubrl
rep
sbb
loop
test
mov
das
cltd
and
dec
or
dec
lock
sbb
dec
cli
sti
ficompl
dec
outsl
in
lock
daa
dec
cmp
jbe
pop
daa
cmc
out
add
out
ljmp
jle
xor
pushf
mov
xchg
and
push
loope
pushf
nop
fstps
jno
sub
or
aaa
jmp
mov
dec
dec
mov
mov
cltd
sbb
imul
fldl
int3
sbb
jb
ror
lods
and
movsb
bsf
or
lock
mov
loope
mov
xchg
lods
mov
cld
mov
and
repz
stos
push
into
es
push
in
xchg
pminub
mov
cmp
jmp
scas
lea
je
mov
pop
iret
jns
inc
sahf
popf
fimull
mov
mov
testl
mov
inc
std
sahf
and
cmp
mov
movsl
bound
sbb
and
js
add
std
fcmovu
pop
dec
pop
hlt
arpl
and
rol
pop
es
clc
push
inc
cld
incl
pushf
xchg
mov
dec
outsl
cmc
jo
push
add
mov
jmp
mov
fistpll
lea
scas
insl
fwait
cmpsl
lock
pop
sub
hlt
std
cmpsb
movsl
cmp
mov
mov
jb
dec
leave
sub
push
fwait
sbb
mov
push
add
loope
sub
fisubrs
pop
faddl
inc
cmc
add
dec
mov
inc
mov
push
lods
fdivs
pop
xor
dec
inc
add
xchg
out
rorl
icebp
mov
enter
cltd
mov
or
and
loop
cmc
mov
orl
xor
fistl
push
cmp
aad
movsl
jb
ret
cmpsb
popf
imul
mov
stos
add
push
gs
push
lea
shl
mov
pop
daa
insb
lods
xchg
xor
cltd
mov
inc
mov
dec
mov
stc
dec
cld
out
subl
adc
jle
mov
dec
iret
subb
cmpsl
and
lds
mov
or
in
xchg
inc
sti
lcall
loopne
dec
push
int3
cltd
mov
pop
and
dec
xor
hlt
scas
mov
repnz
lahf
xlat
jl
sbb
push
jmp
mov
fadd
fiadds
add
add
cld
jnp
jae
ret
xor
mov
mov
dec
subl
mov
jae
dec
xor
pop
adc
pop
dec
cmp
lods
in
mov
xchg
pop
inc
ret
mov
sbb
jmp
decb
mov
cltd
test
fmull
pop
insw
jle
lret
mov
cmp
jmp
scas
dec
test
pop
jb
push
jns
jbe
jnp
adc
sahf
repz
jnp
imul
mov
push
ss
mov
dec
pop
push
push
ficomps
xchg
push
lock
mov
inc
cmp
push
xchg
cmp
loop
inc
inc
sbb
adc
ljmp
pop
or
clc
xchg
adc
daa
pop
pop
into
pop
xor
and
das
xchg
hlt
icebp
sub
fdivs
arpl
sub
daa
jle
mov
popa
mov
push
mov
incl
jmp
mov
cltd
push
lahf
mov
in
sub
je
out
dec
fsubs
xchg
mov
test
ljmp
popf
sub
jecxz
pop
icebp
mov
xchg
sti
je
cmp
lret
push
jecxz
in
in
add
push
repnz
addb
lds
test
out
nop
into
stc
xchg
add
cmp
out
cmp
repz
inc
push
mov
inc
sub
or
cmp
cmp
je
jge
out
mov
je
les
fs
or
inc
jecxz
xchg
jb
and
and
cmp
dec
fimuls
pop
mov
movsl
push
movsb
inc
jl
mov
push
xor
aam
xorb
test
dec
mov
mov
fnstcw
xchg
popf
sbb
pushf
push
out
sub
inc
divb
mov
lds
les
push
inc
mov
ljmp
cmpsb
pushf
cmpsb
shlb
mull
xchg
pop
push
pusha
pop
mov
nop
push
adc
into
xor
mov
adc
lock
movsb
test
test
xlat
clc
adc
movl
push
jno
repnz
or
push
les
clc
cmp
and
jno
loope
sbb
lahf
inc
call
scas
test
rcrl
cltd
adc
ss
xchg
mov
mov
or
xchg
push
into
cwtl
xchg
mov
gs
roll
jg
cs
jle
rol
dec
inc
mov
hlt
or
cmp
xor
adc
cmp
scas
push
xor
mov
les
fsubs
movsl
mov
lock
pop
in
xchg
bound
fstl
shll
xchg
dec
sbb
pop
mov
inc
fisubrl
pop
pop
ret
fisttpll
lea
pop
jb
int
aad
and
loop
jle
mov
mov
sub
shrl
jmp
mov
lock
cmc
imul
arpl
mov
ds
scas
or
add
cmc
aaa
jge
fdivr
jne
pushl
mov
push
neg
xchg
call
pop
mov
pop
fsubrs
out
decl
pop
mov
mov
add
jge
fsubl
jecxz
sbb
pop
sbb
popf
or
inc
push
add
push
or
xor
sub
into
xchg
ret
rorb
outsl
jnp
fucom
cmp
jmp
and
inc
mov
adc
aaa
iret
xor
jmp
mov
outsl
mov
les
or
in
call
ja
inc
addb
xchg
push
jns
in
sti
lock
inc
aam
movsl
xchg
jno
pop
aam
insl
movsb
jb
mov
mov
or
dec
shl
inc
lods
psubusb
je
push
cwtl
xchg
dec
ljmp
into
cmp
icebp
nop
scas
and
sbb
push
cmp
and
xlat
xor
sahf
out
bound
push
popf
mov
jge
push
test
mov
dec
ja
push
xchg
movsl
sub
mov
data16
or
pusha
or
jge
stos
xchg
scas
xchg
popa
aas
mov
add
jge
aas
mov
out
pop
xchg
mov
aaa
or
mov
pushf
fdivl
fiaddl
bound
inc
and
xorl
scas
stc
and
stos
je
jno
pop
dec
sar
iret
jp
cmpsb
das
outsb
adc
ljmp
adcb
aas
es
push
jo
push
cwtl
pop
pop
mov
aad
pusha
leave
loope
xchg
and
jge
aam
cmpxchg
bndstx
adc
iret
jle
test
lods
push
test
xchg
pusha
push
iret
and
pop
dec
ret
mov
mov
xor
in
shrl
pop
mov
xor
ljmp
std
aad
add
cmc
push
aaa
nop
shrl
fdivrs
in
or
pop
lret
xchg
stos
xor
mov
add
mov
movsl
cwtl
cld
jl
xlat
mov
adc
xchg
or
int3
xchg
lds
add
sti
aam
loope
loop
fldt
je
sub
std
fs
cmpsl
rcrb
loop
addr16
dec
mov
add
mov
pop
sub
data16
gs
pop
jnp
fnsave
stos
add
jns
jae
cmp
in
scas
push
addr16
dec
adcl
sub
nop
mov
data16
adc
jns
dec
xor
das
sub
pop
ret
xchg
out
adc
mov
or
jg
popf
and
popa
xchg
iret
cwtl
pop
dec
pop
out
pop
xchg
or
cmp
in
mov
call
mov
xlat
cmp
and
movsb
sub
inc
test
xchg
pop
sub
xchg
push
xor
dec
or
pop
gs
ljmp
pop
stos
sub
in
pop
mov
aam
mov
scas
js
mov
xor
dec
and
jmp
push
fisubs
andl
pop
push
hlt
outsl
adc
ds
notl
mov
mov
jg
or
in
inc
stos
pop
adc
js
les
push
and
push
jle
arpl
loope
push
aam
add
adc
add
clc
mov
pshufw
inc
in
dec
or
xchg
jae
pop
adc
shrb
push
loop
sahf
fcmovnbe
aad
xchg
adc
jmp
in
aad
pop
jg
and
jl
aam
sbb
repz
lds
test
xchg
aam
addb
adc
push
mov
aad
movsl
shrb
test
stos
xchg
pop
jnp
and
adc
scas
test
sbb
imul
out
out
fwait
icebp
xchg
sub
js
imul
cmp
jle
icebp
jle
cmp
jbe
outsb
cmp
sbb
outsb
out
aaa
xchg
pusha
leave
mov
inc
sbb
imul
dec
addr16
lods
push
adc
mov
pushf
mov
mov
pop
test
pop
into
or
mov
jl
add
jmp
and
rolb
fs
xchg
push
test
cs
pop
jmp
stc
ret
dec
xor
mov
add
xor
and
ror
mov
popa
mov
push
mov
mov
out
lea
call
push
mov
add
out
int3
jne
into
adc
jns
pop
movsb
sub
mov
int
jmp
insb
adc
pop
inc
mov
xor
stc
jns
ret
jno
fisubrs
rcrb
push
out
push
jb
or
xchg
mov
and
add
js
icebp
hlt
addr16
lods
scas
jmp
movsl
xchg
lret
idiv
xlat
std
stos
pop
jle
jmp
cmp
jae
insb
mov
dec
cli
cmp
lock
push
mov
adc
mov
xchg
shll
mov
jle
fwait
das
or
mov
adcl
dec
test
pushf
push
jo
jp
dec
out
dec
xchg
out
mov
ds
or
push
cli
xchg
mov
mov
dec
add
mov
mov
mov
jae
iret
lahf
mov
mov
xchg
lahf
sbb
push
lret
jl
xor
pop
shll
nop
outsl
stos
jae
das
or
jge
in
in
popa
inc
push
adc
pop
icebp
ror
je
xchg
add
xor
mov
push
jmp
jns
mov
xlat
lods
ret
aas
xchg
adc
add
jo
test
add
sarl
sarb
arpl
stc
pusha
jne
and
adc
xchg
dec
repnz
lcall
fwait
fwait
pop
mov
inc
push
stos
ja
mov
out
sub
mov
sti
sbbl
icebp
fdivs
push
movsb
adc
xchg
jb
insl
ja
addb
movsl
cmp
jle
sbb
icebp
leave
mov
mov
xor
imul
and
sbb
out
lret
imul
bound
popa
push
pop
adc
lahf
std
in
icebp
out
bound
or
lea
sub
mov
pop
mov
repnz
scas
into
cmp
clc
push
push
add
sbbl
ja
mov
xor
out
mov
dec
ljmp
inc
pusha
push
insb
add
sbb
popf
in
lcall
or
lds
das
ss
pusha
inc
push
mov
fsubrl
jnp
aam
icebp
ja
lods
pop
scas
mov
ljmp
mov
mov
into
push
scas
jo
pop
mov
cmp
pop
lock
adc
and
icebp
scas
in
rcrl
ds
cltd
outsl
insb
mov
dec
and
mov
cmp
lock
test
cmp
pop
cltd
popf
sub
fcomp
cli
add
jbe
sbb
sbb
pop
es
repnz
cmp
out
mov
stc
jg
mov
jmp
scas
inc
mov
test
cmpsl
outsb
push
jmp
in
pop
mov
jg
shll
jge
pop
sbb
sbb
and
pop
add
aas
push
stos
out
push
ret
and
push
xchg
imul
mov
lahf
lea
das
dec
sbb
test
cmp
fbld
scas
push
or
pop
and
mov
xor
lock
std
hlt
dec
mov
test
add
cmpsl
pop
inc
ja
in
leave
stos
lock
aad
fbstp
pop
add
test
mov
xlat
sbb
cmp
gs
mov
sahf
outsl
icebp
aaa
adc
mov
sub
add
pop
mov
popa
enter
js
movsl
mov
jle
add
adcl
or
lcall
fisubrl
xor
daa
dec
enter
mov
push
cltd
mov
xor
sahf
fisubrl
lcall
arpl
mov
mov
in
dec
aad
xchg
jmp
pusha
xchg
push
inc
or
stc
jecxz
cmp
rcrb
mov
cwtl
xchg
xchg
sbb
mov
push
push
test
movl
mov
cmpsb
push
jge
leave
pop
fdivp
and
mov
into
cmp
mov
pop
into
mov
std
lcall
xchg
data16
xchg
or
sbb
sahf
sub
lcall
push
cmp
sub
add
and
jmp
mov
test
or
fisttpl
inc
loope
sahf
pop
mov
push
mov
xchg
aam
pop
pop
xchg
test
mov
xchg
mov
xorl
sbb
mov
fbstp
inc
add
add
loopne
arpl
inc
dec
nop
std
mov
repz
cmp
pop
imul
sbb
lret
fisttps
test
sbbl
sti
mov
lods
sbb
push
xchg
mov
cli
lods
sbb
mov
xchg
xchg
push
cmpsb
xlat
stos
ss
mov
pop
int
imul
cmpsl
sub
add
dec
pop
add
in
inc
cmp
fldl
add
je
outsl
and
xchg
dec
rcrl
cld
decb
jo
fadds
and
clc
stos
xchg
mov
inc
scas
dec
es
xor
inc
jbe
inc
repnz
lret
test
ret
test
sub
lcall
in
push
xor
cmpsl
rcrl
xlat
inc
push
scas
cltd
or
mov
mov
lret
fdivrl
pop
out
out
push
mov
dec
jne
mov
nop
in
fcmovbe
lret
les
dec
test
push
stos
or
mov
pop
ja
push
movsl
repz
andb
aas
mov
inc
imul
and
pop
adc
inc
outsl
dec
xor
push
int3
sub
push
jae
scas
xchg
dec
ret
stc
lret
pop
std
outsl
out
stos
pop
cmp
enter
stos
fwait
test
adc
jg
add
jle
dec
jg
movsl
lea
in
sar
imul
scas
out
add
mov
test
lea
je
push
xchg
loop
popa
testb
cmpsl
aam
rcrl
in
xchg
add
mov
add
add
call
pushf
jns
loopne
hlt
out
pusha
loop
ds
flds
repnz
pop
cld
mov
popa
mov
ret
pop
pusha
mov
xchg
jle
add
sbb
jl
shrb
movsb
mov
popf
cli
jle
scas
movsb
sub
jae
sbb
cltd
cltd
aam
out
lock
push
pusha
mov
adc
andb
ficoms
in
ljmp
xchg
inc
add
add
movsb
ds
hlt
rcr
or
sub
into
sub
gs
mov
pop
push
jg
push
call
test
add
mov
mov
lret
and
jl
push
sub
and
rol
cmp
repnz
jl
mov
sub
das
jns
inc
and
hlt
sub
insl
adc
lret
stos
imul
std
pop
xchg
es
orl
xor
dec
push
xor
xor
cmp
xchg
mov
sbb
clc
jecxz
inc
or
sbb
incl
mov
test
xchg
outsl
sub
and
testl
ds
subl
dec
pop
push
mov
cmp
dec
dec
sbb
fimuls
or
sbb
jae
mov
lahf
outsl
push
in
cs
into
dec
ficompl
sbbb
push
jle
add
xor
push
ret
scas
and
leave
addb
dec
aad
mov
xchg
inc
icebp
xchg
scas
xchg
cmp
dec
in
test
jg
mov
popa
cmp
add
push
push
or
inc
dec
stos
ss
inc
push
jbe
lock
xor
out
aam
aas
dec
mov
sbb
cs
adc
push
jp
push
dec
mov
loopne
cwtl
pop
lea
push
scas
pop
cli
inc
shr
cmp
adc
mov
ror
push
mov
jmp
xchg
jg
inc
dec
cmp
or
mov
mov
call
adc
xlat
pop
xchg
inc
xor
aad
dec
pop
sti
dec
xchg
jae
xchg
or
sahf
out
cmp
add
and
mov
icebp
aaa
jno
in
sbb
jae
fistl
mov
xlat
fmull
fucomip
sbb
sub
jae
in
dec
je
sbb
jb
sub
sub
and
inc
lahf
test
and
popa
mov
sub
sub
mov
cwtl
dec
jae
xlat
adc
mov
mov
push
movsl
int3
mov
mov
xchg
cmp
mov
push
jno
fnstenv
inc
push
js
mov
ds
faddp
cs
shr
push
inc
push
leave
push
lds
cmpsb
scas
adc
int
mov
cmpsl
insb
stos
jmp
pop
ss
cld
jmp
fldl
add
mov
push
test
inc
testl
pop
mov
pushf
mov
aam
insl
fucomip
jno
pop
js
mov
pop
daa
mov
xlat
call
lock
pusha
mov
iret
mov
add
mov
add
stos
lret
mov
push
jecxz
sbb
rol
push
icebp
cltd
cwtl
mov
pop
divl
loopne
push
lea
int3
cld
notl
cmc
sbb
out
inc
xchg
test
idivb
adc
mov
pop
int
fs
and
cltd
sbb
popf
sub
out
iret
mov
inc
xchg
mov
or
subb
xor
daa
lret
lock
sbbl
xchg
sub
lret
pop
push
jle
dec
nop
pushf
cmp
repnz
loopne
lods
push
xchg
movsb
loope
int3
shll
and
and
mov
jl
pop
inc
jne
lods
mov
push
and
push
xchg
cmc
aas
js
mov
scas
cmpb
addb
hlt
test
or
mov
mov
push
or
push
add
sbb
xor
dec
or
push
pop
xor
pop
and
rcr
push
add
cltd
add
ss
mov
in
out
cvtdq2ps
into
inc
mov
jne
xor
lods
movl
push
test
sahf
cmpsl
lret
pop
add
xchg
mov
mov
jg
sub
hlt
push
pop
push
icebp
inc
mov
xchg
roll
idivb
mov
cmp
aad
stos
mov
outsb
mov
push
popf
push
icebp
inc
test
mov
xor
repz
subb
lahf
add
add
and
fisttpll
mov
sub
cmp
call
test
into
mov
jns
xchg
lods
testl
popf
in
pop
orb
outsl
push
into
push
jmp
xor
rorl
or
shlb
imul
je
mov
shrl
fdivl
pop
push
outsb
ljmp
andl
jge
cmp
sar
insb
pop
aaa
stos
push
mov
lds
pop
les
sub
jns
outsb
push
lods
js
push
leave
sbbl
push
and
jp
xchg
xor
xor
cmp
inc
adc
dec
aam
out
jmp
push
jbe
inc
pop
movb
pop
add
lahf
jae
pop
jne
push
mov
scas
adc
gs
insb
xlat
repnz
stc
hlt
adc
add
lock
fdivp
add
xchg
andl
add
test
and
into
test
mov
je
cltd
mov
movsl
pop
fadds
mov
sahf
fstps
adc
shrb
sbb
fdivr
jle
mov
xchg
lds
pop
cli
sbb
jmp
xchg
dec
mov
sbb
inc
xor
cmp
xchg
insl
pop
xchg
lock
stos
xchg
add
jnp
pop
push
sub
push
pusha
jae
mov
in
ds
rcrl
push
inc
subl
movsb
adc
xchg
xchg
ret
orb
repnz
jbe
mov
adc
shll
fldpi
aad
xchg
cmp
imul
out
xchg
mov
or
jne
or
dec
sub
push
stos
jp
sbb
mov
mov
mov
popf
out
mov
or
add
jecxz
mov
mov
push
flds
mov
cmp
xchg
stos
fsts
in
or
aaa
mov
mov
or
pop
mov
mov
adc
adc
pop
or
hlt
sbbl
mov
or
outsb
call
cli
sub
xor
dec
pop
repz
movsb
add
pop
cmp
cmpsl
outsl
loope
jle
sub
mov
ja
fisubrl
xchg
fcos
fwait
mov
mov
addr16
jne
repz
loop
scas
inc
aad
hlt
lods
sahf
fsubl
fmuls
cwtl
adc
dec
jmp
testl
and
add
xchg
cmc
push
adc
sub
stos
xchg
jl
dec
cmp
out
fisttps
int3
mov
shlb
mov
add
pop
daa
dec
sbb
daa
rolb
sbb
call
loopne
mov
and
aas
and
fldt
loopne
pop
inc
cltd
mov
inc
icebp
add
loopne
cld
ljmp
inc
negb
mov
enter
cmpb
adc
or
and
inc
or
call
aam
int
mov
inc
js
and
repnz
shll
es
int3
mov
out
mov
inc
mov
cmc
mov
adc
cmp
test
push
jo
cmp
push
nop
subb
sub
jp
ja
cmp
cld
cmp
mov
icebp
cli
dec
leave
in
cltd
stc
pop
add
aas
cmpsl
fwait
mov
add
push
int3
inc
test
fstpt
xchg
dec
fstpl
or
jmp
push
jb
sub
test
push
inc
or
xlat
mov
je
mov
mov
sbb
inc
mov
cs
inc
jl
jno
jg
xor
or
sbb
movb
mov
test
in
cmpsl
push
rcrb
out
sub
and
mov
jo
imul
xchg
sbb
cwtl
cmp
mov
lret
cmp
fucomi
jbe
dec
imul
stos
sub
mov
cltd
pop
ljmp
adc
and
and
cmp
ret
mov
sub
adc
or
lock
pop
lahf
ret
int
xlat
sub
pop
out
xchg
jne
xchg
test
stos
jno
ffreep
in
rcrb
push
out
cmp
and
scas
in
stc
outsb
dec
dec
ret
cmp
or
pushf
dec
push
call
sub
test
fnstsw
sbb
or
jo
rorb
jg
sbb
aaa
and
or
xor
pop
and
cs
and
rorb
fs
aas
and
cmp
push
inc
pop
stc
pop
jo
icebp
pop
mov
cmpsl
adc
incl
inc
mov
js
fimull
ljmp
pusha
nop
in
imul
mov
xchg
insl
and
jle
mov
pop
je
inc
orl
pushf
repz
loopne
cld
stc
je
repz
fmuls
inc
inc
stos
adc
lcall
into
out
xlat
pop
in
imul
clc
scas
jae
mov
mov
vmovaps
fimull
loop
out
add
cld
push
ss
adc
adc
xchg
xchg
xchg
pop
out
mov
sub
mov
in
lahf
xchg
in
repnz
hlt
jb
push
mov
jno
jle
inc
das
sbb
popf
or
sub
jp
mov
stc
xchg
inc
mov
jmp
pop
or
inc
test
mov
xor
popf
jl
pusha
shrb
pop
xchg
scas
lods
jno
loop
mov
cmc
inc
rcl
push
repnz
sbb
fisubl
xchg
xchg
ljmp
loopne
aad
mov
sbb
or
daa
aas
andb
pop
mov
cmpsl
outsl
xchg
and
std
adc
cwtl
xchg
test
jmp
dec
cmp
and
aad
inc
pop
je
lea
dec
mov
aas
in
lea
add
lret
enter
sbb
cli
fs
xor
pop
push
pop
mov
xlat
es
mov
lret
dec
ret
inc
loopne
cld
test
decb
sbb
lock
mov
sahf
lea
xor
xor
push
xor
push
jmp
sub
push
or
mov
add
insb
mov
xchg
outsl
mov
mov
repnz
fdivs
enter
ljmp
sub
push
imul
loop
icebp
jae
add
mov
ret
shr
push
adc
cmp
into
cmp
ja
mov
jne
jp
std
mov
sub
inc
bound
mov
and
lods
sbb
xchg
cmp
addr16
or
add
xor
out
out
sub
ret
add
xchg
mov
in
test
xor
pop
xchg
xchg
push
add
push
xchg
rcl
and
inc
sahf
xor
fcomi
xchg
pop
popa
ret
lcall
sbb
mov
in
pop
lods
pop
mov
inc
je
push
into
adc
shlb
jmp
or
cmp
aas
adc
or
mov
daa
pop
loopne
add
pushf
orl
push
sbb
and
mov
fisttps
push
cltd
add
fsubrl
fcmovnb
sub
push
or
into
ret
out
ds
mov
mov
je
inc
lea
icebp
mov
dec
dec
sub
add
sub
popf
dec
daa
sarl
mov
or
push
sub
jle
lock
out
repnz
cli
dec
mov
test
sub
out
lods
cmp
int
aam
mov
cwtl
dec
sbb
jb
jle
pushf
add
loope
mov
sub
fiaddl
and
mov
xor
iret
dec
push
add
mov
pop
lea
add
das
daa
jbe
sahf
in
shlb
fs
test
loop
dec
push
dec
cli
nop
cltd
inc
fistps
shll
xchg
popf
sar
pop
lods
insb
daa
xchg
insb
mov
int3
lret
mov
subb
stos
roll
push
xor
inc
and
fcmovu
insl
xor
jnp
test
sub
pop
rorb
and
in
ficoml
and
mov
push
mov
lods
sub
add
lds
sarl
pop
je
adc
push
or
aaa
fisttps
cmc
repz
in
mov
mov
or
es
pushf
int
ret
test
pop
or
stos
repnz
out
push
mov
sub
push
sti
adc
in
dec
int3
fimuls
movsl
lds
add
jnp
sub
mov
lea
pop
ret
insl
and
xchg
jp
imul
adc
sub
mov
and
xor
in
dec
sub
dec
inc
xchg
push
cmp
xchg
dec
jb
fnstenv
call
adc
sbb
mov
add
scas
push
mov
jl
pop
push
jle
sub
cmp
mov
les
stos
fs
ja
xchg
sbb
jmp
pushf
outsb
in
in
sarl
mov
inc
xor
pop
adc
mov
sti
inc
into
lea
sub
mov
in
lods
popf
dec
jp
addb
mov
pop
sahf
cmp
mov
sbb
xor
test
aam
icebp
inc
mov
test
jns,pt
pop
jb
xchg
pop
fninit
sub
lret
lods
das
loop
cmp
in
lret
mov
leave
xchg
add
mov
mov
int3
or
cli
loope
pusha
push
imulb
dec
in
mov
and
mov
cmp
cmpl
gs
xor
test
fwait
dec
ss
test
hlt
orb
ret
mov
fldl
int
mov
in
ret
or
lret
push
push
loop
aaa
pusha
adc
mov
test
or
dec
sub
insb
nop
inc
ret
bound
cmp
mov
stos
popa
into
js
adc
xchg
jmp
xchg
into
lods
inc
imul
add
aam
lods
jns
and
lcall
lea
jle
adc
mov
push
stc
ss
push
inc
sbb
ljmp
jg
xchg
sbb
out
inc
mov
dec
jp
mov
lock
inc
inc
and
mov
int3
int
out
popa
popa
sbb
pop
mov
fwait
in
jno
nop
shrl
lahf
aas
movsl
in
std
outsb
sbb
jmp
inc
aad
lret
push
inc
push
cmpsb
into
lds
lock
pop
cmp
lods
das
outsb
push
mov
cs
cmp
pop
fldt
std
jne
orb
ss
les
jne
push
cld
dec
mov
jmp
ret
or
xor
arpl
fiaddl
lods
test
mov
jg
fbld
xchg
xchg
das
in
push
decl
mov
hlt
and
outsl
sub
mov
or
cmp
jne
inc
outsl
push
ja
mov
sub
mov
push
loopne
cmc
bound
mov
inc
sbb
dec
add
and
mov
fwait
dec
xchg
icebp
mov
mov
fistpl
and
push
mov
dec
idivl
xor
push
sub
dec
lret
lods
mov
jg
dec
fisubrl
xchg
push
lret
cs
add
daa
add
icebp
fldl
jle
pop
sbb
hlt
or
sahf
mov
pop
add
lcall
fldt
sbb
repz
pushf
call
sarb
cmp
cmp
and
out
insb
jnp
rcrl
test
loop
or
rorl
adc
jo
xor
add
inc
out
or
test
rclb
ficomps
sub
push
adc
inc
or
adc
cmp
mov
popa
add
mov
jp
sub
shll
pop
xor
mov
outsl
fs
insb
in
pop
fildl
lahf
insl
repnz
enter
xchg
mov
ljmp
insb
jecxz
arpl
xchg
inc
das
mov
dec
mov
lds
add
or
pop
sub
add
xchg
dec
imull
ljmp
fnstcw
xor
fnsave
aam
mov
mov
test
and
test
roll
insl
sbb
jne
push
push
push
out
fsts
sarl
jo
cli
ret
inc
je
jno
testb
jp
cwtl
pop
sbb
sub
xor
out
shr
repz
ret
xor
lcall
cmp
mov
xor
out
ja
xchg
lcall
aas
sbb
inc
test
add
ds
imul
rolb
mov
adc
xchg
xlat
insl
xchg
cmpsl
fs
mov
lret
jl
pop
mov
das
cld
jo
mov
or
pop
mov
call
xchg
xlat
mov
sbb
adc
push
xor
enter
pop
pop
and
jle
cmp
dec
ja
sbb
and
and
mov
shlb
les
call
fnsave
ds
push
adc
cli
outsb
mov
and
stos
cmp
gs
jg
lret
add
inc
loopne
mov
imul
cmc
sub
sar
xchg
ror
ljmp
in
mov
out
xchg
loope
pop
js
outsl
pop
fdivs
add
mov
push
mov
sub
fcoms
in
or
add
xorl
xor
test
ret
int
mov
shr
aam
out
push
mov
mov
sbb
mov
enter
dec
out
roll
xor
push
insl
xchg
fistps
cmpsl
push
mov
push
jmp
movsb
cmp
adc
shll
inc
lret
xchg
and
mov
js
and
aad
idivl
adc
addr16
iret
in
pop
jmp
and
cmp
add
ret
cmpsb
mov
cmc
daa
iret
movsl
clc
jg
test
mov
and
jp
xchg
mov
push
lds
lods
jne
das
jl
jbe
adc
adc
cmovg
dec
cmpsl
mov
lcall
push
loopne
pop
xchg
add
ds
mov
out
sbbl
pop
xchg
sbb
int
cwtl
cmp
adc
and
mov
orb
mov
loopne
loopne
loope
jp
mov
aam
dec
and
aam
mov
pop
pop
push
and
jae
inc
stc
cmc
loop
mov
dec
test
pushf
pushf
iret
push
jne
lods
xchg
ds
in
sbb
fcoms
add
mov
lahf
das
or
push
or
push
adc
mov
out
push
addr16
mov
pop
jmp
outsb
pop
mov
jl
addr16
clc
sub
xor
jb
push
out
add
push
fidivs
push
mov
jg
pop
loope
sub
sbb
mov
sbb
and
xor
cwtl
cmp
or
inc
xchg
in
mov
xchg
push
stos
nop
sbb
mov
outsl
xor
add
les
not
dec
ja
fldt
insl
lods
lock
mov
sub
jne
rcr
inc
arpl
fs
imul
cmp
and
mov
cmp
xchg
bound
sub
cmp
fisubl
jo
ja
stc
jecxz
cmp
sar
mov
pop
mov
sub
dec
in
cmp
out
add
fisubl
and
jmp
adc
pop
jne
stos
xchg
fscale
imul
cli
mov
outsb
cmp
ret
das
pop
js
xor
addr16
gs
ja
insl
sub
xchg
push
jle
adc
in
jne
push
cmp
mov
and
cmc
movsl
cwtl
iret
cmp
ja
dec
arpl
push
xorl
fdiv
rorl
xor
out
xabort
shrd
lret
mov
xor
clc
roll
mov
inc
mov
mov
je
xor
cmc
pop
jae
fnstcw
in
aas
xor
clc
stc
push
inc
xor
push
xchg
ret
pushf
test
inc
pop
std
scas
push
push
popa
fnstcw
pop
movsb
test
add
sub
or
out
push
jne
jno
imul
mov
test
push
pop
sub
pop
xchg
push
xlat
scas
and
imul
dec
and
adc
sbb
dec
test
stc
out
jae
in
xchg
lods
xor
cmpsl
dec
pushf
ds
mov
lds
les
and
sub
test
lods
xchg
shll
out
dec
xchg
jecxz
mov
icebp
push
into
popf
dec
jmp
leave
sub
lret
cmp
sbb
test
cmp
sub
leave
ret
das
cltd
mov
sub
or
inc
pop
mov
clc
leave
mov
mov
push
movb
pop
cmpsb
cltd
fsubrs
jbe
sub
xchg
fcmovbe
ja
mov
jnp
andps
dec
pop
jp
xor
xor
cwtl
jnp
sbb
xchg
mull
pop
test
ljmp
out
push
pop
adc
fnstenv
push
movsb
in
sub
mov
loop
adc
lret
adc
and
lds
dec
push
outsl
loopne
sbb
mov
jp
xchg
test
out
dec
push
or
cmp
scas
outsb
xchg
dec
dec
mov
jbe
shrl
or
int3
pushf
mov
mov
pop
lret
adc
inc
leave
and
aad
lret
push
pop
ret
and
in
pop
xor
dec
sub
cli
or
clc
stos
clc
add
pop
and
pusha
jnp
pop
pusha
pushf
sub
dec
mov
insl
shlb
mov
outsl
cmp
or
pushf
les
and
or
xor
mov
rorb
test
jl
hlt
stc
cmc
and
jmp
jns
jmp
out
jo
pop
aas
frstor
lds
dec
jge
add
pop
mov
jns
xor
xor
sub
add
dec
inc
xor
xchg
cmp
out
jmp
jae
xorl
dec
je
push
sbb
dec
add
sub
xor
mov
mull
faddl
aad
fs
or
add
gs
mov
add
imul
dec
mov
cltd
cmpsb
ljmp
pop
lcall
adcl
jmp
mov
loopne
add
jle
leave
mov
fstpl
iret
movsl
xor
cli
loopne
scas
ljmp
iret
jnp
add
push
pop
push
adc
lea
add
mov
pop
addr16
cmp
adc
out
cmp
sbb
jge
jb
sbb
push
mov
xchg
jnp
push
and
lret
dec
iret
das
xor
in
lahf
sub
pop
inc
lods
enter
sub
adc
ljmp
shl
aaa
std
pop
xchg
stc
push
sub
sub
cmpsb
pop
push
fisubl
jb
add
pop
pop
sbb
push
cltd
fldenv
and
cwtl
inc
and
or
push
mov
xchg
adc
test
in
jp
adcl
mov
and
mov
lret
sub
push
xor
push
test
daa
ja
xchg
push
mov
xchg
push
in
sub
icebp
js
adc
sub
mov
icebp
add
loopne
push
lcall
add
jge
pop
stos
adc
push
aam
aas
and
je
mov
cmp
inc
iret
mov
mov
adc
cmp
sbb
shll
add
lds
mov
lock
jae
push
mov
push
mov
movsb
inc
mov
jl
mov
push
mov
mov
cmp
sbb
out
insl
sub
pop
inc
adc
outsb
es
insl
stc
xor
push
gs
cmc
dec
sub
in
sbb
sbb
das
imul
push
lea
sbb
pop
int3
xor
cli
adc
jnp
mov
or
fsubrs
mov
gs
dec
mov
mov
pop
xlat
aas
dec
sub
mov
outsl
movsb
push
cmpsb
mov
gs
pop
lahf
pusha
push
or
lods
jo
pop
jmp
jg
push
stos
cmc
test
push
outsl
dec
push
iret
add
orl
sub
mov
int
test
dec
adc
inc
outsl
xchg
dec
rorb
nop
loop
or
jecxz
or
mov
pop
jno
xchg
xor
sbb
into
xchg
sub
bound
sbb
les
outsl
adc
jae
jl
imul
mov
xor
popf
push
dec
jl
into
sub
mov
add
int3
dec
out
insl
jo
lock
neg
or
pop
rcrl
push
shl
mov
mov
mov
lods
cmp
push
inc
loopne
or
pop
andb
mov
fs
cwtl
fldl
es
cltd
mov
dec
imul
mov
aad
mov
inc
cmc
jae
or
cltd
jmp
mov
dec
shll
mov
mov
std
inc
mov
push
inc
cmc
pop
sbb
lahf
pop
push
jmp
pop
stos
adc
jno
mov
shl
dec
and
les
push
data16
xchg
movl
loope
insb
or
incl
push
daa
scas
test
out
sub
mov
push
mov
sub
xchg
mov
mov
jne
mov
push
hlt
push
stos
sub
cmp
and
push
orl
subl
cld
cmc
cmp
xchg
adcb
pop
cmp
inc
cmp
mov
push
xchg
cmp
lahf
add
sub
je
and
mov
sub
lahf
cmp
loope
and
mov
das
and
fucom
in
roll
add
mov
jno
ds
mov
and
and
sbb
in
ja
fcoml
mov
stos
cli
cmp
pop
fisubs
insb
rcrl
cld
fucomip
int3
add
jge
into
out
mov
arpl
pop
jecxz
cmp
dec
outsl
cmc
dec
inc
mov
mov
dec
jmp
pusha
add
sub
dec
imulb
pop
mov
mov
es
inc
add
or
fucomip
fidivl
punpcklwd
in
imul
pop
cmc
add
ss
sub
xchg
jbe
addr16
outsb
inc
outsb
rcrl
or
fsubrl
adc
xchg
mov
and
sarb
mov
dec
loopne
icebp
gs
idiv
mov
add
push
push
push
mov
jle
addr16
cvtdq2ps
xchg
xchg
fadds
js
and
and
cmpsb
xlat
iret
sub
loop
mov
scas
mov
mov
pop
and
jo
jp
xchg
je
loope
imul
leave
lahf
lods
hlt
sbbb
mov
aaa
mov
mov
xchg
jb
movsb
xchg
mov
cs
frndint
add
iret
mov
push
inc
insl
pop
subl
out
inc
cmp
add
xchg
pop
test
push
or
inc
repnz
ret
pop
dec
add
jmp
out
repnz
push
or
sub
pop
aas
cmp
jp
insl
movsb
stos
xor
in
push
popa
pminsw
and
pop
mov
scas
out
sbb
pop
andnps
cmp
mov
push
cld
jbe
in
push
xor
xor
std
popf
and
sbb
movsl
pop
add
inc
cmp
mov
and
ljmp
fidivrs
adc
pop
mov
fcoml
mov
lahf
mov
mov
icebp
movsl
pop
sbb
jge
stos
loope
mov
dec
or
std
add
rorb
es
ljmp
pop
jge
dec
lock
xchg
cmp
sub
popa
test
jae
xor
call
adc
or
sub
int
movsb
and
and
mov
out
lcall
mov
inc
dec
dec
push
daa
add
lea
inc
xor
enter
and
ficompl
xchg
pop
jp
push
sbbb
dec
mov
push
int3
bound
adc
inc
bswap
add
out
sti
mov
push
jnp
adc
rorl
stos
sub
xchg
clc
fnsave
shrb
pop
push
adc
push
push
cwtl
repz
inc
and
mov
repnz
jp
pop
mov
nop
inc
jge
bound
pusha
dec
repnz
push
jg
or
mov
push
frstor
pop
stc
jns
pop
push
cmp
and
push
sbb
adc
lods
mov
xlat
in
mov
and
scas
jecxz
sbb
fcmove
mov
movnti
lret
jne
jae
les
scas
or
jae
push
mov
loop
mov
xor
enter
or
sub
mov
xchg
pushf
xor
cmc
add
das
mov
mov
inc
dec
mov
add
inc
in
pop
push
xor
xchg
fsubrs
fwait
mov
xchg
or
insl
and
push
lcall
cmp
nop
pop
xchg
in
lcall
mov
push
das
shl
xchg
jmp
cmp
nop
push
sub
cli
pop
out
jnp
cli
loop
mov
inc
push
inc
or
sbb
ja
daa
rcll
out
scas
fstps
inc
adc
stos
fidivs
xchg
out
mov
push
mov
cltd
sbb
pop
sahf
fs
xchg
push
ljmp
insl
xchg
shll
mov
test
ja
cmp
push
xor
lea
test
shrl
sti
lds
inc
mov
popa
int
push
test
xchg
outsb
aad
imul
test
mov
add
fwait
in
cs
xchg
out
popa
xchg
insl
lods
int3
loop
cmc
fbstp
ficoms
dec
outsl
es
ja
push
in
bnd
adcl
jp
sbb
adc
mov
cli
leave
jne
fdivrs
or
xor
and
pop
sbb
iret
cli
push
repnz
ja
and
sub
lds
xchg
pop
inc
push
jecxz
gs
mov
sub
dec
add
mov
add
test
push
dec
sti
xchg
push
sbb
loope
cmp
in
sti
loope
mov
adc
les
adc
jp
clc
pop
mov
iret
push
mov
cmc
arpl
fmulp
xchg
gs
sbb
mov
mov
mov
mov
mov
aad
cmp
aaa
dec
push
adc
addr16
je
jle
sub
gs
fwait
loope
dec
hlt
xchg
in
dec
lahf
pusha
je
lock
or
bound
bnd
jne
jmp
loopne
ret
inc
and
add
pop
mov
out
or
xchg
add
cmpsb
repz
mov
fs
pop
aad
inc
dec
in
popa
cs
stc
sti
test
lds
jb
pop
dec
xchg
cltd
cwtl
ret
cmp
pop
inc
ret
mull
out
jbe
adc
sti
out
cmp
sbb
sbb
jg
and
add
mov
out
filds
sub
in
sahf
dec
mov
leave
add
orl
orl
or
dec
je
jnp
push
pusha
push
mov
pop
incl
pop
mov
insl
mov
pop
test
mov
pusha
xchg
scas
add
mov
add
cmpsl
test
mov
dec
popa
push
fsubrl
fstpt
mov
mov
ds
add
mov
packsswb
inc
mov
loope
cs
pop
insb
push
jae
xor
js
cs
dec
shll
lock
inc
test
and
xorl
loop
fstl
sbb
and
icebp
jns
xchg
cltd
xchg
adc
mov
cmp
mov
and
aam
xchg
addr16
mov
and
and
xor
nop
adc
adc
into
cmp
out
mov
je
and
pop
inc
lret
mov
popa
push
lea
inc
je
loopne
sti
stos
sbb
inc
cmc
in
jmp
add
sbb
cmp
pop
jge
stc
out
sbb
icebp
movsl
jno
cmp
shrb
aad
and
xor
icebp
or
jp
inc
daa
imul
ja
pop
jne
rcrl
and
pop
inc
xchg
push
test
es
cmp
adc
ret
out
nop
outsb
test
xor
sub
dec
adc
fs
pop
in
outsb
insb
ret
test
cwtl
fwait
lds
arpl
imul
jp
aas
cmp
ret
push
adc
mov
js
add
dec
or
cmc
xorl
iret
dec
add
sub
mov
lret
pop
push
out
mov
xchg
in
clc
insl
and
jg
outsl
pushf
loope
aas
sub
cwtl
inc
jecxz
into
cli
std
lds
gs
inc
xchg
xchg
mov
mov
stos
mov
cmp
or
sbb
xchg
bound
ja
fcomp
dec
adc
push
xor
lods
push
pmaxsw
into
pushf
or
add
xor
aaa
lock
dec
jge
cmp
lods
pusha
push
jl
shrb
jle
mov
sub
sub
sub
jl
loopne
in
aam
js
dec
js
mov
lock
and
cwtl
daa
or
xor
push
mov
sbb
or
and
cmp
rcrl
rcrb
adc
iret
shrb
xchg
xchg
dec
je
lahf
in
and
mov
and
pop
cmp
mov
inc
popa
ljmp
aam
xchg
lea
add
xchg
push
or
add
popf
outsb
cltd
lcall
ja
add
sbb
pusha
jecxz
call
add
push
pop
mov
pop
lret
inc
pop
jno
leave
sbb
push
sbb
jo
out
sbb
jbe
xor
adc
sahf
sub
daa
cli
mov
pop
aad
adc
inc
fisttpll
bound
push
push
or
mov
push
mov
popa
or
popa
cli
movsl
jae
cmp
adc
hlt
insl
xor
jo
xor
jp
out
add
mov
scas
dec
outsl
fucomp
xchg
out
mov
xchg
das
sub
mov
cmp
xor
js
jl
andl
dec
xchg
lock
sub
cmpsl
cld
js
lock
incl
test
adc
mov
stc
jnp
mov
decb
pop
rcl
cmc
daa
mov
push
adc
cmp
mov
mov
push
sub
add
pop
inc
or
and
ret
popf
lahf
sbb
lods
push
jb
pop
imul
jb
imul
xor
out
inc
sub
sub
push
jns
out
shrb
andl
inc
aaa
adc
mov
and
xchg
cmp
stos
jecxz
jae
stos
je
mov
xor
loop
xor
in
data16
jl
ss
lea
ret
popf
xorb
test
movsb
test
sub
int
enter
push
lahf
cmp
dec
jns
or
sbb
sbb
jg
mov
add
enter
repnz
dec
mov
jmp
in
sti
inc
daa
loopne
adcb
xchg
or
mov
or
enter
mov
rorb
and
fwait
dec
jecxz
inc
lods
mov
dec
adc
out
out
scas
dec
in
push
test
sub
jnp
jne
mov
xlat
mov
adc
jnp
sahf
scas
es
push
adc
int
mov
popa
fmuls
mov
adcl
xchg
addb
into
jge
sub
inc
arpl
pop
and
scas
stos
cwtl
push
movsl
sbb
xchg
loopne
xor
scas
or
mov
test
xchg
sbb
push
loopne
in
and
data16
int3
adc
or
and
in
lea
stos
insb
aam
repnz
leave
cmp
mov
mov
lret
add
push
inc
xor
fwait
jno
xchg
jb
add
lods
cmpl
mov
xchg
mov
mov
cvtdq2ps
repnz
popf
ret
js
pop
push
xor
fs
xchg
xchg
add
add
jnp
dec
inc
push
jp
fstl
pop
ret
sbb
mov
cmc
push
rcrl
addr16
sbb
imul
fnsave
inc
test
add
jl
mov
gs
mov
lret
lea
vmaxps
ror
mov
mov
or
inc
add
loop
sub
mov
pop
jle
jns
or
dec
dec
cmc
cmp
out
pop
fldcw
mov
lahf
test
or
test
adc
push
ds
ds
dec
fcomip
icebp
sbb
mov
outsl
xlat
test
adc
mov
data16
enter
inc
rcrb
jle
movsb
push
call
mov
jnp
rolb
jae
sbb
pop
mov
pop
pop
pop
ret
push
iret
and
or
push
rcrb
out
jecxz
test
test
add
mov
imul
fwait
adc
sar
es
mov
popa
lahf
inc
adc
rclb
mov
mov
stos
pop
sarl
xchg
loopne
xor
cmp
sub
out
sbbl
sub
sub
lds
pop
sub
sti
or
repnz
adc
add
call
iret
vorps
inc
mov
pop
es
fnstsw
or
cmpsl
lret
daa
jmp
xchg
repnz
mov
arpl
inc
mov
movb
int3
jnp
dec
push
cli
sti
xchg
mov
mov
lea
mov
jmp
lods
enter
push
xchg
je
jmp
push
insl
mov
lods
out
push
dec
neg
stos
loop
cmpsb
mov
cltd
imul
sub
mov
jns
mov
xchg
in
or
sahf
mov
adc
int3
pushf
push
punpcklwd
mov
sub
stos
push
scas
add
inc
sbb
mov
mov
test
std
xchg
add
pop
cmpsb
and
mov
std
mov
clc
inc
cmc
xor
adc
jbe
fildll
ret
je
dec
sbb
pop
popf
stos
mov
xor
jno
dec
and
outsb
and
out
cltd
jne
jae
stc
insb
jg
test
sahf
add
jbe
mov
mov
scas
jmp
in
out
js
cwtl
xlat
sahf
cwtl
pop
lcall
sub
icebp
pop
outsl
mov
inc
pmulhw
js
ret
cmp
in
xor
dec
scas
xor
pop
mov
aaa
mov
cmpsb
mov
in
mov
fstps
cmpsb
inc
add
stc
lods
cmc
loop
xor
xor
mov
xor
dec
aam
aaa
iret
sti
pop
sbb
sbb
stc
out
aad
bound
cs
push
xor
jmp
movb
in
neg
and
adc
outsb
xor
kmovb
sub
into
lods
dec
inc
dec
push
fnstcw
sub
addb
cs
pop
xor
jl
push
lret
inc
xchg
cmp
rol
adc
push
xor
mov
and
fisttpl
leave
inc
cmpsl
xchg
mov
jp
xchg
imul
scas
sbb
out
push
fdivl
mov
aad
out
ja
add
lods
loop
rep
dec
int3
adc
lock
enter
mov
insl
sahf
and
or
dec
xchg
and
dec
mov
lahf
cmp
pop
mov
cmp
mov
xor
dec
imul
adc
mov
ljmp
movb
aas
dec
jb
xchg
icebp
bound
dec
addl
scas
jne
pop
pop
pop
lods
loopne
shlb
stc
out
cltd
sarb
ds
lcall
mov
lods
xchg
mov
ret
ftst
arpl
add
xor
xchg
xchg
aam
xor
lahf
test
push
lcall
jne
rep
addr16
ljmp
in
or
push
call
pop
mov
fdivs
mov
inc
pop
cmc
cltd
dec
xor
repz
add
insl
pop
data16
je
in
mov
cmp
aad
mov
add
arpl
jle
mov
jge
pop
add
lcall
mov
cmp
pop
test
xchg
sub
pop
fwait
cmp
sbb
xor
jns
ficompl
or
adc
aas
inc
repz
pop
les
xchg
add
pushf
add
and
cs
mov
push
jae
mov
into
xchg
fstpl
test
aad
gs
mov
in
push
adc
fucomip
push
pop
cmpsb
fldenv
xor
or
add
bound
loop
lcall
xchg
hlt
popa
jg
shrb
cmc
sbb
ds
sbb
mov
inc
pop
ficompl
pushf
mov
leave
mov
hlt
enter
xchg
add
test
inc
mov
cmp
dec
ljmp
ljmp
or
pop
std
mov
sbb
xchg
aaa
dec
scas
push
fwait
mov
fs
pop
mov
cmc
test
mov
out
imul
rcr
inc
stc
outsb
rcrl
add
mov
cmp
pop
or
xor
add
repnz
lcall
and
shl
std
jmp
pushf
ljmp
out
xlat
mov
icebp
aaa
sub
out
push
mov
test
sahf
add
scas
pop
mov
and
imul
sbb
outsl
and
fisttps
int3
sbb
stmxcsr
sti
fwait
inc
arpl
cmp
pop
lret
in
into
call
xor
mov
pop
fldl
xor
repz
cmp
mov
xor
test
mov
into
lea
mov
adc
movsb
fsubrl
and
jbe
cmp
sbb
data16
int3
fmuls
in
cmp
cmpb
popaw
outsl
mov
push
xchg
sbb
aaa
nop
xor
mov
push
cmp
xchg
cmp
pop
cs
les
dec
mov
mov
adc
adc
sub
xor
sbb
sub
inc
fstpt
fsubrs
inc
adc
movsb
cmp
jge
ja
mov
push
int3
mov
and
cmp
pop
add
in
subl
icebp
negb
aam
int
in
fidivl
movzbl
pop
or
arpl
dec
sub
sbb
push
push
push
sbb
and
cmpsl
mov
or
xor
jbe
fsub
scas
jo
stos
jge
dec
push
adc
jmp
test
mov
sub
in
dec
xor
out
and
data16
pop
push
jle,pt
nop
sbb
push
aaa
sti
repz
jecxz
out
mov
sarb
test
cmpsb
mov
scas
sub
and
xor
in
mov
mov
daa
sbb
mov
sub
pushf
jno
dec
mov
fistpll
jp
inc
pop
jae
cmpsb
push
add
call
cpuid
cmpsl
call
sbb
pop
push
push
add
xchg
sub
stos
fucom
xor
push
das
inc
push
lods
xor
ds
stos
push
movsb
mov
loop
mov
aam
inc
or
lea
loopne
pop
js
ljmp
mov
inc
sbb
pop
mov
aam
loope
cmp
lahf
pop
fprem
sub
xor
jae
inc
imull
mov
shrl
aad
mov
add
fimull
adc
push
rorb
add
pusha
mov
out
mov
xchg
lods
xchg
out
pop
aaa
jno
pop
jno
mov
iret
mov
in
daa
xlat
adc
lock
jle
pop
push
xlat
sbb
mulb
mov
icebp
xchg
adc
inc
push
test
sub
or
inc
insb
push
jl
ja
push
out
jno
xlat
xor
jmp
cs
popf
mov
rcrl
fnsave
push
sub
test
pop
cltd
insb
rcrl
fcompl
mov
lea
repz
push
jo
ret
int3
scas
add
and
cmc
or
adc
or
gs
outsl
cmp
stos
xor
mov
sub
faddl
xor
aaa
out
xchg
shll
pusha
ds
xlat
jl
adc
sar
mov
mov
and
jl
sub
movsl
aad
test
imul
mov
stc
das
cmp
dec
rcl
or
cmp
vsqrtpd
loopne
push
fisubrs
adc
leave
in
test
cmp
es
push
addb
push
test
lds
xchg
sbb
xor
decb
mov
xchg
push
mov
aaa
mov
pusha
mov
sbb
cmp
xchg
sub
fwait
stc
ja
xchg
mov
insl
insl
mov
dec
mov
sbb
sti
cmp
decl
enter
mov
adc
mov
dec
mov
in
pop
mov
inc
and
xor
movsb
lret
mov
xor
mov
pop
adc
mov
cltd
xor
out
gs
add
imul
nop
sub
dec
repz
je
add
inc
add
dec
jge
xchg
sbb
dec
mov
mov
push
addb
push
xchg
das
cmpsb
and
popa
repz
push
sbbl
dec
lds
xlat
push
pop
xor
mov
lret
and
mov
das
sahf
adc
xor
in
pop
jl
add
dec
push
sub
test
mov
jecxz
pop
adc
and
aam
fidivrs
movsl
pop
out
mov
mov
adc
jbe
jb
add
or
mov
dec
fisubrl
data16
jnp
dec
aas
or
shlb
and
pushl
stos
loopne
out
nop
pushf
mov
and
sbb
imul
cmpb
dec
add
ret
hlt
mov
cmp
or
mov
inc
cmpsb
pusha
fdivrp
fdivp
and
je
mov
iret
xchg
or
jae
and
lret
andl
imul
sub
aam
adc
sub
mov
jnp
xchg
jae
iret
popf
mov
mov
mov
je
test
aas
fwait
aas
popa
aad
jge
pop
insl
mov
sub
cmp
pop
gs
inc
mov
pop
sub
test
adc
popa
data16
push
icebp
idivl
mov
add
test
mov
mov
ret
data16
push
mov
ret
add
int
int
adc
in
push
mov
out
lcall
clc
jbe
loopne
cmpsb
stos
sbb
jmp
rclb
sub
shrl
fcmovne
or
pop
inc
aad
inc
cmpsl
sbb
stos
cmp
xchg
mov
mov
mov
pop
and
imul
int3
sahf
sbb
call
addr16
sbb
out
test
js
adc
jbe
fwait
adc
sbb
xor
loop
repz
jnp
add
addl
imull
stos
xchg
fsubp
stos
daa
stos
lods
std
mov
inc
cltd
xor
clc
mov
fwait
ror
shlb
xchg
pop
jg
les
aas
test
lock
aaa
xchg
mov
inc
mov
mov
jnp
imul
xor
inc
cmp
test
mov
jnp
inc
jmp
popa
sub
sbb
jp
pop
and
jb
pop
subb
inc
cs
jne
xchg
cmc
ljmp
and
dec
push
fwait
dec
push
popa
mov
cs
ret
shll
fwait
out
xchg
push
leave
mov
idivb
jno
cltd
pop
dec
cmp
rclb
pop
pop
fstpl
stc
insl
pop
inc
sti
loope
or
inc
xor
cltd
mov
mov
into
mov
mov
hlt
jp
ret
push
nop
cmp
pop
sbb
in
into
imul
ret
cs
xchg
fsts
test
sub
xlat
mov
fcomp
push
fimuls
fcmovnb
mov
mov
xor
jmp
bound
and
out
sub
movsb
pop
mov
test
mov
mov
test
into
dec
cmpsl
mov
fldt
xor
sbb
xlat
lahf
or
loopne
test
dec
cwtl
int3
jmp
out
push
mov
rcrl
pop
jecxz
js
pop
mov
cli
out
adc
sbb
xchg
pushf
fildll
add
insl
or
scas
in
or
das
call
sbb
lcall
cmp
test
cli
mov
push
cmp
out
sbb
push
nop
pop
push
mov
loop
xlat
icebp
ret
lahf
inc
icebp
inc
data16
push
jle
les
movsl
movsb
xchg
mov
cmp
jne
rolb
mov
fsubrs
add
out
push
xchg
sub
push
push
div
mov
push
pop
call
push
and
icebp
movsb
dec
xor
negb
mov
inc
jo
incb
adc
mov
sbb
xchg
adc
mov
xchg
and
nop
test
add
call
lahf
movsl
sti
inc
fnstenv
jb
insb
xchg
ja
insb
add
mov
adc
scas
mov
popa
jae
and
sti
orl
push
pop
es
mov
push
cmc
push
adc
dec
dec
scas
in
addr16
push
mov
xchg
sub
je
lret
jg
hlt
xor
ret
xchg
aaa
mov
mov
sti
pop
xor
xlat
loop
fstpl
and
xchg
adc
fildll
xor
adc
fldenv
aas
mov
rcl
sub
std
loop
es
je
cmc
hlt
sub
in
adc
or
xor
jecxz
inc
pop
cmp
loope
mov
sti
push
fisttpl
dec
mov
jp
fxch
insb
cmp
mov
mov
mov
sbb
mov
pop
fistpl
mov
fnstenv
gs
sbb
xlat
lods
in
roll
out
loop
cwtl
mov
xor
jg
icebp
push
mov
test
cltd
cmp
vpunpcklwd
adc
mov
out
inc
jns
rol
jg
mov
fcmovu
and
test
sub
cmp
fsub
adc
jb
lcall
mov
adc
pop
out
rol
fwait
add
adc
mov
pop
sub
dec
dec
rcrb
add
or
adc
push
xchg
vmread
pop
push
popf
and
test
fmulp
mov
out
sub
jmp
clc
adc
dec
loope
and
cmp
dec
add
std
stc
fwait
sub
xor
add
push
dec
js
inc
mov
add
in
jno
sub
setno
rolb
les
sbb
dec
mov
fbstp
leave
into
sub
stc
int3
das
js
les
fiaddl
fstpt
adc
repz
add
mov
add
clc
xor
or
sbb
aad
outsb
push
gs
iret
lret
mov
cmp
mov
xor
shrl
inc
mov
imul
mov
mov
sub
mov
popa
inc
cmp
inc
fdivrs
sbb
xor
push
repnz
lock
icebp
sbb
mov
das
in
out
loope
mov
xor
xchg
rclb
cmc
mov
icebp
iret
lahf
cmp
jmp
loopne
loop
out
stc
and
mov
pop
cmp
insb
inc
dec
shr
or
iret
sbb
int
mov
testb
ljmp
scas
ficompl
mov
mov
aaa
push
mov
xchg
je
sti
inc
jg
pop
add
nop
push
fs
aaa
jmp
popf
inc
xlat
lahf
test
cli
icebp
adc
repnz
stc
js
mov
movsl
xchg
test
bound
into
jl
pop
cwtl
leave
push
scas
jbe
fs
push
aas
sub
jo
mov
xchg
push
imul
or
ret
scas
xchg
repz
nop
aas
push
call
xchg
adc
jmp
inc
outsl
mov
fadds
loop
and
mov
adc
rorb
gs
cmp
in
int
mov
test
les
dec
add
scas
popf
mov
mov
cmc
and
and
xlat
cmp
int3
mov
mov
pop
jg
addr16
mov
push
or
dec
push
pop
mov
aam
fsts
cmp
insl
cmp
mov
push
das
sbb
adc
popf
pop
js
cmp
xchg
xor
out
loopne
divl
dec
mov
and
push
sti
mov
xchg
xchg
hlt
xchg
jge
pop
lret
push
shlb
bound
mov
dec
jle
sub
clc
push
push
adc
mov
add
popa
or
xchg
stos
push
orl
dec
cmpsl
rclb
je
mov
push
stos
fdivs
push
lds
stc
push
jno
insb
or
dec
rorb
xor
pusha
out
lock
xchg
mov
cwtl
data16
cmp
jmp
ds
out
sbb
xor
xchg
sbbl
sub
repz
xor
idivb
mov
push
and
pop
jns
push
jae
mov
loope,pn
xor
mov
jnp
dec
add
iret
lods
mov
inc
push
xchg
in
xchg
pop
cld
add
mov
popf
jno
fstpt
xchg
jnp
les
sub
je
mov
inc
out
pop
lret
gs
repz
out
push
xchg
pushf
fldenv
sbb
lcall
stos
int3
jno
mov
xchg
lods
js
adcl
pop
add
hlt
inc
ret
decb
andl
mov
fxam
push
call
jno,pt
jno
icebp
xchg
lock
popf
test
add
inc
and
test
inc
es
fwait
or
add
mov
or
std
rolb
mov
xor
pop
inc
push
out
mov
lcall
sub
or
les
add
ret
sbb
ja
push
cmp
add
in
add
add
xchg
mov
mov
cmpsb
pushf
pop
popf
adc
cli
adc
push
dec
cmp
add
outsb
aad
ud2
add
rol
mov
mov
mov
mov
fwait
add
sbb
hlt
mov
sbb
inc
or
mov
mov
cmpsl
or
aad
cli
jno
inc
imul
movsb
xchg
dec
ficomps
imul
xor
mov
cld
popf
mov
sub
xchg
push
inc
ja
arpl
out
out
cmp
pop
outsb
lret
repnz
aas
movsl
sub
or
negb
cmp
loopne
jmp
fwait
clc
add
in
cmpsb
sub
cmp
dec
adc
movsl
cmp
xchg
or
push
adc
loop
fs
inc
add
cld
push
test
outsl
sbb
popa
sbb
add
mov
das
push
loop
inc
push
xchg
fwait
mov
sbb
into
jo
push
jbe
shll
mov
jae
outsl
jae
jge
dec
mov
inc
out
outsl
in
int3
push
mov
lret
mov
out
mov
mov
lret
out
ret
nop
mov
jmp
pop
adcb
cmp
push
mov
and
push
xchg
stos
push
test
sub
inc
add
xor
jg
lods
mov
push
scas
in
mov
sub
rclb
push
cld
mov
push
out
inc
pop
dec
fwait
cli
and
jp
ja
insl
cmp
lods
cmpsb
cmc
mov
inc
mov
or
aad
jmp
and
sub
cmp
aaa
mov
mov
bound
mov
inc
clc
in
dec
out
sbb
mov
fisubrl
cmp
xchg
outsl
or
insb
xchg
add
sbb
dec
test
push
cmp
jmp
push
inc
add
lahf
mov
and
adc
ret
ja
pop
xchg
mov
movsl
jmp
pop
mov
fwait
mov
xchg
push
hlt
adc
fcoml
cltd
xchg
inc
xor
scas
subb
sub
mov
ljmp
sub
leave
add
jnp
add
xor
out
fldl
xchg
sbb
jnp
jbe
and
lahf
inc
aad
lods
jmp
mov
decb
rorb
mov
test
inc
lods
cmpsl
stos
fsubs
adc
pop
jle
adc
in
ret
mov
shr
push
cmp
lret
pop
jmp
cwtl
testl
mov
jl
mov
cmpsb
shrb
mov
pushf
aas
pop
sub
mov
xchg
lret
in
divl
ja
and
mov
xchg
iret
inc
fsubr
dec
add
jle
sbbl
mov
pop
pop
mov
rcr
xor
repnz
aas
jl
jno
or
inc
cmp
cmpl
pusha
lcall
jae
adc
adc
and
ret
inc
loop
pushf
cmpsl
xchg
mov
pop
bound
bound
arpl
sahf
xchg
gs
dec
aaa
add
jp
cmp
pop
gs
adc
dec
dec
das
sbb
mov
inc
cli
test
pushf
xchg
popa
arpl
stos
adc
cld
hlt
das
sub
enter
loopne
xchg
sahf
clc
and
adc
dec
push
aaa
inc
xchg
push
xchg
lahf
dec
xchg
mov
and
test
sub
cmpsl
shlb
adc
push
cmpsl
test
mov
mov
insb
out
mov
ljmp
incl
sbb
in
stc
cmp
ret
lods
xor
scas
jmp
mov
jmp
sub
mov
lcall
xchg
aaa
push
test
cmp
sarb
test
sub
inc
insl
sub
aas
jg
adc
mov
scas
subb
das
push
rclb
xor
pop
xchg
xchg
or
add
aam
mov
mov
rorb
lea
push
add
roll
divb
je
jl
jle
or
testb
inc
ret
mov
mov
shlb
stc
mov
mov
repnz
mov
popf
dec
pop
push
test
cwtl
push
push
dec
imul
in
mov
jo
mov
movsl
dec
aad
fstpl
enter
imull
or
test
jle
js
jb
in
mov
inc
aas
arpl
cmp
mov
add
lea
ss
pusha
jmp
inc
sub
pop
shlb
jl
inc
addr16
outsb
fadd
lcall
add
movsb
fnstenv
jns
mov
push
adc
xor
xchg
cmp
dec
aam
jae
jnp
ds
mov
push
inc
movsl
and
inc
mov
pop
imul
cmp
ret
jo
xchg
loopne
rcrl
push
cmc
lods
jns
and
cmc
push
dec
scas
lock
inc
or
shlb
cmpsb
lret
lods
mov
cmp
push
outsl
mov
pop
sub
jo
cmp
push
mov
stc
dec
adc
dec
sbb
in
sub
ficoml
mov
push
mov
add
or
out
sub
into
ds
cltd
or
fistpll
out
inc
pop
adc
je
cmp
push
mov
push
iret
cmp
mov
ficompl
insb
insb
roll
sbb
and
adc
push
in
and
sbb
jno
jmp
inc
out
data16
sbb
fistl
mov
jnp
xorb
lcall
test
mov
mov
mov
sub
push
loopne
add
adc
scas
push
xchg
gs
or
into
mov
inc
add
push
popa
loopne
jno
hlt
mov
hlt
cli
jecxz
or
aad
fnsave
ljmp
movsl
cmp
or
xor
nop
imul
mov
jns
int
push
int
scas
inc
divl
aas
daa
movsb
sbb
mov
pop
imul
or
mov
shll
sub
cmp
imul
test
pop
add
xchg
lret
inc
push
cld
imulb
sub
xchg
push
pop
sub
mov
out
sub
xchg
call
out
pop
jne
sub
jbe
xor
insb
jno
ret
int
movsb
inc
jl
pushf
shlb
fstps
ffreep
mov
mov
dec
lret
movsb
rclb
push
lahf
mov
jp
add
fmuls
pop
es
pusha
pop
cmp
mov
mov
lea
or
and
mov
sbb
insb
fists
inc
in
xor
cwtl
or
out
inc
mov
insl
push
xchg
xor
jnp
sbb
jecxz
xor
xor
fs
fiadds
mov
inc
mov
sarl
jnp
cli
ret
adc
jb
test
adc
add
lods
xor
out
out
sub
mov
and
insb
cmp
sub
js
push
pop
xor
mov
pop
repnz
arpl
mov
mov
inc
cmpsl
out
fnstsw
xor
mov
cmpsl
cmp
push
je
sbb
and
out
sub
push
cmp
lods
ficomps
push
addr16
pop
into
dec
adc
fs
call
pop
into
inc
push
mov
adc
aam
pop
xor
stc
fldt
dec
inc
xor
adc
cmp
adc
lods
enter
xor
icebp
jo
adc
mov
adc
sbb
fdivs
icebp
popa
mov
lock
stos
adcl
gs
cmp
sti
inc
popf
inc
push
lods
sub
lods
and
fwait
pop
inc
mov
or
push
add
pop
jge
xor
rclb
outsb
adc
fcoml
pop
xchg
inc
xchg
mov
xor
cmpps
adc
je
inc
sahf
or
jnp
in
add
imul
jnp
mov
or
cmp
pop
rorb
sbb
int
outsb
push
pop
sbb
lea
aas
cmp
jp
xor
out
mov
dec
cmp
rcrb
xchg
jecxz
cmp
and
add
xchg
sub
fdivl
ja
xchg
xchg
adc
sub
mov
mov
cmc
stos
mov
sti
mov
xchg
jle
cmp
mov
inc
jne
pushf
or
insb
xor
sub
xor
aad
cwtl
or
movsl
inc
arpl
or
cs
dec
outsl
lock
inc
add
lods
cmp
and
fsub
lret
jne
dec
imull
add
out
jae
shll
mov
lret
fs
lahf
xchg
inc
xchg
movsl
popa
in
sub
pushf
mov
mov
sub
sarl
aaa
and
mov
rcl
jge
lea
psubw
icebp
adc
ds
add
pop
lods
mov
pop
sbb
inc
std
sbb
cltd
iret
js
cmp
or
leave
jbe
fwait
push
cmp
repz
jae
int3
shl
sbb
jg
arpl
add
arpl
jno
pop
mov
sub
mov
xor
gs
ficompl
jnp
out
lahf
push
jge
sbb
pushf
test
sbb
mov
mov
push
cmp
pushf
and
xchg
gs
push
testb
xor
mov
lods
int3
pop
fistl
ret
inc
xchg
mov
jl
in
lahf
cmp
fisubs
push
enter
mov
lahf
dec
movsb
jg
negb
shlb
cmc
shlb
ficoms
pop
adc
mov
mov
sub
scas
lret
lret
mov
mov
dec
adc
mov
les
pop
ja
dec
add
mov
and
push
fsubrp
mov
add
mov
loope
in
aaa
testl
fwait
xor
call
mov
fcoml
pushf
sub
daa
pushf
lock
pop
adc
out
push
sti
divb
ds
ret
mov
sarb
add
push
cmp
jmp
lods
repz
ds
mov
adcb
push
out
imul
cmp
rcll
bound
or
lds
mov
mov
aaa
add
pop
icebp
adc
mov
jns
lcall
push
mov
adc
dec
loope
nop
test
pop
cli
adc
mov
dec
shlb
in
subb
fidivs
jg
cmp
fsubs
push
sbb
and
subb
mov
jo
jmp
cmp
sub
mov
fisttpll
cmpsb
mov
fistl
xor
mov
out
mov
dec
xchg
cmp
jns
lock
and
out
loopne
mov
xor
pop
sub
mov
roll
fimull
movsb
rclb
ss
movsb
mov
inc
pop
inc
sbb
addr16
fwait
std
or
and
jae
jno
pusha
jge
out
jno
data16
mov
cmp
fs
stc
pushf
aam
fcoml
stc
xchg
and
mov
jo
adc
mov
test
loop
cld
or
ret
push
shlb
sbb
jne
rorl
xchg
xor
lret
mov
pop
in
pop
adc
xchg
daa
mov
ret
fisubrl
xchg
shll
ja
push
lret
add
outsb
int3
lock
pushf
fwait
lret
and
cs
and
push
int3
jmp
ficomps
jbe
pop
dec
xchg
xchg
jns
jmp
shlb
xchg
pusha
inc
pop
jcxz
mov
out
mov
out
aas
mov
pop
in
mov
pusha
lds
mov
sub
mov
andb
rcrl
inc
test
push
mov
xor
xchg
and
adc
cwtl
pushf
fchs
cltd
movsb
imul
pop
lahf
mov
cld
test
jmp
or
in
mov
scas
repnz
dec
or
jne
mov
mov
aam
pop
fsubrl
rolb
out
xlat
stc
faddl
xchg
bound
icebp
pop
hlt
and
dec
push
sub
xor
lods
jecxz
test
adc
fcmovb
pop
cmp
fs
add
xor
xor
bswap
or
nop
cmc
js
push
lock
lcall
shlb
jae
cmp
in
lret
adc
popa
lock
jo
rorl
and
mov
out
loope
jl
clc
ljmp
pop
inc
loop
out
imul
imul
sti
pop
lret
sti
cmp
addr16
ror
mov
divl
out
pushl
pop
sub
aam
lods
jle
into
sub
insb
fucomi
pop
xor
mov
sti
jno
push
and
addb
add
les
xor
loope
and
add
je
dec
xor
mov
sub
pop
add
xor
mov
sub
adc
fildll
nop
and
inc
testb
cmp
jae
leave
enter
dec
popf
inc
in
push
mov
out
and
cmp
jbe
cmp
scas
aaa
stc
rol
flds
push
fcmovbe
aad
sbb
xor
cmp
into
sub
xor
sub
fucomi
cmc
mov
icebp
xor
in
xchg
jge
pop
xchg
bound
or
std
jae
inc
push
jno
cmc
fldenv
pusha
pop
sti
jo
lods
mov
mov
cmp
into
in
dec
xor
pop
std
mov
call
or
mov
imul
nop
lret
enter
insb
xchg
jp
jae
push
cmp
hlt
addr16
lcall
add
scas
xchg
scas
adc
and
jns
leave
arpl
fiadds
dec
inc
out
mov
add
sbb
pop
push
fwait
sbb
sub
inc
cmp
mov
loop
outsb
aam
movsl
inc
mov
sbb
ljmp
sub
or
je
out
mov
cmc
in
jnp
out
xor
test
fdivr
arpl
jbe
cmc
inc
imul
mov
push
jge
push
jns
repz
cmp
outsb
xor
outsb
or
testb
pushf
ljmp
fs
mov
inc
inc
push
addr16
jne
pop
mov
mov
icebp
fildl
repz
cmp
movsl
fwait
sbb
addr16
inc
filds
movsl
jns
nop
or
push
out
shll
negl
sub
in
jbe
jo
xchg
mov
bound
fldenv
fldcw
fsubrp
rorb
cmpsl
mov
popf
lods
pusha
int
cmp
inc
loop
inc
pop
fwait
ds
jbe
imul
scas
dec
adc
bound
mov
addr16
rorl
pop
out
cmp
or
add
enter
mov
stc
mov
and
mov
dec
mov
fstl
pop
adc
xchg
dec
push
pushl
jmp
pusha
insb
shl
add
add
lods
adc
jne
aad
lea
fdiv
mov
sbb
sbb
sub
clc
test
mov
lods
mov
ds
fisttpll
mov
sbb
jnp
gs
es
cld
loope
mov
push
faddl
dec
pop
mov
mov
fsubl
outsl
frstor
cmp
stc
mov
dec
dec
dec
push
unpckhps
aam
jne
ljmp
xchg
add
imulb
fstp
out
and
xor
rolb
or
mov
in
and
or
jle
jns
sbb
popf
sub
mulb
test
das
lods
les
sti
mov
xchg
sbb
push
cmpsl
jbe
sub
cmp
and
or
push
addr16
test
filds
in
sub
aaa
test
mov
mov
imul
shlb
shlb
push
jno
lods
mov
testb
dec
test
jp
xor
pop
mov
scas
ror
and
jae
dec
aas
xchg
and
in
sub
adc
insl
pop
cwtl
es
mov
mov
in
push
popa
ss
mov
jecxz
xchg
loop
insb
cmp
jg
roll
addb
xchg
cmp
sbb
xchg
mov
ja
inc
xor
lret
push
das
inc
jnp
scas
pop
push
cmp
push
xchg
es
or
mov
dec
in
pop
aam
popf
or
push
pop
push
sbb
hlt
std
popf
fwait
stos
inc
shll
enter
xchg
cmp
xchg
fsubrl
push
hlt
push
hlt
in
lahf
int3
call
lock
mov
mov
iret
jp
mov
xchg
dec
subl
add
leave
stos
cmp
add
or
pop
add
repz
loop
add
popa
sahf
and
inc
sbb
jno
push
sub
js
pop
negl
inc
jnp
cmp
xchg
test
mov
fidivrs
push
cmp
lea
dec
jecxz
mov
pop
js
xchg
out
test
daa
sarb
adc
fmulp
sub
dec
ljmp
movsl
test
arpl
dec
decl
test
jp
ss
imull
repz
and
mov
ror
rcl
sti
jne
stos
or
loope
cmp
bound
movups
call
mov
mov
mov
jle
jo
xor
sub
sarl
inc
aad
pop
movb
sub
jmp
xor
scas
sub
out
dec
push
jl
into
or
int3
push
xor
andl
lret
dec
bound
call
flds
sahf
pop
faddl
call
mov
out
push
out
idivb
int
lock
cmpsb
xchg
fdivrs
sarl
nop
imul
lds
mov
out
or
icebp
xchg
xchg
xchg
jb
test
mov
mov
es
dec
out
rclb
mov
and
lods
sarl
add
pop
movsb
dec
fmull
sub
push
mov
sti
loope
pop
cs
mov
sbb
out
jae
fstpt
jbe
pop
push
ss
xchg
pop
out
aas
popa
mov
jae
or
decb
stos
or
inc
add
out
adc
cmp
cltd
sub
rorb
lcall
pop
daa
insb
enter
cs
sbb
ret
jo
pop
sbb
mov
popa
icebp
mov
pop
scas
sbb
or
inc
mov
pop
cwtl
rorl
pop
sub
jg
push
cmpsl
pop
dec
es
je
cmc
cmpsl
push
sbb
or
lahf
jmp
stos
sbb
mov
dec
ljmp
xchg
or
nop
das
push
stos
adc
fidivs
jg
les
loop
sbb
std
mov
pop
cmc
movsl
xchg
xchg
sub
shr
leave
and
aam
scas
push
cmp
mov
push
call
sbb
add
dec
adc
test
out
bound
jo
mov
js
inc
or
adc
hlt
mov
call
adc
rcl
add
xor
sub
add
dec
mov
arpl
xchg
in
mov
and
cmp
pop
enter
int3
pop
mov
pop
xlat
push
mov
js
mov
test
pop
inc
rdpmc
mov
in
enter
jbe
insl
inc
hlt
aaa
hlt
inc
xchg
imul
icebp
shrb
je
test
pusha
push
clc
sarb
ret
pop
fldl
dec
sub
add
andb
pushf
inc
xor
adc
insb
sbb
js
pushf
nop
cmpsb
popf
mov
cmpsl
loop
adc
jg
mov
inc
cli
jmp
push
or
rcrb
mov
mov
insb
and
jo
and
lods
xor
mov
sub
sbb
loope
xchg
clc
mov
inc
mov
stos
mov
repnz
stos
js
sbb
inc
pop
nop
jo
stos
inc
sti
int
cmp
nop
and
pop
cmp
sub
shl
mov
sbb
cmpsl
fsubr
pop
shl
sbb
outsl
test
gs
add
mov
cmp
imul
push
fwait
lret
xchg
sbb
push
xchg
lcall
in
cmovb
mov
data16
daa
dec
push
xlat
pop
mov
push
dec
pop
jg
pusha
lea
in
mov
dec
es
lock
xchg
mov
xchg
add
pop
sbb
mov
mov
dec
arpl
mov
aam
out
sub
jmp
sbb
adc
push
push
sub
pop
cli
or
pop
sub
mov
jbe
inc
ja
lcall
aas
jl
into
xchg
mov
mov
inc
or
add
push
ret
test
inc
leave
mov
mov
adc
push
mov
lret
mov
cld
shrb
inc
rorl
mov
stos
adc
es
mov
jl
cmpsl
pop
dec
ds
jp
arpl
mov
ds
xchg
xor
xor
lcall
cmp
sub
xchg
or
xor
jmp
sbb
mov
and
pop
xor
xor
xchg
popa
ret
mov
movsl
adc
dec
lret
test
sbb
testl
or
add
mov
cmp
ds
test
jecxz
in
fsubrp
sbb
cli
icebp
dec
hlt
insl
adc
mov
xchg
xchg
rcrl
repz
or
test
dec
mov
jecxz
jb
push
mov
add
mov
test
pop
push
xchg
xchg
fmuls
lock
cmp
sbb
pop
adc
add
fnstcw
push
cmp
lret
gs
das
jg
shlb
gs
push
mov
ficoml
inc
ret
pop
hlt
sbb
inc
mov
sbb
lods
in
loope
xchg
mov
mov
cli
jmp
lret
pop
xchg
fwait
adc
jo
xchg
mov
lea
jbe
cmpsb
push
push
fwait
xchg
mov
sbb
pop
push
fisttps
ficoms
push
mov
sbb
push
iret
lods
lret
sti
xor
jecxz
or
gs
mov
jmp
fidivl
out
ja
dec
jb
in
sub
pop
push
stos
mov
lods
cmp
and
fdivrl
xchg
fwait
lds
push
test
mov
scas
xor
pusha
test
idivb
out
push
nop
mov
sub
leave
shll
sub
pop
jl
aaa
hlt
mov
jmp
pop
test
scas
in
clc
jae
sarl
cmp
push
scas
xor
repnz
mov
out
dec
push
add
pop
sub
imul
sbb
inc
out
js
das
pusha
mov
shll
pop
xchg
mov
ret
clc
icebp
lods
outsl
mov
xor
lods
cwtl
or
test
faddl
repnz
mov
mov
mov
jmp
test
test
xchg
out
call
cmc
mov
aaa
inc
stc
mov
icebp
mov
xor
mov
or
out
jae
outsl
sub
cmpsl
mull
rclb
sbb
jno
mov
test
inc
rolb
cmp
hlt
xorb
ret
rolb
pop
push
std
pusha
cmp
cmp
push
lcall
pop
pop
sahf
push
push
push
push
test
out
fdivl
xchg
xchg
fdivs
mov
or
xchg
jnp
loope
add
adc
sub
xchg
fcmovnbe
cli
pop
pop
push
rcrb
sbb
push
xchg
xor
cmpsb
jge
enter
cwtl
pop
enter
jo
mov
lods
xchg
into
add
or
fs
fucomp
movsl
test
adc
xchg
mov
clc
leave
and
pop
into
pop
sbb
jmp
sbb
sbb
gs
push
jp
imul
adc
adc
out
dec
outsl
push
in
fwait
in
test
pop
and
cmp
adc
lods
mov
mov
andnps
loop
pop
pop
push
mov
test
push
loop
out
pop
cmp
cwtl
sbb
jns
int
cmp
int
aas
push
push
imul
xchg
mov
xchg
mov
scas
outsb
insb
shl
cmpsl
loop
add
sub
pop
xor
lds
int
add
pusha
repz
iret
add
repnz
cli
inc
jmp
adcb
clc
je
hlt
repz
push
and
mov
sarb
stos
mov
cli
inc
push
data16
cmp
xchg
sbb
cmp
xchg
test
push
fwait
int
arpl
pushf
and
int
mov
cmp
test
cmp
sar
loop
lods
je
imul
push
in
add
test
inc
repz
iretw
and
push
ss
loop
jns
jmp
jecxz
dec
arpl
mov
lret
mov
lret
sbb
push
dec
push
cmpsl
sbb
mov
addl
shrb
xor
pop
mov
ret
jae
inc
and
daa
and
out
sbb
lahf
gs
mov
sub
aad
push
shlb
inc
stc
loopne
inc
adc
loop
add
cmp
repz
or
and
mov
dec
inc
lea
push
fisubrl
call
lods
clc
loop
or
mov
mov
mov
sbb
hlt
orl
xchg
mov
fs
sahf
xchg
inc
xchg
fs
jge
out
mov
ja
loope
add
icebp
inc
sub
dec
pop
repnz
dec
push
insb
xor
dec
lret
loope
in
mov
cmpsb
add
lret
sti
lods
popf
icebp
scas
insl
sahf
add
in
jae
repz
nop
out
rep
xchg
iret
divl
mov
xchg
aam
cmp
adc
mov
mov
sbb
out
mov
or
rorl
inc
fildl
bound
pop
adc
mov
cmpsl
sahf
cmpsb
cmpsb
aad
or
mov
jnp
sub
jecxz
mov
fwait
insb
in
or
xchg
int
push
adc
and
pushf
and
inc
pop
arpl
cmp
ret
jnp
dec
arpl
mov
jns
in
movsl
fisttps
jbe
sub
sub
sbbb
rcll
scas
pop
xor
daa
fwait
push
xchg
std
lds
aaa
mov
clc
sarl
gs
sahf
outsl
out
xchg
iret
mov
int3
out
xchg
nop
hlt
pop
mov
xchg
ljmp
sub
mov
fcoms
and
cwtl
div
in
sbb
movsb
call
daa
mov
add
shll
lret
push
mov
popf
aas
leave
mov
cmc
mov
sti
and
movsb
pop
cwtl
xor
inc
mov
lret
cmp
or
jbe
loop
fs
mov
cmpsb
and
mov
mov
inc
cmp
push
mov
negl
cmp
pusha
mov
push
jnp
xchg
xchg
ret
in
mov
jg
push
or
pusha
leave
dec
ret
inc
icebp
add
xor
xchg
movsl
cmc
stc
int3
and
test
stc
inc
test
das
mov
push
cmpsl
mov
cld
rorb
std
add
test
add
fmul
inc
pop
cmpsl
inc
bound
es
push
sub
out
mov
and
jle
inc
add
lahf
fnstsw
inc
clc
int3
daa
outsl
fwait
rcpps
mov
testb
pop
or
idivl
sub
add
cmp
mov
fcmovnbe
add
loope
int
cld
xor
fisttpll
mov
out
adc
fldt
leave
into
arpl
dec
test
aas
push
jge
fisttpl
into
ret
lds
push
sti
sbb
inc
sub
movsb
insb
stc
mov
das
push
data16
jbe
out
sub
pop
push
in
addr16
pushf
mov
xor
mov
push
icebp
loop
test
cli
xor
add
cmp
push
add
inc
cmp
shlb
ret
sub
aad
out
test
inc
xchg
and
push
aas
test
push
inc
test
in
into
fdivr
push
pop
popa
mov
jo
test
enter
jl
mov
imul
ljmp
lods
push
cmc
popa
jmp
inc
cmpsl
mov
outsl
or
cmp
inc
fstps
les
push
mov
adc
mov
mov
setns
xchg
fisubl
mov
inc
cmc
negl
mov
jbe
das
lret
pop
stos
cld
jecxz
mov
mov
in
shlb
xchg
jg
jns
pop
ljmp
jnp
cmp
ja
pop
out
mov
rcll
jbe
mov
icebp
fwait
sbb
shll
nop
jns
rcr
dec
sub
sub
dec
int
push
adc
fistps
lahf
mov
loope
inc
inc
xchg
add
aas
push
mov
xchg
imull
movsl
xchg
push
mov
subl
aam
sahf
sub
mov
stc
sbb
mov
int3
out
cltd
cmpsl
cmpsl
fidivrl
lret
add
decb
push
ss
mov
lock
xor
add
xor
cmp
xchg
inc
sti
in
cmc
lods
xlat
xor
je
pop
pop
push
dec
or
sub
sbb
cmc
cld
stos
sub
sub
es
xchg
jmp
mov
mov
imul
inc
repz
lret
es
bnd
outsb
imul
jae
pushf
hlt
mov
push
mov
cmp
enter
cmpsb
jl
cmpsl
pop
cmpsl
cmp
pop
xchg
sbb
in
ret
je
xor
mov
sub
jae
dec
prefetch
in
jmp
dec
ljmp
iret
push
bound
fidivrs
imul
push
push
or
push
fadds
add
testl
fisubl
iret
inc
rorl
mov
out
cmp
mov
mov
stos
rclb
pusha
std
xor
gs
popf
adc
inc
mov
adc
fcom
test
je
out
mov
pusha
pusha
mov
out
mov
ficoml
mov
adc
sub
int3
aas
sub
pop
xlat
cld
jbe
das
cmc
shll
xor
repz
out
in
rcrb
pop
out
aam
movd
dec
mov
xchg
sarb
insb
ret
jne
cld
cmpsb
mov
imul
inc
mov
xor
inc
mov
mov
xchg
jb
adc
imul
add
push
mov
fisubrl
push
mov
int
rcll
divl
gs
mov
jle
in
gs
daa
je
push
xor
jno
jp
ret
and
vpmulhuw
mov
inc
mov
imull
call
and
enter
lahf
mov
mov
adc
xchg
jecxz
in
scas
jecxz
in
roll
addr16
cmp
mov
sbb
mov
out
dec
aas
jle
pop
mov
imul
cmpsb
add
inc
sub
jmp
or
leave
or
pop
daa
and
int3
add
jl
dec
outsb
jo
adc
je
int3
inc
inc
cld
cmpsb
mov
and
das
and
add
adc
lahf
jmp
int3
test
into
test
sbb
daa
out
aas
or
jle,pt
sahf
outsb
dec
mov
test
jmp
aam
pop
in
push
sub
mov
mov
cltd
mov
mov
fld1
jno
push
cld
lods
dec
data16
push
repz
mov
aaa
fs
xchg
xor
jae
daa
and
inc
lret
inc
mov
mov
pop
inc
push
or
sti
out
mov
adc
ficompl
cmp
dec
cmp
xlat
xor
jnp
pop
int
jnp
cli
mov
aam
leave
inc
xchg
and
push
popf
clc
and
cmpsl
inc
jno
dec
stos
pop
imul
jge
sahf
arpl
fwait
xor
sbb
aaa
pop
outsl
sub
jne
mov
aad
adc
mov
cmp
arpl
ss
mov
add
jne
out
dec
xor
cmp
sbb
decb
xor
out
dec
pop
inc
cmp
aas
popf
cmp
pop
mov
jle
jbe
int3
pop
arpl
stos
lahf
add
out
and
bound
mov
mov
addr16
mov
in
nop
fs
aad
pushf
outsb
aaa
xlat
ret
lds
jne
std
pop
or
mov
inc
push
push
cs
xchg
xchg
pop
and
cmp
push
cmp
push
adc
scas
pop
je
mov
leave
mov
push
adc
pop
pusha
and
cmpsb
adc
push
xchg
jg
pop
xor
cmp
cmc
mov
lret
cld
jnp
pop
jnp
movsb
push
nop
sub
lock
das
jb
or
test
sub
lcall
lods
imul
dec
mov
add
push
clc
push
lret
xchg
bswap
shl
mov
icebp
dec
push
push
pop
pop
mov
testb
adcl
inc
cli
rolb
jmp
fbstp
fsubl
jl
insb
psllq
test
les
in
stos
push
lahf
pop
mov
jo
outsb
push
inc
inc
inc
and
sarl
pop
inc
inc
test
out
xchg
mov
jmp
scas
jne
dec
pop
pop
mov
sbb
jno
pop
dec
mov
mov
fimuls
add
mov
dec
sbb
mov
jg
dec
cmp
fmuls
mov
dec
jno
inc
mov
negb
mov
jo
push
mov
jg
xchg
sbb
fcomi
adc
les
lahf
pop
ss
nop
popl
rcrb
jno
sub
mov
rol
dec
cmp
mov
sbb
xlat
and
push
adc
and
cmp
in
inc
pop
jecxz
lcall
jnp
in
mov
in
cltd
dec
lret
pop
add
roll
in
adc
inc
or
jecxz
jle
fdivr
test
test
loop
mov
or
and
and
and
or
and
lahf
xor
lret
mov
rorb
testl
jns
cmp
cmpsl
es
jne
or
mov
pop
sbb
xlat
jmp
cmc
adc
outsb
xor
sub
stc
sarl
xor
jno
xchg
test
push
and
sahf
xchg
ffree
xchg
dec
xchg
pop
clc
leave
sub
sbb
mov
push
xchg
mov
into
push
inc
fwait
xchg
test
xor
jp
mov
fidivl
lods
inc
xchg
jnp
push
sbb
hlt
out
test
xchg
in
adc
psubw
addl
or
cmp
sbb
mov
pop
inc
insl
outsl
pushf
sbb
imul
test
das
add
js
mov
cmpl
sqrtps
sbb
rcrb
mov
jns
mov
cmp
or
rep
mov
jmp
mov
loope
mov
dec
test
fwait
clc
popf
arpl
rcrl
mov
pop
push
cmpsl
sbb
pop
adc
push
push
mov
testb
mov
cld
imul
mov
inc
cmpsl
loop
mov
arpl
stos
jne
and
pop
aaa
outsb
aam
repz
jmp
lret
pushw
test
sbb
and
mov
lcall
xor
or
xchg
jo
add
out
sub
sbb
jecxz,pt
sahf
rolb
in
enter
sbb
push
jge
loopne
xchg
popf
mov
insb
pop
jae
push
cmpsl
adc
mov
popf
jecxz
mov
scas
inc
mov
add
lods
mov
add
and
cmp
mov
mov
cs
mov
nop
sbbb
push
adcb
inc
push
js
cmp
dec
xchg
lahf
fincstp
or
scas
fistpl
and
and
inc
rcll
cmpsl
mov
mov
or
in
adc
xor
cmp
mov
pop
add
pop
and
add
lret
lods
icebp
movsl
clc
aam
add
pop
jo
lock
pusha
jns
inc
pop
fisubs
sbb
add
loopne
std
and
sahf
mov
push
mov
arpl
dec
fiadds
inc
dec
xchg
fadd
push
out
pop
outsl
ja
nop
lret
fstpt
sbb
jbe
outsl
enter
pushf
xchg
jmp
movsl
call
ja
and
aam
test
sub
rcll
daa
add
add
cmp
aaa
out
sub
inc
sbb
movsb
pop
shrl
cltd
loopne
sbb
add
pop
push
aam
mov
lahf
mov
sahf
mov
pop
add
stos
cs
je
loope
divb
cmpsb
dec
mov
xchg
xor
je
sub
sbb
cmp
mov
push
xchg
cs
mov
lcall
mov
dec
adc
pop
mov
adc
jl
cld
or
mov
ficoms
sahf
or
mov
mov
xchg
insb
fldt
xchg
loop
cld
pop
or
movsl
ss
push
mov
cs
and
fiaddl
push
out
movsl
clc
imul
jno
lret
mov
mov
mov
fimull
xorb
adc
sub
and
pop
icebp
pop
daa
movsb
add
roll
or
add
adc
fistpl
andl
cs
fsubrs
mov
rorb
scas
xor
mov
jp
pop
mov
scas
mov
inc
popa
rorl
aam
shlb
cmp
cmp
pop
popf
sub
inc
adc
cli
xor
xchg
in
pusha
and
adc
dec
sub
mov
lcall
push
pop
ljmp
aam
shlb
or
clc
jle
test
mov
shr
aad
cmp
cld
loopne
mov
sbb
sbb
jo
ds
jge
mov
fwait
out
stc
jae
cmp
aas
loopne
cmp
push
xchg
inc
data16
fldl
clc
jo
push
jecxz
stos
fcmovb
lea
pop
pop
and
xor
xchg
adc
dec
pusha
xchg
in
mov
sub
lock
in
pop
stos
mov
jp
lods
inc
test
popa
rorb
xchg
xlat
and
test
outsl
mov
mov
cmpsl
or
cmp
pop
clc
adc
xchg
pop
imul
ds
dec
cmpsl
mov
inc
adc
sarb
inc
fidivs
jb
in
pop
mov
adc
loop
scas
xchg
mov
in
adcb
and
sbb
das
nop
mov
movsl
imulb
inc
cmp
add
int3
xchg
push
or
das
dec
in
cmc
subb
inc
call
pop
fld
mov
jle
inc
das
mov
cmpsl
out
inc
outsl
adc
gs
cmp
clc
jbe
movsl
inc
push
lock
xor
xor
add
push
fs
aad
out
stos
lods
push
roll
mov
jle
out
mov
mov
lock
sub
inc
negb
pop
xlat
inc
and
sahf
inc
mov
insb
and
mov
fwait
dec
mov
pushf
lods
and
cmp
je
jae
and
clc
in
lret
clc
js
or
fimuls
sahf
xchg
pop
and
scas
jae
adc
dec
xchg
jb
inc
add
mov
jb
pushf
enter
sbbl
dec
and
stos
test
mov
cmpb
xor
cmp
leave
xlat
xchg
test
pop
inc
rcrb
push
mov
cmpsl
lret
sbbb
jl
cmp
xchg
xchg
movsl
jmp
push
inc
push
call
cmp
inc
rolb
sub
pop
jmp
ja
dec
mov
insb
push
push
pop
jne
pop
je
jg
and
adc
call
fcomip
loope
adc
addr16
add
mov
jb
cmp
jo
and
testl
or
std
xor
cmpsl
jle
sahf
sbb
inc
jnp
jle
sarl
fldl
or
dec
es
xchg
imul
hlt
ljmp
mov
xchg
mov
stos
cs
jmp
mov
sarb
sub
dec
and
test
mov
jo
push
fldlg2
mov
fwait
jmp
mov
fwait
les
or
adc
dec
in
cmp
adc
stc
dec
mov
enter
add
mov
mov
outsl
xor
dec
lods
cmp
xchg
add
shrl
jmp
xorl
repz
mov
dec
mov
push
les
xchg
adc
fmuls
sub
sbb
fwait
rcrb
arpl
clc
bound
cwtl
push
jge
lahf
cli
or
xchg
push
sbb
xchg
add
pop
stc
mov
stos
aam
aad
sub
xchg
mov
jo
push
sbb
mov
inc
and
cltd
jg
xchg
shll
xlat
mov
mov
pushf
xorb
ss
aam
mov
in
cmp
xchg
ret
dec
sub
add
push
sti
test
pop
add
outsb
pop
aam
std
or
sti
aad
dec
inc
jg
in
mov
xorl
imul
cmp
sbb
inc
sub
lahf
cmpsl
pop
inc
js
add
adc
push
lret
repz
loop
in
ljmp
shll
iret
mov
mov
push
fcompl
sbb
pop
add
shlb
jno
jecxz
sub
into
and
insb
xlat
popf
mov
or
addr16
test
decb
or
lods
dec
sub
rolb
out
cmp
add
repz
and
adc
mov
outsb
fsts
or
rclb
dec
or
sahf
mov
fcomp
pop
push
test
insl
jo
pop
xchg
mov
ficoml
test
adc
filds
test
or
fsubl
adc
and
or
jmp
aaa
dec
mov
and
lahf
push
push
and
les
mov
jecxz
or
dec
je
fistl
test
cmp
addr16
addl
orb
pushf
sub
add
out
dec
out
sarb
add
and
or
adc
mov
push
aam
loopew
pop
and
inc
and
mov
pop
int
sub
cli
leave
add
dec
inc
inc
pop
xor
lahf
add
mov
push
iret
test
jge
sub
into
fnstsw
sub
cmp
inc
fxch
leave
mov
sbb
in
cmp
pushf
cmp
push
fiadds
insl
adc
adc
pop
lret
xchg
push
or
mov
pop
pop
or
shlb
sbb
cmp
adc
mov
fsubrs
cmp
daa
xchg
jne
cmp
sub
sti
and
imul
sbb
adc
lds
xchg
int3
sbb
jno
out
stos
jmp
ljmp
cmpsl
int
and
sahf
fnstenv
or
sbb
sub
pop
popf
jmp
aad
loopne
in
icebp
mov
cmpb
lds
addr16
pop
ret
inc
movsl
xchg
push
test
imul
xorl
adc
dec
pushf
iret
cmpsl
aaa
xlat
jns
jg
ljmp
jns
scas
or
insb
dec
dec
add
mov
mov
insl
into
ret
push
or
mov
mov
les
mov
fsubrs
inc
inc
jnp
in
clc
cmpsl
inc
adc
popa
fidivrs
mov
jg
mov
orl
hlt
mov
pop
push
dec
int
dec
mov
push
jnp
jmp
mov
in
shl
shlb
push
mov
sbb
xchg
or
lcall
add
fldcw
fwait
mov
lea
cmp
shr
xchg
jns
cli
test
dec
insb
arpl
leave
mov
mov
mov
jecxz
jae
xchg
mov
xchg
inc
dec
jg
leave
cmp
inc
or
push
mov
sbb
add
pusha
jnp
sbb
mov
inc
movsb
adc
fiaddl
or
mov
mov
add
add
jbe
pop
cltd
mov
jne
mov
icebp
mov
mov
jg
in
int3
int3
mov
dec
lret
inc
scas
sahf
jg
push
pop
call
jne
insb
int
nop
in
mov
daa
sub
pop
cmpsb
adc
inc
in
out
enter
mov
pop
jb
or
mov
jecxz
and
xor
lods
dec
enter
xchg
inc
xor
fbstp
mov
outsl
shlb
mov
lahf
scas
imul
pop
pop
fwait
sbb
jl
sub
xor
push
loop
pop
sbb
icebp
hlt
push
push
mov
jl
lahf
rcrb
cli
xchg
test
out
and
arpl
movsl
cwtl
pop
pusha
or
push
mov
iret
aam
add
fwait
int3
sbb
mov
cltd
mov
xor
bound
add
lret
pop
push
out
lods
cmp
imul
push
nop
stc
pop
and
out
cli
imul
es
or
aaa
pop
pop
adc
aaa
rclb
popa
test
xchg
xchg
mov
inc
pop
in
jnp
lahf
xlat
int3
xor
push
xchg
mov
push
jbe
jbe
xchg
cs
ja
mov
adc
lock
pop
mov
jecxz
mov
mov
mov
aam
fcmovbe
dec
fdivs
and
mov
xlat
test
fldlg2
adc
dec
sub
imul
cld
cmpsl
shlb
jecxz
pop
aas
jl
ffree
int3
mov
mov
bound
sbb
dec
das
out
cs
in
das
popf
int3
lods
jmp
loop
loop
icebp
inc
xor
push
mov
in
aam
mov
dec
gs
jae
in
push
leave
cmc
cld
insl
xchg
dec
mov
scas
call
adc
jl
dec
std
dec
mov
sbbl
sbb
push
mov
cwtl
stos
and
filds
jns
xchg
inc
std
push
jle
cld
int
repnz
sub
mov
insl
mov
movl
push
mov
fisttpll
popa
iret
add
mov
repz
mov
fisubrl
shrb
popa
xchg
jae
stos
insb
push
adc
jp
jecxz
in
mov
push
sub
ljmp
xchg
lds
push
inc
pop
lahf
sbb
jg
lcall
ljmp
xor
jae
rcll
gs
popa
loopne
loopne
fsub
outsl
mov
dec
mov
and
pop
jecxz,pt
dec
add
jo
fisttpl
jns
jae
lcall
push
sbb
stc
pushf
sub
rorl
popa
add
inc
sbb
je
adc
je
mov
ds
jge
fildl
es
cmp
or
pop
mov
jecxz
insl
out
iret
and
dec
sarb
gs
lgs
adc
xor
fs
dec
dec
xor
push
lods
je
or
out
adc
cld
add
cmp
hlt
and
push
mov
pop
push
mov
mov
fisttps
sti
pop
mov
cmp
jno
sbb
in
and
and
add
dec
out
inc
aam
push
inc
movsb
test
pop
cmp
rcll
imul
dec
movsl
movsb
adc
stos
fs
les
pop
adc
xor
or
adc
jmp
push
aas
test
rolb
or
les
jo
ss
xchg
pusha
fcomps
shll
mov
xor
xchg
outsb
mov
aaa
mov
stos
lods
sub
mov
pop
xor
push
jae
mov
imul
out
cmpsb
push
xlat
push
and
jmp
add
sub
in
mov
lret
fidivrl
ljmp
rol
repz
xchg
adc
inc
psrld
enter
mov
roll
lock
sti
mov
jns
pop
or
mov
cmp
fmul
sub
push
sar
ret
push
push
cmpsl
add
mov
or
jbe
repnz
ret
sub
inc
cmp
cwtl
je
mov
jae
cmpsb
or
lahf
cmp
orb
sub
jmp
jp
mov
xchg
test
cmp
fprem
sbb
pusha
dec
jg
inc
test
sub
cmpsl
jmp
mov
movsl
decl
shlb
sub
cmpsb
shll
fwait
sbb
pop
cmpsl
mov
sub
mov
mov
loope
out
jmp
iret
das
fsubs
fwait
lea
sbb
addr16
mov
jb
mov
xor
jmp
dec
lock
push
pop
cmp
jae
test
mov
mov
push
mov
mov
sub
cmp
cmp
scas
pushf
xchg
push
iret
inc
loop
sbb
imul
test
lods
fstpl
dec
popf
dec
dec
pop
push
test
loopne
xchg
fsts
fisttps
ds
mov
ds
cmp
insl
inc
mov
idivb
int3
stos
xchg
push
pop
mov
push
data16
arpl
ljmp
mov
mov
sub
adc
nop
dec
push
pop
xlat
incb
leave
fs
sub
or
sub
fbstp
cmp
pop
mov
mov
pop
push
out
fldt
mov
jmp
sub
pusha
aam
bound
testb
add
fdivrs
jns
pop
sub
stc
leave
sub
mov
dec
loop
push
xchg
push
roll
xchg
andb
enter
push
inc
mov
insl
popf
jo
push
pop
fsubs
mov
adc
sbb
aaa
or
out
dec
pop
cmp
sbb
mov
and
pop
lods
fadds
add
test
int
jl
lret
ret
xchg
mov
mov
mov
dec
and
repz
lock
test
xor
add
dec
jne
call
loopne
repz
and
loopne
in
popa
or
andnps
push
out
out
jo
xor
stc
push
ja
lea
popa
xchg
mov
sub
mov
cmp
push
add
mov
jg
mov
pop
add
insl
and
sarb
cmp
cmp
or
push
push
push
out
fldt
rcrl
push
jae
daa
out
mov
test
pop
stc
mov
sti
dec
pop
imul
scas
hlt
jle
mov
loopne
leave
aaa
aad
sbbb
mov
xor
imul
ljmp
xchg
mov
rcl
pop
cmp
push
jns
pop
loop
jp
cltd
int3
movsl
or
xchg
scas
imul
dec
push
pop
xor
mov
aam
cmp
sahf
sub
mov
xor
testl
xchg
cmc
pushf
xlat
mov
shll
cld
repz
lret
pop
or
adc
adc
ds
ret
dec
outsl
fs
inc
rorb
push
aad
push
xor
arpl
aas
aam
mov
xor
in
add
repnz
or
mov
aas
cmp
push
xchg
or
pop
movsl
test
movsl
or
push
inc
or
fucomip
addr16
movsb
daa
push
popa
pop
sub
aam
mov
lea
fs
clc
add
ret
dec
sbb
call
popf
in
sub
int3
pop
out
mov
stos
push
add
jbe
mov
xor
in
inc
pop
fsubrs
mov
frstor
cmp
jge
jl
fs
xchg
sbb
lock
push
insb
pop
pop
mov
xchg
andl
movl
addb
jne
out
bound
loop
test
decl
pop
jmp
cld
mov
add
jg
jno
out
jb
aam
cmpsb
aam
stos
xor
fcmovnbe
dec
cs
lret
outsl
sub
mov
test
dec
cmpsb
jb
add
jne
imul
mov
cwtl
fcoml
jp
negl
hlt
rclb
fidivs
add
lds
mov
loop
mov
fucom
enter
fsubs
mov
push
pop
or
rcr
jb
jecxz
sbb
enter
sarl
sub
dec
adc
clc
pop
adc
into
xor
out
andl
mov
mov
push
cmpsl
inc
ss
popa
out
sbb
aam
scas
and
mov
cwtl
repz
sbb
sbb
sub
xor
and
push
int
adc
fsubrl
and
push
out
daa
xlat
xchg
mov
sbb
ret
jp
int3
adc
xchg
add
jno
add
ffreep
in
and
decb
inc
add
mov
push
repz
sahf
rcll
xchg
and
add
sbb
stc
ja
out
push
inc
jp
mov
stos
xor
push
mov
jo
xor
mov
in
in
mov
leave
jmp
int
push
jmp
adc
and
cmp
lock
xchg
mov
mov
mov
xchg
and
jmp
and
lret
fwait
jg
adc
sub
push
and
dec
mov
push
pop
inc
xchg
arpl
icebp
std
xor
pop
in
push
imul
int
xchg
sbb
orl
ret
gs
push
insb
xchg
roll
jge
cltd
lods
int3
aam
push
cmp
xlat
scas
jo
ret
dec
popa
dec
inc
shlb
mov
xor
mov
jne
daa
sbbb
enter
gs
jo
sub
sbb
iret
sbb
inc
jle
rorb
in
jle
cltd
sbb
cmpsb
add
sbb
in
and
sub
jns
dec
imul
adc
sti
fdivl
movsl
and
cwtl
sub
or
test
clc
cmc
sbb
rorb
mov
push
xlat
xchg
sahf
movl
cld
fwait
imul
in
aas
fwait
inc
pop
test
xor
arpl
lcall
lret
rcrb
dec
lret
pop
in
lcall
xor
xchg
clc
in
xor
jae
jo
gs
les
cld
ss
pop
dec
or
mov
lret
sar
and
pop
imul
into
xor
xlat
lret
cld
xchg
jnp
adc
dec
imul
int3
dec
divl
inc
js
lret
pusha
push
mov
sub
imulb
adc
lock
sbb
rorb
leave
mov
lea
mov
adc
stos
repz
sub
xchg
jmp
and
cmc
aad
pop
lret
pop
sbb
cmp
dec
inc
mov
pop
jmp
mov
mov
out
inc
ja
addr16
push
ja
data16
pop
cmp
scas
mov
dec
in
cld
push
mov
jl
lods
je
add
mov
popf
mov
arpl
mov
cmp
mov
stos
dec
testl
adc
fucomip
les
imul
fisttpll
pop
xchg
xchg
mov
repz
push
jl
xor
pop
cld
bound
fstps
insl
cli
xchg
iret
cmp
aad
int
inc
loop
add
and
data16
cmc
lahf
push
cmp
sbb
mov
cmp
loope
jbe
mov
call
in
or
sub
jne
jno
xor
mov
adc
icebp
adcb
mov
arpl
and
add
dec
mov
sub
jae
ret
sub
outsb
stos
inc
dec
mov
pop
sbb
jo
xor
insl
mov
pop
xor
mov
cmp
cmpsb
jp
mov
dec
lret
xchg
add
xchg
hlt
pop
dec
sarl
push
and
aas
mov
dec
mov
or
stc
pop
fs
divb
sbb
cmp
daa
cltd
das
ret
and
dec
test
mov
adc
and
ljmp
aad
das
bound
mov
je
in
sbb
mov
xor
lret
mov
mov
bnd
add
push
daa
stos
ds
rcrb
stos
outsl
pop
paddusb
dec
leave
rolb
dec
cmpsb
out
and
movsb
jae
pushf
cmp
out
push
lret
repz
and
lods
sti
adc
addb
cmp
add
imul
fs
lods
adc
dec
cmp
sbb
adc
cs
and
sub
in
dec
sbb
and
shlb
sbb
imul
push
lock
add
arpl
adc
mov
xor
test
mov
dec
and
lock
into
pop
mov
push
pop
inc
repnz
sub
mov
add
test
mov
in
lock
pop
pop
sbb
inc
inc
mov
add
rclb
rcr
fidivrl
lods
sub
pop
add
and
cmp
mov
js
pop
xchg
imul
out
mov
push
push
ret
mov
in
add
push
out
jbe
xor
pop
pop
cmp
fwait
insl
push
ret
inc
inc
ljmp
push
ljmp
dec
cmpl
addr16
or
ja
jns
or
and
push
or
mov
mov
data16
loope
popa
mov
dec
mov
lds
mov
mov
out
pop
out
in
xor
cmp
lret
leave
mov
xor
rorb
adc
push
je
xchg
push
add
sbb
stc
rorb
fimull
dec
aad
insb
repz
repnz
jb
sti
les
cmp
inc
in
push
aad
mov
aad
decl
inc
fsts
clc
add
cmpsb
inc
add
addb
mov
mov
and
stos
jns
mov
fildll
mov
cmp
test
mov
scas
jle
dec
or
add
mov
mov
pop
pop
mov
mov
loop
push
fisubl
mov
popf
pop
daa
sahf
push
xchg
xor
adc
fimuls
ds
jmp
in
adc
jge
sbb
sahf
xchg
push
fldcw
sub
into
ds
dec
pusha
daa
stos
push
mov
fsubrl
loop
ljmp
repnz
add
fstl
mov
xchg
fildll
push
pop
jbe
pop
dec
in
outsb
sbb
xchg
sbb
mov
fidivl
dec
mov
ss
mov
sahf
lea
outsb
xlat
addr16
cmp
in
cmp
nop
pop
pusha
mov
jb
mov
jnp
inc
cmp
inc
push
shl
call
mov
sbb
inc
adc
imul
jb
push
push
arpl
test
push
xchg
into
cmp
lock
pop
test
dec
out
aas
inc
mov
lret
push
rcrl
and
pusha
inc
ja
out
jecxz
testb
jle
lcall
mov
xor
in
jp
in
test
xchg
or
pop
lcall
dec
fwait
outsl
inc
out
add
cmpb
jle
adcl
sbb
popf
out
adc
pop
loop
mov
ret
loop
fsubl
mov
int
xor
push
lret
mov
aas
xor
cld
insl
es
inc
test
inc
insl
imul
mov
inc
xor
aad
xchg
and
je
push
mov
mov
mov
jnp
arpl
dec
lcall
sbb
mov
sarb
push
fstpl
arpl
pop
pusha
daa
sbb
mov
adc
sti
insb
popl
js
and
mov
sbb
jl
out
mov
rorb
push
and
out
js
jl
imul
shll
insb
shl
lcall
inc
into
lcall
dec
fdivs
or
ret
push
pop
pusha
outsl
push
or
inc
insl
imul
bswap
cli
cmc
int
push
std
cltd
or
xor
outsl
and
jle
sar
sti
mov
cld
sti
fprem
lock
pop
data16
scas
inc
pushf
cmpsl
insb
jno
test
mov
repz
add
xchg
insl
mov
dec
mov
cmc
stc
movsl
or
pop
test
neg
jmp
mov
sub
xor
cmp
repz
jo
out
mov
ja
cmpsb
pop
out
xor
pusha
pushf
mov
into
adc
adc
dec
hlt
inc
inc
mov
pop
fadds
pop
xchg
push
jnp
pop
push
mov
and
fisubrl
cwtl
ljmp
pop
stc
int
cs
outsl
clc
iret
inc
arpl
ret
jb
adc
mov
divl
out
insl
sbb
jg
test
xchg
fadds
imul
aad
popa
sbb
mov
mov
out
cwtl
mov
mov
mov
adc
in
loope
and
andb
sub
rcll
fcoms
movsl
inc
in
lret
mov
pop
scas
sbb
ret
jg
and
jnp,pt
add
push
bound
sahf
add
push
or
stc
nop
pushf
mov
push
std
daa
cmpsl
sbbl
aam
push
sti
pusha
es
mov
sub
ret
imul
jge
mov
lcall
test
out
fs
mov
push
jo
repnz
cmp
fadds
jae
jbe
mov
sub
xor
test
pusha
push
mov
loopne
mov
lret
mov
dec
dec
mov
xchg
lods
dec
lahf
std
mov
bound
xor
sbb
dec
pop
push
jle
lock
jae
pop
push
ljmp
ds
scas
cs
ret
in
divl
and
stos
inc
sbb
pop
aad
int3
ret
xchg
dec
mov
pop
xlat
and
mov
call
fsts
rcrl
adc
insb
call
jg
stos
lods
insb
scas
push
cli
into
iret
adc
sbb
dec
dec
addb
mov
add
mov
cli
dec
lea
cmp
jmp
adc
cld
jo
aaa
andb
pop
call
pop
nop
mov
sub
mov
jbe
shlb
adc
push
inc
enter
dec
in
ja
xor
mov
mov
xchg
pop
xchg
outsl
push
outsl
mov
test
dec
dec
fadds
mov
cwtl
jnp
mov
jae
and
std
cmp
xchg
dec
sti
xchg
movsl
roll
mov
add
stc
shl
inc
push
jg
xchg
push
or
cmp
xchg
jo
stos
sub
and
cmpsb
jge
push
sbb
jo
mov
ds
loopne
data16
hlt
xlat
movsl
dec
adc
dec
sahf
repz
cmp
or
mov
cmpsb
mov
jnp
rcrb
sbb
aam
or
sbb
add
cltd
push
mov
jae
adc
pop
sahf
iret
cmpsb
push
fidivl
mov
fwait
movsb
cli
or
cmc
pusha
push
fnstenv
sub
aas
sub
int3
nop
in
pop
cmp
dec
xor
aas
loopne
push
lahf
cli
mulb
mov
stos
pop
shrb
inc
dec
movl
pop
mov
movsl
sti
mov
shrb
stc
pusha
fistpl
jp
xor
movsl
sub
jle
ja
push
push
loope
push
ja
lret
inc
push
loope
mov
xor
sarb
stc
ljmp
or
sti
lcall
xchg
xchg
ss
or
mov
adc
fcompp
pop
std
jb
mov
mov
mov
xor
mov
fnstcw
pop
insl
mov
mov
push
push
mov
push
add
ljmp
pop
mov
int3
pop
loopne
sarb
sub
pop
inc
and
jae
jecxz
lret
shrl
sub
mov
or
and
lods
fistpl
sti
xorl
lahf
push
sub
adc
xchg
push
lods
sarb
mov
ret
lret
inc
repz
in
pop
mov
cmp
xor
in
jnp
mov
scas
sub
insl
movsl
xor
scas
add
scas
popa
pop
incb
sti
sub
leave
jae
xchg
ret
xchg
fnsave
mov
aam
xchg
mov
cmc
dec
jle
cld
lea
into
arpl
inc
and
add
pop
pop
out
fs
xchg
call
mov
xchg
sbbb
in
rcrb
push
mov
out
je
pop
and
and
and
xlat
fs
dec
pop
gs
pusha
xor
pop
mov
mov
inc
adc
addl
adc
mov
mov
sbb
xchg
jae
test
in
inc
lea
sbb
mov
inc
adc
and
pop
xor
xor
lods
pop
pop
out
sub
sbb
and
inc
cmpsb
outsl
jnp
mov
scas
mov
jmp
mov
cltd
ret
movsb
jb
scas
inc
insb
cmp
in
push
popf
lods
fsubs
lret
jge
xor
rcll
daa
mov
fs
dec
movsb
push
mov
cmp
lods
roll
sub
lock
and
das
mov
iret
das
mov
jbe
mov
xchg
out
xor
adc
mov
insb
push
cmp
push
jmp
inc
jmp
add
call
sbb
mov
cmp
ss
loop
rclb
push
pop
loope
lods
rclb
jnp
in
jne
dec
bound
insl
push
mov
cmp
lahf
repnz
push
fadd
add
mov
xchg
sti
lds
sub
shr
push
or
ret
pop
mov
push
into
js
xchg
mov
pop
es
dec
fucomip
pop
dec
mov
jnp
mov
sub
mov
push
inc
popf
cwtl
adc
dec
jle
fs
jne
jge
jae
sbb
cs
test
imul
rclb
int
ds
xchg
adc
push
inc
test
jne
pop
xor
add
mov
inc
push
out
and
lods
push
add
push
cmp
sub
pop
xchg
push
dec
pusha
jno
gs
bound
stc
mov
negl
mov
mov
loope
lahf
inc
cmpsl
lds
gs
jo
xchg
loop
orb
xchg
mov
jbe
add
stos
xchg
pop
popf
xchg
imul
in
add
mov
outsb
dec
mov
mov
cmpsb
rorl
mov
cwtl
jg
out
pop
mov
sub
bound
insl
outsl
lods
insb
adc
pop
popa
in
fcoml
jno
das
scas
inc
xchg
rcrb
js
out
inc
jnp
xor
cmc
iret
push
lods
nop
add
stos
test
mov
mov
pop
rorl
sti
in
mov
and
mov
insl
xchg
jmp
inc
mov
push
adc
cmc
inc
out
or
or
scas
fcomp
add
dec
inc
dec
mov
jnp
ja
fldenv
in
push
in
jb
ret
pop
daa
stc
gs
jns
xchg
sbb
loope
stos
fadd
gs
jae
in
pop
xchg
cmc
cmp
or
sbbb
insl
outsl
mov
inc
ljmp
jl
and
mov
lea
test
mov
or
push
mov
movsb
outsb
fdivrl
adc
loope
or
mov
shrl
mov
xchg
push
mov
jecxz
lds
jnp
add
rcrl
ret
xor
mov
imul
movsb
daa
jge
xchg
repz
addr16
jmp
out
mov
popa
icebp
mov
mov
inc
movsb
arpl
xor
or
pushl
inc
inc
and
push
dec
pushf
push
xor
adc
cltd
ss
xor
pop
addl
mov
add
dec
loop,pn
or
enter
adc
call
test
insl
xor
inc
pop
or
pop
pop
mov
lods
movsl
mov
loope
jb
out
or
xchg
xchg
pavgb
daa
insl
gs
andb
rorl
xchg
imul
jmp
jle
push
xchg
and
bound
out
sub
es
push
xchg
fucom
les
outsl
mov
gs
mov
pushf
xchg
inc
gs
inc
inc
fwait
dec
in
pop
mov
pop
mov
ret
mov
pop
and
mov
mov
es
sbb
mov
sub
pushf
nop
mov
jns
add
outsb
dec
push
inc
push
jg
idivb
daa
stos
sub
xchg
mov
jne
jo
pop
mov
ljmp
int
test
scas
or
and
and
std
push
inc
mov
ss
or
jl
jb
push
mov
cmp
xor
cmp
lds
aaa
call
lahf
xorl
in
cmpsl
mov
popa
into
std
xor
dec
and
xor
or
pop
push
lods
jge
mov
mov
mov
jl
in
into
test
and
test
lods
mov
arpl
push
dec
mov
cmpsb
or
mov
repz
dec
es
roll
out
pushf
mov
mov
inc
push
fwait
shlb
xchg
popf
das
sbb
dec
cmp
xchg
andb
andl
daa
mov
ds
jge
rorl
stos
inc
cltd
jmp
add
xchg
jp
cmp
xor
call
insl
add
pusha
fs
sti
std
inc
jmp
inc
inc
sahf
and
or
or
or
leave
cld
int
xor
mov
call
std
hlt
sti
stos
mov
jmp
mov
mov
imul
mov
sbb
mov
push
jle
push
int
cmp
or
loope
jne
insl
mov
ret
and
inc
ds
imul
jge
xor
das
xorb
movaps
mov
das
ret
inc
popa
mov
stos
subb
mov
fsubl
push
push
test
jle
outsb
imul
xchg
jnp
gs
movsl
sti
jbe
jg
stc
mov
jp
out
aaa
sbb
outsl
xchg
sub
test
mov
xchg
add
cmc
imul
push
push
inc
pop
push
lahf
fldcw
and
lds
and
xchg
and
push
in
out
mov
or
dec
add
scas
xchg
inc
and
sarb
mov
mov
bound
out
aaa
leave
into
cmp
adc
divl
lds
or
ja
call
push
shlb
pop
shll
pop
rcrb
pop
push
dec
push
inc
int3
sub
das
push
js
add
inc
stos
cmp
inc
inc
mov
je
push
lods
paddusw
int3
je
rcrl
xchg
adc
scas
adc
mov
bound
cmpsl
inc
add
xchg
imul
push
lods
subl
or
in
sbb
mov
mov
lea
mov
xchg
inc
aas
es
hlt
lcall
js
sti
or
mov
incl
pop
iret
xchg
call
mov
pop
or
cmc
and
mov
jge
adc
lea
sbb
mov
icebp
mov
xchg
xor
out
mov
mov
ljmp
mov
in
pop
scas
xor
jmp
int
pop
add
orl
mov
jecxz
dec
or
mov
cs
push
or
inc
fiaddl
loope
xchg
jle
ffree
addr16
stc
adc
push
push
in
inc
add
sbb
cltd
jg
mov
fiaddl
clc
push
out
dec
lock
nop
cmp
scas
shll
call
mov
sub
xorl
and
add
js
push
mov
lods
mov
nop
dec
mov
xchg
push
out
mov
mov
ds
pop
icebp
pop
dec
test
adc
xchg
pop
movsb
add
xchg
insb
hlt
cmpsb
cmp
dec
stc
cmp
jae
fisttps
push
xchg
fwait
or
cmp
in
lock
sbb
add
ficompl
shll
pop
mov
sub
mov
cmp
and
push
jae
addr16
fwait
add
testb
call
inc
mov
and
xor
iret
or
icebp
aas
add
aas
aaa
pop
stos
adc
jb
inc
je
jle
fwait
pop
fadd
mov
xor
out
xchg
or
sbb
inc
mov
scas
int3
fxch
mov
pusha
mov
add
xchg
sub
mov
int
repz
or
dec
adc
sbb
scas
outsl
and
xor
push
adc
ss
mov
jge
push
js
imul
adc
es
sbb
mov
stos
scas
sub
sub
rclb
jnp
mov
xchg
dec
sbb
ret
sar
aam
push
out
mov
mov
lcall
add
and
mov
pop
aas
shrl
adc
mul
or
loopne
add
dec
cmpsl
je
dec
push
ss
ret
adc
sub
addr16
sbb
xor
inc
mov
push
fs
pusha
dec
stos
ljmp
xchg
push
and
addr16
stos
jle
inc
rcll
loop
loopne
pop
fisttpl
mov
or
push
mov
aad
imul
jns
test
cmp
push
jo
or
xchg
repnz
xchg
cmpb
lret
aam
jb
iret
sbb
mov
sbb
xchg
xor
pop
je
push
pop
xor
push
and
orb
mov
sub
mov
je
xor
mov
leave
sub
cmpsl
shll
mov
cmpsb
mov
sbb
lret
cmp
mov
dec
and
in
jo
insb
dec
outsb
popa
lret
sti
xchg
sti
mov
adc
sub
jnp
lret
lahf
aad
scas
fcoml
push
repnz
hlt
mov
jl
sar
xor
add
push
data16
testb
dec
xchg
adcl
ret
xor
xor
inc
popa
add
addb
dec
repnz
mov
popa
dec
add
nop
xor
hlt
pop
jnp
decl
shll
xlat
dec
sub
daa
call
jp
dec
fidivs
rolb
sub
lods
xor
sti
ljmp
sbb
jg
movsl
iret
clc
dec
or
lods
jae
pop
sub
cmp
push
inc
in
imulb
jo
ffree
ja
inc
pop
outsl
fistl
adc
mov
pop
dec
adc
mov
enter
inc
iret
sub
xchg
dec
ss
mov
cwtl
and
sti
nop
inc
stc
pop
lret
push
xor
xchg
filds
xchg
xchg
scas
sub
and
test
in
jns
dec
mov
cs
bound
into
in
inc
xor
add
and
cmp
popf
fistpll
in
icebp
cmp
or
aad
mov
push
jno
add
cs
dec
xchg
and
sbb
insb
imulb
inc
sbb
push
dec
and
imul
fisubs
outsb
xor
jno
out
push
ret
int3
testb
dec
mov
in
loop
shr
aas
push
std
fsubs
xchg
shll
into
fwait
sbb
adc
or
xchg
ret
xor
jecxz
push
pop
cltd
sbb
aam
pop
mov
jp
out
loopne
sub
repz
jnp
fcmovnb
and
mov
adc
sbb
xchg
xchg
xchg
arpl
out
out
mov
lret
push
add
in
mull
cmp
adc
scas
inc
or
push
popa
fwait
mov
push
and
dec
jno
mov
fimuls
dec
stos
lcall
sbb
jno
sub
cltd
pop
lcall
nop
mov
test
test
getsec
sahf
gs
xchg
mov
or
out
inc
cwtl
in
pop
xchg
std
outsb
inc
rcrb
cld
and
out
xlat
int3
inc
popa
setp
inc
mov
loop
arpl
add
jbe
jge
into
push
gs
ret
mov
mov
enter
outsb
shrl
jae
inc
cld
mov
andb
mov
or
pop
xor
and
sti
dec
outsl
push
cmp
sbb
pop
inc
jnp
push
test
xchg
pop
test
decb
loop
cmp
inc
xchg
dec
test
pop
enter
adc
leave
out
sbb
daa
cwtl
and
test
arpl
push
mov
ds
pop
lods
push
outsb
popa
daa
mov
les
aaa
xchg
inc
repnz
lcall
mov
test
xchg
xor
outsb
test
sub
sub
jmp
mov
xor
xchg
subb
jmp
and
je
inc
lods
cld
pop
mov
imul
mov
jne
cmpl
pop
stos
pop
sbb
lcall
mov
sbb
aad
cli
pusha
int
mov
repz
dec
mov
call
xchg
repnz
mov
in
repnz
or
ja
jno
mov
lret
xor
sub
push
call
add
movsb
std
xchg
mov
jmp
cmp
mov
sub
sarl
mov
push
inc
sbb
xchg
push
and
outsb
in
cmp
sahf
fdivrs
shll
pop
stos
jae
jg
std
leave
movsl
sub
fimuls
or
xchg
xor
nop
aas
push
fildll
imul
cwtl
enter
in
mov
pusha
pop
enter
scas
mov
test
cmp
orl
jle
sbb
add
adc
add
jl
sarb
xchg
aas
call
or
ret
adc
in
int3
addr16
and
out
sbb
jmp
xlat
inc
lahf
repz
addr16
arpl
mov
xor
adc
rcrl
xlat
xchg
jmp
outsl
or
addl
mov
data16
aam
or
or
jo
sbb
out
pop
mov
and
shl
xor
aad
push
mov
inc
mov
add
adc
xchg
movsb
pop
sbbb
icebp
rcll
mov
mov
cs
xor
cwtl
stos
jbe
pushf
nop
and
inc
xchg
push
or
pop
int3
sbbl
add
popa
fists
pop
dec
dec
cld
ret
and
call
jns
pop
fsub
or
mov
subl
lret
lret
jg
pop
push
and
test
mov
adc
ljmp
jl
in
dec
jb
sbb
push
insb
jne
jae
paddq
mov
dec
mov
pop
imul
shr
mov
mov
inc
sti
insb
inc
fstl
movsb
sbbl
insb
stos
inc
mov
xor
fistpl
pusha
cmp
lds
add
jl
ljmp
adc
cmp
xor
fstp
ss
and
or
pop
jecxz
sbb
inc
mov
push
sbb
adc
push
fisttpll
add
call
dec
imul
dec
or
or
xor
test
test
hlt
nop
xchg
cmpsb
sbb
ficoms
dec
insb
int
jp
cmc
jb
push
mov
int
insb
mov
mov
mov
xor
sbb
lahf
mov
push
adcl
mov
sub
clc
arpl
or
popa
ss
xor
push
xor
adc
outsb
or
movsb
pop
stos
sahf
sbb
xor
int3
push
jecxz
pop
xchg
push
nop
pop
cmp
push
and
mov
clc
inc
dec
jge
shr
mov
insl
pop
js
sbb
inc
rorb
flds
push
pusha
cmp
push
add
cld
scas
sbb
pmulhw
push
jp
cld
int
test
and
mov
fmull
cli
and
orl
pop
jne
fs
sub
pop
out
jmp
insb
imul
scas
adcl
idivb
dec
push
lds
inc
xor
cmp
ljmp
push
fisttpl
jns
enter
jnp
negl
mov
push
repz
and
sub
xlat
mov
pop
out
shlb
fstps
sub
mov
in
sbb
mov
mov
xor
lea
test
mov
jns
push
aad
dec
adc
xchg
push
popa
mov
fidivs
xchg
mov
mov
in
mov
mov
jno
gs
dec
rcrl
test
shll
xchg
in
or
add
xor
rcrl
push
les
iret
in
or
lret
cmpsl
test
mov
inc
jns
mov
cmp
cmp
in
sbb
cwtl
loope
sti
std
clc
mov
sbb
rorb
adc
xor
lret
cmpsb
cmpsl
mov
fiadds
xor
adc
push
incb
je
mov
adc
test
or
lods
out
ss
je
sbb
inc
call
dec
cwtl
in
movsb
repz
aad
in
shrb
test
movsb
add
loope
adc
dec
into
jle
dec
int3
int3
cmp
js
push
out
pushf
sub
adc
dec
shr
jge
xor
cld
inc
push
and
xorb
push
in
shlb
lahf
lahf
roll
ficomps
mov
dec
jmp
aaa
jg
sti
push
stos
push
nop
cmp
sahf
leave
movsl
aas
lds
mov
push
xchg
dec
subb
push
sub
jp
stos
cmp
lea
aad
mov
setb
fsts
adc
dec
jl
adc
aam
cmp
add
cmpsb
in
scas
mov
fmuls
or
adc
jno
and
popa
std
inc
jge
pop
stos
cmp
xchg
cld
xorl
mov
push
jae
mov
inc
int
sbb
mov
cs
test
scas
xchg
sub
pop
dec
shrb
repz
dec
lret
stc
mov
cmp
push
jae
cmp
daa
decl
add
push
fldt
push
lahf
sbb
xorl
orb
cmc
pop
test
sub
cli
or
cwtl
imul
push
addr16
fsubs
outsl
mov
scas
mov
lods
call
dec
scas
mov
rcl
lods
inc
stc
icebp
movsl
mov
jbe
mov
inc
push
xlat
cmp
lcall
aad
test
lock
adc
loopne
lods
ret
mov
ja
push
cli
xor
int
incl
repz
ror
sub
inc
mov
push
cld
pop
aaa
inc
shl
leave
mov
add
pop
imul
hlt
andl
cmp
out
mov
add
xchg
neg
outsl
xor
lock
mov
push
mov
enter
mov
insl
jle
rolb
ret
call
push
cmp
push
stos
adc
dec
fistpll
cmc
in
rorb
dec
mov
shlb
cltd
jns
sbb
pushw
cmpsb
adc
jge
jnp,pn
mov
and
shl
rol
push
xor
xor
les
xchg
add
lahf
lret
test
lret
pushf
adc
jns
jge
dec
xor
lcall
cmp
out
or
inc
fsubr
mov
dec
sbb
pop
jb
xchg
in
adc
fisttpl
cmp
or
in
andl
push
inc
inc
mov
mov
push
scas
movsl
enter
lret
fisttpll
sub
in
in
daa
enter
add
into
mov
dec
lods
pushf
ja
outsl
sbb
loop
pusha
push
xor
xor
push
lods
notl
lods
sub
pop
in
insl
jbe
lcall
inc
filds
arpl
adc
sub
pop
mov
jmp
aas
push
leave
mov
stos
xor
and
clc
jne
loope
sahf
pop
mov
add
jb
loopne
push
in
mov
xor
out
movsb
push
xorl
adc
cwtl
ret
cmp
xchg
or
pop
mov
les
mov
inc
jl
cmpsb
cmp
xchg
hlt
fnstcw
xor
fnstsw
bound
shlb
js
mov
pop
out
mov
inc
push
lcall
repz
fcmovne
les
test
push
add
lret
das
dec
rol
adc
push
mov
mov
mov
out
imul
push
push
fistpll
xor
std
mov
and
imull
enter
and
in
ja
shrl
mov
rcl
int3
mov
imul
mov
jge
push
addr16
loop
ret
mov
xchg
pop
cwtl
lret
or
ret
sub
pop
in
xchg
stc
rcrl
jo
xorl
adc
mov
shrl
push
jae
mov
jp
and
js
jmp
mov
sub
or
into
or
sbbb
xchg
test
orb
or
xor
and
rorl
fwait
and
rol
jae
xchg
mov
mov
out
and
shl
bound
loope
inc
jge
adc
xor
and
lcall
dec
mov
mov
cmp
sub
push
xor
fcoms
testl
push
dec
int3
cld
xchg
sarb
pop
pop
xlat
movsl
and
mov
push
push
mov
pop
je
jmp
cmpsl
aas
nop
xchg
cs
mov
in
hlt
pop
add
lahf
jnp
adc
ljmp
dec
sbb
fwait
xchg
rolb
jo
bound
push
xor
jge
pop
cmpsb
aad
cmpsl
ds
icebp
or
cli
stos
cmp
and
xor
lcall
pusha
or
xchg
or
mov
lock
hlt
or
loopne
mov
or
mov
imul
rcl
push
sbb
jp
dec
shll
ja
enter
sub
cmp
push
cmp
pushf
imul
add
nop
mov
test
dec
or
cmp
mov
aad
je
popa
lcall
mulb
push
insl
mov
leave
mov
hlt
xor
jp
insb
jg
enter
mov
sub
adc
lods
mov
sub
cmp
xor
sbb
jns
pop
add
jne
push
loop
sub
adc
jmp
sub
popf
cmp
inc
dec
push
cmc
adc
sbb
or
lock
jmp
push
push
add
lahf
mov
enter
cmc
and
xchg
enter
mov
jo
adc
and
cmp
lds
int
aad
and
mov
mov
push
enter
aad
push
and
cwtl
jle
mov
ds
pusha
mov
cli
push
or
push
mov
mov
dec
mov
test
js
xor
cmp
aaa
mov
stc
push
add
cmp
loop
adc
test
mov
sbb
jle
inc
adc
jecxz
in
nop
cmp
and
dec
stos
scas
xchg
add
fldl
stos
jp
push
pop
mov
sbb
jae
xchg
inc
sbb
add
inc
mov
or
sahf
pop
add
or
lret
sbb
add
mov
and
inc
iret
flds
add
jecxz
lahf
popf
cwtl
stos
outsl
dec
cs
popl
pop
jnp
cmpsl
cmp
popf
das
push
cmp
test
dec
rorb
sub
aad
popf
scas
pop
cmp
idivb
cmp
xor
gs
test
out
push
movl
mov
mov
mov
fcomip
dec
push
sbb
mov
xlat
jp
xor
and
decb
faddl
out
push
lock
sbb
movsl
scas
popf
rcrl
stos
jge
push
outsb
repnz
cs
fsts
in
xlat
xchg
dec
aam
pop
fs
sub
enter
sbb
inc
jle
cmpsb
mov
cmp
pop
adc
dec
cmpsb
ljmp
jbe
xor
sbb
jge
adc
fnstenv
pop
adc
cli
xor
jp
cmc
sarb
test
add
pop
mov
xor
shll
ret
or
xchg
xchg
movsl
sub
hlt
cmpsb
sub
incl
xchg
xchg
ljmp
js
cmpb
leave
into
popa
in
imul
sarl
sub
cmp
data16
push
xor
je
pop
ja
dec
ss
icebp
adc
xchg
rcrl
test
cli
push
cmpsb
scas
fwait
lock
shrl
sbb
xchg
test
shlb
out
dec
mov
mov
push
sahf
outsl
out
mov
fsubrl
dec
or
xor
mov
sub
lret
xor
add
loop
pop
test
ficoms
jge
push
psubusb
push
nop
js
int3
pop
adc
sbb
adc
jge
test
mov
add
jno
jle
pushf
pop
push
cltd
out
inc
jae
xchg
mov
shrb
cltd
fdivrs
and
and
out
ret
inc
lea
and
sbb
leave
fucomp
jns
push
popf
cmp
imul
int3
mov
outsl
xchg
inc
mov
out
mov
cwtl
push
jb
pushf
mov
sub
fdivl
enter
add
cmp
pop
push
push
addr16
lods
pop
cmp
les
loopne
xor
loopne
cltd
stos
sbb
stos
mov
les
jb
or
push
cltd
movsb
cmpsl
cmp
jne
lea
imul
pop
and
inc
mov
cltd
scas
ja
inc
sub
mov
inc
adc
sahf
sti
jmp
out
outsb
lods
out
mov
mov
sbb
pop
int3
pop
sbbb
loop
mov
fwait
and
sbb
aam
xor
cmp
outsb
add
pop
push
cmc
xchg
mov
push
enter
les
jnp
clc
gs
loop
pop
daa
adc
hlt
add
call
adc
jp
adc
pop
in
repz
insb
popf
dec
dec
imul
lds
add
or
xchg
sub
js
sbb
push
in
cld
mov
add
fiadds
lods
lcall
pop
and
aad
push
mov
ret
movsb
fwait
add
enter
incl
insl
dec
mov
hlt
push
pushf
decb
cmp
icebp
in
xor
and
jae
sub
icebp
xor
jmp
add
fisubrl
incb
xor
xchg
push
cmp
inc
and
push
rorb
lret
push
pop
push
bound
pop
mov
das
xor
jb
pop
jb
mov
inc
sbb
dec
nop
cmp
fisttpl
mov
in
fs
out
lret
js
fdivp
inc
fsubrl
stos
bound
mov
inc
roll
xlat
jmp
dec
push
push
mov
push
imul
int3
fldl
hlt
es
xchg
stos
cli
push
cwtl
push
cwtl
popf
loopne
mov
lcall
pop
imul
xchg
scas
cmp
jnp
mov
xchg
mov
jmp
pop
push
fstpl
sub
pop
in
subb
hlt
push
add
in
mov
ja
fstpl
mov
push
mov
shl
ja
dec
jbe
ljmp
pop
sub
jmp
adc
jae
cmc
sub
mov
xchg
lods
call
jns
call
mov
sub
int
sbb
std
jecxz
push
in
ss
dec
shll
dec
jmp
mov
push
std
outsb
push
daa
aas
pushf
and
js
jge
iret
out
in
dec
push
dec
add
jp
popa
out
outsb
push
xchg
lock
daa
cs
repnz
test
int3
sbb
xor
mov
xchg
push
insl
or
push
ja
stc
test
cli
les
jns
int
lods
mov
lahf
inc
fnstcw
sarl
fisubrs
push
sbb
xor
xor
jecxz
cs
out
rclb
mov
test
mov
int
clc
lcall
adc
ficoms
cmp
fs
shll
ret
scas
adc
inc
xchg
lock
pop
mov
jp
arpl
mov
das
jno
fndisi(8087
pop
out
movsb
stos
inc
ja
adc
addr16
inc
lret
xor
mov
out
mov
icebp
push
mov
xor
in
rclb
cld
add
inc
icebp
aaa
popf
stos
xor
xlat
arpl
ret
lret
xchg
jmp
jo
dec
std
das
lods
jmp
mov
les
in
enter
sbb
das
dec
lret
xlat
mov
jae
rcrb
or
es
cli
or
es
mov
es
sbb
inc
aad
or
cmpb
int
cmovae
loop
mov
mov
mov
and
shlb
add
lcall
addr16
xchg
jns
dec
inc
mov
rcrb
inc
data16
inc
or
cmp
nop
xchg
pop
mov
inc
adc
movsb
shll
dec
in
add
pop
cmp
inc
pop
jle
mov
shl
or
jnp
sti
push
sbb
dec
jl
fildl
jnp
xchg
and
xchg
scas
call
mov
int
fstpt
ffree
insl
push
xchg
xor
pop
es
push
and
loope
xor
inc
xlat
push
imul
mov
in
push
sahf
xor
subb
inc
dec
cmpsb
outsl
cli
aas
mov
mov
iret
adc
xor
ret
xchg
mov
or
mov
das
mov
mov
sbb
dec
imul
pop
adc
inc
push
js
fiaddl
jmp
test
lcall
int
out
into
cmp
aam
outsb
adc
mov
mov
loope
in
sub
inc
push
out
fisttpll
loop
adc
xchg
jl
xchg
mov
xor
jbe
xor
adc
mov
or
cmpsl
mov
or
popf
pop
aaa
out
add
adc
andl
dec
adc
out
xchg
std
mov
jnp
jae
mov
xor
fdiv
or
ret
mov
dec
jmp
xchg
cmpsb
ds
push
std
orl
xor
jecxz
stos
push
fs
cmp
jg
push
out
add
fsts
and
repz
inc
sbb
movsl
dec
adc
xchg
ret
std
imul
pop
cmp
in
stos
out
jl
and
pop
pop
lcall
dec
ficomps
inc
dec
insl
pop
jo
jmp
cmpsb
mov
les
sbb
or
ljmp
add
imul
and
lahf
push
je
jp
aaa
fcoms
cltd
inc
sbb
cmp
dec
lea
into
sbb
push
lods
ds
jae
ds
cmc
fdiv
push
push
xchg
mov
jbe
addr16
inc
out
cli
sbb
int3
push
cmpsl
sub
loop
fisttpll
rclb
mov
add
stc
push
jno
icebp
in
xor
sub
rcr
pop
mov
outsb
mov
imul
stos
inc
aas
push
pop
outsb
cmp
es
call
jge
lret
icebp
mov
in
adcl
mov
xor
sub
xchg
in
mov
pushl
mov
clc
loop
test
mov
mov
push
pop
mov
stc
fistpl
into
dec
xor
lahf
jb
test
lods
jecxz
mov
fisttps
out
clc
aam
cmp
out
xor
out
repnz
dec
lcall
out
mov
pop
sub
mov
incb
insl
outsb
mov
xchg
icebp
xor
pop
imul
pop
mov
ja
jbe
push
lret
fnsave
sbb
sub
lds
iret
add
sbb
mov
jecxz
mov
jns
out
mov
lods
fbld
int3
push
iret
mov
jg
jl
pop
or
outsl
pusha
cld
mov
fldl
add
enter
mov
fildll
mov
dec
jae
repz
bound
stos
scas
add
aas
push
or
lcall
pusha
mov
lods
cmp
or
inc
jbe
rcll
popa
mov
out
sbb
inc
push
mov
mov
in
add
pop
ret
sub
sub
mov
cmpsl
adc
xchg
movsl
decl
dec
inc
jno
int
aaa
lods
jo
jl
shlb
hlt
aam
jl
cld
mov
ror
jb
xor
ret
xor
xchg
rcrl
sbb
fsubl
or
and
or
sub
push
push
cmc
lret
and
rclb
mov
add
sahf
jns
rolb
cli
cmp
push
fists
xchg
subl
inc
mov
xor
das
repnz
lret
adc
sub
insl
lea
aas
lods
test
lds
hlt
aam
lahf
ret
and
mov
pop
mov
and
pop
pop
not
inc
clc
xlat
mov
add
pop
scas
adc
loop
and
dec
inc
sbb
ret
mov
test
enter
mulb
xor
pop
xchg
push
push
mov
xlat
push
or
popa
cltd
mov
bound
sub
pop
dec
insl
inc
out
je
dec
out
mov
jo
mov
test
jle
lret
shlb
sub
popf
adc
mov
mov
fs
add
das
in
iret
nop
add
push
mov
shrb
push
std
out
into
call
pop
pop
and
adc
orb
cmp
cmc
mov
popa
popf
cld
push
and
addl
inc
scas
aad
and
in
rcrl
push
ret
cmp
divb
push
ret
popf
xor
push
mov
mov
je
inc
cmpsl
mov
cmp
inc
push
addl
enter
ljmp
les
int
and
fidivs
daa
sub
imul
or
js
mov
and
das
mov
jmp
pop
adc
and
daa
pushf
jge
adc
jb
mov
movsb
jecxz
mov
loope
call
and
in
pop
loop
icebp
leave
mov
cmp
cld
xlat
js
mov
shrl
jo
addl
jne
push
insl
jp
sbb
mov
jo
push
inc
push
xlat
pop
jns
xlat
mov
xchg
mov
test
cli
cmp
aas
jbe
lock
test
out
mov
lods
and
iret
arpl
sti
jecxz
xchg
cmpsb
movsl
fisttps
xchg
adc
dec
pop
xchg
pop
jno
in
add
popl
xchg
push
and
lcall
rolb
sbb
mov
fmuls
xchg
or
push
imul
add
outsb
je
adc
xlat
mov
test
jmp
ljmp
jl
and
jmp
adc
add
adc
sbb
xor
mov
sub
fwait
test
push
orb
out
cmp
xlat
lods
and
push
cmc
clc
lds
sbb
cmp
pop
and
add
cmp
mov
pop
mov
pop
adc
or
inc
cmpsl
or
mov
xlat
sub
loope
and
sahf
movsl
ss
addr16
push
out
push
and
rorb
pushf
pop
jns
aam
inc
gs
rcll
sub
jg
cmp
sbb
sbb
cli
notb
xchg
push
test
inc
jb
ljmp
sub
shlb
adc
sbb
fisttpll
out
or
mov
outsl
xchg
and
push
jnp
daa
mov
icebp
pop
xchg
andb
lock
add
shl
cmpsb
cwtl
jnp
rorb
clc
les
xor
ret
dec
int3
shll
pop
imul
push
cmp
scas
dec
in
mov
inc
int3
adc
or
cmp
cmp
rol
cmc
adc
push
and
mov
cli
aad
sbb
cs
mov
mov
out
xchg
bound
pop
lahf
fadds
adc
repz
cmp
cmp
xchg
jns
loop
pop
dec
mov
dec
sub
enter
xchg
add
mov
adc
and
mov
add
je
pop
push
dec
in
jmp
jp
inc
or
jo
cmp
jnp
add
sbb
jle
jno
fucomp
xor
div
pop
xor
andb
mov
lcall
lods
adc
mov
fdivrs
mov
mov
mov
testb
adcb
std
sbbl
andl
cmp
push
ja
lock
pop
sbb
aam
jns
and
lret
mov
insl
lock
into
lods
xchg
inc
out
mov
mov
jo
hlt
jb
cmpsb
test
jo
jno
sub
adcb
fisttpl
in
incb
pop
inc
push
lods
sub
mov
mov
loope
sbb
push
mov
clc
add
ds
jns
clc
pop
push
ficoms
cmp
jecxz
jne
pusha
add
clc
nop
xchg
cwtl
pop
ljmp
ss
aad
addr16
cli
lods
enter
repz
testl
cmp
je
push
add
push
add
and
pop
push
inc
jge
inc
or
adc
outsb
pop
ja
leave
testb
arpl
pop
xchg
mov
fdiv
or
mov
mov
fnstsw
cmp
movsb
mov
frstor
push
sbb
aas
inc
test
mov
into
pop
clc
lret
mov
mov
jl
sti
pop
outsb
int
sbb
das
mov
push
fcoms
add
add
std
sub
ja
pop
int3
in
dec
mov
lcall
push
cmp
pop
and
sub
out
pop
sub
xor
mov
pop
ljmp
xor
jbe
pop
out
xchg
test
insb
lea
and
in
gs
das
mov
xchg
and
xchg
push
sbb
loope
dec
mov
mov
test
into
inc
or
testl
lods
jno
push
sub
jmp
sub
rcpps
push
outsl
jge
mov
sahf
xor
xchg
test
xchg
dec
jle
dec
pavgw
xor
xchg
jecxz
dec
cmp
cmp
mov
lret
rolb
inc
sbb
sahf
lods
and
orl
mov
mov
mov
sub
loop
dec
add
call
jns
xor
mov
stos
arpl
sarl
dec
ret
aad
lahf
lret
inc
dec
sub
sti
cli
cli
jmp
idivb
xchg
and
sbb
mov
and
add
inc
xchg
push
ret
and
lods
pextrw
push
data16
lret
bound
push
mov
or
scas
mov
dec
jecxz
cmc
xchg
dec
jecxz
pop
in
ds
lcall
jae
mov
imul
jge
ljmp
mov
mov
aad
shrb
fdivr
out
js
and
fistpl
aam
dec
ret
in
out
ret
fcoms
sbb
shlb
stc
push
stos
mov
sar
dec
cli
mov
xchg
xlat
ret
fists
push
es
adc
fisubs
push
add
jecxz
clc
inc
sbb
mov
cwtl
addr16
sub
stos
int
scas
mov
push
mov
inc
lret
fwait
mov
pop
push
dec
and
mov
push
sbb
insb
xor
pop
push
cmp
and
dec
ljmp
cmc
in
inc
fmuls
test
ljmp
mov
fnstenv
xchg
inc
cmp
ret
subl
es
inc
lds
imul
cmp
cmpsl
in
sbb
mov
ficoms
xchg
inc
sbb
or
mov
sbb
fdivrl
mov
mov
pop
and
mov
loop
or
pusha
cmp
call
push
lea
jbe
inc
mov
sarl
sbb
sarl
pop
std
push
push
mov
mov
mov
push
xlat
std
and
cli
jge
sub
pop
or
fnstcw
loope
int
lahf
cmp
cmp
jecxz
jle
int3
popa
mov
sub
fmull
push
xchg
adc
mov
nop
add
lock
jge
fdivs
aaa
and
negb
cmp
fmuls
outsl
push
jg
loopne
mov
and
test
dec
aam
lret
jge
cmp
enter
in
jno
pusha
nop
push
jb
mov
mov
xor
sub
adc
fndisi(8087
push
push
lds
ja
sub
fisttpll
inc
scas
rep
sub
add
inc
xchg
xchg
shll
dec
cmp
cmp
stos
hlt
mov
cld
test
mov
push
push
fucom
repnz
jecxz
mov
pop
dec
movsb
sub
fldcw
mov
popf
ret
inc
inc
push
add
jbe
sub
jb
dec
dec
jp
std
or
es
fadd
mov
es
xlat
xor
xor
or
outsb
dec
hlt
mov
cmp
sbb
push
call
inc
xchg
push
roll
jmp
add
arpl
arpl
dec
shrl
int
push
mov
cmc
adc
outsl
repnz
jl
outsb
pop
pop
push
mov
inc
mov
mov
mov
fistpl
mov
xchg
push
cmp
jp
out
lret
or
notb
aas
and
mov
aad
loop
popf
pop
stos
mov
inc
popl
lods
leave
faddl
pushf
sub
fdivp
test
lea
sbb
adc
mov
pop
or
push
mov
adc
gs
sub
sbb
outsb
scas
scas
mov
scas
xor
out
xor
push
aam
push
add
popa
bound
dec
cmp
xor
mov
dec
arpl
mov
cmpb
unpckhps
cmp
fs
mov
scas
fsubrl
jmp
repnz
inc
test
add
mov
lock
adc
push
sbb
lods
xor
scas
mov
or
jb
mov
pop
xor
imul
rolb
sbb
sbb
pop
pop
or
shrl
pop
sub
mov
dec
sub
pop
cld
rolb
push
test
sahf
sbb
das
mov
mov
inc
push
rol
dec
xchg
out
push
and
enter
mov
addr16
fmull
cwtl
mov
jle
jle
jl
daa
add
adc
xchg
jg
push
or
push
push
sbb
sub
sbb
fwait
out
popa
dec
mov
dec
out
rolb
adcl
add
stc
pusha
mov
sub
xchg
dec
addl
inc
xchg
sbb
lahf
mov
enter
insl
cltd
ja
pop
hlt
inc
mov
div
mov
adcb
or
inc
mov
fimuls
stc
mov
push
stos
fsubrl
push
aaa
push
cltd
mulb
adc
gs
sbb
or
lea
dec
mov
aad
mov
or
mov
dec
dec
aas
test
shlb
cwtl
fistpll
adc
sub
pop
or
xor
jae
rorb
mov
and
xchg
movl
push
sub
pop
sbb
dec
pop
jae
imul
mov
fiadds
loopne
mov
xor
xchg
xlat
mov
xor
in
push
jl
dec
shll
mov
pop
pop
lcall
ret
lahf
mov
sbb
sbb
and
pop
out
push
fisttps
and
je
cs
xchg
jo
jae
xchg
mov
xchg
stos
xchg
insl
push
in
iret
out
shll
dec
jno
mov
dec
or
fs
mov
mov
adc
mov
push
xor
mov
or
jmp
xor
lds
div
stos
mov
pop
dec
movsb
rcll
add
xchg
dec
les
insl
popf
pop
out
xchg
fwait
cli
pop
xor
xchg
lods
outsb
add
stos
jbe
aad
cmpsb
out
jge
cmp
cmp
mov
xor
loope
fucomip
xchg
adc
cmpsl
stc
nop
imul
pop
insb
mov
mov
mov
xchg
push
jno
fbld
rcrb
xor
stc
les
mov
push
aas
xor
fisttpl
fisttps
jl
outsl
cmc
push
or
xchg
and
xor
push
inc
subl
mov
jmp
jl
xchg
aas
xor
cli
popa
movsb
lea
jg
repz
pushf
into
arpl
push
push
std
mov
ljmp
xor
push
cmc
scas
test
xchg
inc
mov
mov
adc
cmpsl
flds
xchg
mov
lds
loop
cmpsb
cmp
jp
cltd
xor
cmp
xchg
or
cmpsl
mov
jns
dec
mov
dec
test
push
and
sbb
inc
cwtl
xor
inc
scas
add
dec
inc
push
into
sbb
inc
adc
mov
xchg
or
stc
orb
jbe
or
loope
sti
mov
sar
adc
out
scas
mov
bound
mov
fsubs
cmp
loopne
insl
xchg
add
sub
mov
xor
push
cmp
mov
jns
cmpsb
loope
aam
ljmp
mov
inc
outsl
int
daa
adc
cwtl
imul
pop
rclb
ret
push
nop
lock
lea
ja
adc
setns
sbb
fadds
out
push
adc
add
add
loope
xor
adc
imul
jne
filds
notl
test
call
jg
sti
xchg
and
add
jge
xlat
cs
imul
lock
daa
test
and
jns
pop
in
dec
push
push
inc
fldl
lcall
orl
scas
fldl
xchg
inc
mov
push
and
adc
ljmp
cmp
inc
mov
xchg
jl
out
mov
notb
hlt
ret
repnz
cli
sub
fcoml
adc
das
loop
ret
jbe
add
xor
data16
fdiv
call
and
and
aam
lods
jb
and
and
ljmp
pop
mov
adc
or
push
mov
out
mov
inc
scas
stc
jmp
loope
ret
aas
push
fdivs
aas
lahf
xor
jg
mov
sbb
aad
call
cld
pop
pop
adc
mov
adc
clc
dec
mov
cmc
cmc
gs
mov
xchg
jge
pop
mov
push
jecxz
and
test
and
jnp
mov
pusha
sub
ret
push
fidivl
fistpl
cmp
xchg
mov
xchg
in
icebp
out
push
les
loope
leave
aad
mov
test
into
negb
repnz
imul
addr16
adc
mov
stos
andb
sbb
push
outsb
outsl
fs
and
xor
jl
in
stc
mov
jo
movsb
mov
dec
ret
pushf
subl
pop
or
fsubs
mov
add
in
lahf
jae
jne
cmc
mov
pushf
cmp
sbb
and
push
fcmovnu
stos
mov
popf
iret
mov
sub
test
test
and
into
insb
fsub
xchg
shlb
inc
mov
xor
sbb
add
ljmp
fidivs
inc
jbe
fs
push
outsb
out
outsl
mov
test
xor
lock
cltd
into
add
clc
dec
hlt
and
jl
outsl
out
es
pop
mov
enter
loopne
movsb
add
mov
xchg
push
out
jne
sub
mov
bnd
and
dec
mov
lea
loope
aaa
cmp
icebp
pop
test
cmp
ja
test
outsb
dec
pop
shlb
xor
xor
insl
cltd
in
cwtl
fsubrl
xchg
sub
dec
lds
test
int3
mov
jmp
jp
fstpt
xchg
ljmp
xlat
mov
hlt
es
cmp
push
lock
jl
fdivl
fadds
test
out
popa
int
inc
mov
xor
out
mov
mov
in
sub
mov
int
movsb
jle
scas
mov
inc
int
test
sbb
push
in
sbb
mov
int3
sbb
inc
add
mov
pop
mov
loop
movsl
mov
push
pusha
adc
js
mov
pop
inc
outsl
add
mov
aad
popf
loop
ficomps
pop
sub
sub
stc
mov
sbb
loop
mov
sti
mov
jae
adc
mov
popf
lret
sbb
push
stos
jge
dec
adc
and
mov
sub
mov
shld
push
nop
cmpsl
bound
cld
rcl
or
cld
cmp
out
scas
add
xor
fstpl
mov
sub
movsl
negl
popf
clc
addr16
fsubl
mov
vpminub
sub
lahf
mov
sarl
add
sbbl
ss
cli
push
xchg
mov
add
add
push
es
rolb
lahf
jl
movsl
imul
adc
push
mov
icebp
mov
mov
adc
jmp
cmc
ss
pop
push
xlat
lret
pushw
sbb
jp
inc
adc
imul
push
icebp
fs
cwtl
mov
inc
sbbb
pop
outsl
imul
cli
data16
leave
add
xor
sub
fnstenv
cmc
cld
iret
enter
mov
jo
faddp
pop
outsb
adc
pop
push
or
loope
orl
dec
pop
lock
sbb
sahf
cmpsl
incl
lret
pop
in
scas
mov
and
mov
mov
push
cli
xor
ja
stc
dec
imul
aam
fs
loop
aas
push
nop
push
mov
aas
mov
shl
dec
lret
jne
sahf
inc
in
aaa
imul
cmp
rorb
pop
lcall
and
xchg
cmp
std
pop
or
daa
or
mov
scas
mov
dec
pop
or
and
daa
mov
and
ds
dec
jmp
pop
add
jg
dec
shll
mov
jns
cs
fnsave
lret
xchg
inc
rorb
and
ret
pop
cmp
int3
in
mov
faddp
in
in
bnd
mov
jae
inc
push
cmpsb
aam
mov
cmp
popf
scas
and
leave
adcb
push
jne
lods
add
pusha
std
mov
mov
test
ljmp
pop
jmp
xor
fsub
vpshufhw
flds
xor
gs
aam
sbb
inc
clc
dec
mov
idivb
mov
jl
repnz
pushf
jne
push
cmp
lock
aam
pusha
push
loop
lret
gs
sub
pop
std
xchg
pop
insb
mov
in
in
and
cmp
dec
mov
test
movlps
jno
fs
and
adc
mov
ja
push
push
xchg
xor
call
rcr
inc
lea
jnp
push
mov
gs
xchg
ds
and
call
icebp
sub
and
mov
pusha
fadds
addb
fsubrs
and
int3
loop
outsb
sbb
ss
aam
or
rclb
push
pusha
insb
xor
sub
and
jbe
stos
push
lods
push
addb
cld
test
test
or
cmpb
test
cmp
pop
lret
js
xchg
inc
outsl
xchg
inc
jle
mov
mov
outsb
pop
add
pop
lret
gs
aad
mov
mov
adc
mov
cmp
lods
jb
or
pop
mov
shll
jae
std
pushf
push
scas
pop
leave
imul
jge
mov
dec
mov
inc
mov
add
sbb
jl
mov
enter
outsb
sbbb
and
cmpsb
mov
notl
mov
jmp
lds
xchg
incb
ret
loop
in
lock
jbe
js
popa
sahf
test
aam
push
addr16
es
fsub
jno
inc
lret
and
mov
roll
push
aas
adc
bound
mul
les
ret
in
test
push
stos
add
sub
mov
jmp
dec
fcmovnbe
xchg
mov
inc
lods
or
mov
add
je
jp
out
xchg
push
repz
mov
push
into
xor
jnp
outsl
jge
inc
mov
sbb
xchg
pop
cmp
in
ljmp
adc
add
add
add
mov
and
inc
sti
lahf
arpl
inc
das
add
push
xor
inc
inc
jb
shrb
lock
outsb
push
pop
sub
jg
cli
push
out
xchg
mov
in
cmp
and
add
sub
xchg
push
leave
xchg
or
fbld
cmp
xchg
xchg
mov
jmp
inc
or
pop
inc
into
out
daa
inc
sti
dec
sarl
bound
gs
adcb
and
xor
cltd
and
xchg
cmpsl
aaa
outsl
pop
xor
int3
sahf
pop
imul
movsl
leave
fdivrs
or
pop
fwait
push
mov
pushw
fs
add
pop
mov
xchg
bnd
or
cmp
mov
mov
shll
inc
lahf
ja
ret
mov
hlt
insb
lret
and
shrl
repnz
xchg
clc
xchg
xor
and
aas
mov
scas
jmp
sub
jle
mov
push
sbb
insb
sub
xchg
pop
and
out
add
push
and
push
dec
hlt
mov
sbb
adc
push
rorl
test
les
imul
fisubs
inc
aaa
push
test
clc
push
mov
testl
lret
jp
sar
pusha
add
imul
jp
arpl
stos
popa
pushf
js
lahf
sub
mov
xor
and
fldenv
pop
cmp
jno
in
jnp
out
test
ljmp
cmpsl
and
aad
mov
mulb
ds
dec
aad
daa
inc
ja
cmp
push
push
sbbb
mov
mov
mov
inc
arpl
adc
lds
or
inc
pop
inc
lret
jecxz
iret
lock
xchg
inc
rorb
sarl
push
xchg
loope
mov
cld
adc
mov
test
lea
test
or
clc
xlat
mov
jae
xchg
xchg
mov
xchg
mov
pop
std
stos
jge
push
cmp
outsl
mov
stc
ds
lods
pop
mov
push
fisubl
push
repnz
call
mov
popaw
or
sbb
inc
daa
mov
mov
test
add
loope
mov
insl
mov
imul
mov
mov
xlat
xchg
lahf
mov
fildll
fs
sbb
insb
cmp
insb
js
imul
loope
fimuls
push
in
add
popf
sbb
push
aad
jae
cmpsb
pop
push
ja
ljmp
cwtl
push
test
jnp
push
scas
testb
sub
jmp
add
das
fildl
or
xchg
mov
and
setns
mov
fnstcw
imul
das
iret
sbb
xlat
imul
cmp
and
pop
scas
rcrl
xchg
sub
jg
popa
cs
inc
xchg
fcompl
clc
call
jno
xor
sbb
repz
sahf
mov
pop
sub
sbb
jecxz
cmp
lahf
rclb
and
sbb
push
jg
stos
xchg
push
lods
push
adc
repz
xchg
and
andl
or
out
pop
mov
jge
cmpsl
mov
and
or
repz
mov
sbb
leave
test
push
adc
lret
leave
cmp
or
add
es
out
sbb
pop
lock
xchg
or
xchg
jmp
or
pop
push
mov
dec
and
ret
mov
out
mov
push
mov
iret
mov
push
movsb
push
add
bound
fisubl
aas
jg
out
mov
nop
sub
mov
popa
add
jno
push
iretw
lock
push
mov
jne
mov
mov
xor
sbb
mov
inc
pushf
mov
stos
or
std
mov
inc
rclb
movsl
into
and
mov
dec
jg
inc
add
xor
pop
fsubrl
push
dec
into
sbb
testl
inc
shlb
sub
js
daa
pop
es
mov
cmp
outsw
mov
mov
xor
dec
and
cwtl
cmc
popf
data16
fiaddl
popf
cmp
and
cmp
jge
jnp
pushf
popa
push
add
mov
add
fisubs
mov
iret
dec
mov
ljmp
je
jo
fidivl
cld
or
imul
aam
jns
adc
xor
mov
inc
adc
lds
test
ds
add
sub
into
mov
aad
xchg
cld
scas
sub
adc
xor
adc
push
cmpsb
dec
arpl
aas
cmpb
lahf
ret
fwait
adc
in
daa
xchg
out
cld
and
mov
shrb
addr16
mov
mov
push
outsl
subl
aaa
dec
cmpb
in
outsl
sbb
add
lods
push
fnstcw
sbb
addr16
fwait
movsb
mov
mov
arpl
lret
sub
pushf
iret
mov
hlt
and
mov
push
and
test
mov
jecxz
cmp
add
insb
out
mov
fidivrl
or
mov
jle
sbb
jle
dec
pop
adc
rcr
add
mov
cld
inc
ja
and
cmp
cltd
mov
jne
mov
adc
in
arpl
and
cmp
cmc
in
dec
mov
stos
cmp
scas
inc
dec
sbb
in
fimuls
out
inc
adc
xor
inc
mov
ret
lea
xor
pop
js
mov
xlat
xor
lret
mov
stos
push
pop
ret
mov
xchg
and
sub
fsub
mov
mov
xchg
sbb
cmp
shl
movsl
loop
add
cmpsl
mov
pop
sub
cwtl
dec
jnp
aaa
inc
adc
inc
iret
cmp
pop
aad
sahf
sti
push
je
rcrl
pop
loope
icebp
xor
sub
cld
incb
fmull
adc
jb
loope
out
pop
stos
jecxz
mov
or
dec
jne
pop
sub
in
in
pop
fwait
adc
sbb
js
pop
pusha
inc
push
dec
pop
xor
repnz
mov
mov
cs
test
pop
adc
mov
cmp
jnp
cmpsl
outsl
mov
jne
lods
std
xor
inc
push
daa
mov
inc
loopne
jge
push
push
mov
push
mov
push
lcall
dec
lods
mov
fisttps
idivb
add
mov
mov
leave
mov
mov
ja
mov
fwait
movsl
mov
xchg
lods
imul
push
pop
pop
clc
lret
inc
rcrb
push
and
rcr
xor
test
cmpsb
mov
movl
dec
xchg
jb
rolb
out
cld
jmp
dec
outsl
mov
rcrb
adc
inc
iret
fistpl
adc
push
adc
mov
mov
test
sub
mov
inc
push
sbb
ss
jno
push
popf
cli
addl
test
in
popf
sub
push
lret
js
scas
jns
cmp
push
sahf
push
addr16
repnz
mov
cmp
xor
pop
xchg
inc
mov
mov
andl
mov
jno
and
imull
jno
jae
das
jmp
movsl
inc
test
iret
ja
add
xchg
lahf
movb
ss
jl
loop
mov
test
mov
test
mov
mov
adc
cmpsl
cmp
imul
shrl
mov
mov
das
mov
out
enter
push
pushf
lea
andl
movsl
lods
sub
clc
sbb
mov
outsb
rorb
fstps
or
pop
add
enter
push
pop
cld
and
and
xchg
lock
mov
pop
xor
in
inc
xchg
and
mov
mov
fcmovbe
mov
data16
call
add
mov
pop
add
imul
cwtl
cmp
mov
push
push
scas
xchg
mov
xor
nop
mov
push
xor
lds
pop
sub
clc
cli
pop
int3
xor
cmc
loopne
mov
inc
push
loop
repz
push
dec
sbb
cmp
cmpsb
sub
movsl
inc
cmp
mov
scas
and
andl
sub
and
popa
mov
xchg
ja
cmpsl
repnz
inc
cmp
sbbl
loopne
es
jae
shll
sub
mov
push
iret
lahf
cwtl
mov
sbb
imul
hlt
mov
xlat
mov
adc
and
add
jp
sub
mov
inc
mov
lds
loope
push
cmp
div
and
cld
mov
mov
add
mov
popf
add
insb
or
das
loope
dec
ret
out
int3
push
xchg
xor
or
fimull
add
ljmp
cld
mov
int
cmp
mov
pop
imul
xchg
in
inc
add
shrb
jle
iret
or
rcrb
ret
loopne
je
mov
inc
jmp
je
rcll
lahf
out
sti
es
adc
push
aad
ja
dec
ja
sti
and
test
enter
mov
repz
xchg
scas
arpl
push
shrl
jb
dec
cwtl
fiadds
jecxz
or
cmp
pop
sub
roll
stc
ret
insl
rorb
pop
or
mov
lahf
jle
jl
pop
dec
fld
cmc
adc
jp
je
push
lcall
mov
mov
mov
shl
push
fs
std
insb
das
fadds
stos
sub
es
dec
adc
cwtl
pop
xor
gs
add
fisubrs
push
or
push
idivb
push
jb,pn
dec
sub
pop
mov
or
sbb
push
stos
mov
test
cld
scas
sub
das
dec
loop
add
xchg
add
ja
jbe
out
lea
sarl
push
icebp
fcomps
pop
adc
adc
jne
sbb
inc
mov
das
mov
lock
adc
mov
enter
jle
in
add
push
andl
sbbb
pop
out
push
loop
test
push
imul
subl
lock
cmp
gs
pop
js
ret
cmp
mov
push
ds
push
movsb
je
mov
or
dec
stos
xchg
sbb
lods
cld
cmpsb
jge
push
mov
add
or
inc
sti
mov
out
out
sub
xchg
movsl
cmpsl
lcall
fcmovbe
mov
loopne
leave
mov
inc
imul
push
aad
or
mov
xor
jne
arpl
cmp
lods
rclb
sub
fcmove
movsb
adc
hlt
pop
adc
push
repz
xor
enter
stos
push
ljmp
xor
jbe
pop
insb
loop
jae
adc
rorl
shl
call
or
addl
xchg
mov
mov
jbe
int3
hlt
imul
pop
ds
mov
xor
sbb
or
dec
push
fwait
icebp
mov
sbb
stc
jg
bound
mov
roll
out
aas
mov
int3
jp
push
adc
pop
mov
gs
not
cwtl
imul
mov
out
lea
sub
sbb
sbb
and
lahf
aaa
ja
jbe
inc
outsb
inc
stos
leave
mov
adc
adc
repz
pop
pop
cmp
out
adc
mov
push
imul
imul
push
pushf
enter
inc
scas
cmc
sub
push
push
leave
push
pop
add
pop
mov
add
xchg
push
or
mov
lods
test
jae
int
andb
cmp
mov
dec
call
adc
lahf
adc
jecxz
stos
shll
inc
xchg
nop
sub
cmp
mov
outsb
or
sub
nop
ja
inc
xor
lret
dec
lock
add
xlat
in
dec
cwtl
xlat
adc
int
mov
in
hlt
jo
or
dec
jns
push
cltd
std
sub
daa
adc
push
push
add
mov
xor
xchg
int
add
cs
xor
sub
lret
cs
ds
push
movsb
cmpsb
sbb
in
data16
or
mov
inc
push
fisubrs
pop
xor
sbb
fs
jle
fwait
inc
sti
mov
push
mov
sahf
pop
jno
insb
sarl
jo
mov
xchg
bound
adc
fs
stc
testl
xlat
pop
ja
aas
lret
ud1
fisttpl
cmp
stos
shll
cmp
adc
cltd
cmp
fs
js
mov
push
jo
mov
lds
mov
push
stos
lret
inc
lcallw
inc
imul
fbstp
push
test
xchg
imul
cmp
push
inc
jecxz
push
cmp
inc
je
adc
addr16
cwtl
jmp
jbe
dec
push
mov
adc
mov
sub
mov
icebp
pop
jmp
mov
and
jno
pop
aaa
cltd
add
outsb
jmp
mov
cmpsl
sbb
out
fwait
shlb
xchg
jb
mov
sti
in
hlt
mov
data16
mov
ja
add
cmp
std
jo
je
nop
mov
lock
clc
pop
mov
into
icebp
xchg
test
ja
inc
sub
jecxz
xor
jae
or
xor
iret
xlat
xchg
nop
js
sbb
stc
mov
add
push
repnz
jmp
mov
fs
pusha
cmp
mov
shl
in
arpl
ret
mov
add
movsb
lret
icebp
mov
call
aas
xlat
leave
sti
push
int
jecxz
scas
sahf
jg
xor
jge
sbb
and
mov
incl
push
mov
add
or
pop
sti
add
xor
mov
adc
shrl
out
loope
inc
dec
in
das
xchg
pop
jg
lcall
test
mov
jo
mov
stos
and
cmpsl
movsb
lods
push
jbe
sub
into
pushf
xchg
pop
call
aam
sbb
mov
xchg
inc
xchg
dec
jge
sbb
add
fidivl
out
fildl
sbb
sbb
cli
aaa
loop
dec
ss
jb
gs
sub
hlt
mov
xor
cmpsb
out
inc
mov
or
fsts
ss
pmaxsw
lcall
ficoml
test
out
sbb
cmp
dec
ljmp
in
sub
fcoms
je
add
aaa
stc
sub
aam
fcmove
out
fwait
inc
adc
cwtl
loope
shll
cmpsl
cmp
push
or
daa
jb
mov
xor
dec
lcall
pop
or
push
mov
push
mov
add
rorb
aad
and
cmp
mov
shlb
lock
xchg
outsb
adc
movsl
out
dec
jnp
data16
cmp
scas
inc
push
jmp
lret
leave
fwait
cs
mov
pop
sub
jge
cmp
mov
in
or
imul
scas
pop
adc
cwtl
or
adc
mov
test
pop
movsl
in
push
adc
xlat
stos
enter
lahf
and
insb
fdivr
popa
push
clc
mov
pop
loop
scas
leave
enter
pushf
inc
push
fdivrs
push
pop
sub
pop
sub
stos
or
lret
add
addr16
sti
push
out
and
adc
inc
mov
inc
das
ja
pop
pop
add
pushf
cli
cwtl
movl
ret
scas
inc
mov
push
imul
repnz
inc
jae
aad
pop
iret
mov
mov
test
mov
shll
lret
cmp
ds
and
scas
mov
mov
addb
insb
into
dec
add
xor
cmpb
addb
ds
mov
outsb
mov
mov
stos
ret
xchg
subb
movq
mov
vxorps
adc
decl
xchg
add
shl
scas
andb
pop
pop
loopne
inc
mov
xchg
dec
xor
jns
cltd
mov
enter
jge
mov
pop
enter
stos
mov
out
rorb
mov
mov
pop
sub
es
inc
jo
and
dec
and
adc
pop
pusha
flds
push
and
pop
mov
cmp
xchg
and
pop
insl
daa
aaa
adc
ret
push
pusha
loopne
push
in
or
mov
mov
imul
push
dec
popaw
loop
loopne
jl
dec
add
mov
das
add
lock
and
cmc
and
orb
xchg
movsl
cmp
lds
pop
fwait
movsl
lods
sub
insl
sbb
fldenv
pop
push
pop
mov
mov
movnti
arpl
inc
xchg
outsb
in
or
sbb
push
adc
or
cltd
xlat
xor
cli
and
in
push
out
bound
ja
data16
sbb
aad
movb
cmp
ss
and
cmp
pop
mov
iret
repnz
cmpsb
and
ljmp
les
dec
les
scas
mov
lahf
data16
sub
jle
ljmp
rorb
mov
stos
popa
pop
xchg
sbb
push
cmpsl
push
inc
push
or
jp
arpl
int
mov
mov
sarb
pop
mov
or
push
test
push
or
inc
stos
mov
push
mov
or
in
dec
rcrb
push
divl
aad
mov
pusha
add
out
dec
inc
sbbb
jns
cmp
push
in
or
imulb
clc
or
push
icebp
lahf
xchg
sar
inc
mov
jle
out
loopne
int3
dec
sbb
icebp
mov
cmp
ljmp
inc
into
mov
xlat
addr16
push
mov
test
je
and
xchg
enter
sarb
movsl
xchg
dec
xor
loop
jb
sbb
mov
div
in
popf
pusha
dec
inc
and
ss
push
or
out
pop
js
je
adcl
push
push
jae
sbb
cld
cmp
lock
and
adc
sbb
inc
sub
inc
loop
nop
lods
insl
out
push
outsb
aad
or
pop
push
mov
or
lds
repz
adc
mov
add
ret
out
fistps
xlat
cmpsl
adc
scas
std
mov
dec
lret
insb
cmp
repz
pop
cmp
in
adcb
sub
test
ret
xchg
mov
adc
xor
xor
mov
lds
outsl
jae
sahf
testb
or
mov
and
pop
push
mov
add
jb
or
xchg
incl
pop
out
adc
movsl
cltd
insb
cmp
jnp
iret
add
lcall
xchg
push
lret
add
mov
push
test
add
sbb
call
xchg
add
xor
add
sarb
add
mov
mov
std
lret
fisubl
les
ljmp
mov
call
and
pop
xchg
sahf
sub
shlb
cltd
add
inc
outsb
xlat
orb
out
jle
mov
mov
cmp
inc
fmull
sbb
mov
mov
divl
into
mov
out
es
lock
cmc
add
ds
sbb
dec
notb
scas
cmp
ds
in
cwtl
lret
clc
mov
or
mov
xchg
xlat
add
aad
les
lock
jge
mov
or
iret
iret
or
lods
cmpsl
popa
push
add
xor
xchg
int3
inc
sbb
xchg
hlt
sbb
ds
adc
stos
dec
cmp
or
sbb
sub
je
idivl
pop
test
rcrb
inc
dec
sbb
test
shrl
loop
jb
sub
jmp
pop
in
fldenv
push
mov
fldenv
cwtl
fs
adc
cmp
pop
dec
pushf
dec
jae
sbb
cltd
hlt
jmp
imul
or
loope
or
inc
pop
mov
inc
mov
add
push
jne
adc
ss
mov
mov
ret
or
rorl
pushf
out
dec
outsl
jg
push
and
mov
negb
mov
adcb
cmpsl
jb
aam
test
xchg
idiv
stos
mov
sub
mov
xor
insl
incl
sub
outsb
rcll
push
sbb
pop
pop
xchg
stos
ljmp
push
jle
scas
adc
sbb
or
add
sbb
mov
rorl
and
mov
mov
jno
jae
pop
jp
or
xor
inc
xor
enter
or
cs
sbb
mov
xchg
aaa
push
jg
jecxz
push
fdivs
pop
mov
orl
xorb
or
enter
ljmp
mov
hlt
pop
jl
cld
mov
and
dec
xor
sahf
cmc
mov
push
enter
add
test
pop
loope
fst
xchg
test
cltd
popf
xchg
or
mov
cmp
pop
out
xor
sahf
lret
sub
outsb
sti
jae
and
cli
xor
xchg
add
cmp
data16
leave
add
in
dec
xchg
pop
aam
pop
jns
aaa
icebp
in
incb
push
sub
push
adc
loope
fcomi
sub
jnp
push
js
loop
gs
lahf
rcr
fiadds
mov
jbe
push
mov
dec
cmp
sub
clc
cltd
dec
fs
adc
sti
jecxz
mov
pop
add
aam
add
lahf
mulb
add
push
pmulhw
enter
mov
pop
mov
bound
sbb
imul
cmp
movb
in
or
ss
push
hlt
lahf
cmpb
jo
jns
and
cmp
aad
mov
pop
ljmp
popf
pop
adc
ljmp
icebp
mov
leave
mov
sbb
gs
jbe
xlat
ret
arpl
adc
or
add
mov
cmp
ja
pop
enter
pusha
jnp
scas
in
movsb
dec
popf
jae
mov
dec
test
loopne
dec
hlt
adc
add
lea
adc
lds
inc
mov
xor
outsl
sub
xor
mov
test
jmp
aas
rorl
cltd
in
addr16
and
adcb
xor
stos
cmp
jno
pop
add
inc
jo
out
icebp
cwtl
shrb
cwtl
and
mov
cmpsb
xor
jns
loope
mov
loop
adc
rclb
ss
sahf
inc
and
das
push
mov
adc
into
scas
das
and
push
mov
mov
in
sbb
xchg
xchg
mov
repnz
mov
stos
cmpsl
jg
stos
xlat
jo
jbe
stc
jnp
cld
mov
rorb
sarl
sub
sub
nop
xchg
popa
add
sahf
imul
sbb
sbb
js
inc
sbb
adc
or
lock
or
push
call
clc
jns
leave
pusha
fldcw
shrl
ud0
shr
call
mov
xchg
mov
imul
aas
stc
lcall
cmpsb
enter
hlt
notb
push
jg
push
cmc
mov
mov
dec
inc
jnp
lods
mov
jge
or
outsl
in
loop
inc
cmp
dec
push
pop
mov
and
push
push
incl
inc
test
popa
push
insb
push
inc
repnz
stos
andb
or
adc
and
jecxz
add
stos
sahf
sbb
inc
aam
cli
sub
call
mov
sahf
mov
cmpsb
sub
adc
insb
mov
push
sub
aas
sbb
int3
sub
inc
dec
inc
aaa
fisubl
sub
es
add
inc
xchg
lahf
xchg
sbbb
dec
jge
and
mov
bound
test
and
clc
push
xchg
ss
dec
clc
mov
jg
xchg
lock
jno
movb
dec
js
add
sti
add
pop
jne
cwtl
popa
cmp
xor
sub
jb
mov
and
mov
xchg
fucomip
in
mov
pop
enter
inc
aas
lock
inc
push
lret
dec
push
fistpll
dec
out
pop
notl
xchg
lock
push
pop
mov
add
popa
fisttps
out
push
mov
pop
fimull
nop
insl
ja
jne
movsl
loopne
adc
cmp
das
add
fwait
jnp
outsl
aas
xor
cmpsb
sbb
loopne
out
imul
ljmp
daa
js
push
jle,pn
pop
inc
jo
in
ror
push
test
ds
movsb
insb
fwait
cmp
loope
pmaxub
push
movsb
rep
rcrb
jo
clc
mov
add
pushf
mov
push
std
test
loope
das
bound
mov
pop
addr16
xchg
lret
sahf
pop
sbb
in
scas
pop
addr16
insb
insl
shll
cmpsl
shlb
push
mov
jno
test
fmuls
and
inc
mov
out
jmp
jle,pt
int3
mov
rcr
add
clc
neg
mov
ja
push
rol
cmp
xor
and
cmp
daa
jae
jle
or
push
mov
pop
sbb
rcrb
or
xlat
mov
dec
xor
cmp
xchg
jbe
and
cmp
sbb
sbb
xchg
xor
inc
into
inc
pop
xor
mov
movsl
scas
aam
or
std
mov
xor
arpl
and
pop
sarb
dec
cmp
rclb
int3
mov
and
cmp
mov
push
in
popf
lea
cmc
mov
fistpll
pop
fwait
andl
cwtl
in
push
js
mov
lahf
bound
das
fistl
sbb
xorl
cld
int
lods
ds
jecxz
sub
jp
cmpsb
push
add
popa
fnstsw
push
jg
rcrl
xchg
lret
pop
sub
adc
push
fwait
xchg
adc
xchg
dec
cmpsl
jno
push
cmpl
xchg
inc
movsb
nop
mov
js
pusha
insb
sbb
sub
mov
imul
in
adc
mov
cli
sub
jge
movsl
test
or
mov
and
inc
push
mov
mov
mov
xchg
cwtl
imul
push
testl
in
pop
jl
pop
add
xchg
jbe
push
xchg
pop
js
sub
pop
shl
jge
dec
sbb
hlt
in
stos
push
enter
loop
pop
mov
mov
in
lods
sbb
mov
jmp
int3
jae
add
xor
dec
hlt
push
dec
mov
mov
outsb
ljmp
pop
aad
loop
lret
add
lock
int
push
imul
push
out
mov
les
sub
xor
nop
adc
jle
mov
jmp
in
enter
clc
xchg
fcmovu
or
mov
mov
sub
orl
cli
gs
daa
jbe
loop
das
jmp
lods
and
int3
push
lods
stos
xchg
adc
mov
jns
or
mov
fnstcw
inc
repnz
sti
insl
rol
sbb
jge
mov
out
jb
mov
xchg
push
xor
mov
jbe
push
das
les
aad
sub
add
stos
mov
dec
xlat
mov
pop
std
and
fistl
xor
mov
sbb
inc
push
adc
and
mov
pop
test
mov
jb
xor
in
mov
mov
jl
mov
jns
das
xchg
jns
fwait
push
std
xchg
shr
adc
cmp
js
aas
sub
shr
in
movb
mov
faddl
cmc
push
jmp
xor
out
mov
fsubrs
mov
mov
jne
in
mov
mulb
loop
out
mov
nop
rolb
push
arpl
mov
je
sbb
cld
aas
imul
add
xor
push
in
in
fadds
dec
das
lret
lods
rolb
repnz
imul
dec
in
cmpsl
les
adc
pop
lcall
add
lret
js
jnp
xor
lret
andb
pop
imul
jnp
or
outsl
xor
pushl
in
div
push
and
inc
mov
ja
xchg
enter
lcall
aaa
popf
mov
leave
fsts
sbb
das
movsl
pop
in
stos
testl
and
es
mov
dec
xor
scas
sbb
call
das
insl
sub
xchg
fsubs
cwtl
mov
aas
jge
sbb
mov
jecxz
sub
add
shr
push
push
jle
add
int
leave
pop
sub
mov
jecxz
aam
xchg
dec
xchg
lret
rclb
dec
mov
mov
jbe
dec
ss
cmp
lahf
fimull
rcrb
imul
loop
add
test
aad
ljmp
xlat
or
call
push
popf
mov
pop
and
notl
adc
jo
ss
test
clc
leave
cmc
sub
inc
mov
scas
or
rorl
scas
xlat
pop
rcrb
aam
repz
jne
xor
and
xor
aam
out
es
jo
loopne
rorb
jmp
push
fdivs
loop
fwait
dec
popf
sub
xor
jle
inc
pop
pop
xor
outsb
sub
ja
hlt
jge
dec
pop
xor
imul
in
hlt
dec
cmp
faddl
xchg
sub
movsb
xor
inc
jmp
mov
sbb
loop
cmp
icebp
cmp
pop
push
mov
push
loopne
sub
xor
sub
mov
xchg
pop
adc
xchg
lea
mov
adc
nop
sub
push
push
aam
call
rcl
mov
jecxz
mov
or
or
call
pop
scas
mov
repz
jle
push
mov
inc
in
jmp
data16
push
shr
push
mov
pop
lods
add
cmp
fmulp
inc
jp
mov
loop
adc
push
jp
popf
fst
sbb
push
cs
bound
cmp
out
pop
scas
jle
out
dec
shlb
and
repnz
out
addr16
jg
ja,pn
arpl
movsb
push
inc
add
pop
in
mov
jae
add
mov
xchg
iret
push
push
push
adc
mov
test
das
imul
and
adc
out
in
cmp
sbb
test
mov
jp
stos
insb
loope
pop
dec
jp
movsl
ss
xor
pop
push
bound
sub
xchg
cmp
in
xchg
cmp
pop
repnz
addr16
xchg
lods
jbe
das
inc
dec
stc
jle
cli
or
hlt
push
cmp
mov
cmp
xchg
xor
int3
pop
mov
jbe
insl
out
adc
adc
in
hlt
mov
adc
sarl
imul
test
fs
add
popa
jno
cmpsb
lea
cmc
inc
push
and
mov
inc
imul
das
inc
xchg
test
xor
lcall
xor
js
stos
pop
pop
mov
inc
mov
andl
inc
mov
and
lods
mov
mov
loope
loope
pop
fwait
pop
test
mov
mov
sbb
fstpl
jnp
xchg
or
jbe
adc
sbb
pop
sbb
fiadds
outsb
or
jmp
ret
sahf
xor
fs
mov
add
add
mov
push
js
push
mov
xor
sahf
jnp
in
mov
shrl
xor
sbbl
xchg
ljmp
ljmp
push
out
mov
adc
shlb
sbb
push
and
out
lahf
sbb
test
jmp
mov
movsl
or
fstps
dec
addb
icebp
push
andl
push
or
lods
addr16
mov
jns
std
daa
sub
hlt
push
mov
jo
movsl
addb
mov
out
movsl
push
mov
cli
and
scas
mov
outsl
das
int3
xchg
in
mov
dec
pop
shrl
js
adc
cld
mov
arpl
ret
or
mov
loopne
mov
sbb
outsb
push
les
sbb
lods
lea
lret
cmp
mov
repnz
test
lahf
in
and
mov
add
cmpsb
pop
sbb
clc
add
int
cmp
jmp
addl
cmp
xor
jp
cmpsb
pop
xchg
jne
jle
mov
popa
outsb
adc
ret
clc
adc
and
jp
pushf
ret
pop
xor
dec
dec
mov
xchg
je
je
add
cmp
add
aam
jp
jnp
movsl
fwait
or
and
adc
out
lret
mov
aas
dec
sub
mov
push
outsl
adc
push
scas
test
test
or
aas
pmovmskb
lds
and
or
icebp
add
addr16
sbb
testb
cmp
insb
rclb
rorl
dec
or
pusha
xor
sub
aad
jecxz
test
cmc
mov
pusha
cld
jecxz
mov
inc
dec
mov
or
andb
loope
stos
mov
pop
inc
test
pusha
jecxz
loope
mov
or
das
push
pop
dec
add
test
jns
aad
out
fxch
sub
jbe
adc
daa
jmp
out
or
aaa
rcrl
ljmp
ret
jb
add
aas
nop
shlb
fmuls
mov
mov
mov
scas
jl
sar
insl
mov
in
and
sbb
fisttpll
jns
in
mov
mov
cmp
ret
lds
mov
test
xchg
outsl
mov
addr16
xor
nop
loopne
test
push
fs
movsb
stos
adc
xorl
push
loop
sbb
pop
int
lret
mov
cmp
mov
pop
push
mov
jns
cmp
int
in
push
adc
cmp
imul
or
mov
push
jne,pt
int3
fisttps
sub
push
jae
aaa
mov
loopne
add
in
rclb
dec
push
mov
fldl
dec
rcrb
cs
sbb
je
mov
test
push
movsl
inc
jno
jne
stos
loope
inc
lret
mov
pop
test
dec
test
mov
popa
mov
or
mov
mov
in
xchg
xor
mov
rol
lods
push
push
push
mov
insl
fwait
ja
es
popf
sub
mov
jg
out
sbb
loopne
std
pop
lcall
sbb
push
and
push
mov
adc
add
ret
out
and
pusha
nop
jg
out
add
hlt
fbstp
inc
and
scas
and
out
pushf
insb
sub
ja
ret
xor
xchg
xor
ret
lods
shll
add
mov
push
aas
das
outsb
dec
sub
mov
adc
cltd
and
push
mov
add
scas
jno
mov
dec
dec
ds
lods
xor
arpl
adc
andl
je
js
mov
insb
sbb
xchg
test
jp
cmp
mov
add
mov
jns
ret
adc
insb
lahf
pop
test
push
stos
mov
xor
mov
shll
ficompl
dec
movl
cmp
hlt
pop
std
into
aam
fmuls
nop
sbbb
adc
in
bound
push
orl
pushf
or
sub
sub
in
sub
mov
or
shlb
outsl
in
enter
xor
mov
sbb
push
push
movsb
xchg
in
push
mov
sub
cmovae
stc
mov
bound
dec
push
mov
xchg
movsl
jne
adc
dec
js
outsl
and
add
fsubl
or
test
cs
vandnps
xor
popa
rcll
jne
out
lcall
loop
cmp
mov
mov
cmpsl
cltd
xchg
add
leave
shr
cli
sub
mov
inc
xchg
pop
add
rol
xor
push
mov
fidivs
lock
xchg
and
in
xchg
xchg
mov
sbb
and
jo
sbb
gs
jecxz
pop
mov
fs
dec
loope
and
ljmp
pop
push
cs
aad
insl
push
mov
les
incb
xchg
pop
cmpsb
cmp
test
movl
cmp
xor
addl
xor
pop
cmp
push
sub
mov
fistpl
add
jge
out
push
cli
mov
mov
mov
push
xchg
test
fwait
inc
shrl
andl
or
popa
repnz
mov
rolb
cltd
rcr
test
lret
push
mov
pushf
cmpl
sbb
push
fimull
and
fdivrs
mov
mov
daa
sahf
fimuls
cmp
jmp
out
addr16
jp
mov
cwtl
inc
cld
subb
or
test
insb
ss
pop
js
inc
out
sbb
in
pop
xchg
jl
mov
adc
mov
mov
daa
fwait
inc
pop
loope
xor
aad
push
les
in
sub
fsubr
lods
mov
mov
ja
adc
mov
pusha
pop
aad
mov
outsb
mov
aam
mov
mov
cs
xlat
mov
into
sub
andb
loope
dec
jmp
xor
inc
mov
cmp
add
mov
in
cwtl
pop
ret
lods
sub
test
cmp
arpl
mov
lods
test
in
aad
mov
movsb
scas
adc
daa
xchg
or
cltd
xchg
xlat
sbb
aas
pop
fnsave
insb
lea
lds
popa
addl
gs
rol
inc
push
popw
mov
mov
push
xor
push
cwtl
and
mov
jno
mov
mov
add
jb
fld
sbb
cmp
addr16
xchg
test
sbb
mov
xor
xchg
call
stos
mov
test
ljmp
out
sbb
shl
pop
rcll
xor
daa
leave
nop
pop
lret
enter
lods
loopne
std
icebp
push
int
push
lods
pop
fwait
mov
mov
dec
cld
in
dec
cmpb
mov
gs
xor
ss
out
in
push
or
fcompl
sub
loop
sbb
pop
mov
dec
xchg
adc
pop
mov
and
jl
sbb
aas
std
jo
and
mov
jbe
lret
jb,pt
mov
pop
adc
cmp
in
lea
outsb
inc
cmpsb
adc
mov
mov
lahf
pop
incl
out
imul
jmp
pop
and
or
notb
jl
xlat
mov
mov
xchg
xchg
push
dec
dec
dec
clc
or
lcall
leave
push
int
cmp
scas
inc
flds
push
inc
int3
mov
fistl
jae
daa
sarl
inc
mov
enter
pushf
xor
aad
push
gs
xor
push
xor
push
clc
jmp
and
pushf
ret
push
imul
cmpsb
loope
mov
ss
inc
fmul
es
mov
add
mov
inc
fdivrs
and
cmp
mov
aaa
jg
push
stos
push
pop
lahf
hlt
or
jo
fs
mov
scas
imul
stos
lret
xchg
test
or
mov
jb
insl
insl
pop
dec
xchg
add
pop
dec
mull
or
xchg
jmp
int3
addl
stc
jne
ja
mov
cmc
repz
outsb
icebp
loopne
push
mov
pusha
out
adcb
or
lret
add
ror
mov
push
lods
xchg
jge
call
cmp
add
mov
aas
call
cmc
or
insb
pop
adc
aas
addl
mov
cmp
cmp
mov
scas
inc
cmp
pop
xchg
shlb
insb
inc
sub
jge
arpl
cmp
fnsave
bound
popa
inc
in
inc
sub
pop
mov
js
xchg
xor
inc
cmp
inc
dec
aas
jnp
xchg
xor
pinsrw
pop
and
inc
sub
hlt
jle
xor
stos
pop
inc
call
cmp
lods
or
aad
pop
xlat
inc
repnz
push
data16
lcall
shl
arpl
jg
adc
mov
insl
pop
movsb
sbb
pop
ret
bound
add
int3
sub
or
adc
xor
push
jno
int
xchg
xchg
jmp
dec
mov
add
imul
and
pop
sbb
xchg
scas
loop
adc
mov
aam
xchg
lock
vmovdqu
into
mov
sub
add
and
or
ret
rcll
jecxz
xor
xor
sub
cmp
jge
subb
mov
or
movsl
adc
cwtl
sbb
fcoms
cmpb
inc
cmpsl
or
movsl
pop
jg
enter
ljmp
fistps
aam
add
jnp
gs
dec
sub
in
lret
ds
xor
fcompl
sub
std
les
shr
inc
dec
inc
or
and
rcll
mov
and
jns
ret
dec
mov
lds
xor
loope
sbbb
pop
sub
pop
cld
cmp
mov
sarb
sub
dec
sbbb
iret
jmp
cltd
mov
rcll
push
in
push
and
xchg
push
adc
int3
sub
mov
dec
cli
inc
xchg
dec
sbb
dec
jle
out
test
imul
imul
xlat
in
mov
ss
xchg
mov
and
pop
out
mov
adc
dec
ds
pop
aas
adc
add
shrb
mov
rorl
cmp
pop
in
sbb
pop
movb
loope
ja
cmpsl
jo
mov
std
mov
fistpll
jecxz
push
ds
scas
sub
stos
andl
pop
mov
sbb
mov
dec
jmp
popf
mov
test
addb
cld
and
ror
lahf
shrl
dec
inc
push
es
adc
lret
std
sbb
jo
fstl
jnp
xchg
bound
mov
imul
push
stos
dec
add
xchg
or
ret
push
mov
test
ss
fcmovne
xor
pop
ja
sbb
aam
xlat
jecxz
sub
and
dec
push
cmpsl
inc
leave
mov
adc
mov
and
mov
cmp
ficompl
sub
push
fcmovbe
mov
mov
push
push
adc
mov
sub
out
and
popa
sbbl
out
add
jmp
inc
cmp
pop
and
dec
ja
cmpsl
test
xchg
push
add
dec
xchg
pop
sar
outsl
and
push
jno
mov
cld
pushf
pop
cmp
add
mov
je
and
or
nop
movsb
repz
push
mov
sbb
ficoms
sbb
hlt
mov
mov
push
cmp
sbb
inc
sbb
xlat
insb
jae
cmp
and
sbb
andw
inc
movsl
cmp
in
mov
xchg
xchg
push
repz
into
rcl
xchg
loope
lods
bts
add
cmpsb
and
and
repz
inc
notb
xchg
cmp
sbb
sbb
cmc
shll
aas
mov
ret
js
fwait
test
mov
out
arpl
ss
xor
scas
xchg
cs
fiaddl
xchg
push
arpl
rcl
fsubr
sbb
rolb
adc
imul
sbbb
fisttpl
int
mov
mov
xchg
inc
push
push
adc
xor
lret
jecxz
mov
cltd
and
mov
mov
mov
gs
dec
ficomps
jle
xchg
jl
insb
test
adc
imul
cmp
outsl
mov
popa
es
push
test
pop
arpl
outsl
push
adc
add
stos
imul
xor
adc
dec
jne
push
and
cmp
aas
lods
pop
outsl
pop
ret
lcall
mov
cmp
or
mov
xchg
out
dec
pop
xor
fs
insl
xchg
ret
cli
scas
loop
jge
push
incb
std
mov
testb
push
shll
mov
fisubrl
mov
imul
popf
cli
outsl
imul
ds
jle
cmpsl
cmp
adc
xor
xlat
sbb
in
stc
sbb
call
pop
icebp
imul
mov
sbbb
jl,pn
cltd
pop
add
les
imul
imul
adc
adc
insb
es
adc
inc
lock
out
ss
lods
lods
adc
ja
faddl
enter
push
lahf
and
pop
stos
sub
addr16
mov
or
mov
cli
sub
xor
mov
stos
jp
jnp
test
cmp
dec
std
push
gs
mov
jg
test
and
push
xchg
mov
xor
lret
dec
fwait
ret
mov
mov
adc
frstor
cwtl
les
stos
stos
xchg
xchg
lods
push
mov
fildl
aaa
ja
or
dec
fisttps
cli
sub
mov
test
push
imul
into
push
mov
sub
rorb
jnp
xchg
push
repnz
movsb
sub
aam
inc
pop
jmp
inc
out
cli
in
lcall
and
arpl
sti
push
push
cmpb
rol
subl
fisubs
inc
and
sub
sub
add
dec
pop
enter
cli
mov
inc
test
or
cmp
aas
loopne
push
add
mov
movsl
popf
lahf
pop
into
dec
adc
mov
push
mov
dec
loop
add
sbb
call
sti
dec
andb
jmp
imul
les
jbe
cmp
dec
pop
es
test
push
out
fimuls
pop
mov
mov
xor
nop
adc
cld
nop
clc
shrl
push
dec
aas
pop
jne
xor
and
cmpsb
pcmpeqd
cmp
push
mov
xchg
int3
lock
mov
inc
lret
cmp
xchg
dec
addl
lods
out
xchg
mov
push
jmp
mov
lret
xchg
pushl
sti
xchg
push
ret
iret
xor
jg
lds
sahf
in
pop
xchg
out
scas
xchg
test
push
or
add
loopne
xchg
push
pushf
les
out
fwait
jno
jge
cmp
cmp
inc
movsb
scas
das
xor
and
mov
cmpsl
lods
mov
sqrtps
push
mov
in
iret
dec
repnz
jmp
jecxz
pop
cmp
icebp
mov
push
es
lret
cmpsl
xor
push
pushf
lds
adc
ss
jecxz
cmpsb
adc
jle
cwtl
inc
daa
and
inc
mov
dec
cmpb
int3
mulb
sbb
sbb
pushf
ret
gs
enter
das
pop
mov
fstl
jmp
sbb
cmp
mov
call
int
pop
call
sbb
lahf
decl
nop
inc
aad
and
pop
cmp
insl
push
orb
iret
cmp
push
frndint
pushf
jmp
xchg
push
inc
xchg
in
add
xor
fs
sbbl
iret
pop
pushf
mov
sbb
in
aad
and
stos
int3
rcr
js
adc
fiadds
outsb
ret
repz
inc
push
mov
pusha
sub
cmpsl
lcall
ret
insl
mov
xchg
ds
and
push
into
je
inc
out
sub
out
cmp
mov
inc
ljmp
jnp
cmp
mov
dec
jbe
movsb
push
aas
fisubl
enter
js
xor
lahf
or
ret
out
lds
xchg
cmc
lahf
scas
leave
test
lods
outsl
lods
adc
mov
xchg
cmpsb
inc
jl
push
sbb
inc
inc
fdivs
lea
dec
mov
and
push
sbb
adc
cmp
insl
outsl
jecxz
jns
loop
xchg
dec
sbb
mov
push
mov
nop
rorl
cltd
jmp
adc
sbb
xchg
pop
push
jl
loop
and
fisubrs
cli
dec
sbbl
push
cmpsb
mov
fcoms
jmp
fmull
jae
push
cld
jge
daa
mov
adc
rorb
sub
arpl
or
aas
sub
or
sub
cmp
divl
mov
sbb
mov
scas
iret
mov
mov
cwtl
lods
cmp
outsb
adc
jae
jecxz
mov
mov
cltd
rolb
loope
mov
pop
outsl
outsl
sub
out
jb
xor
dec
push
jnp
ret
mov
xor
jp
or
jmp
daa
lahf
xchg
xor
dec
test
outsl
iret
mov
jnp
xchg
sbb
dec
mov
dec
cmp
jge
cltd
cmp
int3
lods
mov
xchg
out
xor
ja
fists
test
add
ss
int
je
outsb
filds
ds
fstps
popf
into
addl
in
lock
fildll
and
push
shl
add
in
sti
xchg
ds
xchg
jmp
push
rol
push
push
fdivs
lods
imul
lahf
test
ss
orb
adc
or
and
sub
data16
test
sub
neg
push
jo
nop
inc
rcrb
enter
fldcw
mov
rcr
cltd
adc
stc
sub
scas
xor
cmp
imul
stc
xorb
std
or
idivl
jp
xor
addl
test
cmpsb
enter
insb
repnz
push
icebp
fs
jmp
sub
lahf
rclb
and
lahf
ja
jge
mov
jae
insb
xorb
push
cld
lods
sti
ret
inc
iret
mov
out
or
ljmp
loop
adc
mov
sub
dec
ret
fsubr
mov
mov
ja
data16
push
fsts
push
das
stos
int
fnstenv
ds
or
mov
xchg
aas
das
jl
dec
add
stos
out
jecxz
outsl
mov
aaa
xor
lods
sub
xor
inc
inc
out
imul
sub
push
into
adc
mov
inc
push
jmp
sti
pop
adc
dec
add
es
mov
xchg
aad
outsl
ja
lock
int
ret
dec
popa
inc
je
xchg
push
inc
insl
leave
xchg
xchg
adc
mov
loop
stc
inc
xchg
cmp
out
lahf
popf
cmp
mov
in
mov
sbb
push
fldt
mov
xchg
ds
ds
adc
cld
rolb
jp,pn
sbb
arpl
mov
pop
outsb
clc
ss
or
inc
and
insb
mov
outsl
inc
pop
ret
std
pop
xchg
cmp
les
ror
ljmp
xchg
push
clc
test
xchg
xchg
shlb
leave
jg
adc
xlat
add
push
jmp
dec
xchg
cwtl
dec
dec
pushl
jb
jno
cmc
insl
adc
xchg
sarl
test
jb
pop
xor
inc
and
inc
cmp
loop
jge
push
cmp
push
cmp
lcall
in
push
dec
cmp
pop
fcompl
push
jle
xor
fldcw
push
lock
mov
push
inc
jbe
cmpsl
or
fisubrs
test
ss
jo
js
scas
pop
lcall
add
cmp
mov
inc
aam
mov
inc
sub
inc
and
or
cmpsb
sub
sbb
sbb
inc
aam
xor
in
je
scas
xchg
dec
int3
mov
stos
push
xor
cmp
in
sti
sub
dec
rclb
mov
imulb
push
shlb
sarb
and
les
stos
mov
push
pop
lret
mov
mov
fwait
mov
add
fstpt
xor
jne
jle
aas
mov
sbb
popf
sbb
daa
roll
repz
arpl
mov
test
jae
in
scas
iret
jle
jmp
mov
sub
push
ret
sbbb
fdiv
cld
sbb
lcall
in
and
cmovg
pop
sbbb
jb
mov
mov
cmp
jg
or
into
mov
imul
movsl
cmp
andb
cwtl
in
jbe
aas
hlt
mov
rolb
sub
sti
dec
mov
icebp
ret
cli
mov
fcoml
jnp
jp
out
in
jmp
add
cmp
mov
shll
inc
push
and
outsb
outsl
dec
repz
add
icebp
jp
xchg
push
mov
add
mov
add
call
repz
push
fbld
xchg
xor
lock
enter
adc
jb,pn
mov
ja
add
cmp
popf
jg
adc
ret
pusha
jae
sub
bound
std
cmp
lcall
xchg
dec
jns
or
push
jnp
sub
stos
dec
jbe
iret
popa
push
aad
jmp
fdivrl
jnp
add
push
inc
sub
cmpsl
data16
insl
idivl
push
cs
mov
daa
stc
pop
lock
icebp
movsb
ja
cmpsb
lock
jne
cmpsb
nop
aam
xor
jae
and
xor
cmpxchg8b
mov
and
divl
xor
std
aad
dec
sahf
xchg
mov
jne
inc
iret
fidivl
push
shl
icebp
das
fistl
dec
testl
sub
xchg
test
cmpl
cmc
push
sbb
movsl
sahf
jb
fstpt
cmc
std
repz
cld
jg
testl
imull
test
pop
pop
repnz
sub
adc
leave
loope
sub
jo
sti
dec
sub
lock
lahf
xchg
imull
cmpsb
dec
aad
inc
pop
adc
jecxz
add
rorb
push
repnz
xor
notb
xor
and
out
fistl
imul
mov
movsb
cmc
ja
in
into
dec
push
mov
test
into
add
or
cli
and
or
mov
jbe
xor
lds
jmp
lret
sbb
fmul
clc
push
cmp
bound
into
xchg
mov
xor
jmp
cmp
sbb
push
daa
xor
pop
inc
repz
sbbb
jo
or
xchg
xor
arpl
hlt
adc
mov
lds
cld
xchg
scas
adc
dec
or
mov
fisttpl
stc
icebp
pop
cmp
adc
lcall
pop
xlat
sub
dec
lea
lea
int
mov
movsb
mov
sbb
xor
ficoml
cmp
stos
jge
ret
sbb
mov
insb
int3
cmpsb
and
push
ja
and
aad
outsl
cmp
into
add
jnp
xor
inc
sbb
lcall
outsl
and
popa
sub
movsl
add
aam
mov
inc
fs
cmp
mov
fisubrl
sub
inc
in
filds
fisubs
loopne
pop
insb
xchg
daa
mov
in
lock
mov
call
arpl
insb
mov
push
aas
xchg
sbb
lcall
xor
push
addr16
in
sbb
iret
jmp
cmp
cltd
push
add
imul
sub
dec
iret
jmp
mov
adc
jne
mov
xor
ret
lods
pop
mov
xor
lds
data16
pop
adc
inc
mov
mov
inc
jo
shll
leave
leave
mov
ret
push
and
mov
ror
mov
fidivrs
adc
jnp
les
enter
lret
dec
adc
js
movsb
ret
mov
mov
mov
rorl
aad
stos
or
push
sbb
lcall
popf
sub
and
dec
mov
adc
xchg
dec
shrl
cld
jmp
dec
push
and
shld
pop
sbb
daa
inc
xlat
mov
test
jbe
mov
stos
sub
mov
jbe
adc
scas
or
pop
pop
adc
push
imul
stos
and
fnstsw
jb
cmp
std
mov
cmc
jb
cmp
jne
mov
jecxz
fsubrs
cli
mov
xchg
or
mov
add
inc
sarb
pop
pop
sbb
stc
scas
mov
das
outsb
loopne
pop
mov
test
mov
add
pop
jno
nop
fsubs
outsl
js
fucom
cmp
jmp
mov
mov
sti
xchg
lret
pop
sbb
out
icebp
dec
cs
or
dec
js
jle
add
sub
mov
pop
xchg
pop
sub
cltd
xchg
add
push
sub
cmp
pop
mov
outsl
push
sub
push
insl
int3
cwtl
out
movsb
and
insl
mov
lahf
stos
mov
jne
mov
pop
loope
and
imul
jge
lods
or
outsb
je
arpl
jle
xchg
cmc
lds
jb
loopne
dec
push
imul
arpl
ret
arpl
daa
jg
sbbl
pop
rcll
add
mov
fcoms
xchg
cltd
ret
cmpsl
inc
aam
mov
xchg
jecxz
pop
xchg
movsl
mov
test
jbe
mov
jns
adc
adcl
pcmpeqd
out
adc
bound
pop
mov
leave
and
iret
cmp
or
mov
std
stos
inc
mov
mov
adc
xor
or
pusha
dec
int
add
in
ret
dec
cmp
mov
cmpsb
jae
xlat
dec
jle
pop
push
jns
inc
cmpl
mov
mov
daa
add
jne
pop
sarb
xchg
pop
lds
insb
pop
daa
fsubl
ljmp
cmpsb
adc
xor
xchg
mov
lock
mov
in
rcll
cltd
pop
xchg
cmp
lcall
lods
subb
cmpsb
ds
icebp
push
pop
or
sahf
jg
shr
insb
dec
daa
nop
imul
in
push
adc
test
or
pushf
jg
push
mov
cmp
pop
in
inc
sub
jl
int
lret
insl
push
int3
mov
pop
push
mov
mov
clc
sti
mov
cmp
ret
aaa
mov
xor
xchg
std
jmp
andl
hlt
int3
jbe
add
insl
cli
into
pop
jle
lret
xchg
push
das
fcomps
inc
filds
dec
mov
add
dec
add
pop
into
and
xlat
jo
repnz
mov
jns
rcl
mov
and
jno
out
das
pop
les
or
push
ljmp
jle
aam
movsl
mov
xchg
in
loopne
or
pop
outsl
icebp
inc
mulb
push
mov
je
pop
test
add
mov
les
aaa
jnp
xchg
test
push
bnd
jns
adc
xor
pop
in
xor
jne
int
jbe
nop
test
test
hlt
mov
dec
xchg
cmp
xor
mov
cmp
mov
xor
cltd
inc
and
mov
jle
sbb
ja
aad
and
out
mov
out
xor
add
je
inc
push
add
jmp
cltd
cld
repz
repnz
repz
lea
push
insb
and
jmp
push
loop
add
jg
sub
repnz
xor
sub
ficoms
icebp
arpl
icebp
pop
pop
out
inc
pushf
cmp
add
clc
not
shlb
or
int
inc
cmp
repnz
xchg
mov
js
es
jmp
test
xchg
push
add
inc
sti
inc
jbe
mov
or
xchg
xchg
cmp
inc
clc
or
pop
mov
mov
adc
push
add
jecxz
cmpsb
jle
js
dec
loopne
shll
je
sbb
popf
jb
lahf
xchg
mov
add
in
mov
outsb
push
push
xor
cs
add
movsl
push
clc
jge
notb
jno
add
cmp
mov
sar
pushl
adc
push
cli
addb
cltd
fwait
push
mov
ljmp
and
scas
xor
aas
out
sti
pop
add
adc
mov
leave
xor
fldl2e
jae
imul
cmp
add
and
scas
sub
stos
out
jmp
sbb
test
push
sbb
mov
fiaddl
push
pushf
cli
leave
jge
icebp
jae
pop
mov
mov
stos
es
cmp
stc
xchg
in
inc
push
mov
fldcw
rcrb
lcall
mov
xor
in
jbe
roll
cli
out
push
insb
inc
adc
mov
pop
mov
mov
frstpm(287
int
mov
dec
movsb
scas
sbb
or
inc
jge
or
andb
out
enter
and
cmc
pop
cmp
xor
jno
push
insb
mov
out
mov
push
fs
mov
arpl
xchg
mov
js
sbb
je
and
xchg
scas
pushf
or
popa
mov
andl
jle
and
repz
pop
and
and
dec
movsl
push
sub
les
mov
stos
mov
cmp
leave
mov
mov
lds
xlat
or
mov
rcrb
pop
pop
aad
pop
push
in
cmp
dec
xor
fwait
mov
leave
mov
sub
mov
xor
dec
mov
and
dec
inc
mov
push
pop
mov
push
inc
test
push
pop
aad
xchg
jns
jns
loope
dec
icebp
adc
inc
mov
pop
inc
jae
inc
jo
cmp
push
inc
je
add
ret
lea
xor
jl
pop
jo
inc
xor
pop
or
js
adc
loopne
sub
mov
pushf
jno
call
ret
jge
xchg
hlt
adc
std
push
cmpsl
int
jns
mov
xchg
rorl
cmpl
sar
and
mov
or
sbb
in
cld
jle
clc
cmpsl
lods
jmp
add
cmpsl
in
popf
mov
adc
ljmp
pushf
jl
arpl
stos
and
jecxz
cmp
cld
mov
iret
testb
aam
cmp
sub
cmp
loop
dec
mov
sti
popa
push
fsubl
sub
cmpsl
add
mov
sub
cmpsb
mov
or
or
js
fldenv
data16
int
aaa
adc
in
icebp
mov
sbb
and
pop
xchg
mov
inc
xchg
test
gs
jmp
ss
xor
scas
adc
fwait
and
sub
hlt
or
pop
inc
hlt
jb
add
jmp
dec
pop
out
sbb
jnp
pusha
clc
add
mov
adc
dec
pop
in
pop
sub
clc
xor
mov
sbbb
ja
xchg
fbstp
xchg
pop
push
int3
test
ds
or
dec
jmp
lods
push
sbb
lods
mov
ss
dec
cmp
lods
xlat
pushf
bound
rcrl
push
jecxz
mov
add
dec
data16
mov
mov
cmpsb
je
repz
andl
add
jle
xchg
pop
or
xor
rcrl
fistpll
imul
mov
push
sub
adc
lds
ja
sub
je
cmp
cmp
cmp
inc
jmp
add
rclb
cmp
nop
cmp
imul
jg
lock
xor
aam
pop
or
add
mov
mov
xlat
pop
inc
dec
lret
mov
stos
lock
lds
adc
cmc
xchg
cmp
lahf
sar
xlat
lea
cmp
mov
ret
test
push
addb
xchg
cli
and
sub
daa
pop
std
es
jne
in
add
and
inc
ficoms
sub
int
jl
xor
mov
jecxz
mov
jo
inc
or
mov
cmp
test
fs
sub
inc
sub
cltd
lods
popf
popf
sub
and
mov
and
or
stc
in
sub
inc
imul
sub
xchg
pop
mov
movsb
jb
xor
and
and
push
out
mov
pushf
adc
pop
sar
xor
pop
jnp
fcomp
sbb
pop
arpl
lods
fs
into
and
xor
lods
mov
in
idivb
push
sub
xor
sar
sub
push
mov
ret
pushf
data16
sarl
xlat
mov
or
pusha
sub
add
sbb
sarl
lock
sti
int
out
pop
bound
mov
lcall
movsb
mov
sbb
xor
mov
loopne
push
ljmp
jnp
in
push
xchg
adc
mov
and
xchg
ja
addl
mov
mov
sbb
pop
in
std
xor
mov
mov
mov
adc
js
sbb
jnp
pop
imul
idivb
push
jb
into
cwtl
and
sahf
push
flds
mov
jle
push
sahf
addr16
mov
pop
rcrb
jo
add
or
sub
lea
push
mov
pop
inc
test
cmp
aaa
or
xorb
scas
movb
push
std
adc
imul
movsb
mov
sub
mov
out
mov
rcll
mov
mov
in
dec
shrl
inc
ss
inc
lcall
gs
pop
or
shl
xor
mulb
leave
adcl
sti
cmc
push
sub
int
pop
xor
add
sbb
int3
mov
cmp
mov
mov
cwtl
pop
push
testb
scas
out
jl
jmp
loope
xor
push
in
inc
fs
lock
jae
cmpsl
mov
mov
mov
mov
push
sti
or
in
mov
sbb
pushf
ds
popf
cmc
loope
or
jo
jae
dec
lcall
jecxz
pop
lods
inc
sub
or
push
fstpl
add
ljmp
popf
inc
mov
jbe
and
fiadds
sub
sarb
repz
xor
das
mov
mov
jmp
mov
or
pop
mov
mov
rcrl
shrb
fnstsw
inc
dec
lret
jbe
out
cli
cs
xor
inc
aaa
rol
mov
lods
aas
jg
dec
xchg
rorl
dec
push
mov
mov
es
sti
ss
sub
ljmp
or
das
stc
cmp
jae
mov
inc
mov
lret
xor
inc
iret
adc
cltd
aam
xor
ljmp
pop
out
cmp
int3
mov
pop
jge
mov
loope
imul
xchg
pop
stos
cmp
sub
sub
mov
jmp
xor
pop
or
dec
cwtl
ret
fsubs
mov
lret
or
pop
xchg
mov
cltd
push
test
adc
pop
pop
fisttpl
and
sbb
add
int3
lea
sub
rol
push
push
add
scas
loopne
pop
dec
fstpt
xchg
mov
jo
mov
xchg
sbb
loop
leave
sub
push
mov
sub
popl
dec
dec
sub
dec
cli
mov
iret
jne
roll
lea
mov
or
push
fnstenv
xchg
jle
jp
add
fnstenv
aaa
cmpl
add
push
mov
jo
test
fwait
adc
fidivrl
xchg
je
mov
jbe
lods
inc
mov
cmp
xchg
ds
loop
add
adc
or
sahf
sbb
mov
lahf
test
xchg
repnz
jae
xor
push
aam
repnz
push
lds
sub
cmp
insl
inc
and
mov
roll
lods
lret
mov
ret
fisubrs
or
and
hlt
pusha
push
sub
jne
int
jno
cmp
jae
negb
cli
add
sub
rcrl
cmp
es
pextrw
dec
sub
mov
lods
cmp
mov
ficompl
imul
dec
jb
sahf
popa
xor
mov
rorl
sbb
push
icebp
aam
mov
push
insl
pop
sahf
dec
mov
jg
pop
xchg
jbe
mov
push
push
dec
repz
in
loop,pn
dec
ds
or
sub
fcoml
inc
and
daa
ds
int3
loopne
mov
xchg
test
rclb
add
sarl
mov
sarb
jmp
je
dec
sub
push
add
inc
push
dec
pop
inc
lods
int
mov
nop
out
sub
cs
and
push
fisttpl
push
sbb
xchg
mov
jge
push
stos
xchg
sub
adcb
fcomi
bound
int3
and
ljmp
adc
iret
push
mov
std
cmp
cmp
mov
xchg
push
and
scas
movsl
add
test
popa
call
pop
pop
inc
xor
or
mov
mov
mov
inc
enter
imul
in
fsub
sub
ja
add
mov
pop
clc
addr16
fcompl
cmp
push
add
je
add
xlat
pop
data16
jmp
cwtl
sub
jb
movsl
push
xchg
jg
ljmp
js
loop
jl
fsubrs
pushf
jl
imul
jmp
mov
aas
repnz
aad
andl
loopne
lds
adc
jne
mov
cmpsl
icebp
ds
xor
movb
lods
mov
repz
imul
jb
xchg
ret
cmp
inc
fildl
mov
scas
movsl
insl
mov
fxch
sbbb
mov
mov
add
mov
mov
jno
fsubrl
push
cwtl
xor
mov
jns
call
loope
or
pop
cmp
arpl
hlt
mov
ret
out
out
and
dec
cmp
popf
push
or
in
or
xchg
inc
in
push
adc
xchg
imul
sub
mov
xchg
mov
push
cmp
xchg
mov
cwtl
mov
mov
xchg
loopne
lcall
sbb
pushf
movsb
in
rcr
adc
add
insl
pop
fcompl
aad
stos
mov
mov
adc
nop
mov
in
push
dec
mov
imul
cmp
cmp
inc
mov
out
test
jmp
pop
or
insl
insl
mov
inc
xchg
sbb
cmp
mov
fistpll
mov
fdivr
adc
push
fistpll
xchg
test
cmpl
mov
imul
push
sahf
data16
mov
sub
xor
jno
rolb
hlt
inc
mov
mov
scas
sti
imul
je
cmp
out
dec
ret
inc
fcomp
fwait
adc
xor
out
arpl
test
dec
mov
das
mov
mov
mov
adc
out
or
ror
pushf
fsubs
loopne
cli
inc
cmpsl
test
xchg
push
pop
xor
push
jne
jecxz
out
dec
jg
js
leave
sarl
jnp
orl
sbb
pop
push
push
push
add
mov
jmp
mov
or
daa
ficoml
adc
mov
popf
add
dec
mov
rolb
push
ret
loop
inc
sbb
jne
xchg
stos
and
cmp
jo
push
push
nop
xchg
fisubrs
mov
pop
inc
or
jb
xchg
aaa
xor
cs
aam
xchg
gs
push
cmp
or
movsl
pop
push
les
cmp
xchg
jnp
int3
xchg
sub
jnp
lock
and
addr16
jecxz
sti
and
loope
xchg
jne
mov
sub
mov
jno
popf
gs
movsl
pushf
repz
fldt
aas
mov
push
inc
hlt
out
inc
mov
sbb
sub
jmp
scas
jno
lods
cwtl
je
scas
jns
loopne
pusha
sub
sbbb
mov
das
mov
cmpsl
outsb
sub
mov
mov
idivl
jge
xor
repnz
jns
mov
je
call
jae
shr
xchg
add
out
cmpsb
shrb
push
into
jecxz
or
add
jnp
movsl
pop
pop
sti
push
pop
sub
pop
or
inc
adc
mov
xchg
jmp
lods
sub
aaa
lahf
je
sbb
adc
jmp
inc
jle,pn
rorb
mov
loope
or
xor
add
gs
lea
push
and
mov
and
mov
adc
data16
xor
inc
fdivr
pushf
rcll
fwait
jl
jb
pop
aam
aad
fidivrs
pushf
daa
pop
cmp
aad
mov
and
fsubp
dec
xor
les
jns
rorl
sub
ja
add
jnp
repz
xor
mov
cwtl
cmp
cmp
xor
cmp
mov
fistpl
or
int
lcall
iret
cmp
rcr
jnp
in
push
dec
stc
jge
jbe
mov
fidivs
fs
movsl
icebp
pop
xor
dec
mov
clc
shlb
movsl
mov
movsb
repz
jnp
mov
repz
call
inc
adc
movsl
adc
enter
icebp
mov
or
scas
and
xor
out
xor
imul
fstpt
cmp
fimuls
rclb
adc
cld
out
mov
push
mov
bound
pop
sub
jmp
aaa
push
jns
jo
dec
dec
mov
push
push
sahf
adc
cmp
mov
movsb
pushw
jmp
sub
popf
out
sbb
test
sti
lss
xchg
dec
out
nop
inc
mulb
add
jno
addr16
sbb
push
and
push
js
jae
jnp
ret
andb
scas
push
mov
add
test
aam
in
jnp
mov
cmp
sub
xor
push
stc
mov
mov
fbld
lret
aad
dec
aas
int
pusha
fsubs
imul
pop
lcall
leave
mov
pusha
out
adc
lcall
push
pop
inc
sbb
lret
std
pusha
adc
mov
dec
push
adc
pop
or
or
jecxz
mov
pop
push
xchg
lds
inc
das
call
pop
pop
cmpl
jb
pushf
in
mov
daa
fstpl
pop
or
xor
sbb
cmp
cmp
ljmp
jp
icebp
hlt
inc
aaa
mov
xlat
std
sahf
addr16
and
pop
in
mov
sub
or
cmpsb
int3
jns
adcb
xchg
ljmp
lahf
repnz
mul
xchg
or
sbb
sub
adc
aam
ret
or
les
cmp
or
mov
lahf
shlb
push
jle
mov
popa
pop
outsb
das
jnp
and
and
inc
enter
in
ss
and
loopne
adc
jl
das
cs
fcoml
and
dec
pop
loopne
pop
dec
test
and
jmp
sub
movsb
mov
push
xchg
jo
pop
lret
int
jne
pop
mov
dec
sub
jnp
mov
xor
push
xor
push
std
lahf
ret
aas
xor
stc
lcall
test
jmp
pop
pop
pop
ss
mov
idivb
test
rorl
pop
cwtl
cmc
lret
adc
add
stos
jbe
jp
cmp
jo
dec
push
dec
cs
jne
lods
jl
xchg
and
and
mov
jl
cwtl
sbb
jns
rcrl
adc
loop
ret
xorb
or
pop
jbe
cwtl
cmc
out
mov
loopne
loopne
xchg
sti
sub
jmp
add
out
std
pop
xor
shll
mov
jge
cmp
dec
test
mov
das
mov
add
loope
push
test
pop
dec
fs
xchg
pop
gs
push
cmp
mov
jmp
xchg
movsl
fsubrl
sbb
and
xchg
and
mov
into
mov
ljmp
ljmp
and
xor
aaa
and
cltd
and
loope
bound
mov
movsl
xchg
aad
clc
cmp
scas
daa
rcrl
push
inc
jo
sbb
push
dec
jge
ffree
pushf
into
mov
arpl
movsl
std
or
and
loopne
out
cltd
cwtl
iret
xor
stos
cmpsl
pop
push
push
xchg
mov
lret
push
xchg
aaa
rcrl
mov
outsl
xlat
call
mov
jle
inc
pop
inc
rclb
lret
mov
jmp
mov
sub
packssdw
invd
shlb
add
dec
sub
adc
test
pop
push
xchg
add
ret
testl
rcrl
push
cmp
adc
pop
pop
insb
out
mov
lret
lods
enter
pop
push
push
xchg
cmpl
mov
divb
add
enter
sbb
or
dec
mov
aad
and
inc
fnsave
push
rorb
push
add
fcoms
ss
mov
loop
mov
lret
mov
push
neg
stos
cmpl
outsl
push
mov
cmp
mov
adc
sub
std
mov
gs
leave
lods
push
sbbl
dec
enter
int3
sbbl
or
mov
sub
sahf
roll
or
add
add
es
clc
aam
adc
fbstp
outsb
movl
or
cmc
ss
xchg
cld
mov
mov
fadd
mov
fcomps
addl
pop
std
pop
dec
fs
mov
cld
sbb
dec
fwait
jle
in
pop
outsl
xor
sahf
mov
inc
xchg
fsubrl
or
aam
mov
fisubrl
int
out
pop
popf
adc
jecxz
mov
jecxz
cmc
js
lds
fisttpl
bound
imul
jne
js
scas
inc
hlt
and
sarb
std
and
dec
ljmp
or
cld
sti
test
xchg
lds
out
adc
xchg
sbb
ljmp
sti
mov
or
mov
adc
ret
dec
xor
sbb
xchg
xchg
adc
pop
lret
and
push
cmp
inc
cmp
mov
push
sbb
cmc
call
repnz
popa
inc
adc
inc
cmpsl
pop
daa
or
lret
add
and
pop
hlt
mov
dec
lret
push
inc
fsubrl
add
stos
adc
testl
mov
lods
fimull
and
push
or
out
test
sub
ffreep
add
addr16
pop
xor
rorb
test
inc
dec
fistl
jns
cmp
fidivs
and
jg
or
arpl
sub
nop
dec
scas
fistl
mov
or
cmc
shrl
pop
jne
mov
cmp
pop
popf
rolb
shlb
push
mov
call
dec
das
push
sub
in
lcall
cmc
sbb
mov
xlat
test
addr16
sub
out
fstps
test
jbe
les
add
cmp
pop
sbb
xor
push
test
call
and
out
xor
add
sbb
fcomip
rclb
pop
or
pop
push
push
popl
dec
xchg
cmp
mov
int3
push
hlt
bnd
cmp
es
or
inc
mov
mov
cmpsb
pop
push
and
mov
push
popf
sub
jnp
mulb
sbb
ret
mov
int3
fsubrs
cwtl
lea
pop
push
daa
testb
mov
xor
add
popa
jns
movsb
gs
push
xor
enter
mov
lds
push
ret
std
mov
mov
sbb
xor
or
lcall
push
cmp
jmp
aam
xor
ds
add
cmpb
popl
push
arpl
inc
bound
push
cltd
mov
popl
movsl
pop
add
nop
inc
dec
stos
sbb
sub
into
pop
fsub
popa
je
insl
xor
int3
lret
sbb
dec
pop
mov
dec
fucomp
lret
jb
push
sub
lods
push
pop
imul
xchg
xor
les
mov
xchg
leave
scas
lock
fnstsw
rcrl
or
inc
stos
cmp
outsb
je
xchg
shlb
lods
pop
lods
xor
or
or
ds
stc
or
outsl
xchg
fsub
mull
push
push
jge
call
fidivrs
mov
push
jl
lret
dec
mov
sbb
mov
mov
in
ret
out
dec
pop
in
push
xchg
adc
js
mov
mov
sbb
jl
jno
inc
dec
mov
ffree
sub
cmp
pusha
sti
cmpsl
js
pop
imul
int
cmpsl
pop
shl
push
pop
cmp
cmpsb
ss
test
shrb
call
or
push
testl
lds
dec
test
inc
daa
mov
hlt
jp
push
scas
clc
inc
pop
push
jo
in
lcall
mov
mov
int3
mov
pop
sbb
lret
cmpl
ljmp
es
iret
cmp
or
js
sbb
jns
out
fisubrl
nop
sub
popf
cmpsb
pop
xlat
jmp
mov
cmc
outsb
cmpsl
mov
inc
add
stos
popf
pop
into
data16
loopne
lock
shrl
cmp
inc
shlb
insl
outsb
push
pop
mov
rcl
and
lret
jecxz
push
push
loope
movsb
pop
imul
enter
push
imul
dec
fdivl
insl
mov
ss
popa
rol
cmpsl
mov
stos
mov
insl
add
jno
sbb
fsts
sub
inc
xor
ljmp
mull
aas
enter
jno,pn
and
or
sbbl
dec
decl
cmc
stos
pop
inc
cmc
aad
inc
mov
inc
jnp
or
mov
pop
mov
testb
outsb
or
int
out
pop
mov
dec
mov
nop
insl
and
jne
dec
dec
jnp
sbb
test
jne
dec
test
fdiv
jne
inc
sahf
rclb
dec
or
xchg
out
adc
sub
popf
mov
fiadds
sub
ja
imul
out
sbb
test
mov
movsl
adc
cs
enter
ret
sub
shr
lcall
xchg
push
dec
adc
bound
or
imull
loope
les
add
sbb
std
add
mov
sbbl
fwait
imulb
aaa
xchg
shrb
push
mov
mov
push
sub
mov
insl
mov
push
sbb
mov
or
lret
mov
or
sub
into
lock
sete
and
cltd
aam
cmp
lret
push
xchg
jge
sbb
shlb
push
sub
xor
rcll
inc
xchg
pop
inc
hlt
push
lock
xchg
and
xchg
mov
int
leave
or
rolb
pop
test
jmp
lret
xchg
out
dec
cmp
out
dec
lahf
adc
jae
cltd
mov
jns
inc
sbb
pop
std
imull
outsl
inc
leave
adc
sbb
test
xorl
subb
enter
inc
xor
andb
mov
sub
jp
push
pop
test
push
out
shl
mov
iret
pop
test
iret
mov
xlat
les
gs
mov
std
sub
and
sahf
cmpsb
push
leave
int
mov
mov
xchg
out
sub
dec
pop
insl
lods
inc
jp
xorb
repz
es
sub
jbe
adc
add
jmp
push
sub
bound
sbb
dec
movsl
imull
and
bound
cltd
jmp
in
cltd
mov
sub
push
xor
lcall
movsb
xor
and
xchg
cmp
sub
iret
aam
clc
and
push
mov
mov
fidivs
add
adc
icebp
clc
pop
stos
dec
sti
mov
call
lods
adc
push
aaa
divb
in
icebp
lcall
cltd
xchg
dec
jmp
sahf
add
or
ds
fnstsw
adc
mov
rolb
xchg
add
inc
sub
flds
mov
pusha
movsb
fildll
sbb
mov
xor
add
movsl
insl
xlat
add
imul
mov
pop
sbb
dec
addr16
xor
test
imul
push
dec
cmpsl
iret
jecxz
fwait
push
adc
mov
cmc
or
and
cld
xchg
mov
push
loope
mov
sbb
jecxz
push
sbb
mov
and
jbe
adc
jmp
inc
jle
fwait
in
addr16
jp
adc
fdivl
scas
in
mov
outsl
dec
rcl
push
or
repz
mov
or
or
fs
int
addr16
enter
push
fs
cltd
lods
addl
fadds
sbb
aas
xor
or
mov
push
imul
outsb
aad
es
jo
gs
lahf
cli
das
iret
jne
ret
sub
mov
xor
in
inc
fistl
cs
mov
push
inc
adc
aad
jbe
jno
xchg
or
and
dec
inc
lods
sub
mov
das
adc
dec
dec
pop
lret
xchg
mov
add
xchg
lds
mov
push
insl
ja
dec
xchg
add
lods
imul
or
std
ds
mov
cmpsl
cld
test
add
call
mov
adc
mov
cltd
cmp
jge
adc
pop
jbe
ljmp
xchg
lea
shlb
cmp
mov
in
pushf
inc
sbb
adc
add
sbb
adc
or
xchg
xlat
movsl
jno
imul
mov
shlb
call
movups
insl
sub
gs
cmp
sbb
jno
in
adc
xchg
mov
inc
mov
jg
gs
cmp
adc
sbb
xor
jae
ds
stos
ja
sub
mov
jns
popf
setne
jo
adc
lock
repz
int3
addb
pop
fisubl
push
test
push
adc
fsubl
push
sbb
pop
sub
bnd
adc
lret
inc
mov
pop
daa
hlt
clc
xor
inc
call
and
orb
pop
inc
jns
sbb
sbbb
enter
pushf
out
cmc
sti
jge
add
pop
push
jl
push
or
and
inc
push
repnz
repz
lret
push
jno
xor
int3
xor
incl
mov
mov
mov
mov
lahf
cmp
add
add
jno
cmc
mov
inc
push
push
adc
pop
rol
idiv
xchg
pop
fucomi
mov
push
xor
or
test
mov
mov
imulb
int3
loopne
lock
cld
sbbb
mov
push
inc
inc
in
inc
inc
ds
lods
stc
mov
and
gs
mov
orb
fs
sub
inc
loopne
mov
iret
xor
or
xor
js
inc
arpl
cli
shlb
add
push
or
inc
arpl
add
push
sub
popa
cld
jg
stos
or
lcall
cmpsl
mov
cltd
xor
lock
mov
xchg
fwait
sbb
mov
mov
stos
into
adc
mov
daa
sub
gs
std
or
add
int3
sub
inc
call
mov
popl
jle
arpl
xchg
rcrl
mov
stos
lret
sbbb
cs
pop
jge
mov
push
xor
outsb
inc
out
hlt
cmp
adc
int3
jno
pop
jmp
imulb
inc
inc
movsb
cmp
adc
scas
pop
shrl
ds
lret
fnstsw
lock
fists
daa
mov
lock
dec
sub
testb
fdivrl
aad
imul
lock
scas
movsl
loop
loope
mov
jno
mov
decl
mov
mov
das
cwtl
repz
inc
mov
sarb
je
push
lock
cmp
test
push
lea
fwait
pushf
dec
mov
xchg
subb
push
sahf
fldcw
notl
mov
lods
adc
or
lret
dec
test
pop
int
dec
stos
mov
xlat
and
xor
xchg
iret
scas
stos
or
in
out
inc
or
in
or
push
test
pop
xchg
aas
sbb
cmp
xchg
mov
xor
mov
insb
clc
pop
lahf
lret
lcall
or
mov
fiadds
inc
loopne
loope
push
cld
mov
jmp
mov
pop
mov
jno
rorb
iret
or
fistps
push
mov
dec
lahf
jecxz
pushf
cli
pop
outsl
fwait
rorb
fildll
push
pop
add
pop
inc
lea
in
movsl
push
jmp
mov
popf
rcl
add
dec
in
imul
adc
xchg
pop
mov
push
sbb
or
inc
xor
rorl
xchg
aas
rolb
nop
arpl
sub
data16
into
mov
pop
add
sbb
ret
push
inc
ljmp
filds
mov
fsubrs
xchg
cmp
div
mov
nop
jecxz
and
scas
idivl
pop
popa
dec
dec
in
or
repnz
fstps
pop
ret
xor
xchg
or
add
bound
enter
pop
int3
imul
loop
imul
in
mov
or
arpl
sahf
jae
popa
cmp
or
pop
je
scas
mov
arpl
sub
je
jmp
int
in
xchg
stos
push
or
lods
mov
pop
frstpm(287
push
xlat
pop
jns
lahf
insb
sahf
inc
jae
or
in
mov
adc
or
add
shll
out
fwait
lret
jne
dec
sub
mov
dec
add
insl
or
loopne,pn
dec
dec
hlt
xorb
or
or
mov
out
adc
test
cmp
fxch
and
jle
je
push
jl
loopne
popf
mov
jnp
and
les
dec
cmpsb
flds
cmpsl
sarb
and
insl
aaa
shll
iret
xorb
jo
movsb
out
pop
gs
shll
inc
mov
add
cmp
cmp
aad
mov
addr16
sub
mov
popa
dec
ucomiss
pushf
hlt
ja
out
jge
andl
repz
xor
jg
in
or
aad
subl
jne
mov
push
rcr
int3
jmp
pop
xchg
outsb
push
pop
sub
pop
ficompl
mov
movsb
fistl
xor
test
push
inc
xor
ja
mov
cmp
xchg
add
addb
cmp
pop
das
scas
cmpsb
cli
cli
mov
mov
adc
nop
clc
add
out
dec
mov
pop
or
sbb
outsb
fstpl
stos
sub
aaa
outsl
sahf
mov
pusha
pusha
fisttpll
out
cmpl
cmpsb
pop
jecxz
ficoml
cmc
xchg
inc
cmp
push
iret
adc
xor
xchg
test
cmp
mov
lods
jae
pop
mov
jns
filds
loope
sub
out
cs
lret
or
cli
outsl
sbb
sbb
push
mov
rol
dec
repnz
fsubs
sbb
iret
loope
lods
outsl
adc
xchg
aam
xchg
add
mov
mov
lcall
daa
xchg
sbb
mov
fdivl
shlb
int
pop
xor
pop
push
cmp
fldcw
mov
ljmp
sbb
add
jecxz
and
into
mov
jns
subb
in
mov
mov
lods
mov
xchg
xchg
divb
xor
and
jne
sbb
popa
jecxz
or
in
sahf
or
push
jmp
mov
mov
mov
jo
mov
lret
ljmp
xor
push
lea
adc
pop
xor
mov
test
cmpsb
loopne
cmp
cmpsb
mov
mov
sbb
imul
insl
roll
and
test
loop
pusha
and
pop
xchg
jno
add
mov
inc
fstpl
inc
inc
pop
xor
popf
loop
aaa
and
cmpl
and
stos
sbb
jg
xchg
loope
ret
test
test
shlb
sub
mov
icebp
enter
cld
daa
aas
sti
xor
mov
gs
sbb
mov
lea
push
loopne
push
fs
add
sbb
inc
in
cs
or
clc
ret
lret
cld
inc
jnp
fists
mov
sub
fcmovnbe
aaa
inc
popa
sub
outsb
js
mov
sbb
cmp
mov
mov
xor
sbb
xchg
mov
dec
loop
call
push
pop
fsubs
inc
in
mov
inc
or
mov
mov
adcl
cmp
xor
cmp
push
pop
divl
inc
pop
jae
scas
jle
out
xor
sbb
cmc
push
inc
lea
or
cmpsl
lods
jb
pop
cmpsb
cmp
jmp
leave
sti
je
push
in
xchg
or
push
pop
fisubl
fisttpl
xor
movsl
mov
les
ret
dec
mov
or
pminub
add
les
sahf
push
pusha
cmp
jae
or
test
lock
insl
scas
mov
jbe
push
out
loope
enter
fcoml
jns
cwtl
mov
add
add
shlb
push
movsb
sub
imul
dec
adc
pop
fucom
vxorps
mov
lea
cmp
pop
xor
aam
inc
pop
sub
pop
dec
jb
sbb
xor
in
cmp
mov
loopne
cli
loope
inc
mov
and
inc
aaa
ret
aaa
ds
xchg
mov
js
sub
out
bound
or
fcoms
mov
mov
mov
cmp
inc
xor
lret
rcrl
movsb
in
scas
jmp
mov
xor
ljmp
out
push
movnti
ss
xor
popf
mov
ja
aad
aas
lods
repz
or
jge
dec
dec
or
push
xor
inc
jbe
nop
pop
jmp
scas
mov
mov
frstor
mov
xchg
out
or
test
xchg
or
push
js
fidivrl
ja
or
or
mov
push
push
pushf
push
mov
pop
subl
ret
push
jne,pn
lock
std
inc
mov
in
adc
pop
and
or
mov
push
pop
or
fsts
lea
sub
jb
sub
inc
lcall
and
stos
ret
cmc
inc
js
mulb
test
adc
pop
pusha
or
jb
push
sti
mov
cmpsl
or
jno
sbb
adc
out
inc
arpl
lock
sub
movsb
lock
and
fwait
cld
movsb
mov
jns
mov
stos
and
pop
mov
sbb
fstpt
rcrl
cmp
std
mov
pop
push
adc
cli
add
leave
test
or
stos
subl
cltd
push
pop
pop
and
inc
les
mov
fsts
cmpsl
stos
xor
movb
pusha
mov
cld
jne
and
lods
pop
daa
imul
mov
dec
push
ret
mov
ret
jae
daa
or
jmp
fwait
cmpsl
mov
inc
jnp
nop
cmpsb
outsl
cmp
lock
xlat
imul
es
das
mov
push
test
imul
mov
push
sub
or
scas
and
sub
or
sub
xor
insl
ffree
lcall
in
mov
cmp
cltd
neg
mov
mov
mov
inc
xchg
pop
adc
dec
add
pop
and
xchg
or
adc
addr16
subl
out
std
pop
insb
jl
pop
sbb
popa
mov
outsl
sub
leave
xor
mov
xor
rol
into
or
xchg
jo
fistpll
push
sti
mov
imul
dec
sahf
mov
cmpsb
jne
daa
aad
xchg
mov
add
in
test
fcompl
mov
jae
mov
or
mov
pop
adc
icebp
out
cmp
pop
or
movsb
jbe
data16
out
mov
fldt
repnz
out
movsl
jbe
cwtl
sti
scas
sub
mov
out
and
ret
movsl
jno
dec
mov
cli
pop
pusha
lret
test
out
aaa
xlat
ret
inc
pop
inc
or
xor
mov
push
aas
dec
stos
jb
in
jb
insl
xchg
shll
out
push
addr16
xor
and
sub
in
out
les
arpl
mov
cmc
inc
pushf
dec
out
or
cmpsl
out
repz
mov
cld
and
dec
and
or
mov
mov
cmp
in
sarb
mov
outsb
sub
sub
dec
push
and
jge
stc
sub
pop
loop
cld
outsl
jmp
ret
pop
movsl
sbb
lods
and
imul
lcall
push
push
mov
xchg
xchg
movsb
xor
xchg
xor
and
mov
mov
loope
pop
mov
aad
out
pop
add
mov
sbb
out
push
pop
xchg
push
mov
mov
xor
xor
insb
sti
stc
mov
add
sub
mov
bound
mov
lods
subb
adc
xchg
ja
mov
hlt
loope
mov
push
cmp
fcmovu
mov
mov
nop
or
popf
add
push
cmc
lcall
std
fdivl
test
sub
xchg
xor
mov
adc
add
fcmovnu
daa
or
movsb
rorl
cmpsb
push
cmpsl
sub
lea
mov
push
mov
mov
loope
pusha
push
add
in
xchg
adc
sbb
adc
leave
cld
sarb
clc
lcall
push
pop
sub
sarl
cmp
cmp
aad
icebp
dec
daa
lock
leave
sahf
xorl
inc
clc
es
aam
and
jb
insl
mov
and
dec
aaa
frstor
push
cmp
and
andb
adc
in
fsts
lea
push
fisubrs
enter
mov
orb
push
out
fidivrs
shrl
xor
xchg
in
out
repz
test
add
dec
jb
jo
sub
es
test
aam
insl
xor
flds
out
int3
push
cmp
add
fisubl
cmp
adc
lret
mov
ja
adc
and
andb
aam
add
aaa
adc
and
or
insb
inc
mov
icebp
cltd
cmp
cwtl
jge
inc
stos
xchg
jecxz
pop
in
lahf
jmp
xor
jge
std
cmp
daa
inc
inc
jp
xor
push
test
push
mov
in
repnz
inc
sub
out
popf
push
scas
mov
mov
into
jne
adc
outsl
push
mov
pop
movsb
adc
pop
insb
loopne
or
test
jl
xor
xlat
sbb
mov
sarl
insl
orl
mov
insb
inc
xchg
xchg
or
rclb
test
lea
into
mov
mov
mov
sub
inc
sbb
ffreep
dec
inc
popl
jne
mov
cmp
pop
pushf
shl
pop
push
push
inc
lret
aas
pushl
lods
lahf
stos
lock
push
jg
cmp
mov
dec
shlb
cmp
jl
jne
movaps
bound
lcall
in
xor
loope
mov
jnp
dec
addl
sahf
fstps
pop
cmp
sti
das
jbe
aas
shll
arpl
shrl
aad
adc
jge
aaa
pop
mov
xchg
daa
sahf
jb
aas
mov
insl
mov
dec
jle
mov
xorl
popa
es
sub
stc
shrl
inc
cmpsb
mov
cmpsl
add
lock
loop
push
add
shrb
push
or
add
cltd
mov
pop
xor
lret
lgs
dec
mov
push
call
aaa
sbb
or
xchg
push
shrb
xchg
shrb
jge
sbb
xchg
inc
fistps
pop
js
mov
movsb
inc
xor
adc
scas
aas
inc
insl
cmp
mov
gs
sbb
pavgw
mov
int
mov
mov
mov
cld
push
and
movsl
movsl
ja
mov
lods
outsb
rcrb
jle
add
ljmp
cmp
cli
push
lock
aas
rcr
pop
inc
ret
icebp
or
pop
sbb
jmp
pop
xorb
adc
mov
push
repz
mov
hlt
idiv
rorl
adc
push
dec
add
xor
out
divl
das
add
outsb
aas
dec
inc
cmp
pushf
sub
ds
stos
ja
or
or
xor
je
or
mov
iret
aam
rcrb
imul
push
fisubl
mov
sub
cmp
sbb
mov
hlt
xchg
xor
jecxz
sbb
mov
fisttpl
mov
aaa
xor
add
mov
sarl
cwtl
outsl
cltd
xor
mov
fistps
sbb
mov
in
and
mov
arpl
dec
mov
mov
ret
xchg
xchg
push
jle
js
jae,pn
out
ljmp
stos
mov
push
dec
jmp
push
dec
dec
pop
add
adc
les
jge
xchg
mov
and
sub
gs
stos
jle
insb
xlat
fsubl
cmp
push
insl
jge
loop
push
stos
ds
push
ret
cltd
jno
fsubrl
pusha
stos
jmp
leave
popf
shll
loopne
das
out
push
rcl
bound
sbb
jns
aad
cmp
push
stos
mov
xchg
mov
ret
sbb
adc
adc
xchg
inc
push
inc
jo
fwait
icebp
xchg
sbb
sbb
pop
shll
mov
mov
imul
stos
adc
insb
push
adc
inc
mov
or
lret
xchg
ret
add
pop
insl
xor
std
into
sub
call
jne
jle
out
add
test
cwtl
adc
andb
outsb
push
ss
add
in
fisubl
fidivl
sub
push
add
add
gs
scas
ss
xchg
ficoml
dec
dec
mov
pop
sub
xor
add
mov
sbb
in
push
loopne
clc
dec
rcr
mov
test
or
xorb
add
std
mov
and
xchg
cmp
mov
sbb
pop
hlt
pop
scas
mov
outsl
in
and
dec
dec
or
dec
in
fs
dec
lods
imul
ftst
adc
push
dec
in
notl
adc
clc
mov
xchg
and
js
and
call
subb
pop
mov
sbb
lods
fbstp
pop
in
cmp
andl
mov
jmp
into
push
inc
jnp
loopne
xchg
xor
fisttpl
mov
jo
xchg
adc
xchg
shrl
enter
mov
push
lcall
sbb
cmp
mov
mov
out
dec
lret
lret
mov
cmp
sub
push
dec
mov
hlt
mov
nop
add
stos
arpl
cltd
sbbl
outsl
je
es
sbb
inc
sbb
mov
insb
dec
in
jae
mov
push
push
and
xchg
jb
adc
add
stc
xor
sub
jne
cmp
cmp
sti
sti
mov
add
add
std
sbb
outsw
inc
dec
jb
cmp
rorl
push
pop
push
cmp
lret
std
mov
xor
rcr
lahf
into
sbb
mov
push
imul
ror
std
and
bound
mov
add
cmp
clc
cmpsb
mov
pop
in
pop
inc
mov
imul
test
in
aam
adc
xchg
mov
inc
sarl
loope
stos
ficoms
jg
out
cmp
fidivrl
movsl
lock
add
in
dec
adc
xlat
in
mov
mov
fs
jae
arpl
cwtl
ja
stc
imul
push
adc
int
pushf
and
movsl
dec
pop
mov
js
notl
div
or
sbb
add
rcr
shrb
orl
push
sbb
ret
adc
adc
das
insl
fildl
inc
cmp
xchg
outsb
dec
enter
mov
test
cli
outsb
movsl
xchg
jecxz
jecxz
sub
ss
jl
push
sbb
ret
xor
jmp
sbbb
and
out
or
mov
out
shrb
or
xchg
fsubrs
mov
push
push
bound
int3
sbb
in
push
mov
sub
inc
shlb
mov
stc
sbb
std
mov
imul
xchg
fnstenv
mov
mov
jnp
mov
ljmp
mov
jg
sti
mov
or
jp
add
adc
insl
push
out
add
adc
dec
test
mov
push
movsl
xchg
mov
mov
jg
lcall
loopne
inc
in
sar
xchg
push
js
xchg
popa
cli
mov
fisubrs
jb
mov
push
xchg
mov
pop
mov
jo
and
mov
in
das
test
ficomps
testb
mov
jp
lahf
cld
jg
mov
fcompl
and
rcl
or
jmp
sub
push
lcall
adc
adc
and
fists
cmp
jnp
fwait
pop
add
jl
xchg
mov
xor
rcll
pop
iret
pop
mov
mov
and
fbld
push
pop
fbstp
popf
mov
mov
out
ret
call
mov
fs
fbstp
add
call
xchg
das
outsb
repnz
sahf
and
stos
mov
call
jle
out
add
and
loope
gs
aas
push
mov
cmpsb
aad
iret
lret
mov
pop
xchg
imul
loopne
fdivrl
rorl
aas
xor
outsl
xor
add
in
adc
arpl
cmp
xchg
cmp
push
pop
clc
push
xchg
and
mov
icebp
loopne
in
pushf
push
xlat
pushf
gs
sub
int3
shrb
enter
mov
inc
sub
adc
mov
fwait
lea
lods
cld
mov
mov
push
iret
xor
adcb
shlb
push
xor
in
cmpsb
mov
adc
mov
fadds
push
negb
cmpsb
xchg
or
or
ror
xor
xchg
mov
in
jg
pop
xchg
fnsave
nop
fs
pop
loopne
jmp
pusha
popl
out
adc
sub
fiaddl
inc
clc
xchg
mov
cltd
mov
sti
dec
xchg
inc
adcl
or
push
pop
push
rcrl
sti
mov
mov
add
mov
pop
ret
pop
xor
sahf
mov
shr
push
pop
adc
inc
mov
stc
sbb
stc
push
lahf
sbb
sub
mov
sbb
int3
jle
xchg
test
sbb
lods
pop
push
je
inc
pop
or
mov
lret
ficoml
sub
imul
jbe
mov
sub
imulb
into
mov
test
mov
mov
call
loope
mov
xchg
rcrb
call
aaa
mov
sbb
sbb
pop
pop
movzwl
nop
lods
les
and
xor
sbb
lret
js
iret
into
ljmp
scas
pop
push
test
jbe
sar
xor
nop
sub
shrl
sbb
inc
cmp
pushf
xor
movsl
arpl
and
push
mov
or
xchg
ds
ret
call
mov
jne
test
pop
xlat
inc
fidivrl
push
test
pop
mov
adc
cli
push
pop
in
add
cmp
push
mov
lods
sarl
xchg
push
pop
lret
lods
xor
jno
lahf
fnstsw
mov
lahf
inc
push
mov
test
inc
pusha
dec
jp
xchg
aaa
sbb
lret
iret
adc
outsl
fdivrl
and
mov
sbb
or
inc
pop
dec
nop
mov
fwait
insb
mov
ss
dec
jecxz
jp
dec
xchg
adc
shrl
lcall
fisubs
imul
push
push
and
ss
nop
inc
adc
cmp
inc
in
rolb
imul
mov
repz
xchg
xor
lcall
fdivl
ret
popf
inc
mov
outsb
into
jo
push
sar
or
mov
xor
or
sub
dec
scas
stos
repz
flds
jg
push
loope
pop
xchg
jmp
inc
inc
mov
sbb
jge
cmpsl
add
xor
pop
repz
mov
sub
push
inc
jno
fwait
ljmp
mov
or
ret
cld
lods
dec
xlat
dec
xchg
or
sbb
stos
hlt
les
pop
mov
stos
and
stos
in
jle
pop
mov
push
mov
aas
jb
add
mov
mov
and
sbb
add
les
scas
mov
sbb
mov
andb
sahf
pop
xchg
and
xchg
mov
dec
scas
sbb
es
jg
jmp
or
les
das
mov
setb
jnp
pop
loop
es
xor
ret
cmp
fidivs
xchg
test
jg
imul
mov
shll
dec
ljmp
subb
out
adc
jmp
lock
sub
jle
add
bound
jae
cmp
mov
fs
mov
xor
jp
dec
sub
jecxz
iret
jb
inc
imul
lods
dec
and
adc
adc
fadd
int3
lods
cmc
mov
arpl
shr
mov
cs
sahf
mov
cltd
mov
scas
sbb
cwtl
std
in
xchg
or
iret
push
cmc
xlat
mov
mov
pop
xchg
inc
mov
mov
mov
cmp
pop
dec
ds
or
aas
dec
fcoml
fstps
out
sub
mov
out
es
call
pop
and
repz
int
cmc
xchg
nop
gs
pusha
ret
pop
loop
hlt
shl
dec
mov
sub
aam
inc
mov
lret
es
adc
das
lock
xchg
sbb
int
mov
or
daa
push
jo
das
xchg
and
popa
push
sbb
push
and
sahf
inc
aaa
mov
xor
mov
adc
xor
jg
movsl
pop
pop
fcomps
loope
loope
aaa
aas
mov
push
mov
sub
or
mov
negb
cmp
mov
xchg
mov
shll
and
xor
push
rorb
ficoms
call
xor
aam
jae
mov
push
lea
cld
xchg
mov
out
leave
enter
mov
test
xor
sbb
lahf
push
outsb
andb
sbb
xor
sbb
out
cwtl
pop
pop
and
and
or
movl
adc
testl
xlat
xor
stc
mov
mov
insb
cltd
sub
and
popl
mov
mov
mov
push
add
lock
js
xor
push
pop
out
or
xchg
xor
jge
int
cmp
xor
stos
add
and
mov
inc
adc
ficoms
mov
sbbl
push
inc
pop
mov
daa
outsb
push
inc
in
jmp
scas
jle
cmp
mov
jmp
lcall
pushf
cmp
vaddpd
ja
pop
jg
or
push
mov
sub
ret
dec
popa
ret
push
sbb
xor
push
lods
pop
mov
lds
xor
or
movsb
imul
and
or
jl
fildll
testl
xor
xchg
dec
mov
mov
daa
ret
aas
sahf
hlt
test
cld
xchg
repz
add
inc
loopne
aam
xor
dec
cltd
lea
mov
std
xor
out
inc
gs
mov
in
and
fidivrs
and
pop
cmp
daa
cli
cmp
addb
lods
leave
push
out
icebp
in
inc
push
testl
addps
xchg
hlt
call
ss
jnp
mov
decl
mov
cli
pop
ror
imull
pop
outsb
insl
insl
loop
stos
ds
loope
push
int
ja
add
adc
mov
out
test
xchg
scas
dec
jno
push
sub
jp
mov
jecxz
mov
std
jo
jecxz
fwait
push
dec
icebp
fbld
mov
pop
mov
jl
xor
or
outsb
xchg
shlb
adc
xor
push
data16
insb
dec
push
imulb
dec
dec
cmpsl
cmp
adc
shl
iret
sbb
sbb
cmp
or
ljmp
adc
rclb
pop
stos
into
push
movsb
les
stos
fld
add
cmp
daa
das
lea
or
mov
jge
mov
pop
jo
push
cmc
sub
loopne
mov
push
daa
and
add
cmp
sti
out
scas
cmp
loopne
sbb
dec
and
repz
dec
and
cs
xchg
xchg
xchg
inc
sarl
out
xor
aad
inc
js
scas
mov
fs
jne
push
sbb
test
bound
sub
cmp
movsl
stos
inc
and
pop
push
sbb
movsb
cwtl
notl
shr
inc
jp
push
or
push
loopne
loop
loopne
inc
pushf
lds
or
call
ss
cld
call
sbb
mov
sub
idiv
dec
push
push
and
in
push
bound
out
clc
clc
stc
mov
inc
push
jb
lods
out
sub
dec
daa
out
daa
jns
mov
pop
mov
popf
test
pusha
outsl
mov
and
roll
mov
jb
jmp
jge
mull
ficompl
adc
jg
pushf
xor
sub
in
and
adc
cmp
repnz
jb
fdivp
xor
das
cs
cld
dec
stos
push
mov
adc
sarb
ffreep
xlat
mov
push
sbb
mov
xchg
jns
pop
jnp
mov
and
inc
divl
dec
adc
push
mov
sbb
push
push
ja
mov
mov
inc
movsl
pop
mov
insl
mov
jge
cmpb
and
sub
jbe
sub
out
and
dec
xchg
popf
sub
popa
pop
cmp
int
mov
scas
and
adc
jae
outsb
movsl
mov
lret
bound
sbb
int3
inc
pop
mov
andb
lcall
sbb
pop
inc
test
adcb
inc
mov
adc
ja
lret
arpl
add
ja
xor
imulb
imul
mov
or
mov
xchg
jne
daa
in
jge
push
fists
bound
ss
sub
aaa
mov
int3
mov
mov
movsl
push
repnz
in
insb
lret
sbb
stos
stc
rcll
inc
mov
pop
arpl
xchg
adcb
pop
dec
jl
xchg
xor
xchg
mov
loopne
jns
sub
mov
jnp
push
inc
pop
add
hlt
xchg
or
repz
mov
pop
into
cmc
and
in
xchg
outsb
inc
test
pop
insb
sub
mov
jb
lahf
inc
leave
mov
pop
aaa
mov
xor
jmp
loopne
xchg
loope
adc
faddp
sbb
sub
outsb
or
jae
gs
sub
mov
test
movsb
adc
ja
xor
das
push
push
lcall
sbb
cmp
clc
in
mov
and
push
pop
and
add
add
xor
fisubrl
int3
rolb
icebp
xor
ds
arpl
aam
mov
xor
mov
nop
movntps
pop
cwtl
jle
mov
sbb
cmp
jecxz
ss
fstpt
lea
jp
jo
or
imul
out
xor
mov
cmp
stos
je
xchg
pop
mov
stc
outsb
adc
roll
fld
inc
sbb
sub
pop
out
jno
push
sbb
xor
and
aad
cmpsb
cmp
fdiv
inc
cltd
push
adc
loopne
inc
mov
xor
mov
fs
adc
mov
shll
mov
inc
bound
cmpsl
sahf
xlat
shll
mov
mov
pusha
add
shr
insl
xchg
jbe
push
data16
xchg
jg
pop
ja
mov
cmp
in
insb
mov
pop
int
repz
jmp
xor
dec
dec
out
push
jmp
jae
jl
cmpsl
dec
pop
cs
mov
cmp
fimuls
loop
fldcw
mov
mov
out
xchg
sbb
push
cmpsl
sub
jb
xchg
psrlq
adc
xchg
int3
jl
notb
pop
cmpsl
pushf
or
movb
mov
insl
faddl
stos
mov
mov
ja
sbb
lods
fwait
lods
iret
repz
cmpsl
and
or
ljmp
jae
dec
sub
mov
pop
pop
dec
cmp
popa
ret
xlat
mov
out
aad
adcl
cmc
mov
imul
cmp
stos
or
dec
aas
lcall
test
dec
ljmp
dec
xchg
int
out
mov
pushf
rcll
cmpsl
outsb
and
pop
dec
pop
jne
repnz
xchg
cmp
jnp
cmpsb
dec
inc
mov
pop
jg
xor
cmp
adcl
xchg
jl
xchg
aas
or
in
out
movsb
and
mov
cmc
inc
pop
test
shll
mov
sub
pushf
push
pop
popf
imul
adcl
xchg
mov
cmp
js
repnz
pop
repnz
loop
cmp
cs
cli
cltd
ficomps
roll
inc
dec
sbb
dec
dec
loop
gs
outsb
xor
fmuls
rol
test
push
into
jnp
out
mov
mov
icebp
xchg
pop
add
cwtl
or
jg,pt
out
lods
and
jecxz
pop
stos
jp
jecxz
push
in
jg
cli
pop
mov
in
mov
xor
adc
push
out
shrl
xor
or
xor
popf
jo
inc
fbstp
mov
mov
mov
and
int3
popl
fdivrs
pushl
sti
cmp
xor
ljmp
cmp
push
mov
mov
cli
cwtl
ret
dec
jg
and
lahf
rcll
shl
dec
test
adc
mov
mov
out
sbb
cmp
in
mov
dec
insl
scas
in
xor
mov
insl
jecxz
ds
cmpl
dec
fsave
fisubrs
insb
sahf
xchg
mov
jge
sbb
pop
js
adc
popf
addl
nop
pusha
pop
jp
sbb
leave
inc
mov
mov
std
rorl
movsb
push
and
push
sub
ficomps
imul
in
shrb
loope
orl
mov
pop
inc
jge
or
shrb
or
imul
and
das
lock
in
je
lcall
mov
sbb
mov
cltd
push
pop
ret
rcrl
out
pop
nop
and
sbb
ss
iret
test
in
test
and
mov
icebp
movq
add
jnp
jnp
sub
lcall
movsl
loopne
dec
fists
push
les
mov
and
rolb
adc
jge
mov
ret
cmp
jl
rolb
and
sbb
add
inc
or
or
sbb
add
les
inc
fldlg2
jbe
stc
je
sub
andb
push
and
sub
mov
fisttpll
aaa
pop
xchg
fdiv
and
add
adc
aaa
push
sub
sbb
out
push
push
xorl
xor
adc
or
cmp
imul
mov
push
jge
inc
ds
clc
stos
or
xchg
mov
jb
dec
popf
inc
clc
stc
mov
xchg
outsb
mov
movsl
cmp
scas
or
dec
dec
lock
and
sahf
fstpl
stos
inc
bound
pop
movsl
adc
xchg
scas
pop
leave
pop
adc
sub
and
xchg
ljmp
mov
adc
sub
xchg
fdivs
repnz
jb
jle
dec
cmp
popf
xor
mov
or
fld
cmp
push
sti
cmp
mov
sub
mov
pop
lock
mov
insl
divps
pop
in
mov
cmpb
push
out
mov
popl
loop
or
jno
outsl
js
mov
movsb
pushf
fxch
cs
fs
lods
iret
push
add
outsb
shrl
test
jecxz
xchg
jge
push
jmp
insl
adcb
shrb
jnp
push
push
inc
jne
iret
out
or
mov
inc
add
ja
cmpb
ljmp
clc
xchg
mov
jmp
ret
or
inc
sbb
lret
push
popf
adc
lcall
inc
andl
dec
and
inc
sbb
repnz
fnsave
jg
mov
xchg
sbb
ret
repnz
stos
jbe
mov
pushf
ds
mov
into
outsl
cmp
sub
xor
pop
lods
cmp
iret
xor
fldcw
mov
or
lock
mov
insb
push
mov
and
cmp
jp
mov
out
and
sub
mov
mov
neg
pop
xlat
mov
sub
mov
es
das
mov
rcrb
and
inc
and
pop
mov
pop
sub
aam
int3
stos
iret
loope
push
enter
loop
jb
pop
shll
lahf
fcoms
frstor
pop
fimuls
outsb
sbb
addr16
mov
xchg
mov
cmc
lret
push
mov
lahf
lock
int
ret
and
or
mov
dec
push
fcmovu
xchg
sbb
and
or
movsl
add
call
test
and
movsb
jg
insb
push
jmp
or
add
xlat
sbb
stc
mov
and
popf
out
xor
fucom
sub
inc
xchg
loop
mov
mov
and
cmp
sbb
mov
call
mov
push
pop
jbe
pop
test
shrb
out
xchg
jp
and
sbb
mov
and
sbb
mov
jb
cmp
or
sub
pminsw
cmc
xchg
cmpsb
into
mov
xor
pop
cmp
and
dec
jne
xlat
mov
fdivrs
in
decb
dec
xchg
ss
sbb
add
lods
jnp
jne
js
out
mov
in
ret
test
cmp
addr16
inc
adc
fwait
xorb
pop
pop
xchg
leave
test
and
jb
aaa
pop
dec
hlt
xor
cli
rolb
ljmp
ljmp
daa
aad
mov
xchg
loope
test
or
leave
xchg
adc
repz
sar
jg
stos
push
mov
loop
lods
lcall
mov
ret
sbb
or
insb
in
jnp
shrb
mov
push
pop
in
push
sub
cltd
cld
call
es
fistpl
xor
jno
mov
mov
lea
rcll
xadd
push
insl
adc
push
andl
add
scas
cmpsl
loop
pusha
ja
fxam
fdivs
jns
test
daa
pop
cld
ja
xchg
xor
clc
sahf
push
lds
push
scas
pop
bound
push
mov
pop
cmc
js
hlt
loopne,pt
fcmove
pop
push
fwait
into
mov
movsl
mov
rolb
adcl
cmp
inc
test
sub
cmp
js
icebp
repz
mov
in
xchg
fs
imul
mov
jecxz
add
arpl
adc
mov
fnstsw
push
movsl
jg
das
mov
mov
add
add
shr
ret
fisubrl
gs
xor
and
push
sub
xlat
pop
dec
push
push
rorl
in
xchg
mov
ja
push
mov
in
push
push
in
mov
mov
cld
jns
fwait
jle
loopne
addr16
cmpsl
bound
or
jno
xchg
mov
dec
sub
sahf
xlat
mov
fsubl
mov
flds
or
and
sub
mov
jp
dec
and
xor
push
add
imul
mov
xchg
jns
and
iret
jno
lods
shrl
cmp
aad
push
push
mov
loope
sbb
arpl
mov
xchg
jge
out
xchg
fwait
jmp
or
mov
scas
sbb
loop
test
ja
pop
bound
sub
fs
ja
stos
and
dec
out
mov
ljmp
jne
cld
lock
pop
in
dec
dec
mov
std
shll
xchg
sub
pushf
mov
sub
cltd
sbb
xchg
adc
test
xchg
outsl
xchg
adc
or
rolb
add
cmpsb
xchg
and
arpl
push
pop
cli
cmc
daa
add
fists
jb
jl
jb
in
faddl
push
rcrl
fsubrs
xor
aad
mov
into
movl
add
clc
mov
adc
jge
cmp
jns
mov
hlt
rorl
and
in
hlt
dec
pop
xchg
mul
adc
dec
scas
aad
xchg
lahf
inc
mov
jae
fiaddl
scas
frstor
jo
stos
jle
mov
lea
aad
xchg
sbb
fwait
enter
in
adc
insl
jno
jmp
ror
icebp
popa
inc
xor
add
xor
sbb
or
jmp
icebp
fs
sub
cmpsb
sub
pop
mov
icebp
stc
ja
xor
out
xchg
popa
std
mov
test
sbb
jns
rorb
mov
out
cmpsb
xchg
neg
pusha
ljmp
push
cmp
jo
add
pop
sub
inc
iret
jecxz
icebp
jae
lret
xchg
pop
xchg
push
mov
outsl
cmp
inc
adc
or
mov
mov
ja
sub
xchg
test
push
mov
and
sahf
leave
leave
mov
mov
mov
into
shll
loopne
rcr
pop
push
adc
mov
and
in
clc
push
pushl
push
cmpsb
xor
lret
xchg
mov
jbe
fimuls
and
mov
cli
xchg
loop
dec
adc
ja
shlb
cmp
loopne
out
xor
mov
or
inc
mov
mov
fwait
xor
lret
faddl
cli
adc
and
fiadds
sub
rcr
mov
pop
cwtl
test
js
lods
cmc
dec
js
test
mov
fiadds
push
ss
jno
and
jb
leave
cmpsl
mov
lcall
sbb
xor
xor
imul
movsb
sub
cli
movsl
gs
ret
or
xchg
mov
cltd
cltd
shll
fcompl
shl
mov
mov
rcll
jbe
stos
test
rcrl
pop
cmpsl
add
adc
xor
jb
mov
js
xor
xchg
jg
and
in
fs
out
pushf
insl
insl
jne
loopne
lods
loope
jmp
inc
test
pusha
pusha
lret
sti
adc
lret
mov
xor
push
xchg
int3
lret
data16
lcall
stc
pop
cmpsb
out
jbe
jbe
sahf
cwtl
movsb
aam
in
and
xor
dec
mov
icebp
jb
or
sub
mov
xor
mov
ss
push
fisubrl
adc
sysret
mov
insb
jno
daa
fcmovb
cli
fwait
pop
cmp
test
adc
push
mov
in
ss
adc
fcmove
sub
add
lods
push
shlb
jl
mov
inc
mov
dec
xorb
sub
rolb
jns
jge
imul
sbb
scas
mov
fidivrl
push
rdmsr
imul
dec
fnsave
adc
pop
mov
scas
loop
into
fistpll
js
or
jmp
jno
jmp
nop
push
in
xchg
xchg
lcall
sub
out
fsub
rolb
xor
xor
cmp
lret
ljmp
cmpsl
push
push
bound
or
mov
mov
xor
and
xlat
outsl
cmp
dec
add
fdiv
bound
push
pop
pop
int
xlat
or
jae
pop
in
add
in
inc
imul
sub
arpl
addr16
lret
inc
push
mov
push
repz
mov
imul
imul
imulb
data16
adc
scas
mov
fbld
in
xchg
shrl
and
push
out
sbb
sarb
adc
ret
lds
xchg
ret
int
dec
adc
hlt
fdivl
outsb
push
scas
jbe
jae
fnstsw
mov
xchg
fdivrs
out
daa
push
jp
call
xchg
dec
xchg
pop
andl
mov
push
int
mov
mov
adc
sub
cmpsl
sbbl
push
mov
cmpsb
std
ja
sti
bound
fiaddl
mov
incl
mov
dec
mov
arpl
cmpsb
adc
or
test
push
push
fwait
push
arpl
adcl
dec
push
xchg
jp
dec
and
mov
xchg
shll
test
jbe
movsb
sbbb
mov
xchg
jg
scas
mov
in
mov
ljmp
mov
pop
addr16
mov
push
ficompl
add
or
je
sub
ljmp
rol
lret
and
push
push
lds
jbe
into
adcl
insl
add
popa
pop
jmp
aam
test
xchg
insl
and
rcr
out
sub
pusha
divl
sbb
shrl
inc
xchg
inc
cmp
mov
sub
fmuls
popa
sti
pop
orl
xchg
jecxz
jno
inc
jl
mov
and
jg
push
inc
jne
test
mov
mov
into
imul
mov
and
pushf
rcrb
fldcw
aas
cmpsb
in
int3
daa
sub
push
or
and
inc
int3
sbb
fsubrp
mov
rclb
pop
sbb
jo
mov
rorw
repnz
cmp
xchg
xchg
add
push
xchg
cmp
jnp
inc
mov
stc
repz
mov
popl
mov
bound
push
out
jmp
je
ss
or
or
fdivrl
push
test
mov
xor
and
mov
adc
data16
xchg
mov
out
jl
mov
adc
cmp
mov
pop
pop
and
repz
push
rcl
mov
inc
push
in
adc
sbb
cmp
scas
pop
icebp
cmp
int3
lret
mov
add
imul
mov
xchg
add
in
repnz
inc
pop
call
xchg
rcrl
sbb
push
sub
lret
xchg
daa
ja
ret
add
jp
jae
push
lods
sub
into
dec
push
mov
xor
movsl
dec
push
push
fmull
jle
nop
rdpmc
cmp
ret
rorb
mov
mov
adc
fwait
adc
jae
icebp
mov
cmpsl
push
inc
lcall
sub
push
add
in
add
or
xor
call
mov
push
stc
adc
pop
jne
jbe
jecxz
aas
sub
insb
pop
leave
lahf
insl
pop
adc
jmp
dec
inc
fadd
cld
sbb
jbe
jle
mov
inc
inc
push
mov
shr
push
jl
jecxz
mov
testl
pop
sub
call
sub
fiaddl
out
push
sbb
not
add
ret
hlt
pop
push
shlb
dec
or
pop
mov
push
mov
cwtl
ljmp
sub
jle
lea
mov
fimuls
mov
std
push
jbe
pop
xchg
lods
mov
xor
es
sbb
mov
mov
jb
call
sub
add
addr16
jge
xor
mov
and
ds
push
loopne
cmp
dec
cmc
arpl
shr
cmp
add
mov
or
scas
fsub
xor
push
push
adc
inc
jae
or
aaa
adc
mov
mov
jg
andl
pop
ds
loopne
cmp
xchg
cmp
dec
lahf
mov
jg
jno
sbb
or
daa
adc
push
dec
mov
adc
test
je
int3
ds
mov
les
xchg
shl
mov
pushw
fisubrl
jb
xchg
lret
jle
and
into
cmpsb
inc
mov
jmp
mov
pushf
push
sub
bound
fbld
jb
or
jg
insl
rorb
pop
pop
inc
stos
adc
lea
sbb
jae
out
test
adc
movsl
mov
jg
dec
dec
xchg
mov
popa
rcr
outsb
adc
push
push
in
push
mov
mov
jne
mov
hlt
arpl
gs
adc
mov
push
and
jne
jbe
in
aad
push
dec
ficoml
ret
test
cmp
jae
loopne
dec
xchg
mov
dec
jns
push
cmp
push
cmp
mov
cmp
shrl
out
xchg
xor
adc
call
mov
mov
cli
xor
mov
jle
in
sbb
pusha
xor
out
rcl
fistpll
add
popa
and
and
popf
je
aam
sbb
mov
add
jle
jmp
sub
push
es
dec
push
je
lock
sub
fcmovnbe
mov
in
jp
call
dec
pop
jb
fadds
add
aad
sub
int3
and
fiaddl
mov
sub
scas
adc
sti
adc
in
add
mov
xor
jecxz
mov
add
xchg
mov
stos
ss
cmc
dec
push
jp
jl
or
and
add
mov
in
je
jne
cmp
pop
lret
fstps
xlat
dec
out
dec
mov
pop
in
dec
adc
mov
cmp
mul
add
lret
push
lret
std
xchg
aas
adc
icebp
cli
dec
inc
push
push
sub
sbb
adc
call
stc
inc
sarb
cmpsl
roll
dec
add
loop
cmp
data16
and
or
sub
out
xchg
pusha
fbld
push
xor
lock
cmpw
jecxz
jne
xchg
mov
xchg
adc
cmp
es
jns
jo
xchg
xchg
push
jne
sbb
out
add
sub
push
insb
arpl
mov
pusha
mov
test
jp
xor
or
repnz
push
outsb
push
fwait
call
ss
loopne
in
pop
push
and
ds
test
lcall
and
stos
push
sbb
test
inc
outsb
pop
je
int
out
sub
bnd
cmpsl
push
les
pushf
imull
shll
cwtl
int3
sti
movsl
ljmp
jecxz
mov
movsl
leave
sbb
inc
jp
testb
ror
jnp
inc
cmp
jecxz
das
inc
sbb
lds
stos
mov
xchg
arpl
in
cmc
add
pop
xchg
ljmp
adc
mov
int3
jmp
inc
mov
mov
xor
mov
push
adc
out
js
sbb
pop
loop
and
mov
fsubs
flds
cli
rolb
adc
jge
jae
push
out
dec
mov
daa
repz
fucom
movsl
test
mov
popa
pop
fs
mov
insb
daa
dec
std
push
popl
and
mov
or
stc
push
incb
xchg
xchg
loope
or
test
test
sub
jmp
loope
inc
cmp
je
jmp
inc
ja
jmp
fwait
scas
loopne
cltd
sub
sbb
pop
es
ja
test
movsb
ja
test
enter
cltd
inc
mov
into
jbe
mov
aad
ja
lock
jo
imul
cmp
sbb
dec
jl
adc
cmp
pop
ficoml
adcl
arpl
loopne
jl
and
enter
jnp
lret
lods
add
push
mov
sub
jmp
xor
aaa
push
xchg
int
mov
sub
xorl
dec
fldt
fs
imul
fstps
fsts
addl
ds
mov
cmp
push
scas
inc
aam
loope
aaa
movsl
adcb
xlat
lods
mov
jmp
hlt
xor
cltd
mov
test
loop
ljmp
aad
ds
or
shrl
xor
in
dec
sbb
jo
sbb
dec
xchg
mov
shlb
mov
pop
test
sub
loope
pop
inc
cmp
aaa
sahf
divl
cmpsb
movsb
mov
mov
jp
imul
out
xchg
lret
dec
or
push
add
jnp
pushf
xor
or
fstpt
out
and
mov
mov
mov
push
jmp
adc
das
inc
loopne
xchg
inc
push
outsl
imul
ja
pop
inc
test
jbe
sbb
pop
aas
je
fldenv
xchg
jne
sub
pop
xchg
xor
adc
xchg
sub
lahf
ja
bound
cmp
jbe
out
mov
fdivs
data16
xchg
movsb
sbb
sahf
or
lods
inc
add
jg
test
movsl
mov
fs
in
pop
je
in
sub
movsb
dec
xor
cld
inc
lcall
sub
ffree
lock
movsb
pop
icebp
jecxz
das
dec
and
pop
pop
shrl
fidivrs
fcompl
mov
lock
insb
jge
mov
mov
xchg
dec
adc
out
lods
mov
jl
mov
mov
cltd
lock
aad
or
jecxz
lea
jnp
or
xor
out
pop
insl
lock
dec
mov
loopne
pop
fidivs
pop
cwtl
jp
pusha
push
jge
add
inc
push
lret
dec
nop
mov
dec
lods
cmp
adc
call
aad
jbe
daa
mov
lods
add
dec
mov
push
imul
push
sbb
fnstsw
xchg
mov
cmp
push
xor
mov
addr16
and
outsl
inc
or
je
cmpsb
mov
nop
icebp
inc
les
mov
repz
je
cmp
jb
mov
pop
mov
push
mov
shll
jno
dec
jl
ficomps
xor
movsb
sbb
pop
push
inc
hlt
inc
hlt
adc
cmpsl
cmc
rcrb
lret
dec
add
add
out
repz
jae
negl
repnz
xchg
jp
lret
add
add
andb
mov
push
fdivl
outsl
test
and
jno
fnstcw
test
cmp
jmp
jecxz
mov
sbb
outsl
push
inc
dec
mov
cmp
adc
mov
les
xor
test
or
xchg
arpl
pop
mov
cwtl
pop
stc
aas
aad
aad
cwtl
dec
add
cmp
jge
inc
scas
enter
lret
xchg
pop
int
xchg
jb
fsts
mov
cvtps2pd
shll
popf
std
dec
rsm
iret
stos
mov
jb
aas
ret
vmovapd
movsl
je
fistps
pop
enter
aaa
mov
ret
jnp
movsb
adc
aad
cmpsb
pop
xchg
loopne
push
sub
sbb
addb
imul
add
sub
test
mov
mov
aam
pop
xchg
jo
adc
cld
sbb
es
sahf
sub
jnp
pop
sbbl
adc
ljmp
inc
loop
ret
mov
cmc
mov
sub
add
popa
jne
sbb
mov
out
cmp
repnz
hlt
jle
mov
xchg
xor
outsl
js
sbb
jmp
aad
icebp
rorl
sub
xrelease
shll
inc
loop
mov
stc
jns
pop
dec
insb
imulb
add
js
in
dec
rol
sbb
dec
mov
mov
push
pop
shlb
mov
mov
cs
lods
cmpsl
mov
xchg
add
sahf
fimull
push
aad
cli
add
cmp
mov
sti
aad
out
dec
movsl
mov
pop
inc
dec
mov
pop
dec
jne
mov
xor
mov
loope
out
push
cmpsb
adc
dec
jmp
push
pop
jmpw
rolb
pop
inc
adc
fs
std
jecxz
ljmp
aas
sub
outsl
rcl
jnp
cld
sti
cmp
lahf
and
imul
push
jge
fldenv
imul
incb
icebp
mov
ret
push
imul
and
fstpt
cltd
sahf
jle
icebp
cmp
fwait
mov
inc
pop
mov
xchg
mov
add
xchg
pop
sub
xchg
mov
mov
jb
mov
js
fwait
addb
adc
test
mov
sbb
fidivl
inc
mov
fsubs
xchg
mov
sbb
call
ljmp
out
jle
test
xchg
adc
or
pop
dec
or
jb
dec
popa
xchg
mov
sub
pusha
sub
xchg
inc
loope
push
mov
pop
jne
dec
scas
sahf
fcoml
scas
inc
iret
pop
iret
pusha
insl
dec
pop
cmp
loopne
jle
fiaddl
fmulp
cmpb
jb
and
adc
cmp
aam
mov
sub
pop
stc
jle
imul
xchg
es
cli
mov
lds
fcoml
add
mov
xchg
scas
mov
loop
fistl
into
push
loopne
dec
mov
pop
int
jns
divps
fidivrs
mov
xchg
sub
iret
leave
or
sbb
and
jns
dec
mov
dec
js
scas
pushf
shlb
mov
enter
or
repz
jb
int3
pop
sbb
fs
jl
bswap
sti
ja
adc
scas
in
xlat
ds
fldl
sahf
mov
xor
xor
pop
ja
mov
in
cmpsl
cmp
mov
out
add
jle
xchg
mov
sbb
or
das
arpl
inc
mov
sbb
push
cmc
add
push
hlt
std
xor
xchg
stc
daa
sbb
dec
out
icebp
aaa
sub
sub
rol
pop
dec
mov
sbb
xlat
jecxz
fcompl
ja
js
lock
jo
and
rcl
or
jne
dec
aaa
loopne
lock
inc
cmp
fs
add
sti
insl
call
pop
inc
mov
dec
dec
cmp
daa
mov
shlb
test
sti
jmp
loope
add
pusha
aas
fisttps
and
pop
loop
in
add
mov
add
cmp
add
lahf
lods
subl
nop
and
fistpl
dec
gs
fmuls
sbb
in
mov
ret
lret
clc
cmpsl
es
lahf
lret
and
inc
lahf
pusha
mov
xor
fwait
push
rclb
mov
lds
lea
addl
cmpsb
push
xchg
and
int
popf
adc
call
lahf
mov
cwtl
push
xchg
push
sbb
fldenv
sub
xchg
add
in
push
in
sub
xchg
inc
in
add
mov
out
xchg
js
jecxz
pop
cmp
jmp
iret
jns
sbb
push
jb
int3
lock
bound
stc
loopne
in
loopne
mov
pop
insb
movsl
mov
add
add
arpl
inc
cmp
inc
add
mov
mov
xor
int3
jmp
and
inc
mov
push
sub
or
sbb
dec
cwtl
lcall
inc
sbb
ret
call
inc
fcompl
je
jae
lcall
or
rolb
xor
xchg
test
mov
cs
pop
stos
mov
nop
cmp
xchg
out
pop
cmp
sbb
and
mov
cli
lea
test
lret
je
add
sub
divb
out
orl
int3
add
and
clc
dec
sub
daa
inc
cmp
mov
dec
aaa
adcb
ret
into
xchg
add
es
lcall
mov
adc
cmp
popf
sbb
and
adc
and
mov
inc
inc
jb
pop
xchg
outsb
add
push
add
iret
andb
testb
mov
xor
mov
and
mov
mov
xor
sub
add
jb
repnz
xchg
cltd
sbb
les
jmp
xor
xor
int3
cmp
cmpsl
sar
pop
das
popf
dec
sbb
test
fisubl
test
sbb
std
bound
cld
in
aam
sbb
mov
fdivs
inc
in
negb
push
out
or
sub
fsubl
mov
mov
xchg
lahf
pop
inc
or
mov
fistl
repnz
cmp
fcmovbe
xlat
imul
insb
xchg
sahf
ss
inc
mov
call
mov
cmp
fucomp
in
cmc
sub
ret
or
xor
aad
xchg
pop
xchg
loopne
popf
add
sub
or
mov
jecxz
ss
mov
xor
stos
aaa
inc
mov
cltd
sahf
dec
adc
mov
mov
and
cwtl
clc
popa
mov
add
out
pop
lock
out
ret
int
flds
mov
mov
or
cmpsl
repz
sbb
mov
popa
lock
inc
andl
mov
je
add
lret
mov
and
push
xor
aam
adc
or
ficompl
mov
or
jg
cmpsb
pushf
mov
add
jne
lock
inc
sub
xchg
aad
leave
test
hlt
test
stc
lret
and
outsl
test
adc
stc
pop
mov
xchg
test
lds
fildll
mov
aad
ljmp
mov
aaa
xchg
repnz
push
cmp
jle
pop
mov
dec
cmc
xchg
fisubs
lock
and
pop
mov
mov
push
fneni(8087
add
comiss
xlat
daa
push
or
jne
enter
subb
cmp
mov
fistps
ficomps
jnp
out
std
movsl
xchg
xor
pushf
cmpsb
popf
movsb
and
inc
dec
xchg
pop
sub
pop
imul
cs
je
inc
test
cs
mov
and
popf
cmp
jnp
adcl
cmpsl
stos
inc
adc
ret
shrl
or
mov
xchg
ret
popf
or
popf
jmp
jae
push
adc
aas
or
mov
jbe
adc
pop
pop
shlb
mov
adcl
das
cwtl
or
les
xchg
pop
test
ret
mov
jne
repnz
or
imul
cmc
in
mov
jo
lcall
cmp
mov
or
mov
mov
cmp
push
mov
mov
pop
mov
mov
in
cmp
les
xor
inc
out
jmp
cltd
pop
mov
adc
cmp
lock
fmull
test
push
loop
mov
loopne
int
ljmp
aas
xor
pusha
pop
mov
in
fs
jecxz
mov
xor
ja
dec
sti
cltd
repz
insl
push
imul
xor
outsb
or
adc
jb
addl
mov
add
clc
mov
mov
cmp
nopl
loop
and
xor
rolb
push
int3
ror
lea
iret
fwait
popa
add
sub
mov
dec
xchg
push
mov
sti
mov
fdiv
add
dec
cs
idivb
sarl
pop
popf
mov
leave
movsb
pop
mov
mov
cli
gs
sbb
jle
jno
lret
jg
pop
inc
pop
sbb
movsl
fldln2
sub
mov
add
cmpsl
les
addr16
sub
sarb
dec
dec
dec
xchg
mov
mov
in
adc
pusha
add
aas
xlat
mov
fldt
or
push
stos
xchg
add
inc
lock
push
mov
pmulhuw
subl
push
std
push
lods
lock
ret
jnp
arpl
fstl
icebp
jne
dec
mov
add
add
cmpl
popl
nop
lret
jns
add
ds
ret
and
sbb
movsl
fidivs
dec
add
jg
jne,pt
xor
lods
ret
fistpll
bound
push
or
das
cmc
dec
add
cmp
mov
pop
sbbl
mov
add
or
mov
xorb
in
fisubs
sarl
iret
mov
cmp
nop
or
lahf
adc
or
jge
leave
rorb
ficompl
or
cmp
pop
data16
push
cld
mov
in
jno
dec
or
pop
push
lds
out
addr16
inc
xchg
arpl
ja
push
stos
sahf
pop
fldl
mov
dec
mov
mov
xchg
insl
cli
jno
cld
mov
xlat
bound
cmp
cmp
or
mov
inc
sarl
cmp
cmpb
icebp
add
add
call
mov
or
xchg
stos
push
rol
lea
xor
sbb
cmc
stc
xchg
lds
jae
loope
and
mov
scas
mov
adc
jnp
mov
shll
and
lock
dec
mov
xor
int3
mov
test
inc
in
jnp
scas
cmpsl
cmp
divl
aaa
mov
sub
pop
dec
push
jo
add
cmp
mov
cmp
ficoml
test
pop
sbb
out
ss
pop
ret
inc
adc
mov
ret
lcall
or
ret
insl
xor
popf
sub
shlb
jns
cmp
jno
das
sub
stc
mov
cmc
pop
in
push
mov
inc
dec
pminub
pop
lea
je
aam
inc
xchg
add
or
shrl
sbb
mov
jg
aam
adc
call
js
je
je
push
lods
jp
ficomps
mov
pushl
mov
cmp
push
testb
inc
sbb
stos
jecxz
iret
jge
push
in
popa
lds
insb
mov
lea
lahf
push
adc
sub
and
popa
inc
lds
fadds
mov
arpl
pop
inc
movsb
xchg
dec
out
inc
int
adc
nop
and
jnp
rclb
jb
sub
fwait
mov
je
enter
insl
les
imul
xor
mov
adc
stc
and
call
and
in
jg
out
and
and
loope
push
xor
jl
inc
mov
adc
les
push
sti
add
gs
sbb
pushw
inc
test
rcrl
cmp
notb
cli
lea
jo
cmp
mov
fidivrs
in
or
dec
fwait
cmp
incb
mov
mov
pop
sub
das
andb
mov
and
push
cmc
icebp
stc
and
mov
mov
sbb
cmp
jb
mov
fisubl
roll
clc
pop
and
pusha
test
cmp
mov
jmp
cwtl
push
outsb
jmp
fisubs
movsb
aam
cli
aaa
fcomp
aas
es
push
bound
mov
mov
cli
mov
push
adc
lahf
test
ds
push
loop
scas
sti
negb
out
and
mov
inc
add
ret
xorl
js
test
add
sub
or
push
sti
jns
push
mov
add
pop
xchg
inc
int3
adc
cld
xchg
imull
data16
inc
sub
fildl
add
mov
mov
fs
inc
out
mov
sbb
mov
cmp
sbb
sar
cld
ucomiss
mov
movsl
das
les
xchg
std
aaa
jge
popl
fdivs
iret
xchg
lret
adc
stos
sbb
cwtl
subb
sub
jg
outsw
andl
mov
in
dec
repz
mov
jecxz
sub
cmpsb
in
mov
mov
outsb
sbb
out
adc
mov
and
loopne
imul
jbe
ret
sbb
adc
mov
xchg
aam
push
mov
arpl
inc
icebp
in
mov
pop
or
and
or
fldl
jecxz
stos
hlt
repz
adc
pop
jmp
fxtract
lds
jge
push
icebp
jne
movsl
clc
cwtl
lods
add
xchg
mov
cmpsb
mov
int3
addl
out
or
enter
sub
dec
dec
test
mov
insb
inc
fs
mov
dec
pop
fs
aas
pop
fstpl
jb
ds
fistpl
fisubrl
jle
push
lods
mov
inc
cs
xchg
cmpsl
pushl
aam
icebp
sub
in
imul
jge
mov
lods
lods
sbb
add
lods
faddl
cmp
xchg
addr16
adc
cwtl
in
shll
enter
and
iret
mov
subl
je
js
sbb
mov
jno
jae
mov
stos
jo
and
mov
add
rolb
jg
jp
jle
jp
fidivs
fcoml
and
inc
jmp
sub
sub
push
and
push
cmpsb
hlt
addl
out
insl
clc
scas
aam
mov
inc
and
sbb
iret
and
pop
jne
adc
dec
xorb
mov
adc
test
cmp
dec
test
or
shl
mov
mov
inc
mov
and
lods
std
fwait
pusha
jbe
xchg
cmp
aad
mov
test
add
ss
or
int
repz
adc
add
jecxz
pusha
insl
push
enter
jmp
pop
fwait
popf
inc
inc
daa
movsb
mov
push
notl
sbb
push
aad
fists
xchg
push
pop
mov
adc
mov
or
subb
insl
jne
fidivrs
pop
call
mov
add
in
jno
mov
cld
call
test
cmp
es
test
lret
out
xchg
pop
fwait
cs
ja
xor
inc
mov
cmpsl
sahf
flds
lcall
lods
mov
insl
cmpsl
mov
xchg
or
jo,pn
or
pusha
jo
xor
add
nop
xor
mov
sbbb
jo
jle
rorl
adc
or
mov
xlat
push
xchg
xlat
in
cld
rcll
icebp
jb
dec
cmc
iret
ja
mov
mov
mov
dec
ret
jbe
sub
scas
icebp
sahf
mov
dec
inc
sbb
test
orl
push
xchg
stc
dec
and
adc
in
and
xchg
lods
mov
popa
xor
gs
lods
int3
xor
mov
enter
clc
pop
mov
sbb
add
ret
cmpsl
dec
and
les
pop
mov
inc
decb
dec
out
nop
pop
or
xchg
jl
fdivrs
testb
xchg
loop
cmp
push
jg
mov
andb
sbb
call
mov
ss
insb
in
mov
pop
add
mov
cld
test
stos
dec
cmc
bound
sbb
dec
fsubrs
divb
shrb
jecxz
jo
aam
jl
add
xchg
aam
mov
add
or
jae
das
imul
xchg
xchg
xchg
mov
insb
cwtl
mov
adc
aad
ss
push
in
or
pop
inc
sbb
je
lea
movaps
dec
adc
popf
mov
xor
rcl
jg
jle
mov
in
mov
sub
jl
imul
adc
or
add
stos
popa
inc
rcrl
mov
test
sub
pop
dec
rcr
xchg
cmc
pop
and
adcl
xchg
ficoms
xchg
pop
sub
fnstsw
cmc
dec
in
xor
insl
daa
shll
push
jge
sbb
lea
pop
cmp
dec
pop
xchg
xchg
aaa
pop
les
jge
or
repnz
adc
push
aad
xchg
cmp
out
out
lods
test
jl
imul
nop
sub
arpl
sub
rolb
fsubs
cs
xor
and
test
fs
cmp
cmpsb
inc
dec
mov
cli
pop
push
mov
xchg
in
adc
jb
inc
data16
fnstsw
sub
clc
pushf
add
lods
roll
std
and
mov
and
mov
sbb
push
push
fwait
nop
and
mov
or
int
jge
rorl
push
jg
imul
pushf
stos
jbe
mov
jne
fnstcw
jne
in
ljmp
repnz
pushf
jl
cs
repz
pop
xor
xor
jo
pop
xchg
or
je
lds
arpl
dec
push
cmp
cmp
sbb
je
xchg
shr
mov
js
fincstp
movsl
ja
push
loopne
clc
aad
or
fcomps
divb
xor
inc
aad
cld
fwait
outsb
cld
xchg
mov
push
mov
pop
arpl
outsl
insb
fs
in
fs
mov
movb
sub
loopne
xor
pop
jae
pop
dec
pushf
scas
enter
filds
stc
xor
cli
mov
lock
fldz
xor
testl
cli
push
fs
cvtdq2ps
add
xchg
lods
dec
mov
jae
adc
xchg
mov
mov
jbe
fwait
cmpsl
das
cmp
jo
adc
jle
arpl
mov
js
cmc
adc
push
int
xor
sbb
mov
mov
testb
jmp
je
sub
subl
cmpsb
push
mov
repnz
sarb
data16
mov
and
push
add
into
xchg
dec
daa
les
lahf
mov
adc
in
adc
shlb
mov
mov
not
mov
adc
imul
jns
inc
fldcw
add
push
adc
xchg
scas
and
xor
out
xchg
add
sub
inc
fucomip
loopne
sbb
xchg
add
jno
push
shlb
ja
jo
and
pop
andb
in
ja
and
je
or
ss
pop
sbb
gs
fwait
mov
or
ret
bound
lret
lahf
pop
xchg
pop
mov
dec
cmp
call
inc
mov
add
call
pop
xchg
subl
lcall
cmc
jmp
and
sub
dec
aaa
movsb
mov
mov
pop
pusha
mov
daa
pop
dec
shrl
push
cmc
pop
push
inc
push
cwtl
ljmp
cmp
cmp
pop
rol
mov
jp
jno
in
pop
inc
xorb
popf
inc
jo
inc
and
and
cwtl
iret
adc
pop
test
pop
jbe
cltd
hlt
push
js
or
mov
xor
pop
add
mov
fidivrs
xor
sub
cmovb
les
push
jp
fstps
loope
ja
dec
aas
mov
repnz
mov
sbb
outsb
in
xchg
adc
flds
cmp
jecxz
and
dec
pop
cld
sarb
mov
cwtl
ret
xchg
out
imull
pop
andb
aaa
lea
or
movd
sub
inc
mov
lret
sub
xchg
mov
push
push
and
jg
and
les
sbb
dec
pop
mov
cwtl
lds
sbb
mov
xor
hlt
sub
mov
fwait
and
jmp
shld
and
scas
aaa
arpl
xor
dec
daa
jnp
int
inc
dec
pop
repz
pushf
pop
add
outsl
pop
stc
mov
or
orb
push
idivb
jae,pt
pop
xchg
push
jnp
adc
movsl
test
aaa
sbb
out
stc
sbb
shll
ds
mov
inc
test
insl
sarb
mov
xor
adc
cmc
and
add
pop
sbb
cmpsb
aas
mov
jno
notb
push
mov
jmp
loopne
inc
push
dec
lret
jae
or
mov
sbb
dec
or
in
add
dec
cmc
mov
sub
iret
and
and
or
enter
pop
sbb
mov
sbb
xor
sbb
add
sub
adc
adc
and
lock
pop
ss
sbb
inc
adc
std
inc
pop
xlat
popf
xlat
rclb
ficompl
rcr
mov
test
lea
in
mov
xor
mov
pop
jnp
std
sub
std
loopne
ror
aaa
jl
inc
rol
inc
add
jg
mov
aaa
xor
xor
xlat
and
sahf
push
adc
jle
mov
mov
das
ja
out
fdivs
lret
cmp
data16
in
and
sbb
scas
cmpsb
cli
lcall
das
cli
fnclex
pop
inc
add
xchg
movsl
adc
jbe
ljmp
xchg
cmpsl
std
jae
cltd
jl
xchg
in
pop
fiaddl
dec
jae
cld
mov
lret
xchg
scas
jb
aaa
xchg
pop
rcrb
mov
lret
cmp
shr
rcrb
inc
daa
mov
insb
mov
jae
and
mov
lods
pop
cmp
in
push
push
loopne
cltd
fisttps
adc
sub
je
out
lock
mov
mov
ja
repz
dec
jp
push
push
pop
mov
jnp
adc
jae
inc
and
mov
sahf
test
out
in
adc
pop
aaa
jne
mov
cmpl
ds
xchg
ljmp
mov
fmulp
bound
mov
mov
incl
mov
sub
push
repz
push
imul
loop
ret
xor
and
push
lods
mov
jbe
ja
sub
jge
lcall
push
loopne
jl
std
insl
fdivrl
pop
pop
test
inc
xor
mov
aas
fs
ror
mov
fisubs
notl
ret
push
or
mov
pop
or
mov
cmp
push
or
sahf
pop
push
mov
scas
mov
mov
lock
mov
notl
sbbb
cmp
push
stos
or
es
cmp
xchg
sbbb
dec
sbb
xchg
out
lock
xchg
sub
xor
mov
out
xchg
fwait
decb
adc
fimull
fmuls
adc
and
jp
cmp
fstl
repz
or
pop
fimull
repnz
outsl
adc
mov
or
pop
fsubl
sbb
fistps
push
pop
aaa
stos
sub
ud1
fidivs
sbb
mov
push
pop
inc
enter
test
or
stos
movsl
add
insl
cmpsb
cmpsl
and
push
jl
fidivs
rcll
pop
test
notb
inc
xor
sti
mov
fs
add
push
mov
mov
std
test
pop
xchg
xor
clc
arpl
inc
jge
sub
sbb
and
in
subb
mov
outsl
xor
rolb
push
jg
in
pop
outsl
cmpl
sbb
mov
pushf
pop
in
jmp
mov
data16
sbb
add
sub
cmp
fwait
or
mov
popa
or
ja
insl
popf
mov
mov
pop
inc
dec
or
cli
add
das
dec
adc
mov
xlat
mov
push
xchg
inc
push
mov
inc
sbb
push
imul
out
inc
into
movsb
or
filds
jbe
bound
movsb
cmp
add
lds
dec
imul
movsl
add
cld
mov
sub
test
insl
nop
jno
cwtl
push
mov
jnp
fisubl
jg
sbb
in
mov
clc
mov
dec
outsl
mov
sub
jnp
add
test
subb
push
daa
and
or
dec
cmp
mov
out
dec
sahf
out
cmp
and
dec
add
ds
gs
das
movsl
andl
cmp
hlt
jecxz
mov
mov
fldcw
mov
cld
pop
imul
sbb
into
cmp
imul
inc
jecxz
and
dec
sbb
add
or
nop
mov
int3
xchg
ret
mov
pop
cmpsl
xor
dec
dec
jbe
js
popa
sbb
mov
xchg
adc
out
inc
ljmp
leave
jp
add
mov
mov
iret
mov
test
push
mov
aad
pop
mov
mov
pop
jmp
movd
jmp
cmpsb
subl
jne
push
sbb
push
add
xchg
sbb
lds
movsl
sbb
jg
xor
sbbb
jae
decb
ljmp
xlat
std
fnsave
pop
into
icebp
push
ss
cwtl
insl
test
fldl
std
inc
repz
imulb
push
xchg
push
imul
clc
js
cltd
mov
cs
sub
fnstenv
popf
mov
mov
mov
mov
testb
cmpsb
int3
test
xor
subl
stos
leave
adc
imul
movsl
loope
arpl
xchg
push
push
out
cmp
fs
pop
push
add
cmp
add
inc
adc
lea
push
dec
xor
adc
xlat
mov
inc
sbb
lret
dec
movsl
xchg
mov
rclb
pop
or
xchg
stos
xor
or
shll
mov
movsb
adc
pop
scas
aas
sbb
dec
xchg
movsl
mov
inc
pop
cs
shrl
sub
icebp
push
bound
test
sub
jbe
adc
sbb
pop
fsqrt
cmpsl
mov
lods
pushf
pushf
sbb
jecxz
mov
test
pop
cmp
jne
add
jno
adc
cmp
pop
xor
or
into
mov
mov
ja
ljmp
sbb
cwtl
or
push
lds
lods
mov
cmp
cltd
out
jno
fisubrl
mov
lahf
repz
loop
repnz
test
fidivrs
nop
test
cli
repnz
sbb
add
lds
mov
push
in
outsb
mov
sub
dec
cltd
movsl
out
xchg
outsl
inc
call
fbld
pop
cli
cmp
dec
mov
out
push
and
or
cwtl
push
pop
je
pop
outsb
xlat
fs
ret
add
dec
fiadds
lds
xor
push
adc
lcall
addl
push
cli
cmp
test
cwtl
push
push
sub
ds
mov
mov
out
pop
sbb
loopne
mov
mov
mov
push
movsl
and
inc
jg
xor
test
jle
mov
cltd
push
sbb
lret
add
pop
inc
push
aam
xchg
cmp
inc
lahf
inc
cmp
out
outsl
das
jnp
out
mov
scas
jnp
cmpsb
lock
fstps
xor
cltd
iret
pushf
lret
sub
inc
adc
daa
xchg
push
pop
nop
adc
fs
cwtl
jp
xor
inc
das
fisttpll
bnd
add
jae
mov
mov
pushf
in
mulb
dec
fistpll
push
loope
arpl
xchg
sbb
adc
adc
and
dec
inc
imul
js
jle
sbb
stos
mov
das
or
mov
sbb
xor
mov
icebp
push
pop
test
adc
sbb
mov
mov
mov
cwtl
out
sbb
mov
mov
ficoms
out
xchg
jns
inc
es
cmp
mov
sbb
repnz
push
ss
adc
es
cmp
cmp
call
sub
or
mov
mov
int
xor
shrb
jb
decl
loope
push
psadbw
in
dec
mov
cld
pop
cmc
jnp
mov
das
push
mov
fs
stos
in
xor
inc
xchg
or
xor
in
push
push
xchg
dec
push
push
xor
std
test
xchg
ret
sbbl
xchg
call
adc
outsl
cwtl
ret
pusha
adc
nop
sbb
mov
rcll
loopne
loopne
push
jle
mov
or
rorl
loope
inc
mov
mov
jne
jp
out
aas
xor
xor
add
mov
and
decb
jmp
cmc
xchg
inc
sbb
clc
dec
in
mov
sbb
push
pusha
cmp
add
iret
fidivs
popf
xor
inc
push
xchg
popf
adcb
and
pop
lcall
vpmacssww
and
mov
push
mov
push
das
dec
sarb
push
push
shlb
data16
adc
adc
sub
push
mov
sub
xor
gs
out
mov
inc
jno
cwtl
jb
pop
cmp
and
je
pop
test
inc
ss
xor
cmp
mov
enter
cltd
inc
mov
sub
pop
into
sub
inc
adc
mov
leave
in
xchg
scas
js
add
ret
or
aaa
xor
clc
pop
xchg
out
leave
push
loope
gs
inc
fimuls
cltd
jg
and
cmp
adc
lods
mov
icebp
push
pop
addb
call
mov
or
mov
imul
pop
int3
push
sbb
ljmp
pop
push
sub
je
or
adc
push
out
cmp
jge
lea
inc
xlat
mov
das
outsl
mov
push
sub
cmpsb
js
fimull
jmp
popa
rorl
mov
jl
in
cltd
ret
js
cs
pop
push
push
mov
sbb
sub
mov
enter
call
adc
and
adc
les
inc
push
mov
cmp
leave
shll
mov
cmp
xor
mov
cltd
lea
jmp
jnp
pop
dec
mov
outsb
push
inc
insl
pusha
shrb
loopne
jnp
inc
xchg
add
loopne
jecxz
sbb
aaa
fs
loopne
sbb
ds
pop
dec
call
sub
aam
mov
push
jne
xor
adc
mov
push
xchg
stos
or
out
roll
adcl
xchg
enter
xchg
pop
pop
inc
dec
mov
jecxz
aad
mov
jecxz
testl
incl
dec
js
fprem
cmp
jo
iret
or
cld
movsb
pop
adc
in
insl
xchg
jp
clc
pop
lret
lahf
jle
into
xor
adc
xchg
push
xor
add
mov
data16
aam
xchg
cltd
dec
js
int
lock
pop
mov
ficoml
mov
push
pop
arpl
push
fsubrs
sub
inc
add
ljmp
lds
mov
adc
add
jle
cmp
imul
out
and
fs
add
lret
icebp
aaa
pop
popf
add
sbb
ja
faddl
lods
call
inc
dec
out
xor
orb
pusha
repnz
and
rorb
gs
movsb
lods
cmc
int
movsb
jbe
dec
lea
loopne
pop
or
mov
int
imul
pop
fprem
mov
push
js
mov
clc
inc
push
std
out
xchg
push
arpl
inc
dec
inc
add
repnz
rol
lret
mov
sbb
cmp
ja
xor
push
int
pop
and
nop
lock
data16
sbb
ja
ffreep
lahf
mov
add
sbb
jp
push
aas
icebp
cwtl
push
mov
push
mov
enter
mov
adc
xor
or
out
push
in
sti
aad
js
mov
icebp
fdivrs
cmpb
xchg
out
xor
cmp
sbb
inc
push
and
sub
and
and
sahf
mov
rcl
out
adc
jo
bound
adc
aad
cmp
popf
and
out
inc
jae
jecxz
push
pusha
dec
mov
leave
pop
scas
movzbl
mov
ja
jg
jmp
ljmp
out
push
inc
je
add
test
daa
movsb
push
ret
jge
fdivrs
dec
roll
shlb
adcl
lcall
imull
xorb
pop
jg
sbb
std
jnp
rolb
mov
cwtl
or
popa
add
outsb
andb
insb
sarl
push
int3
push
mov
dec
jns
mov
xor
push
push
dec
fucomi
imul
dec
out
fidivrs
mov
scas
sub
pop
cmp
add
call
sub
mov
sub
add
fcmovnb
andl
mov
leave
mov
mov
stc
es
jl
fisubrs
fisubrl
jbe
cs
dec
push
cwtl
push
mov
cwtd
adc
fnsave
insb
xchg
or
fadd
and
sub
xor
push
popa
loopne
cmp
mov
mov
xchg
lahf
xor
jg
and
pushf
inc
pop
sbb
movsb
outsl
decb
ffreep
pop
jmp
iret
movsl
sub
mov
inc
test
mov
mov
out
lods
ret
push
xor
xlat
in
fwait
jg
push
aas
in
and
cmp
adc
inc
int
xchg
pop
xchg
std
scas
sub
out
push
cmp
xchg
or
adc
adc
pop
sub
or
jp
mov
sbbl
sbb
adc
add
out
mov
or
mov
mov
ret
mov
iret
add
cmpb
inc
or
pop
movsl
mov
xchg
jl
xchg
aas
or
ret
lcall
cwtl
push
sbb
decl
insl
and
nop
stos
inc
pop
fldl
int
shll
enter
jmp
in
xor
fdivl
jbe
loop
std
int
xor
and
shlb
cmp
lock
sub
pushf
test
adc
fs
add
cmpsl
adc
and
jle
pop
fidivrl
imul
push
jmp
iret
cmp
outsl
dec
push
jno
divb
rcr
xlat
or
pop
in
xor
test
and
xor
imul
push
mov
loop
push
popf
fs
jge
leave
sub
mov
or
xchg
adc
mov
push
dec
mov
fimuls
je
xchg
test
pop
ficomps
daa
mov
xchg
shrb
or
data16
out
mov
pushf
sub
mov
mov
sbb
sub
int3
pop
jecxz
stos
cmp
pop
fdivs
and
outsl
jne
push
sub
lahf
xor
addl
daa
mov
jo
and
sahf
mov
mov
pusha
push
push
push
popf
fildll
add
or
push
xor
mov
es
jge
push
cmp
cmp
push
inc
sub
push
and
scas
cmp
lcall
adc
test
push
out
xchg
mov
xor
jmp
iret
rorl
icebp
adc
push
jp
das
mov
aam
pop
lea
pop
loopnew
stos
mov
pusha
jge
in
pop
lea
dec
dec
ja
fistpl
js
imul
xchg
jns
subl
dec
es
or
and
jne
outsb
aas
adc
push
mov
cmp
lods
mov
aam
cltd
push
jne
add
adc
cmp
imul
jmp
mov
inc
sarl
scas
test
lea
xor
inc
bound
sub
xlat
sbb
sub
inc
bsf
mov
inc
sub
adc
add
pop
imul
imul
sbb
fmulp
stc
movl
in
jne
mov
pop
xchg
pop
or
jmp
test
or
push
pusha
sub
pop
out
inc
ljmp
les
push
sbb
sbb
add
in
dec
or
push
cmpsb
push
jl
cmp
call
movsb
inc
fiadds
pushf
xchg
push
or
adc
push
dec
mov
jo
dec
imul
jbe
ljmp
movsb
mov
movsb
lret
push
push
push
rcrb
fwait
incb
or
mov
push
imul
testl
mov
add
inc
xchg
mov
dec
sub
icebp
mov
loope
inc
adc
xor
or
test
dec
mov
adc
or
pushf
movsb
and
movsl
rcll
jbe
mov
inc
jge
sub
sbb
push
arpl
mov
adc
pop
mov
cmc
sub
insl
into
nop
lcall
imul
sub
push
iret
mov
fsubr
stos
aad
push
pop
test
movsl
or
push
in
gs
or
pop
mov
add
shl
faddl
or
pop
hlt
push
cmp
jne
fcoms
aaa
adc
push
adc
lret
idiv
iret
xchg
xor
inc
inc
mov
inc
js
pusha
imul
fsubl
repz
jnp
dec
adc
xor
mov
mov
sub
lahf
addr16
and
dec
out
inc
jnp
ljmp
repnz
repnz
ret
lods
aaa
das
loop
mov
mov
jae
xchg
cmpsb
sub
and
cmp
and
pop
mov
jnp
pop
adc
cmpsl
jno
int
mov
sub
fnstenv
jle
lret
xchg
cld
mov
jo
mov
ficompl
xor
cmp
fsubrs
sub
xor
lret
stos
cld
pop
dec
in
cwtl
and
jg
jg
filds
push
mov
xchg
or
cld
leave
loope
inc
sub
movsb
repnz
pop
mov
push
xchg
push
dec
ret
cmpsb
adc
ja
xchg
and
mov
sbb
push
call
out
dec
insl
cmp
les
pusha
dec
cmp
loopne
pop
ds
aad
dec
inc
out
mov
scas
adc
and
cs
inc
pop
push
sbb
push
fisubs
divl
arpl
cmp
fbstp
sub
adc
jnp
jp
cmp
into
sub
sbb
adc
pop
fnstcw
xchg
add
mov
iret
push
xchg
movsl
jne
fs
cmp
ret
xchg
push
out
xlat
and
adc
int
jmp
loope
or
scas
int
fdivr
dec
xchg
enter
or
scas
xchg
mov
add
test
ret
dec
sbb
daa
cmc
outsl
xchg
fldcw
or
jnp
xchg
stos
push
test
or
hlt
aaa
and
lret
xchg
pop
aad
std
mov
mov
push
data16
cwtl
js
das
inc
rorb
adc
push
jb
fdivl
mov
cmpsl
mov
fdivr
lahf
les
and
sbb
pop
nop
inc
clc
adc
push
cmp
imul
inc
cmp
fcos
mov
lods
insb
mov
push
and
imul
push
stos
jl
aaa
out
mov
or
xchg
shrb
repnz
lahf
dec
lods
repz
movsl
inc
mov
mov
arpl
inc
push
in
cmp
inc
mov
mov
adc
or
enterw
inc
jne
hlt
mov
mov
testb
lds
addr16
sub
pusha
lret
inc
sub
adc
mov
addr16
cmc
push
data16
push
inc
adc
xor
push
iret
lret
ret
add
bound
daa
dec
stos
int
adc
push
daa
add
mov
and
mov
loope
rcrl
notl
dec
mov
sbb
cmpsl
adc
cmp
int
jb
adc
fdivrs
xor
inc
mov
mov
sbb
rolb
out
xchg
loop
std
pushf
pop
aas
xor
add
loop
imul
cli
jecxz
jb
inc
js
and
int3
roll
lret
lea
mov
sub
xor
movsb
sbb
sbb
adc
xchg
pop
push
sbb
je
sti
pop
cs
cmpsl
mov
rcr
xor
dec
out
jbe
add
into
cmp
insl
xchg
inc
rcrb
xor
pop
and
fisubrs
dec
insl
xchg
mov
loop
sbb
loope
in
or
ret
inc
ret
jp
xor
inc
jmp
sub
add
adc
jge
push
jecxz
push
out
add
fwait
dec
add
cmp
imul
pop
push
pop
data16
add
dec
inc
inc
mov
stos
gs
mov
jmp
mov
js
push
dec
testb
xor
div
cmpsl
clc
pop
sbb
inc
sub
inc
cmp
pop
cmp
lods
gs
stos
sbb
shll
mov
sbb
test
cmpsb
mov
in
fwait
clc
out
out
lret
movsl
dec
arpl
mov
lret
out
iret
in
jnp
hlt
lock
dec
es
mov
stos
mov
test
ljmp
cmp
and
jae
sti
inc
mov
call
ja
gs
es
jbe
cmp
scas
daa
xor
out
cmp
jp
popf
mov
int
push
outsb
cmc
insb
nop
mov
cmp
int
fldl
popa
roll
push
dec
jecxz
in
loop
push
xchg
adc
lret
mov
add
in
addl
mov
sub
gs
pop
sub
imul
cwtl
ret
add
imul
mov
add
stc
push
outsl
pop
and
lret
aaa
xor
rcll
xchg
test
sbb
cmpsb
aas
xor
insb
aad
cmp
ret
popf
jecxz
or
pop
pop
xchg
xchg
mov
xor
jl
xchg
mov
xorl
mov
sub
movsb
pop
lcall
daa
pandn
roll
adc
mov
imul
sbb
or
cmp
xchg
std
adc
adc
movsb
iret
xchg
inc
dec
hlt
push
inc
jbe
repz
js
lret
pop
jb
mov
je
xchg
adc
push
fbld
fwait
sahf
lret
inc
das
repnz
add
and
lcall
or
mov
mov
enter
and
ja
icebp
cmpsb
dec
dec
inc
mov
aas
test
aas
lods
add
stc
pushl
insl
cmpsb
xor
pop
sub
pushf
cmp
in
out
lret
mov
jne
or
mov
rcll
xchg
adc
gs
jecxz
ret
fwait
adc
or
dec
popa
out
or
icebp
call
fistps
not
or
lret
mul
xor
jno
mov
dec
mov
fdivr
ret
push
pop
xchg
sbbl
loope
int
push
fisubrs
popa
cli
enter
xchg
dec
icebp
sarb
cmp
xor
fldt
fnstcw
push
and
sti
dec
sbb
das
pop
es
in
test
xchg
lock
and
aad
popf
pop
jg
or
cmp
popf
bound
scas
push
jae
xchg
jl
jecxz
dec
pop
out
xor
es
or
dec
inc
mov
mov
or
shll
outsl
or
fs
daa
add
clc
add
cmp
inc
sbb
mov
dec
xor
ja
inc
sbb
push
daa
mov
and
and
fcom
gs
mov
mov
mov
cmpsb
adc
dec
or
cwtl
or
rcrb
fs
lea
mov
stc
jae
fwait
out
loope
sbb
jo
lret
int3
nop
mov
icebp
pop
push
sbb
add
call
jp
fdiv
xchg
adc
sub
dec
cmpsb
imul
and
xchg
push
stos
mov
lret
push
mov
fisttps
mov
out
data16
pop
popf
lds
shr
outsb
inc
inc
push
ja
mov
push
jno
ljmp
mov
jnp
mov
in
or
jp
jle
je
sti
loopne
outsb
sahf
xchg
lret
idivl
push
pop
out
aam
inc
dec
mov
scas
xchg
mov
mov
lods
testb
fmuls
adc
add
loopne
mov
outsl
int3
ljmp
in
ret
inc
xor
pop
cltd
push
cld
jp
insb
testl
xchg
icebp
fbstp
icebp
ja
fistps
inc
outsb
test
jmp
sub
xor
int
int3
popa
mov
push
xlat
pusha
push
enter
sar
fwait
adc
scas
mov
jb
fldenv
xor
test
push
fcompl
adc
pop
push
xor
adc
dec
insb
dec
mov
cli
lds
sbb
cltd
rcl
into
shrl
fwait
mov
or
and
out
xor
shr
push
test
rcl
pop
xchg
sub
pop
shlb
xchg
data16
cs
inc
and
mov
clc
fmulp
in
push
and
rclb
adc
test
outsl
or
pop
repnz
jb
sub
mov
out
mov
xor
dec
dec
dec
inc
inc
in
pop
in
jne
add
push
cmp
repz
movsb
mov
out
clc
outsl
jmp
clc
rorb
out
shll
inc
cmc
push
jb
lea
ret
and
jno
and
sbb
jmp
cmc
cmp
iret
push
movsl
daa
rorl
cmp
mov
jg
xchg
mov
jbe
cs
ret
push
and
sbb
test
ja
adc
pushf
pop
xchg
je
sarb
lods
rorl
in
jbe
aaa
lret
lock
mov
add
repnz
shl
or
or
adc
out
lods
mov
jne
das
add
push
adc
inc
add
int3
loop
or
in
sbb
sahf
jbe
push
inc
pushf
rorb
dec
aad
repnz
les
cmp
xor
std
aam
adc
and
and
inc
push
push
mov
sbb
mov
mov
leave
das
cli
ss
pushf
fimuls
dec
and
insb
jecxz
aam
mov
cmc
xchg
ret
pop
jbe
ficompl
mov
jo
cmp
in
lods
dec
inc
push
mov
push
mov
sti
xor
jle
fwait
mov
stc
or
movsb
adc
sbb
and
cwtl
test
pop
mov
pop
outsl
cmp
outsb
xchg
rolb
testl
dec
xor
xchg
fs
xchg
xchg
arpl
pushf
xchg
orb
cmpsl
test
mov
test
dec
mov
iret
pushf
imul
in
pop
outsl
xchg
xchg
xlat
lret
and
mov
adc
aas
mov
pop
sub
pushf
in
shll
fs
int
push
mov
lods
and
divw
and
pusha
dec
or
mov
mov
call
xchg
arpl
cmp
icebp
and
iret
data16
stc
pop
adc
int
jno
dec
sub
outsb
push
add
int3
pop
fwait
push
inc
xchg
pop
mov
rol
or
and
lret
push
mov
nop
cmp
fistpl
dec
dec
inc
loopne
outsb
cltd
popa
fmulp
fwait
mov
inc
pop
push
or
cmp
loopne,pn
fnstsw
push
mov
das
cmp
xchg
das
enter
or
push
mov
jno
push
ss
mov
test
out
mov
xor
jecxz
add
push
mov
cmp
aas
xor
fcomip
ficoms
xor
cmp
decl
xchg
cmp
shl
inc
mov
lahf
push
adc
sarb
inc
cli
sub
in
push
dec
push
or
dec
fcmovne
dec
mov
cs
pop
testb
or
repz
in
out
decb
sub
and
xchg
stos
sti
mov
les
push
sbb
jbe
mov
add
push
adc
mov
out
or
mov
cli
adc
push
ds
aam
xchg
fcompl
in
jp
inc
mov
movsb
test
roll
cmpb
mov
rcrl
lock
xor
daa
arpl
sub
in
idivb
mov
dec
jle
mov
loopne
test
loop
movsb
shr
fisttps
xor
adcl
outsb
test
cli
cmp
sub
shll
inc
mov
sub
mov
mov
sbb
bswap
cs
jne
cli
fstps
repz
scas
pop
stos
mov
xchg
ds
lret
std
pop
test
adc
mov
lock
sbb
mov
inc
je
aaa
and
mov
inc
icebp
into
inc
out
je
and
sbb
popa
das
cmp
inc
cli
int3
fldenv
cmp
js
xchg
es
sbb
jnp
and
addl
mov
adcl
les
aam
ret
ror
loopne
cltd
inc
test
push
shll
aam
ficompl
es
xchg
inc
mov
and
mov
xchg
movsb
lods
js
xchg
or
pop
orl
fucomp
call
into
jmp
addr16
mov
mov
test
add
jnp
add
cmpb
cmp
mov
mov
dec
ret
jb
ljmp
mov
sbb
pop
mov
push
mov
outsb
sbb
fsts
mov
iret
aas
shl
insb
lods
int3
pop
inc
imull
es
inc
insl
loop
addr16
pop
popa
hlt
or
xlat
popa
test
mov
and
hlt
inc
js
clc
dec
pushl
xchg
or
xchg
out
mov
cmpsl
add
loope
fistpll
popa
sbb
jb
inc
aas
push
cmp
mov
hlt
out
and
inc
out
addl
push
fdivl
and
push
shlb
out
mov
jp
test
add
mov
ret
pop
test
push
xchg
cli
cmpsb
insb
mov
jmp
cltd
cltd
jae
add
or
pop
mov
jl
iret
cmp
jbe
push
test
add
xchg
pop
mov
jae
int3
cmp
jge
add
icebp
repz
xor
loopne
pop
rolb
push
std
inc
pop
insb
xor
pushf
sbb
test
mov
push
sub
aam
sbb
mov
jmp
dec
sub
aas
push
aam
xchg
jb
mov
loop
dec
mov
or
push
jnp
mov
int
cmpsl
sub
daa
pop
out
adc
in
mov
dec
cmp
loope
mov
jl
movsl
xchg
insl
adc
pop
in
jmp
xor
or
add
fimull
in
and
mov
or
lret
out
xchg
mov
data16
xor
mul
sbb
test
loope
aaa
adc
mov
outsl
xchg
sbb
pop
out
push
xor
cld
jl
scas
stos
push
inc
enter
es
adc
add
test
repz
jne
es
or
mov
add
fdivr
sar
sub
icebp
filds
pop
pop
orb
xchg
mov
push
rorl
add
mov
sahf
mov
cwtl
pop
push
mov
and
mov
lods
cmp
add
cmc
outsl
das
cld
push
adc
das
insb
es
pop
clc
xor
rcl
scas
push
fsubl
clc
or
js
mov
mov
mov
lea
int3
dec
add
mov
popa
push
jmp
sbb
rorl
push
mov
push
jno
push
or
cmpsl
mov
mov
jbe
inc
pusha
lds
xchg
das
bound
fistps
cli
icebp
dec
adc
repnz
fcompl
ljmp
je
jnp
fwait
mov
pop
aam
sti
movsl
ss
sub
fucomp
mov
or
fmuls
push
add
lods
push
mov
sti
mov
scas
mov
lea
jmp
add
icebp
sbb
cmp
enter
test
movsl
add
lock
dec
mov
push
jnp
in
fidivl
lcall
pop
push
mov
orb
mov
add
out
in
inc
sub
pop
mov
xchg
fldenv
insb
jmp
dec
stos
mov
call
out
filds
insl
inc
stos
sbb
cld
cmpsb
lcall
add
pop
out
push
iret
inc
or
shl
sub
push
test
lret
xchg
ja
sub
dec
movsl
xor
pop
or
cmpsb
pop
loope
imul
or
popa
mov
adc
nop
enter
addl
sbb
notl
mov
lcall
sti
adc
mov
jmp
xchg
fidivs
movl
push
inc
inc
pop
add
sbb
ss
out
pop
lret
pop
sub
add
out
pop
loope
out
lods
test
pop
pop
das
in
xchg
div
insb
pop
cmc
outsb
loopne
popf
inc
arpl
js
jp
cmpsl
das
inc
mov
inc
test
or
adc
pop
mov
or
lret
xor
lret
lcall
dec
fdivrs
adc
xchg
dec
sub
dec
in
sub
repz
inc
add
dec
mov
sub
fdivrl
mov
jbe
push
inc
xchg
aam
mov
lret
xchg
jg
ds
mov
sbb
pop
pop
mov
and
push
popf
mov
stos
or
pusha
out
jno
aas
stc
pop
mov
cmp
repnz
push
pop
shlb
xchg
add
ds
adc
imul
mov
sarb
mov
inc
xor
jmp
sub
mov
pop
jge
js
or
and
push
dec
sub
aam
dec
jbe
fmull
loope
push
mov
push
aad
jmp
push
adc
xor
jl
mov
rcrb
mov
test
test
ffreep
inc
out
insl
mov
sub
aad
fisttps
cmp
cmp
lret
or
dec
imul
jecxz
pop
mov
adc
ret
es
lock
fdivl
decb
xchg
mov
es
int
push
jmp
daa
ds
arpl
add
ss
leave
sahf
add
lds
pop
leave
test
fisubs
push
cwtl
lds
lcall
xor
std
xor
arpl
xchg
movsl
test
pop
sahf
sahf
xchg
push
xor
push
pop
sarl
and
lahf
push
ficompl
lcall
cmp
jbe
fmuls
je
outsb
lods
sub
out
das
mov
imul
pop
xor
xchg
xchg
lds
xor
dec
loopne
fstps
ljmp
sbb
dec
adc
test
out
mull
jno
fsubrp
leave
push
xchg
insb
cmp
cwtl
mov
faddp
xor
dec
jle
mov
movsl
mov
mov
test
or
add
in
push
iret
testl
push
js
and
arpl
dec
adc
xlat
ror
mov
inc
ror
cltd
xchg
xchg
dec
bound
xor
jge
inc
or
adc
push
arpl
sbb
xchg
xor
iret
mov
ss
mov
sahf
inc
mov
mov
sub
and
in
add
sub
fdivrl
dec
pop
jno
xlat
pop
push
jb
call
into
leave
scas
adc
jne
fmul
push
loopne
loopne
mov
insl
xor
cmp
sbb
push
lahf
faddp
loopne
xchg
in
frstor
int
adc
aaa
or
popa
inc
cwtl
sub
sarb
xor
sti
lcall
mov
dec
mov
pop
add
adc
cmp
mov
cmc
jle
jle
push
ficomps
aaa
nop
dec
inc
xchg
dec
mov
push
insl
ficoms
out
filds
add
test
xlat
dec
dec
out
dec
sub
iret
pop
shrb
xchg
jnp
sbb
mov
jns
out
jb
test
cmp
ret
adc
je
add
push
jl
nop
rol
rsm
call
adc
inc
lea
mov
push
sbb
into
mov
enter
jo
jecxz
rcl
sbb
adc
jp
ljmp
add
sbb
das
mov
lds
inc
pusha
inc
cmp
jle
ret
test
pop
mov
jne
fsubrs
sbb
add
push
jmp
in
lock
hlt
lret
gs
xchg
das
lods
jae
test
test
repz
xchg
mov
dec
push
out
dec
xor
clc
mov
push
sub
cmp
ja
sahf
and
jns
or
movsl
mov
out
cwtl
inc
insl
pop
stc
mov
les
aad
pop
and
mov
inc
js
mov
stos
cmp
in
sub
out
xchg
int3
push
push
nop
rcrb
aas
dec
jb
sbbl
loop
das
lret
add
stc
pop
orl
sti
inc
loop
cltd
and
lahf
xchg
sbb
xchg
gs
rcr
mov
pusha
mov
jb
jl
xchg
mov
mov
adc
aaa
xlat
jg
inc
xor
bound
test
and
int
mov
sub
insb
sub
cmp
jge
xchg
dec
xchg
xor
push
int
pop
sbb
je
cmp
shrb
cmp
popa
or
ds
ds
inc
lds
xchg
loopne
jb
popa
mov
push
dec
shl
cmpb
jecxz
cltd
add
ljmp
lret
xchg
shl
mov
mov
jg
inc
ds
push
fsubp
cmp
aad
push
jae
rclb
xchg
cmp
jmp
or
adc
orb
scas
movsl
sbb
mov
mov
dec
mov
mov
int3
inc
popa
mov
test
loop
addb
insl
int3
gs
ss
xchg
adc
test
dec
rorb
push
gs
add
das
jae
adc
jge
or
test
xor
rolb
push
sub
jnp
cld
mov
or
push
daa
leave
inc
push
lahf
enter
cmpsb
adc
das
adc
xchg
push
inc
mov
scas
sub
insb
xor
lret
pop
inc
outsb
jae
lods
stos
cmpsl
sub
jecxz
lahf
movsb
cmp
xchg
adc
stos
popf
lds
int
and
jg,pt
add
mov
jne
out
add
aaa
sub
and
jge
int
in
xchg
inc
rcrb
popf
mov
call
and
fildl
jecxz
jo
lods
in
xchg
stos
and
xchg
in
mov
es
push
mov
aaa
lcall
filds
lret
ss
mov
mov
cmp
stc
jg
push
cs
mov
repnz
je
push
bound
ret
pusha
out
test
add
stos
adc
subb
popf
scas
inc
aad
add
mov
pop
or
lock
xchg
js
out
std
jge
mov
mov
mov
cmpsb
inc
cmp
add
cmp
mov
iret
mov
test
stos
inc
dec
mov
jo
stc
add
xchg
mov
lahf
push
nop
sbb
incl
icebp
sub
aam
cmp
cwtl
dec
ja
mov
bound
sahf
imul
int3
mov
cmp
push
cmpsl
lock
xor
push
mov
mov
inc
jecxz
shll
lods
and
inc
and
ficompl
and
sbb
mov
lds
pop
bound
in
mov
inc
and
mov
mov
adc
lcall
jecxz
inc
ljmp
cli
push
movsl
adc
aad
pop
dec
xorl
mov
jmp
add
mov
push
dec
dec
push
pushl
pop
sub
or
das
jp
addr16
push
push
rclb
push
dec
dec
xor
es
adc
std
lds
mov
das
mov
cld
mov
ds
fnsave
fs
pusha
aad
sbb
aaa
das
in
mov
aam
inc
mov
jle
mov
dec
and
jle
ficomps
inc
rcl
xchg
add
sub
repz
inc
push
cmc
mov
fwait
cmp
das
inc
mov
push
cmp
insb
dec
fdivrs
jmp
pop
imul
leave
lret
mov
fcmovnb
cwtl
and
xchg
push
push
inc
jmp
sbb
loope
xor
lock
pop
jnp
aas
mov
out
xchg
pusha
fldenv
cmpsl
mov
mov
clc
mov
xchg
push
xor
pop
mov
pop
xchg
inc
push
adc
mov
gs
ljmp
pop
data16
js
aaa
mov
jmp
inc
idivl
add
sub
test
dec
push
mov
jae
jmp
addr16
jp
in
mov
pop
cld
aaa
popf
mov
cmpsb
repz
fs
movb
shrl
mov
mov
push
sub
sbb
xchg
xor
adc
es
xor
jo
test
xchg
sub
sub
js
lds
loope
ficomps
cmpsl
push
sbb
arpl
das
jle
adc
jmp
adc
scas
pop
mov
lret
mov
jg
add
std
inc
out
je
les
adc
stos
imul
jne
or
insb
iret
cmp
mov
adc
mov
dec
or
stos
add
pop
sbb
lahf
and
xchg
dec
pop
adcl
adc
xchg
movsl
xor
adc
les
cli
in
fstl
dec
popf
hlt
cmp
in
aaa
and
cmpsb
and
sub
jg
inc
cmp
jae
jae
shlb
lret
inc
jo
or
add
test
nop
pop
loopne
mov
in
ds
lret
adc
call
aam
pop
xor
enter
cmp
test
insb
cmp
leave
sbb
fisttpl
sub
aaa
movsb
pop
std
inc
mov
adc
int
cltd
mov
pop
mov
push
sbb
mov
mov
cld
xchg
es
xchg
pop
mov
jb
push
mov
test
inc
popa
mov
sbb
add
add
jl
push
leave
add
jb
inc
adc
add
xor
xchg
cmp
cmp
push
jl
int
pop
adc
inc
xchg
rcr
inc
test
pop
les
in
xor
xchg
stos
push
sbb
arpl
add
or
inc
mov
pushf
fwait
cmp
jge
inc
pop
jb
and
mov
mov
cli
jno
test
pop
in
push
dec
or
xor
xchg
lret
xorb
or
mov
jmp
cmpsl
in
sbb
sti
cmc
sbbl
arpl
stos
adc
mov
pop
or
mov
mov
pop
or
leave
inc
jno
icebp
adcl
mov
xchg
add
and
lods
sub
cli
andb
sbb
inc
mov
lret
dec
adc
add
dec
imul
xchg
add
lods
xchg
ret
jge
mov
rol
test
or
cmpsb
xorb
pop
and
in
es
daa
xor
sbb
push
inc
dec
xor
inc
mov
dec
add
mov
mov
add
adc
or
push
insl
shlb
stos
in
sbb
imul
daa
sti
mov
push
push
adc
sbb
sahf
movsl
mov
xor
pop
loope
adc
xor
lods
dec
loope
data16
jns
cmp
out
jle
add
stos
andl
pop
xor
clc
pushf
test
sarl
push
dec
cmp
insl
sub
jne
imul
ja
stos
mov
cltd
xor
pop
jb
fisttpll
sti
loopne
cmp
jnp
jg
and
jae
add
ja
cmp
frstor
pop
xor
lcall
push
xchg
ja
mov
mov
imul
fsubp
xor
test
out
ror
ss
sub
mov
hlt
mov
push
movsl
jb
aas
filds
inc
and
dec
adc
push
inc
fdivrl
sbb
pusha
imul
add
xor
and
sub
loope
pop
push
pop
mov
sti
loop
pop
imul
push
xchg
lds
jp
fsts
xchg
daa
pop
fwait
shrb
repz
mov
dec
arpl
sahf
lret
jecxz
jp
stos
cmp
leave
int
cmpsb
mov
xchg
adc
jecxz
mov
or
cld
pop
xchg
jb
and
cmp
and
scas
rcrb
cmp
xchg
insb
jecxz
add
dec
and
mov
add
popa
xchg
arpl
mov
dec
jmp
lahf
cmp
mov
mov
sbb
and
add
adc
or
in
add
xor
test
jp
testb
pop
inc
adc
call
adc
bswap
in
stos
out
test
adc
push
add
jae
jle
push
sbb
out
imul
test
lods
mov
mov
daa
test
je
test
outsb
ret
movsl
out
dec
or
fcomi
mov
push
pusha
xor
cmpsb
push
sbb
inc
ret
arpl
lock
mov
jns
and
jae
scas
lret
mov
push
mov
test
mov
js
sbb
pop
test
and
insb
xchg
daa
lock
sub
mov
fcmovnbe
mov
pop
xlat
mov
out
adc
adc
int3
dec
cltd
fisttps
xchg
fsubrl
movb
xchg
mov
push
and
mov
fcmovnbe
je
pop
push
inc
sub
and
movsl
sbbb
sub
jb
ret
fdivl
in
mov
mov
inc
mov
adc
mov
mov
mov
aaa
mov
xchg
mov
fdivrl
out
or
pop
mov
jae
fcmovnb
mov
dec
sub
in
lret
fnstsw
out
orb
xchg
inc
xchg
xor
adcb
call
push
in
lahf
push
adc
rorb
rol
push
sub
insb
pop
loop
cmpsb
inc
stos
data16
aad
mov
ljmp
add
pop
out
mov
pop
cwtl
pop
push
jmp
ss
cs
cld
lock
bound
sbb
jnp
setbe
repz
fmul
pop
shrb
out
mov
xor
and
push
sub
orb
push
add
out
in
int
push
jo
std
pop
addr16
dec
pop
mov
push
pop
mov
xor
fistpll
cs
xor
sbb
fdivp
aad
test
mov
inc
cmp
dec
ret
dec
shrl
mov
mov
leave
mov
mov
popf
repz
ss
test
or
xor
inc
adc
enter
xchg
pop
dec
shll
cwtl
insb
jle
mov
cwtl
mov
xchg
lahf
cmpsl
mov
adc
pop
mov
pxor
and
inc
xchg
cmp
lcall
mov
mov
mov
mov
push
xchg
daa
push
mov
mov
lds
push
pop
aam
scas
and
sub
or
hlt
pop
cmp
pop
push
cmpsb
sbb
cmc
popf
pop
push
ret
pop
test
test
adc
loope
dec
gs
or
jo
fldt
in
inc
out
mov
push
jl
sahf
test
or
stc
xlat
ja
inc
dec
cmpsb
in
add
out
pop
insl
pushf
int
add
mov
cmp
orl
push
movsb
sbb
addr16
mov
jb
or
mov
in
jbe
ljmp
dec
cmp
jnp
xchg
sub
mov
jbe
in
test
call
add
pop
mov
mov
pop
cmc
dec
fildll
push
test
leave
out
sahf
xchg
fwait
push
sub
pop
repz
fsubrl
daa
stc
das
pop
mov
arpl
mov
mov
fwait
je
cmp
insb
xor
pop
sub
cmpsl
and
mov
std
iret
aas
mov
xor
mov
stc
outsb
outsb
imul
enter
or
scas
push
mov
push
data16
xor
xor
repz
movsl
xor
shl
inc
dec
loopne
movzwl
add
repnz
cmpsb
push
repz
stos
jl
mov
push
mov
mov
jle
out
inc
xor
daa
or
inc
xchg
push
pminsw
adc
add
mov
es
les
cltd
cwtl
push
pop
stos
movsl
or
repnz
jmp
loop
hlt
lods
mov
movl
xlat
inc
mov
sub
sbb
sbb
ss
inc
lods
pop
cli
mov
mov
mov
dec
imul
cmpsb
mov
pop
or
xchg
loope
mov
adc
mov
es
imul
cwtl
aas
or
xor
mov
cmp
sti
jmp
jg
xor
div
pop
popa
mov
daa
push
xor
cli
loopne
movsb
lods
lea
or
xchg
jae
xchg
cs
mov
add
pop
pusha
pusha
dec
cltd
and
dec
iret
jo
sar
pop
je
sbb
ja
or
insl
movsb
repnz
in
jecxz
adc
push
lods
push
inc
mov
lret
mov
in
add
pop
lahf
pop
pop
fwait
lcall
push
imul
cli
inc
scas
clc
dec
xchg
clc
lods
loop
jl
and
ror
scas
int
cltd
fs
stos
ljmp
mov
mov
mov
pop
cmp
and
sti
add
xor
jl
stc
cmp
fst
cmc
mov
push
jne
xchg
aad
cmp
push
mov
mov
jmp
fimuls
mov
mov
pop
sbb
clc
ljmp
outsl
push
fstps
jne
int3
cmp
out
jp
xlat
cmp
mov
dec
aaa
dec
jo
jnp
sub
xor
js
imul
test
andb
shl
jb
mov
arpl
fimull
jne
jp
test
cmpsl
repnz
add
jle
outsl
iret
adc
sub
mov
cmp
xchg
cmp
aas
adc
push
mov
mov
add
sub
sub
cli
jge
mov
lds
subb
and
ret
push
jnp
cmc
aaa
rcr
lcall
or
scas
adc
in
mov
aas
fisubrl
lahf
sub
mov
std
lret
mov
sbb
in
push
lret
mov
sub
divb
movsb
shlb
lea
add
rcll
jns
push
dec
cs
out
out
pushf
dec
clc
cmp
pop
or
or
loop
test
lret
mov
sub
and
lcall
mov
leave
into
cmc
dec
rol
mov
pop
ss
mov
movsb
lock
jns
std
stos
adc
movswl
xchg
mov
sub
jno
sub
cmp
pop
enter
fisttps
mov
mov
adc
out
adcl
shrl
cmp
fsubrs
jae
mov
cmpsl
pop
rcl
test
es
xor
lods
sbb
xor
push
ss
or
lock
pushf
sub
cmp
lods
sbb
add
sub
lret
les
sarl
adc
sbb
stos
loope
mov
cs
jge
pop
push
inc
or
inc
call
adc
add
or
xchg
jecxz
xlat
sub
xchg
push
jne
ljmp
lahf
icebp
xor
int3
sbb
les
loopne
or
int3
jb
push
push
mov
mov
xor
adc
or
fldl
jno
int
push
clc
insl
popa
push
inc
fstl
movsb
out
out
push
stc
jg
xchg
adc
xchg
mov
testb
jbe
mov
dec
test
xor
cld
and
mov
andb
mov
lret
rorb
or
leave
or
sub
jge
movsl
sahf
pop
inc
cmp
das
and
and
shlb
xchg
arpl
xor
test
gs
pop
test
pusha
ret
call
xor
push
pop
adc
jns
dec
sub
mov
cwtl
fbld
mov
testl
or
add
or
aam
add
or
xor
movl
jecxz
in
push
adcb
adc
leave
xchg
push
or
addr16
dec
and
scas
pop
xchg
mov
adcb
out
pop
cmp
loop
cmp
xor
lcall
xchg
popf
loopne
inc
push
jecxz
loope
iret
arpl
sarb
fsubs
push
mov
pop
or
sahf
loope
loope
dec
sub
shrl
jp
push
xchg
jl
sbb
push
xor
xor
pop
cmp
rolb
cmpsl
repz
pop
jle
xlat
arpl
adcb
sbb
xor
jae
movsl
shll
sub
push
sub
mov
fidivrs
mov
mov
test
test
fs
xchg
pop
jle
clc
cmp
sub
inc
sbb
outsl
fmull
pop
in
shll
data16
aaa
mov
mov
cmp
cmp
imul
sub
pop
imul
aad
cmp
out
xor
nop
push
addr16
push
xor
hlt
push
leave
sub
cli
xchg
add
je
iret
stos
inc
pushl
imul
add
jno
es
mov
in
sub
subl
jbe
fistl
inc
dec
int3
movsl
xor
rcrl
flds
aas
mov
jg
and
insb
push
and
sub
leave
enter
dec
int
lcall
cmp
aad
out
aam
das
pushf
js
leave
call
sbb
loopne
push
in
hlt
mov
and
in
faddp
push
shld
sahf
addr16
dec
mov
sub
pusha
adc
lds
popa
or
adcl
popf
xor
jecxz
pop
cmp
push
lods
adc
jmp
mov
add
pop
dec
or
push
mov
fstpl
insb
cmp
data16
push
nop
sub
mov
push
filds
mov
loope
dec
pop
bound
mov
int3
out
jge
xchg
add
idivb
call
and
pop
cmpb
insl
outsl
fiadds
insl
mov
sbb
push
movsl
std
lret
pop
pushf
movsb
pop
xchg
jle
in
mov
rolb
inc
mov
sbb
and
ja
or
pop
sbb
lahf
add
dec
in
xlat
data16
mov
mov
xor
pop
cltd
mov
xor
pop
lcall
into
insl
lds
adc
lds
xchg
push
sbb
add
mov
xor
stos
adcb
jae
sahf
arpl
pop
pop
push
inc
sub
pushl
mov
xchg
lods
xor
mov
adc
and
imull
int3
rclb
xor
insl
ljmp
shlb
sbb
aad
push
pop
or
push
hlt
cmp
push
popf
fdivrs
mov
repz
push
inc
pop
loop
cmp
sub
mov
stc
sub
mov
push
in
pop
dec
cmp
stc
ds
icebp
lahf
push
mov
mov
js
mov
outsl
iret
jns
out
inc
xor
mov
jge
sub
add
ret
dec
ljmp
sti
inc
ret
popf
loope
dec
pop
mov
xor
filds
push
mov
push
out
sub
inc
call
pop
dec
mov
and
movsl
pop
or
adc
mov
or
dec
jb
mov
or
out
nop
mov
les
loope
or
add
add
inc
mov
xchg
lds
lret
ljmp
in
cmp
sbb
je
dec
arpl
ss
jp
mov
cmp
mov
cmp
fcmove
repnz
mov
or
test
hlt
pop
imul
jnp
jno
and
adc
and
pop
fwait
sub
jmp
push
jno
add
mov
cli
lods
movsb
les
incl
add
out
mov
pop
add
jl
hlt
shll
fstpt
xchg
popl
in
xchg
xlat
jbe
xlat
mov
insb
sbb
sub
mov
sbb
push
fcmovnb
xchg
dec
mov
inc
inc
add
or
cmp
mov
cs
add
mov
mov
xchg
mov
pushl
inc
xor
add
mov
xchg
xor
add
cmpsl
add
fistpll
mov
cmp
fldenv
fs
jp
enter
pop
pop
pop
pop
jp
sbb
subl
enter
fidivs
cmpsl
bound
jl
jne
cs
mov
add
sbb
xchg
xchg
xchg
mov
shrb
or
push
clc
inc
insb
push
or
pop
dec
or
push
dec
jp
pop
fidivl
mov
out
bound
mov
xor
xchg
lret
dec
sub
push
inc
fcoml
mov
pop
fadd
xchg
mov
adc
ljmp
pusha
pushf
data16
nop
adc
cmp
bound
mov
sti
jnp
cltd
or
filds
add
aad
push
or
push
incb
sub
xchg
int
push
pusha
push
popa
ss
into
lret
mov
mov
aad
inc
adcb
nop
in
dec
lret
xchg
and
movsl
inc
or
pop
pop
adc
in
mov
aas
rclb
insl
cltd
xor
pushw
fcoml
cmc
jnp
mov
sarl
mov
push
ret
pop
cltd
pop
xor
lds
pop
test
add
pop
dec
dec
mov
sti
cmp
subb
adc
popf
xchg
mov
inc
dec
sbb
insb
and
jo
sub
dec
ficomps
jecxz
filds
or
inc
jnp
sti
rorb
fwait
lock
test
adc
bound
jle
nop
or
jge
and
pop
push
and
mov
jl
dec
sub
push
mov
xchg
fprem1
adc
push
push
sub
xchg
cmpsb
pop
dec
inc
pusha
lcall
dec
dec
in
dec
sbb
ja
bndldx
inc
pop
cmp
test
cwtl
lods
cli
enter
sbb
aad
add
and
mov
push
ss
clc
dec
add
inc
sbb
jb
dec
cmp
cld
int
lcall
test
flds
cs
cs
sub
inc
jo
ja
mov
repz
inc
dec
sub
adc
jecxz
ret
ja
lods
jmp
adc
or
scas
or
jle
adc
cwtl
or
lcall
imul
leave
mov
xor
jnp
adc
mov
inc
dec
mov
xchg
daa
sbb
out
pop
lret
jne
pop
dec
push
sub
out
daa
inc
pop
and
aas
sahf
mov
mov
test
cmp
lahf
mov
xchg
xchg
in
daa
mov
ret
mov
jae
test
shl
cmc
mov
ljmp
scas
adc
je
ret
mov
insl
sub
in
repz
nop
int
xor
add
jb
push
es
scas
ror
jo
out
mov
and
das
mov
fimuls
xor
loope
lcall
dec
roll
xor
jge
jmp
jl
lods
leave
aam
mov
sub
out
imulb
dec
jbe
stos
rcr
sub
push
outsl
mov
jnp
adc
das
fistps
int
repz
cld
push
push
mov
xor
inc
sbb
jl
xchg
decb
or
dec
sbb
pop
aas
out
cld
fcoms
push
cmp
sbb
xchg
insl
leave
movsb
inc
fbstp
adc
insb
inc
sahf
clc
or
shll
ljmp
subl
arpl
mov
and
sahf
mov
icebp
mov
and
das
sbb
and
lcall
imul
out
int3
dec
daa
test
pop
outsl
adc
int
dec
and
cmp
leave
sbbb
xor
or
nop
popf
mov
cmp
and
faddl
jno
cmpl
push
fldcw
xor
mov
fisttpl
mov
int3
adc
fwait
cmp
cmp
lods
dec
inc
and
and
push
in
test
sub
out
mov
rcrb
adc
int
mov
xchg
mov
xlat
push
and
cmp
aaa
jmp
fimuls
loopne
adc
loopne
mov
pop
sbb
mov
in
das
ret
loopne
int
dec
les
hlt
stc
cld
inc
lods
cli
pmulhuw
addr16
test
out
bound
lods
clc
pop
jae
int3
testb
clc
clc
shrb
push
rcrl
fwait
add
fcoms
jge
inc
sbb
xor
add
lea
lods
sub
test
bound
les
cld
iret
stos
mov
int
mov
adc
dec
mov
pop
fsub
imul
pop
mov
int3
xor
lahf
xchg
dec
xor
mov
pop
enterw
xchg
fidivl
stos
shlb
sbb
shl
sub
cltd
arpl
aaa
rcrl
loope
add
add
iret
testl
mov
pop
movsl
mov
repz
jae
dec
hlt
fs
shlb
call
rol
aaa
push
shl
ret
or
ja
data16
xor
xchg
mov
lcall
or
dec
test
lock
jge
sbb
adc
and
data16
sub
or
hlt
mov
adc
fistpll
jl
dec
xchg
fwait
pop
test
out
daa
mov
or
std
in
push
mov
aad
mov
mov
fdivrp
orb
xor
pop
sbb
andb
sbb
adc
mov
push
outsl
sbb
leave
adc
xchg
jmp
push
sbb
pop
xchg
pushf
out
test
mov
fistpl
std
xchg
xchg
test
or
mov
rcrb
jl
cltd
in
add
sbb
gs
mov
fwait
push
jmp
inc
xchg
lret
xchg
frstor
cli
aam
push
pop
inc
xchg
test
in
push
xor
mov
dec
stos
sub
push
pusha
bound
adc
les
mov
adc
inc
add
dec
xchg
daa
sbb
icebp
dec
ds
aam
mov
xchg
test
xor
pop
aas
fwait
jg
lea
add
push
push
push
cmp
test
adc
adc
cmp
jmp
ljmp
xchg
call
mov
dec
push
push
pushw
pop
loopne
pusha
popa
stc
lods
add
loope
cmpsb
incb
pop
inc
shlb
aad
inc
cmp
adc
push
shll
in
pop
dec
cmp
xchg
xchg
movsl
mov
xchg
mov
gs
imul
stos
sbb
mov
pop
sub
test
pop
mov
jecxz
loopne
sbb
jae
mov
aaa
adc
push
fistpl
or
inc
sub
jo
or
fwait
imul
out
movsl
in
push
insb
outsl
adc
popa
dec
xor
pop
xor
sbb
rol
lahf
pushf
cmp
dec
iret
xchg
lods
ds
push
cmpsl
int
test
adc
dec
mov
sub
aaa
lahf
jnp
mov
cwtl
pusha
cwtl
mov
or
sub
rolb
mov
dec
clc
loop
and
push
sub
push
inc
sbb
or
stos
push
sbb
or
sbb
jle
xchg
jmp
dec
xor
cmpsb
cs
sarl
call
push
sbb
inc
adc
adc
dec
cmp
arpl
cld
pushf
xor
insl
push
stos
test
mov
and
stos
int3
mov
push
sbb
push
out
loope
xchg
mov
mov
mov
dec
dec
jae
dec
lds
or
fwait
data16
xlat
fs
nop
inc
sti
imul
xchg
jbe
adc
xchg
adc
out
mov
insb
cmp
pop
dec
lahf
leave
jb
mov
adc
mov
call
ljmp
sarb
sub
cmp
cld
and
lret
imul
or
enter
iret
leave
test
fnstsw
pop
and
fsin
and
scas
and
or
divl
mov
xchg
mov
inc
mov
cmc
inc
subl
mov
push
ror
pop
jmp
mov
loopne
test
cli
inc
and
outsb
das
pop
and
testl
frstor
or
out
mov
push
aam
dec
push
call
lcall
dec
xor
or
mov
mov
std
sub
pop
pushf
or
ficoml
stos
jbe
sub
cs
mov
xchg
outsb
sub
and
xchg
rorb
scas
adc
lahf
lret
aam
mov
add
loop
ret
cmpl
andb
jnp
fsubs
mull
subb
outsb
jmp
sarb
insb
out
xor
or
cld
mov
dec
pop
jbe
jle
mov
cmp
mov
adc
in
ja
testl
cmp
push
and
xor
push
test
push
int
pop
leave
jl
add
mov
subl
push
push
jbe
imulb
dec
cmc
sbb
jmp
push
and
cmp
or
push
inc
push
mul
sbb
mov
mov
les
push
sbb
pushf
mov
fildl
add
aad
icebp
test
adc
mov
insl
dec
or
hlt
lods
cmpsb
out
jae
adc
test
stos
mov
loop
mov
adc
jle
pushf
ret
popa
sbb
cmp
inc
xchg
test
inc
aam
or
inc
inc
sbb
jbe
sbb
sub
push
lcall
mov
sub
adc
fcoml
frstor
movsl
xlat
or
pop
and
xchg
repz
pop
cmp
dec
adc
xchg
pop
mov
insb
mov
sti
push
inc
out
pop
jb
dec
out
jmp
or
or
mov
mov
inc
lret
leave
loope
mov
xchg
lahf
sbb
aam
sti
fstpl
outsl
in
and
sbb
jnp
jb
jecxz
movsl
sbb
arpl
sbb
or
cmp
adc
cmp
mov
mov
cld
das
dec
add
jb
mov
out
sti
dec
jae
imul
fcmovnu
pop
js
ficoml
inc
lret
xor
push
or
or
roll
xlat
add
mov
or
gs
jnp
add
pop
pop
dec
push
repnz
test
enter
std
mov
add
or
in
rcll
js
int3
cmpxchg
repz
adc
mov
loop
shll
mov
je
sarb
add
inc
loopne
push
fwait
sbb
fidivrs
add
mov
sub
add
fdivs
add
stc
inc
iret
mov
pusha
rolb
xchg
dec
test
mov
cld
shl
aam
or
imul
loopne
xor
pop
or
jnp
movsl
cmpsb
xchg
outsb
sub
icebp
mov
jge
insl
movsl
scas
rcrb
repz
stos
fisttpl
xchg
mov
or
lods
add
scas
cmp
scas
out
loope
sub
xor
sub
pop
push
jbe
leave
popf
js
dec
xchg
mov
fimull
rorb
xor
aam
xor
imul
notl
xchg
mov
icebp
out
pop
out
inc
jae
fldenvs
sbb
xchg
adc
dec
sub
mov
jmp
lcall
mov
call
notb
popf
jne
jge
cmp
jno
popa
push
inc
mov
dec
mov
jle
fstps
or
filds
sub
xor
sbb
xor
fsubs
stos
pop
xor
jge
imul
clc
sub
adc
or
push
dec
rcrl
je
sbbl
shl
or
cmp
fcomps
fmull
hlt
repz
and
outsl
sub
cmp
sbb
cmpsl
cld
inc
push
mov
push
mov
in
xchg
sbb
je
xchg
mov
inc
add
pop
cs
pop
stc
lock
stos
inc
jae
mov
xchg
js
xor
mov
cmpsl
addr16
cmp
scas
jge
incl
xlat
sbb
mov
sahf
call
loopne
push
push
js
add
dec
xchg
imul
adc
pop
lods
xchg
cmp
pop
pop
mov
sahf
mov
popf
pop
out
mov
push
inc
or
dec
in
ror
mov
movsl
cli
ja
cmp
fsubrs
xchg
or
mov
lret
xor
in
outsl
mov
fldcw
rol
pusha
pmulhw
stos
roll
push
pop
fcmovnbe
dec
xchg
xlat
sbb
adc
dec
xchg
jno
incb
push
ficomps
bound
rcrl
and
mov
sub
out
notb
lret
stos
movsl
inc
push
push
icebp
pusha
jo
test
dec
mov
xor
inc
xchg
mov
or
xchg
ret
jnp
and
sarl
loop
jecxz
fistpll
mov
pop
pop
testb
mov
mov
cmp
das
xlat
rcrb
cmpsl
hlt
iret
inc
stos
sub
fadds
cmpsb
mov
shll
in
aad
adc
fcos
adc
movsl
imul
xor
mov
cmp
inc
std
xor
jecxz
lock
sbb
lods
jmp
icebp
lds
push
cmpsb
mov
das
pslld
frstor
andl
or
lods
sub
inc
fimull
pop
or
mov
iret
test
xchg
mov
aam
push
mov
sub
ljmp
loope
leave
mov
cld
push
lcall
cmc
mov
pop
cmp
hlt
inc
mov
push
pop
xchg
push
adc
push
popa
loopne
lret
mov
sub
jp
or
fsubl
mov
push
or
in
push
mov
sbb
js
inc
jae
fadd
push
insb
dec
add
pop
bound
pop
mov
aaa
movsb
repz
dec
scas
scas
mov
pop
cmp
cmp
sub
inc
push
add
mov
inc
pop
cmp
movsb
movsb
lahf
mov
outsb
and
out
add
cmp
jmp
sbb
dec
dec
imul
into
daa
pushf
mov
adc
adc
dec
pop
inc
mov
inc
hlt
jp
shl
jnp
mov
and
ja
sahf
lret
add
xchg
fwait
jge
aad
lds
icebp
jecxz
add
leave
push
mov
xor
mov
insl
jmp
xchg
and
sbb
push
push
adc
lea
aad
jo
xchg
push
lods
aaa
fisubs
mov
icebp
or
mov
pop
jnp
es
inc
test
pop
stos
roll
inc
shlb
ljmp
aaa
push
inc
stos
sbb
and
jmp
add
ljmp
cmpsb
mov
sub
stos
mov
or
sbb
pop
insl
mov
daa
pop
sbb
inc
xor
mov
dec
mov
or
mov
call
jo
or
adc
fisubs
sub
mov
push
addr16
sahf
outsl
call
out
decb
or
pop
stc
or
imul
mov
out
repnz
or
scas
pop
jno
stos
repnz
in
pop
popf
pop
fbstp
mov
sti
sbb
pop
sbb
xchg
add
lods
and
jl
bound
std
sub
ds
jle
pandn
lea
xchg
add
lods
lods
mov
sub
jb
dec
hlt
jg
in
xlat
mov
xchg
das
mov
icebp
add
push
xchg
subl
ret
sarl
ds
pop
xchg
and
pop
xor
stos
jge
dec
mov
inc
fdecstp
fsub
shlb
cmp
pop
jl
mov
lods
dec
test
adc
in
cwtl
pop
das
int3
out
adc
addl
loop
rcrb
push
and
mov
jno
outsb
mov
das
xchg
pop
fstpl
lret
inc
or
pop
jnp
push
shll
dec
jno
movlps
cmpsb
sbb
clc
xor
xchg
mov
lret
loope
inc
aam
iret
stos
mov
jnp
std
leave
jns
stos
outsl
lret
dec
push
xor
sbb
jle
mov
lods
jo
out
rcll
push
jl
sub
outsl
incl
je
fbld
pop
fwait
pop
and
jg
test
in
pushf
lret
in
ljmp
push
ljmp
xor
mov
test
cmp
sub
sbb
or
xor
das
push
add
out
xchg
sub
aam
mov
inc
mov
data16
sbb
jle
jne
and
lock
jbe
and
dec
dec
jmp
int3
add
mov
or
inc
roll
ret
mov
add
mov
xor
adc
fnstsw
jle
push
sub
call
shrl
pop
mov
insl
enter
and
repz
push
push
int3
push
mov
push
pusha
movsl
lods
push
loop
lds
or
imul
mov
mov
add
and
into
sub
and
inc
mov
int
stos
sbb
out
jg
ret
inc
xor
dec
les
xor
mov
and
fstps
nop
push
dec
mov
xchg
mov
ret
inc
mov
pop
andb
jecxz
mov
pop
clc
adc
cwtl
xchg
cli
jnp
push
push
fmull
mov
enter
test
xchg
out
sahf
call
gs
orl
mov
nop
mov
add
pop
pop
and
or
ret
adc
out
sbb
out
mov
xchg
cmc
cmp
inc
cmpsb
into
dec
lea
inc
test
jmp
leave
fnstsw
jmp
sub
fdivrs
sarb
loop
out
repz
or
inc
cmc
add
dec
sbb
jae
ja
mov
imul
ljmp
incl
stc
test
stos
inc
mov
add
jp
jge
pop
dec
loopne
stc
fcomps
movsl
dec
xchg
mov
inc
sarb
cli
cmp
pop
dec
sbb
or
push
data16
jb
in
jb
mov
jp
pushf
popf
push
mov
rclb
call
fwait
insl
pop
ss
sbb
jmp
in
ljmp
insl
xchg
nop
push
in
jmp
stos
divl
mov
in
inc
andl
pop
cmp
xor
fucomip
rcrl
stos
mov
jle
notl
mov
loopne
and
pop
into
adc
and
jns
sbb
jnp
gs
xchg
aad
addl
iret
repnz
mov
nop
in
mov
sahf
pop
push
lods
ficompl
stos
ret
mov
ss
iret
push
and
or
aaa
mov
loope
into
es
add
lcall
scas
fbld
sub
pop
std
or
jle
ret
faddl
sub
adc
popf
xor
sub
nop
insb
cmpsl
adc
ljmp
rcll
push
scas
add
hlt
int3
xchg
incb
adc
xchg
orl
push
fisubrl
fldt
ja
fisttps
insb
mov
or
adc
popa
cltd
int
sbb
popl
jo
imul
mov
cwtl
mov
push
dec
sahf
cmpsl
iret
pushf
iret
mov
jl
aad
nop
test
push
mov
cmc
sti
sub
inc
out
icebp
add
push
mov
cli
jbe
mov
xchg
hlt
pusha
int3
rcrb
jne
sub
push
add
das
fldenv
inc
fsubrs
push
fwait
je
push
rcll
dec
dec
xchg
xor
jnp
mov
sbb
rcl
icebp
sub
cld
fs
xchg
stos
mov
pop
cmp
pop
iret
mov
or
lret
lret
xchg
sbb
in
adc
mov
cwtl
lcall
aaa
fsts
nop
and
in
loopne
and
xchg
bound
inc
insb
setge
rclb
push
cmp
test
popa
adc
mov
sbb
xchg
lahf
pop
and
lcall
mov
jp
push
in
adc
lods
sub
fs
mov
mov
aam
lea
xor
or
pop
and
xchg
sar
mov
xchg
xchg
mov
ret
enter
mov
cmpsb
sub
popf
ret
jl
inc
mov
pop
ss
ficomps
mov
lret
ret
ret
mov
sbb
cmpsl
popf
jg
push
in
and
cmpsb
out
mov
jle
call
pusha
and
inc
ret
jge
icebp
sti
mov
dec
xchg
in
or
xor
inc
ja
jno
mov
adc
popa
ds
mov
mov
fidivrs
sbb
test
mov
out
arpl
sarb
push
lret
sub
dec
inc
out
in
mov
fcmovbe
test
ja
insb
mov
shrl
mov
mov
pop
gs
ljmp
jb
fistps
das
inc
xchg
shll
lods
dec
inc
cmpsb
xor
stos
iret
push
or
sarl
xchg
movsb
lods
push
mov
push
mov
lret
pusha
es
xor
add
jnp
push
inc
out
sti
call
lea
adc
fadds
jmp
xor
jmp
mov
sbb
or
mov
into
in
mov
cltd
cmp
cmp
inc
fidivrs
loope
sti
cmpsb
inc
bound
sbb
jbe
xor
sbbb
pop
cmp
lahf
cmp
andl
loopne
jbe
or
or
inc
je
and
daa
push
push
lods
cmpb
aaa
addr16
adc
sbb
bnd
aam
in
rolb
or
pop
lods
sahf
std
insb
push
xchg
push
outsb
sub
mov
scas
jmp
scas
sub
push
shl
rorl
add
pop
push
sbb
mov
nop
and
pop
std
jae
bound
add
push
sub
arpl
pop
xor
sti
fisubl
push
fistps
pushf
inc
and
inc
clc
stc
push
imul
in
push
sahf
lcall
movsb
jb
sbb
pop
outsb
lock
fidivrs
or
enter
jp
and
out
inc
sbb
mov
lret
push
xor
mov
mov
mov
pushf
movsb
cmp
ror
sub
in
repnz
xor
xchg
lcall
js
sbb
add
mov
fnstcw
mov
or
xchg
mov
call
in
pushf
jle
jns
cmp
fnstcw
pop
xlat
mov
add
or
fmull
xchg
sub
pop
xlat
push
imul
stc
sub
inc
sbb
stc
mov
jb
pushf
clc
test
pusha
inc
mov
adc
repnz
add
jne
in
sbb
test
je
pop
pop
aam
adc
xchg
hlt
jbe
and
mov
adc
scas
fcoms
jmp
in
lods
sti
ljmp
test
scas
mov
dec
hlt
fwait
inc
mov
dec
or
mov
push
pusha
jecxz
fs
mov
mov
cmpsl
xchg
lahf
pop
pop
cwtl
ret
out
stos
ljmp
divb
std
fs
xchg
jl
lcall
xchg
outsb
jmp
inc
in
xor
imul
mov
sub
or
cmpsl
mov
mov
xchg
xchg
sbb
dec
jg
pushf
jb
jae
jns
xor
adc
jp
in
sarl
in
adc
adc
push
cwtl
push
pushf
clc
pop
inc
or
int
mov
push
test
ds
sub
pop
rclb
cmp
xor
arpl
cs
data16
cwtl
cmp
sbb
push
jmp
xor
je
push
mov
addr16
lea
xchg
sub
sar
jno
sbb
pushf
or
pushf
inc
mov
pop
shl
sbb
fists
cmpsl
call
sub
pop
mov
mov
sar
arpl
shr
mov
xlat
popf
jecxz
js
jge
je
push
jbe
test
shl
and
popf
sub
jl
in
imul
sub
out
add
and
stos
jge
mov
and
dec
pop
xchg
jmp
mov
add
push
push
arpl
push
jne
mov
cmc
fs
out
xchg
xchg
cmpsb
push
cmp
imul
mov
hlt
mov
push
jp
cmc
cmp
mov
or
sbb
imul
or
mov
dec
call
adc
stc
je
ss
mov
enter
mov
push
inc
leave
out
cmp
pop
shrb
cmp
push
les
loope
push
and
sarb
xor
mov
les
mov
mov
mov
test
pop
shll
rol
mov
mov
idivb
sbbb
or
and
cld
add
push
dec
mov
sbb
cmpsl
int
push
push
push
gs
mov
fs
sub
cmc
insb
test
pop
lods
or
pop
xor
push
and
mov
fdivrl
shll
adc
mov
das
add
mov
call
mull
rclb
cmp
in
int3
jecxz
call
xchg
jo
cli
js
pop
sbb
push
cld
jmp
aaa
mov
pop
pop
add
popf
and
imul
or
push
cmp
add
aam
and
mov
fdivrs
rcrb
cmp
xchg
and
ret
cmp
adc
jmp
xor
xlat
into
sbb
add
call
push
add
mov
negl
in
aas
shlb
pop
add
es
inc
mov
out
int3
cmp
jnp
aaa
add
mov
sarl
outsl
cmp
pop
mov
mov
pusha
jns
addb
int
fsubs
sbbl
outsl
bound
mov
imul
mov
rorl
add
sahf
xchg
push
stos
es
inc
sub
mov
jns
push
xchg
movsl
rorb
and
jge
out
sub
ret
jnp
ret
fs
inc
sahf
lods
mov
pop
in
adc
jle
jns
xchg
or
lock
push
and
xchg
test
xchg
sbbb
and
jmp
adc
pop
mov
xor
fadd
inc
cmp
mov
xlat
mov
fdiv
mov
pop
mov
cmp
mov
sub
sub
pop
inc
arpl
addr16
pop
jp
call
push
sahf
aaa
push
or
cmp
fsub
shrl
movsl
icebp
jmp
pushf
enter
sbb
or
test
addr16
repz
aam
xchg
sbb
cli
inc
mov
mov
lcall
mov
cld
adc
imul
xor
lret
fidivrl
mov
inc
out
xor
mov
iret
jmp
mov
icebp
sbb
sbb
inc
jge
sarb
and
and
in
aam
test
jo
fidivrs
xchg
dec
lret
or
test
nop
mov
xchg
aaa
xor
or
insl
int3
aam
xchg
push
pop
cmp
nop
adc
rorb
or
pop
jecxz
push
push
fsubr
aas
push
cmp
cwtl
mov
push
rolb
inc
xor
mov
fistpll
xor
pop
movsl
mov
or
dec
fisubrl
jecxz
mov
aas
das
dec
lods
jmp
add
test
pushf
push
xorb
mov
in
jb
mov
mov
imul
xor
mov
adc
fxch
and
rcrb
mov
leave
or
mov
cs
jne
jmp
imul
ja
test
cmp
or
and
or
stc
lods
test
xchg
inc
iret
in
fisttpll
cmc
dec
idivl
mov
mov
orl
pop
shlb
ds
dec
dec
out
mov
mov
jo
mov
clc
test
pushf
mov
cltd
or
rcr
movswl
fs
push
push
inc
mov
mov
repz
add
add
pop
mov
mov
dec
imul
push
add
mov
cmp
jle
or
inc
outsl
fsubs
test
lods
add
xchg
lahf
xchg
dec
insl
les
jne
xchg
aam
call
loopne
push
lretw
daa
or
dec
inc
jp
ffreep
in
sbb
cmpsb
ss
mov
mov
push
and
decb
outsl
push
mov
sti
or
test
lea
imul
add
sbb
je
int
pop
ret
int3
lea
add
and
cmp
sub
mov
pop
or
and
cmp
mov
ret
dec
int3
pop
ret
stos
pop
insb
iret
mov
jne
out
fcomps
fsubrl
adc
xchg
mov
or
mov
outsb
mov
fisubl
dec
stos
push
movsb
pop
movsl
int3
cld
jne
shl
dec
xchg
inc
push
dec
inc
imul
cmp
ficomps
xchg
mov
push
lret
or
pop
adc
daa
out
adc
dec
sub
pop
mov
xchg
lahf
sbb
or
jle
lock
pop
sub
and
push
outsl
test
push
mov
es
roll
daa
jbe
setge
pusha
adc
shrb
dec
mov
lret
cmp
stos
cmp
pushf
xchg
sbb
inc
cmp
xchg
xchg
dec
enter
fdivrp
fsubl
inc
add
or
push
add
inc
lcall
or
sub
fcmovne
mov
cld
in
mov
ja
mov
loope
das
mov
stos
inc
sbb
imul
fmuls
sarb
daa
mov
bound
fildll
xchg
popa
jns
push
jo
enter
cmp
jg
mov
leave
shrb
sti
in
jmp
cli
mov
repz
adc
icebp
jmp
mov
cwtl
nop
mov
mov
gs
rol
jmp
pop
ret
rorb
or
cmp
out
inc
je
jmp
cmp
xchg
push
out
mov
sub
sub
jo
std
testl
aaa
das
imul
push
js
std
mov
add
jno
mov
daa
mov
je
int3
sahf
lahf
and
enter
mov
xor
test
ja
and
push
mov
pop
xchg
mov
push
dec
sbb
pop
inc
mov
sbb
mov
cmpsb
scas
jp
lods
push
pop
cwtl
pop
lret
adc
pop
insb
dec
clc
and
roll
cwtl
pop
add
cwtl
pusha
mov
push
mov
jne
push
lret
cmp
mov
cmp
add
scas
ljmp
cmp
es
adc
je
mov
adc
outsl
inc
hlt
inc
imul
jns
mov
or
lods
or
or
xor
push
addr16
cmp
popa
jne
and
jnp
repz
fldl
cmp
xor
add
fmul
aaa
jne
adc
fsubrs
jg
pop
ret
jecxz
fistpl
sub
mov
adc
jl
lcall
push
mov
pop
xor
into
add
jg
pop
push
call
mov
lahf
leave
cltd
mov
sbb
js
into
or
adc
or
fidivrs
mov
pop
imul
push
xchg
fcomps
mov
daa
das
mov
loop
mov
adc
ja
test
xor
push
sahf
add
mov
adc
sbbb
sub
int
subl
push
inc
jo
mov
push
stos
xchg
lock
std
pushf
push
movsl
mov
xor
dec
jle
sbb
data16
js
fs
int3
xchg
ret
add
ljmp
inc
cmpsb
lret
pop
mov
lcall
sbb
fwait
pop
imul
pop
adc
orl
sbb
stos
xacquire
xchg
in
sub
sbb
xchg
or
cmpsl
inc
in
mov
mov
jbe
mov
fnstsw
clc
pop
push
rcpps
xchg
sub
mov
sbb
ret
popa
mov
xor
cmp
aas
pop
jbe
xor
aad
fiaddl
into
xor
xor
leave
cwtl
popa
xchg
sub
mov
push
fistpl
lret
addb
lods
xchg
test
mov
repnz
dec
cli
pop
dec
pop
push
add
mov
sbb
sbb
cmp
ja
dec
inc
push
inc
lahf
pop
lods
and
xor
dec
maxps
int3
adc
xchg
stos
ss
cmpsl
icebp
call
mov
xchg
pop
jg
push
lds
push
or
outsb
dec
and
mov
cmp
enter
mov
pop
add
lahf
xor
inc
cmp
aam
cs
in
iret
pop
jne
andb
out
loope
loopne
lret
or
cmc
or
stos
sbb
or
cmpl
cwtl
add
and
pop
or
fstpl
out
mov
das
add
adc
mov
mov
xchg
jo
repz
cmp
adc
out
add
int3
stos
push
mov
pop
rol
fstpl
rorb
adc
dec
xchg
fstl
sbb
push
inc
cmp
and
mov
ja
jge
or
push
sub
pop
popf
sbb
sahf
roll
sahf
push
test
and
mov
push
aas
xor
push
test
lock
sub
call
lock
inc
in
outsl
scas
cli
cltd
mov
xchg
dec
andb
cmc
ficoms
add
push
cmp
test
cmp
outsb
data16
ljmp
cld
pop
rorl
out
cmpsl
cmp
dec
xchg
mov
cmc
mov
in
mov
cmp
xor
mov
sahf
add
repz
pop
sahf
or
std
int3
scas
xchg
inc
incb
or
push
hlt
loop
movsb
dec
push
mov
xlat
xchg
inc
push
imul
pop
int3
mov
dec
push
pop
nop
cmpsl
pop
sbb
cmp
add
lea
pop
adcb
jg
fisubrl
repnz
je
mov
loope
push
jl
rcrb
lea
adc
imul
scas
out
in
push
push
inc
imull
adc
daa
in
aad
and
xchg
mov
push
shr
sub
mov
inc
call
push
mul
popf
cli
push
rolb
or
jg
dec
leave
fwait
jne
cmp
cmpsb
shrl
jbe
into
jo
xchg
adc
movsl
adcb
push
inc
dec
jecxz
pusha
lcall
or
mov
add
loopne
dec
je
xor
xchg
inc
xor
dec
nop
cmp
imul
aaa
aad
cwtl
jmp
dec
js
push
rclb
cmpb
pop
ret
dec
nop
sbb
call
roll
push
ret
cmc
and
dec
ja
pop
pop
and
scas
adc
inc
xor
shll
sub
cwtl
popf
aas
mov
jl
jns
ljmp
dec
daa
add
daa
ret
repz
cmp
fcmove
lcall
nop
lock
jnp
xchg
repz
sub
fdivr
in
flds
pop
dec
pop
or
pop
sahf
scas
mov
scas
xchg
fsts
test
mov
inc
iret
pop
mov
mov
push
arpl
mov
jns
int3
lret
sbb
jmp
push
xchg
mov
repnz
test
lods
sub
fidivl
out
mov
sbb
mov
cmp
imul
mov
dec
std
fcomps
mov
pushf
repnz
mov
xchg
imul
adc
int
fcom
mov
les
cmp
adc
addl
lahf
mov
sub
or
pusha
jmp
xor
jb
and
mov
es
xor
jbe
mov
test
and
dec
aad
jne
lcall
iret
lret
and
idivb
int3
popl
sub
decb
mov
inc
fbstp
push
push
and
mov
xor
mov
aam
adc
shrl
mov
mov
dec
mov
pop
sub
and
popa
in
or
fildll
sub
mov
jb
dec
daa
lods
imul
data16
test
sub
dec
jno
mov
out
clc
pop
dec
scas
pop
test
cmp
cmpl
pop
hlt
jg
test
test
mov
repnz
pop
cs
lods
cmc
ds
mov
cltd
jbe
sbb
push
test
call
sub
test
fistps
or
ficoml
repz
push
out
jg
aam
dec
je
std
inc
or
push
inc
and
adc
cltd
aad
aaa
sbb
mov
rolb
mov
inc
clc
pop
jae
adc
adc
push
mov
and
jl
sbb
mov
cmp
push
xor
add
push
push
xlat
mov
jg
add
inc
aad
xor
insb
add
shrb
rclb
insb
sub
sub
lea
push
add
sub
mov
enter
fstl
sbb
mov
iret
cmp
jne
aaa
pushf
js
inc
lods
in
or
jnp
popa
fdivl
push
fldcw
call
ja
test
xor
daa
iret
jmp
rol
jbe
or
pop
adc
in
add
pop
mov
xchg
addr16
popf
xor
pushf
repnz
insl
jmp
pop
pavgw
adc
xor
ret
and
or
xlat
in
xlat
ljmp
cs
jecxz
mov
popa
lea
and
sbb
rcr
jl
mov
xor
pop
aad
repnz
call
jo
ret
and
mov
popa
lcall
sbb
inc
fcompl
mov
fdivp
push
into
pop
ficoms
pop
data16
add
or
and
out
jg
cmp
sti
sbb
xchg
das
addr16
scas
icebp
sbb
xor
int3
rorb
xchg
mov
pushf
inc
mov
addr16
sbbl
out
sub
out
daa
pop
mov
iret
insb
jns
mov
mov
push
test
mov
inc
mov
mov
xchg
iret
shrb
pop
adc
rclb
adc
push
push
sbb
push
mov
flds
mov
fsubp
lahf
ja
push
xchg
mov
mov
add
in
cmp
adcb
mov
jae
mov
and
lcall
shlb
fucomi
stos
mov
cmpsb
loope
popa
inc
cli
inc
and
dec
loop
cltd
into
push
gs
int
jns
dec
pop
lret
ret
mov
divl
bound
fucomip
mov
mov
lds
lock
pushf
xchg
addr16
hlt
inc
cmpl
fs
movsl
movsl
xchg
xchg
shlb
xor
les
call
das
jmp
stos
sbb
cmp
xor
jne
and
loope
out
jno
push
cld
or
mov
push
outsb
int
mov
lds
or
cmp
adc
and
ret
xchg
stos
fistpl
lock
hlt
das
lea
loopne
jmp
lea
stos
cmp
loope
pop
stc
or
sbb
adc
insl
dec
adc
and
popf
cmc
test
subl
pop
xchg
jecxz
cltd
inc
test
popf
jo
adc
adc
je
ret
ds
scas
cmp
insl
add
and
jb
ja
inc
lea
mov
cmp
nop
dec
adc
jae
and
lods
fcoml
mov
outsl
inc
mov
lahf
stos
repz
outsb
and
fdivs
push
int3
xor
test
fnstsw
dec
rcr
push
push
adc
add
das
mov
cmpsl
leave
jno
das
sbb
cs
mov
push
out
jmp
jo
push
push
shlb
popa
leave
repz
mov
cmc
ret
aaa
mov
push
mov
insl
or
jl
mov
pop
pusha
cli
repz
lea
sub
insb
sub
xor
jae
popf
cs
or
js
fadds
jl
inc
xchg
scas
pop
fadds
xchg
hlt
adc
sub
js
or
in
sub
out
mov
movsb
cmpsl
lahf
and
rcr
rol
lea
push
clc
test
negb
fidivrl
sbb
adc
or
dec
iret
jmp
sarb
out
outsb
mov
push
sub
dec
pop
dec
xchg
inc
xchg
daa
mov
mov
pop
or
lret
idivl
xchg
jbe
js
idiv
or
int
jecxz
bnd
dec
xlat
jle
pop
popf
jg
xor
dec
jns
jno
add
fldt
call
pop
sarb
adc
and
xchg
fisttpl
sti
mov
jmp
sub
mov
push
mov
push
incb
sbb
out
cli
cwtl
dec
subb
jo
lret
mov
adc
add
leave
jbe
inc
in
inc
dec
mov
xlat
cmp
ret
adc
outsl
mov
push
and
add
fsub
inc
mov
outsl
xchg
test
mov
sub
bound
xor
xchg
add
sub
add
cmp
add
out
inc
adc
adc
shrl
rcr
sbb
mov
xchg
adc
adc
subb
aam
cmpsl
jae
push
stc
cmp
in
jp
arpl
popa
sbbb
repnz
lret
jno
sub
mov
adc
shlb
pusha
mov
push
mov
leave
test
into
in
jns
movsb
out
hlt
cwtl
push
xchg
popf
xchg
mov
ret
adc
xor
aas
xor
popf
jp
or
int
or
clc
jno
mov
adc
push
pop
add
jl
add
adc
lret
dec
loope
pop
adc
shll
sti
fidivrs
inc
fs
js
popa
aad
sahf
add
jl
shll
insl
fsubrs
cmc
imul
or
fwait
pop
cmp
stc
shlb
popa
mov
mov
push
mov
bound
jecxz
cwtl
pusha
lods
xchg
js
pop
push
loop
push
mov
jbe
jb
loope
mov
stc
call
push
out
jmp
insl
push
fwait
mov
jnp
push
mov
mov
inc
loop
mov
push
lcall
sub
enter
into
scas
inc
push
xor
leave
pusha
xor
sub
mov
in
mov
in
aad
adc
cli
mov
cld
dec
fdivrl
pushf
cmpsb
lret
lods
pop
imul
pop
mov
rcrb
insb
fs
xor
push
cmc
mov
jmp
std
insl
sets
xchg
jno
outsl
inc
mov
sbb
jg
jmp
je
negl
into
inc
out
or
jecxz
movsb
dec
stos
push
or
and
adc
and
lcall
mov
cwtl
mov
xchg
divb
sub
repz
mov
push
ljmp
das
jbe
add
dec
xor
sbb
sub
test
dec
mov
test
hlt
repz
push
xchg
popf
mov
ljmp
in
lret
rcrl
orl
lcall
cmp
out
test
or
stos
add
sbb
pop
and
push
idivb
dec
nop
pop
divb
push
pop
xchg
mov
mov
push
out
ja
arpl
and
push
mov
mov
mov
les
mov
jecxz
pminub
jmp
in
cli
out
dec
pop
push
in
and
inc
data16
cmp
sti
mov
add
aaa
ja
je
mov
fiadds
xchg
jae
aas
jne
push
sti
rcrb
jbe
or
sbb
gs
test
aas
jp
sbb
xchg
cmp
rcr
mov
cmp
test
mov
fldenv
xchg
sub
lods
inc
ret
movsl
dec
pop
add
push
dec
sbb
mov
cltd
mov
xor
adc
xchg
xchg
mov
jp
lods
or
inc
jge
insb
xchg
lds
idivb
int
xchg
fsubp
loopne
gs
cmpl
sub
fdivl
outsb
xchg
inc
xlat
pop
sarl
stc
cmpsb
shll
and
add
cmc
out
push
test
jne
jle
mov
inc
lret
lret
aaa
wrmsr
pop
push
in
or
push
gs
test
push
mov
mov
pop
mov
xchg
in
bound
push
fdivp
and
stc
and
inc
or
dec
bound
jmp
or
gs
mov
imul
das
mov
sbb
xchg
js
fwait
in
xchg
int
ds
rorb
mov
add
test
add
cmp
xor
mov
fistpl
ret
lea
cmp
ret
out
dec
xlat
or
jp
inc
xchg
or
bound
add
ss
adcb
jbe
cltd
stc
mov
mov
lock
mov
jo
fucomip
mov
push
pusha
mov
mov
js
cli
stc
int3
cltd
insb
out
xchg
jno
sub
push
incl
lcall
ret
mov
pop
jp
subl
pop
push
insl
jecxz
ret
daa
push
in
fstpt
into
jno
sti
call
jo
sbb
pop
mov
insb
shrb
jge
pop
mov
push
jb
rclb
insl
sbb
mov
lret
sbb
shlb
dec
xlat
xor
push
jge
push
movsb
cld
loopne
and
pop
dec
imul
mov
push
test
movsb
mov
imul
fidivl
mov
xchg
adc
cmp
insb
push
dec
enter
sub
push
iret
es
repz
fiaddl
dec
mov
xchg
inc
jmp
cwtl
pusha
shll
int3
stos
adc
jo
fwait
icebp
xor
jae
jl
jmp
or
repnz
jae
cmpsb
rol
test
enter
jb
inc
pop
imul
lods
iret
leave
cltd
bound
loopne
add
cmp
repz
jl
and
sub
adc
mov
out
xor
pop
cmp
or
maxps
sbb
fsubl
push
dec
mov
jae
add
xor
es
shlb
in
mov
adc
mov
mov
cmp
jnp
jns
movb
dec
data16
inc
xor
jecxz
in
scas
sahf
dec
iret
jl
pusha
sar
notb
mov
popf
mov
mov
cmp
adc
das
sbb
pusha
inc
ljmp
sbb
jbe
mov
js
popa
std
inc
push
sbb
cli
jbe
cmpsb
addr16
push
sub
std
lock
lret
rcrl
mov
xchg
dec
mov
testl
cmp
sub
roll
mov
aas
scas
gs
into
aam
outsb
call
lock
and
pop
ljmp
sbb
leave
adc
mov
and
jb
dec
outsb
jp
inc
pop
stos
push
mov
fisubrs
popa
add
pusha
push
sbb
enter
and
es
adc
xchg
enter
js
mov
jle
int
in
lds
jbe
jmp
insl
outsl
add
add
out
fs
std
xchg
sbb
movsl
mov
adc
mov
sbb
gs
ret
movb
notl
rclb
cltd
cmp
ds
and
mov
mov
sbb
test
or
leave
jl
aam
cmp
imul
mov
cmp
test
mov
sub
mov
and
lds
dec
jnp
movsb
fnsave
push
cmp
dec
mov
inc
inc
fwait
test
sbb
xor
repnz
mov
jg
nop
cmpsb
outsb
sub
stc
add
xchg
fcompl
mov
xor
push
inc
dec
sarb
inc
jae
xor
push
js
add
lods
sbb
mov
pusha
xchg
cmp
stc
stos
nop
mov
pop
sbb
outsl
fs
sub
sahf
repnz
pop
out
icebp
mov
cmpsl
xorl
pop
push
push
in
cld
jmp
push
outsl
int3
inc
pop
bound
rclb
inc
jecxz
cmp
jge
jo
push
inc
int
enter
notb
testl
cmp
js
xchg
push
sub
push
out
imul
mov
inc
push
push
fs
cld
int
push
adc
leave
sub
inc
popf
adc
out
mov
dec
aaa
or
pop
lcall
xor
rcrb
jg
push
in
mov
test
push
movsl
mov
out
fimull
mov
dec
pop
xor
mov
stos
inc
data16
test
sub
addr16
cli
or
popa
clc
lret
pop
call
gs
mov
cmc
push
dec
pop
sbb
fwait
jbe
loope
mov
subl
pushf
add
rorl
fimull
xchg
xchg
mov
cmp
push
in
out
push
mov
jb
jge
inc
jge
mov
lret
gs
jle
pop
lcall
pop
cltd
mov
iret
xchg
testb
ss
in
scas
jmp
xchg
out
sub
adc
jne
push
aaa
jmp
aaa
push
and
movsl
push
js
iret
pop
leave
sub
repz
cmp
push
xchg
and
push
inc
dec
xor
test
ss
mov
push
ret
mov
jo
and
movsb
in
pop
add
sub
and
leave
negb
sub
lock
and
dec
dec
and
outsl
ds
adc
adc
cmc
lods
pop
cmp
push
adc
lds
mov
jne
mov
cmp
fwait
outsl
pop
jmp
xchg
pop
jg
pop
sub
adc
cmp
xchg
mov
add
jo
pop
push
jecxz
sahf
fdiv
imulb
adc
stos
das
adc
add
xchg
xor
push
ja
push
ss
ljmp
lret
inc
cmp
cmp
sahf
adc
aaa
adc
pushf
mov
in
sub
push
dec
fldt
mov
xor
or
jbe
loope
mov
frstor
inc
mov
or
hlt
adc
pop
add
mov
lea
jecxz
push
out
fmul
rcrl
push
inc
add
xor
pop
arpl
push
in
ja
push
and
adc
sub
cs
cmp
out
fucom
rolb
pop
mov
cmp
aam
dec
call
mov
cmp
shll
call
mov
jo
or
mov
movntq
out
dec
push
pop
out
gs
xchg
mov
lods
xchg
inc
pop
and
lret
cmp
push
popf
lock
ds
into
cmp
imul
push
aam
call
push
rorb
cmp
cmp
daa
fldcw
fs
xchg
dec
fdivl
mov
daa
inc
stos
jb
les
scas
lods
adc
pushf
xlat
mov
xchg
enter
cmp
aad
mov
arpl
fmuls
cmc
repz
test
push
mov
mov
sbb
or
dec
pop
mov
mov
lds
outsl
cmc
jnp
inc
pop
and
jo
lock
mov
andb
jns
push
test
mov
or
jp
out
cmp
cmp
sub
lock
arpl
insl
mov
popf
ret
popf
and
pushf
into
jno
scas
adc
mov
adc
in
jae
pop
jns
sahf
notb
rcrl
xchg
or
aaa
scas
cltd
xchg
xchg
out
cmp
subb
scas
sahf
lods
call
fwait
push
sub
mov
jns
push
inc
and
cld
jle
mov
add
mov
mov
adc
ret
insl
fdiv
vmovaps
fs
popf
out
inc
divl
or
dec
ss
xchg
jmp
rep
sbb
jg
jbe
push
mov
lret
daa
sub
add
and
and
mov
mov
dec
mov
mov
mov
xchg
data16
ljmp
lock
push
cmp
sub
mov
and
scas
adc
mov
fisubrs
add
xorb
pop
sub
mov
out
push
ret
cmp
mov
adc
fs
popf
push
mov
ret
pop
push
mov
mov
jecxz
push
loopne
mov
cmp
adc
sti
lret
cs
test
ljmp
xor
xlat
jg
int3
inc
scas
bound
cmp
stc
and
mov
and
adc
pop
pop
dec
xlat
sub
iret
add
je
inc
add
pop
sub
sti
dec
orl
mov
cli
fistpl
xlat
out
xchg
or
cltd
jnp
push
cs
hlt
or
sub
xchg
xchg
mov
enter
jne
mov
arpl
adc
mov
scas
inc
mov
lock
mov
pop
or
insb
cmp
rcr
insb
mov
movsl
mov
outsb
jecxz
xlat
xchg
lahf
and
clc
mov
mov
rclb
lcall
jns
pop
xor
xchg
mov
pop
lock
pop
inc
repz
aas
out
adc
sbb
loope
icebp
dec
jae
dec
imul
xchg
fxch
mov
ffreep
and
addr16
push
shl
ret
addb
fidivrl
fwait
call
sub
adc
mov
sub
sub
and
pop
jne
test
push
loopne
dec
bound
sub
dec
push
xchg
cltd
cmpsl
jae
pop
sbb
jmp
inc
or
cmc
lret
cli
loopne
enter
lods
xor
xor
mov
dec
dec
test
mov
sub
fdivrs
inc
jp
xchg
imul
mov
push
lods
mov
pop
lea
mov
mov
out
loope
xchg
xchg
add
push
icebp
rclb
ss
inc
mov
and
lock
les
in
jae
rcl
int3
xchg
jnp
call
push
and
pop
scas
push
jnp
push
xchg
cmpsl
stos
pop
fwait
push
push
hlt
mov
adc
mov
cmpsl
sahf
sub
shlb
cmp
pop
outsl
mov
clc
pop
test
test
add
fcoms
mov
add
nop
dec
inc
mov
jns
mov
test
jae
cld
adc
inc
mov
fadds
popf
jmp
push
gs
push
mov
jp
pushl
push
nop
call
cmp
jo
push
stos
push
bound
lahf
ds
pop
cli
jmp
lret
xchg
jmp
mov
inc
cs
lahf
mov
orb
fidivrs
xchg
xor
test
fldt
outsb
inc
mov
jb
add
out
iret
sbb
jg
in
iret
enter
shl
sbb
xor
cmpsb
mov
cmp
push
mov
xchg
pop
mov
hlt
sbb
in
stos
call
pusha
in
pop
mov
adc
and
bound
and
leave
into
inc
int3
inc
mov
jp
ss
addr16
imul
call
imul
stos
jae
xor
ret
pop
push
stc
cmp
call
cltd
mov
adc
nop
push
xor
mov
and
jb
stos
fwait
xlat
out
push
pushf
push
and
dec
cmpl
adc
dec
add
mov
into
scas
lea
pop
cmp
add
xchg
aam
cmpl
xor
inc
jp
shll
mov
mov
cmp
mov
fbld
or
add
outsb
inc
xchg
adc
add
lcall
adcl
mov
lret
or
aam
in
cmpsl
es
fwait
pop
pusha
pop
xor
jg
imull
sahf
lock
dec
mov
fadds
push
and
dec
fstpt
pop
lahf
mov
pusha
xor
push
mov
xor
bound
ds
ret
rcr
out
or
dec
shll
jo
pop
cmpsb
mov
nop
stos
or
sti
jmp
std
imul
repnz
jbe
dec
or
or
xor
fnstsw
sarl
pushl
fstpt
sub
jnp
sub
gs
and
inc
mov
fmuls
in
fmull
dec
push
dec
in
cmpsb
loop
xchg
xchg
push
and
xor
mov
add
mov
movsl
mov
fildll
cli
notb
insb
fisttpl
xor
scas
inc
lahf
jns
and
ficomps
cwtl
pop
in
add
push
or
lods
je
movsb
out
sub
jecxz
inc
xor
sbbb
or
xchg
aam
and
in
fstl
leave
pop
scas
int3
push
iret
push
adc
adc
insb
fcompl
cmpsb
lds
or
mov
pop
imul
jae,pt
pop
adc
and
psrad
addr16
push
repz
xlat
dec
into
leave
das
je
dec
lock
ja
add
dec
xchg
mov
insl
ljmp
xchg
mov
addl
cmp
xchg
or
in
insl
dec
out
mov
cwtl
adc
imul
out
out
push
pop
in
adc
std
cltd
mov
out
in
movsb
dec
fdiv
push
cltd
push
les
jno
mov
push
sarb
ret
shrb
mov
fldcw
cmpsb
mov
add
ret
xlat
mov
add
push
aaa
fmull
sbb
jmp
ja
cmpsl
test
sahf
sbb
sub
insl
xor
sbb
popa
xchg
dec
xchg
lret
aaa
cs
mov
xor
rol
ja
enter
xchg
pusha
lahf
int
sbb
cmp
sub
push
movsb
or
rep
sti
pop
out
jae
shll
xchg
cmp
add
pop
not
add
jmp
shl
xorl
mov
inc
jns
mov
lret
cmp
mov
dec
or
pop
mov
xor
jecxz
push
cmc
xchg
mov
mov
jbe
iret
mov
sub
xchg
clc
fxam
hlt
cltd
mov
call
leave
imul
js
jecxz
and
add
mov
fcoms
shlb
pop
out
jg
lods
ljmp
lcall
mov
sbb
dec
jns
and
xor
mov
test
mov
mov
test
and
arpl
xlat
nop
sbb
out
pushf
repnz
loope
js
lcall
xor
and
test
dec
addr16
push
mov
add
pop
fidivs
jmp
jne
mov
cmpsb
adc
mov
and
nop
icebp
mov
sahf
mov
outsb
add
stos
pusha
sub
in
add
dec
adc
in
lea
xchg
adc
inc
mov
add
cmp
push
jno
mov
popa
mov
loop
and
mov
test
out
mov
dec
jmp
jg
cmp
lcall
lods
mov
int3
gs
push
fsts
aas
ror
mov
loopne
sbb
sbb
push
push
mov
stos
jecxz
ret
or
repnz
dec
adc
add
inc
pushf
imul
sahf
jl
stos
call
bound
or
ja
popl
push
repz
mov
rcrl
mov
cmpsb
mov
sub
andl
ds
sbb
shr
jmp
fs
in
nop
sub
sarl
lea
rclb
dec
pop
lods
adc
mov
sbb
das
in
clc
mov
outsb
lds
gs
mov
mov
daa
jge
mov
xor
xchg
je
jns
jb
xchg
mov
sti
test
test
push
je
sti
adcl
mov
xor
and
push
adc
mov
popa
sbb
aas
mov
and
ss
pop
pop
xor
aam
mov
rcll
test
xor
or
js
int
fwait
ret
or
mov
sub
lcall
add
fdivrp
movntq
xor
lods
mov
les
js
xchg
jo
ja
stc
xor
xchg
cmpsb
push
push
lods
mov
das
leave
scas
adc
dec
incl
adc
sbb
repnz
cmpsb
add
gs
and
int
or
je
es
fbld
push
cmc
cmpsl
dec
popl
mov
jbe
pop
insb
mov
loop
rorl
loop
dec
inc
sbb
pop
stos
or
push
ds
push
cli
cli
sub
mov
sbb
jl
lret
scas
add
jnp
loop
bound
andl
jmp
push
jno
mov
dec
int
or
adc
pop
pusha
xchg
mov
pushf
and
adc
int
cmpsl
pop
incb
mov
rorl
lahf
sarl
out
or
mov
cs
addl
mov
loope
mov
mov
mov
aam
add
int
rolb
cmp
jl
add
cltd
xor
cs
in
mov
mov
mov
out
shlb
lock
leave
and
cmpsl
movsl
sub
push
and
test
lahf
adc
sub
ficompl
adc
push
leave
stos
xchg
mov
inc
in
out
sahf
shll
cmp
stos
cwtl
fldt
or
bound
or
add
sub
cmc
js
dec
xor
scas
loope
mov
mov
lea
push
or
push
sub
enter
and
adc
xchg
test
add
pop
inc
popf
testb
aad
inc
mov
push
xor
xor
out
cmpsl
jbe
stos
mov
add
lret
jns
mov
bound
sub
mov
xor
popf
pusha
shlb
test
jp
xchg
dec
cltd
es
pop
dec
mov
mov
out
adc
ss
js
and
insl
into
in
fsts
lea
arpl
test
pop
or
je
dec
dec
sbb
aaa
rcrb
lds
add
inc
nop
mov
jb
aad
test
mov
repz
xchg
mov
sbb
xor
aas
lea
fidivl
dec
mov
add
mov
fcoml
add
jae
or
dec
adc
mov
adc
stos
inc
pop
xchg
jnp
inc
push
fcoml
mov
lods
jno
mov
movsb
out
stos
add
cmp
add
jo
mov
les
jecxz
mov
cmpsl
mov
cmp
mov
das
and
into
ja
xchg
lods
xchg
in
and
fdivs
fsubs
scas
call
pop
pop
adc
les
xor
fisubrl
xor
push
aas
in
pop
jl
mov
shl
adc
in
xchg
add
pop
sahf
adc
lret
jae
pushf
add
jne
daa
push
rcll
xor
inc
pop
dec
xor
fldenv
sub
xchg
mov
int
mov
jns
call
push
cmp
jbe
mov
mov
rcrl
fisttps
ja
test
loopne
and
imul
lock
add
push
or
cmp
lcall
insl
fidivs
sbb
int3
in
xchg
jge
fisttps
sub
jg
dec
push
pop
cmp
pop
pop
xlat
xlat
mov
push
pop
jns
cld
push
outsl
cmc
push
popf
iret
cmp
mov
fcoml
scas
add
fwait
cwtl
inc
or
adc
sbb
sub
setbe
add
adc
cmp
rorl
sbb
inc
mov
adc
outsb
and
add
cmp
mov
daa
loopne
popf
xchg
dec
addr16
mov
push
lock
xor
mov
pop
xor
inc
lea
cmp
mov
mov
adc
ret
mov
cmp
sub
imul
cmp
add
fmul
ret
inc
out
stos
call
out
jmp
scas
cmp
and
es
out
scas
xchg
add
jne
movsb
push
cltd
stc
fdivrs
pop
adcb
push
pop
loop
fdiv
or
lods
daa
jae
cmp
inc
pop
jge
cli
movups
andl
mov
fistl
leave
adc
jg
jno
les
jns
adc
ds
popa
flds
or
test
sub
jbe
sub
mov
xor
iret
mov
mov
loope
dec
lret
sub
lret
outsl
sahf
xlat
add
mov
inc
push
or
inc
ds
out
loope
mov
mov
adc
xchg
and
mov
jecxz
outsl
pop
cmp
add
mov
repz
icebp
push
lret
lock
cmpsl
add
dec
movl
in
das
jl
xlat
xchg
push
sbb
orl
mov
loope
arpl
xchg
fisubrl
into
mov
icebp
lret
out
sbb
inc
push
push
mov
fcomip
lods
idivb
mov
push
fcmovnb
lods
and
and
or
dec
cmc
inc
int
test
popa
mov
add
sub
jl
or
call
sbb
les
fiadds
xor
ljmp
lods
test
ljmp
lret
insb
loop
aad
cwtl
cld
jbe
cwtl
loope
hlt
arpl
xor
dec
clc
and
mov
cmpsl
or
aam
fistpl
jno
mov
jnp
fadd
jecxz
dec
cmpl
cli
mov
lds
mov
stos
xor
mov
in
daa
push
and
mov
shl
shrl
mov
test
sub
sub
subb
loope
pop
jecxz
pop
pop
aas
mov
jmp
pop
sbb
sbb
mov
jmp
stos
jne
xor
rcll
inc
add
mov
loope
lahf
push
dec
mov
in
popf
mov
sub
js
mov
stos
lret
xchg
and
in
mov
push
fdivrl
xor
adc
xor
pop
in
or
lret
adc
push
dec
mov
push
cmp
ret
js
xchg
cmp
js
pop
in
inc
cmp
jmp
arpl
mov
outsb
add
out
adc
imul
push
push
pop
xor
scas
dec
pushf
inc
fidivs
xlat
inc
adc
and
add
adc
fisttps
iret
dec
cltd
jmp
aaa
js
add
cmpsl
repnz
iret
fnstcw
xchg
jg
add
into
jmp
mov
add
mov
in
mov
daa
or
fsubrs
and
jmp
push
sub
inc
push
adc
out
sbb
pop
pop
lds
jle
test
repz
push
pop
sub
add
mull
push
mov
repz
mov
mov
lds
fwait
gs
mov
lds
loope
bswap
and
shrb
xchg
bound
pop
aas
dec
lret
test
in
or
cld
and
ret
dec
dec
sahf
jb
inc
xchg
ss
jle
adc
iret
lcall
loope
or
push
and
mov
jecxz
stos
notb
inc
add
inc
pop
adc
mov
add
shr
dec
pop
stos
dec
rorl
mov
mov
cmc
pop
inc
mov
jmp
lods
pusha
mov
cmp
or
inc
pop
and
xchg
jne
pop
mov
cmpsl
scas
popa
loopew
sbb
dec
cmpsb
xchg
insl
rcrl
or
fisubrl
pop
out
jmp
cmp
shlb
mov
jge
xor
cmpsb
cs
xor
movsb
data16
popw
dec
cmp
dec
xchg
mov
les
ja
das
test
aaa
push
inc
mov
jbe
cli
into
into
mov
dec
xor
fistpll
push
mov
adc
cmpsb
shrl
in
cwtl
loope
mov
arpl
cmpsl
jne
shlb
push
fsubrs
sahf
aam
insl
inc
test
js
loopne
push
jp
and
xchg
fisttpll
xor
pop
cmp
inc
mov
or
and
bound
fcomi
mov
in
sahf
cs
mov
cmp
test
or
dec
dec
call
ja
into
sbb
add
divl
pop
cmc
loope
inc
cmp
rol
mov
rcrl
xchg
pop
jl
and
xor
mov
inc
xlat
aam
int3
or
repnz
shlb
cmp
lcall
scas
dec
sub
jmp
add
push
push
adc
stc
pop
outsl
pop
sbb
sbb
flds
cmp
jmp
imul
xchg
lret
jmp
loope
out
mov
test
push
push
bound
fwait
mov
jmp
rclb
out
stos
jg
cs
sar
push
imul
lea
arpl
mov
add
push
mov
adc
jne
insl
aam
fisttpl
aad
out
mov
pop
pop
xchg
test
xor
jp
pusha
mov
push
add
dec
fwait
pop
ljmp
pop
and
jno
ret
jl
lea
cs
inc
sarb
dec
mov
jnp
outsb
lcall
push
mov
sti
pop
icebp
aad
paddd
pop
jl
ljmp
in
stos
xchg
fucom
std
xor
int
mov
jnp
adc
pop
xchg
xor
jge
push
ret
push
pop
enter
adc
dec
dec
sbb
push
jns
decl
scas
xchg
add
gs
xlat
clc
push
lds
ror
je
rol
in
xor
push
jmp
pop
fistl
pop
mov
push
or
jge
bound
jecxz
fstp
inc
inc
mov
pop
ret
in
bound
sbb
add
daa
sbb
xchg
loopne
dec
dec
mov
jb
aas
and
fnsave
mov
push
ret
nop
push
subl
es
cmp
test
mov
xlat
aaa
pop
repz
mov
out
imul
ficompl
aad
mov
repz
psllw
pop
sahf
arpl
cmp
imul
jns
movsb
mov
jb
push
dec
daa
cwtl
add
pushf
jne
cmc
mov
xchg
and
xchg
loope
sti
sahf
in
push
lds
ficoml
popf
loop
out
nop
cmpsl
fdivp
sbb
movsl
test
je
dec
lahf
add
and
stc
fcmovu
fcomip
inc
movsb
les
test
movsl
inc
cmc
adc
cltd
shrl
mulb
jge
sbb
sbb
add
dec
popa
popf
icebp
lock
scas
aad
mov
xor
mov
hlt
adc
push
add
repz
scas
jns
sub
mov
pop
stos
fistps
insl
ret
cmp
jnp
stos
adc
in
inc
inc
cs
hlt
imul
add
inc
daa
mov
mov
sbb
cmp
mov
xor
xchg
sub
mov
insl
pop
adc
lock
push
jb
inc
into
jl
lods
repnz
das
mov
dec
lods
pusha
pop
mov
cmp
mov
out
cmp
hlt
mov
outsb
inc
scas
sub
mov
add
jmp
add
xor
pop
xlat
xchg
push
into
fisubs
in
sub
sahf
in
sbb
movsl
dec
or
js
jcxz
mov
sub
add
pop
orb
pop
mov
sti
stc
xor
mov
adc
movsl
xor
mov
jmp
ret
stos
sbbl
jbe
arpl
xchg
pop
fsubl
cmp
dec
fbstp
lea
div
push
mov
dec
inc
push
std
stos
es
and
mov
pushf
add
mov
inc
insb
sub
and
mov
mov
xor
push
in
inc
pop
mov
xchg
pop
mov
sub
stos
push
movsl
push
mov
icebp
testb
mov
mov
xchg
or
decl
jecxz
lea
add
sub
or
shl
mov
mov
mov
mov
cmp
xchg
test
test
movl
sub
mov
lods
fldl
movsl
in
pop
jg
insl
sti
in
mov
pop
push
cwtl
pop
xchg
jg
jge
xchg
xchg
test
jae
mov
lea
or
test
jl
pusha
fcoml
sbb
es
mov
mov
je
lea
in
jle
add
or
push
mov
or
lds
movl
mov
pop
out
stc
icebp
add
or
pop
decb
jns
mov
dec
sbb
or
roll
inc
movsb
xchg
mov
aad
sub
je
negb
cmp
clc
jae
dec
ds
movb
mov
cmpb
test
fld1
push
je
add
stos
ret
jb
mov
and
notb
movsb
dec
sbb
addr16
or
mov
adc
add
frstor
hlt
mov
adc
push
xor
icebp
cmp
jae
push
lock
xchg
add
das
xchg
les
mov
cwtl
les
mov
push
hlt
jns
jge
jnp
ljmp
xchg
iret
add
lods
pop
test
push
in
lcall
fimuls
xchg
data16
push
repnz
adc
ret
movsl
test
popa
dec
pop
rclb
jp
lds
pop
pop
insl
push
mov
and
incl
sub
pushf
ljmp
push
call
hlt
lahf
shrl
fiaddl
stos
xor
mov
jmp
das
or
dec
fdivs
dec
cmp
push
cli
inc
add
popf
cmpsb
mov
adc
arpl
andb
cmpsl
xorl
jbe
popa
in
dec
in
jns
movsb
jno
fdivs
pop
inc
mov
stos
test
lret
dec
or
dec
push
cmp
insb
les
icebp
lret
dec
sti
adc
in
dec
rcr
sub
cmc
fnstcw
mov
xchg
jl
add
jns
or
xor
icebp
jmp
sbb
push
xchg
jl
push
jno
cmp
cmpb
cs
xchg
mov
outsl
or
mov
mov
mov
add
sub
push
es
cmpsb
sbb
xlat
dec
nop
mov
mov
pop
std
pop
xchg
sbb
cmp
push
lret
xchg
das
push
repnz
xchg
adc
xor
pop
idivl
mov
test
arpl
lds
push
pop
adc
jle
je
lret
mov
scas
jne
sahf
xchg
jbe
gs
scas
add
inc
sbb
mov
popa
outsb
mov
in
cmp
clc
outsl
jo,pt
ja
adc
push
cld
js
cmp
out
mov
pop
add
out
add
cmp
cli
mov
test
repnz
pop
icebp
stos
pushw
std
lret
mov
xchg
ljmp
jl
pop
repnz
dec
jl
push
stos
test
mov
fldl
test
outsb
dec
into
addb
repz
cmpsb
arpl
xchg
gs
jb
xor
xchg
mov
insb
cld
imul
popa
das
in
in
mov
push
test
lcall
out
jge
cmpsb
int
mov
mov
cs
stc
sub
hlt
scas
into
lock
dec
int
aad
mov
lods
jae
clc
test
mov
xor
add
ret
jne
pop
cmp
pop
ret
pop
data16
ss
in
repz
arpl
loope
dec
leave
add
bound
nop
fwait
lods
mov
insb
dec
dec
mov
lret
sbb
pop
in
or
pop
push
aaa
xchg
mov
faddl
mov
dec
xor
cmp
out
pop
or
push
aaa
pop
push
push
lret
idiv
fbstp
fcomps
mov
xchg
out
jo
in
sub
add
sbb
mov
pop
shlb
cmp
xchg
je
and
cmpxchg
fistps
push
xchg
add
push
mov
rcrb
bound
aas
xor
or
pop
into
es
fwait
dec
sbb
das
andl
lcall
dec
jb
movsl
and
mov
lcall
clc
sub
out
pop
mov
add
inc
push
xchg
and
call
sub
add
cmp
shl
jne
jp
mov
push
js
clc
jno
clc
aad
inc
aas
and
sub
mov
inc
jbe
sbb
mov
mov
xor
adc
xlat
mov
pop
js
add
std
divb
push
out
xor
lret
sub
js
aas
loop
nop
cmc
mov
ss
pop
loop
push
cmp
jg
cmp
idivb
imul
popa
bnd
cmp
pop
push
test
dec
dec
add
ret
xchg
mov
ret
jno
jle
mov
adcl
dec
xlat
xor
addr16
fdivr
and
dec
push
push
pusha
pop
and
mov
add
fistpl
rorb
jne
lea
testl
push
cmp
call
imul
mov
dec
mov
ret
mov
xchg
pop
and
test
dec
divb
add
lahf
mov
and
int3
movsb
sbb
daa
dec
in
test
mov
mov
enter
adc
nop
mov
pusha
pop
ljmp
dec
nop
or
pop
sarl
and
stc
aad
icebp
xor
add
mov
push
xor
stos
jg
sub
mov
movsl
stos
cmp
mov
sub
mov
mov
mov
sbb
ja
stos
inc
orl
add
std
or
jp
call
xchg
test
mov
adc
mov
scas
arpl
shlb
jno
mov
adc
leave
mov
xchg
push
into
std
add
icebp
rcll
dec
pop
pop
sub
push
adc
movsl
loopne
xor
cmpsb
repz
mov
jp
cwtl
call
cmpsb
push
adc
cs
sbb
mov
push
mov
stos
aaa
out
pushf
fsubp
sub
sbb
mov
stc
inc
push
cli
lret
hlt
test
test
fildll
inc
jo
stos
xchg
inc
out
je
les
push
clc
xor
orl
mov
inc
xor
push
addl
mov
push
jno
xor
push
cmp
scas
outsb
pusha
test
inc
out
aad
xchg
sbb
clc
dec
into
adc
aas
dec
out
jb
in
inc
cltd
push
and
jg
ds
add
jmp
mul
fisubrl
nop
fdivr
mov
adc
ret
jns
and
push
ljmp
shrb
mov
cmp
ja
inc
and
outsl
mov
inc
adc
je
mov
popa
xor
rcr
pushf
xchg
rcrl
dec
or
and
imul
mov
shrl
repnz
fnstcw
push
lahf
jmp
stos
push
lcall
adc
lret
fs
std
mov
aas
cs
cmpsb
aad
lea
fsubs
sub
out
inc
jmp
shrb
add
stos
test
cltd
stos
xchg
dec
sub
or
gs
jo
lds
push
push
sti
mov
sub
lret
adc
and
movsb
xchg
add
dec
jo
cmpsl
sbb
add
out
mov
pop
dec
xchg
pop
aas
mov
hlt
xor
sbb
test
add
sub
or
fcom
mov
andl
add
mov
sbb
js
jl
add
cmp
cli
out
into
ret
and
push
lods
xchg
fsts
movsl
adcl
jmp
sahf
lock
loop
mov
push
push
jnp
sbb
cmp
xchg
xor
repz
in
leave
mov
xor
sbb
fiaddl
xchg
xchg
mov
lods
sub
mov
and
outsl
mov
adc
mov
mov
aas
in
and
jle
sahf
cli
hlt
ret
pop
leave
sar
and
mov
adc
mov
aas
fldl
lret
cli
or
lahf
mov
push
out
pop
cmp
loop
sarl
scas
mov
adc
rcrl
mov
cmpl
mov
test
int3
and
sti
mov
fisttpll
repz
push
xchg
lods
sub
xchg
mov
pop
mov
dec
lret
pop
add
sub
inc
rcrb
jno
jp
clc
mov
arpl
rclb
pop
sbb
mov
int
cwtl
ret
or
jge
mov
addb
xchg
and
inc
mov
call
jmp
icebp
and
dec
mov
add
or
ficoml
movsb
mov
sti
je
sub
jecxz
inc
leave
dec
fsubs
in
sbbb
call
cmc
fs
arpl
mov
dec
sub
and
fucom
rorb
pop
in
add
jae
xchg
and
or
ss
addr16
and
cmpsl
sbb
push
inc
les
fwait
adc
loope
jmp
loop
jg
add
sbb
cmp
call
or
popf
cmpsl
adc
test
jne
testb
sti
xor
cmp
xor
lock
loope
add
jle
sahf
mov
arpl
add
scas
dec
std
mov
fs
jl
mov
repz
ljmp
in
sbb
jmp
in
in
pop
out
sti
fdivl
movsl
neg
dec
sbbb
sahf
and
dec
jp
mov
xchg
scas
jge
ss
xchg
cltd
pop
mov
imul
frstor
cltd
cmp
lcall
pop
lret
ret
sub
cmp
push
dec
dec
shll
push
mov
clc
mov
sti
adc
push
aaa
pop
movsl
mov
push
ss
mov
sub
in
sarl
lds
mov
dec
cmp
mov
mov
std
xor
inc
out
jmp
push
addr16
add
dec
testb
push
movsl
fsub
rcrl
out
adc
inc
and
inc
iret
xchg
ficompl
push
cmc
imull
bound
push
les
pop
xchg
and
test
test
insb
shrb
test
xor
add
fs
ds
leave
addr16
adc
hlt
icebp
arpl
dec
mov
in
cmp
ficoml
ss
sub
or
mov
push
inc
sbb
add
out
dec
adc
out
shrl
inc
aas
jmp
pop
pushf
mov
mov
add
sbb
fdivs
mov
lret
ss
and
jl
and
lret
push
jg
cmp
dec
outsb
in
add
int
push
mov
pop
dec
in
clc
cmp
ds
lret
push
test
cmc
pop
sub
inc
jecxz
push
aad
sbb
mov
aad
fidivrs
adc
adc
or
sub
inc
push
sbb
xchg
lcall
test
sub
movsb
mov
lea
lea
mov
mov
rclb
pop
jecxz
cmp
dec
addr16
out
js
sub
adc
in
adc
jnp
dec
push
pop
push
ljmp
sahf
sbbl
js
add
stc
inc
pushf
test
repnz
ret
call
in
cmp
push
int
sti
shr
jb
sub
lods
adc
xchg
outsl
bound
cmp
test
fidivrl
jbe
sahf
outsb
jns
aam
js
sub
pop
mov
push
loope
push
xchg
out
pop
add
mov
popl
test
pmovmskb
push
push
outsb
xchg
loope
jae
xor
ret
fidivl
jo
movsl
std
iret
test
divl
mov
out
or
or
dec
inc
pop
adc
out
or
cwtl
push
push
or
insl
sbb
jl
pop
jne
push
out
inc
int3
dec
loop
adc
sub
inc
ficoms
mov
inc
sbb
mov
lcall
dec
jg
dec
sti
cmp
jge
or
fs
loopne
adc
sbb
inc
insl
mov
imul
fcoms
adc
mov
fimull
mov
mov
add
mov
add
subl
jle
push
dec
xchg
and
rol
mov
jns
sub
xor
into
push
or
rcrl
das
fisubs
add
or
pop
mov
cltd
and
orl
jl
es
ret
in
and
pop
dec
lock
in
sbb
stos
adcl
inc
aaa
lods
js
mov
pop
scas
out
xchg
mov
xchg
add
inc
xor
jp
push
loope
adc
cmp
in
scas
jmp
push
adc
fwait
jne
jb
stc
ficomps
aam
adc
pop
and
jp
fs
sub
test
fld
shll
add
cli
fsubrl
sub
push
xor
pushf
inc
fcmovbe
mov
jnp
push
hlt
mov
fistpll
leave
arpl
xlat
movsb
adc
cmpl
push
aam
push
cli
shrb
sub
dec
outsb
add
or
popa
push
add
pop
jne
cmpsb
fwait
sbb
mov
sub
jg
fwait
inc
dec
or
jp
dec
pop
pop
or
out
mov
cld
shl
mov
xor
int
int
push
loope
lods
push
stos
in
inc
xor
mov
mov
dec
cmp
add
pop
iret
jbe
scas
mov
xchg
jg
or
or
jo
insb
push
or
hlt
or
pop
pop
loope
js
aas
cmp
subl
pop
cmpsl
cltd
mov
call
inc
das
cmp
and
popf
in
mov
cmpsl
xor
pop
minps
gs
cmp
inc
imul
icebp
rorl
lea
mov
popa
pinsrw
stos
sbb
mov
or
int
test
inc
in
sub
mov
push
jecxz
sbb
cld
jo
mov
jno
sbb
cmp
xchg
adc
mov
mov
inc
ss
jmp
aas
jmp
xor
les
pop
jo
popf
cwtl
sbb
xchg
js
jl
pop
xor
nop
das
push
xor
idivb
pop
and
sub
mov
rol
adc
test
rorb
xchg
push
pop
leave
push
cmpsb
insb
bound
push
mov
out
dec
lock
mov
movl
cwtl
jp
clc
mul
add
addl
jmp
jne
repnz
dec
pop
rorl
cmp
shll
jle
lret
dec
xor
notl
sti
add
mov
subb
addl
mov
mov
daa
nop
xchg
popa
inc
pop
into
or
xor
sub
jle
sub
inc
repnz
push
rcll
cmp
pop
out
bound
addl
push
add
sbb
jns
mov
push
call
fucomi
jg
sbb
mov
cmp
push
push
mov
test
shl
in
add
cwtl
fisubrs
add
fisubrs
mov
xchg
xor
clc
adc
inc
aad
data16
mov
inc
cs
add
aas
fcoml
test
nopl
idiv
cmp
jae
subl
sahf
mov
mov
imull
sbb
jae
cmp
nop
or
xchg
outsb
jle
cltd
cwtl
movsl
jle
jmp
xchg
gs
sahf
in
rclb
mov
fdivrp
mov
cmp
lret
ja
mov
test
lahf
or
add
push
lret
fs
lcall
insl
out
dec
pop
push
sbb
inc
xor
into
jg
and
andl
clc
xor
enter
int3
jno
add
xchg
cmp
fs
mov
jmp
mov
out
addr16
adc
jns
lret
and
mov
inc
dec
idivb
idivb
sub
lret
push
mov
mov
adc
xor
addb
push
subb
outsb
int
aam
xchg
xchg
xchg
pop
push
pop
rcrb
and
mov
out
adc
push
imul
xor
fs
and
inc
jae
inc
jg
pop
mov
in
jb
cs
mov
fnstsw
xor
mov
push
repnz
mov
cmp
add
mov
stos
mov
dec
pop
rorl
push
imul
mov
cmc
arpl
lds
push
mov
mov
dec
adc
or
xchg
js
jp
repz
mov
sub
xchg
xchg
dec
sbb
mov
ja
mov
loop
outsl
gs
nop
pop
in
sti
inc
and
push
adc
into
fmulp
pop
div
add
and
loop
mov
adc
lock
jge
shr
call
gs
scas
sub
jg
sub
rclb
mov
push
scas
lea
movsb
out
mov
int3
sub
pop
jns
pop
jg
and
insl
leave
mov
int
das
add
and
cmpsb
sbbb
dec
and
sbb
add
iret
mov
mov
xchg
push
fldt
jecxz
mov
xor
sbb
movl
inc
push
subb
and
div
mov
and
adc
ss
in
lods
js
mov
icebp
push
cmp
mov
scas
and
ljmp
movsl
pop
daa
popf
cmp
pop
outsl
push
cmp
xor
push
movsb
into
adc
and
out
mov
rorl
dec
test
jl
push
inc
shll
mov
xchg
or
jbe
add
arpl
out
sub
data16
pop
sbb
out
cmp
xor
aaa
pop
movsb
pop
leave
jb
mov
jl
mov
pusha
pop
cld
subb
shr
rcrb
dec
addr16
in
adc
fs
fs
mov
loopne
adc
pop
xor
or
mov
icebp
push
pop
cmp
adc
in
mov
and
lcall
jg
out
cmp
imul
out
push
adcb
xor
cmpsb
das
repz
sbb
add
xor
js
mov
jge
or
mov
adc
add
iret
xor
daa
mov
mov
xor
mov
mov
jnp
insb
xor
sbb
xor
mov
add
pop
ret
stc
mov
jl,pn
out
call
fistps
mov
rcr
lret
mov
repnz
add
inc
dec
cwtl
loope
loope
dec
mov
loope
dec
aaa
shrl
scas
cli
movsl
aad
inc
add
out
js
push
scas
mov
lock
loopne
adcl
ds
jae
fs
mov
and
adc
or
mov
adc
mov
pop
fsubrp
dec
jle
add
mov
cmpsb
imul
adc
cld
jno
lcall
gs
call
jge
out
add
lods
and
inc
and
and
pop
mov
enter
xor
ss
outsb
xlat
cmp
stos
xchg
shr
dec
mov
inc
pop
cmp
andb
inc
xlat
mov
stos
rolb
lcall
frstor
pop
push
subl
aam
jecxz
notb
mov
fldt
and
mov
test
cld
push
lods
sub
movsl
add
adc
or
call
jmp
lods
arpl
sub
aaa
mov
sbb
ret
mov
xchg
lcall
hlt
mov
outsb
movsl
inc
test
imull
pop
mulb
sbb
test
int3
imul
pop
rcr
or
test
dec
lret
stc
lret
sub
arpl
jbe
pop
jae
outsl
sub
imul
push
mov
sbb
flds
mov
je
xchg
lock
sub
xchg
sbb
push
popa
int3
jecxz
loope
hlt
mov
push
movsl
inc
cmc
lret
stc
xor
imul
cmc
add
lret
adcb
push
xchg
sub
fnstenv
cmp
xchg
into
cs
addr16
insb
add
int
xor
sbb
movl
lahf
or
hlt
out
inc
or
xchg
cmpsl
lods
mov
imul
cmc
sbb
or
or
dec
xor
xchg
ficomps
out
cld
fdivs
jle
enter
mov
xchg
jl
test
push
jmp
dec
adc
push
xchg
add
adc
dec
sti
pusha
dec
mov
mov
or
cmpsb
out
dec
xchg
mov
fimull
jo
scas
cmp
sti
out
pop
fstpt
lods
adc
shrl
mov
cmp
nop
stc
js
mov
fnsave
cmp
mov
jge
adc
decb
es
pop
pop
test
adc
jne
sbb
mov
adc
sarl
lds
in
dec
int3
int
pop
popa
mov
pop
push
push
lods
ret
ds
fprem
int3
inc
cld
fildll
push
cltd
cmpsl
add
mov
loopne
xlat
fs
mov
inc
push
push
or
sub
dec
lds
test
notb
xor
lods
sub
cmp
adc
icebp
data16
or
push
push
sahf
mov
push
sahf
mov
gs
pop
adc
and
inc
popa
jmp
in
cmp
xor
sbb
icebp
scas
rcl
scas
xor
repz
fucomip
stos
stc
push
subb
pop
push
daa
adc
xlat
push
jl
push
popa
mov
push
shll
loope
stos
bound
mov
pop
orb
pop
lret
test
pop
dec
test
in
lcall
dec
mov
in
push
insl
movsb
mov
push
jmp
outsb
fucom
sub
sub
push
mov
nop
out
inc
jo
filds
imul
mov
imul
movsb
sahf
in
sbb
popf
sub
lods
pop
mov
xchg
sbb
rol
lods
xor
jo
pop
push
adc
enter
adc
jo
scas
in
and
add
scas
adc
mov
clc
aas
sbb
pop
mov
or
scas
fdivl
add
push
xchg
lea
fisubl
loop
jno
pop
outsb
jg
fwait
es
adc
mov
and
mov
aas
cwtl
lods
pop
movl
mov
add
cltd
mov
mov
inc
add
rorb
mov
repnz
cmp
aaa
adc
sbb
aaa
push
cmpsb
negb
sbb
cmc
cli
jmp
and
fs
push
sbbl
cltd
xchg
popf
mov
dec
mov
les
push
hlt
push
gs
shrl
jmp
or
jl
mov
xlat
cmpsl
out
dec
inc
cmp
adc
pop
xchg
test
pop
dec
pop
inc
jge
pop
outsb
mov
xchg
mov
mov
into
mov
jl
lcall
shl
ljmp
or
xchg
ja
insb
xor
loopne
sub
das
mov
jle
mov
cmp
jle
mov
inc
in
xor
sbb
cld
int3
mov
xor
test
and
out
add
lods
cli
ljmp
scas
xor
jmp
notb
mov
negb
mov
jmp
inc
es
movsb
and
cmc
leave
sub
hlt
fisttpll
or
dec
push
add
and
lock
pop
xchg
lret
daa
pop
inc
xor
enter
inc
fcoms
mov
sbb
add
outsb
cmp
movsl
adc
test
jnp
cmp
out
mov
mov
sbb
jge
andb
sbb
cmp
ficoms
mov
adc
mov
pop
shlb
push
add
fimull
jge
push
add
mov
into
js
inc
aad
xor
jnp
pop
int3
jno
nop
cmp
insb
and
movsl
dec
pop
test
or
pop
lcall
rcr
mov
push
arpl
mov
fcom
mov
sbb
shrl
jne
jp
add
and
mov
ret
sti
stos
fs
pop
sub
sbb
iret
mov
in
daa
add
sub
jl
cmp
test
inc
jne
dec
sub
insl
adc
pop
adc
clc
or
push
push
inc
repz
mov
fnsave
insb
mov
mov
xor
xor
rorb
clc
dec
mov
mov
repnz
mov
adc
ja
jl
shll
inc
lahf
jno
xor
stos
outsl
pop
mov
sar
popl
fs
ds
and
daa
sti
pusha
int
ss
push
icebp
mov
lock
jecxz
outsl
mov
rorb
les
sub
dec
imul
fwait
rcr
iret
cmp
ja
push
pop
sarb
lret
call
pop
bound
adc
daa
pop
daa
push
cmp
push
sub
pop
lds
stos
xor
inc
arpl
test
sbb
jp
fwait
pushf
and
cld
push
cmp
add
mov
mov
ret
jne
sbb
push
aaa
shl
sarb
mov
lds
in
arpl
fs
mov
movsl
jg
ds
sbb
mov
xor
mov
mov
mov
sub
out
divl
inc
inc
aaa
js
incb
stc
mov
daa
xor
or
mov
icebp
add
test
sbb
sub
mov
lret
bound
pop
push
inc
loope
mov
mov
mov
and
jne
mov
pop
mov
outsb
lret
push
lods
rcrl
mov
data16
call
out
lcall
xchg
xchg
xlat
pop
fisttps
jbe
xchg
cmp
jg
fcmovne
mov
adc
orl
inc
cmp
push
movsb
push
cs
cwtl
bnd
xchg
adc
clc
push
inc
scas
mov
enter
jg
mov
inc
lock
or
fcmovnu
call
jns
ror
mov
das
fcoms
xor
ja
mov
mov
or
cs
aas
loop
lcall
test
sarb
cmpb
sbb
sub
fdivrs
and
lods
pusha
das
clc
adc
jle
loopne
test
adc
push
ficomps
cld
ljmp
cmpsl
jne
mov
xchg
cld
decb
mov
or
orl
and
mov
lds
addr16
jmp
xchg
jg
inc
fwait
pop
inc
xor
inc
ret
dec
jmp
jg
pushw
pop
jg
pop
in
sahf
jb
insb
and
call
mov
and
rolb
dec
jp
scas
mov
jae
jmp
inc
cmpsb
xchg
push
mov
faddl
mov
lock
cli
mov
mov
push
xchg
clc
andl
cltd
imulb
insb
int3
pop
imul
sbb
sbb
dec
sbb
popf
sahf
sbb
idivb
sbb
fmul
sub
lea
in
rcrb
sarb
sub
jnp
gs
jmp
outsl
repnz
orl
sub
rcrb
call
cmp
push
scas
adc
xor
iret
aas
cs
cmp
test
mov
add
cmp
or
mov
xchg
or
gs
js
sub
lods
ror
or
fwait
test
std
data16
test
loop
mov
pusha
in
popa
lods
negl
inc
mov
cmp
pop
and
pop
test
jle
cmp
mov
stc
jecxz
push
jmp
xchg
jae
and
andb
aaa
inc
imul
add
addb
mov
and
pop
xlat
jb
jae
xchg
std
loope
pop
pop
push
pop
mov
cwtl
cltd
sub
sub
ja
aas
hlt
jle
pop
into
lods
cmpsl
insl
lret
fldenv
sbb
stc
and
filds
jecxz
cwtl
cmpsl
and
rclb
sti
xchg
call
inc
incl
or
lret
fildll
ds
mov
mov
nop
sub
inc
pop
out
insl
and
lahf
into
lods
mov
pop
inc
jb
aad
mov
or
shl
sub
pop
out
or
mov
pop
push
dec
inc
rclb
test
push
adc
pop
jne
mov
ret
jb
movsl
sub
push
es
jb
jne
aam
xchg
mov
jno
cmp
loopne
cmp
xchg
addr16
add
repnz
jmp
movb
mov
add
xchg
pushf
jle
or
pushf
mov
mov
bound
pop
xor
loop
shll
je
xchg
mov
xorl
sub
test
arpl
scas
push
filds
clc
fnsave
jnp
les
addr16
mov
fnstcw
movb
lods
call
lret
imul
aaa
xlat
fwait
inc
out
cmp
in
dec
xchg
mov
mov
shrb
pop
mov
out
cmc
ds
dec
inc
negl
aad
inc
xor
or
dec
jo
cmp
mov
jne
push
daa
xchg
xchg
shrb
fstpl
pop
dec
lret
or
dec
clc
or
or
imul
enter
mov
ja
jne
xchg
mov
push
test
rorl
jb
push
sub
out
inc
pop
pop
adc
mov
cmpsb
arpl
or
sbb
sub
mov
pop
call
fwait
xchg
cmp
dec
push
sub
pop
pop
std
clc
cmp
and
push
jae
mov
jnp
xchg
addr16
mov
adcb
daa
ret
mov
or
push
adc
add
subl
int
cmpl
xchg
ss
loop,pt
js
mov
in
scas
cmp
and
pop
xchg
loopne
xchg
adc
jle
jp
loopne
mov
aad
aaa
push
int
leave
dec
enter
cmp
sar
lcall
xor
pop
mov
aam
jecxz
push
fisttpll
or
push
bound
inc
cmp
or
daa
test
dec
inc
ja
xlat
movsl
lahf
out
pop
jne
pop
xchg
mov
mov
and
or
sub
jbe
test
rcr
dec
stc
inc
imul
and
movsl
fisubrs
lret
rcrb
jl
push
sbb
add
xchg
sysret
dec
xchg
das
xor
add
jge
testl
jb
mov
adc
je
in
mov
mov
mov
mov
outsl
adc
push
fs
ds
stos
rclb
jecxz
test
add
cmp
scas
loop
xchg
sarl
sahf
xor
icebp
mov
jle
xor
xor
xor
push
jge
inc
xchg
xor
jmp
dec
mov
aas
inc
popf
movb
je
mov
dec
xchg
repz
popf
and
fcmovnu
ret
ret
or
fiadds
mov
icebp
int
rclb
pop
adc
or
inc
popf
repz
rolb
sbb
repz
mov
cs
sbb
shll
stos
dec
jns
inc
hlt
ljmp
mov
cmpsl
imul
int3
out
and
repz
push
pop
loop
int3
xchg
lds
dec
cmpl
or
xor
vpcomuq
ret
xor
or
imul
insl
pop
pop
in
ret
pop
loope
sbb
adc
pop
loope
bound
xor
pop
out
cltd
jmp
scas
add
cmpsl
dec
fimull
cwtl
and
ret
mov
in
inc
jne
daa
add
imul
add
sbb
inc
loopne
ja
cmp
xor
mov
mov
nop
jns
mov
into
cmp
sub
cmpsb
cmp
push
jo
sbb
and
in
je
push
pop
in
or
popa
pop
xor
ja
push
push
jle
clc
pop
cli
icebp
pop
inc
jne
jg
rcl
add
jmp
jmp
add
push
mov
lcall
cmc
fs
scas
push
mov
popf
xchg
jo
sahf
cmp
orb
sub
xorb
dec
fst
cmp
dec
xchg
aam
in
scas
push
fsts
jp
imul
cs
aas
scas
aad
test
aaa
and
mov
cmp
xchg
stc
rcl
loope
imulb
cmpb
mov
rcrb
lret
and
js
icebp
or
daa
cmp
addr16
sbb
fs
rorb
fldl
xchg
sub
mov
xchg
add
jae
into
mov
aaa
sbb
les
sbb
inc
push
ss
fldl
add
scas
jmp
cmc
push
test
inc
lahf
lea
and
add
test
jbe
insb
lcall
push
dec
dec
mov
xchg
mov
popf
xor
pushf
mov
int3
ret
loopne
popf
popf
mov
ljmp
sub
xchg
mov
mov
push
outsb
insl
inc
cmp
das
sub
inc
sub
aaa
insl
das
js
fistl
jb
cs
icebp
push
movsb
out
mov
push
imulb
clc
xchg
add
jns
and
mov
xchg
icebp
cmp
repnz
inc
push
mov
dec
sub
es
lea
fsubs
pop
fdivrs
jp
push
push
inc
pop
push
movsl
sub
pop
add
mov
in
adc
or
enter
mov
pop
mull
fstps
les
loopne
push
sub
pop
iret
loopne
dec
ja
repnz
pop
xor
xor
mov
popa
call
insl
jo
ja
mov
leave
mov
shlb
mov
out
mov
or
movsb
cld
orl
mov
push
fcmovne
iret
push
out
push
sbb
push
int
cld
fimull
dec
xor
sub
bndstx
or
push
stos
xlat
lret
push
sbb
jmp
in
imul
insl
rcll
dec
adcl
ss
pushf
or
jecxz
arpl
inc
push
int
out
pop
dec
jmp
leave
add
or
cmp
lods
std
push
lret
fsts
call
shll
inc
dec
jae
inc
pop
cwtl
les
rorb
inc
push
xchg
test
dec
mov
jae
mov
imul
insl
jl
imul
sub
imul
das
lret
int3
push
mov
je
mov
xchg
arpl
or
outsl
and
pushf
stos
nop
scas
inc
lret
add
inc
pop
xchg
cmpsb
pushf
dec
outsl
lea
das
mov
rolb
sub
push
sub
cltd
pop
jge
xchg
mov
aad
inc
dec
and
gs
int3
mov
sub
test
xor
arpl
dec
ljmp
daa
mov
dec
adc
jne
inc
out
fldcw
or
mov
xchg
mov
push
pop
insb
mov
repz
and
inc
dec
jno
dec
xchg
dec
mov
cs
push
xlat
jg
xchg
dec
aas
sub
jo
or
mov
xor
js
clts
movsl
mov
mov
sahf
jg
es
add
rcrb
pop
bound
pop
or
inc
cmpsl
and
outsl
push
insl
test
test
scas
clc
imul
das
sarb
or
roll
out
outsb
xlat
shll
shr
jb
push
or
std
add
jne
push
inc
sbb
gs
mov
test
and
push
fcomp
push
or
repz
mov
fxch
scas
scas
inc
sub
pop
sti
sbb
ss
cmc
inc
andl
shr
insl
rclb
mov
or
sbb
ljmp
jl
push
cmpsl
idiv
jle
or
out
pop
xchg
jle
push
jg
inc
inc
test
xor
add
push
cmp
rep
add
scas
js,pt
or
mov
cmp
fcoml
mov
xor
jmp
lret
imul
sbb
sbb
mov
jecxz
fists
lds
add
loop
ljmp
push
pop
and
mov
cmp
xor
gs
mov
mov
push
jp
and
add
rorb
xchg
cmp
jl
into
aam
mov
lds
mov
ffree
daa
ja
movsl
push
inc
fcmovnb
jnp
jmp
pusha
dec
std
incb
test
into
sbb
cmp
or
xchg
cmp
mov
je
movsl
mov
adc
or
mov
sub
add
sbb
jne
cmpsl
pop
movsb
dec
jmp
jge
jno
fidivl
mul
pop
pop
xchg
call
lock
into
adc
and
pop
in
mov
loopne
scas
cltd
in
fsubs
lahf
aad
jle
sbb
sbb
mov
xchg
outsl
pop
enter
rcl
insb
faddl
iret
mov
lcall
lea
adc
outsb
mov
adc
scas
jnp
stc
or
lods
cmp
jl
dec
sub
pop
clc
xorl
cltd
adc
aaa
jbe
lea
cltd
mov
rclb
in
sbb
sub
out
orl
mov
xchg
cli
popf
cmpsl
or
in
hlt
push
dec
or
cmp
leave
inc
fldl
push
popf
jno
push
or
addb
insl
loope
aam
lret
test
ljmp
xor
jge,pt
rcrl
loopne
repz
push
pop
jp
enterw
adc
pusha
xlat
stos
push
inc
mov
push
add
or
dec
lret
xchg
push
pop
orb
lcall
dec
dec
add
and
idivl
dec
dec
std
xor
push
or
decb
mov
or
lcall
sbb
push
in
sub
rorl
cs
rcr
ljmp
in
cltd
fdivl
fsubp
xchg
jge
pop
popa
push
lods
mov
or
push
push
ss
sub
out
or
add
in
mov
pop
test
mov
repnz
sahf
test
dec
into
sbb
in
sarb
xchg
cld
jbe
ljmp
rorb
sti
dec
sub
xor
sub
sbb
mov
popa
je
fwait
test
and
add
int3
fisttpl
push
loop
or
mov
sti
adc
orl
dec
mov
lea
lahf
test
aam
cmp
or
rorl
jmp
or
add
sbb
dec
cltd
popl
les
and
shll
out
out
popa
jecxz
fadd
outsb
add
out
xor
das
filds
pop
cmp
inc
movsb
inc
mov
mov
loop
sbb
xor
cmp
add
pop
jecxz
cmp
mov
inc
add
lea
adc
jg
cmpsl
pushf
mov
sbb
leave
or
add
stos
cld
and
lea
xor
push
add
sti
pushf
pop
adc
call
and
adc
or
pop
cmpsb
or
adc
push
push
mov
in
mov
or
jmp
sub
clc
xor
int3
gs
mov
cld
jno
inc
jecxz
shl
sti
fbstp
mov
or
sbbb
dec
mov
lods
cmp
imul
cmp
jecxz
fsubl
adc
sbb
mov
cmp
imul
jge
cmp
sub
mov
pushf
aas
sbb
ja
repnz
xchg
cld
test
aad
dec
sbb
clc
orb
ds
add
xor
jb
mov
mov
imul
movsb
inc
rol
shrb
mov
mov
mov
push
add
mov
scas
inc
sub
out
mov
sbb
in
add
sub
jae
mov
push
sbb
jns
cmp
dec
sub
cmpsb
jmp
mov
movsb
inc
push
mov
or
xchg
sti
lret
cltd
sbb
movsl
fimuls
je
jmp
inc
stc
push
je
cs
imul
out
int3
sub
mov
add
lahf
cmp
or
mov
inc
fdiv
add
fwait
pop
scas
test
decl
dec
lcall
fwait
insb
push
inc
les
movsl
mov
lret
mov
mov
jmp
fsubr
mov
mov
sbb
lods
pop
movsb
pop
xor
loopne
jns
outsl
or
cmp
adc
mov
jl
arpl
enter
sahf
lcall
popa
test
stos
iret
inc
call
shlb
pop
ljmp
jae
mov
cmp
out
fisubs
cmpsl
loop
adc
imul
add
sub
out
dec
add
aaa
fcoms
adc
mov
bound
ds
in
in
fcmovnu
and
add
outsb
pop
scas
sbb
shufps
jb
mov
and
fucompp
cmp
dec
fldcw
out
mov
insl
loope
scas
adc
fwait
inc
or
lcall
add
xor
cmp
dec
xorl
xlat
movl
fsubs
dec
scas
lods
push
xor
outsl
mov
and
inc
push
subl
mov
pop
xchg
push
xchg
mov
out
mov
mov
adcb
dec
fs
cmp
sub
arpl
fisubl
in
or
scas
xchg
mov
push
xor
test
lods
xchg
adc
adc
push
out
mov
pop
add
mov
int
add
xchg
mov
das
mov
in
cmp
test
and
imul
xchg
push
fcmovne
xor
sbb
mov
rorb
sbbl
mov
cwtl
and
jno
pop
mov
mov
addr16
pop
jb
leave
popf
lcall
out
aaa
je
call
and
test
xchg
es
popf
xchg
out
cmp
pushf
imull
pop
push
push
mov
add
test
popa
lods
jl
dec
mov
cli
repz
int
and
xlat
repz
into
stc
mov
popf
inc
shl
sbb
in
fidivs
test
aam
mov
gs
mov
jbe
xchg
push
repz
cmp
scas
cltd
imul
dec
mov
mov
dec
lock
jmp
push
shlb
add
mov
adc
xlat
mov
test
jo
mov
push
stos
pop
repnz
pop
int
adc
es
pop
jns
loope
cwtl
repnz
push
xor
adc
dec
lcall
in
ljmp
sti
add
repnz
jmp
leave
into
fcomps
or
int3
testb
mov
lret
xor
lret
jle
or
daa
mov
icebp
std
jge
gs
in
jno
push
sbb
jecxz
out
push
loop
add
jno
js
jmp
push
lods
xchg
lds
pop
stc
cltd
sbbb
xchg
pop
outsl
testl
push
mov
sarb
push
dec
std
test
xor
rcrb
fs
dec
out
hlt
mov
stc
stos
mov
scas
mov
insl
lds
jle
push
inc
scas
jmp
xlat
roll
lods
mov
in
mov
jge
leave
adc
mov
xor
stc
adc
or
rorl
jbe
aam
xor
mov
jecxz
sub
movsb
and
pop
sub
push
lock
jne
js
xor
mov
js
rorl
pop
test
cs
mov
and
push
sub
cmp
jns
inc
ljmp
cld
jae
cmp
int3
aas
jp
das
arpl
lods
xchg
imul
lahf
xchg
sub
mov
cmpsl
out
daa
out
jg
push
ret
push
int
push
sbb
in
mov
sbbb
test
sahf
clc
in
and
lds
les
sahf
cmc
cwtl
mov
add
pop
lahf
sarb
roll
jmp
add
dec
inc
mov
loop
sub
ja
dec
outsl
inc
mov
pop
cmp
sti
inc
test
arpl
scas
pop
lea
insl
jae
mov
or
imul
inc
xor
pop
add
push
dec
cmpl
dec
jl
lods
rolb
xor
jl
mov
pop
jmp
or
aas
xor
mov
arpl
jmp
repz
inc
inc
mov
inc
incb
cmpsb
jmpw
hlt
xor
movsl
mov
fdivrs
sarb
cmp
enter
stos
mov
out
jnp
adc
rcrl
lahf
aaa
out
cmp
mov
js
dec
pusha
das
loopne
xor
jge
outsl
jle
sub
xchg
daa
jmp
sbb
push
popa
mov
sti
loopne
inc
filds
scas
xchg
decb
insb
mov
cmpsb
fwait
insl
rcl
sub
dec
pop
sbb
adc
testb
jmp
ret
mov
add
add
popa
out
sbb
es
cltd
pop
sbb
xchg
adc
add
mov
inc
test
dec
cmc
or
daa
js
jmp
adc
pop
rorb
fcmovb
mov
push
push
mov
sbb
daa
lret
xchg
or
adc
jno
dec
sbb
mov
mov
lods
jg
scas
sub
jp
js
mov
aad
fistpl
lds
les
inc
repz
aam
push
sub
mov
pop
int3
xor
test
lcall
xchg
imul
xchg
inc
je
dec
and
add
push
pushf
add
dec
xlat
add
mov
inc
push
ret
shlb
pop
add
scas
rclb
xor
mov
xor
jge
jae
add
repz
sub
sub
lret
xor
ror
adc
adc
call
jg
test
mov
push
xchg
inc
push
fld
dec
mov
xchg
mov
mov
in
inc
push
pop
scas
daa
aam
movsl
mov
aaa
icebp
daa
pop
mov
push
push
xchg
pop
arpl
push
aas
pop
lret
xchg
cmpl
fsubl
cmp
fnstenv
pop
je
dec
lret
test
popa
xor
sbb
sbb
jno
xor
xchg
test
xchg
xlat
sbb
mov
mov
push
out
ljmp
push
sbb
jno
int
push
mov
fldenv
enter
movd
cli
sub
ja
xor
push
mov
popf
movsl
jne
fimull
loopne
jecxz
push
dec
cs
xchg
xor
scas
sub
test
addr16
in
dec
ret
sub
jae
cltd
aam
mov
xor
mov
sub
int3
cmp
push
sbb
and
clc
push
mov
or
adc
inc
pop
leave
rolb
std
xchg
in
in
insb
gs
je
sbbl
in
push
popa
pop
jg
xor
sub
add
jbe
mov
xchg
repnz
pop
ds
call
adc
jge
sbbb
or
mov
xchg
call
pop
out
imulb
insl
adc
pop
cmp
add
fisttpll
mov
shl
pushf
sahf
lods
popa
iret
cmp
icebp
loop
shlb
popf
rclb
add
xor
fisubs
enter
add
inc
stc
jb
adcb
enter
popa
mov
inc
test
push
xor
hlt
xor
es
jl
lods
mov
outsb
popf
jmp
pop
or
jg
dec
mov
xchg
out
fisubs
jge
jecxz
mov
int3
lods
xlat
add
in
into
call
sbb
out
outsb
out
inc
add
xor
adc
xlat
push
std
mov
cmp
xchg
mov
jl
and
cld
mov
inc
jmp
add
or
adc
fwait
mov
cmp
and
mov
test
mov
fidivrl
sub
daa
shl
dec
es
mov
sub
sbb
outsb
mov
adc
mov
js
adc
mov
iret
daa
sbb
push
movsl
cmpl
push
jmp
and
dec
shlb
mov
pop
mov
sbb
sbb
sbb
xchg
mov
pushf
popf
add
jno
hlt
or
enter
sbb
xchg
add
aaa
ret
mov
mov
das
loop
subb
dec
jl
std
cmp
add
mov
or
enter
es
sub
xchg
stos
xor
dec
sti
ja
ja
push
push
enter
out
cmp
lret
imul
out
shrb
sti
adc
cmpsl
sub
jbe
add
mov
adc
push
iret
cld
ret
push
push
cmp
in
mov
push
sbbb
shl
clc
movsl
pop
shl
jo
mov
shll
loope
lea
repnz
xor
adc
sahf
xor
int
int
mov
out
xchg
loopne
ljmp
test
gs
jns
xchg
fcoml
push
xlat
jg
xchg
mov
les
bound
jecxz
or
icebp
fs
popf
fcmovne
and
popa
mov
and
pop
push
ljmp
cmp
xchg
out
inc
pop
pop
add
mov
pop
call
ljmp
enter
fxch
push
jge
mov
add
or
jbe
inc
sbbb
and
outsl
repnz
pushf
add
lods
cmp
mov
jbe
in
popa
mov
xchg
ja
cmp
pop
js
test
outsb
lcall
and
inc
call
les
xchg
shll
in
int3
mov
nop
ret
sbb
dec
dec
fistl
in
sbb
dec
dec
jmp
and
cmp
lods
iret
in
sbb
push
xlat
push
fwait
dec
sub
adc
xchg
mov
cmpsl
fistl
je
xchg
mov
adc
mov
xchg
incl
ss
push
sub
loope
xchg
shll
fildl
xchg
enter
aas
insb
leave
int3
repnz
aaa
in
test
fcmovu
xor
lock
mov
sub
cmc
imulb
mov
cmp
mov
add
arpl
clc
mov
mov
loop
cmp
mov
in
pop
dec
cld
loop
pop
pusha
imul
je
inc
ss
lock
loop
cmpsl
push
stos
jp
ss
lcall
xchg
mov
stos
clc
mov
dec
mov
sub
jle
clc
call
pop
or
ljmp
pop
cmpsl
or
sahf
pushf
dec
ljmp
aam
xchg
push
arpl
std
pop
inc
mov
dec
jl
push
dec
jmp
in
jmp
cmp
or
lods
jle
jl
push
das
fsubrl
adc
fsub
popf
cmpsl
fimuls
or
lea
mov
cwtl
fisttpl
mov
jmp
inc
scas
lahf
or
mov
mov
subb
lret
insb
addr16
ss
mov
and
and
out
rep
jl
dec
neg
or
inc
mov
sbb
shll
sbb
and
xchg
xchg
xchg
outsl
das
out
mov
test
aam
add
scas
sbb
cmp
xsave
mov
jmp
sbb
mov
rclb
fbld
in
xor
popa
or
jne
sub
lods
mov
ret
and
test
cmp
inc
hlt
sub
mov
das
push
dec
out
mov
push
scas
ss
mov
cmp
clc
or
mov
inc
bound
das
mov
test
push
and
clc
subb
movsl
in
in
inc
inc
pop
adcb
mov
cmpsb
mov
ret
push
popf
mov
add
enter
arpl
add
test
push
add
dec
js
fsubs
push
fwait
enter
bound
test
xor
lcall
pop
aaa
pop
mov
and
pushf
inc
aad
xchg
hlt
or
jno
test
lods
pop
scas
mov
test
mov
lock
cld
ljmp
lods
rep
cmp
and
or
add
jno
stc
fdivs
mov
jae
xorl
int
pop
nop
cmc
daa
jge
jns
insl
inc
fs
nop
outsl
adc
imul
push
idivl
icebp
jae
jle
xor
adc
push
mov
mov
xchg
outsb
leave
lock
testl
out
pop
movsb
jmp
push
adc
mov
loope
cmp
push
push
movsb
loopne
nop
ror
and
sub
cltd
jo
xchg
jle
mov
lods
mov
ljmp
jne
adc
scas
add
mov
mov
inc
or
push
ret
fs
stos
pop
sbb
imul
sub
in
add
cmp
mov
leave
js
imul
enter
inc
sub
mov
sub
jnp
les
jmp
cmp
fadds
dec
ficoms
stos
stos
push
inc
cld
sti
sbb
pop
aad
and
lret
stos
sub
pop
mov
fcmovne
dec
or
sub
pusha
xchg
push
push
aas
adc
ljmp
enter
jle
lret
pop
xchg
sub
push
jno
pop
into
push
xchg
out
enter
jge
idiv
dec
movsl
pop
jg,pt
sarl
cli
adc
or
push
lds
jecxz
aas
loop
mov
int
dec
inc
xor
sbb
movb
into
stos
cs
dec
lods
xchg
ja
push
aaa
scas
mov
xor
cmpsb
jne
shll
mov
mov
and
call
ds
dec
sub
lahf
pop
in
js
pop
test
pop
loop
mov
popf
inc
mov
sahf
jmp
dec
in
sahf
test
or
push
hlt
ljmp
sbb
ds
add
js
scas
test
sub
lahf
push
sbbb
fldl
lahf
push
cmp
xor
xchg
aad
aas
jp
fbld
xchg
xor
jno
inc
out
lods
adc
filds
push
mov
mov
movsb
bound
mov
out
sbb
ss
mov
cltd
jbe
add
rolb
orb
cltd
popf
sbbb
jo
mov
notb
es
stos
lahf
sub
jmp
pop
sar
arpl
inc
push
movsb
in
xor
add
call
xor
movsb
or
fwait
stc
das
mov
adc
dec
lret
mov
negl
lea
xorl
gs
bound
data16
and
cmp
mov
dec
sub
es
out
aaa
jnp
or
daa
popa
call
sbb
addr16
les
rolb
lcall
add
testl
push
insl
pop
push
push
mov
sbb
sub
xor
push
ret
lods
popf
xchg
jge
pushf
push
mov
shll
cmp
loop
xchg
adc
push
imul
leave
mov
out
int
sub
xor
loopne
into
and
xchg
and
inc
movsl
into
in
xchg
xorl
lock
fcom
dec
daa
push
enter
dec
pop
lock
push
fs
mov
add
or
rol
icebp
xchg
add
cmp
cmp
xor
enter
roll
jns
xor
cmp
jecxz
xor
mov
push
daa
ss
fcmovnu
sub
inc
pmaxub
int3
fmul
xor
cmp
mov
pop
and
inc
add
repnz
and
repz
xchg
mov
push
insb
jno
mov
pop
mov
jg
xchg
push
scas
scas
lcall
push
push
rcl
cmp
cmpsl
divb
sbb
inc
std
xchg
call
jbe
add
je
mov
xchg
xchg
adc
imul
lods
out
out
js
jno
je
mov
push
cmpsb
popa
adc
adc
sbb
jno
fdivrp
or
clc
dec
movsb
and
test
clc
stc
mov
jecxz
std
and
mov
pop
leave
jns
loopne
mov
loop
sbb
add
sub
mov
shll
sbb
jmp
loop
pop
ret
int3
stos
ficoml
jp
sbb
insb
push
das
outsl
sub
loop
xchg
adc
imul
aam
push
pop
test
stc
or
sbb
inc
xchg
push
push
mov
inc
jb
call
cli
pop
xchg
push
loope
sub
or
mov
shrl
xor
xor
jno
dec
push
pop
cmp
test
or
and
adc
mov
inc
xor
jb
pop
cmpsb
mov
mov
mov
aaa
and
in
adc
imul
lock
daa
scas
sub
xor
stos
mov
lods
shrl
dec
jbe
push
mov
dec
push
loope
lods
dec
dec
cmp
dec
outsb
aam
imul
aaa
xchg
push
stos
fisttps
loope
xor
mov
push
fldt
xor
stos
test
xlat
xchg
jne,pn
aad
mov
xor
xor
icebp
out
adc
or
addr16
inc
and
inc
movsb
sahf
shl
lods
in
adc
les
loope
cmp
sub
jge
xor
pop
sbb
mov
jge
les
loop
cmp
fcomps
in
iret
lods
mov
sub
pop
aad
pop
jle
sub
cld
fdivrl
cltd
push
xor
testl
into
inc
lahf
adc
scas
push
les
push
xchg
mov
mov
aad
pop
inc
lods
inc
ret
sub
xor
aad
pop
popa
inc
leave
movsb
push
andb
lods
rcl
xor
xchg
push
popa
mov
push
into
sbb
adcb
add
dec
fwait
and
lods
mov
je
xor
sub
cmp
in
mov
sub
push
imul
add
xchg
dec
mov
push
xor
pushf
xchg
testl
stos
fimull
arpl
mov
or
aas
shrl
lods
cmp
stc
and
imul
sysexit
mov
push
lods
dec
mov
push
lahf
xchg
mov
xchg
jmp
inc
scas
aam
xor
hlt
xor
into
adc
xor
pop
lds
loop
loope
popa
mov
xor
test
dec
insw
cwtl
mov
sti
inc
scas
lea
lods
sub
subl
pop
jns
sti
in
movsb
fiadds
in
cld
dec
notb
fsubrl
mov
mov
addl
mov
push
sahf
lahf
cs
adc
and
and
push
lahf
mov
and
popf
push
pushf
xchg
push
dec
fs
jnp
jle
mov
divb
jmp
jg
pop
mov
dec
movsl
stos
nop
sub
icebp
cmp
pop
push
test
test
add
mov
sahf
call
inc
jp
mov
xor
pop
stos
stc
or
out
xor
rcr
xchg
popf
out
jecxz
leave
pop
mov
add
jp
loope
inc
sti
adc
lds
or
fsubrs
mov
ret
add
ret
cld
stos
pop
push
jl
in
xchg
or
inc
es
imul
fs
ret
dec
nop
mov
push
xchg
xlat
hlt
and
jecxz
clc
add
dec
dec
mov
shll
lds
jecxz
cwtl
nopl
jne
pop
shlb
in
in
dec
bnd
test
pop
sbbl
inc
insl
add
mov
sahf
lret
sti
sahf
sub
push
xchg
dec
negb
dec
andl
in
out
cmp
aam
mov
repnz
pop
jg
mov
push
xchg
inc
std
inc
mov
das
inc
stos
pop
fwait
idiv
lds
rcll
sbb
push
cli
xchg
out
push
push
hlt
fwait
dec
jmp
enter
int
jns
dec
xchg
xchg
mov
cmpb
fcmovnu
or
sahf
insl
fcmovb
xchg
sub
cmp
mov
inc
pop
or
repnz
dec
dec
pop
insl
dec
cs
xchg
sbb
aad
fisubrl
in
jnp
pop
xchg
outsb
shlb
das
aas
jb
pop
ret
loop
fcompl
fsubrl
xchg
lret
xor
lods
nop
ds
pop
or
loopne
sub
gs
cmp
cmpsl
jecxz
into
pop
dec
pop
xchg
mov
mov
ret
sub
xchg
sbb
mov
mov
aam
fdivrs
in
ret
lret
jle
daa
xor
sbb
dec
adc
std
int3
dec
xor
cmp
dec
push
nop
pop
mov
push
fsubl
popa
xor
xor
mov
inc
rol
shrb
lahf
pop
int3
dec
sbb
loopne
outsl
mov
in
push
mov
icebp
out
xor
add
pop
ljmpw
cmp
into
fwait
addl
adc
or
mov
inc
xchg
popa
sub
mov
movsb
hlt
push
push
pop
outsl
mov
out
inc
jmp
jne
inc
ret
into
pop
in
add
dec
shr
jmp
les
addl
xchg
mov
sbb
inc
jbe
inc
mov
outsb
mov
std
and
scas
mov
jnp
mov
aaa
stos
mov
into
lock
fisttpl
aam
or
cmp
mov
jnp
mov
cld
mov
pop
mov
in
jmp
push
enter
cmpsl
hlt
jge
lcall
mov
and
sbb
nop
cmpsb
inc
push
stos
jo
add
into
rcll
adc
repnz
xchg
adc
aam
sub
or
out
mull
aaa
adc
mov
sub
dec
mov
dec
fs
leave
mov
cmp
or
push
mov
pop
push
aaa
adc
dec
and
imul
fwait
js
inc
lahf
js
mov
xchg
cmpsb
push
aaa
cmp
xchg
or
dec
mov
sub
xor
mov
je
inc
shrb
cltd
enter
fisttpl
rcrl
loop
popf
xchg
inc
bound
aam
rolb
test
sbb
xor
mov
popa
iret
idivl
dec
mov
add
jbe
dec
out
add
icebp
jno
jno
js
std
jmp
loope
sbb
mov
push
adc
icebp
and
std
mov
jl
xlat
push
or
gs
jne
stos
mov
lcall
les
cmp
inc
push
cli
cwtl
call
aaa
aaa
xchg
sub
sbb
in
push
out
ror
in
mov
outsb
mov
paddq
out
shlb
fidivl
arpl
inc
repnz
mov
test
scas
jmp
mov
xchg
add
cmp
dec
adc
in
lea
arpl
and
cmpsb
pop
or
icebp
lods
xchg
fidivrs
stos
sbb
xor
add
mov
add
aam
movb
mov
mov
mov
aas
add
mov
mov
jne
jne
adc
aas
rorl
ljmp
add
mov
ret
dec
in
fstpl
mov
mov
mov
dec
or
sbb
mov
mov
shl
mov
call
imul
daa
fistps
push
dec
pop
lret
js
adc
sub
xchg
out
sbb
mov
int3
add
adc
sahf
lea
push
imul
in
pop
mov
sub
push
cmp
mov
cmpsb
popf
cmp
jae
fld
push
xchg
mov
xchg
in
jmp
mov
repnz
nop
sbb
add
sub
and
insb
lods
cmp
dec
sub
ljmp
das
cmpl
xchg
cmp
mov
mov
cmpl
outsb
int3
xor
rolb
cmp
int3
shll
in
jns
out
loope
jmp
xlat
sub
pop
shrb
or
pop
dec
xor
push
mov
es
jns
aam
cmp
cmp
pop
xor
movsl
add
inc
push
jno
and
xor
repnz
ja
jle
movsl
mov
mov
pop
into
rcll
sbbb
add
pop
call
jp
dec
adc
imul
mov
pushf
cmpsb
mov
mov
sub
or
shl
loopne
dec
rcrl
pop
cld
push
stos
clc
mov
stos
fadds
xor
pushf
cld
popa
mov
push
pushaw
bound
dec
cmp
xchg
lcall
lods
cmp
repz
pop
cmp
rorl
loope
mov
fldenv
ja
loop
mov
cltd
inc
cmpl
mov
jno
mov
pop
jmp
dec
bound
mov
or
add
out
stos
or
cld
cmpsb
call
adc
push
xchg
insb
mov
add
push
push
repz
in
stos
xchg
adc
fsubl
mov
movsl
sbb
test
mov
inc
jg
ret
cmpsl
mov
cmp
dec
repz
jg
fisubrl
loopne
push
test
pop
ja
test
sbb
add
stc
mov
pop
ds
and
fbstp
movsl
dec
lods
sbb
pushf
into
mov
leave
daa
mov
andl
add
sub
fiadds
mov
stos
and
pop
sbb
xor
pop
popf
in
inc
pop
scas
fsubrl
push
dec
cmpsl
xor
or
test
loope
push
cmpsb
jno
add
jae
mov
cltd
sbb
js
aaa
mov
lods
ljmp
add
mov
push
mov
stos
out
mov
std
ljmp
hlt
xchg
out
jb
xor
imull
es
dec
mov
loope,pn
adc
mov
cmpsl
cmp
push
shll
or
movsl
mov
sbb
jl
or
nop
ficoml
loop
iret
xchg
movlps
mov
mov
jno
xchg
addr16
add
mov
mov
and
mov
pop
and
in
aad
imul
aas
pop
dec
pop
mov
cli
aaa
mov
add
int
mov
inc
jg
or
mov
sub
std
dec
aam
imul
push
int
addb
pop
cmp
pop
xchg
and
add
sub
icebp
dec
jae
aas
push
loop
mov
pop
mov
not
es
sbb
xor
outsb
shrl
mov
subl
loope
push
je
or
xchg
cmp
test
mov
pop
or
mov
xor
mov
sub
add
ret
sti
sahf
ret
test
jbe
test
add
and
ja
xchg
shrb
daa
inc
xor
add
test
ss
pop
fwait
test
jb
test
pop
mov
xchg
out
pmaxsw
sbb
and
mov
sub
dec
aad
divb
pop
adc
stos
sarb
push
xorb
push
addr16
icebp
push
insb
insb
mov
andl
jbe
push
inc
icebp
jp
pop
push
mov
dec
es
adcl
jbe
xor
jge
dec
pop
pop
data16
mov
daa
aas
fidivrs
jns
aad
aas
mov
shl
icebp
lea
inc
jecxz
or
push
rolb
in
dec
sub
or
call
test
push
das
hlt
and
rcrl
jae
idivb
xorl
cld
dec
pop
in
outsb
call
jae
ja
insb
nop
and
cltd
and
subl
pushf
add
xor
repnz
das
or
xchg
mov
adc
pop
outsb
dec
mov
xchg
add
lds
popf
notl
aam
cmp
xor
sti
and
mov
push
insb
ret
and
pop
add
jb
add
aam
lea
negb
xchg
xchg
xchg
test
outsb
cld
dec
and
stos
cmp
cmp
push
xorl
adc
xor
icebp
xchg
and
outsb
push
push
sub
pop
stc
sub
imul
jp
xchg
cmp
movsl
lock
imul
hlt
subl
ret
mov
jo
loope
repz
mov
and
cmp
pop
sahf
jo
mov
cmp
stos
enter
pusha
loope
sbb
jmp
adc
or
loop
out
mov
repz
and
aas
inc
out
out
imul
push
cmc
faddl
adc
mov
in
inc
jl
test
mov
insl
add
aad
lods
lahf
mov
shll
or
mov
test
mov
pop
mov
cmp
jno
out
cli
movsb
jmp
mov
xchg
lahf
mov
mov
outsb
cmp
adc
and
dec
mov
sbb
cmp
sbbl
outsb
jp
scas
mov
mov
mov
inc
cmp
cmp
or
rcl
out
xchg
int
rcrb
add
sub
aad
imul
push
fsubrs
mov
movsl
addr16
push
xchg
out
lret
jge
lret
cld
fwait
mov
push
dec
mov
pop
or
adc
not
mov
daa
sub
mov
jl
add
pop
xlat
cmpsb
pavgb
movsb
inc
sub
in
mov
ds
push
outsb
shr
les
movsb
imul
test
sub
enter
andb
cs
test
mov
add
in
les
dec
push
in
mov
outsb
lret
xor
dec
mov
sub
out
or
or
jecxz
push
jg
jecxz
hlt
push
jmp
adc
or
das
cld
mov
mov
sub
dec
mov
ja
cmpsl
xor
inc
mov
jle
or
mov
ret
mov
mov
push
es
insb
dec
popf
outsb
jge
subl
push
cmp
xor
or
push
mov
jnp
cmp
fildl
xor
stc
dec
leave
and
pop
mov
cwtl
movsl
sbb
sbb
and
push
sub
sbbb
in
cmp
in
jns
arpl
jl
xchg
push
scas
fdivrl
jg
repnz
out
das
add
sub
sbb
popa
cmpsl
pop
xor
mov
jb
repnz
mov
dec
out
cmp
xor
sub
pop
adc
jno
sbb
outsb
into
mov
or
jne
out
clc
aam
enter
push
xchg
in
sar
sub
xchg
out
dec
mov
mov
shll
fwait
or
push
inc
pop
lcall
pusha
adc
jmp
cmc
movsb
pop
and
push
jmp
xchg
ficompl
sahf
aas
xchg
cmp
scas
cmpsb
std
pop
aas
cmpsl
fstp
lods
xor
sub
adc
gs
sbb
adc
jecxz
shlb
and
xor
into
jnp
sub
inc
mov
xchg
adc
mov
sub
push
out
inc
icebp
cmp
pushf
mov
into
sbb
fcomps
cmpsb
xchg
lret
insl
aas
cmpl
lds
push
pop
cmc
into
jne
jge
fiadds
rorl
or
dec
fsubs
push
sub
ror
cld
dec
dec
aas
stos
stos
cmpsl
add
out
int
clc
and
in
or
das
inc
inc
cmp
xchg
jbe
sti
sub
das
mov
lahf
out
cld
adc
popf
xchg
cmp
dec
add
sub
jns
int
dec
imul
add
jle
add
fsubl
mov
inc
add
and
sbb
call
mov
and
stc
int3
imulb
enter
mov
mov
fsts
decl
cmp
movsl
subl
inc
xchg
or
inc
es
mov
out
cmp
mov
aaa
mov
jge
cmp
fwait
xchg
inc
ds
mov
movsl
add
rcll
lds
scas
insl
mov
mov
dec
jae
repz
cltd
js
jge
repnz
and
xchg
int3
pop
lret
shl
dec
cmpsl
les
pop
fwait
mov
mov
adc
jne
adc
test
int
pop
rcrb
shll
loop
add
or
pop
mov
mov
fs
lret
shll
inc
sbb
jne
xchg
lret
mov
loope
loop
hlt
cwtl
loopne
adc
sub
jle
addb
dec
mov
add
out
add
test
nop
push
add
add
adcw
sbb
mov
pop
movsb
pop
ds
test
mov
repz
in
cmp
cmp
jne
mov
adc
pop
into
adc
mov
cmp
das
sub
pop
aam
mov
jns
fisttpl
and
inc
dec
flds
rol
loope
xchg
in
jno
mov
orb
jnp
mov
xchg
push
rcl
mov
loopne,pn
sbb
pop
push
sub
mov
push
pop
push
pop
stos
mov
dec
mov
xchg
inc
jno
lods
lock
mov
push
xorb
adcb
sbb
inc
cmp
iret
cmp
and
mov
cmp
pop
pop
cmpb
add
xor
adc
sbb
aas
lea
xor
add
push
jno
mov
ss
push
mov
cltd
sbb
sbb
aad
ror
mov
inc
xchg
leave
pop
sbb
stos
adc
int
cmpsb
push
pop
clc
andb
push
sub
enter
ficompl
clc
pusha
pop
sub
cwtl
push
inc
loopne
lock
jl
sbb
push
cmp
stos
rolb
dec
ss
ret
jns
add
cmpsb
test
ljmp
aam
les
jg
js
dec
notb
imul
jne
jge
mov
sahf
pop
cli
arpl
or
and
addb
shll
push
or
mov
xor
xchg
inc
fadds
xchg
fldenv
and
dec
cmp
xor
icebp
aas
mov
mov
call
inc
dec
les
jae
cmp
dec
std
je
cwtl
imul
mov
icebp
in
mov
pop
push
add
je
xchg
push
mov
aas
inc
sbb
mov
mov
mov
cmp
mov
mov
in
movsl
pop
sbb
dec
hlt
cmc
dec
testb
test
xor
sar
sbb
or
and
rol
loop
pusha
cmpsl
cmp
roll
out
ljmp
jns
mov
add
or
arpl
negb
push
mov
notl
add
js
pop
push
xchg
cmp
dec
xchg
sbb
cltd
lock
sub
mov
ss
adc
ja
pop
and
sti
sti
push
nop
das
sub
xor
imul
and
inc
xor
sbb
enter
or
pop
push
xchg
cli
xlat
push
lds
mov
aam
xor
dec
rcll
outsb
jecxz
pop
lods
ljmp
call
bound
xchg
mov
mov
dec
mov
sahf
xor
sbb
add
jnp
jp
add
jmp
mov
pop
lea
and
xchg
popa
pop
enter
jle
test
mov
xchg
mov
mov
jno
rcr
add
or
mov
jno
adc
pop
mov
into
adc
pop
stos
mov
push
and
inc
out
leave
cltd
xchg
andb
mov
pop
mov
dec
out
popa
or
repz
and
and
dec
xchg
imul
sbb
enter
pop
mov
cmp
add
aaa
inc
insb
paddq
test
mov
rorl
cli
cld
add
es
jmp
test
push
xchg
stc
fnsave
and
mov
mov
sbb
ljmp
into
sub
lret
lods
xchg
cs
or
mov
sbb
or
loopne
fimull
push
je
hlt
push
mov
sbb
invd
push
mov
pop
lds
pop
mov
add
cmpsb
call
add
jp
fisttpl
sbb
pop
inc
jle
fwait
in
mov
outsb
xchg
fdivrl
out
dec
mov
add
mov
push
dec
dec
ret
cmp
sbb
in
addr16
lcall
insl
negl
xchg
test
sub
jne
ret
cli
fwait
es
xor
sbb
or
adc
pop
add
and
leave
push
fistps
lods
in
ds
iret
jg
adc
push
popf
xchg
push
out
movsb
movsb
pop
iret
add
or
or
orb
outsl
jecxz
dec
pop
fdivs
and
aam
mov
iret
push
cld
sub
mov
lea
mov
mov
lcall
xlat
push
jecxz
add
mov
ret
pop
fldcw
mov
cmp
aad
mov
loop
cmp
jne
hlt
test
pop
icebp
jb
jnp
inc
jle
out
xchg
dec
ds
pushf
lock
inc
shlb
test
ds
cwtl
clc
xor
fsubs
mov
cmp
adc
inc
push
or
sbb
loop
out
adc
xchg
and
sbbl
pop
das
scas
enter
or
pop
clc
add
jns
dec
mov
fildl
pop
jmp
inc
pop
rcrb
insl
mov
enter
cmp
sbb
push
pop
jnp
movsb
mov
xchg
lahf
sub
jnp
xchg
sbb
jp
sar
xor
out
sub
jp
ljmp
orl
mov
nop
andl
mov
xor
pop
sbb
mov
sbb
sub
or
loop
and
cltd
and
out
lds
jnp
cmp
mov
jg
sub
xchg
fsubrl
dec
dec
xor
jo
adc
add
jb
aad
or
sbb
add
mov
clc
cmp
or
sub
push
movl
aam
jl
clc
fs
pop
mov
mov
aad
negl
fcmovnb
push
xor
pop
popa
repnz
cli
outsl
mov
mov
xchg
mov
clc
dec
jne
inc
and
cmpsl
sbb
cmp
in
int
lea
int
mov
mov
popa
mov
pushf
int
dec
mov
mov
pop
leave
or
pusha
sti
mov
sbb
scas
mov
xlat
sahf
add
mov
jbe
inc
mov
subl
push
jb
int3
rorb
xchg
adc
and
ret
hlt
sbb
shrl
push
mov
sbb
dec
xchg
pop
and
int3
fdiv
imul
mov
inc
sub
pusha
inc
inc
leave
pushf
sub
outsb
ret
in
imul
test
arpl
mov
sbb
jnp
lock
shll
movntq
mov
xor
dec
jg
imul
inc
xor
mov
adcl
lcall
mov
and
ficompl
add
aaa
push
mov
loop
fldenv
fwait
in
fstl
test
jno
push
cltd
les
push
and
or
inc
pop
mov
push
adc
xchg
jp
jae
clc
test
push
xlat
fiadds
flds
loop
fisubl
cmp
lods
mov
es
sbb
inc
dec
mov
or
xchg
xor
mov
jmp
mov
jg
fildll
lock
mov
sbb
jle
fidivs
cwtl
shl
fs
mov
test
call
jbe
cltd
lcall
das
pop
pop
and
fdivs
pop
loope
pop
sub
xchg
mov
clc
push
pushl
cld
xor
fs
add
bound
mov
xchg
dec
mov
inc
shlb
mov
cmp
fwait
mov
adc
pop
mov
cwtl
cwtl
jbe
and
stos
bound
sbb
sahf
push
mov
imull
xchg
insl
cmpsl
fs
or
push
dec
or
sbb
and
test
idivl
es
ret
sub
cmp
push
das
pop
pop
jmp
jp
push
fwait
les
call
or
pushf
call
pop
jbe
dec
stc
inc
test
adc
lahf
out
pop
sarb
addr16
leave
cwtl
xchg
gs
loope
push
ret
push
xchg
mov
fwait
mov
pusha
push
mov
cmpsl
outsb
jnp
dec
xchg
or
sarl
pushf
insl
andl
dec
imul
push
dec
and
ds
outsl
cmp
imul
xor
and
mov
pusha
imul
xchg
pop
popl
mov
icebp
pushf
cld
push
in
cmp
lods
cmp
das
xchg
push
xchg
ljmp
pop
out
loope
pop
sbb
inc
xchg
repnz
push
inc
add
jmp
fld
adc
inc
mov
lret
leave
imul
pop
xchg
testl
xor
shl
dec
adc
fcoms
aaa
int3
loop
cmp
and
pushl
sub
sbb
rorb
pop
push
negb
adc
pusha
and
xchg
int
out
xchg
mov
sbb
out
mov
ret
ljmp
out
sbb
cmp
push
bound
les
and
in
inc
lret
push
popf
dec
in
std
std
jnp
push
js
pop
outsb
std
out
lret
ds
sbb
cmpsb
dec
icebp
or
lock
cld
cwtl
pop
inc
dec
mov
es
mov
jno
mov
push
stos
push
jae
daa
stos
push
jle
rolb
in
add
outsb
jno
into
cmp
arpl
fsubr
out
mov
sub
outsb
mov
pop
stos
inc
inc
jbe
pop
dec
mov
dec
and
dec
test
cmpsb
xchg
push
fwait
ljmp
ficoml
bnd
das
push
repz
jb
bound
dec
cltd
outsb
movsl
insl
aam
dec
arpl
js
sbb
or
sub
and
sbb
jns
pop
movsb
test
add
popf
in
fdivrl
and
arpl
inc
push
mov
xchg
and
int
cmp
movsl
add
jle
lret
xchg
inc
xchg
push
and
js
loopne
sub
inc
fcmovne
stc
int3
ffreep
pop
or
sbb
inc
adc
inc
sub
pop
sub
ss
les
mov
lods
das
icebp
mov
cld
push
jl
es
or
bound
addb
push
mov
or
insb
js
pop
sbb
repnz
xchg
push
popa
jle
cmp
negl
mov
sbbl
push
rol
dec
dec
adc
xor
aas
adc
xor
addr16
fdiv
gs
lods
inc
cltd
push
scas
push
insl
jl
mov
mov
sub
xchg
xor
jecxz
or
iret
out
daa
arpl
dec
rcrb
fwait
mov
popl
cmp
ffree
arpl
in
mov
stos
mov
pop
cltd
sbb
adc
inc
scas
or
iret
mov
cmpsb
or
cmpsb
les
jecxz
shlb
xchg
fildll
xchg
pop
xchg
jno
push
inc
jno
stc
stc
aaa
and
pop
jns
mov
scas
xchg
cltd
call
and
adc
pop
jle
or
xchg
lret
sti
inc
jnp
std
inc
test
mov
mov
sbb
jle
pop
jle
ljmp
pop
or
lods
aam
mov
shl
aam
mov
ja
add
sti
mov
push
lods
push
mov
adc
pop
les
mov
sub
cmpl
xor
xchg
and
xchg
sub
daa
sbb
xchg
lcall
in
push
mov
sbb
scas
xchg
arpl
mov
ljmp
mull
push
jo
enter
inc
push
sbb
jle
addr16
mov
icebp
or
push
and
jle
fwait
push
pop
insb
sub
sub
jne
ret
lods
sar
in
out
imul
es
cmp
sti
pusha
ret
lock
mov
mov
adc
arpl
mov
inc
mov
sbb
test
clc
iret
xchg
mov
mov
adc
andl
xlat
or
loope
fadds
mov
in
xor
inc
pop
das
mov
movsl
jne
scas
mov
dec
mov
or
loop
in
popf
dec
lcall
xchg
pusha
add
inc
or
or
roll
popa
mov
call
and
lcall
jl
fisttpl
xchg
xchg
loope
lcall
pop
lcall
leave
negl
fistl
pop
xchg
and
sbb
push
fcomp
jl
cld
xchg
push
in
aad
cmp
xchg
das
mov
cli
out
jnp
push
pop
mov
mov
jns
cwtl
xlat
or
dec
addr16
out
out
jecxz
int3
jmp
mov
cli
fdivr
xchg
xchg
add
push
js
adc
cs
mov
xor
subl
lock
sub
mov
push
imul
add
fistl
es
cld
rol
int3
adc
mov
push
or
int
rcll
insb
hlt
xchg
cmpsl
push
mov
jle
xchg
dec
dec
sbb
pop
or
test
push
add
xchg
mov
cmp
aam
sub
test
loop
ret
loope
insl
sub
or
lds
xchg
mov
out
stos
mov
xchg
lods
out
add
cmp
iret
hlt
dec
jg
imul
lock
shrl
inc
nop
ficoms
sub
sbb
jo
das
dec
jl
out
mov
mov
mov
sub
rcll
push
int
movsb
sub
imul
mov
pusha
sbb
sub
movb
sbb
adc
sub
nop
dec
and
and
into
xchg
in
rcll
and
mov
or
jmp
ss
cmc
subb
leave
mov
ror
sbb
cli
aam
aas
insb
scas
pop
fisubs
sbb
insl
adc
call
mov
sub
bound
scas
xor
mov
pop
mov
cmp
xchg
test
cmp
mov
push
jge
dec
xor
loop
xor
fcoml
test
cwtl
inc
cmpb
les
mov
pop
imul
ret
push
je
lods
and
fcoms
jo
xchg
stos
sbb
pop
dec
je
push
bound
cli
push
cmp
mov
mov
outsl
addl
dec
es
xchg
sub
adcl
aad
mov
adc
adc
adcb
adc
ret
push
mov
cmpb
sub
inc
push
adc
lods
outsb
orb
push
cmpsb
and
xor
adc
insb
les
test
jbe
cmpsb
lods
aaa
inc
fisttpl
mov
cld
inc
outsb
lret
push
mov
xchg
mov
xchg
xchg
loopne
dec
lods
jg
mov
xchg
movsl
insl
ds
sbb
movb
lcall
jbe
rcl
pop
push
movsb
jo
aad
adc
inc
and
repz
lea
out
push
aaa
stc
pop
jnp
sbb
dec
and
je
push
roll
jno
clc
fcoml
faddl
enter
stos
lret
mov
xor
xor
fmull
mov
pop
mov
movsl
adc
xchg
ljmp
imul
mov
inc
mov
sarb
pop
out
jae
xchg
and
pop
mov
xor
mov
add
mov
pop
fcompl
sub
ficomps
fcomps
jl
ss
loop
pop
inc
dec
mov
decb
mov
mov
popf
bound
inc
push
jae
andl
inc
or
sub
jle
inc
sbb
inc
pop
je
mov
ja
jmp
pop
fsubrs
bound
xchg
jecxz
ljmp
je
mov
lea
mov
push
mov
xchg
mov
cmp
jecxz
fwait
loopne
in
inc
ret
imul
inc
xor
xchg
pusha
sbb
fcmovb
xor
dec
jge
and
push
mov
lret
jp
aad
or
mov
push
rolb
jbe
pushf
adc
sbb
push
out
cld
negb
movsb
popa
leave
jl
sub
inc
adc
inc
in
adc
imul
cmp
jae
imul
jne
les
sti
inc
pop
test
pop
in
sarl
inc
roll
pushf
outsb
pop
dec
das
inc
cmpsb
xchg
adc
cmp
stos
mov
ret
sub
sub
or
pop
jle
fwait
pop
push
jecxz
adc
mov
dec
sub
mov
jae
and
jmp
push
xor
xchg
jmp
into
lds
mov
test
ja
xchg
pop
sbb
test
stos
push
xchg
mov
mov
jmp
in
xlat
aas
push
fldenv
sbb
icebp
cmp
jmp
hlt
popf
cwtl
repz
out
mov
pop
push
xchg
or
xchg
sahf
addr16
int
cmp
mov
dec
dec
lret
fdivl
jbe
xchg
pop
stos
repz
sbb
test
jne
cmpsb
sarl
jge
and
xchg
xchg
and
notl
xchg
outsl
jp
push
pop
cmpsl
push
ret
enter
push
mov
enter
pop
sbb
shr
insl
movsb
push
jbe
es
push
inc
push
cmc
aas
and
pop
sti
cmp
jmp
push
int3
sbb
or
in
push
call
sahf
test
mov
faddl
jo
sbb
test
js
daa
lods
mov
fdivl
fists
dec
and
pop
out
aam
insb
pop
movsb
pushf
les
cwtl
subb
jnp
cmpsl
stos
add
mov
in
sahf
jp
cmp
sub
fcom
xchg
xor
in
fdivs
xchg
mov
mov
push
and
push
jnp
icebp
sbb
xchg
popa
and
dec
leave
pop
add
add
cmc
jmp
loop
add
in
mov
mov
jmp
push
pop
and
inc
jl
jns
nop
in
dec
inc
sti
test
mov
adc
push
mov
jae
sbb
dec
lret
idivb
test
jg
jp
xor
adc
jbe
cmp
mov
in
nop
test
in
stos
push
xor
pop
frstor
jmp
scas
or
push
cld
imul
fucomip
and
pop
xchg
adc
in
cmp
push
jnp
out
sarl
gs
jl
dec
mov
fstps
dec
lret
mov
pcmpeqb
or
push
xor
dec
scas
push
add
dec
push
fidivrs
push
pop
std
xchg
insl
cmp
cmp
add
lret
daa
test
sub
sti
hlt
hlt
sub
testl
je
inc
xchg
or
jns
add
inc
mov
mov
mov
and
aad
aad
data16
jmp
or
into
divl
cwtl
es
dec
imul
adc
lea
xor
inc
in
test
dec
jno
jbe
icebp
sbb
fwait
test
push
das
xor
hlt
mov
hlt
mov
push
lret
out
pop
mov
aam
mov
inc
adc
sbb
xchg
jae
sahf
jge
inc
xorb
mov
arpl
scas
jae
je
push
int
jne
das
jbe
xchg
stos
ss
popa
adc
dec
daa
sbb
cmp
sar
stc
mov
inc
popa
test
jp
sbb
xchg
scas
fxtract
mov
mov
pop
stos
jecxz
sti
fs
cwtl
add
ljmp
sub
mov
in
sub
push
mov
loop
mov
xor
iret
pop
xor
sbb
enter
push
mov
dec
inc
std
mov
cmp
xor
call
or
dec
push
ljmp
mov
and
jl
sti
insl
movsl
mov
pop
test
ja
cwtl
dec
scas
cmp
les
push
sbb
filds
jmp
aad
mov
xchg
das
clc
sbb
push
and
jo
add
mov
in
and
cli
pop
daa
push
divb
mov
sub
hlt
push
idiv
jbe
outsl
xchg
mov
jo
and
mov
stos
mov
xchg
cwtl
cmp
lret
inc
sahf
dec
cmp
loope
jne
movsb
popf
out
push
sbb
push
fnstenv
mov
mov
push
jmp
mov
mov
lret
jmp
and
push
cmpb
add
int
inc
sahf
sbb
add
popf
pop
adc
call
mov
sub
inc
ljmp
sahf
jnp
je
dec
mov
and
push
dec
jbe
cwtl
push
or
jle
jl
or
bound
inc
movsl
add
stos
mov
adc
je
aam
out
mov
pop
mov
das
lock
mov
movsb
jmp
out
lods
lds
mov
mov
push
or
divl
subl
push
icebp
scas
xchg
mov
sbb
sarb
xor
ret
scas
push
gs
xorl
inc
rorl
push
pmovmskb
mov
xchg
push
jno
pop
adc
mov
aaa
push
cs
xor
push
mov
and
test
add
sahf
cmp
mov
outsb
test
scas
fstpt
adc
fbstp
add
in
enter
loop
push
cld
lods
fadds
inc
ss
fisttps
test
pop
push
sbb
jne
cld
mov
js
imul
imul
dec
filds
popf
aas
and
jp
jb
enter
orb
out
push
out
repnz
shll
mov
addr16
stos
ret
lret
jns
in
mov
add
mov
test
pop
mov
aaa
or
cmp
aaa
cmp
fisubrl
push
pushf
xchg
dec
call
int
or
add
push
int
test
xchg
pop
xchg
jmp
sub
shll
adc
pop
mov
push
mov
push
js
loop
outsb
push
pusha
cmpsl
pop
mov
sbb
mov
outsl
loope
jecxz
mov
clc
outsl
je
and
pop
jb
add
test
xor
adc
push
and
sbb
sarb
dec
sub
sbb
ret
cmp
mov
or
out
adc
jbe
iret
dec
out
fidivrs
cmp
pop
cmp
cld
fnstcw
movsb
push
pop
int
sub
lahf
pop
adc
insb
adc
push
out
pushf
es
or
add
mov
xor
and
jecxz
test
mov
mov
pop
xchg
sub
add
xchg
sti
mov
xor
sub
fwait
xor
aas
cmp
pop
adc
xor
pop
add
in
and
movsb
ss
pop
sub
jg
les
sub
cmp
in
fcmovnb
out
xchg
les
xor
insl
jae
jecxz
mov
das
imul
mov
pop
xchg
and
pusha
inc
lods
push
and
sbb
mov
addl
sbb
dec
daa
inc
or
xor
in
das
or
scas
mov
mov
cwtl
push
pop
adc
jae
jge
jg
shl
jg
inc
and
je
xchg
or
cwtl
mov
pushf
dec
jp
xchg
push
adc
jnp
jbe
shrl
inc
xchg
pop
movl
fildl
arpl
add
and
nop
sbb
cmpl
or
stos
sbb
ljmp
loopne
sub
xchg
mov
insl
imul
mov
mov
ljmp
inc
fs
repz
dec
test
cmpsl
fsubrl
es
push
fldenv
fcmovnbe
add
ja
cli
push
popf
jg
pop
pusha
movl
into
hlt
jle
jl
mov
mov
jl
and
lret
inc
push
clc
nop
push
stc
xchg
sbb
movsl
not
in
negb
es
dec
or
mov
pusha
adc
es
dec
cld
sbb
test
add
ljmp
sbb
pop
pop
push
xor
in
jno
inc
ss
mov
jmp
icebp
test
sub
dec
pusha
jp
pop
dec
mov
mov
inc
pop
sahf
int
orb
sub
lcall
and
and
into
nop
push
cli
arpl
repz
fcomps
fisttpll
hlt
and
sti
loop
imul
das
xchg
subb
inc
ret
in
aad
je
sub
aad
jle
push
xor
mov
mov
mov
daa
jbe
mov
or
mov
test
add
jmp
es
lret
shrb
clc
inc
cmp
outsb
xchg
xchg
xlat
mov
in
jbe
out
cmp
sbb
inc
scas
dec
idivl
jg
dec
sub
xchg
fsts
push
jbe
add
clc
out
cmc
or
pop
shll
repnz
les
sahf
jbe
fs
inc
adc
lret
pop
and
js
mov
lret
in
push
mov
jmp
xor
inc
push
stos
mov
mov
mov
lcall
js
nop
icebp
jnp
fldln2
mov
xor
clc
into
bound
pop
clc
cmpsb
sbb
xchg
jmp
mov
xor
jge
jg
jg
loope
dec
adc
adc
sbb
xchg
popa
gs
fs
fdivs
xor
aad
jns
rcl
push
icebp
sub
rorl
sub
mov
xchg
mov
sub
sarl
inc
rcrb
les
mov
mov
push
sub
xor
xchg
cmpsl
repnz
sub
or
add
push
sbb
sahf
sbb
in
xchg
lods
add
mov
ljmp
push
dec
movl
pusha
iret
xlat
clc
xor
jns
outsl
inc
inc
and
shr
stos
pop
mov
push
out
push
sbb
das
mov
mov
jbe
mov
js
insb
xchg
test
xor
out
cmp
aas
sbb
testl
inc
stc
out
bound
cmc
push
pop
sub
lds
push
jecxz
sbb
dec
mov
inc
xchg
xorl
sub
sub
pop
add
push
jg
in
sub
dec
sbb
xchg
ret
hlt
call
mov
out
inc
jmp
cs
loop
adc
or
cmpsb
push
in
mov
inc
hlt
sbbl
leave
push
faddp
out
pop
sbb
nop
ljmp
js
mov
xor
or
xchg
sbb
lock
call
sbb
cltd
sub
jecxz
les
in
cwtl
add
jmp
decl
or
jg
and
in
mov
test
sub
mulb
inc
imul
rcll
sbb
ja
adc
xor
fnsave
subl
pop
leave
cmpsl
adc
fidivrl
jmp
loope
sti
mov
out
xor
and
and
dec
lock
fmull
repnz
imull
or
rorl
popa
mov
in
out
sbb
ret
arpl
into
mov
add
int3
or
sti
leave
out
inc
lods
stos
inc
decb
bound
test
pop
jmp
cmpb
mov
out
jecxz
mov
mov
mov
daa
lcall
call
das
test
push
clc
cmp
mov
adc
mov
pop
loop
pop
jae
and
gs
jle
xchg
cmp
mov
out
pop
push
or
push
push
fs
lret
push
pop
stos
pop
js
test
pop
ret
aam
int3
shll
shlb
jb
dec
cli
fildl
xor
mov
mov
push
push
mov
imull
insb
fisttpll
les
push
xor
sub
xchg
scas
cwtl
add
aaa
out
push
dec
jno
mov
std
xor
jno
enter
push
fidivs
sbb
aad
sbb
fisubl
inc
cli
jnp
sub
lret
insl
xchg
aaa
and
add
push
je
cmp
and
fcoms
lods
sbb
insl
inc
popa
out
cmp
repnz
subb
jmp
xlat
stos
xchg
fmuls
roll
mov
jp
aam
xor
movsb
xchg
pop
mov
mov
int
mov
std
std
mov
in
mov
and
fistpll
frstor
or
popf
les
sti
xchg
dec
mov
push
xor
rcll
cmpsl
popa
add
pop
inc
xchg
xchg
inc
lds
sbb
shll
sahf
push
das
scas
divb
sbb
sub
test
int3
in
add
pop
inc
cmp
pop
es
add
dec
cmp
adc
daa
push
les
pop
mov
lcall
fsts
orl
pushf
add
mov
sub
jno
or
adc
mov
fs
cmpsl
and
sbb
ret
jnp
mov
andl
adc
movsb
add
mov
sub
test
lods
sub
out
xlat
xlat
cli
sub
dec
jg
jl
cs
dec
mov
aas
outsl
adc
lret
mov
xchg
pop
inc
jmp
lcall
or
stos
pusha
cs
mov
fadds
or
jb
ret
cld
adc
test
xor
xchg
push
jle
cmc
stc
repnz
push
into
or
fldt
push
fisttpll
jecxz
jg
add
popl
push
addr16
xchg
fstpt
lods
rclb
xchg
inc
cs
movsl
test
and
test
or
mov
xchg
lds
addb
stos
lret
out
imul
in
ja
orb
mov
adc
cltd
and
cmc
hlt
out
cmp
mov
mov
sahf
stos
jmp
mov
int
fstl
scas
adc
add
pop
mov
rorl
dec
add
bound
pop
mov
out
movsb
cmp
dec
stc
cmp
bound
pop
dec
pop
pop
gs
ret
cltd
arpl
ljmp
jo
decb
out
in
adcl
jo
in
fucom
or
jb
pop
pusha
addr16
adc
movsl
push
in
out
sub
mov
out
mov
and
pop
pushf
lods
je
std
jle
jl
push
adc
aas
aaa
jg
xchg
insb
mov
les
cwtl
mov
js
xlat
mov
mov
lret
inc
mov
fisubl
push
jnp
jns
ds
test
movsl
enter
arpl
xor
xor
xchg
push
fsubs
addr16
scas
nop
hlt
mov
pop
xchg
shll
xchg
jle
xlat
jmp
subl
adc
andl
xor
les
dec
cmp
mov
popf
dec
call
mov
push
cmp
xchg
jmp
cli
mov
imul
dec
icebp
mov
mov
scas
push
imul
mov
scas
daa
addr16
dec
mov
in
xchg
pop
cmp
test
xchg
mov
xchg
xchg
push
or
xlat
ret
jmp
sti
cmp
rclb
in
andl
fistpll
call
mov
xorps
and
imul
jmp
sbb
clc
je
mov
mov
jnp
into
leave
cltd
lock
jg
jmp
lret
mov
enter
outsb
lret
pop
lahf
rcl
in
jg
and
hlt
not
inc
push
push
mov
mov
push
ljmp
mov
pop
mov
push
and
or
dec
lock
stos
imul
mov
or
dec
test
sbb
repnz
mov
shrl
adc
lods
mov
fldlg2
sbb
xchg
out
push
mov
mov
push
push
cmpsl
jno
add
imul
pusha
stos
push
pop
or
insb
cmpsb
pop
sahf
adc
shlb
loop
sub
test
roll
scas
test
imul
inc
scas
out
out
inc
and
inc
in
mov
inc
cli
sti
and
jl
out
mov
ljmp
jecxz
lods
and
xchg
xlat
sub
mov
push
popl
aas
push
push
and
inc
dec
jbe
loop
out
cmp
mov
pop
divl
ljmp
or
setnp
inc
test
movl
test
xchg
mov
and
mov
dec
movsb
movsl
fcmovnb
jle
dec
maskmovq
pop
dec
loopne
popa
scas
push
push
faddl
loope
fistpll
and
mov
cmpsl
hlt
cmc
jb
mov
sub
or
cwtl
fcos
cmp
pushf
inc
and
pop
mov
cwtl
or
push
les
test
cs
mov
xlat
mov
stos
stc
fcmovbe
sbb
xchg
pop
sub
dec
mov
sahf
cmp
shl
fstpl
ljmp
xor
jne
fisttps
into
int3
mov
jl
push
mov
xchg
int
iret
shrb
clc
cmpsl
sub
ljmp
dec
add
adc
push
pop
mov
xchg
mov
rorb
or
dec
leave
fstl
add
insb
lock
ret
mov
mov
push
adc
or
inc
mov
mov
sbb
sub
pop
pop
cmp
push
mov
push
mov
or
test
xchg
xor
mov
test
aas
inc
jmp
mov
aas
jg
scas
and
movsb
bound
sub
inc
fstps
push
lea
jmp
inc
fs
clc
iret
shl
sarl
add
fidivrs
adc
loop
add
sub
out
xor
subb
xchg
lods
repz
lcall
cmp
jg
cli
stos
adc
stos
push
imul
insb
enter
push
push
add
xor
dec
fadds
sbb
or
jmp
xchg
rcr
pop
push
gs
inc
jmp
cmpsb
pop
sub
sub
in
push
jle
mov
mov
pop
adcl
and
aas
pop
test
repnz
or
push
arpl
or
bound
dec
ljmp
popf
inc
xchg
fstpl
aas
mov
bound
jecxz
jmp
shrl
lods
pop
fdivrl
data16
dec
in
mov
push
jae
daa
push
mov
or
shll
inc
xchg
dec
jecxz,pn
xlat
mov
push
lock
sub
pop
jmp
leave
stos
and
cmp
xor
xchg
std
mov
lea
xor
out
dec
iret
sahf
cwtl
xchg
mov
sub
popl
es
test
fidivrs
pop
stos
les
jae
adc
sub
pop
xchg
aas
sar
mov
pushf
shlb
mov
cmpsb
or
pop
mov
stc
push
ds
stc
pusha
adc
subl
shll
out
adcl
aas
mov
je
mov
mov
roll
out
cmp
out
mov
je
pop
push
test
std
rcrb
popf
jno
sbb
mov
inc
aas
lds
hlt
in
faddl
mov
repnz
addl
lds
mov
in
mov
mov
icebp
pop
mov
xchg
adc
or
addr16
data16
mov
xor
add
out
ret
fwait
sub
pop
lods
stos
ret
cli
shrl
iret
xchg
sub
mov
scas
fidivl
jne
dec
scas
shll
mov
mov
ret
cmpsl
mov
aaa
popf
sahf
push
gs
fwait
xor
sub
loope
int3
mov
xor
mov
dec
add
cmp
dec
xchg
push
add
cli
loop
dec
fisubl
xchg
inc
sub
int3
stos
add
cmpsb
xchg
inc
int
stos
repnz
sti
setbe
pop
stc
xchg
jns
aaa
cld
push
xor
enter
addb
adc
adcb
dec
xor
mov
in
fdivl
fcompl
dec
xchg
mov
sahf
push
js
std
add
aad
in
sub
cmp
mov
push
mov
inc
cmc
rcrb
sub
sub
lret
ss
mov
jae
sbb
fcoms
inc
and
sbb
adc
mov
les
int3
push
test
lods
and
sbb
and
shrb
arpl
mov
dec
inc
pop
fs
fbld
sub
std
jno
jbe
scas
xchg
pop
cmc
push
das
ret
fxch
mov
xor
xor
out
test
push
fmul
pushf
mov
and
xor
fstl
or
sti
imul
sahf
inc
aad
mov
fwait
pushf
sub
push
mov
mov
add
paddw
pop
sbb
mov
out
incb
scas
mov
mov
pop
and
hlt
fdivrl
adc
aaa
sub
cld
or
mov
xchg
addr16
ljmp
outsl
xchg
shrl
addb
push
rorb
mov
pop
lret
roll
stos
dec
push
jns
dec
mov
pop
mov
mov
and
cmp
enterw
push
jmp
dec
scas
jmp
into
jp
add
mov
lahf
cmp
push
inc
les
add
imul
nop
push
out
adc
pushf
and
sub
inc
repz
pushf
in
or
push
cmp
or
lcall
imul
sbb
and
movsl
or
inc
add
fcmovne
jne
add
mov
out
loope
pusha
mov
adc
repz
imul
jns
inc
push
nop
addr16
pop
dec
outsb
mov
cltd
adc
lock
lods
jbe
and
loopne
mov
sub
ret
xchg
jbe
mov
mov
mov
inc
gs
cltd
cmp
inc
push
test
imul
xchg
fs
and
or
or
rclb
pushf
in
clc
cltd
pop
pop
sub
jbe
lahf
push
clc
dec
ret
inc
cmp
lods
pop
mov
xor
xchg
mov
sub
out
or
push
push
sub
inc
in
sub
int3
mov
mov
fcomps
rolb
sbb
jl
clc
nop
js
cld
mov
orb
mov
add
pop
inc
aaa
scas
fdivl
and
decb
dec
pop
test
push
xchg
dec
pop
sub
cli
sarl
push
adc
inc
push
cltd
xchg
mov
aad
repz
inc
std
cs
test
pop
ss
pop
loope
imul
mov
popf
outsb
xchg
cmpsl
jmp
sti
ja
push
jne
movsl
daa
cmp
jnp
mov
mov
mov
jno
cmp
xor
mov
fucomp
dec
mov
sarb
lds
orl
sub
pop
ret
sub
pop
inc
loopne
outsl
cli
sub
xor
cmpb
ret
xor
push
xorb
or
shlb
outsb
xchg
mov
pop
subl
push
scas
lds
push
mov
mov
movsb
fs
pop
aaa
jno
pusha
icebp
pop
push
out
test
xor
inc
mov
jb
sbb
pop
cmp
insb
sub
leave
dec
sub
jge
mov
aad
inc
movb
gs
adc
mov
push
movsb
movsl
push
dec
or
lds
fldl
imul
sbb
into
adc
mov
and
push
jg
daa
jnp
cs
sahf
stc
fnsave
test
xchg
in
mov
pop
dec
ret
and
repz
xchg
push
xor
xchg
pusha
ror
ss
sub
mov
mov
in
mov
mov
jmp
call
idivb
cmp
ret
pop
xchg
aaa
fs
add
push
inc
test
xlat
dec
mov
sti
xchg
ret
jnp
push
pushf
int3
ss
mov
mov
imulb
sbb
pop
inc
jae
fstps
shlb
dec
pop
das
adc
inc
sub
rorl
adc
adc
push
push
in
add
jecxz
fistl
int3
pop
leave
xchg
pop
lcall
xor
pop
push
mov
mov
lods
fadds
lods
dec
and
lods
fmull
push
pop
iret
xchg
sbb
adc
leave
stc
or
fcmovne
pusha
lods
imul
sbb
test
enter
mov
and
jle
daa
fnstcw
jb
sbb
call
mov
jae
loope
gs
or
and
rorl
popa
add
fs
out
mov
xor
lret
mov
ret
pop
leave
mov
jge
push
xor
jbe
ret
leave
stc
iret
sbb
loope
cmpsb
imul
adc
cmp
fstpl
sbb
xor
cmpsl
sbb
mov
stc
pushf
testb
fidivs
mov
jle
xor
jns
jl
fcmovne
aam
outsb
push
jno
orb
leave
add
sub
xor
mov
movsb
jl
movl
xchg
sbb
inc
int
das
xor
mov
frstor
int3
mov
xor
mov
fdivl
and
out
inc
cmp
mov
jl
inc
int
out
push
sbb
inc
in
mov
xor
andl
pop
scas
in
mov
lret
movsl
fcmovne
add
cmpsl
icebp
std
les
jg
stos
xchg
scas
sbb
xlat
and
jns
jo
jbe
cmp
push
dec
fwait
iret
jle
subb
jge
mov
orl
or
outsb
jecxz
push
out
adc
push
das
arpl
stos
xchg
cmpsl
add
adc
inc
lods
repz
inc
or
sbb
rorl
xchg
pop
xor
cld
xor
pusha
mov
mov
cmp
in
pop
pop
idivb
mov
cmpsl
in
hlt
jmp
sub
insl
cmpsb
xchg
xchg
mov
sbb
xchg
xchg
bound
jae
mov
inc
push
fsubr
jp
addr16
or
addl
call
mov
cmc
xor
cmpsl
arpl
pop
adc
in
jp,pt
and
aad
in
or
imul
cltd
jae
cltd
popf
mov
inc
xor
movsl
jbe
lods
das
in
hlt
lcall
or
xor
mov
mov
ja
and
sbb
sbb
xor
jae
insb
test
sbb
sub
sub
jg
movsb
loop
mov
aaa
and
pop
mov
rcl
push
fidivs
test
lret
aaa
rclb
test
add
adcb
outsl
cmpl
mov
jo
cmp
ret
in
push
loopne
mov
xchg
pop
repz
fdivrp
push
sti
lods
sub
clc
mov
adc
fs
add
in
or
or
das
sub
test
jae
scas
shl
icebp
decl
notb
adc
inc
mov
call
sahf
bound
mov
fcmovnb
jl
pop
loop
dec
inc
jecxz
push
xchg
xchg
cmp
shll
lret
mov
dec
fisubrs
leave
mov
into
imul
lea
mov
xchg
mov
push
arpl
repz
mov
mov
inc
stos
ret
cltd
fisubl
or
xor
cmp
addps
lock
pop
xor
sbb
movsb
mov
add
outsb
fs
rorl
clc
xchg
pusha
dec
dec
aas
loopne
mov
insl
mov
and
jg
rcr
adc
pushf
xor
mov
add
iret
aam
insb
rolb
data16
outsb
leave
das
das
mov
push
mov
divb
mov
and
sarl
sbb
push
adc
xlat
les
rorb
cmp
out
ss
daa
adc
xorl
and
pushf
negl
aaa
inc
ss
or
repnz
sbb
lret
shlb
out
and
pop
fs
or
or
ja
addr16
fnstenv
mov
and
dec
test
mov
test
inc
pop
pop
add
xor
imul
in
inc
jb
into
adc
jg
push
and
or
or
mov
xor
fwait
add
shrl
pop
sub
push
test
es
or
sahf
jecxz
insl
fmuls
ficoml
xchg
dec
andb
inc
out
adc
pop
xchg
xor
sbb
les
or
mov
scas
int3
add
cwtl
jle
or
adc
rorb
orb
inc
sbb
aas
pop
inc
ss
pop
scas
lahf
xchg
fsubl
addl
sub
mov
mul
sub
xor
adc
loope
push
in
iret
xor
call
rcrb
fistpl
jg
inc
cltd
loop
adc
pop
and
push
in
adc
adcl
int
lcall
cli
or
add
cltd
push
test
dec
jle
sub
in
dec
and
push
mov
or
adc
cwtl
push
mov
jmp
bound
jmp
adc
aam
mov
rcll
ljmp
stos
je
mov
fdivl
or
mov
lret
repnz
or
pop
ss
stos
in
dec
sahf
xor
dec
adc
fildl
add
cmp
mov
adc
sub
div
cmpsl
test
or
mov
inc
mov
push
pop
inc
jns
and
push
xchg
roll
sub
xchg
mov
cmp
scas
ret
push
ja
popf
lods
inc
dec
scas
out
aad
nop
mov
movsb
jbe
inc
repnz
filds
push
sahf
mov
fists
inc
pop
mov
dec
dec
dec
rorl
das
mov
inc
push
or
mov
ss
sbb
inc
stos
add
inc
mov
cmpsb
dec
and
lods
repz
push
rep
jo
nop
push
mov
cmpsl
xor
imul
adc
lock
inc
mov
mov
fistpl
int
push
mov
mov
fs
lock
call
mov
sarl
pop
insl
shr
push
pop
int3
es
dec
std
lahf
pop
add
cmp
gs
cmp
sub
je
push
call
push
js
into
mov
shlb
mov
pop
add
int
pop
sbb
loope
inc
mov
cltd
ret
mov
sahf
cmp
sti
mov
dec
push
in
mov
lea
adc
jmp
in
fsub
and
pop
and
pop
mov
xchg
mov
xchg
popf
adc
sahf
xor
jmp
jecxz
jle
adc
ret
add
push
mov
loope
stos
je
outsl
jecxz
jmp
stc
mov
dec
dec
aaa
cli
cmp
mov
dec
sbb
sub
ss
es
cli
sub
inc
push
mov
mov
pop
jmp
mov
shrb
jmp
dec
and
int
ss
outsb
stc
lds
test
cmpsb
pop
pop
into
pop
cmc
mov
mov
pusha
cs
push
mov
mov
sub
test
push
in
or
and
mov
scas
mov
mov
incl
into
dec
mov
mov
mov
push
adc
aad
imul
scas
mov
sbb
shrb
sub
loope
stc
sub
push
fisubrl
nop
pop
fucomp
mov
jbe
shr
mov
inc
pop
sub
dec
into
lds
push
mov
adc
xor
push
inc
decb
inc
int3
cltd
xchg
push
inc
xchg
jl
xchg
push
push
gs
dec
dec
jmp
mov
cli
and
pop
aas
sti
sub
aas
inc
and
mov
add
mov
cs
push
fs
cli
addb
fs
jns
add
cmp
mov
fstl
jo
sub
ds
mov
xchg
push
mov
jo
in
aam
dec
mov
jle
cltd
jmp
push
adc
fimull
or
cmovp
inc
or
pop
cwtl
adc
push
jmp
push
and
jo
mov
dec
scas
insb
adc
cmpb
imull
xchg
inc
movsl
jo
mov
imull
popl
adc
cltd
ds
cmpsb
fwait
xchg
xchg
loopne
sub
xchg
das
scas
aaa
popf
jecxz
clc
rorb
iret
aad
les
jbe
and
std
das
dec
ret
pushaw
mov
out
jl
aaa
jg
jno
dec
or
adc
ret
das
push
cmpsb
aad
sub
sti
dec
out
cmp
ds
imul
daa
pop
sbb
cmp
icebp
xchg
aam
sub
imul
pusha
cmovae
out
mov
fs
out
and
mov
mov
cmpb
jno
cmpb
sahf
testl
rorb
mov
js
shrb
leave
sbb
pop
xchg
and
loop
mov
cmp
add
pop
xor
mov
das
jg
ja
inc
in
xchg
xorb
or
icebp
push
add
adc
xchg
repnz
jb
aaa
data16
lret
cmp
dec
in
or
sbb
mov
jb
inc
int3
cs
jae
mov
sbb
xchg
cltd
movsb
add
inc
push
mov
scas
imul
sub
mov
mov
mov
pop
gs
test
mov
xor
ljmp
jno
add
rorb
sbb
fbstp
shl
out
sub
sti
sbb
pop
pop
jecxz
out
xchg
mov
sahf
jl
push
mov
push
lds
fs
mov
jne
out
sub
or
addb
lret
mov
dec
ja
cmp
fsubl
push
and
sub
xorl
jns
xchg
cmpsl
std
pop
or
movsl
incb
xchg
jns
out
aas
lods
and
nop
xchg
push
and
adc
repz
sti
sub
notb
cli
jns
mov
and
popf
mov
dec
adc
sub
arpl
cmp
jmp
rolb
repz
mov
xor
pushf
fdivs
cmp
pop
ja
add
mov
out
rolb
lret
fadds
or
dec
lret
xchg
testb
push
push
test
rol
jg
xchg
mov
mov
imul
and
rcll
arpl
mov
int3
adc
ficomps
push
loopne
pop
fnstcw
pop
pusha
aas
cmp
test
and
pushf
push
dec
aas
in
mov
lret
mov
out
and
enter
fs
xor
movsl
cmp
adcb
fsts
lcall
sub
and
ljmp
aad
jnp
add
movsb
mov
cmpsb
cmp
fs
mov
sbb
movsl
mov
and
mov
sbb
xchg
xlat
add
sbb
out
or
lret
jmp
movsl
mov
xchg
push
repnz
jl
lret
lods
push
xor
mov
cs
jns
add
insl
shll
sub
out
cld
dec
adc
testb
cmp
mov
pop
cmp
jns
push
fs
sub
das
lret
cmp
mov
data16
sti
jae
or
arpl
push
dec
adc
push
imul
fidivs
dec
xchg
ret
push
aas
cmpsl
pop
jle
pusha
sbb
in
fs
or
aaa
into
dec
push
inc
pushf
pusha
in
insb
xor
inc
roll
push
push
mov
leave
jecxz
cwtl
bswap
pop
ljmp
and
push
dec
and
aad
mov
mov
cmp
nop
js
test
sbb
sbb
pop
push
out
mov
cs
xor
dec
mov
scas
pop
call
imul
dec
sbb
sbb
sbb
mov
lods
xor
js
cmp
mov
push
jecxz
adc
jbe
loop
mov
clc
lods
dec
sub
and
out
scas
inc
jge
jo
sbb
hlt
jge
inc
jecxz
or
mov
mov
ss
push
pop
and
sbb
clc
mov
mov
jge
cmp
frstor
bound
lret
shrl
mov
and
xchg
adc
push
cwtl
out
ljmp
jecxz
mov
icebp
hlt
inc
pop
sets
nop
adc
adc
sbbl
sbb
in
mov
in
mov
ds
and
fwait
mov
jge
xlat
testl
sub
into
xor
push
add
int3
xor
arpl
and
sbb
and
inc
adcl
jge
mov
mov
push
ret
bound
adc
pop
xor
sub
fucomp
fcmove
insb
jg
xchg
mov
ret
cmc
outsb
mov
add
int3
pop
nop
sbb
adc
loopne
fisttpl
jg
xor
xchg
cld
mov
rol
jb
mov
lret
sahf
dec
jo
adc
repz
xchg
inc
dec
mov
mov
add
adc
mul
or
adc
push
jmp
jle
xor
out
and
dec
push
add
jbe
cltd
fstpl
cltd
movsl
add
lock
sub
in
insb
jbe
mov
pop
imul
mov
jae
in
xorl
leave
xchg
jg
pop
jno
inc
xchg
jge
sub
in
repnz
loopne
mov
cmpsl
mov
sbb
imul
test
dec
mov
jg
pop
cmc
pusha
gs
out
mov
sbb
mov
inc
cwtl
sub
movsl
addr16
outsl
rol
in
cmpsl
sbb
imul
cwtl
hlt
xchg
addr16
shrb
cmp
out
mov
mov
inc
stc
and
add
xchg
mov
testl
mov
push
repz
mov
sbb
ljmp
cmp
popf
cmpsl
cwtl
cwtl
clc
rcl
movsl
pop
push
xchg
hlt
scas
mov
es
fnstsw
out
xchg
andb
cmp
stc
mov
or
or
fnstenv
pop
pusha
mov
pop
lahf
xchg
cmpsb
adc
rorb
shlb
mulb
xor
lret
cmpsl
cwtl
push
daa
nopl
sbb
pop
xchg
mov
faddl
idivl
and
xor
jbe
xchg
sbbb
stc
jecxz
imul
cmp
loopne
pop
sub
jg
mov
dec
mov
sub
pop
es
cmp
xchg
dec
cmc
popa
cltd
icebp
mov
mov
lock
mov
sub
ljmp
into
mov
dec
xor
lods
in
negb
mov
bound
sarb
inc
push
int3
cltd
dec
popa
les
imul
std
inc
and
pop
ficompl
and
push
mov
add
add
pop
std
daa
mov
xor
cmp
pop
mov
adc
pop
or
or
test
push
mov
loop
nop
lret
dec
jb
iret
out
sub
jg
stos
jbe
pop
ret
push
push
sti
add
int
mov
add
cs
or
or
mov
sbb
cmp
loope
pop
jo
imul
adc
movsb
mov
mov
arpl
mov
xchg
pop
push
movsb
test
imul
xchg
mov
jl
jecxz
add
mov
xchg
push
or
ljmp
mov
nop
outsl
loopne
daa
mov
pushf
jle
iret
nop
popf
leave
jo
mov
xor
jns
dec
inc
mov
jg
sub
mov
mov
fstps
dec
les
cmpsb
aad
mov
cltd
call
xor
adc
insb
hlt
cmc
repnz
popa
pop
cmp
pop
nop
pop
mulb
or
cmpsb
push
cmc
mov
js
es
mov
push
jmp
and
dec
lods
xor
adc
loope
and
add
in
imul
stc
into
add
mov
push
jg
add
mov
inc
inc
int3
pop
mov
sub
fnstenv
xorl
gs
mov
insb
in
es
pop
sbb
int3
xchg
aam
out
mov
neg
je
ljmp
sub
fisubs
mov
and
and
ljmp
cmpl
out
mov
sbb
rcrb
sbb
dec
cmpsb
sarl
adc
jmp
lods
iret
dec
push
mov
ss
movsl
mov
xchg
dec
dec
or
xor
je
jns
add
js
insl
push
adc
andb
cs
daa
jg
sub
in
xor
leave
xchg
mov
mov
adc
ror
repnz
mov
mov
cmp
and
mov
jmp
xchg
xor
out
stc
lock
pop
lcall
stos
xchg
enter
inc
mov
or
cs
jle
cmp
cmp
sbb
fisubrl
pop
xchg
loop
adc
adc
add
pop
jo
adc
cmp
lcall
clc
fsubrs
out
call
cld
xchg
cli
test
mov
pop
aad
or
nop
imul
push
mov
xchg
xchg
cmp
les
movsb
cmp
inc
divl
int3
in
lods
aas
rcrl
xchg
inc
cmpl
xchg
cmpl
sub
inc
inc
test
xlat
ljmp
loope
fldenv
pop
inc
pop
lret
ret
repnz
icebp
xchg
sub
negb
movsl
mov
cmp
push
push
xchg
pop
xor
fcomip
inc
add
add
rorb
iret
dec
popf
jmp
cmp
mov
ret
sub
paddusw
sarl
add
mov
sarb
in
adc
xor
in
rolb
xchg
negl
stos
sahf
add
subl
add
pop
and
mov
sub
icebp
cltd
cmp
or
xchg
push
push
sbb
or
enter
mov
fdivrs
jne
cmp
mov
mov
int
lods
out
push
insb
fstpl
xchg
vpsllw
data16
jge
popf
push
push
jnp
mov
push
push
sarb
dec
mov
mov
pusha
mov
and
fisubrl
fsqrt
enter
xchg
subl
add
or
pusha
shrb
jne
jae
sub
jae
xchg
lcall
outsb
stos
icebp
cld
inc
lods
mov
adc
pop
lret
dec
fsub
and
mov
into
outsl
arpl
cmpsl
rorb
lret
call
fs
cld
mov
out
insl
or
lea
sub
mov
mov
and
bound
mov
imul
fiadds
pushf
daa
mov
cltd
addr16
movsl
xor
decl
shlb
stos
cmc
filds
add
jo
push
shrl
push
xchg
lock
ja
push
xchg
inc
mov
insl
gs
sub
jl
push
cs
sahf
or
push
shr
stos
pop
test
fdivp
test
mov
pop
xchg
cmp
push
add
xchg
and
in
outsl
mov
data16
mov
inc
into
aad
dec
add
xor
int3
xchg
sbb
stos
data16
imul
iret
aad
mov
loop
pop
sbb
fnstenv
cld
pop
ror
mov
or
lahf
add
leave
or
popf
lods
push
shl
and
fcomp
sahf
push
inc
pop
sub
in
jge
mov
cmp
pusha
push
fidivl
sahf
sub
mov
popl
jae
xor
mov
stos
sub
jno
xchg
js
rcll
mov
rol
push
jg
mov
iret
sub
repnz
mov
dec
xchg
xlat
iret
arpl
adc
das
mov
cmpb
test
xchg
add
adc
cli
pop
jnp
cmp
push
sbb
leave
xchg
shl
mov
stos
dec
jmp
fstl
ret
xlat
and
out
push
cwtl
aaa
pop
sbb
les
out
cmp
push
mov
mov
push
push
mov
cwtl
pop
movsb
push
or
sub
lods
mov
addr16
push
mov
xor
cmpsl
clc
inc
imul
mov
mov
xor
cmp
xorl
jno
daa
jecxz
dec
and
fnsetpm(287
ds
mov
dec
and
jg
aas
jno
jnp
sbb
cmp
sbb
xor
xchg
adc
sub
int
sbb
push
fstp
test
lock
stos
into
cmp
ret
inc
andb
add
cltd
fisubrs
mov
je
adc
popa
cwtl
mov
jb
into
xor
push
inc
cmp
ss
das
mov
scas
push
sub
xor
imul
lock
sub
out
add
push
jmp
jp
orl
sub
loopne
scas
stos
bound
mov
mov
dec
pop
dec
stos
inc
test
imul
mov
loop
lahf
xchg
dec
mov
jno
jl
dec
and
add
aaa
popf
push
or
jnp
sbb
mov
jecxz
loopne
mov
shrb
aas
scas
lods
adc
popa
mov
push
pop
sbb
fdivr
add
jae
movsb
push
outsl
xchg
pop
mov
out
jno
ljmp
inc
xor
movsb
ljmp
sti
ja
add
in
or
cmp
cmp
inc
pop
gs
aad
mov
push
je
out
mov
cmp
orl
jbe
out
inc
les
jae
incl
in
fimull
add
push
mov
roll
dec
jle
les
outsl
repz
mov
fnstcw
sti
xchg
outsl
cmp
jl
dec
inc
lds
pop
xorl
cmpsl
sub
dec
mov
xchg
sbb
shll
cld
and
filds
pop
sub
pop
cmpsb
cltd
rcrl
mov
cmp
cmp
jb
cmpsl
int3
fdiv
xchg
je
dec
mov
movsb
push
mov
testb
mov
mov
push
je
xor
imul
scas
in
xor
pop
push
loopne
inc
sahf
xchg
movsb
cmpsb
andb
push
xlat
push
xor
cltd
cmp
negl
cmp
xchg
mov
xor
mov
lret
mov
into
outsl
sbb
or
and
arpl
aam
outsb
push
fdivrs
stos
mov
rcll
or
dec
xchg
ficomps
mov
sbb
pop
shlb
jnp
xor
ss
xor
testb
lds
dec
mov
out
sub
lock
or
mov
and
out
dec
pushf
les
xchg
xor
pop
mulb
pusha
out
test
cmp
fs
xchg
cmovae
ret
jno
mov
test
stos
pop
data16
fucomp
iret
or
push
push
xchg
xchg
adc
cmpsl
int3
data16
or
stc
xor
inc
test
lahf
fstl
pusha
mov
aas
push
sub
xchg
add
jo
cmp
movsl
pop
mov
pusha
cmp
cmp
and
sarb
xchg
xor
repnz
inc
in
insl
cs
movsl
inc
inc
out
add
nop
in
and
xor
or
adc
jl
arpl
aam
xchg
inc
mov
into
rcrl
xor
pushf
xor
adc
jo
jns
ret
or
cli
jle
mov
cmp
cs
cs
outsb
insl
cmc
pop
mov
cmpsb
mov
sub
mov
hlt
lahf
dec
inc
inc
cmp
jle
lock
adc
mov
out
arpl
ret
icebp
cmc
and
jp
mov
lock
dec
sti
lock
pcmpgtw
sbb
fwait
mov
jno
js
jp
fwait
mov
mov
xlat
cmpl
iret
mov
xor
xchg
jo
js
or
jae
fs
jle
dec
jp
lcall
sub
xchg
add
testl
iret
loope
jle
ret
setg
nop
lcall
outsl
pop
jne
outsb
sbb
lret
pop
dec
jecxz
mov
scas
mov
and
cwtl
test
cmp
insb
frstor
sbb
push
push
push
add
sub
mov
push
push
lock
je
rcl
repnz
fstps
jge
not
cmp
mov
or
sarl
adcb
lock
lret
jae
test
sub
cmpsl
jae
lods
mov
push
dec
mov
dec
sahf
cli
ljmp
xchg
add
cmp
xchg
jo
or
adc
xchg
xchg
cmp
cs
iret
jp
push
popf
mov
xchg
jb
fbld
cmp
jbe
jne
inc
mov
mov
push
xchg
and
dec
and
cmc
and
mov
lcall
fnstcw
fwait
cltd
mov
cwtl
iret
push
add
jmp
mov
lret
adc
pop
imul
sbb
pop
addr16
xchg
mov
movsb
adc
neg
lods
mov
jmp
lcall
push
jecxz
test
imul
pop
inc
rclb
out
mov
scas
dec
cmpsl
pusha
xchg
and
adc
cwtl
push
popf
std
xchg
popa
cltd
pop
clc
inc
xor
add
and
scas
cmpb
sti
js
icebp
ds
inc
mov
rol
and
mov
das
jg
mov
daa
mov
rcrl
repnz
repz
int3
aaa
dec
push
out
rorb
fsubrl
xbegin
mov
adc
push
out
je
push
int3
loopne
xor
in
xchg
aad
les
xchg
popl
inc
xorb
iret
ds
adc
ret
push
jns
pop
sub
push
clc
addr16
ret
push
cmp
and
jb
pop
sbb
clc
add
js
arpl
jo
sbbl
jbe
lods
cmp
adc
jnp
nop
or
stc
add
sbb
jo
cmp
sub
mov
rcll
mov
jp
adc
stc
mov
xchg
call
fmuls
hlt
inc
sub
add
push
ds
stc
xor
push
ret
push
arpl
xor
adcl
mov
xor
jae
icebp
xchg
test
sti
stc
jg
outsl
jb
dec
sbb
int
es
mov
xor
xlat
mov
lahf
fisubrl
dec
inc
adc
mov
xchg
lods
mulb
or
xor
dec
arpl
int3
in
js
mov
jae
lahf
outsl
aad
aam
adc
incb
jg
cmp
insl
or
nop
pop
outsl
cmpsl
ret
add
jnp
pop
shll
mov
daa
pop
test
enter
repz
loope
pop
js
in
pop
adc
stc
test
fistpl
mov
sbb
sub
test
jg
mov
out
pushf
mov
add
in
xchg
inc
gs
dec
sub
mov
mov
sbb
xchg
jae
push
push
dec
xchg
jnp
outsl
add
pop
pop
out
lgs
sahf
cmpsl
jge
mov
mov
xchg
sub
adc
pop
mov
push
and
in
mov
sub
mov
ljmp
xor
dec
loop
lcall
ret
dec
and
or
lcall
or
fs
imul
and
sbb
and
lcall
cmpsl
xchg
mov
xor
dec
mov
xor
xchg
imul
jge
xor
int
loope
jg
enter
jne
rclb
shrb
mov
push
mov
sub
push
jb
std
ret
pop
int3
ljmp
dec
gs
xchg
xchg
fs
inc
ficoml
out
mov
in
rcr
ret
sbb
pushf
cmp
inc
pop
xchg
out
shlb
push
test
rclb
add
push
adcl
mov
mov
stos
sub
outsl
inc
mov
xorb
icebp
mov
xor
add
arpl
xchg
outsl
insb
sbb
lods
insl
cmpb
sub
add
inc
scas
push
std
loopne
fists
lea
cli
mov
cmp
cmp
push
loope
shll
pop
dec
mov
jge
lret
int
dec
mov
mov
lods
stos
sub
mov
out
cmpsb
mov
mov
mov
adc
mov
stc
clc
jge
dec
mov
bound
mov
sub
jb
lods
pop
add
outsb
mov
mov
es
ss
cmpsl
jle
outsb
lret
xchg
cmp
pushf
pop
mov
xor
jmp
testb
loopne
xchg
imul
mov
cmp
inc
es
adc
or
push
outsb
pop
jbe
cmp
jle
dec
xchg
cmp
ret
sbb
adcl
push
mov
imul
cmpl
lret
jge
js
lcall
js
sti
cmp
mov
push
mov
bound
lods
xchg
mull
inc
fimuls
aaa
inc
jl
dec
iret
dec
sub
push
xor
ffreep
push
xchg
mov
xlat
out
xor
subl
push
mov
outsb
out
inc
adc
add
pop
jnp
aam
mov
xchg
pop
fwait
jle
aad
jnp
push
or
xor
jp
adc
xor
daa
mov
inc
xchg
ror
aas
mov
adc
call
mov
inc
jne
inc
push
push
xchg
add
mov
cltd
jmp
fstl
aam
mov
lahf
cmp
in
and
sahf
inc
mov
addl
or
loope
cmpsb
test
aam
insl
push
and
push
inc
cmc
das
fwait
cmp
lods
pop
out
je
jnp
scas
gs
loop
jae
mov
inc
sarl
es
dec
daa
jnp
mov
xchg
sbb
jp
hlt
pop
into
call
lds
adc
cli
or
negl
xchg
cmpsb
mov
xchg
sbb
push
cld
ds
xor
gs
or
int
inc
cmp
insb
gs
sbb
xchg
xchg
pop
jb
dec
daa
inc
loop
hlt
ret
jb
sbb
jecxz
insl
dec
stos
mov
popf
mov
sub
test
andb
in
cmpsb
insb
dec
leave
adc
cli
pop
dec
ss
mov
cmpl
dec
gs
or
das
mov
int
clc
test
js
mov
shll
push
mov
pusha
out
pop
ficompl
leave
out
in
arpl
push
sbb
xchg
ret
or
arpl
dec
arpl
loopne
je
xor
repz
mov
in
dec
lock
jno
xor
imul
jne
jne
sbb
incb
fsubr
xor
xor
adcl
push
outsb
mov
std
pop
push
das
mov
inc
sbb
pop
inc
xchg
fs
mov
inc
jle
jl
inc
jl
aad
in
mov
pop
imull
mov
aas
fiadds
dec
jp
pop
movsl
xchg
ja
jp
repnz
mov
xor
jns
gs
xchg
pushf
and
shll
add
mov
hlt
sbb
cld
push
shlb
mov
fldcw
in
xor
ficoml
out
fs
xchg
scas
or
mov
or
mov
pop
dec
rorb
sarb
sbb
pop
mov
push
out
adc
xchg
filds
out
fistps
sub
test
out
enter
ret
push
and
dec
loopne
jecxz
ret
lods
lods
leave
inc
les
es
jne
pop
inc
and
mov
jmp
jns
jnp
xchg
and
test
mov
incl
cmpsb
scas
mov
sbb
inc
push
cmp
jp
jecxz
jb
daa
dec
adc
bound
leave
pop
adc
sar
mov
sbb
dec
in
cli
jmp
ss
cltd
inc
sbb
call
daa
inc
mov
xor
xor
xor
ljmp
inc
lds
inc
dec
dec
scas
mov
ss
imul
and
xor
out
mov
out
mov
test
sub
cmc
sbb
rcrb
test
cli
and
mov
rclb
mov
sahf
add
out
lcall
movsb
cs
hlt
repnz
or
leave
xchg
stos
aam
fcoms
push
inc
test
call
push
mov
cmp
stos
pop
sbb
inc
cs
dec
neg
dec
mov
fmull
pop
xchg
add
jp
in
mov
dec
in
mov
clc
jmp
in
xchg
pop
jbe
lret
popf
ss
mov
orl
cmp
pusha
scas
icebp
sbb
stc
sbbb
add
lods
jno
in
cli
pushf
jmp
push
test
frndint
mov
sbb
push
cmp
cmp
xchg
test
jg
cwtl
pusha
xor
loop
mov
push
cmp
jmp
stc
js
push
jg
ret
dec
or
mov
xchg
cli
cmp
aad
pop
cmp
sbb
jnp
push
dec
out
push
mov
fsubrl
pop
push
xchg
or
scas
rcrl
cmpsl
sbb
sbb
sbb
fdivrp
push
xor
cmp
repz
shrl
imul
xchg
push
cltd
xchg
push
clc
cmp
leave
mov
mov
or
sbb
xlat
insb
in
rcll
fiaddl
cmp
nop
or
cmp
push
rclb
add
mov
cmpl
sbb
gs
rol
fmuls
dec
inc
mov
fldt
xor
pop
push
dec
pop
ss
xor
movsl
scas
mov
lret
xor
popa
loop
mov
gs
push
lret
mov
popa
pop
stos
test
xchg
xor
xor
jle
sarl
cmpsl
mov
ljmp
stos
cltd
lcall
fisttpll
push
push
sbb
dec
sahf
ljmp
leave
fistpl
sub
mov
fwait
sub
addr16
push
inc
or
inc
and
test
push
xor
fidivl
jne
sbb
bound
pop
push
and
pop
push
stos
mov
and
pushl
aas
jmp
push
or
hlt
lods
pop
int
inc
xchg
jecxz
pop
jecxz
es
push
add
int3
push
mov
push
das
pop
xor
aam
lcall
mov
cmp
movsb
add
mov
shll
add
out
jbe
popa
lods
pop
jo
mov
push
xchg
ds
js
repnz
out
ds
in
es
jp
or
cmp
xchg
sahf
outsb
sub
xor
es
lock
cmp
push
cmp
jmp
insb
lods
lret
adc
push
pop
jbe
insb
jg
aad
xchg
jns
loopne
inc
fstpl
jns
shll
xor
xor
cmpsb
lods
cwtl
cmp
cmpb
roll
lea
inc
inc
js
insb
sub
out
test
add
xor
fistl
arpl
mov
sti
test
shr
mov
pop
aaa
mov
push
leave
jl
scas
lds
das
xlat
jo
mov
pusha
dec
std
dec
push
jmp
cmp
lcall
insl
xchg
cmp
push
push
ljmp
aad
cmp
push
out
scas
in
fwait
dec
mov
and
mov
pop
inc
icebp
xor
xor
jg
in
lods
fistl
xor
icebp
leave
add
mov
xor
cli
push
or
push
or
into
insb
xchg
xor
insl
push
je
lods
jbe
jmp
adc
insb
movsl
xor
enter
mov
cmp
cwtl
cltd
adcl
loop
ds
es
cmpsl
inc
fsqrt
inc
mov
cli
test
xchg
xchg
out
adc
inc
jb
and
push
fwait
and
pop
sub
daa
sub
mov
sbbl
mov
jp
roll
div
into
jbe
test
add
push
int3
shufps
sbb
jae
push
daa
xchg
call
inc
enter
enter
cli
pop
dec
xor
negl
ss
dec
xor
pop
pop
xchg
jb
divl
mov
push
pushw
push
loopne
xor
push
mov
mov
js
ja
iret
adcl
pop
push
mov
xchg
daa
xor
mov
out
divb
fnstcw
xchg
and
mov
popa
mov
je
mov
data16
inc
jl
call
xchg
adc
movsb
inc
inc
push
xor
rclb
mov
ds
loop
mov
xchg
xor
push
sbb
jae
cmp
enter
or
cmp
sub
in
sarb
cmc
add
dec
inc
fldcw
ja
int3
sbb
fstpl
inc
cwtl
stos
pop
pop
xchg
mov
std
xchg
loope
int3
aas
les
push
cmp
dec
mov
sub
repnz
push
jo
xchg
mov
insl
sub
in
stc
mov
orl
adc
scas
jecxz
icebp
cmp
pop
out
inc
mov
mov
xchg
add
pop
jg
test
cwtl
xor
outsl
mov
ss
and
lcall
xor
push
add
adc
fstp
lods
push
mov
mov
aad
js
mov
stos
mov
stos
ror
push
iret
mov
jnp
and
jp
js
push
test
dec
pop
not
xchg
cwtl
pop
xor
pop
gs
cwtl
test
jbe
xorl
aaa
xor
es
das
shlb
mov
out
gs
dec
pop
rcl
jno
lret
pop
stc
pop
shlb
ds
inc
es
ja
mov
adc
sbb
sub
test
ret
rcl
rcll
cltd
mov
mov
lahf
mov
xchg
mull
or
aad
add
movsb
or
add
add
sub
rclb
jge
push
add
movsl
mov
pop
mov
inc
cmp
mov
inc
jp
les
pop
mov
dec
mov
mov
add
aas
das
lea
cltd
nop
mov
jmp
xorl
rolb
xlat
and
dec
cmp
jge
push
lods
dec
jecxz
jno
filds
add
mov
xchg
in
aam
pop
mov
dec
lea
int
ja
cli
push
push
pop
push
cmpsb
outsb
and
jbe
mov
push
mov
jbe
push
and
pop
pop
mov
inc
or
js
xor
cmc
in
push
jmp
mov
dec
mov
mov
jno
subb
aam
aad
xchg
xchg
lods
sbb
imul
out
pop
mov
ret
cltd
loope
mov
jbe
inc
mov
ret
in
loopne
and
js
sti
adc
mov
fmull
sbb
pop
cmp
cmp
fs
or
rolb
stos
faddl
jl
jne
movsb
call
xor
adc
mov
ja
jg
popa
pusha
xchg
xor
fistl
and
mov
imul
shr
imul
jno
sub
mov
jp
xchg
outsl
mov
xchg
push
or
dec
imul
xchg
and
or
popa
xor
mov
jg
dec
fbstp
lahf
pop
rcll
in
push
jne
repz
aaa
bound
fwait
xchg
adc
fs
jne
js
imul
inc
js
jbe
add
adc
aaa
inc
popf
xor
mov
incl
xchg
sub
xchg
lds
pop
roll
jne
jl
shlb
inc
bndstx
aad
cltd
xor
jbe
mov
notb
rclb
loop,pt
scas
dec
aam
into
xchg
jge
inc
dec
cmpsb
xor
and
popl
push
aas
movsl
push
mov
xor
mov
lret
lahf
fistpl
push
movsb
add
xchg
pop
xchg
mov
in
push
and
mov
push
push
push
ds
and
dec
inc
adc
cmp
insl
inc
inc
push
nop
es
shrl
cmp
jbe
push
movl
das
cwtl
pusha
mov
jns
lods
clc
enter
lock
cli
sti
in
add
pop
xor
sub
lds
fbstp
test
popa
or
jo
int
dec
inc
add
sub
lock
lods
stos
jmp
mov
clc
mov
mov
insb
fisttps
and
outsb
pop
out
negb
push
add
pop
ja
int
cld
rolb
xchg
insb
inc
out
or
aad
mov
xor
inc
pop
push
add
out
int
out
mov
jg
push
xchg
push
push
jnp
enter
xchg
mov
push
jb
leave
int
inc
xor
pop
push
inc
push
into
inc
loopne
out
stos
cmc
adc
imul
arpl
xchg
sub
fwait
outsl
or
mov
lock
int
jmp
inc
loopne
lods
daa
andl
dec
add
fs
jg
xchg
adc
xor
mov
shll
adc
lahf
push
divb
out
cmp
inc
in
insl
push
ror
and
int3
stc
call
cmpsl
cmpl
std
ljmp
roll
cli
mov
sub
jbe
pop
jle
push
add
lret
inc
sbb
sub
ret
lds
outsb
test
push
inc
into
out
aaa
popa
pop
loopne
call
clc
push
mov
stc
lock
shlb
pusha
inc
test
lahf
int3
arpl
mov
cltd
cs
add
mov
mov
inc
or
or
ror
xor
sub
cwtl
or
jb
mov
int3
pop
fmuls
std
fimull
aad
sbb
fstpl
nop
sbb
jae,pn
or
xor
sbb
icebp
mov
iret
adc
mov
clc
xchg
xor
pop
and
inc
push
jl
movsb
dec
add
push
push
pushf
aam
add
mov
pushf
mov
push
jno
add
pushaw
out
or
pop
mov
xchg
lret
push
push
sbb
clc
sbb
subb
push
push
add
push
jecxz
enter
xchg
pop
and
adcl
outsl
push
rcrb
and
jp
es
or
mov
dec
mov
hlt
daa
pop
in
inc
add
push
jle
dec
daa
outsb
jl
mov
cwtl
jbe
in
inc
push
in
subb
jg
mov
jp
xchg
rolb
xchg
in
sub
mov
popf
repz
cwtl
aaa
addl
dec
fs
cbtw
in
cmp
aam
loopne
adc
adc
jle,pt
es
pop
inc
in
cmc
sub
cltd
mov
jbe
dec
negl
inc
iret
fnsave
pop
roll
inc
sbb
push
les
jmp
cmp
push
mov
sub
cmp
sbb
cwtl
pop
inc
fnstsw
test
jmp
xor
js
shr
push
mov
or
das
mov
mov
test
outsb
stc
mov
adc
fmulp
je
mov
cld
faddl
inc
pop
outsl
shlb
cmpsl
nop
push
jl
es
jno
dec
int3
outsb
mov
inc
mov
lcall
in
shrl
lahf
iret
test
insb
jbe
gs
cmpsb
fs
adc
and
mov
pushf
int
fmull
ljmp
add
or
sbb
jl
sub
cmpsb
xor
aaa
and
gs
sbb
add
push
ljmp
cld
enter
sbb
sarl
push
cmp
mov
std
add
lods
iret
daa
cmp
and
and
pop
fcoml
out
adc
loopne
xchg
xorb
xchg
xor
xor
inc
cs
adc
inc
shl
jns
in
je
out
adc
mov
fucomi
addb
ret
cmp
push
mov
shlb
cwtl
enter
push
adc
ficoml
fmull
mov
dec
xor
lods
mov
movsl
cmp
xor
inc
enter
adc
or
or
pop
icebp
push
imul
imul
jae
js
push
add
xlat
js
mov
iret
imul
cmp
rcrb
inc
mov
and
push
das
mov
shlb
ficoml
popf
push
dec
and
jle
sub
inc
inc
pop
or
psrad
adc
repnz
aad
stc
leave
lahf
sbb
lea
inc
leave
in
dec
test
aad
mov
cmpsb
pop
sbb
add
cmpsl
insb
clc
pop
test
out
es
stos
xchg
out
cmp
pushf
rcl
push
das
cmp
cs
cs
xor
cmpsb
dec
fsts
hlt
xor
push
mov
cwtl
or
adc
cmp
xor
xchg
push
sti
inc
ret
add
xor
push
jns
dec
pop
sub
insb
aaa
es
decb
ljmp
test
xchg
ds
addl
mov
sbb
lds
and
das
in
das
mov
jne
loop
sbb
push
mov
and
cld
or
cmp
repz
int
xchg
inc
cmpsb
dec
es
xor
and
ret
dec
cmp
push
jmp
xorl
cltd
gs
sbb
mov
pusha
sub
cmp
push
cmpsl
sbb
sub
pop
popf
mov
cli
inc
lret
mov
gs
outsb
shlb
scas
push
rclb
inc
sbb
fidivrs
pop
cli
in
dec
scas
cltd
pop
mov
sub
testb
test
pop
rorb
fnsave
sahf
pop
xchg
ds
incl
movsl
jno
or
jmp
fbstp
shlb
stos
and
xor
aaa
add
mov
outsb
mov
sbb
xchg
fstpl
cli
mov
repz
mov
xorl
cmp
dec
daa
gs
icebp
jae
cmp
mov
pop
mov
cmp
sarl
test
repnz
bound
and
push
ds
dec
ljmp
pushf
push
ret
mov
jbe
adc
jns
jnp
addb
cld
add
inc
mov
pushf
gs
repz
in
dec
fidivrs
cmp
addr16
ret
sub
xor
pop
jae
nop
push
mov
addb
add
and
inc
ror
xchg
cmp
int
push
jl
dec
test
in
jg
inc
mov
incl
jne
xor
sarl
inc
cmp
fstps
rol
cmp
cmpsl
or
addb
outsl
aam
scas
mov
shrl
add
orl
dec
iret
push
xchg
sub
popa
inc
sub
dec
push
or
add
mov
push
decl
mov
push
inc
stc
mov
sarb
inc
or
out
cwtl
inc
out
jl
fistl
jg
xor
shl
mov
inc
pushf
cmp
xchg
sbb
lds
and
pop
imul
xchg
jmp
cmp
aam
xlat
ja
xchg
adc
and
mov
pop
mov
lock
hlt
adc
fdiv
fdivs
loope
movsl
sbb
push
xor
push
add
arpl
imul
adc
ficompl
mov
mov
mov
inc
lret
sti
out
into
leave
sub
xor
mov
movsl
loopne
frstor
dec
jbe
sbb
fucomp
push
into
aas
dec
jb
jne
dec
cltd
imul
adc
dec
mov
dec
jns
cmp
mov
cmp
dec
pusha
or
pop
mov
inc
push
out
mov
ss
aas
add
jmp
jg
repz
fs
dec
leave
or
popf
xor
push
jns
out
lock
sub
std
rol
push
icebp
movsb
mov
add
out
sbb
or
ret
sti
call
push
add
push
mov
divl
cmp
lods
lcall
lods
in
sub
xchg
cmc
sub
into
jb
add
leave
pop
mov
jp
inc
cmpsl
mov
xchg
ret
dec
adc
xor
push
sbb
push
lds
adc
jecxz
mov
xor
sub
or
xor
inc
jnp
lcall
shll
cmpb
sbb
stos
fwait
pusha
jle
cs
pop
aad
jbe
sbb
inc
and
loopne
cmp
ds
push
add
enter
addr16
jecxz
sahf
xor
dec
movsl
xchg
fadds
mov
sbb
dec
enter
sbb
sub
push
fwait
lcall
pop
out
cld
mov
sbb
inc
xor
cmpl
mov
mov
outsb
mov
out
mov
mov
sub
dec
in
fmul
in
outsl
push
jg
cwtl
sbb
pop
cwtl
insl
dec
lcall
lds
stos
mov
mov
jge
push
sub
test
mov
sub
dec
mov
in
or
mull
stos
push
je
mov
mov
pop
ffree
xchg
push
pop
es
inc
cwtl
mov
mov
inc
mov
ret
roll
dec
mov
mov
xor
scas
lock
add
pop
push
cli
es
ss
int3
loopne
push
sbb
or
cmp
inc
lods
mov
push
mov
push
add
imul
mov
xchg
jae
push
mov
fbstp
rorl
push
add
jns
shll
jae
mov
and
and
jo
loope
inc
call
mov
rcrl
je
das
pop
jb
roll
cld
jb
mov
adc
xor
jnp
mov
cmp
nop
jg
adc
addb
xor
ljmp
addb
cmp
scas
mov
lahf
cwtl
dec
cmp
jge
shr
repz
test
sbb
mov
dec
movsl
stc
cwtl
xchg
mov
pop
js
sbb
or
pop
popf
xchg
rolb
mov
addr16
movsl
imul
and
mov
rclb
lcall
jne
es
lcall
sbb
icebp
mov
nop
into
sahf
xchg
into
ret
cwtl
dec
cwtl
js
jbe,pn
das
shr
mov
aaa
xorl
daa
cmpsl
xchg
addr16
sub
movsb
test
cmpsl
pop
clc
add
out
pop
adc
inc
ret
dec
out
into
sti
xor
xor
out
pop
leave
stc
addr16
jne
int
adc
mov
jae
pop
lcall
mov
outsb
imul
xor
or
sbb
pop
xadd
and
mov
aas
shlb
sbb
roll
or
jno
outsb
adc
mov
sbb
xchg
out
jge
adc
mov
mov
shl
test
div
xor
dec
mov
outsl
push
stos
or
jb
in
xchg
inc
roll
fwait
and
fcom
xor
xchg
or
pcmpeqd
jl
xor
and
aas
xchg
and
in
push
outsl
mov
data16
cmp
push
les
mov
into
lret
lret
push
data16
mov
les
arpl
sbbb
push
push
pop
mov
cmp
xor
pop
push
dec
out
lea
shlb
xor
and
popf
cwtl
fidivrs
jecxz
jge
out
insb
jecxz
iret
roll
inc
lock
xchg
enter
sub
xorl
sti
mov
movsl
mov
and
jle
out
ljmp
cmp
push
jecxz
add
push
cli
gs
push
lock
cltd
adc
imul
lahf
or
into
ja
push
lods
nop
adc
lcall
mov
lea
inc
xor
cmp
jno
pop
stos
adc
jg
popf
mov
push
push
stc
sbb
push
movd
insb
ret
pop
imul
push
repnz
bound
mov
mov
sti
cmpl
mov
inc
outsl
jae
xor
add
xor
lods
jecxz
leave
sub
aas
sbb
xchg
fmull
out
push
stc
in
push
pop
ret
mov
push
sti
pop
enter
inc
push
inc
ret
outsb
mov
sarl
add
inc
dec
or
ds
nop
jno
out
or
sub
lret
add
adc
scas
push
popa
repnz
addr16
popl
stos
imul
adc
push
out
push
test
mov
leave
int
push
pushf
mov
cltd
in
add
div
jmp
bound
rcrl
sbb
aas
out
and
cltd
mov
mov
adc
das
cmp
xchg
clc
je
ret
push
mov
hlt
inc
jmp
sbb
outsl
push
sub
xor
ja
mov
test
js
sub
jge
mov
shrl
out
sbb
xchg
in
cmp
ret
cmc
cmp
fstpl
shl
sbbb
bnd
or
jne
adc
dec
mov
cld
jl
add
push
insb
lock
cmp
loopne
jl
pusha
js
js
mov
ret
push
xchg
lret
xor
cmpsl
xor
mov
sbb
dec
rorl
jl
scas
mov
sahf
fnsave
mov
hlt
mov
nop
sarl
sti
xor
cmp
inc
pop
push
xchg
mov
ljmp
xchg
mov
gs
loop
imul
movsl
inc
jecxz
push
mov
mov
popa
mov
pop
xchg
int3
jo
iret
pop
cmp
jmp
lea
out
xchg
out
jae
stos
add
cmp
or
inc
xchg
inc
lret
pop
push
inc
test
ror
fldcw
notb
jmp
mov
or
mov
lods
and
jb
test
cmp
lahf
add
insl
pop
mov
fdivr
push
and
jbe
jl
les
xchg
push
push
jle
jecxz
cmpsl
or
popf
hlt
add
jae
hlt
and
push
daa
ljmp
out
hlt
mov
stos
xchg
or
mov
ss
outsb
fs
sbb
addr16
push
add
movsl
fldt
dec
ds
inc
arpl
lahf
xchg
jle
jmp
inc
jbe
jg
sbb
cmp
into
sbb
cmp
mov
cmp
xor
xor
xchg
in
popa
mov
mov
testl
cmp
test
and
jnp
sub
popf
mov
pop
mov
mov
repz
jne
mov
xor
cmpsl
inc
fdivs
push
mov
loop
sbb
xchg
push
xor
enter
icebp
aad
in
dec
jne
cvtps2pi
stc
testb
ror
pop
xor
loopne
mov
pop
mov
inc
hlt
inc
sbb
loop
es
mov
adc
icebp
std
testb
fsub
and
xchg
inc
adc
and
lcall
jp
loopne
jb
cmpsl
js
int
cmpsl
aam
out
icebp
lods
or
mov
loop
pop
insb
xlat
mov
sbbb
loopne
dec
xor
xchg
xor
pop
lock
ds
out
call
jge
mov
mov
mov
adc
call
ss
pop
dec
sub
push
push
int3
mov
and
push
out
ret
movsb
add
inc
pop
aam
cs
mov
fwait
cwtl
test
in
jg
sub
pushf
fidivs
adc
ret
mov
xchg
jns
mov
lods
push
lret
insl
jbe
xchg
mov
mov
and
loope
dec
cmp
mov
add
clc
push
jl
xchg
scas
and
stc
adc
mov
pushf
fstpt
jno
mov
pusha
scas
sahf
push
insb
or
pop
leave
flds
jae
mov
outsb
xor
jp
cmpsb
push
xchg
out
mov
mov
xor
sahf
loop
icebp
cmp
popf
xchg
popa
fwait
jbe
sbb
mov
scas
jbe
leave
pop
lahf
stos
mov
dec
sti
jle
xor
loopne
pop
push
jmp
pop
add
sub
xlat
jne
jecxz
ljmp
dec
mov
jmp
or
fsubrp
cltd
daa
lahf
gs
cwtl
aas
ds
jp
clc
imul
mov
fs
jbe
jp
pop
push
ret
mov
loope
xchg
adc
sbb
jle
cmp
push
push
pop
jnp
addr16
inc
std
sbb
inc
cmp
mov
or
shll
daa
mov
das
clc
mov
lods
jmp
inc
shrl
iret
and
fisubl
out
add
pop
mov
int
mov
xor
bound
mov
push
jecxz
pop
jmp
loope,pt
cmc
addr16
cmp
repnz
push
sahf
pushf
pop
push
add
pop
ds
test
jmp
dec
xor
pop
push
jns
or
mov
dec
shll
nop
or
sbb
pop
sub
popf
pop
mov
repnz
js
aaa
es
pop
jae
mov
movsl
movsb
call
fimull
jb
mov
pop
dec
fsubr
lret
inc
stc
pop
adc
or
mull
mov
fcoms
and
cmp
mov
pop
mov
sbb
pop
lods
sbb
rcr
xor
lods
and
mov
jns
int3
push
in
in
inc
testb
mov
fnsave
rorl
lea
cmp
andl
ss
ss
push
popa
jnp
jmp
lods
jecxz
cmpsb
call
dec
mov
push
rcll
aas
lock
dec
aas
and
adcb
mov
nop
ja
lea
in
pop
daa
loope
jae
and
mov
cli
iret
int3
loopne
inc
dec
adc
scas
mov
cmpsb
cmp
mov
xchg
xorb
push
xchg
jno
into
popa
cld
daa
movsb
mov
sbb
lods
xchg
xor
and
lret
jecxz
lret
pop
jmp
inc
int
hlt
sbb
push
mov
inc
out
cmp
xchg
mov
pop
shlb
mov
lea
pusha
cmp
jbe
pop
xor
mov
adc
mov
rol
js
stc
fstpt
test
mov
insl
scas
pop
mov
mov
pop
push
adc
in
pop
add
xlat
lods
adc
xor
cmp
jecxz
xor
sti
fsubp
jecxz
icebp
movsl
jle
ficoms
lock
mov
cld
adc
xchg
or
out
cmp
cmp
add
push
sub
jbe
xor
add
repz
and
insb
fwait
pop
cmpsl
aad
pop
jne
push
sub
push
jp
stc
xor
pop
sti
lret
idivb
inc
adc
aam
dec
ds
jge
push
pop
outsb
lcall
outsb
xor
test
or
or
faddp
inc
inc
jg
and
cmc
aam
or
cld
cs
clc
cmp
push
pushf
rcll
ret
mov
mov
jmp
fwait
mov
ds
fadds
insl
and
jae
cwtl
mov
push
bound
shlb
mov
and
dec
and
iret
jg
mov
xor
cmpsl
rcl
xchg
aaa
cmpsb
add
cmp
les
cmp
in
es
test
sub
xchg
rcrb
sbb
pop
ffreep
pop
lods
sbb
clc
in
mov
xchg
jmp
add
dec
imul
out
jmp
pop
pop
inc
fistpll
aas
mov
movsl
or
mov
mov
into
sbb
adc
mov
xlat
push
hlt
xchg
lret
adc
ss
add
int3
ja
test
sbb
or
sahf
enter
inc
or
cmp
xor
mov
cmp
stc
lock
daa
inc
or
lea
iret
insb
cld
and
cmpsl
out
ljmp
inc
adc
hlt
pop
cltd
push
fucomp
xchg
mov
ds
scas
push
mov
jns
push
ret
lock
mov
mov
fiaddl
add
jmp
mov
imul
sbb
xchg
pop
movb
cmpsl
rcll
inc
pop
leave
lret
mov
adc
add
and
les
adcb
add
out
add
sarb
test
inc
sub
fimull
jle
inc
jae
cmp
or
or
pop
fs
gs
jp
lds
stos
xchg
mov
fcomps
inc
xchg
jecxz
push
lahf
les
mov
out
add
adc
mov
in
call
aad
xlat
pop
push
cmpsl
fwait
mov
mov
fstl
leave
pop
inc
inc
testb
or
aaa
filds
in
or
push
sub
cmp
push
hlt
ret
ss
fwait
scas
and
mov
jle
insb
and
mov
in
fs
aam
fcomps
outsl
cltd
mov
or
xchg
nop
mov
stos
sbb
roll
andb
shlb
sub
loope
movsl
out
mov
cmpsb
mov
xlat
xchg
xchg
cmp
test
xchg
lret
aaa
nop
fiadds
pop
pop
int3
push
mov
add
imul
lcall
jae
mov
adc
lock
sbb
jo
lahf
loopne
out
inc
test
neg
cmp
dec
adc
fwait
inc
pop
sbb
mov
jns
divl
test
mov
notl
out
aaa
cmp
add
sub
outsl
push
mov
and
lret
jo
sahf
roll
push
cmp
push
cmp
xchg
xor
into
nop
mov
popl
dec
repz
pop
popf
mov
mov
shrb
pushf
out
push
jl
xlat
fs
cltd
pop
cmp
cmp
jmp
jmp
out
inc
test
mov
or
push
push
pop
dec
lret
adc
shrl
mov
popf
sub
mov
cmp
jbe
or
add
push
sbb
rol
pop
cmp
jecxz
testl
insl
int
sub
add
xchg
mov
idivl
xchg
and
fs
jbe
pop
test
fisubl
push
inc
or
fstpt
mov
mov
xchg
lods
pop
pop
pop
xchg
xchg
and
insb
lods
pop
idivl
negb
dec
jns
rcrl
push
jecxz
imul
out
xchg
and
push
ds
lret
dec
sti
lods
test
mov
insl
stos
xchg
cmp
add
jmp
cmp
adc
xchg
mov
repnz
and
mov
sub
jmp
push
addr16
ljmp
cmp
or
mov
sar
sub
mov
add
mov
pop
add
sarl
repnz
ljmp
add
cmp
cmp
xchg
rolb
loopne
in
je
into
aad
mov
xchg
or
scas
loope
xor
roll
push
and
mov
iret
mov
or
addl
cmc
adcl
sbb
gs
jecxz
imul
pop
add
cli
xchg
push
bound
push
cmp
dec
sub
xor
sbb
inc
adc
sahf
sbb
loop
cltd
aaa
insl
mov
add
push
add
iret
mov
fistl
adc
test
push
and
ja,pn
mov
xchg
sub
mov
mov
cmp
inc
jmp
scas
out
rcr
sub
jae
imul
mov
cs
mov
lahf
icebp
add
scas
mov
xor
jecxz
mov
test
in
gs
cmpsb
push
xor
cwtl
sub
add
loop
nop
jmp
addr16
int3
sub
xor
jne
sub
push
fidivrl
sahf
dec
push
loopne
imul
adc
jns
ljmp
push
inc
xlat
int3
dec
testl
pop
or
mov
inc
mov
inc
rcrl
jne
orb
shrb
imul
daa
add
xor
and
mov
test
mov
test
mov
fsubrp
scas
pop
adc
mov
and
loop
xchg
mov
push
imul
cmc
inc
cltd
inc
imulb
jbe
sti
push
rcrl
cltd
loop
dec
insb
loope
mov
addl
push
daa
mov
shl
insb
lods
call
cli
push
pop
cltd
mov
pusha
pop
mov
cmp
or
jo
je
jns
xor
xor
test
xchg
dec
and
or
mov
xchg
or
mov
lods
test
call
sbb
push
mov
cmp
rorb
outsb
aaa
mov
xchg
jb
outsl
addr16
pop
adc
pusha
xor
lds
add
add
push
leave
mov
or
sub
inc
cmp
pop
andb
or
push
or
out
push
cltd
daa
out
xor
sbb
mov
sti
add
aaa
pop
cld
sbb
cld
push
in
or
scas
sub
bound
mov
push
mov
cmpsl
scas
cs
hlt
jnp
adc
negl
push
push
cld
mov
ret
xchg
pop
inc
fisubl
call
xlat
inc
add
sarl
cld
pop
mov
xchg
push
push
mov
or
and
sbbb
mov
push
cmc
dec
movsb
les
push
dec
bound
aam
push
lcall
mov
push
fucomp
test
mov
jns
push
ja
mov
loop
ret
mov
aas
jge
enter
cmp
je
mov
jae
out
iret
cwtl
or
jmp
sub
jbe
add
xor
xchg
lcall
pop
sub
repz
cmp
out
in
mov
int3
push
rcl
nop
loop
mov
lahf
ret
mov
fbstp
sbbb
cli
lock
test
addl
add
loope
fidivl
push
mov
sub
int
inc
mov
ficoml
xchg
xchg
insb
addr16
repz
add
or
mov
insb
cmp
xchg
mov
mov
pop
add
fldenv
cmp
ds
sbb
lea
add
jge
into
loope
test
nop
mov
shrb
jp
mov
pusha
sub
xor
dec
or
in
mov
xor
push
xchg
inc
push
fwait
scas
push
xchg
mov
mov
sub
push
mov
pop
push
sub
mov
mov
adc
mov
arpl
adc
in
stc
push
cld
inc
test
in
cmpsb
xchg
sub
repnz
dec
fwait
sbb
mov
shrl
jge
pop
loope
je
mov
das
clc
adc
adc
popf
cli
or
inc
push
sbbb
inc
mov
pushf
xchg
inc
es
movsb
adc
movsb
fdivrs
lea
xchg
xchg
enter
fidivs
and
and
dec
inc
sbb
negl
fs
bnd
sub
xor
inc
fisttps
shll
bswap
ret
rorb
loopne
mov
adc
idiv
int3
xlat
lcall
fcmovnb
mov
sbb
je
pop
xchg
scas
push
dec
inc
mov
and
sbb
dec
loope
xchg
lds
xchg
jno
repz
pop
dec
add
dec
adc
aad
call
lcall
andb
flds
scas
mov
mov
loope
adc
pop
scas
jecxz
mov
shl
inc
scas
mov
pop
hlt
sti
testb
sub
xchg
in
xchg
push
insb
movsl
inc
lcall
xor
shll
mov
mov
pusha
test
and
idivb
add
and
sarl
call
mov
pop
lcall
cld
sar
dec
ja
xor
dec
inc
sahf
inc
je
mov
mov
dec
push
repnz
loop
mov
adc
push
xor
aaa
add
mov
sub
aaa
push
fs
sbb
pop
in
xchg
xor
mov
mov
je
jbe
data16
add
int
sub
push
push
xchg
mov
fbld
test
and
push
inc
rcll
dec
pushf
push
mov
sbb
stc
fstpt
sbb
lret
add
outsb
int
pop
mov
rsm
pop
pop
fnstsw
cmp
scas
sbb
stc
xlat
mov
sbb
inc
lods
and
cmp
imul
sub
ljmp
out
repnz
or
dec
js
or
mov
fdivrs
adc
mov
sbb
dec
lea
or
lcall
adc
mov
jb
adc
cmpsb
cli
sahf
cmpl
enter
dec
pop
or
loop
mov
shr
xchg
mov
adc
icebp
std
daa
mov
or
fdivp
adc
es
cmc
push
ds
shll
movsl
or
dec
jle
adc
sub
mov
ss
fisubrs
in
lds
std
dec
dec
lahf
dec
cld
hlt
scas
and
or
ja
and
roll
dec
add
jno
std
mov
mov
scas
imul
outsb
inc
cmp
loopne
shrl
mov
xchg
xchg
cmp
fimull
adcb
push
arpl
push
mov
adc
dec
sub
sbb
push
fisubrs
adc
mov
mov
mov
push
das
sbb
in
inc
push
fsubrl
push
fsubrl
ds
loope
mov
cs
cmpsb
mov
mov
mov
pop
mov
push
push
ret
jnp
inc
xchg
test
xor
test
aaa
push
insb
xor
cmp
add
aam
or
xor
and
lea
dec
xor
and
insl
adc
mov
lods
dec
outsl
lods
inc
xchg
mov
sbb
into
movq
pop
pop
and
mov
js
xor
mov
inc
sar
pop
dec
jae
inc
gs
cmp
push
dec
aas
sbb
std
aam
hlt
imul
sti
cltd
lea
pop
outsl
mov
fs
into
cmc
fstp
push
je
push
and
stc
xor
xor
rclb
std
ljmp
adc
xor
outsb
jge
arpl
cmp
dec
adc
jb
mov
sub
ja
arpl
bound
popa
pop
add
dec
mov
cld
pop
lock
adc
lea
fs
sbb
sbb
hlt
ds
push
dec
and
mov
rcrl
gs
and
dec
jmp
mov
jne
xchg
push
or
jb
sti
notl
push
je
inc
lods
jp
mov
xchg
std
aad
popf
popf
xchg
inc
cmp
popa
lock
sub
int
cmpsb
xor
or
and
cmp
mov
push
push
lcall
cmp
cli
scas
fldenv
jns
adc
cwtl
jnp
test
data16
cli
push
lret
dec
xor
adc
xor
push
test
rorl
stos
rcrb
and
je
insb
insl
dec
das
xor
es
add
inc
cmpb
stos
mov
dec
aad
pop
pushf
mov
pop
lcall
mov
adc
subl
mov
je
mov
jmp
ret
cmp
xchg
xlat
fsubs
loopne
jp
fisubrl
mov
cmp
pop
outsb
cmpsb
fmul
pop
cmp
adc
ficoms
mov
cmp
shrl
sti
cmc
dec
ja
jmp
icebp
mov
xchg
push
popf
std
pop
cli
dec
divl
sarb
js
lret
aam
push
jmp
mov
jl
add
xchg
jo
push
orb
sub
andl
ds
pop
pushf
repz
add
jge
sub
xorb
add
arpl
cs
shlb
fwait
negb
ja
add
mov
pop
jae
or
leave
push
nop
loop
icebp
adc
mov
dec
mov
int
pop
pop
mov
in
dec
jl
mov
cmc
cmp
in
or
or
cwtl
adc
push
jo
clc
lcall
xchg
mov
test
pop
and
jo
dec
push
jb
cmpb
push
sub
test
and
aad
pop
jnp
subb
xorb
jnp
push
int
push
lahf
fists
pop
ret
inc
loopne
icebp
popf
push
jmp
inc
rorb
pop
jl
pop
jp
test
sub
or
inc
imul
pop
dec
xchg
push
out
lea
sub
inc
dec
mov
insb
push
mov
ja
stos
test
gs
jmp
and
fisttps
inc
jnp
into
push
and
fwait
daa
hlt
or
cmpsb
cmp
inc
or
sbb
fs
insb
in
pop
xchg
sub
adc
testb
jle
jge
pop
lock
jmp
pop
inc
jo
dec
mov
mov
xor
out
adc
outsb
ret
sti
cmp
out
ret
fwait
push
or
cmpsl
cli
push
pop
push
or
sbb
xchg
lds
adcl
add
cli
dec
xchg
xchg
xor
das
imul
test
sbb
push
scas
and
iret
dec
not
ds
xor
fcompl
idiv
faddl
popf
xor
push
xor
pushf
stc
dec
push
in
out
fdiv
pop
fwait
shlb
pop
pop
es
jl
sub
xchg
shr
sub
aam
aaa
lods
sbb
and
in
lahf
xor
mov
sti
jle
dec
dec
icebp
mov
push
in
xchg
cmp
dec
sbbb
pop
add
fidivrl
cltd
push
push
pop
leave
imull
dec
loop
cmpsl
cmp
inc
sahf
repz
into
nop
inc
mov
push
xchg
add
iret
insb
maxps
repz
adc
fisubrl
cmpsl
sub
popa
in
xchg
sub
cmp
or
repz
testl
loope
pushl
outsb
fiaddl
pop
cltd
cli
jno
lods
sub
cmp
cmp
clc
push
adc
call
in
inc
mov
notl
pop
lods
adc
hlt
idivb
xchg
sbb
scas
mov
dec
mov
xor
mov
pop
popf
sbb
icebp
cmp
outsl
add
sub
pushl
imul
cmp
sub
and
rorb
out
lret
jno
dec
xor
lret
jmp
adc
mov
or
inc
dec
jge
addl
mov
in
sbb
mov
out
pop
call
or
xchg
cs
sbb
stc
test
popf
mov
cmp
fstp
popf
pop
pop
mov
jo
popa
daa
inc
cmp
call
xchg
sbb
ja
out
arpl
stos
or
add
xchg
insb
add
xor
cmc
setae
pusha
add
or
clc
and
or
cmp
cwtl
pushf
xchg
add
enter
or
out
sub
lret
iret
push
jnp
mov
divl
aas
sbb
push
ss
mov
push
jns
adc
addl
add
sub
and
test
rcl
pop
adc
jnp
fstpt
mov
icebp
subl
mov
sub
stos
fs
push
mov
fcmovbe
fisubl
insb
mov
mov
sbb
outsb
outsl
outsb
pop
xor
sub
lods
push
les
jnp
adc
aad
notl
sbb
jno
std
fstpl
add
sub
and
pop
pop
lahf
sbb
data16
mov
jge
in
xor
push
xchg
das
in
jl
int3
mov
clc
ljmp
lsl
jnp
xorb
out
inc
inc
adc
loopne
sbb
cmp
dec
mov
int3
inc
jno
jne
mov
cli
mov
ss
mov
ja
sbb
clc
pop
out
mov
sub
pushf
in
pusha
aam
push
push
pop
or
andl
shr
or
xchg
std
mov
andb
jae
stos
jbe
mov
mov
je
imul
jnp
jb
leave
xor
pop
push
pop
imul
in
loop
sbb
sub
adc
or
clc
pop
outsl
or
mov
inc
gs
pop
sti
inc
lret
fldcw
sahf
pop
sarl
push
xchg
lods
mov
pushf
add
into
sub
and
imul
fwait
repz
fwait
and
adc
aad
call
scas
push
ds
xchg
pushf
mov
and
and
arpl
out
cmc
decl
mov
xchg
push
push
cmp
xchg
mov
xor
inc
fldl
jbe
pop
ficoml
and
push
ja
xchg
ret
adc
or
sbb
test
jns
add
sbb
push
push
sbb
dec
mov
cli
add
sar
pop
cmp
jbe
lods
je
adc
pop
xchg
and
sbb
pop
push
pop
movsb
jmp
lret
scas
xlat
popf
hlt
mov
out
xorl
hlt
pop
rclb
lret
mov
and
xchg
into
loop
push
xor
test
lods
stos
pop
push
jno
push
test
xchg
or
in
xor
pop
bound
sti
subl
jp
cltd
repnz
lods
pop
dec
subl
inc
inc
leave
inc
or
and
xchg
shr
jns
add
xchg
shl
hlt
addr16
out
inc
cmp
inc
outsl
scas
dec
ds
and
popa
out
add
ss
pop
cmpb
sbb
lret
mov
test
outsl
sbb
jmp
xlat
scas
subl
iret
shl
cli
pop
push
jg
jp
addb
pop
dec
mov
pop
andl
jmp
in
add
in
sbb
xchg
pop
cmpl
push
testb
movsl
int3
ja
ret
jne
adc
jmp
sahf
jle
lret
xor
inc
outsl
es
sbb
mov
rorl
xor
xor
cmp
sub
dec
pop
adc
xor
sbb
xchg
into
pop
lods
sub
mov
cmc
or
jge
jbe
idiv
ss
popa
cmp
aad
push
scas
xor
adc
sub
dec
test
jp
add
lahf
and
fisttpll
cmp
push
pop
xor
nop
jecxz
adc
loop
lods
cmovb
inc
xor
les
xchg
lahf
inc
mov
push
jne
xchg
lahf
pop
sarb
dec
jb
cmp
cli
mov
pop
enter
cs
pop
dec
jl
xlat
xchg
lds
clc
and
jbe
pop
sti
popf
mov
push
clc
cmp
xchg
xchg
jns
sbb
xchg
sub
add
stc
lods
bound
scas
mov
push
and
mov
lds
add
out
popa
and
je
or
inc
cwtl
mov
add
mov
cmp
cmp
js
mov
je
insb
cld
or
addr16
aaa
push
ficompl
xor
and
sbb
xor
sub
pop
add
xchg
mov
rolb
arpl
push
shl
xchg
stos
in
push
or
ljmp
inc
xchg
xor
xor
cli
fbld
in
insl
push
cwtl
inc
sub
jp
push
aaa
pop
push
out
inc
mov
fimull
jecxz
scas
cmp
sub
mov
mov
stos
sbb
insb
fcmovne
rcrb
inc
or
push
jnp
bound
pop
mov
jecxz
pop
push
scas
sbbb
outsb
dec
jmp
cltd
imul
test
jg
pop
xchg
out
std
dec
push
mov
sbb
call
lcall
orl
rclb
in
sub
test
xchg
repz
inc
mov
xchg
xchg
fwait
js
inc
fiadds
cld
sbbl
in
inc
add
lods
inc
sarb
inc
sbb
lahf
inc
adc
cli
lds
inc
or
pop
es
jno
push
push
xlat
xlat
xlat
or
sbb
call
movsb
dec
repz
lea
inc
test
scas
adc
fld
loopne
es
jle
sti
shr
scas
lods
dec
subl
add
in
jnp
scas
xchg
inc
repz
push
add
inc
and
jns
sub
xor
mov
js
sti
fxch
xchg
aam
shlb
add
out
adc
daa
fdiv
jecxz
mov
sbb
jo
add
orl
jno
xor
push
insb
and
inc
xor
mov
pushf
lea
mov
xor
nop
mov
push
in
loope
das
inc
mov
jno
xor
je
lds
scas
add
push
fistpll
fwait
insl
call
cwtl
arpl
cmp
int
sub
cmpsl
pop
loop
fs
dec
dec
daa
sti
or
ljmp
ret
cli
stc
std
jo
pop
movsb
add
stos
xor
adc
jne
outsl
jmp
add
test
push
test
arpl
xchg
jge
sbb
jmp
pushf
jne
jmp
scas
loopne
dec
push
push
jne
jmp
sbb
inc
xchg
and
pop
scas
xor
test
rcr
dec
inc
jp
dec
push
arpl
aas
jnp
cmp
mov
stos
cltd
xor
bnd
out
into
jo
test
leave
out
adc
add
mov
lahf
mov
push
popf
dec
mov
pop
loope
lahf
jns
out
xchg
adc
sahf
aam
adc
jns
int3
push
aad
and
sahf
flds
insb
xor
dec
mov
pop
xlat
hlt
call
dec
jae
xchg
push
jae
js
les
jge
jge
inc
jnp
jns
jno
jl
fmul
ds
aaa
pop
cmc
ja
leave
push
push
mov
into
mov
mov
addr16
arpl
iret
push
mov
pop
ficompl
mov
or
jge
pop
mov
sbb
fnstsw
cmc
xchg
pop
lock
fwait
sahf
data16
cmp
repnz
or
scas
cwtl
inc
cwtl
popa
inc
xchg
filds
jne
add
inc
call
call
mov
and
mov
jne
or
fcomps
call
xor
push
and
xor
xor
test
shll
xlat
pop
mov
xchg
cmpsb
push
enter
test
in
out
fs
sub
lock
cmp
push
xchg
xchg
mov
nop
xchg
notl
pop
lds
in
andb
sub
data16
inc
mov
test
and
inc
ds
cmp
dec
cmp
lds
pushf
dec
inc
icebp
stos
cmpsl
xor
lods
cmpsb
ficomps
ss
hlt
dec
and
orl
add
jbe
jl
fimull
sbb
enter
fiadds
popf
mov
inc
mov
pop
mov
rcll
adc
fs
cmc
and
lods
stos
pop
imull
decb
jp
pop
adc
inc
shll
xor
ret
mov
mov
ret
enter
adc
push
mov
clc
rcl
and
imul
adc
jmp
popa
mov
jge
in
mov
inc
xchg
ljmp
cmp
pop
jae
ret
fcoms
insb
loope
stos
cltd
inc
mov
out
cwtl
fwait
jl
subb
mov
mov
loop
out
push
xor
mov
xor
call
cmp
inc
inc
or
sbb
pusha
jae
sub
call
push
clc
les
adcb
push
addr16
fstps
cmp
push
aad
dec
les
xchg
les
fdivl
pand
loope
cmp
imul
mov
jp
daa
aaa
jb
mov
es
adc
push
imul
arpl
adc
lret
dec
cwtl
fnstenv
pop
jnp
loope
jmp
addr16
and
int
dec
out
bound
fwait
jne
xor
rorl
repnz
pop
sub
xchg
adcl
add
ljmp
rcl
cmpl
or
outsl
flds
iret
xor
sbb
inc
sbb
mov
imul
jmp
and
xchg
inc
ds
imul
dec
daa
mov
xchg
movsb
pop
mov
fwait
sar
repz
lcall
mov
fmull
hlt
dec
jl
sub
push
mov
sarl
adc
pop
mov
sbb
and
mov
insb
test
mov
or
cmp
and
mov
cmpsl
subb
inc
sarb
popf
adc
adc
les
jae
hlt
int3
enter
inc
rcr
arpl
or
push
mov
adc
xor
test
inc
cmc
out
push
les
out
or
push
sub
aaa
dec
cmpsl
push
rcl
insl
jne
into
push
or
cld
fsts
rcr
shll
lahf
push
xchg
dec
pop
inc
inc
xchg
ret
jl
outsl
sub
xchg
or
fisttpll
sbb
xor
rolb
sub
push
inc
dec
dec
xchg
test
cmp
mov
ret
xor
xchg
jg
sbb
aam
inc
stc
mov
addr16
or
sbb
mov
xchg
clc
pop
xchg
stos
stc
dec
pop
mov
cs
negb
insb
xchg
pop
jb
cmp
sub
es
push
ret
adc
test
mov
fsub
push
mov
mov
pop
push
sbb
lahf
ss
push
fstpl
fmulp
out
les
sahf
pop
xchg
out
mov
daa
push
xor
jmp
or
pop
aad
and
sbb
cwtl
bound
aam
mov
xchg
scas
test
sarl
iret
sti
cmpsl
adc
lahf
repz
testb
cmc
ret
and
bound
inc
repnz
pop
sbb
or
xchg
jge
dec
iret
scas
cmp
imul
mov
jnp
scas
addr16
rorb
adc
std
rolb
sbb
sbb
lods
pushf
test
push
aas
in
insb
mov
jecxz
out
cld
rcl
cmpsb
xlat
dec
in
pop
sbb
gs
inc
sbb
mov
outsl
mov
scas
sub
push
outsb
iret
add
jl
rcrb
xchg
mov
mov
test
jge
out
lret
push
stos
in
arpl
sub
jmp
mov
xor
inc
stos
movsl
jbe
mov
dec
cmp
sarl
repnz
aas
mov
xlat
sub
insb
mov
or
test
imul
outsl
jno
stos
and
std
sub
leave
int
aaa
xor
insb
jge
popa
xor
shll
push
mov
push
in
xor
jmp
inc
lods
push
scas
sbb
or
leave
cwtl
jmp
aad
out
shrl
inc
pop
popf
ret
cwtl
and
lock
mov
insb
xchg
cmpsb
jno
cmc
mov
xor
mov
mov
xchg
mov
into
pop
sbb
das
data16
in
cmp
pushf
fsts
inc
mov
iret
push
jge
dec
lahf
and
sbb
pop
mov
dec
cli
jg
scas
aad
jmp
movsb
sub
ljmp
fsubs
push
in
mov
test
pop
outsb
in
dec
sub
cmpl
cltd
vpaddb
repz
sti
inc
lahf
pop
sahf
xor
jle
cmp
xchg
xor
jg
lods
addr16
leave
mov
divl
adc
rol
cmp
idivb
and
inc
popa
insl
cmp
xchg
nop
inc
mov
xchg
lahf
in
adc
push
rorb
mov
inc
aad
pop
push
mov
cmp
mov
repnz
out
add
imul
fidivrs
push
inc
fwait
repz
repnz
mov
xor
pop
bnd
aas
imul
mov
mov
std
ficoml
das
movsl
rorl
icebp
xor
sub
outsl
in
outsl
jnp
shrl
mov
repnz
jno
leave
idivb
in
mov
xor
sbb
jecxz
mov
xchg
xchg
push
jne
mov
cmc
outsl
addr16
xor
mov
mull
dec
in
cld
in
adc
lcall
test
icebp
rcrl
ret
or
ja
jg
adc
pop
cmp
int
bound
and
push
stos
or
xlat
dec
adc
movsb
test
jns
lods
and
ret
aas
inc
mov
jl
clc
cmp
ja
jns
pop
or
loop
and
cmp
rclb
xor
push
mov
push
or
popa
pop
pop
push
push
mov
test
sti
rolb
rclb
fwait
mov
pusha
cli
shll
sbb
into
pop
pop
in
pop
mov
xchg
test
xchg
cmp
popf
bound
mov
in
or
gs
xor
fistps
scas
les
negb
mov
sbb
pop
std
mov
mov
sarb
push
push
ret
xor
jbe
pop
sub
and
movsl
dec
mov
dec
fwait
sbb
inc
jp
lods
fcoms
jbe
pop
or
and
fdivrl
ja
adc
mov
xchg
fidivrs
fldt
or
pushf
jae
add
add
xchg
outsl
into
lds
or
les
mov
or
pop
sub
cs
lcall
loop
xchg
pop
test
cwtl
test
lds
jle
lods
hlt
lret
xor
test
lods
mov
les
lds
mov
cmp
data16
mov
fs
iret
std
pop
adc
test
add
pop
jae
mov
pop
cmp
xchg
adc
stc
das
dec
repnz
mov
add
in
mov
push
mov
loopne
ret
xchg
and
sbb
xlat
cmp
lds
jae
mov
pop
jno
inc
mov
xchg
movsl
pop
pop
jecxz
ret
mov
and
aam
xor
es
or
jmpw
pop
and
in
movsl
jle
jecxz
mov
lods
mov
sbb
fiadds
stos
mov
cltd
adc
cmpsl
les
mov
sub
cwtl
lahf
push
shll
push
imul
sti
cmp
fnstsw
cwtl
xchg
dec
mov
leave
leave
and
dec
loop
push
adc
push
mov
lds
push
xor
mov
adc
ljmp
cs
pushf
movsl
xor
and
push
mov
fisttpll
cmpl
sarb
adc
mov
jb
adc
sub
and
xorb
lods
dec
in
jo
push
cld
cmp
arpl
and
push
out
sbb
xchg
pop
inc
popf
in
movsb
arpl
inc
faddl
sub
in
std
pop
xchg
movsb
ret
add
mov
sub
dec
xchg
xchg
ffreep
inc
imul
cmpsb
jecxz
mov
fwait
das
pop
and
xchg
sbb
xchg
rclb
adc
push
mov
push
clc
jnp
dec
maxps
jg
mov
mov
icebp
xchg
ror
mov
xchg
push
es
test
insl
sahf
fs
add
icebp
mov
shll
aad
sbbb
adc
adc
and
jno
es
xchg
cld
mov
ljmp
notb
adc
push
ja
int
pusha
lods
push
mov
shll
out
test
xor
es
mov
out
push
mov
les
cmpsl
push
xchg
xlat
inc
jecxz
ds
mov
cmp
mov
sbb
imul
fcomps
imul
cmpsb
xchg
jecxz
stos
xchg
cmp
jge
data16
les
shl
xor
scas
shlb
adc
shll
xor
ljmp
xor
mov
jb
movsl
leave
in
adc
loop
fistl
call
jg
call
out
jnp
sti
jle
pusha
ja
nop
orl
shlb
fiadds
inc
pop
mov
sub
lcall
inc
jo
mov
movsl
aaa
fstl
sbb
cmc
mov
mov
sahf
inc
mov
lock
hlt
mov
add
enter
jno
dec
xor
jb
cld
ret
mov
das
and
jne
inc
ret
fiaddl
pop
xchg
imul
icebp
pop
xor
js
cmp
xchg
dec
pop
aad
jne
pop
roll
pop
ds
jbe
dec
push
xchg
jle
popf
outsb
xchg
mov
imul
stos
insb
arpl
ret
scas
lock
jno
cmp
outsb
jge
or
gs
jge
or
mov
icebp
push
xchg
sbb
sub
mov
jl
add
push
int
repz
test
dec
jnp
lods
xchg
repz
sbb
or
adc
rorl
out
not
mov
jle
out
and
std
in
nop
enter
in
or
in
mov
repz
push
xor
push
test
ffree
mov
sbb
aam
stos
and
inc
sbbb
es
inc
out
aad
int
in
std
sub
or
adc
adc
xchg
mov
pop
jnp
pop
aaa
xchg
sarl
mov
xchg
jbe
push
test
inc
cmp
mov
push
lock
fwait
out
imul
cwtl
lods
push
imul
int
lret
fs
std
iret
lcall
cs
outsl
scas
jl
cld
ds
sub
cmp
lock
popf
add
sub
aas
fimull
dec
lea
and
int
push
jmp
inc
xchg
dec
xchg
sbb
andb
add
add
sub
sbb
xchg
gs
out
xor
mov
push
cmp
shll
adc
jp
jmp
aas
jecxz
pop
dec
pop
pop
fcomi
loopne
test
das
pop
pop
mov
adcb
fidivs
mov
cmp
dec
adc
loop
fidivrl
int3
xor
leave
push
sti
xor
fwait
testl
mov
cltd
and
jg
neg
scas
out
ss
pop
push
mov
btr
cmp
add
fwait
loop
aaa
mov
insl
fptan
jb
out
les
call
xchg
pop
insl
fimull
stos
sub
dec
in
aaa
aaa
mov
xchg
push
mov
arpl
sbb
mov
xchg
out
mov
fwait
lods
mov
dec
adcb
dec
cmpsb
aaa
inc
xor
cld
out
mov
ss
add
xor
aad
out
adc
ljmp
aaa
sbb
add
scas
hlt
jl
xchg
das
push
push
pop
push
leave
cmp
stc
jae
jp
sbb
fs
jnp
push
mov
jmp
sub
fs
jae
mov
xchg
cmpsb
into
inc
shl
mov
push
fsubrl
xor
push
fldcw
or
fisubl
mov
incb
out
push
xchg
sbb
mov
idivb
inc
pop
mov
inc
sbb
icebp
stos
mov
jle
mov
loop
out
sub
divb
jnp
loopne
sbb
push
lods
add
inc
sti
mov
adc
enter
int3
inc
add
ljmp
cmp
and
sbbb
lret
add
leave
fimull
mov
mov
cmc
add
lahf
cmpl
cmp
inc
or
mov
or
sbb
stc
mov
orl
push
push
sbb
jae
add
insb
push
inc
cltd
sahf
mov
sub
cs
sbb
cmc
mov
add
jecxz
mov
mov
lea
sbb
hlt
mov
jb
shl
int3
sub
in
cmp
sbb
pushf
add
xor
mov
mov
hlt
imul
adcl
inc
xchg
mov
push
mov
add
mov
jns
int3
nop
outsb
clc
dec
push
into
into
sahf
jmp
cmp
test
mov
jecxz,pn
fwait
inc
mov
jae
jge
shrl
cmp
fidivs
icebp
ss
push
cmc
js
jno
aad
fimuls
not
xchg
data16
scas
fidivrl
out
or
hlt
add
ds
cwtl
cmpsb
mov
or
dec
insb
test
jl
xor
sbb
dec
insl
push
pushf
sub
clc
pop
cltd
sti
jg
jmp
jae
dec
aas
sbb
or
sbb
mov
jge
cmp
paddusb
scas
js
lea
call
lods
pop
add
enter
push
lods
imul
pusha
fwait
mov
arpl
dec
lods
push
movsb
dec
or
xchg
lcall
jecxz
dec
inc
imul
arpl
dec
sub
and
inc
lds
out
leave
shll
pop
pop
popf
inc
xchg
jbe
das
sahf
jmp
rcl
rcl
popa
jl
cmpsb
hlt
push
sbb
leave
push
ja
pop
push
add
mov
xchg
dec
mov
stos
xor
push
sub
cmp
stos
inc
loope
icebp
sbbl
out
jecxz
dec
pop
dec
sbb
cmp
outsl
mov
xor
lds
mov
loopne
sub
cltd
in
mov
lret
gs
clc
into
sbb
fimull
mov
jbe
cmp
mov
imul
push
popf
bound
jo
into
lret
rcr
sbbb
dec
mov
pop
or
sbb
push
jb
xchg
stos
and
or
mov
xchg
pop
ds
lret
cmc
push
dec
arpl
inc
scas
aam
dec
dec
xor
dec
inc
loope
cmpsb
in
into
and
and
xorb
mov
jnp
psubsw
pushf
pop
lods
inc
int3
or
aaa
or
mov
ja
je
fsubrs
test
push
leave
out
hlt
lret
lock
push
cmp
test
inc
sbb
dec
dec
push
lock
push
in
stos
jp,pt
inc
jp
mov
or
dec
js
jl
stos
call
nop
jns
push
fdivrs
cld
movsb
or
ret
inc
lods
pop
stc
dec
in
sahf
inc
nop
int
mov
add
pop
stos
loopne
loope
or
cmp
mov
int
cmp
and
lret
mov
push
out
aas
push
push
xchg
pop
in
cmp
lahf
xor
sahf
gs
xor
lahf
shrb
bound
push
in
mov
mov
sti
fwait
jbe
dec
std
xor
mov
xchg
sti
rorb
dec
sbb
and
add
cltd
dec
jecxz
xchg
or
mov
ljmp
lret
stos
repnz
call
in
mov
leave
push
clc
dec
insb
xchg
sub
and
insl
loope
jle
push
fildll
dec
jmp
repnz
sub
fcoms
sbb
pop
int3
adc
jcxz
loopne
faddl
stos
out
addr16
outsl
cmp
test
jp
jge
jbe
movsb
int3
ss
mov
ret
aaa
fwait
jge
dec
or
adc
rcll
pop
mov
mov
jbe
notl
mov
in
cli
or
addr16
mov
xor
stos
mov
pushf
aaa
inc
dec
adc
fistpl
push
and
sub
add
bswap
or
mov
jb
and
pop
jne
pop
cmp
mov
sbb
fsts
icebp
daa
stos
insl
lahf
push
and
sahf
push
incl
out
hlt
sbbl
je
inc
and
adc
push
in
out
das
jbe
shr
mov
cmpsl
push
dec
mov
test
inc
pop
xor
in
pop
push
in
lret
and
loopne
int3
fimull
mov
jo
mov
pushf
xchg
mov
dec
insl
rcrb
lret
lds
mov
jne
iret
dec
push
dec
out
cmp
push
mov
in
subb
add
jno
sbb
test
or
mov
movsl
mov
sbb
icebp
fists
cmpsl
push
aas
hlt
jnp
jg
mov
or
stos
icebp
mov
andl
je
in
ja
xchg
mov
push
rcll
loopne
pop
sbb
or
in
nop
sarl
add
xchg
sub
ds
mov
cmpsb
fisubs
das
push
inc
arpl
mov
jae
ret
pop
mov
inc
adc
cld
ror
xor
fsubrp
pop
icebp
data16
pusha
shll
push
insb
add
mov
mov
pop
xorb
jecxz
dec
shrl
sbb
mov
add
and
ljmp
pop
push
pop
inc
add
out
push
imul
inc
sbb
ficoms
sub
pop
jo
popa
test
mov
jbe
jno
mov
lcall
xchg
push
sti
push
pushf
mov
add
add
roll
dec
shlb
push
imul
and
fisubrs
or
shr
jae
movsb
int3
in
xchg
out
test
cld
xlat
cwtl
cmp
jmp
adc
xor
mov
test
jns
mov
mov
push
jae
cltd
out
xchg
sub
daa
mov
outsl
pop
aam
jo
jge
leave
popf
lds
vxorps
cld
out
pop
xor
fldcw
lret
mov
rolb
je
add
in
in
cmp
repz
aaa
out
mov
insl
mov
adc
insb
xchg
sbb
jecxz
mov
lds
pop
daa
or
mov
or
add
in
dec
shll
mov
cwtl
sarb
push
mov
lods
mov
add
lret
jo
or
in
mov
cmpsl
lcall
sub
pop
push
xchg
xchg
xchg
lea
loope
xchg
fdivl
lods
push
inc
aaa
inc
mov
xchg
xor
gs
fildll
cmpsl
jne
iret
mov
inc
out
dec
movsb
mov
movsb
and
mov
dec
sub
bound
cmp
cwtl
sti
push
add
mov
stos
adc
add
std
loopne
cmp
aas
jecxz
fwait
lods
cwtl
std
push
pop
or
ja
andb
clc
add
pop
push
pop
pop
or
es
adc
rcll
or
shlb
ret
sub
pop
fsubl
inc
inc
xchg
xor
lcall
xchg
mov
jnp
stos
push
and
mov
sahf
loope
aad
test
les
fs
enter
sbb
sbb
and
jno
jg
jae
cmp
add
cli
push
jae
jmp
inc
jle
add
rcrl
ljmp
mov
mov
pop
xchg
jo
adc
je
sub
out
aaa
jb
mov
movsl
daa
test
xchg
orb
dec
out
repz
fmulp
dec
inc
sbb
subl
push
sub
mov
dec
mov
ljmp
out
xor
fcoms
adc
je
adc
repz
loope
fwait
icebp
pop
wrmsr
adc
xor
in
cmp
mov
pop
add
fnstsw
push
sub
imul
sti
xchg
lea
xchg
repz
sub
jo
xchg
in
cmp
mov
xchg
cld
pop
jnp
ds
lcall
xchg
divl
push
pcmpeqd
jp
push
xchg
cmp
add
bound
scas
jp
push
xor
xlat
js
push
call
add
loope
adcb
mov
jae
les
pop
imul
gs
dec
or
xor
xor
call
insl
jg
bsr
movsb
jno
push
loopne
cmpl
xchg
mov
sbb
or
mov
push
dec
mov
mov
jge
insb
rcrl
test
and
mov
ficoml
inc
test
jnp
inc
jg
ja
jmp
cmpsl
addr16
adcl
lcall
mov
mov
aas
mov
leave
jae
sahf
test
add
dec
sbb
lea
sub
int
xchg
and
jae
sub
leave
push
cmp
std
mov
inc
rolb
dec
and
rolb
push
cmpsb
testl
andb
cli
inc
dec
shl
mov
lret
xchg
into
imul
jo
daa
mov
mov
insl
push
mov
cmp
iret
out
sub
jecxz
cmp
aam
mov
sar
mov
sub
push
cmp
sub
add
jnp
out
fists
sbb
ljmp
dec
ljmp
mov
jp
sub
hlt
insb
sub
aam
pop
adc
cmp
pop
and
xchg
lock
mov
push
cld
add
insl
jmp
xor
mov
dec
js
rclb
adc
pop
xchg
ret
fbld
xchg
arpl
add
jnp
pushl
das
push
das
scas
xchg
movsb
mov
xchg
pop
out
lret
push
arpl
sbb
repz
scas
jmp
add
push
adc
nopl
rorb
movsb
inc
xchg
add
jle
push
dec
sub
push
or
loopne
mov
cwtl
adc
or
xchg
jnp
xchg
js
aad
arpl
push
inc
dec
jns
inc
mov
loopne
loope
add
lds
fbld
sbb
sbb
fists
lods
pop
cmc
xor
sbb
cmc
mov
xorb
add
mov
mov
dec
popa
jg
jb
add
push
mov
jbe
and
rcrl
mov
xchg
add
cmp
mov
nop
jns
dec
and
dec
dec
xchg
lahf
int3
sub
test
xchg
ljmp
jl
cmp
test
pop
mov
xor
adc
and
mov
scas
jg
adc
jns
outsb
es
popa
test
pushf
aas
in
inc
lret
mov
mov
xor
mov
inc
jno
addr16
mov
pusha
pusha
dec
out
xor
pop
mov
pop
aad
push
gs
nop
mov
sbb
sbb
das
mov
iret
fs
js
xchg
rclb
cmp
cmc
mov
movsb
test
xchg
push
outsl
push
mov
sbb
cltd
loopne
loop
and
cwtl
inc
cmp
or
push
popf
or
xorb
adc
push
ds
scas
aad
scas
std
movsl
imul
dec
xchg
and
mov
xchg
cmp
jl
aas
add
movsb
mov
mov
mov
push
mov
jmp
pop
jae
push
jno
ja
lods
aam
repnz
xlat
inc
insb
cmp
fstpt
sbb
lcall
jle
loope
rcll
xorb
mov
fsubs
shrl
jb
cli
in
shrl
xchg
out
movl
ret
cmp
ficoms
jb
ucomiss
insb
push
and
sahf
leave
dec
lods
addl
and
mov
xor
lea
test
push
jae
stos
jmp
fldcw
ljmp
mov
shrb
pop
mov
loopne
addr16
push
in
sbbb
lret
in
cld
or
push
xchg
in
clc
dec
mov
sub
add
cmc
lahf
daa
adcb
repz
push
mov
insb
jg
cmp
add
lea
pusha
pusha
push
xor
jg
mov
call
lock
js
mov
loop
test
xor
lods
push
scas
pop
roll
lods
mov
or
xchg
xor
orl
and
call
push
hlt
xchg
pop
dec
push
std
and
push
subl
pop
jge
pop
xchg
cmp
mov
out
int
push
fwait
aaa
test
mov
in
pop
cmpsl
mov
std
pop
sub
insb
dec
dec
xor
cmp
jae
mov
loope
fldenv
pusha
sub
inc
scas
jbe
imul
cmp
xor
aam
jae
push
std
lcall
enter
pop
push
xchg
lret
add
cltd
push
roll
sub
jmp
fs
pop
sar
dec
jb
subb
mov
xor
mov
jge
fistpl
or
enter
or
mov
out
repz
sahf
pop
jle
jmp
mov
je
ret
mov
shr
daa
imul
cmp
movsb
mov
push
jb
mov
fiaddl
push
in
mov
sbb
hlt
call
jne
fs
mov
sub
outsl
xchg
ret
mov
push
push
xor
loope
test
cmp
adc
arpl
sbb
xor
loope
inc
fdivrs
pop
xchg
mov
into
aam
call
addb
movsb
cmp
adc
xchg
mov
push
pusha
sbb
jp
mov
jbe
xchg
mov
popf
aaa
and
mov
fxch
dec
adc
mov
mov
xchg
loope
adc
movsb
adc
out
sahf
icebp
test
fdivrl
adc
add
jae
mov
add
sub
insb
push
mov
mov
mov
loopne
xchg
xchg
push
fists
jo
xlat
cmp
in
fldcw
clc
pop
std
xchg
cmp
xor
sub
lock
inc
push
jae
jno
mov
and
lret
pop
push
xor
lea
pop
gs
in
xor
xchg
into
mov
xor
sbb
and
clc
jne
mov
and
inc
add
push
cld
pop
ljmp
mov
dec
sub
fstl
pop
xor
xor
fisubs
out
ret
cs
add
test
das
adc
out
aam
shll
inc
lcall
leave
push
mov
das
push
jno
cld
lods
sbb
aad
dec
loopne
add
mov
mov
loope
fwait
mulb
aaa
add
dec
out
mov
lret
std
push
jne
loope
xor
cltd
sbb
sub
mov
lret
lret
jns
and
fidivl
lock
and
push
jbe
and
inc
fistps
into
push
xchg
fadds
addr16
xchg
add
loopne
aad
xchg
cmp
and
adc
ficomps
scas
cwtl
cmpsb
out
and
movsb
inc
xlat
mov
jnp
loope
popf
and
jecxz
insb
mov
mov
out
das
fwait
fwait
lcall
push
inc
les
in
inc
pop
repnz
ret
mov
sahf
mov
repnz
sahf
push
fstl
pop
inc
mov
dec
rcll
test
pop
out
xor
push
lahf
mov
rcll
mov
aaa
jg
sub
sub
out
push
mov
adc
or
je
fwait
inc
popf
or
mov
inc
hlt
jae
test
rcrb
xchg
sub
push
inc
outsb
shrb
xchg
adc
lea
adcb
fcompl
movsl
in
movsb
cmp
shll
stc
or
adc
insl
mov
xchg
or
inc
cltd
lret
inc
lcall
arpl
fwait
cmp
inc
lret
mov
and
scas
cmp
aam
insl
pop
fwait
test
pop
dec
fbstp
cld
xchg
lds
ror
in
xor
adc
add
fwait
xchg
pushf
stos
rorb
adc
fs
inc
inc
mov
pop
fisubs
push
shl
jmp
xchg
and
lods
gs
inc
cwtl
sub
jmp
cmpsl
xchg
negl
stos
ret
sub
mov
mov
dec
outsl
movsl
ds
fstpl
in
movsb
or
xor
ljmp
pop
orl
jbe
mov
sbb
popf
jne
and
fnsave
sahf
nop
in
out
lock
sub
jmp
loope
pop
jbe
and
lcall
movsb
and
inc
or
pop
into
pop
push
mov
stos
into
xchg
cmpb
adc
mov
dec
mov
jg
test
cli
ljmp
mov
and
cltd
adc
lcall
cld
cmp
stos
adc
xlat
fcompl
js
dec
sbbb
push
mov
xchg
mov
lods
xchg
mov
push
shll
insb
sub
stos
mov
scas
cmc
out
gs
add
test
outsb
xchg
push
popa
sub
ds
cmp
mov
cmpsl
aad
sub
adc
insl
cmc
daa
mov
loop
insl
out
dec
ljmp
mov
inc
clc
jge
movsb
imul
xchg
cmp
test
out
sbb
ret
pop
push
mov
pop
xor
rolb
fiadds
leave
imul
mov
inc
sbb
push
out
cs
or
notb
mov
mov
sti
add
stos
pop
push
das
sbb
int
pop
jmp
pop
daa
mov
cmp
xchg
pop
or
icebp
test
jecxz
wbinvd
fmull
imulb
std
xchg
daa
ss
out
arpl
into
ja
mov
int
mov
pop
cmc
mov
mov
in
repz
in
data16
adc
or
pop
and
add
addb
lret
sahf
xor
xchg
adc
or
push
mov
sbb
sbb
xchg
cwtl
xchg
mov
jg
xchg
jbe
cmpsb
push
repz
int
mov
loop
movsb
adc
lock
aas
cwtl
nop
cs
fsub
mov
add
xor
inc
xchg
idivl
xlat
cmp
and
clc
xor
push
xchg
inc
movsb
sub
and
jno
push
ds
add
mov
pusha
cwtl
or
or
xor
fcmovne
and
jecxz
repnz
insl
mov
jge
and
call
in
adc
popa
lods
jbe
shrb
sub
push
ret
xor
jbe
push
mov
clc
test
dec
loope
clc
fucomi
jp
push
aad
lcall
jmp
mov
pop
add
or
and
hlt
aad
gs
and
data16
inc
sub
cwtl
dec
fs
pop
rcl
es
push
jmp
fcomi
out
lcall
ret
sub
push
dec
mov
push
cmp
adc
adc
or
ret
aas
cmp
nop
loopne
add
cmp
fwait
fs
jg
sbb
mov
and
hlt
dec
testb
sti
mov
jnp
into
sbb
sub
xchg
cmp
xor
mov
stc
hlt
jnp
cmpsb
mov
lret
push
mov
and
icebp
or
pusha
inc
int3
sar
push
lods
or
or
icebp
push
and
es
enter
push
mov
jnp
jl
mov
cmp
mov
imul
jne
sub
je
inc
loop
in
scas
imul
sti
sub
inc
jp
mov
mov
inc
sub
xchg
insb
inc
push
mov
dec
fsubs
fisttpll
push
mov
jecxz
xchg
gs
mov
mov
inc
and
mov
mov
test
pop
fmuls
xchg
test
cs
es
sbb
adc
dec
enter
jb
movsl
xor
mov
cmp
arpl
push
subl
dec
dec
sub
imul
cmpsl
out
cmpsl
xchg
cmc
mov
or
outsb
fcoml
dec
fldcw
pusha
nop
jl,pn
nop
dec
rclb
xchg
add
cwtl
aad
dec
in
or
inc
movsb
mov
push
mov
mov
mov
push
mov
sbb
cmp
mov
mov
cmpsb
test
jbe
sti
cmc
fistpll
fs
mov
inc
les
imul
js
push
orps
push
insl
jnp
cmp
icebp
in
ss
das
mov
jo
inc
test
xor
test
dec
jae
or
or
inc
push
mov
sbb
sub
fcmovb
lret
fstp
repz
push
ja
cs
sub
xchg
pusha
mov
lds
popf
mov
loop
mov
mov
outsl
adc
pusha
repnz
pop
and
xchg
divl
test
push
dec
data16
mov
xchg
mov
xchg
out
and
mov
dec
int3
loope
je
les
movsl
dec
mov
dec
cmpsl
or
xchg
cli
cmp
lcall
cmp
push
sbb
outsl
mov
lahf
jle
call
mov
in
add
pop
loope
ja
cmp
inc
dec
dec
test
dec
aam
mov
mov
aaa
inc
fwait
mov
movsl
sbb
sub
adc
mov
insl
rclb
inc
fucomi
lea
in
and
lods
aad
subl
vpsubsb
sbb
fcompl
jne
mov
sbb
jbe
push
xchg
xchg
xchg
pop
cwtl
and
push
cmp
jg
fisubs
sub
test
inc
sub
in
insl
cltd
pop
pop
les
cmp
popf
sti
js
jecxz
push
fwait
mov
pop
cmp
mov
popf
fwait
xchg
jb
xor
fistpll
push
adc
dec
cmp
lea
lcall
push
mov
mov
cmp
shlb
hlt
cs
pop
mov
dec
mov
sti
call
popa
xchg
xchg
cs
pushf
ljmp
mov
add
mov
add
shll
lods
aas
pop
mov
xchg
sub
fldt
adc
dec
xchg
scas
pop
ljmp
jl
insb
xlat
mov
mov
stc
or
jne
test
inc
xorl
nop
and
jmp
sbbl
sbb
push
loope
fmuls
mov
movsb
dec
mov
cwtl
push
ret
xor
push
lods
or
sbb
xor
mov
flds
jne
fwait
and
xchg
xor
sub
nop
pusha
push
out
ret
imul
enter
pusha
sar
cmp
sbb
push
cltd
cwtl
je
pop
mov
insb
mov
xchg
imulb
fidivl
into
je
or
lahf
cltd
sub
cmc
dec
jb
pop
xorb
jl
mov
xchg
or
out
mov
sarl
jae
mov
push
jns
dec
lods
out
data16
or
dec
flds
sbb
test
push
sbb
stos
dec
cwtl
ljmp
xchg
in
jle
sub
and
stos
mov
pop
dec
cli
leave
cmc
sbb
out
in
dec
lea
loope
jmp
lods
arpl
or
push
arpl
popa
add
lea
pop
mov
fwait
push
dec
and
push
inc
jge
aad
inc
pop
pop
cmp
and
sub
pop
jbe
ljmp
ja
mov
mov
andl
or
mov
mov
idivl
jp
pop
in
dec
aam
cmp
cmp
jno
seta
data16
inc
shrl
sub
movsb
xchg
push
adc
pop
xchg
ret
arpl
out
sbb
repnz
ds
xchg
jecxz
out
outsl
mov
jno
lret
xchg
push
add
sbb
adc
lock
dec
cmp
cld
and
lea
mov
imul
lret
mov
xchg
xchg
inc
xchg
cli
push
sbb
aam
fistpll
repz
xor
in
jno
fwait
dec
stos
test
or
in
insb
int3
mov
mov
cmpsl
mov
xchg
mov
or
sbbl
cmp
ljmp
pop
aaa
pushf
stc
mov
fisttps
dec
mov
and
sbb
out
out
mov
es
mov
insb
sahf
cmp
sarl
insl
andb
pop
aaa
sbb
mov
jecxz
sbb
sub
mov
in
mov
dec
xor
sub
jns
in
add
scas
insl
or
scas
pop
xchg
push
push
ja
push
add
loop
lret
shrb
dec
jae
or
std
int3
imul
es
jns
aas
cmp
inc
mulb
mov
push
inc
adc
sub
fsubrp
mov
ret
arpl
adc
shrl
fwait
insb
mov
movsl
rcl
mov
mov
mov
int
and
dec
inc
cmp
dec
pusha
mov
mov
jmp
dec
add
mov
and
adc
sub
mov
lock
aad
lock
push
int3
das
adc
mov
jmp
jb
shr
xchg
stos
sub
hlt
lods
lds
xorl
rolb
mulb
jo
sbb
jb
jge
and
jnp
add
lds
inc
bound
jg
sbb
repnz
or
mov
icebp
inc
repz
out
lcall
push
mov
test
mov
daa
idiv
pop
inc
xchg
pusha
jns
fcomp
push
xchg
jge
jmp
jl
fsubl
addr16
daa
lret
push
pop
test
inc
mov
pop
add
mov
push
enter
stos
mov
or
insb
push
scas
xchg
insb
jo
loopne
lret
dec
lcall
nop
fbstp
push
cmc
ljmp
jo
fdivs
in
lret
sbb
push
loope
lret
sarb
xlat
dec
sbb
insb
movhps
jb
outsl
dec
nop
in
xor
in
cmpsb
mov
fldl
sti
and
adc
inc
inc
out
mov
xor
ret
into
or
out
dec
mov
test
jno
add
lock
and
adc
rcrl
and
add
mov
lea
pop
mov
jecxz
cmp
mov
jne
or
insl
jl
lods
xor
popa
pop
ret
push
lock
inc
jbe
call
jl
dec
xor
mov
dec
sub
fs
push
dec
in
mov
dec
cmp
dec
push
sub
jb
cwtl
pop
pop
ret
sub
add
push
test
insl
inc
xor
mov
int
xor
pop
jb
fwait
and
sbb
or
out
insl
dec
insb
inc
mov
xchg
je
mov
mov
int3
cs
roll
nop
mov
pop
mov
scas
and
into
mov
movsl
sub
jecxz
inc
pushl
nop
mov
fmul
dec
leave
popa
dec
in
aad
fidivrl
fwait
push
pop
jb
push
push
repnz
sbbl
in
and
mov
sbb
fidivrs
push
call
stos
es
dec
push
mov
mov
adc
pop
mov
cltd
xchg
pop
popf
or
add
add
fcomip
sbb
cmpsb
shlb
cmp
push
pop
push
push
and
movsl
out
or
dec
xchg
mov
xchg
mov
mov
pop
add
mov
mov
inc
cs
push
bound
mov
push
insb
mov
jle
lcall
fidivl
fcmove
sub
ret
push
push
add
adc
in
jns
lcall
stc
jae
sbb
ficomps
lahf
test
leave
pusha
cld
faddl
mov
shrl
mov
mov
rclb
aas
jo
jno
pop
mov
stc
push
jp
stos
adc
sub
loopne
inc
sbb
jno
mov
jg
and
mov
xor
cld
xchg
cmpsl
push
jae
in
test
cmp
adc
inc
and
fcoms
jge
outsb
mov
or
and
icebp
gs
sub
fmulp
sarb
dec
and
jle
test
add
rcl
push
add
sbb
mov
in
fwait
add
dec
or
repz
cltd
push
adc
loope
mov
mov
mov
sub
gs
idivl
push
xchg
xchg
jns
jne
jl
rolb
push
dec
add
mov
dec
mov
mov
or
imul
imul
lods
pop
fsts
test
adcl
shlb
and
int
xchg
incl
jne
das
aaa
daa
mov
cwtl
dec
and
mov
cs
stos
lds
repnz
cs
push
repz
or
les
pop
or
xchg
pop
mov
int3
fwait
das
orb
mov
repz
or
push
call
sbb
push
xchg
nop
lods
stos
jbe
aad
adc
les
out
cmp
and
inc
mov
outsl
mov
inc
sub
ja
sub
inc
test
push
inc
xor
test
xor
movsl
xchg
mov
lahf
mov
lock
aaa
loop
xchg
cmc
lds
cmp
mov
mov
div
sbb
cld
std
into
mov
div
dec
imul
into
pop
sbb
pop
xor
ffreep
inc
mov
sub
mov
aas
popf
leave
add
push
stos
outsl
jmp
cli
cmpsl
mov
inc
mov
stc
out
nop
in
mov
pop
jbe
jae
sub
leave
sub
jae
mov
jae
push
inc
fistpl
insl
jbe
arpl
inc
jge
movsb
in
mov
push
fldt
imul
or
dec
and
cmp
jnp
out
cmp
inc
call
in
out
out
out
not
xchg
test
fildll
aaa
mov
test
push
push
insl
inc
icebp
call
or
inc
push
ja
lods
ficoml
mul
aad
lcall
out
sub
xor
sub
cmp
and
das
movsl
ds
jo
lods
and
imul
mov
mov
sbbb
mov
adc
sti
cmpl
and
and
jmp
jp
mov
adc
aaa
mov
out
loope
in
mov
repnz
cmpsb
lret
or
fcoml
cmc
icebp
xor
jno
sbb
lock
sub
xchg
mov
or
mov
jb
sub
dec
dec
pop
loop
push
inc
xchg
sub
mov
and
cmp
jns
lock
cmc
in
push
dec
pop
mov
scas
jnp
outsl
es
cmp
dec
sbb
inc
push
call
shl
stos
jns
push
popa
sahf
mov
inc
sbb
xchg
adc
lahf
fs
jno
cmp
pusha
inc
js
push
fadd
inc
subl
and
shlb
adcb
push
dec
sub
shlb
push
gs
xor
arpl
mov
rcrl
clc
or
imul
imul
out
rolb
mov
inc
cmp
xor
inc
sbb
cmpsb
ret
cmpsb
dec
arpl
out
pop
sbb
jg
sbb
rcll
or
jb
lahf
sbb
mov
adc
xlat
push
push
inc
mov
loope
fcoms
lds
fldcw
jl
xchg
adc
gs
aas
push
arpl
jmp
pushf
push
test
xlat
xchg
mov
repnz
dec
xor
and
pop
clc
inc
jle
scas
add
adc
xchg
sbbl
xor
sbb
mov
in
cmc
mov
add
cmpsl
lcall
mov
es
sbb
xchg
add
add
sbb
test
adc
lods
lock
fwait
xor
sbb
xor
dec
or
adcl
dec
das
cs
int
lret
push
xor
cmc
add
popf
mov
jp
in
cmp
popf
pop
popf
sbb
scas
adcb
stos
test
push
sti
enter
jae
jge
fsubl
notb
shlb
mov
in
ss
adc
std
sbb
mov
stc
loope
pop
divl
cmp
sub
popa
jne
mov
cmpsb
and
xor
pop
mov
xor
adc
test
inc
jmp
outsl
xchg
inc
pop
das
ficoml
xor
pop
xor
inc
and
je
xchg
xlat
mov
cmp
xlat
pop
fistps
jno
or
lahf
jne
sti
adc
outsl
adc
adc
int
roll
jle
mov
sub
lods
sbb
or
cmp
mov
ror
mov
icebp
jle
xor
in
rclb
les
mov
or
push
and
int
xchg
fwait
int
cmpsb
sub
cmc
push
or
sbb
xchg
into
fcompl
cwtl
in
adc
fstp
mov
jmp
lcall
mov
push
mov
cli
dec
sar
jo
xchg
popf
imul
scas
daa
cld
adc
bound
aas
inc
stos
out
xor
cmp
sbb
popa
jg
mov
enter
std
sahf
inc
and
out
pushf
lods
fwait
push
fwait
enter
xlat
out
xor
cmp
test
adcl
push
cld
sbb
inc
icebp
xor
shrb
bound
shr
mov
fwait
aad
leave
and
addr16
icebp
xorb
inc
push
mov
mov
or
dec
loope
dec
xlat
jns
xor
cmp
push
adc
stos
dec
paddusw
sub
jno
sub
or
repz
push
and
mov
mov
out
adc
sbb
sahf
xor
jecxz
jb
pop
jmp
xor
xor
xor
mov
xor
aam
xchg
mov
inc
jg
les
inc
mov
repz
dec
mov
push
pop
je
orb
push
imulb
ljmp
dec
fcmovnbe
sub
movb
sbb
push
lahf
and
xor
pop
jle
xchg
dec
enter
dec
sbbl
mov
das
cmp
je
jbe
rclb
sar
push
mov
xchg
xchg
pushf
push
mov
push
cmp
adc
cwtl
adcb
inc
fwait
stc
adc
sarl
cmpl
sbb
cmp
dec
add
push
ret
jl
jp
jmp
dec
lret
push
outsl
push
adc
test
scas
testl
xor
sub
addr16
les
cmp
xchg
mov
pop
jno
xchg
sub
popf
fbstp
or
ss
mov
add
subb
test
cmova
sti
cmp
mov
sub
inc
arpl
cltd
and
out
or
xchg
add
or
sbb
pushf
pop
sahf
scas
dec
test
mov
pop
dec
fstpt
lcall
ret
jmp
test
inc
and
ss
sbb
jp
cmp
inc
fisttpl
cmc
lods
xchg
inc
xor
inc
faddl
ret
imul
and
and
pop
adc
sbbl
lea
dec
cmp
sti
mov
fwait
jb
daa
adc
inc
and
data16
xor
jg
pop
pop
fcoml
or
flds
add
push
das
fs
or
nop
fidivrs
inc
dec
xor
shll
cmpsl
fadd
ds
loopne
push
cmp
or
ret
pusha
dec
fucomp
and
dec
or
mov
jg
jmp
ds
xchg
lds
push
cmp
out
ficomps
clc
int3
jns
push
js
push
mov
xor
je
getsec
inc
ret
cli
int3
rorb
test
dec
push
cmp
addr16
add
lret
fucom
in
push
push
movsl
shll
jge
dec
sbb
faddl
mov
mov
in
jno
mov
sbb
inc
je
mov
adc
xor
jns
push
ljmp
or
or
sahf
pop
shr
fmul
aaa
fwait
cmpsb
rclb
inc
adcb
pop
lahf
jmp
mov
les
inc
repnz
mov
pushl
clc
xchg
out
xchg
andb
mov
loope
jbe
adcl
sbbl
fbld
lock
xchg
xor
cmc
fcompl
out
hlt
xor
add
sahf
mov
popf
sub
pop
mov
in
fisttpll
mov
and
dec
push
mov
fdivrl
sbb
fs
outsb
int
test
xchg
push
out
js
lret
rcll
jmp
add
fimuls
inc
movsl
mov
icebp
mov
lods
push
les
sub
push
push
push
out
icebp
dec
mov
sbb
mov
pop
push
sbb
fcomps
clc
xor
test
inc
lock
or
shlb
clc
popa
in
mov
sbb
bound
mov
mov
sub
scas
call
inc
les
out
xor
fidivs
lahf
inc
mov
ss
fcmovu
xchg
sahf
sub
pop
lcall
mov
adc
in
int
sub
aad
mov
test
imul
pop
pop
pop
mov
mov
fmull
xchg
push
dec
inc
out
lock
nop
push
push
js
mov
outsb
push
movsl
pop
insl
out
fnstenv
mov
pop
jno
pop
sub
push
lods
cmp
sub
movsl
mov
aam
jnp
sbb
jg
out
mov
inc
jns
jae
sbb
and
mov
sub
lods
mov
enter
jge
in
out
pop
cwtl
pop
dec
sbb
cltd
sti
test
rorl
push
inc
sub
std
jmp
movsb
pop
stc
mov
je
jecxz
jecxz
inc
push
stos
mov
xchg
mov
test
sti
inc
fwait
xchg
in
adcl
movb
shll
mov
jb
push
enter
lret
inc
repz
popf
test
dec
pop
dec
pop
sbb
nop
repz
xchg
leave
cmpsl
fs
inc
in
xchg
jp
movsw
fwait
mov
jmp
push
push
popa
pop
das
iret
adc
outsl
dec
mov
pop
pop
js
mov
mov
mul
pop
sbb
cmp
adc
shlb
mov
cmp
icebp
dec
xlat
and
test
das
mov
mov
xchg
adc
inc
mov
pop
lret
lahf
das
add
les
outsb
ffree
mov
cmc
outsb
xchg
repnz
pop
ja
push
dec
sbb
adcl
aaa
push
scas
xor
jle
pop
leave
inc
xor
loop
xchg
imul
iret
mov
loop
std
in
repz
leave
arpl
jecxz
dec
and
pop
inc
das
push
sub
aas
popf
scas
dec
jl
cmp
push
mov
xchg
dec
rclb
xchg
mov
cmp
pop
mov
bound
loope
faddl
imul
add
sub
cmp
stos
adc
inc
add
pop
dec
divb
xchg
cld
hlt
xchg
push
push
lods
dec
ret
xchg
int
sub
out
push
jecxz
pop
leave
mov
shlb
test
stc
mov
mov
push
daa
mov
sub
cli
mov
mov
movsb
jecxz
and
push
int
pop
dec
pop
xor
jmp
lods
jg
dec
add
dec
sbb
inc
ret
xor
jmp
xor
sub
daa
cmpsl
jne
pop
adc
popa
data16
push
inc
mov
jne
xor
imul
data16
pop
popf
push
pop
adc
sub
sti
sarb
fwait
jle
iret
dec
cmpb
idivb
pop
add
stos
sbb
js
loopne
sub
iret
cmc
cmpsb
jbe
cltd
cmp
push
movsb
test
xlat
and
sbb
pop
aam
cli
xchg
repz
inc
mov
incb
xchg
fwait
cmp
dec
decb
xchg
jb
xchg
je
mov
mov
les
adc
sarb
and
int
add
mov
andl
push
and
leave
mov
dec
outsb
dec
jle
cld
jp
sahf
push
inc
arpl
scas
lock
scas
mov
orl
cltd
sbb
scas
dec
test
imul
push
xor
jnp
lahf
add
adc
push
lds
in
fsubl
jecxz
popa
aad
mov
sub
xor
sub
xchg
jg
aaa
mov
cmp
aas
bound
fnstsw
mov
cmp
push
jb
dec
cmp
rolb
inc
loop
lcall
cmpsb
fidivrl
fisubs
xchg
sbb
stc
sbb
ja
inc
pushf
enter
xor
cmp
pop
mov
stos
rclb
rorb
dec
sub
sbbl
sub
jae
loope
shrb
pop
cmp
sbb
pop
insl
mov
shlb
xchg
dec
jp
aad
outsb
ss
inc
sub
ja
cmp
in
cs
ljmp
sbb
int
int3
mov
int
outsb
inc
jg
addr16
push
add
aaa
xchg
dec
sub
sub
jnp
inc
lahf
push
cwtl
jno
jecxz
loopne
xchg
jp
jl
or
clc
sarl
inc
fadds
xor
xchg
fiadds
mov
jg
fwait
dec
in
lock
call
sbb
dec
sub
add
sarl
xchg
dec
nop
ret
fdivrp
xchg
pop
push
in
cs
and
mov
jle
jg
dec
push
pop
test
cs
stos
mov
jne
mov
adc
es
imul
pusha
subb
cmp
out
in
jecxz
imul
data16
scas
dec
mov
into
jp
jno
mov
adc
dec
cltd
push
or
cs
mov
cmpl
into
mov
in
push
aad
sbb
inc
sbb
jmp
lds
sub
xchg
pop
je
test
inc
or
mov
cmc
mov
jl
jp
cli
push
lret
bound
jns
jle
sub
dec
mov
sub
mov
cmpsb
nop
or
xor
xor
int
lods
and
enter
int3
push
add
out
into
xor
and
cld
je
scas
mov
inc
stos
js
out
cltd
enter
andl
mov
inc
xchg
jecxz
mov
xor
xlat
int3
pop
inc
cmp
popa
std
sub
adc
and
or
hlt
cltd
imul
dec
fdivs
js,pn
xor
mov
xchg
inc
mov
lret
mov
dec
push
test
jle
xchg
add
push
sub
ret
mov
sub
outsb
mov
ljmp
inc
fbld
js
cmp
pop
fs
jecxz
inc
dec
aam
push
int
push
in
aaa
mov
sub
xchg
test
sbb
sbb
mov
cs
push
into
xor
mov
push
and
lahf
adc
add
jg
jecxz
adc
push
xchg
outsb
bound
jecxz
pop
or
jle
in
mov
xchg
push
loop
cli
call
adc
pushf
or
test
inc
mov
cld
jb
mov
or
or
push
mov
leave
adc
in
or
mov
mov
push
aaa
out
stos
jmp
in
jmp
fcomps
std
out
scas
test
fwait
es
or
and
es
pop
cmp
xchg
loop
mov
push
int
pushf
mov
inc
bound
clc
addr16
jmp
jl
inc
xchg
lret
inc
inc
adc
jp
push
jmp
leave
out
jbe
xchg
orb
repz
inc
popf
or
and
fwait
xchg
sub
data16
repz
cmpb
and
xor
mov
cmp
xchg
and
inc
dec
push
xchg
pusha
mov
cld
pop
lea
push
pusha
test
add
into
mov
sub
mov
popa
out
xchg
test
push
out
fdivrl
idiv
mov
sub
stos
adc
insb
xchg
imul
sti
pop
mov
testl
jns
cld
outsl
sub
dec
addr16
sub
and
xchg
pop
vpermi2d
fincstp
cmc
xchg
arpl
cmp
ret
pop
enter
inc
adc
fadd
dec
aam
jle
lret
test
sub
sub
mov
loop
xor
jae
pop
ret
loop
add
sub
test
xchg
and
jecxz
call
push
test
cli
shlb
push
mov
in
mov
jp
test
mov
sub
adc
jb
cmp
dec
in
or
or
jae
cmp
es
add
mov
and
test
jmp
adc
fwait
xchg
inc
and
popf
jne
and
stc
push
dec
daa
test
sub
push
leave
xlat
stos
pushf
je
sub
out
icebp
push
out
call
shlb
lret
or
push
rorl
xchg
fdivrs
add
fnstenv
jno
pop
sbb
push
pop
add
inc
std
mov
xchg
mov
xchg
jl
je
jge
pop
out
and
mov
pmulhw
mov
shll
inc
or
or
mov
dec
imul
cmp
scas
div
add
sub
leave
scas
inc
sub
inc
stos
lock
loop
repnz
and
fiaddl
adc
and
jae
test
loopne
cmp
cmpsb
inc
add
dec
pushf
repz
je
push
cmp
pcmpeqw
mov
jmp
pop
xchg
pushf
push
into
popf
sbb
insb
cmp
xchg
cmpsl
mov
mov
push
lahf
xchg
jg
pop
pop
mov
xor
adc
push
std
rcl
or
xorl
lahf
addr16
hlt
mov
inc
cwtl
je
xor
cmp
test
add
call
into
gs
int
sysret
or
mov
fwait
iret
jge
iret
mov
mov
sbb
test
mov
das
mov
cmp
lret
dec
out
jae
sbb
ret
out
rcrl
repz
push
dec
mov
subb
pop
pop
leave
add
out
sub
cli
stos
test
sahf
and
jne
out
cs
inc
cmp
dec
shll
in
shll
pusha
call
mov
popl
sub
xor
iret
mov
adc
mov
roll
test
push
add
ljmp
push
cmp
or
or
cli
cmp
jns
xchg
aad
mov
add
pop
sbb
sub
out
call
ds
dec
ljmp
clc
inc
pop
icebp
movsb
neg
or
and
and
pushl
mov
push
loopne
jns
mov
fs
ret
outsl
dec
mov
mov
mov
add
sub
jmp
rclb
sbb
xor
jo
dec
cltd
fcompl
xchg
dec
and
aam
fsubrs
lods
xorl
jge
dec
in
call
sahf
inc
stc
adc
fstp
dec
stos
mov
inc
xchg
push
mov
mov
fildll
es
mov
int
push
cmpsl
jp
loope
xchg
call
add
xor
arpl
cmpl
cmp
cmp
pop
or
add
adc
xchg
push
mov
dec
sub
loope
or
arpl
xchg
adc
ret
aam
stos
int
push
inc
push
or
repnz
into
scas
sub
sub
sub
lahf
in
rcl
push
iret
sub
xchg
jns
or
cwtl
push
cmpsl
fisttps
sbb
ror
mov
cs
stc
call
jp
mov
xchg
xchg
add
dec
sbb
rclb
movsl
pop
je
notb
pop
xchg
cld
or
pop
add
pop
jno
jb
out
mov
dec
mov
cmpsb
xor
loope
mov
loop
sub
add
aad
adc
imul
jno
popf
mov
shll
insb
pop
cmp
cmp
fsubrl
fisubrs
ret
dec
add
pop
shrl
lock
push
push
bound
lcall
imul
sub
jo
sbb
jne
pop
mov
sbb
ffree
cmp
and
pop
sbb
rcll
xchg
xchg
and
lcall
inc
or
rcrl
popf
sti
jo
cmp
js
iret
sbb
ljmp
sub
and
stos
out
fistps
outsb
mov
push
or
loope
xchg
leavew
mov
in
lahf
insb
dec
pop
or
jp
sbb
mov
dec
cltd
cwtl
repz
popf
arpl
aad
pushf
das
cmpsb
gs
decb
adc
cmp
cmc
push
pop
nop
scas
iret
push
mov
jo
out
add
lret
pop
mov
push
in
xor
cltd
outsb
insb
mov
dec
mov
scas
cmpsb
aam
adc
stos
pop
sub
fwait
or
out
int3
push
jle
sbb
cmp
mov
push
xor
outsb
repnz
adc
mov
aas
mov
mov
mov
adcl
lret
mov
sbb
dec
inc
jle
fcmovb
cmc
inc
pop
stos
mov
push
call
mov
and
rcrb
mov
aad
insl
movsb
mov
aad
dec
inc
sbbl
mov
test
xchg
add
inc
stc
popa
stos
inc
xchg
mov
stc
je
popa
xlat
stc
sub
cmp
adc
fwait
inc
push
shl
sti
sub
sub
in
fsub
and
xchg
push
and
pop
push
jle
fcomps
lret
xchg
sarb
lcall
push
dec
jg
pop
push
xor
xlat
test
and
jno
movsl
push
and
jg
fcoms
and
mov
dec
lret
leave
mov
cld
negb
push
pop
and
pop
pop
lods
mov
das
lds
add
or
inc
lock
test
and
mov
data16
and
sub
inc
mov
dec
in
into
insb
or
pop
stos
lods
je
out
imul
pop
aaa
sub
arpl
push
cmp
dec
call
jb
cld
sub
mov
cmp
iret
mov
loop
sub
mov
mov
mov
test
inc
mov
pop
rorl
shrl
xchg
mov
push
lahf
stc
imul
into
cmp
into
adc
pop
or
jae
daa
push
and
and
mov
lea
lea
das
cmpsb
pop
popa
xchg
movl
xchg
cli
inc
and
jo
add
or
dec
and
pop
and
out
xchg
or
mov
sub
jne
mov
dec
js
xchg
adc
mov
and
aad
test
cmpsl
data16
xchg
out
popa
inc
cli
dec
jne
iret
cmpsb
mov
dec
call
cmp
bound
das
or
fs
push
sub
and
rol
std
adcb
pop
aaa
loopne
outsb
iret
sar
push
sub
mov
mov
inc
or
xor
lods
add
es
sbb
mov
das
call
cmp
gs
imul
xor
mov
stc
cltd
mov
jb
shlb
xchg
fidivl
or
data16
inc
add
stc
leave
jle
mov
xor
out
fs
adc
or
aam
pop
and
mov
sar
stos
jmp
mov
adc
jmp
int
dec
fistpl
inc
sub
out
jecxz
jp
dec
xchg
into
lods
or
data16
pop
dec
frstor
scas
mov
test
fistpl
fstps
sub
setae
fcmove
pop
mov
data16
test
out
lret
out
arpl
stos
lock
pushf
dec
imul
cmpsl
pusha
icebp
or
sub
mov
pop
adc
in
cmpsb
sub
fnsave
mov
aad
push
in
sub
mull
sub
lock
xchg
dec
rorl
jecxz
adc
mov
jnp
push
sahf
mov
cmp
and
inc
mov
pop
mov
es
push
sbb
fisubs
sub
mov
jle
pop
jno
dec
inc
cltd
xlat
imul
scas
jbe
bnd
lret
inc
adc
dec
aam
dec
imul
mov
inc
iret
sub
pop
out
sub
iret
ss
addb
push
dec
sub
xchg
lahf
lods
pusha
pop
sbb
or
es
sahf
mov
or
movsl
adc
lahf
pop
push
cmp
gs
out
lcall
mov
js
xchg
mov
ret
pop
adc
and
xor
or
sub
and
clc
jmp
or
xchg
inc
lea
cmp
lds
jp
std
xchg
lds
test
insl
dec
pop
pop
lods
pop
shll
pop
cmp
and
aaa
jae
stc
iret
xchg
sti
imul
mov
pop
add
and
push
int3
cmp
inc
pop
dec
sbb
add
jmp
sbb
add
cwtl
imulb
test
out
fadd
es
sub
cmp
movsb
pop
and
fwait
sbb
sbb
cmpsb
icebp
mov
sbb
popa
pop
outsb
in
test
loopne
push
push
pop
js
dec
in
shl
fwait
fwait
gs
mov
aas
mov
cmc
and
cmp
fs
lret
ret
jge
aad
jp
xchg
sub
xchg
aaa
adc
pop
mov
repnz
adc
aaa
imul
cmc
add
xor
mov
dec
jecxz
mov
shufps
xchg
sub
int3
pop
sti
shlb
lahf
pop
cmpsb
int
lods
les
sahf
sbb
cmp
pop
jge
inc
leave
jns
or
jbe
mov
mov
jle
aam
mov
lret
xlat
xor
pop
fwait
dec
js
cmp
fistpll
es
or
leave
out
lds
jp
lock
fidivrl
xchg
stos
jnp
setae
hlt
xchg
in
stos
shll
lret
sahf
sar
xchg
jbe
push
push
inc
stos
rcrb
sub
jmp
adc
fldt
jno
pushf
ficoms
test
pop
clc
dec
xorl
movsl
hlt
sub
pop
clc
pop
in
inc
pusha
scas
pop
jns
sbb
cmp
hlt
daa
inc
addr16
fistps
or
and
pusha
push
sarl
shll
ficomps
mov
data16
fidivs
jnp
mov
movsb
leave
jecxz
imul
xor
xor
mov
addr16
aaa
xchg
sub
mov
lcall
cli
sub
roll
mov
pop
push
in
jnp
and
dec
lds
data16
sbb
or
addb
jno
xchg
cld
pop
cli
fnsave
gs
rolb
push
aad
je
pushl
mov
inc
or
mov
hlt
ljmp
int3
sahf
fwait
and
xchg
cmpsb
mov
or
mov
dec
int
shlb
mov
fisubrl
aam
push
push
pop
push
scas
iret
stc
jmp
ja
jbe
mov
scas
loop
shlb
fs
xor
inc
test
aas
sbb
jne
xchg
ljmp
test
mov
loopne
mov
mov
cld
cmc
jne
rcll
or
xchg
lahf
pop
lret
loop
adc
xlat
stc
fwait
xchg
outsl
aam
pop
movsl
iret
and
fs
jmp
jge
lods
out
sub
xchg
test
and
fmull
into
int3
dec
or
scas
inc
push
cmc
sub
sbb
jp
imul
mov
pop
loop
jno
ret
in
fisubl
repz
adc
cmpsl
xchg
cwtl
call
xor
ja
mov
adc
rcll
faddp
sbb
sar
lds
orl
jg
pop
movsb
sub
mov
scas
aad
sbb
mov
lret
sbb
jmp
add
adc
and
fidivrs
xor
mov
sub
addr16
out
dec
fisubrs
jo
aas
movsb
ret
jge
push
pop
adc
cli
adc
xor
push
xor
or
dec
xor
cmp
push
mov
mov
mov
stc
cmp
inc
out
and
das
orb
mov
lret
or
andb
test
repnz
int3
xchg
loop
pop
repnz
sbb
aas
mov
fwait
and
sbb
imul
call
xor
stc
mov
int3
jecxz
mov
loope
in
sub
out
clc
popf
ds
or
add
test
sub
mov
add
jo
xchg
stc
push
aaa
push
pop
sbb
pop
jmp
filds
mov
addr16
adc
roll
inc
test
lods
inc
lock
inc
adc
push
loopne
mov
and
add
inc
dec
test
or
push
jg
rclb
loope
outsl
and
ds
outsb
mov
mov
loope
inc
addb
lahf
out
dec
bound
daa
mov
cmpl
cmp
mov
xlat
punpckldq
jmp
shrb
out
sbb
mov
jge
push
mov
mov
decb
dec
dec
test
and
test
shlb
xchg
sub
and
or
jp
stos
push
push
dec
xchg
enter
inc
dec
xor
daa
leave
xor
aam
pop
sub
xchg
sbb
or
std
mov
and
cli
mov
pop
clc
jmp
lock
cmp
xchg
decl
divb
nop
cmp
jnp
loopne
xchg
xlat
adc
jp
clc
cmpsl
xor
mov
mov
addr16
loopne
push
es
jno
pop
cltd
sbb
sbb
ds
aad
enter
mov
mov
dec
push
dec
dec
and
jo
int
in
push
jmp
push
lods
push
addb
stos
stos
call
outsb
fmull
xchg
xor
enter
fwait
inc
jo
stos
insl
out
in
insl
pop
push
dec
jg
gs
test
xchg
pop
pop
inc
inc
lcall
ret
ds
mov
pop
cmp
mov
iret
cmpsb
daa
lret
add
xchg
push
push
rorb
pop
push
sbb
rcrb
fnstcw
jle
xchg
mov
scas
test
sbb
sti
shll
xor
cmpl
sub
fisubrs
jns
inc
test
xchg
les
insb
pop
inc
jno
stc
push
mov
loopne
dec
fs
jmp
dec
xor
pop
push
lcall
push
fisttps
out
cmp
les
mov
rcl
std
sti
int3
shrb
ljmp
cli
out
jbe
addr16
pop
int
sub
dec
dec
test
cmp
mov
mov
lock
in
mov
jo
sub
lcall
filds
bound
and
jo
lods
call
add
sbb
mov
lock
notl
xlat
loop
mov
dec
mov
push
xor
lea
jns
mov
mov
dec
aam
adc
or
sbb
pushf
in
insl
jno
cmpsb
xchg
mov
mov
mov
xchg
insl
sbb
std
popa
lods
add
ljmp
out
xchg
jecxz
cwtl
pop
pop
dec
jp
push
test
aad
mov
cli
das
mov
cmc
adc
movsl
outsb
fs
ljmp
xor
sbb
mov
inc
pop
inc
xor
aad
fnsave
int
mov
lret
jl
mov
xchg
out
int3
mov
cmp
mov
lock
test
adc
add
icebp
out
out
adc
jb
mov
imul
sub
daa
lcall
lods
sbb
pusha
push
pop
repz
dec
out
scas
in
jmp
cmp
xor
rcll
lds
icebp
stos
daa
das
ds
dec
sbb
jnp
inc
push
test
fnstenv
xor
sbb
in
add
add
push
repz
cltd
fidivs
les
adc
or
or
outsl
inc
push
xchg
push
fistpll
xchg
add
into
cld
inc
jg
cli
push
outsb
sub
push
sbb
mov
aad
cltd
mov
sbb
mov
xchg
add
pop
das
fildll
and
xchg
mov
jp
leave
pop
push
inc
xor
jns
shlb
adc
mov
jnp
mov
mov
cmpsl
ja
shrb
dec
in
jno
in
addr16
sahf
sbbl
mov
in
mov
xor
leave
pop
xchg
lcall
fadd
call
lods
xchg
sti
in
cmp
es
sbb
dec
iret
pushf
mov
cmp
inc
xchg
sbb
lods
fsubs
stos
push
in
pop
lcall
call
movsb
xor
std
test
inc
mov
std
mov
das
mov
xchg
fistpl
popf
pop
and
cmpsb
xor
outsb
imul
mov
les
test
fsubrl
cmc
cmp
jl
pushf
xlat
pop
adc
mov
out
cs
fs
sub
cwtl
cmp
outsb
xor
push
push
gs
aad
pop
push
push
and
jg
gs
and
cs
imul
xchg
notl
mov
lods
adc
fadds
mov
jmp
je
mov
pushf
sbb
js
adc
jl
cmp
in
jle
cmp
dec
rcrl
push
cmp
inc
sub
imul
lods
repnz
xor
sub
jecxz
fbstp
jl
pop
fnstsw
cmpsl
js
mov
fdivrl
sbb
push
aaa
lods
mov
fcoms
fidivl
mov
sub
fdivs
insl
add
icebp
stos
or
xlat
mov
pop
sub
pop
xor
xchg
adc
ficomps
lcall
das
jne
xchg
loope
lahf
mov
cltd
adc
mov
push
test
movsl
dec
dec
enter
mov
and
mov
xlat
sbb
mov
mov
pop
pop
aam
xchg
out
movhlps
addr16
adc
pop
jmp
cmp
push
daa
daa
lods
push
cmpsb
sub
lret
nop
mov
jmp
sbb
sbb
in
rcrl
int3
sbbb
jp
loopne
add
add
daa
cld
cli
test
in
mov
lret
inc
or
dec
rorl
clc
push
mov
inc
imul
in
inc
push
shlb
out
lods
mov
test
mov
lcall
jbe
or
jmp
dec
mov
inc
xor
enter
insb
sbbb
xchg
scas
scas
pop
add
sub
inc
xchg
inc
pop
ja
sbb
cmp
cwtl
dec
call
jmp
and
cwtl
clc
fistps
push
cmpsl
pop
pop
pop
xor
cmpsb
addb
inc
mov
movsl
push
push
or
sbb
xchg
jmp
xchg
inc
stos
inc
rcll
xor
xor
sti
daa
lock
divl
push
push
xchg
sub
xchg
or
in
adc
or
repz
and
xlat
scas
push
fsubrl
dec
lret
fwait
test
imul
inc
and
jnp
fldt
adc
mov
jae
arpl
js
pop
movsl
insb
shll
push
jb
jp
cmp
dec
stos
aaa
mov
or
cli
gs
mov
popa
popf
leave
add
imul
mov
fdivrs
and
fs
test
ret
dec
test
cmc
stos
aam
or
xchg
push
shl
pop
outsl
and
cmpl
mov
fildl
jae
adc
and
neg
test
mov
jecxz
jle
dec
pop
int
leave
inc
jno
inc
xor
sbb
push
and
jecxz
or
test
add
lcall
orb
outsl
add
jo
in
icebp
scas
scas
jle
test
neg
je
xchg
lods
cmpsb
and
std
hlt
sub
rol
jp
movsb
ja
inc
mov
adc
inc
push
mov
mov
jl
fidivs
jo
cmp
out
cltd
inc
out
pop
mov
xchg
mov
icebp
adc
jno
ret
loope
adc
add
fisttpl
pop
inc
xchg
inc
jnp
xlat
or
push
inc
cmpsl
jae
cwtl
pusha
jp
push
jne
jecxz
xor
mov
pop
mov
adc
repnz
xor
out
movsl
call
dec
dec
cs
jbe
push
lret
ss
or
cmp
lcall
pmaxub
sub
dec
mov
fnsave
xchg
push
push
push
cmp
jg
jnp,pn
lea
repz
pop
in
add
inc
gs
mov
xor
xorl
imul
jno
fsubrs
adc
jae
push
bound
leave
push
push
xor
jg
daa
stc
les
xlat
inc
inc
rorb
cwtl
mov
pushf
inc
xorb
or
lret
test
in
cmp
in
fsub
cmp
or
jle
lds
sbb
std
fisttpll
push
push
js
mov
adc
test
test
pop
fs
xchg
sbb
ja
nop
mov
out
ds
inc
jecxz
gs
in
insl
xchg
adc
xor
pop
adc
or
or
dec
and
call
xor
dec
or
into
pushf
lods
sbbb
int
xor
cmp
loope
rclb
sub
negb
dec
inc
pop
nop
xchg
mov
jmp
jo
xchg
jae
cli
jnp
lea
push
xchg
lods
push
movsb
xchg
icebp
aad
add
or
subb
lds
pop
orb
jae
push
js
cmp
mov
and
ret
sbb
fcomps
fdivp
lods
push
stc
mov
ss
jmp
fstpl
adc
xor
push
mov
data16
mov
pop
out
jo
pusha
mov
insb
inc
lea
pusha
cld
mov
cmp
inc
call
fistl
daa
movl
punpcklwd
adc
filds
or
fnstcw
out
enter
xchg
xchg
mov
cmp
ja
sbb
and
addr16
push
pushf
iret
sub
cmp
dec
dec
stos
mov
adc
cmp
push
ret
repnz
inc
das
xchg
into
push
dec
movsb
push
inc
pop
dec
daa
push
xchg
sub
shlb
stc
dec
idivb
ljmp
cmpsb
aam
inc
notb
cs
repnz
xchg
test
xor
mov
std
push
mov
das
xor
sahf
pop
dec
dec
icebp
mov
sub
xchg
pop
rcll
loopne
or
sahf
jae
dec
sbb
adc
loope
stos
scas
stos
jp
bound
leave
pushf
fmulp
xor
sub
sbb
xchg
mov
cmp
adc
je
cmp
lret
jp
mov
and
mov
adc
jmp
into
pop
ret
push
cmp
sbb
lret
rcll
hlt
xor
fistpl
rorb
jmp
add
adc
sub
pop
in
pop
mov
or
pop
jb
hlt
out
adc
imul
loope
mov
lcall
jae
enter
out
push
aam
aam
sbb
addr16
popf
push
xchg
xchg
popf
lcall
pop
xlat
int
cmpsb
push
jle
and
mov
dec
jns
mov
adc
xor
jg
pushf
ljmp
rcrl
jo
les
fucomip
pop
mov
push
or
inc
push
fdivl
in
pop
inc
mov
loop
xchg
fcoms
add
and
jb
fs
jp
cld
add
push
jns
mov
pop
js
fisttpl
out
inc
jg
push
cli
cld
jmp
nop
jmp
cmpsl
clc
aam
icebp
shll
mov
push
and
dec
fcoms
fs
ljmp
xor
es
pop
push
cmp
sub
cwtl
shll
dec
xor
sub
adc
or
sbb
mov
imul
adcl
inc
mov
jp
movsb
icebp
sub
ljmp
addr16
add
push
xor
jg
or
xchg
dec
push
jg
mov
adc
push
or
inc
bound
push
cltd
out
mov
dec
and
or
jecxz
cmp
xchg
inc
lods
les
sbb
push
push
lret
mov
inc
mov
loop
enter
aaa
out
js
push
inc
mov
jl
pop
orb
out
or
mov
adc
or
xchg
pop
outsb
mov
in
push
dec
or
pushf
rcll
repz
out
pop
adc
cs
rcll
pop
inc
and
test
sbb
jae
ss
outsb
xchg
jl
and
fisubs
add
cmp
mov
into
sub
xor
shrb
pop
fldenv
cmp
fwait
fwait
and
jo
sarl
mov
xchg
add
mov
xlat
cmpsb
loope
imul
push
ja
xlat
insb
test
xor
hlt
fs
pop
mov
jae
jmp
aad
or
cmp
dec
ret
dec
lcall
sahf
call
xlat
xchg
mov
cmp
in
jmp
jbe
and
push
cmpsl
push
fsubrs
repz
clc
mov
jb
sar
loope
jmp
pop
push
enter
push
sbb
sub
lock
dec
js
jne
dec
xor
shrl
fwait
push
mov
add
sbb
lods
and
xchg
rcrl
mov
icebp
mov
add
out
sti
pop
hlt
imul
xchg
loop
jl
adc
lret
icebp
sarl
sub
stos
xchg
ja
jle
sub
cmp
mov
push
push
xchg
out
rcll
cmp
loopne
sbb
mov
mov
push
cli
out
sbb
outsl
jge
mov
mov
sub
enter
jmp
adc
test
pop
out
inc
push
pushf
push
inc
inc
jge
testb
in
mov
scas
sar
xlat
ficoms
pop
cmpb
mov
push
insl
or
xchg
outsb
out
cwtl
xor
cmp
adc
out
fistl
cmp
jle
lods
fwait
enter
inc
or
je
out
mov
sub
test
pop
sub
fdivrp
cmc
push
push
imul
inc
ret
xchg
jne
out
sub
nop
jmp
lds
in
or
popa
aaa
xor
inc
xor
ret
test
lods
stc
cmc
lods
mov
bound
jb
dec
add
bnd
mov
bound
mov
push
inc
repnz
lods
push
sbb
mov
rol
or
fdivs
and
in
sbb
addl
aam
cmpsl
pop
addb
xchg
insb
ja
sbb
xchg
mov
and
arpl
jo
mov
mov
int
das
adc
mov
lods
notb
push
imul
and
loope
or
adc
test
cltd
movsb
adc
enter
fwait
sahf
je
int3
sbb
dec
xchg
and
sub
or
or
adc
int
jmpw
js
lds
xor
out
sub
dec
leave
push
cmp
pop
test
dec
jne
clc
mov
rcrb
jbe
xchg
lahf
imul
movsl
scas
fsubrs
dec
stos
jmp
pop
rcrl
xchg
xchg
mov
or
xor
xchg
repnz
sub
packuswb
fldl
lods
cmp
lock
mov
fs
pop
adc
sub
push
adc
cs
aad
mov
dec
inc
sbb
jb
mov
dec
xor
dec
pop
les
dec
inc
int3
cwtl
jg
mov
mov
outsb
jnp
pop
and
dec
lahf
pop
cld
sub
adc
lcall
popl
inc
sub
int3
call
sub
add
pop
rcrl
insl
out
cmp
stos
xchg
cmp
dec
inc
lods
pop
and
add
jmp
sub
and
jb
inc
insb
test
fsubs
xor
dec
push
insl
inc
pop
push
fmull
enter
pop
cmpsb
nop
xchg
int
stos
jle
jb
in
lods
mov
mov
sti
cwtl
sahf
outsb
clc
cmpsl
movsb
dec
rclb
idivb
sbb
out
dec
rorb
ja
into
lea
xor
negl
in
dec
dec
scas
in
xchg
jbe
loop
mov
aad
jne
sbb
inc
gs
jge
imulb
push
mov
jmp
in
aas
fidivl
andl
enter
xorb
mov
xchg
loopne
cmp
jmp
add
xchg
cmpsb
cmp
dec
stos
rcll
mull
lcall
push
outsl
popa
mov
popf
lret
pop
fs
jbe
pop
das
mov
dec
mov
in
xchg
xchg
cmpsl
lcall
lds
sbb
fdiv
sbb
in
mov
add
pop
std
jle
pop
mov
adc
mov
add
pop
int
push
push
push
add
cmp
sbb
imul
mov
ret
aam
fildl
mov
arpl
pop
stos
lcall
sbb
cmpsl
mov
mov
aad
bound
hlt
mov
js
leave
pop
scas
cli
xorb
sub
sub
jbe
pushf
mov
fwait
xchg
out
int
pop
test
enter
and
sub
mov
rcrb
int3
pop
push
rol
or
or
cmp
daa
xchg
sub
dec
mov
sbb
push
sbb
call
add
push
sbb
scas
mov
xchg
inc
fs
xchg
sub
and
jecxz
outsl
mov
dec
stc
cmc
xchg
pop
cmp
cmp
int3
push
mov
stos
pop
jb
mov
jle
pop
xchg
out
adc
sbb
sbb
cmp
sti
and
xor
addr16
pop
call
iret
fdiv
lock
pushf
outsb
pushf
das
xor
jne
pop
js
push
xor
sub
mov
lcall
or
out
negb
xor
lret
sahf
out
inc
addb
jle
ds
pop
iret
stos
inc
pop
or
int
pop
cmp
out
es
into
cmp
in
jecxz
cmp
out
addr16
dec
adc
fldl
xchg
les
xchg
push
xorl
inc
dec
subb
js
jg
fldcw
push
cmp
push
xor
sbb
mov
sbb
popf
test
mov
inc
push
in
sbb
scas
sub
mov
adc
test
push
mov
mov
mov
xchg
mov
cs
pop
and
sub
mov
fmuls
jle
cmp
rcrb
mov
add
lds
xchg
xchg
push
pop
or
jle
mov
clc
mov
push
ficoms
push
pop
jne
aad
stc
pop
cmp
inc
dec
sbb
movsl
mov
ja
mov
sub
testb
bound
push
adc
and
pushf
push
mov
mov
or
xor
sub
pop
sub
xchg
mov
loop
sbb
or
dec
pop
mov
cltd
mov
mov
out
cmpsl
pop
xlat
adc
jge
jle
ret
sub
add
mov
jb
sbb
jp
jbe
sub
repnz
push
cmpsb
and
les
loopne
ss
test
push
or
xchg
inc
aam
jo
adc
cli
inc
mov
rolb
ja,pt
iret
pop
push
cli
mov
mov
push
js
add
in
stos
movsb
and
push
outsb
insb
mov
jl
pusha
xor
and
push
sbbb
inc
adc
test
jl
cmp
cmpsb
mov
lcall
fdivrp
repz
fcomp
data16
je
std
shlb
xor
test
clc
lahf
rclb
push
cmp
mov
lret
push
imul
ss
inc
mov
test
ds
add
xor
mov
cmpsl
repz
das
xchg
push
gs
adc
cmp
mov
fcmove
cs
in
in
imul
inc
sbb
std
in
les
sbb
xchg
jl
daa
pop
pop
addr16
lea
cmpsb
push
adc
jae
loope
push
sti
cmpsl
push
xor
clc
fbstp
push
sbb
loopne
shlb
xchg
add
cmpsl
jg
loopne
je
rcll
pop
mov
push
push
out
jge
frstor
pop
cmc
ds
in
xchg
rcrb
xchg
jg
cs
mov
or
rol
adc
nop
scas
incb
xchg
stc
fcompl
cmp
adc
xor
stc
pushf
pop
push
inc
testl
cmc
inc
lret
es
xchg
inc
xchg
ds
ficoms
mov
test
fcoml
add
inc
inc
fidivrl
popf
xchg
mov
rorb
movsl
push
push
jae
xlat
stos
push
xchg
jo
xor
mov
push
mov
repnz
movb
xor
cld
stos
nop
inc
or
sub
adc
xchg
insl
sti
jb
in
inc
xchg
cwtl
add
out
cmpsl
sub
jle
adc
popf
cmp
ss
out
jecxz
mov
es
stc
mov
aad
jo
xor
lock
push
xor
test
and
int3
sub
lods
shrl
adcb
cmp
cmp
pop
inc
ret
xchg
mov
or
daa
aas
push
cmp
xor
aas
ret
movsl
or
jns
mov
loope
mov
jecxz
or
movsb
ljmp
pop
push
cli
test
testb
mov
stos
test
mov
fmuls
sbb
jbe
fidivs
insl
test
cltd
cmp
xchg
xorb
ret
dec
orl
js
or
mov
xchg
sbb
cmp
cld
xchg
push
js
jnp
adc
test
push
adc
nop
outsb
cmp
pushf
std
push
ss
sub
inc
cmpsl
imul
sub
xchg
cmpsb
pop
mov
xor
xchg
sub
test
leave
sub
pop
insb
in
push
inc
cmpb
push
out
adc
and
arpl
movsl
add
imul
or
sub
and
xchg
jle
push
std
xchg
cmpsb
scas
pushf
sbb
or
ja
movl
in
mov
mov
jle
lret
outsl
lea
cltd
rorb
fnsave
jo
xchg
mov
dec
mov
sub
fwait
out
push
push
popf
cwtl
loope
lcall
jb
mov
jmp
out
push
sti
popa
fwait
sahf
mov
fwait
and
pop
ret
sbb
std
jle
mov
cmp
lock
stos
xor
jecxz
push
cmp
dec
mov
push
mov
push
outsb
imul
sbb
xor
fsubl
test
sbb
shrb
add
inc
cvttps2pi
and
dec
lahf
mov
sbb
jge
stos
rcll
add
push
subl
inc
outsl
imul
adc
outsb
mov
jle,pt
ffreep
icebp
mov
xchg
ret
stos
cli
mov
sbb
push
and
es
cs
cld
mov
jmp
int
scas
test
call
pop
pop
test
xchg
sub
or
mov
aad
xor
out
and
jecxz
cmp
enter
xchg
sarl
nop
loopne
add
cmp
mov
pusha
cli
loop
cmp
mov
mov
xchg
cmp
mov
cmp
btc
inc
and
inc
cmp
dec
enter
inc
mov
insb
bound
push
pusha
test
imul
dec
push
mov
in
shll
icebp
movsb
into
mov
xorb
xchg
push
mov
in
dec
lds
dec
sub
or
outsb
arpl
inc
xchg
sbb
stos
subl
dec
sbb
stos
insb
lcall
ja
pusha
lret
ja
add
pop
jae
push
cmpsl
mov
adc
mov
pop
jne
mov
pop
test
or
test
and
std
mov
xlat
xor
xor
hlt
cmc
xchg
jg
sahf
xor
mov
push
or
out
lock
shlb
pop
or
jne
or
mov
xchg
xor
push
leave
and
add
out
push
repz
sub
pop
cwtl
sub
xor
push
adc
dec
xchg
aam
mov
inc
and
sbb
mov
push
cmc
cli
cld
fnstenv
lock
and
xor
mov
and
xor
test
lock
xor
xor
sub
and
sub
xchg
jmp
lock
xchg
fwait
iret
mov
ficomps
mov
in
and
int
sub
rcll
cmc
mov
cmpsb
jle
or
inc
xor
dec
sub
jl
pop
xorl
mov
xor
inc
fwait
test
movl
fidivrl
xor
xchg
pop
adc
shl
sbb
stc
lea
shlb
hlt
add
mov
icebp
scas
xor
pop
pop
sub
sub
in
and
sbb
jmp
sub
arpl
pusha
sbbl
adc
jp
xchg
mov
mov
out
jae
sub
lret
jl
sub
push
jl
jne
adcb
int3
and
pop
lcall
mov
mov
xor
mov
popa
fildll
mov
movsl
mov
lock
sub
and
movsb
ret
mov
pop
add
push
mov
fnsave
mov
and
pop
ret
adc
jle
cmp
fcompl
push
push
and
test
lcall
pop
mov
decb
enter
mov
mov
popf
mov
leave
movsl
aad
jle
fmul
decb
lret
lret
imul
sbb
jno
xor
adc
adc
sub
and
jecxz
pop
mov
leave
push
xchg
jnp
xchg
test
imul
mov
mov
fwait
jne
addr16
jnp
sub
pop
xor
inc
push
fildl
addb
jge
int
sbb
lods
mov
sub
add
lret
cmp
mov
xchg
xchg
or
cmp
test
call
test
push
adc
jmp
mov
cmp
aas
dec
xchg
push
cmp
inc
and
lods
push
or
out
mov
push
inc
aam
cmp
aad
sub
inc
loope
jmp
imul
lret
jmp
roll
sub
sub
pop
mov
out
push
add
movsl
inc
sub
cmp
jb
mov
sub
test
int3
neg
out
out
in
mov
rorb
sti
cmp
jg
xchg
cmc
stos
sbb
pusha
out
popa
idivb
push
repnz
mov
mov
loopne
loope
cmc
mov
add
in
out
jle
in
std
out
mov
outsl
out
leave
inc
hlt
aad
in
cld
pop
cmp
out
mov
push
dec
adc
add
lret
xchg
rcr
popf
mov
bound
add
mov
clc
in
add
loopne
pop
popl
mov
inc
cwtl
inc
push
dec
std
sbb
mov
cltd
xor
sbb
ret
ss
scas
jae
call
stos
test
mov
dec
add
fsubs
xchg
jnp
in
mov
subb
stos
cmpsl
out
xchg
push
lcall
and
xchg
in
jecxz
jle
test
nop
mov
in
adc
std
in
inc
add
negb
mov
xchg
add
aad
fs
inc
ret
jae
dec
push
leave
xorl
sub
sub
mov
cmp
cmc
ljmp
fdivl
xchg
repz
sarb
shrb
es
ret
cmpsl
out
jg
inc
mov
add
cwtl
sub
hlt
adc
lods
aaa
push
sbb
out
rolb
je
daa
call
jg
or
dec
adc
ja
lds
inc
loop
pop
in
push
mov
das
mov
loopne
mov
jbe
mulb
neg
xchg
push
sbb
ljmp
xor
cmp
xchg
push
jl
out
jo
jnp
push
push
std
xchg
sbb
jne
fsubs
mov
cmp
xchg
push
rcr
js
and
mov
sarl
fbstp
xor
pusha
insl
call
fs
mov
movl
enter
jo
dec
mov
out
cwtl
gs
dec
fwait
adc
repnz
sbb
mov
movsl
push
ja
adc
sbb
xor
pop
pop
jo
mov
mov
stos
push
js
push
shr
mov
cmp
sahf
cmc
sub
inc
dec
push
adc
lret
xchg
call
repz
push
and
popf
xchg
dec
lock
inc
out
iret
sbbl
test
inc
lret
xlat
pop
mov
fiaddl
mov
ficomps
js
mov
sarl
push
les
jle
arpl
aad
push
outsb
mov
add
dec
add
out
lods
pusha
ffree
rcl
sub
aad
enter
jl
sub
push
fnstcw
inc
les
ret
push
mov
or
rclb
push
into
bound
popf
cld
sbb
add
pop
das
lds
dec
mov
enter
inc
lret
mov
loopne
push
test
jl
or
sbb
xchg
cmp
xor
push
dec
pop
pop
jnp
lcall
hlt
jmp
popf
cli
sti
sahf
negl
sub
sti
dec
imul
dec
imul
mov
sub
out
jl
push
inc
add
inc
shl
and
mov
popa
xchg
inc
mov
inc
adc
or
adc
imul
push
adc
adc
roll
popa
xor
pop
xor
aas
push
or
jb
pop
repnz
daa
sub
sbb
dec
ret
push
adc
xlat
aas
enter
mov
je
ror
shl
mov
adc
stc
mov
inc
lock
ret
out
insl
jecxz
adc
orb
movsb
xchg
adc
and
les
scas
or
mov
jecxz
imul
dec
jns
inc
adc
fnstsw
xchg
jl
sub
les
xchg
lahf
push
outsb
andl
daa
flds
jmp
sti
jne
cwtl
mov
cwtl
mov
cmp
movsl
push
aad
clc
and
dec
out
xor
daa
push
negl
out
cmp
or
mov
in
mov
push
icebp
jnp
das
imul
scas
push
xchg
lods
decl
ds
sbb
and
pop
dec
out
lret
dec
jo
jbe
vpsubq
jb
mov
fnstenv
fsubrl
and
push
lods
push
sub
das
in
push
test
and
sahf
int
cmp
shl
xchg
mov
scas
pop
jle
ret
pop
jmp
jecxz
mov
ja
int3
aaa
test
push
xchg
lcall
gs
scas
sub
inc
je
inc
nop
push
out
aad
and
cmpsb
cmc
xor
lcall
xlat
mov
js
sti
sbb
cmpl
aam
inc
dec
je
cli
insl
jmp
cltd
xchg
xor
iret
mov
push
je
jg
pushf
popl
sbb
dec
jp
arpl
jne
inc
inc
jp
sub
mov
ja
outsl
cmp
pushf
in
dec
add
mov
loopne
ds
arpl
out
pop
aas
test
adc
stos
adc
pop
dec
jge
leave
adc
les
add
lret
jno
test
mov
xor
xor
or
sti
imul
xchg
and
fdivl
pop
dec
incl
or
jae
cmp
xchg
push
jae
ss
push
out
cwtl
mov
sbb
outsb
rolb
icebp
xor
add
sub
out
xorl
inc
adc
mov
sbb
fwait
jno
aam
into
xor
mov
inc
sbb
arpl
dec
dec
jl
sub
loopne
cmp
mov
pushf
aaa
adc
add
mov
mov
inc
and
mov
movhps
les
or
mov
rcll
mov
pop
add
xchg
pop
inc
push
ljmp
faddp
shll
in
ds
jno
out
andl
xchg
stc
addr16
xchg
xor
jge
scas
enter
push
bnd
inc
xor
cmpsl
ss
fistpll
dec
roll
push
fists
in
fcomps
imul
add
mov
push
jecxz
and
out
add
inc
jb
pop
fs
push
sarb
mov
cli
jnp
rcll
clc
cmp
inc
push
fimuls
cmp
jp
mov
jne
mov
ja
push
insb
das
push
xchg
and
sahf
fisubl
outsb
adc
gs
jecxz
cmpsb
cmp
insl
push
enter
addl
and
mov
and
jb
mov
arpl
jae
cmp
add
push
rorb
std
in
into
or
mov
xor
sbb
out
add
xchg
fnstsw
inc
mov
cli
flds
out
xchg
push
ljmp
adc
loope
cmpsl
pop
mov
in
and
inc
push
mov
pavgw
mov
test
pop
movsb
pushf
dec
push
sub
lahf
dec
repz
sub
outsl
loopne
fmul
ljmp
xchg
push
fst
call
cmpl
js
lahf
jno
arpl
jb
das
add
mov
movsb
xchg
mov
arpl
adc
jecxz
mov
xor
cmpb
into
rclb
stc
add
xchg
sbb
pop
daa
xor
test
mov
and
pop
dec
ds
test
push
lcall
lods
jbe
adc
xchg
cmp
mov
insl
add
dec
dec
push
clc
cltd
xorl
jl
pusha
sti
ds
cmc
sub
mov
dec
aas
ret
xchg
pusha
dec
lcall
pushf
movsl
jle
push
sahf
daa
cs
xor
jno
into
and
js
cmp
inc
shrl
pop
ret
push
scas
sbb
shlb
dec
cmp
outsl
and
inc
pusha
mov
jo
movsb
sahf
or
inc
sbb
mov
loopne
sbb
xor
jle
shlb
mov
ds
or
lea
cmp
xchg
scas
clc
jns
mov
inc
jmp
pop
pop
and
sbb
out
pop
mov
lods
mov
addr16
xchg
xor
rcl
enter
pusha
test
cmc
xchg
mov
das
mov
push
mov
lods
or
or
icebp
inc
push
fs
adcb
adc
mov
or
iret
aas
das
push
loop
mov
push
js
stos
mov
loop
jle
push
mov
or
xor
adc
in
insb
dec
bound
aad
cmpsb
jecxz
and
jecxz
xchg
push
xchg
mov
jecxz
pop
xor
and
push
fldcw
lea
add
loop
icebp
stc
mov
stc
xchg
gs
mov
push
or
mov
mov
inc
mov
mov
test
aam
cmpsl
ja
outsl
in
mov
mov
or
or
dec
sarb
inc
or
jae
push
cmp
xchg
cwtl
push
loopne
lahf
sub
cmpl
mov
lret
pop
mov
mov
mov
mov
push
hlt
scas
hlt
aad
rcr
or
movsb
aad
enter
pop
ret
rolb
dec
cmc
mov
fnstenv
lcall
rolb
push
sahf
pop
xchg
rcl
lods
xor
scas
add
xchg
es
sub
pop
lahf
rcr
mov
fs
mov
xchg
adc
lret
adc
ds
or
adc
test
arpl
mov
sbb
vprotd
or
rclb
lret
fxch
andb
stos
mov
shlb
lds
xor
loop
jmp
jp
leave
popf
mov
cli
mov
pop
fisttpl
lods
mov
stos
out
std
pop
iret
mov
jle
mov
lds
movsl
std
dec
lods
inc
cmp
fstpl
pop
movsl
incb
inc
and
dec
and
and
push
insl
or
jmp
repnz
outsb
push
mov
or
lcall
or
je
pop
or
push
fcomp
dec
stos
push
dec
or
mov
jle
mov
pop
push
insb
lds
fisttpll
xor
jnp
jge
cltd
test
push
int3
mov
int3
fwait
imul
adcb
mov
lcall
add
or
jns
push
lcall
mov
js
shl
popa
je
imul
push
xlat
addr16
scas
push
push
incl
aam
lcall
pop
dec
dec
adc
test
les
jmp
jb
jnp
or
loop
mov
pop
cmp
mov
add
sahf
movsl
hlt
shlb
mov
xchg
pop
cli
das
mov
js
or
insb
or
pusha
hlt
or
add
jecxz
pop
sbb
imulb
movsb
mov
pop
xchg
mov
push
lods
bound
dec
jae
arpl
sbb
outsb
movsl
and
mov
je
push
shrb
int3
mov
and
mov
in
add
je
inc
or
xor
add
sub
sbb
push
imul
lds
fwait
rcl
das
dec
cs
dec
push
mov
push
inc
loop
das
sbb
in
mov
inc
ds
jno
cli
adc
ljmp
mov
dec
push
das
ficoml
subb
xor
les
cltd
or
dec
sbb
jbe
sbb
dec
cmpsb
mov
pop
fistl
cmc
in
out
add
pop
jg
scas
dec
pop
jmp
ja
les
mov
add
mov
push
sub
jns
jns
push
push
adc
cli
xchg
pop
sub
mov
sbb
and
rcl
mov
or
inc
jae
mov
xchg
test
xor
fs
mov
jp
add
mov
sbb
stos
push
add
xor
push
arpl
sub
mov
imul
mov
fistl
mov
mov
notl
xor
out
fs
and
sarl
xchg
and
dec
xchg
fwait
push
lcall
arpl
mov
fucomip
jne
cwtl
push
sub
inc
rcrb
mov
mov
jae
pop
mov
js
jo
cmp
jo
cs
push
pminsw
dec
aas
lahf
je
rcll
ljmp
and
push
stos
addr16
jo
inc
jmp
jmp
or
imul
push
loope
movsl
lret
cmp
sub
enter
sbb
loopne
enter
cld
les
jns
in
push
test
loop
fstpl
movl
popf
sbb
gs
pop
ljmp
test
popf
push
lock
mov
cltd
clc
xchg
jle
lret
gs
sub
pop
out
mov
adc
xchg
je
enter
mov
push
je
jl
bound
jmp
js
mov
aad
out
inc
push
lods
push
push
ret
int
dec
clc
sti
iret
sub
mov
mov
mov
or
or
ret
push
sbb
dec
enter
fcomip
push
in
inc
mov
adc
push
rdpmc
pop
pmuludq
loope
xchg
pushf
push
in
cmp
int3
or
pop
lret
into
in
mov
pop
mov
inc
cmpsb
adc
mov
call
fstl
dec
cli
ljmp
xchg
jg
and
xchg
mov
fisubs
push
dec
out
sub
rcrb
movsb
nop
or
in
push
loopne
xor
sbb
push
add
jmp
outsl
fidivl
sbb
outsl
adc
or
mov
out
negl
int3
outsb
xchg
push
outsl
mov
mov
mov
data16
adc
stos
push
pop
idiv
xchg
adcl
popa
into
addr16
data16
outsl
lea
aaa
rcr
cld
mov
out
xchg
je
mov
dec
push
adc
cmpsl
outsb
mov
pusha
xor
adc
mov
xchg
bound
inc
sub
je
add
imul
and
inc
xor
cwtl
test
ret
adc
pop
xor
adc
mov
pusha
or
jge
ss
addr16
and
scas
inc
jmp
jb
stos
dec
xlat
cli
adc
pop
xor
call
xchg
lods
bound
ljmp
inc
frstor
xor
addr16
enter
jle
scas
ja
mov
push
imul
fidivs
xor
jnp
fldenv
rcrl
xor
mov
xchg
jb
mov
or
ljmp
imul
fwait
add
lahf
pop
cmp
adc
test
or
inc
fucomp
xor
stos
mov
std
sbb
dec
leave
in
add
bound
stc
mov
mov
add
movsl
fwait
or
ss
test
int3
and
cltd
mov
xlat
jmp
frstor
or
push
ss
jne
push
in
outsb
or
out
cs
and
adc
std
push
insb
cs
std
rorb
jle
sub
ljmp
pop
sbb
pop
gs
xchg
mov
test
sub
add
sbb
dec
aaa
jecxz
pop
push
hlt
scas
sub
mov
pop
loope
in
ret
addr16
adc
subl
sub
xchg
mov
clc
stc
movsb
lods
out
fsubs
inc
fstl
not
adc
mov
aam
push
inc
orb
imul
sub
push
xchg
jo
xchg
mov
stc
std
push
loope
ret
rol
adc
ja
cmp
flds
cld
lds
loope
bound
gs
pop
je
dec
icebp
mov
int3
pop
mov
popa
mov
insb
movl
ret
rcr
outsl
fstps
adc
xor
ljmp
mov
sarl
movsb
cli
adc
mov
sub
lods
jno
mov
jge
scas
mov
xchg
fsubr
xchg
pop
and
gs
fwait
xorl
pop
push
aam
push
aam
cmpb
inc
mov
stos
adc
jb
sub
mov
std
adc
iret
enter
nop
fldt
inc
xchg
jae
ja,pt
push
outsb
lahf
aaa
sub
cmpb
les
out
inc
and
fisubrs
push
out
je
cmpsb
cmp
xchg
ret
mov
pop
ret
mov
shll
cmpsb
pop
int
mov
mov
dec
inc
pop
mov
stos
in
cmp
js
inc
push
out
fs
xchg
stos
sbbb
mov
inc
jp
popa
mov
stc
mov
call
mov
inc
ds
andl
sub
sub
stos
add
push
adc
mov
cs
lods
mov
js
aaa
out
pop
gs
xchg
sub
aam
dec
sbb
mov
jns
inc
inc
xor
aam
je
das
jmp
pop
jecxz
mov
xchg
pop
cmp
cmp
out
mov
pop
sbb
pop
rcrl
dec
les
bts
push
pushf
sbb
std
imul
mov
sbb
dec
lock
xorl
cmp
push
jb
push
inc
jl
ss
ss
push
ret
push
mov
push
xchg
fadds
sti
pop
add
dec
xchg
mov
mov
cmp
mov
inc
repz
fs
lock
orb
pop
clc
lret
mov
jp
loope
mov
mov
hlt
push
sbb
outsb
add
mov
mov
std
sub
cmc
inc
and
and
mov
movsb
fadds
mov
xchg
call
dec
mov
fistpl
enter
and
and
jne
dec
mov
push
divb
cmpsl
pop
lds
pop
daa
inc
pop
sbb
ja
sahf
push
xorb
lock
out
inc
jno
fs
sub
inc
mov
orl
popf
aam
call
outsb
aaa
jg
sarb
mov
fsubrp
sbb
mov
rolb
mov
scas
imul
dec
gs
jp
jno
mov
or
nop
cmpsl
cmp
mov
sub
fiaddl
push
mov
or
mov
ss
enter
xchg
testb
adc
or
out
lea
adc
aaa
adcb
inc
test
cmpsl
call
or
and
fidivl
cmp
mov
test
ja
orl
pop
insl
iret
add
paddsb
stos
lahf
fimuls
sub
pop
push
pop
jns
mov
jns
dec
mov
xor
dec
and
cwtl
addl
and
ja
mov
stos
pop
lds
test
sbb
test
cwtl
in
mov
movsl
add
push
jns
xor
mov
add
and
lret
jle
ljmp
repnz
stos
jg
rcr
mov
imul
insl
shrl
iret
pop
sbb
sub
adc
mov
mov
sbb
gs
jo
loope
fs
jno
xchg
xorb
test
xchg
sub
fidivrl
call
test
ljmp
out
mov
sbb
call
imulb
xchg
jp
out
aaa
dec
pop
in
or
shlb
neg
dec
jbe
xchg
pop
call
push
int
subl
lahf
icebp
pop
and
fldt
jp
mov
lret
test
lods
mov
add
stos
stos
sbb
in
jle
cwtl
inc
ja
mov
add
jo
inc
ja
sbb
cmp
aad
repz
xchg
push
add
push
push
sbbl
push
loopne
insb
and
rcl
push
push
cmpsb
add
jmp
ret
ret
pop
mov
sub
jne
push
ret
add
divl
aad
idivl
aam
push
mov
mov
test
dec
filds
push
and
or
push
movsl
aas
sub
imul
hlt
adc
jmp
inc
in
mov
mov
es
jnp
stos
dec
xchg
subb
cmp
jecxz
stos
lret
popa
push
stos
push
je
jmp
enter
dec
scas
fidivrl
test
and
fstpt
push
rcl
imul
add
jge
movsb
cwtl
mov
xor
mov
mov
rclb
cltd
xchg
bound
sbb
xor
jne
inc
adc
mov
push
aaa
jmp
adc
xchg
imul
scas
inc
jb
cwtl
fstpl
cs
xchg
mov
mov
lods
and
not
addr16
add
cwtl
bound
icebp
mov
movsl
adc
adc
xchg
adc
insl
jo
mov
or
test
push
out
lahf
inc
mov
cltd
fists
xor
xorl
pop
mov
insb
dec
cwtl
lds
jo
mov
stos
jnp
cli
clc
loope
and
int
mov
out
fisubrs
cmp
jg
mov
scas
mov
shlb
sbb
repz
mov
pop
pop
push
cmp
stc
ja
and
pop
push
inc
out
sarb
cmpsl
mov
dec
or
jge
leave
mov
mov
xor
sahf
daa
xorb
sub
mov
arpl
xor
xor
pushf
repz
or
and
cmp
pop
mov
fcmovbe
or
outsb
add
or
jno
xchg
fidivrl
pop
movsl
or
xchg
mov
push
inc
cltd
sbb
mov
int3
out
dec
out
in
shrb
mov
in
cmp
mov
xchg
popa
shlb
or
rorl
cmp
xchg
aam
dec
pop
pop
add
inc
out
dec
pop
mov
add
and
dec
xchg
cmc
test
adc
or
push
and
push
cld
in
or
icebp
adc
ja
data16
mov
nop
push
dec
movsb
mov
push
xchg
in
add
outsl
lret
js
inc
rol
or
aam
push
dec
aad
pop
lds
xor
sbb
mov
cmp
stos
cmp
test
sbb
add
cmpsl
dec
and
out
scas
push
and
push
fcmovu
pop
jae
cmp
pop
dec
aam
sbb
imul
pop
add
fwait
int3
sub
fs
dec
call
hlt
mov
sub
xchg
push
fistps
and
jge
hlt
lret
mov
clc
xlat
ds
repz
test
enter
xorl
pop
scas
rol
in
pop
mov
mov
dec
lcall
out
loop
stos
jno
inc
adc
add
testb
gs
xor
cmp
sahf
lahf
aaa
adc
xlat
aad
sub
mov
addb
daa
jmp
test
push
testl
sub
lea
sub
mul
mov
or
repz
xor
repz
dec
and
add
or
repz
gs
mov
ja
sub
push
fstl
or
aaa
mov
mov
frstor
rclb
inc
xor
sub
leave
fdiv
xchg
aaa
push
dec
pop
pop
mov
int
push
fdivrp
sbbb
fs
cmp
aaa
cmovno
inc
jo
mov
mov
cmp
loop
ret
jmp
fnstcw
rcrb
addl
push
add
out
jle
imul
jecxz
mov
push
jno
and
adc
std
adc
js
fwait
andl
pop
jno
mov
xchg
jns
pusha
jb
cmp
hlt
sub
popf
bound
mov
sbb
mov
mov
loopne
lock
outsl
iret
out
mov
das
rcrl
mov
jnp
or
lods
adc
jecxz
pop
or
push
push
adc
or
repnz
rcrb
repnz
ret
fwait
ss
jo
xor
lock
mov
mov
or
pushf
xor
in
sub
inc
mov
in
shlb
rcrb
sub
xor
or
mov
into
mov
loope
push
in
jg
pop
xor
xor
jno
jge
lods
push
xchg
cld
sub
sbb
popa
adc
cmpsl
lcall
movsl
pop
shll
out
or
cmc
mov
xchg
dec
cltd
fistl
inc
ds
mov
test
ss
je
lds
rcr
mov
and
lods
adcl
push
xchg
scas
and
aaa
jmp
add
pop
js
inc
shrb
stc
mov
loop
out
iret
jns
int3
mov
pusha
mov
mull
mov
inc
popa
mov
dec
mov
pop
xchg
push
dec
arpl
out
dec
fsubs
lods
pop
gs
cld
imull
sahf
fdivl
sub
inc
insl
out
shlb
sub
jmp
push
ja
xchg
int
mov
sahf
lret
jae
inc
mov
addr16
stos
mov
dec
js
and
shrb
and
pop
inc
xlat
pop
xchg
lret
pushf
pop
movsl
xor
mov
and
icebp
dec
sub
push
dec
scas
push
cmp
dec
fs
push
cltd
das
aam
and
sub
adcb
push
mov
lret
into
xchg
bound
pop
data16
fidivrl
cli
dec
pop
ljmp
pop
shll
cli
push
sete
fidivrs
fistl
sub
or
aaa
cmp
pop
scas
dec
mov
inc
mov
cmp
shlb
push
fs
xlat
mov
mov
pop
movsl
xor
xor
xchg
mov
push
std
inc
imulb
jno
rolw
sub
aaa
sti
pop
push
aaa
pop
adc
mov
inc
insb
sbb
mov
adc
or
dec
movmskps
ret
xchg
xor
push
pop
xchg
vrsqrtss
xchg
fistl
mov
lahf
and
pop
push
icebp
jmp
mov
xorb
cli
pop
jmp
jo
rcrb
pop
xchg
sub
les
cmp
inc
bound
pop
cmp
and
js
addr16
sbb
outsb
sahf
sbb
das
push
arpl
dec
add
out
mov
jle
ds
push
dec
jno
imul
jmp
mov
in
mov
xlat
testl
nop
sarb
or
and
cmpsb
ficomps
into
inc
pop
pop
lahf
mov
push
mov
and
dec
sbb
rcr
dec
sbb
out
pop
mov
cmp
inc
and
sub
add
rcrl
movsb
bound
int
pop
pop
cld
adc
in
mov
in
xor
jle
xchg
sar
fs
jb
in
xor
jnp
clc
add
inc
lea
int3
ret
cwtl
leave
push
dec
je
dec
nop
mov
out
ds
pusha
cmp
insb
out
cmp
cmp
inc
pop
mov
xchg
or
mov
fistpl
aaa
scas
adc
or
lods
push
jle
pop
adc
and
int
sub
in
sbb
inc
inc
jp
inc
pop
jae
cld
adc
call
xor
lods
sub
push
push
add
loope
in
push
lods
mov
sub
adc
scas
push
and
fcompl
and
ror
scas
dec
test
sub
repz
out
xchg
idivl
in
sub
jno
sbb
xchg
test
hlt
fstpt
lods
fmul
dec
xchg
cmpsb
pop
imul
pop
call
mov
aam
arpl
pop
daa
ljmp
adcb
in
in
ds
outsb
mov
ficomps
mov
mov
out
enter
pop
cs
push
xor
cwtl
mov
loope
mov
jno
push
pop
daa
push
add
es
dec
push
fstl
cmp
daa
jnp
jecxz
and
cli
dec
mov
sahf
into
icebp
es
aaa
xor
dec
repz
mov
push
gs
icebp
xchg
and
std
inc
sub
loop
sbb
push
popa
addb
std
aam
cmp
pop
adc
dec
xchg
mov
adc
and
and
pop
xchg
lahf
dec
popa
in
fbld
xlat
jle
xlat
fnstenv
sahf
sbb
jns
mov
nop
mov
ss
inc
cmp
mov
add
or
hlt
inc
fldcw
pop
xor
sub
dec
dec
out
add
rclb
imul
jae
leave
cmpsl
notb
stos
js
ret
inc
cmp
or
jmp
xor
call
add
icebp
sahf
sub
mov
les
xor
lret
dec
mov
pop
jo
push
pop
lcall
jns
aad
into
mov
stos
pop
mov
jmp
inc
mov
pushf
and
aaa
adc
jae
mov
das
mov
andl
cs
xchg
cmp
clc
fdivrs
mov
and
shl
jge
popf
insb
loop
test
or
add
mov
jp
lcall
ds
cmp
xor
dec
cmp
fstps
cmc
push
adc
outsb
sub
or
enter
pop
jns
xchg
dec
push
mov
dec
test
hlt
in
cmp
ret
scas
ret
dec
xor
inc
aad
rorl
pop
lods
mov
flds
push
lods
and
rorl
pop
shrl
add
mov
popf
pop
les
sub
cld
pop
push
add
mov
jle
jmp
pop
inc
xchg
xchg
das
imul
jbe
insl
les
adc
repnz
mov
mov
mov
pop
sub
rcrl
dec
xchg
cld
lahf
rolb
data16
dec
jl
aam
ret
test
nop
and
jg
inc
jecxz
in
inc
mov
jp
icebp
pop
test
add
mov
aas
dec
inc
xchg
leave
jns
dec
outsl
in
sub
cmpsl
inc
inc
ja
inc
in
sub
test
stos
xchg
jecxz
adc
mov
mov
test
test
jg
leave
pop
sbb
out
movsb
or
push
loop
lret
fsubr
pop
pop
int
pop
test
mov
and
and
sub
mov
and
cltd
fcoml
xchg
aas
addr16
mov
outsb
in
das
inc
adc
sub
mov
cld
mov
or
dec
mov
mov
into
adc
gs
sbb
loop
adcl
lret
push
sub
cmp
mov
jg
cmpsb
add
stos
ret
test
stos
push
daa
dec
adc
lea
jbe
enter
or
jg
fcom
iret
call
push
scas
push
shlb
pushf
dec
aam
imul
icebp
adc
cld
mov
and
pop
out
loop
ds
repz
popa
lods
shrl
jne
cmp
mov
xchg
jne
movsb
popa
mov
addr16
dec
lds
pop
adc
lock
cmp
loop
js
imul
fwait
clc
cmpb
xor
or
adc
sarl
pop
loopne
adc
cld
out
mov
notb
mov
loope
test
jecxz
pop
dec
jne
sub
sub
push
std
mov
cmp
sub
mov
mov
rcr
inc
sub
sub
cmp
jbe
sahf
mulb
fwait
cmp
imul
test
mov
adc
mov
mov
jl
xchg
and
mov
push
pop
ja
out
int3
push
mov
int
int3
stos
mov
pop
cmp
mov
or
lds
sti
cmp
inc
push
dec
mov
shrb
aas
icebp
cmp
sub
aad
or
fwait
cmp
jmp
pop
pop
bound
imulb
lock
adc
je
js
cmp
imul
popf
push
xchg
add
test
lcall
fbld
insl
and
adc
xchg
sub
cmc
xor
data16
xchg
mov
xor
or
xchg
push
test
xchg
pop
mov
fmul
add
mov
pop
addr16
je
inc
lds
pop
int3
stc
mov
movsb
data16
js
sbb
cmpsb
aaa
es
sbb
scas
mov
sbb
sbb
push
cvttps2pi
ficompl
je
push
inc
dec
push
mov
adc
bound
mov
ret
pusha
jmp
add
jbe
cli
mov
push
jb
jp
popw
sbb
inc
loope
je
inc
fmul
movsb
xchg
push
dec
aaa
in
loopne
sti
cmp
out
bound
test
insl
fs
cwtl
or
xor
mov
jb
pop
or
cmp
js
push
dec
xchg
and
mov
aad
push
repnz
and
add
and
in
sub
inc
and
dec
and
sbb
movsl
stos
aam
cmp
xchg
xor
push
mov
lock
sbb
daa
sbb
xor
loop
scas
and
mov
xor
or
scas
pop
cmpb
mov
jecxz
sahf
clc
lods
aaa
mov
testl
shlb
pop
xor
lock
xor
xor
clc
insl
into
pushf
cld
and
arpl
adc
push
ljmp
in
ret
jle
or
xor
in
mov
rcl
cmp
sub
pop
push
and
inc
push
mov
jle
mov
jp
lea
mov
xchg
loope
or
popl
andl
xlat
sbb
test
or
adc
jmp
jno
push
jmp
fs
push
jb
push
sahf
add
in
addb
js
lods
fstenv
pop
test
mov
sahf
dec
add
sti
fsubr
mov
rcr
cli
and
xchg
mov
lret
push
mov
cmp
and
lret
xor
stos
add
or
rep
inc
popf
adc
jg
mov
adc
enter
xchg
stc
xor
daa
shll
in
xchg
sar
or
insb
lret
sti
push
pop
fadd
cmp
pop
add
mov
add
push
push
adc
aam
jle
mov
mov
adc
add
or
sub
pop
mov
mov
sub
fmulp
mov
pop
roll
cwtl
pop
xlat
adc
cmp
aaa
or
pop
fadds
pusha
or
pusha
xor
sub
adc
fwait
out
mov
addr16
adc
xchg
sar
fwait
inc
fldcw
push
jmp
mov
fcmovnb
in
mov
icebp
das
xor
sub
push
xor
jno
sub
sahf
inc
arpl
pop
stos
sub
insb
mov
jno
dec
pop
jp
idivl
xlat
aam
fisttpl
pop
ret
orl
inc
sub
pop
xchg
je
mov
shrl
xchg
push
jmp
add
push
xor
daa
daa
xchg
in
lcall
mov
inc
in
inc
incb
xor
xchg
movsl
iret
scas
cmp
imul
inc
dec
xor
jb
xlat
mov
popf
aad
std
push
inc
int3
pop
mov
in
fsts
pushf
mov
inc
pop
neg
and
jo
inc
mov
clc
xchg
mov
push
roll
and
inc
lods
jo
and
jo
or
rcl
pop
cmp
dec
jo
xchg
cli
adc
and
popa
rcr
clc
aad
test
into
adc
leave
stos
jl
mov
or
sub
sbb
out
mov
je
rol
aaa
iret
xor
mov
push
stos
test
xor
pop
xor
xchg
arpl
or
rclb
fsubrp
sbb
dec
push
add
push
cltd
and
daa
cli
testl
sub
out
cltd
js
aas
push
cmpsb
push
inc
fs
lds
mov
mov
xchg
xor
std
fldenv
xchg
sarl
mov
lret
in
idivb
push
lcall
add
add
mov
lret
cmp
xchg
lods
sub
cmp
addr16
aaa
mov
inc
icebp
pop
aaa
sub
xchg
fmull
mov
insb
sbb
jns
and
ja
xchg
mov
xchg
test
mov
xor
stos
loopne
cmp
arpl
sub
ds
and
enter
pop
jecxz
mov
cmpsl
jg
stos
mov
pop
or
jns
testl
lock
pusha
mov
fwait
sbb
mov
xchg
cmpl
pushf
sahf
mov
mov
adc
or
dec
scas
sbb
mov
jae
les
xchg
andb
pop
cmp
cs
pusha
and
popl
shrb
in
xchg
cmpsb
inc
and
sub
push
cmc
jg
cld
repz
sarb
ss
stos
xlat
pop
mov
cmpsl
cmp
pushf
jns
testb
jle
mov
pop
dec
addr16
xchg
ja
dec
pop
lahf
call
mov
sbb
dec
loopne
mov
dec
jbe
pusha
jecxz
nop
push
cmpsl
daa
cmp
pop
icebp
add
push
sub
mov
sub
add
xor
xor
adcl
sbbl
mov
test
loope
stos
insb
and
pop
push
jns
sub
mov
sarl
add
xchg
or
data16
daa
das
cmp
loope
dec
aad
pop
jnp
dec
addr16
int3
test
cwtl
xor
jbe
lods
stc
loop
in
hlt
cmp
xor
mov
jle
and
into
clc
jne
loop
adc
mov
fwait
cmp
pop
loopne
push
in
adc
sub
lret
es
mull
sub
mov
test
xor
sbb
push
jge
leave
leave
shlb
push
cmp
mov
jnp
sarl
add
xor
adc
jecxz
dec
mov
xor
std
or
cli
test
lock
call
or
dec
jo
sub
jmp
inc
sbb
loopne
sub
ret
adc
mov
mov
xor
adc
rclb
cmp
push
fs
sub
xchg
enter
pop
cmp
call
lods
ljmp
mov
movsl
cmp
sbb
fistpl
les
cli
push
push
paddsw
enter
xor
es
cmp
in
and
insl
inc
repz
or
mov
mov
call
or
mov
je
pop
mov
xchg
mov
pop
dec
sub
xchg
fstpt
leave
xor
lds
mov
into
mov
out
fildl
mov
cs
test
in
or
nop
adc
fistps
leave
cli
xchg
test
cld
push
jge
iret
xchg
push
lea
roll
call
dec
shll
imul
jle
std
popa
outsb
cltd
insb
mov
rcrb
sub
loope
aaa
jne
push
pop
mov
jno
pop
clc
subb
or
push
dec
xchg
jmp
xchg
pop
jmp
and
adc
ret
mov
mov
or
lahf
adc
rolb
push
test
or
rcrb
je
cmp
mov
mov
lea
mov
jb
mov
jg
pop
enter
sarb
arpl
adc
ss
mov
mov
ja
je
ret
pusha
repz
std
sub
subb
das
mov
aas
stos
sti
ret
mov
cmp
insl
mov
cs
outsb
out
inc
and
dec
imul
pop
or
sti
aaa
mov
pop
sbb
inc
and
sbb
push
incb
push
out
push
out
jge
clc
inc
scas
xchg
in
jecxz
stos
push
mov
mov
lahf
mov
sbb
add
cmpsl
pop
or
pop
mov
mov
adc
lods
cmpsl
loope
dec
movsb
sub
mov
jno
xor
cwtl
xchg
mov
insl
and
nop
or
and
dec
push
mov
and
cmp
cmpsb
dec
ljmp
shll
in
push
arpl
add
jge
add
xlat
mov
ret
mov
aam
adc
outsb
cmp
into
push
bts
jle
sub
das
lods
dec
jmp
adc
shll
test
xchg
lods
push
bound
mov
xchg
repz
aad
jne
mov
push
nop
mov
mov
jge
adc
decl
cmp
lret
cld
ja
sbb
dec
sbb
pop
cmc
outsl
jne
add
xor
stc
jl
jbe
fnstsw
cmpsb
inc
stc
dec
sub
xlat
fstpl
lock
inc
lahf
out
xor
mov
mov
repz
call
mov
jmp
out
scas
cwtl
mov
mov
cmp
xchg
gs
xchg
aad
adc
imul
adc
leave
mov
imulb
xor
ret
mov
or
js
lahf
mov
xchg
mov
mov
xor
xchg
xlat
mov
icebp
jmp
sub
sbb
jnp
pop
push
imul
icebp
mov
push
imulb
mov
or
or
push
cltd
cmp
jo
or
loop
push
int
gs
sub
shll
dec
shll
popa
adc
sub
shlb
mov
iret
les
push
pop
ret
push
xor
push
xchg
sub
mov
mov
jl
div
sarl
xchg
or
out
adc
in
scas
sbb
dec
imul
pop
mov
dec
push
push
imul
cld
test
stos
pop
inc
add
cmp
sbb
idivb
dec
sub
outsl
into
sbb
addr16
pop
imul
aam
dec
and
mov
iret
cmpsl
cltd
in
sub
sub
pop
test
shl
cltd
dec
pushl
movl
imul
mov
clc
arpl
and
out
push
xor
mov
sub
js
cmc
jg
mov
out
sub
jp
add
dec
jp
fs
inc
arpl
pop
adc
xchg
pop
jecxz
push
cmp
push
cmp
fwait
sbbb
add
div
cmp
outsl
dec
pop
jo
jno
xorl
cmpb
ss
adc
es
push
seto
repz
and
xor
addr16
push
sbb
mov
fs
js
xchg
xor
lock
int
adc
imul
mov
call
fstpl
or
test
mov
int3
fldenv
ja
mov
mov
inc
rcr
rorl
call
shlb
jbe
clc
nop
adc
in
out
xor
out
push
mov
pop
pop
leave
je
mov
bt
and
cmpsl
int3
inc
sti
push
sbb
aas
sbb
into
push
cwtl
lea
rclb
ret
dec
outsb
fisubs
dec
add
jbe
dec
adc
mov
dec
iret
testl
xchg
add
xchg
fwait
pusha
rolb
imul
rolb
jge
mov
add
xor
mov
jle
test
test
testl
ss
cmp
push
nop
and
xchg
and
cmpsb
cltd
mov
jl
nop
mov
sub
xor
rcrb
and
stc
jp
out
jl
sbb
mov
stos
cmp
jle
pop
enter
insl
mov
mov
test
enter
sbb
dec
mov
jg
pop
inc
fincstp
and
push
lds
adc
call
add
loope
cmp
in
mov
fs
push
push
xor
add
jle
ja
out
fcompl
test
pushf
in
repz
in
add
call
push
ljmp
repnz
mov
cmpsl
movsb
xchg
ljmp
cmp
movsl
cltd
cmc
cltd
loop
pop
pop
jp
sbb
mov
mov
cwtl
pop
mov
mov
adc
roll
pop
sarl
mov
fwait
lahf
cltd
sti
loop
pop
faddp
pop
and
mov
push
jg
and
test
es
lret
cmc
cmp
xor
mov
insl
jg
out
outsb
jo
jmp
hlt
inc
push
sub
loop
and
push
or
andb
insb
sub
inc
and
fbld
lds
lret
ja
aas
xor
ret
rorl
andb
cmp
daa
xchg
imul
out
mov
xor
popa
push
push
sbb
outsl
out
adc
xchg
mov
pop
ret
add
addr16
cmp
aaa
inc
lret
adc
repz
sahf
inc
test
rorb
mov
je
lret
pop
xor
mov
sbb
push
jbe
push
mov
test
cmp
cmp
pop
sti
inc
lret
or
pusha
dec
rorb
add
dec
inc
movsl
scas
xor
add
add
iret
cmp
jl
inc
pop
and
fstpt
push
or
fstl
es
lods
lds
xor
xchg
jmp
int3
call
push
mov
adc
xchg
lock
cmpsl
push
mov
fucomip
in
dec
and
cld
mov
xor
or
adc
push
sub
insl
ret
xchg
rorb
inc
cmpsl
out
cmp
adc
int
xor
jmp
es
sbb
jge
into
insl
mov
sub
fnsave
es
test
test
pop
pusha
jno
rorl
pop
inc
aad
or
in
dec
mov
into
lods
jmp
jbe
push
out
outsw
and
cmp
sbb
or
fnsave
xchg
cli
les
cmp
mov
pop
sub
mov
into
push
dec
gs
das
inc
jbe
call
inc
xchg
daa
mov
inc
cmp
rolb
mov
clc
jns
popf
push
icebp
or
ss
inc
in
mov
loope
leave
hlt
insl
fwait
stc
std
inc
je
clc
cs
push
test
jne
test
jo
int3
push
xchg
test
iret
or
sub
add
rclb
mov
enter
dec
js
addr16
lret
jae
mov
jp
inc
pop
jmp
lds
hlt
iret
hlt
mov
lcall
aam
jmp
inc
and
lret
pop
aas
arpl
fldt
xchg
bound
xor
xor
hlt
xor
jl
pop
mov
xor
pop
enter
mov
adc
push
scas
push
jb
addr16
inc
fsubrs
dec
cmc
lods
pop
pop
idivl
push
mov
dec
mov
rolb
xor
mov
mov
sbb
inc
inc
gs
xchg
mov
out
cwtl
outsb
bound
js
out
addr16
lds
mov
leave
repz
jno
call
xchg
ljmp
rcrb
jne
xchg
sbb
dec
lea
pop
pop
fisubrs
xchg
mov
cmpsb
mov
inc
add
cmc
xchg
in
jne
test
adc
mov
stos
aad
push
sub
mov
test
loope
push
add
sti
lods
cli
fstl
loop
gs
fdivr
pop
dec
movsl
jge
jmp
push
xlat
xchg
and
mov
or
rorb
xor
shrb
adcb
pop
aas
insl
mov
adc
stc
jp,pn
in
and
sbb
jmp
fstpl
fdivl
jp
mov
adc
in
mov
shlb
aam
cmc
aas
or
shrl
insl
and
pop
shlb
sub
loope
sbb
mov
pop
mov
push
imul
xor
and
sub
sub
mov
sub
pushf
mov
iret
fiaddl
loop
int
ret
ja
jae
sub
xor
movsb
mov
mov
cs
jns
repz
rolb
xor
push
pop
stos
inc
js
adc
leave
lea
jne
push
in
cld
sub
lea
ss
add
in
xor
pop
icebp
imul
loopne
jns
outsl
pop
sahf
jno
cmp
jne
cmpsl
femms
mov
adcl
sahf
in
push
je
add
cmp
inc
dec
mov
xchg
jg
adc
cwtl
push
xor
inc
jg
clc
pop
push
pop
add
inc
test
dec
mov
jle
xor
adc
push
inc
and
or
xchg
mov
add
les
inc
and
pop
mov
js
lods
add
inc
cli
cmp
sbb
lret
rcrl
mov
pusha
in
xlat
cmp
inc
xchg
or
sbb
bound
add
loopne
xor
out
jg
push
push
mov
imulb
repnz
xor
mov
push
gs
xor
clc
sbb
pushf
adc
rcll
mov
push
scas
adc
mov
ss
push
pop
push
pop
add
xchg
insb
sub
fsubrp
out
or
test
mov
pop
mov
sub
sbb
stos
jg
testb
je
in
xlat
ja
lret
jae
lods
jle
aad
lret
pushf
or
xchg
and
mull
nop
xchg
adc
dec
mov
out
push
mov
mov
jl
addb
lret
imul
sbb
enter
enter
das
and
out
pop
pop
and
add
ljmp
mov
adc
inc
rolb
mov
dec
in
push
andl
cltd
push
mov
addr16
in
xor
pop
jmp
xchg
ret
je
dec
pop
sub
mov
xchg
test
xchg
sub
jl
insb
loop
movsl
add
add
repz
jns
rcll
lahf
push
jb
fcomps
mull
insb
ljmp
cmpsl
sub
sahf
push
mov
inc
xchg
jecxz,pt
daa
mov
mov
mov
ficoms
adc
xchg
or
jmp
stos
lea
fs
outsl
std
lods
js
cmp
cmp
add
mov
xchg
pop
jl
mov
cmpsl
push
and
neg
or
iret
cli
jl
jno
add
outsl
mov
jne
mov
adc
inc
xchg
faddl
popf
int
inc
ss
jns
jmp
sbb
cli
and
test
repz
xchg
in
adc
adc
push
xchg
leave
sbb
adc
pusha
and
lods
js
insl
cmc
fcmovbe
xchg
or
dec
das
mov
xor
stc
aas
dec
test
mov
les
out
loope
pop
clc
insb
adc
and
jae
nop
cmp
out
sbb
push
mov
fwait
sbb
negl
lret
mov
ret
out
jnp
loope
out
fisttpl
dec
cli
mov
ljmp
in
ja
dec
pop
test
shrd
ds
inc
sarl
jg
push
notb
scas
mov
stos
sbb
call
fisubs
mov
pop
cmc
dec
xchg
mov
pop
sub
bound
xor
mov
jge
xor
jg
int
push
sahf
jno
jle
les
aaa
pop
mov
repz
ss
pop
sbb
lea
lods
pushf
lock
cs
cmc
xchg
cmp
add
pop
sbbl
into
je
jecxz
cmp
into
sbbb
int3
mov
cmpsl
pop
inc
add
test
xchg
cmp
leave
sbb
fnsave
popa
mov
fadd
mov
and
push
or
inc
xor
xor
test
jo
loop
daa
outsl
ret
dec
stos
filds
sbb
cmp
stos
pop
loope
adc
gs
mov
add
test
ret
cmp
jmp
test
orb
in
cmp
add
xchg
stos
xchg
xchg
enter
js
and
mov
in
xor
lcall
adcl
aad
inc
fldenv
ret
aam
imul
jl
xor
cltd
xor
xor
xchg
push
imul
cmp
push
repz
inc
jle
cli
jmp
pop
mov
std
mov
andb
popf
std
int
sub
scas
xor
cs
and
test
cmc
das
xchg
loop
cmp
stos
iret
or
push
cmp
cld
mov
fisubl
jbe
sbb
push
push
loope
movsb
aam
sahf
aas
std
mov
cmp
pop
fstp
xchg
out
cmpsl
adc
cwtl
mov
repnz
jae
test
je
movsl
xor
outsb
adc
leave
icebp
jo
rorb
jne
mov
dec
xchg
rorl
inc
std
sub
lods
test
or
pop
cld
in
addr16
xchg
rorb
sbb
mov
pop
ret
insl
pushf
adc
jle
adc
daa
cmc
cmp
pop
mov
mov
shrl
addr16
mov
xor
or
je
stos
mov
push
xchg
xchg
adc
xor
cmp
jnp
or
sub
pushf
pop
dec
mov
pop
inc
add
jnp
in
pushf
and
xchg
movsl
jmp
or
syscall
jo
mov
inc
cmp
in
fildl
fstps
sbb
jae
ja
sbb
mov
xchg
shll
inc
pop
sbb
adc
xor
and
mov
ss
and
bound
subb
popa
and
dec
notl
ret
jnp
dec
dec
dec
pop
sub
test
ficoml
jb
pop
xor
jg
insb
inc
fldt
fdivs
into
push
mov
pop
ds
cld
test
in
pop
movl
sarb
jmp
mov
adc
cmp
sbb
cmp
repnz
jno
add
scas
repnz
pop
cmp
or
lods
mov
arpl
mov
mov
in
arpl
test
and
adc
je
sub
sbb
jecxz
movsl
jno
or
leave
out
jns
shlb
in
or
push
cmpsl
sbb
xchg
inc
fldl
inc
inc
add
incb
and
icebp
xchg
jmp
lret
and
mov
call
je
hlt
dec
les
aaa
jge
adc
inc
leave
nop
pop
jp
and
ret
sub
aas
ffree
sbb
nop
mov
loope
popf
jmp
adc
push
push
xor
outsl
leave
lock
shrb
jno
inc
xchg
push
les
int3
jle
ret
in
add
mov
fldenv
mov
sbb
jmp
xchg
in
sahf
vmovsd
mov
fisubrl
outsb
add
outsl
notl
pusha
pop
push
lcall
mov
rcrl
add
inc
out
adc
mov
sbb
sbb
sbb
jns
out
sub
cmc
add
jb
hlt
mov
jmp
loop
in
fs
mov
loope
in
cmpsl
popa
mov
aad
sub
dec
rcrb
lock
xchg
push
hlt
aad
pusha
testl
push
sub
lret
push
lret
test
fwait
push
in
outsb
pushf
dec
inc
aam
mov
pusha
add
cmp
add
push
mov
ljmp
mov
inc
fdivs
or
lret
cs
stos
ljmp
mov
test
into
out
mov
xor
mov
inc
leave
jmp
xor
sub
repz
fdivp
xchg
or
aad
push
ret
roll
cmp
cs
data16
cmp
outsl
and
mov
movlps
enter
ret
aam
loope
int
loopne
loope
mov
dec
xlat
stos
cmp
push
and
sub
jg
xor
mov
imul
cmp
jge
rcrl
mov
mov
lds
sub
icebp
mov
aad
fistps
sub
test
dec
leave
insl
jecxz
and
or
cwtl
das
frndint
aas
xchg
and
decb
nop
leave
or
xor
xchg
jbe
jp
sbb
add
fwait
mov
push
mov
or
or
loope
and
divb
lea
pop
inc
mov
ljmp
or
inc
inc
xchg
imul
int
aam
stos
leave
sub
fmuls
push
ret
sti
adc
cli
test
ret
push
aad
stc
imul
shll
iret
jbe
fstpl
fsubs
xchg
mov
loop
or
in
dec
pop
mov
pop
sbb
nop
popa
inc
cmpsb
cmc
stc
mov
out
cmpsb
dec
int
inc
jne
cmp
lcall
outsb
mov
lea
jb
lds
in
nop
mov
mov
lret
test
in
data16
popf
iret
inc
jge
mov
ja
or
or
js
lcall
or
xor
lea
push
mov
and
push
cmpsb
adc
into
inc
xchg
outsb
es
xchg
pop
jmp
inc
cmp
adc
adc
stos
fldl
or
mov
aas
inc
popf
inc
fisttps
adc
popw
addb
andl
add
or
xor
push
orl
dec
adc
mov
in
ss
imul
pop
shl
mov
jb
cltd
clc
or
cmc
and
add
cmp
xchg
cmc
sbb
jl
xor
int3
mov
or
xchg
mov
pop
mov
out
push
test
inc
push
jg
lahf
cmp
mov
jp
clc
test
fisubrl
xlat
add
add
sub
outsl
jns
dec
jecxz
pop
ficoms
lods
mov
adc
out
popa
cli
adc
jl
mov
sbb
jno
push
pushf
jae
pop
mov
xchg
push
mov
cmp
cmc
mov
repz
fwait
loop
movsb
dec
xor
mov
cmp
mov
lock
mov
int3
sub
add
fcmovne
xchg
jecxz
mov
les
pop
std
out
xchg
xchg
xchg
lods
popf
xchg
or
xchg
dec
arpl
xchg
mov
lahf
add
mov
test
bound
push
scas
lods
fbstp
repz
xor
mov
jmp
stos
cmpsl
imul
and
out
xlat
pop
je
fucomip
aam
ficoml
mov
mull
movsb
rcrb
daa
testb
ljmp
mov
inc
sub
dec
je
imul
pushf
mov
aam
and
lods
mov
or
inc
iret
jg
adc
enter
into
inc
mov
cmp
lods
sub
repz
cmp
mov
push
mov
lods
clc
pop
xor
scas
xchg
jg
int
cmp
popf
aas
out
nop
das
setnp
iret
xor
and
repz
test
scas
inc
mov
popf
add
pop
push
cmp
mov
lock
les
pop
shll
add
loop
ja
mov
mov
xor
les
push
scas
cld
pop
mov
mov
and
push
mov
mov
loop
adc
mov
jmp
adc
addr16
sub
add
mov
nop
push
lock
sbb
ss
imul
out
xchg
inc
out
cmp
loope
xor
mov
clc
fsubr
push
mov
jbe
lods
imul
adc
ret
clc
mov
push
je
lret
in
outsl
fists
pop
push
mov
sbb
cwtl
ljmp
fcoml
mov
pusha
popa
and
xchg
pusha
ror
pusha
inc
mov
stos
fdivs
stos
outsl
gs
cmp
pop
mov
nop
pop
jb
jle
and
sub
pusha
mov
or
cmp
mov
popa
out
test
scas
mov
mov
lcall
insl
mov
pusha
sbb
pop
jno
dec
clc
imul
jno
test
cmp
jae
add
fadd
fists
push
inc
mov
stos
fimuls
sub
sbb
bound
mov
mov
cmc
xchg
mov
or
sar
dec
jbe
mov
inc
cld
jo
mov
fxch
xchg
lods
inc
xchg
scas
imul
push
je
out
adc
xor
cmp
push
inc
mov
daa
inc
mov
addr16
fisttpll
jbe
fidivrs
ljmp
repnz
nop
mov
push
stos
add
stos
xor
lahf
mov
fcomps
je
fiaddl
leave
cmpsb
xchg
cmp
xchg
pop
mov
xchg
loop
jle
mov
push
loop
inc
sbb
jns
and
and
loope
out
lret
repz
xchg
mov
lds
inc
jae
sbb
enter
repnz
rorl
popa
movsb
insb
lcall
mov
sbb
lods
mov
cmp
repz
sub
mov
lret
cwtl
mov
lret
add
mov
fimull
js
sub
in
bound
jecxz
in
mov
fs
and
shll
inc
xchg
xchg
push
xor
xchg
mov
mov
test
mov
rcrb
xchg
pop
dec
mov
out
scas
dec
fsubrl
sbb
fidivl
mov
ja
rcr
fwait
std
addr16
sbb
jb
arpl
mov
dec
shll
push
sbb
inc
jo,pn
lea
sbb
dec
or
in
std
adc
pop
pop
sub
cli
lds
test
rcrl
mov
ljmp
mov
inc
adc
inc
pop
push
and
jmp
ret
mov
js
lret
cmp
test
and
dec
andl
movsb
adc
lret
xchg
aad
sbb
hlt
fcomps
inc
pushf
adc
dec
test
fdivrl
call
adc
cmc
jl
aaa
out
ret
imul
jmp
sti
mov
test
inc
sbbl
pusha
xor
lahf
xlat
xchg
out
push
and
repz
call
sub
in
sbb
inc
popa
loope
fldcw
shl
cmpl
or
ret
hlt
add
sbb
xchg
pop
xor
js
xchg
jl
cmpsb
xchg
in
sbb
cmp
pop
inc
loope
gs
or
lahf
pushf
jno
stos
in
cmp
xor
lods
in
mov
repnz
repz
orb
ja
push
neg
mov
cmp
ja
dec
popa
ds
pop
fildll
or
jb
popf
push
or
xchg
cmp
jmp
inc
into
add
mov
push
xchg
xor
push
mov
outsb
sbb
dec
xor
jmp
mov
mov
fldcw
icebp
xchg
fwait
xor
pop
inc
cmp
bound
test
outsb
mov
shr
mov
cmovge
mov
mov
or
push
and
jae
xor
bound
fistps
jl
mov
stc
out
ret
les
cs
push
or
push
xchg
cli
mov
jp
enter
jb
push
pop
mov
in
pop
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
test
test
add
std
xor
push
imul
imul
mov
sahf
mov
xchg
jbe
or
add
push
dec
pop
cmc
inc
loop
test
lods
pusha
pushf
xchg
pop
rorl
cli
jb,pt
call
scas
or
jl
ret
or
bound
mov
shlb
add
jl
push
or
lds
test
addl
xchg
mov
inc
cli
es
repz
pop
out
popa
into
mov
mov
fnsave
or
dec
aad
aas
lock
mov
add
push
adc
out
icebp
lock
or
test
inc
mov
nop
pop
xchg
mov
xchg
add
inc
stos
pushf
mov
aaa
popa
or
dec
lods
jbe
pop
negb
xor
outsl
jbe
jl
mov
sahf
mov
das
jl
outsl
and
sub
xor
push
std
jbe
xorl
mov
adcb
bound
cmp
arpl
mov
inc
jb
push
cmp
push
cli
pusha
stos
sbb
cmp
sbb
aam
int
adc
add
mov
jmp
xor
sub
push
mov
jno
test
push
adc
sbb
pop
jbe
das
loope
adc
jmp
cmpb
imul
xchg
ljmp
push
xchg
pop
in
imul
test
sub
push
inc
push
mov
jno
repz
xchg
inc
fiadds
lods
js
xlat
insl
dec
and
dec
lea
xor
jp
push
xor
push
pop
ss
sbb
jbe
neg
jno
xchg
pop
fs
dec
jge
test
or
sti
out
cli
pop
dec
sahf
pop
dec
mov
notl
xor
or
pop
pop
dec
xchg
std
sbbb
mov
fisubrl
sub
pop
mov
push
pusha
sub
in
add
inc
sti
fildl
jno
cwtl
pop
sbb
hlt
ds
movsb
and
leave
or
sbb
xchg
lock
movsb
shll
shrb
aad
cmpsb
pop
scas
lahf
jmp
xchg
rorl
rcll
movsl
adc
pop
jns
inc
sti
inc
pop
addr16
addb
jb
mov
pop
sbb
aaa
adc
pop
mov
jge
jg
mov
add
sbb
ds
pop
adc
int
jno
popa
pop
xchg
push
xlat
mov
inc
repz
addr16
dec
aad
push
cmpsl
mov
sub
mov
adc
pop
outsl
pop
jno
xchg
cmpsl
test
pop
and
sub
fsubrl
fsubrs
inc
and
cmp
push
pop
rcrb
cmp
insb
jb
or
mov
sub
jecxz
je
and
fsubs
pop
scas
or
daa
xchg
jmp
jg
iret
mov
fisttpl
xchg
and
data16
cmp
loopne
jbe
popa
dec
lods
fdivs
sti
pop
dec
mov
mov
test
cmp
out
inc
mov
paddusb
lock
push
stos
inc
pop
mov
xor
sub
jnp
xor
pop
xchg
sbbb
or
les
sbb
in
push
cmpsb
mov
leave
cmp
pop
test
jnp
imul
aaa
sti
repnz
ficompl
data16
sbb
cmp
enter
rcrb
inc
gs
or
fstps
or
mov
cmp
add
pop
pop
popf
enter
sahf
mov
imul
dec
rolb
dec
mov
sahf
mov
push
nop
and
push
outsl
inc
jae
outsb
cmp
iret
mov
pop
xlat
jecxz
pusha
mov
pushf
xchg
cmp
cmpsb
mov
lcall
insl
and
mov
call
adc
or
lea
xchg
mov
subl
das
inc
es
pop
mov
leave
add
popf
mov
je
out
mov
rcll
sub
pusha
addr16
mov
pusha
ja
pop
mov
pop
aad
sbb
test
dec
test
shll
push
push
xchg
mov
ret
in
cmp
mov
jle
xor
aad
push
cs
and
imul
fstpl
xor
ja
pop
jp
mov
sbb
pushf
cmp
pop
or
aas
insb
ja
adc
repz
test
stos
pop
inc
cmp
inc
iret
call
fsubr
inc
mov
mov
xor
and
leave
fsts
jae
out
cli
sbb
dec
iret
mov
and
sub
aaa
sti
rorb
pop
mov
ja
test
lret
dec
mov
sbb
lods
jbe
cs
aaa
mov
sbb
and
or
pop
outsb
push
dec
sarb
push
sbb
insl
pop
nop
aam
subb
inc
xchg
insb
bound
sbb
fcomip
clc
call
xchg
inc
xchg
lret
mov
dec
enter
sar
jo
aas
jns
lods
xchg
inc
or
in
fidivs
ficompl
jle
lods
ret
lds
clc
call
rorb
arpl
xchg
mov
xor
or
dec
sbb
cmpsb
and
adc
in
movntps
ret
pushf
test
mov
and
sbb
test
dec
cmp
inc
ds
sbb
mov
aad
push
sbb
insl
test
mov
xchg
lds
in
in
stc
cmp
mov
sbb
ja
sbb
fsubrs
push
mov
cmp
inc
insl
pop
cmpb
mov
cmpsl
pushf
stos
stos
jno
fmull
mov
inc
sub
pop
adc
scas
fcmove
xor
pop
lret
and
data16
test
mov
mov
popf
leave
jb
dec
push
inc
mov
icebp
ret
mov
sub
dec
jb
int3
jmp
mov
int
push
bound
add
call
movsb
cmp
int
repnz
jb
cs
adc
xor
mov
aas
add
fcomps
push
and
inc
mov
jnp
fdivrl
push
jo
cld
sub
mov
pop
int
mov
sub
push
cs
std
daa
xchg
xor
add
push
inc
ficompl
jns
inc
pushf
std
sub
call
push
inc
les
and
and
pop
inc
xchg
add
add
bound
pusha
pop
push
push
stos
pop
pop
mov
mov
addr16
enter
cmpsb
jp
sbb
sub
fsubl
dec
and
mov
push
loope
xchg
jbe
fidivrl
shrb
in
ljmp
or
jg
out
rcl
insl
cmp
adc
push
jo
ret
mov
mov
pushf
in
or
pop
xchg
mov
xchg
add
push
test
lea
ss
mov
int
push
mov
arpl
popa
and
aad
push
loop
or
jle
iret
xor
cmpsb
adc
xor
cmp
xor
mov
shlb
scas
add
outsl
rcll
les
pop
adc
and
in
dec
inc
xchg
imul
adc
loope
inc
add
test
shlb
add
mov
push
fidivl
stos
test
push
imul
push
fcom
push
mov
mov
xchg
icebp
jae
pop
sbb
push
dec
enter
dec
insl
or
mov
ret
mov
add
push
and
jp
std
mov
in
sbb
js
xlat
push
sahf
mov
imul
cltd
push
cltd
test
out
and
xlat
ljmp
push
xchg
outsl
and
sub
push
in
popf
jae
or
ffreep
rorb
pop
sub
fs
xchg
sub
stos
push
xchg
jae
jnp
inc
mov
sbb
jae
mov
flds
cmp
push
cld
clc
lret
arpl
xor
loop
movsl
mov
icebp
call
fwait
mov
aam
xchg
mov
mov
jle
sub
into
movsb
fstl
mov
aam
ljmp
in
pop
leave
mov
add
and
lds
outsb
and
push
mov
pop
pop
sbb
jecxz
and
insl
in
jmp
int3
pop
push
mov
cli
mov
loop
jl
push
inc
sub
dec
sbb
iret
idivl
jne
mov
outsb
addl
dec
gs
sbbl
add
mov
mov
xor
mov
hlt
popf
adc
loop
jp
fists
inc
dec
mov
xchg
add
dec
ja
enter
imul
pop
decb
fnstsw
mov
and
fadds
mov
aad
sub
mov
es
pextrw
lcall
sbb
and
or
cmpsl
rol
jno
mov
std
push
in
inc
adc
xor
pop
movsb
in
jge
cltd
push
ja
push
in
test
call
ss
jle
mov
jo
mov
mov
inc
xchg
scas
sahf
lods
dec
cmpb
shrl
push
repnz
std
adc
imul
jo
xchg
sbbl
cmp
ret
add
andl
jl
int
mov
stc
fldenv
xor
cmp
inc
push
iret
pop
imul
repnz
lret
dec
mov
scas
adc
nop
lret
leave
mov
mov
andb
push
mov
cmpsl
mov
call
sarl
pop
mov
ljmp
lret
or
sub
call
dec
adc
mov
mov
cmc
inc
cwtl
cmp
aad
sbb
mov
inc
xor
lret
pop
js
repz
sub
mov
rcll
or
dec
lock
mov
fs
cld
add
stc
mov
call
and
xor
push
gs
or
int
pop
insl
xchg
pop
fwait
inc
in
cli
dec
fsubl
or
mov
mov
adc
jne
ret
xchg
jbe
fnstenv
sbb
xor
leave
jl
mov
ret
andb
jle
repnz
jge
add
jp
or
fucomip
imul
dec
gs
pop
inc
cmp
stos
jno
mov
or
or
addb
mov
pusha
mov
and
push
and
dec
lret
adc
or
flds
cmpsb
jae
xchg
mov
mov
dec
subb
inc
lds
outsl
adc
cli
or
mov
add
mov
jp
in
mov
mov
pop
fldenv
cmp
or
pop
jo
xor
xchg
aas
or
std
fsubl
xchg
or
jbe
pop
xor
push
gs
cmpsb
adc
sbb
push
daa
sbb
js
js
or
mov
mov
dec
ljmp
ficoms
inc
stos
and
push
repnz
and
pop
dec
cwtl
pop
loopne
fwait
mov
outsl
jl
and
fdivrs
cmc
mov
addb
and
push
push
imul
dec
mov
jecxz
jmp
fidivrs
sbb
jb
loop
fbstp
addr16
adc
insl
sbb
and
mov
leave
lret
jae
jb
or
sub
mov
mov
push
sub
cmpsb
jne
mov
fstpt
ja
inc
lahf
cs
arpl
cmpsl
mov
or
sub
mov
dec
popf
inc
leave
push
pusha
mov
dec
idivl
dec
sbb
das
cmpsb
out
das
out
je
flds
cmc
cmp
cmp
push
stos
jno
sub
out
push
dec
lret
xchg
mov
das
addb
dec
push
xchg
fwait
andb
mov
jne
or
ror
push
loopne
mov
movsl
pop
lods
xchg
nop
xchg
clc
sbb
insl
pop
je
cmp
or
ret
dec
into
push
cld
pop
cmpsl
mov
movzbl
mov
xlat
sti
sub
lock
sbb
xor
loop
push
cmp
ficoml
out
mov
cmp
test
mov
inc
testl
jo
filds
jb
cmp
mov
out
ficoms
jl
fsubl
cwtl
or
dec
int
xor
stc
out
outsl
das
sbb
cmp
fists
sub
add
add
add
pop
add
inc
xchg
add
or
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
or
jne
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
loopne
insl
add
insl
add
