mov
cmp
lea
push
pushl
call
fldl
push
call
fldl
add
push
call
add
push
pushl
call
mov
pop
pop
pop
mov
pop
ret
cmp
je
cmp
jne
push
call
xor
cmp
pop
je
push
lea
add
pop
add
pop
mov
call
mov
cmp
mov
jne
cmpb
mov
mov
mov
mov
add
mov
mov
mov
mov
jne
push
call
push
lea
push
pushl
call
cmp
je
jmp
cmpb
je
pushl
call
cmp
pop
jne
testb
je
jmp
lea
movb
call
cmpl
jne
fld1
push
fld
push
fld
fxch
fstpl
fstpl
adc
inc
add
call
call
fldl
faddl
mov
add
call
pop
pop
call
mov
jmp
push
jmp
push
mov
test
je
call
push
call
pop
mov
andl
test
je
mov
andl
push
call
test
mov
jne
pop
ret
push
mov
sub
push
xor
cmp
je
push
mov
cmp
je
push
mov
push
push
call
test
mov
je
push
mov
lea
mov
mov
mov
call
mov
cmp
je
mov
lea
push
push
call
mov
test
jne
pushl
mov
mov
push
pushl
push
call
mov
cmp
je
test
js
test
jne
add
lea
call
mov
pop
pop
pop
leave
ret
push
mov
sub
push
call
xor
cmp
je
push
mov
cmp
jne
mov
cmp
jne
pop
pop
leave
ret
cmp
push
jne
push
call
cmp
pop
je
mov
xor
mov
stos
stos
stos
stos
stos
mov
cmp
mov
je
mov
mov
lea
mov
mov
mov
mov
lea
lea
movsl
movsl
mov
lea
mov
mov
movsl
call
test
lea
push
lea
push
lea
push
jne
lea
movl
call
add
test
je
mov
sub
mov
sar
mov
pop
jmp
cmpl
jl
ret
push
push
pop
push
push
movl
mov
call
cmp
pop
pop
mov
je
cmp
je
cmp
jne
mov
push
push
call
pop
movzbl
pop
mov
pop
ret
push
lea
sub
add
enter
mov
push
mov
call
cmpl
je
cmpl
jne
mov
xor
pop
call
add
leave
ret
call
test
jne
lea
push
lea
lea
push
movl
call
test
pop
pop
jne
jmp
push
mov
sub
mov
xor
mov
mov
test
je
andl
push
push
mov
lea
lea
push
mov
mov
and
inc
add
adc
add
movl
movb
call
mov
mov
add
mov
mov
mov
mov
mov
mov
push
lea
lea
call
test
pop
jne
testb
je
mov
add
push
call
test
pop
je
pop
pop
mov
xor
call
leave
ret
testb
je
jmp
push
call
pop
jmp
push
mov
cmpl
push
mov
jne
mov
call
pop
pop
ret
push
lea
sub
add
enter
mov
mov
cmpl
push
push
mov
push
jge
xor
push
lea
mov
call
mov
mov
lea
push
push
call
mov
test
jne
cmp
jne
mov
mov
lea
push
push
call
test
jne
testw
jne
mov
mov
add
test
jne
and
cmpl
jne
andl
andl
lea
mov
push
pop
lea
mov
mov
lea
mov
mov
mov
lea
mov
push
mov
mov
movb
mov
mov
movb
call
test
jne
mov
mov
lea
push
push
call
test
jne
mov
lea
push
pushl
mov
pushl
pushl
pushl
push
call
testb
jne
testb
jne
testb
jne
testb
jne
xor
lea
call
mov
pop
mov
pop
xor
pop
call
add
leave
ret
push
mov
mov
sub
test
push
push
je
cmp
je
mov
xor
push
mov
lea
mov
call
mov
cmp
je
push
lea
mov
call
mov
lea
push
mov
call
test
js
mov
pushl
mov
push
call
test
js
mov
mov
mov
push
push
call
test
js
mov
cmp
je
lea
push
mov
mov
mov
mov
mov
push
call
mov
mov
lea
push
push
call
test
js
mov
mov
push
call
mov
cmp
jne
mov
cmp
jg
lea
call
lea
call
xor
pop
pop
leave
ret
push
mov
mov
sub
cmpl
push
push
mov
mov
jge
mov
test
jne
mov
test
push
jne
mov
test
je
mov
call
andl
mov
cmp
mov
mov
je
test
jne
test
je
test
jne
testb
je
testb
jne
mov
test
je
mov
push
call
andl
orl
lea
xor
mov
call
lea
push
call
test
je
andl
xor
lea
push
call
test
je
mov
mov
cmp
jne
mov
pushl
mov
push
call
pop
pop
pop
leave
ret
mov
cmpl
jl
jmp
push
mov
sub
mov
andl
push
lea
push
pushl
mov
mov
mov
lea
push
push
push
call
mov
mov
mov
mov
mov
mov
pop
leave
ret
mov
sub
push
mov
call
test
jne
xor
add
ret
push
lea
sub
mov
xor
mov
bnd
inc
add
gs
je
mov
lea
push
mov
mov
mov
push
lea
movl
movl
call
push
call
mov
lea
push
call
pushl
mov
push
push
lea
push
push
call
mov
add
lea
mov
call
lea
call
testb
jne
testb
jne
mov
mov
rcrb
rdmsr
add
or
push
mov
and
sub
mov
xor
mov
push
mov
push
push
mov
push
mov
call
test
pop
je
mov
xor
mov
mov
mov
mov
mov
mov
mov
iret
aad
add
push
or
push
and
push
lea
push
push
xor
inc
push
mov
mov
mov
mov
call
add
test
je
cmp
jb
lea
push
pushl
xor
pushl
lea
call
xor
cmp
je
push
lea
mov
call
mov
mov
lea
push
lea
push
push
call
test
js
push
lea
lea
call
push
push
push
push
lea
call
mov
mov
add
test
jne
lea
call
lea
call
lea
call
lea
call
lea
call
mov
test
jne
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
push
mov
mov
mov
test
push
je
cmp
je
cmp
je
cmp
je
cmp
je
mov
call
test
jne
xor
mov
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
push
call
xor
mov
mov
pop
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
je
jmp
mov
cmp
jne
mov
cmp
add
mov
cmp
jne
mov
test
je
lea
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
push
call
test
pop
je
mov
jmp
push
mov
lea
mov
or
lock
dec
jne
movl
lea
call
lea
call
push
call
pop
xor
pop
ret
push
mov
push
push
push
push
lea
push
pushl
mov
mov
call
test
je
mov
pop
pop
leave
ret
mov
lea
push
pushl
movl
mov
call
mov
and
neg
sbb
not
lea
and
push
pushl
mov
call
lea
mov
call
mov
jmp
sbb
cmp
lea
lea
call
mov
neg
sbb
and
je
mov
test
je
mov
cmp
je
inc
mov
mov
mov
xor
inc
ret
xor
jmp
push
lea
push
pop
call
pop
jmp
nop
int
add
test
push
push
je
mov
mov
mov
cmp
je
add
mov
test
jne
mov
andl
mov
pop
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
push
call
mov
mov
xor
jmp
push
mov
push
push
push
push
push
pushl
mov
mov
push
call
add
test
je
mov
push
push
push
push
push
push
call
add
neg
sbb
neg
pop
pop
ret
push
mov
push
push
push
push
pushl
call
xor
cmp
pop
je
mov
mov
call
cmp
mov
je
mov
lea
push
push
push
call
test
mov
js
pushl
lea
call
mov
cmp
je
push
lea
mov
call
mov
lea
push
push
call
mov
mov
cmp
je
pushl
mov
push
push
call
lea
mov
call
lea
call
pop
mov
pop
pop
leave
ret
mov
and
neg
sbb
inc
ret
push
mov
and
sub
push
mov
push
lea
call
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
lea
push
push
push
mov
movl
movb
mov
call
lea
mov
call
mov
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
cmpl
je
push
mov
mov
test
movl
movl
mov
je
mov
mov
mov
mov
mov
mov
push
push
push
push
push
call
mov
mov
add
test
jne
test
jne
mov
call
pop
pop
add
ret
and
cmp
jg
je
cmp
ja
jmp
xor
ret
nop
data16
adc
inc
aaa
adc
inc
aaa
adc
inc
aaa
adc
aas
aaa
adc
aas
aaa
adc
aas
aaa
adc
aas
aaa
adc
aas
aaa
adc
aas
aaa
adc
in
push
push
push
mov
mov
test
je
push
push
push
xor
call
cmp
pop
mov
mov
jne
mov
cmp
mov
jne
add
mov
cmp
jne
mov
call
pop
pop
pop
leave
ret
xor
jmp
push
mov
lea
mov
call
mov
mov
push
mov
lea
mov
call
mov
xor
lea
mov
call
lea
call
lea
call
jmp
cmp
jne
lea
call
jmp
lea
call
jmp
push
mov
lea
mov
call
mov
mov
push
mov
add
mov
call
mov
xor
mov
mov
call
lea
call
lea
call
jmp
push
mov
push
mov
cmpl
je
push
push
mov
push
push
pushl
call
mov
test
jne
pop
pop
pop
pop
ret
mov
test
je
lea
push
push
mov
call
test
je
pushl
mov
mov
call
test
je
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
push
push
call
jmp
xor
jmp
xor
jmp
mov
lea
push
mov
or
lock
dec
pop
je
ret
xor
inc
mov
mov
push
call
xor
jmp
mov
movl
xor
ret
mov
push
xor
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
pop
ret
mov
push
call
mov
jmp
mov
push
call
mov
pop
ret
mov
push
call
mov
jmp
mov
push
call
mov
jmp
mov
push
call
mov
jmp
mov
push
call
mov
jmp
push
mov
movl
movl
movl
movl
add
push
inc
and
add
call
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
push
call
mov
mov
push
push
push
call
add
test
je
pop
xor
pop
ret
mov
add
push
push
call
pop
xor
pop
ret
push
mov
push
push
push
mov
andl
lea
push
push
pushl
pushl
call
add
test
je
cmpl
jne
mov
test
jl
mov
xor
pop
leave
ret
xor
cmp
je
mov
push
lea
cmp
jne
call
push
push
call
mov
mov
pop
ret
xor
ret
push
mov
push
andl
push
push
push
lea
mov
call
lea
call
cmpl
je
mov
push
pushl
pushl
pushl
push
push
pushl
call
mov
pop
lea
call
pop
mov
pop
leave
ret
xor
jmp
mov
push
mov
push
lea
mov
call
mov
test
je
mov
lea
push
push
call
andw
pop
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
sub
push
push
push
mov
push
mov
add
cmp
jae
xor
xor
mov
mov
mov
mov
mov
lea
cmp
jne
mov
add
test
mov
js
cmp
jb
cmp
jne
mov
pop
pop
pop
pop
add
ret
push
lea
sub
mov
xor
mov
push
push
mov
lea
call
mov
test
mov
je
pushl
lea
xor
push
lea
mov
mov
movl
movl
mov
mov
call
mov
pop
pop
pushl
mov
push
push
push
call
testb
jne
testb
jne
lea
call
mov
pop
xor
xor
pop
call
add
leave
ret
push
mov
sub
mov
push
xor
cmp
mov
je
lea
push
push
push
add
push
call
and
jne
cmp
jne
pushl
lea
call
mov
cmp
je
mov
mov
mov
lea
push
push
lea
push
call
mov
mov
mov
xor
sub
je
dec
jne
mov
mov
lea
push
pushl
mov
mov
push
call
mov
neg
sbb
and
add
mov
lea
call
lea
call
mov
pop
leave
ret
mov
jmp
push
push
mov
lea
push
mov
call
test
je
pop
pop
ret
andl
call
push
call
pop
xor
jmp
mov
test
push
push
je
mov
mov
mov
cmp
je
add
mov
test
jne
mov
andl
mov
pop
pop
ret
push
pushl
lea
pushl
push
call
test
jl
mov
test
je
mov
test
jne
xor
cmp
jb
push
mov
sub
lea
pop
mov
test
je
mov
test
jne
xor
cmp
jb
sub
lea
mov
mov
mov
pop
ret
mov
andl
andl
jmp
push
mov
sub
push
push
mov
push
mov
xor
cmp
je
mov
cmp
je
mov
and
jne
movzwl
cmp
jne
mov
push
mov
call
test
jne
xor
inc
pop
pop
pop
leave
ret
cmp
jle
cmp
jg
xor
cmp
setne
jmp
mov
mov
test
mov
mov
je
mov
push
call
xor
ret
push
mov
push
push
push
push
mov
push
mov
call
mov
mov
and
xor
or
jne
mov
mov
call
cmp
je
mov
mov
push
sub
push
mov
push
pushl
call
cmp
je
mov
mov
add
mov
add
mov
cmp
jne
pop
pop
pop
leave
ret
mov
mov
call
mov
shr
jmp
push
mov
push
mov
push
push
mov
mov
mov
movb
mov
mov
mov
mov
call
call
mov
push
push
mov
movb
call
test
jge
push
push
push
mov
push
mov
call
pop
pop
pop
pop
ret
push
push
push
mov
call
test
jl
jmp
push
mov
push
pushl
mov
call
push
mov
cmp
jbe
push
dec
push
mov
call
mov
sub
mov
mov
call
test
jne
mov
inc
pop
pop
ret
push
mov
sub
xor
mov
call
mov
test
je
mov
push
call
test
je
mov
lea
push
mov
call
mov
andl
andl
mov
mov
push
lea
mov
mov
call
mov
leave
ret
push
mov
push
lea
push
mov
call
test
je
pop
pop
ret
andl
mov
push
mov
call
xor
jmp
push
mov
and
sub
push
mov
push
lea
call
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
lea
push
push
push
mov
movl
movb
mov
call
lea
mov
call
mov
pop
pop
mov
pop
ret
push
mov
push
push
mov
mov
lea
push
push
pushl
lea
pushl
push
push
call
mov
test
je
mov
mov
mov
test
je
mov
test
je
mov
flds
mov
fstps
mov
push
call
mov
mov
pop
pop
pop
ret
mov
push
push
call
jmp
xor
jmp
mov
test
push
push
je
mov
mov
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
push
call
mov
mov
xor
pop
pop
ret
add
mov
test
jne
jmp
push
call
test
pop
je
push
push
push
push
mov
call
push
call
mov
add
mov
pop
test
je
cmpl
je
ret
xor
jmp
xor
ret
push
mov
push
movl
mov
mov
push
mov
call
mov
call
mov
call
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
mov
je
push
call
pop
mov
mov
mov
mov
mov
add
cmp
mov
lea
mov
mov
mov
mov
mov
mov
je
pushl
call
pop
cmp
pop
je
pushl
mov
push
call
mov
leave
ret
push
push
mov
mov
mov
mov
push
mov
push
call
test
pop
pop
jne
push
call
test
pop
je
pushl
mov
call
mov
pop
mov
pop
ret
push
mov
push
mov
push
xor
cmp
je
push
lea
mov
call
mov
lea
push
push
call
mov
cmp
jne
lea
call
mov
pop
pop
pop
ret
pushl
mov
pushl
push
call
mov
jmp
mov
xor
cmp
mov
sete
mov
xor
ret
push
mov
sub
test
push
mov
je
mov
test
jge
push
call
pop
andl
push
mov
mov
call
test
je
andl
lea
push
call
pop
pop
leave
ret
push
xor
mov
mov
mov
push
xor
inc
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
orl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
push
mov
mov
or
je
or
dec
xor
fistpl
and
cmp
pop
je
mov
lea
push
push
call
push
call
test
je
mov
orl
push
lea
call
test
je
mov
orl
pop
mov
pop
ret
push
mov
sub
push
push
call
test
pop
je
pushl
pushl
push
mov
call
mov
test
mov
je
mov
push
call
andl
andl
push
lea
lea
movl
mov
call
mov
test
je
mov
push
push
push
call
test
js
lea
call
test
je
mov
push
call
xor
pop
leave
ret
push
mov
push
cmpl
push
je
mov
pop
leave
ret
push
lea
call
cmpl
mov
je
call
jmp
push
mov
and
mov
sub
cmpb
push
push
push
jne
cmpl
je
call
test
je
mov
lea
push
mov
add
mov
push
push
call
test
js
xor
cmp
je
cmp
je
mov
lea
push
pushl
push
call
test
js
cmp
jne
push
push
lea
push
movl
call
pushl
lea
push
call
push
lea
push
call
mov
mov
neg
sbb
inc
testb
je
mov
add
push
call
test
pop
je
testb
jne
testb
jne
testb
je
mov
add
push
call
test
pop
je
testb
je
mov
add
push
call
test
pop
je
testb
jne
testb
jne
test
jne
mov
cmpl
je
add
call
pushl
mov
mov
mov
call
mov
mov
xor
shr
inc
and
and
je
testb
jne
testb
jne
test
jne
test
jne
test
je
movb
movb
mov
cmpl
je
mov
call
test
je
lea
push
push
mov
call
test
pop
pop
js
lea
call
mov
test
mov
je
mov
push
push
pushl
push
call
lea
call
mov
mov
mov
imul
lea
add
cmp
jne
push
push
push
lea
push
mov
call
cmpl
jne
xor
pop
pop
pop
mov
pop
ret
testb
je
jmp
push
mov
push
mov
test
je
push
mov
cmpl
je
mov
mov
lea
push
push
call
test
js
mov
xor
cmp
setl
mov
xor
pop
pop
pop
ret
push
mov
sub
mov
xor
mov
push
mov
mov
test
push
push
je
mov
test
je
xor
inc
xor
push
push
mov
lea
push
push
push
movl
movl
call
add
testb
jne
testb
jne
lea
call
mov
cmp
mov
je
lea
mov
mov
mov
mov
mov
movl
movl
mov
mov
mov
lea
call
push
call
test
pop
mov
jne
mov
pushl
mov
mov
push
push
push
call
testb
jne
testb
jne
lea
call
mov
pop
pop
xor
pop
call
leave
ret
push
mov
push
push
xor
push
call
test
je
mov
push
lea
mov
call
mov
lea
push
push
call
test
js
cmp
je
push
pushl
call
pop
pop
mov
lea
call
mov
pop
leave
ret
push
push
mov
call
jmp
push
mov
push
xor
cmp
mov
jne
push
push
call
cmp
pop
je
movl
mov
movl
mov
movl
mov
cmp
je
mov
push
call
mov
push
pushl
push
call
mov
mov
push
call
mov
pop
pop
pop
ret
xor
jmp
mov
test
push
push
je
mov
mov
mov
cmp
je
add
mov
test
jne
mov
andl
mov
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
push
call
mov
mov
xor
pop
pop
ret
cmp
je
xor
ret
pushl
mov
call
pop
test
jne
inc
jmp
push
mov
test
je
mov
test
je
mov
test
je
mov
test
jne
pushl
pushl
call
andl
pop
pop
xor
pop
ret
push
pushl
call
pop
pop
jmp
push
pop
pop
ret
push
mov
sub
mov
lea
push
push
call
test
mov
je
xchg
mov
test
je
push
pushl
lea
movl
movl
movl
call
testb
pop
jne
testb
jne
andl
mov
push
lea
call
mov
lea
push
push
push
call
lea
call
pop
lea
call
leave
ret
mov
push
xor
mov
mov
mov
add
cmp
ja
jmp
push
call
cmp
pop
je
mov
mov
movl
mov
mov
mov
cmp
je
mov
mov
mov
mov
xor
pop
ret
push
call
cmp
pop
je
mov
mov
movl
mov
mov
movw
jmp
xor
jmp
mov
imul
sbb
add
mov
mov
dec
cmp
enter
fmull
cmc
dec
cmp
sbb
das
dec
cmp
push
dec
cmp
inc
dec
cmp
push
push
mov
push
lea
movl
movl
movl
movl
movl
movl
movl
call
lea
call
lea
call
mov
test
mov
mov
je
lea
push
call
test
pop
jne
push
call
pop
mov
aam
add
je
lea
push
call
test
pop
jne
push
call
add
enter
dec
pop
call
lea
call
lea
call
lea
call
lea
call
lea
call
mov
test
jne
pop
movl
movl
lea
cmpl
pop
pop
je
push
call
pop
ret
test
je
jmp
push
mov
mov
test
je
mov
push
call
mov
test
pop
je
mov
push
call
ret
push
mov
sub
mov
push
push
push
xor
push
push
lea
push
mov
mov
call
test
je
cmpl
mov
je
cmpl
je
push
push
lea
push
mov
call
lea
push
lea
call
test
jne
cmp
jne
mov
mov
add
add
lea
cmp
je
cmp
jne
lea
call
mov
xor
mov
and
inc
shr
shl
lea
or
cmp
jne
cmp
je
lea
call
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
andl
push
push
lea
push
push
movl
movl
call
test
js
push
mov
call
test
pop
je
pushl
lea
push
mov
call
mov
test
mov
je
mov
push
call
mov
andl
andl
push
lea
lea
movl
mov
call
mov
test
je
mov
push
push
push
call
test
lea
jne
call
test
je
mov
push
call
testb
je
mov
add
push
call
test
pop
je
xor
pop
pop
leave
ret
push
push
mov
mov
imul
push
lea
lea
cmp
jne
or
pop
pop
pop
ret
push
mov
sub
push
mov
push
push
mov
test
mov
jne
call
mov
pop
pop
pop
leave
ret
lea
call
andl
mov
lea
lea
mov
call
inc
add
fstpt
add
mov
dec
fsubr
lcall
mov
jmp
push
mov
push
andl
push
push
lea
call
pushl
mov
lea
xor
call
mov
andl
mov
mov
call
mov
pop
leave
ret
push
mov
push
fildl
xor
cmp
fmuls
fstps
jne
fldz
xor
fcomps
cmp
setg
fnstsw
test
jp
xor
inc
cmp
jne
flds
fcoml
fnstsw
test
je
fsts
flds
fcomp
fnstsw
test
jnp
fcomps
fnstsw
test
jnp
flds
fadd
faddl
fistpl
mov
sar
leave
ret
xor
jmp
mov
lea
push
mov
or
lock
dec
pop
je
ret
xor
inc
mov
mov
push
call
xor
jmp
push
mov
push
mov
mov
push
mov
cmp
jne
test
push
push
ja
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
fldl
mov
fcompl
fnstsw
test
jp
mov
mov
mov
xor
test
jne
xor
test
js
mov
mov
mov
xor
test
jne
xor
test
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
flds
flds
fucompp
fnstsw
test
jp
lea
lea
call
test
je
mov
cmp
jne
pop
mov
pop
ret
pop
xor
pop
ret
mov
mov
mov
mov
cmp
jne
mov
add
push
call
test
je
xor
inc
ret
xor
ret
mov
mov
mov
add
or
mov
ret
mov
lea
push
mov
or
lock
dec
pop
je
ret
xor
inc
mov
mov
push
call
xor
jmp
push
lea
sub
mov
xor
mov
mov
push
push
mov
mov
push
mov
mov
mov
mov
xor
cmp
lea
jne
lea
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
push
lea
call
lea
mov
mov
lea
push
pushl
mov
sbb
inc
add
add
movl
mov
call
push
pushl
lea
push
push
lea
push
call
add
testb
mov
jne
testb
jne
testl
jne
lea
mov
mov
mov
lea
push
mov
movl
movl
mov
mov
push
call
add
push
lea
mov
call
mov
neg
sbb
and
cmp
jne
push
lea
mov
call
mov
mov
push
mov
call
testb
mov
mov
je
mov
add
push
call
test
pop
je
lea
call
mov
mov
pop
pop
xor
pop
call
add
leave
ret
pushl
mov
pushl
mov
call
pop
pop
lea
call
mov
jmp
mov
push
mov
lea
call
lea
xor
call
xor
pop
ret
push
push
mov
mov
push
lea
mov
call
cmp
je
mov
call
test
je
test
je
mov
push
call
push
mov
call
pop
pop
pop
ret
xor
jmp
push
mov
push
mov
mov
mov
push
add
push
push
call
test
je
mov
mov
push
lea
push
lea
mov
lea
cmp
jne
mov
mov
add
mov
pop
add
pop
leave
ret
push
push
push
mov
call
test
pop
je
pushl
mov
call
mov
test
je
mov
push
call
cmpl
jne
mov
mov
pop
pop
ret
xor
jmp
push
mov
sub
mov
mov
push
mov
mov
mov
cmp
push
mov
mov
lea
jae
mov
andl
lea
push
pushl
mov
mov
push
call
testb
mov
jne
testb
jne
mov
pop
pop
leave
ret
test
push
je
mov
mov
and
xor
or
je
mov
push
mov
call
test
jne
mov
test
jne
mov
mov
mov
mov
mov
pop
ret
mov
mov
pop
jmp
push
mov
push
mov
test
push
je
call
mov
test
je
mov
push
call
andl
mov
pushl
mov
pushl
pushl
push
call
test
js
mov
mov
xor
pop
leave
ret
push
call
test
pop
je
call
mov
test
je
mov
push
call
test
mov
jne
jmp
xor
jmp
push
mov
sub
cmpl
je
push
mov
test
je
mov
push
push
xor
call
mov
push
lea
call
pushl
lea
push
call
cmpl
je
mov
testb
jne
cmpl
jne
mov
neg
sbb
and
add
pop
pop
pop
leave
ret
push
push
mov
mov
test
je
test
je
sar
mov
mov
push
push
push
push
push
call
mov
call
test
jne
pushl
mov
push
call
pop
xor
pop
ret
decl
cmpl
jne
push
lea
movl
call
mov
push
call
test
pop
jne
push
call
pop
lea
call
lea
call
mov
call
push
call
pop
pop
ret
push
mov
lea
movl
call
lea
call
mov
test
mov
jne
test
jne
lea
call
lea
call
lea
pop
jmp
mov
decl
mov
je
ret
xor
inc
mov
mov
push
call
xor
jmp
mov
mov
push
inc
push
push
call
test
je
mov
mov
imul
incl
lea
ret
xor
ret
mov
push
push
movl
call
test
mov
pop
mov
je
push
push
push
mov
call
test
pop
je
push
mov
push
push
call
push
mov
call
add
test
je
push
mov
push
push
call
add
mov
xor
pop
pop
pop
ret
push
mov
mov
mov
sub
push
push
mov
test
mov
je
pushl
mov
mov
mov
push
push
call
mov
mov
and
neg
sbb
not
and
test
jne
mov
and
jne
pop
pop
leave
ret
mov
mov
cmpl
je
add
mov
andl
mov
lea
mov
mov
mov
mov
cmp
jae
incl
pushl
mov
mov
mov
mov
push
push
call
mov
jmp
mov
mov
jmp
push
mov
and
sub
mov
xor
mov
push
mov
push
movl
push
xor
mov
mov
lea
mov
push
mov
movl
mov
movl
call
push
lea
pop
movb
call
test
je
mov
push
mov
push
lea
push
mov
call
mov
cmp
je
push
lea
mov
call
mov
lea
push
pushl
push
call
test
mov
js
mov
movl
mov
mov
push
lea
mov
call
mov
mov
lea
push
push
call
test
jne
mov
mov
lea
mov
lea
push
push
lea
mov
call
test
jne
pushl
lea
call
test
jne
lea
mov
mov
mov
lea
push
mov
movl
movl
movb
fiaddl
call
lea
push
pushl
mov
pushl
lea
mov
mov
movl
mov
movl
mov
mov
push
call
mov
push
pushl
call
test
jne
sub
andl
xor
inc
movl
mov
push
lea
call
lea
lea
call
push
push
lea
call
mov
pushl
pushl
call
pushl
pushl
call
add
xor
lea
call
jmp
push
push
lea
push
mov
call
mov
cmp
je
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
dec
js
mov
imul
mov
mov
mov
lea
push
call
decl
sub
cmp
jge
lea
call
lea
call
mov
mov
lea
push
mov
xor
call
push
push
push
lea
push
mov
call
lea
call
inc
add
call
lea
call
mov
pop
pop
mov
pop
xor
call
mov
pop
ret
mov
mov
test
mov
mov
je
mov
push
call
xor
ret
push
mov
push
push
andl
push
push
mov
andl
push
lea
push
push
push
call
mov
mov
add
and
jne
test
jne
pushl
lea
call
test
jne
mov
mov
push
pushl
push
call
mov
lea
call
pop
mov
pop
pop
leave
ret
mov
cmp
je
cmp
je
cmp
je
jbe
cmp
jbe
cmp
je
cmp
je
xor
ret
push
pop
ret
xor
inc
ret
push
pop
ret
mov
test
jne
mov
call
sub
jne
mov
shr
and
ret
cmpb
je
mov
ret
dec
je
dec
jne
mov
shr
jmp
push
mov
push
mov
cmpl
je
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
xor
test
jne
mov
mov
mov
pop
pop
ret
mov
push
call
xor
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
jmp
mov
test
je
lea
jmp
mov
test
je
lea
jmp
jmp
push
lea
sub
add
enter
mov
mov
push
push
xor
push
mov
push
lea
mov
mov
call
cmp
je
lea
mov
mov
push
mov
call
cmp
mov
mov
jne
mov
mov
mov
mov
mov
mov
call
cmp
movl
mov
movl
je
lea
mov
mov
push
mov
call
mov
shr
dec
mov
mov
pop
mov
movl
cmp
je
mov
mov
mov
add
mov
mov
lea
push
lea
push
mov
movl
movl
mov
call
push
pushl
lea
pushl
push
push
call
add
testb
jne
testb
jne
testb
je
mov
add
push
call
test
pop
je
lea
call
xor
inc
mov
pop
xor
pop
call
add
leave
ret
xor
jmp
push
mov
decl
mov
je
pop
ret
movl
movl
mov
test
mov
push
je
lea
push
call
pop
test
jne
push
call
pop
push
call
pop
xor
pop
jmp
test
je
jmp
cmpl
jne
mov
call
push
pushl
call
ret
mov
mov
push
push
lea
call
andl
pop
jmp
push
mov
push
push
push
mov
push
xor
cmp
movl
movb
jne
lea
cmp
jne
lea
pop
enter
dec
inc
add
add
cmp
test
dec
inc
add
add
jne
lea
mov
mov
push
lea
lea
cmp
jne
push
push
push
push
call
mov
cmp
jne
lea
xor
cmp
pop
jne
lea
cmp
jne
add
cmp
je
push
call
pop
pop
pop
leave
ret
push
call
pop
jmp
mov
mov
cmp
jae
mov
pushl
call
pop
mov
mov
mov
xor
ret
mov
test
je
push
mov
push
lea
call
mov
incl
test
je
mov
mov
push
push
push
call
pop
ret
push
push
push
call
add
test
jns
jmp
push
mov
push
mov
test
je
mov
lea
push
push
call
test
js
mov
test
je
push
mov
add
push
mov
call
cmpl
jne
mov
push
mov
call
test
je
mov
mov
mov
xor
pop
pop
pop
ret
mov
decl
mov
je
ret
xor
inc
mov
mov
push
call
xor
jmp
push
mov
and
sub
push
push
mov
push
mov
push
push
call
test
mov
je
mov
call
cmpl
jne
push
pop
mov
call
test
je
pushl
mov
mov
call
movl
mov
mov
call
test
js
add
jne
call
test
js
lea
mov
call
mov
mov
test
je
push
lea
push
pushl
mov
push
pushl
call
test
jne
dec
mov
add
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
lea
push
pushl
push
pushl
mov
call
test
jne
mov
lea
call
xor
lea
call
mov
pop
pop
pop
mov
pop
ret
mov
jmp
push
mov
push
push
cmpb
push
push
je
lea
push
call
push
mov
xor
pop
mov
mov
test
je
mov
cmp
jl
mov
cmpl
jbe
push
xor
pop
push
add
call
test
mov
je
pushl
mov
push
pushl
push
call
lea
call
mov
inc
add
cmp
jb
pop
pop
leave
ret
pushl
mov
mov
push
pushl
push
call
inc
add
jmp
push
mov
push
push
mov
push
lea
call
mov
andl
test
mov
je
mov
push
push
push
call
test
jne
lea
call
pop
mov
pop
leave
ret
mov
neg
sbb
and
add
mov
jmp
push
pop
ret
push
mov
push
push
pushl
xor
mov
lea
mov
call
mov
cmp
je
mov
mov
mov
lea
call
mov
pop
leave
ret
mov
push
push
call
test
je
xor
mov
mov
mov
call
test
jne
cmp
jne
test
jne
cmpl
je
inc
cmp
ja
mov
test
jne
xor
pop
pop
ret
mov
test
mov
push
push
je
mov
mov
cmp
je
add
mov
test
jne
mov
andl
cmpl
je
mov
call
test
jne
xor
mov
mov
pop
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
push
call
mov
mov
xor
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
push
call
pop
test
je
mov
mov
push
call
xor
jmp
push
lea
sub
mov
xor
mov
push
push
mov
cmpl
mov
je
push
call
pop
push
lea
call
andl
andw
lea
mov
mov
push
lea
movl
movl
call
lea
push
call
pop
pop
push
mov
call
testb
jne
testb
jne
mov
pop
xor
pop
call
add
leave
ret
push
mov
and
sub
push
mov
testb
push
push
je
lea
mov
mov
call
test
je
mov
xor
push
lea
lea
movl
mov
mov
mov
call
cmp
je
mov
mov
cmp
je
mov
mov
mov
mov
mov
mov
inc
test
mov
jne
cmp
je
mov
mov
test
je
mov
test
jl
cmp
jle
test
jle
mov
mov
mov
mov
push
push
call
xor
cmp
mov
mov
mov
mov
je
mov
mov
mov
cmp
je
push
push
push
lea
push
pushl
lea
mov
call
test
js
movb
mov
lea
push
pushl
mov
mov
mov
push
call
lea
call
pop
pop
xor
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
and
sub
testb
push
push
mov
je
test
mov
fildl
jl
fmull
fldl
fcomp
fnstsw
test
jnp
fldl
fcomp
fnstsw
test
je
call
mov
mov
mov
push
mov
call
add
call
cmp
mov
jb
mov
push
push
push
push
mov
call
mov
mov
xor
add
mov
push
adc
call
mov
add
or
jne
mov
mov
mov
mov
add
adc
pop
pop
mov
pop
ret
cmpb
jne
mov
add
mov
pop
adc
pop
mov
pop
ret
push
mov
sub
lea
push
lea
push
lea
push
push
pushl
call
mov
or
shl
or
add
shl
or
leave
ret
pushl
lea
mov
call
mov
lea
call
lea
xor
call
lea
xor
call
andl
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
fldl
xor
fstps
sub
flds
mov
fstpl
mov
mov
mov
call
fstps
flds
call
fldl
fstps
mov
flds
fstpl
call
fstps
flds
call
fldl
faddl
mov
fstps
flds
fstpl
call
fstps
flds
call
fldl
faddl
sub
mov
fstps
flds
fstpl
call
fstps
flds
call
sub
mov
mov
add
ret
push
push
mov
lea
movl
movl
movl
movl
movl
call
lea
call
lea
call
movl
cmpl
je
lea
push
call
pushl
call
pop
lea
movl
call
testb
je
push
call
pop
mov
pop
pop
ret
push
mov
sub
mov
mov
lea
push
call
mov
mov
mov
test
je
mov
test
jne
pushl
andl
mov
add
call
mov
test
je
mov
lea
push
push
call
test
js
pushl
mov
mov
call
lea
call
lea
call
leave
ret
push
mov
cmpb
jne
cmpb
jne
mov
test
je
pushl
mov
push
call
call
xor
pop
ret
push
push
lea
pushl
push
pop
call
push
pushl
xor
pushl
push
call
push
pushl
push
pop
call
pop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
push
mov
call
xor
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
mov
je
push
mov
call
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
mov
je
push
push
mov
call
cmp
je
push
mov
push
push
call
add
mov
call
cmp
mov
mov
je
push
mov
call
cmp
je
mov
mov
cmp
mov
mov
je
push
mov
call
cmp
je
mov
call
cmp
mov
mov
je
push
mov
call
cmp
je
movb
movb
mov
mov
mov
mov
mov
cmp
mov
mov
je
push
mov
call
cmp
je
mov
call
cmp
mov
mov
je
push
mov
call
cmp
je
mov
call
cmp
mov
mov
je
push
mov
call
cmp
je
movl
movl
mov
mov
cmp
mov
mov
je
push
mov
call
cmp
je
mov
call
cmp
mov
mov
je
push
mov
call
cmp
je
push
push
call
cmp
mov
mov
je
push
mov
call
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
cmp
mov
mov
je
push
mov
call
cmp
je
mov
mov
mov
call
cmp
mov
mov
je
push
mov
call
cmp
je
movb
mov
mov
movb
mov
mov
cmp
mov
mov
je
push
mov
call
cmp
je
movb
mov
mov
movb
cmp
mov
mov
je
push
mov
call
cmp
je
mov
movl
mov
mov
movl
cmp
mov
mov
je
push
mov
call
cmp
je
mov
call
cmp
mov
mov
je
push
mov
call
cmp
je
push
mov
push
push
call
add
call
cmp
mov
mov
je
push
mov
call
cmp
je
push
mov
push
push
call
add
call
cmp
mov
mov
je
push
mov
call
cmp
je
push
mov
push
push
call
add
push
call
cmp
mov
mov
je
push
mov
call
cmp
je
push
push
call
cmp
mov
mov
je
push
mov
call
cmp
je
fldz
mov
fstps
mov
mov
mov
movl
movb
cmp
mov
mov
je
push
mov
call
cmp
je
call
cmp
mov
mov
je
push
mov
call
cmp
je
mov
call
cmp
mov
mov
je
push
mov
call
cmp
je
mov
call
cmp
mov
mov
je
mov
pop
pop
pop
pop
ret
xor
jmp
xor
jmp
xor
jmp
pop
pop
pop
xor
pop
ret
push
lea
sub
mov
xor
mov
push
mov
mov
mov
mov
test
mov
je
xor
cmp
je
lea
mov
mov
push
lea
mov
movl
movl
mov
call
pop
lea
push
add
push
call
testb
push
jne
testb
jne
pop
mov
xor
pop
call
add
leave
ret
push
mov
push
mov
mov
push
pushl
mov
call
test
je
mov
mov
mov
andl
push
jne
mov
xor
cmp
jne
pushl
mov
push
push
mov
call
pop
pop
xor
pop
pop
ret
mov
cmpl
mov
push
je
call
test
je
andl
orl
jmp
mov
mov
mov
push
call
test
mov
je
push
push
mov
call
test
jns
push
call
test
je
andl
orl
xor
pop
ret
push
mov
sub
mov
xor
mov
mov
push
mov
push
push
mov
mov
xor
mov
cmp
mov
mov
mov
jne
cmpb
jne
cmpb
jne
xor
mov
pop
pop
xor
pop
call
leave
ret
push
lea
mov
call
mov
lea
push
push
push
call
mov
cmp
je
testb
jne
xor
cmp
mov
jne
lea
call
xor
lea
call
mov
jmp
cmp
je
mov
push
mov
call
pushl
mov
mov
call
mov
push
mov
call
add
lcall
decl
sbb
mov
push
call
mov
cmp
je
mov
cmpb
je
mov
lea
push
lea
push
mov
call
cmp
mov
mov
jne
mov
cmp
jne
cmp
jne
cmp
je
push
mov
mov
mov
mov
add
mov
pop
lea
pop
add
adc
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
pusha
decl
jmp
mov
call
push
push
pop
lea
call
test
je
cmp
mov
jne
mov
mov
lea
push
pushl
lea
pushl
push
lea
push
pushl
pushl
push
call
test
js
mov
test
in
in
sbb
jns
add
mov
push
push
push
call
fadds
mov
jb
xchg
jae
add
sar
popl
add
faddl
out
add
pop
js
xorb
test
shlb
add
lcall
popl
push
push
push
push
call
mov
flds
add
push
jmp
pop
stos
out
push
iret
add
add
icebp
jp
mov
push
popa
mov
out
push
add
testb
add
sub
pop
push
push
push
push
lea
push
push
lea
push
call
add
std
fdivr
add
pushf
add
addb
add
add
mov
jle
xchg
push
add
push
add
jl
add
cmpsb
add
test
lea
js
mov
fsub
into
mov
in
pop
push
call
push
push
push
push
lea
push
push
push
push
push
push
call
mov
jb
add
sarb
mov
add
je
add
adcl
push
jmp
add
add
in
mov
leave
add
enter
lcall
add
cmpsb
push
add
push
push
call
mov
les
xchg
clc
rolb
add
add
scas
test
lret
pop
out
testl
add
jae
add
add
out
data16
pop
pop
mov
nop
mov
mov
xchg
movsl
sub
pop
jmp
push
push
push
push
push
push
push
push
push
call
test
mov
add
add
out
add
add
add
add
add
add
add
sti
add
add
in
adc
lret
push
mov
push
iret
push
sub
pop
ret
push
push
push
push
push
push
push
push
lea
push
call
add
leave
add
add
iret
mov
js
icebp
nop
int3
add
add
add
insb
sub
pop
mov
push
push
push
push
lea
push
call
add
sahf
add
add
jp
aad
add
xlat
add
mov
jbe
test
xchg
pop
icebp
test
cli
add
add
test
add
add
int3
add
cld
mov
add
add
add
jnp
mov
add
add
mov
add
add
shlb
in
in
lcall
pop
hlt
add
push
push
push
lea
push
push
push
lea
push
call
rolb
pop
add
pop
add
add
cld
lcall
add
add
out
lret
int
flds
add
in
mov
add
jns
icebp
test
add
cmc
add
jae
cli
add
add
ret
add
add
push
push
push
push
push
lea
push
push
lea
push
push
call
call
jnp
lea
add
addl
add
ja
mov
add
mov
add
les
out
cli
cli
loopne
push
in
xchg
mov
fwait
add
sahf
mov
add
fwait
add
fcomi
push
iret
sub
pop
add
push
push
lea
push
push
push
push
push
push
push
push
call
cmpsb
add
leave
add
popf
out
mov
scas
push
push
hlt
add
mov
mov
jnp
mov
popl
add
pop
add
add
add
addl
push
push
add
add
out
add
lock
ret
out
pop
movsl
in
mov
mov
loop
add
mov
mov
add
pop
add
lret
lods
mov
into
stos
mov
call
out
lods
fildl
add
mov
pop
pop
js
lcall
add
out
add
add
icebp
add
fisubrl
leave
add
add
in
in
lcall
sbb
push
push
push
push
call
add
pop
add
add
sarb
add
jb
add
jb
mov
test
imul
add
test
lcall
les
jecxz
lahf
lods
push
rol
push
and
add
sub
sub
sub
pop
sub
dec
pop
push
push
push
push
push
call
add
add
mov
jp
lret
cmpsl
push
sbbb
jmp
add
mov
add
cld
add
add
add
movsl
notl
add
jbe
mov
lcall
jne
push
push
push
push
push
push
push
call
add
subb
add
filds
add
add
pop
push
jae
add
roll
jbe
jp
add
add
xchg
sub
pop
call
mov
push
push
push
push
push
push
push
call
add
xchg
loop
add
sbb
add
cmpb
add
xchg
mov
jae
stc
fsubrs
mov
add
pop
incb
sbbl
rcl
jp
fadds
imul
jno
pusha
out
mov
popa
sub
pop
movl
push
push
lea
push
push
push
push
push
call
leave
cmc
ret
scas
stc
mov
shlb
scas
add
add
jbe
add
jb
imul
pop
mov
lahf
fisubl
pop
add
fadds
lea
in
in
lea
push
push
lea
push
lea
push
push
call
add
outsl
add
add
out
call
add
nop
add
loopne
iret
test
push
test
add
jp
add
rcl
add
cld
mov
mov
add
shll
imull
add
cltd
add
lcall
push
push
push
push
push
call
add
shll
add
lock
push
fisttpl
imul
sahf
mov
in
in
pop
pushl
push
push
push
call
add
add
add
cwtl
xchg
testl
add
in
mov
push
add
mov
jp
test
push
add
add
add
add
icebp
fistl
add
mov
add
fs
jo
add
add
sub
pop
pushl
call
push
push
call
arpl
jmp
add
add
mov
push
push
loope
add
add
rolb
add
fdivl
out
add
add
jno
popf
add
lcall
jne
push
push
lea
push
push
push
lea
push
push
push
push
push
call
xchg
push
push
out
clc
push
add
cwtl
lahf
cmpl
lahf
stos
imul
lahf
insb
add
lds
popa
je
hlt
rcll
add
out
div
incb
insb
sub
pop
pushl
call
push
push
add
shl
push
xor
add
lea
sub
add
pop
not
inc
shl
add
pop
push
push
push
lea
push
call
nop
push
mov
add
ror
in
jns
scas
jp
call
add
mov
addb
add
add
cmpsl
mov
int
ja
aam
push
xchg
enter
mov
add
cli
jle
mov
movsl
aam
add
lds
mov
pop
pushl
call
push
push
push
push
push
push
push
push
lea
push
call
add
push
mov
add
popa
add
fadds
pop
mov
icebp
je
faddl
lret
fdivs
add
add
add
data16
mov
add
shrb
push
xlat
cld
sub
pop
push
push
push
xor
push
xor
add
shl
sub
sub
dec
sub
lea
pop
add
sub
sub
pop
push
push
push
push
push
push
push
call
retw
mov
add
xlat
add
add
add
xchg
add
loopne
lock
add
mov
std
in
rol
mov
in
in
lcall
push
push
lea
push
call
add
add
fiaddl
fadds
loopne
jp
add
add
insb
pop
movsl
push
add
mov
jmp
jbe
jno
cmpsl
add
add
in
hlt
lcall
add
je
lcall
sarb
push
push
call
jo
add
stos
movsl
add
out
add
fistpl
add
retw
pop
cli
add
mov
insb
out
icebp
add
add
out
add
lcall
add
mov
stc
loop
fdiv
je
sub
pop
call
mov
push
lea
push
lea
push
call
pusha
popf
push
push
add
in
lds
add
mov
add
add
je
add
add
add
push
xchg
sarl
lods
ret
hlt
push
pop
add
mov
mov
arpl
jp
popf
pop
jno
add
push
add
mov
add
add
add
xchg
add
shlb
pop
push
push
push
lea
push
lea
push
call
add
outsl
shrb
pop
jnp
fadds
add
mov
add
mov
lret
lods
add
mov
add
pop
int3
add
data16
add
xchg
ljmp
mov
fsubrs
imul
add
xchg
add
js
add
cmpsb
add
lret
mov
pushf
lea
lcall
pop
hlt
push
push
push
lea
push
push
call
outsl
imul
test
test
add
jle
cli
add
fwait
lahf
add
pop
add
mov
fildl
add
fadds
jecxz
shrb
pop
add
jmp
add
add
pop
je
add
int3
sub
pop
add
push
lea
push
push
push
lea
push
push
push
push
push
call
add
shr
jl
add
ret
lods
nop
add
mov
rolb
add
add
fs
lahf
add
add
jno
pusha
lea
add
out
pop
enter
xchg
rcrb
int
add
ljmp
pop
add
add
push
push
lea
push
push
push
push
push
push
lea
push
lea
push
call
add
stos
add
add
add
xlat
add
fiaddl
movb
frstpm(287
shrl
lret
fists
mov
mov
add
add
lret
jecxz
lods
add
cli
mov
add
js
fadds
mov
add
pop
mov
xor
push
lea
push
push
call
aam
ret
jmp
push
add
add
add
imul
push
mov
in
pusha
xor
add
data16
aad
add
cli
add
flds
add
mov
stos
add
add
jmp
lea
lcall
jne
push
lea
push
push
push
lea
push
call
rclb
fcomip
scas
pop
cld
add
pop
loop
arpl
add
add
jns
clc
frstor
loop
add
int3
stos
addl
cltd
scas
iret
add
add
mov
mov
add
xchg
add
fs
movb
add
mov
xor
push
push
push
lea
push
lea
push
call
add
mov
cmpsw
add
in
stos
iret
addl
add
pop
ja
mov
andb
fisubl
pop
push
popf
mov
xchg
jae
add
stc
push
lret
xchg
enter
pusha
add
pop
xlat
xchg
cmpsl
mov
in
in
pop
add
push
push
push
lea
push
lea
push
lea
push
lea
push
call
jae
add
jecxz
add
test
push
add
mov
fwait
add
jno
add
xchg
lcall
in
in
lcall
mov
xor
push
push
push
push
push
push
push
push
call
add
sahf
add
mov
pop
jnp
mov
push
fidivs
jnp
jne
fadds
into
add
add
add
mov
ffree
add
into
mov
cmpsb
add
add
push
push
push
lea
push
push
push
push
lea
push
lea
push
call
add
mov
mov
ja
in
add
cmc
xchg
out
movsb
lock
leave
push
push
mov
data16
add
js
add
add
mov
scas
std
add
in
scas
sub
pop
mov
xor
push
push
push
lea
push
push
push
push
lea
push
call
stc
add
xchg
pop
add
add
add
lahf
add
add
addr16
mov
fldenv
add
add
scas
add
test
add
add
imul
xchg
jl
xchg
enter
loopne
lcall
enter
sub
push
push
push
push
lea
push
call
add
popa
ja
addl
add
fistpll
iret
add
hlt
add
enter
fcomi
mov
popf
mov
add
ljmp
push
jecxz
add
jno
popl
xlat
les
add
add
jns
push
sub
pop
pop
rep
push
push
push
push
push
lea
push
lea
push
call
lds
add
pop
popa
stos
xchg
push
add
push
add
lret
add
xchg
mov
add
cli
enter
add
add
xchg
xchg
je
mov
in
in
lcall
push
push
push
push
push
push
push
push
push
call
add
mov
popf
xchg
sti
cli
jl
ljmp
movb
loop
xchg
test
fisubl
out
popf
add
jp
movsl
push
lret
push
add
add
fdivr
lcall
pop
hlt
push
push
push
lea
push
call
sti
add
add
lds
flds
popa
add
lds
mov
add
fnstenv
stos
mov
pop
push
cmpsl
add
mov
mov
sarl
lret
bound
add
scas
mov
add
sahf
lret
sub
pop
add
add
push
lea
push
push
push
push
push
push
push
push
push
call
add
add
lahf
add
add
push
push
test
shr
add
jne
jno
mov
lea
popl
add
sahf
mov
loop
movsb
add
lret
push
sub
pop
add
mov
push
push
push
call
mov
add
add
je
add
add
pop
bound
add
add
add
pop
fiadds
add
fildl
lods
sub
pop
xor
push
lea
push
push
lea
push
lea
push
push
push
push
call
add
add
popf
sti
add
lahf
jmp
out
xchg
stc
add
lods
int3
add
mov
pop
sub
pop
add
push
push
push
push
lea
push
lea
push
lea
push
lea
push
push
call
add
add
add
in
add
add
add
fldl
mov
add
add
ljmp
icebp
pop
roll
sub
pop
mov
xor
push
push
call
push
add
stos
mov
add
add
xchg
xchg
add
idivl
push
movb
sarl
add
mov
add
mov
pop
add
mov
mov
xchg
add
iret
fiaddl
add
xchg
out
filds
lcall
dec
sub
scas
push
lea
push
push
call
imull
iret
imul
fwait
roll
add
add
push
xchg
mov
add
scas
jmp
jge
lock
ficoml
rolb
lcall
ret
mov
mov
lea
push
lea
push
push
call
xchg
add
add
pop
lock
aam
aad
xlat
jns
add
stc
add
mov
mov
mov
test
push
add
add
mov
cwtl
sahf
scas
add
add
in
sub
pop
add
push
lea
push
push
push
push
lea
push
call
lcall
stc
push
jecxz
add
jnp
movsb
stos
sahf
scas
cmc
pop
fstl
add
add
add
add
cltd
iret
xchg
add
filds
sbb
add
aam
and
add
pop
pushf
lea
testl
add
lcall
jl
jns
addr16
pop
mov
push
push
add
push
and
add
sub
xor
sub
sub
add
rol
sub
pop
lea
sub
pop
push
push
lea
push
call
add
add
xchg
mov
fadds
add
cld
sahf
push
add
cwtl
jns
xlat
add
std
add
add
add
lcall
sahf
jmp
add
mov
cmc
nop
add
cmpsl
add
movsl
add
cli
add
sub
pop
pushl
call
push
shl
pop
push
push
push
shl
rol
push
sub
add
xor
inc
sub
shr
pop
ror
lea
pop
push
lea
push
push
lea
push
call
int
mov
mov
add
lret
jns
add
rorl
mov
mov
into
add
add
out
xchg
nop
bound
add
fiadds
out
movsl
mov
add
push
push
rol
add
pop
push
call
push
push
push
push
push
call
add
lcall
add
xchg
add
add
add
add
mov
add
add
pop
jne
je
add
arpl
ja
pop
out
lret
mov
pop
imul
in
lcall
clc
push
sub
pop
push
push
push
push
push
lea
push
lea
push
push
push
push
call
xlat
xlat
jmp
xlat
les
pop
rolb
add
roll
xchg
add
add
add
add
jecxz
loop
add
add
sub
pop
mov
push
push
lea
push
push
push
lea
push
push
push
push
call
mov
iret
push
outsl
add
jbe
add
fcoml
frstor
scas
gs
lahf
add
mov
add
add
add
movsb
add
push
pop
add
incb
add
add
imul
add
mov
sub
pop
add
add
push
add
rol
shl
add
pop
add
push
xor
add
pop
mov
xor
push
push
call
add
add
jne
lods
add
add
shrl
test
in
ljmp
nop
add
add
bound
test
add
add
add
mov
add
add
mov
pop
add
push
push
push
call
popa
call
ficomps
scas
js
jno
add
add
add
add
imul
add
push
add
outsl
gs
std
add
mov
add
sahf
sub
pop
mov
xor
push
push
push
push
push
lea
push
call
xchg
add
icebp
gs
add
int
pop
xchg
add
pushf
push
add
lea
add
push
stc
add
jmp
cwtl
xchg
lret
mov
add
mov
fidivl
sub
pop
add
push
xor
shl
sub
pop
pop
push
push
push
push
lea
push
push
push
lea
push
call
mov
add
add
lahf
add
movsl
sahf
add
xchg
mov
pop
add
pusha
pop
xchg
movsb
les
add
lcall
dec
and
scas
push
push
push
push
push
call
add
scas
loope
add
pop
add
lds
add
iret
ret
pushf
pop
add
popf
add
ljmp
out
add
lcall
lcall
test
add
stos
iret
jl
sub
pop
rep
push
push
push
call
add
scas
add
loope
rolb
mov
popf
addl
loopne
test
jge
push
add
addr16
add
lds
add
add
mov
cltd
mov
lock
flds
cmpsb
jbe
cld
add
sbbl
jmp
test
fwait
mov
xchg
aam
scas
add
add
sub
pop
mov
xor
push
push
lea
push
push
lea
push
push
push
push
push
lea
push
call
hlt
jp
jns
sti
add
pop
mov
jno
push
ret
mov
pop
mov
rcrl
add
outsl
push
add
mov
mov
add
fldl
jmp
sub
pop
or
je
mov
xor
push
inc
ror
add
pop
mov
xor
push
sub
pop
add
push
sub
ror
add
shr
pop
add
push
inc
inc
add
pop
push
push
shr
dec
pop
mov
xor
push
push
push
push
push
call
mov
outsl
fidivl
mov
sahf
push
pop
add
aad
incb
add
add
test
mul
add
add
cmc
add
fwait
mov
add
add
pop
cli
stos
add
jae
mov
add
test
jle
pop
add
cwtl
filds
lock
lea
push
lea
push
lea
push
push
push
push
call
in
mov
lods
pusha
js
push
bound
mov
add
rolb
xlat
mov
jb
mov
add
add
push
xor
rol
ror
inc
pop
rep
push
lea
push
push
lea
push
push
push
push
lea
push
lea
push
call
add
test
fiadds
cwtl
add
add
addb
add
add
add
add
nop
jbe
idivb
mov
xlat
add
movsl
add
add
add
add
mov
pop
mov
xor
push
add
pop
or
je
push
add
shr
lea
pop
mov
push
push
call
add
add
mov
add
movsb
add
push
add
arpl
loope
fistpl
cmpsb
repnz
cwtl
sarl
add
test
icebp
add
bound
js
sub
pop
add
push
shr
sub
lea
pop
add
rep
push
lea
push
push
push
lea
push
call
add
fiaddl
add
add
add
add
lcall
mull
mov
aad
add
lock
add
test
rcll
add
ja
push
mov
in
in
lcall
push
push
add
push
xor
add
shl
shr
sub
pop
shl
add
add
ror
pop
push
add
pop
pop
push
rol
shl
dec
pop
mov
push
push
push
push
lea
push
push
lea
push
lea
push
call
mov
stos
andb
mov
popf
add
push
jp
add
in
add
xor
xchg
ja
jl
add
add
lcall
insl
hlt
push
inc
sub
pop
mov
push
add
xor
ror
inc
pop
jmp
push
shr
add
dec
pop
push
mov
push
push
push
push
call
push
pop
mov
lret
add
jl
add
add
jle
jmp
fildl
adcb
jbe
lock
lahf
loop
lret
test
add
mov
add
bound
nop
add
add
jmp
xchg
add
lea
imul
add
add
stos
push
sub
pop
add
push
push
push
push
push
push
push
push
lea
push
push
call
mov
mov
pop
add
in
add
data16
ja
pusha
add
out
add
add
aad
outsl
push
cmpsl
faddl
mov
cmc
rcll
cmpsl
add
shl
add
add
mov
pop
shll
sub
pop
push
push
rol
pop
push
push
push
push
lea
push
push
push
call
cmpsb
lods
add
mov
add
popl
sti
jae
movsb
pushf
jne
jecxz
xlat
mov
rcl
jl
add
add
xchg
add
add
insb
sub
pop
push
push
push
push
push
push
push
push
call
nop
fldt
lods
mov
addb
xchg
test
xchg
add
sar
pop
cld
add
add
cwtl
add
stos
mov
cmpsl
add
mov
addb
call
xchg
push
add
fnstcw
add
add
in
lcall
push
rol
sub
inc
ror
pop
mov
pop
push
lea
push
push
push
push
push
call
add
stos
add
mov
nop
mov
leave
cli
jne
movb
lcall
test
pop
jp
movb
pop
addl
xchg
jno
out
test
mul
jge
in
shrb
stos
add
pusha
mov
test
push
dec
xor
add
pop
pop
pop
push
push
push
push
call
add
cmpsb
jle
mov
fstl
pop
fadds
test
add
add
push
add
add
mov
xchg
push
add
rolb
loopne
cmpsb
add
add
fwait
add
ret
fdivrp
add
add
xchg
lcall
ret
push
lea
push
push
push
push
push
push
push
push
push
call
lods
movb
add
add
in
std
notb
add
test
lods
into
mov
icebp
add
in
jge
jle
xchg
push
std
xchg
lods
add
icebp
cltd
push
jge
add
xchg
add
add
add
mov
faddl
add
test
in
fcomps
mov
push
push
lea
push
lea
push
call
xchg
stos
jo
add
mov
xchg
roll
add
xchg
mov
out
push
std
add
lock
addb
aam
add
xchg
jae
add
add
loopne
add
mov
add
push
push
lea
push
push
push
push
push
push
push
call
add
rolb
cwtl
lret
fadds
fsubrs
addl
scas
mov
add
mov
add
mov
in
fdivr
lcall
push
lea
push
push
call
mov
add
les
andl
add
add
xlat
cmpsb
fists
stos
loopne
fadds
add
add
add
jno
js
add
out
imul
iret
add
add
popf
xchg
push
xchg
add
push
add
add
imul
pop
push
push
push
push
push
push
push
call
nop
push
insb
add
cwtl
add
std
add
clc
jnp
mov
add
add
add
imul
push
lahf
add
mov
add
popa
shl
in
add
stos
add
push
fiaddl
cwtl
std
cmpsl
fstpl
add
add
xchg
mov
fidivl
fdivl
out
sub
pop
push
push
sub
shr
pop
movl
push
push
lea
push
push
call
fldenv
mov
add
out
add
roll
add
hlt
mov
lods
popf
mov
lcall
inc
clc
incl
add
add
adc
lea
push
push
push
push
call
mov
add
add
add
add
cltd
int3
add
mov
arpl
add
jae
pop
jmp
add
lea
pop
int3
int3
add
add
jp
icebp
add
lcall
inc
or
sti
push
out
push
push
lea
push
call
popf
add
je
add
add
incb
add
into
jns
mov
add
pop
stos
xlat
addb
push
add
add
mov
lcall
cmc
add
pop
sti
mov
add
lods
sti
sub
pop
pop
pop
push
push
lea
push
push
call
addl
xchg
xchg
jge
popa
mov
add
fwait
mov
call
out
jge
push
mull
add
lahf
std
jecxz
add
bound
je
add
loope
add
add
mov
sub
pop
pop
pop
push
sub
add
pop
leave
ret
push
add
pop
push
push
shr
add
pop
mov
add
push
rol
add
lea
pop
push
push
push
push
push
push
lea
push
push
call
add
addr16
push
mov
popf
fucomip
add
mov
add
add
xchg
jo
movsl
add
lahf
fsts
popa
add
enter
jbe
add
mov
mov
add
roll
add
js
jle
out
mov
lcall
push
dec
lea
pop
push
push
xor
inc
pop
testl
addl
push
push
push
push
call
in
add
pop
jge
mov
add
mov
mov
add
add
cli
addr16
xlat
out
cmpsb
xchg
mov
test
stc
mov
cltd
repnz
add
mov
pop
fadds
add
add
addr16
sub
pop
push
push
rol
sub
lea
sub
pop
call
push
push
push
call
add
add
add
add
add
add
add
push
out
aam
mov
stc
fbld
add
add
jb
cwtl
add
add
add
test
imul
add
add
sub
pop
mov
push
lea
shr
shr
pop
pushl
push
push
xor
rol
pop
push
push
push
push
call
add
add
cld
cld
les
enter
mov
add
lock
jae
mov
xlat
test
add
std
fidivl
lds
testb
mov
mov
shll
add
mov
ret
mov
add
jle
jge
sub
pop
call
push
add
sub
xor
pop
cmpl
jne
push
push
push
push
lea
push
push
push
call
add
lahf
add
fidivl
push
jmp
loope
into
xlat
js
lock
nop
add
cld
mov
push
pushf
add
mov
mov
popf
add
filds
lcall
pop
push
add
pop
pop
push
push
push
lea
push
push
call
je
scas
stos
add
pop
mov
push
cwtl
add
add
les
rolb
add
mov
mov
cmc
mov
mov
add
jle
sub
pop
pop
push
push
push
push
push
push
push
call
loop
add
fldt
push
fnstsw
add
repnz
addl
push
pop
add
sub
pop
leave
ret
push
push
push
lea
push
push
lea
push
push
call
add
imul
imul
imull
add
xchg
add
popl
mov
jno
jecxz
mov
add
add
in
jb
in
xchg
test
cwtl
fwait
mov
mov
enter
lds
xchg
test
add
addb
add
mov
out
addl
mov
mov
add
in
lcall
push
push
push
push
push
lea
push
call
add
lcall
stos
mov
rcr
lock
icebp
mov
mov
jo
xchg
add
add
stos
add
fcoml
add
lds
out
into
outsl
add
add
pusha
jl
add
in
call
mov
push
shr
pop
add
push
push
sub
pop
push
push
pop
push
push
push
push
push
push
call
fiaddl
sbbb
add
add
jge
out
mov
push
add
sahf
imul
add
add
test
in
in
pop
push
push
not
pop
movl
push
push
shr
pop
call
push
push
lea
push
call
push
jl
mov
add
mov
add
cmpsb
mov
scas
add
fidivrs
arpl
add
pop
shrl
mov
test
add
mov
rol
clc
fidivrs
in
hlt
pop
push
push
push
push
push
push
push
lea
push
push
lea
push
push
call
add
add
jmp
mov
add
fcompl
in
xchg
loop
in
gs
scas
add
jnp
imul
movsb
pop
leave
addl
cmpsb
xchg
call
pop
push
add
xor
cld
scas
add
sahf
loopne
mov
lcall
add
in
add
push
hlt
sub
pop
call
push
lea
pop
subl
cmpl
jne
push
not
pop
pop
push
push
push
lea
push
push
push
push
push
push
call
add
xchg
fldl
add
add
in
add
add
addl
cwtl
loopne
add
fnstenv
mov
add
push
rol
add
pop
pop
push
lea
push
call
lods
lods
pop
mov
testb
lret
subl
add
movsb
add
lods
lret
mov
nop
cmpsb
jle
add
add
loopne
stos
enter
add
mov
movb
sub
pop
pop
push
push
push
push
push
push
push
call
pusha
in
sahf
out
add
add
push
mov
jae
add
bound
aam
mov
add
fisubl
addr16
xchg
movsb
add
lret
mov
add
add
je
add
add
lcall
push
ror
inc
not
pop
ret
push
inc
sub
rol
pop
push
push
ror
shl
pop
mov
push
push
push
push
push
push
push
call
push
sahf
add
add
pop
mov
add
add
add
in
in
add
xchg
lret
add
add
add
add
add
hlt
add
loope
mov
sarl
add
imul
in
add
push
lea
push
push
call
pop
test
mov
shl
add
aad
mov
push
mov
add
xchg
mov
add
pusha
add
mov
sti
pop
add
add
add
add
add
add
addb
xchg
add
mov
in
hlt
pop
push
push
lea
push
push
lea
push
lea
push
call
mov
repnz
push
add
lds
add
shrb
add
popf
push
add
mov
ja
mov
ja
movl
add
add
test
xchg
push
add
mov
push
add
lods
mov
sub
pop
push
push
push
push
call
je
jge
pusha
push
test
add
icebp
add
xlat
xchg
mov
mov
add
push
imul
add
pop
out
pop
scas
push
roll
add
mov
add
les
pop
sub
pop
push
push
push
push
inc
push
or
inc
add
inc
sub
xor
add
sub
dec
pop
not
xor
shl
shr
pop
push
push
lea
push
lea
push
push
push
push
lea
push
push
call
popa
cmpsb
add
lds
mov
pop
loop
add
add
add
add
add
mov
call
cmc
add
push
lods
lret
loop
add
add
aam
add
jne
push
shl
lea
rol
shr
pop
call
push
lea
push
push
push
push
push
push
push
lea
push
lea
push
call
add
add
add
hlt
add
mov
je
mov
add
sti
add
shl
sahf
add
add
out
pop
aam
js
add
pop
add
jecxz
add
xchg
fwait
push
xchg
add
add
add
mov
fcomps
rorb
pusha
push
push
push
push
push
lea
push
push
lea
push
call
enter
add
mov
mov
lds
add
push
data16
add
xchg
fiaddl
testl
pop
add
xchg
mov
out
add
add
fildll
fdivs
pop
lods
add
add
add
pop
sub
pop
lea
push
push
push
push
call
pusha
cmpb
leave
in
iret
mov
sahf
pusha
test
add
add
jnp
add
call
stc
xchg
insb
in
add
add
lods
xchg
mov
add
mov
add
add
lcall
call
lea
push
push
push
call
pop
mov
mov
add
std
add
add
add
pop
movsl
sar
add
add
test
vpsubd
xchg
pop
imul
add
add
testb
pop
shr
push
rol
not
pop
add
push
push
push
push
push
call
add
add
shlb
jno
cld
add
rcrb
loopne
lret
std
fiaddl
mov
scas
jecxz
ljmp
add
add
iret
pop
clc
fidivrl
jle
aam
pop
add
rclb
add
add
mov
lock
sub
pop
mov
push
lea
push
lea
push
push
push
call
sahf
movsl
call
loopne
add
push
add
lret
add
dec
std
js
shrl
mov
shll
jmp
mov
sahf
fistps
lcall
andb
dec
xchg
pop
add
push
push
push
push
call
mov
add
test
test
insb
sahf
clc
out
xchg
ljmp
xchg
mov
push
sti
movsb
bound
add
imul
loopne
lcall
inc
or
shlb
pop
mov
mov
push
inc
pop
cmp
jne
push
ror
add
not
sub
pop
cmp
jne
push
push
push
push
push
call
add
cltd
mov
sbb
data16
add
jne
jnp
cmpsb
fwait
jo
call
add
cmpsl
js
add
test
add
xchg
jle
xchg
add
data16
nop
jns
pop
jecxz
pop
stos
push
movsb
add
lcall
inc
adc
dec
pop
movl
push
ror
add
pop
jmp
push
push
push
call
loopne
mov
mov
je
shlb
fldl
add
add
add
jp
add
int3
pop
imul
add
mov
add
popfw
cwtl
lret
xchg
sub
pop
mov
mov
push
add
pop
sub
jne
push
push
call
stos
mov
mov
pop
mov
push
xchg
imul
addl
lods
add
xchg
add
add
add
sub
pop
mov
movl
push
push
lea
push
lea
push
push
push
push
push
call
mov
pop
add
movsl
fwait
add
push
addl
add
in
mov
fs
jmp
add
xchg
andb
add
test
add
add
mov
add
aad
jns
add
add
movsl
xchg
add
add
add
lahf
xchg
into
cmc
add
add
add
jmp
rcll
xchg
lret
add
add
inc
or
add
push
push
push
push
lea
push
lea
push
push
call
cltd
mov
add
jmp
movsb
fadd
jmp
add
add
test
fwait
add
add
xchg
add
add
add
add
call
nop
mov
clc
add
outsl
in
sub
pop
mov
push
push
push
push
push
call
jmp
add
incb
cli
mov
test
push
push
add
add
mov
add
adcl
add
add
mov
mov
add
jae
popf
add
xchg
add
mov
test
sub
pop
mov
cmp
jne
push
add
pop
mov
push
shr
pop
movl
jmp
push
ror
rol
sub
pop
mov
push
not
add
lea
shl
pop
cmpw
jne
push
inc
shl
dec
pop
mov
push
shr
pop
movl
push
lea
pop
jmp
pushl
push
sub
rol
pop
pop
push
push
lea
push
lea
push
push
push
call
xchg
add
imul
add
gs
out
ret
add
add
add
xchg
iret
push
lea
add
mov
shr
add
lcall
inc
or
inc
sbb
push
lea
push
push
push
call
push
mov
jmp
fs
mov
jp
add
add
push
pop
ljmp
mov
add
add
mov
jbe
sub
pop
mov
push
push
not
ror
rol
push
xor
add
inc
sub
lea
rol
pop
rol
pop
push
push
push
lea
push
push
call
add
add
xchg
lahf
add
add
push
imul
lock
xchg
add
lds
imul
add
add
stos
add
mov
push
add
leave
popa
add
ret
mov
test
in
in
pop
push
call
push
sub
lea
pop
cmpl
je
push
push
add
add
shr
push
push
pop
add
shl
xor
lea
sub
inc
pop
sub
pop
push
push
lea
push
call
add
add
push
hlt
fdivr
ror
test
add
add
add
add
add
add
into
add
pushf
push
add
add
mov
add
test
add
iret
incb
js
add
lret
mov
push
add
pop
jne
jns
add
add
scas
addr16
insb
in
popl
mov
hlt
pop
push
push
push
push
push
call
jb
add
leave
fists
add
mov
add
add
fildl
add
add
push
push
fld
add
pop
add
xchg
pop
mov
mov
push
in
mov
ficompl
add
add
jp
push
js
in
lock
call
push
push
push
lea
push
lea
push
lea
push
push
call
push
mov
in
add
lret
repnz
xchg
aam
add
shlb
mov
jmp
into
jo
add
cltd
imul
pop
sub
pop
cmpl
je
push
push
lea
ror
push
or
not
add
dec
add
shr
sub
pop
lea
sub
not
pop
push
push
push
push
lea
push
lea
push
push
push
push
push
call
jo
add
add
sbbb
scas
push
add
xchg
xchg
mov
add
add
test
fsubs
fdivr
lcall
push
ror
sub
pop
call
push
inc
rol
sub
pop
cmpl
je
push
push
not
inc
shl
push
sub
add
ror
sub
rol
sub
sub
xor
inc
sub
pop
dec
sub
shl
pop
push
lea
push
lea
push
push
push
lea
push
lea
push
push
push
push
call
std
pop
int
add
outsl
xor
add
add
out
add
add
push
jae
js
add
int
add
fstpt
call
in
out
js
clc
add
iret
flds
pop
push
call
push
ror
pop
cmpl
je
push
push
sub
add
push
or
inc
add
ror
sub
sub
shl
pop
add
sub
pop
push
rol
inc
lea
pop
push
push
dec
sub
pop
call
push
push
push
push
push
lea
push
lea
push
push
push
lea
push
call
addb
add
add
xchg
popl
outsl
pop
jns
lret
add
out
cmpsb
push
call
jnp
pusha
add
mov
fiadds
pop
push
fsubrp
push
jo
ljmp
lods
sti
sub
pop
cmpl
je
push
push
add
lea
ror
shl
push
or
inc
add
rol
xor
sub
ror
pop
add
add
add
sub
pop
push
sub
pop
push
push
push
call
in
add
scas
add
mov
neg
fwait
xchg
pop
add
add
mov
out
orb
lahf
int3
testl
add
cmc
mov
call
add
jb
add
push
push
fsubrl
sti
mov
loop
add
mov
lock
pop
call
cmpl
je
push
push
rol
push
and
add
xor
sub
ror
sub
add
xor
inc
pop
lea
pop
push
lea
pop
push
call
push
add
pop
cmpl
je
push
push
shl
add
add
add
push
push
pop
add
sub
sub
sub
sub
pop
lea
pop
push
push
call
pop
cmpsl
add
add
add
pop
movsl
push
add
imul
mov
insb
add
sub
pop
push
push
rol
shr
pop
call
push
lea
push
push
push
lea
push
push
push
push
call
add
mov
mov
add
addb
mov
add
add
add
jecxz
jae
test
add
cld
rol
add
add
jb
add
add
imul
add
ja
outsl
add
sub
pop
cmpl
je
push
push
xor
push
push
pop
add
dec
sub
sub
pop
xor
add
sub
xor
pop
push
not
xor
shl
pop
push
push
lea
push
push
lea
push
push
push
push
lea
push
push
push
call
add
add
add
out
add
out
add
in
fiaddl
add
add
cld
ret
add
add
mov
lock
add
add
fiadds
shrb
mov
add
clc
add
add
add
lcall
push
lea
push
push
call
mov
jmp
add
scas
mov
pop
jecxz
loopne
add
popa
add
mov
add
add
hlt
lcall
js
jmp
les
je
push
push
inc
not
push
xor
add
shr
inc
sub
not
pop
shr
rol
pop
push
push
push
lea
push
push
lea
push
push
call
stos
scas
add
in
mov
xchg
out
mov
pop
add
add
cmc
arpl
push
jecxz
add
ljmp
pop
pushfw
pop
in
add
jp
pop
cltd
incb
xlat
add
add
add
mov
in
in
lcall
push
push
push
lea
push
lea
push
call
add
cltd
mov
mov
add
add
cmpsl
add
add
loopw
lret
sti
add
add
jmp
add
pop
fsubs
lock
sahf
addb
add
add
call
cmpl
jne
push
dec
pop
mov
movl
push
push
push
lea
push
push
push
push
lea
push
call
mov
out
add
leave
mov
add
je
stos
lds
jl
jbe
in
push
add
add
mov
add
add
add
movsl
loop
add
add
push
shlb
xchg
xchg
mov
loopne
jmp
xor
push
sub
inc
pop
pop
push
xor
pop
pop
push
push
push
push
lea
push
call
push
add
in
add
imul
add
std
lea
add
pop
lock
add
add
test
ljmp
push
cmc
add
add
add
add
fstl
nop
add
ljmp
lds
add
jne
ficomps
aam
pop
sub
pop
pop
pop
push
rol
dec
pop
leave
push
push
push
push
call
aad
add
ljmp
xchg
mov
fstl
pop
addb
xchg
fcoml
lcall
test
in
icebp
push
add
push
out
pop
test
lret
insb
xchg
add
lcall
or
push
push
lea
push
lea
push
push
call
add
pop
xchg
add
add
outsl
jae
cmp
add
jno
fcomp
add
in
jae
int3
add
add
jl
gs
push
xchg
sub
pop
mov
push
pop
add
cmpl
jne
push
push
shl
add
push
and
add
not
add
inc
sub
pop
sub
pop
push
inc
pop
pushl
call
push
xor
pop
push
push
push
lea
push
lea
push
push
push
push
call
pop
ljmp
out
add
pop
ret
add
adc
mov
mov
movsl
push
shlb
rclb
mov
and
add
add
aad
clc
add
xchg
sub
pop
call
push
rol
dec
shr
rol
pop
jmp
push
inc
add
add
pop
cmpl
jne
push
sub
shr
add
pop
mov
push
push
call
jns
add
mov
mov
fdivr
xchg
mov
add
jmp
add
add
add
add
pop
int
stc
add
addb
add
push
mov
lcall
adc
push
push
push
lea
push
push
push
push
push
push
push
call
pop
cld
mov
cld
add
add
test
mov
insb
outsl
add
add
add
xchg
add
clc
jns
add
jle
sub
pop
jmp
cmpl
jne
push
push
lea
add
push
or
not
add
inc
rol
sub
lea
pop
inc
pop
push
lea
push
push
lea
push
push
call
jecxz
shll
lcall
enter
movl
fstpl
jp
mov
jle
movsb
add
jl
lods
arpl
jbe
add
add
test
data16
cmpsl
add
add
sub
pop
pushl
push
xor
pop
call
push
inc
dec
pop
push
push
push
push
push
push
push
push
push
call
add
add
std
filds
mov
add
pop
add
xchg
jb
add
add
add
add
push
add
call
jmp
push
lea
sub
pop
cmpl
je
push
shl
xor
rol
pop
cmpl
jne
push
lea
sub
sub
rol
pop
mov
push
dec
sub
pop
mov
push
lea
push
push
lea
push
push
push
call
icebp
add
fdivl
cltd
outsl
subb
call
add
push
movsl
jb
lods
xchg
mov
push
mov
add
cli
add
sarb
mov
lds
fildl
in
fdiv
add
loop
add
jp
sub
pop
push
push
not
lea
pop
jmp
push
push
shl
push
or
not
add
rol
sub
shl
pop
sub
pop
push
push
lea
push
push
push
push
lea
push
push
call
add
testl
sbbl
fnstenv
add
jmp
lock
add
out
push
addb
xchg
add
add
sarb
cmpsb
cwtl
xchg
add
jne
push
rol
sub
not
rol
pop
call
call
push
push
add
not
inc
push
or
inc
add
shr
sub
sub
shr
rol
shl
add
pop
shl
not
add
pop
push
push
lea
push
push
push
push
push
call
cli
add
add
jne
mov
add
add
nop
pop
test
add
fiaddl
fadds
stos
cld
loopne
add
mov
jmp
add
mov
filds
add
add
in
sar
xchg
aad
add
imul
add
lea
add
jne
push
lea
dec
pop
call
push
lea
push
push
lea
push
push
push
push
push
push
push
call
shl
jbe
cmpl
in
xchg
mov
jbe
movsb
in
fstps
push
add
add
add
jnp
add
mov
xlat
add
loopne
imul
lret
scas
jno
push
add
roll
repnz
add
add
ja
add
shrb
jle
push
push
rol
shr
push
or
inc
add
sub
add
sub
pop
lea
xor
pop
push
shl
sub
pop
pushl
push
push
push
push
push
push
lea
push
push
push
push
call
ljmp
xchg
jmp
add
mov
push
add
mov
mov
cwtl
stos
cmpsl
mov
popa
jl
int
add
shlb
add
mov
add
popa
add
mov
add
pop
nop
hlt
sub
pop
call
call
push
push
sub
sub
push
and
add
add
add
rol
sub
inc
add
dec
pop
xor
pop
push
push
lea
push
push
push
lea
push
call
fists
enter
pop
fadds
lods
add
cltd
add
aad
jne
mov
mov
add
push
pop
out
push
add
add
cmc
mov
add
xor
add
add
sub
pop
pushl
call
push
add
not
pop
call
push
push
ror
push
push
pop
add
inc
not
sub
sub
pop
sub
add
pop
push
rol
xor
pop
pushl
push
not
pop
call
push
push
call
mov
push
test
fistl
loope
mov
mov
addl
add
sub
pop
call
push
push
xor
add
sub
shl
push
xor
add
lea
shl
shl
sub
ror
pop
pop
push
push
push
push
lea
push
push
call
mov
stc
add
mov
mov
lds
pop
add
mov
in
idivb
add
in
add
test
mov
mov
add
add
lea
add
mov
push
mov
add
cmc
xchg
mov
xchg
std
je
add
add
pop
pushl
push
shr
shr
pop
call
push
push
call
outsl
sahf
add
add
mov
fisubs
cmpsl
mov
add
out
roll
add
fdiv
add
xchg
add
icebp
add
lea
add
add
add
add
add
xchg
add
jae
add
fistpl
fwait
iret
loopne
mov
add
pop
mov
add
lcall
shrb
test
push
sub
push
sub
add
xor
sub
sub
ror
sub
pop
not
add
lea
pop
push
dec
shl
rol
pop
pushl
push
sub
sub
pop
call
call
push
push
inc
dec
sub
push
sub
add
ror
sub
add
lea
pop
sub
rol
pop
push
push
push
lea
push
push
call
fidivl
add
roll
out
lods
mov
add
add
int
insb
add
ret
mov
add
lcall
jne
push
push
push
push
push
lea
push
push
lea
push
push
call
add
clc
lods
shl
test
adc
add
mov
xlat
jmp
push
rolb
lcall
scas
je
add
cltd
xchg
test
lods
mul
add
test
imul
in
fcompl
imul
xor
add
xchg
mov
cltd
rolb
fsubl
pop
add
add
add
push
lcall
filds
je
add
call
in
clc
lcall
shrb
adc
or
xor
push
push
pop
add
rol
rol
ror
dec
sub
shr
shr
pop
ror
shl
pop
push
add
lea
pop
pushl
call
push
inc
add
pop
call
push
push
sub
shl
push
push
pop
add
rol
sub
rol
pop
not
rol
lea
pop
push
not
add
inc
pop
pushl
push
not
xor
sub
inc
pop
call
push
shr
add
pop
lea
push
lea
push
push
push
push
call
lods
out
jle
pop
ja
mov
pop
jmp
add
popa
xchg
fadds
add
stos
add
lahf
lret
jae
jne
mov
test
cmp
scas
cld
add
add
add
mov
in
in
pop
push
call
push
push
inc
xor
lea
push
and
add
sub
sub
pop
sub
pop
push
xor
shl
pop
pushl
call
push
push
lea
push
push
call
add
add
pop
mov
movsl
add
xchg
rcrb
fwait
pop
fadds
add
cmc
push
push
add
add
add
fcomi
outsl
mov
pop
cmpsl
movsl
mov
add
pop
lcall
add
out
sub
pop
call
push
push
sub
add
push
push
pop
add
sub
inc
shr
sub
add
pop
shl
pop
push
rol
sub
pop
pushl
call
push
lea
push
push
lea
push
push
lea
push
push
push
call
add
add
add
cmpsl
insb
fldl
add
bound
add
jmp
add
mov
jae
add
mov
add
add
cltd
add
lcall
shrb
mov
leave
adc
int
and
add
sub
sub
not
add
sub
inc
pop
xor
pop
push
push
push
push
call
add
add
add
xchg
add
jl
mov
xchg
add
xchg
push
add
lahf
add
xchg
xchg
incb
in
mov
jne
xchg
pop
pop
test
cwtl
add
out
pop
add
jp
add
lahf
add
loop
mov
int3
add
xacquire
iret
xchg
in
lock
lcall
jne
push
inc
inc
pop
call
push
add
pop
call
push
push
lea
ror
push
sub
add
shl
sub
inc
sub
shr
inc
pop
ror
dec
rol
add
pop
push
push
lea
push
lea
push
push
push
push
push
lea
push
lea
push
call
cli
add
mov
add
push
movsb
mov
jle
in
add
lret
imul
pop
fldl
pop
add
mov
push
loopne
add
fs
add
add
mov
mov
add
sub
pop
pushl
call
push
push
not
ror
lea
push
and
add
not
sub
rol
pop
dec
pop
push
push
sub
shr
ror
push
push
pop
add
add
not
sub
shl
pop
pop
push
not
shl
pop
call
push
lea
dec
pop
pop
push
sub
add
pop
dec
jne
push
push
lea
push
call
mov
mov
pop
add
add
gs
or
add
cltd
add
pop
faddl
sub
add
mov
add
add
test
je
add
iret
add
lret
add
mov
fisubrs
in
hlt
pop
call
push
xor
lea
ror
pop
mov
push
push
lea
push
push
push
push
push
push
call
icebp
neg
in
add
jmp
mov
out
mov
add
add
add
add
testb
out
jmp
test
xchg
lods
jle
mov
in
loopne
int
push
lea
push
push
lea
push
lea
push
push
push
push
lea
push
call
fiadds
add
xchg
add
push
fwait
add
fistpl
xchg
add
subl
fidivl
add
sti
data16
movsb
push
mov
pop
iret
add
jl
int3
add
xorb
add
fcompl
pushf
and
ljmp
bound
push
push
pop
add
sub
sub
inc
add
ror
shr
pop
shl
pop
push
push
lea
push
push
push
push
push
push
call
sti
mov
add
add
rolb
mov
stc
mov
icebp
xchg
mov
add
push
mov
cmpsb
add
add
lea
add
add
stc
mov
push
shl
add
add
sub
pop
pushl
call
push
dec
lea
pop
push
push
push
push
push
push
lea
push
push
push
call
add
add
imul
xchg
int
lret
push
icebp
add
arpl
pop
jns
movsb
jo
sub
mov
lret
nop
lcall
cwtl
mov
mov
add
add
in
loopne
call
push
push
add
sub
push
xor
add
sub
xor
ror
pop
xor
sub
add
pop
push
xor
pop
pushl
call
push
push
lea
push
push
lea
push
push
push
call
jp
rolb
pop
jo
add
add
add
add
leave
add
add
movsb
add
add
in
mov
idivl
aad
push
mov
rorl
add
add
rclb
not
pop
mov
push
push
call
add
add
ror
mov
aad
out
in
scas
mov
out
add
add
add
jmp
shll
sub
pop
lea
push
push
inc
push
or
not
add
sub
sub
shr
pop
pop
push
push
push
push
call
add
idivb
pushf
jle
flds
push
lahf
in
cmp
stos
add
jge
scas
add
mov
divl
add
mov
movsl
add
add
sub
pop
pushl
call
push
push
call
add
push
mov
add
add
out
push
add
mov
fsubr
mov
jle
cmpsl
mov
mov
add
in
jnp
loope
xchg
sti
add
add
lahf
add
add
popa
mov
data16
add
mov
add
add
sub
pop
lea
push
push
lea
push
push
call
add
mov
push
add
xlat
add
lods
mov
add
add
scas
je
insb
adcl
add
movsb
icebp
add
xchg
pop
add
aam
mov
repnz
lret
add
imul
pop
push
push
ror
pop
push
push
ror
inc
not
pop
push
push
add
lea
add
pop
pushl
push
push
shr
sub
shl
push
xor
add
shl
sub
shr
inc
pop
inc
sub
ror
add
pop
push
lea
push
push
push
push
lea
push
call
cmpb
addr16
stos
mov
add
sti
lea
lcall
gs
add
movsl
scas
jp
add
push
pop
add
xlat
mov
leave
add
mov
ljmp
aad
mov
mov
lcall
push
ror
sub
dec
sub
pop
call
push
push
add
shl
push
or
inc
add
sub
shr
sub
sub
dec
pop
xor
dec
lea
pop
push
shl
sub
pop
pushl
push
lea
push
push
lea
push
lea
push
push
call
stos
add
scas
testb
add
xchg
cltd
out
addr16
add
pop
add
jecxz
add
add
add
movsl
pop
lea
arpl
push
add
add
mov
leave
jne
xchg
flds
add
lret
add
movsb
jo
shr
mov
add
mov
push
add
in
call
call
push
push
ror
not
pop
call
push
push
ror
shl
sub
inc
push
or
not
add
shr
shl
sub
sub
shr
sub
pop
add
pop
push
rol
not
rol
pop
pushl
call
push
xor
ror
pop
call
pushl
push
lea
push
push
push
push
push
call
movsb
jns
add
leave
addl
scas
sahf
add
rolb
add
rcrl
in
jae
mov
add
add
loopne
jle
push
sar
add
icebp
add
add
addl
mov
in
mov
aad
add
xchg
cmpsb
lods
add
jecxz
xchg
add
lcall
mov
push
push
push
lea
push
lea
push
push
lea
push
call
jb
add
into
jb
mov
subl
add
add
add
loop
add
enter
lret
mov
icebp
add
push
std
push
add
mov
add
fsts
add
add
pop
rolb
push
sub
pop
jmp
push
push
shr
xor
shl
push
or
inc
add
add
xor
sub
inc
pop
lea
add
not
not
pop
push
sub
sub
dec
pop
pushl
push
push
lea
push
push
push
call
mov
push
add
xchg
add
cltd
pop
pop
in
add
faddl
add
add
lret
imul
flds
jno
add
push
push
lea
push
push
push
push
lea
push
push
lea
push
call
add
test
hlt
add
add
int3
add
loope
shr
add
add
sahf
gs
add
mov
rcl
xchg
fcomps
mov
add
lcall
add
in
lods
ficoml
aam
nop
add
out
outsl
movsl
add
xchg
mov
les
lcall
shrb
cmp
xlat
push
lea
add
push
and
add
shr
not
ror
sub
add
inc
pop
pop
push
add
inc
pop
pushl
push
push
push
lea
push
push
push
push
push
call
into
add
add
add
add
sti
lods
add
add
xchg
insb
add
jnp
add
data16
jb
mov
fs
mov
cld
cltd
movl
out
jmp
add
add
add
in
loopne
lcall
adc
add
jb
and
call
push
lea
pop
leave
add
push
ror
ror
pop
pop
pop
push
push
push
push
push
push
push
lea
push
call
popf
incb
lds
add
mov
test
fists
mov
cwtl
loopne
pop
xchg
add
jne
ror
shrb
add
pushf
add
add
add
add
test
sub
pop
pop
push
add
pop
xor
inc
push
push
push
push
call
push
push
fwait
add
add
pushf
lock
stos
push
fsubs
add
jo
add
add
add
lcall
or
leave
push
shr
inc
pop
ret
push
push
lea
push
push
lea
push
push
push
call
mov
pop
pop
xchg
add
pop
add
add
bound
xchg
scas
xorb
add
popf
jns
cmpsb
add
jb
mov
push
xorb
add
clc
mov
add
add
lahf
pushaw
rcrb
mov
in
add
add
js
lret
add
jo
outsl
xchg
cmc
sub
pop
push
push
add
not
add
pop
mov
cmpl
jne
push
sub
rol
shr
pop
mov
jmp
push
add
pop
mov
and
push
dec
rol
pop
xor
xor
push
push
lea
push
push
push
push
push
call
jle
js
add
fadds
stc
add
nop
mov
add
imul
jns
push
pop
shll
mov
xchg
pop
add
arpl
mov
add
mov
jno
jmp
sti
add
fiadds
add
lcall
rolb
dec
call
loopne
sub
pop
dec
push
lea
push
push
lea
push
lea
push
push
push
lea
push
call
jbe
xchg
push
mov
mov
mov
in
lret
add
aad
add
xchg
movsl
or
push
add
add
add
stos
sub
pop
sub
push
pop
jmp
sub
push
push
push
push
lea
push
push
push
push
push
lea
push
call
add
xchg
add
jle
push
add
lahf
add
add
add
pop
add
test
fldl
add
add
lahf
add
mov
enter
jae
add
lcall
xor
mov
push
icebp
sbb
lock
pop
push
xor
sub
pop
sub
push
shl
add
inc
sub
pop
cmp
jne
push
push
push
push
push
push
push
lea
push
push
call
add
jb
mov
jo
lret
mov
jne
xlat
popl
add
nop
loop
arpl
cltd
add
test
cld
fldl
add
pop
ljmp
add
lea
push
jne
add
add
add
add
push
sub
pop
mov
push
lea
inc
pop
lea
push
not
pop
sub
push
add
lea
rol
pop
mov
shr
push
lea
xor
pop
add
push
push
lea
push
lea
push
lea
push
call
mov
mov
aam
add
les
sarl
into
lds
add
add
mov
aad
sub
pop
sub
push
sub
ror
pop
pushl
push
dec
pop
pop
shr
push
push
push
push
push
call
add
lahf
jp
add
gs
icebp
add
add
loope
add
loopne
mov
imul
scas
in
cwtl
popl
fiadds
lods
add
add
lret
int
mov
add
fstl
stos
mov
pop
add
lods
push
xchg
add
les
add
xlat
add
add
lcall
aad
in
in
lcall
loope
incl
add
inc
lea
push
lea
push
push
call
add
push
popa
jno
iret
add
xlat
add
mov
mov
add
xchg
test
add
lods
add
in
in
lcall
jmp
cmp
jne
push
push
lea
push
push
push
push
push
push
push
push
call
cltd
orb
popl
imul
push
pop
add
jl
jbe
xchg
jae
mov
push
mov
sarb
sub
pop
leave
push
push
push
call
push
mov
add
add
cwtl
les
add
mov
cli
add
icebp
arpl
add
cmpl
mov
stc
lahf
test
leave
add
hlt
lcall
add
push
push
push
lea
push
lea
push
call
fidivs
lcall
add
mov
jno
into
add
add
cmpsb
add
add
icebp
add
mov
sti
push
fidivl
int
add
arpl
lcall
in
push
add
lea
rol
pop
add
push
lea
push
push
push
call
jl
add
pushf
test
add
add
filds
mov
add
lods
popa
pop
add
roll
add
add
mov
lds
push
push
push
lea
push
push
lea
push
push
push
push
call
movsl
add
loop
jle
add
push
xchg
lea
mov
push
push
add
roll
arpl
sti
out
rcrb
cmpsl
jl
xchg
add
fcompl
push
push
push
lea
push
push
lea
push
call
add
add
cmpsl
add
loop
in
in
les
xchg
add
addb
pop
mov
add
jle
testl
in
call
fcompl
push
push
push
push
push
push
call
addl
fsts
add
add
mov
add
add
lods
out
sti
jbe
add
in
add
stos
scas
stos
mov
mov
nop
int3
clc
add
add
lahf
test
repnz
add
add
leave
jne
in
call
push
mov
push
lea
push
push
push
push
push
call
outsl
adcb
sahf
add
add
add
fldl
stos
mov
stos
out
xchg
pop
iret
add
mov
mov
sahf
rorl
add
add
bnd
testb
xchg
in
add
andl
lods
gs
add
call
in
call
lea
push
push
push
push
push
push
push
push
call
add
pushf
add
hlt
adc
pop
push
lods
ja
mov
jl
push
add
add
add
add
jbe
data16
mov
mov
aam
movb
add
testl
std
add
mov
lcall
ljmp
push
mov
decl
push
push
lea
push
push
call
cli
mov
jle
add
into
addb
test
add
out
out
arpl
ficomps
add
add
mov
out
sbbl
adc
out
add
sub
pop
shr
push
ror
add
pop
add
mov
push
shr
pop
add
mov
push
push
push
push
push
call
mov
roll
pop
add
bound
push
add
rcrl
add
scas
add
in
add
cwtl
sub
lcall
jge
push
lea
push
push
call
jp
adcl
add
mov
add
add
ret
add
jbe
arpl
filds
add
in
add
in
hlt
pop
xor
push
push
lea
push
push
push
call
mov
popf
into
repnz
add
jge
jp
out
pop
lods
add
cli
call
add
mov
add
pop
jb
fadds
pop
fldl
add
add
call
xchg
add
outsl
add
add
sub
pop
mov
and
push
sub
sub
pop
rol
rol
push
push
push
push
lea
push
push
push
push
push
call
add
add
leave
movb
jnp
call
mov
mov
add
add
xchg
cld
jl
add
adcl
in
fdivr
lcall
add
mov
test
js
push
push
lea
push
push
call
lret
xchg
popf
int
lret
add
out
add
cltd
in
lea
fiadds
mov
roll
mov
int3
add
jns
fwait
pop
xchg
pushf
add
out
add
xchg
add
add
xchg
add
mov
add
fisttps
out
cli
pushf
jp
add
mov
jle
gs
pop
inc
push
push
push
push
push
push
push
push
push
lea
push
call
call
imul
stos
add
jno
mov
jae
pusha
sti
test
jb
add
insb
add
push
sar
sub
pop
cmpb
jne
push
sub
shr
pop
add
cmp
je
push
push
lea
push
push
push
push
lea
push
push
push
call
add
add
sarb
add
add
add
mov
in
add
add
push
push
imul
add
jle
add
test
jmp
roll
mov
lcall
ret
adc
jnp
add
test
call
fcompl
rclb
pop
pop
push
push
push
call
push
add
outsw
fwait
add
add
xchg
xchg
data16
add
test
rcrl
mov
add
add
mov
cmpsl
mov
add
popa
add
add
add
mov
popl
add
add
add
in
arpl
nop
sbbl
hlt
lcall
push
pop
pop
push
push
push
lea
push
push
push
push
call
test
xchg
outsl
add
not
fnsave
frstor
into
add
add
jp
push
mov
add
xchg
jb
cld
pop
add
add
out
std
fs
pop
pop
pop
push
push
push
lea
push
push
lea
push
push
push
push
call
add
addb
add
add
cli
add
xchg
add
add
int3
cmc
pop
mov
xchg
xchg
data16
stos
popa
mov
mov
jno
add
ljmp
sub
pop
leave
ret
push
dec
add
pop
mov
add
push
inc
pop
mov
cmpb
push
push
call
pop
mov
add
pushf
out
out
add
clc
call
xchg
pop
jmp
lea
ljmp
add
add
add
push
add
imul
aad
mov
imul
cmpsb
add
sub
pop
call
push
push
push
lea
push
push
lea
push
push
push
call
add
add
add
add
pop
add
sbbl
in
mov
ret
xchg
add
test
out
mov
jle
stos
movsb
out
add
lock
stos
add
add
add
add
add
add
clc
add
hlt
jns
movsb
mov
add
push
inc
pop
call
push
push
push
push
push
push
lea
push
call
and
movb
lret
push
pop
fcmovnb
add
add
test
add
xchg
jge
fstpt
add
add
pop
mov
ljmp
add
insb
add
rclb
jb
pop
add
sub
pop
xor
push
push
push
call
mov
add
add
shlb
ljmp
stos
add
lcall
fdivp
mov
add
in
scas
cmpsb
push
add
mov
sahf
jp
lret
cltd
in
jns
add
sub
pop
pop
push
push
push
call
add
lds
scas
mov
xchg
lods
rolb
add
data16
add
mov
imul
add
add
scas
jle
movsb
test
add
mov
faddl
add
xchg
popa
jle
repnz
add
test
pop
push
add
loopne
add
ja
mov
hlt
pop
pop
push
add
not
pop
pop
push
push
push
call
into
pop
add
add
in
mov
add
add
mov
arpl
jle
out
add
iret
aad
movsb
mov
mov
add
test
fisubrs
lods
add
mov
test
bound
add
push
cmpsl
add
add
add
push
push
call
divb
mov
fwait
mov
les
add
add
add
mov
fildl
sbb
leave
cmpsb
add
push
push
testl
add
push
cwtl
add
pop
shl
arpl
imul
add
shl
add
add
add
leave
push
push
push
lea
push
push
push
push
lea
push
push
push
call
add
in
roll
add
aam
cli
repnz
add
add
jnp
fwait
jb
add
add
fiaddl
add
shl
nop
lret
add
pop
xchg
add
lcall
or
push
push
push
call
test
add
data16
mov
ficomps
mov
mov
add
add
into
jmp
xchg
add
add
loop
jb
fiadds
mov
test
add
lcall
push
push
push
lea
push
lea
push
push
push
push
push
call
add
fnstenv
add
ror
add
movsb
mov
leave
jns
fs
add
out
add
sti
add
mov
add
fldl
jb
sbbl
add
add
mov
add
add
movb
std
imul
sub
pop
mov
add
push
pop
push
push
push
push
lea
push
push
lea
push
push
push
lea
push
call
les
popf
add
add
add
add
add
add
xchg
ret
sti
add
pop
sub
pop
push
push
push
push
lea
push
lea
push
push
lea
push
push
call
aam
mov
add
add
ljmp
add
push
fdivrp
movsl
fisttpll
jb
stos
add
push
add
addb
add
lcall
int3
ljmp
in
ljmp
enter
in
loopne
lcall
mov
push
ror
sub
pop
push
pop
push
push
push
push
push
push
lea
push
push
push
call
add
add
add
mov
add
push
mov
int3
lock
add
add
add
add
add
arpl
test
imul
add
add
pusha
xchg
xchg
testb
rolb
jp
cmc
nop
repnz
loopne
add
add
gs
addr16
pop
lea
push
push
lea
push
push
push
push
call
add
jmp
hlt
movsl
mov
mov
add
in
add
fs
add
add
out
lock
test
addr16
mov
fiaddl
int3
cmpb
leave
mov
jne
push
imul
add
test
add
int3
sub
pop
sub
push
push
push
push
lea
push
push
push
call
test
mov
add
fildll
shrb
in
pop
add
mov
push
mov
add
addb
add
cmc
jge
add
mov
add
add
pop
iret
fists
scas
in
add
data16
add
gs
pop
mov
shr
push
push
lea
push
push
lea
push
call
add
add
loopne
mov
xlat
add
add
out
jb
fisttpll
add
xchg
jp
add
test
test
add
in
in
lcall
ficoml
pushf
bound
sub
add
fcomp
add
cwtl
movsb
mov
shlb
xchg
add
add
cld
into
push
jp
rcrl
mov
add
add
out
add
add
mov
cmpsb
add
jmp
add
pop
mov
add
in
push
mov
lcall
pop
js
lea
inc
shl
pop
add
push
push
push
push
lea
push
push
lea
push
call
add
ljmp
mov
aad
shll
add
add
mov
popl
leave
add
add
add
add
xchg
sti
les
add
add
add
add
add
pop
lea
out
in
mov
add
push
add
test
std
add
iret
out
out
in
in
lcall
jae
push
pop
popl
push
xor
pop
mov
add
push
push
lea
push
push
push
push
push
push
call
jl
pop
lods
mov
fldl
push
movb
pop
std
roll
add
pop
movsb
test
add
addl
push
push
cltd
pop
lds
icebp
add
movl
testl
in
inc
sub
rcl
lret
adc
push
push
call
nop
roll
add
roll
add
xchg
scas
add
fisttps
push
add
test
test
add
mov
add
add
add
into
add
stos
add
add
add
add
scas
lods
shrb
lods
mov
sub
pop
mov
push
ror
add
dec
pop
add
push
inc
add
ror
rol
pop
xor
rol
push
xor
inc
dec
pop
nop
push
push
push
push
push
push
lea
push
lea
push
push
lea
push
call
enter
pop
xchg
add
mov
sahf
push
add
pop
xchg
add
add
xchg
cltd
xchg
jae
jae
pop
loop
add
add
cmpsl
cld
out
data16
insb
jp
add
add
add
popa
add
mov
push
add
imul
add
addr16
sub
pop
nop
push
xor
inc
pop
xor
push
sub
dec
pop
nop
nop
push
pop
inc
nop
push
push
call
push
xchg
add
add
push
jne
leave
js
add
add
cld
adcb
movsb
loop
add
add
js
out
sub
pop
nop
push
rol
dec
pop
cmpb
jne
push
shl
add
add
inc
pop
add
nop
push
lea
push
push
push
push
call
out
mov
push
cmpsb
push
repnz
cltd
add
pop
mov
add
add
mov
mov
mov
testb
pop
jge
outsl
pop
add
filds
xchg
add
add
add
push
add
add
nop
cmp
je
push
inc
pop
nop
push
add
sub
shl
dec
pop
nop
push
dec
pop
inc
push
push
push
push
push
push
call
mov
loop
sbbb
add
add
cwtl
shl
xchg
add
add
add
scas
popa
jp
add
int3
test
mov
add
add
ja
roll
jp
pop
add
jl
add
sub
pop
nop
push
not
shl
pop
nop
push
lea
push
push
push
push
push
call
add
addr16
shl
stos
repnz
fistl
mov
jge
add
cmpl
mov
stos
mov
add
cmpsb
add
mov
mov
mov
pop
into
js
jnp
mov
add
lret
add
add
hlt
xchg
lock
shlb
add
sub
pop
cmp
jb
push
pop
xor
push
lea
push
push
push
lea
push
push
call
icebp
push
enter
pop
mov
loopne
fstl
add
add
pushf
test
add
add
imull
sub
pop
jmp
push
push
push
call
lods
cmpsb
mov
add
push
mov
test
push
mov
rolb
mov
add
repnz
int3
add
add
call
add
add
add
mov
add
xchg
pop
cli
jae
fcompp
sub
pop
mov
push
not
add
not
sub
pop
add
movzwl
push
push
push
push
lea
push
push
lea
push
push
push
push
call
loop
add
out
lahf
add
mov
add
pop
mov
add
enter
mov
cmpsb
add
add
les
add
lcall
inc
sbb
push
push
push
push
push
lea
push
push
push
push
call
add
add
push
jle
add
les
add
add
pop
add
ljmp
fs
cli
mov
mov
add
stc
addb
fiaddl
std
add
add
loope
test
add
mov
test
add
mov
sub
pop
add
push
lea
push
push
lea
push
push
push
push
push
call
sahf
std
xchg
filds
jo
mov
push
add
push
movsb
jbe
mov
mov
cli
outsl
add
stc
add
pop
add
cwtl
jno
fwait
add
add
mov
add
add
add
shrb
bound
stos
push
mov
fcmovnbe
arpl
mull
sub
pop
mov
xor
push
not
shr
pop
xor
push
rol
add
dec
pop
shl
push
not
pop
xor
push
push
push
lea
push
push
push
push
push
push
push
call
xchg
icebp
lcall
fucomp
mov
xchg
add
push
cli
int3
call
add
ja
negl
ret
int3
movsb
cwtl
pop
add
add
cmpsb
add
add
mov
in
fdivr
lcall
loope
xor
push
push
call
xchg
lret
ror
mov
mov
mov
add
mov
add
cltd
clc
jmp
add
add
add
add
add
fildl
add
push
add
xchg
lret
orl
mov
xlat
loop
xchg
rolb
add
push
mov
sub
pop
shl
push
push
push
push
call
jns
jmp
mov
add
scas
add
xchg
data16
mov
add
out
add
mov
add
pusha
ficoml
add
xchg
mov
add
shr
cltd
add
fistpll
add
loopne
add
mov
xlat
sub
pop
xor
push
lea
shr
add
pop
mov
push
lea
push
lea
push
lea
push
lea
push
push
push
push
lea
push
push
call
add
add
jbe
push
push
mov
xlat
add
in
jo
add
cmc
mov
add
mov
popa
cli
jp
notl
add
add
loope
lret
add
fiaddl
add
add
pop
add
out
mov
add
xlat
movsl
jl
lahf
add
inc
hlt
push
shl
inc
pop
pop
push
push
push
push
push
push
lea
push
call
xchg
add
add
jno
add
jl
out
xchg
fldcw
xchg
add
in
pop
lods
test
lea
stos
lret
add
pop
push
sub
pop
pop
push
push
push
call
ja
std
jnp
xlat
imul
test
testb
add
fwait
sti
xlat
mov
add
add
add
add
add
add
pop
in
jle
mov
push
add
popa
push
out
add
lcall
push
lea
push
push
lea
push
call
pop
add
xchg
mov
enter
add
add
push
mov
add
pop
les
jnp
sti
pop
mov
outsl
add
imul
lock
ret
push
push
lea
push
push
push
push
push
push
push
call
fbld
jmp
ror
add
add
cmpsl
add
or
jge
add
jo
add
mov
sub
pop
push
push
lea
push
push
push
push
push
lea
push
lea
push
lea
push
push
call
mov
add
test
add
add
add
jmp
add
xchg
add
add
fwait
mov
jle
mov
add
mov
push
add
pushf
jae
add
push
add
add
in
push
lea
push
push
lea
push
push
push
push
push
call
sbbl
add
add
jo
mov
mov
jo
js
add
clc
add
add
test
lahf
add
jbe
mov
loopne
lcall
push
push
not
shr
rol
pop
push
push
push
rol
pop
mov
mov
push
not
pop
mov
push
add
lea
pop
test
je
push
not
shl
xor
pop
mov
push
inc
add
rol
ror
pop
test
je
push
sub
sub
pop
mov
push
push
lea
push
push
push
push
lea
push
call
xchg
into
in
ja
cmpsl
jo
add
push
add
outsl
in
rolb
fld
add
add
int
add
test
sub
pop
mov
mov
push
push
push
lea
push
push
push
call
imul
ret
insb
add
mov
add
rcl
add
addr16
xchg
add
fidivrl
add
add
add
scas
add
shl
out
xchg
pop
faddl
add
add
push
lods
add
add
xchg
add
out
cmpsb
insb
cld
popf
scas
fwait
push
pop
add
add
add
lcall
cmp
je
push
push
push
push
push
lea
push
push
call
mov
je
mov
cltd
push
add
push
loop
add
clc
jp
add
mov
add
add
add
lods
add
popa
jnp
push
loop
out
movsl
iret
lret
out
mov
js
cmpb
add
loop
testl
jae
rorl
add
jecxz
mov
mov
addb
pop
test
je
push
ror
pop
mov
push
sub
not
pop
inc
push
add
not
pop
cmp
je
push
push
lea
push
lea
push
lea
push
call
jne
add
add
add
scas
add
mov
add
push
add
add
add
mov
xchg
js
scas
xchg
outsl
leave
add
add
fldl
lcall
rorb
mov
call
xlat
lea
inc
pop
xor
push
push
push
push
call
mov
roll
jns
add
jb
into
mov
stc
mov
enter
add
mov
call
addr16
add
mov
pop
pop
add
mov
push
imul
mov
ror
lock
clc
lahf
repnz
add
outsl
add
sub
pop
pop
push
ror
pop
pop
push
not
pop
pop
pop
push
lea
push
lea
push
push
push
push
lea
push
call
add
push
lods
add
jmp
add
add
in
lea
sub
add
add
push
add
add
add
add
test
xchg
jge
pop
hlt
jno
mov
add
add
call
add
pusha
xchg
leave
push
shl
pop
ret
mov
push
xor
inc
pop
inc
cmp
jne
push
push
push
push
push
push
call
add
add
add
add
push
andl
jo
jne
ficomps
test
add
xchg
in
jl
js
cmpsl
push
pushf
sub
pop
lea
push
push
push
push
push
lea
push
push
call
add
add
add
loop
add
add
repnz
out
xlat
add
jl
cmpsb
jmp
mov
add
hlt
scas
movb
pusha
add
jns
cmpb
icebp
mov
loopne
add
add
movsb
mov
add
lcall
sub
pop
mov
push
rol
add
pop
test
je
mov
push
push
push
push
lea
push
push
call
add
add
add
add
add
jp
jnp
pop
mov
mov
leave
add
roll
jns
cmc
adcl
stc
add
les
mov
add
fiadds
out
sub
pop
add
push
push
push
call
rolb
lods
add
shl
in
add
add
push
mov
add
add
add
add
add
mov
lahf
addl
ret
hlt
pop
cmp
jne
push
inc
lea
dec
rol
pop
mov
push
shr
sub
pop
test
je
push
xor
dec
sub
pop
mov
push
lea
pop
add
cmp
je
push
push
push
push
lea
push
push
call
add
mov
pop
jbe
add
mov
out
xchg
add
pop
jnp
add
loopne
int3
enter
lods
test
add
xchg
sti
mov
add
pop
add
int
add
add
add
add
hlt
add
in
pop
push
test
mov
add
mov
sub
pop
jmp
push
pop
xor
pop
push
push
push
lea
push
push
push
lea
push
push
push
call
add
rolb
stos
mov
int3
jae
cld
add
repnz
add
add
add
add
je
test
rolb
add
add
scas
jno
add
add
add
add
add
add
push
push
call
iret
add
repnz
add
add
lahf
je
imul
jmp
add
fnstenv
jno
pusha
add
mov
add
mov
clc
pop
pop
pop
push
lea
push
push
push
push
push
call
add
mov
add
leave
enter
fidivs
add
addb
add
rcrb
addr16
add
add
lods
jno
lock
add
popa
sahf
add
mov
mov
pop
jmp
fadds
add
mov
popa
add
mov
cmpsb
add
add
jae
arpl
mov
lcall
push
lea
push
push
call
push
rcrl
mov
and
add
mov
add
add
incb
clc
rcr
pop
add
into
mov
add
fsts
icebp
nop
bound
add
add
add
pop
add
add
add
int3
imul
call
ret
push
push
push
lea
push
call
add
fldcw
ja
add
mov
push
add
pop
add
cli
shrb
mov
add
add
add
add
aam
iret
movl
mov
popf
add
mov
shll
add
add
add
fadds
inc
call
pop
pop
push
push
push
push
call
add
add
enter
add
add
pop
add
add
add
mov
test
ljmp
les
jns
cmpsb
add
add
add
lret
addl
mov
add
jb
add
iret
add
add
mov
xchg
fadds
jmp
fsubl
add
pop
push
push
push
push
push
call
fadds
xchg
filds
add
cmpsb
add
add
add
add
test
lahf
mov
add
mov
add
add
data16
hlt
ljmp
add
test
cli
insb
nop
add
sub
pop
leave
push
rol
pop
ret
mov
push
lea
push
lea
push
push
push
lea
push
lea
push
push
push
push
call
add
add
add
rolb
repnz
add
add
out
enter
push
jns
push
cmc
push
jo
add
jns
jns
fs
add
add
add
add
add
loopne
mov
sbbb
test
mov
sarb
add
pop
push
push
push
push
push
push
push
call
mov
popl
les
mov
out
cltd
add
add
test
pop
mov
add
add
add
rcrl
into
add
pop
cli
fcomp
xchg
mov
add
nop
lahf
add
loop
add
mov
add
add
add
add
lcall
push
sub
pop
pop
push
push
push
call
add
add
cld
jns
add
mov
pop
orb
jmp
mov
add
rolb
jae
add
ja
add
roll
add
add
add
add
testb
ja
pusha
add
mov
push
fadds
lcall
push
pop
leave
push
lea
push
push
push
push
push
lea
push
push
lea
push
push
call
add
jnp
int
icebp
fwait
bnd
shr
mov
add
add
add
incb
in
add
arpl
add
add
fisubrs
into
pop
sarl
roll
je
add
je
in
xchg
into
mov
add
add
sub
pop
ret
lret
sbb
mov
scas
lret
int
scas
lret
std
mov
scas
addr16
mov
scas
lret
mov
mov
scas
stc
sahf
xchg
sub
shl
rorb
mov
push
lods
mov
cmp
sbb
dec
ret
loope
and
adc
push
mov
rcl
sub
out
pop
arpl
fistl
clc
sbb
dec
rcrl
les
lock
fdivl
add
mov
inc
in
push
call
cmp
cmp
add
pop
loope
lahf
call
lahf
cmp
cmpb
fistps
xor
jg
mov
std
push
pop
add
clc
sbb
xchg
inc
fisttpl
out
lock
inc
mov
rolb
imul
mov
xor
jge
or
sti
ja
fwait
and
pop
ret
fsubrp
sbb
dec
in
pop
loop
jno
mov
and
or
iret
sbb
clc
std
iret
mov
popf
inc
sub
sbb
inc
out
cmp
and
sub
xor
mov
popa
mov
push
mov
xchg
lods
mov
mov
fs
xchg
sbb
int3
xor
sub
xor
push
cld
inc
push
das
testb
xchg
rep
into
dec
add
std
cmp
add
ret
xor
mov
fdivl
jno
sub
xchg
enter
stos
dec
je
lahf
hlt
pusha
outsl
or
xor
leave
mov
cmpsl
dec
mov
out
mov
lahf
or
out
mov
nop
or
cmp
shl
rcll
or
cwtl
dec
pop
jecxz
mull
cmpsb
jmp
mov
cmp
jg
xor
ja
sete
adc
mov
lret
cmp
fildll
xchg
adc
xchg
loop
push
sbb
jb
mov
hlt
out
fcomps
sub
daa
rep
int3
mov
faddp
adc
jno
testl
ja
js
mov
lcall
or
jae
inc
add
dec
mov
jo
dec
out
imul
xlat
test
mov
sbb
adc
dec
fs
dec
movsl
rclb
int3
jecxz
fnsetpm(287
push
and
into
pusha
divl
sbb
iret
adcl
lahf
fs
dec
xchg
out
cmp
mov
push
cmpsb
gs
push
jns
or
adc
add
cwtl
dec
fldl
and
xor
and
xor
adc
jmp
loope
icebp
add
test
push
mov
addr16
sbb
pop
xchg
inc
mov
cmp
dec
insb
stos
mov
lret
ret
jo
fwait
shll
pushf
testl
add
mov
cli
and
pop
jge
xor
mov
adc
and
cmp
inc
push
and
xchg
insl
repz
lods
movsb
add
movsl
scas
aad
or
xlat
loopne
pop
dec
das
loopne
test
adc
aad
adc
jle
stc
fisubrl
popf
in
cmp
in
imul
mov
mov
subl
enter
mov
push
fwait
call
mov
and
ror
popa
test
sbb
xor
filds
add
or
xlat
xor
xchg
add
mov
lret
pushf
adc
cmp
imul
pop
lds
mov
cmp
hlt
loope
xor
inc
pop
jle
cmc
jge
sbb
and
aam
shlb
es
dec
or
cwtl
push
rcrb
cmpsl
or
or
mov
pop
xchg
scas
out
aad
gs
int3
jbe
inc
lods
std
add
hlt
or
lret
push
mov
xor
divl
adc
into
jp
cmp
inc
scas
xchg
xor
outsb
inc
jmp
jne
push
jl
cltd
push
lods
ret
shrd
aam
arpl
jg
scas
ss
push
or
inc
push
imul
dec
dec
push
push
scas
je
push
aas
movsl
in
cmpsb
mov
scas
add
test
fs
mov
push
jnp
enter
rcr
cmp
fsubs
and
cmpsl
mov
cmpsb
mov
ljmp
fiaddl
push
ret
jle
and
sbb
sbb
shlb
daa
inc
fcmovnu
sbb
and
loope
xchg
pop
cli
arpl
or
pop
push
dec
cmp
popa
add
mov
or
iret
fisubl
pop
jecxz
dec
testl
andb
rol
sti
dec
inc
loopne
add
jmp
mov
int3
ds
imul
lret
cs
test
fiadds
addl
sbb
ds
in
lret
or
fnstsw
mov
aad
insb
push
or
fildll
inc
mov
push
jne
loop
divl
xor
mov
paddd
pop
and
lcall
imul
scas
imul
xchg
pop
movsb
jbe
pushf
popa
cwtl
cmp
popf
mov
add
dec
pop
sub
sbb
ja
fadds
mov
sub
xchg
lds
pop
mov
mov
push
stos
mov
je
xchg
movsb
cmc
int
pusha
negl
mov
sahf
rolb
ret
xchg
mov
inc
mov
pusha
jecxz
imul
mov
std
mov
push
sub
ficoms
out
cli
dec
cmp
pusha
movsb
dec
test
pop
test
dec
pop
notb
lock
push
loop
in
cmp
and
loop
je
rcrb
mov
into
subl
fucomi
sbb
imul
fwait
xor
ds
fwait
push
addl
sub
mov
push
mov
jle
add
xor
pop
add
xorl
mov
jbe
inc
add
daa
imul
scas
fimull
outsb
lods
jo
sub
sbb
inc
xchg
loope
xchg
push
sub
pop
test
adc
lods
xchg
inc
mov
cltd
lret
es
rcll
out
lds
repnz
xor
gs
cmpsb
jae
je
sbb
push
xor
mov
loopne
jbe
repz
inc
inc
inc
test
sahf
xor
ss
push
fwait
push
mov
inc
dec
call
and
fldenv
and
adc
notb
clc
pop
lods
mov
sbb
fisubrs
and
dec
addl
xchg
pop
aaa
popa
sub
cld
sub
cwtl
aad
cli
cmpsl
fdivrl
adc
rclb
mov
stos
test
bound
stos
adcb
sahf
mov
je
sbb
lret
xchg
aam
mov
mov
cli
aad
push
cmpsb
jge
decl
pop
sbb
push
cmpsl
in
xor
cmc
inc
inc
dec
pop
push
mov
insb
mov
mov
sub
cmp
sbb
movsb
push
in
call
shrl
cmp
xchg
nop
pop
insl
inc
aas
add
das
jmp
popa
test
hlt
outsb
push
xchg
inc
inc
insb
movsw
in
insb
jbe
cs
outsb
aas
push
mov
mov
lods
inc
dec
lods
xor
popf
adc
dec
jmp
lret
loopne
xchg
dec
les
add
repz
or
js
dec
sub
adc
in
rcrb
mov
subb
push
lcall
fmuls
lahf
xchg
mov
repnz
outsl
xor
imulb
cwtl
mov
mov
push
addb
loop
nop
adc
lea
mov
jns
out
repz
jmp
int
rcrl
pop
xlat
and
movsl
add
loop
xlat
fldcw
sub
pop
cmc
push
dec
sub
push
movsl
lds
aas
mov
inc
movsb
cmpsb
enter
sub
sbb
cli
sbb
push
out
in
call
cld
outsl
imul
sbb
pop
dec
mov
add
adc
stc
jmp
add
rorb
inc
jnp
jp
xor
push
fdivrl
xlat
push
and
arpl
mov
jmp
or
ret
cmp
jnp
jo
mov
mov
add
movsb
sub
adc
cli
or
cmp
cltd
sub
and
in
mov
adc
popa
add
popa
xchg
cli
inc
inc
inc
cmp
andb
mov
pop
cmpsb
movsb
hlt
sbb
shrb
bound
insl
mov
mov
inc
or
xchg
nop
sub
xor
ja
jns
cs
jnp
fs
rol
jne
leave
testl
fistps
adc
push
les
lret
or
fdiv
ret
or
fs
push
push
incl
dec
lahf
fwait
sub
hlt
inc
adc
xchg
jg
mov
mov
or
flds
outsb
imul
cmp
push
fmull
xchg
pop
add
and
jp
sbb
or
mov
enter
fs
dec
dec
jne
mov
int
mov
leave
xchg
out
add
mov
add
popa
mov
mov
push
lahf
aaa
in
sub
pop
xchg
lahf
fld
sbb
pop
and
iret
insl
sbb
xchg
out
dec
leave
adc
jb
cmpsb
xor
xchg
adc
mov
fwait
inc
push
mov
call
mov
push
addr16
cmp
sub
int
rorl
jbe
pushf
pop
ljmp
lods
pop
push
jmp
xchg
jnp
dec
xchg
adc
cmpsl
pop
mov
mov
dec
jno
pop
mov
andl
cmp
in
dec
out
jp
add
cmpsb
dec
stc
cli
mov
inc
fnstsw
ret
mov
pop
xor
push
push
outsl
push
or
or
lcall
dec
subl
push
mov
stc
pop
mov
mov
jo
or
mov
arpl
add
les
xchg
repz
xchg
das
std
push
sarb
inc
fisubrs
jmp
adc
pop
testb
enter
scas
call
cmp
cmc
cwtl
jmp
leave
push
fists
icebp
jp
jecxz
and
sbb
mov
incl
imul
xor
fisubrs
nop
movl
aaa
jg
loope
cmpsb
xchg
icebp
and
fnstsw
subb
add
aaa
fildl
dec
add
or
inc
sbb
pop
mov
addb
cwtl
jmp
mov
ds
out
fistps
enter
stos
xor
mov
sub
push
and
les
in
push
cmp
sbb
andl
repz
add
test
lods
je
jo
ficoms
pop
andl
jne
ret
lret
inc
das
sbb
test
stos
lret
ss
std
insb
in
xor
jmp
das
pop
addb
jno
test
in
das
push
jl
cltd
test
xchg
lret
push
fs
mov
add
xchg
test
jl
hlt
adc
lds
sbb
dec
addr16
inc
test
icebp
ror
add
push
jbe
fildl
loope
dec
mov
fs
lock
inc
arpl
into
aas
sub
add
fcmovb
mov
push
in
jmp
fmull
pop
jnp
lahf
xor
inc
fdivl
and
cltd
popf
pop
icebp
test
cmp
push
jne
jne
cmpsl
loop
je
out
mov
sahf
scas
movsb
mov
jo
and
xlat
jge
jne
js
pop
xchg
shrb
fnsave
ret
enter
add
xor
sbb
iret
addr16
xor
stos
push
fdivrp
sbbl
mov
popf
xchg
ret
sub
jns
and
jne
xchg
popf
rolb
repz
xchg
fwait
push
cmpsl
push
insb
add
je
or
jno
int
loope
bound
sbb
arpl
fbld
and
push
mov
mov
pop
aaa
xchg
dec
cli
fistpl
punpcklwd
ficomps
xchg
dec
pop
movsb
mov
loop
gs
xchg
add
add
xchg
insl
sbb
stos
mov
push
hlt
mov
call
or
inc
in
hlt
push
ficomps
mov
jo
sub
xor
mov
lea
ret
shr
cmp
call
iret
mov
das
scas
mov
push
mov
pop
sbb
jo
jg
sub
jb
adc
and
xchg
or
jecxz
inc
jecxz
xor
icebp
cmp
movsb
adc
fnsave
dec
pusha
mov
arpl
aas
stc
push
jne
shr
adc
clc
std
xor
lods
jecxz
mov
mov
or
fcoml
cltd
insb
adc
dec
sti
xlat
xlat
pop
popf
xchg
aam
fcmove
push
fcomp
lea
gs
and
dec
inc
aaa
jbe
cmp
stos
lret
paddusw
into
mov
decb
push
in
addb
cwtl
pop
sub
mov
add
or
pop
pusha
dec
lods
inc
pop
out
movsb
cmp
sbb
inc
jno
es
mov
stos
xchg
jo
mov
out
out
mov
push
leave
or
enter
inc
inc
adc
negb
lahf
stos
lret
jne
and
cmp
or
pop
pushf
jno
mov
mov
xchg
or
push
mov
jp
ret
loop
pop
mov
mov
insb
popf
aad
cmpsb
fwait
jae
fcomi
mov
xchg
fsub
fstl
add
and
and
inc
push
stos
inc
push
push
xchg
add
bound
lods
mov
pop
arpl
jno
int
sub
test
pop
or
pop
push
and
lret
xor
or
mov
pop
inc
hlt
mov
dec
imul
add
je
sub
fidivl
in
or
aaa
xor
push
test
pop
pop
sahf
xchg
xchg
jp
sbb
adc
jno
repnz
jo
jo
jmp
les
mov
cmp
or
inc
mov
popa
dec
repz
lcall
loopne
xor
stos
fsub
out
jecxz
out
push
hlt
icebp
cmp
repz
movsl
roll
dec
int3
call
divl
mov
sub
cmp
ljmp
sbbl
mov
add
pop
mov
mov
inc
mov
mov
jno
orl
adc
bound
stc
popa
stc
cld
mov
outsb
insb
and
lahf
adc
popa
cmp
adc
jns
addb
mov
pushf
add
dec
jo
mov
out
push
mov
mov
fmull
jle
adc
add
push
inc
mov
jnp
jecxz
xor
sub
mov
in
daa
ret
lods
or
into
jnp
cmpl
js
cmp
dec
jbe
xchg
data16
lahf
mov
adc
imul
jecxz
push
fwait
add
push
out
mov
jno
sbb
test
adc
mov
enter
outsb
jge
xor
push
adc
push
outsl
push
mulb
stc
push
add
sub
inc
and
pop
adc
cmp
dec
or
mov
mov
aam
adc
adc
stc
dec
xorl
sbb
jbe
sbb
pop
push
add
push
xlat
sub
adc
sahf
and
or
sub
mov
cmp
cltd
popa
and
shrb
setb
mov
and
sbb
shrb
jmp
mov
gs
fs
mov
daa
les
mov
dec
sub
xchg
ds
mov
addr16
push
arpl
mov
icebp
lret
mov
mov
stos
sbb
popa
push
in
fldt
cmp
push
inc
mov
xchg
jnp
out
movsb
inc
cmp
fs
pop
cmp
popa
and
cltd
leave
icebp
jno
pop
jae
addr16
jg
mov
insl
cmpsb
xor
mov
jns
int
and
repz
push
mov
and
sub
push
gs
or
push
jl
out
scas
adc
hlt
cmpsb
jle
mov
into
inc
aam
or
and
sbb
aam
adc
shlb
mov
or
ss
mov
and
aaa
lds
stos
out
sbb
push
xchg
in
shll
mov
mov
inc
out
pop
xchg
adc
sbb
jae
rcrl
lret
rcrl
jg
lret
dec
cmc
add
sahf
jnp
test
cmpsb
sbb
push
leave
loop
call
and
sub
sbb
fidivs
add
adc
fisubl
call
es
js
jge
lcall
push
jg
cmp
dec
fdivs
sub
adcl
fidivl
and
mov
xor
pop
nop
cmpsb
mov
add
fwait
push
push
cmp
mov
pop
sub
stos
stos
les
mov
jns
sub
mov
xlat
jmp
mov
shll
jmp
out
mov
fisubs
mov
xchg
dec
pop
in
push
insl
ja
addb
pushl
push
jno
sbb
repnz
jmp
xlat
adc
mov
cli
ffree
dec
frstor
cmc
bound
in
sarl
pop
popa
cwtl
into
adc
xchg
fstps
lcall
rolb
inc
xchg
add
pop
pop
ret
adc
outsl
cs
push
imul
xlat
mov
ret
push
add
dec
cmpsl
adc
and
pop
shr
mov
cmc
sarl
int
mov
hlt
sbb
out
jns
jg
jae
sbb
popa
insl
jae
jge
dec
jmp
stos
pop
mov
rol
cmp
pop
inc
out
fwait
cmpsb
jg
mov
jle
dec
fstpl
lea
dec
push
shll
mov
mov
sub
mov
test
or
sub
and
dec
and
dec
int
cmc
es
mov
cmpsb
mov
test
sub
mov
cmp
test
or
cmp
jge
repnz
push
xchg
sub
and
cmp
clc
jg
mov
pop
lahf
inc
and
repz
scas
fs
mov
pushl
les
add
sbb
cmpl
lea
scas
dec
mov
xlat
and
in
inc
fildl
and
mov
adc
pop
loop
mov
lods
push
xchg
outsb
stos
arpl
cld
xchg
sahf
jae
ja
cwtl
push
fdivs
ja
push
mul
sbb
mov
xor
ljmpw
xchg
ss
push
jge
clc
xchg
jbe
pop
lret
pop
jecxz
rclb
cmp
sbb
popa
lock
decl
fmuls
pushf
sbb
xlat
pop
push
es
push
aad
cmp
fcomps
nop
nop
in
cltd
push
lods
inc
push
sbb
inc
jmp
cmpsb
das
pop
icebp
shr
cmp
inc
pop
jmp
mov
lods
jmp
sbb
aad
mov
js
pop
fs
push
pop
std
xchg
xchg
sahf
les
in
or
inc
sub
into
into
rcr
stc
imul
lods
dec
ret
cmpsl
insb
ficomps
and
notb
movsl
ret
pop
cmpsl
cmp
icebp
add
arpl
sub
mov
add
cmp
out
stos
jp
dec
aas
mov
jl
lcall
fcmove
cmp
rclb
repz
test
loope
cmc
and
sbb
inc
insl
outsl
test
aaa
lcall
adc
dec
adc
mov
mov
shll
xchg
scas
xchg
dec
dec
inc
jae
icebp
mov
test
insb
mov
mov
adc
les
vmovntps
aas
inc
cmpsl
adc
mov
pop
dec
jp
mov
fiadds
or
nop
xor
lret
insl
shr
loop
insb
out
es
pop
das
aas
inc
stc
mov
stos
lcall
out
insl
jge
in
divl
into
pop
push
mov
and
add
dec
cmp
stos
push
das
in
rorl
sbb
mov
inc
hlt
xchg
aam
sub
xor
es
cmpsb
ds
pop
mov
jecxz
xor
mov
sbb
cmc
and
scas
in
jns
fcomi
cmp
xchg
jecxz
push
aam
and
inc
or
add
stc
lcall
jmp
jmp
shl
hlt
lcall
stos
cmp
in
sbb
cmp
jnp
jae
das
jmp
sahf
mov
cmp
int3
out
std
xorl
sub
mov
sarb
iret
lahf
in
in
jno
sbb
enter
pop
ss
and
mov
add
xchg
das
movsb
dec
cli
pop
cmp
addr16
push
int3
adc
andb
push
jns
mov
sti
sti
mov
jl
int
mov
add
inc
xchg
jo
loopne
inc
clc
xor
or
or
sbb
test
fistpl
push
or
aaa
xor
add
pop
movl
fdivrs
mov
push
inc
cmp
repnz
add
sahf
and
outsl
inc
loopne
sbb
data16
out
mov
daa
ds
ljmp
sti
pop
shl
imul
mov
sbb
sbb
jmp
aaa
ret
jle
cmpsl
or
pop
daa
and
cs
fidivl
pop
mov
cmp
sbb
popf
sbb
sub
rclb
pop
ss
dec
cmp
fldcw
and
mov
adc
mov
int3
test
xchg
and
imul
ss
mov
jg
mov
repz
js
call
lds
mov
scas
jnp
mov
pop
push
test
mull
jg
out
bound
and
adc
xchg
pop
sarb
inc
sbb
mov
nop
lea
pop
lds
pop
jle
sbb
pushf
mov
and
scas
add
enter
shrb
lods
sub
jmp
push
aas
mov
and
and
and
out
arpl
cld
insl
dec
mov
add
cmc
ret
test
mov
mov
loopne
dec
push
sti
sbb
lods
outsb
or
insb
fidivrs
sub
xchg
outsl
pusha
mov
or
jae
mov
add
jle
cmp
pop
dec
enter
lds
fcoml
mov
fsts
loope
mov
push
pop
outsb
sbb
int3
stos
push
bound
cld
test
jo
sbb
scas
push
jnp
aad
xchg
and
mov
movsl
mov
cmpsl
mov
or
lret
mov
and
shlb
scas
add
mov
lea
test
dec
shll
hlt
pop
mov
jbe
or
inc
cmc
add
out
dec
xor
imul
cmp
imul
xor
inc
adc
xchg
push
sar
das
das
js
xor
fcmovne
mov
mov
inc
sbb
cs
pushf
xchg
xlat
push
fimuls
mov
out
stos
xor
cld
rcll
daa
daa
int3
jns
push
jbe
les
sbb
dec
xor
js
xorb
lret
pop
push
dec
bound
mov
add
fs
faddl
call
sub
mov
repnz
push
push
out
arpl
pushf
cltd
mov
jge
cmpsl
pop
lret
popl
daa
add
xchg
rcl
inc
stc
sub
sbb
inc
dec
or
outsl
push
popa
sbb
inc
leave
fbstp
ja
ret
mov
gs
adc
push
jne
lea
aas
cmp
pop
cmp
loopne
or
aaa
stos
or
jo
inc
sub
or
mov
mov
push
mov
cmp
and
lahf
loop
push
xor
push
cli
pop
jnp
push
int
adc
out
adc
cmpsl
mov
ds
dec
test
mov
xor
mov
int3
jl
pop
sub
push
addr16
pushf
into
adc
push
es
negb
jnp
scas
in
ja
cli
push
iret
mov
dec
test
xor
mov
fwait
sbb
sbb
mov
insb
ret
and
pop
stos
or
popl
cmp
and
scas
ret
dec
push
cltd
icebp
pop
shrl
pop
push
inc
dec
dec
movsb
jbe
pop
inc
mov
mov
shll
and
aad
pop
and
jbe
mov
sub
jbe
jnp
addr16
loopew
aas
insb
add
popa
daa
jl
repnz
pop
mov
arpl
push
mov
ds
fimuls
aas
mov
xchg
imul
xor
sbb
loop
pop
loop
jns
leave
shlb
je
fiadds
inc
icebp
stc
fs
push
fs
jns
lret
jb
scas
push
and
ds
mov
lds
dec
mov
lds
fxch
push
xorl
cmc
divl
mov
xor
jb
dec
std
mov
xor
xor
dec
das
je
test
insl
jno
mov
mulps
push
imul
or
mov
and
bound
jns
ficompl
adc
ds
dec
inc
xor
add
icebp
inc
stos
xor
ss
int
sbb
mov
dec
and
in
jnp
pushf
adc
in
pop
gs
in
test
icebp
dec
pop
loop
sub
add
push
jmp
iret
mov
xchg
shll
in
add
xchg
mov
mov
jno
aam
jne
sub
stos
pusha
outsb
inc
adc
sbb
lret
sub
xor
adc
push
add
sbb
dec
enter
shlb
adc
add
adc
jmp
lahf
lock
and
ja
cmpb
sbb
ja
jg
xchg
add
shll
out
dec
aam
mov
add
mov
pushf
pop
add
pusha
test
jae
aaa
dec
xchg
mov
lcall
nop
jge
scas
push
icebp
bound
mov
fld
mov
iret
fistl
cmpsl
out
out
movsb
push
lcall
psubusb
in
hlt
in
pop
mov
xchg
jecxz
or
inc
movsb
pop
shll
in
pop
push
inc
add
xor
nop
dec
or
push
aaa
jae
sub
daa
and
scas
arpl
jcxz
pop
imul
fcmove
or
inc
mov
jbe
push
cmpsb
mov
jg
cmp
mov
subl
ja
pusha
or
pusha
stc
insb
adc
cli
add
pop
inc
add
out
lea
lcall
andb
xchg
stc
ret
push
cmp
add
jl
sbb
icebp
sbb
jge
xor
xchg
in
ljmp
mov
sbb
mov
ljmp
stc
addr16
cmp
aam
xlat
pop
or
mov
imul
xchg
orb
ds
pushf
je
loopne
lods
pop
push
fsts
fisttpll
sarl
add
scas
dec
mov
jmp
arpl
jae
data16
mov
lods
sub
mov
push
add
lds
in
cmp
mov
mov
outsl
mov
ss
imul
ret
lods
xchg
pop
xchg
scas
cmp
mov
sarb
cld
stos
ja
loopne
lock
in
push
dec
pop
imul
rcrb
mov
ret
arpl
aaa
push
mov
pop
les
adcl
addr16
or
mov
inc
jns
rol
mov
xor
je
push
dec
dec
lcallw
jne
dec
xchg
xchg
enter
je,pt
sub
jl
adc
filds
andb
xor
fwait
or
push
fs
or
cmp
and
mov
sbb
push
dec
mov
movsl
pop
stos
inc
int3
sub
sub
ficoml
xchg
rclb
loopne
clc
fstpl
xchg
xor
sbb
mulb
jg
cmpsl
lahf
popa
pop
repz
xchg
ljmp
push
push
jecxz,pn
or
jnp
rcrl
insl
popf
mov
sbb
mov
fstpt
mov
rcll
cmp
lods
jns
push
jmp
push
pop
out
fs
or
js
cmpsb
imul
mov
mov
and
fistl
xlat
test
aaa
ja
xor
sahf
movsl
mov
xchg
xor
in
add
sub
imul
dec
cmp
inc
mov
test
and
jl
add
xor
cmpsb
lahf
inc
ljmp
in
jno
into
lock
inc
and
movsl
out
call
adc
loop
decb
xor
adcb
or
mov
pop
xchg
push
cld
mov
stc
les
ret
cmc
in
sub
fildll
imul
dec
fwait
push
push
psllq
add
sub
jno
pop
stos
out
mov
test
jbe
mov
fnstsw
pop
mov
mov
lods
ficomps
les
and
std
lods
mov
push
or
aad
movsb
xchg
sub
leave
mov
xor
in
jmp
lahf
test
test
movsl
cmp
and
mov
push
push
jmp
adc
mov
adc
popf
mov
add
jg
or
cmp
lret
mov
loop
and
xchg
cmp
in
stos
das
cld
and
hlt
stos
lods
or
xorb
ret
xor
mov
mov
xlat
mov
add
adc
ficompl
pop
mov
push
shr
mov
jmp
mov
xor
paddd
aas
mov
icebp
fiaddl
mov
leave
lock
lods
inc
xlat
loope
mov
ja,pt
push
push
push
int
mov
or
movsl
jl
add
mov
pop
movsl
aam
sarb
inc
mov
xchg
jno
data16
lods
cmpsb
loopne
dec
jecxz
mov
arpl
mov
rol
mov
cwtl
das
lods
push
sbb
lcall
fmuls
mov
mul
decl
push
inc
adc
mov
push
lahf
lret
pop
jmp
imul
out
or
cmp
daa
decb
sbb
ljmp
fisttpll
add
sbb
divb
popa
call
sub
icebp
iret
fidivl
loop
xlat
aaa
or
add
scas
loop
add
inc
mov
mov
outsb
inc
jge
shl
int3
push
incb
sub
mov
int3
dec
les
jge
ljmp
ljmp
or
cwtl
xor
sbb
xor
sahf
ja
andl
cli
xor
test
fwait
sbb
call
inc
inc
xor
stos
lret
and
lock
imul
pop
xchg
mov
shl
mov
das
loope
lods
adc
jns
push
and
sub
and
loope
repz
sub
cmc
pop
or
shrl
pop
sub
mov
stos
and
stos
mov
sbb
sub
push
mov
sub
lods
or
push
movsl
push
inc
mov
js
mov
mov
es
insb
rclb
dec
push
add
push
push
mov
inc
test
in
pusha
mov
int
outsl
test
or
or
and
pop
jb
sub
aad
pop
inc
adc
jp
push
aas
rcr
rcrl
faddl
shl
orb
inc
xor
cmpsb
jecxz
ss
pop
dec
test
sub
leave
pop
sub
hlt
stos
lahf
jmp
das
jb
sub
sbb
out
cmp
xlat
int
pop
inc
mov
cmp
pop
bnd
gs
imul
call
lret
mov
in
test
mov
sbb
divb
flds
loopne
sbb
add
shll
adc
stos
cmp
popa
test
rolb
in
bound
push
inc
sahf
js
out
sub
rol
mov
sahf
rcll
out
pop
ss
loope
xchg
jle
int3
leave
insb
aad
push
mov
shll
dec
outsl
sub
loop
jb
add
sahf
jae
ljmp
lods
fsubrl
jnp
jns
and
mov
jp
and
cmp
mov
addb
fwait
inc
aad
xor
xchg
dec
cmp
lret
hlt
push
fisttpll
orb
mov
lahf
jp
popf
sar
scas
mov
test
stc
test
or
nop
xchg
mov
push
and
mov
jge
xchg
xor
aaa
jns
lock
or
ror
aad
int
mov
push
pop
xor
xchg
stos
lds
mov
jg
dec
xchg
push
mov
cmc
jne
inc
pop
cmp
aaa
sub
and
test
mov
test
aas
mul
jno
jne
je
subb
jb
sti
push
les
mov
inc
outsl
jg
sub
cmpsl
dec
cmp
loope
add
cmpsb
jecxz
xchg
mov
or
adc
aas
popa
jae
jmp
and
stos
push
add
sbb
xor
fnstenv
dec
loope
loope
cmp
cmpsb
or
stos
inc
fstpl
addr16
or
sbb
aad
dec
dec
mov
adc
sti
sbb
xchg
ljmp
xor
or
adc
sbb
sbb
rorl
or
pushf
xchg
xchg
jmp
push
mov
or
or
lcall
dec
lock
aam
aam
pop
popa
aad
sbb
push
xchg
xchg
sbb
insl
outsl
adc
inc
push
pop
inc
xor
mov
mov
xor
addr16
push
pop
fldl
inc
out
aaa
inc
loop
pop
push
repnz
fimull
lds
mov
mov
sub
sub
scas
jg
aam
aaa
test
push
or
outsb
push
lods
pushl
popa
out
or
and
add
fbld
loope
imul
and
add
adc
xor
or
add
mov
enter
movsl
jnp
stos
fidivrl
xchg
in
je
mov
sub
movsb
mov
outsl
mov
es
out
jle
pop
jo
cmp
sbb
and
aaa
outsl
push
mov
data16
out
and
or
jbe
lcall
popa
inc
aaa
xor
jmp
ret
pop
shll
or
cmpsl
hlt
dec
and
mov
pushf
mov
and
push
jge
or
cwtl
addr16
mov
lcall
and
mov
pandn
add
out
xchg
ss
xlat
testl
fiaddl
jg
vprotd
pop
jge
std
pop
inc
add
xchg
clc
cmp
popa
or
inc
dec
ret
sahf
sub
ror
fs
into
fistps
pop
ja
inc
add
shlb
and
mov
push
aaa
movsl
nop
ljmp
clc
aas
in
paddq
cltd
das
pop
repz
cs
sbb
lcall
and
pushf
icebp
imul
mov
scas
mov
xor
mov
push
mov
into
into
dec
dec
xor
mov
inc
jae
clc
dec
push
push
adc
pop
push
jmp
mov
pop
sub
mov
clc
ret
shrb
int3
jb
mov
and
fwait
jge
sub
cs
leave
xchg
scas
sub
push
cmp
adc
icebp
pop
sub
adc
mov
xchg
mov
cmp
in
movsl
jecxz
mov
jae
fs
iret
out
mov
jo
cli
arpl
push
sub
dec
outsb
aas
or
popa
mov
outsl
jb
mov
add
inc
jno
sbb
jne
pop
popf
inc
fisubs
in
fcomip
mov
add
pop
adc
out
xchg
sbb
movsl
dec
fsts
shll
loopne
data16
mov
dec
inc
xor
mov
and
cmp
dec
cmp
mov
fstp
clc
aaa
out
cmp
mov
xor
scas
mov
adc
add
movsl
pushf
adc
pop
enter
ret
xor
fldl
test
sbb
or
jle
sub
pop
push
pop
or
incl
mov
scas
inc
inc
in
inc
cmpsb
adc
push
jne
clc
pushf
icebp
arpl
jmp
ja
inc
mov
mov
je
out
fcomip
lret
mov
test
push
js
jne
imul
movsl
not
pop
enter
outsl
test
cmp
mov
movsl
mov
js
aam
xor
scas
lock
test
mov
pusha
aaa
cmpl
cmp
or
mov
xor
adc
fidivs
xor
or
fbld
jb
fwait
push
sti
pop
arpl
add
mov
outsb
stos
mov
mov
xchg
jbe
and
dec
lcall
clc
addr16
xchg
add
js
lods
mov
pop
mov
mov
jb
sub
in
fcomps
add
in
push
fbld
add
pop
jo
mov
addr16
sub
or
fucomp
xor
les
dec
xchg
jae
xor
pushf
or
mov
inc
push
outsb
push
inc
bound
sub
and
inc
out
in
cwtl
xchg
xchg
test
mov
das
fcmovb
shl
jns
cmp
test
push
into
cmp
test
jb
xor
cwtl
jg
jbe
cmc
ljmp
inc
mov
cmpsb
out
pop
ss
lods
daa
stos
pop
fwait
addb
cmp
add
inc
clc
repnz
lret
dec
mov
lods
arpl
insl
adc
inc
cs
pop
xchg
jne
movsb
lahf
cmpsb
scas
dec
loope
add
vshufps
mov
jb
pop
lea
and
in
inc
call
imul
xchg
jl
aaa
and
xchg
cmpsb
sahf
mov
xchg
out
pop
and
add
sbb
bound
xor
add
sub
lods
mov
push
xchg
es
jnp
xor
xlat
xor
mov
out
xchg
sbb
in
in
sbb
aas
cmpsb
scas
push
cmp
sub
scas
loopne
lock
fwait
push
ret
push
xchg
decb
scas
aas
aaa
enter
mov
cmp
aaa
mov
dec
add
push
push
cmp
bswap
xor
xchg
push
or
cltd
adc
xor
repz
enter
and
jbe
mov
loope
xchg
adc
push
imul
movsb
in
xchg
add
mov
adc
and
pop
push
inc
add
cmp
sub
imul
cmp
cmc
clc
sub
jbe
sbb
jne
jo
roll
mov
push
stc
ret
cmc
nop
addb
popa
fcomps
fcom
cld
insl
mov
pop
jg
and
or
push
pop
pop
jns
fidivrs
std
inc
roll
lcall
imul
les
cmpsl
mov
sarl
dec
cwtl
loope
call
scas
push
push
mov
in
ss
popf
out
outsl
inc
lods
lcall
mov
shlb
outsl
xlat
jmp
sbb
inc
iret
xlat
cmp
or
cld
cmc
jnp
icebp
mov
testb
cld
lret
lods
fnstcw
ja
and
cmc
fldt
aam
mov
shll
notb
mov
push
mov
push
cmp
sahf
adc
aas
pop
push
push
mov
dec
xchg
pushf
arpl
aaa
ficompl
add
sbb
jne
pop
cmp
push
jnp
or
aaa
mov
dec
ret
pop
fwait
xor
sbb
inc
bound
cmp
fs
pop
mov
add
xchg
jle
push
jmp
andb
add
mov
lods
xorl
shll
iret
loopne
jle
mov
jnp,pn
xor
xchg
je
sbb
push
jnp
ljmp
mov
mov
fistl
jmp
fs
or
pop
aaa
divb
stos
popa
scas
hlt
cmp
sub
pop
fisubrs
or
push
jmp
dec
dec
fcmovu
push
add
inc
jl
outsl
cmc
xchg
sbb
cmpsb
cmp
sub
adc
test
jns
mov
fcmovb
in
scas
cld
mov
in
or
stc
lea
loopne
dec
add
lcall
push
test
mov
push
popa
les
outsl
jb
push
cmp
jae
addr16
jne
mov
pop
xor
or
xor
ljmp
call
cmc
imul
es
je
jb
loop
jmp
dec
add
cltd
xchg
or
cltd
stos
inc
xorl
daa
push
dec
stos
or
rcrb
js
lret
imul
xlat
imul
call
push
xchg
fwait
int
xchg
scas
aad
cmp
lcall
enter
mov
das
nop
dec
lret
pop
jae
rcrl
cltd
push
sub
adc
mov
xor
xor
sbb
mov
xor
cmp
fsubs
lea
in
pop
insl
or
add
or
pop
mov
lret
sub
cld
outsl
aas
add
and
insl
xchg
aaa
ficoml
mov
mov
sub
je
leave
adc
or
inc
cmpsb
push
movsb
mov
enter
mov
ret
add
xor
and
xor
outsb
push
addb
loopne
or
push
xchg
fwait
enter
mov
iret
xchg
sub
mov
and
adc
js
test
mov
pop
sti
lds
push
and
push
stos
ret
pop
mov
fistps
movsl
adc
push
jg
mov
or
inc
ljmp
add
mov
mov
and
pop
movsb
cmp
jle
cmpsb
out
pop
cmp
outsb
add
or
pushf
lods
adc
fsubs
push
das
aad
dec
jo
aaa
sti
and
xchg
addb
out
mov
icebp
and
lods
add
add
dec
lods
add
cmovae
inc
pop
cmpsl
cmp
lahf
xlat
xlat
sbb
inc
add
leave
les
xchg
push
and
pop
add
pushl
test
inc
daa
pop
je
adc
inc
out
xor
push
cmpb
xchg
pop
lahf
in
xchg
cld
lods
movsb
cwtl
shlb
sub
lock
xchg
inc
outsb
jp
nop
add
jmp
mov
adc
mov
or
js
aad
inc
pusha
lock
dec
loop
mov
sbb
sub
mov
inc
add
mov
sbb
cmpsl
inc
mov
inc
push
add
test
mov
ljmp
inc
imul
fsubl
lret
xor
xchg
sub
testl
fimull
in
ljmp
mov
pop
fmul
sub
pop
leave
or
shlb
out
notb
pop
or
sbb
xchg
dec
push
push
into
in
push
mov
push
fwait
dec
fs
add
aaa
and
std
imulb
pop
ja
sti
xchg
aaa
mov
xor
push
inc
insl
push
xacquire
dec
sbb
retw
aam
pop
xchg
icebp
sbb
pop
dec
insl
frstor
in
aas
ret
in
inc
sub
sarb
push
dec
cltd
call
fs
lahf
jno
mov
popa
jge
and
adc
xor
push
out
or
out
dec
adc
mov
sbb
jnp
or
adc
insl
push
xchg
out
or
cmpsl
bound
cmp
out
ror
ja
mov
scas
mov
sub
jmp
movsl
outsl
adc
andb
outsb
ljmp
mov
ret
xor
jge
mov
xlat
aas
movsb
es
dec
mov
popa
cld
adc
imul
loope
inc
ljmp
dec
cmp
int
ret
in
mov
xor
xchg
xchg
std
dec
je
cmp
or
and
and
mov
inc
inc
jmp
mov
sarl
in
pusha
adc
xor
mov
mov
pop
sub
into
cmp
mov
mov
mov
adc
lds
and
cmp
dec
das
pop
inc
fwait
aam
in
mov
mov
fldl
xor
notb
mov
dec
mov
mov
in
mov
aad
ljmp
adcb
or
cmp
jb
lea
fwait
cwtl
cwtl
and
sbb
fs
or
call
dec
jle
andb
adc
lods
frstor
xchg
imul
div
sbb
sub
movsl
in
imul
popa
fnstsw
push
dec
negl
push
cmc
pop
mov
loope
adc
add
mov
jb
push
mov
pushf
cwtl
repnz
rolb
cmp
dec
add
or
pop
aad
jle
mov
addr16
dec
lock
inc
je
jb
cmp
mov
arpl
outsb
pop
mov
lds
outsb
pop
fcoml
push
cld
aam
ret
sbb
fdivs
out
jg
or
push
arpl
cmp
out
dec
cmp
repnz
es
sbb
movzbl
mov
out
xchg
out
and
xor
or
sti
cltd
cmp
cmpl
inc
or
ljmp
jp
and
icebp
mov
push
test
test
and
cmp
mov
out
jge
incb
sub
or
sar
in
faddl
std
dec
push
das
dec
dec
xchg
insl
in
int
add
mov
bound
insl
adc
xlat
cmpsb
cmc
or
lcall
mov
jne
cli
jge
stos
and
bound
mov
pop
and
add
sbb
lods
mov
in
xor
insl
add
xchg
mov
push
pop
movsb
lea
andl
dec
lret
inc
mov
into
or
insb
loop
mov
jo
add
aam
jno
jmp
dec
or
in
mov
mov
cmp
and
and
lret
push
pop
clc
inc
popa
mov
mov
jae
fwait
cli
push
xorl
mov
push
cmc
xlat
mov
outsb
test
icebp
mov
inc
mov
ljmp
sub
inc
jp
cmpsb
arpl
rclb
and
and
add
push
jns
filds
stos
add
push
dec
push
and
cmp
mov
arpl
gs
mov
dec
cmp
das
sub
test
lds
push
std
xor
mov
jno
sub
movsl
mov
mov
mov
cmp
ljmp
rcl
jnp
push
cld
stos
push
cwtl
dec
popa
leave
xchg
outsl
rolb
mulb
xlat
pop
pushf
in
mov
pop
ss
cmp
cmp
sub
pop
mov
or
sub
mov
pop
inc
daa
sub
adc
add
push
sbb
pushf
fistl
mov
pop
int3
jl
test
push
mull
fcmovb
inc
test
scas
int
popa
jp
or
jae
dec
es
and
test
fisubl
adc
mov
loop
sub
jle
sbb
sbb
cmp
sbb
fbld
adc
or
sbb
repz
enter
aad
fs
lea
call
xor
xlat
jne
pop
rolb
sbb
xchg
movsl
jne
pushf
and
popf
pop
push
jmp
cmp
jp
dec
jbe
aad
andb
push
rcl
jle
push
push
ja
es
sub
pop
dec
addb
loop
lret
mov
test
xchg
aaa
push
mov
mov
adc
jmp
cmpsb
sub
push
jns
jl
mov
jbe
xor
push
push
aam
insb
adc
pcmpeqw
scas
xchg
scas
cld
std
pop
xrelease
adc
ret
rclb
lea
inc
jns
stos
dec
push
and
insb
xchg
leave
dec
mov
xor
jbe
scas
icebp
andb
aaa
bound
stos
jecxz
mov
test
repz
scas
insb
push
filds
pop
sbb
sub
imul
lcall
sub
mov
dec
aam
ljmp
lahf
insl
lahf
and
gs
scas
loopne
testb
imul
inc
outsb
push
mov
sbb
outsb
mov
mov
pop
scas
cmp
xor
xchg
or
or
sbb
mov
inc
pop
and
xor
out
cmpsb
jp
jne
sbb
pop
dec
test
and
scas
pop
add
shrl
cmp
mov
data16
push
mov
xor
mov
fst
dec
subl
popa
cwtl
adc
dec
cmc
mov
mov
out
adc
and
mov
inc
es
fcompl
pop
imul
mov
stos
or
es
jnp
in
mov
adc
push
xlat
adc
mov
shlb
int
data16
pop
inc
sub
out
addr16
vmovdqa
xchg
in
dec
push
jb
fisubrl
sub
mov
ret
jmp
and
adc
mov
mov
fisubs
xchg
add
adc
imul
in
cwtl
arpl
pop
mov
popf
and
xor
push
test
out
bound
add
push
incb
shl
hlt
rcll
xchg
mov
mov
add
xchg
popw
adc
cmp
and
rolb
sbb
sbb
lcall
mov
lods
aas
pop
ljmp
mov
push
cltd
pop
sbb
add
sub
inc
xchg
rclb
sarl
adc
hlt
shll
pop
stos
mov
inc
dec
pop
or
movsl
or
xor
mov
add
cmpsb
je
and
test
mov
inc
sub
sbb
mov
mov
cmp
loopne
imul
ds
scas
cmp
test
andl
std
jno
call
cmp
int
cmc
ja
xchg
addr16
or
pop
les
imul
addr16
lock
cmovae
sahf
jl
push
popf
icebp
je
xchg
sub
push
in
adc
stos
inc
mov
fwait
adc
xor
cmpsl
test
sbbb
fildll
and
fnsave
repnz
adc
push
outsl
add
adc
sbb
rcll
lock
loop
jp
or
fistpl
dec
adc
popa
loopne
xchg
shll
xor
int3
and
gs
pop
sub
lea
mov
jmp
in
rcrb
stos
pop
mov
sub
push
pop
cltd
push
std
or
addr16
xor
add
or
pop
pop
xor
xchg
cmp
rorl
push
mov
inc
adc
rolb
add
push
mov
or
loop
adc
loop
or
test
pushf
mov
jp
jp
pusha
cmp
ja
pop
sub
xchg
fisubrs
popa
cmp
add
ds
or
ret
mov
mov
push
push
or
jl
sbb
cmpsl
test
fcmovbe
lret
cmp
clc
xor
repnz
adc
mov
test
repnz
stc
cwtl
push
shrl
and
outsl
loop
or
dec
jne
arpl
das
or
filds
and
pop
jbe
decb
lds
mov
fdivl
arpl
adc
in
les
cmp
mov
mov
jb
jmp
push
inc
dec
clc
cltd
xor
sbb
sub
stc
mov
push
cmpsl
stc
xor
pop
data16
mov
xchg
or
xor
sti
mov
imul
int
shrb
jno
mov
adc
movsb
xchg
sti
jmp
sbb
adc
data16
das
mov
movsl
pop
xchg
jmp
loop
or
inc
inc
clc
pop
and
in
pop
loop
mov
jg
push
sbb
push
mov
sub
push
lea
inc
lods
adc
mov
jae
shrb
lret
pop
jae
add
mov
int3
push
sbb
pusha
into
bnd
or
movsb
cmpl
jle
mov
jb
ret
jmp
int3
repnz
jb
pop
push
je
es
mov
ljmp
insb
pop
popf
cmc
sub
fstpt
xor
stos
outsb
inc
std
inc
nop
pop
dec
or
push
das
sysret
sbb
loope
test
ljmp
ret
int3
ja
popa
pushf
rclb
sbb
std
or
fistpll
out
jl
sub
pusha
push
ds
sbb
bound
adc
pop
out
or
movsb
adc
inc
xor
and
fldenv
inc
inc
xor
negl
jo
insb
cmp
mov
xchg
pop
mov
pop
stc
es
or
adc
shlb
pop
ljmp
rcrb
cs
cmp
cltd
jmp
push
ja
cmpsb
mov
mov
sbb
das
and
mov
push
and
push
push
mov
pop
fisttpl
push
cmp
xchg
ret
mov
out
sub
ret
mov
loopne
ja
mov
leave
cmc
pop
outsb
mov
mov
cmp
outsb
int3
mov
testl
cmp
cs
mov
bound
imul
mov
dec
add
jge
lds
nop
adc
push
push
xorl
aaa
pop
aad
add
cli
and
lret
shll
xor
mov
lods
and
std
dec
jg
sbb
and
stos
lcall
adc
ljmp
in
jb
popa
in
out
sbb
ret
push
pop
push
imul
out
or
insl
icebp
in
sbb
push
shl
fcoms
sbb
aam
xchg
push
pop
cs
push
lahf
push
in
sbb
adc
jmp
and
pop
jno
or
lret
pop
insl
jecxz
imul
iret
in
clc
adc
pop
inc
sub
pop
insl
xlat
sub
dec
ja
sbb
gs
aam
sbb
in
cmpb
add
mov
adc
push
mov
mov
mov
lcall
test
jno
mov
lret
xlat
loope
stc
jns
push
fs
jmp
or
rorl
pop
or
loope
xchg
cmp
pop
adc
imul
repnz
dec
mov
subl
icebp
or
xor
adc
mov
and
adc
fmuls
adc
ret
mov
add
mov
test
cmp
jbe
inc
sti
mov
pop
push
fwait
pop
popf
popf
mov
out
andl
aaa
leave
fcmovne
cmp
in
push
test
xor
in
lret
xchg
jge
incl
mov
test
ss
xor
sub
lods
test
inc
ret
fidivs
xor
xchg
jl
xorl
sub
cwtl
xchg
lahf
outsb
add
mov
stos
sar
xrelease
repz
jmp
in
fstps
lods
scas
fs
mov
and
lods
cmp
inc
movsl
cmp
and
fistpll
mov
dec
jbe
push
xor
repz
dec
push
jmp
push
pop
movsl
xor
sbb
add
lret
ret
dec
jnp
movsb
xor
clc
pop
jnp
repnz
lcall
jno
not
pop
dec
inc
imul
xchg
aam
jecxz
cmpsl
push
sti
xor
pop
jg
nop
sub
mov
pop
or
cmp
clc
das
pop
jbe
pusha
inc
dec
mov
or
sub
mov
lods
rsqrtps
and
push
rcrl
out
dec
sub
iret
in
in
sub
cmp
fcmovbe
out
push
pop
add
xor
inc
dec
add
dec
pop
mov
iret
adc
std
adc
xor
ja
int3
xor
inc
mov
aam
lods
inc
in
inc
aad
sti
aas
leave
sbb
fadds
insb
lods
inc
cmp
adc
dec
mov
pop
sub
and
test
aaa
fnstsw
inc
mov
mov
aad
mov
stos
sbb
mov
dec
ja
shrb
pop
mov
cltd
xor
cli
xchg
lock
push
mov
in
and
dec
xor
cwtl
inc
push
sub
add
push
mov
xchg
mov
inc
test
cmc
call
adc
cmc
popf
insb
or
repnz
scas
sub
out
aaa
rcrl
outsl
push
dec
mov
pop
adcb
add
loope
leave
sub
out
push
sub
rcrl
int3
sbb
dec
and
jp
jae
push
jne
and
inc
jno
clc
cmpsl
add
jp
ss
pop
je
dec
nop
in
aad
lods
push
xchg
lcall
popf
fiaddl
pop
lret
pop
mov
je
dec
les
jbe
rorb
addr16
dec
xchg
repz
xchg
lahf
shlb
mov
and
sub
inc
jle
and
je
jnp
cltd
call
push
xor
lcall
cmpsl
dec
sbb
js
stc
lret
outsb
mov
fcoms
jno
cmp
and
clc
movsb
xor
lods
fisttpl
shll
fwait
adc
or
cmpsb
pop
addr16
sbb
or
pop
or
mov
enter
test
fsts
xor
aas
ds
addr16
inc
lret
push
fstl
pusha
cmp
inc
jb
imul
pop
jmp
sbb
movsb
mov
rorl
andl
out
pop
fdivrs
test
cwtl
out
fidivs
mov
push
pop
add
xor
test
xchg
cmp
jl
pop
or
push
add
push
in
imull
mov
jnp
sbb
cmp
shrb
sub
pop
pop
lcall
imul
into
mov
cmpsl
mov
imul
or
out
mov
std
xor
mov
mov
fisubs
push
xrelease
lods
test
pop
add
cmp
jbe
inc
lds
test
inc
ds
cmp
pop
in
sub
or
inc
and
push
icebp
add
push
jnp
mov
daa
jb
gs
add
sahf
inc
add
dec
push
sub
xchg
int3
inc
or
mov
lea
or
fildll
sbb
bound
push
xlat
in
inc
dec
outsb
push
pop
push
add
fdivr
stc
adc
out
fs
stc
scas
pop
pop
push
mov
clc
xchg
push
inc
inc
push
prefetch
or
fbstp
dec
ficompl
mov
and
out
push
aad
clc
inc
fsubrl
loopne
push
cmp
clc
mov
mov
pop
or
xchg
ss
inc
adcl
pusha
sti
mov
icebp
imull
dec
mov
lea
jae
fwait
xchg
ret
fxch
push
add
xchg
xchg
rorl
nop
dec
push
subl
rcl
loopne
loope
cmp
or
bound
mov
bound
lds
mov
rdmsr
mov
ds
aaa
shlb
add
mov
mov
mov
imul
add
inc
jecxz
jae
adc
xchg
decb
rcll
jl
lcall
jecxz
or
popa
cmp
insl
mov
fs
pop
cmc
fistpl
lock
dec
test
dec
fidivl
call
mov
leave
mov
stos
pop
jb
inc
or
xchg
adc
pushf
lds
jl
stc
adc
aas
jne
fwait
js
add
es
mov
xchg
into
xchg
aas
add
mov
push
nop
jmp
and
aam
aas
sub
jge
clc
std
std
int3
mov
ljmp
std
scas
insl
out
icebp
jb
inc
adc
push
cmp
sti
xchg
dec
mov
movsl
fimull
sti
cmp
push
xor
add
ret
lods
xor
lods
push
cltd
out
sub
mov
sub
in
xchg
out
xchg
jmp
xchg
test
clc
mov
xchg
sub
and
jbe
rcrl
std
ret
xor
dec
test
aam
hlt
cmpsl
cmovp
xchg
je
enter
loope
sbb
xchg
jb
mov
icebp
pop
sbb
loopne
mov
push
les
out
sbb
fiaddl
xor
ss
pop
fstp
add
aaa
sub
xor
pop
nop
mov
stos
addr16
mov
xchg
mov
lret
jl
mov
shl
xchg
in
incl
stos
dec
arpl
jmp
push
out
test
sub
pushf
icebp
repz
testl
or
imul
ss
mov
mov
nop
lcall
stos
add
aas
push
fcmovnb
popa
lea
dec
xor
stos
mov
mov
xor
test
mov
mov
nop
mov
scas
test
jp
mov
xchg
sbb
add
jno
aad
outsl
adc
adcl
and
adc
cmp
adc
xorl
in
repnz
inc
into
out
je
inc
xorl
or
out
jge
lahf
lret
mov
addb
push
cmp
movsl
into
push
movsb
inc
jmp
daa
xchg
out
jbe
jl
sbb
dec
dec
xor
jns
inc
les
mov
xchg
mov
jbe
lcall
xor
inc
mov
popa
xor
and
mov
mov
cmp
fisttpl
dec
mov
js
mov
push
sub
loope
xor
gs
lods
pop
loop
les
sub
jb
bound
repz
cmp
test
ds
jecxz
mov
test
dec
std
jno
cmp
jae
call
dec
fimuls
leave
scas
fdivrl
enter
rolb
pop
movsb
mov
dec
xor
inc
and
mov
and
call
sbb
push
imul
sbb
ds
add
push
cltd
sub
cli
mov
adc
adc
jo
stos
clc
and
mov
push
add
cmp
ja
dec
mov
cld
xor
loop
or
mov
jb
imul
xchg
push
fadds
fidivrs
popa
xchg
subl
xchg
inc
push
and
mov
or
fisttpll
inc
sarb
lcall
aad
xor
paddb
out
daa
pop
inc
pop
pop
sti
cli
lock
add
inc
xchg
push
repz
iret
out
loope
hlt
js
fcmovnbe
mov
pop
lret
mov
mov
mov
push
jge
adc
enter
bound
cmp
or
xchg
fdivp
sbb
test
scas
inc
push
dec
push
mov
pushf
addr16
cld
pop
lret
adc
ljmp
mov
loop
mov
pop
cmp
in
stc
lret
push
mov
shrl
mov
int
subb
test
daa
push
into
xlat
les
cmp
mov
dec
and
outsb
push
push
lret
sbb
lods
es
out
es
insb
push
js
aam
mov
push
add
ds
fstp
imul
pop
jp
sbb
mov
xchg
or
mov
xor
pushf
adc
xchg
js
scas
mov
xor
push
xchg
fnstcw
fmuls
xor
pop
outsl
dec
inc
clc
xor
xor
jns
movsb
cmp
push
adc
ret
cmp
cs
push
or
ljmp
dec
in
lea
das
xor
repz
sbb
xchg
fdiv
imul
and
lcall
xor
sbb
pop
pop
rol
xchg
lods
insb
or
mov
mov
fwait
jno
iret
iret
push
ficoml
lret
push
dec
push
jecxz
cs
push
gs
sub
hlt
std
leave
sbb
addr16
push
subb
in
inc
mov
daa
jo
sbb
mov
jne,pt
sti
xor
push
out
fidivrs
jne
test
insb
xchg
sbb
jecxz
xchg
sbb
mov
inc
mov
shrl
inc
mov
lret
movsb
mov
adc
popa
mov
cs
xchg
jne
adc
aaa
ljmp
or
outsl
lock
dec
pop
inc
fwait
inc
mov
xorl
push
xor
jmp
inc
loopne
add
stos
xor
lods
xchg
lcall
push
ljmp
pushf
stos
into
xchg
mov
push
pop
xchg
sub
sbb
stos
lret
sbb
jnp
movsl
adc
cmpsl
int3
in
jbe
xchg
add
pop
mov
inc
lcall
push
shlb
jae
shlb
arpl
inc
xchg
sti
dec
shrb
pop
mov
push
pop
test
ret
lcall
mov
sub
inc
push
scas
xchg
inc
rolb
or
xchg
mov
add
add
cld
loopne
clc
xchg
pop
xchg
xchg
jns
leave
les
jle
adcb
lcall
add
xor
sahf
mov
notb
xlat
pop
mov
jo
std
push
jo
sbb
add
insl
orl
lock
pop
insl
mov
xlat
sbb
enter
xchg
push
cs
push
xchg
xor
test
lods
push
imul
xor
push
jo
push
adc
out
or
adc
lcall
sbb
lahf
shr
icebp
and
pop
dec
dec
mov
mull
add
mov
shl
inc
dec
fsts
push
xchg
das
roll
xor
ficompl
or
dec
push
jns
pop
mov
lret
clc
fmull
outsl
dec
add
jne
movb
int3
xchg
jmp
push
fwait
into
xchg
inc
push
cs
out
int3
push
and
lods
cmp
lret
fwait
in
ret
mov
lods
adc
sbb
outsb
pop
cmp
aad
popf
push
fcom
ret
jbe
xchg
or
fucomip
inc
xor
out
cli
push
testb
jmp
int
int
jae
pop
or
cmp
arpl
jecxz
test
fstpl
rcr
cmp
mov
xor
jae
fstps
xor
xchg
mov
mov
xlat
adc
jg
cmp
jmp
or
aas
xor
cmp
stos
cmc
out
adc
cs
inc
std
mov
xlat
jbe
fcoml
inc
ds
and
push
xchg
pusha
jbe
push
mov
cmc
sahf
sbb
sub
lret
xorb
dec
call
jl
lret
sbb
movsb
push
lret
loop
imul
jns
xor
sub
repnz
and
add
mov
aas
movsl
dec
mov
das
clc
ds
enter
fstpt
push
cmpb
sbb
stc
je
add
addr16
fcmovb
rcrl
out
outsb
dec
xchg
add
push
decl
lods
xchg
cmp
repnz
dec
hlt
lret
out
sub
jns
popf
fwait
inc
xor
adc
cs
dec
push
dec
roll
outsb
test
cmp
or
js
aam
jns
gs
xchg
cmpsb
push
xchg
or
mov
mov
adc
lock
inc
scas
pop
cmp
jo
cmpsb
test
push
jns
shll
imul
int3
or
push
gs
shlb
add
fidivrs
dec
jno
cmc
fmull
mov
inc
mov
mov
pop
mov
das
push
sub
pop
dec
sahf
mov
mov
or
add
out
cmpsb
cmpsl
nop
mov
cmp
sar
sahf
adc
mov
test
add
lods
in
and
mov
or
xlat
sbb
xchg
push
cmp
mov
mov
sub
cli
repnz
jne
adc
je
mov
or
movsl
inc
dec
outsb
push
and
fcoml
and
out
mov
push
xor
mov
add
gs
in
inc
int
leave
clc
xchg
inc
inc
out
fimuls
js
add
xchg
inc
mov
sbb
shll
fnstsw
movsb
test
aam
leave
sbb
xor
hlt
roll
sub
das
mov
mov
ret
push
or
fwait
subl
je
sbb
mov
out
or
ss
and
ljmp
int3
sbb
dec
sub
fnstsw
cmp
out
adc
sbb
pop
int3
xor
mov
std
pop
xor
xor
iret
xor
fisttpll
jns
ret
stc
and
mov
or
sub
xor
loop
inc
in
inc
or
mov
scas
jmp
repnz
ret
cmp
push
mov
stc
xchg
in
call
mov
sub
arpl
inc
inc
imul
cmp
cli
cmc
fldt
stc
mulb
and
sahf
xor
in
xchg
scas
mov
jnp,pt
xchg
mov
pop
imul
push
mov
bound
sarl
in
push
xchg
addl
daa
xchg
cmp
nop
jae
repz
loop
xor
pop
or
leave
xchg
xlat
mov
xor
call
mov
sbb
ljmp
test
das
jg
punpckhwd
pushf
sbb
scas
fmull
jnp
aam
inc
xor
add
hlt
sbb
mov
div
mov
sbb
push
cmp
loop
pop
movsb
test
xchg
pop
popf
pop
jb
cmp
leave
in
mull
je
mov
stc
aad
jo
call
test
adc
roll
loopne
mov
fbld
jnp
inc
mov
out
xchg
adc
or
aaa
xor
dec
icebp
movsl
jb
pop
popa
mov
jae
pop
cmp
push
xor
cli
dec
imul
jmp
fcoml
pop
jb
sub
xchg
push
rorb
notb
loopne
mov
cmp
pop
cmp
pop
push
pop
dec
adc
insl
cmp
jmp
pop
fdivl
incl
shlb
xchg
pop
aaa
mov
and
push
int3
shrb
inc
inc
mov
out
pop
push
jecxz
and
lahf
jnp
dec
adc
sub
cmpsb
outsb
jge
sub
loopne
loopne
jl
adcl
lcall
adc
fiadds
call
subl
jns
cltd
pop
mov
lods
mov
loopne
lock
ja
lcall
pop
cmova
f2xm1
outsb
fisubs
and
mov
imul
in
jno
jp
movsb
push
add
negl
fbld
xor
mov
cli
add
push
cmp
repz
stos
cmpsl
mov
pop
ret
sub
xor
cmp
int3
fsts
inc
sub
cmp
xchg
dec
push
xchg
stos
dec
add
loopne
cli
call
stos
lds
ror
xchg
xchg
call
or
rorb
jmp
cwtl
test
fs
pop
negl
pop
es
loop
aaa
and
nop
cmp
addr16
aam
hlt
mov
sub
sbb
mov
push
jo
shrb
test
fcmovne
lret
pushf
jp
inc
xor
sbb
sarl
or
out
imul
roll
cmp
sbb
cmp
xorl
sarb
mov
rcrb
cs
jle
lock
pop
jnp
clc
sub
xlat
push
pop
and
sbb
movsb
mov
inc
aaa
aam
mul
mov
push
out
xor
jbe
push
jecxz
xchg
sub
cmp
jne
loope
loop
xor
dec
inc
cld
pop
aaa
xchg
inc
jl
popa
and
add
mov
in
in
in
xchg
notl
divb
lahf
loope
or
mov
cmp
lods
xchg
insb
icebp
enter
int3
jp
mov
xchg
dec
mov
sbb
pushf
test
movb
cmp
ret
dec
call
lret
loopne
fnstcw
add
out
xchg
jae
xchg
enter
scas
andb
or
ljmp
lahf
xor
xlat
xor
lods
mov
shrd
addr16
fwait
addr16
add
pop
xor
outsl
in
or
mov
mov
repz
mov
or
clc
xchg
out
adc
jp
sarb
cmc
scas
push
fwait
pop
xchg
sub
or
sahf
xchg
mov
and
popf
mov
dec
mov
movsb
nop
cmc
xchg
jbe
out
int3
ret
fwait
aam
mov
pop
xor
aaa
lods
jl
out
dec
inc
ffree
mov
mov
int3
movsb
call
in
aad
mov
aas
scas
daa
sbbb
and
push
sub
lret
mov
jo
jmp
dec
pop
lahf
loope
inc
pop
xchg
in
fwait
mov
push
dec
pop
or
and
push
mov
pop
add
ja
outsl
int3
xchg
xchg
pop
fwait
push
shlb
dec
aad
push
inc
fistl
inc
mov
mov
loop
ljmp
lods
mov
mov
xchg
and
or
clc
push
jo
loope
jae
push
orl
lcall
sahf
cld
inc
cmp
fildll
sti
lods
and
jmp
pop
add
cmp
aad
mov
fwait
outsl
add
lahf
rcll
nop
xchg
fstp
pusha
lahf
adc
icebp
lret
sbb
and
outsb
push
jp
push
in
lahf
into
jmp
test
stc
popa
je
lret
call
lods
pop
xor
stc
pop
das
xchg
or
cli
pop
outsl
stos
adc
popf
mov
out
loope
stos
es
imul
or
inc
inc
sub
sub
cmpsb
cmp
mov
pop
cld
sub
pop
cld
mov
cmp
stos
aad
and
dec
insl
or
mov
shrl
test
faddp
les
ret
hlt
pop
rclb
jmp
add
test
cmc
pop
stos
fs
dec
pop
sbb
mov
cmpsl
lret
xchg
mov
loop
pop
lock
sub
sub
lret
shrb
push
mov
scas
arpl
out
movsb
cltd
jl
arpl
push
mov
ljmp
jecxz
push
out
js
adc
aad
outsb
mov
mov
jmp
in
sub
cmpsb
pop
push
push
fidivrs
rolb
sbb
cmp
pop
fsub
jbe
or
push
jnp
add
sbb
ror
sub
xchg
mov
daa
popf
cwtl
popa
xor
insb
inc
push
fstpl
lret
pop
cs
add
mov
pusha
sub
sub
jno
inc
add
ret
mov
imul
jo
push
dec
xchg
xor
mov
arpl
aad
sub
xchg
or
and
inc
bound
enter
imul
jmp
cld
outsl
out
in
jmp
pop
inc
and
lods
fadds
xor
push
test
out
xor
adc
dec
inc
and
stos
pop
fdivrs
mov
dec
lret
hlt
inc
test
gs
xchg
ret
cmp
cmp
jns
fprem1
rep
js
sbb
push
adc
push
push
jb
jns
adc
sbb
mov
cmp
cmpsb
cmpsl
sti
sbb
cwtl
out
fdivp
xchg
faddl
icebp
cmpsb
in
fistl
push
pop
je
push
xchg
adc
or
push
push
andb
cmc
lds
repz
lcall
mov
aas
loope
lods
pop
aad
and
lea
fdivs
and
int
shlb
lods
or
bound
adc
dec
and
mov
sub
movsl
push
mov
bound
add
xor
dec
stos
dec
sbb
mov
int3
cmp
sahf
shll
sub
xor
xor
xchg
lock
int
bound
jo
mov
add
mov
pop
pop
xor
push
pop
js
adc
mov
mov
mov
mov
xchg
add
xlat
xchg
int3
shll
mov
push
mov
lods
outsl
call
pop
inc
cmp
add
imul
mov
pminub
faddp
data16
loopne
jns
cltd
mov
mov
std
stos
icebp
cmc
andb
sbb
sub
adc
fldt
cmp
test
das
adc
dec
iret
addr16
jnp
push
adc
adc
fisttpll
in
xchg
into
jle
bnd
lods
inc
and
ret
xor
cmp
sbb
adc
mov
sub
lds
dec
fs
sbb
cmp
jecxz
pop
dec
addr16
mov
stos
xchg
shll
xchg
and
xor
lea
ret
xchg
dec
imul
and
and
movsb
sbb
aad
repnz
mov
popa
out
and
sahf
mov
stc
push
jecxz
dec
sbb
outsb
lods
cmp
mov
adc
ficomps
xchg
dec
test
xor
dec
inc
insb
jne
cmc
cmpsb
mov
gs
sub
push
pop
sub
cltd
pushf
adc
test
scas
mov
xchg
mov
lods
fstpl
ljmp
in
scas
fdivrp
gs
ret
jno
insb
push
xchg
mov
packsswb
cmp
mov
int3
sbb
stos
sub
sbb
pop
dec
pop
notb
adc
jp
loop
hlt
ret
pop
xchg
call
mov
xor
movsb
mov
int
jb
insb
mov
xchg
fs
mov
and
pop
xlat
xor
movsb
addr16
xchg
mov
push
jb
inc
fwait
in
dec
or
pop
ret
sarl
push
loope
in
std
push
pop
dec
mov
mov
push
mov
add
fisubs
adc
aaa
xorb
sbb
ror
aad
pop
dec
fwait
aaa
mov
or
pop
popf
xchg
cmpsb
ss
rorl
xchg
lods
outsl
mov
mov
fcmove
fildll
ljmp
pushf
ss
cs
jmp
in
jns
and
dec
test
pop
pop
lock
pop
ret
hlt
ljmp
mov
xchg
mov
cwtl
or
jp
adc
push
pop
mov
aaa
mov
fwait
mov
pop
sti
shrb
and
aam
scas
popf
nop
pop
push
mov
pop
xlat
xor
or
dec
insl
push
stc
xchg
push
scas
jno
fucom
pop
cmp
shlb
cltd
jae
insl
testb
jae
in
jecxz
jmp
dec
pop
dec
rcrb
mov
outsb
mov
cs
cmp
lcall
cltd
lea
jo
push
push
and
cltd
and
test
sbb
cmp
aam
push
outsb
adcl
jae
dec
cmp
mov
mov
stos
jl
js
push
ret
sbb
and
ss
xor
mov
and
imul
addr16
push
mov
pop
icebp
sub
add
ljmp
push
pop
sbb
fwait
jmp
pop
mov
mov
leave
aad
out
pop
loope
ret
sahf
pop
sbb
scas
call
jge
aas
adcb
gs
call
icebp
stos
xor
jecxz
shrl
bound
bound
call
push
sub
pushw
sub
sub
add
pop
arpl
stc
push
jmp
xchg
cmp
inc
jo
xchg
xchg
sbb
xchg
aam
int3
inc
nop
jbe
pushl
std
fucomi
aas
popa
xchg
sbb
jp
int
push
lret
mov
sti
es
repz
mov
scas
and
into
cli
pop
fwait
out
cmp
jae
into
mov
ljmp
push
out
cli
mov
je
mov
icebp
xor
mov
fldenv
push
subb
sub
cli
pop
push
xchg
push
xlat
mov
mov
mov
jmp
jb
enter
jg
mov
xchg
and
loope
pop
xchg
inc
jge
sbb
pop
filds
loope
dec
pusha
cmp
mov
and
fldl
int
sarb
jbe
cmpsb
mov
cmpsl
inc
dec
cmp
and
lret
jp
lock
and
mov
outsb
xchg
mov
jns
lods
out
negb
cmpb
jo
mov
sub
inc
jge
lret
in
jg
jmp
dec
mov
das
repz
jp
test
bound
xchg
daa
into
aam
fs
pop
pop
mov
scas
or
add
sbb
xchg
pop
cmp
notb
jae
sub
ja
xor
stc
scas
repnz
call
jge
mov
inc
loop
inc
jecxz
and
mov
xor
pop
mov
inc
push
cmp
mov
xor
xchg
pop
and
xchg
or
jl
popf
lea
dec
pop
pop
icebp
push
addr16
mov
leave
add
in
xchg
cmp
xchg
ret
sbb
add
and
mov
xchg
pop
and
jo
out
cmpsb
into
lods
sbb
cmp
cmpsb
sub
jo
fstl
inc
inc
pop
mov
push
int
pop
push
ret
push
test
movsl
add
sub
fcompl
dec
pop
xchg
and
cli
mov
or
mov
adc
and
in
pop
cltd
popf
xor
mov
inc
push
or
cmc
mov
dec
xor
pop
or
dec
paddsw
roll
loop
mov
ffreep
adc
xor
or
test
movsb
and
mov
ss
test
mov
stc
pop
adc
dec
cmp
enter
push
sarl
cmovs
mov
loopne
gs
mov
aaa
scas
movsb
outsl
pop
push
std
lods
push
cmp
or
xchg
mov
out
dec
roll
xor
adc
adc
xor
and
notb
push
fnclex
imul
syscall
inc
dec
out
inc
push
jle
sub
pop
daa
rolb
addr16
xchg
popf
aaa
adc
xor
cmp
sti
leave
aad
push
dec
mov
mov
test
sub
hlt
punpckhdq
adc
leave
shlb
mov
add
dec
sub
cmpsb
ds
cwtl
icebp
ret
gs
jns
push
cs
xor
pushf
shrl
pop
mov
sbb
sub
or
les
aad
stos
push
xor
bound
sbb
or
push
cmp
mov
imul
inc
int
and
push
mov
dec
push
lods
std
jne
adc
jo
dec
and
jo,pt
out
push
and
ljmp
cs
mov
mov
cmc
pop
iret
jl
jae
pushf
imul
insl
mov
jbe
addl
rcrb
mov
mov
mov
movsb
pop
loopne
add
or
mov
mov
test
out
mov
mov
lret
sbb
sub
pop
push
jmp
les
les
stc
out
push
fidivl
sbb
and
jmp
push
push
lret
data16
ljmp
push
dec
mov
imul
or
sbb
aaa
orb
push
jp
shrb
lds
mov
xor
fldl
mov
jbe,pn
xchg
mov
xor
sub
dec
inc
and
into
mov
mov
xchg
fs
mov
lret
insw
fmull
jno
sbb
xchg
popl
popf
test
pushf
dec
out
pusha
loope
adc
adc
cmp
mov
sub
nop
dec
fnsaves
add
dec
nop
mov
or
movsl
dec
adc
and
out
int
or
cmp
aad
xchg
lret
loop
pop
roll
push
xchg
lods
sbb
aam
call
into
fsubrs
inc
xor
cmp
cmp
daa
test
ljmp
jp
cmp
pop
call
stos
jne
test
rcll
packsswb
xchg
nop
js
or
add
gs
mov
stos
mov
cwtl
mov
lret
fst
sub
cli
fnsave
es
cmc
cwtl
mov
pop
xor
cs
jae
add
add
push
dec
icebp
jecxz
outsb
xchg
adc
cmp
dec
ss
sarl
shll
mov
test
pop
pop
xchg
je
xor
inc
push
jmp
push
dec
out
xor
add
not
cltd
push
pop
xor
push
aas
icebp
mov
cltd
negb
or
imul
mulb
pop
clc
cli
mov
in
sbb
sbb
mov
adc
test
mov
push
sbb
loopne
add
mov
movsl
inc
and
inc
in
sahf
rclb
mov
imul
les
pop
push
or
and
lea
mov
lret
rep
call
mov
dec
push
fnstenv
in
movsb
dec
push
sbb
in
stos
sub
roll
popa
pusha
aad
push
out
inc
fs
adc
scas
sub
out
mov
mov
psubd
shll
pusha
jle
mov
pop
jns
push
mov
into
mov
ret
mov
xchg
cmp
sbb
mov
sub
sbb
dec
fistl
stos
movups
sub
fisubl
mov
adc
imul
pop
dec
notl
pop
mov
push
jl
mul
or
loopne
cmp
lods
es
sbb
push
sub
xor
cwtl
jo
cmpsl
shl
bsf
push
cmp
mov
pop
adc
adc
mov
inc
out
pop
pop
mov
cld
lahf
int3
sub
push
jge
adc
in
insb
mov
dec
or
insl
or
lds
cs
sbb
dec
pop
sub
jge
jmp
fbld
movsl
adcb
jae
sbb
mov
pop
scas
in
mov
jb
jp
insb
cmp
add
loopne
cld
sti
aaa
popa
insl
dec
dec
mov
jb
pop
pop
mov
outsb
outsb
push
popf
inc
mov
aaa
lret
insb
add
sbb
adc
ja
scas
sbb
xlat
inc
xchg
sub
dec
and
sbb
lds
popa
lret
cli
jle
mov
mov
jo
dec
rclb
sbb
sub
ja
repnz
jp
cld
je
ficoms
adc
addr16
insb
mov
mov
hlt
call
rcrb
out
xchg
pop
jne
pop
scas
cmovp
test
imul
jmp
out
popa
repnz
in
es
cli
mov
pop
call
out
adc
arpl
stc
mov
pusha
cmpsl
aas
jle
dec
mov
frstor
xchg
add
dec
mov
mov
testl
pushf
pop
repnz
loop
mov
daa
outsb
push
dec
push
cmp
add
mov
xor
sbb
addl
insb
inc
pop
xchg
outsb
outsb
push
mov
lock
imul
int3
pop
mov
inc
pop
mov
outsl
add
pop
aad
mov
mov
or
and
pop
push
dec
sub
data16
insl
dec
mov
pop
mov
push
sbb
sub
jo
and
push
mov
lods
pop
fldt
xchg
mov
lcall
shlb
mov
addr16
cmp
outsl
pop
jg
mov
lock
mov
fsubl
cmpsl
xchg
or
push
mov
push
mov
fisttpll
inc
push
push
fcoms
dec
aad
sub
cmpsl
not
js
aas
push
add
ss
push
scas
lods
lcall
movsl
sti
push
jae
cmp
lret
iret
mov
jnp
les
mov
je
and
cmp
mov
mov
out
sub
out
insb
jb
push
sub
mov
dec
inc
mov
jl
adc
mov
mov
ficomps
test
popf
xchg
in
xchg
je
leave
xor
push
or
fidivrs
push
fnstenv
and
std
scas
and
mov
in
sub
jp
jge
push
fs
and
cmc
daa
lahf
fwait
pop
addl
lods
adc
fwait
imul
mov
push
negl
adc
stos
lret
or
sbb
sub
hlt
push
lcall
fsubs
push
pusha
fucomp
out
in
push
je
or
sub
lcall
pop
mov
jne
mov
mov
mov
jnp
sub
xchg
addr16
sahf
call
lahf
scas
insl
shr
jnp
push
jmp
imul
arpl
sahf
and
ss
int3
lods
in
stos
fisttpl
jae
mov
jmp
loop
jbe
mov
or
cld
mov
ljmp
test
adc
nop
jae
gs
dec
jbe
mov
sub
sub
fadd
cmpsb
outsb
add
cmp
inc
js
sub
lock
push
push
and
test
andl
cmp
push
into
add
aad
test
dec
bound
sbb
hlt
shr
mov
xchg
add
jmp
dec
inc
push
in
dec
or
lret
pop
mov
xlat
leave
inc
sub
xor
add
repnz
test
add
jnp
cmp
lcall
arpl
scas
dec
bound
push
xchg
sbb
orb
inc
out
testl
outsb
inc
and
xor
inc
and
in
mov
xchg
daa
pushf
outsb
jne
xlat
aam
xorl
fs
sub
push
vunpckhpd
cmc
dec
mov
xchg
cltd
mov
loop
adc
lahf
mov
stc
sbb
pop
jb
jne
sbb
inc
nop
adc
inc
jle
scas
push
mov
fs
subl
xchg
stos
mov
test
push
sahf
fistl
out
mov
fists
fnstenv
das
dec
sbbb
add
and
lock
aaa
pop
pop
lcall
xlat
sbbb
icebp
outsb
dec
xor
bound
and
rclb
add
in
sbb
jae
mov
mov
and
adc
push
sbb
cld
dec
in
fstpl
icebp
hlt
dec
push
pusha
jb
das
xlat
test
xchg
xchg
dec
out
paddusb
repnz
sbb
jmp
cmp
jmp
sar
out
push
adc
mov
inc
sarl
int
test
sub
xor
jo
test
pusha
mov
add
addr16
ficomps
pushf
inc
lds
jp
orb
adcb
jp
cmp
jae
xchg
fnsave
jp
and
push
lock
lods
cmp
dec
loopne
pop
mov
push
ja
jne
add
shlb
mov
les
jnp
push
cmp
jg
mov
adc
ret
sti
mov
jle
int
mov
pop
pop
jl
adc
or
outsb
mov
lds
out
sub
lret
mov
fcmovnbe
aaa
cmp
pushf
mov
das
push
inc
jo
mov
pop
dec
fiaddl
xchg
ljmp
stc
add
repnz
pop
leave
insl
movsl
xorl
jmpw
sub
lret
sbb
insl
cs
clc
lret
cmpsl
arpl
inc
scas
scas
push
push
and
push
push
loop
addr16
or
lds
ret
flds
mov
inc
push
xor
dec
cmp
adc
xor
push
mov
cmp
jne
negb
ret
cmp
dec
xchg
or
icebp
dec
jp
outsl
mov
pop
icebp
cmc
ljmp
xor
mov
push
pop
mov
sbb
cmp
shrd
mov
js
leave
inc
dec
loop
aaa
inc
sarl
in
dec
popf
popa
push
dec
jmp
xchg
cmp
shl
jae
dec
mov
ljmp
sub
lret
stc
sti
rol
sbb
arpl
fdivl
add
ss
int3
lods
lock
add
lds
fimull
out
cmp
sbb
mov
cmp
movsl
lret
xchg
push
xor
push
mov
cwtl
je
mov
mulb
sub
dec
push
sti
out
push
fidivs
fsubrl
ljmp
push
xor
xchg
dec
outsb
cmp
mov
nop
aad
dec
ljmp
outsb
lret
loopne
fnstenv
sbb
xor
xor
xchg
and
xchg
or
mov
js
test
xor
dec
fstpt
sbb
xchg
xor
xlat
ss
rorl
ds
push
push
fwait
cltd
sbb
loope
dec
or
sub
mov
gs
xchg
cmp
out
push
sbb
pop
cmp
pop
pop
mov
mov
into
fs
add
jmp
fcoms
outsb
inc
movsl
test
in
sub
xchg
inc
mov
adc
das
in
push
sbb
fdivrs
mov
movsb
fstl
mov
hlt
push
jle
movsl
inc
sti
jnp,pn
jo
mov
fbld
pushf
mov
sbb
loop
pusha
inc
jbe
repz
hlt
stc
mov
fisubrl
pop
loope
mov
int
mov
jnp
fs
in
jne
pop
inc
jp
lahf
aaa
fidivrs
or
movsb
and
push
stc
gs
jbe
jb
or
xchg
jns
rclb
pop
dec
fisttpll
push
inc
xor
jae
cmp
stos
sub
sbb
shl
xchg
popa
push
push
sarl
sbb
inc
outsl
push
dec
outsb
int
lods
clc
jg
repnz
or
xchg
xor
cli
push
inc
popf
loopne
mov
out
dec
mov
icebp
adc
lods
je
mov
pusha
mov
hlt
jmp
mov
cmc
mov
roll
pusha
pop
mov
mov
dec
bound
inc
jmp
repz
dec
lea
fildl
ret
sahf
jb
jge
dec
fildl
jmp
mov
bound
jae
or
dec
inc
neg
out
out
jge
mov
movsl
lods
add
insb
aaa
pusha
outsl
cltd
mov
adc
or
and
cwtl
cmp
into
aam
add
or
into
push
sbb
testb
data16
sti
xchg
mov
movsl
xchg
rorb
xchg
js
lea
cld
pop
mov
mov
dec
mov
ds
sbb
jne
icebp
xor
add
sbb
lods
mov
jb
les
pop
mov
pushf
or
cmp
roll
xchg
inc
dec
dec
mov
cmp
add
pop
in
mov
pop
ret
mov
fidivrl
add
mov
xchg
out
mov
add
jl
cld
ss
clc
sti
lods
xlat
hlt
call
or
testb
mov
jns
pop
jo
mov
andl
and
push
sub
xchg
pop
mov
in
inc
lcall
mov
hlt
scas
pop
jle
roll
and
in
pop
stc
mov
dec
cmp
xor
outsl
pop
sbb
pop
xchg
rep
lea
cli
xchg
mov
cld
ffreep
sbb
and
pusha
nop
mov
rcrl
js
jnp
ror
and
jle
push
add
mov
test
shll
dec
cltd
ret
cmp
lret
jbe,pt
lods
sub
push
push
test
in
fwait
and
test
pop
mov
cmp
outsl
lahf
sahf
cs
dec
out
outsb
xor
test
adcl
lcall
mov
jle
mov
push
dec
mov
sarb
push
es
ficoml
push
mov
test
mov
fcmovu
je
lea
frstor
cmpsb
and
jne
jne
rclb
cmp
and
test
adc
stos
dec
pop
jmp
nop
rclb
fs
sub
cmp
out
xorb
ficomps
pusha
fcmovu
pop
dec
mov
ret
inc
xchg
xor
neg
push
out
mov
push
mov
inc
pusha
imul
ret
leave
fcomip
iret
in
enter
ret
loopne
add
scas
pop
xchg
sbb
jp
push
jg
enter
sbb
cmp
adc
or
cmc
jbe
xchg
xor
cmp
push
sub
cld
push
adc
jae
test
inc
leave
lahf
or
loop
in
sub
push
pop
cwtl
ss
pushf
hlt
subb
dec
push
clc
aas
sahf
pusha
sub
stos
test
adc
xchg
data16
adc
mov
pusha
xor
movsl
hlt
and
iret
xor
mov
fildl
fistl
sbb
lret
pop
cmp
xchg
and
xor
inc
jns
pop
sahf
jecxz
push
aaa
push
lods
xor
mov
cmp
les
mov
repnz
stos
mov
jecxz
add
popf
out
cmp
fadds
adc
testl
fmuls
cs
pop
stos
test
pop
cmp
ror
inc
jnp
pop
xchg
jo
pop
mov
loop
mov
adc
dec
mov
or
fmul
std
cmp
les
pop
inc
loope,pn
iret
push
imul
cmp
test
movsb
fwait
out
jnp
push
push
push
les
popa
rol
fnstsw
sub
cwtl
test
insl
lahf
xlat
sub
xchg
xchg
mov
mov
lcall
dec
and
push
hlt
lcall
loopne
cmp
bt
data16
cs
test
sub
mov
dec
dec
popf
jbe
adc
sub
and
jns
ds
into
in
push
and
es
bound
and
pop
jb
js
daa
add
mov
es
imul
lret
mov
mov
fdivl
imul
stos
jno
pushl
sbb
outsl
das
aad
mov
ret
pop
push
test
arpl
in
mov
lea
sahf
or
loop
mov
push
mov
mov
jle
mov
adc
in
adc
inc
sahf
cmp
mov
mov
lret
xor
je
loop
jno
dec
jno
test
shlb
fsubrs
and
dec
cmc
xor
fldenv
test
pop
ror
shll
mov
lcall
test
or
faddp
mov
cwtl
add
cmp
mov
out
and
push
lods
add
mov
mov
out
mov
mov
jmp
rep
jnp
cmp
test
dec
mov
sbb
movsb
rol
sti
cld
into
push
dec
sub
scas
movsb
daa
cmp
testl
lock
subl
mov
aam
pop
arpl
imul
lret
clc
lret
mov
int
insl
leave
mov
mov
dec
fadd
fmulp
outsl
xchg
dec
pusha
pop
add
inc
faddl
je
xor
std
aaa
mov
pop
fucomip
movsl
jmp
aas
jns
dec
push
push
or
inc
insb
push
jmp
fsincos
out
push
dec
insl
leave
sub
push
xor
je
sti
dec
dec
ja
bound
fcmovnb
fidivrs
stos
sbb
jbe
mov
lcall
sarb
sub
mov
fucomip
xor
xchg
or
push
add
fildll
and
call
xlat
sub
sbb
fwait
test
into
sbb
push
stc
loop
cmp
xor
jae
jne
adc
fisubl
dec
inc
mov
xchg
lea
ret
popa
sbb
jl
mov
cmp
shrb
push
les
popa
cli
push
addb
lds
lea
out
into
and
mov
into
inc
mov
stc
loopne
xor
cmp
popf
test
pop
cmp
in
mov
mulb
mov
and
loop
xchg
insb
xchg
pop
outsl
push
std
pop
daa
mov
in
push
cld
bound
inc
ss
inc
dec
jae
add
cld
adc
sti
fisubrs
xor
jbe
pop
mov
stos
mov
pop
or
xchg
mov
or
push
fidivrl
in
and
sbb
pop
mov
dec
xchg
pop
push
push
andl
insb
sbb
ds
or
adc
sub
or
sbb
rcrl
cmp
nop
mov
insb
jno
dec
adc
inc
in
inc
mov
mov
sub
or
cmp
pusha
adc
movsl
jns
and
scas
mov
adc
or
sahf
push
movsl
lret
rcll
rclb
mov
sbb
in
popf
test
pop
push
xchg
push
jmp
sub
pop
lcall
cmp
adc
repz
xchg
sbb
dec
inc
test
decb
xchg
dec
sti
mov
and
lahf
push
sbb
or
loop
push
fists
out
cmp
xchg
or
bound
pop
push
mov
int3
ja
add
lods
mov
xor
cmp
or
ret
call
into
jle
aas
inc
cmp
ljmp
push
dec
fnstcw
stos
xchg
jo
sub
adc
divb
out
mov
outsl
ss
push
xchg
xchg
int3
xchg
fs
sbb
and
pop
lret
outsb
pop
inc
dec
clc
inc
mov
sbbl
jo
sbb
pop
xor
rcrb
cmp
arpl
cmp
mov
jmp
enter
jg
inc
notb
incb
clc
sbb
sub
fcomip
mov
shl
jae
aad
lds
dec
add
pop
dec
cmp
ret
hlt
call
add
mov
lret
cmp
lock
sahf
push
mov
xlat
and
and
scas
stos
xor
popw
outsl
lcall
aam
mov
cmp
jle,pn
insb
xchg
fldt
test
insl
pop
out
out
sbbb
ret
lret
mov
js
inc
pop
push
fdivrl
ret
cwtl
pusha
inc
arpl
sbb
fwait
cmp
loope
jmp
lods
push
fstpt
lock
cmp
hlt
mov
clc
sbb
push
mov
aad
addl
sti
adc
push
sahf
lret
pop
push
out
adc
enter
mov
and
std
and
icebp
ret
addr16
sbb
cmp
test
out
pop
inc
hlt
popf
nop
push
inc
sub
gs
cmc
dec
push
mov
icebp
in
fdivr
pop
cmpl
push
outsl
aam
mov
jbe
rcrb
mov
push
out
cld
lret
adc
xchg
leave
adc
sub
sbb
add
inc
cltd
add
cmpl
lock
mov
mov
dec
and
aaa
leave
enter
mov
pop
int
aad
stos
test
sahf
mov
insb
mov
add
sub
in
insl
push
fldt
dec
fs
cmp
mov
inc
push
xor
sub
jg
mov
mov
xor
popa
mov
sub
out
sbb
pop
xchg
inc
out
subl
call
mov
jnp
jno
lret
int3
add
ds
addb
test
inc
inc
ficomps
or
and
push
js
jecxz
mov
mov
aas
stos
test
lods
mov
mov
cwtl
insb
and
push
jg
mov
addl
sub
inc
xchg
cmp
and
pop
ss
test
mov
push
fbstp
scas
sbb
orb
test
cs
add
lds
inc
pop
sbb
xchg
mov
lods
push
jns
mov
out
sar
xchg
xchg
add
mov
push
mov
mov
mov
movsb
dec
repz
jecxz
ljmp
mov
fwait
pop
inc
sbb
push
xor
xchg
or
jb
and
movsb
int
insl
insl
sub
popa
push
scas
push
out
mov
sbb
repz
add
lret
ja
dec
add
push
dec
dec
notb
push
fidivs
pushf
jnp
bound
scas
adc
imul
sbb
rorl
loope
mov
aad
insl
stos
sbb
sub
mov
dec
cmc
xor
out
out
into
cld
out
pop
call
mov
push
int
inc
or
fstps
test
mov
mov
cmp
iret
mov
xchg
mov
pusha
mov
ret
addr16
push
ds
ljmp
lods
fmul
outsl
mov
mov
clc
subl
push
pop
mov
ds
add
data16
sub
jb
mov
mov
lahf
adc
add
pop
mov
cmc
adc
pop
cmpsl
outsb
es
jecxz
and
loop
mov
mov
xor
push
inc
shll
lods
or
js
pop
test
fcoms
mov
hlt
xor
sub
xor
dec
aas
xlat
arpl
sbb
decb
aam
xchg
adc
into
aaa
je
inc
subl
imul
js
dec
iret
adc
push
jnp
adc
jge
loop
rorl
cmp
pop
sbb
test
mov
pop
mov
xor
arpl
pop
cwtl
mov
pushf
stos
sub
lret
inc
and
int3
clc
and
subl
pop
insb
mov
xchg
ss
ljmp
or
fldcw
inc
scas
add
fbld
fiaddl
xor
popa
cmp
jmp
fcomi
mov
mov
cmp
cmpsl
stos
fcmovne
dec
dec
mov
jg
mov
es
add
pop
adc
mov
dec
adc
pop
mov
mov
add
adc
popa
push
out
test
movsl
cli
stos
push
mov
mov
outsb
xor
xor
loopne
pop
test
daa
popa
jbe
or
gs
xchg
add
int
push
fcomi
pop
shrl
nop
sahf
fs
nop
fidivs
ret
fidivs
inc
inc
inc
sub
mov
imul
xor
xor
xor
out
push
ret
out
inc
jp
or
pop
push
push
lds
fistpll
lea
out
test
jge
ds
shrb
enter
push
lcall
popf
fwait
dec
clc
add
push
mov
xchg
daa
push
outsb
outsl
mov
stos
aam
xchg
cmpsb
sub
pushf
xor
cmc
mov
push
in
loopne
push
test
jns
in
push
aaa
nop
test
imul
int3
xchg
scas
mov
adcl
daa
stos
rcrb
push
rclb
xorl
and
cltd
aam
xchg
mov
icebp
jo
inc
mov
repz
les
pop
dec
mov
pop
pop
ds
mov
pop
jmp
loop
adc
std
data16
ss
sub
jle
pop
fdiv
and
notb
sub
scas
jmp
pop
and
mov
push
push
and
or
hlt
mov
inc
inc
fsubr
sub
sti
or
popf
adc
pop
push
fbstp
mov
inc
loope
cmp
loope
or
fsin
fadds
lret
repz
fimuls
flds
pop
cld
xor
push
dec
add
adc
imul
mov
push
fwait
es
imul
mov
nop
out
cmpsb
test
mov
fcomps
cld
sub
repnz
xor
test
ffree
pop
std
jae
dec
adc
pushf
adcb
xchg
add
sbb
sbb
dec
popa
test
mov
pop
cvttps2pi
loop
adc
cld
in
pop
inc
lret
out
imull
jg
xchg
mov
lahf
int
mov
xchg
popa
adc
pop
fmuls
jb
add
xchg
dec
jae
jle
inc
xor
or
mov
xor
stc
ret
jno
pushf
and
and
sub
cmp
lods
out
dec
xlat
imul
jg
mov
xchg
lahf
fwait
add
cmpsl
jp
add
rcl
cld
cmc
popa
mov
insb
or
mov
out
nop
test
pop
aad
out
test
lret
stos
jae
test
jns
lock
fistpll
iret
mov
pop
pop
and
into
leave
inc
cs
out
lea
or
hlt
je
cmp
insb
and
xchg
push
mov
shrl
or
loopne
jno
sbb
pop
outsb
push
adc
ja
ljmp
scas
aas
push
popf
xor
mov
jecxz
pop
in
xchg
jbe
fidivrs
mov
test
mov
or
loope
in
or
or
mov
mov
lock
sub
jge
fdivrs
xchg
mov
push
mov
push
pop
ds
int
in
pop
add
out
pop
scas
xor
cmpsb
push
xor
or
jg
push
xor
gs
testb
push
fadds
xchg
cmpsb
jno
xchg
push
sub
xchg
sbb
or
testb
loopne
out
sub
jb
sti
scas
sbb
mov
mov
add
pop
sub
cmp
xchg
or
in
ja
dec
mov
fldl
shll
push
pop
sbb
xchg
je
bound
sahf
xchg
sarb
xchg
inc
shll
rcll
in
imul
in
sbb
out
xchg
fucom
jmp
lds
dec
and
or
roll
mov
insl
je
fistl
push
aam
subl
or
adc
mov
inc
pop
pusha
insb
mov
fs
int3
call
jno
dec
rolb
push
push
pop
or
pop
push
movsl
imul
test
push
jne
shrb
test
xchg
dec
jo
fidivrs
fisubrl
bound
mov
cmpsb
les
mov
adc
xadd
and
loopne
lcall
scas
or
data16
lahf
push
ret
dec
add
sub
mov
aad
test
mov
int
mov
dec
repnz
pusha
jne
mov
aas
cmp
or
repz
mov
inc
sub
stos
dec
cmp
pop
ja
imul
rorl
mov
mov
jnp
xor
xor
push
pop
lods
jmp
andb
cmc
arpl
xchg
jmp
pop
dec
jnp
inc
pop
xchg
stos
loop
mov
sbb
sti
dec
mov
test
mov
xchg
pusha
arpl
pop
mov
sahf
arpl
cmp
or
sti
shrl
pop
jne
pop
ja
cmp
pop
or
dec
pop
ret
out
xchg
mov
cmp
push
inc
sbb
scas
mov
ret
sub
adc
inc
add
pop
ss
neg
gs
mov
sar
out
jae
or
dec
mov
cltd
sbb
cs
fiadds
js
cmp
xor
pop
lea
lret
pusha
adc
inc
xchg
inc
sbb
cmp
lret
adc
mov
adc
pop
dec
out
pusha
cld
push
add
cmp
sub
xor
mov
aam
jae
jo
xchg
repnz
imul
and
mov
dec
dec
in
xchg
sub
in
cltd
cmp
fsubp
rcrl
in
mov
sbb
test
inc
mov
enter
adc
shlb
push
sub
or
je
clc
out
push
cmpsb
add
and
loope
pop
dec
mov
addr16
les
mov
pop
scas
stos
sbb
inc
mov
adc
sub
stc
mov
shl
dec
sarb
fwait
or
into
in
and
or
dec
pop
adc
jnp
push
push
pop
bound
mov
out
mov
sti
mov
sbb
outsb
mov
sub
push
int
sub
dec
adc
push
xlat
aam
cmp
les
cld
or
into
in
roll
data16
fimuls
push
std
sub
enter
aas
lahf
xchg
mov
mov
sbb
bound
test
movsl
and
frstor
into
pop
mov
shl
push
repnz
ja
pop
sbb
jbe
or
mov
out
sahf
xor
adc
or
dec
push
mov
fdivrs
pop
test
nop
cmp
iret
aas
xchg
sti
jae
xchg
outsb
mov
ds
jbe
call
nop
gs
sub
sahf
fadd
jl
cmpsl
fbstp
mov
orb
mov
pop
or
hlt
and
mov
les
cltd
xor
sub
cmpsl
ret
stos
mov
push
daa
add
mov
das
inc
mov
subl
imul
push
ret
pop
pop
xchg
push
ret
fs
and
divl
lods
push
shl
hlt
add
or
cli
fadds
lds
jne
in
xor
ret
xchg
fists
nop
loop
call
cwtl
mov
xchg
divb
jge
inc
rclb
daa
ficoms
fcoms
scas
cmp
js
mov
insb
js
xchg
mov
xlat
orb
test
xchg
andl
stc
push
cmpsl
shr
sti
jl
outsb
push
inc
cmp
lock
stos
popa
add
mov
int
mov
xchg
inc
pop
jge
push
pusha
mov
shlb
jae
sub
fisttps
loope
inc
inc
data16
xchg
es
repnz
test
lods
sbb
pop
mov
xor
and
xchg
mov
addl
or
aam
xor
lea
icebp
xchg
fcmovbe
lahf
mov
or
or
and
lock
mov
add
jmp
jb
mov
jo
add
push
out
rorl
adc
leave
decl
jle
adc
inc
sbb
mov
push
push
push
xchg
inc
mov
out
inc
lahf
mov
out
in
add
xchg
adc
test
daa
mov
xor
lret
mov
cmp
jg
xchg
xor
mov
add
test
mov
push
push
pop
push
dec
shll
mov
loopne
clc
lds
nop
mov
xor
out
repz
icebp
sti
dec
or
scas
das
add
sar
or
mov
jecxz
cmp
stc
xor
out
pop
cmpsb
stos
cwtl
or
cwtl
mov
js
xor
cmpsl
roll
out
lcall
fisubrl
mov
shrd
and
mov
jo
mov
push
xor
cmp
dec
imull
push
and
aam
dec
cmpsl
ss
lahf
mov
test
test
scas
sahf
push
int3
add
inc
clc
add
xor
xchg
adc
cmp
stos
push
jg
cmp
insl
ljmp
inc
xchg
in
testl
test
cld
iret
or
je
lea
and
push
pop
rolb
push
cmpsl
push
sub
push
jno
xchg
pusha
xchg
sbb
leave
stc
add
mov
push
pop
and
inc
mov
out
sbb
mov
mov
stos
fwait
insl
cld
pushl
iret
and
scas
adc
jo
sub
inc
out
sub
addr16
mov
mov
jae
mov
cmpb
hlt
outsl
pop
es
add
jbe,pn
add
arpl
imul
cli
insl
push
xchg
xor
xchg
je
roll
leave
push
cmpsl
cmp
out
lcall
mov
sbb
mov
inc
loop
mov
or
cmpb
cmc
pop
leave
mov
xchg
les
orl
mov
ret
adc
sbb
jb
mov
cwtd
adc
or
aad
cmp
mov
jno
pop
imul
mov
imul
aas
stos
inc
push
push
xchg
andl
cmp
imul
jno
mov
aad
icebp
sbb
mov
jmp
jne
adc
or
dec
fcoml
fisubrl
lds
xchg
or
iret
out
movl
lret
adc
pushf
repnz
adc
loopne
adc
roll
arpl
jbe
pop
aas
das
cli
pop
mov
insl
and
mov
nop
pushf
pusha
push
mov
out
in
mull
push
in
lahf
aad
push
lds
ds
lods
dec
fldt
push
sbb
cmp
cmpsb
dec
pushf
xchg
lods
iret
xchg
adc
fwait
mov
jmp
jp
mov
add
fdivr
push
in
jb
ja
dec
int3
stos
fnstsw
sbb
repz
ret
fbld
ficompl
add
cmpsl
aam
xchg
inc
mov
push
push
adc
jnp
outsl
in
outsb
jl
jmp
push
fists
or
inc
out
adc
adc
xchg
push
push
push
cmp
daa
mov
inc
inc
mov
ss
xchg
into
ds
cmp
pop
sbb
jle,pt
and
fists
mov
or
fistps
mov
cli
mov
repnz
mov
fsubrl
mov
pushf
xchg
jecxz
mov
sub
cmpsb
cmp
xor
mov
sbb
mov
les
push
cs
mov
pop
push
popa
fwait
or
roll
lods
cltd
add
es
mov
dec
aaa
and
adc
in
inc
and
add
ret
lods
xor
xchg
cwtl
xor
lret
loope
test
push
dec
add
push
ds
mov
sbb
pusha
mov
jge
pop
daa
stc
sub
mov
mov
rcrl
push
int3
rorl
les
andb
jns
mov
cmp
aaa
enter
pop
cmp
es
out
jmp
jbe
andl
outsb
mov
sbb
mov
mov
dec
fmull
mov
mov
and
xchg
pusha
mov
pop
adc
test
or
xchg
sbb
xchg
add
mov
icebp
add
ljmp
fisttpl
or
std
cmp
adc
sar
into
push
pop
xchg
push
scas
out
or
xchg
pop
decl
sbbl
lock
jo
add
sahf
jmp
mulb
mov
or
aaa
cmp
subb
push
sbb
adc
fdivl
push
jl
ret
in
cmp
fnstenv
idiv
pop
mov
mov
cs
aad
iret
cmpsl
jmp
add
jecxz
xchg
popf
add
dec
jns
sub
xor
inc
fcoml
jmp
or
push
inc
pop
shlb
shlb
jne
add
arpl
dec
dec
mov
lahf
lds
pop
push
into
movsl
ficomps
push
mov
xor
xor
shll
mov
out
pop
ja
xor
mov
fstpl
mov
xchg
popf
loop
test
adc
sbb
adc
inc
mov
dec
daa
xchg
pop
lds
mov
lods
xchg
and
mov
loop
lahf
push
push
int
mov
out
pop
roll
mov
out
rolb
push
cmp
enter
jns
push
loope
pop
ss
pop
sbb
inc
imul
or
cld
ljmp
shl
aad
pop
popf
sbb
push
pop
cmc
lret
test
fldl2e
cmp
lahf
std
je
jmp
int
jg
xchg
int3
js
cmpsl
sarl
dec
roll
into
jg
cmp
out
adcb
pop
mov
mov
lret
mov
xchg
outsl
pop
into
jecxz
dec
loope
outsb
bound
ljmp
jmp
sub
lods
data16
arpl
pop
ljmp
xchg
ljmp
out
and
or
movsl
sub
mov
out
jae
insb
jmp
stc
dec
sbb
outsb
pop
dec
loope
mov
xchg
sbb
push
jbe
mul
adc
lahf
xchg
and
mov
aaa
lret
cld
push
add
lock
in
movsb
fwait
mov
out
pop
jbe
sbb
pop
mov
ljmp
cmp
dec
xorl
bound
dec
cwtl
jecxz
sub
xor
dec
and
pop
test
dec
xor
popa
leave
movsl
sub
test
xor
xor
mov
imul
xchg
bound
jg
ret
mov
dec
dec
xchg
xor
outsl
ja
arpl
mov
add
test
and
scas
sbb
ss
bndldx
js
das
imul
filds
lret
call
arpl
jge
xor
mov
es
out
lret
das
sub
addr16
and
notl
xlat
xor
cmp
test
sahf
icebp
xor
roll
pop
out
fidivl
cmpb
push
push
mov
jge
sarb
mov
push
cmp
jmp
cmp
loop
cmp
mov
nop
in
in
aas
push
es
add
add
mulb
loope
shll
arpl
inc
gs
cmc
and
dec
xchg
mov
xchg
imul
je
out
sbb
hlt
adc
push
jne
or
inc
dec
scas
out
shll
cld
xchg
loop
adcl
or
push
xor
pop
inc
shll
arpl
bswap
dec
lahf
jp
jb
cmp
mov
ret
in
ret
popf
sahf
sti
std
sub
js
jne
mov
dec
jl
push
and
cs
pop
movb
jmp
leave
adc
fwait
jle
mov
fcmovb
scas
jmp
dec
jb
or
cmp
push
or
cmpb
cs
mov
lock
mov
xchg
jb
loop
imul
mov
out
push
sub
icebp
or
arpl
push
pop
mov
enter
add
jle
jecxz
fwait
adc
xor
mov
int3
and
dec
aad
pop
add
dec
in
cmpsb
mov
lahf
stos
sbb
jno
xor
icebp
jmp
dec
loope
cs
jne
test
and
jge
lds
aad
push
add
or
fwait
and
mov
or
arpl
cmc
out
stc
imul
add
adc
sbb
inc
mov
dec
or
sbb
imul
adc
cmp
dec
xchg
mov
out
and
pushf
ret
js
mov
add
sbb
daa
and
addr16
js
dec
sub
inc
int3
adc
xor
lea
or
sbb
or
mov
aad
adc
push
adc
jg
int
bnd
fisubs
stc
cmpsb
shr
add
and
insb
sbb
pop
ret
in
push
ljmp
cwtl
sbb
shrb
xor
jp
pop
mov
push
sarl
mov
xor
in
test
jmp
sub
mov
je
sub
imul
iret
add
hlt
and
imul
dec
stos
xor
fcompl
jns
cwtl
loopne
jb
int
xchg
mov
sub
jge
fldt
cwtl
ja
ss
aas
cmpsl
mov
jecxz
and
or
mov
adc
nop
ss
aaa
add
out
mov
add
jle
push
out
dec
mov
mov
inc
imul
xchg
lret
test
push
mov
call
bound
fisubl
push
dec
inc
mov
scas
sahf
jne
jmp
push
aas
lcall
cld
repz
sbb
push
pushf
daa
call
and
je
insb
add
xor
xchg
insb
mov
lcall
scas
pushf
jb
jo
cmp
adc
pop
addl
or
dec
add
cmc
lock
sub
sbb
scas
test
push
mov
je
jae
leave
push
push
loopne
pop
mov
xchg
xchg
inc
inc
xlat
push
jecxz
lret
mov
sbb
mov
xchg
dec
adc
lods
pop
scas
pop
bound
loop
js
xor
lea
mov
pushl
data16
push
mov
push
xor
clc
call
lods
outsb
mov
pop
fwait
adc
mov
push
inc
sub
inc
adc
pop
sbb
fdivrp
xor
dec
popf
jmp
call
pop
imul
add
adc
inc
add
mov
push
lea
lahf
in
push
and
std
mov
in
dec
ja
mov
cltd
pop
sub
in
and
mov
push
insb
cli
lods
mov
and
sbb
iret
cld
adc
mov
clc
add
jg
aas
stc
rclb
scas
hlt
sti
inc
aam
push
xchg
in
lds
cmp
dec
xchg
jbe
add
in
push
rorb
ljmp
mov
inc
mov
adc
cld
jecxz
mov
pop
jns
add
aas
pop
mov
adc
inc
sti
fldenv
in
jp
lcall
icebp
xchg
inc
sbb
insb
jle
call
lods
sub
rcrl
sar
insb
dec
push
lods
popf
adc
mov
call
push
sahf
cmp
xchg
mov
add
mov
sbb
iret
daa
xor
ret
add
popf
add
ds
test
pop
hlt
repnz
ss
mov
out
cld
ds
fnstenv
add
and
mov
xchg
xor
daa
loop
or
push
dec
ljmp
out
ss
and
inc
cli
jnp
in
aad
ja
xchg
xlat
enter
fdivl
sar
setge
push
stc
inc
lock
xor
das
adc
or
xor
movsl
aaa
adc
iret
push
mov
pop
popa
xchg
shrl
sbbl
in
mov
lret
xchg
sbb
ds
xchg
popa
push
mov
lret
jl
and
sti
or
add
bound
shr
sti
dec
xor
outsb
sbb
fcom
jl
mov
test
inc
sbb
ss
insb
cmp
push
imul
push
cmp
adc
xchg
xor
or
cld
mov
cmp
jb
push
std
imul
cwtl
sahf
lret
int3
mov
ss
mov
sub
cltd
cmp
mov
jns
rcrb
mov
sub
push
jle
sub
jl
dec
dec
pop
cmpsb
cmp
cmp
mov
out
add
aas
inc
cmp
bound
into
push
fs
pop
sahf
pop
iret
fistps
stc
mov
shlb
xchg
mov
mov
mov
dec
sub
sbb
jae
pushf
mov
sub
xchg
ret
xor
mov
cmp
jb
xor
push
cmpsl
sbbl
rclb
call
xor
sub
add
fsubp
pop
into
stos
ficomps
mov
loope
fsubr
xchg
mov
nop
xor
cmp
adc
cmc
xlat
lock
add
mov
sbb
jnp
mov
push
loop
sbb
or
ret
pop
pusha
ja
xchg
cwtl
cld
and
scas
fisubs
int
push
inc
sbb
movsl
jg
cmp
dec
dec
push
lock
cmp
push
lods
les
xchg
sbb
aas
dec
jecxz
sub
je
xchg
shrl
cs
xor
test
fwait
repnz
add
mov
int
arpl
mov
xchg
pop
aas
push
xchg
sbb
gs
mov
cmp
inc
andl
sbb
push
push
leave
add
ja
movsb
fisubl
les
lret
out
jbe
adc
testl
sub
dec
repz
dec
scas
nop
lret
push
fisttpll
std
push
push
icebp
mov
into
notb
cmp
cwtl
out
scas
inc
add
sbb
push
test
and
sub
pop
add
addb
rolb
dec
fisubl
outsb
xchg
dec
aaa
pop
adc
jae
test
in
push
xchg
shll
popa
fisubs
add
in
jae
or
xor
xchg
andl
sbb
mov
jo
out
ds
adc
push
sub
mov
jl
sub
adc
nop
push
je
fadds
add
icebp
push
leave
mov
pop
adc
movsb
dec
inc
jo
repnz
dec
pusha
push
repnz
sbb
negl
jae
cmp
mov
out
adc
mov
test
or
rcll
pop
xlat
sub
cli
cs
test
shlb
adc
inc
cmp
sbb
push
add
mov
ror
sub
ljmp
insl
sbb
aad
and
xchg
or
pop
and
idivl
pop
idivb
mov
js
test
fwait
inc
sti
mov
rcl
xchg
mov
lods
inc
roll
cmpsl
jmp
stos
mov
iret
and
data16
push
dec
xchg
shlb
mov
data16
add
les
test
out
lds
insb
or
repz
and
inc
cmp
shll
mov
ret
mov
add
cmp
repnz
mov
jmp
add
inc
test
inc
pop
jl
add
loop
mov
add
stos
pop
popa
jmp
outsb
in
lcall
out
push
dec
testl
in
and
mov
sub
cmp
jb
sbb
and
dec
add
mov
sub
jns
mov
nop
sbb
xor
in
jnp
mov
xchg
lock
daa
xlat
insl
adc
and
mov
sbb
test
icebp
loopne
cmp
or
lods
std
push
pop
xchg
imul
fwait
push
aas
aaa
test
and
mov
fidivl
add
mov
and
cmp
cmpl
adc
push
xchg
pop
pushf
int
leave
mov
jne
out
push
mov
aam
and
push
mov
mov
xor
mov
gs
jecxz
divb
pop
rolb
sub
inc
jmp
nop
mov
cltd
inc
jnp
xchg
jmp
insl
pop
cld
push
inc
mov
nop
fsubrs
push
repz
and
lods
add
mov
xor
jl
insb
mov
fs
or
push
fimull
xor
fs
cmp
ljmp
mov
pop
xor
push
push
arpl
addr16
ds
rcrl
clc
adc
push
mov
mov
push
outsl
rcll
std
arpl
stos
jb
enter
sti
push
lods
addb
or
sub
loope
xchg
cmpsb
inc
push
adc
adc
movsb
lret
enter
or
mov
not
pop
fnstcw
push
xorl
adc
leave
and
cwtl
data16
popf
adc
mov
sub
add
dec
lods
cltd
loopne
rcll
xor
push
cmp
into
dec
xor
call
xor
std
call
ja
pop
ja
adc
cmpsl
iret
pop
stc
sahf
repz
jecxz
push
lahf
jl
cmp
pop
xlat
jg
cld
out
out
xor
mov
repnz
push
xchg
xor
aam
inc
ljmp
dec
cmp
cmpsl
lods
iret
mov
out
lahf
xlat
lahf
insl
stos
xchg
ss
and
js
vmovsd
push
xchg
punpckhdq
dec
mov
mov
imul
xor
idivb
mov
mov
aam
lret
xor
inc
idiv
ja
out
mov
xchg
scas
xchg
js
mov
lret
push
loope
inc
ret
lcall
int
jge
jae
gs
mov
sub
lcall
ror
loope
sub
add
aad
cmp
bnd
jmp
outsb
nop
popa
stos
je
cmp
jbe
inc
pop
and
cmc
pop
les
sbb
cmc
mov
into
cs
dec
or
out
lock
pop
pop
pop
shrl
icebp
jg
xchg
xor
popa
loop
sbb
lret
xchg
js
pop
cmpsb
movsb
fisubrl
lcall
fidivrs
inc
movsb
add
or
dec
out
push
xor
call
scas
dec
jno
pushf
in
pop
mov
mov
lods
mov
insb
cmpsb
cs
sarb
aas
pop
ror
xor
aaa
lods
jo
out
and
sahf
xchg
cmp
jbe
ss
sub
stos
lret
out
sub
cmp
int3
cltd
lret
dec
cmp
aad
dec
icebp
and
ficomps
adc
clc
mov
fsub
fwait
outsl
pop
fildl
popf
in
in
hlt
push
inc
ret
ret
cmc
inc
outsl
push
mov
call
or
sbb
fcoml
in
dec
clc
pop
add
int
mov
inc
pop
xchg
and
ficoms
or
mov
dec
ljmp
push
imul
add
dec
sub
inc
mov
cmpb
xor
call
and
mov
fidivs
test
inc
xchg
cmp
lahf
push
ja
in
cs
dec
mov
xor
aad
push
and
mov
nop
inc
pop
mov
or
lea
iret
arpl
je
mov
xchg
lret
in
and
fucomip
inc
pop
fnstsw
jle
in
adc
in
clc
stos
add
sahf
pushf
loopne
mov
cmpsl
mov
push
sub
lods
jb
pop
push
add
xchg
sub
adc
dec
mov
adc
xchg
dec
jecxz
mov
mov
clc
inc
scas
stc
test
dec
scas
xorl
mov
outsl
mov
inc
adc
sahf
jbe
lock
incl
fcompl
mov
xorl
xchg
ffree
outsb
push
ret
cli
jle
divl
mov
data16
dec
pushf
addr16
sbb
lods
ljmp
mov
jne
mov
xor
mov
adc
cmp
ds
in
push
adc
xor
shll
jmp
pop
push
ret
fwait
jo
mov
jnp
jae
loopne
cmpsl
repz
addr16
jnp
inc
mov
add
cld
mov
lods
sub
fldlg2
mov
xchg
and
sahf
pop
and
xchg
shll
jecxz
pusha
mov
or
mov
insl
sahf
sahf
pushf
sub
hlt
dec
ds
mov
daa
push
out
shrl
mov
push
in
xchg
daa
xor
test
mov
mov
out
adc
fcompl
xor
add
adc
mov
and
jae
fmuls
stos
lods
inc
sub
and
mov
mov
loope
sbb
jnp
adc
aam
push
in
bound
ret
pop
sub
mov
out
sub
sub
inc
add
xchg
adc
sub
cmp
iret
pop
sub
iret
fucomp
mov
inc
imulb
call
es
popa
sbb
add
cwtl
inc
add
sbb
dec
in
push
cs
imul
xlat
add
gs
js
mov
cmp
iret
jg
fmuls
call
movsl
pop
adc
adcb
sbbb
sbb
and
and
xchg
shrb
xor
and
adc
cmpsl
inc
mov
mov
pop
in
jmp
clc
rcll
rorb
dec
out
mov
mov
jle
fidivs
jg
insl
push
xlat
and
mov
mov
xchg
loope
dec
test
xchg
xor
or
dec
cld
arpl
imul
xchg
movsl
jg
mov
push
or
int3
adc
mov
orb
or
pop
movsb
mov
lret
lock
ret
cmp
fnstsw
jl
jge
in
ljmp
lock
inc
daa
cli
outsb
mov
loope
mov
dec
add
scas
xchg
mov
js
arpl
cmp
je
sti
mov
mov
sub
lahf
sbb
mov
addr16
xor
dec
fcomps
mov
add
je
xor
in
sti
out
adc
push
xchg
mov
rclb
into
ljmp
xchg
mov
fists
xchg
or
jne
sub
int3
mov
sub
stos
call
test
mov
sbb
clc
xchg
mov
daa
ja
call
mov
lcall
xchg
push
cmpsl
cmp
sti
jecxz
loop
loop
lcall
scas
dec
xor
mov
jg
or
aas
mov
test
mov
ljmp
fistl
mov
in
push
shrl
mov
cltd
push
inc
push
dec
cs
lahf
mov
dec
or
inc
enter
mov
incb
movl
mov
sbb
pop
gs
push
sub
outsb
sub
push
ret
or
pop
mov
xchg
stos
mov
mov
xor
addr16
sbbb
jne
pop
and
ljmp
inc
sbb
fisubl
dec
pop
sbb
jbe
incl
sbb
xchg
adc
or
pop
xchg
mov
mov
loop
mov
and
sub
mov
sti
inc
repz
cmp
xchg
je
mov
jnp
aam
jno
and
lods
push
je
inc
jbe
sbb
subl
js
push
mov
pop
stos
addl
adc
inc
sbb
sbb
dec
mov
cmpl
or
push
insl
mov
dec
inc
xchg
jnp
mov
jnp
data16
rorl
cwtl
loop
movsb
dec
cli
in
jns
push
iret
mov
push
cmp
movsl
or
and
aad
push
mov
mov
mov
jb
cmp
cli
jge
xchg
xor
pop
rclb
int
stc
arpl
test
jge
lds
push
outsl
pop
les
pop
out
or
int
popa
ljmp
mov
ja
cld
jmp
out
dec
xchg
notb
jo
mov
cli
repz
or
pop
push
cmp
call
cmp
movsl
jge
push
fwait
pop
sbb
xchg
cmp
insl
and
sbb
es
aas
mov
mov
dec
jp
jmp
push
jl
or
push
into
sbb
insb
iret
mov
in
lods
mov
push
sub
adc
xor
stos
notl
inc
mov
loop
in
mov
adc
movsl
stos
test
stos
and
jg
pushl
sbb
dec
mov
loopne
subb
sub
call
cmp
fst
xchg
js
xor
leave
pop
pushw
jge
aad
xlat
sbbl
or
pop
pop
and
das
xchg
sbb
xor
dec
jb
stos
insb
pushf
insl
pushl
pop
push
cmp
inc
push
mov
aam
dec
fimull
xchg
jno
aaa
mov
push
mov
shll
jbe
arpl
mov
in
rclb
push
scas
sub
stc
dec
mov
xlat
sti
push
scas
scas
scas
outsb
push
dec
push
push
and
push
add
int3
scas
js
mov
mov
cmp
jns
mov
add
inc
fstpt
pop
dec
push
push
xchg
outsb
jno
ficompl
imul
and
push
in
ss
and
mov
mov
div
ret
jle
rcll
test
xchg
sbb
sbb
imul
lcall
sbb
div
je
idivb
sahf
fs
cmpsb
mov
insb
push
iret
mov
pop
jecxz
sub
xchg
es
shrl
lea
push
inc
pop
dec
jle
fcomps
test
addr16
enter
es
je
inc
xchg
xor
fstl
cld
xchg
inc
mov
into
mov
fiadds
mov
fnsave
sahf
sar
mov
loope
ss
lret
cmp
shlb
mov
lods
xor
dec
test
push
sahf
aad
aas
cli
adc
lret
or
dec
int3
scas
pop
xchg
jno
xchg
std
fnstsw
mov
mov
cmp
jecxz
bound
iret
mov
adc
jge
movsl
mov
adc
jmp
add
adc
call
mov
cli
test
xchg
pop
sub
mov
leave
sub
ret
call
xorb
fisubrl
pop
out
loopne
rolb
loope
adc
push
popa
sub
adc
sbb
mov
cwtl
pop
mov
das
sub
mov
call
daa
les
call
mov
out
cltd
in
jo
cmp
out
dec
xlat
adc
ja
bound
les
out
aad
dec
in
pop
ja
adc
xchg
arpl
aaa
adc
aad
test
in
sarl
out
xchg
jl
inc
pop
cmp
pop
sbb
movsl
cmp
mov
stos
add
fistpll
inc
push
fs
imul
out
pop
cmc
movsb
div
nop
cmp
xchg
jle
cltd
inc
pop
mov
push
in
cli
inc
popa
loop
adc
dec
mov
mov
paddusw
sbb
jle
fldt
imul
dec
ljmp
inc
lcall
dec
mov
push
dec
fwait
adc
out
je
dec
js
sub
inc
std
out
dec
xlat
cwtl
enter
icebp
jge
fildl
shlb
stos
mov
push
or
scas
daa
divl
lcall
or
loopne
inc
and
and
or
mov
mov
mov
and
pop
dec
clc
xchg
test
mov
inc
push
pushf
sbb
mov
pop
mov
mov
movsb
flds
xchg
inc
es
dec
stc
mov
les
loopne
pop
adc
jp
popf
xchg
out
inc
test
pop
les
int3
cwtl
in
xlat
xlat
cmp
dec
cli
add
rorl
cmc
js
shlb
push
outsl
pop
rorl
dec
xlat
dec
scas
ja
repnz
js
frstor
js
lods
jp
pop
ret
sub
leave
repnz
mov
lret
push
fiadds
inc
jl
pop
sahf
jecxz
or
dec
xorb
mov
inc
test
mov
ficoms
movsb
shll
mov
inc
fs
dec
mov
pop
sub
outsl
stos
pop
jae
jo
outsb
push
popa
lods
in
dec
xchg
cmpsb
ja
cltd
xlat
adc
or
xor
es
test
pop
rol
mov
movsb
fs
xchg
push
pop
orl
ss
call
adc
or
sub
pop
dec
iret
or
mov
mov
cmp
scas
shlb
leave
fucomip
outsl
mov
repnz
cmp
inc
jnp
adcl
lods
and
dec
pop
mov
cmpsb
fsub
xchg
xchg
sahf
pusha
and
cld
lahf
and
pusha
inc
jecxz
test
gs
cld
dec
inc
mov
into
and
mov
xchg
xchg
cmc
jnp
lea
scas
int3
rorl
hlt
lret
shl
in
inc
aad
bt
xchg
xchg
mov
push
and
cmp
or
ss
int3
pop
or
jb
ret
and
push
sbb
iret
mov
jg
dec
mov
aad
push
jbe
std
pop
insb
sbb
or
jmp
insb
dec
pusha
inc
push
sahf
ret
test
push
xchg
push
jge
cmp
pop
mov
sub
cltd
or
adc
les
sbb
cmp
imul
sbb
cltd
mov
insb
and
dec
or
jl
negb
dec
mov
inc
cmpsl
cmpsb
hlt
scas
sbb
mov
lahf
pop
lcall
outsb
lahf
xor
inc
adc
into
xor
js
ret
gs
sub
addr16
imul
jb
mulb
sbb
add
or
push
imul
arpl
mov
sub
add
adc
or
test
icebp
jmp
mov
mov
in
aaa
add
dec
ficoml
lock
movsl
jg
mov
add
dec
sub
jne
dec
imul
xchg
icebp
sarl
mov
mov
pop
repz
push
cmp
sbb
push
ficoml
push
in
push
jo
dec
out
xchg
xchg
sub
je
sbbb
or
ds
adc
testb
sub
fwait
mov
mov
dec
cli
fcoml
lea
dec
xchg
int
pop
xchg
insb
test
jns
lret
in
xchg
mov
pop
pushl
movsb
mov
adc
mov
pop
inc
pop
addr16
adc
mov
pop
xlat
iret
or
pop
iret
popa
vsubps
sub
jbe
ret
mov
mov
jmp
iret
and
popa
pop
in
repnz
and
push
icebp
sub
sub
push
inc
ss
mov
stos
sub
add
in
daa
mov
call
pop
aaa
xchg
push
pop
ja
mov
push
push
pop
push
add
mov
xchg
mov
or
xor
cs
sarl
in
fwait
sbb
test
lock
data16
test
jp
mov
in
frstor
add
pop
push
fsubr
ja
push
enter
inc
lahf
gs
pop
stos
insb
xchg
mov
popa
push
hlt
cmp
pushf
sub
repnz
leave
lods
dec
hlt
xchg
adc
inc
push
popa
aad
xor
or
cmp
mov
mov
lods
test
xorl
ljmp
jmp
cmc
jp
push
add
mov
aas
sahf
cmp
xchg
cmp
dec
sub
inc
and
sub
shlb
mov
xchg
in
loope
mov
fisttpl
jmp
xchg
sub
jbe
popf
mov
mov
pop
ret
imul
add
push
sbb
push
mov
leave
mov
cmp
xchg
lds
pop
dec
fnstenv
xor
jge
sbb
pusha
adc
or
sub
gs
imul
mov
sbb
insl
mov
mov
test
adc
frstor
cmc
std
sub
add
int
jae
sbb
out
repnz
xchg
push
roll
adc
mov
frstor
je
mov
cli
add
fs
mov
insl
aam
das
scas
mov
adc
stc
inc
xchg
mov
xchg
adc
rclb
fnstenv
int3
inc
push
jae
dec
notl
xchg
call
push
std
lret
and
pop
movsl
outsl
push
stos
push
xchg
mov
leave
mov
sbb
test
push
push
idivl
lock
pop
xchg
jo
inc
lds
pop
lret
mov
insl
fucomp
aas
mov
pop
mov
xor
cltd
and
sbb
aaa
lods
and
jge
and
cltd
dec
test
cmp
sub
or
push
and
fucomip
movaps
push
push
sbb
fstpl
out
mov
xor
fidivs
mov
stos
lret
js
and
sub
test
xor
jp
dec
test
mov
and
cmpb
add
push
retw
mov
mov
mov
pushf
icebp
pop
popa
outsl
rorl
push
shrl
int
or
lret
mov
fdivp
clc
lock
jnp
cs
xlat
sub
fcmovu
cmp
mov
pop
pushf
sbb
mov
cmp
or
sub
sbb
lods
repnz
mov
in
mov
outsb
loopne
pop
inc
cmp
sti
push
arpl
rclb
imul
push
dec
fsubr
push
nop
nop
sbb
or
push
mov
fisubl
jbe
xchg
mov
push
adc
jns
and
fwait
xor
fnstsw
ja
jbe
push
hlt
mov
or
jmp
push
shl
xchg
adcl
insl
add
loop
repnz
int
adc
int3
nop
xor
mov
gs
xor
cmp
shlb
rcll
xor
dec
pop
or
inc
cmp
adc
or
mov
lahf
mov
mov
sbb
ret
pop
mov
loop
jo
jno
xchg
sahf
mov
pop
or
lret
movsb
addr16
jns
mov
gs
pop
push
pop
xchg
out
jb
pop
outsb
add
dec
mov
jbe
fs
into
push
add
sarl
imul
out
in
add
cmp
testl
pushf
in
mov
mov
aas
ret
add
negb
jo
test
sbb
pop
testb
lds
jmp
repnz
fmull
repz
int3
ret
and
fidivs
je
inc
xchg
sbb
fs
iret
int3
loopne
mov
and
mov
aas
inc
popa
sub
lahf
fs
push
mov
xor
ja
push
mov
adc
or
jo
mov
aad
ds
lock
js
xor
les
push
ds
sbb
dec
mov
mov
das
test
jnp
out
xor
lods
in
test
add
pop
cld
in
inc
repz
adc
mov
mov
cmp
xchg
test
dec
leave
xor
or
xor
xchg
jle
mov
cmp
jne
pop
ja
mov
fildll
inc
push
adc
faddp
adc
push
jae
push
icebp
loope
mov
icebp
cmpsb
push
scas
lods
repz
add
int3
insb
and
mov
mov
xchg
jg
xor
sub
cltd
mov
sbb
repnz
icebp
call
fcompl
pop
test
lcall
cmp
xchg
pop
jno
rol
cltd
popf
lret
loop
mov
jo
push
pop
enter
adc
ds
inc
shlb
cmp
cmp
test
fisubl
xorb
inc
pop
fmuls
jge
xchg
int
mov
sub
loop
lea
xor
ret
pop
jbe
jb
lock
ljmp
mov
and
dec
aaa
and
add
xchg
xor
jecxz
push
sti
aam
mov
mov
nop
mov
hlt
inc
pop
jge
mov
nop
jb
ret
hlt
push
dec
std
fwait
aad
mov
mov
enter
inc
imulb
jo
fidivrs
std
mov
pop
and
aam
lret
adc
sbb
in
mov
mov
shll
cmc
push
push
lds
push
jp
movsb
jle
jnp
dec
jg
sbb
mov
jno
out
or
mov
arpl
sub
andl
arpl
icebp
add
inc
mov
mov
lods
sbb
dec
fxch
fcmovnb
adc
sub
cmp
sub
jg
movsb
scas
xchg
pop
sbb
cmp
imul
cld
and
xor
test
xor
xor
push
mov
aad
dec
cmpsl
mov
mov
mov
frstor
mov
arpl
stos
flds
add
lds
mov
cmp
in
lock
test
mov
cmp
adc
mov
ds
mov
shll
sbbl
cmp
aas
inc
jg
sub
push
test
xorl
out
cmp
lds
mov
xchg
add
sbb
hlt
aam
inc
aaa
scas
scas
gs
repz
pop
sub
sub
adc
mov
jge
mov
insb
jl
sbb
fidivrs
sub
mov
das
stc
in
orl
nop
inc
xchg
fcmovnb
loop
mov
dec
out
xor
sub
aam
stos
lods
stos
dec
dec
push
scas
add
in
xor
shrl
adc
pop
xlat
or
popf
dec
in
mov
xor
inc
inc
daa
pop
enter
inc
out
pop
xchg
repz
jbe
dec
es
add
jo
std
push
and
clc
shl
or
cwtl
leave
adc
adc
inc
mov
xor
insb
push
fdivl
pop
cmp
inc
pop
pop
stc
stos
fs
add
scas
mov
out
push
jecxz
mov
xor
lcall
and
pop
inc
xlat
arpl
xchg
mov
pop
or
ljmp
mov
insl
add
xor
dec
pop
loopne
xchg
cmp
mov
pop
pop
mov
jle
pop
loop
outsl
loop
daa
xchg
and
or
sub
and
in
push
sub
das
int
loope
push
faddl
or
je
jmp
add
xchg
lock
pop
pop
push
lret
lahf
out
sub
sub
mov
fnstenv
push
sarb
and
les
inc
jle
scas
sub
std
xor
adc
dec
or
cmp
jge
cld
sub
mov
jecxz
mov
add
sub
or
mov
ja
divl
or
jno
stos
xchg
mov
xchg
ja
lods
add
out
jl
cmp
adc
mov
repnz
xchg
fbstp
push
out
je
xchg
ss
mov
mov
dec
pop
sbb
ret
insb
popa
outsl
rcrb
xor
jbe
sub
push
mov
lcall
aad
addr16
mov
jns
pop
lock
cmpsl
lcall
inc
cmpsl
dec
rorb
outsb
mov
pop
movsl
fwait
push
push
dec
mov
out
popf
cmp
cmc
test
shlb
pop
pop
and
insb
push
in
cmpsb
push
mov
sarl
sbb
push
sub
mov
xor
mov
sbb
sbb
sbb
push
fwait
sub
addr16
stos
pop
mov
aaa
adc
out
test
sub
cltd
sbb
pop
xchg
std
daa
fwait
pushl
push
cli
cltd
mov
mov
pop
mov
imul
lods
xchg
cmp
and
pop
mov
stos
fistpl
add
insl
pushf
lea
cmp
fiadds
jp
sahf
adc
add
cmp
add
mov
mov
sub
jnp
scas
aad
and
ljmp
dec
call
cmpsl
cmp
xor
dec
popf
icebp
mov
or
sbb
push
or
jge
inc
lea
out
push
test
jmp
ja
fdivrs
sub
sub
fbstp
mov
cwtl
mov
sub
fnstcw
add
pop
dec
in
lcall
mov
sbb
push
and
rcll
and
sarl
or
fsubrl
loop
rep
fstpt
not
rclb
fists
enter
pop
repz
out
leave
pop
or
andb
push
nop
add
xchg
movsb
xor
xchg
clc
orb
daa
scas
xchg
enter
sbb
lods
unpckhps
in
xor
jecxz
pop
fidivl
mov
cmpsb
pop
pop
mov
insl
popf
pop
mov
mov
push
mov
dec
lea
loope
dec
push
mov
push
mov
push
jp
xchg
inc
lahf
andl
enter
fadd
daa
pop
jge
push
cmpsl
jnp
dec
ds
jbe
leave
arpl
dec
addr16
mov
fsts
in
aaa
push
insb
cmc
enter
mov
or
xor
dec
cwtd
jge
bnd
xchg
adc
inc
mov
mov
ficomps
dec
lock
inc
inc
rcrl
loop
jns
in
mov
jb
daa
cld
jg
pop
aaa
dec
sarl
push
outsb
adc
nop
movl
mov
fists
xlat
sub
cmpsl
mov
ret
test
pop
lret
stos
adc
xlat
repnz
orb
add
cwtl
ret
scas
hlt
cmp
add
sub
negb
xor
fcomps
ss
aam
pop
stos
dec
negl
ja
lds
sub
cs
lcall
sbb
adc
outsl
dec
dec
pop
mov
inc
sbb
push
xchg
fwait
push
cmpsb
imul
cmp
test
mov
jbe
cmp
xor
jno
adc
in
pop
or
xchg
mov
sub
mov
push
ja
sbbl
sub
fidivs
cmpl
out
or
scas
add
insb
imul
jno
or
insl
test
sti
mov
and
fbld
icebp
lret
fildl
xchg
adc
sbb
xchg
add
fidivl
xor
les
xchg
xor
pop
pop
adc
adc
and
mull
mov
pop
mov
inc
rol
in
lods
mov
pop
aad
pop
xchg
inc
lretw
sbb
and
xor
insl
mov
mov
pop
ds
mov
sahf
push
popf
jbe
ficoml
gs
and
or
sarb
inc
add
push
jae
daa
inc
xor
rcr
clc
test
cmp
mov
ja
push
or
and
cmp
in
imul
or
jmp
jg
scas
mov
xchg
lods
xchg
mov
sub
aas
cmpsb
sbbl
arpl
imul
push
ja
sub
std
pop
pop
push
xor
lea
mov
pop
into
repnz
hlt
test
mov
out
shrl
or
sub
sarb
sbbb
lea
jmp
fidivs
inc
cmpsl
inc
pop
xchg
add
out
test
clc
adcl
fidivrs
sub
jae
shll
mov
push
into
sub
push
sbb
mov
dec
mov
xlat
scas
adc
pop
dec
jecxz
xchg
push
jne
test
jno
pop
ret
and
and
sbb
mov
pop
insl
rcrb
push
lods
leave
pop
jne
dec
mov
sbb
mov
jecxz
xchg
test
mov
pop
popf
sti
cmp
pop
mov
ret
lea
jecxz
stc
inc
scas
sbb
pop
hlt
or
mov
push
mov
jnp
push
out
in
xor
idiv
adc
movsl
pop
xlat
cmp
adc
inc
cmp
roll
pop
nop
mov
xor
lret
aad
jge,pt
xor
jp
sbb
lods
push
in
popf
push
in
and
mov
sbb
iret
rcrl
push
mov
loope
adc
push
jne
ficoms
xorb
xor
dec
imul
cli
pop
aaa
test
sbb
orl
xchg
and
movb
scas
mov
hlt
int3
loop
jecxz
dec
sbb
adc
and
jmp
xchg
mov
pop
or
test
fdivrl
ret
mov
or
mov
add
ja
jne
aam
mov
xor
sbb
aam
inc
and
scas
pop
out
add
in
es
jmp
push
jns
inc
popa
ret
fildl
mov
xor
add
repnz
imul
bound
xor
sbb
sbb
inc
repnz
lods
sbb
mov
aaa
jle
add
pop
adc
inc
test
mov
daa
sti
enter
push
js
outsl
frstor
mov
pop
xlat
in
inc
push
cmp
inc
pop
ret
adc
and
sbb
leave
roll
pop
insl
cmp
jg
ljmp
stc
stc
out
ret
icebp
sub
gs
adc
shl
popa
subl
movsl
lods
push
cli
addr16
xchg
dec
pop
mov
rcll
stc
cmp
push
mov
aas
roll
adc
mov
add
sahf
das
sbb
jecxz
in
cmp
addr16
jge
add
sub
xchg
in
je
and
jl
rep
jnp
aas
gs
sti
sbb
push
sti
adc
dec
ja
js
lcall
mov
es
dec
sbb
inc
mov
scas
mov
lahf
lods
jb
push
jl
ss
push
xchg
sti
nop
xchg
adc
push
iret
mov
dec
cmpsl
dec
mov
jmp
mov
jbe
nop
xor
pop
icebp
shlb
testl
push
sbb
lret
add
jmp
loop
ds
pusha
mov
leave
sub
scas
mov
idivl
fnsave
sahf
jmp
mov
out
sbbb
mov
fstpt
and
jle
mov
lds
pop
sbb
sub
test
mov
mov
or
scas
cmpsb
stos
cmp
mov
imul
mov
popf
adc
in
sbb
fldt
orl
xchg
push
clc
fisttpll
lret
cmp
inc
fists
pop
push
sub
jmp
arpl
inc
bound
push
aaa
arpl
inc
fs
shl
pop
mov
mov
dec
rclb
or
and
shlb
xor
hlt
xor
flds
mov
adc
fisttps
or
outsl
or
push
das
cli
cmp
mov
pop
or
adc
or
and
mov
and
pop
sbb
pop
push
jae
dec
call
hlt
xor
inc
iret
into
or
mov
hlt
jecxz
jne
fucom
ret
out
xchg
fidivrs
inc
push
sub
adc
sbb
ljmp
test
loop
clc
enter
mov
ret
ljmp
xchg
mov
ret
mov
cwtl
fildll
dec
mov
jp
xchg
shll
mov
fisttpl
loope
push
xchg
into
ss
out
mov
add
pop
sbb
add
jmp
rcll
incl
popf
loopne
lods
lahf
fldcw
clc
pop
insb
and
aaa
add
inc
jle
mov
cmp
je
std
pop
jg
arpl
shr
xchg
outsl
adcl
mov
mov
xchg
testl
adc
mov
mov
xor
decb
or
fwait
add
rclb
ss
out
mov
imul
leave
mov
add
mov
mov
aam
icebp
lret
add
pop
es
repnz
stc
xchg
ljmp
sbb
cmc
push
std
xor
and
jl
push
and
sub
cmp
movsbl
dec
push
cmc
imul
test
xchg
sub
mov
sbb
bound
shr
cmpsb
cmp
bound
out
sti
mov
adc
pop
mov
leave
imul
and
test
mov
stos
jae
push
fcmovnbe
and
into
dec
dec
dec
push
xor
lods
rorl
xchg
sub
inc
push
sub
pop
std
mov
int3
mov
lret
pushf
loopne
icebp
add
xor
fdivp
sub
adc
dec
daa
push
xchg
xor
lods
or
mov
dec
lret
jmp
dec
xchg
int
aam
mov
push
sub
sub
pop
xchg
xlat
push
jo
mov
into
je
or
loop
movsl
push
es
test
daa
bound
xor
cs
sub
outsb
arpl
push
and
or
dec
das
cmp
push
movsb
stos
mov
cmp
iret
data16
adc
in
int
addr16
xor
or
lea
pop
jg
mov
and
ficompl
add
les
cmp
je
xchg
jmp
xor
data16
std
mov
lea
sbbl
mov
xor
dec
shlb
jno
push
movsl
push
jmp
shlb
jo
add
cmp
ss
pop
xchg
xchg
inc
or
mov
aas
xchg
push
loope
or
les
mov
imul
cmpb
ljmp
push
cli
cmp
ret
out
clc
sbb
cmp
cltd
in
jne
push
iret
into
scas
hlt
mov
push
and
pop
mov
ljmp
popaw
js
jge
ljmp
dec
mov
xlat
mov
data16
sbb
inc
test
jmp
or
fwait
xor
inc
inc
daa
cmp
cmp
lret
jno
clc
iret
popa
add
mov
mov
push
ljmp
xchg
outsl
sub
shl
aam
rolb
out
pop
or
dec
mov
lret
mull
or
cmpsl
repz
mov
and
fsub
sbb
and
aas
sub
or
outsb
lds
fsub
cld
out
repnz
mov
push
jl
xchg
add
dec
sbb
dec
sub
sub
pop
jno
fstl
cmp
pop
mov
jg
mov
xor
xchg
or
xchg
scas
lods
jo
xor
aaa
jg
and
xchg
mov
adc
out
add
cmp
or
cmc
sbb
iret
inc
popf
lcall
data16
movsl
jg
fisttpl
ljmp
int
adc
fisubs
sahf
mov
xchg
fdivrp
mov
arpl
jmp
sub
pop
inc
jecxz
lcall
mov
push
lret
adc
inc
push
mov
sbb
push
mov
xchg
or
outsb
repnz
int
pop
repz
dec
adc
addr16
xchg
repnz
and
mov
xorb
push
shr
mov
lret
inc
cmp
mov
jecxz
sub
in
mov
dec
insl
and
das
mov
sub
dec
sti
ret
je
icebp
loopne
cmp
push
mov
adc
jp
je
outsb
mov
jne
mov
insl
lcall
cwtl
faddl
mov
cmc
subb
and
dec
out
xchg
mov
xchg
rorl
xchg
or
icebp
push
mov
mov
stc
js
mov
rcrl
shll
mov
rol
cmp
and
icebp
int3
push
jae
ret
cltd
insl
clc
pop
push
test
int3
sbb
lods
clc
lcall
int
dec
outsl
je
cli
add
lods
cmp
lods
xchg
adc
pop
mov
cltd
mov
pushf
jecxz
adc
sti
pop
add
add
lret
int
outsl
adc
js
outsb
sub
test
es
cmpsb
ds
pop
mov
mov
sbb
fcmovnu
repnz
stos
out
clc
imul
gs
insb
sub
jne
inc
fisttps
rcr
xchg
cwtl
mov
mov
cli
pushf
cmp
push
pop
gs
and
cmpsl
xor
xchg
jge
inc
pop
dec
sbb
pop
ds
cmp
jle
inc
pop
fiadds
test
test
xchg
and
mov
lock
push
leave
clc
and
icebp
outsl
stos
mov
inc
jge
iret
xor
and
iret
dec
hlt
sbb
dec
mov
ljmp
jl
cli
mov
jmp
xlat
rol
jb
int3
push
loop
mov
mov
std
mov
push
jbe
lods
inc
or
dec
cltd
negl
in
pop
fsubr
push
ficomps
sti
hlt
push
mov
pop
lret
rcr
movb
notb
mov
movsb
arpl
sbb
test
mov
shl
loop
rclb
or
cld
jge
jecxz
mov
rsqrtps
mov
jl
add
mov
popf
push
fstps
lcall
cmp
xor
int3
cwtl
stos
es
divb
gs
adc
dec
sub
lea
adcb
sub
bound
mov
nop
or
mov
dec
jb
push
cmp
xor
stc
lahf
ret
dec
push
pop
fwait
xor
mov
add
mov
loop
inc
add
enter
out
test
push
faddp
es
adcb
add
xor
adc
pop
les
jmp
cmp
out
stos
sub
nop
mov
cmc
xchg
jle
jns
mov
cld
xor
cmp
sbb
mull
dec
loop
adc
pop
in
mov
cmp
lds
dec
stos
loope
out
addb
pop
push
push
in
xor
les
aas
out
mov
aad
jmp
movsb
inc
push
rolb
into
outsl
cmp
scas
push
fnstenv
fisttpl
inc
bound
sub
flds
jne
movsl
fcoml
pop
cmpsb
xor
xchg
in
inc
int
push
ljmp
ljmp
cmpsl
shlb
xchg
jnp
enter
mov
sub
cmpsl
dec
popa
sub
xor
bound
dec
fbld
shrl
sbb
rcrb
dec
in
lcall
inc
inc
mov
aad
xchg
in
dec
addb
inc
insl
and
icebp
push
clc
lret
imul
jl
sub
vmovdqa
pop
fdivs
stos
call
cmpsb
sbb
jp
dec
movb
jmp
pop
mov
cmp
and
cmp
xchg
and
adcl
inc
dec
cmp
mov
cmp
mov
repz
add
jmp
mov
mov
push
adc
mov
addb
call
pop
push
cmp
jmp
cmc
xchg
into
test
mov
adc
insl
iret
pop
sub
call
cs
xor
mov
mov
nop
xor
jae
inc
xor
enter
xchg
pop
jmp
mov
fcmovbe
sahf
pusha
sbb
adc
dec
pop
call
pop
mov
mov
push
sbb
sbb
cltd
hlt
arpl
decb
sti
dec
sub
mov
hlt
jle
pop
cmpsl
pop
xor
cmpxchg
js
lods
ror
lret
cltd
cld
test
sti
pop
inc
pusha
fsubs
xor
dec
push
lahf
lods
roll
mov
fmull
or
in
push
loop
mulb
mulb
out
jmp
adc
xchg
mov
inc
jecxz
mov
les
inc
mov
inc
insl
shll
add
jp
insl
add
sub
inc
cmp
loopne
call
pop
dec
jo
call
push
cmp
jg
jl
adc
add
mov
cmpsl
fcoml
mov
je
int3
mov
jp
loope
addr16
hlt
jecxz
in
bound
inc
testb
in
bound
push
int
es
and
gs
out
js
push
imul
mov
pop
es
mov
aam
jbe
xor
mov
mov
adc
adc
inc
xchg
sub
mov
test
jmp
push
mov
sbbb
js
inc
mov
dec
mov
clc
imul
into
test
pop
mov
aaa
push
push
sbb
push
mov
push
xchg
lea
adc
pop
xor
cwtl
sub
jns
mov
mov
mov
cmp
xor
xchg
insb
int3
cmpsb
scas
fwait
test
in
and
push
sub
jno
pushaw
cs
push
lods
mov
insl
cvttps2pi
lret
jb
cli
in
test
sub
xor
fisubrs
cmp
mov
or
repnz
pop
mov
jne
mov
add
fsubl
out
leave
shrb
push
aad
xor
add
xchg
scas
push
push
mov
lods
xchg
mov
mov
push
sub
pop
pop
bound
insb
push
sub
stos
jae
xchg
lods
sbb
ljmp
mov
addr16
mov
sbb
xchg
mov
rcr
addr16
or
xor
xor
or
inc
sbb
inc
lock
xchg
mov
inc
icebp
test
stc
imul
add
add
fidivrs
pop
fistpl
mov
jo
pushf
cmpb
xor
inc
addr16
sbb
pusha
and
pop
rcll
sub
or
jecxz
pusha
pop
sub
fwait
stos
pusha
sub
sub
mov
push
xchg
repz
push
rorl
jne
or
jmp
lods
mov
adc
js
in
jns
leave
in
xchg
daa
sbb
inc
mov
jg
mov
jae
loop
fcmove
les
sti
das
mov
and
rolb
shl
add
leave
mov
fisubl
data16
pop
rcrl
outsb
aad
pop
test
scas
movb
std
jle
adc
stc
jge
pop
outsl
adc
adc
cmpsb
xor
das
call
aaa
call
imul
push
add
pop
insl
jns
and
addr16
inc
mov
in
imul
sbbl
int
dec
orb
add
pop
jmp
dec
fldt
leave
push
out
push
fistl
mov
xor
inc
divb
or
scas
stc
pop
cmp
sub
cmp
adc
test
or
cmp
stos
and
sti
mov
push
sub
std
lahf
fs
and
aas
int3
jge
lahf
cmpsl
iret
in
fbstp
das
fisubrs
sub
imulb
and
test
inc
lcall
aam
sbb
adc
sbb
fcmovne
ss
mov
cli
aam
jp
mov
aad
loopne
loope
ds
xor
rcl
add
xchg
jp
or
push
pop
inc
add
lret
popa
jge
cltd
jne
rorb
adcb
ja
xchg
jns
lahf
mov
xor
or
cmpsl
fstpl
push
jle
insb
or
pop
inc
dec
jbe
pop
mov
mov
aam
aas
and
mov
pop
outsl
xor
jbe
and
xlat
std
shr
out
cwtl
jns
repnz
dec
inc
dec
sbb
xchg
mov
aad
or
xchg
shll
push
aad
sbb
movsl
mov
test
ss
inc
imul
cmp
mov
push
mov
sahf
xchg
mov
cwtl
inc
shrl
out
rcrl
cmc
pushl
cmp
rcl
xor
inc
hlt
and
push
mov
stos
out
jmp
push
stos
xor
sahf
mov
pop
inc
jns
sub
jmp
push
mov
push
add
imul
jge
test
lret
mov
adcl
mov
inc
pushf
in
xor
push
sbb
mov
pop
mov
aam
clc
sarl
mov
out
mov
cmp
xor
push
sarb
int
xor
stc
scas
cmpsl
mov
imul
sub
mov
cmp
ret
adc
outsb
addr16
cld
and
jo
add
in
dec
aad
mov
cwtl
or
test
pop
sbb
cmp
outsb
pop
lcall
push
or
sbb
addr16
push
xor
jae
add
aas
pop
mov
mov
mov
and
adc
sub
inc
popf
and
lcall
sub
inc
dec
sbb
xor
mov
iret
push
ds
pop
sbb
adc
aad
pop
repnz
outsl
sarl
scas
jg
sbb
or
sub
push
fsubrp
cmp
cmpsb
push
sub
repz
aas
fwait
mov
test
and
sub
pop
jae
inc
and
adc
and
data16
adc
or
hlt
nop
pop
push
mov
cli
sbb
push
imul
addl
push
mov
ds
les
and
push
stos
clc
lcall
xor
adc
xlat
fwait
js
inc
mov
adc
xor
dec
cld
pop
dec
dec
add
cmp
pop
dec
sbb
push
inc
mov
mov
call
dec
xor
cmc
repz
push
repnz
popa
call
adc
clc
int
cmp
insl
lds
out
add
std
xor
fwait
aas
push
inc
sahf
dec
lods
mov
and
call
repz
ret
xchg
lea
sbb
movsb
jg
sbb
into
ss
shl
insb
das
and
mov
bound
stos
xor
nop
jae
mov
pop
jmp
sub
mov
pop
dec
out
movsb
push
cmp
jl
inc
shlb
xor
push
pop
lods
out
mov
ret
mov
pushf
enter
fsts
sub
jae
xchg
dec
mov
lahf
clc
test
cld
push
xchg
adc
adc
jmp
cmp
cwtl
fadd
movsb
sub
cwtl
or
ret
cmp
ss
aaa
cmp
rep
dec
xor
xor
cmp
lea
mov
rcrl
fstl
lea
jno
pop
clc
sbb
cmp
daa
fwait
popa
testb
jmp
roll
mov
andb
cmp
and
inc
jmp
mov
add
inc
lea
icebp
xor
call
xor
popa
es
xor
pop
in
inc
test
pop
jae
incb
adc
cltd
and
jmp
jne
cmp
or
or
icebp
or
mov
ja
mov
das
test
and
xchg
lret
sub
ljmp
xor
jnp
sbb
push
imul
pop
je
lods
rcr
out
xor
jo
outsb
jo,pn
xchg
mov
mov
in
xchg
xlat
or
inc
or
test
jg
adc
sar
imul
dec
mov
js
inc
call
xor
mov
scas
mov
ss
je
into
cmp
push
adc
mov
int3
popf
stos
pop
das
push
sti
cld
xlat
jp
mov
pop
sub
ret
dec
xchg
aad
dec
cmp
fisubl
add
movsl
data16
je
xchg
fsubs
mov
bound
repnz
out
inc
jae
inc
xor
in
test
stos
filds
mov
jge
rcr
std
mov
adc
sub
push
or
negb
decl
push
xor
in
pusha
xor
sub
sub
es
add
loope
jns
and
jp
adc
sbb
leave
add
stos
push
testl
scas
dec
or
sarb
sbb
dec
in
out
or
sub
into
xlat
sahf
daa
sub
fisubrs
loop
lret
int
add
aas
fsubs
inc
push
dec
pop
dec
cmp
sub
and
push
jne
push
push
test
jnp
sbb
pop
sub
dec
sti
jle
pop
pop
jo
lods
xlat
jne
cmp
pusha
pop
mov
or
and
dec
mov
aaa
sbbl
xor
sahf
data16
pop
in
adc
cwtl
inc
sbb
jge
test
pause
daa
popf
sub
push
or
dec
adc
imul
inc
mov
sub
cmp
mov
add
bound
and
push
cltd
xor
adc
test
add
dec
add
adc
jnp
xchg
adc
stos
dec
push
adc
stc
xchg
mov
cmpsb
lods
sub
mov
inc
gs
sub
test
pop
mov
jle
pop
or
push
xchg
lock
sbb
adc
dec
adc
push
sahf
jns
lods
mov
inc
jle
push
mov
jl
dec
lcall
adc
fwait
push
xor
das
push
jne
out
mov
divb
adc
mov
push
das
and
cmp
leave
addb
xchg
cli
into
mov
add
in
sbb
sub
icebp
add
test
and
jg
push
sbb
sbb
pop
mov
sub
into
insb
cltd
mov
ret
mov
cmp
pop
fwait
push
cltd
and
push
popa
ja
dec
mov
stos
lds
aad
lods
nop
jl
mov
les
inc
mov
inc
shll
out
into
mov
in
jb
add
push
jne
mov
subb
adc
pop
cmp
arpl
sti
sti
mov
in
mov
pusha
or
or
mov
popf
sub
add
xor
mov
int3
jl
mov
test
scas
cmp
loopne
daa
in
mov
pushaw
das
out
js
jae
inc
mov
add
in
cmp
call
hlt
repnz
adc
out
fwait
movsl
adc
xchg
fimuls
clc
xor
pop
inc
or
or
inc
mov
cwtl
cmp
jl
pop
cwtl
ja
daa
roll
add
inc
pushf
daa
mov
mov
outsl
daa
out
out
lods
fucomp
cmp
inc
das
imul
jno
push
sub
adc
hlt
or
mov
iret
cltd
cltd
loop
gs
aas
push
imul
or
outsl
clc
and
repz
mov
mov
jp
or
loope
or
xchg
cs
scas
es
mov
ljmp
cmpl
pusha
movsl
daa
add
cmp
stos
dec
and
js
mov
xchg
popa
jns
mov
jle
notb
jns
in
cmc
mov
inc
push
test
pop
push
and
ja
push
pop
movsl
adc
push
add
out
or
sbb
push
aad
lods
fldl
loope
sub
push
inc
daa
sub
xchg
mov
push
call
jg
add
out
cwtl
ret
or
mov
insl
xchg
enter
ret
inc
gs
xchg
psllw
cmp
cmp
rcr
pop
pop
hlt
adc
mov
outsb
fimuls
push
loopne
cmc
pushf
orb
and
pop
inc
jp
mov
xchg
sar
push
mov
popa
and
incb
xor
inc
adc
mov
add
push
test
or
repz
xchg
shll
cmp
mov
sbb
mov
cmpsl
stc
fs
mov
flds
lret
outsb
and
add
ss
icebp
mov
sub
in
jbe
js
repz
pushf
cmpsl
lcall
inc
or
mov
into
dec
fldt
mov
mov
jmp
and
in
cmp
dec
out
repz
or
jg
cmp
sub
pop
arpl
dec
lret
sub
lahf
fistl
dec
or
aad
mov
pop
push
out
aas
dec
fcmovne
in
adc
gs
cmp
pop
bswap
add
inc
leave
or
roll
and
push
aad
cwtl
pop
loopne
cmp
jbe
cli
sbb
or
adc
jg
or
or
adc
leave
mov
pop
cmp
jle
negl
fstl
popa
dec
js
cmp
out
lcall
mov
jno
rcl
cwtl
sub
pop
arpl
loope
sahf
xor
adc
jb
fsubl
lcall
add
fwait
popa
sbb
or
jle
lahf
jl
sti
sbb
dec
cwtl
sbb
push
or
adc
js
test
pop
insb
inc
orl
pushf
jle
ds
out
sarb
fwait
xor
cli
jp
es
gs
inc
mov
add
mov
pop
dec
rclb
cmpsb
rclb
mov
sbb
jge
mulb
mov
aaa
scas
dec
shrl
xor
fcoms
jmp
lock
sbb
pop
xlat
pop
ss
or
iret
daa
in
inc
mov
or
mov
loop
cmp
sti
sarb
adc
or
cmp
and
test
in
dec
pop
and
dec
jle
mov
mov
std
push
mov
jo
jp
dec
sub
jmp
idivl
call
icebp
repnz
cld
mov
mov
lcall
scas
add
mov
insb
mov
push
mov
push
jae
loopne
clc
cmp
xchg
sbb
add
out
jl
mov
mov
les
mov
movsl
push
xchg
jb
imul
fisubrs
mov
xor
cmpb
insl
lret
sbb
jmp
or
mov
mov
mov
pop
jge
sbb
pop
lea
ret
pop
fdiv
or
aas
mov
push
mov
dec
pop
mov
cmp
js
insl
inc
jl
or
sbb
lock
icebp
push
mov
ljmp
or
push
adc
orb
mov
mov
test
push
in
in
push
push
xor
aad
popf
push
fidivs
pop
jns
mov
dec
fwait
inc
and
insb
mov
pop
mov
and
mov
stos
cmp
in
mov
js,pt
pusha
jge
scas
dec
sbb
pop
push
add
enter
jmp
jo
ror
push
ret
or
pop
in
push
jnp
lcall
inc
mov
and
push
call
mov
jmp
notl
loopne
arpl
pop
sub
jmp
pop
sub
dec
add
orl
loopne,pt
or
dec
popf
cmpsb
into
out
mov
adc
ljmp
push
and
push
fidivrl
aad
mov
mov
inc
sub
lea
cld
inc
data16
inc
les
jb
je
mov
sub
xchg
lock
mov
sarb
cs
mov
jb
icebp
std
jmp
cs
adc
push
fstps
sbb
push
mov
push
sbb
or
std
call
lea
mov
into
je
mov
icebp
out
icebp
ret
fisttpl
inc
cmp
mov
rep
adc
sub
xchg
gs
push
mov
out
imul
push
loopne
add
dec
add
xchg
adc
not
adc
adc
mov
shrb
scas
aas
lock
pop
leave
ljmp
cld
adc
in
testb
mov
out
lock
lods
les
dec
jno
cmp
lods
sub
fsts
ja
ret
movsb
pusha
push
jns
imul
sahf
pop
mov
ds
lods
repnz
inc
sub
jmp
stos
mov
lea
add
sbb
mov
mov
fstps
fucomi
lds
or
movsb
addr16
mov
xor
pop
stos
fdivrl
sub
lea
popf
ds
fistps
faddl
and
mov
dec
icebp
lods
xorl
das
or
rclb
dec
icebp
loopne
adcl
movsl
jb
in
mov
icebp
dec
dec
dec
pop
adc
ja
sub
mov
hlt
es
jp
pop
pusha
inc
aam
xchg
push
adc
iret
sub
imul
divl
push
clc
cmp
sbb
repz
cmp
sbb
pop
jno
scas
insb
fstl
int
push
clc
imul
mov
cmp
push
push
inc
sbb
mov
insb
jle
stos
test
mov
sub
movsl
push
shll
push
hlt
aaa
out
lahf
test
pop
imul
das
mov
mov
mov
add
xchg
xor
mov
rcrl
hlt
cmp
mov
lahf
sbb
or
or
sbb
push
mov
pop
fwait
add
adc
sti
jb
pop
inc
lret
xor
testl
pop
dec
adc
ret
add
sbb
sub
dec
scas
adc
add
and
mov
lea
inc
mov
push
pop
sbb
std
add
loope
into
incl
sbb
jg
cmp
stc
mov
ljmp
or
imul
ret
and
push
mov
mov
jl
cs
add
xchg
dec
jne
stos
cmpsl
mov
test
je
sahf
mov
adc
sub
mov
pop
es
add
out
cs
sar
ds
ret
lods
pop
pushf
orl
add
jl
mov
xor
pushf
mov
jne
dec
xor
cmpsl
pushf
jmp
dec
cmp
sbb
lret
jge
inc
adc
sub
pmuludq
adc
dec
adc
xor
ds
hlt
adc
mov
insb
push
or
jp
jmp
mov
adc
sbbb
push
lahf
mov
dec
mov
mov
lret
xor
mov
xor
add
jmp
xchg
cmp
or
fdivp
shufps
aaa
pusha
out
adc
iret
ret
loope
cld
jb
push
les
dec
xlat
fisttpll
andl
xor
in
cmp
cmpsb
jns
pop
sbb
sbb
sub
add
ljmp
and
stos
fistpl
bound
and
nop
jne
mov
dec
sub
sub
sub
adcb
mov
in
add
add
jmp
clc
fwait
pop
and
rcr
lock
push
xor
out
push
jne
pop
adc
es
pushf
jmp
sbb
cmpsb
pop
enter
gs
stc
push
mov
cltd
dec
sbb
gs
test
rclb
or
lcall
xchg
outsb
sbbl
xchg
sub
jo
cld
out
fimuls
sbb
adc
stos
popf
sbb
sub
add
inc
cmp
mov
cmpb
sub
mov
ret
fstl
xchg
pop
pop
popf
pop
fisttps
jmp
pop
xor
sbb
lock
inc
loope
push
ficoms
pop
adc
jne
or
aaa
testb
mov
inc
mov
pop
sub
mov
jmp
lret
enter
xchg
aam
cmc
insb
mov
arpl
js
cmp
pusha
cli
add
aam
inc
fsubs
popa
jbe
or
jp
mov
scas
push
xchg
xchg
lods
pop
inc
rcll
aaa
addr16
sbb
ret
mov
pop
std
shll
cmp
and
mov
and
movl
pop
nop
cmp
jle
and
ds
aaa
push
add
ss
mov
jno
testb
push
push
into
push
sbb
lea
sbb
negb
dec
mov
iret
bound
int
xchg
and
pop
sub
mov
sti
cmp
xchg
mov
sub
repnz
lea
adc
dec
lcall
and
ret
xchg
fucomp
and
dec
jl
out
add
outsb
insb
rcll
pusha
xor
pop
mov
dec
xchg
xchg
xor
adc
push
cli
loop
dec
pop
in
push
fmull
xadd
sub
lret
aam
xchg
cmp
and
jge
test
xchg
scas
cmc
xlat
rcrl
sub
lods
nop
pop
cmovbe
pop
mov
xchg
repnz
mov
mov
push
jne
repz
arpl
push
fldcw
test
inc
mov
and
jg
and
inc
fnstsw
stos
shll
pop
xchg
icebp
xor
lgs
inc
out
xor
les
pop
push
mov
enter
out
testl
mov
aaa
jb
shll
popa
push
aad
cmp
inc
inc
push
xor
ja
filds
push
push
insb
sub
cmp
ds
xor
adc
insb
add
daa
incb
fstpt
xchg
xor
cltd
subb
mov
ja
dec
aad
push
push
in
mov
add
pushf
push
movsl
cmp
lods
dec
sub
mov
decl
mov
and
es
or
mov
pop
sbb
ljmp
inc
jno
pop
adc
jo
cs
aad
jo
adc
jl
or
std
inc
push
or
stc
cld
add
stc
cmp
loopne
mov
insl
push
out
scas
and
dec
sbb
in
cld
and
cmp
fcmovnb
ficompl
outsl
cmp
pushf
jg
pop
jl
in
inc
mov
imul
int3
lods
and
cmp
cmp
scas
sub
outsb
jae
and
scas
and
pop
lahf
into
lods
cwtl
cmp
test
cmp
addr16
out
orl
or
jle
arpl
dec
push
addr16
pop
jns
aam
mov
sub
in
mov
jae
daa
xchg
dec
sub
loope
movsl
out
addr16
pusha
gs
sahf
mov
out
popf
jno
and
xor
push
dec
cwtl
int3
rorb
mov
mov
std
cld
lods
xchg
inc
xchg
addl
loope
add
inc
and
pop
ss
sub
jg
mov
sub
xchg
nop
cmp
mov
shlb
add
mov
cmp
fldl
or
jg
mov
inc
jmp
jmp
imul
in
lahf
pop
sarb
leave
das
jmp
enter
sub
cmp
cs
dec
insb
jp
and
repnz
sub
aas
imul
add
and
inc
sub
xor
jae
aad
iret
dec
ja
out
xchg
repnz
data16
in
xor
pop
cmp
mov
xor
adc
jnp
aad
dec
pop
sub
js
or
rclb
jl
imul
cmp
mov
movsl
test
add
pop
mov
stc
pop
movsl
dec
jmp
daa
pop
repnz
aam
aam
cld
or
or
inc
cmpb
aam
mov
jg
jmp
clc
cmp
or
xor
shrb
rol
jl
xor
mov
bound
inc
dec
lock
cmp
jmp
pop
and
pop
push
xchg
and
jae,pt
cmp
insb
push
into
dec
sbb
fnsave
mov
xchg
dec
fisubrs
sahf
add
repz
jle
mov
pop
pop
jbe
in
aad
out
and
cmc
scas
enter
cmp
jns
sbb
inc
push
sub
pop
pop
lods
cs
sbb
inc
in
scas
pop
test
push
out
sub
subb
and
mov
das
lods
jmp
jns
lock
fistpl
jo
cmp
mov
xlat
xorb
stos
push
or
dec
and
lcall
push
push
addl
mov
orl
shrb
dec
sti
lea
pop
in
and
jne
xor
mov
mov
jnp
mov
daa
fidivl
out
stos
rolb
sub
fs
push
ret
sub
mov
and
sub
aad
out
adc
lret
xor
fistpll
adc
popf
xchg
shr
nop
rcrl
sbb
mov
cmpsl
jno
das
mov
mov
lods
or
dec
push
mov
shl
xchg
xchg
sbb
jns
les
shlb
cmp
sub
jo
and
shrb
mov
inc
enter
or
loope
dec
rclb
and
subb
movsl
dec
adc
sbb
add
popf
mov
jg
fs
out
mov
cli
mov
cwtl
bound
mov
cmp
adc
lods
jne
jg
cmp
aam
sbbb
jmp
lods
test
sub
fidivl
add
mov
dec
cmp
inc
aaa
dec
sbb
pop
in
sub
inc
stc
push
inc
test
cmpsb
roll
sub
mov
and
push
sarl
add
imul
pop
xchg
cld
cltd
pop
push
mov
mov
sbb
mov
jmp
cmpsl
int
jmp
mov
add
sti
shlb
sub
sbb
stc
mov
adc
pushf
adc
push
pop
mov
xor
xor
xor
push
icebp
stc
xchg
add
mov
pop
xchg
inc
add
leave
clc
ss
jne
jecxz
xchg
push
mov
mov
mov
cs
scas
xchg
int3
pop
add
scas
ljmp
sarl
pop
mov
popa
inc
add
sbb
andl
dec
cmp
je
or
add
aaa
andb
sbb
dec
mov
sub
sbb
mov
mov
jns
call
cmp
outsb
mov
xchg
movsb
into
add
movsl
sbb
or
pop
jmp
and
ds
jns
sbb
or
xorps
or
add
dec
push
push
add
add
ret
cmp
jg
sbb
pushf
inc
int3
das
scas
jl
jge
mov
lcall
or
rorb
aad
sahf
imull
subb
sbb
inc
movb
data16
inc
sbb
push
pusha
in
scas
or
dec
cwtl
adc
add
mov
push
mov
es
sahf
insl
movsb
push
addl
sbb
lods
jae
cs
dec
lret
popf
inc
xchg
ds
cld
js
int3
nop
mov
test
scas
insb
sub
add
cmp
xor
in
mov
mov
pop
adc
fwait
pop
pop
nop
nop
jg
mov
dec
in
ds
mov
js
insb
inc
and
imul
in
mov
pop
leave
sub
lods
repz
ss
mov
repz
add
cmp
dec
mov
mov
push
jp
leave
test
popf
or
insl
inc
mov
popf
mov
dec
lods
mov
lret
and
sbb
fsubr
mov
cmp
push
sub
ret
xor
and
outsl
and
daa
jmp
mov
pop
xchg
add
inc
jp
xor
out
aas
movsb
mov
test
hlt
jns
inc
ljmp
xchg
leave
mov
pop
mov
sarb
sbb
shr
hlt
xchg
sbb
inc
shlb
inc
aam
sbb
lods
dec
nop
test
iret
xor
loope
dec
repz
mov
jg
mov
imul
jl
imul
aad
fldt
pop
adc
push
lods
loop
jp
test
dec
jnp
dec
push
push
push
inc
pop
push
sbb
jle
or
jl
aad
out
rcrl
fstp
fisttpl
push
and
push
rol
into
adc
scas
mov
push
and
sub
sub
mov
push
dec
pop
mov
mov
test
add
mov
pop
lret
aam
fs
push
dec
jo
cmpsb
adc
or
iret
jnp
scas
cmp
push
dec
pusha
sub
shll
inc
aaa
iret
shll
mov
sbb
fisubrl
inc
adc
push
in
jae
dec
mov
cmp
push
jge
je
pop
pop
ret
mov
pushaw
popa
inc
xor
inc
mov
inc
mov
mov
xor
insb
imul
mov
sbb
sarb
imul
shlb
sub
aad
pavgw
and
xlat
push
add
out
push
jle
test
out
cmp
dec
mov
ret
mov
lcall
lret
test
mov
jmp
jns
rcr
fadd
aam
dec
mov
test
add
clc
push
outsb
hlt
xchg
fsubs
test
rcrb
xor
aad
in
add
ljmp
pop
inc
xchg
gs
mov
pop
enter
into
add
mov
movsb
dec
or
sub
popf
xor
lret
mov
inc
nop
adc
cvtpi2ps
cmp
test
mov
or
mov
mov
pop
lcall
pop
cmpsl
add
jbe
dec
push
mov
roll
mov
push
mov
mov
loop
lods
adc
xor
sub
cmp
sbb
xchg
cwtl
test
ja
or
add
mov
mov
ret
mov
or
adc
ss
mov
push
cli
cmp
pop
out
add
mov
js
movsb
es
cmp
pop
popa
ss
jmp
das
iret
pop
dec
xlat
push
xlat
xchg
mov
and
lcall
pushf
adc
repnz
loopne
popa
jp
js
aad
std
shl
pop
push
out
pop
mov
add
sbb
lock
pop
in
sbb
outsl
sub
mov
loopne
or
mov
cmpsb
je
in
cmp
into
stos
cmp
inc
fcmovnbe
fwait
inc
insl
jecxz
repz
or
and
mov
mov
sbb
cli
outsl
rol
mov
push
and
imul
inc
lds
ret
jle
cmp
test
sub
jmp
pop
loopne
and
mov
icebp
movl
add
sub
add
lahf
mulb
cmp
mov
mov
jns
xor
cmpsl
and
jecxz
inc
shlb
adc
cmp
mov
sub
xchg
dec
jbe
cltd
mov
pop
testl
xor
add
xor
sbb
mov
fnstsw
mov
bound
dec
and
dec
push
adc
cltd
aam
gs
push
mov
out
pop
ds
cmpl
cld
out
mov
outsl
cmpl
roll
std
aad
xor
or
sbb
jnp
mov
push
cld
sbb
into
roll
sbb
xor
stc
pusha
sbb
pop
pop
roll
gs
lea
notb
mov
loop
xor
cmp
xchg
aaa
xchg
aad
fisubs
dec
fdivs
xchg
daa
dec
or
mov
stos
ret
inc
sahf
rorb
jle
jmp
pop
out
clc
je
add
mov
out
dec
ret
subb
add
sub
cmp
les
mov
mov
repnz
shlb
mov
ftst
and
or
jae
adc
nop
iret
inc
xchg
arpl
mov
cmp
fmul
pop
sub
insl
push
ret
jne
or
push
mov
pop
xlat
jnp
jp
xlat
jae
jg
mov
sti
mov
xor
test
or
xchg
popa
pop
ds
jb
or
lcall
push
in
sbb
std
mov
shlb
mov
xor
mov
sbb
and
push
and
mov
xchg
std
push
mov
and
jno
in
adc
fnstcw
mov
mov
ret
add
test
cli
out
aas
pop
pop
gs
or
jbe
add
insb
aaa
and
loopne
inc
xchg
stos
push
cld
fstpl
out
cld
sub
lcall
insl
hlt
inc
jp
fcoms
mov
cmp
cmp
and
push
cmp
push
jb
data16
adc
cmpsb
cmp
in
gs
inc
xor
sub
mov
push
out
cmpsl
and
add
or
sub
jb
stos
loopne
test
xchg
xchg
dec
sti
jo
fldenv
cli
mov
in
xchg
jae
push
sub
jp
aas
sti
and
cmp
stos
sbb
cltd
das
mov
inc
adc
cld
imul
mov
mov
jg
jmp
sbb
ret
jbe
call
pop
rolb
call
xor
mov
push
push
in
stos
das
fwait
sbb
pop
adc
cmp
shrb
je
ss
imul
aas
push
movsl
push
sbb
xchg
jmp
lods
sub
je
jo
mov
das
iret
mov
outsb
dec
movsl
test
push
imul
stc
into
sub
ss
pop
adc
pop
arpl
flds
or
mulb
mov
xchg
dec
inc
ja
inc
lock
pop
ret
cmpsb
mov
mov
fdivrs
jbe
hlt
jns
mov
lea
dec
mov
loop
push
nop
or
mov
addr16
inc
sbb
mov
pushf
cmc
sbb
imul
inc
sbb
je
cmp
sti
mov
ja
and
push
adc
fisttpll
into
mov
pop
or
mov
sub
sub
xor
iret
imul
mov
mov
leave
pushf
mov
mov
inc
push
jle
mov
pop
outsb
pop
fsubrs
faddl
cmpb
imul
push
mov
mov
rclb
test
xchg
adc
sti
jbe
sbb
ficompl
sub
mov
in
sbb
pop
sbb
movsl
call
cmp
xchg
push
lret
clc
jl
sub
dec
ss
lock
adc
sbb
into
sti
imul
pop
push
mov
pop
sbb
push
mov
loop
push
sahf
mov
shll
xchg
addr16
lret
testl
cwtl
inc
outsl
mov
negl
mov
sar
adc
arpl
fcompl
fcomip
sub
sbb
xchg
das
or
sbbb
aas
adc
data16
iret
sub
sub
imul
shll
loopne
adc
pusha
in
lods
fstl
xchg
and
test
adc
test
or
fildl
int3
xchg
orl
repnz
mov
sbb
xchg
dec
dec
sub
ror
nop
ret
dec
cmp
mov
mov
cmc
int
mov
fsubrs
push
ds
adc
inc
loope
bound
int
or
xor
jb
cmp
test
jl
pop
xchg
adc
daa
les
in
xor
xchg
pop
cli
out
cmp
fdivrp
sub
dec
xacquire
and
es
cli
aad
imul
or
fstpl
pop
sbb
scas
pusha
push
mov
sti
mov
imul
dec
in
pop
outsl
test
adc
pop
loope
pop
inc
sub
inc
call
jns
add
cltd
or
outsb
out
xchg
fstl
cli
test
add
mov
inc
adc
inc
pop
push
mov
mov
xchg
shl
adc
sub
fucomi
repnz
mov
loopne
mov
lds
mov
andb
xor
test
cmpsb
adc
mov
push
test
pop
cmpsb
test
rcrb
xor
xlat
repz
mov
mov
adc
test
aad
hlt
or
insl
iret
sub
lret
stc
outsb
hlt
scas
dec
pop
repz
jne
mov
insl
dec
mov
repnz
ja
mov
aas
mov
jno
call
mov
loop
mov
jp
in
or
sub
sub
imul
fsubrl
mov
shlb
lods
push
hlt
jb
clc
lahf
sub
inc
insb
add
inc
cld
aaa
pushf
lds
mov
ja
jge
cld
push
cmc
repz
jb
pushf
jge
bound
mov
cltd
adc
cmp
fsubrs
popa
jbe
pop
fistl
sbb
fucomi
mov
cmp
adc
push
adc
and
jb
mov
cli
pop
jbe
xchg
lock
cmp
popf
dec
jmp
mov
aam
popf
cmp
pop
repnz
imul
push
imul
dec
or
insl
testb
dec
loop
or
addr16
pop
dec
shr
sbb
lods
loopne
clc
jl
cwtl
lock
cwtl
mov
inc
mov
pop
sub
and
cmp
repnz
push
xor
aaa
xor
or
cmp
or
lahf
jge
fucom
ret
lret
jecxz
mov
sahf
xor
in
jg
jge
xor
fistpl
dec
jl
mov
movsb
sbb
jae
mov
pushf
fistpll
std
push
jmp
insb
int
dec
jle
outsl
pop
leave
cmc
imul
cli
dec
mov
testl
scas
jl
mov
push
fisttpl
jb
ds
pop
insl
xchg
jnp
cmp
adc
out
mov
sbb
decb
mov
roll
mov
pop
push
and
mov
daa
mov
cmp
push
and
mov
movsl
das
in
push
in
jne
lahf
in
sbb
dec
sbb
xchg
jnp
pop
daa
cmpsl
je
and
mov
or
inc
add
enter
addl
notl
sub
loop
clc
out
xor
in
sbb
cwtl
out
pop
jp
cmp
mov
mov
xor
clc
mov
or
ss
or
mov
xor
ret
adc
cmp
rolb
cmp
lock
in
add
fwait
fwait
inc
cmpsl
adc
mov
adc
pop
xchg
loop
das
add
femms
sbb
push
mov
mov
shr
mov
jg
and
ds
and
pop
scas
push
or
int
mov
push
push
cmp
xorb
xchg
jmp
push
and
vaddps
jno
fstl
xchg
addr16
mov
insb
mov
adc
sub
xchg
out
sbb
hlt
cwtl
icebp
mov
paddd
push
stc
or
cmp
dec
or
pop
xchg
push
mov
or
pop
sbb
stc
leave
ja
dec
xchg
adc
cli
push
incb
sahf
shrb
cmovo
mov
push
loopne
dec
push
push
loop
aaa
repz
rcrl
adc
mov
push
mov
inc
mov
xor
js
shrl
cmpsl
leave
mov
sub
xchg
and
insb
outsb
scas
push
addl
sbb
sub
push
xchg
rcrb
lock
cmp
lods
in
jg
cmp
xor
pop
pop
xorb
mov
in
cmpsb
cmp
dec
xchg
mov
addr16
fbstp
xchg
insb
jle
ja
push
std
mov
dec
les
push
pop
sarl
jge
mov
push
xchg
movsb
xor
mov
cmc
pop
addr16
mov
pop
xchg
sbb
loopne
js
rolb
jne
sbbl
cmp
push
push
and
xchg
aas
xor
mov
rorl
inc
arpl
or
lods
pusha
mov
jl
cwtl
cmp
lods
clc
lahf
and
xchg
sti
and
out
mov
addb
xor
jne
jnp,pn
sbb
push
call
popa
addb
in
push
cwtl
jne
aas
xor
inc
and
dec
mov
das
pop
loop
xchg
mov
push
int3
lcall
inc
out
push
insb
cli
jbe
xchg
outsl
add
adc
inc
aaa
fwait
sub
stc
xor
cwtl
dec
sub
cwtl
or
xchg
lea
pop
dec
lret
inc
jo
mov
cvtps2pd
ljmp
das
mov
dec
into
loopne
xchg
push
jns
adc
push
inc
and
jno
and
push
jp
lret
add
sub
popf
jecxz
pop
sbb
test
and
pushf
cmp
sbb
or
mov
fisubl
aas
jns
push
in
xchg
int
out
jge
mov
idiv
mov
jge
dec
or
sub
add
xlat
mulb
xor
push
cmp
out
sub
jo
loope
pop
into
repz
pop
add
ret
jecxz
cwtl
cmp
clc
dec
add
push
gs
dec
lods
push
inc
or
mov
jo
xor
or
iret
call
movsb
push
into
push
sahf
xchg
add
xchg
or
push
sub
ja
jle
sub
mov
mov
xlat
inc
cmc
or
fists
push
movl
out
and
fisttps
push
jns
fs
push
sub
dec
mov
sbb
test
add
push
lods
push
mov
mov
incb
inc
fildll
addr16
mov
sbb
pop
jne
bound
and
jl
pop
push
es
lds
cli
push
jb
mov
hlt
or
adc
adc
add
call
in
cmp
loope
jne
inc
mov
xchg
inc
and
cwtl
faddp
cmp
mov
and
lock
dec
icebp
cmp
pop
loop
adc
mov
movsb
ficompl
fnstsw
cmpsb
pop
push
inc
fldenv
inc
jb
xchg
and
jecxz
push
pop
popf
inc
ljmp
mov
scas
pop
mov
fldenv
pop
out
jle
icebp
int
daa
outsl
lcall
ret
mov
subb
jmp
outsb
repnz
mov
cmp
sbb
test
jg
sar
adc
and
mov
inc
daa
and
lret
or
roll
test
sti
cwtl
repz
cmp
insb
inc
jp
loop
pop
and
push
in
add
and
dec
xchg
or
lods
xchg
sti
enter
dec
push
ficoms
rcrb
inc
xor
push
jl
cld
add
dec
mov
mov
mov
mov
jnp
testl
jge
ljmp
sbb
adc
out
loopne
and
jp
push
scas
jmp
add
pop
hlt
mov
xlat
fldl
dec
cmp
xchg
xchg
lock
clc
outsl
mov
or
xchg
push
mov
xor
xchg
rcll
and
loop
arpl
jg
ljmp
aas
rorl
pushf
sub
sub
pop
rorl
sub
inc
fwait
and
cmp
xchg
inc
insl
cmp
lods
xor
nop
fisubs
ss
push
mulb
jg
clc
pop
lock
jge
icebp
movsb
loopne
fisubl
mov
add
lods
out
bnd
xchg
loop
xlat
xor
out
cmp
pop
sbb
arpl
jne
lcall
shl
andl
je
insb
filds
jl
sbb
pop
xchg
int3
ret
dec
test
sbb
mov
test
daa
icebp
or
imul
stc
lret
mov
test
dec
out
ret
mov
insb
test
sub
imul
add
lea
inc
cmp
lods
sub
or
leave
int3
imul
adc
fwait
in
cmp
aad
sahf
addr16
int
rorb
repnz
gs
push
das
xor
testb
fdivl
mov
jae
cmp
out
xchg
test
cmp
bound
lods
data16
lds
dec
neg
fdivrl
xchg
insb
out
or
add
jae
and
gs
fisubrs
out
aam
imul
xchg
xchg
ds
cli
dec
roll
mov
push
std
cmpsb
xor
jo
sub
notb
cli
and
inc
stc
dec
add
and
dec
sbb
dec
out
sbbb
jb
xchg
aas
cmp
aad
out
jg
pop
andb
test
mov
jp
push
jne
jae
call
push
mov
push
in
xchg
inc
inc
aam
pop
add
pop
push
stos
push
adc
lds
jl
cmp
cmc
mov
adc
add
ds
pop
outsb
xchg
rep
cmpsl
mov
pop
out
add
or
cltd
int
jl
fxch
adc
sub
mov
sbbl
xchg
dec
xchg
cmp
push
sbbl
loope
xor
inc
push
aaa
mov
pop
into
xchg
pop
stos
lock
imul
test
pop
enter
out
andb
sbb
gs
xor
sbb
ja
xchg
inc
and
into
push
ja
and
arpl
xor
adcl
loopne
push
mov
in
pop
imul
int3
xchg
cltd
sub
xchg
stos
mov
fdivp
mov
stos
jl
add
rclb
cmp
dec
mov
ss
fidivl
inc
fldt
and
das
add
stc
cmp
popf
cmc
jnp
mov
retw
push
loope
add
aas
xlat
mov
inc
fst
pop
cmpsb
subl
test
push
fmull
pop
loope
shll
mov
push
jno
jbe
pop
push
mov
clc
sbb
lret
lea
mov
mov
add
mov
ss
jne
aaa
mov
jns
fmull
aas
push
adcl
sub
mov
mov
adc
adc
daa
mov
sub
nop
loop
int3
popl
push
push
cmp
rcrl
push
sub
jae
fdivl
mov
scas
lahf
jns
das
cmc
dec
fsubrl
sbb
mov
cli
push
fadd
insb
test
ret
inc
jns
adc
xchg
xchg
jge
dec
mov
dec
jmp
jns
les
fdivrl
inc
mov
mov
inc
xchg
add
sti
inc
jle
push
test
jbe
popa
fucomip
jge
imul
xchg
pushf
lods
mov
xor
push
cmp
test
cli
das
movsl
outsl
sbb
mov
lds
jg
daa
and
popa
call
leave
decb
jmp
imul
or
call
es
sub
clc
std
sbb
sbb
in
cmp
enter
stc
push
push
mov
adc
dec
mov
fisttps
mov
xchg
cmc
mov
dec
fsubp
cld
push
mov
mov
cli
loopne
add
outsb
clc
xor
cmp
loope
repnz
xorl
push
lds
ret
cmpl
test
sub
in
jae
adc
call
into
outsb
outsl
lahf
and
pop
ljmp
fs
sub
testb
scas
or
jmp
jle
int
cmpsb
sbb
rep
out
mov
push
bound
fs
and
addr16
pop
mov
int
jns
shll
dec
stc
rorb
pop
sub
adc
cmp
ljmp
adc
push
jle
rclb
adc
dec
or
mov
ffreep
cmpsl
rclb
mov
sahf
sbb
test
cmp
int3
adc
pop
cmpl
or
neg
pop
ja
lds
push
xchg
aam
mov
out
mov
andl
dec
loopne
push
pop
test
mov
cltd
fdivrs
out
lahf
mov
xchg
mov
jns
sbb
ja
dec
js
sar
addr16
push
mov
ret
mov
jo
sub
sbb
clc
pop
xchg
sub
push
sbb
adc
dec
scas
rorb
fimuls
scas
adc
insb
in
mov
inc
mov
or
lods
xchg
movsl
sub
jmp
cwtl
cwtl
in
pop
add
popf
sbb
out
lods
dec
cmp
popa
out
push
subl
data16
lahf
and
jle
push
inc
pminsw
pusha
out
fs
dec
cmp
repz
xchg
decl
in
add
test
mov
xchg
jl
fistpl
xor
test
xchg
push
in
pop
subb
xor
inc
mov
adc
fsubrl
ljmp
or
mov
in
push
push
clc
sub
cltd
dec
scas
add
loop
add
xor
sbb
pop
inc
scas
test
jecxz
out
bound
jns
xchg
mov
sub
cmc
pop
sub
xor
xchg
push
mov
adc
jecxz
out
insl
and
and
movb
cmpsl
and
push
inc
enter
add
or
sbb
jmp
push
cmp
or
and
movsl
testl
adc
pop
push
es
inc
inc
ret
ljmp
jge
dec
leave
lods
cmc
cmc
rolb
mov
dec
push
inc
fsubl
pop
mov
xor
mov
jb
imul
push
sti
ds
inc
sbbb
fsubrs
cmp
mov
cmc
fdivr
rol
ss
sub
sbb
and
mov
lret
push
pop
es
add
sbb
mov
clc
xchg
in
stos
int3
mov
sbb
mov
in
cmp
shlb
xchg
inc
and
adc
inc
dec
sarb
mov
mov
ljmp
push
sbb
lds
fdivrl
push
es
out
outsb
mov
cmp
sahf
mov
stc
stc
ja
in
loop
jne
jbe
and
jbe
push
mov
roll
jo
js
push
stos
xlat
xchg
out
adc
cmp
in
adc
iret
adc
push
pop
mov
ljmp
call
orb
inc
mov
ret
inc
dec
bound
cmp
lock
shrb
jmp
fmul
cmp
mov
jge
lahf
lea
jbe
leave
pop
scas
jo
dec
adc
in
push
sbb
orb
adc
dec
nop
cmp
lcall
cmpl
ds
sub
ret
lret
dec
mov
mov
lahf
adc
jmp
push
movsb
inc
fimuls
in
xor
shlb
sbb
and
sbb
or
pop
out
in
fdivr
movq
cmp
push
out
outsb
pop
xchg
cwtl
rol
nop
mov
mov
sahf
mov
xor
push
sbb
mov
fcompl
movsb
repnz
fsubl
push
push
mov
and
in
xchg
ret
pop
inc
fimull
cltd
inc
fcoml
pop
adc
lds
cld
gs
nop
mov
push
xchg
dec
icebp
lcall
mov
jnp
shr
ljmp
jno
sbb
and
jbe
inc
fwait
in
test
dec
or
push
icebp
jmp
js
sub
fistpll
jo
lahf
jge
ss
out
imul
and
xchg
xchg
dec
lock
or
dec
roll
out
xchg
xor
leave
cmpsl
scas
movsl
int3
mov
mov
sub
or
fdivs
push
loop
shrl
cmc
push
jbe
jbe
sub
test
jno
cmc
sbb
dec
out
cmp
in
pop
ds
sub
mov
jns
das
adc
outsb
sbb
lds
pop
sub
gs
mov
cmp
mov
pop
push
xorb
xor
aaa
cmpb
mov
out
xchg
pop
xchg
sbb
push
repnz
aas
adc
mov
mov
iret
dec
mov
repz
jmp
fcomps
aad
cwtl
xchg
pop
push
repz
fisubs
mov
cmpsb
insl
push
jb
jg
push
jo
aam
mov
fcompl
sub
shlb
push
sub
js
push
pop
push
dec
sahf
pop
inc
xor
pop
mov
xchg
rclb
mov
add
in
or
add
cmp
stos
sub
orb
movsl
mov
push
ret
mov
ja
icebp
mov
shll
cs
mov
sbbb
push
scas
sti
dec
sub
xorb
jno
pop
sub
jne
in
dec
outsb
in
bound
sub
mov
jle
xchg
loop
testb
mov
int
aas
jg
in
mov
in
cmpsb
mov
lea
pushf
insl
shll
ret
fistl
xor
lcall
sahf
push
xchg
adc
les
adc
mov
fisubrl
adc
dec
iret
inc
ficoms
aas
int3
int
arpl
jp
pop
mov
ljmp
or
outsl
and
cmp
imul
xor
pmaddwd
sbb
cmp
pop
fwait
mov
fwait
fs
mov
and
fmull
xchg
cmpsl
mov
lock
jle
cltd
in
les
arpl
mov
mov
xchg
popf
and
test
inc
mov
adc
ret
movl
xorb
and
std
jmp
or
sub
ficomps
mov
fsubs
xchg
jnp
jo
sbb
pop
mov
decb
repnz
sub
fisttpl
arpl
push
push
and
lret
lds
insb
test
mulb
scas
aad
mul
push
dec
pushf
subl
push
shlb
repz
sub
and
mov
jecxz
pop
insb
mov
mov
bound
mov
pop
cmp
fs
mov
mov
and
loop
aam
into
cmp
scas
clc
inc
cld
testl
filds
int3
jbe
mov
xchg
xchg
pop
lds
repnz
pop
fisubl
stos
cltd
aad
jge
mov
sti
sti
sub
mov
sub
xchg
sub
inc
dec
cmp
in
mov
push
mov
scas
movsl
in
mov
and
jecxz
cmp
leave
stc
pop
sub
insl
sarl
add
cmp
push
jg
xchg
pop
inc
jne
incb
adc
mov
mov
mov
test
xlat
leave
inc
rcrl
cmp
cmp
popa
cmpsl
and
int
sub
add
adc
adc
movsb
cmp
or
push
daa
pop
xlat
jb
or
push
rcrl
sbb
jp
fcoms
mov
xchg
in
dec
cmp
mov
jae
xchg
inc
shll
imul
dec
pop
sub
adc
adcb
clc
mov
or
jge
lds
pop
icebp
pop
mov
push
popf
jbe
jmp
stos
dec
cltd
push
xor
insw
or
and
shrl
cs
jbe
cmpl
data16
and
dec
pop
lock
xlat
push
test
insl
sbb
call
mov
add
mov
js
mov
mov
mov
imul
movsl
lds
sarb
dec
mov
jle
pop
sub
sub
leave
ss
cmp
push
fnstenv
xor
psllq
xchg
fistpll
inc
sub
mov
xor
cli
cs
lret
cmp
cli
inc
sbb
aas
outsb
jbe
pop
xor
mov
or
jge
movsb
jae
lahf
stos
jmp
pop
add
sbb
lcall
es
aad
add
pop
push
outsb
das
dec
or
out
aas
cmp
inc
repnz
outsb
movsb
in
scas
outsb
nop
lret
dec
sbb
jmp
add
ret
test
rcll
sahf
ja
loop
stos
ficoms
mov
lea
jg
adc
cltd
test
mov
fcomps
mov
hlt
mov
mov
fstps
pop
mov
add
std
das
dec
xor
mov
fistpl
popf
insb
mov
fimull
cmovb
ss
rolb
dec
xchg
cmp
xor
cmpsb
outsl
cmc
cltd
xchg
test
insl
imul
int
push
jnp
jno
hlt
inc
jne
fisttpl
jae
add
imul
das
add
lea
xlat
or
stc
adc
mov
vcmpps
aaa
jl
cwtl
jecxz
sbb
jp
add
pop
add
dec
test
mov
dec
sub
out
or
inc
add
sbb
data16
push
inc
and
pop
stc
in
xchg
xchg
dec
mov
adc
std
jne
cmpsl
xor
mov
cld
mov
mov
int3
divl
pop
push
jge
mov
cmpsl
dec
imulb
out
in
test
lret
add
push
js
fisubs
and
cmp
inc
orb
popf
sub
rolb
loopne
pop
mov
cmp
pop
decb
shlb
mov
inc
mov
mov
add
cmp
aam
out
movb
lds
jl
insl
leave
divb
xchg
mov
arpl
fsubrs
out
push
mov
sbb
mov
enter
sub
mov
fsubrs
mov
mov
push
jnp
dec
push
xchg
push
stos
jp
fsubl
mov
push
or
icebp
pop
adc
and
or
lea
push
add
pusha
daa
data16
loope
pop
mov
xor
sahf
cld
jg
dec
dec
xchg
hlt
addr16
or
lahf
iret
mov
cltd
pop
ficoms
pop
adcl
aaa
and
xchg
mov
push
mov
mov
shll
in
cs
push
or
rcll
sub
repnz
sub
ret
addr16
sub
xchg
or
push
or
xchg
fnstcw
loope
notb
push
arpl
fwait
mov
out
pop
test
jle
loop
mov
out
les
push
jae
add
cs
and
cltd
pop
and
lret
adc
ds
rolb
or
jns
insb
cld
xor
jmp
xchg
dec
xchg
sub
fidivrs
pop
out
lret
call
mov
loopne
push
stc
popa
cli
stos
dec
jl
outsb
fcoms
lea
int
add
add
push
loop,pt
inc
mov
imul
inc
xchg
xchg
test
cmpsb
sbbl
int
inc
movsb
xchg
mov
sub
mov
xor
stos
mov
pop
adc
or
mov
cmp
dec
lods
je
mov
movsl
cmp
mov
insb
dec
arpl
dec
js
js
jecxz
jecxz
outsl
insl
bound
push
ljmp
xchg
outsl
dec
add
jl
movsb
mov
sbb
mov
daa
pop
push
xor
adc
mull
jecxz
cmpsl
call
cmp
imul
fldenv
add
roll
xlat
outsl
sub
testl
mov
xchg
adc
jecxz
into
push
ds
and
popf
jl
testl
cld
enter
jmp
cld
pop
cmp
mov
mov
mov
imul
pop
gs
outsl
mov
mov
fnstsw
mov
cs
sti
adc
sub
cmc
rorl
outsl
scas
cmp
jae
test
shufps
in
mov
xor
xor
outsb
xor
andb
jecxz
rcrl
cmp
out
xor
lahf
jle
xchg
cmp
sbbl
and
notl
daa
push
stc
jb
sarl
test
or
hlt
and
mov
jmp
adcb
mov
mov
xchg
sahf
aam
out
mov
dec
loop
shlb
and
rcll
loopne
repnz
and
in
mov
add
sbb
rcrl
pusha
adc
push
movaps
ds
pop
mov
lea
lea
out
adc
or
sub
imul
or
jbe
add
fidivl
jbe
push
movsl
sub
out
out
push
jge
xor
add
mov
ror
xor
ja
cmpl
cmp
imul
or
out
jne
pop
fisubs
pop
dec
outsb
add
jns
cli
sti
std
out
ds
push
push
xchg
in
pop
mov
jno
add
mov
jp
push
cmpsl
dec
cld
insl
ja
andl
shrl
cmpsl
enter
xlat
or
jecxz
mov
data16
dec
mov
popa
pop
xchg
xor
subb
fs
in
cmp
cmc
cmp
aad
insb
and
outsl
je
push
inc
cltd
adc
xor
mov
mov
stos
sub
test
cld
out
mov
jl
mov
sahf
xchg
addb
call
adc
cwtl
mov
fistpll
xchg
lods
dec
out
jbe
lock
mov
les
and
mov
fldenv
rcrl
jnp
pushf
fwait
mov
sti
cmpl
in
imul
jl
dec
mov
cmp
inc
cmc
pop
repz
mov
movsl
iret
or
mov
in
lret
add
sub
jne
sbb
arpl
jbe
leave
inc
add
int
xchg
in
adc
shlb
sarb
push
push
mov
js
xchg
daa
xor
mov
mov
or
cmp
mov
adc
or
into
loope
pop
jmp
insl
int3
sbb
inc
es
dec
and
gs
push
mov
addr16
push
inc
and
dec
xlat
jns
scas
fs
rolb
cwtl
pushw
jb
cmc
cmp
mov
neg
gs
mov
cmc
mov
sub
xchg
loopne
in
cmp
imul
pop
and
repnz
cli
test
jle
jmp
push
cmp
imul
pushf
lcall
and
lret
xchg
dec
out
jecxz
and
cli
jno
cli
sub
sbb
rol
sbb
mov
mov
dec
leave
test
ss
out
adc
or
dec
sahf
xchg
xor
fs
sbb
das
or
jmp
cmp
mov
aad
push
push
mov
and
sbb
mov
cltd
aam
xor
in
sahf
mov
test
jo
loopne
into
dec
ret
adc
imul
fcmove
pop
jl
in
xchg
jae
ret
roll
fistpl
mov
jno
push
add
or
mov
add
js
jmp
lret
stos
repnz
fldcw
sub
xchg
sarl
xchg
dec
add
cmp
cltd
adc
push
leave
movsb
lods
inc
hlt
mov
mov
mov
movsb
dec
dec
stos
mov
dec
test
dec
and
loop
and
into
or
call
inc
and
push
jae
add
mov
sbb
sti
lods
sahf
mov
rorl
addr16
or
mov
movsl
and
inc
adc
testb
shlb
es
cld
adcb
cmpsb
xchg
cmpsb
movsl
sub
xlat
loop
negb
outsl
shl
popa
and
fs
nop
mov
sbb
push
in
std
dec
inc
jle
sar
nop
or
adc
mov
into
jecxz
cmpsb
and
xchg
jmp
lcall
xor
fimuls
dec
cmp
pop
dec
iret
cmp
fldcw
jg
rorl
sbb
mov
insl
lcall
or
or
or
and
dec
dec
pop
pop
scas
inc
repnz
jl
dec
cs
sbb
ret
fmulp
lret
aas
aaa
pop
mov
cmp
fildl
addr16
nop
in
mov
sub
add
ss
xchg
inc
icebp
int3
outsl
add
adc
sub
aaa
lea
inc
pushf
insl
pop
das
gs
shll
adc
pop
xchg
mov
and
cmp
int
jbe
lods
in
daa
and
push
cmpsb
outsl
dec
dec
daa
jb
add
push
mov
movsl
sbb
push
fldenv
movsl
movsl
jle
or
push
mov
push
cmpsl
jae
cmp
nop
dec
int
cmp
nop
clc
push
shl
jl
imul
call
lahf
arpl
xlat
sbb
mov
mov
add
push
xor
mov
mov
mov
pop
test
adcb
adc
cmp
mov
in
rclb
les
popf
adc
aad
lcall
sub
sbbb
inc
sbb
push
dec
repnz
add
and
sbb
fwait
ss
call
ds
fnstenv
dec
roll
inc
xchg
sbb
dec
cmp
or
adc
mov
or
ret
cmpsb
sub
mov
jae
andb
mov
pop
jbe
pop
mov
cwtl
je
imulb
pushf
adc
sbb
stc
xchg
lea
xchg
pop
push
push
lock
loope
scas
out
aad
xor
xor
pop
bound
clc
xchg
push
jl
mov
sub
cmp
mov
inc
cwtl
pop
sarl
dec
adc
js
out
out
dec
xchg
dec
add
add
int
and
jns
lahf
insl
data16
sub
mov
imul
cs
in
push
jp
fcompl
jb
sbb
xlat
ja
mov
loop
mov
pop
lcall
mov
loopne
and
cs
fidivs
in
sub
jo
mov
nop
cmp
fwait
mov
adcb
mov
idiv
inc
push
mov
js
into
stos
and
mov
std
mov
lock
push
dec
jge
jg
ret
pop
in
push
orl
add
inc
pop
xchg
leave
daa
xchg
xor
or
test
aaa
and
inc
and
imul
mov
mov
pop
imul
std
out
loop
std
pop
push
repz
mov
cmpsb
ljmp
push
ficomps
add
xchg
loop
add
lods
inc
repz
jmp
mov
jge
jl
aaa
mov
dec
cmovl
inc
dec
es
outsl
or
pop
and
inc
ja
jbe
insb
cli
cmpsb
repz
cmpsb
into
dec
and
pop
shll
scas
jb
movl
mov
lret
popa
ret
lods
sbb
inc
ljmp
push
loope
in
mov
cmpsb
out
xchg
or
inc
insb
and
les
mov
push
pop
ret
ret
sbb
daa
adc
jp
je
jno
cmp
adc
mov
push
push
cmp
or
mov
inc
cmc
out
and
adc
xchg
push
in
xor
fs
arpl
test
push
dec
les
xor
idivb
xchg
enter
icebp
dec
bound
data16
testl
sub
imul
leave
fstpt
fimuls
add
orb
out
out
sbb
mov
sub
xor
mov
cs
mov
in
jae
inc
and
jne
in
mov
inc
sarb
mov
sbb
lret
in
insb
pop
sub
lea
cmp
lods
lea
in
jbe
xchg
lcall
xor
inc
sahf
out
fnsave
fdivrp
xorb
lds
adc
mov
repnz
jg
ds
xchg
mov
jb
inc
in
jne
mov
into
and
pop
and
imul
in
add
shlb
jb
fs
pop
scas
sbb
pop
push
xor
adc
pop
xlat
mov
in
fstl
pushf
sub
jbe
out
sub
ja
scas
mov
add
and
pusha
dec
pushf
or
out
jp
cwtl
push
loop
call
stc
scas
sti
ds
add
jecxz
fistps
or
sbb
inc
mov
stc
or
les
sahf
loopne
adc
idivb
pop
imull
push
je
mov
ret
imul
lods
jp
cmpsl
iret
imul
aas
or
inc
aam
test
pushf
ja
pop
stos
or
dec
and
cltd
mov
mov
mov
pop
inc
loop
leave
sub
cs
dec
and
enter
xor
sub
loope
add
ljmp
fwait
int3
clc
adc
pop
xchg
lods
pop
adc
ret
and
ret
xchg
sub
pop
pop
fstps
fsubrp
out
xor
hlt
testl
push
pop
jno
jp
or
testl
xor
in
inc
es
int
ret
rcr
jge
dec
outsl
lahf
add
sbb
notb
push
xchg
add
call
add
push
sub
mov
and
mov
sbb
dec
add
clc
jmp
inc
cmc
add
ret
sti
scas
or
decb
dec
inc
xchg
movsl
mov
rolb
xchg
test
out
cmc
xorb
dec
movsl
xchg
inc
adc
je
push
dec
leave
shll
mov
pop
out
ss
cs
leave
sbb
jmp
mov
cli
xor
sbb
test
xchg
and
pop
insl
fiaddl
sti
movb
pop
sub
jecxz
xchg
das
stos
lock
sub
and
push
das
inc
sbbl
mov
lret
jmp
lret
in
xchg
cltd
test
jge
xchg
lods
pop
addl
mov
gs
add
imul
aas
scas
out
data16
aas
sub
xor
into
inc
aaa
in
imul
sub
fwait
scas
hlt
movsb
inc
dec
jl
sub
or
jl
sbbb
inc
pop
je
dec
mov
jb
jno
cmpsl
loop
bound
dec
push
aad
inc
shl
icebp
std
lcall
xor
xchg
or
adc
mov
pop
pop
mov
call
loop
dec
into
test
mov
xor
inc
mov
jno
cmp
pop
adcl
push
shll
in
push
sbb
or
jge
inc
xchg
mull
jp
mov
test
test
orl
lret
and
or
cmp
mov
cmp
lahf
pop
enter
aad
ret
jno
push
xchg
add
out
leave
in
roll
and
inc
int
pusha
and
pop
inc
cs
int
movsl
daa
lahf
jp
add
jae
sbb
sti
sahf
or
xor
out
xchg
dec
mov
pop
stos
arpl
ficoms
sbb
inc
cld
hlt
cmp
jno
loop
ret
cmp
bound
add
sub
mov
loopne
les
mov
rorl
or
mov
push
repnz
jp
ficoms
pop
out
mov
sbb
mov
faddl
lock
cmp
or
xlat
push
cmp
mov
mov
pop
push
popf
pop
lock
push
pop
xchg
adc
xorl
pop
cwtl
mov
sub
movsb
movsb
movsb
pop
or
fstl
sub
cmp
jp
jae
pop
add
lret
mov
fstpt
iret
push
sbb
adc
jno
cwtl
push
sub
aaa
aas
push
testl
cmp
icebp
fwait
pop
or
cmp
mov
jae
push
jecxz
shll
repnz
sbb
or
adc
add
stos
popa
stos
in
ds
rcl
in
xlat
in
mov
pop
dec
ret
fwait
and
push
adc
push
bound
jmp
fistpl
pop
inc
scas
pop
pop
fldenv
inc
xchg
push
sub
mov
sbb
sub
mov
movsb
stc
fcom
cmpsl
icebp
cmc
pop
in
jmp
jnp
out
sbb
mov
adc
or
jg
pop
jl
jge
push
cmp
daa
call
xchg
inc
lods
testb
pop
jns
idivb
shr
ss
mov
sbb
gs
sbb
test
add
pop
mov
pop
ja
int3
mov
sbb
daa
pushf
mov
shl
sub
xor
sbb
and
loopne
es
andl
or
test
mov
mov
cmp
inc
jg
in
popf
cwtl
cli
xchg
mov
gs
push
test
ror
fadd
mov
mov
scas
pop
sub
mov
adc
data16
sub
shlb
pop
mov
push
add
aaa
out
cmpl
pop
int
jle
cmpsl
repz
aam
adc
jbe
jnp
js
iret
add
out
push
mov
les
shlb
and
ret
xchg
sub
and
add
push
xchg
out
adc
js
out
popf
jmp
jns
sbb
xor
mov
pop
cmpsl
into
std
andb
loope
adc
fsubr
stc
rclb
mov
push
stos
xchg
enter
push
ds
cmp
push
mov
sbb
dec
cs
das
jmp
xchg
dec
xor
dec
filds
int3
xchg
push
and
repnz
icebp
sbb
mov
xlat
dec
rol
xlat
addb
xor
xchg
pop
or
lret
andl
insb
cs
adc
pusha
sbb
les
pop
test
mov
push
cmp
dec
loop
pop
insb
sbb
pop
mov
ljmp
imul
dec
mov
jne
dec
les
push
cmpsb
xchg
pop
inc
mov
mov
push
or
sarb
arpl
inc
and
ds
cmp
and
inc
int
mov
inc
dec
lds
shlb
imul
popa
insl
push
and
dec
cmovl
mov
adc
bound
fnstenv
lock
in
push
jns
sbb
push
adc
lret
sub
in
notb
fistl
adc
jmp
call
jb
sub
lock
and
out
mov
inc
cltd
jnp
out
and
xor
lret
or
fmul
pusha
adc
pop
fidivrl
rcll
add
xchg
xor
xor
int3
stos
xchg
inc
es
jmp
push
xor
jbe
adc
cmpb
outsl
cs
shl
and
mov
adc
in
push
sbb
es
bound
sub
xchg
flds
sub
clc
sbb
daa
mov
leave
mov
mov
mov
sbb
jae
and
nop
mov
lret
push
fstpt
push
lret
dec
pop
cwtl
jp
jo
test
les
into
jmp
push
adc
stc
or
cmp
insl
mov
dec
and
adc
lcall
rcrl
ficompl
jae
sti
fsubrl
mov
adc
and
push
push
xor
rorl
lods
loope
ja
ss
xor
addr16
leave
and
xchg
rol
rorl
lahf
cwtl
mov
sbb
lret
cmpsb
adc
scas
inc
movsb
mov
jp
adc
lock
imul
mov
arpl
sub
jecxz
jbe
push
or
into
insb
push
sub
cmpl
pop
and
cmc
cmp
pop
subl
icebp
scas
dec
jecxz
mov
push
push
pop
lock
cmp
inc
imul
cltd
dec
mov
and
bound
sub
mov
ficoml
inc
mov
xchg
es
sbb
mov
adc
pop
mov
lods
stos
out
xchg
in
and
mov
das
nop
push
pop
adc
ret
pop
enter
inc
popa
mov
xchg
dec
decb
push
mov
int3
mov
cmp
and
pop
jge
xchg
mov
shl
xchg
mov
mov
pusha
push
addr16
or
jbe
inc
nop
bound
dec
cwtl
add
adc
push
movsb
out
jle
negb
xor
leave
mov
sahf
mov
lcall
xchg
das
fisubrs
mov
rorl
mov
mov
mov
push
mov
lcall
and
orl
and
mov
xorl
orl
leave
mov
sub
daa
test
inc
cmpsb
or
jns
movsb
in
or
fisttpll
lods
hlt
cmp
and
scas
pop
or
jg
cmpsl
popf
sbb
sbb
xor
adc
sub
ljmp
aad
fsub
pusha
movsl
mov
inc
and
sbb
scas
jns
mov
and
leave
lods
dec
sub
push
loope
mov
icebp
daa
sbb
jl
in
sub
or
push
xchg
jnp
sub
lock
cld
scas
dec
pop
xchg
pop
sti
scas
pop
cli
mov
test
lahf
xchg
js
push
fildll
mov
dec
sbb
mov
jmp
push
dec
pop
xchg
pop
jge
and
add
xor
mov
mov
das
loop
pop
test
adc
add
or
nop
jle
push
outsb
pop
jle
mov
pop
hlt
lret
ficoml
and
push
push
leave
repz
out
enter
aaa
idivl
cmp
jns
arpl
cmp
sbb
adc
cs
test
add
and
test
data16
or
adc
mov
jnp
push
dec
jle
lcall
mov
or
dec
xlat
aas
pop
das
cs
cli
push
jo
push
sbb
int3
sti
mov
xor
std
lods
inc
cltd
jo
xchg
in
dec
jmp
imul
mov
pop
cld
call
enter
scas
cwtl
pop
int
xlat
mov
aas
or
cli
adc
cld
stc
mov
xor
iret
push
jns
inc
cwtl
ss
adc
adc
xlat
sbb
mov
ljmp
sbb
subb
outsb
jo
loope
adc
sbb
push
dec
push
mov
lahf
imul
test
xchg
rcrb
out
mov
sub
cmpsb
repnz
add
and
and
mov
dec
cld
std
xorl
test
arpl
sub
icebp
push
movsl
ds
inc
ret
pop
inc
and
jb
mov
mov
ret
or
sub
mov
push
rclb
stc
ljmp
and
ss
and
mov
ficoml
sti
lahf
push
cltd
pop
les
mov
enter
repnz
xchg
pop
in
ret
aaa
mov
std
dec
jl
mul
fimull
mov
cmc
inc
scas
jmp
cwtl
lods
xchg
pop
xchg
dec
push
sub
out
cmpsb
mov
lock
out
ss
mov
xchg
lods
push
mov
nop
int
sarl
rorl
popa
or
mov
jg
icebp
ljmp
in
jl
test
adc
int
adc
insl
mov
jle
add
int
fisubs
shll
jle
cmp
pop
jecxz
dec
adc
imul
shrb
fidivrl
sbb
lods
adc
je
xor
mov
movsl
int3
fisubrl
dec
jmp
push
mov
subb
jbe
aad
cmpsb
mov
xor
lock
adc
adc
pop
push
adc
mov
imul
mov
xchg
push
lret
js
or
arpl
and
adc
jmp
jnp
pop
and
fldpi
xor
shrl
xchg
addl
inc
jns
nop
adc
xchg
mov
push
bound
gs
xor
pop
pop
arpl
shrb
gs
enter
fwait
lock
cmp
inc
cwtl
mov
and
adc
sbbb
outsl
in
dec
adc
inc
loop
jmp
xor
push
dec
xchg
call
and
rcrb
push
add
sahf
cmp
inc
aad
testb
in
pop
add
dec
in
sub
scas
jno
jns
ds
dec
imul
and
test
mov
andb
xor
mov
mov
pop
sub
mov
out
stos
mov
xor
icebp
cmp
dec
jo
mov
lods
fsubrl
mov
cmp
in
outsl
push
jns
sbb
inc
ss
mov
jb
test
ss
push
and
push
sub
and
adc
cs
mov
push
int
lcall
lret
out
popa
ret
adc
mov
cmpsb
pop
inc
imul
inc
fiadds
fs
and
ja
and
cmc
push
mov
sub
call
pop
iret
repnz
xchg
test
inc
movsb
ja
int3
mov
out
cmp
push
notl
movsl
xchg
aaa
pusha
les
stos
and
and
std
mov
loop
adc
mov
mov
lock
xor
xor
loop
jl
sbb
in
push
mov
mov
fistl
mov
nop
xchg
inc
fnstenv
nop
daa
lahf
sbb
gs
in
xor
dec
rolb
es
jno
inc
mov
xchg
popa
mov
mov
jecxz
push
cli
fdivl
stc
mov
add
inc
jmp
pop
mul
leave
push
sarl
xor
jae
leave
push
sbb
les
sub
inc
sbb
jns
xor
inc
stos
jle
fdivs
jle
push
in
sub
mov
pop
cltd
in
lds
int3
pop
arpl
xchg
adc
adc
insb
xor
xchg
ljmp
out
outsb
pop
xchg
int
scas
inc
leave
mov
inc
xchg
and
mov
xor
xchg
ret
sub
mov
scas
pop
sti
test
sbb
xchg
adc
and
addr16
aas
call
hlt
ror
das
lock
mov
daa
cmp
bnd
xchg
xchg
or
mov
int3
rcll
fcoml
xchg
call
fildl
sbbl
mov
lods
cmp
test
ret
mov
sbb
popa
jg
cmp
rcrb
popa
les
push
ss
test
cmp
jp
popa
jno
mov
rorb
cmc
mov
jno
ljmp
and
test
subl
jbe
loope
sub
cmpsl
je
jne
mov
sbb
xchg
mov
mov
pop
mov
clc
fildll
lock
mov
aaa
ja
leave
mov
mov
push
in
mov
aaa
fisubrl
arpl
pop
adcl
lods
repnz
jae
je
lret
jne
mov
push
sbb
imul
mov
pop
mov
fwait
jo
pop
mov
lock
inc
leave
mov
cmpsb
and
rcll
cmpsb
loope
push
icebp
mov
adc
cmp
and
addr16
fcmovb
lahf
fsubs
sub
sub
sbb
xor
cld
into
and
pop
xor
sub
xchg
and
jmp
dec
xchg
push
mov
mov
jge
leave
sbb
pusha
fdiv
popf
loope
push
mov
lahf
jne
hlt
pusha
test
pop
adc
mov
repnz
mov
cmp
push
rcl
pop
mov
into
pusha
sbb
scas
pop
enter
movsl
inc
mov
inc
aam
or
shrb
jmp
adc
or
rcr
xor
add
mov
std
cltd
add
cmp
out
lds
test
pop
xchg
or
mov
gs
std
xchg
ss
fistpl
ja
jns
cmp
xor
subb
cli
and
sahf
jmp
and
mov
test
jecxz
fs
scas
add
push
les
or
pop
andl
inc
sub
loop
in
xor
adc
sbb
pop
repnz
out
inc
cli
shll
inc
insl
jecxz
dec
cmp
xchg
adc
cmpsl
pushf
mov
cmpsl
jb
sub
sub
mov
fnsave
sub
or
insl
mov
xchg
ds
scas
ficoml
scas
outsl
into
mov
cltd
test
addr16
int
popa
push
cwtl
shr
fidivs
test
adc
loop
jno
mov
mov
lret
mov
mov
test
pop
mov
and
dec
shll
sbb
cld
sub
push
inc
adc
sahf
push
and
lret
adc
push
pop
and
fwait
clc
invd
ja
out
jne
mov
mov
hlt
inc
stos
pop
imul
push
lret
push
push
ret
int3
pop
adcl
xor
adc
mov
not
or
xchg
cltd
sub
cmp
pushf
fwait
cld
add
and
into
pop
shr
dec
in
imul
popa
xor
push
sti
int3
mov
and
lret
sbb
icebp
subl
xchg
stc
jne
mov
ljmp
addr16
inc
cltd
pusha
std
roll
addl
mov
pop
fdiv
loop
jmp
sbb
sbbl
cmc
add
pop
je
inc
push
xchg
xchg
cwtl
ja
adc
add
push
out
scas
sti
adc
dec
rorl
pop
sbb
fidivrs
cmp
jle
add
stos
mov
outsl
mov
mov
pop
mov
ss
add
mov
mov
push
cmp
mov
pop
push
or
xor
js
sub
lea
mov
jb
adc
loop
ficoms
xchg
lret
outsb
inc
jno
xchg
adc
xor
xchg
dec
mov
push
or
loope
xchg
cmp
lock
aad
inc
data16
es
sbb
loope
popf
xchg
test
gs
loop
pop
clc
sbb
test
test
xor
pop
imul
scas
ljmp
ljmp
movsl
push
call
pop
pop
push
sti
mov
and
cs
mov
dec
in
push
push
cli
jb
insl
aaa
cmp
mov
mov
mov
scas
jnp
and
lret
or
pusha
and
jmp
inc
cwtl
cmp
lds
sbb
push
lods
lcall
lods
ret
popa
outsl
and
sti
mov
mov
inc
stos
add
push
cwtl
or
xchg
pop
xchg
dec
sbb
xchg
sbb
loopne
push
mov
mov
xor
add
push
lahf
in
dec
pop
add
xlat
cwtl
or
roll
fidivrs
and
or
lret
pushf
movsb
xlat
jbe,pt
pop
mov
pop
push
sbb
stos
std
lret
pop
add
add
aaa
pushf
lahf
aaa
and
mov
insb
loop
mov
mov
sub
xlat
and
xlat
ds
pop
pop
cmp
xor
std
nop
ds
or
add
ja
mov
gs
or
mov
popa
or
sbb
mov
imul
sbb
push
or
xchg
pop
push
xor
sub
icebp
imul
arpl
fs
push
sbb
je
xchg
sbb
sbb
and
cs
jge
xchg
lret
imul
mov
inc
subb
mov
pop
cld
mov
call
jae
cs
insb
stos
push
jno
jns
or
lcall
jne
fimuls
mov
mov
push
rol
jg
jne
xchg
movsb
cmp
scas
pop
out
lock
jo
push
int
adc
mov
addr16
pushf
das
adc
xor
je
xchg
inc
xor
pop
imul
repz
xor
mov
xchg
scas
mov
cmpsb
movsb
repz
mov
ds
push
pop
push
inc
sbb
add
xor
icebp
bound
daa
lcall
add
inc
das
fs
aas
movb
cmp
mov
and
sbb
scas
sbb
pop
test
jge
cmp
jmp
or
mov
mov
jbe
jb
fs
aaa
aam
in
shll
and
sub
and
fcomip
test
cli
imul
loopne
xchg
popa
das
cmpsl
test
xor
dec
out
xorl
mov
out
loop
inc
repz
xchg
popl
sbb
rcrl
test
jnp
je
in
nop
das
cmp
repnz
or
cmp
inc
cltd
into
stos
pop
cmp
add
out
mov
andb
pop
scas
jge
addr16
xchg
callw
ja
and
xor
iret
mov
inc
enter
call
lret
call
jns
mov
mov
in
scas
paddsb
xchg
add
cld
orl
fcomp
fcmovb
fstps
andb
loope
mov
mov
push
ja
jge
movsl
mov
mov
jge
das
mov
cwtl
xchg
addr16
adc
xorl
dec
mov
addl
sbb
xlat
xchg
cmc
sub
stc
and
fimull
mov
pop
iret
shlb
sbb
inc
sti
fmull
jp
sbb
call
je
sbb
add
sbb
sbb
jo
fidivs
or
mov
mov
jle
jge
push
ss
add
inc
test
pop
loope
stos
pop
lds
sub
inc
mov
push
push
xchg
in
xor
cld
push
inc
wrmsr
push
insl
sti
lea
jbe
mov
mul
add
ja
into
aad
aaa
pop
pusha
lcall
pop
loopne
jmp
and
aad
dec
xor
cs
out
mov
insl
pop
in
xor
inc
cs
rcrl
cmp
mov
out
xrelease
loop
mov
leave
dec
iret
lods
xchg
loopne
dec
push
int3
and
cwtl
mov
mov
and
cmpsb
daa
cmc
pushf
jmp
xchg
add
mov
mov
stc
cmp
ret
loop
ret
mov
or
int3
mov
xchg
mov
inc
pop
js
and
out
movsb
sbb
arpl
adc
mov
movq
mov
sub
push
pop
mov
jbe
mov
lret
aaa
lcall
pop
add
and
ss
sub
cmpsl
lret
mov
jae
jnp
add
cmp
sub
ficompl
in
cltd
arpl
or
fstps
mov
scas
lock
bound
push
frstor
rep
push
xlat
sbb
mov
inc
jecxz
cmp
fs
mov
loopne
std
lods
insl
scas
cmp
sahf
cmp
scas
add
mov
inc
mov
stos
inc
jnp
push
jo
loop
mov
lods
xor
push
sub
xorl
icebp
dec
rcr
xor
cmp
sub
mov
fnstenv
popa
xor
dec
rorb
loope
sahf
inc
or
mov
scas
rcrb
push
mov
jae
jmp
push
fs
fisttpll
mov
sub
push
popf
daa
xor
jns
lret
cmpsb
inc
sbb
pop
aas
inc
lock
or
dec
jbe
es
enter
lret
xor
mov
enter
push
jmp
dec
jle
js
test
in
add
xor
sbb
bound
mov
inc
dec
pop
dec
cmp
mov
mov
cwtl
inc
ret
rclb
or
mov
daa
and
push
rcll
rcr
mov
shrl
jle
daa
stos
jge
cmc
cltd
rorl
xlat
push
push
ret
mov
xor
popf
insl
or
loop
mov
pushf
xor
cmp
or
rcrl
rcr
daa
inc
adc
pop
jnp
inc
cwtl
repnz
and
adc
addr16
repnz
test
jae
inc
push
test
nop
testl
xchg
push
jp
in
cwtl
jbe
sbb
and
and
mov
push
ss
sbb
add
divl
mov
push
mov
inc
lods
je
test
adc
dec
or
repnz
jno
add
jp
xchg
jge
lods
cmp
outsl
movsl
add
xchg
je
iret
jg
or
mov
lret
ljmp
scas
in
movsl
lods
push
movsl
rcrl
mov
jecxz,pt
xor
sbb
cmp
insb
clc
into
sbb
mov
jl
ret
xchg
ret
push
dec
adc
mov
bound
and
or
repz
movsl
sti
in
rol
xlat
adc
loop,pt
out
popa
fsubl
inc
fists
jle
bound
mov
nop
cwtl
mov
adc
add
or
cwtl
pop
and
enter
aas
or
cmpsb
arpl
nop
lea
iret
or
shll
jecxz
imul
jle
xlat
sahf
xchg
xor
mov
sahf
in
ret
imul
pop
imul
loop,pt
cmp
xor
repz
push
inc
jno
mov
rcl
add
cmc
xchg
jo
leave
popa
icebp
sbb
xor
or
mov
ljmp
cmp
mov
sbb
mov
xchg
xor
pop
inc
dec
or
lods
sbb
mov
mov
push
push
test
imul
cmp
out
shlb
inc
inc
jecxz
jl
movb
dec
in
ds
jno
adc
sbb
insl
insb
or
sahf
aas
int3
test
or
jle
addr16
sbb
adc
sbb
imull
lret
inc
or
pop
adc
out
cmp
js
sti
or
jbe
mov
je
push
cmp
cld
enter
sbb
pop
fdivs
push
ja
fmuls
add
cmp
jle
add
jge
lcall
pop
fdivrl
jno
mov
addb
xchg
cmp
sbb
mov
lock
rclb
cli
outsb
mov
loop
lods
cmp
sbb
dec
add
or
icebp
pop
jbe
scas
xchg
insb
push
pop
push
xchg
push
mov
pushf
movsb
div
pop
unpcklps
xor
repz
mov
lcall
and
stc
andb
sbb
leave
push
pop
and
movsl
cmp
lret
mov
outsl
jnp
imul
mov
rcll
xor
outsb
xor
pop
xchg
int3
cmp
icebp
cmp
cwtl
pop
orb
ret
xchg
or
jp
mov
push
imul
adc
adcb
std
stc
mov
icebp
lret
push
sahf
mov
sbb
cmp
add
popa
push
iret
xor
daa
sbb
sti
sub
mov
xchg
cmp
add
xchg
or
cld
xor
xor
lods
insb
xchg
call
mov
cmp
mov
fdivrs
shlb
jl
inc
sbb
jecxz
inc
repz
or
les
loope
jne
adc
push
dec
in
imul
mov
dec
imul
into
mov
jmp
gs
sub
stos
cltd
mov
mov
mov
rorl
sbb
push
mov
mov
push
popf
push
add
out
test
mov
push
scas
aam
cmp
jmp
jne
inc
insl
add
pop
ficompl
arpl
inc
hlt
or
nop
hlt
inc
int
or
jo
ret
push
sbb
aad
or
ljmp
adc
jo
je
xchg
xor
pshufw
mov
sub
mov
mov
xor
adc
or
xchg
pop
jae
bound
mov
add
andl
pop
aam
test
and
mov
lock
cmp
popa
xchg
fs
rorl
mov
add
pop
aaa
pop
out
add
rol
call
sub
and
ja
daa
out
xchg
popf
pop
jp
add
jns
cmp
push
push
xchg
int3
daa
adc
dec
mov
das
popf
xchg
sbb
sub
out
mov
and
sbb
dec
das
jecxz
imull
xor
jbe
mov
cmp
xor
push
cmpsb
mov
or
inc
sarl
pop
inc
mov
push
and
jl
adc
xor
pop
dec
xchg
jmp
aam
xor
imul
fimuls
push
stos
dec
inc
push
aam
testl
enter
dec
and
out
cmc
movhps
jno
push
xchg
xchg
mulb
inc
notb
dec
mov
scas
inc
sti
mov
cmp
mov
adc
mov
add
pop
outsb
popa
js
or
in
pop
ljmp
pusha
mov
push
inc
adc
out
xchg
popf
mov
dec
data16
sbb
mov
out
test
cs
mov
and
stc
aaa
adc
push
idivl
mov
dec
and
lcall
xchg
lock
test
adc
loopne
sbb
addr16
pop
shrl
in
aaa
pop
pop
mov
out
add
outsb
movsb
cmp
dec
adc
add
sahf
subl
jp
pop
pop
sahf
inc
leave
push
mov
pop
mov
js
leave
test
mov
xchg
loop
mov
cwtl
fwait
lahf
stc
cli
jbe
fsubr
outsb
pop
xorl
or
jmp
xchg
jbe
xchg
insl
ja
xchg
outsl
or
sbb
aad
push
jo
or
push
gs
aas
mov
sbb
push
jo
mov
sbb
sbb
in
mov
cmp
jnp
add
add
mov
rolb
andb
mov
and
into
je
jae
repz
push
imull
xchg
pop
cmp
jns
dec
lahf
outsb
mov
rcl
popa
dec
shrl
adc
cmp
sub
mov
call
xchg
fdivp
pop
push
lret
lcall
mov
or
add
arpl
or
push
push
test
cmp
aad
rorl
stc
mov
test
mov
scas
cmpsl
cld
adc
sahf
add
inc
or
pop
jnp
jg
push
push
es
les
stc
lock
or
mov
outsl
ljmp
jb
fcmovu
pusha
ret
call
je
jno
test
out
dec
inc
sbb
enter
mov
fsubp
hlt
add
outsl
test
adc
movsl
iret
mov
inc
or
xor
jecxz
jmp
ja
mov
fnstcw
mov
xchg
fldpi
dec
jmp
out
clc
std
and
fwait
mov
pop
or
adc
cmp
cld
and
outsb
cwtl
pop
xor
mull
mov
mov
push
cmp
ljmp
sub
loope
push
mov
insb
sti
jae
shlb
or
xchg
dec
addr16
enter
lods
push
icebp
sub
out
mov
jae
push
into
mov
aam
repnz
xor
aad
add
xor
sbb
lods
mov
fs
movsb
movsb
xchg
aam
push
in
popf
jno
pop
stos
insb
and
filds
inc
push
sbb
into
xor
push
inc
sbb
adc
loop
lock
pop
in
hlt
jp
pop
mov
push
nop
sbb
push
lcall
in
test
dec
and
in
and
pop
inc
imul
add
popf
scas
imul
test
dec
hlt
mov
jle
push
in
jg
out
sub
out
inc
add
jg
mov
rdtsc
inc
sbb
adc
push
push
push
or
inc
sbb
mov
lahf
push
icebp
pop
jb
add
insl
loop
ret
loop
movsl
leave
adc
daa
ret
and
xor
or
add
and
fstpt
in
cmp
stos
leave
aas
divl
stos
in
push
ja
inc
mov
sub
push
add
jnp
jmp
xlat
push
iret
sub
stos
pop
and
into
leave
mov
test
inc
movsb
ljmp
out
aad
addl
jae
ljmp
movb
jae
mov
mov
and
mov
push
fs
add
js
ror
rolb
push
xchg
mov
pop
cmc
std
jge
cld
cmp
and
fildll
fcoms
sbb
dec
sub
sub
sub
xor
inc
movsb
pop
mov
out
pop
pop
js
sub
cmpl
xor
add
or
add
mov
fwait
ljmp
sbb
cs
rorl
xor
fistpl
clc
and
ljmp
incl
or
adc
jle
push
jg
and
stos
cs
ja
pusha
or
pop
sub
mov
stos
lcall
lret
lahf
test
mov
jp
shll
and
sbb
out
test
push
cltd
jle
inc
leave
sbb
or
pop
xor
cli
daa
adc
je
mul
in
idivl
or
test
shl
and
scas
test
or
pop
jge
push
jnp
dec
jns
scas
push
ja
insl
ja
jmp
push
jbe
mov
lods
inc
mov
xor
mov
or
mov
ret
push
jmp
pop
jge
pop
scas
mov
inc
add
outsl
shlb
in
pop
dec
xchg
sub
mov
fstpt
popf
daa
mov
push
ja
pushf
xor
xor
rcrl
inc
idivb
aas
xlat
ds
test
lret
inc
cmp
test
mov
pop
sti
sbb
dec
dec
mov
push
mov
push
ja
into
outsb
jb
je
lcall
jmp
lret
ja
pop
outsl
xchg
aam
mov
arpl
gs
adc
mov
jmp
jecxz
stos
inc
sbb
lcall
hlt
lea
aaa
test
sub
sub
int3
and
mov
jno
cmp
arpl
dec
dec
loope
lock
mov
jns
sbb
movsb
out
jge
cli
mov
into
adc
scas
data16
fwait
xor
mov
and
fidivrl
in
mov
negl
mov
mov
inc
cmpsl
and
imul
add
gs
pxor
mov
inc
or
in
mov
mov
xchg
pop
test
fidivs
je
sbb
shll
lds
cmp
lods
lods
jge
das
js
dec
jg
inc
inc
push
lock
xchg
fcmovnb
ss
ret
dec
aad
push
pop
sub
lahf
daa
es
lods
jmp
ficomps
cli
sub
push
pop
and
ss
jge
or
leave
jns
xor
mov
and
vmovdqa32
daa
stc
lahf
mov
dec
enter
fidivl
pop
push
lea
addr16
insl
fldl
push
daa
and
push
loopne
xorl
outsb
xchg
jo
mov
iret
fisubl
sti
sbb
jle
ja
inc
xor
gs
or
out
xchg
je
sbb
adc
mov
dec
sub
iret
add
shrl
filds
push
adc
xchg
mov
testl
adc
mov
loopne
pop
mov
adc
sbb
add
inc
je
out
std
outsb
sti
data16
and
arpl
xchg
inc
mov
pop
jb
or
jg
orb
dec
dec
insb
pusha
lret
mull
out
es
cmp
outsb
mov
aam
test
pop
repz
dec
testl
mov
add
mov
cmp
push
or
in
lock
adc
out
out
jns
fisubrs
inc
mov
push
mov
push
jge
xchg
inc
dec
mov
jbe
inc
or
fdivrl
dec
test
les
sub
ljmp
pushf
ss
push
sbbb
sti
sbb
inc
popl
dec
xor
into
movsl
cs
in
imul
xlat
je
es
mov
lea
mov
xorl
add
pop
xchg
add
sub
jae
add
ja
addb
sbb
and
popf
cltd
inc
push
hlt
dec
push
insb
rolb
jo
sbb
loopne
dec
add
pop
in
orb
shr
movb
stos
sarb
enter
mov
stc
not
sti
in
inc
neg
insl
jle
pusha
out
ret
xor
mov
sub
xor
sbb
sbb
aaa
adc
jg
mov
aaa
cmp
pop
adc
daa
jo
sbb
lods
inc
push
sub
dec
or
xchg
jmp
sahf
iret
sbb
dec
jbe
xlat
fwait
xchg
scas
push
cmp
mov
or
pop
in
cmp
fsubrp
or
nop
cmp
lret
jp
dec
mov
mov
sbb
stos
or
pushf
add
in
mov
and
push
push
ljmp
mov
or
cs
and
push
mov
cs
xor
sub
and
fs
sub
jg
test
xchg
repnz
imul
sub
lods
fildl
add
adc
or
cmp
add
push
icebp
xchg
fidivrl
cmc
and
iret
sub
out
nop
jmp
sub
stos
adc
sbb
popf
ljmp
jp
fcmovnu
push
adc
aas
lea
rclb
cmp
xchg
xor
mov
aas
dec
testb
fnstenv
mov
push
mov
inc
cmc
outsb
pslld
xchg
outsl
cs
fldl2e
rol
repz
insb
aam
push
inc
es
divb
mov
mov
mov
cmpsl
mov
jbe
jecxz
rorb
and
or
jo
dec
dec
adc
insl
faddl
xchg
sar
gs
push
and
stos
xor
in
daa
adc
mov
je
jno
dec
sbb
jne
lret
pushf
aad
mov
add
sub
xor
push
pop
fistpl
pop
daa
jl
or
ds
sti
ret
enter
jbe
xlat
fnstcw
cs
xlat
sbb
push
hlt
fsub
adc
addl
addr16
mov
or
pop
mov
xchg
lods
and
js
bound
inc
cmp
nop
cmc
sti
hlt
push
movsl
jge
add
repnz
bound
popf
and
out
push
pusha
add
test
scas
mov
rolb
pop
insb
push
outsb
cmc
xor
cmp
sahf
lea
shl
adc
std
das
or
mov
mov
in
das
push
cs
cs
adc
sub
adc
stos
repz
fdivs
mov
jle
jo
sbb
lods
leave
xor
cltd
adc
push
and
imul
lret
lcall
imul
int3
adc
shlb
fmull
dec
sbb
ror
jmp
cmc
lock
jmp
pop
or
push
adc
cmpb
out
push
xor
out
cmp
cwtl
push
pop
push
fistpl
movsl
sub
je
pop
outsb
and
loop
fstl
loopne
jnp
jbe
jecxz
mov
ror
pop
mov
repz
gs
cmp
idivb
xchg
adcb
outsl
pusha
lods
push
xchg
lea
idiv
inc
out
mov
and
push
in
mov
inc
jl
mov
lahf
adc
push
dec
add
sbb
xchg
nop
pop
mov
fstpt
xor
mov
dec
lcall
bt
daa
in
shll
outsb
sbb
stc
mov
jae
into
pop
sti
mov
and
es
scas
adc
aaa
push
fiaddl
sbb
fldcw
bnd
test
mov
adc
cld
or
add
insl
lds
into
cld
mov
scas
cs
xor
mull
cmpl
push
push
loope
pop
sarb
cltd
cmp
sub
xchg
sarl
fwait
out
arpl
pop
mov
push
pop
inc
pop
sub
sub
dec
sub
arpl
push
lods
js
add
fs
jmp
pop
push
mov
call
andb
bound
jle
aaa
and
addr16
clc
shr
inc
loopne
clc
xor
or
jecxz
aaa
adc
mov
and
outsb
adc
mov
aam
in
mov
push
lea
push
out
lock
mov
aaa
daa
js
xor
cltd
mov
mov
sbb
lods
sbb
push
pop
leave
or
jecxz
addr16
lods
repnz
cmp
inc
xor
inc
divl
shll
push
adc
icebp
cmpsb
jle
push
inc
ds
xchg
sbb
repz
enter
adc
fstp
push
sbb
sub
cld
stos
je
stc
lock
stos
dec
ja
mov
inc
push
push
clc
movsl
fdiv
jbe
in
push
lods
jmp
test
pushf
std
xchg
mov
dec
ja
lock
add
adc
cwtl
sub
inc
jns
mov
mov
jb
mov
inc
cwtl
hlt
jb
lds
ja
cmpsl
sub
aaa
out
and
rclb
unpcklps
sbb
std
sbb
jge
leave
adc
or
fldenv
test
jmp
jl
push
mov
jno
adc
fldl
jg
dec
or
icebp
push
movsl
rcl
inc
mull
pop
fistpll
popf
mov
or
push
sbb
mov
xchg
xchg
les
dec
sub
jo
rol
mov
xchg
mov
pop
lret
mov
and
insb
fiaddl
leave
popf
pop
mov
pusha
add
lcall
sub
cmp
and
or
pop
ret
cmpsb
repz
xchg
cli
inc
movsl
fdiv
lods
jne
sub
xchg
cmp
pushf
out
mov
mov
mov
lea
lods
sub
out
cmc
ljmp
inc
adc
cmp
andl
dec
or
fwait
pop
icebp
fdivr
cmp
stc
pop
dec
popf
dec
outsl
dec
jecxz
subb
pop
mov
dec
sub
inc
movsl
mov
aaa
xchg
jg
hlt
inc
adc
xlat
pushf
cmp
cltd
daa
dec
sbb
ror
dec
hlt
cmpsb
adc
sahf
pop
icebp
das
imul
mov
andb
mov
addr16
xor
mov
ret
mov
je
rclb
add
lods
dec
mov
insb
cld
notb
jle
in
leave
lret
fwait
jmp
jmp
inc
or
mov
sub
hlt
xor
and
lcallw
aaa
xor
add
mov
mov
push
aad
mov
or
inc
ljmp
mov
outsb
pop
push
xchg
add
int
or
push
sbb
fdivs
jecxz
int
inc
mov
inc
pop
add
push
int
fcomps
insl
dec
and
fcmovbe
jne
icebp
mov
mov
xor
sarl
pop
lea
jle
cmc
xor
out
jns
mov
std
mov
mov
mov
add
pop
dec
in
add
mov
stos
push
sbb
imul
push
sub
mov
js
mov
test
pushf
jge
sub
inc
jle
push
jno
sbb
cld
rcll
aad
cmpsl
mov
leave
icebp
mov
enter
xchg
lock
and
movb
out
mov
push
fstps
cmp
fdivs
idivl
mov
push
jmp
nop
adc
or
sbb
ret
mov
aad
xorl
mov
fcomp
cmp
aad
mov
xchg
pop
cmpsl
cmp
les
andl
jno
cmc
or
add
mov
and
push
jp
push
or
fstpt
inc
inc
insl
sbb
lret
cmpsb
jmp
movsl
xor
and
or
mov
jg
int
stc
insb
imul
fbld
fnstenv
jbe
fcoml
add
ret
sbb
sbbb
fcmovnbe
add
loopne
add
out
daa
dec
mov
mov
push
xchg
in
repnz
adc
lret
fdivs
mov
loopne
out
sbb
out
jge
add
push
enter
mov
pusha
test
add
cltd
inc
in
sbb
pop
add
xchg
cmp
pop
loop
filds
mov
shlb
repz
cmovs
pop
pusha
dec
inc
popf
lahf
mov
xchg
push
jns
xor
cmp
aas
xor
xchg
out
shrl
sub
mov
leave
cmovs
cltd
loopne
mov
aaa
es
sub
push
lea
sub
into
sub
jmp
push
cltd
inc
movsb
inc
lcall
test
add
xchg
add
out
pusha
add
lods
xor
mov
loop
inc
imulb
stc
insb
cmp
stos
push
cmp
mov
cmp
loop
cmpsl
ljmp
loop
fcmovbe
out
inc
fs
enter
int3
and
mov
test
pop
push
or
outsl
cmp
lcall
mov
fisubs
icebp
mov
xchg
imul
nop
rorl
outsb
daa
mov
dec
cmp
cmc
pushf
xchg
mov
cltd
jecxz
add
adc
repz
push
add
js
sub
mov
dec
and
inc
sub
lods
mov
int3
mov
and
mov
cli
mov
adc
push
mov
mov
rolb
jg
rclb
and
insl
test
ss
and
iret
dec
call
dec
xchg
lock
pushf
jle
cmp
sahf
xor
mov
sub
shlb
lods
movsb
mov
push
ljmp
scas
lods
pop
fidivrs
icebp
mov
out
ret
aas
add
fwait
inc
xchg
cmpb
stc
mov
mov
xor
outsl
xchg
lahf
call
repz
lods
mov
inc
ret
mov
and
lock
or
iret
add
inc
pop
inc
push
jne,pn
xchg
decl
cmc
lods
popf
icebp
push
ja
jge
arpl
or
test
imul
idivl
dec
pop
outsb
cwtl
and
ja
in
xchg
push
or
xchg
and
and
inc
fists
mov
adc
dec
xor
mov
mov
jmp
sbb
and
push
push
mov
sub
out
lret
xchg
fnstcw
sub
mov
hlt
out
jle
dec
mov
insb
push
lret
in
les
dec
std
pop
push
out
push
test
shrl
jl
and
xlat
dec
les
jbe
xor
adc
data16
xor
lret
pusha
aas
arpl
adc
mov
sub
mov
xchg
jae
loopne
mov
in
push
push
adc
mov
out
loope
dec
jnp
jge
imul
xchg
jmp
inc
mov
imul
enter
dec
cli
shlb
ja
adc
pshufw
insb
ljmp
jge
jmp
hlt
hlt
jle
sub
add
cmpb
rcr
ljmp
xor
loopne
test
mov
ds
dec
rclb
notl
mov
push
jb
rclb
popa
pop
mov
cmp
dec
movsl
pop
xchg
loope
cld
ljmp
mov
or
cmc
rcr
jl
cwtl
rcrl
mov
fsubl
inc
mov
rclb
sub
gs
nop
dec
jae
int3
mov
mov
sahf
xchg
push
jg
ffreep
inc
loope
repz
mov
push
stc
pop
xor
adc
std
pop
push
jle
orb
in
in
call
gs
cmpl
push
xchg
mov
pop
mov
repnz
pop
lods
jmp
inc
in
xchg
out
in
jle
sbb
inc
adc
dec
add
in
and
lods
test
sbb
in
in
fsts
pop
repz
jp
test
mov
jge
orl
or
cs
hlt
inc
fldt
xchg
repnz
push
push
in
call
adc
xchg
stos
cmp
cltd
xor
outsb
ret
jns
xchg
scas
and
sub
test
in
and
pop
and
mov
adc
out
push
mov
mov
xchg
cs
adc
in
notb
xor
in
jns
aaa
mov
sbb
push
rcl
mov
jae
cmc
in
out
shrl
int
adc
lret
idivl
inc
sub
add
mov
adc
push
adc
xor
aam
xchg
xchg
cltd
add
dec
lods
jne
outsb
jmp
dec
mov
into
xchg
test
adc
andl
hlt
jp
lods
sahf
inc
and
cmpsb
adc
icebp
cmpsl
in
aam
cmpsl
aam
lods
adc
ljmp
fxch
je
mov
pushf
inc
lock
ljmp
aas
pop
ja
orb
push
and
jbe
jp
in
mov
hlt
out
daa
jp
rorl
mov
mov
xor
shl
sahf
mov
xchg
aam
orb
ja
mov
cwtl
adc
cmp
jecxz
push
and
shlb
push
dec
adc
sbb
sbb
sbb
roll
pop
lds
hlt
or
cltd
cmpb
inc
cmp
lea
xchg
dec
repz
cld
fsubs
xchg
test
sub
add
jle
ljmp
pop
fidivrl
in
fnstcw
loopne
adc
movsl
pop
pushf
out
sbb
stc
dec
cli
insb
das
xchg
das
add
loope
jge
pop
lret
inc
mov
loope
lock
aas
xchg
sbb
fsubp
push
xchg
mov
cwtl
pop
in
lock
lods
or
dec
inc
int3
sub
insb
push
jp
sub
xchg
gs
in
or
mov
idivl
mov
jae
or
outsl
pop
fst
mov
push
mov
add
pop
inc
cmp
cmp
ret
xor
inc
in
shll
rcl
cmp
mov
pop
int3
stos
clc
xchg
in
add
std
jno
pop
add
cmp
jecxz
shll
pushf
cld
pop
inc
enter
rclb
into
or
mov
out
and
mov
imul
xchg
xchg
jge
mov
inc
sub
jl,pt
outsb
mov
inc
testb
jae
popf
sti
pusha
out
xorl
cmp
movsl
and
shlb
sub
inc
ss
lods
dec
mov
and
clc
add
pusha
rcrb
push
pop
clc
mov
sbb
adc
scas
mov
xchg
xorb
cmpsl
and
inc
jmp
dec
pop
jbe
adc
jns
jle
js
sub
lods
inc
sbb
stos
xchg
xchg
mov
jne
lahf
push
cmpsb
add
cmpsl
rolb
cmp
xchg
in
pop
es
pop
stos
aam
fcomp
xchg
ja
pop
jle
test
movsb
jne
lea
xchg
aam
decb
xor
xchg
mov
cli
lea
add
mov
std
pop
or
movsb
imul
aad
out
xor
lods
and
inc
ficoms
sub
inc
sti
popf
cld
negl
outsl
add
pop
in
mov
lds
loopne
fsubs
sbb
sbb
and
in
in
or
sub
nop
in
mov
pop
mov
lret
sub
out
inc
addb
push
sbb
insb
ljmp
insl
lds
jno
mov
dec
xlat
xchg
xor
jmp
adc
or
cmp
movsl
lock
mov
jns
pop
xor
jl
repnz
or
loopne
mov
pushf
jns
notl
movsb
sti
adcl
sbb
xchg
mov
popf
mov
and
stos
sarl
mov
sbb
and
cmp
fidivrs
xor
push
imul
fsubl
mov
in
arpl
jmp
jns
mov
js
or
xchg
jnp
xchg
push
adc
enterw
push
repnz
lret
inc
sahf
sbb
xchg
mov
ss
dec
imul
push
mov
notl
sbb
fbld
push
or
inc
sti
pop
inc
mov
dec
cmp
xchg
mov
cwtl
jp
cmp
dec
adc
jae
roll
mov
dec
xor
lret
outsl
push
clc
lds
push
mov
sar
and
int3
sbb
xchg
call
in
sbb
or
lock
push
out
daa
xchg
adcb
std
loope
push
daa
rcl
jo
or
jle
rcl
adc
jns
sahf
daa
inc
mov
add
jno
loope
jl
arpl
rclb
and
jg
push
xchg
mov
mov
mov
fldt
dec
sub
add
dec
and
js
xor
push
xchg
jl
rorl
jg
mov
jae
pop
and
mov
sbb
daa
mov
bt
into
push
xor
cmp
xchg
inc
and
add
cltd
out
mov
pop
icebp
test
loopne
lea
fs
and
bswap
mov
add
arpl
dec
and
bound
repz
cmpsb
sub
cld
fiaddl
insb
mov
mov
push
inc
pop
int3
push
popa
fwait
pop
rcrb
lods
and
push
lea
adc
mov
pop
repnz
push
enter
imul
lret
push
int3
ja
pop
add
mov
lahf
movsb
aad
and
cmp
insl
js
stos
adc
leave
adc
sub
sbb
push
fcmovbe
push
int3
jb
fs
sub
adc
jp
jmp
adc
fidivrs
adc
mov
inc
cld
cwtl
sbb
icebp
cmpsl
dec
xor
xor
sbb
lret
sbb
insb
push
push
dec
retw
mov
aad
push
mov
mov
jl
stc
mov
mov
xor
sbb
aaa
and
stc
jne
mov
xor
cmpsl
loop
dec
mov
es
xor
sbb
addr16
pop
mov
cmp
movsl
push
cs
lds
pop
jg
outsl
jno
nop
sub
add
insl
je
pop
dec
jnp
pusha
and
push
jl
xor
and
jp
inc
test
pop
pop
jne
mov
mov
mov
mov
dec
or
into
cmp
sub
jb
pop
or
mov
jae
and
adc
leave
icebp
test
stc
out
filds
mov
mov
pop
xchg
push
divps
ret
cld
cwtl
xchg
fimull
call
mov
sub
mov
xor
xor
ret
sub
mov
adc
push
dec
jnp
mov
jno
dec
pop
test
sbb
notl
les
ds
pop
out
fnstcw
cmp
lret
sub
add
adc
mov
jb
cmp
push
pop
mov
xor
stos
lahf
inc
sub
dec
mov
mov
inc
push
addr16
ds
sbb
xchg
ds
mov
and
stos
push
xlat
mov
sub
dec
xchg
aas
sub
adc
in
pop
pop
inc
jbe
testb
mov
pop
xchg
mov
in
insl
cmp
inc
pushf
not
pop
lret
mov
or
out
jno
test
sub
push
std
or
gs
xor
shrl
sbb
call
sbb
js
insl
mov
pop
push
pushf
pop
jns
ja
push
std
push
xor
mov
inc
cs
xchg
imul
scas
cmc
hlt
out
es
mov
sub
push
push
cltd
jo
adc
cwtl
jge
push
pop
inc
rolb
cld
cmp
pminub
sbb
inc
adc
mov
rol
stos
xchg
cld
outsb
and
lahf
cmp
push
adc
mov
loop
andb
push
add
or
sub
icebp
iret
fs
sub
sbbb
xor
mov
xchg
outsl
scas
ret
lret
iret
negl
xchg
divb
and
clc
pop
insl
inc
jae
fldl
ds
int
idiv
sbb
faddl
ret
sahf
inc
xchg
popf
cmpsb
pusha
cmc
dec
add
hlt
sub
lret
gs
mov
ljmp
push
push
lea
ror
push
int
test
and
xchg
pushl
stc
sub
inc
int
adc
xchg
movsb
shrl
sub
jp
loop
inc
insl
mov
push
mov
mov
push
and
movsb
dec
mov
movsb
dec
add
jbe
xchg
pop
ret
mov
cmp
cmp
sub
clc
sti
std
shll
leave
mov
xor
fists
leave
pop
mov
adc
pusha
xor
push
sbb
and
test
ljmp
adc
jl
or
mov
cmp
add
mov
mov
push
lds
pop
test
jl
iret
outsb
xor
xchg
mov
mov
dec
mull
sub
mov
push
fsqrt
add
in
hlt
imul
in
cmp
cs
loope
icebp
adc
jmp
imul
sbb
jmp
mov
mov
and
pusha
leave
mov
sub
mov
fldenv
cltd
sub
pop
out
mov
mov
sub
jns
movsl
mov
out
and
shl
loope
xlat
pushf
pop
xchg
inc
inc
mov
adc
cmpsl
cs
mov
aad
jo
and
aas
cmp
jbe
fiaddl
ret
adc
jmp
dec
pop
lods
aam
push
inc
inc
mov
or
adc
push
cmp
sub
cmp
sbb
rorl
jne
notb
ret
inc
xchg
inc
mov
jo
xchg
adc
icebp
dec
shrl
popa
out
mov
lret
cmp
push
pop
subb
mov
scas
adc
das
pop
hlt
pop
mov
fstpl
mov
fiaddl
push
ret
sbb
sub
pop
icebp
fs
mov
jp
mov
and
test
adc
std
jne
dec
lods
push
xchg
fildl
pop
aam
out
xorb
jno
sub
or
test
jmp
scas
or
inc
and
add
sub
icebp
cld
inc
push
jg
lret
popa
and
mov
loope
sbb
loope
mov
sub
jp
mov
test
cmp
stc
fwait
sahf
bound
pop
rclb
aad
cld
mov
pop
xor
ss
shlb
roll
and
mov
pop
inc
cli
inc
pop
mov
fidivl
cli
mov
add
ret
out
mov
movsl
arpl
fsubrp
xlat
in
mov
sbb
mov
xchg
inc
mov
or
cmpsl
mov
int3
cmpsb
stos
sbb
inc
sarb
and
mov
movsb
jmp
loope
mov
mov
or
cld
jg
cmpl
cli
mov
xor
in
stos
sub
xchg
fcmove
pop
adc
mov
es
rorb
and
loopne
out
lret
leave
enter
test
mov
adc
sub
stos
lahf
lcall
int3
or
push
insl
jle
cltd
jp
jne
jmp
lea
negb
jae
mov
je
js
jp
mov
sub
sbb
ds
rcr
push
cmp
inc
mov
pop
adc
mov
daa
jns
xchg
mov
jmp
xor
mov
mov
stos
and
iret
jae
mov
bound
cmpb
pop
test
mov
xchg
clc
pop
push
add
bound
in
aaa
cmp
xchg
out
push
fxch
add
loopne
xor
stos
jp
test
stc
cltd
pop
hlt
adc
mov
and
sbb
mov
icebp
cmp
and
or
das
jne
mov
jmp
pusha
shr
dec
xchg
jg
test
ss
adcb
mov
daa
cmc
push
jbe
pusha
xlat
adc
stos
sub
and
rcrl
loope
jl
sar
or
fdivs
sbb
inc
or
rolb
aam
adc
loope
mov
shlb
push
aad
subl
dec
dec
stc
push
jno
mov
push
inc
xor
xchg
sub
or
inc
movsb
enter
adc
sub
jecxz
js
xor
pop
mov
fmulp
mov
adc
fnstcw
and
lock
add
mov
inc
add
adc
int
in
sbb
jle
in
mov
jp
fmull
and
xchg
inc
or
jl
rclb
cli
in
imul
icebp
push
push
pushf
cmp
mov
xchg
mov
pushf
xor
arpl
in
icebp
jnp
push
mov
lds
ret
dec
les
dec
fistpll
sbb
push
mov
ljmp
mov
jne
mov
fdivl
aaa
popa
test
mov
xchg
jecxz
mov
push
and
gs
jge
and
repnz
popa
les
xor
cmp
sbb
ficomps
in
inc
sbb
adc
xor
inc
inc
fldl
dec
inc
js
mov
fcoml
iret
aas
movsb
ror
xchg
cld
cs
fidivrl
pop
sub
cmpsl
jne
push
lret
xor
jmp
cmc
cmp
mov
das
xchg
or
mov
inc
mov
or
xor
and
xchg
in
add
lea
xchg
xorl
adc
push
xor
faddl
fsub
iret
xor
repz
mov
cltd
imul
cmc
add
xor
fs
mov
sbb
jl
mov
pushf
es
arpl
ds
adc
sub
mov
xor
mov
fdivl
add
sbb
pop
in
xor
je
jo
cmp
fidivl
mov
lods
idivl
dec
cmp
pop
popa
mov
scas
jmp
or
lea
ficoms
aam
xchg
xchg
test
xor
adc
add
shlb
cmc
ror
pop
mov
inc
jb
or
xor
fisttps
cmpsl
aam
fidivs
jmp
mov
jbe
jl
jmp
xchg
add
in
mov
mov
mov
imul
mov
lret
std
cli
cmp
push
jle
sbb
aas
mov
inc
int3
sti
bound
cs
and
loop
arpl
cmc
push
lock
test
pop
cmp
cmpsl
cs
push
mov
mov
mov
xor
add
add
xchg
cmpsb
jne
and
lcall
dec
mov
lret
xchg
mov
out
xchg
les
lods
mov
cmpb
pushf
lahf
push
daa
push
mov
out
aam
mov
into
out
mov
pop
ss
mov
sub
or
scas
cmp
fldenv
mov
mov
dec
push
adc
xchg
cmp
cltd
adc
push
xor
xchg
xor
inc
dec
push
mov
mov
add
xchg
pusha
push
mov
push
int3
dec
insb
pop
jnp
ss
pop
dec
pusha
jg
xor
cmp
shll
enter
cmp
addr16
pop
and
pusha
sar
push
gs
jp
mov
pop
mov
movsl
aas
ret
sti
pusha
lret
rclb
int
aad
out
add
andb
mov
ds
bt
pop
enter
movsb
fisubrs
inc
or
sbb
mov
mov
dec
mov
pop
cltd
mov
out
xchg
push
dec
sub
or
shlb
cmp
adc
in
loopne
xchg
push
into
or
bound
subb
push
fcmovnbe
fs
ja
sahf
add
les
mov
sti
cmp
cmpsb
fbld
movsb
cmp
pop
pop
and
lds
sar
mov
add
lods
or
ret
arpl
mov
ljmp
cmp
imul
push
clc
inc
xchg
stos
or
iret
loope
dec
rcl
and
pushf
add
pop
fidivs
popf
aam
sub
sub
stc
pop
mov
inc
jge
xorl
and
and
enter
mov
test
pushf
rcr
push
pop
stc
enter
sub
addr16
in
jge
and
adc
out
sub
sub
lea
aad
xchg
add
xchg
xchg
or
jp
sbb
loopne
dec
fidivl
dec
ret
jl
dec
hlt
test
arpl
and
jg
in
ret
mov
jo
fisubs
inc
fcoms
jl
shll
xor
ss
mov
pop
cmp
push
mov
arpl
add
xchg
jmp
int3
xchg
rolb
cmpsb
test
mov
into
leave
cli
or
pop
push
adc
cmp
push
data16
jl
push
call
dec
lret
fists
sbb
shlb
addr16
and
pop
adc
ret
fidivs
push
imul
xchg
loope
cmp
mov
pop
repz
out
sub
dec
pop
cwtl
dec
sub
push
lds
lods
fsubl
aam
xor
jp
icebp
cmp
rclb
jne
xlat
data16
mov
and
fwait
and
shr
sub
adc
xchg
enter
outsl
fucomi
pop
mov
out
mov
lahf
inc
xchg
inc
pop
fcomps
loop
mov
adc
mov
push
cmp
pushw
dec
pushf
inc
or
jo
cli
pop
mov
xchg
sub
jge
test
popl
scas
daa
or
clc
hlt
jg
jecxz
jb
addr16
and
sti
lock
xor
mov
lret
inc
pop
push
mov
fdivs
pusha
lock
lods
gs
or
jnp
add
push
cmp
jne
add
popa
add
ds
repz
je
mov
mov
xlat
mov
sbbl
in
cltd
jb
push
test
mov
jno
sub
lret
or
fadd
mov
lret
test
stos
repnz
int3
push
xchg
xor
xchg
lods
lea
mov
xorl
clc
push
pop
push
sbb
enter
add
xchg
adc
fildl
mov
cmp
pusha
inc
push
cmc
lahf
mull
int
pop
xchg
cli
movb
mov
jno
jno
or
jbe
out
aad
or
push
fistps
jae
rorb
fisttpl
xchg
out
rolb
dec
cmp
mov
lock
mov
or
sub
xchg
popf
mov
push
icebp
and
mov
sbb
push
ret
push
cld
jbe
pop
sarb
push
pusha
mov
add
mov
ret
out
into
pushf
adc
pop
aad
jae
and
or
jb
sbb
mov
loope
fldcw
test
pusha
call
lods
jae
test
mov
nop
mov
xchg
cmc
orl
push
and
adc
sbb
pop
repnz
decb
pop
jl
in
test
jbe
add
sbb
mov
adc
jmp
cmp
push
js
outsb
call
xlat
das
out
sub
adc
inc
jmp
xchg
into
xlat
mov
out
jno
imul
leave
sub
scas
and
push
push
test
lds
adc
push
cli
lods
mov
inc
ja
pop
dec
cld
mov
sub
or
fmul
jge
test
adc
or
add
int
push
enter
dec
adc
addr16
mov
pop
lods
mov
das
lea
movsb
hlt
fdivl
xor
jbe
mov
sbb
adc
mov
sub
xchg
imul
cltd
dec
out
mov
sbb
int3
or
les
mov
mov
pop
inc
inc
jl
arpl
xchg
loope
pusha
inc
shll
test
mov
out
mov
in
cmpsb
inc
rclb
xlat
inc
dec
in
divb
and
insl
and
sub
insb
xchg
inc
sub
xchg
repz
cmp
std
dec
lds
sub
xchg
xchg
push
out
inc
dec
sbb
add
cmp
adc
les
dec
and
lock
mov
test
xchg
cmc
mov
lea
xor
adc
pusha
out
ret
pop
cmp
imul
nop
jns
rorl
stos
mov
mov
les
fisttps
mov
or
xchg
sahf
test
cli
sub
fistl
xor
cmpsl
jle
andb
outsl
mov
sbb
test
popa
push
dec
mov
xchg
xchg
inc
jmp
mov
add
loop
pop
sbb
movsb
out
dec
xchg
out
inc
jnp
push
push
stos
dec
lds
adc
jae
test
push
movsb
mov
addr16
mov
stos
ljmp
cmp
mulb
adc
adc
mov
jbe
mov
decl
stos
sbb
movsl
cmp
imul
mov
test
and
insl
inc
xchg
mov
and
movsb
hlt
aas
into
pop
xchg
in
std
outsb
movsb
push
in
mov
xchg
mov
ret
dec
mov
cmp
dec
cmp
cmp
lahf
sbb
pop
push
mov
jae
push
loope
movsl
push
or
mov
adc
and
movsl
sbb
imul
pop
lret
int3
cmp
cmp
rolb
cltd
pop
or
je
inc
clc
mov
rclb
lcall
fidivrs
fildll
out
cmp
pop
rcl
andl
mov
repnz
cltd
adc
mov
stos
push
dec
push
push
in
xlat
mov
adc
push
loope
les
xor
enter
mov
stos
adc
adc
sub
jge
sub
lahf
sub
push
push
dec
jle
bound
jmp
pop
push
fbstp
stc
adc
or
fistps
mov
or
scas
shll
jae
inc
pop
sbb
aad
int3
add
std
cli
les
jg
sahf
cmp
enter
pop
imul
lods
hlt
roll
push
pop
xchg
sarl
gs
jne
sbb
rcr
daa
mov
bound
mov
jg
xchg
shrl
fildll
push
pop
outsb
sub
ret
add
push
xchg
lock
mov
push
cmp
clc
xchg
std
xchg
test
jo
mov
pop
and
push
loope
xchg
maskmovq
rol
test
jb
pusha
loopne
std
sbb
push
pop
pop
and
sbb
dec
scas
nop
in
ret
jb
adc
push
in
stos
enter
fldcw
negb
shrl
jbe
push
hlt
sbb
cmp
add
dec
sbb
fs
icebp
outsl
repz
adcb
mov
out
minps
jne
fldt
xchg
nop
mov
or
add
mov
mov
jmp
xchg
outsl
push
ret
pop
shlb
xchg
lea
sub
into
mov
rclb
xor
add
lahf
sub
aam
cmp
stc
cmp
repz
cld
inc
inc
frstor
cli
fucom
jle
ffreep
sbb
cmpsl
jge
ret
callw
les
sbb
lret
xor
or
xor
mov
add
mov
cmpl
fistpll
jns
adc
stc
loop
ljmp
cmp
movsb
lret
lds
int3
cmp
data16
xchg
aam
mov
or
dec
jo
jae
mov
jo
lahf
and
or
mov
repz
mov
fnstcw
fisubrl
add
jp
xor
mov
js
and
xchg
jl
ja
mov
test
imul
fsubr
cmp
inc
out
xchg
bound
iret
jno
add
xchg
inc
movsb
inc
movl
mov
fwait
mov
test
scas
out
mov
addr16
imul
pop
fcmovnb
loope
mov
adc
popa
jl
shlb
lret
mov
cmpsb
lds
pop
adc
lock
das
aad
scas
mov
dec
mov
lods
jecxz
jo
imul
jnp
mov
mov
mov
lret
leave
xor
test
fnstsw
movsb
shlb
inc
fstps
sar
xchg
jae
imul
push
ficoms
fdivr
adc
gs
mov
xor
pop
shrd
mov
add
push
mov
jecxz
adc
and
xchg
insb
jge
adc
dec
hlt
and
mov
stos
bound
out
and
out
push
cwtl
addr16
inc
mov
rclb
mov
mov
xor
mov
std
and
mov
jmp
pop
cwtl
stos
cmp
ljmp
xor
add
ja
add
xor
mov
jg
je
ljmp
cmpsl
aad
jo
insb
out
lret
sub
jb
ret
cmp
mov
negb
out
stos
xchg
inc
pop
pusha
mov
push
mov
movsb
mov
popf
popf
inc
xchg
sbb
sahf
fwait
push
daa
xchg
cmp
imul
jmp
into
add
xchg
fwait
sub
mov
dec
adc
add
xchg
mov
xchg
inc
adc
add
xchg
loopne
ret
popf
push
cli
call
jle
outsl
xor
pop
gs
jnp
mov
jnp
xchg
push
push
in
cli
std
ljmp
movsb
fstpl
dec
dec
movsb
fmul
mov
mov
or
mov
jbe
xor
pushl
xchg
jno
mov
mov
mov
xchg
mov
stos
inc
or
sarb
jns
push
adc
and
inc
je
std
insl
dec
fs
bound
or
imul
pop
popa
cld
rcrl
xchg
mov
es
stos
push
push
sbb
jnp,pt
push
mov
fisttpll
or
jae
push
movsl
mov
gs
xchg
push
pop
sbb
mov
mov
mov
jnp
jmp
stos
aam
sub
sub
gs
pop
mov
gs
pcmpgtb
into
xchg
inc
pusha
outsl
lods
xor
ljmp
dec
dec
clc
jne
xor
sarb
pop
dec
cltd
mov
adc
push
jp
cltd
xchg
cmp
aam
sahf
in
sti
push
jns
fsubrs
lds
or
jno
jns
sub
loope
cltd
xchg
and
adc
fmuls
movsl
xor
xchg
cmpsb
or
imulb
addr16
pop
ret
push
in
sub
cs
int3
cmp
fnsave
add
loop
xor
test
inc
pop
lea
aas
sub
xor
dec
sub
xor
imul
inc
inc
cs
popa
push
jbe
testb
push
push
xchg
jp
sti
mov
xchg
add
lock
and
pop
fsubrl
push
or
addb
add
jecxz
dec
in
pushf
dec
push
mov
mov
and
mov
shrl
leave
push
mov
leave
dec
sbb
iret
xor
or
or
add
cmp
add
xchg
ss
inc
push
jp
dec
js
adc
ds
and
xchg
cltd
jmp
push
int3
lgs
xor
outsl
sbb
jl
sbb
pusha
aaa
rcrl
jl
pop
and
ret
jne
inc
aam
out
pop
push
mov
repnz
sub
sub
adc
aam
scas
xchg
out
push
jg
jg
rcrl
cwtl
xor
push
xchg
mov
adc
xchg
xor
lcall
stos
jo
fsubrl
push
dec
cmpsl
jo
jo
div
out
imul
int3
idiv
mov
cmp
movsl
jb
shll
xchg
leave
mov
ja
repz
push
psubsb
mov
fistl
jno
add
mov
movsl
dec
adc
or
jo
pop
fisttpll
fisubs
mov
scas
xchg
fdivl
clc
cwtl
testb
jecxz
out
stos
nop
and
aad
xchg
sub
push
fisubs
cmp
adc
gs
jmp
or
jl
mov
ret
pop
cmpsl
and
fxch
push
pop
jp
mov
pop
int
outsl
cmp
movsb
sbb
mov
test
mov
mov
call
mov
xor
repnz
shrb
loop
push
sub
leave
and
fisubs
cmp
jl
rcr
pushf
jmp
in
xchg
lcall
test
fbstp
jmp
shll
roll
jp
pop
xchg
pushf
in
loop
hlt
push
cmp
daa
ljmp
dec
mov
or
fildll
out
mov
gs
pop
rcll
je
hlt
and
daa
dec
cs
int3
fsubrs
jns
push
jne
mov
sub
in
call
or
sbb
aad
adc
popf
xorl
inc
xor
mov
call
imul
pusha
and
jge
out
mov
cmc
dec
adc
addr16
mov
in
iret
fsubrl
and
dec
out
cmp
in
lods
add
and
push
jnp
test
dec
mov
divl
cld
push
push
or
xor
and
ret
out
scas
cmpsb
push
ss
inc
cmp
xor
out
and
xor
jne
fnsave
jg
test
dec
aas
mov
gs
mov
dec
int3
jne
pop
popf
sar
pushf
xor
and
addb
inc
into
ss
lods
insb
or
lods
les
imul
repnz
and
movb
adc
sbb
mov
mov
gs
mov
lock
hlt
or
pop
icebp
loope
arpl
adc
xor
or
popa
pop
or
cltd
mov
stos
cmpb
out
inc
jl
movsb
movsb
cmp
insb
mov
pop
mov
dec
pop
push
push
cli
push
sbb
xor
fwait
add
and
xor
rol
sti
iret
push
fs
mov
fs
mov
out
cmpsb
lea
sub
and
sub
jne
inc
loope
or
outsl
pop
xchg
cld
call
inc
imul
and
aaa
mov
add
mov
push
and
xchg
xor
or
mov
pminsw
jno
xor
and
xchg
shl
ret
push
add
cmc
hlt
jbe
fsubrl
stos
cmp
scas
js
out
dec
shll
std
fisttpll
in
sub
xor
jecxz
fsts
mov
insl
fcom
cs
or
mov
lds
fcoml
sahf
inc
mov
faddl
sub
mov
mov
jae
adc
pop
cmp
push
loop
scas
adc
xchg
sub
adc
ss
cwtl
test
cmc
lahf
adc
out
dec
lahf
pop
std
repnz
stc
pop
rolb
push
aad
movsb
and
inc
and
cmp
push
jo
sub
rolb
cs
fcomps
test
sti
and
rclb
sbb
movlhps
sub
or
sub
mov
arpl
fsubrp
and
shr
cmc
cmpsb
in
lods
cmp
imul
inc
cld
fs
ljmp
gs
lret
add
push
cwtl
mov
add
fscale
lds
xor
gs
cld
mov
mov
add
das
scas
js
push
and
fistpl
les
xchg
cli
popa
mov
orb
imul
mov
mov
in
inc
hlt
cmc
fisttpl
jno
movsb
or
jo
push
push
add
cmp
sbb
sbb
lock
sbb
push
out
fcoms
pop
sarl
ds
dec
sbb
add
xor
sub
popfw
bound
out
pop
out
shll
icebp
mov
out
inc
loop
cmp
jge
push
lock
out
or
push
out
fsub
push
fnstsw
in
mov
dec
test
pop
mov
out
jb
push
dec
imul
inc
fidivs
bnd
cmp
es
nop
cmp
daa
loop
andb
int
mov
cmp
out
and
pop
adc
gs
call
mov
ja
dec
dec
loopne
rorl
lea
pop
xor
cmp
scas
lods
mov
mov
dec
xchg
imul
xlat
adc
bound
inc
jl
jae
out
cmc
imul
push
push
mov
lahf
cmp
dec
mov
dec
inc
iret
hlt
mov
mov
xchg
xor
xor
push
in
rorb
lret
mov
and
sarl
lcall
add
sub
stos
xchg
mov
mov
ja
scas
mov
sti
add
inc
in
je
push
xchg
mov
mov
imul
adc
cmp
adc
or
push
pusha
sub
mov
lods
xlat
scas
test
cmp
outsb
mov
decb
dec
pop
dec
in
inc
stos
adc
sub
hlt
mov
in
xchg
or
sub
mov
int
cmpsl
mov
notl
dec
ja
add
xchg
aas
shlb
xchg
or
das
jmp
sbb
sbb
bound
addr16
mov
sub
add
xor
sub
jg
adc
mov
dec
pop
jno
sahf
inc
mov
cmp
adc
in
and
and
aas
into
das
cld
jp
out
jno
jle
lock
jne
pop
fs
sbb
popf
mov
jo
call
jge
repz
dec
sbb
test
mov
cltd
dec
inc
stos
push
adc
mov
frstor
push
pop
mov
dec
mov
lock
pop
je
mov
xchg
cmc
cmc
leave
mov
rolb
sti
dec
aaa
push
cmpsl
push
lmsw
das
jmp
int3
jo
xorl
imul
sbb
mov
mov
adc
add
cmp
mov
les
out
je
or
mov
icebp
cwtl
sahf
std
addl
add
enter
inc
push
mov
pushf
test
mov
pop
out
mov
aaa
push
sbb
mov
jno
filds
fs
sahf
or
data16
adc
dec
lods
lcall
int
pop
mov
or
inc
stos
push
test
enter
adcl
sub
push
jmp
pop
jp
pop
stc
ss
das
add
arpl
out
xor
popa
lds
mov
stc
xchg
les
add
loop
lcall
mov
fldcw
jecxz
and
scas
insb
repz
mov
xor
addr16
mov
jg
hlt
mov
jp
imul
aam
mov
int
cmc
xor
fstpt
stos
mov
dec
aam
sub
es
call
in
xchg
aam
xchg
pop
or
mov
mov
ret
loopne
and
jl
test
xor
sbb
fistpll
pop
inc
push
adc
test
pusha
push
shl
xor
bound
push
into
out
fbstp
push
dec
lahf
dec
mov
push
mov
subb
lret
adc
sbb
imul
sbb
aas
xor
jns
mov
xor
sub
and
iret
mov
mov
mov
push
dec
test
dec
mov
xchg
pop
inc
sub
lods
popf
inc
inc
hlt
xor
cmp
fisttpl
ficomps
xchg
les
dec
repnz
mov
outsb
push
roll
ret
sub
cmpsl
push
mul
jb
adc
or
push
dec
daa
xchg
mov
inc
cmpsb
xchg
mov
shl
call
cmp
xchg
sub
lret
push
inc
xchg
cmpsb
mov
push
add
pop
sbb
popa
loope
fsts
xchg
pop
loopne
nop
and
pop
inc
mov
lock
inc
dec
xchg
adc
push
push
mov
lcall
jns
out
js
fsts
jbe
das
es
shl
mov
add
or
cmpb
pop
sub
cmpl
les
mov
outsl
loope
sub
dec
rcrb
enter
jecxz
sub
add
fcoms
lods
fistpl
enter
push
popa
aam
outsl
xchg
addr16
push
aas
dec
mov
mov
push
add
mov
jno
cmpsl
push
jo
xchg
inc
xchg
enter
xchg
int
in
dec
cmp
push
jge
jle
lcall
fxch
les
rcll
sbbl
and
cmp
sub
int3
push
and
fldt
pop
mov
xor
les
and
imul
outsl
fwait
dec
popf
mov
xchg
fstps
and
test
pushf
cmpb
cmc
lret
js
push
stc
mov
repz
or
mov
sbb
ret
fs
xor
jo
nop
mov
inc
mov
into
pushf
pushl
or
xor
popf
movsl
adc
stos
xchg
push
mov
or
or
dec
movq
and
xlat
shrb
push
push
movsl
insb
insb
xchg
cmpl
js
ljmp
jno
xor
mov
push
xor
sti
leave
rcll
hlt
orb
inc
push
cld
sbb
mov
into
repz
mov
jmp
mov
jb
sbb
and
sub
adc
jns
lods
jmp
and
push
xchg
mov
fbstp
mov
sbb
dec
adcb
lock
mov
aas
js
loope
mov
popf
cmpsl
adcb
mov
bound
rolb
sbb
adc
add
pop
std
sub
clc
push
lcall
sti
adc
in
or
fiaddl
and
pop
xchg
lods
mov
adc
aad
ds
mov
push
mov
push
pop
popa
xchg
mov
in
adc
fs
outsl
sbb
mov
mov
sub
add
mov
xchg
stc
xchg
or
iret
shlb
cmc
mov
test
or
popf
and
movsl
aas
nop
cli
mov
addb
popa
cmp
cmp
pop
in
push
adc
sub
imul
cmp
mov
sahf
lret
js
jg
mov
nop
ja
mov
cltd
cmpsl
jbe,pn
push
push
movl
lds
loopne
sub
xchg
movsl
xor
xchg
and
ret
frstor
push
jne
mov
fcmovbe
pop
xchg
in
insl
aas
insb
pop
fwait
cld
scas
push
jnp
add
jae
dec
jle
mov
movsb
fstl
jecxz
movsl
xor
cld
int3
mov
ret
rclb
lea
xchg
jae
arpl
outsl
sar
rorl
pop
xor
repnz
add
sub
mov
xchg
loop
addps
push
fucomp
and
xchg
or
shlb
jb
out
in
es
aas
and
sub
enter
stos
sbb
leave
out
lods
jp
or
call
cmp
dec
add
jmp
lods
jge
les
inc
dec
movsb
pop
pusha
or
sub
mov
sbbb
or
aas
xchg
sub
mov
ret
stos
aad
xor
push
jbe
mov
test
cmp
xor
inc
pop
xchg
test
outsl
lock
pop
sbb
jp
out
mov
sub
mov
rdtsc
mov
outsl
ds
lds
rorl
add
pop
flds
and
mov
idivl
mov
push
movb
cmp
xor
or
xlat
inc
dec
xchg
mov
or
sbb
jno
in
and
pop
adc
add
or
cli
je
mov
adc
pop
cli
leave
or
pop
mov
mov
in
lret
addr16
mov
mov
jp
shlb
loope
aad
mov
jns
mov
movsb
dec
or
push
in
sub
jmp
and
hlt
repz
add
add
mov
test
les
xchg
mov
xchg
mov
jb
xorl
sub
ret
lar
and
js
push
sub
mov
cmp
popa
dec
pusha
ret
mov
and
inc
ja
pushf
mov
fstps
enter
mov
jns
dec
faddl
inc
jns
sbb
sar
cs
sar
das
sbb
jnp
or
jge
cld
mov
pop
cmpsb
jb
lret
jmp
dec
scas
cmp
cwtl
ss
adc
test
jb
aaa
jno
mov
stos
ficomps
dec
pop
fsts
add
inc
add
pop
mov
mov
mov
mov
jge
cld
add
cltd
imul
mov
sub
push
mov
mov
mov
shlb
shr
and
mov
test
cld
movsb
dec
lods
sahf
mov
add
inc
les
in
jns
js
cmp
xchg
ja
rorb
mov
xlat
lcall
out
jno,pt
out
adc
out
lcall
push
pushf
pop
and
and
es
sub
test
mov
outsb
sbb
rcll
sub
cmp
clc
pop
popf
nop
or
cs
adcl
sarl
mov
fcmovnb
daa
pop
xchg
inc
mov
out
imul
je
cmpsl
sbb
mov
cmpsl
mov
dec
fwait
out
inc
fiaddl
add
jmp
or
cmp
lcall
dec
mov
lret
shl
adc
xor
xor
push
or
mov
cltd
mov
push
push
js
cmpsb
or
scas
hlt
and
inc
jbe
jno
jg
aas
mov
in
repz
xor
ret
js
jo
outsl
loope
inc
dec
adc
sub
out
add
lds
sub
dec
or
pop
les
das
pop
sub
fisttps
cmp
fadds
push
mov
pop
dec
sbb
adc
sub
in
mov
add
inc
popa
hlt
sbb
add
repnz
mov
fs
mov
stos
dec
movsb
mov
int3
dec
in
outsb
aad
jae
mov
shlb
es
fisubrl
ret
xchg
jae
fisubrs
lahf
dec
fbstp
insb
xchg
adcl
andb
repnz
mov
add
jnp
xorb
cmp
mov
imul
or
mov
das
lahf
repnz
sahf
in
lret
mov
into
fldl
mov
add
mov
lcall
out
push
int3
sub
iret
pop
jle
push
and
or
cmp
xor
xor
subl
hlt
and
arpl
cmp
das
aam
cmp
or
jp
scas
dec
daa
mov
stc
sbb
in
xchg
xchg
sub
jecxz
stos
test
fsubs
dec
lret
or
mov
push
jnp
mov
lock
jecxz
add
fadds
mov
and
enter
test
push
cltd
mov
jbe
push
aad
out
dec
mov
imul
and
xchg
int
outsl
addl
fchs
cwtl
pop
test
mov
mov
mul
adc
std
dec
mov
and
icebp
pop
xchg
lcall
xchg
rdtsc
xor
xchg
lcall
jae
lret
cmpl
cmp
cmpsb
fnsave
add
mov
xchg
sub
cltd
jle
test
mov
cmp
leave
movsl
sub
int3
jp
mov
push
mov
hlt
and
mov
push
jae
imul
or
inc
jp
pop
adc
dec
push
push
imul
xor
mov
orl
pop
add
insl
fdivrl
adc
fcmovne
in
repnz
insl
push
cmp
orb
push
in
js
xor
aas
enter
popa
jp
rclb
mov
dec
lret
outsl
in
inc
xlat
das
je
adc
jp
pushf
arpl
in
jmp
shlb
cli
push
push
xchg
outsb
inc
lcall
mov
pop
mov
and
add
sbb
jnp
inc
subl
sbb
mov
push
xchg
sub
jmp
filds
rclb
and
bound
lods
push
fstl
cmc
mov
mov
es
adc
sub
xchg
or
cmp
outsl
xchg
xchg
lods
cli
test
adc
inc
jbe
rorl
cmc
lods
xlat
mov
out
iret
test
add
inc
adc
mov
jl
cmp
xor
cmpsl
inc
jmp
jne
dec
push
mov
pusha
jge
inc
fbstp
mov
lret
sbb
sub
insl
roll
xchg
pop
cmpsb
dec
cmc
mov
lahf
lds
or
adc
push
jge
jbe
mov
movsl
xchg
push
lock
add
adcb
sub
pop
xchg
jmp
shrb
call
push
enter
incl
mov
cs
cs
test
ret
call
call
and
aaa
addl
mov
pop
push
mov
dec
into
inc
or
mov
jbe
or
push
aad
out
fists
cmpl
adc
mov
addl
inc
xor
jp
es
faddp
rcrl
out
add
mov
sbb
data16
or
imul
out
or
mov
ds
mov
mov
adc
pop
xor
jno
imul
inc
ficompl
out
bsf
add
and
cltd
xchg
sbb
and
incb
cltd
sbb
jnp
mov
pushf
push
aam
mov
mov
add
cmp
nop
aam
imul
add
jo
adc
or
push
mov
into
data16
ss
jecxz
or
dec
mov
imul
push
pop
sbb
sbb
adc
ljmp
sub
mov
in
or
in
into
and
popf
jae
in
mov
cmp
int
repz
lods
push
cmpsl
adcl
jp
sbb
mov
push
mov
fnsave
cmp
in
mov
inc
cwtl
add
fbstp
cld
mov
mov
fwait
inc
pop
lret
lock
call
xor
in
adc
mov
movsl
add
jae
dec
pop
fmuls
gs
xchg
push
mov
dec
and
mov
mov
xor
insb
test
push
mov
outsb
cmc
testl
popf
sti
inc
xchg
adc
and
mov
push
shrb
testb
sub
or
cmp
movsl
jg
ud1
fld
add
scas
wrmsr
cs
cmp
mov
leave
push
sarb
popf
pop
mov
nop
inc
jle
cmp
and
jl
jp
in
movsl
lret
incb
cltd
cmpsl
dec
sbb
outsb
and
cmp
add
inc
rolb
pop
add
pushf
cwtl
inc
clc
mov
pop
sahf
pusha
fbstp
call
faddl
std
jl
mov
data16
andb
into
je
ret
jg
repnz
xlat
pop
nop
and
lock
outsb
sbb
test
and
leave
and
pop
es
push
jnp
cmpsl
pop
cmpsl
mov
cmpsl
pusha
stc
dec
loopne
les
xchg
rcrl
shll
shr
xorb
inc
cmpsl
lods
sub
setge
cld
cmpsb
les
add
jne
adc
js
push
mov
sbb
inc
in
cltd
popa
popa
sbb
mov
xchg
scas
inc
cld
mov
mov
adc
arpl
jl
ds
push
inc
iret
dec
movsl
mov
stos
and
test
adc
ficoms
cs
pop
sbb
stc
push
cli
shrb
jg
popa
and
mov
add
inc
test
test
loop
jmp
xchg
sub
sbb
sbb
xor
cwtl
insb
js
push
inc
inc
rcrl
or
xor
loop
scas
xchg
mov
insb
pop
das
add
popa
push
xor
aas
sbb
ret
ss
xchg
out
mov
fucom
adc
movsl
out
js
int
sbb
adc
mov
push
pop
scas
movhps
loop
jae
xor
mov
hlt
mov
pop
lret
jp
pusha
push
cmp
or
jecxz
pusha
xor
insb
jle
mov
mov
push
aas
insl
cmp
arpl
in
testl
sub
add
divb
mov
pop
into
mov
cwtl
ficompl
push
lods
in
mov
xchg
idiv
ss
adc
mov
arpl
divps
xor
andb
outsl
cmp
adc
pop
loope
and
xchg
clc
and
call
ja
mov
jl
stc
jns
addb
push
mov
mov
lods
mov
stos
rclb
add
mov
mov
inc
jle
aam
adc
cmc
mov
jge
imul
xor
and
jp
xchg
test
mov
arpl
mov
std
outsb
add
scas
and
mov
pusha
cs
fdivs
jecxz
lods
faddp
jp
and
leave
scas
xchg
adc
jae
cmpsb
inc
stc
mov
adc
xchg
push
aad
sti
push
sbb
mov
mov
adc
cmp
mov
loope
mov
xchg
inc
and
loop
dec
dec
cmp
addl
inc
out
decb
xchg
mov
adc
xchg
jle
cmp
mov
mov
dec
pushf
inc
mov
outsb
loop
lret
xchg
inc
notb
js
rcl
leave
loopne
repz
pop
push
loop
js
cld
push
movsl
and
out
sahf
loope
imul
popa
je
gs
jno
int3
jb
lahf
pop
out
adc
movsl
push
xchg
jae
xchg
xor
or
pop
adc
mov
lock
jns
pop
adc
mov
cmp
inc
xor
jmp
stc
mov
or
xor
fldt
sbb
add
imul
inc
ret
cmp
mul
cmc
push
shrb
and
inc
mov
mov
xchg
xchg
fld
jno
mov
dec
mov
icebp
sti
add
call
arpl
mov
sbb
xchg
mov
lods
add
pop
sub
and
dec
inc
cld
test
xorl
cltd
mov
inc
mov
jno
leave
jnp
scas
mov
into
fisubs
cli
mov
cmpsl
shll
xchg
cmp
ret
xor
arpl
movsb
mov
cltd
mov
cmpb
jge
xchg
push
loope
sub
shrb
int
xor
pop
xor
loopne
iret
out
lahf
lock
loopne
xor
mov
xchg
cmp
out
shll
push
mov
fidivrs
iret
mov
daa
outsl
out
cmpsl
sahf
and
cmp
mov
test
dec
pop
jle
orl
je
pop
stos
jmp
insl
adc
and
daa
push
call
inc
jae
sbb
xor
nop
adc
mov
mov
lcall
or
fcmovne
mov
dec
fcoms
loop
rcr
scas
xlat
jge
paddusw
and
push
shrb
push
jae
add
xor
in
pop
cmp
int
push
frstor
jb
xorl
mov
loopne
movsl
mov
cmp
add
adc
fstps
stos
test
sbb
fld
mov
adc
and
aam
sub
cmc
cli
jns
aad
adc
or
pop
push
movsl
test
mov
sbb
pop
loope
dec
sbb
inc
cmpl
aas
into
cmpsb
rolb
lods
out
loope
jmp
cmp
inc
out
jno
outsb
mov
push
loopne
mov
shlb
orl
mov
loopne
sbbb
sbbb
dec
mov
mov
aad
xor
das
sbb
pusha
call
mov
sti
fisttps
mov
sahf
mov
in
jb
repnz
sbb
cmp
lds
mov
int3
stos
jmp
popf
mov
sti
jl
std
pop
mov
jmp
ss
imul
adc
adc
inc
pop
mov
shll
insb
idivb
jns
faddl
lock
lds
fstl
adc
pop
mov
xchg
movb
dec
mov
loop
sti
jl
xor
test
lahf
fdivrp
cmp
insb
and
xchg
dec
pusha
push
push
mov
popa
aaa
mov
mov
inc
add
pop
and
cmp
ljmp
out
cld
cmp
cld
mov
jns
hlt
and
dec
pushf
ljmp
out
pusha
daa
jns
cmp
popf
sbb
pop
in
test
jmp
rcrl
test
ljmp
into
imul
xor
insb
inc
mov
loop
jns
and
cmp
cli
push
lcall
lahf
jo
sbb
pushf
xor
mov
and
dec
ficompl
in
cmp
out
test
cld
pop
lahf
and
inc
addl
aas
stc
pop
sub
call
cld
add
push
xchg
rolb
jge
push
jmp
test
pop
mov
loop
aam
call
scas
data16
sbb
mov
ficomps
jne
stos
pop
stc
cli
xor
pmuludq
dec
scas
or
incl
dec
xchg
and
or
push
fwait
xor
xlat
xchg
scas
sbb
xchg
sub
pop
mov
repz
cmp
xchg
cs
aas
push
xor
int3
push
mov
mov
mov
dec
xchg
pushf
mov
arpl
and
jl
sahf
stc
negl
sub
adc
and
dec
popf
sbbl
mov
in
jbe
sub
jb
jp
mov
fstpt
stos
call
inc
cmpsl
xchg
ja
inc
icebp
dec
lods
xor
jp
mov
fs
movsl
cld
ret
fxch
cmp
or
stos
cwtl
xor
icebp
popa
or
inc
test
repnz
cmpsb
mov
in
or
js
pushf
xor
push
sarl
pop
test
bound
inc
dec
jb
fidivs
int
loop
mov
scas
gs
rolb
add
popa
cmp
fisubrs
cs
push
push
insb
adc
lock
pop
push
mov
mov
push
movb
xchg
or
mov
mov
jne
incl
sbb
push
imul
sti
mov
ljmp
cmpl
lds
out
jecxz
mov
push
and
in
add
not
pop
pop
push
and
mov
shll
stos
cmp
and
sub
mov
and
sub
fincstp
aad
aad
jecxz
xchg
jle
dec
add
xor
repz
xor
inc
movsl
push
mov
scas
add
std
fwait
add
mov
jbe
ljmp
int3
lcall
cmp
dec
mov
icebp
pop
mov
mov
mov
adc
inc
movsb
dec
addr16
dec
xchg
mov
in
lret
data16
xor
cmpsl
sarl
popa
fucomip
xor
es
sarb
rcrb
sub
outsb
pop
cmp
loop
or
mov
in
ljmp
inc
push
test
outsl
rcrl
mov
dec
int3
in
icebp
cmpl
xor
subb
test
rcrl
pushf
cld
aad
mov
jmp
int
fdivrl
adc
cmp
and
push
xlat
adc
and
int
ficoms
test
sub
dec
cs
aaa
cmpsb
out
cmc
int
insl
shr
mov
cmp
sarl
das
xor
push
roll
sarl
mov
arpl
mov
imul
cwtl
sub
xchg
sti
rclb
dec
jge
ret
push
stos
into
cmp
xchg
ret
pop
cwtl
std
sbb
mov
paddusb
stos
pusha
in
subl
les
push
repz
xchg
gs
add
mov
or
or
mov
mov
sub
mov
sub
setb
shrl
ja
and
sti
adc
hlt
lcall
or
jno
jae
or
rclb
dec
test
setg
or
push
adc
jl
and
stc
aam
aad
jl
cli
xchg
out
cmp
pusha
jne
push
ret
cmp
xchg
mov
ljmp
push
sub
mov
add
insl
push
in
pushf
test
fnstcw
xchg
cld
or
cmp
push
sub
mov
out
mov
or
in
dec
mov
mov
stc
ds
ja
out
xchg
push
adcl
jns
imul
mov
shrb
jecxz
xchg
pop
popl
outsl
inc
adc
jns
push
js
inc
jmp
push
jge
jns
js
or
test
mov
out
dec
cmp
fidivl
pop
cmpb
popf
add
adc
jp
int
dec
fstps
repz
bnd
cmp
and
and
mov
jo
jl
lret
loop
pushw
xchg
out
imul
fistpl
cmovb
lret
sub
out
cmp
push
pop
test
and
psrlw
add
or
mov
sub
jns
mov
and
cmpsb
idivl
push
jae
xchg
sub
out
out
jae
add
cmpsb
in
add
push
fmuls
push
sub
fidivl
mov
je
enter
mov
jns
pop
push
fistpll
aas
test
js
and
ret
sub
sahf
adcb
xchg
dec
jle
fldl
jmp
push
dec
lret
sub
sbb
sub
push
idivb
pop
push
in
out
pop
and
cmp
add
sahf
inc
aaa
fidivl
pop
jg
xchg
pop
arpl
add
call
repz
sbb
mov
bound
push
pushf
out
xor
aas
aas
push
dec
push
subl
cmp
sub
insb
xchg
arpl
fwait
push
push
into
sbb
pandn
cltd
or
add
rcr
jmp
mov
out
in
sub
dec
xor
inc
push
pop
add
popf
pop
dec
loop
in
inc
or
sahf
rol
push
pop
mov
sub
xlat
aaa
subl
pop
push
loopne
xchg
jge
shrd
sahf
xor
add
push
xchg
pop
xchg
out
loop
addr16
in
cmp
int3
dec
cmpsl
pushf
aas
xor
nop
dec
scas
mov
add
dec
mov
adc
stos
ljmp
ret
pop
xchg
mov
mov
ds
or
sub
xor
out
jno
sub
scas
sub
sbb
add
mov
nop
arpl
push
out
xor
xlat
add
test
xor
or
test
stos
pop
sub
loop
adc
jb
les
gs
lods
push
xor
insb
shlb
push
mov
inc
xor
inc
jo
mov
mov
push
push
fisubs
push
or
xor
cmpsb
lods
imull
sub
lea
adc
addr16
lahf
arpl
scas
cli
mov
imul
pusha
jge
popf
stc
or
dec
xchg
push
sar
jnp
fs
jmp
sti
and
jle
sub
jl
jbe
adc
xchg
adc
xchg
cltd
dec
imul
xchg
aas
push
and
jecxz
in
popf
add
dec
add
fldenv
sub
jl
lret
enter
icebp
dec
mov
cmc
xor
popf
fisubl
pop
add
cmp
loope
dec
icebp
inc
pop
sbb
ja
in
daa
sbb
cmp
bound
ret
popa
cmpsb
test
lret
dec
jle
decl
xchg
cld
sqrtps
mov
adc
or
mov
jo
mov
mov
in
test
jg
stc
adc
rolb
sub
loopne
xor
mov
insl
add
or
aad
add
adc
pop
mov
sub
and
sub
fs
addr16
jo
pop
aam
mov
lret
movsb
push
sbb
jle
repz
movsb
cmp
sahf
scas
mov
xor
pop
sbb
pusha
in
adc
xor
test
sbbl
cmpsb
lods
in
loopne
int3
xchg
jp
or
mov
sbb
push
and
sub
push
pushf
loop
sbbb
lods
add
xchg
pop
push
ds
out
add
xorb
mov
loop
pop
add
jno
or
ret
jmp
addr16
sub
push
outsl
mov
sbb
fld
popf
and
mov
lcall
cwtl
add
aaa
stos
mov
fsubrs
mov
adc
mov
xchg
and
or
pusha
sbbb
sti
mov
icebp
enter
push
push
decb
or
ret
imul
adc
in
sbb
push
and
das
xchg
mov
daa
sbbl
jp
xchg
dec
adc
ficoml
cmp
shrb
insb
ljmp
movsl
or
bound
xor
cmp
inc
adc
lea
aad
pop
lds
dec
cmpl
inc
std
loop
add
xchg
dec
das
sti
xor
aaa
je
addl
or
lods
int
xchg
test
push
sub
sarl
test
or
cwtl
mov
mov
sub
jnp
jo
inc
push
push
ljmp
mov
lret
insl
cli
xchg
enter
inc
in
mov
push
mov
mov
nop
xchg
add
shrb
mov
sbb
into
push
repz
jg
test
repnz
cmp
inc
cmp
dec
scas
inc
lods
adc
jmp
test
test
jns
xor
dec
push
fiadds
jle
mov
mov
stc
mov
xor
jl
out
mov
mov
xchg
in
push
pusha
dec
nop
xor
xor
in
dec
pop
xchg
add
pushf
fstps
lahf
leave
adc
jae
pusha
cmp
or
movl
cmp
mov
cmp
fstenv
mov
sbb
jle
push
pushf
imul
mov
push
sub
and
outsb
push
lods
js
stos
sub
pop
inc
loope
cmp
imul
insb
imul
push
jl
mov
outsl
stos
imul
test
fidivrl
rcll
pushaw
inc
into
or
aas
mov
lret
add
xorb
aam
push
pop
fcoml
adcb
rcll
inc
out
hlt
xchg
test
mov
dec
adc
inc
iretw
mov
xor
fs
dec
js
mov
pop
cmp
xor
mov
outsl
and
stos
daa
imul
add
arpl
int
inc
xchg
sbb
shl
cmp
incl
mov
imul
stc
popa
dec
repnz
aaa
test
dec
mov
scas
out
dec
ficomps
mov
jge
imul
push
mov
push
cmp
inc
aam
pop
jle
cmp
add
ljmp
or
fnsave
add
lret
ja
outsl
pop
data16
mov
pop
les
jbe
push
in
sub
add
and
aad
sbb
daa
lret
rcr
test
mov
adc
cmp
in
pop
movsb
jge
int3
outsb
dec
in
lods
dec
outsb
or
notb
out
insl
mov
rorb
in
cmp
mov
shlb
bound
loop
pop
out
aam
enter
push
jnp
push
int3
inc
pop
fistl
cmpsl
jo
inc
add
push
push
out
frstor
jae
mov
cld
fsubs
lret
xchg
and
cwtl
out
jecxz
add
lea
xor
test
adc
repz
push
mov
rorl
iret
das
cmp
aas
pusha
adc
jbe
or
or
inc
in
mov
cltd
sbb
ss
jmp
xchg
push
fldcw
icebp
mov
out
push
lret
dec
fs
push
pop
pop
or
fwait
sbb
cmp
dec
or
xchg
std
stos
xor
xor
adc
mov
movsl
ret
testb
cmp
sbb
arpl
mov
lret
nop
push
add
cmp
sarb
test
cli
mov
mov
mov
aam
mov
int
test
inc
movsb
insl
mov
mov
push
dec
and
xchg
and
movaps
dec
inc
std
mov
xchg
adc
aas
shld
shll
test
lds
pop
and
sub
addb
cmp
inc
jns
lods
push
xor
or
mov
sarb
push
cmp
mov
ljmp
loopne
dec
push
jnp
in
popa
sub
xor
push
push
inc
and
sbb
lahf
xchg
ljmp
cwtl
cmpl
fwait
sbb
in
movsb
or
test
and
and
sbb
loope
test
adc
rcrl
mov
mov
ret
iret
aad
or
test
cmpsb
hlt
pop
adcb
jno
xor
xchg
in
negl
push
lods
cwtl
lock
in
push
adc
ret
mov
xor
popf
incb
pop
xchg
shrb
fsubr
test
mov
push
xchg
add
in
subl
sub
pop
xchg
insl
rorl
ret
mov
arpl
jne
int
out
mov
in
jmp
sub
push
mull
push
mov
pop
mov
pushf
mov
loopne
outsl
outsl
lret
and
sahf
push
cmp
mov
test
test
jg
add
mov
xor
adc
loop
les
and
int
scas
fs
sarb
test
mov
mov
cld
lret
xor
jbe
loop
scas
in
cmp
mov
xchg
or
fstps
cmp
add
sbb
out
out
repz
fdivrs
call
int
mov
fnstsw
push
pushf
jle
int3
in
sbb
push
and
pop
and
xor
mov
inc
or
jmp
test
pop
test
push
pop
lret
inc
jb
and
outsb
push
or
and
xchg
push
jnp
jg
xor
jg
cmp
int3
in
inc
pop
fnstcw
adc
pusha
dec
pop
jno
popa
pop
fsts
sbbb
cs
mov
fwait
push
inc
aad
mov
cmc
cwtl
idivb
hlt
fisttpl
fbstp
sbb
lds
xor
cld
push
mov
and
jp
pop
rolb
jae
or
xchg
dec
push
aas
pop
movsl
adc
xchg
push
pop
lahf
sbb
push
and
jp
inc
or
orl
mov
dec
int
jo
call
imul
insl
js
jmp
push
sub
cmp
aam
ja
xor
push
bndstx
sbb
dec
xor
mov
test
lods
fldl
cmp
aad
mov
push
sub
insl
mov
add
sub
push
or
test
push
mov
scas
stc
ror
dec
push
mov
dec
jg
mov
insb
pop
mov
mov
push
mov
gs
ds
xlat
sbb
mov
and
lahf
lods
push
pushl
push
pop
aad
xchg
andl
ret
outsb
lret
and
sti
dec
stos
xchg
arpl
call
and
mov
test
adc
and
sahf
adc
outsb
aad
mov
fdivrl
in
push
mov
aam
add
jp
enter
sbb
or
pop
lock
and
insl
cmp
xor
aaa
xlat
insb
stc
cmp
ret
xchg
mov
mov
adc
sbb
fsubs
mov
lods
jmp
repnz
sub
mov
dec
lea
fistpl
mov
dec
repz
frstor
ljmp
scas
es
cmp
cmp
out
cmp
xchg
negl
cli
ljmp
ja
dec
sbb
mov
fidivrl
insl
dec
in
dec
adcb
nop
in
xchg
outsl
fnstenv
cmpsl
mov
scas
imul
mov
xchg
nop
push
sub
xchg
jb
mov
stos
aaa
mov
mov
aad
xor
push
cmpsb
or
out
into
jb
mov
loop
jns
sbbb
fcmovbe
cmp
sbb
sarb
dec
xor
or
cmp
test
jge
mov
push
mov
ret
jbe
jnp
in
outsl
jae
and
mov
int3
add
mov
sbb
mov
push
rorl
fisttpl
fdivrs
out
mov
insl
mov
pop
mov
jg
push
jg
imul
popf
fwait
outsb
fbld
cwtl
dec
test
fidivrl
dec
mov
cmp
push
int
es
mov
int3
lahf
push
flds
push
cs
fwait
push
or
xchg
cmp
xor
outsl
fadd
mov
xchg
es
mov
insl
xor
shlb
inc
pop
js
push
sbb
adcb
jmp
testl
jbe
inc
rorl
stos
std
adc
pop
sbb
sub
add
jne
jb
stc
xchg
xor
orl
testl
push
and
sbb
pop
cmp
jb
jp
test
stc
mov
out
sub
dec
stc
xchg
lock
inc
lds
sub
dec
push
xor
les
mov
dec
mov
push
mov
push
outsl
jne
sub
daa
shr
push
call
mov
leave
or
and
push
mov
cmp
test
loope
cltd
mov
in
int3
inc
mov
sbb
or
fdivrl
aas
std
ror
int3
lods
add
mov
mov
rorl
cmp
fcoms
rclb
call
inc
out
popa
aam
ja
int3
cld
out
pop
cmovbe
iret
fnstcw
test
xchg
nop
mov
dec
inc
inc
ja
les
lock
mov
pop
add
push
rolb
jno
in
or
mov
loop
cmpsl
and
cwtl
push
outsl
dec
jo
inc
test
lea
and
lods
lds
adcb
mov
cmp
cmp
sub
ret
fimuls
das
in
mov
nop
jl
cmpb
outsl
je
sub
daa
daa
into
iret
test
sti
loopne
dec
cmp
fcompl
or
mov
in
stos
push
dec
mov
sub
pop
ljmp
push
lret
decb
xchg
in
inc
ja
jae
test
mov
xchg
fnsave
mov
mov
das
sbb
stos
push
lea
cs
cmpsb
data16
jne
cltd
cmpsl
sahf
sub
cmp
push
sbb
push
jns
stc
jp
cmp
cli
cmp
mov
xchg
or
loopne
in
shll
andb
jl
jle
cmp
dec
mov
pop
mov
ret
inc
rorb
pusha
pop
jbe
rorl
out
lods
push
pushf
push
jmp
and
mov
les
bound
leave
lock
push
insl
enter
jne
icebp
sbb
adc
mov
mov
jmp
mov
mov
cld
jne
add
jg
mov
pop
xor
cs
iret
mov
lods
adc
fnstcw
aad
movsl
or
pop
lahf
and
icebp
push
movsl
jno
fldenv
push
pop
das
iret
sbb
inc
adcb
push
sbb
movsb
cwtl
fisubrl
inc
sub
adc
pop
mov
jle
in
pushf
xor
or
lret
cli
stc
in
cltd
push
leave
jno
ss
mov
and
mov
mov
xor
sub
add
mov
or
pop
jecxz
in
outsl
pop
adc
xor
andl
add
and
dec
or
pop
mov
je
or
psubw
inc
jmp
lods
shlb
dec
testl
lds
sbb
lods
push
icebp
push
sub
jmp
or
or
test
mov
adc
loopne
sbb
sbb
add
mov
jg
push
inc
scas
je
or
addr16
xchg
into
sarl
or
rcr
xchg
xor
outsl
stos
jg
ja
adc
addr16
ret
cld
pop
cmp
jno
imul
leave
shll
rcrl
pop
mov
imul
cmp
insl
enter
jnp
dec
gs
pop
xchg
adcb
mov
mov
jno
lahf
cmp
sub
lock
add
negb
fimuls
mov
rcl
inc
jnp
cli
lahf
out
pop
fcompl
jbe
test
mov
fmul
inc
adc
leave
in
pop
mov
and
es
xchg
jne
jns
daa
outsb
sub
call
push
stos
in
jnp
and
jle
mov
fidivrs
lods
stos
add
shll
subl
roll
cmp
xchg
xor
hlt
sub
xchg
js
mov
je
xor
xchg
cmpsl
cs
movsb
mov
and
cmp
enter
xchg
pop
movb
push
jbe
ret
addr16
dec
xchg
dec
fsubs
test
xchg
and
fmuls
jb
mov
mov
add
mov
cmpsb
imul
fidivrl
rcll
mov
or
and
pusha
js
js
fidivrs
fisubl
push
jno
xor
cli
dec
fdiv
lods
ficoml
repz
xchg
dec
pop
mov
push
cld
jecxz
pop
mov
xchg
lret
inc
add
pusha
cmpsb
add
fstp
xor
push
lahf
xchg
rcr
add
popf
daa
orb
push
inc
andb
shll
jmp
test
fists
dec
rcrb
add
xchg
or
inc
xor
dec
insl
add
mov
loope
jno
xchg
frstor
jo
gs
imul
lds
js
xchg
adc
test
cltd
ret
or
repnz
call
xor
lods
lods
pop
mov
add
sbb
inc
sbb
xor
ja
negb
hlt
jbe
mov
enter
or
js
aaa
jne
cmpsl
jmp
ds
ficoml
cmpsb
out
jmp
mov
adc
fmul
mov
mov
mov
adc
sti
xchg
insl
mov
mov
dec
shlb
sub
xchg
out
fwait
add
stos
xor
jmp
add
cli
mov
or
outsb
or
mov
je
aas
or
add
movsl
jne
mov
movsb
pop
fdivrl
repz
fisubl
sub
inc
xchg
and
jb
mov
negb
sbb
insb
das
fsubl
bound
mov
bound
push
pop
or
push
cmp
gs
xchg
add
shll
dec
aaa
hlt
shl
add
push
pop
fimuls
mov
dec
and
out
xor
push
and
push
jl
inc
cld
mov
loope
and
sbb
jne
dec
xchg
mov
movsb
jl
push
push
fisubl
stc
sbb
xchg
or
ret
xor
pop
mov
fisttps
jp
push
sbb
cmpsl
or
and
xor
daa
jbe
out
mov
adc
xchg
jge
cs
addr16
es
xchg
lret
outsl
ret
scas
lea
mov
or
scas
int
or
addr16
xor
lock
dec
xchg
pushf
push
aaa
dec
sbb
imul
push
pop
and
inc
fsub
dec
sahf
shl
enter
add
dec
sbb
lods
pop
je
mov
jbe
hlt
jne
ja
outsl
sarb
shll
movb
sbb
adc
ret
sbb
or
mov
jnp
adc
pop
pop
mov
int
add
imul
outsb
push
dec
jne
test
mov
add
repz
pop
movsl
fdivl
int
cs
jae
mov
movsb
adcb
mov
ret
inc
das
cmp
pushf
xchg
xchg
arpl
and
cmpsl
mov
push
push
xchg
fbld
test
inc
test
xor
cmpsb
std
xor
mov
insl
jne
xor
orl
ljmp
pop
cmp
sub
fucom
adc
out
cmp
jge
out
lret
scas
fcmovu
bound
out
mov
push
push
sub
mov
scas
xchg
push
shr
adc
dec
jmp
sub
adc
mov
sbb
or
pand
dec
xchg
into
and
ret
cmpb
and
cmp
cmp
adc
ret
aaa
stc
mov
jno
inc
adc
mov
bound
aas
dec
insl
push
inc
idiv
push
andb
daa
mov
xor
mov
psrlw
int3
jge,pt
push
push
sub
pop
popf
mul
jo
repnz
dec
lret
jl
sbb
or
lds
int
push
rolb
dec
cmp
lret
mov
outsb
hlt
movsl
ljmp
xor
loop
test
cmp
jg
adc
inc
lods
adc
movsb
inc
jbe
cmpsl
ss
mov
mov
or
dec
jbe
push
rorl
xchg
ds
mov
sub
in
data16
neg
xchg
cli
sahf
ja
inc
stc
sub
add
addr16
push
fwait
imul
adc
mov
mov
es
adc
rcll
push
movsb
sub
sub
outsb
sub
popl
loopne
fcomp
sub
ljmp
sbb
mov
cmc
mov
lcall
cmp
mov
dec
cmovl
lret
test
jnp
xchg
push
leave
sub
in
add
cmp
fnstcw
lret
test
cltd
stc
xor
outsb
loopne
gs
fsubrl
imul
mov
cmc
test
lret
xchg
cmp
push
and
adcb
leave
adc
js
shll
xchg
or
outsl
dec
or
cmp
mov
fcomi
hlt
push
mov
stos
mov
jg
push
incl
jnp
gs
mov
push
jb
std
pop
dec
dec
dec
movsl
sbb
dec
es
fcoml
pop
sub
xlat
mov
into
repz
xor
outsb
push
in
mov
push
outsb
mov
ljmp
out
push
popf
pop
lahf
sub
cmp
sub
xor
fdiv
adc
adc
sub
xchg
addr16
outsl
sub
sbb
push
test
and
jno
jno
push
rep
cmp
cltd
shll
mov
lret
push
repnz
xchg
je
les
aaa
cs
arpl
pop
hlt
inc
pop
inc
mov
and
add
rolb
lock
dec
mov
dec
nop
popf
xchg
dec
int3
sti
dec
dec
inc
bound
out
sti
mov
scas
cmp
and
push
movsl
xchg
push
pop
iret
mov
add
sti
mov
imul
ljmp
dec
outsl
int3
add
mov
jbe
repz
push
xchg
decl
push
or
lea
lock
mov
or
add
pop
jp
jp
mov
sub
fidivrs
arpl
jge
jbe
mov
mov
lcall
mov
ss
enter
inc
repz
aad
pop
jno
sti
push
scas
add
lahf
cmp
sbb
imul
shrb
push
push
push
inc
mov
sahf
hlt
fisttpl
push
test
ljmp
sbbl
in
push
enter
icebp
fsubs
or
mov
sub
dec
lahf
imul
loope
in
sbb
ljmp
icebp
stc
jbe
clc
mov
fwait
xor
sbb
scas
test
hlt
dec
out
out
and
pop
nop
sbb
cmp
cmpsl
lock
js
mov
push
push
jecxz
jge
mov
inc
das
fabs
xchg
ljmp
lret
call
lods
mov
xor
push
out
xor
mov
mov
xor
cwtl
or
gs
mov
cmpsl
sub
sarb
testl
adc
push
cwtl
orl
sbb
mov
stc
dec
sahf
mov
and
sti
shrl
jne
xor
mov
out
dec
pop
mov
lea
push
insl
stos
jp
call
iret
loop
dec
clc
rdtsc
xorb
jp
mov
frstor
jmp
inc
js
mov
xchg
mov
add
mov
cmp
add
pop
cmp
adc
sub
add
ljmp
pop
pop
mov
sbbb
xor
fbstp
xchg
ret
xchg
les
mov
das
cmp
push
cmp
insb
pushl
mov
jmp
ficomps
std
cmpsb
mov
roll
stc
es
repz
xchg
das
cmp
cmp
pusha
xor
arpl
cmp
mov
andb
pop
lcall
fisttpll
fnstcw
mov
jl
inc
mov
xchg
mov
stc
jbe
or
cli
ret
lods
add
push
dec
int
fwait
sti
or
into
push
into
sbb
sahf
and
mov
xchg
mov
xor
faddl
mov
xchg
pop
imull
push
mov
out
dec
fidivrl
mov
sub
fadd
data16
in
into
pop
xchg
ret
icebp
pop
mov
cld
adc
shl
and
or
jo
lret
sbb
lods
adc
mov
jmp
loop
clc
or
fistl
add
fdivrl
xor
inc
add
cmpb
jnp
gs
cmpsl
xchg
cmpsb
loop
sub
paddsb
or
sub
iret
lods
sub
mov
mov
xor
lods
xchg
aas
es
jmp
jp
mov
in
ss
fiadds
lods
mov
push
push
push
push
ja
jo
bnd
xorb
cmp
cmovge
push
or
es
cmp
jbe
data16
inc
jb
pop
out
cmp
xchg
add
ss
icebp
inc
push
psrlw
cltd
or
push
dec
flds
aam
inc
xlat
rorb
sub
fistpll
jg
popa
incl
fcmovu
mov
inc
and
das
test
and
jne
sub
js
cmpsl
add
dec
mov
cltd
xchg
jb
or
and
ljmp
sub
push
sub
je
cmp
js
lret
or
sbb
movsb
js
inc
sbb
push
pop
loope
mov
sbb
dec
lods
add
int3
shll
jp
xlat
cmp
or
pop
leave
test
in
mov
cmp
jns
xchg
mov
sahf
outsl
ret
test
shlb
popf
push
andl
ret
push
ss
add
adc
popa
jne
jl
test
mov
inc
pop
xchg
insb
add
cltd
cmp
scas
lcall
ret
or
xor
clc
outsl
sub
mov
jno
jge
jle
jg
and
jae
cwtl
inc
dec
mov
sbb
test
movsb
aad
out
lcall
call
or
pushf
inc
and
pop
popa
add
jae
rclb
negl
jns
dec
out
or
shlb
fwait
push
faddl
inc
in
scas
cli
inc
xor
loop
xchg
iret
xor
test
in
jmp
insb
dec
stos
int
jno
push
loop
jle
out
and
pop
mov
std
inc
pop
filds
jne
sbb
out
dec
cmp
and
adc
and
int3
push
xlat
jmp
rclb
pop
icebp
gs
cmp
adc
punpckldq
repz
data16
in
insl
xchg
push
mov
mov
pop
xchg
fadds
push
nop
adc
or
cli
iret
push
pusha
int3
xor
fcmovu
dec
cmpsb
mov
movsb
sbb
mov
cli
cmc
or
xchg
scas
rclb
and
mov
cmp
pop
mov
dec
outsl
scas
not
rorb
mov
xor
push
or
lret
push
test
movsl
cmp
or
stos
or
add
jg
movb
dec
aaa
jecxz
ficoml
je
stos
aam
es
insb
aaa
dec
int3
out
and
pop
xchg
ficompl
sbb
sub
add
xchg
or
cmp
rcrl
dec
fisttps
push
rol
fsubs
int3
jbe
test
xor
aam
pop
popa
daa
push
sbbl
insl
out
jo
and
fldcw
and
imulb
cmpl
jmp
push
mov
pushl
inc
mov
mov
mov
int3
or
shrb
jl
adc
cwtl
popa
stos
xor
mov
lds
xchg
adc
sti
arpl
bound
fbld
adc
in
mov
shll
xor
pop
lods
sahf
mov
pop
sub
xor
adc
fdivrl
out
ret
push
icebp
xchg
cmp
push
jb
addl
adc
dec
and
pop
rcr
dec
xor
sub
mov
jne
or
inc
loopne
lock
imul
xor
hlt
in
ss
mov
sub
xor
xor
xor
inc
mov
xchg
pop
stos
or
mov
test
sbb
cld
mov
dec
je
mov
push
pop
int
pop
push
out
dec
inc
push
sub
ljmp
pop
loope
xchg
cmc
fwait
rcl
out
sub
dec
jae
xor
or
inc
mov
adc
inc
cmc
std
sbb
dec
aam
mov
sbb
jp
lds
lea
aaa
mov
jnp
dec
pop
sub
hlt
sub
in
insl
aad
or
ljmp
cmp
sub
pop
xor
arpl
mov
cmp
cwtl
mov
add
insl
aam
ret
xchg
aaa
bound
ss
cmc
pusha
repnz
out
out
push
mov
test
cmpsb
ret
mov
push
arpl
into
pop
test
add
dec
fs
movsl
in
popf
cmp
sbb
inc
mov
out
sub
jg
mov
lret
mov
adc
test
sbb
mov
cld
jmp
mov
adc
sbb
jae
fisttpl
in
sbbl
dec
lcall
std
out
inc
ret
or
dec
mov
pop
js
push
mov
xor
dec
and
xlat
test
aam
fwait
cmp
pop
sub
inc
push
push
fdivr
adc
gs
push
pop
mov
stc
je
rorl
filds
xchg
mov
lods
jo
fwait
das
push
shrb
mov
xlat
loop
mov
pop
in
sbb
push
sahf
xor
gs
stos
add
adc
or
xlat
pop
ds
mov
and
mov
js
pop
sbb
jbe
movsb
gs
int3
push
dec
fimull
movsl
rcrb
sbb
push
adc
fdivrp
popa
mov
dec
arpl
cli
int3
xor
add
std
sub
mov
mov
cmc
mov
clc
test
or
mov
sub
sub
int
push
stc
pusha
gs
cmc
sti
lea
lahf
dec
cmp
add
sub
push
pusha
stos
cmpsl
mov
pop
pop
leave
test
jmp
jbe
jae
aas
xchg
loopne
mov
push
xor
jne
jbe
xabort
sub
mov
cwtl
movsb
sub
inc
jne
fisubrl
mov
shrl
adc
jno
rorb
jae
push
pop
popa
jle
add
xchg
int
out
cmp
shlb
dec
jle
inc
push
flds
inc
mov
jne,pn
mov
or
push
lea
mov
popf
inc
jo
xchg
add
adcb
push
push
mov
fildll
aaa
js
mov
ret
xor
loopne
push
push
sbb
es
xchg
les
loop
je
jno
mov
xchg
pop
or
jecxz
idivb
adc
cmpb
sub
mov
adc
out
mov
sbbb
movsb
icebp
dec
fwait
aam
call
mov
or
pushf
mov
adc
cmp
ljmp
sub
loopne
gs
push
cmpl
sub
jae
adc
and
add
jge
call
pop
aam
popf
scas
cltd
jnp
sbb
xor
mov
pop
jo,pt
jle
dec
adc
cmpl
cmp
cmp
lea
mov
and
or
jp
addr16
aam
sahf
mov
push
mov
pop
pop
mov
xor
out
push
dec
fs
lds
hlt
movsb
mov
xchg
dec
pop
jnp
dec
push
ss
cmp
or
hlt
cmp
icebp
pop
inc
outsl
push
lret
mov
sbb
mov
out
sbb
popf
es
jb
and
mov
mov
popf
addr16
insb
lret
mov
mov
mov
bound
sbb
in
inc
or
jmp
adc
shll
adc
pusha
xlat
sub
or
push
mov
aam
filds
xchg
push
into
test
iret
sahf
push
push
out
lock
fcoml
or
outsl
sub
jb
je
mov
fsubs
mov
mov
and
sbb
data16
cmp
sbb
push
dec
rol
push
jle
adc
roll
das
mov
dec
into
jne
es
outsb
mov
and
sbb
aad
les
dec
mov
and
add
loope
jmp
pop
pop
leave
or
test
out
clc
and
jecxz
xchg
lret
shrl
aaa
adc
pop
stc
into
cli
or
data16
xchg
repnz
jae
fwait
add
roll
adc
cmp
pop
jp
test
mov
dec
ss
adc
das
sarb
scas
or
aad
sti
mov
pusha
or
inc
adc
xor
pop
shll
sbb
inc
pop
mov
movl
insb
lea
xchg
outsb
pop
sub
ja
stc
orb
rol
xchg
xchg
mov
xchg
and
mov
std
xor
inc
push
jmp
popf
push
cmp
lods
js
stos
mov
daa
hlt
push
in
and
clc
add
fcomps
mov
ss
dec
pusha
shll
xchg
out
pop
xchg
cs
pop
inc
int
mov
mov
addr16
cmp
mov
cwtl
mov
push
dec
scas
cmpsl
mov
adc
shrl
lods
sahf
test
test
popf
in
pop
dec
push
jno
add
xor
mov
pushf
ljmp
fs
cmp
aad
fdivl
mov
fbstp
jl
push
mov
inc
fisttps
xlat
push
pop
popa
cmpsl
push
outsl
pop
push
xor
icebp
scas
mov
push
xchg
sub
repnz
push
call
push
sub
push
ljmp
xor
inc
jne
jmp
cmp
xchg
add
mov
or
push
cs
inc
dec
fsubrs
mov
ret
fwait
es
mov
pop
aam
pop
jg
inc
xchg
dec
cmpl
imul
xor
lods
cmp
scas
or
addr16
in
fidivrs
jge
xchg
mov
insb
push
mov
jmp
jle
loop
scas
std
mov
lret
std
nop
sbb
lcall
or
or
mov
adc
cli
das
push
enter
jbe
and
out
int3
xor
lds
mov
frstpm(287
pmulhuw
hlt
inc
and
pop
insb
cli
stos
fidivl
mov
mov
inc
lret
test
loop
xorl
pop
fisubl
jmp
mov
sbb
and
ds
jl
jp
movsl
sbb
xor
push
iret
aad
jmp
js
mov
and
jo
cltd
outsl
outsb
inc
pop
call
add
pop
jae
xchg
fs
mov
popa
add
je
mov
and
sub
or
clc
xor
addr16
sbb
inc
lds
xchg
in
and
jge
mov
ret
outsl
mov
mov
cwtl
mov
in
dec
js
sbb
repnz
xchg
pushf
pop
xchg
and
lret
jns
pop
imul
inc
movsl
mov
mov
xchg
cmp
aaa
push
push
sbb
push
inc
outsb
sarl
stc
hlt
and
mov
pop
jbe
dec
dec
aam
jp
push
jb
inc
mov
mov
cmpsl
idivl
inc
mov
daa
fcmovnbe
cs
mov
push
arpl
daa
push
insb
pop
xor
in
loope
xchg
xlat
and
dec
and
out
jmp
mov
lret
add
push
or
push
and
sqrtps
xor
inc
in
inc
jl
divb
push
or
push
cmp
popf
pop
xchg
test
add
shr
cld
negb
inc
mov
add
jmp
outsl
cld
jmp
cltd
dec
and
xchg
dec
ds
pop
or
js
popa
pop
test
jnp
adcb
push
push
pop
arpl
sub
adcl
jns
lcall
aaa
outsb
fsubr
fistpll
mov
faddp
and
fs
jne
out
and
iret
call
loope
or
lock
dec
es
fcoml
and
push
xchg
cmp
cmpsl
mov
jg
dec
and
shl
mov
mov
int
pop
lcall
xchg
jge
push
ja
into
shl
scas
sub
fstl
adc
test
iret
xchg
aas
arpl
movsb
sub
jecxz
pop
clc
gs
cmc
out
inc
popa
jb
insl
pop
loop
fadds
fst
push
cmp
fisttps
pop
scas
and
out
cwtl
leave
inc
aaa
and
je
cmc
scas
pop
movsl
mov
clc
jge
pop
sbb
lea
mov
and
mov
in
and
mov
or
pop
ror
jnp
mov
test
push
or
lods
out
into
lock
pop
pusha
or
movq
js
clc
jecxz
add
sbb
test
xchg
enter
adc
lods
mov
jle
sub
rclb
shll
hlt
test
cmc
adc
sbb
cld
cmp
iret
sahf
addr16
push
xor
mov
mov
imul
pop
mov
dec
or
pop
pop
pushf
add
fincstp
add
fmul
shll
xchg
inc
cmp
and
xor
shll
cwtl
sub
in
xchg
pop
push
loope
inc
fistpll
scas
cmp
sbb
mov
jge
inc
lds
repnz
lret
dec
jbe
fmull
fwait
and
gs
push
pop
and
xchg
push
fwait
push
adc
scas
fisubs
call
xor
and
je
out
or
lods
cmc
and
int3
mov
inc
sub
int3
roll
cmp
or
sub
cmp
xlat
inc
jge
adc
mov
arpl
das
mov
in
mov
xor
call
pop
shll
inc
fwait
inc
mov
outsl
in
jno
mov
adc
push
arpl
jge
test
or
cmpsb
popl
push
jl
mov
leave
mov
jne
lods
sub
cmp
dec
xchg
inc
pop
decl
mov
add
pop
sub
sarb
fcmovbe
cmp
pushf
sbb
xchg
adc
and
cwtl
adc
sub
pop
pop
hlt
or
mov
hlt
lcall
mov
inc
lcall
pop
stos
add
repz
andl
mov
jl
push
mov
sbb
pushf
cmp
in
jle
aam
dec
mov
imull
jbe
arpl
lods
mov
mov
add
push
enter
push
mov
xchg
mov
icebp
stos
sub
popf
cmp
inc
adc
mov
jbe
test
aad
and
mov
jecxz
icebp
adc
add
test
int
pop
iret
or
mov
xlat
ss
jae
dec
inc
lds
decb
mov
and
pop
xchg
std
inc
fisubs
cmp
sbb
iret
cli
adc
shrl
pushf
lds
gs
orl
repz
mov
and
aaa
movsl
int
xor
adc
push
cld
mov
repnz
aas
jnp
pop
shlb
and
lock
ljmp
imul
mov
adc
es
xchg
cld
xchg
ljmp
push
stos
hlt
pop
adc
cmp
sbb
movb
in
cmp
imul
jnp
jnp
inc
mov
mov
insb
in
mov
loope
shll
sub
jbe
cmp
mov
pop
cmpsb
sub
adc
outsl
aam
and
sbb
scas
call
aad
scas
aad
lock
insl
mov
jle
loop
xchg
ja
dec
xchg
cli
push
and
mov
sbb
rolb
rcl
mov
pop
testl
mov
jmp
xor
xchg
stos
dec
movsl
sbb
push
jle
mov
test
int
popa
adc
xlat
jecxz
shll
ja
sbb
stc
daa
cmp
and
inc
ret
sub
scas
add
div
or
aaa
pusha
sub
inc
inc
fdivrs
outsb
ficoml
nop
dec
lea
lcall
fimull
or
repnz
push
lret
mov
les
scas
pop
xor
rcrb
aam
mov
mov
push
jg
cld
mov
movsl
xchg
fchs
ljmp
dec
inc
cld
addr16
jmp
and
push
and
jbe
mov
xor
out
mov
hlt
cmp
jle
hlt
mov
dec
pop
sbb
enter
dec
push
in
das
mov
scas
jl
scas
mov
or
repnz
ss
dec
inc
or
aas
jo
mov
push
test
xor
mov
sub
xchg
icebp
jl
xchg
out
ljmp
in
cmp
adc
outsl
cltd
pop
and
fcomp
jl
jmp
mov
adc
add
in
stc
or
xchg
out
insl
jo
xchg
inc
cmc
popa
js
pusha
mov
mov
hlt
loope
sbb
ss
aas
std
test
jecxz
xor
outsl
pop
or
mov
nop
arpl
pop
sbb
aad
faddl
sbb
dec
or
or
aad
lret
icebp
xchg
push
add
ljmp
fistpl
push
sbb
inc
icebp
test
push
jecxz
rorl
outsb
mov
in
aad
bound
push
mov
jbe
lds
stc
cmp
lcall
mov
lock
cmp
rcrb
inc
loop
out
imul
jle
arpl
cmpl
sub
or
mov
jp
xchg
pop
jle
pop
cmpsb
lds
xchg
cmc
add
lahf
cli
sahf
or
cmp
sahf
jecxz
sbb
imul
icebp
popa
add
iret
adc
hlt
jg
pop
dec
jne
cs
les
xchg
icebp
in
sti
push
lea
in
scas
decb
mov
push
push
call
repz
negl
icebp
popf
es
sbb
sub
mov
addb
iret
fsubl
fnstcw
or
loope
out
mov
mov
enter
cmpb
aad
ficoml
or
jne
sti
andl
xor
jb
sbb
aam
test
notl
leave
pusha
jo
lcall
clc
jmp
loope
push
jo
sub
stos
jmp
icebp
outsb
popa
add
mov
mov
out
adc
cli
xor
nop
xchg
add
mov
sti
js
andb
mov
test
out
loopne
mov
movsb
pop
int
jmp
lcall
jecxz
lods
and
clc
repz
sahf
pop
add
ret
aad
fldt
jno
cmpsl
push
dec
sbb
ret
pop
dec
test
cli
and
lahf
pop
xchg
xchg
push
inc
push
adc
in
dec
push
iret
cmc
push
scas
or
dec
fs
ret
cwtl
call
mov
jecxz
pop
lods
leave
rorl
ljmp
dec
xor
push
cmp
repnz
stos
jo
mov
in
loope
or
adc
cmp
clc
or
jmp
push
insl
bound
sbb
hlt
xorb
pop
pop
push
mov
and
popf
imul
testb
popa
nop
inc
scas
adc
sub
and
and
add
mov
xchg
pop
mov
dec
mov
pushf
aam
jb
repnz
or
cli
dec
les
jge
pop
sub
and
dec
movsl
inc
cmp
xchg
jmp
jnp
sub
test
or
adc
add
cltd
inc
out
lea
jns
sti
ret
jno
push
fnsave
push
ret
and
cltd
mov
lock
popa
jnp
cmpsb
jmp
jecxz
xor
fimull
stos
xchg
scas
iret
addr16
test
test
inc
imul
sub
stc
push
rcl
cld
or
call
aad
add
dec
imul
and
ret
mov
or
loopne
jle
sub
aaa
cmp
sub
mov
adc
push
cmpb
out
mov
aam
ljmp
aam
or
and
jl
mov
nop
aam
in
cmp
fsub
enter
mov
std
sub
negb
dec
scas
roll
sub
imul
pop
test
mov
popf
test
mov
outsb
pop
and
rorb
and
mov
mov
add
inc
insb
mov
fs
dec
fdiv
sahf
xor
hlt
addr16
lds
stos
jo
andb
test
push
insl
scas
and
flds
add
mov
sub
jae
outsl
scas
xchg
stos
scas
fstl
jp
gs
mov
incl
mov
xorl
jle
mov
jl
ljmp
pop
pop
into
dec
push
xchg
in
cmp
mov
rcrl
push
fcompl
addr16
mov
stos
pop
rclb
pop
inc
mov
in
jecxz
cwtl
test
dec
cmpsl
into
xchg
aam
jne
or
push
ret
mov
repnz
dec
movsl
cli
adc
sub
sbbb
cld
stos
int
dec
sub
sbb
sub
out
iret
sub
jecxz
cmp
sti
sbbl
imul
je
mov
stos
pop
push
fbld
in
sub
lea
out
pop
jg
jecxz
fcmovbe
mov
pop
mov
ffreep
mov
dec
mov
cmp
and
test
jnp
jle
xchg
mov
mov
xor
repnz
xchg
lcall
fnstsw
jmp
mov
je
bsf
jb
cwtl
ss
ss
inc
mov
and
push
ret
ret
mov
out
movsl
inc
fld
fsubl
jp
push
jl
jns
and
icebp
xlat
gs
lods
dec
jle
pop
mov
jnp
or
cmp
mov
clc
or
jo
push
test
mov
fldenv
mov
int3
cmp
mov
imull
and
add
jle
fucomi
jo
fidivrs
fcoms
rcrl
scas
and
xchg
gs
into
push
sub
push
test
test
fldl
insl
int
test
push
add
add
idivb
arpl
push
inc
sbb
cmp
cwtl
fadd
mov
int3
mov
dec
mov
dec
xchg
pop
std
sbb
out
pop
incb
and
mov
pop
shlb
out
orl
sub
into
and
push
mov
aam
inc
and
out
mov
repnz
mov
adc
mov
sti
add
mov
faddl
gs
lcall
out
dec
dec
or
mov
js
adc
xor
add
mov
mov
xchg
adc
jb
lret
jmp
test
push
ds
inc
xchg
inc
mov
cmp
js
jne
div
stos
push
add
lret
dec
fcmovne
adc
jl
mov
push
cmp
jae
push
daa
int
jo
pop
mov
imul
push
lock
sbb
sub
in
loopne
out
sub
xchg
in
scas
dec
sti
jp
fwait
jg
cmp
in
popf
dec
inc
cs
jmp
adc
imul
lds
mov
xor
cld
test
pop
mov
jle
icebp
hlt
adc
sub
push
adc
lret
fldenv
loope
mov
scas
sarl
out
sbb
mov
and
inc
js
ss
iret
push
jo
add
inc
iret
jne
sbbb
add
jl
stc
mov
and
call
dec
xchg
repnz
or
ret
xchg
dec
in
push
mov
mov
data16
mov
cmp
sub
push
jge
and
inc
insb
movl
push
dec
lcall
inc
lret
adc
and
adc
ficomps
add
dec
imul
mov
test
pusha
mov
inc
sbb
mov
cmp
popa
sub
lds
cmp
pop
cmp
hlt
add
jl
daa
push
icebp
inc
dec
in
enter
and
fildl
push
pop
add
jo
in
insb
bound
mov
fs
xor
push
cli
inc
das
mov
xor
test
test
fs
sbb
popf
call
dec
mov
xor
sbb
sbb
mov
add
mov
mov
mov
lds
xchg
cld
mov
xchg
inc
jg
pop
stos
push
cmpb
ss
xchg
xor
arpl
out
stc
arpl
movsl
cmp
out
push
pop
sub
cmp
test
lahf
stos
add
pop
out
cmp
out
inc
cmp
in
daa
add
ds
add
sub
insb
imul
add
xor
les
inc
sub
and
adc
bnd
test
imull
rcrl
cmpsl
dec
jp
dec
adc
in
mov
jle
sbb
sti
add
adc
iret
lods
je
mov
decl
dec
inc
mov
mov
mov
xchg
xchg
cmpsb
jg
in
in
mov
aas
stos
les
lock
dec
pop
lea
xchg
push
pop
push
leave
add
or
faddl
adc
fistpl
push
inc
outsb
scas
std
mov
fwait
es
or
mov
adc
into
fsubr
push
dec
aad
mov
repz
fsub
iret
popf
lret
mov
xchg
or
gs
xchg
sahf
fnstcw
add
inc
mov
hlt
dec
aam
sub
lahf
out
adc
pusha
cmp
js
mov
mov
dec
pop
outsl
mov
jecxz
fsub
stos
js
addb
xchg
iret
jns
inc
adc
loope
inc
xchg
call
jae
mov
scas
xor
pusha
fisttpl
popa
into
xor
sbb
sub
sub
push
ret
pmaddwd
pop
pop
sub
iret
dec
sbb
test
ret
aam
mov
dec
and
jl
negb
inc
call
cmp
add
in
inc
mov
outsb
xchg
xchg
lret
pop
ds
push
mov
pushf
lcall
and
xchg
ss
sub
jno
andl
hlt
icebp
push
orb
jp
repz
in
jg
add
mov
inc
shrl
and
pop
dec
nop
ljmp
sub
cmpsl
or
mov
jp
push
mov
push
pop
sub
inc
jmp
jne
loop
dec
xchg
adc
add
mov
aam
out
in
scas
in
cltd
cmp
cli
pop
adc
cwtl
insl
jge
call
ss
sarb
dec
push
jne
sub
inc
in
jg
loopne
inc
jae
sarl
dec
hlt
fbld
xchg
inc
mov
fcmovu
pop
or
lret
stc
sub
inc
or
out
rolb
mov
pusha
mov
pop
or
lret
sub
xor
es
cld
loope
jmp
ds
imul
das
mov
push
cmc
inc
jmp
cmp
fsubrs
pushl
fimuls
jno
dec
xchg
xlat
pop
pusha
mov
scas
adcl
or
push
mov
dec
lahf
sbb
gs
mov
sub
xchg
aad
xor
add
cmp
daa
and
sti
mov
sahf
add
and
inc
popf
mov
ds
rol
and
cmp
fcoms
cmc
adc
cmp
add
addr16
jne
fistpl
mov
pop
int3
pop
add
in
mov
adcb
cmp
adc
xor
sti
sbb
adc
sti
xor
loopne
lods
push
daa
sub
jo
das
adc
outsl
sub
loop
dec
stos
loope
leave
xlat
mov
pop
mov
cmpsb
mov
insl
fs
lcall
sub
das
mov
adc
mov
fcomps
aad
and
cltd
xlat
std
je
or
mov
adc
pop
push
xchg
xor
sbb
js
mov
xor
sbb
bound
pop
ret
mov
cli
pop
cltd
rcll
pushl
sub
popa
sbb
or
daa
movsb
or
je
mov
sbb
add
imul
push
gs
and
jp
es
into
inc
dec
jecxz
test
idivb
enter
aaa
cmpl
or
mov
cs
adc
pop
ret
movsl
jns
sbb
mov
aad
in
pop
das
sbb
push
loopne
test
adc
adc
mov
out
fs
xor
shlb
pop
repz
add
dec
hlt
jl,pn
and
mov
in
xor
rclb
mov
gs
and
inc
lcall
sbb
aas
fimuls
inc
mov
hlt
xchg
cs
out
adc
or
or
mov
pop
cmp
xchg
push
xchg
es
les
mov
xor
inc
and
std
xchg
xor
jge
pop
in
xor
adc
stos
sbb
push
lcall
jp
pop
mov
add
lret
sub
inc
test
imul
pop
pop
mov
adc
sub
sbb
pop
gs
gs
sahf
js
add
aaa
cmpsb
xchg
sub
mov
mov
and
sarb
or
mov
or
push
inc
jns
rorl
lods
hlt
enter
mov
dec
in
mov
sbb
in
mov
enter
mov
xor
fs
lcall
cld
aaa
inc
dec
int
cld
mov
iret
arpl
das
aas
mov
fistpl
sbb
jecxz
dec
inc
jb
mov
pushf
sbb
mov
ds
pxor
pop
or
jg
jnp
fs
test
ss
cmp
orb
ljmp
sub
ror
loope
fucom
int
cmp
mov
sbb
cmc
outsb
pop
xchg
adc
add
lret
loop
jg
sub
sbb
xor
cltd
testb
xchg
cmc
sbb
push
inc
sub
adc
mov
mov
negb
mov
cmpsb
lahf
mov
cld
fistpll
pop
xor
stos
push
cwtl
xor
jp
xchg
sti
addr16
cmp
shl
mov
or
fildl
imul
adc
and
out
and
mov
ss
xchg
inc
aaa
xor
xor
sub
imul
xor
jo
ja
push
mov
dec
addr16
lods
push
sti
fildl
daa
mov
out
adcb
movsl
in
daa
sub
dec
xchg
mov
cmpsl
icebp
clc
cmp
or
outsl
push
mulb
push
xchg
je
dec
dec
test
test
mov
cmc
sbbl
les
sbb
scas
xor
aas
jmp
jnp
test
push
inc
jecxz
fwait
jp
out
cmp
nop
xchg
into
push
jmp
fisttpll
mov
mov
push
or
icebp
inc
adc
ljmp
sbb
pushf
mov
and
imul
mov
add
mov
jmp
pop
xchg
repnz
jle
sub
xor
push
aad
divl
jle
mov
fisttps
outsl
mov
pop
push
adc
ljmp
test
inc
xlat
cmpsb
dec
push
or
out
scas
cld
leave
mov
sub
stos
neg
and
mov
stos
imul
xchg
mov
jmp
jmp
cli
adc
stos
fs
aad
popf
push
out
jp
add
adc
nop
mov
js
add
and
sbb
fdiv
scas
ljmp
shrl
adc
lds
jnp
loope
lea
push
pop
enter
jns
iret
daa
add
xchg
mov
and
add
fstps
cmp
cltd
stc
addb
cmp
out
out
cmp
mov
cltd
jle
icebp
dec
jecxz
stos
and
fdivrl
out
sar
aad
jae
mov
sbb
pop
mov
sbb
lods
fwait
inc
in
mov
divps
xchg
lock
cltd
jge
popa
cwtl
pop
pusha
mov
in
sub
pop
sbb
or
int3
sti
cmp
xor
pushf
icebp
lods
jno
push
pop
test
insb
or
iret
sub
jns
das
jb
fdivrl
es
add
xlat
mov
lcall
or
rcr
imul
lahf
pop
adc
mov
popa
call
cmc
pop
adc
push
push
sub
pop
gs
outsl
and
add
rorb
sti
jae
out
xchg
pusha
mov
xchg
lods
jmp
xchg
inc
cli
cwtl
jg
std
loopne
xchg
sahf
addl
lods
pop
push
leave
sub
mov
scas
xchg
lret
negb
xchg
xchg
imul
jg
sbb
pop
ds
push
xor
mov
or
jmp
xchg
and
popa
adc
pop
pop
pop
ds
in
pop
lock
sbb
mov
mov
movsb
dec
dec
into
push
out
lock
xor
stos
sub
dec
xchg
ds
push
jno
cwtl
mov
jnp
jl,pn
popa
dec
outsl
fisubrs
adc
dec
sbb
pusha
es
in
imul
fsubrs
test
repz
xchg
xor
scas
fs
jne
or
loopne
sub
outsl
call
mov
push
mov
je
pop
xchg
stos
jno
idivb
in
sbb
inc
cmp
scas
push
xlat
rol
mov
jle
aad
int3
cmpsl
roll
mov
pop
js
mov
push
in
rolb
adc
icebp
js
push
add
mov
mov
xor
orb
cmp
ja
pop
mov
fwait
cltd
insl
call
inc
lahf
cmc
push
lret
inc
sbb
lods
stos
xlat
fimull
shll
push
out
and
sub
aas
or
xlat
dec
addr16
mov
test
pop
xchg
outsl
push
push
outsl
pusha
out
test
xor
mov
dec
inc
cmpsb
sbb
xchg
cmp
cmp
cmpb
jmp
mov
mov
insl
int3
arpl
ja
lret
mov
sub
stos
imul
lcall
adcb
mov
mov
insl
cmp
pop
ret
inc
adc
and
xor
int
push
jne
into
ja
stc
inc
test
popa
dec
add
push
ss
outsl
negb
iret
add
jecxz
sbb
ds
mov
jmp
test
andb
loopne
jb
shlb
ljmp
or
inc
mov
pusha
xor
add
push
cmp
ret
lcall
aaa
fiadds
xchg
mov
aad
cmpsb
test
std
loop
sti
gs
jb
test
push
mov
mov
aas
jg
iret
cld
xor
xchg
or
testb
aam
or
out
out
out
fadds
bound
push
shlb
dec
sbb
xchg
adc
lcall
ljmp
and
sbb
shl
dec
out
sbb
lret
adc
arpl
dec
lods
and
jne
push
mov
sbb
adc
mov
repz
in
adc
adc
cmp
jl
jne
xor
cmp
lret
dec
mov
fnstenv
test
imul
jmp
dec
lcall
add
fildl
mov
clc
xlat
or
fistpll
test
insl
aas
cmpl
fbld
fcoml
sub
test
push
mov
mov
and
mov
xchg
or
dec
fldt
test
popa
push
and
loopne
mov
lret
out
movsb
dec
mov
push
loope
cmp
out
or
pop
xchg
cmp
dec
sub
mov
push
mov
sahf
clc
push
loope
cwtl
push
sti
adc
fs
xchg
pop
loop
test
mov
lcall
hlt
dec
loope
dec
insl
imul
pop
jecxz
push
push
jno
cmpb
aaa
leave
jae
mov
xchg
stos
in
popf
pop
add
pop
cltd
pop
cvtpi2ps
loope
xchg
lret
cmpl
xchg
lret
or
mov
test
popa
lods
int3
das
mov
fidivrl
stos
jge
push
sahf
sti
push
subl
mov
ret
add
mov
jne
out
fwait
jl
je
adc
xchg
addr16
mov
or
or
ds
mov
inc
xor
sub
pop
notl
ljmp
ficomps
fidivrl
lods
dec
dec
loope
push
jo
dec
popa
nop
sbb
push
and
cltd
repz
xchg
in
dec
dec
push
int
sbb
cmp
xor
outsw
daa
and
mov
or
sub
jle
lahf
lods
ja
push
lret
loop
idivb
sti
jae
clc
int
mov
pop
adc
shl
test
stc
cmpl
jbe
mov
imul
inc
push
incb
cmp
stos
pop
out
subb
jno
jp
inc
push
push
fdivl
mov
fdivrp
mov
insl
hlt
cmpsb
inc
cmpsb
bound
stos
test
dec
stos
fsubr
in
xchg
stos
mov
inc
outsb
insl
and
push
jecxz
lds
pop
pop
pop
fsubl
pop
or
jbe
or
inc
aaa
stc
into
mov
das
movsb
add
sbb
lahf
lods
sahf
push
mov
ss
pusha
insl
inc
and
cwtl
inc
hlt
xchg
mov
lods
cwtl
pop
ja
sub
cmp
pop
mov
in
sub
jle
push
xor
mov
cwtl
add
inc
mov
test
sub
jne
xlat
test
pop
mov
and
lea
rorl
pop
aaa
jno
or
add
gs
mov
loope
dec
mov
inc
adc
das
cld
pop
xorl
icebp
jecxz
mov
lods
test
push
lock
fnstenv
push
jne
push
push
sbb
pusha
jns
scas
jle
sub
rcll
mov
inc
fsts
sti
lcall
pop
and
int3
insl
fimuls
mov
stos
pusha
adc
andl
inc
mul
lods
push
and
cmp
mov
movsb
adcb
shll
mov
leave
mov
pusha
fsubl
fistpl
hlt
pop
iret
push
adc
mov
popa
stos
outsl
mov
push
out
pushf
adc
adcl
lock
adc
imul
cmp
subb
xor
fld
roll
inc
jle
pop
sub
fidivrl
push
and
xor
sub
repnz
jp
ja
sbb
add
iret
cwtl
push
xor
xchg
mov
icebp
daa
adc
and
jge
dec
outsb
bound
enter
pop
mov
sub
push
in
ds
cmp
add
jp
mov
jns
sbb
lods
out
cs
inc
xor
push
pop
fsubrl
clc
mov
jge
jle
mov
bound
pushf
mov
push
icebp
mov
and
mov
mov
cmp
mov
pop
cmp
xor
outsb
jmp
stos
or
ss
inc
inc
push
stos
ret
std
fisubl
jo
add
pop
lret
mov
in
xchg
cmp
jle
mov
mov
pop
mov
mov
push
and
sub
aas
push
dec
adcb
push
js
pop
cmc
or
popa
insb
pop
nop
xor
push
enter
push
fbstp
mov
movsb
fistpll
aaa
jl
cmp
repnz
test
mov
bnd
inc
in
xchg
in
xor
cmp
sbb
iret
fisubl
int
repz
ret
loope
mov
add
inc
mov
push
jmp
mov
inc
sub
fidivrl
mov
loopne
xlat
and
mov
decb
orb
pop
jbe
cli
and
es
adc
scas
into
loope
out
or
ss
popf
push
fwait
aam
cmc
mov
mov
cmp
int
mov
cmp
hlt
scas
les
push
pop
test
jno
mov
fidivl
pushf
insl
pop
mov
add
sub
insl
fisubl
ret
aaa
pop
cmpb
dec
xlat
out
xor
roll
push
loop
jne
aad
xchg
pop
icebp
sti
and
or
clc
mov
stos
adc
scas
imul
lods
mov
scas
iret
lcall
add
push
outsl
movsb
xchg
dec
gs
mov
push
iret
mov
js
pusha
mov
pop
push
adc
jno
mov
sbb
and
dec
loop
in
xchg
mov
imul
das
cmp
push
outsl
movsl
cmp
insl
lea
pop
imul
xor
pop
js
pop
sub
loope
loope
pop
lods
enter
xor
inc
cmp
in
add
push
sbb
sub
xor
in
lods
push
dec
dec
into
pop
jl
pop
and
jno
sbb
add
rcrb
mov
mov
sbb
push
mov
lret
inc
popf
mov
mov
insb
andb
scas
push
mov
out
roll
fstpt
xor
arpl
aad
dec
lahf
popf
mov
popa
test
loopne
cmp
adc
popf
js
mov
mov
jbe
pusha
arpl
loopne
cmpsl
xor
popa
mov
out
jg
dec
daa
lret
adc
and
mov
test
or
aas
ds
aas
cmp
jo
fnstcw
xchg
mov
std
pop
testl
decb
ds
repnz
cmp
lahf
push
xchg
stos
mov
aaa
inc
jg
icebp
in
out
mov
dec
rdtsc
movsb
xor
jns
sti
fmul
lcall
jle
lds
cmp
xor
pop
fdivs
push
mov
decb
out
jnp
sbb
fimull
loop
ds
test
mov
test
mov
test
xchg
cmp
sbb
push
lea
cmp
stos
jle
lds
insb
mov
outsl
cmp
ret
push
or
mov
sub
adcl
adc
mov
pop
or
insl
out
dec
dec
imul
pushl
push
push
icebp
popa
mov
fcoml
xchg
mov
cmp
shrl
and
add
popf
push
outsb
outsb
popf
push
and
push
cmpsl
and
adc
and
jle
jge
imul
lds
outsl
ds
mov
xchg
jp
adc
and
inc
sbb
aam
inc
mov
mov
shl
mov
filds
imul
out
sbbl
ds
push
xor
aad
in
out
divb
std
repnz
mov
pop
add
dec
imul
xchg
mov
xchg
bound
fdivl
xchg
lea
pop
iret
and
ficomps
push
lock
notl
and
jnp
cmp
add
dec
cli
or
inc
fistpl
mov
test
or
pop
arpl
jp
push
repz
cmp
xor
test
loop
scas
in
and
pop
xchg
aam
add
sub
mov
fcomps
test
add
test
add
int3
and
repnz
mov
bound
filds
loope
jp
rcrl
sbb
mov
in
jmp
mov
andb
xor
jecxz
xchg
mov
mov
jns
movl
and
add
scas
pushf
in
and
jns
in
jl,pt
and
and
inc
inc
xor
lods
sbb
rolb
sbb
int3
lret
fcmovne
pop
enter
push
adc
jecxz
cwtl
pushf
push
outsl
fstps
jecxz
add
roll
insb
push
or
in
mov
aaa
cwtl
arpl
mov
repnz
xchg
mov
adc
das
xchg
and
add
sbb
mov
test
dec
arpl
pop
xlat
xorl
pop
pop
es
sti
outsb
ficomps
adc
jl
aam
insb
jmp
dec
add
test
addr16
mov
xchg
pop
flds
xor
outsb
xor
scas
inc
mov
mov
lods
lods
or
into
jg
and
sbbb
dec
mov
lfs
push
loope
imul
and
dec
or
mov
xchg
jecxz
xchg
call
jl
mov
idiv
pop
pop
test
adc
or
cmp
mov
in
leave
movsl
popa
loope
aas
push
rclb
test
mov
mov
mov
std
and
pop
test
jne
adc
iret
out
repnz
xchg
adc
fucomip
test
or
xor
in
mov
push
inc
dec
mov
mov
repnz
mov
leave
push
gs
std
sub
js
ja
and
jg
cmp
mov
repnz
push
xorb
mov
jge
lcall
mov
xlat
daa
pop
mov
mov
xchg
jmp
repz
mov
mov
pop
stos
mov
xchg
mov
xor
ljmp
aad
xor
cltd
jns
dec
movsl
test
and
jns
mov
in
jmp
adc
arpl
xchg
cmovns
fdivl
pop
lods
dec
repz
decb
xchg
mov
cmp
pop
mov
jbe
clc
push
outsb
loope
fcom
push
cli
and
lods
sbb
arpl
loopne
pop
mov
fisubl
test
inc
xchg
pop
mov
mov
fstpt
mov
pop
xchg
sub
fimuls
lea
insl
push
inc
pop
and
jns
pop
mov
cmpsl
cmp
out
roll
outsl
jle
je
or
movsb
in
pop
out
adc
aaa
lods
loopne
cmp
and
cmp
ds
aaa
aam
inc
loop
sarl
mulb
jbe
or
sbb
adc
iret
xchg
outsb
jo
sahf
jns
icebp
mulb
adc
ret
std
adc
inc
push
or
cmp
fisttpl
push
mov
orl
into
int3
jmp
jle
mov
xchg
aad
pusha
cmp
decb
push
arpl
xchg
ss
stos
inc
push
bound
mov
jmp
addr16
outsb
jl
cmp
call
pop
icebp
das
xchg
sbb
adc
jp
fwait
jbe
popa
jp
dec
aam
enter
mov
mov
ja
inc
sarl
add
jle
mov
add
or
lahf
push
sub
push
xchg
jae
mov
inc
inc
mov
or
cli
mov
inc
fwait
lods
add
add
jne
ljmp
imul
add
js
fcoml
xchg
mov
adc
and
mov
sbb
mov
sub
jo
jle
and
mov
mov
lea
push
sub
clc
repnz
cld
cmc
xchg
mov
int3
mov
lret
adc
pop
xchg
jle
mov
les
jns
or
dec
pop
in
fcoml
sub
es
daa
inc
ja
push
out
push
enter
into
pop
push
jo
add
sbb
inc
clc
xor
mov
push
lret
lea
adc
imul
repnz
sbb
pop
add
push
movsb
in
incl
stos
cli
pop
jnp
or
and
jb
lods
in
in
inc
rorb
inc
popa
add
lcall
lahf
sbb
imul
cmp
xchg
mov
and
dec
push
xor
test
pushf
push
mov
inc
jbe
mov
insb
lods
sbb
ret
loopne
insl
cmp
outsb
dec
cmp
push
push
clc
jge
fdivrp
or
and
jb
and
lea
enter
adc
jge
mov
push
fdivrs
add
and
or
add
test
push
test
outsb
imul
insb
xor
xor
sbb
out
es
roll
cmp
mov
pop
arpl
inc
and
andb
mov
arpl
into
ret
sbb
xor
pop
aad
or
dec
mov
lret
lods
add
jge
cmp
mov
fs
js
test
int
outsl
mov
in
stos
xchg
dec
pop
es
aam
inc
mov
cmpsl
ja
sub
mov
shl
and
ficoms
arpl
pop
cmp
cmp
and
fsubr
push
add
mov
mov
cld
cwtl
inc
aam
mov
xchg
mov
test
add
imul
test
mov
js
jg
outsl
in
pop
outsb
out
add
mov
loop
fisttpl
pop
enter
cmp
inc
push
adc
or
push
into
dec
je
arpl
pop
mov
pop
aad
add
mov
in
lret
mov
cmpsb
cmpsb
popf
mov
js
test
mov
insl
les
decl
imul
ljmp
pop
pop
mov
and
xchg
ret
sub
add
ja
ljmp
add
xor
sbb
movsl
xor
push
pop
cmp
xchg
add
scas
idivb
popa
mov
lahf
stc
pop
or
daa
cli
xor
jecxz
jp
lods
cmp
dec
xor
push
add
stos
jecxz
inc
jno
lods
mov
add
in
mov
hlt
ss
cwtl
or
in
popa
andb
jae
movsl
jg
scas
and
in
sbb
dec
pop
dec
xchg
sbb
xor
sub
xor
in
repnz
xchg
pop
orl
cli
mov
cmpsl
pop
push
mov
fwait
add
push
add
mov
popl
cmp
ficoml
push
loopne
lcall
xchg
scas
mov
movsl
mov
sub
les
adc
sbb
adc
lret
push
mov
cmp
stos
shll
lea
jae
lret
mov
jmp
mov
sub
mov
mov
mov
in
dec
xchg
xor
sti
mov
xor
mov
hlt
out
mov
in
xor
out
popl
adc
mov
into
hlt
in
jmp
sti
xchg
mov
in
pop
dec
xchg
push
push
cli
out
sbb
ret
mov
or
lret
sarb
sbb
std
imul
mov
add
mov
cmp
sbb
mov
sub
int
decb
jle
pop
insb
mov
adc
cmc
sbbb
popf
and
es
mov
or
adc
or
jo
adcb
xchg
inc
adc
das
mov
push
es
ret
shl
cmp
inc
ret
fucomi
imul
mov
int3
out
shrl
inc
xchg
push
mov
cmp
adc
sbb
es
or
and
loope
mov
fildl
push
inc
jmp
in
dec
or
push
add
ljmp
inc
or
sbb
ja
dec
nop
out
bound
cmp
pushf
mov
inc
cmp
jl
idiv
icebp
or
out
fs
or
test
xchg
add
ss
in
or
inc
scas
jae,pn
incb
cltd
dec
int3
mov
pop
in
repnz
push
test
mov
or
leave
nop
fwait
or
pop
xchg
lcall
cli
cli
xchg
and
ret
ss
add
add
ret
lcall
mov
mov
push
mov
push
mov
cwtl
lods
sub
adc
out
in
fwait
add
mov
jns
dec
sbb
inc
or
rorb
scas
lcall
push
and
mov
add
mov
iret
addb
cld
xchg
arpl
imul
or
clc
mov
inc
loope
add
arpl
push
sub
add
cmp
shr
or
sbb
dec
xor
movsl
rol
push
loopne
pop
mov
sbb
push
daa
std
stos
shrb
in
lods
cmp
mov
add
outsb
push
jne
sbb
mov
xor
push
mov
ja
and
fwait
vshufps
jl
pop
mov
leave
pusha
mov
cmp
repz
outsb
call
hlt
xchg
xor
mov
push
inc
jle
push
ljmp
push
jp
aad
cmpsb
xchg
cmpsb
xchg
push
or
cmp
in
pop
andb
push
ficoms
icebp
sbb
das
dec
and
pop
xchg
into
adc
cmp
mov
sti
sub
iret
popf
xchg
mov
bound
and
fwait
sbb
mov
in
cmp
out
imul
repz
push
and
into
loope
xor
adc
shrb
test
cltd
stos
sub
ljmp
test
lcall
adc
outsb
mov
cmp
push
and
lods
adc
sti
out
pushf
les
fbstp
add
mov
in
int
push
fmull
lret
or
aam
clc
je
jge
shlb
mov
icebp
ficomps
and
clc
push
mov
ja
js
mov
and
jne,pn
mov
adc
imul
mov
test
adc
out
fbstp
clc
shll
hlt
cmp
xchg
add
mov
out
int3
push
ret
xchg
in
fnstenv
mov
cmp
dec
cmc
arpl
jno
dec
stos
ss
push
cld
sahf
ret
adc
jmp
cld
pusha
stos
xchg
jne
dec
pop
add
std
pop
outsl
lret
enter
jmp
lret
hlt
fst
pop
pop
gs
adc
icebp
stos
in
push
jo
in
jge
inc
fists
ret
cmpb
mov
adc
xorb
nop
jne
stc
mov
std
or
cmp
push
std
cmc
sbb
cmp
cmp
rcrb
lcall
arpl
lock
mov
and
mov
adc
inc
clc
test
outsl
movsl
pop
cmp
cmp
mov
mov
add
cli
lds
pop
push
scas
cmp
js
int
adc
cmc
dec
subb
sahf
or
ja
mov
mov
sub
pop
shlb
outsl
push
push
or
or
clc
push
inc
in
popf
fsubrl
repnz
lcall
xchg
stos
es
out
icebp
movsb
test
mov
add
jle
pop
fildll
movsl
mov
adc
mov
dec
adc
addl
inc
jno
mov
adc
inc
in
pusha
movb
and
sbb
mov
cmpsl
and
adcl
out
xchg
inc
lret
xorl
lock
pop
test
add
incb
dec
jo
lret
mov
cmpsl
xor
cli
div
movl
jne
jns
and
sahf
mov
test
sbb
inc
push
test
leave
push
jmp
pop
dec
inc
mov
cmp
pop
adc
push
mov
loop
iret
pop
inc
xchg
xor
sbb
aas
data16
aam
mov
push
pop
push
jmp
aad
xchg
adc
stos
mov
rcrb
dec
push
adcl
xor
mulb
jecxz
push
lahf
mov
les
loop
call
je
aas
sbb
lods
jmp
outsl
inc
movsl
nop
popa
ror
mov
xor
out
xchg
shll
push
sti
inc
cmc
mov
add
xor
and
out
pop
les
aam
cmc
push
js
dec
jae
cli
pusha
repnz
std
shrl
aaa
sbb
sbb
pop
jmp
xchg
dec
xchg
fcompl
in
in
cmp
xlat
cld
pusha
fidivl
stos
pop
jbe
shrb
push
das
add
xor
and
sbb
mov
mov
pop
sub
push
cmp
mov
mov
fstpl
cli
popf
out
aad
and
push
hlt
adc
enter
gs
das
shll
mov
popf
push
push
es
xchg
jns
mov
jecxz
jecxz
shll
dec
push
xlat
mov
pop
adc
in
testb
fidivs
push
lock
push
jne
add
mov
popf
or
add
adc
fiadds
mov
les
fidivl
jno
inc
subb
jnp
ljmp
jge
xchg
mov
mov
cld
cwtl
sbb
xchg
xchg
mov
inc
and
stc
dec
xchg
mov
push
inc
mov
adc
fsubrs
fcmovne
adc
push
push
test
loopne,pt
pop
scas
jns
in
loop
lret
loope
cs
pop
add
ret
add
or
xlat
mov
rolb
test
mov
pop
ret
test
mov
das
or
outsl
xchg
mov
fmull
mov
icebp
sar
sub
clc
fdiv
inc
adc
cmc
push
dec
stos
xor
or
xor
fdivrl
lret
xchg
cmp
aaa
out
lods
sub
mov
call
or
sbbb
sti
insl
jmp
aas
cs
cli
dec
ja
pop
dec
sti
add
xorl
les
roll
jg
lods
movsb
sub
in
cmp
adc
mov
inc
mov
aad
decb
cmc
out
fucomi
pushf
ret
dec
jns
cmc
add
and
mov
mov
bound
stos
rcrb
pop
test
imul
pop
add
into
xor
test
or
ret
js
mov
add
in
sub
jl
daa
pop
scas
dec
mov
cmp
jle
add
gs
sbb
pop
jo
cmp
and
pusha
sub
lods
jnp
insl
pop
enter
xor
sub
add
mov
pop
aad
mov
testl
lock
cmp
inc
lods
ret
inc
addr16
dec
mov
mov
xor
test
adc
aaa
mov
mov
pop
push
out
jecxz
cmp
fdivrl
cmp
mov
int
int
out
outsl
push
push
stc
sbb
mov
lds
gs
pusha
or
ss
jg
sahf
xor
sub
inc
push
sbb
mov
orl
lahf
mov
mov
addr16
dec
leave
add
inc
or
fiaddl
xor
mov
mov
leave
into
outsb
xchg
sbb
push
jno
adc
sub
ud2
or
dec
std
cwtl
and
cmp
movsb
fadds
pop
call
movsl
xorb
imul
ds
iret
push
out
xchg
popa
mov
rcl
pop
mov
imul
sub
stc
and
xor
pop
xchg
xchg
inc
mov
adc
lret
popa
adc
je
adc
test
cli
ljmp
xchg
ret
push
and
shrl
sub
popf
pop
xor
hlt
sub
dec
rorl
movsb
xchg
sbb
ret
mov
sbb
adc
lods
mov
sub
xor
inc
add
and
loope
imul
rclb
gs
mov
mov
inc
pushf
scas
hlt
imul
and
fbld
and
push
and
loope
lret
imul
mov
push
mov
das
fwait
pusha
aad
cs
and
ss
insl
push
loopne
cmp
jne
jmp
cmpsb
scas
in
mov
das
cli
mov
jle
stos
add
loop
or
inc
loopne
mov
cmp
add
add
lods
and
cmp
sub
adc
or
push
out
add
popf
add
adcb
push
les
je
adc
sub
test
adc
stos
mov
cmpsb
pushf
mov
in
dec
cmp
dec
lcall
xchg
jl
cmp
sbb
out
dec
lahf
lods
mov
and
adc
push
pop
and
cmp
testb
cmpsl
xor
mov
jl
and
loop
cmp
mov
push
loop
repnz
rcr
sbb
andl
push
cltd
and
cltd
outsl
movsb
scas
xor
cmp
sub
mov
lahf
fidivs
ss
imul
push
push
adc
push
test
mov
mov
les
dec
rcl
add
xchg
pop
gs
test
into
and
in
pusha
lcall
cltd
inc
adc
movsb
jp
dec
popa
add
inc
inc
idivb
push
inc
sti
imul
add
ss
inc
rcr
rcll
ds
ss
je
out
in
add
add
outsl
jbe
push
lret
push
mov
rcr
xchg
jnp
and
addl
xchg
pop
mov
sbb
das
ja
mov
mov
movaps
push
and
mov
inc
dec
hlt
outsb
imul
pop
mov
ficomps
xor
cld
inc
outsb
or
sub
loopne
jmp
or
cmp
into
scas
lcall
mov
push
cmp
testl
push
divb
test
outsb
jle
jg
or
stos
ds
dec
sub
mov
pop
xor
fdivrs
and
stos
out
mov
into
lock
xchg
or
movsl
add
mov
insb
in
push
stc
andb
aas
ja
into
lret
push
in
repz
scas
nop
jb
lds
fs
mov
out
add
mov
in
loope
dec
cmp
cmp
adc
xchg
pushf
loop
push
xor
enter
push
or
push
jge
add
aam
xchg
je
dec
cli
mov
out
jns
push
sub
mov
out
jae
pushf
inc
in
xchg
movsb
test
jo
push
dec
enter
cmp
or
inc
icebp
movsl
int
jne
inc
adc
jb
push
jbe
out
mov
std
push
dec
dec
mov
mov
push
jmp
adc
jl
sarb
jmp
icebp
mov
mov
mov
mov
or
push
adc
ds
popf
add
lahf
into
dec
dec
mov
add
or
rcrl
popa
pop
and
cmp
gs
and
mov
test
test
jne
into
loopew
pop
cld
fstps
je
xchg
in
mov
out
cmp
sub
mov
xorl
sub
xor
sbb
jne
pop
das
popf
fisubrl
addl
and
dec
mov
cmp
outsl
popa
sbb
addb
xchg
dec
lods
pop
and
xor
push
dec
in
rcrl
xchg
jb
jmp
inc
push
dec
sub
xchg
xor
xchg
push
mov
and
jl
mov
mulb
fs
and
stos
shlb
loope
cmp
sub
cmp
or
fistl
imul
jno
mov
cmp
int3
sub
mov
mov
mov
in
arpl
xchg
xchg
lods
addr16
mov
bound
fsubs
popa
jge
stos
out
cltd
mov
xor
sbb
lds
jnp
cmp
mov
xchg
leave
cltd
mov
and
mov
and
mov
xor
jge
pop
mov
sti
and
stc
shrb
aad
adc
popf
mov
mulb
mov
jle
xchg
and
clc
lock
imul
dec
out
imul
cwtl
jmp
pop
cmp
add
out
inc
mov
idivl
fildll
fmul
addr16
or
fcoms
sub
add
add
into
fwait
dec
mov
out
mov
xchg
imul
add
or
push
cmc
pop
fdivp
fcompl
and
movsb
dec
stc
or
mov
jg
ficoms
mov
and
test
mov
mov
cltd
addl
insl
orl
test
aaa
xor
mov
fstp
inc
jne
cli
sbb
inc
cs
cmp
test
or
mov
ret
rcll
push
cmpsb
dec
add
fbld
js
test
andl
leave
insb
or
shll
test
xchg
jne
pusha
js
push
lcall
and
pop
mov
dec
repnz
cwtl
sahf
dec
mov
pop
mov
xor
andb
pop
jle
or
arpl
data16
inc
pop
xorl
sbb
out
mov
out
daa
fcomps
push
iret
jnp
mov
in
jmp
jae
andl
popf
sub
cli
test
jbe
push
out
mov
xor
popf
jmp
ja
push
into
jecxz
cmp
push
popa
sub
out
mov
sub
push
divl
push
fimull
movsl
lret
aaa
or
nop
out
sbb
xor
test
js
pop
loope
test
jp
pusha
lea
mov
sub
pusha
cmp
les
stos
xor
sahf
adc
aaa
mov
or
add
mov
addr16
sarl
add
dec
xchg
lret
push
jbe
xchg
or
sar
jmp
push
and
insl
sbb
mov
loope
jp
nop
adc
pop
jnp
repz
xchg
or
and
jecxz
add
dec
fdivl
push
hlt
cmp
insb
scas
jae
pop
lahf
jle
adc
push
mov
xor
xchg
test
add
push
ret
divb
je
loop
sbb
scas
mov
xchg
add
les
jae
dec
fidivl
jmp
loopne
je
cmp
js
jp
sahf
or
push
cli
jp
xchg
dec
mov
xchg
cmc
cli
push
cmpl
mov
neg
sarb
aas
and
leave
push
faddl
jge
and
ja
cmp
push
sbbb
in
sbb
mov
dec
pushf
jg
ret
jnp
outsl
jae
test
cmp
cltd
cmc
decl
fidivl
test
and
lock
pop
mov
sarl
xchg
cmpsb
jnp
cld
push
repnz
lcall
mov
stc
imul
add
jg
cmc
mov
xorl
or
adc
xchg
jp
js
outsb
scas
sub
nop
std
mov
mov
xchg
aas
dec
mov
lret
fdivrs
sahf
sbb
cmpsb
mov
jg
lret
mov
ja
pop
inc
add
push
cmp
in
push
xor
fimull
les
jb
rorl
ljmp
jmp
testb
mov
mov
gs
shrl
es
push
addr16
sbb
pusha
aas
fldcw
xchg
xor
xchg
cmp
and
adc
adc
je
or
cltd
or
jle
push
es
mov
xor
popa
sbb
mov
ficoms
outsb
ja
rcll
lret
cltd
sbb
adc
push
cmp
scas
adc
add
mov
xor
ret
xor
fdivl
rcl
repnz
push
mov
jl
lret
xorl
nop
movsb
pop
cs
test
fwait
repnz
hlt
sbb
inc
dec
jmp
xor
xor
push
scas
aad
xor
mov
sub
cmp
fmul
dec
fistps
or
mov
adc
push
pushf
rcrb
add
lea
and
pushf
jecxz
rolb
mov
in
inc
bound
loope
imul
push
sahf
addr16
mov
or
mov
mov
dec
pop
sbb
test
push
xlat
xor
mov
dec
and
adc
scas
or
inc
mov
or
cs
xchg
shll
and
out
pusha
repnz
daa
jp
lock
fiadds
popa
pop
jge
sarl
loop
out
sbb
cmp
nop
int
add
and
test
mov
loope
dec
das
jp
lea
rorb
lret
mov
jl
xor
jg
lds
outsb
fwait
call
lcall
outsl
dec
xchg
movb
ret
mov
lahf
lcall
movl
pop
dec
push
stos
sbb
lods
mov
int3
inc
pop
es
fcoms
push
cmp
jge
fcoml
add
icebp
sbb
iret
pop
xchg
nop
sub
add
sarb
xchg
fucom
pop
xchg
adcb
pop
inc
xor
test
mov
xor
mov
arpl
mov
mov
sbb
ss
arpl
or
cmc
test
in
movb
stos
bnd
mov
arpl
repz
hlt
adc
dec
push
push
mov
mov
cld
lahf
js
out
aad
sub
fisubs
cmpl
cmpsl
call
cltd
and
jl
sbb
push
and
sti
shr
pop
sub
leave
pop
fisubl
cs
mov
jae
out
mov
dec
std
cmp
idivl
sti
pop
xchg
faddl
push
push
sbb
mov
mov
jo
dec
cmp
lret
mov
dec
add
cmp
and
jns
sbb
xchg
inc
or
inc
adc
mov
lret
ja
adc
jecxz
out
daa
pop
insl
cmp
cmc
cmpb
ss
nop
cmp
scas
call
mov
dec
ret
shrl
jae
mov
les
mov
lret
fwait
cmp
xor
repnz
xchg
or
call
add
pop
jb
repz
xchg
dec
stos
add
inc
add
mov
add
and
sub
mov
pop
imul
adc
push
out
outsb
sti
aad
and
inc
test
clc
or
xchg
loope
add
outsl
adc
jecxz
jae
adcb
mov
in
jne
pop
push
cli
out
aaa
add
inc
inc
adc
mov
ret
xor
cmc
aam
push
add
les
movsb
aad
push
adc
xchg
lcall
mov
push
push
inc
mov
addb
pop
inc
jmp
mov
dec
sti
enter
mov
pop
jbe
mov
ljmp
clc
mov
sahf
cs
pushf
repz
icebp
sarb
sub
lods
push
add
add
lock
xchg
xor
not
jno,pn
adc
dec
pop
mov
add
jmp
aad
pop
pop
or
pop
pop
xchg
mov
inc
pop
mov
and
imull
dec
push
mov
dec
mov
lock
stc
pop
or
adc
stos
xchg
imul
add
addr16
shrd
pop
pop
insl
jp
dec
in
dec
pop
mov
das
dec
and
dec
ffree
in
scas
jl
enter
mov
sti
cmpsl
jns
or
cmpsb
sbb
fnsave
xchg
sbb
cs
or
bound
movsl
cwtl
cmpsb
sub
daa
mov
std
outsb
aas
in
fs
cmp
jo
out
mov
jae
nop
add
xchg
push
or
mov
es
inc
out
js
or
int
push
sbb
insl
jmp
sahf
clc
mov
inc
scas
pop
popa
data16
test
push
into
dec
xor
adc
push
dec
js
sub
dec
push
xor
jle
push
add
sar
inc
testl
ret
ret
xchg
sbb
pop
cmp
jne
ds
push
sub
stc
sti
mov
cmp
iret
rcrb
out
push
std
rolb
sbb
dec
add
repnz
pop
das
cmp
je
test
daa
and
push
mov
cwtl
pusha
in
sbb
cmp
cwtl
xor
xchg
mov
out
jb
movsl
cmpsb
mov
adc
out
jae
push
pop
das
cmp
pop
mov
test
loopne
dec
jne
push
inc
push
std
lods
cmpsb
popa
lahf
push
jns
xchg
add
mov
dec
les
andl
push
add
add
stos
nop
inc
lock
arpl
xchg
add
xchg
imul
js
out
repz
fiaddl
outsl
rorb
or
dec
or
mov
pushf
subl
adc
dec
xor
sbb
leave
pop
push
ret
mov
jl
pshufw
repnz
leave
ja
dec
sbb
aam
jbe
fnstsw
ja
outsb
shrb
mov
mov
hlt
mov
subb
inc
inc
and
jge
arpl
mov
ret
mov
adc
sbb
adc
add
sub
jnp
data16
out
mov
cmp
stos
negl
or
cmp
fmull
mov
mov
pop
or
mov
xchg
add
rcrl
pop
in
imul
nop
out
inc
and
je
repnz
xchg
repnz
dec
adc
cmp
xor
sub
dec
aam
leave
mov
idivb
pusha
sub
xchg
inc
add
lahf
ljmp
cli
cmpl
mov
push
cmp
inc
mov
or
mov
add
xchg
ljmp
sbb
sub
add
push
cs
mov
mov
jnp
rcr
shr
sti
xor
aam
nop
dec
out
mov
add
xorl
hlt
mov
sbb
mulb
or
push
jge
sti
insb
cmp
xor
in
mov
push
daa
jecxz
jmp
or
jmp
sbb
rcrl
cmp
mov
sti
jle
xor
int3
mov
push
push
cmp
outsl
das
sub
testb
ret
mov
sub
es
inc
lods
xchg
mov
dec
mov
push
int3
scas
in
outsb
dec
sub
clc
aam
pop
fcoms
dec
insb
inc
test
daa
cltd
stos
movsb
xor
data16
sahf
orl
dec
adc
clc
mov
xchg
cmpsl
inc
and
mov
mov
pop
popf
sti
stos
xchg
sbb
int3
jae
mov
fisubrl
leave
inc
sub
inc
jae
push
in
orb
jb
lcall
test
jmp
pusha
or
idivb
adc
cmc
stos
xchg
xor
int3
fisubrs
pop
or
mov
cmc
rorl
jmp
repz
pop
sahf
push
jge
push
das
or
loope
or
fadds
mov
cmp
iret
push
daa
iret
mov
mov
mov
sub
mov
mov
rcr
imulb
mov
mov
xor
sbb
xchg
push
or
and
imul
pop
loopne
jo
shl
sbbb
loope
push
push
in
into
mov
loope
adc
fildll
cwtl
pop
addr16
pusha
js
push
inc
shlb
cwtl
mov
iret
mov
rcll
fimull
add
cmpsl
fwait
push
inc
cmp
adc
xchg
lret
jns
sub
push
fcmovbe
fisttps
data16
mov
sarl
inc
xor
clc
test
cmp
stos
mov
xor
cmp
inc
dec
lcall
cmpl
mov
push
imul
cmp
test
jnp
dec
dec
call
jp
stc
ljmp
imul
xchg
jge
sbb
outsl
cmp
jg
addr16
mov
lea
mov
push
adc
push
imul
add
sbb
adc
push
xor
in
xor
std
and
lea
rcrb
add
rcl
je
xchg
and
sbbb
int
jge
cld
mov
xchg
mov
notb
xor
pop
imul
sbb
lret
add
jmp
add
mov
pop
mov
popa
shll
jle
jecxz
cmp
add
or
cmp
aaa
cs
sub
jns
test
out
inc
fdiv
xor
push
and
mov
subb
nop
call
andb
mov
imul
xchg
sbbl
pop
call
je
rcl
dec
js
xor
and
imul
xchg
xor
aam
push
mov
xchg
sub
inc
mov
call
jno
loope
dec
loope
sar
scas
mov
pop
lret
adc
es
or
mov
jge
mov
shll
mulb
sub
push
cld
mov
fsubp
add
test
mov
or
jp
mov
rcrl
lahf
std
scas
outsb
mov
in
sub
fdivp
sub
aaa
xor
xchg
xchg
jl
lods
push
in
les
daa
out
or
arpl
pop
sbbb
dec
adc
bnd
and
adc
add
ret
mov
fisubs
pop
pushl
mov
rcrb
insl
call
lcall
jecxz
inc
fwait
dec
xchg
mov
pop
add
mov
inc
sti
xor
jns
or
icebp
and
adc
icebp
ljmp
js
rorl
dec
and
lahf
jb
and
pop
gs
js
ret
fwait
insb
jmp
sti
mov
pop
test
das
pop
test
push
mov
xor
mov
dec
fwait
inc
out
roll
cmp
xlat
push
or
lahf
xchg
adc
dec
bound
xor
insl
push
dec
pop
cmpsl
mov
loopne
cmp
add
xor
fcoml
or
jmp
pop
test
jmp
jl
sbb
test
or
and
repnz
inc
jmp
lock
add
ss
cmp
or
js
addr16
and
ljmp
outsb
dec
int
test
adc
pop
ds
fidivl
je
add
pop
mov
dec
jnp
lret
dec
test
test
inc
dec
jl
jl
push
inc
sub
jmp
inc
imul
mov
fcompl
mov
lods
mov
negb
movsl
adc
inc
push
xor
and
xor
ljmp
sub
fistps
out
cwtl
xchg
in
sub
mov
stos
cmpsb
sbb
inc
inc
outsl
cs
imul
ds
hlt
sbb
loop
shlb
into
jg
adc
shrl
xchg
xchg
cmpsb
shlb
in
sti
sbb
dec
cmp
movsl
push
sub
cmp
frstor
pop
jno
inc
subb
movsl
out
outsb
add
inc
mov
cmpsb
leave
ret
and
fistpll
inc
das
stos
imul
or
add
aam
push
adc
mov
jg
dec
test
push
orl
xchg
nop
lea
and
xor
jmp
mov
mov
add
outsb
loope
mov
add
repnz
fidivl
push
cld
repnz
xor
pop
lret
ds
mov
je
xor
test
push
sahf
ret
mov
cmp
add
mov
sbb
mov
cmp
test
sub
fisttpl
xchg
int3
test
xchg
and
push
mov
test
in
ss
sbb
cs
fnsave
das
scas
cmp
mov
mov
add
adc
ds
hlt
lahf
dec
out
gs
imul
push
mov
mov
std
inc
aaa
fists
inc
test
mov
imull
pop
sbb
scas
nop
mov
and
push
je
lds
mov
and
scas
outsb
pop
shlb
xchg
pop
xchg
test
shrb
push
clc
adc
push
test
arpl
cltd
loop
xchg
call
cmp
leave
sub
outsb
add
push
les
xchg
das
test
sbb
sbb
pop
dec
mov
shlb
rorb
hlt
pop
sbb
int
and
mov
adc
push
mov
jbe
fbld
xchg
enter
push
out
mov
fnstsw
push
lea
fs
sub
mov
scas
or
imul
lret
mov
dec
mov
mov
out
pop
lock
push
xor
std
push
int3
neg
ror
fmul
sahf
jecxz
bnd
fcomi
xchg
mov
or
daa
jns
hlt
in
adc
and
test
es
insb
adcb
or
inc
lret
jae
push
or
adc
lods
addr16
les
cmp
das
push
sahf
jnp
push
xchg
scas
fsubr
sbb
jge
sbb
in
xchg
in
mov
jne
jle
roll
insl
shrb
add
aaa
inc
xor
call
subb
jge
xor
cmp
stc
pushf
scas
push
sub
daa
mov
lds
jno
add
fcomps
xor
sub
dec
outsb
ljmp
mov
adc
dec
lods
icebp
or
jg
sub
jbe
pop
in
into
and
dec
fdivp
fwait
mov
sub
test
ds
fsubrs
clc
rcll
xor
cmp
stos
inc
jb
push
dec
sub
fstpt
ret
mov
mov
insl
setns
add
mov
adcb
or
dec
ficoml
in
adc
cmp
jecxz
fiaddl
sarb
cmpl
out
negl
jp
inc
sub
mov
int3
mov
decb
fisubs
fldl
cmp
and
js
xor
mov
mov
xchg
jecxz
test
xchg
repnz
lcall
cmp
adc
push
cmp
xor
out
shrb
shrb
mull
bound
sbb
jbe
jbe
adc
mov
out
dec
les
mov
inc
mov
imul
and
outsl
mov
inc
mov
sub
fwait
xor
push
mov
lock
js
pop
lahf
cwtl
je
fprem1
fbld
xor
xlat
pushf
cmp
inc
stos
call
sbb
test
pop
insb
push
mov
test
test
stos
call
into
lea
mov
or
add
and
icebp
scas
inc
xlat
pop
ljmp
add
sbb
push
popf
sbb
inc
popl
fistpl
cmp
xor
mov
scas
testb
popf
pop
and
cli
pop
or
lock
sahf
aad
jle
jp
inc
test
cmpsb
jb
xchg
xor
fnstsw
les
fstps
punpcklbw
test
add
mov
and
adc
cmp
stc
in
daa
data16
mov
and
inc
ret
mov
xchg
dec
cli
xchg
sub
call
or
ds
out
mov
mov
int
out
mov
pushf
or
adc
dec
sub
movsl
pop
call
jo
and
or
mov
mov
in
jmp
add
xchg
adc
repz
xlat
cs
inc
adc
dec
mov
popa
out
mov
shrl
adc
cmp
jbe
repz
int
sti
int
adc
mul
repnz
jl
adc
leave
repnz
cmpb
fcomps
ds
or
sub
ss
pop
aaa
sbb
call
int3
sarl
sbb
ja
pop
inc
fbstp
cmp
pop
stos
mov
xor
add
mov
mov
xor
pop
mov
mov
hlt
shll
xchg
dec
arpl
movsl
lret
cmp
xor
mov
mov
loope
hlt
mov
push
popa
test
and
sub
outsb
aam
cmpsb
outsb
loopne
fstps
xor
jbe
jne
pop
ret
movsl
cltd
arpl
stos
inc
jbe
push
lcall
pop
mov
lods
ficompl
jb
mov
dec
jge
inc
je
test
fildl
cmc
int
shlb
jo
add
test
mov
cmp
rcrl
push
outsb
xor
push
movsl
xchg
sar
sbb
int3
lret
push
push
lods
cs
pop
sub
jne
xchg
andl
jge
std
andl
fsts
cli
jo
jno
flds
mov
dec
jp
mov
add
mov
popa
movsb
iret
pop
test
js
sbb
sub
xchg
mov
inc
cmp
cmpsl
push
jmp
cmpxchg
bt
mov
jp
fmul
pop
dec
inc
ss
ss
jp
cmp
and
andb
imul
sbb
mov
inc
lods
fwait
cmp
addr16
mov
les
test
sub
arpl
jnp
sbb
lret
cmp
xchg
fdivrl
mov
mov
push
mov
inc
fs
inc
pop
aad
inc
dec
test
sbb
syscall
and
mov
out
test
or
dec
adc
shlb
scas
mov
xchg
roll
xchg
out
push
cmp
in
or
mov
push
cmpsl
loopne
orl
add
mov
in
inc
cmpsb
stc
sbb
push
movsb
lods
fmulp
mov
add
or
inc
xchg
cltd
aad
notb
daa
daa
mov
je
lret
dec
iretw
mov
movsl
adc
arpl
mov
popf
xchg
push
jg
cmp
xchg
pop
dec
xor
mov
xor
mov
push
sub
call
lcall
mov
repz
jge
xor
nop
lcall
jmp
xchg
arpl
pop
lahf
mov
sbb
icebp
and
addr16
sub
dec
or
jg
xchg
loop
dec
scas
pusha
lea
push
pop
xor
xor
loop
mov
in
and
outsl
push
push
mov
cmp
or
jp
adc
bound
dec
addr16
sbb
ds
fdivrl
xlat
fbstp
aaa
sbb
out
mov
fidivl
fsts
mov
sahf
cltd
imul
lahf
push
movsl
dec
les
add
iret
add
mov
push
mov
int3
pusha
jg
out
pop
jg
jecxz
out
mov
aas
mov
out
mov
hlt
in
test
inc
xchg
inc
push
lret
push
mov
jae
mov
cmp
test
pop
dec
cli
mov
dec
ljmp
xor
add
aad
and
sub
ds
mov
jo
and
jmp
rcll
adc
xor
shll
sarb
cmp
dec
lcall
mov
jnp
jge
lahf
add
imul
loop
mov
mov
cmpsb
cmp
sbb
das
aas
xchg
sbb
sbb
xchg
lret
jns
jmp
or
inc
call
dec
add
mov
loop
fisubs
add
repz
in
in
js
popf
add
mov
aad
pushf
mul
ss
sub
mov
rcr
sbb
stos
pusha
pop
lods
repz
pop
sub
clc
hlt
movsb
pop
popa
jnp
pop
call
jo
push
rorl
lahf
pop
lds
push
mov
stos
adc
sbb
push
ss
mov
xorb
ss
inc
js
arpl
jae
ret
js
or
sub
lcall
fs
or
leave
adc
adc
jbe
cmp
push
loope
mov
or
mov
dec
add
mov
imul
and
push
and
jl
insl
jae
gs
mov
jne
incb
mov
xchg
mov
iret
push
push
cltd
es
in
inc
ret
ret
and
cmpsl
add
out
movsb
movsl
pop
gs
mov
mov
pop
mov
inc
frndint
mov
je
mov
mov
insl
in
mov
outsb
adc
ret
bound
test
ss
mov
movl
xchg
rorl
mov
mov
add
test
and
inc
xor
cld
in
adc
outsb
sub
repz
out
jmp
scas
cmp
xchg
scas
test
mov
xchg
popf
repz
repz
fstl
mov
pop
sub
fsubl
sbb
inc
outsb
andb
cmc
movsl
pop
push
pop
mov
sbb
aam
push
xchg
stc
mov
insl
adcl
jge
and
dec
aam
les
lahf
fcmove
jno
loop
cltd
xor
mov
cmp
repnz
scas
xor
outsl
out
icebp
repnz
ss
sbb
pop
add
stos
adc
js
sbb
sarl
push
out
incl
sbb
mov
adc
adc
sub
cltd
xor
sbb
xchg
sbb
jne
jg
adc
inc
push
add
add
repnz
mov
pop
pop
hlt
jbe
xor
hlt
ret
push
jbe
jne
inc
out
push
loopne
push
negl
xor
aad
and
mov
insb
repz
inc
push
outsl
pop
scas
lret
adc
fmull
shr
adc
int3
lods
jo
push
sub
test
daa
cmp
add
and
pop
xchg
fnstcw
ss
add
add
repnz
shlb
mov
jae
rcrl
add
popa
imul
dec
inc
push
inc
add
aad
adc
sbb
adc
shrb
pop
popa
push
mov
jge
mov
xor
das
sub
mov
mov
inc
arpl
pushf
loop
stc
sbb
aam
test
xchg
pop
addr16
pop
mov
mov
testb
vpackuswb
push
lret
push
xor
sarb
lahf
inc
jecxz
iret
in
xlat
or
mov
aas
push
push
shlb
loope
adc
sub
mov
lahf
cld
inc
xor
xor
adcl
adc
loop
insb
pop
sub
mov
shlb
fnstenv
ja
inc
inc
adc
mov
lods
mov
add
dec
loop
adc
pusha
push
jle
frstor
or
fidivs
shll
push
xor
out
xor
xchg
lret
xchg
ds
lods
and
lods
mov
js
mov
adc
pop
inc
jb
mov
cs
push
call
sub
pop
xor
ret
pop
and
insb
jbe
mov
push
xlat
cmp
test
jecxz
cmp
or
sub
mov
pop
mov
xchg
cs
mov
jae
xor
cmp
push
stc
push
movsl
mov
jbe
adc
jno
out
mov
xor
pop
xchg
inc
dec
out
je
mov
and
orl
push
dec
jae
fnstenv
rorl
test
leavew
fcompl
sbb
ret
outsb
clc
test
xor
shrl
imul
inc
loop
mov
test
xor
push
ds
cmp
jp
pop
test
insb
ficompl
out
shl
cmp
mov
iret
jl
inc
out
or
push
ds
inc
add
inc
imul
push
cwtl
xor
sbb
mov
nop
clc
stos
pushf
dec
jbe
xchg
add
sbb
test
push
mov
ja
aad
dec
jl
lea
mov
inc
xor
adc
adc
mov
negl
addb
repnz
js
fstl
or
std
cmp
or
jecxz
cmp
outsb
push
stos
pop
imull
stos
or
cwtl
loope
pop
sbb
jge
adc
and
mov
mov
mov
out
jno
add
into
or
dec
cltd
cmp
in
jl
mov
stc
cmp
data16
lret
ja
rolb
pop
jno
push
dec
nop
dec
pop
push
sbb
pop
jle
mov
pop
stc
xchg
xor
out
divb
lcall
jmp
dec
scas
mov
or
add
cli
test
mov
xchg
push
jl
fistpl
mov
lock
push
mov
adc
inc
popa
mov
jae
xor
lods
ret
dec
pop
inc
popf
and
dec
outsl
cmpl
and
mov
dec
add
dec
inc
roll
mov
sbb
cwtl
mov
shrb
rolb
sub
mov
push
lds
sbb
sbb
sub
add
ljmp
and
shlb
mov
stos
add
push
imul
nop
adc
cli
out
push
push
inc
jge
addr16
and
je
mov
push
sbb
and
mov
push
out
in
fs
add
lcall
jo
pusha
out
hlt
and
xchg
push
loope
mov
outsb
aaa
nop
pop
and
sbb
fnstsw
pusha
rorb
mov
ss
push
push
add
mov
shll
add
xchg
int3
mov
inc
test
test
mov
enter
jnp
and
popl
mov
shll
jbe
or
xchg
outsl
inc
add
jg
int3
or
dec
pop
std
test
mov
inc
xor
cli
or
cmc
jge
in
int3
dec
addr16
std
xchg
or
ljmp
xor
xchg
orl
cmp
jl
mov
xlat
sbb
lret
enter
cmp
test
adcl
and
leave
fs
daa
push
jmp
push
std
mov
adc
add
xchg
movsb
and
je
lret
adc
jle
sbbb
jg
mov
std
pop
mov
inc
in
fwait
adc
dec
add
repz
mov
sbb
xor
inc
push
stos
dec
inc
xor
mov
outsb
mov
adc
xchg
out
lcall
mov
xor
push
mov
mov
inc
roll
int
jnp
nop
xchg
clc
xchg
xchg
popf
fisttpl
push
mov
adc
das
dec
lds
notl
repz
xchg
inc
test
pop
dec
outsb
shll
loope
shl
rorb
in
mov
hlt
lcall
jbe
pop
mov
add
mov
jmp
pop
dec
sbb
je
jle
lods
in
pop
xchg
sbb
ret
shll
das
das
push
hlt
mov
dec
jb
fwait
and
xor
jecxz
push
out
xor
mov
aad
test
sub
mov
js
mov
push
in
cld
inc
clc
cli
sbb
cmpl
js
cmp
stc
jae
daa
push
lea
add
hlt
mov
or
inc
popa
cmp
and
mov
add
pop
fisttpll
or
rcrb
mov
mov
and
sbb
outsl
and
adc
jmp
pop
xchg
data16
adc
or
adc
dec
divl
insl
pop
adc
and
jns
cmp
sub
push
out
add
or
arpl
xchg
and
pop
stc
jb
mov
add
lcall
mov
inc
sbb
or
fsubl
std
jnp
or
rcpps
out
xchg
xor
sub
fistpll
cmp
and
stc
mov
or
btc
or
jg
popa
rcrl
add
in
movsl
ja
call
xchg
icebp
jnp
push
mov
in
fdivrl
lret
in
out
daa
lahf
push
add
mov
push
mov
adc
sub
into
movsb
mov
or
andl
lcall
adc
mov
cmp
xchg
sbb
xchg
cmc
xlat
dec
rcl
xor
sahf
out
iret
aad
adc
int3
cmp
sahf
or
movaps
sti
test
mov
ja
jnp
loop
push
mov
mov
push
mov
shr
inc
push
scas
jo
or
cli
adc
jns
cltd
push
push
cmc
sbb
cmp
mov
les
add
stos
push
hlt
fistpl
jp
pop
movsl
add
inc
and
js
mov
mov
sbbl
push
imul
or
pop
cmpxchg
and
dec
stos
sub
inc
shll
mov
or
xchg
sahf
adc
in
mov
fadd
dec
imul
fnstenv
xchg
inc
aas
mov
out
and
jle
imul
xchg
mov
pop
add
dec
pusha
cmp
add
xor
js
mov
jl
mov
adcb
scas
fldt
mov
add
addr16
shlb
aaa
add
lods
stc
call
push
es
sar
xchg
lods
jbe
shrb
jnp
mov
dec
dec
das
dec
mov
xchg
sub
jge
aaa
adc
cmp
call
movsb
mov
cmp
xchg
mov
adc
jmp
jmp
lahf
mov
shrl
mov
ljmp
mov
mov
in
jmp
out
daa
repnz
shll
mov
mov
fistpl
insl
fdivs
adc
xchg
popf
xor
add
loop
mov
adcb
push
sub
bound
inc
adc
cmp
bound
xor
pop
sbb
add
adcb
mov
hlt
popf
in
insl
pop
mov
hlt
test
cmpsb
scas
mov
test
or
mov
shll
test
dec
xchg
cmp
adc
lahf
ljmp
sbb
fs
mov
push
xor
rorl
incb
pop
rcrb
jmp
js
jae
in
inc
mov
or
cmp
push
les
pop
aas
fists
fs
mov
sbb
inc
jl
je
cltd
add
cmp
xchg
or
sub
or
and
jmp
je
dec
test
or
andb
adc
xchg
xor
add
rol
lret
mov
cmp
inc
inc
jno
daa
mov
push
inc
addr16
pop
add
icebp
icebp
out
cwtl
test
stos
lea
popf
pop
sbb
ljmp
pop
push
and
or
jecxz
pop
orb
mov
lods
xchg
mov
test
test
rclb
cmp
scas
pop
lock
les
ljmp
xchg
in
dec
push
jnp
cwtl
sub
sar
or
mov
jne
rcll
add
cmp
or
inc
enter
test
mov
pop
aad
cmpsb
dec
mov
push
cmp
inc
fcmovb
pop
int
jecxz
sarb
lret
mov
fisubrs
sbb
jns
jnp
rcrb
and
add
in
jecxz
sbb
xchg
push
addb
notl
and
divl
popf
inc
or
mov
aad
push
mov
icebp
add
push
call
cs
push
sub
mov
data16
pop
loop
cmp
pxor
push
cltd
jbe
div
sub
add
mov
jmp
lods
mov
sti
or
sub
jp
lcall
out
adc
pusha
push
cltd
mov
mov
movsl
add
dec
in
inc
clc
cmp
pop
sbb
jmp
popa
fdivrp
pushf
sub
adcb
jae
cmc
mov
mov
stos
xor
and
cwtl
pop
inc
lret
push
sbb
les
test
sbb
adc
incl
lods
cmp
adc
mov
enter
in
cmc
sbb
das
cmp
push
dec
pusha
sbb
lods
adc
xchg
out
fadds
xlat
mov
push
mov
fucomp
in
cmp
ljmp
pop
lods
inc
sub
ljmp
ja
and
pop
mov
cmp
lret
imul
dec
scas
lea
lds
xchg
xchg
mov
jcxz
jae
mov
push
push
push
or
push
sbb
in
loop
lock
pop
nop
or
scas
cmpsb
mov
xchg
lret
mov
lret
jo
add
lods
sbb
adc
pop
aad
cmp
mov
jmp
sub
mov
es
stc
xor
inc
jb
pop
je
and
incl
adc
imul
xor
mov
adc
jo
gs
dec
xchg
push
in
cld
and
in
int3
outsb
mov
jge
out
cmp
scas
and
fwait
aam
cwtl
adc
orb
aaa
pushf
lret
inc
loop
cmc
pushf
pop
fs
xor
dec
int
and
cmpsl
mov
push
mov
nop
loop
pushf
fidivs
cmc
dec
ss
jb
out
frstor
inc
xchg
lds
nop
xchg
sbb
push
adc
push
jno
push
sbb
pop
test
cmc
sbb
pop
mov
xor
pop
cmpsl
jbe
mov
and
lods
inc
push
jge
stos
mov
pop
pushl
addr16
dec
xor
mov
insb
cwtl
or
insl
test
dec
inc
lea
int3
xlat
push
mov
xor
imul
push
lods
mov
push
inc
xor
imul
sbb
mov
stc
and
into
mov
in
dec
test
and
xchg
ljmp
cmpl
sahf
pop
sub
sub
popf
xchg
clc
sub
push
fstpt
inc
ret
pop
jb
jecxz
adc
fsubrp
sbb
mov
sub
xchg
adc
cmp
jmp
or
imul
adc
popf
out
test
shlb
push
outsl
ret
test
mov
xchg
in
adc
mov
neg
mov
in
and
testl
je
dec
dec
pop
mov
sub
push
fdiv
lods
inc
ficoml
pop
sbb
les
insb
pop
jb
sbb
inc
xchg
dec
xchg
mov
loopne
sub
jmp
clc
inc
xor
rcr
movsb
pusha
pop
mov
in
imul
rcrb
ret
sbb
imul
sar
jp
or
and
not
xor
test
outsb
adc
xchg
jno
jae
fcoms
jg
leave
test
mov
fstl
ss
mov
dec
xchg
fsub
pop
fsubs
sub
out
push
and
adc
and
fimuls
jge
pop
cmpsl
pop
xor
add
mov
int3
mov
push
imul
xchg
pop
jp
mov
cmp
jbe
fidivl
fcmovnbe
and
sbb
fs
sub
aam
and
dec
push
xchg
lahf
shll
lods
icebp
mov
pop
mov
sbb
arpl
fnsave
lret
in
jno
push
aas
add
scas
pop
cmpsb
lret
pop
cld
fstpl
bound
adc
addb
jg
xchg
inc
std
mov
mov
xchg
stc
lea
in
int3
inc
push
mov
pop
inc
mov
out
int3
xor
mov
mov
push
fprem1
pop
lods
fsts
ret
xor
cmp
loope
adc
push
mov
adc
mov
ret
jbe
out
pop
scas
imul
adc
inc
push
cmp
sub
ja
addl
stos
sub
scas
cmp
sub
ret
mov
add
mov
jecxz
adc
xlat
add
mov
jge
les
lret
adc
lcall
and
xor
jmp
fucomi
lds
sahf
sbb
fcomps
dec
and
in
sbbl
ljmp
pop
cmp
push
popf
push
mov
sbb
mov
xor
push
cmp
lahf
jmp
jnp
xchg
leave
pushf
xchg
sahf
sbbl
sub
xchg
push
call
jno
idivl
loopne
sbb
test
cwtl
imul
push
in
mov
movsl
popf
movsb
into
lods
dec
lock
out
or
sar
in
mov
pop
push
ljmp
jae
shll
mov
xor
rolb
mov
mov
push
pop
std
jp
nop
scas
pop
cmpsb
mov
or
inc
add
xlat
jnp
movsl
ficompl
jae
in
jmp
dec
mov
sub
inc
push
mov
fidivrs
or
out
xchg
push
sub
mov
mov
fcomp
cs
add
or
fidivrs
lret
jnp
xchg
insl
imull
and
out
jg
pop
in
adc
out
cmp
insb
mov
add
sub
insb
xchg
dec
je
dec
mov
cs
pop
add
idivl
das
std
fucom
inc
fstpl
xchg
push
cmp
clc
jae
or
jmp
xchg
adc
jp
jb
dec
push
movsb
sti
push
imul
js
mov
adc
push
mov
adc
int3
mov
inc
ret
cmovne
sbb
and
fstl
cld
enter
mov
push
inc
shll
ss
arpl
rorb
scas
test
inc
shll
mov
xor
jle
lds
add
insl
test
js
xlat
mov
mov
mov
mov
push
and
cmpsb
and
mov
xchg
icebp
sbb
jnp
xor
dec
fidivrs
adc
jp
sub
cmpsl
fisubs
jbe
not
sti
fcoml
lea
je
cmpsb
ds
stos
scas
ret
xor
lea
jmp
out
mov
in
mov
xchg
fsubrl
out
popf
lock
adc
xor
or
cmc
xor
mov
cmpsl
sbb
js
cmp
popa
sub
jae
push
lret
cli
inc
sub
and
cmp
scas
dec
imul
push
ljmp
shlb
cmpsb
arpl
popa
jl
mov
xlat
cmpsl
mov
and
mov
pop
aas
fs
into
jno
mov
or
inc
cmp
mov
popa
dec
pop
xor
arpl
cwtl
xor
les
loop
xor
imul
subl
cmp
out
cltd
lret
ss
mov
aaa
sub
imul
mov
lcall
loop
dec
je
cmovo
fiaddl
leave
add
dec
xor
adc
neg
inc
imul
or
sub
lods
clc
dec
dec
jns
mov
mov
sbb
cltd
pop
mov
mov
aam
insb
pop
cmp
out
xchg
nop
in
aaa
xor
adc
dec
sbb
adcb
jb
cmp
cli
rol
or
sbbl
xor
clc
cmc
xor
xor
sub
mov
push
lret
push
jle
outsl
out
jl
cmp
stos
sbb
das
or
sub
sahf
sub
adc
pop
and
fadd
xchg
jb
rcl
mov
shlb
cmpsb
pop
xchg
dec
push
adc
sub
rcrb
xlat
clc
fidivrl
xchg
sub
jae
mov
jle
out
icebp
test
push
mov
bound
xor
addr16
sbb
mov
addb
or
test
sbb
stc
jge
fsubrp
int
test
sbb
imul
xchg
in
lret
xor
mov
jge
das
mov
jle
jne
cmp
outsl
pop
mov
push
inc
fxam
lock
ds
mov
mov
mov
xchg
lods
pop
lret
stos
lds
or
mov
mov
out
test
stos
mov
mov
into
jb
imul
and
cli
fsubrp
in
sarl
push
test
mov
lret
adcl
roll
cs
test
cwtl
les
ret
mov
pop
jg
arpl
jp
xchg
je
xchg
scas
fwait
adc
xchg
mov
push
jo
lods
scas
icebp
push
shrb
push
pop
in
aaa
in
in
stos
cmp
lock
fldt
jo
pop
jno
xor
dec
inc
mov
mov
rcrb
push
jo
pop
imul
xchg
mov
insl
jne
bnd
push
pmullw
imul
pop
in
jle
dec
faddl
sub
popf
cmp
mov
mov
push
xchg
xchg
xchg
mov
add
jge
sahf
notl
sub
xchg
pop
push
jge
cltd
sbb
jp
or
mov
xor
pop
push
xor
pushf
or
xor
popf
and
xor
pop
rcrb
out
cmp
adc
sub
sub
push
and
pop
adc
and
jnp
mov
rcll
scas
cli
popf
daa
mov
pop
test
mov
jns
add
xor
lea
daa
mov
pop
mov
clc
fdivrp
xchg
mov
or
and
lahf
sahf
movsl
xchg
mov
lcall
xor
pushw
clc
daa
enter
insl
cmp
or
or
outsb
lcall
movsb
jmp
clc
test
daa
push
and
cld
loop
out
mov
mov
lea
les
pop
pop
cwtl
in
sahf
sub
cld
mov
mov
pusha
cmp
push
scas
push
arpl
sbb
clc
or
popa
adc
inc
jg
mov
mov
dec
test
out
mov
jb
push
pop
xor
push
ret
sub
cmc
lods
fs
mov
push
into
addr16
andb
adc
sbb
jle
dec
mov
push
ret
pusha
sub
getsec
xor
movsb
fs
mov
cli
js
mov
jae,pt
pop
pushf
push
imul
pop
fldenv
push
data16
mov
push
dec
lret
push
loopne
stos
add
add
sbb
jmp
in
in
push
icebp
and
mov
aaa
imul
fmuls
jmp
lcall
iret
sarl
into
cmp
lea
mov
fwait
les
repz
dec
jb
dec
cmp
pop
add
mov
sub
mov
sbb
scas
dec
jp
lcall
push
mov
lahf
sub
mov
push
mov
inc
adcl
int3
or
pop
scas
sub
mov
outsb
mov
pop
mov
pop
fwait
aaa
scas
push
cmp
dec
mov
int
dec
jmp
aaa
subl
repnz
js
jle
cmp
dec
xor
addr16
xchg
testl
mov
pop
sub
dec
dec
les
je
mov
adc
test
rorl
mov
fdivs
loopne
xrelease
cmpl
imulb
pop
out
leave
inc
stc
mov
iret
mov
ret
sub
push
sub
push
jle
jns
push
sbb
or
sub
cmp
mov
xchg
jl
push
aam
jmp
mov
pop
push
leave
stos
or
stc
daa
xchg
fistps
repz
mov
xor
sbb
dec
fidivl
jns
js
add
pop
fstps
cmp
pusha
aaa
ret
test
in
jmp
sbb
in
mov
clc
addb
push
loope
xchg
sbb
rcr
and
jns
mov
repz
mov
add
or
shr
js
push
mov
mov
lods
jl
std
sbb
mov
push
fnstcw
scas
xchg
xchg
jbe
xchg
push
and
addb
dec
sub
ret
push
xchg
inc
inc
ds
scas
notl
inc
addl
mov
or
loope
test
cmp
xlat
mov
sub
and
add
pop
mov
push
adc
in
enter
sub
mov
shl
cli
inc
jp
cmp
les
lea
insb
leave
test
negb
cmp
jle
xchg
orb
and
popf
icebp
icebp
ja
in
xchg
inc
xchg
xchg
mov
arpl
fcomp
cmpsb
lret
fisubrs
pop
idiv
sbb
popa
add
lahf
lahf
lock
clc
vcvtps2dq
pop
mov
sarl
pop
sub
roll
jp
push
idiv
lods
rclb
in
pop
cmc
mov
push
pop
pop
mov
ret
repnz
jb
xchg
clc
lret
in
dec
sbb
gs
dec
sbb
lret
xor
sbb
xchg
pop
jnp
rcrb
in
mov
call
test
pop
movsl
push
push
out
cmp
cmp
mov
or
sbb
pop
add
in
sahf
lret
icebp
imul
sbb
cmp
sarb
loope
lods
mov
andl
mov
cmp
jnp
dec
jae
xlat
fsubs
push
jmp
clc
ret
movsl
stc
jg
push
ficoms
pushf
repnz
bound
push
mov
dec
bound
cmp
int
es
sub
and
lods
cltd
fidivl
movsb
fcmovbe
popa
sbb
in
jmp
pusha
fcomps
shll
sub
or
int
sub
mov
outsb
dec
pop
add
pop
adc
lcall
cs
xor
mov
mov
xchg
inc
outsb
mov
adc
mov
mov
das
cmpsl
mov
outsl
lods
insl
addl
inc
jb
insb
fistl
cltd
sbb
cmp
mov
andb
pop
mov
adc
aam
mov
negb
sbb
cltd
push
fnop
lods
outsl
inc
enter
sbb
aad
dec
stc
pop
lods
mov
into
js
jl
stc
imul
mov
mov
test
xchg
sar
popa
jp
jp
xchg
xor
mov
jns
sbb
repz
cmp
lcall
sti
pop
push
xor
movsb
fsts
popf
fnstsw
mov
mov
pushf
mov
xchg
bound
fdivrs
push
mov
sbb
inc
loopne
xchg
pop
jae
aaa
cmp
pop
cli
mov
ds
mov
inc
or
in
dec
repnz
dec
lret
mov
sti
rorl
pop
stos
out
orb
rcrl
jecxz
repnz
imul
rcll
lret
add
arpl
imul
in
add
pop
lock
jl
inc
jp
in
xchg
xor
test
and
xchg
in
jecxz
ficompl
xor
test
push
sbb
push
sbb
cltd
jo
mov
imul
test
das
dec
jbe
dec
xchg
outsl
mov
dec
sahf
and
outsb
mov
data16
sbb
inc
cmp
or
loopne
jmp
jae
leave
outsl
aas
lret
test
scas
fnstenv
fsubl
mov
ret
jmp
push
pop
into
xor
pop
in
jns
negb
adc
cmp
mov
fwait
les
lss
cmp
push
or
testl
push
fucomip
ss
or
xchg
int
pop
dec
add
xor
sbb
lahf
fstpt
mov
cmpsl
les
ljmp
xlat
stos
pushf
xor
mov
lret
pop
aad
gs
fisubrl
inc
sti
scas
divb
aam
mov
es
dec
and
in
inc
xor
mov
and
insb
xor
popf
sahf
scas
and
xchg
jno
mov
xor
fwait
lods
les
scas
or
mov
rcrl
fsubr
and
mov
into
sub
shlb
pop
pop
xor
cli
mov
xor
cld
ret
inc
dec
aam
push
je
jno
cmc
loopne
xchg
mov
sub
jge
inc
repz
fstps
jno
addr16
shr
data16
push
sub
into
or
cmp
and
pop
and
mov
sbb
cmp
sarl
notl
sub
shrb
xchg
jns
jnp
ljmp
mov
fdivl
push
mov
gs
sub
mov
jbe
mov
or
js
subb
fdivrp
mov
test
mov
mov
dec
ret
cwtl
jmp
repz
mov
pop
pusha
data16
xchg
aas
dec
push
outsl
or
or
jge
fsubs
add
xchg
rclb
test
dec
fucom
flds
mov
pause
movsl
adc
pop
inc
data16
xor
aas
ja
jae
loope
nop
fucomip
mov
in
mov
xchg
jge
and
fcompl
fdivrs
sub
sub
cwtl
loope
lcall
aad
outsb
push
push
mov
jg
jecxz
mov
enter
mov
xchg
daa
push
mov
sbb
pop
xor
subb
push
jge
push
xchg
fidivrs
push
mov
in
int
jge
lock
add
mov
cld
scas
jmp
mov
out
aam
inc
imul
dec
sti
add
inc
add
inc
gs
stos
inc
imul
push
lret
xchg
pop
dec
sub
scas
shll
pop
out
xor
push
inc
aad
or
fwait
int
aaa
inc
add
cmp
inc
movsb
sub
mov
push
xor
mov
inc
cmp
xchg
mov
pop
mov
jg
mov
aam
mov
or
aad
outsl
push
mov
ja
sub
sub
mov
test
mov
sub
xchg
adc
cmp
iret
imul
lret
inc
mov
dec
aam
push
jp
ss
hlt
lret
mull
push
sbb
mov
sub
mov
cld
stos
repz
sahf
jge
dec
xchg
mov
or
andl
jecxz
jno
cmp
mov
shrb
mov
ror
mov
out
shll
xor
sbb
mov
cli
leave
pop
out
xchg
inc
jge
xchg
fsts
push
mov
inc
pusha
xlat
leave
cli
dec
lock
mov
sub
cmp
imul
stc
xor
je
mov
or
cltd
enter
xor
xor
repnz
out
mov
mov
dec
add
idiv
scas
pop
pop
imulb
xchg
add
movsb
fcoml
mov
mov
insb
out
ja
push
loop
rclb
pand
pushf
or
add
cmp
mov
bsr
andl
out
jae
clc
lret
fs
inc
popa
jl
aad
xchg
hlt
inc
lret
mov
xchg
or
enter
rclb
ja
in
lcall
cs
decb
lcall
xchg
test
mov
mov
andb
add
adc
mov
in
mov
adc
pop
xor
in
xchg
jl
mov
lcall
dec
pop
pusha
lods
in
and
fs
ljmp
xor
loope
jge
fldenv
andb
xor
push
add
or
hlt
sti
inc
add
out
dec
pop
cli
pop
loope
mov
jmp
cwtl
mov
xchg
fdivrl
fwait
mov
dec
xchg
inc
int
sahf
xchg
xchg
arpl
fdivl
mov
iret
pushf
out
push
pop
daa
inc
push
sbb
jge
ja
std
into
dec
mov
xchg
cmp
mov
out
lods
pop
aad
sbb
cld
repnz
xchg
xor
xchg
fs
js
fisttpll
add
cmc
hlt
or
jae
or
rcrl
pop
pop
xchg
outsb
cmpsb
cmp
lods
jge
mov
dec
inc
jl
test
loope
pop
daa
pop
loope
icebp
iret
imul
shrl
mov
add
pop
lret
sub
fidivrl
xorb
mov
daa
jg
sti
test
lret
aad
xchg
cmp
dec
pop
mov
xchg
int
rcr
xor
pop
shrl
mov
sub
jg
mov
push
cmp
mov
scas
push
clc
insb
adc
stc
jle
test
dec
scas
lret
scas
mov
adc
and
push
pop
es
push
mov
subb
sub
xor
cwtl
cmp
adc
daa
cmp
jnp
mov
popa
add
in
inc
sub
add
in
sbb
cltd
or
loop
fdivl
shrl
pop
mov
cmp
push
pop
mov
push
scas
orb
pop
lret
lods
mov
xchg
jmp
les
cmp
icebp
add
popa
ds
dec
or
dec
add
mov
and
imul
dec
mov
adc
pop
mov
sbbb
or
jmp
dec
sbb
fs
add
mov
out
insl
outsb
iret
jbe
or
xchg
stos
push
cmp
or
push
jle
fcmovnbe
xor
push
test
aad
xchg
mov
adc
insl
xlat
xor
xlat
xchg
mov
repnz
xor
aas
aad
push
xor
jp
and
pushf
sub
mov
loopne
ror
cmp
xchg
xchg
dec
fsts
or
xor
sub
lds
daa
sub
mov
test
lea
xchg
push
shll
in
push
jle
mov
outsb
pop
push
xlat
push
imul
rorb
scas
pushf
in
add
in
jns
sbb
and
in
test
cmpsb
es
ds
cmpl
scas
inc
clc
adc
jge
and
movsl
insb
push
cmp
mov
loopne
scas
loopne
jns
mov
push
dec
xchg
mov
xchg
jmp
es
jge
out
outsb
xor
dec
sbb
aaa
repnz
fwait
or
pop
lret
lea
out
loope
jg
pusha
and
and
jo
fisubrl
mov
pop
enter
aad
cmp
push
push
jnp
jns
cli
aaa
fmull
sub
sub
jb
pop
cmp
js
push
pop
gs
movsb
add
dec
mov
or
dec
and
incb
pop
xchg
inc
loopne
or
pushf
lds
push
pusha
shll
outsb
mov
andb
jns
clc
pusha
cmpsb
lea
test
mov
loop
aam
mov
insb
cli
and
das
inc
xor
or
push
mov
inc
mov
pop
mov
rorb
mov
aaa
add
xchg
jge
pop
cmpb
cmp
data16
repnz
sbb
xorl
stc
loopne
xchg
sub
push
add
jae
xchg
xorl
into
cmp
cmp
repnz
dec
imul
mov
lods
mov
jo
out
mov
cmp
xchg
adc
pop
sbb
or
imul
in
movsl
outsl
inc
sbb
and
sbb
push
or
inc
mov
das
mov
cmp
mov
cmpsb
jle
push
inc
add
imul
xchg
fnsave
xchg
call
sti
inc
mov
dec
jns
ret
filds
rolb
pusha
mov
ret
adc
lcall
sub
mov
shll
movd
or
xor
adc
dec
rclb
cmp
les
lret
scas
pop
rorl
jl
lods
movsb
inc
or
daa
gs
ds
lea
es
inc
or
mov
push
dec
fnsave
sub
xrelease
stos
call
mov
mov
inc
not
sub
lods
fs
lea
jno
loop
test
pop
add
cmp
and
adc
imul
aaa
popf
inc
jbe
cmpsb
push
inc
push
dec
insb
das
fsubs
cs
sbb
cmp
scas
ds
or
icebp
sbbb
push
ss
mov
add
push
js
repz
lea
adc
adc
insl
mov
push
les
mov
test
jmp
inc
push
and
cmpsl
push
jo
mov
int
cmp
sub
mov
dec
jmp
icebp
rorl
xor
jle
scas
and
movsb
mov
dec
loopne
es
xchg
push
adc
int
jno
popf
lahf
out
pusha
jnp
test
filds
add
dec
in
xchg
ret
inc
push
inc
shrb
sub
mov
je
test
out
jbe
xor
and
subb
pop
iret
jge
cld
addr16
mov
sti
sbb
mov
fsubrs
mov
inc
cmp
inc
nop
xor
popf
lock
gs
xor
movsb
dec
sub
bound
repnz
rorb
rorl
ljmp
xor
decl
pop
rcl
xor
push
xor
adc
add
push
es
push
mov
stos
movsl
gs
xchg
faddl
aam
lcall
inc
xchg
or
gs
push
add
inc
ret
push
sub
add
mov
jle
push
adc
mov
and
sbb
cmp
push
pop
pop
mov
lods
decb
das
popa
sbb
push
in
sub
std
cmp
divl
mov
dec
add
xchg
mov
subb
mov
imul
or
jne
aad
addl
out
loope
in
mov
cltd
dec
add
mov
cld
sub
jbe
dec
out
inc
loop
inc
and
subb
test
ljmp
and
sub
vpmacswd
dec
mov
jno
adc
insb
sahf
mov
aam
adc
add
aaa
inc
stos
dec
int
cld
imul
aam
xor
clc
int3
dec
sahf
cld
cmp
xchg
inc
scas
dec
loop
jo
dec
ds
push
add
orl
faddl
jl
inc
hlt
jns
int
jmp
lods
xchg
jecxz
hlt
out
ja
int3
rclb
scas
rorb
add
mov
cmpsb
mov
fnsave
jo
mov
ljmp
call
mov
aad
push
jae
mov
int3
mov
mov
xor
cmpsb
repz
sti
adc
dec
in
scas
or
fwait
push
or
mov
xchg
push
inc
fbld
dec
add
inc
insb
leave
xlat
insl
mov
and
out
daa
movsb
pop
adcb
pop
les
push
or
jl
icebp
pop
cmpsb
jmp
loope
dec
adc
arpl
xchg
sub
cmp
fnstenv
xlat
out
jne
rclb
sbb
mov
xor
sub
xchg
pop
aad
fs
mov
jmp
lea
fchs
push
push
push
or
jno
in
lods
gs
mov
pushf
outsl
mov
test
ficompl
xchg
adc
xor
pop
and
bound
in
or
movsl
ds
lret
aaa
and
iret
in
mov
cmp
fs
loope
cld
out
xchg
jne
sub
bound
pop
insb
mov
repz
pushf
roll
dec
rorb
outsl
int3
loop
rorb
movsl
jno
imul
pop
and
cmp
test
cmp
enter
cmp
and
loopne
sbb
pusha
and
mov
add
aaa
ja
fwait
movsl
cmp
pop
fdivrs
lods
pop
fistps
dec
sub
aam
fstpl
cmp
xchg
hlt
rorb
stos
inc
push
jmp
pop
shll
in
jge
ljmp
push
mov
dec
ds
sbb
fistl
inc
mov
in
or
dec
adc
addr16
les
sti
inc
cmc
repnz
cwtl
int3
rcr
scas
xchg
aam
mov
js
push
sbb
cltd
popf
adc
cmp
push
int3
inc
lods
mov
xchg
jbe
sete
andnps
jno
test
dec
jb
imul
gs
scas
mov
in
cwtl
js
fs
cmc
lret
clc
mov
ret
push
push
mov
jno
add
sub
pop
sarl
sub
repnz
xchg
mov
sub
outsl
adc
add
jno
fimull
mov
adc
sbb
jmp
rolb
mov
sbb
push
pop
add
shrb
push
std
jo
icebp
push
jp
dec
fwait
popa
pop
xchg
ficomps
jne
adc
mov
adcb
mov
sbb
cmpsb
inc
jl
jg
movsl
pushf
fnclex
or
jl
movsb
jle
and
aad
fbld
popf
dec
mov
mov
cld
out
jae
xor
push
pusha
notb
dec
xor
and
fld
fadds
clc
xor
add
fcmovnb
cld
loope
cmpb
roll
xor
int
or
mov
mov
movsl
mov
outsb
jge
add
lahf
cmc
scas
sub
adc
push
bound
cmpl
dec
mov
inc
dec
mov
test
jb
adc
icebp
out
jmp
mov
pop
sbb
scas
mov
mov
sbb
test
push
adc
adc
inc
inc
mov
jnp
and
mov
push
das
test
pop
out
jl
push
mov
inc
jecxz
add
ja
sub
out
push
stc
lahf
pushf
pop
dec
fcomps
and
dec
aas
sbb
out
push
das
mov
push
mov
cmp
dec
fdivrs
hlt
rol
xchg
std
es
inc
inc
sub
cmp
mov
dec
xchg
xlat
insb
fldl
add
cs
addl
das
repz
push
fwait
mov
or
xor
push
cs
sbb
lods
push
in
dec
leave
ret
adc
push
rorb
ja
fdivp
sbb
lods
subl
adc
pop
sbb
lock
cmp
imul
out
icebp
js
adc
outsl
mov
xchg
mov
xchg
lods
aad
xchg
int3
pop
adc
in
in
or
sbbl
add
adc
je
imul
cwtl
mulb
sti
ds
jecxz
out
flds
push
mov
push
das
test
xchg
aad
sub
inc
or
mov
lahf
pop
jge
mov
sub
int
push
or
es
or
and
jo
sbb
movb
jbe
nop
jns
aas
mov
xor
mov
data16
jge
or
and
pusha
adc
jbe
xchg
sbb
add
bnd
add
jne
push
jmp
movsb
pushf
and
cmp
and
rorb
andl
cltd
incb
dec
mov
out
out
and
es
mov
jmp
out
addb
xchg
inc
ret
ret
xchg
push
daa
scas
loop
nop
jecxz
lds
inc
and
ljmp
shrl
xlat
mov
daa
aaa
repz
fmuls
dec
dec
cwtl
stos
movhlps
pusha
dec
mov
mov
inc
mov
pop
test
adcb
or
insb
inc
sbb
fists
insb
call
push
fs
push
jnp
fwait
cltd
pop
outsl
xchg
mov
adc
push
mul
inc
popa
data16
into
testb
inc
shrb
push
xchg
div
lcall
dec
dec
idiv
dec
dec
add
stc
vpmulhw
or
popa
xchg
pop
mov
rclb
sub
ss
sub
xlat
in
cwtl
dec
sbb
in
jmp
test
outsb
xor
mov
add
adc
xlat
cwtl
mov
inc
nop
stc
nop
insl
sarb
imul
push
les
loope
movsb
push
add
addl
mov
lahf
inc
hlt
jne
jno
adc
inc
or
out
lcall
repnz
into
call
mov
jnp
cmp
mov
dec
adc
xchg
int3
xor
pop
xchg
lods
jno
inc
lret
sub
loopne
jp
mov
mov
push
loop
mov
mov
loopne
pushf
imul
stc
scas
loope
ret
mov
mov
roll
mov
xor
add
ss
xchg
incl
add
sub
push
mov
and
mov
shll
or
sarb
into
clc
xor
add
mov
sub
jnp
lods
add
int
ljmp
repz
pop
int
cli
mov
dec
loope
dec
pop
rolb
loopne
subl
xchg
xor
sar
decb
out
push
xlat
ss
inc
popf
push
push
push
mov
test
mov
lcall
fdivl
dec
mov
sub
and
sbb
xchg
outsl
cmp
sbb
rcrb
ficoml
fstl
movsl
ja
cmpsl
xor
nop
pop
jmp
lods
sub
jg
insl
push
fimull
mov
rolb
dec
pop
lods
or
push
pop
cld
cmpl
xor
dec
or
repz
jns
test
lods
xor
inc
mov
push
mov
out
push
xor
jmp
adc
xchg
jecxz
lock
cld
jle
rol
loop
sbbl
cmp
test
pop
xor
sti
imul
sti
xchg
mov
loope
imul
push
push
pop
punpckhdq
movsl
hlt
add
dec
mov
aaa
fidivrs
and
shrb
jmp
flds
cmp
in
stos
xchg
js
xchg
nop
repnz
add
aad
cmp
jge
arpl
or
add
sub
mov
test
mov
insl
dec
xor
push
sbb
jbe
arpl
sahf
sub
pop
xor
scas
push
inc
or
sahf
add
xchg
ret
scas
xor
call
pop
sbb
and
ja
pop
jl
fnstsw
dec
movsl
lds
ja,pt
stos
lcall
ja
inc
dec
sub
push
mov
sarl
sbb
pop
xor
jne
add
shrl
sahf
adc
gs
lcall
inc
mov
mov
stos
add
neg
in
xchg
xchg
sub
rcll
in
or
pop
push
orl
mov
push
jne
jp
jne
dec
fimull
loopne
fcomps
sahf
xchg
add
mov
xchg
push
nop
cmp
lret
sti
dec
sub
out
mov
dec
rcrb
jb
lahf
push
push
lcall
rcrb
xor
xchg
cmp
sub
adc
fwait
xchg
jle
jp
push
aas
stc
insl
sub
shll
bound
icebp
mov
sub
or
mov
push
dec
cmpsl
pop
sub
popf
int3
outsl
dec
lret
pop
lock
aam
inc
stos
lcall
scas
out
ss
push
adc
or
int
stos
scas
ret
sbb
mov
sub
sti
imul
mov
and
test
lods
cmp
shrb
mov
loopne
mov
jo
cmp
divb
iret
aam
or
pop
mull
xchg
lea
scas
and
les
sbb
pop
cmpl
in
iret
dec
add
or
bound
sub
ja
shr
pop
or
or
sub
enter
lods
lcall
rcll
imull
cmp
insb
adc
lea
in
sahf
push
out
ret
rep
aad
mov
inc
fmull
add
jg
nop
mov
push
inc
add
push
enter
or
cmpleps
out
xchg
fwait
mov
fisubrl
mov
and
mov
aad
cmp
mov
push
add
fs
push
inc
inc
aad
aaa
push
inc
jne
jmp
jle
out
outsb
or
andl
std
leave
sub
repz
xchg
loopne
nop
jnp
sub
xchg
orb
jbe
sub
and
pop
dec
sbb
mov
dec
mov
pop
or
pop
loop
loopne
ds
pop
stc
wrmsr
stos
mov
sbb
inc
and
test
cltd
push
xchg
stos
cmp
jle
aas
sub
adc
xor
pop
push
dec
push
imul
inc
sub
out
mulb
jmp
shr
adc
into
in
test
sbb
adc
pop
cli
mov
out
outsb
jg
daa
repz
rol
xchg
xchg
std
cltd
ljmp
imul
xchg
inc
loopne
aam
hlt
sub
call
sub
dec
sbbl
cli
mov
and
js
aad
adc
cs
push
mov
push
pop
js
ss
push
mov
outsb
push
jns
pop
lods
dec
je
loope
call
xor
cli
sub
es
and
addb
push
pop
neg
dec
pop
mov
movsb
fldl
iret
aam
mov
js
sahf
and
sub
insl
push
mov
sarl
lods
imul
mov
ret
leave
add
sub
loop
lock
sahf
push
jbe
mov
lret
rcll
jns
int
mov
loopne
popf
cmpsl
hlt
clc
jno
icebp
mov
fwait
test
popf
in
loop
add
sahf
jmp
or
cmp
std
fs
arpl
dec
mul
mov
xorl
push
sti
inc
fimull
loop
jl
xchg
push
pop
inc
stc
push
adc
jnp
out
pop
dec
or
daa
and
rol
pusha
imul
lcall
xor
stc
add
ljmp
mov
repz
push
jmp
stos
dec
and
or
xor
cmp
sub
test
aam
test
xor
push
jmp
mov
lods
jns
incb
jle
mov
in
or
ficomps
dec
jecxz
mov
insb
xor
aas
add
cmp
xchg
pop
pop
loope
lds
jmp
pop
mov
push
in
lods
or
mov
test
rorl
movd
subl
enter
dec
roll
push
out
imul
out
xor
nop
fldt
or
push
test
pop
pop
lock
add
mov
in
bnd
mov
iret
ss
arpl
jmp
mov
push
pop
sbb
jmp
call
add
mov
sbb
stos
pop
pushf
xchg
pop
aad
in
loope
int
into
outsb
fsubr
jns
add
jl
mov
mov
stos
das
mov
mov
mov
ljmp
and
mov
lods
add
xchg
mov
sub
mov
dec
cmp
das
dec
pushf
jno
stos
int
mov
jae
mov
cmp
mov
mov
insl
je
fiaddl
stc
cmp
insl
orb
lret
push
into
int3
xchg
fcoml
loope
add
jg
xchg
adc
popf
dec
sub
ja
data16
xchg
js
xchg
sub
jne
or
sub
mov
leave
scas
ljmp
imul
js
push
in
cmp
jg
jne
mov
scas
int3
repnz
test
fcompl
mov
push
cmpsb
bound
repz
les
push
xor
adc
cmp
aam
cmc
mov
andb
xor
push
sub
add
js
cmp
and
xor
mov
dec
mulb
adc
js
mov
aad
lret
sub
stc
mov
aaa
in
pusha
inc
push
test
incb
mov
test
xchg
stc
or
jns
incl
mov
pop
out
shl
cmp
call
mov
enter
out
and
invd
adc
hlt
push
rcl
dec
popf
dec
out
dec
aam
loope
das
push
push
mov
push
cmp
mov
mov
lahf
mov
pushf
popa
push
mov
in
sub
scas
xor
mov
arpl
fadds
pop
fstps
leave
mov
xor
add
pop
jl
out
pop
cltd
adc
cmp
xchg
push
into
mov
inc
fwait
sahf
mov
repnz
jo
mov
clc
and
into
push
or
movb
in
dec
pop
or
les
mov
sahf
dec
and
sub
rol
je
pop
out
arpl
js
rolb
fwait
dec
jge
jmp
xchg
mov
cltd
test
imul
push
inc
icebp
adc
aam
mov
add
push
enter
mov
in
je
iret
ljmp
push
mov
sbb
push
pop
pop
repnz
test
insl
hlt
cmp
mov
in
dec
jp
shlb
negb
sarl
repz
xor
jg
stos
mov
arpl
add
sarb
and
les
inc
mov
cld
pop
pushf
jg
sti
pushf
fisubl
rol
push
hlt
xor
ds
pushf
jb
cli
pusha
je
xchg
push
clc
inc
pop
lods
jp
orb
xchg
in
sti
add
bound
nop
xor
outsl
mov
jmp
or
shlb
dec
adc
lds
push
sbb
outsl
rol
mov
cmp
inc
shll
cmp
fbld
or
aaa
pop
xor
jp
les
lods
add
cmp
mov
xor
adc
inc
int
int
loopnew
dec
lods
repnz
ja
leave
cmp
mov
mov
sub
repnz
mov
sbb
arpl
inc
cmpb
add
aam
sahf
test
cmovnp
loopne
mov
loop
arpl
cld
je
aam
roll
pop
push
xor
rcll
test
pusha
fs
mov
imul
dec
pop
jae
loope
repz
mov
mov
sbb
repnz
call
call
or
aaa
enter
gs
mov
mov
lahf
push
and
pop
pop
lea
adc
xchg
lret
xchg
bound
inc
insl
xchg
and
and
orl
or
xchg
fisubrl
scas
or
insl
cld
ret
iret
add
popa
pop
push
dec
inc
cmp
cmpl
int
lds
sarl
cwtl
sbb
mov
or
pop
out
icebp
cli
call
cmp
ficompl
cwtl
jge
in
xchg
cmc
xchg
in
dec
jg
es
and
inc
add
testb
jmp
mov
pusha
enter
ds
cltd
test
cmp
pop
insb
mov
mov
gs
test
mov
jbe
int
add
and
cld
mov
int
dec
cmp
jmp
cmp
in
mov
mov
int3
fstl
xorb
mov
jge
pop
add
lea
cmc
lret
mov
xor
insb
repz
mov
adc
inc
xchg
nop
jno
cmpsb
icebp
or
inc
fcomp
adc
stos
or
scas
add
jb
pop
insl
addr16
xchg
push
dec
fisubl
test
jmp
add
ficoml
xchg
inc
or
xorb
sti
call
jne
out
or
out
xor
jle
xor
push
push
pop
adc
inc
add
and
popa
pusha
sbb
pop
add
loop
push
ss
sarb
pop
push
mov
dec
add
test
in
mov
cmpl
xchg
cmpb
push
bound
push
mov
dec
pop
icebp
in
xchg
sbb
jp
pop
pop
out
sbb
add
push
daa
sbb
fbstp
repz
push
push
xchg
push
in
adc
jb
fs
jl
xor
push
dec
adc
mov
jne,pt
adc
testl
in
shrb
rorb
sbb
mov
add
xchg
aas
dec
inc
adc
dec
popa
push
ret
adc
jb
int3
repz
mov
xlat
fldl
cmp
xchg
or
in
jb
xchg
dec
in
shrl
sti
mov
push
loop
dec
cmp
leave
mov
loope
dec
xadd
repz
cmpsl
outsl
add
sti
adc
cli
test
rorb
in
inc
lock
jno
push
pop
movsl
cmp
dec
lods
dec
int3
dec
jae
add
fidivrs
std
pop
int
cld
test
xchg
mov
popf
and
add
pop
cs
loope
outsl
test
stos
sbb
mov
and
cmp
xor
pop
es
je
sub
mov
adc
mov
cmpsb
jnp
fwait
sub
adc
enter
arpl
push
add
clc
les
mov
test
or
dec
xchg
jecxz
pop
push
mov
scas
pop
call
popa
fisubl
xor
pusha
mov
mov
addl
inc
lods
cmpsb
mov
mov
sti
jecxz
cmp
xchg
je
dec
out
mov
inc
xor
fldcw
jne
fimuls
pusha
pop
sbb
sti
lcall
pushf
icebp
lret
lds
mov
mov
pop
inc
jl
movsl
dec
dec
and
cmpsb
insl
insb
icebp
jp
mov
adcb
inc
sub
loopne
imul
inc
jle
sub
out
enter
outsl
xor
enter
loop
sub
stos
ljmp
loopne
imul
je
ss
inc
icebp
xchg
mov
lods
or
das
pop
call
inc
rorl
pop
xor
out
je
jno
lcall
pop
xchg
int
push
andl
xor
in
and
mov
or
xor
data16
jnp
sub
and
fildll
dec
lds
push
pop
xchg
stc
jnp
sbb
xchg
roll
push
jbe
dec
adcl
jb
mov
push
scas
ja
mov
popf
mov
flds
sbb
test
mov
lea
mov
inc
xor
mov
push
enter
mov
fdivp
inc
rol
mov
stos
test
push
lret
ja
negl
xchg
mov
inc
ret
adc
or
lret
out
push
jo
test
push
push
fimull
add
pop
sub
adc
jp
and
cmc
cmp
hlt
shll
clc
int3
shl
movsl
push
test
aas
mov
xchg
inc
mov
pop
lcall
outsb
xchg
adc
mov
rcll
jl
pop
xor
sub
jnp
push
hlt
in
sub
fnstsw
or
dec
jle
mov
int3
sub
bnd
fnstsw
pop
add
js
aaa
ret
mov
dec
mov
int
cmp
xchg
adc
pop
or
lods
pop
insl
sub
jle
cmpsl
in
xor
imul
scas
fwait
notl
sub
pop
test
sbb
jp
add
nop
orb
jl
outsb
js
dec
adc
cs
jne
shl
stos
mov
movsb
aas
imul
xchg
dec
addr16
sub
loopne
ljmp
mov
ror
mov
mov
std
std
lds
jnp
mov
aam
or
inc
insb
addl
push
stos
push
cmpsb
aam
mov
cmp
mov
mov
xchg
mov
rcrl
xchg
int3
inc
inc
clc
push
leave
ds
in
dec
jle
cmp
movsl
pushf
push
sbb
pop
lock
sub
adc
inc
xchg
mov
or
icebp
push
ja
jns
and
scas
add
mov
das
mov
outsb
cmpsb
sub
mov
mov
arpl
xchg
and
mov
xor
xchg
push
aaa
jl
sub
or
mov
movsl
jge
inc
jmp
mov
scas
fcomps
outsl
dec
mov
sbb
je
out
and
cmp
leave
mov
pusha
push
adc
in
xor
movsl
repz
fsub
int3
lods
bound
fwait
pop
int
out
xchg
pop
decb
lret
sarl
adc
popa
sbb
cmp
stc
ficoml
sub
sub
mov
xor
loope
and
jne
inc
lahf
push
les
in
into
aad
lcall
in
fidivs
inc
cld
jp
ljmp
es
xchg
cmp
outsl
jg
pop
mov
cmp
les
and
fcmovb
jae
cmp
pop
xchg
and
movsb
xlat
mov
xor
out
cmpb
shll
insb
jge
cltd
rcr
mov
jle
adc
sbb
aam
xchg
ret
pop
ret
inc
aad
mov
lcall
cmp
lahf
push
mov
sbb
daa
pop
sub
scas
icebp
push
movsl
pushf
sub
aad
sbb
in
xchg
xor
gs
or
ds
andb
mov
negb
fdivl
cmc
mov
jmp
fdivrl
ja
xchg
jecxz
mov
cmpsl
mov
aas
ds
mov
cmpsl
sub
bnd
ror
clc
lods
lea
in
and
push
add
lock
sub
or
aaa
jp
je
lds
hlt
jle
orl
pop
shll
mov
push
mov
ret
mov
sub
sbb
sbb
addr16
test
jne
push
adc
jns
sarb
test
popf
aad
lret
mov
popa
out
push
xchg
mov
push
sub
jnp
lds
inc
mov
jbe
jle
pop
dec
mov
cmp
in
lcall
cmpsl
sub
lds
jns
rep
or
push
mov
dec
ja
sub
inc
cli
xorl
pop
cwtl
fimuls
fisttps
dec
pop
loopne
fs
lods
jmp
idivb
loopne
lock
adcb
mov
inc
cmp
mov
cwtl
daa
push
in
js
add
pop
or
nop
lcall
out
sbb
test
jge
lods
cmp
xchg
iret
lcall
push
bound
cmc
jle
push
iret
or
pop
sti
mov
inc
xchg
fsubl
loopne
sub
sub
add
xor
add
xor
mov
sbb
fistpll
push
mov
in
or
mov
jne
cld
je
jnp
push
addr16
into
lret
lcall
xorb
enter
push
sahf
mov
cmp
inc
push
fidivs
hlt
push
add
inc
sub
sbb
pop
mov
rorb
mov
mov
xchg
stos
xor
and
sub
addl
add
and
sub
sbb
int3
rcrb
or
cmp
repnz
jle
add
dec
xor
cwtl
je
mov
lret
stos
sbb
sbb
stos
into
inc
outsb
cmp
fsubs
icebp
cmpsb
mov
push
sub
push
shll
push
in
sbb
sbb
jle
push
loope,pn
popa
dec
mov
mov
lret
jae
shrl
out
bound
jecxz
push
dec
repnz
fdivl
inc
lock
jmp
add
cld
pop
call
pop
mov
arpl
mov
inc
int
mov
mov
pop
jmp
xor
add
ljmp
mov
fstps
mov
inc
sub
mov
cmp
cwtl
sbb
push
sub
mov
pushf
jp
adc
mov
ret
shlb
cmp
sub
inc
sbbb
movsl
mov
xchg
or
and
lods
loop
and
jmp
sub
daa
jle
mov
mov
shl
xchg
add
and
cmp
call
xor
jg
std
sub
mov
jno
lods
mov
and
cmp
push
lret
sti
lret
lahf
call
outsb
pop
cmpsb
dec
popa
xchg
jo
bound
add
sti
pop
cwtl
xchg
or
in
mov
push
mov
fldcw
and
ds
sub
loope
sti
push
mov
sub
ret
insl
mov
cltd
fmulp
daa
rorb
dec
adc
inc
aad
int3
pop
cmc
cwtl
and
xchg
xchg
arpl
lcall
pushf
rcl
xchg
xchg
in
fcmovbe
xor
les
jbe
cmp
xchg
push
dec
mov
stos
mov
test
mov
aas
out
sub
jne
nop
rorl
sub
sbb
or
adc
jg
sti
decb
in
movsl
xor
in
fwait
mov
sbb
daa
fmuls
mov
xlat
pop
xor
mov
orl
adc
mov
lock
dec
mov
xchg
in
push
out
sbb
pop
negb
out
or
sbbb
in
subb
push
xorl
iret
cmpsb
popa
sbb
es
add
mov
movsl
repz
mov
sub
pop
scas
sti
xcrypt-ctr
cmpsl
fwait
xor
call
int3
or
jne
push
sarb
scas
mov
pushf
add
xor
jnp
aam
mov
movsb
adc
pop
bound
sub
scas
cmp
sbbl
fcompl
add
xchg
aad
cwtl
dec
jmp
in
cmp
push
aaa
shl
add
push
or
and
ja
out
mov
lret
push
xchg
int
fiadds
lret
dec
cli
pop
cmp
mov
xchg
pop
fidivrs
stc
and
rcr
popa
int3
inc
mov
or
or
daa
pop
hlt
arpl
rcl
jl
mov
mov
or
dec
jnp
cli
ret
int3
pop
sbb
push
add
mov
mov
mov
bound
pop
out
cmc
dec
lock
sub
arpl
cli
ficoml
pop
adcl
or
mov
movsl
and
pusha
ds
lret
aaa
inc
fdivs
mov
or
sub
data16
int
xchg
cmpsb
mov
sahf
lods
lcall
hlt
sahf
push
popf
mov
add
sub
imul
inc
jo
and
out
dec
fldl2t
ret
xor
loope
hlt
imul
pop
ffree
mov
jno
mov
loope
xor
mov
adc
ffree
fwait
loope
cmc
jns
push
es
out
repz
xchg
ss
xor
push
jns
das
jno
mov
sbb
fwait
dec
scas
ss
stos
iret
jae
sbb
addb
cmpsb
enter
out
lea
in
loope
mov
or
fistpl
data16
jmp
repnz
popf
in
cwtl
and
mov
adc
mov
ljmp
push
jmp
lods
jl
inc
int3
sub
cmp
lcall
les
dec
or
sub
cmp
hlt
shlb
pop
jnp
inc
sub
jmp
fimull
je
ret
cmp
fisubrl
out
popa
add
rcr
and
pusha
cmp
dec
js
js
jmp
out
ja
mov
add
xlat
inc
cwtl
jmp
xchg
test
movsl
xor
dec
dec
adc
es
push
adc
jmp
jnp
into
jbe
dec
arpl
xlat
sub
aam
push
sbb
xchg
mov
push
mov
and
in
push
fdivs
sti
jno
or
and
cmp
sbb
dec
and
data16
fdiv
imul
aaa
push
mov
push
cmc
ss
push
gs
bnd
fdivr
decl
int3
jmp
sti
mov
inc
lret
adc
mov
pop
in
jmp
sub
and
push
in
mov
mov
cmp
pusha
cltd
mov
int3
mov
mov
lea
loop
mov
push
dec
mov
sub
xchg
mov
out
in
jge
cmpsb
pop
push
loop
jo
sub
push
fs
mov
out
lcall
cmp
sub
or
faddp
hlt
mov
fldt
imul
mov
and
mov
add
pusha
lods
loope
xchg
mov
jle
cli
xor
dec
xor
js
stc
movsl
pop
outsb
cltd
or
mov
pushf
aam
mov
popf
dec
shll
fnstenv
jle
jb
mov
cmp
mov
and
xor
mov
sub
jle
mov
push
cmp
sbb
dec
push
test
or
push
dec
je
sub
jg
xchg
mov
pop
sub
enter
fdivs
inc
inc
cs
and
pop
mov
add
mov
mov
push
lods
fsts
and
sub
pop
imul
adc
movsb
push
jg
jno
scas
es
pop
jmp
into
cwtl
and
scas
cmp
xchg
mov
cmp
loop
leave
pop
or
bound
fstl
jge
sbb
xor
mov
outsl
nop
pop
clc
mov
jno
out
lret
cmpsb
outsl
xchg
stos
sbb
push
test
sub
je
rcr
rorl
sti
adcl
sti
bound
lahf
iret
sub
test
jge
pop
mov
test
std
jp
inc
sti
xchg
jnp
fmulp
cmp
incl
enter
sub
std
enter
sub
xor
pop
fdivr
pop
or
mov
xlat
stos
aad
mov
pop
test
popf
lahf
push
mov
or
adc
pop
rcrl
pop
in
sbb
aam
add
aas
lods
ret
cwtl
test
dec
jecxz
std
in
adc
fcmovne
cli
mov
out
sbb
adc
pop
in
mov
cmp
into
or
dec
cmp
mov
fs
outsl
imulb
cmp
adc
data16
cmp
mov
int
mov
iret
push
loop
into
lcall
iret
out
int3
test
pushf
or
dec
push
fstpt
cmp
js
push
rorl
iret
cmp
loopne
mov
cmp
pop
cmpsl
mov
icebp
lods
cmp
les
ljmp
loopne,pn
fsubrs
test
decl
and
push
adc
rorb
movsb
in
xor
inc
repnz
push
push
dec
pop
jp
ljmp
fistps
fs
mov
jbe
clc
xor
arpl
mov
sarb
xor
pop
aas
cmovle
jo
sbb
push
sbb
jge
leave
jp
push
lds
cmpsl
fucomi
movsl
in
fstl
jnp
adc
cmp
cmp
imul
cli
dec
push
test
movsb
xchg
sbb
xlat
mov
pop
lcall
imulb
addr16
adc
les
push
and
paddsw
cmc
aas
adc
pop
rclb
dec
add
sub
push
push
out
and
push
adc
aad
add
mov
cmp
int
jp
xorl
ss
test
mov
xchg
xchg
push
cmpsb
mov
leave
mov
xorb
test
hlt
aas
mov
loop
inc
fcmovbe
test
in
push
mov
adc
add
push
pop
adc
inc
in
inc
les
ja
mov
testl
mov
daa
and
mov
mov
push
stos
test
rolb
inc
scas
or
push
xorl
add
lods
push
mov
in
lret
arpl
jns
or
dec
orl
std
lock
adc
push
sbb
addl
xchg
les
jbe
out
push
daa
cli
push
mov
std
imul
mov
mov
mov
sbb
sbb
xchg
and
call
mov
cmp
in
cs
jb
ds
ja,pt
clc
faddl
sub
mov
das
call
jecxz
enter
cli
mov
scas
mov
inc
loope
fcom
inc
xchg
push
push
test
inc
orb
leave
fstps
adc
sahf
std
ljmp
adc
sub
mov
push
out
add
cwtl
add
push
pop
jbe
sub
cmp
cmp
add
push
aas
in
fidivrl
push
sub
aaa
push
push
adc
adc
int
test
sub
jo
scas
das
aaa
or
out
push
mov
mov
adc
es
push
sub
mov
jmp
movsl
mov
push
repnz
mov
pusha
cmc
ret
xor
inc
xchg
inc
or
jp
or
icebp
dec
icebp
xchg
add
in
push
cmp
add
scas
pusha
mov
inc
mov
mov
mov
adc
inc
les
add
lret
testb
in
and
adc
bound
add
jae
jb
cmpsb
jns
cli
lahf
mov
popa
or
sub
lret
ret
shr
adc
xchg
mov
adc
mov
jmp
cwtl
nop
or
dec
pop
inc
mov
ret
mov
fcmove
outsl
cmc
pop
cmc
xor
xchg
je
bound
mov
ficompl
push
popa
ret
cld
mov
nop
hlt
mov
sub
in
cwtl
xchg
inc
sbb
hlt
mov
mov
movsb
dec
and
mov
adc
mov
sahf
addr16
jb
mov
callw
sbbb
mov
shrl
ds
lods
xchg
ja
mov
add
xchg
cmp
push
inc
push
mov
jae
repz
icebp
adc
jmp
std
and
xchg
testb
and
leave
je
test
lock
push
je
test
iret
and
or
or
repnz
loope
sbbb
inc
mov
cltd
xchg
popf
xchg
lock
das
clc
jge
mov
test
or
xor
lcall
and
push
and
in
cmp
pop
add
or
pop
push
fdivs
push
outsl
loope
adc
adc
rcll
shll
andb
adc
and
aaa
aaa
cmp
sub
rcll
imul
push
dec
push
push
add
and
push
mov
addr16
aam
mov
into
hlt
xchg
mov
test
inc
sub
test
push
cmp
fdivrs
iret
sbb
xor
lods
cmp
mov
repz
arpl
add
imul
jbe
jnp
jb
jbe
sbb
add
cs
cmp
mov
pop
xchg
aas
lods
mov
ret
pushl
mov
cmp
mov
stos
arpl
or
aaa
xchg
xor
pop
cltd
add
outsl
or
add
mov
dec
mov
andl
test
or
leave
lods
scas
sbb
fildl
popf
pop
popf
jbe
and
xchg
jnp
mov
sbb
dec
xchg
fs
push
sub
test
jmp
out
fnstcw
ja
ret
data16
adc
pop
add
out
mov
psadbw
jmp
arpl
arpl
add
pop
test
lahf
test
cmp
push
aaa
pop
jmp
fmull
sbb
stc
dec
repnz
dec
and
add
imul
inc
in
std
int
and
stc
mov
mov
sub
imul
and
fcos
inc
or
sbb
inc
sarl
inc
adc
mov
movsb
pop
and
sbb
cmp
daa
ljmp
jp
lods
shlw
inc
lea
dec
inc
sahf
pop
mov
gs
push
shlb
enter
mov
and
or
dec
lods
test
int3
dec
adc
mov
inc
and
nop
sbb
mov
out
mov
mov
and
loopne
inc
outsb
repz
pusha
sub
js
shlb
add
mov
mov
xor
dec
int
test
fstpt
jmp
ja
jle
sahf
mov
cmpsl
xchg
adc
jp
adc
xchg
add
orl
xor
inc
mov
add
stos
scas
pop
or
shll
jecxz
sbb
outsb
xchg
add
lods
push
pop
roll
jbe
mov
int3
scas
mov
fildll
mov
and
jbe
lds
xchg
inc
add
ret
pop
cwtl
pop
popw
lcall
stc
mov
add
clts
out
dec
push
or
mov
sti
sbb
adc
mov
fidivs
fistpll
ss
push
jno
jo
cwtl
jp
int3
test
jmp
sti
pushl
sahf
adc
rcrb
cmp
push
and
jmp
inc
mov
cmp
mov
inc
add
jo
dec
lret
add
xorl
or
nop
mov
ret
dec
filds
push
in
sub
out
ret
mov
mov
loopne
jmp
jmp
roll
add
ja
hlt
sarl
call
ds
je
pushw
mov
sahf
ja
push
je
mov
mov
je
jg
das
xchg
testb
xchg
mov
xor
xchg
add
insl
mov
test
push
pop
xchg
cs
jecxz
lahf
push
lock
mov
int3
mov
movsb
inc
fsubrl
outsb
jb
loopne
and
jns
mov
insl
lock
scas
mov
sbb
adc
jnp
fmull
loopne
hlt
adc
jmp
mov
add
fdivrp
push
dec
xchg
xor
aas
xor
or
jo
cli
insl
lahf
js
inc
jl
rcl
jle
add
sub
sub
fisubrl
sbb
xchg
popa
pop
push
xchg
inc
sub
xor
neg
negl
push
and
scas
jno
and
jle
or
xor
cmp
movsl
insl
mov
mov
popf
outsb
pop
xor
jb
lahf
in
out
cwtl
cld
popa
and
inc
xchg
push
xor
popa
jae
jle
adc
js
adc
xchg
push
push
sub
shrb
xchg
fwait
sub
jns
sti
or
mov
sub
mov
or
loop
jb
push
mov
in
ja
fcoms
inc
das
mov
das
outsb
push
dec
push
xlat
inc
fldl
xchg
cmp
out
cmp
aad
inc
int
pop
stos
adcl
hlt
sbb
mov
mov
clc
jg
std
mov
push
dec
adc
pop
arpl
je
sahf
jns
ds
ret
loopne
or
or
jmp
jbe
call
add
jle
fcompp
call
and
loopne
popf
cwtl
cmp
in
out
and
and
push
dec
addr16
loopne
jns
rcll
cld
xor
sbb
xchg
subb
in
mov
in
lcall
dec
push
xor
std
insl
pop
rol
and
loop
imul
leave
mov
adc
inc
cmp
mov
xor
jp
cwtl
mov
mov
mov
xor
xchg
jo
insl
loopne
xor
arpl
cmp
mov
adc
es
mov
mov
cmp
pop
push
xor
enter
in
and
dec
sti
cmp
aad
std
jge
xchg
xor
adcb
cli
mov
ja
lods
ljmp
or
xchg
xor
xor
jmp
xor
hlt
fimull
shrb
inc
sub
sbb
repnz
imul
aaa
cmp
add
xchg
sub
imul
adc
hlt
loope
pop
bnd
lock
add
std
sbb
jno
cmp
or
sbb
cmpl
fildll
nop
xchg
mov
lods
sub
jo
das
dec
mulb
aas
xchg
jb
es
dec
aad
xor
int
and
fwait
dec
dec
mov
cmp
jg
jge
pop
and
idivl
mov
cmp
inc
mov
pop
cmp
in
data16
in
cwtl
pop
mov
push
outsb
fistpl
and
aas
std
orb
sarl
fcoml
sbb
mov
lods
movq
add
jne
scas
inc
push
mov
in
movsl
adc
mov
insb
imul
and
cmp
jne
mov
jmp
lds
push
mov
pop
cmp
jo
xchg
cwtl
push
test
fs
insl
or
and
popa
and
das
es
addr16
lea
scas
pop
leave
sahf
lods
push
push
fwait
xchg
push
adc
push
insb
mov
dec
fnstenv
std
lahf
outsl
jns
nop
and
and
or
outsb
lods
notb
mov
sbb
push
push
pushf
inc
fwait
mov
repnz
aad
loop
test
cmpsb
push
jg
popa
sbb
aam
aas
inc
sub
mov
mov
xchg
sbb
xor
repnz
ds
aaa
push
jge
dec
rol
adc
sub
mov
mov
inc
sub
out
fldenv
idivl
jg
sbb
sbb
test
popa
mov
fwait
imul
fst
mov
adc
pop
call
in
in
pop
push
push
or
push
and
mov
push
push
dec
cmp
mov
insl
cmp
filds
shll
mov
loopne
fildll
pop
fwait
mov
pop
and
mov
sbb
mov
lahf
cmp
js
sbb
or
into
pop
mov
push
test
movsl
idiv
mov
cwtl
jmp
scas
sub
push
inc
scas
and
inc
inc
rcrl
sbb
and
arpl
cltd
outsl
xor
cmp
cmp
dec
fs
aas
xor
mov
dec
jb
mov
mov
mov
outsb
or
stc
andb
and
sub
dec
cli
add
and
mov
jns
push
push
mov
scas
cwtl
in
leave
dec
pop
push
adc
sarl
shll
aam
out
mov
push
ja
ss
cmpl
mov
add
repnz
fcompl
in
mov
pushw
jmp
test
add
mov
xchg
mov
fwait
push
ss
adc
movups
dec
negl
mov
sub
fldt
out
repnz
lock
cli
add
jp
pop
mov
pop
and
leave
leave
adc
xchg
xchg
pop
fdivs
ds
popa
sbb
mov
mov
mov
insb
scas
pop
dec
clc
movsl
fwait
lds
out
jbe
jecxz
aas
js
mov
jb
popa
mov
mov
push
cs
jle
iret
mov
and
xor
xchg
mov
mov
das
mov
scas
xor
or
js
xchg
icebp
popa
sbbl
push
xchg
push
fisttps
lock
into
cld
outsl
jmp
test
pushf
mov
pop
cld
and
adc
in
add
in
int
pop
jp
jle
fisttpll
into
std
cwtl
push
mov
rorl
out
int3
jb
dec
mov
jno
lahf
mov
jmp
mov
mov
in
pop
mov
adc
and
scas
scas
xchg
dec
dec
shrb
fadd
mov
orb
lds
fs
cmp
insb
lods
fstpt
lds
inc
dec
pusha
movsl
nop
lcall
add
dec
xor
fninit
inc
test
dec
cli
push
push
sbb
inc
out
xor
and
add
in
xchg
shrb
pop
sbb
pop
lea
fwait
lds
adc
test
shrb
in
cli
or
insl
jae
sbb
popa
pushf
test
push
mov
scas
ja
mov
nop
repz
pop
popf
in
pop
xchg
test
inc
ret
inc
mov
pop
lahf
jle
add
ds
addr16
jno
aaa
outsl
ds
sub
out
jmp
mov
xor
xor
pop
xor
fidivrl
inc
repnz
mov
xor
cmc
repz
das
xor
add
sbb
adc
mov
nop
loopne
lea
or
cmc
mov
pop
adc
inc
test
mov
mov
test
cld
inc
lock
inc
pop
orb
das
or
mov
fisubs
cmpsb
fsubrs
sbb
pop
int3
fnstenv
sub
xchg
aad
mov
repz
int3
mov
pop
pop
pop
mov
shrl
add
in
loop
call
jno
or
xchg
xchg
fsubr
cmp
pop
adc
sub
add
jb
lds
inc
or
or
pop
aad
xchg
into
sub
ror
idivl
push
jb
mov
int
jle
lret
enter
pop
sbb
push
sub
adc
xchg
fisttps
mov
mov
push
lds
add
lret
push
xor
adc
int3
lock
xchg
jle
xor
jns
inc
je
pop
and
or
or
push
in
adc
aas
pushf
xor
sti
jno
or
pop
sahf
cmp
pusha
sub
pop
lahf
outsl
mov
dec
lea
mov
outsb
lret
test
jnp
xchg
mov
xor
add
dec
stos
push
out
fwait
arpl
stos
xor
shl
jl
dec
stos
jmp
and
xchg
push
ffree
lret
inc
repnz
add
popf
jmp
dec
pop
int3
jle
cmpsb
pop
outsb
jecxz
jo
push
ds
testl
jbe
push
pop
shlb
pop
pusha
cmp
pop
aas
leave
cmpsl
xor
addr16
iret
add
push
int
cmp
insl
fs
inc
mov
cmp
inc
adcl
push
outsl
and
sbb
iret
popf
loopne
rorl
fiadds
mov
lret
push
notl
jmp
adc
jnp
mov
jmp
pop
les
xchg
insb
cs
push
sub
cmp
repnz
arpl
mov
daa
fidivl
shll
add
jbe
fidivs
sbb
mov
and
xor
aas
jge
jg
mov
loopne
sarl
xor
push
adc
scas
lods
mov
stc
pop
xor
add
in
jns
xor
movl
loopne
orb
xchg
mov
mov
cmpsl
dec
xlat
lahf
and
lds
loope
dec
sbbl
xchg
lahf
repz
xor
cltd
incl
sarb
sti
jp
cmpsb
mov
icebp
call
faddl
push
stos
push
pop
xchg
push
inc
jne
push
jo
sbb
sbb
inc
fsubrl
dec
loopne
xchg
push
push
imul
dec
cld
xor
xlat
scas
pop
xor
ss
ret
orb
cld
pop
gs
lods
inc
rorl
pop
stos
rcr
push
clc
mov
cmp
or
xlat
add
pop
push
cmp
or
xor
sub
iret
lea
dec
or
push
push
mov
scas
out
mov
adc
fmull
xchg
jp
mov
jl
dec
cmpsl
cmp
pop
xchg
out
xlat
jae
test
sub
dec
mov
push
push
pop
sub
adcl
fstpl
jle
push
arpl
jb
test
sub
xchg
out
jmp
pop
call
out
push
adc
int
jp
fwait
je
pop
scas
mov
jns
into
into
inc
cmp
cmp
sub
aad
js
inc
adc
add
mov
test
push
in
mov
int
outsl
and
hlt
inc
dec
pushf
mov
and
jge
push
jmp
imul
rol
js
add
movsb
into
mov
add
jae
out
fs
ja
jnp
dec
add
seto
adc
push
rcrl
or
add
jo
pop
das
add
lods
pop
lahf
cmp
mov
outsl
out
xchg
iret
enter
pop
xchg
cmp
fisubrs
and
pop
testb
inc
adc
dec
or
adc
test
test
dec
leave
mov
push
iret
inc
ja
adc
cmp
fwait
or
outsl
push
stos
imul
std
inc
xor
cmp
lea
inc
in
dec
mov
push
jg
adc
lret
in
sbb
fwait
je
and
xchg
lock
icebp
jge
dec
sbb
pop
xor
dec
fimull
push
xor
es
lret
mov
mov
ljmp
stc
and
lds
cmp
jo
fwait
cmp
daa
test
leave
sti
xchg
les
std
cmp
je
js
stos
inc
mov
and
test
pop
ja
daa
dec
pop
popf
lahf
cld
pop
in
aad
dec
mov
fcmovnb
jle
outsb
lret
lret
push
push
mov
jl
rcl
mov
inc
cmp
mov
enter
scas
mov
daa
ret
loop
add
xchg
xchg
ret
sbb
lahf
cmp
cmpsl
in
cli
inc
imul
push
pop
cli
test
adc
iret
dec
stc
dec
or
icebp
shlb
push
movsb
pop
pop
loope
sub
in
sub
ret
pushf
mov
jl
or
rsm
push
scas
jns
jns
js
jge
xor
movsl
cli
cltd
xchg
mov
lds
cltd
xor
inc
xchg
fisttps
cmp
push
cld
pop
dec
xchg
das
inc
xor
es
aam
movl
subl
aas
sbb
dec
lea
adc
insl
repz
and
xchg
xor
adc
xchg
jle
inc
mov
adc
stos
add
imul
popf
mov
xor
clc
fs
and
lds
dec
inc
fsubs
adcl
out
push
shrb
insb
sbb
aam
cmp
mov
pop
inc
and
out
dec
out
push
lahf
mov
adc
pop
inc
dec
je
and
cmp
hlt
xor
sbb
fcoml
pop
mov
adc
inc
ret
mov
cmp
mov
in
lahf
lret
lods
add
aad
push
or
loopne
int3
pop
xorb
mov
lret
add
jb
stos
mov
add
mov
lret
cmp
pusha
aas
xchg
jg
push
in
lock
cmp
adc
jb
cld
bnd
add
lods
jge
daa
cmp
stos
mov
mov
sti
jl
pop
sbb
cld
mov
outsl
jmp
jae
aaa
test
adc
push
or
mov
in
xlat
lea
aam
dec
out
nop
loope
sbbb
mov
insb
adcl
or
jne
sub
pop
aad
or
sar
imul
push
rcrb
out
cmc
mov
mov
bound
idivl
push
mov
pop
cmp
cmpsl
inc
cmpsb
pop
insl
imul
insl
cli
call
sbb
mov
rorl
or
out
les
insl
fdivr
inc
and
sarl
cmp
xlat
ds
xor
dec
fwait
pop
push
and
scas
mov
mov
sbb
repz
stos
adc
or
movsl
pop
push
adc
mov
dec
xchg
lods
pmulhw
lods
lahf
popa
cmp
mov
sub
sbb
popa
mov
sbb
hlt
sahf
mov
and
pop
inc
sbb
insb
xchg
xchg
sub
jnp
pop
jp
insl
mov
hlt
pop
push
dec
rcr
cmc
into
mov
stos
mov
enter
ror
sbb
mov
lods
testb
xlat
sub
xchg
and
pop
mov
add
pop
lahf
clc
fidivl
mov
test
pusha
push
pushf
insb
mov
push
mov
sub
add
inc
daa
jbe
cmc
cmp
lret
fnsave
xchg
int3
mov
hlt
into
hlt
int3
outsl
sbb
inc
push
jne
pop
lods
cmp
inc
mov
xor
rcl
or
ds
enter
xor
dec
pop
sub
mov
xor
imul
roll
imul
dec
push
outsb
xchg
dec
mov
mov
push
test
mov
inc
ficompl
jns
jo
sbb
pushf
out
or
stc
mov
cmp
and
in
leave
xchg
movsl
cli
adc
xchg
frstor
add
xor
ret
addl
lea
popa
cmc
push
lock
mov
aam
fdivs
adc
jecxz
inc
cltd
ss
inc
xor
ret
aad
cmpl
stos
sub
adc
mov
pop
sub
push
dec
out
mov
nop
std
fs
mov
repz
mov
repz
insb
inc
pop
mov
push
pop
adc
jb
enter
and
lods
cmpl
insb
sub
fs
dec
jp
int3
ss
pop
orl
push
push
outsl
popf
je
cmp
jg
xchg
inc
shrb
cmp
jp
in
dec
dec
jmp
movsl
mov
sub
js
out
test
jnp
outsl
jg
xlat
jne
mov
movsl
lds
mov
push
and
outsb
lods
mov
jecxz
xor
lds
push
enter
sub
and
fldl
jb
jg
notl
data16
js
adc
add
pop
std
mov
mov
rcrl
or
out
cli
or
lcall
scas
xor
aam
xlat
xor
push
fs
lods
int
add
fmull
fmul
adc
xor
sbb
xor
sbb
pop
lods
data16
dec
push
inc
sbb
sbb
rcrb
pusha
test
mov
xchg
xlat
cmp
push
aam
pop
push
push
dec
jo
push
cmpsl
icebp
xchg
mov
loope
xchg
repnz
cmp
cmpsl
mov
in
ss
or
cmp
push
movd
inc
push
push
xchg
mov
test
adc
imull
or
fidivl
inc
push
dec
aam
dec
std
push
ret
repnz
mov
or
cwtl
insb
cld
insb
dec
push
mov
push
xchg
add
nop
push
pop
loope
push
outsb
adc
jg
lea
pop
sahf
int
daa
iret
imul
in
push
and
cmp
imul
loop
push
hlt
repz
inc
bound
sbb
nop
ss
popf
jne
icebp
xchg
sbb
leave
cmp
cmp
cmp
iret
sbb
mov
xor
loop
cli
fimuls
roll
inc
lret
mov
lcall
popa
test
mov
push
mov
loopne
pop
sbb
push
mov
rolb
pop
dec
inc
fistpll
push
push
js
negl
es
add
pushl
verr
adc
jmp
mov
mov
pop
das
repnz
insl
in
cmp
dec
lods
cmp
push
test
mov
jp
xor
test
movsb
pop
cmp
movsl
pop
mov
dec
arpl
pop
lea
sbb
loope
stos
loope
dec
sbbb
mov
call
in
in
pop
call
shlb
int3
sbb
inc
push
jg
dec
fistpll
outsb
shll
cmp
dec
outsl
add
add
or
xor
cmpsl
fsts
jp
xchg
push
jbe
popa
popa
and
add
xor
adc
cmp
xor
scas
pop
xchg
lret
mov
std
mov
outsb
in
adc
jo
fldl
scas
mov
sbb
out
inc
adc
xchg
das
fdivrs
addr16
rorb
pop
fisttpl
sbb
mov
loop
pop
or
push
sarb
mov
addr16
pop
dec
rcrl
sbb
int3
add
in
xor
neg
fwait
clc
mov
loope
sub
repz
or
xor
clc
mov
and
xchg
mov
mov
cmpsl
sbb
sbb
push
lcall
push
jecxz
test
nop
scas
jns
or
mov
sub
pop
mov
sahf
mov
mov
sbb
imull
inc
jns
nop
dec
into
xor
mov
dec
mov
stos
mov
popa
popa
dec
mov
fwait
and
inc
arpl
xor
push
cmp
into
nop
adc
dec
cmp
ret
cld
adc
jo
cs
lds
xchg
inc
pop
call
add
lahf
inc
push
or
mov
mov
or
stc
mov
ja
mov
outsb
int
xchg
movsl
mov
movsb
inc
and
xor
xor
jno
addb
test
pop
out
roll
push
push
arpl
mulb
mov
repnz
mov
jbe
jp
setg
mov
jo
mov
lea
lcall
or
andl
movsb
ret
jo
pcmpgtd
rorl
mov
scas
gs
sbb
loope
and
lea
outsb
xchg
pop
adc
pop
pushf
add
fisubl
je
mov
pop
lods
lods
call
push
iret
sbb
add
or
imul
fiaddl
ss
xor
cmpb
pop
dec
or
xchg
sbb
rolb
cmpb
fisubl
test
adc
xchg
or
xchg
mov
adc
addl
fcomi
aad
mov
mov
xor
inc
xor
arpl
into
bnd
jo
dec
jl
xchg
movsb
dec
call
popa
pop
fsubs
and
sbb
lods
jnp
pop
dec
dec
sub
add
or
adc
cmpxchg
pushl
cmpsb
roll
fwait
pop
ret
jne
sub
clc
dec
outsb
sbb
pop
in
push
jne
dec
push
mov
clc
dec
lds
int3
cmp
loope
xor
out
movsl
pop
test
push
xor
mov
andl
out
lahf
ds
bnd
les
call
stos
les
mov
sub
iret
and
fnstcw
cmp
dec
mov
ljmp
iret
push
repnz
or
jnp
sbb
iret
jne
add
adc
in
adc
insl
push
ret
push
test
push
loope
ret
mov
sub
mov
popa
cld
shr
in
adc
xchg
mov
insl
sub
push
mov
mov
cli
jp
js
xchg
clc
mov
ss
mov
pop
clc
add
fwait
jle
xchg
dec
adcl
pop
sub
inc
aad
xchg
jo
in
pop
mov
mov
fstpl
icebp
pop
outsl
out
clc
movsb
iret
push
pop
gs
dec
pop
lcall
es
arpl
mov
mov
icebp
mull
pop
pop
ljmp
inc
mov
sub
dec
lods
jl
rcrl
fsubrl
jae
ss
pop
les
loop
aad
adc
notl
add
and
cmp
jns
bound
dec
mov
lea
mov
jecxz
jbe
es
js
cmp
jnp
dec
ljmp
cmpsb
clc
xor
mov
enter
dec
or
mov
fs
stos
mov
shrb
insb
add
mov
rcr
shlb
lods
pop
jg
mov
and
dec
repz
cwtl
lods
push
sbb
movsl
jecxz
adc
hlt
rcr
mov
pop
jnp
dec
into
repz
jb
sub
loope
or
rcll
imul
test
xor
mov
outsb
mov
sti
xlat
repnz
aaa
aam
mov
aam
jo
pop
das
lcall
dec
cwtl
cmpsl
dec
jmp
adc
outsl
fstps
mov
inc
xchg
in
dec
mov
inc
dec
sahf
xchg
dec
fsts
fbstp
aas
bound
mov
xchg
ss
xchg
mov
mov
pop
shll
jb
cmp
punpcklwd
pop
outsb
cli
inc
loope
cwtl
jno
mov
lds
cmp
adc
shll
add
ficoms
mov
and
add
and
xor
sahf
imul
xor
icebp
lcall
jp
lock
fwait
sbb
xchg
adc
stos
and
dec
push
test
push
jb
repz
push
in
jl
cmp
pop
xlat
or
cmp
int3
or
cmp
dec
dec
jne
fistl
insb
in
sub
bound
call
push
lock
mov
inc
sub
arpl
inc
or
lds
mov
adc
ret
insb
ret
test
test
xor
mov
adc
lock
shll
mov
adc
or
fiaddl
jae
mov
mov
out
xor
aaa
dec
xlat
mov
imul
sahf
mov
mov
cmc
adc
xchg
lds
jnp
bound
push
test
lods
popf
addr16
icebp
clc
hlt
xchg
shll
dec
and
or
dec
je
pop
add
fistps
les
push
mov
les
xor
xlat
pop
mov
dec
hlt
out
imul
dec
mov
xchg
test
dec
push
pop
sub
and
xor
fcmovnb
inc
add
sbb
xchg
or
push
daa
fisubs
xor
cwtl
mov
mov
mov
push
pop
mov
dec
or
jbe
push
push
xchg
add
xchg
xchg
scas
pop
xchg
lods
sbb
xchg
ret
or
xchg
add
sahf
add
xchg
push
sbb
js
mov
pop
in
daa
leave
mov
fmull
add
add
cli
push
icebp
roll
lahf
sti
push
dec
inc
lock
xchg
lods
mov
scas
out
test
mov
imul
pop
int
pop
push
test
pop
es
sub
mov
cld
push
imul
mov
addr16
jae
hlt
cmp
pop
leave
scas
ret
cmp
test
jb
and
and
or
ret
dec
sub
pop
push
jge
dec
andb
dec
sbb
jb
les
pusha
jmp
adc
sub
add
push
xchg
dec
cmpsb
in
andl
add
addl
addr16
mov
cmpsl
pop
push
cltd
adc
push
push
dec
fsubrs
add
mov
testb
mov
repz
ss
ficoml
dec
fsts
xor
ficompl
xlat
add
mov
push
mov
sarl
pop
loop
adc
inc
lods
push
fidivs
push
lahf
mov
mov
mov
mov
sbb
ljmp
movsb
xorl
stos
or
cmc
push
jbe
mov
xchg
lret
push
mov
or
subb
cmpsl
xchg
in
popf
push
sub
xor
pop
iret
or
cwtl
loope
es
xor
inc
push
pop
xchg
pusha
xchg
orb
or
icebp
pop
mov
sbb
out
fwait
push
ss
push
imul
repnz
ret
test
aas
pop
sbb
in
hlt
es
fadd
pushf
jge
outsb
loopne
xlat
fstpt
repnz
jno
adc
jo
sbb
pop
jge
sti
mov
mov
sbb
push
mull
mov
ds
adc
inc
stc
xor
xchg
push
cltd
xchg
enter
scas
psubsw
arpl
cmp
inc
in
shl
jecxz
shlb
in
popf
mov
iret
mulb
sub
cld
ja
rcll
stos
out
dec
enter
mov
jecxz
lahf
addr16
movsb
cmpsb
mov
icebp
xchg
xchg
xchg
xorl
in
xor
add
jb
pop
mov
pop
xchg
mov
mov
push
insl
lods
and
enter
ret
mov
push
in
fisubl
adc
shll
mov
out
in
inc
out
cmp
sub
xchg
lret
or
test
or
call
call
in
lret
xor
xchg
cmp
int3
inc
addb
xor
or
pop
and
and
js
push
inc
ror
clc
mov
inc
fisttpl
or
aam
pop
push
movsl
les
sti
sub
pop
xor
pop
mov
fdivrs
fcomi
or
in
insb
dec
or
pop
xor
ret
mov
mov
hlt
sbb
adc
ror
inc
icebp
mov
out
or
sub
icebp
out
ss
out
push
addr16
repnz
cwtl
mov
sub
sbb
and
pop
loopne
sub
mov
push
jmp
in
fwait
scas
test
jne
imul
sbb
pop
inc
push
arpl
lock
or
xorb
daa
and
lods
inc
xor
ret
testb
xchg
fldl
jge
mov
mov
push
into
push
dec
or
int3
js
in
dec
xor
cmp
dec
inc
fdivrl
push
push
cmpsb
movsl
jne
xor
fisubl
jae
adc
out
popf
fnstsw
jo
test
fcoms
imul
std
mov
out
cmp
cmc
ss
cmp
ror
pop
push
jnp
xor
imul
xor
xlat
pop
mov
stos
js
loope
pusha
addl
jle
movl
dec
mov
movsb
mov
pop
jle
mov
and
cmpsl
inc
pop
mov
fisttpll
cmpsl
xor
divb
pop
mov
test
push
loope
jb
dec
es
dec
cmp
push
les
mov
pop
xorb
or
push
adc
lea
lock
movsl
call
mov
jno
sub
lcall
jo
inc
mov
push
icebp
adc
fwait
push
sarl
inc
or
enter
pop
push
mov
loop
xor
test
mov
push
out
mov
and
out
loop
stos
popa
dec
popf
addr16
iret
sub
push
mov
cmpsl
add
mov
push
pop
push
add
pop
movntq
and
imul
test
adc
dec
dec
aaa
or
dec
cmpsl
inc
mov
insb
pop
xchg
test
or
mov
sub
adc
adc
aas
js
push
xlat
mov
mov
lahf
insb
adc
lcall
iret
xchg
pop
cmp
outsb
jno
jo
cmp
and
out
aaa
fwait
out
dec
aad
cmp
test
dec
inc
sahf
fcmovne
mov
rcrb
xor
out
mov
out
fwait
popa
insl
cwtl
ret
mov
inc
mov
mov
out
fisttpl
testl
mov
scas
fadd
sbb
ret
movsb
mov
pop
mov
stc
mov
scas
cwtl
sub
xchg
scas
and
cmc
mov
inc
rorl
ss
std
popa
xchg
push
push
mov
mul
xor
or
sub
and
push
mov
stos
ret
add
xor
jno
xchg
adc
inc
dec
mov
aam
pop
ret
push
in
mov
or
and
and
push
lret
ret
jl
popa
lea
pop
dec
rcrl
insb
pusha
sbb
sub
fstpt
push
sbb
cmpsb
or
incl
xor
int3
nop
pusha
mov
aam
xchg
les
hlt
mov
push
inc
or
mov
cmpsl
ss
hlt
jns
sbb
subl
xor
inc
pushf
dec
test
lahf
mov
adcb
mov
out
leave
icebp
inc
and
andb
push
bound
enter
cmp
notb
mov
in
pusha
pusha
test
aam
push
push
scas
jo
or
cwtl
dec
scas
jle
push
inc
rcll
inc
sub
stc
inc
mov
jae
hlt
fcoml
xchg
lcall
movsl
js
push
scas
scas
ret
jo
ja
push
cmp
dec
std
aad
push
add
inc
mov
ss
dec
push
jb
aam
xchg
imul
xor
rol
js
lret
mov
mov
addr16
sbb
dec
dec
popa
push
outsl
cmpb
jno
xor
cltd
and
cmp
lret
test
pop
jge
mov
dec
mov
xorl
xchg
in
cmp
pop
mov
jmp
jbe
mov
sub
push
movsb
sub
push
movsb
mov
xor
xor
and
jbe
stc
adc
pop
in
xchg
fbstp
loopne
pushf
mov
cmp
lret
pop
sahf
mov
rclb
das
inc
pop
lods
push
add
push
movsl
dec
xchg
jmp
les
outsl
mov
test
adc
mov
out
cmp
jbe
mov
xchg
xlat
mov
js
sub
addb
inc
push
pop
data16
mov
sub
mov
int3
pusha
push
outsl
mov
pop
cmp
subl
pusha
dec
hlt
test
jp
dec
pop
cwtl
xchg
jge
lcall
inc
daa
mov
cltd
in
pusha
popf
out
pop
icebp
sub
adc
cmp
mov
sub
mov
mov
pop
jns
movsb
stc
mov
sub
inc
movsl
or
fidivs
sbb
inc
inc
scas
fcomp
hlt
pop
scas
mov
xchg
inc
mov
ljmp
pop
test
rclb
loopne
xchg
xchg
push
out
rcrl
std
mov
push
in
dec
pop
ja
hlt
xor
lds
jmp
es
fwait
pop
pop
xchg
aad
xchg
xlat
ljmp
xchg
or
cltd
dec
mov
mov
mov
dec
push
lcall
pop
je
out
daa
sub
lock
rorb
cmp
inc
in
js
jl
lea
daa
lret
sub
dec
xchg
aam
ret
mov
insl
mov
jp
cwtl
je
aad
loope
cmp
insb
ficompl
notb
pop
jbe
cwtl
cmovge
jmp
ficoms
lods
xor
mov
imul
or
movsb
dec
inc
mov
int3
mov
inc
cmc
cmpsl
jle
add
pop
push
or
lods
adc
xor
sub
pop
jo
lahf
jl
xor
movsl
ljmp
cltd
add
cmp
repnz
shll
or
insl
mov
ljmp
sahf
repz
xchg
mov
lahf
xchg
xlat
xlat
jl
mov
lock
adc
dec
lods
lcall
es
in
pop
sbb
jb
dec
gs
jns
out
insl
adc
xchg
shrb
insb
pop
mov
sti
jge
loope
movntq
out
scas
pop
inc
or
aam
pop
jns
outsl
xchg
mov
imull
sbb
adc
call
arpl
jnp
dec
jecxz
notb
push
scas
xchg
pop
addb
jnp
cmpsl
aam
pop
dec
stos
push
ficompl
repz
pop
insb
dec
movsb
subb
mov
idiv
ljmp
ret
enter
inc
jg
jge
mov
xor
inc
mov
pop
push
add
pshufw
into
int
pop
movsb
enter
jecxz
das
or
inc
andl
int
ss
ret
xchg
test
in
icebp
ljmp
idivl
nop
jo
rcr
ds
in
push
lock
shlb
mov
stc
test
jbe
jb
sbbb
lret
adc
ds
add
int3
jnp
lahf
jecxz
sub
and
mov
adc
aaa
test
xchg
cmpsb
xor
lods
jae
cli
cltd
jle
mov
add
popf
push
mov
arpl
xor
fistpll
jmp
jns
test
ljmp
mov
les
fidivrl
andl
shrb
ds
adc
push
xchg
cmp
push
mov
nop
stos
call
sub
aaa
rcrb
xchg
rolb
iret
ds
pop
mov
cli
dec
lahf
ret
lock
sbb
mov
sbb
xchg
test
xchg
inc
stos
imul
xchg
jb
clc
mov
pop
add
xor
adc
addr16
in
mov
add
adc
mov
adc
sbb
xchg
es
xorb
add
imul
cmp
fiaddl
and
mov
sub
mov
testb
sub
or
jae
jge
in
hlt
ljmp
imul
jecxz
inc
test
inc
push
push
stc
nop
int3
jb
or
loope
stos
jg
cmpsl
insb
call
inc
jecxz
mov
iret
inc
mov
lds
dec
sub
mov
and
es
push
cmp
aam
pop
lret
dec
mov
sbb
dec
test
inc
lret
test
outsl
adc
add
aam
inc
xor
dec
pop
inc
in
dec
sbb
jmp
push
cld
and
dec
popf
push
push
repz
in
hlt
sar
jbe
mov
idivl
lock
sbb
xor
adc
lock
hlt
or
mov
into
xor
fmull
rcrb
inc
insb
cmp
xor
movsl
arpl
and
jp
test
xorl
ljmp
jmp
mov
pusha
xchg
jno
and
xor
push
xchg
inc
mov
jge
pop
cmpsl
adc
mov
hlt
fmull
ds
shlb
lock
popf
int3
mov
rcl
pushaw
pop
and
pop
out
xchg
push
shr
lcall
jns
jle
adc
dec
scas
lods
fidivrs
or
mov
lea
rcrb
xor
adc
in
dec
push
ret
ja
rcrb
out
mov
test
add
ss
js
jl
outsb
rclb
jb
int
add
mov
sub
mov
jne
jbe
xchg
nop
popf
adc
add
stos
mov
pop
lods
lret
mov
pop
inc
ds
cmc
daa
pop
jno
arpl
or
stc
xor
mov
out
movb
xchg
xchg
sbb
adc
or
pop
out
in
bt
or
arpl
adc
les
outsl
jmp
mov
subl
pop
test
mov
mov
pop
shl
push
call
lock
test
or
push
cwtl
sbb
movsl
inc
lods
pop
jo
dec
imul
leave
dec
pop
arpl
xor
pop
jp
push
rcrl
or
xchg
faddl
fldenv
cmp
push
add
fidivs
add
int3
lret
mov
clc
stc
push
jb
mov
inc
inc
inc
xor
test
fdivp
por
aam
jbe
in
xchg
in
pop
jge
test
inc
test
xor
dec
lock
insb
sub
adc
adc
jne
cld
orb
pushf
adc
scas
lods
adc
xchg
mov
loope
sub
sbb
lcall
int
stc
xor
or
cmc
cmpsb
fistps
push
and
xor
add
es
sub
lock
inc
sbbl
aad
mov
das
popf
imul
jmp
add
jne
push
dec
jle
or
push
leave
adc
jno
pop
xor
lods
xchg
xor
mov
mov
push
je
fbld
and
sbb
xchg
out
rorb
xchg
xchg
mov
lods
xchg
or
sub
jg
push
xchg
xchg
stc
iret
addr16
sub
xor
or
xchg
mov
jge
push
imul
in
sbb
cwtl
ja
cmpsl
jbe
xor
subl
enter
lds
push
push
roll
cmpsb
mov
stos
icebp
inc
mov
xchg
push
ja
insl
test
mov
inc
int
inc
or
call
pop
testb
mov
mov
inc
shr
sbb
xchg
fnstenv
pusha
stos
xor
adc
ljmp
mov
lds
pop
dec
jl
and
push
inc
out
mov
popa
pop
sbb
xor
sahf
outsl
mov
jnp
ljmp
push
fucomip
rorl
sub
rclb
xchg
xor
enter
fwait
decb
pusha
cmpsb
cmpsl
cmp
out
lret
mov
inc
mov
aas
inc
inc
enter
outsl
ja
cmc
or
sbb
cmpsl
push
out
sbb
pop
jle
imul
pushf
pop
cmpsl
rol
arpl
ljmp
dec
xor
test
sarl
jo
fs
leave
mov
repz
xor
inc
pop
sub
adc
lret
lahf
jae
daa
pop
mov
jno
sub
sbb
and
mov
out
xor
and
mov
popa
aaa
add
cs
or
and
adc
or
je
cs
cli
xor
push
jmp
jae
and
movsb
fidivrl
pushf
dec
test
jle
pop
mov
or
call
xchg
cltd
cmc
push
mov
std
stos
mov
repz
in
rcrb
xchg
aaa
xor
dec
mov
inc
mov
mov
nop
lcall
das
or
xchg
sbb
mov
lea
pop
sbb
xor
movsl
mov
cmp
adc
cmp
inc
movsl
test
mov
scas
cs
je
rorb
int3
mov
ljmp
mov
mov
add
std
lds
jae
add
in
aas
xor
aam
sbb
ljmp
sbb
leave
add
cltd
mov
out
cld
fdivs
andb
inc
incb
sbb
inc
dec
out
adc
or
movsb
daa
sti
or
dec
loop
outsb
or
lahf
xor
jno
mov
in
xchg
scas
pop
cli
ja
mov
xchg
scas
aad
adc
cltd
sbb
jno
dec
dec
sub
sub
lods
xor
xchg
xor
xchg
call
xchg
mov
or
cmp
dec
cmc
sbb
pop
pop
stos
push
jae
cmp
mov
in
dec
pop
lahf
out
out
lahf
loope
jb
in
xchg
nop
test
cli
xor
gs
sarb
pop
mov
test
scas
movl
jp
repz
jg
mov
jnp
pop
test
xchg
dec
cmp
pop
and
and
xor
jns
stc
mov
movsl
push
insb
mov
sub
push
inc
clc
rcrl
inc
test
mov
jmp
addr16
push
push
and
xchg
nop
lds
dec
lods
dec
ja
xor
inc
in
scas
pop
xor
test
sub
lds
sub
lods
pop
and
cmpsb
outsb
sahf
jp,pt
stos
dec
mov
jle
leave
fdivrs
mov
mov
inc
arpl
cmp
add
and
jl
jne
int
sbb
ljmp
mov
out
rcrl
mov
mov
dec
inc
pop
test
scas
fs
jo
das
mov
mov
mov
dec
mov
xorb
pop
inc
jnp
mov
out
ret
incl
or
push
push
mov
ds
clc
mov
jae
mov
or
push
repz
cwtl
xor
xchg
push
adc
cmpsl
cmpsl
push
test
mov
push
ret
repnz
ret
ds
xchg
mov
sbb
xor
fbstp
subb
fucomip
not
jns
push
test
cwtl
sbb
clc
lds
fs
xor
jb
cmpb
leave
inc
adc
fistps
dec
add
outsl
insl
stos
pop
daa
out
test
mov
rcrl
lret
test
cltd
cmc
fs
loope
adc
popa
scas
pusha
in
int
dec
leave
leave
insl
inc
push
in
push
adc
aam
insl
in
cld
jmp
lods
repnz
pushf
pop
iret
add
imul
or
cmp
lret
or
bound
pop
lret
insl
popf
push
xor
inc
sub
push
rorb
add
cmp
add
sbb
jmp
jo
push
mov
ss
or
ja
inc
scas
sbb
push
cmpsb
and
add
sahf
scas
scas
pop
enter
push
inc
adc
jecxz
mov
or
sarb
mov
fadds
ret
jo
fistpl
enter
mov
sti
push
xchg
sbb
int3
dec
or
xor
leave
stc
and
ficomps
xor
cmp
push
mov
bound
pushf
cmpsb
dec
adc
pop
outsb
or
xor
sub
xor
or
pop
lret
cmp
push
lea
pop
fbld
imul
ret
loope
adc
and
icebp
aad
lret
cmp
dec
sub
inc
inc
inc
sub
mov
aam
jae
pop
push
out
sub
insl
jl
fstps
jbe
mov
cwtl
loop
fsub
xor
inc
das
loopne
mov
or
mov
sti
pop
scas
jbe
fwait
lret
sti
xorps
pusha
insl
push
jecxz
into
and
sbb
movsb
push
mov
xchg
mov
mov
xor
and
and
jae
cld
xchg
lock
cmp
fsubr
sub
pop
jo
cmc
shlb
imul
cmp
aas
jle
mov
cld
repnz
aam
mov
iret
mov
adc
or
sbb
push
mov
sub
into
inc
sub
gs
sub
loope
insb
mov
mov
inc
testb
ss
add
xchg
sahf
sub
sbb
xor
mov
int
icebp
jns
push
dec
subb
push
mov
stos
xchg
cmp
in
test
add
ss
sub
frstor
sti
outsl
inc
loope
js
dec
std
pop
add
mov
addb
jae
lahf
xlat
lock
lahf
dec
cmp
mov
xchg
lahf
sub
push
and
cltd
mov
xor
mov
scas
shlb
ficoml
icebp
sub
xor
add
test
mov
sahf
loop
fldl
stos
sahf
inc
xchg
pop
xor
out
iret
lret
arpl
sbb
mov
and
push
mov
xchg
ret
push
and
push
and
leave
bound
sub
xor
push
adc
lods
pop
movsl
cmp
xor
xor
or
push
adc
or
in
shrl
xor
xchg
fnsave
or
push
and
dec
mov
out
push
mov
addl
data16
jmp
stos
sub
mov
adc
mov
clc
in
inc
inc
push
lock
sti
push
popf
cmp
inc
sbb
insl
cltd
vmovaps
mov
in
fldt
cmp
ja
aam
arpl
dec
ret
inc
and
scas
int3
mov
ret
adc
pop
add
int
hlt
addr16
adc
xchg
decb
mov
fadd
js
pop
inc
clc
pop
cmp
mov
jge
lret
push
cmp
aam
out
sbb
lret
pop
xor
out
lcall
push
inc
nop
dec
cmpb
inc
mov
jl
arpl
xchg
fmull
xchg
dec
loop
adc
pop
ds
in
xchg
mov
xchg
data16
push
mov
dec
sbb
loopne
or
or
lcall
aas
xchg
xor
xchg
ret
sub
out
pop
sub
and
fnstenv
add
push
mov
push
aam
pop
fmulp
dec
movsl
test
sub
pop
sub
inc
in
or
push
in
mov
cltd
push
repnz
inc
rcrb
jmp
sub
adc
xor
push
insb
stos
lock
pop
gs
mov
aad
out
push
adc
sub
mov
jg
cs
loop
xchg
xor
cwtl
aad
and
lcall
aad
mov
mov
dec
inc
add
adc
arpl
push
mov
in
mov
call
stc
cld
jne
out
and
and
ss
mov
pop
mov
sub
imul
and
push
ret
hlt
or
lods
subb
gs
repnz
nop
ficompl
clc
jae
xchg
movsb
mov
sub
adc
shrb
dec
or
jp
and
cmp
cld
inc
cmp
push
mov
fnstsw
test
aaa
xchg
adc
xchg
fcompl
pop
mov
sti
es
push
sub
lods
dec
and
sahf
jg
mov
cmp
outsl
xor
imul
aad
test
sub
push
sti
loope
and
inc
in
or
jg
jno
repnz
sub
push
push
sbb
sub
in
mov
inc
add
cltd
pop
lret
sbb
pop
cmp
dec
xor
or
sahf
xchg
or
xor
int3
push
add
loop
mov
push
sub
xchg
cs
jbe
xchg
nop
lds
push
pop
mov
inc
dec
adcb
pop
hlt
cwtl
mov
arpl
push
xor
inc
aam
cs
mov
push
pop
mov
jmp
lret
mov
dec
cmp
lret
dec
faddp
lret
mov
cltd
and
and
aas
sub
adc
sbb
rcrb
loope
hlt
fistps
ret
insb
stc
mov
notb
xchg
repnz
rcrl
fisubl
sbb
mov
sub
rcrb
scas
or
shlb
pop
stos
push
lea
stos
cmp
scas
adc
mov
hlt
mov
lcall
mov
xchg
faddl
dec
out
insb
push
test
test
sub
xor
scas
inc
jns
sub
dec
push
or
testl
es
int
mov
andb
inc
sbb
jnp
mov
int
mov
sbb
xlat
push
aas
sub
mov
jp
add
inc
mov
test
xchg
add
cmpsl
iret
or
sub
icebp
lahf
in
sahf
mov
insb
enter
mov
xchg
fsubrl
movsb
dec
xchg
pop
inc
inc
mov
lret
lret
adc
frstor
cmp
jmp
imul
fnstcw
jae
jecxz
in
out
lcall
adc
cmc
lret
inc
lods
or
jmp
or
aaa
rorl
stc
inc
es
fcompl
inc
inc
out
out
stc
popf
aaa
mov
sti
or
sub
bound
icebp
fcoml
mov
adc
sub
mov
int3
xchg
xor
mov
pop
lcall
cltd
adc
loopne
sti
ud0
rol
iret
aad
lret
dec
mov
ret
movsl
xchg
sub
stos
cmp
mov
jo
nop
iret
aam
enter
aad
std
push
insb
cltd
cmp
fisubrl
xchg
dec
fsubrs
ficoml
mov
xor
jecxz
and
incl
add
add
ljmp
mov
dec
sbb
cmpb
fidivrl
add
cmp
xlat
xchg
out
dec
cmpl
mov
add
enter
jnp
loope
fldt
jmp
cld
rorb
jmp
adcb
js
fwait
int
push
xorb
or
or
xor
pop
sbb
cmp
sbb
pop
xor
popf
push
dec
mov
pop
jo
andl
cmpsb
fstpt
sub
call
popa
adc
inc
pop
cld
mov
pusha
mov
repnz
push
out
shll
sahf
std
jle
add
mov
js
pop
rcr
dec
jl
xor
sarl
imul
outsl
imul
mov
add
push
xchg
mov
xor
in
lcall
stc
pop
insl
push
dec
rcrb
icebp
hlt
fidivs
mov
divb
gs
adc
int
mov
pop
xchg
call
lods
mov
cmp
push
push
and
pop
imul
orb
arpl
rcll
sahf
jne
jp
adc
pop
cs
push
dec
sub
fnstsw
adc
jp
int3
mov
cld
lret
and
inc
out
in
mov
and
ds
in
xchg
inc
leave
shld
add
mov
mov
cmpsb
adc
iret
mov
stos
scas
mov
mov
es
test
jnp
insl
fcomps
out
push
aas
mov
add
mov
adc
cmp
lret
adc
mov
cmp
adc
xor
test
pop
scas
test
repnz
jnp
xchg
inc
subl
adc
cmp
jle
lahf
ret
insl
loope
in
inc
testl
pop
xor
mov
mov
mov
mov
mov
and
pop
or
stc
lahf
jb
dec
pusha
dec
and
mov
cli
int
lret
jno
in
sarl
fcomps
mov
loopne
jnp
sti
fwait
iret
and
dec
or
and
and
or
fdivrs
into
sbb
cmp
mov
or
mov
hlt
popf
lods
pop
add
and
iret
or
mov
inc
lea
push
fsubrs
and
mov
sub
pop
or
scas
fwait
xor
int3
push
adc
jnp
inc
jb
dec
xchg
stos
xchg
fwait
cmp
inc
xlat
push
scas
fxch
dec
xor
add
rclb
fsubr
lds
cs
mov
and
jge
mov
jecxz
imul
int3
out
and
aad
int
mov
jns
and
and
sub
scas
mov
sti
hlt
adc
inc
add
and
lods
cli
das
pop
aad
cmpsb
rorl
hlt
cs
loope
aaa
fdivrs
add
xchg
sub
incb
mov
pop
cmp
cld
lds
mov
movsb
dec
sub
loopne
pop
mov
js
punpcklbw
jne
repz
jnp
mov
dec
repz
sub
out
dec
mov
es
add
mov
cwtl
jmp
lods
xor
repz
incl
jmp
ja
movsl
pop
pop
pop
cmpsb
mov
and
dec
mov
xchg
ljmp
mov
pusha
shlb
fldl
jne
pop
jmp
sbb
pop
pmulhw
repz
js
xor
orb
lea
add
arpl
aas
inc
cmp
push
sahf
adc
addr16
iret
scas
xchg
xchg
add
sub
push
mov
mov
pushf
lret
popf
mov
and
daa
sti
jmp
sarb
mov
ret
lret
inc
pop
pop
sbb
inc
loopne
jno
test
push
add
nop
cmp
gs
sbb
cmp
hlt
and
int3
lods
test
inc
pop
pop
cltd
test
cmp
pop
pop
outsl
dec
dec
out
mov
in
sarb
das
xor
xchg
lock
imul
adc
adc
and
pop
mov
pop
addr16
cmpsb
jo
in
sbb
mov
push
or
outsl
push
mov
arpl
in
int
sbb
std
sbb
nop
fwait
ret
fs
imul
pusha
and
pop
testl
mov
push
nop
test
jo
loopne
jge
nop
jnp
xchg
into
fdivr
xorb
icebp
mov
aad
push
fisttpll
inc
adc
inc
xor
inc
mov
shll
lds
fsubrp
mov
fidivrl
les
nop
rcrb
mov
inc
jl
lea
pop
repz
jp
xor
bound
push
data16
xchg
mov
fcompl
or
aam
sbb
or
ljmp
sbbl
dec
fldenv
push
push
mov
test
rcll
xor
inc
fs
sub
jnp
sub
mov
enter
mov
rolb
cmpsb
jbe
and
fisubrs
test
sahf
movb
jmp
adc
add
add
popf
xchg
iret
andb
das
adc
negl
xchg
cmp
and
sub
or
inc
fsubrs
pop
xor
popa
cmc
arpl
shl
xchg
adc
mov
insb
hlt
jge
dec
aas
push
fcmovu
mov
or
sub
scas
or
cltd
adc
je
ljmp
jl
popf
in
xor
jo
test
pop
fnstcw
mov
jmp
pop
sti
or
jbe
lcall
mov
cli
test
flds
pop
xchg
lret
cmp
mov
inc
in
cmp
rcrl
push
mov
stc
sub
sub
imul
push
out
xor
loopne
sbb
aaa
inc
enter
movsb
lahf
or
sbb
out
test
cld
mov
xchg
cltd
jmp
lret
push
cltd
mov
mov
cmp
dec
and
sbb
cmpsb
xor
sarb
repnz
inc
and
out
mov
mov
sarl
mov
sub
icebp
dec
mov
fwait
push
jmp
push
jecxz
cs
out
sbb
and
mov
cmp
push
push
cmp
push
rcrl
cmp
xchg
lds
xchg
ror
adc
movsb
xchg
popa
in
jbe
std
andb
ret
data16
cmp
or
icebp
dec
push
sub
sub
leave
aas
movb
mov
cmp
mov
outsb
jbe
xchg
pop
loop
out
pop
sub
or
and
add
push
jbe
pop
shlb
and
repz
sti
std
aad
jbe
subb
mov
imull
lds
push
daa
sub
xor
mov
outsl
enter
out
movsl
out
shl
pop
or
inc
push
mov
mov
cltd
outsb
jbe
push
aaa
stos
mov
enter
xchg
ds
and
push
or
cmp
icebp
js
pop
add
cltd
jne
subl
mov
popa
addr16
adc
add
xor
jns
xchg
adc
cltd
sti
les
leave
add
rcrl
jno
shll
in
or
lods
mov
repz
sti
test
mov
jecxz
push
or
stos
pusha
addr16
bound
insb
pop
jge
push
imul
sbb
mov
fbld
shr
jbe
lea
jmp
repz
and
pop
daa
incb
fs
push
leave
fnstcw
pushf
and
movsb
stos
dec
sbb
sbbl
and
push
iret
dec
xchg
sti
in
sbb
mov
pop
adc
repnz
insl
jp
lcall
aas
jle
cld
lds
fists
jl
lods
test
test
jg
inc
repnz
cld
repz
mov
inc
fistps
roll
test
ja
gs
call
gs
out
dec
ss
xor
nop
or
xchg
or
cmpl
or
jle
enter
xchg
pop
cmpsb
dec
ja
mov
shrb
sti
and
sub
and
insl
add
mov
out
lock
std
mov
pop
pop
rolb
insb
dec
jl
int3
jmp
bound
add
loope
mov
imul
pop
clc
mov
cmpsl
pop
lds
xchg
rorl
leave
stos
and
sub
fsubr
mov
jle
dec
push
add
mov
sti
outsb
imul
fimuls
mov
jne
mov
push
pop
xor
frstor
cs
cld
lds
cmp
mov
dec
xchg
les
mov
fnsave
mov
shlb
lret
jl
push
pop
push
sahf
pop
add
lds
mov
push
cmpb
imul
outsb
daa
cmp
lret
std
mov
repz
leave
notl
into
icebp
insl
push
ja
cmp
jne
mov
imul
lods
clc
pop
bound
cmpsl
sbb
add
mov
mov
xlat
in
dec
lcall
jg
pushf
xchg
fwait
lahf
das
pushf
data16
inc
mov
addl
push
inc
movsb
jecxz
sub
lcall
out
xor
out
popf
xchg
mov
xor
clc
dec
test
dec
xor
lret
push
jne
pop
adc
mov
cli
insb
cli
js
xchg
aad
fidivs
leave
dec
jmp
in
cmp
insl
outsl
xor
dec
fdivrl
lret
push
iret
push
mov
xchg
lock
fwait
adc
lods
loop
lock
cwtl
loope
and
add
loope
sbbl
popf
lret
notb
lahf
pusha
imul
mov
or
std
in
hlt
or
repnz
cmp
mov
enter
rcrb
ds
ret
sbb
mov
dec
popf
or
pop
stos
adc
push
popf
xchg
xor
push
lock
adc
adcb
and
xchg
lock
xchg
cli
adc
cmc
mov
add
xor
cmpsl
cmc
dec
stos
insl
xchg
ja
adc
pop
mov
outsl
mov
sub
lods
sbb
sub
in
mov
jmp
subl
lds
shl
jl
not
mov
lcall
gs
mov
ret
jbe
sub
icebp
scas
add
inc
jnp
test
test
mov
jecxz
add
jo
push
xchg
inc
mov
xor
js
dec
into
pop
mov
hlt
scas
and
icebp
divl
inc
push
dec
sub
rcrl
cmpsb
cwtl
or
xor
adc
test
or
or
cmp
jp
movsl
lret
iret
ret
add
and
hlt
or
pop
push
cld
mov
pop
xchg
lds
std
sub
pushf
int
andl
insl
pushf
leave
pusha
push
jp,pt
add
cmpsb
and
fnsave
test
insw
stos
stc
fsts
addr16
push
roll
adc
loope
movl
sti
and
iret
aaa
and
jge
pop
enter
mov
loope
pushf
mov
repnz
cmp
jp
rcrb
sub
push
ss
ds
shrl
scas
arpl
xchg
ss
scas
cmp
lock
movsl
adc
sbb
jb
sbb
iret
pop
push
addr16
dec
lods
mov
lods
dec
rcll
test
and
adc
or
mov
fdivl
psubusw
stos
jecxz
fstps
xchg
bound
shr
dec
adc
sbb
hlt
addr16
fptan
mov
pop
mov
xchg
lcall
aaa
cltd
add
push
sbb
stos
jae
aam
loopne
in
sub
ja
xchg
outsl
jle
clc
dec
ds
repz
out
aaa
pop
jmp
cmpsb
sub
sub
push
inc
jl
sub
lods
test
hlt
jb
add
pop
push
hlt
and
stos
in
push
sub
leave
loop
cmp
push
bnd
fcmovnu
mov
and
sub
stc
sub
dec
lcall
fiaddl
sahf
test
inc
mov
adc
cltd
arpl
shll
insb
inc
inc
out
pop
idivb
dec
out
int
out
addr16
sbb
mov
repz
sti
mov
inc
shrb
fcomp
dec
decl
call
call
jl
dec
pop
bound
and
insl
or
sti
imul
test
push
pop
xchg
push
xor
scas
insb
dec
and
iret
inc
mov
lods
mov
inc
add
dec
cld
jmp
insb
sahf
add
stos
repz
sbb
dec
dec
push
xor
je
inc
xchg
push
jno
xchg
or
cli
lea
cmp
out
test
sub
testb
xor
or
or
fistl
jle
aad
cs
ja
mov
mov
stc
adc
gs
mov
jb
add
mov
imul
push
dec
stos
cmpsl
fisubrl
ret
out
or
pop
sbb
dec
adc
sub
push
aad
je
xchg
xor
fs
ret
push
push
lds
addr16
int
mov
xor
adc
xchg
mov
mov
pop
ret
pop
or
xor
and
dec
and
hlt
xlat
cli
fwait
mov
xchg
aas
adc
iret
jbe
dec
popa
sbb
jno
idivl
shr
jns
es
dec
mov
dec
inc
nop
xorb
inc
cmp
sbb
pop
adc
je
cmpsl
popa
ds
clc
mov
cmp
inc
cmp
jns
fbstp
dec
icebp
mov
jnp
mov
cltd
lret
or
sub
lret
imul
pop
sbb
test
mov
sbb
mov
fisubs
pop
roll
or
inc
or
ss
fs
sahf
mov
lret
adc
scas
cmpsl
lds
sbb
add
sbb
cmc
lret
call
cltd
fnstenv
scas
cli
cmc
cli
xchg
pushf
jl
daa
test
inc
enter
test
push
stos
sbb
lcall
mov
out
ljmp
pop
loopne
add
pop
repnz
xchg
mov
dec
or
jns
adc
push
adc
mov
call
inc
lds
jne,pn
cltd
popf
cmp
or
mov
mov
js
lret
pop
lahf
push
fwait
in
cltd
fs
mov
push
rcrb
cmpsb
and
lock
bound
insl
inc
xor
lock
add
fwait
popa
adc
addb
cli
add
aad
test
push
aad
jecxz
xchg
shl
mulb
popf
test
cmpsb
add
add
xor
dec
or
hlt
mov
adc
push
mov
inc
xchg
ss
cmpsb
push
adc
and
cs
js
mov
inc
mov
add
int
mov
mov
leave
insb
adc
or
mov
push
sbb
mull
push
adc
dec
ss
cltd
loop
scas
ja
inc
mov
rcll
out
fldcw
and
je
mov
fnstcw
push
insb
sbb
stos
dec
popa
or
test
lret
mov
pop
stos
jge
mov
add
push
mov
popa
insl
pop
stc
lcall
mov
jo
movsl
dec
or
andb
and
int3
das
push
dec
cmp
sar
fldenv
xor
or
ja
or
lret
iret
jo
repz
es
sub
mov
out
pop
add
jmp
popa
divl
out
mov
enter
pop
jno
pop
xchg
mov
lds
shlb
xchg
or
jb
es
mov
mov
movsl
fadd
or
or
or
cmpsl
mov
and
int3
out
sbb
or
rol
jg
sahf
aam
jns
mov
xchg
mov
mov
jae
push
cmp
mov
out
fiaddl
xor
es
fisttps
mov
sub
jecxz
pop
xor
stc
mov
add
pop
into
repz
push
inc
lret
movsb
insb
and
out
fucomp
shr
fstpt
or
jmp
jns
repnz
sbb
outsb
sti
test
inc
in
xchg
and
lock
clc
imul
pop
add
adc
out
jns
add
aaa
xchg
es
shrl
arpl
or
mov
push
push
jp
pop
xchg
pop
adc
sub
sbb
cli
mov
fimull
jp
inc
in
cmpsb
add
xchg
cld
mov
rcrb
idivl
dec
mov
test
push
cmp
cld
fstpt
push
dec
push
lea
jno
and
sub
adc
sbb
mov
pop
add
adc
lds
sahf
testb
aam
dec
orb
cmp
out
sub
push
jecxz
icebp
loop
shrb
xor
pushf
es
sbb
js
cld
cwtl
jb
xchg
jl
push
dec
pusha
xchg
out
dec
in
push
stos
dec
xchg
inc
xor
xor
mov
aad
imul
add
incb
or
pop
in
mov
inc
mov
lods
repz
push
test
outsb
fldenv
add
xchg
sub
sub
xchg
add
fbld
out
jbe
lods
mov
nop
leave
xlat
ss
iret
mov
and
daa
pop
or
mov
xchg
mov
mov
xor
jne
jmp
add
sub
or
lods
push
adc
xor
repnz
xor
add
xlat
adc
out
inc
test
fisttpll
mov
and
fldl
fisubrs
das
dec
or
pop
xchg
pop
stc
add
ja
das
sahf
xchg
inc
jp
lcall
adc
add
jnp
out
adc
add
lret
mov
ja
xor
mov
aaa
or
xchg
lods
es
lock
inc
scas
mov
pop
cltd
sbb
test
xchg
adc
push
lcall
push
imul
lods
and
push
cmp
push
fwait
dec
jecxz
out
mov
xor
adc
shll
pop
negl
adc
loope
loopne
out
mov
icebp
fwait
lds
out
pop
clc
mov
addr16
adc
mov
push
mov
mov
aas
pop
testl
movsb
sub
arpl
outsl
push
dec
out
sbb
mov
sti
popa
fists
popl
fwait
mov
xor
mov
jge
adc
mov
fimuls
xor
sub
js
lret
or
xor
jbe
faddl
arpl
lea
cld
pop
push
mov
in
xor
imull
pop
shl
inc
mov
cmc
jmp
xlat
jne
rep
mov
outsl
mul
dec
jbe
addl
cmp
inc
and
lods
jecxz
jmp
and
inc
add
call
pushf
jp
mov
lock
cmp
mov
sub
push
pop
clc
sarb
xor
jo
jmp
and
pushf
ljmp
stos
out
pop
push
push
inc
mov
lea
mov
idivl
sbb
sub
push
xchg
push
dec
dec
dec
lock
xchg
out
int3
xlat
pop
lahf
cli
cmp
mov
mov
add
shll
jecxz
addb
testl
cmp
insb
pop
push
mov
int3
ss
gs
lods
std
pop
mov
aam
push
fldl
out
sub
push
call
movsl
arpl
enter
out
in
adc
add
push
cmp
sbb
adcl
inc
loop
and
xor
test
stc
add
shrb
fs
jecxz
subb
jae
jnp
sarb
int
scas
aas
iret
jno
pop
hlt
out
lret
inc
aad
out
mov
repnz
sahf
and
js
repnz
bound
and
popf
aam
shlb
mov
xor
push
push
cmp
mov
popf
clc
mov
out
aas
adc
cmp
ficomps
scas
in
pop
je
and
xchg
in
lret
lahf
aas
sub
dec
and
mov
push
loope
and
xor
jl
or
leave
jl
xchg
xchg
inc
in
xchg
inc
imul
jmp
rolb
jnp
and
push
in
sbb
movsb
lods
dec
test
je
lcall
and
je
out
xor
or
int3
rolb
loope
xchg
adc
mov
ss
lock
mov
scas
sbb
push
mov
xchg
jbe
cmpsb
loope
lret
xlat
in
and
int3
mov
xchg
dec
hlt
adc
cmp
and
test
pusha
cs
scas
push
push
fsubrl
pop
pop
lds
das
adc
ficoml
push
mov
ja
add
cli
dec
mov
adc
push
lods
add
int
xor
popa
jne
fnsave
xchg
lock
sbb
hlt
ret
jp
jns
add
aad
jae
out
mov
pushf
cmp
lods
push
dec
push
hlt
xlat
loope
cmpsb
adc
arpl
in
mov
int
mov
add
add
jae
mov
mov
push
arpl
sbb
imul
nop
dec
fmul
shrl
sub
inc
cmp
enter
push
lods
or
mov
scas
shlb
stos
les
arpl
mov
xchg
mov
pop
jae
inc
add
int
sub
or
imul
cmp
sarb
jo
mov
int
inc
pop
int
sbb
dec
mov
add
xor
ds
jae
idivl
andl
xchg
xor
adc
aam
pop
fldcw
dec
inc
cmc
stos
cmp
ljmp
aad
sbb
mov
mov
das
sbbl
pop
jb
dec
mov
sbb
sbb
sub
shlb
iret
call
sub
fcom
or
mov
xchg
xor
sarl
mov
lods
movsb
xor
jne
sbb
mov
in
out
sahf
xchg
enter
rorb
je
push
sti
xchg
out
les
mov
in
es
adc
mov
mov
movups
lds
cmp
addr16
imull
push
pop
test
ret
and
adc
xor
adcb
imul
mov
outsb
in
pop
shll
and
add
loope
dec
out
add
and
leave
ret
dec
cmpsl
ret
leave
lds
cmp
arpl
jmp
sbb
push
rcrl
fcomip
leave
pop
adc
mov
out
addr16
cmpsw
adc
rcrb
jp
in
xchg
fsubrl
dec
pop
mov
inc
add
sbb
xor
cld
hlt
iret
mov
jl
dec
in
and
lret
pop
pop
xor
loope
xor
sbb
cmp
cmp
test
inc
jmp
cmpsl
aad
inc
add
mov
pop
addb
orl
cmp
ror
outsl
into
mov
xchg
shrb
inc
in
adc
outsl
fimull
jne
xchg
cltd
ss
pop
fisubl
inc
pop
fst
mov
sub
or
popa
push
add
sub
imul
push
and
aaa
push
cmpsl
xchg
sub
dec
or
shrl
in
fmull
mov
mov
frstor
and
add
jmp
pushf
xor
mov
xchg
push
dec
sbb
or
in
mov
popl
rcrl
xor
aas
shll
xchg
xchg
xor
mov
loope
add
fs
stos
push
jbe
cmp
xchg
pop
enter
xchg
sbb
xor
icebp
ja
fisubrl
jb
shr
and
dec
dec
test
adc
fidivl
movsb
fwait
dec
inc
and
pushf
shrl
addl
adc
adc
inc
aam
es
divb
leave
repz
lret
sbb
push
mov
pop
sbb
jne
lods
mov
xorb
lret
std
or
push
outsb
lds
lcall
dec
fwait
dec
xchg
mov
movsl
popf
dec
jo
inc
loope
adc
cmp
outsl
sub
sub
cmp
lea
inc
push
cmp
jp
out
je
jecxz
rol
iret
fcomps
sbb
mov
inc
jb
mov
sub
push
call
mov
popa
push
int3
inc
fisttps
stos
nop
outsl
xchg
iret
inc
cmp
das
scas
aam
xchg
xchg
nop
mov
push
xor
mov
mov
inc
loop
xchg
pop
popf
in
mov
push
loop
aaa
pop
arpl
subb
dec
fcompl
mov
cmp
lahf
adc
push
pop
insl
movsl
stc
ss
cwtl
dec
pop
and
inc
dec
cld
fsubs
cmpsb
inc
jo
lcall
lds
std
mov
shlb
pop
mov
mov
mov
test
and
adc
mov
cmp
cmp
jns
rcl
movsb
xchg
enter
mov
adc
push
fs
pop
sbb
int3
mov
mov
fs
mov
iret
fimuls
int3
sbb
cmp
stc
leave
jb
sbb
fstcw
dec
pushf
aas
leave
outsl
xor
dec
sub
inc
dec
dec
cwtl
into
movsb
out
cltd
test
cmp
or
jbe
and
pop
cli
adc
mov
xchg
test
lcall
lods
test
scas
cli
add
hlt
mov
cmp
jl
sbb
jae
movsl
nop
xchg
dec
mov
cmp
mov
mov
mov
jne
cld
movsb
sub
mov
outsl
mov
cmc
mov
or
inc
sbb
js
cmp
aad
roll
cltd
sub
inc
out
ret
adc
imul
dec
dec
sti
out
jecxz
mov
fsubrs
in
push
loope
leave
shrb
icebp
mov
add
jae
mov
adc
clc
lock
pusha
mov
in
pop
xchg
dec
pop
cs
and
jmp
repnz
sub
pushf
pop
xchg
xor
push
bnd
fimuls
test
push
push
jae
movsb
int
fstl
dec
pop
js
sbb
sarl
or
fisttpl
push
leave
imulb
ds
orb
outsb
scas
les
mov
testb
push
lods
cmp
push
dec
add
fwait
pusha
inc
jmp
inc
aaa
mov
sahf
iret
lahf
adc
neg
sub
mov
mov
outsb
aas
cwtl
repz
or
test
pop
negb
cmp
lahf
lcall
out
push
test
jecxz
lods
mov
or
xchg
xor
movsb
inc
mov
ret
popa
mov
aas
xchg
outsb
adc
xor
mov
js
mov
add
pusha
loop
push
push
dec
fcomip
sbb
out
mov
sbb
inc
mov
stos
popa
push
cmp
lahf
nop
fs
add
data16
stos
xlat
mov
lods
mov
sub
jecxz
out
cmpsl
push
inc
dec
and
or
out
sbb
mov
cmp
loopne
adc
ljmp
ret
in
stos
cmp
pop
push
push
aas
movsl
push
sub
fcoms
pop
repnz
in
jmp
fiadds
dec
invd
out
fsubrl
mov
lds
inc
movsb
pop
mov
add
mov
xor
jno
dec
xchg
mov
pop
jle
mov
ds
pop
test
das
lret
std
mov
mov
inc
js
jno
data16
je
aas
loop
data16
ss
cld
sarl
stos
push
imul
cmc
pop
push
xchg
mov
lea
dec
leave
sbb
scas
or
bnd
popf
mov
xchg
fsts
jp
inc
insb
clc
lds
mov
adc
iret
dec
lret
push
pop
dec
mov
push
jb
and
imul
mov
outsb
and
push
js
mov
or
fisubl
enter
mov
push
ja
inc
inc
cltd
cmpsb
cmpsl
and
sti
sub
cwtl
repz
push
mov
sub
mov
xlat
push
nop
scas
cmpsl
mov
jne
jo
insb
mov
test
in
fidivrl
sub
add
mov
sub
dec
push
test
rclb
ret
stc
aas
push
mov
adc
pop
repz
adc
fdivs
test
out
jmp
ljmp
das
adc
out
push
pop
sahf
ret
and
loop
sub
addl
xchg
idiv
and
fwait
mov
popa
dec
jl
icebp
xchg
dec
xchg
into
ret
and
shll
ljmp
inc
test
mov
jge
xor
aad
clc
pop
jo
add
les
pop
jmp
inc
cmp
xlat
dec
sbb
pop
or
jp
int3
push
push
inc
add
or
out
push
jbe
pop
push
cmpsb
arpl
into
call
push
cmpb
jg
adc
push
fdivl
mov
push
jmp
std
fistpll
in
dec
icebp
ret
sbb
push
xchg
cwtl
mov
push
pop
stc
and
adc
sbb
loopne
je
jg
or
es
stos
jnp
sub
fwait
loope
cmc
and
loopne
adc
inc
xchg
push
std
mov
in
or
cltd
xchg
daa
jp
popl
mov
and
lahf
push
mov
lcall
cmp
loope
scas
push
mov
push
rcrb
adc
xchg
jne
adc
mov
cmp
mov
inc
fbld
call
pop
das
movsl
push
test
cld
push
pushf
pop
mov
pop
sbb
xor
lret
dec
and
xlat
test
mov
int
pushf
pusha
bound
incl
out
test
or
jbe
sbb
push
ret
dec
rcll
mov
shr
outsl
sub
addr16
or
jmp
sarl
fs
push
dec
insb
dec
cltd
sub
cmp
sbb
pop
or
push
stos
dec
sbb
or
pop
leave
aam
and
jg
subl
jp
imul
cli
or
pop
fnstcw
pop
icebp
dec
or
xor
repz
xlat
popf
push
in
nop
jg
mov
pop
test
or
xlat
add
unpcklps
shrb
cmp
sti
dec
inc
sbb
pop
bound
mov
push
mov
push
pop
cmp
push
xor
xchg
pop
sub
scas
push
call
push
xor
or
xor
add
imul
cmpb
mov
add
sub
xchg
cmc
jmp
lods
xor
je
lret
jecxz
push
jg
pop
adc
xchg
es
sub
sub
jg
lahf
fimull
and
outsb
pop
test
repz
sub
loop
add
or
sbb
sbb
jbe
add
enter
xchg
fs
or
dec
mov
dec
cwtl
mulb
fisttpl
xchg
jecxz
sub
lock
sahf
cmp
fadds
xchg
data16
hlt
test
dec
and
xchg
roll
popa
pop
pop
lahf
xor
call
push
pop
xor
mov
or
pop
ja
push
cmp
arpl
out
add
jecxz
in
in
stc
xchg
sarb
mov
hlt
cltd
add
cmp
sahf
mov
dec
mov
mov
ds
jecxz
xchg
shrl
sbb
xchg
push
adc
add
fscale
cmpsb
shlb
mov
and
sbb
mov
notb
adcb
inc
jno
mov
pop
push
dec
cmp
xlat
test
aaa
sti
pop
mov
and
mov
pop
adc
stc
add
lock
addr16
sahf
pop
dec
push
mov
mov
data16
pushf
ret
adc
js
mov
or
test
or
lods
add
pop
in
mov
lea
aas
dec
test
test
subb
push
mov
cmp
or
test
scas
cmp
mov
daa
stos
faddl
les
outsl
push
ret
roll
and
sti
dec
dec
aaa
ss
enter
iret
sbb
andl
mov
xchg
lcall
dec
pop
repnz
sbb
pop
cmpsb
jnp
jo
mov
shl
out
fistl
push
mov
or
mov
cmp
xor
sar
pop
mov
or
xor
leave
xorl
or
lods
lock
jb
dec
sub
jnp
cmp
cmc
mov
push
lret
sbb
das
mov
insl
xlat
sbb
mov
dec
adc
add
adc
mov
jnp
fmull
mov
jmp
push
adc
dec
les
sub
adc
pop
xchg
nop
push
nop
sub
sub
gs
sbb
loop
scas
jb
stos
stos
sub
sbb
or
pop
lret
inc
inc
adc
negb
xchg
or
inc
imul
pop
sub
out
cltd
ret
pop
mov
jmp
iret
mov
push
fsubl
push
mov
xchg
inc
int
sbb
push
xor
xor
imul
pop
xchg
mov
inc
xchg
push
stc
mov
add
fsts
dec
or
pop
xchg
fldcw
mov
rolb
aas
xchg
mov
test
mov
inc
aad
repnz
mov
dec
das
data16
sub
insb
andb
hlt
iret
xchg
xlat
xchg
in
or
push
orb
sub
fstl
inc
int3
mov
in
sti
fdiv
sbb
jmp
sub
xor
jae
pop
inc
fistps
cltd
outsl
mov
jae
repnz
sub
push
ljmp
mov
into
fbstp
push
inc
mov
xchg
xchg
sarl
xchg
adc
das
nop
shrb
xchg
sbb
mov
in
clc
mov
cld
mov
cwtl
inc
out
ljmp
dec
mov
xchg
lahf
mov
mov
in
and
dec
inc
mov
fildl
shll
movsl
fcmovb
jnp
cmp
mov
xchg
lret
and
dec
test
inc
insl
lcall
mov
stc
push
pop
inc
loopne
aaa
fidivs
push
lea
insb
adc
fmul
aad
jl
into
cmpsb
leave
dec
add
dec
cmc
pop
adcl
and
test
les
jg
sbb
fiadds
push
sbb
add
aaa
cmpxchg
mov
sarb
jge
pushf
outsb
in
xchg
insl
movsl
jae
xchg
adcl
xchg
daa
inc
fwait
pop
fwait
enter
popa
popa
loope
mov
add
inc
jne
fstps
movsb
ret
out
add
cmc
in
pusha
imul
jmp
js
sbb
aas
popaw
fcoml
mov
xchg
pop
nop
movsb
xor
pushf
es
ljmp
pop
loope
push
mov
aad
mov
jp
out
lret
movsl
movl
pop
sbb
adc
aad
cmpsb
sub
fwait
dec
xchg
test
in
movsb
xchg
xor
jge
sbb
iret
in
sti
mov
push
repz
mov
mov
ja
out
pop
cmp
xor
shlb
test
inc
or
inc
popf
out
or
out
jmp
pop
iret
xchg
fwait
mov
cmc
ja
icebp
mov
jo
fisubs
sarl
sub
repz
jb
push
or
add
mov
push
in
ljmp
imul
inc
fstl
mov
ficompl
das
xor
sbb
dec
xor
pop
out
out
in
out
push
ret
sbb
mov
and
lods
insl
lahf
in
pusha
mov
sbb
mov
push
mov
dec
fnstcw
jmp
pop
rcrb
or
or
outsl
arpl
mov
leave
mov
leave
mov
and
push
lods
sbb
dec
int
addr16
sbb
fbstp
push
xor
std
scas
inc
lods
roll
loope
xchg
ficomps
add
xchg
dec
dec
sub
adc
mov
xlat
loop
xor
dec
xor
push
ja
sarb
mov
add
jge
fsubl
in
bound
scas
or
out
pop
or
xchg
js
loop
mov
xchg
xor
daa
dec
mov
fcomps
add
rorb
in
inc
mov
imul
dec
xchg
mov
push
addl
sti
push
inc
xchg
xor
push
aam
jnp
mov
push
add
pop
and
xchg
loop
lcall
int
nop
mov
call
pop
adcl
add
cld
out
xchg
fldt
jge
dec
repz
lret
rclb
pushw
shlb
inc
mov
dec
mov
aaa
inc
inc
sbb
sbb
negb
inc
cmp
mov
outsl
cmp
pushf
es
and
mov
call
loope
adcb
outsl
push
add
mov
jns
sub
lea
pop
mov
cmpsl
int3
scas
mov
aam
addr16
loop
dec
fnsave
cltd
inc
mov
sbb
dec
and
ret
out
or
push
mov
push
adc
sahf
and
enter
mov
pop
nop
lcall
xchg
sbb
rcr
sub
frstor
and
orl
push
pop
lcall
inc
ljmp
test
cld
or
fwait
hlt
js
lock
xchg
push
and
or
mov
dec
dec
push
jge
or
cmp
sub
sbb
cmp
loopne
stos
jns
loop
pop
add
mov
sbb
jnp
aam
sti
add
adc
xlat
dec
das
pop
xchg
sbb
dec
rorb
sbb
mov
les
xchg
xchg
xchg
inc
lcall
pop
fsincos
pop
xchg
sbb
sub
jp
lea
inc
movsb
pusha
add
sbb
fst
jo
push
stos
sub
mov
fdivrl
jecxz
sub
aam
mov
xchg
hlt
insb
or
cmp
and
pusha
xor
pop
push
pop
scas
lea
cwtl
jo
cmp
imul
push
aam
add
jl
dec
sub
rcr
lcall
paddsb
fidivs
jb
push
mov
adc
test
cmp
idiv
dec
pop
xor
mov
xor
xor
leave
sbb
dec
add
imul
imul
fdivs
jb
aam
sahf
ds
mov
xchg
cmp
push
cmp
dec
sbb
push
add
iret
sbb
iret
cli
test
adc
push
pusha
aas
xchg
jbe
mov
sub
xchg
clc
loope
rorl
clc
fdivp
mov
add
sbb
fcomps
call
xor
movsl
sub
dec
loope
inc
lods
fcoml
testl
ret
jbe
pop
adc
cs
inc
scas
aam
repz
ror
clc
nop
pop
mov
shrb
xor
xchg
mov
add
sub
xor
test
xchg
mov
adc
inc
shlb
icebp
push
arpl
push
lcall
mov
imul
mov
enter
les
push
in
nop
loopne
shll
into
pushf
inc
shlb
insl
shlb
jg
mov
xor
cmpsl
pop
ret
movsb
nop
mov
ret
cmpsb
cmp
test
xchg
sub
in
push
add
pop
sub
pushl
or
add
in
int3
les
push
jp
and
mov
jecxz
xlat
ljmp
fidivl
lret
pushf
and
cmpsb
cmp
adc
negl
repnz
and
add
lock
cmp
mov
int
add
lret
loope
jae
movsb
pop
pop
xchg
push
and
test
mov
xchg
add
mov
bnd
daa
aam
adc
xchg
dec
sub
mov
cmp
lcall
cmp
jecxz
jp
cmpsb
sahf
dec
adc
aam
cmpsl
incl
sub
jnp
sbb
xor
cmp
test
pop
xchg
hlt
mov
fcompl
add
inc
in
movsl
xchg
in
movsl
add
je
jmp
mov
pop
mov
dec
fwait
enter
xchg
imul
aad
xchg
mov
xor
cmp
enter
xchg
xchg
test
imull
mov
xor
mov
pop
xor
inc
jne
dec
insl
xchg
call
mov
add
out
cwtl
xchg
vmread
imul
cmovp
jae
nop
mov
adc
and
jmp
out
xchg
xor
pop
push
popa
lcall
fucomp
sub
adc
jbe
sbb
sbb
add
cmpsl
sbb
cmpsb
test
icebp
aaa
sarl
outsb
cmpsb
leave
sub
daa
lea
iret
inc
lret
sar
push
push
sbb
pushf
std
popa
dec
pop
test
jl
cli
or
repz
outsb
xchg
push
cli
add
lahf
imul
imul
mov
dec
fisubrs
push
mov
mov
shrl
xor
mov
in
pushf
sbb
dec
xor
add
mov
shll
lret
daa
cltd
cmp
inc
xchg
leave
test
inc
test
inc
jo
or
cmc
aam
fs
jg
xor
cmp
pop
mov
shrl
push
adc
lret
test
mov
xchg
mov
or
inc
dec
pop
sub
xorl
xchg
xchg
jge
shrl
and
fstpt
adc
lock
jnp
addb
bound
sti
xchg
or
ja
xor
test
std
std
mov
test
pop
and
inc
xlat
je
push
andb
jae
lds
pushf
lock
add
or
filds
lods
sti
sub
lods
cmp
insb
int
jg
lds
lods
dec
rorl
mov
pop
xor
inc
mov
xor
dec
mov
jmp
xchg
and
and
outsl
sbb
xlat
addr16
adc
xor
sbb
and
push
lock
sbb
icebp
cmp
pushf
cltd
repnz
iret
jne
scas
lea
cltd
sub
pop
cli
cmp
lods
cs
cmpsl
out
jmp
movsl
hlt
aaa
jg
sti
lods
ljmp
int
jge
cld
lea
adc
pop
add
out
jmp
pop
fstps
lock
int3
test
xchg
inc
push
lret
cs
cmpsb
push
fmull
sub
sub
icebp
dec
aad
cmp
clc
loop
cld
pop
dec
pop
into
jmp
dec
cwtl
xchg
std
out
add
cmpsl
pop
les
in
add
xchg
mov
sbb
mov
cs
xorl
cmpsb
cld
mov
int
add
jp
cmp
mov
inc
xchg
repz
push
cli
aaa
xchg
shr
cs
movsb
movsb
rol
clc
cmp
sti
loopne
jmp
clc
jo
mov
adc
jno
loopne
jecxz
leave
pop
sbb
inc
jp
cmpsl
add
rcll
fisttpll
mov
lret
mov
push
mulps
cmp
stc
ja
mov
je
adc
sub
pop
cli
sbb
pusha
in
das
adc
lret
pop
enter
outsl
push
sub
jmp
xchg
loope
outsb
outsl
xchg
dec
ficompl
jne
xor
cld
push
fmuls
push
jp
mul
and
jle
or
add
or
mov
arpl
mov
pushf
lds
cmp
sahf
addb
xor
inc
xor
jnp
push
inc
mov
push
lahf
nop
gs
mov
cmp
pop
std
lods
loopne
and
sbb
dec
ss
sbb
pop
shll
inc
mov
pop
lcall
out
sub
mov
inc
xor
std
xor
cld
jo
sub
mov
aaa
pop
or
inc
icebp
or
and
fstpt
xchg
or
jg
pop
dec
scas
push
add
xchg
mov
adcl
addr16
adc
int
sbb
lcall
adc
add
and
nop
inc
dec
mov
inc
loope
mov
arpl
mov
adc
dec
data16
push
mov
xchg
mov
xchg
jb
mov
out
or
adc
out
inc
fcom
push
in
loopne
cmpsl
pushf
push
inc
pop
ljmp
fldl
cmp
scas
icebp
jmp
lds
jg
lret
fidivrl
lock
xchg
je
xchg
dec
push
icebp
leave
aad
push
ret
out
aam
repnz
loope
jge
pop
push
outsb
cmpsl
andb
mov
cmp
jl
pop
out
test
xor
int
loopne,pn
mov
inc
in
fmuls
js
sahf
mov
imul
sub
hlt
jbe
push
or
mov
add
sbb
mov
cmp
pop
fldt
pop
jmp
jp
jbe
jne
pop
test
hlt
mov
clc
adc
inc
repz
test
and
popa
je
in
test
orb
add
addr16
outsb
iret
sbb
add
add
negb
or
popf
and
bound
aas
ret
test
jnp
enter
pop
cmp
ja
lds
outsl
cmp
xchg
bound
lea
loope
adc
adc
push
mov
test
mov
gs
cmp
adcl
movsl
mov
cltd
cmp
push
arpl
sub
adc
xor
pop
push
out
and
push
daa
xchg
xor
xlat
pop
shl
leave
movsb
cld
imulb
xor
jg
dec
inc
stos
loope
mov
mov
pop
sub
dec
lock
xchg
popf
filds
sbb
loope
jmp
add
cmp
rorl
repz
push
dec
push
push
cmp
jmp
stos
leave
insb
push
add
mov
jg
mov
call
scas
movsb
imul
inc
lret
decl
inc
es
sbb
dec
xchg
adc
add
fwait
add
adcl
inc
pop
mov
repz
std
jmp
pmaxsw
into
jae
adc
dec
out
dec
add
stos
inc
mov
xor
mov
js
out
xchg
ret
mov
loopne
push
test
sub
out
int3
ret
test
jae
cmc
jns
pop
adc
mov
fiadds
mov
shll
subb
insb
mov
arpl
pop
mov
rclb
inc
fisubs
mov
sbb
mov
sub
jle
jnp
inc
fs
in
sbb
jge
push
sbb
stos
rolb
je
cmp
mov
das
mov
mov
add
sbb
out
xchg
add
imul
sbb
lds
push
dec
jae
dec
unpckhps
ljmp
in
cmp
repnz
dec
rol
sub
lods
je
testl
inc
cwtl
sbb
imul
and
adc
mov
mov
jbe
and
mov
pop
imul
mov
mov
push
into
test
or
hlt
fs
mov
pop
mov
sbb
arpl
loop
and
mov
mov
sbb
lods
or
push
orb
jne
shl
add
mov
pop
bound
cmp
ds
mov
push
rcr
ss
jae
xor
