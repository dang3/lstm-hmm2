decl
mov
mov
mov
mov
mov
mov
fildl
add
fmull
fstpl
call
call
mov
mov
mov
fildl
mov
fmull
fstpl
call
call
mov
mov
mov
mov
fildl
fmull
fstpl
call
call
mov
mov
mov
mov
fildl
fmull
fstpl
call
call
mov
mov
add
ret
fldz
push
fldl
push
fcom
fnstsw
fstp
test
jne
faddl
fstpl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
cmpl
je
mov
push
call
add
cmpl
je
mov
push
call
add
mov
pop
add
ret
mov
push
push
mov
cmp
push
jne
mov
mov
lea
push
push
movl
movl
mov
call
mov
mov
test
jne
test
jne
test
js
mov
mov
push
call
mov
add
pop
pop
pop
pop
add
ret
sub
jne
mov
mov
lea
push
push
movl
movl
mov
call
mov
mov
push
push
mov
call
add
jmp
test
mov
je
mov
push
call
mov
andl
andl
mov
mov
test
je
pushl
mov
push
call
shr
not
and
mov
mov
ret
xor
mov
mov
mov
mov
mov
mov
ret
mov
test
je
mov
andl
mov
xor
inc
ret
testb
push
mov
movl
je
push
call
pop
mov
pop
ret
push
mov
sub
push
mov
push
push
xor
cmp
je
pop
pop
pop
leave
ret
push
mov
sub
push
mov
cmpl
je
push
movl
movl
lea
push
mov
xor
cmp
je
mov
mov
mov
cmp
je
cmp
mov
jbe
mov
movl
mov
mov
mov
mov
mov
call
mov
cmp
je
incl
mov
mov
addl
cmp
jb
xor
mov
cmp
jne
addl
mov
mov
cmp
mov
jne
mov
pushl
push
push
call
pop
pop
xor
pop
leave
ret
mov
mov
call
sub
jne
mov
add
lea
cmp
je
mov
mov
test
je
mov
push
call
add
cmp
jne
push
push
pushl
xor
push
inc
call
decl
subl
cmpl
jne
jmp
dec
dec
jne
jmp
int3
int3
int3
mov
mov
xor
add
push
lea
cmp
je
movsbl
rol
xor
add
jmp
pop
ret
push
mov
cmp
push
mov
je
cmp
je
cmp
je
pop
xor
pop
ret
push
mov
call
mov
mov
mov
mov
mov
push
push
push
push
call
pop
jmp
call
jmp
push
mov
push
push
push
mov
mov
xor
cmp
push
mov
jne
xor
cmp
jg
pop
pop
pop
leave
ret
push
mov
push
push
push
push
mov
mov
xor
cmp
push
mov
jne
mov
cmp
jg
pop
pop
pop
leave
ret
push
mov
push
andl
push
mov
test
je
andl
push
mov
mov
mov
call
mov
andl
test
jne
lea
mov
lea
push
call
test
mov
js
mov
test
je
mov
push
call
mov
mov
mov
call
mov
test
je
decl
cmpl
je
mov
pop
pop
leave
ret
mov
test
je
push
call
pop
xor
ret
push
mov
test
je
cmpl
jg
xor
mov
xor
pop
ret
push
mov
push
andl
push
push
mov
mov
lea
push
mov
call
test
js
cmpl
push
jne
xor
pop
pop
pop
leave
ret
push
mov
mov
call
lea
mov
call
push
mov
mov
call
pop
pop
ret
mov
test
je
push
call
pop
xor
ret
andl
inc
mov
mov
test
jne
mov
cmpl
push
je
pushl
mov
call
mov
test
jne
mov
mov
call
andl
andl
mov
pop
ret
pushl
push
pushl
pushl
call
jmp
push
mov
cmpl
je
cmpl
push
je
mov
push
lea
movl
call
cmpb
je
pop
xor
pop
ret
pushl
lea
call
test
je
jmp
cmpb
jne
push
lea
call
mov
call
pop
movb
jmp
int3
mov
sub
cmpl
push
push
mov
push
jge
mov
mov
movl
mov
mov
push
mov
movl
call
mov
add
test
js
mov
cmpl
push
je
mov
test
je
addl
test
je
push
call
mov
add
cmpl
jge
mov
mov
push
push
push
call
mov
add
cmpl
mov
jge
mov
mov
push
call
mov
add
addl
je
test
jle
mov
mov
add
adcl
mov
push
call
add
test
js
test
jle
mov
push
call
mov
pop
pop
pop
pop
add
ret
jge
call
cmp
jne
push
call
add
pop
pop
pop
mov
pop
add
ret
cmpl
je
push
push
mov
push
pushl
mov
mov
pushl
mov
push
call
test
lea
js
cmpl
je
andl
mov
pop
pop
ret
mov
jmp
movl
jmp
push
mov
sub
mov
xor
mov
push
pushl
mov
mov
push
call
test
jne
xor
mov
xor
pop
call
leave
ret
push
mov
cmpl
jne
cmpb
je
pushl
mov
pushl
call
cmpb
je
push
mov
call
push
push
lea
call
pop
call
pop
ret
push
call
jmp
call
jmp
mov
cmp
push
je
cmp
je
cmp
je
cmp
je
cmp
je
pushl
mov
xor
push
mov
call
test
jne
mov
mov
call
test
jne
lea
call
pop
ret
xor
inc
jmp
push
mov
push
andl
mov
test
mov
push
mov
je
mov
mov
andl
mov
push
call
pushl
mov
push
call
mov
test
pop
pop
je
mov
push
call
mov
neg
sbb
and
add
lea
call
mov
pop
pop
pop
ret
push
mov
lea
movl
movl
call
lea
call
lea
call
lea
call
testb
movl
movl
jne
mov
pop
ret
push
call
pop
jmp
push
mov
push
lea
push
mov
call
test
jne
mov
xor
cmp
mov
jne
mov
push
mov
call
xor
pop
pop
ret
push
jmp
push
mov
sub
mov
push
push
xor
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
push
lea
mov
call
mov
lea
push
push
call
mov
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
cmp
je
lea
call
lea
call
lea
call
pop
mov
pop
leave
ret
xor
inc
jmp
push
mov
sub
mov
xor
mov
mov
shr
movzbl
push
push
mov
shr
movzbl
push
movzbl
push
push
lea
push
push
mov
call
add
push
call
test
je
andl
lea
push
mov
call
mov
lea
push
movl
call
pop
pop
mov
xor
pop
call
leave
ret
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
push
mov
push
push
xor
cmp
je
cmp
jne
push
call
test
js
mov
mov
mov
mov
mov
lea
mov
push
lea
mov
movl
mov
mov
mov
mov
mov
movl
movl
mov
mov
call
lea
mov
lea
lea
mov
lea
mov
add
lea
lea
movl
movl
mov
mov
mov
mov
mov
mov
mov
call
mov
lea
push
push
lea
push
call
mov
mov
test
je
mov
add
push
mov
call
add
test
jne
mov
push
call
add
mov
test
jne
test
jne
testl
jne
mov
push
lea
call
lea
mov
lea
lea
lea
mov
mov
add
lea
lea
movl
movl
mov
mov
mov
mov
mov
mov
mov
call
mov
lea
push
push
lea
push
call
mov
mov
test
je
mov
add
push
mov
call
add
test
jne
mov
push
call
add
mov
test
jne
test
jne
testl
lea
jne
mov
push
call
lea
mov
lea
lea
mov
lea
mov
add
lea
lea
movl
movl
mov
mov
mov
mov
mov
mov
mov
call
mov
lea
push
push
lea
push
call
mov
mov
test
je
mov
add
push
mov
call
add
test
jne
mov
push
call
add
mov
test
jne
test
jne
test
js
mov
mov
mov
shr
and
lea
je
lea
push
push
push
mov
movl
movl
mov
call
mov
mov
test
jne
test
jne
mov
test
jne
test
jne
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
push
mov
sub
push
mov
push
add
push
lea
mov
call
mov
call
mov
mov
and
jne
andl
push
lea
call
mov
push
call
mov
xor
push
push
push
lea
push
lea
push
mov
movl
call
add
testb
mov
jne
testb
jne
mov
mov
and
jne
mov
mov
mov
add
mov
mov
call
mov
mov
add
call
mov
mov
add
call
mov
mov
call
mov
lea
push
xor
push
lea
inc
push
movl
movl
mov
call
mov
and
mov
jne
pushl
mov
push
mov
call
lea
call
cmpl
jne
mov
pop
pop
pop
leave
ret
push
mov
push
push
mov
push
push
pushl
mov
pushl
mov
push
call
mov
mov
mov
mov
testl
jne
cmpl
jne
mov
lea
mov
call
mov
andl
mov
mov
mov
push
call
test
pop
je
push
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
movl
mov
push
mov
call
push
call
incl
pop
pop
pop
leave
ret
push
mov
push
lea
push
mov
call
test
je
pop
pop
ret
andl
mov
call
push
call
pop
xor
jmp
mov
test
je
push
call
pop
mov
test
je
mov
push
call
andl
mov
test
je
mov
push
call
andl
mov
test
je
cmpl
jge
call
lea
jmp
push
lea
sub
mov
xor
mov
mov
test
push
mov
je
mov
mov
push
push
lea
push
xor
lea
push
mov
mov
movl
movl
mov
mov
mov
push
call
cmp
je
push
lea
push
mov
call
mov
imul
testb
je
mov
add
push
call
test
pop
je
pop
pop
mov
mov
xor
pop
call
add
leave
ret
push
mov
and
sub
push
push
push
mov
testb
je
pop
pop
pop
mov
pop
ret
mov
mov
mov
mov
mov
xor
inc
lea
call
lea
push
lea
push
push
mov
call
mov
pushl
neg
call
mov
pushl
mov
add
neg
call
mov
add
cmpl
jne
pushl
mov
mov
push
call
test
jne
xor
push
push
mov
mov
push
call
jmp
push
mov
and
sub
push
push
lea
mov
call
mov
cmp
jl
mov
add
cmp
mov
jg
mov
mov
cmp
jl
mov
lea
cmp
jg
mov
xor
cmp
mov
mov
jne
mov
cmp
jne
mov
push
push
mov
mov
mov
mov
mov
call
pop
pop
mov
pop
ret
push
mov
push
mov
andl
push
mov
lea
call
mov
mov
push
call
push
lea
call
pop
leave
ret
push
mov
sub
mov
xor
mov
mov
push
push
push
mov
mov
mov
call
test
je
mov
xor
push
mov
lea
mov
call
mov
mov
push
call
mov
mov
push
mov
call
cmp
je
mov
cmp
lea
mov
mov
movl
movl
mov
mov
jne
mov
mov
push
lea
push
push
call
cmp
jne
cmp
jne
cmp
je
mov
call
test
jne
pushl
mov
pushl
mov
pushl
call
testb
mov
jne
testb
jne
lea
call
mov
mov
pop
pop
xor
pop
call
leave
ret
mov
add
push
call
test
pop
jne
push
call
pop
jmp
mov
mov
mov
mov
push
lea
mov
call
lea
push
mov
call
test
pop
js
pushl
mov
pushl
call
mov
lea
mov
call
cmp
jne
jmp
xor
jmp
cmp
jne
mov
lea
mov
mov
call
pushl
mov
mov
xor
cmp
sete
push
push
call
cmp
lea
je
call
jmp
cmp
jne
mov
push
push
push
mov
call
pushl
pushl
call
pop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
mov
push
push
mov
mov
test
mov
je
jmp
lea
mov
cmp
je
test
push
jne
mov
mov
call
test
je
mov
push
push
call
mov
mov
test
je
test
mov
je
cmp
je
cmp
je
test
jne
mov
cmpl
mov
lea
mov
je
lea
push
mov
mov
push
push
push
lea
push
add
push
call
add
mov
xor
mov
mov
mov
mov
mov
lea
push
push
push
push
lea
push
lea
push
lea
movl
call
add
test
jne
add
cmpl
je
mov
mov
lea
push
push
push
push
lea
call
add
test
jne
mov
cmp
je
cmp
je
xor
mov
mov
mov
jmp
addl
mov
mov
mov
mov
add
movzbl
add
movzbl
lea
push
lea
call
add
movzbl
movzbl
lea
push
lea
call
mov
mov
xor
mov
mov
mov
mov
lea
push
mov
push
push
push
push
lea
push
lea
push
lea
push
mov
call
add
test
jne
mov
add
cmp
jl
mov
mov
cmp
je
cmp
je
cmp
je
mov
mov
mov
push
call
cmpl
je
mov
cmpl
je
cmp
mov
mov
jne
mov
pop
pop
pop
pop
add
ret
mov
lea
mov
test
jne
or
mov
mov
cmp
jne
pop
mov
pop
pop
pop
add
ret
push
mov
sub
andl
push
mov
push
lea
push
lea
push
mov
push
call
mov
cmp
je
cmp
je
cmp
je
cmp
je
pop
pop
leave
ret
mov
cmpl
mov
jge
push
mov
call
mov
lea
push
lea
push
lea
push
lea
push
add
push
lea
movl
call
add
jmp
lea
push
pushl
lea
call
test
pop
pop
je
mov
cmpb
jne
mov
mov
mov
mov
jmp
push
mov
mov
call
pop
jmp
mov
cmpl
jge
testb
je
pushl
pushl
call
ret
push
pushl
mov
call
mov
orl
cmpb
pop
jne
jmp
mov
test
je
mov
mov
mov
xor
ret
mov
mov
mov
add
test
mov
je
test
je
xor
ret
test
je
mov
push
push
call
jmp
push
mov
mov
call
mov
mov
add
cmp
ja
jmp
flds
fstps
mov
pop
ret
mov
mov
jmp
nop
iret
cmpsb
add
adc
cmpsb
add
adc
cmpsb
add
adc
cmpsb
add
adc
cmp
xchg
mov
cmp
lods
mov
cmp
mov
mov
in
sub
andl
push
mov
push
lea
add
push
movl
movl
call
mov
push
call
test
je
andl
lea
push
push
call
testb
pop
pop
je
mov
add
push
call
test
pop
je
pop
xor
pop
leave
ret
mov
cmp
je
push
pushl
call
mov
ret
mov
add
mov
mov
mov
mov
jmp
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
push
je
cmp
je
cmp
je
cmp
je
cmp
je
xor
mov
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
jmp
mov
decl
mov
je
ret
xor
inc
mov
mov
push
call
xor
jmp
push
mov
mov
call
mov
mov
test
je
add
mov
cmpl
jne
push
mov
mov
mov
mov
mov
pop
mov
mov
mov
xor
inc
pop
ret
int3
mov
lea
mov
lock
inc
ret
mov
ret
mov
orl
mov
ret
push
mov
push
test
push
jne
mov
mov
push
push
push
call
test
mov
mov
mov
js
mov
test
je
mov
mov
mov
pop
leave
ret
mov
test
je
mov
mov
cmp
je
addl
mov
mov
test
jne
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
sub
add
mov
mov
test
je
mov
mov
mov
mov
andl
xor
jmp
push
mov
push
push
push
mov
test
je
mov
test
je
mov
mov
mov
cmpl
je
push
mov
mov
lea
push
lea
push
push
movl
movl
call
add
mov
pop
xor
inc
pop
leave
ret
push
mov
push
xor
cmp
mov
jne
push
push
call
cmp
pop
je
movl
movl
movl
movl
movl
mov
xor
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
mov
push
call
mov
push
pushl
push
call
mov
mov
push
call
mov
pop
pop
pop
ret
xor
jmp
push
mov
test
je
mov
push
call
mov
test
mov
jne
cmpl
jbe
xor
mov
mov
push
call
inc
cmp
jb
cmpl
ja
pop
ret
xor
mov
mov
incl
call
inc
cmp
jae
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
xor
test
push
je
mov
mov
mov
mov
mov
test
jne
add
lea
xor
test
je
mov
test
jle
mov
test
jle
mov
add
mov
imul
cltd
idiv
mov
sub
mov
mov
mov
test
jg
test
je
orb
add
add
push
mov
mov
call
mov
test
jne
pop
pop
mov
pop
pop
pop
ret
mov
test
je
mov
push
push
call
mov
jmp
push
mov
mov
cmp
push
push
je
mov
cmp
je
mov
pushl
pushl
pushl
pushl
pushl
pushl
call
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
call
add
mov
pop
pop
pop
ret
push
mov
sub
push
mov
cmpb
jne
push
push
call
xor
inc
test
pop
jne
mov
test
je
mov
lea
push
push
push
call
test
js
cmpb
je
xor
pop
pop
leave
ret
mov
call
test
je
pushl
mov
push
call
jmp
push
mov
push
lea
push
call
andl
push
lea
call
lea
push
push
call
mov
test
je
andl
test
movl
mov
je
mov
mov
mov
mov
mov
pushl
mov
push
push
call
testb
jne
testb
jne
lea
call
pop
jmp
push
mov
push
mov
mov
lea
push
pushl
push
call
test
js
cmpl
je
xor
inc
leave
ret
mov
mov
push
lea
push
push
push
mov
call
and
neg
sbb
not
and
pop
leave
ret
xor
leave
ret
push
mov
movl
movl
cmpl
je
lea
push
call
pop
testb
je
push
call
pop
mov
pop
ret
push
push
mov
movzbl
flds
movzwl
fldl
fmul
fxch
shr
push
movzbl
and
lea
mov
shr
lea
shl
call
sub
fmull
call
sub
mov
and
add
pop
sar
pop
xor
pop
ret
push
mov
mov
call
xor
pop
ret
push
mov
sub
push
push
pushl
xor
mov
lea
mov
call
mov
cmp
mov
je
lea
push
push
push
add
push
call
mov
and
jne
cmp
jne
pushl
lea
call
mov
cmp
je
mov
push
push
pushl
lea
push
call
mov
cmp
mov
je
mov
cmp
je
lea
mov
mov
push
pushl
push
push
pushl
pushl
pushl
push
push
call
test
jne
test
je
add
mov
mov
push
push
call
xor
lea
call
lea
call
lea
call
mov
pop
pop
pop
leave
ret
xor
jmp
mov
jmp
xor
jmp
push
mov
push
test
je
mov
andl
lea
push
push
push
call
mov
test
je
mov
mov
mov
test
jle
push
push
push
push
pop
mov
mov
mov
mov
test
je
incl
mov
test
jne
andl
decl
je
dec
mov
jne
pop
pop
pop
mov
push
call
leave
ret
add
jmp
push
call
push
call
pop
pop
jmp
push
cmpl
je
test
je
mov
test
lea
jne
mov
test
jns
push
mov
call
cmpl
jne
xor
test
jne
mov
mov
call
call
lea
push
push
call
call
lea
cmpl
je
push
push
push
call
add
pop
ret
mov
jmp
push
mov
push
push
xor
cmp
je
cmp
jle
push
push
push
mov
lea
push
push
push
call
mov
mov
mov
add
and
jne
test
jne
pushl
lea
call
test
jne
mov
test
mov
je
mov
mov
lea
push
call
mov
lea
push
pushl
push
call
test
jne
lea
push
mov
call
pushl
push
call
test
pop
pop
jne
lea
push
mov
call
pushl
push
call
test
pop
pop
jne
mov
lea
call
mov
mov
xor
lea
call
pop
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
test
je
cmpb
je
push
push
mov
movsbl
cmp
jle
mov
cmp
lea
jne
mov
test
jne
test
je
mov
cmp
jbe
mov
and
mov
movb
mov
mov
mov
add
cmpb
jne
pop
pop
pop
ret
sub
cmp
ja
movzbl
jmp
mov
push
push
push
or
mov
call
jmp
mov
sub
cmpl
jg
mov
sub
jmp
push
push
push
push
call
test
jne
jmp
mov
push
push
push
or
mov
call
jmp
mov
sahf
into
cmp
mov
cmp
mov
mov
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
mov
push
push
mov
pushl
lea
mov
mov
call
cmpl
je
mov
lea
call
testb
je
push
call
test
pop
mov
je
mov
cmp
je
cmp
je
movb
mov
mov
cmp
je
cmp
je
movl
mov
mov
push
add
push
lea
push
call
mov
test
mov
je
mov
add
call
test
je
mov
mov
mov
call
andl
push
mov
lea
call
mov
test
pop
je
mov
test
jne
mov
call
mov
test
mov
jne
mov
test
jne
mov
call
test
jne
mov
test
jne
lea
call
mov
movl
mov
movl
movl
mov
movl
mov
movl
mov
movl
movb
mov
movl
mov
mov
mov
movl
mov
movl
movl
mov
mov
xor
inc
cmp
je
cmp
je
mov
mov
movl
movl
mov
lea
push
mov
mov
call
cmpl
jne
mov
mov
cmp
mov
jne
mov
mov
mov
orw
cmpb
jne
mov
lea
call
mov
pop
pop
pop
ret
cmpb
je
mov
jmp
mov
push
call
mov
test
je
cmpb
jne
mov
mov
mov
mov
jmp
mov
orl
mov
mov
mov
mov
mov
jmp
mov
movl
movl
mov
movl
mov
movl
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmp
je
cmp
je
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
add
mov
mov
xor
pop
ret
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
xor
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmp
je
mov
test
push
mov
push
je
mov
cmp
je
mov
add
test
jne
mov
movl
mov
test
jns
push
push
push
call
pop
pop
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
movl
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
add
push
call
mov
mov
xor
jmp
push
mov
push
mov
push
pushl
pushl
call
add
test
push
push
pushl
jl
call
add
test
jg
push
push
pushl
call
add
test
mov
jge
pop
pop
ret
call
add
test
jl
push
push
pushl
call
add
test
jl
mov
jmp
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
push
push
mov
test
mov
jne
test
jne
xor
cmp
setne
cmp
mov
jb
mov
shr
imul
add
cmp
movl
jbe
lea
imul
add
cmp
mov
ja
mov
mov
mov
mov
mov
push
push
push
call
mov
mov
mov
add
test
je
cmp
jg
mov
shr
mov
mov
mov
mov
mov
sub
add
add
test
jg
mov
add
imul
add
lea
mov
mov
mov
cmp
ja
mov
cmpl
jne
mov
test
mov
jne
test
jne
test
jg
jne
cmpl
mov
movl
jne
mov
mov
mov
mov
mov
add
mov
add
cmp
jbe
jmp
imul
lea
add
cmp
jae
mov
sub
mov
mov
mov
cmp
jbe
mov
mov
mov
mov
mov
push
push
push
call
add
test
jle
mov
test
je
cmp
mov
mov
jg
mov
shr
mov
mov
mov
mov
sub
add
add
test
jg
mov
mov
sub
sub
cmp
mov
ja
mov
add
add
cmp
mov
jb
pop
pop
pop
pop
add
ret
mov
push
push
push
call
mov
add
jmp
cmp
ja
mov
lea
cmpl
jne
mov
test
mov
jne
test
jne
test
jl
jne
test
movl
jne
mov
mov
mov
mov
sub
mov
sub
cmp
ja
mov
jmp
mov
push
push
push
call
mov
add
jmp
test
je
push
push
call
mov
add
jmp
cmp
ja
test
je
cmp
mov
mov
jg
mov
shr
jmp
lea
mov
mov
mov
mov
mov
mov
sub
add
add
test
jg
mov
mov
add
movl
sub
jmp
test
je
push
push
call
mov
add
jmp
mov
mov
imul
add
cmpl
je
mov
mov
mov
sub
sub
cmp
mov
jge
test
jle
mov
sub
cmpl
jg
shr
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
sub
test
jg
mov
mov
sub
sub
sub
cmp
jl
test
jg
cmp
jle
mov
mov
push
push
mov
xor
div
push
push
push
call
add
cmp
jle
mov
sub
mov
mov
xor
div
mov
jmp
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
add
movl
sub
jmp
mov
jmp
mov
mov
jmp
mov
jmp
mov
jmp
lea
cmp
jae
mov
mov
sub
mov
mov
lea
cmp
jbe
mov
mov
mov
mov
mov
push
push
push
call
add
test
jle
mov
test
je
cmp
mov
mov
jg
mov
shr
mov
mov
mov
mov
sub
add
add
test
jg
mov
mov
sub
sub
cmp
mov
ja
mov
add
add
cmp
mov
jb
pop
pop
pop
pop
add
ret
mov
mov
mov
mov
jmp
mov
shr
imul
lea
mov
add
mov
push
add
push
mov
push
call
mov
mov
lea
push
push
sub
push
call
mov
mov
mov
sub
push
sub
push
push
call
add
mov
jmp
mov
mov
mov
mov
jmp
mov
jmp
mov
mov
push
sub
push
call
mov
mov
add
jmp
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
mov
mov
jne
test
jne
ret
test
je
push
push
call
add
ret
mov
ret
or
ret
push
mov
sub
mov
xor
mov
push
push
mov
push
mov
xor
push
call
test
je
mov
push
lea
mov
call
push
lea
push
mov
call
mov
mov
cmp
je
lea
lea
push
mov
mov
movl
movl
mov
mov
mov
push
call
mov
test
js
lea
push
push
call
pop
pop
testb
je
mov
add
push
call
test
pop
je
mov
cmp
je
mov
push
call
mov
pop
mov
pop
xor
pop
call
leave
ret
testb
je
jmp
push
mov
push
push
mov
mov
call
test
js
mov
xor
cmp
je
cmp
je
mov
cmp
mov
lea
jae
mov
pop
leave
ret
mov
cmp
mov
lea
ja
lea
jmp
push
mov
sub
push
mov
test
je
mov
mov
andl
andl
push
lea
lea
movl
mov
call
mov
test
je
mov
push
pushl
push
call
mov
lea
call
mov
pop
leave
ret
push
mov
sub
push
xor
push
lea
mov
call
lea
push
push
call
test
pop
pop
js
push
push
lea
lea
mov
movl
movl
mov
mov
mov
call
mov
cmp
mov
je
mov
lea
push
push
push
call
test
pop
jne
pushl
lea
call
mov
pushl
mov
push
call
mov
mov
mov
mov
mov
mov
lea
mov
mov
call
lea
call
lea
call
mov
pop
leave
ret
push
mov
sub
mov
xor
mov
mov
mov
mov
mov
mov
push
mov
lea
xor
push
lea
mov
mov
movl
movl
mov
mov
call
test
js
mov
cmpl
push
mov
jge
push
lea
mov
mov
call
push
lea
call
lea
push
lea
push
call
test
pop
pop
jne
pushl
mov
pushl
call
pop
pop
mov
mov
mov
push
call
test
jne
mov
push
mov
call
lea
push
lea
push
pushl
call
add
test
jne
pushl
mov
pushl
pushl
call
pushl
mov
call
pop
lea
call
lea
call
testb
jne
testb
jne
mov
pop
mov
pop
xor
pop
call
leave
ret
mov
add
call
jmp
push
mov
call
testb
je
push
call
pop
mov
pop
ret
push
mov
mov
mov
and
dec
je
dec
dec
je
movzbl
and
cmp
je
mov
call
test
je
push
push
call
test
pop
je
movl
mov
test
je
mov
call
mov
movl
xor
inc
pop
pop
ret
xor
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
push
push
je
mov
mov
mov
lea
cmp
je
mov
add
test
jne
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
movl
movl
xor
mov
mov
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
ret
push
mov
lea
mov
push
call
test
je
cmpl
je
pushl
lea
mov
push
call
testb
jne
push
lea
push
mov
call
pop
pop
ret
mov
test
je
mov
mov
mov
mov
push
call
xor
ret
push
mov
and
push
mov
push
xor
movl
mov
call
pushl
mov
pushl
mov
pushl
mov
pushl
xor
push
pushl
cmp
pushl
sete
mov
mov
mov
mov
mov
push
push
call
pop
mov
pop
mov
pop
ret
testb
push
mov
movl
je
push
call
pop
mov
pop
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
push
push
mov
mov
test
movl
movl
movl
movl
movl
jne
lea
call
lea
call
lea
mov
test
mov
jne
test
jne
mov
test
mov
je
lea
push
call
test
pop
jne
push
call
pop
pop
pop
ret
mov
cmpl
je
andl
xor
ret
push
mov
push
mov
cmpl
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
mov
je
mov
push
call
xor
mov
mov
mov
pop
pop
ret
push
push
push
mov
call
test
pop
je
mov
movl
andl
andl
add
test
je
mov
mov
test
je
pushl
mov
push
push
call
mov
test
js
mov
pop
pop
ret
xor
jmp
push
mov
push
push
push
xor
cmp
mov
mov
jne
push
mov
push
lea
call
pushl
lea
push
push
call
add
cmp
pop
je
pushl
pushl
call
cmp
pop
pop
jne
mov
mov
mov
lea
mov
lea
call
lea
call
pop
leave
ret
push
call
pop
push
lea
call
jmp
push
lea
sub
mov
xor
mov
push
push
mov
mov
xor
mov
cmp
push
jne
mov
cmp
je
cmp
movl
jne
mov
mov
lea
push
pushl
lea
mov
mov
movl
movl
mov
mov
mov
push
call
cmp
mov
je
mov
lea
push
call
mov
lea
call
mov
cmp
jne
testb
je
mov
add
push
call
test
pop
je
xor
inc
lea
call
mov
mov
pop
pop
xor
pop
call
add
leave
ret
mov
call
mov
mov
mov
mov
mov
mov
add
call
push
pushl
call
pushl
mov
push
pushl
mov
call
mov
mov
mov
push
push
call
mov
test
jne
xor
cmp
jne
mov
testb
je
mov
mov
mov
mov
cmp
jne
add
mov
push
push
call
test
jne
testb
movl
je
mov
add
push
call
test
pop
jne
jmp
call
cmp
je
mov
pushl
mov
push
call
test
pop
pop
js
mov
lea
mov
call
jmp
testb
je
jmp
push
mov
push
push
push
xor
push
lea
mov
call
lea
push
push
push
call
add
test
js
pushl
mov
lea
push
push
call
mov
mov
add
lea
push
push
call
mov
cmp
jne
push
pushl
mov
call
pop
pop
mov
lea
call
mov
pop
leave
ret
push
mov
mov
sub
push
push
push
mov
xor
mov
cmp
je
cmp
je
mov
orb
lea
mov
mov
call
push
mov
call
mov
andl
pop
lea
push
mov
lea
call
andl
push
lea
call
mov
lea
push
pushl
pushl
pushl
push
call
test
js
pushl
pushl
call
andl
test
pop
pop
je
push
lea
mov
call
mov
lea
push
pushl
pushl
push
call
test
js
push
call
test
pop
je
pushl
mov
pushl
mov
mov
push
push
call
test
mov
je
mov
push
call
cmpl
je
mov
mov
lea
push
push
call
pushl
pushl
pushl
call
add
test
je
mov
mov
mov
mov
lea
mov
call
lea
call
lea
call
lea
call
pushl
call
pop
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
xor
mov
push
mov
cmpl
jne
push
push
mov
push
lea
lea
mov
push
push
call
test
je
cmp
jae
push
lea
lea
call
pop
pop
mov
xor
pop
call
leave
ret
push
add
push
call
jmp
push
mov
mov
call
add
push
pushl
call
xor
pop
ret
push
mov
push
push
push
mov
push
mov
mov
push
mov
imul
lea
push
add
pushl
push
call
mov
lea
push
pushl
push
call
cmpl
jl
cmpl
jg
mov
lea
push
pushl
push
call
test
mov
jne
mov
flds
mov
fstps
mov
mov
test
pop
pop
mov
pop
je
cmp
je
fldz
fcomps
fnstsw
test
jp
xor
inc
leave
ret
mov
jmp
xor
leave
ret
push
mov
push
push
mov
push
push
xor
cmp
mov
je
lea
push
push
push
add
push
call
and
jne
cmp
jne
pushl
lea
call
mov
cmp
je
pushl
mov
push
call
mov
mov
push
call
mov
pop
pop
leave
ret
mov
mov
push
push
push
call
mov
xor
cmp
je
push
push
mov
call
mov
orl
mov
movl
mov
pop
ret
sub
push
push
push
push
mov
mov
mov
mov
mov
sub
lea
mov
mov
mov
mov
sub
sub
add
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
shl
mov
mov
mov
movl
mov
shl
sub
mov
mov
sub
mov
nop
cmp
jae
movzbl
add
mov
shl
add
add
mov
add
movzbl
shl
mov
add
add
mov
and
mov
mov
shr
movzbl
movzbl
shr
sub
test
je
lea
test
je
shr
and
mov
jne
cmp
jb
mov
mov
and
mov
mov
shr
movzbl
movzbl
shr
sub
test
je
shr
and
cmp
mov
jb
mov
mov
mov
shl
sub
sub
and
mov
mov
add
mov
mov
sub
shr
cmp
ja
mov
sub
movzbl
add
add
mov
mov
add
add
mov
movzbl
add
add
sub
cmp
mov
ja
test
je
mov
add
add
cmp
mov
ja
mov
jmp
test
jne
mov
mov
mov
mov
shl
shr
sub
and
add
mov
mov
mov
shr
movzbl
movzbl
shr
sub
test
jne
add
shr
mov
cmp
jae
cmp
jae
mov
jmp
mov
movzbl
add
add
mov
mov
movzbl
shl
add
mov
shl
add
add
add
jmp
cmp
jb
mov
mov
shl
sub
and
add
shr
sub
jmp
mov
mov
add
jmp
mov
sub
cmp
mov
ja
mov
add
mov
mov
mov
test
jne
mov
sub
mov
add
mov
cmp
jb
cmp
jbe
lea
mov
mul
shr
add
jmp
lea
movzbl
add
add
mov
movzbl
add
add
mov
movzbl
add
add
sub
sub
mov
jne
test
je
mov
add
add
cmp
mov
jbe
mov
mov
add
mov
jmp
mov
lea
test
jne
mov
movzwl
mov
shl
mov
sub
and
add
mov
mov
shr
movzbl
movzbl
shr
sub
test
mov
jne
jmp
mov
movzbl
add
mov
mov
shl
add
add
cmp
jae
jmp
cmp
jb
sub
mov
add
mov
cmp
jae
sub
mov
add
add
subl
mov
jne
mov
sub
jmp
test
je
mov
movl
mov
mov
shr
sub
add
add
add
sub
mov
mov
shl
lea
sub
sub
and
mov
mov
lea
mov
mov
sub
add
add
mov
mov
mov
mov
pop
pop
pop
mov
pop
add
ret
sub
add
mov
sub
add
cmp
jb
mov
jmp
mov
add
mov
movzbl
mov
shl
add
add
jmp
sub
jmp
lea
mov
add
add
subl
mov
jne
mov
sub
jmp
push
mov
sub
andl
push
mov
push
mov
push
push
lea
push
lea
push
pushl
call
add
test
je
mov
andl
lea
push
movl
movl
mov
push
call
test
js
mov
mov
lea
call
testb
mov
jne
testb
jne
mov
test
jne
mov
pop
pop
leave
ret
push
mov
push
push
mov
lea
lea
mov
push
call
test
je
mov
test
je
push
pushl
call
xor
pop
pop
pop
ret
cmpb
je
pushl
mov
pushl
mov
push
call
test
jne
jmp
push
mov
push
push
mov
mov
test
je
cmpb
push
mov
je
mov
push
mov
call
test
je
andl
push
lea
call
mov
lea
push
push
call
pushl
andl
mov
lea
call
push
pushl
pushl
call
lea
call
lea
call
xor
pop
pop
leave
ret
push
mov
mov
cmpl
push
push
push
mov
jge
testb
mov
jne
test
jne
testb
jne
mov
xor
cmp
je
testb
jne
mov
cmp
mov
jne
mov
andl
test
je
mov
push
call
mov
andl
test
je
mov
push
call
cmpl
jne
testb
jne
testb
jne
test
jne
andl
cmpl
mov
mov
je
testb
je
testw
je
lea
call
lea
cmpl
je
mov
cmpl
jge
lea
test
je
lea
pushl
mov
mov
lea
pushl
push
push
call
xor
mov
call
push
mov
call
cmpl
je
push
lea
call
cmpl
jne
mov
test
je
lea
test
je
lea
pushl
mov
push
push
push
call
lea
xor
call
lea
xor
call
xor
pop
pop
pop
pop
ret
mov
mov
jmp
xor
jmp
push
mov
push
push
mov
push
mov
test
je
mov
push
mov
push
lea
lea
cmp
je
mov
mov
test
je
decl
jne
mov
movl
call
pushl
call
pop
add
cmp
jne
push
push
push
push
mov
call
mov
cmp
jne
push
call
pop
pop
pop
mov
add
call
pop
leave
ret
push
mov
sub
mov
xor
mov
push
mov
movzwl
cmp
push
mov
jle
sub
je
dec
je
dec
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
add
push
push
call
pushl
mov
lea
mov
call
mov
cmp
je
push
mov
cmp
je
pushl
mov
push
push
push
push
call
mov
lea
call
lea
call
mov
pop
pop
leave
ret
push
push
mov
mov
test
je
mov
push
call
mov
andl
test
je
mov
push
push
call
mov
stos
add
aam
lock
iret
add
add
add
call
add
add
hlt
lret
add
ljmp
jmp
add
roll
fdivs
mov
add
push
push
push
push
push
push
call
add
incb
xchg
add
lock
jb
mov
imul
add
add
add
aam
loope
add
add
add
add
js
add
pop
add
lcall
inc
in
push
push
push
push
push
push
push
lea
push
lea
push
push
call
cmc
shrl
xchg
add
add
mov
mov
mov
jp
out
mov
mov
fcomp
add
add
movsl
mov
add
add
gs
sub
pop
push
push
push
push
push
call
add
add
add
nop
cltd
jne
std
lds
je
mov
add
jne
mov
mov
add
aam
add
out
add
push
jb
add
mov
test
out
sub
pop
push
push
push
push
call
add
movsb
repnz
movsb
add
add
add
jge
notb
mov
jp
jno
add
jb
ret
lahf
out
xchg
mov
add
movsl
add
jbe
mov
call
push
lea
push
push
call
fdivrl
add
xlat
xchg
push
data16
jge
loope
add
xchg
clc
rolb
sti
push
add
pop
add
add
lea
push
add
mov
mov
add
push
lods
cmpsl
add
mov
jno
pusha
add
sub
pop
push
push
lea
push
lea
push
call
mov
add
add
add
mov
mov
add
fidivrl
add
add
mov
add
add
add
jns
sahf
cmpsl
add
subl
call
add
lcall
test
add
add
mov
mov
add
add
pop
fwait
xchg
add
mov
pop
add
pop
push
xchg
movsb
data16
ljmp
in
hlt
lcall
mov
push
lea
push
call
fisttps
ja
mov
add
add
sahf
add
add
fs
movl
insb
add
add
add
nop
cmpsl
add
insb
je
add
lcall
pop
hlt
push
push
push
lea
push
push
push
lea
push
push
lea
push
call
js
add
in
hlt
mov
lds
fidivrl
test
gs
add
add
data16
popl
std
lds
push
movsb
add
ljmp
push
add
mov
add
loop
mov
cmpsl
fildl
xchg
xchg
add
pushf
cmpsb
iret
movb
in
push
lea
push
lea
push
lea
push
lea
push
push
call
mov
pop
ja
xchg
faddl
add
lret
cmp
cmc
sahf
test
sti
mov
add
add
addr16
push
add
add
lock
cmpsb
push
jbe
jb
fadds
add
add
test
add
pop
sub
pop
add
add
push
push
push
push
push
call
add
mov
outsl
jne
add
add
add
push
testb
faddl
mov
js
xchg
add
loop
in
in
pop
mov
xor
push
push
lea
push
xor
add
sub
shl
not
pop
add
sub
add
pop
push
push
push
lea
push
lea
push
push
push
lea
push
call
add
add
cwtl
add
add
lods
add
add
add
in
movl
add
leave
mov
add
add
in
enter
add
ret
mov
test
add
mov
add
xchg
add
xchg
mov
xchg
mov
lcall
jne
push
push
push
push
lea
push
push
push
lea
push
lea
push
push
call
out
push
add
fadds
sahf
add
add
xchg
add
pop
mov
stc
push
mov
mov
ret
add
mov
add
jp
rolb
cltd
jmp
arpl
add
jecxz
xchg
orl
int
add
loopne
pop
mov
sub
pop
call
push
push
push
push
push
push
lea
push
call
add
jns
popa
add
out
ffree
add
repnz
add
add
add
jbe
in
fldl
jbe
rcl
mov
add
xchg
mov
repnz
std
push
add
add
mov
jle
hlt
stc
mov
inc
lock
push
push
call
jp
call
sar
xchg
add
scas
lret
jns
imul
ja
test
gs
mov
stos
iret
scas
test
cwtl
mov
add
sub
pop
lea
push
push
lea
push
lea
push
push
push
push
push
lea
push
push
call
add
add
mov
rcrb
in
add
jl
add
add
filds
std
mov
enter
add
push
add
ljmp
add
add
jo
push
data16
pusha
add
mov
ret
mov
pop
mov
in
fcompl
jne
push
lea
push
push
push
push
push
lea
push
lea
push
call
mov
rorb
add
iret
add
shlb
lret
pop
jp
add
mov
add
add
stos
jne
xchg
add
out
xchg
jmp
jmp
insb
add
add
push
loope
mov
rcr
fimull
add
pop
pushl
push
lea
push
push
push
push
call
xchg
loopne
ljmp
lcall
add
push
xchg
pop
add
add
mov
andb
add
lock
add
std
add
add
add
icebp
lret
add
push
les
pop
in
popf
add
mov
lods
fxch
add
push
push
add
out
sub
pop
call
pushl
push
push
push
push
lea
push
push
call
int
add
test
add
cltd
nop
add
mov
xchg
add
add
add
fcoml
call
xchg
mov
mov
in
call
push
push
lea
push
lea
push
push
call
nop
stos
add
xchg
add
js
add
aam
jle
add
lahf
adc
jp
xchg
add
mov
add
mov
call
push
push
ror
add
push
sub
add
rol
sub
rol
xor
sub
shr
xor
lea
pop
not
pop
push
push
lea
push
call
add
pop
jmp
add
js
popf
add
mov
xchg
add
push
nop
into
add
stos
popf
int3
addl
add
xchg
lods
sub
pop
pushl
push
push
push
push
call
add
scas
pop
pop
add
add
sti
push
add
je
push
pop
add
bound
add
mov
negb
mov
mov
aam
add
sub
pop
call
push
lea
push
push
push
lea
push
push
push
lea
push
push
call
add
push
enter
lods
xchg
enter
mov
push
cwtl
add
jle
add
fisubl
add
loop
mov
add
add
add
add
rolb
xchg
xchg
add
les
subl
jne
xchg
sub
pop
push
push
push
xor
add
inc
push
or
not
add
add
lea
shr
sub
sub
sub
sub
pop
ror
dec
pop
push
push
push
push
push
push
push
call
mov
add
imul
xchg
add
pushf
add
mov
mov
add
data16
mov
push
push
push
push
lea
push
call
add
xchg
rcl
inc
add
add
stos
add
mov
add
add
add
popf
add
ficoms
in
lock
push
push
lea
push
push
push
call
mov
add
flds
add
les
add
add
fadds
add
cwtl
mov
mov
stc
push
add
mov
add
push
fyl2x
fisubrs
add
mov
incb
add
les
sub
pop
call
push
push
push
push
push
push
lea
push
call
addb
int3
flds
add
les
lret
lock
push
xchg
in
mov
add
movsl
in
add
call
add
add
mov
incb
lods
add
pop
outsl
jo
int
cli
add
jne
add
lock
add
lods
mov
enter
pop
rclb
movl
mov
push
push
push
push
push
lea
push
push
push
push
push
call
add
push
stc
mov
in
pop
mov
add
pushf
add
add
jmp
cmpsl
lret
fs
test
in
add
in
fidivrs
add
shlb
add
push
push
push
call
add
flds
add
add
mov
add
fistpll
lods
add
mov
cld
add
je
aam
add
lcall
mov
push
lea
push
push
call
imul
fiaddl
pop
out
add
add
jl
add
cli
mov
push
add
add
add
movb
jp
add
add
in
add
stc
pop
add
ret
addl
sub
pop
add
push
push
push
push
push
call
add
add
add
xchg
add
add
add
mov
add
mov
popf
add
mov
sahf
sti
mov
mov
add
sub
pop
add
add
push
push
push
lea
push
push
lea
push
push
call
add
bound
arpl
mov
add
pop
aam
mov
outsl
fnsave
in
add
clc
int
add
lret
add
imul
sub
pop
mov
xor
push
push
lea
push
push
push
push
lea
push
push
push
lea
push
call
insb
test
add
imul
notl
jle
add
add
addb
out
js
outsl
scas
add
add
push
ljmp
sub
pop
add
push
push
push
push
call
leave
mov
pusha
pushf
add
mov
cli
add
lret
add
shlb
repnz
mov
jo
add
pop
addl
in
lock
push
push
push
push
push
push
lea
push
push
push
push
push
call
pop
fldl
mov
add
mov
add
add
ficomps
add
js
mov
aad
add
mov
roll
add
inc
or
adc
xchg
fiaddl
jl
push
call
add
xchg
add
shll
add
lea
pop
add
pusha
mov
add
add
cmpsb
jle
push
in
xchg
add
loop
mov
lock
lea
push
push
push
call
mov
xchg
roll
jns
pop
testl
add
sahf
std
in
add
add
shl
add
leave
pop
sub
pop
pop
mov
xor
push
push
push
push
push
lea
push
push
lea
push
lea
push
call
pop
iret
add
loopne
add
cltd
cmpsl
add
xchg
in
add
push
add
mov
add
mov
mov
rcl
add
mov
add
pop
xchg
add
pop
mov
add
add
jbe
push
add
out
lods
in
add
add
pop
push
push
push
lea
push
push
push
lea
push
push
push
call
std
sahf
lcall
push
ret
push
mov
push
orl
add
call
add
pop
sub
pop
mov
xor
push
push
lea
push
push
lea
push
push
push
push
push
push
call
add
popf
arpl
test
mov
call
mov
mov
add
mov
movsb
add
loop
out
add
add
test
mov
add
mov
enter
leave
add
mov
fildl
adc
fdivr
lcall
enter
push
push
call
lret
add
int
jecxz
rolb
lret
bound
mov
push
add
mov
mov
mov
add
add
int
add
fiadds
adcl
sub
pop
rep
push
push
push
push
push
push
lea
push
call
add
lds
add
fimuls
test
shrb
add
add
orb
movb
add
loope
lea
in
add
pusha
add
fprem
mov
mov
jne
add
add
add
mov
into
aam
push
add
sub
pop
pop
push
push
call
add
mov
add
leave
push
add
add
add
jno
add
loopne
rorl
les
movsl
add
out
add
hlt
add
clc
pop
mov
add
push
push
push
push
push
lea
push
call
adc
cmpsb
add
add
addb
lcall
fcoml
incb
mov
scas
add
add
je
stos
out
pop
test
icebp
pop
add
int3
push
add
lods
mov
pusha
push
cmc
mov
call
adc
add
mov
jl
push
lea
push
push
push
push
lea
push
push
push
call
rolb
imul
sahf
add
je
std
add
add
add
add
jmp
add
sahf
xchg
pop
xchg
pop
les
jmp
lods
add
je
jno
into
jnp
mov
add
fistl
fistl
add
add
mov
in
fdivr
lcall
ret
incb
add
xor
adc
lret
push
cmc
inc
pop
mov
xor
push
push
push
lea
push
call
scas
jl
add
add
jo
int3
imul
pop
push
mov
jnp
add
in
push
mov
pop
in
jge
add
add
add
test
stc
lods
jb
rolb
pop
mov
push
fbld
rolb
lods
ret
sub
pop
mov
xor
push
lea
push
push
lea
push
lea
push
push
push
push
push
lea
push
call
add
ret
fisubrl
add
test
ja
add
mov
movsb
jle
loopne
pop
add
add
sub
pop
add
push
lea
sub
add
pop
add
mov
push
push
inc
rol
push
push
pop
add
inc
sub
shl
pop
lea
pop
push
push
call
mov
add
pop
add
add
add
jnp
rcl
add
cld
add
out
add
add
lret
pop
add
lods
add
add
mul
add
mov
movsl
rcl
jne
testl
add
hlt
mov
add
add
add
push
pop
mov
add
out
in
clc
pop
pushl
call
push
dec
pop
push
push
push
ror
push
xor
add
not
inc
sub
pop
pop
push
shl
pop
push
push
push
ror
ror
add
pop
call
mov
push
push
push
push
push
lea
push
push
push
push
call
add
add
push
add
push
mov
mov
xlat
jp
push
mov
ja
add
mov
add
pop
mov
add
add
fdivrl
mov
jl
add
jle
movl
fdivr
lcall
push
push
lea
push
lea
push
push
push
push
lea
push
call
xchg
jns
mov
mov
add
in
pusha
data16
push
add
mov
add
xchg
add
add
fildl
mov
add
pop
push
add
lcall
add
in
xchg
sub
pop
mov
push
sub
pop
add
push
ror
ror
add
sub
pop
add
add
push
dec
pop
mov
xor
push
sub
pop
add
push
lea
push
call
add
int
mov
add
aam
popf
mov
add
push
mov
addl
add
jnp
cltd
pop
test
push
add
jb
mov
add
add
roll
fists
cwtl
insb
mov
mov
imul
lods
pop
add
imull
sub
pop
push
push
xor
shl
rol
pop
mov
xor
push
push
push
call
imul
orl
bound
add
add
in
add
stos
add
outsl
ljmp
je
mov
shll
jl
add
add
in
hlt
pop
add
push
inc
pop
pop
mov
push
push
lea
push
push
push
push
push
call
add
add
popa
xchg
cmpb
add
mov
add
in
add
test
mov
add
xchg
add
mov
fstl
call
xor
push
push
push
lea
push
push
push
push
push
lea
push
call
add
mov
add
shll
mov
pop
repnz
add
add
add
add
scas
add
add
add
add
add
jmp
push
add
imul
mov
push
add
add
lcall
les
inc
ror
rol
shr
pop
rep
push
lea
push
push
call
jp
mov
add
add
add
rolb
add
add
fldl
movsb
int
push
add
mov
add
add
add
add
mov
mov
lods
in
fiadds
lods
cmpsb
loope
cmc
jmp
in
not
mov
push
pop
push
jns
add
in
hlt
lcall
dec
and
xor
adc
push
push
push
lea
push
push
push
push
push
call
addb
add
fs
add
cltd
push
add
add
add
cwtl
test
test
add
mov
hlt
pop
add
mov
in
fcomps
or
push
push
call
insb
push
add
mov
shlb
xlat
mov
add
in
xchg
add
add
fsubrs
xchg
add
jp
add
test
add
add
add
fsubs
add
iret
lods
mov
mov
lcall
les
lea
push
push
push
lea
push
lea
push
push
lea
push
call
add
jl
mov
add
add
aad
add
add
in
xchg
mov
nop
lods
add
push
add
xor
add
mov
or
je
push
sub
rol
inc
pop
mov
push
push
push
push
push
push
lea
push
push
call
stc
test
add
push
movsl
shlb
mov
add
add
add
add
add
add
out
andb
add
lret
add
add
aam
add
cmpsb
mov
test
lret
add
add
mov
add
add
imul
in
sar
cmpsb
cld
xchg
jo
add
ror
call
pop
xor
push
push
lea
push
call
test
mov
add
popf
add
cmpsb
add
add
xlat
add
jne
add
fsub
into
add
lcall
les
add
push
push
push
lea
push
push
push
push
push
call
std
add
rolb
add
stc
push
into
int3
out
mov
mov
mov
shl
add
pop
add
add
je
lret
xlat
lahf
rolb
loop
iret
imul
pop
mov
js
and
mov
xchg
add
sti
rol
loopne
addr16
pop
mov
xor
push
rol
add
ror
pop
add
add
push
lea
pop
push
mov
push
push
push
push
push
push
push
push
push
push
push
call
cld
pop
add
ljmp
add
loop
fsub
jle
mov
loopne
add
lahf
add
mov
in
add
add
ljmp
imul
into
add
out
movsl
add
add
mov
movsl
add
out
add
add
add
sub
pop
xor
push
push
call
movsb
xchg
frstor
in
pop
ljmp
imul
in
loop
out
push
adcb
add
add
lcall
les
xor
lea
shr
not
pop
add
push
push
push
lea
push
lea
push
push
push
push
push
call
shl
jge
mov
fadds
add
push
mov
add
add
add
jmp
add
xchg
mov
insb
pop
xchg
add
add
add
sub
pop
pop
push
push
push
push
lea
push
push
push
lea
push
push
call
mov
fucomip
lods
xchg
loope
repnz
mov
mov
xchg
rolb
mov
rcrl
add
enter
aad
cmpsb
add
shr
andl
jp
scas
add
mov
add
mov
add
cmc
add
movsb
push
lea
push
push
push
push
push
call
in
pop
push
jecxz
add
mov
roll
in
cwtl
add
add
add
add
scas
add
xchg
cli
add
fldl
add
enter
push
add
addl
aam
add
cwtl
add
add
add
shll
test
add
test
pop
jb
xchg
add
dec
sub
jno
adc
xchg
cmp
push
lea
push
push
push
push
push
lea
push
call
hlt
add
aad
je
add
jnp
xchg
add
jns
add
add
mov
enter
out
movsl
jno
push
arpl
mov
add
add
xchg
int3
add
add
in
idivb
add
add
jbe
mov
add
add
testw
in
fdivr
lcall
or
push
push
lea
push
push
push
call
icebp
push
testl
pop
add
add
out
add
in
add
flds
js
lock
mull
pop
add
pop
add
add
dec
add
mov
in
in
pop
add
push
lea
push
push
lea
push
push
push
call
lds
jl
rolb
cmpsl
add
xchg
xchg
cmpsb
add
pop
add
add
jns
cmp
add
cmpsb
mov
pop
mov
xchg
add
push
std
sahf
jecxz
xchg
jle
movsb
cmpsb
clc
ret
xchg
push
mov
call
or
je
mov
push
push
push
lea
push
push
call
add
add
xchg
add
sbbb
aad
lods
jp
add
lds
jae
add
add
nop
add
mov
sti
add
pop
add
push
push
push
push
lea
push
push
lea
push
push
call
add
mov
mov
push
iret
mov
mov
xchg
pop
ja
mov
mov
lock
testl
faddl
cmpb
mov
add
xchg
nop
xlat
pop
add
add
sub
pop
add
rep
push
inc
sub
shl
pop
pop
push
push
rol
not
push
sub
add
add
shl
xor
sub
not
pop
not
rol
pop
push
lea
push
push
push
push
push
call
xchg
add
pushf
pop
xchg
mov
mov
mov
push
in
jne
cltd
stos
push
addr16
out
add
add
mov
add
cmpsl
add
add
add
jmp
cld
push
call
shrl
leave
inc
pop
mov
push
not
pop
mov
push
push
push
call
faddl
mov
in
jecxz
mov
jecxz
add
mov
add
add
xchg
mov
add
lds
add
roll
test
jne
sub
pop
mov
push
push
push
push
push
call
shl
add
add
add
add
jle
imul
add
jns
faddl
add
add
add
test
add
sub
pop
jmp
push
push
xor
pop
mov
push
xor
dec
pop
add
push
push
call
push
mov
add
imul
add
pop
xchg
add
pop
scas
add
add
pop
scas
mov
cli
add
jnp
add
lcall
push
shr
pop
push
push
push
push
push
lea
push
push
lea
push
call
jl
add
mul
mov
fildl
add
mov
mov
roll
add
mov
fiadds
push
imul
mov
pop
push
push
push
push
push
push
push
push
lea
push
lea
push
call
push
mov
mov
popf
iret
movb
add
sahf
mov
fs
in
lahf
mov
jbe
add
add
add
lock
or
add
fstpl
add
add
mov
add
xchg
add
xchg
add
movl
in
fcompl
push
xor
xor
pop
mov
push
xor
pop
pop
push
push
push
lea
push
push
lea
push
push
call
add
aad
fwait
add
mov
xchg
add
pop
add
shrl
push
arpl
mov
pop
mov
add
cld
stc
add
add
iret
shlb
add
add
add
fsubrp
add
roll
add
add
mov
cltd
mov
jp
add
add
sarb
lret
in
in
lcall
push
not
add
pop
pop
push
not
pop
pop
push
push
lea
push
lea
push
push
push
push
push
call
ja
fwait
cli
test
lahf
mov
add
add
jle
js
add
outsl
mov
xchg
insb
add
mov
fnstsw
cli
popa
iret
cld
lcall
add
in
add
pop
push
jge
into
jne
pop
nop
ljmp
add
add
sub
pop
leave
push
pop
ret
push
sub
sub
pop
push
push
lea
inc
sub
pop
mov
push
rol
pop
add
push
push
push
push
push
push
push
push
call
add
add
add
cmc
add
add
mov
mov
add
add
jmp
add
add
in
in
lcall
push
shl
pop
push
push
add
lea
rol
pop
push
push
push
push
push
push
lea
push
push
push
call
test
int
xchg
roll
add
jecxz
add
pop
mov
add
lret
add
mov
add
mov
add
add
jp
mov
add
sarl
movl
push
push
push
push
push
push
push
push
call
add
add
mov
ja
js
pusha
add
cwtl
ror
pushf
add
flds
iret
add
add
add
outsl
add
add
pop
lods
out
loopne
add
add
cmpb
cmc
sti
sub
pop
addl
test
je
push
push
push
lea
push
call
add
add
pop
add
jbe
add
add
add
lock
mov
pusha
add
mov
int3
pop
add
addl
in
mov
lea
add
imul
stc
test
sub
pop
mov
pop
push
dec
add
inc
pop
pop
push
push
push
push
push
push
push
push
push
call
test
add
push
push
push
jb
shl
xchg
push
stc
sti
mov
jge
bound
xchg
jbe
add
loope
push
mov
mov
sub
pop
pop
push
push
push
push
push
push
push
push
push
lea
push
call
gs
add
cli
jge
popf
add
add
into
add
add
add
stc
std
into
mov
mov
fstps
mov
add
lock
pushf
mov
mov
add
add
lcall
push
shr
not
pop
leave
push
push
call
add
add
pop
stos
add
fisubrl
ljmp
data16
jp
fmul
add
andl
add
push
add
stc
clc
fnstsw
repnz
push
lcall
ficoml
push
mov
pop
andl
ret
push
push
sub
inc
pop
mov
push
shr
add
pop
add
push
lea
push
push
lea
push
push
push
push
call
add
lods
mov
pop
rolb
add
add
jns
add
add
jno
popl
mov
insb
add
bound
into
mov
add
add
add
add
mov
mov
add
rcrb
in
push
push
push
push
push
push
push
push
push
push
lea
push
call
add
jo
add
fisttpll
mov
into
pop
arpl
add
int
pop
jns
add
add
shll
test
pop
fidivl
rcrl
add
add
ljmp
add
fld
add
add
ljmp
sub
pop
push
push
push
dec
rol
not
pop
push
push
push
call
lds
add
add
add
fisubs
add
add
add
xchg
add
stos
add
mov
test
cmpsb
cli
jno
add
add
lret
loop
neg
roll
stos
outsl
stos
lret
mov
add
fwait
shll
xchg
add
push
int
lock
inc
cld
add
add
addl
push
push
lea
push
push
push
push
push
call
add
jmp
rcr
add
movsb
popa
imul
arpl
in
je
insb
stc
jge
add
imul
cmpsl
add
stc
add
add
add
in
lcall
add
pop
add
addl
shr
sub
pop
push
push
push
call
jle
pop
push
pop
push
mov
add
mov
add
xchg
add
cmpsb
stc
add
lods
sti
mov
loopne
add
lds
mov
out
add
push
add
je
add
add
add
les
out
add
test
lret
mov
push
cmc
add
add
add
pop
hlt
sahf
push
mulb
sub
pop
call
mov
push
add
sub
pop
pushl
push
push
call
ja
add
add
xchg
add
add
lods
shrl
add
int3
mov
add
push
add
imul
xchg
add
popa
add
push
add
push
loop
add
movsl
into
add
iret
push
add
mov
ret
insb
addr16
add
add
je
add
clc
lcall
call
jecxz
inc
pop
push
call
push
push
push
push
call
mov
mov
add
addb
add
clc
fadds
jb
out
loop
add
add
addb
arpl
sti
sahf
call
add
add
movsb
add
pop
cli
add
jle
addb
insb
sub
pop
cmpl
jne
push
xor
pop
pop
push
push
push
lea
push
lea
push
push
push
call
mov
in
cwtl
push
add
scas
repnz
movsl
push
cli
xchg
add
add
std
mov
mov
lret
faddl
jecxz
pop
mov
into
add
lock
add
add
add
xchg
jns
add
fldenv
pop
bound
gs
stos
leave
add
add
lahf
mov
ret
sub
pop
pop
push
lea
push
call
jbe
test
pop
ljmp
add
loopne
in
add
add
in
xchg
mov
int3
out
push
add
sbb
pop
push
jge
in
clc
pop
pop
pop
push
lea
push
push
call
add
xlat
pop
mov
xchg
scas
fnstcw
pushf
cli
fildl
stos
pop
add
add
test
xchg
mov
in
mov
sarb
lcall
push
rol
ror
not
pop
ret
push
push
lea
dec
xor
not
pop
mov
push
xor
dec
inc
pop
add
push
pop
push
push
shr
shr
pop
push
push
push
add
pop
push
movl
push
lea
pop
push
push
inc
pop
call
push
sub
pop
push
push
shr
ror
pop
call
subl
push
push
push
push
push
push
lea
push
push
push
call
push
mov
add
in
scas
lcall
fstl
bound
mov
clc
sarl
add
lds
outsl
mov
stos
sbbl
ret
test
pop
jo
mov
add
add
test
in
in
fdivr
lcall
jge
add
test
call
fisubrs
fadd
ret
jo
pop
pop
push
push
push
push
call
add
imul
add
mov
into
mov
add
xchg
add
loope
lods
add
jnp
je
cld
add
xchg
add
add
mov
lds
repnz
add
xlat
sub
pop
pop
push
add
pop
pop
leave
push
not
pop
ret
push
shl
pop
push
push
push
push
call
add
lods
mov
jae
mov
add
hlt
out
in
add
pop
add
add
jo
fwait
stos
add
mov
pop
test
shrl
lods
pop
add
cltd
add
push
mov
add
shl
add
add
sub
sub
pop
mov
add
push
lea
push
lea
push
push
push
call
add
mov
add
movsb
shr
in
mov
outsl
push
mov
gs
data16
bound
push
out
mov
test
push
add
movsb
mov
mov
add
pushf
test
mov
xlat
add
add
lcall
push
shr
sub
pop
push
push
inc
sub
lea
shl
pop
push
push
push
push
push
push
push
push
push
call
xchg
add
mov
lods
add
add
add
nop
add
pop
add
cmpsl
fdivs
out
push
lock
lahf
add
mov
add
jp
out
sub
pop
push
push
add
pop
mov
push
add
pop
lea
sub
push
lea
dec
pop
mov
shr
push
push
push
push
lea
push
lea
push
push
call
lods
stc
test
add
pop
jge
aad
mov
lea
add
add
pop
add
addl
stos
stc
stos
mov
popf
add
vmulsd
jecxz
add
mov
aam
add
pop
mov
add
inc
or
inc
cld
push
add
sub
pop
mov
push
shl
rol
pop
add
add
push
not
rol
ror
pop
mov
push
inc
pop
mov
cmp
jne
push
pop
cmp
jne
push
push
push
push
push
push
push
call
add
loopne
nop
add
in
fstpt
add
popa
add
mov
add
add
int
add
and
push
fisubrl
out
mov
lcall
inc
adc
and
push
lcall
clc
push
push
push
push
call
jae
add
iret
stos
mov
mov
lock
mov
jb
add
mov
add
popa
roll
add
push
sub
pop
movl
push
lea
push
lea
push
push
push
push
call
add
lret
cld
nop
test
negl
rorl
add
add
mov
add
shll
add
mov
jp
imul
add
mov
mov
ror
push
add
shll
add
lcall
fimull
add
jmp
pop
mov
push
xor
pop
mov
sub
jne
push
not
pop
mov
movl
push
push
call
add
add
in
icebp
push
sbbb
test
push
mov
fwait
in
mov
mov
sub
push
mov
add
jae
mov
add
add
push
lea
add
test
in
mov
sub
pop
jmp
mov
push
lea
inc
inc
pop
mov
cmp
jne
push
ror
pop
mov
movl
push
push
push
lea
push
lea
push
push
push
call
cmpsb
add
mov
push
add
add
add
add
add
lret
add
call
add
add
stos
rorl
test
add
mov
add
pop
scas
push
add
icebp
add
add
xchg
add
out
mov
add
repnz
testb
loopne
out
add
in
in
lcall
sahf
or
add
int
leave
inc
inc
pop
mov
push
push
push
push
push
push
call
addr16
in
fidivrl
cld
add
scas
roll
add
fwait
aam
add
leave
imul
add
jbe
push
add
pop
pusha
mov
mov
adcl
add
insb
add
jmp
add
mov
add
call
cmpw
jne
mov
push
push
call
jno
test
stos
add
popa
movl
pusha
add
add
add
repnz
add
imul
add
ret
add
lret
add
cwtl
pop
imul
add
int
add
mull
je
cmpsl
imul
add
clc
lcall
add
pushf
or
add
aam
pushl
pop
push
push
push
push
push
push
call
push
loopne
add
test
add
imul
xchg
rolb
gs
add
mov
aad
mov
pop
add
insb
add
sub
pop
mov
push
sub
not
lea
add
pop
mov
push
lea
push
call
add
lods
add
add
jle
pop
fwait
xchg
faddl
out
imul
icebp
xchg
add
fcoms
movsl
pop
jecxz
xchg
add
add
push
cli
out
popf
add
mov
add
xchg
mov
in
clc
pop
mov
push
push
xor
push
and
add
shr
add
sub
sub
inc
pop
shl
not
shl
pop
push
rol
pop
push
call
push
push
push
push
push
push
push
call
fmuls
lcall
sti
mov
jp
fsubr
add
mov
lock
add
test
lods
add
add
loopne
add
pop
ja
add
sub
pop
cmpl
je
push
push
xor
xor
shr
push
xor
add
shl
shr
shl
sub
shr
pop
lea
xor
pop
push
pop
push
push
dec
pop
call
cmpl
je
push
push
shr
xor
ror
dec
push
sub
add
sub
not
lea
ror
pop
not
pop
push
push
lea
push
push
push
call
mov
add
pusha
pop
sti
jl
add
add
add
stos
add
mov
mov
add
lods
add
scas
add
add
add
add
add
mov
mov
push
nop
test
add
loopne
lods
add
jo
scas
add
xchg
add
jp
arpl
sub
pop
push
call
push
pop
cmpl
je
push
push
dec
push
or
inc
add
xor
sub
shl
lea
inc
pop
shr
pop
push
not
add
xor
pop
push
push
add
pop
call
push
inc
not
pop
cmpl
je
push
push
shl
shr
dec
shl
push
xor
add
shr
not
sub
rol
rol
pop
lea
pop
push
push
push
push
push
lea
push
call
add
ljmp
movsl
add
add
repnz
popl
mov
hlt
xchg
cld
cltd
mov
shll
lahf
mov
in
call
xor
pop
call
cmpl
je
push
push
add
push
or
inc
add
ror
sub
rol
pop
add
inc
rol
sub
pop
push
lea
push
push
lea
push
call
clc
add
clc
push
in
lret
add
arpl
popl
add
faddl
jbe
insb
add
mov
add
lahf
add
push
add
les
add
test
gs
fsubrp
mov
add
mov
addb
hlt
mov
lea
pop
xchg
add
rcll
xchg
gs
add
out
cmpsl
nop
cli
sub
pop
push
push
push
lea
push
push
lea
push
call
add
add
jne
xchg
add
add
andb
add
out
mov
add
add
data16
add
pop
jns
mov
add
add
popa
mov
mov
pusha
jp
jae
pop
sub
pop
call
push
add
pop
cmpl
je
push
push
dec
push
sub
add
lea
sub
inc
sub
lea
pop
xor
pop
push
lea
push
call
add
push
jge
mov
pop
jle
pop
add
addr16
add
add
jp
add
add
ficoms
add
cli
add
iret
in
add
movsb
add
lahf
addl
add
out
fadd
ret
add
add
add
jp
jne
mov
iret
lods
stos
add
add
sub
pop
push
call
push
push
lea
push
push
call
add
xchg
nop
add
loop
add
lods
fadds
add
insb
lret
xchg
push
jmp
mov
cmpsl
fisubl
add
int3
lret
jo
aad
iret
jl
add
add
in
lock
lcall
cmp
or
int3
je
push
push
sub
dec
shl
add
push
or
inc
add
rol
sub
sub
pop
ror
lea
shl
pop
push
ror
pop
push
call
push
push
push
push
push
push
call
icebp
add
mov
mov
imul
push
xlat
pusha
popf
mov
fiaddl
mov
jne
add
repnz
add
add
jecxz
testl
add
popa
xlat
add
xchg
shr
add
mov
mov
add
lcall
jo
add
sub
pop
cmpl
je
push
push
lea
not
push
push
pop
add
xor
shr
sub
shr
sub
pop
add
xor
pop
push
push
push
push
call
add
test
repnz
jmp
add
fsubrl
jl
xchg
add
push
mov
xchg
mov
add
fldl
add
lods
add
add
add
add
add
mov
jecxz
ljmp
xchg
pop
call
lock
push
call
push
push
call
add
test
cmpsl
mov
mov
jbe
add
pusha
ja
call
jge
add
add
add
notb
add
std
mov
pop
add
add
insb
xabort
add
test
add
mov
in
clc
lcall
cmp
rol
je
push
push
sub
sub
inc
push
and
add
sub
lea
ror
xor
pop
shl
shl
pop
push
rol
pop
push
push
pop
call
push
sub
sub
pop
cmpl
je
push
push
rol
add
rol
push
and
add
inc
sub
add
add
xor
add
pop
add
pop
push
push
lea
push
lea
push
push
push
lea
push
lea
push
push
push
call
mov
add
jns
scas
add
mov
mov
add
xlat
loop
jne
lods
add
jmp
in
mov
gs
xchg
sbbb
mov
sar
cld
add
pop
lods
fadds
ljmp
out
jnp
add
lret
mov
lcall
jae
repnz
mov
push
call
push
lea
push
push
push
call
add
add
add
lahf
stos
jp
fistl
test
popl
add
mov
add
add
scas
stos
insb
add
add
xchg
add
flds
add
mov
mov
add
add
add
xchg
xlat
add
push
mov
add
add
xchg
test
rolb
out
add
popf
sub
pop
cmpl
je
push
push
rol
shl
push
sub
add
inc
lea
sub
add
sub
shl
pop
xor
sub
rol
pop
push
lea
push
push
push
lea
push
call
js
mov
mov
xchg
add
add
push
mov
addr16
out
jge
mov
jmp
lock
bound
clc
cmc
call
push
pop
in
leave
add
sub
pop
push
call
push
push
lea
push
lea
push
push
push
call
lds
movsl
cmpsb
in
filds
add
test
add
mov
stos
pop
popf
add
into
add
in
xchg
add
add
fdivrs
add
push
roll
lcall
js
jmp
les
je
push
push
add
inc
push
or
not
add
add
add
sub
sub
pop
not
dec
pop
push
ror
pop
push
push
sub
ror
pop
call
cmpl
jne
push
not
pop
mov
push
push
call
jno
movl
add
add
popf
stos
sti
lods
popa
add
add
add
xchg
in
add
add
out
mov
jmp
fisttpl
ret
xchg
cwtl
jae
in
clc
lcall
add
add
add
mov
aad
push
push
push
call
add
mov
sti
test
mov
mov
add
add
add
add
push
xchg
add
call
pop
in
add
add
jmp
in
lock
lcall
adc
add
push
add
pop
xor
push
shl
lea
lea
pop
pop
push
push
lea
push
lea
push
push
push
push
push
call
andb
loope
mov
mov
mov
add
add
fwait
add
xchg
mov
jae
xchg
imul
jbe
xchg
lcall
pop
push
shl
pop
pop
push
push
lea
push
push
call
call
rolb
cmpsl
pop
add
mov
jl
push
rol
fnstenv
icebp
cmc
add
xchg
mul
xchg
in
jne
fcoms
lods
add
pop
lods
jb
add
xlat
test
xchg
add
les
mov
add
lcall
ret
push
push
push
lea
push
push
lea
push
lea
push
push
call
push
jp
push
fstp
xchg
loopne
add
add
data16
in
jno
jl
add
fildl
jb
subl
xchg
scas
jecxz
sub
pop
push
push
lea
push
lea
push
push
push
push
push
lea
push
lea
push
call
add
push
add
xlat
add
add
in
scas
xchg
add
cmpsb
add
add
movb
mov
ficoml
add
add
add
jnp
imul
sub
pop
mov
add
push
inc
sub
shl
pop
cmpl
jne
push
push
add
push
sub
add
dec
inc
add
ror
sub
add
not
pop
lea
pop
push
lea
push
push
call
fiadds
les
add
mul
push
test
std
stc
jo
scas
icebp
jne
leave
gs
add
stos
pop
test
out
add
add
add
add
enter
pop
pusha
add
ja
iret
jno
add
mov
pushf
add
hlt
lcall
jne
push
push
push
call
add
add
add
add
add
scas
outsl
add
imul
lods
clc
int3
add
out
add
repnz
sub
pop
call
push
add
xor
add
pop
push
call
push
shl
add
lea
pop
jmp
push
add
sub
pop
cmpl
je
push
push
push
push
lea
push
push
lea
push
push
push
call
call
pop
shl
mov
imul
add
add
sti
xchg
add
add
add
mov
add
add
add
jp
add
test
addr16
add
jge
add
add
push
rol
add
inc
pop
mov
call
push
lea
push
push
push
lea
push
push
lea
push
call
in
scas
add
cmc
int3
loopne
mov
xchg
lret
scas
mov
movsb
popf
stos
add
add
movsl
movsl
rcl
jbe
add
enter
mov
xchg
call
add
add
pusha
add
jp
sub
pop
ret
push
ror
pop
jmp
push
not
inc
pop
cmpl
jne
push
push
add
rol
push
and
add
lea
sub
shl
dec
pop
rol
pop
push
lea
add
pop
pushl
push
push
push
push
push
lea
push
push
push
push
call
je
in
fcmovu
fadds
and
stos
xchg
shlb
in
add
loopne
add
add
shlb
add
pop
pusha
sub
pop
call
push
add
pop
push
push
add
dec
pop
call
jmp
push
lea
push
call
jmp
fs
mov
add
mov
add
shlb
arpl
pop
popa
add
popf
divb
bnd
cmc
bound
movsb
add
push
filds
add
add
xchg
add
add
add
cmpsl
loopne
int3
out
sub
pop
cmpl
jne
push
push
lea
push
push
push
call
fcomps
mov
cltd
add
add
add
js
in
add
in
add
add
add
addl
add
xchg
xchg
push
mov
add
jbe
test
add
mov
add
add
fwait
add
push
lret
add
movl
mov
push
push
push
lea
push
lea
push
push
push
call
add
stos
insb
mov
add
ja
bound
pop
add
out
jle
add
jae
pop
andb
incb
popa
add
add
pop
add
add
add
add
movsb
add
cwtl
into
jle
mov
mov
sub
pop
mov
push
push
push
add
sub
push
sub
add
rol
ror
sub
inc
add
not
pop
sub
shr
add
pop
push
add
xor
pop
pushl
call
push
push
push
lea
push
push
push
lea
push
call
jbe
pop
shlb
lds
je
test
add
icebp
mov
mov
add
cli
xchg
add
lods
jb
xorb
aad
xlat
rolb
push
add
xchg
mov
mov
fisttps
push
jnp
push
arpl
push
jmp
imul
add
add
flds
std
add
pop
add
pop
call
push
push
add
push
sub
add
not
sub
lea
add
inc
dec
pop
shr
shr
pop
push
lea
push
call
std
add
cmpsl
add
je
in
pop
in
cli
lret
cmpsb
add
loop
push
add
jp
in
add
iret
add
add
shll
leave
add
stos
add
lret
jno
cld
pop
add
add
add
mov
jmp
push
add
add
in
clc
lcall
jne
push
sub
shl
pop
call
push
push
call
pop
add
pop
mov
mov
jle
add
add
loopne
mov
pop
add
movsl
add
add
add
jb
testb
add
add
jae
into
add
fisubrs
sbbb
add
shll
add
out
add
add
sub
pop
call
push
push
sub
inc
push
and
add
ror
sub
sub
inc
not
pop
shl
ror
pop
push
lea
push
push
push
push
push
push
push
call
mov
add
add
add
add
lahf
add
roll
aad
lahf
add
fildl
imul
cmpsl
ljmp
incb
je
fwait
hlt
add
add
movsb
add
mov
add
push
roll
pop
out
mov
lcall
jne
push
add
pop
call
call
push
push
push
or
inc
add
lea
sub
add
add
rol
pop
pop
push
push
lea
push
push
call
loope
mov
jnp
insb
push
mov
out
xchg
add
gs
call
add
add
stos
add
pop
fiadds
add
mov
add
mov
add
add
out
mov
add
bound
sub
pop
pushl
push
not
sub
add
pop
call
push
ror
shl
dec
pop
call
push
push
add
push
push
pop
add
ror
lea
add
sub
sub
add
sub
pop
rol
shr
lea
pop
push
push
push
push
push
push
lea
push
push
call
add
leave
add
outsl
rolb
pop
xchg
add
add
add
xchg
add
mov
test
add
int3
je
orl
lea
add
jbe
add
in
lahf
movsb
add
movsl
add
add
add
addb
pop
pushl
push
dec
shr
add
pop
call
push
push
push
push
push
push
call
cmc
mov
lret
pop
jb
push
test
mov
in
add
jb
add
leave
mov
mov
add
jns
mov
add
xchg
iret
add
pop
add
add
lcall
shrb
rcrl
incl
call
int
rorl
hlt
not
add
sub
lea
add
shr
pop
shl
ror
pop
push
add
pop
pushl
push
push
lea
push
push
push
call
xchg
add
nop
add
movsb
add
push
add
cld
iret
add
jbe
add
add
mov
add
out
add
push
xchg
push
cwtl
add
jle
aam
movsl
adcl
fldl
loopne
clc
add
mov
cld
arpl
shrb
out
in
iret
mov
pop
sti
sub
pop
call
push
ror
add
pop
call
push
push
ror
add
shl
push
xor
add
ror
shl
add
not
sub
rol
sub
not
inc
pop
not
ror
add
ror
pop
push
ror
dec
pop
pushl
call
push
rol
not
pop
call
push
push
lea
push
or
not
add
inc
shr
lea
sub
rol
xor
shl
pop
not
shr
sub
pop
push
lea
push
push
push
push
push
lea
push
call
push
addb
cmpsl
add
add
add
jmp
aam
add
mov
push
lret
add
stc
out
test
add
add
jns
fsubl
mov
sti
mov
pusha
mov
pop
ja
add
add
add
jecxz
jo
jmp
lcall
jne
push
push
push
push
push
lea
push
push
call
enter
sti
mov
add
pop
je
jge
add
add
mov
lods
add
cmpsb
out
add
add
addb
mov
xchg
scas
scas
mov
lds
add
popa
add
mov
mov
data16
cwtl
cld
pop
add
repnz
mov
sub
pop
call
push
push
push
call
in
add
out
jbe
ljmp
js
xchg
out
loope
add
pop
roll
les
loopne
fistl
pop
loopne
add
add
ja
imul
cli
add
push
rolb
fwait
js
call
mov
add
lock
xlat
lret
jge
cltd
add
add
jge
or
icebp
add
pop
sub
pop
call
push
push
lea
push
or
inc
add
sub
dec
shr
add
pop
add
add
pop
push
push
lea
push
lea
push
push
push
call
in
sahf
test
add
jmp
mov
mov
add
add
cwtl
mov
jae
add
add
add
push
add
pop
lods
add
ret
stc
lods
add
fs
add
int
jmp
in
call
test
add
fiaddl
mov
xchg
mov
aam
sub
pop
pushl
call
push
shr
inc
pop
call
push
push
dec
shl
push
or
not
add
dec
rol
sub
sub
shl
pop
pop
push
push
call
popl
xchg
add
mov
repnz
add
push
add
add
insb
add
fildl
add
add
add
cmc
jo
popa
add
iret
add
add
add
aam
add
mov
add
cmpsl
push
add
data16
scas
add
add
add
mov
add
clc
pop
pushl
push
push
push
push
lea
push
push
push
lea
push
call
mov
mov
jno
enter
scas
add
add
add
add
clc
mov
add
add
mov
mov
add
cmpsb
xchg
imul
xchg
stos
add
mov
add
movb
cli
bound
arpl
fildl
enter
add
mov
add
add
popa
add
lcall
mov
push
push
push
push
push
call
add
out
add
flds
iret
jle
xchg
add
xchg
add
cmp
fcmovne
jns
mov
scas
aam
add
stos
xchg
in
lea
cli
add
data16
loop
add
in
orb
std
add
push
add
add
shl
lret
add
cld
sub
pop
lea
push
push
push
push
push
lea
push
lea
push
call
add
push
orl
lcall
mov
add
mov
xchg
fsts
iret
add
add
add
push
ljmp
into
push
cld
push
cwtl
add
add
add
add
divb
pop
add
add
add
lcall
push
push
push
call
test
add
in
arpl
add
add
xchg
add
add
stos
or
out
add
add
addl
add
mov
jecxz
mov
test
shr
mov
add
add
mov
mov
add
call
push
push
xor
push
or
not
add
add
lea
ror
sub
add
sub
shr
pop
ror
not
pop
push
lea
push
push
call
add
ljmp
aad
ja
loopw
roll
mov
incb
mov
ljmp
arpl
add
stos
fadds
add
xchg
add
in
hlt
lcall
jne
push
add
not
pop
call
push
push
push
push
push
push
push
push
push
push
call
jp
add
pop
add
add
les
stos
in
cwtl
push
in
into
add
roll
add
into
add
add
shrb
xchg
out
inc
ror
push
or
not
add
sub
not
lea
sub
sub
sub
add
pop
sub
add
sub
pop
push
add
xor
pop
pushl
push
push
push
push
lea
push
push
push
push
call
imul
mov
push
fdivs
add
add
bound
add
out
add
arpl
add
add
loop
mov
mov
add
fsubp
out
add
add
xchg
xchg
fdivl
insb
test
cld
add
pushf
loop
xchg
push
add
sub
pop
call
call
push
push
lea
add
ror
push
xor
add
rol
inc
sub
rol
shr
pop
rol
pop
push
lea
push
lea
push
push
push
call
push
add
movb
fstps
cmc
loope
bound
mov
sti
pop
add
add
testb
add
add
add
lcall
add
fiaddl
not
push
add
xchg
movsb
add
cmc
add
mov
cltd
sahf
pusha
add
add
in
pop
pushl
push
ror
add
pop
call
push
xor
sub
xor
pop
call
push
push
push
and
add
lea
sub
sub
not
sub
pop
xor
add
pop
push
push
lea
push
call
xchg
mov
ljmp
add
sahf
jne
lds
in
push
pop
add
jp
testl
add
add
in
mov
mov
faddl
add
push
mov
add
flds
pop
add
testl
or
mov
aas
call
lahf
pop
add
push
mov
add
xchg
push
js
ljmp
add
sahf
int
add
cwtl
shll
aad
pusha
loop
add
cwtl
mov
sub
pop
call
push
push
inc
push
and
add
dec
rol
dec
rol
sub
lea
rol
sub
pop
sub
pop
push
push
shr
dec
dec
shr
push
and
add
ror
sub
not
pop
rol
add
pop
push
push
push
push
lea
push
push
call
pop
shlb
shlb
les
test
add
add
add
mov
js
mov
add
add
ljmp
pop
xlat
add
movsl
add
mov
jmp
fwait
add
add
mov
add
pop
add
in
xchg
mov
sub
pop
call
push
rol
pop
pop
push
rol
xor
shl
pop
dec
jne
push
push
xor
ror
push
push
pop
add
add
shr
sub
lea
not
pop
xor
ror
pop
push
push
push
push
push
push
push
push
push
call
add
add
add
add
mov
add
cwtl
xchg
add
mov
pusha
add
in
fdivr
lcall
jne
call
push
push
lea
push
push
push
push
call
push
lea
add
lods
icebp
add
add
jo
add
add
mov
data16
add
movsb
add
insb
jno
pop
pop
add
ret
add
push
lds
mov
xchg
add
add
mov
in
mov
mov
addr16
add
add
mov
add
push
in
add
stos
fadds
int
pop
sub
pop
lea
push
push
push
push
push
push
push
push
push
lea
push
call
mov
test
jno
add
jnp
mov
jne
out
fisubs
filds
add
add
add
movsb
test
mov
add
scas
inc
mov
add
pop
add
mov
add
lcall
add
push
push
push
call
cwtl
mov
add
add
add
pop
out
popl
add
lret
lahf
add
lcall
jl
add
xchg
add
test
xlat
lahf
iret
add
mov
insb
add
jmp
stos
cld
add
add
add
add
add
add
pusha
sub
pop
push
call
push
push
push
push
lea
push
lea
push
push
lea
push
call
lret
add
les
add
add
stos
push
add
data16
popf
cld
add
xorl
add
jb
fidivrl
insb
add
xchg
xchg
sahf
add
add
push
aam
std
add
lock
mov
add
stos
movsl
mov
std
lea
add
add
add
sub
pop
call
push
push
not
shr
shr
push
or
not
add
add
sub
xor
pop
pop
push
lea
push
push
push
push
push
call
add
test
add
add
jecxz
mov
jmp
cld
imul
add
add
je
add
fmul
add
lret
addb
iret
imul
or
xlat
inc
add
lea
push
lea
push
call
test
mov
in
stc
add
pop
add
test
add
lea
add
test
out
add
xchg
fdivs
hlt
add
in
lcall
adc
add
push
push
lea
push
push
call
mov
hlt
add
aam
add
xchg
pop
iret
leave
add
add
add
add
roll
push
jle
jecxz
add
add
add
mov
jbe
add
jns
xchg
push
jl
add
add
lcall
add
aam
add
sub
pop
push
push
lea
push
push
push
lea
push
lea
push
push
push
push
call
lahf
add
xchg
mov
jns
shrb
pop
je
xchg
push
add
add
stos
lock
rcll
add
stc
add
into
add
stos
test
data16
add
sub
pop
call
push
sub
add
add
pop
mov
push
push
shl
ror
add
add
push
xor
add
inc
not
sub
rol
dec
add
pop
inc
pop
push
push
push
push
push
push
push
push
push
push
call
push
push
ret
add
jge
add
add
push
les
in
add
jbe
add
push
incb
push
add
test
pop
mov
shlb
shll
add
shl
loope
int3
pop
mov
add
popa
add
jne
push
push
push
lea
push
call
add
add
push
lcall
xlat
int
jge
movb
mov
add
cld
jb
stos
lods
add
add
mov
jl
add
mov
jae
add
adcl
add
add
into
add
addb
push
icebp
fidivrl
sbb
leave
mov
add
call
add
push
ror
xor
xor
pop
lea
push
push
push
push
lea
push
lea
push
push
call
add
arpl
add
cmc
mov
add
les
add
cli
je
add
add
add
mov
add
mov
aam
icebp
xchg
sub
pop
push
push
push
lea
pop
push
push
push
add
not
pop
call
push
push
push
push
push
call
and
add
cld
call
pop
jno
movsb
mov
add
xchg
jbe
add
mov
xchg
add
fcmovnu
jle
add
add
mov
lcall
mov
lret
sub
pop
lea
push
push
not
rol
push
sub
add
inc
sub
shl
pop
inc
sub
pop
push
lea
push
push
push
lea
push
lea
push
push
push
lea
push
push
call
add
lock
add
loop
add
jmp
xchg
add
rcr
jl
pop
loope
mov
jge
push
xchg
jge
add
add
lret
roll
addb
jnp
add
add
faddl
popa
addw
mulb
xchg
ret
in
fcomps
jne
push
inc
xor
xor
pop
call
push
push
lea
push
call
scas
lahf
addb
add
jae
lock
mov
outsl
cld
pop
jp
add
mov
add
in
add
add
out
flds
push
pop
call
push
push
shr
not
push
or
inc
add
sub
shl
dec
sub
add
not
pop
sub
pop
push
push
call
add
lcall
add
in
mov
add
add
jb
add
add
add
js
mov
fcmovu
cld
mov
imul
lahf
mov
imul
add
add
add
jecxz
jecxz
addr16
pop
addb
enter
add
add
lock
lcall
jne
call
push
xor
pop
call
mov
push
push
push
lea
push
push
lea
push
call
sti
popf
add
xlat
lods
f2xm1
add
testl
mov
jecxz
shll
ret
std
add
pusha
add
imul
push
mov
iret
mov
cmpsb
add
xchg
loopne
add
lret
jbe
add
lcall
pushf
and
ljmp
push
mov
inc
shr
push
sub
add
not
add
add
xor
sub
inc
rol
rol
pop
inc
pop
push
push
push
call
add
add
js
testb
in
jecxz
mov
pushf
mov
xchg
cmc
out
add
ljmp
lahf
xchg
add
add
sub
pop
pushl
call
push
push
lea
push
push
lea
push
push
push
push
push
lea
push
call
into
lods
add
mov
lcall
popf
movsb
pop
jnp
add
add
in
add
add
add
add
jmp
cli
add
add
sahf
stos
xlat
xacquire
ljmp
xorl
mov
cmpsb
fs
out
add
in
fcomps
add
push
ror
inc
pop
push
push
push
lea
push
push
call
iret
int3
mov
add
cwtl
rolb
jecxz
add
add
add
add
lret
call
mov
push
add
in
add
add
out
repnz
add
mov
ficoms
mov
fs
add
mov
scas
outsl
cli
sub
pop
push
push
lea
push
lea
push
lea
push
push
push
push
push
call
jns
mov
pushf
add
js
add
push
popf
add
out
add
jnp
pop
lahf
fwait
xchg
push
add
add
add
add
add
add
fisubrs
fistps
jne
push
push
dec
sub
push
xor
add
add
sub
pop
not
sub
pop
push
push
push
push
lea
push
push
push
push
push
lea
push
call
add
push
pop
mov
sahf
hlt
mov
aam
add
scas
add
jecxz
add
mov
cmpsb
ja
fwait
mov
xchg
add
int
pop
pop
add
lcall
push
push
push
push
push
push
push
push
lea
push
call
add
add
testl
add
pusha
add
jne
mov
push
ret
add
out
add
loope
imul
into
popl
add
nop
loopne
in
fdivr
lcall
shrb
mov
shrl
add
push
or
inc
add
shr
dec
not
sub
inc
sub
shr
pop
add
sub
inc
ror
pop
push
xor
shl
pop
pushl
call
push
lea
push
push
push
lea
push
call
out
cld
shlb
je
rolb
insb
mov
jge
cmc
jecxz
stos
push
add
imul
add
jmp
xchg
outsl
jne
jge
lods
lock
add
out
adc
call
in
in
lcall
call
push
push
ror
dec
push
push
pop
add
inc
rol
dec
sub
sub
rol
pop
shl
rol
lea
pop
push
sub
shl
pop
pushl
call
push
add
shl
pop
call
jmp
push
lea
rol
lea
pop
pushl
push
dec
shl
pop
mov
jmp
push
push
lea
not
push
sub
add
shr
sub
sub
dec
pop
inc
sub
pop
push
lea
add
sub
pop
pushl
call
push
add
pop
push
push
lea
push
push
push
call
jmp
push
shr
repnz
push
add
call
pop
cmpsl
add
mov
add
pop
push
add
testb
mov
add
add
push
add
cld
add
jno
data16
iret
aad
add
shll
sub
pop
call
push
push
lea
ror
inc
push
and
add
sub
xor
sub
sub
dec
lea
lea
pop
add
sub
shr
pop
push
not
pop
pushl
push
rol
shr
pop
call
push
push
sub
lea
pop
call
leave
push
rol
add
pop
add
pop
push
push
push
push
call
out
in
mov
outsl
mov
xchg
mov
mov
push
ret
add
in
mov
add
cld
add
call
push
add
mov
add
add
lds
add
in
leave
jns
add
add
add
lahf
roll
add
add
add
cmpsl
out
add
add
xlat
test
sub
pop
pop
push
lea
push
push
push
push
push
lea
push
call
fldenv
mov
add
jo
add
xchg
popf
les
add
add
add
add
jl
lods
jmp
mov
lahf
cmc
add
pushf
add
add
add
lahf
add
add
jge
pop
fildl
xchg
sarl
add
sahf
xchg
add
out
les
add
stc
add
lcall
push
push
lea
push
lea
push
lea
push
push
push
call
jnp
mov
add
fs
filds
test
add
jae
cld
testb
mov
push
add
xchg
mov
add
outsl
add
add
add
mov
add
add
rclb
sub
pop
inc
push
not
add
dec
add
pop
ret
push
push
push
lea
push
push
push
push
push
call
add
add
add
enter
add
add
jle
cmpsb
ret
mov
add
roll
fldl
pop
add
add
mov
add
add
push
lods
mov
add
lods
insb
fisubrs
add
shr
clc
loopne
add
mov
repnz
mov
in
loopne
leave
ret
push
push
push
lea
push
push
push
call
add
add
rolb
pop
jae
add
add
repnz
pop
std
add
cmc
mov
std
leave
mov
jo
mov
cmpb
in
xchg
rorb
mov
xchg
add
add
pop
jp
icebp
add
push
push
push
push
lea
push
push
push
lea
push
push
call
mov
mov
mov
add
hlt
add
jge
jmp
add
sti
rolb
mov
test
mov
mov
cmc
add
add
mov
add
lods
fadds
jo
push
sub
pop
mov
push
push
push
push
push
lea
push
lea
push
push
push
push
call
int3
lret
fadd
neg
add
mov
add
lock
add
add
rolb
out
cltd
add
pop
add
add
xlat
add
add
pop
cmpl
jne
mov
push
push
push
lea
push
lea
push
push
push
lea
push
call
ficomps
rorl
fcomps
mov
movsb
add
add
cmpsl
adcb
fiadds
add
addr16
stc
add
rolb
add
adcl
add
add
cmpsl
test
jae
sub
pop
jmp
push
dec
add
sub
pop
mov
push
inc
xor
pop
and
xor
push
shl
shr
xor
dec
pop
xor
push
add
lea
shr
pop
add
push
ror
pop
xor
push
ror
not
pop
dec
push
lea
add
pop
sub
jmp
push
push
call
add
mov
add
cmc
outsl
push
add
add
lods
jge
jmp
add
lods
fiadds
mov
pop
lahf
scas
xchg
cli
popa
mov
add
mov
lcall
add
add
push
sub
pop
pushl
pop
push
xor
pop
sub
push
push
push
lea
push
push
push
call
mov
cmc
add
add
add
add
add
addb
scas
pushf
addr16
jne
loope
xchg
add
xchg
cwtl
add
addb
rolb
orl
add
add
add
mov
sub
pop
cmp
jne
push
lea
push
push
lea
push
push
push
call
fiadds
test
in
int3
jbe
cmpsl
add
pop
jne
add
cmpsl
js
jge
add
test
push
mov
mov
call
je
fildl
add
rclb
sub
pop
mov
push
pop
lea
sub
push
lea
push
push
lea
push
push
push
push
push
push
call
add
add
xchg
cltd
add
mov
add
add
jecxz
add
add
add
mov
lret
lods
sahf
add
add
les
add
into
roll
jle
in
fdivr
lcall
or
push
push
push
push
call
xchg
push
addr16
add
stos
xchg
push
add
popf
add
add
imul
cmc
push
data16
mov
ja
cmc
stos
jne
add
jno
pusha
push
add
add
sub
pop
shr
add
push
pop
sub
push
push
push
call
add
jecxz
fdivr
fxch
in
sti
add
rcll
add
rcll
js
jno
lods
mov
add
fdivrl
leave
incb
mov
hlt
pop
pushl
push
push
call
jns
cli
in
loope
fldl
mov
add
add
rcrl
add
sahf
in
pop
fwait
xchg
stc
sti
mov
pop
hlt
hlt
push
rolb
mov
add
pop
jp
jne
jnp
mov
cmc
jp
xor
loope
add
ja
sub
pop
pop
push
add
pop
shr
and
push
push
call
add
push
pop
mov
into
movb
aad
outsl
add
stos
add
add
addr16
add
add
add
clc
pop
sub
push
push
push
push
push
lea
push
call
repnz
stos
push
clc
js
stc
push
mov
pop
jnp
add
lods
roll
add
movb
xchg
jae
lods
add
cmpsb
mov
add
add
add
gs
cmp
jne
leave
push
push
push
push
push
push
lea
push
push
call
ret
aad
mov
rorb
imul
pop
lods
add
test
add
insb
add
add
test
jno
add
jle
sub
pop
ret
push
push
push
lea
push
call
jge
add
in
imul
mov
pushw
testl
adcb
add
add
add
js
les
adc
fnstenv
jnp
rolb
mov
add
pop
mov
push
add
cmpsb
addr16
sahf
mov
sub
pop
mov
push
inc
pop
add
push
push
push
call
add
out
outsl
xchg
push
xchg
lret
mov
add
mov
scas
addl
push
test
testb
cmc
jp
stos
ror
movsb
jl
fwait
movsb
add
out
addb
push
push
push
lea
push
push
call
add
movsl
cwtl
outsl
add
add
lods
mov
bound
xchg
icebp
frstor
add
mov
pop
mov
jl
push
add
add
cld
lock
add
out
stos
pusha
add
push
mov
add
add
push
add
int3
add
sub
pop
push
push
add
pop
push
push
lea
push
push
lea
push
call
cltd
add
push
scas
add
add
rcrb
int
scas
jns
add
add
add
jno
scas
add
add
add
into
add
add
stos
lods
ja
add
nop
repnz
pop
push
push
push
push
push
call
xchg
add
movsb
add
test
std
fbld
add
jo
xchg
test
sbbb
loopne
sub
pop
push
mov
push
dec
not
not
add
pop
lea
push
lea
push
push
lea
push
call
add
ficompl
add
pushf
out
xchg
add
add
xchg
roll
popa
fiadds
frstor
mov
add
sahf
movsl
stc
pop
add
jnp
add
test
cli
jae
out
leave
shr
add
push
cltd
clc
add
scas
mov
add
loop
icebp
jnp
add
add
jmp
add
sub
pop
sub
mov
push
xor
add
sub
pop
shr
push
sub
inc
pop
add
mov
push
rol
pop
add
mov
push
lea
pop
add
push
lea
push
lea
push
push
lea
push
push
push
lea
push
push
lea
push
call
scas
add
mov
add
xchg
xchg
add
pop
add
add
insb
add
out
fidivrs
add
lcall
notb
cld
dec
pop
mov
push
sub
add
pop
and
rol
push
push
push
push
push
push
push
lea
push
push
push
call
cmpsb
lret
cld
add
pop
mov
mov
add
add
mov
jno
xchg
notb
add
add
cmpsl
pushf
in
push
mov
add
flds
scas
mov
add
lcall
rolb
add
vaddsubps
enter
lds
push
push
lea
push
call
loope
mov
mov
les
pop
add
rcrl
hlt
int
jmp
rolb
add
add
ret
add
add
add
push
stos
ja
mov
add
add
fldl
lcall
cmp
jne
add
push
inc
lea
add
lea
pop
cmp
je
push
inc
add
sub
pop
add
push
not
inc
rol
pop
cmpl
jne
push
push
push
lea
push
lea
push
lea
push
push
push
push
push
call
mov
add
int
xchg
popa
movsl
rolb
movl
in
aam
add
mov
add
mov
sub
pop
xor
pop
push
add
ror
pop
pop
push
push
push
push
lea
push
call
jae
add
add
filds
add
scas
add
add
test
add
cltd
xchg
sub
add
shlb
ljmp
pop
add
add
stc
xchg
movsl
add
lcall
push
lea
sub
sub
ror
pop
pop
pop
push
lea
sub
xor
pop
leave
push
lea
push
call
add
jns
jbe
add
push
sbb
add
add
add
add
xchg
jmp
lds
sahf
mov
add
add
lcall
or
push
not
ror
pop
mov
add
push
shl
rol
inc
pop
mov
push
push
push
push
push
call
jb
add
fistps
add
ja
mov
mov
add
in
roll
fwait
movb
cld
mov
push
sub
pop
push
push
sub
dec
pop
mulw
push
add
pop
pop
push
push
push
push
push
push
push
push
lea
push
lea
push
call
lret
xchg
lods
cmpsl
add
add
data16
cld
add
add
lods
lcall
jae
mov
add
shl
pop
fistps
ja
cmpsb
add
add
add
ljmp
in
fcomps
enter
push
lea
not
shl
dec
pop
push
push
push
push
push
push
push
lea
push
call
enter
jb
add
add
js
andb
add
popf
out
add
push
cld
popa
push
pusha
and
mov
cmc
jo
js
add
add
add
rorb
test
cwtl
mov
push
add
sub
pop
call
push
lea
push
push
push
push
push
lea
push
push
push
push
call
add
scas
arpl
add
add
add
aad
add
std
out
popl
push
pop
lods
add
pop
test
xor
loopne
add
pop
add
add
call
add
add
ja
rol
add
add
add
cld
ljmp
cli
add
add
add
sub
pop
xor
push
lea
not
add
pop
pop
push
rol
not
pop
pop
push
pop
pop
push
inc
sub
not
xor
pop
pop
pop
push
sub
pop
leave
push
pop
ret
push
push
push
push
push
call
cltd
fldcw
add
sarb
into
mov
push
add
add
xchg
clc
pop
xchg
add
in
lcall
push
xor
pop
mov
push
push
lea
push
call
popl
add
in
stos
mov
fwait
add
add
out
popf
add
out
js
mov
push
xchg
add
add
ljmp
ret
jl
xchg
lds
add
add
pop
addb
add
push
push
push
push
lea
push
lea
push
call
add
xchg
movl
out
pop
nop
add
mov
add
push
fst
xchg
stos
add
in
out
mov
add
repnz
test
mov
call
ror
pop
push
push
lea
push
lea
push
push
push
call
add
add
mov
add
in
push
cmc
rolb
add
imul
filds
mov
hlt
fwait
push
call
fwait
lea
jmp
add
add
leave
movb
pop
push
push
push
push
call
insb
popa
add
ljmp
iret
clc
add
mov
cld
int3
divl
fmulp
add
mov
add
add
roll
mov
lds
xchg
pop
add
add
pop
add
out
jmp
in
hlt
lcall
pop
or
clc
pop
push
push
dec
not
shr
pop
pop
lea
push
push
push
push
push
call
clc
add
fadds
add
add
add
popa
mov
mov
lea
jo
hlt
add
movsl
push
add
pusha
jmp
leave
cld
in
fldcw
sub
pop
sub
mov
push
push
push
lea
push
push
push
push
call
cli
add
add
add
pop
mov
iret
add
lods
popl
mov
fmulp
push
test
add
add
leave
add
sti
jmp
shr
push
push
push
push
push
push
call
add
nop
pop
add
loope
push
jmp
add
add
xchg
xchg
jmp
js
jne
test
lds
mov
add
add
cmpsl
xchg
pop
aam
repnz
push
mov
xlat
add
scas
jbe
cwtl
jge
add
pusha
orl
pop
out
add
int
in
call
add
push
inc
inc
pop
mov
add
push
push
push
push
push
push
push
push
call
add
mov
add
xorl
mov
rolb
add
add
add
mov
repnz
lret
add
add
add
add
lods
add
pusha
add
pop
out
add
add
lret
pop
jo
add
lods
add
lret
imul
lcall
jae
push
add
sub
shr
shr
pop
popl
push
lea
push
push
push
push
lea
push
call
test
int3
add
add
mov
add
add
xchg
add
nop
push
xchg
rol
fstpl
fcmovnu
add
add
aad
add
sub
pop
mov
push
sub
shr
dec
pop
add
push
push
call
push
add
lock
add
rcll
int
jmp
faddl
faddl
add
add
add
add
stc
add
mov
add
repnz
lea
sub
pop
xor
push
sub
lea
pop
lea
push
lea
rol
dec
pop
mov
add
push
push
push
push
push
push
push
push
push
lea
push
call
add
fucomip
add
flds
repnz
add
add
mov
add
add
add
int
jns
jb
xchg
rolb
add
xor
rol
push
sub
dec
pop
nop
push
lea
push
call
add
lock
add
jmp
mov
add
pop
je
stos
lahf
add
add
mov
mov
push
lods
add
add
testb
push
push
push
push
push
push
push
lea
push
call
std
mov
mov
mov
jmp
add
jl
add
pop
mov
add
add
popf
add
std
xchg
add
add
add
add
add
ljmp
sub
pop
xor
push
push
call
add
add
add
loopne
add
add
xchg
pop
mov
add
fsubp
xchg
mov
jmp
jecxz
cltd
add
call
push
add
sahf
add
add
add
je
xchg
mov
xchg
les
in
stos
test
add
pushf
outsl
popf
sub
pop
nop
push
add
sub
sub
sub
pop
nop
inc
push
inc
pop
nop
nop
push
push
push
call
add
je
testl
data16
scas
lods
pushf
roll
add
mov
add
add
add
roll
rolb
add
push
add
loop
add
mov
add
add
add
add
xchg
in
roll
stos
add
add
fistpll
add
add
add
in
hlt
lcall
cmp
jne
add
push
push
push
push
push
push
call
in
sub
test
iret
jl
je
mov
sarl
add
mov
mov
subb
push
icebp
mov
add
std
jmp
addb
mov
add
add
mov
mov
jns
add
nop
push
push
call
push
push
pop
loope
out
int
add
jmp
in
rcl
mov
cltd
out
bound
popa
xchg
add
lods
add
add
add
scas
loopne
ficomps
xchg
cmc
pop
push
xchg
fisubs
gs
mov
mov
sub
pop
cmp
je
nop
push
sub
pop
nop
push
shl
inc
shr
pop
inc
nop
push
push
push
lea
push
lea
push
push
push
push
call
mov
nop
mov
aad
jp
push
fiaddl
pop
xlat
mov
bound
mov
call
fwait
enter
out
jnp
fldl
mov
popa
jno
add
add
testb
xchg
add
repnz
add
mov
add
mov
jb
sub
pop
nop
cmp
jb
push
push
push
push
push
push
lea
push
push
push
push
call
add
xlat
add
add
add
add
add
cmpl
cmpsl
pop
push
cld
add
add
cwtl
add
ja
add
mov
xor
push
add
dec
pop
jmp
push
lea
push
push
push
push
lea
push
lea
push
push
call
pop
add
push
cwtl
mov
pushf
mov
add
add
jo
std
sbbb
in
mov
xchg
lcall
push
and
lea
push
push
push
push
lea
push
push
push
push
lea
push
call
stos
lea
add
pop
icebp
pop
out
add
jns
xchg
add
add
xchg
jl
sahf
out
add
fwait
add
jno
shrl
test
sub
pop
add
push
push
lea
push
push
push
push
push
lea
push
call
add
push
ljmp
fucomip
outsl
iret
mov
add
test
add
stos
add
imulb
int
add
sarl
pop
add
mov
lock
add
mov
lcall
mov
jb
inc
sbb
push
lea
push
push
push
lea
push
lea
push
lea
push
call
cld
add
mov
flds
add
jmp
rcll
fldl
in
lahf
imul
frstor
imul
add
out
add
lcall
rorl
pop
xor
push
lea
push
push
push
push
push
push
push
lea
push
call
add
add
mov
add
lcall
xchg
mov
mov
add
in
push
loop
push
mov
jmp
add
add
sahf
into
out
lcall
pop
xor
push
push
lea
push
lea
push
push
lea
push
push
push
push
call
add
add
add
cld
add
notl
lea
pushf
add
add
cmc
out
push
mov
jbe
popf
pop
add
xchg
add
add
sahf
mov
movsb
mov
add
addb
cwtl
ret
fistps
add
shl
push
lea
push
lea
push
push
lea
push
push
push
push
call
fwait
loope
add
mov
add
add
scas
out
xchg
jl
test
xchg
int3
lock
lds
imul
cmpsl
xchg
mov
add
out
mov
add
fmulp
leave
add
add
add
add
add
in
loopne
lcall
dec
nop
add
xchg
lcall
call
movsb
mov
add
add
add
lret
subb
xchg
add
add
loope
clc
add
lcall
add
add
add
loope
push
sub
shl
pop
xor
shl
push
shl
pop
xor
push
push
lea
push
push
push
push
push
push
lea
push
push
call
add
in
rolb
mov
out
lcall
add
mov
pop
add
xorb
add
cmc
add
cli
add
mov
add
call
xchg
add
xlat
scas
sub
pop
mov
push
rol
sub
pop
add
push
add
add
pop
pop
push
sub
pop
pop
push
not
add
add
add
pop
pop
push
ror
shr
pop
pop
push
not
xor
xor
pop
leave
push
lea
ror
dec
sub
pop
ret
push
push
lea
push
call
pop
sti
in
add
add
add
xchg
add
loopne
in
stc
xchg
add
test
jne
add
mov
imul
int3
jge
add
test
movsb
xlat
lock
rolb
add
xlat
mov
add
mov
ljmp
push
shl
pop
push
push
push
call
sub
add
mov
aam
add
add
in
xchg
push
mov
ja
add
pop
addl
add
out
push
rclb
add
add
add
rolb
lock
jmp
in
clc
lcall
push
sub
shl
dec
shr
pop
push
push
lea
push
lea
push
push
push
call
stos
mov
add
cli
rolb
add
lea
xchg
scas
add
push
rol
mov
rcll
add
add
add
mov
mov
nop
add
mov
add
add
add
sub
pop
push
mov
push
sub
not
xor
pop
mov
mov
push
push
lea
push
push
push
push
lea
push
push
push
call
pusha
add
jnp
add
add
icebp
add
lea
subb
mov
sbbb
add
je
in
add
xchg
jp
popa
fwait
add
add
mov
ja
add
lock
lock
sub
pop
test
je
push
lea
push
lea
push
push
push
push
push
lea
push
push
call
pop
add
add
add
add
popa
pop
lret
hlt
add
sar
mov
add
cmpsb
add
addb
mov
add
xchg
ficoml
add
add
loop
jge
js
mov
jmp
stos
mov
loop
mov
add
cmc
add
movsb
add
jmp
in
fdivr
lcall
jno
push
inc
xor
pop
test
je
push
lea
push
push
push
push
push
push
push
push
call
int
mov
sbbb
jmp
add
add
jmp
lret
in
rol
add
lock
add
movsl
lock
js
loope
movl
fdivr
lcall
notl
insb
ljmp
push
call
in
fbld
popa
jl
add
rcrl
add
push
add
add
add
mov
movsl
add
mov
fistpll
add
cwtl
push
add
rcr
jnp
add
mov
mov
aad
fiaddl
fdiv
push
add
stos
add
sub
pop
mov
mov
push
push
push
push
push
push
push
push
lea
push
call
imul
jle
roll
xchg
jns
into
jbe
mov
add
mov
data16
lret
jecxz
lods
pop
jne
in
jp
add
push
mov
jp
add
add
cltd
lods
push
jae
jne
sub
pop
inc
push
xor
pop
cmp
je
push
lea
push
push
push
push
push
push
push
push
push
call
out
add
js
add
add
cli
lods
add
ret
lret
push
imul
add
push
push
in
cmpsl
shrb
add
jecxz
pusha
mov
add
lods
mov
mov
push
leave
jmp
fistl
add
addr16
jae
sub
pop
test
je
mov
push
lea
add
pop
inc
push
shr
pop
cmp
je
push
push
lea
push
push
lea
push
push
lea
push
call
add
xchg
out
add
add
mov
notb
push
add
jbe
lret
jns
add
call
add
jo
arpl
scas
mov
add
add
rorb
jge
call
add
cli
test
bound
push
lea
push
lea
push
call
mov
frstor
add
add
pop
pop
add
rcr
push
add
add
add
pushf
ljmp
add
add
add
hlt
add
add
jns
add
jns
jns
nop
fldl
nop
add
add
roll
add
add
roll
testb
sub
pop
xor
push
shr
xor
rol
pop
pop
push
lea
not
lea
pop
pop
pop
push
push
push
push
push
push
call
add
add
ret
fwait
jns
jmp
xchg
add
xchg
jb
xchg
rcrl
xchg
add
push
mov
pusha
push
add
addl
lea
jae
cld
lcall
lcall
push
add
add
pop
leave
push
push
lea
push
push
call
add
add
shr
std
pop
xchg
mov
add
pop
out
rolb
add
jmp
mov
add
add
xlat
popa
pop
pop
loop
leave
mov
repnz
ret
shrl
ret
push
lea
push
push
lea
push
push
push
call
jo
lea
cmc
rcr
push
add
pushf
data16
stos
xchg
jecxz
movb
add
add
add
add
add
mov
gs
xchg
add
pop
push
add
pushf
jecxz
add
add
add
add
ljmp
jmp
push
cmpsb
add
lcall
push
push
push
push
push
push
push
push
push
push
push
call
add
out
jl
push
mov
ljmp
int3
call
repnz
popf
xchg
add
and
jno
add
icebp
add
jecxz
add
add
mov
mov
jl
in
fcomps
push
push
lea
push
push
push
push
push
push
push
call
fimull
jnp
jnp
jp
lods
add
add
in
out
xchg
add
call
add
lret
add
add
je
loope
fisubl
add
aam
push
add
add
add
add
lods
add
fdivr
lcall
lock
push
ror
sub
pop
lea
mov
push
push
push
push
call
jne
add
int
add
mov
pop
push
fldl
ljmp
xchg
leave
add
cmpsb
mov
add
movl
in
add
add
add
cmc
add
add
scas
jmp
hlt
add
test
add
cmpsb
sub
pop
test
je
mov
push
push
push
push
call
add
add
imul
add
in
mov
pushf
pushf
bound
xchg
xchg
aad
mov
add
mov
in
lea
mov
iret
lock
popl
jb
gs
add
jmp
cmpsb
add
test
add
pop
add
push
lea
shr
sub
dec
pop
cmp
jne
mov
push
push
push
push
push
push
lea
push
push
lea
push
call
push
add
add
into
add
add
lcall
add
nop
add
add
add
lds
lcall
add
mov
add
iret
add
sub
pop
test
je
mov
push
push
push
push
push
push
lea
push
push
push
push
call
add
cmc
mov
add
jecxz
stos
add
add
add
mov
jp
jge
add
add
add
xchg
pusha
add
add
iret
pop
fidivrl
xorl
testb
in
fcomps
roll
loopne
test
call
push
push
push
push
call
ficoms
add
add
iret
add
pop
loopne
add
jae
add
testb
scas
test
jmp
fiaddl
add
popa
loope
add
cli
stos
mov
in
mov
add
add
add
test
xchg
add
add
lods
lret
je
add
cli
cwtl
sub
pop
jmp
xor
push
push
push
push
push
push
push
push
push
call
xchg
pop
mov
leave
mov
movl
pop
add
movb
xchg
out
add
add
push
add
add
add
cwtl
sti
in
pushf
jmp
add
sti
popf
add
ffreep
pop
jae
add
in
fcompl
push
rol
pop
pop
pop
push
ror
dec
pop
pop
push
dec
pop
leave
push
lea
push
push
push
push
push
push
call
add
cmc
add
testl
test
les
in
fsub
imul
jmp
mov
pop
xchg
ljmp
mov
add
addr16
pop
ret
push
inc
dec
pop
lea
push
lea
sub
pop
pop
push
push
push
push
push
call
in
add
add
outsl
imul
in
add
cmc
add
add
loop
jnp
lcall
jbe
push
add
pop
add
add
add
jge
jno
add
in
in
lcall
pop
push
push
push
push
push
push
lea
push
push
lea
push
call
lret
mov
xchg
incb
add
les
test
andb
xchg
add
out
add
add
add
mov
add
mov
pop
pop
leave
push
push
call
push
cwtl
add
add
lods
push
jae
xchg
mov
mov
push
add
push
add
push
xchg
int3
mov
add
mov
addl
aad
mov
out
mov
jl
push
enter
in
clc
pop
ret
push
push
push
call
repnz
fbstp
int3
stos
sahf
insb
xchg
add
testl
jmp
add
add
add
add
jnp
loopne
add
add
lret
add
push
add
test
xchg
js
add
jo
add
sub
pop
mov
push
push
push
push
call
add
in
add
mov
add
add
cwtl
call
insb
fwait
pushf
push
fbld
push
mov
testb
shlb
stos
mov
loopne
add
mov
cltd
div
int
add
nop
test
popa
jnp
in
lock
pop
pop
push
push
push
push
push
push
push
push
lea
push
lea
push
call
add
mov
ljmp
std
into
push
fistpll
lock
xchg
add
add
add
add
mov
out
add
mov
add
pop
mov
add
add
push
ljmp
fisttps
fdivr
lcall
push
xor
add
pop
pop
leave
push
ror
dec
pop
ret
xor
cmp
and
cmp
xor
adc
and
adc
dec
cmp
stos
add
cmp
xor
adc
jb
adc
mov
add
sub
xchg
test
lret
inc
mov
add
sub
cwtl
sbb
xchg
cwtl
or
mov
jns
xor
nop
jne
push
jecxz
mov
sahf
aaa
in
jbe
cmp
mov
inc
xor
lret
pop
ror
int3
ljmp
outsb
enter
add
jl
insb
fildl
mov
cwtl
sahf
add
dec
jp
ss
hlt
jecxz
fsts
imulb
mov
dec
and
push
push
shlb
xchg
ljmp
or
pusha
jb
jl
xlat
jne
inc
lock
mov
pop
jne
mov
test
inc
xchg
push
inc
jg
mov
push
mov
jns
xchg
les
add
jnp
mov
cmp
adc
jb
or
idivl
push
adc
aaa
dec
inc
pop
mov
loop
mov
pop
jmp
mov
lods
mov
and
gs
or
add
jmp
lods
js
jns
sbb
pushf
xchg
pushl
movb
cli
pop
mov
arpl
xchg
jge
inc
subb
xchg
movlps
das
xor
mov
enter
sub
sub
fstps
dec
daa
in
push
notb
dec
popa
daa
pop
cmp
sbb
fwait
aaa
std
mov
scas
push
test
punpckhbw
sub
icebp
xor
fldt
jo
xlat
xlat
jecxz
bound
cmp
enter
in
cmp
pop
dec
dec
out
add
cmpsb
inc
inc
lahf
inc
dec
mov
cmp
sub
sbb
cwtl
test
inc
aad
sub
sbb
mov
push
gs
in
jo
sahf
push
insl
jne
incb
or
daa
insl
in
add
push
jge
lret
cmpsl
jbe
mov
je
sbb
ja
dec
xlat
xor
int3
jmp
xor
mov
movsb
cltd
stos
aad
and
mov
bound
shl
and
push
push
push
add
out
pop
sarb
cmp
int
adc
mov
sbb
jnp
lret
out
arpl
mov
or
xor
test
mov
repz
pushf
sub
dec
fbstp
pushf
movsl
cmpsl
mov
mov
aam
cmp
les
cmp
push
outsb
add
movsl
pop
adc
push
jl
addr16
mov
ret
out
mov
mov
or
nop
xchg
jl
call
sahf
ret
jmp
cmp
cmp
mov
out
in
add
mov
fstl
cmp
and
mov
mov
jbe
xchg
xchg
test
loop
test
adc
push
pop
fcmovnu
loopne
xchg
push
fistpl
movsb
and
out
mov
jp
mov
pop
stos
sahf
js
adc
leave
sbb
push
cmp
add
outsl
test
sub
mov
icebp
aas
or
sbb
mov
or
lods
cmp
xchg
daa
mov
xchg
fs
xchg
lock
cmp
fildl
or
lcall
fdivs
sbb
sbb
into
arpl
cmpsb
pop
inc
sbb
adc
sbb
xlat
adc
pop
jle
sbb
add
sub
mov
clc
mov
call
inc
add
xchg
push
mov
idiv
call
arpl
mov
rcrl
jae
mov
mov
mov
mov
pop
subl
sub
push
inc
fstl
andb
pop
dec
add
cwtl
inc
rorl
dec
test
mov
imul
adc
dec
cli
push
inc
icebp
add
andb
jge
cmpsl
pop
insb
and
cs
adc
sahf
add
test
jge
aad
dec
stos
lahf
lods
rcrb
inc
xor
out
inc
ss
aaa
and
inc
fs
shrb
sbb
fneni(8087
sarb
push
inc
push
repz
xchg
jb
subb
hlt
loop
sub
rcrb
mov
dec
push
cmp
stos
scas
jns
add
popf
sub
sub
sub
mov
add
mov
or
push
xchg
sbb
sub
loopne
mov
sbb
mov
into
sbb
push
fsubr
sbb
push
mov
mov
add
dec
mov
aam
test
push
mov
add
or
in
shrb
faddl
addl
mov
mov
lods
fnstenv
sbb
ljmp
jnp
addr16
sbb
and
lock
sbb
popf
cmpsb
and
dec
nop
jl
pushaw
jl
jnp
mov
sub
call
ss
popa
adc
pop
push
push
dec
or
xchg
shlb
lea
inc
dec
and
movsl
lds
es
xor
lret
xchg
popf
pop
pop
cltd
movsb
push
je
cwtl
add
aam
xor
shlb
in
xor
sahf
mov
pusha
sub
jo
movsl
enter
testb
rcll
mov
xor
ret
xlat
fdivs
add
jecxz
push
outsb
sbb
dec
xor
rorb
or
xchg
and
insl
cltd
idivl
and
in
add
jmp
repnz
repz
imul
hlt
ret
das
imul
cmp
jmp
push
cltd
pop
mov
shl
ljmp
xchg
sub
aas
push
nop
bound
loope
lds
in
mov
sarb
test
adc
jle
xor
outsl
jno
push
sti
rcrl
inc
sub
bound
mov
das
scas
pop
pop
cli
jp
xor
mov
enter
loop
mov
in
xchg
pop
movsl
fwait
push
pusha
push
xor
push
test
lock
clc
inc
inc
push
jp
mov
inc
cmpl
arpl
mov
imul
jae
sub
jle
cmp
sbb
pop
mov
stos
xorb
mov
movsb
push
sti
or
ljmp
vpaddsb
pusha
push
aaa
sbb
out
lds
or
pop
add
scas
insb
loop
jae
in
jge
push
mov
mov
cltd
arpl
push
out
sbb
xchg
cld
and
lods
in
es
jecxz
push
fisubs
in
add
loope
repnz
int3
jns
mov
enter
out
xchg
in
sbb
sub
push
xor
pop
adcb
cltd
push
ds
loop
cmp
jbe
jg
outsb
cmpsl
test
insl
push
arpl
and
popf
mov
mov
dec
pop
pop
test
xchg
push
out
dec
pusha
and
jns
add
movsb
ret
and
dec
sahf
leave
xchg
push
lahf
lret
fcoms
mov
out
fidivrs
or
jne
enter
push
push
inc
out
xor
fs
idiv
sahf
mov
gs
cmp
lods
mov
daa
sbb
pusha
xor
cmp
push
popa
jnp
and
xlat
add
fdiv
icebp
movsl
ss
shrl
test
inc
iret
push
adc
xor
or
ret
and
aaa
les
rcr
adc
jle
push
leave
aaa
mov
cmpsl
aas
sub
xchg
mov
popf
sub
js
fldt
fucomp
mov
pop
aaa
dec
mov
bound
mov
inc
jb
outsl
push
jae
int
out
push
fnstsw
mov
in
cs
mov
bound
dec
popa
gs
mov
adc
push
insl
rolb
gs
adcl
sahf
pop
scas
movb
push
cli
dec
jae
enter
lcall
push
call
fwait
das
jbe
cmp
and
sbb
imul
jo
adc
out
add
out
popa
adc
leave
adc
cwtl
xchg
xor
jg
lret
sbb
adc
xorb
jecxz
aad
add
movsl
sub
scas
xchg
rol
stos
cmc
xchg
cmp
cmp
xchg
cmp
mov
shr
aad
xchg
aas
mov
pop
loop
lahf
push
es
mov
push
sbb
and
xchg
lds
or
jle
lcall
ljmp
cmp
sub
mov
je
adc
repz
cmp
ja
sbb
testl
insb
mov
repz
push
mov
shlb
mov
mov
mov
dec
adc
jo
xchg
stos
scas
mov
clc
lcall
loop
iret
cmpb
cmp
pop
sbbb
mov
lahf
dec
lds
addr16
xchg
icebp
mov
loope
add
sub
xchg
adc
adc
fldcw
cltd
add
cmp
btc
inc
mov
mov
aad
xchg
inc
xor
lret
loop
jo
mov
das
ja
mov
cmp
xchg
sbb
mov
inc
popf
xor
add
lcall
pop
cmp
dec
sub
or
xchg
clc
push
dec
es
sbb
fistpl
mov
push
add
xlat
in
out
test
push
xor
jns
ljmp
mov
and
in
cld
idivl
mov
fcomps
xchg
lret
sub
jle
ljmp
mov
jae
movsl
je
inc
in
fwait
sbb
loopne
cmp
sub
aad
push
in
dec
icebp
jbe
jb
mov
test
jle
sahf
push
xchg
loopne
xchg
push
add
push
cwtl
dec
sbb
test
mov
adc
cmp
rcll
cmp
movsb
lods
rcpps
inc
scas
cmp
scas
jmp
aad
ja
adc
mov
xorb
add
jge
sbb
pushf
jno
cld
push
xor
pop
jg
xchg
or
mov
jo
push
sbb
xor
ftst
pop
mov
xchg
mov
adc
mov
aas
xchg
push
inc
in
dec
test
ret
std
xchg
daa
add
jb
pop
stos
sub
inc
push
or
arpl
push
test
jp
mov
test
jae
jle
out
and
mov
fimull
inc
mov
shrl
je
mov
and
mov
dec
notb
movsl
hlt
xchg
cwtl
adc
mov
loope
lds
and
cmp
das
mov
ss
dec
outsl
fisubrs
pop
xchg
sarl
inc
lods
icebp
neg
xchg
test
mov
in
push
push
outsb
imull
jbe
or
push
div
sub
movsl
xor
in
add
sub
xchg
push
cltd
nop
jecxz
push
inc
fdivrl
mov
xor
inc
sahf
fs
cmp
xchg
add
out
dec
dec
jbe
repz
pop
mov
sbb
aad
stos
push
push
mov
loop
orl
add
add
xor
cli
push
rorb
das
fisubl
inc
ds
and
jno
getsec
shll
insb
das
sub
pop
cld
inc
xor
loopne
xor
mov
xchg
mov
lea
mov
loopne
addr16
sbb
lea
cmp
pop
sub
insb
add
mov
dec
jns
scas
mov
xchg
out
pop
sub
jmp
adc
mov
aam
clc
cmp
mov
cmpsl
mov
push
ds
imul
mov
out
sub
and
sub
sahf
pop
add
jnp
mov
loopne
mov
mov
les
inc
shr
in
mov
mov
fistpll
dec
jp
jo
sbb
adcb
cli
ja
push
lret
cwtl
xchg
jbe
enter
outsb
fcompl
dec
mov
or
fistps
mov
dec
dec
cmpb
sub
insb
testb
push
push
lret
std
push
and
jno
enter
jae
in
push
negb
in
daa
pop
outsl
sub
out
dec
rorb
insl
jmp
mov
adcl
lods
test
lds
xor
out
cld
ds
inc
push
dec
repnz
aam
add
aas
pop
insl
inc
outsb
addr16
andb
f2xm1
mov
icebp
lods
push
insb
rorb
scas
pop
jb
lret
sbb
ret
inc
jno
adc
sub
cmc
dec
mov
fmull
sbb
out
jmp
push
xchg
in
push
mov
xchg
inc
mov
cmc
scas
incb
push
dec
movq
clc
push
and
jae
sub
lds
and
jnp
insl
ss
es
cmp
fsincos
inc
push
out
push
js
fsubrs
stos
dec
jl
sahf
lahf
pop
mov
ss
pop
in
pop
pusha
push
out
sahf
test
pop
test
std
add
sub
xor
sbb
sbb
push
cld
lds
jb
sbb
out
jno
rcrb
push
sub
pop
ljmp
push
sti
lods
xchg
mov
imul
mov
and
jno
xchg
and
cs
add
cmp
mov
loope
or
dec
add
sbb
loopne
mul
pop
nop
lds
jle
pop
aaa
in
imul
xchg
inc
lds
sub
xor
sub
push
cwtl
push
aas
shr
dec
data16
fisttpl
and
decl
sbb
inc
lcall
loope
sbb
das
pop
movsb
mov
xlat
xchg
sub
push
xor
pop
movsl
imul
es
jg
sbb
fistpll
jecxz
mov
xor
adc
pusha
into
pop
aas
adc
dec
jne
ds
loop
inc
xor
inc
pop
dec
data16
outsl
jbe
xchg
mov
jg
sbb
jae
or
cld
or
push
sbb
orb
jmp
in
int3
adc
loop
sbb
push
pop
cltd
repz
in
adc
inc
arpl
push
inc
mov
xchg
aad
mov
ds
xor
pop
fdivs
hlt
mov
arpl
push
das
dec
cmp
inc
iret
pop
jg
push
lcall
mov
lahf
push
xchg
repz
push
aam
test
mov
aam
mov
outsl
imul
mov
push
test
mov
push
aam
sbb
fsubrl
out
mov
cld
test
inc
inc
push
movsl
adc
add
sbb
or
fnsave
mov
cmpsb
jb
in
or
lcall
test
xchg
jns
repz
fnstenv
cld
push
into
test
aam
add
daa
addb
jb
or
jns
xchg
ret
test
jmp
jo
jo
cs
sbbb
cmp
shlb
call
mov
lret
mov
xor
mov
sbb
rorb
insb
pop
test
cmpsb
sahf
ret
cmp
mov
adc
ja
fstpl
hlt
push
les
adcl
mov
mov
jmp
adc
jge
jne
jecxz
jmp
loop
adc
inc
add
ret
adc
xchg
mov
stos
adc
mov
mov
push
sub
sbb
loop
inc
xchg
mov
insl
test
mov
aas
mov
popa
fsub
jne
jmp
jecxz
fsubrs
mov
enter
and
pusha
add
push
or
enter
sub
mov
wrmsr
ja
mov
pop
jno
lock
xor
in
dec
fcmovb
lea
fs
pop
xchg
outsb
dec
into
pop
les
pop
push
mov
mov
ja
lods
mov
and
or
jnp
push
fbld
sub
jmp
outsb
and
nop
icebp
jg
shrb
xor
push
sub
inc
mov
scas
push
nop
push
sbb
loop
hlt
xchg
fs
into
mov
pop
sarl
int3
jp
pop
fisubrs
decb
or
cmp
cld
dec
and
jae
xchg
push
xchg
pop
lock
inc
push
lcall
test
insb
fdivrp
aad
rclb
jae
mov
mov
inc
xchg
jmp
mov
mov
ret
mov
add
das
mov
dec
mov
fists
dec
insl
mov
cmpsl
insb
lcall
xor
cmc
and
push
fcomps
sbb
scas
ret
repnz
mov
jp
fwait
rorl
imul
push
sbb
xchg
insl
ss
pop
push
jns
xor
sahf
mov
pop
pop
das
jae
mov
fldl
loop
out
sub
sub
sbb
mov
mov
jl
movsl
pusha
sbb
xchg
or
push
in
loope
xchg
push
ss
out
lods
cwtl
jo
loop
inc
aas
mov
shl
pusha
test
mov
and
cmp
adc
sbb
xchg
dec
push
out
sub
jo
cld
cmp
pop
insl
cmp
pop
cmp
sub
xlat
sbb
fcmovnu
nop
cmpsb
or
icebp
aam
subb
push
pop
xchg
lea
bound
inc
mov
pop
ja
lahf
or
sub
mov
out
pop
aad
popf
sbb
mov
nop
cwtl
inc
cwtl
lods
sub
icebp
mov
add
fildll
pop
cmp
pop
lea
iret
push
mov
js
xchg
xchg
mov
clc
sbbl
mov
cli
lds
mov
addr16
and
test
inc
rorb
gs
push
dec
adc
and
data16
sbb
fldlg2
pop
pop
cmp
outsl
mov
and
and
adc
jecxz
xor
inc
dec
dec
arpl
out
loopne
lds
pop
push
ss
xchg
je
pop
loop
les
mov
cwtl
addr16
sahf
es
aad
xor
inc
sbb
push
jne
movsb
cld
inc
enter
popa
iret
cs
hlt
movsl
jg
push
xchg
pop
pmulhw
cwtl
xchg
out
inc
mov
icebp
and
xor
mov
xor
into
jecxz
pushf
and
scas
mov
jg
xor
xchg
in
pop
ret
ja
push
fistpll
jmp
adc
sti
sbb
or
aad
sbb
or
add
push
push
mov
mov
shlb
notl
xor
adc
mov
enter
outsb
pop
adc
aam
icebp
mov
dec
inc
mov
ss
aaa
insb
jg
mov
mov
sti
or
into
in
enter
sbb
xlat
pusha
mov
iret
loopne
add
inc
lods
dec
movsb
adc
insl
insb
icebp
mov
out
test
shl
mov
pop
cmp
nop
les
xchg
xlat
rcl
adc
call
cmpsb
sbb
js,pn
aam
lods
nop
push
and
in
xchg
lret
dec
sbb
psrlw
pop
pop
outsb
sub
fildl
test
dec
jle
mov
jl
lods
hlt
xor
test
insl
push
inc
aad
sub
xchg
das
and
loopne
jle
xor
jo
jo
out
das
rolb
push
mov
shlb
mov
jb
jmp
cmp
js
add
ljmp
mov
das
pop
cmpb
push
int
das
push
test
repz
jne
mov
stos
push
adc
stos
and
inc
js
dec
lahf
cli
das
push
out
jno
je
inc
lods
movsb
mov
xchg
pop
addr16
sbb
mov
add
jl
sbb
inc
xchg
jae
clc
pop
push
cltd
rclb
inc
scas
test
mov
cli
xchg
inc
mov
fsubl
and
out
ficomps
popf
jae
or
mov
pop
sbb
daa
movb
cld
ds
arpl
lea
mulb
dec
lret
mov
pop
cwtd
insl
test
mov
mov
xchg
mov
scas
subb
mov
pop
push
stos
sarb
ret
adc
cmp
sbb
dec
rcll
pop
jbe
lret
push
mov
sub
mov
aad
out
jge
mov
aaa
or
out
xor
lods
out
push
out
popf
or
mov
loop
icebp
push
cmpsb
les
mov
mov
out
rol
xor
sub
fabs
xlat
inc
jmp
int3
loopne
jl
shlb
mov
lcall
push
lds
cs
sub
aam
jb
hlt
sbb
dec
xor
add
sub
sbb
rorb
ja
pop
test
insl
cmp
mov
xchg
stos
or
cmpsl
cmpsl
fs
dec
aas
mov
test
inc
cltd
nop
sbb
nop
mov
sub
leave
xchg
mov
inc
mov
daa
imul
jne
stos
push
pop
sub
icebp
es
xchg
mov
mov
mull
or
xor
loop
lcall
xchg
mov
mov
jl
pop
cwtl
sub
in
dec
in
adc
cmc
pop
in
sub
inc
repz
jo
push
test
jg
in
lods
mov
popa
jae
mov
dec
or
das
aaa
mov
call
push
stos
bound
mov
xor
inc
xlat
jns
and
push
bound
lret
push
je
xchg
inc
add
dec
in
or
and
clc
push
jno
out
nop
add
mov
inc
ds
mull
dec
xchg
push
dec
xor
sub
xor
js
insl
fwait
cmp
xor
popa
insb
test
mov
adc
inc
mov
outsl
dec
mov
jle
test
mov
ss
mov
mov
subb
pop
mov
outsb
movsl
fisubs
jbe
ds
inc
cmp
sub
movd
sbb
add
das
imulb
pop
adc
push
add
dec
lret
imul
xor
dec
cmp
xor
pop
mov
fs
stos
fbld
cwtl
cmp
push
decl
xchg
or
xchg
pop
xor
lods
aas
xor
lahf
aas
jo
pop
lea
dec
pop
sub
jecxz
jb
lcall
or
subl
dec
popa
push
rclb
mov
push
push
xchg
xchg
aam
gs
cs
pop
mov
mov
sub
in
es
xchg
mov
out
sub
xchg
push
or
fists
les
in
das
pop
mov
mov
je
mov
jo
sti
mov
cmp
cmp
mov
lds
scas
xor
or
cmpb
mov
aaa
xor
lcall
cmp
pop
cmp
jecxz
jns
push
imul
enter
cmpsb
adc
cmc
xlat
push
push
push
pop
adc
push
xchg
push
xchg
jnp
inc
jbe
lahf
addr16
add
xor
xor
test
aaa
aad
sub
sbb
sbb
pushf
pushf
adc
cwtl
add
aam
lock
dec
lods
ds
shrl
cmp
dec
pop
jbe
mov
lods
test
lods
or
fstps
add
in
adc
jns
cmc
cwtl
sbb
dec
jno
pop
add
mov
pushf
or
adc
dec
jno
ss
ljmp
std
pop
imul
cmp
mov
add
sbb
or
fwait
jb
cmp
or
adc
push
pushw
repnz
and
inc
xor
fmulp
pusha
adc
clc
or
dec
les
sahf
cmp
dec
loope
ss
jg
cmp
bound
mov
cs
adc
and
ja
mov
push
rorb
jb
inc
scas
jnp
cmp
push
jecxz
push
std
mov
cmpsl
add
test
jno
stos
ret
jp
xchg
adc
aam
sbb
fmul
movl
rclb
cltd
xlat
mov
je
and
xor
mov
dec
dec
shrl
add
fisubl
addr16
in
stos
adc
sub
sub
shlb
sub
push
add
xchg
or
push
in
fwait
sub
enter
iret
aad
outsl
adc
cmc
xor
jns
jbe
cld
sbb
dec
inc
mov
pushfw
xor
mov
ret
pop
ror
fwait
xchg
lret
jp
pop
or
jmp
lahf
inc
js
lret
call
or
sbb
and
push
lret
ret
dec
push
dec
xor
aam
mov
inc
mov
enter
inc
fsubrs
clc
jp
and
xlat
push
lods
cmp
notb
push
push
jo
mov
dec
sbb
sbb
xchg
dec
shll
push
pop
jp
pop
out
mov
sbb
sbb
aad
inc
adc
test
test
pop
add
sub
sub
mov
jno
stos
leave
pavgb
ljmp
sbb
arpl
imull
aas
daa
mov
negb
pop
jg
mov
sarb
push
orl
popa
mov
fwait
add
and
xor
adcb
dec
and
fisttps
fwait
jge
rcl
sub
push
jecxz
mov
and
pop
push
imul
cmp
stos
xchg
movsl
lcall
frstor
and
lods
fs
pop
cmp
pushf
bound
mov
loop
xchg
cmp
jo
jnp
daa
push
cmpsl
pop
ret
cwtl
pop
aaa
and
mov
fcmovb
cmpsl
mov
xor
cs
sub
lcall
adc
mov
sub
das
cmc
cmp
arpl
sbb
mov
fcoms
test
mov
jmp
pop
push
clc
aam
and
repz
add
mov
push
les
out
cs
push
in
mov
or
jmp
jb
mov
je
jg
adc
std
out
arpl
test
dec
and
in
jge
mov
stc
fsubl
jo
mov
lahf
cmp
mul
in
and
iret
mov
cli
push
ret
imul
mov
jb
je
or
sub
adc
or
dec
lds
nop
loopne
sbb
xchg
subl
f2xm1
lret
mov
aaa
fldt
jno
sarl
sbb
push
movsb
cs
incl
push
jl
push
imul
aad
jae
and
xchg
cmp
ds
mov
daa
jl
jo
dec
mov
pushf
testl
fwait
push
and
xchg
insb
fwait
dec
dec
xchg
jge
mov
fistpll
dec
gs
adc
jge
xchg
movsl
dec
stc
dec
pop
dec
cli
ljmp
push
shl
clc
popf
incb
scas
rorb
shlb
mov
les
jbe
pop
mov
xchg
and
dec
jecxz
mov
fdivrs
mov
sub
test
in
and
sub
addr16
pop
lods
jo
mov
pop
cmc
jb
loop
in
mov
fsubs
pop
adc
mov
aam
xchg
or
mov
pop
jae
mov
adc
xchg
nop
mov
lret
push
cmp
sbb
loope
or
jp
push
pop
dec
inc
jle
stos
or
adc
cmp
in
or
or
push
flds
insl
jg
push
fistpll
adc
std
aam
jns
inc
fcmove
bound
aaa
btc
int3
pop
loop
jp
push
aad
shlb
inc
or
xchg
add
mov
xor
sub
mov
add
fucomip
ds
mov
ss
in
dec
xchg
dec
and
idiv
pushf
sub
adc
inc
cld
test
inc
mov
popf
test
inc
push
ljmp
xchg
in
inc
inc
loope
cltd
or
pop
dec
mov
pop
sbb
mov
fdivrl
rorl
mov
int
mov
dec
data16
push
incb
jp
jp
outsb
cmp
out
inc
cmpb
mov
mov
pusha
inc
outsb
mov
arpl
ja
push
imull
add
cwtl
icebp
repz
cmp
ret
aad
int
dec
clc
jbe
mov
xchg
push
xchg
pop
sbb
ds
jno
mov
out
pushf
pop
mov
mov
jge
mov
imul
cltd
lret
shrl
sub
pop
jecxz
jle
addb
sbb
test
dec
cmp
sub
pop
in
hlt
cmc
or
jg
push
or
mov
sbb
pusha
cmp
imul
fsubs
les
decl
jbe
mov
adc
out
fwait
add
enter
lahf
sub
icebp
enter
xchg
pop
jle
jmp
rorb
pop
rolb
jne
pusha
jge
mov
pushf
sbb
xor
xor
movsl
cmpsw
pop
gs
iret
cmc
jno
cmp
sahf
xchg
mov
ret
js
sub
aam
push
out
or
aad
dec
cld
imul
in
test
inc
xchg
cmpb
xor
sbb
jecxz
mov
loope
fsts
pop
mov
cmp
fistpll
mov
rorb
pop
jbe
sbb
cmpsl
adc
add
mov
push
jae
sbb
stc
movb
ja
in
fadds
mov
sbb
mov
repnz
jecxz
jl
or
cmp
push
dec
dec
push
je
repz
repz
stc
and
fldl
adc
int
ret
repnz
jge
movsl
dec
mov
mov
fimuls
pop
sbb
fs
xorb
mov
jbe
test
push
dec
out
loope
mov
jae
and
loope
add
sbb
xchg
or
mov
cmp
mov
sub
cvtpi2ps
xorb
insb
mov
cli
pop
lea
enter
xchg
cmp
out
int
sub
insb
cmp
fs
hlt
addr16
out
outsl
cmpsl
sub
fisttpl
loop
lea
jle
adc
test
cmpl
jbe
fcmovnbe
jb
jne
aaa
ret
cmpsl
shrb
sub
fwait
add
inc
mov
popa
mov
sub
test
stos
lret
cmp
ljmp
mov
adc
mov
xchg
add
call
jp
push
adc
mov
fstpl
inc
rorb
pop
insl
sbb
out
negb
jno
fucomi
popa
jo
aas
ret
cld
call
paddd
loop
push
mov
fstpt
dec
cmp
std
pushf
mov
cld
data16
pushl
cmp
mov
daa
dec
fildl
xchg
dec
mov
jp
mov
imul
daa
xchg
sti
dec
push
jb
dec
xchg
addr16
sbb
sahf
movsl
xchg
aam
mov
sub
xor
enter
int
inc
adc
jne
lcall
push
cmp
loopne
rcl
push
adc
sarb
call
fisubs
in
iret
stos
movsb
aaa
mov
sbb
adc
cmp
imul
fimuls
pop
cmp
imul
out
cltd
test
pop
jle
gs
mov
and
cmp
cmp
sbb
pop
jge
je
jae
mov
enter
mov
add
pop
and
and
pop
loop
mov
fucomi
sbb
std
mov
push
shrb
inc
jp
aas
fstps
lcall
pop
popf
push
fsubr
jbe
pop
xor
lret
pushf
insl
jb
dec
outsb
inc
jmp
inc
sbb
repz
dec
sbb
xor
sarb
xor
sbb
jno
inc
sbb
js
mov
pusha
xchg
mov
xchg
lods
pop
sub
add
outsb
xlat
fisubs
cmc
scas
pop
cwtl
xchg
adc
xor
xor
xchg
jg
cmp
or
inc
pushf
cmp
mov
pop
scas
mov
cmp
mov
or
mov
xor
xchg
mov
xor
ds
jne
push
dec
rcr
sbb
lret
cmc
je
dec
pop
sarl
fstpl
movsl
mov
ja
xchg
dec
in
mov
nop
call
pusha
and
mov
mov
addr16
call
scas
data16
mov
pop
pop
clc
nopl
lret
pushf
mov
repz
inc
cmc
jbe
dec
in
pusha
inc
add
sbb
lds
outsl
aam
arpl
xchg
cmc
mov
mov
pop
clc
add
sub
xchg
dec
cmp
pop
fucom
sbb
je
shl
xor
bound
add
ds
sbb
cmp
inc
mov
jle
adc
sbb
test
push
testb
jb
cmc
mov
jnp
push
in
addr16
add
sbb
add
outsb
mov
mov
add
stos
jne
mull
mov
inc
mov
mov
xchg
jl
mov
mov
cmp
inc
scas
loopne
test
add
cltd
sub
or
pushf
xchg
push
fdivr
insl
push
or
cwtl
mov
xchg
aam
out
push
jp
add
xor
or
std
push
loop
sbb
mov
mov
fsub
add
in
cmp
frstor
in
inc
in
int3
ds
sbb
mov
ljmp
adc
iret
pop
fwait
testl
imul
aas
jmp
outsl
mov
hlt
arpl
sbb
xor
push
xchg
fadd
sbb
push
dec
inc
sbb
cmp
ret
jbe
xchg
push
mov
jne
mov
dec
xchg
cmp
out
push
sarb
xchg
pop
stos
push
call
and
test
push
into
and
dec
xor
test
add
mov
into
push
or
aaa
fisubs
imul
fmulp
ss
xor
mov
divl
cli
ret
movsl
rclb
xchg
and
push
push
mov
mov
ljmp
dec
imul
sahf
pop
lret
ffreep
push
mov
cmp
aas
mov
dec
in
movsb
jmp
cmpb
movsb
push
mov
sahf
lret
repnz
scas
or
inc
ja
dec
push
xor
mov
xor
les
imul
popf
cld
xchg
jae
and
imul
roll
push
pop
xor
in
xor
testl
add
mov
addr16
sub
pop
fdivl
and
or
or
push
mov
ret
dec
dec
movsl
lea
jb
or
outsb
subl
mov
das
sbbl
lcall
adc
ljmp
lahf
arpl
fnstcw
loop
push
andl
iret
sti
aaa
pop
xchg
loop
enter
cmp
mov
aas
ret
jne
mov
loop
push
rorb
mov
push
mov
pop
push
out
inc
push
iret
fwait
in
xchg
ds
or
mov
fidivl
scas
xchg
add
or
cmp
jae
cld
scas
sbb
mov
insb
rcrb
fidivrs
jp
mov
xchg
dec
and
in
out
scas
adc
mov
je
jne
and
in
insb
call
pop
xchg
test
pop
jle
cs
mov
pushf
clc
mov
stos
ss
jle
in
sbb
gs
lock
mov
js
sub
push
pop
pop
cli
lock
gs
xor
xor
aas
hlt
jo
lcall
xor
sub
or
mov
nop
fildll
cmpsl
loop
sbb
push
scas
fldcw
inc
sbb
aaa
div
daa
into
and
xor
scas
shr
shll
aad
dec
out
jge
int3
sarb
jge
js
xchg
add
mov
jl
add
adc
jmp
add
adc
icebp
shlb
and
jbe
mov
fstpl
shlb
fdivl
dec
adc
pusha
cmp
mov
fsubrl
jb
fisttpll
js
scas
lahf
sbb
fsubrs
xor
push
pop
movsl
lea
test
aad
addb
mov
cmp
mov
mov
dec
pushf
sub
sub
arpl
and
aad
ljmp
cmc
mov
mov
dec
movsl
jbe
ret
push
rol
mov
add
ret
dec
add
repz
ds
xor
inc
enter
sbb
loopne
mov
xchg
clc
add
mov
mov
mov
shlb
inc
add
jle
inc
sbb
mov
shl
mov
add
mov
je
mov
rcll
or
dec
sub
pop
jecxz
xor
adc
inc
adc
or
xor
test
inc
cmp
fistps
push
xchg
xor
mov
push
push
lea
mov
aam
stos
call
mov
xor
push
in
mov
add
or
out
popf
mov
stos
or
jns
gs
push
pop
pop
insl
fldt
jle
dec
gs
repnz
jns
jmp
or
or
push
shll
sbb
scas
dec
dec
add
bound
cmpsb
int3
scas
add
insl
sbb
or
lidtl
push
and
insl
xchg
es
scas
scas
fisubrs
ss
xor
lds
repz
fcmovu
aaa
cli
jmp
mov
jmp
lahf
dec
test
xor
or
bnd
xor
mov
jno
in
hlt
js
ret
pop
mov
pop
pop
cmpsb
ljmp
rcrl
mov
pushf
sub
jne
movsl
movsl
imul
std
test
loopne
aam
add
das
mov
mov
std
xchg
movsl
lea
add
and
fbstp
mov
xchg
das
mov
dec
xor
dec
pusha
xor
jae
loop
xchg
call
test
xchg
movsl
mov
xor
mov
and
frstor
je
sbb
mov
mov
mov
cmovle
clc
jns
repnz
mov
adcl
inc
xor
pop
ja
shll
jns
bound
test
or
jnp
add
add
into
movsb
cmp
int3
push
lods
roll
sub
ja
ret
cmp
push
lock
sub
fdivrl
jle
out
dec
xorl
cmp
jae
inc
dec
sub
fstl
add
sarl
dec
fsubrs
mov
std
adc
push
xchg
shlb
out
jle
pop
popf
mov
pop
ror
cmp
push
fwait
arpl
jae
or
imul
test
bnd
test
pop
sub
inc
push
mov
fcompl
mov
mov
movb
stc
movsb
in
mov
sub
jno
cmp
int
adc
cmpsl
ss
xchg
xchg
addr16
push
or
dec
scas
vfmadd231ps
loope
sahf
push
xor
in
fcoml
aas
fistl
push
and
test
push
outsl
mov
xchg
mov
cmc
mov
sahf
sbbb
mov
cmp
mov
dec
cmp
mov
in
andb
cmp
push
lock
xor
int
and
lods
push
inc
cmc
mov
mov
insl
or
lret
ja
imul
hlt
sub
adc
cmc
lret
add
or
in
xchg
add
mov
mov
sbb
data16
mov
xchg
aam
out
mov
enter
and
mov
xor
fwait
popf
xchg
jmp
aaa
arpl
cltd
xchg
sub
push
rcr
xor
jecxz
push
subb
xchg
jle
cmp
push
test
adc
in
xchg
xchg
add
dec
lock
in
pushf
fmuls
push
inc
mov
rorb
mov
loope
adc
pop
movsl
stos
stos
mov
cmpl
nop
push
mov
push
push
dec
cmp
sarb
and
jae
mov
aaa
sbb
stos
mov
adc
lea
inc
jp
movsl
jbe
push
loopne
adc
imul
cmp
imul
jno
arpl
je
ja
ss
das
push
pop
out
pop
push
dec
pop
push
nop
test
stc
adc
cmp
jbe
mov
stc
jae
in
aad
fmulp
add
push
addr16
fwait
jl
mov
popa
mov
negb
mull
shl
cmp
mov
and
add
aas
mov
das
xchg
cltd
test
repz
insb
ror
xchg
dec
push
testl
xlat
sub
sub
fs
jnp
in
cmp
js
adc
mov
mov
push
lea
cltd
cmp
dec
jae
sarb
xlat
ljmp
xor
outsl
inc
or
outsb
xchg
gs
cmc
fdivs
enter
insl
or
cmpsb
aaa
popf
xor
pop
pop
dec
sbb
push
cmc
xor
jne
andl
cmp
lods
decl
mov
fmul
mov
stos
movsl
mov
test
dec
push
sbb
mov
lret
jae
pop
or
push
inc
ret
mov
nop
cld
lret
jecxz
pop
fsubrp
sub
insl
aas
jne
into
jb
xor
mov
fdivl
xor
movsb
fisubs
sbb
les
sbb
dec
xor
jecxz
pop
ja
dec
mov
pop
aaa
inc
rorl
mov
outsl
out
pusha
jbe
mov
sbbl
ds
adc
adcl
fldt
add
mov
pop
nop
dec
lret
or
xorb
lret
test
push
or
negl
pop
sti
and
pop
xor
rcrb
push
mov
jns
cmp
mov
fnstsw
ss
loopne
mov
adc
fs
inc
scas
fwait
orl
pop
add
mov
arpl
fs
jns
jg
or
jbe
mov
sbb
inc
ja
loopne
shlb
popa
jmp
push
fbld
int
add
inc
cwtl
test
push
mul
imul
sub
mov
out
mov
mov
imul
or
jge
fbld
mov
sub
lock
xor
lahf
into
dec
xor
inc
out
pop
fiadds
mov
fwait
pop
lahf
push
popf
jg
test
pusha
call
dec
movsl
mov
cmp
and
adc
movsl
stos
out
pop
or
lock
mov
and
mov
mov
pop
call
insl
adc
pop
fadd
aas
test
xor
adcb
inc
into
les
or
and
imul
pop
pop
push
iret
cwtl
in
in
push
gs
sti
push
add
cmp
rcll
cli
mov
cmp
adc
hlt
xchg
in
mov
and
rorl
rcrb
inc
int
xchg
push
mov
mov
and
jge
popa
daa
ret
cs
sub
fnstsw
mov
pop
adc
and
mov
in
and
jg
sti
aad
fildll
or
std
mov
mov
scas
ret
stos
mov
sub
jl
xchg
inc
adc
aad
xorl
mov
sahf
inc
sub
lock
xchg
lea
sahf
and
clc
addr16
xchg
and
loopne
fdivrs
setns
jb
nop
xchg
or
ds
mov
fdivs
inc
add
hlt
mov
lods
in
lahf
mov
adc
or
lods
xor
inc
ds
scas
push
cmc
fisubs
and
sbb
sarl
sti
ljmp
inc
in
clc
scas
mov
mov
shrb
jecxz,pn
aaa
fdiv
pop
and
push
ljmp
dec
lcall
popf
add
test
pop
mov
jne
push
sbb
mov
insl
ficompl
mov
sti
jbe
mov
das
mov
arpl
lret
js
pop
mov
notb
in
out
pusha
sbb
push
push
add
push
jmp
adc
sarl
lahf
pop
push
cwtl
pusha
fildl
xchg
xchg
scas
push
lods
push
push
stc
xchg
push
xor
pop
es
jg
mov
mov
sub
lds
pop
fistps
cwtl
out
lock
fisttpll
adc
incb
mov
in
or
inc
pop
icebp
movsl
and
sub
sarb
mov
push
rcl
xchg
mov
test
jl
pusha
mov
adc
stc
inc
sbbl
aas
bound
jns
push
or
pop
scas
xchg
les
cld
push
push
push
xchg
sub
ljmp
mov
mov
test
push
sub
adc
aas
push
mulb
repz
inc
mov
mov
xchg
adc
bound
mov
in
push
push
lds
fists
fwait
pushf
mov
dec
clc
imul
sbb
vcmpss
jmp
or
or
rcll
xlat
insb
pcmpeqw
mov
test
call
jne
pop
sub
sub
cmp
and
add
jno
stc
mov
xorb
pop
repz
std
mov
xor
jge
jae
cli
or
std
dec
ror
test
xlat
filds
push
xchg
cmp
pushf
mov
pop
mov
and
rcrb
sahf
loope
pop
xchg
mov
xor
mov
xchg
adc
mov
rcrb
inc
push
test
xchg
jns
stos
or
mov
and
mov
cltd
push
sbb
mov
mov
fsubl
xchg
xchg
sub
cmp
and
and
and
inc
loopne
test
fistpl
xlat
insl
mov
cmp
mov
in
shll
test
jnp
les
xor
sbb
sti
jp
mov
inc
loope
push
pop
lcall
dec
mov
rclb
inc
xchg
loope
hlt
repz
fcomp
mov
pop
dec
mov
popf
sbb
mov
push
xchg
repnz
fldt
inc
push
std
cltd
out
pop
shll
mov
pop
jmp
ret
fwait
pop
lods
jnp
cs
ja
rorl
xchg
mov
in
xor
imul
mov
jnp
out
adc
or
aad
pop
dec
ljmp
mov
xor
xchg
cltd
xchg
and
adc
lret
scas
inc
and
in
pop
mov
pop
je
inc
scas
mov
mov
mov
cld
and
mov
lret
ret
cld
xor
xor
push
shrl
lcall
adc
adc
insb
or
push
dec
sbbl
adc
ret
lds
push
jp
stos
movsb
jno
cltd
inc
push
xchg
sbbb
mov
aam
inc
mov
inc
mov
mov
xchg
pop
lods
mov
test
ret
dec
addr16
inc
pusha
xchg
sarl
pop
icebp
cmpsl
xorb
mov
push
dec
xor
cwtl
xchg
jae
mov
push
xorl
iret
std
jle
cltd
movsb
or
dec
in
call
or
dec
int3
jle
sub
sub
sub
push
test
push
push
in
and
pop
cmp
out
pop
mov
psraw
rcll
mov
mov
jns
ret
jge
mov
les
or
mov
jne
mov
and
stos
jp
jp
ret
xchg
mov
out
mov
popa
or
xor
push
stos
imul
jmp
and
insl
pop
push
rcrl
sbb
push
pop
sti
pop
push
mov
sbb
fcmovnu
leave
push
mov
ficompl
ljmp
xchg
lret
fstpt
dec
std
cs
jmp
sub
fstl
add
cmp
js
pop
xlat
and
pop
and
js
adc
xor
lods
add
xchg
sub
out
push
jmp
adc
je
nop
mov
in
mov
or
movsb
out
cmpsl
xchg
sbb
inc
pop
aaa
std
push
mov
popa
add
iret
cmp
sbbb
xchg
scas
test
divl
rclb
cmp
gs
gs
mov
cltd
or
mov
f2xm1
mov
test
xchg
mov
mov
adc
adc
xlat
sbb
pop
aad
iret
pop
pushfw
push
hlt
lahf
add
cmpl
mov
adc
sbbl
stos
sbb
mov
lock
outsb
mov
adc
sbb
outsb
rcr
sub
inc
jecxz
or
and
cmp
outsl
scas
les
sub
adc
adcl
jno
fwait
xchg
aaa
fst
cltd
in
or
jnp
mov
mov
rcl
push
xchg
xchg
gs
or
cmp
mov
and
std
addr16
stc
popf
ljmp
mov
call
sub
lret
push
test
push
pop
xchg
jb
in
sub
clc
out
in
add
pop
mov
adc
ret
mov
cmp
and
test
sarb
mov
lcall
andl
loopne
and
scas
jae
dec
test
gs
lcall
xchg
fiaddl
fisubl
int3
add
mov
fwait
xlat
mov
inc
aam
mov
insl
add
hlt
in
dec
popf
cwtl
xor
dec
pop
push
inc
int3
es
and
int3
sahf
adc
idivl
icebp
aaa
push
idivb
jp
jne
add
xor
insb
mov
add
aam
cli
cltd
lock
out
test
adc
aas
loope
adc
loope
mov
iret
fbld
mov
scas
je
out
pop
jp
pusha
pop
mov
mov
stos
fbld
aad
incl
scas
add
pop
jecxz
inc
lret
shl
sbb
lock
ret
orb
pushf
sahf
aam
cs
mov
pop
popa
push
sbb
and
loope
jl
into
insb
sahf
push
inc
inc
mov
mov
push
xor
enterw
xor
idiv
cli
sub
add
lret
jmp
mov
adc
movsl
sub
jmp
inc
cmp
push
jns
out
cmp
test
mov
xchg
and
sub
lcall
adc
xchg
add
xchg
sbb
push
pop
dec
int3
mov
leave
scas
cltd
push
insb
xchg
daa
movsb
shlb
mov
cmp
jmp
pushf
ljmp
lret
push
stc
jno
inc
jbe
orb
in
xchg
add
idivb
mov
or
push
arpl
adc
ljmp
xchg
mov
shrb
lock
mov
fwait
les
dec
jge
decb
push
ret
stc
adc
jecxz
jae
out
cmp
inc
pop
test
inc
inc
push
or
pop
jle
mov
fisubrl
xchg
xchg
iret
dec
inc
mov
insb
movb
adc
out
xchg
pop
pop
movsl
pop
push
adc
ljmp
pop
aad
push
and
xor
sbbl
sbb
data16
sub
aam
cmc
or
add
adc
and
pusha
add
enter
int3
leave
cmp
lods
lahf
push
mov
mov
movsb
pop
sub
inc
lea
ljmp
in
push
mov
push
out
push
lea
arpl
insb
pop
xchg
rcrb
jbe
adc
xlat
dec
push
sbb
sbb
push
xchg
xchg
xchg
in
pop
add
fisttpl
and
mov
je
inc
lock
cmpsl
jb
sbb
push
outsb
xchg
movsb
lahf
push
test
shrb
lods
lcall
pop
jle
jg
adc
sub
int3
dec
lcall
mov
addr16
xchg
jnp
imul
in
fwait
test
pop
xchg
mov
icebp
outsb
mov
sub
sub
dec
jne
inc
repnz
scas
imul
insb
dec
or
nop
dec
popa
mov
lock
lret
jae
loope
outsl
int
xchg
pusha
xchg
movsb
outsb
xchg
les
aaa
loop
jp
cmp
std
out
pushf
jmp
adc
fcmovnu
divl
iret
cmp
and
shlb
jnp
cmp
cmp
pop
and
int
test
xor
cmp
bnd
push
jl
or
jl
inc
cmc
sti
add
lock
sahf
mov
lds
ja
xor
push
fdivp
fistl
sti
fisubs
adc
dec
pop
pop
mov
test
jmp
aaa
lods
xchg
jbe
cmc
jb
pop
cmp
fistpl
test
push
out
jmp
imul
sarl
sbb
lods
add
push
dec
jmp
xchg
dec
add
sahf
mov
std
adc
sbb
jl
das
push
bound
pop
rclb
shl
cmc
sub
shl
sbb
and
sbb
aam
mov
dec
lock
inc
addr16
repnz
stc
fdivs
popf
and
mov
push
lea
and
add
loopne
mov
js
push
decb
fdivrl
in
ret
insl
lret
stc
jo
popa
jmp
nop
inc
in
sub
jl
xor
test
enter
jae
rcll
or
sbb
inc
cmp
repz
stc
mov
mov
aas
xor
scas
add
xchg
insl
jmp
pop
and
leave
stos
lret
dec
jno
xlat
xchg
sub
xor
scas
sub
add
int3
xor
jg
pop
hlt
mov
sbb
jns
xchg
push
pop
xchg
sbb
ret
add
cmp
push
int
lock
cld
cmp
push
fidivs
mov
pop
xchg
pusha
push
insl
outsb
rcll
loopne
xor
pop
push
push
stos
fucom
out
out
push
fcoml
or
in
mov
sahf
sbb
rorb
mov
int
dec
mov
cmp
cmpsb
push
enter
hlt
cltd
mov
mov
sub
mov
add
pop
push
jo
and
or
cmpsl
aaa
cwtl
xor
pop
push
jne
inc
lea
js
pop
pop
cmpsb
dec
pop
pop
jecxz
adc
clc
and
sub
and
or
or
shlb
xor
nop
jl
add
rcll
cmp
pop
adc
add
ja
fstps
dec
dec
test
ret
cmp
icebp
test
xor
inc
into
stc
mov
add
mov
or
push
pop
pop
gs
cmp
popa
lods
push
nop
pushf
mov
or
adc
outsb
mov
mov
repnz
cmc
in
js
scas
and
cs
add
nop
mov
pop
ja
and
cli
rolb
dec
ljmp
sbb
inc
dec
call
jg
jne
mov
mov
mov
repz
xchg
sub
mov
cs
push
push
mov
jns
es
pop
fldt
add
loop
stos
jo
mov
dec
aam
fisttps
imul
mov
daa
push
inc
hlt
aad
fcmovnbe
loop
xchg
fs
testl
int
daa
xlat
jge
mov
pop
test
push
push
push
xor
cmp
sti
adc
pusha
or
ja
dec
adc
stos
hlt
faddl
cmp
bound
or
jns
in
lahf
mov
fldcw
scas
adc
jbe
inc
xor
adc
jle
or
dec
cmp
lock
insb
icebp
mov
push
mov
testl
xchg
in
cmp
cmpsl
xor
nop
push
mov
add
mov
adc
jo
jp
ja
test
test
in
daa
xlat
mov
inc
jecxz
es
lods
xchg
fisttps
cmpsb
mov
in
nop
subb
mov
decb
cmp
daa
xor
fiaddl
aad
lds
dec
out
add
add
cmpsb
jmp
enter
sbb
inc
fsubrl
mov
pop
fwait
jb
or
jns
hlt
mov
mov
cmpsl
stos
scas
sub
add
ss
std
and
jno
lods
lahf
cs
fildll
icebp
xlat
sub
push
add
xor
outsb
scas
xchg
fcmovnu
in
gs
fsubs
mov
mov
xchg
mov
int
adcb
cmp
pop
outsl
jl
mov
xlat
pop
enter
aas
or
in
push
loopne
xchg
das
sti
cltd
mov
int3
pop
jl
mov
dec
gs
sbb
mov
test
addr16
imul
ja
shl
dec
push
loop
sub
push
nop
adc
aaa
sub
cmpsl
mov
add
jno
xlat
hlt
repz
jns
xchg
adc
mov
mov
jb
jge
adc
inc
xchg
ret
sub
xor
arpl
div
in
rcrl
jmp
inc
rorl
jg
push
gs
adc
sar
fcompl
push
ret
sbb
dec
jns
rclb
xor
lret
xchg
aam
pop
inc
add
jp
sti
push
mov
lea
sbb
mov
push
dec
dec
mov
outsb
ficoms
or
mov
aas
dec
sbb
fstpl
push
pop
dec
lcall
gs
inc
fcmovnbe
cs
push
and
xchg
and
xchg
data16
sub
lret
into
push
cmp
pop
push
bound
repz
inc
mov
pusha
mov
jl
andb
scas
push
into
pop
push
icebp
popf
or
adc
cmp
cli
cwtl
out
xorl
pusha
jp
inc
dec
shll
fiadds
stos
cmpl
add
xchg
sti
inc
pop
hlt
adc
repnz
push
jmp
xchg
fdivl
call
xchg
jne
mov
xchg
adc
inc
xchg
test
icebp
test
fldcw
fldenv
adc
pop
loopne
inc
sbb
cmpsb
jmp
movsb
push
mov
stos
mov
test
cmp
lret
jle
adc
and
jns
test
sub
lret
sub
or
mov
arpl
out
clc
mov
push
fnsave
jg
daa
outsb
jb
jecxz
or
leave
dec
mov
fwait
adcl
jns
jle
aam
pop
lret
sub
sbb
and
imul
aas
jp
mov
dec
in
outsl
adc
push
xchg
scas
je
stc
mov
push
add
popa
mov
and
int3
mov
push
sbb
sbb
xchg
outsl
lods
jl
mov
int
inc
mov
test
sub
ficoml
movsl
sbb
push
add
addb
fcoms
xor
mov
jb
sarl
jne
out
add
neg
in
mull
fimull
pop
daa
pop
cmovnp
leave
sbb
addr16
dec
push
pop
push
pop
mov
arpl
add
popa
or
mov
mov
lock
clc
mov
mov
pop
sbb
out
sub
in
test
jp
jl
daa
pop
sbb
rorl
pusha
cwtl
mull
jns
inc
xchg
jns
inc
pushf
imul
shlb
ljmp
adc
ja
shr
mov
in
mov
rol
push
sbbl
push
lods
sub
xchg
testb
outsb
sbb
xorb
dec
pop
stc
pop
push
xchg
or
dec
js
xchg
sub
push
iret
lret
push
xchg
xchg
sub
fidivrl
mov
inc
in
xchg
hlt
inc
push
jp
outsl
jbe
sbb
test
mov
loope
jge
fstpt
je
daa
movsb
aaa
into
mov
lret
add
add
gs
mov
sbb
inc
negl
or
enter
les
adc
push
jno
test
mov
nop
and
inc
inc
das
hlt
in
shl
fucomip
jb
idiv
pop
xor
jle
push
cmp
test
or
cs
std
lret
xchg
out
lods
loopne
jp
inc
xlat
orb
add
push
xor
adc
roll
in
leave
pop
jl
fisttpl
mov
pushf
cmp
stos
cwtl
add
mov
mov
push
lahf
std
inc
jno
mov
mov
loop
mov
das
xor
jae
xchg
test
js
leave
loope
in
push
cmpsl
and
pop
aas
scas
dec
aas
cmp
xchg
xchg
repz
cmc
dec
loopne
cmp
mov
ss
jne
cwtl
pop
mov
or
mov
sub
mov
cwtl
and
mov
lods
inc
inc
out
lods
jne
pop
or
lret
scas
push
pop
outsl
or
shlb
test
in
bound
pop
adc
add
shl
pop
lods
scas
mov
into
arpl
push
cwtl
sahf
out
lds
ja
lds
fs
rcr
lahf
dec
xchg
mov
push
shl
cmp
lret
sub
aas
lock
jbe
ror
push
jae
in
or
fwait
cmp
fstpt
sub
shl
cmp
aam
mov
add
into
mov
sbb
in
adc
lret
icebp
rcrl
in
popa
xor
inc
adc
lahf
or
subl
adc
in
push
into
add
push
sbb
cmp
jg
dec
and
dec
or
sti
sti
sti
push
jmp
daa
push
push
inc
xchg
mov
shll
xor
mov
or
outsb
cld
cli
dec
sbb
out
and
push
stos
adc
or
dec
or
jae
add
inc
jnp
jp
mov
mov
adc
cmp
aaa
aas
jl
pop
push
mov
push
int
mov
or
jp
cmp
lahf
inc
adc
scas
push
js
cmp
mov
xchg
or
mov
lds
test
pop
xchg
andl
fsubrs
aas
mov
arpl
add
add
pop
fsubs
or
ret
stos
imul
sub
scas
or
jp
cld
lea
inc
negl
and
cmp
repz
adc
pop
aam
cmc
push
pop
adc
sbb
cmp
jmp
push
daa
scas
repz
ljmp
push
pop
gs
sbb
push
dec
push
and
inc
adc
add
cmp
jmp
aas
ds
cmp
ss
out
out
loopne
addl
sbb
mov
mov
out
out
sbb
inc
leave
setg
mov
test
inc
fwait
pusha
xchg
jmp
sbb
inc
and
in
or
mov
inc
aam
js
sbb
jle
jmp
inc
pop
add
add
outsl
push
sub
mov
je
inc
dec
out
sub
push
xor
stos
xchg
in
xchg
ret
daa
push
icebp
or
aam
lea
xor
scas
xchg
add
cmp
idivb
mov
repz
and
js
cmp
aaa
add
mov
orb
shr
dec
adc
repnz
lea
mov
inc
cmp
mov
inc
pop
pop
lds
push
and
lcall
aad
jg
jbe
mov
jb
cmpl
mov
pop
imul
jge
cmp
inc
repnz
insb
sbb
cld
outsb
ret
jne
adc
inc
enter
and
test
xor
test
cwtl
or
sahf
pusha
fcom
enter
je
insl
sbbl
inc
jg
cmp
xchg
test
leave
cmp
xchg
sbb
mov
mov
xchg
push
ds
scas
xor
js
pop
out
push
out
mov
add
mov
pop
sti
mov
shlb
scas
push
int3
xor
mov
fisubrs
xor
scas
inc
mul
call
cmp
pop
call
jne
fisttpll
dec
lret
es
jno
mov
mov
push
lahf
jne
popf
je
cmp
sbb
pushf
pop
pop
adc
or
push
mov
push
cmp
pop
jne
lds
mov
inc
or
push
ljmp
js
pop
push
into
sbb
inc
icebp
sbbw
int
out
dec
sbb
jmp
jl
rcl
inc
imul
mov
dec
inc
mov
sahf
into
inc
out
notl
cmp
inc
mov
fdiv
xor
dec
rcrb
rcl
bound
sarb
mov
adc
inc
leave
adc
cmp
leave
in
out
cmp
sbb
mov
movl
movsb
dec
xor
test
push
pusha
adc
sub
stos
mov
sbb
cmpsl
jno
lahf
push
in
iret
sbb
in
lea
ficomps
hlt
inc
popf
sub
and
xchg
mov
push
jl
xchg
mov
pop
lds
adc
fwait
sbb
test
fs
mov
xor
rcrb
push
xchg
mov
je
popf
bound
int
jl
cltd
rorl
outsl
mov
out
arpl
pop
pop
imul
cmp
or
xchg
inc
bound
jmp
xor
lcall
cmp
lahf
insl
jg
push
test
aad
js
mov
stc
int3
lcall
les
mul
sub
jg
mov
ljmp
cmpb
pop
push
and
inc
xchg
stc
inc
decb
cmovae
hlt
inc
incl
out
imul
add
pop
and
jbe
and
inc
mov
inc
lods
sti
in
dec
or
rclb
ret
sbb
call
mov
pop
ds
mov
dec
call
push
or
loope
inc
sahf
mov
xchg
cmp
inc
outsl
setne
mov
add
xchg
fcoms
adc
call
movsb
mov
iret
mov
movsl
mov
pop
push
movsb
in
insl
insl
ds
fidivl
mov
idivl
cld
stos
sub
inc
dec
jecxz
div
jns
aad
push
out
iret
dec
test
xchg
mov
ds
lods
mov
jnp
pop
sub
ljmp
cwtl
mov
push
adc
dec
out
jle
cmpsl
inc
jne
xchg
leave
cmp
ss
loopne
sbb
lret
lea
fsubs
xor
inc
and
sub
decb
sbb
jp
gs
and
lods
or
push
pop
lods
jge
scas
pop
call
rcll
int
imul
mov
mov
push
adc
sbb
jl
sub
push
subb
stos
or
icebp
pusha
adc
mov
hlt
pop
and
xchg
lret
test
addb
lret
test
lcall
lds
pop
jbe
add
xchg
or
mov
jae
jecxz
pop
test
jb
lds
ljmp
addr16
xchg
jne
push
loope
lret
aas
js
mov
mov
sub
or
aad
aam
sahf
or
cltd
data16
xchg
rcrb
push
xlat
push
cmpsl
push
xchg
cmp
add
sbb
fistpll
scas
es
jg
xchg
incl
testl
shr
test
or
stc
in
in
dec
aaa
dec
fldenv
arpl
stos
gs
popa
sar
iret
or
add
dec
test
push
sbb
dec
pushl
mov
mov
sbbl
arpl
mov
outsb
push
lods
aas
out
mov
in
hlt
lret
xchg
fcomps
out
enter
hlt
sub
sub
jecxz
repz
fcomps
lret
movsl
ljmp
ljmp
xlat
pop
es
sub
call
adc
jl
mov
clc
and
mov
pop
stos
and
int3
sbb
jbe
imul
test
rorb
xchg
gs
pop
dec
or
lods
dec
cmp
mov
lahf
jnp
push
sbb
jae
lods
add
push
inc
mov
push
repnz
outsl
pop
push
sbb
enter
inc
mov
pop
ja
dec
in
sub
cmp
sub
xor
jge
push
cmc
mov
clc
sub
push
nop
push
mov
xlat
mov
outsl
pop
jnp
cs
int
rcrb
pop
je
mov
loopne
arpl
inc
shl
cld
mov
outsb
or
icebp
jecxz
mov
pop
mov
and
std
jle
mov
mov
das
stos
aaa
push
sbb
sbb
jo
icebp
daa
cs
cmpsl
sub
pushw
test
cli
push
insl
sbb
lret
or
jmp
addl
cmp
add
leave
pop
mov
mov
lret
mov
pop
jo
push
push
mov
mov
sti
inc
xor
xchg
pop
inc
jnp
jge
pusha
mov
popa
out
daa
sbb
inc
push
scas
add
push
sbb
xchg
pop
push
add
movsb
iret
adc
adcl
jge
test
or
mov
sbbb
insb
int3
sub
ret
repz
sbb
jmp
lods
arpl
hlt
inc
cmp
addr16
idivl
adc
jnp
add
push
lcall
cwtl
imul
icebp
call
sub
leave
dec
push
sbb
sbb
shl
rcrb
arpl
dec
repnz
dec
arpl
push
pop
xchg
btc
pop
cmp
insl
sub
jge
push
aas
xchg
inc
aad
icebp
aaa
inc
xchg
dec
xor
pusha
sahf
out
add
sti
inc
bound
and
lods
jge
prefetch
je
das
mov
outsl
loopne
jmp
scas
jno
ljmp
push
xchg
lods
add
gs
pop
incl
push
mov
cmp
mov
pop
ror
ljmp
shlb
xchg
jo
shll
sbb
xlat
push
stc
mov
adc
aas
mov
mov
adc
aad
dec
mov
testl
and
icebp
decl
enter
jg
sbb
mov
sub
sbb
popa
jae
out
shr
inc
mov
add
pop
pop
notl
add
cltd
addr16
pop
sbb
das
out
jo
cmc
filds
or
jge
jnp
jb
push
movsb
cwtl
inc
pop
jo
fldcw
mov
imul
or
dec
insl
rorl
mov
fisubrl
lock
shrb
cmp
in
push
pop
add
jp
ljmp
mov
daa
in
adcl
out
dec
jge
mov
adc
and
mov
mov
mov
fnsave
inc
adc
jecxz
cmp
ja
jp
cltd
and
fmuls
adcl
gs
inc
jns
xor
imul
das
sarb
ret
xor
mov
jne
out
rcrl
sub
sub
jns
gs
cmpsb
add
or
in
test
adc
outsl
mov
xchg
mov
adc
fdiv
stos
fcmovnu
pop
sbb
push
sahf
mov
pop
mov
pop
push
aas
xchg
push
movsb
stos
ret
sti
mov
cmp
in
inc
std
cmc
sbb
cltd
push
jno
xor
dec
xchg
in
add
cld
fwait
xor
dec
add
aas
fimull
stos
stos
adc
and
mov
mov
sub
test
fdivs
clc
cmp
pop
or
push
mov
out
sbb
add
clc
faddl
or
aaa
pop
push
push
and
pop
push
mov
pop
mov
xchg
daa
dec
adc
mov
lock
jae
out
orb
mov
test
neg
push
cmp
dec
aas
ficomps
cld
or
xchg
jo
mov
daa
shll
inc
pop
daa
inc
add
sbb
push
inc
and
push
lahf
sbb
xor
ljmp
aad
cmp
pop
inc
cmp
ss
insl
xchg
cmp
out
stos
fiaddl
aad
adcl
adc
adc
sbb
xor
jecxz
cs
pop
ret
out
arpl
mov
cmc
mov
stc
inc
xchg
clc
outsl
into
dec
out
sub
dec
lea
fistps
es
xchg
push
dec
xchg
dec
leave
idivb
add
lock
cld
daa
pop
or
popa
add
or
arpl
and
fcomp
adc
roll
xchg
out
adc
jb
mov
rcll
and
rorl
jmp
ret
dec
push
rolb
adc
add
shll
jmp
cmp
and
shll
xchg
inc
test
sbb
cmp
cmc
mov
and
ljmp
mov
insb
mov
mov
mov
ljmp
dec
mov
pop
mov
enter
out
or
aad
push
jo
push
mov
jmp
add
pusha
jmp
sahf
or
test
inc
out
out
push
subb
js
pop
shl
mov
lds
rolb
jg
or
mov
popa
stos
movl
rcll
daa
adc
push
pushf
arpl
movsb
repnz
push
lahf
ror
inc
int3
push
cltd
daa
adc
dec
mov
pop
add
sub
adc
es
add
dec
ljmp
inc
das
add
push
lahf
lcall
push
xchg
mov
out
push
inc
or
mov
cli
or
ss
repz
xchg
or
xchg
mov
test
sub
and
pop
mov
jp
inc
add
in
test
pop
pop
js
clc
fcmovbe
imul
add
int3
add
mov
cli
mov
addl
loope
jp
addr16
decl
fbld
sbb
mov
ret
sti
jmp
out
pop
pop
insb
push
cs
jo
sub
in
shlb
jl
out
lods
fs
int3
scas
jle
xchg
jge
and
sbb
cmpsl
mov
mov
cld
mov
mov
mov
xor
sub
cmp
cmc
pushf
sbb
arpl
es
and
clc
jo
insb
test
cmp
outsl
fs
call
mov
and
sub
outsl
cs
je
int
fnstenv
inc
xor
or
push
adc
xabort
subl
repnz
arpl
pop
add
sub
sbb
loopne
and
mov
je
mov
push
popf
fdivr
cltd
xor
inc
mov
xchg
gs
fcmovnb
inc
outsb
adc
ja
fdivl
cli
rcll
sub
xor
xor
mov
sbb
lahf
add
pusha
pop
jae
mov
mov
ficoml
mov
sbb
out
sbb
cmp
popf
arpl
enter
mov
pop
mov
andl
cmp
mov
aad
jge
int
sbb
jl
xlat
mov
push
or
sbb
scas
adc
inc
scas
stc
lods
add
jge
mov
fsubrl
loop
arpl
in
out
ret
or
mov
jae
fadds
pop
std
or
jmp
ret
push
adc
sbb
jae
loop
inc
loopne
aaa
jmp
in
ror
mov
xchg
jle
xor
push
ljmp
call
xchg
jg
cmp
ljmp
inc
loope
testb
mov
dec
add
in
add
pop
andb
fneni(8087
rcll
imul
or
imul
inc
mov
xchg
pop
pop
mov
sbb
movsl
pop
lahf
xor
mov
mov
xor
and
sub
pop
repz
js
js
in
push
cwtl
sti
les
loopne
jno
cmp
movsb
jmp
inc
xchg
gs
sbb
outsl
ja
mov
je
add
pop
adc
cs
jae
add
push
inc
jmp
jle
fbld
pop
sub
pusha
and
fldl
in
cmpl
sub
push
test
xchg
jne
mov
pop
test
sahf
lret
mov
xlat
xchg
pop
fcmovnbe
aad
sub
cmp
dec
jmp
adc
jae
sbb
pusha
cli
xor
das
mov
jmp
xor
ja
test
or
add
adc
add
xchg
aam
cli
test
pop
or
push
aas
push
fcmovu
push
jmp
mov
enter
js
adc
push
fsubrs
dec
loopne
arpl
cmpsl
cmovns
pop
push
sub
jp
loope
sub
mov
sub
ja
dec
outsl
sub
jl
gs
or
fidivl
mov
jmp
dec
pop
cmpsl
cmc
jbe
push
cltd
sbb
outsl
cmp
sbb
mov
and
test
bound
pusha
sub
cmp
inc
push
cwtl
test
jno
std
in
dec
pushw
inc
dec
inc
test
nop
mov
sub
mov
lds
iret
and
dec
mov
cmp
mov
popf
push
push
jo
std
and
cwtl
stos
sti
pop
add
dec
stos
mov
xchg
rorb
mov
fdivl
xorl
aad
and
and
xchg
outsl
clc
mov
xor
and
stos
jno
fnstcw
shlb
shrb
mov
ret
pop
mov
cli
or
adc
or
and
rcll
sti
or
aas
jge
ja
stc
mov
les
sbb
ret
pslld
pop
mov
jno
fsub
sbb
test
mov
hlt
aam
jge
mov
add
and
iret
xchg
jne
fwait
mov
cmp
aam
mov
pop
aad
ljmp
mov
enter
mov
push
mov
stos
sti
mov
mov
pop
js
xorb
adc
sbb
lea
push
aam
test
jo,pt
sbb
into
fldcw
pop
push
sarb
jp
pusha
adc
daa
mov
jo
xchg
xor
jge
repz
lds
xrelease
outsl
or
movsl
xor
pop
xor
pop
loop
divl
out
adc
subps
pop
iret
lds
int3
push
aad
lahf
mov
cmpsb
nop
popf
inc
sub
mov
std
mov
or
adc
inc
mov
and
pop
xchg
mov
pop
xor
aaa
movsl
nop
imul
es
aad
adc
dec
cmp
popa
or
push
sub
push
sub
mov
int3
jl
test
rorl
add
rolb
or
mov
popa
cmp
addr16
fcmovne
pop
dec
add
mov
stc
fsubp
push
adc
xchg
dec
je
mov
mov
dec
jno
pop
sub
fnstsw
jmp
and
pop
push
jbe
lahf
xor
jbe
dec
inc
jno
pop
push
lods
jnp
mov
xor
xlat
jne
inc
add
orl
mov
pop
fists
out
sahf
add
ljmp
inc
sarl
and
and
inc
push
add
mov
add
loopne
mov
inc
push
es
and
movsl
icebp
cmpsl
rorb
sbb
push
int
adc
pop
pop
loope
fwait
jae
jp
iret
mov
jp
xor
xchg
push
adc
mov
ja
xor
mov
out
cmc
jmp
or
inc
xchg
jno
cltd
push
or
lds
in
xor
aad
cs
jo
xor
pop
test
inc
push
imul
mov
add
jmp
icebp
mov
adc
and
mov
test
int3
mov
rep
xchg
jge
cmp
aad
outsl
xchg
add
adc
sbb
clc
pop
inc
rdtsc
mov
dec
imul
jb
add
shrb
mov
or
stc
mov
inc
lods
fucom
dec
imul
mov
insb
push
or
mov
push
inc
loope
dec
lahf
mov
sbb
xchg
call
in
fsts
mov
or
popf
vpmadcsswd
cmp
lods
mov
adc
fisttpll
fldcw
fistpl
lods
orl
xchg
lods
popf
push
or
ljmp
jg
dec
sbb
fwait
shrl
loope
iret
or
jl
sbb
xchg
idivl
insl
fnstcw
pusha
sub
mov
fyl2xp1
rcl
mov
leave
fidivs
inc
orl
mov
cmpsl
inc
sarl
inc
inc
lret
mov
jbe
cmp
aaa
stos
push
add
jle
cmpl
sub
and
jp
into
cmc
jb
inc
lret
dec
add
adc
mov
ret
aad
pop
shrb
das
push
push
jecxz
dec
das
cltd
mov
inc
loope
dec
push
lods
push
fcmove
adc
or
repz
mov
sub
push
mov
ljmp
aas
or
lret
call
movsb
mov
pop
jecxz
lret
test
lahf
fdivrl
mov
push
or
add
mov
nop
shlb
xor
sbb
add
mov
repz
mov
push
adc
sbb
popf
lcall
iret
xchg
xor
mov
fisttps
arpl
fcmove
inc
adc
arpl
or
mov
adcb
in
pop
movups
ljmp
inc
iret
lods
sahf
test
ficomps
dec
in
test
fdivs
dec
mov
dec
adc
mov
repnz
inc
jmp
sbb
sub
push
gs
imulb
lea
iret
xchg
ret
mov
pop
pop
adc
cmp
cwtl
xor
imul
and
xchg
iret
daa
xchg
dec
mov
imul
test
mov
repz
dec
icebp
and
negb
mov
out
xor
jl
pop
movsl
int3
into
pop
fsubrl
inc
mov
adc
fildl
pop
call
dec
mov
mov
bound
mov
cmp
jp
out
andb
jae
es
inc
add
jbe
xchg
inc
fmul
add
out
dec
mov
std
jne
xor
loopne
sbb
jmp
sbb
imul
jo
pop
sbb
jbe
and
loop
sub
pushf
dec
or
aaa
popa
push
pop
push
test
js
repz
mov
cwtl
and
mov
lahf
cmpsl
pop
mov
mov
bound
mov
paddd
inc
mov
mov
das
bound
fcoms
add
push
cmc
jecxz
lea
push
jne
jmp
pop
enter
cmpsb
cmp
xor
jae
out
xor
dec
fneni(8087
rolb
xorb
jae
cmp
mov
les
ljmp
mov
mov
test
fxch
xchg
mov
mov
popa
cmp
pop
jp
stos
sub
and
ja
dec
inc
pop
mov
jg
aad
movsl
mov
cmp
and
lods
clc
mov
mov
push
xor
in
data16
and
mov
test
ret
sub
fstpt
jbe
sub
mov
inc
lods
push
inc
and
xor
pushf
and
cltd
adc
jg
xchg
jge
inc
lret
jno
cld
cmovne
inc
dec
call
pop
sbb
xchg
rorl
test
enter
stos
mov
daa
mov
mov
pushf
test
ja
leave
popf
fdiv
fs
in
cmc
pop
ret
mov
ja
push
jge
mov
subl
lret
sub
pop
lods
adc
mov
in
leave
imul
inc
lea
int
std
push
les
sbb
and
inc
xchg
jle
gs
mov
aas
push
shll
inc
inc
popf
xchg
xlat
stc
jmp
or
jp
sub
leave
stos
jg
scas
mov
mov
shl
insb
and
jno
lahf
dec
scas
sbb
ficompl
fcoms
inc
pop
dec
jl
insl
dec
adc
and
xchg
andb
lcall
popf
cmp
cmc
cli
mov
or
pushl
rorl
add
test
roll
ja
xchg
mov
mov
mov
ret
mov
push
loopne
cs
xchg
cli
lods
or
loop,pn
pushf
mov
jecxz
push
in
sbb
leave
xor
mov
rorb
jg
mov
or
inc
adc
setae
call
dec
popa
mov
pushf
push
and
cmpsb
dec
xchg
jge,pn
mov
das
pop
cs
lds
in
lock
test
sub
inc
ljmp
and
cwtl
cmpsl
out
and
inc
dec
jmp
imulb
and
xchg
cli
iret
nop
xchg
aas
pushf
rep
cs
sbb
mov
loopne
test
mov
xor
aad
mov
mov
push
fistl
je
push
dec
dec
ljmp
inc
in
inc
fs
jmp
pop
mov
pop
xchg
jae
into
mov
push
pop
pusha
mov
scas
das
mov
int3
or
rep
push
lods
push
out
in
das
repnz
jecxz
test
mov
xor
fildl
or
dec
jae
pop
adc
dec
loopne
push
push
mov
call
and
mov
mov
pusha
out
dec
add
jae
lock
das
hlt
xchg
clc
inc
push
ret
add
jne
lcall
sub
int
inc
push
imul
rorb
pop
shll
mov
iret
xor
mov
clc
lcall
jnp
jp
or
dec
mov
stc
sti
test
cwtl
dec
call
loopne
mov
xor
lret
pop
fsubs
test
adc
add
pop
imul
insb
sahf
add
inc
sbb
pop
jnp
fisubrl
sbb
mov
ret
dec
jb
notb
xlat
clc
clc
jae
jo
dec
fmul
adc
test
add
mov
cmc
in
xchg
push
out
jno
dec
inc
mov
jae
push
scas
xor
mov
fcoms
mov
repz
fsubs
sbb
push
sub
pop
lahf
push
push
xor
pop
iret
dec
mov
xor
fwait
cmpsb
cwtl
rcr
jp
daa
call
push
sbb
out
fnstenv
test
add
push
aas
clc
sbb
xor
andb
mov
or
xchg
daa
cmp
mov
inc
pop
repnz
sti
mov
mov
push
aam
lahf
rorb
mov
mov
push
mov
pop
pop
dec
je
std
ja
xchg
rorb
jg
adc
push
stos
jge
fistpll
iret
mov
mov
in
shlb
xchg
pop
jbe
mov
bound
mov
or
inc
inc
clc
add
push
add
mov
mov
test
pushf
lahf
test
sub
shll
imul
cmp
adc
ja
orb
dec
dec
mov
inc
and
xchg
push
lret
std
xchg
push
leave
mov
push
add
mov
out
dec
xchg
pop
fisttps
jbe
repnz
daa
mov
cmp
add
sbb
mov
bound
popa
in
inc
bound
push
ret
xchg
mov
pop
incl
in
mov
lret
add
out
pop
pop
rorl
ret
arpl
lds
leave
sbb
add
std
rorb
push
push
lds
sbb
iret
mov
into
pushf
lret
sub
xor
and
aas
or
cld
pop
das
add
ss
cli
jg
sbb
bound
add
pusha
fld
testl
and
dec
mov
mov
cmp
push
gs
fwait
aam
xor
jb
cmp
jmp
dec
inc
std
cmp
aam
cmp
push
xor
inc
push
sub
pop
mov
aas
jns
movl
jp
lods
in
cmp
add
jae
std
pop
mov
mov
adc
xlat
cmp
push
incb
xor
mov
out
clc
and
pop
dec
aas
inc
aas
and
and
lods
mov
pop
into
test
addr16
fisttps
mov
xorb
arpl
enter
dec
cli
fiadds
mov
loopne
xor
out
sub
push
call
inc
inc
test
inc
pop
fbld
mov
mov
inc
out
sbb
shrb
pop
or
jp
cmp
cmp
rol
pop
lods
lea
bound
adc
adc
shl
fcompl
es
sbb
clc
sbb
shlb
sub
test
rcrl
test
dec
and
add
xchg
mov
add
imul
xor
sbb
fimuls
repz
mov
js
cwtl
icebp
std
nop
in
out
push
ucomiss
cmp
std
mov
add
jge
xchg
pop
sbb
or
and
ret
xor
cmpsb
xchg
xor
adc
not
xchg
mov
lds
push
or
sbb
sarl
add
mov
lea
push
sub
jae
push
ljmp
dec
ljmp
mov
fdivr
inc
dec
enter
add
jmp
scas
mov
movsb
insb
test
lock
sti
test
lret
ret
call
std
sahf
jl
xchg
sbb
pop
les
and
inc
cmp
lahf
add
mov
mov
add
adc
xchg
xchg
aam
push
aaa
cmp
mov
pushf
je
aas
punpckhdq
xor
hlt
push
xor
stos
or
add
jmp
stos
xor
and
stos
andb
push
lock
rcrb
decl
cmpsl
fisubs
insl
xor
sub
jmp
out
mov
mov
xor
in
mov
jbe
jnp
mov
es
inc
add
aaa
ror
mov
adc
sbbl
divl
mov
jne
mov
test
test
jo
push
loope
push
sbb
dec
sahf
repz
jno
jns
adc
icebp
orb
or
xchg
mov
ds
or
out
add
out
jecxz
in
jecxz
into
scas
pop
pushf
js
rorb
mov
fwait
pop
leave
or
loopne
int
rcrl
push
pop
test
lods
jg
pop
pop
rcl
xor
cmp
lahf
pop
jne
hlt
lds
stc
and
mov
call
mov
out
cmp
shll
fildl
pop
adc
mov
push
adc
push
imul
test
xchg
lock
sub
inc
roll
pop
mov
push
adc
inc
mov
jecxz
dec
arpl
mov
sub
arpl
add
into
lods
push
jb
and
push
inc
ljmp
shr
fdivrl
cli
seto
sahf
jb
repnz
aad
js
cwtl
mov
adc
lahf
dec
cmp
int
inc
sbb
push
cwtl
fsubrl
aad
mov
scas
adc
test
mov
xchg
roll
xor
dec
xor
push
arpl
pop
es
fistl
int3
xchg
int
mov
pop
mov
daa
mov
sub
call
outsb
outsl
insl
jne
jg
push
popa
and
rcrl
out
mov
push
and
rcl
jne
mov
lods
jmp
dec
ficomps
xor
movsb
and
shrb
mov
or
pop
mov
negb
rcr
mov
mov
push
dec
arpl
cs
jo
jo
scas
fs
sub
cmp
fisubl
jo
in
sbb
add
out
jecxz
lods
pop
or
lret
jp
fwait
sub
cmpsl
imul
cmp
enter
jp
popf
sub
inc
add
dec
gs
inc
or
or
xor
xchg
cli
pop
pop
cmp
sub
test
cmp
inc
push
add
mov
jmp
push
mov
mov
mov
or
movsb
jmp
pop
push
sbb
sti
fdivl
push
out
pop
push
imul
mov
shr
sbb
push
inc
daa
in
es
test
inc
jecxz
fsubs
dec
cmp
nop
cmp
lods
lcall
or
mov
jno
sub
pop
mov
fisttpl
popa
sar
inc
pusha
and
jbe
jb
ja
jbe
jno
or
mov
xchg
pop
in
mov
mov
xor
dec
xorl
into
pop
das
std
les
fadd
sbbb
int
shr
imul
in
test
shll
sbb
jl
jg
cmp
addr16
mov
fnstsw
daa
and
cltd
div
idivb
jbe
pop
add
or
lret
iret
rcl
jle
add
dec
mov
flds
xchg
adc
roll
stos
xor
mov
mov
add
dec
fs
mov
sbb
bndldx
test
mov
xchg
sarb
mov
call
adc
mov
cmpsb
adc
imul
sbb
adc
fdivl
xchg
sub
dec
adc
notb
loop
cmp
or
ss
lods
mov
ret
test
xlat
pop
or
dec
ja
adc
xor
mov
sbb
imul
fwait
xor
fsubrs
call
scas
pop
xchg
imul
lahf
inc
xor
push
lds
mov
mov
mov
push
pop
push
call
jl
sub
inc
ja
outsb
mov
stos
jge
or
push
outsb
xor
or
xchg
adc
mov
outsl
sbb
or
lret
ret
mov
scas
jge
scas
pop
sub
cmp
fsubrl
das
shrb
adc
and
neg
pop
cld
clc
xchg
mov
cmp
push
push
and
lret
sub
aam
loop
daa
lret
gs
pop
or
jb
pop
jge
jle
pop
cld
dec
popa
mov
mov
and
sti
movsl
lcall
in
xchg
out
or
iret
sbb
push
loopne
pop
jae
in
int3
cmp
inc
das
cs
mov
fmulp
sub
push
enter
and
jp
sbb
fcompl
sbb
lret
jno
imul
ret
sti
mov
add
push
sbb
push
ja
cmpsb
test
xchg
xchg
fidivl
jmp
pop
das
sbb
lret
xchg
xor
xor
xchg
jle
sbb
pop
add
sar
xor
xor
xor
mov
push
and
pop
outsb
mov
ffree
test
mov
daa
add
sub
adc
out
xchg
sbb
xor
mov
lock
imul
push
movsl
cmpsb
sub
add
xchg
mov
ret
xchg
clc
cltd
adc
xor
jp
cwtl
mov
cli
mov
jle,pn
std
jae
fistl
dec
lcall
add
aam
dec
int
xor
dec
or
jl
cmp
sub
not
sbb
jle
ret
popf
mov
aam
pop
test
pop
adc
arpl
adc
dec
fsubl
ds
or
ret
stc
xor
jle
xchg
jg
xrelease
ss
jne
adc
stos
mov
dec
mov
sbb
push
loope
mov
adc
mov
call
fs
xchg
fwait
xchg
ljmp
jge
imul
xchg
adc
xchg
xchg
or
fisubl
mov
xor
je
push
jge
xchg
sti
xlat
stos
mov
arpl
pop
in
jnp
xor
je
nop
add
pushf
lret
mov
pop
popa
aam
out
scas
shr
in
testb
mov
pop
push
lds
jae
mov
in
sub
mov
mov
pushf
sub
cwtl
pushl
movsl
cld
xchg
dec
sub
test
int
movsb
push
sbb
arpl
pushf
aas
adc
outsb
lea
in
and
sti
sahf
mov
xchg
stc
mov
mov
cltd
or
repz
mov
sbbb
push
mov
sar
and
nop
in
rcrl
adc
pop
push
rolb
in
and
cmpb
cmp
push
jmp
insb
mov
enter
in
sub
scas
sbb
das
sub
jno
iret
inc
aaa
ret
xor
or
mov
mov
idivb
les
or
add
inc
and
add
fsubrl
mulb
push
fisubrs
jecxz
mov
sbb
mov
and
pop
mov
fistpll
icebp
sbb
and
adc
push
cld
jns
imulb
lret
jle
pop
shlb
xor
add
add
sbb
cwtl
fs
lahf
ss
fsts
jbe
mov
mov
ret
cld
cld
hlt
pushf
cmp
dec
lret
aaa
iret
outsb
stos
arpl
jecxz,pt
stos
mov
imull
arpl
dec
mov
out
lret
orl
loop
jecxz
pminub
mov
jl
sbb
sti
shl
arpl
pop
test
jle
and
and
jnp
add
sub
das
sub
repnz
cmp
aaa
movl
ret
ja
hlt
jno
mov
nop
int
dec
negl
or
sbb
out
sahf
in
jnp
mov
pop
loop
hlt
or
dec
lcall
inc
lcall
in
jle
mov
out
ret
adc
sub
daa
pop
imul
lock
lods
cmp
lods
adc
mov
xchg
stos
scas
inc
cld
add
loope
js
jmp
or
test
enter
sti
add
lea
sub
imul
cli
cmpsl
int
push
or
mov
sbb
add
js
movsb
mov
push
fldl
addl
or
cmp
lds
icebp
xor
fdivl
jne
push
mov
ret
dec
xchg
ljmp
jmp
push
sub
jbe
test
mov
adc
mov
icebp
xor
cmp
filds
inc
frstor
insl
ret
enter
psubd
test
scas
xchg
sbb
out
xlat
push
pop
xor
cwtl
mov
sbb
mov
cmpsl
imul
inc
mov
xchg
mov
push
repz
lret
loopne
sub
pop
int3
dec
imul
lock
int3
cmp
sbb
in
or
jne
xlat
jo
mov
push
lcall
add
pop
or
jb
xor
xchg
and
popf
test
push
sub
pop
push
push
popf
cwtl
test
inc
add
or
lock
ret
jns
push
mov
mov
fwait
xchg
cltd
mov
sbb
test
push
ds
pop
lret
cmp
or
and
cmp
mov
mov
aas
xchg
inc
jno
dec
dec
bound
idivb
sysenter
mov
addl
and
insb
mov
divb
mov
dec
xlat
cmp
leave
fists
inc
mov
inc
mov
mov
ljmp
and
push
inc
inc
jb
cmp
push
sub
mov
mov
mov
jbe
stos
loopne
loop
sti
testl
fldt
pop
in
loope
cwtl
mul
and
push
into
dec
push
pop
adc
stos
add
xchg
in
fisubs
xchg
or
mov
rorl
pusha
mov
mov
push
rclb
mov
add
sbb
mov
loope
xchg
aaa
push
pop
mov
jp
or
lcall
js
mov
mov
or
mov
push
pop
dec
pop
push
and
cmc
cld
xchg
into
cmp
or
push
mov
inc
xor
stc
jbe
sub
mov
cmc
sbb
cmp
inc
dec
outsl
xorl
and
jmp
movsl
les
loope
jbe
mov
pushf
cld
bound
push
and
insb
dec
add
bnd
fsub
mov
dec
cmpsl
jnp
or
or
dec
mov
in
push
mov
push
jnp
mov
gs
pop
and
xor
cmpb
xlat
sub
mov
cmp
mov
sbb
inc
cmpsb
cwtl
xor
inc
mov
jae
mov
leave
in
cltd
mov
push
mov
aad
test
xor
nop
push
adc
cwtl
cmc
add
imul
xor
pop
inc
and
inc
xlat
mov
add
mov
mov
and
int
lds
jl
and
addl
stc
dec
pop
cs
inc
xchg
dec
and
out
repnz
inc
ret
add
and
cmc
negl
jb
jge
sbb
rcl
aad
xchg
mov
sub
xlat
sub
or
enter
pop
pop
or
sahf
pop
lret
jmp
in
jle
adc
jae
ljmp
out
xchg
mov
sbb
jmp
nop
pop
lcall
xlat
stc
jbe
fisttpll
ficomps
icebp
xchg
stos
pop
and
out
sbb
cs
jecxz
pop
mov
push
pop
jmp
pop
pop
xlat
pop
icebp
pop
xchg
jnp
repz
aaa
push
jbe
pop
stos
cmp
mov
pop
push
adc
inc
lcall
in
cltd
and
jp
mov
repz
or
push
mov
mov
pop
dec
jle
mov
aad
daa
xor
mov
mov
xor
mov
cmpsl
or
mov
test
push
sub
sub
lahf
mov
mov
cmp
das
cmpb
mov
xchg
pop
roll
jle
mov
repnz
inc
pop
ret
test
mov
adc
dec
shr
hlt
add
add
ds
mov
in
cmp
pushf
pop
movsl
pop
dec
and
mov
pop
sub
mov
inc
push
dec
dec
hlt
fnstsw
sub
pop
cmp
xor
sub
and
jo
out
cmp
divb
or
xchg
data16
jnp
add
push
les
idivl
pop
test
loop
sub
ljmp
mov
xor
daa
cli
push
rolb
and
fstl
stos
cmp
das
mov
adc
adc
xchg
push
push
mov
test
out
dec
inc
or
cld
sbb
lret
jae
add
iret
xor
adc
aaa
lock
inc
jg
iret
dec
wbinvd
add
out
aaa
push
rorb
ja
lret
dec
dec
xor
push
scas
push
push
addl
pop
popf
dec
gs
jg
fdivl
mov
or
out
cwtl
fisubrl
inc
sti
in
jo
stc
mov
std
inc
scas
pusha
rcrb
call
divb
mov
test
or
arpl
nop
fs
xor
int
insl
or
pop
pop
sub
mov
mov
and
sbb
pushf
icebp
and
jmp
xor
lock
repz
pop
lcall
in
rolb
loopne
cmp
inc
mov
push
data16
orl
jno
add
adc
hlt
imul
push
jge
out
enter
insb
mov
ret
js
test
cmp
adc
outsb
lret
aaa
dec
idivl
fstpt
or
xor
xlat
jno
inc
cmp
rcr
pushf
mov
fidivs
sub
jge
idivl
sbb
push
cli
sbb
and
or
mov
pushf
pop
lret
add
inc
jecxz
mov
xchg
lods
xchg
loope
shll
fs
dec
jg
fmull
cmp
rcll
xchg
add
and
int
jl
mov
dec
lret
arpl
xchg
je
mov
pop
xor
test
mov
icebp
add
mov
add
or
xchg
bound
adc
mov
cmp
xor
mov
add
daa
rcrl
clc
popaw
xor
inc
cmpsb
cwtl
sub
scas
shl
test
push
je
repz
sbb
mov
leave
add
cs
ljmp
sti
ja
push
in
icebp
adc
xor
in
pop
out
mov
sub
sahf
add
push
insl
imul
mov
sbb
mov
xor
js
and
cmp
mov
sbb
push
and
sarl
jge
push
lods
adc
mov
push
cmp
pop
andb
lahf
cmp
in
int3
xchg
or
fsubs
icebp
pop
imul
mov
mov
bswap
popf
xchg
popf
dec
popa
or
lret
sbb
mov
dec
push
push
std
cli
xchg
jp
fildl
adc
test
xor
xchg
mov
lds
pop
jmp
aaa
mov
mov
sub
add
mov
out
and
sub
fmuls
aam
mov
fnsave
pop
pmulhuw
mov
fisubl
adc
bnd
inc
out
inc
test
sub
jae
push
roll
out
xchg
frstor
shrb
inc
add
cmp
lea
cmp
fs
test
ja
into
repz
outsl
mov
std
arpl
js
movsl
int3
mov
jle
pushf
fiadds
movsb
out
push
sbb
jp
dec
jecxz
lods
subb
cmpb
xor
mov
into
repz
aad
jge
pop
push
fs
es
push
arpl
xchg
mov
dec
mov
add
mov
jns
add
loopne
lahf
aas
addb
xchg
sarb
movsl
imull
add
or
push
xlat
fcmovnbe
aaa
xor
sub
add
imul
rclb
mov
or
popf
es
pop
mov
jbe
and
dec
cmc
lret
lret
push
fs
jo
cmpsl
push
fildl
iret
mov
pop
js
sar
mov
pop
inc
xchg
repnz
adc
dec
xchg
mov
cmc
int
jns
popa
cmp
jl
sbb
loopne
aas
xor
jnp
jge
xchg
pop
mov
xchg
out
addr16
add
xchg
sahf
mov
fiaddl
xorl
add
cld
out
cwtl
xchg
jmp
ret
fldt
in
ja
lret
or
lock
mov
sbb
aam
out
cmp
push
test
fsub
ret
ss
mov
push
cmp
mov
xchg
mov
inc
in
push
mov
repz
sbb
jle
jecxz
addl
jmp
lock
adc
push
xchg
push
mov
std
pop
jecxz
cmp
xchg
sbb
lret
inc
xchg
insl
mov
lcall
add
dec
add
sbb
dec
xchg
jmp
icebp
mov
and
pop
movl
or
int3
jecxz
dec
and
xor
dec
call
scas
jle
xchg
cmpsl
sub
xor
daa
xchg
mov
xchg
outsb
aam
call
imul
je
push
adc
or
js
jo
js
push
loopne
aaa
adc
push
sbb
pop
xor
imul
sub
jg
fwait
dec
roll
mov
dec
rclb
stc
dec
out
sub
popf
stos
mov
lahf
rcll
rorb
xor
dec
xchg
aam
pusha
xchg
cmpsb
add
inc
add
das
mov
das
pop
insb
adc
in
sarl
adc
testl
sarl
movsb
jecxz
cmp
aad
mov
and
dec
adc
repz
inc
adc
xlat
adc
and
mov
lea
aad
mov
ret
sub
pop
push
dec
push
add
and
xor
cmpsb
mov
push
and
sub
lret
pop
push
popa
ljmp
out
ljmp
cmc
addsd
insl
and
pushf
cmc
mov
fimuls
aaa
pop
lret
aas
xchg
ret
sub
rclb
pop
loop
cltd
sbb
cmp
dec
rep
cmp
movsl
negl
cmc
pop
jmp
pop
ja
xchg
push
cmp
or
cmpsl
in
push
ds
inc
cmpsb
adc
imul
out
lods
adc
fimuls
push
in
push
xchg
cli
mov
mov
popf
or
pop
jbe
fstpt
int3
lods
addr16
add
mov
pushf
fidivrs
cwtl
in
jns
pop
repnz
daa
pop
pop
mov
cli
pop
filds
movzbl
imul
rcr
repz
pop
jae
inc
ret
inc
xor
jge
pop
stos
cltd
std
xlat
stos
addr16
ja
mov
pop
or
jle
inc
call
sti
pushf
les
mov
mov
icebp
in
cltd
pop
inc
mov
dec
add
out
jg
and
popa
lds
shrl
lahf
pop
push
or
je
mov
mov
fcoml
cmpsl
movsb
sub
fnsave
mov
ret
push
ret
adc
addb
cmpb
orl
xor
xor
inc
mov
fldl
scas
add
or
jl
pop
fwait
push
xlat
mov
mov
out
jno
test
mov
add
jle
std
and
mov
fidivrs
in
ret
dec
popa
xchg
inc
jmp
inc
pmaxsw
dec
sbb
repz
add
jmp
fwait
add
ficompl
adc
add
mov
mov
pop
shl
cltd
in
push
jmp
dec
inc
add
or
repz
imul
sahf
repnz
mov
cmp
das
or
push
xchg
or
xor
loopne
nop
adc
inc
pop
out
push
insl
or
ret
push
or
xor
jbe
adc
and
sub
xchg
fisttpll
repnz
testl
fcoml
and
out
mov
sbb
aas
mov
repnz
fwait
jmp
inc
out
sbb
mov
or
out
fldcw
jo
mov
mov
rcrb
ss
test
lock
adc
mov
pop
mov
pushf
pop
fstp
xor
std
pop
xchg
je
xor
into
lea
sub
dec
mov
push
sub
cmc
push
outsb
push
data16
out
xchg
push
or
rcrb
and
sub
ja
mov
dec
test
mov
and
push
movsb
scas
mov
cmpsl
mov
arpl
shll
xchg
leave
add
mov
dec
lods
movsb
stos
loop
pop
fcomps
mov
adc
xor
xor
loope
pop
mov
jge
cmp
push
daa
sub
push
nop
jmp
movsb
repz
sbb
or
or
xchg
xchg
push
adc
mov
jmp
or
cltd
shr
popf
cld
sbb
rorl
mov
and
out
aad
lret
imul
mov
xchg
pop
enter
andb
inc
cmpsl
gs
insb
fdivs
fistps
leave
xchg
pop
mov
mov
loopne
repnz
mov
lret
xor
inc
aaa
shrb
xor
pop
jp
mov
fs
fsubrl
outsb
popf
dec
dec
add
cmc
jecxz
jge
xor
dec
xchg
nop
mov
sub
cmp
vpaddusb
inc
cmp
fwait
outsl
jbe
jle
mov
inc
jae
cmp
and
sub
cltd
bound
test
adc
mov
jne
loope
fwait
mov
fldl
and
push
adc
xchg
and
jecxz
lods
jb
lea
sbbb
call
pop
push
dec
repz
pop
xchg
pop
test
nop
or
loop
nop
or
adc
mov
lea
jge
ud0
fxch
adc
enter
dec
fprem
sbb
lahf
bound
bnd
ret
out
nop
push
add
mov
mov
shll
sbb
repnz
or
adc
lret
jp
pop
sub
mov
dec
mov
pop
inc
push
mov
das
test
sub
mov
out
lahf
pop
mov
testb
xchg
sbb
fninit
mov
sub
in
int3
dec
arpl
int3
mov
daa
outsl
imul
push
push
clc
pushf
mov
jg
push
lods
cmp
ja
loope
lock
xlat
pop
add
mov
cmp
or
add
inc
xor
xor
lcall
add
xchg
sarb
sub
jg
cmp
gs
cmpl
je
les
jecxz
dec
js
nop
push
fbld
cli
aas
clc
push
mov
and
loope
movsb
aad
mov
mov
inc
cmp
lods
fdivrl
inc
addr16
lods
gs
scas
aad
loope
fsubp
aad
pop
sub
pusha
dec
xchg
maxps
les
sbb
jne
loope
pmaddwd
test
popa
fnstcw
xor
or
lock
push
subb
movsl
movsb
pop
lods
je
lea
push
xor
mov
xor
sub
pop
xchg
in
pop
les
sbb
loop
sub
jge
mov
mov
adcb
in
mov
cli
scas
sbb
xchg
aas
sbb
jecxz
not
xor
cmp
bound
mov
add
add
std
mov
call
adc
cwtl
int
repnz
incl
xchg
xchg
ja
sbb
int3
pop
and
inc
addr16
hlt
push
icebp
or
cmpsl
cltd
dec
sbb
call
adc
sbb
dec
repz
roll
xor
dec
inc
jmp
mov
mov
mov
jmp
dec
dec
or
xchg
rcrl
aaa
xchg
int
push
mov
push
mov
loope
mov
loope
mov
xor
ljmp
gs
sbb
iret
adc
mov
out
not
loop
mov
mov
repnz
or
mov
push
roll
add
or
inc
jo
or
and
push
in
or
pop
pop
inc
lret
jne
ret
jl
or
cmpsb
pop
jns
scas
inc
xor
lcall
and
push
inc
jnp
sbb
push
imul
inc
mov
jecxz
ror
outsb
sbb
fwait
sub
fildll
sbb
add
mov
pop
aaa
or
call
fcoms
dec
pop
fmull
mov
xlat
orl
add
adc
negl
insl
pop
adc
hlt
cwtl
pop
pop
cmp
cli
shlb
out
ljmp
insl
das
mov
movb
jbe
stos
add
sahf
xchg
push
in
hlt
sbb
out
mov
data16
xchg
gs
xor
mov
pop
pop
lret
dec
fs
mov
aas
insl
jnp
mov
push
or
xchg
jne
inc
xor
push
push
into
hlt
fcompl
fwait
push
jmp
adc
lret
jge
xor
insl
aam
jmp
cmp
cmpsb
hlt
and
clc
or
sarb
adc
inc
je
cvtpi2ps
movb
dec
xchg
rcll
pop
ljmp
mov
dec
cmp
pushf
fcoml
int3
adc
pop
inc
es
enter
sbb
cli
enter
mov
fidivl
clc
mov
leave
jae
dec
xor
enter
fwait
xchg
lock
fstpl
adc
dec
cmp
add
xchg
cmpl
aaa
mov
push
mov
inc
aaa
inc
imul
push
cli
add
ret
push
pop
pop
jbe
popa
push
push
scas
pusha
dec
cmpsb
rcll
inc
std
test
jnp
mov
jge
push
sbb
hlt
sub
mov
std
push
xchg
into
xor
lret
xchg
push
negb
pop
seta
ja
pop
lret
inc
xchg
mov
sbb
addr16
pop
mov
xor
add
xorb
imul
cmpsl
jmp
lods
dec
jmp
dec
or
adcb
leave
shl
adc
loop
jbe
shll
inc
clc
push
iret
movsl
dec
int3
faddl
aam
sub
xlat
out
lret
mov
dec
adc
fldenv
or
push
mov
rorb
xorl
sub
pop
out
shrl
mov
cmp
jecxz
push
movsb
ja
scas
dec
neg
dec
pop
notl
sub
pop
pop
sub
pop
movsb
xor
mov
ds
push
adc
mov
into
or
mov
sbb
leave
add
mov
ds
xor
jbe
xchg
push
das
clc
cmc
fs
lret
mov
lcall
scas
add
dec
jne
jmp
xor
lret
mov
nop
xchg
or
ret
cmp
lcall
ret
lea
icebp
jo
sbb
int3
and
xchg
or
arpl
movsl
add
jl
pop
bound
adc
int3
add
mov
out
jne
push
xor
add
mov
pop
mov
inc
popf
in
mov
clc
add
scas
jle
iret
nop
jg
mov
pop
sub
push
sub
jbe
xor
cmp
jecxz
cmp
int3
sub
clc
push
por
es
pop
enter
dec
or
mov
push
sbb
mov
filds
popf
hlt
mov
mov
mov
out
call
cs
sub
mov
mov
sub
push
aam
jle
popa
aam
test
cmpsl
dec
mov
insl
mov
popf
imull
or
pop
fsub
sbb
ret
or
in
jp
sub
inc
sub
sbb
scas
outsb
outsb
mov
fildll
mov
adc
inc
sub
icebp
mov
or
in
cld
loop
xor
or
inc
jae
bound
into
or
inc
dec
lods
xlat
mov
hlt
push
pop
adc
pop
jl
mov
test
out
in
popf
sub
mov
es
inc
cmpsb
mov
push
jg
sbbl
test
xor
ss
in
hlt
push
pop
xor
rol
add
movsb
mov
aaa
cli
jecxz
jns
dec
cmp
jae
and
xor
or
pop
cmpsl
out
rcll
test
xlat
js
icebp
insl
cmpsl
inc
pop
and
mov
xor
jnp
mov
test
sub
add
loop
out
xor
daa
push
pushf
sbb
adcb
adc
inc
cmp
or
mov
mov
pop
ds
sub
jnp
sub
inc
dec
aaa
pop
inc
mov
sti
lods
adc
les
jmp
xchg
lods
and
ljmp
inc
imul
sbb
mov
call
lods
push
mov
sub
cmp
add
mov
lret
xchg
stc
in
push
jmp
fimull
pop
jmp
lock
xor
gs
shr
pop
xchg
mov
mov
gs
int3
das
xor
std
jne
clc
test
imul
jnp
mov
mov
adc
lahf
jae
jns
add
mov
das
test
in
xchg
fimuls
pop
pop
fnsave
mov
or
mov
decb
add
push
or
jecxz
pop
sbb
xor
roll
or
es
rolb
sub
cli
out
test
sub
or
lds
mov
decl
fdivrs
dec
sub
pusha
cmpsl
lock
xchg
cmp
push
jmp
pop
iret
inc
pushl
mov
xor
xchg
inc
cmpsl
push
mov
mov
push
or
imul
add
adc
jg
sub
push
das
ret
insl
cmc
and
fadds
es
mov
daa
daa
mov
sbb
mov
nop
xchg
imul
xor
arpl
addr16
loopne
xor
mov
adc
and
scas
sub
out
pop
mov
je
or
aam
adc
pop
ret
das
jl
pop
cmp
xchg
out
insb
cmp
jmp
sbb
sub
xchg
mov
xchg
xor
inc
inc
ja
call
cmpsb
daa
jo
cmpsl
pop
lds
push
lods
jno
cmp
sub
jne
pop
and
and
inc
mov
xchg
pop
jp
xchg
les
lds
adcb
xchg
inc
cli
in
mov
test
jp
xlat
lahf
lods
in
jns
repnz
jnp
mov
insl
shrl
aam
mov
sub
or
nop
pop
fcmovb
outsb
js
lret
sbb
mov
push
cmp
movsb
push
xor
imul
insl
adc
mov
ss
aam
xchg
roll
cmpl
push
jb
lcall
data16
fs
xchg
in
lret
adc
les
adc
mov
icebp
shlb
imul
std
scas
aad
into
mov
mov
movsl
add
das
in
cmp
inc
xchg
mov
emms
and
jg
test
rclb
andl
mov
inc
test
stos
xchg
jmp
cmp
xor
lea
adc
xchg
mov
sahf
push
push
push
pop
pop
inc
pop
inc
loop
or
or
push
ret
cld
inc
nop
iret
jle
enter
xchg
sub
pop
and
push
and
xchg
xchg
fisttpl
loope
sbb
lods
fadds
xor
mov
xor
sub
mov
bswap
xor
xor
addr16
jge
out
mov
psubsb
and
cli
or
fdivs
and
xchg
adc
mov
and
movsb
push
pushf
add
out
sbb
test
cltd
inc
test
cs
xchg
xchg
push
data16
movsl
sub
stc
jg
xchg
out
xchg
inc
rcll
mov
ja
xchg
cs
insb
ds
mov
testb
inc
adc
push
xor
cmpsl
sub
ja
cmpsl
test
sub
arpl
mov
pop
xchg
pop
sbb
xor
shrl
mov
adc
cli
dec
cld
outsb
mov
inc
mov
or
push
push
push
adc
sub
or
int
lds
pop
xor
mov
movsl
enter
adc
in
sub
or
push
repz
outsb
sub
cmp
bound
jmp
dec
roll
fldl
adc
jge
mov
pop
push
and
inc
pop
or
loop
jg
into
pop
std
in
outsl
or
adc
sub
adc
add
cmpsl
lahf
ds
or
ds
xabort
imul
inc
fiadds
je
dec
adc
mov
aaa
into
mov
movsl
push
xchg
dec
fistpl
inc
dec
jmp
cmp
add
int
jae
mov
clc
cmc
adc
adc
arpl
jno
sub
xchg
clc
lahf
jg
hlt
das
adcb
scas
mov
sti
jg
mov
test
fbstp
mov
insb
adc
sub
aad
mov
ljmp
adc
sbb
dec
pop
stc
dec
aas
push
leave
adc
jle
mov
shlb
aam
sbb
jne
fwait
mov
sbb
push
xor
xor
inc
pop
enter
call
xchg
and
jae
mov
pop
xor
push
xor
iret
icebp
jo
inc
gs
jle
pushf
sub
dec
sahf
jns
or
int3
xchg
and
or
inc
inc
dec
cmp
pushf
jg
and
xor
in
mov
lcall
mov
sahf
cmp
cmp
xchg
mov
add
outsl
std
push
cmp
fwait
mov
xchg
lock
or
iret
stos
inc
ja
mov
jle
mov
fcomps
or
fisttpl
pop
pop
shrb
and
xchg
sub
cmp
mov
repnz
pop
mov
daa
enter
or
add
fs
mov
xor
fucomip
test
mov
inc
mov
inc
ss
loop
adc
out
pop
sbb
inc
sub
cmpsb
imul
sub
inc
jl
or
outsl
adc
cmp
gs
bound
push
std
dec
out
pop
loope
mov
pop
mov
or
pop
pop
sub
mov
inc
mov
arpl
dec
sbb
and
xchg
dec
inc
es
rorl
inc
std
icebp
push
into
pop
cmp
out
jns
mov
test
pop
push
fsts
adc
mov
shlb
push
nop
lahf
test
stos
cwtl
ret
add
cmp
add
mov
ss
rcll
cmc
sbb
mov
or
hlt
pop
lds
insb
test
sub
pop
xchg
leave
xlat
lahf
jns
xlat
test
stos
mov
pop
or
pop
jle
test
pop
lods
and
mov
in
or
or
insb
rep
mov
je
push
jne
dec
jecxz
repz
dec
cmpsb
fildl
sbb
push
jbe
inc
in
in
xchg
ret
cltd
jmp
data16
mov
mov
push
cmp
in
dec
mov
fwait
cmp
adc
enter
and
add
xchg
cmc
cmp
stos
stc
imul
out
and
jmp
inc
jno
outsl
push
enter
movsb
popf
fldt
push
mov
fwait
sub
cmc
jge
mov
movsl
lret
loope
enter
aam
xor
sbb
lea
jns
xorb
add
xchg
push
test
cmc
pushf
les
xchg
mov
xor
ljmp
mov
xor
jge
push
je
sub
adc
nop
rclb
movsb
xchg
pop
iret
xor
std
les
incl
mov
dec
push
insl
std
sub
orb
push
fsub
js
xchg
fisubs
mov
popa
andb
push
out
add
cmp
loope
mov
cmpsb
push
push
sbb
cmc
out
mov
mov
sbb
rolb
sub
push
mov
adc
int
ret
in
adcb
movsb
std
cmpsl
daa
test
mov
orb
pop
sbb
dec
nop
pop
in
or
das
mov
sti
pusha
mov
jecxz
pop
adc
mov
in
iret
ja
mov
lahf
sub
movsb
mov
mov
fiaddl
mov
pushf
pop
jl
iret
add
inc
pushf
lret
lahf
dec
jbe
mov
sbb
cld
jecxz
mov
push
xchg
jmp
cmp
inc
mov
mov
jl
pop
adc
xor
adc
pop
and
inc
adc
mov
mov
arpl
lahf
xchg
jnp
xor
lds
or
xchg
mov
cmp
cmp
fimull
inc
sub
push
lcall
mov
test
aaa
stos
test
and
pop
jb
inc
add
lds
and
push
push
mov
enter
xchg
mov
loope
repz
push
push
sbb
and
or
outsb
xlat
jle
aaa
jno
jle
xor
cmpsl
mov
sub
xchg
pop
pop
mov
jl
repz
out
test
daa
mov
cwtl
add
jo
and
into
and
or
loope
test
and
rcrl
lock
pushf
pop
lahf
inc
or
push
stos
frstor
out
les
adc
sti
lahf
xor
xor
inc
daa
add
cmp
sub
shll
ds
test
ljmp
pushf
push
xor
mov
push
in
mov
jb
lods
adc
jp
maskmovq
testl
lds
daa
imul
out
jbe
push
xor
xorb
mov
pusha
push
shll
cmpsl
loope
mov
pop
out
dec
adc
cmp
xor
out
dec
cwtl
adc
jp
push
jns
subl
aas
cmc
cmp
push
jo
popa
sarb
mov
cmpsl
cmp
and
in
scas
lea
inc
xchg
mov
inc
jns
repnz
xchg
pop
pop
mov
jae
icebp
and
mov
xor
and
fisubs
and
in
sub
loopne
mov
jo
jge
jmp
sub
mov
aaa
ds
or
xchg
cld
lret
cmp
xchg
cwtl
imul
jb
andb
mov
nop
pop
xor
mov
push
lock
dec
or
adc
stos
scas
imul
or
pop
push
nop
and
ds
adc
push
push
mov
pop
mov
jle
das
xor
pop
out
cld
mov
inc
in
sbb
sbb
in
gs
add
xor
pushf
pop
lds
faddl
fwait
rclb
cmp
cmpsl
adc
in
ja
cmp
rcrl
inc
int
cmp
cmp
scas
sub
jb
out
cmp
jbe
addr16
xor
dec
lret
xor
out
lods
add
insl
scas
mov
inc
popf
imul
inc
stos
jl
ds
lods
push
fstpt
imul
ljmp
sbbb
cs
loop
std
add
push
add
stos
jae
dec
push
dec
jecxz
int3
test
mov
and
repnz
pop
jg
insb
rolb
outsl
inc
sti
cmp
imul
or
pop
adcl
lret
popa
xor
das
imul
push
mov
cmp
mov
mov
jg
std
xchg
stos
dec
rclb
cmp
popf
push
shll
insl
mov
sub
mov
fdivl
adc
and
add
iret
mov
sti
out
dec
cmp
xchg
cmpsb
jle
sarl
xchg
iret
cmp
loop
jbe
test
jle
nop
jp
test
test
lret
lds
jne
mov
sbb
pop
jo
xchg
popa
jmp
fistpll
test
shl
or
in
push
jp
lahf
cmp
mov
adc
outsl
pop
mov
sub
dec
rclb
dec
in
dec
adc
xor
nop
jno
or
inc
pop
sbb
ficoms
pop
cmp
xorb
rcrb
or
jne
dec
fstps
jbe
pusha
repnz
jecxz
sub
jne
push
mov
lret
out
loopne
out
and
icebp
mov
push
mov
xchg
in
adc
mov
xchg
fiaddl
sbb
nop
push
and
sbb
test
imul
cs
sbb
popf
mov
mov
mov
cmp
mov
cwtl
push
in
jb
shlb
lods
ret
cmpsb
add
adc
mov
insb
les
loopne
adc
xor
cmp
jmp
imul
minps
ret
jae
inc
push
in
fistps
test
xor
pop
push
dec
mov
mov
in
push
mov
orb
hlt
lods
mov
mov
mov
pushf
insb
push
add
mov
xchg
aas
popa
xchg
inc
addb
aam
inc
sub
inc
popf
inc
mov
sbb
sti
xor
fcos
ja
in
ds
test
xchg
sbb
rcr
lcall
scas
out
mov
add
enter
mov
fdivr
fbstp
mov
lret
lea
nop
loop
hlt
popf
and
or
aad
mov
call
xchg
pusha
mov
shll
xchg
enter
roll
pop
stos
xorl
jecxz
pop
shr
cmpsl
xchg
xor
imul
pop
aas
daa
mov
aas
das
not
cmp
sbb
adc
rcl
sub
insb
mov
lods
xchg
test
pop
mov
movsl
pusha
jp
cmc
in
mov
in
rolb
xchg
add
movsb
inc
dec
pop
test
cmpsl
leave
push
ret
adc
add
lcall
or
add
adc
int
and
push
data16
mov
sbb
mov
imul
push
lock
lcall
mov
ret
cmpsb
mov
lret
movsl
or
clc
sar
clc
test
add
mov
xchg
jle
pop
sbb
or
pop
sub
cmp
dec
sub
adc
xchg
cmp
out
push
shl
mov
push
mov
inc
lret
ffree
mov
test
out
jnp
xlat
lds
loope
cmc
inc
sub
or
mov
xchg
jno
sbb
stos
lret
push
push
inc
repnz
sub
ja
les
outsb
imul
jl
and
lods
cmova
lahf
dec
jmp
fcoms
ljmp
movsl
dec
call
xchg
and
adc
fidivrs
jne
add
lds
rorb
push
cmp
shlb
cmp
lds
add
sbb
xchg
push
aad
add
hlt
adc
push
rcr
push
fidivl
std
call
mov
aam
pop
fstps
push
mov
push
or
rcrb
xchg
in
mov
jo
mov
xor
fwait
dec
add
ret
cmpsl
add
stc
mov
ret
lods
and
orb
jecxz
add
mov
out
ja
out
jno
daa
inc
aam
sahf
add
mov
fs
out
inc
aad
leave
sbb
cmpsb
push
jne
mov
std
dec
sub
sarb
add
fcomip
test
pop
cs
mov
lret
dec
test
inc
cltd
xchg
mov
popl
and
or
lcall
les
stos
iret
dec
hlt
xlat
rorb
out
xor
mov
ljmp
scas
add
push
dec
xlat
loope
and
fsubr
cmc
inc
mov
add
push
inc
mov
fcoms
rcll
jg
jecxz
fbld
mov
aaa
lret
cwtl
adc
scas
add
mov
js
cmp
loopne
mov
js
xor
imul
stc
test
incl
shlb
leave
jle
repz
ret
mov
ljmp
pop
or
push
inc
subb
ret
mov
testl
loop
inc
repnz
enter
fidivrs
rcr
out
pop
aam
jg
push
jo
test
mov
mov
xchg
inc
add
testb
jno
sub
fwait
sub
into
adc
lea
ret
cltd
cmpsl
movsl
add
divl
add
insb
fucomip
add
dec
dec
inc
std
lretw
sub
lods
or
dec
fsubs
lods
jmp
sahf
mov
inc
inc
mov
stos
xor
pop
and
dec
mov
push
ss
mov
xchg
jnp
bound
rclb
xchg
add
dec
mov
scas
shrl
cmp
popa
divb
dec
or
or
sahf
push
mov
cmpsl
mov
jb
icebp
iret
lcall
push
sbb
aad
testb
cld
xor
push
sbbl
inc
xor
xor
shlb
fadds
dec
stos
mov
jmp
ss
test
test
push
sub
bound
sbb
std
scas
mov
aaa
sub
dec
sub
mov
pop
in
mov
loop
fisubrs
in
or
push
ficoms
add
sbb
and
daa
call
xor
push
mov
adc
outsb
dec
sarb
jne
arpl
sub
and
stos
rolb
std
xchg
add
jb
fistpl
fdivs
lock
push
dec
push
push
cmpsb
fdivrs
call
mov
and
std
out
shll
push
xor
mov
add
xchg
gs
pop
mov
mov
xor
jl
jle
and
frstpm(287
push
lds
fisttpl
mov
lret
mov
inc
rcl
xlat
jl
popa
lea
pushf
repnz
jle
sti
xorl
xchg
and
popf
mov
push
jg
cwtl
nop
cwtl
repnz
lahf
mov
pushf
idivl
xchg
add
mov
inc
xorb
dec
mov
movsl
xchg
adc
jl
push
popa
cmp
or
xor
push
mov
or
mov
loopne
xlat
shl
popa
jns
sti
jb
xchg
decl
jbe
jecxz
or
xchg
cmc
fisubrs
aas
and
fisubs
xchg
mov
xor
pop
adc
xorb
dec
or
inc
lods
int3
inc
or
fldenv
or
aam
mov
pop
fwait
push
out
repz
xchg
mov
inc
xchg
in
push
jo
stos
mov
in
aam
shll
sbb
sbb
adc
xlat
dec
ror
cmp
mov
jb
jp
jecxz
popa
int
cmp
orb
into
sbb
loopne
bound
cmpsl
pop
pusha
es
jbe
test
and
shll
test
dec
add
testl
adc
inc
cmpb
orl
inc
mov
subb
jp
sub
pusha
xor
lock
lock
inc
or
and
xlat
stos
shl
push
es
dec
cwtl
fimull
orl
arpl
mov
mov
sahf
pusha
lahf
xchg
test
stos
push
cmpsb
mov
mov
cltd
pop
push
dec
out
push
or
data16
mov
pop
fcmovnb
jne
inc
jecxz
movsb
push
sahf
cmp
add
ret
mov
adc
cwtl
out
xchg
sbb
mov
popf
xor
xchg
cmp
jle
push
inc
dec
out
xchg
xor
inc
xchg
int
imul
adc
fstps
js
pop
sub
cmp
imul
js
cmpsb
or
mov
adc
enter
call
cmp
push
cltd
fidivs
lahf
mov
add
xor
imul
push
xchg
adc
arpl
mov
jb
jge
push
andl
sbb
xor
pop
mov
jb
mov
cs
pop
and
cwtl
mov
leave
xor
mov
scas
or
add
int
fistl
lahf
into
jbe
lds
push
sbb
leave
sub
inc
adc
lea
jl
jmp
lea
pop
adc
popa
add
sahf
pop
call
jecxz
insl
sub
out
adc
push
jae
fcoml
jnp
mov
sbb
imul
mov
xchg
inc
mov
pop
cld
sbb
loopne
jg
push
insb
test
roll
xchg
insb
cmpsl
push
mov
stc
lahf
jge
mov
jl
jp
pop
xchg
push
aaa
out
xlat
ja
cmp
push
insl
add
clc
xchg
outsl
mov
push
sti
add
xchg
cmc
cltd
les
je
clc
test
mov
cli
cmp
pushf
pop
std
or
insl
cmp
aam
add
xchg
shl
mov
pop
and
pop
in
lret
xor
roll
into
dec
aas
cmp
mov
cmp
and
mov
pusha
adc
loopne
xor
ss
xor
push
shll
dec
xchg
rclb
popa
sbb
daa
dec
xchg
mov
jnp
dec
stc
xchg
pop
adc
jmp
inc
lock
cld
add
ss
pop
pusha
or
sbb
cmpb
fmuls
loope
stc
pop
rorb
pop
mov
pop
jne
mov
xchg
mov
xor
cltd
cmpsl
mov
cmp
sbb
cmp
push
test
not
push
das
ljmp
fcomi
outsb
enter
sti
and
or
mov
sub
sub
loope
scas
stos
pop
adc
push
jecxz
out
cli
sahf
mov
jnp
xchg
mov
pop
shl
es
sarl
ffree
into
mov
hlt
outsb
cli
loope
imul
rcr
mov
lret
mulb
out
in
cmp
mov
rcr
xchg
sbb
jmp
xchg
sub
aad
cmp
sub
out
cmp
pop
data16
xor
push
push
jmp
hlt
out
orps
bound
pop
lea
mov
cltd
fldenv
lret
fistps
xor
int3
add
fsubs
nop
mov
or
out
testl
pop
pop
xor
cltd
sbb
mov
dec
cmp
stos
lods
pop
sti
jmp
cs
inc
rorl
ljmp
mov
fldt
mov
xor
pop
mov
pop
lahf
jo
jge
loope
repnz
jl
add
repz
push
adc
xchg
jb
rclb
pop
nop
pop
sub
jge
add
sbb
arpl
push
gs
js
lahf
orb
bound
testb
hlt
push
dec
adc
sbb
dec
les
cltd
shlb
dec
faddl
xlat
rolb
fimuls
push
dec
push
pop
popa
sbb
mov
add
scas
jne
push
loopne
jne
sti
loop
or
sub
push
and
fucomi
in
clc
cwtl
fnsave
xlat
add
out
cmpsl
ret
shrb
hlt
mov
ja
mov
faddp
lcall
and
mov
ljmp
daa
in
inc
call
iret
aam
mov
mov
and
cmp
lcall
ljmp
jle
jecxz
or
idivl
mov
mov
jg
filds
and
dec
sahf
and
cwtl
insl
pop
xor
add
and
daa
pop
cltd
sub
sbb
mov
xor
push
adcl
addb
sbb
jns
test
dec
nop
popa
xchg
mov
inc
orb
repz
cld
cmp
loope
movsl
ja
in
ljmp
call
and
test
xor
fisttpl
cmp
pusha
test
dec
int
jnp
mov
push
inc
test
test
fwait
cmp
divl
pop
fmuls
das
in
mov
gs
adc
cwtl
add
out
lds
das
adc
daa
inc
push
adc
nop
test
inc
cmp
push
fidivrl
jge
jno
xor
sbb
jg
stos
jne
add
mov
dec
jmp
mov
iret
test
out
xchg
xor
insb
mov
ret
mov
mul
lock
mov
mov
mov
negl
xchg
fistpl
push
cmp
dec
fildll
mov
jmp
std
lret
and
lock
xlat
mov
les
test
inc
into
test
mov
xchg
into
xchg
pusha
xchg
mov
mov
mov
pop
mov
bound
nop
rorb
jp
je
xor
arpl
or
fldcw
dec
mov
je
test
fdivp
test
dec
fs
jnp
shll
test
loop
jg
xchg
stc
sub
hlt
xor
stos
out
insb
dec
enter
mov
xchg
jle
mov
mov
ds
movsb
divb
mov
sbb
mov
call
cltd
sahf
sbb
cmpsb
in
jns
iret
movsb
outsl
jle
sbb
imul
aas
popf
ljmp
jne
and
jg
fildl
leave
sbb
outsl
test
push
mov
lahf
addl
mov
ljmp
sub
leave
sbb
and
nop
inc
not
and
adc
icebp
loop
ret
inc
rcrb
pop
bound
xor
cmc
jnp
pop
fidivs
outsb
lcall
scas
fldl
sbb
movsb
shrb
xor
or
outsb
pop
outsl
jle
xchg
nop
scas
test
daa
test
cmp
ss
adc
mov
cs
push
sahf
inc
jp
xor
insb
cld
cmp
push
xchg
add
aam
pusha
sub
pop
insb
lcall
dec
scas
mov
lret
shll
lret
mov
or
gs
outsb
push
lcall
and
push
cli
loop
lret
dec
inc
in
jnp
fdivs
int3
sub
xchg
mov
stos
mov
and
aam
pop
cwtl
inc
outsl
rcll
push
or
dec
mov
jns
sub
jle
push
int
add
sbb
cmpl
inc
add
inc
icebp
and
cld
cmp
loop
fwait
mov
ds
outsb
jo
jge
into
xlat
sub
sbb
cmp
xchg
movsb
fisubl
in
mov
frstor
mov
push
pop
sub
in
mov
xchg
mov
or
filds
push
daa
or
iret
jbe
jo
inc
stc
or
js
ss
out
pop
dec
fld
sbb
arpl
call
or
or
cwtl
sar
push
inc
lods
xor
test
mov
test
addr16
jp
and
or
xor
aam
xor
pop
stc
adc
adc
xchg
mov
xor
in
jae
inc
idivb
ret
mov
mov
xchg
enter
lea
out
sti
cli
push
jl
leave
fisubrl
push
imul
clc
or
daa
in
outsb
std
inc
mov
add
xchg
clc
cli
sub
es
imul
fcomps
mov
mov
sti
aam
mov
repz
popf
cmp
dec
mov
sub
jns
fs
enter
mov
js
or
aaa
sarl
in
arpl
push
mov
adc
or
dec
ret
push
scas
inc
dec
mov
push
dec
ljmp
and
pop
mov
call
jp
jne
aaa
xchg
sbb
pop
jne
xor
sti
xchg
fs
sub
xchg
inc
pavgb
pop
std
in
out
dec
xchg
jb
xor
mul
xor
jl
push
jecxz
push
pop
jge
insb
popa
mov
xchg
bound
cmp
cli
jnp
insl
call
mov
scas
mov
test
sbbl
popa
fcom
sub
jmp
rol
lcall
orl
dec
mov
cmpsb
mov
jge
cmp
leave
cmpb
fisttpll
xor
pop
jns
cli
xadd
ret
fdivrp
nop
mov
mov
arpl
mov
dec
scas
xchg
pop
mov
mov
in
repz
push
and
dec
jo
rcrb
cwtl
hlt
adc
sbb
mov
lahf
leave
les
iret
rcrl
pminsw
dec
adcb
inc
fdivr
das
call
xchg
pop
mov
push
les
sbb
push
scas
pop
hlt
cmp
pop
lods
in
mov
dec
mov
jl
pop
pop
cmpsb
xor
jmp
bound
push
cmp
adc
jae
dec
jno
mov
rcr
sbb
xor
jbe
or
pop
ret
mov
bound
pop
in
leave
mov
jp
inc
lea
sbb
data16
jg
push
cmpsl
cmp
xchg
jnp
sar
push
fldcw
cs
ljmp
mov
stos
sbb
aam
fisubrs
lcall
divl
icebp
in
incb
mov
out
xchg
sub
dec
dec
xor
lret
cmp
iret
add
dec
dec
pop
dec
inc
in
dec
cld
subb
pop
mov
sahf
or
flds
inc
or
std
clc
pop
aam
mov
or
pop
jle
insl
cmp
addr16
adc
dec
cmp
mov
sub
das
adc
out
push
xor
inc
add
les
jecxz
mov
inc
je
jae
loope
pop
sbb
xor
push
das
push
dec
ss
test
xor
mov
fwait
leave
and
xor
call
rol
push
push
adc
or
sbb
xchg
push
sbb
xchg
scas
sbb
jno
pop
movsl
jge
pop
xchg
sbb
mov
mov
rorb
inc
mov
xchg
in
add
nop
jge
int3
or
and
jae
push
cmp
jmp
outsb
sub
jg
sahf
pop
dec
cltd
ja
push
lret
mov
outsb
cmp
add
inc
cmp
xchg
dec
out
mov
sub
pop
es
int
cmp
lret
jmp
xorl
sbb
jecxz
xchg
lods
hlt
loope
sahf
pop
jg
lock
dec
incb
sti
or
insl
push
sub
std
xor
sub
scas
cmp
add
bound
movsl
aas
sbb
xchg
lcall
xor
loopne
lea
dec
mov
mov
mov
imul
add
push
and
fnstcw
inc
repnz
pusha
imul
sbb
add
mov
jmp
nop
adc
sub
fcomps
cmp
jne
and
adcb
inc
mov
xor
sahf
ret
imul
nop
sti
xor
pop
xchg
pop
fs
xchg
dec
into
cmpsb
push
sub
pop
enter
pop
bound
lods
adc
outsb
call
test
jl
pop
xor
pop
fcmove
rolb
push
das
rorb
adc
adc
in
xor
nop
fsub
mov
stos
sub
scas
shll
je
xor
insb
ljmp
or
or
dec
sbb
icebp
push
xchg
lods
sub
or
mov
sub
test
shrb
in
loopne
ffreep
mov
ret
mov
mov
bound
cmp
repnz
repz
in
xchg
jge
cmp
dec
xchg
arpl
push
adc
and
or
sub
fldt
inc
mov
jmp
mov
mov
das
popf
mov
dec
add
cs
fidivrs
jb
jne
loop
jmp
adc
mov
inc
cmp
xlat
repnz
mov
cmp
inc
pop
outsb
sbb
cmp
add
aam
loope
mov
ss
add
add
sub
inc
hlt
in
fxch
fimull
jnp
stc
sub
jae
mov
movsb
mov
xor
out
imul
and
lea
push
leave
push
stos
fcomip
gs
cmp
outsb
push
sbb
or
negb
mov
loope
sbb
lock
sbb
or
jns
sbb
loopne
jmp
mov
or
in
inc
push
xchg
adc
sbb
test
add
int
cmp
jno
popf
out
lds
lahf
push
imul
and
stos
out
cmpb
push
push
or
mov
movsb
aad
jmp
sahf
fildll
inc
ss
movsb
mov
in
repz
loope
mov
add
adc
pop
aad
mov
imul
jp
push
sub
add
xchg
add
in
mov
push
stc
push
mov
ss
int
sub
push
mov
rcll
imul
and
xor
fcomi
xor
push
xor
mov
push
in
sarl
imul
pop
pop
jbe
aam
test
add
mov
int3
nop
js
cltd
sbb
dec
or
in
cmp
imul
push
pop
in
adc
push
repz
ljmp
mov
push
pop
push
sub
pop
xorb
dec
jae
mull
insl
lret
fdivp
adc
push
stos
and
or
test
xchg
test
xchg
cmp
jb
lds
dec
pop
fldenv
pop
sbb
into
lret
push
enter
jo
xor
aas
or
jb
in
pop
rorb
xchg
sahf
mov
xchg
mov
pop
lret
cmc
lret
adc
or
pop
scas
xchg
sub
mov
inc
mov
add
push
push
cmp
imul
xchg
jbe
or
add
lahf
cltd
cmpl
clc
sub
movsb
sub
sti
filds
shll
ret
mov
fcomip
into
test
push
sub
inc
pop
repnz
clc
inc
fmuls
sub
or
leave
dec
mov
and
scas
data16
shll
ficomps
push
sbb
xchg
push
imul
xlat
call
mov
jb
outsb
xchg
push
mov
pop
add
xlat
mov
rolb
sub
cli
lret
mov
mov
je
rcr
pop
add
adc
dec
repz
faddp
in
imul
jmp
push
dec
add
clc
les
pushf
lahf
pop
bswap
adcb
rcr
int3
out
adc
sub
fcmovu
bound
lods
out
inc
jb
and
xchg
mov
mov
dec
push
arpl
out
mov
xchg
sbb
jp
mov
xor
pop
sub
mov
xor
push
mov
cmpsl
fxch
fucom
int
jns
mov
mov
fisttps
xor
outsl
push
xchg
fidivrl
jmp
mov
jl
xchg
mov
add
mov
icebp
dec
aad
pushf
mov
dec
jecxz
sub
lods
cltd
arpl
popf
mov
mov
add
imul
push
mov
shr
xchg
lods
sbb
cmp
sbb
push
das
and
hlt
in
jp
cmp
das
push
stos
test
jg
jle
xchg
ljmp
xchg
fcoms
imul
out
dec
outsl
imul
enter
mov
or
mov
add
xor
out
int
sbb
movsb
into
js
mov
sub
mov
push
xor
jl
aam
repnz
xor
adc
push
sbb
jb
repz
push
inc
cmp
test
push
mov
adc
out
pop
lcall
fs
xchg
fcoml
add
inc
out
and
mov
testb
cmpb
inc
or
pusha
jne
fsubl
ljmp
xchg
in
insb
push
sets
out
sub
into
pop
insb
xchg
or
fwait
popa
lds
xor
cmc
jno
xchg
out
enter
je
mov
lock
xchg
fildll
andl
pop
jnp
flds
inc
arpl
int3
xchg
or
xchg
xor
xor
shll
dec
ds
out
daa
lea
dec
in
insl
je
xor
sbb
stc
je
aam
negl
dec
push
push
pop
mov
imul
ret
nop
adc
fdivl
and
es
xchg
rorl
mov
inc
sbb
xchg
movsb
dec
cmpsl
in
pop
in
adc
bound
mov
scas
into
repnz
and
mov
enter
or
dec
mov
jo
xchg
repnz
sbb
shll
fs
and
xor
mov
daa
pop
addb
repnz
cwtl
sub
dec
cmp
cmp
out
subb
fnstsw
shrb
popf
dec
mov
xchg
add
push
movsl
or
data16
add
insb
outsl
cld
inc
fwait
mov
mov
scas
lret
inc
lods
inc
addb
pop
addr16
push
or
mov
dec
cmp
daa
mov
dec
sti
and
mov
ja
xor
mov
cli
insb
and
adc
inc
mov
fcoms
cmp
pop
mov
in
lods
sbb
in
shll
pop
mov
rcrb
sbb
sbb
push
cwtl
enter
xchg
mov
dec
xor
test
xchg
xchg
sbb
bound
dec
lock
subl
movsl
das
add
adc
dec
dec
fwait
xchg
cmp
jb
dec
adc
dec
cmp
popl
push
mov
rorb
dec
xlat
push
mov
shl
and
rol
repnz
jne
mov
movsl
pop
sbb
sbb
negb
sbb
pop
invd
je
je
stos
fldl
test
imul
add
cmc
test
int
cmp
sbb
cmpsl
es
adc
pop
gs
dec
jb
aam
and
mov
sbb
cmc
mov
das
mov
mov
mulb
cmp
iret
les
jge
lret
shlb
jbe
push
les
int
cmpl
sbb
idiv
mov
add
int3
sub
inc
push
jmp
int3
ds
xchg
lahf
mov
out
fidivl
in
cli
sub
gs
andb
push
or
sub
sub
dec
inc
cmp
ds
in
cmp
ss
cmp
daa
cwtl
rcl
daa
and
jnp
dec
push
adc
lret
fisttpll
imul
arpl
and
pop
rcrb
rcrb
jne
out
sub
push
hlt
lods
inc
fadd
pop
mov
shr
xchg
clc
pop
pop
jb
aad
push
cmpsl
jbe
arpl
jle
sub
adc
mov
int
pop
in
jnp
lea
pop
cmp
dec
fisttpl
lcall
fsubr
movsl
jno
push
es
in
movsb
lea
ds
std
lcall
movsl
stos
pop
sub
lock
mov
movsb
das
push
xchg
pop
mov
xor
or
push
dec
cli
mov
xlat
in
outsb
pop
cld
jp
fwait
sarl
loopne
sub
pop
fmuls
mov
cmp
in
adc
dec
clc
pusha
mov
out
cld
out
sbb
mov
push
mov
sub
cmp
mov
fwait
ror
lret
mov
jl
rcrl
icebp
push
outsl
mov
sarl
cmp
aas
sbb
or
add
fadd
popf
orb
mov
mov
movsl
sarl
mov
mov
daa
mov
push
add
and
mov
push
insl
arpl
cmp
xlat
xlat
cmpsl
les
xchg
mov
mov
pushf
mov
mov
push
mov
jmp
insb
ret
scas
jne
scas
lret
inc
sbb
data16
mov
mov
dec
out
rorb
dec
fisubl
bound
loop
xor
add
insl
jo
inc
pop
mov
enter
ja
mov
mov
add
insl
mov
out
out
jge
push
mov
inc
jne
sbb
mov
aam
loope
or
add
popl
add
mov
out
fsubrl
addr16
cs
cmpsb
fistpll
mov
arpl
jb
xchg
cld
lea
adc
cwtl
les
je
sub
sahf
mov
lea
cvtdq2ps
xor
loope
pop
cld
mov
pop
mov
cmp
add
cmp
inc
int3
push
das
sti
push
push
leave
nop
iret
push
mov
mov
mov
dec
jae
add
jbe
jnp
out
daa
mov
mov
es
lahf
ljmp
pop
mov
pop
mov
jmp
sbb
or
lds
jns
insb
and
cwtl
push
in
stos
mov
sahf
leave
pushf
cmpb
cwtl
stos
mov
aaa
add
push
push
insb
lmsw
scas
inc
movsb
and
xor
and
mov
les
andb
pusha
dec
jbe
iret
lcall
daa
sub
daa
les
xor
shl
xchg
pusha
mov
xor
push
cltd
inc
dec
jns
and
hlt
loopne
stc
mov
dec
shl
insl
xchg
int
repnz
inc
dec
int
scas
push
rcr
push
loope
dec
mov
inc
and
bound
mov
jecxz
fnstcw
sbb
std
pop
or
dec
mulb
adc
inc
jb
mov
lock
rorl
push
xor
mov
push
push
xchg
sbb
lds
add
dec
and
dec
sbb
mov
push
dec
sti
inc
inc
data16
ffree
cltd
mov
mov
cmpsb
cmp
leave
out
jg
inc
jne
fwait
mov
fwait
cmpsb
mov
mov
int3
lret
jae
clc
xchg
or
rcrl
enter
inc
lret
adc
xor
imul
insl
cmpsb
scas
jecxz
sti
rorl
xchg
xchg
adc
loopne
jne
out
out
inc
sbb
stc
scas
cli
mov
dec
sarl
inc
sbb
negb
push
mov
jb
xor
dec
cmpsb
lods
jbe
rcrb
xor
test
or
shlb
mov
mov
add
aaa
adc
pop
or
fdiv
push
hlt
fnstsw
aam
mov
fcmovnb
cltd
in
jp
adc
push
andl
inc
xor
sar
das
adc
or
jbe
addr16
cmpsb
jb
lahf
xor
xor
movsl
or
and
add
pop
aad
ljmp
or
sub
xor
xchg
popf
pop
movsl
out
lahf
lret
loop
mov
in
mov
adc
sbbl
dec
sub
mov
mov
mull
xor
jg
cmp
dec
shr
jp
sbb
jo
pop
dec
dec
adc
loop
sbb
ds
inc
or
mov
stos
xchg
ret
mov
outsb
loope
cmpsl
mov
sti
and
into
cmp
mov
sub
xor
adc
push
fildll
cmc
cmp
push
mov
bound
sbb
cmp
outsb
test
add
es
jge
loope
push
ljmp
subb
clc
push
push
ret
icebp
es
imul
in
sahf
cmp
push
lcall
cli
pushf
shl
hlt
xor
popa
sub
popa
xchg
mov
jns
mov
and
orb
adc
mov
jecxz
fstpt
test
dec
add
or
mov
push
or
fnstsw
jecxz
orb
jl
mov
sbb
or
adc
js
pmaxub
loopne
and
pushw
or
insl
cwtl
xchg
adc
sub
and
mov
es
gs
rclb
mov
daa
imul
jecxz
inc
lea
imul
dec
in
sbb
rorl
sbbb
aaa
dec
addr16
lret
push
test
xchg
movsl
jns
add
or
mov
scas
clc
outsb
pop
in
and
sub
and
popa
int
pop
daa
outsl
jecxz
leave
fisubrl
mov
pop
imul
and
sub
push
cmp
scas
sub
mov
push
xor
xchg
dec
pop
je
push
es
mov
cmp
adc
mov
jg
imul
push
adc
jge
insb
leave
xchg
mov
je
nop
pop
pop
test
mov
test
xchg
ljmp
and
cmpsl
adc
pushf
es
pop
fistpll
fimuls
inc
xor
dec
pop
jmp
dec
push
call
and
hlt
inc
out
std
mov
call
xor
cmc
lds
xchg
mov
dec
jb
pushf
sbbl
sbb
repnz
movsb
frstor
cmp
ret
push
sbb
add
mov
mov
mov
hlt
fldcw
in
pushf
imul
outsb
mov
pop
mov
enter
cmp
xchg
jb
rolb
leave
and
lret
js
cmpsl
xchg
xchg
rclb
movsb
mov
xchg
in
push
pop
push
out
pushf
fnstsw
test
in
into
or
test
mov
and
aaa
adcl
jne
imul
sbb
push
xchg
push
leave
or
ffreep
sbb
inc
bnd
jbe
mov
imulb
jbe
out
add
mov
or
sbb
lods
inc
pop
inc
lock
dec
or
ficompl
loopne
cmpsl
jmp
fnstcw
or
jns
arpl
add
enter
jg
mov
daa
jecxz
arpl
ja
sbb
dec
xorb
cld
hlt
add
aad
jl
or
cmp
sub
cli
filds
cltd
jg
mov
inc
sbb
cwtl
mov
pop
or
sub
testb
or
sahf
das
mov
repz
adc
leave
fwait
push
adc
loopne
lea
jo
push
pop
push
xor
repnz
or
mov
xor
movsl
inc
jo
outsl
fisubrl
stos
mov
sbb
jne
outsl
inc
subb
test
movsb
lock
inc
out
xor
lcall
mov
push
cmp
and
push
mov
pop
scas
dec
pop
jne
ret
vpshufd
sbb
dec
dec
mov
mov
fldcw
dec
imul
sub
aaa
ja
jo
and
inc
testb
sub
adc
mov
inc
or
dec
push
add
mov
inc
xor
imul
divl
inc
add
mov
fwait
idiv
mov
cmp
jb
rcrb
dec
dec
lea
scas
out
jecxz
movsb
mov
int
cltd
rcll
mov
and
mov
xlat
sti
loop
mov
mull
mov
mov
in
inc
jge
or
pop
leave
scas
dec
stc
mov
scas
lds
xchg
movsl
test
gs
in
repz
add
inc
xchg
mov
mov
cmpsb
loope
loopne
xchg
fisubrl
mov
push
sub
cmp
xlat
lret
loop
pop
fstl
pushf
xchg
aad
xor
jecxz
and
adc
jb
lods
fistps
sbb
pop
sbb
insb
lret
pop
pop
fists
mov
dec
cmp
jb
test
les
lock
shlb
jl
lods
xor
mov
clc
adc
je
fdivrp
cli
jecxz
inc
sub
mov
scas
pop
aaa
xchg
inc
dec
nop
or
ret
ja
inc
sahf
add
icebp
or
mov
sbb
movsb
inc
outsb
jns,pn
and
jne
nop
das
imul
cmpl
scas
push
cs
cmp
mov
es
and
and
mov
dec
pop
fdivp
pop
cmpb
xchg
jp
mov
jp
xchg
sarl
xor
jae
xchg
push
in
enter
cli
push
popf
xor
gs
mov
stos
mov
cmpb
push
push
inc
imul
subl
dec
mov
in
fst
rolb
and
ja
dec
adc
test
das
stos
cmp
out
divb
jno
sbb
lock
xor
adc
jae
adc
test
mov
notb
aam
push
call
fxch
fwait
push
in
movsl
mov
sbb
lods
push
enter
xchg
lds
lods
fidivl
jns
sub
jne
js
or
insl
test
pop
mov
lock
in
aas
cwtl
int3
sar
and
xchg
jg
mov
and
mov
test
mov
aas
das
mov
jp
push
sub
nop
insb
xor
or
mov
movsb
leave
mov
std
addr16
sub
pextrw
sub
mov
in
jp
xlat
popf
cmc
mov
dec
insl
push
cmpsl
add
and
jnp
popa
cli
js
mov
or
mov
and
dec
loopne
mov
outsl
mov
xchg
add
cmp
cwtl
lret
jo
inc
pop
sbb
scas
mov
xor
imul
ret
sub
jae
jno
inc
in
jae
mov
or
lcall
sbb
daa
in
dec
popa
divl
pop
push
adc
not
and
pop
icebp
adc
jo
std
mov
or
cmpb
sahf
das
inc
movsb
cmp
out
xchg
dec
sbb
fs
adc
lock
rorl
iret
movsb
jl
mov
repnz
mov
and
push
mov
mov
sub
lods
jo
add
test
or
js
inc
enter
imul
or
push
popl
mov
repnz
out
lds
sbb
xchg
mov
and
aas
xor
loope
or
xchg
jl
push
enter
xchg
add
aam
in
fwait
imul
repz
sarb
sbb
adc
push
jae
mov
dec
mov
cmp
mov
xchg
jae
or
dec
mov
test
arpl
cmc
mov
fwait
mov
inc
lea
mov
popa
push
sahf
movsb
hlt
dec
mov
lods
loope
es
popa
stos
cmp
pop
leave
stc
in
rcll
adc
js
sbb
into
in
nop
push
pop
dec
jnp
mov
inc
cltd
push
in
jl
and
outsl
loope
sbb
rcll
imul
xor
fmuls
jl
int
and
test
xlat
rcrb
sbb
cmp
xchg
inc
or
ja
in
cmpsl
jp
cmp
popa
arpl
xor
mov
add
xchg
mov
mov
and
fwait
ljmp
mov
movsl
cmp
test
xchg
push
xchg
or
ss
pop
xorb
mov
cmp
push
and
sahf
adc
mov
xchg
cwtl
add
push
addr16
lods
outsl
xchg
mov
mov
dec
inc
filds
js
dec
mov
xchg
jnp
shrl
dec
sub
test
jbe
cmpb
je
stos
mov
jmp
and
xor
imul
cmp
imul
pop
sub
push
aad
test
les
rcrl
cld
ret
enter
bound
aad
dec
mov
out
push
add
int3
ret
lahf
outsb
sbb
xchg
mov
fwait
jnp
cmovle
test
in
cmc
test
lcall
lahf
mulps
mov
aam
inc
mov
les
insl
das
sub
pop
or
xor
pop
scas
jmp
pop
jge
popa
push
jo
adc
mov
mov
loop
push
arpl
sub
xchg
adc
mov
or
push
sub
mov
sbb
fidivrs
cmp
inc
aad
mov
xor
push
adc
push
lds
insb
inc
sub
jno
roll
mov
pop
or
incl
jl
leave
int
add
clc
add
pop
sarl
jb
pop
cld
add
bound
cltd
and
dec
notl
cmpsl
xor
mov
test
in
mov
decb
dec
xchg
dec
sub
outsb
shrb
xchg
pop
addr16
ljmp
scas
int
sbb
mov
jl
xlat
and
cmp
push
xchg
add
mov
shll
jmp
mov
cmp
sbb
ret
mov
shrb
insb
jl
xor
mov
xor
xchg
shr
data16
jae
test
mov
inc
xor
sub
mull
pop
out
cmp
adc
cli
int3
dec
out
iret
in
in
and
div
cld
pushf
shrl
xorb
sub
in
shrl
cmp
addr16
jle
stos
mov
cmp
movsb
mov
mov
jl
test
mov
sbb
cwtl
dec
dec
and
movsb
cmpsb
sti
mov
popf
inc
cmpsl
sub
push
dec
cs
mov
adc
test
rol
nop
mov
clc
cli
push
and
ja
cmp
lret
push
xchg
pop
imul
lret
cld
in
pop
sti
out
dec
hlt
jge
mov
cmpsl
shrb
dec
mov
pop
sub
lds
movsb
and
jmp
mov
xchg
sbb
nop
sarl
push
fs
fsubl
faddl
mov
mov
mov
xlat
ss
xor
mov
negb
fildl
xor
jp
out
xor
jae
push
sbb
movl
xor
bound
jle
cmc
pusha
mov
stos
in
inc
sahf
aad
push
pushf
jg
pusha
inc
and
arpl
cltd
pop
lret
test
jl
ss
sbb
pop
hlt
outsb
push
adc
xchg
push
pop
cmp
jbe
fidivl
pop
int
lea
sub
clc
pop
cmc
mov
clc
xchg
add
and
enter
jl
pop
imul
push
inc
pop
stos
inc
out
ja
mov
xchg
or
push
fsubrl
clc
xchg
mov
stos
sbb
jno
push
lods
pop
cld
sbb
dec
xor
mov
mov
loopne
xchg
sar
pushf
in
cmpsb
jo
sbb
loop
out
mov
adc
testb
fiadds
mov
add
mov
in
cltd
jno
cmp
cmp
adc
ljmp
adc
std
inc
ljmp
mov
cmc
jge
adc
fsubp
pop
call
rcrb
je
xlat
sub
mov
lods
pop
pop
pop
out
fldl
sbb
inc
insl
stos
mov
cmc
mov
repz
push
mov
lret
mov
jp
shlb
imul
test
popf
add
mov
pop
mov
fwait
std
add
lcall
lock
out
jnp
push
pop
mov
pop
jno
dec
inc
pop
xchg
insb
into
into
xchg
rorb
xchg
and
or
add
xchg
pop
jg
cmp
ljmp
outsb
fsubr
sbb
fcoms
inc
imul
inc
xor
andb
ds
push
cmpsb
gs
bound
mov
lahf
pusha
lds
fwait
out
xlat
out
sub
push
adc
stos
inc
loope
mov
in
div
dec
je
lahf
add
xor
jmp
xchg
pusha
nop
adc
mov
lds
andb
lds
in
inc
scas
std
bnd
jns
dec
shlb
sahf
stos
dec
inc
fnstcw
in
xchg
push
and
daa
jmp
test
pop
inc
add
int
movsl
inc
or
es
repnz
jl
mov
ja
dec
fwait
in
adc
cmc
stos
frstor
sbb
xchg
mov
or
cmp
testl
je
lcall
adc
adc
lret
lds
sub
cmpsl
mov
lea
loope
sbb
mov
push
shlb
lahf
mov
pop
or
insl
movsb
or
and
out
mov
ret
scas
mov
ds
push
cmp
mov
nop
outsb
inc
pop
mov
gs
add
mov
or
sub
inc
rol
sti
mov
push
test
addl
push
inc
jle
movsl
ret
das
xchg
in
gs
jmp
stos
add
ja
sar
out
in
add
xchg
mov
test
sti
int
sub
out
add
pop
xlat
out
adc
out
fdivr
bswap
mov
cmc
mov
shr
or
pop
out
fsts
adc
jg
cmp
jns
adc
outsl
mov
xor
lods
mov
je
in
fcmovu
xor
fistps
lahf
addr16
lret
aam
mov
sbb
pcmpeqd
sbb
daa
jp
jbe
jge
movsl
test
mov
sbbl
icebp
rcrl
sbb
fldcw
js
or
lods
ret
add
pop
mov
xor
xor
lods
xchg
mov
inc
dec
lods
sub
cld
or
mov
cmp
jo
xchg
inc
jl
test
and
test
sahf
cmp
mov
daa
inc
dec
add
pop
mov
add
jle
pop
adc
mov
xchg
std
nop
enter
cmc
or
lea
mov
push
stos
pushf
mov
sub
sbb
insb
mov
push
iret
imul
test
adc
add
xor
push
testl
jmp
pusha
mov
or
pop
pop
lcall
popf
dec
mov
jmp
mov
pop
push
push
fwait
inc
mov
push
jg
sbbb
push
or
enter
je
jp
fdivrp
mov
mov
mov
cmp
mov
cmp
sub
or
aad
movsb
inc
mov
jl
shlb
inc
push
cmp
xchg
mov
inc
ret
cs
and
insl
pusha
lock
push
fdivrs
and
sbb
outsb
popf
addr16
pop
loopne
stos
test
cmp
push
pop
into
fisubrs
adc
insl
dec
cs
cmp
adc
test
xor
or
gs
in
mov
sbb
scas
movsb
or
dec
cmp
sub
mov
mov
fidivrs
pusha
std
mov
sub
mov
mov
aam
cs
xchg
mov
pcmpgtb
fimull
sub
repz
lds
iret
mov
sti
mov
cmp
iret
pop
jno
arpl
adc
out
ja
sbb
ja
mov
clc
xchg
pop
pop
ret
fwait
es
cmp
lret
ret
mov
lret
and
sbb
pop
lahf
cmc
mov
jmp
push
push
mov
outsb
jle
jmp
cmpsl
nop
fcomi
cs
loope
adc
push
std
imul
sub
dec
adc
out
add
add
addr16
fwait
jge
mov
push
rclb
ret
xor
mov
cltd
push
loop
cli
mov
test
mov
clc
sti
jp
and
sbb
adc
and
sub
dec
pop
lea
popf
pop
push
mov
call
sbb
pop
das
adc
repnz
mov
mov
mov
or
xor
loope
jg
dec
lahf
cmpsb
nop
ret
dec
idivb
mov
stos
jbe
pop
je
push
mov
xchg
dec
das
cmp
cwtl
pop
inc
dec
mov
jmp
fsubrl
pop
ljmp
gs
adc
rcll
cwtl
mov
xchg
popa
js
in
outsb
push
add
pop
in
pop
xor
dec
test
shrl
mov
cwtl
pop
mov
mov
add
inc
inc
lcall
stc
loope
aam
std
xchg
in
leave
and
sbb
dec
or
ret
in
in
xchg
test
xlat
pop
stos
int
add
notb
sbb
xlat
jae
sub
mov
fists
repnz
enter
dec
out
sub
loop
and
and
xor
or
fnstenv
adc
jecxz
sbb
aaa
hlt
test
test
jge
dec
fcompl
das
sub
xchg
mull
sbb
sbb
cmp
xlat
insl
lds
std
pop
mov
outsl
xor
stos
imul
outsb
pop
loop
aaa
xor
mov
sbb
test
popf
mov
push
lret
fdivrp
add
mov
mov
mov
in
sahf
pop
insb
mov
dec
jbe
sbb
xlat
aaa
mov
and
ja
pop
hlt
mov
push
arpl
shrb
lahf
daa
test
lret
jbe
into
add
jg
stos
cmp
fs
repz
push
jno
dec
pop
xchg
or
repnz
push
mov
popf
test
push
leave
test
mov
xchg
frstor
roll
xchg
sub
popa
push
mov
mov
sbb
stos
outsb
notb
or
push
xor
jae
xor
daa
mov
ret
sbb
dec
call
std
outsl
fldenv
dec
fcmovnu
test
inc
jb
fcomip
idiv
aad
rorl
testl
jne
adc
stc
adc
scas
xchg
or
xchg
out
stos
ret
iret
movsb
push
sbb
dec
cld
xor
lea
mov
add
jno
xor
cmp
push
insb
test
mov
cmp
push
and
sbb
xor
mov
nop
loopne
sub
push
cmp
lret
repz
cmp
fwait
outsl
mov
mov
aaa
and
xchg
ljmp
dec
dec
mov
mov
iret
arpl
jbe
outsb
xor
insl
test
dec
xchg
fwait
dec
ret
lret
in
adc
mov
lret
or
ficompl
mov
pusha
aaa
mov
xchg
and
fidivrl
inc
inc
outsl
xor
jb
xor
fs
pop
in
lds
and
scas
shlb
xlat
add
lods
aam
mov
into
xchg
jp
mov
xlat
push
jl
push
push
fadd
or
stos
xchg
jbe
outsl
inc
lods
decl
lcall
jle
faddl
aad
ds
pop
xor
popa
and
xor
xchg
mov
mov
add
inc
test
aas
inc
jle
and
mov
sbb
cmc
cmc
movsl
mov
inc
push
xchg
jnp
xchg
fs
jns
out
push
mov
and
jbe
mov
push
popf
fdivrs
jge
xlat
cld
fsubrs
pop
sbb
jns
mov
pop
dec
out
sub
stc
sbb
or
in
xor
aad
ss
ljmp
xchg
in
push
sub
mov
popf
mov
rorb
out
mov
fisttpl
xchg
and
add
call
ror
mov
stc
add
stos
enter
jno
subb
pop
cs
add
or
sub
test
bound
jg
dec
sahf
fdivrl
inc
or
arpl
ret
push
sahf
and
scas
rcll
rcrl
lods
ljmp
leave
add
push
jle
fwait
xchg
pop
or
into
ja
and
pop
push
dec
es
jge
sub
sbb
mov
pushf
shrb
hlt
adc
mov
test
adc
jne
jnp
je
mov
mov
dec
mov
jnp
jge
xchg
mov
cmpsl
inc
mov
lea
fadd
es
lcall
cmpsb
dec
mov
and
cmp
pop
xorl
dec
arpl
cmp
cmp
jecxz
dec
xor
cmp
fucom
dec
jns
mov
into
sub
lods
lea
push
mov
push
rorl
mov
cs
jns
mov
or
fnstcw
sbb
xlat
out
insl
dec
pusha
out
pop
cli
rcl
out
fistpll
mull
cmp
sti
jl
adc
jno
jmp
dec
imul
ljmp
int3
jl
push
ficomps
sbb
out
add
dec
loopne
xchg
lcall
jae
insb
cmp
dec
addr16
out
ret
jae
les
cmp
sub
outsb
lods
int
test
push
scas
sarb
popa
fdivrl
inc
pop
or
shlb
add
xor
addr16
test
jb
lahf
cwtl
fdivl
or
repnz
xchg
mov
mov
sahf
movsb
insb
lods
sbb
adc
mov
fimuls
out
mov
repz
adc
mov
jbe
mov
lods
xchg
pop
rcrb
cmpsl
sbb
or
cld
mov
jbe
inc
js
add
adc
and
test
int3
nop
xor
pop
jns
test
or
push
aad
adc
test
cmp
out
or
cmp
or
paddd
add
sti
dec
loope
cmp
inc
push
dec
sub
mov
xchg
lahf
sub
negb
sbb
out
mov
push
sub
pop
mov
xchg
cmp
push
mov
fwait
dec
sbb
mov
cmpl
cmp
pushf
and
mov
xor
push
add
gs
test
and
fidivs
and
sub
bound
mov
and
iret
rdseed
push
mov
popa
outsb
dec
ljmp
adc
pusha
stos
inc
ret
fucom
sub
xor
push
push
add
lret
lahf
and
loopne
outsl
xlat
int
sahf
cmp
dec
jae
in
movl
dec
dec
aaa
jecxz
push
push
int3
pop
clc
jne
add
sub
out
frstor
add
xchg
dec
dec
enter
inc
insl
les
shlb
addr16
pop
pop
fsubl
cwtl
push
pop
push
add
push
roll
idivl
or
imul
xchg
add
and
shrl
add
add
xlat
leave
push
xor
dec
movsl
loope
sub
mov
repnz
add
pop
push
rcrb
ds
sahf
clc
jmp
ss
or
leave
jno
faddl
data16
nop
in
int
cmpsl
iret
aas
sbb
arpl
mov
sahf
icebp
pushf
sbb
add
inc
jg
push
movsb
in
data16
fwait
rcl
js
std
xchg
inc
xchg
ja
dec
imul
ss
jns
cmp
sbb
int3
mov
imul
std
add
testl
subb
adc
cmp
or
rclb
adc
xor
cmp
rcrb
push
adc
add
or
es
cmp
push
cwtl
sub
mov
cmp
ljmp
adc
jae
adc
in
or
cmpsl
pop
pop
mov
or
xchg
mov
test
cmpsb
scas
jb
call
fs
ja
lcall
int3
mov
call
inc
das
subl
jno
adc
aaa
inc
jge
add
sbb
clc
and
push
mov
fwait
cmc
pusha
fnstsw
jge
or
int3
out
fs
dec
mov
jns
add
push
cmp
xorb
fdivs
cmp
sbb
std
cli
xchg
add
pushf
mov
call
xor
rcrb
push
jp
or
push
jbe
jne
xorl
fdivr
jmp
ret
ja
add
clc
or
jp
push
pop
dec
push
out
mov
es
imul
bound
imull
jle
jmp
mov
sub
sub
dec
or
inc
lods
or
fstpt
mov
sbb
jno
cmpsl
xorb
lods
xchg
lods
out
in
mov
mov
or
popf
push
cmp
outsl
cld
outsb
lret
dec
jecxz
add
lock
or
dec
xchg
out
jne
out
mov
es
jl
mov
jecxz
xchg
xlat
dec
shr
add
mov
test
cmpsb
add
bnd
ds
jne
jb
fildl
xchg
insl
mov
mov
fstpl
push
loopne,pn
movsb
lret
aam
test
ret
mov
sbb
cwtl
cs
int3
add
test
dec
lods
mov
insl
xchg
fsubs
jmp
dec
pop
cmp
mov
xor
mov
lock
push
xchg
imul
ss
lahf
out
cli
mov
inc
out
sbb
ret
sub
xchg
add
mov
ret
out
dec
stc
push
adc
sahf
in
fnstcw
mov
mov
cmc
pop
insl
insb
mov
push
cmp
xlat
scas
xor
lock
mov
ds
xchg
sub
dec
rorl
insl
fwait
adc
sbb
movb
ja
pop
pop
push
lds
xchg
dec
mov
cmc
cmp
fcoms
xor
js
cmp
movsb
js
sbb
fstpl
shlb
cmp
mov
out
fldt
jge
stc
cmp
aas
xchg
ret
ficomps
stos
mov
mov
add
inc
xchg
in
xor
mov
xchg
sahf
xchg
in
insb
lcall
das
ss
mov
push
loop
lahf
fbstp
cmp
or
cmp
test
jbe
xchg
das
pop
call
push
lret
cmp
sbb
js
pop
mov
in
lret
das
adc
lock
out
loope
sub
sbbl
insl
cmpsl
aaa
jnp
push
sbb
filds
push
add
std
pop
xor
cmp
mov
pop
cmp
inc
add
in
push
aas
cwtl
add
vmaskmovdqu
leave
mull
jne
test
and
sbb
jg
popa
sub
xchg
pop
push
cmp
popa
inc
test
pop
cltd
push
add
lahf
add
shll
xchg
loope
into
mov
jo
jns
push
pop
xorb
mov
pop
fcomp
lret
push
dec
sarl
jg
outsl
popa
pusha
cmp
call
aas
jle
int3
mov
xchg
cwtl
xor
iret
lock
scas
push
aam
mov
mov
int3
xor
sti
sbb
arpl
data16
popf
push
insl
mov
insb
lret
push
push
out
mov
inc
leave
repz
cld
add
nop
loop
jnp
fstps
jne
jge
jb
stc
sahf
or
jnp
mov
mov
pop
inc
dec
scas
rclb
inc
inc
popa
mov
add
cwtl
popa
stos
pop
test
mov
ljmp
outsl
stos
inc
imul
mov
clc
sahf
insb
mov
loop
out
adc
stos
inc
pop
bound
inc
jbe
loopne
mulb
inc
push
push
xlat
movsb
lret
cwtl
test
cmp
jo
ss
ljmp
xor
dec
push
xchg
mov
lcall
bound
rcrl
test
mov
hlt
pop
mov
push
jge
dec
loope
pop
call
into
jle
fmul
dec
adcl
pushf
fs
xor
lds
ss
cli
leave
mov
cmp
or
adc
ret
jno
jbe
imull
fimull
inc
shrl
pop
stc
pop
sub
fmul
and
dec
mov
icebp
xor
cmp
cwtl
std
clc
stos
mov
pop
fcoms
mov
mov
test
ficoml
les
sti
push
imul
icebp
xlat
jl
jle
adc
enter
ja
xor
lock
pusha
movsb
and
push
test
add
mov
xchg
idivl
bound
idivl
inc
jno
in
sbb
push
fnsave
jne
cmpsl
fidivrs
imul
aam
das
mov
sbb
and
loop
xchg
imul
in
std
add
and
xchg
xchg
cwtl
mov
rcl
add
test
andl
pop
or
dec
mov
sbb
clc
data16
test
mov
cs
ja
mov
out
call
sub
jle
mov
popf
mov
or
sub
fidivrs
mov
outsl
aad
jg
xor
test
js
push
sub
xor
scas
xor
aam
fsubrs
sti
mov
mov
xor
sbb
xor
test
dec
cld
aaa
pop
imul
fbld
dec
mov
or
cs
or
jo
push
lcall
test
jne
outsb
imul
xchg
xor
xor
dec
mov
xor
mov
push
movsl
push
mov
movsb
mov
mov
mov
clc
ds
imul
insb
and
and
push
ja
imul
stc
and
aad
movsl
inc
cmp
je
xchg
lock
subb
jno
outsb
or
dec
call
push
adc
ficoml
addl
push
sub
mov
out
cwtl
xchg
inc
push
jae
ljmp
cwtl
leave
fs
inc
leave
cmpsl
hlt
lds
push
push
mov
sub
jns
insb
popf
mov
roll
push
mov
sub
mov
fcmovu
pop
add
cwtl
xor
fsubs
loopne
int
inc
enter
mov
sbb
lods
dec
loope
jo
leave
loope
sub
fs
scas
cli
enterw
cmp
repz
aad
fsts
push
inc
dec
push
arpl
jns
pop
cltd
std
addl
fcomps
mov
out
dec
mov
sbb
ja
in
or
add
pop
push
dec
add
mov
jo
mov
out
jmp
jne
negl
cmp
pop
imul
stc
pop
dec
popf
pop
sbb
cld
cmp
jne
cmp
mov
or
in
jecxz
fwait
call
and
cmpsl
mov
cmp
jmp
or
sbb
mov
jge
stc
mov
adc
ss
shlb
cmp
bnd
insl
test
xor
push
mov
mov
xchg
xchg
jp
fmull
mov
je
shll
jmp
movl
popf
inc
scas
mov
push
xchg
xchg
cmp
cmpsl
jg
push
mov
or
adc
test
lret
stos
push
dec
or
std
decl
push
pop
xchg
rcll
inc
push
and
xlat
outsb
je
pop
cmp
xchg
dec
das
mov
in
fisubl
jo
cmp
mov
or
mov
jge
filds
and
pop
adc
mov
mov
inc
imul
mov
xchg
mov
pusha
pop
aam
dec
idiv
fcomps
lods
fstl
jbe
xchg
gs
cmp
test
inc
xchg
add
sub
daa
adc
inc
jmp
loope
daa
int3
sbb
mov
fidivrl
push
std
mov
add
mov
mov
jae
mov
sbb
in
jb
add
dec
mov
add
iret
cwtl
rolb
cld
stos
or
or
pop
in
cmp
lret
ret
jo
cltd
ds
out
cmpb
jmp
xchg
jle
pop
adc
pop
push
sub
ficompl
lods
push
or
fsub
or
mov
push
fmull
xchg
dec
adc
fadds
pop
out
lock
push
dec
sbb
out
mov
ljmp
dec
inc
movsl
sahf
dec
lods
idivb
mov
dec
insb
lret
iret
out
std
stc
mov
lahf
sub
and
add
rcrl
push
js
pop
cwtl
sbb
bound
mov
sbb
push
cmpsb
cmpb
popa
xchg
or
cmpsb
stos
arpl
int3
or
cmp
sub
and
lahf
sbb
pop
shlb
sti
addl
movsl
pmullw
sbb
shrb
test
outsl
subl
mov
cmpxchg
call
xchg
loope
mov
sarl
es
cmp
push
pop
mov
mov
pop
mov
add
cwtl
ja
mov
xchg
mov
or
or
jp
dec
aas
and
fdivrs
pop
bound
mov
cmpsl
shll
inc
xor
xor
adc
inc
loope
out
aam
pop
mov
rcl
aaa
mov
aad
in
sbb
addr16
stos
addb
jns,pt
out
sub
cli
push
pop
mov
pusha
push
ss
adc
jb
into
dec
insb
lahf
adc
mov
ret
cmp
cmpsb
xchg
out
mov
jg
imul
sub
into
push
xchg
jnp
imul
mov
push
and
out
testl
push
and
cmc
mov
mov
mov
repnz
iret
jne
pop
fld
cmp
imull
dec
push
cltd
lahf
mov
loop
test
int
int
add
adc
sahf
push
aad
sbb
mov
outsl
and
out
fwait
or
mulb
xor
sbb
out
jmp
dec
ljmp
outsb
dec
xchg
jg
push
sub
sub
pop
sbb
jmp
andl
shl
and
xor
out
fwait
outsb
sahf
outsl
cld
dec
ss
sbb
sbb
push
nop
enterw
sbb
pop
divb
mov
pop
das
jg
and
adc
adc
lock
outsl
jne
sub
popl
mov
adc
lahf
push
hlt
push
bound
rcrl
inc
rcl
call
in
mov
pop
ljmp
jo
int
fbld
mov
std
jo
and
xor
jbe
lret
hlt
or
jns
push
cmpsl
repnz
cmc
lcall
popf
jecxz
lds
outsl
sbb
mov
push
pushl
call
jecxz
cli
icebp
jbe
cld
or
fidivl
mov
insl
sbb
xchg
shr
repnz
shll
adc
pop
stos
out
xor
out
push
insl
lods
mov
loopne
push
pop
rorl
inc
dec
and
int
xor
mov
shll
cmp
xchg
mov
andb
ja
mov
hlt
pop
jge
push
xchg
outsb
push
fcompl
inc
cmp
push
pop
and
in
sbb
fsubl
dec
out
ljmp
add
call
inc
mov
push
pop
xchg
sbb
dec
and
xchg
add
lea
fistpll
mov
pop
cwtl
adc
xchg
add
jb
fwait
mov
and
scas
cmpsb
cmpsl
add
fwait
or
and
and
testb
xchg
xor
arpl
cwtl
mov
mov
pop
imul
fwait
clc
sub
adc
cmpsb
outsl
in
pusha
js
cli
negl
and
stc
scas
stos
mov
sbb
sahf
pop
xchg
push
repz
shrb
dec
idivl
clc
pop
out
jno
mov
jno
rcr
sbb
popl
fdivl
arpl
loope
push
cmp
ja
mov
dec
cwtl
add
test
mov
pushf
hlt
popf
cs
js
cmpsl
in
lret
cmp
fidivl
xchg
call
cld
lret
push
repnz
pop
mov
push
insl
jns
mov
fdivr
push
out
add
movb
push
fimull
add
jo
loop
jne
inc
outsl
push
sub
aaa
add
cwtl
jnp
es
loopne
lods
push
xchg
das
cmc
fdivrs
jecxz
or
inc
mov
popa
adc
int3
pop
inc
lods
pop
aad
mov
dec
frstor
repnz
mov
sub
mul
in
sub
cs
cmpsb
inc
repnz
mov
push
mov
lret
dec
xchg
cwtl
cltd
out
jno
sti
lds
je
jb
inc
sbb
imull
jge
jge
shrl
xchg
and
stos
int3
pop
fs
sbb
das
inc
jle
int
rolb
test
add
int3
sub
mov
pop
shr
mov
jns
out
ret
inc
pop
lds
xchg
cmp
mov
sbb
and
add
inc
add
ds
mov
cmp
gs
lods
inc
rclb
or
push
sahf
fidivl
insl
inc
addr16
pusha
cmp
fsts
mov
out
adc
or
adc
jle
inc
mov
roll
popf
lret
dec
mov
addr16
mov
push
cltd
sti
loopne
aam
popf
mov
xchg
icebp
adc
and
pop
cli
aad
movsl
dec
mov
daa
sbb
push
in
js
pop
mov
lahf
and
in
mov
cmp
mov
mov
scas
jo
mov
mov
push
adc
bound
es
jmp
and
and
inc
fs
stc
inc
negl
xchg
int
fnstcw
cli
mov
mov
sub
mov
movsl
nop
dec
outsb
mov
sbb
jnp
xlat
mov
inc
std
test
pop
scas
jle
fstpl
xchg
int3
mov
outsl
jbe
outsl
pop
cmp
ficoms
adc
sbb
dec
cmp
mov
cld
dec
das
sti
idivl
popa
mov
push
mov
mov
int3
ljmp
out
add
inc
out
push
sahf
jecxz
fwait
repz
mov
shrl
dec
les
scas
and
push
inc
sbb
mov
pop
bound
mov
dec
mov
xor
das
insl
mov
lret
test
cli
loope
fs
cltd
into
and
cmp
mov
adc
fsubs
jmp
xchg
inc
jbe
mov
clc
cmp
xor
push
cs
es
mov
push
add
out
into
in
adc
insb
rcl
inc
pop
xor
mov
mov
ret
and
setp
leave
or
mov
mov
jmp
push
inc
and
icebp
mov
iret
stc
leave
imul
xor
rorb
lods
pop
clc
push
push
out
lret
popf
cmpsb
mov
les
lea
mov
rclb
cmpsb
mov
jecxz
xor
jnp
sub
and
pop
jnp
ljmp
fidivl
xor
dec
movsl
pop
out
cmpsl
mov
mov
mov
js
rcll
test
adc
fildl
in
mov
add
in
frstor
mov
or
out
pop
test
cmp
aam
mov
or
fwait
cld
jl
loope
into
add
pop
insl
aas
adc
daa
jmp
pop
jnp
push
movsb
inc
cmpsl
inc
nop
sbb
cmp
movsl
loopne
sub
pusha
sbb
addr16
jns
cli
fadds
adc
int
mov
roll
inc
scas
mov
adc
cltd
clc
ds
scas
dec
in
sub
add
addr16
push
or
xor
push
je
and
cmpsl
xchg
sub
xor
call
inc
je
femms
or
js
hlt
ss
popf
adc
es
shlb
sbb
movsb
adc
adc
mov
jmp
fsts
in
xor
call
push
xlat
stos
out
sbb
gs
push
fdivs
mov
mov
add
aaa
jbe
sbb
or
push
adc
jecxz
mov
movsb
cmp
das
repz
push
push
xor
fcompl
pop
mov
mov
frstor
not
pop
lahf
mov
rcll
mov
out
xlat
xchg
fsubl
nop
bnd
testb
cmp
pusha
fnstcw
pop
pushl
es
jecxz
sarl
xchg
jle
xchg
mov
xchg
pop
pusha
jmp
inc
rcrb
xchg
jnp
jmp
lret
lret
adc
fisttpl
gs
leave
ss
lds
mov
nop
push
int
dec
fs
in
addb
lcall
jmp
clc
std
mov
dec
mov
jbe
xchg
js
pop
mov
sarl
mov
or
sbb
push
add
fcoms
pusha
push
xchg
add
movsl
sti
adc
fiaddl
jo
or
xor
repnz
in
in
fiadds
sbb
mov
push
sub
inc
dec
push
cmpsl
mov
test
daa
jmp
push
ficoms
sbb
push
and
inc
adc
out
scas
sbb
repz
lods
and
lock
mov
mov
or
jmp
xchg
and
adc
imul
dec
mov
sub
jns
pop
cld
ficoms
sbb
roll
inc
ret
jecxz
and
jl
and
sbb
dec
testl
mov
into
sbb
rcll
inc
fisubrs
sub
fldl
rclb
ja
xor
xor
inc
and
dec
xor
sbb
sub
rolb
lcall
repz
adc
aaa
and
insl
ljmp
adc
mov
scas
push
cmp
mov
test
mov
incl
test
mov
stos
xchg
jae
mov
mov
jo
sbb
push
add
aad
xor
cmp
mov
repz
mov
ret
xchg
inc
inc
rcll
lahf
xchg
or
or
js
insl
out
dec
jno
mov
aaa
call
xor
test
or
ss
popf
pop
sub
and
push
pop
mov
mov
sarb
xor
dec
sbb
adcb
xor
adc
aaa
pop
mov
add
sti
and
cmp
cwtl
sbb
jl
inc
cmpb
mov
jmp
sti
push
pop
adc
cwtl
inc
add
into
push
cmp
aad
mov
cmp
shlb
repnz
mov
into
call
mov
sub
bound
adc
hlt
add
push
das
je
xor
js
popa
sub
jp
adcb
pop
sbb
and
loope
popa
dec
lock
in
xor
scas
dec
mov
imul
adc
mov
inc
leave
ds
lret
or
inc
in
inc
dec
jecxz
jl
jb
push
shrl
and
dec
lods
jp
int
es
je
imul
cwtl
ljmp
enter
test
or
rorb
xchg
fldl
mov
push
cmp
sbb
scas
insl
xchg
pop
cld
into
push
pop
push
jnp
stos
cmp
fucomip
dec
adc
mov
fmull
jge
sbb
out
pop
clc
mov
mov
inc
jb
xchg
sti
rcrb
xor
fadds
addr16
test
inc
xor
or
jmp
cld
aas
loop
std
das
mov
xchg
jne
lahf
lock
and
push
aas
test
incl
insl
imul
add
sbb
sub
jnp
lods
scas
shlb
inc
mov
rcr
out
sahf
lret
mov
and
leave
fdivrl
hlt
daa
aaa
int
inc
lea
mov
daa
xor
push
test
pop
fists
daa
xchg
add
test
ficompl
push
bnd
cli
movl
rcr
rorb
inc
stos
xchg
mov
adc
push
jo
adc
rorb
sahf
mov
fwait
cs
ss
cwtl
xchg
test
push
xchg
xor
orl
cmpsb
mov
mov
out
sbb
jno
and
or
jno
loop
and
sti
into
into
fcmovnb
sbb
mov
mov
jnp
mov
mov
mov
ljmp
cltd
jnp
inc
ret
xor
jnp
sub
dec
sbb
push
jp
aas
mov
repnz
mov
and
push
loope
fdivrs
xlat
cmp
xchg
fldt
push
jmp
xor
or
pop
aam
lods
xchg
cwtl
mov
pop
xor
scas
je
movsb
mov
ljmp
dec
mov
xchg
jbe
cmp
add
mov
loop
ds
mov
xlat
and
movsl
or
jne
adc
pop
cmpsb
push
les
push
fcomp
mov
sub
add
lret
imul
dec
add
cmpsb
fistps
stos
je
push
jnp
lods
push
mov
test
out
lods
pop
dec
fldt
push
dec
pop
out
aad
ds
inc
out
sub
xchg
lret
js
jg
je
repnz
int
jmp
inc
and
out
rcrb
cli
mov
mov
movsl
pop
xor
or
rolb
addr16
inc
mov
xor
add
mov
sbb
adc
leave
xor
push
dec
and
lods
insb
jns
sbb
mov
xor
cmc
ss
push
xchg
js
xor
sub
jbe
int3
pop
dec
sub
pop
cmp
push
repnz
out
xor
pop
into
add
lret
pop
xlat
mov
push
shrl
fisubrs
mov
lahf
mov
inc
push
pop
fisubs
scas
push
and
inc
jo
inc
push
mov
dec
in
or
arpl
mov
xor
push
cmp
adc
enter
data16
rorl
mov
xor
andb
jne
adcl
in
fstpt
cwtl
aad
mov
pushf
fbstp
fs
lahf
sarb
stos
sti
test
popa
sub
clc
xchg
pop
ja
inc
in
dec
pop
xor
mov
or
jmp
daa
jge
mov
rol
filds
lods
xorl
sub
mov
and
inc
pop
cs
cmp
in
nop
and
mov
mov
test
pop
mov
daa
sbb
repnz
jmp
imul
xlat
mov
mov
aas
addr16
mov
push
repnz
sub
jge
push
andl
bound
adc
mov
adc
es
jle
dec
or
lahf
or
jne
jo
pop
lahf
jl
cmp
lcall
imul
or
test
dec
dec
sti
cmp
out
adc
jo
ja
jno
stos
adc
pop
popa
ds
pushf
mov
int3
inc
ret
sbb
movsb
into
sub
roll
pop
sbb
iret
mov
outsb
and
js,pt
adc
jp
imul
push
jl
shl
cmp
xlat
hlt
xor
xor
mov
lret
movsb
adc
adc
ja
push
movsb
adc
xchg
jecxz
push
push
mov
sbb
stc
shlb
jg
mov
cmp
xchg
movsl
mov
cmp
mov
cmp
adc
sbb
adc
rcl
adc
loopne
adc
dec
xchg
outsb
inc
mov
jg
testb
sahf
push
iret
inc
mov
and
or
daa
sbb
adc
fs
std
lret
mov
loope
adc
loopne
pop
mov
adc
xchg
mov
xchg
pop
pop
mov
and
add
ror
call
add
dec
cmp
clc
and
pop
or
int
dec
pop
xchg
sbb
mov
test
push
dec
xor
lock
jne
les
cmp
dec
fwait
pop
sti
sub
xchg
dec
add
mov
or
xor
jmp
jmp
sub
data16
lock
inc
inc
sti
sbb
or
mov
mov
in
lret
push
mov
pushl
sub
inc
notb
mov
mov
or
lcall
push
lods
dec
push
dec
je
and
or
pop
mov
and
icebp
xchg
dec
mov
cmp
daa
dec
loope
xor
rolb
push
dec
ret
es
subb
iret
sub
daa
daa
or
ret
or
hlt
sbb
add
sbb
stos
adc
jno
add
sub
push
test
mov
and
mov
lea
pop
scas
mov
stos
mov
idiv
js
xchg
jbe
push
cmc
mov
mov
nop
call
push
outsl
mov
leave
les
imul
cltd
sbb
loop
pop
sbb
popf
pop
mov
out
rcrb
xchg
cli
imul
ret
pop
test
push
adc
dec
cmp
pop
pop
enter
insl
dec
je
sbb
fidivrs
testb
inc
inc
ljmp
jmp
pop
sar
fiadds
inc
push
jp
jb
push
movsl
scas
ret
shlb
xchg
inc
idivb
fisubl
insb
xorl
cmpsb
pop
add
fwait
loop
inc
imul
jbe
lods
bound
xlat
jle
repnz
adc
cmp
ljmp
pop
push
mov
leave
div
mov
sub
xor
pop
or
rcr
push
mov
push
out
push
scas
inc
xlat
xchg
cmp
out
mov
sahf
pop
or
addl
data16
push
push
ret
push
cmp
cld
lret
pop
push
pop
jae
jnp
cmp
gs
fwait
sbb
mov
lods
rorb
jl
xchg
inc
mov
mov
ret
mov
pop
mul
or
cld
enter
jmp
or
cmovge
jns
cmp
add
mov
mov
add
mov
ret
fnsave
lock
dec
jl
pop
jo
mov
mov
push
dec
xchg
aas
fbstp
dec
mov
add
jecxz
mov
sti
je
mov
ljmp
sti
lret
xchg
int3
add
and
ja
ret
aas
xlat
leave
push
pop
xchg
or
and
adc
ss
jl
scas
mov
jl
add
sub
sbb
lods
and
mov
fistl
adc
push
inc
cmc
ret
sub
test
cmpsb
jb
mov
clc
fs
add
js
test
icebp
lahf
orl
xchg
mov
iret
stc
mov
rolb
or
or
sbb
dec
das
pop
test
mov
adc
jbe
and
jp
cmp
out
mov
pop
imul
mov
mov
jl
das
iret
rcl
add
mov
cmpsl
lock
xchg
lahf
add
imul
inc
or
insl
loope
popa
cmp
out
and
hlt
mov
ficomps
fdivl
or
sub
ss
loope
push
pop
aas
filds
push
sbb
mov
movsl
test
stc
add
xchg
jnp
aaa
cld
ss
fdivrl
jne
pop
cmp
aam
dec
hlt
dec
xchg
ds
adc
jl
mov
fcoms
ret
in
mov
mov
or
push
xor
rcr
sti
pusha
pop
pop
mov
pop
push
xchg
lcall
inc
out
jl
pop
js,pn
dec
jae
in
cltd
das
addr16
stc
arpl
xlat
pop
sbb
imul
jp
mov
xor
push
push
fildll
pop
jle
sub
ret
imul
and
jnp
inc
ret
jno
ja
mov
push
adc
insl
loopne
mov
rclb
push
mov
mov
shll
mov
mov
test
add
loop
sub
jmp
sbb
jmp
mov
stos
pop
xchg
popa
rolb
lret
xchg
test
repz
loopne
movsb
push
mov
jnp
pop
fsubrs
pop
adcl
imulb
mov
movsb
or
nop
xor
pushf
cmc
or
mov
ret
inc
aam
movsl
sub
dec
and
cwtl
mov
jg
loop
rorl
in
mov
pop
mov
add
sbb
xchg
pop
cltd
aad
dec
popa
in
jb
pusha
stos
scas
push
in
dec
mov
fidivl
xor
je
cmpsb
push
stos
pop
adc
pusha
push
add
sahf
mov
adc
mov
dec
fucomip
cmp
jle
lods
mov
lea
imul
xchg
sbb
sahf
cmp
mov
adc
xor
mov
in
lods
jne
jg
mov
xor
mov
lahf
jno
test
lret
xor
jle
stos
sbb
pop
fdivr
push
sub
lahf
xchg
out
jmp
lret
mov
or
or
sti
xchg
es
clc
shrl
dec
cmp
sbb
push
push
dec
jp
lds
push
lret
dec
push
bswap
and
aad
les
inc
inc
das
in
xor
or
cmc
in
and
dec
popf
cmp
push
test
gs
cmp
dec
add
add
jle
push
sbb
push
lret
and
bound
setl
inc
loop
xchg
xchg
ret
add
pop
xor
jg
sbb
mov
lock
pop
sti
lea
push
in
stc
rclb
cmpsb
inc
pop
out
add
hlt
mov
jns
inc
adc
adc
xchg
xor
lret
jmp
and
mov
js
dec
iret
adc
and
mov
outsl
xchg
xchg
jno
mov
xchg
cmp
fsubs
fwait
push
mov
out
mov
push
xor
ret
icebp
pop
adc
mov
mov
ret
shl
xor
push
arpl
dec
notl
mov
mov
aaa
in
dec
cmp
sub
jb
mov
ficoms
cmp
cwtl
fisubs
jns
dec
in
xor
fsubl
pop
scas
pop
adc
int
push
jg
jg
fldt
mov
sti
popf
das
test
pop
pop
ret
adc
repz
nop
out
add
pop
sahf
and
xchg
shrb
loopne
mov
dec
aad
mov
jo
and
jne
push
cltd
sub
jecxz
imul
cmp
push
adc
repz
sbbb
cmp
push
cld
movsb
push
inc
scas
in
nop
sbb
push
xchg
cmp
in
js
outsl
test
ret
scas
or
jp
sti
repz
push
arpl
sub
jbe
sub
sub
int3
fbld
ret
mov
mov
mov
ret
push
push
pop
andl
mull
dec
int3
or
adc
int
ret
int
mov
imul
cltd
add
sub
ds
push
xchg
sahf
xchg
jae
adc
sub
add
push
fdivrp
mov
stos
dec
mov
sti
dec
shl
aad
or
out
dec
jl
insb
into
aam
add
adc
out
fisubrs
fcoml
cmp
xor
andb
jecxz
adc
sbb
inc
mov
setnp
xor
cltd
mov
or
fldt
fprem1
lock
inc
enter
mov
mov
add
mov
mov
call
loopne
push
mov
lea
xor
js
fcoms
loope
std
add
popa
inc
or
ret
cltd
cwtl
mov
ret
xchg
sub
adc
push
xchg
push
cmp
pop
mov
adc
imul
cmp
ss
mov
xchg
mov
add
loope
dec
in
pop
divl
inc
mov
xor
pop
daa
xor
sbb
push
adc
cs
pop
das
shl
ret
shrl
adc
das
push
cmp
xor
stos
xchg
les
jno
dec
lds
xchg
cmp
mov
adc
int3
test
xor
lret
fsubs
dec
lods
psrlq
jp
xor
nop
stos
scas
mov
add
xchg
pop
dec
imul
fistpl
pop
out
or
sub
arpl
xor
add
add
or
sbb
leave
xor
outsb
xorl
push
add
jno
out
nop
ret
out
ss
js
iret
fcomi
daa
push
add
mov
jp
inc
or
adc
stos
jo
and
loope
pop
dec
fildll
popa
push
dec
ret
fldcw
xor
xor
adc
pop
pushl
sbb
pop
hlt
cs
or
out
jge
fisubrs
dec
call
fcmovnb
xor
mov
mov
mov
popa
fsts
mov
out
push
mov
pop
lods
mov
in
lahf
xor
pop
xchg
or
adc
jg
pop
jnp
ja
fnsave
imulb
jg
push
ljmp
psubb
movsb
sub
ret
out
xchg
decb
clc
push
jno
mov
jle
in
orb
mov
add
xorb
sbb
clc
or
shlb
cmc
cmp
or
adc
cmp
sbb
pusha
xchg
ljmp
mov
clc
pusha
mov
dec
xchg
and
sahf
andl
dec
fisttps
jbe
inc
pop
xor
mov
addr16
dec
rolw
lea
or
mov
pop
push
adc
xchg
adc
xchg
adc
lcall
sub
out
fdivrs
or
lcall
rcr
adc
fldcw
imul
aad
mov
and
call
inc
lea
in
nop
or
add
not
cmp
inc
and
jle
and
adc
mov
stos
add
dec
sbb
es
dec
mov
loope,pt
dec
inc
mov
mov
and
add
sbb
mov
inc
rorl
fidivs
stc
and
insl
ret
add
insl
sbb
mov
pop
insb
adc
scas
xor
in
lret
fdiv
int
fwait
pop
insl
fsubp
ja
add
scas
cmc
adc
sbb
sti
negl
mov
in
push
sbb
cltd
loope
movl
adc
aaa
dec
cmp
stos
aaa
jmp
or
push
sub
pop
test
movsl
scas
push
and
ficompl
fs
daa
mov
cwtl
std
mov
aaa
mov
lods
mov
orb
dec
js
mov
add
inc
fwait
or
jno
ds
icebp
and
mov
test
xchg
mov
fmull
mov
jne
mov
sarl
mov
jecxz
adc
sub
pop
dec
pop
inc
push
in
in
pop
xor
mov
add
test
aaa
adc
popf
jbe
mov
repz
mov
loopne
and
jmp
or
notb
adc
repnz
adc
jl
pop
jo
into
add
into
scas
adc
popf
pop
or
fsubr
insb
js
sub
arpl
test
mov
sbb
add
xchg
xor
mov
addl
inc
pop
aam
in
mov
jmp
cwtl
arpl
addr16
jnp
mov
dec
in
leave
jb
mov
mov
push
sub
leave
pop
repnz
and
sahf
out
inc
cmpsl
add
aas
cmpsb
push
popa
bound
sbb
std
dec
adc
mov
mov
inc
or
movq
and
dec
cli
repz
mov
sbb
aad
sbb
pop
and
adc
test
call
in
in
lret
jg
adc
mov
pop
in
cmp
inc
xchg
mov
mov
rorb
sub
mov
movsb
dec
pop
iret
jnp
xchg
imul
pop
jg
xor
inc
pop
cld
int
push
insb
push
lea
je
cs
imul
cmpsb
add
push
jle
sub
inc
mov
jns
inc
mov
call
mov
cmp
mov
mov
dec
mov
xor
mov
or
dec
ja
xchg
aam
rorb
frstor
gs
stos
or
push
cmpsb
in
and
inc
xchg
pop
push
icebp
cmp
jge
push
scas
popf
jl
in
mov
bound
mov
mov
adc
push
lea
inc
sub
aaa
mov
je
xchg
cmp
out
inc
scas
sbb
aam
xor
cwtl
neg
jns
jl
pusha
adc
jle
mov
fwait
daa
inc
cmp
sbb
sti
shll
shr
ja
aas
sbb
aas
mov
sub
push
faddp
or
xchg
lock
movsb
push
lcall
movsb
lods
jae
pop
adc
cmp
int3
pop
and
loop
and
cmp
mov
lcall
adc
lock
cli
mov
mov
dec
js
push
sbbb
cmc
cwtl
jae
xor
mov
mov
and
or
sbb
or
xchg
arpl
clc
jne
in
add
sbb
sbb
shrl
sbb
mov
ficomps
imul
cmc
into
push
xchg
mov
inc
testl
subb
pusha
rcr
cmp
arpl
jecxz
mov
or
mov
int
push
shlb
fdivs
dec
mov
adc
lea
leave
push
xchg
xorb
das
mov
je
fwait
adc
xchg
push
imul
insb
popf
mov
xor
out
add
dec
sahf
outsb
movsl
pop
xchg
xor
mov
push
out
cmp
mov
jecxz
jo
shrl
rorl
push
pop
sahf
test
lahf
mov
inc
cwtl
cmp
movsb
out
xor
mov
test
stos
lods
lods
and
push
sub
pop
imul
cmp
push
add
dec
lret
jne
pop
sbb
imul
lods
subl
mov
or
jge
adc
push
cmp
inc
xchg
notl
adc
mov
or
or
es
js
popa
xlat
ror
push
cmp
inc
cli
xchg
mov
in
ja
nop
cmp
arpl
and
push
xor
pop
xchg
sub
xchg
mov
push
nop
mov
test
insb
cwtl
bound
push
lds
xor
and
repnz
lret
and
push
dec
xor
roll
mov
sub
jno
and
inc
pop
dec
xorb
sbb
test
mov
ss
outsb
mov
outsl
xchg
ss
pop
or
mov
sub
pop
cmc
fistps
shrl
pop
stc
ss
mov
loope
insl
jno
scas
and
or
cmp
sti
nop
lock
int3
mov
inc
dec
dec
leave
lds
imul
mov
imul
mov
imul
sahf
call
in
xchg
lret
and
adc
lock
adc
cmp
dec
mov
mov
fsubrl
jle
mov
negl
push
mov
push
jb
outsb
fs
sbb
stc
in
lcall
or
daa
mov
nop
xor
xlat
push
pushf
out
jle
pop
cmpsl
pop
xor
push
shrb
mov
sub
cmp
js
cmpb
jno
movsl
ss
rorl
add
fbld
iret
add
out
inc
lahf
add
ret
test
popa
lcall
rolb
inc
inc
insl
xchg
jae
fistpll
sahf
jecxz
cltd
push
cs
dec
and
and
push
push
add
stos
lds
mov
inc
adc
cmp
mov
movsl
cmpsl
mov
sbb
into
cmp
lds
push
xchg
shll
jmp
jnp
ja
mov
and
mov
insb
mov
lods
jns
add
into
enter
and
and
fldt
pop
add
pop
sbb
cmpsb
cmpsl
andb
or
in
add
inc
and
xor
hlt
push
xchg
andb
sbb
or
outsl
sbb
pop
dec
notb
mov
dec
outsl
fldenv
jnp
dec
out
mov
in
xor
leave
pop
mov
dec
xchg
fildll
ret
inc
cmp
xchg
or
adc
sahf
pop
test
neg
jl
jl
iret
leave
push
add
shl
adc
push
mov
adc
sbb
imul
sarl
jecxz
test
test
pop
lds
das
jnp
mov
ret
sbb
pop
mov
loope
aaa
push
imul
and
mov
fldt
shlb
xor
push
mov
or
add
mov
stc
inc
or
dec
xchg
xchg
jo
out
add
aaa
or
pop
pop
enter
pop
ja
idivb
mov
lcall
popf
cmp
add
int
fisttpll
stos
lods
sbb
out
out
xor
mov
adc
xchg
push
inc
sub
and
ds
add
mov
les
insl
mov
mulb
jo
mov
pop
int3
xchg
mov
jbe
and
jp
mov
iret
and
dec
xchg
adc
sub
pop
mov
js
outsl
cmp
test
icebp
xchg
jbe
pusha
aaa
dec
and
push
enter
test
pusha
and
in
icebp
jg
and
jbe
jl
mov
add
mov
cwtl
jmp
add
sbbb
jecxz
pop
loope
fsubrl
xor
mov
test
mov
fcomi
loop
std
ljmp
aam
xor
adc
fdivr
jnp
jae
cmp
xor
jl
push
movsl
jmp
ds
mov
rorb
imul
sub
scas
repz
push
scas
inc
lcall
push
inc
lea
inc
and
fcmove
pop
ret
pop
and
pop
cld
xchg
cmp
std
jmp
xchg
je
scas
out
mov
fdivrs
push
jb
xlat
dec
xchg
aam
lahf
mov
in
sbb
pop
lods
mov
arpl
leave
xor
in
pop
cltd
addr16
movsl
daa
jp
aad
ja
imulb
mov
test
pop
js
sub
mov
mov
jne
fimuls
cld
cmp
loop
out
aas
jecxz
inc
popa
in
add
js
sbb
mov
pop
xchg
repnz
sahf
movsb
push
je
cmp
mov
mov
and
add
mov
lret
negb
sub
addr16
pop
lret
xchg
stc
imul
scas
pop
in
inc
jae
dec
push
cmp
stc
and
out
ret
sub
push
testb
mov
repz
pop
mov
mov
mov
aaa
cmp
insb
js
sbb
mov
sbb
xor
notb
imul
aad
loop
dec
xor
xchg
clc
xlat
in
fyl2xp1
fisubrl
cmc
xor
pop
out
inc
mov
mov
rcll
ret
outsl
outsb
jnp
xchg
mov
mov
mov
test
out
cmp
negl
hlt
fsubl
mov
mov
ficompl
pop
int3
jmp
sbbb
xor
aas
lock
dec
adc
ret
lds
mov
pushf
cld
in
imul
push
or
aam
adc
adc
push
arpl
out
and
mov
in
dec
cmp
jne
mov
sbb
or
popa
xor
mov
lret
adcb
jbe
pop
mov
pop
test
push
icebp
push
stc
lds
mov
shll
pop
jmp
jae
xchg
rcrl
lods
ja
lds
push
add
fwait
out
sub
xchg
mov
jbe
xchg
adc
mov
ja
inc
movsb
jnp
outsl
and
pop
add
mov
sbb
jno
inc
xchg
cs
inc
mov
arpl
cs
addr16
subb
out
fldl
mov
aas
pushf
lret
in
sub
pop
lahf
xchg
cmpl
mov
or
pop
cmovs
xlat
ljmp
movsb
mov
cmc
mov
enter
daa
addl
jae
dec
cs
outsl
dec
push
push
mov
sub
fs
fstpt
mov
xorl
aad
popf
fucomi
gs
cmp
pusha
mov
or
call
push
or
mov
mov
push
sbb
scas
add
notb
xchg
decb
sarb
push
daa
cmp
dec
push
les
js
jbe
movsl
into
mov
and
xor
scas
mov
scas
insb
lret
mov
cmp
xchg
lock
cmpsb
out
frstor
jmp
inc
xchg
cmc
add
jbe
test
dec
movsl
cli
popf
addb
mov
add
pushf
inc
pop
and
shll
sbb
popf
mov
test
popa
jo
loop
movsl
fbstp
cmp
ljmp
pop
mov
mov
ficoml
mov
fwait
int
push
inc
insl
xchg
fdivrl
mov
in
cmc
xlat
mov
inc
out
ret
pop
hlt
fisubl
jmp
cmp
in
adc
cmp
iret
xchg
ljmp
aad
or
in
repnz
lahf
in
or
mov
out
popf
mov
jb
inc
mov
popf
rorb
adcl
stc
outsb
xchg
mov
popa
enter
jecxz
int
lret
sbb
into
and
adc
cmp
jnp
push
fisttpl
pop
mov
inc
adc
mov
cs
daa
mov
push
mov
mov
push
shlb
repnz
xor
lcall
xchg
jp
je
pop
xchg
ficoml
push
jne
cwtl
add
imul
jp
rorl
dec
xchg
rcl
sbb
stos
mov
stc
loope
pop
xchg
lahf
cld
movsb
and
popa
call
push
cmc
xor
adc
clc
add
sub
pop
add
int3
test
pop
pop
pop
pop
fsubrs
inc
push
pop
cmpsl
inc
sbb
les
cmp
inc
xlat
push
lods
fidivrs
mov
lock
and
xchg
fidivl
rclb
jo
cmpsl
push
jp
pop
jle
add
pop
cld
jns
dec
xchg
pop
inc
shll
loop
out
sarl
aam
fsubs
addr16
imul
loop
xchg
xor
lods
pop
cmpsb
pop
or
test
test
push
out
call
mov
inc
loope
jmp
push
sub
adc
stc
nop
sub
inc
or
mov
nop
or
sub
mov
rcl
dec
mov
push
pop
ljmp
into
test
stos
divb
out
and
jle
jbe
insl
pushf
mov
ror
mov
mov
test
callw
scas
pop
lahf
mov
shll
pop
sbbb
adc
jl
pop
arpl
sub
push
sbb
pushf
dec
mov
imul
mov
lds
sahf
push
inc
pushf
out
dec
jne
xor
cmpsb
mov
insb
dec
in
nop
mov
pop
fwait
loopne
adc
lods
push
std
fmull
xchg
xlat
jecxz
jns
andb
adc
dec
stos
mov
daa
mov
push
insl
inc
cmpl
and
cmp
aam
or
subb
mov
mov
mov
sub
jae
ja
ja
fmuls
or
cmc
add
cli
imul
out
inc
mov
cmp
lock
sbb
adc
imul
fbstp
in
std
icebp
jge
mov
or
mov
add
mov
movsl
mul
add
fidivl
cmp
imulb
ret
ror
repz
mov
ficomps
loopne
push
mov
js
dec
daa
sar
ljmp
in
lret
mov
add
ret
cmovs
insb
addr16
cmc
xor
xchg
data16
adcb
lea
xchg
insb
inc
mov
iret
jbe
or
mov
stos
mov
mov
pop
jp
adc
sbb
lret
push
fucomip
adc
sbbb
adcl
inc
sti
xor
pushf
dec
inc
jge
xchg
mov
imul
subb
in
bound
in
js
push
enter
addb
or
idiv
mov
and
jae
loope
push
les
adc
lahf
jae
jo
fmuls
ss
adc
jbe
xchg
xor
inc
jecxz
push
xor
xor
movsb
out
addb
adc
mov
xchg
divb
mov
sti
in
cltd
lahf
cmp
mov
jns
int3
out
inc
test
pop
xchg
popa
xchg
adc
push
mov
dec
addr16
push
scas
imul
or
fcmovne
jmp
sub
push
lahf
cmpsb
xlat
xchg
sarl
clc
rol
adc
out
es
jb
lods
jns
nop
push
mov
add
testb
jnp
lret
push
mov
push
ljmp
push
ja
and
jecxz
pop
mov
sbb
test
ret
push
out
cmc
cmp
dec
mov
ret
scas
loope
add
out
in
in
push
add
adc
mov
xor
mov
stos
sbb
sbb
arpl
outsb
jmp
push
push
inc
mov
xor
jg
std
pop
add
jmp
add
jmp
test
lahf
out
xchg
jp
add
adc
add
divl
push
mov
js
cmp
adc
lock
and
fists
les
and
and
and
adc
aaa
pop
push
lahf
andb
int3
adc
fisubrl
push
pop
cmc
icebp
sub
push
lcall
jno
mov
pop
mov
outsl
add
xchg
popf
mov
mov
adc
shr
out
imul
and
in
aam
sbb
push
insb
std
jl
outsl
add
aaa
mov
inc
xor
in
xchg
dec
cmp
loope
inc
adc
sub
ja
jnp
std
cld
loopne
test
rorb
out
cmpl
shlb
or
gs
les
or
insl
inc
out
jge
imulb
jmp
pop
mov
pop
scas
int3
test
and
in
sbb
les
fdivl
jb
addr16
sub
cmp
push
cmp
popf
call
xlat
add
shlb
sbb
test
sti
div
push
mov
out
cli
in
neg
jae
inc
jb
cmp
and
push
out
dec
stos
sbb
lahf
fcmovnb
pusha
mov
push
outsl
fdivs
in
sti
inc
and
dec
sub
daa
movsl
in
pop
stos
das
sbbb
cwtl
into
cmp
fnsave
jae
dec
dec
mov
dec
xchg
testl
es
pop
into
pop
aaa
les
or
imul
fstps
lret
arpl
sbb
out
fs
mov
xchg
cmp
daa
xchg
adc
inc
push
mov
daa
shl
fnsave
xchg
mov
adc
sub
cmp
mov
fwait
mov
cmc
dec
dec
in
sub
pushl
jmp
or
mov
fstpl
addb
decl
and
dec
cmp
lret
int3
sub
adc
cld
add
inc
jno
xor
inc
nop
add
je
leave
xchg
and
jbe
and
jo
and
adcl
negl
mov
jno
xchg
incb
adc
or
daa
je
dec
mov
fimull
inc
mov
out
pop
imul
pop
inc
add
push
std
es
repnz
mov
mov
mov
cld
xor
imul
adc
dec
mov
mov
xchg
lea
loopne
inc
cwtl
dec
xor
ret
fnstsw
inc
repnz
ja
lods
fstps
testb
pusha
lods
movsl
ljmp
push
push
cmp
nop
pop
and
out
stos
cmpsl
stc
insl
stos
cmp
popa
and
loopne
xor
cld
pop
adc
inc
xorl
aaa
xchg
mov
aam
lret
add
pop
sbb
mov
gs
aas
shrl
jbe
inc
xor
mov
mov
xor
imull
ficoms
nop
into
or
lret
xor
push
sub
shl
dec
punpckhbw
repz
lock
cltd
add
push
es
aas
subb
dec
insl
adcb
cmpsl
push
or
scas
xchg
adc
or
ljmp
lods
or
xchg
pop
xor
pop
dec
pop
loop
dec
shl
mov
mov
fbstp
bound
or
add
fbstp
mov
xor
and
loopne
call
mov
pop
or
mov
sbb
andl
inc
and
fldt
or
sub
mov
xor
cmp
xchg
mov
add
in
in
jp
repnz
stc
hlt
cmp
hlt
xchg
pop
cld
jg
dec
test
jbe
sub
mov
dec
cltd
orl
fwait
lret
cmpxchg
test
sahf
sahf
mov
mov
adc
test
sahf
cmp
sahf
xchg
or
sbb
mov
insb
xchg
aam
cmp
dec
cmc
jae
push
in
or
pop
xchg
addl
mov
daa
and
adc
add
push
sbbl
out
or
fwait
int
pop
sbb
xor
mov
dec
sub
out
addr16
sbb
das
dec
insl
gs
cmp
js
push
rcrl
cmp
cwtl
dec
and
sub
push
and
cmp
dec
push
fisttps
pop
scas
mov
dec
and
pop
sahf
or
pop
jno
test
lret
sub
jle
jo
dec
data16
roll
aad
rol
sbb
inc
test
jp
leave
or
sub
dec
dec
stos
jge
insb
ficoml
mov
dec
cmp
roll
adc
dec
out
fcoml
lock
jo
mov
push
push
mov
sbb
insb
lds
and
add
cli
dec
add
pop
decl
add
push
fdivp
dec
and
push
adc
scas
imul
inc
daa
dec
repnz
and
xor
pop
std
out
jmp
add
mov
mov
enter
scas
inc
mov
add
leave
sub
popf
stos
push
addb
or
sbb
or
jae
gs
repz
addr16
loope
xchg
fcomi
inc
movsl
pop
push
add
and
mov
clc
call
jmp
pop
mov
test
push
mov
in
or
std
and
mov
mov
out
add
cmpsb
scas
scas
aas
imul
and
push
cmpsl
sbb
add
mov
imul
inc
jl
fcmovb
xchg
cmp
popa
mov
or
fwait
cmp
icebp
loop
pop
cs
inc
cwtl
lock
mov
mov
mov
jge
stos
adc
dec
in
xor
xchg
pop
jge
popa
pusha
xchg
mov
xor
xchg
loopne
inc
outsb
lahf
cld
and
imul
out
mov
mov
icebp
push
repnz
hlt
das
je
shlb
inc
adc
adc
inc
mov
cmp
add
pop
and
mov
or
aad
out
pop
cld
out
cmp
je
scas
cmp
mov
rorb
arpl
push
lahf
xchg
cmp
imul
cmpsl
mov
add
lods
test
in
out
xchg
push
cmp
mov
push
mov
pop
daa
aaa
loopne
ret
push
pop
in
hlt
ja
inc
dec
enter
std
mov
add
sbb
xchg
lret
mov
inc
or
cmp
dec
add
repnz
fisttpl
loopne
ljmp
push
les
icebp
mov
sbb
daa
movsb
mov
push
xchg
sub
lock
clc
xchg
sarb
out
fisttps
pop
mov
mov
imul
or
fsub
subb
loope
ljmp
cmpsb
je
add
je
pusha
out
addr16
imul
mov
int3
mov
repnz
popf
push
test
add
idiv
adc
jns
push
aaa
xchg
in
xchg
icebp
into
add
mov
insl
fnstsw
mov
fldcw
adc
mov
jo
cmp
in
fcmovu
in
ljmp
in
ljmp
add
scas
scas
arpl
jns
inc
sbb
jno
add
ds
push
aam
adc
and
jg
add
dec
xchg
add
ja
or
rclb
dec
mov
add
sbb
test
les
les
sub
sti
mov
pop
popf
cmc
in
cmc
int3
pop
or
scas
rcl
ret
mov
scas
mov
cmp
loop
or
cmpl
pushf
das
jnp
jb
clc
lahf
aas
mov
stc
clc
and
daa
lds
jg
mul
mov
stc
push
ljmp
or
xlat
xlat
xchg
dec
xchg
lods
js
idivb
cs
sarb
add
jg
popf
pop
add
stc
loope
cmpsl
mov
pop
jbe
xor
ficomps
xchg
sbb
sbb
xchg
rcll
ja
fisttpl
aaa
iret
aas
xchg
xchg
test
imul
sbb
lods
bound
sbb
mov
insl
push
mov
dec
add
cmpb
and
fisubrl
js
leave
mov
outsb
lods
pop
jge
loopne
mov
lods
add
data16
xchg
inc
jbe
decb
xor
lahf
mov
insb
sub
aas
add
inc
lods
cmpsl
lock
jbe
idivb
mull
pop
sub
jo
popa
leave
outsb
pop
lcall
int3
adc
popf
sbb
xchg
mov
push
mov
in
test
push
jo
outsl
cmp
xchg
push
fisttps
xchg
jecxz
fidivl
pop
or
nop
inc
mov
stos
out
enter
filds
pop
xlat
push
push
lret
and
xchg
and
pop
repz
mov
rclb
pop
mov
in
xchg
push
outsl
inc
mov
push
mov
pop
shr
fisubrl
cli
xchg
leave
cltd
mov
int
idiv
jmp
cli
push
mov
aam
out
nop
xchg
push
stos
sbb
xchg
xchg
leave
imul
cli
jmp
out
clc
testb
mov
mov
fadds
sub
mov
jnp
push
fbld
imul
inc
repnz
or
addr16
adcl
aas
lahf
ds
and
in
sub
pop
loop
lock
push
cmp
fstps
push
adc
addb
or
testb
shrb
push
adc
movsl
imul
pop
shl
idiv
incl
pushf
test
out
nop
sbb
fstpt
rcll
jns
adc
in
in
mov
imul
shlb
xchg
repz
xlat
out
mov
insb
sti
jo
repz
cmpsl
xchg
pop
pop
dec
iret
sahf
lds
pop
mov
xor
jns
out
movsl
and
ret
repz
test
out
xchg
jp
sub
push
push
bound
in
sub
pop
sti
fdivl
push
insb
push
lea
repnz
mov
bound
add
push
out
repnz
lods
popl
mov
mov
mov
add
stos
mov
xchg
xor
sbb
scas
mov
cli
jge
cmp
pushf
arpl
lods
clc
lea
test
sub
dec
fwait
adc
sbb
loop
pop
pop
ja
loopne
push
push
addl
lds
mov
fdiv
ret
jno
pop
ds
scas
ret
aam
xchg
sbb
adc
jecxz
pop
and
negb
pop
loopne
ljmp
int3
into
pop
mov
inc
rcr
bound
fidivrl
mov
pop
sahf
ds
movsb
pop
cmpl
jne
adc
add
add
push
inc
dec
push
mov
push
adc
push
mov
dec
pusha
std
or
call
push
jb
adc
in
in
ret
and
into
pop
repz
out
and
in
cwtl
les
cmp
daa
lea
fwait
das
outsb
test
loop
std
mov
and
push
add
fcomp
test
out
incb
xchg
fstpl
arpl
js
es
rcrb
sbb
mov
adc
into
fst
iret
jge
cmp
stos
adc
out
fdivrl
push
mov
jle
scas
aaa
je
cmp
mov
js
test
xor
dec
mov
xor
int3
and
in
jge
outsl
in
int3
hlt
sbb
xchg
xor
not
xor
jl
pop
or
repz
mov
in
fiadds
xor
clc
dec
dec
ljmp
xchg
inc
sub
movsb
cmp
add
movsl
cld
jnp
jg
dec
movsl
mov
int3
adc
add
jle
mov
imul
es
arpl
inc
pop
mov
cmpsl
sahf
sub
xchg
imul
jnp
xchg
and
repnz
test
in
std
cwtl
adc
sbb
dec
out
sbb
ret
jae
fdivr
xchg
pop
sub
clc
movsl
pop
push
insb
cmp
sahf
ficomps
fiaddl
push
sarl
jg
pop
jae
rcl
enter
jbe
or
push
pusha
imul
pop
mov
popa
ss
cmp
daa
mov
or
jp
dec
ret
sub
test
jo
pop
push
push
lahf
int3
jmp
mov
or
push
push
cmp
sbb
stos
inc
lods
inc
faddl
add
sub
faddl
std
inc
xchg
pop
fs
sub
rcll
sbb
dec
mov
sbb
mov
loop
adc
test
mov
mov
and
pop
pusha
shll
jns
xor
add
mov
xlat
mov
lahf
int3
or
out
test
je
sbb
or
dec
ss
or
pop
ss
or
dec
jne
push
out
daa
stos
mov
mov
repnz
cmp
fdiv
mov
or
mov
xchg
aaa
movsb
mov
stos
adc
adc
mov
pop
xchg
cmc
cmp
dec
adc
test
std
loop
fnstenv
fstps
inc
push
push
loop
push
push
push
ljmp
out
mov
add
pop
add
push
xchg
movsb
xlat
xor
jbe
or
adc
addr16
xor
jns
int3
adc
lret
int3
pop
testl
mov
fisttpll
out
push
out
mov
ja
or
fdivs
and
cmp
jmp
pop
mov
js
push
add
jg
ds
push
sub
or
les
jecxz
mov
adc
rorb
mov
lea
cld
and
dec
and
imul
into
ljmp
jmp
sahf
add
add
sbb
subl
out
fiaddl
shll
shr
xchg
mov
dec
mov
xchg
pop
push
cli
aaa
dec
mov
cmc
or
iret
cli
aad
sub
inc
sarb
xchg
scas
jae
and
mov
add
xchg
dec
dec
pop
mov
lods
jl
dec
jo
daa
mov
pusha
sbb
push
adc
push
jecxz
jg
aaa
insl
repnz
daa
ljmp
dec
popa
mov
insb
out
mov
mov
sub
jecxz
daa
inc
sub
stos
das
nop
xchg
inc
bound
and
mov
cmp
test
xor
mov
dec
jle
adc
call
in
sbb
sub
push
outsl
sub
lcall
jne
mov
incb
pop
int3
xor
shr
dec
sarl
stos
cmpsb
sbb
adc
pop
in
xchg
rorl
mov
inc
add
mov
xchg
les
jns
cmp
jbe
movhps
and
sbb
dec
ja
sub
xchg
outsl
inc
adc
pusha
lret
pop
lock
loop
adc
repz
outsb
jo
dec
adc
xor
xchg
dec
push
or
popa
sub
xchg
mov
adc
les
iret
jp
and
out
daa
xlat
aad
dec
cmp
dec
bound
jbe
add
xor
and
dec
es
in
test
xor
or
iret
lea
jo
sub
mov
iret
aaa
dec
push
lea
adc
mov
push
pop
fldcw
addr16
mov
scas
pop
sbb
es
and
pop
aad
and
or
jmp
xor
es
adc
popa
cltd
xchg
ds
in
cmpsl
out
fmull
mov
jae
mov
mov
aas
add
in
mov
pop
mov
orl
test
mov
shlb
loop
sbb
mov
or
push
jo
cltd
pop
xchg
add
data16
sub
adc
gs
in
ret
dec
sbb
or
sbbb
dec
jp
jp
test
sub
push
into
lods
sbb
push
jle
ficomps
hlt
dec
push
popf
adc
jae
or
xor
mov
xchg
outsb
and
inc
push
mov
in
lods
cmc
xor
adc
dec
push
mov
push
rcrb
scas
mov
lahf
out
cmp
cltd
adc
or
loopne
pop
xchg
inc
out
dec
pusha
das
stos
test
fildll
mov
cmpl
lahf
sti
movsb
sahf
dec
mov
out
add
aas
dec
cmpsl
lcall
mov
inc
xchg
aaa
cmpsb
dec
push
sbb
dec
jno
dec
mov
sub
add
aam
add
jmp
pop
xchg
ss
xor
enter
inc
mov
jb
stc
fildl
repz
mov
test
mov
sub
cmpsb
jg
adc
sub
test
out
add
inc
xchg
fcmovb
cmp
arpl
out
cld
mov
outsb
add
mov
in
pusha
jne
inc
add
pop
mov
movsb
adc
testb
inc
out
jo
nop
adc
in
jmp
add
jae
enter
fwait
adc
mov
and
adc
scas
lea
mov
jne
out
jp
mov
arpl
mov
rol
movl
mov
and
push
mov
xchg
div
add
mov
xchg
pushw
loop
xor
pop
scas
repnz
mov
push
xchg
push
les
fdivrl
sbb
ret
mov
fdiv
ljmp
out
icebp
xchg
ljmp
jb
add
push
imul
xchg
pop
pop
cmpsl
scas
pop
mov
dec
cmp
dec
and
xchg
lods
sub
ds
movsb
dec
push
loope
loopne
sbb
imull
fprem
lods
sbb
push
xchg
dec
popf
int
pop
std
aam
pop
jecxz
xchg
mov
xchg
jge
jmp
out
outsl
fiaddl
adc
inc
aas
icebp
xchg
mov
cmp
xchg
cmp
or
mov
out
adc
out
clc
pop
xor
fldenv
inc
mov
dec
pop
mov
pop
push
insl
sub
lds
aad
or
stc
insl
mov
inc
push
or
and
nop
notb
cmpsb
out
inc
js
mov
aam
call
sub
inc
fcoml
es
outsl
jo
enter
rorl
push
inc
pop
insl
or
stos
add
add
push
jmp
test
imul
pop
pop
add
push
xchg
lret
daa
icebp
jns
mov
jecxz
ss
push
cmp
inc
adc
or
shl
jb
push
mov
sbb
inc
inc
xchg
and
xor
ljmp
pushf
push
jle
sbb
adc
fcom
clc
adc
xor
mov
jg
out
lods
dec
sahf
lcall
sahf
pop
pushf
rcrb
fdivrs
adc
leave
push
mov
imul
test
jecxz
xor
push
popf
in
cmpsl
shr
mov
sbb
outsl
push
repz
out
jns
les
adc
mov
scas
jb
mov
mov
or
sub
or
cmp
test
mov
sub
ret
sub
push
fcomip
mov
or
jg
adc
pop
pop
mov
in
xchg
cmpsb
pop
pop
out
push
icebp
jae
jo
jno
mov
push
imul
mul
aad
outsb
loop
lahf
jecxz
cmp
stc
je
outsb
dec
pop
xlat
jbe
and
mov
popa
mov
aas
cltd
out
jb
mov
ljmp
fistpll
xchg
hlt
repnz
push
mov
out
mov
rcrl
and
iret
mov
cmp
cld
in
pop
ds
mov
inc
das
bound
aas
or
pop
int
movsb
das
xchg
ret
mov
pop
add
adc
stos
dec
inc
lds
mov
mov
jl
idivw
adc
mov
dec
imul
inc
jno
call
out
dec
jbe
cmp
or
daa
gs
cltd
insl
cmc
xor
rolb
ret
xor
and
ss
in
sbb
inc
fsubrs
jns
or
dec
pop
and
ss
imul
mov
adc
inc
invd
xor
sbb
adc
clc
test
xor
pop
nop
xor
xor
insl
fildl
pop
and
add
adc
pop
push
incl
movsb
ja
push
jnp
imul
adc
and
mov
pop
aas
ss
mov
into
xor
out
xchg
cltd
mov
insl
out
lret
icebp
addr16
sub
hlt
xorb
lods
and
fsubrl
orb
mov
shll
sub
push
fisttpl
mov
push
mov
adc
dec
outsl
push
adc
cld
add
inc
push
dec
aas
adc
lret
pop
mov
sub
and
popa
incl
adc
pop
insb
mov
pop
int
out
and
sbb
xor
and
test
pop
xchg
mov
std
inc
mov
xor
cmp
jge
or
or
push
dec
fcompl
add
cwtl
je
mov
sbb
pop
fldenv
add
repnz
addr16
add
or
xor
jl
and
and
test
jle
jns
push
hlt
rolb
stos
test
loope
or
and
sahf
mov
loopne
push
mov
adcl
icebp
cmp
cmpl
cmp
mov
cltd
cmp
ljmp
or
out
mov
cmp
adc
lahf
pop
ds
rclb
mov
outsb
insl
mov
es
clc
and
sub
inc
cwtl
sti
mov
mov
lret
clc
test
and
sbb
in
sub
sbb
pop
test
les
test
and
pop
xchg
sarb
push
rcll
out
cmp
add
lcall
push
jno
xchg
cmp
pop
mov
clc
pushf
xor
int3
jne
and
push
dec
fistps
mov
mov
cmc
dec
cs
mov
mull
cmp
mov
popf
cli
cltd
les
or
dec
sub
or
push
aam
cmpsb
xor
cmp
orb
sbbb
cmpsl
out
mov
jecxz
mov
es
mov
sub
mov
dec
mov
jge
fmul
push
add
sarb
insb
mov
cmpsb
pushf
mov
push
sbb
xor
adc
std
inc
cltd
test
loope
cs
arpl
jns
outsl
or
or
rorb
add
adc
sbbl
movsl
fisttps
out
scas
sbb
aam
cs
xchg
lcall
cmc
imul
xchg
lock
shlw
rcrb
sub
push
xlat
jbe
int
fwait
idiv
nop
movsl
pop
shl
cmove
mov
ljmp
adc
jge
adc
mov
bound
orl
or
into
lea
int3
iret
nop
inc
jbe
inc
jmp
mov
fcmovnu
dec
inc
or
arpl
mov
les
das
jno
xchg
inc
xor
add
inc
cwtl
stos
jp
lret
push
push
nop
sbb
push
mov
cld
xchg
jecxz
shrl
rclb
out
in
jns
xchg
or
lret
mulb
push
mov
in
xor
in
insb
xchg
inc
push
push
int
add
or
mov
inc
jno
push
cwtl
repz
sbb
xchg
imul
lock
pop
pushf
mov
push
je
in
jp
mov
lcall
push
dec
jg
sub
ljmp
aaa
shlb
int3
push
incl
mov
pop
xchg
or
fcoms
jae,pt
cltd
or
mov
setle
fdivrl
xor
jae
pop
imul
testb
cmc
or
lahf
add
add
mov
cmp
ss
jl
daa
and
mov
push
push
jp
xchg
mov
aad
das
pop
push
adc
push
mov
push
or
cmp
jmp
aaa
hlt
mov
xchg
shrl
call
cmc
and
repnz
pushf
rcl
movsb
mov
mov
dec
mov
jbe
xor
std
mov
out
cmpsl
lahf
jge
scas
jns
imul
mov
das
jbe
sub
dec
aam
das
loop
fs
adc
push
pop
xor
and
flds
ucomiss
and
mov
mov
nop
cltd
scas
jne
scas
jbe
popf
pusha
adc
mov
mov
mov
xor
fdivrs
call
or
aad
sub
mov
shll
mov
push
lcall
xor
popa
imul
pop
in
sbb
aad
iret
outsl
lods
xchg
call
int
sub
jne
add
fsts
inc
roll
cmp
dec
repnz
lods
in
es
andb
cmpsb
sti
xchg
add
ljmp
fldenv
imul
push
cmp
and
jo
stos
out
sub
sti
out
mov
insb
out
subl
sahf
in
cmp
arpl
jne
std
push
fidivl
mov
pop
nop
adc
mov
out
pop
push
clc
adc
notb
andl
sbb
xchg
mov
jp
or
push
int
addb
out
and
pop
imul
push
ljmp
mov
push
push
jl
push
jae
aas
xchg
sub
icebp
clc
mov
int3
cwtl
adcb
or
push
mov
dec
lret
outsb
sbb
adc
cmc
test
mov
loope
out
lds
push
push
adc
leave
adc
fmull
fucomip
adc
adc
push
adc
add
pop
jge
lcall
cwtl
rcr
mov
jp
sbb
stc
idivl
loopne
sbb
lret
loopne
xchg
mov
sub
pop
dec
enter
pop
out
scas
jae
inc
mov
lods
jae
xor
repz
push
mov
leave
repz
aam
sub
fisttpll
xor
scas
add
push
sub
xor
pop
mov
repnz
stos
lea
jp
movb
dec
ret
movsb
jnp
xorl
ret
mov
dec
pop
imul
or
call
cmp
rep
pop
mov
jmp
cmp
cmp
dec
push
test
repnz
jns
or
adc
push
jl
iret
into
dec
inc
and
mov
mov
ja
loope
jecxz
mov
lock
mov
xor
xchg
dec
repnz
jecxz
sti
mov
sahf
js
adc
push
je
mov
and
ljmp
mov
std
loopne
divl
mov
xchg
rol
loopne
or
cmp
jge
mov
inc
insb
jne
push
ficoms
je
pop
push
arpl
sbb
cmp
jne
gs
dec
arpl
mov
dec
mov
mov
pop
mov
dec
insl
pop
stc
xlat
jnp
nop
inc
pop
fldenv
sarl
mov
dec
mov
fnsave
dec
aad
fstl
dec
cmp
aam
push
ret
addr16
jp
lock
mov
in
ds
mov
bound
mov
push
fmulp
rcl
jp
mov
push
lea
mov
push
jle
icebp
rol
push
inc
cltd
pop
push
push
fwait
test
jae
jb
mov
sbb
icebp
xchg
sub
mov
test
fcompl
mov
in
add
push
and
cmpsl
outsb
mov
test
inc
dec
or
inc
lahf
or
dec
fwait
xchg
mov
mov
xor
sub
pushf
adc
repz
cwtl
popf
out
insb
jno
mov
pop
xor
popa
mov
mov
icebp
stc
hlt
pop
or
pop
out
push
in
push
xchg
pop
stc
pusha
subb
stos
cmpsb
cmp
aaa
sar
dec
add
outsb
mov
rcll
mov
push
xchg
sar
cmpb
stos
push
cltd
orb
jnp
inc
adcl
inc
adc
lret
roll
sub
jle
xchg
or
jae
dec
or
inc
cltd
mov
pop
jnp
ljmp
stc
mov
pop
jl
dec
cmp
sub
mov
jnp
sub
xchg
lock
mov
jg
icebp
or
pusha
dec
loope
mov
es
cli
mov
pop
pop
mov
xor
inc
das
into
shlb
icebp
add
movsb
out
call
mov
inc
cwtl
cmp
mov
iret
in
or
iret
les
std
nop
cmc
std
rcrb
add
sub
mov
loope
jmp
pop
test
es
push
adc
jl
sbb
mov
fcompl
mov
insb
or
push
push
pop
cmp
scas
and
cmp
dec
ljmp
inc
xor
pop
push
rcll
outsb
stc
xorl
sbb
loope
idivl
jnp
fidivl
dec
mov
arpl
xchg
adc
or
xor
cmc
add
js
lods
clc
and
or
scas
inc
loope
inc
or
mov
test
dec
pop
sub
inc
jmp
sub
inc
jmp
or
ljmp
add
mov
arpl
stc
data16
jecxz
pushf
fdivs
data16
aaa
fsubr
dec
fistpl
andb
and
dec
and
dec
mov
lret
dec
outsl
xchg
mov
pushf
repnz
dec
or
or
adc
inc
push
or
mov
in
shlb
shlb
fidivrl
call
lret
or
jbe
fldt
and
xchg
xor
mov
mov
and
iret
jmp
das
insb
js
popf
xchg
test
jmp
in
jb
aad
loop
aas
xchg
xchg
sub
cltd
pusha
jae
and
fwait
sbb
adc
out
xchg
or
scas
inc
sbb
lock
jg
call
fbld
push
ss
les
xor
push
xchg
daa
fisttpll
adc
leave
popa
ret
repz
dec
idiv
xlat
mov
adc
sub
adc
or
mov
mov
addr16
adc
lahf
lock
ret
fists
mov
sub
adc
push
daa
std
and
xchg
dec
push
movsb
cmp
ljmp
pop
das
cmp
bound
push
rorl
in
ret
jne
mov
fimull
les
pop
rclb
cwtl
cltd
gs
xor
xchg
add
imul
inc
mov
loop
and
mov
pop
dec
arpl
pop
pushf
into
cmpsb
push
fisubl
ds
xchg
xchg
dec
dec
in
dec
movsl
and
or
int3
mov
cmp
adc
jb
testb
push
jne
test
cmpsb
and
dec
xchg
cmpl
je
nop
push
lret
pop
push
les
jo
push
add
adc
loop
sbb
mov
fstpt
dec
in
dec
inc
imul
mov
out
leave
xchg
mov
xchg
stc
dec
dec
aad
sbb
mov
ss
lods
xor
adcb
insl
fcomip
inc
pusha
sub
xor
or
int
add
jo
push
jbe
inc
fcmovnbe
cli
hlt
fldenv
sbb
das
adc
jne
cmp
xchg
aam
xchg
movsl
movsb
jge
xor
mov
jp
mov
inc
lret
fstpl
pop
cli
subl
mov
sbb
add
pop
cld
pop
sub
or
inc
mov
fisttpll
or
aas
xchg
jo
mov
sub
ja
test
dec
cmp
adc
out
std
pop
push
pop
adc
mov
mov
arpl
and
xchg
repnz
push
and
lods
or
sahf
nop
shrb
dec
test
sbb
or
push
lods
jb
lods
jecxz
mov
gs
xor
pop
xchg
sti
push
lcall
iret
inc
test
mov
inc
clc
dec
jns
jge
aas
xchg
hlt
mov
pushfw
inc
jno
add
cmp
js
and
inc
mov
popa
push
adc
sbb
add
sbb
fistpl
fildl
jbe
xor
ficompl
outsl
repnz
mov
sub
sbbb
mov
ds
add
popf
cli
mov
xchg
loop
and
loope
movsb
push
pop
insb
and
mov
pop
mov
cpuid
rcrb
add
push
mov
stos
mov
mov
push
jg
dec
rorb
in
sbb
lock
push
into
sbb
int3
leave
push
mov
fmuls
and
or
loopne
je
pop
stos
insb
mov
sub
out
lret
call
out
jmp
sbb
insb
xor
cld
xchg
sub
jo
repz
mov
push
rcll
out
push
add
mov
sahf
ss
das
xchg
push
cmc
sahf
loope
mov
xchg
mov
iret
cmc
add
dec
xchg
jmp
jl
add
das
mov
imul
outsl
xchg
insb
sub
outsb
sbb
mov
aaa
add
inc
js
sub
pop
adc
adc
cmp
int3
push
sbb
push
mov
imull
imul
pop
fldt
stos
out
jbe
xadd
mov
ljmp
cltd
dec
in
mov
add
add
mov
ds
mov
push
enter
fnstsw
xor
sarl
lods
dec
lcall
lret
out
ret
cld
fs
adc
cmp
cmpsl
idivl
sbb
xchg
fs
popf
lret
es
mov
arpl
cmp
test
int3
loop
mov
fdivr
test
or
adc
je
sbbb
cmp
and
mov
mov
movl
cwtl
add
jne
aad
faddl
idiv
xchg
stos
mov
lcall
pop
mov
in
aam
or
lea
push
pop
sub
mov
jle
and
xchg
loope
nop
sbb
lock
repnz
xchg
push
icebp
pop
outsb
jle
mov
leave
dec
shrb
adc
add
jo
subb
jb
insb
into
test
pop
in
dec
js
sub
pop
lret
subb
push
push
mov
insl
push
xor
push
cltd
pop
mov
push
xchg
addr16
out
bswap
test
push
jle
jbe
add
and
lcall
push
into
dec
packsswb
xchg
dec
and
cmp
mov
push
and
scas
mov
insb
cli
dec
lock
into
or
cmp
ret
xchg
lea
cmpsl
jge
adc
out
rcr
pop
jg
daa
nop
push
xchg
insb
jecxz
sahf
popa
push
nop
adc
popa
sbb
pop
sbb
fbld
mov
sbb
xchg
sbb
dec
and
adc
lret
push
push
xchg
pop
scas
mov
icebp
rcl
idivl
clc
pop
js
insb
ret
mov
cmp
or
adc
cmp
cli
cmpsl
adc
test
leave
sub
int
lcall
pop
push
cmpsl
dec
bound
mov
enter
or
shll
lds
in
jne
js
shrb
adc
movl
sub
shll
xchg
cmc
stos
sbb
cli
loope
xchg
movsl
mov
lds
mov
hlt
xchg
bound
sbb
cwtl
adc
ficomps
inc
pop
popa
out
or
lods
mov
roll
mov
cld
cmp
stc
sahf
push
imul
in
sbb
sub
ja
repz
pop
xor
xchg
mov
jp
pusha
pushf
add
daa
fstl
fs
dec
xchg
and
scas
add
gs
or
sub
test
xchg
xchg
clc
add
subl
fldl
xor
mov
adc
loope
xchg
push
mov
cltd
shll
sahf
je
add
xchg
xor
addl
pop
pop
jae
xchg
outsl
ja
push
lcall
xchg
jno
and
mov
stos
pop
adc
addl
xlat
mov
testl
sbb
test
loop
mov
sub
add
sub
jge
xchg
and
into
or
sub
movsl
loop
xor
sahf
dec
lss
rcrl
cmpsl
push
cmp
cs
pop
arpl
fcomi
aas
inc
fmulp
pop
and
mov
stos
mov
jmp
fmuls
mov
mov
scas
mov
or
jg
out
outsb
pop
push
mov
cmpsb
jg
loope
xor
out
fwait
sahf
push
inc
dec
arpl
xchg
insb
mov
pop
jg
cltd
arpl
adc
mov
shll
int
push
pop
dec
shll
cwtl
mov
dec
inc
test
leave
adc
mov
jno
test
scas
mov
push
and
xor
adc
xchg
mov
mov
test
cmp
popf
add
fs
test
imul
mov
subl
xchg
mov
cmp
das
pop
mov
pop
or
bound
push
mov
int
sub
test
test
out
pop
loop
inc
inc
cmp
mov
fdivs
inc
jp
rcrl
xchg
ja
das
mov
repz
and
mov
dec
repnz
or
push
ds
les
lods
and
cmp
fmul
inc
arpl
push
test
mov
ret
dec
push
sub
add
clc
push
inc
std
mov
cs
jle
pop
sbb
mov
mov
jecxz
and
icebp
jo
push
movsl
inc
mov
in
sub
sub
push
mov
pop
sbb
jnp
or
push
mov
js
add
lea
cmp
idivl
nop
push
inc
push
inc
aad
xor
xlat
sahf
sbb
and
xlat
adc
push
loope
shrl
arpl
jle
xor
call
mov
and
pusha
push
cmp
jae
cs
mov
jns
test
inc
das
mov
push
adc
jg
inc
lds
mov
leave
mov
mov
cmp
mov
and
mov
ret
pushf
add
into
leave
xchg
sub
mov
ja
sbb
inc
or
cwtl
mov
pusha
inc
hlt
push
mov
sbb
lcall
jo
rol
lods
add
mov
imul
push
stos
fimuls
fcompl
call
mov
dec
rorb
xchg
push
add
sti
test
stos
push
xchg
sbb
lea
aam
cmp
cli
loope
xor
or
rcrl
movsl
mov
lcall
lcall
in
adc
adc
jbe
out
or
push
push
divl
and
add
std
mov
divb
addr16
sbb
mov
dec
sub
stc
mov
mov
xchg
pop
and
add
pop
sti
xchg
icebp
fldcw
add
xchg
push
in
arpl
jb
insb
push
lret
inc
pause
sub
imul
mov
sti
mov
mov
xchg
push
cltd
cmpb
push
cwtl
jge
test
xor
jno
lret
mov
sbb
decb
xor
shr
aam
push
push
and
inc
daa
addl
push
test
not
ficoms
and
push
lcall
mov
jp
mov
inc
mov
push
jle
jp
aad
mov
addb
xor
and
xor
aad
lds
test
pushf
movsb
push
cmp
mov
jnp
xor
push
push
sub
jp
into
push
sahf
into
lods
cmp
rcll
xor
xchg
push
mov
jg
test
pop
repz
fsubrl
lret
xchg
into
adcl
push
xor
jns
nop
sahf
shrb
cmc
sbb
cwtl
shlb
icebp
movsb
aaa
pop
mov
and
movsl
inc
sub
stos
inc
mov
fldt
jle
dec
xchg
scas
jns
cmpsb
adc
sub
xor
mov
add
sbb
pop
dec
add
loope
inc
lea
es
insb
mov
ljmp
lret
pop
into
sub
loopne
popa
repnz
scas
xor
subb
popf
leave
es
and
mov
out
mov
lret
arpl
lret
xor
ds
ret
add
xlat
cmp
int3
loop
mov
into
lods
hlt
cmp
push
inc
sahf
ds
mov
lcall
adc
ret
sbb
xchg
pop
jge
dec
ds
stos
popa
push
jne
mov
movsl
loope
aas
iret
arpl
call
jo
mov
insb
cmp
aaa
sbb
pop
or
mov
arpl
mov
test
loopne
inc
insb
or
adcl
lock
movsl
adc
push
aam
mov
pusha
fcmovb
pusha
inc
fsubl
dec
sub
adc
push
data16
cwtl
or
fiaddl
jno
mov
jle
pop
push
pop
test
adc
inc
inc
gs
sub
stc
fisubrl
add
push
fwait
cwtl
stos
loop
jmp
test
mov
pop
jmp
dec
push
stos
in
mov
xor
sarb
jno
xchg
mov
movsl
jg
xchg
dec
addr16
jns
mov
mov
jmp
lret
addr16
insb
daa
inc
xchg
cmp
rcrl
test
aaa
push
jno
xchg
adc
jns
mov
stos
hlt
sbb
cwtl
movsb
imul
add
sbb
mov
pop
mov
inc
sahf
push
dec
sub
ret
stos
loope
add
popa
pop
add
cmpsb
inc
iret
and
sbb
sub
in
jno
movsb
gs
sub
add
pop
push
ds
add
outsl
mov
pop
xor
adc
aaa
xor
subl
dec
push
in
dec
jge
fwait
insl
and
lret
or
psubsb
mov
cli
add
ds
insl
arpl
fdivl
sbb
push
mov
insb
inc
les
xchg
popf
ljmp
cwtl
mov
add
sub
addb
inc
test
aad
and
ja
cmp
stos
mov
decb
out
push
sbb
adc
cmc
pop
outsb
add
xchg
inc
into
xchg
sbb
call
sbb
adc
or
addr16
popf
or
mov
les
mov
jb
pop
js
and
inc
xor
sbb
xor
les
jb
adc
mov
aam
pusha
stos
jmp
ja
insb
in
lret
jp
jmp
xchg
in
mov
repz
or
push
das
or
insl
mov
mov
jns
xlat
adc
pop
rcl
push
xor
andl
xchg
xchg
loopne
dec
pop
shrl
dec
sub
stos
into
js
data16
mov
js
push
nop
outsb
addr16
and
push
sti
and
sbb
gs
hlt
cmpsl
add
ret
mov
popf
mov
dec
mov
ret
inc
addr16
test
movsl
lods
mov
cmp
lret
mov
imul
pop
jge
dec
sbb
add
arpl
adc
lea
arpl
outsl
sti
xchg
adc
test
pop
outsb
shlb
pusha
bnd
jnp
in
outsb
js
adc
cmpsl
xor
shll
call
cmovo
lea
out
inc
jp
mov
push
cmp
dec
xor
mov
ds
pusha
jmp
dec
sbb
iret
scas
sti
sarb
addb
inc
push
hlt
sahf
inc
cmp
sub
pop
data16
jbe
pop
nop
pop
scas
mov
fs
cmp
xor
in
adc
pop
add
daa
mov
jg
xor
hlt
cmp
ds
cli
add
cmc
aaa
aad
in
xlat
xor
or
mov
out
das
adc
mov
dec
mov
cs
shlb
mov
xchg
stos
mov
xor
sbb
xchg
ja
insl
sbb
pmuludq
lods
mov
test
mov
mov
xchg
das
inc
das
or
pop
xor
mov
mov
shlb
pusha
mov
mov
out
jb
sti
ret
data16
jl
xor
sbb
daa
aad
test
lret
add
or
leave
mov
jecxz
push
fnstenv
sub
xchg
call
cs
xor
sbb
add
inc
cmpsl
cmp
scas
push
inc
ret
in
fmul
jmp
test
orl
xor
mov
nop
xor
cmp
in
and
dec
jmp
dec
xor
aaa
je
jp
scas
repz
push
pop
int3
dec
mov
test
ss
movsl
mov
rclb
imul
stc
movsl
enter
pop
and
mov
jno
mov
popf
nop
and
out
js
lret
pusha
sarl
int3
outsb
sub
xchg
push
out
or
xor
je
dec
add
jp
cmp
inc
mov
pusha
xchg
inc
shrb
call
adcb
cwtl
sbb
pop
lret
inc
sbb
adc
sbb
push
fwait
addr16
pop
and
sar
sbb
mov
mov
cmp
out
lea
fadds
cmpl
inc
fiaddl
cmpsl
adc
shlb
loop
aaa
fidivl
test
push
aad
leave
xor
or
and
add
loopne
or
mov
mov
push
xchg
push
inc
adc
and
call
xor
push
jge
fistps
aas
sub
pavgw
lock
dec
bound
lcall
mov
out
mov
cltd
iret
xchg
lods
sub
nop
push
out
nop
outsl
dec
sbb
and
inc
popa
mov
in
and
cmpsb
loop
or
aaa
xor
arpl
inc
js
repz
fwait
aam
sub
imul
or
aaa
js
lahf
loope
inc
shlb
xor
jp
inc
mov
out
mov
dec
ret
xchg
insl
cld
mov
pop
je
outsb
sub
jnp
cmp
dec
xchg
enter
jmp
dec
xchg
add
sbb
imul
mov
jmp
dec
cmc
mov
icebp
dec
or
scas
mov
incl
repz
movsb
sti
adc
cmp
cmp
scas
sbb
pop
cmpsb
ret
sbb
or
jle
lock
jb
inc
lods
mov
aad
inc
mov
lret
cmpsb
lcall
sbb
hlt
and
lret
outsl
pushf
adc
sahf
add
std
popf
mov
sbb
test
test
insl
lret
or
sub
adc
pop
pop
or
test
insl
daa
sub
pop
call
fsts
mov
or
icebp
xchg
mov
cmc
add
mov
pop
gs
xor
ret
push
mov
xchg
imul
out
clc
adc
stc
movsb
dec
or
iret
cmpsl
cmp
push
cmpsl
mov
das
jl
lock
je
cld
pop
jno
mov
call
adc
push
lahf
and
movq
mov
sbb
lahf
fisubrl
std
hlt
sbb
pop
dec
arpl
mov
pop
pop
lods
jl
adcb
bound
les
insl
mov
inc
push
add
icebp
andl
fidivrs
insb
in
clc
jbe
jns
dec
test
add
dec
inc
pushf
adc
hlt
out
cltd
data16
mov
push
outsb
fdivr
cli
mov
scas
insl
jo
enter
insl
adc
test
cld
lods
std
pop
xchg
daa
pushf
cmc
and
mov
mov
pop
or
adc
jne
adc
jle
sub
pushl
jmp
adc
out
push
inc
push
xchg
loop
and
push
mov
popl
cltd
and
mov
outsl
stc
or
add
insl
inc
and
div
adcl
and
push
xchg
movsl
xor
orb
pop
pop
imul
mov
mov
adc
loop
lock
fistpl
dec
sarl
xchg
xor
call
cli
or
cltd
movsb
push
cmp
int3
pop
mov
jecxz
bound
lcall
add
das
movsl
mov
push
int3
mov
inc
mov
sbb
cli
adc
inc
in
mov
imul
and
lods
dec
pop
and
fldenv
scas
jo
sub
jmp
imul
push
push
clc
cmp
imul
xchg
std
dec
and
push
cmp
lock
aaa
jno
or
push
mov
cmp
mov
rcll
fcmovnb
insl
ret
push
call
sub
in
inc
lcall
dec
sbb
fcoms
gs
test
outsb
mov
test
jle
cmp
outsl
dec
jp
inc
mov
imul
push
add
mov
and
imul
dec
adc
out
mov
jecxz
lods
mov
lock
and
add
cmp
mov
fsub
lcall
jnp
sub
cmpsl
cmp
push
xor
in
fdiv
pop
jecxz
sub
and
arpl
and
add
mov
sub
mov
int3
mov
outsb
dec
cmc
sub
and
movsb
or
ljmp
fcoms
pop
mulps
add
outsb
sbb
test
ja
ror
ret
fsubrs
ret
fcmovnb
shll
cltd
dec
adc
sbb
outsl
mov
jnp
jne
mov
andb
mov
xor
xchg
imul
ret
sbb
pop
adc
add
cs
je
mov
jg
jmp
js
jne
dec
xorl
and
js
lcall
sbb
xchg
repnz
sub
sbb
xchg
mulb
lods
mov
fidivs
mov
sahf
inc
fisttpll
pop
loop
ds
stos
and
out
daa
pop
add
xchg
das
xchg
mov
jmp
stc
push
mov
inc
leave
lcall
fnsave
inc
cmp
jb
imul
adc
arpl
sub
popf
shll
pop
loop
dec
mov
inc
out
fisttps
jnp
inc
mov
jle
pusha
pop
jmp
shrl
dec
cs
into
mov
leave
xchg
je
or
xchg
ret
adc
jl
imul
inc
dec
hlt
mov
pop
int
mov
pop
hlt
adc
ja
xor
cmp
hlt
aas
mov
jne
mov
bound
push
fs
fwait
je
scas
enter
testl
sub
das
out
pusha
pop
test
lret
mov
inc
ss
xor
and
fnstcw
out
ficompl
xchg
sbb
enter
push
xchg
push
sub
mov
or
ds
fbstp
push
cmova
mov
mov
xlat
test
lock
xor
fcmovbe
dec
add
pusha
mov
xchg
js
sub
push
or
mov
xor
ja
andb
add
sbb
sub
shll
cltd
mov
outsl
push
cli
fdiv
leave
popf
pop
jb
push
add
cmp
push
pop
or
loope
sub
std
jns
das
cmpsl
mov
dec
cmc
push
sbb
jp
js
mov
mov
pop
and
cmp
ljmp
in
ja
hlt
insb
rolb
mov
and
lret
mov
call
les
clc
sbb
lods
fidivl
push
cmpsl
add
mov
jb
and
mov
dec
pop
pop
ret
mov
xor
popf
pusha
lret
cld
fistpll
push
stos
pop
dec
cmpsb
sub
pop
jg
cmpsl
pop
add
mov
sarb
pop
stos
cmp
inc
inc
rorl
or
jb
ds
scas
mov
jmp
lock
or
fidivrs
out
data16
push
adc
lods
aad
sbb
imul
fimull
dec
pop
ficoml
in
jnp
cmc
xor
dec
stos
xlat
xor
push
mov
sbb
test
repz
fwait
pop
insl
js
lret
incb
loop
aam
pushf
ja
scas
adc
aaa
repz
jmp
inc
pusha
ret
xchg
shll
js
ds
sub
adc
bound
push
pop
popa
dec
in
xor
jg
sub
jmp
push
xchg
sbb
movsb
enter
cmp
and
in
jne
mov
not
enter
jle
and
lea
push
lods
rcr
insl
testl
cmp
cmpsl
out
cmp
addb
inc
sti
push
out
jecxz
adc
mov
icebp
popa
xor
testl
stos
sbb
leave
push
shrl
mov
stc
pop
dec
cmpsl
dec
mov
pop
mov
add
inc
mov
mov
js
cld
cwtl
sbb
cmp
sub
and
jbe
pop
cli
call
clc
jno
pusha
mov
sub
shrb
xor
inc
sub
dec
mov
in
inc
fidivs
pop
outsl
mov
xchg
adc
and
stc
and
lahf
sbb
movsb
mov
cmpb
mov
fcoms
inc
lock
iret
xor
cmp
pop
mov
xchg
sub
bound
rcrl
pop
js
and
popf
mov
fs
cmpsb
sub
sbb
sub
sarl
add
inc
mov
enter
addb
inc
adc
lahf
int
adc
dec
sub
mov
clc
mov
icebp
cwtl
addr16
jp
adc
cmp
sbb
sbb
roll
ljmp
push
mov
push
stos
test
mov
mov
test
arpl
iret
in
and
mov
cwtl
out
mov
ds
jecxz
ret
outsb
subl
icebp
in
stos
stos
pop
xlat
and
mov
xchg
jno
rorb
xor
add
bound
mov
dec
sub
in
lret
adc
lock
inc
pop
or
add
xchg
mov
cmc
iret
dec
lea
xchg
sub
jb
inc
jge
jge
imul
arpl
arpl
mov
dec
movsbl
xor
xchg
mov
fcoml
push
push
xchg
jns
out
shlb
sub
shl
jg
pop
lock
mov
mov
addr16
out
scas
clc
cltd
out
divb
and
or
pop
je
loop
cmp
scas
or
shrl
pop
std
into
int3
fwait
mov
cmpl
xor
ljmp
xor
or
jbe
nop
cmp
adc
xchg
push
jb
jg
daa
mov
xchg
cwtl
movsl
andb
cmp
mov
inc
insb
pushl
push
mov
call
xchg
jo
mov
subb
jbe
push
sbb
jl
fs
pusha
xor
sub
stos
inc
cmp
dec
xchg
lcall
mov
add
dec
jnp
mov
xlat
into
push
xchg
xlat
push
adc
and
scas
and
decb
cmp
dec
pop
popl
shrl
xchg
dec
or
aam
mov
inc
ss
inc
in
dec
stc
jns
or
xor
daa
xchg
shrb
int3
fstps
adc
jns
jecxz
stc
cmp
xor
std
jnp
jno
inc
push
xchg
mov
mov
out
sub
fs
add
push
gs
pop
jno,pn
adc
jg
push
push
dec
fcomip
xor
jns
xchg
add
clc
dec
idivl
insb
lcall
add
scas
push
pop
mov
jb
stc
add
cmp
add
int3
aad
outsb
or
push
enter
outsl
and
out
push
xor
add
jge
add
mov
cli
push
or
or
test
popa
jnp
jno
divl
jns
rcrb
xor
and
fildl
jmp
pop
sbb
push
xor
mov
push
jecxz
repz
data16
call
and
ficoms
je
lods
lea
xor
jg
pop
lock
inc
js
stos
xchg
call
xchg
xchg
fldenv
repnz
cld
iret
push
in
sub
daa
pop
mov
jle
lcall
loope
inc
dec
in
mov
inc
push
jne
inc
rcrb
mov
test
jno
inc
cmp
mov
inc
adc
xchg
mov
jmp
mov
mov
add
stc
test
xchg
sbb
mov
int3
add
push
scas
cmp
sub
mov
outsb
mov
test
pop
or
pop
jmp
dec
les
outsl
subb
jb
loop
loop
xor
sarb
popf
jg
pop
dec
in
ficoml
sbb
stos
int
in
cmp
in
push
xchg
cli
negl
dec
sbb
adc
sarb
arpl
sub
pusha
arpl
mov
or
aam
and
xor
out
loopne
xchg
adc
insb
or
cmc
xchg
js
insb
mov
shl
or
repz
inc
mov
add
jecxz
pop
sar
mov
test
jl
jge
jmp
lock
xchg
jbe
mull
jno
int
adc
xchg
and
loop
bound
icebp
sarl
push
mov
mov
cmp
loopne
test
inc
xchg
in
dec
lods
lret
mov
ds
jmp
mov
stos
lock
insb
hlt
aam
fimuls
pushf
mov
shrl
jmp
or
ja
lcall
lods
scas
in
je
rcl
addr16
cmp
repz
jg
and
or
and
dec
push
into
fwait
rcr
sub
jg
repz
cmp
lds
dec
lock
loop
mov
test
jb
cli
cmpb
adc
fistpl
movsl
punpckhdq
mov
nop
xor
stc
push
fiadds
movsb
pop
loop
ds
shl
aad
add
mov
jnp
push
repnz
rorb
mov
inc
dec
repz
inc
imul
mov
sarl
test
and
or
pop
cmp
stc
test
loope
int3
ret
cmc
out
fsubrs
push
movsb
or
dec
sbb
ret
push
stc
cmp
or
inc
insl
mov
ret
js
pop
xchg
clc
xchg
out
inc
push
shll
dec
push
push
loopne
test
lahf
or
sub
and
outsl
mov
nop
leave
fildll
xlat
ret
xchg
or
sbb
mov
lcall
outsl
dec
test
cmp
jmp
in
jae
dec
int3
data16
or
repz
push
mulb
rcl
rol
daa
push
gs
or
or
xor
xchg
mov
and
jnp
mov
sti
pop
adc
add
insl
or
or
inc
out
mov
arpl
mov
test
push
xor
out
in
inc
test
in
mov
xor
xor
pusha
sbb
lret
bound
jo
ds
add
jg
mov
xchg
outsb
dec
enter
fistpll
xchg
aas
mov
cwtl
mov
mov
mov
or
imul
mov
mov
pusha
outsl
sbb
push
clc
or
jle
pop
sti
xchg
mov
xor
mov
fsubrl
add
mov
pop
clc
mov
add
jg
out
addr16
into
insl
shll
and
jnp
cmp
xchg
sbb
cmp
pushf
or
imul
outsl
imul
push
push
mov
das
push
push
jmp
dec
lret
cmc
cmc
stc
add
movsb
jns
jns
addr16
sub
sub
ret
and
ss
dec
inc
sub
jmp
jg
mov
cmp
pop
xor
lods
scas
mov
ret
rcrb
or
inc
insb
sub
push
outsl
and
lods
les
add
sbb
jo
incl
ficoms
or
dec
adc
pop
push
cs
xchg
sarl
fwait
lahf
or
hlt
leave
jmp
mov
pop
push
mov
andb
cmp
addr16
xor
inc
adc
ret
and
das
mov
clc
aas
push
and
in
push
sbb
xchg
lds
cmp
sub
rcrl
mov
xor
and
inc
xor
mov
mov
inc
sahf
mov
arpl
xchg
shlb
pop
mov
cli
mov
or
in
push
inc
inc
scas
cmpsb
cmpb
add
mov
ficomps
sbb
lds
test
je
mov
pop
test
test
int3
test
cmp
subl
cltd
mov
scas
lea
xchg
fdiv
inc
insb
movlps
or
cltd
cmpsl
lods
lret
popf
mov
cmpsl
inc
enter
xchg
sbb
dec
loop
popf
and
or
mov
push
lahf
mov
int3
add
scas
adc
xchg
popw
push
ss
pushf
ja
outsl
mov
mov
les
sbb
mov
and
lret
repz
mov
ds
popf
jb
xor
and
flds
or
jmp
add
fidivl
push
ss
cmp
jg
sbb
daa
adc
shl
aad
jl
sub
mov
mov
aas
dec
add
sbb
std
call
push
xor
das
jns
int
test
addb
roll
ljmp
inc
jp
or
jg
cmp
lret
dec
pop
int
push
jno
add
shlb
or
push
js
fcomip
sub
ja
jbe
out
dec
movsb
mov
rcrl
dec
fwait
adc
and
negb
cmp
fs
enter
scas
std
outsl
sub
fwait
lcall
cwtl
dec
xlat
shlb
dec
and
jno
test
mov
loop
cwtl
rcr
mov
inc
fidivrl
rcr
enter
pop
idiv
mov
mov
pop
test
push
dec
icebp
pop
dec
scas
adc
movsl
jno
loopne
and
push
pop
mov
test
mov
mov
stos
lods
jbe
jp
push
lock
stos
int3
xor
int3
cmp
mov
or
leave
ret
pop
adc
mov
mov
and
inc
dec
xchg
push
push
pop
xor
xchg
or
push
sbb
ret
cmpsl
in
adc
push
and
jecxz
mull
sub
aam
fdivrl
xor
xchg
ds
jno
je,pn
jmp
dec
cmpb
negb
ja,pn
sarb
aaa
aaa
dec
push
push
adc
rorl
iret
jns
loop
repnz
xor
sti
xchg
fidivs
in
pop
xor
aas
rcl
xchg
inc
push
adc
pushf
push
mov
cltd
sbb
mov
jmp
call
sub
xchg
jns
imul
cs
jmp
test
push
out
xor
lds
int3
cmp
xchg
xchg
add
loopne
insl
jb
xor
cmp
mov
dec
movsb
jno
ja
jb
mov
aas
pop
imul
sub
adc
js
fwait
push
mov
mov
sub
cmp
ja
lret
das
adc
push
push
sub
xor
fcompl
sub
dec
leave
es
xchg
aas
dec
test
jp
pop
leave
sub
test
addb
imul
scas
lock
test
lods
arpl
jp
inc
xchg
cmc
sbb
mov
lea
int
jns
out
sahf
dec
call
movsb
xchg
jbe
nop
and
stos
les
sarb
test
ljmp
notb
sbb
sub
int3
sbb
xchg
mov
push
xchg
xchg
sub
cmp
cld
jle
test
aad
inc
mov
rol
pushf
push
lock
imul
in
mov
mov
sahf
dec
aam
mov
fninit
je
mov
mov
jnp
int3
add
and
fstpt
jbe
shrb
inc
push
negl
xchg
sahf
mov
jae
mov
sbb
mov
add
fmulp
or
xchg
ljmp
cmp
xor
pop
iret
pop
jmp
adc
pusha
xor
mov
adc
leave
xchg
adc
dec
jmp
and
lret
jl
je
lcall
pushf
mov
cmpsl
xchg
adc
mov
outsb
dec
mov
adc
jb
rorl
add
scas
pop
mov
add
push
sbbl
and
xchg
mov
icebp
orl
out
data16
sub
insl
mov
sbb
int3
cmp
ja
mov
addr16
lods
and
fimuls
mov
iret
mov
xchg
subb
add
ss
pop
mov
mov
movsb
mov
mov
xchg
sar
ficoml
and
mov
push
sarb
aas
in
cmpb
pop
jo
sarl
fcoms
repz
faddl
xchg
sahf
call
dec
stc
jne
mov
ja
mov
out
mov
dec
lret
push
jo
mov
mov
addr16
clc
push
mov
subps
iret
mov
cmp
jbe
movsl
pop
scas
adc
pop
sahf
pushf
addb
sbb
jbe
mov
dec
lret
icebp
rol
test
push
cli
jb
jbe
andb
pop
cmp
inc
lret
adc
lret
jmp
xchg
iret
and
cmp
call
daa
stc
ret
in
ret
mov
or
fwait
lock
fsubs
xchg
loopne
pop
std
add
mov
fisubs
xchg
sub
push
mov
testb
subl
sbb
cli
test
cmp
loope
xchg
adc
aad
cmpw
dec
fmuls
dec
jmp
or
pop
xlat
scas
cmp
jle
loop
pop
xchg
mov
xchg
shll
jne
popf
arpl
inc
movsl
lahf
rcrl
inc
push
popa
dec
xchg
jae
test
mov
or
pop
aad
xchg
mov
leave
push
call
scas
cmp
imul
push
xchg
dec
adc
pop
xor
in
fisttps
fstl
test
jb
add
test
repnz
mov
enter
scas
std
jle
nop
pop
adc
mov
mov
mov
in
stos
repz
mov
sbb
sbb
lds
daa
das
movsl
mov
pop
pop
jle
jmp
daa
sbbl
sub
push
mov
sti
fwait
dec
xor
pop
in
inc
insb
pop
xchg
cld
inc
stos
lds
pop
lock
aas
xlat
fstl
test
jns
mov
iret
pop
mov
sbb
sbb
jge
mov
jo
stc
pop
cld
mov
cmp
mov
xchg
insb
cld
pop
roll
insl
fucom
sub
mov
test
lods
pop
cmp
inc
fsubrl
xchg
add
jle
mov
ds
adc
std
shlb
sbbb
lahf
pop
or
call
and
jo
inc
cmc
dec
hlt
xchg
ja
loope
fidivrl
push
xor
dec
aad
sub
rcr
mov
and
push
sbb
out
out
xor
pop
cmp
mov
iret
call
dec
enter
xchg
in
jmp
pushf
call
test
mov
sti
mov
mov
push
xor
sbb
mov
jno
jle
js
jecxz
outsl
mov
ret
sbb
xchg
out
cmp
xchg
and
push
mov
insl
shr
sbb
xor
mov
pusha
mov
ret
cltd
add
outsb
scas
fwait
call
ds
jno
jp
dec
out
xchg
dec
dec
mov
xchg
cmpb
push
cmp
xchg
leave
fistps
loop
inc
mov
ds
stc
insl
mov
test
push
add
adc
outsb
cmpl
cmp
pop
fwait
cmp
jo
xor
in
cmpsb
paddsb
cltd
cmc
pop
jae
mov
hlt
cmp
jns
les
test
shll
int3
in
in
jecxz
call
xor
mov
fwait
adcl
into
mov
mov
xlat
sub
mov
aam
loopne
pop
ljmp
imull
std
sbb
cmpsl
push
rclb
inc
aaa
lods
int
dec
lods
cmpsb
jbe
and
mov
or
out
out
divl
into
sub
and
stos
push
lret
dec
cltd
pop
xchg
xchg
pop
call
xor
and
pushf
inc
xor
in
xchg
xor
push
or
iret
mov
fcompl
je
jge
mov
mov
cmp
cmp
loop
mov
aaa
shrl
negl
leave
pop
adcb
daa
rcr
pop
xor
les
or
aaa
jmp
and
adc
test
lcall
push
iret
aas
fsubl
into
and
xor
pusha
xchg
pop
xor
rorl
scas
out
cwtl
adc
jmp
xor
push
cltd
fwait
lahf
lods
jns
mov
mov
int3
stc
mov
outsb
sbb
add
adcb
cmp
ret
imul
fwait
in
fsts
rcr
xchg
std
dec
in
xor
jne
rcll
mov
xor
out
fwait
push
mov
cmp
sbb
pop
mov
pop
cli
pushf
cld
adc
clc
aam
adc
loopne
jg
mov
clc
movsl
lahf
push
xor
mov
adc
enter
fimull
cs
push
test
arpl
push
sbb
push
jne
inc
loopne
call
sbb
lcall
mov
and
xchg
jo
sti
stos
xor
inc
adc
rcll
fwait
add
insl
dec
je
dec
insb
mov
sub
and
iret
imul
mov
push
lock
push
out
jnp
mov
pop
cli
jne
fcomps
aad
mov
pop
inc
adcb
test
repnz
and
mov
scas
mov
and
js
lahf
inc
mov
mov
sbb
test
js
loope
das
out
push
loope
lret
clc
push
mov
cmp
imul
pop
into
dec
xor
loop
lea
mov
jecxz
mov
lcall
addb
mov
xchg
aad
scas
leave
and
mov
pop
mov
lock
add
sub
ja
sub
adc
stos
mov
cmpsl
adc
lds
sbb
repnz
dec
repz
enter
lret
in
mov
mov
or
cmc
xor
jbe
repnz
mov
out
int
sub
popl
ss
mov
aad
jmp
es
mov
or
cmp
xor
movsl
fdivl
mov
pop
inc
mov
fcomps
fcompl
aam
xor
jb
pop
hlt
mov
and
push
cltd
insb
xor
cmp
je
sbb
mov
pop
mov
jns
sbb
std
mov
fnstsw
popa
out
test
test
adc
xor
pop
inc
lret
lcall
push
movups
sbb
xchg
xor
in
repnz
mov
ret
adc
enter
mov
xchg
ret
dec
sbb
and
ret
sarb
ret
lcall
arpl
add
mov
pushf
fidivrl
aas
pop
pop
push
or
daa
mov
cltd
xor
or
aad
shl
jae
scas
and
jnp
nop
dec
loope
ljmp
fs
xchg
in
mov
pushf
ret
xchg
push
lds
push
pop
jns
xor
push
mov
inc
jmp
pushf
pushl
popf
and
es
pop
out
out
mov
sub
fsubs
lods
cli
addr16
fisubs
push
pop
push
xchg
sub
imul
mov
das
xor
loopne
das
aam
mov
fsubrl
dec
inc
vpmovmskb
faddl
orb
ss
jae
mov
jl
rolb
out
xor
add
lahf
jo
sti
xchg
push
in
out
jmp
jne
mov
add
cmp
sub
in
pop
pop
or
pop
rorb
call
mov
push
movsb
rcrl
ja
jp
pop
sub
xchg
shrb
xchg
lods
jge
cmp
mov
adc
out
imul
gs
pop
xchg
pop
jle
mov
in
mov
clc
add
jp
or
mov
inc
jl
data16
mov
jnp
xchg
sbb
xchg
mov
rclb
or
xor
es
add
out
in
jno
dec
jg
mov
in
insb
rcrb
pop
push
sub
and
pop
xchg
mov
fisttpl
lds
push
fisubs
insb
dec
sbbb
mov
jb
out
dec
lods
popa
shr
sbb
out
mov
sub
in
cmp
icebp
inc
xor
arpl
ds
fbstp
jmp
movsb
xchg
imul
jl
clc
out
es
movsb
stc
xchg
jmp
mov
je
xchg
jg
rorb
adc
jmp
fstpt
int
cmp
pop
cmp
pop
ljmp
sbb
mov
test
ja
xor
inc
inc
sbb
xorb
push
mov
insb
scas
lcall
ret
push
test
out
mov
fcomps
jb
mov
cmp
out
pop
inc
cmp
and
lret
push
xchg
aaa
addr16
jnp
mov
lret
fistpl
add
jle
xor
hlt
rcrb
insb
xchg
arpl
inc
ljmp
mov
int3
mov
pop
rcrl
pop
sahf
pop
inc
cwtl
adc
jnp
or
sarb
test
fcmovu
imul
sti
fwait
and
pop
mov
icebp
in
bound
rorb
inc
and
jle
xchg
ret
push
push
test
jmp
lea
cld
jl
lret
daa
imul
cs
xor
js
imul
mov
scas
pop
cmp
cmp
fs
cmp
sbb
mov
pop
cmp
iret
jmp
and
lahf
fs
push
xchg
push
aaa
in
aam
insb
push
stos
adc
sub
ret
cmp
mov
xchg
lahf
lods
data16
in
push
cmc
repz
add
mov
jmp
mov
mov
lahf
and
rclb
cmpsl
pop
and
jo
loope
cmpsb
out
pop
lahf
call
stos
sub
lds
ret
loopne
xchg
inc
adc
mov
adc
mov
mov
shll
addr16
insl
pop
push
lahf
outsb
jae
sbbl
xchg
add
push
xchg
dec
ret
icebp
iret
jge
xchg
add
or
push
mov
sub
shll
push
pop
adc
dec
and
xchg
out
pop
sbb
push
clc
push
xor
jge
icebp
pop
call
mov
shl
outsb
cmpsb
incb
mov
int
xor
push
loop
push
xor
and
push
cmp
insb
js
xlat
iret
fnstsw
or
cmp
or
out
push
mov
sbb
mov
cmp
push
mov
sub
aaa
dec
mov
push
outsl
out
gs
aam
nop
sbb
inc
cltd
decb
leave
int
adc
hlt
mov
xor
lods
icebp
cmp
loope
or
jmp
and
ds
addr16
xchg
mov
sar
adc
mov
inc
out
ret
out
out
shll
out
add
repz
push
push
bound
jle
jnp
mov
test
movsl
cmpsl
jns
mov
je
mov
mov
movb
daa
out
fldt
rol
adc
cmp
rcll
pop
jae
mov
scas
dec
adc
sbbl
fiadds
insb
test
cld
lods
lahf
inc
jne
cmpsl
aas
and
xchg
push
inc
mov
leave
mov
data16
icebp
xchg
loopne
xchg
cwtl
outsl
sahf
mov
scas
fistl
insb
push
sbb
ret
inc
test
or
mov
out
sbb
adc
in
orl
das
xor
xchg
or
and
aam
cmp
xchg
sbb
hlt
xchg
dec
out
fcomps
jb
out
adc
dec
dec
hlt
insl
test
and
or
in
in
addr16
popf
cwtl
push
test
xchg
aam
out
test
std
pop
ja
jle
aam
fidivrs
out
or
and
cli
sbb
lcall
jmp
and
mov
dec
stc
lods
sub
out
aad
or
cs
into
fidivs
or
add
pop
sahf
test
sbb
adc
inc
gs
jae
clc
mov
or
sub
push
push
loope
pop
mov
bound
mov
cwtl
sbb
leave
out
int
int
mov
sahf
add
fbstp
cmp
mov
mov
les
inc
fisttpl
push
cld
int3
into
cli
dec
adc
rcll
mov
mov
stos
rorb
in
in
add
jp
aas
jmp
jecxz
out
pop
cmc
xor
imul
subl
mov
xor
add
icebp
adc
fs
dec
jg
fldenv
gs
lcall
mov
xor
jge
fiadds
adc
sbb
ljmp
cmp
push
inc
mov
push
dec
movsl
add
imul
xor
push
jo
jecxz
cmpsl
push
imul
add
jne
les
call
add
add
stc
pop
pop
push
std
jle
loopne
test
xor
mov
mov
cmp
sbb
ret
js
dec
mov
mov
ret
or
das
out
jl
test
xor
movsb
mov
and
clc
add
inc
fstps
lods
mov
and
scas
imul
mov
push
add
mov
rcll
xchg
mov
fsts
cld
popa
pop
and
pushf
cmp
loop
cmp
scas
int3
call
cli
cmpsb
pop
dec
sbb
xchg
call
push
cmp
in
pop
mov
jle
add
mov
fists
cmp
xchg
jecxz
push
mov
inc
cli
jge
scas
cli
pop
push
mov
hlt
fldenv
test
loope
pop
or
pop
and
jg
jmp
add
rclb
sarb
push
sahf
mov
mov
fisubs
adc
fildll
add
enter
sbb
lock
dec
insb
test
push
ja
dec
in
add
sarb
in
xchg
arpl
jae
leave
inc
pushf
dec
xchg
sbb
jecxz
les
test
push
pushl
pop
cmp
cmp
test
lds
or
movsl
fwait
xor
mov
mov
gs
ret
fs
rol
and
dec
jg
pushf
sub
cmpsb
dec
fadds
mov
loope
mov
push
xchg
adc
and
mov
push
shl
adc
inc
test
add
and
push
outsb
and
and
test
jge
sbb
pop
cmpsb
inc
push
xchg
xor
xchg
or
cmp
call
icebp
pop
push
clc
and
sub
xor
jns
mov
mov
mov
push
pop
push
xor
xor
sbb
jno
dec
mov
das
insl
ror
or
orb
jmp
repz
iret
mov
mov
dec
rcll
sti
stc
mov
mov
inc
jle
loope
inc
test
dec
test
push
lret
dec
sub
aad
jno
inc
lret
pop
pop
jo
pop
push
adc
inc
sbbb
fiaddl
dec
ljmp
xor
ret
cltd
iret
icebp
xchg
sbb
and
sarl
jg
and
mov
mov
xor
sbb
adc
test
add
jbe
xchg
mov
push
and
cmp
scas
inc
add
mov
pusha
rolb
push
push
addb
loop
orb
outsl
addb
and
decl
add
shll
pop
add
sub
fcoml
dec
inc
push
idivl
pop
sbb
mov
scas
xchg
imul
leave
push
test
es
cs
sbb
lock
mov
xchg
arpl
push
or
inc
jo
push
or
aad
lds
cwtl
aad
dec
inc
xor
dec
inc
inc
push
data16
dec
call
and
mov
jge
cmp
repz
add
movsl
xchg
jle
lds
fs
sahf
roll
testb
lods
adc
mov
lret
sahf
mov
cmp
xor
in
je
or
ret
sbb
mov
pop
mov
adc
xor
dec
inc
cmpsl
out
xchg
rcrb
cmp
xor
jne
pop
mov
xor
mov
out
mov
jbe
adc
inc
idivb
pop
xchg
xchg
jnp
xor
and
sub
xlat
dec
jne
repnz
pop
lahf
cs
or
mov
or
mov
in
cs
mov
ljmp
jl
not
push
pop
xchg
mov
mov
inc
aaa
sub
arpl
iret
mov
mov
inc
and
dec
std
pop
mov
sub
push
into
mov
or
cmp
cmp
lahf
dec
inc
cld
mov
mull
push
push
sarb
mov
xchg
addr16
cmpsl
pop
jg
mov
sub
inc
mov
call
popf
nop
dec
xchg
xchg
xchg
sbb
mov
stos
js
inc
insl
mov
mov
lea
cmc
or
adc
mov
das
sbb
fwait
repz
pusha
sbb
les
push
fdivrl
ror
shl
in
sub
aaa
test
ja
xor
mov
int
les
out
enter
cmp
pop
ss
int
mov
push
and
lods
dec
or
cmpl
cltd
stos
loope
push
push
repz
movlps
sahf
cs
mov
cltd
and
scas
xchg
cwtl
push
mov
push
fdivrp
inc
mov
nop
mov
hlt
nop
int3
xlat
pusha
mov
mov
mov
mov
cmp
mov
mov
testb
ret
movsb
ret
mov
jns
loopne
add
mov
jp
js
push
xor
push
into
push
out
dec
pop
sub
cmp
enter
sarl
sub
stc
lret
adc
adc
sbb
fimull
call
pop
mov
or
imul
bound
add
dec
repz
std
scas
jbe
idivl
popa
loope
or
cmpsb
dec
pusha
nop
push
jle
sbbb
outsl
fidivl
loope
cmp
out
sti
nop
mov
movsb
cld
jecxz
scas
lods
xor
loope
das
cli
sbb
jnp
inc
jmp
cld
sub
xlat
pop
mov
subb
dec
aas
cli
jo
add
jmp
mov
adc
out
out
pop
adc
mov
popa
outsb
or
mov
push
jae
fisubrs
adc
pop
or
sti
xchg
aam
push
xchg
add
pop
outsl
lods
push
dec
shll
aad
rorb
xchg
stos
pusha
sbb
insb
push
adc
mov
adc
xchg
pop
sbb
ror
push
pop
fsubl
in
movsl
dec
cs
adc
jns
popl
sub
je
push
sbb
jge
xchg
push
cmpps
in
les
das
jecxz
inc
movsb
mov
pop
sbb
inc
xchg
in
jle
mov
or
xchg
rcr
xchg
sub
icebp
repz
popa
ret
and
or
and
cmpsl
fwait
stos
jge
int3
cmc
xor
xchg
decb
jne
lcall
mov
pop
shll
int3
jo
and
xor
or
stos
mov
mov
je
addr16
pusha
lahf
in
push
sub
lahf
stos
pop
int
fcmovnbe
inc
jmp
call
dec
lahf
ja
jl
xor
pop
rcrb
test
loop
fcmovu
jnp
mov
jle
add
xor
in
aas
negl
jbe
xchg
insb
jp
mov
inc
pop
aaa
sub
in
inc
pop
mov
dec
push
fisubrl
fdiv
enter
mov
bound
mov
cs
sbb
loop
and
aad
adc
cmpsb
shrb
or
mov
sbb
xor
loope
sbb
lahf
cmp
icebp
lods
or
adcb
add
jne
cs
and
or
dec
mov
pusha
cmp
testb
fucomip
jge
insl
in
push
lods
dec
mov
adc
idivl
loopne
repz
dec
cmp
push
jne
sub
pop
dec
pop
rcl
push
push
fstps
adc
jno
mov
dec
jge
mov
lock
sub
movsl
addr16
mov
and
scas
sti
dec
cmp
inc
cvtpi2ps
jge
js
push
inc
movsl
adc
fs
mov
mov
ja
fwait
xchg
mov
in
ds
push
jns
or
int
iret
sbb
mov
adc
out
inc
fisttpl
stos
xchg
scas
push
lods
pop
mov
xlat
mov
mov
fldt
cmpsl
inc
push
xchg
dec
add
addr16
push
inc
stc
shl
mov
mov
dec
repnz
jb
test
cwtl
daa
lods
dec
test
mov
fdivrl
dec
iret
fsubl
sub
leave
add
jmp
rcr
test
or
insb
js
push
inc
sub
fcomps
repnz
andl
pop
adc
xchg
or
mov
ss
lahf
nop
in
dec
mov
cmp
inc
enter
ret
adc
mov
cs
add
push
pop
push
test
div
sub
mov
int3
xorl
xchg
stc
loope
mov
sub
mov
rclb
dec
dec
nop
into
add
or
in
imul
in
inc
out
xchg
add
cmp
mov
or
fdivrs
sub
jno
and
paddsb
and
int
mov
aaa
xchg
xor
adc
inc
shll
sub
ficompl
insl
mov
fiadds
cmpb
cmpb
imul
push
mov
bound
sbb
sbb
mov
mov
dec
dec
sbb
xchg
cmc
push
lcall
cmp
xchg
or
fsin
leave
fildll
add
push
mov
jg
pop
xchg
in
pop
popa
repz
stos
sub
dec
and
movsl
pushf
jo
inc
js
adc
sbb
jmp
cmc
mov
ret
je
mov
xor
jmp
sarb
xor
popf
pop
mov
mov
inc
leave
mov
sub
ret
insl
stos
outsb
adc
xchg
inc
ljmp
cltd
mov
push
insb
sub
ljmp
push
mov
pop
and
adc
jae
test
xchg
xlat
daa
adc
mov
jns
add
aas
dec
sub
mov
push
in
loop
mov
addr16
adc
mov
adc
jmp
or
inc
push
push
imul
or
cmc
add
mov
das
mov
and
xor
mov
xchg
cmpsl
lock
and
shr
xchg
jae
call
and
lahf
mov
cmp
jne
mov
cld
stc
or
and
and
ds
out
inc
hlt
daa
or
pop
push
and
mov
inc
std
pusha
pusha
loopne
jnp
inc
inc
mov
mov
inc
fidivrl
jge
call
cwtl
lret
ds
push
outsb
or
mov
lret
xor
scas
test
push
pop
arpl
xchg
int3
dec
inc
lds
scas
outsl
dec
add
push
cmp
inc
cmp
movl
imul
and
adc
pop
pop
test
fcomps
add
mov
loope
nop
aad
mov
sahf
rorb
sbb
je
out
cmpsl
cli
jge
cbtw
nop
lods
push
out
push
cmp
inc
jne
and
mov
aaa
enter
leave
sarl
and
icebp
popf
das
adc
negb
test
addr16
mov
cmp
or
add
mov
test
popa
add
jl
add
xor
std
int
or
lea
mov
fbstp
cmp
mov
std
test
rcll
sub
pop
mov
pop
fisttps
int
pop
jno
jae
addl
into
enter
add
jae
xor
push
das
pushw
cs
jnp
lods
shlb
mov
xchg
add
mov
test
jno
jns
loope
inc
leave
jo
pop
outsl
xlat
inc
repnz
jns
popf
mov
xor
sub
rcrl
pop
push
gs
pmuludq
mov
aam
push
cli
fistl
mov
mov
loopne
inc
mov
add
enter
cmpsb
cwtl
cmp
mov
pusha
xchg
enter
cmp
ss
xchg
imul
out
adc
jle
scas
inc
cmp
js
movsl
or
ror
sbb
or
cld
sbb
insb
subb
inc
insl
pop
sub
jmp
leave
sbb
and
mov
xor
add
push
lcall
lods
orb
lahf
aad
ljmp
xor
jns
sets
icebp
jae
aam
mov
mov
jle
dec
push
jge
jbe
add
xchg
or
pop
testl
ret
jle
mov
test
mov
sub
jge
mov
adc
pop
mov
add
mov
mov
aam
in
mov
adc
xorb
mov
into
rorb
xor
add
hlt
pushf
pop
mov
lret
and
popa
repz
arpl
inc
push
sub
imul
outsl
lret
loopw
mov
xor
mov
pop
leave
mov
out
and
faddp
jmp
dec
or
int3
mov
mov
xchg
sub
mov
das
pop
testl
cmp
cs
aas
hlt
push
cmc
in
push
mov
adc
xor
push
mov
pusha
mov
mov
push
or
int
or
pop
loopne
cltd
xor
test
xchg
add
xchg
scas
inc
mov
mov
lcall
in
nop
add
imul
mov
sbb
and
and
pushf
pop
int3
xlat
es
loopne
push
or
inc
in
ljmp
aaa
cmp
adc
sbb
out
push
mov
and
adc
out
aaa
or
mov
clc
aam
cmpsb
add
out
pop
out
stc
xchg
or
sarl
push
cmp
bswap
cmp
cmp
xlat
adc
ffreep
cwtl
dec
or
xor
mov
or
xchg
mov
adc
jg
mov
or
in
sbb
movsl
jbe
in
sbb
imulb
dec
xor
jne
stc
sub
adc
push
xchg
xor
incb
xchg
loop
into
xchg
pop
es
bound
leave
push
xchg
into
push
cmp
mulb
ficompl
jo
mov
xchg
fstps
js
and
adc
pop
mov
fisubrl
das
lea
sub
cmpsb
xchg
adc
scas
sbb
mov
mov
jg
inc
sbb
movsb
push
push
add
dec
std
pushf
lods
sbb
icebp
mov
push
or
das
sub
mov
out
cmpsl
call
test
stc
and
cmp
fidivrs
and
fistl
out
mov
cmp
out
mov
xlat
gs
fistl
pop
dec
or
fs
jbe
das
ret
xchg
cmp
lret
or
push
inc
sub
sub
adc
jne
sti
std
imul
sti
add
add
test
fadds
jnp
cwtl
push
int
fisubrl
xchg
gs
dec
jmp
ljmp
out
leave
cmp
mov
dec
mov
push
pop
jbe
sbb
out
out
jb
jp
ret
ja
jp
mov
arpl
aad
outsb
push
ljmp
sbb
jno
fistps
cmp
jge
inc
leave
cld
ret
adc
push
pop
pop
dec
sub
pop
lods
ss
cmp
bswap
mov
mov
cmp
ss
sbb
stos
push
or
fs
sub
mov
pop
jmp
cmp
aam
push
cltd
jmp
shlb
xchg
pop
jmp
push
imul
mov
iret
sbb
xlat
xchg
icebp
cmp
inc
scas
call
push
add
mov
mov
rcrl
data16
mov
fwait
xor
insl
cmp
cwtl
push
lcall
mov
cltd
cmp
push
mov
std
mov
shrl
inc
dec
sahf
xlat
stos
cs
mov
nop
rorb
xchg
dec
dec
popa
sub
mov
outsl
stos
push
insb
jnp
das
jg
cmp
in
sbb
cs
cmp
ljmp
and
sub
mov
mov
dec
popf
jmp
pop
lret
and
ret
or
cmp
mov
and
jl
popf
push
cmp
mov
cmp
pop
jno
fs
jp
jns
dec
xchg
cmpl
mov
ljmp
push
ficompl
jns
fucomp
or
fdivr
lahf
stos
jle
rclb
mov
clc
imul
mov
addr16
out
movzwl
arpl
scas
shl
in
mov
or
cmp
sub
dec
sub
jl
lahf
jle
cmpsb
lods
mov
pop
ds
push
ret
cmpsl
aas
add
cmp
fidivrs
xchg
and
xchg
ret
dec
push
mov
add
dec
shll
jecxz
dec
mov
pushl
fmuls
fsub
pop
das
fistps
ret
inc
not
sub
ljmp
dec
data16
xor
call
ljmp
ds
nop
test
pop
pushf
jp
inc
adc
addr16
adc
mov
pop
xchg
inc
xchg
push
mov
lcall
add
test
sub
cmpsl
imul
sub
test
ret
addr16
jg
lods
unpckhps
dec
repnz
cmpl
pushf
xchg
inc
mov
sahf
fwait
lds
jp
xor
cmc
inc
pop
xchg
jp
xor
pop
add
jmp
out
rcrb
cmp
insl
adc
dec
push
xchg
addr16
aad
mov
lods
cld
lods
push
test
test
sbbl
fs
and
or
subb
or
aaa
inc
ljmp
pop
scas
out
and
ret
stos
ljmp
adc
xor
shll
adc
add
lret
outsb
jne
pop
cs
xor
inc
movsb
shll
sbb
pop
cmpsb
cmpsb
pop
pop
loopne
mov
fs
out
add
sub
mull
mov
adc
xchg
or
pop
xor
mov
and
inc
lock
jl
daa
addr16
addr16
mov
push
mov
sbb
inc
mulb
test
mov
push
call
cld
jns
cmpsl
mov
test
jb
scas
cwtl
sti
js
xor
stos
pop
nop
mov
pop
mov
xchg
daa
int3
mov
jns
pushf
adc
sti
cmc
sub
sar
mov
pushf
lock
in
rcr
test
dec
jno
mov
xchg
aas
pop
pop
sbb
out
cli
xchg
mov
ret
into
push
and
mov
or
aaa
es
jo
mov
pop
xchg
mov
push
out
mov
xor
loopne
stos
cmp
and
sub
inc
outsl
cmp
fstl
mov
and
adc
jne
pop
mov
cmpsl
xchg
std
pop
cmp
bound
or
in
fcomp
mov
xor
push
cmpsl
xchg
pop
push
jl
inc
insb
push
push
loopne
lods
jbe
cltd
es
andb
out
shlb
dec
inc
or
ret
xor
lods
push
aaa
inc
dec
and
pop
inc
push
cmp
or
lret
cld
aaa
sbb
repnz
xchg
dec
mov
sub
and
xor
jae
cmpsl
out
loop
push
and
fwait
sub
push
push
sub
xchg
lea
dec
leave
cmp
adc
xchg
cmp
repnz
daa
cmpsl
jae
push
mov
add
dec
and
jo
dec
push
mov
dec
mov
fldcw
push
and
pushf
bound
orb
xchg
xor
out
outsb
xor
mov
add
pop
shlb
pop
daa
and
cmp
jg
int
and
mov
sbb
jns
sbb
add
sub
dec
iret
mov
loop
in
rcrb
xor
mov
popf
into
sbb
mov
loopne
sub
add
pushf
mov
cmp
and
fistl
fucom
lret
mov
push
xchg
roll
movsb
xchg
and
out
dec
lret
and
fdivr
rorb
out
or
stos
ret
fsubr
out
jno
out
push
addl
add
mov
jmp
mov
dec
dec
and
lcall
sbb
std
rcll
call
leave
jne
aaa
aad
mov
mov
inc
out
addr16
push
sbb
shll
xchg
push
mov
push
dec
cmp
xchg
in
adc
test
pushf
pop
lcall
call
cmp
ret
xlat
call
add
pop
mov
repz
pop
jmp
ds
lods
mov
cmp
out
xchg
imul
or
xchg
in
fistl
cmpsl
push
gs
mov
sbbb
enter
adc
jl
mov
pop
sbb
add
and
in
lea
into
test
loopne
pop
pop
sub
iret
popa
mov
outsl
add
xor
aam
mov
adc
data16
in
xor
push
cmp
aaa
push
movsl
rclb
frstor
ret
pop
test
pop
cmpsl
push
scas
sbb
in
arpl
out
mov
xchg
fldt
and
xor
cmpsb
in
inc
mov
in
mov
ds
mov
outsl
lods
loopnew
mov
rcrl
fisubrs
add
stc
enter
jae
aam
iret
mov
push
lret
outsb
pop
lods
les
aad
mov
rcll
push
xor
addr16
subl
shl
jp
addr16
push
sbb
fsin
rorb
jl
repnz
push
sbb
or
xor
imul
adc
rcl
loopne
add
xor
inc
adc
rcr
sub
pop
adc
cmp
scas
out
movsl
stc
add
lods
mov
inc
add
mov
xorb
outsl
nop
inc
mov
arpl
xchg
mov
movsl
dec
jmp
dec
mov
mov
jae
cmp
inc
das
ja
mov
std
pop
push
add
dec
jb
mov
ss
pop
lock
mov
ret
mov
fwait
test
pop
popa
xchg
mov
xchg
rorl
cmp
ds
int
xchg
rclb
arpl
mov
test
shr
test
sub
cs
sahf
xchg
jae
cmp
ds
and
out
dec
mov
lret
and
stos
mov
gs
push
addr16
jae
sbb
push
push
into
mov
ja
scas
and
ret
mov
mov
add
cmc
sbb
mov
sbb
mov
aaa
outsl
mov
and
adc
xor
sub
loope
xchg
aas
loope
xlat
in
stc
and
cli
xchg
scas
mov
mov
mov
stos
jnp
mov
add
orb
js
sub
subb
aad
jmp
ljmp
xor
fistl
imul
bound
sqrtps
pop
xor
add
inc
pop
sub
add
sbb
push
je
jle
lods
in
rcr
pop
hlt
ljmp
mov
int
mov
ret
pop
loop
imul
ret
mov
bound
sub
mov
lcall
dec
add
inc
je
or
or
jo
iret
mov
in
lock
lock
push
stc
enter
mov
pop
test
repnz
pop
mov
fcmovb
mov
ret
inc
xchg
xchg
and
jo
xchg
cli
jle
xchg
cli
xor
ret
gs
fcmovnbe
loope
es
enter
add
repnz
mov
pusha
mov
push
cmp
cmp
test
outsl
scas
out
loope
jo
ret
xor
out
jnp
in
cmp
out
aas
mov
shr
out
inc
cmp
xor
popa
mov
sbb
dec
add
sub
outsb
and
loope
dec
and
xchg
mov
sbb
es
iret
fsubrp
xchg
outsl
in
cld
mov
or
dec
sbb
stos
xor
inc
mov
mov
subb
stos
xor
add
das
sbb
jo
add
mov
dec
ljmp
hlt
push
jmp
movsb
mov
sub
or
mov
lret
sahf
sub
negl
sub
mov
and
xor
incb
push
iret
xchg
inc
insb
pop
stos
mov
sahf
loope
daa
idiv
jae
push
pop
and
dec
add
aas
daa
jg
out
xlat
sub
add
xchg
rclb
jno
cwtl
stos
jbe
test
or
sub
push
lahf
je
movb
in
lods
out
ret
add
xchg
pop
inc
fnstsw
jle
push
pop
out
cmp
and
stos
add
inc
xchg
or
sub
xor
loopne
pop
cmp
xlat
aas
call
test
sub
dec
sbb
inc
mov
popa
stos
sbb
inc
jns
aaa
xchg
jle
xchg
sub
xor
xor
nop
dec
pusha
sbbl
push
das
enter
mov
loop
iret
adc
lret
or
fdivrs
dec
cwtl
cmp
xor
push
pop
imul
push
cs
popf
testb
jp
mov
or
test
push
sub
lock
std
dec
pop
das
or
enter
pop
in
and
pop
mov
iret
dec
imul
pusha
ss
lds
xchg
iret
xor
mov
popf
and
dec
mulb
cmp
lock
bound
inc
in
mov
xorb
cmp
push
mov
into
aaa
sub
imul
xor
fcoml
mov
add
bound
pop
cmc
sbb
pop
mov
or
pop
adc
int
mov
addr16
ret
dec
adc
and
or
mov
mov
and
insl
cmpsl
sub
fsubrs
cmpsl
je
in
aam
inc
mov
mov
adc
out
push
jl
cltd
pop
add
sbb
stc
pop
movsl
sbb
orl
or
pop
lahf
sahf
stc
aam
lea
add
jo
cwtl
inc
shrb
dec
adc
fstpt
repnz
in
lods
bound
mov
mov
dec
movsbl
aas
add
and
cmp
es
sbb
sbb
outsb
cli
adc
outsl
mov
js
jmp
pop
into
push
sbb
mov
andnps
repnz
push
push
dec
loopne
xchg
jno
or
jmp
mov
into
xchg
jae
das
call
ss
dec
in
sarb
repz
jno
iret
pop
aas
adc
iret
sarb
cmp
ja
frstor
sbb
rorb
xor
sbb
popf
jae
pop
xchg
xchg
lret
cmp
sub
shlb
cmp
loop
inc
bnd
pop
roll
jns
or
mov
dec
sarl
add
dec
ja
xchg
stc
fcos
push
adc
mov
mov
mov
add
and
adc
shrb
mov
push
lods
arpl
or
testb
inc
jle
icebp
sahf
inc
push
and
or
out
pushf
pushf
mov
lea
dec
jnp
xor
jae
xor
or
sub
sub
mov
pop
adc
repnz
inc
adc
push
mov
dec
push
sub
pop
pop
mov
shl
inc
movsl
push
push
jae
and
pop
xorb
cmc
cmc
lds
shll
jle
pushf
xchg
scas
out
cmp
cmp
push
movsl
js
test
sti
call
mov
lods
dec
lret
subl
push
mov
jle
and
pop
push
dec
adc
insl
push
imul
mov
mov
les
push
imul
sub
push
mov
sbb
and
add
aas
push
imul
xor
add
ficompl
mov
sarb
sub
add
lods
jae
pop
jbe
ds
repnz
lods
cmp
sub
testl
push
test
scas
pop
in
inc
add
dec
sub
xor
aad
cmp
lods
mov
cwtl
movsl
mov
jp
frstor
jae
adc
or
hlt
cmpsl
cmp
adc
ror
mov
aad
movsl
and
pop
pushw
mov
daa
mov
pop
push
rol
sbb
pop
in
or
in
mov
pop
sbb
sti
adc
pop
pop
nop
jns
cmp
adc
pushf
and
call
shl
fcom
or
xchg
xchg
lret
sub
jb
cwtl
enter
cli
icebp
and
pop
cmpsb
jmp
dec
push
and
mov
fs
subb
jo
mov
outsb
xchg
push
dec
js
insb
roll
jge
sub
jle
dec
fidivrs
jle
mov
test
test
pusha
fnstcw
das
cmp
sbb
loop
ja
xor
sbb
lcall
mov
test
xchg
jo
sbb
fisttpl
xchg
adc
mov
fsubrl
ds
xlat
push
hlt
out
push
sub
mov
in
mov
pop
outsb
arpl
loope
push
xor
outsb
dec
dec
lea
dec
inc
out
rolb
cmp
xchg
sub
mov
lret
push
mov
sahf
ret
scas
xor
jb
sbb
pop
stos
outsb
sbb
pop
and
scas
adc
out
pop
cmp
addl
jp
dec
xchg
cld
stos
mov
in
jne
cli
dec
pop
repnz
xor
xchg
scas
jno
pminsw
push
push
cld
je
jp
arpl
and
cmpsl
imul
or
mov
hlt
dec
cmp
jns
pop
push
dec
cmp
sub
push
out
mov
lahf
out
sbb
and
pop
or
pop
int3
shlb
outsb
jb
inc
or
pop
jns
out
cmp
pop
push
xor
xchg
mov
icebp
inc
push
testb
mov
cmp
je
lret
scas
push
flds
scas
jecxz
test
and
into
or
add
and
add
jl
jge
arpl
mov
jno
inc
push
push
repz
xchg
icebp
mov
leave
lock
jmp
loope
pop
jbe
cli
bound
pop
in
lret
lea
jne
push
repnz
xchg
scas
lock
push
xchg
inc
addr16
sbb
pop
pop
lock
adc
push
es
sbb
int
xor
xchg
movsb
sbb
cmpsl
flds
clc
and
push
cmp
add
push
popa
dec
add
xchg
hlt
dec
xor
jbe
push
jmp
add
sub
adc
pop
jae
imul
std
pop
mov
repz
outsl
sbb
xchg
mov
xor
stos
adcl
mov
lock
stc
or
sbb
push
mov
sti
or
sti
es
jo
fwait
test
sbb
xor
sbb
mov
jmp
sub
adc
inc
test
fidivrl
pop
arpl
mov
andb
mov
arpl
aad
add
adc
rorb
pop
pop
jmp
pop
popa
pop
add
mov
xor
in
mov
aaa
push
orb
mov
fs
jl
fs
add
cwtl
adc
cmp
cmp
outsl
xchg
clc
data16
sbb
out
scas
add
and
inc
sub
aam
test
loop
xchg
mov
jb
push
and
mov
test
jg
cmp
lock
into
sub
in
or
lds
lcall
lock
test
inc
negl
sahf
mov
loope
daa
fldcw
into
out
aas
test
sbb
jmp
cmpb
pop
dec
jge
lea
nop
mov
mov
mov
leave
rorb
sbb
push
shll
sar
jle
mov
sbb
das
sub
test
cltd
mov
xchg
out
lea
sahf
xor
sahf
xchg
adc
cmp
pusha
mov
xchg
push
pop
inc
add
jecxz
stc
incl
lahf
dec
and
jmp
loopne
pop
inc
push
clc
dec
idivl
scas
cs
mov
add
pop
mov
pop
dec
mov
mov
lret
mov
negb
sbb
pop
stos
out
nop
push
xchg
movsb
loopne
adcb
push
lret
jbe
les
cmp
pop
hlt
leave
dec
and
cmp
mov
ret
xchg
adc
adc
mov
clc
inc
cwtl
aaa
aam
aaa
mov
push
mov
cmpsb
jl
mov
call
pushf
mov
adc
cmp
iret
leave
mov
loope
jbe
clc
mov
loope
out
out
xchg
adc
lods
dec
stos
and
in
or
jnp
sub
pop
lods
and
cmp
mull
lret
loope
mov
push
popl
dec
fnstcw
pushf
loopne
cvtps2pi
mov
or
xor
push
repz
rorl
xor
push
iret
or
rep
inc
leave
aam
repnz
jg
mov
sti
loopne
jl
jg
scas
test
and
jbe
int3
jo
std
jle,pt
push
dec
scas
ljmp
mov
fldt
popa
scas
mov
shll
push
adc
lret
jl
call
mov
add
or
xor
xchg
pop
movsl
hlt
and
add
loop
mov
adc
movsl
enter
fwait
iret
popf
jne
es
js
or
sar
call
sub
adc
pop
adc
cmpsl
jle
mov
adc
pop
aad
fnstsw
mov
mov
push
sub
or
sbb
stos
and
lods
xchg
push
cmc
shlb
xchg
inc
sti
popf
mov
sub
mov
lods
mov
push
adc
scas
clc
jmp
ret
das
and
adc
leave
outsl
aaa
pop
fnstsw
adcl
pop
pop
mov
ja
fwait
inc
mov
sub
lds
cmp
xchg
push
out
mov
cmpsl
inc
or
mov
add
adc
pop
fsubl
fdivrs
les
push
js
add
inc
jmp
jae
mov
cltd
xchg
das
push
push
in
jg
sbb
cmc
push
adc
adc
or
sub
jnp
adc
mov
xchg
xor
cmpsl
xchg
inc
cmp
cmpsb
sbbb
out
jno
neg
adc
sub
add
roll
scas
push
cli
mov
xchg
into
jp
stos
cld
in
fsub
lea
mov
lret
ja
add
test
adc
aad
mov
or
jmp
xor
lods
jle
inc
fstps
pop
mov
ja
aad
xor
sahf
pushf
push
pop
sub
or
lods
and
cs
divb
mov
xlat
ffreep
ds
testb
imul
sti
rclb
sarb
lea
xor
fnstcw
shll
cld
roll
and
and
jle
jg
or
push
mov
adc
push
sbb
leave
jmp
adc
aad
jae
push
adc
push
out
sbb
pop
out
nop
sbb
sub
pop
aad
xor
xchg
xor
push
mov
xlat
jo
ja
mov
mov
jno
xor
mov
test
mov
int3
mov
sbb
sbb
pop
out
and
cmc
pusha
cltd
xchg
sti
sbb
mov
shr
cwtl
xor
data16
sbb
out
add
in
outsb
push
pop
xchg
ja
xchg
mov
out
mov
imul
fldcw
sub
mov
sub
lret
inc
frstor
xchg
neg
cmp
sub
jae
stc
aam
xor
push
push
mov
pop
scas
and
fbld
insb
loopne
lcall
sbb
pop
call
sbb
xchg
test
and
repz
rclb
xchg
and
xor
fistl
popf
in
adc
mov
and
xchg
fwait
jne
lods
sub
mov
sbb
mov
test
std
out
cmp
jmp
outsb
lea
adcb
adc
jo
or
stos
xor
repz
addr16
mov
shrb
pop
pushf
inc
dec
ret
dec
lock
ret
sub
sbb
mov
fcmovu
push
incl
aam
dec
add
outsb
and
push
pop
mov
js
or
or
pop
shlb
pop
mov
mov
cmp
cmp
push
xchg
leave
repz
mov
jae
jle
jl
jl
add
sbb
out
stos
adc
and
mov
fidivrs
js
jns
in
xchg
movsl
xchg
lock
loope
fldenv
inc
pop
sub
mov
jmp
jecxz
icebp
outsb
scas
inc
leave
xchg
mov
adc
xchg
dec
pop
fisubrs
inc
mov
sub
nop
jo
iret
ds
fnstenv
arpl
test
lods
add
into
xor
or
loop
mov
aam
icebp
imul
pop
int3
lock
repnz
add
push
sbb
xor
inc
and
push
inc
fistps
mov
adc
mov
add
cmpsb
sbb
shlb
inc
cmp
jg
jp
lahf
fidivl
fdiv
test
and
xchg
out
ss
xor
and
xorl
push
aad
ds
inc
xchg
mov
ds
lods
pop
sbb
aam
outsl
pop
in
xor
lds
scas
test
loop
inc
loopnew
insb
inc
mov
inc
dec
push
xor
fcompl
pop
je
cmpsb
or
movsl
push
icebp
aas
movb
push
movsl
inc
aas
fwait
pop
pusha
insl
test
shlb
adc
mov
inc
test
cmpsb
jp
push
sub
jns
jmp
in
sub
sub
je
pop
dec
sbb
jns
rorb
bound
mov
leave
lds
imul
in
mov
outsb
enter
or
inc
in
divl
scas
leave
les
out
cmp
cmp
adc
cmp
cwtl
out
repz
arpl
sbb
dec
jg
pusha
mov
icebp
adc
enter
push
mov
call
dec
lahf
jge
xchg
add
js
sbb
mov
xchg
into
mov
mov
push
popf
jg
adc
pop
orl
pushf
test
sub
jbe
sub
leave
test
jno
and
movl
jle
mov
dec
inc
sti
in
pop
adc
leave
jo,pt
sbb
mov
sbbb
inc
mov
out
pop
jp
xchg
loopne
test
jo
jne
iret
cmpsl
mov
inc
or
cld
xchg
add
outsl
pop
add
sub
add
or
jp
push
xchg
imul
pop
loope
mov
dec
sbb
stos
add
popa
mov
cmp
add
push
fsts
sbb
xor
std
fmull
les
mov
outsl
shl
aam
mov
cmp
add
into
push
fs
pop
popf
in
int
mov
mov
mov
lods
inc
xchg
push
mov
ds
jns
jmp
cmpsb
les
fnstcw
and
lret
outsl
jne
and
rol
xor
aas
xor
adc
pop
mov
jo
cmp
ss
insb
es
mov
mov
cmp
call
or
insl
xchg
push
jmp
or
push
jle
sbb
aad
jle
int
enter
sub
xchg
mov
mov
jl
out
pop
lea
mull
mov
inc
sbb
iret
cmpsb
xlat
orl
mov
lods
cmp
or
mov
cmc
hlt
jecxz
xchg
jge
pop
sarb
ja
jg
lea
cmc
test
xor
decb
xchg
fcomip
data16
sub
mov
jae
data16
mov
psubw
cmp
sub
cmp
loop
pop
cmp
in
xchg
or
mov
fdivs
pop
fucomi
mov
or
xchg
lods
dec
psubw
pusha
push
mov
mov
imulb
jg
jg,pn
push
adcl
cmp
stc
mov
fbstp
sti
movsb
rcrl
mov
add
sub
stos
imul
int
dec
lcall
dec
sub
movsb
sbb
pop
adc
mov
cmp
lahf
mov
mov
clc
jle
inc
test
mov
scas
subl
stos
inc
mov
in
sahf
movsl
dec
push
inc
jne
jne
pop
pop
mov
and
adc
and
pop
jns
loopne
ret
adc
into
mov
xor
movsl
hlt
mov
out
addr16
lea
pop
inc
lods
and
repnz
imul
ss
int3
cmp
test
fcmovu
fadds
mov
and
das
sbb
or
or
jmp
dec
loopne
scas
xor
dec
dec
cmp
cmp
lahf
push
fistps
cmovne
xchg
div
cmc
out
mov
and
inc
mov
cwtl
out
leave
mov
arpl
mov
idiv
xor
stos
ss
ljmp
mov
fcmovbe
imull
add
sub
je
pop
data16
aaa
loopne
movsb
int3
add
sub
mov
fwait
testl
punpckhbw
clc
rcll
dec
mov
mov
add
lcall
inc
inc
lods
inc
dec
repnz
shrb
xchg
mov
ljmp
push
ret
pop
inc
inc
clc
jl
mov
or
insb
xchg
mov
out
add
adc
and
jl
jbe
and
popa
sub
push
inc
ja
and
lcall
xor
push
das
es
push
icebp
and
iret
sub
aas
cmpsl
clc
outsb
adc
imul
jnp
cs
filds
sub
mov
ja
push
aas
dec
jmp
fbld
sti
and
or
jne
adc
in
mov
in
jae
out
aas
jle
jle
sub
or
mov
push
push
cltd
sbb
test
int
sti
mov
daa
adc
mov
test
ret
inc
adc
lahf
iret
lret
js
lods
jae
jns
push
stos
loop
fwait
cld
adc
inc
sub
jge
popf
cwtl
xor
or
jns
pop
mov
iret
ret
jmp
icebp
jns
adc
int
push
out
addr16
sahf
imul
push
fdivrl
pop
addr16
idiv
outsb
je
mov
out
inc
mov
mov
shll
fwait
cmp
xchg
or
aas
je
imul
jge
cwtl
mov
mov
mov
icebp
xor
adc
push
inc
adc
jmp
out
dec
hlt
cmpb
sbb
mov
mov
jle
xchg
shrl
scas
inc
xchg
jnp
pop
sub
arpl
imul
in
cltd
jae
push
sub
pop
stos
sbb
jmp
jo
jg
cld
shlb
xchg
pop
outsb
xchg
andl
mov
sbb
ror
and
out
inc
sub
jne
loope
inc
pushl
xchg
in
repz
jp
pop
mov
jo
loop
or
shll
shl
and
scas
in
pusha
decb
xchg
push
sahf
pushw
jno
mov
add
dec
add
jle
sbb
adc
imul
ficomps
xlat
mov
fcmovu
push
add
sbb
xor
pop
int3
imul
mov
adc
mov
jg
add
ljmp
mov
fsubl
mov
mov
pop
sub
dec
scas
lret
inc
into
cmp
xchg
outsb
arpl
adc
out
mov
sbb
and
pusha
cs
lahf
push
jbe
pop
xchg
sbb
jecxz
out
addr16
mov
lahf
xor
pop
int3
sahf
cmp
and
mov
aad
fiadds
inc
push
insb
inc
inc
test
ret
xor
into
xchg
scas
sbb
ret
cld
imull
pop
mov
negb
or
sahf
and
test
dec
inc
pop
scas
jnp
sbb
pop
adc
hlt
and
add
lock
ljmp
xchg
mov
stos
roll
adc
push
jge
push
jbe
into
push
sbb
inc
mov
adc
pop
mov
rorb
jnp
cmp
jg
ret
pop
mov
fwait
lahf
fdivl
jo
out
pop
popw
or
scas
sub
dec
into
test
aam
lods
mov
mov
cmp
xchg
sub
icebp
mov
pop
sub
stos
push
pop
fisttpl
push
sbbl
aam
addr16
mov
push
inc
les
lret
fisubs
pop
sub
aam
pop
das
push
out
repz
pop
push
or
sub
lret
imul
fs
push
sbb
icebp
inc
call
push
xorl
sbb
add
loope
mov
xor
daa
mov
jecxz
test
into
jo
jbe
scas
or
jae
in
fdivrl
in
cmpsb
std
sub
daa
and
and
shlb
sub
pop
rcll
aam
or
push
rcrl
sbb
mov
xor
icebp
xchg
and
outsl
aam
test
int
nop
mov
or
lea
mov
adc
loope
cmp
ja
adc
int3
cmp
outsb
mov
pop
or
loope
stos
pusha
adc
mov
push
fistpll
adc
xlat
cmc
scas
or
mov
inc
lahf
or
add
mov
pop
mov
popa
mov
mov
sbbl
sub
fcompl
fnsave
int
push
clc
lock
adc
inc
jns
dec
subb
test
jbe
mov
dec
pop
movsl
push
jae
outsl
faddl
aam
cmc
scas
shrl
insb
jecxz
adc
mov
add
test
sub
les
lods
or
ret
sbb
sbb
testl
cmp
mov
ror
sbb
cltd
out
push
push
js
jns
push
mov
cld
hlt
add
xlat
add
adc
cwtl
mov
lds
sub
fiadds
popf
ret
addr16
xchg
or
test
fadds
pushf
out
xor
or
gs
sti
sub
adc
pop
xor
testl
gs
lea
ret
add
rcll
jge
fisubrl
jle
clc
mov
push
xorl
addr16
cmp
pmulhw
push
pop
pop
std
xor
mov
imul
push
outsb
xor
jg
lods
out
push
push
pusha
mov
mov
or
je
hlt
push
cmp
std
mov
lea
dec
jne
xor
rorl
ret
or
das
add
int3
pop
or
push
sub
push
in
mov
jb
flds
je
or
es
int3
add
lock
mov
into
cmp
xchg
cs
rcrl
stc
mov
icebp
mov
test
push
shlb
inc
adc
sahf
subl
mov
pop
mov
push
and
je
dec
stos
clc
aad
inc
fs
int3
add
mov
push
scas
mov
repnz
test
shl
xor
push
sub
push
cmp
push
lret
cwtl
xchg
adc
ret
mov
adc
lret
lret
leave
or
pop
cmpl
repz
mov
cmpb
or
rcrl
arpl
jg
shlb
mov
ret
jbe
jne
pop
inc
fldcw
outsl
sbb
or
jbe
jg
into
ret
sub
ret
push
shl
xchg
and
cmp
lock
dec
jmp
jb
lock
dec
jecxz
aaa
jg
popf
pop
mov
fistl
stos
or
xor
out
leave
imul
iret
je
mov
dec
mov
mov
adc
mov
lea
call
es
in
jnp
xchg
and
scas
inc
push
fs
dec
mov
adcb
pushf
sti
imul
rorb
arpl
cmp
loopne
jne
inc
in
sub
inc
jmp
xor
std
inc
pop
and
adcb
xchg
push
lods
das
out
xor
cmp
and
fmull
fwait
dec
mov
xor
das
mov
add
push
jecxz
sub
mov
orb
jge
mov
xchg
add
sub
xchg
jb
cmpsb
push
inc
xchg
push
movsb
adc
loop
lods
mov
sub
in
cmp
xchg
sub
push
ret
sub
les
leave
loopne
xchg
pop
cmp
ja
notb
test
hlt
sahf
sub
repnz
pop
cmp
lea
or
ret
andl
dec
inc
cmp
lds
sbbb
divl
jb
insl
jmp
lret
sbb
pop
sub
pop
xchg
inc
test
jp
sahf
jo
cmp
jae
ljmp
add
fldcw
imul
add
dec
sub
and
in
std
fcmovbe
inc
insl
fisttpll
jns
adc
loopne
sahf
fs
jb
add
add
test
aam
cmpl
fs
push
mov
cmovle
rcl
mov
outsl
stos
aaa
repnz
mov
xor
mov
mov
pop
lret
aad
sbb
inc
cmp
fwait
sbb
push
jmp
dec
add
mov
lret
loopne
popf
out
push
cmp
lods
fisttpl
xchg
test
cltd
push
jbe
imul
sub
mov
cmp
or
jle
inc
dec
sbb
cmp
mov
pop
dec
pushf
insb
imul
imul
inc
fsubs
adc
or
jmp
or
repnz
int
mov
iret
mov
repz
rclb
test
outsw
pop
fdivrl
xor
adc
sub
adc
inc
mov
inc
and
shll
push
add
jp
scas
adc
movsl
xor
jecxz
push
test
in
cld
out
xor
jmp
mov
fnstenv
push
cmp
mov
mov
push
cmp
insb
imul
lret
addb
mov
sbb
inc
jnp,pn
xor
add
pop
add
mov
rorb
push
in
cwtl
pop
cmp
pushf
or
mov
das
dec
pop
xor
mov
divw
les
outsb
movsl
ds
pop
sbb
xchg
add
inc
adc
test
mov
ds
sub
mull
xor
cmp
pop
rorl
std
mov
ds
aaa
xchg
add
fcoms
popf
mov
push
fs
adc
loop
dec
fisubrs
popa
dec
jns
jle
pop
lahf
fcoms
cltd
jl
fsub
xor
loop
dec
repnz
mov
loope
sub
mov
xchg
adc
or
in
mov
sbb
ss
loopne
in
test
push
icebp
mov
lahf
add
cld
mov
loopne
inc
arpl
out
cmp
adc
lahf
pop
int
call
or
out
dec
adc
scas
mov
fstl
push
icebp
into
test
pop
mov
fldln2
add
push
testl
sub
daa
pop
mov
lret
std
sti
mov
or
pop
es
lea
xchg
ret
aas
sub
sbb
push
mov
xchg
sub
push
push
and
outsl
fwait
enter
aaa
inc
add
jne
hlt
adc
adc
cmp
cmp
mov
adc
ss
scas
adc
pusha
adc
scas
and
stos
inc
xchg
dec
scas
loope
iret
pushf
push
cmp
push
xlat
inc
in
stos
pop
scas
pop
shlb
add
ljmp
jb
push
mov
mov
and
mov
in
sahf
test
sbb
and
pop
hlt
sbb
sahf
test
cld
out
jge,pt
je
inc
xor
shl
incb
jg
pop
xor
int
test
ret
jl
loopne
sbb
jmp
popa
sarl
lcall
inc
decl
sti
lock
das
xor
add
jne
cli
call
loopnew
mov
in
std
orl
sbb
mov
fs
lods
das
ljmp
stos
inc
movsb
dec
add
jne
outsl
dec
pop
jnp
add
imul
in
out
ljmp
pop
and
popa
jp
push
and
adc
push
ret
xchg
imul
cli
mov
inc
ds
ret
loop
je
fisubrs
clc
dec
lods
mov
nop
out
clc
das
xchg
inc
push
add
jg
xchg
mov
nop
cmp
data16
pushf
fidivrs
out
movsl
pop
pop
dec
mov
addr16
in
jne
aas
test
icebp
lret
pop
stos
sub
dec
imul
jae
mov
out
inc
stos
push
inc
test
ja
sub
cltd
fcoml
jecxz
jb
in
add
mov
push
inc
jge
lds
jns
mov
dec
packssdw
inc
pop
inc
xchg
jmp
hlt
fcmovnb
insl
rcrb
xchg
jae
dec
sub
adc
add
and
lock
movsl
push
gs
stos
jae
xchg
sbb
fstpt
adc
pop
in
inc
daa
aas
mov
fldl
enter
push
fldcw
je
adc
fs
ja
adc
arpl
or
jo
jns
cwtl
cmpb
mov
or
xchg
stc
mov
adcb
fwait
adc
sbb
pop
xchg
cmpsl
mov
popa
mov
or
xor
push
stos
mov
jbe
pop
nop
jns
push
aas
add
cmp
xchg
mov
into
cmp
dec
cmp
movsb
sbb
jne
pop
cmpsl
fwait
push
push
lods
rclb
xor
jle
jp
imul
xchg
pop
lds
dec
insl
jnp
push
push
lock
fisubrs
sub
scas
cmp
jge
pop
mov
test
cmp
std
mov
insb
cmovbe
clc
push
ret
lret
test
xchg
push
cmp
imul
les
xchg
mov
cmpsl
jno
rcr
pop
gs
push
mov
jnp
jecxz
xor
movsb
cltd
cmp
test
mov
pop
in
add
jno
sub
clc
das
mov
sbb
push
inc
add
pop
xchg
sti
cmpsb
outsl
ljmp
mov
or
push
or
jecxz
lcall
popa
sub
push
bound
movsb
mov
loop
pushf
fdivrs
dec
cs
inc
stos
movsl
xchg
inc
frndint
ljmp
sub
iret
bound
leave
or
pop
lods
xlat
push
in
push
loop
out
sub
pushf
mov
imul
and
push
jge
sbb
mov
mov
jo
pushl
jb
fldcw
mov
stc
flds
dec
xchg
je
jge
mov
push
mov
fidivl
push
addl
sahf
cmp
sarb
imull
xchg
push
and
inc
jbe
push
insb
sub
push
outsl
loopne
outsl
and
stc
mov
cmp
inc
jle
xorl
mov
sub
addl
push
je
cmc
adc
sbb
out
xchg
sbb
pushf
jo
and
out
inc
and
ljmp
cs
jne
into
push
jle
jnp
out
pop
sahf
imul
imul
inc
loopne
ljmp
dec
cmpsb
ljmp
das
outsb
scas
push
cwtl
ret
int3
mov
call
and
jae
adc
out
pop
mov
pop
or
stos
lahf
push
loopne
hlt
inc
lret
pop
ds
push
lea
scas
sarb
and
jno
add
std
loop
jmp
pop
add
mov
pop
dec
pusha
vmwrite
nop
pop
hlt
push
xor
push
mov
imul
mov
inc
fwait
pusha
fnstenv
inc
inc
icebp
lcall
adc
push
enter
hlt
push
outsb
call
push
mov
daa
pop
inc
mov
or
test
jae
sub
and
inc
inc
xchg
and
arpl
hlt
dec
jl
sti
and
xchg
iret
aaa
loope
cmp
lods
dec
xor
out
bound
stc
fdivr
jbe
xchg
xchg
sahf
cmp
test
adc
sbb
cmp
cld
in
xchg
fldenv
sbb
mov
in
and
sarb
jge
in
and
fs
ljmp
or
in
pop
rcrb
test
mov
adc
lret
and
mov
add
or
xor
gs
scas
sub
fsub
cmpsb
aaa
pushf
ret
mov
sbb
xchg
jb
adc
lret
fs
pop
cld
inc
push
push
and
sbb
mov
pusha
push
push
push
or
movsl
fists
int3
mov
push
inc
cmpsl
imull
clc
mov
or
loope
mov
iret
add
pop
dec
jb
push
xchg
mov
aam
rorb
movsb
jle
pusha
sub
pop
in
mov
sub
sub
jge
push
mov
repnz
bound
inc
xor
aaa
out
mov
mov
mov
dec
loopne
dec
sarb
cli
movsl
add
pop
movsl
in
cltd
jle
aad
cmp
sub
mov
add
insl
nop
jns
xchg
mov
in
mov
adc
xor
aam
test
dec
out
movsb
add
arpl
aam
inc
mov
outsb
test
iret
push
mov
add
add
mov
call
sti
adc
int
jp
test
clc
jo
xchg
dec
pop
add
mov
hlt
adc
sub
mov
add
call
inc
jnp
fs
push
xlat
lods
push
jmp
add
std
dec
scas
cmp
add
sbb
aaa
adc
mov
jnp
jge
mov
std
sbb
inc
mov
lock
dec
sbb
pop
lahf
out
inc
and
inc
sub
pop
mov
mov
xor
dec
cmp
leave
nop
dec
mov
rcll
stos
dec
mov
inc
xchg
push
das
xor
xchg
jmp
dec
inc
inc
push
das
push
mov
adc
stc
hlt
mov
ds
scas
sbb
std
xor
lods
insl
pop
sarl
inc
jne
mov
and
pop
sbb
xchg
inc
pusha
adc
push
pop
jnp
push
decb
jmp
xor
jne
adc
mov
sbb
data16
imul
orl
xor
in
adc
cmpsl
hlt
and
stos
mov
rcll
jle
push
sbb
aad
push
das
mov
dec
leave
jae
cmp
xor
pop
sbb
xor
sbb
sbb
adc
and
sarb
insb
fiadds
pop
repnz
push
add
popa
imul
shr
pusha
imul
in
cmc
fs
dec
mov
add
idivl
add
jl
xor
dec
pop
xchg
sbb
xor
adc
mov
popf
lea
and
sbb
mov
mov
sbb
inc
mov
inc
adc
popf
repz
ficomps
cltd
loopne
stos
xchg
into
xchg
mov
fsubrl
cli
inc
sbb
loopne
push
sarl
aas
jl
add
out
mov
cs
aam
inc
pop
mov
push
cltd
in
mov
cmpsl
ss
fucomi
mov
adc
inc
lahf
and
jmp
inc
test
in
cld
cs
test
add
loope
sbb
mov
adc
or
repz
aam
mov
cmp
pop
xchg
mov
push
and
and
scas
dec
mov
repz
test
jl
dec
bndldx
lret
jl
pop
icebp
addl
test
std
fwait
mov
adc
test
cs
push
sar
mov
jp
jmp
inc
dec
lret
xlat
out
data16
test
adc
lret
cmp
sbb
push
scas
test
xchg
jmp
aam
sbbl
shl
loope
les
stos
mov
fcoml
mov
gs
bound
movsl
lahf
pop
loopne
fwait
cmpsb
mov
dec
iret
repnz
sub
sbb
jnp
lock
frstor
shlb
out
xor
adc
inc
xor
add
jmp
jecxz
popf
out
sti
push
bound
or
decl
push
jb
sahf
cltd
enter
scas
lret
sbb
and
pop
add
jmp
jle
jne
insl
repz
iret
adc
movb
in
push
adc
ljmp
sub
dec
clc
push
mov
clc
lret
insl
cli
jle
les
xchg
sub
push
popf
xlat
popa
aas
jae
fidivrl
xor
stos
add
clc
jmp
jg
mov
ss
js
xchg
mov
movsb
arpl
movsb
xchg
jmp
nop
ljmp
mov
jo
insl
ljmp
movsl
inc
lods
aas
es
jbe
repnz
aad
lods
stos
sub
and
in
ja
dec
and
fadds
in
test
test
xor
mov
and
out
clc
sti
adc
push
ljmp
pop
mov
iret
and
fstp
dec
test
nop
mov
mov
push
mov
idiv
outsl
mov
addr16
mov
mov
scas
imul
fdiv
add
cmp
gs
xor
in
ljmp
mov
dec
aam
pop
es
mov
scas
dec
push
aad
or
dec
or
test
fisubs
xor
loopne
mov
fcoms
pop
test
mov
movsl
mov
and
push
xchg
out
sub
and
inc
mov
cmp
ja
ret
enter
inc
xchg
pop
cmp
pushf
dec
cmp
xlat
adc
pop
orl
sub
outsb
lret
dec
push
std
inc
add
lret
enter
xchg
adc
je
mov
inc
push
nop
add
mov
das
inc
sbb
pop
mov
mov
push
add
in
pop
pushf
jb
fmull
add
insl
push
lea
push
pop
jbe
test
push
pushf
out
mov
mov
pop
mov
fadds
and
lock
push
and
lods
inc
arpl
aas
stos
mov
nop
cmp
lcall
mov
cli
xchg
pusha
lahf
and
cmp
sarl
lods
loope
mov
out
jb
imul
shrl
jle
cmp
sahf
or
and
inc
push
push
jmp
xor
pop
pop
mov
cmp
mov
mov
push
lods
inc
ror
lea
lret
cmp
sbb
cmc
inc
xchg
xor
popa
jp
mov
jae
mov
and
dec
std
insl
xor
cs
into
movsl
fsqrt
pop
dec
out
stos
or
shrb
mov
out
mov
in
sbb
pop
pop
out
add
sub
nop
int
das
sbb
loop
fldt
pushf
jge
or
sub
icebp
into
xchg
xchg
mov
push
mov
jecxz
leave
lods
loop
push
inc
add
out
outsl
in
mov
xchg
outsl
adc
push
call
loope
sub
outsl
mov
add
mov
mov
repz
and
mov
and
add
rcrb
ja
rep
bound
dec
bound
in
mov
and
or
push
cld
insb
cli
mov
xor
inc
cmpsl
cmp
lods
lds
cmpb
inc
in
xchg
cmpsb
mov
dec
popa
pop
xlat
cmp
fs
xchg
rcrb
inc
cmp
gs
mov
loopne
sarl
pusha
shr
push
std
lds
sti
test
sub
adc
dec
pusha
cwtl
add
jno
test
lods
call
fdivrs
inc
xorl
xchg
or
in
xor
outsb
lret
cs
xchg
fstps
pop
leave
int3
stc
pop
mov
xchg
int3
and
int3
frstor
fs
jo
test
xor
pop
cmp
inc
mov
jne
cmc
mov
mov
sub
mov
mov
lcall
jge
inc
inc
gs
ret
aad
sarl
incl
in
fwait
clc
and
push
jmp
inc
pushf
clc
inc
push
sub
popf
inc
aas
add
roll
lods
mulb
in
jnp
fs
mull
shr
push
mov
jecxz
outsl
mov
sbb
mov
jo
jg
out
sbb
push
mov
movsb
dec
pop
fnstenv
inc
jne
pop
jl
andb
adc
mov
sub
fadds
in
cmpsb
loope
mov
scas
push
es
fnsave
outsb
mov
pop
fimuls
mov
insl
fwait
mov
lahf
pop
mov
push
cmpsl
and
add
dec
and
imul
setns
mov
adc
stos
shrl
or
dec
js
and
mov
aam
mov
leave
mov
mov
repz
xor
popa
bnd
or
sbb
sti
add
je
mov
enter
lret
mov
setnp
fbstp
adc
out
iret
test
setb
mov
das
mov
out
push
xor
sbb
test
jnp
jp
dec
sahf
mov
dec
fs
pop
xor
aaa
and
fidivrs
add
dec
cmp
mov
adc
adc
inc
ror
sbb
xchg
dec
adc
push
mov
testb
push
add
or
sahf
inc
mov
pop
or
jecxz
cmp
nop
sbb
pop
pop
dec
sarl
push
imul
xor
pop
aas
aaa
jle
dec
imul
test
mov
adc
push
pop
out
inc
cmc
arpl
jae
cwtl
insb
lock
sub
xlat
add
jecxz
sbbb
pop
push
push
into
xchg
cltd
pop
or
cltd
inc
mov
jae
push
lds
insl
shll
notb
in
add
or
dec
sbb
push
repnz
add
mov
cwtl
lods
lret
fdivl
int
aaa
pop
cmp
fsts
and
pop
jb
mov
popl
lahf
adc
jae
fsubp
or
pop
insl
mov
icebp
fwait
data16
pop
js
lret
leave
sbb
out
and
jle
and
sbb
sbb
mov
imul
jl
mov
cmp
scas
out
sbb
xchg
movsl
bound
mov
insl
out
sahf
shl
cltd
lods
mov
xchg
leave
adc
lods
imul
call
adc
push
je
xor
cli
adc
ror
int3
jge
flds
sbb
jo
xor
jbe
ret
rcr
adc
add
out
mov
sbb
xchg
lods
stos
dec
jle
repnz
jg
fnstenv
ljmp
or
mov
popf
jmp
sbbb
sbb
out
mov
fwait
push
jl
arpl
pop
jmp
in
cld
std
mov
ret
iret
pop
push
lock
outsl
sti
mov
push
pop
pop
in
xabort
mov
jmp
mov
cmpsl
scas
sub
add
enter
adcl
cmpsb
gs
dec
fistl
aam
lods
ss
push
aaa
or
repz
cmpsb
sbb
mov
cmp
xchg
jne
cmc
pop
jle
xor
jbe
sbb
out
stc
adc
jae
lods
lahf
inc
sti
mov
stc
cld
adc
add
mov
add
shlb
repz
outsb
clc
sub
lock
mov
push
ljmp
mov
loope
adc
ficomps
imul
movsb
xchg
roll
xchg
jmp
sbb
mov
jge
sbb
mov
hlt
jb
nop
xor
lods
sub
jo
test
add
aas
dec
ss
out
ror
jae
xchg
out
popf
mov
repz
mov
jecxz
jg
inc
hlt
pop
push
test
aad
aam
nop
sub
cmp
xchg
add
addb
loope
pop
mov
ret
jle
pop
arpl
andb
nop
dec
cmc
cli
push
scas
lods
inc
popa
mov
fbstp
sti
stc
stos
loop
repnz
or
or
mov
adc
adcb
rcr
cmp
lcall
ror
stc
pop
inc
mov
dec
int
jle
sub
movsb
in
icebp
mulb
test
inc
lock
lock
test
and
ror
xchg
out
push
ds
and
lret
inc
clc
in
inc
jns
sahf
jg
add
xchg
fldt
cmp
and
sti
mov
xor
in
xchg
and
xchg
ss
cmp
xchg
xchg
aam
lahf
cmc
xor
jns
hlt
dec
icebp
or
adc
icebp
out
lret
in
jg
pop
xlat
cmp
repnz
movsb
mov
pop
adc
insb
les
mov
add
sti
push
mov
sahf
ficompl
push
aas
sub
sbb
mov
add
jmp
loope
lret
mov
push
mov
mov
decb
shld
pop
sbb
xor
into
rcl
sbb
sub
fisubrl
sbb
dec
mov
add
je
divb
xor
push
loopne
lods
ja
inc
test
rcrl
hlt
add
scas
add
sub
push
andb
mov
xor
rcl
in
jo
jg
xor
push
lahf
cmp
push
xchg
test
in
clc
lock
or
inc
or
test
mov
nop
pop
sahf
es
dec
sbb
test
scas
xor
pop
xchg
sbb
test
push
cmp
sahf
pushf
in
pop
jnp
mov
aam
sub
push
xlat
nop
mov
xchg
std
das
inc
dec
push
push
pusha
mov
sub
imul
repnz
cwtl
rorb
and
movsb
xchg
fldl
leave
ds
rcrb
popf
mov
mov
out
fwait
mov
or
pop
lret
add
add
loope
std
dec
xchg
pusha
repz
fisubrl
mov
gs
popf
nop
add
mov
adc
inc
sub
fcoml
adcb
mov
faddl
cmp
xor
mov
ljmp
cmp
inc
jp
jle
xlat
stos
insl
je
mov
gs
or
orl
pop
call
cltd
or
in
jbe
sarb
aam
aad
jns
xor
mov
addb
loopne
scas
push
xchg
xor
push
or
lods
out
push
jo
jle
andl
test
xor
popf
ret
fldl
xchg
adc
push
adc
out
stc
ljmp
push
mov
das
loope
mov
aad
jb
sti
push
out
pop
sbb
adcl
lret
sarb
xchg
jns
aaa
pop
mov
fldl
test
pop
push
mov
sub
lods
stos
sub
icebp
mov
subl
pusha
add
dec
loop
scas
lods
ds
arpl
cld
cmp
cltd
cmp
or
push
sbb
or
push
mov
dec
jb
pop
xchg
or
scas
movsl
cmp
cli
push
notb
lcall
dec
ret
jecxz
test
add
inc
dec
nop
inc
xchg
and
sub
shr
jmp
jae
sti
jno
sbb
pop
fxam
mov
add
nop
imul
test
sbb
pop
push
scas
cmp
cmp
or
mov
cmp
and
ret
repz
mov
rcr
mov
testl
shr
jmp
lods
xor
push
mov
test
mov
or
inc
dec
or
add
aaa
out
mov
xchg
lods
adc
jae
push
jnp
jns
and
pushf
pop
cmpsl
or
jmp
add
push
xor
test
test
ss
shlb
cld
mov
test
adc
or
xchg
jle
cmp
sbb
sti
fisubs
test
cs
cmp
fsubrs
xchg
mov
jae
mov
lret
sub
cltd
jne
insb
outsb
mov
mov
imul
mov
into
lock
mov
jmp
bound
cmc
call
out
cmc
dec
and
cli
push
les
lret
xlat
push
mov
xor
push
lret
push
mov
xor
mov
jg
mov
lods
jle
lahf
cmp
iret
lret
out
adc
movb
cmp
xchg
jmp
mov
js
lcall
pop
shl
mov
dec
inc
inc
jmp
xchg
mov
pop
ret
push
leave
push
lods
cmp
lcall
jno
dec
xchg
xchg
push
scas
lock
cli
outsl
mov
adc
pop
fldt
lea
sbb
or
fbld
xchg
lcall
inc
adc
sub
mov
mov
divl
aam
arpl
lahf
sub
jne
fidivs
push
and
sbb
add
mov
jp
cli
loop
mov
sbb
pop
in
push
push
das
mov
les
aas
enter
ss
jnp
mov
dec
mov
mov
movl
loopne
shlb
sbb
clc
mov
mov
sub
ret
and
xchg
in
mov
into
roll
mov
scas
bswap
xchg
sub
sbb
popf
lcall
ljmp
data16
mov
inc
cmpsb
or
into
or
xchg
lea
subl
cmpsb
jle
mov
or
mov
aaa
and
mov
push
pop
test
xor
xchg
clc
cmpsl
rclb
call
js
ja
aam
add
pop
jae
or
jnp
movsl
mov
dec
pop
cwtl
cmpsb
insl
push
xor
aam
xchg
and
mov
loope
push
test
inc
jns
fnsave
cmp
lret
dec
xchg
inc
enter
lods
mov
add
pop
and
push
cmp
rcrb
mov
es
ret
fwait
mov
dec
cltd
add
pop
xchg
mov
mov
cwtl
loope
insl
mov
lods
out
xchg
jmp
sbb
insb
inc
jo
mov
outsb
push
cmp
push
inc
idivb
jae
aas
fsubrl
pop
mov
fwait
sti
sahf
popa
sbb
cmpsb
xor
and
test
pop
stos
adc
loope
inc
lods
cmp
outsb
sbb
and
loope
xlat
sub
xor
sub
mov
pop
imul
imul
popf
pop
and
xor
mov
jo
fcom
push
cmpsb
jns
pop
dec
xchg
pusha
fstpl
pop
jmp
dec
cld
cmp
decl
inc
jge
jmp
pop
arpl
push
mov
cli
sbb
cli
scas
iret
cmpsb
mov
sahf
cmc
neg
mov
ss
leave
adc
ret
rcrb
mov
je
popa
je
repnz
cs
inc
lahf
insb
mov
dec
jns
mov
fnstenv
mov
and
mov
push
pusha
ficompl
sub
xchg
in
push
push
push
add
sub
iret
pop
mov
fs
or
das
jl
ss
subl
xor
sub
movsb
mov
xor
cmp
push
pop
mov
xchg
push
inc
xchg
sbb
push
sbb
cwtl
adc
cmc
fisttpll
fstcw
push
jne
xchg
push
cmc
mov
mov
mov
shrl
add
pushf
vpcmpgtb
pusha
imul
aas
mov
pop
jle
fidivrl
mov
jmp
test
hlt
push
mov
icebp
jg
insl
push
mov
sbb
mov
idivb
pop
data16
sub
fmuls
test
lods
lock
mov
jo
mov
mov
loop
aad
in
lret
shrb
sti
push
sub
adc
sub
and
adc
xlat
fiaddl
push
movsb
movsb
xchg
and
jns
hlt
and
int3
enter
lea
scas
iret
lds
das
mov
sub
inc
push
shr
push
pop
and
data16
push
outsl
dec
xchg
pop
mov
das
test
aaa
ficoms
fisttpll
ret
ds
xor
mov
cli
aas
in
push
xchg
mov
pop
scas
xchg
adc
mov
pop
inc
jg
pop
jl
sbb
xor
fdivrs
xchg
xchg
xor
adc
scas
shr
aas
in
cmc
pop
xchg
dec
lahf
jecxz
hlt
sbb
aas
push
sahf
aas
addr16
inc
jge
jl
cmovbe
sbb
call
fbld
sub
dec
insl
fnstenv
lcall
cmpsl
fst
mov
pop
out
enter
xchg
push
sbb
les
pop
adc
push
repnz
loopne
sub
pcmpgtd
sbb
mov
pop
je
jo
bound
pusha
daa
bound
lahf
fstpt
iret
ljmp
xchg
into
in
in
sbb
pmaxub
jne
or
popa
sbb
sbb
add
add
shl
je
popa
jae
mov
xchg
stos
push
fnstsw
mov
inc
dec
daa
ficomps
dec
out
lahf
or
lods
mov
cmpsb
mov
cmp
add
mov
lret
sub
sub
push
adc
cs
xor
xlat
jmp
test
or
cmp
jne
push
lahf
push
push
add
hlt
mov
popa
cli
ficomps
leave
je
add
add
jbe
fcmovnbe
push
xor
les
xchg
mov
lret
mov
lcall
ss
mov
test
cld
add
lock
ss
aad
mov
jne
adcl
lea
aaa
popa
jnp
push
xchg
xchg
mov
aad
mov
inc
pop
jno
fisubrs
es
popf
adc
popa
xchg
cmp
jp
jo
push
das
inc
pop
push
sbb
adc
mov
inc
pop
inc
mov
jge
popf
dec
data16
lods
dec
aam
inc
adc
pop
sbb
pushf
aad
add
xchg
aad
jno
rcr
loope
dec
cmp
pop
add
pop
pop
push
sbb
inc
int
pop
add
adc
and
cltd
das
in
mov
push
dec
jne
mov
adcl
push
pop
js
cmp
js
daa
test
mov
jo
or
mull
add
jb
ret
xor
mov
in
and
mov
nop
add
sub
xchg
outsb
fadd
in
adc
pop
inc
sub
sub
lahf
and
cli
jmp
addr16
mov
cwtl
mov
in
or
out
iret
mov
and
dec
dec
mov
fdivl
dec
dec
inc
adc
ficoml
loope
ret
inc
arpl
out
test
jl
stos
out
mov
lods
leavew
in
test
pop
add
adc
and
sub
pop
mov
popa
sbb
iret
inc
xor
add
xor
mov
pop
sarb
xchg
shll
mov
and
or
cmp
mov
pop
int
cmp
adc
loope
adc
sbb
mov
in
rcrl
cmp
jp
xchg
inc
lea
pop
call
jno
mov
lods
addr16
lahf
sbb
enter
xor
pop
mov
loope
cmp
xor
push
jo
loop
iret
sbb
jg
mov
hlt
and
lds
stos
jb
mov
in
lcall
test
cltd
sub
add
and
pop
rcll
add
decb
xor
mov
in
mov
cmp
in
std
sbb
insl
movsl
jge
dec
or
aaa
icebp
adc
mov
lods
and
jae
xchg
or
push
push
adcl
xchg
sti
push
xor
mov
test
lds
lods
lret
sub
adc
faddl
mov
stos
inc
pusha
xchg
fists
add
jmp
icebp
jbe
loope
aad
movb
mov
lock
xchg
xchg
insl
and
cmpsl
jg
sbb
arpl
in
addl
add
pop
into
jmp
jle
in
mov
jge
push
mov
dec
xor
mov
adc
cld
jno
mov
in
jo
add
aad
imul
and
enter
sub
fiaddl
std
xchg
repnz
mov
testl
mov
pushf
mov
add
pop
adc
test
jmp
call
bound
mov
cmp
les
mov
add
adc
push
or
inc
sub
jg
ljmp
mov
sbb
dec
jp
pop
jmp
leave
lods
shrb
cld
rol
adc
int3
call
push
int3
jne
ficomps
push
out
jbe
mov
xor
add
int
sub
push
mov
bound
stos
pop
push
test
repz
add
jns
mov
cmp
in
gs
jnp
dec
pop
pop
lcall
mov
push
inc
jb
js
stc
jecxz
inc
cmpsb
repnz
jmp
inc
inc
jmp
repz
outsl
xor
fwait
inc
sbb
lret
xchg
or
mov
inc
insl
push
loopne
dec
jmp
or
fildll
shr
test
in
in
or
adc
leave
mov
out
xor
fadds
js
add
push
out
mov
dec
dec
push
test
or
or
adcl
push
sub
lahf
pop
scas
ret
xchg
sbb
mov
jnp
sti
pop
and
sub
lret
jmp
jns
xchg
mov
push
push
adc
or
or
mov
into
xlat
adc
jmp
test
std
push
in
out
icebp
push
jns
das
xchg
inc
movsb
test
adc
xchg
pop
adc
je
push
cmp
sbb
mov
mov
in
or
lds
and
int3
lods
outsb
cmc
lock
orl
test
sub
inc
pop
push
hlt
shl
xchg
aas
inc
dec
in
rolb
fistpl
bound
push
and
pop
add
and
lret
pop
adc
mov
iret
inc
pop
call
pop
dec
or
js
push
hlt
adc
inc
aas
sub
push
addl
pop
mov
cmp
enter
orl
push
or
dec
mov
cltd
cmc
into
out
mov
pop
fnsave
sbb
outsb
and
imul
lods
out
adc
mov
mov
pop
add
iret
inc
lea
pop
js
cmc
pop
ficoml
ret
lds
mov
push
jg
dec
fisubrl
mov
or
ret
pop
cmp
stc
sub
in
push
pop
fnstsw
and
mov
sahf
in
push
addr16
and
imul
adcb
test
pop
adc
sub
xor
jbe
xchg
les
jne
es
stc
pop
and
jbe
jno
lods
insl
test
imul
cmp
mov
push
jmp
je
cli
cmpsb
testb
xor
lods
adcb
add
xchg
jecxz
pop
or
addr16
adc
divb
jno
ljmp
cmp
adc
dec
lretw
xchg
pop
jo
jg
rorl
jl
pusha
push
fsubr
adc
jge
sbb
jbe
jne
es
mov
jbe
sub
adc
or
pop
movb
fstpt
xchg
xor
ds
mov
push
popf
mov
dec
push
inc
cmc
scas
xor
push
inc
mov
or
sti
adc
pop
pop
cli
sahf
and
enter
pop
inc
dec
jns
xchg
lret
shlb
aad
cs
and
dec
rep
inc
mov
int
fistpl
mov
in
arpl
das
fldenv
shl
lahf
orb
sbb
lret
jne
inc
inc
dec
jbe
pop
jnp
test
insl
test
or
popf
js
shrl
orb
inc
fiaddl
cmp
jge
push
cmpsb
fcompl
pop
and
xchg
pop
es
cmp
push
sbb
ret
addr16
pop
dec
mov
or
mov
mov
out
aad
sbb
sub
add
mov
mov
stos
cmpsl
pop
shrb
es
movsl
cmpsb
lret
sbbl
mull
jae,pn
cmp
inc
and
inc
int3
inc
int
lret
xchg
sar
pop
lret
or
scas
pop
pop
push
jle
mov
jp
jae
sub
add
mov
repz
mov
je
or
pushf
fsubl
rcrb
pop
mov
adc
movsl
rcr
sbb
not
adc
popa
push
cs
dec
add
jle
aas
aam
rcrb
leave
fldl
imul
fcomps
lahf
pop
mov
movsl
gs
xor
mov
xchg
in
mov
cwtl
jne
mov
fucom
push
mov
inc
gs
jae
idivb
push
dec
cld
rol
cmp
mov
dec
lods
out
jecxz
out
sarl
xor
data16
cmp
stos
push
push
push
std
push
pop
or
int3
pop
push
ljmp
insb
dec
xor
sbb
mov
icebp
pop
mov
cwtl
and
ljmp
hlt
mov
pusha
sub
pop
arpl
xchg
adc
jp
push
fcmove
insl
adc
shll
pop
nop
bound
call
xchg
mov
dec
push
sarb
neg
jg
adc
jl
pushf
movsb
mov
lds
jmp
lods
cmp
push
mov
movb
cmpl
pop
pop
add
cmp
shrd
add
loopne
fisubl
mulb
popa
cs
dec
pop
lods
stos
xchg
pop
lahf
push
push
mov
sti
aaa
push
loope
push
push
fsqrt
pop
xorl
outsb
xchg
mov
mov
jle
inc
pop
mov
scas
jg
scas
mov
js
insl
xchg
or
repz
mov
int3
int3
inc
cmp
loope
mov
mov
out
inc
and
js
xorl
cmc
cs
loop
mov
movsb
xor
mov
je
test
add
icebp
xor
adc
dec
cmp
mov
push
int3
xchg
addr16
jno
push
and
pop
fwait
popa
loope
nop
dec
ret
mov
shrl
lock
cwtl
mov
test
bound
push
fmuls
pop
push
shll
ficoml
jne
and
movsl
scas
push
mov
jp
dec
sahf
cltd
aaa
fnsave
and
jne
mov
aad
mov
nop
sub
in
aad
mov
push
repz
dec
ret
xlat
inc
jb
filds
inc
sbb
add
cmp
mov
lahf
dec
mov
jns
adc
pop
fdivrs
addr16
sbb
cmp
add
push
inc
push
imul
iret
xlat
cmpsb
orb
jmp
sbb
jle
mov
push
xchg
fs
xchg
inc
cmpsb
popa
cmpl
mov
push
xor
cmp
mov
arpl
icebp
pop
imul
aad
lea
push
rclb
xchg
test
jg
fwait
or
test
inc
add
adc
add
cmp
adc
shll
shr
lret
or
pop
test
mov
jle
test
jmp
jo
adc
mov
mov
adc
sbb
fstps
arpl
cmp
pop
sarl
scas
ds
sti
dec
fsub
cmp
pusha
ret
cmp
cltd
pop
in
jnp
fistps
jno
das
or
and
dec
aam
loop
fisttpll
dec
fadds
jmp
inc
leave
outsb
sahf
jmp
cmp
mov
orl
stc
rcrl
test
adc
mov
xor
adc
mov
jnp
shrb
shll
les
ljmp
aad
mov
sub
or
cmc
decl
push
addr16
pop
out
fwait
xor
pushf
and
in
xchg
inc
sub
std
push
loop
push
xchg
fcmovnbe
push
xchg
lret
dec
sbb
andb
js
sbb
jl
inc
rolb
scas
adc
aas
pop
lods
lock
jae
add
sub
loop
mov
inc
shrb
pop
xchg
adc
repnz
cwtl
mov
addr16
aad
push
jge
insl
ljmp
pop
sub
or
outsl
in
scas
dec
jmp
loopne
xor
stos
mov
cmpsb
cmp
mov
loope
lret
jle
xor
cli
dec
mov
rolb
adc
inc
push
add
or
ret
scas
inc
adc
mov
cmovae
cli
mov
data16
jl
repz
dec
lea
or
ret
cmp
mov
pop
or
push
hlt
dec
dec
je
cltd
push
inc
pop
or
xchg
pop
jg
dec
loope
movl
lock
push
lock
pop
data16
rcr
xlat
aas
mov
insb
adc
notb
jg
or
leave
sahf
jmp
shlb
adc
or
sbb
push
add
dec
jle
mov
ss
movsl
cli
mov
mov
js
nop
pop
scas
push
scas
mov
pop
push
je
jo
cs
xchg
or
sahf
cmp
stc
push
in
inc
or
sbb
and
repz
lcall
repz
jg
stos
loopne
mov
loopne
pop
cmp
testb
xchg
or
dec
pop
xchg
adc
nop
pop
xor
into
pushf
jno
popf
mov
mov
xchg
shll
orb
in
das
inc
ja
dec
or
cltd
jmp
mov
aaa
xchg
push
movsl
jo
sbb
inc
cmpsl
inc
icebp
inc
pop
in
test
in
xchg
js
jg
jecxz
subl
xchg
pop
stos
xor
icebp
out
mov
repnz
hlt
rcll
stc
mov
xchg
notb
xor
nop
ss
testl
mov
or
pop
arpl
in
imul
add
leave
dec
cli
push
addr16
jnp
xchg
cmpl
dec
movsb
add
inc
sbb
ss
fidivrs
inc
xchg
xor
mov
mov
fwait
jb
out
nop
mov
sub
gs
sahf
dec
and
mov
inc
xor
push
rcrl
ja
es
xlat
dec
push
das
sbb
add
out
icebp
lods
js
push
pusha
decb
cmp
jnp
pop
adc
xchg
clc
xor
aad
lret
mov
push
cwtl
add
pop
mov
mov
xchg
addr16
inc
ret
in
aad
mov
pop
test
push
adc
fwait
in
imul
adc
scas
mov
dec
push
arpl
mov
das
pop
fmul
mov
in
adc
shlb
mov
mov
sbb
rcr
stc
iret
xor
mov
lods
fsubrs
push
mov
mov
inc
mov
inc
jecxz
in
gs
xchg
fpatan
stos
cmp
ret
add
dec
pop
inc
loop
jb
fdivs
shlb
cmpsl
int3
lret
jge
in
gs
sti
pop
jae
push
cmpsb
inc
add
insl
shl
push
mov
rol
mov
test
movsb
inc
leave
lods
mov
xor
idiv
insl
fldl
inc
out
adc
jmp
xor
xor
sahf
addr16
int3
adc
push
movsb
sbbb
inc
mov
inc
xor
in
imul
in
scas
mov
enter
mov
push
inc
pop
or
out
dec
push
adc
insl
popa
adc
ljmp
into
push
adc
movsl
clc
decl
sub
imul
xorb
inc
mov
push
sub
pop
sbbl
xchg
mov
iret
je
push
hlt
ljmp
pop
xchg
pushf
in
testl
mov
loop
pop
mov
js
inc
pop
in
fxch
add
or
lds
insl
fs
mov
dec
loopne
add
jmp
push
jb
shl
xor
cmp
pop
mov
loope
or
adc
fwait
mov
xor
pusha
inc
pop
xchg
addl
scas
movsb
jo
adc
in
or
stos
jo
mov
mov
les
jg
scas
je
dec
xor
lahf
loope
inc
and
push
fldt
lcall
data16
sbb
aas
and
adcb
aam
int3
and
pop
mov
rclb
cmp
lock
adc
sub
lahf
xchg
aas
mov
mov
xchg
lahf
enter
ds
repnz
mov
cmp
cli
and
bound
rcl
xchg
add
dec
pop
fiadds
mov
push
add
and
sub
jecxz
push
cmc
push
lcall
lods
xchg
cwtl
xchg
mov
mov
jmp
adc
push
lahf
xchg
shr
sbbl
cmc
test
jle
mov
mov
addl
repnz
loopew
jp
dec
inc
out
pop
sahf
imull
addr16
mov
mov
add
imul
or
fcmovb
and
dec
pop
jno
inc
outsl
pop
pop
das
mov
dec
and
stos
bound
cld
cwtl
xchg
lods
mov
xor
sti
lods
push
ja
scas
fsubl
pushf
mov
into
jno
decb
mov
inc
jmp
pushf
std
leave
mov
popf
fwait
je
add
pop
dec
pusha
push
in
out
mov
jecxz
jo
sub
dec
pop
and
dec
adc
es
cld
xrelease
mov
xchg
mov
icebp
mov
cmp
sub
test
js
jmp
xor
fdiv
in
cmc
mov
jp
in
dec
pop
rcl
test
subb
mov
mov
mov
cmpsl
pop
in
push
cmp
sbb
jecxz
in
test
adc
les
jbe
sbb
cmp
in
hlt
arpl
mov
lock
inc
sbb
mov
jmp
xchg
hlt
fdivrl
xchg
inc
add
fcmovb
test
movsb
xchg
divl
cwtl
inc
movsb
add
loopne
pop
enter
rcll
addl
fisttpl
leave
mov
mov
lods
pop
push
inc
dec
les
out
xor
xchg
xchg
enter
cmc
and
in
fcmovnu
xor
mov
cmpsl
mov
ja
sbb
out
iret
in
push
loopne
ficompl
clc
jmp
push
mov
mov
call
arpl
pop
es
sbb
dec
cmp
jp
xor
fwait
or
adc
lds
sub
add
mov
lcall
push
sub
test
mov
js
cmp
and
cmp
mov
addr16
aas
jae
pushl
push
jg
lcall
mov
or
scas
adc
xchg
clc
imul
insb
xor
and
xchg
adc
pop
fwait
push
add
stos
push
mov
xor
loop
fwait
mov
mov
mov
or
inc
repnz
add
inc
insl
test
mov
mov
mov
ret
cwtl
and
enter
fisubrs
jge
mov
arpl
mov
or
cmpb
sarb
call
popf
dec
ret
sbb
imul
xchg
add
jle
mov
insb
and
rcr
sbb
inc
lods
lcall
xchg
add
cltd
jle
in
inc
dec
xchg
mov
or
test
xchg
and
dec
jno
xor
scas
cltd
imul
pop
stos
xor
mov
popf
repnz
jo
lcall
cmc
fimull
call
dec
jnp
pop
xchg
xchg
lsl
or
and
cmp
dec
aaa
lock
icebp
cmp
and
cmp
adc
lods
sahf
aad
add
hlt
test
jae
int
xor
popa
ret
test
cld
adc
push
and
pop
rol
mov
or
push
mov
mov
and
mov
inc
pop
cmp
rorb
mov
fdivrp
stos
and
jg
sub
ret
push
push
aam
imul
inc
mov
sbb
fldenv
sub
push
xchg
xchg
daa
imul
pop
mov
imul
clc
add
mov
pop
inc
outsb
mov
jno
out
pop
outsb
aam
mov
xor
sbb
and
mov
pop
ss
loopne
imul
push
xchg
jb
mov
jmp
or
cmp
and
je
sbb
jns
decl
pop
nop
cld
and
jns
das
pop
mov
mov
adc
xor
cmp
adcl
sub
out
add
sub
pop
jmp
and
cmp
inc
int3
mov
aam
push
fsubrl
mov
lock
pop
lcall
dec
test
jmp
adc
lret
mov
inc
mov
jns
pop
sbb
fwait
imul
mov
test
mov
cmp
mov
inc
sbb
cmp
dec
aad
std
movsl
sub
jge
retw
pop
in
mov
push
dec
xchg
jmp
lock
insb
jns
mov
imul
movsb
xchg
sub
and
cli
add
enter
pop
outsl
push
enter
xchg
xchg
cli
and
lahf
ret
imul
loop
cmp
icebp
inc
xor
shr
mov
cmp
pop
push
dec
xor
mov
sbb
xor
pop
insb
jle
and
lods
mov
je
cmp
lahf
pop
iret
das
test
ret
push
fidivrl
mov
xor
fstpl
popa
or
xor
jecxz
mov
add
and
stos
popa
dec
aad
pop
cmp
jns
xchg
dec
sub
test
out
lret
add
inc
or
sbbl
mov
xchg
push
push
cmc
cld
dec
ja
dec
add
push
sbb
bnd
push
in
and
clc
pushf
xorl
jne
push
sbb
icebp
jl
je
scas
or
xchg
lret
fists
and
lret
cltd
es
scas
scas
sbb
or
sahf
mov
lcall
jmp
mov
dec
push
cmpsb
mov
pop
xor
hlt
mov
sti
add
mov
insl
cmp
int
out
nop
push
or
cmp
ja
jns
cmp
jne
push
stos
fwait
mov
mov
movsb
nop
xor
adc
in
add
neg
test
js
leave
dec
repnz
jns
push
hlt
mov
fmuls
les
insb
jg,pn
xchg
ret
imul
pop
pop
add
test
push
in
jg
push
xchg
or
and
mov
aaa
push
rcrb
and
xchg
test
cli
int
jle
push
mov
js
cmc
pushfw
and
mov
jge
call
nop
stc
outsl
sbb
mov
sub
xchg
popf
xchg
testl
push
stos
aad
shl
jbe
test
xlat
xor
loopne
stos
jbe
adc
xor
mov
mov
ret
pop
or
gs
fistpl
mov
add
dec
mov
hlt
push
in
push
leave
push
pop
mov
push
ss
out
loop
mov
das
sbb
stos
mov
in
cltd
cltd
sbb
inc
sbb
xor
fsub
pop
jle
loopne
movsb
cmp
cld
lds
mov
pop
add
scas
insb
in
adc
stos
lea
daa
jmp
or
inc
sub
sub
je
mov
mov
clc
push
addr16
lock
xor
repz
inc
cmp
insb
mov
dec
adc
and
aam
enter
jns
xchg
popf
imul
xchg
les
fwait
leave
xorb
roll
addr16
scas
adc
arpl
inc
pop
cltd
sbb
out
mov
repz
repz
fldl
jb
divl
pop
mov
or
je
xor
les
adc
out
call
adc
xchg
in
xchg
shll
clc
push
subl
arpl
mov
roll
lret
mov
push
imul
mov
icebp
xlat
adc
mov
inc
test
adc
push
pushf
cs
loopne
jne
xchg
sub
clc
mov
pop
repnz
add
pop
scas
xlat
fisttpll
loopne
enter
andb
stos
rorb
and
or
adc
fwait
xor
add
fsubs
cltd
dec
inc
mov
pusha
cmc
or
pusha
xor
add
cmp
jns
mov
push
pop
outsl
add
scas
jl,pn
ja
std
pusha
enter
repnz
mov
dec
loope
inc
scas
cli
and
dec
and
cmp
fstps
data16
push
push
in
xor
repnz
rcl
lret
idiv
push
xor
push
push
adc
mov
inc
fwait
lea
inc
push
jg
xor
dec
in
lret
push
mov
xchg
push
ds
lods
xchg
xor
mov
cmp
nop
add
and
imul
mov
pop
imul
sub
xor
cwtl
cmc
jns
test
pusha
mov
aam
repz
les
lock
cmp
mov
mov
jl
fsubr
jae
aam
dec
sahf
cltd
cmpb
add
and
mov
xchg
push
gs
jbe
dec
nop
add
stos
sbb
jmp
dec
or
out
outsl
repz
pop
mov
xchg
outsl
dec
filds
in
hlt
push
sub
mov
fistpl
adc
outsl
lods
jle
sub
xchg
push
mov
mov
leave
xchg
out
fucomip
push
xchg
imulb
lcall
popf
push
icebp
mov
mov
and
xchg
and
in
xor
jne
sub
or
pop
add
imulb
pop
ds
jg
daa
inc
push
movsb
sbb
and
shrb
jbe
mov
push
sbb
imul
in
imul
sbb
cs
lock
cmp
sub
mov
xor
addb
cmp
and
scas
mov
icebp
jp
pop
inc
ret
jne
xor
aas
les
inc
js
mov
push
das
xor
aas
sarb
pushf
cmp
lret
cmp
mov
pop
ljmp
test
outsl
mov
ja
ss
cli
ja
out
push
inc
lahf
test
fbld
jmp
lods
std
clc
popf
imul
fisubrs
loop
aad
adc
loop
and
sti
aas
lret
dec
cmpsl
jbe
sbb
js
shrb
and
adc
push
movups
scas
ljmp
dec
fidivrs
jbe
enter
adc
std
sbb
inc
popf
loop
sbb
mov
push
imul
sub
dec
loopne
out
notl
cmpsb
or
xor
je
jecxz
pop
pop
nop
dec
test
jb
in
mov
mov
cmp
imul
mov
stc
scas
add
ret
cs
and
pop
ja
iret
mov
dec
std
aad
mov
push
movsl
sub
data16
xchg
sahf
outsb
mov
adc
shll
mov
add
shrb
cld
or
mov
stc
sbb
mov
cld
call
xor
sub
sarb
adc
call
lods
lret
mul
mov
outsl
or
cmpl
fadd
sbb
ds
lock
repz
pop
lods
mov
int
fbstp
in
push
cltd
mov
neg
test
fs
data16
jbe
jp
aam
fbld
or
test
add
mov
jl
and
cld
mov
idiv
sub
mov
aam
fsubs
mov
push
repnz
xor
je
pushf
and
sarl
lock
into
xchg
scas
push
and
lahf
cmc
and
pop
das
jg
add
pop
fstpt
sub
mov
ficomps
in
xor
push
out
lods
xchg
jno
cltd
lcall
cmp
loope
xchg
clc
xchg
shl
sub
mov
mov
icebp
sahf
mov
repz
shll
cmp
pop
mov
adc
mov
outsb
std
xchg
nop
inc
mov
pop
push
inc
sub
pushf
and
repz
call
fsubs
jg
clc
mov
loop
cmp
or
stos
ljmp
adc
sub
in
cs
cltd
lock
add
scas
pop
mov
add
js
int
xor
and
fistps
push
arpl
movsb
sarb
lcall
jg
mov
stos
mov
adc
mov
jb
jecxz
popf
aam
add
push
xchg
cmpsl
bound
mov
push
or
cmp
mov
jl
stos
shr
ret
push
sbb
jae
cmp
jo
lock
sub
sbb
mov
inc
sub
cmc
push
sbbl
inc
mov
or
stos
test
push
xchg
aas
mov
add
pop
xor
insl
outsl
outsb
and
in
bound
mov
shl
sar
xchg
pop
xor
xlat
xchg
ret
xchg
jge
rolb
mov
dec
iret
cmp
xchg
cmp
lds
in
lcall
push
mul
xchg
incl
rcl
jmp
add
lcall
inc
out
repnz
dec
lods
add
in
push
out
push
jmp
mov
int
mov
stos
jb
lcall
and
loope
mov
inc
repz
xchg
or
cmpsb
xor
dec
sub
xchg
and
loopne
adc
mov
addl
dec
push
sub
mov
cmp
inc
adc
xor
test
inc
jg
and
popa
repz
lock
mov
fisttpl
cmpsb
mov
push
mov
push
mov
jmp
lahf
sbb
jg
mov
jmp
dec
outsb
repz
xlat
inc
xor
in
jl
dec
jle
rcr
xchg
fwait
loopne
xchg
or
mov
cli
in
inc
sub
jmp
test
mov
mov
shl
fsubr
flds
hlt
push
push
stos
jl
jo
adc
sub
outsl
or
dec
xor
push
aam
pop
cmp
push
push
inc
push
jmp
std
in
add
push
jns
into
cli
jae
leave
fidivl
inc
outsb
dec
ror
sub
pop
daa
push
cld
xchg
add
pop
rorb
xor
or
stc
std
test
mov
sub
cmp
sub
add
and
fnsave
xchg
mov
ljmp
mov
pop
clc
xor
das
sbb
mov
mov
mov
pop
jb
enter
or
shll
js
mov
xchg
push
xlat
mov
inc
adc
cli
pop
sub
movsl
cmpsl
mov
add
cmp
flds
mov
push
out
int
int
sub
jbe
or
in
faddl
sbb
sbb
push
mov
mov
je
imul
or
je
add
cmc
push
push
mov
sbb
push
jp
outsl
mul
jl
stos
mov
jmp
fldt
repz
mov
je
adc
test
pop
mull
push
ret
adc
cmp
cmc
pop
mov
popf
add
mov
mov
rcrb
aad
int
mov
call
fs
sub
mov
jp
mov
shrl
xchg
clc
mov
decb
out
xor
mov
aam
rcrb
jns
push
push
inc
mov
inc
xorb
psubq
ds
inc
mov
mov
sub
jb
push
xor
rcrb
mov
stc
std
push
ja
push
fidivs
cli
imul
insb
sub
ret
outsb
fstps
lods
in
mov
lret
dec
out
scas
jb
arpl
sbb
push
xor
pop
inc
cmpsb
popa
mov
aas
pop
in
mov
mov
daa
push
ds
push
mov
push
cmp
mov
loop
xor
jae
or
ds
dec
sti
xor
xchg
sbb
loop
sub
popf
cmpsb
in
push
mov
ret
push
popf
push
mov
ds
jne
insl
adc
push
or
hlt
in
mov
dec
sbb
aas
and
jnp
into
cmp
pop
fmuls
pop
adcb
add
lcall
cmpsb
xchg
add
jae
lret
icebp
enter
fnstcw
cld
in
xchg
inc
cmp
test
jae
jmp
movsb
loopne
out
jge
insl
sbb
stc
out
cmp
cli
aad
cwtl
repnz
cltd
cmpsb
int
sahf
or
jge
pop
repz
sbb
inc
es
jp
or
aad
push
movsb
stos
bound
dec
jns
pop
shll
xchg
add
sbb
mov
mov
icebp
fwait
xor
push
dec
jmp
iret
in
pop
jl
xchg
jp
mov
pushf
outsl
push
in
xor
scas
cmp
ficoms
jb
pop
lahf
or
clc
cmc
shrl
into
push
dec
inc
pop
xor
sub
adc
hlt
shll
mov
mov
add
imul
add
or
cltd
data16
or
pop
imul
sbb
xchg
lea
jecxz
cltd
xchg
negl
pop
out
jns
mov
mov
jecxz
repz
dec
mov
fbstp
ret
pop
test
and
mov
lret
mov
push
rcrl
xor
and
xchg
xor
xchg
test
ss
pop
xchg
add
aaa
aad
inc
fstl
fxch
jle
mov
stos
push
in
fists
loope
xor
lds
int3
mov
xchg
les
mov
arpl
sti
faddp
add
dec
inc
xchg
stos
jg
lret
insl
add
rcl
aad
iret
and
in
inc
stos
mov
pusha
arpl
scas
ss
jp
or
in
repz
lret
aaa
mov
pop
and
pop
xchg
fmulp
dec
add
lods
jo
sub
dec
repz
frstor
rep
out
push
fmuls
jmp
insl
sbb
cmovp
nop
mov
sti
pop
aaa
push
add
stc
fidivl
decb
push
aam
add
add
rcl
stos
xchg
cmp
sub
dec
or
jnp
add
and
outsl
sbb
mov
lahf
add
dec
jnp
enter
or
push
std
adc
cs
fdivrs
pop
inc
aam
mov
mov
loopne
add
test
iret
sub
sbb
sub
inc
lock
mov
sub
leave
in
jmp
and
cmpsb
or
jmp
mov
insl
adc
push
popf
sub
sbb
dec
add
mov
xchg
or
pop
mov
mov
int3
push
sarb
or
subl
enter
sbb
in
jbe
cmp
cli
mov
push
jb
lahf
test
xor
mov
add
sub
repnz
jg
ja
push
test
pop
fisubrl
js
and
les
sbb
fidivs
stos
sbb
idivl
test
test
test
or
push
pop
fisttpl
and
lret
cmp
xor
pusha
xchg
pop
lds
dec
cmp
ret
xchg
jo
in
sbb
cmpsl
outsb
cmpsb
not
in
pop
cli
inc
js
loopne
or
fmull
jbe
mov
aaa
std
cmp
and
inc
iret
jne
adc
sub
sbb
or
adcb
pop
lret
cltd
and
enter
push
dec
sub
es
int3
insl
cmpsb
mov
inc
add
add
adc
lea
into
mov
cmp
or
sbb
or
xorl
btr
jmp
pop
loopne
dec
mov
push
jno
adc
xchg
pop
popa
mov
cmp
ja
sbb
out
cmpsb
push
pop
mov
idivl
fdivrp
mov
lods
int3
ja
pop
jmp
aas
mov
shl
out
pop
push
je
mov
and
xchg
aaa
imul
sub
add
jg
imul
mov
ret
js
popa
cld
aam
lock
inc
sbb
xchg
inc
lret
sbb
and
adc
scas
daa
imul
sub
jp
loopne
pop
out
inc
ror
push
xchg
je
cwtl
mov
psubusw
mov
inc
mov
dec
out
mov
pusha
pop
ljmp
inc
scas
rcrl
and
pop
je
int
inc
es
mov
les
icebp
mov
xor
gs
mov
fnstcw
mov
in
mov
cmp
jns
inc
xchg
es
cmp
and
mov
push
mov
and
lahf
and
enter
mov
push
rorl
sub
stos
ljmp
aaa
cmpsb
sbb
sbb
pop
filds
incl
test
cmp
mov
adc
cmpsl
ja
ss
cmp
lcall
inc
push
mov
subb
mov
jb
pusha
push
dec
dec
jae
in
fdivs
mov
xchg
std
int
enter
pop
mov
scas
push
rclb
adc
or
or
loopne
lahf
movups
xchg
or
adc
xor
sbb
dec
test
mov
repnz
insl
push
pop
inc
rcrl
pop
loopne
sbb
inc
dec
mov
pop
movsb
mov
sbb
cmp
punpckldq
test
pop
xor
adcl
adc
loope
nop
imull
sbb
xlat
loopne
adc
xchg
or
jne
mov
fdivrl
cmp
sub
push
mov
imul
jl
aas
inc
outsb
sbb
inc
xor
jne
mov
icebp
aad
mov
in
rclb
add
mov
mov
int3
pop
mov
mov
mov
xchg
sbb
cld
push
test
pop
and
fcompl
sbb
and
xlat
mov
xor
xchg
mov
jecxz
pop
addr16
xor
xchg
lods
pop
loop
pop
test
push
xchg
adc
fwait
subb
mov
adc
dec
dec
imul
data16
insl
es
das
js
cmp
mov
add
and
lods
fcoms
out
dec
dec
xor
or
divl
jle
jbe
xchg
and
fucomi
cmp
in
xchg
mov
jecxz
cmc
aam
xor
xor
mov
cmp
addb
cld
sub
xchg
mov
mov
movl
lcall
sub
call
pop
adc
sahf
movsl
xlat
rdtsc
hlt
xchg
sbb
outsl
je
cmp
and
in
iret
dec
dec
jo
outsl
aaa
mov
jo
popf
push
sahf
lds
dec
insl
jo
shlb
cmpsl
fisubrl
jbe
orb
mov
pop
dec
or
imull
in
mov
adc
jae
push
js
fisttps
icebp
xor
mov
mov
sub
fwait
scas
mov
test
sub
pop
jne
or
pop
jg
fisubrl
xlat
mov
dec
cmp
xor
mov
loope
fwait
inc
dec
out
or
sub
daa
lods
lahf
test
and
pop
test
xchg
push
push
pop
cmp
pop
out
imul
test
mov
inc
dec
push
loop
dec
lods
and
mov
adc
adc
xor
sbb
dec
sub
mov
pushaw
fldt
rcrl
stos
add
pop
xor
mov
add
lods
les
sbbb
push
stos
sti
leave
dec
pop
or
into
dec
inc
sbb
dec
push
mov
and
pop
into
mov
lds
icebp
ret
ret
cmpsb
cs
jge
divb
inc
fcoml
inc
cmp
clc
mov
loope
inc
insb
mov
jg
mov
outsl
pop
outsb
das
jnp
orb
shlb
cmp
mov
jae
js
pop
sub
xchg
mov
shrl
shl
sub
or
popf
xchg
popf
test
mov
dec
pop
pop
push
inc
sub
nop
loopne
call
inc
pop
and
loop
mov
mov
mov
test
fsubs
addl
in
lea
mov
packuswb
jmp
and
xor
dec
cmovno
aas
fdivs
xlat
shrb
cmpsb
rcrl
pop
lahf
push
inc
fldenv
sti
push
inc
lods
mov
mov
lret
and
jmp
add
ja
sub
js
xor
jecxz
dec
out
mov
xchg
xor
mov
jnp
pop
sbb
xchg
rol
jp
fdivl
test
mov
push
aam
mov
call
dec
das
jmp
pop
ret
fadds
mov
push
fmulp
call
mov
mov
repz
jno
mov
jo
sub
dec
lds
sub
scas
push
or
movsl
dec
iret
int3
inc
fidivrl
pop
cmp
inc
cmp
add
adc
and
shl
add
scas
mov
pop
mov
xor
or
repnz
ror
into
mov
loope
add
cmp
out
mov
ljmp
rcrb
pop
pop
cmp
jae
xchg
and
add
ljmp
jo
pop
dec
push
cli
xor
mov
sub
out
pop
pop
xchg
dec
out
adc
cmp
int
imul
sbb
popf
flds
gs
sbb
cmp
hlt
mov
testb
pop
lahf
pop
sbb
lahf
rep
jmp
push
and
imul
filds
test
mov
push
xchg
test
divl
sub
jb
jle
in
mov
add
sbb
xor
in
ds
lcall
loope
mov
dec
or
outsb
test
loopne
mov
jl
or
mov
fs
idivb
adc
jmp
out
lods
orb
xchg
js
fisttpll
jns
mov
sbb
int
sub
test
rcl
pusha
cmpsb
and
xor
out
out
mov
ss
ja
push
fdiv
and
dec
push
cltd
mov
jmp
jno
out
repz
jp
imul
inc
inc
maxps
xchg
add
mov
jg
mov
repz
ja
jp
pop
dec
lret
rorb
imul
data16
cmpb
cmp
add
mov
xor
das
mov
add
loope
jno
xchg
xor
xchg
shl
jmp
call
decb
cwtl
jns
into
xchg
inc
push
jg
call
fisubrl
ds
bnd
pop
mov
inc
jnp
push
jl
into
lods
pusha
dec
mov
mov
pop
mov
pop
xchg
cmpb
icebp
lahf
scas
adc
jno
ret
push
push
ds
jne
fwait
xor
call
mov
sbb
leave
xchg
imul
push
addr16
movsl
adc
daa
roll
insb
jae
sbb
adc
and
test
push
and
push
stos
lds
js
outsl
mov
loope
js
fwait
std
pop
jno
mov
lret
clc
arpl
fs
mov
bound
jmp
fidivrl
xor
imul
repz
dec
dec
cs
push
lret
push
not
frstor
fnstsw
pop
adc
dec
dec
je
notb
jmp
cmpsl
adc
imul
mov
ret
jne
dec
adc
pop
enter
inc
inc
dec
lret
sbb
clc
mov
inc
mov
iret
sbb
mov
in
js
xchg
mov
mov
jo
cmp
jecxz
cmp
cmp
adc
loop
push
imull
lea
mov
sub
xchg
in
mov
mov
push
dec
push
je
jecxz
dec
pushf
rcrb
loope
faddl
incb
daa
popf
xchg
pushf
jp
sbb
cmp
pop
pop
cmp
test
cmp
imul
mov
dec
sub
fldl
adc
repnz
dec
mov
ds
repz
dec
jecxz
dec
lcall
inc
daa
fistpll
das
ss
dec
imul
cltd
and
jge
cmp
into
push
xor
push
cmp
push
and
aad
sbb
iret
ja
popa
cmp
scas
mov
add
jo
inc
les
mov
pop
xor
xchg
cmp
mov
or
mov
push
bound
dec
jno
fstpt
movb
add
adc
lods
test
sbb
scas
int3
stos
jb
pusha
or
nop
or
cltd
push
pop
and
aam
mov
dec
sub
jecxz
dec
in
mov
out
loopne
mov
test
push
jo
add
xchg
cmpsl
loopne
add
frstor
and
pop
or
jo
push
push
inc
and
pop
pop
pop
fldcw
xor
xor
rolb
rcrb
cli
xor
cmp
es
dec
add
xor
mov
iret
insb
dec
sub
lea
lret
push
fldenv
adc
mov
loop
and
mov
inc
pusha
shll
push
adc
out
outsl
push
fidivrs
outsb
xlat
sarb
cmp
les
icebp
filds
lods
int
mov
out
orb
sar
test
mov
jmp
add
lret
mov
inc
in
dec
xor
cmp
pushf
shlb
push
nopl
lea
subl
mov
adc
pcmpeqw
in
push
pop
dec
pop
outsb
lods
xchg
cmp
popa
jbe
imul
push
cli
fwait
mov
push
aad
sahf
push
mov
sarl
dec
lock
jmp
sub
dec
xor
aaa
pop
mov
movsl
iret
xchg
mov
sub
xchg
stos
cld
stos
cmp
push
inc
xorl
push
sti
loopne
mov
popa
mov
int3
rol
ds
and
addr16
das
test
in
incl
aas
mov
int
mov
cmp
cltd
sbbb
out
rcrb
push
adc
push
push
pushf
ds
jbe
lret
incl
ss
les
incl
inc
lea
into
outsb
repnz
ja
inc
mov
pop
loopne
enter
dec
push
std
dec
xchg
fsubs
push
test
enter
arpl
dec
jecxz
mov
aas
mov
icebp
pop
adc
adc
pop
hlt
jnp
push
mov
push
cmp
movsl
push
mov
ljmp
fsub
clc
push
mov
inc
cltd
adc
push
sub
daa
shrb
jbe
sar
dec
dec
sbb
arpl
cmp
fcoms
popf
lods
mov
xor
stos
lret
repnz
cli
lock
rcrl
add
inc
fcomps
xchg
lock
arpl
addr16
pop
cwtl
aaa
dec
push
cmp
mov
outsl
xor
mov
das
mov
pop
test
dec
dec
cmp
push
adc
ds
push
loop
mov
cmp
or
lds
mov
repz
xchg
jae
mov
push
pop
adc
sarb
mov
and
shlb
sub
insl
jp,pt
pop
flds
push
adc
cmp
adc
mov
divb
xchg
addr16
fnclex
outsb
xchg
out
pop
adc
push
adc
loop
repnz
loope
pop
jg
jle
outsl
stos
outsl
mov
imul
push
add
ret
and
mov
push
idivb
movsb
jg
aam
lret
pushf
dec
icebp
inc
jp
jecxz
shlb
mov
mov
shlb
push
xchg
aam
lods
push
in
mov
mov
push
jbe
in
ds
mov
enter
repnz
lcall
loop
xchg
mov
adc
jg
push
dec
out
sbb
push
cli
mov
sbb
faddl
sbb
cmp
out
pop
cmpsl
vsqrtss
sub
pop
xchg
and
xchg
xchg
inc
subl
lcall
adc
add
hlt
das
fimull
mov
sub
dec
lea
leave
out
mov
lret
mov
push
addr16
push
or
bound
je,pn
shlb
jae
addr16
stos
and
or
mov
shrl
pop
push
les
test
mov
push
scas
mov
xchg
cmp
sbb
xchg
xor
addl
je
dec
fmuls
xchg
sti
push
in
mov
cli
push
je
jnp
cmp
icebp
jmp
aad
xchg
cmp
fisubrl
nop
popf
aam
and
repz
sbb
add
cmp
int3
cmpsb
jne
mov
data16
cmp
call
xchg
sub
out
sub
pop
icebp
mov
loopne
jecxz
arpl
xchg
ja
jbe
in
adc
mulb
pop
je
push
add
hlt
pop
push
js
sub
and
and
mov
adc
popf
jmp
loop
mov
or
call
mov
aad
pop
lret
jno
push
out
xor
rcrl
sub
sbb
lcall
fldenv
xor
add
mov
mov
dec
cmpb
or
dec
sahf
pop
aad
mov
cmc
cld
ljmp
push
mov
andl
stc
js
sbb
pop
lock
pop
or
xor
loopne
leave
jle
fs
outsb
movsl
and
data16
lods
mov
dec
int3
test
mov
sbb
lea
mov
jmp
iret
pop
inc
push
fcmovbe
adc
enter
test
ds
popf
adc
das
sub
mov
outsb
dec
shlb
test
fcom
mov
test
stos
mull
enter
dec
lret
ljmp
fistpl
sbb
and
xlat
xchg
adc
or
js
cmpsb
sbb
movsl
sub
mov
lds
dec
mov
sbb
fdivrl
sub
ss
pushf
inc
mulb
mov
stc
mov
leave
adc
rorl
mov
fptan
cmp
jle
mov
pop
mov
mov
js
jl
fsubrl
mov
rorl
pop
sub
jb
insl
pop
push
or
jne
xchg
subl
movsl
lock
or
sbb
xchg
jo
imul
mov
sbb
frstor
mov
jne
loopne
stos
mov
push
pop
fmuls
jo
stos
pop
jae
inc
xchg
hlt
sub
inc
pop
jmp
jp
test
mov
ljmp
inc
bound
or
fwait
lahf
jbe
das
data16
inc
clc
clc
inc
add
div
cmp
cltd
cld
mov
sbb
lcall
jg
mov
add
cmpsl
mov
adc
stos
xor
xor
sahf
aam
loop
mov
push
adc
or
ja
adc
es
pop
sbb
icebp
mov
and
sbb
out
sti
cmp
fldt
and
push
repz
popf
mov
into
mov
clc
in
dec
pop
sub
mov
mov
dec
addr16
enter
outsb
idivl
cwtl
fcomps
xchg
add
hlt
stos
pusha
fwait
dec
scas
adc
sub
aaa
and
jge
movsb
aas
cmp
mov
in
sbb
inc
jge
inc
lret
inc
dec
lds
arpl
outsl
dec
fwait
lds
xchg
inc
clc
jns
cs
pop
repz
mov
pop
mov
in
outsl
in
mov
sub
add
cltd
cmpl
dec
cld
cmp
test
shl
jne
js
loope
ss
push
mov
cmpb
out
or
sub
push
adc
in
xor
testb
ljmp
insb
add
adcl
vandnpd
pushl
push
lcall
mov
push
cld
lea
add
dec
fprem1
mov
add
sub
mov
lock
and
rcrl
aas
and
mov
add
sub
xchg
cmp
lds
mov
xchg
cwtl
jo
ficompl
jo
lea
sub
xchg
inc
aam
int3
cwtl
mov
xlat
pop
mov
inc
mov
add
lahf
nop
ror
aaa
rcll
ret
imul
adc
fdivrp
mov
cmp
dec
add
js
inc
outsb
add
nop
fiadds
scas
xchg
stc
daa
or
mov
ret
test
out
adc
ret
leave
decb
insb
aad
xchg
imul
addr16
or
xor
add
je
into
test
xor
push
lds
scas
mulb
jp
lds
stc
jbe
sysenter
sub
jbe
xchg
dec
sbbl
sbb
sti
xchg
sahf
pusha
xor
rcrl
jmp
nop
cmp
mov
cld
call
jl
push
mov
push
pop
imul
aas
sub
jl
sbb
xchg
cmp
jmp
dec
fnstenv
icebp
mov
xchg
cmpsb
nop
ljmp
loopne
icebp
fldt
call
xchg
in
insb
push
insb
push
pop
adc
xor
mov
into
mov
pusha
lret
cltd
fildll
sarb
pop
outsl
mov
push
roll
inc
cmp
mov
xchg
xlat
aad
sub
int3
cmp
push
pop
loopne
imul
adc
inc
adc
adc
inc
test
divl
mov
dec
mov
scas
push
popa
push
push
addr16
int
inc
repnz
pop
test
out
sbb
sbb
inc
lods
adc
stos
mov
sub
repnz
cmpsb
rorb
scas
sub
das
adc
mov
psubq
jge
test
sub
test
les
ljmp
call
cld
xchg
cmp
push
inc
adcl
jb
adc
lds
inc
insb
and
inc
adc
xor
xchg
lret
mov
inc
mul
mov
sahf
in
cmp
and
aas
mov
dec
jecxz
or
push
stos
pop
xchg
push
or
jb
mov
cmp
push
fistpll
pop
and
rep
jl
out
jo
sbb
dec
das
addl
mov
rol
int
testl
jo
and
cmp
jl
ljmp
xor
xor
mov
vphsubbw
negl
pop
lea
je
fiaddl
mov
gs
jle
insb
test
xchg
in
cmpsl
lock
outsb
in
xlat
xchg
les
outsl
into
adc
pusha
test
mov
nop
jle
punpcklwd
ret
les
or
bound
imul
sbb
push
fcoms
stc
push
out
add
out
push
imul
and
mov
mov
dec
inc
rolb
inc
pop
test
inc
push
ss
lret
jnp
or
pop
add
sbb
insb
xor
or
inc
fmul
iret
das
fldl
imul
movsl
sarl
ret
aas
pop
mov
mov
insb
mov
xchg
test
shrb
inc
rcll
std
xorl
adc
pushf
test
loop
xchg
daa
sub
jns
ja
mov
xor
adc
ret
adc
cltd
push
fninit
mov
aas
inc
mov
adc
dec
cmp
stos
add
call
arpl
pop
mov
add
rolb
xlat
push
loop
aam
lret
or
push
out
inc
mov
dec
js
mov
cmpl
shlb
insl
pop
jae
dec
icebp
shr
dec
dec
cwtl
add
fldln2
out
mov
out
cmp
jmp
lcall
dec
adc
mov
in
cs
xor
sub
pop
hlt
inc
retw
push
mov
into
dec
icebp
in
insl
popf
lds
shlb
push
jl
jno
shlb
pop
in
push
jnp
jne
lods
pop
je
std
dec
jae
fadd
sub
std
popf
out
test
pop
inc
outsl
cmp
in
xor
aas
scas
aaa
jo
mov
mov
xor
xorl
dec
aad
push
mov
dec
out
dec
push
mov
mov
daa
dec
out
cmpsb
ret
xchg
repz
pushf
jp
pushf
aas
pop
xor
test
xlat
push
mov
ret
js
shl
xchg
mov
scas
data16
inc
ljmp
xor
fsubr
loopne
mov
loopne
mov
cmpsl
adc
sub
aad
xor
sub
push
jae
cmp
stc
add
test
mov
cmpsl
pop
sub
mov
sti
lahf
xlat
addr16
push
cmc
add
cmp
inc
and
xchg
jae
sub
movsb
add
imul
fadds
dec
xchg
jno
pusha
sub
cmpsb
xchg
cld
push
jmp
imul
fiadds
mov
cli
mov
in
inc
test
and
sahf
ja
cltd
or
test
notb
cmp
xor
xchg
incb
addr16
in
lret
cltd
fwait
jne
loop
xchg
or
jbe
fildll
lods
jmp
cmp
sub
sub
mov
in
sbb
mov
sbb
ss
leave
rol
push
fnstenv
aad
mov
adc
jmp
jno
or
int3
mov
lds
mov
adc
sahf
insb
sti
cmp
fucom
xchg
jmp
nop
push
into
sbb
bound
xchg
push
sbb
insl
xor
inc
cmpsl
out
lret
xor
xlat
call
frstor
fdiv
cmp
sub
mov
or
mov
scas
pop
inc
sub
jns
or
inc
in
dec
imul
mov
dec
pop
sub
stos
mov
or
dec
add
scas
int3
dec
sahf
inc
push
movsl
iret
sarl
sub
xorl
mov
nop
or
in
mov
int
xchg
insl
imul
lcall
shrl
cmpsb
aaa
xchg
loopne
mov
daa
lcall
cmp
dec
dec
fists
pop
movsb
mov
and
jae
fistl
add
xlat
repnz
js
leave
sbb
mov
pushl
inc
or
jmp
lods
imul
subb
jmp
pop
sub
inc
dec
lea
outsl
xor
mov
pop
dec
ja
in
mov
lcall
mov
pop
fmuls
fwait
mov
lcall
mov
adc
popf
mov
scas
insl
clc
stos
lea
add
mov
mov
adc
mov
jb
dec
push
or
shlb
hlt
or
inc
into
pop
test
mov
sub
loope
ss
jb
in
ss
das
aaa
adc
pop
pop
xchg
pop
pop
add
lea
int
jmp
xor
aas
imul
push
xchg
cmp
aaa
daa
cwtl
stc
sbb
jno
movd
test
xchg
mov
add
mov
fistpl
fcmovne
mov
xor
pop
sub
pusha
mov
pop
les
ficoml
xor
jp
ds
in
enter
mov
fwait
enter
test
aad
scas
xchg
insl
dec
fdivrs
pop
lret
adc
iret
cmp
int3
inc
arpl
add
ja
jo
cmp
call
sbb
loop
sbb
cltd
insl
adc
repnz
mov
imul
adc
sub
mov
iret
popf
add
jne
mov
outsl
hlt
mov
pop
or
or
inc
add
xchg
lods
out
jg
loop
push
add
jle
mov
cli
js
popf
adc
in
jne
cli
fists
xchg
lret
cli
jle
xchg
and
mov
mov
insb
stc
clc
dec
push
out
bound
test
jmp
ljmp
mov
scas
dec
fwait
test
fildll
popa
jnp
and
clc
lods
popa
sbb
jo
xlat
pop
sbb
pusha
jp
fs
jnp
js
sub
ljmp
out
xor
jle
mov
dec
cmp
fidivs
push
sub
test
popa
int3
jns
lds
jmp
mov
iret
iret
sahf
xchg
repz
lret
sbb
inc
insl
out
and
push
outsb
popf
out
test
stos
shl
inc
mov
xchg
leave
es
ret
imulb
idivl
push
inc
out
nop
mov
cli
push
xchg
jns
mov
rcrl
xlat
add
cwtl
pusha
out
adc
add
fdivrs
test
jnp
sahf
mov
mov
cmpsb
inc
xor
dec
lea
outsl
js
call
sub
push
fwait
add
inc
ret
stos
sbb
mov
pop
add
inc
aam
dec
fsubp
push
sbb
int
rcrb
jecxz
jae
int3
adc
cltd
dec
dec
fisubrl
lods
lea
dec
cmc
adc
scas
aas
ret
mov
and
jge
out
int
aad
or
dec
loopne
or
es
pop
out
popf
data16
mov
jbe
js
hlt
dec
out
clc
orb
inc
leave
data16
jp
cmp
dec
aad
jno
cmp
mov
adc
mov
mov
les
push
or
xor
into
xor
or
fwait
inc
xchg
insb
jmp
orb
test
and
push
outsl
shll
shll
shrl
pop
push
jae
sahf
cmp
mov
addr16
outsl
cmc
push
xor
sbb
sub
or
dec
pop
and
out
sbb
jge
add
outsb
bnd
jp
sarl
add
ja
xor
fldl
enter
out
or
add
sbb
mov
jecxz
ljmp
jecxz
pop
ss
push
gs
enter
jg
fimuls
inc
mov
mov
or
mov
adc
pop
jecxz
or
out
dec
in
ficoms
jl
mov
lods
leave
movsb
fldl
pop
dec
lods
out
lahf
insb
mov
lcall
mov
aaa
aad
hlt
pop
call
dec
notb
push
fldl
jle
mov
hlt
shll
mov
push
iret
adc
pop
xchg
mov
hlt
mov
arpl
outsb
inc
in
test
and
cs
stos
xchg
cmp
push
shlb
imul
xchg
pushf
push
add
fnsave
das
test
mov
pop
mov
mov
push
outsl
jmp
rcrl
jle
jl
lahf
lret
jle
ljmp
push
imul
sub
jg
xlat
and
imul
mov
cld
dec
sbb
mov
push
in
sub
dec
das
fbstp
inc
xchg
jb
xor
lock
inc
sbb
sbb
repnz
inc
es
inc
idivb
mov
adcl
ds
inc
loop
sub
dec
lds
jle
push
orps
jge
xor
inc
inc
repz
insl
dec
sbb
es
and
lea
into
cmp
movsb
sub
or
add
lcall
clc
test
fmull
dec
jle
pop
mov
or
into
rcrl
pop
cmp
mov
sbb
lods
push
gs
xor
or
ja
push
test
js
mov
cmp
sub
jne,pn
add
sub
xor
cmp
sti
mov
push
jb
pop
fwait
jecxz,pn
cmp
out
call
push
inc
test
nop
loope
testb
push
add
jae
jge
icebp
nop
iret
loopne
inc
insl
shll
dec
cmp
or
xchg
jnp
clc
rolb
push
jbe
imul
pop
and
push
dec
sub
add
jbe
and
dec
aam
data16
int
xor
inc
cmpsl
mov
and
pusha
mov
lds
fcmovu
je
inc
ret
pop
loopne
in
pop
loop
jge
addr16
pop
push
mov
aaa
decl
mov
adc
lea
pop
adc
int
in
cli
mov
push
test
xchg
call
inc
mov
hlt
xchg
clc
scas
xor
inc
aas
add
test
movsl
xor
outsl
mov
push
fdivrl
dec
mov
clc
pop
incb
rclb
leave
aas
mov
lock
push
test
outsb
push
leave
inc
cltd
xor
outsl
fstps
stos
bound
cmp
dec
into
xchg
loope
jb
push
cmp
xor
jge
mov
cs
into
or
and
or
into
mov
mul
add
adc
pop
aas
mov
pop
lahf
or
and
in
push
enter
stos
enter
pop
jo
aas
inc
pusha
mov
aas
mov
dec
popa
imul
enter
fs
lock
xchg
insb
dec
mov
loopne
mov
jp
lcall
pusha
daa
pop
rorl
lcall
pop
push
push
leave
lods
pop
imul
out
mov
push
out
push
daa
cmp
mov
xchg
dec
jae
lcall
fcomp
xor
lret
lcall
adc
fs
inc
mov
orb
scas
iret
mov
sub
push
jl
test
pop
pop
jb
inc
cltd
or
push
fs
imul
lods
push
xchg
into
stc
adc
pop
sarb
mov
fwait
xor
push
pushf
jecxz
movb
push
cmp
xlat
cld
xchg
dec
daa
push
ja
pop
enter
das
mov
enter
push
cmp
lods
testl
mov
insl
xchg
sub
insl
adc
or
push
jno
push
inc
ret
jmp
inc
jo
dec
movsl
sub
loope
popa
and
es
dec
leave
jl
mov
and
gs
and
cli
lret
adc
or
popf
xchg
ljmp
add
ja
adc
push
jle
lock
or
popf
call
jle
outsl
and
test
in
scas
scas
cmp
and
mov
push
je
movsl
sarb
mov
in
es
xchg
lods
out
or
and
mov
xchg
push
ss
add
movl
out
data16
push
and
mov
aaa
mov
mov
mov
idiv
hlt
pusha
or
pop
test
pop
mov
xchg
jg
in
ss
iret
test
in
incl
or
lcall
cmp
leave
sbb
and
std
rcrb
leave
dec
pop
push
movsl
ljmp
mov
fadds
imul
sbb
push
lcall
adc
rorb
imul
out
shl
adc
es
popa
ds
xchg
and
xchg
fisubl
lock
jns
scas
fcomps
imul
jb
and
mov
lea
sbb
fwait
sbb
dec
push
mov
lahf
xchg
clc
out
das
push
sti
fwait
lock
std
pop
mov
dec
inc
shlb
mov
mov
test
lods
adc
xor
jle
bound
adc
dec
fs
jbe
push
icebp
ret
fwait
aas
push
adc
inc
or
ljmp
mov
dec
mov
mov
out
pop
test
mov
lea
stos
aas
cmp
jle
xchg
jge
sahf
xchg
test
sbb
xor
jge
inc
shrb
jae
rcl
out
inc
iret
out
fcmovnbe
jo
movsb
jmp
mov
negb
or
stos
xchg
inc
and
gs
jno
sti
fidivs
and
cmp
xchg
in
mov
loopne
clc
inc
mov
stos
fistpl
and
sti
dec
pushf
out
inc
scas
push
push
lret
cmp
lea
mov
ror
ds
xor
loope
xor
loope
es
xor
xlat
flds
push
aam
in
add
notl
lods
inc
jle
ja
inc
arpl
pop
xchg
cltd
icebp
xchg
xchg
mov
insb
out
fs
cmp
imul
iret
pop
rorb
xlat
adc
xchg
loopne
pop
loope
int
jbe
jnp
rolb
fs
bound
sarl
mov
xchg
adc
push
aas
pop
cmc
adc
jg
inc
aas
out
pop
push
outsl
adc
fstl
fadd
push
icebp
inc
idivl
add
sarb
lret
repz
js
rorl
pop
push
cmp
pop
xchg
push
inc
sahf
ja
pop
das
lea
mov
roll
gs
aad
xchg
mov
mov
adc
pop
cmp
adc
and
push
or
xlat
insb
mov
mov
xorl
jg
test
fs
sbb
std
aaa
leave
dec
loope
clc
int
imul
mov
dec
adc
clc
xor
jae
and
stc
sub
stc
movswl
ret
jnp
test
mov
xchg
and
push
and
stos
or
xchg
push
sbb
inc
test
pop
xchg
push
xor
int
pop
mov
pop
lock
loope
xor
in
push
mov
push
arpl
mov
ret
addr16
inc
xor
sub
movb
jns
call
sbb
into
dec
je
loopne
divb
sbb
push
pop
lahf
xlat
inc
mov
pushf
in
pop
mov
sub
adc
addr16
icebp
fsts
pusha
push
cld
aad
dec
rolb
mov
gs
fldcw
je
jno
or
mov
sub
out
sub
loopne
and
push
insb
mov
jb
ja
fisttps
mov
outsb
repnz
xor
pop
sub
sbb
arpl
lods
scas
icebp
fs
aad
clc
ljmp
das
inc
jo
insb
inc
add
jbe
pushf
and
cs
sbb
mov
lods
or
scas
and
rdtsc
outsl
dec
cltd
in
dec
xor
push
sub
mov
mov
scas
or
jae
inc
xchg
stos
dec
scas
cli
cmp
pop
jo
sbb
stc
mov
enter
dec
or
add
jbe
mov
push
xorl
mov
sbb
int3
mov
inc
neg
cwtl
std
repnz
pop
pushf
mov
jns
mov
mov
sahf
call
fnstsw
or
inc
push
mov
inc
cltd
test
pop
mov
iret
arpl
mov
rorl
mov
adc
stos
push
jmp
mov
cmp
or
jnp
lahf
das
cmp
stc
dec
add
call
arpl
mov
pop
adc
mov
lods
inc
loopne
adc
daa
flds
add
cs
pop
jmp
sub
jl
out
stos
into
pop
aaa
icebp
and
mov
mov
dec
loope
cmp
loop
subl
dec
cmp
imul
or
popf
jmp
jg
or
out
cmpsl
fsubs
cld
je
insl
push
xchg
add
jecxz
cmp
fsubl
sub
lock
movsl
test
push
cmp
stos
into
mov
repnz
add
lods
cltd
aad
push
int
jg
mov
lods
inc
sub
clc
call
mov
mov
mov
jecxz
push
gs
ficompl
rclb
pop
xchg
ljmp
xlat
movsl
lahf
fimuls
inc
cmp
fsubrp
cmp
mov
mov
xchg
inc
xadd
cmp
scas
leave
ss
push
insb
inc
test
sub
loopne
xchg
les
push
push
jno
pop
scas
inc
addr16
ret
xlat
or
lcall
lods
fistpl
inc
loop
scas
pop
cwtl
test
cmp
pop
jl
sbb
mov
sbb
bound
cmp
sbb
mov
xchg
cmp
sub
adc
lock
loopne
cmp
jmp
enter
add
je
mov
iret
dec
pop
lds
push
jnp
fstpt
shlb
fwait
stos
cmc
mov
imul
cld
mov
inc
inc
leave
dec
popf
daa
les
out
jmp
jmp
pop
repnz
fcmovne
inc
movsl
je
push
jmp
dec
pop
jne
add
mov
or
scas
xchg
ljmp
inc
dec
cmpsl
fsubrs
das
inc
jno
fcoms
lahf
push
jecxz
pop
imul
test
fildl
jae
lcall
and
pushf
xor
movsb
popf
mov
dec
push
test
xor
xchg
sub
popa
cmpsb
shll
mov
jno
out
movsb
jns
les
std
imul
movsb
add
cld
dec
cld
lods
lock
jmp
push
cmp
and
fiadds
or
pop
or
ret
xchg
outsb
inc
jno
or
cmp
bound
aas
sbbb
shlb
sbb
into
push
ror
mov
cmp
scas
in
leave
nop
xchg
xchg
lods
xchg
pop
sar
xchg
outsl
pop
icebp
mov
jne
cli
mov
lock
aam
jno
jo
push
pop
in
push
int
adc
insl
mov
and
xlat
xor
pop
std
mov
and
mov
enter
ss
cmpsl
mov
pusha
ljmp
shrb
xor
inc
sbb
inc
xor
cmc
ljmp
das
and
add
stos
and
rorl
and
add
mov
mov
scas
mov
mov
lcall
mov
std
dec
jno
out
aam
sbb
jp
pushf
xchg
mov
movsb
icebp
push
stos
test
sbb
jp
pushaw
jb
in
add
mov
enter
or
movsl
dec
sahf
mov
fs
xlat
inc
or
aaa
sub
int3
aad
std
ds
jb
jno
jmp
mov
ja
push
mov
adc
popa
xchg
popf
dec
jno
insl
fwait
cmp
ret
lods
pop
mov
sbb
imul
or
or
and
in
sub
sbb
and
and
and
int3
pop
xor
and
adc
mov
out
ljmp
out
pop
xor
jle
ret
cmp
fstpt
aad
rol
pop
fs
rcl
mov
fwait
stc
xor
add
pop
xchg
jbe
push
xchg
and
lcall
jp
cs
js
add
add
dec
jecxz
pushf
push
adc
hlt
mov
adc
sbb
in
pop
loopne
ds
mov
pop
add
adc
push
cmp
icebp
jle
in
loop
lret
sbb
fdiv
fldcw
pop
cld
adc
aam
out
mov
fidivrl
lods
call
sub
sub
nop
iret
aas
ror
and
mov
pop
or
mov
aas
and
xchg
pop
dec
xlat
mov
sbb
test
aad
adc
inc
neg
dec
gs
out
adc
loop
inc
rcrb
fcoml
xchg
popa
mov
jne
xchg
pop
pmulhuw
mov
mov
lock
mov
cs
aaa
push
xor
sbb
ljmp
lcall
sbb
jae
movl
jns
scas
pop
mov
xor
in
insl
arpl
insb
fcomip
or
push
inc
stc
popa
adc
jnp
insb
and
adc
sbb
xchg
xchg
sbb
sub
je
xor
xchg
and
dec
dec
mov
pop
add
loope
call
outsb
scas
dec
sti
inc
mov
or
cltd
mov
repnz
xorb
or
or
mov
ror
pop
or
stc
popa
imul
sarl
push
or
cmpsb
shrl
es
cmp
or
call
pusha
jmp
mov
cmp
mov
mov
call
scas
cmp
pop
loop
mov
add
mov
push
std
insb
inc
inc
movsb
xlat
call
add
push
jnp
or
js
fistpl
ficomps
out
mov
push
mov
sub
or
and
rorb
pop
jno
push
cmp
lods
cmp
inc
jecxz
in
cmp
popf
push
jp
add
mov
pop
imull
xchg
mov
aam
enter
stos
in
xchg
sub
pop
pushf
lret
inc
inc
jns
jb
les
jae
movsb
pushf
cld
jb
dec
push
or
mov
jbe
fwait
aad
sbb
dec
adc
inc
mov
stc
adc
jne
test
lods
sbb
shll
fwait
sub
pop
xor
xchg
xchg
je
dec
cs
int3
leave
sbb
sub
pop
cmp
pop
adc
add
shrb
cmp
loope
stos
leave
loope
dec
out
ret
cld
out
mov
push
les
repnz
in
add
xchg
popa
rorl
add
gs
mov
sahf
aam
ljmp
xchg
decb
movsl
push
lret
and
shrl
mov
adc
loopew
pop
hlt
into
and
mov
push
enter
jp
lods
jle
jge
outsl
jns
lods
adc
sbb
ljmp
or
int3
ljmp
xchg
pop
push
sub
clc
adc
js
pop
adc
dec
jnp
and
adc
sub
push
sarl
aam
cmpl
aas
daa
mov
ljmp
hlt
test
lret
outsl
mov
pop
repz
out
mov
xchg
loope
push
inc
inc
adc
mov
cwtl
push
insl
outsl
jmp
call
pushf
std
imul
sbb
fwait
xlat
loope
jl
and
mov
add
pop
or
push
jne
inc
xchg
mov
fmuls
imul
repz
mov
clc
jmp
ret
xor
filds
xor
out
dec
ds
fidivrs
int
push
mov
sbb
cltd
pop
adc
hlt
bound
add
out
rorb
cmc
lahf
sbbb
push
mov
aaa
cwtl
add
mov
mov
out
mov
inc
mov
movsl
sub
adc
sbb
imul
sub
test
xchg
cmpsb
enter
rcll
cmc
jo
add
adc
and
fstpl
outsl
push
xor
es
js
dec
xor
xchg
and
dec
push
xchg
insb
lret
mov
fmull
and
mov
xchg
andl
addr16
fstpl
repnz
test
cmp
in
mov
mov
cmpb
fcoms
push
add
adc
cld
cwtl
shl
dec
pop
sub
sub
mov
mov
popa
adc
xchg
movsl
jp
mov
mov
inc
add
test
pop
imul
adc
sub
scas
pop
mov
mov
cmc
sbb
dec
inc
pop
popf
pop
insl
xchg
push
push
std
pusha
das
filds
pop
or
lret
mov
or
hlt
lods
or
and
mov
or
inc
sub
dec
inc
add
pop
sbb
mov
sub
push
cmpsl
or
mov
add
push
add
mov
mov
cmp
vorps
add
ljmp
mov
sub
xchg
cld
jbe
adc
jle
fistps
pusha
dec
pop
mov
pop
pop
sbb
and
inc
stos
jl
aad
inc
push
aam
or
xor
sbb
push
insb
out
xchg
sbb
sahf
pop
les
popa
pop
mov
out
jp
scas
push
xor
movsl
add
mov
xchg
ja
adc
dec
mov
sub
js
dec
lcall
and
jmp
inc
inc
leave
dec
jmp
ja
es
aam
inc
pop
xchg
lds
xchg
xchg
cmpl
ljmp
push
and
cmpsl
pop
aam
leave
sbb
adc
add
testl
push
xor
xor
insb
test
lods
rorl
mov
and
cltd
ficoms
fistps
cmc
push
sti
repz
mov
dec
sbb
sbb
add
mov
xlat
inc
fcom
sbb
int3
mov
dec
jmp
das
or
dec
xchg
stos
dec
ret
jne
mov
xor
cwtl
lds
add
adc
jo
daa
sti
inc
mov
pop
sti
inc
pop
fimull
xchg
insl
adc
je
fsubl
adc
cwtl
das
or
sbb
xchg
push
jecxz
outsl
mov
testb
cmp
xor
in
push
fmuls
sbb
and
in
jb
je
sub
icebp
scas
ds
fdiv
and
jnp
inc
mov
scas
loope
xor
das
gs
inc
in
dec
inc
out
cmp
es
scas
and
loop
add
cmpsb
push
jmp
sarb
xor
xchg
dec
stos
inc
and
stos
jp
ds
mov
ljmp
or
in
rcrl
mov
sbb
mov
pushf
loop
jg
insb
sub
mov
cmp
cmp
stos
jmp
out
enter
mov
mov
orl
das
pop
ret
popa
ret
sub
test
mov
mov
inc
and
int3
rol
adc
jmp
push
xor
mov
mov
shlb
pop
and
xor
dec
and
sub
mov
loopne
fdivs
test
xchg
stc
mov
pop
aaa
mov
add
repz
mov
mov
lcall
ss
dec
pop
mov
jle
in
leave
lret
jmp
sub
mov
xchg
mov
sbb
mov
imul
pop
or
mov
xor
pop
mov
fdivl
cltd
pop
dec
test
imul
inc
addb
pop
scas
js
pushf
pop
cld
jmp
push
cltd
mov
icebp
das
jl
cmpsl
xor
sarl
pop
mov
cmp
xchg
mov
add
xchg
mov
xchg
mov
mov
and
stos
jnp
cld
popf
out
jl
fidivl
rcll
fsubl
lcall
pop
pop
lods
pop
xchg
mov
dec
lods
mov
xor
das
xlat
stos
cmp
mov
and
test
jge
push
scas
dec
xor
clc
pusha
lcall
loopne
jo
pop
data16
sub
jmp
pop
loope
and
mov
or
out
fwait
mov
xchg
imul
in
daa
pop
scas
js,pt
std
or
cwtl
mov
enter
mov
pop
imul
pop
ret
sub
je
mov
mov
fwait
add
out
add
mov
xor
cld
cs
xchg
rolb
jmp
flds
cmp
enter
fdivrp
push
cmp
out
jge
mov
xlat
mov
movl
ror
test
xchg
fisttpl
xchg
mov
cmp
xchg
add
sub
adc
mov
and
ret
imul
pop
jl
xchg
pushf
fs
mov
jecxz
xlat
rcr
cwtl
pushf
mov
jae
jl
loopne
xlat
stc
nop
shlb
out
inc
ja
inc
sub
cwtl
and
out
jl
mov
call
out
mov
xchg
shlb
repz
sar
ljmp
shlb
sbb
sbb
lds
enter
jp
xor
pop
pop
int
les
cmpsb
xchg
es
pop
pop
sbb
movsb
or
mov
mov
es
pop
icebp
adc
stos
sub
sti
pushf
loopne
rolb
jb
add
add
mov
testb
adc
cmp
test
je
and
inc
adc
js
mov
ficoms
add
push
jl
clc
push
xchg
push
idivb
aas
mov
icebp
aam
leave
xor
es
mov
out
inc
mov
xlat
testb
xlat
arpl
mov
adc
pop
pushf
test
andl
fldenv
mov
lods
out
xor
sbb
cmpsl
push
lcall
add
das
mov
xchg
cwtl
sub
into
mov
mov
xchg
xchg
cmc
jno
xchg
call
cmp
test
xor
pop
fsubr
and
cmp
push
push
xchg
ficompl
mov
xor
nop
push
push
std
das
scas
mov
lock
int3
mov
aam
push
and
inc
in
aaa
inc
sbb
xchg
push
cmp
inc
fisubrs
jg
pop
or
mov
add
mov
add
mov
xchg
jg
aam
aam
lahf
adc
mov
js
in
ret
mov
sbb
dec
mov
pop
subl
insl
mov
push
mov
mov
push
mov
or
xchg
lret
lret
xor
push
adc
into
xor
pop
xchg
movsl
adc
test
pop
icebp
xchg
xor
aam
push
fwait
push
btc
fisttpll
or
mov
mov
scas
enter
jnp
push
imul
jo
xcrypt-cbc
cmpsl
push
sub
jns
xor
inc
mov
push
aaa
xchg
in
ss
ret
and
push
push
cmp
in
inc
ja
scas
cmp
cmp
sbb
inc
sbb
ret
js
fs
aam
push
add
dec
sbb
shlb
rcrb
scas
xorb
inc
fs
and
mov
nop
adc
push
sub
cmpsb
test
pushf
shll
cmc
mov
cs
call
out
mov
arpl
mov
push
pop
add
dec
jbe
inc
sub
cli
adc
push
sub
imul
mov
cmp
xchg
xchg
cmpsl
push
outsl
stc
or
icebp
and
inc
dec
test
push
or
das
push
cld
mov
fiadds
es
sub
inc
mov
mov
inc
cmpsl
hlt
xor
ss
jb
and
test
aad
arpl
jnp
and
loopne
cltd
out
fldenv
pop
push
ret
sbbl
adcl
icebp
cmpl
add
pushf
jge,pt
js
or
lahf
mov
hlt
es
and
push
cmp
inc
call
in
out
push
scas
push
arpl
cli
mov
and
pusha
push
mov
cmp
xchg
or
sbb
dec
sbb
test
mov
inc
pusha
mov
inc
xchg
test
xchg
repz
and
popa
adc
push
pop
cmp
es
sbb
out
js
sbb
das
mov
mov
enter
sub
sbb
test
incb
dec
ficompl
dec
dec
test
jbe
push
pop
dec
pop
addr16
stos
adc
ja
fwait
std
xchg
adc
das
loopne
xorl
pop
icebp
icebp
inc
mov
out
shll
inc
and
jp
orb
mov
stos
dec
or
leave
out
sbb
mov
hlt
dec
mov
sbb
add
or
aas
cwtl
jg
ss
jno
pop
pop
jbe
fldenv
mov
push
mov
mov
daa
fwait
nop
inc
sbbl
sti
xor
mov
jp
decl
ljmp
mov
bound
rorl
daa
and
daa
iret
outsl
inc
xchg
jne
insl
hlt
fiadds
xchg
mov
xchg
cltd
cmp
push
lock
fisubl
dec
fldl
mov
pop
frstor
push
das
scas
fcmovnbe
arpl
pop
lret
loopne
or
xchg
xchg
and
mov
xchg
xor
je
sub
sbb
jp
jb
xor
dec
arpl
ficompl
adc
and
scas
clc
mov
xor
addr16
mov
imul
push
repnz
mov
iret
mov
stc
sub
pop
inc
pusha
cmpsb
add
or
pushf
stc
cmp
dec
aam
daa
cli
xor
out
mov
sub
mov
lds
in
fnstenv
push
or
lcall
or
lret
arpl
fldcw
jnp
cltd
fdivs
or
pcmpgtb
mov
cltd
jge
push
inc
cmp
xchg
in
cld
insl
or
mov
mov
dec
lods
jmp
out
push
dec
xchg
lret
mov
add
mov
adc
and
cmp
add
xchg
jbe
pushf
push
xchg
inc
mov
pop
mov
dec
cltd
sub
clc
pop
repnz
incb
out
movsb
push
dec
jno
cmp
in
sarl
ljmp
jns
test
adc
stos
out
popa
pushl
mov
sbb
and
inc
mov
aas
ss
inc
ror
sub
aas
push
xorl
mov
mov
call
dec
dec
dec
lret
cmpb
cmp
mov
sub
mov
jnp,pt
out
mov
orb
pusha
fnstenv
mov
lret
sti
les
and
xchg
xor
imul
lods
adc
cld
mov
jle
mov
dec
enter
rol
cmp
nop
inc
int
ljmp
mov
jne
mov
xchg
sti
cmpsb
jg
jg
cmp
arpl
scas
sbb
pop
jb
repnz
test
and
pop
mov
loope
subb
mov
lds
les
lock
adc
push
jp
jmp
js
mulb
sarl
mov
push
jne
das
fdivrs
cld
sbb
arpl
xor
jbe
lods
sbb
insl
pop
insb
mov
jg
pushf
push
jbe
sub
call
ret
arpl
push
dec
movsl
sub
push
push
cmpsl
mov
inc
aad
shlb
cmp
mov
xchg
push
push
inc
loopne
or
push
mov
ret
loopne
out
addr16
jae
pushf
jmp
and
test
mov
aad
ret
add
ret
pop
pop
enter
out
in
push
cmp
leave
sbb
repnz
pop
pop
push
jg
xchg
push
es
movsb
mov
and
inc
or
mov
mov
ret
push
push
cmpsb
xor
xchg
inc
enter
aaa
stos
ja
mov
test
sbb
mov
xor
mov
push
sbb
movsl
pop
xchg
mov
mov
mov
int3
loope
ss
clc
lahf
push
pop
or
pushf
loope
aad
ret
cltd
xchg
and
sub
inc
jns
hlt
pop
dec
push
push
test
adc
out
js
push
les
xchg
and
sbb
inc
fwait
cmp
mov
cwtl
in
pop
cmp
fisubrl
inc
inc
push
mov
and
out
out
insl
pop
iret
cmp
inc
adc
ja
dec
test
cwtl
or
das
inc
pop
pop
pop
adcl
stc
popa
stos
cmpsb
pop
mov
scas
sbb
mov
mov
or
outsl
or
loopne
loope
pushf
aam
adc
shrl
push
mov
sbb
maxps
inc
mov
cmpsl
sub
popw
cli
insl
shlb
int3
pop
btr
adc
bound
inc
ljmp
fsub
or
iret
jle
sbb
sahf
subl
sub
mov
in
and
insl
daa
sbb
or
jns
add
mov
call
sbb
push
aad
push
fabs
fdivrl
add
leave
add
rcl
leave
push
push
sti
in
dec
sbb
aad
or
mov
and
fmul
fcomi
push
arpl
icebp
ljmp
and
int3
test
scas
xchg
lock
lahf
or
and
sub
das
sti
jle
stos
lods
mov
lods
mov
jns
sub
mov
fists
mov
call
inc
cltd
in
cmpb
add
out
push
repnz
xlat
hlt
adc
inc
cmp
insb
jl
repz
mov
dec
add
mov
cld
lods
sbb
lock
mov
mov
or
inc
cmc
xchg
movsl
xor
ficoml
mov
movsb
inc
xchg
mov
fwait
insl
xor
insl
mov
jo
mov
or
cs
pop
and
inc
fidivs
inc
inc
aas
inc
fstps
pop
js
pushf
stc
test
mov
out
add
mov
inc
sahf
xchg
cmpsl
pop
in
jb
testb
and
fwait
lcall
mov
flds
nop
push
pop
lret
jge
pop
and
jecxz
cmp
imul
jae
mov
shrb
fwait
or
cmp
adc
in
loopne
test
dec
ret
pop
mov
leave
roll
call
mov
lcall
xchg
fidivrs
inc
xor
out
push
mov
shr
fisubrl
leave
mov
sahf
faddl
mov
inc
jp
push
aas
loop
mov
ficoml
xor
outsl
cmp
fs
inc
xlat
mov
dec
mov
loope
out
or
jno
mov
xchg
push
dec
ja
lock
fcoms
leave
mov
fidivs
adc
test
or
popf
std
stc
lods
in
lahf
mov
negb
mov
pusha
xchg
test
mov
xchg
sbb
add
push
cltd
ds
aam
add
div
sub
mov
cmp
dec
cmc
cmp
jmp
mov
xor
push
sub
cwtl
mov
and
push
push
pop
scas
add
popf
sbb
es
test
in
and
jb
mov
xchg
inc
pop
push
int
movsl
rep
jl
aaa
imul
ss
push
cmp
jge,pt
aam
loopne
inc
sub
das
dec
pop
call
jecxz
and
add
fidivs
test
push
sub
cli
loopne
fadd
cld
push
or
jno
sub
pusha
mov
push
andb
adc
dec
inc
inc
sahf
xor
mov
mov
iret
lods
fstps
mov
mov
adc
push
inc
xchg
push
aas
cwtl
push
pop
stos
ljmp
mov
or
in
mov
sub
sub
pushf
repz
movsl
mov
push
loope
test
pop
lods
pop
and
repnz
push
jl
mov
jecxz
xchg
flds
out
push
pop
add
push
pop
sbb
sub
jae
lods
mov
stc
shlb
xlat
adc
incb
sub
mov
or
sub
idivl
add
fisubs
ret
adc
pop
lret
jbe
pop
push
call
jbe
sarl
enter
test
mov
xor
inc
add
or
sub
bswap
lds
aad
xchg
pop
push
test
rcrb
imul
cmp
inc
jp
mov
sar
dec
cltd
jnp
xchg
iret
addr16
mov
in
aad
or
mull
call
fidivrl
scas
xchg
imul
bound
mov
dec
jmp
cwtl
push
add
out
scas
iret
cmpsb
lods
inc
mov
rcrl
push
xchg
fdivs
mov
pop
test
hlt
nop
push
test
mov
leave
add
in
and
outsl
jae
cmc
xchg
sub
jge
loope
jp
out
nop
cmpsl
sub
inc
outsb
notl
shrb
push
bound
xor
iret
jae
push
lods
lock
ds
mov
mov
lods
dec
jmp
iret
arpl
lret
sarb
xchg
rorb
bound
ja
jo
dec
icebp
jb
push
xchg
adc
dec
mov
sti
mov
inc
sub
ja
dec
dec
xorb
mov
sub
push
pop
jbe
lcall
fwait
test
jbe
mov
aam
aam
mov
mov
sbb
and
imul
sbb
fcomps
mov
arpl
sub
xor
out
loop
pop
call
mov
jle
aad
fiadds
icebp
pop
jbe
mov
jno
xor
inc
ds
fisttps
xchg
ret
mov
dec
insl
xchg
xchg
arpl
lock
jne
es
dec
scas
clc
loope
dec
mov
xchg
sahf
cmpb
mulb
mov
cltd
pushf
push
jge
cmp
mov
adc
sub
xchg
mov
mov
aad
les
mov
mov
addr16
sub
jl
shrl
dec
xchg
xchg
inc
mov
aaa
test
add
xchg
push
sub
aas
ds
mov
out
ret
adcl
mov
movsl
jns
push
push
sahf
jbe
mov
push
stos
xchg
stc
cmp
cvtdq2ps
int3
arpl
and
idiv
lret
out
icebp
pop
test
xor
out
or
mov
movsb
push
mov
test
mov
cld
ficoms
sub
jae
dec
dec
mov
and
xor
ret
lret
sbb
fcomps
arpl
in
repnz
fnstsw
jo,pn
or
stos
push
enter
jno
loopne
add
dec
mov
je
ret
pop
xor
dec
inc
movsb
mov
stc
xchg
sbb
mov
std
clc
test
cmc
lock
push
stc
in
mov
subb
test
fstpl
pop
sub
fldenv
sahf
in
cmp
fnstcw
leave
cmp
mov
jg
bnd
cmp
out
xchg
dec
fisttpl
aas
inc
mov
scas
pop
add
jl
in
js
rcrl
push
push
cld
rcll
xor
adc
test
les
mov
out
scas
in
in
inc
sub
in
movsl
dec
iret
cmp
arpl
push
enter
test
mov
add
cmp
pop
pop
enter
and
out
ljmp
popl
add
sub
sbb
test
push
adc
mov
cmp
or
jno
xchg
push
jmp
icebp
shll
out
inc
les
popa
jbe
arpl
out
leave
or
jne
sbb
push
or
and
aad
aas
pop
insb
and
cltd
ret
fistpl
ret
jne
cld
cwtl
test
adc
cmpsl
das
fcmovnbe
push
sub
rcrb
xchg
push
xchg
repz
decb
sbb
rcll
test
les
jmp
jle
push
cs
in
shll
js
push
add
cmp
in
leave
xchg
mov
or
pop
pusha
andb
and
jp
ret
push
loop
sub
mov
xor
fbld
fisubl
pop
mov
movb
xor
inc
scas
jg
mov
lea
and
daa
pop
sbbb
sub
adc
insb
out
inc
imul
mov
cmpsb
ja
fs
mov
mov
aas
test
gs
cwtl
add
xchg
jb
adc
lods
stos
jmp
ss
sub
mov
inc
aas
dec
das
and
dec
add
push
sar
ja
add
adc
pop
xor
push
sub
push
pop
push
test
call
out
addr16
push
and
xor
icebp
pop
mov
mov
push
cmp
lock
clc
addr16
pop
push
xchg
rcr
dec
outsb
jnp
xchg
cli
mov
xchg
jno
scas
cmpsl
push
sub
inc
es
dec
je
cmpsb
mov
sbb
adc
xchg
add
stos
loop
movsb
xchg
or
lods
xlat
call
inc
push
ss
sub
aaa
mov
cwtl
jmp
dec
and
pop
mov
push
test
push
add
cmp
stos
mov
or
imul
in
call
popf
dec
inc
push
adc
mov
inc
pop
fs
jbe
dec
pop
outsb
xor
or
pop
xchg
call
xlat
inc
push
inc
jp
scas
add
add
pusha
sti
xor
addr16
jne
leave
adc
push
adc
cmp
outsl
fstpt
aam
pop
rorb
dec
sub
xchg
aad
pop
mov
sub
js
mov
pop
jge
cmc
jns
fadd
jle
dec
stos
outsl
mov
incb
mov
dec
mov
out
adc
fcmovbe
mov
movsb
loope
inc
jb
jo
sbb
mov
push
xchg
add
xchg
fmull
mov
fsubrs
jbe
sarb
mov
push
ds
xor
cmp
je
pusha
pop
dec
sbb
jae
jp
sbb
mov
incb
btc
in
enter
xchg
pusha
sub
in
mov
xor
jb
les
sbb
push
ffreep
add
adc
insl
mov
sub
ds
xchg
and
lock
cltd
das
daa
ret
push
repz
in
jmp
pop
jno
xor
and
fdivrl
add
sti
fstp
adc
dec
or
add
jge
addr16
pop
cmpsb
cmp
jmp
xchg
inc
add
sahf
pusha
shll
cld
mov
mov
dec
mov
add
mov
jo
xor
sbb
out
xchg
pop
xchg
push
xchg
add
mov
fwait
jle
out
sbb
lret
cs
push
mov
inc
hlt
xchg
pop
test
inc
add
cmp
and
es
cmp
cli
test
adc
add
pushf
lea
in
cmp
sti
sbb
icebp
jno
xor
adc
dec
dec
or
out
cmp
mov
mov
mov
and
fcmovnb
and
scas
dec
xchg
shrb
xchg
clc
loopne
or
subb
mov
popa
dec
in
inc
lcall
jns
pop
sbb
outsl
lods
in
clc
sub
ret
cmp
out
xor
aad
ds
lahf
movsb
incb
repz
rorb
and
push
sub
ret
enter
jge
inc
mov
or
das
jnp
jns
fnstsw
std
mov
enter
jmp
jge
cwtl
xor
inc
cmp
popf
hlt
xchg
es
pushf
xor
cmpsl
clc
outsl
adc
sti
and
cltd
pop
jnp
or
out
outsb
or
add
or
mov
jbe
mov
in
stos
cmp
jge
inc
cmp
xor
xchg
adcl
cmp
dec
dec
or
popa
lock
lret
cmp
icebp
fmuls
and
sbb
inc
jle
loop
jne
test
push
xchg
adc
repnz
adc
syscall
push
mov
int
scas
popf
push
mov
adc
jae
and
jecxz
pop
xchg
push
in
leave
shll
inc
sahf
jno
fwait
sbb
push
cmp
daa
push
or
aad
jbe
xor
iret
jle
lahf
sub
jp
mov
sub
push
xchg
mov
lock
gs
xchg
stos
pop
stc
mov
mov
dec
lret
mov
pop
and
adc
cmpsl
dec
mov
cmpsl
or
imul
mov
stos
and
mov
hlt
fistps
jle
mov
inc
add
jecxz
clc
sub
les
movsl
call
jg
sbb
testb
pop
aam
pop
aas
cmpl
pop
aad
cmpsl
fdivrl
jl
shr
sub
dec
stos
arpl
sbbb
sub
mov
pop
xchg
rcrb
aas
lahf
jno
fcoms
xchg
je
mov
shll
rep
stos
sti
and
or
repnz
jl
mov
sub
dec
popa
imul
fstp
jecxz
stc
mov
add
lock
adc
sbb
mov
xlat
iret
jecxz
fistl
cwtl
push
push
outsb
shl
movsb
js
pop
pop
xchg
sbb
inc
ret
push
cmp
insl
pop
jns
jne,pn
test
push
lcall
inc
sub
xchg
fwait
stc
jge
out
xor
push
mov
or
jno
rorb
mov
xchg
xchg
mov
mov
arpl
xchg
pop
test
adc
add
stc
aaa
inc
lea
cltd
ret
mov
sbb
flds
xchg
mov
add
notl
adc
or
shl
test
push
cwtl
lds
inc
jecxz
sub
push
pop
cmc
cmpl
mov
int
subb
mul
stos
pop
loope
adc
int3
cmp
jge
aad
jge
and
jge
test
jo
dec
xchg
test
out
loope
jle
mov
sbb
xor
ss
cltd
std
bound
xlat
fimuls
mov
inc
int
ljmp
mov
adc
pop
push
cmp
cltd
sub
push
fidivl
pop
in
out
mov
adc
repz
push
cmpsb
rorl
cmp
lock
sbb
ljmp
lds
cmc
jmp
lods
jp
pop
lods
add
loop
or
push
hlt
or
dec
pop
push
fistps
data16
or
in
mov
test
jp
sahf
xchg
nop
push
cmp
push
dec
mov
call
sbb
add
ljmp
gs
es
mull
loop
pop
test
mov
jb
push
into
mov
jo
push
nop
dec
out
fsubr
ror
jecxz
dec
jl
in
rcrb
adc
adc
xor
and
ret
loope
dec
mov
iret
fbld
dec
andb
mov
sti
sub
sub
out
pop
into
push
shrl
dec
mov
in
out
pusha
call
mov
sub
lea
roll
cmpsb
adc
and
mov
cmpsl
sbb
add
negb
and
push
out
sub
fisubl
addr16
mov
jae
or
daa
xor
ficompl
adc
cmpsb
aaa
cmp
jae
dec
adcb
pop
gs
pop
int
sbb
fistpl
xor
clc
lea
jge
sbb
loopne
ljmp
lods
in
dec
stc
push
ljmp
les
mov
test
movl
xor
fisubrl
daa
test
pop
push
es
lea
int3
push
add
mov
test
xor
out
pop
jp
jge
mov
mov
pop
in
je
lcall
loope
mov
das
data16
idivb
ret
sbb
push
fmull
icebp
outsl
xchg
mov
pusha
rol
lods
out
push
je
data16
sub
jl
jg
fwait
jae
sbb
jnp
sub
push
adc
es
div
inc
mov
push
jo
pop
ret
xor
aam
aas
pop
shlb
cmpsl
out
push
sbb
sbb
fs
pop
sbb
xchg
into
jnp
enter
and
xchg
mov
mov
sbb
out
rcr
sub
mov
and
lret
bound
pop
iret
pop
fisttps
and
gs
xor
test
in
mov
std
imul
pop
dec
into
push
xor
mov
int3
and
fildll
inc
xchg
sbb
inc
add
adc
inc
inc
sahf
nop
sbb
test
call
add
stos
cmpl
in
inc
mov
insl
ficoml
inc
idivl
cmp
cmc
ret
and
cmc
add
jmp
into
int
adc
mov
xchg
fcmovnu
jnp
loope
dec
cld
pop
pop
sahf
outsb
imul
js
mov
or
push
int3
xchg
mov
test
jnp
cwtl
dec
dec
ds
dec
adc
dec
mov
int3
xchg
mov
aam
imul
pop
pop
addl
sbb
mov
cmc
add
into
and
adc
push
and
push
push
stos
adc
mov
push
ret
jo
sbb
ret
movsb
idivb
jg
xchg
mov
imul
mov
popa
push
outsb
push
cmp
push
mov
mov
addr16
std
fisubl
inc
shl
mov
out
jnp
sbb
in
fldt
ficompl
adc
mov
adc
ficomps
add
insl
cmp
sbb
sbb
int3
inc
push
mov
sbb
add
pop
mov
mov
dec
dec
data16
call
fcmovne
fdivs
or
xor
sub
ret
nop
or
lret
add
mov
adc
pushf
jno
xor
add
jnp
mov
subl
xchg
sahf
cmp
sti
jp
inc
xorl
cli
jbe
cltd
inc
xchg
lret
movsl
sub
cmp
xor
imul
leave
inc
hlt
sbb
push
mov
mov
add
xor
popf
mov
cmp
fidivl
cmp
inc
jbe
mov
repz
mul
or
ret
adc
jae
je
std
fistpl
dec
pop
outsb
into
push
lds
pop
add
lahf
rcr
fidivrl
mov
pop
lret
movsb
call
addr16
movsb
loope
testl
pop
jge
imul
shr
ret
cmp
mov
dec
pop
jg
adc
scas
pop
dec
dec
jmp
pop
sbb
adc
clc
mov
sub
cmpsb
add
leave
jecxz
or
xorb
adc
push
rcr
inc
loop
ljmpw
scas
inc
mov
sbb
ds
mov
push
jmp
or
cmpsl
jns
inc
xor
movsb
jecxz
out
pop
int3
je
add
pop
es
notl
sub
les
fistl
jmp
mov
ret
inc
pop
xchg
in
add
dec
ficomps
ds
in
imul
xchg
push
cld
in
sbb
lea
xchg
int3
pushl
loopne
sub
push
mov
in
jl
cmp
mov
dec
js
pop
mov
cmp
xchg
imul
pusha
xchg
je
adc
or
and
add
jnp
cmp
flds
push
pusha
aaa
sub
mov
jnp
popf
popf
jnp
sbb
pop
xor
mov
int3
mov
out
pop
sbb
in
mov
mov
push
and
vmovlps
imul
mov
test
or
hlt
jl
ja
cs
addl
sbb
out
fmull
add
fsubp
dec
adcl
push
pop
imul
out
mov
inc
inc
cmp
jl
cs
dec
test
cwtl
jbe
out
jl
push
sub
mov
inc
xor
outsl
cmp
or
mov
stos
je
sub
mov
add
xchg
mov
sub
jno
mov
lea
mov
sbbl
pushf
inc
out
jbe
mov
cmp
add
imul
jne
pop
hlt
loop
mov
or
repnz
pop
push
xchg
fistpl
mov
lsl
outsl
stc
and
sbb
in
xchg
push
rorl
leave
popa
test
cwtl
mulb
adc
push
cmp
mov
sbb
pop
inc
push
lods
mov
xor
ljmp
add
dec
pop
rorl
pop
lret
sub
and
fwait
bound
push
sbb
sar
jmp
mov
xor
jb
adc
lahf
out
lock
or
mov
out
xor
cmp
push
push
test
sub
adc
push
pop
add
xchg
loop
xor
jmp
xchg
pusha
mov
sarb
mov
add
mov
out
pushf
leave
mov
xor
push
pop
sbb
fnsave
shrl
int
js
shlb
imul
add
and
ret
pushl
cmpsb
sub
fldenv
cld
sbb
dec
xor
mov
xor
aaa
xor
pop
std
in
xor
jns
mov
outsb
in
arpl
xchg
frstor
lret
movsb
mov
imull
in
mov
lret
ret
pop
movsl
mov
jne
out
in
into
mov
insb
das
arpl
roll
push
insl
sbbl
adc
pop
ds
popf
je
push
mov
push
sub
adc
jg
adc
fildl
in
fimull
add
mov
test
nop
imul
sub
jnp
xchg
mov
in
repz
mov
insl
jmp
lea
ret
test
outsl
jmp
inc
fists
xlat
inc
pop
or
data16
push
ja
jo
adc
imull
dec
lahf
dec
loopne
mov
pop
pop
jne
xchg
cmp
or
leave
sub
jns
dec
add
jno
test
cmpb
add
gs
pop
sub
mov
push
nop
mov
outsl
out
inc
cmp
mov
and
or
xlat
mov
in
loopne
call
int
loope
jne
sbb
inc
roll
xor
push
adc
in
out
mov
int
sub
aad
fwait
enter
clc
add
push
or
icebp
out
xchg
sub
outsb
push
fsubr
hlt
xor
mov
insb
adc
xchg
cmp
jle
ds
fwait
outsl
inc
push
jo
call
jns
mov
lea
mov
cmp
out
popf
or
cmp
adc
xor
imul
mov
mov
fcmovbe
lahf
mov
xorl
push
outsb
xchg
rorb
rorb
cli
jmp
out
adc
repz
leave
jns
add
inc
lods
fisubrl
push
mov
and
cmp
lahf
mov
lds
ja
pop
in
push
fwait
push
sub
and
cmpb
fbld
push
notl
mov
jmp
lds
inc
and
out
sahf
arpl
push
rcll
xchg
cmp
xchg
ret
xchg
mov
sub
outsl
add
fisttpl
adc
test
or
add
orb
shlb
inc
mov
xchg
mov
andb
cmp
cmpsb
mov
xor
xchg
and
ret
mov
cmpsl
pushf
jmp
roll
das
adc
mov
push
ret
jb
in
fdivl
rol
push
xchg
aas
js
inc
inc
out
sub
aad
int3
inc
push
mov
xor
out
movsl
int3
cmp
data16
fs
cltd
xchg
dec
pop
test
add
loopne
sub
dec
xor
xorb
jecxz
out
jg
mov
inc
dec
std
cltd
sbb
adc
xchg
mov
daa
mov
es
iret
mov
cltd
js
adc
pop
dec
movsb
fnstenv
mov
mov
mov
jge
mov
add
icebp
lods
daa
imul
std
sbb
out
add
mov
mov
insl
outsl
pop
xor
frstor
fwait
data16
stos
sahf
enter
int3
jecxz
or
mov
dec
add
mov
adc
cli
inc
dec
gs
sbb
mov
lock
cmp
insl
push
lcall
pop
xchg
lcall
loopne
sub
loopne
lcall
adc
push
fidivl
fisttps
or
ret
cltd
xchg
pop
lds
xchg
jmp
dec
arpl
jl
enter
fcompl
xlat
out
stc
pusha
lcall
imull
adc
sub
mov
mov
js
jle
ja
std
jge
ss
mov
jp
orb
jge
jo
pop
popa
ss
leave
imul
cmc
xchg
pop
mov
cmp
repnz
test
cmp
vsqrtps
testl
xchg
inc
sbb
dec
scas
jno
inc
and
lods
mov
cmpsl
in
out
stos
inc
repz
push
scas
mov
or
mov
enter
pop
mov
lret
and
in
into
pushf
pop
xchg
mov
pop
sbb
xchg
mov
push
and
daa
sti
add
and
aas
lods
xchg
bound
fbld
dec
je
xor
cwtl
lock
fsubrs
jp
pushf
sub
add
xor
repnz
pop
out
push
jl
xchg
and
xchg
push
arpl
cmp
lea
sahf
out
in
sub
clc
mov
add
mulb
and
xor
push
push
xchg
int
adc
mov
lahf
jmp
lods
jns
jne
pop
xchg
lcall
mov
mov
jns
xlat
add
pop
mov
jge
fs
or
xor
jb
pop
add
testl
mov
push
cmc
pop
test
mov
mov
loopne
push
mov
stos
es
in
add
cmpsb
test
or
adc
xor
dec
mov
push
ja
bound
mov
aad
inc
sbb
and
push
mov
lods
push
lods
xchg
cmp
adc
rcrl
and
push
jnp
call
arpl
sbb
insb
sub
mov
out
xor
subl
jle
scas
lods
mov
sarl
ljmp
stos
cwtl
pusha
lock
enter
mov
bound
jmp
insl
or
fwait
js
test
mov
ret
ss
aad
cmp
je
es
push
arpl
clc
add
add
lahf
mov
clc
or
sub
inc
push
dec
sahf
insl
and
fsubrs
test
jle
stc
sub
inc
fdivl
xchg
push
mov
cs
lods
xorb
fisubl
xor
cltd
and
inc
data16
push
jp
lock
stos
mov
insb
inc
loop
mov
and
xchg
cmc
mov
jp
ss
lods
add
movsb
fcoml
outsb
aad
xchg
in
mov
movb
ss
add
jmp
mov
or
xor
pop
sub
test
mov
inc
mov
lock
fnstenv
mov
outsl
mul
idivl
imul
je
jno
dec
int
lret
ret
out
push
xor
out
test
popa
jo
adc
jle
mov
or
cmp
fcoml
inc
push
mov
xor
out
xor
test
addb
push
or
mov
mov
fs
mov
loope
push
cmp
xchg
lods
xlat
nop
or
sahf
xchg
ds
leave
arpl
repnz
enter
lahf
out
mov
enter
jl
ror
mov
adc
lret
sahf
scas
cmpsb
and
shl
ret
pop
sub
push
jo
push
sub
dec
push
in
mov
lods
mov
arpl
or
lret
cmp
loopne
adc
xor
pushf
lcall
add
mov
add
shrb
xchg
sub
mov
je
popf
lock
repz
xchg
pop
mov
lahf
xchg
cmp
sub
push
push
inc
xchg
dec
lret
xor
add
fsubl
js
pop
inc
xchg
out
ror
sub
cltd
mov
sti
dec
pop
add
mov
push
addr16
mov
idiv
jmp
inc
aaa
mov
mov
mov
test
jg
cmp
int
movsb
and
les
xchg
test
scas
and
popa
dec
jg
outsl
sub
inc
push
loopne
xchg
sbb
daa
add
sbb
test
test
inc
cmp
cmp
xchg
rcr
add
push
push
mov
push
pop
dec
jg
mov
mov
cmc
les
push
mov
int3
mov
pop
subl
mov
andb
repz
mov
addr16
repz
dec
sub
sub
push
inc
add
push
lods
mov
jne
loopne
adc
lcall
clc
int
outsl
xchg
les
inc
ds
test
cmpsb
push
arpl
lcall
rol
pop
shl
ss
inc
test
xlat
rcr
sub
daa
lock
xlat
negb
push
adc
shr
mov
mov
sahf
cmpb
into
aas
in
outsl
push
test
inc
aaa
adc
add
sbb
sub
mov
pop
add
popf
xor
dec
and
addr16
stos
andb
test
mov
jnp
push
inc
lahf
jg
or
out
pop
pop
add
cmp
into
lods
clc
push
lds
or
dec
pop
fistl
sbb
inc
test
and
leave
push
je
aad
cmp
in
or
cmp
sarl
mov
dec
into
adc
shll
ljmp
lea
inc
sub
inc
stc
push
in
dec
jbe
ja
xchg
cmc
inc
add
jbe
xchg
fmull
std
or
cmc
nop
sub
adc
fisubs
xor
popa
and
loopne
subl
icebp
out
mov
jns
cwtl
mov
arpl
inc
lea
insl
data16
dec
movsb
int3
cmp
ja
outsb
inc
xor
xor
pop
dec
pop
arpl
add
jae
pop
adc
scas
mov
push
inc
pop
jl
aam
sub
stc
or
dec
cmp
dec
sub
cmp
add
mov
les
ja
lahf
inc
inc
adc
cmp
lods
xchg
out
jecxz
in
lcall
pand
or
adc
jns
movsl
push
notb
cld
popf
cwtl
mov
add
lret
imul
inc
xchg
adc
fiadds
adcb
push
xor
xchg
inc
std
mov
push
test
repnz
dec
xchg
shl
les
sub
or
call
aad
jo
xor
orb
push
lahf
mov
jns
xchg
jge
jne
into
mov
inc
dec
mov
aad
cmpl
xor
push
loop
inc
xor
adc
es
fnsave
xchg
fidivrl
jge
sub
dec
xchg
jp
lea
shl
shll
shll
in
clc
adc
add
add
fadd
gs
xchg
adc
inc
jle
push
mov
jne
mov
xlat
vpmacssdqh
mov
bsf
scas
jp
xchg
dec
mov
pop
jae
fistl
xchg
loope
push
add
mov
xor
pushw
inc
bound
loop
xlat
sbb
pop
xchg
jg
cmp
and
cmpsl
add
mov
push
mov
sbb
adc
adc
iret
movsl
sbb
in
push
cli
ret
pop
std
mov
shl
mov
sahf
or
std
popf
add
jbe
jns
push
pop
call
sub
push
adc
mov
cmpsl
adc
lcall
sub
cmpsb
movsl
lods
push
aas
les
int3
bound
jecxz
pop
jecxz
jecxz
add
aad
daa
enter
ds
cmpsb
aas
rcrb
ficompl
shrl
cld
jb
movl
icebp
add
add
jmp
mov
pop
jo
cmp
cmpsb
push
cmp
push
and
jge
or
push
cli
jnp
adc
dec
adc
pop
out
insl
push
jg
insb
sbb
push
dec
mov
xor
mov
stos
loope
jmp
dec
add
add
jle
jmp
cmp
arpl
out
cmp
movsl
inc
cli
cmp
cmp
iret
sbb
mov
es
fcoml
insl
xor
xchg
lods
rcr
pop
lcall
adc
jno
mov
xor
xorb
cmpsb
pop
shrb
ror
cmpsb
sub
pop
sbb
dec
es
jno
sbb
mov
or
inc
daa
push
data16
pushf
ja
dec
jmp
add
icebp
outsl
cmpsl
ffreep
sub
xchg
push
inc
push
daa
dec
mov
repnz
fldcw
loope
ss
popf
fists
test
shl
test
and
repnz
push
les
sbb
aaa
lret
out
xlat
mov
cmp
in
loop
mov
mov
sub
rolb
cmp
ror
push
fwait
xchg
jnp
jbe
sub
adc
or
in
mov
call
fsts
xor
jmp
stos
daa
scas
jp
xor
rorl
add
jns
es
inc
ljmp
fisttps
adc
xchg
jmp
lock
push
add
push
and
pop
fwait
jae
sub
inc
sub
sub
pop
insl
mov
addl
sbb
orl
out
pop
mov
das
icebp
sub
add
addl
sub
jns
sbb
inc
mov
xor
shrl
and
out
mov
test
cvtps2pd
call
into
test
xchg
lea
mov
aas
add
push
popa
xchg
loopne
shrb
rcll
pushf
cmp
movsb
in
loopne
call
fisubl
pop
sahf
inc
and
adc
fdivr
xchg
push
push
test
test
fcomps
mov
or
jle
jae
insl
mov
and
test
sub
dec
scas
sbb
sbbl
mov
jg
aam
in
insl
sti
leave
popa
sub
lcall
adc
setl
loop
cwtl
dec
shl
rolb
xor
inc
cmpsb
cmpsl
xchg
stc
pop
fs
pop
jle
cs
lock
pushf
dec
push
inc
mov
adc
inc
pop
add
xchg
pusha
push
mov
jo
shrl
sub
mov
jge
add
loope
cmp
sbb
iret
mov
mov
ret
lods
push
pop
clc
lods
or
pop
fwait
cld
out
dec
cs
jo
xchg
addb
clc
adc
shlb
and
filds
jno
push
or
adc
and
fldcw
imul
xchg
push
jecxz
movsl
fdivrl
push
push
popf
or
fwait
cmc
mov
adc
stc
cmp
hlt
or
jae
ret
mull
push
sbb
xor
sub
int
fidivrs
pop
sub
cmp
stos
clts
xchg
loop
cmp
pop
cmp
push
pop
xor
push
popa
dec
shrl
pop
ret
fstpl
loopne
outsb
outsl
pop
shll
or
ljmp
cmpsl
jae
mov
movsb
xchg
pop
adc
push
and
pop
lret
je
out
lret
jo
ljmp
sbb
push
push
bound
push
int
xchg
adc
arpl
fisubrl
sub
or
fimuls
shrl
mov
fildll
xor
popf
xchg
dec
inc
daa
pusha
je
mov
adc
imul
mov
push
push
sub
xor
mov
movsb
pop
data16
push
mov
add
xchg
lahf
aam
lods
xor
into
xor
sbb
and
dec
dec
jle
loope
xlat
ret
push
rcrl
xor
lcall
pop
clc
sbb
vpmacswd
mov
xchg
loopne
sahf
out
gs
insb
mov
imul
xor
mov
out
adc
dec
sub
cwtl
test
dec
stos
icebp
jl
ds
fldcw
out
lods
rolb
xchg
imul
sbb
mov
lock
xor
jecxz
pop
in
mov
aam
aas
xchg
fs
cld
fstl
and
xchg
cmc
and
xchg
jo
mov
xchg
stos
dec
popa
mov
out
lahf
ret
inc
pop
sub
push
inc
xlat
lcall
rcr
add
adc
sbb
mov
mov
mov
sbb
adc
inc
sbb
cli
pop
ret
xchg
ret
rorl
push
jmp
fnstsw
nop
sbb
inc
shlb
lahf
and
lcall
sbb
loop
pop
or
jns
sbb
pop
adc
inc
inc
in
aam
repnz
mov
adc
mov
pop
sub
pop
push
ret
dec
ret
mov
bound
mov
xchg
inc
fs
shr
mov
pop
std
fnstenv
loop
xchg
and
lea
xor
ret
xor
popf
in
inc
inc
and
fisubrl
xchg
jp
jb
jb
cmp
rcrb
lea
mov
lods
ljmp
jle
mov
inc
xchg
in
fstl
jge
les
loope
ret
sbb
pop
or
fmull
jns
movsl
imul
test
adc
rolb
inc
mov
push
push
mov
jnp
ds
lds
ds
sub
aam
lods
mov
testb
jmp
mov
add
inc
lods
in
in
and
pop
ret
in
nop
fiaddl
cmp
out
push
nop
and
add
pop
mov
pushf
mov
imul
pushf
fstpl
xlat
lcall
daa
mov
inc
jmp
stos
mov
fnstcw
add
xchg
xchg
scas
or
pusha
add
filds
mov
test
out
sar
xchg
es
fucomip
aaa
in
cltd
jge
imul
hlt
insl
sbb
enter
ret
and
or
aaa
mov
inc
das
inc
jg
push
fs
cli
or
xor
sahf
subl
jl
mov
cmp
pop
nop
out
insl
movsb
into
xor
test
xchg
pop
dec
pop
insb
add
in
xor
jl
test
jbe
lret
add
pop
mov
mov
mov
dec
cmp
xlat
mov
adc
xchg
xchg
mov
mov
loope
sti
xchg
fisttpll
rcll
pop
mov
xchg
xor
sbb
cmp
jbe
sbb
ud1
and
fisubrl
inc
inc
cmp
enter
pop
in
stos
test
pop
dec
aaa
and
addl
pusha
dec
mov
xor
mov
push
mov
ja
sti
push
push
dec
add
std
push
out
pop
xchg
add
jo
sahf
jo
mov
pop
mov
pop
arpl
xlat
test
shrl
and
ds
in
mov
gs
daa
lds
xor
push
aam
mov
les
bound
not
xorb
sub
jns
cmp
mov
and
jecxz
cmp
inc
push
sub
into
inc
jg
sahf
add
fsubrl
popa
loop
cmpsl
cmp
ja
jge
popf
and
lock
mov
fcmovu
jb
movsl
fwait
insl
pusha
cmpl
fdivr
sub
inc
test
push
jmp
addr16
push
xor
mov
mov
fucomip
out
popf
movsb
mov
lret
test
scas
mov
addb
test
fwait
mov
call
dec
mov
movsl
jno
pusha
dec
fstpt
add
xchg
xor
xchg
dec
shl
inc
xor
rcll
or
mov
aad
movl
inc
cmpsl
in
inc
test
mov
lock
adc
mov
and
ja
sub
push
pop
and
mov
dec
fstl
loope
and
movsl
lcall
jl
xlat
jae
add
mov
push
insb
cwtl
mov
call
sbbb
xor
int
outsl
pop
xchg
adc
and
cmp
adc
or
jb
mov
xchg
sbb
jmp
js
mov
iret
mov
and
bound
or
inc
mov
xor
xlat
inc
inc
or
xchg
cmc
xlat
cmp
ss
dec
xor
dec
scas
loopne
daa
nop
call
dec
cltd
stc
repnz
ret
or
insb
xchg
push
jnp
or
push
cmp
cltd
mov
inc
shrb
mov
inc
sub
ss
test
pop
pop
pop
push
jp
adc
push
push
mov
repnz
xor
call
mov
dec
es
mov
xor
fstpl
mov
aad
enter
jne
mov
mov
mov
cwtl
nop
and
dec
icebp
popf
fstl
push
jbe
adc
mov
push
adc
add
xor
mov
add
adc
xchg
out
add
ljmp
inc
inc
cmp
mov
xor
js
mov
mov
pusha
dec
dec
adc
into
add
test
sbb
mov
into
jmp
cmc
push
jnp
jl
xchg
xchg
int
mov
mov
fadd
or
or
fnstsw
repz
bswap
insl
in
inc
popa
shll
pop
adc
adc
daa
sbb
pop
dec
adc
jae
sub
xor
sbb
popa
cltd
xor
push
push
loop
fadd
dec
in
push
add
push
pop
scas
mov
enter
inc
movsb
fiadds
outsb
jbe
fs
shll
fwait
jle
push
cmpsl
mov
std
gs
cmp
movsl
lods
push
lret
or
and
push
pushf
outsb
mov
repnz
xchg
movb
inc
das
das
stos
lds
lahf
into
test
jge
or
rorl
mov
pop
je
jbe
push
repnz
adc
test
push
jg
mov
jp
or
mov
bound
call
jno
sbb
adc
add
add
ds
dec
add
pusha
and
repnz
jbe
insl
jecxz
pop
push
bound
ds
test
into
fs
jno
mov
lock
xchg
shll
push
pop
pop
push
sub
jne
loop
pop
call
xchg
mov
les
das
xchg
xchg
dec
cmp
jb
test
mov
jbe
adc
lahf
and
mov
leave
xor
mov
xorb
jge
add
and
lret
mov
pop
jecxz
lds
faddl
inc
sbb
cwtl
sub
inc
ret
xor
jns
ror
divb
and
push
sti
ss
mov
dec
subps
xlat
cmp
movsb
cmp
jp
inc
sbb
xor
mov
mov
je
push
repnz
ret
sub
clc
rcl
jp
int
inc
push
movsb
shrl
test
lea
push
sbb
jo
push
imul
sahf
fistpl
adcb
loopne
mov
pop
xchg
jle
and
push
stos
mov
pop
and
sbb
adc
ret
mov
arpl
daa
out
inc
js
dec
pop
dec
ljmp
add
cmp
sbb
mov
pop
ss
testl
jg
jno
stos
dec
mov
push
jp
sub
xor
xchg
jne
xor
sarb
cmp
pop
rcll
dec
gs
fs
lret
das
xchg
or
dec
fs
ret
test
or
int
pop
fs
adcb
sub
test
insl
xchg
or
cmc
jne
xor
jge
push
ffree
cmp
push
mov
pop
inc
jne
outsb
adc
stos
pop
push
shll
adc
mov
mov
inc
adc
popf
xor
aam
cmc
jnp
adc
adc
dec
imulb
jmp
ljmp
pushf
jne
lret
xchg
bound
mov
sbb
push
outsl
lods
nopl
bound
pop
sub
popf
jecxz
cmp
mov
lods
ret
pop
nop
fxch
shlb
aad
add
ljmp
stos
lcall
int
xor
das
movsb
mov
popa
or
dec
pop
adc
cmc
or
stc
pop
dec
pushf
xchg
sbbl
pop
add
scas
out
fcoml
jo
xchg
imul
xchg
sti
pop
sub
jmp
lret
lods
pop
jbe
stc
push
push
inc
pop
repz
or
push
cmp
pop
nop
movsb
sub
add
sti
pop
les
popa
cmp
adc
fwait
shrl
in
push
popf
mov
push
loope
push
rorb
loop
or
addl
in
mov
in
pushl
mov
xchg
gs
pop
xchg
push
xchg
stos
pop
adc
xor
nop
push
sbb
mov
fwait
pusha
jns
mov
movsl
adc
push
jl
or
pushf
loop
inc
in
fs
mov
and
cltd
mov
fs
out
insl
out
jp
adc
and
jae
push
cmp
or
cmp
or
lock
adc
rcrl
mov
jecxz
add
xchg
test
mov
test
xor
and
sbb
add
shlb
cmpsl
jl
dec
int
cmpsb
sub
mov
sahf
cmp
daa
mov
out
add
and
adc
and
dec
sar
cmp
outsb
and
iret
inc
cmp
add
pop
insb
andb
push
pop
ss
and
popf
inc
mov
sbb
imul
rcll
pop
inc
pop
les
mov
icebp
sub
mov
cmp
lret
jp
or
and
test
xchg
in
or
sahf
fs
xor
inc
cmpl
int
cmpsl
mov
es
pop
aas
sbb
push
cli
push
mov
fidivrl
out
icebp
xorl
dec
jl
mov
cmp
aas
adc
push
xor
mov
int3
mov
jo
mov
jo
nop/reserved
fbld
or
sbb
call
ret
adc
cld
inc
jp
pop
cwtl
in
mov
xor
cmp
lods
mov
into
imul
fmuls
jmp
pop
add
add
jnp
pop
jecxz
mov
mov
jne
add
xchg
or
adc
mov
scas
and
mov
into
bound
in
or
sub
dec
jnp
int3
xchg
jo
ja
push
jp
cmp
jne
push
dec
popa
in
dec
jp
outsb
xor
dec
mov
push
mov
jmp
inc
jnp
dec
and
jge
jbe
loopne
and
out
dec
xchg
outsl
adc
jmp
insb
xchg
sub
arpl
mov
int3
lret
sbb
rcr
mov
jnp
xor
data16
in
pop
jecxz
dec
mov
push
dec
cltd
cwtl
loope
cli
jg
jmp
fisubs
fnstenv
test
mov
mov
mov
push
movsl
repz
das
pop
mov
and
or
push
fs
in
mov
cli
sarl
shlb
mov
lret
movntq
out
mov
scas
outsb
in
stos
inc
mov
mov
cs
clc
mov
xchg
pushf
mov
pop
leave
insb
or
les
pop
inc
rep
dec
mov
bound
add
push
pop
or
in
icebp
loope
push
in
and
fwait
movsl
mov
ja
push
test
leave
jg
outsb
std
lret
pop
lret
sbb
stos
mov
pop
dec
and
stos
cmp
adc
iret
inc
sub
mov
push
cmpl
pushf
sbb
fisttpl
stc
popf
xor
rcll
aaa
xor
xor
test
adc
scas
ja
sbb
or
xor
stc
ficoms
lret
lcall
rcl
cltd
ljmp
fwait
repnz
pop
xchg
test
es
mov
pop
iret
xchg
call
mov
in
iret
notl
jl,pt
cmp
gs
xor
je
sbb
mov
sti
test
add
sub
xor
insb
cld
test
fxch
mov
clc
mov
push
bound
test
loope
cmc
adc
lock
jno
movsl
pusha
jne
and
mov
adc
call
incb
mov
and
mov
mov
xchg
sarb
lock
ljmp
sbb
hlt
mov
movsb
and
test
sbb
divb
mov
fst
iret
sbb
xchg
lahf
leave
cld
popf
push
movswl
aad
add
bound
push
mov
mov
adc
jmp
jge
orl
jnp
out
inc
incl
outsl
jmp
push
xchg
mov
jnp
fildll
pusha
mov
cwtl
out
and
adc
in
lahf
push
movsl
mov
loope
cli
movsl
adc
xor
jno
jp
mov
inc
shll
lock
mov
push
jnp
cmc
adcb
mov
inc
xor
dec
adc
js
icebp
add
or
xchg
je
das
jne
insb
add
cmp
push
cmp
push
xchg
pop
mov
mov
dec
ficomps
mov
ret
pop
dec
cmpsl
repz
mov
dec
mov
mov
xlat
cmp
xchg
dec
or
push
push
xchg
insl
lret
jge
faddl
lea
clc
jge
push
jne
cmpsb
cmpsb
faddl
loop
jl
sbb
daa
cmc
mov
and
cmp
adc
push
int3
mov
popf
sbb
mov
popf
insl
bound
rcrb
adc
ficoms
push
repz
push
pop
adc
jge
test
push
lods
repnz
xchg
repnz
mov
loopne
data16
cli
fsubrl
xchg
ljmp
movsl
pop
mov
jo
adc
es
fldt
pusha
dec
mov
imul
xchg
cmc
scas
aaa
mulb
in
dec
adc
mov
sbb
shrl
mov
add
jge
bound
and
push
sub
shll
scas
cwtl
dec
in
dec
imul
or
push
cmp
cmc
into
pop
fisubs
out
fimuls
shrb
cmpsb
outsb
jns
inc
pop
icebp
jle
xchg
mov
movsb
adc
sbb
inc
jo
imul
outsb
xchg
push
mov
xchg
or
sbb
pop
jne
mov
call
out
xor
in
xor
push
mov
fwait
push
sbb
inc
loopne
cmp
pop
insb
pop
mov
adc
insb
jg
mov
push
test
push
sub
inc
lods
mov
sub
pushf
int3
sub
daa
xor
cmp
or
popf
push
and
push
xlat
insb
jb
mov
ret
add
aaa
mov
mov
pop
aad
push
xchg
cs
mov
xor
add
addl
jne
out
inc
les
mov
mov
ficompl
pop
in
scas
adc
lcall
xor
int
mull
sub
cmpsb
stc
lcall
mov
push
aam
and
dec
lods
pop
sub
in
xchg
loope
cmp
mov
mov
dec
orb
jne
adc
mov
ret
add
and
cmpsb
fldcw
mov
adc
cmpsl
jns
push
negl
shll
add
aaa
sub
test
loopne
and
add
lea
cwtl
mov
jecxz
je
jecxz
je
daa
adc
fldenv
mov
xchg
sbb
mov
sub
fs
pop
mov
sarl
sti
sbb
mov
jle
leave
out
cmpsw
jb
int
imul
arpl
jge
out
rolb
xchg
inc
and
hlt
cmp
test
inc
scas
inc
shll
lock
add
mov
ds
movsb
mov
sub
pop
sbb
int
pop
mov
test
pushf
lds
dec
out
jl
xor
aaa
mov
push
test
out
lods
cmp
push
pop
out
sbb
mov
rcr
dec
insl
inc
cli
mov
clc
dec
inc
push
int3
and
xor
push
add
adcl
inc
aaa
jg
add
test
es
ds
mov
fstl
into
mov
mov
lea
mov
and
notl
mov
lods
stos
leave
pop
dec
imul
out
in
rclb
jmp
int3
xchg
lods
adc
call
push
pusha
outsb
fidivl
and
fs
jns
adc
aam
in
cmp
add
dec
sahf
pushf
mov
push
popf
aaa
in
add
cmc
dec
jg
cmp
jmp
int
js
lret
hlt
or
aaa
or
ret
out
jmp
add
jle
and
push
cwtl
fiadds
test
push
bound
test
int
xchg
lock
lret
push
pop
lods
jecxz
loop
inc
xchg
es
mov
out
arpl
add
sbb
fisubrl
xor
jbe
mov
mov
cmp
hlt
lods
outsl
aaa
roll
pop
dec
jae
out
cmp
add
int
adc
or
cld
das
int3
fs
pop
fdiv
cmp
pushf
add
imul
cltd
lds
ret
xor
mov
popl
push
dec
jnp
push
lock
xchg
xchg
out
aam
lods
sbb
mov
outsl
push
jns
lcall
bnd
cld
xor
je
mov
push
push
mov
inc
xchg
add
sub
xchg
leave
pop
sub
ficoml
or
orb
and
mov
outsl
xor
lds
inc
das
addr16
adc
out
jg
push
addr16
push
out
int3
lea
fwait
lock
and
mov
pop
pushf
jns
dec
mov
punpcklbw
cmpsb
adc
jb
mov
xchg
jo
or
jmp
mov
mov
fcom
pop
fdiv
movsl
icebp
mov
adc
adc
mov
cwtl
fwait
daa
mov
and
jo
dec
insl
in
dec
cmpsb
cli
test
out
jmp
xchg
push
push
push
clc
dec
cmp
mov
push
sbb
pop
leave
in
jl
iret
stos
push
pushf
push
loopne
mov
test
test
xchg
inc
ss
mov
xchg
lods
dec
sub
cmp
out
pop
lcall
xchg
push
in
fdivl
pop
inc
xlat
enter
pop
mov
stos
add
xchg
adc
xchg
and
sahf
insl
ret
not
arpl
aas
data16
push
xor
jno
dec
jecxz
addr16
outsl
stos
mov
inc
lret
xor
push
jmp
xchg
lahf
movsl
insb
ljmp
mov
lret
jge
or
jb
and
dec
mov
es
ljmp
pop
push
xor
dec
xchg
ret
aam
mov
insl
mov
jecxz
jmp
dec
sbb
cmp
sbb
jmp
mov
test
std
pop
jge
dec
dec
dec
lcall
cmp
fwait
push
xchg
in
cmp
sahf
pop
xchg
mov
arpl
in
mov
push
xchg
loopne
adcl
shrl
scas
adc
popa
xchg
in
sbb
inc
ret
lock
lahf
mov
sbb
or
adc
lds
stc
cmp
xchg
cmp
es
sbb
jmp
hlt
stc
loope
das
jns
cmp
xor
pop
lods
mov
int3
mov
cmp
cs
sub
add
les
fcoms
xchg
add
aaa
add
fidivrs
in
enter
std
cmpsl
lds
cmp
mov
xor
scas
mov
jb
xlat
inc
mov
ljmp
insl
pop
rcrb
xor
mov
xor
repz
dec
xrelease
pop
inc
adc
adc
cwtl
pushf
dec
repz
pop
roll
jge
xlat
sub
sbb
imul
cwtl
xor
lahf
sarb
call
ficompl
out
orl
ss
sbb
mov
insl
ja
ret
pop
xchg
je
pop
ss
mov
mov
jae
or
or
mov
mov
pop
push
lea
jmp
dec
imul
mov
cmc
mov
cmp
cmp
cmpxchg
cmc
mov
push
adc
pop
dec
mov
push
push
in
or
dec
cmp
or
sub
dec
lret
mov
ljmp
rorb
out
and
aam
cs
faddp
fs
out
push
inc
dec
outsb
cmp
sbb
xchg
xor
push
sbb
jno
rolb
test
sbb
adc
cli
jns
fsubl
movsl
movsb
mov
aad
or
sub
inc
dec
mull
rcll
and
sarb
adc
push
fadds
lds
mull
das
gs
lahf
jb
xor
push
add
mov
outsb
push
add
pop
push
jae
cli
add
decb
aaa
sbb
les
jecxz
jae
add
sub
push
sub
pop
inc
repz
aad
pop
mov
leave
sub
push
outsb
push
or
ljmp
out
mov
pop
fucomi
shlb
cmpsb
sbb
jno
cmpsb
cmp
fs
ja
pop
xor
pop
or
jp
push
nop
sub
and
addr16
and
orl
and
into
out
inc
xchg
mov
xbegin
insb
add
sub
or
imul
popa
rorl
fidivs
clc
inc
jns
push
mov
aad
test
imul
add
xchg
add
test
popf
or
sub
push
jge
cmpsb
cmc
mov
push
outsb
xchg
inc
lret
adc
mov
dec
out
push
fs
arpl
fnsave
in
xchg
and
xchg
lea
add
mov
imul
fldl
decb
push
mov
fldl
fsubs
call
shlb
call
or
pop
xchg
mov
sub
inc
mov
stc
jecxz
shlb
ds
ds
add
mov
push
sub
sub
dec
ljmp
ds
mov
adc
ret
xor
dec
dec
fwait
cmp
add
pop
jge
je
or
cmp
lcall
je
pusha
dec
sahf
xchg
pushf
push
and
or
mov
movl
xor
jns
push
hlt
jg
add
in
mov
cli
mov
lds
lret
ret
sahf
ds
push
outsl
ss
jmp
cmpsl
push
out
orb
addb
aad
iret
int
mov
fmuls
xchg
lds
cmpl
cltd
insb
xor
movsb
imul
andl
out
jns
das
imul
mov
mov
fcmovnbe
and
push
movsl
mov
andb
cmp
jmp
rol
aam
xchg
out
cmc
mov
dec
mov
mov
fwait
lods
jb
out
stc
jbe
adc
mov
test
adc
xor
xchg
int3
insl
inc
fidivrs
adc
push
fldenv
and
pop
ljmp
mov
pop
or
outsb
icebp
dec
lret
xchg
and
je
addb
push
inc
dec
ja
mov
bound
mov
sarb
adc
aaa
sub
repz
cli
add
std
push
push
mov
fildll
push
jmp
add
push
xor
push
cwtl
insl
push
push
sub
mov
rcrl
daa
sahf
not
xchg
fistpl
xor
pop
push
icebp
lret
iret
or
and
daa
fisubl
mov
aad
out
mov
jmp
ljmp
in
fldenv
mov
insl
mov
call
xor
data16
lock
mov
mov
xchg
test
cwtl
mov
pop
insl
dec
mov
xchg
cmp
outsb
lds
fisttpll
out
test
and
cli
f2xm1
ja
in
jo
xor
in
inc
adc
std
or
addb
lods
movsl
adcl
mov
push
mov
cmp
mov
jo
sbb
movsl
mov
icebp
dec
nop
or
inc
out
xchg
out
nop
mov
pop
xor
push
faddl
or
insl
popa
cmp
pop
xor
lods
out
shll
mov
hlt
loopne
push
lret
cmp
popf
sbb
mov
inc
fstps
and
xor
xor
es
testb
shll
jle
arpl
pop
or
adc
repnz
int3
inc
loope
jmp
bswap
loop
jne
lahf
mov
xchg
xchg
cmpsl
adc
add
push
xchg
addr16
scas
sbb
adc
or
rcrl
pop
scas
les
mov
mov
inc
scas
cld
inc
push
cmp
jae
stos
mov
and
push
xor
jmp
inc
sub
lds
popf
mov
scas
insl
insb
data16
adc
das
push
mov
and
lock
icebp
nop
sub
cltd
fsubs
insl
call
cmp
ficompl
mov
movsl
dec
jo
xor
sub
in
fsubl
sbb
inc
sub
das
push
decb
test
mov
and
inc
mov
int
ret
push
jmp
lods
test
in
int
fidivs
dec
jecxz
xchg
cltd
ds
push
push
fld
pop
add
addl
repz
xchg
cmp
lds
mov
and
loop
nop
loope
out
sub
and
cmp
insb
out
xor
or
out
inc
jne
xor
cwtl
fsubrs
dec
sbb
mov
int
sub
xlat
aam
dec
int3
add
stos
inc
icebp
shrl
repz
cmp
or
mov
sub
push
into
xchg
jns
and
jnp
leave
xlat
mov
sbb
pop
mov
mov
inc
push
aam
outsl
popa
sbb
cmp
pushf
ret
jl
std
inc
rclb
inc
push
sbb
push
aam
cmp
data16
mov
ljmp
pop
ffree
idivl
sbbl
or
aaa
imul
insl
pop
inc
xor
imul
out
cs
imul
jo
pop
sub
jae
add
cmp
insb
testl
out
xor
fsubs
stc
dec
inc
pop
and
mov
pop
mov
sub
in
jae
lock
aad
sbb
sahf
testl
adc
jl
imul
cli
xor
xchg
mov
fsubl
andb
and
es
daa
fwait
mov
cmp
cltd
sbb
fdiv
sahf
dec
stc
pop
and
push
ret
xchg
movsl
cmp
dec
inc
push
retw
sti
cmovg
clc
xorb
std
sub
xchg
mov
pop
dec
pop
cmpsb
adc
mov
and
sti
lods
insl
xor
je
in
sarl
out
testl
mov
aas
int3
leave
pop
xor
inc
push
sub
push
adc
stos
fiaddl
cltd
push
rolb
sbb
out
cmpsb
cmp
dec
clc
dec
cmp
adc
clc
inc
mov
test
ja
jno
jle
jne
push
clc
cmc
xor
xchg
std
ja
inc
inc
jp
sbb
iret
hlt
or
dec
les
jl
lret
lahf
or
outsl
pop
mov
dec
fisttpl
movsb
int
lods
lcall
push
outsl
push
popa
sub
addr16
push
inc
inc
xchg
int
sbb
xor
shrl
repnz
xchg
out
xchg
or
dec
fsts
ss
push
loope
fsts
mov
fcomps
pop
cmp
mov
fldt
out
xor
push
shl
lds
out
movsb
sub
imull
pop
insl
sub
sbb
cli
xor
adc
cltd
xchg
sti
push
shll
xchg
and
sub
mov
pop
inc
movsl
mov
filds
mov
insl
mov
jnp
cmc
push
mov
cmp
mov
jp
and
mov
sbb
dec
pop
mov
pop
adc
sbb
jnp
cwtl
lret
inc
fcmovu
shl
and
adc
in
aas
push
rorb
rolb
repz
stos
gs
sub
mov
insl
iret
inc
pop
jae
mov
pop
pop
pop
cmpsb
adc
lods
xchg
pop
pop
mov
loope
lods
pop
sbb
add
xchg
pop
inc
in
cmp
fs
cltd
mov
gs
pop
lock
sub
mov
jns
shrb
dec
pop
ljmp
dec
add
clc
push
jo
add
push
jne
dec
cmp
test
mov
jl
gs
sub
xor
orl
add
or
and
pushf
daa
sbb
lods
cs
loope
arpl
xor
add
scas
ljmp
xor
inc
pop
ds
mov
in
ficoms
mov
fs
pusha
aaa
xchg
faddl
pusha
js
mov
xchg
iret
cld
sahf
xchg
dec
nop
xchg
push
imul
push
test
xor
push
iret
lcall
adc
mov
jb
cmp
lods
cmp
mov
inc
pop
pop
lock
hlt
fwait
push
jmp
push
push
dec
jmp
push
xor
mov
mov
mov
mov
pop
loopne
stos
repz
sbb
add
popf
xchg
push
mov
in
pop
lret
les
test
xorl
std
inc
js
repz
es
inc
jo
or
inc
loopne,pt
adc
test
xchg
pop
cmp
test
inc
in
sahf
mov
test
stos
int
pop
scas
sbb
and
xor
push
daa
adc
sti
sub
fs
jp
jle
jl
mov
pop
add
movsl
add
add
cmpsl
mov
xchg
fmul
int3
inc
add
iret
mov
mov
out
push
push
int
and
cmp
sbb
and
xor
xlat
pop
sarl
jns
inc
sarb
lods
pop
sub
scas
outsb
out
pop
loopne
jle
jl
pop
sub
cs
mov
std
sub
leave
inc
mov
nop
mov
sti
cmpsl
mov
mov
es
cmc
sub
repnz
mov
in
jl
scas
cli
push
xor
push
jno
arpl
push
sahf
insb
fldl
mov
dec
cmpsb
mov
cmp
adc
outsl
mov
fisubrs
iret
push
daa
push
add
rcpps
fnstenv
jg
inc
pop
jae
jns
sbb
xor
insl
pop
dec
daa
addr16
cmpsb
outsb
or
adc
add
or
pop
push
mul
jbe
pushf
sub
lods
jl
scas
mov
lcall
sbb
jg
mov
mov
cmc
sub
loope
setnp
xchg
lock
std
fwait
rcl
out
push
cs
lods
pop
nop
mov
mov
pop
imul
scas
test
jb
in
xlat
in
hlt
sub
xchg
and
jbe
popa
sub
xchg
je
or
mov
adc
adcl
repz
out
push
lret
sbb
enter
hlt
or
cmp
push
shlb
nop
jns
test
mov
gs
loope
fcompl
js
mov
jg
cmovbe
or
or
test
add
pop
mov
sbb
pop
cmp
pop
ljmp
push
mov
dec
cmp
lods
xchg
mov
jecxz
jae
dec
and
mov
cmp
pop
fwait
mov
sbb
lahf
mov
mov
nop
mov
mov
push
cmpsl
xchg
ds
scas
jmp
dec
jg
paddusb
ja
inc
mov
adc
dec
outsb
pop
mov
mov
outsb
or
sahf
and
call
xchg
xor
icebp
lret
cld
aam
sub
mov
push
mov
push
pop
fiadds
xor
mov
xchg
fwait
scas
push
notb
jle
repz
sub
mov
loope
jbe
shll
pop
add
fstpl
cmp
in
lahf
aam
mov
mov
es
mov
test
into
das
pushf
subb
dec
enter
fcomip
fldt
in
fs
ret
push
and
icebp
sahf
fidivrs
mov
test
fistps
cmp
shrb
sub
daa
into
mov
bound
xchg
test
pop
test
sub
out
dec
cmp
push
rep
push
vrcpss
cmpsl
iret
or
imul
fmuls
out
jge
mov
mov
xchg
mov
sbb
icebp
incb
sub
jnp
das
loope
xchg
leave
dec
inc
cmp
and
push
aaa
push
sbb
xchg
jns
in
shlb
and
sbbl
inc
mov
mov
xchg
sarl
inc
call
mov
test
inc
cmpsl
call
push
jp
jge
or
dec
push
loope
pushf
xchg
or
jb
shr
add
in
mov
xchg
adc
imul
push
lret
roll
cmpsb
iret
or
pop
aad
decb
push
aaa
mov
loop
sub
test
jmp
push
adc
xor
mov
push
imul
faddl
lods
roll
push
out
pop
fidivrs
popl
scas
mov
mov
push
andb
push
cmpsb
clc
pop
jnp
shr
repz
fiadds
jmp
xor
test
fildl
add
mov
and
aad
movsl
mov
mov
icebp
sub
sbb
scas
mov
push
pop
lret
scas
pop
repz
stos
aaa
lcall
jmp
test
jmp
scas
cli
adc
mov
stc
test
fnstenv
jns
cmc
push
out
imul
ret
setl
dec
sbb
mul
cmp
inc
gs
xor
int
push
jmp
adc
lock
sahf
add
movsb
incb
movsb
pop
dec
xor
lret
pop
jecxz
fcmove
add
pusha
mov
lods
fnstsw
aas
fbstp
js
test
inc
popa
pop
jge
pushf
xchg
push
test
add
sbb
das
stos
pop
or
jns
xor
sub
cld
imul
lock
fldcw
pop
imul
mov
or
pop
jmp
xor
out
das
add
dec
fsubs
push
addr16
es
cmpsb
idivb
enter
int3
push
pop
scas
xlat
push
xchg
cld
testb
cltd
xchg
mov
ljmp
inc
mov
cmc
ret
and
shrb
jno
pusha
cs
dec
into
mov
ret
ficomps
shrl
jnp
inc
xor
mov
mov
push
repnz
addr16
push
and
adc
sti
jo
xchg
ljmp
fbstp
pop
push
imul
faddl
mov
lahf
inc
shl
bound
cmpsl
inc
push
out
jle
out
sarb
sub
subl
lea
mov
std
out
pop
or
sbbb
mov
in
dec
jle
lret
or
adc
call
jae
jne
push
jne
lea
jno
pop
idivb
sbb
lcall
lods
and
sub
xchg
test
jo
lods
popf
dec
xchg
push
loop
or
lea
out
inc
or
test
push
inc
add
mov
in
or
lods
add
mov
sahf
cmp
inc
rcrl
sbb
add
inc
ljmp
fsubl
cmp
jecxz
sub
and
dec
xchg
inc
push
jg
adc
xchg
push
movb
in
fistpl
mov
fmull
push
aam
mov
jo
cmp
push
mov
and
aad
pushf
stc
dec
pushf
mov
fisttps
bound
out
adc
stc
prefetchw
or
inc
pop
imul
xchg
push
out
mov
imul
les
push
push
push
xor
std
sbb
fstl
dec
cli
push
test
notb
mov
xchg
ret
add
adc
in
push
push
inc
xchg
xor
lret
pop
ret
and
mov
out
cmpsl
dec
hlt
rol
test
sbb
sahf
dec
xlat
sub
aaa
lods
sahf
lock
and
cmp
mov
outsb
mov
xchg
loope
int3
shrb
mov
fcoms
mov
jb
xlat
rcl
push
outsb
push
mov
mov
mov
clc
cmp
xlat
push
fisttps
push
or
cmc
loopne
mov
dec
insl
icebp
xorl
push
popf
je
add
bound
sbb
xchg
test
sti
jo
ja
aad
repz
cs
xchg
adc
and
cmp
jno
dec
addr16
aam
inc
inc
fmull
pop
pop
loop
dec
sub
push
mov
outsl
inc
or
sub
xor
fadds
out
xor
pop
cmp
dec
das
mov
jl
dec
loope
movsl
mov
jecxz
int
shl
std
adc
push
test
adc
dec
test
in
or
xchg
sub
inc
push
pusha
push
jnp
sub
mov
xor
stos
out
je,pn
or
or
mov
push
mov
xchg
jne
ss
xchg
std
enter
push
push
sbb
sahf
and
lahf
push
mov
mov
insl
pop
adc
lods
aaa
jns
and
rclb
insl
xchg
cs
scas
and
push
mov
xchg
sbb
mov
aaa
mov
aam
int
push
out
pop
push
sbbb
sbb
push
subb
inc
mov
lahf
sbb
enter
subb
or
xor
mov
stos
mov
cltd
xor
jnp
adc
mov
loopne
shrb
mov
pop
cmc
daa
mov
stos
or
jbe
push
adc
movntq
int
in
dec
mov
imul
inc
mov
dec
mov
dec
inc
sbb
jo
mov
or
and
adc
add
sti
jecxz
scas
pushf
pop
and
fstpt
aad
scas
jmp
sahf
ret
mov
in
shll
rcr
push
aam
xchg
adc
mov
in
xchg
cmp
mov
shll
fimull
call
icebp
in
mov
jns
or
cmp
cli
mov
mov
jmp
xchg
sub
das
sub
out
icebp
arpl
lds
repz
testl
jge
xor
loopne
cmc
frstor
push
js
mov
pop
je
fsubrs
jnp
or
xor
popa
cld
pop
lds
sarb
shrb
add
fisttps
gs
pop
lea
loop
add
aaa
repz
ret
aaa
or
das
dec
mov
cmp
pop
push
adc
cmp
hlt
ljmp
mov
roll
xchg
sbb
mov
lret
out
fucompp
int3
pop
dec
rolb
mov
cmp
enter
rep
data16
cmpsb
xchg
sbb
jne
cmpsb
push
jecxz
adc
fnstsw
push
cmp
jb
je
cmp
cli
xchg
sti
inc
jne
es
jl
lret
or
rcrb
outsl
cmp
adc
loopne
cmc
shll
in
rcll
sub
adc
push
inc
lods
xor
cmp
jo
loop
loopne
dec
pusha
mov
jmp
loop
dec
mov
xor
clc
sbbl
int3
sbb
push
mov
into
test
xchg
das
and
xor
xor
je
xchg
fadds
or
ss
call
lret
cmp
ljmp
push
pop
sub
loope
outsl
hlt
mov
cmp
jp
cmp
mov
fisubl
cld
mov
out
inc
clc
fiadds
in
inc
cwtl
and
fstpt
repnz
lods
jge
mov
loope
mov
sub
sbb
add
mov
rclb
fsubrs
mov
xchg
jns
hlt
jmp
push
lds
loope
cmp
or
dec
cmp
mov
dec
loopne
lea
adc
loope
lds
outsl
pushf
aas
xchg
cmp
iret
mov
push
lahf
bound
pop
jne
xchg
cmpsb
scas
jl
cmpsb
in
cmp
daa
cs
ss
jne
stos
jae
stos
out
jmp
xchg
add
and
xchg
xor
add
dec
pop
into
sbb
mov
cmp
call
lock
cmp
mov
fldl
les
cli
inc
mov
andb
ret
add
aaa
faddl
ds
lods
sti
js
aaa
cmova
add
dec
out
in
lods
add
pop
fisubs
lcall
jge
push
pop
call
dec
mov
push
jl
rorl
add
and
stos
jl
mov
mov
sti
xlat
dec
arpl
add
ror
sti
sbb
mov
sbb
pushf
mov
stos
sub
mov
lea
sbb
in
fidivrl
popf
out
mov
pop
adc
jmp
mov
out
cmp
and
ret
and
xchg
cld
das
mov
jnp
jge
inc
lcall
fisubrl
test
and
dec
lret
dec
push
xor
mov
sbb
push
dec
pushl
cmc
hlt
or
cmp
push
inc
push
sub
in
out
dec
pop
and
outsb
add
aad
fcomp
xor
xchg
stc
dec
dec
add
mov
and
test
jle
repnz
cmc
sahf
pop
decl
clc
sahf
es
test
ja,pn
mov
lcall
adc
lret
cmp
push
xchg
in
and
cmp
dec
stos
and
fists
push
cltd
dec
xlat
addr16
jno
hlt
wbinvd
incb
mov
cs
inc
lahf
inc
mov
mov
push
bound
andl
xchg
nop
lret
xor
xor
xchg
or
xchg
mov
cltd
mov
pop
fadds
adc
or
in
sbb
mov
push
cmp
mov
push
ds
push
orb
add
scas
and
xchg
insb
or
pop
cmp
pop
xor
sti
and
mov
adc
xchg
cmpsl
cmp
rolb
inc
lea
and
cmp
push
inc
adc
popa
test
push
ljmp
sbb
adc
or
mov
les
jle
add
int3
jns
push
jb
int3
sub
cmpsl
lret
mov
xchg
xor
pushf
hlt
push
xchg
xor
or
outsl
outsl
jo
aaa
enter
mov
ret
cmp
scas
dec
xchg
lret
in
movsl
xchg
xchg
xchg
dec
divb
fmul
xchg
inc
jl
inc
mul
aad
call
sbb
ljmp
stos
lcall
test
frstor
es
stos
cmp
xchg
clc
push
stos
movsl
adcl
mov
outsl
mov
add
sub
push
adc
clc
and
xor
enter
jbe
jb
int3
push
push
popa
inc
inc
jno
xchg
xchg
xlat
into
jb
adc
jmp
jmp
addb
add
push
cmpsl
lds
push
xchg
inc
mov
xor
nop
adc
xchg
mov
lret
mov
ja
imul
outsb
or
lods
popa
mov
je
xor
jae
add
or
pop
outsl
add
or
repz
ficomps
or
arpl
mov
lds
pop
out
test
mov
test
stos
lcall
test
adc
mov
inc
jmp
fucom
inc
and
push
xor
adc
push
inc
xor
jmp
xchg
decl
dec
jp
popf
in
inc
mov
mov
and
jecxz
xor
insb
dec
mov
mov
bnd
je
pop
xor
push
cmp
fcmovb
insb
jp
jge
or
leave
and
dec
add
inc
scas
xor
push
mov
jne
mov
mov
dec
jo
push
lahf
cmp
cmp
sub
jo
lea
data16
repnz
jo
mov
and
push
enter
inc
inc
ret
mov
ljmp
add
push
mov
push
sbb
xchg
in
or
ja
mov
cmp
aad
incb
pushf
popf
dec
fstpl
sbb
mov
clc
xor
insl
mov
inc
sub
movsl
jae
or
stc
and
jp
dec
mov
adc
add
adc
pop
xchg
push
in
xlat
nop
loop
cmpsl
mov
adc
mov
push
xchg
and
fwait
cmp
push
icebp
add
pop
daa
mov
cmp
jb
jp
sub
push
mov
in
dec
xchg
sbb
cmp
push
subb
mov
and
data16
iret
test
or
pop
add
in
cmpsl
into
push
lret
lcall
or
fwait
lods
es
adc
xor
xor
jne
push
sbb
shl
popa
test
out
pop
inc
jno
in
rorl
xor
add
cmc
in
sarl
sub
btc
mov
loope
sub
dec
out
lea
aad
add
sub
and
in
sbb
xchg
mov
mov
mov
fwait
imul
add
lods
fs
scas
jno
pushf
and
xlat
cmp
les
mov
fwait
daa
loop
adc
pop
subl
xchg
mov
cmc
mov
inc
jb
adc
dec
ljmp
cmc
outsl
stos
pop
dec
push
dec
pop
or
mov
dec
sub
adc
sbb
mov
sub
pop
ss
jg
or
sub
cmpsl
std
dec
pop
fisubrs
xor
adc
xor
mov
cmp
mov
jmp
fucomi
mov
jecxz
cmp
sbb
mov
inc
sbb
or
mov
fsubr
stos
jg
mov
push
shrb
xchg
dec
jle
in
inc
mov
add
movsb
jmp
shlb
mov
mov
mov
aaa
insb
jge
cmpsb
fisubl
mov
push
pusha
insl
adc
in
jno
jp
sbb
push
adc
mov
sub
mov
xor
ret
cli
fdivrl
or
in
stc
sbb
mov
or
stc
aam
mov
clc
mov
jno
cld
jbe
xchg
out
jle
je
push
xchg
mov
fcoms
fildl
inc
mov
rol
cmp
fsincos
pop
hlt
jg
lock
cmp
inc
sub
or
cmp
cmp
inc
mov
ret
and
cmp
rcrb
push
push
iret
cmp
lods
ss
inc
movsl
es
aam
inc
call
xchg
dec
mov
gs
cwtl
out
adc
xchg
mov
and
mov
inc
pushf
cmpsb
aad
int3
loope
pushaw
cmp
push
lret
push
xchg
push
jb
jnp
lcall
out
daa
inc
ret
into
cwtl
cwtl
dec
pop
jae
dec
cwtl
scas
sub
fnstsw
enter
lods
fwait
inc
out
jne
dec
popa
rcrl
enter
out
jns
clc
pop
outsl
mov
stos
xor
rep
orl
cmp
addr16
in
jnp
adc
stc
js
jp
mov
cmp
imul
mov
stos
dec
or
sbb
add
push
and
mov
xchg
pop
push
stos
pop
mov
jge
les
test
mov
mov
bound
cmp
jnp
ret
loope
enter
in
ret
sub
mov
adc
dec
pop
shlb
mov
sub
cmc
dec
retw
ss
adc
out
leave
stos
and
mov
dec
adc
jo
add
add
paddw
frstor
inc
ljmp
and
cmpsb
mov
jl
stos
push
and
clc
mov
out
push
adc
dec
cld
sahf
xorl
test
sbb
sbb
negb
pushf
and
mov
push
pop
fmull
punpcklbw
cmpsl
cld
in
pop
fidivl
mov
push
jno
jb
mov
or
int3
mov
shlb
xor
rcrl
and
mov
add
jp
int3
push
mov
pop
adc
dec
shll
or
mov
xor
mov
rcll
pop
mov
jo
fistpll
mov
jnp
repnz
movsl
and
das
loopne
test
dec
sbb
pop
mov
xor
loopne
mov
push
psraw
adc
xlat
loope
rcrb
mov
int3
mov
rcr
ret
imul
movsb
mov
add
lock
mov
ljmp
nop
push
sbb
dec
add
rcrl
jge
dec
jle
xchg
dec
sub
imul
fcoml
jns
mov
loope
cmpsb
into
int3
lcall
xchg
push
and
push
xor
int3
adc
and
jle
dec
inc
cmp
roll
into
mov
pop
repnz
or
insl
das
pop
mov
xlat
jp
clc
aad
sbbb
xor
or
sub
rcrl
icebp
lret
mov
test
adc
mov
mov
mov
fcoms
movb
ljmp
jmp
ret
bound
hlt
dec
cmc
jno
sub
jae
add
cmp
dec
loopne
rorb
mov
lahf
push
jecxz
inc
jmp
stos
outsl
dec
les
sbb
inc
inc
gs
fldenv
mov
add
push
test
xlat
and
xchg
testb
adc
mov
jmp
push
jecxz
clc
sbb
adc
xor
cmpsl
sbb
ds
inc
push
fmull
mov
jecxz,pt
loop
sub
out
xchg
cmovae
rcrl
xor
xchg
xorl
lods
mov
sti
adc
jp
pop
scas
push
cmp
in
fiadds
test
push
lods
and
sbb
sub
jecxz
inc
xor
and
call
pop
js
jbe
xchg
ja
sbb
call
jmp
push
jmp
and
cs
cmc
ss
push
pop
iret
lods
xor
loop
xchg
stos
lods
icebp
mov
adc
shll
push
lret
mov
int
mov
pop
xor
mov
test
or
leave
jbe
pop
sub
mov
inc
ret
pop
jmp
daa
shrb
movsl
sub
fldt
jmp
pop
mov
pop
and
ret
pop
push
jl
cmp
push
stc
daa
loopne
in
cmpsl
sub
mov
adc
push
push
repz
leave
insb
pop
cmp
in
xor
xchg
adc
jnp
movsb
sbb
outsl
stos
push
xchg
repz
rolb
mov
xchg
test
mov
push
pop
bound
cmp
mov
lahf
jl
lret
rolb
addl
addr16
sahf
and
ficomps
cmp
cmpsl
mov
push
aad
and
ljmp
andb
mov
into
xchg
rorb
push
scas
push
xor
xor
adc
cmp
and
sbb
xchg
fnstenv
test
imul
push
pop
sbbl
ljmp
jb
imul
sbb
xlat
lahf
xor
adc
sub
dec
inc
cmpl
jb
jge
push
into
imul
sahf
scas
add
push
hlt
scas
repz
in
sahf
jecxz
rcrl
dec
jecxz
or
lcall
cmp
jmp
ret
les
push
push
push
lea
inc
inc
inc
mov
pop
push
cli
subb
aam
jbe
mov
xor
sahf
sub
pop
cmp
pop
jecxz
sbb
push
mov
sub
movsb
pop
cmp
in
ror
mov
loop
lock
test
jmp
jp
addps
outsl
in
data16
arpl
aaa
cs
push
mov
add
icebp
mov
jle
mov
or
dec
popf
jmp
jae
pushf
push
mov
push
mov
xor
push
push
pop
jp
repz
xchg
xchg
lret
inc
add
out
ficompl
add
imul
sub
jge
pop
jno
and
mov
and
mov
outsl
movsb
mov
lahf
in
out
in
fwait
sbb
mov
mov
ljmp
or
jl
scas
jno
push
jecxz
add
pop
call
jg
stc
mov
movsl
dec
call
leave
jo
jns
fs
inc
mov
bound
mov
jnp
cwtl
inc
or
fcompl
mov
mov
push
xor
jg
or
sbb
enter
sbb
out
repz
mov
mov
push
push
cmp
shrl
aas
pop
sti
aas
ret
imul
cs
orb
pop
cmp
sahf
aad
daa
xchg
into
jne
mov
rclb
imul
xor
icebp
fs
xchg
sbb
mov
and
aad
sbb
out
xchg
inc
jo
pop
xor
mov
enter
sub
into
sbb
xchg
sahf
je
rcr
adc
sahf
inc
push
or
imul
faddl
pop
mov
addr16
dec
mov
push
cld
cmc
mov
je
fdivrl
jmp
cmp
aad
addr16
mov
mov
push
adc
stos
cmp
or
sarl
aaa
pop
pop
pop
pop
or
jne
clc
ja
and
push
mov
push
xor
mov
addr16
std
mov
fnstcw
xlat
sbb
jge
das
and
mov
clc
xor
ficompl
pushf
and
shrl
push
jnp
stos
leave
lret
xchg
fsubrl
pop
aaa
xchg
push
cmp
xchg
outsb
push
int
mov
lods
sub
sbb
into
cmp
inc
imul
jnp
add
stos
cmp
xchg
dec
fidivl
mov
pop
push
pop
aad
ds
popf
jbe
test
es
and
cmpb
movsb
add
inc
lret
xor
mov
and
popf
shlb
push
jo
mov
push
xor
mov
jecxz
pop
test
jnp
incb
sub
incl
pop
pop
negb
dec
mov
enter
jp
xchg
cmp
sbb
xchg
stc
mov
ds
fcomip
stc
roll
xchg
ljmp
and
insb
aad
push
std
pop
jbe
js
lea
xchg
xor
sub
cli
push
shll
pop
outsl
add
mov
add
outsb
enter
jnp
fistpll
xor
xchg
cmp
punpckldq
inc
les
es
xchg
mov
sub
xchg
push
lea
aad
out
cwtl
pop
mov
mov
sti
sbb
jmp
jne
sub
bound
xor
lret
mov
ficoml
dec
push
in
adc
push
mov
roll
lods
cmpsl
test
sar
test
or
cmp
pop
lahf
ret
in
sub
or
fisubs
cmp
test
mov
std
movsl
or
jb
jo
lods
jge
shrl
xor
mov
mov
movsb
in
sbb
subb
mov
ficompl
or
xor
mov
daa
jecxz
in
movsb
cmp
mov
sub
inc
loopne
aaa
push
push
outsl
inc
std
and
dec
stc
add
aaa
dec
int
rcrl
cmp
and
mov
sbb
adc
outsb
jmp
enter
roll
and
aad
mov
jmp
adc
pop
shl
jge
inc
bound
jnp
mov
dec
xchg
faddp
sub
ds
sub
sub
mov
sbb
loopne
loope
int
pop
push
mov
jle
inc
in
loope
mov
lods
add
jno
loopne
adc
loopne
adc
ret
or
adc
jg
inc
or
and
dec
das
aaa
andb
add
call
rol
inc
jle
icebp
ljmp
scas
xchg
jg
fwait
sarl
sub
mov
das
adc
stos
push
push
pushf
ret
xor
sub
push
mov
jl
jno
repnz
sbb
pop
shll
lock
out
inc
dec
dec
imul
xchg
add
mov
inc
ret
adc
and
sub
insl
mov
mov
mov
jne
test
arpl
mov
or
lods
lahf
push
flds
cmp
pop
xlat
popa
and
xorb
jmp
push
xor
push
add
std
daa
dec
adc
mov
push
lcall
fwait
add
jge
and
std
mov
mov
jg
jl
adc
lret
mov
test
push
mov
adc
jno
or
bound
lcall
out
xchg
mov
or
movsl
xchg
pop
bound
pop
jmp
mov
ficomps
sbb
jp
les
iret
test
ret
jno
fcmovb
lcall
cmp
adcl
pushf
pop
sub
pop
adcb
aaa
pop
int
pop
ret
xchg
in
jl
cmp
mov
popa
in
mov
sbb
push
outsb
mov
insl
scas
mov
mov
fnstenv
sbb
test
adc
pop
and
cmp
xchg
out
mov
imul
stc
imul
and
cmpsl
pop
les
jne
orl
jne
insb
iret
data16
xchg
inc
xchg
lahf
loope
jecxz
orb
mov
mov
sub
stos
lods
push
lahf
stc
jo
fdivl
jmp
mov
mov
jne
push
and
js
fbstp
add
pop
jge
mov
test
dec
lods
jl
and
and
lods
jns
cmp
into
or
push
dec
roll
dec
ret
std
push
mov
clc
fstpt
popf
inc
loop
in
jp
jle
cmp
sbb
jo
das
pop
inc
inc
cmp
test
xchg
sbb
mov
cli
mov
jnp
jo
jbe
aad
insl
ret
mov
or
in
xor
mov
leave
inc
pop
inc
push
add
inc
les
call
add
dec
dec
mov
in
mov
and
sub
jnp
loopne
sbb
pop
fnsave
movsl
push
fimuls
cmp
out
mov
or
jb
jnp
cmpsb
xchg
fildll
mov
mov
mov
cmp
dec
pop
cltd
adc
mov
add
xchg
inc
icebp
push
int
dec
adc
ss
fidivrl
mov
loop
or
cmp
jge
nop
xlat
pop
rcrl
xchg
cmc
mov
push
sub
adc
iret
adc
jl,pt
mov
add
mov
jns
jb
inc
and
movsb
imul
rcr
fildl
mov
ss
in
aad
cmp
pushaw
mov
nop
inc
cmc
xchg
das
dec
lods
out
and
sbbb
dec
iret
cltd
mov
rcrb
push
mov
add
or
adc
sar
push
xchg
jecxz
nop
mov
cmp
and
ror
sti
movsb
mov
inc
icebp
fimuls
or
xchg
sub
dec
fidivrs
adcb
or
ret
pop
jne
jmp
jo
insl
movsl
xchg
xor
imul
adc
or
iret
mov
int
inc
dec
loopne
adc
pop
mov
aad
daa
add
sbb
ret
nop
fwait
inc
ljmp
adc
leave
je
sub
sbb
in
outsb
test
rcr
nop
inc
sbb
int3
int3
hlt
push
xlat
or
sub
outsb
lahf
sbb
rorb
cmpsb
xchg
adc
repnz
in
lds
pop
daa
mov
adc
inc
je
clc
jge
jae
loopne
cld
sbb
mov
push
fcomip
scas
and
stos
push
push
inc
xlat
fisttps
cmp
enter
xchg
push
jne
mov
push
adc
adc
mov
out
out
mov
add
in
adc
int3
cmp
call
fsubs
outsb
fdivrl
sar
sub
sbb
decl
in
push
popf
dec
pusha
fimull
or
pop
ror
push
mov
pop
and
je
jb
mov
repnz
mov
mul
xchg
hlt
cli
sub
sub
sub
xor
and
add
adc
lock
in
dec
into
sbb
aas
push
fs
mov
call
dec
insb
mov
inc
lret
call
push
push
addl
sbb
dec
rcrb
into
das
outsb
cmp
addr16
push
mov
xchg
in
cmp
sahf
add
pusha
push
jmp
xor
imul
mov
mov
fwait
push
int3
jo
mov
imul
cwtl
mov
ss
ret
inc
stos
mov
test
sbb
cmp
jl
mov
sub
mov
call
scas
adc
fbld
jmp
lcall
in
cltd
dec
xor
sub
push
lret
rolb
and
lds
push
jb
les
cmp
push
imul
mov
rorb
pusha
or
xchg
in
out
test
jae
cmp
adc
fs
cmp
jp
dec
idivl
or
lods
xchg
jmp
push
cmp
ret
add
xchg
inc
jp
repnz
add
add
mov
xchg
sbb
orl
pop
scas
ss
jnp
leave
or
xor
or
mov
test
xchg
jno
xlat
aad
push
in
dec
or
pop
aam
ret
dec
push
mov
cmp
jg
adc
jmp
jecxz
cld
imul
aas
mov
mov
inc
inc
cli
inc
movsb
push
fnstcw
sbb
mov
int3
dec
movsb
and
mov
dec
jno
pop
fcompl
and
ret
loopnew
push
or
dec
out
cmp
sarb
jge
repz
dec
sbbb
test
test
jp
daa
into
xchg
jbe
push
cmp
out
xor
pop
sub
lods
test
inc
mov
scas
dec
lret
imul
lods
or
les
fldenv
fs
inc
push
inc
ret
or
pusha
mov
mov
in
pop
call
lock
or
jo
push
xchg
cmp
push
mul
mov
dec
sub
es
add
dec
nop
add
in
xchg
fnstenv
aad
push
pop
mov
mov
mov
jno
data16
repnz
jae
ljmp
fcomi
add
jns
sub
aam
iret
aas
stos
dec
add
jae
pop
cmc
sub
xor
rcll
insl
pop
fucomip
sahf
mov
lods
dec
xchg
xchg
add
jle
jb
inc
push
loope
add
mov
mov
insb
cltd
std
int3
jo
sub
outsb
adc
sub
or
push
popl
cmp
fisubrl
xor
cli
stos
add
mov
es
sbb
out
pop
outsb
push
adc
sti
and
mov
ror
ret
cmp
jg
dec
inc
pop
nop
xchg
rcrl
mov
sbb
mov
loopne
lods
test
scas
cmp
xor
xchg
pushf
push
dec
xchg
push
push
adc
icebp
bound
adc
lret
lgs
cmpb
jb
andl
mov
lods
push
and
addr16
jno
adc
daa
add
daa
xchg
gs
filds
mov
and
mov
and
ret
dec
mov
bswap
cmp
std
and
fidivs
sbb
gs
pop
mov
int
stos
out
jle
xor
adc
adc
mov
cmp
ret
and
clc
daa
mov
ds
adc
dec
push
jns
sbb
loope
sarb
adc
mov
pusha
js
ret
add
pop
dec
fwait
stos
jae
in
sub
andl
pop
xor
lock
fwait
adc
jge
in
insb
fsubrl
xchg
pop
sbb
jp
popf
loopne
mov
cmpl
aam
addr16
cmpsb
arpl
cld
mov
dec
pop
in
mov
cmpsl
scas
cmp
scas
jmp
or
out
sbb
imul
rcrb
mov
dec
xchg
jg
ficoms
pop
jg
dec
xchg
mov
or
mov
jns
sbbb
push
push
mov
faddp
enter
fsubl
pop
push
lods
dec
insl
push
negb
mov
mov
pop
sbb
cmpsl
mov
adcb
es
and
ficoml
mov
std
jo
cwtl
mov
add
stos
push
inc
sub
xor
lahf
iret
mov
in
ja
pop
sbb
addb
xor
inc
fwait
xor
xchg
add
add
fucomp
inc
sahf
mov
sti
jmp
mull
in
fadds
cwtl
je
and
cli
jae
jge
andl
or
mov
xor
pop
cwtl
or
or
fidivrs
mov
rcll
mov
stos
nop
mov
loope
pop
push
dec
fisubs
jp
mov
mov
sub
clc
jmp
xor
lcall
pusha
pop
popa
cld
add
cmp
aas
mov
mov
jae
inc
sbbb
adc
dec
test
test
xchg
repnz
lds
jg
aad
test
js
cmc
jecxz
add
or
popf
inc
fadds
pop
sbb
pop
fcmovnb
test
sbb
in
jmp
jbe
shlb
into
les
ret
movl
sub
lcall
pusha
andl
notl
in
inc
or
shrb
dec
loope
repz
fildl
aaa
inc
mov
subl
fadds
or
bnd
out
shll
xchg
nop
jb
fsubs
dec
adc
adc
inc
scas
fsub
adc
xchg
mov
pop
out
push
int3
movsb
push
xchg
sub
popa
cmp
pop
inc
mov
pop
mov
nop
xor
mov
fsts
xchg
mov
lret
lret
xchg
dec
lock
dec
jle
jbe
test
xor
jl
popa
lds
daa
in
mov
iret
lods
iret
gs
cmp
sub
dec
sysexit
or
icebp
mov
popa
test
xor
jnp
nop
fldenvs
ds
sbb
ja
ljmp
roll
cmpsl
ret
sbb
add
dec
fldl
push
fdivs
popa
sbb
pop
lret
dec
xlat
mov
mov
adc
fstl
xchg
addr16
sbb
sub
aad
enter
inc
int3
sbb
cmp
mov
mov
and
mov
xchg
imul
scas
shlb
add
in
hlt
push
sub
jmp
jecxz
jmp
mov
pop
push
push
jb
inc
fwait
mov
clc
add
cltd
jp
cltd
xchg
hlt
mov
or
ficoml
test
and
mov
lret
cmp
inc
vpcmpeqw
shlb
jo
add
test
dec
stc
cwtl
cmpsl
dec
cmpsl
aam
or
pop
sbb
or
push
xchg
adc
and
adc
les
add
ficompl
mov
sar
imul
dec
popf
pop
stos
popa
int
mov
lods
push
mov
jmp
xchg
mov
mov
insb
fistps
mov
push
adc
jns
mov
sub
mov
dec
or
sbb
das
mov
fiaddl
push
sarl
fnstenv
in
jle
mov
xor
cltd
je
out
pop
pop
mov
jne
scas
gs
push
and
notb
pop
and
cmp
jns
mov
int3
lahf
rcrb
call
push
mov
lock
push
lret
xchg
in
push
je
scas
mov
inc
ficompl
imul
pop
add
or
and
stos
mov
inc
mov
mov
pop
pop
push
in
jnp
adc
xchg
pop
arpl
test
cmp
xchg
or
mov
adcl
cli
out
vpcomb
outsb
inc
scas
push
testl
sub
adc
jne
in
cmpsl
dec
dec
out
addr16
dec
xor
scas
sub
lcall
sbbl
pop
test
cmp
inc
mov
mov
cmp
pop
adc
pusha
or
mov
in
into
and
push
mov
mov
out
sbb
addl
jg
sub
ss
dec
outsb
lock
pushf
arpl
dec
enter
mov
xor
enter
or
push
fcmovu
sbb
xchg
mov
jp
mov
mov
xor
push
cwtl
pop
ret
dec
dec
xchg
dec
xchg
imul
and
mov
add
inc
rclb
sarb
jae
push
jmp
popf
in
icebp
repz
daa
xchg
stc
es
pop
inc
icebp
xor
in
or
jae
and
cmc
inc
adc
in
xlat
sbb
inc
mov
aas
out
fldt
xchg
pop
stos
test
pop
hlt
cmpsl
xchg
sub
mov
bound
mov
outsb
insl
orl
ja
scas
jecxz
pushf
adc
nop
mov
std
movsl
movsb
mov
or
cmpb
add
mov
jae
in
leave
adc
out
add
vcvtpd2ps
sbb
inc
std
mov
dec
adc
cmp
movsl
icebp
stos
sbb
pop
fidivl
or
in
sbb
pop
cmpsl
sub
jns
push
sbb
aas
mov
out
out
mov
adc
cmpsl
adc
pop
sub
andb
int3
xorl
lahf
daa
or
xchg
outsb
cmpsb
insl
push
adc
xlat
inc
hlt
lea
nop
cmp
nop
hlt
or
fidivs
lods
adc
jge
rorb
sub
int
test
adcl
pop
mov
jl
dec
mov
push
pop
xchg
mov
jl
inc
in
cmpsb
call
sbb
and
jecxz
fbld
in
jge
cmpsl
loopne,pt
fcmovnbe
jnp
inc
sub
adc
mov
or
jge
inc
jae
push
test
or
add
jno
xchg
push
pop
xor
mov
mov
sub
and
fcomps
mov
jmp
push
cmc
and
test
add
mov
and
addl
inc
scas
add
stos
gs
int
sti
pop
dec
mov
sti
je
add
lret
fimuls
xor
jge
or
fnstenv
inc
ss
xchg
push
lcall
outsl
enter
jbe
mov
or
imul
rorb
mov
sbb
push
or
nop
xchg
shrl
lds
pushf
push
push
xlat
inc
xor
movb
lret
lret
pop
sbb
mov
stc
stc
dec
je
sub
dec
scas
jae
out
push
cmp
mov
lods
jns
adc
pop
adc
lock
repz
das
sbb
xchg
lds
je
out
das
in
xor
xor
xor
cmpsl
cs
lods
push
in
in
ja
and
mov
and
imul
inc
daa
aad
jl
stos
mov
loop
xchg
mov
out
inc
insb
and
jmp
mov
aaa
bound
hlt
mov
cmp
dec
xchg
add
push
jp
stos
fs
inc
out
ljmp
mov
or
les
sbb
bound
lret
inc
lods
cmc
pusha
inc
or
xor
mov
ljmp
mov
jle
mov
jl
and
js
mov
lock
mov
jae
sbb
sub
lods
mov
dec
xchg
xchg
lea
repnz
mov
or
sub
xchg
cld
test
rcrb
mov
dec
adc
mov
inc
adc
outsb
cmp
mov
outsl
pop
fildll
or
and
rcll
sbb
jg
flds
imul
sbb
ja
push
pop
dec
and
ret
pop
and
jbe
dec
xchg
inc
xor
dec
aaa
lret
xor
leave
push
cmpsb
mov
fs
mov
sbb
inc
jg
jae
xchg
push
push
insl
mov
movsl
xchg
cmpsl
aas
add
jns
pop
shll
shrl
fiadds
inc
out
cli
test
hlt
xchg
inc
rcrl
xchg
push
out
daa
into
pop
cmpsl
jbe
add
add
xor
xor
inc
mov
cmp
xor
jb
dec
or
jno
lods
into
test
mov
incl
xchg
mov
test
fidivrs
or
inc
xor
push
xchg
adc
sbb
xor
lret
xchg
sbb
in
adc
adc
fiadds
or
or
push
xchg
lahf
inc
call
shr
repnz
cmp
test
sbb
in
je
enter
inc
push
jne
shr
mov
lods
pop
lea
popf
pop
ret
icebp
xor
mov
lcall
pop
inc
push
int
mov
add
stos
sub
cmp
cmp
bound
mov
fcmovnu
push
xchg
mov
ret
call
ret
sub
jnp
pop
js
and
out
mov
adc
xor
cmpsl
jmp
add
cmp
adc
mov
out
mov
call
out
movsbl
das
xchg
push
lret
sub
cmc
fldt
cmp
xlat
loope
or
jmp
and
jnp
aam
pop
mov
pop
adc
scas
pop
shll
cs
es
xlat
stc
add
test
sbbb
jg
mov
rcr
shll
jle
cmpsl
push
int3
out
xor
adc
test
stc
je
ds
shlb
insl
push
inc
mov
xchg
push
test
mov
push
cmpsb
jns
aas
sbb
cs
mov
rcl
vucomisd
repz
mov
fbld
mov
xchg
and
push
jb
cli
cmpb
pop
cmpsb
add
mov
jae
outsl
iret
push
push
jge
fcos
cmpsl
jno
adc
pop
cmpsb
xor
aas
cmpsb
xor
xchg
adc
lods
mov
xchg
sbb
xchg
mov
xchg
cmpsl
pushf
sbb
add
cld
lahf
clc
fildl
dec
mov
mov
imul
cmp
lea
popa
adc
xchg
lock
ss
mov
arpl
ljmp
or
jecxz
and
xor
sbb
cmp
mov
push
jo
jae
test
inc
test
mov
ret
sbb
cmc
das
scas
adc
cmp
xor
std
dec
sbb
outsl
jp
push
and
xchg
dec
dec
rep
dec
mov
pop
xchg
das
sub
jne
not
sbb
loopne,pn
fistl
iret
pop
xchg
jbe
add
lret
lods
in
imul
inc
repnz
sbb
imul
ja
loope
and
xchg
push
scas
lcall
into
add
xor
cwtl
inc
ret
mov
lods
xor
insl
lcall
add
mov
push
xlat
adc
jbe
mov
and
pop
test
out
pop
fidivs
xchg
mov
int
jecxz
xor
dec
and
cmp
jae
sub
xor
push
sbb
popf
xchg
bound
mov
adc
aam
xchg
out
adc
int
mov
out
dec
lret
sbb
insb
ja
cld
mov
xchg
popa
dec
push
pusha
mov
pop
sbb
mov
dec
add
xchg
push
xchg
sbb
icebp
sbb
shlb
inc
xlat
xchg
ljmp
xchg
jmp
clc
mov
cmp
cmp
dec
test
add
iret
sub
les
pop
mov
mov
loop
mov
insb
cmp
jg
ljmp
xchg
xchg
xor
push
stos
sub
sarl
sbb
sub
jle
scas
dec
bound
pop
repz
stc
aad
xor
lret
adcl
je
fcoms
out
inc
xchg
sbb
insb
lret
push
int
xchg
mov
inc
int
push
push
je
lcall
pop
mov
test
add
outsl
xchg
int3
cli
sbb
dec
and
fistpll
std
mov
pop
mov
adc
and
popa
movsb
xchg
ret
arpl
pushf
and
mov
ret
repz
cmpb
mov
sub
stos
inc
jb
pop
lds
sub
inc
arpl
lcall
fisttpll
jbe
test
cmp
sti
stos
mov
mov
rorb
in
loopne
fs
sub
mov
mull
movl
iret
out
and
dec
dec
jge
xor
mov
mov
mov
insb
ds
push
sub
int3
stos
fwait
or
inc
fisubs
movl
inc
fmull
mov
or
mov
sbb
mov
lret
xor
jbe
in
insl
add
push
mov
dec
jle
mov
scas
inc
divb
je
arpl
xchg
push
mov
and
adc
mov
fwait
call
mov
lahf
and
jmp
adc
pop
xchg
rcr
test
mov
dec
inc
cmpl
and
andl
shrl
repz
cmp
insl
fidivs
stos
lods
mov
and
xchg
sti
mov
in
into
sbb
shlb
jecxz
and
and
jnp
mov
pop
sub
xlat
lods
inc
pop
out
mov
bound
inc
push
filds
pop
cmp
stc
aaa
xlat
repz
aad
jo
and
je
push
rorb
je
mov
mov
test
and
call
and
outsb
lock
dec
push
push
repz
and
imul
sub
inc
sub
enter
xchg
fidivrs
xchg
rol
push
or
jno
jae
ret
inc
int3
push
les
jbe
jo
lret
push
cmp
bound
xchg
cli
inc
arpl
sub
push
sbb
lret
icebp
lods
sbb
cmp
sub
lret
scas
aaa
arpl
dec
mov
adc
scas
jl
mov
dec
mov
dec
cwtl
sbb
lods
dec
pop
sahf
cmpsl
push
push
mov
xchg
rcrl
sub
dec
test
fwait
pusha
sti
mov
and
adc
sbb
sar
mov
push
ret
dec
inc
add
repnz
adc
cmp
loope
fistps
ss
add
loope
test
imul
push
rolb
and
adc
cmp
pop
loop
sahf
pop
add
sbb
push
test
outsl
xchg
ficoms
cmp
mov
lret
push
stc
leave
push
lcall
bound
adc
dec
add
clc
pusha
loop
inc
add
cmp
or
cli
fstps
inc
push
xor
xor
mov
cmp
adc
call
sub
lods
cmpsl
sbb
inc
inc
push
lock
add
xchg
mov
cmpsb
in
push
sti
sarl
jb
jne
xchg
ret
cmp
dec
mov
push
dec
inc
pop
jae
inc
aam
aad
dec
cmc
data16
jb
in
aas
push
cs
pop
mov
xlat
or
pop
rcrb
clc
ja
mov
xor
stos
ja
jbe
jbe
das
ss
fadd
inc
pop
mov
out
push
fidivrl
sahf
nop
push
jl
inc
insb
jmp
enter
sub
lahf
xchg
cmp
fistpll
pop
jl
dec
xchg
cs
inc
inc
cld
in
shrb
push
adc
loop
dec
adc
dec
into
movsb
data16
mov
rorb
sbb
nop
lcall
dec
imul
push
cmp
mov
fwait
stos
clc
mov
out
inc
stos
ret
lods
or
xchg
jmp
movsb
insl
mov
addr16
pop
rcrl
test
xchg
or
ljmp
xor
fisttpl
mov
out
nop
imul
pop
adc
jg
cmc
test
push
lcall
sub
push
jge
and
push
test
sub
js
jmp
rolb
jle
jge
data16
mov
xchg
mov
sub
loop
mov
stos
xchg
xchg
mov
add
cltd
xorb
sbb
jno
mov
xchg
fsubs
int
mov
sub
cmc
aam
xor
cmp
jl
test
inc
imul
in
dec
shll
mov
stc
pop
js
dec
push
mov
xlat
sbb
inc
fdivrp
push
out
mov
mov
inc
repnz
imul
cld
andl
mov
jg
sub
push
xor
xor
mov
imul
in
jl
push
jb
test
stos
data16
dec
test
push
sub
jecxz
push
bound
mov
or
enter
and
les
mov
jo
lds
adc
into
cmpb
dec
add
movsb
outsb
aad
lds
sarb
dec
sbb
xchg
stos
repz
in
jg
mov
js
fwait
movsb
scas
fsubrs
push
notl
adc
hlt
dec
jbe
mov
or
pop
mov
adc
pusha
xchg
jbe
cli
scas
stos
adcl
stc
mov
mov
push
idivb
aam
inc
leave
insb
sti
mov
fldz
pop
stos
aad
std
hlt
dec
push
dec
jno
cs
dec
lea
std
hlt
movhps
push
cs
dec
cltd
pop
lret
cmp
lods
call
push
mov
push
dec
dec
push
lds
pop
adcb
jns
jge
aad
or
fiadds
push
sub
inc
and
push
int
fimull
jo
gs
lret
sbb
and
call
mov
test
cmpsb
or
adc
notb
dec
xor
sbb
jbe
roll
movsb
jne
fwait
subl
testl
out
cltd
fisubl
je
imul
mov
rol
in
pop
jl
hlt
pop
movsb
adc
sahf
adc
push
mov
mov
or
fld
push
dec
mov
jo
std
std
push
adc
push
sbb
loope
or
xor
shll
pop
aaa
popa
push
mov
in
lds
gs
leave
sbb
aam
mov
mov
aam
mov
jmp
push
adc
repnz
std
push
outsl
sahf
pusha
mov
inc
lods
stos
jb
int3
or
sahf
shlb
and
xorb
or
test
xor
xor
add
aad
mov
lods
fstl
adcl
adc
out
fists
pop
cmc
loopne
push
ds
push
sarb
clc
cwtl
outsb
cmpsl
out
loopne
mov
xchg
or
xor
and
jl
mov
popl
cld
or
push
xor
and
in
mov
lock
adc
xchg
pop
aas
lods
lret
add
movsl
test
xor
adc
xchg
xor
addl
scas
xor
jnp
sbb
mov
cmc
mov
xchg
cmp
ret
cmp
ss
outsb
push
cld
call
sub
inc
mov
jnp
xchg
xchg
mov
lret
mov
cmp
or
repnz
pop
mov
test
xchg
mov
xor
shrl
xor
inc
sahf
dec
setno
int
imul
sub
leave
sbb
das
fidivrs
push
jb
xor
sti
cwtl
jbe
push
adc
addr16
aad
subl
mov
mov
imul
push
fnstsw
jmp
push
cmp
dec
nop
mov
lcall
dec
or
xor
xor
mov
movb
push
add
mov
daa
ss
mov
inc
mov
out
and
xor
mov
push
mov
jge
jb
jb
xchg
inc
mov
fnstenv
push
xor
js
dec
push
inc
arpl
lods
scas
aam
scas
fisttpl
lahf
out
sub
sub
int3
loope
add
addr16
add
hlt
push
daa
fildl
pop
cmp
jp
aad
add
scas
sahf
pop
push
test
cmp
lock
icebp
push
xor
mov
pop
jbe
in
jecxz
popa
sub
pop
je
and
adc
mov
ja
mov
mov
push
test
andl
mov
repz
mov
insl
shrl
pop
add
and
fnstcw
js
dec
push
shl
fstl
xchg
and
push
popa
or
cmp
push
sbb
das
xor
push
mov
dec
leave
rcrl
aaa
aas
dec
adc
scas
mov
pop
js
jmp
arpl
sub
nop
lods
mov
imul
jae
sub
xchg
mov
adc
pop
divl
mov
test
repz
xchg
int3
sahf
incl
xor
lcall
pop
pop
mov
out
lds
cmp
test
imul
adc
mov
xor
sbb
push
out
sbb
pop
dec
cs
inc
sbb
int3
ja
repnz
sub
pop
mov
cmpsl
dec
out
pop
xor
out
mov
xchg
mov
push
sbb
cmc
mov
imul
add
pop
mov
je
sub
repz
ljmp
loope
cs
sahf
scas
jnp
dec
sbb
inc
and
movsl
xchg
add
fs
mov
mov
cmpsl
inc
jb
or
popf
insl
out
lods
mov
mov
test
lods
jl
pop
iret
or
setno
mov
mov
out
jge
and
pop
dec
dec
stos
repz
xchg
nop
je
sub
pusha
mov
loop
or
mov
popa
lret
pusha
push
push
stos
jp
add
mov
lds
je
in
pop
mov
insb
pop
xlat
sub
imul
les
dec
ret
cmpsb
and
and
xchg
hlt
push
jbe
popf
mov
clc
in
mov
daa
push
jle
dec
hlt
hlt
sub
out
out
sbb
sbb
mov
pop
and
call
mov
pop
sbb
cmpsl
jae
rcrl
idivb
adc
cli
push
or
pop
outsl
lahf
inc
dec
testb
stos
jg
xchg
enter
aaa
inc
rolb
cmp
popf
and
ds
cmp
mov
enter
push
lret
enter
push
sub
ret
xlat
or
push
mov
add
sbb
pop
mov
shl
popf
lcall
push
dec
enter
xor
cltd
cwtl
cmp
leave
stos
push
and
jle
hlt
push
lret
push
andb
popf
add
mov
jnp
push
push
in
xor
data16
adcl
movsl
out
or
bound
iret
mov
mov
fldt
or
pop
sbb
shll
fimuls
fs
jo
and
xor
fadds
jg
test
xor
arpl
dec
jmp
jo
fcomps
and
call
adc
cmp
call
inc
rclb
insb
push
mov
push
push
sub
call
dec
sbb
and
out
adc
les
cmp
mov
lret
popa
and
adcl
xchg
push
inc
fcomi
add
outsb
ds
pop
sub
xchg
pop
cwtl
mov
loope
fimull
mov
jecxz
pop
lahf
icebp
fwait
sub
das
stos
daa
or
xchg
jo
out
and
xchg
clc
push
mov
cmpsb
push
jp
daa
mov
inc
adc
or
and
add
xor
js
sub
ljmp
ljmpw
test
push
cmc
out
lock
jae
ss
jae
jne
cwtl
xor
fcomip
pushf
addr16
fnstsw
mov
inc
cwtl
sbb
popf
add
cmp
cmp
enter
mov
inc
push
stos
sbb
pop
mull
push
cld
inc
xchg
sub
mov
pop
dec
inc
pop
mov
es
adc
jmp
popf
cmpsl
pop
jo
test
imul
rorl
sub
sub
out
dec
xorl
pop
mov
push
lds
add
or
xor
mov
js
pushf
jg
int
lds
or
subl
repz
insl
mov
sub
lahf
mov
push
push
std
xchg
cmp
jns
cld
lds
dec
and
dec
inc
push
inc
repnz
lret
add
mov
ficomps
and
js
cmp
repnz
mov
sahf
sti
sbb
adc
or
dec
add
mov
xchg
jecxz
cmpsl
inc
rorl
lret
inc
mul
out
out
ds
ss
test
das
and
aaa
fbld
dec
lods
cld
insl
ss
xchg
outsl
sub
sbb
xor
lods
sbb
mov
adc
pop
jno
add
out
and
lods
stc
gs
mov
fs
iret
or
cmp
or
sbb
popa
jbe
fadd
shr
sub
enter
sub
js
es
xor
mov
mov
sahf
out
mov
push
pop
pushl
dec
in
pushfw
in
repnz
cmpsl
test
incl
std
push
adc
cli
cwtl
gs
stos
inc
shll
sub
cmp
push
out
fnsave
inc
negl
push
mov
add
fcoml
sbb
rcl
adc
mov
outsb
xor
push
sub
xchg
cmp
dec
pop
adc
push
ret
inc
add
test
and
push
hlt
xor
and
inc
cmp
mov
into
pusha
cmovb
ja
mov
jae
jns
imul
mov
je
mov
inc
push
subl
xchg
out
fnstcw
jp
jmp
mov
pop
inc
push
nop
cwtl
loopne
sub
cltd
fistpl
push
lcall
sub
sub
mov
aam
icebp
or
jle
jmp
rcpps
mov
inc
sub
mov
cltd
sbb
je
cld
rolb
mov
jmp
inc
imul
mov
movsb
cli
imul
mov
lcall
loopne
xchg
icebp
fs
and
outsl
jo
cmc
mov
popf
mov
sbb
add
xor
push
data16
mov
add
out
dec
insl
shll
add
mov
popf
jnp
daa
adc
jg
or
inc
stos
pop
xor
popl
les
jnp
push
add
sbb
wrmsr
xchg
subl
js
xchg
dec
and
ficoml
mov
in
lret
push
out
dec
pop
pop
ljmp
jmp
jbe
in
imul
push
dec
dec
jo
insb
fstpl
fst
add
mov
pop
jnp
push
bound
cmp
cmpsl
adc
mov
cmp
addr16
push
imul
mov
fs
push
pop
jns
test
push
or
pushf
mov
cmp
cltd
jo
push
sub
inc
jmp
fists
mov
inc
stos
daa
cld
lahf
or
ret
add
push
addr16
sti
jge
dec
popa
dec
xor
add
stc
cmpsb
sbb
sub
pusha
push
leave
fcmovnb
jb
or
pusha
sub
popa
das
jno
xchg
std
mov
mov
pop
inc
mov
das
fldcw
rolb
aam
cli
fsin
or
leave
pmuludq
cli
ret
fsts
loopne
repnz
imul
pop
es
aam
xlat
je
lahf
pop
das
bound
sub
popa
jge
aaa
mov
stc
insb
ss
out
mov
arpl
leave
loop
jp
shlb
test
insl
sbb
es
adc
inc
lods
jno
ljmp
insb
mov
lahf
sti
push
rcr
xchg
fimuls
jl
adc
out
push
sbb
into
into
lods
push
es
jmp
add
adc
sbb
pop
pmulhw
scas
add
jae
out
xchg
dec
ljmp
push
sbb
rcl
fidivrl
cmc
lret
mov
fsubrs
inc
and
pop
cmpsb
add
int
aas
mov
adc
sub
ret
xor
leave
push
aaa
pop
push
data16
or
cmc
test
inc
js
imul
push
mov
sbb
pop
push
and
outsl
xchg
stc
mov
fnstcw
mov
dec
fs
pop
cltd
push
out
xor
call
lahf
add
pusha
lods
jbe
push
mov
call
xlat
test
ljmp
xchg
cld
sbb
dec
mov
sbb
mov
mov
loop
sti
and
rcl
sbb
cmpsb
sbb
test
loope
out
add
pop
xchg
imul
outsb
rclb
subb
cmpsl
and
push
jne
les
mov
jno
aam
lret
les
or
mov
outsl
jno
flds
xor
cs
jne
ljmp
fisttpll
dec
sbb
int
loop
mov
out
daa
ds
jb
push
mov
jp
aas
out
push
mov
mov
cmp
aam
add
repnz
cs
bound
bnd
cmp
rclb
rol
xorl
ljmp
jbe
or
push
sub
or
hlt
aas
lret
iret
cmp
test
and
sub
xlat
js
or
test
add
fcompl
in
pushf
pop
push
lret
pop
lcall
push
ficomps
pop
std
rolb
pop
fstps
jge
sarl
push
pop
mov
cmp
loop
push
push
das
into
jno
ja
cmp
lret
in
add
popf
or
cli
incb
int3
jp
push
inc
mov
lods
lea
cmc
cmpsl
fldt
test
mov
fwait
adc
sahf
or
stos
dec
inc
pop
inc
outsb
dec
gs
roll
int3
insl
inc
lea
pusha
call
scas
sbb
sbb
dec
lea
sub
lds
mov
std
cmpl
adc
xchg
mov
repz
movsb
mov
inc
mov
xchg
xchg
xor
xchg
sub
lret
adc
int
xor
fwait
adc
push
pop
xchg
stc
test
bound
xchg
rorb
fimull
xchg
movsl
mov
pop
sbb
pop
pop
ret
xor
loope
enter
sub
push
mov
push
pop
scas
jbe
popa
push
jbe
jl
or
movsl
pop
sub
test
push
dec
xchg
or
mov
push
lret
cmp
xchg
gs
mov
xor
xor
stos
sub
adc
in
inc
dec
movsl
leave
hlt
test
jp
clc
repz
fimuls
mov
dec
mov
add
cmp
out
sbbl
int
cmp
repnz
cld
mov
pushf
fstps
ficompl
push
mov
or
loope
jge
and
xchg
jbe
xchg
xchg
int3
mov
std
adcb
jge
mov
sbb
pop
mov
es
push
cmp
str
mov
cwtl
mov
movsl
add
lock
mov
push
gs
push
mov
or
and
out
cmpsl
xchg
je
lcall
dec
cltd
lods
outsl
sti
inc
sahf
outsl
sbb
call
xor
in
jbe
inc
inc
xor
push
jmp
jbe
inc
xlat
movl
inc
cmp
mov
out
adc
jb
mov
loop
sarb
outsb
fnstcw
inc
cvtdq2ps
xchg
and
daa
jno
lea
int3
and
insl
xchg
lcall
xchg
add
and
mov
pop
adc
jns
jmp
xchg
out
or
mov
add
push
add
fisttpl
pop
lods
add
xchg
pop
adc
inc
sub
scas
sub
xchg
mov
jno
sbb
jle
jno
push
mulb
dec
xchg
int
test
mov
mov
jno
mov
push
pop
jae
shll
jb
ret
xchg
test
pop
xchg
aaa
fcom
and
and
cmp
ret
outsb
ljmp
mov
cmp
leave
popf
fnsave
loop
lahf
jae
xchg
out
cmp
mov
pop
fwait
popf
xchg
je
scas
dec
adcl
jae
fsubr
jno
pop
or
xor
lods
popf
adc
adc
hlt
lret
cli
xchg
addr16
mov
pop
lock
gs
repnz
mov
pusha
mov
ja
jo
pushf
aas
xlat
das
dec
cmpsl
aaa
jns
xchg
ja
scas
into
cmpsb
scas
push
sbb
imul
loope
gs
and
pusha
pop
jbe
sbb
jg
pop
mov
mov
loope
lods
mov
or
and
xor
jle
sub
outsl
dec
jo
adc
imul
in
in
push
jp
pop
sbb
movsb
fmul
arpl
adc
push
add
mov
and
or
jb
and
adc
push
push
stos
xchg
mov
mov
xchg
not
dec
pop
inc
mov
xchg
mov
out
and
scas
cltd
leave
sbbl
push
mov
out
loopne
push
cmp
clc
adc
aad
leave
in
out
lret
or
clc
stos
pop
dec
popa
lds
pop
push
cmp
pop
lds
push
mov
imul
sbb
lret
push
sti
data16
popf
jl
cmpsb
or
repnz
stos
shlb
xor
test
fistpl
outsl
cs
add
push
icebp
mov
repnz
loopne
std
int3
jmp
scas
leave
sub
xor
xor
out
shl
mov
cmp
adc
or
pop
mov
stos
mov
jo
adc
jp
sti
sub
xchg
add
loope
pusha
lahf
push
dec
lea
dec
adc
loope
mov
jmp
fadd
call
dec
lcall
mov
std
pop
jle
pop
dec
push
mov
mov
pop
jb
test
scas
cwtl
add
adc
fstpt
cmp
lods
and
mov
icebp
loop
ss
outsl
sub
adc
xchg
lods
in
ret
out
fistpll
int
xor
sar
jge
cld
push
dec
pop
pop
insb
cmp
sub
outsl
lahf
mov
add
in
out
call
loop
movsl
push
adc
pushf
dec
jle
mov
fs
loopne
mov
xor
cmpsb
mov
mov
mov
shrb
aad
push
loop
mov
inc
jne
mov
bound
clc
daa
cmp
or
fstpt
sbb
pop
sub
pop
sbb
jns
add
mov
fsubp
pusha
push
insl
cmp
in
inc
add
mov
out
hlt
aaa
push
inc
outsl
lret
ficompl
mov
dec
mov
jecxz
xchg
and
xchg
mov
ds
loopne
xchg
out
jl
add
cmp
or
ficomps
dec
sbb
out
les
push
fldt
bound
jne
and
dec
dec
add
test
cmpsb
stc
addb
repz
sub
lcall
xchg
jp
faddl
cwtl
pop
out
jl
outsl
adcb
lods
clc
mov
sub
cltd
imulb
push
subl
sti
loopne
inc
nop
lods
or
sbb
enter
inc
jge
dec
lret
scas
jb
sub
pop
test
test
jb
push
lock
cwtl
pop
mov
xchg
inc
movsb
stos
mov
gs
jo
mov
pop
dec
lock
push
jge
mov
outsl
xor
xlat
adc
ljmp
rcr
outsl
movsb
nop
test
mov
mov
dec
loopne
rcll
xchg
sbb
push
insb
jnp
cmp
pushf
out
pushl
cmp
xchg
mov
xchg
add
push
dec
xchg
adc
sub
dec
lods
popf
fidivrs
fldcw
aaa
je
push
out
cmpsl
rolb
aaa
dec
jge
sahf
and
popa
xchg
sbb
testb
sarb
shrb
jo
aam
mov
addr16
cmp
loope
xor
jp
cmp
outsl
rcrl
pop
push
ds
aad
mov
mulb
or
rcrb
test
jecxz
loopne
enter
xor
imul
or
loope
cmp
push
je,pt
rcrl
loopne
sub
pusha
add
aas
in
mov
in
xchg
jb
xchg
fprem
adc
aam
and
cmp
cmp
lret
rolb
inc
js
xor
sbb
mov
outsl
icebp
pop
jle
sub
pop
ss
mov
arpl
dec
push
insb
outsl
mov
out
inc
arpl
adc
outsb
cli
insl
inc
jmp
inc
pushf
sbb
cmp
pop
pop
add
mov
xchg
jle
aaa
loopne,pn
aas
push
arpl
add
orl
vdivps
stos
xlat
enter
gs
popl
adc
xor
jb
std
daa
loope
div
and
pop
js
aad
lret
adc
aam
das
sub
enter
mov
clc
push
push
add
fdivl
push
push
inc
mov
pop
inc
rorb
stos
jle
push
je
jno
test
jle
sbb
mov
lcall
sbb
mov
scas
jmp
mov
stos
add
int3
sbb
ds
push
repnz
lea
sub
push
aad
scas
pop
ret
xor
stos
clc
and
in
into
cli
cmp
ficompl
imul
enter
mov
xchg
out
xchg
pop
jnp
fwait
call
jae
add
inc
lds
xor
arpl
mov
lock
sti
adc
aaa
push
pop
mov
mov
mov
cwtl
inc
out
cmp
sbb
jo
mov
js
cwtl
bound
push
and
popf
and
push
xor
ds
mov
repnz
cmp
xlat
rorb
sub
cmp
aas
sub
lods
in
pop
test
pop
add
lock
mov
sti
dec
push
into
cmovo
cld
stos
andb
lock
outsl
shll
fdivrl
or
mov
and
jl
pop
jge
push
push
popl
out
loopne
sbb
andl
inc
push
repnz
xchg
bound
imul
add
dec
sub
cmp
or
test
mov
pusha
nopl
aaa
sub
or
ds
mov
dec
xor
xor
push
iret
js
jo
push
xchg
clc
push
and
loope
or
jle
sbb
je
xlat
shl
or
mov
xchg
ljmp
shll
mov
jmp
les
out
ja
xchg
test
lret
pop
mov
je
into
sub
insb
jae
lea
pop
cs
inc
movsl
jl
xchg
shll
or
and
call
sbb
adc
outsb
add
jbe
mov
bound
int3
rorl
cmp
and
inc
mov
dec
sub
enter
out
cld
add
xlat
xlat
pop
sub
cmpsb
cmp
mov
xlat
rolb
jnp
pusha
and
daa
js
mov
cmp
push
jecxz
push
xor
add
out
cmp
shrl
pop
ja
sbb
adcl
pop
out
rorb
mov
test
push
roll
test
mov
fiadds
xor
imul
and
xor
sub
jne
adc
jecxz
mov
or
cmpsb
inc
movsl
movsb
sbb
jecxz
testl
js
xor
out
adc
pop
add
mov
mov
xor
or
inc
sbb
fs
fcoml
xchg
mov
lea
test
bound
lods
mov
stc
cltd
je
pusha
sbb
arpl
pop
test
mov
sub
mov
cmpsb
pusha
test
in
loop
push
test
mov
and
aad
lret
orb
lahf
pop
shrl
mulb
jle
pop
lret
inc
xchg
xor
add
xor
pop
into
sbbl
add
stc
hlt
push
adc
adc
jbe
inc
sti
lahf
pusha
jecxz
jno
mov
and
push
sub
adc
ljmp
push
lahf
mov
mov
mov
in
lcall
inc
int
incl
mov
xchg
mov
sub
adc
rcr
sub
mov
arpl
cli
lds
test
sbb
push
mov
push
loopne
xor
mov
inc
add
mov
push
push
aad
jle
inc
mov
cmp
push
and
call
pop
fiaddl
mov
hlt
or
test
inc
cmp
mov
mov
jo
jb
and
mov
mov
repnz
aad
shll
jnp
ret
fists
dec
lret
loop
jnp
sbb
or
sbbl
pop
movsl
add
lods
mov
inc
in
fstpt
ja
or
mov
add
or
and
test
xchg
ret
jae
sbb
adc
inc
mov
in
icebp
cmp
pop
cmpsb
js
arpl
inc
mov
call
movsl
mov
rclb
mov
popf
stc
sub
cmc
mov
mov
outsl
pop
and
data16
outsl
xor
cmp
stos
testb
pop
mov
hlt
pop
imul
mov
std
js
sbb
mov
xchg
xlat
sbb
add
nop
or
and
and
outsb
add
xchg
das
or
aaa
xchg
sub
xor
enter
mov
lods
cwtl
push
sbb
arpl
movsl
jge
icebp
add
lret
les
push
xchg
inc
daa
ret
or
push
test
sete
inc
sbb
sbb
subl
or
jl
in
inc
lods
rol
ds
out
push
sub
imul
xchg
cmp
fcoms
jbe
loope
mov
jb
adc
popa
sub
adc
inc
mov
xchg
mov
push
jne
in
jp
imul
lcall
adc
xchg
in
and
dec
ds
add
arpl
xchg
push
sarb
gs
leave
or
out
sbb
pavgb
cli
gs
icebp
aas
cld
out
test
mov
sub
sbb
add
cmp
faddp
movl
xchg
fldenv
js
adc
inc
jns
xchg
rcrl
or
imul
xor
xchg
shll
mov
lahf
clc
es
in
pop
fnstcw
lret
cli
jl
adc
jg
std
dec
mov
in
test
jo
sbb
out
mov
aaa
fcoml
mov
int
push
and
xor
mov
inc
aam
imul
aam
popf
fs
ja
inc
xchg
mov
jle
push
aaa
lcall
shl
push
bound
dec
and
adc
jae
notb
test
icebp
mov
inc
leave
mov
cwtl
sahf
lock
cmp
dec
sub
adc
cwtl
divl
xor
jge
mov
in
fnstenv
call
and
and
out
outsl
lds
out
mov
neg
addr16
dec
sub
incl
sti
or
cmp
call
fsts
pop
iret
xorb
cmp
push
test
pop
inc
mov
popf
out
fistps
sub
aas
sbb
xlat
adc
push
jmp
je
mov
inc
xor
sarl
inc
shll
cmp
clc
mov
pop
addr16
mov
xlat
or
mov
mov
mov
test
in
add
je
mov
cmpsb
subb
movsl
divl
ret
xchg
sub
push
adc
sub
inc
dec
or
push
mov
fs
push
inc
cmp
movl
push
fstpl
jb
insl
dec
cmp
fdivs
cltd
iret
push
into
jno
imul
std
push
adc
mov
xchg
push
pop
enter
into
push
inc
lret
cmp
xor
aas
test
add
js
daa
cmp
shl
fiaddl
jbe
add
inc
in
jne
adc
or
call
xor
subl
inc
xchg
push
and
ljmp
push
pop
int3
mov
sti
enter
fsubrl
popa
repz
push
lods
sub
sub
jge
inc
push
push
cmc
inc
jmp
out
xchg
pop
jmp
or
sub
xchg
cmp
sarl
mov
in
sbb
outsb
dec
push
mov
inc
fildll
movsl
in
cli
adc
or
mov
mov
pop
add
cltd
jbe
jae
jo,pn
and
sahf
inc
shlb
sub
call
mov
pop
pop
or
dec
dec
fmuls
jne
adc
loope
mov
add
repnz
cmp
outsl
jg
stos
inc
cmp
sbb
rcll
mov
repnz
lods
adc
pop
jae
pop
popa
pop
pop
jns
fildl
test
mov
add
scas
cmpsl
mov
imul
int
cmc
cs
jno
cld
out
xor
and
jb
lods
sbb
scas
push
xchg
int
adc
sub
ss
adc
mov
pop
ljmp
dec
dec
jno
inc
pusha
and
fnstenv
mov
sub
add
lret
jno
mov
test
xor
aas
xchg
fdivl
int
aas
mov
movsb
scas
decb
pop
push
and
sahf
sbb
dec
mov
cltd
mov
adc
test
in
clc
and
mov
in
scas
sbb
push
adc
in
mov
les
ljmp
cld
fnsave
fisttps
jge
mov
mov
out
add
add
inc
shrl
scas
and
in
adc
xchg
jge
insl
sbb
sbb
out
das
movsb
mov
xor
lds
es
pop
mov
cmpsl
mov
aas
out
fiaddl
repz
pushf
cli
mov
mov
addl
sti
dec
sbb
icebp
dec
sarb
mov
aad
sbb
push
int
cli
call
loopne
sub
jmp
dec
in
fistpl
and
rcrl
mov
xor
sar
daa
fdivr
xchg
shrb
ss
cmp
jne
push
in
xor
scas
lret
or
in
mov
push
cmpsb
mov
jb
lret
jb
test
je
nop
je
add
push
cmp
jne
repnz
jae
inc
stc
xchg
fstl
pop
sub
mov
dec
mov
sbbl
rorl
xchg
jmp
adc
out
clc
jecxz
loopne
movsb
and
mov
cmpl
clc
mov
mov
sub
shll
cltd
fsts
fldenv
hlt
es
movsl
jecxz
push
cmp
cmp
jp
xor
mov
andb
cli
rcll
jmp
insl
bound
sbb
fistps
mov
inc
add
adc
bound
push
cmp
inc
jo
es
inc
push
test
lods
cmp
daa
dec
fldl
xor
int
pop
dec
mov
popf
pop
and
xchg
test
lods
ds
mov
jg
or
mov
or
movsl
sahf
orb
loopne
in
stos
sbb
aas
mov
push
ljmp
daa
das
jno
test
ret
xchg
fsubr
adc
xor
cltd
ror
lret
sti
inc
jecxz
mov
mov
fldt
imulb
ss
mov
pop
pop
std
push
pop
adc
or
mov
fdivs
and
and
pop
add
bound
insl
inc
or
push
mov
popf
mov
sub
mov
add
xor
int3
mov
inc
ss
aad
push
push
sub
iret
pusha
mov
jecxz
xchg
cs
cmp
jp
xchg
push
sbb
and
loop
fidivs
cwtl
lret
dec
mov
stc
inc
jnp
inc
mov
jo
and
jns
jg
outsb
mov
nop
out
fs
jnp
int
dec
es
jecxz
jo
dec
movsb
pop
sub
pop
and
sbb
lods
mov
jae
cmpxchg
inc
dec
cld
dec
jo
and
xchg
repnz
sbb
or
push
in
les
xchg
fcomps
inc
sub
adc
ljmp
jmp
mov
cmc
mov
push
or
ss
mov
jge
rcrb
add
fst
addr16
dec
sbb
out
aam
sub
test
mov
insl
lret
lock
push
push
fstps
insb
nop
aad
cld
push
push
in
jno
inc
imull
jne
mov
out
daa
push
sub
in
daa
lea
pop
pop
sbb
push
push
jns
sub
imul
in
xor
xor
xchg
imul
cmp
pop
icebp
lret
pop
push
dec
das
xor
lea
outsl
imul
clc
imul
add
inc
add
push
sarl
cs
hlt
loop
shll
dec
cmp
mov
fsts
gs
out
daa
out
bound
push
sbb
sbb
mov
fcmovbe
mov
dec
push
and
fwait
push
aam
iret
in
shrb
lret
lods
cli
fs
cmpl
xchg
fcoms
into
push
mov
xor
xor
push
mov
ljmp
mov
pop
scas
mov
xchg
rorb
inc
insl
lahf
push
daa
shlb
mov
sarb
pop
jno
pop
inc
mov
xchg
xchg
cmpsl
xchg
leave
and
jge
cmp
push
lea
stc
push
rcrb
push
mov
mov
rclb
shlb
mov
cwtl
xor
cwtl
cmp
adc
fcoml
test
movsb
ret
negb
cmp
ja
das
int3
aam
and
and
mov
jge
les
dec
in
jecxz
int
mov
sub
outsb
loope
aam
pop
mov
hlt
lock
mov
roll
nop
push
insl
aam
shrl
push
dec
inc
and
cmpsb
gs
sub
into
cs
cwtl
decl
and
add
ficomps
push
ret
test
push
lret
push
sbb
sub
add
rorl
xorb
in
add
loop
fisttps
insl
sub
stos
dec
std
xor
xchg
jnp
mov
mov
cli
es
daa
mov
add
cmp
push
push
movsb
es
test
subb
dec
insl
out
in
jecxz
rorl
clc
sarl
and
jo
jg
sub
fimuls
jne
add
mov
mov
add
rol
sar
out
aas
lods
gs
pop
in
xorb
pop
or
jno
add
jns
test
xchg
test
mov
jo
xchg
mov
scas
push
sub
leave
xchg
ficoml
das
pushf
mov
in
jnp
cltd
mov
rorl
cltd
sub
xchg
add
xchg
jmp
pop
pop
push
loop
cmp
sarb
icebp
loopne
push
dec
popf
cli
dec
cwtl
cli
imul
lret
jo
subb
out
outsl
lcall
jo
test
shrl
pop
cmp
enter
icebp
xchg
scas
and
xor
sbb
mov
adc
sbb
push
mov
push
and
pusha
cld
shll
and
jb
sbb
dec
ds
mov
stos
pop
add
addr16
jge
enter
ds
xchg
sar
sti
xchg
jmp
fs
mov
push
and
pushf
inc
xchg
outsb
idivb
test
das
sahf
pop
and
sarl
pushf
loop
inc
dec
or
movsl
iret
xchg
mov
inc
int
cmp
int3
jne
mov
movsl
dec
xor
sbb
