adc
je
sbb
ja
call
test
je
mov
andl
test
mov
mov
je
lea
push
push
push
add
push
call
mov
and
jne
test
mov
jne
pushl
lea
call
test
jne
mov
pushl
mov
push
call
test
jne
pushl
pushl
pushl
call
add
test
je
xor
inc
test
jne
test
mov
je
mov
mov
mov
mov
mov
andl
lea
push
push
movl
mov
call
push
push
push
pushl
pushl
pushl
pushl
pushl
call
add
test
mov
je
movb
test
je
testb
je
mov
add
push
call
test
pop
jne
push
call
pop
cmpb
mov
jne
mov
mov
push
push
call
test
jne
lea
call
lea
call
pushl
call
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
xor
mov
mov
mov
push
mov
push
mov
cmpl
je
inc
add
test
mov
jne
inc
add
jne
lea
push
push
push
mov
call
add
test
je
inc
add
sar
mov
lea
push
xor
lea
lea
push
mov
mov
movl
movl
mov
pop
xlat
inc
add
call
pushl
pushl
pushl
call
add
cmp
mov
je
inc
add
push
add
pop
movsb
je
inc
add
lea
push
push
call
test
js
inc
add
testb
jne
inc
add
mov
cwtl
movl
xor
pop
mov
pop
xor
pop
call
leave
ret
push
mov
sub
push
mov
push
xor
mov
mov
cmp
je
mov
push
mov
lea
push
lea
lea
movl
mov
mov
call
mov
test
jne
mov
mov
push
lea
call
mov
lea
push
push
call
test
mov
jne
mov
andl
test
je
mov
lea
push
push
push
call
test
mov
jne
pushl
lea
call
test
jne
mov
mov
mov
lea
mov
call
lea
call
xor
lea
call
mov
pop
pop
pop
leave
ret
push
mov
sub
push
push
push
xor
push
lea
mov
call
lea
push
mov
call
test
mov
js
mov
add
push
mov
call
pushl
mov
pushl
call
test
mov
js
cmpl
je
mov
andl
add
mov
mov
push
mov
call
mov
push
push
call
test
mov
js
mov
mov
mov
lea
mov
lea
push
xor
push
lea
mov
mov
call
test
jne
pushl
lea
call
test
jne
mov
mov
lea
push
pushl
pushl
push
call
test
mov
jne
cmp
mov
mov
jge
pushl
pushl
push
call
test
mov
jne
pushl
pushl
mov
mov
push
call
test
mov
jne
cmpl
jne
mov
mov
add
call
cmp
jne
lea
call
xor
lea
call
pop
mov
pop
pop
leave
ret
mov
lea
xor
movl
call
jmp
mov
cmpl
push
mov
push
mov
push
mov
jge
cmp
je
mov
cmp
jne
movzwl
test
jne
movzwl
test
je
and
test
je
and
mov
lea
xor
call
mov
mov
cmpw
je
pop
pop
pop
ret
mov
and
test
je
and
mov
lea
add
call
jmp
andw
jmp
cmp
jne
push
pushl
call
pop
pop
test
jne
mov
call
jmp
mov
mov
sub
neg
sbb
inc
ret
push
mov
and
push
push
andl
lea
push
mov
push
call
pop
pop
lea
call
mov
test
mov
jne
mov
pop
ret
push
pushl
mov
call
mov
mov
shr
and
push
lea
call
jmp
push
mov
and
push
push
mov
push
push
mov
orl
testl
jne
mov
mov
mov
mov
mov
call
add
mov
mov
mov
test
je
pushl
mov
push
pushl
push
push
call
pop
pop
mov
pop
ret
push
push
pushl
call
jmp
push
mov
push
push
push
mov
push
push
lea
mov
mov
push
push
call
mov
test
je
push
cmp
jne
xor
pop
pop
pop
leave
ret
mov
and
je
mov
push
mov
call
mov
push
lea
push
push
xor
call
mov
mov
jmp
push
mov
test
push
push
mov
push
mov
mov
je
mov
test
jne
mov
test
je
push
push
mov
mov
push
pushl
call
mov
test
jne
pop
pop
xor
pop
pop
ret
push
mov
flds
fcomps
fnstsw
test
jp
mov
pop
ret
push
mov
fldl
faddl
fstpl
fldl
faddl
fstpl
fldl
faddl
fsubrl
fldz
fcom
fnstsw
test
je
fxch
fstpl
fldl
faddl
fsubrl
fcom
fnstsw
test
jnp
fstp
fstpl
pop
ret
fstp
jmp
push
mov
push
xor
push
xor
inc
cmp
mov
mov
mov
mov
je
cmp
je
cmpl
mov
je
cmp
jne
mov
mov
lea
push
push
push
call
xor
inc
mov
mov
test
je
cmp
je
cmpl
je
mov
call
mov
pop
leave
ret
mov
mov
push
push
push
push
call
test
jl
cmp
jle
cmp
je
add
cmp
ja
push
pop
cmp
je
mov
mov
jmp
mov
mov
jmp
push
jmp
xor
jmp
mov
jmp
push
mov
and
sub
push
mov
push
mov
push
push
lea
lea
call
xor
cmp
je
mov
mov
mov
mov
mov
push
push
push
push
call
cmp
je
cmp
je
pop
pop
xor
pop
mov
pop
ret
cmp
je
jmp
mov
cmp
jg
je
sub
jne
ret
push
mov
push
push
push
mov
push
lea
cmpl
mov
jne
lea
mov
test
mov
jne
push
mov
lea
push
call
pop
pushl
lea
mov
call
xor
cmp
jne
mov
mov
cmp
mov
jne
cmp
movl
je
mov
lea
cmpl
jne
mov
call
cmpl
pop
jne
mov
call
lea
call
pop
pop
leave
ret
push
mov
sub
push
push
push
mov
push
pushl
lea
mov
push
mov
call
lea
mov
lea
push
lea
push
push
movl
call
add
push
push
push
lea
call
mov
xor
cmp
ja
lea
call
push
push
push
lea
push
mov
mov
call
cmp
pop
pop
pop
jne
leave
ret
push
mov
sub
andl
push
mov
test
push
je
mov
lea
push
push
push
call
add
test
jne
mov
mov
call
test
je
lea
push
call
test
je
andl
push
xor
lea
mov
mov
push
push
push
call
cmp
je
mov
cmp
jne
movl
mov
lea
push
push
mov
call
cmpw
jne
push
mov
lea
mov
mov
call
mov
mov
call
mov
mov
mov
shr
cmpl
mov
je
cmp
mov
je
andl
mov
cmp
jge
mov
shr
mov
andl
cmpl
mov
jne
movzbl
call
test
je
movl
mov
mov
cmp
jl
lea
xor
call
add
je
pop
pop
leave
ret
mov
mov
mov
lea
push
push
pushl
mov
movb
call
add
cmpb
mov
jne
cmp
je
mov
mov
call
test
jne
cmp
jne
jmp
mov
mov
jmp
sub
mov
mov
mov
lea
push
lea
mov
mov
mov
call
pushl
mov
lea
push
mov
call
jmp
cmp
jne
jmp
pushl
mov
mov
call
mov
test
pop
jne
jmp
cmp
jne
mov
xor
test
jle
mov
lea
push
dec
push
push
call
mov
add
mov
mov
jmp
push
lea
sub
mov
xor
mov
push
push
push
mov
mov
xor
push
mov
lea
mov
call
cmp
je
mov
call
test
jne
push
lea
mov
call
testb
mov
je
mov
lea
push
push
pushl
push
call
mov
cmp
je
lea
push
lea
xor
lea
inc
push
mov
mov
movl
movl
mov
mov
movl
movl
mov
mov
push
call
testb
jne
testb
jne
mov
push
pop
cmp
je
testb
jne
testb
jne
lea
call
mov
lea
call
mov
pop
pop
mov
xor
pop
call
add
leave
ret
xor
inc
jmp
push
mov
push
push
mov
xor
cmp
jne
push
mov
cmp
je
cmp
mov
je
cmp
je
push
lea
mov
call
mov
mov
lea
push
push
call
cmp
je
lea
push
pushl
mov
pushl
pushl
call
add
test
js
mov
mov
xor
lea
call
mov
pop
pop
pop
pop
ret
lea
call
cmp
je
pushl
add
pushl
mov
pushl
push
call
jmp
push
mov
push
push
mov
push
push
xor
lea
mov
call
mov
cmp
mov
je
push
call
cmp
pop
je
mov
mov
mov
mov
xor
inc
andb
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
movl
cmp
je
mov
mov
mov
push
call
lea
call
mov
pop
pop
leave
ret
xor
jmp
push
mov
sub
mov
inc
add
xor
mov
mov
push
push
mov
mov
cmpl
push
mov
mov
mov
jge
andl
testb
mov
jne
andl
lea
push
pushl
mov
push
call
test
jne
mov
sub
jne
cmpl
jne
testb
jne
xor
mov
pop
pop
xor
pop
call
leave
ret
andl
lea
push
pushl
mov
pushl
mov
call
test
jne
testb
je
cmpl
je
jmp
test
je
mov
pushl
add
push
push
call
add
jmp
push
mov
push
mov
testb
jne
mov
mov
push
mov
push
pushl
pushl
call
test
js
orl
pushl
mov
pushl
mov
call
mov
test
js
mov
pop
pop
pop
ret
mov
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
lea
push
mov
call
mov
push
push
call
mov
test
pop
je
pushl
push
call
andl
mov
push
lea
call
mov
mov
lea
push
push
push
call
lea
mov
call
mov
pop
pop
pop
ret
push
mov
push
push
mov
push
lea
add
test
mov
je
mov
push
call
mov
test
je
movzwl
mov
push
pushl
push
call
mov
andl
andw
lea
call
pop
pop
mov
pop
pop
ret
push
push
mov
mov
push
lea
push
call
push
pushl
pushl
pushl
pushl
call
pop
pop
pop
ret
test
je
mov
push
mov
call
test
je
mov
mov
cmp
je
mov
cmpb
jne
mov
mov
call
test
jne
push
mov
test
jne
xor
test
jne
and
jne
mov
pop
ret
mov
mov
and
je
jmp
mov
call
jmp
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
mov
cmp
push
je
cmp
jbe
cmp
jne
mov
mov
lea
push
push
xor
mov
push
movl
mov
mov
call
add
cmp
je
mov
push
mov
mov
call
add
cmp
je
mov
lea
mov
lea
movl
push
push
mov
movl
mov
mov
call
mov
pop
pop
pop
mov
pop
ret
push
call
xor
add
cmp
je
mov
mov
cltd
mov
mov
movl
mov
mov
pop
pop
pop
mov
pop
ret
push
call
xor
add
cmp
je
mov
mov
mov
fldl
mov
fstpl
movl
pop
pop
pop
mov
pop
ret
cmp
je
cmp
jne
push
call
xor
add
cmp
je
mov
pop
pop
movl
pop
mov
pop
ret
push
mov
push
mov
mov
add
mov
je
mov
push
call
mov
mov
mov
mov
mov
add
je
mov
push
push
push
call
mov
lea
call
mov
pop
pop
ret
xor
jmp
push
mov
push
push
mov
cmpb
jne
movb
mov
test
mov
movb
jne
mov
mov
andl
push
inc
push
lea
mov
call
mov
mov
lea
push
push
call
test
js
mov
push
lea
push
mov
call
mov
push
push
call
mov
mov
lea
push
push
call
lea
call
movb
xor
pop
pop
pop
leave
ret
mov
mov
pushl
mov
mov
push
push
call
movsbl
add
and
ret
testb
push
mov
movl
je
push
call
pop
mov
pop
ret
mov
test
je
movw
xor
ret
mov
lea
push
mov
or
lock
dec
pop
je
ret
xor
inc
mov
mov
push
call
xor
jmp
push
mov
sub
mov
push
push
push
xor
mov
mov
cmp
mov
je
lea
call
pushl
lea
call
mov
call
test
je
movl
push
lea
mov
call
lea
push
call
add
add
addb
cmp
mov
push
lea
mov
call
pushl
lea
push
push
call
add
test
jne
mov
push
lea
mov
call
push
push
push
push
pushl
lea
push
xor
call
add
test
jne
call
cmp
mov
je
mov
push
call
cmp
je
mov
pushl
mov
push
call
cmp
je
mov
mov
push
lea
mov
mov
call
pushl
mov
push
lea
push
push
pushl
mov
pushl
push
call
test
jne
mov
push
lea
mov
call
mov
lea
push
push
call
test
jne
pushl
pushl
pushl
call
add
test
jne
mov
mov
mov
mov
lea
mov
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
mov
pop
pop
pop
leave
ret
push
push
mov
push
mov
push
mov
push
mov
mov
cmpl
jge
cmpl
movl
je
testl
je
nop
sub
push
push
push
call
mov
add
test
je
sub
add
add
cmp
jbe
cmpb
jne
sub
push
push
push
movb
call
test
js
testb
jne
lea
mov
jmp
testb
jne
mov
sub
jne
xor
pop
pop
pop
pop
pop
ret
push
call
add
test
je
call
test
mov
je
mov
test
je
jmp
mov
test
je
mov
mov
call
test
jne
orl
cmp
jb
mov
push
push
push
push
call
test
je
cmp
jbe
jmp
xor
jmp
mov
jmp
mov
and
or
jne
mov
ret
push
mov
push
push
pushl
andl
andl
mov
lea
call
mov
test
je
add
mov
call
push
mov
lea
call
mov
test
mov
jne
lea
call
lea
call
mov
leave
ret
mov
push
call
jmp
push
xor
cmp
je
cmp
jne
push
push
call
cmp
pop
je
movl
movl
mov
mov
xor
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
pushl
mov
pushl
push
call
test
js
xor
pop
pop
ret
xor
jmp
push
mov
and
sub
push
mov
cmpl
push
push
mov
je
mov
test
jne
xor
pop
pop
pop
mov
pop
ret
push
lea
sub
mov
xor
mov
mov
and
neg
push
push
sbb
inc
mov
lea
push
call
mov
xor
cmp
mov
jne
cmp
jne
testb
jne
mov
cmp
jne
pushl
mov
push
mov
call
cmp
movb
jne
mov
mov
lea
push
mov
call
mov
push
mov
lea
mov
mov
call
lea
push
pushl
lea
mov
mov
mov
push
mov
mov
movl
movl
mov
call
cmp
jne
cmp
jne
mov
mov
cmp
jne
movzbl
push
push
lea
call
testb
je
mov
add
push
call
test
pop
je
lea
call
lea
call
lea
call
mov
pop
xor
pop
call
add
leave
ret
cmp
je
cmp
jne
mov
mov
lea
push
call
cmp
je
jmp
cmp
je
mov
lea
push
call
cmp
je
jmp
movb
jmp
pushl
mov
push
mov
call
test
je
jmp
int3
int3
int3
int3
int3
int3
int3
mov
test
push
push
je
mov
mov
mov
cmp
je
mov
add
test
jne
mov
pop
movl
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
xor
cmp
jg
xor
cmp
jg
xor
cmp
jne
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
call
test
je
xor
ret
xor
inc
ret
push
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
mov
test
je
push
mov
cmpw
je
test
jbe
mov
mov
lea
cmpw
je
sub
add
test
jne
push
mov
mov
call
add
test
je
cmpl
jne
test
jbe
mov
mov
nop
cmpw
je
sub
add
test
jne
mov
lea
push
movb
call
test
je
movl
mov
lea
mov
push
lea
mov
mov
push
lea
push
movl
movl
mov
mov
call
mov
test
jne
test
jne
xor
pop
pop
pop
add
ret
mov
lea
mov
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
lea
push
lea
push
lea
push
lea
mov
mov
mov
mov
call
add
test
jne
mov
lea
lea
mov
movl
movl
movl
call
add
push
mov
call
add
test
jne
push
push
call
mov
add
jmp
push
lea
sub
mov
xor
mov
mov
mov
lea
push
mov
mov
mov
mov
cmp
lea
ja
mov
test
jne
mov
mov
cmp
mov
lea
ja
xor
test
jne
mov
test
jne
mov
mov
mov
mov
add
mov
cmp
mov
jb
mov
push
pushl
mov
pushl
call
test
je
test
jbe
mov
mov
lea
push
push
mov
call
mov
insl
fiadds
call
add
leave
ret
cmp
jae
jmp
push
call
pop
ret
push
mov
sub
mov
xor
mov
mov
andl
push
mov
push
mov
lea
call
mov
test
jne
lea
call
mov
xor
xor
pop
call
leave
ret
andl
push
push
lea
push
lea
lea
push
mov
movl
movl
mov
fxch
inc
add
inc
cwtl
shl
mov
add
add
movl
mov
push
call
testb
mov
jne
testb
jne
test
jns
testb
jne
inc
add
push
movsb
call
pop
pop
jmp
push
push
push
push
push
lea
mov
mov
push
push
call
mov
mov
cmp
jne
push
push
lea
mov
mov
push
push
call
mov
cmp
jne
mov
test
mov
jne
test
jne
lea
call
lea
call
lea
call
add
iret
pop
jmp
lea
call
jmp
push
mov
sub
mov
push
push
xor
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
push
lea
mov
call
mov
lea
push
push
call
test
js
pushl
mov
push
mov
mov
push
call
lea
mov
call
lea
call
lea
call
pop
mov
pop
leave
ret
push
mov
and
sub
push
mov
push
xor
cmp
push
je
mov
push
lea
lea
movl
mov
mov
mov
call
cmp
je
lea
call
mov
cmp
push
mov
je
mov
push
call
lea
call
mov
test
jne
push
lea
mov
call
lea
push
mov
call
test
jne
mov
push
call
mov
lea
push
call
add
jne
cmpl
je
cmpl
movl
je
lea
push
pushl
mov
push
lea
call
mov
test
jne
cmpl
je
lea
call
mov
lea
call
lea
call
mov
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
mov
mov
push
push
call
mov
add
xor
test
je
mov
push
push
lea
push
push
push
push
mov
push
push
call
add
test
js
mov
movl
testl
jne
lea
call
mov
push
push
lea
call
test
je
mov
mov
lea
push
push
mov
movl
movl
movl
call
mov
mov
lea
push
push
push
push
call
add
test
je
movb
mov
test
je
mov
add
push
call
add
test
jne
push
call
add
cmpb
jne
mov
mov
mov
push
push
push
call
add
cmp
jne
mov
mov
test
mov
jne
xor
test
js
test
je
mov
mov
mov
push
call
test
js
mov
lea
mov
call
push
call
mov
add
pop
pop
pop
mov
pop
ret
cmpb
jne
cmpl
mov
jne
mov
test
je
and
test
je
pushl
mov
push
mov
call
test
jne
inc
ret
pushl
mov
push
call
neg
sbb
inc
ret
xor
ret
xor
jmp
test
je
mov
test
jne
mov
test
jns
cmpl
je
push
lea
call
mov
neg
sbb
and
je
mov
ret
xor
ret
push
mov
sub
push
mov
push
pushl
mov
pushl
push
push
call
test
js
mov
mov
push
mov
mov
mov
lea
push
push
push
call
mov
push
push
mov
call
test
pop
pop
js
mov
mov
call
mov
mov
mov
push
push
push
call
andl
mov
mov
mov
test
je
mov
mov
mov
call
test
je
mov
cmpl
jne
xor
test
jne
mov
test
je
lea
push
mov
call
test
jne
mov
mov
mov
mov
test
mov
je
mov
push
call
mov
cmpl
jne
cmp
jne
movl
lea
call
mov
mov
mov
mov
lea
push
call
mov
andl
push
mov
lea
mov
call
mov
orl
test
je
mov
lea
push
push
call
test
js
cmpl
jne
movb
mov
mov
call
test
je
mov
mov
cmp
je
lea
call
lea
call
mov
pop
pop
pop
leave
ret
cmp
je
cmp
jne
movl
jmp
cmpl
jne
mov
push
pushl
mov
pushl
push
call
test
je
mov
mov
mov
mov
call
test
je
mov
push
mov
call
jmp
mov
call
cmp
jne
mov
call
test
jne
xor
inc
ret
push
mov
push
push
push
mov
add
mov
mov
push
lea
lea
cmp
je
mov
lea
call
add
cmp
jne
push
push
push
push
mov
call
mov
cmp
mov
jne
mov
mov
test
je
push
call
pop
pop
pop
pop
leave
ret
push
mov
push
push
push
mov
test
mov
je
push
xor
cmp
jne
mov
lea
push
push
mov
call
test
js
cmp
jne
push
call
cmp
pop
je
mov
mov
movl
mov
cmp
je
mov
push
call
mov
push
push
push
call
mov
mov
push
call
mov
pop
pop
pop
leave
ret
mov
push
call
xor
jmp
xor
jmp
push
mov
test
push
je
xor
inc
pop
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
mov
cmp
jne
mov
push
mov
test
push
push
jbe
xor
mov
mov
mov
mov
mov
mov
mov
push
call
test
je
pop
pop
pop
mov
pop
ret
add
add
cmp
jb
pop
pop
pop
xor
pop
ret
cmp
ja
movzbl
jmp
mov
adc
xchg
cmp
sbb
cmp
dec
xchg
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
push
push
mov
xor
cmp
je
mov
cmp
je
pushl
call
pop
pop
pop
ret
mov
cmp
je
pushl
mov
push
call
pop
jmp
cmp
je
push
lea
mov
cmp
jbe
push
xor
lea
mov
cmp
je
pushl
call
pop
mov
inc
cmp
jb
pop
mov
mov
push
push
push
push
call
inc
add
adc
test
mov
lds
jno
mov
push
call
pop
jmp
mov
call
push
pop
ret
push
mov
push
lea
push
mov
call
test
jne
and
lea
call
push
call
pop
xor
pop
pop
ret
push
mov
push
mov
andl
mov
lea
push
pushl
push
call
cmpl
je
mov
leave
ret
mov
test
je
mov
lea
push
pushl
push
call
jmp
push
mov
sub
add
enter
mov
mov
push
push
push
mov
mov
xor
push
mov
lea
mov
call
mov
cmp
jne
mov
lea
call
mov
pop
mov
pop
xor
pop
call
leave
ret
push
mov
and
push
test
push
push
push
je
mov
mov
mov
xor
cmp
jne
cmpl
je
test
mov
je
mov
mov
call
test
je
mov
test
jne
cmp
jne
push
pushl
push
call
mov
mov
mov
call
mov
test
jne
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
push
push
mov
push
mov
add
xor
cmp
je
mov
cmpb
je
add
cmp
jne
test
jne
pop
pop
mov
pop
ret
push
mov
push
mov
test
je
push
mov
mov
mov
call
test
js
mov
andl
push
mov
lea
call
mov
mov
push
call
test
mov
je
mov
push
call
lea
call
xor
pop
pop
pop
ret
push
mov
and
sub
cmpb
push
push
push
jne
xor
cmp
je
mov
mov
lea
call
mov
cmp
movb
je
cmpb
jne
mov
pushl
mov
mov
mov
lea
mov
mov
call
mov
cmp
jne
lea
push
mov
call
inc
add
mov
mov
call
cmp
jne
incw
lea
push
pushl
call
mov
mov
mov
cmpw
jne
mov
call
decw
lea
call
xor
cmpb
jne
cmp
je
mov
call
cmp
je
cmp
mov
mov
jne
mov
mov
cmp
je
add
mov
incl
incl
mov
mov
mov
call
xor
cmp
je
incl
incw
push
push
pushl
push
mov
call
cmpb
jne
mov
cmpw
jne
mov
call
decw
cmpb
jne
decl
call
cmpb
jne
mov
mov
pushl
xor
call
cmpb
jne
lea
push
call
mov
call
pushl
call
lea
call
cmpb
jne
mov
andl
push
push
push
mov
mov
push
mov
call
cmpb
je
mov
testw
jne
lea
push
lea
mov
movb
movl
movl
mov
mov
call
cmp
je
mov
cmp
je
mov
lea
push
push
push
call
test
jns
movl
mov
mov
push
pushl
push
push
push
call
lea
call
mov
pop
pop
pop
mov
pop
ret
mov
call
jmp
incl
jmp
push
mov
and
pushl
mov
pushl
mov
push
push
pushl
call
add
pop
ret
pushl
lea
pushl
call
test
jne
xor
ret
pushl
mov
mov
call
test
je
jmp
cmpb
push
je
cmpl
mov
je
incl
incl
push
push
mov
mov
mov
mov
pushl
mov
pushl
call
cmpb
jne
decl
call
pop
ret
xor
cmp
setne
ret
int3
int3
int3
push
push
push
mov
test
je
mov
nop
mov
mov
test
jne
mov
test
jne
pop
pop
xor
pop
ret
mov
test
je
mov
call
test
je
push
mov
mov
call
jmp
mov
call
test
jne
jmp
mov
cmpl
je
pushl
mov
pushl
mov
push
call
ret
mov
mov
push
push
push
call
mov
xor
cmp
je
push
push
mov
call
pop
ret
mov
cmpl
je
pushl
mov
pushl
mov
pushl
push
call
ret
push
mov
push
push
push
mov
mov
test
push
mov
je
mov
lea
push
pushl
push
call
test
jne
mov
pop
pop
leave
ret
mov
cmpl
je
pushl
mov
pushl
mov
push
call
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
push
push
push
push
push
push
push
push
push
push
push
push
lea
call
add
lea
mov
xor
mov
push
mov
mov
mov
mov
call
mov
test
je
mov
add
push
call
add
test
je
lea
mov
lea
lea
lea
mov
mov
push
lea
lea
push
movl
movl
mov
movl
movl
mov
mov
mov
mov
mov
mov
mov
call
mov
lea
push
push
lea
call
mov
test
mov
mov
je
mov
add
push
call
add
test
jne
push
call
add
mov
mov
test
jne
test
jne
mov
test
jne
pop
add
jne
cmp
je
mov
mov
push
mov
call
mov
mov
mov
push
push
mov
mov
add
push
lea
movl
movl
mov
call
mov
mov
push
lea
push
push
call
mov
mov
test
jne
test
jne
mov
test
jne
test
jne
test
js
mov
mov
lea
push
push
mov
call
test
js
cmp
je
mov
mov
mov
mov
add
call
test
js
mov
mov
lea
push
push
push
mov
call
cmp
je
mov
mov
lea
push
push
push
mov
call
cmp
je
cmp
je
mov
cmp
je
mov
mov
push
call
lea
call
lea
call
mov
test
je
mov
add
push
call
add
test
jne
push
call
add
xor
pop
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
push
mov
push
mov
push
mov
cmp
je
mov
cmp
jb
mov
push
push
push
mov
call
test
je
test
jbe
mov
mov
mov
lea
jmp
lea
movsbw
sub
mov
add
add
test
jne
pop
pop
pop
ret
push
call
add
mov
jmp
cmp
jle
mov
cmp
jge
mov
ret
mov
push
mov
cmp
push
mov
mov
jg
cmp
jl
mov
mov
cmp
mov
jg
cmp
jl
mov
pop
mov
mov
pop
ret
mov
jmp
mov
jmp
mov
jmp
push
mov
push
push
mov
push
push
mov
push
mov
call
pop
pushl
mov
call
test
je
mov
test
je
cmpb
je
push
call
pop
push
call
pop
xor
pop
pop
leave
ret
push
mov
lea
push
call
mov
pop
mov
push
call
pop
ret
push
mov
push
push
test
je
mov
lea
push
push
call
mov
test
je
mov
lea
push
push
push
call
mov
test
jne
mov
leave
ret
xor
leave
ret
mov
push
call
jmp
push
mov
push
push
push
mov
mov
mov
mov
mov
mov
call
add
jne
mov
mov
call
test
je
mov
mov
mov
lea
push
push
pushl
push
call
cmpl
je
mov
cmp
jne
pop
pop
pop
pop
ret
lea
add
push
call
jmp
xor
jmp
push
mov
push
push
push
mov
mov
test
je
mov
push
xor
cmp
jne
call
cmp
je
mov
mov
call
pop
pop
leave
ret
cmp
jne
xor
jmp
push
call
cmp
pop
je
mov
call
mov
push
mov
call
push
xor
push
lea
call
mov
cmp
mov
pop
pop
pop
push
mov
push
jne
mov
push
call
test
js
mov
lea
call
mov
jmp
mov
dec
js
mov
cmp
jge
pushl
pushl
call
xor
ret
sub
fldl
push
fsubl
push
fstl
fldl
fsubl
fstl
fldl
fsubl
fsubp
fstpl
fldl
mov
fsubl
fsubp
fstpl
call
test
jne
mov
fldl
lea
fcompl
fnstsw
test
jnp
fldl
fcompl
fnstsw
test
jnp
mov
fldl
sub
fstpl
call
fstpl
fldl
fstpl
call
fldl
lea
fstpl
add
fstpl
fldl
fcompl
fnstsw
test
jnp
mov
fldl
lea
fcompl
fnstsw
test
jnp
mov
fldl
sub
fstpl
call
fstpl
fldl
fstpl
call
fldl
lea
fstpl
add
fstpl
fldl
fcompl
fnstsw
test
jnp
mov
fldl
lea
fcompl
fnstsw
test
jnp
mov
fldl
sub
fstpl
call
fstpl
fldl
fstpl
call
fldl
lea
fstpl
add
fstpl
fldl
fcompl
fnstsw
test
jnp
mov
fldl
lea
fcompl
fnstsw
test
jnp
fldl
sub
fstpl
call
fstpl
fldl
fstpl
call
fldl
add
fstpl
fstpl
pop
pop
add
ret
lea
jmp
lea
jmp
lea
jmp
lea
jmp
fldl
pop
fld
pop
fldl
fld
fxch
fstpl
fxch
fstpl
fldl
fstl
fxch
fstpl
fldl
fld
fxch
fstpl
fxch
fstpl
fxch
fstpl
fstpl
add
ret
lea
jmp
fldz
fcoml
fnstsw
test
jp
fcoml
fnstsw
test
jnp
fcoml
fnstsw
test
jnp
fstp
xor
ret
fcoml
fnstsw
test
jp
jmp
fcoml
fnstsw
test
jp
fcoml
fnstsw
test
jp
fstp
mov
ret
push
mov
sub
andl
push
push
mov
mov
push
lea
cmp
jb
xor
pop
pop
pop
leave
ret
push
mov
push
push
cmpl
je
cmpb
movl
movl
add
dec
clc
push
movzbl
dec
je
dec
jne
push
push
mov
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
push
push
push
je
mov
mov
test
je
testb
je
mov
mov
mov
mov
and
je
mov
mov
mov
cmp
jne
test
je
mov
mov
cmpl
je
mov
push
push
push
mov
push
call
mov
add
mov
xor
pop
pop
pop
ret
xor
jmp
xor
jmp
mov
movl
xor
pop
pop
pop
ret
push
mov
sub
mov
xor
mov
andl
push
mov
push
mov
lea
lea
push
mov
mov
test
inc
add
adc
add
movl
movb
call
test
js
mov
lea
push
mov
mov
call
test
je
cmpl
je
testb
je
mov
add
push
call
test
pop
jne
push
call
pop
mov
mov
pop
xor
pop
call
leave
ret
mov
lea
push
call
test
pop
je
mov
mov
add
push
push
call
test
js
mov
jmp
push
mov
push
push
push
mov
push
mov
push
call
mov
andl
pop
push
mov
lea
call
mov
test
je
pushl
mov
push
call
lea
mov
call
push
call
pop
mov
pop
pop
leave
ret
push
push
call
mov
test
pop
je
push
push
push
call
add
mov
mov
xor
pop
ret
push
mov
sub
push
mov
mov
call
mov
test
je
movb
mov
test
je
mov
mov
call
andl
andl
lea
mov
mov
lea
mov
mov
mov
mov
cmp
jae
incl
mov
mov
lea
call
inc
add
mov
push
call
mov
jmp
lea
call
mov
mov
mov
pop
leave
ret
mov
call
pushl
mov
push
call
ret
push
mov
sub
mov
xor
mov
push
mov
push
mov
mov
push
push
call
xor
push
lea
mov
mov
call
inc
add
cmp
je
mov
mov
push
call
xor
test
js
mov
cmp
je
mov
lea
mov
push
mov
push
push
call
cmpl
movl
je
mov
mov
andl
lea
push
push
push
call
cmpl
movl
je
andl
lea
mov
mov
mov
lea
push
movl
movl
movb
mov
push
call
mov
push
lea
call
testb
je
mov
test
je
mov
call
mov
push
call
orb
andb
testb
je
mov
add
push
call
test
pop
je
lea
call
mov
push
call
xor
inc
mov
pop
pop
xor
pop
call
leave
ret
movl
jmp
movl
jmp
push
call
pop
jmp
mov
test
je
mov
push
call
xor
inc
ret
push
mov
sub
push
push
mov
andb
movzbl
push
and
push
push
pushl
mov
mov
xor
incl
mov
lock
call
mov
orb
push
mov
call
mov
mov
cmp
jg
dec
lea
mov
call
decl
fidivl
xlat
cmp
mov
mov
xor
pop
and
xor
pop
xor
pop
leave
ret
mov
mov
mov
mov
mov
mov
mov
call
cmpl
mov
jne
mov
mov
mov
cmp
jae
push
push
mov
call
movl
mov
incl
cmp
mov
mov
mov
jge
jmp
int3
int3
int3
int3
sub
mov
xor
mov
mov
test
push
mov
push
mov
push
mov
push
mov
je
cmpl
jge
mov
mov
push
mov
call
push
push
call
add
test
je
push
push
call
add
test
je
orb
cmpl
movb
je
mov
mov
push
push
mov
call
mov
lea
lea
push
mov
mov
mov
push
movl
movl
movl
movb
call
test
js
mov
mov
add
mov
mov
mov
mov
mov
mov
push
lea
lea
mov
call
mov
sub
mov
add
lea
xor
mov
movl
call
lea
push
lea
call
mov
mov
call
lea
mov
call
mov
call
test
js
mov
test
je
mov
add
push
call
add
test
je
xor
mov
pop
pop
pop
pop
xor
call
add
ret
mov
mov
mov
movb
call
movb
mov
movb
jmp
push
mov
sub
mov
xor
mov
mov
test
push
push
push
je
xor
cmp
mov
jne
lea
mov
mov
push
lea
push
mov
movl
movl
mov
call
cmpb
jne
mov
call
mov
mov
mov
mov
cmp
je
mov
shr
and
jne
mov
push
mov
lea
mov
mov
call
mov
cmp
je
push
lea
call
mov
lea
push
push
call
mov
cmp
je
mov
lea
push
push
call
cmp
jbe
mov
mov
push
lea
mov
call
mov
lea
push
pushl
push
call
test
js
cmp
je
pushl
mov
lea
mov
call
add
cmp
je
mov
push
push
call
lea
call
lea
call
incl
mov
cmp
jb
lea
call
lea
call
mov
cmp
je
cmp
je
lea
push
add
push
mov
mov
push
call
test
js
cmp
je
pushl
mov
lea
mov
call
mov
pushl
mov
push
call
lea
call
mov
cmp
je
mov
push
call
mov
xor
call
mov
cmp
mov
je
mov
push
call
mov
cmp
je
lea
xor
call
mov
push
mov
lea
mov
mov
call
mov
push
lea
call
mov
lea
push
mov
call
mov
push
mov
lea
mov
call
mov
cmp
je
mov
cmp
je
add
mov
pushl
xor
push
pushl
lea
inc
push
movl
movl
mov
mov
push
call
pushl
pushl
call
mov
pop
pop
pushl
lea
push
pushl
movl
push
movl
mov
mov
push
call
pushl
pushl
call
mov
pop
pop
pushl
lea
push
pushl
movl
push
movl
mov
mov
push
call
pushl
pushl
call
pop
pop
mov
mov
push
call
lea
mov
call
lea
call
lea
call
push
lea
push
mov
mov
call
mov
cmp
je
mov
cmp
jne
lea
call
lea
call
pushl
add
call
pop
pop
mov
pop
pop
xor
pop
call
leave
ret
push
call
cmp
pop
je
mov
xor
mov
stos
stos
xor
mov
push
mov
call
mov
pop
mov
lea
push
add
mov
push
push
call
test
jns
jmp
mov
push
mov
lea
mov
call
mov
cmp
je
push
lea
call
mov
lea
push
push
call
lea
call
jmp
push
lea
call
xor
call
jmp
push
mov
sub
push
lea
mov
test
jne
inc
add
or
andl
andl
lea
mov
push
lea
lea
movl
mov
call
pushl
andl
mov
lea
call
mov
test
je
mov
push
push
call
xor
mov
call
lea
xor
call
lea
xor
call
lea
call
lea
call
pop
leave
ret
push
push
push
push
push
push
push
movl
lea
mov
mov
push
push
call
mov
mov
cmp
jne
lea
mov
mov
add
lea
cmp
jne
push
push
push
push
call
mov
cmp
jne
push
xor
push
lea
mov
mov
push
push
call
mov
cmp
je
testl
je
add
cmp
jne
push
push
lea
mov
mov
push
push
call
mov
cmp
je
testl
je
add
cmp
jne
push
push
push
lea
push
call
inc
add
les
jmp
push
mov
and
mov
sub
cmpl
push
push
push
mov
jle
cmpl
jle
fldl
mov
fstl
fildl
fstl
fidivrl
fstl
fcompp
fnstsw
test
je
lea
fldl
sub
fldl
fmul
fxch
fstl
fmull
faddp
fstpl
call
call
fldl
fmull
mov
faddl
fstpl
call
add
call
test
mov
mov
mov
movl
jne
xor
cltd
idivl
cmp
mov
jg
lea
test
mov
mov
mov
jg
test
jg
test
jg
testb
jne
test
je
addl
mov
test
mov
jne
mov
pop
pop
pop
mov
pop
ret
mov
fildl
lea
fldl
fdivr
fxch
fstpl
fildl
fdiv
fstpl
movsb
roll
icebp
fstpl
fildl
mov
fdiv
fstpl
fildl
fdiv
fstpl
fildl
fdiv
fstpl
fildl
fdiv
fstpl
fidivrl
fstpl
call
mov
push
lea
push
lea
push
lea
push
lea
push
mov
mov
mov
call
test
je
addl
mov
test
mov
je
jmp
mov
and
neg
sbb
inc
ret
push
mov
mov
mov
push
push
xor
push
add
call
mov
neg
sbb
and
cmp
jne
xor
cmp
jne
mov
pop
pop
pop
ret
mov
jmp
push
lea
mov
call
mov
lea
push
push
call
test
js
mov
cmp
je
pushl
mov
pushl
push
call
mov
lea
call
mov
jmp
mov
mov
jmp
push
mov
and
push
push
mov
push
push
mov
testb
jne
push
lea
push
call
test
je
andb
cmpl
je
mov
test
jne
pushl
pushl
pushl
push
call
testb
jne
push
lea
push
call
test
je
mov
andb
test
je
cmp
je
mov
or
mov
xor
inc
pop
pop
pop
mov
pop
ret
cmp
jne
movzwl
mov
push
push
mov
push
mov
call
test
je
mov
mov
mov
pushl
xor
pushl
pushl
push
call
mov
movzwl
push
push
push
mov
call
test
je
mov
mov
jmp
push
push
pushl
mov
call
jmp
push
mov
call
test
je
orb
cmpl
jne
mov
push
push
mov
call
jmp
push
mov
sub
push
mov
mov
push
push
xor
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
push
lea
mov
call
mov
lea
push
push
call
pushl
mov
lea
mov
call
mov
cmp
je
lea
push
mov
mov
push
call
cmp
jne
mov
mov
push
call
lea
call
lea
call
lea
call
inc
lea
call
mov
pop
pop
pop
leave
ret
push
mov
sub
push
xor
inc
cmpl
push
mov
jl
jg
cmpl
jbe
mov
mov
lea
push
call
test
je
push
mov
mov
mov
push
mov
call
pushl
mov
lea
push
push
movl
movl
mov
call
pushl
mov
pushl
call
mov
test
pop
pop
jne
mov
mov
push
call
test
jne
cmpb
mov
lea
je
push
call
test
mov
je
mov
mov
push
call
pushl
mov
mov
lea
push
push
movl
movl
mov
call
pushl
mov
pushl
call
test
pop
pop
jne
cmpb
je
pushl
mov
pushl
mov
lea
push
push
movl
movl
mov
call
pushl
mov
pushl
call
pop
pop
test
jne
mov
mov
lea
push
push
call
test
jne
xor
cmp
je
lea
push
mov
mov
mov
mov
push
push
call
add
mov
andl
andl
lea
push
push
push
call
add
mov
andl
andl
lea
push
push
push
call
add
mov
andl
andl
lea
push
push
push
call
add
add
sub
test
call
test
mov
je
mov
mov
push
call
cmpl
jl
jg
cmpl
ja
mov
lea
push
movl
movl
mov
mov
push
call
pushl
mov
pushl
call
test
pop
pop
jne
mov
movl
movl
mov
mov
mov
call
push
push
lea
push
pushl
mov
call
pushl
mov
pushl
call
pop
pop
test
jne
pushl
mov
pushl
lea
push
movl
movl
mov
mov
push
call
pushl
mov
pushl
call
test
pop
pop
jne
adc
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
push
and
rclb
shlb
or
add
mov
mov
push
call
pushl
mov
pushl
call
add
pop
pop
jne
movzwl
mov
push
lea
push
movl
movl
mov
mov
push
call
pushl
mov
pushl
call
test
pop
pop
jne
mov
movl
movl
mov
mov
push
call
mov
imul
test
add
cmpsb
add
pop
gs
into
add
add
add
add
mov
add
pusha
pop
mov
loopne
add
lods
add
add
add
add
fldl
add
pop
ljmp
add
int
mov
add
mov
xchg
mov
hlt
push
mov
sub
push
push
push
lea
push
push
call
add
add
test
add
add
add
mov
scas
pop
jb
xchg
add
xchg
add
add
add
clc
jmp
mov
add
loopne
mov
sub
pop
popl
push
push
push
push
push
lea
push
push
push
push
call
add
add
popf
xlat
repnz
add
add
pop
xchg
add
add
mov
les
add
mov
pusha
enter
sti
add
stos
in
mov
hlt
add
adc
jns
add
in
fcompl
push
push
push
push
push
push
push
call
call
lret
pop
ret
les
add
add
lds
loope
jmp
add
call
add
jecxz
add
popa
fsts
fistpl
xchg
cltd
push
add
add
out
sahf
add
add
add
mov
add
add
je
in
call
cmp
mov
pop
push
lea
push
push
push
call
add
jns
aad
pushf
fwait
pop
add
add
mov
add
xchg
mov
mov
mov
lret
add
jae
rcll
movsb
loopne
lock
loope
add
mov
call
push
lea
push
call
add
movl
movsl
pop
push
cli
arpl
cmc
pushf
in
mull
movb
pop
add
add
shlb
in
clc
lcall
add
xor
add
mov
push
push
lea
push
push
push
push
call
xchg
add
ret
add
in
add
out
mov
pop
add
shl
add
add
add
popf
hlt
add
in
in
jmp
push
push
call
scas
movsb
imul
pop
push
add
addr16
filds
imul
data16
movsl
testb
push
add
adc
push
add
clc
lcall
push
push
push
push
lea
push
push
push
push
call
jl
xchg
fiaddl
add
jb
add
add
icebp
aam
add
bound
jge
add
cmc
mov
mov
mov
add
fists
add
lcall
inc
hlt
mov
push
lea
push
push
push
push
lea
push
push
lea
push
push
call
add
xchg
add
push
fstpt
mov
add
add
jbe
push
add
mov
add
fs
sub
pop
add
push
lea
push
push
lea
push
lea
push
push
push
push
push
call
iret
lahf
mov
mov
shrb
add
js
lock
jl
add
add
add
scas
add
movsl
faddl
add
mov
shl
in
pusha
rcrb
add
movl
jbe
add
add
add
add
lcall
ret
add
add
push
push
call
add
int
mov
in
add
add
ja
add
add
hlt
out
sti
pop
bound
cwtl
mov
jl
add
jbe
add
stc
mov
fwait
out
add
in
stos
sub
pop
add
push
push
lea
push
push
push
lea
push
push
lea
push
call
xlat
scas
add
mov
pop
in
push
push
add
add
icebp
mov
push
add
xchg
add
add
leave
popf
push
mov
mov
stos
out
add
add
add
mov
xchg
mov
mov
test
add
sub
pop
mov
xor
push
push
not
shl
lea
push
or
not
add
shr
shr
sub
ror
pop
add
lea
pop
push
push
push
push
push
push
push
call
pop
add
add
test
mov
sahf
add
add
mov
push
imul
in
iret
test
shlb
repnz
hlt
add
lods
in
push
int
mov
bnd
add
scas
add
add
jne
push
push
call
int
xchg
add
sti
pop
push
add
in
push
clc
add
out
fstps
jno
fldl
jge
add
add
inc
pop
add
push
push
lea
push
push
lea
push
call
jle
pop
mov
add
add
rcrl
add
repnz
into
enter
add
mov
add
roll
jnp
mov
loop
xchg
pop
jmp
cli
add
add
add
in
in
pop
mov
push
lea
push
push
push
push
call
lods
xlat
addr16
negl
push
add
push
in
incb
mov
add
add
xorb
fcomi
jb
mov
fstps
push
add
scas
add
cmpsl
add
push
add
mov
xor
add
add
inc
call
push
lea
push
push
push
lea
push
call
add
add
fiaddl
roll
imul
add
jo
jae
add
add
xlat
popl
pushf
xchg
push
add
pusha
add
rcll
add
lods
in
xchg
xchg
je
jnp
aad
sub
pop
lea
push
push
push
push
push
push
push
push
push
call
mov
pop
adcb
add
xchg
add
jne
clc
add
roll
add
mov
arpl
lods
jle
mov
add
mov
in
loopne
pushl
push
lea
push
call
push
add
add
add
add
data16
jb
stc
pop
add
leave
loop
add
add
add
shl
out
sub
pop
pushl
call
push
push
push
lea
push
push
lea
push
push
push
push
push
call
lds
add
add
nop
popf
mov
enter
add
test
pop
xchg
add
mov
lock
pop
add
fcomps
jne
pushl
push
push
push
push
push
push
push
lea
push
call
mov
add
mov
test
ret
jns
add
xor
testl
cwtl
ret
lock
add
movsb
aad
xchg
idivl
test
push
jl
jmp
add
roll
lods
add
add
popa
add
iret
xorl
sub
pop
call
push
push
shl
add
push
push
pop
add
dec
sub
not
rol
rol
ror
pop
ror
pop
push
lea
push
push
lea
push
push
push
push
push
call
imul
int3
jecxz
add
out
add
je
cld
loop
add
enter
stc
jbe
add
add
xchg
icebp
cli
scas
mov
scas
sarb
jmp
orb
lcall
jne
push
push
push
push
push
push
lea
push
push
call
add
mov
cltd
arpl
mov
xchg
nop
add
mov
push
xchg
mov
lret
lret
shl
cld
mov
call
push
push
lea
push
push
push
push
push
call
mov
add
fxam
in
int3
mov
add
xchg
add
add
mov
push
jmp
add
in
mov
fnsave
jp
fiaddl
ljmp
std
cli
sub
pop
push
push
push
dec
rol
xor
push
and
add
lea
shr
sub
pop
sub
shr
pop
push
lea
push
push
push
call
add
enter
cwtl
mov
add
add
jne
popa
je
add
into
out
fs
mov
pop
push
push
push
call
add
pushf
fwait
add
add
addr16
test
outsl
add
add
aam
lods
add
add
add
cltd
add
add
loop
in
clc
lcall
add
lcall
jge
lea
push
lea
push
push
push
call
add
add
aam
add
test
out
add
add
add
cld
fcompl
add
add
add
add
fldt
mov
pop
mov
stos
jecxz
add
jns
sub
pop
call
mov
push
push
call
rcrb
add
jecxz
sti
add
je
add
cmpsb
xchg
mov
add
lahf
faddp
add
fsubl
stc
scas
gs
leave
add
add
xchg
pop
add
stos
add
add
sub
pop
push
push
push
push
lea
push
push
call
popf
mov
sahf
jns
icebp
fdiv
push
add
popf
rolb
xchg
stos
mov
xchg
add
add
add
repnz
add
add
add
add
mov
mov
push
push
push
push
push
push
push
call
add
bound
mov
add
pop
add
add
cmpsl
roll
repnz
jl
add
add
add
pushf
lods
sub
pop
mov
add
push
lea
push
push
push
push
push
lea
push
call
roll
add
add
add
fidivrl
add
scas
fcmovne
loopne
lcall
loope
lock
add
add
add
out
out
sub
pop
add
push
lea
push
push
push
push
call
push
add
testb
mov
push
push
imul
cltd
notb
push
push
scas
ljmp
push
add
mov
xchg
jmp
rolb
je
xchg
add
add
fldl
add
add
lods
add
xchg
push
out
mov
jae
sub
pop
add
mov
xor
push
push
push
push
call
in
jmp
mov
add
add
stc
cmpsb
add
pusha
add
add
shll
add
mov
into
mov
fiaddl
mov
into
ja
add
cmpb
lcall
jne
push
lea
push
push
push
push
push
push
push
push
call
iret
mov
je
mov
shl
mov
cmpb
add
add
add
test
pop
test
mov
dec
mov
add
add
arpl
call
int3
add
xchg
add
out
hlt
fisttps
aam
xchg
pop
xchg
movsl
fs
add
in
fcompl
push
push
push
call
mov
loopne
fiaddl
imul
rolb
scas
add
pop
xchg
lea
jnp
mov
jmp
cli
shlb
lods
into
add
xchg
mov
add
add
movsl
loopne
jo
add
pop
lea
enter
hlt
pop
mov
xor
push
lea
push
push
lea
push
lea
push
lea
push
push
push
push
lea
push
call
add
movsl
add
add
jbe
in
add
pop
add
add
int
add
mov
pop
add
popa
test
add
add
cwtl
add
add
repnz
hlt
add
sahf
scas
add
mov
rolb
nop
fcomp
pop
add
fiadds
pop
add
imul
enter
sub
pop
add
push
push
push
push
push
call
lds
add
add
sahf
add
add
gs
div
mov
push
fildl
push
aad
add
mov
lret
add
fcompl
enter
out
push
mov
rolb
imul
fwait
cmpsl
cmc
popl
stos
mov
lcall
sub
pop
pop
mov
push
push
lea
push
push
call
add
arpl
rolb
stos
add
out
loop
add
add
shll
fildl
add
mov
add
cmpsl
fsubl
iret
stc
jns
stc
add
pop
mov
pop
add
cltd
jge
add
aad
fstl
add
jnp
in
hlt
lcall
or
push
push
push
push
push
call
cmpsl
jbe
add
in
pop
addb
add
add
scas
loope
cwtl
add
nop
mov
int
jmp
xchg
add
add
lahf
insb
sub
pop
add
push
push
call
add
pop
mov
add
into
not
add
popl
add
add
lret
add
add
pusha
test
add
lahf
add
pop
leave
scas
aam
add
add
push
lock
bound
mov
add
jl
push
add
add
add
mov
clc
lcall
push
push
push
push
lea
push
push
lea
push
lea
push
push
push
call
add
les
add
sahf
test
add
jae
nop
add
add
test
data16
icebp
xchg
add
add
add
testl
clc
add
fsubr
sbbb
add
out
add
cld
data16
add
add
add
stos
bound
jmp
fdivr
lcall
inc
or
mov
lea
push
call
mov
add
add
movsl
aam
aam
andb
jmp
add
add
add
scas
add
add
in
std
in
add
add
outsl
add
add
add
out
cmpsl
aam
pop
mov
je
int
cli
clc
add
call
data16
push
add
sub
pop
sub
pop
push
push
push
call
stos
add
jecxz
add
out
popf
add
arpl
jle
pop
add
popf
add
popf
pop
sub
pop
rep
push
lea
push
call
fimull
add
add
mov
test
add
push
add
fnsave
add
cmp
add
loopne
add
mov
mov
add
fsts
push
lahf
xchg
data16
in
cld
in
cltd
sub
pop
pop
push
lea
push
call
add
loop
imul
lods
mov
add
add
add
jmp
xchg
ljmp
add
int
cli
mov
test
movsb
xchg
popa
add
add
les
roll
mov
clc
pop
mov
push
lea
push
push
push
lea
push
push
push
push
push
call
lcall
fadds
add
mov
notb
add
popf
add
add
je
add
fucomi
add
jnp
popf
add
mov
add
add
lret
jecxz
movsl
stos
mov
mov
jb
sti
jae
add
add
add
add
add
push
lea
push
push
push
call
pop
aad
mov
add
sahf
lods
jl
in
int3
add
data16
loop
js
les
leave
sar
xchg
into
sub
pop
add
add
push
lea
push
push
push
push
lea
push
push
push
call
ljmp
add
mov
ja
cld
repnz
fiadds
testl
add
mov
loopne
insb
add
add
lret
loop
add
pop
lock
repnz
popa
add
add
add
jo
mov
add
je
xchg
pop
filds
add
stos
sub
pop
mov
xor
push
xor
add
pop
mov
xor
push
push
push
call
add
pop
ja
add
add
loopne
bound
aam
movsb
add
jmp
add
cld
push
sub
pop
mov
push
push
lea
push
push
push
push
push
push
push
push
call
add
add
jae
push
add
add
pop
aam
add
je
hlt
imul
jle
mov
add
out
cmc
add
jmp
add
pusha
xchg
jbe
sub
pop
xor
push
push
lea
push
push
lea
push
call
mov
add
mov
push
rolb
in
orl
mov
add
add
test
mov
pop
sti
lock
add
add
add
flds
add
add
pusha
lods
xchg
add
fiaddl
arpl
test
shl
add
out
sbb
xchg
sub
pop
add
push
push
push
push
lea
push
lea
push
push
push
push
call
repnz
add
jmp
test
add
add
pusha
add
cmpw
add
popa
add
in
fdivr
lcall
ret
push
inc
lea
pop
mov
push
push
shr
rol
shl
xor
push
sub
add
xor
sub
shr
sub
pop
shr
add
pop
push
push
push
push
push
push
call
test
incb
add
add
mov
jb
int3
ljmp
cmpsl
add
in
movsb
push
mov
add
push
add
fadd
add
jo
add
add
int
out
addb
icebp
add
add
jl
add
add
clc
add
push
mov
outsl
push
add
add
lcall
jne
call
push
lea
add
sub
rol
pop
push
push
push
add
shl
push
push
pop
add
sub
sub
sub
shr
pop
sub
pop
push
ror
pop
push
push
push
push
push
lea
push
push
lea
push
push
push
call
bnd
bound
popf
rcrb
jbe
ficoml
mov
movl
jge
add
add
shrl
add
mov
add
add
popa
add
in
loopne
lcall
rclb
repnz
dec
dec
pop
mov
push
push
xor
pop
push
push
lea
pop
mov
push
not
ror
pop
add
add
push
push
push
push
push
push
push
push
call
les
add
jno
fnstsw
jne
fwait
movsb
roll
leave
add
add
push
out
mov
add
add
jp
push
push
shrl
add
add
add
imul
add
mov
mov
pop
add
push
lea
push
lea
push
lea
push
call
int
bound
mov
mov
push
pop
popf
je
rclb
jno
add
add
add
add
add
pop
add
fmul
add
cmc
add
loop
pop
add
in
cld
ljmp
add
xchg
sub
pop
mov
push
push
lea
push
lea
push
push
lea
push
push
push
call
rolb
aam
jae
xchg
add
fwait
loopne
pop
add
jge
mov
add
jp
add
push
rcr
add
jne
push
add
lcall
xor
push
push
lea
push
lea
push
lea
push
push
push
push
push
push
call
pushf
add
xchg
jno
push
add
enter
mov
je
add
addr16
addb
cltd
mov
add
jle
cmc
int3
je
add
push
add
push
add
jb
ljmp
lcall
les
push
push
push
push
call
popf
rolb
fidivl
fldl
add
test
add
loopne
imul
add
add
xorb
add
mov
mov
add
mov
ret
mov
xor
mov
mov
cli
fwait
test
shrl
pop
add
xchg
sub
lcall
jne
push
push
sub
dec
shr
pop
mov
xor
push
not
pop
add
pop
push
push
push
push
push
push
call
add
add
xor
add
xchg
movsl
cmpsb
mov
pop
add
mov
loop
icebp
call
mov
lods
add
fdivp
add
add
add
add
mov
add
xchg
jb
push
mov
add
lcall
dec
and
mov
xor
not
pop
rep
push
push
push
lea
push
push
push
push
push
push
call
loope
in
add
jb
add
add
add
mul
mov
add
add
fisttpll
mov
mov
mov
fdivr
lcall
dec
and
icebp
cmp
ret
xor
pop
or
je
push
sub
lea
pop
mov
xor
push
rol
pop
mov
xor
push
shr
sub
sub
sub
pop
add
add
push
push
lea
push
push
lea
push
lea
push
push
call
jnp
into
add
test
aad
jae
add
jge
cld
xchg
mov
add
add
add
jb
add
add
jno
clc
add
add
pop
add
add
add
addl
jnp
add
mov
lcall
push
push
push
push
push
call
add
push
out
fiadds
aam
add
jle
lock
mov
pop
mov
mov
mov
pop
jae
rcl
insb
jno
add
imul
add
in
add
add
movsb
add
add
in
push
add
stos
pushf
add
add
in
pop
mov
push
push
push
push
push
push
call
mov
add
popl
std
mov
add
add
mov
stos
addb
call
mov
std
add
sub
pop
xor
push
push
push
push
push
lea
push
lea
push
push
push
lea
push
call
xchg
fwait
add
add
add
xchg
add
test
movb
testl
add
enter
mov
add
pop
xchg
loop
out
add
mov
add
add
add
in
fcomps
les
lea
push
lea
push
lea
push
push
call
add
roll
rolb
repnz
cwtl
mov
xchg
add
imul
add
popl
rcr
movsl
add
ret
add
lcall
lock
push
pop
rep
push
dec
xor
pop
mov
xor
push
push
push
push
lea
push
call
jns
add
xchg
out
mov
add
ret
fldcw
pop
in
lds
xchg
add
add
jge
add
loopne
jmp
add
mov
mov
push
add
add
lcall
leave
je
push
sub
pop
mov
add
push
pop
add
push
push
push
push
push
push
call
popa
mov
add
out
jle
add
mov
into
shrl
in
cwtl
add
add
icebp
add
add
adcl
ret
test
xchg
add
add
add
add
add
jmp
mov
add
rcl
stos
scas
popf
lret
stos
mov
jmp
popf
in
je
jecxz
xchg
add
in
mov
pop
rep
pop
push
push
dec
push
push
pop
add
lea
add
add
add
sub
dec
pop
pop
push
push
lea
push
push
push
push
push
push
push
push
call
sbbl
add
add
add
mov
clc
add
lret
into
add
sbbb
out
ficoms
andl
fiadds
movb
jecxz
iret
mov
fdivr
lcall
mov
push
push
push
push
call
flds
mov
in
mov
fdiv
movl
add
scas
mov
test
in
push
add
popf
fwait
add
les
insl
hlt
push
xor
dec
pop
mov
push
xor
pop
jmp
push
add
pop
push
mov
push
shl
pop
add
push
lea
push
push
call
add
mov
xchg
add
add
stos
lcall
add
push
add
stc
add
push
pop
cmp
mov
add
sbbb
mov
lcall
push
lea
push
push
lea
push
push
push
push
push
call
mov
add
fiaddl
push
add
add
adcl
add
std
add
mov
mov
add
shr
add
roll
mov
add
add
push
add
add
add
add
mov
mov
add
push
push
lea
push
push
push
lea
push
push
call
fwait
push
subl
add
mov
add
add
loop
scas
data16
fiaddl
shlb
arpl
pop
pop
mov
mov
popa
jl
add
in
mov
add
add
scas
cmpsl
rcll
push
in
call
push
lea
push
push
push
call
pop
in
add
int
cld
pop
add
xchg
add
jo
push
sahf
fdivrs
xchg
add
add
jne
popf
jl
int
add
mov
add
mov
add
mov
ret
add
inc
cld
push
rol
not
dec
add
pop
pop
pop
push
inc
pop
pop
push
push
call
cmpsb
imul
push
add
add
bound
add
shrb
add
add
rorb
in
std
add
roll
pop
mov
mov
mull
add
scas
add
add
add
jne
hlt
je
add
add
mov
les
add
lcall
leave
push
sub
sub
xor
pop
ret
push
push
push
push
lea
push
push
lea
push
call
mov
add
add
add
jecxz
fs
mov
push
ja
test
jbe
push
add
mov
insb
int
jno
int
jae
ljmp
fs
push
pop
stos
add
add
add
in
push
push
xor
pop
mov
push
dec
shr
lea
sub
pop
add
push
lea
push
push
lea
push
push
call
test
pop
idivl
add
jle
jmp
add
lret
cmc
jo
add
add
out
pop
push
out
jle
cli
jp
fsubrl
add
mov
ja
mov
add
aam
jne
int3
cmpsl
add
add
pop
add
lcall
push
lea
rol
add
ror
pop
push
push
push
push
call
scas
lods
arpl
jno
pop
add
add
cmpsb
lret
mov
add
stos
add
stos
push
fiaddl
loope
in
pop
lcall
add
lea
add
lcall
push
lea
pop
push
movl
push
inc
inc
pop
addl
push
sub
pop
test
je
push
inc
pop
mov
pop
push
push
push
lea
push
push
lea
push
push
push
lea
push
call
add
js
lock
jns
int
jae
loope
add
popl
aad
outsl
push
add
jns
push
mov
clc
mov
cmpsl
mov
push
mov
mov
add
add
sub
pop
pop
push
lea
rol
pop
pop
pop
push
lea
push
lea
push
push
lea
push
push
call
scas
into
add
add
mov
add
add
jb
add
add
push
add
std
out
roll
lea
cwtl
stos
add
add
add
jge
add
pusha
pop
add
add
jne
leave
lret
popa
into
xchg
xchg
out
ficoms
loopne
jns
jecxz
add
sub
pop
leave
push
inc
shr
pop
ret
push
push
push
lea
push
lea
push
call
jl
add
sti
xchg
add
arpl
iret
add
add
cli
shrb
add
add
stos
add
add
add
fiadds
loop
add
add
mov
push
push
call
push
add
add
add
aad
iret
sti
icebp
iret
pop
pusha
add
mov
add
add
ja
std
in
jno
add
int
add
sub
pop
add
push
sub
sub
xor
pop
push
push
push
push
push
call
loope
addb
jae
add
icebp
mov
xchg
test
add
add
add
lods
add
add
mov
xchg
add
add
std
into
mov
test
jge
pop
add
xorb
push
stos
add
lds
add
enter
add
xchg
stos
test
sub
pop
push
push
push
ror
lea
pop
testl
push
push
push
call
add
add
add
jbe
aad
pusha
jae
jl
mov
std
add
xchg
add
add
sahf
movsl
add
rolb
add
push
add
pop
add
xchg
add
add
add
jp
roll
add
mov
jnp
shr
add
add
sub
pop
addl
push
push
lea
push
push
push
push
push
push
lea
push
call
mov
add
movsb
mov
add
add
pusha
out
in
lret
fildl
outsl
cbtw
mov
push
add
add
leave
add
jno
add
movsl
and
pop
clc
cmpsl
add
jmp
pop
push
in
movsl
pop
pop
movsl
test
out
add
mov
add
lcall
add
rol
ret
aam
ret
and
decl
push
lea
push
lea
push
lea
push
lea
push
call
jmp
xchg
add
movsl
add
ret
add
push
add
fwait
mov
push
xchg
scas
pop
cmpsb
add
out
add
push
pop
leave
fdivl
lret
mov
add
add
add
mov
mov
call
xchg
add
repnz
in
in
lcall
jne
push
push
push
push
lea
push
lea
push
push
push
push
call
arpl
lahf
add
add
add
xchg
mov
test
pop
xchg
add
xchg
frstor
fnstcw
nop
fsubrs
testl
add
stc
lcall
lock
push
add
push
pop
cwtl
mov
add
roll
add
push
push
shl
sub
pop
call
cmpl
jne
push
not
pop
pop
pop
push
add
xor
rol
pop
pop
pop
push
push
lea
push
lea
push
lea
push
push
push
call
std
add
adcl
add
add
xchg
testl
mov
add
in
jle
in
add
out
add
mov
std
add
add
ret
push
lea
push
push
push
push
push
push
push
push
push
call
add
test
xchg
mov
mov
jecxz
add
pop
push
lret
mov
add
mov
loopne
add
add
leave
add
jle
addr16
pop
add
mov
in
cli
testl
add
mov
push
out
xchg
fildl
add
insb
cltd
mov
add
mov
mov
fidivs
test
lcall
push
push
push
push
push
push
push
call
mov
out
add
mov
scas
xchg
add
add
mov
pop
xorb
fwait
add
movsl
push
mov
lds
add
xchg
cmpb
add
push
cmpsb
add
add
out
add
add
testl
sub
pop
mov
push
push
push
push
call
mov
mov
add
xlat
jmp
add
ja
add
pop
pop
pusha
add
nop
test
add
add
aam
fiaddl
cld
push
dec
pop
push
push
lea
push
lea
push
push
call
movl
std
fcmove
add
add
popf
fildl
lret
add
jl
test
add
icebp
cmpsb
loope
mov
data16
lock
or
add
call
cmpsl
nop
les
ret
lock
push
push
sub
pop
push
push
push
push
push
push
push
push
lea
push
push
call
nop
add
int3
add
dec
jmp
into
jmp
xchg
add
add
int3
scas
add
mov
in
loopne
movl
push
push
add
rol
lea
rol
pop
call
push
lea
push
lea
push
call
int
imull
push
add
jae
flds
add
loope
jmp
js
cld
icebp
xchg
add
fiadds
out
gs
sub
pop
push
push
shr
pop
call
push
shl
sub
pop
subl
push
push
push
push
lea
push
lea
push
lea
push
push
push
lea
push
call
outsl
mov
aad
xchg
add
jae
add
cmpsl
add
add
add
pop
xchg
add
in
fdivr
lcall
jge
add
test
call
jmp
pop
pop
push
push
push
push
push
push
push
call
popf
pop
push
stc
add
add
push
add
add
arpl
rolb
jge
jno
mov
int
xchg
mulb
js
add
add
testb
add
sub
pop
pop
pop
push
xor
pop
pop
push
shr
rol
pop
leave
push
lea
push
push
push
push
push
push
push
lea
push
call
ficompl
add
mov
add
add
push
add
test
add
and
add
mov
lcall
push
shr
pop
push
push
push
lea
push
push
lea
push
push
lea
push
lea
push
push
lea
push
call
add
add
add
jno
jp
add
in
jp
add
xchg
in
add
mov
add
xchg
add
add
add
mov
je
add
add
add
add
add
mov
add
in
push
xor
sub
ror
sub
pop
add
push
push
push
push
call
addr16
add
add
mov
mov
add
add
add
add
mov
fs
xchg
pop
add
stc
mov
mov
add
mov
add
pop
add
out
add
mov
ljmp
fildl
shll
mov
pop
push
push
push
push
push
lea
push
push
push
call
addl
push
jl
jne
add
mov
loopne
fstps
imul
mov
int3
pushf
loopne
fnstenv
sub
pop
push
push
shl
shr
rol
pop
push
push
push
add
shr
push
xor
add
shl
sub
lea
dec
inc
rol
pop
shl
pop
push
push
push
lea
push
call
repnz
mov
add
xchg
pop
lcall
pop
mov
pop
xchg
add
loope
popa
hlt
add
test
sub
pop
pushl
call
push
sub
pop
call
push
push
sub
push
xor
add
dec
add
add
sub
not
pop
dec
pop
push
push
call
mov
add
mov
jle
in
pop
lahf
pop
jbe
add
mov
mov
add
mov
mov
mov
sub
pop
pushl
call
push
push
lea
push
lea
push
push
push
push
lea
push
push
push
call
leave
add
movb
add
lcall
mov
add
add
add
xchg
add
mov
test
movb
jno
jne
add
mov
jmp
jo
add
add
push
flds
mov
push
into
rcrl
add
sub
pop
call
push
push
lea
push
push
lea
push
lea
push
lea
push
push
lea
push
call
rolb
leave
add
test
sti
mov
add
mov
frstor
cmpsb
sti
flds
add
jbe
pop
mov
outsl
mov
sub
pop
mov
push
push
call
add
cwtl
add
mov
popf
popf
rcr
add
add
jbe
mov
out
roll
subl
cmpsl
mov
jl
push
xchg
sub
pop
lea
push
lea
push
lea
push
call
lds
ljmp
mov
add
mov
jmp
in
loopne
scas
add
add
in
add
repnz
shll
add
add
add
mov
hlt
lcall
call
mov
dec
cs
push
push
push
call
les
nop
mov
pusha
add
add
roll
push
mov
push
add
xchg
add
pop
subb
pop
add
cmpsl
pop
mov
in
push
stos
add
fiadds
add
pop
add
lcall
add
add
ror
xor
pop
shr
push
shl
xor
pop
add
push
push
call
filds
add
add
xchg
je
add
jb
add
into
add
cmpsl
add
add
add
pop
jno
pop
cwtl
add
inc
cld
push
push
push
push
push
push
call
add
add
add
mov
add
add
mov
loope
xchg
add
mov
cli
pop
mov
pop
js
push
jle
add
stos
mov
movsl
gs
into
iret
add
mov
push
int
push
popf
popf
testl
pop
mov
call
add
add
loop
lea
pop
add
push
sub
pop
add
mov
push
push
push
call
in
add
jne
lahf
add
xchg
loope
addb
push
test
mov
mov
cltd
fcomps
add
add
fcmovne
push
add
add
xchg
add
add
mov
fldl
insb
mov
jle
out
mov
add
xchg
mov
out
add
add
sub
pop
mov
cmp
jne
push
push
push
push
push
lea
push
push
push
lea
push
push
call
test
pusha
cwtl
mov
add
out
loope
add
loopne
imul
add
aad
sti
add
mov
add
fiaddl
mov
pusha
mov
addl
aam
add
jp
jno
add
lea
arpl
jecxz
in
fcomps
cwtl
fadds
add
jne
push
xor
inc
pop
mov
push
lea
push
push
push
push
push
call
push
add
push
add
add
xchg
jge
std
addb
roll
mov
xchg
push
leave
add
add
add
out
add
add
lcall
add
add
add
lea
push
lea
push
push
call
jo
outsl
cld
fsubs
insb
stos
mov
add
insb
add
add
cwtl
add
add
push
jp
aad
mov
add
mov
repnz
add
mov
push
add
add
lahf
test
mov
jmp
push
push
push
push
lea
push
push
push
push
call
add
add
add
test
add
mov
lret
add
loope
add
scas
add
fucomp
mov
sahf
add
mov
push
sub
pop
mov
push
dec
pop
mov
sub
jne
push
add
not
pop
mov
push
push
push
push
lea
push
push
call
add
add
add
push
push
push
mov
imul
out
mov
movsl
lock
lea
push
add
add
ljmp
out
add
cmpsb
add
jbe
into
add
sub
pop
movl
push
push
lea
push
call
mov
std
out
add
jecxz
mov
add
cmpsl
add
movl
add
add
out
add
stos
add
xchg
or
aaa
push
push
lea
push
push
push
push
push
call
loopne
shrl
mov
add
add
add
mov
pop
jnp
add
sti
add
add
jmp
mov
ror
add
add
mov
add
add
add
mov
mov
in
loopne
mov
push
push
push
push
push
push
call
jmp
mov
jb
jl
iret
int3
scas
fcompl
bound
mov
mov
int
pop
lds
xchg
lds
mov
lcall
nop
mov
add
cmp
jne
push
pop
mov
push
pop
movl
push
push
push
push
push
push
lea
push
push
push
call
add
jae
filds
lahf
mov
icebp
shrb
ficomps
repnz
fs
lret
add
test
stc
lds
cmpb
add
mulb
lock
pop
add
add
add
add
in
fdivr
lcall
pusha
or
add
jle
adc
add
push
push
call
out
pop
add
nop
out
add
xchg
add
push
faddl
add
clc
mov
jno
add
add
add
in
out
movl
add
test
fcompl
inc
cld
push
push
lea
push
push
push
push
push
lea
push
call
add
add
add
add
add
aad
in
add
pop
fiaddl
add
cmpsl
fs
int
mov
lods
add
mov
nop
out
mov
add
jb
add
add
add
sub
pop
cmpw
jne
push
push
lea
push
lea
push
push
lea
push
lea
push
call
cwtl
fidivrs
add
add
add
add
add
lock
hlt
add
lcall
add
addl
jmp
cli
jno
ljmp
aad
mov
clc
lock
lcall
mov
add
jnp
add
test
lds
mov
cmpsl
add
lcall
inc
adc
add
push
push
lea
push
push
push
call
std
popl
jno
imul
test
add
xlat
nop
mov
push
add
cmc
negb
ret
xchg
push
cmpsl
loop
push
bound
add
add
lret
add
cmpl
xchg
les
jne
in
call
jmp
push
inc
shl
dec
pop
pushl
push
pop
pop
push
shl
shl
pop
mov
push
push
push
push
lea
push
push
push
lea
push
push
call
loope
add
pop
je
sarl
bound
js
push
faddl
movsl
in
out
mov
add
pop
pusha
ret
add
mov
add
lahf
ja
mov
icebp
stos
add
mov
add
mov
gs
addb
add
lods
mov
add
lcall
sub
pop
mov
push
pop
mov
push
push
shl
xor
push
sub
add
sub
rol
shl
add
sub
shl
pop
add
lea
inc
pop
push
ror
pop
push
call
push
push
lea
push
push
push
push
push
push
push
lea
push
call
push
in
add
repnz
into
xchg
add
lret
add
push
add
negl
pop
filds
cltd
mov
cmpb
adc
add
into
add
add
add
add
mov
mov
push
mov
lea
xlat
sub
pop
cmpl
je
push
push
add
sub
push
xor
add
rol
shr
not
rol
sub
add
add
add
pop
shl
pop
push
dec
not
pop
push
push
ror
lea
pop
call
push
push
lea
push
push
lea
push
push
call
lret
add
mov
hlt
add
add
call
lea
jnp
add
add
cltd
add
jne
xchg
mov
out
add
add
jecxz
movsl
in
add
js
int3
fldz
ret
lcall
sbbl
sub
shl
push
or
inc
add
not
sub
sub
sub
sub
sub
ror
pop
sub
rol
pop
push
push
push
push
push
push
push
push
push
push
call
negl
xchg
add
pop
cld
add
add
test
shll
add
sarl
cwtl
ret
fldl
jb
rolb
xlat
shl
xchg
add
add
add
fidivs
add
add
add
push
pop
call
push
sub
sub
add
pop
cmpl
je
push
push
shl
sub
sub
push
or
not
add
inc
sub
sub
pop
shr
pop
push
push
push
call
add
add
into
jnp
add
faddl
add
add
add
std
shlb
add
jb
add
add
fwait
add
add
add
push
sub
pop
push
push
push
push
push
push
lea
push
push
call
add
mov
mov
push
add
add
scas
gs
add
xchg
xchg
pop
addl
add
add
add
add
jno
push
sti
add
fnstenv
rcrl
add
filds
jno
mov
into
add
lcall
das
xor
add
or
test
add
mov
mov
ror
push
and
add
sub
xor
pop
add
inc
shr
pop
push
push
call
mov
std
add
out
roll
add
add
push
arpl
add
addr16
jbe
sub
pop
push
push
push
push
lea
push
push
push
push
push
push
call
add
pushf
scas
arpl
mov
fsts
push
add
ret
add
add
cmpsl
fs
add
xchg
imul
leave
rorl
lds
sti
sub
pop
call
push
xor
dec
pop
cmpl
je
push
push
dec
lea
not
push
or
not
add
ror
not
sub
ror
inc
pop
sub
add
rol
ror
pop
push
shr
rol
add
pop
push
push
ror
inc
shr
dec
pop
call
push
sub
dec
shr
pop
cmpl
je
push
push
ror
lea
push
or
inc
add
xor
dec
add
inc
sub
inc
lea
pop
add
inc
pop
push
lea
push
push
lea
push
call
jb
cli
add
data16
lret
jae
in
add
in
jmp
mov
add
rcll
add
jl
jne
arpl
mov
imul
add
add
sub
pop
push
push
push
lea
push
push
lea
push
call
pop
jbe
add
outsl
out
stc
fdivrp
jnp
lods
iret
xchg
jae
add
jmp
add
leave
int
pop
push
jae
movsb
outsl
add
add
add
xchg
lcall
push
add
cmpl
je
push
push
sub
add
inc
push
or
not
add
shl
sub
sub
pop
inc
add
add
pop
push
shl
pop
push
call
push
pop
cmpl
je
push
push
push
sub
add
ror
dec
sub
sub
not
pop
sub
shl
add
pop
push
sub
lea
pop
push
push
shr
pop
call
push
push
call
mov
stos
add
fiaddl
add
add
mov
leave
call
push
add
mov
xchg
add
add
add
add
fucomi
lods
mov
add
movb
add
add
pop
push
add
add
sub
pop
cmpl
je
push
push
not
not
push
sub
add
ror
inc
sub
not
sub
rol
ror
pop
shr
sub
add
pop
push
add
inc
ror
pop
push
push
push
push
call
add
xchg
mov
add
add
stos
add
xorl
cltd
iret
arpl
add
lret
mov
add
push
repnz
jecxz
jmp
ja
add
popl
je
add
cmpl
je
push
push
shl
sub
add
push
sub
add
sub
add
shr
sub
not
not
pop
rol
xor
pop
push
xor
ror
pop
push
call
push
push
push
push
lea
push
push
call
out
add
bound
add
ja
add
aad
add
testl
add
movsb
mov
lret
mov
add
test
add
pop
xchg
jae
push
push
add
cmpl
je
push
push
lea
sub
ror
push
or
not
add
shl
sub
rol
pop
shl
add
not
not
pop
push
push
push
push
lea
push
call
fsubs
add
nop
test
pop
add
hlt
mov
mov
je
roll
out
movsb
jbe
out
in
add
add
add
nop
add
add
divl
fadds
push
add
loope
repnz
loop
mov
pop
push
push
not
pop
call
push
push
lea
push
push
lea
push
lea
push
push
push
call
jb
lock
je
testb
mov
fistl
in
xchg
popl
xchg
ret
add
in
jbe
test
hlt
imul
ret
sub
pop
cmpl
je
push
push
shl
push
xor
add
shr
sub
shl
inc
pop
dec
xor
shl
pop
push
add
pop
push
call
push
inc
lea
ror
pop
cmpl
jne
push
push
push
lea
push
push
push
push
call
test
notl
add
xchg
add
add
add
jbe
les
mov
push
enter
data16
mov
mov
movl
push
push
lea
push
push
push
push
push
push
call
imul
add
fistps
rclb
shlb
add
fiaddl
mov
in
test
mov
rcrl
mov
xchg
outsl
add
add
xchg
mov
add
fnsave
in
loopne
jmp
push
ror
sub
xor
pop
xor
push
lea
push
call
add
add
add
addl
add
jp
std
nop
fmul
outsl
add
in
add
add
faddp
push
fs
addr16
js
enter
loope
in
add
jmp
sub
pop
pop
push
push
lea
push
push
lea
push
push
push
lea
push
push
call
gs
cli
push
movsb
notb
add
fstpt
mov
popa
popl
scas
out
mov
add
jecxz
loop
add
mov
add
add
movsb
mov
cltd
stc
ret
hlt
sub
pop
pop
push
inc
sub
pop
pop
push
lea
push
push
call
aam
lods
add
add
xchg
add
popf
int3
loopne
jecxz
imul
cmpsl
imul
pop
add
add
cwtl
add
push
lret
pop
movsb
lcall
add
pop
push
push
push
push
push
lea
push
push
call
fsts
rcrb
stos
add
arpl
add
add
testl
add
jo
add
shlb
add
leave
stos
jmp
push
addr16
int
jb
push
cmc
add
cmc
mov
add
iret
mov
mov
add
push
add
lcall
ret
push
xor
sub
dec
pop
push
mov
push
add
shr
pop
add
push
push
push
push
push
lea
push
push
call
lods
enter
stc
add
xchg
add
repnz
in
jo
add
sbbb
test
push
mov
mov
add
add
pop
outsl
int3
mov
add
xchg
sti
mov
add
push
jp
into
sub
pop
cmpl
jne
push
push
ror
shl
add
push
and
add
dec
sub
shl
add
pop
lea
shr
rol
pop
push
lea
push
push
push
lea
push
call
add
add
add
add
xchg
add
add
xchg
in
mov
add
scas
loope
mov
add
pop
mov
add
rol
add
popf
add
aad
rclb
sti
add
lcall
jne
push
sub
inc
shr
pop
call
push
push
lea
xor
shr
pop
call
jmp
push
push
push
push
push
push
push
call
out
cmpsb
mov
icebp
jne
xchg
js
mov
negl
xchg
fs
add
push
mov
rolb
add
xchg
insb
test
jb
jecxz
cld
lds
jge
test
ror
nop
add
in
cmpl
jne
push
sub
lea
pop
mov
call
push
push
lea
push
push
call
aad
cmc
aad
mov
xchg
je
xchg
out
add
add
insb
add
push
add
ror
add
push
arpl
add
test
mov
add
int
test
xchg
fucomi
add
fsubp
ja
mov
aad
jb
lcall
lcall
jmp
push
sub
not
xor
pop
cmpl
jne
push
push
add
push
or
not
add
dec
lea
sub
sub
not
inc
pop
xor
dec
pop
push
ror
pop
pushl
call
push
lea
dec
pop
push
push
push
push
push
lea
push
push
push
push
push
push
call
lret
addl
lods
lock
add
add
mov
add
cld
add
imul
data16
add
lea
mov
lcall
shr
jmp
add
push
ror
not
lea
pop
cmpl
je
cmpl
jne
push
lea
push
lea
push
lea
push
push
push
push
push
lea
push
lea
push
call
add
add
fisubrs
jmp
push
push
pop
push
roll
push
lea
add
jmp
add
stos
add
add
push
mov
cld
stc
add
in
in
fcomps
add
add
push
lea
push
push
push
lea
push
lea
push
lea
push
push
push
push
call
add
add
add
aam
lock
hlt
hlt
shrb
add
jge
add
add
add
add
add
sarl
add
test
add
fiadds
js
mov
add
mov
out
mov
add
mov
aad
sub
pop
mov
push
shl
inc
pop
push
push
lea
add
pop
call
push
push
push
and
add
add
add
sub
xor
sub
add
pop
shl
sub
sub
inc
pop
push
sub
not
pop
pushl
push
rol
pop
call
push
push
lea
push
lea
push
push
push
lea
push
push
push
push
call
push
add
cmpl
mov
jge
xchg
icebp
mov
in
lock
test
loopne
int3
add
add
jb
add
out
add
push
jl
sti
add
add
add
lds
arpl
xchg
sub
pop
call
push
push
add
push
or
not
add
sub
sub
not
shl
pop
sub
inc
shr
pop
push
lea
push
lea
push
lea
push
push
call
stc
hlt
xchg
add
out
add
add
cmc
loope
jae
test
lret
lahf
xchg
add
cmc
add
add
jbe
test
lea
xchg
nop
add
add
pop
add
scas
add
jmp
xchg
arpl
add
sub
pop
pushl
push
lea
push
push
push
push
call
add
lods
fs
add
movsb
in
rolb
add
jb
add
fcmovbe
mov
out
mov
xchg
pop
add
add
pop
jmp
push
add
fwait
enter
mov
in
in
lcall
push
and
add
mov
jmp
push
push
push
lea
push
push
lea
push
call
add
pusha
icebp
add
mov
add
insb
fisttpl
pop
pop
add
add
add
repnz
add
filds
lcall
shrb
enter
xor
dec
push
xor
add
shr
shl
sub
lea
ror
rol
pop
sub
rol
pop
push
lea
push
push
push
call
lcall
xchg
add
push
in
lahf
xor
cwtl
je
shlb
add
pop
outsl
outsl
add
add
add
scas
add
scas
lods
pop
push
shrl
enter
in
lock
pushl
push
shl
inc
dec
pop
call
push
inc
sub
shr
pop
call
push
push
inc
xor
dec
shl
push
xor
add
add
add
sub
lea
pop
shr
pop
push
push
lea
push
push
lea
push
push
lea
push
push
push
call
add
add
xchg
je
add
fldt
mov
add
add
test
popa
cld
movsl
xchg
orl
jle
gs
add
add
pop
cld
pop
push
push
pop
mov
mov
add
mov
imul
add
add
addr16
lock
fcompl
jne
push
shl
xor
pop
call
push
sub
sub
inc
pop
call
push
push
ror
dec
ror
push
or
inc
add
add
ror
inc
lea
sub
ror
sub
sub
pop
add
rol
pop
push
shl
xor
pop
pushl
call
push
push
push
lea
push
push
lea
push
push
call
loop
jle
jmp
mov
add
fsubs
add
mov
add
fiaddl
add
jbe
out
xchg
add
insb
mov
push
add
in
jp
imul
aam
add
test
add
add
scas
add
add
sub
pop
call
push
push
sub
push
xor
add
add
shr
shr
sub
not
shr
pop
shr
xor
shl
pop
push
add
pop
pushl
push
push
push
call
fwait
xchg
push
lods
outsl
add
movsl
test
jno
add
je
add
add
mov
mov
add
shll
addl
add
aam
jo
roll
lcall
inc
pop
add
call
push
push
add
sub
ror
push
push
pop
add
rol
dec
not
sub
dec
shr
shl
pop
not
sub
inc
pop
push
xor
pop
pushl
push
ror
add
sub
pop
call
push
shl
sub
add
lea
pop
call
push
push
shl
rol
inc
push
and
add
lea
lea
sub
add
pop
xor
xor
pop
push
ror
pop
pushl
push
push
lea
push
push
push
push
push
call
jnp
add
xchg
add
add
add
icebp
add
add
mov
call
add
lcall
xchg
add
loopne
add
mov
add
data16
faddl
in
lea
in
in
call
push
add
ror
ror
pop
call
push
push
rol
shr
sub
not
push
and
add
sub
dec
shr
pop
not
xor
rol
pop
push
not
inc
pop
pushl
push
xor
pop
call
call
push
push
xor
not
push
or
inc
add
not
rol
lea
sub
shr
pop
inc
rol
lea
pop
push
push
push
push
lea
push
push
call
pusha
pushf
mov
mov
push
add
jge
lods
icebp
add
add
add
xchg
lahf
sti
add
add
add
mov
jmp
add
data16
mov
xchg
push
fs
add
pop
iret
add
xlat
add
aam
repnz
jecxz
mov
pop
test
arpl
add
add
lcall
jne
push
add
shr
sub
add
pop
call
push
lea
push
push
lea
push
push
push
push
lea
push
push
push
call
popa
mov
mov
add
add
push
pop
cld
lods
lods
add
movl
pop
mov
add
jp
imul
fldlg2
mov
jae
jecxz
jns
add
add
call
xchg
les
add
add
test
test
fadds
add
push
add
cld
pop
add
in
fcomps
pushf
and
call
call
es
push
push
shr
pop
call
push
push
sub
lea
dec
push
push
pop
add
not
sub
add
lea
add
pop
add
sub
lea
pop
push
push
push
push
push
push
push
lea
push
lea
push
call
pop
mov
pushf
pop
into
loopne
fcompl
push
les
rcrl
leave
mov
add
out
into
mov
test
add
mov
hlt
cwtl
add
lea
xchg
rcll
fsincos
aam
fcoml
pop
pushl
push
push
call
sti
add
jecxz
add
add
out
add
add
add
repnz
pusha
imul
add
xchg
mov
shlb
add
add
lock
pop
aam
mov
add
add
xlat
push
clc
lcall
jbe
add
call
push
push
shr
inc
push
and
add
ror
xor
shr
sub
inc
add
not
sub
pop
add
pop
push
push
lea
push
call
xchg
fiadds
loop
mov
loopne
mov
add
nop
add
testl
xchg
add
mov
rcrb
cmc
add
pusha
xchg
fldl
add
in
not
add
add
mov
arpl
loopne
jne
outsl
xchg
add
mov
int3
add
add
incb
lcall
jne
call
push
lea
push
lea
push
push
push
push
call
mov
add
xchg
movl
testb
add
popf
add
imul
add
in
mov
push
lea
arpl
lret
callw
mov
add
jbe
cltd
pop
jo
mov
mov
in
call
call
push
push
rol
add
push
or
not
add
lea
sub
inc
xor
pop
inc
pop
push
ror
pop
pushl
push
add
inc
xor
inc
pop
call
push
push
push
push
push
push
push
lea
push
push
call
add
add
jmp
add
loop
cmc
scas
add
add
add
add
mov
add
mov
add
iret
je
in
xchg
add
sub
pop
call
push
push
sub
add
not
push
push
pop
add
sub
xor
rol
shl
sub
not
pop
add
xor
not
shl
pop
push
inc
shl
dec
pop
pushl
push
lea
push
push
push
lea
push
lea
push
call
popf
jbe
add
movsb
add
add
icebp
add
pop
mov
in
push
xlat
mov
push
add
push
fstl
call
add
push
push
shl
lea
push
xor
add
add
sub
sub
add
pop
shl
pop
push
push
dec
inc
push
or
not
add
rol
shr
sub
shl
lea
ror
pop
ror
inc
pop
push
push
push
push
push
push
lea
push
push
call
data16
mov
mov
in
hlt
fiaddl
cmpsl
add
movsb
add
jle
add
add
into
add
add
add
movl
add
call
pop
push
lea
push
call
push
add
pop
add
jns
jns
add
add
add
mov
add
loope
mov
add
mov
aam
add
mov
xchg
add
hlt
add
mov
add
shll
pop
add
loope
add
add
push
add
add
add
sub
pop
dec
jne
push
shr
lea
add
not
pop
call
push
lea
push
push
call
jmp
nop
imul
pop
add
add
add
in
mov
stc
mov
lds
nop
add
cld
jnp
add
in
add
scas
add
add
add
add
add
xchg
faddl
lock
in
hlt
lcall
add
add
int
push
push
push
lea
push
lea
push
lea
push
push
lea
push
push
lea
push
call
fsubs
add
add
movb
nop
add
mov
pop
add
testl
data16
enter
in
arpl
jb
ja
jno
add
scas
test
add
popa
filds
jns
add
aad
add
add
lcall
pushf
and
ljmp
mov
jo
in
movsl
not
xor
push
sub
add
rol
shl
rol
add
sub
xor
pop
lea
pop
push
dec
sub
lea
xor
pop
pushl
push
push
lea
push
push
lea
push
lea
push
lea
push
push
lea
push
push
call
cli
xchg
add
insb
add
scas
incb
mov
jmp
push
add
push
add
add
orb
add
mov
add
ljmp
lret
negl
add
add
add
sub
pop
call
push
push
add
pop
call
push
push
inc
add
sub
push
xor
add
not
shr
sub
shr
xor
lea
pop
sub
sub
shl
pop
push
push
call
add
arpl
stc
call
gs
addl
mov
enter
jle
add
repnz
add
clc
lcall
jne
push
push
push
push
lea
push
push
lea
push
call
cld
cmpsl
mov
add
addb
loope
add
lods
add
fincstp
pop
mov
add
leave
add
test
loope
ljmp
rcrb
xchg
add
add
mov
shll
mov
xchg
mov
in
jnp
in
in
lcall
ds
push
push
push
call
call
add
add
push
add
add
mov
add
cmc
mov
jle
addl
lods
movl
add
mov
pop
cmpb
insb
lds
movsb
push
outsl
add
addl
cld
lea
push
push
xor
push
push
pop
add
sub
sub
ror
add
shr
shr
pop
pop
push
lea
push
push
push
push
push
call
add
add
add
mov
push
add
aad
xchg
add
add
pop
xchg
add
jle
out
fidivrs
in
mov
mull
test
outsl
mov
lcall
jne
push
add
pop
call
lea
push
push
call
movsb
leave
add
imul
pop
mov
jo
loope
cld
in
mov
add
clc
int
add
mov
add
add
sahf
add
xchg
xchg
xchg
mov
pop
xchg
add
mov
filds
sub
pop
push
push
push
inc
shl
lea
pop
push
push
push
push
push
lea
push
push
push
push
push
lea
push
call
pop
in
mov
add
fistpl
add
add
add
mov
add
pop
add
add
pushf
outsl
jnp
fbstp
outsl
jp
add
add
mov
sub
pop
pushl
push
push
sub
shr
xor
push
or
not
add
sub
sub
not
not
pop
not
not
lea
pop
push
dec
shr
pop
push
push
push
call
push
mov
sbbb
add
xchg
xlat
add
add
lea
mov
add
push
sahf
fld
out
js
pop
add
jle
andl
pop
add
mov
test
test
roll
xlat
xlat
push
add
scas
add
add
add
into
add
add
in
clc
lcall
shrb
shl
push
shl
lea
push
push
pop
add
shr
rol
shr
sub
inc
ror
not
pop
dec
sub
sub
pop
push
push
push
push
push
push
lea
push
call
in
les
xchg
add
add
add
sar
add
shlb
add
test
add
add
icebp
leave
jno
out
in
add
push
sub
pop
pushl
push
shl
pop
call
push
ror
pop
push
push
add
add
not
pop
call
push
push
sub
push
push
pop
add
sub
sub
shl
add
pop
pop
push
inc
pop
pushl
push
sub
sub
rol
sub
pop
call
push
ror
ror
add
pop
call
push
push
push
lea
push
lea
push
push
push
call
push
lret
jmp
add
lock
mov
mulb
fiadds
mov
aam
pop
in
cltd
cld
fs
add
add
hlt
lret
add
add
add
rcl
out
add
add
add
fsub
loop
sub
pop
pushl
push
not
pop
mov
push
shl
sub
pop
jmp
push
push
xor
inc
ror
push
push
pop
add
rol
sub
sub
pop
not
pop
push
push
push
push
push
lea
push
lea
push
call
pop
add
add
add
movl
mov
icebp
jl
push
mov
add
pop
xchg
mov
fildl
add
add
pop
pushl
call
push
push
push
call
add
scas
add
lods
cwtl
popf
lods
mov
popf
add
add
add
pop
cmpsb
out
jmp
call
mov
les
lahf
pop
add
add
fistl
fs
pop
clc
test
add
add
lods
mov
pop
fmul
sub
pop
push
push
add
ror
pop
call
push
push
dec
xor
rol
dec
push
xor
add
not
ror
shl
inc
sub
lea
shl
xor
sub
pop
dec
dec
add
pop
push
add
rol
rol
shr
pop
pushl
call
push
lea
inc
pop
push
push
push
push
push
push
lea
push
push
call
add
loop
int3
imul
repnz
add
add
jmp
lds
jbe
mov
add
fdivl
add
mov
jns
pop
pop
jle
cwtl
xchg
loopne
sub
pop
call
push
ror
inc
shl
pop
leave
push
push
push
call
mov
addl
add
insb
xchg
xchg
add
mov
add
add
add
test
push
add
push
cmc
jne
add
add
add
mov
ljmp
jno
out
in
lcall
ret
add
iret
mov
iret
mov
jbe
in
hlt
lcall
les
push
push
push
call
in
add
push
add
aad
add
shlb
add
loopne
add
mov
pop
mov
fsubl
stos
jmp
add
test
lods
add
push
hlt
cmc
add
add
stc
arpl
add
out
mov
mov
add
mov
pushf
aad
rolb
lcall
hlt
test
lcall
push
push
push
push
push
push
push
call
ret
add
add
lods
jecxz
mov
push
addl
add
mov
into
add
icebp
mov
jae
add
add
add
lea
insb
push
add
pop
int
add
xchg
push
fwait
add
enter
orl
add
push
insb
add
add
in
in
in
lcall
push
shl
sub
shl
pop
pop
push
push
push
push
push
lea
push
lea
push
push
call
add
add
ret
repnz
push
add
in
mov
add
push
rcrb
add
sub
pop
xor
inc
push
push
lea
push
push
lea
push
push
push
call
hlt
add
stc
add
lea
add
add
pop
mov
roll
lahf
lock
testl
in
in
lcall
or
push
lea
push
call
add
add
push
jae
loopne
add
mov
int3
add
mov
mov
add
add
int
int
lcall
mov
mov
add
imul
in
jge
mov
mov
push
add
push
push
push
push
push
lea
push
call
loope
mov
test
add
ljmp
loope
add
mov
jge
jl
movsl
imul
add
add
add
jnp
push
add
test
sub
pop
ret
push
lea
push
lea
push
push
push
push
push
call
add
add
cmc
jmp
add
fwait
jne
std
xchg
lahf
add
fiaddl
add
stos
sahf
add
leave
fdivrl
jecxz
xchg
pop
add
add
mov
add
mov
test
xchg
in
add
pop
mov
pop
mov
add
push
add
in
in
lcall
mov
push
rol
pop
cmpl
jne
mov
push
rol
pop
jmp
push
rol
sub
sub
pop
mov
and
push
push
push
push
lea
push
push
push
call
mov
mov
lret
add
leave
test
movsb
fildl
add
cmc
xchg
out
jle
fisubs
push
pop
push
mov
add
add
add
add
lcall
leave
xor
push
pop
add
xor
push
push
push
push
push
lea
push
push
lea
push
push
call
add
stos
add
movsl
add
add
cld
mov
add
push
add
jge
jmp
je
in
fdivr
lcall
push
dec
add
shr
pop
sub
push
push
call
add
xchg
jae
add
scas
add
jge
add
push
loope
gs
movsl
jecxz
add
out
into
add
roll
mov
repnz
xchg
add
add
in
into
add
faddl
roll
stc
stos
mov
add
aad
mov
faddl
loope
imul
add
stos
lea
mov
add
mov
sub
pop
jmp
sub
push
push
push
push
lea
push
call
bound
jo
scas
add
mov
subl
ret
add
add
add
jne
mov
mov
mov
fistps
mov
rcrb
lcall
in
in
lcall
xor
cmc
push
push
lea
push
lea
push
push
call
jle
in
add
aad
add
add
push
enter
xchg
cmc
loopne
xchg
mov
add
movsb
rcrl
add
mov
mov
push
sub
add
pop
sub
cmp
jne
push
push
push
push
push
push
lea
push
push
push
push
call
add
imul
mov
pushf
stc
enter
repnz
in
bnd
mov
mov
push
add
out
andl
in
fdivr
lcall
enter
xor
pop
lea
sub
push
push
push
push
call
test
popf
add
add
enter
mov
movsb
add
add
add
fiaddl
leave
xlat
push
in
xchg
add
jmp
stos
add
add
pop
mov
pop
loop
add
roll
sub
pop
mov
shr
push
push
push
push
lea
push
push
push
push
push
push
call
test
pop
lds
lcall
mov
add
add
xchg
add
add
test
xchg
jle
les
rcr
add
fldenv
movsl
arpl
gs
add
add
stos
add
add
out
shlb
fdivr
lcall
enter
pop
sub
pushl
push
shl
ror
sub
pop
pop
push
push
push
push
push
lea
push
push
lea
push
push
push
call
pop
add
add
jbe
push
nop
add
add
add
add
add
iret
mov
rcr
add
lods
in
add
stc
jb
add
stc
add
call
jl
lds
in
fcomps
jmp
incl
add
sbb
pushf
xchg
push
mov
push
lea
push
call
add
stc
add
test
fcmovb
xchg
cld
jmp
loopne
fcomps
testb
into
add
add
lods
add
add
add
add
add
jo
add
mov
add
cwtl
add
outsl
add
leave
loope
jecxz
stos
add
sub
pop
sub
push
sub
add
shr
pop
cmp
jne
push
inc
not
lea
pop
leave
push
not
pop
ret
push
push
lea
push
push
push
lea
push
call
xchg
call
mov
sti
pop
popf
hlt
into
in
add
add
xchg
jp
add
add
icebp
int3
faddl
cli
push
loope
pop
aam
sub
pop
mov
add
push
lea
push
push
push
push
lea
push
call
lods
out
push
add
int3
fiaddl
add
cli
stc
add
mov
pop
in
xchg
pushf
movb
add
popl
add
push
cld
addr16
add
add
out
int3
fsubs
mov
jmp
add
add
add
iret
insb
add
lcall
push
push
call
jge
out
add
out
fiaddl
je
add
add
xchg
pop
movsl
add
mov
xlat
icebp
add
mov
pop
add
pop
xchg
add
pop
push
push
shl
shl
pop
push
push
push
xor
pop
push
push
push
push
push
push
push
lea
push
call
xlat
imul
insb
add
add
add
xchg
add
add
testb
test
xchg
cmpb
xchg
mov
cwtl
jp
add
mov
mov
add
insb
mov
fwait
add
add
add
js
lret
imul
or
shrl
aad
sub
mov
push
lea
push
lea
push
push
lea
push
push
call
mov
push
xchg
add
add
in
iret
add
test
pop
mov
jl
je
fistpll
add
push
jo
add
sti
lds
stos
xlat
lcall
mov
jne
add
jbe
add
add
xchg
enter
rcrl
mov
xlat
pop
lods
sti
add
sub
pop
shr
add
push
push
push
push
push
push
call
out
pop
add
jnp
add
popf
mov
test
fsts
popf
add
sahf
jae
lods
fstpl
add
enter
add
in
add
add
push
add
repnz
addl
add
push
add
fwait
addb
add
pop
or
push
push
push
call
add
add
in
add
add
add
fadd
jecxz
mov
add
xorl
lds
pop
add
push
add
add
scas
sarl
lods
push
nop
imul
add
jbe
out
rclb
xchg
add
in
mov
add
add
add
in
in
pop
mov
add
push
pop
xor
push
shr
sub
sub
pop
mov
push
xor
add
pop
and
rol
push
lea
push
push
call
add
add
icebp
add
push
add
add
add
add
add
mov
leave
add
clc
mov
out
add
movb
mov
add
add
pushf
stos
add
add
rolb
add
jl
in
hlt
pop
rol
push
add
add
pop
xor
inc
push
push
push
call
add
fsubrp
fwait
cmpsb
lret
xlat
add
add
add
add
std
add
lea
add
in
add
test
hlt
cwtl
add
movsl
pop
push
leave
std
test
movsb
les
enter
pop
add
cli
out
flds
ljmp
xorl
in
hlt
lcall
cmp
jne
push
sub
xor
xor
pop
add
cmp
je
push
lea
lea
add
pop
add
push
ror
xor
lea
pop
cmpl
jne
push
push
push
call
subb
fidivs
addb
addr16
add
pusha
add
lods
cmpl
add
add
cmc
fadds
add
rcrl
cld
ljmp
roll
add
pop
xor
pop
push
push
push
call
lahf
xchg
add
out
add
add
lock
add
in
add
add
bound
add
mov
add
mov
add
mov
sub
pop
pop
pop
push
push
push
push
push
push
push
push
call
imul
out
add
stos
jge
add
add
imul
add
into
add
add
xchg
add
add
loopne
lcall
pop
push
push
push
push
push
push
push
call
jae
mov
add
add
pop
add
add
sahf
pop
insb
nop
jbe
push
add
add
push
lds
add
hlt
faddl
movsl
cli
mov
pop
leave
push
push
push
lea
push
lea
push
push
push
push
push
call
add
xchg
add
test
xlat
mov
fstpt
jbe
mov
jl
mov
mov
test
outsl
orb
add
add
adc
movsb
data16
add
add
fiadds
loop
mov
test
xchg
add
cld
push
movsb
add
pop
ret
push
not
xor
shr
shl
pop
mov
push
push
push
push
push
push
call
pushf
mov
mov
jmp
pop
outsl
cli
lds
test
addr16
add
xchg
add
cmpsl
add
mov
add
push
mov
mov
addl
pushf
xchg
add
mov
andl
mov
in
call
add
mov
push
sub
inc
rol
pop
cmpb
call
push
inc
dec
lea
pop
push
call
push
ror
add
shl
add
pop
xor
pop
push
add
dec
shl
lea
pop
pop
pop
push
dec
pop
pop
push
xor
pop
pop
push
push
push
call
lods
leave
pushf
add
fldl
add
xchg
mov
leave
add
add
add
hlt
fiaddl
mov
imul
add
add
jbe
add
in
sbb
mov
jne
add
adc
add
addb
jnp
imul
add
add
mov
movsl
lods
add
mov
hlt
lcall
ret
push
push
lea
push
push
push
push
push
push
call
add
add
mov
mov
fadds
jnp
mov
add
arpl
ljmp
mov
fstl
add
add
add
add
in
push
mov
jle
pop
add
mov
test
mov
stos
aad
pop
iret
sub
pop
push
push
push
lea
push
push
lea
push
call
pop
add
lahf
nop
add
je
fidivrl
fsubl
add
add
enter
in
jae
add
fdivl
add
add
out
sarl
insb
xchg
add
sub
pop
mov
push
push
push
push
push
call
add
mov
movsb
push
add
add
add
mov
icebp
add
loop
imul
mov
testl
sti
lret
mov
mov
jns
add
incb
mov
add
add
mov
add
xchg
sub
pop
add
push
push
push
lea
push
call
pop
int3
sar
insb
test
mov
mov
out
pop
call
jle
fcompl
pop
add
add
popa
test
add
jecxz
lret
movsl
icebp
push
add
add
add
sti
roll
add
shll
cmc
xchg
mov
mov
sub
pop
push
push
pop
push
push
push
lea
push
push
push
push
push
push
push
lea
push
call
imul
out
add
mov
fs
push
lds
out
fstpt
push
add
iret
jle
iret
movl
in
add
xchg
test
add
xchg
in
fcompl
mov
push
lea
push
lea
push
push
push
push
push
push
call
out
add
jb
repnz
add
lock
add
add
fwait
scas
int3
mov
mov
add
ja
loope
add
add
mov
cli
xchg
pop
mov
push
rcrb
mov
pop
jge
mov
in
mov
add
andl
add
sub
pop
push
push
not
pop
pop
push
push
push
push
call
xchg
add
mov
add
int
add
jle
test
pop
cwtl
add
fwait
jno
add
jecxz
mov
add
mov
add
jle
lods
sahf
stos
pop
add
pop
lea
push
push
push
push
push
lea
push
push
push
push
push
call
jne
test
jbe
add
mov
xchg
cltd
fiaddl
add
add
icebp
mov
mov
add
add
add
add
ljmp
add
xchg
push
add
jp
add
in
mov
jl
or
in
fdivr
lcall
ljmp
pop
mov
shr
push
add
rol
not
dec
pop
add
push
push
push
push
push
push
call
out
int3
cli
add
add
fdivl
add
add
test
mov
out
mov
xchg
jmp
std
testb
cltd
add
add
lcall
pop
js
xor
pop
add
pushl
push
add
pop
popl
push
push
push
lea
push
push
push
call
lock
fsubl
hlt
xchg
mov
fwait
add
call
push
xchg
mov
add
fiadds
add
add
jo
add
mov
test
sub
pop
mov
push
shl
not
rol
pop
add
push
lea
push
push
push
push
push
push
push
push
push
call
add
add
lods
jl
add
jge
jecxz
movsb
push
sahf
xchg
scas
popa
add
roll
hlt
lea
push
xorb
sub
pop
xor
push
add
xor
pop
lea
push
push
lea
push
call
add
add
add
add
add
js
out
xchg
push
add
xchg
js
add
lock
push
add
fcoml
pop
jnp
lods
add
std
shl
jae
mov
add
imulb
iret
in
fiaddl
add
add
pop
mov
jge
add
jo
add
add
bound
hlt
lcall
adc
pop
mov
add
xor
push
push
lea
push
call
roll
fwait
rolb
ljmp
add
cwtl
mov
stos
xchg
fs
hlt
push
out
imul
add
xchg
pop
popf
add
xchg
aad
cwtl
xchg
add
ja
add
popa
push
sub
pop
rol
push
shr
inc
pop
nop
push
push
push
push
push
push
push
call
add
mov
mov
stos
popa
clc
mov
add
pop
add
add
jns
add
add
pop
les
add
sub
in
add
mov
ljmp
jne
add
scas
popl
mov
xchg
add
loope
in
in
nop
push
push
push
push
push
push
lea
push
push
call
jns
add
add
mov
push
js
lds
in
imul
int
test
add
jae
add
popl
in
add
sahf
cli
fcmovnb
add
lds
sub
pop
xor
push
push
lea
push
push
call
push
add
push
sahf
add
mov
add
test
jmp
add
aam
push
add
cld
xchg
xchg
mov
add
add
mov
in
lock
nop
nop
push
lea
push
lea
push
push
push
push
lea
push
push
lea
push
push
call
call
stc
jmp
ja
xchg
push
push
add
xchg
scas
add
add
add
data16
arpl
faddl
addl
popl
add
xchg
sub
pop
inc
push
push
call
js
add
push
add
add
add
mov
add
add
add
push
jno
fsts
add
mov
add
nop
add
icebp
pusha
xchg
pop
int
mov
mov
mov
std
jecxz
je
xchg
mov
jb
mov
test
movsl
add
xchg
mov
lods
jno
add
sub
pop
nop
push
add
shl
lea
shr
pop
nop
push
push
lea
push
push
push
push
lea
push
push
push
lea
push
call
add
add
xchg
clc
mov
add
mov
add
add
push
xchg
mov
push
xlat
jo
add
add
addb
jne
roll
into
mov
add
add
add
cmp
jne
add
push
push
push
call
in
add
hlt
stc
mov
leave
add
add
test
add
jno
add
mov
mov
jl
ljmp
jmp
mov
testb
mov
add
add
int3
sub
pop
nop
nop
push
push
push
push
push
call
arpl
jae
xchg
add
pop
lods
add
loopne
mov
je
add
out
mov
xlat
mov
fldcw
imul
mov
aam
and
xchg
add
fstpt
add
inc
or
test
add
push
push
call
add
add
jb
add
push
add
add
add
pushf
xchg
add
xchg
rcrb
mov
add
add
jne
pop
jl
add
data16
push
mov
pushf
jo
lods
enter
jmp
into
add
pop
nop
nop
push
inc
pop
inc
push
push
lea
push
push
push
push
push
call
jecxz
scas
hlt
add
add
loope
add
add
xchg
jecxz
xlat
lret
idivl
add
add
cmc
outsl
add
lcall
push
xor
shr
pop
nop
push
push
push
call
je
ficomps
clc
pop
mov
add
test
add
jecxz
push
out
enter
add
add
add
add
pop
fiadds
add
ja
add
add
mov
add
jnp
fs
pop
cmp
jb
xor
push
push
lea
push
push
call
mov
add
add
call
lea
add
add
push
cmc
pop
repnz
add
jns
test
shll
mov
lods
imul
stos
push
add
in
lock
lcall
lar
add
push
push
push
push
lea
push
lea
push
call
pop
add
cwtl
add
xchg
add
movsb
lock
movsb
mov
ljmp
add
loope
add
add
pop
add
add
addl
sub
pop
add
movzwl
push
sub
ror
inc
pop
mov
push
push
call
mov
mov
add
add
add
mov
movsl
mov
cmc
xchg
add
movl
xchg
add
add
sahf
add
lahf
loopne
jb
in
add
lcall
rcll
pop
mov
push
xor
pop
xor
push
push
call
clc
repnz
cmpsb
add
add
mov
mov
cmc
divl
repnz
add
add
add
outsl
imul
out
add
bound
mov
icebp
add
lcall
dec
nop
add
loope
push
add
pop
xor
push
ror
xor
pop
shl
xor
push
lea
push
push
lea
push
lea
push
lea
push
push
push
push
push
call
sahf
testb
fistpl
mov
add
lods
leave
int
div
aad
mov
rclb
add
loope
add
mov
mov
mov
mov
lcall
loope
xor
push
shr
pop
mov
add
push
push
lea
push
push
push
push
push
call
icebp
jbe
cwtl
push
add
jmp
add
jno
mov
add
stos
jmp
add
cld
cwtl
xchg
mov
fprem1
mov
xchg
in
shll
loopne
pop
mov
xchg
xchg
jbe
xchg
push
add
mov
add
leave
in
sub
pop
pop
push
push
push
lea
push
push
push
push
push
push
push
call
push
mov
jbe
fmul
loope
mov
add
lcall
add
jecxz
add
rolb
xchg
add
out
sti
push
lea
test
jnp
jge
test
in
mov
xchg
add
rcll
lcall
pop
push
lea
push
call
cmpsl
add
add
testl
test
add
sahf
aad
movsl
mov
fiaddl
jne
mov
mov
add
add
push
add
add
ret
xchg
add
mov
out
ja
in
ja
testl
fwait
add
add
mov
sti
test
arpl
lcall
leave
push
push
call
je
js
addb
add
add
add
push
movsb
add
cmpsb
pop
ljmp
lahf
call
pop
mov
add
loopne
add
test
mov
push
stos
add
in
mov
in
clc
lcall
or
push
push
push
lea
push
push
push
lea
push
push
push
call
aad
add
insb
add
pushf
fadds
add
jns
add
hlt
add
mov
out
int
leave
lret
pop
add
aad
mov
add
add
loop
push
sub
pop
push
push
push
push
lea
push
push
lea
push
lea
push
push
call
popf
test
jnp
mov
jno
add
add
sahf
jno
lods
cmpsl
stos
add
jle
add
push
ja
add
scas
add
cmc
ljmp
jnp
add
push
add
imul
add
add
lret
hlt
fwait
testl
push
rol
pop
push
push
push
call
mov
mov
out
ret
loope
add
mov
add
xchg
add
in
add
add
int3
testb
rorl
xchg
mov
add
jne
add
mov
iret
add
out
iret
mov
lods
sub
pop
push
push
push
push
push
push
push
push
push
push
call
pushf
jns
add
gs
add
jbe
test
pop
add
add
out
js
mov
add
pop
mov
sub
pop
push
mov
push
push
push
lea
push
lea
push
call
push
cltd
add
pop
ret
roll
incb
xchg
add
add
call
stos
xchg
mov
add
fnstcw
scas
add
add
mov
add
add
mov
js
in
add
pop
enter
ret
xchg
add
mov
jge
add
mov
add
nop
push
lahf
popl
mov
lcall
adc
dec
pop
mov
push
xor
inc
shr
pop
test
je
push
not
rol
add
not
pop
mov
test
je
push
pop
mov
push
push
push
push
push
call
cmc
add
add
scas
xchg
mov
fidivl
add
andl
popa
clc
out
push
xchg
jp
jge
add
leave
push
fadd
popf
pop
fiaddl
add
pusha
add
in
mov
ljmp
in
lcall
dec
or
pop
push
pop
inc
push
ror
shl
not
pop
cmp
je
push
shl
shl
xor
pop
test
je
mov
push
push
lea
push
lea
push
lea
push
push
push
push
call
push
add
xchg
scas
xchg
add
jge
add
add
lds
test
add
mov
cli
add
mov
fs
add
pusha
sub
pop
inc
push
shl
sub
xor
pop
cmp
je
test
jne
push
not
not
pop
xor
push
ror
lea
not
pop
pop
push
sub
add
rol
sub
pop
pop
pop
push
push
call
push
add
add
add
pop
add
mov
push
in
stos
add
scas
xchg
push
fs
lahf
add
xchg
add
xchg
cmpsl
add
jmp
mov
add
push
add
add
jbe
mov
gs
xchg
add
add
xchg
add
cmc
mov
enter
pop
sub
pop
pop
push
rol
not
pop
leave
ret
push
push
push
push
lea
push
push
call
mov
jae
add
xchg
mov
add
add
test
clc
rolb
cmpsl
add
add
push
add
pop
add
icebp
jnp
fwait
add
jo
mov
add
add
lods
popa
add
add
jmp
scas
add
lcall
push
push
xor
pop
inc
push
not
dec
pop
cmp
jne
push
push
lea
push
push
push
lea
push
push
push
push
lea
push
call
insb
iret
add
adc
add
add
fcom
aam
push
shr
imul
add
loop
add
imul
add
add
add
add
std
lea
pop
jnp
mov
leave
test
data16
jle
push
push
push
lea
push
push
push
push
push
push
call
lods
jno
jbe
in
stos
mov
popl
add
mov
clc
jmp
rolb
add
shrw
sahf
add
fisubrl
xchg
jmp
add
lcall
popa
add
enter
in
test
push
push
lea
pop
add
push
push
push
call
add
lret
jne
add
fiaddl
fs
je
add
test
imul
lahf
add
add
mov
add
push
je
add
add
pop
add
add
aad
push
jecxz
add
stc
cmp
add
sub
pop
cmp
jne
mov
push
rol
dec
pop
test
je
mov
push
add
pop
add
cmp
je
push
push
lea
push
push
lea
push
push
push
push
push
call
add
mov
not
add
aad
add
sahf
push
add
fwait
int3
sti
add
jecxz
roll
jp
sub
pop
jmp
push
rol
pop
xor
pop
push
xor
shr
pop
pop
push
push
call
add
addb
ret
add
add
push
add
rcrl
fwait
add
lahf
pop
pop
lds
js
sub
pop
pop
push
push
push
push
lea
push
push
call
add
jl
outsl
mov
lea
cmc
add
mov
mov
pop
mov
iret
fistpll
add
call
not
shr
pop
ret
lea
push
shl
pop
pop
push
inc
add
shr
add
pop
pop
push
push
push
lea
push
push
lea
push
push
lea
push
call
mov
js
fildl
fsubrs
scas
rolb
mov
push
add
roll
add
add
add
sarl
add
add
loope
push
mov
add
add
out
add
std
leave
add
out
filds
add
add
lcall
push
add
dec
inc
pop
pop
leave
push
shr
shr
pop
ret
push
push
push
push
push
push
lea
push
call
fsubl
ja
jnp
add
pop
add
add
add
fdivs
bound
les
in
mov
add
sti
pushf
mov
into
lret
scas
xchg
add
jmp
outsl
add
push
add
add
mov
pop
mov
push
sub
xor
sub
rol
pop
pop
push
pop
pop
push
pop
pop
push
push
lea
push
call
fs
stc
sahf
push
enter
push
js
loop
fdivs
xchg
jnp
ja
add
cmpsb
add
js
add
pop
pop
push
pop
leave
push
sub
add
sub
pop
ret
cmp
leave
mov
xor
mov
mov
mov
loope
mov
ror
mov
mov
lret
std
lret
xchg
lret
or
mov
add
add
inc
xor
movsb
shrb
mov
fadd
xor
adc
inc
rol
lock
mov
std
jmp
mov
pop
inc
out
add
push
inc
outsb
mov
jo
mov
loop
ds
mov
stc
fs
jns
shrl
push
jmp
popa
cmc
or
pop
sbb
out
push
addr16
mov
rcll
lret
mov
aas
sub
movsb
xor
sub
fwait
lret
mov
xor
xor
sub
add
loopne
cs
push
xor
shll
mov
cmp
mov
mov
dec
jg
jg
xlat
cli
loope
mov
clc
pop
adc
fnstenv
push
jno
test
adc
bound
in
je
push
push
adc
loop
fcomps
ss
and
pop
sub
lret
dec
ljmp
fsub
push
sub
mov
mov
or
push
repnz
and
out
idivb
in
mov
shll
sahf
jecxz
pop
mov
mov
out
dec
jb
add
les
jo
cmp
fcompl
stc
rol
imul
and
mov
lret
adc
add
je
ss
pop
pop
lds
and
nop
int3
mov
mov
and
movsb
lahf
mov
xchg
frstor
and
inc
addr16
or
fs
movsb
push
or
test
mov
xchg
sarl
les
xor
test
popa
dec
cmp
popf
xchg
adc
inc
cmp
push
data16
sbb
adc
adc
fbstp
sbb
stos
mov
aam
mov
loopne
xor
fbstp
cli
sbb
movsb
test
pop
aam
sbb
aaa
ljmp
push
cmc
pop
mov
jl
movsl
repz
popf
rclb
dec
test
xchg
or
mov
push
add
stos
cli
scas
ja
in
stos
pop
cmp
js
inc
inc
decb
jmp
mov
mov
mov
cmp
insb
cmpsb
test
mov
adc
out
cld
sbbl
aam
or
sti
cmp
add
xchg
arpl
pop
dec
xchg
sahf
insb
xchg
inc
fistl
mov
cmp
xchg
sub
sub
jns
adc
loop
testb
dec
fisubl
ss
in
movsl
stos
jb
sbb
loop
orb
xchg
dec
lods
out
lahf
xchg
in
pop
sbb
fsubs
sahf
jge
clc
push
xchg
lcall
pop
or
test
lea
adc
jns
sbb
addr16
int
mov
lret
mov
jmp
jno
push
test
or
mov
and
movsl
leave
jmp
out
test
adc
aam
addr16
push
hlt
jb
xchg
and
in
divb
pop
jg
shlb
cmp
popf
leave
testl
adc
repz
int
adc
mov
mov
out
add
in
dec
push
js
xor
fs
and
dec
stos
js
pop
mov
imul
popf
xor
mov
jge
mov
ja
or
ror
pop
add
mov
jbe
push
pusha
stc
cmp
push
adcb
xchg
mov
and
inc
pushl
ss
lock
jmp
cwtl
jo
test
jnp
fisubrl
sbb
inc
xor
dec
imul
xor
cmp
cmp
out
hlt
sub
xor
and
mov
imul
pop
lds
cld
clc
out
sub
adc
adc
mov
mov
xor
call
mov
sub
dec
stos
mov
mov
mov
jecxz
fisubs
test
mov
imul
cs
out
add
andl
mov
les
pop
and
sub
cmpsl
inc
dec
je
sub
push
cmp
je
loop
push
test
popf
mov
adc
lahf
xor
mov
mov
pop
sbb
dec
push
add
mov
adc
xchg
mov
fisttpl
mov
xchg
cwtl
movsb
outsl
dec
xchg
sub
inc
into
loopne
jb
and
pop
es
hlt
fildll
outsb
test
mov
rcr
ffreep
inc
lret
lret
jecxz
sbb
mov
xor
ficomps
mov
xchg
fstp
jp
mov
xchg
rcrb
int3
inc
inc
add
repz
mov
adc
push
push
sub
cmpsb
pusha
sbb
or
pop
push
pop
dec
sbb
jl
push
xchg
fcoml
stos
rclb
xchg
inc
gs
xchg
call
pushl
rcrb
arpl
jmp
and
jno
dec
cltd
arpl
add
mulb
int3
call
push
lods
pop
pop
mov
jno
popa
adc
in
inc
scas
jmp
cmp
hlt
fisubs
cmpsb
xor
and
jge,pn
and
subb
cmp
enter
mov
push
jae
pushf
pop
mov
sbb
popf
sub
inc
adc
sarb
in
jmp
fucompp
cli
jmp
xchg
ja
shrl
adc
and
cmc
lahf
cmp
and
fcos
push
push
iret
pop
pop
les
pop
out
xor
in
stos
jg
cwtl
cs
xchg
jp
lcall
jbe
cmp
fwait
sbb
stos
xor
iret
insl
je
jns
stos
test
adc
add
rclb
subl
push
cs
daa
or
push
push
pop
adc
aaa
fstl
cmp
pop
clc
dec
pop
arpl
cwtl
jmp
mov
sub
test
push
lahf
sub
xor
or
xchg
push
jo
ljmp
sub
orl
orb
leave
mov
mov
arpl
xlat
dec
ret
dec
sbb
fldl
popa
push
xchg
inc
stos
fcompl
xor
push
icebp
out
cmp
sub
add
mov
rorl
inc
lcallw
inc
cmp
mov
sbbl
dec
cmpsl
inc
inc
lods
in
mov
mov
cmpsl
mov
popa
hlt
mov
dec
shlb
lea
dec
xchg
push
jno
out
daa
mov
mov
iret
fisttpl
cmp
movsl
mov
pop
mov
pop
mov
nop
daa
outsb
cs
cwtl
lahf
fcompl
fdivp
cmp
pusha
jmp
dec
bound
scas
scas
jnp
add
inc
jbe
rol
arpl
aas
fwait
and
rcrb
fimuls
arpl
aas
sti
mov
dec
cmp
jae
mov
ljmp
sbb
scas
test
ljmp
jle
clc
jo
out
sahf
fldcw
fmull
int
push
inc
pop
sub
mov
xrstor
jnp
jecxz
rolb
nop
mov
ds
push
add
sub
iret
mov
int3
repz
or
loop
dec
fisubs
hlt
push
and
push
sahf
es
outsb
shll
cmpsb
add
mov
hlt
je
and
lock
ret
xor
jno
cmp
push
mov
jle
inc
int3
lret
push
in
mov
lods
lea
jl
lds
inc
mov
fwait
jb
adc
pushf
popa
nop
fdivrl
out
lods
les
in
out
cmp
insb
sub
int
js
mov
sbb
outsl
push
in
or
iret
dec
jp
sub
xlat
in
fsubrl
lods
in
bound
push
addb
cwtl
inc
add
cmpsb
call
out
xchg
adc
xor
cmp
rcrb
lock
inc
fcomps
leave
mov
arpl
inc
add
sub
push
xchg
faddl
push
push
xor
fldt
mov
jne
lcall
mov
add
inc
ja
pusha
icebp
mov
cmp
jp
push
mov
in
sbb
push
mull
mov
mov
push
sbb
cmp
insb
mov
pusha
lcall
subl
sbb
scas
rcrb
and
xchg
sbb
ja
inc
mov
sub
sbb
test
adc
pop
xor
jnp
inc
addr16
pop
scas
mov
xchg
adc
int3
xchg
lahf
bound
xchg
mov
push
mov
adc
mov
ret
popf
cmp
mov
cmp
and
lea
sahf
mov
pop
lret
and
inc
test
les
sub
jp
pxor
popf
stos
ja
mov
loope
lcall
imul
testb
pop
sbb
mov
add
loop
mov
pop
mov
pusha
popa
ds
je
sar
push
pop
push
ja
push
xchg
into
xchg
std
pop
dec
push
mov
fcompl
movsl
push
push
jp
shlb
inc
mov
and
jl
mull
mov
mov
xor
fsubrs
push
pop
in
shlb
in
or
daa
xor
repnz
or
imul
sbb
cmc
mov
xor
inc
nop
mov
int3
adc
imul
push
push
rclb
cmp
pop
cmp
sti
pop
jno
fstps
div
or
lods
xchg
cmp
cmpsb
out
pop
mov
xor
fs
ljmp
push
addr16
pop
lcall
in
sti
stos
mov
sar
test
outsb
mov
cmc
mov
cmp
call
xlat
adc
shll
loope
test
add
or
cmp
insl
lods
inc
cwtl
push
sahf
mov
test
out
xchg
or
cs
fldl
jge
jae
inc
faddp
push
xlat
add
movsb
fwait
enter
imul
jae
mov
icebp
into
sbb
insl
scas
out
jns
addl
test
mov
jmp
repz
add
pop
test
mov
mov
out
jge
adc
lret
xorb
dec
jge
and
jmp
dec
push
add
pop
jbe
fsubp
cmp
jmp
mov
loop
jge
add
sub
cmc
iret
cmp
push
inc
enter
cmpsl
sarl
push
pop
inc
mov
inc
outsl
fwait
cld
xchg
decb
dec
in
and
inc
or
sbb
mov
push
sbb
sbb
xchg
pop
sbb
adc
push
mov
adc
ljmp
pop
dec
cmpsl
or
and
mov
aas
and
stos
sub
lahf
jnp
sahf
cmp
insb
aad
dec
jle
jle
test
xchg
sbb
or
andb
mov
ficoms
mov
sti
sub
mov
jg
pop
int
sub
ds
sbb
xchg
mov
mov
xor
sub
xchg
loopne
cltd
sub
push
roll
xchg
xlat
call
jg
dec
out
adc
sub
loope
cmp
stc
scas
xlat
push
sbb
dec
je
mov
ret
jae
addl
ds
sub
inc
xchg
lods
cld
mov
ret
xor
fcomp
pop
out
xchg
jne
jno
add
cmp
mov
xor
fmulp
xchg
iret
in
aas
sti
dec
movsl
mov
push
clc
sbb
lea
jb
js
xchg
fisttps
jp
xchg
push
jp
jle
fwait
adc
or
sarb
imul
push
shr
out
jb
mov
inc
jnp
in
pop
and
mov
mov
jb
enter
aam
fisttps
and
clc
add
dec
mov
xchg
xor
inc
aam
xchg
popf
adc
mull
fmuls
xor
hlt
rclb
outsb
push
sub
repnz
inc
fcmovnbe
add
jbe
out
sub
in
mov
xchg
sbb
or
pop
lea
nop
lea
clc
je
cmp
or
aad
dec
test
ror
lcall
fiaddl
mov
adc
outsb
and
in
mov
sbb
outsl
mov
add
icebp
subl
leave
xchg
jb
ret
pop
test
push
pusha
imul
push
add
mov
add
push
pushf
and
mov
mov
cmp
fwait
xor
sub
stc
push
inc
pop
out
stos
mov
sub
mov
sbb
mov
pop
vpaddsb
xchg
xchg
scas
in
push
mov
arpl
pop
mov
mov
cmp
stc
and
stos
imul
add
popa
shrb
sarb
sahf
or
adc
sub
dec
stos
int3
sub
insb
test
leave
in
mov
mov
ja
sbb
push
and
xor
and
and
push
notb
mov
arpl
mov
addps
fucomi
pop
lea
rcr
sub
fnstenv
pop
xchg
dec
adc
pop
xchg
pop
jp
lahf
outsb
push
or
inc
mov
inc
pop
add
xor
xchg
pushf
call
into
cmp
cmp
and
out
pop
aaa
add
mov
packsswb
xlat
or
test
daa
ds
dec
mov
cmp
dec
push
lret
adc
js
pop
aaa
push
movsl
in
mov
cmp
dec
out
lea
mov
mov
xchg
or
nop
push
pushf
inc
dec
test
and
daa
cmp
clc
cmpb
pop
mov
pop
lods
orb
pop
push
sub
adcb
testb
mov
inc
mov
dec
adc
int
xchg
sbb
push
xlat
mov
xchg
cmp
fst
loopne
ljmp
lcall
push
test
and
dec
mov
lret
loop
xchg
scas
jnp
mov
push
cmp
add
jg
jle
iret
in
inc
loope
add
ds
icebp
add
fs
mov
int
aaa
out
movb
jecxz
daa
mov
adc
mov
dec
inc
xor
inc
cmpsl
jnp
xlat
mov
add
mov
lock
adc
push
loope
mull
cld
add
xchg
icebp
decl
in
adc
xor
lods
gs
adc
and
or
andb
sahf
jns
frstor
testl
mov
in
mov
inc
loope
out
sbb
adc
int3
add
stc
stos
add
repnz
enter
cmpsb
cli
push
ret
and
mov
cmp
or
mov
sbb
sub
leave
cld
je
clc
sahf
rorb
sahf
or
and
jecxz
loope
and
fimuls
in
cmp
ljmp
hlt
and
movsl
mov
daa
adcl
mov
test
push
cltd
mov
aam
jp
sub
and
jle
pusha
das
jl
pop
test
mov
inc
adc
and
lods
adc
mov
xlat
add
sbb
xchg
testl
pop
push
stos
inc
jnp
fisubrl
lock
xchg
push
mov
push
cmc
pop
mov
push
in
addb
pop
aas
mov
push
cmp
repz
gs
xor
pop
imul
add
or
dec
rorb
test
mov
jl
lods
into
jnp
incb
push
outsb
clc
test
pop
jbe
icebp
filds
dec
scas
cmp
insb
dec
daa
sub
inc
adc
lea
sbb
cmp
fldt
cmp
into
pushf
or
mov
dec
mov
pop
lea
test
pushf
inc
push
inc
and
inc
sbb
js
xchg
mov
mov
mov
adc
std
int3
sbbb
jnp
lods
jmp
jp
dec
enter
xor
int3
aam
mov
xchg
rorl
jae
aad
inc
cmp
jge
mov
lds
xchg
call
xchg
mov
add
cmc
xchg
roll
clc
aad
adc
in
mov
inc
xchg
dec
add
enter
lcall
jb
xor
popa
fucomi
dec
std
add
mov
fistpl
fsubl
gs
mov
xor
shr
divl
or
add
push
mov
shl
hlt
std
jecxz
adc
xor
xchg
or
pop
stc
test
sub
push
or
mov
movsl
inc
cwtl
enter
add
sbb
dec
arpl
dec
jmp
ud2
push
test
addl
push
mov
lods
ja
jno
ds
mov
int
adc
fucom
ret
pop
push
mov
or
bound
push
andl
jp
hlt
push
jl
int
in
dec
adc
jg
nop
mov
and
lcall
dec
mov
rcrl
xor
fsubl
in
iret
or
pop
fnsave
mov
movsl
hlt
fidivl
pop
and
insl
test
aas
mov
cmp
and
je
pushf
push
cmp
mov
clc
sbb
bound
movsl
xor
aad
hlt
pop
pusha
ljmp
iret
test
jns
scas
movsl
inc
push
jp
cs
shl
pop
and
movsl
add
mov
xchg
out
jo,pn
movsb
push
dec
psubd
and
jl
inc
addb
stc
mulb
lret
enter
mov
adc
fmul
fldenv
andb
lret
mov
cs
ja
or
pop
lds
aad
lahf
iret
xchg
lea
orl
mov
int3
arpl
cwtd
dec
imul
and
sbb
shll
jge
mov
or
nop
imul
cmp
daa
add
les
fbstp
mov
xor
aas
mov
mov
test
xchg
pushf
xor
mov
cmp
orl
ja
fstps
test
in
mov
test
cmp
ljmp
jl
xchg
iret
mov
pop
dec
sbb
out
outsl
ljmp
lea
inc
cld
sub
scas
jae
adc
push
and
xor
jno
mov
imulb
ss
std
cs
cmp
adc
push
fldl
dec
fdivrp
fwait
popf
imul
push
pop
pop
cmc
cli
movsl
nop
push
insl
hlt
xchg
sahf
or
inc
mov
dec
adc
cmp
xor
fidivrs
sub
rol
mov
push
je
jno
int
add
call
addr16
nop
les
call
fsubrl
ljmp
push
xor
mov
push
fs
cmp
ret
pop
movsl
outsl
in
push
add
lcall
mov
loopne
cmp
gs
or
dec
imul
cmpsl
fildl
xchg
cwtl
cmp
mov
mov
int3
xchg
insb
lcall
cli
mov
test
push
xchg
mov
cmp
fcmovnu
xchg
push
jno
sti
mov
ror
lcall
inc
mov
jae
repnz
adc
es
jl
stos
scas
cmpsb
jl
leave
js
ret
lret
out
ret
sar
into
adc
jge
xor
pusha
inc
ss
xchg
mov
ss
xchg
jnp
fs
and
sti
fs
into
xchg
mov
arpl
jae
jae
cmpsb
xchg
std
shl
orb
fistpll
addb
scas
inc
mov
loope,pt
jno
mov
mov
popf
pop
mov
mov
jp
and
xor
dec
fcmovnb
daa
jbe
add
mov
jo
in
dec
mov
jecxz
test
cld
cmp
jmp
fmull
das
or
add
es
fdivr
xchg
mov
sbb
ficompl
xor
sti
add
cltd
stos
call
je
mov
sbb
sahf
pop
cmp
cli
mov
roll
in
or
or
jmp
cld
adc
xchg
movl
jno
pop
leave
mov
inc
pop
pop
dec
xor
inc
cmp
push
xchg
std
mov
shrb
inc
add
hlt
mov
fstp
ljmp
shll
sub
mov
ja
push
xor
pusha
cmp
sbb
mov
repz
xor
adc
cmpsb
loopne
pop
pop
stos
out
add
data16
mov
add
cmp
push
mov
rcrb
sbb
sub
fst
test
mov
inc
imul
sub
les
sbb
mov
cli
pop
dec
js
xorl
add
test
scas
dec
jo
jb
imul
jnp
nop
gs
sub
in
xor
mov
js
fs
sbb
mov
dec
scas
popa
dec
je
out
lcall
push
clc
iret
lret
pushf
clc
shlb
negb
es
cmp
jo
and
xor
scas
mov
test
clc
pop
inc
or
push
push
push
imul
lea
sub
ja
aaa
fnsave
jns
shrl
fdivrl
in
nop
mov
sbb
mov
cwtl
rorb
push
or
outsb
mov
lds
mov
inc
sahf
lods
cmp
or
cmp
xchg
jnp
enter
mov
adc
mov
sbb
aam
sti
cmp
stos
sbb
fildll
lods
sti
hlt
jge
dec
fstpl
fistpl
jp
dec
push
loope
orb
dec
pop
lcall
cmp
movsl
push
push
add
jp
insb
cs
in
sub
inc
rol
lret
mov
negb
int
aad
xor
cmpsl
popf
imul
sub
mov
fcomps
fiaddl
jmp
stos
scas
repnz
loop
jp
inc
lea
jno
out
mov
dec
stc
dec
jnp
cmc
sub
cmp
test
mov
rclb
mov
mov
mov
hlt
mov
jno
out
in
stos
mov
adc
daa
lds
xor
or
xchg
hlt
int
mov
popa
sub
push
push
xor
ret
jb
inc
leave
fs
in
leave
aad
inc
add
daa
mov
fcomp
insl
fwait
and
pop
stos
inc
scas
mov
fdivs
pop
aas
sub
mov
push
ficoms
mov
fwait
add
cmpsl
or
adc
xchg
push
mov
push
mov
fs
xchg
pop
rcll
cmp
das
pop
or
xor
jnp
add
mov
mov
dec
aaa
ds
pop
orl
sub
test
jne
in
or
pop
clc
arpl
lret
pop
push
fiaddl
add
sub
sbb
addr16
mov
sub
rorl
push
xchg
or
daa
cwtl
sbb
cmp
hlt
dec
cs
push
or
fdivp
dec
jecxz
or
push
sarb
outsl
fisttpl
jo
lods
mov
adc
outsl
ds
mov
push
push
mov
cltd
loope
push
pop
push
push
mov
movsb
push
fs
cmp
xor
lret
faddl
sbb
cmpsb
fcomi
out
jbe
and
mov
jmp
xor
jmp
lds
xor
adcb
cmc
lret
push
adc
aam
cmp
mov
or
dec
sub
cmp
mov
fldenv
pop
dec
and
jne
fdivl
lret
jnp
out
shrb
sbb
lods
nop
adc
aad
mov
movsb
nop
and
aam
rclb
scas
cltd
popa
repz
out
inc
and
das
adc
in
cs
jnp
dec
lods
cltd
enter
xchg
mov
push
mov
xor
inc
inc
cmp
lds
insl
js
stc
and
ljmp
xchg
jb
mov
cmp
mov
cmp
mov
cmp
mov
aas
addr16
jle
arpl
mov
daa
incl
xorl
mov
arpl
and
aaa
lods
lcall
adc
mov
mov
aas
mov
movsb
ret
lret
adc
pop
ret
or
loop
outsb
dec
pop
rclb
and
pop
mov
fstps
sbb
mov
xor
sbb
push
xorl
pushf
cmpsl
fadd
lahf
insb
and
lods
jg
in
push
mov
mov
setbe
mov
cmp
sbb
shlb
pop
xlat
scas
icebp
int
lods
rolb
xchg
xor
sub
insl
ja
call
gs
jnp
pop
xor
push
sbb
pop
sti
scas
jo
or
sbb
add
xchg
call
jmp
adc
shl
rolb
out
and
pop
add
scas
mov
inc
aam
pop
sbb
mov
cltd
loopne
mov
pop
mov
or
and
dec
dec
imul
in
daa
aas
jmp
push
cltd
pushf
fcom
sbb
cld
xchg
cmc
rolb
outsb
push
push
inc
adc
mov
adc
or
dec
and
es
xchg
jmp
sbb
mov
cmpb
divb
mov
push
lcall
sub
sbb
arpl
jmp
sub
push
rcr
jnp
shlb
add
xchg
lea
incb
cmpsl
inc
cmp
adc
aaa
lret
scas
dec
lret
push
fildll
lods
jno
xchg
adc
loope
xor
fistl
fistps
sbb
cwtl
mov
addr16
jae
xchg
outsb
inc
or
dec
cmp
sub
repz
addr16
cmp
aas
xlat
mov
xchg
or
mov
movsb
push
ffreep
sbb
inc
mov
cmp
xchg
rol
cmc
cmpsl
add
bound
fbld
dec
push
mov
cli
xchg
cld
inc
pushf
jecxz
adc
es
lcall
aam
mov
cltd
jb
addl
dec
cmp
inc
out
shl
imul
fildl
push
jp
lret
mov
cmpsb
popa
into
rcr
pushf
cs
insl
hlt
into
mov
js
sbb
and
cmp
daa
mov
adc
dec
rcrb
jg
mov
pop
mov
cld
fprem1
das
daa
add
pop
movsl
jmp
daa
adc
inc
adc
dec
pop
pusha
daa
mov
dec
lahf
loope
std
add
or
ds
pop
arpl
inc
sbb
adc
rcrl
pop
mov
or
sbb
mov
push
iret
outsl
dec
pop
jecxz
mov
movsb
add
add
cmp
or
addr16
pop
xchg
in
test
sbb
xchg
in
leave
dec
aam
jne
lds
add
mov
and
je
jp
test
or
int
shlb
scas
mov
cld
gs
jbe
mov
add
fwait
hlt
mov
dec
int
out
inc
jo
ret
sub
or
push
jge
cmpsl
and
mov
cs
push
cmp
js
fstpt
mov
icebp
xchg
lock
push
sub
inc
arpl
fcoml
enter
leave
ss
pusha
gs
pop
mov
outsb
push
leave
jo
dec
mov
pop
mov
or
pop
sub
inc
or
pop
jne
hlt
push
push
xor
mov
ss
lret
dec
fdivrs
mov
cwtl
push
push
cwtl
jae
mov
jns
xchg
insl
sub
shll
push
inc
sbb
push
xchg
ljmp
dec
xchg
cmp
and
cmp
inc
push
mov
mov
lcall
subl
push
test
push
jl
and
ja
sub
test
repnz
push
cmp
adc
arpl
inc
cld
out
loop
and
imul
rclb
adc
into
sbb
jle
cmp
mov
xchg
push
or
pop
mov
fstl
je
jnp
and
lret
shrl
ret
pop
mov
cwtl
jecxz
or
and
mov
dec
push
decl
mov
cmc
sub
add
mov
push
xor
inc
icebp
pop
mov
sahf
sub
subb
pop
jno
mov
push
dec
cmpsb
cmp
lods
subl
sbb
jl
jl
mov
sbb
or
fistl
andb
sub
pop
inc
or
mov
stos
ret
in
mov
lcall
jne
cltd
add
xor
aam
pop
jo
fldl
ret
out
jne
pop
int3
inc
jecxz
mov
dec
mov
mov
pushf
pushf
jae
ss
pop
sbb
fcomp
add
push
leave
out
or
mov
test
shrb
fmull
loope
jns
stos
push
xor
push
notb
push
pop
cmp
mov
pop
aam
nop
les
sub
add
aam
add
pusha
rorb
jle
lahf
adc
out
sbb
push
inc
icebp
testl
rol
dec
cltd
insl
stos
mov
lret
sbb
jge
mov
test
adc
push
pop
dec
sub
cld
adc
or
jb
ss
sbb
inc
sub
outsb
lahf
std
mov
ss
sbb
mov
xchg
dec
xlat
dec
push
or
lcall
sbb
in
pop
stos
mov
test
push
sub
shll
push
add
es
jno
add
inc
clc
inc
imul
or
add
or
cltd
sahf
jbe
mov
inc
mov
fldl
inc
dec
jae
pop
lret
push
sahf
rcll
scas
pusha
sub
fs
mov
lock
push
xchg
dec
mov
jmp
mov
cltd
push
push
lds
das
rorb
cltd
fldt
jl
push
add
push
dec
call
enter
mov
xor
xchg
mov
sbb
pop
mov
add
jae
and
push
push
pop
add
ret
mov
pop
je
testb
int
cmp
push
aad
inc
inc
imul
pop
rcll
xlat
pushf
push
lods
push
arpl
movb
xchg
mov
xor
pop
sub
adc
jne
cs
rcr
je
out
add
aam
mov
push
jle
or
ret
mov
inc
test
push
cmp
fdivp
jle
pop
mov
test
clc
pushf
stos
adc
fcmovnb
and
fdiv
cmc
test
decl
mov
inc
xchg
pop
sahf
adc
cltd
imulb
mov
xor
mov
jmp
enter
jmp
sbb
cwtl
or
mov
push
sbb
cmp
sub
enter
inc
repz
inc
std
or
subb
pop
xor
lock
test
mov
fimuls
cmp
stos
inc
int
cwtl
pop
adc
notb
gs
add
mov
xorb
push
dec
es
push
push
test
mov
or
aas
adc
cltd
aas
sbb
test
xchg
ss
fwait
xchg
daa
xor
aas
fmull
fwait
addr16
sti
push
mov
push
ret
es
mov
push
mov
adc
dec
sbb
lods
sub
dec
dec
hlt
ret
ret
push
in
adc
mov
fwait
xor
ljmp
mov
push
outsl
lock
call
or
inc
mov
int3
add
sub
cmp
sarb
sbb
xor
push
adc
pop
push
fcmove
and
dec
cmpsl
mov
lods
and
add
push
sbbl
sbb
add
shlb
aam
cmp
jl
jo
mov
mov
push
pushf
in
mov
lea
icebp
ljmp
out
jns
outsl
das
pushf
xor
test
cmp
jge
add
lock
add
fdivrs
xchg
mov
add
lods
sarl
enter
xlat
stos
test
mov
mov
cs
rol
imul
inc
and
movsb
gs
ret
mov
add
inc
jnp
mov
or
scas
sar
inc
cmp
add
lret
xor
lods
push
lcall
pop
dec
mov
sbb
mov
mov
sub
ja
inc
push
dec
std
push
in
insb
shl
push
adc
pop
ret
je
imul
cmp
jns
lahf
fs
insl
aad
xlat
movsb
js
mov
sub
js
fwait
leave
pop
je
into
mov
movsb
popa
inc
dec
cmc
ds
sbbl
mov
pop
push
mov
cld
jae
jbe
adc
push
mov
repnz
popa
cmpsb
mov
adc
outsl
cmp
loopne
xchg
lea
addb
mov
inc
xlat
xor
in
xor
mov
ja
shrb
subb
into
push
test
lret
xchg
mov
sbb
pop
inc
bnd
pop
inc
xchg
and
outsb
jbe
fwait
scas
mov
mov
or
mov
xor
repnz
add
addr16
dec
jne
xor
mov
inc
cli
daa
adc
pop
movaps
lahf
ret
loope
getsec
push
push
pop
insb
pop
mov
or
fwait
push
mov
jae
fmuls
push
mov
sahf
cwtl
adc
push
shll
sub
and
xor
movsl
jecxz
scas
mov
lcall
mov
jns
imul
lods
push
sbb
pop
mov
sub
fcmovnu
and
loopne
jnp
sub
movsb
imul
ljmp
loope
sbb
aam
call
xchg
mov
roll
jns
std
jl
xlat
pop
xorl
push
sahf
cltd
je
cmp
xchg
mov
imul
fildl
mov
xor
orb
and
adc
mov
outsb
pop
cmc
imul
popa
pop
adc
pop
inc
mov
lock
gs
xchg
and
or
pop
in
push
fwait
repz
dec
fldenv
sahf
test
sarl
mov
adc
pop
jno
pusha
mov
sahf
xor
ficoml
jns
call
cmp
popf
or
fstpl
cmp
imul
add
push
jmp
lret
aaa
xchg
jge
xchg
add
mov
and
add
jp
fadds
js
popl
mov
or
pop
test
lods
stos
add
ja
in
out
outsl
and
xchg
leave
iret
es
push
sahf
mov
repz
mov
aas
in
mov
lock
fcmovbe
rcrb
imul
repz
push
je
addr16
push
mov
clc
mov
mov
leave
inc
mov
or
shlb
cmp
lods
mov
out
push
push
adc
out
mov
aas
mov
fsts
subl
icebp
gs
dec
in
add
into
add
xchg
pop
lods
movsl
jmp
icebp
push
sbb
movsb
cmp
inc
fsubrl
aas
dec
inc
inc
aaa
lds
mov
sub
mov
fists
into
mov
or
stos
das
lret
loope
in
iret
cwtl
shll
jmp
push
mov
sub
pop
outsl
or
push
sbb
or
mov
lret
cmpsb
pop
pop
inc
push
sbb
mov
sub
mov
imul
push
xchg
gs
cwtl
push
adc
mov
push
bound
orb
mov
scas
in
mov
jae
shl
js
mov
mov
ss
push
in
adc
add
cmp
mov
push
rcl
sti
shrb
shlb
mov
add
je
or
dec
ljmp
in
adc
ds
dec
mov
out
imul
fwait
mov
inc
pop
or
movsb
push
rcrb
test
incl
add
mov
or
jmp
int3
fcmovbe
and
xchg
xchg
push
jne
das
shl
cmc
test
fnstenv
pop
mov
les
pop
mull
lret
mov
aam
and
movsl
xor
add
ds
test
push
sub
stc
sbb
mov
push
loope
out
mov
movsb
stos
lret
jae,pn
mov
insb
push
mov
push
in
push
out
icebp
andl
jmp
mov
pusha
dec
fldenv
pop
mov
in
std
xor
fstl
out
mov
loope
jns
ja
in
pop
movsl
pop
outsl
outsb
in
icebp
cmc
je
aas
call
or
insl
clc
ss
fstl
loop
dec
mov
out
lret
dec
nop
lret
mov
ss
add
jmp
adc
push
mov
dec
mov
int
add
andl
rep
rcr
or
outsb
add
insb
and
and
jnp
cli
and
aad
inc
aad
cmp
sbb
and
pop
cmp
xchg
test
inc
lret
mov
loopne
aad
fmull
pop
cmpsb
sub
and
or
scas
and
int3
inc
les
sti
subb
movsl
add
adc
popa
push
test
or
data16
scas
jmp
stc
pop
push
push
sub
sbb
mov
push
push
pop
out
fildl
jns
sub
outsl
add
xchg
fnstcw
or
int
push
rcrl
popa
arpl
push
dec
fisubs
cmp
test
arpl
ljmp
sbb
lret
xchg
andb
notl
xor
lcall
mov
test
sbb
imul
das
outsb
adc
repz
fwait
jmp
data16
fs
and
sub
cmp
icebp
jp
ja
xor
push
add
sti
jns
fxch
stc
push
lret
jnp
sti
shll
shlb
pop
in
lock
es
pop
xor
out
sbb
jecxz
cmp
jg
push
out
mov
sbb
jbe
fwait
push
sub
cltd
dec
lcall
pop
push
pop
cld
pop
xchg
inc
add
stos
add
sti
or
ficoml
dec
mov
iret
pop
insl
push
sbbl
in
lods
push
fcoml
leave
xor
inc
scas
jo
jae
push
iret
in
sbb
fs
push
sbb
cmp
jecxz
lcall
sub
cmp
jae
sbb
sbb
psubw
mov
xchg
sbbb
orl
and
imul
dec
cltd
out
add
mov
daa
icebp
test
xor
add
dec
mov
dec
in
andl
inc
popa
ljmp
push
dec
insl
and
rcrb
or
or
out
mov
pop
pop
push
mov
cmp
sub
and
inc
push
out
test
loope
sbb
pusha
mov
int3
inc
cmp
xor
movsb
inc
push
xor
mov
dec
mov
fstpt
leave
lock
dec
ja
std
stc
icebp
shl
lahf
movsl
mov
enter
das
shrb
or
js
in
ss
rcll
inc
inc
fnsave
imul
pop
and
sbb
fadds
pop
es
xlat
shlb
outsl
sub
ficompl
pop
mov
pop
imul
divb
sub
rclb
mov
mov
inc
mov
repz
jmp
jns
adc
mov
test
pop
mov
pop
test
pop
sbb
xchg
cli
and
iret
outsb
or
fisubl
mov
jno
adc
adc
cmp
ret
sub
jp
push
mov
adc
out
enter
andl
lods
lahf
dec
pop
jmp
push
dec
push
test
test
pop
in
pop
andl
mov
call
mov
mov
pop
adc
xchg
adc
inc
push
sub
adc
xchg
sti
shll
imul
sub
mov
and
stos
pop
jge
in
sub
or
add
lea
xchg
push
lahf
fnsave
sub
popf
repnz
add
mov
dec
push
or
dec
mov
sub
ret
xchg
add
das
push
shll
xchg
xchg
cmp
and
adc
mov
mov
jbe
cwtl
sub
inc
mov
dec
and
neg
push
sub
stc
leave
movsb
adc
push
cltd
jecxz
adc
lcall
cmp
jno
sub
out
adc
mov
es
and
xchg
pop
push
jl
xor
ds
out
sbb
cmc
iret
test
insl
push
cs
ret
rclb
jne
push
xchg
xor
loop
fst
mov
shlb
push
jb
or
stos
or
push
cmpsb
pop
mov
rcrb
hlt
lcall
xchg
cwtl
sub
ror
cmpsb
movsl
int3
in
add
fsts
cmp
push
cmp
add
or
stos
rcrb
scas
aaa
jge
hlt
xchg
in
adc
xor
outsl
movsl
mov
xchg
ss
mov
aaa
hlt
xchg
inc
push
inc
stos
movsl
jg
lea
jbe
sbb
dec
scas
sahf
mov
or
jbe
push
stos
adc
push
cmp
sbb
dec
in
aas
outsl
inc
inc
js
push
or
ret
pop
mov
add
adc
rcl
int
in
mov
fs
fisubl
cmp
mov
cmpsl
xchg
jg
pop
xchg
pusha
test
in
fisubrl
push
orl
sbb
jp
in
jmp
mov
enter
xor
fs
popa
mov
sbb
push
or
cmp
cmp
sub
sub
jecxz
mov
test
pop
aad
outsl
movsb
push
fnstenv
dec
xchg
out
push
adc
rcl
clc
mov
iret
xchg
push
loope
ljmp
jne
adc
in
das
mov
cmpsl
add
mov
into
and
xchg
jo
add
sub
sahf
negb
push
in
daa
jne
les
mov
jb
sub
cmc
and
mov
aad
pop
mov
jns
movsb
clc
es
pusha
test
and
pop
mov
into
inc
cmp
jne
cltd
sbb
jae
fcomps
es
call
mov
or
movsl
adcl
cmc
jno
lahf
xor
mov
cwtl
xor
mov
pushf
add
pushf
mov
dec
lods
mov
adc
clc
neg
or
outsb
insl
sub
jne
push
mov
cltd
xchg
shlb
repnz
arpl
jbe
sub
out
mov
adc
cli
xchg
jno
pop
and
dec
pop
pop
xchg
cs
stos
adc
or
int3
xchg
push
cwtl
leave
das
add
movsl
xor
loope
fyl2x
in
jecxz
int3
sahf
jb
in
out
pop
push
dec
jae
popf
out
xor
add
roll
mov
mov
movsb
mov
fwait
mov
arpl
sbb
xor
inc
jmp
or
hlt
sarb
inc
pop
pop
sub
mov
cmp
call
nop
inc
inc
int
fdivrl
testl
push
xchg
sbb
test
fmull
icebp
mov
out
mov
leave
sub
int3
add
ja
lock
cmpsl
mov
mov
pop
fstps
shrb
loop
cli
sub
push
aas
ret
pop
jecxz
mov
hlt
push
out
negl
xchg
adc
xchg
ja
xchg
and
jo
inc
fimuls
adc
mov
xchg
call
mov
sbb
jge
adc
lods
clc
jbe
fyl2xp1
mov
dec
jbe
enter
push
clc
push
adc
xchg
das
add
adc
test
addb
xchg
adc
mov
sti
add
les
and
jp
mov
sub
iret
sbb
mov
cmovp
xchg
xor
adc
ret
pop
popf
outsb
add
inc
movsl
xlat
add
sahf
cmp
dec
and
mov
sarb
ja
and
out
nop
pop
cltd
cld
into
jb
sti
xlat
mov
cmp
fadd
in
jae
or
jle
clc
xor
sti
cmpb
movsl
cmc
shrl
scas
pushf
jno
pminub
sarb
inc
jno
pop
mull
mov
sub
xor
pop
ret
imul
adc
fisubs
fisubl
jecxz
or
push
faddp
popf
into
mov
adc
pop
pop
test
dec
adc
addr16
push
fists
and
movsb
icebp
ss
mov
popa
ja
insl
mov
movsl
inc
jle
sub
push
popa
xlat
hlt
mov
sti
add
push
mov
or
sbb
pop
push
out
bound
lock
or
mov
xchg
repz
iret
pusha
lock
cmpsb
clc
mov
push
jo
xor
adc
mov
pushf
xor
jns
xor
mov
jae
push
fstp
mov
xor
bound
repnz
jo
mov
sbb
xchg
lds
jnp
xor
add
sbb
roll
or
push
sub
mov
jbe
roll
dec
cmp
lods
push
jmp
xor
cltd
pop
add
push
scas
push
mov
das
in
nop
test
arpl
add
mov
jl
jb
es
inc
adc
dec
call
push
mov
mov
mov
movl
push
mov
stos
sub
pop
stc
mov
xchg
sarb
inc
mov
or
add
add
add
aaa
test
test
ret
mov
sub
dec
pop
ret
aaa
sbb
fistps
sbb
pushf
add
mov
es
mov
jno
lahf
sub
mov
imul
adc
jp
cmp
pop
cmp
mov
dec
pop
out
push
push
or
lahf
mov
adc
fisttpl
aam
imul
push
mov
xchg
repz
cwtl
sub
lcall
xchg
or
std
stos
clc
or
movsb
imul
repnz
mov
out
cmp
js
into
mov
lea
imul
fiadds
jne
nop
dec
add
and
dec
imul
dec
mov
or
xchg
jo
pop
mov
sub
mov
push
movsb
inc
add
xchg
fimull
or
mov
sub
or
pop
xor
push
mov
sti
stos
jae
xor
adc
pop
leave
xchg
inc
push
lcall
iret
test
subl
dec
in
sbb
or
je
xor
xchg
pop
ds
jnp
add
jne
out
dec
mov
xor
lret
or
pusha
popa
adc
adc
int3
sub
rcl
inc
pop
imulb
iret
mov
push
subl
adc
sti
mov
adcb
call
mov
jno
insl
add
mov
int
jecxz
movsb
aaa
inc
data16
int3
push
and
mov
adc
mov
mov
xchg
jae
add
mov
in
arpl
lock
inc
popf
rcrb
lret
push
sarl
popa
cld
xchg
or
lds
xchg
cmp
adc
data16
insb
mov
mov
xchg
lods
dec
jmp
or
dec
cwtl
lahf
lods
das
push
mov
movsl
insl
fisubl
jno
dec
inc
out
arpl
das
mov
mov
dec
popl
lahf
js
mov
nop
mov
js
or
rcl
add
mov
ss
int
xor
and
mov
pushf
imull
pop
movsl
inc
cli
mov
mov
push
pop
xchg
cmp
mov
lods
je
dec
xchg
xchg
int3
pop
mov
leave
xor
pop
sbb
imul
enter
xor
push
scas
adc
cmpsl
shl
mov
mov
jle
out
cli
dec
dec
outsl
out
jle
inc
mov
lea
js
outsb
test
and
sti
jecxz
lock
lods
js
lock
add
cmp
xor
gs
clc
loop
mov
jno
xor
and
pushf
pusha
cld
add
mov
and
mulb
test
push
pop
xchg
aad
fsubs
out
pop
xor
jo
sub
loope
aad
mov
jb
push
lcall
mov
stc
mov
dec
packuswb
and
loopne
pop
xchg
stos
mov
stos
gs
out
fistpll
lods
push
lret
arpl
cmp
cli
add
xor
xor
and
sub
xchg
std
inc
jns
leave
xorl
push
sub
ret
pushf
mov
cmpsb
addr16
sub
hlt
enter
repz
notl
lret
cltd
jmp
mov
jmp
jne
xchg
and
inc
cltd
mov
call
and
gs
lds
leave
stos
jb
inc
inc
cmpsl
jmp
fisttps
jle
jle
lret
mov
xchg
cltd
call
outsb
fs
jns
insl
adc
fsubr
or
jge
mov
xor
aas
lret
mov
rcrb
xlat
mov
aaa
pop
pushf
mov
movsl
jns
dec
or
lcall
or
arpl
rcrl
sbb
fdivrl
mov
js
jae
mov
dec
or
rol
dec
jbe
xor
mov
in
and
mov
mov
push
and
lods
movsb
bound
sub
fsubs
adc
in
inc
jp
repnz
orl
pop
xlat
cmpl
cld
or
enter
movsl
hlt
aaa
lahf
movsl
fidivrl
jle
lds
pop
jo
push
sbb
pop
cmp
fbld
shl
sub
cwtl
fisubrs
lret
test
mov
xor
cmpsb
out
ficoml
leave
daa
jp
loope
sub
jb
jg
xorb
adc
lds
lods
scas
insb
out
mov
sub
sub
xchg
fcmovnu
rcl
scas
xor
test
repz
repnz
fsubrl
pop
stos
test
xchg
sub
lods
fs
xor
inc
dec
xchg
es
xchg
or
pop
xchg
shl
mov
push
and
inc
push
push
dec
inc
shrl
adc
je
push
stc
pop
xchg
cwtl
call
sub
fwait
rcr
sub
scas
ss
hlt
jns
lret
adc
mov
out
imul
iret
test
fcom
call
add
loope
pop
ja
call
ja
scas
out
out
addb
xchg
sysexit
and
cltd
repnz
rorb
xor
add
mov
sbb
lret
cmpl
cld
shlb
and
imul
cli
rclb
lock
cmp
mov
adc
pushf
add
shlb
enter
fiadds
adc
mov
and
sub
xor
test
pop
stos
sbb
mov
xchg
test
out
popa
push
add
push
mov
xchg
jp
xchg
mov
notl
cwtl
push
ja
inc
mov
icebp
adc
add
pop
cltd
or
shl
add
lret
mov
addr16
pop
push
pop
push
int3
jne
sti
loopne
push
xchg
inc
sbb
out
mov
outsl
push
push
push
les
pop
imul
adc
enter
dec
sbb
pop
mov
mov
inc
dec
clc
nop
push
adc
jo
insb
fistpll
leave
xchg
push
mov
add
push
ja
mov
push
ret
mov
jno
aam
pusha
ss
xchg
or
insb
dec
jnp
lea
mov
insl
cmp
leave
sbb
inc
pushf
xor
lock
jo
iret
cs
add
movsl
cmpb
test
cmpsb
sarl
divb
lock
popl
test
jecxz
ss
push
jbe
fs
lret
jae
outsl
adc
dec
mov
dec
popl
push
outsl
cmp
mov
dec
jo
jno
enter
in
adc
mov
or
and
add
emms
xchg
inc
test
or
sbb
inc
stos
push
dec
hlt
scas
mov
lahf
fisubrs
cmp
dec
jbe
mov
jmp
repnz
nop
and
push
ss
xor
lret
mov
popa
pop
cli
mov
scas
mov
mov
int
mov
add
int3
insb
cmp
mov
and
inc
jnp
jb
pop
push
xchg
fiaddl
lret
scas
aad
pusha
loope
dec
xchg
push
mov
loope
add
lds
mov
es
addl
movsb
cmp
divb
in
stc
jo
sub
mov
es
push
jae
adc
dec
xchg
insb
cmp
es
push
popa
cmp
cmpsl
loope
in
jp
cwtl
leave
in
iret
rdtsc
mov
xchg
jl
out
add
jge
dec
jae
scas
inc
fsubl
ret
std
and
inc
lods
mov
mov
adc
adc
mov
icebp
xor
xor
fcmovbe
adc
jl
popf
lock
sub
mov
jbe
add
das
repz
mov
rcll
mov
icebp
arpl
sti
rcl
out
cli
cwtl
push
pop
cwtl
loopne
xor
fwait
stos
rorb
aad
aaa
xchg
pop
sbb
push
lahf
sbb
data16
push
or
imull
xor
add
movsb
mov
ljmp
ds
leave
add
ret
or
jle
scas
xor
push
repnz
cmp
lods
jecxz
lock
add
testb
mov
sbb
sar
xchg
pop
lcall
ja
and
sub
pop
pushf
mov
cmc
pop
dec
inc
insb
loope
cmpsb
lods
xchg
jl
pop
push
mov
pop
bound
jae
and
push
xor
mov
or
int
insb
daa
mov
xor
repnz
arpl
scas
insb
pop
push
mov
xchg
cmpb
mov
arpl
in
pop
rclb
jp
or
mov
cmp
std
shlb
idivb
pop
fsts
and
scas
stc
outsl
xchg
aam
and
pop
sarb
jne
into
js
or
sbb
lahf
neg
cli
or
data16
mov
mov
jae
adc
mov
mov
xchg
or
mov
sbb
mov
sbb
andl
enter
lods
ret
fbld
ret
mov
mov
cmp
mov
aas
outsl
stos
dec
dec
movsb
push
xor
sbb
je
mov
fcoms
add
dec
adc
scas
xchg
sub
adc
sbb
inc
sbb
push
add
cmpsb
mov
stos
and
mov
jne
push
cmpsb
es
hlt
mov
les
repnz
jbe
lret
fdivrs
clc
idivb
adc
pop
test
sub
sub
and
sub
dec
mov
or
jae
fs
or
inc
pop
les
neg
xchg
xchg
xchg
inc
push
test
or
jle
call
ret
or
cli
imul
sub
xchg
imul
fdivrl
lret
jmp
push
cmp
or
lods
data16
xor
mov
mov
lea
mul
xchg
test
in
sarl
pop
sbb
push
cmc
and
inc
inc
es
or
in
lds
js
dec
and
jbe
mov
imul
leave
sub
jecxz
pop
loope
or
pop
sbb
sbb
call
dec
in
adc
insl
stc
es
mov
fimuls
mov
add
call
jno
jp
jg
xlat
fcompl
xchg
mov
stc
mov
push
jmp
fwait
test
daa
mov
inc
and
add
rcl
lods
sbb
push
jo
iret
push
out
or
push
fcoml
xchg
or
adc
push
xchg
repnz
dec
jns
xorl
xlat
push
test
popl
dec
mov
jle
movb
subb
ljmp
aad
and
mov
movsb
push
sub
aas
in
repnz
and
out
xor
aaa
sahf
xor
scas
dec
fsubl
and
adc
mov
jle
mov
and
mov
push
mov
in
sti
cmp
rorb
inc
fbld
mov
adc
movsl
mov
mov
shl
rorl
mov
xor
jne
adc
dec
dec
out
push
or
mov
inc
jl
jno
stc
xchg
pop
ss
pop
pop
inc
jge
mov
aaa
xchg
pop
ja
stos
xor
jne
out
jecxz
aaa
mov
mov
adc
cmpsl
mov
scas
aad
ficoms
movsl
dec
lea
push
in
push
aaa
cmp
push
fmuls
lret
call
jle
por
xchg
movl
sub
push
repz
push
and
nop
mov
push
add
push
and
mov
stos
pop
movsl
adc
icebp
ljmp
arpl
jno
es
pop
sub
je
repnz
push
xchg
scas
into
icebp
dec
lods
mov
leave
mov
push
nop
into
mov
push
push
roll
sahf
das
jbe
xchg
scas
inc
fnstenv
push
std
add
sahf
mov
insb
dec
insl
xchg
lret
pop
fisubs
ret
lock
test
jne
pop
cmp
cmp
popf
lds
ror
add
sti
test
imul
pop
fld1
sahf
mov
stos
jno
sbb
dec
add
fdivs
or
adc
fdivl
pushf
cltd
fsub
adc
inc
mov
or
test
jno
fisttpl
or
pop
les
lea
xlat
loope
pop
int3
nop
ljmp
mov
mov
cwtl
mov
or
adc
test
rcrb
into
mov
cmc
inc
mov
lods
or
pusha
xchg
clc
jb
outsl
cmp
and
add
jo
or
dec
xor
push
cmp
scas
mov
lahf
dec
ficoms
pushf
test
jb
or
inc
shrb
cmpsb
rolb
sbb
sbb
test
inc
dec
in
and
or
dec
xchg
aam
mov
xchg
fldenv
jno
and
cmp
and
sbb
pop
inc
or
mov
pop
cmc
push
jg
mov
cmp
xor
pushf
xchg
imul
mov
jbe
inc
stos
inc
getsec
sahf
ds
pop
sbb
add
push
xor
mov
push
xchg
jo
inc
or
mov
dec
mov
into
inc
jle
push
cmpb
lret
pushf
in
pop
sbb
sub
cli
insl
fsubrs
outsb
roll
xor
stos
inc
in
push
push
inc
mov
mulb
xlat
sbb
mov
push
dec
gs
cltd
sbb
inc
fs
ret
fsub
ret
mov
data16
out
lods
inc
ffreep
lods
mov
adc
jmp
fs
idivb
movsb
add
add
cmp
data16
sbb
adc
ret
sub
stos
jns
adc
outsb
inc
cmp
sarl
mov
adc
movsb
xor
shlb
test
xchg
jge
js
dec
aad
pusha
stos
mov
pusha
pop
and
dec
shrl
aam
int3
popa
and
jle
and
xchg
mov
adc
icebp
and
pop
mov
test
subb
pcmpeqw
sub
lret
adc
notb
dec
lods
cmpsb
xchg
andl
mov
jno
aam
inc
cwtl
adc
mov
stos
shll
jne
adc
mov
stc
xchg
mov
jns
ja
and
loopne
lahf
xor
push
xchg
adcl
loop
fsubrs
and
sub
scas
rcl
xchg
rcl
stc
inc
and
fdivrs
xchg
jg
push
adc
arpl
add
cmpsl
jge
je
cmp
ja
jae
mov
push
jo
pop
pusha
inc
mov
dec
jg
pop
xlat
cmpsb
inc
mov
sbb
or
cmpsl
in
lret
leave
test
gs
adc
sti
loopne
jecxz
stos
addr16
pop
call
es
imul
adc
lods
fs
lahf
mov
xchg
cmp
sbb
je
lds
les
mov
mov
or
fimuls
out
sub
mov
sti
cvtdq2ps
movsb
adc
test
xor
and
mov
pop
outsl
out
or
xchg
inc
repnz
mov
mov
sub
or
or
insl
testb
mov
addl
add
and
mov
and
jp
out
pop
xchg
jae
xor
psraw
ret
imul
sbb
sahf
sbb
or
in
mov
cld
xor
or
mov
lahf
jg
cli
sub
xchg
inc
inc
lcall
sarb
xchg
repz
insl
into
rorl
jo
jns
shll
fdivrs
ret
cs
aaa
ljmp
jg
dec
or
inc
faddl
lods
stc
daa
pop
addr16
cmp
pop
je
nop
mov
pop
in
or
jp
inc
repz
lret
or
in
sti
cld
filds
sti
mov
les
or
ss
mov
pop
and
cmp
clc
scas
push
mov
sbb
xchg
fwait
lret
mov
scas
ret
jle
mov
aaa
repnz
lret
sbb
mov
lea
mov
dec
data16
sub
in
fisubrs
insl
hlt
aad
punpckhbw
push
jl
addr16
aam
testl
jg
lea
xor
popf
lahf
stos
cltd
sub
xchg
test
std
sub
lcall
sahf
test
hlt
into
lods
cli
repnz
fcom
cmp
mov
fistl
sbb
and
xchg
stos
adc
dec
lods
insb
call
imul
insb
je
fadds
dec
sub
mov
sbb
mov
gs
aam
or
pop
jg
dec
pop
and
pop
insl
mov
fwait
push
cmc
lret
mov
in
sub
push
negb
movsb
jb
in
jle
push
out
je
imull
movsb
mov
add
add
call
mov
mov
push
cmp
xlat
sub
cli
inc
sub
lahf
mov
popa
mov
std
fwait
add
out
pop
and
aaa
cwtl
jb
mov
ret
aas
movsb
cmp
and
or
ljmp
clc
jl
mov
lods
sbb
and
das
enter
test
icebp
js
xor
inc
mul
cmp
test
inc
sub
sbb
es
jge
nop
inc
pop
add
mov
add
inc
and
push
xchg
push
dec
dec
cld
insl
mov
mov
out
xchg
xchg
jmp
icebp
and
xchg
ja
imul
lds
cwtl
js
pushf
dec
add
fmull
movsl
xor
test
aad
lret
scas
in
xor
xchg
inc
xchg
and
push
jno
out
or
xchg
mov
mov
adc
iret
and
mov
mov
movsl
andl
xor
lret
call
pop
insb
dec
push
cltd
lods
mov
dec
negb
or
pushf
nop
push
pop
cmp
insb
cmpsl
cmp
and
and
push
mov
xor
mov
mov
jo
lock
pop
scas
imul
sbb
mov
test
push
lahf
sbb
sbb
lcall
and
mov
test
mov
inc
jo
movsb
fwait
dec
add
pop
hlt
xor
pop
xchg
gs
int3
xchg
ljmp
test
lods
stos
push
ja
xor
or
jge
fsubp
mov
mov
bound
addl
fisubl
imul
mov
dec
sub
push
inc
xor
stos
int3
outsb
cmp
push
jg,pn
add
ret
js
pop
sbb
sub
sahf
data16
das
pusha
jns
pusha
sti
je
addr16
xor
lods
pop
jo
pop
je
arpl
je
jns
jno
lcall
xchg
mov
and
push
add
mov
jmp
xchg
push
shlb
scas
loope
pop
pop
jae
pop
cmp
cmp
mov
jp
scas
iret
xchg
sub
push
cmpb
jne
loop
scas
sub
rcrb
xchg
jle
mov
lahf
push
cmp
fistl
daa
add
lea
push
test
idivl
jge
inc
sahf
cmpsl
sbb
lret
mov
mov
xchg
ja
and
js
shll
leave
ds
dec
sbb
lahf
repnz
fsubl
js
add
xchg
xor
xchg
lods
mov
mov
jmp
and
cmp
int3
or
cwtl
js
sahf
ret
push
inc
lahf
pushw
movsb
bsf
loope
addr16
sub
mov
sti
cwtl
jle
mov
add
sub
and
dec
stos
inc
push
sub
add
sub
mov
cltd
aad
clc
into
mov
ja
daa
subl
ds
subb
pop
inc
push
imul
adcl
jb
outsb
fwait
mov
xchg
lock
jae
inc
jbe
clc
aad
int3
cmp
insl
xor
push
inc
arpl
gs
iret
mov
add
xor
rol
test
or
jp
insb
pushf
lods
add
push
insb
jne
mov
leave
add
cmp
sub
xchg
es
pop
repnz
mov
pop
jp
in
pop
pop
outsb
stos
mov
mov
mov
outsl
stc
xchg
jne
mov
dec
rcll
jo
pop
int
imul
sub
daa
int
lods
jb
jmp
mov
xor
mov
cmp
shll
add
cmp
xchg
in
mov
cmp
xchg
xchg
int
inc
cwtl
jmp
xor
push
ret
repz
in
inc
add
xchg
cmpsl
arpl
push
iret
sbb
push
negl
inc
sti
pushf
int
in
sbb
jno
mov
jno
pop
mov
in
inc
pop
cmp
leave
mov
movsb
aaa
leave
in
cmp
dec
add
dec
lods
cmp
outsb
out
xchg
add
mov
pop
or
sub
imul
mov
fstps
add
push
xchg
add
movsb
pop
adc
cmp
inc
cmp
and
or
das
pop
popf
ret
push
lret
icebp
jnp
inc
fldl
or
cmp
or
test
aad
pop
cmp
fldln2
adc
nop
cmp
dec
enter
daa
std
scas
fld
cmp
addr16
popf
out
loope
push
lret
fiadds
outsl
xchg
xor
mov
dec
xchg
rcr
xor
cmc
push
add
cmp
into
cmp
adc
pusha
xchg
add
fstps
in
jb
iret
push
lahf
icebp
lahf
into
stc
out
test
fldt
dec
pop
xor
jb
add
bound
stos
inc
or
aas
into
push
pop
pop
sar
push
lret
popa
xchg
mov
loope
push
loope
or
call
dec
std
rcrl
jae
mov
fidivrl
js
mov
out
pop
push
cltd
push
sub
cmp
cltd
inc
fnstcw
out
shlb
push
pushf
xchg
lds
jl
xor
repnz
shlb
loope
insb
test
lods
out
into
mov
loopne
decb
aad
fcomip
push
push
or
imul
aas
mov
xlat
insl
popa
icebp
fimull
ds
aam
mov
inc
jg
faddl
jno
aaa
adc
pop
mov
movsl
cs
movsb
dec
mov
xor
fistl
aas
cltd
xchg
lahf
popf
xchg
sub
sub
popa
roll
lds
aas
or
adc
jno
out
add
push
dec
test
lock
or
pop
dec
stc
pop
jge
sbb
push
fstl
add
test
xor
rorl
pop
mov
call
mulb
pop
mov
lods
pushf
stos
incb
push
lods
xlat
xchg
mov
in
bound
cmpl
xor
pop
lea
shll
daa
and
mov
adc
fisttpll
inc
add
negb
or
mov
push
and
cmp
scas
and
and
hlt
inc
pop
loop
loope
out
lret
add
mov
ss
cmp
inc
or
shr
cltd
push
ss
lods
in
adc
push
es
mov
fidivl
xor
out
mov
adc
div
sbb
and
int
out
mov
mull
mov
dec
rcrl
stos
jl
pop
mov
push
xchg
xor
stos
lahf
scas
mov
add
fldcw
or
xor
adc
fs
outsl
pusha
and
sti
clc
int3
adc
pop
lea
pop
add
push
xchg
cmp
dec
arpl
sbb
add
inc
jne
xorb
lret
mov
xchg
inc
scas
shll
ljmp
ror
iret
loopne
xor
cmp
inc
jge
pop
jns
call
orl
loopne
iret
sub
or
inc
cmpl
divl
mov
fwait
pop
sarb
cmpsb
cli
fnstenv
jg
out
ficoms
loope
sti
imul
push
out
mov
pop
mov
aas
push
jle
mov
add
out
ljmp
cld
test
rorl
fstps
cs
dec
fisttps
test
fisubl
in
lret
fucom
divl
push
adcl
sub
sub
or
call
imul
mov
fldcw
test
out
mov
mov
rcrl
mov
jb
ljmp
dec
in
mov
adc
sar
mov
addr16
stos
ficoms
push
popf
outsl
push
addr16
mov
test
in
imul
jnp
in
jle
xor
push
adc
dec
repz
mov
ds
fdivrs
mov
and
mov
repnz
loopne
pop
test
jo
and
test
fadds
lods
pop
push
loopne
pop
jmp
das
fwait
dec
popf
mov
nop
push
lea
aas
dec
test
pop
mov
aam
mov
sub
test
fld
dec
push
cmc
jl
stos
stc
sub
imul
fldcw
jne
ds
jb
mov
mov
push
bound
je
dec
mull
mov
xchg
ljmp
push
dec
dec
int3
jne
call
adc
add
inc
pop
sub
xlat
shl
cmp
lcall
pop
stc
adc
adc
jmp
enter
in
movsl
sahf
data16
jnp
fmulp
in
mov
jnp
push
cli
dec
ljmp
sub
rcrl
les
pusha
test
addr16
movsb
mov
test
aaa
enter
or
in
imul
fistpl
adc
sbb
out
adcl
data16
sbb
jns
or
out
dec
push
inc
cmpsb
cmp
popa
and
inc
mov
sub
andb
lock
xchg
das
in
shrb
add
loopne
aaa
inc
mov
push
jle
std
xor
pop
push
mov
mov
pushf
cmp
push
fnstenv
cmp
and
add
dec
jo
adc
cs
jge
mov
cli
dec
in
push
cltd
sub
adc
clc
sub
in
xor
sub
sbb
frstor
mov
mov
cmp
je
xor
add
sbb
dec
gs
flds
shlb
push
fimull
adcl
pusha
pop
pop
ljmp
mov
in
data16
sub
pop
aad
xchg
cmp
push
pop
mov
jae
fcoml
stos
xchg
hlt
push
clc
xor
mov
hlt
std
stos
sbb
nop
icebp
and
sbb
mov
mov
int
inc
jp
sub
inc
nop
cmp
fcmovu
outsb
dec
mov
push
mov
sub
inc
mov
xorl
fwait
dec
pusha
jmp
scas
insb
ret
fucomip
sub
jno
in
aaa
sbb
pop
jno
std
add
sub
jno
inc
loop
ficoms
mov
and
and
loopne
and
dec
sbb
rcl
push
fcomp
push
inc
inc
enter
add
movsb
sbb
lcall
or
xor
xor
stos
sbb
ljmp
sahf
bound
add
sbb
inc
jmp
jp
or
addr16
std
lods
pop
or
and
sahf
aad
decl
push
jbe
xchg
jne
xchg
lds
fwait
jbe
mov
and
das
inc
mov
movsb
sbb
bound
pop
pop
pop
testb
rorb
outsl
or
fcomps
mov
jg
and
outsl
mov
inc
push
test
insl
insb
sub
fwait
inc
and
or
jge
pop
push
call
lea
mov
mov
sub
mov
push
fdiv
repz
xor
je
leave
call
sub
xlat
xchg
in
jg
pop
sbb
dec
call
push
mov
data16
adc
xchg
jecxz
lock
xor
mov
shl
pusha
cwtl
imul
dec
xchg
fnsave
ret
xchg
push
bound
push
mov
jle
aam
cltd
in
jp
dec
push
pop
push
mov
mov
jne
adc
mov
in
scas
cltd
lret
sub
and
je
rcll
inc
ret
pushf
leave
xchg
add
pop
add
mov
jo
mov
mov
lcall
stos
xor
inc
cmc
inc
cmp
imul
in
aad
jl
xchg
orb
push
cmp
mov
arpl
daa
cmpsb
mov
out
adc
cld
push
xchg
in
push
sahf
in
jne
mov
sbb
or
rcll
xchg
mov
addr16
mov
sbb
sbb
mov
rclb
push
pmaxub
cmpsl
dec
adc
aam
or
or
push
mov
jge
sbb
loop
andb
lock
adc
fwait
sub
add
aas
xchg
and
adc
pop
xor
cmp
mov
aas
mov
sarb
cmp
mov
or
pop
ds
jae
rcrl
jo
jg
leave
cmovnp
ret
in
loop
nop
cli
repnz
aam
push
fwait
cmc
lods
mov
into
pop
push
std
sahf
add
gs
xchg
dec
movsb
cltd
lods
cmp
repz
or
cmp
xchg
adc
mov
add
adc
js
repz
das
push
dec
jbe
shrl
jle
inc
mov
jne
repz
mov
mov
lret
mov
push
sbb
and
push
xor
lods
jo
adc
push
adc
xlat
das
mov
scas
sub
pop
jge
push
add
or
add
and
adc
adc
push
inc
mov
jo
bound
rcrb
xchg
xor
lret
cmp
nop
aas
test
push
adc
stos
test
clc
dec
lods
fdivs
sub
or
adc
cmc
xor
sub
lods
lods
jp
xor
movb
xlat
or
push
shrl
in
mov
or
loop
lock
adc
xchg
lret
cmpsl
out
in
dec
dec
pop
add
cmpb
lods
fiadds
pop
sub
mov
fmull
test
dec
popa
bound
xchg
rolb
loopne
scas
gs
fadds
xchg
cltd
cmc
adc
inc
aas
out
mov
cmp
rolb
cld
mov
stos
fcompl
fstp
mov
je
lea
cltd
ljmp
jmp
out
or
test
adc
push
dec
add
fwait
imulb
fbld
sbb
scas
call
shlb
or
push
cld
adc
ret
and
shll
xchg
xor
test
arpl
jl
lods
jns
jge
sub
hlt
xchg
clc
call
jmp
dec
in
pop
xor
push
fistpll
push
xor
es
es
push
sbb
lock
aam
lret
or
dec
pop
dec
pusha
movlps
outsb
fidivrs
ss
stc
icebp
mov
out
rclb
xlat
mov
shl
mov
icebp
es
pop
jle
rcl
adc
sbb
dec
dec
xor
test
adc
xor
push
add
fwait
les
mov
sub
rcrb
sarl
jmp
mov
sub
cmp
js
pop
icebp
xchg
cwtl
jge
mov
adc
jg
add
insl
pop
mov
orps
pop
dec
xchg
xor
mov
fst
inc
mov
dec
fldcw
xchg
popa
mov
xchg
adc
pop
sbb
or
xchg
dec
mov
in
sti
mov
add
jb
sbb
ljmp
pop
sub
dec
es
dec
cs
test
mov
sub
insb
in
or
shr
dec
and
mov
mov
dec
xchg
div
test
inc
insl
aad
adc
pusha
push
jae
dec
push
lahf
mov
scas
jecxz
jmp
mov
push
mov
orl
jb
cmpsb
lret
xchg
cmp
jb
fsubl
adc
mov
mov
movsl
test
scas
roll
pop
cmp
sbb
inc
mov
sub
xchg
lret
or
sbb
jle
scas
aam
or
pusha
jl
fdivs
jbe
cmp
adc
or
ret
add
mov
mov
out
mov
movsb
aad
cld
fmulp
aam
mov
or
sarl
sub
pushf
inc
push
pop
sahf
fimull
pop
das
push
lret
in
lcall
xor
in
mov
inc
cmpsl
cs
mov
mov
pop
sarl
inc
dec
push
push
pop
push
in
xchg
push
mov
inc
mov
pop
out
dec
inc
ss
popf
movsb
sysenter
arpl
out
jnp
adc
test
add
xor
out
std
stos
daa
jmp
adc
in
jno
lret
lcall
xchg
jo
das
gs
jno
push
es
adc
sub
shr
negb
jns
popf
xchg
scas
rolb
fnsave
adc
leave
repnz
scas
cld
sbb
sub
adc
xchg
push
stos
sbbl
out
shlb
mov
mov
or
pop
popa
inc
lea
test
test
fldcw
divb
out
push
mov
mulb
ret
jecxz
ret
cmp
fldt
aas
clc
scas
jae
pop
mov
in
repz
pusha
push
test
xor
cmp
and
sub
jbe
xchg
adc
jnp
xchg
sti
pop
xchg
cltd
adc
pop
sub
xor
jmp
mov
dec
sarl
incb
lret
arpl
mov
xchg
xchg
test
mov
jmp
adcb
mov
iret
in
push
add
cmp
lods
mov
xor
add
push
bound
stc
out
jbe
test
jbe
js
mov
mov
jne
jp
lret
mov
out
pop
sbb
lods
adc
cmpsb
mov
fstps
lods
into
repnz
mov
subl
pop
mov
add
pushf
or
hlt
es
scas
pushf
mov
lea
pop
lea
das
cli
push
imul
aaa
addr16
clc
mov
sti
mov
pop
idivl
mov
and
xor
mov
cmp
cmp
xor
mov
repz
sarb
stos
cmp
icebp
aad
loopne
lock
and
hlt
cmpsb
shrl
cwtl
mov
cli
cli
xor
outsb
mov
cltd
push
jecxz
repz
add
push
xchg
sub
in
iret
in
xor
push
out
sub
popf
dec
mov
sub
stos
push
ss
shr
xor
aas
mov
jo
cltd
repnz
dec
adc
femms
in
test
mov
add
test
stc
rorb
dec
adc
mov
loopne
leave
in
std
or
pop
rcll
cmp
fldenv
fldenv
add
adc
sbb
xchg
loop
pusha
mov
in
aad
mov
add
cmp
ds
cs
outsb
call
shll
mov
mov
sar
dec
leave
les
test
mov
jmp
icebp
loop
pop
add
cmc
sti
cld
ljmp
mulb
mov
popf
into
dec
daa
pop
addl
test
pop
inc
add
out
mov
mov
rclb
jae
cmp
dec
jp
rclb
xchg
cli
cld
xchg
mov
mov
loopne
dec
inc
mov
push
scas
pop
and
and
inc
das
dec
and
movsl
push
xchg
mov
jnp
jp
pop
xchg
jo
imul
outsl
dec
mov
sarl
push
outsb
addr16
out
and
aam
push
jg
inc
jno
shrb
ljmp
and
stos
fwait
scas
pop
gs
cmp
adc
or
mov
dec
sub
and
lcall
pop
cltd
pop
xchg
fucom
pop
clc
inc
fildll
push
cld
mov
les
push
cli
cmc
inc
mov
mov
jle
xlat
cmp
push
inc
push
mov
imul
decb
sub
fimull
imul
push
int3
pop
mov
in
mov
pop
test
int
ss
mov
scas
rcl
push
repnz
imul
addr16
xor
push
mov
stos
loop
daa
mov
lcall
stc
loop
pop
in
ljmp
sub
aad
push
shlb
inc
aam
adc
jbe
enter
lock
shlb
adc
mov
jecxz
mov
call
jno
xor
addr16
xlat
pop
outsw
fdivrs
cmp
test
dec
jne
xchg
sub
lods
and
xchg
ljmp
and
in
repz
jno
and
xchg
or
cmp
gs
int
insb
pop
ljmp
jnp
push
mov
pop
or
xor
or
dec
pushw
in
dec
mov
pop
nop
xchg
js
fs
bound
cmpsl
out
push
pop
into
movsb
pop
je
push
mov
sbb
sarb
loopne,pt
test
cmc
dec
out
enter
cs
push
jbe
cmp
adc
xor
movsl
cltd
pop
scas
scas
pusha
ret
inc
int
push
lahf
dec
std
push
cmp
div
xchg
add
mov
push
xor
push
sbb
inc
lret
dec
adc
jge
in
push
jbe
adc
out
adc
out
inc
mov
divb
or
leave
loope
int3
mov
pop
test
sbb
les
es
mov
je
xor
adc
xchg
sub
push
xchg
adc
cli
sbb
push
mov
mov
shrb
repnz
inc
fisttpll
jl
jg
jl
movsb
jl
dec
aam
xor
outsl
jae
mov
cmp
addl
out
shlb
lret
sub
shll
test
test
dec
shrl
shll
aad
xchg
jns
sbb
adc
mov
ret
jle
shll
add
dec
xchg
pushl
pop
in
mov
dec
push
dec
orb
cmc
clc
jle
in
mov
jbe
subl
ss
xchg
pop
leave
fwait
adc
pop
stos
call
pop
ljmp
xchg
mov
sub
js
mov
pop
addr16
cwtl
xor
add
pop
sub
stc
push
popf
push
movsb
sub
inc
out
pop
out
cmc
lods
pop
sbb
mov
xor
xchg
xchg
and
outsl
pop
xor
mov
push
and
dec
lods
in
inc
and
xlat
test
adc
adc
test
fsubs
sbb
cs
mov
inc
sahf
ljmp
stos
call
sub
repnz
imul
out
lret
sti
in
jno
push
cmc
mov
add
popf
fmul
out
cmp
add
xchg
push
cli
insl
shrl
enter
mov
test
ljmp
sbbb
in
pop
sbb
mov
clc
into
sub
xchg
es
ljmp
addr16
and
xor
and
pop
dec
lea
sbb
xchg
xchg
outsl
fbld
aas
sbb
add
aas
pop
inc
jo
mov
jb
push
jb
sahf
es
ret
cmp
lea
lcall
maxps
xor
adc
pop
lea
ja
cmp
push
popf
lock
jne
fsubp
adc
test
cld
adc
sti
add
fisttps
mov
jg
popa
shrl
jmp
fldt
sbb
sbb
cmpl
inc
faddp
in
fimuls
push
jp
push
orb
dec
push
push
lods
repnz
shlb
mov
lret
fists
stos
push
xor
adc
and
in
add
cmp
popf
in
rcrl
sub
sub
sub
mov
add
loop
mov
imul
enter
cltd
mov
jp
loope
fstps
jne
popa
insb
inc
nop
mull
or
inc
jge
sarb
sbb
adc
inc
flds
movsb
jp
mov
faddl
jbe
not
inc
mov
jb
push
clc
fs
inc
xor
mov
movsl
data16
fs
push
adc
pusha
jecxz
sub
repz
sub
addr16
cmp
enter
push
dec
decb
sbb
sbb
xchg
aaa
xor
mov
xor
nop
sbb
mov
lahf
and
es
pop
mov
ret
xor
leave
rorb
sub
mov
stos
mov
fisubs
jmp
pop
inc
call
mov
into
test
jg
out
rclb
addr16
repnz
and
jmp
xor
test
adc
test
mov
stos
jp
push
cmp
loope
mov
testl
add
mov
inc
lret
xor
test
adc
add
xor
orl
mov
cmp
cmpb
push
cmp
jmp
lret
push
roll
ss
ret
mov
sarb
dec
mov
mov
aaa
add
dec
ss
pop
adc
inc
jns
or
push
sub
cmp
sub
jb
mov
mov
xor
pop
xor
jns
psadbw
fnstcw
iret
int
mov
mov
mov
out
test
movsl
and
data16
je
mov
mov
push
fcomi
mov
xor
loopne
and
idiv
push
decl
cmp
aam
adc
int
push
jae
xor
das
jecxz
cmp
repnz
mov
pusha
and
jg
rorl
jge
sbb
sbb
lahf
adc
add
xchg
pop
mov
xor
movsl
mov
mov
sbb
sbb
fxtract
dec
pop
pop
xchg
mov
jne
adc
sub
xorb
cmp
adc
nop
sahf
jnp
outsb
lea
jbe
xor
aas
push
outsb
cs
jbe
push
mov
gs
pop
js
hlt
inc
call
nop
scas
je
xor
push
dec
std
cmpsb
add
xlat
dec
sbb
push
rol
insb
pop
lret
mov
daa
test
psubusw
idivl
sbb
adc
push
divl
nop
jb
sbb
out
mov
rep
dec
push
adc
dec
add
dec
pop
in
xchg
cmp
sbb
lcall
lock
sbb
pop
loop
adc
ret
add
mov
dec
jecxz
nop
xchg
insb
mov
lea
or
push
or
jns
in
adc
and
loope
jl
inc
roll
mov
outsl
xchg
cs
push
push
push
dec
ss
pop
inc
mov
mov
inc
jb
push
dec
add
pop
insl
fists
adc
movsb
rorb
ds
mov
in
adc
sub
mov
repz
push
hlt
stos
mov
jge
aad
push
cmc
or
ret
or
mov
aad
rorl
push
push
pusha
xchg
jmp
or
mov
sahf
and
push
dec
test
pushf
adc
loop
inc
pop
insb
jecxz
cmpsb
sbb
out
xchg
daa
sbb
ljmp
mov
mov
inc
push
hlt
mov
push
add
add
sub
cmp
std
add
jnp
aas
and
or
bound
push
add
cs
push
mov
push
push
add
outsb
push
popf
loopne
pop
out
or
out
stos
mov
add
adc
jae
pop
xor
outsl
je
xorl
dec
addr16
pop
lahf
cmpsl
pop
xor
lahf
mov
sahf
mov
lods
popl
pusha
jp
test
mov
jmp
fildll
imul
mov
adc
fcmovu
fwait
int
es
adc
movl
and
or
pop
pop
test
push
sbb
fistpl
call
or
cwtl
js
push
lods
dec
daa
pop
ficompl
jns
or
xor
movsl
mov
dec
mov
mov
outsl
in
in
jmp
ret
mov
jo
sub
pop
std
test
mov
lods
cmpsl
pushw
inc
xchg
loope
out
xchg
jge
rcll
int
pop
cmp
enter
add
jne
imul
mov
push
cwtl
imul
jns
push
xchg
push
add
cmpsl
aam
pop
shl
sub
pop
aad
sub
mov
jo
mov
in
pop
fldcw
push
or
pop
psraw
push
add
imul
pushf
inc
or
sbb
mov
ret
iret
test
jge
fcompl
arpl
enter
mov
push
mov
ret
mov
sar
fildll
mov
insl
fnsave
in
mov
rcrb
mov
mov
outsl
shll
bound
jno
or
outsl
xlat
and
lods
in
mov
xlat
out
cmpsl
jp
push
or
push
jp
test
mov
out
movsl
cmp
lods
adc
pop
mov
mov
adcb
jmp
jnp
std
popa
insl
stos
xchg
icebp
sub
fldcw
clc
mov
es
sbb
rcr
ficoml
adc
add
mov
sar
addr16
dec
pop
pop
mov
hlt
or
push
in
lods
nop
mov
fcoml
mov
cmp
addr16
xor
mov
xlat
lods
fcompl
or
in
je
jno
into
adc
jecxz
xor
jae
mov
stos
rol
lds
mov
jecxz
fsubrl
pop
fildll
xchg
dec
push
daa
mov
cmpsb
sub
idivb
push
les
sbb
xchg
jnp
in
call
mov
jne
push
stos
orl
mov
in
ss
pop
cmp
sarl
pop
cmp
pop
test
mov
dec
stos
imul
out
xchg
push
lret
insb
mov
mov
imul
mov
es
cmp
fstl
adc
or
pop
xchg
cmp
and
adc
mov
adc
adc
mov
incb
out
loope
fisubrl
fsub
fidivrs
in
jo
pusha
in
push
mov
sahf
xchg
jns
imul
jle
sbb
pushf
xor
int
inc
xchg
cmp
mov
fmull
sub
jp
div
insl
add
push
cwtl
dec
mov
jmp
adc
test
leave
xchg
xchg
adc
cmpsb
xor
insb
imul
mull
ret
adc
sbb
xlat
pusha
mov
and
pop
test
ret
aam
in
repz
push
mov
inc
add
aam
mov
int3
sbb
into
lcall
int
mov
pop
and
pop
fldl
mov
push
pop
jno
inc
call
mov
push
cmp
push
add
jbe
mov
idivb
pop
imul
mov
scas
mov
movsb
out
xchg
fs
shlb
cli
lcall
dec
push
sub
sti
popa
lcall
rcrl
out
int3
xor
bound
push
jb
xchg
pop
popa
int
jo
pop
in
jo
iret
lock
push
dec
lock
mov
iret
js,pn
rcrl
or
inc
loopne
adc
mov
pop
filds
dec
in
mov
loop
lea
imul
mov
jle
and
frstor
hlt
pop
add
rcll
call
test
lea
xchg
mull
sub
es
je
xlat
mov
repz
cmpsl
pushf
pop
pop
mov
mov
jp
or
mov
imul
ss
xor
pop
xor
jne,pt
cmc
cltd
push
inc
push
popf
cmp
add
xchg
pop
adc
arpl
pop
pop
mov
scas
in
jb
mov
lahf
out
sti
ret
ret
imul
shll
fsts
sti
sbb
mov
stc
sub
cmp
jecxz
xchg
xor
arpl
and
adc
insb
mov
loopne
int3
or
in
lds
xor
rcr
xor
imul
pop
push
mov
fdivrs
nop
mov
test
lods
xchg
stc
test
cmpsb
into
test
rorl
mov
mov
sbb
adc
adc
scas
pusha
sbb
xchg
pop
sbb
cs
push
xchg
dec
pop
pushf
cmp
pusha
js
pop
pop
push
mov
push
cmp
roll
push
rorl
push
dec
mov
ljmp
inc
in
gs
sub
sbb
adc
rolb
dec
mov
in
xor
sahf
and
nop
scas
mov
out
scas
adc
mov
dec
mov
movsl
ljmp
sbb
jnp
out
in
jae
mov
in
or
add
loop
in
push
push
dec
push
adc
int
je
lcall
adc
inc
jecxz
movsb
xchg
mov
out
mov
imul
add
lock
mov
xchg
aas
jle
sub
dec
cmp
xchg
daa
popa
arpl
inc
loopne
arpl
aam
rolb
es
lret
sub
outsl
inc
call
mov
iret
xchg
in
cwtl
push
xlat
pop
int3
fcmovb
push
decb
pushf
dec
sbb
ret
and
push
pop
and
xor
shlb
or
cmp
scas
xchg
adc
test
outsb
adc
subl
pusha
add
inc
into
lods
jmp
popf
push
fnstsw
lods
stc
insb
dec
int
mov
out
mov
xchg
dec
mov
jno
mov
stos
in
pusha
pop
add
dec
popa
mov
ss
push
pop
cmpb
jp
fisubs
sbb
inc
sbb
or
sbb
inc
movsb
movsl
dec
adc
sbb
mov
stc
jno
ret
jg
aad
pushf
sub
fmul
push
or
inc
or
jns
and
mov
ja
fnstenv
insl
scas
stos
mov
sbb
lahf
insb
push
sub
sbb
pop
sub
pop
cmp
xchg
mov
xchg
push
inc
cmc
loopne
jmp
cmpsb
pop
rcl
lcall
adc
push
clc
xor
out
orl
insl
push
cmpsb
push
imul
add
push
lea
out
jecxz
js
popa
dec
xor
and
and
cmc
xor
push
mov
jp
scas
outsl
nop
inc
andl
mov
stc
out
call
jne
std
push
sti
push
in
clc
andb
cmp
pop
sub
addr16
rcll
test
jb
lahf
push
mov
rclb
mov
mov
dec
fcmovbe
mov
into
mov
fs
add
outsl
mov
sub
lods
lock
lock
or
pop
pop
push
adc
xor
test
jl
test
fwait
stos
inc
mov
iret
out
pop
add
rol
sbb
sbb
adc
xchg
or
dec
jecxz
ja
sahf
push
or
add
mov
mov
out
mov
out
scas
repnz
mov
adc
push
out
xchg
push
adc
inc
push
cs
ret
cmc
add
and
das
adc
xor
je
fsubrs
ret
sub
movsl
cmp
push
bound
daa
push
rcl
xlat
and
push
adc
mov
add
jbe
push
out
pop
in
ror
in
fwait
idiv
in
push
sbb
les
test
sbb
jb
adc
flds
xor
or
fwait
sub
and
mov
cmp
fs
mov
sti
fwait
add
scas
pop
and
add
ss
mov
xor
insb
aaa
xor
mov
test
pop
xchg
leave
mov
adc
ja
pusha
dec
icebp
push
push
mov
cld
add
mov
loope
mov
sar
pop
cmp
jns
data16
cmpsw
fimull
inc
mov
ljmp
xchg
add
shrl
add
inc
jg
fstl
dec
rolb
pusha
adc
xor
and
pusha
sbb
lcall
mov
arpl
mov
mov
sti
insb
sbb
popf
fimuls
mov
call
and
test
test
add
jecxz
and
fwait
push
xor
leave
pushf
arpl
xchg
push
mov
lret
ret
ljmp
aam
inc
rorb
std
xchg
popa
jg
mov
insb
lock
pop
sbb
pop
inc
sbb
andb
std
imul
cld
in
lea
jl
inc
xchg
pop
xchg
sub
push
dec
loopne
enter
addr16
rcr
imul
nop
xor
jge
push
push
lds
sub
je
adc
ficoms
add
ss
out
sbb
xchg
cltd
dec
or
roll
sub
or
jecxz
xor
ret
mov
dec
add
addb
lea
push
imul
mov
fisttpl
add
nop
leave
lods
pop
js,pn
inc
push
aad
inc
push
xchg
fst
jb
shlb
fdivr
jnp
insl
lea
repnz
out
and
dec
iret
fsub
jmp
dec
stc
lods
inc
popa
rol
pop
mov
hlt
jle
xchg
sbb
in
popf
mov
inc
test
inc
imul
mull
xchg
pop
lds
movsl
jmp
fldcw
movsb
ja
pop
mov
jns
dec
int3
dec
iret
dec
jne
cmp
sub
sub
add
xchg
gs
data16
loope
sbb
inc
cmp
sub
fmul
je
xor
into
jno
lahf
lret
add
clc
sahf
jbe
mov
ret
cmp
push
xlat
xor
adc
inc
fisubrs
or
jg
lahf
in
cmpsb
push
loope
enter
dec
icebp
lret
adc
add
jnp
adcb
sbbb
and
cli
cmp
mov
sbb
dec
fbld
mov
aam
xchg
xorl
add
lds
add
pop
cmc
es
and
jg
bound
jecxz
mov
jo
inc
arpl
xorb
sti
jne
mov
into
sub
imull
iret
pop
mov
lret
hlt
push
rorl
add
push
std
cmpsb
pop
push
ret
xor
mov
popa
jge
jne
fisttps
aam
push
mov
scas
mov
jns
and
adc
lods
pop
into
mov
adc
popf
inc
jge
mov
mov
lcall
test
rcrb
test
cmp
mov
adc
icebp
dec
cmp
push
rcll
push
pop
cld
imul
bnd
jb
sahf
xor
int3
push
sub
cltd
add
dec
cld
add
gs
das
loope
mov
push
push
shll
std
push
pop
loope
xor
cmpb
je
icebp
enter
dec
in
or
clc
outsl
mov
mov
addl
cmc
ret
pop
xchg
and
adc
mov
fidivs
shl
jae
sbb
aad
fcomip
bndldx
pop
or
popf
dec
sub
aas
mov
test
push
cmc
xchg
shr
lahf
subl
inc
jg
cwtl
cwtl
cld
xor
outsl
jle
outsl
and
mov
idivl
sbb
lahf
mov
adc
fucomi
jmp
lret
testb
cmp
addr16
sub
ja
pushf
inc
sbb
into
cwtl
fsubl
fldt
push
mov
ret
push
pop
ret
adc
jae
mov
cmp
inc
stos
jns
cmpsb
fisubs
xchg
or
call
mov
adc
sar
jecxz
arpl
cli
mov
inc
xchg
fbld
stos
jp
lahf
aaa
jne
sub
sub
shlb
add
push
mov
std
add
rcl
imul
ds
rcrl
mov
adc
mov
cs
rol
out
cli
push
cltd
inc
or
sbbl
inc
mov
cltd
bound
push
pop
mov
push
jb
ljmp
es
mov
outsl
pop
sub
jo
lahf
dec
mov
mov
out
adc
pop
cltd
fiaddl
imul
and
or
push
inc
dec
sbb
adc
popf
pop
pop
sub
test
arpl
std
cs
push
and
orps
dec
shlb
or
dec
xchg
mov
ret
mov
sbb
push
inc
mov
scas
lret
pushf
xchg
push
negb
ret
jmp
xchg
sbb
pushf
jo
pop
lock
addb
stc
orl
sahf
mov
jae
loope
or
pop
inc
scas
pop
inc
xchg
push
out
dec
jle
rcll
in
out
mov
daa
xor
sbbl
mov
clc
fnstsw
cmp
xchg
out
cmp
leave
icebp
fimuls
ret
das
stos
lahf
lods
push
mov
jno
mov
ret
jne
push
dec
mov
mov
fmull
lret
or
repnz
add
pop
cmp
ret
subl
cmp
daa
add
adc
add
ljmp
xor
xor
push
mov
push
sub
push
leave
mov
jl
and
and
mov
loope
ds
imul
add
shrb
mov
pop
or
dec
dec
and
add
aad
faddp
adc
data16
or
lret
lea
inc
aaa
push
pop
ret
fwait
xchg
dec
add
jecxz
testb
hlt
arpl
jae
push
xchg
mov
cli
sbb
add
insl
pop
cwtl
jns
mov
std
push
xlat
lret
jmp
ljmp
lea
jl
js
daa
insl
rorb
push
mov
ja
in
inc
outsl
pshufw
sbb
xor
aam
mov
shlb
mov
jg
lret
fnsave
pop
rorb
pop
subb
es
aam
insb
and
lods
jle
mov
mov
adc
mov
pop
pop
inc
sub
inc
inc
scas
and
cli
mov
jp
es
mov
jl
sbb
pop
pop
mov
aad
js
xchg
and
insb
push
stc
rorb
adc
mov
mov
xchg
loope
mov
pop
adc
pop
xchg
jecxz
and
insl
sbb
sbb
mov
mov
xor
adc
fistpl
xchg
xlat
fsubrs
xor
xor
mov
mov
push
fnstenv
jnp
adc
js
mul
daa
sbb
push
ja
incb
hlt
lcall
push
cmpsl
pop
pop
sub
stc
pop
loop
mov
add
dec
icebp
push
leave
jecxz
xor
lea
jg
std
test
mov
dec
mov
push
xor
dec
lret
pop
xor
sbb
and
sub
mov
pushf
cli
jae
nop
inc
xlat
adc
and
ja
lods
sbb
dec
cmp
mov
lahf
lahf
bound
pop
push
pop
pop
mov
mov
sahf
lds
push
dec
repnz
lock
push
xor
jp
adc
mov
rol
lock
sbbb
mov
ja
data16
dec
dec
test
jo
fs
jl
inc
sbb
ret
or
std
inc
test
adc
int3
xchg
sbb
stos
test
sbb
ljmp
jo
adc
push
pop
insl
jecxz
jnp
xor
mov
or
inc
adc
lods
jecxz
cmp
pop
jmp
push
ret
mov
daa
mov
icebp
mov
scas
daa
pop
aaa
and
sbb
sbb
fnstsw
xchg
not
int3
sub
jg
pop
fdivr
sbb
pusha
xor
dec
popa
mov
mov
adc
mov
push
inc
fs
icebp
stc
xor
out
push
adc
ja
lock
push
mov
cmp
adc
jg
xor
mov
pop
adc
xor
lock
sbbb
add
jg
jmp
cld
or
rcrb
mov
testl
adcl
stos
movsb
bound
cmp
fnstsw
inc
lret
les
das
out
lds
xlat
aad
mov
sti
add
and
mov
imul
jns
and
xchg
xchg
push
pop
fcmovnu
out
insl
and
fcoms
cmp
pop
jnp
sbb
add
mov
test
push
add
add
inc
es
or
push
shlb
push
mov
xchg
ficomps
popa
cs
mov
shll
xchg
push
push
sbb
lods
mov
lcall
lods
jg
sbb
push
mov
subb
cmp
mov
popa
jge
xchg
and
adc
mov
mov
ja
push
je
es
dec
cmc
mov
jno
push
mov
aam
ss
pop
xchg
adc
adc
iret
mov
fdivrs
jecxz
icebp
mov
inc
or
jle
leave
push
mov
jno
jno
jle
inc
in
inc
ret
imull
push
mov
rcrb
mov
mov
mov
dec
adc
nop
push
clc
ror
out
stos
mov
add
inc
leave
insl
push
sub
cmp
pop
fistpl
push
adc
enter
dec
repz
pop
das
aad
xchg
insb
mov
jg
loope
jmp
call
sbb
fimull
cmp
inc
add
insb
inc
scas
cmp
dec
cmc
jecxz
jb
pop
push
cmp
xchg
adc
in
dec
and
test
ljmp
sub
test
cmp
adc
inc
adc
or
push
mov
fldcw
pop
ret
or
ret
ret
and
lahf
arpl
loop
out
bound
ds
and
lret
es
cmpb
aad
pop
push
xor
or
ja
in
xor
add
outsb
mov
fidivrl
pop
out
add
mov
adc
or
std
inc
dec
mov
xor
pop
push
and
sbb
and
dec
ss
mov
out
xchg
cmp
mov
lods
loop
inc
adc
pop
rorb
xor
jnp
inc
mov
xchg
push
nop
fidivs
jnp
pushf
lcall
sub
fwait
add
cwtl
mov
xchg
pop
mov
std
xlat
push
fisubrs
jg
mov
push
sbb
stos
xlat
fsts
cli
jl
xchg
add
pop
push
repz
push
inc
outsl
pop
pop
out
pop
xlat
pop
cmp
cmp
cmpsb
push
out
test
sub
sbb
cmpsl
stc
mov
mov
mov
lods
dec
daa
inc
rclb
fldt
or
rol
xor
stc
testl
orb
adc
cmp
pusha
dec
mov
aad
xor
sbb
cltd
inc
mov
jnp
ret
jb
ret
sbb
sub
cmp
pop
jb
andl
jne
mov
movl
ljmp
jb
inc
out
popf
or
bound
aam
dec
leave
xlat
mov
xor
mov
push
dec
fisubs
in
or
sti
js
xor
sub
sarb
jge
cmp
xchg
pusha
lods
js
aaa
lret
pop
inc
mov
popa
xor
les
rorl
out
arpl
out
xchg
push
cmpsb
cmp
cmpsb
aam
and
lea
push
inc
xchg
shll
rolb
cmp
mov
scas
sarl
jmp
mov
test
fnstenv
data16
lds
xor
mov
ret
out
adc
adc
inc
push
lret
repnz
daa
add
dec
push
sub
call
mov
adc
mov
lahf
pop
ja
aaa
fidivrs
fcmovb
jl
xchg
fistl
stc
shl
pop
pop
add
mov
aas
mov
ds
shll
stos
mov
sahf
repz
les
push
lods
nop
shrb
stos
into
mov
into
xorl
mov
lret
ret
daa
into
inc
dec
out
sub
inc
cmp
xchg
lahf
xchg
repz
out
mov
jns
pop
cmp
outsl
and
cmp
mov
shl
push
jmp
add
mov
mov
sub
icebp
loopne
sbb
jle
inc
xlat
lcall
jne
ficoml
bound
pop
push
mov
bound
jmp
lods
mov
inc
mov
in
pop
dec
arpl
lds
lret
ljmp
push
lods
jmp
mov
jmp
in
icebp
push
scas
stos
mov
repnz
and
mov
enter
mov
faddl
scas
mov
sarl
mov
and
dec
adc
push
movsb
mov
mov
roll
stos
mov
clc
jge
add
scas
or
xor
cmp
or
dec
pop
jle
shl
adc
or
and
nop
jno
cmp
and
pop
push
movsl
test
mov
dec
inc
lahf
imul
inc
jb
out
cmpsl
pop
push
dec
add
inc
or
loop
cld
adc
or
jb
mov
pushl
addr16
lret
shlb
iret
insl
fbld
das
dec
push
pusha
out
lock
lahf
out
movb
lret
nop
mov
neg
sbb
sub
fmuls
pop
mov
jno
xchg
push
cmp
bound
cmc
or
sbb
mov
cmp
insl
cmp
mov
mov
lcall
pop
adc
sbb
sbb
outsb
in
ret
pop
push
xchg
fnsave
inc
negb
into
inc
pop
stc
notb
push
mov
pop
gs
and
mov
or
dec
test
push
add
jne
icebp
sahf
data16
xchg
lods
ss
mov
sarl
jnp
imul
scas
lcall
jl
xchg
bound
sarb
sub
scas
cmp
cmp
mov
mov
xchg
scas
mov
repz
push
pusha
in
and
xlat
dec
imul
jecxz
es
cvttps2pi
jns
je
mov
xor
arpl
movsb
mov
pop
es
sbb
mov
jne
cmp
mov
rclb
out
fimull
sub
xchg
in
jmp
orl
inc
ret
and
sti
sub
mov
sbb
sub
call
push
dec
ja
faddl
and
add
clc
dec
es
push
lods
jbe
xor
cwtl
fs
lret
stc
cli
xchg
sbb
int3
repz
sbb
fsubr
and
or
es
pop
stc
sub
xchg
movsl
sub
popf
xchg
enter
lods
fsubl
sub
int3
pop
jmp
rolb
adc
xchg
lahf
aad
loop
mov
push
mov
cmp
fsubr
notb
nop
fwait
inc
jp
jp
adc
sub
lret
dec
add
mov
shll
aam
xchg
xchg
cmpsl
dec
out
jne
lods
add
cmp
add
imull
xchg
mov
out
push
fcmovb
pop
push
repz
cmp
mov
daa
arpl
jbe
sub
push
sub
mov
loop
aam
outsl
xor
hlt
iret
or
mov
in
jbe
xchg
add
or
je
mull
inc
je
xor
xor
imulb
push
mov
xor
std
loopne
loope
sub
aad
cli
cmp
fbstp
movsb
in
push
jmp
pop
leave
dec
add
sbb
mov
shr
jg
pop
test
mov
add
fyl2xp1
jno
jno
jmp
sbb
loopne
mov
decb
push
and
mov
xor
xor
inc
sub
mov
push
mov
mov
mov
lret
mov
leave
fidivl
stos
add
cs
sbb
daa
sub
fidivs
dec
out
cmpsl
push
xchg
nop
fistpl
pop
lahf
pop
shr
les
mov
jns
or
inc
cmpsb
enter
and
mov
stos
ljmp
xchg
out
mov
push
stc
mov
sti
aad
pop
adc
push
je
push
push
mov
into
rorb
rorb
push
pop
mov
insl
imul
aaa
jae
xor
lds
shll
xchg
fwait
mov
or
xor
pop
sahf
adc
xchg
iret
sarl
and
pop
int3
dec
insl
out
rorl
test
push
std
mov
push
scas
mov
dec
stc
sbb
mov
bound
stc
arpl
lret
jns
mov
push
into
xchg
in
push
std
shll
push
in
jnp
jne
push
and
call
in
arpl
and
popa
sub
loop
jne
xor
and
mov
loopne
push
sub
pushl
test
pop
out
push
jle
mov
bound
shl
lret
push
cmp
cmp
aad
into
ljmp
adcl
push
mov
xor
sub
mov
pop
call
divb
dec
test
popa
cmp
inc
das
push
cmpsl
repnz
inc
daa
and
lock
inc
mov
and
fisubrl
das
pop
mov
inc
orb
fmuls
hlt
imul
mov
fs
cpuid
xchg
aad
add
imul
loop
repnz
mov
nop
shll
jns
popf
sbb
mov
pop
push
push
in
outsl
cmp
pop
lods
sbb
sbb
mov
lret
std
dec
jl
xor
insl
sbb
sub
mov
sbb
lret
inc
repz
fimull
scas
or
rcl
adc
pop
sbb
inc
pop
jmp
sbb
sbbb
cltd
sarl
je
stos
push
mov
repz
or
jp
aas
std
sub
adc
imul
in
sbbl
fildll
mov
add
inc
push
inc
or
jno
aam
cwtl
lcall
fmul
loopne
sahf
jle
adc
fisttpl
out
push
dec
pop
jo
imulb
dec
insb
mov
pop
adc
pusha
popf
mov
imul
lods
je
mov
std
add
scas
das
jecxz
insl
cmp
cmc
pop
and
stos
das
cmp
aaa
ljmp
jo
fildl
fs
sub
daa
cmp
clc
les
into
dec
fwait
out
shl
and
dec
insb
xchg
hlt
fistps
pop
xchg
outsl
enter
mov
add
xor
sub
push
dec
scas
outsl
mov
shr
sete
inc
aaa
aaa
lcall
adc
pop
pop
stc
pop
mov
lods
push
mov
scas
sub
jo
mov
mov
dec
sbb
and
das
push
inc
gs
icebp
xor
push
mov
sub
jae
std
pop
je
push
mov
xchg
cmp
dec
and
mov
pop
out
clc
or
mov
push
lea
inc
call
jo
mov
sbb
xchg
mov
out
and
push
icebp
pop
dec
rolb
jp
inc
loopne
sbb
pop
outsl
loopne
push
cmp
jp
fstpl
cmp
loopne
fwait
push
call
aam
fcompl
push
mov
mov
lods
adc
inc
int3
negb
jecxz
mov
xchg
add
mov
jo
sbb
xlat
mov
es
sub
xor
scas
adc
rorl
aad
or
pop
divl
xor
dec
push
sahf
jae
cmp
aad
adc
das
daa
jg
pop
xchg
sub
insl
insl
mov
rorl
mov
xchg
mov
push
pop
adc
cmp
cld
xchg
sub
sub
inc
sti
dec
push
xchg
fidivrl
mov
fwait
pop
jecxz
add
lahf
and
xor
and
in
add
push
jg
or
dec
pop
sti
jp
xor
pop
into
cmp
enter
pop
xor
mov
outsl
cmpsb
je
sbb
mov
mov
test
push
lcall
addr16
shrb
xchg
repz
dec
push
mov
inc
or
shrb
jae
adc
bound
imul
mov
lret
mov
xorl
add
stos
addb
mov
cmp
xchg
test
fwait
mov
adcl
dec
xlat
jge
cmc
xchg
into
mov
movsb
mov
pop
out
pop
movsl
push
push
sbb
pushf
add
shrb
or
test
jg
xchg
dec
popa
mov
aaa
pop
pcmpgtb
lret
pop
imul
xchg
je
jmp
jge
cld
and
or
jb
push
cmc
push
cmp
pop
rcll
push
dec
inc
jae
std
fimuls
sahf
mov
push
cmpsb
xchg
aaa
or
add
mov
scas
jge
les
add
data16
jg
xor
push
or
xchg
ss
leave
adc
and
sar
sub
mov
lcall
or
das
dec
and
fiadds
mov
hlt
pop
stos
and
test
inc
in
loopne
xchg
std
mov
out
lea
call
lods
cmp
sbb
push
ret
mov
aaa
add
sub
inc
rolb
dec
xor
xchg
xchg
cmpsl
jo
and
cmp
dec
add
push
stc
cli
call
pop
in
jns
push
mov
lds
in
push
out
sahf
push
cwtl
std
imul
mov
sbb
dec
aas
xchg
xchg
data16
adc
mov
xor
pop
jno
jb
loop
pop
fstpt
adc
pop
add
test
in
add
cli
lret
loope
inc
lret
ss
out
xchg
push
stos
inc
adc
test
pop
ret
lret
es
mov
sti
mov
out
xchg
dec
int3
mov
push
cmc
xor
push
repz
mov
adc
xchg
inc
je
outsl
popa
push
sub
jnp
test
cmp
push
sbb
aaa
push
jmp
cld
stc
mov
movsb
cmp
cmc
push
fwait
pop
xchg
in
imul
and
jp
pop
inc
out
int
dec
dec
fisubrs
clc
std
movsl
lret
inc
test
cli
push
inc
cmc
and
ret
inc
xchg
insl
dec
dec
xchg
dec
repz
in
or
repnz
mov
jnp
js
pop
mov
in
inc
pushf
out
add
mov
sbb
add
and
add
idivl
cmp
pop
xor
sub
in
jge
mov
lcall
or
adc
xbegin
push
adc
nop
out
ljmp
inc
rorb
adc
xor
pop
jo
inc
stos
pop
pusha
xchg
fisubrs
icebp
sbbb
popf
out
mov
mov
or
icebp
popf
aad
mov
sub
adc
ret
pop
and
dec
dec
cmp
and
dec
and
adc
rcl
xorl
stc
or
push
inc
or
fwait
jae
jp
cmpsl
cmp
out
ret
shlb
pushf
ret
cwtl
xorl
retw
scas
fadd
js
repnz
std
jnp
pop
jae
outsl
sub
jo
in
insl
clc
mov
mov
stc
push
loopne,pt
lea
lahf
lfs
xor
pop
push
pop
mov
mov
cmp
ret
sbb
imull
out
sarb
mov
jns
sbb
adc
in
xchg
pop
sbb
in
cmp
pop
mov
mov
popf
loop
xchg
jb
loop
xorb
pushf
sub
mov
fisubrl
and
loopne
addr16
lods
mov
xchg
jnp
push
mov
sti
nop
hlt
dec
sbb
jne
jae
jbe
aas
outsb
rcrl
jne
and
xchg
imul
sti
xchg
inc
lods
std
cmp
mov
orl
aad
insb
addl
fbld
cmp
sbb
sub
std
xor
mov
sub
inc
or
clc
movsl
push
mov
push
cmp
inc
jmp
fucom
insb
xchg
and
sub
sbb
repnz
push
sub
push
and
sbb
leave
jl
cs
xor
cmpl
adc
and
push
hlt
pop
fildl
pop
and
xchg
jmp
popf
je
mov
stos
call
cmp
stos
pop
push
cmp
lds
xchg
inc
inc
dec
xor
jns
mov
mov
in
cld
push
push
jnp
rorb
lea
add
cmp
cmp
sub
cltd
in
add
push
push
je
jg
jle
enter
outsl
jae
into
orb
inc
adc
in
out
fists
jne
adc
add
in
notb
xor
dec
cwtl
xchg
dec
jbe
push
sbb
pop
into
insl
call
test
cli
adc
dec
icebp
pop
dec
cs
mov
mov
push
popf
xchg
dec
dec
stos
insl
int3
iret
data16
mov
xor
arpl
scas
cmpsb
loopne
cld
popa
mov
lret
add
jmp
into
xchg
cmp
mov
out
cs
imul
pop
xor
jmp
nop
cmp
je
pusha
push
add
jne
push
pop
push
nop
lds
push
movsl
xchg
inc
mov
mov
cmc
jo
sti
stos
or
mov
mov
xchg
cmpsb
rcr
mov
mov
dec
in
aas
inc
mov
or
ja
jge
and
aas
mov
adc
mov
adc
out
sub
test
push
adc
mov
jg
push
aad
repnz
dec
jb
popl
test
lcall
out
gs
cmpsl
scas
repz
jne
lock
mov
inc
jno
and
sub
scas
push
lret
sar
xchg
shll
fdivs
xor
flds
scas
ljmp
push
icebp
testl
out
cmp
mov
push
insb
add
out
lods
mov
and
out
mov
stos
or
lahf
nop
iret
in
add
xchg
and
xorl
data16
sbb
add
jne
mov
mov
xlat
ss
jns
pop
push
outsl
mov
xor
inc
cmpl
loopne
mov
cmpsl
or
cmc
inc
cmp
mov
cli
dec
and
xchg
call
cmpb
xchg
lea
popa
icebp
pop
sub
fcomps
enter
orb
or
sub
sub
jecxz
arpl
jnp
inc
pop
clc
lret
aam
lcall
jb
inc
xor
pop
fisubl
ret
in
and
cltd
adc
inc
sub
sbb
stos
ss
call
cmp
pop
xchg
jge
cmp
fcmovbe
sbb
mov
xor
jecxz
stc
pop
enter
mov
lds
loope
sub
add
bound
push
mov
popa
rcll
out
out
jo
rcl
shlb
sbb
nop
enter
ja
add
iret
std
mov
or
sbb
jl
mov
loope
test
cmp
push
mov
repnz
aas
or
mov
out
jo
enter
out
incl
addl
cmp
or
push
push
mov
sbb
inc
push
xchg
add
jo
fistpl
push
xor
and
test
testb
pop
nop
insl
xor
in
xor
pop
daa
mov
rol
je
les
or
sub
pop
repz
in
rcl
mov
in
loopne
outsb
cld
mov
sub
int3
cwtl
or
lock
int
ficompl
cli
mov
ret
inc
les
mov
mov
int3
mov
pop
mov
test
add
bound
aad
jne
inc
movsb
dec
pushf
arpl
jl
mov
dec
jb
cmp
cmp
pop
mov
gs
nop
mov
sub
xchg
and
data16
mov
test
mov
xchg
inc
adc
cmp
je
jecxz
aaa
add
or
sub
push
sbb
cmp
sub
je
sbb
cmp
scas
aaa
mov
movsl
ljmp
dec
lret
jns
addb
xor
movsl
push
xchg
loopne
adc
stos
fdivl
sbb
add
dec
mov
fadds
andl
jb
stos
jp
mulps
lds
clc
test
push
inc
mov
jg
pop
insb
adc
daa
jp
jecxz
test
cmp
xchg
cmc
fimuls
repnz
bound
cmp
into
mov
sub
ret
pusha
fs
dec
dec
dec
fdivp
daa
sbb
pop
mov
push
mov
std
mov
data16
ljmp
xor
out
xchg
adc
inc
outsl
popf
jo
lea
push
loop
inc
daa
icebp
movl
mov
push
int3
or
mov
aam
sub
hlt
cmc
subl
sub
clc
shll
pop
xor
or
arpl
sarb
mov
test
loope
outsl
nop
mov
add
xor
push
cmp
inc
sbb
cwtl
insb
mov
shl
test
mov
ljmp
movsb
or
xor
aas
sub
adc
add
push
aad
divps
loopne
mov
inc
bound
jge
repnz
pop
xlat
cld
mov
cmp
repnz
into
test
pop
xor
out
pop
jge
rcrb
insb
ret
push
imul
daa
or
fildll
movsl
out
or
mov
push
outsl
fistpl
inc
push
cmc
mov
int
mov
aam
jmp
adc
or
mov
ficoms
rcll
inc
cmp
and
push
popf
push
movsb
push
xchg
outsb
inc
movsl
lock
xchg
scas
pushf
pop
movsl
mov
iret
and
sahf
sub
or
enter
or
leave
insl
inc
std
dec
sub
push
out
inc
sub
inc
bound
sbb
sarl
mov
xchg
out
inc
or
scas
aaa
mov
and
lods
inc
scas
out
jnp
fbstp
stos
int3
sahf
stos
mov
mov
or
jmp
dec
mov
sub
adc
scas
lds
push
push
dec
movsb
scas
xor
sub
xor
jo
xchg
jns
cwtl
cmp
repnz
push
ret
cmpsb
popa
ret
mov
mov
daa
jp
dec
xor
jne
aad
loope
jle
add
loope
inc
dec
pusha
adc
paddusw
adc
cmp
or
pop
dec
rorl
in
or
mov
xchg
inc
std
mov
inc
mov
jmp
xchg
and
incl
out
push
xchg
adc
sub
enter
fisttpl
pop
pop
pop
cmp
pop
movb
xor
push
hlt
sub
gs
jmp
xor
dec
add
popf
inc
cmp
neg
aad
xchg
pushf
adc
aas
mov
add
les
jge
and
xor
popa
or
dec
jns
or
dec
aad
mov
mov
xchg
xlat
loopne
nop
or
je
xchg
aad
leave
out
lods
mov
pop
out
mov
pusha
lahf
les
and
pop
repnz
xor
imul
pop
lods
rol
adc
sbbl
sti
pop
mov
and
shl
push
jle
mov
pop
jns
push
das
pushf
lods
mov
and
push
pusha
lcall
sti
mov
xchg
push
imul
cmp
sti
xor
sub
lods
pop
sbb
jnp
cmpsb
xchg
mov
pushf
mov
jmp
jo
adc
insb
push
and
xchg
les
jns
outsb
push
jne
push
xor
divb
mov
out
jne
xchg
pushf
jae
fldenv
xchg
fs
int3
test
fsubrl
jle
jns
add
push
mov
rorl
xor
cmp
jo
ret
adcl
jl
xchg
and
inc
or
into
jge
pop
in
mov
fs
mov
dec
or
aaa
shll
call
hlt
cli
hlt
cmp
xchg
sbb
sbb
fs
or
mov
jmp
xor
adc
int
outsl
in
arpl
push
pop
add
popa
je
cld
mov
fdivrl
call
mov
push
shrl
orb
fimull
insl
cmp
inc
loop
and
ror
es
fnstsw
or
adc
loop
sbb
cwtl
movsl
adc
or
mov
mov
icebp
mov
sbb
or
scas
jo
mov
loop
fldt
js
jo
pop
popa
cmp
pop
cmp
pop
repnz
imul
leave
repnz
sub
xchg
sub
add
imulb
sbb
leave
pop
cmp
mov
cmp
jo
fists
mov
mov
es
jno
popf
pop
lret
sbb
xlat
mov
dec
push
cmp
test
enter
es
push
mov
ret
sub
jg
sub
fs
jne
loope
sbb
add
imul
and
dec
mov
mov
les
pop
add
cmp
outsl
or
in
popf
adc
xor
mov
push
mov
lods
add
mov
jle
add
and
call
cli
adc
ljmp
sbb
pop
inc
mov
sahf
daa
lods
in
mov
add
lock
xor
cmc
pop
inc
rorl
cmp
xor
scas
ds
push
lock
fldl
mov
int
xor
mov
adc
mov
xchg
jo
push
push
jb
cmp
cmpsl
lahf
cltd
mov
shll
mov
cmp
jle
push
cmp
xchg
cwtl
mov
shll
jecxz
push
test
popa
clc
dec
sbb
pop
movsl
pop
insb
mov
enter
xor
dec
sub
icebp
inc
xchg
push
aas
dec
in
jb
in
xchg
dec
sarb
cmpsl
int
cmp
mov
fs
jl
sub
ja
cmpsl
ljmp
insb
sbb
xchg
test
xchg
nop
sub
push
cmp
mov
dec
shll
jno
mov
push
bound
jbe
and
ret
push
or
jns
pop
xchg
insb
inc
xor
in
out
ret
fimuls
out
adc
pop
addl
xchg
out
jmp
add
xchg
mov
std
lret
enter
inc
stos
call
mov
mov
mov
scas
lods
rorb
adc
pusha
shrb
mov
xchg
lahf
cli
lds
xchg
mov
scas
insl
out
xchg
mov
mov
outsb
sahf
mov
ja
inc
or
loope
shlb
scas
es
and
out
fsubl
sbb
or
mov
adc
cs
jno
idivb
daa
push
add
sub
inc
loopne
cmp
mov
xor
dec
mov
push
add
and
pop
jge
mov
jae
in
pop
gs
iret
fsincos
inc
jge
jae
in
repz
aas
loopne
jl
out
insl
icebp
stc
lcall
pop
pushf
out
cli
inc
ds
pop
sbb
fxch
fdivrs
ret
mov
mov
pop
push
mov
fsubr
dec
enter
lret
xorl
clc
out
or
cmp
fildl
imul
sarl
add
push
jmp
pop
sbb
out
sub
xlat
adc
sub
lock
xchg
repz
jae
divb
aas
ret
jmp
jbe
dec
cs
push
push
inc
xchg
pop
add
inc
sti
dec
xor
xchg
xchg
cmc
mov
jmp
jne
and
pop
addr16
adc
bnd
jno
mov
jno
sub
outsb
in
minps
xor
icebp
add
push
sbb
fs
dec
mov
sub
fld
push
jb
adc
pop
or
fsubr
loop
jle
fs
inc
jp
das
push
sarl
cmp
push
or
icebp
in
movsb
mov
add
adc
enter
jbe
jo
fnstcw
adc
jne
repnz
dec
fimuls
into
lahf
sub
xor
repnz
sub
cld
leave
out
idivb
and
lahf
bound
sub
mov
inc
mov
std
out
push
push
mov
and
xor
lds
jbe
loope
es
cwtl
les
out
jp
mov
fdivr
mov
push
inc
lret
fimull
loopne
push
pop
iret
push
sub
jnp
xor
sub
lock
cltd
pop
loopne
xchg
xor
push
mov
jl
and
lds
fwait
gs
movsl
leave
jmp
pop
dec
add
dec
adc
idiv
fldcw
xlat
or
aad
pop
mov
lds
mov
sub
rolb
inc
es
scas
stos
rol
mov
push
pop
mov
outsb
xlat
pop
inc
xchg
int
jbe
or
mov
dec
shrl
stos
adc
jns
cmp
or
push
mov
lods
hlt
pop
mov
xchg
or
subb
movsb
jne
xor
pop
dec
lret
test
loop
mov
mov
ss
cmp
sub
in
adc
jp
mov
pushf
mov
sarb
rorl
call
insb
into
push
lods
iret
xchg
push
add
cmp
loope
cmp
cmp
pop
arpl
lahf
mov
pop
rcl
cltd
push
adc
inc
gs
dec
sub
aad
repnz
xor
mov
add
sbbb
inc
outsb
inc
inc
add
push
sbb
sub
sub
ja
ret
and
scas
cwtl
fidivrs
fs
hlt
pop
jno
xchg
repz
jbe
xor
push
adc
inc
fwait
sub
mov
mov
int3
inc
mov
mov
movsb
push
xchg
stc
mov
hlt
jb
ret
mov
iret
mov
ds
add
mov
xchg
cld
mov
adc
and
cmc
sub
mov
sti
rorl
inc
sbb
stc
inc
mov
and
adc
and
push
mov
test
sti
pop
in
inc
test
stos
cmp
xor
sub
fildl
mov
or
stos
jne
and
inc
push
dec
pop
inc
rorb
push
data16
xchg
push
movl
aam
leave
push
mov
and
lcall
loopne
pop
xchg
add
push
sub
dec
ds
mov
pop
sbb
loop
iret
xor
push
jecxz
loopne
sti
stc
ret
adc
jb
sti
fidivrl
push
jbe
fisubs
test
mov
mov
rcrb
inc
loope
pop
shll
push
sub
loopne
stos
push
xchg
dec
stos
aas
aam
mov
inc
xchg
inc
divl
and
or
xchg
adc
push
cmc
call
clc
gs
xor
lods
test
pop
nop
pop
fistps
cmp
ljmp
fimuls
mov
cmp
push
and
leave
ds
pop
jo
mov
inc
cmp
or
ja
pop
mov
add
push
in
jg
dec
mov
outsb
push
fcoms
push
xchg
sub
divl
or
fmuls
ja
test
fsubrs
mov
lds
jge
adc
mov
movsb
popf
leave
lock
scas
xor
jmp
add
xchg
mov
or
popa
sti
mov
sub
aad
fwait
enter
sarl
adc
mov
cmp
adc
ja
mov
mov
fsub
int
dec
xchg
sarl
sahf
ret
pop
ret
push
sub
inc
arpl
xchg
lcall
and
xabort
int
daa
dec
mov
push
sti
lahf
xchg
andl
pop
pop
dec
icebp
mov
pop
sbb
jo
testb
ja
mov
and
ljmp
arpl
mov
jno
in
sub
sbb
inc
mov
mov
and
or
rorl
stos
mov
jp
cli
aad
inc
push
pop
mov
jns
leave
and
sub
dec
les
popa
jbe
mov
push
test
sub
xchg
add
push
push
mov
lret
jmp
arpl
pop
fs
xchg
or
aaa
gs
addr16
cld
iret
mov
repz
enter
cmp
add
out
xchg
pop
sub
mov
mov
add
jge
inc
add
mov
ljmp
mov
gs
push
aas
out
pop
stos
push
addr16
test
ret
rclb
mov
aam
std
sbb
jb
jnp
mov
and
fstps
leave
leave
and
pop
xchg
xchg
add
sbb
in
clc
cwtl
divb
xchg
icebp
pop
dec
inc
imul
adc
xor
and
sub
cli
movsb
jae
adc
mov
and
pop
fs
or
scas
mov
das
pop
cmp
in
push
dec
andb
pop
test
adc
push
dec
jmp
repz
xchg
inc
pop
inc
jnp
enter
popa
dec
xor
inc
xchg
adc
dec
mov
add
inc
cli
sub
sti
push
fiaddl
inc
xor
aad
inc
nop
in
adc
data16
jmp
ret
or
pop
shrb
push
inc
push
sub
imul
xchg
jmp
cwtl
or
xlat
jno
fstpl
mov
divl
mov
and
jae
push
movsl
out
push
mull
test
mov
sub
pop
push
adc
xchg
mov
scas
aaa
sahf
add
or
repz
stos
lock
insl
inc
mov
mov
sub
shll
subl
cli
mov
sub
or
inc
cmpsl
fs
out
aad
pop
out
dec
loope
and
ds
imul
xchg
jecxz
roll
xchg
pop
lcall
jmp
sub
mov
adc
das
call
call
add
inc
fdivs
or
cli
scas
jno
sti
xchg
call
add
add
mov
fildl
mov
sub
mov
cmp
jl
iret
cmp
into
cwtl
ds
and
and
cmp
mov
mov
enter
inc
dec
dec
push
data16
xchg
or
cmp
or
daa
mov
es
cmp
inc
shl
js
mov
sahf
pop
stos
popa
jbe
xchg
fnstcw
lods
and
pop
das
in
lahf
add
mov
mov
push
pop
dec
pop
cmpsl
sub
imul
fwait
int3
jno
test
notb
int
jp
aam
lods
rorl
xor
insl
into
sub
aas
cltd
add
cmpsb
enter
inc
les
lretw
add
and
aaa
dec
stc
aad
arpl
add
fdivrs
mov
pop
bound
std
imul
push
in
stos
inc
insl
cld
ficomps
stos
mov
xchg
mov
int3
movsl
das
into
testl
fadds
pusha
sub
cmp
cmpsl
aad
xor
stos
pop
or
fscale
jg
fildl
ss
leave
adc
xchg
jg
fsubrl
push
and
out
bnd
push
movsb
loop
dec
jb
mov
jp
jbe
mov
fcompl
cmpb
stos
pop
shll
in
cmp
fcomps
sti
push
cld
leave
mov
cmc
cli
iret
xchg
repz
add
xlat
pop
and
movsl
jmp
rcrl
dec
ja
cmp
sahf
sti
fucomip
stos
ds
in
push
mov
inc
loopne
sub
hlt
jl
and
mov
es
jbe
std
shll
scas
pop
fnstsw
addr16
mov
inc
fcomip
xor
lahf
adc
ret
sbb
idivl
inc
dec
jb
mov
jno
rol
gs
xor
loopne
sbb
in
in
add
mov
mov
test
adc
push
dec
sub
jnp
inc
scas
mov
mov
push
fsub
mov
jecxz
xlat
arpl
add
sbb
dec
adc
mov
adc
ljmp
inc
or
or
out
xchg
rclb
inc
mov
xchg
mov
aas
rep
inc
dec
inc
and
cmc
jns
jno
imull
pop
addl
dec
jnp
pop
inc
fmuls
dec
fcmovnb
jb
or
jmp
or
shlb
lret
xorb
push
sar
adc
push
mov
shlb
add
or
mov
data16
call
lods
aaa
lret
pop
arpl
lahf
rclb
mov
jmp
xchg
sbb
not
rorb
mov
add
cmp
in
aad
pop
jno
xchg
cmp
xchg
or
xchg
imulb
adc
push
sbbb
jb
push
decl
out
dec
push
dec
fadd
icebp
jb
mov
popf
ss
andb
cmp
add
jnp
push
add
mov
scas
test
out
push
loop
adc
fcoml
mov
outsb
aaa
in
or
mov
mov
cmc
mov
je
mov
out
mov
test
mov
roll
outsb
mov
or
mov
inc
nop
sbb
push
sarb
lods
add
jl
inc
test
add
xchg
jns
cmpsb
dec
out
xor
xchg
pop
xor
out
popl
push
data16
adc
push
xlat
les
inc
fnsave
adc
sbb
mov
push
jp
xchg
xchg
aaa
dec
icebp
shlb
push
push
hlt
lea
push
pusha
push
jl
jmp
add
jecxz
out
push
jns
or
out
ret
mov
xlat
pop
or
xchg
imul
push
fldcw
aam
jno
adc
cli
sub
or
inc
and
loope
adc
lahf
and
xlat
mov
xchg
lods
cmp
sarl
imulb
add
icebp
sub
push
in
int
pop
imul
xchg
push
fisubrl
jns
test
repnz
pushaw
push
mov
sub
pop
jnp
shll
les
mov
aas
sti
push
adc
pop
das
push
adc
mov
or
div
jo
je
out
fcmovbe
push
cmp
aas
mov
sub
sub
stos
inc
pusha
in
dec
mov
mov
lahf
jnp
ret
rol
in
sub
adc
cs
jo
dec
daa
cmc
and
adcl
xchg
push
les
popa
stc
in
jo
mov
out
sub
xchg
aam
test
pop
push
add
aas
xchg
xor
xchg
pop
add
lds
aas
mov
push
pop
or
xorl
negl
xor
push
mov
dec
cmp
mov
mov
sbb
and
rcl
cmp
xchg
xchg
in
dec
data16
push
dec
xor
jbe
push
int3
xor
iret
fstpl
je
or
xchg
sub
movsb
aas
lret
insb
push
test
ds
div
aad
hlt
test
or
std
dec
pop
inc
cmpb
push
lcall
xchg
push
lods
jle
add
clc
sbb
loop
outsb
loop
arpl
aam
jmp
test
or
mov
lcall
scas
ds
jge
push
ljmp
scas
xlat
push
ja
inc
ljmp
mov
cmp
mov
mov
mov
ss
mov
mov
hlt
inc
push
ja
cmpsb
and
hlt
adc
xor
es
ret
jle
shlb
push
fidivrs
int
in
add
xor
and
das
sbb
fsts
pop
mov
sub
dec
mov
flds
pusha
hlt
jnp
stos
pop
in
adc
sbbb
adc
cmpsb
loopne
stos
pop
out
or
test
cmp
ds
stc
xchg
jae
or
ret
push
cwtl
lret
mov
scas
out
pop
jl
adc
jmp
out
mov
out
inc
movsl
repz
push
push
pusha
sbbl
or
outsl
or
int
ret
jno
shlb
popa
pushf
out
clc
mov
int3
mov
shlb
lret
lret
jl
push
scas
jae
xchg
xor
ja
mov
addl
out
fs
jle
iret
or
xchg
dec
sub
lret
xchg
xchg
pushf
bound
gs
test
std
mov
or
cs
pusha
sub
push
std
or
hlt
xchg
rcll
popf
ljmp
imul
adc
loop
mov
andl
mov
sbb
cli
lret
mov
jecxz
add
inc
or
lret
xor
jae
inc
aas
xlat
and
dec
mov
iret
fs
pop
lock
jne
cmp
xlat
ja
into
stos
aas
add
aam
or
and
mov
movsl
xor
or
xchg
xor
movsl
testb
mov
jns
scas
mov
jge
out
aam
xchg
jno
sub
bnd
rcll
icebp
cmpsb
lods
xchg
jmp
loop
idivb
sbbl
and
les
or
repz
xchg
mov
mov
je
jno
ss
imul
ss
test
mov
and
add
loope
sar
pop
jbe
pop
jle
mov
or
mov
aam
or
pop
inc
addr16
push
push
dec
icebp
adc
and
jb
ds
icebp
xor
cld
jo
cmp
or
cmp
mov
loop
std
cmpb
scas
sub
jmp
jae
fs
mov
mov
push
adc
xor
out
je
ret
mov
dec
xor
loopne
in
mov
ljmp
rorl
lods
pop
dec
int
ja
dec
hlt
or
cmp
lods
mov
aam
mov
cmp
cmpsb
bound
xchg
fiadds
ds
lret
mov
jle
out
dec
lahf
das
rorl
adc
cltd
inc
add
fstp
pop
mov
pusha
mov
xlat
sbb
mov
sbb
mov
mov
cmc
mov
cmp
push
jb
adc
stos
and
loop
push
addl
lods
xchg
lods
adc
lret
cmp
jmp
mov
cltd
leave
aaa
mov
xchg
xchg
sub
mov
cmc
dec
popa
mov
pop
out
scas
pusha
jnp
out
pop
clc
aad
clc
fisttpl
cmc
mov
or
mov
sbb
pop
and
or
addb
mov
std
mov
push
sub
dec
jmp
dec
lds
filds
shlb
adc
cli
inc
roll
mov
inc
imul
aaa
push
and
les
xchg
cmp
test
les
jnp
adc
aad
loopne
sarb
test
xchg
scas
incl
mov
add
adc
roll
inc
jne
fs
dec
lds
mov
xor
js
dec
cmp
std
aas
and
aad
pop
jle
cmpsb
popf
cs
push
ds
mov
jae
test
scas
cmpsb
adc
fs
mov
dec
lods
xchg
adc
push
sub
pop
sbb
mov
scas
dec
mov
xor
jb
test
js
add
clc
sbb
jae
movsl
sbb
outsl
pop
mov
push
jns
stos
adcl
lahf
data16
std
cmp
add
sti
pop
in
ss
hlt
lods
aaa
ret
push
push
aaa
movb
jge
clc
fcmovu
out
mov
mov
push
aad
cld
das
cltd
lea
or
bound
leave
aam
les
rcl
inc
dec
cmc
ror
cmpsl
sub
add
xor
loopne
lcall
mov
mov
push
cmp
iret
loopne
xlat
inc
cmp
jbe
inc
pop
aaa
scas
sbb
dec
inc
mov
imul
jge
sbb
mov
push
aas
push
ret
ljmp
adc
mov
imul
lcall
mov
xor
pop
adc
test
sub
adc
and
popf
mov
or
in
inc
push
jns
mov
ja
mov
mov
rclb
sbb
test
sbb
mov
sbb
stos
push
xchg
jecxz
pop
das
push
cmp
adc
sahf
and
push
jecxz
mov
xor
ja
mov
aaa
xchg
mov
ja
inc
mov
imul
mov
sarb
js
cmp
and
adc
fadds
leave
std
pop
ljmp
xchg
dec
jns
mov
out
jmp
jb
pop
xlat
divb
jl
mov
xchg
mov
frstor
hlt
mov
lea
xchg
push
and
les
shl
adc
cmpsb
fidivl
inc
xlat
repnz
inc
std
iret
in
stos
adc
add
cmpsb
xchg
sbb
mov
pop
cld
pop
mov
and
mov
or
adc
shl
cmp
pusha
and
add
ja
out
xchg
das
outsl
push
dec
cmp
mov
pop
cltd
xor
das
lret
daa
mov
roll
push
fmuls
icebp
sub
add
or
add
lret
mulb
icebp
enter
xor
lock
cmpsb
in
fbld
mov
inc
lret
cwtl
mov
adc
addl
add
ljmp
inc
fs
mov
pusha
test
stos
sub
lock
leave
dec
inc
xlat
xor
adc
into
flds
pop
lcall
jno
imul
jne
shrl
sti
dec
ja
pushf
ds
arpl
outsb
sub
jle
xchg
lahf
sub
aam
cs
mov
out
or
js
mov
rcll
imul
sbb
in
test
aas
pop
sub
xchg
sbb
cmp
mov
mov
mov
pop
jbe
incb
cmp
dec
inc
lcall
popf
in
test
out
sub
xor
pop
enter
adc
jecxz
add
mov
je
and
inc
in
mov
jo
jno
addr16
xor
add
mov
repz
jne
push
out
stc
rcrl
pop
lock
andl
mov
ret
mov
jb
mov
pop
std
and
push
fisttps
xchg
add
movsb
out
lret
xchg
in
xchg
repnz
cmpsl
jmp
cli
pop
shlb
or
cmp
leave
lret
repz
cwtl
and
add
test
push
xchg
mov
adc
fldenv
cmp
mov
lods
add
xlat
or
jl
sub
jnp
add
sbb
rclb
pusha
lahf
je
sub
push
std
dec
mov
cli
fs
outsb
sub
rolb
mov
repz
fistps
cmpsb
aad
inc
lcall
cltd
fs
pop
pop
icebp
cli
cmpsl
sbb
aaa
lahf
std
out
and
and
loope
and
std
fiaddl
andl
pop
mov
mov
push
test
and
mov
push
movsl
add
push
push
xlat
jmp
test
pop
pop
inc
xor
orl
mov
mov
loope
les
or
rorb
ljmp
xorb
and
jb
or
data16
xchg
sarb
mov
fneni(8087
loopne
sub
out
notl
sbb
mov
push
push
mov
lret
aas
or
out
jl
cmp
insl
mov
mov
mov
repz
or
mov
negl
sbbb
aas
ret
xor
subb
mov
test
outsb
js
stos
jecxz
scas
repz
loopne
pop
push
sub
jo
jecxz
shll
sahf
lds
bound
jo
mov
xlat
jge
aam
push
adc
jecxz
adc
lcall
cld
sti
lods
icebp
dec
loopne
jmp
adcl
sbb
test
or
movsb
pop
lods
or
dec
or
xchg
ss
pop
imul
out
mov
out
mov
idivl
sahf
xchg
mov
sub
cld
or
popf
or
sbb
stos
xchg
adc
shr
fdiv
cmp
xlat
popa
jp
xor
mov
icebp
jl
mov
cwtl
sbb
test
xchg
mov
xlat
lahf
nop
mov
repz
jmp
inc
test
push
imul
lock
and
stos
pop
fmuls
aaa
push
test
das
stos
imul
sub
dec
push
inc
inc
data16
call
repz
adc
pop
mov
jg
pop
or
loope
pop
mov
sti
mov
int3
sbb
jo
or
mov
xor
ficompl
fdiv
fsts
test
hlt
add
jp
hlt
xchg
mov
dec
into
push
mov
cmp
xlat
and
clc
fwait
pushf
stos
fimull
cmp
jb
and
pop
mov
mov
pop
cli
push
xor
pop
rcrl
aas
dec
xor
xor
adc
mov
or
dec
inc
int
into
inc
pop
movsl
out
test
mov
rorb
xor
jae
sub
jbe
sti
arpl
dec
jmp
stos
xchg
pop
lret
jb
sub
jb
mov
fdivp
scas
adc
xchg
cmpl
mov
jp
leave
xor
sub
mov
enter
mov
add
scas
mov
clc
add
push
jecxz
movsl
push
cltd
dec
sbb
xchg
and
lods
into
mov
cmp
aaa
pop
movsl
clc
lret
dec
popa
add
es
leave
mov
ret
sti
pop
inc
test
std
dec
xchg
mov
xor
fst
push
xchg
cmp
dec
mov
or
and
push
xchg
fldcw
int3
pop
cmp
loopne
int
cmp
mov
aaa
fwait
mov
sbb
loopne
ljmp
mov
dec
lcall
jl
add
movsb
adc
add
adc
and
cmp
leave
xor
rcrl
adc
lret
xor
jae
lret
mov
aaa
out
aas
cmp
iret
hlt
icebp
cltd
jg
xchg
roll
mov
push
iret
mov
mov
and
push
ret
movsb
fnstenv
ds
push
repnz
pop
mov
out
and
or
dec
pop
jns
rorb
inc
lods
imul
and
xor
jbe
shr
add
dec
sbb
insl
test
shl
and
sbb
addr16
insl
and
xchg
add
sqrtps
sub
xor
cmp
shll
lahf
mov
aas
add
inc
ljmp
lea
pop
ljmp
std
sbb
das
ret
xor
push
xchg
push
xor
jb
sti
jbe
test
lock
fs
data16
or
out
lcall
popf
lock
mov
shlb
pop
addr16
js
mov
xor
sub
jmp
jo
stos
lret
jbe
pop
push
jmp
nop
fcoml
add
push
outsb
scas
xchg
rorb
aas
in
cmp
loop
jbe
sti
test
adc
lcall
push
xor
jne
lods
adc
inc
pusha
push
mov
ds
mov
loopne
xor
jbe
jecxz
xsavec
movsb
ret
shll
faddl
jmp
cmp
lods
pop
sbb
das
scas
bound
mov
push
dec
add
add
dec
lods
mov
in
push
inc
mov
int
pop
sahf
push
test
or
les
push
adc
push
add
inc
ss
lods
push
iret
dec
xchg
push
ja
sub
push
ja
sub
inc
push
push
sbb
mov
outsb
and
jno
aad
and
pop
filds
sbb
xor
cmpsl
pusha
cmp
pop
shlb
pop
repz
sub
jg
lret
loope
out
push
lahf
jecxz
add
and
mov
lahf
into
sarb
out
std
leave
push
pop
jle
dec
push
fadd
int
inc
sbb
mov
stos
ljmp
and
mov
adc
rcl
sub
push
and
inc
mov
repnz
cld
and
sbb
outsl
lock
and
aaa
popa
sbb
sbb
arpl
lcall
add
adcb
xlat
push
fwait
cmp
jnp
pop
int
or
add
mov
add
or
ss
inc
add
aaa
mov
dec
fwait
push
mov
dec
push
push
push
mov
inc
repz
add
and
and
jns
fdivl
push
loopne
sub
pushf
xor
rol
xchg
hlt
mov
mov
dec
cmpsb
cmp
cltd
mov
and
fistl
pop
xor
jnp
or
push
mov
clc
frstor
mov
notb
sbb
xor
aad
pop
add
or
inc
lods
sbb
clc
cmc
mov
movsb
mov
inc
lock
call
cmp
ret
dec
mov
push
adc
ret
bound
nop
lock
in
sub
mov
mov
xchg
adc
ret
insl
pop
push
and
mov
cmp
loop
fnsave
mov
das
out
fsubp
inc
rcrb
push
dec
adc
js
adc
cwtl
add
jmp
scas
movsb
mov
mov
enter
mov
ja
sbb
cmp
jp
mov
inc
jnp
sbb
xchg
adc
cmpsb
xchg
roll
mov
movsb
cmp
pop
lea
push
inc
cmpsl
scas
sub
jnp
or
sarl
dec
lods
stc
fs
pop
icebp
ret
xor
das
cmp
cltd
sub
ljmp
ljmp
cmc
orb
push
mov
stos
cmp
mov
out
dec
mov
adc
pop
popf
ret
push
lods
pop
fdivl
ljmp
inc
pop
movl
sahf
dec
outsl
jle
lods
mov
inc
sarb
or
sbb
mov
clc
pop
fwait
movl
xorl
jb
imul
jae
test
cld
imull
xchg
aad
fwait
add
daa
or
or
test
aas
xor
xor
or
movsbl
lahf
xor
mov
bound
test
stc
sarl
insl
test
jae
dec
cld
ret
ret
enter
pop
mov
adc
mov
pusha
push
and
das
and
loope
lret
outsb
nop
and
and
pop
or
lock
lods
and
cmp
in
popa
addr16
divl
call
fstps
mov
in
andl
or
add
cmpsl
inc
pusha
in
pop
js
or
sarl
jb
call
in
repz
sub
jmp
enter
ret
jmp
lret
jle
aaa
xchg
mul
popf
push
cmp
in
cmp
mov
inc
roll
xor
hlt
sti
xchg
mov
aam
mov
jecxz
jbe
dec
jne
jmp
popa
push
pop
add
lahf
fisubrl
push
jne
cmp
inc
pop
xor
mov
aaa
push
das
stc
in
inc
fs
nop
xor
cmp
mov
xchg
inc
movsl
jmp
pop
in
pop
mov
mov
xor
xchg
or
out
sbb
jecxz
lock
cmp
jno
aaa
pop
repz
mov
push
cli
jge
iret
adc
movsl
fwait
cmp
mov
inc
pop
aad
jl
push
mov
mov
fbld
pop
or
or
push
aam
lcall
dec
jo
pusha
ja
mov
or
sbb
nop
pop
and
in
fs
imul
inc
xchg
int
jmp
cmp
lret
xor
out
sbb
jge
mov
adc
mov
xor
add
sbb
out
scas
push
lds
push
ret
out
shll
and
scas
jg
xor
cmp
and
cld
iret
lods
jno
cmp
fadds
pusha
sbb
dec
gs
xchg
mov
movsl
out
mov
movsb
mov
arpl
pop
xchg
sub
xchg
mov
std
test
mov
fsubs
ds
enter
fldcw
and
lret
sub
sbb
sbb
pop
lcall
mov
lcall
rcrl
jb
dec
jge
pop
pop
xor
jecxz
scas
xchg
pop
test
movsb
test
movsb
pop
cmpb
cmpsl
mov
lock
scas
xlat
jge
flds
and
and
arpl
lret
push
mov
cs
xchg
adcl
push
divl
imul
mov
loopne
adc
mov
jecxz
mov
inc
adc
mov
dec
mov
rcr
sub
cmp
dec
fucomi
mov
call
push
lahf
movsb
call
dec
test
iret
test
adc
mov
dec
dec
ret
jg
push
cmpb
pop
loopne
add
push
dec
xor
rcll
ljmp
sbb
mov
sarl
sub
ja
adc
sbb
jl
lret
lock
push
out
xchg
scas
pop
and
sub
stos
call
push
xor
sbb
add
mov
mov
or
ret
sbb
test
loop
push
jecxz
outsb
scas
mov
dec
push
cmp
inc
push
and
mov
push
mov
cmpb
lods
jl
jmp
push
mov
mov
xor
fisttps
imul
loop
ss
mov
mov
ds
subl
xchg
mov
cmp
popf
shr
je
and
mov
subl
xchg
insb
mov
fs
iret
mov
repnz
jns
popa
scas
push
xchg
adc
xchg
call
xchg
mov
pushf
test
movsl
call
jge
sub
lea
fildll
mov
aas
cmp
sub
out
jge
repz
and
in
out
dec
jl
mov
cmp
pop
jno
dec
lods
lret
add
pop
sub
icebp
mov
push
push
push
cltd
mov
xchg
pop
push
or
jecxz
sahf
xor
xchg
lods
shll
inc
insb
sbb
fsubrl
roll
sbb
shll
push
js
dec
sbb
sbbl
in
jge
addr16
sbb
mov
adc
push
dec
mov
adc
mov
sub
mov
add
insb
shll
fists
scas
into
lea
notl
cmp
addr16
lret
fldt
fmull
mov
ficomps
sbb
sbb
jns
push
mov
mov
hlt
subb
loopne
cmc
xchg
adc
dec
adc
hlt
or
inc
jo
shlb
jge
jnp
push
int3
jnp
adc
jle
and
rclb
aam
inc
nop
inc
push
lods
inc
mov
and
loop
lahf
sahf
mov
adc
popa
je
mov
xchg
jg
ret
das
adc
les
cmpsl
popa
stc
mov
dec
icebp
lahf
sub
or
fcos
mov
mov
sub
sbb
iret
push
or
jl
mov
xor
icebp
rcrl
xchg
inc
mov
aad
fidivrs
mov
xchg
pop
mov
ss
shlb
js
outsb
pop
add
jecxz
mov
sub
insl
cmp
dec
in
shll
dec
das
push
dec
push
inc
xor
adc
jns
xchg
jae
sub
xlat
jno
fs
push
adc
dec
sti
adc
subl
test
xchg
stc
sbb
repnz
cmp
imull
or
pusha
divb
push
les
adc
xor
leave
pop
jae
sub
xchg
xor
dec
insb
gs
push
inc
and
dec
scas
xchg
out
sub
movsl
push
cmc
call
push
jno
outsl
dec
aam
imul
int3
popf
fwait
push
ret
stos
fwait
mov
aaa
lds
shl
mov
fsubl
movsb
sub
lds
mov
out
sub
add
lods
dec
out
add
les
out
push
sub
sbb
xchg
lock
and
out
add
lea
mov
push
mov
fimuls
mov
cmp
jp
pop
icebp
inc
out
dec
lds
xchg
xchg
and
jo
sbb
push
and
imul
call
xor
test
mov
add
xchg
mov
aas
popa
popa
out
pop
dec
push
cmp
pop
lods
movsb
insl
xor
add
xchg
cli
ljmp
jg
jmp
mov
add
enter
cmp
xchg
jl
sbb
sub
pop
ljmp
inc
add
mov
test
aam
jle
dec
negb
leave
sub
mov
sbb
lahf
mov
push
sbb
jp
jnp
or
mov
add
jae
aaa
std
mov
rcrb
push
sub
pushf
dec
or
bound
test
lds
push
xchg
jns
cmp
mov
jnp
test
iret
push
push
iret
adc
add
adc
cs
xchg
shl
mov
jmp
shrl
add
pop
cmp
mov
push
divl
pop
insl
or
push
cmp
lds
dec
cld
das
push
pusha
cmp
jb
mov
es
nop
sbb
fiadds
addr16
aas
mov
push
xor
push
xchg
fcmovnb
call
pop
xor
mov
sub
leave
cmp
rclb
fstpl
shlb
cmp
sbb
inc
jmp
rcl
arpl
loopne
or
or
jb
clc
mov
leavew
pop
jecxz
sbb
mulb
inc
int
inc
aas
shr
icebp
inc
jecxz
fimuls
cmc
jno
jmp
shll
mov
push
push
bound
jg
in
jo
insb
mov
xchg
ja
sub
xchg
mov
xor
int
mov
xchg
mov
mov
jl
cmpsl
push
push
dec
es
push
inc
xchg
lret
jns
xor
rolb
lods
add
dec
mov
push
clc
adc
push
push
sbb
inc
lock
xchg
and
test
mov
out
in
dec
mov
and
rcr
imul
stos
dec
inc
rorl
adc
popf
arpl
aad
xlat
push
inc
cmp
mov
insb
pop
inc
adcb
xchg
pop
aas
adc
es
xchg
and
push
sbb
push
lods
test
clc
out
into
rcr
push
xor
pop
mov
adc
fistps
dec
mov
dec
shl
cmpsl
ret
leave
lods
addr16
push
sub
movsb
dec
shr
ljmp
adc
cmpb
inc
js
jle
lret
repnz
pop
mov
dec
sbb
cli
xchg
cmpsl
add
loope
pop
dec
mov
cli
imul
mov
pop
mov
iret
sbb
mov
stc
fwait
stos
cmp
call
adc
jbe
lock
lret
sub
xchg
or
xor
lds
and
inc
inc
scas
in
mov
fisubl
sub
inc
dec
fwait
mov
enter
pushf
sti
and
or
push
inc
sub
adc
jns
dec
test
popa
data16
outsb
divl
fcmovb
mov
repz
cmp
push
pushf
leave
push
or
adc
pop
xchg
cltd
mov
adc
lcall
mov
mov
mul
out
imul
or
loope
sti
lret
jne
call
std
call
push
cmp
pop
nop
mov
sti
pmulhuw
adc
movsb
insb
and
jl
addl
das
xchg
fildl
xchg
in
push
sub
mov
and
rorl
jae
andb
fnstsw
cltd
and
nop
sub
loopne
lods
mov
ds
cmp
in
cltd
mov
sbb
pop
roll
fs
cmp
or
or
sub
je
ljmp
and
roll
cmp
jns
mov
test
std
ja
nop
inc
pop
testl
out
and
mov
jl
pop
sub
mov
pop
enter
mov
sbb
xchg
inc
call
out
hlt
cld
hlt
xchg
push
shr
jecxz
mov
fidivs
lahf
sub
push
ffree
mov
scas
add
xchg
sub
mov
stc
adc
hlt
cmpsb
xchg
mov
aas
pushf
outsb
leave
mov
mov
and
lcall
orl
ds
cmp
adc
out
outsb
push
xchg
dec
push
push
loopne
and
cmpl
push
push
sub
aam
fistps
adc
loop
in
mov
or
inc
pusha
mov
push
out
or
and
stc
and
jmp
mov
mov
pusha
je
into
mov
cmp
int
jo
test
iret
fcoml
sbb
pop
xchg
adc
adc
xor
push
pop
cmpsb
mov
lea
xchg
add
adc
mov
cmp
insb
mov
popa
mov
stc
mov
dec
aam
lods
out
fdivrs
dec
push
fsubl
sbb
jne
lahf
adc
or
fcmovnu
stos
push
aas
mov
loope
fs
add
pop
orl
imul
or
ja
sbb
mov
out
imul
dec
mov
aad
sti
push
daa
jge
sbb
xchg
push
ja
jno
pop
xchg
or
mov
pop
sub
test
sbb
add
cmpsl
mov
add
jo
in
mov
lock
insb
adc
sti
or
jp
rclb
rcrb
inc
pop
push
addr16
push
jo
lcall
mov
test
push
cmp
imul
je
sbb
add
mov
xchg
add
sub
pop
add
push
es
je
inc
mov
ret
lods
sbb
inc
xchg
out
add
mov
rcrl
mov
xchg
iret
sub
xor
pop
xor
and
mov
sarl
out
je
negl
jmp
outsl
adc
notb
or
jo
ret
inc
adc
adc
inc
xor
in
movsb
lea
cmp
out
pop
inc
push
inc
das
cmp
stos
loope
jmp
xchg
push
mov
xor
subl
add
or
xor
cmp
mov
pop
int3
cmp
cmc
das
adcl
jp
std
xchg
inc
ficomps
push
mov
dec
iret
loop
ja
push
cwtl
pushfw
push
aaa
dec
or
pop
add
mov
cmc
rcrb
pop
pop
mov
js
jo
hlt
clc
jbe
inc
rorb
aam
pusha
adc
imul
mov
push
pop
push
adc
outsb
fiadds
mov
jp
cmp
inc
jl
scas
lods
inc
sbb
sub
push
xor
jg
stc
in
jne
mov
mov
fdivl
fwait
sti
pop
nop
add
or
sbb
lret
and
pop
clc
or
mov
sub
xlat
enter
jg
test
push
mov
fcoml
jne
call
repz
lods
mov
sbb
push
push
call
or
push
or
jmp
add
xchg
jl
divl
xor
dec
mov
stc
arpl
ljmp
sub
test
xchg
sub
std
jle
je
pop
lcall
pop
lretw
les
xor
inc
mov
and
cmp
cwtl
mov
or
sbb
movnti
cmpsb
inc
cmp
xchg
sub
fcoml
filds
fsub
cli
aas
movsl
push
jne
inc
sub
cmp
mov
sbb
sbb
in
into
or
dec
mov
dec
sub
xchg
push
pusha
sbb
xor
outsb
push
rorl
mov
cmpsb
push
or
nop
int
jne
cmp
mov
jl
les
adc
lods
xor
mov
xor
mov
movsl
mov
and
ret
insl
lds
out
movsl
sti
mov
dec
jmp
inc
pop
jbe
and
add
sti
test
pop
sub
imul
dec
mov
les
push
fstps
int
lret
or
cmpsb
xchg
jb
pushf
rclb
push
or
inc
mov
add
les
jne
push
mov
inc
das
shl
shl
xchg
sub
push
aad
orl
out
pop
mov
jecxz
inc
popf
addr16
xchg
mov
push
lcall
out
lds
sti
mov
test
hlt
jbe
and
enter
stos
adc
mov
insb
inc
push
test
outsb
cmpsl
sahf
test
cmp
jecxz
pop
test
imul
xchg
hlt
enter
lods
cmc
pop
or
sub
js
ja
frstor
shlb
jl
and
mov
xor
xor
add
jo
sti
and
pop
jmp
pop
adc
loop
or
adc
mov
jp
pusha
loopne
adc
seto
test
adc
mov
cmpsb
pusha
fld
jge
decb
dec
loope
lods
adc
mov
insl
lods
add
jmp
mov
lcall
hlt
cmp
shll
cmp
fcom
shl
pushf
int3
loope
aaa
push
adc
out
cld
pop
mov
aad
jb
fisttpll
mov
push
fstl
or
dec
xchg
cmc
xchg
dec
pop
insl
into
aad
push
pop
testb
hlt
add
lret
inc
jae
mov
xchg
rcrb
sub
dec
movsb
cmp
pop
cmp
xor
cmp
and
adcb
sbb
test
dec
pop
adc
or
mov
mov
mov
fimuls
dec
fs
fistpll
repnz
out
jnp
gs
adc
xchg
cmp
add
call
clc
ljmp
cmp
xchg
sub
push
xchg
fisubs
int
mov
outsb
jmp
aam
out
mov
ret
dec
adc
dec
push
cmp
xchg
dec
sub
test
es
mov
in
xchg
loop
push
sbb
sub
out
add
shlb
rcr
dec
cli
mov
mov
das
dec
daa
gs
scas
mov
pop
fmull
or
cs
cmpsb
inc
jnp
and
popa
push
sbb
lock
aam
xor
cmpsb
aad
adc
inc
es
push
imul
andb
xchg
insb
and
stc
sub
inc
or
lsl
jns
mov
pop
push
mov
test
sbb
shll
icebp
push
inc
xchg
stos
icebp
add
and
mov
cmp
fstpt
insl
in
nop
lret
dec
jmp
sbb
addr16
lds
xchg
sub
xchg
subb
xlat
jmp
out
and
stos
sub
xchg
jl
push
mov
fcompl
dec
test
mov
js
cltd
arpl
inc
mov
jmp
frstor
aad
adc
dec
call
cmp
sbb
mov
sbb
sub
sub
push
or
dec
fs
cltd
out
sbb
xchg
pop
mov
and
push
lods
scas
sub
das
fwait
mov
scas
cmp
add
hlt
inc
jmp
adc
insl
push
xor
stc
loop
enter
sti
sbb
sub
xor
addr16
xor
add
test
adc
xlat
aam
fcmovb
cmp
and
push
sti
jbe
popf
adc
and
imul
pop
push
jle
pop
and
pop
jmp
les
stc
pop
jg
xor
mul
adc
inc
mov
jnp
mov
aaa
popa
push
pop
jno
or
pop
add
lods
fisubrl
sbb
stc
jle
scas
xor
mov
dec
enter
cmp
pop
outsl
mov
call
into
jg
push
mov
fdivrl
sub
mov
and
xchg
loop
lock
outsb
mov
dec
sub
mov
sbb
out
push
clc
je
and
lds
cwtl
mov
add
xchg
or
jae
popf
insb
ljmp
lret
clc
or
sub
icebp
lea
inc
js
push
adc
adc
mov
scas
cmc
outsb
push
pop
adc
into
and
adc
fcomp
mov
pop
movsl
mov
mov
push
pop
popa
push
dec
js
mov
lcall
mov
push
test
sti
cli
pop
inc
xchg
ud1
repnz
mov
lret
xchg
fimuls
mov
nop
cmpl
aaa
paddb
sub
lods
cmp
je
fistpll
or
push
les
inc
mov
in
or
stos
pushf
scas
pop
pop
daa
mov
pushf
adc
jmp
push
fsubr
mov
mov
lahf
add
stc
mov
push
lcall
cmpl
dec
iret
sbb
xchg
xchg
jle
fsubrl
repz
or
es
fiadds
outsl
insl
shr
jns
xchg
lcall
gs
add
imul
stc
adc
or
jns
xchg
out
cmc
aad
cmpl
cmp
inc
xor
dec
out
imul
pop
xchg
cwtl
icebp
xchg
jg
push
mov
mov
arpl
mov
cmp
pop
jbe
stos
xor
and
daa
mov
or
or
jmp
fisttpll
inc
push
dec
pop
lcall
jge
aam
orb
xor
and
test
sbb
stc
and
sti
and
leave
test
lahf
test
mov
sahf
and
jmp
arpl
jns
mov
lds
xor
push
arpl
dec
stos
sbb
frstor
sub
cmp
adc
aam
mov
lahf
xor
cmp
addr16
push
rolb
sahf
scas
dec
dec
orl
call
mov
jg
gs
es
add
mov
push
xor
mov
mov
or
pop
daa
inc
sbb
iret
xchg
aas
dec
out
leave
aad
movsb
add
sbb
xlat
leave
push
rcrb
js
sbb
fidivrl
out
push
cmp
insb
jne
daa
mov
dec
rsqrtps
test
cli
xor
js
mov
or
jp
inc
int
daa
jnp
addr16
bound
idivb
push
sub
test
aas
or
cmp
add
dec
mov
mov
mov
popa
mov
inc
adc
and
in
js
inc
test
and
inc
xlat
or
adc
dec
add
lret
int3
out
xchg
xchg
into
and
lret
push
push
int
adc
fucomp
ja
fnsave
xlat
xchg
mov
daa
rolb
and
popf
jg
push
outsb
or
push
xchg
daa
or
xchg
sub
lods
push
mov
push
fwait
cwtl
mov
enter
add
pop
cmpl
insl
loop
in
push
in
fs
inc
sub
dec
pop
fsubl
cld
lcall
adc
test
mov
call
xor
fisttpl
sahf
fadd
sbb
push
hlt
bound
mov
mov
movsb
dec
icebp
ds
stos
aad
js
dec
add
pause
sbb
enter
into
or
lret
fcomps
jnp
insl
scas
xchg
jnp
aas
fldl
sub
ja
fldenv
mov
cli
repz
aaa
inc
out
cmc
decb
sub
inc
roll
faddp
lret
pop
rolb
sbb
clc
repz
std
mov
add
mov
adc
sbb
shlb
cmpsl
scas
mov
xor
testl
es
mov
lock
sub
mov
jp
gs
and
decb
test
fbld
popa
loop
jl
insb
in
pushf
pop
sysenter
gs
loop
inc
cmpsb
jbe
dec
pusha
out
sub
ret
inc
stc
mov
dec
pop
loop
stc
or
and
lods
inc
lds
pop
adc
push
push
jae
das
add
ret
and
mov
and
inc
nop
repnz
in
mov
xchg
xchg
or
js
jecxz
repnz
xor
jge
pushf
pop
cs
ss
ja
push
xlat
jmp
mov
out
shlb
push
ret
xchg
lcall
mov
clc
cwtl
sbb
push
mov
repz
xchg
rep
loop
ss
xor
das
add
rcrl
pop
xor
cmpsb
orl
pop
out
out
mov
lods
out
mov
jo
pop
sub
sbb
in
fisubs
repnz
cmpsl
in
xchg
jne
arpl
ss
outsb
cmp
cmpsb
cmp
es
ljmp
cmp
test
sbb
in
jmp
and
xor
mov
and
mov
lret
and
mov
dec
mov
fs
out
imul
jmp
pop
bound
pusha
int3
mov
or
int3
lea
push
test
jg
ljmp
icebp
mov
outsl
adc
push
mov
pop
sub
int
mov
pop
loope
cld
mov
xchg
mov
je
cmp
jp
repnz
fsubrl
adc
cmp
inc
sub
adc
add
xor
dec
addr16
sarl
sub
mov
or
fcoml
imul
in
push
xchg
mov
dec
loopne
push
sbb
cwtl
fidivrs
repnz
pop
cltd
or
test
jp
xchg
and
rclb
mov
sub
jbe
and
mov
jmp
mov
pop
fcmovnbe
fcmovb
sbb
jle
dec
add
xchg
insb
push
lods
bound
inc
dec
pop
jp
lds
add
int
loope
rclb
cltd
pop
mov
iret
fisubrl
out
jge
repnz
test
mov
jne
dec
xlat
mov
mov
mov
hlt
pop
inc
inc
xchg
int
imul
cs
xchg
call
jns
mov
inc
inc
add
jae
sbb
clc
lods
xchg
jbe
xchg
fadds
iret
lret
cwtl
arpl
in
mov
jne
cwtl
lahf
jl
movsb
stos
mov
rclb
or
sub
in
xchg
mov
add
daa
hlt
inc
jo
add
stos
mov
icebp
call
les
ds
in
dec
push
arpl
mov
sub
add
cwtl
repnz
add
cmp
into
lret
cmpsl
and
sbb
mov
in
outsl
in
mov
cmp
dec
jb
or
mov
divl
sub
je
fsubl
hlt
inc
call
xchg
int3
xlat
push
cmpsl
mov
xchg
push
inc
cmc
in
mov
lret
in
jge
mov
pushf
pop
mov
insl
lret
lock
add
mov
fcompl
inc
push
es
and
sbb
sahf
fs
or
arpl
idivb
ret
shrb
lcall
push
rclb
pop
cmp
xchg
aam
jbe
movsb
jns
sub
and
xchg
push
push
or
and
push
xor
cld
sahf
jae
into
fdivs
mov
inc
decb
mov
cli
jp
test
jne
xchg
sbb
push
sbb
cmp
pop
mov
gs
pop
in
mov
pop
loopne
cld
ds
push
mov
fnstsw
les
mulb
mov
in
xchg
std
xchg
mov
popf
pusha
or
popa
aaa
and
xor
arpl
bndldx
sbb
cmp
into
cmpsb
and
xchg
movsb
cmp
sbb
add
jg
sbb
out
xchg
or
jecxz
mov
stc
in
repnz
lret
xor
jg
pop
mov
inc
cmpl
pop
xor
inc
mov
cs
idivb
add
push
sbbb
adc
sub
mov
jbe
pusha
inc
add
inc
repz
push
imul
sbb
push
push
push
repnz
mov
insl
xchg
scas
mov
cmp
pop
jl
xor
popf
shll
es
mov
leave
repz
sbb
jne
fdivrl
pushf
jle
add
fucomi
mov
mov
jnp
leave
cltd
pop
fs
mov
mov
or
cmp
and
pushf
pop
mov
mov
adc
cltd
out
pop
dec
jge
jecxz
fsub
mov
inc
mov
lds
jl
inc
scas
jle
out
and
mov
notb
jge
xchg
xchg
jbe
imul
shlb
push
repz
adcl
in
pop
int3
push
inc
test
push
aam
xorl
arpl
dec
in
mov
inc
mov
mov
push
adc
pop
repnz
and
mov
repz
adc
adc
push
sub
xchg
lea
mov
xor
xchg
movsl
push
mov
xor
outsl
inc
repz
dec
sbb
sub
repz
xchg
scas
mov
or
pop
xchg
test
decb
push
test
xlat
xchg
cmp
dec
popa
add
in
or
dec
xor
xchg
repz
jecxz
sar
ret
adc
scas
daa
and
repnz
in
fimuls
out
xchg
mov
add
pop
inc
mov
cmc
cmpsl
sub
rol
lcall
jno
pop
fnstcw
jae
or
push
stc
hlt
jg
clc
inc
mov
popf
fcompl
dec
xchg
lahf
mov
ret
insb
jno
aas
ds
andw
repz
cmp
lret
rcrl
aaa
or
sub
test
add
in
cli
sti
push
mov
mov
sbb
in
stos
nop
outsl
movsb
jge
dec
test
int3
cwtl
lcall
das
mov
subl
fistpl
jp
testb
mov
fcoms
loop
pop
pop
pushf
jno
mov
push
xor
adc
add
lcall
and
fsubrl
xor
mov
lock
dec
shlb
dec
outsl
sbb
cli
xchg
jae
cmp
and
pop
adc
test
gs
mov
sbb
bound
dec
sbb
lea
dec
sahf
lcall
ret
mov
pop
lods
xlat
sbb
scas
xor
add
in
pop
fidivrl
ret
add
push
sub
pop
xor
xchg
cmp
fwait
inc
mov
pop
xchg
dec
lcall
mov
sbb
ss
mov
fcompl
gs
in
test
adc
cmp
cli
pusha
jbe
mov
bound
mov
push
shr
cmpsw
mov
stos
lret
fucomp
mov
out
push
in
imul
adcb
loope
mov
jl
sahf
sbb
in
lret
push
arpl
fwait
mov
shrb
or
pop
dec
mov
in
mov
cmpl
push
into
push
aaa
add
mov
out
leave
dec
push
enter
sub
addr16
es
xor
sti
mov
loopne
ret
mov
rorb
mov
xchg
outsl
pop
cmp
or
cmp
sbb
in
sbb
mov
out
and
imul
mov
int
pop
jne
jnp
xor
decb
mov
cmp
cmp
mov
fcomp
scas
xor
stc
rcll
inc
repnz
loop
pushf
push
shlb
dec
xchg
clc
pop
and
mov
test
fs
dec
add
jbe
pop
nop
mov
outsl
adc
mov
and
outsl
add
dec
leave
sbb
data16
xor
test
test
mov
jmp
lea
repz
jecxz
cmp
bswap
sbb
inc
cmp
test
bound
cmp
sub
call
xchg
stos
mov
sub
jae
inc
add
pusha
push
sub
repnz
js
popa
push
out
cld
icebp
xchg
insb
mov
mov
push
lret
cmc
push
jo
add
xchg
sbb
inc
adc
mov
mov
lret
insl
das
mov
mov
sbb
dec
jl
aad
or
or
cmp
subl
push
test
mov
cmp
xor
adc
add
sub
outsl
inc
arpl
stos
pop
addb
cmp
adc
xchg
dec
stc
jmp
pop
scas
test
jg
out
and
sbbl
scas
push
mov
xor
xchg
ljmp
xchg
and
jo
out
push
outsl
aas
addl
cli
jl
test
xchg
push
jl
out
pop
in
add
int
xor
add
cmp
mov
lods
gs
pop
ficoms
pop
adc
mulb
push
subb
lahf
pop
mov
adc
jp
pop
xchg
fwait
icebp
adc
jns
sbbl
mov
or
ret
fwait
leave
pop
dec
pusha
jb
inc
dec
dec
incb
sbb
or
sub
jns
shl
sbb
stos
and
adc
or
fsubl
sbb
inc
addl
out
lods
sub
in
ja
xor
sbb
xlat
into
sub
lea
fdivl
mov
or
xor
push
sbb
adc
pop
mull
rorb
mov
cmp
sbb
and
or
cmp
call
jb
test
subb
sub
pop
cld
arpl
mov
jnp
mov
push
dec
aaa
jno
xchg
outsb
sbb
jecxz
insl
mov
push
out
sbb
mov
loope
fisttpll
js
cmc
mov
sahf
sbb
ror
pop
das
enter
push
stc
mov
and
ljmp
mov
js
push
cmp
pop
inc
cmpb
xor
leave
dec
jae
xor
jle
aas
mov
rclb
lret
pop
inc
test
rcll
lret
orb
mov
xchg
mov
or
mov
hlt
rcrb
mov
jecxz
and
push
jnp
or
pop
scas
test
mov
rcrb
ror
dec
loopne
cmp
cmpsl
ret
sbb
sti
sbb
shll
sub
pop
inc
or
xlat
fcomi
pusha
sbb
test
aas
xor
cmp
push
lods
sub
mov
cmc
leave
stos
aad
adc
ret
ret
add
fisubl
and
push
mov
mov
nop
sbb
push
inc
adc
mov
push
fsubr
daa
push
add
test
mov
imul
scas
jmp
mov
xchg
out
subl
mov
and
push
mov
mov
cmp
cld
gs
mov
fistl
xchg
loope
dec
aas
add
mov
jecxz
xor
cmpb
fcmovnb
insb
sbb
jg
test
xor
mov
iret
and
cmpl
clc
imulb
xchg
lcall
mov
icebp
rorb
cltd
ror
pop
mov
sbb
leave
mov
cwtl
jg
repz
imul
sub
test
jne
push
mov
sub
int3
int
pop
xor
mov
push
aaa
dec
inc
js
lahf
and
in
jb
test
fstps
sbb
mov
jle
nop
dec
xor
les
dec
mov
dec
or
push
imul
out
push
test
dec
rcrb
dec
xor
xor
push
scas
inc
mov
cwtl
out
xchg
js
cmp
xor
adc
xor
ljmp
sbb
call
in
adc
fwait
inc
dec
bound
mov
inc
inc
sbb
pop
stos
mov
mov
mov
xchg
iret
jge
pop
xor
repz
pop
lcall
mov
into
inc
xchg
or
add
pop
aam
lea
stos
outsb
lahf
or
pop
mov
and
dec
iret
into
xor
les
push
or
inc
adc
adc
loope
pushf
lods
fs
rol
movsl
sub
shrl
adc
mov
dec
push
jge
sbb
stos
xor
pop
pop
fwait
jge
lret
xor
insb
push
fldt
out
mov
daa
mov
mov
mov
mov
sbb
pop
sub
scas
pop
xchg
out
lret
pop
mov
add
pop
aaa
fnstcw
retw
cltd
push
dec
mov
lods
mov
call
ds
cmpsl
xchg
mov
aaa
jmp
leave
dec
xchg
sbb
or
into
in
and
or
mov
aas
les
popa
and
sub
sbb
jl
or
cmp
push
stos
mov
std
aad
inc
add
push
notb
inc
and
sub
mov
stc
add
lods
mov
inc
leave
adc
push
jae
push
pop
xor
popa
pop
inc
insl
subl
out
outsl
xchg
mov
mov
fs
roll
mov
test
sbb
mov
lods
fldt
mov
pop
dec
jno
aad
add
cs
out
movb
test
fmul
add
mov
cltd
test
jae
mov
sbb
inc
xchg
push
mov
gs
stos
mov
popf
fimull
es
mov
sar
push
dec
sarb
nop
fcom
push
inc
fdivs
mov
mov
inc
sti
dec
into
mov
xor
inc
addb
push
dec
aaa
lods
jg
adc
mov
adc
and
and
adc
pop
sub
ss
xchg
xchg
scas
in
nop
negl
mov
ljmp
or
movsl
xchg
cmp
int
jle
pop
insb
push
add
iret
mov
std
fs
sahf
sub
sbb
cmp
ss
test
icebp
jb
cld
scas
js
pop
popf
inc
adc
or
rcrl
data16
mov
inc
popa
xor
and
call
jnp
shlb
movsb
mov
fs
xchg
loop
arpl
mov
or
call
insb
inc
inc
or
fnstcw
or
enter
insl
xor
jb
sub
insl
out
in
push
or
ds
sub
int
testb
add
add
pushf
cltd
push
jo
xor
cld
inc
lret
cwtl
lock
xor
out
cli
mov
push
sbbb
out
out
jl
xlat
outsb
dec
popf
cmp
inc
dec
add
outsb
aaa
xchg
test
jecxz
inc
mov
repnz
out
jmp
ret
jg
inc
into
movsl
or
push
ret
loopne
test
imul
gs
or
or
je
stos
push
icebp
ja
inc
xchg
sbb
cmc
aaa
dec
mov
lret
scas
test
or
sar
stos
sub
sbb
add
cmpsb
stc
in
out
or
fwait
cmp
mov
pop
movsb
fsubrl
adc
stos
or
fldcw
nop
sub
std
cwtl
inc
mov
mov
jno
insl
and
mov
mov
fs
out
out
fldt
push
mov
addr16
push
or
hlt
inc
mov
add
jle
sbb
mov
movsl
pop
cmp
sbb
inc
dec
and
in
aam
jg
or
push
lea
push
or
lock
mov
lods
pop
cmp
sub
mov
inc
cwtl
loop
xchg
adc
lods
mov
mov
sarl
jge
in
leave
and
cmc
stos
cld
out
xchg
or
inc
dec
ds
addr16
rcll
andb
xchg
mov
dec
mov
jge
les
dec
repz
xor
jo
jns
add
xchg
inc
fnsave
sbb
lahf
aad
call
mov
insb
scas
jno
cmp
pop
mov
dec
xor
dec
out
sub
bound
stos
push
aam
lds
sbb
mov
test
push
xchg
mov
and
clc
mov
dec
jl
or
cltd
or
es
loop
lds
jo
inc
pop
cltd
shll
cmpsl
and
add
repz
imul
roll
sub
lds
or
mov
jg
xchg
jnp
js
xor
arpl
push
dec
pusha
dec
lahf
dec
and
mov
mov
inc
mov
out
mov
mov
mov
xor
daa
inc
cmp
xchg
call
push
out
stos
mov
aaa
mov
pushf
js
das
mov
repnz
inc
bnd
xor
mov
pop
sbb
int
lcall
jnp
ljmp
dec
lahf
cmpsl
adc
xor
sub
lods
ljmp
std
dec
sbbl
jbe
mov
jl
jbe
xchg
pop
mov
inc
and
xor
cmc
dec
add
ss
loope
outsl
loop
movsl
test
in
push
cmp
repnz
cmc
dec
xchg
or
cld
lods
mov
movsb
popa
xchg
std
sbb
sbb
mov
cli
loopne
mov
daa
jb
insb
hlt
dec
mov
pop
mov
aas
fsts
push
call
jecxz
lret
lea
aaa
nop
ja
clc
xchg
daa
dec
stos
jnp
fwait
sbb
scas
loope
lds
push
pop
add
add
and
mov
sbb
pop
sbb
sub
jle
ja
jae
push
fwait
repnz
sub
subb
pop
adc
cmp
lret
jg
mov
xchg
mov
int3
fdivrl
sub
or
dec
fisubrs
cs
fistl
ljmp
insb
mov
mov
aam
ds
push
ret
jno
xchg
mov
in
mov
popf
mov
cmp
jg
sub
xchg
mov
mov
push
xor
cs
out
push
push
cld
pop
push
add
or
scas
adc
mov
inc
push
xchg
adc
aaa
rorb
jnp
into
pop
mov
cmc
les
push
add
nop
lock
pop
sbb
jecxz
push
aad
imul
adc
mov
scas
jb
push
imul
adc
xchg
cmp
mov
or
pop
xchg
mov
cmp
scas
test
js
loopne
out
dec
pop
pop
mov
push
imul
push
fmuls
scas
fisttpl
subb
xchg
mov
sbb
loop
cltd
jg
fstl
stos
repz
mov
loopne
hlt
insb
and
cmp
or
mov
jge
sahf
dec
fcompl
lds
sub
and
pop
dec
inc
in
leave
fisttps
cs
in
pop
mov
adc
push
insb
iret
xchg
inc
dec
inc
mov
pop
dec
rorb
push
test
js
push
xor
cmp
lods
fldl
mov
mov
pushf
in
xor
cmpsb
sbb
faddl
mov
lds
xchg
roll
call
sub
xor
sbb
sbb
jbe
loop
sbb
or
ss
ljmp
sub
shrl
pop
sbb
in
sub
jne
nop
push
xchg
mov
mov
repz
sub
ja
andl
js
pop
push
loop
out
and
in
mov
cmp
fbstp
sbb
stc
test
push
cmp
arpl
mov
push
jbe
mov
es
mov
xorb
and
sbb
mov
incb
mov
mov
and
cli
arpl
sbb
dec
xchg
in
jge
jle
bound
mov
or
imul
xchg
push
sbb
cmc
cmc
push
mov
fs
mov
mov
ja
cmp
iret
cli
add
cmp
add
and
cmp
je
jb
xor
jbe
xor
mov
ja
cmpsl
add
dec
scas
sub
mov
rcrl
les
fistpl
inc
push
xchg
hlt
shll
mov
xor
adc
fs
push
mov
jnp
fsubr
push
jb
inc
mov
push
test
mov
xadd
sub
out
stos
lds
adc
sub
pop
das
test
push
cmp
sbb
lods
outsl
scas
lcall
lcall
mov
repnz
jnp
in
adc
sbb
aam
mov
jmp
call
sbb
lock
xchg
push
push
jnp
icebp
push
popf
dec
add
add
mov
sub
repz
into
inc
ret
ret
divb
sub
add
rorl
sbb
push
pop
into
out
or
push
insl
aaa
ret
iret
inc
gs
mov
inc
test
out
cmp
rcrl
dec
aam
out
cwtl
cmpsl
dec
add
push
iret
outsb
pop
sub
xchg
ja
repnz
outsb
lea
xlat
dec
cmc
xor
ss
repz
add
aad
xchg
insl
hlt
out
mov
push
adc
cmpsb
push
or
decb
jo
add
shll
insb
sbb
xchg
push
mulb
xchg
ja
and
sub
push
pop
pushf
bound
pop
lcall
or
sub
push
push
cs
or
push
inc
inc
fwait
or
mov
paddsw
les
and
enter
fcompl
rcl
sahf
mov
jg
xchg
push
in
mov
and
jo
ret
rcl
mov
mov
enter
cmpsl
addr16
ds
cmc
out
stc
push
dec
loopne
adc
cld
fdivl
push
mov
test
iret
dec
mov
or
or
jmp
jno
xchg
push
aam
aad
enter
mov
xchg
fwait
add
adc
jb
sbb
js
hlt
jbe
inc
cld
sahf
rcrb
jle
lret
aaa
movsb
insb
push
roll
aam
divl
pop
enter
sar
xchg
iret
xor
pop
and
pop
and
mov
jo
fidivl
jns
repnz
lock
sbb
loopne
jns
adc
and
adc
push
outsb
xor
jo
cmpsl
lcall
add
mov
add
test
adcl
push
in
test
shl
sub
and
cmpsl
fmull
mov
pop
jmp
pop
pop
and
and
sub
mov
fldcw
das
cmp
jmp
jb
add
ret
dec
push
adcl
mov
jns
mov
add
notl
dec
sub
jbe
push
mov
cmp
sbb
andl
data16
in
int3
fstpt
out
add
sbb
sub
jle
mov
je
push
sbb
movsl
int3
mov
cmp
stos
js
loopne
arpl
inc
jb
fucom
xor
fistl
icebp
subb
inc
leave
test
xor
aad
mov
mov
jo
jle
sub
fnstenv
popa
adc
and
icebp
mov
inc
mov
stos
mov
xor
adcb
push
xlat
mov
popf
sbb
xchg
push
setne
add
fucomip
jne
outsb
ljmp
sbb
cwtl
pop
int
sbb
mov
xchg
test
xor
nop
sub
push
ljmp
ja
mov
clc
cmc
or
in
mov
popf
mov
mov
mov
lds
or
aas
sub
lcall
cli
push
lahf
jle
dec
cmp
cmc
jnp
jle
fisubrs
or
aaa
jmp
arpl
stc
lcall
into
xchg
aad
dec
jnp,pn
sub
xorb
sbb
cwtl
lods
push
shll
es
dec
int3
and
jge
mov
sub
shll
cltd
mov
mov
leave
icebp
cmp
movsb
add
jge
xor
inc
inc
inc
jmp
inc
test
and
adc
mov
xor
and
mov
dec
dec
xchg
sbb
push
jnp
nop
mov
dec
rcr
imul
dec
dec
push
sbb
xchg
cmpsl
ja
clc
jne,pn
dec
mov
mov
lods
pushf
test
mov
fiadds
in
lea
jbe
sbb
leave
pushf
mov
inc
jne
mov
push
sub
ljmp
fs
mov
sbb
nop
gs
mov
inc
fs
jle
dec
sbb
sarb
or
ljmp
mov
mov
lods
adc
sub
jp
aas
imul
add
movsb
xor
xchg
xor
clc
pop
out
jmp
cmpsb
arpl
push
es
dec
or
mov
js
cmp
test
xorl
xchg
push
pop
cmp
sub
pop
scas
mov
pop
dec
cmpsl
sti
jg
js
in
ret
je
and
in
xlat
insb
xchg
xchg
add
xor
jbe
mov
xor
mov
imul
xchg
scas
movzbl
stos
jl
adc
and
cmc
cmp
cmp
jbe
xchg
mov
xor
sbb
inc
push
test
outsl
push
xchg
rol
push
sub
fstpt
stc
xchg
xorl
jns
aad
inc
jbe
fs
inc
cmp
mov
dec
out
and
xor
daa
dec
push
int
or
fs
lods
dec
jge
xlat
lea
inc
idivb
push
dec
sub
lahf
mov
xchg
es
mov
sbb
adc
dec
dec
adc
push
mov
lcall
and
loop
push
xor
fnstenv
imul
ret
dec
setle
inc
out
or
outsl
cmc
fisubrl
gs
es
jg
movsb
cli
cmpsb
negb
aaa
std
mov
push
loopne
mov
mov
mov
cmp
lods
xor
inc
rcll
dec
stos
sub
xor
xchg
sub
inc
sbb
pop
dec
mov
iret
sub
aas
adc
in
cmp
dec
negl
and
mov
jp
jbe
mov
sbb
lods
lcall
or
pop
and
in
mov
sub
loope
loopne
fsub
test
mov
loopne
mov
dec
jl
add
pop
xchg
push
faddl
test
cltd
dec
in
sub
xchg
outsb
jge
stos
fucomp
and
in
jns
or
lcall
or
pop
ljmp
jmp
in
or
inc
and
add
mov
ds
cmp
dec
xor
filds
inc
xor
mov
in
sbb
and
sarl
cs
cwtl
lods
jmp
repnz
push
add
mov
mov
pop
sub
cld
nop
pop
xchg
mov
in
pop
jge
and
shr
rcll
repz
repz
scas
xor
in
adc
cmp
push
ja
loope
test
and
and
int
xchg
mov
mov
jno
jb
fwait
xor
lahf
pop
shlb
cmp
jns
lods
in
mov
mov
rorb
cs
int3
mov
shl
inc
or
pop
push
pop
test
pop
iret
ljmp
mov
stos
mov
popa
aam
fisubrl
sbb
or
mov
add
cmc
and
sbb
fcomi
mov
lods
sbb
scas
data16
pusha
cmp
inc
mov
aas
sub
inc
test
adc
adc
aaa
push
sub
push
dec
divb
loop
jns
dec
mov
xchg
pop
mov
cs
jp
pop
cli
pop
and
or
idivb
movsl
or
loopne
xchg
dec
and
lret
arpl
mov
push
mov
push
inc
mov
cmp
inc
idivl
push
xchg
xchg
sti
xor
and
mov
popa
icebp
push
sahf
or
xchg
push
ds
cmpsl
lcall
aaa
lret
in
sub
bswap
lds
or
sub
int3
mov
std
rcll
mov
xor
pusha
adc
sub
rolb
push
dec
fstp
dec
idivb
iret
jo
je
or
test
outsb
sbb
mov
jecxz
inc
popa
push
les
lret
xor
aam
sub
adc
pop
mov
inc
sub
pop
mov
sbb
pop
out
rcll
iret
mov
lock
sahf
sub
add
jae
mov
loopne
push
repz
pop
push
dec
loop
ljmp
and
or
insb
cmpsl
mov
and
pop
mov
sahf
shll
mov
pop
daa
pop
in
in
ja
jns
jne
int
in
popf
adc
or
xchg
gs
shlb
hlt
mov
xlat
push
aad
dec
sbb
adc
sub
pop
mov
dec
jns
mov
popa
jno
xor
imul
adcb
sub
repz
jb
xchg
xchg
fs
test
test
cmp
imul
cmpsb
jmp
insb
pop
push
mov
inc
pusha
fiadds
adc
fldcw
add
pop
lret
dec
push
andb
stos
mov
jb
shrb
popa
je
scas
data16
les
add
jl
inc
cmp
jp
dec
cs
jne
dec
hlt
or
popa
mov
xchg
xchg
iret
mulb
pusha
fcompl
jmp
es
jg
data16
ds
sbb
repnz
push
mov
in
and
dec
dec
mov
es
sub
sbb
cmp
fiadds
dec
inc
inc
mov
mov
leave
push
mov
arpl
addr16
mov
lock
xor
mov
jp
in
lock
jns
outsb
test
cmpsb
dec
push
out
mov
mov
add
es
lock
das
add
sub
lods
es
pusha
cmp
test
cmpsl
mov
sbb
push
mov
insl
mov
ret
sarb
push
ljmp
dec
push
cmp
fsubrl
idivl
cli
cmp
inc
inc
xchg
cli
adc
mov
inc
test
xchg
outsb
adc
push
hlt
arpl
mov
or
stos
in
xchg
pop
mull
mov
cmpsb
adc
fcompl
jp
xchg
mov
xlat
mov
cmpsl
fisubrl
call
cmpb
xlat
mov
xchg
xor
or
jl
cltd
mov
inc
not
mov
lcall
enter
les
jbe
jb
jno
scas
lret
daa
test
stos
outsl
add
inc
into
sti
and
cmp
lret
movsb
sbb
int3
push
mov
lods
outsl
sbb
inc
loop
sbb
int3
mov
pop
mov
rclb
cld
xchg
ret
cmp
aaa
mov
mov
mov
aaa
in
xchg
je
pusha
mov
jb
imul
ljmp
out
lahf
dec
addl
aad
lret
mov
mov
cmc
xlat
pop
push
es
mov
mov
jb
inc
jmp
push
mov
cltd
pop
jno
and
sub
add
sbb
inc
pop
hlt
fisttpll
fmulp
inc
sub
out
sub
or
bound
pop
or
rcrb
dec
shrl
inc
int
dec
outsb
mov
mov
xor
add
f2xm1
shlb
loopne
dec
mov
rep
or
lahf
add
movsl
fadds
mov
cmp
pop
mov
xchg
dec
xchg
push
push
xor
in
fld
adc
js
imul
xchg
fisubs
lods
or
das
cs
test
jmp
cmp
mov
cmp
pop
inc
mov
cmc
stos
sbb
or
lods
xchg
pop
or
mov
pop
pusha
aas
cli
outsb
es
frstor
inc
mov
or
int3
push
movsl
aas
sbb
rclb
push
jp
out
xorb
aam
insb
adc
in
pop
sbb
aam
adc
adc
shll
add
inc
mulb
inc
pcmpgtd
shll
loopne
repnz
out
pop
cmp
nop
dec
jbe
lret
test
in
inc
inc
sarl
shl
inc
sub
lret
test
in
sbb
enter
lock
fsub
sarb
fldl
sub
fwait
xchg
cwtl
mov
jbe
in
pop
push
cwtl
mov
ss
test
sub
mov
addr16
insl
sbb
sbb
jnp
gs
sub
loope
std
lret
shrl
movsl
mov
jge
in
mov
pusha
insb
popf
pop
scas
dec
sbb
fisubrs
call
in
cmp
lret
inc
jle
adc
push
lds
cmp
jne
add
sahf
rcl
test
sbb
mov
pushf
or
in
lea
push
movl
mov
and
sub
lock
dec
mov
clc
sub
insb
imul
cmp
or
daa
daa
imul
jb
pop
scas
pop
cmp
movsb
or
push
push
shr
lods
sub
push
xor
mov
pop
pop
xchg
xchg
sub
push
shlb
stc
inc
pop
aas
addl
gs
stos
fsts
loop
dec
xor
adc
aaa
pop
sbb
dec
test
test
sub
in
scas
movsb
popa
xor
or
je
pop
push
pop
sub
call
sub
mov
xchg
popf
ds
shlb
mov
pop
jb
push
jmp
adc
xchg
dec
xorb
mov
fwait
xchg
sub
lock
aaa
xchg
rcrb
shrb
mov
lahf
push
mov
sbb
xorb
mov
enter
jne
out
cmp
sbb
mov
inc
into
push
imul
inc
and
scas
push
sahf
lods
sub
xchg
insl
das
dec
aaa
xchg
pusha
push
push
adc
lods
in
dec
jne
aas
enter
adc
lret
xor
sbb
addr16
cmp
add
lods
out
dec
jo
and
cli
in
jle
iret
add
xchg
mov
mov
stos
xchg
movsl
jno
lods
subl
rclb
mov
mov
incl
sbb
arpl
test
enter
jmp
mov
mov
sbb
into
adc
push
cmc
lds
inc
scas
popf
adc
and
xlat
mov
movsl
mov
stos
gs
or
out
test
sbb
sbb
sub
stos
cmp
xor
pop
xchg
ret
movsb
sub
repnz
loope
push
cmp
leave
stc
push
mov
repnz
and
fimull
bound
cmovbe
int
test
cmp
mov
mov
loope
push
jo
in
ret
mov
int3
sahf
or
in
sub
leave
xor
pushf
das
test
ret
mov
mov
fdivrl
xchg
inc
cmpsb
cmp
xchg
xorb
inc
cmp
je
ss
push
push
inc
or
add
in
xorb
mov
xchg
in
test
lods
pop
insl
xor
sbb
lcall
sub
sarb
mov
sbb
imul
mov
dec
cmp
inc
pop
sub
lods
sub
xchg
push
mov
xchg
hlt
fs
fcmovnu
mov
enter
imul
pop
fcmove
in
push
and
pop
cs
stc
push
in
aam
enter
imul
mulb
orl
std
cmp
popa
jnp
mov
icebp
sets
neg
mov
scas
rcll
dec
inc
mov
sub
push
rolb
add
mov
push
or
mov
lea
xchg
push
insb
sbb
add
sub
mov
das
xchg
inc
pop
sub
mov
mov
addr16
stc
xlat
nop
push
scas
mov
pop
fs
lcall
gs
movsb
repz
test
pop
stos
loop
xor
and
stos
cmp
dec
jae
test
jne
cwtl
rcrb
outsb
ds
cmp
sub
aaa
fstpl
je
pop
adc
fstpl
mov
adcl
cmc
inc
xchg
fwait
adc
pop
xor
int
ljmp
aas
rcr
fwait
out
mov
and
enter
or
int
and
cmpsl
out
insl
jnp
es
cmp
xor
lock
icebp
icebp
cmc
sbb
jp
mov
xchg
xchg
popl
je
mov
faddl
test
push
xchg
and
dec
mov
inc
cmp
push
lds
shl
xor
je
stc
in
sahf
and
fcmove
fists
dec
adc
shlb
lods
sub
push
je
lcall
sbb
mov
popl
jae
arpl
or
repnz
and
mov
sarl
jnp
int3
je
push
ljmp
push
leave
ds
mov
or
popf
in
bound
cmp
xor
inc
rcrl
pushf
int3
pop
inc
mov
clc
or
mov
push
sbb
fs
or
push
rclb
push
jne
movsl
mov
xor
fs
mov
sub
pop
push
jecxz
in
lods
pop
data16
pop
aaa
add
pop
or
outsl
and
ss
mov
cmp
movsl
mov
jge
and
movsb
mov
ss
cmp
cmpl
xchg
repnz
pusha
push
adc
imul
pop
rclb
push
push
push
cmp
dec
jns
loope
mov
jb
adc
js
test
and
inc
cmp
sbb
xlat
mov
clc
ret
xor
lds
sub
push
jle
roll
sub
push
pop
xorb
inc
hlt
xchg
ret
pop
or
jne
mov
mov
push
stc
jne
data16
les
call
std
fidivrl
rcll
jnp
dec
fimull
and
iret
mov
mov
adc
sub
movsb
shl
mov
jae
inc
sbbb
sub
xor
sbb
in
mov
test
in
icebp
popa
and
loop
pop
out
movsl
jnp
fcmovnu
adc
jl
faddl
pop
in
cmp
pop
mov
pushf
cmp
pop
xchg
dec
and
lds
jle
xchg
cmp
push
mov
mov
sub
push
mov
loop
mov
out
sti
and
hlt
inc
shl
pusha
loopne
mov
into
jp
xor
imul
in
out
xor
dec
pop
ds
sbb
and
aam
adc
add
stos
nop
cli
push
xchg
roll
imul
out
jmp
push
repnz
fucom
sub
and
mov
pushf
into
sbb
mov
fcmovne
adc
fucomip
pop
mov
cmp
sbb
or
repz
sbb
idiv
push
daa
mov
add
xchg
xor
cmpsb
jg
cmp
push
xchg
sarl
popf
sbb
data16
subb
loope
or
mov
sbb
stos
nop
fidivrs
or
mov
into
cmpsb
xchg
xchg
popa
lods
dec
push
sarb
fcmovu
jb
xchg
in
sub
icebp
lods
in
pushl
les
ljmp
aad
vpsubw
orl
test
sar
scas
or
pushf
pop
dec
cmc
fldl
sub
and
mov
add
xor
mov
loopne
and
insl
inc
mov
mov
aam
lcall
out
jl
iret
clc
push
test
sub
cltd
jl
add
push
jecxz
aam
outsl
or
jo
cwtl
js
add
mov
inc
gs
jecxz
fdivs
sarl
push
in
cmp
xchg
xchg
in
cwtl
jae
shrb
jl
pop
xor
repnz
mov
jg
sub
or
sub
repz
fdivr
or
sahf
or
mov
adc
mov
testb
jl
inc
and
stos
xor
xchg
clc
pop
mov
fnsave
bound
adc
and
dec
mov
push
ja
xor
shl
xchg
fnstenv
iret
test
shrb
outsl
pop
mov
xor
ret
push
mov
fnclex
cmp
mov
aas
push
jb
aam
mov
clc
cmp
popa
sub
ja,pt
sub
jne
dec
mov
ret
shl
cwtl
jno
mov
aad
not
fsts
imul
sbb
mov
lods
lods
sbb
fs
shlb
or
xor
mov
sbb
sbb
in
je
cs
or
loop
mov
mov
mov
les
fcoml
sarb
imul
push
je
sbb
xor
jp
ljmp
sbb
scas
sti
jecxz
push
xchg
test
test
cmp
lret
aad
insb
dec
test
dec
push
inc
test
mov
mov
lret
popf
mov
mov
cmp
cmp
test
jae
incb
mov
negb
repz
es
icebp
nop
adc
add
imul
push
mov
test
cs
jge
ds
jecxz
dec
add
sub
popf
xchg
xor
ret
dec
notl
jae
lock
out
mov
fildll
sub
cmp
jae
outsb
ds
in
cmp
mov
inc
pop
mov
sub
subl
nop
push
stos
adc
incb
leave
sub
ds
xor
aad
aaa
pop
fucomi
in
xchg
scas
push
or
mov
cmp
cwtl
decb
xor
movl
jno
mov
add
jo
dec
push
addr16
add
shrl
lods
inc
mov
and
add
sub
fchs
mov
fistl
xlat
add
cmp
loop
mov
rcrl
daa
dec
scas
xor
inc
or
ret
mov
push
inc
xlat
sbb
ljmp
fcoml
pop
aam
adc
mov
repz
out
ljmp
lahf
test
cmpsb
pop
and
jmp
push
rorb
ljmp
fs
push
cli
sbb
inc
in
lcall
ds
jecxz
and
insl
and
or
pop
and
imul
mov
jl
jle
sti
test
aam
pop
jbe
and
xchg
fisubrs
dec
cmp
add
xchg
test
jns
adc
out
test
dec
test
cltd
nop
xor
int3
jnp
ret
loopne
pop
mov
je
jae
xchg
mov
add
call
or
out
pop
or
sub
push
out
cmp
hlt
cmp
push
xchg
fcmovbe
je
pop
aad
mov
movsl
test
sub
push
lret
mov
jl
add
sbb
enter
lods
jnp
outsl
jb
sahf
and
adc
jge
ss
pop
ret
push
xor
out
add
push
adc
inc
stc
mov
inc
divl
inc
push
pop
dec
aad
cmp
jp
ret
cmp
dec
cs
xchg
fmul
mov
xor
test
push
cmp
inc
das
or
and
pop
or
rcr
or
sbb
cmp
pushf
adc
das
ds
hlt
or
xor
into
mov
and
sbb
popa
outsb
mov
int3
lods
pop
mov
cmp
adc
lea
inc
les
pop
in
stc
mov
xchg
dec
or
pop
sbb
dec
xor
fs
fmull
cwtl
and
lea
sub
sub
and
inc
out
ljmp
push
out
lret
push
or
stos
into
pop
jg
jg
mov
jno
lods
xorl
hlt
mov
call
mov
leave
jl
sti
xlat
push
in
aad
iret
push
mov
lahf
push
sti
dec
adc
add
stos
mov
push
and
jns
ljmp
jecxz
fs
xlat
shlb
iret
imul
icebp
negl
test
lret
dec
jb
or
sub
mov
mov
xor
xchg
popa
iret
ret
out
addb
xor
popa
push
scas
jmp
aam
pmaxsw
xor
xchg
jg
pop
stos
popa
lret
lds
jnp
scas
repnz
in
xchg
mov
sub
aam
movsb
sti
mov
mov
mov
mov
mov
add
dec
or
inc
aam
mov
or
call
dec
cli
push
mov
add
jbe
fimuls
insl
xor
sbb
leave
test
addr16
add
pusha
fdivrl
pop
das
push
scas
and
push
dec
outsb
lea
sub
and
shl
dec
sub
les
mov
bound
rorl
movb
into
popa
faddl
sub
fldt
pop
popa
jle
add
dec
cwtl
rcrb
aaa
jmp
sub
xchg
out
lret
or
dec
inc
xlat
loope
js
loopne
jo
dec
fldcw
adc
lods
loope
scas
lea
mov
jge
fstl
es
call
rclb
pusha
aam
aad
xchg
inc
cmp
pop
mov
xchg
dec
mov
popf
fmull
pop
cmpsl
dec
mov
shll
imul
or
std
lock
jmp
and
dec
jns
fcomps
add
int
mov
mov
pop
jecxz
mov
pop
push
mov
pop
pushw
lods
sub
lret
lahf
cmp
bswap
clc
cmovl
inc
lret
jecxz
adc
inc
popl
stc
pusha
imull
xor
roll
out
das
pop
mov
dec
loopne
mov
gs
mov
movsl
and
testb
mov
and
push
xchg
daa
aaa
mov
sub
lea
es
je
icebp
test
test
push
mov
mov
out
sbb
pop
ret
das
jo
cmp
rorb
push
in
and
sub
sbb
aad
cltd
popa
icebp
bnd
mov
push
in
lods
pop
cmpb
lds
or
mov
jae
jge
or
orb
bound
jmp
out
sti
mov
fstpt
lea
daa
jns
mov
or
fwait
mov
adc
push
sahf
sbb
lret
into
inc
stos
ja
fptan
fisubrs
in
out
mov
jnp
push
bound
rcll
call
xor
push
jo
xchg
add
clc
in
jae
das
insb
xor
xchg
js
xchg
mov
mov
add
adc
test
inc
xchg
addr16
fcmovb
xor
ror
cwtl
fwait
pushf
pusha
jecxz
jg
mov
clc
pop
hlt
mov
aad
jne
cmpb
in
test
or
out
fyl2xp1
push
addr16
jle
pop
imul
mov
lcall
pop
pop
push
mov
sub
or
aam
sbb
and
jns
cmp
jb
mov
int
jo
jg
sbb
dec
mov
sub
dec
fstps
sub
sub
xchg
movsb
out
mov
loope
or
xchg
bound
mov
lods
sbb
and
lahf
adc
push
in
iret
or
mov
mov
cltd
adc
push
jb
push
adc
dec
and
cmp
inc
cld
mov
mov
insl
sbb
cs
xchg
dec
inc
ret
nop
mov
lahf
imul
lret
sbb
and
sahf
xchg
into
mov
ljmp
push
aas
xor
cmpsl
mov
add
and
insl
dec
add
mov
test
clc
imul
jmp
out
dec
pusha
or
popf
es
inc
inc
dec
xchg
std
je
sub
ficoms
fwait
jne
add
and
and
div
add
sub
cmc
cmp
ret
pop
mov
fidivl
xchg
nop
lcall
adc
in
mov
test
pushf
sub
dec
xor
add
ljmp
pop
scas
pusha
daa
ret
xchg
adc
es
sbb
outsl
aam
test
inc
push
jecxz
dec
insl
faddl
push
leave
movsb
xchg
adc
push
xor
xor
mov
cmp
mov
jle
inc
xchg
mov
inc
push
jmp
test
cmp
xor
push
loope
cmp
pop
jl
shrb
lods
shll
test
xor
ret
addr16
cmpsb
xor
out
xchg
cltd
std
dec
xor
fisubs
xor
or
mov
inc
add
mov
pop
scas
icebp
mov
jecxz
scas
in
jo
iret
dec
rolb
pop
sar
mov
jne
add
cwtl
repnz
fstpl
push
sti
mov
lods
in
and
sub
mov
ret
js
push
dec
push
ljmp
pop
jnp
inc
cmp
and
addr16
movsb
lret
mov
fs
cmp
loop
mov
mov
mov
faddl
mov
sarb
jge
mov
leave
xlat
inc
jnp
and
sti
mov
stos
std
push
mov
psubb
jge,pt
orl
xchg
scas
mov
xor
jo
fildll
cmp
add
or
lods
jle
dec
je
mov
leave
xor
arpl
add
xchg
xchg
dec
sub
cmp
jmp
loope
mov
pop
les
frstor
adc
out
test
jmp
test
out
mov
pop
shll
or
ret
xchg
idiv
lahf
push
jnp
xor
test
iret
mov
push
push
push
call
inc
dec
push
pop
cli
push
repnz
inc
xlat
test
cmp
pop
jl
push
lret
jo
pop
push
pop
dec
imul
cld
movsb
cmpsl
fcoms
xchg
push
and
and
jle
and
cli
or
fldt
fldcw
mov
cwtl
mov
mov
pop
insb
adc
mov
stos
std
sub
lret
jnp
xor
sbb
mov
pop
add
das
in
outsb
sahf
test
mov
lret
mov
pusha
push
jne
mov
sub
into
pop
cmp
dec
enter
je
sub
cmp
mov
mov
out
aas
pop
xor
loope
mov
or
sbb
js
sbb
sahf
adc
std
or
fistps
rcrl
jnp
xorb
imul
mov
idiv
je
xchg
mov
hlt
out
stc
loopne
jnp
int
loopne
fs
xor
or
mov
in
and
and
xor
ljmp
cmp
pusha
lcall
popw
inc
mov
push
inc
xor
gs
dec
sbb
dec
popa
lock
push
cld
add
cmp
xlat
out
pop
lret
xor
ret
pop
ds
inc
loop
jl
bound
sbb
pop
fsubrs
xchg
rorl
jns
xchg
dec
movsl
or
push
iret
pop
jl
push
pop
lock
mov
jg
xlat
mov
dec
mov
sbb
or
add
lahf
test
aad
jge
rcll
out
jmp
jns
mov
xchg
sbb
lods
push
daa
lret
mov
mov
fidivrs
cmp
arpl
push
pop
out
pop
js
sbbb
mov
adc
push
or
popa
pop
mov
in
inc
pmullw
and
lcall
cmp
add
test
and
cmpsb
rclb
and
in
pusha
in
inc
filds
jnp
mov
mov
popf
push
jnp
adc
adc
jg
iret
cmpsl
iret
mov
xchg
add
ljmp
inc
cmp
addr16
sub
cld
outsl
pop
lret
test
addr16
jl
jmp
inc
fnstenv
pop
xor
sar
mov
fimuls
f2xm1
sub
scas
mov
mov
orl
mov
cmp
out
push
outsb
mov
andl
add
insl
push
into
repnz
lods
push
sahf
jmp
cwtl
fwait
xlat
cwtl
push
dec
push
mov
les
jg
xchg
loopne
jmp
cs
jno
mov
and
outsl
je
in
pusha
ja
aam
loopne
add
jnp
cmp
fs
in
mov
adc
or
pop
imul
mov
dec
decb
add
jecxz
cmp
stc
jecxz
imull
or
adc
pop
arpl
pop
sbbl
pusha
fidivrs
stos
test
mov
xchg
ds
xor
leave
sbb
insl
stos
fmull
outsl
icebp
andb
aaa
jge
pop
pop
inc
cmp
gs
jl
add
mov
push
or
stc
shll
lea
scas
and
fndisi(8087
lret
nop
in
cmp
fwait
mov
arpl
push
push
mov
or
int
je
out
dec
cmpsb
sub
or
cwtl
xchg
fs
adc
mov
pop
pop
xor
push
loopne
jo
rcrl
dec
and
mov
js
jne
decl
aaa
je
std
lahf
std
xchg
aam
or
lahf
adc
icebp
aas
cmpsl
jns
lods
mov
or
inc
addr16
jae
mov
mov
das
enter
push
sub
iret
sar
fcmovu
mov
mov
lds
xor
fwait
cmp
cmc
pop
or
movsb
mov
cmc
testb
jno
ljmp
mov
icebp
test
imul
rorb
stos
mov
cli
aas
mov
inc
mov
and
push
cs
pop
aam
inc
clc
inc
pop
stos
cmpsl
pop
out
and
loope
jge
xor
rcrl
loope
dec
sbb
or
mov
adc
sub
mov
stc
pop
into
cmp
sahf
lcall
add
xchg
xchg
jb
inc
leave
dec
jo
push
out
mov
xchg
mov
add
sbb
or
lock
and
out
movsb
jnp
lcall
hlt
cmc
arpl
jno
lcall
push
inc
add
in
cmp
ja
or
push
ret
lock
iret
add
xchg
xchg
mov
scas
loope
mov
mov
inc
je
push
xchg
cmp
jo
test
or
sbb
pop
jg
insl
rcrl
mov
inc
lods
xchg
loop
or
stos
adc
mov
ficomps
dec
ss
pusha
lcall
mov
outsl
mov
push
fs
xchg
mov
xor
daa
loopne
cld
in
add
gs
pop
mov
cmp
xchg
jecxz
push
jo
icebp
mov
xchg
xchg
dec
aam
adc
jl
jp
xor
sub
jl
mov
popa
inc
vpcmpeqb
adc
cs
mov
pop
repz
out
out
pop
cmpsb
idiv
enter
inc
sub
inc
shrl
imul
xchg
ret
inc
sub
mov
mov
fs
clc
dec
cmp
dec
push
lret
movsb
xchg
aam
sahf
sub
pop
dec
shrb
mov
dec
cltd
movsb
sbb
mov
ljmp
sub
jge
xor
divb
mov
mov
popa
sahf
loop
jecxz
adc
pop
push
cli
pop
mov
xor
in
aam
hlt
cmp
mov
addb
gs
decl
rolb
test
loop
gs
mov
mov
cmp
ljmp
xor
sub
jecxz
lds
add
dec
orb
push
icebp
jmp
dec
filds
mov
das
inc
nop
in
pop
mov
sbb
ret
ja
scas
outsl
mov
cmp
cmp
imul
inc
inc
mov
aam
les
into
and
ret
and
sub
popa
push
scas
lock
push
das
push
cmp
dec
push
add
mov
pop
iret
stc
loopne
jmp
imul
js
xchg
outsl
and
mov
pop
add
inc
mov
mov
std
sbb
sbb
out
jle
mov
jp
movsl
push
lock
aas
adc
in
dec
xor
cltd
mov
pop
int3
repz
ss
rclb
sbb
lock
push
pop
dec
mov
outsl
stc
adc
push
mov
push
xor
daa
sbbl
bound
mov
stos
in
jno
test
or
cld
push
sub
mov
adc
pushf
mov
mov
rolb
mov
push
sbb
xor
mov
xchg
aad
lods
cmc
adc
push
lods
inc
xchg
fcmovb
pop
pop
incl
fnstsw
fstps
push
jl
scas
or
scas
jne
cmp
daa
xlat
cmp
cmpsb
push
aad
push
jecxz
push
sub
cmp
and
aad
xor
push
mov
ds
jg
xchg
mov
dec
sahf
imul
pop
jecxz
or
les
lret
test
and
cmp
pop
fisubrl
xchg
xchg
dec
mov
sbb
inc
in
jle
icebp
addl
push
cwtl
add
dec
sub
xorl
jbe
inc
scas
xchg
sbb
and
dec
mov
call
jo
sub
jb
dec
xchg
xor
mov
sub
aas
add
testb
dec
stos
les
jae
add
jns
and
jae
call
ret
mov
lret
stc
pop
xor
enter
push
xchg
add
or
inc
xchg
mov
cld
sbb
test
hlt
in
js
testl
daa
cmc
shlb
and
push
call
rcrb
inc
rorb
xchg
mov
out
insb
xor
test
lods
je
lods
call
test
jns
je
inc
leave
mov
out
shl
push
sub
adc
lret
sbb
stos
sub
pop
push
in
jp
cmp
shr
mov
std
fbld
ja
mov
ret
sub
sbb
jb
push
xchg
mov
mov
lcall
shrl
call
xchg
loop
aaa
mov
sub
push
mov
mov
xor
dec
sbb
cs
add
repz
mov
lds
cmp
mov
and
js
fists
sti
iret
stc
adc
sub
mov
mov
cltd
stos
xor
adc
sub
lret
call
dec
fcmovbe
lret
je
jle
and
inc
mov
mov
push
hlt
stos
insb
and
movsb
xor
mov
mov
add
imul
pop
das
arpl
mov
lods
mov
imulb
call
aas
loopne
out
aas
jge
sbbl
or
add
or
cld
andb
sti
data16
xor
call
or
repnz
aad
fwait
jmp
ret
loope
outsb
lret
std
lods
adcl
sub
lahf
sub
icebp
jmp
push
inc
ss
int
sbb
jno
push
loopne
pop
jl
pop
cmpsl
aad
sub
jb
out
and
scas
jg
repnz
arpl
hlt
mov
cmp
jecxz
mov
popf
leave
sub
lcall
fwait
lea
lods
add
adc
cmpsb
pop
pop
imul
inc
loop
dec
stos
mov
int3
pop
je
je
push
jge
mov
out
ss
push
mov
test
lret
iret
mov
iret
or
add
daa
out
test
rcll
addr16
shl
sbb
mov
xchg
pop
call
adc
push
xor
out
aaa
sti
sub
daa
outsb
rol
das
imul
sbb
inc
pusha
mov
lock
insb
xchg
pop
das
xchg
lea
sbb
push
fs
mov
shll
mov
pop
aas
sti
fdivrs
out
cmpsl
stos
test
or
mov
sbb
ret
out
ds
jno
or
and
adc
jae
lea
push
adc
fisubs
lods
xchg
and
push
test
or
add
push
jmp
sub
mov
aaa
call
pop
push
pop
add
dec
xchg
sbb
mov
addb
dec
dec
xor
std
mov
mov
xor
cmp
sub
fistps
testl
neg
inc
mov
mov
scas
jg
push
rorb
repz
leave
dec
nop
pop
incl
movsl
sbb
mov
call
mov
cmpsl
je
ret
or
cmc
pop
xor
ficoml
int3
inc
add
scas
int3
stos
or
mov
jmp
in
mov
cmpl
sti
stc
dec
in
in
movsl
lret
or
pop
adc
cmp
add
jo
add
inc
xor
mov
rcr
jg
sti
daa
or
aas
mov
enter
int3
in
and
enter
push
jnp
xchg
add
mov
mov
push
test
mov
add
jg
pusha
and
outsb
out
push
aam
push
repnz
mov
sti
lcall
sbb
jns
popa
sub
frstor
jae
sub
pop
jmp
pop
jle
jae
inc
dec
sahf
add
xchg
mov
xchg
scas
mov
aas
push
dec
lods
and
mov
jge
mov
lea
adcb
jp
cmp
fldcw
lret
rorb
push
roll
imul
dec
and
push
inc
and
and
mov
cli
cmpsl
imul
cmc
jl
jns
lret
rclb
and
cmp
or
hlt
outsl
cmc
lcall
push
cli
mov
dec
js
inc
sub
cmpsl
dec
mov
sub
je
repz
push
mov
cli
xor
cmp
push
fildll
je
mov
dec
dec
pop
and
xor
push
in
sahf
aam
mov
mov
push
iret
add
or
lea
dec
cltd
rcrl
cmp
pop
rclb
loopne
push
sub
or
inc
mov
mov
inc
fs
push
mov
scas
loopne
nop
dec
xchg
imul
push
das
sbb
mov
aam
adc
fnstcw
mov
mov
and
lock
rcl
pop
dec
cmc
fiaddl
sti
mov
lcall
xor
dec
sahf
sbb
dec
lret
arpl
push
sub
mov
ffree
mov
jae
push
cmp
fs
dec
jg
test
js
jmp
loop
fwait
pop
je
push
pop
pop
pop
lea
shlb
adc
fidivrs
add
jmp
xchg
insb
imul
cmp
es
div
into
pop
ss
push
sub
shlb
jp
cmpsl
pop
dec
std
xchg
inc
or
jecxz
sub
ret
mov
fs
add
enter
sti
add
mov
push
mov
inc
mov
mov
fwait
xchg
lds
mov
aas
xchg
test
ds
ds
stos
enter
inc
mov
sbb
dec
sbb
jbe
movups
lds
ss
jg
fnsave
loopne
fmulp
add
inc
pop
and
mov
stos
js
sbb
mov
push
and
fwait
cmpsb
adc
pop
aaa
imul
addr16
stc
add
dec
push
mov
jae
imul
cmpl
jg
ds
clc
xor
stos
mov
jmp
std
sub
jg
jno
add
xchg
mov
in
bound
loopne
lds
adc
cltd
ret
and
cld
leave
push
pop
xor
sub
popf
sub
test
sub
ret
sbb
dec
and
xor
js
call
inc
add
xchg
mov
repz
cwtl
pop
inc
repz
mov
jp
lea
sub
sub
in
fwait
movsl
add
loop
sbb
in
jae
int
fst
testb
pop
adc
psubusw
leave
fcmovnb
insb
mov
xchg
mov
mov
jb
xor
sbb
mov
push
fldcw
testb
in
lock
xor
inc
fbld
jnp
out
cmc
jne
cmp
sahf
les
xchg
ficoml
neg
mov
in
jg
dec
mov
jmp
fisttpl
lret
cmp
push
out
jnp
xchg
dec
dec
mov
push
lret
sbb
and
xchg
stos
or
aad
das
jmp
fwait
add
lea
movsb
jae
or
dec
push
les
test
inc
mov
pushf
xchg
lcall
xor
push
add
xchg
and
lcall
dec
and
cmpsl
lahf
mov
jne
sbb
aam
ret
push
imul
test
loop
jo
inc
xor
jg
and
movsl
dec
testl
adc
xchg
push
pop
das
data16
sub
in
nop
and
sub
ret
jo
pop
dec
adc
mov
int
inc
cmp
pop
pop
jg
fwait
mov
dec
scas
loope
mov
out
lret
push
dec
dec
and
clc
popl
xor
cmp
sahf
xlat
jle
popf
pop
sbb
andnps
les
cmp
mov
scas
cmpsb
call
scas
pop
lret
pop
ret
push
popa
push
jb
sub
inc
sti
push
fnstenv
lods
mov
loope
cmp
mov
adc
outsb
stc
pop
xor
aas
add
pop
in
jae
xchg
rorb
sti
repnz
xchg
pop
mov
in
repnz
push
inc
jg
sub
fwait
xor
leave
xchg
outsl
xchg
mov
out
push
mov
shlb
add
aad
cmp
fnstsw
ret
loop
es
xchg
fnstsw
sbb
mov
sbb
xor
dec
xor
nop
data16
scas
pusha
mov
imul
adc
sub
shr
movsl
pop
or
mov
sarb
sub
mov
clc
xchg
xchg
cmc
push
mov
sbb
cld
fildl
in
sub
mov
sbb
inc
push
add
ljmp
pusha
inc
inc
loopne
jmp
xchg
dec
mov
and
mov
adc
decl
inc
or
mov
push
pop
xor
lret
out
pop
jb
jae
lods
aaa
push
movsl
adc
dec
rcll
test
adc
sbb
rcrb
dec
lods
xchg
xchg
imul
loope
inc
xchg
loop
jmp
xchg
inc
or
jns
sub
adc
push
pop
mov
or
or
adc
test
push
inc
sbb
jno
rcll
add
inc
lock
mov
nop
mov
cmpsl
fistps
mov
int
push
push
dec
iret
mov
and
cli
inc
mov
sbb
xor
push
sub
add
nop
sub
jbe
in
mov
testb
or
dec
xchg
and
jmp
or
popa
dec
sahf
sub
cmpsl
ja
ret
std
das
mov
inc
scas
add
mov
mov
popa
jae
cmpsl
fsubrl
sub
inc
xchg
cmp
pop
cs
call
sbb
sti
pushf
scas
movsb
fchs
xor
add
daa
jp
and
repnz
outsb
mov
xchg
outsl
cmp
and
iret
sub
sub
sub
sbb
into
lcall
pop
and
xchg
push
xorl
rcll
mov
das
les
imul
dec
leave
cmp
cmp
push
test
mov
cld
imul
les
mov
inc
xchg
insb
outsb
stc
bound
movsb
push
xor
repnz
addl
jns
popf
data16
cmc
aas
shll
inc
dec
mov
push
rcrb
rcrl
mov
inc
mov
mov
adc
or
nop
jns
out
mov
aas
lret
movsb
push
push
xorl
sti
add
sbb
movsl
pop
aam
jbe
adc
adc
rcrb
push
notb
jp
push
fnstsw
mov
push
push
adc
out
dec
push
pushf
fstl
in
cltd
or
sbb
mov
inc
fcoml
sub
sahf
mov
dec
shrb
adc
icebp
loop
ljmp
je
stos
sbb
call
mov
hlt
mov
data16
pusha
and
adc
mov
out
in
in
cmp
shlb
sbb
mov
push
xchg
outsl
je
push
scas
or
out
ds
out
adcl
gs
mov
add
fwait
mov
adc
push
and
cmp
nop
ljmp
push
sub
aam
pop
adc
ljmp
outsb
mov
rcll
test
jp
imul
fsubrl
jecxz
daa
adc
pusha
ficompl
fadds
cmpsl
int
or
out
testl
pop
mov
xor
rcr
jns
aas
aam
rcll
or
int3
in
les
cmpsb
jbe
stc
fisttps
wrmsr
mov
sbb
push
add
sbb
push
loope
jne
loopne
ds
add
xchg
stc
leave
sub
jnp
xchg
mov
inc
daa
js
leave
or
sar
test
stos
mov
mov
lods
iret
scas
pop
stc
fwait
in
xor
mov
adc
mov
push
inc
add
fistl
pop
cmpsl
ja
or
xlat
mov
loop
outsl
popa
fildll
jbe
jge
push
sub
dec
pop
jno
aad
int3
movsl
fstpl
xchg
and
fimull
xchg
and
dec
jmp
add
cld
jmp
stos
mov
loop
or
mov
scas
rcll
dec
jbe
fdivrl
clc
pop
dec
enter
aas
in
or
jae
test
out
cmpsb
fnstsw
scas
fld
xchg
loopne
or
push
mov
cmp
xor
xor
out
push
pop
andb
pop
fisttps
mov
pop
push
neg
push
mul
stos
mov
ret
lods
js
jmp
adc
or
in
mov
lods
xor
jno
jle
push
mov
mov
std
shll
imul
adc
sbb
fwait
negl
and
or
pop
xchg
jns
fldt
xor
xor
mov
push
mov
adc
mov
jbe
pop
adc
sub
sub
insl
pop
int3
push
cltd
call
xchg
enter
sbb
sub
test
inc
inc
int3
mov
test
sub
pop
inc
outsb
movsl
test
xchg
dec
cmp
in
addl
xchg
arpl
lock
loopne
and
cwtl
pop
add
imul
mov
sbb
push
mov
xchg
sti
subl
clc
mov
cmpsl
and
adc
jno
mov
mov
cmpsl
xchg
shlb
shlb
int3
daa
into
mov
pop
movsb
mov
mov
push
js
jmp
dec
clc
jge
sub
add
adc
jle
std
sbb
fwait
or
in
bnd
sarl
scas
mov
and
ss
or
rcr
fwait
incb
push
mov
add
pop
mov
popa
push
jns
mov
out
dec
mov
ja
outsl
inc
dec
stc
cmp
leave
cs
scas
pop
stc
sub
xor
xchg
jmp
add
dec
in
pop
in
mov
ljmp
es
outsb
sbb
leave
lcall
jns
cmpsl
repz
xchg
sbb
mov
xor
xor
sahf
add
clc
push
inc
pop
jbe
xorb
inc
mov
stos
outsl
add
icebp
int3
xchg
addr16
insl
popa
imull
and
icebp
inc
xchg
jb,pn
xchg
adc
mov
lds
negl
testb
inc
fists
aaa
out
es
cwtl
js
xor
and
jle
add
lock
pop
rclb
mov
xchg
iret
xlat
mov
add
loop
je
ficomps
dec
or
lret
pop
scas
xchg
xchg
mov
mov
xor
push
js
cmpsb
xchg
idivb
dec
inc
dec
pushf
inc
xor
in
mov
je
sti
adc
xor
fldt
jge
divb
xor
xor
jecxz
enter
cli
inc
mov
cld
lahf
jp
jne
and
test
stos
or
mov
inc
jnp
adc
ljmp
loope
fwait
ret
jne
packssdw
cld
lods
adc
pushf
sub
insl
jne
mov
or
mov
or
xchg
stos
xor
or
sub
loop
dec
imul
in
fimull
cwtl
xchg
sbb
into
sti
pusha
mov
inc
loope
call
xchg
adc
cwtl
leave
test
lcall
sbb
jmp
mov
jl
jbe
jge
sub
push
or
pop
insb
jge
hlt
sti
mov
sub
cmpsb
and
sub
xor
cltd
adc
jecxz
jns
mov
push
jo
test
mov
pop
jg
mov
roll
xlat
subl
jae
loopne
into
lret
inc
lahf
xor
stos
test
mov
lret
jmp
sbb
mov
arpl
outsl
adc
adc
sete
movsl
fwait
push
pop
scas
push
ret
sbb
jb
cmp
lret
outsl
ljmp
lret
mull
xchg
stc
mov
mov
cmp
ret
std
test
add
aam
mov
cltd
cmpl
sub
mov
ss
cld
jb
or
pop
clc
and
mov
inc
or
mov
mov
daa
fisttpll
add
mov
ds
push
popf
cmp
int
test
push
cmc
and
inc
test
cltd
rorb
sbb
mov
cmp
iret
arpl
mov
mov
loopne
sbb
fldt
popf
cld
repnz
xchg
and
dec
or
in
mov
xchg
sub
push
sbb
adc
cmpsl
push
cmp
cwtl
rorb
mov
push
cmp
sub
mov
jo
out
loopne
add
shrl
cld
das
fldt
in
lahf
faddp
pusha
in
cli
imul
and
test
xchg
hlt
out
mov
sbb
into
iret
mov
repnz
fs
shlb
outsb
arpl
lcall
fisubs
addr16
inc
add
add
inc
sahf
jmp
jge
mov
cmp
sub
repz
push
lcall
fbld
mov
push
mov
dec
mov
out
arpl
sarl
or
jae
dec
jg
pop
int
lods
xorl
xor
push
movsb
adc
or
pop
aam
xchg
aam
inc
test
inc
ret
scas
sub
aas
pop
scas
ret
icebp
into
fsubl
push
in
inc
sahf
loope
insl
xorl
bound
addr16
xchg
xor
mov
jb
inc
lock
out
mov
mov
mov
rol
and
xchg
movsb
data16
testb
push
clc
hlt
fistl
repnz
sbb
xlat
in
xor
shll
test
adc
xchg
jo
aam
cmc
xchg
pop
xchg
lds
insl
mov
cli
xor
or
pop
inc
out
dec
push
repz
in
test
xor
rclb
jo
xchg
pop
cltd
push
das
cmpsb
push
xchg
icebp
sub
xor
dec
xor
int3
arpl
outsl
pop
mov
lcall
fs
bnd
mov
jmp
add
or
leave
push
mov
std
cmpsl
and
scas
jl
scas
lret
dec
mov
sub
dec
push
imul
mov
lret
push
pop
pusha
adc
inc
xor
dec
adc
test
sub
xchg
xchg
xchg
add
pop
not
flds
jmp
jmp
aad
mov
jae
repz
aam
jbe
or
aaa
enter
fldt
dec
inc
sbb
ja
mov
xlat
push
jnp
sbb
lods
js
xchg
and
es
setge
adc
loopne
cmpsl
xor
fisubl
bound
rorl
pusha
pusha
xor
inc
push
scas
xchg
mov
js
jno
jns
mov
fidivrs
mov
xchg
jne
ret
repnz
xlat
js
int
in
jno
rep
aad
jne
notl
mov
jbe
mov
mov
xor
xchg
jmp
int3
add
xor
lret
sub
sahf
ret
in
sub
lea
lret
xor
mov
popf
inc
push
stos
enter
mov
in
divb
mov
jecxz
bound
mov
sbb
js
or
out
jl
and
jb
pop
shlb
xlat
stos
or
pop
jno
insb
lret
inc
and
and
shlb
xor
fsubrl
xlat
add
cmpsb
mov
pop
xchg
mov
imul
sbb
adcb
mov
xchg
push
in
shlb
jns
enter
mov
ja
cmpsl
add
inc
cmp
shrl
fldl2e
in
fbld
jle
movsb
fadds
mov
scas
and
sbb
pop
mulb
add
stos
inc
jmp
and
insb
add
push
mov
insl
cld
es
testl
pop
jbe
popf
pusha
push
push
push
push
test
fistpl
clc
jbe
out
add
mov
or
lea
ficompl
inc
jp
das
fldenv
inc
lahf
sub
mov
ja
call
bound
pop
sub
movsl
mov
addr16
jle
push
cmpsl
popa
add
push
aaa
test
jmp
jmp
and
adc
aam
fisubl
cmp
testb
sbb
rorl
xor
xlat
scas
test
cmc
mov
cmp
sbb
push
lret
pop
std
or
pop
xchg
inc
lods
sub
pop
mov
sbb
sub
les
sub
jae
and
sub
cmp
test
icebp
cmpsb
lcall
push
adc
or
aad
scas
xchg
pushf
bnd
into
and
fimull
dec
arpl
push
arpl
movsb
idivb
mov
inc
and
mov
repz
and
fisubrs
lods
jle
mov
add
fwait
push
push
icebp
in
pop
lahf
mov
stc
fidivrs
jle
pop
add
push
leave
dec
hlt
das
shrl
into
icebp
lret
pusha
shlb
inc
lcall
aad
add
daa
insb
sbb
repnz
mov
pushf
jno
xor
xchg
mov
xchg
pop
inc
aam
push
push
mov
sub
arpl
iret
adc
push
bound
and
divb
push
bnd
scas
call
aad
push
inc
fsubs
lret
addb
add
pop
dec
out
fs
arpl
inc
push
aas
fnstsw
push
mov
into
inc
pusha
mov
jae
push
or
pop
rorb
cmp
repz
adcb
js
das
rclb
sbb
sti
mov
mov
jg
ljmp
sub
inc
insl
vcmpneq_usps
mov
lret
jnp
cmp
call
mov
stc
push
mov
push
mov
clc
sbb
mov
sbb
int3
xor
xchg
pushf
arpl
push
add
lock
addr16
cmp
push
int
cmp
das
push
cld
push
or
je
push
call
xchg
jo
fidivrs
inc
popf
pop
repz
inc
sbb
mov
xchg
ret
pop
bound
inc
sti
aaa
jns
gs
and
sarl
ss
leave
repnz
fsubrs
cwtl
add
andb
filds
pusha
cld
imul
mov
push
in
ror
xchg
ret
in
or
cmp
sti
mov
sbb
pop
loopne
and
adc
push
stc
mov
pop
push
adc
fdivrl
stos
add
add
fwait
or
pop
scas
jno
fisubs
sub
jae
insl
pusha
popa
aad
daa
fiadds
xchg
pop
sahf
and
sub
lcall
and
xchg
in
xchg
push
push
fisubs
inc
rorb
lods
add
clc
insl
sbb
xchg
xchg
lahf
mov
cmp
cs
cmp
pop
cmpsl
pop
arpl
inc
mov
xor
xchg
dec
repnz
pop
xor
in
enter
sbb
mov
stos
nop
and
inc
lcall
aaa
in
xor
sbb
jns
dec
or
out
mov
pop
addr16
xor
addr16
popf
popa
push
hlt
imul
testb
loopne
pop
ss
mov
movsb
les
inc
out
or
mov
pop
mov
shr
mov
pop
aas
and
fiaddl
sbb
repz
push
jecxz
mov
cmp
mov
or
aam
sarb
je
mov
add
decl
in
fmull
mov
and
pop
sbb
pop
xchg
lea
sub
cwtl
ljmp
je,pn
addr16
cs
mov
cmp
push
inc
inc
jno
pop
xor
adcl
test
push
rorl
lret
dec
xchg
test
fadds
gs
fstl
clc
decl
into
outsb
mov
cltd
nop
repnz
inc
stc
or
mov
mov
or
stos
adc
xorb
dec
iret
sbb
sub
xchg
mov
mov
mov
pop
mov
xchg
les
imul
outsl
or
sbb
jg
insb
cmpl
ret
mov
std
push
pop
add
cltd
pop
inc
rclb
sub
and
mov
inc
test
sbb
add
cmp
lcall
push
sbb
repnz
adc
push
fucomi
cld
sbb
inc
aas
rolb
inc
and
xchg
insl
mov
inc
pop
add
adc
pop
mov
jnp
ljmp
je
and
jnp
adc
les
inc
ret
mov
sub
fwait
loop
push
je
fldenv
sbb
lock
iret
lods
inc
pushf
and
pop
outsl
es
das
aaa
sbb
xchg
aaa
mov
mov
divb
aas
cmp
lahf
inc
stos
repz
pop
cltd
dec
lret
js
and
or
sbb
lods
and
stos
jb
push
mov
cltd
cmp
cltd
add
pop
in
xorb
mov
out
jmp
ret
ljmp
stos
addr16
pop
fwait
push
push
and
mov
rcrl
popa
jl
in
jecxz
pop
xchg
and
addr16
and
sub
mov
lods
in
rol
movsl
scas
aam
mov
jge
ja
loop
in
or
xor
mov
push
push
push
test
pop
jbe
xchg
pop
movl
xchg
pop
ja
cmpsl
lret
adc
pop
das
mov
lahf
ret
out
cmp
outsb
data16
sub
lcall
dec
sbb
push
ss
lcall
jge
pop
add
jne
add
sbb
pop
gs
mov
lret
mov
popf
cmp
cmp
pop
ja
cwtl
outsb
xlat
xor
add
test
out
lret
into
pop
sub
daa
sub
xor
stos
push
mov
insl
call
inc
push
push
pop
mov
jnp
xchg
lcall
add
repz
movl
aas
jl
or
xchg
scas
dec
xchg
jns
stc
pop
xor
lcall
cwtl
xchg
insb
dec
mov
or
sbb
and
cmp
mov
mov
sbb
adc
xchg
mov
bound
sub
mov
add
jae
fs
xor
dec
sbb
xor
inc
or
pop
mov
mov
int
pop
insb
rcrb
fwait
cmp
pushf
sbb
test
icebp
mov
pusha
cmp
mov
mov
ficoms
roll
test
and
stc
insb
loop
and
ljmp
add
or
pop
jmp
gs
enter
jp
in
push
and
mov
in
cmp
xor
jp
in
inc
ss
inc
leave
fimull
or
je
xor
mov
rol
inc
inc
pusha
loope
mov
mov
fdivr
fsubl
ss
cmp
sbb
pop
jg,pn
call
push
cmp
popf
mov
dec
jmp
and
imul
mov
jge
xchg
mov
in
bound
xor
jp
jp
in
imul
jnp
repnz
and
or
pop
adc
dec
xor
dec
sub
es
daa
mov
mov
insl
loope
jg
rcll
jecxz
stc
mov
cli
fsts
outsb
lds
jo
nop
test
and
push
cmp
negb
in
bound
sti
ret
push
into
dec
fcoml
lea
sarb
repz
or
and
adc
xchg
fs
pop
xor
adc
sbb
hlt
loopne
and
mov
push
nop
cmp
add
jl
push
ret
add
mov
fs
xor
mov
push
pop
fnsave
ret
lcall
xor
mov
mov
push
push
rclb
nop
jns
push
aad
bound
in
xor
in
push
xchg
data16
outsl
xor
mov
imul
jnp
outsl
addb
jmp
xor
insb
mov
sub
mov
mov
dec
cmp
mov
push
test
pop
inc
cltd
lds
add
daa
ret
push
xor
cmp
xchg
add
pop
clc
pop
pop
in
int3
or
jg
sub
or
icebp
shrl
std
test
mov
xchg
mov
push
jmp
and
repnz
fldt
cmpsl
dec
or
loope
inc
sub
dec
jnp
fcompl
and
outsl
cltd
adc
addr16
fwait
arpl
pop
in
lret
js
cld
xchg
mov
xlat
outsb
and
mov
imul
adc
xchg
push
cmpsb
pop
xorb
pop
arpl
mov
out
mov
inc
sub
adc
push
insb
roll
inc
mov
sahf
pop
add
push
pminub
and
lret
push
push
je
jns
dec
jle
hlt
cmp
push
shr
shrl
imul
add
mov
and
jp
adc
call
pop
lret
es
xor
push
iret
adc
fnstsw
faddl
scas
inc
or
xor
push
xor
leave
sbb
inc
lock
push
int
xor
lods
sub
add
inc
arpl
pusha
and
ljmp
mov
inc
roll
or
cli
mov
xchg
cwtl
repz
es
add
or
adc
lcall
lds
push
lret
popf
sbb
cmp
andl
loop
xor
mov
mov
lcall
std
cltd
lret
shrl
add
fs
lahf
addr16
jl
loope
xchg
fstps
xchg
daa
shll
sbb
ja
loope
and
sbb
clc
sahf
in
insb
sbb
dec
mov
dec
mov
xor
or
fsubl
in
repz
sub
jp
push
dec
cmp
pop
mov
cmpsb
daa
xchg
notb
sub
loop
aam
xor
inc
cmp
xchg
shl
pop
enter
mov
ja
test
and
mov
lods
pop
adc
xor
int3
mov
dec
and
lret
adc
fisubl
dec
stc
mov
dec
mov
pop
dec
adc
and
push
in
mov
xchg
fldcw
cmp
test
xchg
out
xor
std
cld
lcall
jmp
mov
pop
imul
jmp
mov
mov
jle
mov
jp
xchg
lea
sub
and
cmpsl
xor
mov
push
andb
mov
lods
push
mov
movsb
jae
mov
cltd
jno
loop
test
xlat
and
inc
xorl
inc
xchg
in
insl
iret
xor
paddb
out
je
out
fmuls
adc
mov
mov
inc
xchg
mov
inc
sti
pop
push
inc
sarl
sub
sbb
gs
loopne
mov
pop
add
lods
cwtl
xor
and
add
data16
in
cwtl
lahf
pop
out
mov
fldl
inc
jb
repz
jle
fwait
stos
xor
sahf
adc
xor
mov
mov
inc
test
cmp
and
push
cmovbe
out
mov
divb
movsl
fistpll
icebp
lahf
mov
sbb
jns
xchg
push
push
cmc
data16
or
sbb
iret
add
lret
fbstp
cmpsl
xchg
pop
iret
loop
les
pop
insb
pop
push
shrd
sbb
aad
adc
push
jne
fimuls
ffreep
push
lret
addr16
mov
mov
js
add
orl
inc
rcrb
jbe
xlat
dec
bound
mov
cmp
dec
pop
or
into
out
xor
jle
mov
cmpsl
repz
js
arpl
pop
fstps
mov
stos
test
jge
dec
or
push
xchg
jb
add
jno
popf
pop
scas
xorb
fwait
pusha
push
pop
insl
and
adc
dec
mov
arpl
mov
sub
inc
lock
jmp
testl
lret
xor
popf
mov
movsb
gs
cmpsl
sbb
push
jo
sti
or
or
xlat
jl
fwait
insb
pop
push
out
fistpl
lcall
mov
shlb
sbb
sbb
inc
cltd
jo
push
jp
enter
xchg
sbb
push
cmp
out
xchg
lods
mov
fbld
ljmp
push
es
cmp
mov
cltd
imul
mov
ja
cmp
dec
into
lcall
pop
sbb
or
loope
sbb
mov
mov
std
aad
es
jo
fimuls
sbb
pop
aad
repz
lock
cmp
out
or
jo
movsl
pop
add
or
idiv
mov
filds
add
jp
enter
adcl
xchg
bound
ret
add
lods
jp
push
mov
cmc
jno
dec
push
mov
lret
jo
xor
adc
sbb
cmp
test
sbb
adc
fsts
imul
sub
call
fwait
nop
xlat
and
jne
pop
mov
ficoml
daa
lods
lret
push
sub
pop
cltd
in
out
inc
cmpsl
mov
or
jecxz
icebp
outsl
pop
fisubrs
aam
push
dec
mov
cmpb
push
xor
xchg
sub
ss
cmp
aas
push
and
mov
or
test
mov
gs
or
xorb
cmp
pop
xor
mov
push
cld
pop
aas
jne
leave
fldl
mov
cwtl
push
inc
jo,pn
out
fiaddl
or
outsl
dec
xor
or
xchg
in
and
mov
or
outsl
lret
adc
jns
adc
out
jp
mov
cwtl
inc
mov
testl
fwait
or
aaa
xchg
sub
pop
sub
loopne
mov
movsb
push
jge
pop
add
leave
pop
fsubl
pop
movsl
jl
jne
rolb
inc
inc
mov
pop
loop
fs
push
sub
mov
cli
and
mov
outsl
pushf
bound
add
das
sub
adc
jne
rorl
adc
add
lods
addr16
lret
ss
lds
xchg
test
loop
in
sbb
sbb
into
push
cmp
xor
jae
inc
xchg
jmp
pop
mov
in
scas
sbb
leave
inc
popa
sbb
icebp
dec
loop
lods
test
mov
ss
pop
dec
jge
push
in
adc
fs
cmc
fists
inc
out
jne
jb
mov
sub
and
addr16
aam
out
sahf
push
jecxz
pop
mov
pusha
shl
scas
mov
mov
pop
fadd
or
das
or
enter
add
scas
jns
dec
fdivrl
in
and
fldenv
mov
inc
les
sub
mov
adc
add
test
sahf
inc
cmpb
adc
in
add
fdiv
cmpl
cmp
sbb
sub
cmp
shl
mov
mov
lea
cmp
and
cmpsl
stc
xor
int3
add
sub
jmp
ljmp
inc
jno
xchg
rcrb
add
xchg
inc
hlt
mov
push
sahf
mov
loop
push
outsb
scas
xchg
in
mov
cmp
add
mov
sahf
sbb
dec
add
and
sub
daa
pop
lcall
outsb
cmp
movswl
lods
jmp
jmp
and
mov
out
jbe
push
jle
push
or
mov
es
fdivl
xchg
cmpsb
cmp
jae
mov
pop
das
mov
ret
push
mov
or
rorb
dec
pop
jle
ret
in
xchg
jo
inc
and
fwait
shrl
nop
and
jbe
xchg
adc
scas
and
loop
sub
loopne
inc
adc
adc
pop
sahf
jnp
out
es
sub
insl
mov
loope
jae
mov
pop
mov
aas
js
mov
add
sbb
push
aaa
mov
cmp
loope
mov
pop
std
mov
mov
fcomps
adc
mov
sbbl
js
scas
ficoms
add
jne
in
sahf
subb
adc
fs
cmp
out
in
scas
xor
mov
mov
stos
push
popa
or
inc
push
xchg
push
je
inc
call
jecxz
aaa
rcl
lds
or
ret
sub
pop
cmp
int3
in
mov
pop
js
mov
jno
or
mov
rorb
ficompl
out
sarb
mov
std
scas
pop
pop
jnp
mov
push
sahf
aad
fsubp
xchg
mov
popf
outsl
mov
mov
lds
jb
pop
repz
popa
or
les
int
cmp
stos
mov
jg
pushf
push
lock
mov
aas
fadd
push
imul
push
or
inc
data16
sub
xchg
adc
pusha
and
sub
in
ret
xor
and
lea
inc
inc
jo
xor
mov
cltd
and
inc
add
pusha
dec
cmp
lds
loopne
mov
jnp
jcxz
pop
in
shl
pop
and
sarl
mov
mov
ja
jb
mov
rcl
mov
ret
stos
mov
stos
sahf
pop
add
jbe
andb
idivl
movsb
xchg
mov
in
daa
push
or
or
jle
movsl
mov
in
stos
rorb
imul
leave
arpl
outsl
mov
enter
or
hlt
adc
inc
sub
sbbl
loope
or
lret
cwtl
add
inc
out
mov
mov
mov
lods
sar
xchg
testl
push
test
movsl
xor
jmp
push
movl
aas
ret
pop
stos
pop
mov
jbe
stos
cli
popf
pop
add
in
xchg
lock
fldenv
mov
loope
inc
pop
mov
loop
xor
and
xor
rclb
movsl
or
cmpsb
outsl
mov
ret
add
rcll
sahf
bound
cmp
outsl
int
adc
dec
in
mov
fwait
out
pop
lea
and
cwtl
xor
xchg
mov
insl
dec
ret
fsubs
jb
les
loope
rolb
or
jle
dec
xchg
mov
icebp
add
outsl
stc
jns
gs
sbbb
fadds
sbb
loope
pop
xchg
xchg
push
popf
add
fcompl
sbb
leave
sub
push
insb
ficomps
ljmp
cmp
mov
test
push
adc
loop
popl
movsl
outsl
jno
pop
or
or
push
leave
push
aaa
repz
shll
repnz
pop
pop
lret
push
cmp
int3
test
out
lock
jg
xor
jecxz
aas
jg
stc
dec
add
adc
mov
lret
ss
or
lods
out
lret
icebp
mov
ffreep
inc
sub
jb
jp
push
cmp
daa
sub
and
adc
adc
adc
lcall
or
hlt
mov
xorl
int
add
sti
mov
mov
mov
sbb
jmp
sbbl
mov
repz
sub
sbb
mov
in
push
lret
iret
gs
mov
and
mov
cmpsl
rcll
add
in
out
xchg
mov
add
sbb
repz
test
cmp
add
push
les
das
and
popa
pop
adc
iret
push
xchg
dec
pop
mov
jge
andb
cmp
fwait
stos
lcall
cmp
loop
decb
subl
cld
pusha
leave
aad
fldl
jae
push
outsb
repnz
loopne
lahf
in
hlt
jae
pop
daa
mov
les
xor
out
movsb
bound
aad
hlt
fadds
xor
pop
fs
dec
dec
shrb
adc
int3
movsb
out
pop
fmulp
loop
inc
lods
sarb
jle
pop
jmp
fsubr
popf
mov
out
mov
insl
pusha
xchg
outsb
sbb
pusha
mov
stos
in
fs
mov
jle
and
adc
mov
gs
aad
mov
mov
jl
jae
or
test
ficoml
in
adc
filds
dec
sbb
xor
cmp
popf
int
xchg
push
add
out
xor
inc
in
ja
dec
and
je
jb
ds
sub
xor
sub
inc
sub
pop
sub
cmpsl
popa
or
add
mov
and
sarl
mov
int
dec
push
rcll
mov
cli
sbb
fwait
rol
xor
xchg
mov
test
test
xlat
bound
or
out
lods
into
icebp
cmp
xor
mov
sub
stc
push
lcall
stc
mov
mov
lret
cmc
cmpsl
push
daa
pop
lret
pop
sarb
cld
cmp
cmp
push
jo
sar
in
aas
lock
stos
mov
inc
mov
jge
test
in
and
mov
mov
movsl
jecxz
push
xlat
outsb
push
movsb
sub
lahf
and
into
lods
negb
in
stos
jne
xor
addr16
adc
test
mov
clc
push
xchg
mov
stos
sub
fs
rcll
popa
scas
push
mov
scas
fiadds
push
dec
cltd
cmpsl
jge
mov
js
pop
mov
mov
icebp
mov
test
leave
xchg
repnz
cmpl
sar
dec
adc
mov
gs
scas
mov
cmp
sub
aam
adc
dec
ljmp
mov
cltd
pop
dec
push
mov
imul
mov
test
notb
mov
das
in
das
jno
xchg
out
ret
xchg
nop
jle
mov
fnstcw
mov
jmp
lahf
pop
imul
loope
xchg
push
inc
outsl
xor
sbb
pop
lock
add
lret
int3
cmp
push
pushf
mov
adc
push
push
bsf
es
xor
xor
jecxz
dec
insl
sub
and
mov
out
ret
mov
mov
xor
ljmp
stos
mov
mov
adc
mov
jo
mov
stos
mov
push
mov
jecxz
sub
negb
hlt
or
dec
imul
jbe
dec
cld
mov
cmpsb
imul
inc
cmp
mov
sti
add
test
sub
dec
push
inc
decb
push
pop
jbe
cmp
xor
mov
loopne
push
dec
push
inc
imul
rcrb
cld
int
dec
jge
aas
in
cltd
lahf
cmp
insl
push
sub
mov
movl
sub
out
sbbl
insl
std
bound
ret
push
fildll
mov
push
pop
mov
wbinvd
add
rorb
pop
dec
movsl
enter
and
int3
mov
mov
and
mov
aaa
scas
addr16
test
jg
push
negb
imul
jge
sub
iret
lret
sub
adc
sub
mov
sub
xor
mov
pop
cmp
sub
das
and
mov
push
sub
jnp
pop
mov
push
pop
fadd
or
jae
sarb
lock
pop
enter
test
jno
dec
icebp
jne
xchg
icebp
dec
rorb
enter
or
mov
aaa
mov
popa
hlt
popl
add
xchg
in
outsl
or
dec
mov
sub
lret
mov
sub
fwait
lods
imul
into
test
stos
cli
mov
rcr
jnp
xor
pop
xchg
loop
outsb
cmp
int
xchg
std
add
push
repz
sub
loopne
leave
fwait
lret
mov
mov
fistps
scas
adc
inc
mov
data16
sub
xor
mov
sbb
jmp
jnp
pop
jp
xor
into
rorl
xchg
push
gs
jb
test
sbb
mov
scas
in
mov
push
repnz
push
stc
mov
lods
xor
and
sbb
xchg
mov
in
adc
cmp
mov
mov
daa
roll
add
jno
lods
imul
lock
jbe
outsl
adc
scas
adc
aas
mov
aas
icebp
outsb
popf
mov
dec
andb
dec
pop
and
popf
ret
ja
loopne
adc
sub
xor
push
push
test
mov
ja
xchg
push
pop
jnp
xor
sub
sub
cmp
sahf
popf
and
movsb
xor
cmp
xor
ret
sub
sbb
bound
mov
out
inc
push
andb
in
adc
or
insb
out
mov
mov
xor
fsubs
push
lret
pop
bound
and
add
fbstp
jae
popf
add
inc
fists
lahf
jno
jmp
lock
insl
sahf
sub
jbe
dec
fcomi
insb
xor
pushf
sub
imul
imul
inc
ret
sarb
mul
testb
sbb
stos
fnstenv
cmp
cs
push
fiaddl
jbe
insl
out
out
daa
jle
mov
mov
stos
std
mov
insb
add
es
adcb
out
xchg
inc
mov
fstps
repnz
xchg
mov
inc
or
add
xchg
mov
mov
fcompl
inc
test
mov
out
lods
shrl
sbb
jle
in
xchg
mov
filds
sub
leave
ja
sub
and
push
gs
rclb
add
dec
mov
int3
adc
call
icebp
aam
xchg
scas
dec
in
xchg
fsubr
iret
insl
imul
in
arpl
test
add
addr16
clc
je
xor
ret
call
in
pop
imul
mov
ja
mov
add
in
mov
jbe
in
and
lret
in
dec
ret
in
fdivl
cmpsb
jno
jecxz
push
repz
loope
stos
je
add
sbb
inc
shrb
mov
stos
rcr
pop
roll
into
mov
int
push
sbb
push
fldenv
jecxz
in
dec
mov
popf
and
push
bnd
mov
jp
inc
add
push
rcr
mov
dec
dec
xor
adc
out
mov
mov
cmp
aad
dec
xchg
jle
iret
sub
out
add
inc
push
out
dec
int
outsb
test
lcall
and
xchg
lahf
ret
pop
test
div
sti
pop
and
cmp
or
daa
lock
dec
test
sti
test
mov
fdivs
sbb
testl
sti
cs
dec
ljmp
pushf
cmc
add
or
push
insl
sbb
insl
jb
repz
jb
xchg
push
dec
push
in
mov
lahf
adc
jnp
fdivrs
movsb
pushf
lea
repnz
sub
cld
enter
jmp
cmp
scas
pop
adc
addr16
cwtl
adcb
sbb
das
shlb
dec
inc
inc
pop
lods
jmp
jo
icebp
push
push
cld
aaa
aas
jns
out
je
into
jns
les
mov
dec
push
pop
jmp
add
scas
mov
sub
es
loopne
fs
jl
arpl
sub
frstor
jbe
adc
jnp
push
sahf
cld
sbb
mov
push
mov
stos
fnsave
das
das
out
orl
jns
pop
fistpl
sbb
lcall
cltd
pop
inc
jecxz
out
lds
stos
fcmovnbe
pop
flds
stc
movsb
push
push
fidivrs
mov
dec
jmp
jmp
fcoml
pop
push
cmp
jl
stc
jbe
xor
adc
neg
and
icebp
popf
push
or
leave
inc
mov
push
ret
ret
mov
adc
bound
addr16
jo
lods
ds
xchg
pop
sti
sub
xor
flds
mov
iret
cmpsl
les
cli
mov
cmp
xor
sbb
sbb
ret
mov
lds
in
faddl
sbb
iret
in
mov
and
mov
sub
lds
mov
or
mov
inc
adc
es
sahf
and
mov
lret
mov
push
xlat
loope
push
outsb
lret
pop
xor
fistps
inc
aad
cmp
in
lret
add
loopne
add
nop
mov
int3
pushf
sbb
repnz
mov
sbbl
test
pushf
into
sahf
loop
or
sub
rorb
inc
call
int
cmpsl
setg
je
dec
pop
mov
roll
icebp
push
dec
hlt
cltd
ljmp
test
inc
popa
js
mov
or
mov
push
push
jnp
out
clc
movsb
mov
mulb
inc
adc
fcoms
mov
add
in
inc
jbe
rorl
adc
inc
add
aas
imul
loopne
mov
leave
sbb
pop
cli
popa
push
xchg
shll
jge
frstor
or
lods
out
xor
push
repz
pop
shll
or
mov
inc
icebp
enter
mov
imul
xor
xorb
xchg
mov
mov
mov
and
and
jns
sbb
sbbl
fwait
push
jno
daa
push
cmp
lahf
jecxz
lret
cmp
xor
sbb
sahf
xor
xchg
or
out
sahf
jbe
adc
or
push
xchg
dec
shll
push
xor
sahf
pop
in
jecxz
arpl
jge
hlt
xchg
jae
jle
imul
std
cltd
gs
cmp
lcall
rcrb
mov
adc
movaps
idiv
idivb
push
ret
aam
lock
push
in
sub
rcll
imul
aas
sti
sub
adc
out
xchg
jl
or
cli
or
jp
out
imul
xchg
adc
sbb
xchg
dec
sub
xchg
movsl
jb
mov
jle
leave
cmp
push
cmp
push
lds
xor
fcom
add
ja
push
add
pop
loopne
orb
fdiv
dec
add
popf
pop
nop
mov
mov
and
push
mov
jnp
dec
adc
xchg
in
mov
push
dec
das
jne
lds
ret
lret
into
call
or
mov
add
mov
mov
cwtl
stos
push
mov
mov
pushf
lret
mov
sbb
jns
dec
out
mov
push
aaa
outsb
pop
mov
pop
cwtl
push
pop
mov
push
lcall
std
data16
and
in
popf
in
popf
mov
popa
mov
xchg
add
mull
sub
shl
jne
int
push
cwtl
je
iret
mov
xor
sub
repz
int3
insb
xor
mov
sub
daa
pop
mov
mov
xchg
scas
dec
jae
push
jne
mov
mov
es
adc
push
push
pushf
push
lret
mov
aam
rorl
mov
cmp
xorl
shlb
std
gs
fldt
pop
das
daa
adc
sbb
inc
mov
outsb
pop
loope
sub
push
jl
adc
sti
enter
push
int
xor
ljmp
pop
repnz
xor
pushf
cli
and
das
nop
adc
jmp
and
cwtl
int
mov
or
shll
das
and
in
outsb
pushf
pushf
fnstsw
mov
cld
loope
inc
insl
arpl
cmpsl
sbb
add
lods
jb
std
xorl
daa
cmc
and
test
inc
data16
lea
dec
add
pop
les
xchg
and
dec
xor
push
dec
sbbl
jne
aam
aas
mov
mov
push
jns
nop
lock
dec
int3
add
mov
dec
call
lahf
imull
sub
jne
mov
aaa
mov
xor
pop
sub
push
jmp
ret
out
pop
gs
or
add
bound
pop
inc
enter
lahf
fidivrl
jnp
push
jecxz
inc
pop
js
popf
and
rcr
pmaxub
loopne
mov
scas
push
stc
adc
xor
hlt
xor
orb
fsubrl
mov
mov
mov
add
sahf
repnz
mov
arpl
int
adc
mov
es
xchg
push
push
pop
jnp
fs
sub
cmc
add
leave
cmp
mov
cs
jge
fs
das
cmpsb
jns
mov
adc
fistl
leave
dec
mov
es
pusha
cwtl
lds
test
sub
dec
add
adc
std
add
or
lds
adc
ja
pop
in
repz
imul
imul
out
pop
xchg
cli
pop
add
xor
loop
jo
pushf
xlat
and
sub
xor
outsb
or
pavgw
inc
push
ret
je
in
les
mov
pop
pop
mov
jg
and
add
inc
cwtl
inc
mov
fnsave
rolb
pop
test
jb
or
pop
mov
subb
cltd
adc
sti
or
mov
or
aam
sbb
in
ret
leave
dec
mov
iret
addr16
insl
sbb
call
push
add
push
xchg
leave
mov
test
das
push
cmp
cltd
mov
xchg
ror
jmp
inc
mov
pop
mov
sbb
push
icebp
lods
mov
aas
jle
sarl
shll
in
push
das
dec
xor
sti
sub
shl
rorb
mov
dec
cs
cs
popf
dec
mov
push
mov
insl
and
outsb
cmp
int
data16
adc
or
sub
mov
mov
mov
xor
sbb
rolb
movsb
push
insb
stc
sbb
inc
cmp
cld
or
sti
mov
nop
jl
mov
mov
shlb
pop
stc
inc
shrb
popa
shll
mov
mov
leave
outsl
jb
xchg
aad
xor
mov
addr16
xor
ljmp
inc
xor
or
add
sub
not
cmp
cwtl
lret
add
jl
cltd
into
push
lcall
xchg
icebp
mov
test
or
sbb
fstpt
sbb
scas
addr16
fidivl
roll
dec
inc
outsl
adc
hlt
jle
es
les
lds
add
js
into
subb
aas
dec
mov
repnz
dec
ss
shlb
cli
push
lret
fistpl
sub
push
pop
shrd
xchg
div
pop
push
fsubs
ret
or
jnp
rclb
and
stos
lret
adcl
and
lret
cmp
pop
push
or
adc
ret
cmp
pop
decl
clc
loope
add
sub
in
movsl
cmp
mov
shll
pusha
daa
jmp
loope
lahf
cli
mov
test
nop
dec
adc
dec
xchg
cmpl
pop
rclb
push
jle,pn
fcmovne
inc
adc
cli
jo
inc
ja
pop
in
ljmp
inc
sbb
shll
test
add
enter
movsb
pop
sbb
jbe
dec
call
xor
jno
incl
rol
or
jp
outsb
sbb
ret
fyl2x
and
push
sbbl
inc
pop
ret
jecxz
jbe
fucomip
shll
sbb
jbe
xchg
inc
mov
inc
dec
add
ficoms
add
xor
push
inc
in
pop
dec
and
mov
dec
cmp
jo
pop
mov
lods
cmp
mov
adcb
and
popa
dec
into
inc
ret
ja
xchg
les
jecxz
les
lock
sbb
sbb
loope
mov
stos
cmpsb
out
mov
stc
daa
iret
iret
cld
jmp
jo
lods
or
cmpl
hlt
cmp
pop
notl
add
xor
inc
xor
mov
ss
sbb
cwtl
pop
faddp
pop
and
xlat
jg
out
fsub
mov
jb
mov
xlat
fstpl
cmpsl
ds
sahf
cli
and
add
sub
div
mov
lcall
sti
aaa
pop
mov
js
sbb
adc
je
and
xor
pop
cmp
aam
mov
jg
mov
in
fnstenv
in
mov
pusha
add
movb
ret
add
jno
jecxz
insl
or
xor
stos
pusha
mov
insl
add
xor
jno
mov
sub
add
daa
or
out
scas
jno
sbb
xchg
ret
in
mov
mov
jmp
xor
jle
push
sub
popa
arpl
iret
jns
xchg
or
cmp
xlat
cld
pushf
andb
decb
movsl
loopne
hlt
mov
pop
ljmp
test
dec
fmul
lds
inc
mov
cmp
inc
inc
cmp
int3
test
inc
cmp
aas
sbb
gs
aaa
jno
mov
cld
dec
call
sbb
adc
xor
popf
mov
jg
fsubrp
sub
inc
adc
pop
jo
push
test
sbb
lahf
pop
mov
enter
std
add
rorl
movsb
inc
das
mov
inc
bound
mov
mov
mov
jns
cmpsl
sub
ds
mov
dec
sub
mov
shrl
stc
lret
lock
inc
pop
cltd
push
sahf
jno
xchg
sub
iret
mov
sarb
fisttpl
push
inc
cmp
sub
mov
dec
shlb
cltd
xchg
sarb
ss
sub
lock
jbe
cmp
fs
or
xchg
or
and
or
fcoml
xchg
das
dec
mov
cs
xchg
sbb
sbb
mov
inc
cli
icebp
push
pop
fstpl
jecxz
lret
pop
mov
cwtl
cli
in
and
sub
push
xchg
clc
roll
popf
sbb
movsb
jae
data16
xor
outsb
pop
dec
cmpsl
add
pushf
ror
leave
fadds
imul
pop
loopne
mov
fcomps
push
rcrl
fdivrl
fistps
scas
mov
shrb
mov
or
jo
adc
fnstcw
orb
lods
subb
aaa
pushf
rorl
pop
cmp
jb
sub
cmpsl
push
xchg
jg
dec
lods
cmp
and
cmp
nop
in
adc
mov
push
cmpb
sbb
push
push
inc
bound
sti
popa
arpl
jmp
jo
push
cmp
mov
adcl
inc
mov
mov
sbb
ret
ficomps
push
and
shrb
add
mov
sbb
imul
jmp
add
add
mov
pushf
shrb
xor
andl
cmc
jb
int
mov
sub
xor
add
outsb
insl
mov
in
add
and
xor
or
add
or
scas
data16
lods
ret
vprotd
sbb
std
push
or
pop
push
pop
ds
xchg
inc
inc
sbb
and
mov
fcompl
xchg
pop
sahf
xor
push
movsb
mov
jmp
out
ja
xchg
xor
sti
pop
sub
or
adcl
jmp
ret
aad
loopne
loopne
ss
scas
dec
jae
xchg
scas
clc
cmp
and
mov
fstps
adc
inc
mov
jno
push
xchg
pop
mov
fs
cltd
pop
jb
int
mov
push
push
and
ss
dec
xchg
ret
push
cmpsl
aad
rcrl
or
push
mov
imul
inc
test
fadds
fistpl
mov
js
ret
test
fs
mov
mov
xchg
adc
jae
and
fs
data16
icebp
hlt
xor
mov
les
and
fsubrs
sbb
mov
test
fnsave
int
push
fadds
in
mov
pusha
sub
cwtl
xlat
dec
cltd
lcall
jne
out
int
xor
es
adc
popf
mov
cmp
xor
sub
sahf
lcall
pop
das
cmp
mov
push
loopne
jno
clc
mov
push
jne
or
inc
lahf
or
mov
leave
imul
xor
es
inc
lods
dec
jno
jns
jb
cld
ja
push
clc
imul
mov
loop
nopl
mov
out
pop
aam
mov
int3
jae
mov
mov
test
jle
loopne
xchg
xchg
test
clc
push
movsb
xchg
imull
jg
mov
mov
mov
in
cld
lods
jne
mov
out
add
or
pop
lret
pop
sbb
loope
repz
pop
xlat
xchg
addr16
push
cmp
adcb
ret
movsb
jae
inc
adc
ds
addb
sbb
lock
stc
jecxz
fwait
mov
pop
in
cmp
cmp
and
xor
nop
call
mov
ret
shr
cmc
pop
aad
pusha
mov
cmp
rcll
cltd
subl
sub
inc
xchg
sbb
pop
aad
mov
add
dec
lds
dec
sar
icebp
loope
cltd
call
add
adc
fimuls
jnp
in
inc
push
xchg
mov
dec
out
loopne
mov
sub
jg
shlb
mov
fs
mov
cwtl
adc
or
mov
cmp
mov
in
inc
xchg
push
pusha
sahf
idivl
jae
jp
or
es
and
mov
pushf
ret
sub
movsl
test
mov
and
insb
out
mov
mov
mov
int3
add
ret
int3
mov
mov
das
sub
aad
xchg
js
lock
les
push
int3
jae
out
pop
ds
imul
loope
incl
inc
dec
mov
mov
jg
add
dec
jns
mov
aad
adc
add
data16
jae
pop
pop
into
addb
ja
inc
jmp
test
push
fsubs
add
dec
vrsqrtps
ret
jmp
or
pop
mov
cmp
inc
fwait
in
and
add
push
jnp
test
xchg
pop
repnz
push
mov
test
div
in
loope
in
mov
sbb
mov
scas
push
jg
iret
mov
cmp
mov
mov
dec
mov
stc
inc
push
xor
and
jmp
cmp
stc
xchg
cld
xor
dec
cld
rorl
lods
and
cli
in
rcrb
mov
and
ret
pop
imul
stc
sbb
cld
fistps
sub
sbb
jg
adc
mov
jle
popa
ds
mov
lds
add
shlb
jbe
rcll
xor
mov
push
xor
push
lret
loop
xchg
jge
mov
dec
ret
mov
outsw
in
jge
jle
or
or
add
mov
rclb
jnp
mov
adcb
ret
ret
sbb
int3
out
sub
pop
movsb
push
insl
add
jle
je
movsl
je
ret
push
dec
jmp
sbb
dec
or
sbb
imulb
ljmp
add
icebp
js
cmp
jp
jbe
cli
jmp
inc
test
mov
idivb
push
aaa
xchg
ds
xchg
dec
in
imul
aas
aas
hlt
fisttpl
push
cs
cmp
incl
pushf
sub
xchg
jae
xchg
jg
jge
mov
push
mov
ficoml
in
jl
xor
and
pop
adc
xchg
bound
shrb
or
mov
inc
adc
outsb
mov
sbbl
int3
test
mov
fs
cmpsb
jl
and
std
into
inc
cmp
fists
mov
mov
and
nop
ljmp
mov
sbb
lds
pop
dec
into
mov
sbb
icebp
fists
xchg
xor
gs
or
jp
shrl
pop
sbb
jle
lock
cmp
clc
jns
xchg
lcall
enter
js
enter
mov
movsl
cmp
mov
lahf
incl
in
shrb
nop
jnp
in
insb
or
orb
xor
es
sub
mov
cmp
jp
les
stos
pop
xchg
dec
fdivl
lcall
jg
jae
movsb
shrb
outsb
ss
pushf
add
aas
mov
or
jne
sub
and
divb
push
add
push
push
jle
pop
movsl
rorl
or
xor
dec
push
mov
insb
inc
lods
ja
push
inc
xor
mov
out
inc
adc
subl
addb
test
test
push
adc
ss
push
add
pop
movsl
jbe
and
mov
mov
divb
lods
fs
jns
xchg
sahf
mov
mov
pushf
mov
jmp
mov
call
out
loope
sbb
imul
cmp
mov
roll
or
out
or
mov
inc
sbb
jne
jb
dec
inc
xchg
enter
mov
popa
out
lea
mov
xchg
mov
notl
addr16
fmull
je
cmp
cmp
push
icebp
sub
jecxz
cld
int3
pop
mov
add
cwtl
pop
xchg
mov
xor
cs
push
out
loop
divl
fcmovnbe
inc
mov
dec
adc
lcall
fisubrl
insl
sbb
mov
mov
inc
pushf
and
dec
fsubrl
test
arpl
dec
out
fisubl
lret
xor
rclb
popl
jae
inc
cli
rcrl
and
das
cmc
ja
adc
rep
ret
outsl
addb
pop
and
mov
cmc
loope
mov
pusha
lret
pop
mov
fldt
test
cmp
rorl
and
aaa
fcoml
lret
in
rclb
rcrb
xor
lcall
lret
std
jo
std
popf
ss
push
rcll
push
sbb
ja
popa
data16
fisttps
dec
jmp
je
fwait
inc
cs
push
sbb
rolb
xchg
rolb
lret
ficoml
or
push
in
and
aad
xlat
data16
call
xor
aad
lods
fucomi
and
incl
dec
lock
loope
sub
mov
xchg
and
hlt
ficoml
fldcw
inc
insb
jb
jae
testb
stc
cmp
mov
pop
jp
sub
inc
mov
or
pushf
dec
inc
inc
aaa
xchg
inc
gs
or
xchg
jo
in
mov
add
and
mov
and
lret
sarb
cmp
pop
ret
dec
push
or
lods
and
stos
cs
xchg
sub
adc
or
test
in
or
sub
sbb
pop
arpl
mov
stos
lret
xchg
je
add
sti
jl
push
leave
pop
leave
push
jecxz
jnp
inc
push
dec
cltd
pushf
ret
pop
cmp
je
sub
test
pop
lods
jbe
test
lret
dec
cltd
fnstsw
movsb
sbb
lahf
decb
pop
jg
xor
test
fcompl
push
mov
mov
dec
or
mov
lahf
sub
adc
push
test
test
iret
subl
or
and
push
iret
inc
movsl
and
jmp
mov
insb
jb
int
xchg
xor
ror
add
mov
inc
das
in
mov
insl
push
mov
adc
aaa
and
inc
cmp
lret
shrl
ret
adc
nop
sub
jmp
mov
push
mov
or
mov
mov
aaa
sbb
mov
pop
iret
xchg
std
lds
push
idivl
loope
cwtl
cltd
push
mov
or
push
in
cmp
movsl
or
push
dec
pop
push
scas
xor
shlb
mov
inc
cmp
sarb
fcoml
mov
mov
outsb
adc
pop
jl
scas
mov
xchg
sbb
push
mov
mov
inc
jle
mov
jno
pop
arpl
mov
xchg
mov
jno
and
push
mov
lods
inc
or
xchg
popf
jge
addr16
pop
sbb
mov
mov
sbb
test
mov
xchg
int3
sbb
dec
adc
stos
rorl
fs
lret
push
mov
addr16
push
ret
insb
repnz
insb
and
stc
in
or
fisttpl
lcall
xor
pop
sub
cli
leave
jno
mov
and
in
mov
pop
inc
movsl
adc
jae
das
xor
jge
sahf
es
mov
in
in
sarl
push
scas
aam
jge
das
and
in
add
mov
pop
shll
jne
aaa
adc
ja
add
mov
stc
cmc
cmp
or
xorb
fadd
mov
call
test
insb
adc
lods
dec
lds
or
add
pop
les
add
or
jb
lea
mov
scas
jbe
fidivl
stos
cmc
into
jg
int3
bound
pop
stos
or
xor
mov
shld
sbb
loope
call
in
ja
loope
mov
test
inc
pop
inc
jbe
mov
pusha
ds
or
inc
arpl
cmc
add
cmp
dec
std
push
xchg
push
ret
lcallw
cmc
sbb
and
jns
inc
in
mov
out
outsl
mov
xchg
fwait
mov
mov
push
dec
dec
imul
stos
jae
cmpsb
pop
push
dec
repnz
cmp
fldl
dec
lds
xchg
add
sub
stos
cmp
lds
sub
repnz
jb
jb
mov
dec
nop
cmp
jbe
xchg
mov
mov
shr
sub
cmp
outsb
ja
scas
bound
inc
mov
inc
nop
stc
in
imul
bound
and
aad
das
push
and
or
mov
div
jle
lahf
push
pop
insl
jae
cld
xchg
stos
outsb
jg
aas
sti
sub
pop
push
mov
subl
mov
das
adc
lea
loope
fadds
jmp
dec
lock
xor
mov
popa
xlat
and
iret
pop
push
push
test
cmp
sarb
xchg
push
xchg
in
js
shr
mov
mov
adc
jae
push
push
sub
clc
int3
mov
aam
out
iret
push
mov
fildll
mov
ret
cmp
sub
shrl
orl
aas
sbb
loope
out
inc
idivl
cwtl
mov
mov
in
sub
das
imul
dec
ds
mov
leave
std
mov
push
mov
cmp
jbe
outsb
xchg
adc
push
push
inc
and
cld
xor
xor
aad
jecxz
cmp
dec
cmp
int
sub
pop
push
or
out
imul
lods
dec
xchg
sarl
int3
mov
push
jge
pop
rcll
pop
sub
popf
shll
pop
negl
popf
out
and
out
dec
or
out
imul
scas
stos
ffree
daa
scas
cmc
into
pop
xchg
test
cmpsb
into
adc
js
loopne
push
sub
pop
cld
push
adc
loop
js
cwtl
sub
fists
xor
add
scas
pop
subl
xchg
bnd
sti
ret
lods
das
jg
cmp
sub
in
mov
and
test
jae
int3
jp
xlat
xor
xchg
xor
rol
xlat
pop
punpckhwd
int3
nop
xchg
mov
cs
enter
mov
mov
adc
clc
inc
mov
inc
pop
sbb
mov
sti
mov
or
push
jne
add
bound
jne
fcmovne
inc
scas
subb
lock
jmp
pop
adc
nop
mov
movsb
cwtl
mov
shrl
in
fs
clc
fs
xor
fists
enter
jns
xor
mov
adc
orb
sub
inc
push
pop
addb
cmp
in
mov
cmpsl
addb
test
fldl
fwait
dec
js
mov
push
leave
sub
push
adc
xorb
and
xchg
ds
fwait
mov
loopne
out
inc
cli
add
enter
dec
testl
flds
mov
loope
cmp
cmp
lods
dec
add
jns
dec
lahf
or
testl
mov
xchg
mov
adc
in
mov
jb
stos
add
sub
insb
and
push
lahf
inc
jae
adc
sub
mov
aad
testb
jo
fidivs
shl
lods
jnp
inc
lea
mov
xchg
fidivrl
movsb
jp
les
lret
sub
jbe
adcb
sub
add
push
clc
mov
pop
data16
enter
leave
and
ja
stos
pusha
mov
mov
push
fsubrl
in
mov
push
mov
stos
pop
repnz
mov
and
jmp
data16
xchg
add
outsl
or
inc
dec
movsl
cli
sbb
jmp
mov
sub
inc
push
inc
sbb
fnsave
lds
push
and
cmp
icebp
xor
pusha
push
lds
inc
ficomps
dec
outsl
cltd
cmc
stos
test
mov
add
sbb
int
cmp
out
mov
or
mov
mov
cs
imulb
pop
jecxz
push
push
je
pop
adcb
dec
sub
clc
mov
inc
mov
movsl
jmp
js
es
scas
jae
push
xor
lcall
repz
or
push
les
jnp
cmp
insl
cmp
push
fwait
cmp
sub
cs
loopne
cwtl
les
aam
call
push
gs
cmp
mov
mov
test
and
xchg
lods
push
mov
fdivl
push
sbb
push
inc
arpl
add
movb
les
fldt
fcomps
into
mov
or
jl
adc
mov
and
cmc
jo
jns
subl
idivb
cld
xor
jg
clc
mov
xor
mov
jge
push
popa
out
repz
sahf
cwtl
in
or
pop
xor
jne
in
cmpsl
popa
push
sub
mov
loop
cmp
or
lods
jmp
cltd
pop
xchg
jecxz,pt
xor
push
sti
ljmp
mov
sahf
jge
ret
mov
movsb
pop
mov
xchg
cmpsb
mov
loop
pop
pop
jns
mov
sub
pushl
and
adc
aam
pop
in
dec
inc
lock
stos
sbb
and
cli
cmp
or
push
imul
jmp
mov
std
lcall
mov
cli
imul
lods
mov
adc
pusha
pop
mov
sub
mov
mov
flds
es
push
ficoml
bound
test
jo
mov
mov
std
stos
ss
mov
inc
test
xorb
pop
out
cmpsl
mov
test
int
imulb
cli
add
dec
das
sbb
rcr
adc
jbe
sti
test
loopne
or
in
jmp
xor
and
mov
sub
adc
adc
xchg
das
test
xlat
push
leave
jb
mov
mov
cwtl
int3
call
pusha
mov
mov
adc
sub
ds
rorl
xchg
sti
outsb
iret
cmc
mov
sub
dec
and
ss
ret
arpl
push
xor
movsl
jmp
cmp
clc
movsl
inc
and
sbb
ja
push
mov
fucomip
inc
out
push
push
inc
mov
xor
insl
sbb
xor
push
xchg
sbb
or
ret
jle
sbb
std
dec
rorb
or
add
jb
test
imul
and
repnz
xor
fdecstp
mov
in
shll
inc
jae
pushf
cmp
decl
mov
test
popa
xchg
cmp
fdivl
cmpsb
sti
add
rorb
inc
lea
cmp
test
pop
imul
mov
addb
adc
idivl
lods
jno
mov
cmp
arpl
std
data16
or
in
lds
lds
gs
outsb
inc
adcb
pop
sbb
lahf
aad
outsb
jnp
rcrb
mov
aas
test
loopne
insb
not
repnz
subb
lret
mov
addb
cli
jl
loope
inc
jl
test
hlt
sub
xchg
dec
xlat
popa
fstpt
scas
inc
xor
sbb
out
cmp
push
enter
lahf
mov
test
dec
notb
inc
pop
mov
movsl
fwait
pop
imul
leave
test
int
jg
ljmp
fwait
sbb
xor
rcr
repz
movsb
fdivl
outsb
mov
cmp
sbb
ss
test
ret
sbb
mov
ret
pop
and
adc
push
sahf
sbb
fisubrs
mov
aaa
jp
pop
aas
xchg
mov
nop
mov
xchg
push
imul
pop
jbe
xchg
mov
leave
and
xor
xchg
dec
or
xor
out
jp
jg
faddl
fimull
xor
add
lcall
mov
inc
stos
scas
shl
stc
sbb
push
sti
pop
cli
xor
pushf
fwait
lret
ret
test
push
dec
pop
mov
or
icebp
cmp
pop
divl
push
add
outsb
xchg
test
mov
lds
js
push
xor
pop
add
jns
scas
lret
test
ret
leave
sbb
enter
or
fst
push
sbb
into
adcl
jmp
repnz
sbb
outsl
inc
push
cmp
add
ljmp
sub
mov
pop
dec
lods
stos
mov
scas
leave
pop
shll
call
sub
hlt
and
shrb
pop
pop
out
mov
mov
outsl
sbb
jmp
xor
xor
data16
jecxz
adc
cmp
ja
add
movsl
loop
sub
lock
or
insb
rol
in
mov
pop
inc
or
lret
push
push
loope
xchg
daa
or
mul
push
jnp
aam
sbb
mov
repnz
lea
dec
push
aam
jmp
pushf
mov
loopne
ja
mov
int
rcll
stos
std
mov
iret
push
mov
xor
inc
cmc
jmp
insl
adc
and
or
pop
mov
and
pop
clc
jecxz
dec
jmp
fs
and
inc
push
test
sub
movb
arpl
jo
jb
inc
call
test
or
and
push
std
enter
inc
cmovno
ljmp
dec
xchg
stc
cmp
fisttpll
rcrl
add
pop
mov
push
icebp
sub
lret
mov
scas
leave
or
fwait
fmull
shll
sarl
mov
lea
push
sbbb
pop
cmc
lcall
hlt
lds
ja
loopne
aas
mov
out
mov
xor
push
sub
pop
pop
lcall
adc
insl
xchg
mov
shrw
fisttps
push
add
pop
lret
mov
pop
pop
sbb
idivb
jecxz
es
add
and
add
into
push
add
hlt
inc
jg
inc
inc
ret
mov
movsl
pop
xor
addr16
mov
push
sarl
mov
inc
or
pop
test
faddl
mov
pushf
pusha
arpl
shll
out
adc
sbb
daa
popa
lock
push
jnp
mov
insl
mov
sub
mov
inc
hlt
push
and
xor
mov
sub
mov
cmp
push
mov
push
ljmp
mov
jmp
fcmovnu
data16
jae
out
mov
fnop
andb
xor
cli
push
jb
add
add
sarb
daa
adc
mul
dec
jge
stc
jns
dec
lods
lret
jns
loopne
scas
push
add
xchg
xchg
cli
movsb
mov
mov
and
aas
push
jl
insb
fcoml
push
mov
or
es
dec
test
mov
add
lahf
mov
je
and
pushf
pop
movsl
cmp
xchg
pop
sti
pop
test
mov
lcall
mov
mov
movsb
mov
dec
sub
in
enter
mov
add
jbe
mov
fs
test
cmp
pop
inc
mov
push
cli
orl
rcll
test
in
pop
ficoml
hlt
sub
xchg
mov
pop
sti
dec
test
rcrl
sub
jmp
int3
icebp
inc
sarb
xor
lret
and
mov
nop
stos
xchg
pop
sbb
loope
daa
push
push
in
push
mov
lret
and
fsts
scas
movsb
mov
or
scas
pusha
fcmovne
adc
xor
mov
dec
dec
sbbl
int3
mov
xor
and
shll
mov
xor
sub
sbb
cld
sahf
inc
cmp
in
xor
xchg
xor
into
lds
cli
shll
pushl
pop
jle
cmp
add
pop
not
mov
sarb
in
cli
movsb
sub
out
push
push
add
imul
and
sarb
clc
imul
sub
mov
das
cmp
mov
int3
xlat
jecxz
push
daa
sbb
push
sbb
or
cmp
sub
cmp
mov
cmp
sub
pop
push
fisttpll
ss
gs
xor
mov
in
decb
sbb
aaa
jmp
cmp
flds
ret
es
movb
inc
jle
jl
outsl
ja
test
insb
xchg
push
test
and
idivb
shll
rorl
mov
stc
ds
xchg
adc
pop
aad
faddl
notb
push
adc
aam
ljmp
mov
popf
je
and
sbb
pop
mov
push
adc
into
sub
cmpsl
and
and
loopne
jecxz
mov
and
cmp
xchg
sub
into
adc
xchg
push
femms
out
and
push
add
inc
and
insl
and
mov
call
cmp
push
lret
scas
pop
cmc
js
outsb
fldt
cmovg
lret
lcall
call
stos
daa
adc
push
fwait
mov
mov
jmp
lret
pop
movsb
push
adc
mov
mov
mov
mov
sub
arpl
ljmp
rcr
cmpsb
aad
inc
cwtl
outsl
pop
mov
cwtl
cwtl
out
decl
jmp
aaa
mov
icebp
repnz
fstps
lahf
and
stc
push
dec
test
push
adc
pop
or
shll
test
lret
sbb
push
addl
sarb
adc
cs
mov
pop
dec
push
mov
push
cmp
hlt
mov
push
mov
rcll
or
jp
jge
fisttpl
out
push
fisubl
or
mov
leave
decb
stos
xchg
push
out
sbb
std
dec
ret
daa
ret
ja
insb
into
jno
loopne
pop
out
jnp
jp
js
cmp
ffreep
sbb
sbb
mov
sub
mov
in
into
sub
aas
aad
lods
aaa
lods
pop
outsl
hlt
push
sub
or
or
pushf
out
imul
mov
pop
inc
enter
test
xchg
mov
movsl
push
push
sub
arpl
push
and
fstpl
fistps
push
cmp
test
jno
mov
in
sub
inc
scas
cmpsl
jo
in
ss
dec
test
sub
int
push
stos
sbb
div
les
xchg
shrl
dec
add
push
jne
inc
lods
push
lds
add
lahf
mov
sub
fnsave
add
push
dec
js
movsb
sub
int
sbb
out
int
mov
mov
xchg
mov
outsb
in
lods
or
imul
push
or
xchg
xor
adc
xchg
or
and
xor
stos
repnz
sbb
cmpsl
roll
clc
lcall
mov
dec
push
xor
cmpsl
ficomps
sub
or
lahf
mov
or
clc
mov
rcrl
rclb
pop
cmp
loopne
mov
rolb
add
addl
fprem1
mov
xchg
ja
imul
push
sahf
xlat
mov
pop
add
mov
dec
sbb
leave
push
push
sbb
mov
shl
xor
aaa
cmp
repnz
jecxz
lcall
dec
sub
or
fistpl
les
pop
mov
mov
cld
jns
cmp
mov
shll
nop
repnz
mov
add
fabs
lock
je
lret
mov
and
and
dec
in
adc
std
jne
stos
fisubs
lods
lret
pop
lods
std
ret
decl
shlb
sarl
push
dec
stos
imul
xchg
loope
and
nop
add
push
push
mov
std
sbb
pop
loop
shll
dec
mov
sub
je
popa
add
andl
or
outsb
mov
and
push
nop
xchg
push
sub
xlat
cmp
inc
daa
pop
cli
inc
cmpsl
pusha
fstpt
mov
pop
mov
lret
daa
push
inc
loope
xor
mov
sub
repnz
and
stos
adc
dec
pop
in
cld
in
faddp
mov
or
iret
jle
cmpsb
and
adc
dec
lret
mov
add
call
das
cmp
les
xor
push
cmp
mov
lods
push
dec
mov
jb
pop
mov
mov
loopne
mov
mov
lcall
mov
mov
mov
jo
push
or
or
xchg
nop
push
mov
mov
xchg
mov
mov
add
sbb
imul
sbb
ss
sub
in
paddd
add
fmull
mov
sar
leave
mov
ljmp
cli
mov
mov
xor
cmp
rolb
cmp
imul
add
mov
loop
or
movups
xchg
cmpsl
mov
add
lds
aad
movl
push
call
ret
and
shlb
fidivrs
mov
aad
ljmp
cmp
cmp
fidivs
xchg
fwait
shrb
nop
js
push
add
and
adc
or
jae
popf
xor
sbb
ljmp
clc
mov
enter
ja
aas
dec
mov
cmpsb
xor
push
fwait
mov
sub
inc
jne
cmc
inc
dec
sbb
aad
cmp
bound
cld
test
enter
xchg
push
dec
test
mov
sbb
decl
push
test
std
int
int
sbb
sahf
call
subl
call
sub
ja
sub
movd
pop
xchg
dec
les
mov
fnstcw
cmp
push
pop
enter
sbbb
jne
mov
xor
jo
lods
push
fwait
and
test
shr
xor
mov
data16
lcall
stos
gs
mov
push
or
or
imulb
xor
xchg
or
adcb
and
pushf
jae
aaa
gs
pop
rorl
mov
or
jne
pop
cmp
psubw
sbb
pop
pop
or
imul
dec
jle
out
rorb
outsl
aam
dec
push
imul
inc
ja
push
dec
jge
inc
in
cs
jmp
jge
adc
inc
inc
mov
sub
pop
lds
mov
lret
adc
out
out
stos
mov
push
icebp
lods
cmpsb
jb
pop
fisttps
rcr
insl
xlat
lret
test
push
adc
adc
lock
outsb
jnp
mov
test
cmp
addl
mov
test
daa
dec
push
icebp
and
mov
or
pop
popf
add
hlt
outsb
int
leave
in
push
xlat
outsb
mov
lcall
xor
cltd
xchg
pop
xchg
test
pusha
fucom
ja
or
sub
outsl
cmp
fisubrl
or
iret
xlat
add
outsb
addr16
jmp
jmp
aaa
mov
add
scas
test
aaa
daa
rolb
mov
or
iret
popa
jge
or
cmp
inc
gs
and
aaa
or
mov
int3
cltd
out
dec
mov
bound
sub
mov
jno
mov
jne
fidivrs
adc
mov
daa
aas
enter
sbb
cmp
fisttps
scas
pop
sbb
pop
ret
jns
cmpsl
push
fisttpll
pop
or
inc
jo
xchg
negl
sbb
imul
into
pop
inc
test
mov
xlat
inc
adc
lahf
pop
mov
mov
loop
pop
fiadds
aas
inc
and
xor
jnp
mov
test
or
lcall
xor
cld
cmp
rcl
push
enter
add
sub
push
call
nop
jo
pop
nop
insl
pop
loopne
adc
nop
outsl
ret
jl
out
mov
cmp
pop
les
sti
inc
mov
lret
fimuls
je
jg
bound
add
arpl
inc
jle
lahf
pop
fistps
mov
pop
aaa
push
lea
xchg
mov
iret
jae
movsl
icebp
pop
dec
test
xchg
int3
cmp
jns
pop
dec
mov
movsb
aad
int3
jecxz
rclb
icebp
enter
jns
pop
jmp
pop
or
push
mov
mull
leave
mov
inc
pop
sub
xchg
les
xchg
pushf
mov
jns
sub
dec
or
cwtl
cmpxchg
push
mov
ds
cmp
mov
lds
and
push
ret
mov
fnstenv
jmp
lahf
mov
pop
xlat
mov
andb
out
rolb
mov
cmp
outsb
mov
cmpsl
sub
addl
outsl
dec
test
stos
inc
mov
dec
fidivrl
or
mov
mov
out
ljmp
aaa
mov
jb
test
cmp
jnp
je
mov
outsb
test
add
push
mov
mov
mov
push
je
mov
xchg
adc
add
cmpb
ljmp
or
fisubs
sbb
xor
dec
xor
aaa
jecxz
push
cmp
nop
pop
enter
mov
add
dec
es
jmp
shll
pop
rclb
pop
inc
cs
push
inc
js
pop
push
loop
imul
out
adc
pop
es
mov
xchg
dec
bound
push
jb
xchg
loope
sahf
loop
mov
push
or
jo
cmp
stos
and
je
xorl
push
adc
jb
sti
or
pop
push
icebp
popa
arpl
jg
mov
mov
mov
pop
idivl
xor
in
jb
pop
imul
add
pop
sbb
mov
and
jb
pop
mov
mov
add
inc
pop
jl
push
mov
add
js
js
les
sub
sarb
xlat
sarb
push
in
jne
insl
hlt
shlb
mov
mov
and
mov
and
es
decb
iret
scas
repnz
xorl
jb
int
mov
inc
in
mov
sbb
push
dec
pop
addr16
mov
sahf
xchg
les
arpl
push
shl
insl
cmpsl
les
pop
push
mov
or
pop
shl
add
mov
inc
xchg
sub
in
push
inc
cmp
push
cmp
inc
push
call
sti
js
out
daa
jl
dec
inc
into
dec
aam
xchg
mov
scas
adc
test
xchg
sub
sbb
add
cmpsl
les
hlt
dec
clc
pop
das
or
cmpsb
add
xor
and
or
cmp
gs
pushf
sub
inc
ljmp
scas
sbb
mov
xor
cwtl
mov
cld
xchg
and
repz
aam
pop
fnstenv
pop
mov
setns
mov
popf
and
mov
add
bound
dec
movsb
insb
push
mov
fisubs
xchg
cmp
fsubl
mov
shl
mov
push
mov
repz
call
jns
pop
mov
adcl
jecxz
jne
dec
loopne
or
fs
xlat
out
ret
and
adc
fidivs
adc
pusha
stc
push
or
cli
rolb
or
loop
jns
sub
shr
mov
mov
movsb
and
push
rcrl
fwait
je
fwait
leave
lahf
inc
add
add
cmpsb
adc
cmp
cmc
in
xchg
mov
jno
loopne
lds
push
das
cmc
sbb
fwait
movsl
insb
mov
cwtl
xor
add
lods
jno
ret
cmp
dec
jge
lea
mov
push
jle
stos
sahf
sub
call
cmp
add
xor
cmp
inc
cmp
loope
dec
lcall
push
mov
xchg
mov
jb
outsb
div
idivb
pop
lods
mov
jmp
cmp
add
roll
push
add
lods
loope
mov
inc
leave
pop
test
sbb
dec
loope
mov
xor
clc
adc
test
dec
sbbl
sbb
xchg
idivb
sbb
loopne
sub
mov
sbb
sub
push
aas
inc
xor
pop
lods
inc
xchg
xchg
imul
sub
or
add
es
scas
cmp
mov
jne
xor
icebp
cmp
pop
sub
fstpt
test
imul
lcall
sub
xor
or
bound
mov
jle
dec
insl
jo
addr16
cmpsb
mov
pop
test
cli
mov
jge
sbb
adc
inc
xchg
ss
cmc
sbb
push
mov
fistpl
sub
int3
fsub
pop
and
popf
and
or
sbbb
leave
push
sbb
inc
mov
imul
frstor
add
lret
outsl
fnstenv
rcrl
popf
xchg
in
dec
fimuls
leave
out
int
jbe
popl
mov
inc
rcr
sahf
mov
add
lahf
hlt
jae
jge
jo
movsb
movsb
adc
lock
mov
and
push
mov
dec
out
push
sarl
jb
jl
shlb
xchg
daa
rol
xor
lods
push
add
add
push
jae
mov
stos
lcall
aas
push
nop
mov
xor
add
movsb
fstpt
jle
mov
inc
ds
push
xchg
ja
loopne
pop
cmp
lret
cmp
out
repz
mov
dec
dec
xchg
add
sarb
mov
leave
mov
decb
and
lds
adc
fcoms
or
or
push
inc
icebp
fisubrs
shl
clc
mov
in
sbb
movsb
adc
mov
ja
movsl
cmp
rorl
adc
test
mov
lret
shr
imul
stos
les
cwtl
nop
test
mov
dec
jae
popa
andl
imulb
mov
push
xor
clc
push
dec
adc
pop
in
inc
in
and
fistpl
xor
or
adc
dec
jmp
inc
out
sarl
sub
insl
rclb
xor
stos
jg
xor
cld
dec
fwait
ret
dec
mov
sahf
push
imul
imul
pop
or
xchg
repnz
dec
add
inc
mov
and
pop
popa
push
pushf
jl
ror
test
push
mov
inc
dec
xchg
imul
add
xor
ret
pop
pop
and
lret
adc
nop
popf
icebp
inc
jns
imul
imul
xor
and
xchg
mov
mov
rolb
bound
mov
into
dec
mov
adc
fisttpl
leave
mov
cltd
ljmp
sti
xor
mov
pop
mov
or
scas
mov
addb
jo
call
jle
ds
and
fsubrl
mov
xchg
mov
inc
cli
ret
int
mov
outsb
dec
push
pop
incb
daa
add
imul
push
mov
leave
cmp
and
int
add
xor
push
fidivl
bound
dec
mov
mov
lods
jp
out
in
in
pop
pushf
fmull
jecxz
adc
or
sbb
inc
fucom
in
rsqrtps
jg
and
xchg
ljmp
mov
mov
adc
cs
pop
cmp
pop
fisttpl
xchg
into
in
imul
adcl
push
stc
cwtl
mov
cli
mov
rolb
mov
sbb
pop
out
push
pop
jb
fisttpll
cmpsl
mov
hlt
mov
sbb
cmp
and
pop
fnstcw
aam
mov
idivl
push
enter
xchg
enter
sbb
dec
outsb
sub
dec
stos
lahf
sub
xor
xchg
popf
mov
fisttpl
pushf
add
mov
jg
sbb
cld
xor
cmp
sub
inc
cmp
and
sbb
push
js
inc
jnp
sub
fsubl
adc
xor
fwait
adc
inc
mov
repz
sahf
cmp
jle
and
ds
push
mov
ret
lret
sub
fwait
mov
imul
insl
mov
lods
push
mov
daa
fldl2e
xchg
pop
push
stos
enter
aad
xchg
xorb
xlat
mov
leave
dec
pushf
std
dec
mov
sub
and
adc
jns
scas
ficomps
inc
and
push
push
mov
les
or
dec
jo
loope
jmp
ja
rcrl
sub
add
jmp
inc
jmp
pop
inc
adc
outsb
jp
mov
lock
xor
mov
xchg
daa
dec
lahf
out
xchg
imul
fwait
mov
dec
fistl
pushf
add
int3
mov
pop
mov
pusha
cmp
clc
pop
js
push
and
shr
jo
cs
aas
add
repnz
cmp
ja,pt
push
jg
shrb
imul
lcall
aam
insb
pop
mov
je
and
dec
pop
insb
cmpsl
test
mov
je
mov
mov
xchg
mov
jle
push
inc
push
or
dec
out
push
dec
imul
cmp
dec
xor
mov
arpl
std
popa
data16
jmp
addb
sub
sbb
sti
xor
pop
ss
aad
test
test
jmp
inc
mov
outsb
pop
xor
and
enter
fwait
adc
sar
jp
arpl
lds
ss
jp
sbb
mov
fcmovbe
divl
mov
jmp
fst
out
cli
popa
mov
in
push
xlat
out
cli
ljmp
jmp
xor
popl
dec
loope
mov
leave
fs
into
lea
hlt
gs
mov
enter
outsb
je
xlat
xor
jne
mull
or
xor
aaa
popa
xchg
adc
push
cmp
xchg
sub
adc
adc
arpl
insl
xor
xor
push
icebp
xchg
mov
and
dec
or
cli
adc
push
push
sub
fdivp
xor
andb
cmp
push
push
cmp
andb
sbb
mov
jp
jae
ss
mov
dec
fidivl
push
pop
pop
sub
daa
mov
or
xor
hlt
aaa
jl
pop
xchg
dec
leave
dec
sahf
sbb
ja
pusha
fstl
dec
addb
push
pop
out
outsl
es
mov
movsl
cmc
aas
pop
ret
pop
xchg
lcall
repz
mov
jnp
inc
out
or
pop
stos
xor
cmpsb
mov
sub
jp
jle
mov
std
fcompl
aaa
mov
stos
fstpl
sbb
xor
adc
dec
dec
loop
lock
and
dec
pop
xchg
mov
and
js
cs
fisubl
stos
cmp
cmp
jmp
pop
lea
pop
mov
sub
cmpsl
fstps
adc
dec
add
mov
cmp
pop
roll
pop
cmp
or
dec
pusha
mov
fiadds
adc
cld
mov
in
mov
and
mov
push
pop
fwait
sbb
fisttps
xchg
lahf
lea
ret
outsl
mov
in
cwtl
xor
cmp
dec
push
pop
sbb
sub
dec
in
jecxz
fldenv
add
jo
pop
mov
push
mov
xlat
std
rorb
mov
cmpsl
jmp
or
imul
fcompl
xchg
insb
pavgb
sbb
je
gs
loopne
push
adcl
imul
pop
lahf
inc
stc
jnp
push
nop
push
push
adc
and
mov
mov
scas
mov
icebp
loopne
add
add
push
push
inc
clc
in
sbb
mov
mov
jnp
cmp
push
adc
mov
mov
xor
cmp
cmp
call
sbb
inc
sarl
pop
jb
sub
push
out
xchg
dec
pop
push
push
pop
aas
stos
xchg
lret
das
jb
push
xor
enter
lcall
lret
adc
es
fisubl
pop
bound
and
push
fwait
mov
lcall
mov
pop
mov
in
ja
clc
scas
jmp
or
pop
ja
adc
pop
mov
push
shr
test
leave
imul
movsl
int
insl
sbb
dec
rcll
sti
mov
xchg
xor
fisubrl
out
push
push
out
std
out
call
stc
cs
xor
mov
xchg
fidivrs
pop
enter
or
push
out
mov
js
sub
aam
and
jle
and
fldl
jg
stc
dec
aad
fs
insl
mov
shll
rorb
mov
push
mov
int3
mov
and
adc
test
repz
stc
and
push
pop
lahf
add
sahf
nop
hlt
jnp
xor
lret
mov
aam
cmp
cmpl
pop
mov
xchg
stos
push
and
cmpb
imul
test
or
sub
lods
inc
pop
sub
rclb
cmp
xor
inc
xor
pop
fdivrp
ficoml
mov
xor
sub
mov
lcall
arpl
mov
mov
bound
into
adc
sbb
jnp
lret
mul
add
ljmp
pop
jnp
enter
cmp
jecxz
ret
into
push
inc
adc
xor
and
test
cmp
jb
out
push
in
pop
jl
pop
inc
and
in
mov
push
inc
sbb
mov
adc
pop
shlb
cmp
cmp
push
jnp
imul
notl
push
jmp
stos
or
shll
je
jbe
cmp
sbb
sub
mov
sbb
leave
inc
cmp
or
shl
out
jecxz
sub
stos
push
push
lods
ret
stos
cmp
pop
pop
inc
jecxz
call
jae
in
or
adc
pop
xlat
in
shll
outsl
xchg
mov
and
mov
and
adc
popf
aas
adc
inc
xlat
dec
inc
mov
stos
xor
loop
shll
or
jecxz
int3
popfw
cltd
mov
push
mov
xlat
mov
pusha
jecxz
adc
rcrl
pop
stos
dec
mov
loop
and
xlat
inc
cmp
nop
lods
inc
adc
cmp
adc
popf
push
testb
jo
aam
xor
pop
lock
and
pop
sbb
jae
std
xchg
mov
cwtl
mov
je
iret
out
sbb
lret
or
pushf
push
in
std
sbb
pop
inc
xchg
clc
dec
cmp
mov
dec
test
sub
xor
push
sbb
add
push
cmp
stos
inc
xor
push
push
or
push
pushl
or
fistpl
jge
out
push
and
xlat
mov
cmp
jae
xchg
sub
fwait
repz
incb
sbb
sub
mov
out
sub
outsl
sub
mov
test
jns
sub
pushf
subb
jb
out
mov
repz
sbb
or
ret
fidivrl
mov
lds
pop
mov
cmp
mov
lret
inc
les
stc
enter
mov
int3
out
js
movsl
adc
fxch
lods
mov
loope
pop
out
push
cmpsb
pushf
addl
dec
adc
fadds
loop
mov
inc
mov
push
popa
repnz
push
test
xlat
ret
push
frstpm(287
roll
or
cmp
mov
iret
mov
xchg
push
sub
call
rorl
negl
cmp
test
lock
xchg
loopne
jnp
mov
imul
sbb
into
cld
mov
inc
rclb
and
fs
dec
cmpb
es
hlt
xchg
cmpsl
testb
xor
push
insl
fwait
rorl
ljmp
les
jg
add
js
repz
aad
mov
xor
insb
pop
js
hlt
xchg
dec
inc
pop
mov
adc
rclb
push
bound
xchg
mov
cmpl
repnz
or
mov
cli
lea
int
inc
mov
push
test
in
mov
pop
adc
les
or
add
outsl
or
lret
bnd
mov
adc
jle
xchg
pop
or
mov
mov
fs
inc
fadds
aam
cmp
movsl
mov
jnp
cmp
jb
adc
mov
mov
shlb
subb
ja
inc
xchg
cmpsl
inc
sub
dec
dec
clc
leave
and
arpl
arpl
lcall
clc
out
stos
adc
sub
dec
or
aas
xchg
dec
imul
or
pop
push
adc
cmp
fwait
lcall
cmp
xchg
mov
or
insb
mov
fdivr
mov
pop
in
jle
int
pop
rcrb
sbb
call
aad
inc
outsb
cmp
movsl
push
mov
push
pop
mov
xor
test
jb
imul
mov
fs
sbb
mov
shlb
jl
push
sbb
jo
test
ds
sub
adc
std
fistpll
mov
shll
cmp
xlat
and
popf
inc
inc
pop
sbb
jbe
cmp
test
dec
dec
pushf
jno
add
cs
dec
fstps
push
mov
fcmovne
push
scas
xchg
sbb
aaa
nop
mov
rcll
bound
andl
jmp
mov
push
cmp
es
adc
popa
cld
testb
and
cmp
pushf
es
mov
pop
js
icebp
adc
out
psubb
push
push
inc
out
fists
mov
les
insb
and
pushf
rcrb
push
sti
xchg
arpl
sbb
xor
mov
mov
insl
push
mov
xor
test
sbb
sahf
add
mov
std
sub
xchg
add
jno
sub
dec
pop
ljmp
push
lds
push
adc
out
js
cld
pop
sbbl
dec
lea
mov
dec
mov
cmp
je
cmp
pusha
imul
subl
pop
xor
movsb
push
xchg
ss
push
sbb
cltd
es
push
push
pop
mov
mov
push
jo
dec
mov
lds
clc
add
add
cli
jae
mov
enter
bound
cltd
inc
subl
test
aam
mov
int
dec
andl
xchg
add
nop
xchg
or
adc
and
sarl
loope
loope
cmp
jb
mov
cli
les
rclb
test
push
inc
shlb
sub
icebp
adc
mov
add
mov
and
jno
pop
xchg
loope
cmp
push
push
std
stos
out
push
mov
pop
subb
dec
lods
repnz
push
movl
push
aam
aaa
pop
jmp
dec
jns
icebp
lahf
ret
fmuls
sti
mov
mov
imul
mov
mov
push
cmp
aaa
mov
aad
lcall
divb
sbb
sbb
sbb
lahf
fidivs
dec
pop
in
scas
cmp
mov
push
arpl
mov
lods
ljmp
icebp
add
mov
dec
sub
mov
sub
mov
push
call
iret
mov
sub
mov
cltd
les
subl
roll
loop
xchg
jbe
aad
and
dec
icebp
mov
aam
xlat
mov
jbe
call
inc
jmp
gs
insb
lret
mov
cmp
push
pop
pusha
or
dec
ljmp
je
js
ret
std
subb
ret
popa
xchg
push
xor
idivl
add
or
sub
sbb
mov
je
xor
dec
mov
outsl
movsl
ja
cs
and
push
mov
sub
int3
jno
and
sub
ja
mov
inc
add
aas
imul
jo
es
loop
mov
dec
jle
fadds
out
mov
insl
push
in
xchg
dec
test
add
rorb
mov
daa
cwtl
sarb
inc
cmp
cli
inc
mov
sti
jl
cmc
or
mov
mov
cli
jns
repnz
inc
in
lods
cmpsb
test
ret
mov
pop
pop
jo
push
xor
sarb
scas
bound
add
xor
orl
ffreep
push
sbb
mov
sub
insb
iret
or
pop
test
aad
pop
cwtl
and
cmpsb
lea
cli
jmp
in
sub
jo
das
lds
in
xor
or
cmp
fcoms
test
out
sbb
xor
mov
pop
insb
or
fisubl
cli
rcrb
push
inc
lret
stc
nop
adc
jno
fsubrp
into
imul
sub
sbb
lea
sar
fcoms
and
cld
xor
sub
or
jno
pop
jge
movsb
sbbl
aad
push
mov
xchg
clc
in
inc
js
or
inc
sahf
incb
and
mov
lcall
ds
decb
mov
enter
or
inc
sbb
fildl
jne
jbe
aam
subl
cld
push
pop
jl
adc
sbb
sbb
jns
out
mov
and
popa
hlt
inc
leave
lret
mov
std
dec
shrl
xor
test
mov
adc
or
add
rorl
fmuls
sub
inc
mov
push
mov
jmp
xor
mov
lahf
pop
and
pop
jg
mov
cmp
out
mov
pop
push
cmp
mov
loop
or
pop
fdivrp
fistl
xor
sbb
out
xchg
or
xlat
imulb
inc
pop
push
mov
cmc
loop
or
pop
cmpsl
sub
adc
mov
stos
and
xchg
dec
lock
ds
hlt
mov
push
nop
aas
sbb
pop
mov
sbb
and
jnp
jmp
mov
cmpsb
push
subl
pop
cmp
cmp
xor
js
js
xchg
ljmp
fadds
jecxz
lods
push
push
xchg
je
jg
not
cmpsb
out
push
test
mov
mov
sbb
lcall
jl
fisubrs
daa
sub
jmp
jb
das
and
or
jno
pop
jns
sub
dec
sbb
jns
jb
cmp
mov
push
add
jge
xlat
bound
ficoms
lea
jae
pop
jne
outsb
out
test
inc
dec
sub
and
push
int3
out
cmp
mov
stc
sub
lods
mov
cld
xchg
adc
add
lods
push
jmp
push
popf
jb
xchg
mov
jns
or
iret
mov
jbe
jl
lret
inc
aam
sub
jle
mov
push
and
into
push
mov
mov
cmpsl
jmp
std
jg
cld
push
cmpsl
xchg
push
shlb
mov
push
stos
xor
push
shll
and
fsubs
lds
pop
scas
pop
fmuls
sarl
pop
pop
insl
icebp
inc
je
add
int3
inc
notb
dec
adc
xchg
outsb
sarb
rcr
in
dec
or
pop
lods
popl
loopne
add
out
and
pop
lcall
jmp
mov
pushf
sbb
leave
mov
scas
test
test
ficompl
push
dec
pop
and
mov
cs
xor
outsl
pop
ret
pop
daa
mov
push
xchg
mov
xchg
lock
icebp
lahf
dec
sbb
sbbl
sbb
mov
mov
test
mov
inc
stos
pusha
movsb
adc
arpl
xlat
push
xchg
repnz
insl
inc
mov
mov
inc
dec
test
and
out
loop
movb
add
sbb
xchg
mov
std
dec
lret
push
mov
leave
ja
xlat
inc
sub
dec
mov
adc
sbb
aam
out
add
into
jle
bnd
push
mov
addr16
xor
mov
mov
mov
adc
sub
inc
cmpsl
mov
sbb
add
xchg
mov
in
outsb
test
lcall
jp
push
mov
stc
xchg
push
adc
in
bound
sarl
mov
push
cltd
mov
pop
jle
cltd
mov
jmp
movsl
xor
dec
outsl
es
repnz
das
aas
test
fists
xor
fnstsw
loop
std
sahf
aad
loop
scas
data16
pop
adc
test
ficomps
les
test
std
xor
rorl
and
sub
sbb
vpaddq
mov
lret
mov
cli
mov
mov
xchg
jbe
jno
xchg
sti
or
ret
stc
push
and
flds
jmp
inc
xor
or
insl
xor
cld
jb
dec
mov
movsl
fld
dec
aam
pop
jno
push
cmp
jge
insb
inc
and
movsb
test
movsl
loop
lahf
and
mov
fistpl
push
mov
cmp
sub
xchg
fisubs
xor
push
rcll
addr16
inc
mov
jle
pop
in
adc
into
test
jge
shll
jnp
pop
push
pusha
cmp
sub
and
insb
jns
inc
inc
leave
rorl
lods
sub
mov
daa
int3
push
test
cmp
int
dec
jno
sbb
cmp
cmp
jno
lock
add
js
adc
orl
cmp
jns
fcoms
dec
rcrl
fidivl
sbb
jl
jp
rcrl
pusha
xor
push
in
jno
inc
popf
xlat
aas
outsb
inc
jns
lods
mov
jae
or
call
push
push
xor
or
test
cmpsl
and
dec
mov
dec
jbe
pop
push
jne
jne
insb
ljmp
mov
test
addr16
pop
push
add
pusha
pop
mov
test
aas
daa
mov
mov
mov
shrl
sub
or
pop
adc
test
fldenv
lret
ds
mov
into
adc
inc
mov
movsl
in
inc
cmp
scas
push
adc
add
dec
dec
sub
icebp
popa
div
lret
mov
lcall
mov
cmp
pop
lret
insl
push
sub
jae
mov
pop
push
es
dec
sbb
loop
push
xor
aad
out
cs
fcomps
out
fs
xchg
xorl
rcll
mov
push
xchg
push
in
cwtl
stos
pusha
inc
push
insl
out
inc
inc
test
push
test
lock
loope
ss
xchg
mov
pop
dec
cwtl
addr16
mov
add
aaa
imul
js
not
jns
int3
lock
sub
mov
lcall
fs
ljmp
and
add
mov
dec
cmc
negb
inc
mov
in
dec
xchg
and
push
decl
lds
stos
add
and
mov
pop
adc
adc
xchg
or
adc
out
and
and
cwtl
xchg
jo
int3
leave
sbb
cmpsl
enter
outsl
sar
test
pushf
mov
std
int3
repz
mov
js
bound
dec
mov
fwait
js
fidivl
xor
iret
add
sub
cmc
fisttps
in
jg
jg
ja
or
orb
push
mov
push
fs
aas
jno
add
mov
sbb
jmp
scas
and
xor
stos
mov
loop
mov
rcl
out
cmp
mov
sbb
pushf
scas
push
pushf
dec
mov
pop
pushf
popa
pusha
dec
or
fimuls
xchg
fwait
xlat
fdivl
shr
or
xchg
xchg
mov
fldt
pop
lret
pop
lahf
cmpb
mov
adc
mov
loope
std
dec
outsl
mov
stos
or
scas
scas
dec
pushf
mov
jbe
sbb
mov
dec
sbb
inc
in
mov
add
fwait
imul
inc
sarl
push
out
xchg
push
xchg
push
dec
add
out
bound
sbb
dec
mov
add
movsb
mov
aas
sub
mov
scas
ljmp
movsb
dec
adc
int
cmpb
inc
sti
adc
push
mov
sti
ret
cltd
and
or
sar
add
mov
sub
pop
inc
dec
mov
pop
or
push
subl
cmp
cmpsb
jbe
xchg
lds
std
push
pop
jo
rorb
push
pusha
enter
sub
jp
xchg
out
test
inc
fimuls
add
mov
push
push
shrb
daa
aaa
cld
push
push
inc
sub
push
loop
mov
mov
clc
ljmp
pop
pop
pop
xchg
std
movsb
test
pop
or
sub
jno
inc
pushf
rcrb
mov
rcrb
add
cmp
dec
inc
adc
jmp
insl
or
xor
test
nop
test
pushf
xor
add
mov
cmp
adc
xchg
or
adc
fisubrs
adc
cmp
xlat
rorb
dec
sub
push
ds
fidivs
cwtl
add
mov
and
mov
or
cmp
gs
fs
sub
lds
cmp
pop
je
stos
out
stc
ds
pushf
push
dec
jmp
aad
js
sbb
mov
cmp
iret
in
enter
sahf
dec
loope
sbb
xchg
jnp
int
scas
jnp
mov
lret
les
and
xlat
cmc
icebp
add
movsb
clc
cmp
es
or
adc
mov
int3
repz
mov
xor
pop
nop
jle
sahf
pop
stc
sub
mov
rclb
test
pop
or
in
xchg
mov
xchg
mov
test
fidivrs
repnz
push
push
out
scas
aam
mov
mov
xchg
xor
call
fistpl
mov
jp
and
stc
pusha
mov
pop
mov
add
mov
and
bound
movsl
inc
test
in
fsubr
mov
rorl
lea
jb
popf
ds
mov
dec
scas
icebp
add
pop
inc
jae
cs
jo
je
mov
in
pushf
mov
and
popf
ds
mov
push
subl
cmpsb
pushf
imulb
pushf
je
jle
sbb
dec
les
sbb
jae
je
popa
lret
test
in
insb
hlt
filds
repnz
adc
lahf
out
mov
lahf
stos
fs
in
aas
std
and
iret
mov
jae
test
sahf
in
pushl
loope
xchg
loope
arpl
push
xor
aaa
adc
push
roll
mov
inc
insb
sub
jl
xchg
lret
jns
lret
lret
call
int
inc
sub
loope
pop
pop
fcomps
dec
or
sub
lds
jecxz
or
sti
ljmp
inc
test
or
in
mov
xchg
or
lods
cmp
push
jp
jg
sbb
adc
xor
out
fxch
dec
cmp
es
push
adc
jl
jbe
xor
mov
add
push
out
dec
movsl
inc
lcall
jecxz
xchg
cmp
cmp
mov
pushf
dec
adc
movsl
adc
pop
adc
loopne
lret
iret
jnp
xchg
ss
pop
fistps
mov
lods
jbe
inc
inc
nop
dec
das
dec
inc
in
add
xor
push
mov
xchg
lock
xor
push
xor
push
adc
test
adc
cmpsl
icebp
push
sub
callw
pop
xchg
xor
jp
shrl
mov
cwtl
jl
inc
mov
and
cs
rorl
les
push
push
dec
enter
bound
pshufw
push
stos
add
daa
int3
cmp
pop
movsb
mov
pop
inc
sub
dec
mov
rorb
pop
xchg
jae
fisubrs
jmp
loope
mov
es
mov
cltd
ret
sub
dec
mov
mov
mov
inc
and
fisubrl
push
cli
enter
jbe
jmp
insl
xchg
adc
sahf
movsl
imul
xor
push
mov
out
loopne
fsts
cmp
out
dec
jne
hlt
mov
push
mov
cli
dec
inc
mov
ficompl
xchg
out
in
mov
push
or
or
out
pop
push
jo
sti
pop
sub
mov
repnz
cmp
xchg
add
pusha
std
out
pop
xchg
mov
xor
mov
scas
movsb
push
bound
mov
roll
inc
in
sub
imul
cmp
inc
sbb
in
jmp
adc
dec
movsl
jno
inc
les
fwait
push
mov
sbb
sar
fidivrs
out
fs
add
mov
cmp
sub
call
sbb
and
les
cld
repnz
jno
cmc
xor
mov
fs
clc
or
inc
out
repz
push
sub
dec
mov
aam
adc
ficoms
dec
xchg
sub
pop
in
rol
ljmp
cld
pusha
cmpsl
pop
jecxz
das
and
sub
lods
out
leave
test
mov
dec
inc
push
dec
mov
roll
fisttps
dec
push
sbb
adc
jl
adc
insb
add
ret
mov
loopne
fnstenv
out
ljmp
sub
imul
stos
imul
flds
aaa
lods
jle
aaa
rep
and
repz
sub
sbbb
fsincos
ds
dec
popa
pop
mov
cmpsb
fldl
daa
mov
mov
fnstsw
cmp
and
es
mov
push
jae
xchg
sub
dec
xchg
loope
fmuls
loopne
pop
cld
cmp
pop
enter
int3
cli
and
mov
push
pop
aas
cli
scas
insl
push
iret
data16
push
sahf
into
negb
mov
jecxz
cmp
ficompl
mov
stc
ds
push
mov
andnps
mov
mov
vpsrlw
add
test
adc
or
dec
test
sbb
xchg
and
lahf
fsubl
lahf
push
mov
inc
scas
xchg
inc
sub
jns
xchg
mov
jle
inc
or
adc
push
mov
adc
pop
push
jb
sub
xchg
or
insl
jge
add
cs
repz
lods
insl
sti
lahf
and
scas
adc
fsubrs
pop
push
gs
or
dec
cmp
mov
leave
mov
push
out
pop
xchg
push
sbb
aam
push
push
mov
ret
repz
ja
jge
push
dec
or
cmp
mov
inc
js
and
mov
add
das
add
mov
adc
stos
add
sub
xor
and
push
sub
fisttps
sti
stos
xchg
cmp
rcrb
mov
or
fildl
lret
icebp
lods
cmc
lods
mov
jne
daa
sbb
jp
ss
adc
out
loopne
jne
xorb
pop
loope
add
sbb
dec
xor
scas
adc
pop
mov
adc
icebp
pop
sub
pusha
jo
out
jne
shrb
ja
adc
sub
fildll
cmpb
adc
sbb
xchg
push
outsl
pop
jnp
mov
jecxz
adc
fsubrs
lcall
adc
out
adc
inc
sub
shlb
shlb
mov
addr16
sahf
stc
or
and
push
cmp
bnd
test
push
inc
lds
mov
loopne
and
fsubs
imul
movsb
mov
fs
imul
mov
cmc
inc
enter
cld
add
mov
insb
aaa
push
lds
mov
xor
iret
mov
outsb
nop
push
mov
mov
lcall
and
push
out
jb
pop
popa
loope
out
inc
adc
mov
cmpsl
dec
hlt
and
test
xor
enter
in
sarl
ret
and
and
nop
jecxz
and
fmull
cmp
push
xchg
iret
das
xor
sahf
enter
aas
adc
sub
mov
pop
incb
fwait
aas
fldl
dec
hlt
jge
xchg
xchg
sti
fwait
addr16
and
sub
insl
xchg
sub
dec
pop
push
cmp
lock
xor
mov
shll
xchg
mov
dec
lcall
fimuls
mov
push
sbb
dec
sub
mov
inc
call
fidivrl
push
mov
xchg
in
mov
imul
add
push
ror
inc
push
fldl
jae
mov
test
fstpl
xchg
movsb
push
mov
push
mov
int
jne
lret
mov
sub
mov
xchg
shll
movsl
push
push
push
repz
xor
fldt
push
cmp
xchg
fsubrs
cmp
pushf
fiaddl
das
mov
lcall
cli
add
cltd
ja
mov
sub
rcll
bound
in
es
sbbl
xchg
rolb
mov
mov
mov
roll
mov
loope
and
jo
les
pop
rep
pop
push
icebp
ss
jmp
or
cmc
cmp
iret
hlt
dec
or
jge
outsb
adc
mov
mov
lds
jecxz
movnti
xor
frstor
sbb
test
call
xor
mov
mov
dec
mov
push
push
mov
jnp
out
xorb
repz
cmp
mov
adc
jne
in
mov
xor
sbb
and
clc
cltd
xchg
jmp
dec
fildll
icebp
lock
or
outsl
cmpsl
or
ret
jl
sbb
iret
into
xchg
sbb
es
and
inc
rol
lock
pop
ja
gs
cmp
loope
add
push
mov
push
mov
mov
xor
scas
and
out
push
pop
jno
fsubl
and
jl
and
cmpsl
cltd
sarb
add
cmc
std
std
daa
mov
std
inc
fisubl
ret
movsl
jg
lds
mov
push
add
mov
lods
cmpsb
jb
rolb
insl
jl
pop
mov
test
repnz
cld
mov
lcall
loope
jmp
pop
mov
mov
xor
sbb
mov
pop
adc
test
and
inc
xchg
xor
pop
in
xor
lcall
jns
sbb
clc
push
lds
stc
loop
add
insl
inc
and
adc
std
int
pusha
dec
sahf
jmp
dec
into
push
std
in
mov
xchg
repz
ret
xor
addr16
dec
insb
into
push
adc
add
popf
popf
add
hlt
xor
mov
jl
outsb
jae
dec
and
imul
testl
inc
imulb
adc
in
jl
lret
mov
fsubs
xor
push
lods
push
out
je
and
fndisi(8087
xchg
ss
pop
das
sbb
call
and
inc
add
or
fistpl
insl
and
lcall
cwtl
sbb
lcall
cmp
lea
xchg
sbb
pop
test
adc
dec
xchg
sbb
out
test
sub
repnz
adc
lcall
mov
and
pop
movsl
movsl
enter
dec
ret
xchg
or
xor
dec
add
lret
dec
scas
sahf
bound
add
sub
add
jmp
loope
sbb
mov
xchg
mov
jns
cmc
cltd
test
dec
push
fisttps
bound
ja
push
sub
out
scas
in
shlb
pop
sbb
scas
mov
jns
mov
mov
ret
add
inc
add
shlb
dec
and
mov
scas
faddl
mov
nop
cmc
lods
push
sub
mov
sahf
insl
add
mov
jns
shrb
xchg
add
hlt
cmp
jl
xor
push
imul
push
insl
sahf
iret
cmp
inc
inc
inc
pop
pop
lods
out
cmp
daa
xchg
add
imul
and
dec
add
lods
pop
lods
push
jp
mov
pushf
arpl
ret
mov
mov
cmp
pop
imul
pop
lahf
outsl
insb
loop
lret
or
bound
jmp
daa
cmpsl
push
movsl
push
xchg
fildll
add
add
xlat
jle
adc
jge
sub
ljmp
xor
jge
test
stos
hlt
cltd
jmp
and
popa
mov
popa
dec
jl
pusha
jle
lea
pop
aam
lcall
fnstcw
adc
pop
add
cmpsl
pop
push
gs
jg
popa
inc
xchg
xor
push
or
jg
xor
pop
xlat
mov
stc
popf
fucom
bound
repz
mov
loop
mov
dec
jne
dec
xchg
dec
lret
sbb
es
sbb
in
sbb
gs
sar
adc
inc
mov
sub
push
rol
push
lcall
lock
mov
in
scas
inc
push
and
dec
push
je
stos
xor
test
imul
pusha
std
pushf
cmp
adc
verw
add
or
arpl
enter
out
push
xchg
imul
in
sti
and
mov
xor
or
mov
lret
or
add
fldlg2
icebp
fimuls
add
sub
mov
outsb
mov
movsb
stos
jl
jmp
push
das
movsb
cmc
in
aas
ret
sbb
jle
popa
testl
loope
movsl
pop
test
in
mov
push
adcl
cmc
outsb
ljmp
or
pop
adc
adc
sti
mov
jmp
mov
sbb
mov
sbb
rcrl
adc
outsb
out
pop
push
push
cmc
ja
fildll
mov
aam
sub
push
inc
cmp
outsl
push
sub
mov
or
and
adc
pushf
popf
rorl
inc
mov
arpl
stos
jp
data16
jmp
cmp
xchg
stos
xchg
cmpsb
popa
fsts
push
pop
pop
dec
add
out
pushf
add
rcrb
add
and
aam
cli
aad
mov
pop
dec
dec
bswap
jnp
jg
les
inc
and
movsb
cmc
sbb
adcb
dec
test
xchg
aam
lret
aaa
push
mov
arpl
or
lock
das
xor
adc
pop
sub
push
std
fs
xchg
and
jge
xchg
sbb
fimuls
into
and
pop
int3
inc
scas
mov
loop
sub
jns
cmp
push
in
outsb
xor
xchg
jge
push
sub
xchg
xlat
or
jne
adc
test
cltd
mov
pusha
movsb
mov
cmpsb
jne
cmp
adc
xchg
sub
dec
icebp
jnp
pop
inc
es
jbe
scas
movsb
sub
xor
fdivl
mov
ret
inc
sbb
dec
jno
dec
xchg
mov
mov
mov
and
ficoml
mov
out
mov
add
sub
adc
mov
adc
inc
fbld
inc
mov
push
lret
push
add
cmpb
insl
xchg
andl
popf
adc
aas
and
ljmp
pop
ret
icebp
mov
sub
inc
inc
push
mov
push
pop
mov
cli
mov
and
outsl
aad
mov
inc
data16
cli
into
adc
ret
sub
shr
fidivl
cmc
push
mov
mov
js
mov
pop
xor
or
lods
scas
inc
aam
into
dec
pop
fwait
cmp
xchg
aas
clc
jg
push
and
in
sub
add
jbe
jge
jge
inc
rol
enter
push
mov
pop
out
retw
and
fwait
mov
inc
mov
sub
pop
add
push
cs
out
gs
mov
cmp
push
insl
int3
cs
xor
lahf
adc
fstpl
sub
inc
shr
addb
xchg
xchg
pop
mov
dec
shr
rol
jns
adc
xor
push
mov
test
xchg
or
insb
mov
js
lock
jg
mov
mov
pop
push
mov
xor
xchg
add
xchg
pop
pop
xchg
fld1
nop
sbb
test
jge
xchg
xlat
imulb
roll
int3
daa
mov
ja
inc
xchg
mov
icebp
fidivl
xchg
inc
arpl
imull
cmp
adc
xlat
leave
jns
ljmp
adc
add
inc
xchg
imul
mov
sti
dec
cwtl
adc
paddusw
jp
dec
shrb
mov
xor
nop
sarl
in
xchg
int3
cmpsb
packsswb
jecxz
push
dec
cmpsb
xchg
cwtl
arpl
ds
push
sahf
rolb
cmp
decb
sbb
push
fmuls
dec
push
in
push
popa
adcl
mov
dec
sbb
ret
mov
sar
shlb
push
pop
and
or
mov
daa
nop
repnz
dec
sub
mov
addr16
adc
pop
ss
push
hlt
leave
and
fsubl
movsb
inc
pushw
aaa
cmp
push
push
sub
les
shlb
jecxz
flds
mov
pop
loope
dec
mov
sbb
add
inc
leave
mov
ljmp
cmp
pushf
shlb
pop
inc
test
lcall
adc
loope
or
mov
bound
pusha
jl
add
xor
out
sahf
xor
mov
xchg
mov
imul
xchg
ret
bnd
dec
test
mov
andb
jbe
add
enter
das
aad
fcmovbe
push
pop
rep
ljmp
std
cwtl
xor
shrb
pop
decb
ret
insl
in
fisttpll
cmp
and
cmp
lret
mov
adc
inc
cltd
fs
inc
rcll
jns
mov
jge
mov
mov
sbb
jp
jge
xchg
and
push
jb
dec
shll
int3
popa
mov
loopne
jns
push
sub
lea
dec
mov
in
jnp
dec
fiaddl
ret
das
hlt
jae
cmp
aaa
mov
mov
pop
cmp
lea
and
cmpsl
pop
jae
lods
aam
pop
mov
xor
test
adc
mov
xchg
pusha
jecxz
cmp
cmp
dec
popa
pop
jmp
add
inc
rolb
pop
pop
scas
rorb
or
dec
and
sbb
pop
and
jecxz
and
jnp
into
repnz
iret
aas
jp
popl
ljmp
add
aam
outsl
aas
aad
mov
cmp
pushf
fs
cli
xor
imul
bound
dec
jne
cltd
inc
sub
popf
jb
or
push
pop
xchg
aad
mov
dec
shl
adc
mov
cmp
addr16
repz
xlat
add
pop
icebp
addr16
aam
int3
sbb
push
add
sbb
mov
hlt
xor
outsb
es
clc
call
out
mov
sbb
out
pop
and
sahf
and
popa
inc
mov
or
lds
fdivl
hlt
sub
add
sbb
mov
push
scas
adc
imul
push
mov
ja
push
js
popa
mov
out
outsb
aaa
or
shrl
mov
in
fcompl
add
hlt
adc
div
lret
mov
mov
pop
mov
adc
jg
mov
js
inc
sub
mov
mov
mov
mov
ret
into
and
dec
xor
jmp
jb
dec
inc
iret
ret
aam
shlb
mov
les
in
in
mov
xor
data16
in
and
es
call
out
and
push
sbbb
loope
test
lock
push
push
jle
push
faddl
push
xor
jb
test
cld
inc
add
sbb
jp
repz
popf
jno
lcall
pop
rorl
xor
std
sbb
inc
push
jmp
icebp
cmp
xlat
popf
push
aaa
xchg
imul
pusha
fstl
xchg
jle
imul
mov
xlat
fwait
clc
mov
pop
lea
in
pop
loope
sbb
stc
dec
aad
sti
rclb
or
pop
repz
sahf
mov
loopne
incl
orb
loop
jg
inc
pop
data16
sub
popa
pop
mov
xchg
pop
or
mov
scas
test
mov
push
out
sbb
loopne
adc
inc
add
jb
inc
or
sbb
push
cltd
jmp
daa
jmp
aaa
adc
gs
clc
sarb
or
sbb
push
dec
jo
sub
std
mov
roll
jle
xchg
sbb
aaa
sbb
pop
test
inc
xor
push
xor
jne
mov
jmp
cltd
add
jle
xchg
mov
jge
mov
xor
les
add
int3
or
inc
push
repz
fsts
stos
test
jno
and
shll
or
ss
pop
sub
scas
pop
out
lcall
mov
loop
aas
pop
or
std
jp
cwtl
inc
daa
push
out
mov
test
in
lods
jb
push
repz
inc
inc
push
inc
insb
fisubrs
inc
lea
stos
es
ret
loop
or
push
loope
sbb
add
inc
xchg
fdivp
pop
push
cmpsl
mov
jecxz
sub
dec
stc
xor
movsb
sbb
cmp
xchg
inc
outsl
sbb
lock
push
cmp
mov
rorl
addr16
jne
and
dec
mov
push
jg
lahf
hlt
loopne
repz
pop
sbb
jnp
sbb
bound
inc
jne
fmuls
push
arpl
dec
mov
clc
sub
scas
cmp
rorb
or
mov
sahf
lret
call
mov
cmp
jg
push
dec
sahf
imul
ret
fmulp
pop
ffreep
sbb
mov
ja
dec
mov
mov
push
shrb
movsl
and
sub
xlat
shrb
push
jb
pop
lret
sbb
loope
xor
push
dec
stos
xchg
pop
pop
xchg
fnstcw
mov
sub
into
imul
stos
mov
repnz
sti
shlb
aaa
insb
jle
push
xor
dec
pop
mov
sub
push
icebp
aam
mov
mov
orl
mov
icebp
jp
sub
push
push
jl
call
jmp
jb
jb
dec
add
fistpl
and
pushf
pop
jne
mov
pop
test
test
inc
push
xchg
or
jmp
into
sub
push
idiv
mov
bound
fwait
cmp
jg
and
xchg
imul
pop
dec
xor
jl
lcall
jmp
dec
push
fisubrl
fsubrs
cmp
xchg
add
je
add
add
fnstenv
mov
and
jbe
sub
enter
out
loope
xchg
push
sub
push
into
mov
xchg
add
and
or
stos
das
stos
js
divl
std
add
ror
push
mov
sahf
jbe
xor
pop
out
rcrl
or
hlt
mov
cs
out
fnstcw
add
inc
cmpsl
mov
out
add
xchg
adc
movsl
inc
bswap
add
push
loope,pn
pop
push
idiv
ret
lret
mov
cmc
fldt
fwait
nop
push
xchg
jbe
cmc
loopne
cmpsl
pop
mov
stos
adc
mov
test
pop
test
xchg
in
aad
cld
inc
adc
xor
loope
imul
sub
lock
inc
sub
daa
scas
mov
imul
add
nop
pop
out
lods
mov
outsb
mov
popa
push
clc
cld
and
pop
mov
mov
jnp
jmp
add
stos
gs
xchg
aas
shll
call
cld
jle
pop
aam
es
sarl
gs
adc
jo
add
lret
xlat
fidivs
mov
lock
push
dec
popf
push
add
fdivrl
subl
in
mov
lods
outsl
lods
fldl2e
lods
pop
dec
add
pop
cmp
add
jno
lahf
int
push
std
pop
imul
lcall
push
movsb
pop
in
xor
aad
sub
es
dec
ss
sbb
rcrl
xchg
call
add
mov
jnp
add
fsubs
fisubl
and
mov
sub
mov
arpl
aas
add
mulb
test
mov
cmp
jle
aas
test
inc
cwtl
mov
push
push
mov
fcmovnu
push
pop
stos
mov
push
mov
scas
aad
jmp
mov
ljmp
mov
lea
dec
lret
int3
rcrl
cmpl
stc
idivb
jp
mov
imul
and
loopne
cmp
pop
imul
inc
outsb
add
add
push
xor
mov
jg
sbb
popa
cld
xchg
mov
es
jmp
fmuls
fcoml
in
call
mov
jp
daa
repnz
xchg
rclb
mov
out
pop
fs
scas
jmp
out
sub
cltd
push
dec
fs
lret
xchg
jge
push
movsl
ja
jp
cltd
ret
xchg
lea
and
insl
mov
xor
or
lods
sbb
mov
cld
fistpl
sub
and
imul
xchg
mov
in
cmp
push
add
inc
sub
push
fistl
in
aad
pop
jp
adc
mov
pop
pop
sub
jl
mov
cmp
mov
xor
mov
insl
call
cltd
sbb
scas
dec
mov
xor
inc
pop
std
mov
inc
ror
or
adc
dec
cwtl
jb
ljmp
aam
data16
sub
into
xchg
mov
rcll
loope
inc
sbb
xor
and
aad
mov
mov
jno
cld
or
and
mov
aad
subb
jmp
mov
shl
mov
ret
adc
mov
cmp
iret
mov
mov
sub
imul
sub
or
pop
imul
ds
bound
scas
cmp
fldenv
and
pop
dec
adc
int
lcall
xor
xor
mov
inc
popl
inc
fistpl
jnp
fwait
and
pop
std
ja
push
jle
and
movsb
out
ljmp
xchg
xchg
sbb
repz
in
les
push
mov
push
imul
pop
es
pop
adc
fs
in
or
je
sub
dec
lret
jb
jo
mov
sbb
call
xchg
pop
rcrl
jbe
jl
or
xchg
aad
sarb
std
xlat
std
bound
test
addr16
dec
jg
inc
fadd
pop
outsl
dec
mov
jo
das
mov
mov
sub
ret
cmpsl
push
lock
stos
or
bound
test
adc
das
or
je
xchg
xlat
cmpsb
inc
cld
mov
sarb
jmp
pop
lock
pop
out
outsb
jne
or
and
dec
clc
mov
nop
mov
sar
mov
cmpsl
subb
mov
stos
push
xchg
and
push
lret
mov
jp
mov
sub
push
iret
mov
cmp
jl
mov
lds
in
dec
cmc
pop
addr16
sub
mov
pop
inc
push
mov
leave
dec
outsb
fadds
push
mov
mov
icebp
repz
loop
lret
pop
pop
test
push
jns
sub
dec
aas
pop
in
outsb
sti
into
popf
cmp
mov
mov
sbb
aaa
popl
adc
dec
jmp
movsl
push
dec
repnz
das
ds
push
jne
fwait
in
ss
or
fistpl
mov
dec
stos
mov
mov
xor
xor
mov
mov
cmp
xchg
ficoml
mov
lock
mov
popf
repnz
push
clc
mov
xor
mov
xorl
mov
in
ret
in
in
mov
add
inc
sub
cmp
sbb
mov
cmc
gs
cmc
xor
adc
aad
push
mov
xchg
repz
stos
rclb
or
iret
lret
fmull
mov
in
out
add
dec
adc
sbb
cwtl
fsubrp
inc
out
icebp
push
inc
lock
dec
jne
mov
sbb
push
push
dec
std
aas
fidivs
das
xor
imul
sbb
pop
jnp
hlt
lret
add
call
mov
or
mov
xchg
ds
cmp
cmpsb
shrl
cmp
icebp
jg
cmp
xor
inc
mov
sub
jne
std
pop
xor
adcl
jecxz
popa
test
out
sbb
jle
sbb
imul
inc
loopne
lret
out
ss
xor
lds
and
sub
aam
roll
int
xorl
filds
aad
sbb
aad
mov
test
xchg
xor
insb
insb
fistpll
lock
pop
je
ljmp
std
xor
cmc
pop
fiaddl
mov
jns
pop
or
pop
jbe
pop
hlt
mov
add
ffreep
negb
daa
inc
mov
mov
inc
imul
outsl
sti
mov
xchg
mov
mov
add
stos
imul
sbb
sub
mov
xchg
scas
push
mov
jp
xchg
stc
mov
shlb
call
dec
jmp
lods
sarb
js
mov
pushf
addb
stc
xchg
repnz
and
xchg
das
mov
mov
add
test
lahf
and
jmp
xor
mov
icebp
push
ficoml
repnz
rcll
outsl
xor
movsb
mov
hlt
cmp
and
push
mov
lahf
movsl
scas
dec
xchg
adc
sub
sub
in
mov
pop
and
roll
scas
sarl
out
push
movl
cmc
in
xchg
icebp
ss
jg
fcomip
fsubs
sub
xchg
dec
xchg
ljmp
faddl
es
sub
pop
inc
cmp
stos
fsubs
insb
js
je
pop
xchg
push
mov
cmpl
pop
out
pushf
orb
jnp
add
sub
sbb
popf
pop
sbb
out
xchg
mov
loopne
mov
notb
mov
fcoml
mov
sub
cmp
insl
jmp
das
mov
hlt
and
add
in
cmp
xchg
mov
lds
mov
in
lret
das
mov
scas
cwtl
push
es
cmpsl
xchg
ret
into
incl
std
jo
mov
mov
cmc
mov
pushf
inc
fwait
mov
mov
bound
dec
pop
daa
out
inc
int3
jno
xor
xchg
test
outsb
cmp
mov
clc
popa
or
div
test
push
ja
icebp
ret
mov
xchg
icebp
test
test
fcoml
lret
mov
addr16
outsb
outsb
sti
jns
outsb
jno
loopne
loopne
loopne
inc
nop
aaa
test
inc
in
add
outsb
outsl
faddl
jp
jns
ja
subb
jge
pop
scas
lds
mov
and
out
inc
xor
mov
repnz
scas
into
inc
and
mov
in
xor
lret
mov
mov
sbb
pop
ja
shlb
nop
in
fs
cmp
scas
lret
jp
popa
push
mov
jg
adc
hlt
out
inc
mov
mov
nop
push
dec
mov
adc
push
dec
out
pop
movsb
add
push
jne
loopne
sbb
aaa
cld
movsl
adc
or
inc
push
and
xlat
lods
pop
out
jl
aam
inc
lods
test
push
mov
jmp
lods
pop
or
and
and
mov
cs
mov
daa
dec
or
int
jno
dec
bnd
sbb
pop
xlat
popf
sbb
push
lret
mov
dec
mov
jbe
add
adc
or
fldl
fiaddl
cmpsb
sub
scas
std
jnp
pop
pop
int
lret
mov
xchg
adc
sarl
sbb
and
sub
sub
and
out
adc
adc
fldenv
xor
adc
jno
mov
loope
xchg
add
sub
dec
jmp
outsl
adc
xor
or
add
jge
mov
inc
dec
cmc
in
cld
cmpsl
daa
js
jl
dec
fistpll
bound
out
mov
and
psrad
sub
add
inc
lds
cs
mov
add
inc
add
test
jne
filds
mov
out
aaa
mov
mov
nop
aas
xchg
mov
mull
cmp
push
mov
mov
xchg
scas
mov
and
jl
lcall
dec
adc
cmp
push
push
mov
xor
gs
movsb
push
xor
jnp
jmp
adc
scas
jmp
adc
cmpsb
ds
cwtl
aad
xchg
cmp
hlt
inc
and
in
aam
sti
rcl
arpl
inc
hlt
mov
inc
inc
movsb
jp
mov
mov
adc
cmp
or
jle
outsb
push
stos
adc
xor
rcrl
xchg
push
push
frstor
test
insl
add
push
ljmp
cmp
fucomip
testb
xchg
xchg
hlt
mov
adc
mov
out
test
jo
sahf
je
aad
jge
jne
jge
sbb
clc
outsl
fsubr
xlat
cwtl
and
rol
clc
dec
inc
fs
adc
test
cli
push
sbb
push
in
scas
pop
aam
hlt
mov
fbld
rcl
or
out
bound
push
mov
inc
ret
mov
xchg
sub
cmovp
test
filds
leave
testl
es
push
orl
cmp
pop
dec
les
mov
cmp
fmull
cs
and
repnz
push
cmp
mov
push
dec
std
repnz
mov
imul
push
add
add
pop
xor
mov
repnz
pusha
or
test
stos
sbb
icebp
jmp
cld
push
inc
xchg
rcrl
pop
and
push
mov
jecxz
je
mov
cwtl
out
pusha
leave
push
push
dec
icebp
jnp
fimuls
inc
cmpsl
les
ja
push
or
les
mov
test
cmp
hlt
and
xchg
pop
pop
mov
pop
popf
mov
or
mov
lods
mov
sbb
cmp
jp
push
adc
mov
mov
mov
pop
xchg
aaa
jp
dec
in
mov
and
js
leave
out
push
and
sbbl
ret
mov
adc
add
clc
pop
shlb
xor
or
jne
cltd
lcall
and
lcall
les
and
roll
pop
rcr
movups
divl
push
scas
jmp
cmp
fmul
inc
inc
into
push
ja
dec
sub
and
lret
jecxz
aam
fsts
into
je
and
sub
jmp
adc
xchg
adc
lds
incl
insl
push
popf
push
mov
lret
ja
ds
and
or
and
jo
jae
sbb
add
or
pop
lods
sub
mov
cmp
inc
pop
pushl
inc
repnz
mov
je
subb
push
push
lret
stc
repnz
xor
insb
popa
std
arpl
popa
scas
data16
icebp
or
xchg
cs
cwtl
out
cs
cli
xor
cmp
subb
ficoms
mov
adc
dec
dec
cmpsb
iret
xchg
push
ja
pusha
push
xchg
adc
adc
jg
insb
in
and
xchg
jle
lds
mov
xchg
es
aad
daa
iret
loope
mov
and
push
xor
xor
dec
movsb
xchg
ja
ror
push
cli
or
jle
cmp
mov
and
cwtl
lret
mov
js
push
adc
lods
sbb
push
inc
nop
in
xchg
mov
jl
xchg
adc
ds
sahf
outsl
iret
lcall
fnstcw
mov
pop
add
push
in
lods
lahf
sahf
jp
adc
cltd
sub
test
je
xchg
aam
add
xchg
mov
or
in
or
push
push
test
nop
and
mov
mov
iret
push
mov
pop
sub
scas
xlat
jecxz
adc
cmpsl
fisttps
or
pop
push
xorb
and
lahf
sarl
in
lret
notb
pusha
mov
in
sbb
call
xchg
shr
pop
add
sbb
stc
outsl
ret
test
lea
xchg
or
outsl
inc
inc
icebp
in
lret
push
mov
outsl
push
mov
mov
or
push
repnz
inc
jns
adc
mov
in
or
mov
insb
pop
cmp
mov
and
test
and
in
or
cld
sbb
adc
sbb
mov
xchg
adc
pop
mov
fwait
mov
add
ja
mov
jo
push
inc
fadds
mov
mov
loop
sbb
ret
xor
cmp
subb
lds
loopne
jle
pop
push
fcmovnbe
pusha
xchg
adcb
test
xchg
lods
jge
inc
jle
add
ret
in
sbb
and
xchg
outsb
shlb
dec
inc
lret
adc
int
out
mov
insb
pushf
data16
sub
int3
pop
popf
push
mov
fcompl
mov
mov
divb
ja
xor
jg
mov
out
add
xchg
shlb
pop
sub
sbb
dec
les
rcrl
inc
xor
jmp
or
out
lds
sbb
sti
jp
pusha
arpl
es
stos
cmc
cmpsl
inc
popl
adc
or
cli
fnsave
jne
les
mov
out
sbb
lods
pushf
sub
shll
fldenv
sbb
jae
in
lods
lods
mov
pop
lret
sti
mov
push
push
xchg
mov
and
fbld
pop
hlt
sbb
out
jp
inc
clc
fs
pop
je
dec
and
iret
push
sbb
push
fsubrp
lods
add
sub
adc
xor
lds
fsubr
jb
mov
cltd
jnp
mov
mov
repnz
popf
repnz
outsl
cmpb
fisttpl
out
in
outsb
mov
orl
shll
cmp
lea
and
std
and
pop
xlat
and
aaa
mov
push
jl
mov
pusha
xchg
mov
es
mov
and
lea
xchg
dec
hlt
inc
into
rclb
dec
popa
stc
mov
fcoml
mov
pop
and
sub
and
cmp
enter
push
dec
in
ret
mov
sub
stos
xchg
in
cs
pop
sub
or
xchg
lcall
mov
lods
jp
xchg
in
jbe
stos
fcmovb
mov
addr16
lcall
pushf
stc
fsub
or
gs
outsl
adc
push
in
out
addr16
inc
popa
aas
js
cmp
jae
lcall
pop
cltd
int
fs
mov
cmp
and
int3
mov
shl
and
push
mov
cwtl
mov
shll
adc
mov
mov
mov
and
into
dec
out
pop
add
and
add
add
add
sbb
scas
xchg
pop
scas
xchg
mov
icebp
pmaxsw
fsubl
cmpsb
push
add
out
push
mov
inc
jmp
pop
or
icebp
nop
dec
jno
and
mov
enter
inc
pusha
insb
xor
mov
xor
popa
sbb
ret
divb
mov
outsl
std
test
pop
add
sbb
mov
fsubrs
mov
roll
stc
xor
daa
outsb
sub
cmp
add
jne
sarl
imul
jae
pop
out
popa
inc
data16
outsl
shr
clc
into
lret
pop
cmp
push
adc
xchg
push
mov
int3
aam
sub
or
lea
into
xchg
pop
mov
ss
pop
stos
fwait
nop
cld
mov
arpl
inc
dec
shr
cmpsb
test
jmp
add
stc
popa
xor
cmp
xchg
mov
mov
mov
mov
lods
jecxz
sbb
mov
aam
orl
pusha
and
jns
xchg
pop
jle
mov
dec
adcl
dec
rorb
sbb
scas
cmp
daa
shll
iret
xor
out
jno
push
jbe
ja
pop
fstpt
out
std
xor
xchg
sub
jle
repz
or
outsl
cmp
fstps
jge
lahf
cmc
sbb
sbb
inc
mov
imul
fdivr
dec
or
and
jnp
mov
mov
pop
sbb
cld
jg
in
sub
cmp
roll
cmp
cmp
cmc
scas
cmpsl
mov
cmp
add
shlb
aam
pop
mov
clc
sbb
mov
arpl
push
outsb
jmp
mov
test
mov
ljmp
add
mov
xchg
loopne
xchg
lret
push
sub
inc
es
fldl
and
stc
or
sbb
insl
idivl
mov
ja
mov
push
xlat
push
testl
push
mov
stos
inc
cmc
aas
outsl
jo
mov
dec
mov
mov
inc
inc
jb
xchg
ljmp
mov
ja
rclb
std
or
inc
sub
push
dec
push
or
mov
or
sub
sbb
mov
fs
dec
push
out
mov
cmc
arpl
lds
insl
outsl
ja
js
mov
cs
loope
mov
arpl
call
pop
dec
subl
xchg
mov
shl
cmp
xchg
repnz
and
aaa
mov
cmp
push
decb
mov
fsubrl
jb
jne
and
loope
int3
int
insb
cli
cmpsl
cmp
pop
sahf
data16
sub
push
cmp
scas
pop
scas
adc
add
imull
xor
adc
aam
fsubp
dec
pop
cmpl
or
ljmp
es
xor
loop
push
rcrb
xor
lods
mov
iret
stos
pop
in
fidivrl
pop
inc
loopne
call
mov
aad
lret
xchg
xor
pop
push
stos
test
pop
aad
ss
xchg
jo,pn
dec
push
sub
cltd
dec
pop
cltd
bts
and
leave
ret
lods
mov
or
xchg
sbb
fadd
jne
mov
insl
test
aad
cmp
add
pop
movsl
rol
mov
mov
cmp
lea
mov
sub
inc
sbb
mov
pop
adc
dec
lcall
mov
call
orb
inc
inc
cmpsl
js
sbb
cmpl
int
and
sti
push
mov
fcmovbe
sub
lret
jg
int3
mov
mov
mov
dec
push
hlt
xchg
pop
mov
lret
mov
jg
std
or
rcrb
dec
fisubl
cltd
xor
lcall
push
rclb
xchg
test
loop
sbb
mov
jle
cld
fadds
xor
mov
in
daa
and
adc
fnsave
mov
jo
and
outsb
sarl
xor
clc
jnp
in
push
aam
pop
lods
push
decb
ret
pusha
sbb
ret
xchg
sub
inc
pop
xlat
loop
int3
mov
jns
es
cltd
mov
adc
aad
js
scas
into
inc
push
xor
out
repz
popf
lods
mov
out
popa
shufps
jge
imul
mov
pusha
sub
pop
stc
incb
jb
pop
xor
stos
push
testl
pop
out
dec
jle
add
xlat
sub
mov
xchg
enter
push
mov
push
adc
icebp
pop
fwait
jns
jno
aas
jle
xchg
test
shl
fists
negl
fcompl
pop
stc
pop
lret
cwtl
lds
int
pop
cmc
mov
loop
popf
mov
fidivs
roll
push
and
out
mov
aaa
js
mov
and
idivb
sub
push
loop
jg
add
ret
loop
push
add
int3
cli
iret
and
pusha
ds
call
je
jno
shlb
out
lods
jns
pop
ret
cltd
push
mov
xor
jno
or
xor
xchg
adc
and
jo
in
add
xchg
pop
and
inc
xchg
push
pop
aad
jno
mov
scas
in
and
push
xchg
jo
xchg
jecxz
push
ljmp
sbbl
and
jne
fcomps
cmp
gs
pop
mov
inc
pop
jge
inc
push
arpl
sub
and
xor
mov
sub
pop
push
dec
xchg
cs
in
das
inc
fs
jmp
bound
or
fldt
aas
fstpl
outsb
or
mov
or
xor
pop
pop
add
xor
dec
adc
leave
test
int
mov
test
adc
cmp
fwait
xchg
stos
ret
aaa
popf
mov
lcall
xchg
push
jbe
sub
inc
dec
das
lods
out
icebp
div
aaa
lods
sahf
jge
stos
dec
mov
push
decb
roll
sbb
rorl
sbbl
cmp
outsl
fldpi
sub
pop
cs
mov
pop
nop
imul
push
imul
push
pop
and
push
pop
mov
in
frstor
rcrb
adc
in
hlt
call
jle
pop
cmp
add
jmp
sbb
rol
pop
imul
sbb
ret
dec
mov
nop
mov
and
add
in
inc
dec
cmp
test
js
out
inc
xchg
xchg
lea
mov
je
hlt
inc
in
adc
fildll
or
inc
pop
mov
clc
xlat
mov
sub
fcmovbe
lods
out
adc
push
push
shll
aaa
cmp
popa
push
and
inc
push
das
es
daa
es
mov
fidivs
scas
cmp
dec
sbb
lea
into
sbb
xor
push
in
fimull
es
cwtl
jne
aaa
mov
adc
inc
mov
jns
mov
adc
repnz
xor
jp
or
push
ret
dec
ljmp
sbb
mov
jb
adc
dec
mov
arpl
dec
subb
mov
inc
js
mov
lahf
pop
mov
push
gs
push
mov
sub
mov
ffreep
pusha
mov
jmp
ret
divb
xchg
sbb
testl
rolb
jge
push
sub
mov
jl
clc
out
jg
ja
aas
inc
xor
ja
cmp
sahf
bound
push
xchg
in
mov
mov
fldl
sub
or
dec
jne
ret
sbb
enter
in
xor
rclb
or
mov
sub
rcrl
mov
hlt
cmp
stos
push
popa
cli
dec
repz
adc
cld
enter
pop
push
push
adc
mov
gs
test
jae
mov
add
insb
les
xchg
test
lahf
sahf
jno
push
mov
cmpsl
mov
cs
mov
push
inc
xchg
jge
xchg
stc
scas
mov
insb
popf
movb
js
ljmp
push
cltd
inc
add
inc
xor
xor
add
adc
and
out
ja
xor
mov
mov
and
adc
clc
push
sub
ja
jp
call
or
popf
mov
shll
mov
inc
pop
addb
mov
or
jns
mov
push
ret
insb
in
js
ret
sti
push
repz
sub
shlb
pop
out
adc
jo
sub
lods
addr16
sbb
call
fisubrs
jl
sub
sar
mov
mov
push
sbb
add
pop
sbb
cs
push
and
fildll
push
aaa
scas
or
dec
jp
pusha
aad
iret
xor
inc
aas
test
dec
sub
lcall
adc
rolb
shll
fwait
jmp
in
mov
mov
mov
mov
xchg
inc
rorb
jmp
inc
inc
adc
push
lcall
push
es
xor
test
mov
sbb
dec
xchg
mov
scas
fistpl
aaa
loope
pop
sub
scas
sbb
ja
jle
mov
mov
push
inc
pop
sbb
add
xchg
out
push
dec
mov
aas
in
jecxz
and
mov
stc
mov
iret
cmp
jge
mov
lea
sub
hlt
ja
sqrtps
in
adcb
cmp
sbb
clc
dec
cmc
pusha
popf
mov
enter
add
jb
rolb
daa
and
incl
sti
mov
fwait
pavgw
jg
xor
mov
movsl
add
stos
cwtl
and
pop
mov
lods
aam
mov
and
mov
insl
pop
cwtl
loope
aas
push
mov
les
aas
fidivrs
xorb
jnp
ds
sti
rcll
cmp
xchg
pop
leave
inc
ret
and
addr16
mov
jle
inc
cmp
pop
call
dec
xchg
pop
pop
push
mov
sub
ret
out
push
mov
xlat
ficoml
mov
aaa
push
pop
mov
mov
pushf
shrl
sbb
mov
cmpsl
jp
stc
and
loope
outsb
sub
int3
notl
insb
push
jge
int3
mov
pop
jge
and
cld
mov
repnz
cmp
jmp
jmp
int3
cld
xchg
int
fcomps
sarl
pop
jb
add
push
pop
movsb
push
mov
inc
jl
fnstsw
mov
or
lret
ret
mov
negl
fstpt
addb
stc
aad
fisubrl
imul
nop
jb
push
lea
cwtl
inc
mov
dec
into
in
je
jmp
inc
fldt
in
mov
cmp
xchg
rcl
push
xchg
repz
mov
pop
mov
jp
push
xor
imul
cwtl
add
inc
movsb
xchg
mov
cmp
daa
mov
shlb
lahf
adc
lods
bound
or
pop
pop
leave
ds
test
cmp
add
add
frstor
jg
stos
dec
and
lahf
or
push
fcomp
inc
cld
xor
scas
or
inc
jo
push
xor
arpl
nop
add
dec
stos
mov
fdivs
daa
jno
lds
sbb
xor
mov
dec
imul
xchg
scas
mov
repnz
jne
sahf
lds
mov
data16
push
push
aam
mov
inc
xchg
xor
push
into
pop
jns
xchg
xchg
lods
popl
fists
jle
mov
or
fstp
jo
push
push
in
jbe
xor
test
fisttpl
dec
lret
cmc
shr
fsubl
ss
daa
insb
imul
repz
sbb
pop
push
push
int3
loop
mov
inc
mov
roll
lcall
push
add
fmuls
sbb
js
or
rolb
jl
insl
xor
mov
shll
jp
daa
testb
jbe
popf
pop
ret
jae
repnz
in
jmp
xchg
adc
cmp
jo
cmp
xchg
movsl
xchg
inc
popf
out
jne
push
pop
mov
mov
ljmp
jbe
mov
test
sbb
out
dec
das
repnz
push
sub
add
popa
jg
sti
out
dec
lods
les
lahf
repz
scas
mov
xor
sbb
dec
mov
jno
pop
inc
inc
mov
flds
mov
leave
pop
repnz
pop
jmp
and
ss
sub
out
pushf
cmc
or
mov
adc
add
aam
dec
les
in
into
adc
add
or
pop
fmull
scas
mov
or
sbb
pop
fucomip
leave
std
addr16
aam
mov
or
shrl
sub
mov
xchg
aaa
mov
add
mov
mov
int3
sahf
ja
or
adc
lods
std
adc
mov
mov
lcall
and
jmp
ljmp
in
xchg
fsubrp
insb
sub
popa
int
call
lahf
sbbl
adc
pop
mov
divl
test
pushf
mov
xor
jl
mov
cli
cmp
lcall
movsb
ds
jl
xchg
push
int3
xor
push
nop
jl
mov
dec
xlat
mov
jno
xchg
aaa
movsl
daa
out
fdivr
xchg
push
mov
les
xchg
mov
loop
dec
jno
ss
dec
das
inc
cli
pop
andb
jae
dec
sub
mov
in
enter
mov
push
lret
iret
out
mov
test
sbb
inc
adc
xchg
enter
or
xchg
js
out
imul
sti
mov
out
cmp
xchg
mov
cmc
ret
dec
cltd
dec
or
mov
sub
je
inc
pop
push
xor
push
or
es
movsb
jge
add
lea
xchg
mov
out
mov
jno
dec
pop
sbb
mov
shr
xorb
fistl
jns
push
inc
rorl
push
xchg
cwtl
je
fwait
or
xor
enter
push
dec
ds
or
mov
cwtl
add
add
std
inc
das
xchg
push
xchg
xor
sbb
push
xchg
add
scas
inc
repz
mov
xor
mov
cmp
adc
cltd
fidivs
push
pop
clc
fldt
mov
mov
sti
repz
shl
std
sti
test
int3
popa
movsl
and
pushf
jmp
or
in
fwait
or
and
and
cltd
add
adc
aas
in
and
jnp
ret
xor
int
push
jp
mov
jb
xor
aad
test
mov
mov
mov
jb
jne
dec
jno
daa
adc
dec
xchg
shl
pop
xchg
cli
mov
test
or
mov
fsubrl
mov
adc
mov
dec
stos
push
lock
xchg
test
fxch
adc
jnp
cmpsb
out
out
cmp
data16
adc
add
in
xchg
jg
mov
stc
call
dec
sbb
xchg
repz
xchg
outsb
dec
or
movsb
lcall
xchg
push
push
call
jle
mov
icebp
mov
cmp
into
inc
jae
inc
add
add
sahf
imul
jbe
adc
sub
push
lea
mov
sub
pop
std
jo
sbb
cmp
sub
popa
and
sub
ljmp
stc
cmp
pop
outsb
and
pop
push
sub
mulb
dec
in
jle
pop
sbb
aad
adc
adc
inc
dec
sub
mov
ljmp
pop
sub
lds
sbb
xor
jecxz
dec
mov
lahf
cmpsl
movsl
cmp
or
ret
dec
or
cmp
sbb
mov
nop
mov
jle
lock
cmp
loope
push
scas
xor
xchg
lods
mov
pop
xlat
jo
iret
ljmp
sub
inc
cmc
mov
pop
mov
pop
cmp
add
sbb
lods
lock
mov
cmp
jae
out
shll
inc
inc
adc
inc
jnp
gs
xchg
sub
mov
lea
pop
xlat
sbb
stos
loope
icebp
out
dec
test
andb
arpl
sbb
jns
das
inc
fidivl
push
sbb
push
popf
mov
lds
pop
stc
js
aad
or
icebp
clc
lock
andl
sbb
data16
sti
push
pushf
xchg
es
dec
jnp
icebp
stc
pop
push
xor
xchg
pop
jne
mov
cs
in
int
cmpsl
es
xchg
aas
lods
scas
imul
out
sahf
push
fs
adc
movsl
sahf
hlt
xor
imul
mov
or
lret
ficomps
bound
sub
bnd
cmc
movsl
xchg
nop
cmp
addr16
aam
cmp
aaa
clc
push
or
push
or
ljmp
test
movb
jae
jg
xor
ja
sbb
jnp
incb
cmpsl
sbb
lret
fistpll
inc
sbb
dec
imul
ret
notl
cmpsl
add
inc
js
sub
cld
repz
out
in
popf
shl
loope
or
push
ret
jge
sub
test
shr
mov
xor
movsl
jno
fdivl
push
aas
rcr
push
xchg
cli
push
sub
mov
jbe
call
and
iret
xor
dec
pop
cmp
jmp
jae
imul
push
push
xchg
sub
pushf
push
push
and
mov
push
push
inc
clc
add
loopne
lahf
and
sbb
xorb
xor
mov
mov
arpl
jmp
xchg
cmp
dec
shll
or
test
popl
mov
sahf
pop
out
or
out
test
pop
inc
sub
test
mov
loopne
jnp
push
mov
push
mov
push
push
mov
mov
lret
stos
xlat
setae
sbb
cmp
mov
in
cmp
pop
mov
jl
xchg
std
mov
addr16
aaa
pop
inc
pop
jnp
mov
sti
xor
cltd
add
stc
movsl
in
lea
pop
cmp
cltd
add
dec
into
or
ja
jbe
loop
cmpsb
and
xchg
movsl
test
and
jno
jecxz
xchg
pop
ficomps
xor
movsb
dec
fs
int3
and
mov
lds
sbb
and
sub
stos
pop
call
insb
pop
cmp
ret
sbb
and
xrelease
mov
inc
sbb
xlat
call
xchg
sub
xchg
adc
cmp
subb
cmpsl
lahf
es
pop
gs
xor
out
dec
jle
inc
cmp
rclb
ja
mov
and
push
inc
lock
enter
ror
movb
mov
cmp
test
jne
adc
rorl
or
movsb
insb
jns
les
mov
add
lods
add
cs
lret
xchg
mov
push
arpl
out
inc
xchg
sbb
mov
clc
mov
mov
lock
insl
push
into
xchg
pop
push
aaa
fildl
lret
cmc
out
push
pop
cmp
mov
aas
and
andb
pop
movsb
sub
in
movsl
iret
cmpsb
popa
ror
ljmp
or
lock
lock
ss
std
mov
cmp
jl
mov
push
fistl
div
and
in
cltd
dec
sahf
add
jae
cld
clc
js
je
push
or
scas
scas
lods
mov
lret
cmp
cmp
ret
pop
jp
das
push
cmp
push
roll
add
cli
push
or
push
jg
cli
fcomi
ss
fwait
divl
shlb
jne
sahf
out
mov
jns
xchg
push
mov
add
clc
mov
insb
iret
add
scas
xchg
pusha
xor
pop
rcrl
sbb
add
push
adc
push
or
sbb
or
push
ja
iret
ja
mov
mov
push
push
pop
push
mov
inc
pop
js
addr16
xchg
leave
outsb
mov
int3
out
test
cmpsl
idiv
lret
sub
fdivp
sbb
jl
iret
xchg
jmp
adc
enter
adc
pusha
out
cli
lcall
jae
shll
mov
hlt
jp
add
push
call
sub
loope
xchg
xchg
mov
dec
push
mov
imul
jge
jno
and
lea
in
lret
leave
popa
loop
and
pop
bound
cmp
iret
scas
int
dec
fdivr
jp
fdivrl
pop
cld
rcll
add
pop
jp
or
xchg
cmp
sti
and
mov
sub
xchg
divl
aam
dec
nop
cwtl
rcll
test
ja
ss
mov
jnp
rol
nop
ljmp
incb
movsl
pop
pop
inc
push
mull
mov
pop
xlat
push
dec
std
fdivl
inc
mov
pusha
stc
das
je
bound
jp
out
push
mov
sub
dec
sub
lea
push
inc
sub
orb
jl
mov
mov
popf
lods
fidivrl
call
popf
mov
outsl
in
out
xchg
pushf
xor
fucomp
mov
adc
lret
or
pop
insl
stc
gs
push
xor
hlt
cmc
or
cmp
std
xor
xchg
sbb
out
mov
fmuls
jb
sub
mov
push
dec
jg
f2xm1
aad
aam
pop
aam
stos
shlb
inc
push
out
into
or
sub
push
sub
mov
icebp
mov
xchg
cmp
ret
stos
inc
lahf
jle
jo
sub
scas
pop
adc
mov
bound
push
xchg
lret
shlb
adc
adc
hlt
mov
sub
nop
les
and
xor
jl
sub
dec
mov
std
in
fbld
idivl
and
ja
adc
xchg
test
dec
push
fisttpl
push
xchg
hlt
jnp
or
outsb
xor
icebp
xor
loope
insl
lock
call
and
outsb
in
out
cmpsb
outsb
and
adc
pop
popf
inc
stos
into
fistpll
je
clc
inc
pusha
dec
jno
sahf
mov
movsl
xor
xor
push
xchg
cwtl
xchg
leave
sub
subb
dec
fistpll
add
into
mov
pop
jb
cmpsb
arpl
aaa
pop
js
adc
adc
inc
mov
fstpt
and
leave
sub
cmp
movb
or
pop
jg
cmp
cmp
push
push
aaa
mov
jo
cmp
sbb
hlt
cltd
aas
pushf
inc
rcrl
in
xchg
mov
mov
popf
xchg
cld
jmp
and
cld
cmp
pop
mov
and
addr16
movsl
lea
inc
loopne
js
xchg
sbbl
or
xchg
and
pop
sti
jb
jge
cmpsl
xor
test
push
scas
push
notb
pop
stc
fidivl
out
dec
jle
or
scas
cltd
jb
add
add
fmull
mov
mov
jl
mov
xor
sub
andl
push
cmp
dec
xchg
cltd
mov
mov
add
mov
mov
xor
arpl
mov
arpl
add
pushf
je
in
das
xor
mov
imul
enter
pop
jp
stc
in
add
stos
jmp
dec
cmpl
inc
sbb
test
pop
ss
mov
push
jbe
aaa
daa
int
shl
mov
mov
les
adc
push
pop
fidivrl
cs
xlat
add
push
add
fidivrs
inc
mov
mov
xor
btr
cmp
faddl
jno
mov
lea
jle
imul
int3
outsb
or
push
fldenv
cs
mov
out
jge
cmp
push
inc
repnz
xlat
xchg
cltd
pop
mov
out
sbb
aas
and
cltd
repz
pop
test
mov
sub
test
jg
add
jo
aad
dec
dec
pop
dec
call
mov
test
or
xlat
js
addl
scas
adc
pop
pop
shl
outsl
movsb
pop
je
mov
xor
ljmp
cmp
mov
pop
dec
cmp
cli
adc
xor
cmp
dec
in
sub
data16
jp
subl
mov
jae
adc
mov
jns
aas
inc
or
mov
mov
cmp
movsl
inc
pop
xchg
jne
adc
mov
cld
xchg
add
lock
inc
pop
mov
mov
mov
enter
insl
lds
aaa
and
mov
in
cmp
sub
lods
inc
int3
sub
mov
out
and
mov
push
in
outsl
lcall
stc
shl
cmc
popa
push
loope
daa
mov
jbe
imul
mov
push
int3
ds
push
lods
ffreep
les
scas
push
les
es
lret
in
cmp
adc
cmp
sbb
out
pop
adcb
sbb
push
shlb
aad
fsts
sub
mov
ror
push
mov
mov
jmp
push
iret
pop
sub
pop
cmp
in
xorl
jmp
lret
sub
fs
sub
sbb
repnz
pop
inc
js
sbb
incb
sub
test
jge
fisubl
icebp
in
pop
enter
or
jmp
or
jae
test
add
testl
iret
rorl
call
pushf
les
or
push
fiadds
mov
loopne
inc
pop
icebp
rorl
ds
mov
fadd
cmc
daa
loop
jge
adc
adc
inc
jg
stos
pop
push
ffree
adc
in
pop
sub
inc
ret
pop
int3
divb
xor
jb
popf
movsl
mov
frstor
jle
pusha
imul
inc
sbb
push
call
dec
pusha
mov
insl
mov
loope
cmp
mov
sub
mov
enter
fdivrl
test
jmp
add
cmpsb
add
xchg
jp
mov
mov
sbb
push
cmp
shll
xor
cli
and
add
cmp
cmpsb
gs
pop
int
inc
mov
int3
pushf
xchg
aad
movb
cwtl
in
or
adc
cmc
jbe
xchg
fnstsw
loopne
push
mov
and
dec
dec
jne
mov
xchg
cmp
adc
push
out
jge
enter
in
push
arpl
dec
xor
test
daa
sub
mov
mov
lret
faddl
pop
push
in
repz
repz
or
xchg
mov
into
sahf
rorb
sbb
push
insb
xchg
adcb
aaa
scas
gs
popa
mov
inc
lock
push
xchg
loop
lret
cmp
in
add
mov
mov
pushf
aas
bound
jnp
dec
or
dec
mov
aad
adc
int
adc
mov
into
nop
dec
and
mov
xchg
rcrl
xchg
das
and
ss
xchg
xor
jb
aam
in
mov
movsl
adc
and
mov
pop
mov
xor
cmp
or
movl
and
push
scas
xor
pop
xor
xor
xchg
aas
or
xor
dec
dec
dec
nop
dec
jge
jle
cmc
mov
push
mov
mov
popa
xchg
es
add
sub
sub
insl
out
adc
cwtl
fucom
pop
lock
fistl
stc
or
outsl
cmp
pop
inc
push
cli
sarb
jmp
xchg
push
or
jnp
push
xchg
ljmp
jns
es
xor
push
or
fnstsw
pop
leave
aaa
loop
pop
lods
and
loopne
cli
lods
fwait
jae
das
jo
or
and
push
out
add
out
inc
or
mov
mov
ficompl
test
xor
jne
pop
lahf
inc
mov
sub
fstps
in
mov
gs
cli
int3
stos
das
jl
adcl
in
mov
cmc
inc
and
pop
dec
dec
mov
paddusw
pop
lods
mov
in
sar
shlb
inc
fdivrl
popa
stc
pop
xchg
sbb
push
mov
mov
stos
or
lret
stos
std
lock
xchg
push
clc
and
cmp
pop
sub
out
popf
out
mov
test
jmp
jmp
jns
sub
push
mov
hlt
mov
stc
push
mov
in
loop
xlat
xor
ljmp
mov
insb
aam
icebp
addr16
insl
fs
popf
add
icebp
rclb
sub
insb
lcall
enter
inc
pop
rcll
lret
jns
dec
xor
outsb
mov
inc
jle
out
out
lods
add
xlat
in
adc
ja
mov
cmp
mov
mov
xchg
sub
sub
es
cmpsl
int
pushfw
stos
jo
sbbl
icebp
xor
jae
popa
adc
mov
mov
sbbb
movsl
xchg
jmp
cmp
lret
push
pop
ror
jmp
shlb
ja
out
fisubrs
movsl
adc
lcall
ret
and
lds
and
dec
imul
rcrb
es
ja
fdivr
cs
ret
cs
data16
imul
ss
scas
jg
sub
daa
push
lea
nop
mov
lahf
mov
push
adc
mov
jle
ss
ret
faddl
jl
xorb
clc
negb
cmp
fcmovu
in
movsb
into
nop
add
in
mov
xchg
sub
pusha
xor
testb
pop
mov
pmaddwd
or
jns
sub
sbb
leave
dec
cmpsl
in
inc
fwait
push
les
push
repz
xchg
sar
add
add
jnp
arpl
loop
mov
xor
xchg
pop
xor
add
ret
sbb
xchg
or
cltd
pop
jnp
push
dec
repnz
ds
mov
mov
lcall
and
and
or
pop
cmpsl
cmpsl
gs
cmpsl
xor
add
or
and
mov
xchg
mov
sub
mov
mov
aad
les
sub
and
jne
sbb
sarb
and
js
fs
jns
mov
cltd
out
popa
inc
jbe
mov
insb
test
xchg
inc
je
js
imul
inc
cmp
daa
cmp
or
sub
jb
push
and
test
rol
sahf
lahf
loopne
xor
das
cmp
xor
out
call
inc
sahf
pop
ljmp
and
push
mov
mov
jae
xchg
inc
inc
cmp
jmp
cmp
out
cld
in
pop
pusha
push
cli
dec
ss
inc
cmpsl
jbe
pop
out
dec
push
in
push
xor
adc
mov
jp
lea
lds
dec
cmpsl
mov
dec
add
mov
xor
and
imul
insb
sub
pusha
pop
dec
out
xchg
repnz
ret
jmp
push
fdivl
aas
jl
lods
add
cs
xor
inc
adc
xlat
mov
add
std
dec
roll
or
scas
je
rclb
sub
int
push
andb
and
lock
int
and
lahf
mov
repnz
aas
sahf
out
rclb
inc
mov
sti
jmp
add
xor
fstl
push
popa
mov
mov
dec
push
sub
jnp
pop
popf
pop
jge
sub
mov
sub
inc
loopne
aad
pop
sbb
push
or
inc
cmpsl
addr16
icebp
add
in
cmp
mov
xor
cmc
pop
jle
sahf
mov
js
cmc
pop
insb
sbb
push
test
sbb
popf
or
sbb
faddl
nop
jle
movsl
rcr
nop
jmp
test
popa
add
shrb
or
insl
push
jno
cmpsb
cs
sub
sub
mov
je
aam
adc
sbb
push
loop
into
mov
push
cmp
fwait
loopne
push
jg
jmp
mov
mov
cltd
gs
or
lds
test
scas
test
mov
add
dec
xlat
mov
lahf
scas
out
call
cmp
test
daa
or
cltd
jbe
dec
lcall
mov
out
jmp
xchg
rolb
or
loopne
sub
popa
cmpsl
adc
clc
xor
xor
fldt
into
aaa
xchg
xlat
shlb
orl
lods
push
lcall
mov
rcrb
jmp
loop
ret
imul
mov
shl
test
loope
and
sub
mov
sub
jg
mov
and
sub
dec
xor
jge
fidivs
push
pop
lods
mov
jg
mov
es
push
fidivl
jnp
mov
divl
adc
inc
add
dec
or
xchg
aas
pushf
jno
add
call
push
jle
sub
arpl
in
daa
or
stc
xchg
iret
adc
out
insl
dec
sbb
icebp
stos
lret
dec
inc
mov
dec
in
hlt
imul
xchg
stc
pusha
aam
in
cmp
mov
insb
idivl
pop
dec
jp
jmp
rcrb
sbb
pop
dec
or
mov
jl
movsb
stos
jbe
insb
inc
push
pop
jge
pop
movsl
dec
jns
out
adc
fiaddl
addr16
or
xchg
lods
in
mov
inc
arpl
imul
stos
int3
into
js
push
mov
idivl
pop
lcall
pop
test
insl
inc
mov
cli
incl
sti
sahf
mov
jge
int
mov
mov
dec
add
fists
jne
push
sbb
lods
sbb
and
das
adc
jle
jno
or
fsubr
subl
dec
stos
xchg
popa
pop
sbb
gs
dec
outsb
sbbl
push
leave
mov
add
cmc
stos
aaa
mov
cmpsl
notl
mov
call
cltd
jo
ror
packuswb
int
out
mov
sub
mov
in
mov
dec
lods
inc
in
movsb
mov
leave
add
pushf
jb
test
lea
jl
sub
mov
mov
arpl
pop
lock
mov
sub
push
popf
mov
loope
outsb
or
test
adc
push
sub
mov
int
aam
lea
and
sbb
or
cmc
ds
sbb
inc
pop
sahf
sti
mov
in
negb
scas
mov
sbb
stos
bound
dec
mov
call
and
xchg
stos
jle
leave
lea
or
cmp
ljmp
jo
xlat
lods
xchg
daa
push
lahf
lock
pop
loope
aaa
xchg
call
outsb
fstpt
fisubs
popf
mov
adc
sbb
leave
dec
cmp
sub
scas
pop
push
adc
mov
push
lock
shrb
sti
std
sub
scas
adc
xchg
imul
nop
or
xchg
pop
sub
subb
out
das
jmp
lcall
mov
inc
sahf
fwait
sub
iret
dec
pop
xor
mov
ljmp
xchg
mov
lcall
inc
mov
iret
outsl
xlat
fisttpl
jbe
in
out
xor
jo
add
xor
ret
cmp
scas
xlat
jle
les
jmp
xchg
movsb
gs
xchg
sbb
fcoml
and
popa
call
dec
cmp
and
sbb
mov
pop
ss
mov
enter
or
sub
ja
pusha
cmp
ds
insl
jno
test
pop
mov
jp,pt
test
loop
imul
je
and
mov
fdivrs
cld
frstor
pop
xchg
les
dec
adc
orb
add
aam
mov
adc
add
mov
jb
cld
pop
push
inc
adc
out
lret
fwait
in
mov
jp
and
test
mov
imul
out
pushf
fimull
push
outsb
or
jo
cld
cmovo
ror
sahf
fidivs
mov
xchg
push
adc
sbb
daa
cmpsb
cmc
aad
push
pop
je
cmpsb
cwtl
fsubs
inc
xlat
out
push
and
mov
mov
jb
rol
shll
xor
adc
loop
mov
push
int3
incb
push
pop
fcompl
xchg
mov
popf
inc
out
pop
fidivs
jnp
adc
prefetch
mov
lock
fwait
ljmp
inc
fdecstp
shlb
mov
lods
lcall
push
int3
and
hlt
inc
push
jle
stc
rcr
insl
lret
cwtl
fildll
lds
out
sti
enter
mov
aaa
cwtl
mov
call
add
mov
or
or
outsl
shrl
addr16
xchg
pop
cli
or
shll
or
jl
xchg
loop
sbb
push
inc
and
call
test
cld
stc
int
rol
push
orl
leave
mov
xchg
dec
pop
mov
jnp,pn
add
mov
adc
add
mov
push
lcall
mov
sbb
dec
aam
add
enter
movsb
xlat
add
and
adc
enter
es
cli
mov
test
lea
pop
and
fsub
in
aaa
cli
push
fisubrl
xor
sub
mov
je
inc
push
stos
and
mov
lods
std
loop
pop
in
test
pop
xor
fadd
pop
arpl
mov
xor
sub
cltd
jae
outsl
xchg
mov
mov
mov
xor
pop
add
call
rolb
sbb
sbb
into
jecxz
jb
and
scas
mov
push
sbb
xchg
push
lret
cltd
jmp
add
mov
scas
push
xor
pusha
xchg
push
stos
repnz
scas
in
mov
sbb
stos
sub
adc
scas
sub
adc
jge
leave
sub
jne
enter
xchg
repnz
hlt
cmpsb
scas
mov
jge
add
and
decb
pop
pop
shrl
pop
shll
push
push
aas
or
or
jle
and
nop
call
jp
std
or
clc
mov
inc
nop
cli
stos
insb
inc
mov
and
aam
pop
repz
popf
hlt
cmp
lcall
jne
arpl
addr16
push
movsl
test
add
sbb
in
rcrl
mov
mov
xchg
shll
xchg
jl
fcoms
xor
pop
xor
sub
in
ss
jno
lahf
negb
xor
xor
lcall
lods
andl
test
mov
movsl
popa
xchg
fsub
xor
sahf
sub
and
cli
sbb
fisttps
and
mov
das
push
dec
push
jno
aaa
repz
outsl
mov
fdivs
or
jb
into
popa
icebp
xchg
dec
or
inc
xchg
push
or
jnp
jo
jg
or
pop
pusha
push
and
cmpb
out
subb
add
fwait
mov
jge
lret
pop
hlt
fbld
push
push
outsb
dec
lahf
sub
sti
adc
mov
dec
nop
pop
add
sbb
repz
outsb
dec
pop
cwtl
pop
mov
xor
sti
jns
push
clc
rcll
test
sti
loopne
mov
das
in
cmp
cmp
loop
add
fsincos
rclb
subl
mov
xor
pop
dec
push
shrl
fldcw
notl
cmpsb
jb
in
push
out
pop
iret
ret
lahf
pop
and
fs
xchg
mov
shrl
add
sti
lret
shl
add
imul
inc
pop
incl
pop
cmp
xor
cwtl
sbbl
je
in
fdiv
inc
pop
inc
fcomps
push
dec
xor
and
fadd
fists
dec
mov
lcall
mov
or
ss
dec
adc
cmp
aad
xchg
dec
adcb
push
es
pop
fidivl
aad
ret
dec
rdmsr
cli
fcoml
inc
adc
sti
adc
enter
lock
jl
ret
jno
xor
cltd
sub
inc
or
aaa
xchg
lcall
dec
xchg
insb
pop
mov
add
sbb
mov
adc
push
ljmp
jae
xchg
stos
cmp
adc
add
cmpl
rolb
ja
pop
mov
pop
das
insb
jnp
nop
cltd
xchg
fcomps
xlat
hlt
mov
call
sub
cwtl
test
mov
or
add
or
sub
pop
cmp
sbb
out
ret
movsb
mov
or
daa
fmul
stc
ljmp
cmpsb
jnp
and
xchg
mov
push
inc
in
inc
jle
shll
xor
xchg
orl
sbbb
pusha
add
pop
sarb
mov
pop
cld
mov
fcoms
mov
add
add
hlt
jo
sbb
pop
push
xchg
and
xor
inc
insl
test
cltd
lret
pop
imul
pushf
mov
dec
in
mov
out
loop
add
mov
inc
xor
xchg
insl
jmp
push
mov
jl
les
xor
push
xor
xlat
loope
or
cli
sub
lret
xchg
and
dec
sbb
pmullw
aaa
test
and
enter
test
cmp
push
leave
roll
pop
push
pusha
add
or
mov
js
pop
xchg
jecxz
or
and
outsl
jbe
out
mov
les
xchg
add
jnp
or
adc
mov
in
xchg
leave
add
out
cmp
std
loop
mov
orb
jp
push
inc
xor
repz
loope
sti
dec
pop
out
adc
sahf
mov
addl
cmp
xchg
mov
lret
das
pop
push
shrb
insb
cmp
cmpsb
jmp
rcr
xchg
mov
dec
cwtl
arpl
cmp
inc
test
movsb
mov
out
xor
cmp
mul
adcb
stos
fnstsw
lret
lods
stos
xchg
decb
mov
xorb
lds
sub
loop
in
sbb
jge
in
mov
int3
lcall
and
add
es
push
cli
mov
mov
xlat
cmpl
inc
mov
roll
out
les
loop
clc
clc
out
pusha
jg
xor
and
addb
xor
sti
enter
rolb
push
jno
leave
lds
adc
mov
out
ficomps
outsl
lods
mov
repz
and
popa
add
iret
xor
and
cs
in
sbb
and
inc
test
cs
mov
in
jp
test
ja,pn
out
adc
dec
mov
sbb
jmp
mov
pop
or
jnp
sub
jne
hlt
rcr
lock
sbb
test
push
adc
icebp
adc
xor
insl
mov
cmp
xor
xchg
ljmp
lret
aam
xor
in
enter
cld
push
sbb
dec
dec
pusha
and
mov
out
pop
data16
xchg
push
out
lret
std
lea
shrb
lea
pop
lret
dec
push
sub
adc
xchg
mov
loopne
push
adcl
lret
fldl
fwait
xlat
xor
dec
inc
sub
adc
pop
js
or
insl
xchg
adcb
mov
xor
cmp
add
sti
sti
sbb
cwtl
jo
xor
add
fsubp
lahf
in
xor
push
lcall
mov
dec
xor
out
mov
lret
inc
decl
pushf
lods
testl
shlb
xchg
cwtl
and
fdivrl
mov
pop
insl
sub
pop
stc
lock
scas
stos
call
dec
stos
divb
xchg
jecxz
pop
fsts
out
imul
cli
das
pop
and
cmpl
or
add
dec
icebp
xor
xor
fmuls
adc
into
std
push
push
cmp
fildl
mov
inc
pop
or
mov
adc
jbe
or
sub
adc
sub
mov
cmpsl
adc
mov
inc
mov
push
sbb
mov
stos
test
ret
cmp
or
mov
mov
and
fwait
lods
add
cltd
inc
and
xchg
add
inc
and
mov
out
jne
nop
into
les
sub
mov
mov
push
mov
dec
fwait
lods
or
inc
popa
insb
mov
in
lods
es
dec
add
xchg
xor
pop
jne
test
or
je
mov
popa
xchg
mov
lods
mov
stc
push
loope
mov
cmp
mov
mov
rorb
or
bound
push
scas
sbb
push
cmp
or
aam
fdivrs
ds
imul
add
mulb
push
lret
ds
mulps
adc
loop
xchg
adc
movsl
mov
out
mov
push
enter
in
imul
jmp
aaa
pop
and
lock
push
xchg
iret
push
sbb
aas
jnp
mov
cmc
in
push
jge
pop
loope
mov
or
jg
pusha
xor
lea
lret
dec
cmc
push
sub
jb
scas
xor
cli
pop
xchg
or
or
xchg
in
pop
mov
jae
sbb
lea
dec
add
mov
xor
andb
push
repz
addr16
cwtl
in
sbb
popa
pop
adc
xchg
jmp
dec
xor
xor
cmp
jnp
sbb
dec
cmp
addr16
loope
mov
mov
mov
jg
test
xchg
in
outsb
add
sti
mov
mov
sahf
dec
and
cmp
imul
jl
popa
pop
icebp
into
sbb
outsl
dec
loop
mov
push
mov
hlt
sbb
cmp
cmp
add
in
xchg
imul
mov
ljmp
cwtl
lea
sahf
or
dec
imull
inc
and
add
cmpb
cld
fdivp
aad
addr16
sbb
xorb
xchg
xor
loop
add
out
ds
iret
or
push
test
fstl
scas
fnstcw
inc
outsl
mov
sbbb
pop
push
shl
cmp
mov
in
std
mov
mov
lea
push
addl
pop
cmp
test
sub
imul
inc
es
fsubp
sub
xchg
mov
mov
mov
ja
cmp
xchg
sar
fistpl
add
mov
test
in
mov
mov
fdivl
leave
push
das
xchg
cmp
cmp
add
out
in
sbb
mov
test
adc
xchg
js
cmp
cmc
pop
xlat
dec
xlat
lret
cltd
mov
fisttpl
cli
loopne
outsl
push
xchg
fidivs
in
daa
pusha
fcoms
xchg
xchg
bound
inc
and
fstps
jge
mov
lret
mov
mov
bound
xlat
rolb
stos
xchg
cmc
jb
std
testb
lea
pop
cmpsb
rcll
xchg
mov
fnsave
pop
sbb
enter
mov
loope
adc
xor
add
ja
mov
dec
jp
test
les
sbb
inc
and
aad
fnstsw
pushf
sub
inc
scas
cmp
sahf
or
sbb
jge
cmp
or
xchg
rcl
in
aad
mov
pop
pop
lahf
cmp
dec
mov
mov
jb
incb
and
dec
jno
sub
fldcw
scas
jns
int3
gs
pop
ror
cmp
movsl
mov
jb
xor
or
imul
add
test
scas
outsb
push
xchg
aam
mov
leave
inc
mov
pop
dec
sub
adc
add
sub
fucomi
insl
ljmp
adc
lret
dec
aas
push
pop
or
fadd
into
push
ret
pushw
int3
dec
stos
sbb
jbe
pop
add
iret
imul
mov
jecxz
scas
and
dec
cld
dec
add
cmc
push
cmp
sub
lcall
inc
push
fnsave
hlt
xchg
pop
ftst
dec
inc
inc
and
add
jge
jmp
xor
or
cmpb
xor
test
test
mov
dec
mov
fs
ja
push
ss
dec
inc
and
pop
xchg
dec
fnstcw
decl
push
ljmp
dec
cmp
hlt
aaa
sarb
roll
mov
fnstsw
dec
jns
mov
call
int
movsl
push
push
sub
rcrb
pop
hlt
jg
stos
insb
aaa
mov
mov
shlb
fists
inc
sbb
sub
mov
js
or
iret
lcall
mov
pop
ret
mov
adc
std
xor
rclb
lcall
inc
out
xchg
test
pop
in
int3
inc
ret
ret
out
fsts
and
call
scas
imul
inc
or
mov
cli
mov
xor
mov
xchg
lahf
and
fcmovne
mov
jno
addr16
push
outsb
sbb
jne
nop
lret
int
mov
mov
push
ljmp
pop
iret
fnstsw
xchg
rcl
fsubl
jno
xchg
jl
loopne
pushf
jne
fistpl
jnp
mov
insl
imul
bound
jbe
adc
add
leave
mov
cltd
pop
adc
aas
inc
repnz
mov
stos
or
loop
xchg
sti
imulb
jnp
popf
sbb
fwait
into
cmp
mov
mov
pushf
jno
movsl
mov
mov
cmp
lret
test
fdiv
add
loop
inc
sbb
cmp
pop
loop
into
js
test
mov
test
inc
xchg
inc
push
or
lret
test
xor
es
dec
add
aad
mov
xchg
cmc
adc
int
adcb
mov
mov
shlb
jg
fmull
adc
push
fsubs
mov
dec
mov
mov
push
mov
mov
inc
jb
loope
jecxz
inc
cld
lret
jp
adc
jl
fisubrl
imulb
xchg
add
into
inc
mov
addr16
imul
jnp
push
and
aas
call
ljmp
out
cmpsl
gs
fucomp
push
cltd
mov
pop
rclb
mov
jo
lods
adc
add
sbb
push
gs
fldl
leave
das
dec
jle
fistpll
sar
pop
lret
pop
or
imul
lea
mov
cmp
movsl
es
adc
int3
in
test
pop
pop
addr16
xor
cmp
pop
cmp
xchg
inc
mov
loopne
rorl
in
lea
inc
rcll
std
jl
pop
inc
cmp
xorl
ds
adc
int3
data16
jmp
lret
dec
out
gs
adc
xor
sub
sub
xchg
daa
sub
or
sarb
mov
inc
testb
xor
lea
adc
cmp
test
stc
cs
xlat
scas
push
pop
mov
scas
and
sub
fiaddl
xchg
pop
mov
push
insl
mov
or
mov
jp
je
push
cs
dec
jae
cltd
cs
arpl
push
imul
push
xor
push
ja,pn
cltd
push
fimull
push
or
cwtl
jecxz
mov
fisttps
dec
sub
dec
dec
mov
push
sub
jmp
xorl
cwtl
cli
ficomps
xlat
pop
adc
jns
aaa
cld
adc
add
dec
xor
and
ss
outsl
nop
pusha
sbb
int
and
cmpsl
cwtl
push
nop
sahf
in
mulb
sub
std
sbb
xor
add
mov
xor
mov
jle
ficoms
stos
shll
ljmp
cwtl
cmp
sub
ja
jno
out
mov
gs
adc
inc
dec
leave
shrl
mov
cmp
xor
in
jmp
pop
or
xor
gs
cld
out
mov
shrl
movsl
ret
pop
sbb
mov
sbb
sahf
mov
push
inc
and
xchg
rcrl
pop
aas
negl
insl
lret
add
mov
scas
les
pop
icebp
outsl
sbb
daa
in
xor
adc
arpl
fstp
ss
add
out
mov
cs
or
inc
jmp
cmp
hlt
mov
cmc
xor
int
repnz
fsubrp
and
xchg
push
sub
mov
cltd
push
insb
bnd
jge
movsb
jb
ret
jecxz
push
lret
mov
enter
lret
push
mov
cmpsl
stos
add
sub
xor
inc
rorb
sub
inc
sbb
add
and
mov
sbb
mov
daa
hlt
jo
std
rclw
ja
testb
test
cli
xor
mov
sbb
push
or
call
jb
sub
cmpsb
call
iret
jge
test
push
and
mov
sbb
mov
mov
hlt
adc
jp
sub
ficoms
leave
dec
sti
mov
dec
sbb
push
pushf
test
out
in
stos
cmp
popa
clc
jne
js
sbbl
fists
pusha
pop
jecxz
inc
movsl
xchg
cmp
lds
add
add
lods
or
inc
mov
push
mov
cmpsl
stc
add
cmp
jge
mov
fidivrl
xor
mov
push
das
push
cmpb
in
mov
mov
mov
pop
adc
inc
sbb
add
adc
lea
insb
cmp
mov
sub
out
push
and
dec
push
add
imul
test
enter
pusha
arpl
cmp
mov
rorb
cmpsb
and
ja
cmp
mov
add
nop
ror
lods
jbe
adc
xchg
inc
add
sbb
cmc
inc
les
xor
cmp
xchg
pop
out
out
fldt
inc
xchg
scas
and
dec
cli
shll
jge
mov
jecxz
bswap
xor
movl
int3
movsl
or
mov
jecxz
out
pop
outsl
xchg
fstl
ret
movsb
lret
xor
mov
cld
xor
popa
jle
xchg
data16
sbb
add
rclb
add
mov
imul
addb
push
je
sub
cmp
cmp
mov
lret
rcll
mov
and
sahf
lods
adc
scas
das
daa
aaa
add
ds
mov
hlt
mov
jle
adc
mov
loope
cmp
lds
add
shrl
arpl
adc
xchg
or
jnp
cltd
jp
sbb
mov
aaa
xor
xlat
push
jp
jb
imul
imul
cld
jle
mov
xchg
lds
mov
cs
mov
jecxz
test
cmp
js
movsl
loope
ljmp
or
test
jno
add
dec
add
sub
inc
jb
push
add
out
idivl
setae
add
loope
push
lahf
adc
je
cs
out
xor
inc
xor
popa
fwait
pop
xchg
fcoms
adc
lods
jnp
xor
xor
mov
jl
fwait
mul
iret
sbb
ss
pop
mov
lcall
jb
cmp
out
xor
std
adc
and
shlb
sub
push
push
out
jne
mov
aas
and
ret
je
mov
pop
xchg
lret
cmpl
loop
mov
xor
xchg
insl
push
dec
inc
dec
dec
dec
cmp
fcoms
enter
stos
xor
pop
in
ret
outsb
jb,pn
jmp
fdivp
imul
cli
add
inc
adc
stc
push
adc
cli
enter
stc
std
incl
popa
mov
push
shrb
mov
push
inc
stos
sub
scas
ss
and
sub
test
sbb
ja
adc
dec
movsl
dec
cmp
cmpsl
shlb
fisttpll
push
mov
xchg
test
pop
mov
loopne
pop
imul
and
pop
sbb
pop
xor
mov
mov
mov
sub
xchg
int
aas
inc
out
jns
push
cmp
das
mov
push
ja
push
dec
aad
je
or
jecxz
leave
cmp
push
pop
out
xchg
std
jo
inc
dec
sbb
test
adc
cli
xchg
stos
adc
in
imul
sarl
and
in
imul
fs
mov
pop
pop
push
pusha
repnz
and
ret
sub
dec
cmp
push
into
sbb
mov
mov
outsb
pop
fwait
int
fwait
lahf
adc
cltd
ds
inc
push
mov
cs
xchg
dec
sti
or
lret
pushf
rorl
mov
mov
incb
cld
dec
cmp
mov
iret
mov
repnz
outsb
dec
pop
mov
jl
std
std
xchg
sahf
cmpsb
xor
lret
jle
sbbb
and
jne
jbe
xor
lcall
lret
mov
xor
push
int3
push
ljmp
mov
push
sahf
pushf
pop
jmp
loope
pushf
sti
js
test
push
cmp
adc
mov
out
shl
cmc
lret
iretw
test
push
scas
cltd
divb
lcall
shrl
mov
mov
in
lea
out
sahf
enter
stc
mov
je
out
cmc
or
or
fisubrs
add
hlt
mov
int
pop
mov
push
push
xchg
aas
es
frstor
sbb
imul
jge
pushf
push
jns
mov
mov
movsl
cmp
xchg
add
mov
or
sbb
xchg
adc
push
test
fnstenv
jbe
mov
adc
sahf
std
and
cmp
iret
mov
or
jle
push
int
das
pop
test
dec
and
mov
push
mov
imul
add
xchg
dec
std
mov
aas
or
jmp
addr16
loopne
sbb
cltd
div
cmc
arpl
cmpsl
mov
out
fistl
aam
insb
mov
insb
and
cwtl
push
mov
pop
mov
and
sbb
ret
repnz
imul
pop
ret
mov
push
sahf
stos
mov
cmovge
sub
fistpl
mov
scas
sbb
cmp
pop
imul
xchg
inc
mov
ja
in
inc
aam
or
outsl
cld
aas
cltd
mov
test
and
rol
jge
fcompl
mov
add
or
fisubrs
and
xor
add
fwait
jae
das
pop
pushf
pop
or
enter
data16
out
testl
xor
je
lcall
inc
dec
sub
xor
and
adcl
xchg
clc
je
data16
call
fisubl
add
outsb
add
cmpsb
xchg
fucom
aam
sub
sti
mov
inc
sub
lods
pop
adc
or
negl
inc
arpl
lret
inc
repnz
sub
outsl
sub
ja
hlt
js
xchg
adc
pushf
or
cmp
pusha
aaa
inc
outsl
add
dec
mov
dec
jecxz
pusha
mov
cmp
xchg
lcall
mov
xlat
incl
push
jne
pusha
shl
push
pop
xchg
sarl
and
jg
enter
add
lds
mov
out
call
mov
iret
lahf
cmp
popf
jne
loop
xchg
mov
sahf
mov
inc
test
clc
jae
add
scas
xor
push
dec
fldln2
jae
inc
orb
cmp
and
push
mov
fildll
popf
cmc
popa
push
or
add
sti
ficomps
repz
sti
popf
incb
lret
jns
dec
xchg
adc
mov
and
scas
stos
xor
mov
cmp
xchg
mov
fcoms
insb
fisubs
lock
out
inc
aad
paddd
or
pushf
inc
add
lods
xchg
and
gs
mov
mov
test
jns
icebp
repnz
mov
or
fwait
inc
jo
or
jae
xor
mov
xchg
jecxz
push
call
ss
pop
adc
pop
add
cmp
push
pushf
xchg
push
mov
jno
adc
sbb
in
or
xchg
pushf
mov
lcall
das
aam
add
sbb
or
mov
jl
adc
imul
jg
imul
lock
sub
inc
loop
lods
sbb
testl
push
in
hlt
push
test
add
jae
dec
xchg
in
shrb
xor
test
mov
cmpsb
jle
pop
insb
aam
cmp
xchg
cwtl
xor
fucomp
test
or
daa
jno
out
out
addr16
sbb
mov
lds
outsl
dec
sub
cmp
fldcw
mov
and
mov
inc
shll
in
push
adc
push
xor
fisubl
jb
int
adcb
xchg
sub
and
js
pop
xor
mov
mov
inc
sub
xor
pop
jl
sub
popl
push
mov
fldl
cmp
lock
sub
lods
mov
cwtl
adc
jmp
xor
test
add
popf
setns
and
or
sbb
pop
mov
pop
lahf
icebp
out
add
test
flds
push
and
or
adc
lea
inc
jge
xchg
sahf
jle
jno
lock
push
lretw
ror
jmp
scas
loopne
jbe
scas
loopne,pt
jp
pushf
dec
movsl
inc
cmp
mov
call
leave
xor
insb
clc
mov
jmp
mov
mov
dec
outsb
jecxz
lods
mov
and
sub
test
iret
pop
cmpl
or
nop
push
repnz
insb
int
ds
mov
or
ss
cmpsl
pushf
xchg
sti
pushf
pop
cli
into
ds
cmp
lock
inc
ljmp
lds
lods
xor
mov
es
test
mov
jo
inc
rcrb
imul
inc
bound
pushf
out
fsubrl
xor
sub
xchg
mov
adc
shrb
cld
les
and
xchg
jg
bound
mov
add
pop
in
jp
lock
aam
jns
mov
cmp
dec
or
inc
sahf
cmp
mov
enter
and
xchg
ret
xchg
addb
pop
sbb
jg
pop
mov
mov
mov
xchg
aad
outsb
xchg
mov
frstor
test
mov
xchg
cwtl
pop
and
repnz
mov
xchg
push
push
push
fldcw
sbb
sbb
sbb
xchg
push
cwtl
daa
push
test
jnp
shrl
cmp
pop
and
jnp
loop
test
notl
jnp
cmp
imul
iret
cmpsb
cmc
push
xor
aas
xchg
lods
cmp
and
push
pop
cwtl
or
fisttps
pop
jno
imul
test
adc
outsb
pop
mov
lcall
aas
xchg
jmp
mov
xchg
je
repz
xor
push
add
dec
push
shlb
test
push
lcall
mov
jp
mov
xor
call
cli
add
mov
cmp
inc
in
add
mov
int
mov
imulb
imulb
mov
fisttpl
scas
leave
jb
jp
sbb
out
xchg
adc
out
int
popf
sub
and
in
inc
adc
xor
and
ja
push
jle
adc
fcomps
repnz
xchg
push
int3
or
mov
jp
in
test
jno
orb
xchg
shll
mov
xchg
add
pop
sbb
sub
push
add
int
dec
cs
lcall
lret
dec
fstpt
pop
inc
je
lock
pop
add
mov
mov
and
popa
sub
jl
cmp
push
pop
xor
xchg
push
inc
movsb
insl
pop
test
divl
mov
mov
test
mov
xor
sbb
xchg
js
cmpsb
xchg
jo
pop
push
mov
inc
lods
pushf
lahf
pop
addr16
cs
hlt
stos
sbb
in
mov
and
std
or
iret
fsubrl
out
mov
out
or
lds
xchg
mov
test
pop
cmp
or
insl
leave
pop
nop
xchg
lds
lock
call
arpl
xor
out
ret
sahf
mov
mov
dec
shl
outsw
daa
callw
cmp
divl
cmp
movsb
lahf
iret
dec
mov
xor
dec
mov
sub
cld
push
cmp
adc
arpl
jg
push
lahf
xchg
mov
sub
jnp
adc
jl
mov
and
mov
mov
jns
inc
imul
imul
notb
flds
sbbl
imul
fisubrl
mov
lret
aas
or
mov
pop
xchg
xlat
sbb
adc
nop
cmpsl
iret
ja
lahf
mov
jne
enter
push
ficoms
inc
sti
sbb
mov
jle
xchg
daa
iret
imul
push
in
fdivrs
pop
rcl
andb
mov
ja
adc
inc
push
cmc
pushf
out
das
scas
xor
and
pop
stc
in
or
inc
cmp
cld
or
mov
sbb
popl
xor
mov
xor
xor
lret
pushf
daa
fwait
xchg
push
and
in
push
add
dec
xor
ja
repz
mov
es
dec
into
add
lds
xchg
mov
inc
sub
shrl
xchg
inc
mov
pop
stos
hlt
adc
int3
mov
fnstenv
push
dec
andl
lret
push
fcmovnb
sbb
and
dec
inc
stos
aas
fdivrs
out
jno
out
jo
call
pop
outsb
rcrl
mov
jg
in
adc
sbb
je
arpl
sbbb
movsl
push
jo
lods
cmp
int
scas
lcall
icebp
mov
xor
popa
dec
sbb
inc
or
sub
int
xcrypt-ctr
cmpsl
fildll
inc
andl
outsl
cmp
nop
call
xchg
push
sbb
push
insl
je
divb
jg
in
lret
iret
push
mov
sbb
xor
lods
xchg
adcb
or
std
and
fists
outsl
add
btc
inc
ficoms
mov
push
sbb
or
jg
dec
pop
inc
loopne
sub
dec
pushf
xchg
and
pop
fs
mov
out
adc
aam
cli
sti
das
pop
fs
jbe
ret
xchg
outsl
les
push
out
inc
mov
jmp
lcall
aaa
and
inc
movsl
lcall
sub
xchg
rcrl
mov
xor
repz
xchg
sub
daa
imul
ret
fwait
cmp
push
loopne
ds
cld
into
popa
clc
jg
lret
add
adc
and
shr
mov
xor
adc
xor
jnp
mov
mov
mov
cltd
jae
sub
lret
push
popa
add
mov
mov
mov
sub
out
xchg
cmp
aas
cmp
fstp
repnz
mov
and
imul
sbb
lea
and
repz
sub
sub
mov
aas
jle
mov
inc
pushf
in
stos
das
popf
mov
mov
andb
push
cmc
pop
aaa
les
sahf
dec
mov
and
adc
or
lret
call
cmp
int3
call
fimull
scas
dec
xchg
mov
je
outsl
mov
inc
adc
mov
xchg
add
frstor
inc
sbb
add
cmp
iret
js
pop
xor
or
fisttpl
add
mov
mov
movsb
xlat
push
bound
cmpsb
mov
aaa
pushf
ljmp
gs
sbb
daa
inc
lods
sub
pop
jbe
leave
repnz
inc
or
pusha
test
dec
popf
jb
push
lret
pop
jo
sarb
daa
jecxz
cmp
and
hlt
push
xchg
adc
insb
sbb
test
xchg
dec
jbe
push
adc
adc
repnz
adc
xchg
negb
or
outsl
iret
pushl
fcmovnu
rcll
push
lahf
sbb
mov
mov
inc
pop
divb
sub
and
add
jmp
jbe
inc
mov
cmp
mov
mov
and
ss
add
movq
add
setl
std
movsb
lock
pushaw
je
test
mov
shrl
scas
pop
push
std
xor
add
xchg
lret
mov
rorb
dec
imul
jbe
cmpsl
aad
sbb
loop
daa
in
adc
stos
das
jp
jmp
jmp
push
loop
dec
jle
jno
data16
cmp
or
mov
adc
idivl
cs
push
dec
into
pop
cmp
fstpt
inc
and
jns
jl
sub
aas
sbb
aad
mov
jnp
leave
lcall
clc
xlat
mov
mov
mov
xlat
roll
cmpsl
pop
xor
xor
inc
sbb
inc
inc
mov
loop
insb
out
or
jg
sub
sub
out
and
add
jecxz
ja
dec
jge
enter
push
fmull
sbb
mov
in
xlat
aas
push
cmpsl
xor
pop
dec
cmpsl
and
jno
push
dec
push
mov
inc
imul
xchg
or
out
mov
ja
sbb
cmpsl
sbb
dec
in
mov
imul
push
insb
out
xorb
cmp
lock
mov
push
mov
mov
sarl
lods
push
pop
pop
fadds
and
mov
imul
cmpsl
nop
cs
pop
dec
loop
sbb
fdivrs
inc
nop
push
push
xchg
xchg
decb
sarb
push
dec
pop
mov
call
fldenv
cmpb
ret
add
xor
jmp
lods
scas
mov
in
call
ds
loop
mov
xchg
lret
out
fisubrs
xor
adc
movsl
add
jns
inc
jg
push
cs
mov
sahf
add
cmc
xlat
arpl
adc
les
push
xchg
pop
jno
sbb
sub
push
pushf
pop
sbb
test
imul
out
dec
shlb
push
lret
cwtl
aaa
dec
loop
lcall
and
fsts
stc
das
rorl
ljmp
mov
mov
pop
cmp
es
movsb
adc
or
cld
jno
xchg
test
bound
or
push
mov
sbb
das
dec
scas
out
or
push
pop
jle
scas
dec
sub
adc
lds
fsubrl
repz
dec
bswap
and
inc
adc
orb
rcl
jle
jno
and
pusha
pop
aam
xor
aam
pop
dec
push
jae
movsb
xchg
sbb
loopne
inc
lahf
aas
and
in
cmpsl
ret
mov
jp
repz
call
jns
icebp
stos
push
jge
and
movsl
div
mov
jp
cmp
in
popf
jns
mov
cltd
xor
dec
enter
pop
enter
cmpxchg
incb
mov
rcrl
pop
ss
adc
inc
pop
add
sub
mov
and
push
and
mov
jecxz
call
mov
mov
gs
gs
aam
xor
pop
aas
fldenv
stos
fisubl
rol
xchg
call
pushf
cmpsb
mov
repz
mov
pop
in
rcrb
jp
jge
rorl
cmp
mov
loopne
arpl
ss
adc
inc
aam
jnp
roll
cli
call
mov
popf
push
test
adc
pop
pop
jnp
jae
repnz
fisttpll
sahf
lods
mov
sbb
add
dec
pop
lock
hlt
push
cmp
lret
jle
xor
mov
cmovl
mov
fisttps
lret
lret
repz
cli
jne
pop
sub
hlt
ret
jge
call
fld
push
push
push
je
adc
rcrl
jno
mov
pop
mov
dec
mov
andb
mov
and
jmp
adcl
orl
or
fstps
cmp
hlt
and
add
push
jp
sbb
clc
jmp
sbb
test
and
adc
jmp
dec
mov
lock
aad
adc
dec
cli
xchg
into
push
rcr
push
pusha
lods
mov
xchg
je
call
rolb
arpl
adc
pop
fsubrl
divps
stc
mov
push
arpl
lcall
cwtl
jmp
jb
mov
test
or
lret
arpl
or
enter
xchg
dec
mov
lcall
jmp
fisttpl
or
mov
jns
sub
add
sbb
xchg
enter
push
mov
jg
sub
outsb
cmp
cmp
rcrl
xchg
adc
orb
shll
and
mov
fwait
cwtl
dec
insb
cld
in
in
idivl
and
inc
or
icebp
cltd
subl
xor
and
mov
ja
pop
fisttps
add
jo
sub
adc
xchg
pop
mov
cmpsb
xchg
jno
pop
das
int3
xchg
mov
mov
pop
loop
jne
pushf
aaa
fwait
test
or
sbb
add
push
inc
pop
movsl
arpl
pop
rcrb
shrb
cltd
negb
ret
xor
cmp
ret
jno
cmc
mov
pop
inc
out
lea
xlat
addr16
mov
cmp
jmp
add
loop
pop
mov
ds
adc
xchg
mov
je
fpatan
mov
filds
stos
push
lret
arpl
fistps
dec
lea
fistpll
insl
dec
add
js
mov
and
lahf
pop
mov
ja
lahf
dec
sub
movsl
adc
adc
jne
dec
mov
rorl
insb
jge
mov
jmp
lret
xchg
int
push
xor
outsb
pop
dec
xchg
or
jecxz
dec
stc
push
push
lret
jmp
ljmp
mov
push
outsl
test
stc
push
call
xlat
out
dec
push
gs
sti
js
jns
into
test
add
outsb
push
loope
sub
test
cltd
or
addl
mov
cmpsb
test
mulb
sahf
xchg
push
xchg
fdivl
dec
rcr
cltd
sbb
sub
push
inc
push
outsb
movsb
rcll
repnz
insl
repz
jle
xor
test
dec
jnp
jae
movl
adc
xlat
mov
push
push
sti
xlat
cmpsb
sub
sti
int3
xor
mov
push
fstpl
xor
mov
xchg
xchg
in
movsl
cmp
add
cmpsb
push
mov
xor
jo
into
jecxz
into
hlt
xor
jns
fcomps
xchg
cmpsl
cmp
adc
cmp
in
das
inc
lret
or
sbbl
mov
add
pop
mov
jp
push
sub
push
arpl
mov
push
aam
sub
inc
xchg
cwtl
cmp
sbb
sub
pop
sub
jne
pushw
pop
xlat
jecxz
out
aaa
inc
jp
movsb
mov
adc
xor
sub
sbb
lret
push
push
mov
cmp
jp
push
subl
sti
in
mov
call
out
sbb
aaa
arpl
inc
mov
rcrl
push
bound
sahf
xorb
mov
bnd
imul
push
push
in
stos
push
adc
dec
or
jno
roll
jl
mov
loope
bound
xchg
cmpl
mov
xlat
xchg
mov
xor
mov
inc
cwtl
loop
push
jnp,pt
ror
cmp
sbb
xchg
pop
sbb
popa
enter
cwtl
testl
arpl
pop
scas
mov
xchg
push
xchg
jo
add
es
dec
sub
ret
inc
and
push
or
aas
enter
cltd
xchg
shlb
lea
adc
clc
and
or
xor
push
fidivrl
cmpsb
mov
pop
dec
mov
movsb
pop
sub
sub
shlb
or
bound
push
xor
push
fcomps
dec
pandn
test
js
movsb
inc
fldcw
add
cltd
clc
inc
dec
test
xchg
sahf
and
pop
filds
xor
push
fadd
mov
push
ret
stos
inc
insb
test
xchg
jmp
push
jne
fldcw
add
adc
fsubrs
imul
dec
clc
rcrb
imul
cmp
xlat
add
outsb
sbb
imull
scas
dec
mov
jnp
cmp
xor
inc
sub
out
fcmove
add
adc
jge
jl
outsb
ret
jge
in
js
or
test
pop
sarl
push
adc
inc
mov
shll
adc
fdivr
pop
enter
je
or
add
fwait
rclb
in
pop
add
js
in
aas
or
mov
xchg
js
jns
ret
inc
repnz
adc
cmp
lods
bound
adc
jnp
xor
cmp
push
add
nop
scas
pop
mov
adc
sub
test
pop
out
cmp
push
data16
sub
mov
int3
lea
jbe
mov
ja
jg
adc
sub
stos
adc
xor
rcrl
sti
dec
icebp
sub
jo,pt
and
ret
dec
cmc
pop
mov
in
test
decb
mov
pop
popf
inc
mov
jmp
loope
subb
lcall
mov
mov
gs
mov
pop
fstpl
mov
inc
cwtl
inc
in
pop
xchg
insb
shr
mov
pushf
loop
cmp
or
cld
push
inc
test
cmp
add
pushf
lods
mov
ret
cli
or
push
adc
sub
jmp
ret
push
pop
mov
mov
outsl
sub
pop
dec
out
jbe
mov
lahf
jmp
insl
out
int
arpl
scas
cmp
aaa
cmp
mov
shlb
lods
inc
jmp
test
test
insl
fimuls
testb
addr16
pop
outsb
pop
dec
xchg
cmp
jbe
aad
scas
push
mov
push
xchg
push
rcll
popf
rcll
or
push
and
sbb
cmp
xchg
xor
cs
jge
lds
inc
mov
dec
jne
repnz
imul
scas
mov
and
in
pusha
mov
aam
adcb
jnp
dec
sbb
pop
mov
iret
pavgw
test
notb
imul
stc
fdiv
popa
or
jb
out
in
xchg
mov
jns
pop
out
jl
ret
adc
add
add
fistps
jnp
dec
mov
cmp
cmp
int3
mov
or
into
movsl
mov
testb
lds
ret
push
iret
sub
jle
push
fists
jg
bound
adc
loop
imul
push
adc
outsl
insl
cli
insl
ret
pop
inc
push
cmp
lods
testl
mov
and
test
push
out
jg
out
mov
and
jno
jno
cmp
jae
out
cli
lea
jae
mov
in
mov
mov
jo
lods
out
and
loopne
cmp
notl
stos
cltd
lods
int3
sti
add
jb
sub
mov
icebp
and
popf
lock
in
stos
ss
push
rcll
outsb
into
mov
push
fs
stc
push
imul
ja
call
pop
rep
popf
repnz
jg
mov
and
pop
sub
icebp
scas
sti
push
and
outsl
rcr
xchg
lods
enter
pop
and
mov
sbb
pop
aaa
mov
scas
and
dec
cmp
xchg
test
xchg
sub
ficoml
inc
jl
push
xchg
jno
mov
pop
outsl
mov
cld
push
mov
push
lea
jae
faddl
aas
inc
sahf
inc
fmull
push
sbb
lea
xor
outsb
stos
loop
jmp
jo
dec
cmp
mov
and
mov
add
cmpsb
rol
push
or
push
andb
and
imul
mov
ret
lret
les
sbb
aad
bound
or
inc
jmp
sbb
jg
or
subl
pop
cmp
daa
xchg
jp
pop
inc
push
jo
rcll
imul
pop
test
fldl
mov
mov
cmpb
lcall
adc
mov
in
testl
fcoml
in
sub
fstl
shll
jl
ret
insl
cs
loop
sub
cmp
jmp
mov
jle
fsubrp
rcl
mov
dec
cli
roll
sub
dec
fwait
adc
mov
rcrl
and
clc
out
push
xor
pushf
out
ficomps
cmp
xchg
hlt
fs
jg
imul
pop
sub
int
rcrl
mov
push
inc
dec
sub
sub
adc
dec
js
dec
bnd
insb
into
jmp
cmp
mov
inc
inc
xor
push
add
sarl
lea
movsb
or
jne
nop
es
cmp
mov
and
add
push
push
mov
nop
int3
or
test
mov
das
or
ficoml
jo
rcl
sbb
cwtl
data16
sbb
out
xor
adc
sbb
cmp
push
repz
cltd
mov
mov
movsb
and
pushf
sub
jecxz
out
fldl
mov
movsb
scas
jl
or
inc
push
pop
hlt
fcoml
push
inc
xor
pop
loope
cmp
popf
ss
in
dec
mov
jp
cmp
jmp
dec
dec
mov
and
mov
adc
inc
add
xor
shlb
jnp
add
push
dec
jle
sub
mov
adc
notb
mov
cmp
jnp
insb
shl
ja
mov
icebp
push
xchg
adc
mov
push
adc
sahf
pusha
std
sbb
push
mov
xor
xor
dec
leave
cmp
fbld
sbb
jp
repz
inc
ja
cmp
add
jmp
mov
jl
in
cmp
push
dec
lret
lahf
push
fisubs
or
mov
lret
mov
test
or
add
test
aad
out
dec
jge
jp
lret
lock
in
push
ror
repnz
xor
in
shlb
mov
movl
andb
jp
mov
or
dec
cmp
daa
inc
xchg
lahf
xchg
cld
push
add
lahf
pop
mov
dec
or
sbb
mov
cmpsb
xchg
andb
scas
into
sti
fistps
in
xchg
pushf
xor
add
nop
mov
incb
mov
bound
out
adc
pop
mov
gs
aad
call
fdivrs
sbb
mov
mov
mov
setae
adc
pop
insl
add
jne
arpl
jbe
mov
mov
pop
sbb
inc
idiv
and
mov
push
inc
cmp
inc
xor
pandn
add
aad
stos
push
or
dec
and
daa
pop
jg
sbb
loopne
sub
xchg
and
int3
scas
mov
inc
inc
or
into
in
add
pop
push
mov
cld
pop
mov
xor
push
xchg
decb
jo
inc
in
out
push
mov
sub
repnz
and
and
sbb
test
outsb
fsubrl
add
cs
push
fsubs
loope
inc
sub
imul
mov
rorl
lods
add
inc
push
mov
push
outsb
or
xchg
out
inc
sub
xor
out
pop
or
adc
push
sub
jno
add
xor
lahf
push
mov
jl
and
sbb
outsl
mov
adc
mov
ds
mov
cmp
cmp
int
xchg
cmpl
and
pop
es
loop
fldenv
aas
mov
out
push
cmp
loope
repnz
ret
adc
push
test
pop
xchg
dec
jbe
push
lds
or
xchg
push
fldt
lods
out
jno
out
pop
lock
shll
xor
mov
or
lcall
fsubrs
roll
cmpsl
int
dec
test
pushf
pusha
outsl
jg
leave
xor
outsl
mov
lods
sbb
jg
ljmp
mov
enter
ljmp
aam
lret
sbb
sbb
fwait
cmp
jnp
dec
jb
lock
iret
out
les
loopne
mov
push
or
fcoms
xchg
aad
pop
push
mov
push
gs
cmpsl
sub
mov
xchg
cmc
dec
iret
adc
adc
aas
test
fcomps
inc
call
or
lahf
mov
push
adc
xlat
neg
mov
jb
pop
push
outsb
dec
sub
jo
adcl
inc
mov
dec
cmp
mov
dec
cmc
jbe
ret
dec
or
pushl
enter
in
mov
fstl
divl
pusha
push
sub
mov
jne
mov
out
mov
in
xchg
fcomps
test
push
pop
cld
mov
pop
push
cmp
mov
sbb
mov
cmpsl
push
push
or
push
ljmp
sbb
add
mov
jb
push
mov
mov
outsl
push
repz
mov
fs
pop
sub
enter
movsb
rcrb
cmp
xor
lfs
lods
add
mov
xlat
aam
pop
fwait
into
mov
enter
push
popa
xor
in
push
nop
sub
loopne
aas
add
pop
and
pop
mov
xorl
xchg
mov
mov
sub
mov
cli
test
rolb
lret
sbb
cmpsl
dec
outsb
jl
rorl
outsb
inc
xchg
mov
rorl
pop
inc
shll
mov
inc
mov
adc
js
out
or
jp
jg
push
lods
incl
pop
movsb
aaa
fs
orb
xchg
fsts
pop
shll
push
and
fnstcw
testb
std
cmp
mov
xorl
cmp
dec
mov
cmp
sub
pop
orl
call
inc
test
iret
or
xchg
jmp
in
iret
aaa
outsb
cmpl
inc
push
icebp
sarb
sub
xchg
fidivl
lods
insb
movsb
jl
inc
pop
iret
repz
xor
pop
addb
ds
or
jg
jno
or
push
mov
dec
inc
out
mov
call
fs
fnstcw
fildll
loopne
ret
push
mov
xchg
loopne
add
outsb
vunpcklps
xchg
int3
int
inc
clc
jno
leave
mov
bound
adcb
xor
lret
imul
mov
sti
mov
sbb
stos
cmp
mov
mov
jmp
push
xchg
xor
out
stc
cmp
cltd
mov
fwait
push
movsb
jno
xchg
cmc
arpl
jl
add
pop
iret
cwtl
pusha
imul
push
xor
lea
or
imul
inc
lcall
push
add
call
push
lods
mov
jns
je
mov
into
in
sub
jl
mov
mov
cmpsl
mov
add
push
inc
cmp
lds
cwtl
repnz
outsb
mov
jge
lret
fistps
ret
shlb
int3
scas
xor
cs
fdivr
call
cmpb
pop
movsl
shlb
cltd
mov
xor
inc
test
insl
xchg
inc
jb
pop
icebp
jge
lret
mov
pop
das
sbb
xor
pop
cmpsl
mov
stos
xor
int
cli
je
cmp
rorl
or
popa
cwtl
xchg
popa
dec
inc
jno
clc
push
mov
sti
pop
jnp
xchg
out
push
push
add
aam
retw
call
rsqrtps
loopne
sbb
es
aad
stos
rcll
xor
repz
add
lds
cmp
pop
loope
in
outsb
test
lret
add
push
jo
jno
xchg
je
out
nop
aad
jp
cmp
dec
sbb
lods
call
cld
pop
addr16
and
fbld
test
mov
ds
cmpsb
push
stos
pop
jne
mov
xchg
loop
sbb
into
icebp
arpl
cwtl
lahf
fwait
jae
inc
pop
adc
dec
out
pusha
and
sbb
adcl
ror
mov
andl
push
jns
xchg
sub
add
pop
incb
fs
xchg
cld
das
test
xchg
add
adc
es
popa
shlb
sbb
fs
jns
out
fs
cmp
xchg
or
movsb
add
ds
loop
jno
mov
jle
inc
mov
cmp
xor
sub
fsubs
dec
mov
sub
push
jns
dec
inc
pusha
imul
jae
sub
outsb
jnp
rolb
inc
push
jne
int3
push
push
mov
insl
subl
add
movsl
scas
jo
mov
fdivl
jae
cld
mulb
cmp
add
mov
aaa
inc
adc
lock
mov
adc
push
sbb
xor
push
and
mulb
in
inc
enter
lret
in
nop
xor
mov
pop
mov
cmp
mov
addr16
and
pop
jl
testl
and
loope
and
or
xchg
adc
jg
inc
sti
fdivrp
cltd
fimull
fwait
dec
push
int3
jp
cmp
iret
jns
mov
sahf
jecxz
clc
push
dec
repnz
mov
lcall
in
add
sbb
call
test
cmp
jecxz
inc
dec
out
test
add
xor
sbb
mull
aas
pop
dec
xchg
fstps
jae
and
stos
repz
int3
int3
fsubrp
popf
jno
lret
sub
xchg
jmp
cli
dec
pop
cmc
bound
mov
loope
pusha
sub
insl
out
popa
rcll
lock
fimull
adcl
pop
mov
bound
jp
adc
gs
lcall
rcr
adcb
jnp
fstps
cmp
dec
xchg
cld
insb
mov
lcall
fldcw
inc
sub
hlt
jbe
pop
cmpsb
jnp
xchg
xchg
pop
xor
sbb
in
fcmovbe
mov
sbb
clc
or
bnd
or
out
or
test
pop
or
loop
bound
lods
pop
push
fidivs
out
scas
mov
adc
data16
pop
sbb
xchg
aam
xor
pop
jo
js
nop
in
in
std
jl
or
pusha
mov
push
push
aam
es
loope
or
adc
movsb
insl
lahf
shr
jle
imul
add
mov
shll
jbe
mov
out
inc
dec
icebp
test
jl
mov
arpl
xor
dec
sbb
lret
icebp
dec
rclb
xor
cmc
mov
flds
je
into
xchg
or
rclb
popf
push
js
aad
sbb
and
adc
xchg
xorl
notl
cmpsb
ja
dec
sbb
ljmp
mov
lret
sub
clc
cmp
idivb
and
dec
in
adc
cmp
ret
xchg
adc
xchg
mov
sub
push
mov
ss
sub
pop
mov
insl
and
pop
jecxz
xlat
add
test
in
mov
filds
lock
addr16
data16
inc
mov
cmc
mov
jns
icebp
clc
loope
cmc
pop
push
lret
push
dec
cwtl
in
inc
data16
divl
push
stos
mov
icebp
popl
sbb
jg
imul
aaa
xlat
mov
sub
pop
clc
ss
dec
mov
mov
inc
adc
push
hlt
sbb
inc
push
ffreep
cli
sbb
pop
jecxz
popa
adc
or
push
jge
adc
inc
sarb
cmp
adc
cmp
xchg
mov
and
inc
das
mov
sar
dec
cmpb
orb
pop
shl
stos
xchg
pop
inc
jns
iret
xchg
mov
lock
mov
cwtl
sub
nop
xchg
sub
outsb
inc
mov
aaa
xor
adcb
rolb
and
shlb
jl
xchg
out
rorl
cltd
and
mov
mull
mov
insl
xchg
js
dec
pop
jg
mov
adc
add
sbb
mov
insl
dec
daa
add
fsubs
dec
lock
xor
sbb
in
push
or
lds
and
dec
cmpb
jg
mov
cmp
add
insb
pop
xor
lret
xchg
jb
sbb
or
fstpt
aad
pop
rcl
outsb
outsl
loopne
jp
enter
jns
ss
xorb
dec
sub
mov
pop
jle
enter
shrl
les
in
cmpsb
aad
mov
xchg
ret
mov
jne
inc
fsubl
fwait
sbb
mov
pop
sahf
xchg
ror
xchg
fimuls
cld
sub
add
jbe
cmp
insb
lea
sub
jne
mov
shlb
outsl
inc
roll
mov
or
dec
pop
inc
mov
adc
in
push
or
mov
sbb
xor
mov
lock
sub
and
jecxz
aam
dec
sbb
call
mov
or
xlat
aad
push
mov
lret
jp
aam
jmp
dec
xchg
out
stos
jno
mov
rcrl
adc
mov
scas
rolb
imul
inc
jne
inc
and
aam
iret
pop
testl
out
push
ja
pop
pop
jl
fistpl
sub
adc
in
pop
push
xor
outsb
jae
lcall
cmp
out
mov
mov
pop
outsb
sub
inc
aad
andb
mov
lea
jg
push
push
push
jo
dec
sub
cmp
and
decl
daa
sub
sahf
xor
ret
pop
pop
or
cmc
mov
out
jne
and
bound
jle
lds
add
scas
gs
xchg
and
cmc
movsl
xor
mov
imul
fsubl
shlb
mov
pop
dec
call
ficomps
add
push
cld
out
xchg
cmp
mov
jbe
stos
aas
and
push
push
mov
cmp
cmp
mov
push
mov
or
mov
lock
push
and
cmp
jb
jo
or
popa
insl
dec
lcall
cmpsb
loop
push
mov
lret
sbb
jb
in
jno
sbb
ljmp
mov
dec
movaps
pop
pop
test
in
mov
sub
cld
sub
dec
popa
sbb
add
iret
test
jae
jae
pop
xor
push
mov
repnz
xchg
push
xchg
out
jge
mov
xor
pushf
xchg
test
and
out
xchg
insl
ret
aaa
xchg
repz
pop
sbb
in
aaa
cwtl
notb
das
sbbb
cmpl
mov
test
cmp
xchg
ja
icebp
out
dec
cmp
mov
sti
decl
add
repnz
data16
test
repnz
repz
fisttpl
mov
mov
xor
cmp
mov
pop
fs
iret
jnp
push
data16
sub
or
mov
cmp
xchg
jp
clc
mov
std
aad
add
aad
push
xchg
and
sbb
outsl
or
ret
fcmovnu
lock
xor
decl
mov
rol
mov
sub
icebp
xchg
jmp
in
and
mov
jo
sahf
inc
les
dec
loope
jnp
jae
cmp
call
jmp
cs
sti
sbb
mov
subb
sbb
and
scas
xchg
cwtl
inc
icebp
jmp
data16
loopne
out
cmp
imul
sbb
push
loop
fistl
aad
es
xchg
push
jecxz
sar
fcmovnu
xchg
pop
mov
cmpl
mov
rcl
and
nop
push
mov
adc
sub
icebp
fwait
cmp
push
or
mov
sbb
cli
leave
lods
insl
mov
jns
icebp
out
in
int3
adc
aas
xchg
dec
and
cmp
cmpsb
mov
stos
or
add
sbb
cmpsb
add
adc
mov
in
fidivs
xor
mov
mov
cmp
mov
scas
scas
dec
repz
inc
mov
stc
jle
jnp
cmpl
flds
fstpt
je
xor
sti
out
movsb
test
aas
mov
add
jl
cltd
andb
stos
mov
mov
call
ds
dec
movsb
notl
shlb
je
mov
cmp
enter
inc
sti
xchg
fists
xchg
iret
mov
cltd
push
sub
mov
cs
loop
inc
mov
sub
xchg
aam
xchg
test
cmp
int3
mov
xor
push
in
fidivrs
test
sub
dec
sahf
fisubl
lock
xor
testb
jae
aaa
stc
or
xor
outsb
jp
aam
pop
cli
push
dec
rcl
jns
stos
loope
sbb
add
inc
or
push
stos
sti
cmp
in
orb
popa
lock
pop
xchg
cmp
cltd
ret
adc
mov
out
aas
rcpps
aam
add
pop
xchg
stc
adc
push
pushf
xchg
and
aad
in
lea
mov
mov
xor
enter
and
dec
mov
pop
jns
push
movsl
icebp
push
inc
adc
sbb
adc
cld
mov
push
mov
scas
inc
xchg
icebp
dec
stos
push
xor
mov
faddl
sub
gs
sub
adc
ret
test
cmpsb
cwtl
xlat
shll
sbb
cwtl
aam
data16
adc
xchg
dec
das
pop
jbe
cwtl
and
jb
pop
hlt
or
jge
int3
lret
xlat
lock
mov
xor
mov
fcmove
push
rclb
dec
jo
test
mov
arpl
mov
sar
jnp
pusha
stos
dec
rcr
add
push
not
popf
in
xor
lods
cmp
or
les
add
mov
dec
dec
dec
sbb
popf
pop
and
aas
sbb
push
out
mov
sub
push
and
lret
jmp
dec
xlat
pop
int
pop
fnsave
cwtl
cmpsl
aad
cli
sub
fwait
add
sub
inc
je
adc
mov
scas
sub
bound
sarl
outsb
ror
nop
cmovne
push
movsb
in
mov
test
ljmp
cmpsb
xor
push
jecxz
add
lea
shr
mov
loope
cmp
inc
scas
xchg
and
add
lahf
loop
aam
mov
adc
jle,pt
adc
mov
sarl
or
xchg
sbb
mov
cmp
mov
lahf
xor
push
in
icebp
mov
push
push
nop
in
jle
push
or
dec
loop
outsb
das
jae
iret
imul
sub
out
insl
orl
into
cmpsl
pop
insl
inc
daa
std
mov
enter
sbb
adc
adc
or
stc
mov
jg
xor
test
xchg
das
fsubl
nop
pop
insl
ds
call
or
sbb
aad
cltd
jne
push
fnstsw
mov
xchg
aas
jb
shll
xor
jl
insl
repnz
sub
sbb
mov
lods
cmp
outsb
bswap
lret
xchg
jb
fsts
or
jbe
dec
adc
mov
cmp
adc
std
in
bound
test
inc
aas
sarl
mov
inc
xchg
jne
inc
divl
div
mov
fwait
jae
mov
inc
test
inc
cmp
fwait
ret
xor
lea
ret
sbb
jmp
adc
jno
addr16
jnp
and
add
cld
outsb
pop
icebp
mov
inc
mov
sub
mov
stos
mov
push
xchg
mov
lcall
gs
in
mov
sti
sbb
rolb
jle
arpl
call
inc
xor
xchg
jns
xor
rolb
sbb
jge
jp
sbb
aas
xor
jnp
or
loopne
in
testb
mov
adc
loop
jmp
sbb
roll
fcoms
leave
aas
mov
mov
lods
mov
mov
aad
int3
inc
mov
clc
hlt
mov
mov
negb
mov
add
inc
xor
mov
call
lods
adcb
fisubl
sub
mov
in
jb
rcrl
cmpsb
pop
mov
jnp
shll
out
mov
sbb
ds
push
andb
adc
aas
das
stos
xor
and
adc
sub
xchg
scas
mov
or
inc
cmp
mov
lahf
mov
mov
sbb
test
jb
lcall
mov
adc
bound
add
mov
mov
cmpsb
push
or
mov
cmp
in
sahf
xor
mov
shlb
pushf
les
dec
mov
xchg
dec
sbb
insb
popf
mov
sbb
dec
mov
add
or
xrelease
scas
pusha
jns
inc
push
mov
xchg
push
and
jle
insl
xchg
jge
je
outsb
loope
pop
pusha
repnz
sarl
pop
in
dec
sahf
cmp
mov
or
mov
pop
mov
push
add
push
cmc
cmp
bound
inc
jnp
in
jae
mov
jno
ds
scas
shrl
add
xchg
cmp
imull
and
js
pushf
xchg
testb
std
in
sbbb
lret
rorb
adc
and
push
roll
mov
addl
sub
add
add
jae
cmp
das
int
jno
daa
push
add
push
aaa
jno
push
adc
pop
movsb
adc
sub
fisubrs
arpl
ficomps
fdivp
mov
and
into
pop
imul
stc
mov
shrb
lahf
cs
pop
es
add
cmp
lods
xchg
lock
or
mov
sub
loope
inc
lods
sbb
shlb
pop
fwait
aam
dec
stos
sub
sbb
aas
arpl
adc
bound
call
xchg
push
stos
xchg
enter
mov
mov
stos
mov
inc
ds
jnp
jo
ja
dec
arpl
cmpsb
js
push
pop
mov
mov
add
loope
add
scas
mov
adc
sub
loop
mov
xor
sarl
push
lahf
push
xchg
in
push
fldl
ret
jge
das
xorb
inc
jb
push
inc
mov
jecxz
sbb
fstp
lret
sbb
mov
test
push
fildll
xchg
bound
xchg
call
mov
test
mov
repnz
pop
xor
les
push
mov
and
je
pushl
add
decb
sbb
jecxz
addr16
adc
push
xchg
lds
inc
mov
pop
pop
adcb
push
pmaxsw
call
mov
inc
or
jge
mov
test
pop
mov
cmp
mov
fbld
ss
mov
ret
push
out
inc
das
mov
hlt
stc
mov
dec
or
cmp
or
fsubs
cmp
sbb
fwait
test
iret
add
rcll
push
fnstcw
dec
mov
push
xor
push
in
add
mov
stc
popf
jae
aam
cmp
mov
mov
mov
xor
pop
and
add
xor
and
fisttpll
jmp
divb
inc
mov
jmp
mov
cmp
shlb
jns
pushf
jmp
pop
data16
enter
pop
stos
jnp
int
mov
or
subb
sub
sbb
outsl
sahf
push
popf
push
sub
xor
insl
gs
out
fisttpll
je
mov
in
mov
jp
fldcw
imul
lahf
sahf
repz
lods
roll
cmpsb
jns
int
outsl
ds
ss
pop
fisubl
jle
and
jno
pop
dec
mov
ret
gs
test
sbb
adc
popa
test
imul
sar
jp
pusha
aam
push
hlt
les
clc
xchg
xor
inc
push
insl
push
repz
lock
cmp
cli
mov
cmp
sub
sub
mov
xor
jmp
or
icebp
js
cmp
pop
adc
xor
mov
fwait
sbb
cmpsl
std
popf
rcrl
imul
add
xor
dec
int3
jnp
fwait
rorl
push
aad
fimull
sbb
dec
xchg
outsb
xor
iret
lret
jl
test
fimuls
xchg
test
fistpll
jne
jge
loopne
test
fimull
xchg
xchg
rorl
sub
aas
xor
in
pop
inc
pop
es
lahf
lahf
addb
test
std
loopne
icebp
or
lret
sti
dec
repz
mov
test
or
mov
bnd
ret
pop
mov
outsl
cmp
pop
test
push
andb
mov
dec
cmp
sub
sub
sub
mov
test
push
ret
push
imul
shlb
sub
mov
push
testb
cs
cmc
or
out
fs
mov
ja
mov
xor
insl
sbb
xorb
jae
loop
fbstp
into
test
push
iret
sarl
mov
pop
push
and
cld
stos
push
xchg
dec
bound
popf
dec
loopne
xchg
fs
into
mov
xor
neg
loope
add
xor
hlt
or
xor
ficomps
hlt
fdivs
dec
popf
pop
ja
push
mov
test
mov
xchg
aaa
jo
pushl
repz
add
mov
out
pop
push
or
xchg
inc
mov
lahf
xorb
add
xchg
bound
mov
jecxz
lock
mov
cmp
adc
sbb
and
enter
sub
in
cmp
lods
hlt
jns
out
hlt
pop
or
pop
mov
mov
popa
pop
cld
lret
jnp
mov
xorb
mov
sub
jecxz
push
adc
div
negl
mov
mov
pop
pushf
dec
nop
outsl
jae
mov
insl
xchg
lea
dec
int3
pop
cmp
mov
mov
int
jbe
sbb
orl
sub
std
icebp
subl
jnp
mov
outsb
idiv
popf
jae
pop
mov
push
jl
jno
inc
or
fisttps
pop
dec
mov
jbe
pop
mov
sbb
lock
jge
cwtl
sbb
adc
dec
stos
mov
out
ss
add
les
mov
pop
loope
xor
out
out
add
sbbb
jns
adc
adc
mov
rorl
or
pop
mov
addr16
jmp
aas
adc
dec
cmp
sub
shll
dec
mov
mov
dec
or
jne
lods
push
pop
shll
push
or
lret
mov
and
dec
bound
inc
xchg
orb
rcll
sbb
out
mov
data16
addr16
add
push
add
mov
push
outsl
sub
int
push
cmp
mov
cli
adc
outsb
cld
fsubrp
dec
sbb
push
jns
test
or
mov
sub
and
out
inc
sbb
clc
inc
push
or
xlat
loopne
add
and
xor
dec
js
fcoms
xor
push
data16
add
popf
mov
and
fnstsw
lock
fcmovbe
enter
jae
rcrb
cmc
mov
sub
mov
insl
test
push
inc
negb
xlat
ja
jne
inc
insb
shrb
mov
fs
xor
dec
jle
bound
ss
test
mov
mov
mov
push
int3
jbe
mov
fistpl
in
ret
xor
add
sbb
ss
pop
mov
sub
xchg
dec
or
ficoml
push
rclb
movsb
sbb
add
cs
data16
leave
jmp
jp
mov
inc
imul
push
push
pop
lock
faddl
data16
jne
cmp
xor
pop
jno
mov
out
and
leave
xchg
fsubl
pop
frstor
dec
movsb
clc
push
test
push
push
adc
adc
mov
sbb
cwtl
daa
adc
aam
sbb
push
decb
loop
adc
xorl
dec
adc
xor
addb
pop
sub
stos
pop
fstpt
push
cmp
enter
inc
in
mov
or
lret
push
push
mov
inc
in
xchg
lock
xchg
stos
lcall
xchg
mov
xor
mov
iret
mov
scas
mov
sbb
into
xlat
aad
shl
mov
enter
bound
pop
std
sub
or
jmp
aam
ficomps
mov
cmp
sub
cmpl
ss
and
pop
int
xor
mov
sti
mov
movsb
jae
arpl
pop
dec
test
stc
sub
mov
hlt
or
in
int3
sbb
add
dec
sub
cmc
xchg
aad
repz
fisttps
mov
aas
and
sub
out
sbb
pop
pop
fimuls
stos
add
lahf
fimull
sbb
and
cmp
jno
lahf
inc
mov
add
push
aam
orl
jp
adc
call
out
mov
mov
test
addr16
in
dec
xor
and
lret
or
xor
adc
loopne
fcomip
fisubrl
inc
sub
lods
mull
mov
lret
mov
add
in
js
pushf
adc
inc
inc
lods
fcmovnu
fs
cmp
lods
rcrb
hlt
xor
jle
int
jns
pusha
xor
popa
cmp
push
mov
jg
int
lret
pop
test
xor
jns
xchg
and
mov
push
test
xchg
dec
sarb
enterw
orb
and
test
adc
mov
jp
xor
jmp
ljmp
ja
jl
sbb
adc
fxch
test
and
out
repnz
mov
mov
inc
outsb
in
mov
mov
negl
not
or
lcall
add
nop
push
adc
xor
loope
adc
orb
cmp
pusha
jl
xchg
or
ja
daa
mov
inc
sbb
roll
addb
call
and
rolb
pop
arpl
dec
cmp
jnp
xchg
call
repz
test
rep
pop
or
jno
imul
cwtl
hlt
mov
test
les
mov
sub
xchg
test
pop
lcall
stos
jg
push
div
enter
jae
push
sbb
fwait
push
aas
clc
sti
dec
pop
pushf
mov
fcoml
xor
xlat
jg
insb
adcb
dec
pop
aam
aad
xor
mov
aaa
mov
push
das
add
jnp
js
into
outsl
je
aad
push
fadds
sbb
cs
jle
jb
add
leave
das
popa
ss
fs
fcmove
sbb
xorl
in
enter
arpl
mov
mov
fildl
stos
lods
sahf
cltd
jbe
mov
hlt
and
push
pop
jmp
adc
sahf
stc
pusha
dec
adc
gs
and
subl
sbb
jns
add
or
xchg
enter
sbb
jle
push
nop
dec
xchg
mov
push
jl
pop
jmp
mov
mov
pop
pop
fnstcw
fstpt
xchg
fsubr
je
repz
inc
repnz
divl
push
lcall
dec
test
ficoml
pop
aam
mov
xchg
cmp
pop
cmpl
pushf
int3
gs
outsb
test
pusha
push
loopne
std
cmpsb
lret
or
scas
das
movsl
lcall
pop
dec
jp
loope
int
pop
test
sbb
or
imul
pop
inc
adc
sub
aam
cmc
jge
jbe
stos
cs
pop
clc
repz
add
ljmp
dec
std
push
popf
test
ss
lea
pop
add
les
and
fadd
mov
cmp
pop
jns
daa
mov
inc
lods
ja
les
push
cmp
cld
push
sub
pusha
mov
lock
ja
iret
mov
xor
jns
shlb
and
jbe
inc
pop
inc
mov
push
aam
cmc
nop
icebp
lods
and
dec
jb
in
pop
imul
jecxz
mov
ret
mov
out
sbb
adc
cs
das
loope
xor
cmp
ret
pop
mov
stos
lods
les
mov
test
jp
ljmp
and
out
jmp
mov
aad
push
and
mov
mov
xchg
xor
add
adc
mov
inc
movsl
cwtl
jl
sub
inc
and
and
popa
hlt
scas
in
int3
sbb
clc
jbe
push
push
rcl
test
sbb
xor
es
loop
lcall
jl
sub
int3
fnstsw
cmpsb
xor
xchg
cmpsl
mov
sar
std
and
dec
sbb
ret
jae
mov
cmc
pop
leave
daa
inc
add
fistpl
cld
repz
add
fldt
into
push
push
push
or
iret
jg
cmp
inc
mov
xor
test
mov
das
cwtl
lret
lret
cmpsb
sub
addl
pop
xor
xchg
add
cld
sub
pop
cld
cmp
arpl
and
rclb
out
fwait
insl
insl
cmp
and
stos
xchg
loopne
into
add
ror
push
nop
setl
jb
push
sbb
adc
or
cli
movb
cmc
cld
mov
lea
movsb
pop
sahf
mov
mov
xor
pop
ja
insb
mov
je
lahf
aas
pop
cmpsb
sub
in
ss
sbbb
fcoms
rorb
sub
inc
into
mov
fistpll
push
ds
bound
fisttps
mov
push
fiadds
pop
mov
jo
dec
mov
fadds
mov
test
subb
inc
arpl
popf
pop
negl
push
lret
push
orl
mov
mov
or
ja
xchg
mov
cs
mov
pop
cld
inc
js
adc
sahf
test
cltd
rol
inc
or
movsb
bound
and
or
stos
adc
movsl
sbb
insl
cwtl
mov
xchg
or
jl
jge
pop
cmp
jle
jp
cld
push
aas
mov
and
jne
mov
gs
sub
call
sub
xor
inc
test
outsb
addl
aas
hlt
les
add
pop
mov
seto
or
jecxz
test
std
popl
cltd
mov
mov
sbb
adcb
adc
xchg
jmp
cmpsb
dec
pop
pop
cwtl
add
push
inc
cmpsl
ja
or
pushf
dec
sbb
jl
mov
pop
rcr
pop
lret
push
lea
mov
into
aam
imul
jl
pop
push
mov
bound
add
xchg
jae
adc
sub
pop
push
mov
in
jp
sub
add
es
dec
push
jge
pop
fistps
cmpsb
and
ss
rcll
xlat
insb
mov
inc
jo
cmp
inc
shll
xor
mov
repz
or
add
or
mov
test
aaa
and
out
mov
movsl
orb
in
leave
sbb
xor
fldl
fwait
insb
xor
mov
mov
out
lock
gs
pop
xchg
pusha
in
idivb
push
mov
aam
xchg
mov
push
sbb
or
dec
mov
adc
pop
testl
sub
cmp
dec
movb
fcmovnu
inc
sti
adc
push
aad
out
and
pusha
rol
jb
sti
xor
add
add
cltd
js
out
fisubl
outsl
jmp
aas
inc
cmpsl
and
fwait
dec
lea
cmpb
inc
push
push
jnp
fs
or
imul
loop
inc
push
inc
repnz
sbb
and
faddl
adc
mov
mov
xchg
sub
pop
mov
inc
sahf
mov
push
fcmovu
sub
xor
mov
jbe
test
test
add
jecxz
inc
cmpsb
mov
dec
xor
fsts
int3
mov
add
ret
jecxz
cmpsb
mov
aad
and
les
ljmp
push
repz
mov
sub
mov
dec
notl
pop
out
adc
lds
movsl
in
jbe
xor
xchg
mov
aad
test
cltd
clc
pop
xor
lahf
xor
sbb
in
out
mov
mov
xchg
xchg
jg
out
sbb
xchg
jp
add
sub
loop
dec
packsswb
sbb
jge
cmc
xchg
cmpb
or
pop
jno
lock
arpl
push
cld
or
out
jl
dec
clc
xchg
mov
pop
pop
outsl
and
and
std
icebp
adc
pusha
lret
sub
enter
imul
repz
addb
sbb
aaa
scas
sbb
adc
dec
lret
ja
daa
into
cld
je
mov
clc
cltd
jb
mov
shrb
lods
push
cmp
mov
inc
mov
inc
out
icebp
jb
xor
jp
pop
pop
xchg
cmp
addr16
scas
xor
dec
sub
mov
cmp
jle
inc
iret
shl
xchg
lock
loopne
faddl
mov
lods
add
sub
mov
push
sub
adcb
nop
mov
xorl
leave
or
decb
jb
movb
inc
xchg
stc
out
push
add
nop
inc
cmpsl
insl
jbe
push
jnp
jnp
mov
dec
dec
xchg
mov
fs
or
stos
cli
pop
ret
test
mov
cmp
and
enter
jb
shl
shrb
fmul
add
xor
or
jl
inc
xorb
ret
jge
inc
enter
or
push
pop
adc
mov
popa
jne
add
jns
fcoms
and
push
adc
in
mov
jns
iret
call
fwait
jbe
ss
mov
push
cmc
xlat
in
int3
sub
jmp
pushf
stos
and
outsl
dec
rep
es
loope
insb
sbb
pop
add
dec
subl
jno
xchg
mov
mov
push
sbb
jmp
mov
adcl
test
std
push
adc
les
pop
jg
data16
or
mov
add
scas
and
jge
stos
push
add
mov
sbb
js
popf
xor
subl
pop
das
adc
adc
divb
pop
out
jmp
stos
scas
sub
psubb
ret
push
aam
cli
adc
loop
cmc
xorb
mov
sbb
jmp
test
and
pop
dec
jmp
dec
push
cs
pushf
push
jl
test
loopne
mov
in
or
mov
in
add
dec
mov
fmuls
jl
pusha
shrb
outsl
lds
lret
imul
nop
xchg
std
out
test
mov
fcmovu
lods
pop
push
in
sahf
sbb
jle
cs
xorl
jg
ja
adc
in
cmp
cmp
stos
ret
jnp
sub
add
mov
ds
test
popf
ret
test
test
lea
xlat
into
js
cmpl
jno
cld
jnp
add
dec
fiadds
loop
xchg
movb
imul
pushl
sbb
lock
roll
sub
scas
inc
jns
in
adc
xor
push
testl
xchg
adc
mov
fwait
cld
test
lods
cwtl
add
and
xchg
mov
and
cli
cmpsb
lods
dec
inc
mov
and
ror
or
sbb
scas
sbb
pop
in
inc
push
xchg
das
jb
xchg
pop
adc
lcall
into
jg
mov
je
push
outsb
push
ds
inc
add
push
rorl
test
movsb
js
xlat
inc
nop
int
mov
and
pop
mov
cld
fadds
mov
push
sahf
jp
enter
test
pop
push
push
mov
or
xor
out
mov
loop
dec
cmp
in
scas
jg
jae
inc
cmpsb
enter
and
sub
cmp
pop
adc
pop
loope
xor
xor
stc
dec
or
xlat
in
xchg
sub
lret
fstps
lret
mov
outsb
inc
sbb
fnstcw
loop
mov
xor
mov
and
mov
pop
insb
pop
add
stc
add
nop
roll
or
popf
flds
or
in
and
movsb
out
or
sub
add
mov
add
out
jo
jno
leave
in
jecxz
popa
push
mov
mov
xchg
xlat
je
in
jbe
xchg
mov
xchg
pushf
or
je
out
push
imull
and
cli
mov
lods
pop
mov
add
sahf
mov
and
cmp
push
fcmovnb
rcrl
cwtl
jne
insb
xor
or
mov
xchg
sub
cmc
push
int3
cmp
pop
mov
fwait
das
outsb
pop
insl
cmp
adc
es
cmp
mov
repz
pop
nop
js
pop
push
jg
cmpsl
popf
sbb
inc
push
pop
mov
jp
jo
cmp
mov
dec
into
add
les
dec
mov
or
xor
les
ds
imul
mov
mov
loop
push
imul
pushf
insb
testl
cmp
xchg
jp
scas
bswap
lock
call
inc
add
add
inc
dec
outsb
mov
add
and
in
adc
stos
cmp
pop
adc
mov
push
out
pop
mov
mov
mov
repnz
mov
das
jle
mov
clc
cmp
insl
adc
push
add
cltd
sbb
pop
std
add
mov
scas
push
hlt
in
sbb
cmpsb
jnp
mov
mov
enter
push
rorl
xchg
push
sbb
loopne
and
repz
loop
or
andb
insl
cli
xchg
cmp
pusha
push
aaa
add
xorl
inc
sub
bound
fdivs
pop
sub
cmp
iret
mov
shlb
cmc
jb
std
hlt
and
shll
inc
jg,pn
rcl
mov
add
subb
in
mov
test
cltd
mov
fsubrp
sub
xchg
imul
sub
or
fsubs
cmc
lods
je
push
test
pop
push
aam
mov
adc
daa
fsubl
or
mov
jle
outsb
out
dec
rorl
addl
mov
scas
popf
cmp
push
mov
inc
lods
ret
neg
lods
lcall
ljmp
int3
sub
ss
xchg
dec
cltd
xor
test
mov
aaa
lods
sub
fbld
sub
pop
pop
adc
mov
pop
and
pusha
int3
sbb
xor
xlat
idivb
lods
mov
lcall
jb
out
mov
pop
dec
mov
ret
and
add
inc
leave
bound
mov
imul
push
cld
ljmp
jbe
adc
and
pop
adc
sbb
js
shll
rcrb
mov
cmc
test
cmp
lret
mov
shrl
sbb
das
vmovaps
lods
inc
mov
loopne
cmp
pop
inc
dec
adc
fnstenv
jae
out
lods
xchg
imul
mov
dec
sahf
cmp
dec
pop
xchg
xchg
in
fsubs
jnp
lret
sbb
lret
mov
es
dec
sbb
rcll
cmpb
pop
in
lods
sub
sahf
or
iret
push
call
cli
add
test
cmp
sub
aam
mov
and
sbb
ljmp
fstl
xlat
movsl
in
cld
sbb
jnp
ljmp
jmp
fidivl
or
cmp
push
fwait
nop
inc
mov
jo
lock
mov
in
xchg
add
add
dec
jae
dec
xchg
or
jae
push
cmp
jno
dec
mov
test
nop
mov
sbbl
cmp
mov
lods
jne
adc
add
adc
iret
cwtl
fnstcw
lahf
push
jne
adc
jb
fidivl
dec
mov
int3
adc
jne
adc
or
pop
aad
push
in
aad
jns
dec
sub
jns
pop
jle
mulb
dec
sbb
dec
sbb
mov
add
icebp
stos
mov
loope
loop
js
fisubl
in
fsubrl
dec
mov
aad
xor
in
movsb
push
mov
repz
rorl
popf
in
movsl
std
jne
jb
mov
jno
movsl
fiaddl
push
xchg
sahf
push
or
out
or
cmp
sub
jg
pop
bound
enter
pop
inc
jecxz
xchg
call
xor
sub
subl
clc
xchg
mov
cmpsl
dec
fsubrl
mov
out
mov
inc
and
xchg
cmp
ds
out
in
sbb
adcb
fldcw
int
sbb
xchg
js
add
dec
push
popf
fstp
xchg
cmp
lods
into
mov
jo
popa
fwait
and
adc
je
adc
arpl
xchg
popa
negl
or
in
test
inc
je
push
stc
xchg
int3
dec
xor
push
popa
loope
adcb
jle
push
and
addl
xchg
inc
fcompl
gs
jmp
inc
adc
mov
in
dec
or
rclb
add
daa
pop
sub
inc
cmpl
fsubr
or
inc
sub
lcall
push
pop
aad
xchg
iret
out
xchg
int3
push
pop
pop
mov
out
sub
shrb
imul
pop
cmp
sub
adc
adc
jecxz
jo
cltd
shlb
es
orb
xchg
rcrl
clc
cmpsb
or
sarl
add
and
stos
stos
lret
out
ret
jle
lahf
mov
sbb
mov
test
add
pop
inc
xchg
pop
lahf
lock
add
push
and
mov
sub
data16
test
mov
shll
add
cmp
xchg
sbb
xchg
in
iret
sahf
or
idiv
subb
push
xchg
out
insb
subb
in
mov
cmp
ret
test
jnp
sbb
jo
add
ret
xor
lods
jmp
sbb
dec
mov
pop
cmpsb
cmp
jnp
sub
aad
outsb
jp
sub
out
mov
sub
push
jo
aam
xor
cmp
add
inc
aad
rorb
pop
ret
xchg
mov
push
inc
mov
push
pop
cmpsb
bound
mov
sub
pop
mov
nop
test
dec
mov
sub
shlb
loopne
jno
outsl
pop
das
sti
ss
sub
loop
pop
push
cmc
pop
lea
shl
jae
xor
xor
cmp
fstpl
push
xlat
fisttpl
stc
ds
dec
les
and
push
testl
or
fndisi(8087
adc
loop
add
add
stos
sub
xchg
inc
in
rorl
mov
xchg
rcl
out
dec
outsb
aaa
scas
lret
ret
jo
push
adc
aaa
adc
dec
cli
jmp
xor
add
ja
push
cs
in
pushf
icebp
ret
cmpsb
outsl
mov
and
out
addb
popf
jg
push
push
pop
sub
jmp
mov
mov
jo
mov
shrl
pop
inc
shrl
cmpsb
movsb
in
add
jle
sahf
arpl
mov
dec
add
mov
cmp
and
pusha
cmp
call
adc
out
mov
add
sbb
inc
pop
ret
adc
loope,pn
aad
in
in
add
push
jle
push
test
cwtl
pushf
jmp
fidivs
lcall
dec
ljmp
sbbl
pop
mov
and
cltd
pop
xor
xlat
xchg
or
pop
mov
pop
fs
daa
xor
mov
stc
gs
sbb
js
pop
inc
pop
dec
mov
jg
jne
ret
mov
lea
push
loope
pop
xchg
nop
lock
mov
into
lret
push
repnz
ds
dec
mov
mov
xchg
mov
inc
or
mov
enter
nop
mov
sbb
push
mov
in
mov
adc
stos
pop
fildll
jecxz
gs
scas
inc
pop
cmp
mov
mov
or
in
jnp
les
xchg
or
inc
outsb
jb
jb
jns
es
mov
inc
mov
lds
push
mov
lahf
out
pop
out
fbstp
in
jl
add
cli
mov
mov
push
pop
jnp
sbb
jno
jne
out
inc
cli
add
xlat
mov
bound
mov
pop
or
dec
push
jno
push
sub
loopne
pop
mov
sti
cmpsb
stos
jns
sarl
sub
pop
popf
movsb
lcall
inc
test
sarl
and
rorl
je
fisubrs
and
shlb
sub
sbb
hlt
cmp
rcrl
lods
adc
cvtps2pd
or
sub
push
lds
rcll
sti
ljmp
ss
in
mov
sub
adc
push
xchg
movsl
lret
loop
fwait
shll
push
pop
loopne
pushf
xor
mov
push
addl
repz
or
push
cmpsb
dec
into
mov
ret
sti
ljmp
jnp
loop
fildll
shlb
mov
push
or
cltd
dec
int
jl
gs
pop
jge
stos
push
daa
testb
sub
repz
adc
mov
andl
cmp
pusha
les
cwtl
fdivrp
push
js
xor
mov
int
dec
clc
pop
xchg
jmp
push
or
or
jg
gs
lahf
mov
arpl
outsl
or
mov
sbb
ds
xor
sub
leave
cmp
lret
ja
pop
pop
mov
popf
and
mov
add
loopne
xchg
or
pop
lea
int
test
call
cli
jp
mov
adc
and
jmp
xor
cmp
xchg
cmpsb
xchg
icebp
daa
and
imul
and
mov
movsb
pop
xchg
jnp
stos
pushf
mov
push
pop
xor
js
mov
xorl
call
mov
je
ficompl
dec
fdivrs
cltd
xor
dec
sbb
mov
sbbl
xchg
add
push
pop
aas
aam
mov
push
decl
test
cld
xorb
cmp
pop
loope
cmp
pop
test
ficoms
xlat
aas
add
and
out
pop
jno
mov
mov
add
rorb
jmp
imul
rcr
bound
repz
std
xchg
pop
arpl
adc
sub
loope
jo
scas
push
mov
ja
or
or
or
outsb
add
mov
mov
fldenv
insb
imul
cmpsl
jmp
fs
xor
repnz
xor
js
sub
test
sub
jb
pop
xchg
sub
pop
add
xchg
loopne
sub
enter
aaa
and
add
pop
add
dec
lds
les
jle
push
and
leave
add
cld
out
js
pop
or
stos
jmp
add
lds
mov
sbb
dec
fdivl
hlt
push
gs
add
xchg
adcl
xchg
imul
push
imul
test
cmp
lea
pop
jae
adc
jmp
cltd
hlt
addl
test
push
inc
loopne
jo
fs
sbb
orl
xor
cmp
add
pop
in
mov
out
push
out
jne,pt
outsb
iret
or
loop
int
push
in
push
in
sbb
and
add
pop
sbb
addr16
lcall
je
jne
lret
bound
xchg
enter
xchg
stc
sub
push
push
adc
add
sbb
ffree
jae
or
movsl
or
mov
leave
adc
xchg
push
jne
and
sub
mov
sub
xchg
adc
inc
das
bound
push
xchg
dec
jle
fbld
adc
or
adc
lds
xor
scas
inc
inc
adc
sbb
out
pop
movsl
jne
std
xor
dec
es
and
jge
cli
cmp
popf
lcall
lcall
adc
sbb
mov
fidivrl
mov
pop
into
inc
inc
mov
aaa
add
insl
jb
cmp
jo
xlat
push
loopne
inc
adc
stos
stos
pop
pop
xor
stos
adc
sbb
sub
jbe
pop
rcrl
imul
icebp
cmc
mov
cmp
add
and
xorb
add
fidivrs
sbb
push
mov
repz
jp
xchg
jmp
inc
xchg
test
aam
cld
xchg
movsb
adc
inc
mov
scas
sbb
in
cmp
loope
repz
cmc
push
pop
mov
js
mov
incb
jmp
mov
inc
shl
push
movsl
inc
leave
out
xchg
fimull
push
shrl
shlb
data16
ljmp
dec
lods
or
jecxz
shr
stc
leave
js,pn
mov
loop
int
jmp
jb
pop
stc
fdivr
xchg
jae
pop
mov
stos
scas
bound
pop
sub
lds
cmpl
sub
xlat
mov
lods
enter
loope
push
frstor
jo
or
in
dec
pop
jnp
test
adc
cltd
inc
or
or
jg
dec
mov
jl
inc
cli
outsl
dec
insb
cld
or
xchg
ljmp
push
push
add
in
push
sub
loopne
arpl
or
pop
sbb
push
mov
into
mov
lcall
pop
stc
fmull
jns
pushf
xor
push
lods
and
mov
and
pushf
jle
cmp
fcom
push
push
push
mov
mov
cmpsl
mov
mov
xchg
loop
clc
mov
mov
ja
cmp
add
adc
pusha
add
out
sarl
std
mov
inc
xchg
and
rorb
dec
lds
insl
shll
lret
repnz
sub
iret
jp
sbb
lds
xor
ret
fstp
pop
xor
lods
inc
mov
pushf
fcmovbe
daa
leave
mov
shr
and
cmp
or
push
hlt
mov
push
cmp
dec
push
dec
ja
stos
sarb
int3
lock
mov
sub
repnz
rcrb
mov
push
scas
lods
in
outsl
xor
ffreep
mov
imul
test
cmp
mov
in
sub
cli
in
icebp
jle
sbb
pop
fs
sbb
xor
aaa
cmpb
sub
inc
lcall
sahf
nop
out
push
push
jno
sub
dec
pushf
in
xchg
and
cltd
cli
xor
pop
push
cmp
inc
mov
mov
mov
ret
dec
cmp
jae
mov
data16
and
xchg
lock
movnti
pop
pop
lock
fs
rol
movb
imul
pop
filds
popf
pop
add
mov
jns
out
testb
lods
cmp
sbb
dec
pop
push
ror
ret
arpl
std
in
outsl
xchg
stc
popf
nop
std
cwtd
adc
in
dec
or
cs
testl
jo
mov
loop
inc
ljmp
mov
mov
mov
pop
jle
xchg
lret
pop
ret
mov
sub
adc
out
jnp
sub
mov
fs
les
fs
add
adc
mov
fcoml
fs
jbe
bswap
loope
lock
mov
rorb
out
lods
aam
inc
dec
aas
add
xor
les
or
mov
mov
rcrb
and
xor
fistl
je
jns
jle
sub
inc
shll
push
push
pop
dec
push
mov
cmp
inc
pushf
mov
data16
cmpsb
lret
dec
pop
repz
stc
mov
jge
cmp
out
lahf
imul
dec
clc
sahf
mov
idivl
stc
mov
out
pop
fmull
in
adc
ljmp
sub
push
fucomi
pop
sbb
jp
fs
addb
pop
lcall
dec
add
lock
push
dec
jmp
lret
xchg
fnstcw
or
adc
inc
mov
scas
enter
test
pop
inc
sbb
or
pop
jp
nop
and
aad
xor
push
push
addr16
mov
adc
lcall
imul
insl
push
mov
repnz
mov
or
in
mov
push
inc
mov
mov
push
xor
or
in
xor
adc
lcall
pop
and
hlt
xchg
sqrtps
loopne
cmc
mov
fstps
cs
push
and
sub
std
mov
jnp
push
aaa
shrb
out
xor
mov
adcb
push
mov
jnp
jb
jbe
lahf
scas
cmp
inc
lods
rorb
gs
fdivs
popf
imul
and
shlb
and
lcall
movsb
sub
jle
xlat
aas
repz
testl
mov
xchg
jno
jle
insb
xchg
iret
or
xor
ss
shlb
pop
and
imul
inc
dec
sub
rcrl
rcrb
adc
addl
lret
add
lea
sbb
xchg
cmc
jge
test
aaa
xor
and
xchg
outsb
adc
enter
cld
notl
xorb
xor
or
cltd
cmp
xor
daa
ljmp
push
gs
stos
add
mov
fcomp
mov
xor
xor
fimull
mov
inc
dec
data16
sahf
aad
pop
shrb
ljmp
inc
cmp
push
lcall
mov
leave
fdivr
pop
jb
pop
fstl
xchg
and
adc
scas
and
ss
je,pn
and
stc
leave
xchg
in
add
stos
inc
pop
in
ret
push
call
inc
push
push
add
push
and
mov
mov
push
js
push
add
movsl
lcall
push
jae
fs
test
push
mov
and
arpl
int
sti
mov
mov
sbb
xchg
bound
sti
or
repz
int3
jnp
jg
xlat
fidivrl
ljmp
and
icebp
repz
cmp
mov
pusha
mov
pop
mov
daa
call
xor
and
pop
xor
adc
daa
dec
data16
sub
adc
push
sbb
push
insl
hlt
mov
sub
push
mov
sbb
mov
repz
mov
jno
call
and
mov
push
daa
inc
out
loop
scas
xor
ss
inc
fwait
push
sub
iret
fdivr
hlt
inc
fisubrl
push
stos
push
divb
dec
xchg
xchg
outsl
gs
mov
xorb
fisttpll
dec
std
sti
inc
mov
adc
ljmp
pop
sub
mov
and
sbb
pusha
jb
push
push
inc
mov
cmp
loopne
mov
adc
and
outsb
leave
std
ror
es
in
sahf
insl
pushl
mov
push
jge
jae
out
xchg
iret
lea
icebp
and
and
cmc
xor
sub
outsl
sub
idiv
xlat
js
stc
cmp
lea
in
push
cmp
mov
add
leave
adc
int3
orb
ficompl
mov
fcmovu
in
mov
fildll
xlat
xor
mov
pop
inc
in
and
mov
dec
inc
pop
insb
aaa
xchg
fwait
pop
inc
sub
push
aas
ret
icebp
shl
xor
inc
mov
mov
sbb
mov
dec
jns
jo
into
sub
lret
pushf
xchg
dec
mov
mov
and
incb
mov
xchg
adc
aam
scas
flds
sahf
xchg
sbb
add
in
pushf
mov
mov
orl
xchg
sbb
sti
xchg
test
iret
das
mov
pop
dec
mov
add
sub
das
out
fimuls
cwtl
cmp
push
test
pop
fwait
mov
mov
rorb
nop
cld
cmpsl
fst
mov
cwtl
pop
mov
fs
xchg
sbb
xor
imul
test
fs
nop
arpl
das
incb
sub
sbb
mov
cs
xlat
and
fs
and
fldcw
sbb
rol
xor
test
mov
mov
loopne
fdivrs
cmp
repnz
insl
push
out
test
std
sahf
sub
dec
push
aad
ret
ret
dec
je
xor
scas
out
dec
dec
or
int
in
jno
int
sbbl
jge
dec
and
lcall
daa
outsl
push
loope
ja
call
lods
mov
mov
fcoms
rorb
mov
subb
and
adc
fsts
or
insl
pop
sbb
push
stc
shl
fwait
aad
jge
daa
inc
sbb
mov
pop
stos
loopne
lret
loop
je
sbb
or
cmp
test
ss
adc
lds
cmp
push
shl
stos
xchg
cmc
jno
lcall
cmp
nop
into
leave
cmpsl
mov
cmpsb
loop
fcomi
jno
jo
std
movsl
sarw
push
test
mov
out
mov
cmp
push
mov
push
inc
adc
add
lods
lret
loop
in
jl
sub
stos
movsbl
jle
pop
push
or
mov
mov
movsl
or
es
mov
cmpsl
inc
hlt
xor
jb
ljmp
mov
or
aaa
test
xor
jge
scas
cmpsl
gs
inc
adc
mov
add
div
or
jnp
shlb
push
int
lret
xchg
sbb
int3
bound
sbb
orb
fisttpl
out
or
fsubr
cmp
cli
xor
fidivrs
dec
clc
fcompl
div
test
add
add
aaa
pop
data16
outsb
xor
pop
xchg
stos
lods
cmp
fnstsw
sbb
sub
cmpsl
push
pop
add
test
add
inc
int3
mov
cmp
into
imul
dec
ja
cmp
mov
pushf
aam
stos
test
cwtl
add
xchg
adc
mov
neg
adc
inc
out
pop
in
mov
icebp
inc
jmp
and
mov
xor
inc
jecxz
les
push
mov
cltd
lock
dec
lahf
out
lea
fidivl
scas
dec
dec
icebp
lret
fdivrs
jnp
pop
cmp
shrl
shl
push
iret
in
pop
in
ljmp
das
out
imul
mov
add
mov
scas
cmc
lret
jb
sub
inc
dec
ret
push
xor
fldl
arpl
sub
test
imul
cli
mov
jmp
sti
mov
inc
fisttpll
push
outsl
inc
mov
imul
shrl
push
jns
fistpll
sbb
sub
mov
sub
movsb
jmp
mov
fisttps
insb
andb
lret
mov
pop
xor
adc
clc
iret
jns
fwait
add
out
mov
jbe,pt
dec
push
leave
or
push
stc
imul
or
lcall
stos
lock
dec
cwtl
ss
mov
addb
xchg
lds
fwait
test
push
roll
aas
pop
jg,pn
cmc
xchg
jne
bound
cmp
cld
mov
scas
movsl
mov
inc
into
xchg
or
addl
mov
adc
cmp
cld
int3
mov
xor
dec
aam
mov
push
mov
ficoml
pusha
mov
mov
cmpsl
fdiv
in
fisttpll
ss
mov
and
jg
push
hlt
mov
push
cld
cmc
pop
insl
mov
jb
mov
jmp
xchg
and
xchg
jb
dec
lock
enter
mov
leave
out
dec
dec
or
int3
pop
popf
adc
lahf
sbb
ja
dec
push
loopne
loopne
daa
xchg
dec
sbb
pop
and
das
stos
add
mov
adcb
scas
lods
lds
test
fnstcw
neg
testb
mov
cmpsl
mov
xchg
adc
negb
sub
xchg
into
xchg
mov
mov
mov
jg
pop
sub
sub
push
stos
cmc
pop
dec
mov
enter
insl
repnz
test
mov
rcrl
jle
lods
jb
fstpl
ret
inc
cmp
jecxz
out
outsl
push
imul
pop
mov
jl
lahf
into
jge
cmp
es
into
mov
and
jecxz
xchg
pop
and
in
mov
or
outsb
lods
jmp
aas
ss
int
mov
lea
sub
out
xor
clc
mov
mov
lea
push
lcall
aas
inc
rep
xchg
test
xchg
mov
rcrl
sahf
in
jns,pn
mov
or
xor
in
fcompl
push
ficoml
jne
leave
fiaddl
sub
push
push
test
gs
sarl
stos
loopne
popf
pop
jbe
int3
push
cmp
data16
dec
cmp
lods
dec
mov
inc
push
adc
fildl
jb
cmp
es
imul
and
push
subb
xchg
push
test
ja
daa
jb
xchg
fisttps
sub
test
popa
scas
mov
fisubrs
cmc
sbb
mov
arpl
lods
jb
aas
out
sbb
icebp
movsl
cli
xchg
mov
inc
mov
or
and
popl
jne
xor
les
data16
in
sbbb
fwait
jle
add
int3
addl
cmc
rorl
paddsw
cltd
sub
or
hlt
cmp
scas
push
lds
jno
sbb
loopne
push
aam
arpl
adc
jl
xor
sbb
mov
lods
cmp
or
cli
enter
xor
xchg
push
xor
mov
nop
les
outsl
rolb
add
or
cli
popa
jmp
jbe
in
int
inc
pusha
stc
pop
rclb
cld
push
add
cmp
iret
repz
cltd
test
dec
pop
or
cmp
lahf
cld
je
rclb
cli
decb
jne
push
lret
shll
icebp
iret
mov
pop
push
push
lds
dec
add
push
mov
pop
bound
jmp
jae
mov
movsb
rcl
sbbb
pushf
mov
frstor
add
pop
mov
test
jmp
fnstcw
push
loopne
ret
std
pop
loopne
adc
fstpl
add
iret
rclb
jae
inc
add
pop
and
fnstsw
in
test
out
push
fidivs
mov
pop
mov
dec
jae
push
mov
mov
imul
arpl
sti
cmp
jns
add
and
ret
jb
aam
fldl
cmpsl
ja
or
lret
sub
cmpsl
dec
lret
add
mov
sub
pop
idiv
xor
fldenv
mov
sub
xchg
xchg
pop
setnp
jg
inc
and
insb
bound
adcl
mov
imul
dec
stos
pop
push
movsb
or
and
or
insl
mov
repz
jnp
push
mov
jl
mov
movsb
mov
addr16
push
and
sub
push
jb
jecxz
repnz
jo
cmpsb
add
sub
sub
idivl
jns
push
jne
out
gs
loope
push
jns
js
xchg
mov
xchg
pop
jecxz
rclb
dec
orl
roll
jb
frstor
cmp
test
xor
outsb
mov
insl
filds
jmp
sbb
cmpsb
int3
mov
lret
xorb
imul
in
pop
sbb
std
cs
jl
jns
xchg
scas
cltd
addr16
aad
ljmp
xor
pop
cmp
jns
mov
inc
push
mov
mov
pushf
push
pop
dec
adc
xchg
scas
fisubrl
sub
shlb
in
cmpsb
jg
mov
shl
cmp
daa
scas
cmpsl
mov
add
ret
cmp
nop
pop
sbb
inc
in
xor
roll
out
xchg
jne
xor
push
rolb
cli
sbb
dec
adc
gs
cwtl
inc
push
xlat
daa
aaa
or
je
cmp
es
sub
or
pop
adc
or
add
hlt
mov
xlat
ljmp
sub
out
jg
lcall
test
jnp
cmc
inc
mov
insl
cwtl
ljmp
cmovne
mov
mov
test
fdivs
enter
xchg
ficoms
int
daa
mov
add
int
out
mov
jmp
rcrb
sub
into
in
jmp
jo
les
mov
or
movb
iret
jecxz
outsl
aam
out
dec
xlat
insb
rol
sbb
jp
lock
push
loopne
pop
mov
js,pt
dec
xchg
and
fs
mov
and
mov
dec
inc
push
cltd
or
mov
or
jno
sbb
sbb
mov
loop
mov
lahf
rorl
mov
xor
insl
icebp
cmp
ret
mov
in
shlb
jle
mov
dec
add
pop
scas
and
mov
out
pusha
jb
testb
sti
pop
xchg
sbb
lods
jnp
movl
clc
in
and
test
fcomp
mov
add
mov
cmp
adc
aad
add
add
movsb
push
loop
lea
dec
cltd
push
nop
cmp
sub
sub
call
pop
cmp
mov
mov
push
lods
sub
cmpsb
in
nop
mov
scas
mov
dec
sub
out
loop
bound
jg
cmpsb
pop
mov
leave
push
inc
dec
pop
mov
cmp
outsb
movsl
add
stos
mov
jmp
nop
adc
xor
fcomps
ret
data16
ds
pop
mov
xor
dec
sahf
push
push
fistps
lcall
out
iret
pop
ljmp
adc
mov
xor
int
and
fcoms
nop
in
or
or
mov
push
mov
xchg
fstpt
lcall
add
std
and
addl
shrb
fistps
xlat
push
push
je
xchg
cmp
cmp
push
mov
xchg
ror
jne
sub
fsubrl
cmp
xchg
xchg
push
movsl
jno
adc
aad
insl
stos
jo
fists
push
dec
pop
dec
stos
mov
or
adc
pop
das
push
add
mov
lods
in
into
std
inc
inc
int
inc
enter
aad
sbb
nop
loopne
notl
mov
xor
bound
xchg
or
cmc
ljmp
faddp
or
fnstenv
iret
std
cmp
lret
loope
mov
hlt
cs
add
jb
cmc
ss
inc
rolb
stos
sbb
cmpsb
push
cltd
adc
bound
xchg
fwait
inc
mov
negb
lods
xchg
jne
lcall
jl
into
xchg
outsl
push
mov
mov
test
repnz
mov
jns
das
dec
inc
lcall
xlat
nop
lds
and
push
pop
ja
sub
sub
mov
dec
je
arpl
adc
inc
mov
xchg
ret
add
ja
jae
frstor
dec
cmc
gs
xchg
mov
popa
add
or
out
js
fcoms
fnstcw
xor
jae
push
lret
jmp
movsb
xor
into
or
jecxz
push
lcallw
lods
pop
mov
xlat
clc
push
push
add
add
dec
or
push
mov
jnp
repnz
aaa
sbb
adc
daa
push
hlt
popa
xor
dec
push
pop
fstl
aas
out
mov
pusha
in
xchg
mov
sti
fdivrs
mov
ljmp
dec
das
xchg
int3
test
je
adc
jb
adc
lcall
mov
repz
mov
lods
mov
mov
inc
cld
fsubs
mov
mov
icebp
push
int3
shll
fs
repnz
out
mov
pop
int
jnp
xchg
and
pop
lahf
imul
cltd
in
sub
cmp
adc
mov
and
clc
ficompl
aam
mov
sub
jmp
jl
xchg
xchg
lds
das
mov
inc
enter
addr16
cmp
xchg
dec
adc
xchg
jmp
stos
lret
jle
pop
pushf
cmc
daa
sbb
test
xorl
js
jle
add
jle
cmp
push
fistl
addr16
jae
and
adc
scas
ljmp
jb
lods
insl
fnsave
test
jno
jns
adc
sbb
cmpsb
inc
dec
out
ret
cwtl
test
int3
lcall
bound
js
pusha
jmp
pop
adc
mov
addb
jl
clc
xor
dec
or
mov
call
sub
pop
inc
jnp
dec
sub
adc
cwtl
jp
jb
pop
adc
mov
mov
out
cmp
pop
icebp
pop
ficoms
stos
dec
mov
fsubrs
rorb
fdivl
pop
es
add
and
pop
cmc
loope
cmpsl
out
inc
lret
push
out
pop
mov
insb
xchg
jne
push
jle
inc
jmp
fnstcw
hlt
and
fdivrs
sub
pextrw
mov
cmp
and
mov
pop
stos
out
push
jnp
cwtl
sbb
rcrb
jg
mov
inc
loop
xchg
pop
xor
pop
arpl
in
pop
push
dec
xor
stos
out
cltd
jle
into
mov
adc
add
jmp
lea
cmc
ljmp
adcb
push
rcll
imul
jno
cmp
es
dec
pop
pop
dec
mov
and
andl
mov
std
loopne
xchg
push
mov
inc
ss
mov
lds
lret
add
or
xchg
push
cwtl
outsb
pop
inc
ja
mov
or
scas
scas
call
rcl
dec
jnp
mov
imul
orb
add
in
icebp
test
mov
scas
pop
loope
cmpsb
popa
enter
mov
mov
mov
mov
xor
cmp
adc
push
scas
mov
sub
movsb
int
dec
dec
test
jo
push
pop
sbb
dec
push
mov
push
xor
mov
or
cmp
fcmovnu
fsts
lret
ss
lods
fs
xor
int3
cltd
insb
repz
dec
fwait
movsb
mov
arpl
call
dec
sti
cmp
mov
pmuludq
bound
xchg
and
add
gs
push
insl
dec
stos
pusha
xor
fcmovnb
fbstp
jo
sbbb
out
lock
rcr
push
push
xor
ds
mov
lcall
lock
ret
sbb
adc
add
mov
xlat
pop
xchg
xor
lods
xor
stos
jae
pop
ljmp
and
fildll
mov
bndldx
frstor
add
mov
xor
sbb
dec
xor
sub
notb
imul
xchg
pop
aas
pop
xchg
js
cmp
push
in
in
notl
in
mov
xor
push
lcall
enter
test
mov
hlt
or
pop
push
insb
fnsave
and
das
bnd
leave
lret
or
pop
gs
stos
jb
lcall
out
push
aaa
test
pop
test
and
subl
idivb
jbe
lds
cmp
or
xchg
dec
loopne
popa
aaa
add
cmp
clc
jne
rcrb
mov
pop
xchg
int
inc
stos
fadd
xor
mov
push
sub
insb
jmp
pop
mov
jl
movsl
scas
cmp
fwait
adc
hlt
cmp
mov
pop
outsl
test
pop
xor
je
adc
gs
mov
addr16
imul
push
mov
add
xchg
cmp
andl
xchg
mov
aas
sbb
out
xchg
stos
jg
xchg
sahf
xor
and
sub
mov
mov
sub
cmp
lea
fstps
stos
pushf
pop
mov
stos
xchg
js
mov
arpl
jmp
adc
fxtract
inc
js
pop
lcall
push
mov
mov
cld
add
mov
adc
fidivl
cmp
sti
mov
lds
lock
es
jp
int
enter
incl
sbb
stos
lods
ret
and
jg
lods
pop
int3
inc
dec
test
cwtl
into
xor
add
hlt
or
ret
fcoml
adc
pop
push
stc
sub
out
jns
xor
pop
dec
sbb
push
addl
imul
leave
pop
std
cmp
int3
in
loop
or
xor
cmp
jae
mov
xchg
popa
dec
in
xor
movsb
inc
addr16
ljmp
jp
dec
add
adc
mov
pop
aaa
xchg
test
mov
fdivrs
or
xchg
mov
cmp
dec
cli
ret
lret
scas
push
out
outsb
outsb
push
xchg
dec
pop
je
outsb
inc
iret
ds
popa
lock
pop
push
nop
and
jae
out
cmp
push
push
mov
and
cmpsl
movsl
dec
inc
cwtl
cmc
rolb
imul
int
fsubrl
bnd
or
push
loop
call
jns
inc
mov
mov
sub
xor
ret
dec
xlat
fbstp
sub
dec
dec
xchg
fnstsw
lret
or
inc
pop
cmp
push
stos
pop
ja
loopne
or
jb
test
sub
mov
jg
fwait
imul
ficomps
sahf
in
int3
or
xchg
mov
in
push
ljmp
xchg
addr16
neg
mov
mov
out
repz
xchg
jns
ss
shrb
in
push
xchg
and
mov
out
xchg
adc
mov
mov
ljmp
ljmp
inc
jle
rolb
stos
enter
xor
outsl
popa
aaa
mov
pop
inc
push
loop
xor
enter
rcll
std
or
dec
inc
mov
sahf
subl
add
cmp
stc
push
std
jle
das
in
pop
std
sub
ljmp
jmp
xor
testl
cli
push
jecxz
or
cmpsl
dec
cmc
mov
lock
mov
push
ss
sub
cmpsb
stc
dec
or
lods
cmpsb
popf
jl
add
push
sahf
push
cmp
testl
and
mov
lret
fsub
mov
stos
outsl
std
and
xor
pop
mov
sub
adc
xchg
pop
bound
push
or
sar
aas
fisttpll
sub
mov
outsb
xor
mov
scas
mov
mov
jo
fdivrl
inc
jns
or
dec
loop
inc
cltd
sbb
sahf
inc
fwait
add
mov
dec
mov
inc
outsb
xor
std
in
rorb
mov
int
ss
std
push
pop
clc
xchg
or
add
dec
cli
push
push
jp
insl
inc
pop
sub
out
lea
adc
xchg
cmp
jno
scas
push
dec
xchg
jge
sub
inc
xchg
ffreep
inc
test
jne
stc
pop
loop
mov
aaa
sbb
and
test
jae
cmc
mov
adc
inc
pop
nop
ret
pop
call
stc
pusha
mov
mov
xor
mov
ficoml
std
out
or
jle
shrb
xchg
xor
push
fistpl
push
mov
xchg
sbb
mov
mov
pushf
xlat
shll
dec
ret
push
mov
jne
out
iret
iret
pop
dec
or
mov
dec
sub
jns
push
call
and
popa
sahf
sahf
xor
mov
add
xor
divl
xchg
cmpsl
shrl
cmpsb
sarb
int
shll
fwait
xchg
mov
mov
aas
cmp
or
cltd
shrl
push
je
and
ret
cmpsb
add
mov
cmp
sbb
into
insl
xor
movsl
into
add
stc
dec
or
xchg
jnp
test
sbb
add
mul
jle
jno
in
fisttps
sarl
xlat
andl
shll
or
mov
out
fbstp
adc
push
rorb
xchg
adc
cs
inc
adc
lods
add
aam
push
aam
push
dec
in
stc
sub
sbb
ret
insl
lods
pop
mov
xchg
aaa
sti
shll
and
mov
push
leave
sbb
fistpl
movsl
pop
mov
rcrb
in
sahf
push
cmp
push
aad
lret
or
push
push
in
jle
mov
push
push
cmc
xchg
jecxz
or
es
repz
xchg
xchg
mov
outsl
mov
pop
dec
lcall
inc
cmpsl
and
cmpsl
pusha
cmpsl
xchg
xchg
repnz
bound
cmp
or
shrb
mov
aaa
mov
pusha
push
cmpsb
es
push
push
xor
mov
inc
add
test
xchg
lock
jno
scas
fcoml
daa
xchg
mov
dec
lods
lods
aaa
test
push
xchg
and
repnz
sbbb
lahf
cmpsl
sbb
jg
lods
cmp
mov
xor
dec
push
aas
lret
pop
cmpsl
rcll
and
scas
out
xlat
cmpsb
data16
arpl
lods
scas
mov
je
mov
gs
clc
jne
or
xor
mov
arpl
fisubl
mov
add
add
adc
or
jae
fldt
addr16
lcall
adc
cli
rclb
and
adc
ja
insl
push
int
push
popa
aad
out
fwait
std
xor
adc
les
dec
testl
arpl
sub
sub
mov
dec
inc
sbb
jg
push
dec
adc
ret
mov
pop
dec
int3
push
inc
push
dec
cmc
dec
pop
pause
mov
lods
sbb
test
iret
jne
cmp
xchg
or
stos
lea
and
jecxz
xchg
jg
or
push
jb
push
xor
imul
arpl
push
sbb
out
stos
in
dec
mov
aaa
pop
and
push
bound
mov
aas
jae
lret
cmp
or
mov
aam
dec
shrb
mov
push
mov
test
fisubrl
stos
loopne
lea
push
xchg
rorl
das
mov
inc
or
movsb
ds
stos
mov
fidivrs
push
clc
adc
enter
jp
sbb
push
xchg
mov
popa
shrl
scas
cld
in
fwait
int3
dec
xchg
push
test
inc
push
loopne
cltd
stc
adc
mov
int3
outsb
test
push
pop
xchg
fwait
mov
call
lods
sub
mov
pop
js
test
arpl
ja
jge
insl
xor
add
inc
imul
popa
pop
inc
ss
in
mov
push
dec
jge
popf
mov
lods
mov
ds
jmp
fbld
xchg
sbbb
das
ret
mov
addr16
testl
lcall
movaps
ss
pusha
hlt
push
dec
fmull
rcr
xchg
dec
dec
je
dec
loopne
call
mov
outsb
lcall
pushf
test
out
test
shrl
xchg
push
in
jg
adc
push
add
jecxz
outsb
pop
insb
fsubs
movsb
push
popf
and
rcl
repnz
les
mov
das
xchg
mov
movsl
lds
fucomp
mov
movsl
dec
clc
xor
ljmp
ljmp
xchg
pop
pop
das
jo
fidivs
mov
scas
les
out
icebp
addr16
clc
jl
test
in
sbb
sbb
push
jae
fs
ja
in
push
mov
fsubl
mov
cmp
xchg
repz
rorb
fwait
jne
push
jb
fwait
pop
xor
xor
or
inc
pop
or
clc
aaa
mov
mov
outsl
mov
dec
xor
fwait
sub
mov
fs
fistps
fcompp
push
cmc
jno
sbb
mov
mov
dec
int
hlt
iret
push
aas
sbb
loopne
pop
movsb
sub
sub
std
insb
xor
mov
pop
mov
xor
int
mov
ret
sbb
mov
mov
iret
xor
add
ret
imul
sub
movsb
dec
sub
lea
data16
cmc
mov
push
pop
lcall
jo
pop
jbe
cmp
test
add
mov
sub
int3
sub
out
incl
pop
aam
out
pop
in
mov
push
pushl
test
xor
ret
jno
inc
xor
sub
sbb
inc
das
call
ss
movsl
out
cmp
and
mov
test
dec
mov
mov
adc
push
sbb
cmp
ja
push
mov
mov
mov
shr
movsb
jle
or
mov
es
pop
push
xlat
jo
test
mov
jge
cmp
cwtl
adcb
imul
movsb
mov
test
add
test
scas
ja
es
dec
mov
inc
add
fstps
mov
push
mov
mov
inc
inc
ljmp
fcmovnb
movsl
fcoms
cmp
adc
or
mov
movsl
repnz
mov
add
lahf
mov
fisttpl
ss
testb
dec
test
or
pop
mov
lret
cmpsl
adc
adc
and
aaa
ret
lods
fs
cwtl
rorl
or
cld
cmp
inc
lret
sub
adc
adc
movsl
lods
rol
mov
ret
inc
push
and
dec
add
sbb
mov
cli
push
xor
inc
sbbl
or
cld
and
and
pop
out
stos
repnz
push
xor
mov
push
push
bnd
or
adc
jmp
xor
fstpt
mov
xchg
repnz
nop
out
ja
rolb
int
jae
jl
sub
inc
ret
sub
xchg
outsb
outsl
pop
pop
xor
inc
mov
xchg
dec
dec
pop
js
enter
loope
jae
sub
xchg
mov
imul
fistl
push
xor
cmpsb
test
pop
mov
pop
stc
dec
hlt
pop
jbe
sub
inc
fdivs
sti
or
jb
mov
push
sub
in
mov
les
jp
int
bound
cli
ret
lods
fs
scas
std
mov
dec
xchg
xor
jno
xchg
jmp
loope
mov
dec
imul
in
cmp
xchg
out
mov
xlat
pop
cmpb
mov
jge
pop
imul
icebp
pop
jl
inc
out
xchg
and
adc
mov
in
outsl
aaa
popa
outsb
and
sbb
add
ficompl
mov
dec
dec
movsb
rcrl
repz
mov
mov
es
cmpsl
mov
lret
outsl
dec
and
into
or
mov
ret
js
inc
jg
insb
mov
cmpb
inc
mov
and
and
or
jp
arpl
cmp
mov
cmp
sub
dec
xor
dec
jmp
inc
enter
xlat
notb
pop
outsl
xchg
mov
fisttps
in
or
enter
outsb
lahf
stc
xor
xchg
xchg
orb
sbb
push
inc
pop
repz
mov
mov
mov
push
cltd
dec
outsb
inc
fbld
or
imul
aad
push
sahf
ss
ret
xor
popf
cs
and
add
outsb
dec
or
and
repnz
xchg
cmc
dec
fldl
andl
mov
dec
ljmp
cmp
flds
adc
lock
mov
jmp
pop
inc
push
mov
lret
jp
arpl
mov
cmp
out
pushf
data16
sub
xchg
sti
fs
push
mov
gs
xchg
mov
sbb
clc
ljmp
cld
test
inc
out
addr16
out
cmpsl
xor
sub
adc
adc
fwait
outsb
int
das
call
mov
dec
dec
mov
insb
sub
or
xor
std
xchg
or
mov
sub
pusha
mov
lds
lea
mov
or
je
jmp
mov
outsl
pusha
pop
pop
adc
imul
inc
movsb
test
adc
in
or
mov
in
test
or
or
lods
jno
pop
scas
dec
pop
lock
pop
and
out
clc
jl
mov
movsl
xchg
cs
fcoml
mov
lds
cwtl
in
mov
pop
es
sbb
or
push
rorl
movl
mov
out
sub
adc
lods
jno
mov
cmp
std
dec
pop
cld
pop
pop
pusha
or
dec
mov
adc
dec
out
cmp
into
or
and
pop
ljmp
jmp
lock
and
pop
mov
test
sub
cli
daa
es
leave
jno
loope
popf
xchg
pop
loop
inc
jbe
mov
xchg
frstor
pop
mov
xchg
rcrb
dec
outsb
mov
pushf
faddl
clc
hlt
mov
enter
push
aam
xor
add
mov
ret
cmp
sbb
lock
inc
add
pop
xchg
inc
mov
and
jbe
or
jmp
mov
je
xor
clc
movsb
adc
shr
sub
movsb
push
pop
xor
mov
add
lret
xor
mov
push
js
aam
xor
icebp
fadds
mov
push
push
jno
dec
out
fidivrs
dec
xchg
sbb
xchg
mov
ljmp
cmpb
xchg
in
add
cmpsl
divb
cmp
dec
into
sbb
sub
aad
test
addr16
addr16
jns
lcall
jae
mov
pushf
ljmp
adc
mov
mov
pop
ja
inc
mov
fs
fs
mov
dec
jecxz
lea
scas
jnp
insb
xchg
xlat
jg
sti
outsb
div
xor
ja
and
fmuls
lea
arpl
iret
call
jo
stos
cmpsl
fs
xor
outsl
scas
clc
fyl2xp1
xor
push
enter
mov
loop
xchg
mov
cmc
int3
push
loop
loope
pop
jns
push
mov
pop
addr16
orl
cmp
jg
addr16
xor
xchg
out
push
xor
add
inc
lds
testb
pop
mov
test
rcl
jecxz
xor
dec
dec
ret
jo
cli
and
jno
push
mov
jno
outsl
pop
mov
add
inc
inc
jae
in
inc
pop
sahf
cmp
or
ret
outsb
dec
outsl
cmpsl
mov
scas
mov
repz
dec
xchg
adcb
outsl
cmpsb
pusha
and
jmp
outsl
and
jge
jns
xchg
jl
aaa
lock
sbb
or
jle
shlb
sarb
adcl
lds
div
es
in
or
xchg
in
xor
mov
mov
sbb
dec
int3
nop
cmp
jge
cli
sbb
movsb
scas
out
xchg
and
jno
sbb
arpl
imul
sbb
mov
cld
push
scas
movsl
clc
pop
in
mov
dec
lods
xorl
cli
es
iret
push
lods
addr16
dec
lea
sbb
mov
xor
mov
in
sub
sub
sub
or
in
add
jb
hlt
insl
adc
dec
cwtl
xor
aad
rcrl
ficoms
les
shrb
pop
nop
insb
push
jae
std
aam
add
insb
test
xchg
rcl
imul
mov
insl
clc
movsl
out
negl
inc
fidivl
ret
fs
xor
mov
test
adc
sbb
jnp
mov
push
cmp
or
sbbb
int3
xchg
mov
je
pop
enter
inc
enter
dec
and
out
push
in
sub
xchg
jb
jne
xchg
lea
inc
test
int
dec
pop
mov
popf
bound
lds
idivb
andb
mov
cmpb
dec
test
mov
hlt
xchg
shlb
out
cmpsb
xchg
add
fmuls
add
jb
ficompl
imul
cld
pushl
stos
cmp
inc
rolb
sbb
in
dec
adc
hlt
dec
in
int
xor
mov
jmp
jb
ja
rolb
cmp
out
sbb
mov
cmp
inc
inc
fnstenv
push
sbb
lcall
pop
inc
mov
mov
sub
les
test
dec
sahf
rol
jnp
nop
rolb
mov
adc
xchg
cmp
jmp
ds
mov
or
or
mov
lea
pusha
ds
add
mov
mov
dec
jle
enter
xchg
notl
sub
aad
jmp
sub
sbb
lea
dec
bound
out
and
into
lahf
cmp
mov
decl
mov
scas
adc
pop
xchg
push
xchg
lea
xor
nopl
pop
in
and
ss
lret
inc
shl
arpl
jle
jo
xor
mov
mov
icebp
pop
and
xor
dec
xlat
mov
sub
xor
cwtl
pop
or
in
aam
mov
es
cmp
jmp
dec
inc
push
rcll
xchg
xor
mov
mov
sub
mov
jbe
clc
sbbb
lock
pop
cmp
rol
fistpll
lret
imull
sbb
adc
jno
rclb
jmp
adc
xlat
ficomps
nop
in
fidivrs
adc
jg
in
fxch
add
aam
cmp
or
xchg
xchg
je
mov
xchg
xchg
jge
in
dec
repnz
test
push
or
sahf
lock
ljmp
adc
mov
add
loope
pushf
sub
dec
fwait
xor
mov
imul
nop
mov
in
jne
bound
es
lcall
imul
shlb
dec
lcall
out
loop
call
jge
sarl
test
pop
pop
mov
mov
push
movsl
lret
daa
mov
je
repnz
dec
pop
jbe
xor
dec
dec
mov
scas
outsl
fwait
xlat
mov
dec
lods
pop
jns
adc
mov
imul
fwait
mov
inc
and
or
cmp
mov
xchg
test
aad
test
lods
push
es
fadds
movsb
xchg
sbb
scas
mov
call
cmp
pop
leave
bound
dec
pop
lods
xchg
roll
fcomps
mov
outsl
add
ljmp
mov
loopne
inc
rcrb
sbb
mov
inc
mov
sbb
in
out
dec
pop
daa
imulb
fsubrs
and
xlat
adcl
jne
outsb
out
xchg
scas
pop
scas
pop
lea
inc
jbe
jl
mov
pop
push
rcrl
add
inc
rorb
mov
push
cmp
xchg
add
iret
push
mov
andl
push
xchg
sti
add
dec
sbb
fisttps
inc
movsl
and
mov
daa
dec
aad
cwtl
dec
cwtl
fstpt
jno
lock
dec
mov
and
in
insl
enter
mov
cmp
xchg
divb
test
lcall
in
xor
mov
sbb
xor
push
mov
shr
dec
and
add
movsb
mov
sbb
and
fisttps
rcll
daa
cwtl
and
test
pushf
je,pn
mov
cmp
push
arpl
inc
lods
sti
mov
int3
xchg
adc
aaa
jae
adc
xor
fstpl
cmp
xor
scas
or
loop
or
xchg
std
inc
out
mov
xor
test
xchg
fcompl
test
std
xchg
jb
fistpl
xchg
out
sub
movsl
mov
and
aas
dec
shl
js
imulb
jmp
mov
imul
pop
pop
jge
pop
add
fs
add
dec
aam
call
pop
or
jae
insb
xor
add
sub
add
xchg
callw
inc
jnp
and
fiaddl
cmpsl
pop
test
adc
push
add
push
xchg
cmp
sub
mov
mov
xchg
lock
or
lahf
out
sbb
mov
gs
push
push
add
int
pop
cmc
pop
inc
push
call
dec
das
and
inc
inc
inc
icebp
push
rorb
cltd
nop
dec
idivl
hlt
pop
push
movsb
icebp
dec
adc
cmp
jmp
fdivrs
sbb
fs
rclb
js
cwtl
cmp
adc
in
popf
xorb
popf
mov
push
lret
jecxz
adc
adc
inc
cmc
xor
mov
inc
jno
fucomp
mov
rcl
sbb
ljmp
mov
ds
je
mov
ja
das
and
popa
or
add
mov
jno
sbb
adc
out
inc
add
pop
pusha
das
push
stc
pop
imul
fsubrs
outsb
lock
insl
adc
jne
xchg
mov
inc
mov
adc
fsubrp
sbb
in
ss
pop
jno
clc
xchg
xchg
push
repz
negb
jecxz
orl
cmp
fwait
fwait
lock
jbe
testl
test
out
xor
popf
lea
int
aam
mov
adc
mov
daa
sub
in
in
mov
neg
popf
inc
in
inc
shrl
or
iret
push
or
push
andb
fcmovu
cmp
pop
and
push
push
push
push
xchg
test
addb
jno
jg
insb
pop
sub
fs
pop
ja
xlat
xchg
mov
sbb
push
xlat
and
push
bnd
daa
jmp
jo
dec
psubd
vorps
rorb
xchg
cld
pop
dec
pop
xorl
jl
adc
nop
pusha
cmp
or
fimull
cmp
shrb
fdivs
mov
es
mov
loope
jmp
or
pop
dec
test
ljmp
lods
mov
ljmp
nop
mov
popa
lahf
sahf
mov
jo
mov
sbb
dec
shll
sbb
cld
mov
shlb
dec
aam
or
dec
movsw
mov
mov
adc
pop
add
cmp
adc
jmp
fadd
stc
xchg
sbb
push
sbb
mov
inc
insb
pop
pop
push
mov
mov
xlat
stc
xorl
mov
mov
in
lods
push
jge
in
pop
data16
ficoms
jnp
xchg
cmp
push
imulb
clc
icebp
add
sbb
push
push
xchg
or
push
dec
mov
clc
push
call
into
sbb
or
pop
daa
sbb
idiv
daa
xchg
push
sarl
js,pn
imul
mul
repnz
movsb
insb
addb
mov
mov
xor
add
daa
aas
pop
jns
jae
mov
xchg
push
pop
mov
xchg
and
shrl
mov
cmpsl
test
ss
stos
fisubrs
out
jp
sub
stc
dec
dec
fadd
sbb
adc
sub
cmpsb
fmull
repnz
jnp
mov
xor
or
jmp
inc
inc
inc
mov
cmp
and
int
jbe
adc
incl
leave
cmp
mov
into
push
cmp
sti
inc
dec
pop
dec
mov
jbe
jbe
cmp
leave
sbb
jl
outsl
lcall
sub
inc
adc
iret
sub
andl
xchg
pop
jbe
into
mov
les
adc
push
xlat
loop
xchg
xchg
lds
sbb
cmpsl
jb
push
mov
sbb
loop
add
int3
add
lea
scas
dec
cltd
cmp
popf
hlt
sbb
push
inc
rcrl
bound
repz
arpl
fcoml
xchg
imul
dec
pop
push
xchg
cwtl
mov
mov
out
pop
pop
cmp
insb
or
pop
insl
daa
or
mov
xchg
clc
jge
jne
fwait
jae
out
enter
sahf
mov
xchg
fwait
stos
mov
and
sbb
mov
aam
inc
xchg
add
add
cmp
lds
xor
xor
adc
jne
push
pusha
pop
sbb
mov
lcall
push
in
scas
stos
adc
out
jmp
les
push
sub
jbe
imul
pop
push
addl
push
xchg
xor
fs
loopne
add
cwtl
cmpxchg
repnz
pop
mov
divl
mov
pop
pop
dec
sbb
sbb
push
sbb
xchg
ds
xchg
bound
in
test
test
mov
jmp
fucomp
push
push
push
push
out
inc
push
fwait
mov
jbe
and
mov
xchg
mov
bndstx
add
mov
sub
cmp
pusha
jbe
xor
aaa
repnz
scas
adc
and
out
popa
push
mov
sub
fdiv
js
adc
or
mov
cmp
and
push
xchg
jp
lahf
loope
mov
jg
cld
or
adcl
and
or
fdiv
adc
ja
out
xor
aaa
sub
cmpsb
and
pop
mov
jle
and
push
pop
outsl
insl
in
pop
insl
outsl
mov
jne
add
mov
xchg
jmp
sub
clc
add
addr16
cli
inc
popf
test
test
pop
pop
sub
inc
mov
outsl
out
sub
lds
mov
data16
pop
or
nop
xchg
xchg
clc
push
hlt
int
leave
xchg
outsl
xorb
mov
ret
cmp
rclb
inc
xchg
jb
cmp
jno
test
in
je
adc
or
xchg
icebp
ds
dec
test
shrl
jae
imul
push
clc
idivl
pop
lea
pop
jne
test
cmp
je
or
jle
mov
and
dec
xchg
out
stos
enter
arpl
adc
mov
mov
cltd
or
aas
testb
ret
in
pushf
lret
lcall
and
stos
repnz
cmpsl
mov
xor
aas
cmp
xchg
shrb
pop
iret
mov
pop
cmpsl
rclb
fistpll
jp
push
add
test
jne
sbb
mov
cwtl
and
xlat
xchg
cltd
mov
test
jno
push
add
clc
push
jecxz
daa
fcmovnb
ss
cmpl
push
xchg
aad
ja
xchg
outsb
sub
test
imul
adc
adc
and
dec
xor
dec
push
xchg
fnstcw
xchg
xor
pop
mov
xlat
sbb
ds
aad
inc
jo
inc
js
mov
rcrl
xor
xchg
movsl
lds
sub
pop
adc
or
jno
repnz
adc
sahf
rcrb
pusha
gs
aas
cmc
pop
sub
add
jmp
jp
stos
push
dec
inc
add
mov
fsubp
adc
pop
dec
in
add
cltd
xchg
scas
loope
add
inc
ja
adc
mov
inc
orb
insl
mov
into
mov
mov
hlt
mov
jb
sub
sbb
int
jecxz
xchg
out
fwait
icebp
cmpsl
cmpsb
jmp
mov
jae
sub
cmp
mov
inc
mov
push
jp
adc
movsb
sbb
pop
lock
mov
inc
in
cmp
inc
into
jnp
add
cwtl
xchg
mov
jns
push
pop
cli
ds
mov
push
jle
dec
push
stos
ja
fists
stos
mov
jns
cmpb
jecxz
fdiv
in
and
xchg
scas
adcl
lahf
add
or
sub
fucom
mov
jle
leave
das
andb
lcall
fstps
cmp
dec
std
mov
out
fnstsw
mov
push
xchg
scas
push
mov
sub
push
mov
mov
lahf
pop
aad
daa
ljmp
mov
push
xorb
xor
leave
mov
sub
rol
fdivl
loope
ds
fstps
xor
stc
add
clc
lock
jb
mov
sarb
je
cmp
mov
mov
test
push
mov
fildl
addr16
fadds
fisttps
aad
lock
add
dec
add
lock
add
stc
dec
and
cmp
push
xchg
int3
rcr
js
inc
xor
xor
jle
in
mov
jl
lret
pushl
jns
faddl
mov
or
mov
jl
movsl
aad
inc
push
je
sub
xorl
mov
push
out
add
jae
bound
pushf
mov
not
xor
ds
mov
inc
mov
inc
cltd
fs
and
push
cld
mov
stos
dec
nop
mov
cld
push
push
mov
or
cmpsb
push
rorb
cwtl
jmp
inc
cmp
mov
das
jns
or
icebp
or
mov
mov
and
push
xchg
in
and
xchg
aad
mov
stc
cld
cwtl
ret
sbb
daa
je
sub
jo
ror
rcrb
xchg
cmp
xchg
test
xchg
call
jno
scas
sbb
bound
sbb
cmp
push
cmp
push
fwait
jmp
inc
push
push
dec
cmpl
mov
fcomps
adc
lods
std
pop
fxch
cmpsb
mov
mov
stos
out
and
mov
sbb
and
inc
scas
push
cmp
mov
sbb
xchg
pusha
test
mov
dec
bound
pop
cmpsb
pop
mov
xchg
sahf
in
xchg
lods
fildll
mov
fnstenv
cmp
sub
push
push
mov
fimuls
cmpsl
mov
pop
popa
and
outsb
jmp
inc
push
lock
add
addl
sahf
mov
jbe
push
mov
scas
mov
and
sbb
mov
pushf
div
cmpsl
or
sbb
enter
seto
pop
jbe
je
or
adc
xor
pop
jno
lock
cmp
fs
in
out
pusha
jecxz
sub
cmpsl
mov
mov
jae
ret
and
lock
mov
or
jg
and
nop
lcall
add
lcall
mov
addb
pop
ret
aam
jns
ret
inc
or
sarb
sub
lods
sti
lds
arpl
dec
push
bound
in
inc
push
arpl
std
push
rolb
rcl
cwtl
out
addl
adc
jo
cmp
and
and
cmpsb
sub
mov
scas
mov
or
dec
and
add
adcl
adc
dec
rclb
sub
add
add
mov
pop
inc
arpl
xorb
sbb
cltd
imul
jnp
dec
sbb
mov
and
pop
jmp
sbb
adc
ficompl
out
aaa
out
cltd
xchg
xor
mov
xchg
scas
icebp
push
push
mov
fidivrs
push
mov
mov
dec
ljmp
jbe
or
cli
dec
mov
add
mov
cs
in
mov
cltd
pop
xor
icebp
popf
bound
dec
test
pushf
in
pop
sub
hlt
int
jge
outsb
pop
cmp
add
popf
dec
cmp
adc
or
and
inc
je
sbbl
rclb
jnp
leave
adc
loop
xor
cmp
mov
cwtl
jne
mov
scas
push
sbb
fs
sub
pop
push
cld
push
ret
push
inc
inc
pop
push
ret
shrl
aam
mov
add
scas
movsl
or
leave
xor
add
imul
jo
aas
lret
es
fstps
adc
lods
pop
cltd
clc
lds
push
enter
jg
dec
loope
dec
push
popf
imul
mov
mov
es
arpl
fsubrs
rolb
rcrl
imul
push
in
inc
inc
imul
sbb
imul
sub
shl
enter
dec
sarl
xchg
gs
dec
jns
aas
inc
push
push
sub
xchg
sub
dec
push
add
push
jle
dec
sub
popl
mov
dec
sbb
leave
addr16
pop
push
int3
cmp
push
jno
dec
inc
int3
in
mov
add
inc
sbb
pop
jns
aad
push
jae
add
in
adc
jbe
push
sbb
xchg
rcrb
pushf
add
rorl
rclb
dec
xchg
ja
mov
cli
or
stos
jns
adc
enter
xor
addl
imul
xchg
ret
gs
push
mov
or
pop
inc
push
push
add
jb
notb
sbb
mov
cmp
mov
lods
stos
and
rcrl
or
addr16
sub
cltd
cld
pop
std
rolb
repz
sbb
pop
pop
arpl
out
jle
xor
pop
nop
mov
pushl
xor
out
xor
inc
push
mov
jmp
ror
cmpsb
enter
popf
pop
push
push
adc
into
and
gs
loop
fistpll
mov
fcomps
cmp
gs
test
jae
or
mov
stos
push
cli
je
clc
dec
cmpsb
xchg
inc
cmp
fwait
aam
or
sbb
std
fs
movsl
sbb
jmp
pop
mov
rclb
scas
and
enter
cmp
or
add
inc
mulb
mov
mov
aaa
push
icebp
fbstp
inc
outsb
ja
jmp
sbb
lds
in
jb
enter
push
mov
into
mov
pop
popf
scas
add
push
shl
mov
gs
xlat
adc
xor
scas
mov
in
add
sub
jne
adc
push
xchg
mov
lret
nop
std
out
bound
xchg
repz
jno
sbb
std
test
aam
aaa
in
push
mov
daa
dec
in
ret
inc
jg
pop
mov
pop
sub
mov
ficompl
adc
add
insb
push
and
addb
mov
pop
sub
lret
lods
shlb
push
cmp
loope
cmp
rcrl
aam
push
jle
cmp
mov
jnp
jmp
mov
je
loope,pn
fisttps
mov
xchg
push
push
addl
lds
push
xchg
pop
push
das
loopne
and
mov
repz
mov
inc
push
fistl
xchg
scas
pop
jns
or
fwait
test
int
ds
push
jae
mov
dec
nop
test
popa
add
aas
pop
pop
int3
loop
lret
lds
sub
and
int
sbb
adc
fldcw
arpl
in
sbb
xchg
out
push
aad
lea
lock
imul
inc
into
jl
jg
push
imul
cli
jle
xchg
mov
mov
pop
movsb
xor
sub
js
inc
mov
jle
pop
mov
mov
push
mov
cmp
pop
lahf
adc
lock
adc
fwait
pop
outsl
aad
mov
mov
jl
loop
sbb
xor
ds
jl
mov
cmc
subb
and
cmc
inc
jg
push
in
addl
sub
sbb
imul
cld
and
push
cltd
sub
and
out
and
sub
mov
push
sar
fs
lods
mov
or
cmpsb
push
lea
xor
sbb
aad
enter
ret
icebp
pop
mov
ret
jbe
in
or
xchg
jbe
adc
add
push
mov
mov
sbbb
cmpsb
jbe
je
sub
out
fdivrl
mov
sbb
dec
xor
sbbb
stos
iret
mov
pop
test
xor
sti
pop
add
movsl
cmp
call
addl
xlat
lock
negb
ficoml
addl
jne
shlb
test
daa
repnz
jecxz
subl
inc
and
sahf
setae
add
xorb
in
xchg
cmp
imul
push
insl
jl
int
cmpsb
movsb
cs
ds
push
mov
mov
rorb
outsb
mov
mov
jo
sbb
std
sub
dec
or
popl
cld
mov
mov
outsl
mov
stc
jnp
aad
adc
sbb
mov
cmp
shll
lahf
xchg
push
ror
pop
sbb
add
mov
loop
and
fidivrs
inc
mov
xlat
lahf
mov
add
es
mov
and
mov
jbe
in
dec
sbb
movsb
lods
int
shrl
and
in
and
test
mov
adc
dec
adc
insb
enter
mov
sub
scas
push
xchg
mov
inc
ss
sbb
mov
xchg
mov
lcall
outsb
mov
add
sub
ret
movl
fmul
aam
in
and
mov
outsl
cwtl
popf
int
arpl
push
pop
mov
jns
mov
cmp
stos
movsb
cmp
in
into
jae
lds
and
stc
cltd
adc
hlt
xor
pop
out
ljmp
pusha
push
loope
out
fwait
cli
jg,pn
dec
cwtl
mov
imul
push
xorb
inc
stos
nop
mov
add
dec
add
jno
lock
or
add
or
ret
adc
icebp
xchg
js,pt
push
pop
xlat
scas
popa
jge
pop
gs
insl
loope
xor
push
sub
mov
push
sbb
jne
inc
jno
fisubs
pop
ljmp
add
outsb
inc
aam
repnz
gs
mov
sbb
cmp
sub
cmpsb
popl
or
aad
dec
sbb
xor
push
call
js
mov
pop
adc
inc
mov
orb
jnp
push
cmp
jg
bound
or
mov
or
leave
imulb
adc
push
xchg
call
xor
mov
push
in
sub
insl
jno
pop
pop
lds
inc
daa
push
cmp
push
push
push
xchg
loopne
stos
jle
in
inc
stc
or
xchg
sbb
daa
sub
gs
les
push
push
push
pop
mov
mov
mov
sti
in
sbb
sub
repnz
test
cld
lret
out
inc
cmpsl
in
leave
lods
shl
mov
shrl
daa
insl
adc
and
fildl
shl
ja
cs
movsb
mov
stos
arpl
mov
inc
mov
cmp
rolb
and
pushf
jecxz
dec
jno
inc
bound
adc
and
push
mov
mov
mov
rol
pop
xor
push
js
aas
sub
test
cmp
xchg
dec
loopne
fbstp
sbb
cld
xchg
popl
inc
or
aam
or
fisttpll
popa
ret
and
sub
adc
cmpsb
arpl
mov
jl
jno
or
sub
xorb
add
xorl
dec
mov
outsl
and
mov
cmpsb
ret
ja
call
gs
fistps
sbb
mov
inc
call
test
sbb
std
jg
repz
popa
popa
mov
add
xchg
in
ror
and
call
mov
sbb
pop
xchg
enter
cmp
jae
jae
aam
xor
mov
loop
add
imul
mov
adc
mov
jnp
adc
push
enter
and
stos
jo
punpckhwd
fimull
ds
xchg
adc
mov
mov
jb
xchg
inc
ret
inc
inc
inc
cmp
ss
push
jno
jno
rorl
xchg
loope
mov
fidivl
jnp
test
dec
call
and
pop
in
pop
mov
insb
pcmpgtw
scas
movsb
in
mov
xlat
inc
and
insl
xor
jl
sti
mov
mov
push
leave
jne
push
inc
sub
jno
je
cld
pop
sbb
dec
ss
xlat
jl
rcrl
sti
sbb
out
mov
xchg
jle
mov
xor
subl
imul
pop
rclb
fnstsw
mov
shlb
lcall
and
adc
xor
xchg
sbb
mov
or
push
mov
ljmp
push
and
out
mov
ss
in
jo
mov
pop
add
sbb
sub
add
cmp
rolb
pop
xchg
test
xor
xor
mov
mov
jne
pop
inc
lock
ret
cmp
xor
dec
jmp
out
in
es
pop
pop
cmp
cmp
mov
cmpb
mov
mov
lds
ret
leave
in
mov
mov
lods
test
out
or
and
pop
and
call
push
addr16
cmp
mov
ds
cmc
jmp
xor
movsl
dec
ss
mov
rclb
inc
cmpsb
ret
dec
ret
mov
test
jle
sbb
jno,pt
out
inc
sbb
cli
dec
rcll
rcll
data16
pop
or
cs
xchg
shll
daa
sbb
inc
and
push
add
mov
inc
and
outsl
aad
outsb
dec
insl
push
iret
xchg
xchg
jns
movl
in
in
shlb
and
mov
mov
fwait
mov
inc
push
fmul
psllw
sbb
push
test
mov
dec
fmull
fdivrl
dec
ds
lcall
popf
imul
dec
jle
js
stos
loop
inc
mov
mov
sub
sbb
repz
mov
movsb
dec
jle
add
rcrb
xchg
xchg
jae
xchg
jno
inc
lods
xor
cmp
fadds
mov
aas
fcmovu
dec
sub
outsb
out
dec
test
push
adc
push
push
mov
sbb
lcall
enter
and
jle
out
aad
push
inc
adc
adc
orb
ljmp
mov
aaa
xor
push
xor
sarb
mov
xchg
test
jb
into
inc
jle
cwtl
sbb
lret
lret
test
jmp
jle
fsubrp
cmpsb
iret
orb
mov
or
repz
jle
xor
clc
out
scas
movsb
pop
mov
insb
push
mov
mov
sub
add
test
shl
cmp
cmp
js
sbb
cmp
xchg
out
xchg
sbb
push
dec
gs
xchg
push
ret
jecxz
xchg
outsb
clc
filds
movsl
xchg
xchg
sti
and
cmp
inc
jnp
push
fistps
dec
adc
adc
pop
mov
aaa
push
cmp
pop
ja
iret
int3
sub
jle
cmp
xor
lods
jle
fisubs
mov
rcrl
sub
mov
adc
sbb
fs
push
test
mov
fwait
and
fiadds
push
pop
add
mov
outsl
mov
sbb
cwtl
clc
cmc
shlb
arpl
loop
out
psrlq
testb
out
mov
push
pop
push
jo
lret
jecxz
lods
in
xor
jb
iret
mov
in
fnstcw
mov
test
ret
sbb
enter
js
or
dec
dec
inc
mov
or
stc
inc
cmpsl
rorb
std
popa
pop
outsb
and
fsub
push
icebp
rol
push
outsb
sbbb
es
and
mov
dec
iret
outsb
iret
stc
and
and
lea
in
mov
xchg
lock
cmp
mov
mov
pop
dec
cmp
adc
and
cmp
cmp
or
cmpsl
int
scas
push
lahf
nop
out
in
jbe
fdiv
rcrl
in
jmp
fidivrl
in
inc
lea
sbb
icebp
aad
lods
push
xchg
in
icebp
test
aaa
mov
mov
or
adc
pop
daa
cwtl
enter
xchg
imul
mov
cmp
pop
xchg
jmp
lret
adc
sbb
push
int3
pop
mov
rcll
ss
fdivl
mov
and
cli
dec
ja,pn
out
lods
adc
out
daa
imul
icebp
lock
jmp
repz
push
dec
testl
jne
popa
push
mov
jmp
mov
cli
add
loop
imul
inc
sbb
out
inc
lods
pop
stos
sbb
push
movsl
imul
fs
fs
cmpb
adc
adc
inc
shll
mov
pop
jge
shl
mov
cmp
es
movsb
adc
xor
inc
movsb
lahf
stc
in
inc
and
out
jecxz
jnp
jle
push
out
pop
add
or
je
sahf
out
cmpsb
jno
mov
int3
lret
sbb
ja
inc
call
push
popf
inc
dec
xor
xor
mov
adc
stos
hlt
mov
xor
jo
adc
lret
sbb
xchg
ficompl
mov
lock
and
aaa
insb
sarl
cmp
sbb
jns
in
xchg
mov
aas
subw
gs
das
out
out
iret
sub
cltd
adc
xchg
in
inc
test
adc
adc
jmp
push
repnz
movsl
sbb
lcall
push
mov
and
rolb
fcos
adc
mov
jmp
push
ja
or
mov
push
shrb
sbb
pushf
int
mov
inc
pop
shlb
sbb
sub
loope
and
mov
jg
icebp
rcrb
xchg
dec
mov
or
repz
and
xor
and
pop
cmp
ja
call
orb
lret
cwtl
mov
push
add
pushw
or
push
std
mov
sub
sub
fistpl
add
addr16
es
or
in
jle
push
decb
mov
cmpsl
shrl
add
setb
mov
sub
pop
lds
lret
push
mov
repz
ret
mov
pop
pusha
dec
inc
xlat
lret
pop
leave
sahf
outsb
xor
mov
pusha
xchg
or
testl
xchg
ret
dec
pop
xchg
gs
ret
mov
xor
shll
push
clc
orl
ret
aaa
fucomip
fnstenv
jecxz
push
mov
pop
lock
adc
dec
ljmp
cmp
jbe
push
sahf
cmpb
inc
jb
push
mov
pushf
int
mov
pop
pop
and
or
nop
jmp
cmp
and
call
int3
sbb
orb
cmp
and
mov
xchg
nop
mov
xchg
xor
mov
dec
addl
and
addr16
sub
jnp
mov
mov
insb
pusha
sbbl
sbb
hlt
out
fs
mov
es
push
cmp
sub
stos
lods
jl
push
in
and
outsb
test
aam
aaa
dec
gs
movsl
cmpsb
mov
clc
pop
xchg
out
add
in
cmp
lcall
out
or
add
push
addr16
lods
lret
mov
mov
sbb
xor
pop
inc
arpl
lcall
or
mov
mov
pop
adc
out
cmpsb
dec
xor
push
jnp
stos
cmpsl
pop
push
mov
iret
mov
push
dec
add
jb
mov
rdpmc
push
and
stos
jbe
adc
pushf
test
mov
sbb
ljmp
les
jmp
les
mov
cltd
cmp
es
js
lock
sti
push
sub
adcl
jg
adc
and
push
loop
shrb
movsb
scas
fpatan
xlat
adc
loope
dec
cld
mov
pop
loop
jp
push
nop
inc
shlb
shr
adc
hlt
hlt
inc
jae
jns
mov
mov
sbb
test
pop
in
ret
xor
add
cwtl
movsb
repnz
lret
fistps
mov
out
pop
jbe
sbb
mov
fsubrs
adc
lods
sbb
inc
pop
add
out
xor
cltd
dec
inc
xor
push
xor
stos
outsl
insb
mov
insb
sbb
sub
pop
sbb
or
adcb
iret
rep
and
enter
lods
push
in
mov
sti
or
mov
fwait
cmpl
jne
and
test
call
test
dec
mov
pusha
jmp
xchg
sbb
sbb
xlat
call
adc
xor
ret
add
push
out
mov
mov
xchg
cmp
mov
sub
enter
fwait
arpl
and
cmp
xor
push
cmpl
shrl
xor
je
sbb
arpl
mov
mov
mov
xchg
or
mov
fs
sub
cmp
dec
les
insl
sbb
out
cli
mov
and
adc
ror
or
or
std
shll
mov
xchg
xchg
dec
push
jnp
xor
mov
cltd
adc
add
repnz
out
mov
out
push
movsl
xor
cmpsb
mov
adc
xlat
movsl
scas
test
shrl
repnz
push
mov
test
mov
and
xorl
stc
mov
dec
pop
fdivs
inc
adc
jbe
fbld
aaa
xlat
pop
in
nop
mov
mov
xchg
pushf
pop
push
jae
cmp
xor
jl
mov
jmp
popf
adc
xor
mov
mov
mov
in
push
cmp
lods
filds
push
lods
daa
in
adc
adc
push
sti
inc
test
push
or
imul
jmp
xor
movsb
rorl
ss
sub
cli
inc
mov
mov
test
push
bound
int3
or
notl
lret
outsl
ret
sbb
sub
pop
fwait
aam
stc
xchg
popf
subb
filds
dec
push
cmp
lds
test
arpl
mov
shl
js
push
push
out
push
pop
fidivl
xchg
sub
xor
mov
sbb
ficomps
jo
jl
push
xchg
mov
cmp
pop
fsubs
or
repz
jmp
inc
pushf
push
push
lret
imul
inc
test
xorl
shll
pusha
bound
jo
mov
in
dec
pop
and
dec
stos
icebp
mov
mov
cltd
jl
dec
pop
pusha
enter
xor
dec
mov
mov
and
cltd
lea
cwtl
call
mov
lods
and
mov
out
in
repz
lret
out
adc
adc
jne
cmp
and
test
aaa
scas
inc
add
cmp
jl
loop
jmp
sbb
cmp
or
aad
notb
jbe
jo
in
cmpsl
inc
cmp
int
imul
xlat
or
dec
inc
push
jmp
dec
jb
inc
aas
lea
mov
fldl
xor
push
cmp
push
fwait
lock
adc
push
or
sbb
mov
add
outsb
dec
stos
pop
cli
xlat
cmp
sbb
repz
mov
neg
rcrl
lret
mov
pop
imull
adc
cmpsl
jae
pop
jne
inc
mov
mov
movsb
cmp
ljmp
sub
mov
fstps
cmc
sub
jmp
fucompp
mov
mov
mov
sbb
pop
into
jmp
mov
int3
xor
cmc
xor
jo
xor
bound
orl
push
sahf
arpl
mov
pop
out
lret
inc
inc
pop
inc
out
sahf
mov
mov
addr16
push
mov
int3
pop
mov
sbb
ret
enter
xorl
in
fists
inc
stos
pop
push
out
jle
jle
pop
rcr
jne
dec
out
mov
mov
aad
loopne
popf
or
insl
ss
cmp
mov
fwait
out
cs
test
sub
icebp
movsl
add
mov
jp
dec
inc
inc
ja
jmp
ss
pop
pop
andb
repz
mov
push
lret
call
lea
movsb
insl
mov
xchg
int
insb
or
jb
sub
jp
sti
sub
lods
shl
outsb
fbld
cmc
rcrl
fcoms
dec
add
jmp
lahf
sbb
aas
dec
mov
sbb
lds
or
int3
jae
mov
addr16
gs
and
mov
or
sbb
mov
push
jno
imul
fnstcw
repz
insl
add
push
or
lret
sbb
xor
fsubrs
xchg
xchg
nop
popl
lods
jp
hlt
out
repz
lret
mov
lcall
in
jp
pushf
je
pop
shrl
ficoml
aaa
fdivrs
in
std
pop
orl
mov
out
and
dec
outsl
into
xor
jmp
flds
stos
out
mov
gs
in
fs
jbe
lea
pop
mov
jge
pop
sbb
xor
xchg
outsb
je
push
mov
imul
subb
cmc
jp
push
in
rcl
dec
into
movsb
jmp
and
and
add
dec
dec
mov
cld
addr16
sub
pop
ficomps
lods
ds
push
xchg
imul
mov
push
sub
mov
lcall
sub
sub
sbb
pop
fmul
and
adc
js
or
out
push
fcompl
cmp
adc
xchg
xchg
fwait
inc
inc
imul
jo
mov
test
adc
sub
sbb
daa
out
imul
mov
push
mov
aam
mov
call
xchg
popf
or
push
adc
lock
adc
and
leave
add
jge
psubusw
cmpsl
cld
jno
scas
jle
out
lock
les
mov
fcompl
mov
mov
mov
xlat
sti
mov
cmp
arpl
daa
dec
or
movsb
dec
dec
sub
jns
jecxz
test
or
aam
or
sbb
mov
mov
frstor
and
and
push
fwait
adc
cltd
jmp
insb
fstl
out
inc
pop
loope
fistpll
gs
call
mov
inc
fdivl
jle
arpl
or
ja
scas
rcll
in
outsl
sbb
pop
lea
jo
lret
movsb
sbb
faddp
lods
outsl
adc
cmp
xchg
mov
xchg
push
dec
xlat
sbb
call
push
cmp
test
stos
push
ss
ret
ss
clc
fisubs
mov
and
pop
mov
push
push
les
jle
sub
popa
pop
jne
dec
fsts
mov
xchg
mov
mov
clc
repz
jae
dec
in
adc
xchg
xchg
xchg
pusha
fcomi
add
xchg
pusha
jb
add
inc
inc
fmuls
xor
inc
or
cld
cmp
pop
and
add
stc
inc
xchg
dec
sub
or
loope
scas
pushf
mov
aam
push
cwtl
lret
pusha
loop
mov
insl
enter
xchg
fisubs
add
or
ret
inc
sbb
xchg
push
jae
pushf
stos
xchg
out
inc
es
and
orl
mov
movb
adc
sahf
dec
xor
push
mov
mov
add
xchg
xchg
xchg
fcoml
xor
rolb
insb
inc
fwait
pop
xor
lahf
inc
cmp
dec
shlb
xor
sarw
loope
ljmp
out
add
dec
daa
push
sbb
repz
gs
mov
cmpsl
and
dec
inc
sub
iret
jae
les
or
inc
ja
push
sbbl
loope
dec
cli
inc
push
roll
jb
adc
aam
aaa
dec
loopne
add
jp
xchg
int3
fcmovnu
lods
std
addr16
sbb
xchg
rcll
scas
leave
xchg
cmpsl
pop
int3
ja
pop
aam
mov
jecxz
lods
adc
pusha
inc
sbb
push
xchg
dec
aas
std
pop
mov
popa
cmpsl
icebp
dec
add
lret
mov
inc
je
loop
std
cmp
inc
or
fidivrl
insl
sti
cld
iret
jg
out
add
sub
and
add
inc
cld
int
jne
popf
fldenv
lahf
loope
sub
shlb
imul
xor
ret
mov
mov
test
scas
movsb
xor
fcoms
inc
movsl
daa
stos
pop
jnp
mov
push
lahf
inc
jge
test
mov
je
shrl
and
mov
out
jge
es
enter
sub
arpl
sub
test
mov
lock
push
or
and
lret
dec
cmpsb
or
dec
mov
xchg
inc
ret
or
inc
out
fcmovne
rdtsc
fwait
sti
fsubrl
mov
or
pop
scas
push
fstpl
push
push
ret
test
mov
cmpsb
dec
pushf
sbb
lds
mov
ret
or
push
imul
inc
jge
popf
jg
sub
or
cmp
push
popa
mov
insl
pop
scas
add
or
or
pop
pushf
and
imul
mov
mov
movsb
lods
insb
cmc
rolb
and
jae
ret
add
jp
pushf
mov
fcoms
rorb
in
imul
inc
hlt
lock
iret
repz
and
std
or
add
test
lret
fmull
dec
sti
out
stc
in
in
adc
xchg
xchg
in
rorb
cltd
in
shr
popa
mov
shl
bound
push
fidivrl
in
dec
cmp
push
movsl
xchg
lods
aas
out
enter
test
mov
das
lahf
push
mov
sahf
sbb
xor
sahf
jg
add
mov
push
pop
inc
sub
ds
pusha
negb
int3
push
cltd
fiadds
push
lds
inc
sbb
movsl
xor
in
pop
pushf
and
test
cmc
pop
movsb
enter
cmp
lcall
addr16
add
imul
loopne
rcrb
jno
and
inc
outsb
and
inc
mov
jb
mov
mov
in
mov
aad
lret
mov
mov
mov
and
push
xor
movsl
jmp
lahf
pop
cld
shrb
push
mov
or
ds
imul
adc
cmp
dec
lods
pop
movsb
adc
inc
mov
jnp
aaa
leave
push
lds
or
insl
or
mov
push
inc
jmp
mov
sahf
cld
mov
fldt
sahf
shlb
popa
jnp
or
push
les
xchg
xchg
enter
or
loope
jae
fdivs
mov
mov
ret
inc
pusha
lods
pop
rcl
xor
inc
dec
add
aaa
mov
jo
xchg
stos
shll
out
imull
cmp
outsb
xlat
pop
subl
or
pop
xor
leave
mov
cmpsb
xlat
enter
jg
mov
inc
std
xor
pop
add
cmp
mov
addr16
mov
pop
movsb
push
mov
mov
inc
xorb
aas
inc
cmp
mull
inc
sub
sub
into
inc
or
in
jbe
mov
lods
inc
jno
cmp
fdivr
mov
or
lahf
imul
and
xchg
fdivs
xlat
sub
mov
pop
add
test
in
in
xor
pop
enter
cmp
pushf
addr16
cmp
push
xor
lods
xor
shrb
add
je
pop
adc
in
ja
sti
xchg
pop
xchg
or
mov
mov
add
cmpl
mul
xchg
mov
pop
adcl
test
test
lods
push
push
sti
mov
push
adc
xchg
adc
xchg
pop
aam
test
mov
mov
mov
out
test
inc
ret
lock
jge
xchg
sbb
cmp
or
add
fstps
push
int
hlt
pushl
pop
pop
cmp
in
push
sarb
fcomps
movups
std
and
ret
pop
arpl
orb
pop
fcoms
cwtl
into
int
test
pop
mov
fdivrs
jne
sub
or
ljmp
lods
gs
test
xor
push
pop
icebp
cli
ficoms
dec
pop
scas
les
mov
mov
inc
nop
mov
jecxz
mov
xchg
std
xchg
mov
fdivs
jg
cwtl
jle
repz
ret
shr
push
adc
jne
jno
mov
cmp
add
xchg
mov
out
enter
add
push
insb
sbb
bound
cmp
sub
mov
repz
fistpll
jmp
mov
push
sbb
inc
xor
mov
pop
out
jns
cwtl
mov
add
mov
shrb
out
stos
lcall
mov
fs
xor
into
js
xchg
out
mov
mov
lods
adc
icebp
pusha
dec
xor
or
pop
dec
cmc
jmp
cmp
mov
int
nop
mov
cmp
aam
inc
repz
push
mov
cwtl
loop
sahf
mov
mov
andl
imul
lahf
jle
lret
xor
jecxz
data16
into
cli
pop
mov
std
fcoms
push
jb
fisubs
ja
jg
or
rorb
insl
xor
jb
lret
cwtl
js
add
sbb
fdivrl
movsl
jmp
test
insb
rcl
sub
loope
mov
leave
mov
lea
lds
lock
push
rcrb
push
mov
hlt
push
inc
shll
into
or
mov
outsb
nop
mov
push
lahf
or
movsl
lods
loop
shl
sahf
std
push
loopne
bound
push
mov
mov
jmp
movb
sbb
mov
mov
inc
jbe
test
or
out
cmp
jmp
mov
mov
xor
mov
data16
int3
loope
sbb
icebp
pop
imul
gs
push
mov
jno
icebp
sub
push
icebp
cmc
xor
arpl
sbb
cltd
mov
js
mov
cmp
push
enter
fwait
dec
iret
dec
fstps
add
mov
mov
cmp
dec
leave
cmpsl
mov
arpl
cltd
stc
sti
mov
pop
sbb
std
idivb
repz
stos
mov
in
rcr
in
mov
stos
frstor
pusha
mov
xor
xchg
and
cli
addb
pop
jae
mov
pusha
mov
xor
jns
push
test
adc
xchg
push
pop
jmp
xor
out
shlb
mov
dec
jnp
adc
call
xchg
jmp
mov
rorb
dec
and
call
mov
into
int
std
loopne
lods
or
aad
andb
jg
push
cmp
pushf
adc
mov
jge
cmp
mov
lret
lcall
pop
inc
xchg
or
lahf
fsub
cmc
insb
push
les
xor
aam
int
mov
or
sub
lret
xchg
push
fwait
cmp
cmp
mov
mov
clc
and
add
adc
inc
into
daa
aam
xor
hlt
sub
mov
int3
ja
out
fnstcw
xor
scas
movsb
mov
and
jl
std
mov
sbb
or
popa
cwtl
xchg
movsl
test
bound
imul
push
cmp
sbb
push
das
in
bound
bound
xchg
mov
sub
inc
adc
bound
cli
bound
dec
mov
inc
cmp
ficoms
mov
lods
xchg
mov
pop
imul
js
scas
not
loop
push
inc
xor
push
xor
mov
inc
ds
inc
or
jmp
hlt
pop
xorl
ret
mov
mov
xor
inc
cmp
es
inc
mov
sbb
cmp
pop
jb
push
sub
bound
push
lea
add
sub
add
push
push
pop
mov
dec
push
add
pop
pop
leave
call
insl
lea
test
add
mov
sub
push
xchg
int
test
mov
and
and
fiadds
pop
test
push
jno
clc
mov
jmp
punpckhdq
push
mov
lods
sbb
jno
dec
mov
scas
fdivrs
add
add
sbb
push
divb
jecxz
cmc
pop
aas
es
leave
popa
inc
gs
dec
scas
and
xlat
mov
add
ds
push
popf
mov
sbb
gs
push
hlt
pop
into
xchg
sbb
adc
jmp
es
ja
loop
or
jmp
mov
pop
pop
bound
sbb
imul
outsl
mov
jbe
and
adcl
pop
inc
lret
fdivs
xchg
lcall
push
push
sub
or
jmp
scas
jl
xchg
and
lahf
add
or
pop
push
xchg
jecxz
inc
cmp
jns
pop
adc
add
lock
fdivp
addr16
dec
push
inc
mov
decb
xchg
and
in
or
popf
call
sub
scas
jmp
jae
mov
bound
xor
mov
lcall
nop
pop
shlb
mov
popf
or
xchg
mov
lds
mov
nop
rcrl
and
popa
aam
lds
xchg
in
dec
ss
adc
andl
xlat
jno
fs
test
adc
inc
pop
mov
int
das
neg
mov
lods
adc
push
and
jno
arpl
imul
push
push
xor
mov
sub
cmp
int3
movsb
jle
xor
sbb
cmp
and
mov
cmpsb
xor
lcall
xchg
xor
inc
lock
imul
pop
lods
cmp
dec
gs
pop
inc
mov
lds
pop
pop
mov
in
rcrb
xchg
mov
mov
scas
xor
sbb
inc
cwtl
inc
jbe
jmp
jb
cmpsl
pop
and
hlt
cltd
cmc
inc
lea
ja
xorb
mov
or
clc
xchg
mov
adc
push
fwait
pop
test
loop
sub
adc
nop
js
ficomps
adc
es
negb
add
xchg
repz
push
jecxz
das
or
int3
push
das
pop
and
int3
sbb
mov
or
lock
lret
adc
out
bnd
inc
pushf
cmp
mov
lods
xchg
sub
pop
cltd
add
ljmp
push
xchg
shrb
push
shlb
mov
and
and
lods
add
jecxz
push
sbb
and
inc
iret
add
sub
and
pop
sub
lret
cwtl
inc
xchg
pop
lahf
jge
cmp
add
xchg
or
mov
dec
cmp
js
add
jmp
jne
inc
and
addr16
jns
sub
mov
insl
sbb
fldt
mov
ja
in
movl
adc
fstpl
cs
js
data16
adc
nop
lods
fsubl
test
aas
out
ss
test
aaa
movsl
sub
mov
test
popf
or
jg
cmp
cmpsl
adc
sub
scas
test
and
xchg
sbb
sahf
pushf
leave
jp
and
lods
test
inc
pop
or
push
jbe
lea
jnp
mov
lret
inc
push
ss
add
in
jmp
dec
and
test
sbb
xor
stc
pop
push
sbb
mov
iret
mov
jb
ret
stos
dec
lcall
ja
adcl
or
in
jno
nop
xchg
inc
repz
adc
jnp
pop
dec
push
fwait
sub
ss
xor
loope
dec
loope
mov
sbb
cli
divb
dec
wbinvd
jno
ljmp
iret
and
xchg
notb
xchg
test
out
hlt
fwait
movsb
repnz
fcmovnbe
pusha
in
sub
ffreep
aam
mov
cmp
fldcw
movsl
lahf
pop
mov
and
dec
sahf
mov
xchg
mov
pop
pop
mov
cltd
push
cmp
mov
add
ljmp
mov
ja
or
stc
test
clc
dec
push
gs
cmp
add
fisubl
lea
dec
add
mov
addb
xor
enter
adc
int3
pop
outsl
nop
arpl
jno
pop
pop
es
into
movsl
ds
sub
ss
insb
mov
mov
repnz
cmp
cmp
loope
or
pop
mov
add
or
std
scas
movsb
call
adcl
ss
mov
push
inc
add
aaa
rclb
fs
sti
ljmp
push
xor
popa
inc
push
in
cmpl
xchg
xlat
xor
xor
sbb
daa
sahf
scas
or
adcb
gs
jmp
fldcw
bound
loop
push
imull
in
fwait
outsb
gs
jb
mov
sbbl
xchg
out
jmp
dec
xor
hlt
fldenv
mov
jo
sub
nop
jg
add
xor
ja
sub
fistpl
ret
mov
xor
push
test
mov
jle
fsubr
pop
jmp
inc
cmp
pop
in
xchg
mov
push
out
pop
in
cmpsb
mov
sub
loop
fsubs
cli
sbb
fs
jmp
les
bnd
push
xlat
lds
dec
divb
cmc
loope
ss
imul
ret
mov
test
add
in
jns
into
ja
push
sub
and
cld
push
cmp
loope
das
lahf
jo
push
mov
lret
cmp
scas
inc
jne
repnz
rclb
jge
push
cmp
arpl
dec
xorl
rcrb
pop
dec
out
ret
fstpt
stos
inc
ret
adc
popa
shrb
push
cli
sbb
push
dec
sbb
pop
test
push
cmp
loopne
push
mov
xor
sub
adc
loope
add
fists
xchg
lock
pop
in
adc
cmp
push
inc
cmpsb
mov
xor
pop
mov
nop
nopl
movb
mov
or
mov
jp
xchg
ja
inc
dec
jmp
and
insl
xchg
pop
fiadds
lret
scas
jecxz
in
shl
cwtl
out
call
mov
add
dec
jnp
pop
and
in
aam
insb
jne
cmp
fsubrl
mov
in
dec
lcall
sahf
scas
stos
or
jns
adc
jbe
gs
leave
in
fimuls
mov
je
pop
xchg
call
inc
adc
push
jg
add
cmp
push
mov
inc
out
add
jnp
hlt
shll
mov
push
push
pop
add
jnp
and
jmp
aaa
add
