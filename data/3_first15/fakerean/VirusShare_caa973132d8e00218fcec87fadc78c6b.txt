sbb
add
mov
xchg
mov
dec
stos
imul
sub
push
add
push
push
sbb
mov
sub
jno
mov
lret
enter
jmp
xchg
push
jnp
loope
incl
jae
cmp
repz
dec
jecxz
inc
les
pop
stos
inc
push
icebp
cmpsb
sbb
pop
sbb
out
fidivrl
pop
or
stos
sub
mov
adc
lret
add
imul
add
xchg
enter
mov
adc
scas
sbb
ss
adc
int
pop
and
adc
lret
int
rclb
xchg
dec
and
icebp
mov
xlat
aad
adc
inc
or
pop
mov
out
adc
and
shrl
dec
sbb
push
mov
stc
mov
mov
gs
or
fbstp
cmpsb
addl
mov
leave
xchg
or
in
sarb
call
jnp
gs
data16
push
mov
sbb
cmpsb
in
imul
jecxz
and
inc
jno
adc
push
mov
cmp
sub
repz
fistpll
push
xor
or
ret
push
sbb
mov
pop
pop
cmp
daa
cmp
ret
call
jne
sbb
dec
mov
subb
rcll
mov
cmp
pop
sub
mov
das
in
sub
fbstp
outsb
dec
fidivl
jl
push
out
pusha
xchg
stos
sub
or
mov
daa
std
and
pushf
mov
mov
cmpb
pop
dec
mov
dec
xchg
xor
sub
fistl
mov
movsb
adc
pop
or
add
cmp
adc
inc
pop
jmp
push
cmpsl
xor
push
jb
mov
test
stos
sub
cmpsl
add
mov
cmp
inc
jne
adc
push
in
test
out
xor
or
pop
cmpl
lret
into
mov
rcll
sub
jg
inc
xchg
pop
nop
and
lods
jnp
ja
sub
mov
das
out
dec
pop
loop
ja
jle
xchg
adc
or
inc
ret
or
xchg
jbe
mov
mov
sbb
xor
rorl
pop
sub
xchg
pop
ss
sbb
jmp
scas
dec
pop
push
jns
fsubrl
mov
sbb
mov
dec
push
adc
and
pop
in
dec
dec
in
lds
in
mov
jge
loope
dec
cmp
jl
xor
adc
jbe
call
and
loop
push
xchg
pop
out
mov
dec
dec
jg
add
xchg
mov
repnz
stos
lock
dec
or
sbb
jge
movsl
mov
xor
and
mov
sbb
jno
aam
std
sahf
and
mov
je
dec
cmp
and
jno
ret
sti
inc
in
repnz
clc
xchg
or
insb
xchg
clc
cmp
pop
xchg
cwtl
jge,pn
in
push
mov
pop
fmuls
in
fidivl
pop
add
mov
cwtl
aaa
sub
movsb
gs
adc
and
loop
dec
mov
ror
cmp
test
or
inc
mov
xchg
adc
cs
dec
mov
push
xchg
jnp
js
into
sbb
push
adcb
jge
les
xor
adc
mov
loope
lahf
add
or
les
lods
daa
pop
sbb
outsb
inc
mov
or
loopne
pop
movsb
mov
in
mov
es
adc
stos
aam
push
cltd
push
mov
jno
loop
daa
jnp
aaa
xlat
push
inc
pop
adc
fcompl
out
pushl
mov
adc
lea
ret
es
arpl
cmp
and
push
cmp
sti
shrl
adc
jns
dec
stos
push
lahf
movsl
jl
jns
stos
cmp
cs
push
push
dec
stos
jge
push
ja
adc
add
hlt
xor
mov
pop
jo
pop
jne
mov
sbb
fs
cmp
push
mov
cmp
bound
loopne
mov
aas
mov
mov
push
fcoml
imul
adc
leave
mov
mov
test
pop
mov
xchg
pop
pop
in
loope
int
and
in
out
inc
clc
mov
in
and
data16
ret
mov
out
inc
mov
shrl
adc
push
pop
pop
and
ss
mov
fbstp
hlt
mov
and
sbb
inc
pop
push
or
sub
jle
cltd
leave
and
hlt
and
mov
je
in
push
xchg
push
loopne
aas
ljmp
sbb
loope
xchg
data16
sub
icebp
lds
movsb
sbb
stc
add
push
pushf
mov
lret
or
movsb
in
or
inc
xorb
push
aas
inc
test
fiadds
sbb
inc
fiadds
scas
test
rorl
push
xor
idivl
andl
xchg
push
repz
mov
fs
repz
fs
push
fsubrp
call
scas
inc
loope
movsl
jge
fdivs
mov
sub
in
or
sbb
push
xchg
addr16
mov
mov
dec
repz
ficoms
cmp
add
sti
les
mov
xchg
and
aaa
xchg
sbb
scas
mov
scas
icebp
cmp
jge
jne
and
imulb
lock
mov
push
or
pushaw
repz
out
pop
add
or
mov
lret
and
insl
push
mov
outsb
inc
pop
mov
pop
inc
push
shrl
cmc
insb
push
fimull
adc
sbb
inc
les
push
cmp
lcall
stos
fmull
ret
mov
into
ret
pop
ja
adc
or
mov
flds
xor
loopne
aaa
xchg
fs
sub
int
jno
xchg
mov
out
fs
push
xor
push
cmp
cwtl
sbb
leave
cmp
es
paddsb
addr16
out
mov
loopne
leave
mov
push
cwtl
jae
mov
mov
mov
mov
and
aas
pop
add
fildll
scas
and
mov
mov
sbb
in
jae
or
jmp
std
and
pop
jo
sub
sbb
xchg
hlt
dec
inc
pushf
mov
xor
in
and
cmp
sahf
inc
add
jns
repnz
std
and
mov
adc
mov
in
or
xchg
lcall
mov
dec
stos
cli
pop
movsl
int
les
cli
and
mov
aaa
imul
cmovge
dec
sub
addps
pop
imul
shlb
loop
and
adc
push
add
pop
movsb
jl
lods
add
pop
mov
stos
sbb
jo
lret
test
pop
repz
pop
in
add
xor
lahf
push
push
decl
jle
aas
and
inc
adc
in
lods
dec
push
add
cmp
push
test
test
push
scas
mov
jle
lahf
ss
jp
sub
inc
jne
xor
adc
mov
jecxz
add
pop
sahf
das
add
mov
mov
rcr
pushf
insb
mov
sti
mov
mov
mov
int
fs
inc
cli
imul
arpl
mov
sub
subb
ret
jb
inc
out
xor
mov
in
jmp
mov
cmp
jno
in
dec
mov
lods
cmpsb
shr
cmp
xor
xorb
loopne
cltd
adc
rep
xchg
mov
daa
xor
sarb
mov
mov
out
xor
popf
arpl
imul
xlat
testl
or
sub
aaa
push
inc
sahf
fiaddl
pop
adc
mov
scas
pop
movsl
dec
ficompl
imul
icebp
push
push
scas
inc
pop
lret
jmp
filds
sti
dec
pop
xchg
inc
inc
sbb
dec
sub
int3
or
fs
imul
push
lea
inc
repnz
and
cmpsl
or
movsl
dec
xchg
xchg
add
mov
mov
stos
jmp
pop
ljmp
add
mov
inc
sub
cld
mov
push
cmpsl
or
out
mov
popa
jnp
dec
punpckhbw
pusha
cmp
ret
popa
lea
inc
lcall
xchg
mov
and
xchg
popa
mov
int
mov
pop
mov
imul
imul
adc
mov
cmp
stos
imul
test
pop
xor
xchg
lock
sub
add
fmulp
scas
lret
sbb
mov
add
insl
ret
addr16
cmp
sahf
inc
xlat
jno
leave
xor
sub
cmp
in
xchg
je
jg
shr
aaa
jp
aad
sbb
push
fdiv
testb
clc
adc
ljmp
xor
adc
inc
pop
sbb
outsl
pop
jnp
ret
sub
popa
outsb
ror
decb
mov
push
cmpsb
cmpsl
sbb
pop
cmp
aaa
ret
lahf
lret
mov
sbb
xchg
ja
in
xchg
imul
adc
popf
mov
cmp
aam
cmp
ds
rcrl
mov
mov
mov
test
pop
nop
lret
shll
pusha
push
jp
fldcw
stc
cltd
sti
leave
dec
popa
fisttpl
rorb
in
lahf
push
flds
rolb
xchg
negb
out
repz
movsb
shlb
shrl
enter
fs
pop
bnd
jge
push
cmc
aad
xor
push
jne
and
push
mov
sti
xor
push
mov
sub
test
xchg
aad
jmp
and
mov
call
daa
push
js
cwtl
stc
adc
psllw
sbb
sub
arpl
xchg
mov
iret
xor
xchg
fwait
stos
jecxz
leave
and
outsl
adcl
lds
aad
mov
push
xchg
dec
outsl
or
cmp
out
mov
sub
sti
sub
outsl
sbb
adc
fildll
adc
xor
andl
test
push
mov
or
daa
xor
cmp
aaa
mov
loop
push
cmp
jae
mov
test
xor
int
push
push
aas
test
insl
lcall
cmp
xchg
inc
imul
xor
pop
mov
ror
imul
aaa
mov
cmp
test
out
jg
enter
adc
cmp
push
sbb
jle
add
aam
imul
hlt
jmp
mov
shrb
iret
or
mov
pop
push
push
jp
dec
lret
inc
lock
sub
cmp
mov
mov
and
sub
jo
shlb
int
je
hlt
mov
pop
ljmp
mov
or
push
inc
push
in
jp
pop
test
rorb
add
jno
scas
scas
movsb
sti
orl
std
cmpsl
mov
sub
inc
adc
and
or
fmuls
fiaddl
aas
das
sbb
stos
scas
pop
dec
push
sbb
pop
or
pop
ja
call
clc
int3
in
sbb
scas
jnp
jmp
iret
inc
fisttpll
pandn
xchg
and
fwait
dec
and
arpl
xchg
inc
cltd
push
ds
mov
sbb
fimull
call
aad
cmp
or
je
stos
mov
cs
cmpsl
jno
add
bound
movsb
fstpl
dec
jns
add
leave
or
andb
cs
xchg
push
lea
and
data16
add
cmc
inc
push
scas
imul
sar
xchg
cmp
mov
mov
cli
je
lea
mov
mov
fnstenv
push
maskmovq
jbe
xchg
jmp
sub
mov
shll
pop
cmp
pop
xchg
mov
aam
punpcklbw
xor
fistpl
mov
add
pop
in
into
leave
ljmp
ret
shl
mov
push
mov
repz
subl
add
jnp
jb
out
xchg
pushf
push
lock
xchg
mov
data16
lods
push
ljmp
cmpsl
push
int
arpl
cld
imul
add
pop
cmp
ja
test
push
inc
mov
mov
inc
dec
aaa
xchg
push
call
xchg
popa
mov
cmp
xor
adc
stc
mov
jbe
mov
or
icebp
mov
push
aaa
rcrb
mov
sbb
mov
push
repnz
aas
mov
adc
jno
mov
and
jmp
pop
sub
xchg
stc
pop
and
push
lods
inc
leave
mov
out
ror
dec
insb
and
test
clc
xor
aam
jle
lock
movsb
or
push
pop
add
sub
aam
jns
out
stos
mov
or
adc
mov
mov
cmp
sbb
mov
pop
lret
mov
add
les
xchg
dec
push
lret
sti
sbb
fiaddl
mov
push
xchg
mov
add
outsb
out
push
clc
fisttpl
ret
dec
mov
dec
scas
push
cmp
dec
cmp
test
mov
out
cmp
mov
sub
pop
vtestps
ret
adc
inc
lcall
and
imul
sahf
adc
fnstcw
or
dec
push
lds
addb
mov
mov
daa
mov
jge
cwtl
pop
push
lds
out
insl
mov
imul
and
mov
jno
mov
mul
adcb
add
negl
je
jb
xorb
sarb
jns
mov
rcrl
aam
ljmp
enter
mull
and
xchg
dec
and
cmp
jl
xchg
dec
test
aas
les
es
fsubrs
jns
jg
leave
sbb
inc
dec
fcoms
int3
cwtl
jecxz
hlt
sti
xchg
dec
push
test
divl
inc
mov
xor
test
loope
scas
sbb
push
mov
mov
add
sete
dec
lock
jecxz
repz
cmp
cmp
xchg
push
jmp
jne
in
sub
not
jge
inc
loope
push
testl
mov
pop
add
push
mov
mov
jmp
fstp
sub
cmp
cmp
nop
dec
jno
in
divb
push
dec
scas
fcmove
sub
cmp
jbe
inc
dec
hlt
push
adc
scas
push
lds
das
loope,pn
xor
pushl
mov
test
mov
cmpsb
xchg
push
sub
xor
jl
aas
outsb
les
xor
dec
aaa
stc
pop
and
shll
jae
adc
test
out
mov
rcrb
push
inc
xor
dec
stos
fcom
jmp
cmp
cmp
out
xor
popf
or
cmpsb
std
sub
js
mov
adc
flds
cmp
les
xor
push
int3
int
hlt
dec
mov
xor
and
movsl
js
js
data16
xchg
pop
rcl
orps
and
movsl
ja
fs
jmp
and
dec
fwait
repnz
mov
outsl
jl
sbb
xlat
mov
popf
mov
loop
jmp
dec
xchg
cld
inc
lds
mov
push
ret
pop
inc
sub
dec
pop
jne
dec
xor
jg
das
ljmp
loope
xorb
xchg
jae
es
push
dec
pusha
mov
or
pop
sbb
mov
addl
aaa
inc
test
jle
inc
inc
or
scas
ja
mov
sti
cmp
sub
push
test
dec
inc
cmp
jmp
mov
inc
and
or
imul
mov
jbe
and
lods
out
bound
cmpsl
in
mov
dec
xor
mov
mov
mov
dec
xchg
or
scas
push
add
dec
adc
std
add
leave
sti
mov
lods
jae
insl
sahf
pop
dec
and
sub
repnz
inc
sub
inc
push
gs
jbe
in
or
lock
and
cmp
cmpsl
xor
out
fldenv
mov
fisubrl
and
mov
sub
scas
pop
lret
loop
bound
pop
pop
inc
scas
xchg
cs
xchg
out
xor
push
add
in
mov
sbb
rclb
pushf
into
lods
aas
enter
dec
inc
repnz
rorb
into
arpl
loop
test
sti
rcll
lds
stos
jns
sub
fwait
movsl
dec
mov
mov
jns
sbb
aaa
pop
fildl
stos
lret
xor
jae
stc
imul
daa
mov
stos
dec
mov
jne
cmpsl
data16
xchg
cmp
or
jg
cmp
insl
xor
xchg
test
fs
sub
xor
cs
mov
in
mov
rclb
das
add
adc
xor
jnp
mov
add
push
jb
and
xchg
jmp
xor
jo
sbb
push
shrl
xchg
or
jo
and
fwait
pusha
iret
mov
and
lret
push
aaa
xchg
popf
push
mov
ljmp
outsb
xchg
jp
das
jp
cmpsl
mov
pop
test
loop
movsl
xchg
push
add
sbb
pop
xchg
mov
xlat
shr
sbb
iret
orl
jge
push
cltd
inc
dec
or
add
aas
bnd
push
jmp
pop
std
jne
or
mov
pop
movsb
in
insb
repz
or
out
sahf
scas
dec
jbe
rcrb
ret
or
std
adc
cs
pop
mov
ret
pop
sub
push
stos
fildl
pop
pop
cmpsb
and
pushf
fs
loop
ss
cmp
pop
js
jl
arpl
dec
cmp
jecxz
out
xor
jns
push
popf
insb
sbb
call
mov
outsl
lea
adc
divl
repz
shrl
pop
xchg
and
outsb
stos
cmpsl
mov
lret
mov
mov
sarb
cmc
loope
iret
mov
push
add
add
shll
pop
aaa
fldl
fwait
cwtl
mov
and
leave
push
dec
retw
mov
sar
and
lods
sbb
mov
mov
nop
dec
xor
fstps
lods
je
cmp
and
mov
inc
sub
mov
scas
and
sbb
xor
fld1
cmp
dec
pop
es
inc
jae
cmpsb
imull
jmp
pop
jp
mov
stos
mov
xchg
mov
and
jecxz
fs
in
repnz
les
pop
add
mov
jl
inc
and
add
cmp
nop
stc
sub
cmp
idivb
cwtl
dec
lea
dec
inc
pop
shlb
xlat
cmp
mov
iret
jg
inc
inc
push
out
add
pop
dec
push
or
ss
int3
inc
fcoms
xlat
dec
and
lock
xchg
xchg
mov
sub
cld
lret
das
push
xor
mov
xchg
mov
cmc
rcr
and
xor
inc
jle
pop
test
shl
test
in
jg
xchg
adc
imul
rcrb
xchg
jae
or
adc
adc
out
mov
lods
outsl
fistpl
ud0
mov
adc
pusha
out
mov
mov
xor
xor
jp
cmp
push
repnz
inc
test
inc
or
mov
test
inc
jae
pop
or
movsb
fcompl
outsl
popa
add
test
cmp
mov
inc
pushf
xchg
flds
jnp
xchg
inc
mov
aas
jmp
inc
xchg
insl
arpl
flds
enter
jno
int3
dec
add
sub
call
mulb
or
loope
movsl
add
xor
aam
xor
mov
ds
jns
movsl
pop
xchg
mov
mov
mov
pop
dec
mov
xor
mov
insl
jmp
dec
popf
mov
sbb
inc
cmp
mov
mov
inc
in
xchg
inc
xchg
mov
jp
ror
xchg
add
sbb
sbb
std
mov
mov
jp
hlt
add
rolb
adc
aad
call
in
sahf
ficoms
jae
sarb
adc
data16
je
repz
push
dec
mov
inc
sub
or
fidivs
fwait
dec
fisttps
mov
pusha
fsubrs
nop
test
std
cs
adc
cmpsl
movsl
insl
icebp
add
dec
or
cmp
fnstenv
enter
or
lfs
sbb
fadd
fwait
jp
mov
enter
jle
decb
cmp
loopne
lret
pinsrw
dec
cmp
cmp
mov
outsb
dec
ret
mov
xchg
xchg
jecxz
push
pop
sbb
fists
popf
pop
jne
pop
mov
jecxz
push
out
xlat
push
int
or
bound
mov
cmpsb
jne
jmp
stos
cmp
jmp
mov
mov
je
and
jmp
jmp
mov
addr16
push
sub
lret
sub
or
sbb
mov
test
mov
and
lods
cmpsb
push
inc
cmc
repnz
popf
mov
out
and
jl
shll
mov
or
jmp
testl
inc
dec
or
ret
lea
imul
jne
xor
jecxz
enter
mov
xor
xchg
dec
push
mov
dec
movsl
xchg
out
push
lock
in
hlt
push
jnp
xor
lock
movsl
fnstsw
cmp
mov
xchg
xor
pop
nop
je
sub
push
and
divl
int3
sbb
push
sbb
es
ret
out
aaa
mov
aas
out
aam
movsl
ss
mov
or
aas
and
ss
xchg
jl
cmp
dec
jno
pushf
gs
sahf
sti
mov
sub
inc
mov
int3
mov
adc
dec
shrb
jmp
dec
sbb
jo
leave
xchg
adc
adc
das
adc
xor
xchg
dec
adc
cmpsl
cli
shlb
lods
subb
adc
fs
fs
lahf
sbb
sub
in
fwait
loop
mov
or
push
push
sub
jl
pop
or
aad
fimuls
xor
adc
arpl
fwait
mov
test
add
cmpsb
imul
imul
in
jns
jnp
cld
jg
call
jns
jmp
jbe
sub
stos
mov
movsl
add
cltd
ljmp
bound
xchg
or
push
loopne
or
jno
aas
cld
bound
pushf
inc
mov
movsb
js
cwtl
push
push
stos
fistpl
xchg
mov
pusha
cmpsb
fs
xor
cmp
outsw
dec
add
loope
imul
pop
js
xchg
or
adc
mov
loop
mov
cli
adc
out
jo
sub
sti
loop
push
adc
mov
shl
fs
lcall
push
fcom
out
icebp
jb
out
xor
out
out
jno
mov
push
pushf
sbb
addr16
mov
dec
xchg
inc
shl
mov
inc
push
out
jp
filds
and
outsl
pop
loopne
shlb
fs
cli
pop
inc
pusha
aam
push
in
mov
pop
std
mov
xchg
and
sub
or
push
ret
lods
gs
xchg
sbb
push
imul
adc
push
mov
add
or
cld
or
ss
xchg
lods
lods
aam
xchg
lods
push
inc
and
out
and
rorl
out
mov
pushf
out
mov
lods
repz
jmp
ja
push
cmp
sub
movsb
jbe
jb
jne
rcrb
cmp
pop
movsb
and
push
mov
pop
jge
sbb
cmp
lret
insb
inc
lret
movsb
scas
repnz
mov
pusha
fdivr
addr16
push
sbb
and
push
insb
lods
pop
pop
jg
imul
gs
dec
pop
sub
jp
repz
unpckhps
repnz
or
arpl
dec
iret
cmp
int
cmp
sub
cmp
inc
add
inc
inc
imul
push
call
les
cli
shrl
xchg
or
and
lods
cmp
mov
push
sbb
sub
or
mov
arpl
push
ret
arpl
pop
mov
jno
sti
xor
jo
jne
dec
icebp
cltd
and
add
mov
mov
push
test
popf
sub
gs
fsubrs
cmp
sbb
sbb
sub
sti
cmc
aam
test
sbb
jl
inc
cmp
sub
lcall
inc
adc
lds
adcl
call
adc
loop
sub
jmp
mov
push
pop
xchg
fwait
dec
mov
negl
sbb
xchg
cmp
lret
outsl
enter
and
sbb
out
in
mov
pop
leave
stos
int3
push
out
imulb
cwtl
push
in
fimull
in
adc
imul
int3
jb
setbe
mov
jnp
in
cmp
ret
mov
out
xchg
pop
arpl
jge
test
hlt
xor
lret
iret
mov
enter
nop
pushf
inc
mov
adc
mov
mov
xchg
mov
add
adc
sbb
imul
jge
adc
dec
pusha
adc
and
cli
inc
ja,pt
and
inc
inc
push
push
cmpsb
in
add
and
and
andl
data16
das
jnp
ss
or
push
bound
pushf
pop
cmp
xor
scas
sahf
scas
repz
imul
sbb
cmp
and
flds
push
adc
mov
mov
outsb
insb
jns
push
mov
outsb
jge
inc
and
sbb
icebp
in
push
xchg
cwtl
int3
scas
jge
cmp
or
fimull
fimull
mov
scas
xlat
cmp
push
lods
inc
jbe
mov
outsb
dec
scas
dec
dec
aas
mov
jp
jle
xchg
iret
pop
imul
push
mov
fscale
pop
sub
mov
xchg
hlt
rclb
add
adc
je
jmp
or
mov
mov
aaa
xlat
xchg
loop
pop
sbb
icebp
sbb
fcomps
dec
pop
push
sahf
or
or
test
sti
out
inc
add
pusha
outsl
cmp
inc
mov
pop
popa
test
call
insl
aad
pop
into
or
sub
dec
mov
pop
popa
jb
adc
mov
and
adc
sahf
push
inc
and
add
insb
and
push
and
dec
xchg
xchg
incb
pop
jae
insb
lea
out
sbb
jp
pop
and
sub
ja
lcall
pop
mov
fcomps
js
aad
aas
sbb
neg
cltd
add
bnd
adc
mov
or
int3
add
addb
push
ret
pop
repz
push
or
lock
ror
jge
xchg
and
xor
outsb
ljmp
inc
mov
mov
jae
ret
cmpl
xor
aam
fcmovu
cmp
pop
popl
push
pop
lahf
fcoml
dec
push
lods
lea
jnp
loope
inc
push
mov
loope
jbe
mov
sub
pusha
scas
sub
cmp
out
shrd
sbb
sub
data16
bound
mov
inc
push
xchg
sub
inc
fs
xlat
fdivs
xchg
cwtl
int3
in
das
or
mov
and
lret
pop
fcoml
in
cmp
stos
dec
jo
leave
jnp
pop
mov
cmp
nop
cli
mov
push
jnp
ljmp
das
pusha
inc
jmp
or
xchg
adc
out
mov
iret
dec
int
test
adc
add
int
inc
outsb
push
lahf
daa
gs
mov
repnz
jae
pop
jno
push
dec
lock
fldt
and
dec
roll
or
pop
aam
mov
mov
call
inc
cmp
and
dec
mov
test
xchg
or
mov
mov
push
andl
mov
test
jns
pop
ds
jecxz
mov
repnz
sub
imul
pop
loope
scas
push
stos
and
sbb
add
sbb
popa
arpl
shl
sahf
stos
push
aas
cmpsl
repnz
jle
dec
add
scas
and
mov
iret
xchg
jo
xchg
daa
xor
xor
stos
movsb
leave
aas
adc
mov
push
pusha
push
pop
loop
mov
dec
pusha
pusha
or
jg
and
inc
lods
xor
pusha
jecxz
pop
mov
enter
lcall
sbb
and
or
andnps
popf
cmpsl
lea
outsl
pop
jg
add
lds
dec
fildl
ret
add
stos
push
sbb
in
add
adc
mov
fildl
pop
xchg
mulb
or
mov
xchg
xlat
add
ret
mov
adc
xor
pop
insl
das
outsl
add
xchg
dec
icebp
mov
test
dec
or
subb
and
dec
xchg
adc
mov
ja
data16
sbb
shlb
sbb
adc
movsl
scas
xor
aam
into
pop
leave
sbb
adc
xor
adc
lcall
mov
mov
inc
pop
inc
ficoms
inc
das
sub
repz
test
xchg
sti
xor
jns
push
mov
scas
out
mov
lcall
stc
test
je,pn
stos
sub
xor
stc
addb
rolb
repnz
lock
fldcw
xor
xorb
cmc
out
sub
sub
call
jmp
lods
or
pushf
invd
ret
aas
xchg
js
repnz
inc
mov
jmp
insb
lret
pop
loopne
pushf
push
orb
mov
addb
sub
xchg
loop
addr16
addr16
movsb
jmp
dec
dec
fst
cwtl
and
pop
xor
sub
mov
and
mov
adcl
inc
dec
ljmp
pusha
sysexit
outsb
sbb
repz
sahf
test
test
or
movsb
aam
cmc
mov
lea
outsl
sub
pop
and
ret
aaa
or
mov
jo
mov
cmp
lahf
imul
lods
fdiv
aas
jns
xchg
mov
addl
lahf
pop
cmp
inc
rcr
fsubs
js
jg
mov
test
popa
daa
xchg
jbe
ds
fildll
mov
jmp
aam
push
add
lds
push
cltd
inc
sti
sub
pushl
stos
bound
nop
sub
cmp
fdivrl
xor
xor
loop
jo
push
movl
shlb
lret
insb
mov
aad
add
push
xlat
enter
dec
test
push
jl
hlt
inc
mov
sub
fsubrp
inc
jb
sub
xchg
vpslld
mov
inc
cmc
cmc
and
push
xor
negb
sbb
mov
lahf
fisubs
loop
inc
imul
jle
mov
sbb
xor
std
data16
sahf
hlt
stc
mov
subb
cmc
imul
and
xchg
push
add
enter
pop
stos
loop
das
adc
shll
fidivrl
jp
pop
mov
popa
sub
mov
push
xor
cltd
scas
pop
xchg
aad
jo
jge
or
mov
pop
cmp
inc
adc
shrb
inc
xor
mov
pusha
xlat
leave
enter
lret
xchg
or
mov
jns
int
movsl
mov
jle
push
sub
scas
aad
jb
inc
adc
or
rorb
sub
or
leave
jge
mov
mov
iret
shrb
lret
cmp
popa
or
fldl
adc
das
and
scas
cmpsb
insb
jl
lock
adc
fs
sarb
dec
add
into
mov
int3
inc
ja
jb
adc
ret
cmp
nop
mov
movsl
mov
addr16
cmpsl
mov
scas
out
lahf
push
adc
xlat
scas
add
cmpsb
test
inc
out
mov
mov
ds
ds
mov
jne
pop
xor
inc
mov
loopne
push
repz
stos
sub
lds
leave
sub
cltd
in
imul
ror
bound
inc
inc
leave
ja
mov
outsl
adc
lods
sub
jmp
repnz
mov
jle
les
addr16
sahf
pop
fildll
stos
test
inc
popa
sbb
iret
lcall
dec
popf
rol
push
movsb
inc
fistps
les
mov
adc
insb
mov
pop
add
shl
cli
xor
adc
dec
mov
or
jge
jle
inc
pusha
xchg
inc
mov
bound
push
in
arpl
pop
lcall
and
add
data16
test
xchg
cltd
addb
push
stc
leave
mov
jecxz
jbe
pop
xor
mov
xor
aaa
es
pop
insl
or
sbbl
pop
mov
push
je
bnd
add
lock
xor
outsb
cmp
push
aad
and
or
or
jg
mulb
pop
or
repz
mov
sub
js
cmp
push
push
in
loop
loop
dec
fstpt
sbb
movsb
mov
cmp
mov
outsl
les
fbld
lods
ret
outsl
movsb
mov
shll
popa
stos
and
push
icebp
test
push
insl
jp
sbb
push
xor
mov
push
sub
adc
fstpt
adc
in
std
mov
mov
das
mov
dec
imul
mov
mov
daa
in
sarl
arpl
push
xchg
push
stos
xor
mov
mov
bound
sub
and
loopne
pop
or
mov
dec
cmp
sbb
fs
inc
lock
dec
pop
leave
inc
cmp
push
fistps
sub
pop
cwtl
fldenv
and
in
neg
mov
inc
and
cmp
sbbb
xchg
arpl
orl
fs
test
push
repz
notb
stos
dec
push
flds
sub
divl
jge
call
dec
cmp
sbb
cs
sbb
adc
sub
mov
repnz
enter
pusha
orl
mov
xchg
outsb
das
push
ret
repz
sbb
aaa
cli
insb
xor
or
cli
xor
or
mov
testb
loope
call
xchg
jne
jo
cmpsl
into
xchg
fucom
sub
jp
or
mov
pop
push
adc
jbe
shll
stos
ror
inc
je
je
shlb
ljmp
add
inc
push
ds
cld
cli
inc
out
sti
inc
or
push
add
xlat
rorb
cltd
sahf
mov
loop
imul
bound
mov
std
outsl
lret
or
inc
sbb
adc
xor
sbb
jno
lods
lret
adc
inc
lods
flds
push
sbbl
cmpl
pop
jge
int3
adc
pop
ret
mov
inc
push
imul
dec
negl
and
in
dec
aad
rcl
lods
jnp
mov
xor
xor
and
pusha
add
test
lret
movsb
pop
adc
hlt
pop
push
cmpsb
sbb
pushf
or
jns
inc
inc
add
push
ss
push
pop
arpl
pusha
enter
test
mov
add
mov
mov
pop
cmc
inc
fs
and
mov
scas
inc
icebp
pusha
mov
mov
push
sti
icebp
pop
mov
dec
nop
jl
sub
gs
lret
inc
mov
add
dec
shrl
inc
mov
lock
mov
mov
xor
cltd
std
jmp
push
scas
push
mov
cld
gs
push
jno
mov
aaa
shrb
pushf
dec
div
pop
cmp
repz
sar
dec
orb
inc
ljmp
pop
int3
pop
jne
aaa
ljmp
add
subb
mov
ds
and
pop
mov
dec
lods
xorl
push
push
xchg
repnz
icebp
mov
jnp
fwait
ds
aam
jno
dec
xchg
cld
lods
je
call
icebp
arpl
xorl
or
repz
add
push
ds
outsb
in
adc
xorb
aas
pop
movsb
movsl
dec
xchg
outsb
inc
fsts
orl
xor
pop
into
je
sbb
and
data16
mov
stos
mov
add
aam
sbb
mov
pop
add
adcl
pop
and
arpl
insb
add
imul
cmp
sbb
add
add
out
aas
jno
je
jp
sahf
mov
scas
ss
xor
out
lret
iret
lock
loope
push
mov
inc
rolb
fwait
movsb
cmp
jne
in
adc
cwtl
aam
inc
cmp
inc
add
hlt
sub
mov
or
jl
inc
xchg
mov
outsl
nop
mov
add
sub
ljmp
fdivs
push
sti
and
jge
cmp
pop
inc
or
jp
cs
jl
daa
cmpl
loope
jmp
push
dec
adc
lahf
jle
scas
inc
outsl
lods
repz
in
mov
in
xchg
insb
cli
cmpsl
sub
subb
scas
sbb
xor
out
cs
push
insb
mov
jecxz
jbe
test
aaa
ljmp
andl
or
xor
jle
jo
dec
mov
pop
popa
mov
or
subb
mov
test
cmpsb
imul
sbb
mov
test
mov
out
sbb
mov
push
ret
call
xor
mov
stos
out
ds
out
jnp
lock
in
xchg
xor
in
dec
push
mov
movsb
adc
iret
add
inc
xor
inc
imul
cli
xchg
pushf
addb
ss
cmp
rclb
pop
loope
or
mov
jmp
sbb
jmp
add
jmp
pusha
aam
pop
leave
pusha
sbb
or
mov
and
jl
pop
inc
push
inc
sub
xchg
mov
cmp
stos
outsb
popa
jb
xchg
movsl
rorl
enter
rcrl
mov
iret
mov
mov
xor
inc
mov
push
inc
jne
mov
cmpsb
cli
call
inc
lea
adc
inc
jbe
mov
stos
mov
out
mov
mov
pop
sbbb
push
add
sbb
jbe
lret
in
jno
outsl
in
sub
xor
push
lods
mov
inc
adc
xor
or
add
mov
inc
mov
cs
push
dec
pop
shlb
and
hlt
aaa
xor
jg
aaa
dec
sub
ret
lock
cmp
cmp
xchg
sub
fwait
and
jnp
lea
cmp
add
sub
imul
xlat
sbb
out
xchg
stos
rcll
inc
outsb
mov
in
gs
push
popa
aaa
test
mov
lea
subl
cmp
shl
sub
pop
test
loop
lock
push
fsubl
enter
shrb
pop
add
add
notl
ljmp
push
sub
pop
jle
arpl
jno
mov
lcall
and
and
andl
adc
mov
mov
cwtl
xor
outsb
pusha
in
ss
ret
pop
test
adc
pop
in
add
andb
inc
xlat
adc
xor
stos
jmp
push
insb
push
adc
and
mov
jp
insl
sub
int
mov
inc
call
jbe
in
push
and
or
cmp
fstl
push
inc
shll
or
xlat
je
les
cmp
outsl
test
fdivs
jnp
negb
cmpsl
mov
jo
cmpsb
fidivrl
xorl
pusha
out
addr16
or
add
ret
xchg
adc
leave
inc
js
fstps
inc
stos
rcll
mov
aaa
out
fsubrl
dec
cmp
addr16
out
adc
and
mov
dec
hlt
lock
push
shrl
cmp
xor
jg
push
pop
stos
out
mov
push
adc
xchg
stos
jns
xor
out
lcall
push
out
sub
sub
in
out
stos
cli
std
and
lods
pop
sbb
out
mov
mov
mov
mov
repz
dec
ljmp
lods
push
inc
sub
push
jb
jns
hlt
inc
mov
dec
mov
mov
mov
scas
cld
pop
and
mov
lahf
ret
sbb
adc
or
stos
pop
sub
stos
clc
cmp
jno
push
push
xor
push
aam
mov
or
or
ja
insb
inc
out
push
loope
xchg
or
xchg
adc
jg
sub
js
rorb
push
orb
ret
push
fs
and
jnp
aaa
adc
ret
popa
popl
addr16
mov
mov
xchg
ljmp
stos
inc
push
adc
jmp
push
xchg
shl
and
and
push
mov
std
push
cmpsb
fisubl
xor
mov
push
stc
xchg
out
push
std
mov
cmpsl
mov
andl
dec
or
xchg
pop
mov
cmp
jne
jo
std
dec
addb
jne
xchg
fcomps
aaa
jmp
mov
shl
movsb
cmp
and
movsb
imul
mov
inc
sarl
sarl
xchg
dec
mov
adc
mov
jns
into
sbb
std
add
mov
cmpb
inc
ja
mov
pop
mov
shrl
mov
popf
mov
imull
push
or
iret
inc
ljmp
xor
repnz
imul
mov
andb
inc
sub
fistpll
jle
cmp
inc
pop
jl
mov
jmp
shl
imul
sti
push
jo
mov
adc
xchg
and
push
int3
xchg
inc
into
xor
mov
push
push
and
lahf
cwtl
fxch
aas
incl
and
xor
test
test
rcl
jnp
xor
mov
es
push
jnp
jge
fdivs
dec
push
xor
cmp
adc
test
push
sbb
mov
ret
ret
push
sub
inc
mov
mov
cli
and
lods
adc
test
mov
flds
push
pop
jl
jae
mov
ret
lahf
push
or
movsb
mov
imull
js
shll
jl
icebp
lahf
push
xchg
inc
xorl
fadds
insb
mov
iret
rorl
lret
ret
gs
jne
lret
jge
lcall
sahf
out
lods
outsb
dec
fisttpll
mov
fstps
add
add
es
jecxz
jnp
push
xor
dec
andb
clc
enter
movb
inc
aam
jae
xor
or
pop
hlt
inc
push
call
daa
sbb
sub
mov
bound
and
mov
insl
lock
ljmp
mov
jmp
call
cli
test
sub
push
push
push
xchg
nop
pop
xlat
insl
adc
js
ljmp
dec
inc
out
sbb
jge
and
and
clc
fbstp
xchg
in
lods
push
jb
and
sbb
inc
xchg
or
push
les
ljmp
aad
xchg
mov
add
insl
in
mov
out
push
xchg
xchg
clc
dec
cmpsl
mov
mov
mov
imulb
lret
cmc
dec
out
data16
or
aas
cmc
and
adc
cli
stos
sbb
ds
movsb
inc
cmpsb
add
popf
fsubrs
pop
insl
cli
aad
mov
sbb
daa
pop
mov
dec
pop
pop
sub
lret
jmp
dec
popa
outsb
test
or
jno
out
shr
sbb
add
xchg
add
push
lea
inc
or
inc
inc
jno
pminsw
push
fs
std
jge
pop
adcl
jbe
mov
fisubs
cmc
mov
xchg
out
or
cmpb
dec
and
or
mov
hlt
fcmovne
shl
adcb
and
inc
je
sar
test
mov
test
pop
pop
or
and
lcall
xor
stc
loope
mov
cmpsb
and
ret
loop
aam
wbinvd
mov
out
sbb
mull
repnz
jl
fldt
sub
mov
popa
push
cmp
out
and
push
push
pop
push
dec
iret
paddq
mull
push
inc
out
or
sbb
inc
xlat
lea
popf
mov
addr16
push
mov
xorb
jp
decl
mov
inc
push
in
jmp
lret
popf
addb
movsl
icebp
mov
into
fstps
sub
mov
push
dec
andb
jl
iret
adc
jmp
scas
ja
xchg
mov
sub
sbb
xchg
fisubs
lret
movsb
mov
xor
mov
iret
mov
or
add
xor
push
icebp
sub
lret
sbb
adc
out
mov
jmp
or
pop
jbe
scas
jp
sarl
xchg
add
mov
mov
call
hlt
adc
pop
jle
mull
mov
jo
cmp
in
mov
iret
or
jae
fiaddl
mov
mov
mov
insl
bound
call
out
sbb
popf
xchg
daa
and
xor
divb
cmp
pushf
mov
sub
mov
dec
pop
pop
in
push
xchg
xchg
fisttpll
push
rcr
add
add
sub
sbb
push
js
push
dec
mov
cmp
mul
adc
inc
imul
cmp
shl
cwtl
mov
int3
or
int3
enter
loope
xchg
xor
sbb
pop
mov
pop
mov
out
cwtl
lea
lahf
popf
mov
push
xchg
sti
inc
xlat
stos
push
inc
cmp
enter
daa
cmp
add
mov
cwtl
sub
test
sbb
ljmp
test
int3
call
icebp
loopne
jo
testb
movsb
and
rolb
rcrl
mov
out
loop
imul
mov
iret
mov
ljmp
cmp
faddl
test
mov
bound
dec
mov
ds
cmp
lcall
mov
push
xchg
xchg
or
cwtl
push
xchg
rol
sub
test
ja
sub
ret
inc
cli
sub
scas
sahf
pusha
outsb
push
mov
and
sar
imul
xorb
sahf
int
push
data16
sbb
sbb
fildl
cltd
cmp
jle
mov
cmp
or
mov
test
sub
jb
dec
push
jnp
add
ret
xchg
pop
out
sub
sbb
or
dec
popa
mov
fwait
mov
lods
rcrl
arpl
jnp
out
scas
ss
pop
and
dec
xor
mov
mov
cmp
orl
leave
sbb
jge
mov
xchg
sub
push
mov
int3
mov
aad
mov
mov
push
pop
push
out
mov
sahf
movsl
cwtl
arpl
pop
arpl
test
mov
inc
popa
das
pop
clc
rcll
rorl
shr
cmp
ljmp
lods
inc
jle
mov
ds
xchg
mov
dec
pop
loopnew
xor
pushf
cmp
and
push
mov
lea
decb
rcll
movsl
adc
lcall
xor
hlt
in
aas
aam
bnd
mov
jmp
mov
imul
dec
mov
scas
fcomi
mov
inc
or
pop
int
and
dec
icebp
fcmovu
icebp
mov
scas
or
or
xchg
enter
imul
pop
aas
out
or
subb
arpl
push
stc
jle
lcall
jmp
lods
fs
rol
out
xchg
push
std
jle
xchg
hlt
adc
jmp
bound
popa
and
sbb
xor
loop
jp
fwait
inc
pop
push
jo
mov
push
adc
adc
cli
mov
mov
or
fidivrs
cmp
adcb
jns
adc
mov
addr16
inc
push
daa
sbb
xchg
xor
dec
std
mov
ret
lcall
and
jge
sbb
mov
sahf
dec
ret
jl
mov
mov
xchg
ss
sub
cmc
imul
cld
mov
imul
jp
imul
out
mov
sbb
add
add
imul
sbb
xchg
pop
sub
inc
jp
mov
cmc
shlb
ss
and
fcomi
fwait
mov
inc
arpl
rcrl
pop
jbe
shll
mov
fsubl
pushf
bound
sbb
sbb
xor
inc
xor
fwait
out
cmp
inc
inc
lds
mov
cmp
sub
loop,pn
lret
sbb
out
lds
out
push
pop
in
into
and
fwait
lods
test
jno
leave
xchg
imul
arpl
movsb
push
add
sbb
push
and
push
imul
lea
push
scas
leave
rorl
cwtl
mov
cmp
pop
sub
xchg
roll
push
push
push
dec
mov
push
adc
scas
mov
mov
mov
scas
cltd
pop
xor
push
cmp
int3
adc
mov
and
loop
ja
out
dec
adc
push
add
rcrb
into
iret
test
sahf
lret
psubsb
pop
mov
xchg
mov
repnz
pop
mov
xchg
cltd
jne
and
jl
or
sbb
add
mov
cwtl
mov
data16
xor
aaa
mov
out
push
mov
jg
leave
mov
fs
jne
mov
loop
pop
or
test
add
fs
mov
inc
push
sub
mov
addr16
dec
es
adc
mov
mov
jmp
daa
faddl
mov
insb
mov
pop
sarl
dec
mov
repz
cld
fsub
xchg
sbb
xor
and
mov
inc
mov
cmp
daa
cmpl
fwait
dec
mov
mov
inc
fdivrp
scas
js
push
je
inc
and
mov
adcb
fimuls
jnp
dec
out
arpl
stc
ds
and
sbb
jg
add
rolb
jbe
stc
sub
cmpsb
popa
xchg
les
lea
jo
out
ret
in
fdivp
ljmp
inc
js
das
stos
pop
mov
aas
ljmp
add
cmpb
jmp
cmp
leave
int3
mov
xchg
pusha
je
cmp
scas
dec
pop
pop
aaa
movsb
mov
hlt
inc
js
outsb
push
popf
loope
mov
arpl
mov
hlt
pop
inc
xchg
pop
lea
into
mov
mov
repnz
std
jbe
lods
jl
xor
xchg
cli
xor
dec
jno
fcom
pop
iret
insl
dec
xchg
xchg
jns
fisubrl
sub
repz
sbbb
ficoml
jae
mov
cmp
dec
and
lods
faddl
cmpsl
out
mov
fistpl
outsl
pop
jle
xor
fs
xor
aad
sti
in
int3
nop
pop
and
lret
mov
cmp
scas
add
push
scas
mov
jno
jle
dec
in
dec
dec
insl
xchg
mov
fisttpl
fwait
push
or
cli
mov
stc
jmp
fcmovne
mov
jecxz
push
sbb
repz
out
sbb
inc
dec
sub
sub
cld
xchg
adc
push
mov
ja
out
out
jp
pop
adc
push
mov
out
inc
out
mov
adc
mov
dec
cmp
sub
stc
xor
ds
stos
cmpsb
fcoml
mov
dec
std
out
dec
mov
sbbl
adcb
stos
cwtl
sbbl
roll
mov
jnp
sarl
jne
dec
aaa
sub
test
lret
add
mov
sahf
fidivs
mov
insl
cli
sub
mull
shll
add
cmc
and
sub
mov
dec
cs
xchg
sbb
jb
mov
xchg
cmp
cwtl
loopne
call
dec
xchg
pop
outsl
das
icebp
cmc
stos
ljmp
gs
insb
mov
jno
cmp
orl
negl
xor
loop
inc
sbb
int3
add
push
lcall
mov
jl
lods
jae
fists
in
mov
sahf
mov
mov
ja
cmp
les
sub
pushf
inc
push
inc
mov
popa
cmpsl
xor
push
lea
jp
sarb
xchg
outsl
sbb
out
icebp
cltd
cwtl
in
mov
push
clc
push
mov
loop
mov
ficompl
sti
pop
pop
xlat
idiv
scas
mov
fs
jmp
sbbl
out
and
or
pop
dec
or
insl
push
inc
aas
mov
je
sahf
nop
mov
and
xchg
in
and
fidivrs
sti
sbb
push
push
sbb
ficoml
cmp
fsub
cmp
icebp
jmp
xchg
pop
sbb
lcall
loop
push
add
push
das
xchg
pop
xor
stos
insb
divps
mov
rcll
decb
lock
or
cmpsl
scas
adc
mov
sub
aaa
in
sbb
test
pop
cs
cmpsl
adc
fidivrl
leave
jns
pop
shl
mov
loope
test
sbb
mov
out
push
push
dec
ss
hlt
xchg
mov
xchg
pop
orl
sahf
movsl
push
add
ds
or
dec
dec
loop
add
jecxz
int3
cwtl
inc
rol
jo
xchg
adc
dec
mov
arpl
or
pop
sub
fisttps
inc
cmp
or
push
insl
jge
or
xor
inc
cmp
fnstsw
xor
jne
jne
in
outsb
adc
pop
mov
js
sbb
sbb
test
sbb
ds
jle
test
std
addl
push
loopne
or
cmp
push
cli
pop
jl
xchg
adc
sub
hlt
add
xchg
lds
jbe
sbb
stc
push
dec
aaa
inc
sub
dec
pop
xchg
cmp
std
rorb
xor
push
sarb
testb
popa
or
scas
mov
mov
inc
mov
iret
pop
lahf
mov
das
push
int3
and
jl
ss
xor
inc
dec
mov
in
push
add
or
push
mov
sub
jp
xchg
pop
xchg
xchg
rcrl
adc
push
lahf
psubb
cmpsl
inc
rcr
jbe
lahf
aad
shr
ss
std
jge
mov
test
mov
dec
jb
xchg
pop
notl
gs
xchg
inc
pop
test
int3
sbb
xor
mov
shrl
and
stos
xor
sti
adc
out
in
mov
pop
mov
mov
mov
lret
inc
pusha
jge
mov
nop
push
inc
sub
xchg
sbb
pushf
movsb
cmp
pop
add
add
mov
or
dec
divl
or
xor
mov
bound
sub
cmpsb
in
xor
lods
mov
pop
mov
sahf
push
iret
mov
ffree
push
push
pusha
mov
data16
dec
jmp
pushf
sbb
rorl
mov
mov
sbb
jb
mov
push
les
movb
xlat
cmp
xchg
jg
cmpsl
ja
push
insb
std
mov
sbb
aaa
inc
mov
push
psubb
pop
retw
inc
jle
add
cmc
xor
ja
leave
repz
jae
test
outsb
xor
inc
add
sbb
fadds
xchg
daa
mov
add
out
push
int3
jbe
popf
pop
ret
or
sub
repnz
push
inc
pushf
and
sahf
mov
jb
push
pop
jle
push
mov
fdivl
jl
pushf
xchg
sbb
sbb
jae
fidivrs
jo
fsubrl
push
ja
stos
jne
xor
and
cmp
fwait
nop
cld
std
mov
cmpb
ja
adc
and
movsb
insl
ljmp
cmp
jbe
push
adc
lcall
insb
bound
jne
fdivrl
bound
dec
lock
insb
adc
lret
pop
adc
sub
jne
or
mov
rcr
imul
cmp
or
inc
or
bound
push
jge
pop
xor
mov
gs
mov
rolb
stc
aad
clc
popf
xchg
shll
iret
dec
ja
dec
in
sbb
add
jg
push
and
push
adc
rcll
push
adc
xchg
test
cmp
sub
shlb
inc
push
in
mov
cmp
lods
mov
lea
sarl
pop
movsw
jns
int
pop
repz
divl
in
xorl
adc
gs
insb
enter
mov
lcall
call
push
addr16
lret
cs
pusha
popf
arpl
iret
add
test
add
sbb
push
dec
jns
orb
daa
gs
stos
sarl
call
inc
out
or
into
je
inc
adc
sti
mov
xchg
dec
cmpsb
cmp
pop
cld
inc
jb
shlb
fcompl
mov
lock
movsb
icebp
pusha
lock
adcb
cltd
cmp
push
mov
cmp
test
cmp
xchg
out
imul
cwtl
sbb
dec
cmpsb
push
out
pop
idivl
sub
stc
push
cmp
mov
lret
arpl
in
cmp
mov
iret
mov
loopne
mov
pop
xchg
imulb
out
inc
call
dec
cwtl
adc
xchg
rcrb
xor
das
jge
gs
leave
mov
stos
dec
or
loopne
or
dec
pop
sub
jg
aaa
popa
pop
push
scas
loop
jmp
js
ljmp
jge
je
and
scas
cwtl
into
add
popa
inc
mov
std
aad
cmpb
lahf
or
outsb
inc
mov
in
mov
or
mov
stc
push
jecxz
xchg
mov
add
ret
mov
mov
mov
mov
or
push
cmp
gs
jae
push
xor
loop
dec
pop
jbe
lret
pushf
inc
mov
and
pop
mov
pop
push
scas
das
xchg
cmp
mov
xchg
sbb
insb
adc
cmp
es
jecxz
paddd
shl
dec
jl
add
aas
sbb
cmc
push
adcb
cmc
push
xor
cmpsb
fldl
jnp
jnp
xchg
dec
ss
xchg
loopne
mov
in
in
inc
cmp
es
clc
daa
add
dec
test
nop
mov
inc
or
cmp
lods
mov
push
or
and
push
sbb
and
mov
sti
inc
lret
sub
outsl
test
inc
rclb
mov
imulb
jle
stos
aas
in
aam
cmp
sahf
cltd
or
jmp
bound
lahf
cli
add
xorb
and
ljmp
into
mov
mov
xlat
pushf
out
or
dec
xor
lcall
and
mov
outsl
dec
fsts
dec
xor
xchg
inc
push
cs
dec
and
sbb
fst
cmpsb
cld
push
repz
arpl
xchg
mov
xor
lahf
jb
stos
pop
ljmp
stc
iret
dec
leave
ljmp
mov
cwtl
imul
add
mov
icebp
sbb
lcall
ret
jae
mov
add
sbb
xchg
mov
xchg
dec
jp
inc
sbb
mov
push
pop
popa
mov
flds
dec
mov
and
daa
mov
mov
nop
jb
inc
sbb
push
adc
scas
push
jb
mov
int
dec
aas
dec
mov
pusha
sbb
mov
je
sbb
dec
ss
cmp
ret
push
shr
call
loop
repz
pop
mov
call
mov
dec
adcb
adc
cmp
insb
cmpsl
jno
pusha
rorl
mov
or
scas
insb
aam
inc
mov
mov
les
xor
cld
divl
xor
pop
push
lahf
test
xor
push
cmp
shrl
cmc
or
cmp
adc
mov
cmp
xchg
push
pop
loop
orl
iret
mov
dec
xor
mov
movsb
neg
daa
cmp
push
jbe
in
sahf
pop
inc
lea
repnz
iret
push
into
movsl
dec
fmul
and
cld
std
in
mov
stos
rol
and
mov
mov
jle
xor
cmp
mov
fidivl
inc
and
lds
or
sarl
hlt
xchg
xor
xchg
cs
loop
mov
es
out
push
rep
mov
jbe
sub
hlt
scas
popf
and
or
inc
xchg
pop
repz
cli
es
jo
add
aam
es
jmp
popa
movsl
xor
cmp
pop
cltd
sti
push
jns
jg
xor
in
adc
inc
mov
sahf
addr16
mov
adc
xor
or
jge
jns
mov
adc
pop
mov
mov
jmp
daa
aaa
jmp
mov
ds
jbe
mov
fstl
out
pop
jmp
stos
mov
xor
sbb
add
iret
xor
xchg
fisttps
push
mov
pop
inc
stos
insb
dec
mov
into
cmp
add
jge
inc
sub
movsl
leave
sbb
icebp
or
bound
fwait
loopne
cmp
js
add
add
filds
dec
push
dec
inc
sbb
or
imul
leave
mov
xor
mov
aad
divl
lret
mov
and
mov
cmpsb
addr16
xchg
and
lahf
ja
pop
scas
jle
or
das
icebp
pop
rep
pushf
cli
mov
jg
add
gs
in
or
and
xor
testl
not
jp
jl
push
nop
lds
mov
pop
fadd
mov
data16
pop
push
insb
push
adc
mov
mov
loope
xor
sar
inc
xchg
insl
iret
mov
out
stos
mov
jns
dec
inc
arpl
test
cmp
shrl
jnp
push
dec
jb
roll
xor
cmp
xchg
stos
stos
scas
out
or
ss
push
repnz
lret
add
mov
mov
dec
push
sbb
cld
fbstp
pop
daa
arpl
sbb
and
sahf
or
pusha
sub
dec
shlb
add
mov
push
movsb
sahf
cmp
arpl
dec
push
shll
sbb
adc
loop
mov
jge
pop
mov
jno
cmp
cwtl
sub
or
add
fsubs
pop
xor
aaa
rcrb
hlt
addr16
sub
test
fisubs
add
push
add
mov
imul
inc
bound
decb
mov
addb
sahf
or
and
mul
push
adc
xor
cmpsb
fs
mov
data16
add
inc
pop
inc
fiadds
xchg
jno
aad
push
push
out
push
shl
fmull
lods
push
pushf
lods
or
add
jge
xor
jb
cmp
add
mov
jecxz
mov
xor
dec
inc
in
ret
pusha
scas
into
addr16
adc
lock
cli
mov
pop
dec
call
inc
push
xor
push
lea
outsl
or
test
push
cmc
pop
sbb
int3
call
js
and
pop
and
mov
movsl
sahf
push
psubusb
repnz
jl
dec
in
insb
mov
iret
push
sub
pop
xchg
jp
popf
hlt
test
inc
in
push
mov
out
add
or
fdivrl
or
and
sbb
aaa
test
fs
hlt
lock
sub
xor
mov
inc
mov
jg
stos
js
jge
pop
and
mov
or
add
push
push
jns
cwtl
pusha
mov
stos
sbb
nop
mov
ja
jnp
sbb
mov
es
or
fs
ret
xchg
inc
cs
xchg
or
loop
xchg
mov
mov
filds
loopne
mov
mov
inc
inc
xor
out
jb
icebp
cli
es
jp
cmp
xchg
xchg
cmp
inc
int3
pusha
and
icebp
mov
fst
jg
in
daa
mov
mov
popa
sub
mulb
pushf
sbb
cmp
fdivrp
mov
mov
mov
pop
xor
lret
xchg
jnp
aas
int
add
lock
pop
out
ds
jo
in
jp
data16
jmp
adcl
adc
and
mov
lcall
scas
or
or
fcmovbe
sub
cwtl
xor
jg
bound
push
ret
adc
push
bound
add
das
add
psrlq
aad
pop
cmpb
lcall
jmp
popf
jo
mov
jmp
jle
xchg
scas
dec
iret
push
xchg
xchg
enter
mov
insl
stos
testl
lods
rcrb
jle
push
dec
push
out
xchg
mov
das
xchg
test
sub
sub
test
repnz
test
lods
popf
cli
xor
gs
jg
push
test
lret
lret
mov
jo
mov
dec
fldcw
cmpsl
les
rol
mov
pop
push
hlt
sbb
fdivrl
adc
push
lods
loopne
mov
cmp
inc
xlat
mov
jno
push
add
sbb
and
cmpsb
shlb
mov
cli
sbb
cmpsl
fdivs
lret
leave
out
xor
sub
int
jno
jge
mov
in
add
mov
fsubs
gs
fisttpl
stc
cmp
dec
fsts
and
cmpsb
sub
xchg
or
clc
ret
adc
mov
aaa
mov
push
and
int
pop
mov
sub
mov
fcomip
aad
in
scas
dec
lcall
mov
repnz
mov
dec
inc
push
pop
out
out
mov
dec
push
imul
sarl
daa
dec
xchg
sub
pop
mov
push
in
dec
scas
xchg
pop
rcrl
pop
into
std
add
mov
jge
aas
mov
rcll
lock
and
sbb
push
ficoms
aas
sahf
into
adc
adc
sbb
mov
sbbb
cmp
test
loop
pop
lcall
sbb
mov
lods
cmp
scas
arpl
ljmp
loopne
xchg
arpl
jb
aas
pop
pusha
jno
cmc
push
pusha
leave
stc
fbstp
and
inc
mov
inc
and
mov
into
fistl
gs
xor
and
cmp
icebp
ss
lahf
icebp
inc
add
je
jl
je
imul
testl
push
mov
clc
mov
dec
repnz
and
adc
fwait
lret
cmc
int3
lods
insl
hlt
test
nop
cmp
repnz
es
sarl
jle
in
in
sbb
fdivs
or
dec
pop
sahf
and
std
in
adc
adc
fisttpl
arpl
pop
not
nop
popf
mov
fldenv
jae
pop
push
sbb
jo
shll
sbb
push
insb
mov
jg
jnp
xchg
jmp
cmpsl
pop
inc
xchg
test
idivb
mov
mov
mov
pusha
mov
mov
pop
dec
int3
pushf
pushf
rcr
sahf
adc
sar
dec
cmpsl
cmp
push
js
test
test
or
std
mov
xchg
mov
aam
jg
pusha
aad
xchg
leave
cmpsl
jns
les
sub
sbb
mov
popf
jns
loope
xlat
mov
pop
sub
fs
bound
mov
in
cmpsb
jb
cltd
daa
mov
cltd
and
mov
popf
jne
mov
cld
and
rcrb
inc
push
push
test
add
xor
sbb
xchg
jmp
repnz
inc
test
push
xchg
mov
dec
loope
test
gs
cltd
addr16
aad
loop
pop
ss
clc
popf
sub
push
jmp
adc
stos
fimull
xchg
inc
aas
inc
test
sub
leave
fwait
pop
inc
mov
test
mov
test
imul
push
test
inc
and
movsl
scas
fdiv
lds
inc
add
jne
dec
pop
les
jno
daa
lea
adc
add
ss
mov
or
push
adc
or
xchg
xor
rorb
fnsave
pop
hlt
mov
add
mov
pop
inc
xchg
mov
cmpb
jg
dec
jge
pop
cmp
push
mov
sub
mov
pop
pop
jnp
js
pop
mov
js
les
mov
mov
scas
pop
movl
nop
mov
je
icebp
mov
icebp
lock
adcl
xor
jp
sbb
or
call
xor
popf
sub
mov
ds
sub
lahf
shr
lcall
stos
insl
aam
mov
aad
scas
adc
popf
imul
clc
dec
mulb
jb
mov
add
sahf
jo
jb
ret
mov
std
xor
cld
adc
popf
mov
fildl
sub
das
ret
adc
jle
add
pop
dec
stc
jo
fwait
mov
mov
mov
mov
mov
mov
ret
add
mov
adc
mov
jne
jmp
xchg
push
adc
xchg
pusha
aad
sub
inc
mov
sub
rorl
inc
leave
xchg
aaa
lret
cmp
cltd
jecxz
rorl
loope
jge
xchg
jo
xchg
mov
add
jmp
xor
adc
sbb
fwait
xchg
fdivr
mov
popa
pop
sbb
sahf
adc
mov
stc
test
pusha
jl
enter
jp
arpl
enter
sbb
stos
cmpsb
push
add
fsts
dec
mov
sub
fcom
mov
test
sbb
mov
cltd
pop
je
test
dec
mov
mov
fisttpll
mov
adc
mov
adc
or
xor
pop
mov
fwait
jg
and
adc
dec
cs
out
xor
sub
sbb
movsb
xchg
xchg
out
stc
imul
loopne
mov
repnz
fstps
adc
lahf
outsl
fisubs
mov
shrb
popf
in
jl
jne
andl
mov
cmp
lret
and
pushf
mov
rol
lds
mov
cmpsl
js
mov
cld
mov
rclb
movsb
addr16
cld
cmp
mov
es
out
in
scas
xorb
imul
dec
push
scas
aaa
mov
cmpsl
dec
sub
jl
adc
xor
movsl
pop
sti
pop
mov
test
iret
mov
mov
pop
das
mov
andl
push
push
imul
mov
mov
xor
mov
mov
adc
in
lcall
mov
mov
repz
fstps
jae
push
repnz
sub
out
and
fmull
pop
lcall
jge
dec
adc
cmpsl
lcall
mov
mov
cmp
add
cmp
enter
push
sub
scas
ss
in
mov
popf
mov
daa
mov
jecxz
mov
aaa
sar
cwtl
or
shrb
aaa
jns
in
cmpl
push
out
mov
and
fldl
aam
pop
pop
mov
insl
pop
scas
in
les
subl
sbb
xchg
mov
pop
xchg
jne
mov
or
mov
sub
scas
std
das
jae
push
mov
test
push
into
and
loop
das
cld
push
scas
push
push
rcl
add
xchg
xchg
push
adc
inc
roll
rclb
fcomip
xor
pop
cmp
sti
lea
int3
dec
orb
pop
sub
inc
lods
inc
sbb
lret
adc
cmpsb
sub
sub
mov
mov
std
adc
int
and
ret
stos
enter
lds
lods
push
or
imul
ja
push
fwait
jns
sar
mov
push
dec
ret
subps
and
pop
pop
sbb
xchg
xchg
lcall
aad
or
movsl
icebp
xlat
sbbb
shrl
mov
in
mov
bound
push
sbbb
xchg
mov
sub
sbb
inc
cmp
inc
jne
gs
xchg
or
pop
aam
outsb
xchg
adcb
cmp
js
push
jg
mov
insb
push
test
nop
jmp
mov
lret
imul
jo
pushf
sbb
mov
push
imul
and
jg
cmp
sbb
and
add
cmpsl
int3
push
xor
xor
jge
int
ds
sub
loop
dec
repz
adc
mov
or
pop
daa
push
aad
stc
stos
mov
mov
cmc
inc
adc
cmpsb
add
add
jbe
xlat
sbb
inc
sub
scas
movsl
push
pop
sub
push
add
fmuls
test
push
scas
loop
xchg
mov
xor
mov
mul
out
outsl
add
xorb
pop
cs
inc
mov
mov
out
scas
or
cltd
outsb
in
rorb
and
imul
pushf
rcrl
fcmove
pop
sub
adcl
inc
xchg
mov
or
cwtl
test
addb
sbbb
and
jb
imul
shr
xor
sub
and
sbb
jne
jae
sahf
arpl
mov
movsb
add
pop
inc
fisubl
pusha
inc
leave
fmulp
sbb
out
mov
pop
pop
call
jns
push
test
lret
inc
loope
add
xchg
push
sub
ficoml
stos
and
test
fsubrs
out
push
out
jecxz,pn
add
sahf
mov
mov
paddusb
pop
adc
insb
mov
push
arpl
mov
push
jno
mov
mov
push
jnp
dec
cmp
jne
flds
mov
add
jae
bound
or
mov
add
cmpsb
cmp
imul
arpl
sbb
mov
push
in
adc
pop
insb
or
mov
jecxz
int
cmp
paddd
insb
or
movsb
mov
int3
rorb
sub
loopne
xchg
repz
pop
xchg
mov
fwait
pop
sbb
rcrl
cmpsl
dec
jecxz
adc
adc
sbb
push
out
xor
add
fidivl
mov
ret
xchg
cmp
daa
xchg
mov
xchg
lret
lods
pop
add
cld
aam
mov
jmp
fimull
movsl
mov
into
xor
or
stos
mov
push
mov
ret
or
adc
lcall
aas
ja
ja
sbb
in
mov
fs
mov
jle
lcall
cmpsl
and
cmp
or
inc
inc
cld
dec
push
aam
add
mov
out
and
orl
xor
or
mov
aas
ja
andb
clc
lods
add
fisttpl
mov
arpl
or
test
jl
bound
jmp
clc
test
imul
aaa
push
xchg
pop
adc
mov
dec
jecxz
add
fmull
lds
outsl
popf
mov
dec
push
push
and
in
push
xchg
rolb
or
jp
jbe
mov
test
in
int3
dec
jl
adc
jp
in
and
cmp
and
flds
xchg
add
fldenv
pop
aaa
aad
stc
cmp
test
cmp
sbb
fdivp
adc
mov
push
push
add
ss
mov
lahf
in
outsb
out
xchg
or
dec
sbb
fdivrl
aas
call
in
cmpsl
xor
add
add
pop
pop
or
leave
pop
aaa
mov
les
pop
xchg
xchg
cmp
insl
addr16
jb
rcl
adc
data16
lods
mov
pop
ficoms
push
mov
rolb
imul
jo
dec
push
ljmp
test
mov
lahf
in
call
sub
in
mov
loop
mov
add
lcall
ret
xor
aam
mov
decl
mov
mov
and
push
dec
test
xlat
mov
andb
ljmp
sub
sub
in
test
ret
dec
mov
cwtl
jbe
pusha
dec
sarl
mov
xor
mov
iret
in
dec
jbe
jbe
fcmovbe
outsb
jne
push
scas
xor
inc
adc
mov
jecxz
push
pop
add
push
add
xchg
xor
dec
iret
jmp
and
add
mov
pop
jmp
pop
roll
and
cmpsb
xor
adc
loopne
cmpsb
or
dec
cmp
outsl
push
or
mov
jns
mov
mov
cmc
lret
jae
addb
sti
cld
mov
or
in
aam
sbb
mov
ror
js
pop
lock
lods
aas
pop
add
pop
ffree
insl
sub
fildl
imull
cwtl
push
mov
sbb
inc
sbb
ret
pcmpgtw
jne
pop
fwait
mov
scas
ds
pusha
nop
loopne
and
jb
inc
inc
int3
into
out
vpunpcklbw
mov
xor
js
inc
int
push
test
dec
mov
xor
or
ljmp
addr16
test
sar
xor
adc
imul
xor
pop
cmp
adc
scas
iret
cmpsb
or
inc
sarl
repz
pop
subl
cmp
popa
aam
rcl
mov
aaa
xor
dec
inc
pop
mov
sti
popa
subl
shl
mov
and
out
sbbl
mov
jle
mov
jp
lods
lods
or
pop
cmp
mov
mov
mov
pop
or
inc
rcr
jae
push
xorl
sub
push
cmp
mov
adc
sbb
xor
push
aam
mov
mov
fmull
mov
pop
push
outsb
int
inc
jmp
xor
std
cli
mov
in
mov
jg
sarl
pop
iret
inc
jb
or
sbb
push
cmpsb
xchg
and
rol
das
xor
fbstp
mov
lock
mov
jnp
aaa
adc
jge
out
retw
clc
repnz
mov
loopne
ljmp
test
mov
shll
sbb
mov
mov
dec
add
mov
mov
mov
arpl
xchg
rcr
fwait
mov
dec
inc
movsl
out
add
push
test
std
in
inc
mov
addps
jmp
jmp
je
sbb
fcomi
dec
dec
aas
push
and
les
or
mov
insb
lods
mov
leave
cmp
je
popf
and
call
arpl
push
add
int3
or
cmp
scas
jb
pushf
bnd
popf
sub
adc
add
pop
jnp
xlat
mov
pop
pushf
in
sbb
mov
cmp
rclb
popf
sarl
mov
lret
xor
xor
enter
mov
fsub
jb
and
mov
mov
xchg
pushf
lds
push
pop
ss
imul
dec
icebp
fbstp
jns
clc
test
out
cmp
adcl
push
pop
retw
in
sbb
sub
sbb
dec
inc
test
sbb
jb
fs
daa
jns
inc
mov
push
fistpl
mov
das
ficoml
imul
in
out
stos
jmp
fsubs
sbb
xchg
add
lahf
aas
push
int3
mov
and
sti
and
ja
xchg
in
nop
shr
loopew
cld
cmp
adc
in
mov
xlat
mov
bound
and
pop
add
mov
sbbl
cmp
push
xchg
enter
hlt
sarl
pop
xchg
xor
jo
or
pop
cmp
pop
xor
push
lcall
jp
sub
push
cld
inc
icebp
push
push
std
imul
sbb
es
xor
repz
pop
sarb
pop
cmpsl
mov
repnz
inc
sarb
add
or
movsb
in
fsts
pushf
sti
jno
mov
adc
test
jo
and
dec
sub
add
mov
sbb
and
lods
jge
stos
inc
out
lods
push
dec
adc
xchg
xchg
push
popa
push
push
lahf
or
add
jge
hlt
adc
push
xchg
xchg
pop
movsl
fmull
aaa
pushf
mov
mov
sub
jne
jo
jnp
jg
or
sbbb
fisttpll
iret
mov
lahf
jb
xor
mov
sbb
mov
jp
push
int
loope
mov
push
dec
push
add
int3
xchg
xchg
comiss
push
and
mov
dec
xchg
jl
xor
mov
pusha
cs
hlt
inc
aam
enter
dec
xchg
in
pop
dec
mov
hlt
pop
dec
xchg
les
pop
xor
mov
or
sub
pop
insb
clc
adc
inc
in
in
or
mov
leave
test
in
and
imul
aaa
sub
jg
cmpsl
and
je
cmpsl
adc
repnz
cmpsl
es
mov
scas
rcr
mov
jle
test
ror
rcrb
inc
fimuls
enter
push
jno
push
clc
sbb
aaa
insl
lret
jae
frstor
mov
filds
pop
sub
jp
or
popa
inc
jmp
jo
pop
popa
push
imul
push
pop
insb
shl
mov
or
xor
test
or
leave
xor
insb
push
call
push
xor
inc
push
mov
and
adc
insl
and
fstps
and
xor
bound
adc
lods
sub
push
subl
dec
ds
push
push
in
clc
lods
test
jl
call
clc
sahf
jg
lods
inc
adc
mov
cmc
jo
push
rorl
lods
jl
cltd
jl
out
push
lock
push
iret
shl
cli
jnp
inc
push
pop
popa
movsb
pop
fcmovb
add
mov
lds
icebp
scas
jnp
pop
xchg
mov
adc
std
add
adc
xchg
push
mov
dec
xor
pop
popa
dec
dec
and
cwtl
arpl
shll
call
outsl
outsb
fiaddl
jmp
mov
test
mov
xchg
leave
inc
pop
push
add
jp
xchg
loopne
sar
loope
fwait
loopne
call
xchg
fwait
sbb
push
cmp
sarb
dec
inc
adc
sbb
insb
and
sub
xor
dec
cmp
mov
or
mov
mov
inc
xchg
fldt
cld
cmpsl
sti
mulb
movsb
dec
cmc
cmp
push
imul
inc
jg
xor
aas
sub
cmp
mov
pop
stos
pusha
sbb
push
inc
pop
push
outsb
pushf
addb
test
into
inc
iret
idiv
pop
sub
inc
xor
movsl
mov
imul
push
and
ljmp
orl
and
fwait
ja
mov
and
testb
cmp
mov
jmp
sub
or
daa
mov
dec
inc
dec
loope
cltd
jmp
cmp
fsubs
mov
rorl
sub
cld
data16
mov
aas
test
aam
cmp
rolb
xchg
mov
push
xor
fsubs
or
push
loopne
cmc
test
xchg
pop
arpl
fnstcw
test
add
jb
xor
lods
dec
popf
std
and
mov
sbb
mov
data16
mov
test
shll
aad
std
or
xlat
add
mov
shll
xchg
inc
fldcw
aaa
jle
mov
mov
inc
jbe
arpl
sarb
mov
insb
adc
call
pop
inc
mov
push
imul
rclb
sahf
sbb
lds
das
push
push
test
and
push
push
imul
imul
xor
adc
fcmovne
cmp
jmp
mov
fwait
sahf
cmp
lcall
mov
mov
pop
sbb
bound
ss
xlat
lods
cmp
pop
scas
sbb
dec
cwtl
arpl
cmp
int3
inc
sub
jmp
mov
shlb
repz
je
int
aaa
xorl
push
icebp
mov
sbbb
adc
pop
lods
negl
sub
cmp
and
inc
scas
and
and
loop
xchg
mov
inc
or
into
inc
ljmp
dec
inc
sub
xchg
pop
adc
enter
shll
mov
inc
lods
call
xchg
sbb
mov
xor
adc
mov
inc
lods
stos
mov
repz
pop
sbb
mov
fbstp
sub
rcrl
adc
in
xchg
jg
sbb
ds
std
das
aaa
xor
int
scas
jne
dec
mov
out
sahf
stc
jne
mov
fisubrl
or
xchg
call
imul
pop
mov
sub
sub
daa
cmpsl
movsl
std
push
test
dec
shlb
push
jp
xchg
aaa
cs
jge
adcl
sarl
ljmp
mov
push
push
jnp
scas
mov
addr16
stc
ja
cli
push
out
js
pop
ss
inc
sbb
xor
sbb
out
inc
mov
movsb
jmp
add
push
out
jp
das
adc
mov
clc
pop
jnp
sub
shrb
aam
test
xchg
mov
xchg
mov
add
popf
add
or
cmp
adc
dec
in
adc
into
cmp
mov
out
and
xor
inc
cmp
out
iret
sbb
dec
adc
xchg
fmuls
data16
adc
dec
mov
jb
pop
push
dec
xchg
lods
sti
adc
int3
std
xchg
fists
loopne
cltd
push
pop
mov
sub
cli
repz
lods
add
enter
mov
add
insl
int3
dec
mov
and
pop
pop
test
mov
loope
sub
cmp
roll
cltd
cmpsl
sub
jl
imul
inc
xlat
xchg
mov
cs
jl
push
dec
jg
sub
leave
out
push
js
cmc
xchg
add
cmp
adc
or
jo
xchg
mov
dec
pop
fs
stc
push
stc
aad
dec
cmc
inc
xchg
into
cmp
add
jns
pop
and
add
or
js
dec
sbb
mov
clc
cli
mov
leave
and
adc
add
adc
shll
pop
insl
or
sarl
shll
int
dec
sub
sbb
add
push
hlt
fadds
mov
nop
ficomps
adc
test
jge
jae
adc
rcrb
jnp
and
popa
cld
hlt
dec
push
nop
xor
fldl
hlt
mov
fstps
rorb
out
mov
sub
packssdw
sarb
lret
mov
push
cmpsl
scas
push
cmpsl
ret
xchg
fs
cmp
lcall
cmp
les
cmpsb
and
int3
push
xor
xchg
in
shlb
nop
shl
inc
xlat
inc
call
sub
mov
mov
mov
cwtl
ret
sub
mov
emms
out
pop
xchg
sbbb
adc
or
xlat
adc
add
int3
out
dec
ret
dec
shr
loopne
mov
ljmp
inc
dec
fs
xor
sub
xchg
adc
negb
hlt
jg
push
adc
jbe
es
loopne
mov
dec
mov
cmc
add
inc
pop
lods
bound
mov
cmc
and
push
int
add
pop
pop
outsl
push
js
push
xor
scas
mov
cmp
pop
mov
and
jno
test
push
pop
cld
mov
repnz
sub
jle
or
pop
stc
and
and
push
push
pop
fistpll
jne
mov
pop
popa
xor
lcall
cmp
icebp
scas
and
nop
mov
jns
mov
stc
or
mov
and
ret
clc
cmpsl
jle
lahf
lsl
adc
insl
inc
push
cld
ja
rclb
sarl
mov
add
pop
xor
gs
jnp
mov
out
sti
mov
out
shll
fwait
cmp
push
leave
xor
and
sub
les
sarb
or
dec
push
aaa
add
and
lcall
cmpsb
lret
movsl
arpl
sbb
mov
cmp
ficoms
stos
les
std
inc
pop
pop
pop
jb
aaa
sbb
incb
lret
dec
sti
in
fwait
repz
and
or
push
cmp
jns
inc
xorb
out
test
jecxz
push
jge
imul
mov
aaa
xchg
insl
fidivrl
sbb
mov
xor
cmpsl
addr16
jns
sbb
pop
clc
xchg
loop
int
sahf
repnz
shlb
fmul
mov
ja
add
aaa
test
inc
pop
aam
push
icebp
dec
pop
lahf
jne
and
orl
xor
loope
inc
cld
jle
mov
cmc
pop
in
dec
enter
jg
xchg
stc
cs
rcrl
sbb
mov
inc
inc
daa
xchg
dec
adc
mov
push
push
adc
xchg
js
sahf
out
xchg
out
es
stos
sbb
xchg
in
and
fiaddl
push
push
xlat
or
in
repz
dec
fwait
lods
mov
les
dec
mov
das
negl
add
sbbl
int3
imul
insb
dec
pop
adc
adc
mov
jp
push
push
ds
popa
push
idivb
push
lret
movsb
mov
and
push
xchg
jle
call
aam
add
mov
mov
xchg
daa
repz
pop
orb
jl
xchg
fstl
dec
jmp
repz
hlt
movl
xchg
addr16
insb
loopne
push
les
lea
insl
test
xchg
stos
push
in
jmp
cmc
push
fcoml
mov
js
push
add
and
cld
mov
mov
add
in
jnp
or
xlat
or
es
add
push
jle
mov
imul
stos
clc
adc
aas
insl
lret
insl
pop
test
pop
xchg
mov
adc
data16
jae
insl
insb
push
and
and
cmc
xor
dec
inc
ljmp
xchg
lret
shlb
flds
out
sahf
pop
out
in
inc
out
out
add
lds
cmp
jnp
shll
je
sarl
test
jnp
jecxz
sbb
sub
jbe
sub
inc
adc
popf
ljmp
fisubrl
cmp
mov
and
sbb
jp
lods
cli
fwait
sub
mull
sbb
xchg
mov
div
pop
inc
xor
ljmp
jbe
fwait
push
cmovo
pop
addb
iret
jecxz
pop
cmc
add
rclb
cmp
iret
andb
lods
jp
cmp
insl
xchg
mov
das
add
insb
call
sub
cli
insb
out
or
push
xor
hlt
pop
lahf
xchg
test
pop
or
jno
adc
xor
jle
pop
stos
sub
mov
sub
dec
in
clc
sub
sbb
mov
jne
xor
push
dec
adc
mov
movsb
insb
clc
lods
out
jecxz
push
jecxz
add
inc
or
xlat
add
aaa
adc
iret
repnz
insl
test
fcompl
push
push
into
jmp
mulb
jle
test
xchg
lcall
and
out
push
mov
fnstcw
dec
mov
xlat
into
mov
jle
sbb
imul
lea
inc
stos
add
pushf
aam
in
imul
pushf
jecxz
in
sub
mov
adc
inc
fst
push
or
gs
dec
stos
xchg
ds
jmp
rclb
rcll
mov
dec
rol
jg
lcall
push
sub
mov
std
mov
add
sub
mov
add
movsb
inc
mov
lret
fwait
sbb
sbb
cmpl
mov
mov
and
pop
mov
cltd
cmp
icebp
and
fnsave
xor
loop
jnp
cmp
push
lods
testb
sahf
es
out
push
xchg
inc
xlat
cs
mov
das
lock
ret
push
xchg
jmp
stos
xor
xchg
cli
fcmovnu
xchg
lds
nop
pop
push
cwtl
push
cmp
add
imul
insb
push
inc
iret
dec
xor
lods
leave
add
arpl
and
dec
rol
sub
movsb
data16
icebp
sub
xchg
in
mov
add
mov
pushf
xor
or
add
sub
lods
stos
negl
fiadds
adc
mov
mov
out
or
push
pop
add
mov
dec
sub
iret
int
out
frstor
push
pushf
mov
loop
xlat
xlat
loopne
je
sub
jnp
enter
outsl
dec
iret
adc
movsl
lds
and
cltd
rorb
cmp
pop
and
mov
cmc
pop
xchg
mov
icebp
fldenv
cmpsl
pusha
fistpl
les
mul
push
xor
nop
pop
movsl
inc
test
aaa
jle
jae
sbb
in
xor
mov
add
lods
jo
into
mov
popa
js
mov
and
inc
inc
cs
sbbl
bound
inc
jle
movsl
push
inc
sbb
cmp
ficompl
push
mov
jge
adc
lds
mov
into
das
push
and
mov
lods
jg
arpl
pop
icebp
cmp
faddp
push
lahf
pop
mov
push
xlat
inc
xor
repz
mov
jns
mov
adc
adc
cld
cltd
cmc
pusha
inc
xchg
mov
stos
jo
sarb
inc
xchg
push
jns
xor
addr16
pop
adc
rclb
test
out
mov
or
lcall
stos
xlat
dec
mov
ficompl
lret
fucom
rolb
mov
cli
mov
mov
leave
outsb
movsl
ljmp
es
cmp
flds
data16
jnp
push
jl
add
out
jno
mov
dec
subl
in
sbb
mov
mov
sahf
dec
pop
adc
inc
and
inc
insb
push
andl
adc
mov
dec
and
insb
sub
sub
ss
mov
sub
push
outsl
jae
jne
and
and
push
pop
sub
push
pushf
aaa
test
mov
and
lods
int
lods
bound
cmp
lahf
arpl
int
sbb
pavgw
or
push
sub
loopne
std
pop
int3
jns
test
cmp
jge
push
lods
mov
or
mov
push
in
sub
mov
pop
rcll
xlat
mov
add
xchg
mov
or
daa
xchg
adc
dec
jae
cs
fwait
pop
fsubrs
fisubl
lret
push
in
lods
jnp
or
xchg
mov
ljmp
jne
cmpsl
fsts
push
jnp
aam
dec
arpl
nop
jb
jnp
mov
into
cmpsl
stos
xchg
les
das
movsb
and
pop
mov
bswap
mov
shl
test
jl
push
hlt
cld
or
dec
aad
pop
ffree
mov
shll
inc
sti
iret
test
mov
inc
nop
aaa
cmpl
je
shll
sbb
xchg
xor
pop
jg
and
stos
sahf
pushf
pop
daa
fs
cmpsb
mov
cwtl
stos
cli
jne
inc
dec
mov
mov
push
mov
mov
std
lods
daa
xchg
es
adc
cmpsb
add
call
stc
cmp
movsb
push
fldl
mov
rorl
je
inc
clc
bound
xchg
daa
jg
pushf
je
add
rorb
les
and
xor
cmp
lret
es
add
pop
dec
loopne
pusha
sub
aaa
xchg
fbstp
dec
in
push
les
out
mov
sbb
xchg
in
clc
inc
xchg
ret
in
add
out
lds
adc
jle
and
and
push
nop
cmc
mov
in
and
add
aaa
ficoml
dec
or
xchg
and
xchg
lods
xor
jno
mov
and
sti
movb
cmpsb
inc
mov
xor
shlb
xchg
push
mov
xchg
adcb
popf
cmp
cwtl
mov
push
mov
dec
sub
fstcw
stos
jnp
fildl
dec
pop
inc
cld
setb
aas
orb
or
xchg
sub
not
sbb
pop
movsb
aad
xchg
ljmp
push
into
sbb
lds
or
outsl
pop
jbe
loope
pop
cmp
cmc
cmp
dec
xchg
je
adc
cmp
repnz
xchg
jp
pop
das
popa
out
mov
loopne
mov
or
lods
incb
dec
mull
cltd
add
push
std
xchg
pop
stc
imul
orb
mov
call
pop
push
push
mov
jmp
movsl
cmp
lcall
loopne
or
fwait
in
rcrl
xchg
jcxz
jecxz
ss
mov
push
lcall
test
mov
loope
stc
pop
and
negl
xchg
adc
imul
cwtl
and
ja
mov
mov
add
imul
icebp
adc
push
repnz
icebp
xchg
test
pop
add
mov
or
outsl
xchg
xchg
xchg
ret
stc
pop
mov
int
pop
sbb
clc
xlat
lret
add
test
cltd
jo
rorl
cmpsb
cmc
push
fbld
aaa
sub
imul
lcall
pop
jne
stos
pop
xchg
sbb
int
in
jns
cs
fidivl
cld
push
repnz
push
add
mov
add
cmp
movsb
push
movsb
insl
js
movsb
hlt
cwtl
mov
jno
rolb
dec
push
pusha
lock
lcall
xchg
add
and
cltd
arpl
nop
push
push
pop
mov
mov
adc
mov
stos
ljmp
xor
and
lahf
int
je
mov
jl
pop
rorb
fists
dec
ds
pop
scas
cli
pop
cmp
xchg
movsb
leave
and
push
cmc
mov
std
adc
movsb
aam
gs
out
dec
xorl
cmpsl
das
mov
test
adc
loop
mov
pushf
dec
xchg
sbb
mov
stos
jp
mov
jecxz
xor
outsl
sub
sbb
adc
je
dec
mov
mov
lret
dec
jp
lcall
lret
iret
iret
mov
and
mov
inc
std
sar
push
push
push
popa
movb
mov
cli
movsl
sarl
xor
mov
pop
stc
mov
pop
fadd
sub
bound
push
rcr
mov
and
dec
jp
sbb
iret
sahf
xor
inc
push
adcb
sub
fs
sbb
leave
int
cli
insl
push
add
inc
test
add
lds
mov
xchg
fmul
or
loopne
push
popa
imul
icebp
sbb
sbb
aas
hlt
cld
stc
cs
pop
leave
add
mov
cltd
mov
inc
repnz
in
in
xor
or
push
int3
xchg
scas
in
fsts
stc
sub
lds
jbe
sbb
shrb
inc
lods
fnstenv
dec
into
pop
jmp
adc
js
in
daa
push
dec
pushf
inc
xlat
lret
subl
and
and
mov
lahf
sahf
in
insb
mov
out
push
test
loopne
jle
mov
pushf
xor
pop
cmpsl
cmpsb
jbe
push
dec
jmp
pop
jnp
das
ret
fwait
data16
ss
add
mov
arpl
sbbb
sbb
xchg
dec
in
std
push
lds
cmc
jmp
out
stc
xchg
mov
push
cmp
bound
adc
and
xor
out
mov
cltd
andb
or
jo
xor
mov
test
xchg
xchg
rorl
xor
adc
outsb
fsubs
imul
fcmovbe
adc
stos
adc
cwtl
jg
jnp
mov
clc
xchg
mov
and
pop
imul
loopne
and
pop
test
lds
popf
mov
or
lret
lahf
shlb
imul
aad
adc
mov
ret
inc
push
xchg
add
fnsave
xor
adc
add
or
daa
in
jg
push
or
pop
sbb
jp
mov
shlb
adc
cmp
pushf
push
and
xchg
in
mov
mov
push
dec
inc
das
rol
iret
aas
or
add
push
dec
fwait
adc
pop
cmpsb
mov
pop
cmp
imul
movsl
mov
dec
xor
call
jp
fiaddl
sbb
jg
xchg
jae
lret
test
dec
shll
cmp
rcl
push
sbb
inc
fistps
push
sbb
sub
jo
push
or
sahf
pop
fisubrs
cmp
aas
lcall
stc
xchg
mov
lcall
pop
test
mov
push
push
jo
test
pop
lods
sub
nop
jno
jg
subl
cmp
push
mov
mov
mov
hlt
pop
jbe
cld
sahf
pusha
bound
cwtl
scas
dec
adc
xchg
xor
ja
xchg
into
lret
jl
ljmp
inc
jmp
add
subb
icebp
and
movsl
lods
pop
sub
mov
dec
out
scas
jne
pop
daa
xor
orl
jl
mov
pushf
aad
cltd
mov
flds
outsw
mov
or
or
lea
hlt
pop
fldcw
jecxz
xchg
insb
adc
inc
repz
xor
out
fldcw
pop
out
inc
pop
hlt
push
cltd
or
sub
jp
sti
in
ret
in
jo
adcl
fnstenv
imull
lods
or
test
nop
int
adc
push
adc
daa
fs
repnz
test
hlt
fildll
and
imul
or
jnp
dec
lret
xor
jo
inc
jne
fimull
cmp
out
es
rol
sbb
xchg
xchg
clc
scas
ja
push
and
inc
js
in
icebp
cwtl
loope
imul
fists
jae
mov
pusha
pop
cmpsl
adc
cmp
lods
cli
sbb
and
inc
inc
clc
push
xchg
sbb
lods
push
xchg
in
xor
pop
push
inc
xorb
sbb
loopne
hlt
or
lcall
inc
fcmovu
push
inc
pop
adc
pop
stc
jnp
sbb
sub
mov
outsl
push
lds
mov
mov
rcr
movsb
mov
or
push
push
ds
pop
mov
sbb
iret
dec
orl
in
mov
out
mov
pop
fistpl
cmp
xlat
test
xor
push
push
loopne
and
es
gs
and
dec
xchg
cld
dec
cmp
loope
or
xchg
pop
pusha
sub
stos
popf
dec
mov
mov
clc
jmp
push
mov
std
leave
cmovo
bound
dec
outsl
int
jb,pt
cmc
mov
push
xchg
pop
dec
dec
pop
xchg
mov
sahf
mov
roll
aaa
stos
mov
das
mov
mov
das
mov
jg
sub
insl
dec
or
mov
jae
cmpb
mov
out
or
pop
and
lcall
xchg
push
std
inc
add
das
mov
xchg
movsb
push
push
xchg
je
pop
mov
sbb
mov
adc
aam
sub
add
arpl
sub
add
inc
jbe
insl
sub
mov
jbe
or
fists
enter
pop
lret
sub
add
lods
sbb
arpl
adc
push
pushf
sbb
popf
mov
cwtl
int3
out
test
mov
jl
adc
scas
rolb
push
mov
test
or
sbb
fistpll
in
mov
or
inc
pop
and
push
imul
inc
xrelease
rsqrtps
daa
push
push
mov
mov
and
scas
test
int
int
adc
fs
inc
inc
add
cwtl
mov
movsl
movsl
pushf
mov
pop
mov
imul
mov
stos
cmpsb
mov
jl
jno
and
and
push
sub
or
out
movsl
test
cmp
iret
sub
iret
ret
xor
movsb
and
es
dec
push
jns
mov
xor
popa
subl
das
out
adc
sub
movsl
xchg
loope
mov
mov
cmp
jmp
lahf
and
adc
rorl
aaa
int3
out
aam
loopne
pop
lret
xchg
push
loop
mov
mov
jmp
cmpsl
pushf
sbb
mov
push
repnz
paddusw
mov
out
test
test
imul
dec
cmp
adc
inc
sti
and
dec
lret
mov
fistl
hlt
shll
orb
pop
mov
cs
fistpl
push
xlat
rcll
pusha
pop
insl
jb
add
lret
xchg
insb
lods
jp
lea
sbb
mov
fimull
and
outsl
subb
inc
xchg
xor
test
movsb
sbb
lahf
xor
mov
ja
pop
stos
cmp
in
sub
cltd
mov
xor
std
into
mov
in
xchg
xchg
pop
lcall
and
mov
pop
mov
jnp
inc
shrb
add
insb
push
adc
mov
push
lahf
cmp
xchg
in
adc
adc
cmp
push
adc
dec
dec
leave
scas
out
cs
and
outsl
outsb
fidivl
and
mov
aam
push
and
cli
gs
lahf
lret
arpl
les
cwtl
xor
mov
mov
rcpps
mov
insl
mov
ss
xor
dec
int3
push
movsb
popf
cmpl
adcl
cmpsb
mov
imul
mov
ljmp
shld
inc
and
inc
loopne
xor
stc
pop
push
fxch
add
pop
adc
push
insb
mov
ret
or
mov
sahf
ret
push
lret
and
and
mov
push
ficomps
out
mov
ja
out
out
pop
pop
mov
ja
in
mov
jns
lret
fsub
sarb
mov
sub
test
arpl
adc
out
sbb
shlb
dec
xor
cld
lods
sbb
mov
adc
repnz
mov
iret
ret
add
js
and
test
out
pop
fwait
pop
cli
cmc
pop
sbb
cmpsb
in
in
stos
xchg
mov
mov
fcmovnbe
mov
iret
sar
data16
daa
mov
inc
imul
inc
aad
jb
mov
das
xor
pop
xchg
push
in
cmp
push
cmp
rcrb
dec
pop
dec
mov
pop
cmp
push
mov
cltd
ss
lock
mov
mov
les
stos
adc
inc
ss
mov
jne
js
xor
and
jmp
mov
cltd
sub
mov
repz
dec
dec
mov
stos
mov
jge
pop
es
int
leave
xchg
push
pop
mov
and
add
loope
cli
cmp
push
xor
insl
mov
in
lods
xor
lods
pop
ret
inc
mov
xorl
xchg
xor
cs
dec
idivb
cmp
jmp
lret
cwtl
push
or
mov
lahf
inc
xchg
call
std
pop
test
popf
rolb
adc
fucomp
shrl
cltd
ss
or
dec
fsubr
aam
xchg
dec
fiaddl
test
and
lahf
cld
or
adc
dec
mov
sbb
outsl
into
mov
sbb
sbb
loope
addps
or
fisubrl
xor
clc
sub
mov
push
iret
xor
fcomp
clc
cwtl
fistl
out
ret
int3
and
lcall
add
in
daa
push
fnstenv
or
out
dec
mov
adc
jmp
stos
out
stc
inc
mov
cmpsl
inc
add
dec
or
cld
push
or
or
js
clc
in
mov
xchg
mov
dec
ss
movsl
test
lret
sbb
bnd
lret
xor
stos
ja
stos
cmp
pop
adc
dec
leave
sub
inc
jnp
leave
stc
sub
fdivs
idivb
lret
pop
lods
call
or
add
jge
mov
cs
xchg
ret
sub
fiadds
bound
cmc
push
cs
mov
adc
xor
out
cmp
mov
out
test
xchg
xchg
push
sbb
jo
mov
into
test
sub
mov
iret
jp
lds
inc
movsb
loope
test
mov
js
add
iret
pushf
pushf
shl
mov
test
imul
ds
std
push
cmp
fdiv
inc
imul
and
ja
daa
pop
jmp
movsl
mov
ret
dec
leave
inc
sbb
jne
mov
fadds
adc
lds
cmp
xchg
jo
icebp
fwait
push
jecxz
jle
pusha
cli
push
mov
xor
js
jmp
repz
int
cltd
inc
cmp
andb
xorl
inc
jns
push
stc
in
mov
fildll
fcomps
out
mov
ds
push
loopne
xchg
xchg
cmp
push
and
outsl
fidivrl
ficoms
xor
std
popa
pushf
lahf
cmpsb
cli
inc
hlt
out
cld
push
stc
adc
push
roll
cmp
fs
sub
sti
push
xchg
cmpsl
jle
pushf
cmpsb
mov
cmc
aam
mov
fisubrs
in
lea
inc
mov
cs
rcr
notl
sbb
inc
fistpl
push
mov
xchg
sub
sub
mov
test
sbb
ret
adc
ret
push
pushf
cmc
ja
je
aaa
and
cs
imul
std
rorb
stos
in
xor
sbb
out
repz
xor
bound
xor
sbb
pushf
xor
inc
push
push
mov
sbb
loopne
dec
rclb
insb
or
shl
loop
loope
sub
ss
rorb
mov
frstor
imull
add
add
pop
add
cwtl
xchg
loopne
and
dec
fs
hlt
mov
mov
insl
fisubs
jmp
jecxz
mov
fwait
out
int3
mov
stc
movsb
daa
jmp
gs
in
sub
mov
jge
ret
jbe
dec
mov
jg
jne
pop
bound
clc
shrl
scas
jg
out
xchg
cmpsb
fst
lods
pop
pop
js
mov
paddusb
movsb
sbbl
mov
fdivl
push
jbe
jp
nop
jne
sti
xchg
out
roll
lock
fdivp
mov
fnstsw
aaa
aam
jns
das
mov
or
test
sti
rclb
clc
cmpsb
popl
mov
aam
xor
hlt
rcll
mov
pusha
jno
das
test
mov
out
mov
jmp
int
stc
mov
adc
sub
lahf
push
sub
loopne
call
sarl
jo
cltd
lods
icebp
cmp
imul
sbb
jo
fsubrl
push
lret
movsl
fldcw
jmp
pop
xor
or
pop
sub
mov
sub
jno
sub
or
inc
dec
push
inc
pop
push
dec
clc
sub
mov
mov
sbb
in
cld
rorl
cmp
ret
into
push
sbb
negl
es
std
add
adc
das
xchg
adc
sbb
inc
and
call
and
push
sbb
cltd
inc
pop
sar
in
add
cmp
inc
add
jecxz
or
divps
jo
mov
and
push
lods
add
loope
dec
xchg
cmp
pop
sti
xchg
xlat
lcall
inc
inc
add
adc
pop
jmp
sbb
int
push
out
insb
loope
pop
push
scas
push
adc
arpl
push
in
js
and
leave
or
jecxz
mov
add
jg
ljmp
cli
in
mov
sar
jns
in
scas
mov
xchg
cmp
cs
jecxz
fnsave
sahf
mov
pop
scas
fdivp
cld
cwtl
mov
test
into
mov
cmc
mov
pop
xchg
sarl
lret
loop
fisubrl
mov
xchg
std
cwtl
sbb
stc
or
mov
aad
mov
js
push
sbb
push
aas
pop
mov
jb
add
jae
jle
jnp
lea
out
stos
dec
xchg
test
lods
je
leave
shrb
aad
and
es
dec
loop
arpl
mov
cmp
mov
add
ds
hlt
das
leave
pop
pop
sub
jns
xor
inc
ja
cwtl
std
stos
pop
repnz
repnz
cmc
out
and
xchg
mov
js
and
fstpt
or
lock
mov
xchg
or
sub
movsb
push
mov
xchg
mov
and
push
call
mov
outsb
lock
mov
inc
out
jmp
jae
pop
pusha
add
mov
call
ffreep
sbb
mov
cmpl
mov
push
push
cmpb
add
or
push
dec
xlat
push
adc
arpl
lcall
or
gs
out
out
enter
aas
jnp
adc
cmp
andl
orb
out
and
scas
push
sarl
xchg
pop
inc
or
mov
scas
sub
mov
rcrl
add
ret
es
xchg
sub
and
out
and
mov
aaa
pop
or
push
ds
sbb
outsl
addr16
and
fisubl
sub
or
xor
fildl
test
mov
mov
sahf
jl
fiaddl
and
jne
dec
and
pop
inc
xor
push
mov
loop
mov
inc
adc
mov
push
adc
loopne
outsl
or
adc
out
xchg
jge
cmp
mov
xchg
lret
push
mov
cmp
in
xchg
sub
mov
xor
cmp
adcb
fs
ljmp
mov
js
movsl
jbe
sbb
inc
pop
mov
daa
or
and
pusha
xor
js
dec
and
ficompl
sbb
mov
add
repz
mull
push
frstor
js
cmc
in
mov
dec
int
mov
xor
xchg
out
dec
ljmp
and
int
lret
rclb
pop
popa
lods
call
mov
lret
sti
mov
lods
inc
mov
lahf
outsb
jne
mov
cld
gs
outsl
xorl
stos
sarl
and
fidivs
xor
mov
shrd
jl
loopne
hlt
mov
ss
in
sub
scas
sub
rcrb
and
js
jno
lret
dec
xchg
testb
ficomps
push
andl
test
push
fldcw
lods
mov
repz
popa
add
sbb
mov
jmp
pop
pop
je
dec
pop
or
lret
arpl
lret
addl
sub
loop
sub
sar
xchg
pxor
test
cld
dec
mov
or
mov
fcomps
flds
inc
jmp
gs
roll
pop
pop
mov
push
jp,pn
rorb
sbb
xchg
push
pop
out
repz
imul
mov
nop
sarl
mov
mov
mov
dec
dec
outsb
fldenv
fsubrs
test
inc
dec
and
popf
cmp
cltd
mov
and
cld
mov
daa
xchg
fwait
stc
notl
hlt
or
std
outsb
or
push
add
push
push
lock
inc
sbb
mov
add
repz
aam
fidivs
pop
sahf
pop
mov
jp
cwtl
jle
mov
jmp
mov
sub
scas
xchg
aas
add
loopne
shlb
in
mov
leave
pop
sbb
fidivs
repz
int3
mov
xchg
pop
inc
hlt
cmpsb
lods
inc
inc
inc
push
outsb
faddl
jb
das
loop
lods
addr16
fsub
adcl
out
or
les
dec
movsb
loope
lock
push
push
mul
out
mov
fsubl
push
int3
and
pop
fldl
ljmp
inc
ljmp
xchg
add
push
push
ficomps
subl
cs
or
xchg
outsb
mov
lods
popa
sbb
sub
movsl
test
dec
add
outsl
imul
jne
push
push
fwait
test
adc
movsb
sub
test
pop
pushf
adc
fs
enter
dec
adc
sbb
adc
jle,pn
sbb
adc
in
push
sti
scas
dec
and
pop
decl
or
movsb
jne
xor
add
nop
fdivrl
inc
lods
sub
inc
repnz
bnd
rcrl
cli
leave
xchg
jecxz
insb
ja
sub
jo
jo
dec
outsl
push
cmpsl
mov
adc
jecxz
out
push
dec
inc
out
mov
ret
gs
inc
notb
pop
pop
xlat
pop
mov
push
push
xor
into
es
dec
push
bswap
lods
add
dec
rcrb
push
xor
sarl
iret
or
add
jge
neg
idivb
xchg
sub
jne
pop
cmc
jmp
or
add
sub
mov
and
aad
adc
sub
jp
jp
mov
das
cmp
outsl
inc
hlt
push
xor
mov
jecxz
xchg
jno
push
lahf
stos
pusha
out
loopne
cltd
test
cmp
cmp
cmpsl
add
sahf
push
push
stos
test
lret
dec
clc
cmpsl
decl
xchg
mov
or
test
dec
or
sbb
sahf
mov
pop
mulb
push
cmpb
mov
dec
popa
adc
mov
xor
addr16
jmp
outsb
xor
mov
aas
sbb
inc
xor
mov
loope
clc
stos
test
inc
scas
mov
cwtl
adc
in
sbb
inc
scas
iret
fmull
sbb
ffreep
adc
imul
ret
push
xor
sub
dec
stc
fisubrs
mov
insb
imul
jbe
jb
insl
je
pop
out
enter
jne
cmp
push
loope
outsb
xor
pop
inc
and
ud0
fidivrl
cmp
mov
int
push
sbb
dec
out
shll
mov
adc
sbb
mov
jge
cmpsl
adc
into
xchg
push
xor
mov
fnstsw
mov
adc
pop
push
xchg
nop
ret
cmp
insl
and
or
mov
lods
ja
data16
pop
cmp
or
xlat
sbb
inc
mov
and
fnsave
pop
imulb
dec
ss
iret
addb
shlb
loopne
filds
test
push
stc
mov
out
xchg
pop
mov
pop
and
cmp
push
adc
rclb
xchg
pmaxsw
rolb
in
bound
nop
scas
lods
andl
cmpsl
xor
adc
add
fsubrp
out
dec
mov
and
cmp
xchg
popf
mov
repz
rorl
jno
cmp
sbb
push
les
jp
and
bound
push
add
lcall
mov
pop
pop
int3
mov
sahf
aaa
cli
dec
das
stos
pop
stc
xchg
mov
sub
pop
jp
repnz
lods
adc
xor
xchg
iret
jno
xchg
and
int
pop
inc
enter
or
roll
stc
mov
fstpl
push
mov
jne
in
adc
lret
out
pop
inc
aam
mov
add
sbb
imul
mov
xchg
shll
popf
cmpsb
xchg
and
jg
xor
ljmp
test
cmpl
push
and
and
aad
push
inc
cli
popf
data16
adc
insl
push
fldl
cld
icebp
ds
mov
cmp
mov
sub
pop
xor
or
dec
xchg
ret
sti
mov
pop
andl
in
mov
lods
mov
imul
into
movsl
jl
push
mov
sahf
movsb
out
sbb
imul
xchg
mov
push
ficoms
cld
enter
ljmp
push
cmp
mov
and
hlt
push
jns
add
data16
mov
xor
fcmovbe
out
xor
hlt
ja
or
data16
cmp
in
aaa
mov
push
shl
sarb
out
and
jg
nop
push
aad
or
mov
icebp
and
icebp
std
push
pop
and
sbb
movsl
or
adc
add
fwait
adc
data16
mov
add
leave
outsb
xor
inc
faddl
pop
in
into
xlat
mov
cmpsb
mov
cmp
rcll
inc
cmp
sbb
cmpl
mov
jle
or
fsub
movsb
outsb
add
mov
push
mov
cmp
push
push
sbb
enter
fmull
es
dec
orb
xlat
sahf
je
in
push
jno
fidivrs
cmc
into
xchg
xor
dec
mov
pop
push
sbb
push
cmc
daa
nop
cltd
add
sub
adc
dec
sub
stos
imul
mov
xchg
xor
mov
fdivr
dec
dec
frstor
test
adc
shrb
mulb
jg
jno
pop
lea
cmp
pop
pop
pop
push
imul
jb
repz
adc
lcall
push
cmpsl
lcall
mov
ds
stos
scas
cltd
push
jne
mov
pop
sbb
fdivrs
xchg
iret
jo
sahf
pop
sbb
out
jae
mov
cltd
in
test
cmp
cli
push
mov
cmp
int
fwait
dec
es
sbb
sbb
sar
fcomp
cmp
cld
xchg
mov
add
shll
repnz
cs
xlat
lret
fldt
scas
mov
fwait
shrb
stos
jo
stc
mov
sub
shrb
fwait
in
or
push
mov
rcrl
jecxz
inc
jo
add
imul
and
mov
adc
jg
xor
ret
sbb
pop
clc
repnz
xchg
adc
dec
lods
fdivr
mov
loope
test
enter
stos
sbb
test
cmpsb
sub
fistpll
adc
dec
mov
in
adc
jb
mov
push
ljmp
mov
mov
faddl
or
cmp
mov
mov
add
inc
jne
inc
xor
mov
jp
pop
or
movsl
lret
call
jle
notl
add
sbb
push
rcrb
addb
out
cmp
leave
iret
cmp
nop
mov
test
adc
lods
xor
push
movsb
xor
fisubl
mov
inc
xchg
js
dec
shlb
nop
fdivr
push
dec
nop
push
sub
fld
test
stos
jb
cltd
push
repnz
mov
mov
enter
imul
push
cmp
sub
xchg
data16
jmp
sub
loop
stos
outsb
popf
rclb
xchg
and
dec
push
out
push
push
dec
pop
and
lret
mov
test
pop
jo
cmp
mov
cmc
les
mov
inc
or
jl
pushf
mov
or
or
cltd
cmc
aam
call
in
xchg
dec
mov
aaa
dec
dec
in
cmp
xor
mov
jmp
out
sub
loopne
inc
rcll
inc
fldcw
or
shlb
imul
inc
xor
and
xor
or
insl
test
xor
push
or
mov
fs
lds
insl
popf
mov
mov
jecxz
xor
xor
loop
test
movsl
xchg
push
cld
ljmp
sbb
rcr
inc
sub
int3
add
into
jae
cs
or
xlat
sbb
bnd
xor
cmp
fists
dec
test
inc
test
inc
mov
stc
stos
mov
mov
cmc
mov
pop
mov
cs
and
clc
ror
mov
movsl
out
cmpl
xchg
dec
mov
mov
pop
dec
out
hlt
mov
adc
inc
mov
rep
fidivl
mov
dec
mov
pop
sahf
inc
leave
add
or
cmp
lods
mov
ja
sub
lds
aas
sub
mov
push
shrb
icebp
cmp
sub
add
push
push
jo
jmp
xor
repz
xchg
gs
and
cs
xlat
scas
and
or
cmpsl
and
and
xlat
mov
mov
jae
push
dec
shlb
icebp
into
mov
arpl
out
hlt
mov
pop
xor
imul
test
pop
pop
negb
loop,pt
add
gs
lods
dec
dec
cmpsl
hlt
in
inc
repnz
lea
inc
int3
les
inc
ja
xchg
arpl
in
jecxz
stc
mov
cmp
std
add
adc
sarb
data16
call
sbbl
fld
imul
in
ret
hlt
sbb
mov
icebp
fmul
gs
test
fbstp
jmp
jmp
push
and
sbb
jmp
push
dec
lret
in
cltd
fisttpll
mov
xchg
add
cmp
mov
icebp
mov
sarb
cmp
iret
lcall
and
movsl
and
push
popa
push
add
mov
cwtl
test
loopne
jbe
inc
add
fldt
shlb
cmpsl
pop
aad
sbb
push
cmp
subl
pop
add
lock
aas
or
mov
arpl
and
dec
cmp
inc
or
dec
fwait
inc
or
push
rcrb
sub
out
jnp
xor
push
sbb
mov
sbb
pop
pushf
outsl
imul
ret
add
lea
lcall
push
xlat
gs
mov
adcl
loope
pop
in
jno
in
leave
cltd
jae
clc
pop
lock
cmp
bound
ficompl
ret
mov
scas
sbb
adc
or
inc
in
sub
mov
pop
outsb
xchg
lret
lods
pop
cld
fcmovnu
aam
aaa
or
clc
test
push
push
mov
mov
fnstsw
mov
mov
stos
lods
or
shll
sbb
rorb
jo
add
cmpsl
pop
mov
jns
jge
xchg
fstps
dec
fcomps
nop
dec
popf
std
into
xor
sub
xchg
inc
push
mov
stos
push
adc
mov
cmc
and
push
mov
test
aas
gs
fwait
xchg
jo
adc
inc
sbbl
xchg
ret
mov
adc
dec
inc
clc
test
mov
lret
jl
inc
mov
and
cmp
pop
xchg
cwtl
mov
or
mov
or
xchg
jge
mov
mov
xchg
lret
dec
je
nop
ja
pop
dec
or
rcll
pcmpeqb
sbb
sbb
jl
push
outsb
xchg
aad
xor
dec
add
lds
add
and
idivl
daa
iret
adc
jge
ret
aas
pop
xor
mov
into
jbe
mov
push
xchg
and
adc
inc
inc
mov
lods
bound
hlt
jnp
mov
dec
push
adc
je
ds
and
pop
xor
or
xor
fwait
cmpsb
ret
cmp
mov
insb
orl
ljmp
stos
jns
mov
les
pop
insl
xor
dec
add
ret
push
and
call
add
pop
push
lahf
xchg
xor
imul
test
cmp
sub
icebp
xor
pop
cmp
sbb
mov
js
dec
mov
push
imul
neg
sarl
out
xlat
ret
ss
bound
inc
clc
out
mov
rolb
sbb
imull
or
ljmp
sub
test
ficompl
push
add
dec
dec
xor
lock
popf
daa
sahf
xor
sub
adc
mov
insb
jmp
jge
mov
pusha
mov
movsl
loopne
jecxz
sahf
into
mulb
xor
pop
push
int3
sahf
sbb
outsb
push
fldenv
adc
pushf
pusha
xor
push
push
or
adc
ss
cmp
xchg
or
cmpsl
sub
sbb
push
jnp
mov
bswap
mov
insb
lds
add
ficomps
dec
or
pop
dec
fmuls
cld
add
loop
adc
les
mov
rcll
xchg
stc
cld
or
xor
test
dec
stos
aaa
jne
push
adc
jecxz
push
jb,pt
jmp
loope
in
cld
mov
pop
push
fs
lcall
pop
inc
aaa
xlat
in
pop
cmpsb
dec
arpl
push
cli
imul
call
stos
fisttpll
movsl
mov
xchg
cmpsb
jg
fstpl
pop
adc
jnp
xorl
repnz
insl
jle
nop
pop
mov
cmp
xchg
loop
int3
gs
lcall
orb
call
dec
aad
stc
sub
jns
loopne
fstpt
in
push
or
fs
xor
cmp
xor
jmp
mov
bound
adc
imul
loope
adc
ret
xor
xchg
test
adc
mov
rolb
in
js
dec
sti
test
cmpsb
sbb
xor
mov
inc
arpl
or
xor
out
mov
sub
lea
mov
movl
add
pop
and
mov
pop
arpl
or
aaa
pop
add
scas
jno
fdivrl
adc
add
lcall
in
xchg
sbb
mov
movsl
dec
add
jmp
lahf
cltd
xlat
mov
popa
outsl
jmp
gs
and
scas
mov
adc
aas
stc
jae
sub
push
adc
mov
sbb
aad
aam
lahf
in
in
pop
sub
xchg
lea
sahf
imull
dec
jmp
add
aas
adc
inc
and
or
add
scas
jne
or
sbb
lods
fwait
inc
mov
mov
stos
lock
mov
ss
in
les
add
stc
jae
dec
push
and
lret
movsb
cld
div
adc
stos
stos
push
add
jno,pt
lahf
xor
es
push
pop
dec
or
dec
add
lods
in
pop
xchg
popf
ss
fsubrl
scas
subb
mov
mov
popa
ss
in
imul
subl
dec
push
add
sbb
jb
xchg
adc
test
ror
xor
jae
sub
dec
dec
push
pop
inc
fisubrl
add
outsb
bound
xlat
int
jbe,pt
loop
mov
and
cmpsl
aaa
xchg
mov
pop
in
cmp
jnp
push
loope
sbb
shlb
jnp
test
jo
lods
push
clc
jg
mov
sub
das
inc
cmp
sbb
mov
jnp
orb
mov
xor
mov
repnz
push
mov
dec
mov
leave
cmp
xchg
nop
mov
fs
scas
cmpsl
enter
xchg
cmp
or
jl
jb
loop
jecxz
pop
mov
rcll
fnstenv
rorl
or
mov
outsb
inc
cmc
in
cmp
test
sbb
icebp
adcb
cmp
xchg
jp
adc
xchg
mov
xchg
out
add
jns
dec
cmp
mov
les
loop
push
sahf
xor
ret
push
ficoms
push
sub
and
mov
es
mov
adc
sub
sbb
or
mov
xchg
lret
fwait
sarb
jbe
inc
imul
pop
jns
inc
dec
mov
xor
lock
fcompl
sbb
mov
fcmove
test
jb
cmp
sbb
inc
push
add
pop
js
cwtl
nop
fistpll
add
pop
inc
add
mov
jb
out
insl
insb
jmp
add
fldenv
divb
mov
mov
lock
call
mov
lret
lahf
jmp
push
cld
xlat
dec
push
dec
ss
add
outsl
xchg
aas
loop
lcall
cli
imul
insl
pop
mov
jle
repnz
mov
popa
jg
xor
lret
jg
dec
and
mov
arpl
lret
in
mov
xor
stos
xchg
jmp
loope
int3
pop
mov
or
stc
sub
jmp
dec
push
sub
mov
daa
adc
xchg
mov
leave
cmc
jle
aaa
sarl
mov
xchg
add
shrl
clc
sub
cmc
cltd
mov
and
xor
jae
sbb
cwtl
sbb
push
xor
xchg
jle
rcr
mov
mov
jecxz
pop
mov
hlt
and
movsl
adc
inc
aam
loop
test
push
test
outsl
aad
mov
or
je
sub
ret
int
fmul
nop
divb
lcall
or
xor
mov
frstor
fucompp
ficoml
inc
inc
ret
inc
push
ret
pop
or
sti
loopne
add
test
add
test
aam
cmc
cmc
jp
lods
cmpsb
fadds
jg
int3
sbb
bound
ret
pusha
repz
sti
lahf
or
call
add
ljmp
mov
in
push
mov
icebp
jmp
xchg
mov
xchg
pop
movsb
stos
push
into
push
rol
std
jecxz
test
in
lods
hlt
movsl
enter
adc
fisttps
sub
pop
xchg
jmp
mov
loop
and
push
mov
push
pusha
cmpsb
xor
pop
mov
pop
rclb
push
in
jecxz
mov
adc
jnp
jns
inc
jns,pn
xchg
adc
lea
or
add
fisubrl
jmp
mov
rol
cld
inc
add
lods
fwait
mov
addr16
mov
lea
mov
jnp
push
cmp
fstpt
popl
push
xchg
and
fsts
call
pop
pop
ret
sub
inc
ja
pop
jle
incl
sbb
loopne
pop
call
dec
insl
jnp
xchg
fucom
testl
adc
mov
insb
dec
sbb
mov
clc
bound
data16
movsl
and
test
xor
inc
jp
xor
addr16
sub
daa
dec
repz
nop
push
cmp
sub
xor
dec
outsb
mov
hlt
enter
xchg
or
sub
loopne
jns
xchg
hlt
imul
dec
lcall
ret
mov
cmp
out
std
or
stos
fistpll
js
xchg
ja
cmpb
iret
push
or
lret
mov
leave
xor
mov
jmp
das
sub
mov
loop
daa
jae
jno
out
add
in
hlt
loop
stos
sbb
adc
stos
or
mov
mov
xor
xchg
jge
shrb
out
nop
mov
xlat
mov
iret
mov
inc
mov
add
js
or
jns
pop
cmpsl
out
cmc
mov
add
mov
decl
mov
pop
pop
outsb
jl
dec
dec
mov
jge
xor
sub
adc
bnd
jne
push
enter
imul
xchg
sti
xchg
adc
gs
mov
pusha
inc
xor
fcoml
rorl
mull
mov
or
popa
aam
movsb
sarl
in
fcmovne
outsb
imul
iret
ss
ljmp
bound
insl
data16
sbb
iret
stos
aaa
pop
add
aad
test
pop
pop
addr16
test
pop
test
mov
out
test
dec
shr
in
into
or
roll
sbb
or
ja
inc
sbb
pop
jns
imul
lods
pop
mov
fstpl
xchg
test
add
in
int3
adc
mov
ljmp
es
in
jb
xchg
cmp
out
mov
out
nop
cwtl
lret
shll
mov
movsb
inc
sbb
dec
dec
pushf
mov
add
out
fstl
mov
push
push
mov
fsts
and
cmp
test
adc
dec
xor
addr16
negb
lahf
daa
in
mov
sti
and
lock
jp
or
inc
cmpsb
fistps
push
and
inc
sti
xor
jl
pop
xor
cmp
mov
shll
xor
jle
xor
mov
push
mov
xor
xchg
add
mov
enter
and
int
outsb
adc
pop
sbb
push
jmp
dec
jecxz
std
cld
ret
inc
mov
pusha
push
cmp
mov
das
push
jne
rol
push
add
sub
pop
icebp
int3
inc
std
xchg
test
mov
cmp
push
inc
pop
xchg
movsb
mov
imul
and
out
rcl
fs
push
adc
imul
icebp
mov
mov
mov
repz
mov
fnstsw
in
sub
cltd
push
frstor
mov
mov
rorl
dec
cmp
popa
push
loope
mov
fcmovnb
xor
pop
sbb
jl
shrb
mov
sbb
sbb
jo
sahf
stos
adc
sbb
add
ljmp
call
sbb
mov
bound
or
mov
jo
icebp
and
scas
xabort
add
jl
mov
ss
and
jecxz
mov
sub
add
sub
insb
push
das
xchg
mov
push
sbb
test
pop
dec
popf
mov
xor
xlat
aam
fldpi
lahf
and
test
std
popa
and
pop
cmpsb
lods
lahf
sbb
insb
mov
stos
fadds
jmp
in
mov
inc
loope
xor
pop
cmp
jns
imul
lahf
dec
out
std
in
outsl
push
loop
xchg
xchg
jge
sub
shlb
lcall
shll
xor
pop
clc
stc
fists
xchg
and
addr16
sbb
aaa
mov
fxch
mov
jbe
xchg
ret
push
movsl
pop
jg,pt
fwait
pop
out
pop
repnz
loope
xchg
cmp
imul
jl
jecxz
adc
insb
pop
aad
sbb
loope
ret
std
push
lock
lods
cmp
fmul
mov
cmp
push
or
in
pop
sub
fsubrp
inc
ljmp
cmp
cld
inc
lds
push
das
push
xor
cmpsb
lcall
ljmp
pop
ret
adc
ljmp
test
xchg
xor
xorb
add
push
xor
mov
subb
pop
push
orl
mov
in
mov
test
punpckldq
xchg
stos
fwait
push
jmp
cli
popl
sub
aas
mov
xchg
dec
sahf
inc
mov
in
inc
popa
nop
fadds
in
xor
push
imulb
push
add
bound
in
jns
filds
ss
lahf
lahf
fists
popf
cmpsl
addb
jmp
or
arpl
out
push
iret
dec
sti
push
pop
jg
jns
xor
rcr
addr16
fwait
ret
testl
mov
adc
push
adc
insb
adc
add
xor
lds
js
jae
into
cs
cmp
dec
and
sub
mov
sub
pusha
aaa
stc
mov
sbb
jp
in
xchg
mov
push
pop
movsl
dec
push
cli
jmp
movsl
in
loope
cli
aaa
xchg
and
lods
test
and
sub
mov
data16
sub
sbb
scas
fwait
in
lahf
pop
xchg
push
bound
mov
jno
aaa
and
sti
and
mov
add
cmp
cmp
scas
jae
aaa
jne
shll
sbb
dec
push
jg
xor
lahf
out
push
insl
mov
rcrb
adc
dec
std
scas
pushf
xor
and
daa
xchg
icebp
in
ljmp
test
scas
push
je
sbb
inc
sbb
push
rolb
sub
cwtl
xor
sar
aam
ljmp
int
pop
mov
mov
cs
lock
call
scas
ds
push
and
xchg
mov
addr16
mov
adc
pushf
int3
push
xor
mov
adc
xchg
cmp
lret
xchg
dec
ljmp
dec
fstpt
and
mov
stos
xchg
out
adc
jmp
xchg
std
dec
nop
push
lea
pusha
push
ret
lds
sub
adc
mov
xlat
xchg
les
dec
idiv
push
movsl
pop
mov
test
stos
aaa
cmp
fwait
shll
xchg
dec
stos
pop
gs
fnsave
sti
std
mov
dec
shlb
clc
add
nop
loope
push
pop
push
add
push
or
pushf
out
xor
fs
pop
fwait
add
ret
imul
enter
push
xor
mov
sbb
ficoml
outsl
icebp
fs
sti
scas
popf
aam
inc
pop
push
cmp
fwait
sub
in
lods
mov
lret
fsub
aaa
nop
inc
inc
fs
mov
mov
movsl
scas
fs
sub
add
sahf
adc
and
lea
xchg
movsb
outsb
adc
mov
aaa
cmp
pop
aad
lahf
adc
sbb
jge
push
and
movsl
inc
adc
cmp
push
ss
add
dec
or
or
insl
insl
jne
rclb
or
imul
fwait
shlb
and
xorb
icebp
pop
inc
data16
gs
imul
imulb
cmp
hlt
sbb
mov
lahf
inc
out
in
out
mov
xor
shl
pop
lahf
aam
push
out
adc
push
in
cwtl
outsl
icebp
sbb
test
dec
inc
ss
xor
inc
dec
push
ret
inc
or
dec
into
js,pt
int3
jecxz
mov
ljmp
mov
cld
scas
pop
push
in
popa
inc
fadds
roll
mov
test
cmp
xchg
push
dec
pop
cmp
inc
xor
cmc
popa
lea
shll
lret
sub
xchg
jmp
cld
lds
insl
xor
push
mov
or
cwtl
xlat
mov
mov
pop
arpl
mov
idivl
ret
jl
mov
jmp
loop
and
ja
ljmp
xor
subl
lea
xchg
out
inc
xchg
test
lock
stc
stc
rol
push
subb
addl
popa
orl
pop
sbb
pop
mov
imul
mov
or
mov
pop
mov
aas
stos
aaa
ret
mov
ds
call
insb
push
ss
mov
jae
mov
mov
test
mov
pop
jmp
jbe
pop
ljmp
mov
dec
inc
mov
jmp
repz
or
cli
cmp
aas
push
lcall
hlt
je
jno
shll
in
dec
xor
in
sahf
aad
repnz
adc
sub
jno
mov
test
ja
and
mov
adc
cmp
or
mov
dec
pop
lods
cli
or
push
nop
adc
or
scas
fwait
mov
sub
add
fisubs
scas
out
fstpt
jmp
ficompl
mov
mov
adc
das
shlb
push
adc
sub
into
add
mov
push
imul
out
and
lret
pushf
cs
or
rclb
or
leave
mov
mov
aad
lahf
fstp
popa
pop
sub
and
imul
stos
lcall
popa
cmp
mov
and
ljmp
icebp
mov
lcall
push
fsubl
jb
push
orl
pusha
mov
push
lcall
jne
push
sbbl
clc
add
xchg
pushf
cmp
inc
jbe
movsb
and
ljmp
sahf
xchg
aaa
pop
adc
mov
push
in
push
call
cmp
pop
inc
lret
jp
daa
hlt
ss
cli
xchg
mov
push
cmp
inc
and
int
mov
push
ret
movl
out
push
adc
stc
dec
add
inc
xlat
pop
sub
lcall
and
clc
mov
insl
fiaddl
mov
mov
mov
xorl
add
pop
icebp
xchg
test
and
jp
pop
bound
jecxz
mov
xchg
cmp
shl
mov
pushf
shll
movsl
sbb
stc
push
add
push
sbb
push
call
pop
mov
jge
int3
xor
enter
or
sbb
sbb
sarb
ss
cs
push
xchg
cli
testl
inc
sbb
je
test
push
pop
subl
scas
pop
scas
out
xchg
mov
into
call
sbb
cmc
push
xor
mov
fmuls
in
mov
mov
xor
mov
loop
jo
ja
iret
pushl
repz
mov
sub
inc
inc
inc
sub
mov
xchg
mov
push
mov
nop
mov
ljmp
jb
push
testb
xchg
fmull
push
mov
jnp
pop
cmpsb
sbb
sub
jmp
movsl
sub
xchg
out
out
jp
sub
mov
jnp
cmp
ret
inc
inc
daa
jp
xor
cs
lock
lods
cmpsl
add
scas
and
pop
int3
and
loope
or
not
sub
ffreep
xchg
outsb
and
sbb
cmpsl
mov
lds
mov
or
mov
cs
mov
or
repz
test
pop
jge
add
jno
fstpt
outsb
jb
lods
in
cmp
mov
lea
jmp
and
mov
shl
mov
ljmp
cmpsl
nop
and
inc
lcall
ds
add
pop
jg
cld
adc
add
inc
nop
int
xchg
add
rcl
inc
fwait
sub
add
or
test
inc
inc
inc
cmp
out
xchg
cmpsl
xchg
pop
scas
mov
in
cmp
fadd
into
gs
push
xchg
inc
dec
fdivrl
mov
fstpl
data16
dec
in
lock
in
iret
xor
in
cs
mov
jae
ror
negl
xchg
mov
les
aam
mov
pop
cmp
mov
lret
fcoms
adc
cmpl
add
inc
insb
outsb
xchg
out
push
mov
sti
fisttps
jle
inc
movsb
out
mov
scas
xor
loopne
inc
aad
xchg
pushf
sbb
cmp
testl
aam
and
mov
adc
jns
mov
sub
pop
inc
xchg
out
mov
dec
out
mov
xchg
jns
cmp
jb
add
cmpsb
ret
jmp
adc
bound
jecxz
push
cld
or
and
ficoms
addr16
std
push
pop
lods
and
inc
cmpl
cmpsb
into
pop
mov
push
pop
call
nop
xchg
push
xor
sbb
mov
popf
push
adc
or
dec
pop
sbb
subb
push
loopne
sub
push
cmpsl
shrl
add
sub
push
scas
das
sbb
test
fcomps
xor
ficomps
push
popl
and
leave
sahf
sar
daa
push
mov
xor
push
dec
flds
outsl
cmp
pop
popf
push
pop
loop
or
dec
xchg
jle
pop
scas
mov
push
or
pop
adc
xchg
call
stos
add
loop
shlb
jecxz
jg
andb
jl
sbb
aas
mov
dec
adc
sbb
fwait
add
cmp
jmp
ret
dec
mov
in
sub
push
imul
fsub
mov
scas
jl
inc
xchg
mov
dec
ljmp
sub
push
inc
rclb
pop
loopne
lret
mov
shr
mov
push
push
leave
sub
sbb
pop
jbe
and
mov
adc
xchg
jge
sub
pop
mov
adc
mov
push
fmulp
test
aad
ss
or
mov
mov
jg
lret
imul
cmc
pusha
push
stos
in
aaa
jl
dec
or
cmpsb
call
fidivrl
popf
lcall
jo
sub
imulb
fwait
jecxz
sbb
push
xor
sbb
push
es
roll
mov
loop
xor
sbb
fbstp
addr16
push
rcl
mov
incl
fwait
out
ja
sbb
in
and
mov
adc
sub
sub
sbb
stos
or
mov
jbe
imul
loop
loope
push
cmp
inc
dec
cmc
inc
lock
pushl
cmpsl
and
mov
jmp
cld
lahf
loop
mov
cmp
sub
test
dec
inc
inc
xchg
aam
enter
mov
shrl
dec
ja
bound
mov
mov
jno
iret
push
ja
aaa
enterw
cld
xor
inc
pop
imul
or
pop
push
add
pusha
xchg
sbb
jns
sub
push
xchg
lea
aad
jl
aam
pushf
icebp
aam
push
and
pop
popf
and
jle
popa
sbb
test
push
inc
je
ror
xor
test
push
xchg
xlat
mov
sbb
cmpsb
dec
clc
sub
inc
dec
mov
hlt
ja
or
stc
repz
lcall
xor
popf
stc
lods
sub
divl
shrb
jmp
shl
inc
hlt
rcrb
movsb
jg
inc
mov
or
xchg
jbe
mov
enter
add
mov
adc
adcb
outsl
inc
sub
mov
fs
add
mov
mov
push
sub
test
inc
mov
imul
push
mov
movsb
push
xor
jnp
inc
inc
lods
add
leave
icebp
push
push
mov
mov
push
xchg
inc
jne
push
pop
xor
sbb
add
test
insl
mov
or
mov
jo
xor
rcl
cmp
mov
rorl
jne
dec
sub
lret
add
or
adc
aaa
inc
cmpb
fildll
pop
push
sub
push
aad
mov
xchg
sti
insb
icebp
inc
inc
orl
pop
fwait
jge
nop
lods
sti
jg
fsubp
pop
shl
sub
out
in
aas
xlat
aad
jg
add
addr16
stos
push
int3
repz
mov
scas
mov
repnz
inc
inc
test
cld
ret
mov
data16
inc
inc
in
adc
push
shl
sbb
bound
test
in
repnz
jle
outsb
popl
mov
scas
add
and
ljmp
repz
adc
loope
add
mov
inc
or
jo
jns
inc
sub
dec
in
in
sbb
lds
push
dec
sub
pusha
mov
fnstcw
xchg
sub
and
cld
hlt
add
adc
xchg
jge
inc
dec
xor
pushf
insb
call
and
and
xor
mov
das
mov
test
roll
dec
xchg
mov
cmp
lods
lods
enter
xchg
push
inc
mov
pop
mov
dec
cmpl
data16
xor
cltd
sti
cli
inc
push
cli
call
adc
and
and
adc
imul
scas
ror
push
into
mov
push
outsl
mov
sub
pusha
mov
into
push
xchg
cli
add
add
and
jns
lods
jmp
shrl
aaa
add
dec
mov
pop
pop
dec
call
iret
aaa
mov
mov
hlt
decb
xchg
adc
outsb
sar
outsb
push
add
push
fsubp
pop
ds
sub
aas
jne
popa
push
xor
sub
or
adcl
xchg
jbe
cld
fisubs
and
aam
or
add
stos
lods
inc
shlb
sbb
or
mov
stos
int
out
mov
sahf
pop
xchg
lcall
scas
loope
ret
or
call
sub
stc
cmp
lahf
add
dec
dec
and
lds
sbb
call
icebp
aas
addb
cwtl
repz
and
stos
shrb
in
jae
data16
mov
and
inc
aaa
xor
jae
clc
ds
inc
fstps
mov
or
loopne
movsl
push
pop
icebp
and
ds
jge
pop
and
add
cmp
jne
sahf
xchg
repz
mov
call
outsb
cmp
cmc
repz
ljmp
xor
pusha
scas
into
ret
mov
jmp
outsl
mov
mov
inc
pop
icebp
stos
mov
scas
mov
ret
cltd
mov
cld
lahf
pushf
push
addr16
add
xchg
fbstp
xchg
in
mov
mov
mov
fadds
pop
mov
je
js
mov
push
xchg
outsl
inc
shr
data16
pop
and
xchg
cltd
test
lcall
insb
xchg
divl
pop
mov
sub
out
sti
sub
loope
subb
ds
scas
test
and
jo
dec
aam
mov
mov
and
loop
test
popa
cmpsb
test
repnz
inc
jg
mov
xchg
mov
pop
adc
pop
popa
mov
ret
xchg
add
and
fisttpll
insb
insl
jb
jecxz
mov
into
les
sahf
mov
xchg
xor
dec
inc
adc
ja
pop
and
jbe
sbb
adc
jbe
xchg
pop
scas
dec
mov
neg
rcl
xchg
fsts
pop
xlat
movl
lods
jl
sbb
sahf
inc
mov
call
push
je
push
mov
inc
ret
icebp
pop
lods
xor
xor
push
mov
jae
sbb
jecxz
dec
and
rcl
and
divl
sub
jle
test
scas
pop
dec
cld
sahf
dec
mov
add
jecxz
push
out
or
mov
aam
dec
jne
shll
outsb
movsb
push
inc
imulb
xchg
inc
insb
in
leave
iret
call
sub
mov
xor
es
shll
mov
les
xor
mov
or
and
repnz
mov
loop
push
pop
stos
and
pop
xor
xchg
mov
dec
insb
mov
int3
or
aas
fwait
pop
fsubr
faddp
movsl
shrb
xchg
addl
and
adc
lods
pop
test
jae
dec
or
mov
mov
jecxz
push
fnstenv
icebp
mov
fimull
jg
mov
jbe
in
pop
loop
xchg
pop
push
push
subb
or
imul
adc
clc
lea
push
xor
enter
je
js
insl
sbb
in
lods
sub
xchg
arpl
and
jecxz
and
fidivl
rcll
lods
test
dec
add
fadds
ret
je
cltd
cmpsl
inc
icebp
stos
inc
push
daa
push
rolb
std
lret
cld
push
scas
inc
pop
pusha
les
stos
jnp
mov
pop
inc
repnz
push
lret
inc
cwtl
jbe
into
xchg
mov
fsubrs
push
pop
clc
jne
pusha
xor
lods
mov
adc
mov
fnsave
out
cmpsl
clc
pop
xchg
stc
cmp
inc
sbb
add
jg
popa
icebp
cmp
int3
mov
add
shll
leave
adc
inc
pop
notl
mov
adc
adc
xchg
sub
pusha
xchg
loop
test
in
movsb
jl
fsubrl
sbb
repz
out
fdivrs
xchg
and
add
jmp
push
xchg
pop
or
jns
mov
aas
pop
je
pop
lock
pop
insb
in
cmp
jle
jne
out
xor
dec
xor
test
or
sti
mov
mov
adc
xchg
in
add
or
int3
xor
shr
inc
sub
cmp
mov
cmpb
mov
ja
xchg
cmpsl
push
mov
mov
leave
cmc
fwait
or
or
xchg
scas
sarl
test
dec
xlat
adc
in
dec
sub
jns
test
movntq
jo
mov
enter
loopne
mov
fcoml
jg
xchg
or
imul
xchg
lds
adc
cmp
xchg
jecxz
ror
xor
ret
jp
and
ret
and
aaa
or
scas
cmp
mov
call
iret
je
jp
icebp
in
mov
lds
sub
xor
cmp
jo
sar
int
cs
mov
aad
call
jno
inc
pop
cld
mov
les
out
mov
or
cmp
dec
dec
aaa
cmp
call
movsl
pop
adc
cmp
and
and
sbb
cmp
push
mov
faddl
pop
lcall
mov
push
cltd
add
mov
push
mov
dec
aas
ljmp
daa
push
mov
or
movsl
popa
enter
enter
ret
sbb
in
xchg
outsl
int3
in
daa
pop
xchg
mov
xor
out
insl
mov
inc
jge
push
dec
ret
xorb
mov
adc
pop
ds
and
sbb
xchg
adc
cmpsl
dec
adc
sub
mov
mov
int3
jne
cmp
push
sub
jmp
fwait
pop
sti
in
pop
mov
movsb
xchg
pusha
insb
test
fsubrs
mov
xchg
sub
sbb
sub
pop
les
or
mov
cmpsl
stos
clc
dec
adc
sbb
jmp
pushf
inc
cld
insb
adc
mov
mov
mov
frstor
lahf
shll
int3
pusha
cmp
outsl
fisttps
xor
xchg
adc
inc
mov
lods
das
ja
cmp
xchg
in
icebp
in
bndstx
inc
lahf
sub
push
outsb
stos
push
mov
repnz
sbb
test
and
stc
jg
push
xor
and
or
push
imul
sbb
jg
test
pop
icebp
add
aam
add
xchg
fcmovne
pop
xor
or
sub
lea
pop
mov
daa
call
dec
repz
les
and
inc
pop
aam
adc
movsb
mov
jb
roll
fs
or
sub
int3
sti
cwtl
jmp
lahf
addl
mov
pop
cmpsb
cmpsb
ja
jo
sub
loopne
lods
and
pop
movhps
mov
push
add
out
test
inc
adc
push
negb
inc
ja
cmp
jns
leave
mov
cmpsb
sub
enter
mov
lods
fsubs
aad
je
jmp
or
sahf
mov
ror
jle
or
jbe
xchg
loope
add
mov
scas
sbb
std
out
loop
mov
sbb
js
add
push
jecxz
icebp
push
jp
popf
push
mov
jmp
or
dec
xor
inc
mov
and
mov
pop
fildll
cs
stos
ss
stos
aas
imulb
aad
push
in
push
in
or
scas
scas
inc
jmp
lret
jecxz
ds
jnp
stc
sub
cli
dec
outsl
mov
and
imul
insb
dec
mov
sahf
cltd
sub
leave
add
xchg
lds
pop
dec
mov
hlt
sub
pop
jmp
arpl
movsl
jmp
pop
test
sbb
mov
lods
dec
xchg
pop
fistpl
dec
sbb
stos
das
rcrl
jg
inc
xchg
jmp
mov
xor
sti
sbb
mov
sahf
mov
std
loopne
cld
add
xchg
jns
push
add
sahf
jbe
and
stc
int3
push
sub
dec
fsubs
imul
lcall
mov
cmpsl
or
lock
ds
jo
push
mov
loop
xchg
cmp
inc
fwait
push
ds
lds
xchg
jle
jnp
sub
aas
cmc
sahf
subl
push
sub
fcmovnbe
push
stc
stos
aam
rcll
adc
adc
movsb
mov
shrl
scas
inc
dec
out
push
dec
rol
lret
mov
cmp
add
repnz
call
orb
scas
sbb
outsl
in
dec
into
inc
arpl
fisubrs
inc
pop
aad
xor
lods
dec
and
jns
fdivrl
leave
fbstp
cmp
dec
sbb
ret
xchg
test
cmp
jns
clc
jecxz
sub
sub
jne
lods
jae
dec
ss
cltd
jns
or
pop
cmp
movsb
fcoms
pop
xor
sbb
pop
imul
jle
neg
repnz
vsubsd
xchg
xor
mov
mov
lods
lods
mov
pop
lds
js
rorl
sub
mull
or
lds
jp
imul
cwtl
push
sbb
popf
scas
fidivl
sub
mov
ret
movsl
shll
stos
add
xchg
cmp
inc
popa
cld
popa
push
cmp
ret
or
lods
push
and
adc
arpl
jae
pop
data16
add
mov
pushf
dec
push
xchg
xor
mov
sub
push
mov
je
xor
inc
in
jecxz
fildll
mov
sub
push
in
test
lock
je
sub
mov
rcll
out
or
adc
fidivrs
push
and
push
jbe
outsl
mov
jne
lcall
jg
add
in
add
fldcw
ljmp
jle
pop
pop
cmpl
and
jae
mov
lcall
adc
mov
push
jae
add
aaa
mov
pop
ss
xor
fbstp
mov
xor
mov
add
nop
mov
adcl
xlat
shrl
leave
out
shlb
lods
insl
stc
jns
xchg
ffreep
jge
push
rcl
add
or
aad
dec
bound
xchg
or
aam
sbb
call
xlat
lret
push
jl
pop
cli
xlat
rcr
lock
jge
popa
movsl
arpl
sahf
imul
lret
jbe
mov
jo
mov
sub
in
mov
sbb
imul
imul
jnp
pop
xor
jne
cmpsl
mov
popf
lea
movsl
xor
js
roll
push
dec
inc
insb
push
call
cltd
js
lahf
sub
jl
arpl
ja
test
sbb
mov
jne
outsb
cmpsl
mov
test
mov
sbb
sub
mov
dec
aad
or
imul
lcall
dec
xor
inc
leave
rol
iret
pop
scas
or
xchg
test
std
inc
mov
xchg
and
or
dec
adc
jnp
or
cltd
fidivrs
aaa
jp
adc
push
mov
call
aad
add
fisubrl
fimull
scas
sub
push
loop
push
dec
lret
arpl
ljmp
xor
mov
add
aas
push
iret
rorb
pop
stos
movsl
or
fildl
xchg
cmp
filds
out
out
mov
ljmp
int3
push
sbb
gs
fcomps
scas
arpl
or
inc
fwait
test
sbb
push
jg
divl
bound
dec
mov
fsubr
mov
ss
in
xor
jmp
imul
scas
xchg
mov
arpl
pop
lock
inc
aaa
lea
dec
add
js
aam
mov
pushw
mov
mov
cmovae
mov
inc
je
xor
data16
lea
dec
call
negl
mov
hlt
ret
mulps
jmp
jle
sahf
mov
in
gs
pop
cmpsb
inc
mov
addr16
mov
lock
aam
repz
das
sbb
mov
insl
jp
outsb
cwtl
out
mulb
jg
ret
fwait
sbb
loope
dec
jb
leave
or
shlb
in
dec
add
cmp
or
popf
inc
jmp
lahf
xor
addr16
ljmp
mov
and
shl
or
shl
insb
push
insl
out
out
pop
icebp
add
mov
incl
inc
sub
add
add
pop
mov
push
mov
mov
mov
inc
mov
inc
dec
test
loope
adc
jbe
addr16
dec
mov
or
adc
sbb
insl
adc
pop
jmp
pop
pop
sbb
aas
in
jg
ds
pop
mov
int
xchg
insl
int3
fwait
or
in
movsb
push
leave
adc
mov
jl
ljmp
cld
je
outsb
and
push
fnsave
mov
daa
sub
and
outsl
mov
dec
or
fldenv
sbb
or
int3
mov
or
or
jg
daa
add
popa
mov
xchg
or
or
adc
outsl
int
mov
sub
adc
popf
fs
stc
push
or
clc
test
fs
push
bound
out
pop
mov
pop
xchg
mov
lea
int3
fdivrl
cmp
mov
add
mov
push
cmp
inc
jbe
sti
lcall
dec
lea
sahf
mov
or
arpl
lods
imul
mov
in
push
fstps
mov
jbe
dec
sbb
mov
cli
rorb
push
repz
pop
enter
pusha
sub
fstl
decl
or
xor
push
xchg
mulb
mov
lcall
fs
inc
loop
and
jno
sbb
out
test
rcll
data16
out
xchg
sub
enter
outsb
loop
movsl
sbb
cld
dec
out
add
lea
lcall
lods
ds
and
inc
or
pop
ss
test
sub
mov
mov
mov
dec
clc
arpl
arpl
rcll
mov
push
xor
int
clc
repnz
lret
ds
pop
popf
sbb
inc
add
push
push
sarl
in
stc
xchg
stos
sub
lcall
outsb
or
xorb
repz
test
mov
jne
addr16
cmp
mov
into
fnstsw
dec
hlt
scas
xor
xchg
mov
into
ljmp
add
mov
imull
icebp
insl
inc
jl
and
out
xchg
loop
adc
pop
cmc
jg
cld
cmp
insl
test
data16
adc
dec
mov
cs
stos
or
jo
pop
mov
fwait
das
push
jb
jg
stc
sub
lock
xchg
cmp
aad
push
push
cs
adc
imul
ret
jno
imul
test
pop
xchg
leave
add
inc
inc
insb
xrelease
cmp
arpl
icebp
cs
into
pop
and
repz
sbb
nop
mov
jns
sbb
mov
sub
inc
ret
lahf
inc
inc
pop
cmpsl
pop
fwait
or
fyl2x
adc
andb
fs
xchg
jae
aam
push
cltd
je
ja
fistpl
stos
popa
mov
lods
iret
sub
mov
in
into
and
sub
add
sbbb
jo
cmc
into
mov
in
test
ret
adc
movl
xor
daa
mov
jne
adc
push
ljmp
mov
and
xchg
stc
mov
addb
cwtl
shlb
cltd
xor
mov
and
int3
dec
sbb
jno
mov
stos
push
in
out
lods
icebp
mov
xlat
movsl
sub
sbb
push
popa
push
pop
inc
lret
xchg
mov
lret
loope
inc
testb
cmp
mov
push
adc
lds
jecxz
stc
test
jmp
out
mul
xor
jno
and
gs
add
stc
pop
repnz
sbb
sbb
push
dec
es
sbb
shll
sbb
js
out
mov
xor
mov
test
push
dec
mov
xlat
outsb
sub
outsb
push
call
sbb
ljmp
dec
or
cs
icebp
mov
xor
fwait
inc
data16
adc
mov
push
mov
mov
bound
ds
in
and
push
push
clc
mov
insl
lods
scas
mov
pop
stos
push
push
in
cmp
test
data16
in
cmp
mov
add
clc
dec
pop
mov
gs
stc
aam
ret
inc
pop
out
push
adc
sbb
or
push
jg
call
and
sub
aas
jecxz
mov
cmp
je
xchg
aas
repnz
adc
pop
or
in
addb
ja
std
or
fidivrs
lea
bnd
call
lods
mov
aam
sub
dec
inc
rcr
cld
cld
cmp
es
lods
rolb
dec
jl
sub
repnz
jmp
fiadds
jne
xchg
xor
out
cmp
jae
push
mov
popf
mov
testl
rorb
pop
cltd
push
and
mov
popa
mov
lcall
hlt
cli
hlt
aam
repz
gs
imul
cmpsl
mov
call
std
mov
and
xchg
mov
xor
ja
mov
jge
mov
nop
out
jae
out
mov
xchg
ds
lahf
push
leave
sbb
cmp
xchg
outsl
call
cmp
pop
jmp
inc
cmp
xchg
add
xor
mov
inc
sahf
jae
popf
pop
mov
int3
push
inc
enter
int
test
adc
gs
add
mov
out
jecxz
push
adc
jbe
rol
insb
pop
test
cmp
jge
mov
popf
mov
ficoml
in
popa
insl
jns
push
mov
mov
mov
testb
outsb
outsb
fcomp
mov
and
sbb
int3
adc
inc
daa
mov
icebp
int
clc
ficomps
add
dec
mov
mov
loope
or
lea
es
cmp
push
or
in
fadd
fs
loope
xor
orb
jno
clc
out
aas
and
or
repz
daa
cmc
mov
or
pop
jae
jae
ss
dec
lds
lods
mov
mov
std
push
jbe
out
sbb
pop
scas
fimuls
in
lock
pop
adc
jae
ret
lods
mov
jl
and
icebp
jno
iret
jmp
and
outsl
test
xchg
add
adc
or
jp
rol
enter
int3
fpatan
push
jbe
popa
cmc
aam
xchg
fwait
sahf
xchg
or
stc
or
stc
xor
in
aad
dec
mov
lods
sbbl
aaa
pop
mov
ds
repnz
mov
xchg
aad
mov
lret
lea
cmp
adc
filds
andl
jp
je
in
popf
aas
aas
inc
call
enter
pop
and
mov
out
adc
or
pop
push
dec
add
push
jl
stos
push
cmp
add
movsl
leave
mov
push
inc
arpl
js
jo
fildll
repnz
push
cmp
test
lret
or
out
pusha
push
mov
inc
icebp
leave
out
fsub
and
mov
mov
fs
sbb
insb
insl
xlat
xchg
sbb
dec
das
nop
lcall
xchg
daa
cmpsb
imul
adc
shl
and
test
sbb
or
mov
les
xchg
cmpsl
ret
movsl
bound
ret
push
dec
sbb
cmp
mov
jl
xchg
dec
inc
dec
dec
mov
xchg
mov
jmp
pop
lods
pop
xor
or
ret
pop
pushf
sbb
push
inc
cmp
fisubs
call
add
loop
jmp
fnsave
mov
xor
dec
adc
test
aam
outsb
aaa
xor
mov
imul
jl
push
push
push
pop
test
sahf
pop
es
mov
jne
insb
dec
sub
xor
push
addb
mov
out
push
adc
lcall
jne
push
xor
sbb
xchg
dec
xchg
lea
push
in
pushf
or
jno
sub
test
xorl
sti
dec
popf
fdivrs
push
xchg
mov
jo
pop
push
sbb
mov
sbb
sbb
mov
sbb
pop
mov
out
shrb
mov
enter
inc
mov
outsb
inc
xchg
jmp
sub
popa
mov
jg
lods
adc
aad
mov
fmull
movsl
outsb
scas
push
sbb
or
fwait
xchg
out
test
cltd
pushl
push
mov
push
leave
mov
mov
dec
inc
testl
rolb
push
add
mov
loopne
push
mov
dec
into
ret
add
sub
mov
jg
shll
movsl
popf
xor
cmp
sarb
jl
mov
fidivrl
xor
testl
push
pop
jg
mov
mov
in
push
in
fcompl
lods
stc
int3
pop
mov
add
into
push
mov
cmp
xor
push
adc
xchg
inc
pop
push
sarb
fcmovnb
pop
iret
js
cli
add
xchg
enter
faddl
dec
jne
les
dec
int
ret
pop
jne
push
jmp
mov
jne
mov
pop
aas
mov
mov
es
or
mov
sbb
int3
jbe
or
sbb
xor
pop
in
dec
sbb
roll
push
push
stos
imul
call
leave
cld
imul
add
xchg
cltd
mov
or
jae
aaa
movb
mov
or
cli
push
aas
lcall
fs
leave
sub
mov
pop
loopne
xor
fsubrp
and
mov
xor
fldenv
dec
std
das
add
cli
test
dec
repz
xor
aas
fisubrl
or
les
lahf
adc
xor
dec
lahf
mov
int
pusha
in
mov
mov
add
jmp
mov
test
lahf
aad
in
cwtl
add
push
in
fisttpl
pop
dec
enter
inc
into
rorb
fldenv
inc
scas
mov
cmp
enter
cmp
jmp
jae
jle
aaa
aas
add
ds
sarb
adc
shrl
mov
jno
outsl
repnz
cmp
nop
pop
pop
push
push
cmp
fnstenv
in
sar
push
pop
dec
adc
xchg
mov
lcall
mov
mov
fbld
das
pop
mov
ds
or
pop
and
sahf
xchg
outsb
subb
inc
dec
push
aaa
enter
test
jge
scas
fcomip
sahf
andl
xchg
lods
and
test
push
orl
xor
stos
xor
jmp
pop
mov
dec
adc
repnz
arpl
adc
push
mov
ret
shlb
test
fistps
sub
idivb
jb
mov
pop
pop
jne
inc
mov
jne
in
or
arpl
sar
xor
movsb
cs
in
loope
sbb
mov
into
pop
stos
loope
insb
stos
pop
pop
clc
mov
cli
add
mov
mov
mov
push
add
cltd
dec
sub
int3
mov
adc
and
pop
js
int
sub
filds
cs
add
fst
xor
or
jbe
xlat
lock
and
lds
jne
add
cmp
in
mov
popf
inc
je
jno
push
aam
or
fsts
shlb
aaa
bound
adc
or
adc
push
xchg
cmpsb
xchg
aaa
pop
cld
loopne
jae
pushf
hlt
sub
scas
xor
push
add
ds
in
das
cmp
lock
add
imul
adc
jecxz
ret
dec
mov
jecxz
int
movsl
mov
mov
not
pushf
loopne
outsb
aaa
and
mov
mov
sbb
xchg
dec
lea
fsts
ret
or
dec
pinsrw
xchg
adc
sub
cmp
out
mov
sysenter
jg
mov
inc
mov
push
mov
mov
or
sbb
jb
push
popa
jo
pop
xchg
cmp
inc
add
and
mov
push
mov
ljmp
adc
xchg
push
js
mov
jmp
mov
adc
repnz
repz
out
mov
lods
subl
popf
mov
psrld
xor
add
cmp
jo
xchg
stos
fwait
or
sub
popa
inc
cli
jg
stos
mov
sub
pusha
imul
pop
cmp
mov
pop
jo
xchg
bound
popf
das
sarl
xor
cmpsb
das
adc
sbb
sti
ja
loopne
mov
popa
popf
dec
jbe
adc
sti
mov
xorb
xor
pop
mov
fidivrs
push
jecxz
pop
sbb
stc
cmp
lds
call
jg
dec
push
scas
mov
cmpsl
mov
lret
mov
adcl
pop
testb
cld
adc
or
les
push
popa
sti
push
in
scas
arpl
mov
cmp
jbe,pt
push
ss
fcompl
push
sbbb
shr
jno
push
mov
rclb
add
mov
mov
hlt
adc
mov
call
nop
mov
lods
dec
inc
rclb
jle
subb
mov
mov
xchg
mov
adc
repnz
inc
das
dec
mov
clc
pop
mov
push
mov
cmp
mov
mov
and
jbe
mov
xchg
inc
xchg
cmc
fildl
inc
outsl
aad
lret
lea
cmp
sub
mov
lock
lret
inc
jns
mov
testb
jb
push
xchg
pop
push
outsl
inc
std
jge
xchg
pop
pop
push
and
pushf
in
into
mov
or
jge
push
push
fisttpl
mov
movsb
jmp
adc
shrb
xor
add
shlb
data16
out
scas
test
sbb
rcr
push
stc
pop
leave
in
int
popa
sub
pop
fstpt
pusha
or
adc
aaa
dec
in
sbb
ja
mov
mov
mov
iret
fwait
or
mov
pop
inc
ret
popf
sbb
arpl
arpl
aad
call
jmp
ret
push
sub
leave
and
inc
and
dec
or
xor
pop
rcl
adc
sbb
lock
add
mov
arpl
ja
dec
xchg
gs
jo
repz
jge
pop
nop
into
loopne
dec
and
push
loop
mov
jae
negb
inc
inc
and
jle
popa
das
push
int3
leave
roll
movsl
pop
mov
scas
jno
cwtl
lret
adc
sbb
dec
je
cmc
loop
inc
mov
push
pop
sub
mov
xchg
xor
lret
enter
aam
jmp
repnz
pop
mov
xchg
fstpl
inc
lods
icebp
mov
cmpsb
pusha
or
mov
jecxz
jae
repnz
jns
ss
add
sub
dec
mov
sbb
cmp
adc
rcrb
add
jmp
cltd
xchg
push
adc
mov
fisttpll
cmp
xchg
aad
fistl
cmp
and
cli
cmp
push
mov
jle
and
or
inc
ss
jle
addr16
add
stos
fcomi
les
mov
fwait
lret
icebp
fdivrl
hlt
mov
aam
arpl
xchg
sbb
ds
sbb
sbb
xchg
pop
xor
into
lds
out
fs
mov
lret
xchg
std
jbe
xchg
mov
decl
xor
or
sub
push
and
xchg
and
dec
lret
testb
adc
incb
add
push
adc
jae
nop
into
ret
mov
mov
mov
cmc
push
add
lds
jge
js
cmp
loopne
divb
sbb
mov
popf
pop
jmp
sub
dec
mov
or
push
mov
xlat
push
cltd
adc
xor
sub
sbb
icebp
dec
xor
sub
sbb
jl
pop
mov
out
or
addl
fsubr
adc
popa
adc
sbb
dec
int
xor
add
adc
xor
adc
loop
cmp
xor
cmc
xor
and
in
fwait
fs
loope
gs
and
jl
jne
mov
clc
lcall
cmc
cmp
mov
out
pop
std
popa
cmpsb
pop
std
iret
or
push
int3
mov
lret
out
pushf
hlt
ja
and
cmp
xor
or
lret
orb
mov
jp
shlb
pop
cltd
push
adcb
out
test
cmpsb
jae
xchg
inc
dec
cmp
xor
and
pop
loop
repz
clc
addr16
mov
cmp
cmpsl
jnp
mov
pop
add
push
js
push
jns
mov
mov
push
push
sbb
shll
adc
lea
cmp
dec
pop
xchg
ds
fildll
cld
xchg
int
push
ret
mov
out
inc
stos
or
push
int
xor
daa
dec
push
dec
out
adc
jge
int3
fcomip
sbb
test
aaa
xor
push
sub
in
lret
adc
int3
lods
mov
jecxz
jge
jl
test
test
out
pop
cltd
xchg
nop
imul
dec
adc
cmp
arpl
cld
xchg
mov
imul
cmpb
ds
mov
dec
jnp
jg
test
adc
sbb
add
into
jle
or
je
push
inc
pop
cli
sbb
mov
jp
in
sub
aas
inc
dec
xor
cmp
dec
xor
testb
fwait
int
mov
mov
mov
in
lock
iret
or
xchg
cmp
lods
lcall
call
or
clc
jns
outsl
ljmp
add
scas
sbb
addr16
scas
pop
xorl
ja
sbb
test
jge
bound
mov
fimuls
lock
lahf
pop
imul
cmp
aad
xchg
cmp
xchg
mov
andl
xchg
mov
stc
push
xchg
cmpsb
inc
movsb
push
lods
mov
pushf
cmpsb
inc
inc
adc
xor
adcl
xor
rol
pop
inc
das
sbb
ret
mov
mov
fiadds
xor
xchg
and
mov
int
push
sbb
cmp
aaa
jge
cmp
aam
sub
xor
addb
in
xlat
push
pusha
addl
inc
sub
push
xchg
push
into
xchg
pop
add
xchg
or
inc
push
sub
mov
movsl
daa
sahf
add
loope
mov
cwtl
jno
sub
fwait
push
pop
cs
mov
xchg
mov
das
add
xor
jno
jne
fsubrp
inc
out
call
xchg
xchg
pop
mov
filds
push
xorb
popf
rorb
xchg
scas
mov
out
dec
shlb
sbb
stos
dec
repz
frstor
loop
inc
and
fdivl
mov
push
repz
lahf
popf
inc
mov
or
push
jbe
aas
mov
mov
sbb
pop
add
push
wbinvd
lcall
lea
add
mov
mov
pop
pop
jbe
adc
mov
cld
lods
push
sbb
push
inc
out
push
mov
mov
cmp
sbb
jl
pop
push
mov
dec
pop
cld
or
pushf
decb
out
jmp
and
out
mov
fadd
cld
cmpsb
add
clc
dec
sub
lcall
adc
cltd
jae
inc
rcll
out
lea
pop
sbbl
push
sbb
cmpsl
add
push
fldt
lea
pusha
pop
addr16
call
inc
jns
insl
inc
adc
wrmsr
lret
rorb
mov
leave
add
sbb
aam
jbe
and
fs
mov
loop
mov
xor
mov
jns
insl
push
fdivp
negb
out
xchg
cmp
idivb
lret
mov
ret
sbb
dec
mov
js
sbb
ror
scas
and
dec
sbbb
mov
xor
inc
in
pop
or
aad
clc
adc
repnz
cmp
jo
ficoms
or
pushf
mov
jg
adc
push
and
adc
dec
ljmp
mov
xlat
pop
cmc
or
ja
mov
inc
cmpsl
rorb
xchg
mov
push
jnp
push
mov
jo
inc
in
sub
lods
cwtl
sub
sti
std
push
out
faddl
cltd
dec
imul
call
push
stc
sbb
test
adc
jb
mov
mov
lahf
popa
icebp
adc
pop
mov
push
dec
lds
movsl
xchg
aam
loopne
outsb
vorps
jno
or
adc
adc
xchg
icebp
inc
adcb
repnz
jmp
sub
incl
xchg
mov
mov
mov
xchg
sub
int3
ror
pop
das
jecxz
add
lods
lret
push
out
xchg
aam
jmp
sub
fcmovnbe
inc
mov
leave
outsb
int3
dec
repz
fiadds
ja
cmp
shlb
mov
mov
adcl
iret
pushf
popf
dec
xchg
jbe
push
xchg
adc
add
jmp
push
icebp
mov
lea
dec
cmp
movsl
addl
sbb
daa
mov
dec
pop
mov
loope
popf
jl
jg
mov
cmc
in
mov
outsb
pop
mov
stc
sti
lock
ss
test
stc
aas
jne
adc
inc
jno
repz
add
jl
pop
stos
and
push
insl
mov
and
pop
stc
shl
in
jnp
push
pop
dec
pop
xor
xorb
push
out
enter
imul
mov
lods
mov
les
pushf
mov
push
xor
or
iret
stc
lahf
pop
int3
xor
jg
xchg
fidivrl
inc
popf
jbe
sub
sti
aam
adc
dec
push
andl
neg
xor
dec
incb
dec
mul
into
shll
or
mov
push
sbb
dec
cmpsl
jne
xchg
jge
cmp
or
mov
mov
mov
lret
xchg
add
lods
or
xor
dec
stc
imull
movb
cmp
sbb
in
icebp
dec
or
lds
lods
xchg
leave
pop
or
rorb
aam
scas
cmp
pop
add
mov
inc
insl
xlat
mov
iret
xchg
mov
jo
pop
out
xor
repz
cs
sahf
jb
jle
and
cs
rcrb
in
mov
stos
aam
xor
fldl
out
mov
test
jbe
add
and
dec
push
sub
clc
movb
or
sarl
notb
mov
cld
scas
mov
push
loopne
fildl
scas
fisttpl
mov
or
sbb
ds
andl
in
jl
sub
test
mov
mov
insb
inc
and
jb
xor
add
stos
mov
mov
mov
add
jb
movsb
ja
jge
fmul
mov
push
shr
call
push
dec
xor
js
mov
mov
cmp
fwait
out
sub
daa
mov
push
dec
int3
hlt
sub
pushw
jne
push
adc
neg
sbb
and
jnp
or
dec
dec
cmp
xchg
mov
mov
dec
mov
adcb
outsl
sub
dec
insb
les
ja
cmp
mov
lods
jmp
out
out
test
xchg
iret
test
repnz
sahf
ja
imul
shrb
movsb
mov
ja
pop
adcb
cmpsb
insl
imul
inc
sbb
movsb
fwait
test
outsl
jo
rcll
cmp
adc
jp
inc
orb
dec
mov
mov
sbb
pop
mov
into
jl
xchg
and
pop
fiadds
sbb
iret
loop
or
pop
addr16
pop
xchg
mov
cmc
cld
insb
mov
cmp
adc
enter
push
ja
mov
int
jl
mov
sub
pop
repz
sub
inc
imul
out
stc
and
adc
in
loope
mov
mov
pop
xchg
out
inc
roll
sub
clc
jg
mov
and
xchg
xor
aaa
iret
fstpt
test
movsl
jb
mov
jge
cmp
shl
mov
fbld
lret
xchg
out
push
jbe
dec
jl
lret
imul
jno
add
sbb
xchg
mov
movsl
xlat
mov
test
inc
addb
shrb
push
test
rcrl
adc
jae
xor
mov
pop
xchg
cmpsb
cltd
iret
mov
insb
psubsb
jl
mov
in
mov
cli
pop
push
rorl
add
shrb
mov
test
inc
sub
rorl
lret
jne
pop
jno
jge
sbb
roll
sbb
adc
dec
leave
insl
seto
adc
cwtl
push
popf
and
sub
mov
ljmp
iret
inc
repnz
mov
xor
mov
clc
aam
and
xlat
sbbl
shrl
cmp
loop
sahf
mov
sub
inc
das
cmpsb
add
arpl
adc
sbb
add
fs
xchg
aaa
clc
sbb
fiaddl
add
push
jle
icebp
jb
divl
ss
stos
cmpsb
aaa
push
sub
cmp
int3
jmp
pop
cmp
outsb
aaa
nop
pusha
jo
xor
add
stos
test
orb
mov
sbb
push
std
cwtl
sbb
adc
push
inc
scas
cltd
jmp
and
push
dec
adc
scas
mov
rolb
mov
js
mov
fs
lcall
sbb
mov
dec
cli
sahf
roll
bound
fs
imul
lods
int3
push
pop
ljmp
mov
test
repnz
push
gs
ret
aaa
push
add
push
sahf
data16
and
fildll
fstpt
jg
js
call
aad
jecxz
lods
cmpsb
sub
dec
cmp
push
cmpsl
enter
mov
fsubr
lods
xor
aam
xchg
xor
std
int
mov
pop
ja
rcr
fnstsw
ds
mov
stc
fadds
imul
cld
sbb
push
decb
or
pop
push
jecxz
cmc
loop
imul
and
mov
mov
add
add
mov
or
or
add
in
sahf
xchg
in
adc
mov
mov
or
sub
push
xchg
jl
add
int
in
and
shll
sub
xchg
in
xchg
push
int3
in
push
add
stc
lea
movsb
pop
into
inc
sbb
aad
push
xor
imul
inc
jle
mov
rclb
push
jno
out
pusha
ret
insb
stc
stos
add
jecxz
push
and
vandps
push
clc
pop
add
cmp
mov
jo
and
fwait
out
dec
jo
mov
bound
pop
repz
xlat
dec
nop
cmp
sbb
xor
flds
or
rolb
insl
push
sbb
xor
jno
jge
out
nop
out
lret
adc
jo
ss
jmp
sbb
push
mov
out
mov
jno
mov
loop
fisttpll
sahf
xchg
aas
inc
je
rcrb
xchg
rorl
mov
pop
dec
add
or
fimull
sti
inc
push
push
dec
or
push
pop
adc
jo
fcmovbe
pop
pop
cli
int3
fistps
dec
jne
mov
push
out
mov
inc
divb
adc
stos
pop
lods
cld
add
bound
iret
outsl
push
or
out
pop
inc
dec
add
mov
je
pop
outsb
jg
mov
and
mov
push
cs
xor
out
add
xchg
into
xor
cmp
cs
jl
pop
nop
inc
aas
outsb
cmp
xor
xor
dec
adc
mov
in
dec
cmpsb
andb
jl
pop
shlb
jns
push
dec
shlb
incl
mov
jo
cmpsb
mov
pop
cmp
add
ret
cwtl
out
jecxz
push
pop
cli
push
jb
imul
xor
popa
dec
out
xor
pop
push
cmpsl
call
rcr
les
sbb
cli
lock
rorl
mov
pop
imull
je
or
fdivl
fiadds
lahf
xor
mov
mov
ret
mov
in
jecxz
fadd
pop
aam
mov
jnp
xchg
daa
lret
sti
test
xor
cld
or
xchg
leave
movsb
out
add
add
sahf
jns
mov
push
scas
xchg
int3
mov
dec
aad
insl
xchg
into
xchg
stos
dec
out
sub
movb
xchg
xor
or
mov
fnop
push
pop
mov
cmc
xor
jo
pop
xchg
add
mov
ret
mov
xor
or
push
fdivp
lock
and
pop
sub
pop
jae
xor
pop
jns
nop
rorl
mov
mov
movsb
pop
cmpsb
sbb
pushf
mov
cli
dec
xchg
or
fnstsw
cmpsb
pop
push
scas
lcall
out
mov
nop
mov
cmp
sbb
sbbb
lcall
mov
lcall
test
push
out
mov
stc
mov
icebp
xchg
adc
loop
push
jnp
insb
push
mov
loopne
push
cmpsl
pop
mov
lcall
push
sbb
dec
addr16
inc
add
jns
adc
enter
imul
add
out
or
fstpl
mov
mov
imul
sbb
cld
out
pop
and
push
adc
es
mov
enter
pop
mov
jmp
jns
xor
dec
sti
xor
rcrb
or
repz
mov
pop
cmpsb
fdivs
rclb
sub
mov
bound
outsl
cwtl
xchg
xchg
mov
sahf
rcr
mov
push
sbbl
in
mov
jne
mov
cld
sti
jle
mov
ret
pop
in
and
or
js
sub
cmc
mov
mov
xchg
scas
add
addb
ljmp
pop
rolb
jae
fcmovb
mov
je
fistpl
loopne
mov
arpl
cmpsl
sbb
mov
jns
or
or
out
pop
leave
cmp
paddusb
icebp
test
xor
shll
push
mov
lcall
jecxz
ud0
cli
sbbl
fsubp
insb
fadds
sbb
sub
pop
and
and
xor
jmp
push
test
sub
jo
pop
in
imulb
mov
fs
mov
xor
dec
lods
aaa
notb
mov
and
rclb
outsl
das
das
push
repnz
out
mov
dec
and
scas
mov
aad
mov
int3
cmpsl
mov
xor
cltd
std
mov
add
loopne
jnp
mov
jp
cwtl
aaa
xor
subb
insb
pop
and
fnstsw
push
pop
in
jecxz
subb
push
mov
fistps
stos
hlt
out
test
ret
sub
or
je
cs
push
jmp
outsl
jecxz
jmp
lcall
es
sub
mov
popa
out
cmp
lret
push
fs
push
jecxz
popf
jg
lods
mov
jb
mov
rcll
rclb
cmc
pop
jl
rcll
push
dec
scas
xchg
ljmp
std
stc
aaa
imul
add
sub
add
rorb
lods
mov
mov
jg
jne
stos
add
in
and
sahf
add
sub
stos
and
mov
lahf
stos
cmp
loope
jbe
cwtl
outsb
mov
in
out
dec
dec
push
push
mov
xchg
shll
jbe
lods
cli
xchg
and
jns
push
pop
sub
test
dec
shl
int3
shr
movsb
mov
pop
xor
ffreep
aam
add
out
inc
in
loop
js
mov
inc
fidivrs
push
fs
adc
jae
xchg
sub
cmpsb
movsb
push
jo
cmp
ret
pop
mov
cmpsl
les
push
and
gs
mov
subl
pushf
xor
insl
fwait
adc
leave
inc
inc
jmp
dec
jmp
mov
sbb
test
ret
inc
nop
in
ret
loope
adc
add
outsl
mov
and
bswap
push
ret
insl
xchg
push
and
push
lods
jle
es
push
sub
add
test
or
jecxz
out
jecxz
pop
fwait
dec
lea
dec
fwait
cmp
mov
xchg
pop
out
jnp
in
mov
push
pop
jns
sbb
pop
adc
aad
popa
inc
mov
notb
pop
orb
sub
mov
xor
adc
lds
cmp
lret
pop
aad
mov
or
push
jmp
loope
dec
xchg
in
mov
in
inc
stc
out
or
cs
mov
and
push
inc
and
cld
icebp
js
cwtl
xchg
xor
mov
js
mov
pop
jbe
lock
cmpsl
je
mov
adc
dec
ljmp
cmpb
push
add
in
int3
mov
repz
loopne
into
dec
cmp
ljmp
jbe
cmp
pop
add
dec
div
or
xchg
sbb
jno
mov
aaa
sub
jle
and
fsubl
add
push
mov
fidivl
push
and
inc
in
sarb
inc
inc
rcr
lds
sahf
push
cmp
inc
jae
and
pop
xchg
int
cmc
repnz
aaa
dec
outsl
lock
pop
jno
sub
or
mov
es
sbb
jle
ror
shrb
add
out
mov
cmp
aam
sbb
pop
lret
test
test
popa
xchg
sbb
mov
scas
xchg
xor
daa
lods
gs
push
mov
hlt
mov
insl
lock
lahf
pop
mov
ja
std
pop
xchg
loopne
dec
cmpsb
cmpsb
cmpsl
ds
push
or
flds
out
ror
mov
cld
mov
sub
dec
js
daa
push
inc
lahf
mov
or
mov
sbb
mov
nop
xlat
mov
jle
js
cltd
pop
and
xchg
or
iret
and
xor
pushf
pop
inc
fsubrl
mov
pop
inc
nopl
test
xchg
mov
inc
add
cmp
or
pop
inc
and
pop
mov
pop
jmp
push
or
imul
xor
mov
jge
cmp
pop
pop
inc
adc
inc
jmp
add
pop
repnz
scas
test
xor
fistl
adc
push
and
pop
sbb
pop
push
adc
mov
data16
mov
jp
cmpsb
dec
or
sub
sbb
outsb
xor
shld
repnz
xchg
ja
xchg
mov
sub
imul
arpl
mov
std
imul
negb
pop
repz
push
push
sbb
add
movsl
enter
mov
mov
ror
js
ljmp
push
sub
scas
dec
and
fldcw
or
push
shrb
ljmp
cmc
stc
call
cmpsl
inc
xor
aam
inc
xchg
sbb
inc
loope
xor
inc
lret
cltd
movsl
push
mov
fisubrl
and
pop
pop
shlb
fs
cld
cmp
fisttpl
inc
cmp
mov
in
nop
je
sub
in
mov
xor
xchg
cmp
jl
in
cs
scas
clc
rorl
repnz
fsubrl
xor
inc
and
fwait
xchg
std
nop
icebp
xchg
xchg
shlb
dec
jp
jae
repz
mov
rolb
pushf
cmc
in
loop
fdivrs
mov
call
jb
inc
push
xor
or
cmp
shrl
add
pextrw
mov
inc
ja
aad
insl
mov
loop
mov
or
jnp
bound
mov
popf
ret
sub
roll
dec
push
sbb
jnp
mov
lods
push
rclb
dec
call
arpl
lret
cld
sahf
jo
sub
es
jle
loopne
ljmp
icebp
pop
je
daa
mov
sahf
mov
lods
insl
mov
cmpsb
or
out
mov
mov
adc
mov
jo
mov
in
test
jle
nop
push
adc
mov
popf
sbb
out
push
icebp
dec
jne
mov
xor
jns
fcompl
mov
shrb
repz
push
movsb
adc
aaa
lods
into
lods
mov
dec
fcompl
pop
sub
repz
cli
mov
jecxz
or
data16
clc
int3
aaa
fildl
movsl
mov
xchg
aas
inc
push
aad
lds
dec
push
or
pop
ja
incb
and
mov
fimuls
das
sub
incl
inc
mov
mov
rcr
shrb
out
insb
and
or
fiadds
imul
stos
fisttpl
cmpb
cmp
inc
enter
add
lret
mov
sub
jo
and
insb
sub
jle
out
inc
push
sub
mov
mulb
lods
inc
mov
outsb
dec
pop
aaa
xor
outsl
test
into
fldl
cmp
inc
inc
in
jnp
ret
jp
aas
ret
orb
andl
xchg
sbb
and
bound
ja
je,pt
cs
pushf
sbb
imul
rorl
rorb
mov
adc
mov
lds
xlat
clc
in
into
movsl
stc
out
pop
sbb
jecxz
sahf
cmp
and
shll
fsubrs
out
in
xor
call
jbe
jb
movsb
pop
jbe
xchg
shl
or
xor
out
mov
or
xchg
adc
pusha
loopne
test
addl
cmpsb
pop
cmc
and
rol
movsl
mov
xor
xchg
mov
lock
aam
lcall
shl
push
inc
xchg
lret
stos
push
fcomp
mov
mov
je
jae
ret
xchg
push
mov
pop
cli
pop
mov
push
mov
fcmovne
add
pop
push
imul
jo
in
cmp
jno
popa
jg
jns
das
xlat
mov
mov
fwait
test
push
adc
push
jecxz
bound
ljmp
inc
jmp
adc
sbb
lret
xchg
xchg
mov
and
mulb
cmp
mov
fisubl
imul
loope
push
adc
fwait
cwtl
lds
inc
xchg
addb
popa
adc
pop
insl
addr16
or
mov
das
data16
xchg
cmp
dec
cli
inc
push
jno
cmp
cmp
adc
mov
and
sarl
or
cmp
lods
mov
mov
jne
and
mov
xor
imul
sbb
inc
lds
sti
movsb
inc
cli
lea
lods
outsl
mov
pop
outsl
add
dec
and
add
or
leave
add
test
ljmp
mov
out
stos
fsubp
ret
xchg
outsb
scas
cmp
fnstenv
mov
mov
xchg
push
mov
andl
pop
test
aas
jp
sbb
adc
mov
push
mov
add
mov
push
jb
stc
pop
imul
push
arpl
sarl
mov
daa
stos
cmp
lcall
aaa
lcall
and
sbb
mov
cmpsb
xchg
enter
or
lahf
fwait
pop
stc
xlat
sbb
cli
pop
push
add
rorb
xchg
pop
stos
out
mov
rclb
pusha
cmp
data16
scas
fldl
adc
push
popa
inc
ds
add
jno
xor
lods
mov
pop
int3
xlat
out
sbb
mov
rcll
xchg
in
bound
cmp
pop
or
fildll
lock
push
pop
or
add
ja
push
pop
mov
adc
inc
xchg
imulb
mov
jmp
in
mov
imul
fmulp
cmp
xchg
test
jo,pn
adc
sbb
cli
div
dec
icebp
and
or
cmpsb
push
jp
testl
lret
insl
push
cmc
cmc
jmp
in
push
lock
popa
mov
cli
push
clc
and
sbb
in
jmp
mov
sarl
ljmp
add
cmp
push
mov
and
push
sub
cmpsl
sub
lcall
and
sub
out
stc
mov
nop
dec
xchg
out
sbb
mov
sbb
pop
jns
pop
js
mov
adc
out
loope
mov
cmp
fidivrs
mov
cmpsb
cmp
cmp
or
pop
outsb
xchg
sbb
add
jecxz
int
mov
cmp
xor
divl
test
dec
xorl
adc
xor
aaa
jbe
fdivr
sbb
adc
adc
mov
fnstsw
adc
lret
push
ret
inc
cmc
in
sub
or
push
jnp
stos
adc
inc
sahf
das
shlb
inc
out
mov
orl
frstor
call
lret
cmc
jp
bound
xchg
pop
mov
outsl
inc
xor
jbe
sti
inc
jnp
mull
xchg
mov
fs
test
imul
loopne
xorb
cmp
psubsb
loope
rcll
shll
int3
in
bswap
jae
dec
jo
movsl
adcl
and
pusha
leave
and
mov
shlb
clc
xor
pop
push
inc
jmp
sub
sbb
or
sbb
neg
ror
push
cmpsb
ret
mov
ljmp
adc
bound
xchg
lods
lds
xor
shll
sub
or
into
ficoml
lods
jno
dec
push
fbld
mov
sbb
add
stos
mov
lods
and
mov
mov
imul
pop
es
mov
dec
cwtl
std
push
in
roll
bswap
cwtl
sub
imul
mov
int
and
sbb
subps
cmp
aas
mov
ret
add
sbb
push
sbb
push
pop
addr16
lock
scas
jl
sti
mov
frstpm(287
test
and
xor
sti
mov
gs
insb
js
xchg
add
dec
int
fnstcw
mov
cmp
cwtl
inc
cmp
push
loopne
push
sub
aad
xor
jb
sub
stos
lds
sub
pop
testl
sar
mov
sub
bound
push
adc
lds
pop
xor
ret
dec
and
sub
dec
leave
or
xchg
pushf
inc
and
js
dec
cmpl
inc
pop
les
jle
outsl
push
mov
shrb
sti
mov
aaa
cmp
cmp
inc
or
repnz
scas
mov
pop
jp
inc
mov
shl
int
sub
outsl
jmp
mov
xor
add
xchg
pop
fsubrs
iret
out
insb
shll
add
add
add
push
mov
mov
mov
fdivrs
iret
jmp
xchg
call
xor
popf
imul
mov
enter
loop
push
dec
filds
dec
dec
mov
adc
adc
jle
call
lock
test
push
in
sbb
lds
mov
adc
clc
xchg
adc
in
ljmp
dec
es
pop
jl
or
pop
jb
xchg
gs
movsl
jle
push
cld
or
xor
cmc
xchg
mov
push
mov
sbb
add
inc
cmp
xchg
insl
mov
clc
sbb
push
repz
js
and
out
aaa
addr16
pop
js
nop
inc
or
mov
xchg
and
mov
mov
mov
dec
mov
jle
xchg
mov
loope
sub
imul
insb
sbb
add
jl
cli
lcall
pusha
lret
and
repz
pushf
jle
or
imul
mov
dec
addr16
jae
cmpsb
out
mov
sbb
jg
pop
leave
sbb
insb
pop
add
push
xchg
adc
vphaddubw
jp
int3
aam
repz
cs
jp
mov
mov
fwait
dec
push
mov
push
dec
cli
shl
hlt
add
jbe
adc
adc
adc
and
push
mov
int3
lcall
jns
scas
out
xor
mov
pop
aaa
scas
and
inc
push
std
fmul
out
xchg
cs
push
pop
loop
add
mov
cmpsb
and
pop
cltd
insb
mov
dec
sarb
loop
call
sub
lret
push
push
jbe
leave
inc
int3
inc
shll
add
daa
jo
fisubl
test
push
ljmp
ljmp
je
mov
mov
bound
push
dec
mov
rolb
inc
xor
or
pop
inc
movsl
std
pop
push
pushf
dec
and
in
ja
loope
jp
jbe
std
dec
and
cmc
fstcw
insl
sub
lock
rorl
sbb
add
mov
mov
dec
clc
inc
aam
mov
scas
dec
jne
sub
xlat
ror
cltd
stc
sbbb
adc
sarb
ret
mov
mov
jg
add
inc
popa
rorb
jmp
jno
inc
loopne
andb
int3
xchg
xchg
repnz
out
outsb
js
mov
xor
fbld
and
mov
xlat
cmp
sbb
mov
xor
scas
xchg
and
fsubl
or
sub
aad
inc
sahf
xor
mov
sahf
lods
or
jnp
add
int3
cmp
js
xorb
pop
jb
pop
addb
ret
bound
jg
daa
leave
mov
movsb
mov
and
lock
pop
ret
mov
imul
cli
outsb
and
das
adc
push
or
call
push
pop
aas
adc
aas
popf
iret
stc
sahf
lahf
sub
mov
cmpsl
nop
push
xchg
sub
mov
test
es
fsubs
cmp
ja
imul
add
imul
outsb
jge
push
jae
jns
add
push
in
mov
imul
adc
jnp
sub
or
push
roll
clc
dec
sahf
test
loopne
pop
and
lahf
loopne
inc
push
or
jmp
aad
xchg
insl
pop
loop
xor
test
aaa
or
dec
add
pushf
dec
loop
movsl
sbb
call
in
inc
mov
xorl
std
iret
pop
mov
aad
fsubr
in
ljmp
movsl
movl
dec
mov
cli
stos
shrl
sbb
mov
dec
jbe
std
les
scas
outsl
xor
xor
ret
xor
outsl
push
jle
add
inc
movsl
scas
dec
xchg
mov
les
and
push
adc
dec
pop
xchg
push
xor
mov
ljmp
jecxz
insl
mov
js
inc
pop
xchg
adc
push
mov
pop
jno
shl
enter
clc
push
adc
sub
push
inc
sbb
sahf
xchg
test
fwait
stos
scas
dec
push
data16
dec
inc
push
fcos
lods
test
mov
sbb
mov
dec
lret
mov
cmp
xchg
fisttpll
fbstp
outsl
mov
cmpsl
popf
cltd
mov
addr16
insb
adc
test
xchg
pop
cmc
jmp
pushfw
jecxz
imul
pop
push
mov
mov
pop
testl
ret
ljmp
dec
sub
das
rcll
push
dec
push
dec
mov
sbb
aaa
inc
mov
xor
aaa
cmp
xchg
les
out
ds
or
push
push
push
addr16
dec
jecxz
shl
sub
fstps
inc
mov
fs
in
jbe
mov
xchg
mov
xor
movq2dq
arpl
addr16
xchg
cmpsb
nop
xchg
daa
lock
cltd
cmpsl
fdivl
add
pop
sub
lods
lods
mov
and
pop
subb
cmpl
std
xlat
mov
or
inc
add
in
int3
cltd
inc
sbb
dec
push
stc
loopne
dec
rcr
andb
cmp
es
xor
mov
out
in
fiaddl
pop
xor
push
inc
jg
in
cmp
inc
movsl
int
mov
and
loopne
adc
loop
mov
pop
fistpl
or
loopne
nop
out
stos
inc
jl
ret
test
xchg
rcr
pushf
push
in
jns
rcr
lahf
in
ret
dec
cmp
fcompl
pop
mov
sub
leave
push
roll
outsb
push
hlt
ret
jmp
ds
mov
inc
ja
mov
mov
ljmp
stos
outsl
icebp
out
mov
mov
add
test
or
or
aaa
dec
and
xlat
gs
xor
xchg
inc
daa
cli
jg
jb
push
aad
lret
mov
add
inc
pushf
add
std
popa
mov
cld
mov
push
aas
out
inc
xchg
mov
and
outsl
xor
jae
pop
aad
pop
dec
lcall
lock
fcompl
push
stc
adc
push
mov
inc
mov
aam
sbb
inc
gs
sub
fstps
mov
or
and
shrl
fmull
cmp
xor
sbb
cs
xchg
cld
push
les
xor
sub
cmc
nop
js
movsl
cmp
push
aaa
loop
dec
push
adc
and
cwtl
fadd
mov
data16
int
mov
fs
sub
cmp
test
or
push
push
add
loope
stc
jnp
loop
mov
push
lcall
jno
sbb
fs
push
into
mov
stos
mov
movsl
or
mov
lock
popf
mov
hlt
cmc
and
cmp
mov
repnz
or
ds
cmp
mov
xchg
icebp
dec
jle
pop
jae
pop
push
cmc
lret
adc
mov
cmp
dec
inc
or
test
pop
mov
and
out
inc
iret
mov
jp
leave
xchg
jne
mov
push
mov
mov
jnp
ret
dec
in
mov
xorb
imul
pop
or
cmp
mov
inc
in
int3
mov
jl
push
out
mov
shlb
or
inc
sub
push
add
and
pop
mov
movsl
arpl
loopne
sub
insb
iret
in
int
add
adcb
sbb
xchg
xor
sub
ret
add
pop
scas
mov
fisubrl
push
ja
in
and
fmulp
sbb
add
add
xlat
xor
mov
in
pop
mov
add
jno
sbb
mov
sbbl
dec
adc
les
mov
aas
dec
inc
les
stos
out
adc
add
pop
loope
cmpsb
xchg
fcom
in
js
insb
lahf
test
outsb
push
shll
dec
sbb
xor
or
nop
cmc
in
mov
shlb
lods
jae
add
and
loop
and
aas
jle
mov
test
xchg
inc
mov
or
xlat
cmp
mov
jecxz
cmp
jmp
add
int
cltd
into
jnp
sbb
in
pop
mov
cmp
mov
adc
push
jle
sub
decl
cmpsb
psrlw
mov
fimull
lret
inc
mov
repz
mov
mov
mov
flds
pop
stos
push
std
sar
xchg
pusha
pushf
or
in
dec
das
pop
push
lahf
aas
test
fcompl
test
and
lret
push
xlat
int
shlb
jns
cltd
pop
jp
sub
mov
push
xchg
sub
out
sub
adc
sub
push
sub
out
fwait
add
dec
jl
mov
cli
aaa
mov
inc
loop
adc
outsb
lret
js
dec
scas
push
push
into
add
xchg
daa
jp
add
mov
xor
mov
test
mov
ret
cld
push
mov
mov
aaa
faddp
mov
jp
pop
ret
cmpb
ret
ret
enter
xchg
clc
or
xor
out
inc
xor
jbe
subl
das
shlb
cli
movsb
xchg
cmp
add
mov
scas
mov
icebp
addr16
cmp
mov
mov
inc
inc
ficomps
shll
or
movsl
inc
add
test
fbld
arpl
ss
dec
adc
ljmp
test
xor
push
outsl
push
lods
movsb
fwait
add
mov
leave
and
inc
idivb
shrl
inc
testb
shlb
xchg
leave
les
lds
lahf
push
lock
mov
ss
jo
mov
dec
jns
cld
cltd
add
lods
pop
xchg
and
push
out
pop
jg
pop
push
rolb
nop
insl
mov
dec
adc
or
js
shl
pop
nop
mov
cmp
mov
scas
jecxz
xchg
fwait
and
sub
mov
cltd
lock
jle
clts
fadd
xchg
dec
xchg
xchg
lcall
in
or
xor
xor
andl
stos
lock
push
enter
jmp
por
jo
test
outsl
inc
mov
add
push
xor
gs
gs
js
push
mov
mov
lea
dec
push
clc
cs
or
jge
push
lods
and
ljmp
aaa
pop
icebp
insb
icebp
push
push
mov
inc
ficoms
int3
jecxz
dec
out
inc
add
repnz
inc
adc
cli
insl
sbb
loop
lret
inc
test
insb
outsb
outsl
imul
push
and
inc
xchg
adc
dec
rorl
addr16
ja
inc
lods
mov
cmp
adc
adc
scas
imul
xor
in
jae
scas
fwait
inc
sbb
push
jge
jno
inc
mov
lock
repnz
adc
movsl
adc
hlt
mov
test
or
test
repnz
add
xor
xor
xor
sbb
add
iret
mov
psrlw
xchg
push
fdivrl
sub
push
jge
fisubs
iret
push
stos
outsl
xlat
cmp
loopne
pop
adc
mov
push
push
std
and
mov
stc
leave
cs
es
push
test
xchg
and
cmpsb
mov
fstpt
push
sbb
push
pusha
pop
jns
lahf
lahf
cmp
pop
mov
mov
xor
cmp
dec
cmp
loopne
adc
add
sub
fdivs
add
ljmp
push
fldenv
adc
cmpsl
test
popf
dec
dec
repnz
xchg
mov
mov
sub
mov
sub
and
push
mov
xor
jae
add
jecxz
hlt
outsb
inc
push
fcompl
addl
cwtl
popf
xor
mov
dec
les
xor
xchg
xchg
push
mov
mov
push
stos
stos
pop
mov
sbb
test
pop
xchg
hlt
mov
mov
fcompl
repz
outsl
push
cmp
adc
jns
data16
sbb
std
or
adc
or
xor
nop
jns
and
aad
aaa
shrl
adc
inc
mov
popf
int
negl
cmp
int3
pop
and
mov
cs
jnp
dec
ljmp
and
test
cmpsb
dec
pop
stc
xor
dec
imul
add
mov
shlb
jbe
xor
sub
ds
and
les
nop
adc
loop
inc
ret
sahf
sub
je
enter
jg
xchg
jl
outsl
fstpl
jl
or
cmpsb
out
mov
push
aas
cmp
sbb
pop
dec
add
out
sbb
and
divl
jno
xchg
mov
mov
icebp
rclb
dec
ret
fistpll
roll
sbb
into
lock
pop
push
js
lea
popf
je
pop
shlb
rolb
mov
aad
test
inc
or
mov
inc
fcomip
adc
or
hlt
sbb
fcoms
sbb
jb
pop
and
push
sahf
aam
inc
dec
jmp
imul
adc
dec
push
insb
cmp
xor
push
adc
out
loopne
rolb
lods
sbb
cmc
or
dec
and
sub
mov
inc
enter
enter
pusha
stos
pusha
dec
mov
cmp
movsb
mov
movl
das
mov
and
in
sbb
add
mov
fidivrs
popf
dec
pop
mov
sbbb
xlat
les
push
or
xchg
enter
mov
sub
repz
dec
jge
lods
ljmp
enter
test
inc
inc
xchg
sbb
fadds
dec
test
ret
pop
cwtl
fiadds
pop
lods
push
xor
mov
push
xchg
xor
scas
rol
repnz
subl
dec
or
das
sbb
xor
out
lods
xor
inc
xor
rcrl
pop
cmp
pop
fmuls
xchg
sub
loopne
out
orb
push
notl
push
push
jmp
push
inc
mov
jg
inc
jno
xor
jg
gs
mov
ret
loopne
cmp
out
out
fidivrl
dec
add
pop
cmp
loopne
push
adc
add
mov
inc
jno
cmc
lds
mov
xor
test
mov
out
les
dec
stc
and
mov
push
dec
ret
push
je
push
popf
loope
cltd
scas
out
dec
clc
mov
jge
ret
jno
shr
mov
adc
push
cmp
rolb
out
cs
mov
inc
stc
lret
push
dec
push
leave
jno
es
inc
das
pop
mov
dec
loop
es
out
lcall
repnz
cmp
loope
xor
pop
sbb
cli
pop
and
aam
sbb
push
pop
xor
in
sub
stc
push
xchg
test
pusha
jnp
scas
add
imul
mov
pop
out
ljmp
shlb
cltd
push
jae
inc
sahf
pop
aam
lods
cmp
cmpb
mov
mov
mov
xor
and
scas
out
stos
sub
cvtpi2ps
jns
jle
mov
fcmovne
stos
icebp
jns
mov
repnz
lods
xchg
jnp
inc
xchg
and
popf
leave
pushf
ljmp
in
in
les
lret
xor
jb
or
jmp
cltd
cltd
imul
and
xor
stos
mov
and
icebp
out
pop
jge
xchg
andl
stos
lret
mov
mov
inc
jo
jo
push
stos
xor
push
ds
mov
jmp
jns
pop
add
pushf
pop
lods
jp
arpl
mov
sub
cmp
jg
jb
stos
lods
imul
outsb
repz
push
push
xchg
pop
xchg
and
inc
sbb
ds
js
add
lea
imul
lods
push
repz
push
pop
roll
daa
xchg
push
cli
jmp
xchg
xor
adcb
clc
jo
jp
mov
addr16
jno
jmp
into
int
jns
xchg
loop
cmp
inc
or
jp
fxch
daa
mul
xor
pop
addr16
icebp
js
ds
jne
add
pusha
mov
imul
mov
xchg
lods
push
sbb
cmpsb
cmp
mov
and
ret
pop
mov
aad
decb
jne
push
or
mov
imul
inc
out
pushf
test
stos
and
push
gs
insl
mov
and
sub
out
arpl
js
jp
sarl
adc
sub
jecxz
pop
lahf
jle
push
xchg
xor
insl
das
repz
ss
lahf
dec
push
adc
adc
push
test
push
sub
jbe
enter
mov
pop
sub
bound
in
adc
mov
std
adc
sti
mov
bound
repnz
add
hlt
xor
and
mov
sub
out
sub
and
ret
push
add
push
sub
xchg
mov
pop
rcr
mov
rcll
iret
sub
enter
call
mov
push
ljmp
add
pushf
rclb
enter
shll
fsub
test
cmp
dec
push
fidivrl
cmp
movsl
sub
dec
rol
cmp
pop
test
dec
and
mov
dec
fcoms
push
bound
scas
adc
cmp
mov
out
inc
loopne
push
mov
rep
inc
in
jmp
pop
add
cltd
fs
sub
dec
es
jle,pn
pop
mov
mov
inc
icebp
jmp
jo
push
xor
xor
inc
fxch
and
dec
pop
bound
sbb
loopne
jb
movsb
jnp
scas
push
push
sbbb
nop
stos
fsts
mov
lods
dec
push
repnz
inc
mov
fistl
cmp
adc
and
sub
neg
shr
jmp
dec
and
insl
xor
addr16
mov
lods
sub
jno
out
sub
sbb
cmp
jg
mov
out
sub
dec
test
lret
jns
dec
xor
mov
lds
mov
daa
mov
sar
push
dec
and
lret
add
fstpt
leave
or
loop
fidivrl
push
lods
adc
pop
lcall
sub
pop
scas
pushf
and
sti
enter
fstpt
sub
jl
push
std
je
sbb
sbb
add
popf
jge
pop
and
fdivrl
jp
cli
add
xchg
loope
mov
dec
mov
sbb
inc
mov
jecxz
jp
scas
pop
sub
or
xor
pop
scas
and
or
adc
mov
push
sbb
adc
pop
mov
aam
cli
jecxz
pushl
into
add
lock
pushf
mov
or
pop
aam
mov
jl
push
lods
push
int
and
out
mov
dec
ror
jge
popa
lret
jb
jl
pop
enter
insl
pusha
sbb
or
jnp
inc
daa
adc
mov
cmc
push
dec
inc
clc
lods
pop
vmovlps
mov
mov
pop
lods
ljmp
push
mov
pop
fsubs
bound
into
push
xor
add
data16
cmpsl
mov
cmpsl
gs
and
xchg
rcrl
repz
xchg
xchg
out
mov
decl
ss
out
mov
dec
adc
insb
pop
lahf
jns
pop
xchg
jecxz
roll
xchg
adc
sbb
or
aas
fldl
inc
push
lret
mov
mov
cwtl
cmp
pcmpeqw
inc
cli
add
sti
ljmp
mov
mov
inc
test
outsl
mov
xchg
fstpt
xchg
sub
sub
arpl
push
in
sti
stos
and
arpl
mov
shrb
scas
testb
jmp
jnp
les
mov
push
adc
or
loopne
adc
pop
stc
out
xchg
rcrl
cmp
mov
es
loope
push
dec
shl
jp
jne
xor
jp
lea
stos
out
jo
lock
xchg
into
mov
cmp
aas
add
sub
mov
pop
rcrl
mov
inc
shrl
push
outsb
cltd
xchg
and
jne
std
add
insl
mov
adc
pop
adc
xor
or
pop
insl
test
outsl
inc
sbb
xor
insl
mov
loope
std
mov
or
lock
sbbb
std
loope
add
fs
sbb
mov
movsl
cmp
dec
and
fcompl
add
cmpsb
in
popa
sub
mov
movsb
jle
jle
mov
outsl
mov
data16
test
mov
shrb
cmp
pop
or
sbb
icebp
es
sbb
cwtl
lret
push
into
sub
jo
sub
dec
mov
adc
and
push
mov
lock
mov
mov
cmpsb
push
aam
pop
imul
sub
and
enter
pushf
mov
loope
popa
sub
fdivrp
inc
arpl
cmp
lods
mov
cld
inc
js
push
dec
and
mov
lods
loopne
lea
and
push
aas
repnz
add
stc
repz
repnz
cmp
push
imul
clc
jb
stos
pop
insb
out
cmp
mov
and
das
fwait
dec
push
stos
sti
rolb
loope
or
sbb
push
xchg
les
mov
popf
aas
mov
js
stc
pop
push
stc
out
mov
sub
xchg
jmp
imul
sbb
sahf
cwtl
aas
aas
inc
js
mov
mov
mov
daa
jecxz
push
mov
jge
arpl
pop
jns
loope
orb
and
pop
std
daa
or
or
js
shrl
imul
cmpsl
outsb
scas
sarl
imul
xchg
cmp
adc
fidivs
stos
add
xor
arpl
mov
mov
jae
cmp
test
scas
mov
scas
aam
cltd
data16
mov
cld
loopne
lcall
loop
test
xchg
stos
push
pop
jb
mov
jnp
jbe
bound
sbb
pop
pop
movsl
pop
pushl
cli
testb
jo
pushf
xor
sarl
in
add
daa
insl
adc
mov
mulb
sbb
mov
push
add
pop
mov
pop
cwtl
movsl
xor
icebp
subl
inc
push
cmpsb
push
movsl
test
incl
push
mov
fsubrs
out
movsl
rcr
arpl
lock
cltd
jns
jne
ljmp
or
jp
test
into
test
ror
push
pop
imul
xor
pop
insb
and
jmp
cmpsl
xor
cli
popf
aaa
shll
push
mov
xchg
mov
mov
push
and
ret
aad
dec
outsl
dec
xchg
xchg
mov
ljmp
add
jbe
das
cmp
push
jnp
push
dec
and
dec
jno
inc
shll
cmpsb
cmp
int3
jl
xchg
fs
icebp
lea
shl
mov
xorl
clc
xchg
int3
mov
sub
sbb
or
adc
dec
mov
or
insl
adc
loop
xchg
mov
mov
push
dec
adc
subb
arpl
fcoml
mov
push
push
sti
and
nop
fdivs
icebp
jg
xchg
fistl
mov
cmp
mov
push
lahf
fwait
sub
add
adc
xor
xchg
stos
xor
fidivrl
call
ja
fistl
loop
or
jge
imull
subl
lcall
adc
jnp
pop
fwait
nop
dec
mov
push
ja
and
mov
jmp
movsb
repz
inc
mov
cli
xor
decb
scas
add
aam
lds
rcl
cwtl
das
lcall
cmpsb
test
adc
adc
mov
mov
and
jmp
stos
cmp
sbb
enter
and
add
mull
das
das
xchg
pop
mov
and
or
xor
dec
push
add
ret
or
cmpsl
fldcw
call
and
icebp
push
mov
fwait
push
frstor
mov
pop
dec
mov
inc
mov
hlt
mov
imul
mov
pop
cmpl
mov
sub
movsb
lea
sbb
dec
rep
popa
cld
ss
jecxz
push
movsb
sub
push
enter
lahf
pop
jns
adc
sub
rcrb
sbb
outsl
ljmp
aaa
mov
mov
test
mov
and
in
stc
or
xor
leave
mov
dec
pop
mov
aad
mov
add
outsl
leave
inc
test
pusha
inc
add
cmp
push
mov
xchg
mov
sti
or
jns
jo
call
fstl
adc
inc
inc
jbe
mov
mov
push
jae
jp
nop
mov
push
hlt
lods
dec
pop
dec
mov
stos
mov
jns
dec
jecxz
sbb
mov
out
mov
adc
shl
mov
mov
push
loop
or
mov
shrb
pop
mov
rcrb
xchg
jp
mov
xchg
iret
cltd
mov
push
jo
mov
mov
lahf
inc
repnz
repz
jo
ja
adc
dec
jb
sbb
xchg
add
arpl
fidivs
dec
cmpsb
lods
aas
and
sub
mov
and
xchg
sbb
fidivrs
sti
sub
mov
inc
imul
mov
mov
stos
cmp
fimuls
ja
aaa
add
dec
push
jl
ficomps
cwtl
inc
icebp
xlat
push
ja
adc
and
xlat
inc
or
fiadds
sti
in
cmp
sub
enter
push
aam
cmp
loope
and
mov
cwtl
mov
xorl
dec
pop
mov
jle
hlt
or
mov
cmp
mov
pop
out
ret
cmp
ds
cmp
cmp
ss
lret
out
in
push
sub
adc
in
lahf
repz
pop
push
fnstsw
sbb
cmpl
xchg
lea
xchg
out
xor
xchg
shll
into
ja
jb
sbb
add
sub
add
xchg
insl
test
sub
fistpl
cmp
or
pop
test
sbb
aad
xchg
daa
stos
mov
cmp
push
jg
cmp
daa
xor
iret
or
lock
inc
incl
lret
mov
or
cmp
xchg
scas
in
jecxz
xor
mov
in
shll
pushf
lret
adc
adc
mov
cmpsl
mov
data16
std
cld
cltd
cld
add
or
inc
lods
pushf
fistpll
cmp
pop
sbb
nop
push
cltd
xor
repz
cli
cmp
movsb
cltd
rolb
xchg
sbb
xchg
test
in
push
sbb
cmp
lods
int3
xchg
jns
add
mov
cmp
ret
xor
add
xor
sbb
shl
sbb
popa
call
lea
cmpsl
dec
cmc
aaa
mov
cli
xchg
frstor
les
mov
subl
sbb
das
mov
int
inc
icebp
call
int3
int3
mov
dec
shlb
add
mulb
cmc
add
xchg
mov
xchg
pop
pusha
jmp
lock
call
xchg
jl
nop
cli
nop
cwtl
jae
cwtl
repz
and
xchg
outsb
dec
inc
mov
lahf
dec
sbb
push
into
cmpb
cmpb
jmp
paddusb
dec
mov
mov
int3
orb
mov
xor
and
out
out
popa
jle
push
push
mov
imul
fisubl
in
pop
pop
sub
sti
jo
pusha
push
test
jge
stc
lea
fcompl
jmp
sti
test
aad
cmc
pop
loope
jmp
loop
sub
xor
add
sti
jl
pop
ja
imul
jecxz
and
mov
mov
loope
sbb
mov
insl
in
push
xchg
push
dec
adc
push
mov
imul
ss
movsl
and
cli
outsb
scas
movsb
in
mov
popa
aad
add
rcll
movsb
sub
ja
movsl
loope
xlat
insl
movsl
cmp
cmp
call
sbbl
push
dec
cmp
push
xorb
fists
movsb
mov
fnsave
xchg
fs
sbb
xor
lret
and
shrl
addl
loop
std
aaa
aas
pop
mov
mov
movsb
jmp
fldcw
jns
rep
pop
xchg
cwtl
push
jecxz
add
xchg
mov
cmpsb
mov
hlt
pop
inc
icebp
cwtl
jp
inc
ss
lahf
ljmp
and
cltd
inc
leave
xchg
movl
jno
push
mov
in
stos
mov
fs
gs
inc
and
test
rol
pop
xor
push
xchg
dec
inc
mov
mov
pushf
push
shrb
mov
lahf
imul
movsb
outsl
jge
cli
lcall
rorl
sbb
pop
dec
xchg
clc
jmp
sub
xor
call
xchg
or
mov
lock
pop
push
add
xlat
les
xor
int3
fidivs
sar
inc
push
jg
mov
push
loope
stc
xchg
sbb
jge
mov
outsl
sub
push
jb
mov
inc
inc
dec
mov
push
or
mov
xchg
scas
mov
cmp
xchg
cmp
add
add
scas
push
inc
add
fcomps
pop
scas
repz
cltd
jno
mov
test
sbb
shl
stos
imul
sub
sub
jno
cltd
jmp
in
adc
mov
test
inc
iret
xor
jecxz
mov
cmpb
gs
adc
pop
mov
inc
test
loopne
ds
push
jecxz
jle
iret
filds
fisttpl
and
ss
out
dec
jne
adc
sub
jl
bound
adc
dec
insb
jg
bound
fwait
sub
sbb
sub
xchg
xor
mov
mov
js
call
popa
lock
lods
inc
lahf
push
jo
popf
loop
jecxz
pop
adcb
fistpll
lds
aam
inc
ja
cwtl
pushf
pop
repnz
lods
lds
jg
enter
cs
out
push
lret
xchg
xchg
stc
mov
dec
outsb
sub
pop
mov
ret
xchg
or
addr16
into
into
sbb
pop
pusha
inc
cmp
dec
gs
cmp
stos
lea
jae
shld
mov
sub
daa
mov
mov
and
lds
mov
xchg
xor
mov
mov
mov
dec
fdivs
aam
out
std
lods
jbe
mov
mov
mov
mov
dec
pop
adc
mov
outsb
nop
and
cmp
push
into
add
repnz
jmp
cmp
mov
scas
jae
leave
xchg
shlb
imul
and
shr
or
cmpsb
mov
xor
xchg
sbb
xorl
sub
hlt
inc
in
aad
stos
cmp
int
fstpt
sub
outsb
lods
jecxz
hlt
mov
notl
push
roll
ret
adcb
xchg
sbb
dec
mov
cmp
push
inc
and
pop
and
xchg
mov
jl
lods
bnd
insb
sbb
mov
rcl
xchg
mov
pop
enter
adc
add
addr16
and
in
sbb
addr16
pop
cmp
xor
sub
lock
mov
hlt
mov
jb
inc
adc
sarb
jmp
mov
mov
jne
xor
pop
in
int3
insl
outsb
aad
mov
inc
xchg
js
stos
iret
fsubl
sbb
dec
insl
aaa
pushf
mov
aaa
jmp
jo
lcall
rcrl
push
out
fbld
jle
loope
vunpcklps
cmp
dec
jg
and
or
cltd
mov
dec
xor
dec
rorl
sbb
sub
mov
xchg
mov
push
divb
addr16
lea
addr16
lcall
jl
repnz
sub
pop
aas
sbb
mov
pop
shrb
test
das
arpl
jecxz
cwtl
aad
test
xchg
cltd
mov
imul
sahf
jb
loope
mov
lds
add
in
pop
ret
fists
xor
add
inc
mov
and
loop
shl
mov
insl
jb
std
ljmp
lds
dec
sub
in
leave
pop
mull
mov
mov
jp
xchg
fimuls
add
jnp
pop
leave
pop
add
push
cmp
popf
jmp
jno
stos
push
or
int3
test
test
xchg
push
dec
nop
sbb
xor
mov
pop
xchg
pop
mov
cwtl
addr16
dec
mov
arpl
push
mov
in
fninit
aad
jg
imul
inc
inc
or
ss
movl
pop
mov
fldcw
cmp
pop
inc
cltd
fists
les
fld
dec
push
pop
mov
pop
lods
mov
subb
mov
frstor
cwtl
add
jns
enter
ss
mov
mull
shl
dec
adc
jmp
fstpt
xchg
xor
mov
cmp
fldenv
fidivrs
sbb
and
push
pusha
xor
addr16
mov
push
pop
push
mov
frstor
sbb
push
popa
fadds
add
aad
mov
sub
pop
mov
mov
mov
pusha
fistpl
xchg
xor
addr16
sub
les
cli
pop
push
inc
lods
js
pop
mov
mov
pop
les
test
es
mov
cmp
loope
cmp
sub
mov
dec
negb
jnp
cltd
bnd
adc
cli
add
mov
out
xchg
sub
add
cmova
mov
fsubrp
add
out
popa
sahf
ret
das
pop
and
lahf
add
repz
pusha
adc
or
mov
mov
js
ja
or
fidivrl
insl
in
ljmp
or
xchg
mov
cs
xor
das
jge
sub
mov
loopne
adc
test
push
jmp
adc
aaa
or
xor
or
adc
shrl
test
pop
dec
xchg
ret
in
cmp
negl
outsl
fisubs
ret
adc
mov
aad
call
mov
aad
and
and
sbb
xor
adc
jmp
jecxz
aaa
pop
dec
adc
scas
test
subl
sti
xor
sub
fs
ficoms
mov
loope
push
test
mov
leave
jmp
pusha
inc
dec
movsl
sbbb
fstps
fstpt
pushf
stos
loop
ret
adc
sbb
jbe
cmc
push
cmp
imul
push
inc
xchg
dec
shrl
sbb
notl
xchg
insl
nop
popa
sub
shr
aas
mov
je
add
negl
ss
jle
in
loopne
and
push
cmp
sti
mov
inc
bound
dec
lods
out
dec
sub
and
jg
mov
push
mov
sbb
dec
and
xor
xchg
int3
dec
mov
pop
ss
jne
sar
aad
loopne
adc
std
mov
mov
or
enter
sub
or
mov
fsubp
addr16
add
sbb
fcoml
inc
hlt
outsb
pop
or
and
int3
and
add
clc
mov
mov
jns
pushf
dec
lods
jecxz,pt
add
push
pushf
and
test
cmpsl
imul
jmp
lcall
mov
jnp
fcmovnbe
stos
sub
cwtl
xor
hlt
mov
mov
outsb
mov
imul
push
mov
mov
bound
sbb
cmp
xchg
xor
aas
pop
and
jb
out
mov
mov
aam
dec
scas
aad
mov
cmp
lods
insb
dec
cmpsl
pop
mov
pop
das
mulb
ret
cli
inc
mov
pop
das
sbb
add
pop
test
dec
dec
daa
push
dec
mov
inc
int
push
xchg
pop
xchg
mov
or
cmp
ljmp
xor
js
divb
enter
adc
icebp
inc
not
jnp
in
cmp
lar
sbb
and
test
pop
hlt
dec
cmc
xor
sarl
xor
movsl
xchg
sti
jnp
imul
pop
cvtpi2ps
mov
add
adc
push
mov
jo
xor
dec
xor
jmp
flds
xor
or
adc
daa
lods
xor
jbe
les
inc
lahf
fsubrl
loop
dec
repnz
stos
gs
dec
cmp
cmp
mov
pop
jbe
pop
ja
lahf
es
mov
fcmovnu
ss
mov
int
cli
jle
fstps
mov
sub
jecxz
and
inc
pop
cmpsl
xchg
iret
mov
ja
push
mov
fildll
test
in
in
in
mov
xor
adc
inc
inc
mov
sub
lods
sub
fidivs
arpl
dec
rolb
dec
add
add
adc
incl
dec
jmp
mov
jbe
fnstcw
scas
cmp
inc
es
sub
push
shlb
repz
out
lret
aaa
les
notb
xor
movsl
jno
cmc
push
adc
cmc
stos
push
insb
popf
push
mov
cmp
lea
push
xchg
stos
add
cmc
ja
in
dec
push
sahf
data16
adc
insb
icebp
jle
cmpsb
ret
and
scas
push
in
mov
xor
xor
stos
shrl
mov
or
jmp
mov
mov
pop
out
push
mov
inc
mov
inc
jge
test
daa
loopne
mul
int3
mov
iret
add
fwait
lret
arpl
jo
mov
jae
lods
jns
cmp
xchg
add
xchg
popa
or
adc
insb
jmp
repnz
or
mov
das
hlt
pop
add
mov
fistps
je
cmpsb
sub
mov
shll
push
and
clc
test
lock
fidivl
push
dec
xchg
jle
push
test
cli
xlat
das
push
ret
mov
inc
into
push
cmpsb
mov
mov
pop
loop
mov
mov
add
inc
cmp
idivb
mov
xchg
adc
movsb
cmp
cmc
cmp
push
repnz
lret
dec
mov
popa
pop
pop
stos
imul
ret
loopne
add
flds
cmp
int3
not
mov
cmp
in
aas
ss
iret
add
pop
mov
push
add
ss
ljmp
stos
ds
aam
mov
enter
or
or
jae
cmc
cmp
jns
mov
jnp
jbe
mov
adc
push
add
test
adc
cmpsb
ret
jae
inc
cmp
lods
mov
adc
sti
xchg
test
out
push
push
bound
out
es
repnz
addr16
adc
ret
mov
sahf
test
pop
cmpsl
xor
lds
iret
loop
and
repz
cmp
mov
sub
push
pop
iret
xor
mov
in
jmp
cmpb
add
jno
insb
cmp
pop
imul
int
inc
push
inc
loop
call
in
ljmp
mov
inc
or
adcb
jmp
addr16
cmp
lods
xor
mov
imul
ret
mov
pop
adc
and
iret
fstl
jle
lcall
ja
dec
adc
fwait
pop
lods
fnstsw
xchg
leave
das
inc
pop
mov
test
sahf
shlb
pop
pop
nop
push
inc
and
mov
out
into
cli
pop
outsb
and
xchg
movsb
ds
inc
frstor
fs
lahf
lods
pusha
dec
dec
dec
push
mov
sub
loop
sbb
mov
adc
push
jb
aad
pop
jg
mov
inc
mov
mov
gs
cmpsl
xchg
jb
rol
cmc
shll
mov
bound
jnp
popa
jae
push
or
cmc
fbstp
lods
test
idiv
ja
sub
cmpsb
sahf
pop
or
in
repz
and
xchg
push
xchg
test
or
insb
jmp
mov
int3
lret
loopne
and
xchg
lahf
cld
movsb
xor
movsb
dec
push
mov
ret
adc
mov
push
lret
jg
sbb
jge
imul
mov
and
loop
icebp
mov
iret
fwait
inc
jb
pop
sub
xlat
mov
loope
xor
jmp
call
idivl
mov
sub
outsl
mov
pop
popa
sub
out
roll
cs
int3
mov
sbb
cmc
push
jecxz
lret
cmp
mov
and
test
cmp
jne
and
fldt
sbb
jne
jns
and
lahf
addr16
iret
mov
mov
mov
ja
pop
int3
jo
and
dec
cmp
sahf
sbb
fdivl
jecxz
stos
fwait
add
cmp
hlt
test
add
pusha
dec
push
add
ret
adc
inc
rol
imul
sbb
sbb
fnstcw
xchg
cmp
push
pop
pop
outsl
or
ret
ds
scas
sbb
dec
dec
mov
push
fadds
adc
mov
test
rorl
stos
icebp
push
mov
outsl
adc
out
mov
xlat
mov
push
dec
sub
push
shrb
jge
mov
arpl
xor
out
inc
call
neg
cltd
fistpl
mov
pop
adc
call
xchg
nop
cwtl
shl
sbb
add
lret
cmc
sub
lahf
mov
add
rcrl
mov
jg
inc
stc
xchg
sti
sahf
orl
jb
jl
repz
dec
pop
in
xchg
pop
je
adc
jecxz,pt
mov
jnp
fs
xchg
push
ljmp
or
pop
xchg
sub
call
lock
xor
stos
xor
sub
cmpsl
fs
clc
les
mov
in
test
pusha
outsl
sbb
pushf
pop
jecxz
out
sbb
leave
sbb
jns
pushf
and
std
xor
insl
push
lahf
into
push
push
aas
jne
pop
mov
in
pusha
pop
mov
add
jno
shlb
lea
sarb
and
out
mov
scas
jge
pushw
or
lock
sub
xor
mov
jne
xchg
xchg
jecxz
outsl
jg
out
sbb
sti
mov
or
inc
inc
xchg
ja
mov
test
insb
mov
in
xchg
jns
ds
xlat
mov
fbstp
je
js
jp
movsb
stos
mov
pop
out
mov
adc
loopne
shlb
jmp
sbb
pushf
xor
xor
push
push
or
jbe
sub
pop
dec
or
pop
jmp
or
out
push
pslld
mov
pop
cmp
jecxz
pop
cld
inc
ret
jns
test
scas
inc
sbb
out
mov
mov
xchg
rcll
push
push
je
test
pop
adc
xor
jmp
inc
xor
stos
mov
adc
mov
arpl
pop
in
fcomps
rolb
fmul
mov
push
push
or
xchg
sbb
and
ret
mov
mov
dec
ljmp
pop
scas
fs
outsb
dec
cmpsb
addb
rcl
scas
sub
es
jge
sub
push
xchg
test
dec
movsb
sbb
add
xor
xor
lret
xchg
dec
cmpsl
rorl
pop
mov
dec
mov
mov
jge
lret
dec
in
in
inc
es
aad
xchg
ret
and
adc
cs
push
and
loope
add
or
stos
mov
mov
into
jno
aaa
sub
in
add
sub
scas
pop
imul
repnz
or
je
fldcw
mov
adc
insl
loopne
push
add
adc
push
mov
stos
ja
roll
rcr
stos
sahf
lds
idiv
repz
cltd
lea
loope
mov
pop
aam
lods
fildll
push
adc
pop
dec
aad
imul
pop
sbb
mov
xor
jmp
sub
iret
js
shrl
nop
mov
push
push
clc
xor
mov
adc
imul
dec
xor
mov
sub
jle
push
mov
scas
cld
sti
mov
adc
cld
in
xchg
insl
sub
sbb
stos
pop
out
push
cmpb
mov
int3
xchg
fwait
push
mov
inc
inc
lea
mov
sub
enter
pop
loop
fnstenv
pusha
jge
dec
mov
iret
adc
fucompp
jns
sub
lahf
dec
mov
jbe
pop
push
mov
out
gs
and
sbb
sub
lock
xchg
xchg
aad
aaa
movsb
cmpsl
push
add
iret
insb
add
stos
lock
pop
pop
mov
dec
inc
dec
mov
inc
pop
xor
xlat
jns
xor
insb
jecxz
dec
out
mov
pop
cmp
popw
fisttpl
sub
cwtl
insb
test
jae
cmp
loope
sbb
outsl
dec
movsb
aad
jp
sbb
fsubrp
mov
iret
jl
xchg
in
mov
ja
xchg
das
sbb
add
pop
cmp
addl
or
mov
aas
gs
cmc
cld
push
jbe
sbb
inc
jp
mov
lds
loopne
cmp
rorb
cltd
mov
inc
loope
sbb
sbb
mov
push
imul
mov
and
jg
aas
rorl
idivb
sub
sub
adc
data16
repz
decb
movsl
xorl
mov
stc
xchg
mov
popa
lods
pop
jbe
in
sbb
push
fisttpll
stos
dec
andl
or
sub
outsb
dec
into
aad
pusha
push
insb
lret
and
xchg
dec
movsb
jg
mov
or
mov
cld
imul
push
ror
add
mov
stc
and
xchg
dec
sbb
pop
in
jmp
in
add
mov
call
push
push
ret
movsl
and
pop
xchg
jle
les
sub
add
cmp
lret
and
inc
xchg
inc
into
sub
mov
xchg
xor
or
sbb
loopne
add
adc
ljmp
fwait
mov
fs
aad
arpl
sbb
gs
mov
inc
lock
pop
mov
fisttpll
mov
mov
rolb
adc
shrl
jae
ljmp
pop
sbb
or
mov
arpl
xchg
push
jl
xor
pushf
movsb
jne
mov
cld
scas
cld
add
movsl
fwait
mov
sbb
testl
sbb
mov
loope
dec
outsl
xchg
test
loop
and
das
mov
popa
pusha
lds
sub
dec
xchg
push
adc
or
jl
jmp
aas
pop
aas
addr16
pop
aad
rcrl
aad
ret
ljmp
adc
fbld
xchg
sarl
adc
or
mov
loope
mov
nop
add
pop
sbb
cmp
lret
aas
or
adc
adc
in
sahf
cwtl
xchg
or
cmp
sbb
movsb
or
mov
adc
das
push
mov
xor
mov
or
std
dec
adcb
add
addr16
or
andb
cmp
pop
lods
push
jno
adc
mov
stos
xchg
xchg
shr
jl
sbb
or
movsb
rcrl
sub
push
insl
in
and
call
add
xchg
xchg
mov
clc
mov
aaa
mov
jmp
lods
pop
mov
aad
rcl
subl
push
mov
fidivs
cmp
popf
mov
and
xchg
xor
mov
leave
push
sbb
inc
int3
mov
inc
and
inc
mov
adc
fisubrs
sub
jecxz
cli
dec
sub
mov
or
in
xchg
pop
mov
psubd
loope
xchg
enter
pop
cmp
adc
fcomp
sub
adc
xchg
dec
xrelease
mov
pop
test
mov
dec
adc
std
xorb
xchg
movsb
xor
adc
push
jge
sub
push
dec
or
jbe
xchg
mov
pop
stc
and
rcr
sahf
jae
jae
daa
inc
mov
cmp
sbb
cmp
adc
jp
or
mov
ret
mov
loopne
xor
push
xchg
mov
movsb
test
pop
enter
add
fsubs
add
mov
add
pop
mov
jae
iret
hlt
out
clc
in
movsb
imulb
jb
aaa
push
iret
loop
jl
fisubs
fidivs
cli
nop
movsb
cli
mov
stos
mov
sub
sbb
ret
jp
inc
jmp
or
mov
dec
pop
push
sbb
dec
leave
push
add
xchg
rolb
iret
repz
cmp
repnz
lret
push
mul
mov
inc
push
xchg
es
mov
pop
scas
pop
pop
fbstp
and
mov
cltd
jle
adc
aaa
lret
sub
mov
pop
sbb
lcall
mov
xchg
loop
fdivrl
pcmpeqb
cmc
ja
sarl
jmp
and
hlt
jl
or
cmpsb
fistpll
push
fs
rcll
sahf
adc
ds
ficompl
mov
pushf
pop
in
into
setge
adc
mov
lods
ss
push
jno
inc
lcall
inc
dec
jmp
in
jecxz
out
mov
cwtl
adc
cld
lea
jge
jge
pop
fistpl
cmp
and
jns
mov
mov
cmp
lret
test
mov
pop
idivb
cmp
leave
stc
int3
xor
and
insl
sbb
aam
pushf
sbb
out
jo
rclb
vpackssdw
es
cmp
fmul
in
pop
enter
cmc
pop
fwait
mov
nop
dec
dec
sbb
test
gs
out
bound
fwait
out
sbb
les
xor
stos
inc
test
rol
add
call
mov
sub
outsb
je
out
cltd
mov
mov
stc
std
mov
cwtl
jno
jecxz
sahf
xchg
cmp
sti
rcl
add
pushl
imul
addr16
sahf
flds
lret
pop
leave
bndldx
xor
std
cmp
cmp
rcll
cmp
lcall
xor
std
ret
inc
outsb
sub
xor
in
xor
cmp
push
dec
pop
jmp
push
mov
push
stos
pop
shrb
mov
ret
sti
sub
shlb
push
jge
in
push
or
push
mov
insl
in
dec
in
rcl
push
sub
imul
adc
pop
stos
inc
ss
les
xchg
adc
adc
adc
loopne
jle
outsl
mov
movsl
and
cmpsb
push
or
add
out
sub
mov
fcmovbe
in
ja
rclb
dec
js
das
fdivs
mov
fs
cmp
pop
dec
pop
add
add
call
fstp
sbb
or
jle
sarb
inc
ret
push
push
xchg
cmp
shrl
mov
inc
fdivs
mov
lahf
sbb
or
test
test
jmp
push
push
sub
pushf
push
pop
push
or
mov
dec
dec
dec
sahf
out
push
mov
imul
hlt
xchg
ret
ss
das
shlb
insl
jne
xchg
jge
push
fsubl
jb
push
mov
mov
sbb
fldt
dec
sbb
mov
jno
mov
push
xchg
mov
dec
mov
rcll
pop
sti
push
mov
fisubrl
push
xchg
movsl
and
icebp
sbbb
add
addr16
insl
cmp
lods
cmp
movsb
cmp
es
lods
add
mov
jb
out
lcall
pop
push
lret
ljmp
jecxz
dec
je
push
mov
mov
push
cmp
outsb
xor
es
mov
stos
sbb
inc
push
dec
ret
out
jecxz
fbld
testl
jbe
mov
cmp
daa
lcall
inc
jns
loop
cs
jle
cld
ds
xor
in
enter
fstpl
fiadds
push
jnp
lods
insb
push
mov
push
pop
inc
out
outsb
and
addr16
lock
scas
sub
and
cs
jo
cwtl
mov
inc
or
mov
test
pop
mov
jp
in
jne
enter
jnp
push
adc
lahf
mov
sub
or
ficomps
fldenv
ljmp
pop
sbb
shrl
mov
add
aas
ds
mov
std
or
sub
lds
pop
xchg
ja
les
in
push
xlat
jmp
lahf
insl
es
in
test
mov
xchg
lret
les
shll
cmp
lods
cmp
in
popa
movsl
sbb
inc
or
lahf
sbb
dec
lock
mov
sar
out
div
jnp
dec
pop
cwtl
xor
jmp
and
daa
pop
xlat
cmp
subl
test
dec
mov
ss
pop
cltd
call
cltd
outsl
pop
jnp
les
push
andb
sub
out
movb
dec
fmuls
or
xor
xchg
enter
pop
add
in
xchg
pop
push
test
mov
push
mov
or
aam
xor
test
inc
mov
or
dec
cmp
imul
divb
xchg
jae
mov
sub
pop
xor
mov
cmpsl
sub
int
addr16
add
hlt
lock
hlt
pop
sub
or
adc
inc
push
inc
mov
mov
repz
cwtl
inc
in
xor
scas
scas
jecxz
adc
call
adc
inc
sbb
outsl
sti
jae
xchg
mov
pop
mov
call
pop
mov
xchg
icebp
jbe
mov
jle
hlt
loope
aaa
iret
mov
out
push
loopne
jb
pop
and
pop
insb
inc
push
sbb
and
rol
jl
push
cltd
fiadds
jae
dec
jno
cmpsb
mov
jns
sub
fistpll
test
cmc
jnp
add
push
or
xor
dec
mov
and
push
mov
leave
inc
fldenv
xor
jle
mov
pop
lahf
int
xor
cmp
add
outsb
push
or
outsb
cmp
outsb
addr16
xchg
cmp
sub
xor
and
or
std
mov
mov
inc
mov
in
mov
cmpsb
xchg
dec
sub
xchg
notl
pop
je
lret
dec
arpl
dec
and
lahf
jg
clc
jecxz
jecxz
pop
pop
push
mov
sbb
leave
xchg
xor
iret
fnsave
fs
add
add
pop
mov
sub
stos
test
aam
sub
es
mov
dec
js
loop
mov
pop
sub
in
sbb
xlat
cmp
push
hlt
push
mov
into
add
xor
pop
fstpt
sbb
into
and
movsl
pop
sbb
int3
ficompl
mov
sub
pusha
push
loope
popa
xor
mov
fistps
int
push
mov
imul
rorb
sahf
push
cmovs
sub
sub
cmp
push
or
gs
sub
adc
rorl
and
pushf
pop
mov
icebp
xchg
ss
stos
cwtl
add
cmpsb
sub
push
lahf
xchg
push
mov
jbe
mov
movsb
scas
jae
push
xlat
daa
mov
mov
jne
popf
cmp
sub
daa
xor
repz
sbb
add
insb
dec
loopne
shll
dec
adc
mov
xor
in
mov
cmp
jmp
sbb
jb
mov
mov
adc
test
xor
mov
repz
mov
or
hlt
push
cld
mov
divl
je
cltd
addr16
in
and
incb
stc
add
imul
stos
das
cmpsb
mov
out
ficoml
inc
add
and
ret
inc
cmp
mov
fdivrl
dec
cmp
jne
mov
sbb
js
js
xor
jbe
cs
or
xchg
jne
repz
xchg
imul
mov
mov
rolb
arpl
aad
and
shll
add
test
stos
ja
mov
adc
iret
fcompl
nop
aad
or
fldenv
pop
add
jmp
leave
sub
sbb
push
cmp
andb
out
dec
fstl
je
popa
cli
jg
lcall
push
sbb
xlat
push
sbb
push
movsl
adc
aam
push
xchg
adc
push
pusha
test
shll
shrb
stos
fstps
aam
jmp
ficoms
mov
mov
inc
inc
lock
and
cmp
jb
int
push
sub
or
sub
repnz
mov
push
iret
lods
xor
rcll
mov
jl
sub
lret
add
xor
sbb
dec
pop
aam
push
in
in
mov
add
out
adc
rcrl
sbb
flds
mov
push
in
jnp
data16
cmp
push
jbe
in
out
es
mov
add
push
test
cli
lods
mov
mov
jno
inc
int3
xchg
es
mov
jmp
mov
xchg
loop
xchg
cltd
cmc
push
or
push
lret
test
mov
lock
stos
sbb
add
mov
mov
shrb
jnp
rcrb
adc
ss
in
xchg
clc
push
stc
sbb
into
fidivl
xor
movsb
and
notl
iret
mov
pop
add
xchg
or
ret
ljmp
flds
jno
push
flds
cmp
cli
sahf
mov
jg
jle
xchg
sub
mov
stos
imul
pop
popl
cltd
cmp
imul
add
inc
call
hlt
inc
sub
dec
je
nop
inc
sbb
jnp
mov
outsb
lods
cmovne
and
dec
iret
call
lea
and
orl
add
mov
in
in
jnp
xor
inc
imul
cli
jnp
sarl
mov
out
and
stos
mov
rclb
or
mov
inc
lahf
mov
imul
test
lea
mov
stc
cmp
lret
data16
fxam
jae
jg
cmpsl
lock
nop
mov
cmp
mov
clc
xchg
dec
sub
add
or
sti
mov
xor
ret
lcall
aam
rol
mov
in
sub
or
test
movsb
mov
sbb
jle
movsw
cmpsb
pop
mov
out
rdpmc
cli
add
mov
andb
mov
dec
aam
rcrl
in
mov
das
mov
mov
xchg
lcall
lcall
in
xor
repnz
fnstsw
int3
aas
xor
jg
xlat
sbb
scas
adc
and
and
xor
mov
adc
aaa
push
adc
sbb
or
push
push
aam
inc
jge
fidivs
cmp
int3
sbb
loope
push
fmulp
pop
test
hlt
inc
ss
ss
or
insl
je
les
lds
mov
xor
lea
cmp
stos
and
xor
hlt
sahf
imul
xor
test
bound
imul
cmpsl
dec
jl,pn
pop
push
lcall
cltd
aaa
sbb
fildll
mov
push
inc
push
mov
fcomi
daa
pop
scas
mov
sbb
xchg
pop
sub
std
repnz
aad
int
iret
jae
ljmp
pop
sub
dec
idivb
imul
fstpt
test
aad
repz
ret
lods
mov
aas
pop
cmp
jns
jl
push
push
mov
xsavec
and
imul
ret
push
sub
inc
divb
nop
sub
cs
imul
testb
push
push
xchg
jg
subb
push
pop
jg
xchg
ss
arpl
gs
div
mov
xchg
sub
xor
dec
cli
test
xchg
mov
rolb
pop
jb
xchg
popa
or
and
push
push
xor
mov
cld
decl
pop
mov
add
xchg
jg
push
pop
addl
in
and
or
pop
loopne
cmp
cmp
xchg
test
sarl
into
ret
subb
aas
push
fstpt
dec
add
jg
and
jmp
mov
push
inc
cmp
ret
outsl
sub
cmp
xor
pop
leave
xor
mov
jg
fisttps
mov
negl
sbbl
daa
shrl
lea
in
ljmp
add
jmp
and
jge
arpl
jnp
addr16
or
out
jge
xchg
ret
outsl
xchg
pop
and
in
ret
andb
cmp
and
sbb
sub
add
movl
scas
into
cli
ja
or
daa
push
cmpl
shl
xchg
negb
sub
rcl
icebp
iret
fnstsw
notl
out
sbb
test
roll
sub
pushf
stos
in
jl
fsubr
fs
xchg
test
xchg
mov
loope
sahf
mov
lea
mov
in
lods
pop
xor
pushl
pop
int
pushf
jae
shll
sub
addr16
enter
movsb
decl
lahf
or
mov
shlb
stos
sbb
mov
or
cmp
insl
ds
mov
mov
push
lret
sti
loopne
lea
shrl
je
cli
add
addb
popf
out
ljmp
fucom
and
iret
bswap
or
pop
outsb
push
gs
je
xchg
dec
push
jg
add
sbb
mov
hlt
lds
rolb
in
into
sbb
sti
xor
mov
fs
mov
xchg
mov
insb
or
inc
cmp
xchg
in
push
xchg
hlt
cmc
scas
cmp
add
mov
repnz
test
sbb
js
inc
aaa
aas
adc
aaa
xchg
ljmp
lcall
cmpsl
pop
push
mov
iret
iret
push
lahf
or
xchg
je
pop
add
mov
jo
pushf
int3
and
sbb
xchg
fistps
or
leave
or
sbb
xor
pop
aas
mov
and
mov
mov
scas
sub
leave
mov
pusha
test
sti
in
sbb
mov
iret
test
and
je
dec
jae
clc
add
adc
pop
fisubrl
ja
test
pop
leave
cwtl
bound
bnd
pop
mov
jecxz
mov
jae
imul
stc
fwait
daa
adc
inc
mov
jp
cmpsb
adc
or
fucomp
dec
pop
inc
popa
xor
ljmp
mov
sub
add
push
leave
es
xchg
int
push
xor
adc
push
pop
sbb
add
adc
je
bswap
push
pop
in
inc
dec
mov
idiv
ret
mov
add
dec
mov
lock
in
mov
cmp
sub
in
fnstcw
xchg
cli
pop
test
push
pop
adc
inc
mov
inc
cltd
stos
andb
sub
jbe
mov
or
rcl
lock
mov
movsl
jns
pop
fcompl
push
cmp
xor
das
movsb
fildl
imul
sbb
aas
rcr
incb
inc
mov
call
dec
jno
lods
int3
fidivs
arpl
or
cmp
push
fistpll
aas
mov
pop
jl
scas
push
lcall
addr16
imul
mov
xor
pop
repnz
scas
vmovaps
fcompl
pop
xchg
test
cwtl
xlat
push
dec
lret
mov
setge
and
cs
mov
cmp
xor
or
xor
rolb
push
sub
ja
rolb
mov
outsb
mov
int
andb
mov
dec
scas
and
adc
mov
or
dec
inc
mov
cmpsl
mov
lods
arpl
in
pusha
scas
ja
mov
insb
add
xchg
dec
lcall
pop
fld
mov
out
pop
mov
fistl
dec
sbb
inc
mov
inc
and
mov
ret
cmpsl
sahf
sbb
cwtl
or
subl
repz
push
push
movsb
pop
incb
in
xchg
loop
push
mov
cltd
xchg
cltd
vpshld
mov
in
int
ds
inc
sub
scas
mov
subl
test
sub
jecxz
push
xor
shrb
adc
call
out
push
lahf
cwtl
rcr
lea
call
push
addr16
xchg
inc
jne
divl
loop
outsl
sub
pop
mov
or
es
fld
mov
aam
mov
lcall
sbb
outsb
xor
xchg
adcb
ljmp
mov
cmp
push
adc
mulb
adc
jmp
outsb
cmp
and
mov
leave
stos
icebp
idivl
mov
in
mov
in
inc
pop
scas
push
jae
jecxz
jnp
mov
mov
sub
call
push
and
adc
js
push
cli
dec
test
and
pop
inc
nop
sub
pusha
mov
mov
sarl
lock
or
mov
cli
imul
jae
in
mov
xor
mov
sub
inc
sbb
repnz
loope
sub
xchg
mov
sbb
test
mov
and
movsb
xchg
push
stc
lcall
loop
das
lock
orl
inc
fisttpl
and
jne
jge
in
push
stc
fisttpl
inc
inc
jg
or
mov
negb
mov
std
lods
hlt
fildl
repnz
insl
inc
scas
mov
add
adc
cmp
pop
push
mov
inc
pop
cli
pop
push
adc
cld
sbb
jl
jne
mov
pop
int
repnz
ljmp
dec
push
les
sbb
aaa
cmp
negl
stc
push
mov
scas
pusha
iret
sub
mov
mov
fwait
ljmp
or
push
sbb
xchg
jge
rclb
lds
lret
cmp
cmp
imul
lock
into
insb
test
mov
lods
mov
mov
lods
sbb
in
movsl
loopne
mov
addr16
popf
push
fildll
mov
xchg
mov
test
cmp
clc
nop
repnz
out
cmp
cli
insl
mov
popf
sbb
push
daa
push
repz
push
sarb
loop
test
cs
mov
dec
stos
sbb
stos
jne
pop
lea
or
xchg
or
fsubr
outsb
jg,pt
xor
nop
xlat
add
rorl
mov
mov
dec
enter
aad
rorl
mov
bound
and
pop
adc
outsl
cltd
je
push
dec
int3
sub
cmp
dec
jp
xor
adc
ret
into
push
testl
fwait
inc
mov
xchg
dec
dec
cmp
push
ja
js
fnstcw
pop
cli
loop
add
scas
pop
lret
adc
loope
mov
jl
ret
insb
mov
dec
int3
xchg
fisttpl
lcall
addr16
dec
faddl
mov
push
mov
rclb
pop
xor
popf
adc
xchg
fmul
inc
xchg
out
pop
jg
pusha
push
jae
hlt
test
mov
dec
mov
popf
xor
pop
mov
aaa
pop
pop
dec
push
in
in
out
dec
sarl
icebp
jae
cmp
clc
jge
dec
data16
xchg
dec
push
sub
add
shll
cmp
push
cmp
sub
fnstsw
enter
sbb
lods
ljmp
in
dec
int3
push
jb
stos
lds
sub
push
cmc
scas
push
jl
cmc
and
ss
out
bnd
sbb
hlt
pusha
xchg
mov
mov
hlt
sbb
call
mov
xlat
test
loopne
aas
fnstsw
xchg
fidivs
lret
add
push
xchg
add
sti
mov
jecxz
xor
dec
gs
pop
or
imulb
daa
mull
cmp
jecxz
test
outsl
es
jp
mov
je
outsl
mov
jne
add
and
gs
cltd
fnstenv
add
inc
insb
cli
outsb
loop
jecxz
adc
adc
nop
loopne
pop
mov
xor
jae
inc
movsl
add
or
cmpl
pop
lock
fiaddl
mov
fwait
jae
pusha
imul
cmpsl
dec
icebp
addr16
xor
mov
push
inc
stos
addr16
jb
dec
mov
push
xchg
rol
sbb
jno
bound
je
scas
add
add
mov
push
icebp
cli
iret
call
adcb
inc
repnz
out
xor
lock
call
xchg
fwait
inc
lods
mov
out
inc
lahf
sbb
inc
aas
pop
push
icebp
xchg
push
dec
push
insb
mov
lods
inc
decl
fcoml
out
push
cmp
sarb
fs
out
mov
xchg
cmpsb
xchg
push
adc
ds
inc
jg
sbb
cwtd
sbb
pand
mov
iret
pop
push
xchg
push
movsl
out
popf
test
adc
sub
xor
and
lds
push
mov
mov
dec
fdivp
push
jmp
xchg
cmp
lock
push
mov
jl
ja
mov
cmpb
int
iret
xor
adc
mov
int
cltd
dec
push
subb
stc
ffree
jg
cmpsl
sbb
jno
loope
repnz
shl
pop
aas
pusha
rorl
shl
push
movsl
bound
inc
cmp
fbld
and
outsl
cltd
or
sti
les
stc
and
jge
icebp
push
push
inc
fpatan
jno
lahf
mov
push
daa
inc
inc
inc
mov
mov
insl
movsl
cmp
addr16
mov
add
cmpsl
pop
sahf
or
iret
addb
push
movsb
mov
popf
mov
add
divb
pop
lret
push
xchg
xor
cmp
xchg
sahf
cwtl
je
jns
test
fstpl
add
jne
add
dec
ret
in
fldcw
add
fwait
out
sahf
dec
xor
sub
hlt
or
mov
lods
mov
js
jae
and
xchg
gs
mov
test
or
push
xchg
cli
pop
sbb
pusha
xchg
hlt
inc
addr16
sbb
js
popf
and
mov
repnz
call
or
hlt
mov
pop
push
and
int3
push
enter
mov
lcall
jle
in
sbb
addr16
jg
imul
pushf
pop
adc
lcall
cmp
xchg
inc
push
lea
push
lahf
inc
rorb
jl
cs
gs
mov
xor
or
dec
lock
mov
leave
fstpt
xchg
int
scas
push
adc
push
push
mov
lahf
add
cmp
add
sti
mov
sub
je
push
and
sbb
jnp
bound
xchg
push
roll
outsl
lods
sbbl
add
arpl
insl
jb
sub
hlt
xchg
loop
lods
sub
jl
lcall
xor
rcr
sub
jae
xor
mov
adc
aam
xchg
mov
js
xchg
xchg
aaa
sub
dec
pop
sbb
cmp
aas
mov
call
sbbb
cmp
xchg
xchg
xor
xchg
xor
cmp
sub
mov
ret
and
insl
mov
mov
cmpsl
and
sahf
cltd
mov
inc
fdivr
mov
cmp
in
xchg
call
pop
std
enter
cmpsl
jmp
sbb
mov
jmp
js
outsl
push
cwtl
push
dec
nop
jo
sbb
dec
add
out
xchg
inc
mov
mov
int3
sub
pusha
iret
mov
mov
dec
sbb
add
jmp
pop
cmp
xor
fbld
mov
jle
xchg
vpcomub
int3
xor
add
fs
sub
sbb
mov
push
jb
fisubs
mov
cmp
sub
jmp
sbb
dec
test
add
shlb
dec
insb
mov
dec
xchg
dec
movsb
rclb
clc
icebp
mov
sub
mov
dec
cmp
jle
add
or
test
out
pop
ret
inc
push
sbb
das
adc
lahf
test
into
xchg
ds
fs
adcb
lahf
jbe
dec
ss
pop
aad
jp
mov
lret
xor
pop
fidivs
bnd
pop
shl
adc
adc
lahf
ret
cli
pop
js
jns
mov
imul
test
icebp
xor
test
mov
cwtl
jns
inc
xchg
add
sub
aam
push
leave
push
mov
into
add
inc
out
mov
or
cli
lods
pop
sub
daa
movsb
sub
fcoms
aas
mov
and
xchg
sti
fiaddl
popa
loopne
setbe
movsl
jnp
int3
and
icebp
out
or
je
xchg
sbb
xor
stc
nop
pop
jbe
xor
sbb
sbb
bound
push
mov
or
lret
test
push
mov
lods
or
dec
int
outsl
rcrl
jnp
jno
imul
add
pop
xor
fbld
orl
push
sub
mov
sahf
test
cs
cmp
sbb
dec
roll
rclb
pushf
or
int3
add
test
jmp
push
mov
shlb
jns
add
mov
cmp
testl
pop
fadd
mov
xlat
loopne
xchg
mov
mov
pop
sub
push
ret
pop
and
xor
insb
inc
mov
and
adc
inc
lods
sub
jo
addl
clts
jae
or
xor
icebp
push
loopne
xchg
sub
pusha
jle
push
mov
out
enter
dec
inc
js
push
mov
mov
repnz
addr16
cltd
ss
push
shll
xchg
test
jp
aam
ret
ss
xchg
insb
int3
fs
mov
and
jno
ret
shl
cli
cmp
das
dec
dec
out
xor
jbe
mov
das
inc
add
add
mov
in
stc
fwait
out
mov
popf
adc
and
fprem1
mov
sbb
gs
into
jne
loopne
or
rcll
mov
out
mov
mov
dec
addr16
cmp
xor
aaa
add
lds
jp
mov
fld1
sub
fsubrl
dec
and
mov
fwait
fs
sub
pusha
nop
push
fsubrl
lea
test
sub
insb
mov
mov
fsubs
xorl
mov
lret
daa
aaa
andb
xchg
fistl
in
sub
mov
imul
call
ret
popa
cmp
dec
mov
jnp
push
paddq
dec
and
addl
mov
xchg
jnp
rcrb
push
jmp
std
pushf
xchg
or
push
in
jg
insb
jmp
gs
ljmp
mov
xor
cmp
push
adc
inc
add
jmp
push
rclb
pop
mov
pop
lahf
pop
shrb
mov
xor
aam
sub
test
inc
push
mov
sub
mov
and
aam
jae
rcrb
sbb
pusha
emms
and
lds
sbb
xor
cmpsl
cmc
sub
mov
push
pop
xor
aam
add
push
push
enter
or
xor
imul
inc
mov
sbb
fwait
je
pop
test
mov
movsb
cltd
jecxz
arpl
add
and
push
dec
add
adc
loopne
imul
cmp
loopne
inc
in
or
nop
movsb
pop
push
jl
sub
loop
into
in
ror
and
mov
or
push
inc
mov
leave
jb
mov
mov
cwtl
mov
jecxz
pop
lret
outsb
push
je
adc
mov
inc
push
sbb
pop
popf
mov
jmp
add
cmp
xchg
das
xor
insl
je
sub
and
and
and
lods
scas
adcl
outsb
mov
sbb
and
in
fs
leave
mov
fdivrp
dec
dec
and
adc
ret
add
imul
clc
roll
dec
cmp
push
scas
jp
rcrl
ret
sub
add
jne
inc
mov
std
dec
cmc
sbb
cmp
pop
fbld
mov
aaa
xchg
outsb
pop
adc
adc
push
stos
xlat
pusha
mov
xchg
sarb
inc
push
lret
mov
xlat
cmp
test
subb
mov
jb
push
fdivs
imul
sahf
clc
test
jb
rcrl
and
adc
lods
add
aam
ja
out
xor
rcrl
xor
jb
jecxz
movlps
mov
jg
dec
repnz
nop
loop
out
jae
inc
int3
test
popf
lods
loope
adc
lods
into
inc
sar
cmp
sbb
nop
fmulp
push
mov
sub
or
dec
dec
jecxz
adc
dec
mov
idivl
xchg
mov
cld
ds
es
or
mov
cmpsb
jp
cmpsl
in
pop
sti
push
imul
xchg
test
jnp
jnp
dec
in
lret
dec
int3
cmp
adc
stos
pop
jmp
jnp
cli
adc
outsl
push
push
movsb
mov
sbb
lods
outsb
and
push
ljmp
psubsw
pop
cld
test
scas
aad
sub
mov
inc
pop
mov
push
icebp
cltd
ficoms
xlat
pop
xchg
test
mov
cmp
jg
out
cmp
andb
pop
aam
loop
sub
xlat
xchg
cs
int3
mov
lret
inc
add
enter
rcrl
loopne
cmp
ret
cmpb
push
popa
mov
mov
mov
xchg
mov
fistl
pop
fwait
das
push
push
xor
sbb
pop
xchg
sbb
jno
addb
scas
enter
xorb
das
push
jae
jb
push
jecxz
je
lea
outsb
aaa
insl
cld
out
cli
xchg
in
dec
or
mov
sbb
dec
jle
inc
in
sub
pop
ficompl
pop
rorl
xor
adc
jl
arpl
test
int3
sbb
pop
and
inc
mov
sub
movsb
shrb
fdivs
sub
and
aaa
rcrb
arpl
mov
mov
int
dec
dec
lahf
in
push
arpl
and
jmp
pop
mov
test
sahf
loop
xchg
out
loopne
orl
xor
adc
lods
lds
xor
mov
cmpsl
and
mov
mov
xor
iret
cmp
mov
inc
dec
sbb
inc
imul
out
adc
fnsave
pop
push
loop
add
sub
mov
arpl
fildl
inc
cli
enter
icebp
cmpsl
xchg
into
imul
inc
adc
push
cld
cmp
int3
les
fsub
sub
call
inc
sbb
mov
cmpsl
decl
test
jle
lods
lock
mov
xchg
or
xchg
inc
cli
je
xchg
pop
jge
std
adc
mov
enter
jno
jmp
mov
or
mov
mov
dec
sbb
mov
into
notb
push
repnz
xchg
xchg
clc
dec
inc
push
out
adcl
inc
jp
pop
add
lahf
scas
cmc
pop
lock
inc
mov
add
sti
leave
mov
pop
lods
leave
leave
movsl
and
ds
or
pop
pop
add
leave
push
cmpsl
mov
inc
xor
pop
mov
ja
cmp
cmp
jae
rclb
mov
adc
inc
mov
mov
xchg
lods
movsl
jecxz
mov
sbbl
cld
pop
xlat
jmp
fimuls
or
xor
test
and
jb
cli
ffreep
xor
das
adc
inc
push
cmpsb
inc
mov
bound
cmp
sbb
iret
push
pop
dec
pop
stos
shlb
cmp
xor
int3
xor
pop
pushf
pop
mov
ficomps
xor
in
jp
js
scas
gs
dec
jle
sbb
popf
or
jns
rolb
and
jne
dec
push
lods
sub
cwtl
insl
pop
sti
ljmpw
shll
aas
or
xchg
mov
cld
sub
hlt
dec
sub
stos
jmp
sub
mov
adc
lret
pop
cmp
out
lods
movsl
sbb
and
hlt
in
jns
dec
insb
pop
cld
imul
add
mov
mov
dec
mov
cltd
dec
arpl
out
dec
mov
clc
outsl
push
pop
popf
dec
push
jno
jg
cmc
loopne
xchg
shll
or
push
call
int3
pop
and
movsl
sbb
jnp
mov
jp
fcoml
mov
mov
xchg
aad
or
mov
pop
es
subl
pop
jge
adc
loopne
pop
cmpsb
fisubl
incb
rorl
in
mov
sbb
in
sti
sbb
push
sub
sub
popw
pop
mov
fs
daa
xor
and
pop
mov
jle
bound
cmp
xchg
lret
lcall
arpl
movsb
jg
into
inc
pop
test
push
xor
imul
testb
popa
popa
pop
jnp
rcrl
cwtl
or
popa
incl
jnp
dec
into
cmpl
ret
fwait
adc
sub
xchg
hlt
inc
mov
mov
cmp
dec
enter
ret
lods
jo
inc
cmp
pop
pop
adc
ljmp
mov
xchg
out
mov
fldl
gs
pop
cs
cmp
cli
sbb
cmp
sbb
mov
add
jno
ret
outsb
pop
xor
aad
mov
mov
pop
ror
mov
xchg
sub
xor
std
inc
jmp
mov
sbb
and
mov
scas
ficomps
pop
xor
ss
ljmp
mov
pusha
fwait
out
es
arpl
xchg
mov
adcb
push
test
movsb
loopne
push
mov
out
xchg
push
enter
mov
and
lcall
mov
lods
xchg
test
push
inc
sub
ljmp
xchg
xor
sub
cmp
fadds
pushf
in
fimull
sbb
into
inc
cwtl
fwait
je
fisubrl
out
jl
jmp
mov
or
call
cmc
push
adc
mov
push
bound
push
mov
sub
inc
aam
fwait
loopne
and
je
pushf
shl
jg
adc
add
hlt
sbb
repz
test
inc
mov
js
fisttpl
adc
cld
jne
in
pop
std
ljmp
mov
int
mov
aaa
sub
and
jbe
push
leave
mov
push
inc
mov
mov
icebp
scas
push
out
insb
mov
daa
push
sbb
pop
pusha
movsb
dec
or
movsl
adc
hlt
loop
mov
sbb
lcall
mov
xchg
pusha
call
mov
out
xor
cmpsb
xchg
fwait
popf
mov
inc
and
test
dec
test
pop
add
aad
flds
push
mov
jg
sti
xchg
nop
lret
cmp
xchg
push
sub
pop
jnp
outsb
dec
jne
inc
out
xchg
test
or
sarb
xor
pop
scas
mov
aas
add
mov
jae
xchg
add
jmp
orl
sub
adc
arpl
shll
jecxz
ficompl
sbb
stc
je
inc
fs
and
sbb
add
outsl
les
cmp
mov
imul
icebp
cmp
insl
loopne
fldl
xor
xorb
stos
adc
cli
pop
data16
xor
icebp
into
mov
mov
push
rclb
xchg
sahf
push
lods
imul
and
pop
adc
loope
mov
hlt
dec
lret
mov
inc
push
or
and
cli
mov
cmp
mov
int
mov
push
les
test
cmpsl
movsl
leave
jecxz
pop
pushf
loopne
push
sub
add
push
shll
mov
test
sub
or
test
std
nop
sub
in
sub
or
in
jecxz
jns
mov
jecxz
out
test
out
inc
jg
push
and
mov
gs
fwait
sahf
adc
sub
dec
leave
aad
dec
push
inc
add
sbb
lods
inc
xor
cmp
mov
int3
xchg
aad
je
cmp
push
out
jae
xchg
js
cmp
or
out
scas
inc
pop
in
gs
jp
sbb
cmp
data16
sbb
cwtl
js
rcrb
mov
inc
push
fsubrl
cmpsb
rcll
flds
ret
decl
mov
pop
add
les
mov
jae
pop
xchg
cwtl
pop
cmc
roll
test
jl
sbb
jecxz
sbb
cs
ret
push
push
push
adcb
sub
movsb
jmp
jns
inc
inc
cwtl
dec
inc
push
scas
mov
ds
nop
cmp
int
pop
cmp
es
mov
testb
dec
sub
hlt
add
daa
or
orb
pushf
mov
repnz
xor
insb
sub
add
outsl
pop
xchg
testl
inc
add
push
outsb
sbb
loope
fbstp
das
adc
sub
ljmp
sub
loop
fmull
inc
push
mov
and
mov
and
inc
insb
mov
lahf
mov
loope
push
mov
cli
lahf
sbb
mov
loop
sub
mov
xchg
daa
adc
pop
mov
outsb
inc
xor
jge
push
clc
push
mov
push
push
mov
jp
cmp
adc
xchg
lods
jnp
adc
mov
lret
dec
mov
aad
jae
mov
inc
dec
mov
out
gs
popf
pop
pushf
push
push
sub
fs
push
outsl
jl
jnp
shlb
xor
and
sbb
pop
xor
in
cmpb
and
loopne
and
xchg
ja
add
fwait
and
pop
pop
add
test
subl
aad
adc
outsb
scas
mov
pop
push
imul
fistl
xchg
fs
push
cmp
outsl
out
pop
shlb
icebp
mov
cmpsl
into
or
shll
sub
xor
sbb
mov
insb
adc
scas
shr
jle
rorb
ret
push
into
call
in
inc
push
fnsave
mov
out
rorl
push
das
pause
test
gs
in
loop
in
push
movsb
inc
daa
sbb
inc
int3
push
ffreep
inc
inc
adc
sbb
pop
enter
jns
sub
sbb
dec
and
pop
fwait
hlt
fwait
in
jge
fnstenv
sti
movsl
lock
add
movsb
xor
and
pop
jno
push
pushf
sbb
leave
mov
jmp
fsts
cmp
mov
add
and
mov
rcr
inc
mov
jle
cmpsl
jl
dec
js
data16
test
pop
shll
inc
cwtl
mov
in
stos
or
sti
nop
inc
pop
jb
fists
jmp
mov
jl
aas
mov
cmp
in
sahf
jo
add
or
xchg
and
jp
out
imul
jge
movsl
mov
ja
adc
insl
stos
negl
cmpsl
xchg
pop
cmpsb
jmp
out
mov
repnz
pop
push
insl
dec
adc
jg
gs
int3
inc
sub
lret
sub
pop
pop
fstl
pop
movsl
test
dec
add
popa
stc
or
imul
inc
stos
icebp
scas
fstl
or
push
or
sub
xlat
fdivrs
mov
sbb
dec
jmp
js
in
sti
sub
jae
outsl
sbb
mov
and
fidivs
dec
inc
add
aas
jle
add
pop
xor
clc
and
les
rolb
xchg
mov
mov
addr16
out
add
shrb
jl
ljmp
roll
inc
icebp
and
bnd
jbe
jge
repz
adcl
inc
test
lods
inc
xchg
fdiv
jo
mov
addr16
ret
cld
mov
cmpsb
pop
dec
rcr
loopne
clc
mov
in
xor
mov
movsb
test
xchg
inc
movsl
push
xchg
out
jge
test
stos
add
dec
stc
shrb
push
arpl
nop
mov
lcall
mov
mov
mov
sbbl
jo
jecxz
outsl
scas
test
pop
mov
xor
push
or
insb
scas
cmc
adc
mov
pop
jnp
mov
das
mov
xor
pop
dec
mov
mov
xchg
and
shll
pop
jge
hlt
je
addr16
pushl
ficoms
inc
fsubl
mov
adc
pop
push
scas
pop
pop
xchg
lahf
adc
lds
into
movsb
push
hlt
ja
or
jp
in
shl
repz
loop
inc
pop
xchg
out
and
lret
adc
jmp
jmp
sbb
rolb
lods
pushf
dec
std
iret
mov
adc
pop
icebp
mov
rep
inc
in
test
or
das
mov
aam
xor
insl
sbb
outsb
lock
jnp
push
mov
sbb
push
lret
xchg
push
outsl
inc
dec
test
mov
inc
push
loopne
xchg
jno
or
push
cltd
pop
mov
mov
scas
ja
inc
pop
sbb
jne
dec
xor
push
or
mov
subb
inc
mov
hlt
repnz
xor
js
outsb
push
sub
cld
lock
mov
or
out
stos
sub
mov
and
data16
cmp
out
inc
pop
stos
xchg
add
mov
cmp
sbb
push
ljmp
sbb
dec
dec
add
cltd
mov
push
xchg
inc
addl
add
imul
movsb
fidivrl
fimull
mov
pop
fdivrl
sbb
nop
xchg
loopne
out
lahf
out
or
mov
js
lret
sar
insl
mov
xor
jnp
and
aam
dec
icebp
es
pop
das
test
mov
and
shr
cli
shlb
push
xchg
popf
enter
lret
out
mov
ss
das
fisubrs
lods
mov
cltd
or
inc
dec
add
ficompl
or
adc
and
mov
pop
xor
es
insb
xchg
inc
push
mov
addr16
icebp
scas
fnstsw
orb
push
test
mov
fwait
enter
mov
test
xchg
fs
jmp
xor
fsubl
test
stc
xchg
sbb
pop
xlat
jl
add
lret
stc
pop
sbb
cmpsb
xchg
lcall
into
ret
pop
xor
movsb
shll
inc
enter
lock
mov
sub
xlat
shl
push
sar
pop
fnstcw
sub
push
adc
pop
aad
lods
mov
fcoms
leave
je
jmp
outsl
out
imul
cmp
push
stc
dec
pop
imul
es
sbb
enter
pop
cmpsl
in
lds
rcll
shlb
jb
lcall
mov
adcb
inc
jle
fisttpl
cmp
xchg
scas
fstpl
imul
cs
les
ds
bound
mov
xchg
jae
mov
lods
ds
xor
rorl
mov
fmuls
and
mov
or
dec
sub
sbb
cltd
mov
repnz
sub
or
in
divl
cwtl
test
xor
jl
aam
sub
dec
xchg
mov
addr16
jo
mull
cld
clc
imul
xor
sbbb
shlb
daa
or
lds
movsb
mov
pop
in
bound
push
sbb
push
push
lcall
into
jl
dec
mov
sub
popa
fs
push
sahf
popf
dec
sbb
xchg
mov
mov
popa
lahf
outsb
dec
cmp
test
jb
cmp
mov
xor
popf
add
pusha
adc
dec
stos
iret
lock
lock
fmull
pop
mov
add
mov
cmp
jp
mov
or
adc
enter
int
jne
es
lcall
pushf
dec
je
push
mov
or
add
mov
xchg
test
ss
cmpsb
in
xchg
xchg
mov
jg
pop
mov
pop
rorl
jge
pop
xor
cmp
lods
mov
pop
mov
xor
bswap
push
cmp
in
xchg
xor
sti
xor
xchg
int
mov
dec
or
arpl
inc
pusha
mov
iret
xor
scas
xor
fldl
mov
xor
test
push
rol
add
push
mov
fsubl
or
out
adc
dec
xchg
xchg
sbb
mov
lds
and
vmread
fistpll
cmc
and
dec
pop
pushf
hlt
repnz
adc
popf
pop
sbb
out
or
xor
in
rsm
scas
dec
pushf
mov
or
mov
mov
shrb
push
add
mov
or
jae
add
add
pusha
inc
lea
push
push
fiadds
push
dec
mov
mov
pop
faddl
xor
mov
mov
mov
mov
xchg
cmp
inc
xchg
sti
mov
push
cld
and
mov
mov
sbb
sub
cmp
cmp
xor
pop
fdivl
test
testb
xchg
fwait
popf
push
lret
btr
rolb
insb
or
repnz
xchg
dec
pop
jecxz
adc
ret
inc
outsl
repz
xchg
jnp
arpl
popf
inc
rol
push
arpl
xor
push
lds
push
jnp
fs
dec
fistpll
nop
mov
inc
fidivrl
adc
in
add
pushf
sbb
pop
jo
and
pop
mov
jno
pop
or
arpl
not
out
pop
jae
into
negl
ljmp
in
aas
testl
sbb
cltd
push
push
loope
lea
mov
mov
jo
dec
subl
jecxz
cmp
loope
cmp
out
dec
mov
mov
movsb
cmp
insb
mov
ljmp
out
and
fdivrl
jmp
pop
jnp
jnp
sbb
loop
jecxz
push
cmp
lds
dec
sbb
lea
pusha
jmp
dec
loopne
ffree
mov
fnsave
push
fst
stc
fiaddl
xor
mov
outsl
push
adc
mov
mov
addr16
insb
mov
test
jae
xchg
cmp
mov
dec
loop
fwait
push
cld
xor
lcall
je
mov
clc
int3
sbb
ds
aam
sti
shlb
int
cvtps2pd
sbbl
cmp
scas
or
pusha
movsb
cltd
xor
jns
adc
sub
and
daa
xchg
jl
mov
pop
cmp
inc
nop
movsb
jb
and
mov
inc
xor
or
add
jnp
int3
ljmp
ret
and
sbb
cs
mov
call
in
sub
jbe
cmp
scas
mov
enter
mov
popf
inc
aam
mov
dec
ret
call
inc
js
mov
lahf
push
lea
jns
cmp
xorb
push
dec
push
sarl
adc
mov
xor
clc
push
imul
push
push
subb
mov
cs
into
iret
xchg
movsl
push
inc
pop
mov
and
sub
xor
loop
pusha
push
xchg
fsubl
or
mov
stc
lret
dec
sbb
out
inc
mov
lock
or
ret
andb
clc
iret
int
pop
ds
mov
sti
or
push
inc
mov
and
stos
mov
pop
xor
mov
sub
test
push
pop
sbb
pop
jmp
jl
jl
test
cltd
sbb
and
popf
insl
mov
mov
jns
lea
lods
jne
out
bound
mov
stos
icebp
arpl
cmpb
arpl
testb
mov
push
insb
imul
int
cmp
pop
mov
and
xor
call
push
shl
ret
shll
xchg
mov
test
lret
ret
sbb
lcall
stos
stos
or
mov
lcall
icebp
ret
push
enter
adc
fdivrs
mov
or
sub
mov
gs
add
mov
xchg
xchg
or
cmc
cli
pop
push
inc
lods
dec
mov
incl
out
in
sbb
inc
enter
cs
sub
pop
fisttpll
dec
and
xchg
mov
and
shrb
int3
imul
push
push
xlat
jo
mov
test
pop
arpl
inc
jae
mov
pop
or
add
sbb
push
lcall
mov
dec
cmp
push
cmpsb
imull
push
inc
cmc
test
pop
inc
and
push
and
and
sub
test
fidivl
mov
sub
jmp
lds
cmp
xor
dec
and
cli
pop
scas
sbb
jnp
mov
xchg
ljmp
data16
pop
mov
pop
mov
insb
scas
mov
mov
sahf
in
insb
push
mov
movsb
mov
pop
jp
jecxz
rclb
into
imul
adcb
dec
xor
sub
rcll
mov
or
or
cmc
inc
mov
in
mov
cmp
andb
lret
and
mov
data16
call
jle
xor
test
pop
rcll
push
dec
cmp
fdiv
mov
fsubs
push
out
xchg
outsb
mov
xor
pop
test
cmp
jnp
test
xlat
xorl
dec
mov
movsl
es
fwait
fwait
lds
cmp
cmp
lea
push
pop
mov
or
fcoml
dec
or
mov
jns
push
pop
push
movsb
clc
je
xchg
dec
inc
scas
push
out
aad
push
mov
xor
push
push
xchg
testb
and
adc
das
cmp
shll
test
sahf
and
andb
inc
adc
fdivrs
jo
test
cwtl
imul
jmp
notl
pushf
adc
in
inc
xchg
js
clc
and
and
fsubrp
push
shrl
sahf
flds
inc
leave
dec
in
lahf
add
in
mov
jp
cmp
pop
sub
or
mov
inc
movsb
aam
jo
add
pop
loopne
push
ds
out
lods
leave
repz
push
sti
xlat
mov
lret
dec
in
addb
lahf
sub
dec
push
dec
and
out
mov
jl
gs
xchg
cmp
pop
gs
loop
mov
jp
stos
cmpsb
dec
sbb
mov
repnz
push
dec
pop
add
pop
mov
push
pop
push
arpl
je
push
mov
popa
jg
adc
fistl
loope
pop
cltd
dec
cmp
jne
pusha
inc
popa
rclb
je
lods
data16
iret
scas
inc
je
xchg
jge
js
xchg
sub
xor
cmp
dec
mov
daa
and
cmp
scas
ret
lods
aad
sbb
sub
test
lds
popf
xor
repz
bound
xorb
cmp
jbe
pop
push
hlt
adc
sahf
or
cmpsl
inc
cmpsl
push
int
stc
add
subb
xchg
in
lea
cli
mov
sbb
push
nop
or
sbb
jne
inc
jle
adc
movsb
push
xorb
ret
fidivl
adc
int3
or
push
fcmovne
cmpsl
cmp
xchg
push
push
add
cmpsb
ljmp
inc
dec
xor
negl
fisubrl
test
stos
lret
int
pop
inc
push
jns
cmpsl
inc
lods
mov
shll
jae
add
pop
mulb
inc
rcl
push
xor
add
dec
imul
mov
adc
in
inc
xlat
stos
dec
fisttpll
das
pop
lods
push
iret
arpl
adc
push
arpl
inc
lods
test
int3
sub
scas
pop
cli
add
aad
test
fadd
ds
insb
sbb
adc
movsb
je
jno
or
dec
cli
push
sub
fiaddl
orb
mov
sahf
sub
mov
test
inc
stos
jbe
lea
push
inc
mov
pop
mov
inc
mov
push
sbb
and
sbb
xchg
xchg
stos
insl
adc
xchg
ljmp
inc
adc
jbe
inc
insb
movsl
clc
cmpsb
incl
push
fstpt
adc
addl
cmp
fnstcw
int3
jno
pop
mov
lea
inc
and
xor
jmp
push
gs
mov
mov
icebp
inc
inc
push
loop
stos
test
addr16
inc
xlat
lret
aam
loop
mov
mov
dec
flds
xchg
cmp
xchg
cmp
xlat
cmp
mov
insb
jge
popf
lds
fimull
xchg
xor
js
cmpsl
sbb
jns
push
sub
inc
sbb
addr16
sbb
outsl
sub
mov
outsb
fistps
in
ficompl
dec
inc
mov
test
es
mov
in
or
push
push
push
mov
cmp
stos
cmp
inc
sub
std
xlat
insb
xchg
push
insl
xor
mov
add
aaa
dec
sub
inc
cltd
and
addr16
outsb
cmp
push
xchg
add
xchg
icebp
cwtl
mov
and
pop
adc
lock
std
stc
xlat
jmp
js
xor
std
pop
inc
and
sbb
sub
or
jb
push
popf
lods
cld
cmp
lds
sarb
dec
iret
sbb
sub
in
hlt
dec
les
leave
dec
mov
jecxz
inc
pop
sahf
dec
adcb
xor
je
inc
mov
jno
lods
push
xchg
in
sub
or
mov
jo
stos
sbb
clc
aas
pop
push
pop
mov
arpl
cli
daa
cmc
xorl
push
pushl
loop
mov
mov
fdivrs
and
xor
xor
test
sub
sahf
push
leave
jl
adc
lock
data16
lock
imul
dec
out
stos
jmp
pop
rclb
dec
mov
push
jbe
push
es
rolb
xchg
aaa
mov
push
imul
cld
mov
push
notb
movsl
xchg
test
in
sbb
pop
aas
or
loop
mov
xor
aam
sub
mov
mov
movsb
data16
pop
pop
push
mov
and
mov
iret
and
inc
loopne
mov
cmp
cld
mov
loopne
stos
add
enter
ja
jb
jb
push
daa
add
push
lea
mov
and
or
das
sbb
test
push
jbe
xchg
stos
xchg
add
mov
das
out
sbb
push
xchg
pop
mov
call
int3
pop
mov
and
or
inc
xlat
dec
cmp
rorb
push
mov
xchg
cltd
jge
das
mov
mov
cmc
fisttps
popa
insl
scas
ja
aaa
adc
scas
mov
sub
dec
dec
push
fdivrs
aas
sbb
cld
subb
aaa
je
adc
xor
or
mov
icebp
je
ret
add
mov
mov
jns
fs
jno
mov
sbb
add
addr16
and
adc
popl
cmp
es
cmp
out
and
pop
ret
shrb
adc
cmp
pushf
dec
inc
inc
mov
loope
test
dec
outsb
popa
mov
iret
dec
outsb
mov
mov
aaa
lret
mov
ds
inc
mov
nop
sbb
in
out
push
daa
gs
pop
or
enter
addb
orb
lea
dec
negl
aas
dec
and
add
hlt
pop
int
sub
xchg
add
pcmpgtw
pop
sbb
test
jne
add
ficoms
dec
mov
mov
das
arpl
jge
sub
pop
jae
pop
bound
sub
jl
adc
test
sahf
xchg
outsb
outsl
sub
out
dec
mov
add
call
lcall
jp
adc
adc
scas
ret
dec
out
inc
adc
or
adc
loope
in
test
jne
xor
jb
pop
mov
mov
sub
adc
and
pop
cmpsb
push
divb
int3
notl
jo
repnz
sbb
sub
inc
xchg
xorl
jl
imulb
ret
enter
cmp
jge
sub
inc
cmp
sub
sub
jecxz
stc
jo
push
movsb
adc
arpl
mov
cmpsl
lods
repz
pop
and
mov
std
mov
out
add
pop
lahf
into
out
mov
inc
sbb
pop
xchg
xchg
lods
jo
fidivrs
xchg
lock
dec
push
and
push
cmpl
mov
imul
jns
jno
inc
je
dec
repz
stos
insb
lock
popf
cmp
xor
nop
enter
and
in
dec
mov
pop
call
loop
mov
cmpsl
lret
xchg
mov
popa
adc
js
iret
sti
shlb
xchg
mov
stos
popa
cs
out
push
sub
aam
cs
loope
jnp
pop
and
mov
mov
mov
dec
or
fidivl
outsl
add
push
ffree
mov
pop
fisubrs
lods
fiadds
repz
mov
out
insw
adc
test
cs
push
and
inc
daa
and
daa
inc
in
ficompl
and
xor
adc
xchg
mov
scas
int
fstpl
xor
or
sahf
outsb
leave
pushf
loop
pop
cmc
rclb
xlat
jns
inc
pusha
mov
rcrl
pushf
pop
clc
fildll
xchg
repnz
lods
adc
jge
out
push
adc
cmp
pop
sub
cs
hlt
dec
xor
push
rorb
nop
jo
xchg
test
jns
lcall
shlb
adc
mov
push
je
adc
pop
enter
push
inc
xlat
jmp
dec
sbb
jge
push
cld
lcall
out
fadds
xchg
pop
dec
cli
mov
or
add
add
popa
bound
cmpsl
scas
dec
in
ja
cs
cltd
pop
subl
popf
sbb
loop
inc
mov
jb
cltd
lret
in
in
sbb
mov
mov
out
je
call
cmpsb
cmp
imul
mov
fisttpll
test
pop
cmp
stc
inc
inc
mov
pop
test
jbe
cmc
aas
sub
pop
in
and
inc
xchg
vpunpcklbw
xchg
lret
or
xchg
fcoms
scas
pop
adc
or
xor
daa
sub
test
mov
mov
push
xchg
push
push
cltd
popf
jmp
loop
loop
push
jge
rorl
pop
pusha
lock
dec
xchg
sbb
push
ss
sub
mov
testl
xor
or
xchg
js
jmp
xchg
scas
adc
add
lods
xchg
xor
arpl
mov
mov
pop
es
sub
fdivp
jge
fst
icebp
inc
mov
fwait
fwait
push
mov
hlt
ret
cmpsl
cmp
cmp
pop
inc
sahf
pop
cmp
addr16
arpl
out
sbb
mov
xchg
mov
aam
jns
adc
clc
xchg
push
mov
or
stos
xlat
jecxz
cmp
shld
pop
and
and
stos
fnstsw
in
out
jmp
adc
pop
into
jecxz
aas
popf
lods
and
test
movsb
cmp
nop
outsl
js
or
xchg
add
push
popf
pop
addl
pop
cmc
test
xchg
cmpsb
push
jo
scas
pop
test
and
push
dec
jns
icebp
pop
pop
push
cmpb
cs
daa
lcall
ret
mov
repnz
lock
xor
mov
js
lahf
icebp
sbb
shl
xorl
rolb
push
fcmovne
lock
jnp
cmpsb
push
pop
fwait
mov
mov
inc
in
and
add
add
pop
jmp
adc
dec
pop
call
mov
shufps
jmp
sub
call
mov
leave
dec
fildll
popa
je
mov
push
test
cli
lock
xchg
cmp
sbb
sbb
divl
dec
fbld
add
jns
mov
dec
ss
jnp
push
xchg
jmp
mov
int
stos
mov
add
inc
movsb
in
cs
or
jle
mov
or
dec
adc
mov
cld
pop
jge
leave
inc
inc
mov
test
or
aam
sahf
mov
push
mov
mov
jb
cltd
push
out
loop
movsl
jbe
in
or
xor
or
mov
lods
aam
shll
scas
push
aam
xchg
adc
das
aam
or
je
and
xchg
lret
xchg
mov
xchg
out
loope
jne
sub
pop
jecxz
stos
xchg
stos
movsb
dec
pop
push
jbe
cli
lock
pop
mov
ja
inc
outsl
xchg
xor
jg
adc
add
fcomip
or
xchg
lock
sti
add
hlt
mov
xor
test
or
jg
lock
leave
loopne
ret
cltd
in
scas
loop
dec
dec
adc
xor
mov
out
scas
mov
cli
mov
les
clc
loop
jno
xlat
adc
jle
nop
mov
inc
cmp
test
gs
cmc
in
adc
pop
outsl
cli
lcall
inc
data16
jge
syscall
inc
adc
push
mov
push
jle
push
testl
cmc
mov
shll
inc
push
or
lds
in
mov
ss
scas
lods
mov
cli
mov
fwait
add
push
pop
xchg
les
mov
aad
dec
sbb
mov
cltd
mov
pushf
mov
cmp
jmp
jae
orl
in
and
repnz
out
jbe
shl
push
sub
shll
imul
scas
jne
jg
sarl
stc
pop
and
adc
cltd
cmp
loopne
mov
outsl
xchg
loop
push
je
inc
push
push
imul
cmc
sub
loopne
mov
xchg
in
sub
jbe,pt
lcall
xchg
mov
push
xchg
fadds
rorl
cwtl
add
nop
loop
test
mov
imul
rcll
cmpsw
inc
dec
sbb
cmc
mov
fdivrs
scas
movsl
lcall
adc
jno
sbb
mov
jo
mov
rolb
dec
fsubl
sub
mov
popa
add
fidivrs
xlat
dec
test
lock
xchg
pop
subl
loope
and
stc
ror
jge
leave
fs
or
movb
mov
adc
lret
cmpsb
shll
jae
inc
sbb
sahf
insb
mov
jns
or
or
push
pop
psrld
add
add
leave
pop
decl
sbb
add
aad
xchg
jle
jae
cmp
sub
addr16
inc
pop
or
in
cmp
imul
add
push
xor
pop
xchg
mov
dec
and
and
cmp
std
jmp
fadds
arpl
jns
or
repz
adc
lcall
mov
cmp
xchg
mov
in
xchg
or
dec
xor
fdivrs
popa
mov
adc
out
cli
in
and
and
inc
sub
ss
int3
dec
cwtl
cwtl
sahf
pop
fnstenv
loope
mov
push
ret
stc
pop
sbb
mov
inc
movsl
inc
add
lea
test
stos
out
sub
mov
mov
rcrl
mov
gs
mov
dec
cltd
out
in
push
in
ret
loope
jge
pop
lock
daa
add
std
jge
jle
mov
fdivl
adc
ja
xchg
pop
adc
sub
sub
mov
pushf
inc
sub
addb
fidivrs
cmp
lods
inc
jmp
loop
inc
ret
test
ficoml
lcall
addr16
gs
dec
nop
bound
pop
repnz
or
mov
or
mov
fnstenv
sahf
pop
inc
push
add
sbb
mov
sub
jno
and
or
je
sub
ret
xor
push
in
push
testb
std
or
mov
mov
gs
adc
inc
sub
cld
mov
lea
jmp
js
push
lcall
push
pop
sbb
ss
daa
fstps
pop
fwait
scas
sub
dec
daa
add
in
cmp
lret
push
mov
push
jne
sub
dec
cmp
je
inc
adc
xchg
inc
lea
lcall
cmp
aam
insl
in
inc
lcall
fstpl
adc
mov
sbb
sub
lahf
inc
and
lcall
insl
shl
fcoms
jle
adc
insl
dec
fcmovnb
test
add
shr
mov
int
test
adc
mov
lret
fwait
mov
aam
psllw
xor
mov
leave
adc
icebp
pushl
sub
movlhps
pop
push
sub
xchg
add
fst
or
leave
nop
ljmp
xor
add
push
outsl
mov
jbe
nop
add
inc
lret
push
stc
push
adc
and
sub
clc
sbb
lea
pop
out
shr
cltd
popf
xchg
int
jne
addr16
clc
inc
stc
fs
xor
mov
jo
sbb
xor
lock
leave
test
sbb
andb
push
into
jae
cmp
adc
cld
jb
xchg
pop
in
and
std
or
adc
call
popf
mov
subl
jno
cld
sbb
lods
arpl
loop
andl
pushf
inc
pop
dec
movsl
loop
mov
jne
sbb
pop
push
jecxz
incl
lock
int3
fidivrl
lret
sbb
clc
stc
roll
imul
shll
clc
cmpsl
outsb
movsb
ss
mov
xchg
pop
nop
int
xor
mov
mov
jnp
movsl
aaa
add
stos
mov
mov
gs
je
mov
das
iret
sub
jne
shr
outsb
push
mov
xor
pop
fisubl
jmp
mov
in
mov
mov
test
push
or
in
mov
test
and
je
lods
cld
cwtl
fisttps
adc
movsl
fldl
pop
popa
sbb
ret
xchg
jns
lea
and
cli
outsl
outsb
pop
sub
mov
mov
sbb
cmp
mov
mov
sub
movsb
xor
aaa
popa
pop
inc
add
clc
in
push
xor
out
xlat
mov
or
shrl
mov
xchg
push
divl
data16
cmp
sahf
pop
mov
in
adc
stc
mov
jle
mov
jecxz
rcll
mov
jl
dec
push
sarl
std
repz
push
cmp
jbe
pushf
aam
xor
adc
mov
sub
push
cmp
mov
movsl
dec
lahf
loopne
cmp
mov
cmpb
xlat
and
mov
sub
and
movsl
and
jecxz
mov
push
inc
push
out
lods
pop
aad
jge
lret
iret
cmp
subl
xor
pop
pop
and
aad
cmpsb
outsb
push
cld
imul
ss
jp
adc
push
mov
mov
cs
push
dec
sub
rcl
dec
gs
sbb
sub
pop
cltd
xor
push
mov
cmpsb
scas
add
sbb
push
in
xchg
add
push
lock
rolb
xchg
push
cmpl
pop
mov
cmp
mov
and
pop
sbb
ljmp
mov
mov
jge
pop
cmp
and
outsb
in
mov
add
push
or
adc
pop
sub
add
adc
inc
jbe
pop
ret
int
sbb
fsts
popa
xchg
push
ret
sbb
mov
and
jbe
pusha
inc
pop
fnsave
mov
or
dec
push
ds
inc
adc
fs
mov
or
xchg
xchg
mov
or
mov
push
cs
inc
imul
cltd
stos
jae,pn
jmp
addr16
mov
fists
stc
push
sbb
bound
xchg
dec
add
cmp
pop
mov
enter
add
adc
cmp
sbb
shll
sbb
dec
repz
fnstenv
xchg
mov
orl
adc
jnp
and
push
jae
lock
push
xor
sub
jl
mov
lret
cmpsl
lahf
xchg
shrb
and
pop
lock
mov
lahf
xchg
mov
mov
cmp
cmp
xchg
lahf
mov
push
movl
lret
and
adc
add
imul
inc
stc
loop
pop
pop
xor
and
mov
shrb
ja
cmp
xchg
fldenv
mov
jns
lods
mov
sbb
jmp
lods
stos
push
aam
push
sbb
loopne
loopne
ds
push
dec
and
arpl
cmp
mov
mov
mov
xchg
loopne
sbb
stc
imul
add
mov
daa
mov
sbb
pop
sbb
mov
addr16
xor
loope
pop
flds
enter
or
out
push
xor
mov
inc
andb
sub
ds
ficoms
js
jl
sbb
leave
jge
in
cmp
xchg
and
js
mov
mov
lcall
pop
fldenv
pop
mov
lret
xor
out
fwait
jbe
mov
les
xchg
push
dec
push
add
fs
xchg
cmpsl
popa
push
jmp
push
lahf
and
stos
mov
out
xchg
mov
rorl
mov
shlb
insl
push
sbb
dec
mov
cmp
mov
cmp
or
mov
adc
mov
mov
push
fs
fimull
xor
add
daa
test
pop
push
jmp
mov
jge
jb
negb
push
bound
call
lods
ss
mov
xchg
or
fldl
iret
jb
aaa
cmp
les
imull
out
cmpsb
adc
mov
icebp
lods
addb
ja
stos
mov
movsb
inc
gs
aad
les
cli
je
ret
loop
inc
and
lods
cld
sub
or
xor
cmpsl
push
sarb
add
sub
jbe
sar
scas
push
jb
int3
push
jle
pop
enter
dec
scas
cmp
in
sbb
gs
jo
imul
pop
or
xor
mov
test
dec
js
addl
mov
dec
clc
jno
leave
cmpb
lods
loopne
lods
scas
jp
xchg
pop
pop
js
pop
mov
ffreep
xchg
add
push
jo
mov
sahf
mov
cmp
gs
mov
dec
fwait
stos
fstp
movsl
lret
xchg
test
cmp
andb
int3
inc
in
pop
mov
push
mov
aaa
lods
inc
pop
ja
push
dec
in
pusha
gs
jle
or
push
pop
addr16
sub
dec
and
mov
rcrb
xorb
out
out
out
push
cmp
sbb
test
imul
push
cmpsl
sub
dec
cltd
scas
mov
push
clc
or
push
sahf
adc
xor
leave
sub
sbb
xchg
jge
lods
insl
dec
mov
inc
pop
sbb
and
add
arpl
mov
or
out
pop
or
fiaddl
insb
pop
inc
dec
and
sbb
mov
pop
mov
lods
cld
dec
imul
jns
in
push
rolb
ss
int3
mov
push
insl
inc
add
cld
leave
incl
mov
add
negl
fidivl
inc
mov
xchg
cmp
shlb
or
fadds
jbe
enter
popf
int
mov
loopne
cmp
hlt
or
arpl
xor
inc
sbb
ror
cmp
mov
mov
rclb
inc
cmp
mov
ret
push
aad
inc
pushf
pop
int3
jle
fnsave
scas
stc
test
add
push
dec
mov
shr
mov
xlat
out
in
popf
cmp
rclb
mov
das
sbb
xchg
clc
cmpsb
or
jecxz
cmpxchg
xor
pushw
push
jg
jb
xorb
sti
dec
test
xor
stos
fidivrs
lods
mull
push
aaa
outsb
pushf
movsb
scas
jae
subl
push
and
ss
xchg
push
enter
push
sbb
push
popa
cmpb
inc
push
mov
lods
add
adc
mov
shl
pop
push
lcall
inc
adc
mov
xchg
xchg
lods
add
or
mov
xchg
push
fldt
fstpl
in
jno
adc
mov
movsl
add
out
pop
imul
lahf
mov
fcomp
push
cmp
xchg
cmp
dec
jge
push
out
pusha
arpl
cli
mov
ret
fucomp
movb
repnz
loope
mov
xor
int
lret
iret
scas
jb
mov
lahf
lds
jno
pusha
add
in
dec
mov
dec
push
int
pop
in
jge
push
ss
push
sbb
or
sub
adc
pop
inc
test
hlt
lods
and
out
cltd
stos
lods
lods
sahf
bound
or
mov
sub
xor
jp
aad
pcmpgtw
push
adc
jns
sti
call
jle
lods
cmp
repnz
cmpsb
fs
std
lret
das
into
jl
insl
int
hlt
lock
jmp
loop
popf
or
xchg
mov
add
les
mov
mov
dec
inc
or
lock
or
gs
xchg
bound
lods
out
cmp
jp
sub
addr16
stc
imul
sbb
push
es
mov
push
dec
xchg
bnd
iret
mov
mov
sub
push
lods
cwtl
push
sahf
addr16
faddp
test
fwait
xchg
pop
lret
and
std
push
push
mov
imul
rcll
popa
in
leave
shrl
inc
mov
popf
mov
xor
call
je
jae
and
jbe
mov
aad
call
icebp
jbe
and
hlt
push
push
fmuls
mov
loope
fwait
mov
xorb
mov
dec
cltd
cmp
push
inc
jle
sub
adc
rolb
popa
outsb
cmp
imul
testb
add
packssdw
mov
cltd
fldcw
mov
add
test
loope
iret
in
fistl
push
add
xchg
in
ljmp
sbb
lods
xchg
adc
ja
and
jno
data16
test
cli
jge
in
or
mov
add
jge
inc
fdivrl
xchg
lea
and
pop
sahf
or
xchg
ljmp
cs
loop
dec
adc
pop
lret
and
repz
mov
mov
gs
adc
xor
lret
ss
stc
fwait
js
mov
cmp
outsl
icebp
repnz
mov
lods
cltd
and
mov
cmp
mov
dec
jg
add
addr16
fucomip
ret
fs
fsts
mov
shlb
jb
test
adc
out
sbb
jmp
mov
sbb
xor
loope
and
pushf
adc
adc
aad
adc
js,pt
push
test
bound
call
inc
jne
ror
into
lret
mov
cbtw
nop
lret
test
pop
push
in
push
xchg
jmp
mov
shl
pop
mov
inc
jno
icebp
lods
add
aad
ret
rclb
cld
aaa
jp
sub
ret
stos
neg
jl
mov
insb
sub
cli
lods
shll
cmp
mov
pop
jmp
lock
and
add
dec
iret
hlt
add
std
sbb
je
dec
cld
jns
add
pop
in
sbb
push
cmp
sbb
pop
pop
in
mov
dec
addr16
mov
mov
cmp
mov
dec
jmp
lods
lret
mov
push
inc
pushf
test
aam
mov
icebp
push
stos
or
loopne
outsb
inc
and
out
jp
adc
stos
es
push
lods
jge
sub
insl
lret
cmp
repnz
mov
push
sahf
and
js
inc
loop
cmpsb
mov
in
jmp
sbb
push
jecxz
and
push
inc
fldenv
shrb
clc
push
mov
cli
or
mov
lcall
sbb
cmp
jns
ficoml
mov
movsb
add
jae
mov
aad
sub
inc
into
push
adc
and
push
ret
jb
mov
pop
xchg
adc
xor
bound
test
jae
int3
and
js
cmp
mov
lret
sbb
cltd
push
sbb
insb
loope
sbb
push
jbe
cmp
or
das
add
cli
scas
pop
addr16
test
pop
jo
sub
jae
push
jne
shlb
fnstcw
push
jge
jb
inc
out
ret
sub
mov
jl
lods
aam
out
fs
push
sbb
insl
mov
cmpl
add
arpl
push
in
mov
lds
mulb
movsl
enter
sub
outsl
stos
jg
ja
sub
and
inc
jno
mov
push
jmp
in
ja
push
ss
xchg
xor
in
or
int3
mov
lahf
push
pop
xchg
lock
fstpt
cmp
in
xor
jo
push
iret
jmp
xlat
pop
or
mov
cmp
jns
pushf
xchg
mov
sub
xor
cmpsb
xor
andb
mov
mov
or
outsl
mov
stos
repnz
test
adc
pop
dec
jb
insb
icebp
in
adc
add
mov
int3
add
jns
jecxz
ret
popa
loopne
push
push
test
dec
jae
outsl
ss
cmpsb
fdivp
loopne
sub
outsl
mov
shll
sub
repz
jb
pop
aaa
and
lahf
cmp
and
pop
pop
dec
mov
sub
iret
dec
jo
jmp
push
shrb
xchg
lahf
add
inc
test
or
mov
fisttpl
push
sbb
insb
sti
int
mov
cmp
mov
xor
dec
push
dec
popa
and
adc
sbb
scas
and
stc
mov
icebp
mov
arpl
ja
cmpsl
daa
lret
fs
mov
aaa
cli
stos
shlb
pop
sbb
cli
imul
push
pusha
xlat
or
out
enter
or
fnstenv
lret
mov
mov
mov
and
fs
pusha
ds
sub
test
jnp
or
push
loopne
stc
xor
pop
sahf
cmp
xchg
dec
cli
out
nop
inc
mov
shrl
ret
sbb
push
jmp
pop
mov
lock
add
fnstcw
adc
pop
out
into
hlt
cmp
iret
sub
or
loope
mov
push
adcb
adc
imul
mov
fs
push
scas
inc
cmp
fwait
xor
push
add
jb
lret
iret
or
rcrb
mov
or
xchg
movb
cmp
imul
jle
push
rcll
mov
mov
push
fnsave
xchg
pop
fstpt
xlat
jle
sub
test
push
cld
sub
cmp
sub
dec
adc
sbbb
icebp
pop
loope
mov
inc
daa
bound
lock
mov
dec
jne
inc
je
pushf
movsl
test
add
push
inc
sbb
clc
mov
jg
jno
scas
pop
imul
lret
and
inc
fsts
nop
xchg
adc
inc
fsts
je
into
mov
cwtl
enter
push
mov
xor
pop
pop
call
mov
add
insb
jns
jg
out
sbb
jno
ja
xchg
cltd
fnsave
outsl
cmc
data16
or
jb
std
std
ds
xchg
out
xchg
mov
or
and
cmp
xchg
mov
or
in
negl
ss
repnz
aam
in
sub
pop
nop
dec
popa
inc
adc
loope
mov
shlb
push
stos
pushf
adc
stos
jl
pusha
dec
jne
in
jmp
mov
push
push
push
popf
mov
fmull
mov
push
mov
mov
sets
imulb
lahf
push
lahf
aas
xor
nop
cmp
xchg
ret
xor
leave
xor
push
sbb
pop
loop,pt
xchg
into
inc
lcall
adc
mov
jbe
mov
mov
jecxz
idivb
sbb
xor
addr16
insl
test
push
icebp
dec
inc
or
movsb
or
add
cmp
js
mov
jecxz
outsl
fcmovb
push
mov
lcall
pop
dec
dec
mov
pop
sub
jle
and
lds
lods
sbb
lcall
mov
js
adc
jno
pop
sbb
dec
push
push
dec
fcmovu
xor
imull
xchg
or
cmpsb
sbb
inc
jo
mov
push
cmp
loop
je
lods
rorb
jecxz
jp
jae
inc
mov
test
cli
fldt
mov
dec
xchg
subl
push
popf
push
or
test
and
sti
fistl
ret
push
dec
or
cmp
mov
cmp
lock
sbb
adc
add
pop
cli
sbb
insb
daa
add
lret
jp
test
push
jg
lds
adc
lds
jmp
inc
jbe
rcr
iret
adcl
sbb
jbe
ss
jle
lret
fwait
into
call
ret
je,pn
loopne
pop
enter
ret
pop
or
or
andb
dec
or
cmp
sub
jb
popa
es
sub
shlb
cmovl
fwait
daa
and
mov
sub
sbb
push
popf
or
mov
aaa
cmpsb
pop
cmp
mov
in
jle
pop
mov
push
lcall
cmp
mov
jg
add
cmp
cwtl
lahf
stos
or
rolb
loop
sbb
xchg
push
inc
dec
inc
jbe
xchg
inc
fstpl
test
popa
clc
outsl
fldl
cmpsl
cmp
out
add
mov
testl
dec
loope
xchg
divb
mov
push
scas
test
out
orl
or
push
xor
js
sbb
cwtl
mov
mov
daa
mulb
aas
test
iret
mov
pop
mov
dec
and
sub
mov
stos
dec
xchg
cmc
xor
inc
xlat
fwait
lods
mov
cmp
cmpsb
cmp
push
ss
xchg
jb
xlat
sub
dec
ret
xlat
xor
jo
adc
ret
aad
cmp
cli
or
sub
loopw
cmp
aad
xchg
or
bound
jecxz
aaa
pop
or
scas
scas
fistpll
xor
loope
cld
jle
outsl
clc
inc
inc
push
rorl
outsl
mov
xchg
cmpsl
bound
xchg
mov
movsb
leave
cmp
or
xchg
pop
dec
jle
inc
mov
mov
lock
jmp
aas
jns
push
jp
add
mov
and
xor
push
jnp
dec
jecxz
adc
inc
cmp
mov
test
aas
ret
or
aas
xlat
adc
xchg
add
jecxz
rorb
mov
ljmp
xor
cmp
cmc
xor
cli
test
dec
push
and
aas
jge
push
mull
sub
fildll
dec
or
xor
ja
stos
fwait
int3
push
push
jmp
ja
add
out
out
or
ret
push
dec
lret
nop
inc
add
lea
faddl
mov
push
mov
fstpl
push
inc
mov
arpl
mov
or
rclb
sahf
in
push
and
lahf
sahf
fistps
inc
adc
jmp
lods
dec
dec
movsl
jecxz
sarb
aas
sahf
bound
push
nop
or
cmp
pop
inc
rcl
xchg
mov
scas
push
xor
xchg
pop
mov
mov
cmpsl
daa
cld
adc
push
outsb
scas
shl
dec
xchg
out
mov
dec
cmp
repnz
mov
push
xchg
and
std
jle
adc
ret
insb
cld
popf
test
push
fs
clc
xchg
and
xor
fildl
inc
pop
mov
pop
pop
xor
and
test
and
icebp
jbe
loopne
push
dec
es
hlt
cltd
filds
fstpl
inc
and
adc
xor
xor
jl
cmpsb
shrl
out
cmp
jo
add
inc
and
sbb
cmpsl
push
and
ljmp
mov
or
xor
push
cmp
cmp
pop
bound
add
addr16
pop
push
and
cs
ja
pop
lock
js
jnp
dec
mov
pop
test
je
outsl
dec
mov
cmp
mov
cmp
push
out
fs
std
pop
ds
gs
imul
fdivrs
jl
fwait
xchg
xchg
out
inc
lock
faddp
repz
cmp
pushf
sub
pop
pop
cmp
push
add
cmp
outsb
cmp
push
mov
stos
xchg
jge
mov
ret
sbb
das
shl
dec
fistl
xchg
pop
cmp
push
and
es
jb
shrl
or
dec
popf
into
insb
imul
imul
pmulhuw
adc
jae
cmp
or
mov
cmpsb
decb
mov
pop
ljmp
scas
cs
push
dec
stos
sbb
movsl
sar
test
aad
mov
sbb
lods
sbb
dec
cmc
push
inc
mov
loopne
push
push
sbb
or
or
mov
mov
add
gs
sbb
leave
int
in
xchg
subl
cwtl
arpl
sub
fcomps
or
hlt
add
xchg
cmpsb
adc
dec
insb
mov
adc
jg
jge
daa
cld
push
outsb
sub
call
imul
sbb
add
pop
sub
jns
das
int
dec
xor
xchg
pop
and
cmpsb
call
outsl
or
call
aas
push
cmp
mov
dec
pop
mov
inc
pop
es
mov
pop
fwait
lock
jecxz
std
idivl
jne
pop
out
cmp
push
xlat
xchg
pop
fs
and
jle
xchg
mov
ret
mov
insb
pushf
inc
add
loopne
icebp
push
pop
gs
mov
inc
ja
fimull
data16
or
lods
rorl
xchg
insb
xchg
call
aad
mov
es
fldenv
daa
sbb
cltd
mov
sub
aad
loop
mov
mov
movsb
and
sub
sahf
mov
rcr
das
popf
sub
lahf
push
es
sbb
or
sbb
jge
cmp
loope
push
dec
stos
lods
mov
inc
stos
adc
fimull
ret
sub
enter
out
mov
dec
iret
jb
jbe
push
cli
popa
sbb
push
cltd
and
sub
es
fbstp
shrb
shl
outsb
adc
cs
push
and
popf
xor
xchg
xor
into
jp
adc
ret
and
int3
jle
fsubrs
xor
xor
pop
out
cmp
sti
sbb
inc
jne
ja
js
ret
bound
sbb
bound
inc
in
adc
sbb
inc
cmp
xor
mov
imul
sbb
push
lret
jnp
add
pop
addr16
aas
xchg
jp
lods
xor
aad
js
jns
inc
cmc
fldlg2
loop
jg
cmpsl
imul
int
outsb
sbb
dec
or
aaa
cmpsl
dec
ja
xor
inc
adc
mov
dec
inc
out
lods
cmp
dec
mov
pop
lock
cmp
mov
sbb
aas
fisubl
mul
mov
adc
shl
mov
pop
jmp
jmp
ret
dec
iret
xor
faddl
push
aad
jmp
inc
divb
imul
ds
sbb
mov
sarb
loope
xchg
add
fstl
je
insb
sub
cmp
mov
or
xor
movsb
aam
orb
hlt
inc
int3
sbb
lahf
xchg
orb
fbld
stos
cwtl
call
and
enter
movsb
jp
int3
int3
or
movsl
adc
loopne
insl
xchg
jns
adc
ret
push
add
add
dec
mov
jle
enter
inc
push
mov
sbb
and
fwait
push
nop
aas
push
loop
imul
les
sub
adc
push
sbb
pop
inc
ds
mov
fldt
jb
push
push
ret
sti
cli
mov
popa
scas
sbb
shll
sbb
divps
pop
aaa
jb
push
inc
mov
in
repnz
cmpsb
pop
xor
mov
ja
in
mov
ljmp
jns
xorb
pop
test
cld
adc
push
cmp
cmp
cmpsl
scas
sbb
fsubrs
lahf
sbbl
jg
lods
sbb
ja
cs
sub
xor
xor
arpl
jg
movsb
pcmpeqb
mull
cltd
shll
ret
xchg
and
pop
adc
ficoms
lret
mov
lock
mov
std
je
cwtl
js
seto
and
fidivs
push
mov
jbe
mov
xchg
xchg
xor
or
iret
clc
dec
aam
and
inc
jb
loope
fs
test
cmp
xorl
mov
xchg
cmp
test
and
movsb
cwtl
in
xor
out
push
loopne
inc
daa
outsl
ret
push
push
push
je
aam
push
sbb
push
or
mov
inc
and
in
shrb
dec
add
mov
gs
mov
push
xlat
lcall
add
rorb
pop
je
inc
sahf
mov
push
mov
inc
mov
jnp
jae
sub
or
mov
inc
rcl
call
daa
fwait
xor
xchg
mov
pop
xchg
inc
js
daa
mov
sub
rcrb
mov
jae
stos
inc
xchg
cli
mov
cmc
ret
dec
mov
shld
pop
dec
add
sbb
xchg
sub
xchg
inc
aad
push
xchg
gs
mov
adc
cmpsl
or
data16
inc
dec
jb
add
sub
enter
ds
push
pop
xchg
sub
test
fcomps
cltd
lods
mov
xor
movsb
insl
adc
cmp
dec
iret
lea
movsl
xchg
addr16
leave
pop
in
jecxz
cli
add
nop
push
push
jmp
lret
mov
mov
add
jecxz
fdivs
jge
dec
sbb
sub
insb
mov
push
xor
fimull
xor
stc
and
orb
jnp
arpl
fwait
sub
aaa
loopne
cs
jb
cli
xlat
stc
cltd
mov
roll
xchg
js
or
inc
orl
pop
sti
out
adc
xchg
xchg
mull
lahf
sub
ja
push
lahf
daa
aam
lret
imul
into
xor
bswap
popf
fiadds
out
sbb
xchg
stc
pop
in
inc
inc
xor
std
pushf
add
push
lods
xchg
outsb
dec
jo
jnp
aas
fdivrp
pop
push
negb
movsl
dec
and
repz
mov
xor
xchg
mov
fbld
je
fs
rcrl
testl
jmp
jno
icebp
adc
dec
mov
int
mov
jl
mov
adc
inc
xchg
sub
nop
xchg
jecxz
icebp
cli
stc
jbe
shlb
push
rclb
ret
mov
movsl
or
cli
jmp
dec
fildl
mov
sub
arpl
scas
dec
in
subb
jns
mov
xor
aaa
jmp
jae
hlt
jecxz
cmp
not
inc
mov
pop
scas
ljmp
xchg
or
mov
movsb
andb
sahf
jnp
insb
mov
js
mov
aad
pop
lahf
adc
cmc
adc
xor
fmull
push
xor
cmpsb
inc
inc
add
das
ja
int
push
jg
outsl
cmpl
ret
and
adc
popa
xor
les
pusha
out
sbb
jo
mov
lret
xlat
xchg
cwtl
jb
mov
sub
mov
fwait
push
pushf
adc
lahf
sbb
nop
inc
ss
test
scas
mov
sti
fucom
lods
jecxz
mov
mov
sarb
fisubs
adc
lahf
mov
inc
pop
lret
sbb
repnz
jb
imull
pop
cltd
mov
enter
test
mov
sub
and
sbb
mov
lock
xchg
sbb
testb
in
scas
cwtl
xor
comiss
in
std
or
pop
ficoml
fdivs
cmp
add
lea
push
cmpsb
addr16
repz
xchg
es
add
enter
cli
scas
pop
dec
or
mov
and
jmp
adcb
cmp
pop
pop
roll
int3
jb
popa
cmp
arpl
adc
cmp
mov
aad
test
inc
lock
jp
sbb
fcmovnb
cmp
push
aaa
aas
inc
cmp
scas
sahf
mov
inc
mov
jo
scas
xchg
jl
lahf
pop
ret
inc
jge
sub
mov
outsb
mov
xor
in
pop
stc
sub
adc
fdivrl
or
jmp
cli
js,pn
mov
xchg
lea
into
xor
lret
or
dec
fs
popf
mov
push
call
repnz
mov
out
mov
jmp
jns
pop
int3
xchg
into
mov
fistps
sub
in
and
test
jge
or
je
loope
push
fidivl
in
inc
out
sti
mov
fistpl
push
out
cmp
fildl
movsb
or
fwait
push
dec
mov
lahf
adc
xchg
jg
movsl
or
mov
jp
fistpll
sti
sub
loopne
arpl
out
test
mov
mov
fcompl
loopne
pop
movsb
aam
push
imul
and
imul
sub
or
fsubs
push
sub
in
jg
pop
aaa
test
push
negl
mov
and
mov
cli
out
or
mov
scas
sub
and
mov
jecxz
repz
inc
subl
inc
sbb
orb
push
frstor
jno
jp
adc
or
hlt
add
stc
out
fbld
mov
sbb
mov
scas
xlat
adc
xchg
cmpsl
nop
sti
fwait
xchg
sbb
ret
push
mov
into
ret
in
xor
inc
push
das
mov
add
push
fdivrl
or
outsb
jnp
pop
sahf
ret
gs
pop
rcr
in
cmp
out
dec
jmp
mov
and
add
xchg
aas
xchg
inc
pushf
dec
sbb
and
xchg
fisubrs
lock
xchg
bound
pop
out
xchg
adc
shlb
int3
push
jno
jmp
cmc
das
mov
push
pop
clc
in
mov
cwtl
mov
mov
inc
sbbl
sti
or
mov
testl
xorb
sub
cld
push
sub
lret
ljmp
imulb
loope
sbb
push
adc
aad
ret
add
clc
cltd
ja
and
sbb
dec
das
sbb
fcoml
lods
mov
imul
repnz
ss
pusha
sbb
rcrb
push
dec
lea
cmp
ja
jo
movsb
mov
jge
push
xor
int3
out
adc
inc
mov
aas
mov
mov
cli
or
cmp
sub
xlat
pusha
out
add
dec
ret
inc
add
pop
mov
imul
pop
out
xchg
outsl
add
pop
sub
xchg
icebp
or
mov
outsb
mov
push
jmp
daa
jns
push
pop
enter
popf
movsl
xchg
push
repz
cmp
or
sub
aas
aas
in
fsubrs
xor
aad
scas
stos
outsb
push
add
adc
xor
scas
mov
push
test
mov
sarl
faddl
inc
fimuls
lret
and
xor
adc
in
cmp
mov
jnp
movsb
out
xor
mov
sub
xchg
pop
xor
add
repnz
loopne
fwait
mov
xor
xor
xchg
jno
xor
adc
mov
int
lock
imul
mov
pop
cmc
pop
cmpsb
jmp
xchg
ss
pushf
sbb
cmp
icebp
fnstcw
out
fs
mov
mov
mov
xor
call
out
dec
sbb
icebp
xchg
negb
push
jno
jle
add
data16
xchg
out
icebp
in
in
adc
data16
pushf
outsl
fcoml
in
imulb
dec
hlt
push
sbb
xchg
aaa
insb
repnz
enter
push
jnp
dec
pop
lea
and
fisttps
mov
mov
sbb
jmp
push
movsb
shlb
test
xchg
hlt
or
mov
int
add
out
fdivl
in
or
sbb
das
xchg
es
pop
sub
inc
insl
adc
cmp
int
and
cmp
fwait
insl
sub
daa
pop
daa
ljmp
inc
dec
loopne
ret
lods
mov
arpl
dec
jo
lds
inc
or
mov
int
push
add
rorl
jno
and
loope
and
jl
decl
mov
shr
sbb
cmp
stc
or
pop
popa
cld
shlb
pop
lds
imul
add
test
inc
fnstcw
fcoml
pop
mov
hlt
sbb
nopl
test
xlat
sub
add
lea
pop
lock
rorl
xchg
divb
mov
sbb
ret
add
jbe
out
jp
xchg
pop
cwtl
test
add
mov
insb
test
pop
lahf
inc
lcall
addr16
add
mov
aas
shll
test
out
xor
xor
sahf
test
mov
dec
imulb
push
jmp
punpckhwd
pop
in
jno
cli
sbb
and
insb
sbb
push
pusha
add
fdivs
cld
test
std
mov
jg
xchg
push
inc
popa
in
or
cli
cmp
pop
pop
xchg
repnz
repnz
mov
stc
inc
add
lahf
shrl
rcll
jb
fwait
sti
jbe
add
cs
add
add
cmpsl
in
xor
lock
or
pandn
adc
xor
or
inc
inc
insb
in
icebp
lcall
xchg
aad
mov
mov
outsb
repnz
out
sub
mov
arpl
sub
and
sub
push
rcll
cmpsb
outsb
xchg
adc
add
enter
sbb
or
orl
ficomps
inc
mov
xchg
sti
in
xchg
enter
ja
jle
inc
mov
cwtl
cmpsb
push
mov
jle
mov
sub
call
insb
ret
test
clc
inc
dec
test
pop
push
mov
mov
lods
int
test
gs
cmpsb
out
jo
call
clc
adc
pop
mov
test
push
cmp
push
cmp
sbb
add
iret
cli
aas
sahf
sahf
pop
push
fcomps
adc
add
into
jecxz
addr16
fistpll
testl
mov
cs
mov
mov
lret
shll
lret
inc
ret
dec
inc
cmc
push
xor
jnp
inc
jbe
imul
mov
jg
iret
popa
sub
mov
adc
gs
test
sub
movb
andb
test
lret
imul
das
mov
lods
test
mov
pushf
sbb
sub
inc
int
shlb
push
xchg
lea
pop
inc
or
div
jb
js
or
and
mov
xor
out
int
xor
shl
rclb
cmp
sbb
call
and
jbe
sbb
jecxz
insl
aam
adc
mov
xlat
call
outsb
pop
add
repz
xchg
sbb
xchg
daa
inc
mov
pusha
mov
stos
and
push
mov
sub
mov
pop
adc
stos
push
mov
cmc
lea
mov
mov
xor
arpl
fisubrs
and
pop
nop
mov
stos
dec
mov
xor
scas
or
push
fwait
hlt
bound
cltd
inc
xchg
mov
cld
ret
and
push
lret
pushf
sub
fcmovu
ljmp
adc
xchg
push
fucomip
sub
xchg
pop
jns
cld
out
jg
stos
lods
adc
rorl
lds
movsl
inc
sbb
scas
mov
inc
mov
xor
stos
rclb
js
out
xchg
push
jne
out
iret
call
ljmp
or
or
ja
pop
mov
add
add
cli
dec
test
lock
cmp
jl
cmc
fucomip
lahf
test
and
testb
mov
loopne
dec
pusha
lock
jne
out
push
lcall
in
push
orl
nop
mov
fisttps
and
jne
add
push
push
ficoms
jbe
dec
daa
dec
or
mov
mov
mov
sbb
ja
or
out
dec
clc
arpl
imul
push
pop
pop
in
test
or
sbb
cmp
inc
cmp
adc
lea
cmp
test
mov
cmc
push
pusha
mov
sahf
jge
ja
push
pop
pop
daa
cmp
push
shlb
inc
pushf
inc
inc
cmp
repnz
shll
enter
mov
sbb
rcll
inc
addr16
subb
arpl
xchg
insb
sahf
inc
test
sbb
xchg
mov
stc
rorb
fildl
shrd
adc
ds
lds
jns
call
dec
in
and
mov
int
fistps
fldln2
dec
sahf
fisubrl
popl
loop
cmp
jecxz
cltd
mov
push
sub
popa
cmpsb
inc
xor
testl
mov
adc
ds
or
fnstsw
cmpsl
and
repnz
vhsubpd
icebp
add
stc
and
jb
fnsave
and
sbb
lcall
pop
cs
adcb
test
out
adc
jo
cli
inc
lods
dec
jge
mov
test
cmp
mov
mov
out
adc
aas
sahf
xchg
mov
imul
gs
pop
sbbl
jo
pop
nop
adc
dec
mov
mov
mov
jmp
sub
shrb
ja
lods
test
ja
pushf
cltd
lahf
test
sub
stos
stc
das
adc
mov
push
push
sub
add
mov
cmpsl
out
popf
loop
sbb
mov
and
gs
mov
repnz
push
or
rolb
cmpsl
jnp
pop
xor
push
aam
or
push
mov
icebp
mov
aam
in
xchg
adc
pop
test
pop
ja
out
jle
push
and
fcompl
repnz
push
cld
add
jecxz
adc
jne
mov
test
div
push
ret
enter
dec
aam
xor
lret
jmp
movsl
stos
cmpb
loop
jbe
or
adc
and
icebp
xor
mov
lret
fucom
pusha
in
lret
nop
imul
sbb
cmpsl
icebp
scas
loop
push
ret
mov
adc
dec
mov
sbbl
xor
test
cltd
inc
pop
push
aad
repz
mov
xor
mov
inc
lret
cmc
fwait
jo
sub
inc
bound
cmpsl
sub
mov
cmp
test
or
out
fstl
in
xchg
std
lret
xor
push
sarb
xchg
fstpl
scas
mov
pop
cmp
std
mov
cltd
imull
mov
pop
push
insb
inc
inc
pushf
fxch
cld
push
in
in
mov
xchg
add
sub
adcl
pop
flds
xchg
xchg
nop
jp
jb
add
jl
push
jmp
sbb
in
out
daa
pop
adc
jp
out
pop
fs
pop
and
mov
popf
inc
mov
sub
test
sahf
mov
lea
in
inc
add
fidivrl
out
rol
dec
loopne
fwait
dec
test
cmpb
sar
mov
dec
adc
and
lret
dec
ds
cmpsl
ret
imul
mov
pop
mov
hlt
xor
inc
sbb
pop
adc
imul
or
sub
mov
ja
sbb
inc
push
xchg
or
adc
push
cmp
push
sbb
nop
movsb
mov
out
and
dec
mov
cmp
mov
cmp
xchg
dec
fisttpll
mov
mov
bound
ss
jecxz
inc
mov
out
cld
mov
out
pop
out
sbb
cmc
popf
sub
sbb
add
push
fbld
lods
movsb
or
sti
xor
imul
sub
jge
pop
dec
lods
cmpsl
jecxz
pusha
sbb
xor
sbb
sbbb
push
js
imul
in
out
stos
scas
insb
mov
inc
mov
data16
scas
cld
cmpsb
jno
mov
jmp
xorb
enter
cmp
jnp
daa
mov
inc
mov
or
shrl
mov
cmp
rcrb
cmp
shrb
insl
inc
divl
call
mov
xchg
cmpsl
ret
insl
pop
sahf
sbb
cmpsb
int
mov
xchg
jbe
decl
mov
movb
and
outsl
xor
stos
pop
adc
pop
test
add
inc
insb
gs
dec
xor
bound
jg
adc
add
mov
and
mov
push
test
sbb
test
pushf
sti
pop
jbe
arpl
cwtl
int3
cld
popa
stos
jecxz
test
jge
lods
sub
mov
lea
sub
dec
call
cmp
inc
jmp
pop
add
test
dec
loopne
fidivs
adc
addb
pop
cmp
aaa
or
iret
jp
movsl
mov
dec
xchg
push
xchg
addr16
dec
mov
adc
rcll
cli
jbe
cmpsb
movsb
sar
sub
dec
jp
push
dec
push
loopne
movsb
stos
jl
inc
mov
xor
jmp
rcll
jo
int3
lods
mov
xor
inc
push
in
decl
pushf
and
mov
jg
stos
rcl
lods
loop
cwtl
jmp
lods
and
sti
mov
adc
cmp
inc
jae
sbb
aaa
pop
lcall
pop
mov
xor
ret
movsl
fisubrl
pop
mov
bswap
xor
mov
xchg
dec
out
leave
xor
sbb
add
ja
inc
inc
mov
lcall
xor
pop
imul
mov
rcrb
pop
cmpsl
jae
jge
fistl
pushf
cs
repz
sbb
pushf
and
xchg
mov
outsb
mov
call
in
push
jns
enter
je
xchg
jb
and
in
shll
push
icebp
and
mov
adc
push
pop
ja
xor
inc
jnp
in
push
aas
mov
cwtl
mov
push
daa
and
sti
jo
jp
xchg
stos
mov
das
scas
sti
in
popf
cmpsl
adc
jle
popa
xchg
add
cmp
sti
sbb
leave
mov
mov
arpl
pusha
aaa
jns
inc
das
jl
jbe
pusha
dec
fdivrl
mov
inc
and
inc
add
call
push
movsb
add
pop
adc
js
mov
rol
movsl
or
rclb
scas
js
add
mov
scas
arpl
adc
inc
insb
int3
scas
cmp
ficoml
push
out
push
outsl
faddp
add
jno
jne
jle
pop
mov
movsl
outsb
rol
add
lret
xchg
iret
mov
fstps
lods
hlt
xlat
rcl
mov
fidivrl
push
mov
out
push
cmp
notb
inc
cli
dec
out
mov
je
out
lahf
int3
cmpsb
mov
sarb
add
hlt
shl
popf
adc
aas
push
add
push
cmp
shll
ja
lods
jo
xchg
outsb
or
imulb
and
push
push
mov
inc
and
dec
mov
shll
je
lahf
ss
lods
cmpl
loopne
inc
test
repz
pop
mov
in
mov
xor
sub
inc
push
test
mov
jle
sub
int
jmp
test
ret
imul
roll
xchg
pop
arpl
jmp
adc
movsl
adc
cwtl
or
cmpsb
push
mov
in
rcrl
jns
cmp
mov
std
xchg
repz
push
loop
pop
push
cs
dec
addb
arpl
mov
cwtl
sub
jns
xchg
xor
and
repnz
fistpl
add
or
pop
and
dec
add
int
fs
add
aam
hlt
push
inc
mov
shll
hlt
lahf
mov
clc
icebp
mov
in
psubb
int3
sub
add
cld
nop
mov
mov
pushf
sbb
movsl
push
pop
outsl
sub
jle
ljmp
in
mov
mov
arpl
xor
iret
fwait
imul
icebp
leave
fsts
jl
and
jnp
cmpsl
push
data16
xchg
pop
dec
out
jg
test
mov
aaa
cltd
xlat
xor
jecxz
std
iret
mov
push
sbb
aas
cmpsl
sti
inc
ret
lret
adc
and
rclb
push
in
nop
pop
xchg
repz
xor
cmp
or
stos
test
mov
xor
stc
xor
xchg
inc
data16
daa
and
mov
push
cld
sub
je
das
add
adc
sub
sti
mov
test
cmp
lcall
in
lcall
lds
xchg
sti
xchg
mov
xor
hlt
rcr
adc
ror
xchg
mov
fwait
lods
outsb
push
mov
test
lea
call
and
push
pusha
push
jo
les
repz
lcall
inc
je
jne
orl
jmp
iret
mov
mov
dec
cmc
push
jp
jge
aam
scas
xlat
scas
leave
dec
hlt
mov
popf
sbb
sub
orb
lods
xlat
mov
into
pop
mov
sub
lahf
xchg
xchg
les
cmp
push
loopne
outsl
and
outsb
lahf
push
lcall
cwtl
xor
mov
mov
cli
fbld
mov
movd
sub
sbb
loope
fwait
rolb
xor
loop
xlat
lea
pop
jge
shr
in
rol
je
xlat
test
mov
or
jb
sbb
push
out
divb
xorl
dec
sbb
jae
and
stc
fs
scas
lods
pop
call
loopne
adc
pusha
test
aaa
mov
cs
sahf
cmpsl
test
inc
xchg
out
jae
add
incb
repz
andb
pop
sbb
jbe
xchg
xor
test
push
inc
xchg
gs
mov
push
pop
dec
cmp
mov
push
imul
jo
lcall
lods
xor
scas
into
cmp
fwait
pushf
fstpt
push
jmp
loop
pop
xchg
and
push
pop
push
push
cltd
out
jo
pop
fistps
adc
je
lock
test
daa
call
xchg
mov
mov
mov
pop
pop
clc
std
inc
cmp
pop
rclb
adc
sub
mov
pop
dec
pusha
xchg
in
mov
repz
jle
orl
in
dec
and
lret
cmpsb
cmpsb
clc
sti
repnz
scas
xchg
xchg
in
movsl
addl
mov
popf
sub
add
mov
and
fstl
and
mov
add
cwtl
test
or
addr16
dec
or
mov
outsb
int
mov
sub
cltd
xchg
mov
roll
in
cmp
mov
les
mov
push
shr
daa
cmp
mov
pop
or
scas
mov
mov
mov
push
push
mov
or
es
cmp
mov
lcall
aas
or
xchg
push
dec
jp
mov
xchg
sbb
cli
out
mov
xor
inc
addr16
adc
daa
ljmp
jnp
adc
inc
and
mov
adc
aam
scas
pop
pushf
stc
icebp
mov
dec
cmp
outsb
xor
fst
ds
lahf
faddp
sbb
cmp
xor
mov
sbbl
inc
aaa
adc
jecxz
lea
sbb
xlat
inc
aaa
xor
shl
pushf
movsb
scas
scas
call
sbb
popa
lret
pushf
xchg
sub
mov
mov
mov
xchg
jg
jmp
flds
sbb
mov
js
mov
rcrl
mov
pushf
fs
jo
dec
fxch
dec
jae
into
push
sub
in
fucomi
lods
pop
dec
add
ficoms
fwait
jg
xor
aaa
int3
scas
fwait
repnz
into
pop
incl
push
mov
ret
cmp
call
push
sahf
shl
pop
inc
sub
sub
int3
jle
pop
mov
out
pop
push
cmpsl
iret
pushf
movsb
in
xor
and
test
dec
xor
mov
popa
push
mov
fucom
call
push
pop
mov
xor
xchg
in
xor
addb
or
addr16
adc
mov
arpl
lret
and
scas
xor
mov
sbb
cmp
and
dec
lret
and
lock
lahf
pop
lret
jne
lea
cli
jl
mov
mov
mov
push
sub
mov
sbb
mov
jns
jnp
sub
add
mov
fwait
cmc
scas
or
in
or
sub
inc
mov
jno
imul
test
mov
pop
jns
xchg
testb
mov
in
gs
test
pop
movl
iret
js
sbb
stos
xchg
or
adc
sarb
cmp
incl
mov
pop
push
outsl
cltd
mov
jbe
push
lock
cmp
xor
inc
mov
shll
ds
push
lock
pop
sbb
or
mov
xchg
adcl
out
adc
sub
mov
pop
cs
or
mov
pop
pop
ss
movsl
mov
xor
outsb
or
mov
mov
jae
or
loopne
lret
out
add
sub
pushf
mov
sub
sub
push
aaa
rcrl
out
in
inc
lods
loop
das
cmp
shrl
nop
mov
cmpsb
jae
or
lcall
js
movaps
xor
push
dec
sub
bound
pusha
and
sahf
icebp
orl
andb
jge
mov
add
and
xchg
inc
adc
fisttps
and
jne
clc
icebp
lret
movsl
mov
and
and
bound
fisubrs
bound
dec
pop
into
sub
pushf
xchg
data16
xchg
rcll
cmpsb
xchg
jno
push
adc
addr16
icebp
lea
sti
xchg
std
ljmp
movsl
je
add
and
dec
pop
int3
mov
test
jne
sbb
xchg
dec
push
sub
or
sbb
xchg
ret
leave
outsl
jge
mov
addl
nop
arpl
scas
pop
xchg
adc
aaa
cmc
int3
or
push
movsb
mov
xor
int3
cld
iret
loop
lahf
mov
flds
dec
xchg
mov
xlat
and
jecxz
or
rcrl
push
jecxz
lock
sub
mov
or
push
cmc
out
inc
mov
push
rol
test
adc
mov
int3
dec
scas
lcall
inc
lcall
call
lahf
lock
aaa
sub
cmp
jae
pop
fidivl
aas
mov
add
push
dec
inc
and
fcompl
imul
xchg
clc
xchg
cmc
push
js
les
cs
cmp
mov
dec
imul
inc
loopne
inc
cli
inc
and
jne
iret
push
sbb
repz
mov
das
lea
rolb
push
mov
cmpsb
adc
out
jo
jg
jb
inc
clc
cmpsb
test
imul
dec
push
sub
movsl
adc
jno
mov
pop
sbb
cmp
xchg
icebp
cli
pop
add
in
fs
dec
push
in
jmp
jns
lock
mov
mov
int3
mov
cmc
clc
mov
cmp
out
stos
push
adcl
adc
in
xchg
push
rorb
or
jne
test
js
outsb
ret
mull
jle
mov
rcrb
inc
test
stos
sahf
addr16
jae
lock
inc
inc
and
int
mov
dec
add
lret
aam
adc
in
jne
adc
fld
cmp
mov
sbb
ret
jge
arpl
loopne
or
cmp
js,pn
cmpsb
gs
cmc
lods
aas
not
push
test
adc
sahf
int
adc
loope
sub
mov
sub
movsl
push
xchg
inc
and
out
sbb
sbb
dec
sbb
iret
xchg
les
mull
in
cld
insb
shll
stc
movsb
xor
movups
pop
lea
mov
mov
arpl
shrl
pop
dec
aaa
call
xchg
pop
fisubrl
sub
pop
jno
or
cld
push
out
ficomps
int
pop
adc
mov
fstcw
leave
sbb
and
xchg
fidivrs
cmpsb
fnstenv
xchg
jl
arpl
cld
int3
mov
insb
addl
jae
push
xchg
movsb
addl
ja
sbb
imul
aaa
adc
shlb
inc
mov
ja
inc
and
mov
ret
stos
test
insb
xchg
adc
imul
and
shll
xchg
or
pop
xchg
hlt
xchg
cmp
adc
fbstp
sbb
dec
fld
inc
mov
cmp
inc
xlat
popf
call
es
lea
and
pop
je
cmpsb
pop
pushf
pop
fdivrs
mov
hlt
cmp
mov
mov
ljmp
push
mov
sub
sahf
add
daa
das
bound
pusha
mov
dec
mov
data16
mov
mov
mov
cmp
xchg
inc
adc
mov
ficoml
inc
pop
or
loopne
jle
mov
push
add
int
add
cmp
lahf
and
or
ss
and
pop
push
sub
scas
test
aas
inc
push
or
scas
sbb
inc
push
clc
imul
and
imul
cmp
cld
inc
pop
aad
loop
inc
pop
push
push
ret
sbb
xchg
inc
mov
psrlw
pop
hlt
mov
out
daa
aad
xlat
popf
add
insb
push
shlb
in
pop
test
lcall
add
hlt
sti
out
mov
jle
std
xchg
icebp
jle
inc
rclb
insl
scas
sub
cmp
daa
ret
mov
sub
adc
push
cmp
jp
and
enter
mov
pop
fwait
gs
add
repnz
in
jns
gs
addr16
stc
pusha
or
dec
adc
int
jne
test
icebp
aas
add
pop
inc
ds
xor
pop
and
mov
pop
in
ja
out
sub
push
jmp
cli
sub
or
cli
jb
push
pop
pushf
push
push
add
out
mov
adc
dec
adc
fs
shrl
jge
cs
jecxz
dec
repz
enter
add
jle
mov
sub
cmp
or
mov
pop
in
je
xchg
mov
enter
pop
jmp
xor
or
jge
mov
jp
pop
js
cmp
dec
jg
inc
aaa
mov
mov
dec
mov
mov
xchg
sbb
push
cmp
lea
out
aam
and
inc
aaa
push
filds
insb
push
es
ljmp
xor
sahf
xor
gs
ds
push
inc
icebp
dec
mov
jl
scas
sub
xor
sbb
in
adc
int
push
pop
sub
arpl
mov
test
insl
push
cs
aam
loop
shr
sahf
rcl
test
popa
mov
xor
call
dec
xlat
clc
addr16
aad
ficoml
xor
jns
xchg
cmc
or
jp
cmp
subb
jns
push
pop
jmp
sbb
cmpsl
daa
sbb
popf
sbb
xchg
mov
cwtl
insb
sarb
sahf
sub
mov
add
xchg
mov
out
mov
mov
adc
fistpl
jmp
xchg
pop
inc
sub
mov
pushf
pop
orb
loope
pop
mov
jmp
das
dec
lods
dec
jmp
pop
hlt
inc
ret
dec
add
inc
shrl
jle
mov
cmp
pop
inc
popf
stos
inc
arpl
push
and
pop
mul
sbb
sbb
packssdw
iret
pop
mov
push
mov
push
ljmp
test
inc
aaa
xor
mov
push
jb
jmp
jbe
sub
fisttps
sbb
int3
inc
dec
push
and
stos
lods
jae
inc
jge
inc
sbb
cli
cmpb
inc
push
mov
sbb
push
jp,pt
add
fidivs
mov
imul
jp
jg
xchg
pop
movsb
and
sbb
or
dec
jno
int3
xchg
fstpl
and
inc
jae
mov
fwait
dec
inc
cmpsl
mov
jmp
insb
cwtl
and
or
adc
mov
mov
or
push
mov
out
dec
dec
sub
push
adc
jns
cmpsl
aad
loope
cld
loop
sahf
fmuls
jne
cmp
cmp
jno
imul
iret
mov
dec
rorl
cmp
pusha
xchg
push
shr
lahf
mov
sub
fmuls
icebp
cmp
call
popf
js
push
outsb
and
pop
inc
enter
dec
mov
xor
shrb
push
xlat
mov
rol
mov
rcll
popa
push
push
jns
ljmp
jge
imul
adc
popf
cmp
aad
dec
pop
mov
das
add
jno
inc
sub
pusha
or
xchg
mov
push
pop
push
add
jg
xor
jle
mov
inc
mov
data16
push
loopne
xchg
ret
les
scas
cmp
mov
adc
or
pop
cmpsl
mov
js
repz
cli
sti
nop
jle
popf
ja
inc
or
mov
xor
aad
dec
mov
rcrb
cwtl
sub
rorl
insl
mov
ss
jp
mov
sti
fstp
jp
aas
mov
inc
xor
pop
mov
popa
popf
cmp
inc
xchg
es
cmp
xchg
xchg
cmpsb
mov
inc
cltd
hlt
xlat
xchg
mov
sub
stos
pusha
scas
push
add
mov
out
enter
imulb
jp
cltd
leave
inc
cli
or
test
into
call
popa
cmp
ss
faddl
pop
out
cwtl
sbb
mov
popf
jae
mov
mov
btc
jmp
andl
push
push
inc
jbe
and
jle
and
push
push
mov
arpl
fildl
dec
out
sbb
out
mov
outsl
add
cwtl
mov
or
pop
mov
inc
xchg
jl
fisubs
cmpsb
mov
mov
mov
mov
out
jns
ss
int
jmp
push
and
imul
cmpsl
fistps
cmc
outsl
and
in
stos
sahf
addr16
loopne
xchg
std
sbb
or
mov
iret
jae
into
loope
mov
enter
adc
add
pminsw
dec
mov
adc
cli
jge
or
out
movsb
push
jmp
sub
aaa
inc
mov
xor
pushf
into
loop
js
xchg
push
aaa
ficompl
adc
lods
pop
fildll
pop
pop
aad
mov
gs
inc
and
mov
pop
arpl
lahf
repnz
sahf
lcall
and
cld
shr
xchg
setb
xchg
inc
sbb
daa
lahf
scas
push
jl
push
scas
int3
push
sbb
push
pusha
dec
scas
aad
inc
mov
add
xchg
sbb
icebp
mov
push
jecxz
jo
aas
cmp
push
pusha
and
pop
cmp
mov
sub
fldenv
into
iret
int
int3
jnp
lds
rcl
mov
mov
fsts
pop
sub
jge
stc
in
mov
and
mov
xor
push
cmpsl
insb
movsl
lahf
fcompp
and
ret
scas
mov
sub
mov
cmp
or
push
adc
cmp
test
out
stos
mov
adc
js
loopne
cli
push
jnp
notl
xor
insb
dec
js
out
xor
xchg
push
xorb
push
cld
dec
mov
push
cmpsl
pop
out
pop
xchg
pop
std
pop
jb
es
cwtl
mov
or
insb
cld
mov
mov
jne
xlat
push
inc
mov
loopw
das
lds
dec
es
xor
fnsave
sahf
ret
pop
pop
adc
ss
mov
movsl
push
cs
sti
xchg
xchg
in
fdivs
ljmp
inc
pushf
xlat
mov
lods
ficompl
jmp
cld
cli
cs
outsb
xchg
shrl
scas
enter
dec
push
add
leave
mov
sbb
add
sbb
push
repz
ss
xchg
push
dec
pop
icebp
popa
push
das
jno
xchg
out
inc
xor
popf
lahf
out
nop
lea
push
or
jne
ja
popf
add
mov
pop
daa
push
dec
sub
dec
jns
clc
adc
shr
setg
es
fstl
cmc
cmp
sub
cmp
xlat
jle
and
jne
xor
les
in
mov
push
shll
push
mov
push
jp
or
xchg
xor
mov
xchg
loop
xor
les
or
or
or
mov
aaa
cld
std
clc
mov
je
sbb
sbb
mov
loop
jbe
xor
in
ja
pusha
or
jecxz
loope
sub
lret
push
or
loopne
xchg
rclb
pop
jmp
push
sub
fs
jge
sub
push
test
imul
adc
mov
lahf
lds
sub
fisttps
inc
mov
sbb
or
dec
xchg
adc
push
fisubrl
mov
sbb
pop
jmp
jb
mov
in
es
dec
push
faddp
lock
jmp
negl
sub
push
leave
fsubs
jae
and
push
out
and
cmp
addr16
mov
pusha
inc
dec
push
sbb
je
mov
iret
dec
ljmp
pop
add
mov
mov
jbe
packuswb
pop
mov
ret
cmp
dec
pop
fldcw
sub
int3
in
jae
icebp
mov
in
movsb
pop
and
jmp
pop
and
pop
insb
jl
mov
into
add
adc
xlat
or
loope
pop
fisubrl
jmp
pop
test
mov
mov
aaa
lret
pop
ja
jp
adc
outsb
pop
rclb
sbb
pop
in
ret
sbb
scas
push
jbe
mov
ret
cli
xor
loopne
or
inc
cmp
mov
xor
inc
popa
fs
sti
shll
jnp
add
mov
bnd
add
in
mov
xchg
test
mov
outsb
xlat
and
filds
push
lock
sar
in
lcall
sbb
and
pop
std
loop
push
std
cmpl
jge
enter
mov
sub
dec
or
in
call
xchg
jle
in
stos
mov
sub
pusha
lds
cmpsl
test
fadd
pop
dec
pop
js
into
pusha
jbe
nop
mov
pop
xchg
sbb
lock
adc
inc
and
jl
jae
fdivp
sbb
popf
roll
push
jae
bnd
mov
pop
ljmp
or
into
xor
adc
lock
arpl
das
ds
mov
ljmp
mov
fmull
sbbb
adc
std
jge
dec
sar
mov
add
cltd
mov
mov
aam
fcmovu
jmp
push
mov
dec
adc
adc
push
hlt
in
cmpsb
arpl
idivl
in
sarl
pop
mov
shr
mov
rclb
push
out
pusha
lods
xlat
les
mov
mov
lahf
xor
xor
mov
jmp
mov
icebp
or
jnp
fsubrs
fldcw
mov
or
fcmovb
lods
fstl
loopne
pop
stos
mov
cmpsb
add
mov
int
mov
add
mov
jp
pushf
dec
pop
outsl
mov
pusha
leave
sbb
js
in
int3
xchg
adc
inc
or
dec
scas
hlt
push
stos
mov
pop
popf
or
test
pushf
lahf
mov
fcomps
sbb
lret
mov
out
sbb
pusha
cltd
imul
aam
mov
shr
movsl
mov
ja
pop
sub
gs
add
adc
addl
outsl
movsl
pop
cli
mov
cmpsl
push
xchg
into
ret
into
xchg
int
xchg
cmp
int3
ds
out
clc
xor
push
pusha
stc
scas
adc
inc
stos
cmp
push
stc
xor
jns
mov
and
sbb
adc
push
or
mov
mov
daa
aam
popa
out
xchg
jl
jae
data16
stos
or
test
rorl
stos
icebp
ss
mov
std
sbb
lret
pop
nop
sub
and
pop
mov
mov
push
dec
in
push
lods
and
and
jge
or
aaa
ljmp
mov
lea
push
mov
cmp
xchg
rorl
clc
das
outsl
or
jne
or
xor
in
xor
stos
aam
pop
pop
out
or
mov
mov
stc
and
aam
mov
lret
add
scas
mov
lahf
xchg
and
outsb
int
shll
pop
das
es
xlat
and
sarb
out
dec
and
pop
or
sub
sbb
and
jo
push
adc
movsb
sub
leave
rcll
std
pop
sbb
mov
aad
xchg
int
jg
out
fsub
das
xchg
lahf
pop
mov
sbb
xor
and
mov
mov
cmc
pop
fptan
or
dec
test
into
jmp
xor
xchg
xor
out
dec
mov
push
iret
mov
dec
stc
push
xor
imul
xchg
sar
mov
arpl
xor
lock
out
add
push
pop
ljmp
icebp
push
add
lods
movsb
mov
and
rcl
lock
pusha
or
adcb
call
fsubs
jp
clc
or
fcmovne
aaa
and
js
sub
sbb
or
add
or
out
push
or
xchg
das
in
xor
cld
daa
in
jb
xchg
push
out
pop
add
pop
mov
sub
sub
rolb
mov
loop
cmpsl
maskmovq
testl
push
je
movsl
aad
popa
shr
sbb
push
and
mov
adc
bnd
loope
push
jecxz
inc
mov
hlt
xor
inc
jae
pop
sbb
scas
es
into
pop
xor
stc
cmp
dec
call
notb
mov
and
pop
cmc
hlt
inc
jmp
leave
or
and
stos
cmp
mov
les
mov
jl
pushf
inc
adcl
std
push
or
lock
mov
scas
jno
xor
cmp
stos
into
loop
das
enter
dec
lahf
jns
xchg
mov
stos
ja
fimull
push
push
fstpl
jge
lret
sbb
scas
int3
jecxz
jge
jne
inc
aad
push
js
pop
inc
cs
cmovns
inc
xlat
jge
sub
mov
aaa
cli
pop
in
adc
pop
lea
mov
pop
inc
mov
outsb
push
andb
imul
mov
outsl
mov
push
fsts
jo
loop
push
mov
and
loope
aad
mov
sbb
xor
aad
lea
push
daa
aad
cltd
stos
cmp
inc
xchg
or
inc
and
arpl
pop
negl
push
mov
lds
push
test
inc
inc
mov
and
or
mov
sbb
lock
inc
lods
mov
mov
push
mov
jnp
push
inc
les
or
lods
outsl
xor
fildl
pop
add
sub
aam
add
jl
fstps
mov
nop
pop
ja
pop
loope
or
testb
cmpsl
imul
dec
jb
push
pop
sbb
mov
add
maxps
lahf
in
and
addl
mov
mov
or
adc
xchg
imul
and
insb
aad
dec
mov
jb
ud0
aam
xor
or
or
inc
xchg
add
xor
push
enter
das
cs
test
repnz
cmp
out
mov
sbb
or
inc
cmp
mov
into
les
out
cld
in
xchg
iret
add
sub
ficoms
popl
xor
out
add
pop
xchg
mov
or
jmp
outsl
fwait
push
fisttpl
sub
xchg
mov
and
jbe
jb
movsb
mov
xor
enter
dec
das
decb
and
fisubrs
int3
push
jb
mov
sbb
add
lret
and
cmp
shrb
lahf
fsubrs
and
and
outsb
push
insl
jo
mov
vaddsd
pop
add
dec
inc
in
nop
test
ljmp
push
or
int
les
cmp
test
jo
aaa
and
cwtl
push
loopne
loopne
mov
xchg
sub
shlb
inc
sarb
mov
aas
aaa
fisttpll
test
aaa
inc
xchg
pop
pop
movsb
imulb
popa
pop
cmp
scas
or
dec
mov
xchg
fisttpl
and
outsl
push
std
fwait
xor
cmp
add
and
mov
sarl
xchg
mov
je
xor
dec
pop
dec
pop
in
sub
inc
mov
cli
cmp
fdivs
fdivp
fldenv
inc
mov
xchg
push
pop
push
mov
stos
cmpsl
or
fwait
pop
sub
mov
es
fistl
inc
jle
or
jb
jbe,pt
cmpsl
sbb
popf
jnp
xor
inc
mov
add
sbb
aad
pop
push
add
enter
mov
icebp
or
std
sub
mov
xchg
lret
cs
xor
xor
stc
mov
iret
pop
dec
pushf
cmc
xor
lock
xor
daa
imul
add
out
sbb
inc
stc
call
test
mov
add
int3
loope
sbb
mov
xchg
les
or
adc
loope
push
adc
out
scas
call
sbb
bound
adc
lret
xor
orb
push
jne
stos
inc
stos
pop
mov
add
test
dec
mov
mov
pop
mov
stos
mov
push
xchg
inc
ret
pop
add
in
push
push
push
ljmp
sbb
in
pop
mov
sbb
mov
outsl
insb
adc
in
movsl
adc
cld
lods
mov
xchg
sbb
aad
nop
pop
test
scas
ja,pn
cmp
imul
aad
xlat
mov
jecxz
and
scas
jb
fildl
push
jns
imul
add
out
or
mov
xchg
dec
imul
pop
pushf
xchg
ds
rcrl
adc
cltd
aaa
in
fistps
fcomi
lods
dec
cmc
adc
push
jmp
std
sbb
and
mov
daa
pop
hlt
adc
and
xor
pop
push
xchg
jl
sub
mov
icebp
fldpi
cmp
sbb
mov
test
xchg
into
cmp
nop
jnp
add
jl
lods
ja
adc
pop
mov
loop
mov
dec
push
test
fisubs
pop
cmp
adc
add
cld
add
popf
cmova
stos
pop
xchg
and
sbb
sub
sahf
aas
daa
mov
aas
cmp
cwtl
cmp
jle
popa
adc
bound
stc
ret
cmpsl
out
aam
mov
add
loopne
in
jns
push
cs
lock
or
push
in
cmp
push
mov
iret
fidivrl
or
adc
inc
cmp
lock
push
rorb
outsl
sub
inc
lcall
dec
or
jb
into
ja
jge
pop
ret
gs
cmp
dec
dec
adc
xlat
adc
aam
lock
push
push
push
push
fcompl
repnz
push
int
mov
inc
mov
aam
outsb
ds
or
outsb
add
jmp
jmp
push
and
ror
fmuls
jmp
adc
fwait
mov
push
mov
arpl
sbb
inc
ja
test
jbe
sbb
jb
mov
xchg
cmp
adc
sbb
mov
sti
xor
clc
jno
xchg
push
jecxz
pop
mov
stos
mov
in
test
ja
push
mov
pop
mov
sub
push
stos
inc
ret
scas
add
ja
lcall
icebp
push
daa
pop
popa
mov
xchg
push
mov
mov
rol
notb
fisttpl
or
pop
or
xorb
jmp
je
push
in
mov
jecxz
mov
loop
aad
inc
sbb
add
enter
add
push
fs
cmp
vunpckhps
add
stc
iret
dec
mov
aaa
mul
and
movsl
push
stc
movsb
add
imul
leave
iret
dec
xor
add
mov
clc
inc
jge
cltd
outsl
add
iret
jmp
pusha
scas
popf
pusha
inc
cmpsb
pop
jae
lods
cmpsl
mov
sub
sahf
mov
loop
cwtl
mov
out
cmp
mov
push
xchg
mov
add
dec
movsl
xchg
push
add
mov
add
push
add
and
sub
out
lret
and
test
insl
enter
inc
ret
xor
les
add
test
mov
xchg
sbb
pop
in
fildl
xchg
push
push
jbe
xor
mov
cmpsb
cmc
dec
aaa
pop
fwait
pop
test
adc
sbb
stc
pop
das
and
cltd
imul
fs
test
add
ret
and
ret
mov
jno
mov
xchg
out
pop
push
aas
xchg
punpcklwd
mov
jge
push
mov
daa
mov
das
sarb
cmpsl
out
push
pop
std
inc
mov
dec
add
icebp
mov
sub
aaa
notl
mov
push
sbb
xor
lahf
sbbl
addl
loope
inc
mov
mov
pop
sbb
loopne
lret
jg
jge
mov
jbe
inc
fiadds
les
das
loop
mov
fstl
jne
loope
or
shrb
jb
cli
dec
and
loope
pusha
xor
dec
mov
cmpsl
jmp
add
fidivl
test
inc
sbb
and
or
cmp
mov
mov
cltd
mov
add
call
push
inc
xchg
dec
cwtl
daa
cmp
adc
sub
lret
xchg
jae
xchg
stos
xchg
sbb
xchg
xor
fiaddl
out
jnp
out
mov
mov
orl
mov
xchg
xchg
iret
aam
in
mov
sbb
cmp
fisubrs
add
cs
pop
leave
add
les
ficoml
xchg
sub
pop
mov
adc
sbb
push
loopne
mov
xor
adc
movl
jnp
sub
fs
add
mov
test
mov
or
sbb
fsubrl
inc
popf
add
sbb
push
scas
mov
mov
fcoml
sub
push
sub
cmp
pop
stos
int
fcmovb
pop
loopne
test
das
ja
jmp
rcrl
sti
subb
xchg
jae
arpl
cmp
dec
sti
jno
mov
cld
call
add
mov
cld
jo
je
in
inc
je
lcall
sbb
aad
fdivs
push
das
xor
dec
pop
adc
nop
jae
ror
xor
loope
pop
stos
add
out
outsb
ljmp
mov
mov
pusha
ss
ret
repz
jo
and
aaa
fisttpl
dec
sub
pop
pop
jo
adc
and
dec
mov
test
mov
dec
in
lret
mov
add
sbb
popa
fistpll
adc
mov
fiadds
sti
mov
test
mov
pop
push
lds
lahf
nop
clc
xor
cmpl
mov
jl
and
clc
ffreep
insb
and
das
ficoms
aas
fidivl
mov
push
daa
call
mov
inc
add
mov
mov
inc
jno
cmp
popa
and
adc
je
and
shlb
cmc
imul
and
insb
cwtl
dec
popa
pop
cmp
push
les
mov
xchg
xchg
lea
aad
mov
mov
stos
dec
lret
sub
mov
adc
push
es
aad
cmp
enter
insl
fistpll
pushf
shl
mov
fcomip
inc
sub
into
clc
push
inc
fisubrl
insl
add
out
js
mov
test
lcall
xor
jns
jae
scas
xor
inc
push
fadd
out
mov
mov
pop
stos
xchg
xchg
pushf
nop
jne
pop
ret
jle
adc
test
add
mov
jne
pop
push
les
sbb
pop
mov
xchg
ret
cmp
fxch
arpl
jo
adc
push
pop
add
data16
sbb
js
out
dec
mov
int3
mov
das
xchg
mov
jb
frstor
adc
dec
sbb
imul
aaa
mov
aas
jge
bnd
jo
dec
mov
test
jne
cld
adc
adc
or
add
add
jno
lahf
adc
mov
jg
and
mov
sub
xor
sub
mov
daa
lcall
sbb
pop
movsl
inc
arpl
outsl
movsl
pop
mov
je
cs
mov
popa
pusha
aaa
jp
loope
pop
or
stc
cmp
es
imul
bnd
cli
jmp
xor
pop
cmp
nop
mov
idiv
fwait
jnp
lods
ljmp
inc
push
loopne
or
or
and
mov
jecxz
insl
sbb
jp
ret
mov
sbb
call
cmp
cwtl
aam
in
sub
jmp
stos
scas
add
xor
out
jge
and
fstps
xchg
les
adc
ss
xor
xor
xlat
stos
cmpsb
or
inc
cmc
popf
sarb
add
cmp
sbb
xchg
xor
sbb
rclb
add
push
xchg
xor
lret
xchg
mov
pop
jno
std
outsl
mov
aaa
les
inc
imul
lods
jb
push
adc
fdivrl
fs
loope
dec
pushf
mov
insb
mov
push
pop
or
xchg
sbb
lods
push
sahf
outsl
adc
cmc
ror
adc
mov
add
test
mov
int3
dec
enter
push
mov
sub
mov
and
jl
pushl
ljmp
sub
cmp
int
ret
mov
push
xchg
and
sub
cmpsb
push
add
daa
sti
xor
outsb
pusha
test
sbb
mov
leave
fcoms
arpl
jecxz
cmc
sub
ss
mov
or
xchg
mov
outsb
arpl
fistpl
jns
ds
andl
mov
mov
notl
add
daa
adc
cmp
push
out
lea
xor
sub
daa
and
das
add
inc
mov
cmp
int3
scas
cmp
test
push
pop
jge
xor
add
add
mov
repz
rolb
jbe
lock
jb
lods
fists
data16
inc
fdivr
push
adc
aaa
inc
mov
mov
in
std
xor
cmp
lret
cmpsl
andb
inc
mov
std
loopne
jmp
es
ret
fs
pop
mov
pusha
mov
add
push
xor
jno
jp
push
mov
and
dec
cmp
jg
lock
jp
cmp
jg
and
cmpl
mov
aaa
popf
testl
xchg
mov
sbb
inc
scas
mov
pop
inc
ds
mov
decl
dec
xor
hlt
sub
xlat
fcoml
cltd
push
and
and
outsb
xchg
jnp
movsl
add
pop
jbe
pop
mov
and
fs
mov
mov
cmp
cmp
xor
hlt
les
outsl
das
popl
sbb
jecxz
and
push
movsb
push
and
mov
lret
imul
insl
cmc
aaa
sahf
pop
pop
pop
insl
xchg
setne
outsl
inc
inc
pop
hlt
or
psubw
mov
int3
rcl
push
adc
scas
mov
cmc
lock
mov
shll
mov
sub
mov
jecxz
lods
pop
and
push
mov
push
sbb
jecxz
sub
push
jl
test
and
cmpsb
mov
sub
lds
ret
mov
adc
jo
into
lcall
pop
lcall
paddsb
sbb
mov
sbb
ficoms
lods
xchg
shlb
addr16
lret
push
jmp
and
lcall
imul
and
push
mov
inc
cwtl
push
and
fisubl
pusha
mov
push
add
mov
sub
cli
jg
ljmp
pop
jle
mov
bswap
aad
rcll
cmp
fmuls
scas
fcmove
cltd
loop
sbb
sbbl
push
cs
or
shrb
dec
push
and
xchg
cli
xchg
int3
pushf
incb
stos
addr16
test
mov
test
jg
call
rclb
xchg
add
xlat
dec
addr16
jp
jb
or
stc
pop
sarl
jmp
mov
mov
movsb
movsl
xor
mov
rcll
pop
aas
loope
in
push
push
sub
shll
stos
addb
mov
pop
mov
lret
pop
mov
inc
pushf
xchg
adc
ret
sahf
mov
mov
pushf
ret
gs
mov
jnp
jb
sbb
add
fsub
out
notl
and
aam
pop
push
and
mov
push
cmp
sub
cmp
data16
hlt
lahf
lret
cld
mov
sahf
lret
jecxz
adc
jae
popa
push
xchg
jmp
pop
sahf
mov
adc
in
nop
mov
jg
and
sub
xchg
in
in
int3
mov
std
push
imul
mov
add
sbb
lret
in
mov
sub
and
mov
aad
jl
rorl
xchg
xchg
fstpl
leave
pop
lret
lds
jno
sub
aad
fwait
ljmp
add
popa
cltd
repnz
mov
popa
nop
push
mov
jbe
test
cmp
dec
adc
into
add
jmp
jmp
mov
fbstp
outsl
mov
or
fwait
loopne
cmc
xchg
lea
inc
scas
mov
pop
and
sbb
jae
or
pusha
inc
push
sbb
inc
js
test
pop
jge
shlb
add
inc
or
lods
test
fsubrs
nop
pop
xchg
dec
pop
hlt
pop
cli
cmpsb
scas
adc
test
mov
lret
adc
lcall
movsb
push
cmpsl
sbb
stos
mov
ss
sahf
mov
dec
fidivrl
cmp
pop
sub
test
jecxz
sub
xor
pop
movsb
lahf
call
mov
test
les
je
arpl
dec
pop
sbbl
mov
iret
rol
or
dec
call
mov
or
fldt
mov
loopne
add
imul
fnsave
stos
jp
dec
ret
mov
inc
xor
popf
mov
mov
push
enter
add
pop
sub
fs
sub
xor
pop
sub
xor
imul
mov
or
pop
adc
stc
pushf
shl
shlb
out
test
sbb
xchg
jmp
cmp
push
inc
pop
das
or
sub
jmp
cmp
loopne
sbb
mov
shlb
and
and
shlb
popa
cld
push
arpl
mov
pop
sahf
mov
pushf
push
fwait
sub
jle
xor
cli
or
fidivrl
dec
ljmp
icebp
cli
sbb
push
andb
xchg
fucom
xchg
lea
jno
xchg
xlat
jbe
jae
repz
xchg
in
lahf
out
mov
aaa
idivb
pop
push
pop
call
out
cli
mov
iret
add
arpl
add
imul
dec
fldl
or
outsl
out
sbbl
data16
mov
or
pop
cmp
std
repnz
jnp
cld
mov
cmp
insb
repz
sub
popf
inc
sbb
pop
lock
jmp
std
das
outsl
jmp
sarl
pop
inc
xor
and
icebp
inc
push
dec
sub
xor
push
nop
push
popf
add
xchg
cwtl
or
stos
cmc
mov
loope
ss
lahf
push
push
mov
cmp
cmp
xor
add
lds
or
cli
or
mov
fnstcw
fiaddl
or
scas
pop
mov
out
sti
xor
cmp
pop
pop
or
jmp
and
pop
pop
repz
cmp
shll
mov
sbb
push
pop
or
outsb
shlb
mov
push
sub
xchg
mov
pop
outsl
inc
inc
inc
nop
jge
je
sti
inc
inc
or
xchg
jp
sbb
daa
lret
idivl
popf
xor
repnz
lret
push
call
lcall
shll
xor
flds
push
jbe
jb
aad
sub
jns
imul
or
dec
lcall
enter
sbbl
dec
mov
sub
repz
rclb
lfs
sbb
jecxz
fcmovnb
pop
sbb
in
jb
sbb
hlt
je
jle
push
leave
push
test
cmp
shll
std
adc
pop
fisttpl
loope
fcmovnbe
dec
jbe
mov
stos
loop
add
mov
cmpsb
cmp
movsl
dec
mov
loope
dec
dec
mov
mov
popa
push
loope
xor
pop
mov
sub
mov
pop
fcompl
fiaddl
xchg
rol
mov
xchg
rcll
mov
lods
jo
xchg
xor
jp
movsl
jg
mov
xor
movb
jp
xor
xchg
sub
adc
sbb
xor
stos
stc
adc
and
push
xor
mov
enter
and
iret
sub
xor
jg
pushf
sbb
cmp
cli
adc
lods
jmp
mov
repnz
iret
repnz
xlat
mov
xor
fwait
mov
mov
stos
cmp
cmp
in
stos
ja
and
je
arpl
jmp
push
cld
cmpsb
imul
pop
pop
icebp
sub
xchg
pop
pop
sub
xchg
mov
mov
daa
jb
sub
push
stc
adc
popa
addr16
mov
insl
cmc
push
mov
or
and
nop
sub
insl
loopne
loopne
and
mov
fnstcw
mov
in
addr16
push
call
lock
xchg
add
inc
icebp
mov
inc
push
bound
clc
xor
out
jmp
insb
insl
in
test
rolb
cmpsb
mov
dec
mov
ret
mov
bound
and
movsb
aam
adc
mov
in
cmp
push
sub
add
jb
cmc
dec
int
scas
sbb
imul
clc
mov
call
sub
lea
mov
mov
cltd
dec
pop
cwtl
popa
dec
ror
mov
rol
cmp
aaa
jle
add
enter
das
shlb
loope
inc
ficoms
dec
outsl
xchg
mov
push
cmp
jb
ror
inc
jl
cmpsl
pop
push
mov
das
cmpsl
fstpl
in
sub
pop
testl
add
fcompl
mov
push
xchg
loope
xchg
imul
push
pop
aam
lods
sbb
into
xlat
xchg
aam
mov
and
lret
push
jo
pusha
insl
mov
fld
negb
push
notb
or
push
mov
jmp
pop
xchg
dec
movsl
mov
in
enter
mov
mov
add
xor
or
out
jb
incl
mov
push
fiaddl
test
rorb
lock
sub
shll
call
jmp
hlt
lods
decl
jl
mov
and
and
cmp
inc
pop
push
shll
ja
mov
movsl
lds
stos
je
push
cltd
rorl
imul
jmp
push
insl
pop
sahf
inc
push
mov
xor
adc
add
cmp
jecxz
pop
pop
fidivrl
das
dec
addr16
jle
xchg
pop
and
movsl
cmp
rcll
ljmp
cmp
sub
xchg
nop
shlb
out
lock
jnp
lods
and
jno
lret
fadd
bound
xchg
dec
out
ret
icebp
xchg
xchg
popa
jle
mov
mov
jns
test
add
mov
adc
imul
clc
push
xor
icebp
mov
lds
icebp
nop
lret
and
lock
cltd
mov
arpl
push
inc
loop
mov
fidivs
outsb
pop
movsb
mov
mov
xchg
les
mov
add
lahf
pop
add
xchg
xor
cmp
popf
push
mov
and
icebp
sbbl
test
stos
enter
mov
cmp
adc
jge
sbb
scas
pop
inc
insb
jle
jge
pop
inc
loop
xor
lea
or
in
mov
and
clc
nop
in
sub
loope
mov
or
pcmpeqd
mov
jbe
dec
jmp
inc
jo
push
rcrl
xor
push
scas
cmp
repnz
xor
int3
jo
out
jo
and
int3
push
dec
movsl
cmp
lret
movsb
and
fsubs
sahf
mov
fs
mov
shl
outsb
mov
cmp
icebp
movsl
ljmp
or
sbb
ficoms
xor
mov
pop
pop
jmp
or
and
shrl
outsl
rcrb
pop
push
fistl
pop
and
mov
cmp
subb
test
lds
or
mov
jmp
testb
jb
inc
popf
dec
jb
popf
sub
pop
jno
shll
mov
movups
or
mov
movsb
or
mov
rcrb
mov
outsl
cmp
mov
cmp
jbe
int3
ret
lret
mov
xor
xchg
xor
int3
sarb
icebp
mov
push
mov
mov
mov
int
add
push
and
push
add
jae
sbb
test
add
cltd
cmp
es
cmp
push
mov
pop
test
pop
sub
or
scas
or
dec
add
repz
push
push
outsl
lret
inc
xchg
xchg
in
in
or
scas
inc
ret
jns
jmp
les
mov
addr16
andb
pop
sbbl
xchg
sbb
mov
in
pop
sbb
pop
ret
xchg
mov
ret
cmpsb
push
aam
jnp
movsb
ret
sti
mov
clc
fdivrl
test
mov
test
cmpsl
mov
xchg
dec
or
cmp
jno
insb
lods
vorps
push
in
stos
lret
push
das
inc
xchg
add
dec
int3
xchg
lret
jns
mov
push
add
pop
daa
mov
xor
adc
xor
out
or
mov
mov
adc
adc
test
mov
and
fwait
jg
push
mov
repz
dec
xor
imul
mov
imul
cli
int3
mov
das
aas
xchg
xor
cmpsb
sbb
sbb
xor
pop
addr16
mov
jb
inc
test
and
inc
aad
pop
lods
pop
or
push
xchg
pop
orl
inc
adc
inc
imul
sub
aad
sahf
sub
mov
stc
lds
mov
mov
sbb
es
xor
in
inc
mov
mov
pop
fisubrs
xor
jp
inc
iret
inc
and
icebp
push
lds
stos
repz
fmuls
dec
adcl
pop
fs
shlb
addr16
int
inc
lret
negb
aam
push
add
ret
lret
mov
scas
jl
sub
sahf
cmp
rcrb
mov
sub
jnp
inc
sahf
imul
fcoms
sbb
sub
pusha
enter
xor
push
ret
pop
ret
add
rorl
repnz
stos
enter
mov
lds
cmc
imulb
and
dec
inc
or
or
push
mov
sub
test
inc
xor
outsw
sbb
mov
rcrb
or
scas
jae
sub
stc
and
and
push
popf
cmp
push
lock
cmpb
mov
xchg
xlat
cmpsb
adc
dec
popa
push
adc
aas
cmp
cwtl
sbb
mov
scas
and
into
inc
cmpsb
xchg
add
iret
leave
pop
xchg
mov
mov
pop
xor
xchg
mov
mov
leave
imul
in
lods
adc
call
cld
cmp
and
adc
lahf
dec
ret
cltd
fcmovu
mov
mov
gs
mov
pop
adc
push
push
push
pop
fst
inc
out
test
cwtl
add
push
test
cli
iret
cmp
mov
pop
lret
mov
out
inc
iret
xor
jae
es
nop
push
adc
cmp
aam
test
inc
int3
negl
das
and
mov
out
in
bswap
pop
mov
and
jle
xor
aad
fistpll
mov
add
dec
imul
dec
divl
push
jmp
int3
lods
fldt
fldl
adc
out
aas
lahf
and
mov
scas
mov
mov
je
mov
stos
popa
loope
filds
daa
mov
cmp
addr16
ja
pop
xchg
xor
movsb
push
dec
movsl
cmpsl
pop
or
out
push
js
push
push
cltd
mov
sub
stos
xchg
scas
mov
push
fwait
aad
call
push
stos
jge
jns
daa
pop
sbb
jne
xchg
xorl
out
sbb
cmp
movsl
pop
lock
cmp
ljmp
push
ficomps
or
mov
in
imull
mov
jmp
push
cmp
in
sub
aas
popf
inc
cmp
movsl
into
icebp
js
call
push
daa
xor
sub
addb
push
inc
mov
cmc
inc
cmp
lds
lods
test
imul
sahf
jg
add
sub
xchg
mov
jl
adc
out
jns
and
ret
mov
ret
iret
neg
mov
xor
xor
xor
jne
ds
mov
jnp
cmpsl
xlat
jne
cmp
shlb
stos
xchg
clc
leave
mov
or
call
dec
testl
push
mov
push
dec
and
push
jne
xchg
jg
and
lret
stos
pop
cli
popf
test
xchg
cmp
xor
pop
xor
lret
pop
xchg
int
icebp
pop
mov
sbb
out
out
cld
rorb
dec
roll
mov
fnstcw
push
ss
and
pop
and
lods
jle
add
jbe
les
push
mov
pop
pop
inc
aad
jno
lock
jge
insl
arpl
lea
jno
inc
fisubl
xchg
lcall
imul
repz
sub
cmp
dec
filds
adc
fcompl
dec
cltd
jo
sub
or
insl
and
sbb
movsl
orb
mov
xor
aaa
dec
fiaddl
adcl
adcb
sub
jno
ss
lret
rclb
adc
push
push
dec
add
lcall
je
and
inc
xchg
jl
fidivl
pop
jbe
int3
sub
pop
adc
sub
cmp
and
in
pop
sub
cmp
cwtl
xor
lret
push
sub
or
xchg
fnstcw
icebp
pushf
in
mov
leave
out
sahf
bound
and
mov
pushf
mov
daa
shl
mov
push
ss
or
xchg
cmp
mov
ret
jle
inc
xchg
aam
jns
cwtl
and
test
leave
bound
bound
push
repz
jae
popa
and
ds
pop
ds
mov
outsl
mov
add
mov
pop
push
dec
push
add
lock
xor
mov
sub
mov
clc
or
add
mov
sbb
jecxz
push
adc
mov
stc
mov
test
mov
mov
add
std
sub
sub
mov
dec
xchg
cmp
test
add
rcl
fstpl
negw
sbb
inc
addl
or
mov
inc
ljmp
adc
pop
jl
xor
and
sub
dec
sti
lock
into
push
xlat
inc
cli
xor
push
inc
pop
cli
andl
jae
out
ds
xchg
in
or
xor
xchg
pushf
sub
fdivrl
ret
lods
out
or
xlat
adc
xchg
aas
inc
mov
xor
nop
mov
cmpsl
ret
jmp
pop
gs
popa
cmpsl
mov
xor
sub
pop
jl
call
hlt
cmp
jbe
rol
in
pop
test
or
test
or
fcoms
push
xchg
mov
push
adc
jb
dec
push
lock
jmp
fldenv
adc
dec
sub
xor
js
mov
cmp
cwtl
or
add
in
pushf
cld
int
dec
cmpsl
mov
pop
orb
std
inc
mov
mov
popa
xchg
scas
mov
xor
add
jle
and
lea
inc
in
lahf
push
movsl
out
test
jb
mov
movsb
nop
cwtl
inc
fcomip
ret
cmp
in
or
cmp
mov
out
cwtl
mov
sbb
pushf
dec
push
dec
cltd
push
pop
loope
es
in
sbb
adc
add
xchg
fbld
adcl
lock
mov
dec
sub
sti
imul
xor
add
call
ret
mov
sub
and
mov
les
adc
outsl
push
adc
fsub
mov
add
pop
subb
bnd
inc
mov
out
push
push
pop
push
jmp
inc
test
xor
jmp
fcompl
xchg
pop
mov
jg
subl
mov
add
or
pop
imul
sbb
sub
das
rclb
dec
mov
inc
push
sub
cmpsl
arpl
sti
jae
in
notl
xor
popf
dec
fwait
jae
add
cwtl
arpl
test
add
out
pop
shll
dec
ljmp
xchg
das
mov
loope
push
mov
pop
int
loopne
or
clc
dec
negb
js
mov
loop
call
aad
pop
dec
cli
jbe
lcall
je
sbb
loop
stos
aaa
ret
dec
sub
faddl
add
aam
testb
push
dec
push
das
mov
sbb
and
in
addr16
scas
pop
and
push
sbb
shlb
fwait
ret
das
push
jns
jne
leave
push
jne
xchg
fwait
inc
jns
jg
jns
loope
fsts
and
in
stos
int
lods
adc
in
insl
in
out
clc
cltd
adc
pop
lods
inc
addr16
adc
iret
xor
xrelease
xor
push
xchg
fiaddl
xor
testl
sbb
shlb
xorb
enter
sub
pop
pop
push
adc
jp
push
inc
add
cmp
mov
add
adc
shrb
mov
mov
jmp
mov
test
outsb
rorl
mov
mov
loope
and
dec
in
aaa
pop
pop
in
inc
jbe
outsb
xchg
jecxz
popf
pop
in
xlat
rolb
jge
xchg
jg
ret
data16
cs
adc
push
xchg
fimull
inc
movb
push
push
push
lods
ljmp
in
repnz
cmp
lock
jns
pop
arpl
mov
mov
or
mov
inc
sti
imul
fadd
add
push
fcmovbe
adc
mov
lock
or
pop
sub
jne
subl
xlat
push
xor
lret
ret
movsb
xchg
popf
xor
jg
xchg
or
and
jecxz
scas
test
mov
fstpl
std
jecxz
andl
xchg
js
outsl
inc
sub
loopne
add
jmp
mov
xor
and
pusha
push
or
insb
imul
dec
xor
jge
popa
dec
ljmp
jb
fdivl
push
stos
iret
mov
test
pop
aas
enter
pop
mov
aas
pop
dec
xor
movups
sahf
lock
gs
xor
dec
mov
push
dec
addr16
inc
xorb
pop
sahf
test
out
jecxz
outsl
dec
sarl
int3
out
repz
sub
rcrl
and
inc
sbb
cs
arpl
aas
lods
mov
cwtl
sbb
dec
xchg
leave
xor
push
ret
xchg
sbb
rcrl
cmp
clc
mov
loop
icebp
ss
roll
lret
jnp
mov
mov
imul
pop
mov
aam
xchg
mull
in
mov
mov
rcrb
xor
sub
gs
shrl
cmc
pop
data16
lcall
xor
pusha
mov
ret
inc
cwtl
add
xor
add
out
cli
mov
test
arpl
mov
popf
mov
in
das
jmp
pop
insb
lods
sub
dec
sbb
pushf
cmpsb
movsl
sub
lock
or
loope
adc
jecxz
jno
movsb
dec
psrad
out
ss
cmp
je
loope
inc
test
jbe
fwait
sub
cs
jno
xchg
insl
rorl
xorl
cmpsl
cmp
pop
lods
pop
call
gs
inc
movsl
pushf
notl
mov
adc
cmpsl
jo
inc
sti
sbb
push
mov
mov
mov
fcmovnbe
aad
int
fs
sub
roll
sbb
push
or
int
push
push
shl
adcl
inc
xchg
fldt
test
fiaddl
shlb
adc
inc
jmp
add
cltd
repz
dec
ja
cld
mov
cmp
and
or
pop
shrl
mov
data16
loop
insb
out
sahf
notl
xorb
pop
lods
ret
mov
cmc
out
iret
adc
dec
adc
out
cli
aas
pusha
cmp
mov
in
hlt
mov
imul
ret
cli
sti
sti
pop
push
pop
ret
ficoms
cwtl
cwtl
cmpsl
sar
xchg
pop
xor
push
clc
pop
test
gs
inc
fcoml
in
rcrl
mov
repnz
cmp
mov
jg
insb
pop
out
xor
stc
std
push
flds
or
cmpb
rcr
xor
adc
xchg
mov
and
pushf
je
mov
and
push
cmp
adc
xor
cli
xchg
or
stc
insl
cmp
clc
dec
mov
and
fisubl
lock
and
test
lcall
neg
cmp
cmp
cmpsl
inc
jns
jge
cmp
imul
adc
xchg
mov
pop
inc
into
sbb
and
scas
sahf
add
cmp
popa
mov
inc
push
push
pop
xor
inc
aad
jnp
cmp
sar
stos
mov
andl
fnstsw
jp
jmp
add
push
mov
sub
inc
push
test
xchg
mov
sbb
fcomps
imul
les
and
shl
jg
rcrb
icebp
xchg
dec
sbb
movsl
sbb
inc
leave
jbe
into
lret
loope
roll
cs
add
cwtl
and
out
sbb
out
daa
or
inc
es
or
ficoms
ljmp
dec
and
cmpsl
cltd
cltd
mov
enter
sbb
mov
pop
fcmovu
jns
out
mov
scas
andb
pop
pop
jo
pusha
mov
jb
cmpsl
std
sub
jg
ret
int
in
ficoms
add
pop
repz
std
mov
push
aad
push
fdivs
repnz
bound
add
push
adc
rorb
pop
popa
pop
xor
inc
popf
fnsave
xor
cwtl
push
add
xchg
and
inc
ret
dec
sarb
dec
pop
lods
in
jmp
jns
pop
movsl
stc
push
call
dec
movsb
imul
scas
adc
sbb
mov
sbb
imulb
push
nop
test
daa
cli
mov
add
daa
outsl
ret
enter
mov
mov
pop
scas
mov
xchg
or
pop
icebp
mov
mov
pop
jecxz
shlb
dec
test
push
sub
xchg
mov
and
xor
mov
fsubrs
test
mov
pop
fcomi
sub
push
outsb
sub
bound
mov
insl
rolb
pop
in
or
popa
roll
jmp
push
setnp
ds
int
mov
jge
lds
in
mov
push
pop
test
clc
shlb
lods
je
xchg
arpl
scas
testb
pop
sub
js
lods
or
sbb
pop
ljmp
sub
stc
sub
and
push
fidivrl
lahf
sbb
xchg
fildl
jne
push
add
sub
hlt
sti
je
sti
dec
out
mov
arpl
lret
lods
pop
inc
push
pop
adc
cmp
fcomps
cmp
mov
fsubrs
fistpl
mov
addb
jno
push
sbb
sub
shlb
or
sub
imul
xchg
lcall
stos
push
testb
inc
in
sub
aas
add
jb
cmp
pusha
out
pop
mov
pushf
cli
rorl
jmp
insb
ds
inc
lahf
dec
movsb
push
mov
inc
adc
inc
mov
test
cmp
push
fiadds
scas
movb
inc
mov
fisttpl
enter
sbbb
fldl
repz
jp
add
push
out
xchg
test
inc
push
ss
xchg
je
fidivs
fmulp
pop
mov
shrl
push
xchg
mov
pop
inc
movsb
mov
mull
icebp
cmp
lret
push
adc
in
lret
popa
or
and
call
mov
test
xor
fiadds
push
repnz
popf
cmpl
jp
loop
nop
pop
out
pcmpeqb
jg
shrb
int3
push
scas
int3
xor
aam
outsb
je
pop
pushf
loope
mov
push
jb
and
shlb
adc
ret
arpl
mov
xorl
ljmp
or
mov
push
ret
cmp
cwtl
insb
or
jge
mov
gs
aad
nop
jns
rcr
mull
sub
inc
out
leave
mov
stos
xchg
push
mov
inc
je
mov
add
xchg
pop
imul
mov
aas
bnd
dec
aad
or
cmp
adc
imul
push
pushl
movsb
cmpsl
into
adc
jnp
xchg
arpl
mov
xor
push
mov
aaa
cmp
es
inc
outsl
and
pop
lods
cmp
sbb
ljmp
inc
xchg
add
cmp
add
data16
lcall
pop
shll
push
out
xchg
jg
out
xlat
mov
insb
xchg
aad
adc
stos
mov
jmp
hlt
dec
push
adc
fld
inc
inc
ret
cmp
movsb
sbb
or
icebp
or
cmp
inc
ja
xchg
call
test
lock
inc
mov
mov
sub
mov
mov
mov
je
pusha
inc
popa
lods
call
add
cmp
addb
inc
cld
popf
loopne
fdiv
loop
test
jge
cmp
mov
xchg
jno
call
loope
push
rol
pop
std
in
mov
gs
add
fistpl
in
xchg
or
addr16
in
pop
into
daa
fwait
movsl
mov
adc
leave
fisubs
scas
loopne
test
sbbl
ljmp
mov
test
jno
fstps
sbb
div
jecxz
jns
cmp
sti
inc
addr16
adc
inc
add
das
aas
addl
popa
cmc
jl
nop
popa
leave
shr
jle
mov
jnp
arpl
xchg
pop
test
and
inc
imul
into
jb
inc
inc
ss
cmp
int
loope
xor
pop
cmp
test
jo
loop
popa
inc
mov
fldl
repnz
dec
lock
push
mov
dec
test
mov
sbb
arpl
cmp
pop
inc
pop
clc
cmpsb
add
scas
faddp
sbb
sahf
sub
xchg
lock
lret
rcr
mov
out
sub
fdivl
or
jnp
or
dec
outsb
pop
add
push
xor
push
lea
leave
sub
jno,pt
in
adc
cwtl
fists
mov
push
shl
jo
icebp
jl
pusha
and
pusha
push
or
dec
add
push
sbbb
out
push
rolb
lahf
pushf
sbb
rcl
pop
dec
mov
dec
mov
lods
add
jecxz
and
in
lcall
loope
pop
inc
pusha
jg
in
scas
test
cmpsb
mov
pop
push
cmp
pop
mov
pop
adc
dec
jmp
mov
cltd
lods
das
or
ret
out
pop
mov
cmpsb
push
popl
sahf
and
inc
dec
cmpsb
outsl
jae
in
imulb
and
bound
popa
xchg
pop
jp
and
mov
stc
stos
scas
leave
and
std
dec
push
adc
jne
mov
mov
cmp
adc
and
push
lcall
lcall
gs
ljmp
xchg
push
adc
test
enter
dec
xchg
repnz
pushf
or
jb
rorb
mov
dec
mov
inc
jb
mov
std
jo
add
or
popf
idivl
cmp
lock
rolb
dec
cmp
push
add
iret
cltd
movsl
ret
repnz
hlt
push
sti
jb
sub
hlt
add
mov
cmc
inc
jo
mov
idivb
std
hlt
add
fiaddl
dec
push
int
adc
xchg
mov
pop
addr16
inc
pusha
ror
xor
push
inc
int3
out
movl
add
pop
xchg
pop
cmp
into
sar
sub
std
pop
mov
adc
in
loope
ret
mov
lret
push
shl
outsb
xlat
and
or
jl
or
jb
add
stc
push
stos
les
dec
mov
cmp
dec
pop
mov
addl
testb
pop
loope
in
mov
adc
mov
lret
mov
sub
test
stos
mov
es
push
das
jns
mov
rcrb
ljmp
lods
arpl
rcrl
out
pop
mov
mov
shlb
scas
repnz
pop
xlat
pop
jb
sarl
jmp
loopne
push
push
inc
out
jne
or
bound
sub
jmp
ss
stos
inc
adc
stos
cwtl
inc
push
cmp
push
inc
psubusb
dec
push
rclb
lods
cld
dec
loope
push
das
sub
in
dec
pop
test
int3
popf
adc
push
adc
xchg
pop
fiaddl
and
ss
and
sub
mov
mov
adc
loope
pop
mov
mov
sarl
call
jno
cmp
mov
das
pop
jle
leave
cmp
xor
insl
jmp
out
jmp
popf
inc
test
add
ljmp
and
lahf
cmp
add
xchg
xchg
jbe
cmp
scas
lods
mov
cmpsb
jmp
mov
dec
lock
cld
mov
and
dec
shl
jbe
push
dec
push
inc
mov
cmp
push
jb
stos
nop
push
sbb
xor
inc
mov
les
fnstenv
and
cmp
shll
sub
ds
ret
sbb
popf
xchg
into
push
adc
std
xchg
push
scas
popf
mov
pop
xor
lahf
rolb
fmuls
outsb
sub
push
cvttps2pi
adc
ret
push
sbb
xorl
pop
push
xchg
mov
imul
dec
jo
int3
cmpsl
sbb
loopne
data16
lods
adc
mov
data16
div
add
jg
clc
jle
dec
adc
mov
loopne
int3
mov
test
pop
add
adc
adcl
scas
dec
or
sbb
mov
xchg
lea
into
xchg
popf
je
dec
xor
ret
and
test
mov
cmp
jno
adc
in
xor
in
or
out
dec
and
pop
jb
daa
sub
int
mov
lds
jb
ja
and
mov
adc
cmp
mov
push
cmc
ja
cmp
jb
xchg
popa
jmp
aam
std
inc
cmpsb
lret
out
push
fcmovbe
fldcw
add
inc
in
cmp
add
mov
js
ret
pop
cld
sub
xchg
and
mov
leave
lret
ljmp
xchg
mull
jne
inc
sub
dec
adc
lcall
addb
pusha
push
out
rcll
insb
adc
out
in
push
push
cmpsl
scas
test
push
into
mov
jbe
jne
in
ret
mov
push
mov
dec
sbbl
mov
sbb
out
mov
stos
mov
mov
add
pop
xchg
fs
ds
sahf
xor
rcl
add
push
lea
mov
in
sti
jle
mov
dec
dec
into
pop
jo
sub
loopne
loopne
cmp
call
mov
sub
outsw
ds
jno
lcall
sbb
pushw
out
mov
lahf
xchg
cmp
shll
stos
aas
inc
add
add
inc
push
out
sbb
xor
jno
jae
push
repz
pop
mov
push
push
inc
push
shrb
ficoml
add
adc
iret
inc
push
xor
push
inc
out
cmp
sti
in
jg
cmp
hlt
mov
ljmp
and
aaa
sub
sbb
xchg
push
out
arpl
jno
jmp
inc
rcrl
ja
sub
mov
dec
clc
sub
xlat
rorb
pop
cld
xchg
xlat
hlt
lods
loop
int3
adc
adc
ret
cs
enter
pop
adc
pop
mov
add
enter
int3
mov
mov
ret
icebp
ja
jns
adc
ljmp
jae
pop
rol
sti
add
cmpsl
imul
pushf
cltd
adc
xchg
loope
xchg
push
sbb
insb
cmpb
daa
jl
jge
sbb
mov
daa
add
pushf
lahf
imul
hlt
jmp
mov
xchg
lahf
shll
inc
cmp
sbb
jge
pop
mov
or
test
lret
pop
sub
lods
shlb
insb
push
jnp
arpl
sub
mov
outsl
scas
lret
xchg
aad
pop
clc
push
outsb
and
lods
inc
mov
lret
lahf
repz
cwtl
and
icebp
pop
jg
sbb
pusha
fmull
das
test
xchg
xor
mov
add
sub
popl
mov
pop
add
push
lret
inc
sbb
frstor
jle
mov
sub
mov
std
nop
fucomp
jmp
gs
mov
mov
xchg
out
cmpsl
movsb
pop
insb
fisubrs
stc
popa
cwtl
xchg
pop
frstor
sub
scas
stos
std
clc
out
push
sub
xchg
pop
popa
fwait
repnz
jg
ret
add
jecxz
jecxz
iret
xchg
add
or
test
dec
ret
mov
out
cltd
mov
pushf
fnstenv
cmp
loop
jmp
pop
add
out
sub
mov
nop
mov
mov
sub
and
popf
cmp
push
scas
sbb
mov
seta
and
jle
test
mov
iret
adc
sbb
push
push
jbe
shrl
or
cwtl
out
test
pop
pop
loopne
fisubrs
sub
xor
cli
stos
cmp
push
push
mov
fisttpll
and
cmp
mov
lods
inc
mov
cmpsl
pushf
icebp
mov
mov
loop
xchg
scas
sub
or
ds
ja
xor
adc
push
xor
mov
ja
rorl
and
outsb
sbb
xor
or
sbb
call
jmp
xor
push
push
mov
fsubl
push
mov
fisubrl
stos
adc
xor
inc
fcoms
sub
lods
mov
add
mov
pop
and
xchg
dec
test
enter
mov
jge
out
inc
mov
fsts
rcrb
mov
enter
mov
pop
cmp
iret
jle
mov
sbb
pusha
sub
aad
out
int
mov
out
mov
mov
leave
sbb
inc
scas
mov
stos
jge
rclb
inc
add
hlt
sahf
pop
pop
cmpsl
sbb
jl
add
test
mov
xchg
cmp
or
mov
jo
jnp
frstor
aas
fcoml
inc
inc
mov
mov
orb
jne
push
or
dec
repz
test
mov
in
dec
das
add
or
stc
cmp
pop
sbb
fidivrs
mov
cmp
les
clc
fadds
icebp
jle
push
popa
mov
and
mov
lret
jae
and
lret
movsb
rorb
mov
adc
mov
fidivrl
xchg
ja
adc
pop
das
mov
pop
xchg
dec
mov
insb
or
aaa
pop
rcrb
in
ja
push
cmp
dec
mov
dec
repz
loopne
pop
mov
mov
loopne
xchg
jge
repnz
xchg
and
aaa
outsb
dec
jnp
mov
fdivl
sub
mov
mov
ljmp
pop
ficompl
and
into
xor
rclb
sub
hlt
xor
in
push
in
les
mov
insb
mov
mov
inc
ljmp
adc
mov
fistps
sbb
sti
gs
push
add
mov
test
inc
insl
and
cwtl
mov
outsb
and
push
or
popa
and
mov
sub
rorl
ret
sbb
mov
sbb
adc
inc
adc
xor
push
sbb
dec
mov
loope
outsl
mov
push
fimull
fidivrl
push
lock
jg
jae
fsts
mov
ljmp
push
push
xlat
repz
fldenv
xchg
xchg
cmp
ret
orl
mov
out
lds
inc
cmp
lods
std
fists
pop
sbb
sub
test
dec
in
ss
jle
mul
push
clc
xorb
pop
jb
in
mov
jg
jp
xorl
mov
mov
xor
push
mov
aad
push
es
out
jns
movsb
movsl
push
fimuls
cmpb
pop
decb
pushl
scas
gs
test
rcll
mov
add
cmp
shlb
xor
lret
loopne
out
test
repz
xchg
push
outsl
inc
sbb
inc
and
pusha
sbb
fidivl
pop
xor
in
cmpsl
ja
dec
shlb
xchg
repnz
std
mov
pop
push
out
push
xchg
xchg
cmp
scas
popl
sub
add
rorb
dec
insb
xor
mov
pop
fs
aas
push
lret
and
sub
sbb
sub
jp
push
iret
xlat
mov
push
jg
push
cmpsl
lods
jo
jmp
jp
mov
gs
loopne
outsl
cwtl
rcll
sahf
arpl
fsts
aam
lods
add
dec
pop
dec
jnp
xor
mov
mov
adc
mov
pop
add
ljmp
test
xchg
arpl
out
lahf
sti
je
pusha
ja
cmpsl
orb
xlat
push
inc
jl
das
push
gs
jo
pop
inc
shlb
lcall
iret
out
xchg
int3
sub
xchg
mov
fsubrl
packuswb
jb
push
pop
mov
lcall
jmp
pop
scas
jmp
xchg
bound
aad
push
inc
clc
mov
lret
jmp
lahf
and
rcrl
mov
push
xchg
cltd
or
in
mov
vpmacsdd
mov
movsl
jno
push
push
jg
and
add
pop
andl
cmpsb
dec
andl
call
sbb
mov
jae
lret
lcall
fsubr
inc
adc
mov
mov
cld
sahf
in
fisttpl
ds
test
add
and
bound
fidivrl
popf
test
fadds
adc
cltd
into
xchg
xor
enter
arpl
xor
test
push
sarb
pop
dec
dec
mov
sub
push
loope
xchg
test
jno
xorl
sub
pop
add
sti
mov
inc
mov
shl
cli
loopne
iret
fsubl
fs
mov
aad
push
lods
scas
inc
xchg
das
ja
in
jle
add
mov
add
cmp
ret
cmp
mov
aaa
mov
mov
orl
mov
jmp
xor
mov
sbb
addr16
push
negl
sub
div
pop
aaa
mov
insl
jmp
inc
test
mov
cld
es
push
std
push
inc
bound
fs
mov
add
cmp
add
pop
das
rcll
in
push
xor
mov
xchg
sbb
lahf
jbe
dec
cmp
add
bound
hlt
jecxz
cmpsb
mov
pop
filds
mov
jae
jle
hlt
iret
dec
mov
adcb
mov
sbb
sub
pop
int3
scas
cmpsl
lcall
stos
movsl
mov
rcrb
mov
sbb
into
sbb
daa
mov
inc
xchg
aaa
and
mov
ss
dec
jbe
out
xchg
jae
xchg
inc
repz
fiadds
pop
add
and
loop
push
adc
out
mov
sti
mov
outsb
rcrb
popa
sbb
imul
sub
xor
xchg
fsts
xor
dec
xlat
aam
xor
aam
lods
fsubrl
idiv
popa
inc
sub
test
daa
sub
add
ja
cmp
stos
call
dec
sub
add
gs
cltd
dec
xorb
inc
and
dec
add
scas
xor
sbb
sub
lock
cli
in
pusha
adc
testl
inc
das
mulb
mov
jl
or
pop
jb
cmp
stos
lods
adc
push
dec
mov
jg
sub
cwtl
xchg
and
xchg
je
lcall
dec
jecxz
pop
iret
dec
adc
jecxz
add
mov
mov
lods
ja
into
adc
into
or
lds
mov
dec
lods
outsl
pop
leave
mov
mov
cs
adc
and
movsl
adc
sbb
jle
pop
mov
repz
xor
or
mov
loopne
push
fsin
sub
mov
inc
add
icebp
pop
flds
pusha
rcll
lds
jle
enter
fldt
shrb
mov
inc
shr
pop
dec
adc
push
int3
sub
jl
sub
das
test
push
or
loopne
mov
rclb
xor
mov
cmpsl
sahf
pop
mov
out
cli
push
cwtl
mov
lret
pop
mov
lods
mov
xlat
mov
jbe
ljmp
mov
jmp
rcrl
stos
or
xor
dec
hlt
push
pop
dec
mov
push
loop
sub
adc
fimuls
xchg
or
mov
push
das
lret
call
movsl
negb
pop
dec
imul
movsl
shr
mov
inc
mov
xchg
ucomiss
sub
mov
cmp
jle
lds
mov
adc
lods
adc
ret
aad
cmp
popf
sub
dec
mov
or
nop
lret
push
je
push
jl
shlb
jne
and
or
aaa
mov
add
rcrb
movsb
mov
xchg
xor
sub
fwait
lret
or
pop
das
int
sub
push
push
mov
push
mov
xchg
push
add
push
lahf
lret
jne
xor
leave
arpl
xor
std
data16
sub
cmp
add
add
xlat
inc
mov
out
bound
rorl
pop
cltd
jecxz
adc
mov
mov
add
iret
subl
add
out
popa
ss
pop
in
sub
jns
add
stos
fdivs
sti
fs
aam
xor
mov
negl
shll
mov
jbe
shrb
rorl
and
insl
idivb
push
cmp
inc
inc
xchg
adc
repnz
dec
and
inc
cmp
daa
sub
mov
out
sbb
xor
and
inc
cmp
push
xor
addl
fbstp
inc
call
jp
cld
push
sahf
inc
or
fdivrl
sbbb
lret
fs
lea
mov
jp
mov
les
dec
ds
aam
out
mov
push
xchg
pop
ds
test
std
xor
pop
mov
pop
xchg
inc
cmp
ja
ss
bound
shl
and
and
dec
test
out
adc
cmp
dec
xor
fs
fcmovnbe
adc
mov
inc
filds
ficomps
fdivrs
aad
rcr
lahf
pop
xchg
popa
nop
mov
xchg
es
popa
insb
mov
push
lea
dec
pop
test
stos
imul
je
mov
pop
popf
xchg
or
int
mov
add
pop
xor
sbb
loope
cmp
lods
and
out
mov
out
lret
bound
loope
xchg
sub
in
leave
add
push
sbb
or
mov
sahf
scas
mov
lea
sahf
xchg
xchg
ficomps
push
mov
xchg
hlt
sarl
pushf
lods
xor
sbb
and
imul
add
jp
and
lret
mov
xor
pusha
lcall
int3
icebp
sub
addr16
sub
mov
movsl
shrl
jp
movsb
aam
adc
repz
jecxz
fs
js
push
xchg
stc
pop
xchg
mov
xchg
adc
inc
cmp
push
mov
es
movl
scas
test
aas
jmp
push
pop
lock
das
lret
pop
pop
insb
les
dec
popf
sarl
pop
or
and
out
int
fisttpl
sub
ss
inc
imul
and
sub
jne
mov
loopne
jb
sub
ret
sub
repnz
push
arpl
gs
mulb
xlat
cmpsb
or
or
sbb
xor
xchg
dec
ret
in
imul
imul
xor
add
insb
add
ljmp
add
or
pop
or
or
mov
mov
xor
out
sbb
cld
std
movsb
inc
sbb
aaa
negb
sbb
aad
sbb
leave
push
cmp
push
jge
and
dec
nop
pop
and
sbb
mov
repnz
pop
and
inc
mov
xchg
fimull
pop
out
jg
repnz
gs
xchg
movsl
jb
cmc
or
push
imul
mov
sbbb
cltd
inc
add
bnd
pop
shlb
mov
jo
sti
or
lods
and
dec
movsl
int3
pop
sbb
adc
inc
sub
sahf
fistps
xlat
test
mov
jle
sbb
lds
sbb
repnz
pop
orl
sbb
jmp
add
cmpsl
cmp
sbb
mov
mov
daa
mov
xlat
cmc
mov
leave
push
dec
xchg
mov
imul
js
dec
add
push
cmpl
iret
adc
mov
jle
pop
popf
lret
jo
pop
movsb
out
xchg
pop
adc
mov
push
push
mov
out
in
rcrl
or
out
push
jl
test
xor
xchg
sub
dec
ds
dec
and
add
repz
xchg
cmp
and
mov
mov
or
icebp
mov
js
push
lods
outsb
or
daa
gs
movl
mov
jno
adc
xor
scas
or
xchg
lock
and
mov
push
or
add
mov
nop
mov
jb
lret
cmp
pop
das
dec
cmovb
sub
fwait
ds
cmp
xlat
loope
test
add
repnz
sbb
sbb
push
push
lret
into
pmaxsw
cli
lds
lods
inc
mov
mov
cmpsl
es
dec
mov
and
mov
push
sbbl
add
sti
clc
push
fbld
mov
add
fwait
cltd
repz
sub
mov
negl
mov
js
jae
add
or
mov
xor
scas
dec
shrb
jae
sub
imul
and
mov
jg
movsb
imul
pop
loope
jg
inc
enter
cmpl
iret
sub
push
movl
cltd
wrmsr
out
and
sub
test
fcompl
inc
shrl
sbb
bswap
xchg
dec
movsb
and
cmpsb
add
mov
jo
daa
and
cld
adc
add
xchg
jmp
jle
inc
sub
xchg
cld
mov
je
loopne
mov
lret
adc
sbb
aas
adc
pop
xchg
shlb
mov
push
outsb
adcb
or
mov
es
arpl
test
aas
outsl
mov
adc
sbb
jns
mov
bound
mov
scas
push
lret
push
dec
sbb
xchg
jge
aad
jmp
cltd
data16
xchg
or
sbb
jbe
lret
dec
out
hlt
out
imul
mov
insb
sub
mov
adc
scas
dec
ret
vpmuludq
inc
mov
rorb
add
jns
sbb
mov
lret
std
mov
adc
xor
cwtl
cmpsl
stc
shlb
or
sbb
mov
jbe
je
leave
pop
add
mov
sbb
xchg
aad
fs
xchg
aaa
imul
ds
push
mov
cmp
popa
inc
popf
shrl
das
or
aad
push
lea
cmp
push
inc
in
lea
orl
cmpsb
xchg
cmpsb
data16
xor
stc
punpckldq
push
leave
mov
adc
jmp
sub
call
scas
lahf
fadd
gs
shll
ljmp
cmp
js
lods
xor
stos
xor
cld
jno
jbe
sbb
arpl
cmc
and
mov
add
push
clc
sti
ret
das
imul
adc
dec
xchg
cmpsl
loop
lods
dec
aaa
int3
sub
into
mov
or
jmp
aas
dec
test
daa
stos
test
jp
imul
cmp
in
andb
cli
insl
inc
sbb
cmpsb
sbb
jnp
push
mov
fs
stos
andb
lret
pop
lahf
fldcw
inc
aas
shrl
lret
imul
mov
notb
imul
scas
ucomiss
test
pop
pop
xchg
inc
movsl
cmp
cld
das
or
jecxz
lods
mov
lret
dec
fwait
xchg
call
push
add
mov
mov
repz
adc
push
test
cwtd
loop
int
cmc
cmc
mov
mov
push
push
mov
insb
xor
jo
cmc
sbb
xchg
mov
outsb
ret
jnp
repnz
outsb
test
or
xor
test
imul
pop
adc
lock
scas
mov
and
test
leave
cmp
xchg
and
and
ds
fnstsw
sub
jno
mov
and
adc
movsb
dec
std
into
dec
mov
fsubs
pop
sub
stos
or
repz
and
xor
adc
adc
or
lret
mov
shrl
dec
jecxz
mov
dec
xchg
jmp
push
mov
sbb
fisubrs
fsubrl
jg
ror
push
mov
cld
movsl
dec
add
dec
cli
mov
test
xchg
dec
mov
mov
cmp
out
xor
fstl
mov
and
bound
ja
sub
and
iret
outsb
push
and
dec
add
jne
jns
sbb
mov
movl
fnstsw
inc
jge
jl
aas
repnz
dec
jns
inc
lds
cmp
test
cltd
dec
outsl
dec
push
jge
mov
repz
jb
fwait
and
les
xchg
inc
nop
mov
das
idiv
mov
mov
mov
ret
pop
mov
scas
aaa
daa
out
in
jno
bt
ja
movsl
loopne
movsl
pop
es
stos
add
pop
mov
jmp
lods
sbb
jg
sub
test
push
into
loope
xchg
or
inc
scas
or
stc
mov
jno
pop
push
cltd
jne
adc
out
lock
pusha
jg
inc
xor
push
roll
stos
lds
mov
lret
push
jne
fisubl
jge
sbb
aas
and
jo
das
mov
in
sub
test
pop
xchg
push
icebp
xchg
in
push
popa
inc
xchg
push
std
jl
add
dec
fs
cmpsl
add
sbbb
out
popf
push
into
ss
test
push
jp
cmp
xchg
mov
in
ss
lock
fsubrl
cwtl
jmp
mov
sub
test
add
cltd
mov
cs
fdivrl
enter
scas
mov
pushf
loopne
ljmp
stos
shl
mov
mov
cli
xchg
mov
lcall
xor
je
pop
cmp
les
pop
rorl
xor
pop
push
insl
dec
mov
leave
mov
insl
jns
sub
leave
and
cmc
mov
inc
test
repnz
push
jnp
sbb
in
test
fwait
cld
cmp
mov
es
lea
and
orb
aad
lcall
cmp
fdivl
push
or
xlat
shll
pop
inc
mov
lret
fisttps
inc
mov
mov
inc
xor
cmpsl
les
imul
sbb
push
or
cmpl
das
ljmp
fs
push
scas
push
pushf
out
push
call
xor
inc
popa
rorb
inc
fs
shr
mov
test
xchg
sub
pop
popa
fsubl
lahf
xchg
jp
test
pop
or
shrb
pusha
cmpl
int3
dec
insl
ljmp
scas
xor
mov
xchg
fwait
pop
ror
repnz
xor
jns
test
mov
psubb
jnp
sbb
test
mov
mov
xor
js
outsb
mov
or
push
jecxz
roll
sbb
or
subb
and
jno
stc
mov
out
loope
shlb
xchg
push
std
mov
ret
xchg
jmp
lret
mov
stc
mov
gs
xorb
dec
xor
lret
leave
mov
sbb
push
pushf
sbb
mov
fwait
idiv
xor
lea
push
push
mov
xchg
xorl
cmp
scas
roll
push
and
imul
je
fidivrl
xor
sub
jne
push
xchg
ss
add
dec
fs
cmp
cmc
jle
pop
pop
orl
cwtl
jb
int3
jp
push
sbb
fildl
andl
fwait
adc
add
cld
add
mov
fimuls
mov
int3
dec
or
test
and
sbb
push
out
adc
mov
sti
dec
fsubs
imul
sub
inc
or
stc
sub
mov
or
ds
nop
mov
pop
mov
loop
ret
int
mov
adc
addb
add
dec
test
mov
push
popa
rcll
mov
dec
sbb
ficompl
stc
adc
pop
std
mov
cmp
arpl
adc
xlat
xor
jmp
jns
add
aaa
push
outsb
sub
lods
mov
jg
adc
lods
mov
std
shrb
add
sbb
cmp
bound
jb
fstpt
lea
mov
incb
mov
xlat
add
xchg
pop
lret
mov
outsw
insl
pop
jns
sub
test
leave
xchg
sbb
push
cmpsb
mov
mov
fisttpll
insl
push
dec
xchg
and
xor
lds
jg
pop
mov
cmpsl
movsb
aad
xchg
jecxz
jns
mov
sar
or
shl
ljmp
add
pop
xchg
jns
dec
mov
mov
jmp
mov
movsb
fisttpll
cli
ds
mov
xchg
dec
int3
ds
in
ror
out
hlt
outsb
ss
inc
hlt
out
jmp
cmp
xchg
outsl
gs
fsubs
es
inc
call
lock
testl
jns
clc
pop
mov
xor
sbb
flds
xchg
mov
ficoml
cltd
ss
sbb
std
cmp
pop
adc
mov
rcl
aam
mov
xchg
mov
pop
popa
cmc
outsb
sub
dec
hlt
shlb
aad
xor
loopne
mov
add
ret
loope
or
jmp
icebp
rcl
jl
rol
mov
pusha
jno
sub
outsl
mov
jnp
lahf
mov
mov
das
and
jl
inc
jno
xor
data16
movsl
in
insl
cmp
mov
loop
dec
jmp
xor
sbb
fildl
dec
in
pusha
mov
das
or
inc
pop
inc
mov
movsb
push
mov
or
out
lcall
push
mov
ficomps
mov
fstp
outsb
mov
adc
push
mov
ror
fs
pop
test
mov
jbe
jo
aaa
cmc
sbb
loopne
lea
adc
mov
dec
incl
jb
mov
repnz
test
cmp
add
push
je
pop
jge
mov
push
add
aaa
xor
push
js
jne
add
dec
out
dec
ret
or
imul
mov
xchg
mov
and
sbb
mov
idivl
sub
ds
movl
add
xchg
mov
popa
nop
popf
shlb
vpavgw
cmp
int
mov
sub
xchg
fisttpl
adc
and
dec
aam
idiv
mov
popf
xchg
push
mov
sub
shlb
dec
inc
jp
addr16
sti
mov
ljmp
icebp
push
sti
pop
lea
xchg
adc
mov
inc
jge
pop
js
push
xor
pop
gs
xchg
insb
mov
mov
loopne
icebp
pusha
sbbl
iret
xorb
ja
outsl
cs
adc
test
iret
loope
or
cmpsl
and
out
orb
or
jae
add
lea
test
pop
sarl
cli
jle
mov
push
and
xchg
push
mov
mov
push
cltd
sbb
incb
call
cmovb
mov
mov
pop
xor
push
test
jp
iret
adcb
sub
mov
inc
int
push
add
cltd
jl
inc
jle
jnp
and
adc
pop
aad
push
test
sub
cmc
daa
xchg
xchg
mov
sbb
sbb
fcmovbe
stc
sbb
mov
cmc
test
sub
lods
repnz
ljmp
cwtl
cmp
mov
inc
aad
add
aas
stc
cmp
fs
push
mov
outsl
cmpl
imul
fnstsw
push
loope
dec
insb
lcall
jo
cmovae
je
inc
add
jmp
mov
daa
sub
push
cmpsl
adc
cmp
mov
test
jge
and
pusha
add
lods
out
or
xor
xor
and
push
icebp
das
inc
js
repz
cli
or
scas
add
jo
aaa
addl
out
out
cmp
jl
cmpsb
mov
popf
stos
jbe
rolb
xlat
xor
cli
fs
jnp
sbb
xchg
call
add
dec
mov
leave
popa
mov
inc
daa
xor
pop
pop
jne
mov
ficompl
mov
or
dec
and
mov
das
add
mov
push
sub
lods
outsb
xlat
sub
push
int
scas
lret
xchg
push
or
shr
pop
jne
daa
pop
sub
mov
pop
pop
jge
xchg
inc
jns
push
add
jge
aaa
mov
lahf
mov
mov
mov
in
mov
jnp
and
xchg
xor
push
pusha
jle
cmpsb
xor
fwait
mov
jbe
ds
cmp
clc
hlt
das
or
fcoms
jge
cli
roll
push
pushf
cmpsl
xchg
jmp
inc
rorl
inc
push
ret
js
dec
bnd
pop
rorb
jp
push
add
or
cltd
dec
icebp
adc
in
xlat
in
adc
clc
int3
insl
cwtl
adc
gs
push
mov
cmp
popa
mov
inc
push
lds
sub
inc
xchg
js
movsb
sub
ja
dec
stc
cmpsl
int
int3
mov
sbb
mov
adc
imul
add
mov
mov
dec
and
bound
addr16
pop
ror
xor
pop
cld
lea
jecxz
inc
jne
mov
mov
es
fsubs
jl
in
negl
push
pushf
push
aad
fs
mov
stc
sbb
daa
loope
hlt
mov
push
lret
repnz
mov
pusha
mov
loope
xchg
enter
jo
lock
pop
and
xor
mov
sbbl
add
or
or
loop
aas
lahf
jae
pusha
add
ret
inc
aad
mov
in
add
cmp
stc
jnp
lock
arpl
adc
mov
pop
dec
sahf
std
and
inc
pop
cmp
and
clc
movsb
adc
ret
cs
int3
pop
xchg
sub
test
xchg
rcrb
pop
inc
pushf
imul
fwait
stos
mov
pop
inc
sub
pop
popf
inc
stos
or
pusha
lea
sub
add
xor
xor
jecxz
subb
mov
loop
sub
stc
mov
mov
daa
mov
add
jmp
daa
imul
pop
fisubrs
addr16
testb
testb
cmp
or
xor
dec
ds
mov
sub
mov
inc
inc
cmc
and
arpl
jmp
or
push
cmc
lods
loop
lahf
xchg
or
push
jno
push
loopne
fistl
add
lods
sub
inc
dec
jp
fs
arpl
jge
mov
cmpsb
pop
fnclex
mov
sbb
add
cvtps2pi
out
xchg
insl
cld
mov
push
mov
decl
data16
inc
xor
fcompp
jae
and
aad
lds
fmul
in
jno
push
add
lahf
mov
gs
cmp
sbb
shlb
dec
mov
inc
mov
aas
fimuls
push
dec
fildl
mov
movsl
into
dec
icebp
test
and
and
inc
push
dec
lret
idivb
adc
mov
pop
mov
add
orb
push
js
xor
xor
pop
movsl
jp
xor
mov
pop
loop
cmp
outsl
fidivs
lds
fisubs
mov
jno
xchg
loope
sbbl
rcl
jne
cmp
cmpsl
pop
sbb
lods
pushf
lods
inc
cwtl
add
int3
ret
jg
shl
jg
out
divl
fnstsw
cmp
incb
dec
mov
ljmp
mov
fisttps
pop
std
ja
mov
dec
mov
mov
cwtl
pop
sti
sbb
sbb
mov
mov
test
ljmp
out
fbld
mov
cltd
add
inc
jle
jnp
adc
sbb
test
adc
fld
in
mov
cli
sbbb
dec
in
popf
cltd
add
imul
andl
sub
cmc
mov
fldt
pop
lea
mov
add
in
fs
mov
insb
iret
outsb
data16
cld
push
adc
mov
fstps
pop
push
jl
in
push
or
push
dec
push
sub
pop
std
mov
mov
or
cmp
jo
mov
jl
in
movsb
dec
jns
fcoms
cmp
xor
ret
and
mov
adc
jne
bound
push
jno
mov
das
aad
adc
inc
sti
cltd
clc
mov
pop
enter
hlt
and
je
inc
inc
inc
stos
nop
cs
xor
adcl
add
lods
and
xlat
xchg
sar
mov
adc
pop
xchg
fsub
lods
cmpsl
outsl
call
sub
out
pop
pop
and
xchg
add
imul
into
xor
dec
jae
and
add
mov
pop
imull
aad
inc
jle
jb
mov
movsl
imul
into
mov
mul
out
mov
mov
xchg
and
or
lods
leave
call
mov
mov
cwtl
dec
lea
int3
je
into
scas
mov
xchg
jge
mov
into
sbb
shll
enter
jge
and
ret
ret
or
pusha
flds
fisubl
lods
pop
sahf
fnstenv
push
xor
jp
cmpb
mov
lods
lret
pushf
out
jae
popf
ja
mov
mov
fidivs
ss
jbe
cmc
ds
sub
into
sbb
xchg
mov
sti
into
mov
dec
in
rol
enter
pop
adc
xchg
cmp
sub
cmc
inc
dec
popl
push
mov
and
in
jnp
in
mov
fs
ficomps
push
fmull
into
movsb
dec
fcompl
jle
jne
mov
jg
jmp
pusha
imul
stos
xchg
push
pop
test
out
out
dec
into
inc
idivl
cld
jb
pop
push
cmp
mov
jne
and
insl
mov
or
jecxz
add
sbb
cmpl
insl
lods
imul
lea
test
and
cmp
or
dec
cmp
or
pushf
and
sbb
out
dec
adc
ret
sbb
cmp
ss
add
out
pushf
repz
sub
adc
xor
push
pop
adc
dec
icebp
fcmovnb
jge
add
mull
cmp
dec
flds
popa
ljmp
insb
les
mov
xchg
lcall
lock
cmpsl
daa
sub
xchg
xor
in
cmp
sbbb
mov
xlat
dec
adc
outsl
ret
test
push
clc
fcom
sub
or
cwtl
mov
pop
loopne
push
inc
sbb
adc
test
in
or
outsb
cld
mov
ds
ret
or
cli
stos
dec
cmp
scas
push
shl
add
int3
je
adc
ja
xchg
scas
popa
lock
cmp
je
mov
int
jno
fisttpl
or
pop
push
mov
jb
mov
insb
and
cs
aas
scas
or
adc
subl
xor
test
xor
fidivs
cld
and
sub
sub
cmp
fildll
testb
mov
icebp
in
sbb
ret
aam
pushf
add
repz
push
push
mov
int3
inc
mov
scas
push
xchg
mov
jnp
and
or
ljmp
pop
cwtl
push
stos
call
imul
jne
out
and
add
cltd
jp
xchg
fisubrs
addb
cli
jle
mov
jb
jno
xor
jno
clc
sti
and
popa
int3
inc
sbb
enter
mov
iret
xor
gs
mov
inc
cltd
loope
dec
push
sub
jp
push
imul
dec
or
sbb
mov
push
mov
dec
cmp
xchg
insl
int3
jp
sub
loop
pop
sbb
fisttps
imull
cvtps2pd
leave
mov
dec
xchg
sbb
cld
lock
push
or
repnz
and
xchg
sti
jg
xor
xlat
stos
gs
xor
or
mov
mov
mov
xchg
fdivrl
lods
lcall
scas
mov
jnp
xlat
out
mov
mov
and
jecxz
or
in
mov
sub
pop
addps
sarb
push
repnz
xor
adc
xor
cmp
mov
sub
mov
aas
push
mov
xor
sti
inc
pop
push
test
xchg
cmpsb
inc
mov
dec
sbb
mov
sti
js
xor
adc
lea
add
sub
or
pop
out
mov
stos
out
jb
mov
dec
insl
push
int
outsb
loop
test
outsb
sub
hlt
sub
xor
mov
cmpsl
xchg
neg
ds
ja
iret
push
cmp
dec
cli
mov
out
mov
jnp
cmc
icebp
aam
sbb
stos
cmp
arpl
dec
or
mov
sub
and
ss
fldl
scas
ret
arpl
hlt
and
aaa
mov
fmul
ret
outsb
stc
cmpsl
push
mov
ja
jbe
arpl
jno
ds
in
sub
lret
and
jg
or
sbbl
test
push
pushl
adc
clc
pop
lahf
cmc
cmp
adc
je
xlat
inc
sub
mov
xchg
js
es
popf
cmp
pop
mov
dec
test
jno
test
jo
out
mov
xor
mov
mov
ret
xchg
add
mov
sbb
sub
lds
xchg
sbb
mov
ljmp
sbb
stos
jecxz
xchg
sbb
push
mov
in
testl
mov
mov
xor
mov
cmp
in
add
scas
ja
lret
insl
repnz
decl
jns
repz
aam
out
hlt
add
sub
repnz
adc
push
jae
lret
popf
mov
jb
movsl
leavew
or
pusha
jo
mov
push
adc
outsb
xchg
idiv
xorl
fistpl
sub
mov
repz
and
shrb
xchg
pop
dec
bound
jbe
mov
and
sbb
sarb
ds
xor
adc
inc
or
fnstenv
push
fisubrs
and
jb
add
stos
sbb
rcl
shrl
push
cmp
add
nop
dec
stos
and
pop
mov
adc
pop
xor
mov
std
lea
int
loope
call
cmp
into
inc
mov
test
notb
test
pop
imul
lds
shl
push
movsb
and
mov
pop
sbb
sbbb
and
in
loope
dec
movsl
sarl
dec
mov
jecxz,pn
loop
dec
clc
and
jo
std
jb
sub
inc
lea
sub
cmp
pop
push
gs
stos
in
lret
jb
pop
mov
sbb
fldl
js
mov
icebp
adc
and
cwtl
mov
ss
xchg
and
cmp
or
popf
sub
nop
push
ja
xlat
xor
jae
dec
insb
sub
jecxz
pop
pop
inc
mov
push
bound
sub
inc
aad
aam
adc
movsl
pop
adcl
mov
add
dec
or
mov
outsb
adc
nop
pop
adc
sti
idivb
jecxz
shrl
leave
jo
dec
xor
xorb
sbb
sub
jge
enter
xorl
inc
aam
jl
lea
cli
jl
in
add
shrb
fisubl
scas
inc
cmp
push
push
or
push
jb
in
into
add
and
pop
cmp
push
loope
pusha
clc
xor
mov
jge
push
lods
add
or
adc
dec
call
xor
and
dec
mov
xor
pop
iret
fcom
pop
jle
jge
testb
mov
and
mov
and
push
sbb
xor
shll
cltd
push
jne
mov
push
sbb
and
movsb
mov
rclb
shl
sub
ds
cmp
in
xchg
scas
jle
ds
xchg
hlt
and
add
repz
scas
push
iret
mov
test
sti
aas
fistpll
or
scas
dec
repnz
icebp
and
les
mov
je
aaa
lcall
mov
std
int
je
test
fsubrl
test
lock
mov
push
pop
sub
xor
jbe
mov
sub
pop
mov
push
mov
ud0
insb
jne
sub
pop
fs
cmp
ljmp
mov
add
aas
sbb
imul
jle
mov
jae
repz
shrb
scas
mov
jno
xchg
enter
cmp
pop
pop
ss
stc
dec
inc
ret
push
inc
ja
and
or
clc
push
lret
das
xor
fs
popa
cwtl
outsb
xor
pushf
enter
sarb
hlt
cmp
in
pusha
mov
push
pop
in
and
sahf
or
xor
pop
insb
jns
popa
cmp
inc
mov
ret
out
iret
mov
adc
add
cld
scas
add
push
and
ret
push
pop
bound
dec
sbbl
mov
int
push
ds
outsb
or
fdivrl
cmpsb
and
xchg
repnz
sub
sub
or
mov
ds
mov
stc
adc
imul
push
sbb
and
dec
jb
lea
ret
pop
int3
pop
jecxz
subb
insb
cli
adc
add
out
ja
out
nop
andb
je
jl
movsl
inc
dec
adc
incl
out
in
mov
cmp
adc
adc
sbb
pop
jne
divl
jl
int3
imul
and
bound
test
xorl
dec
mov
add
pop
pop
xchg
sbb
fimuls
faddl
out
pop
sbb
aas
lock
inc
aas
jno
mov
stos
inc
fsubrl
push
movsb
xchg
fwait
or
sbb
mov
adc
cli
push
cmp
out
mov
ljmp
pushl
cli
movsl
inc
stos
scas
add
or
mov
sbb
loopne
aas
je
sahf
pop
mov
outsb
data16
mov
sbb
push
sub
neg
xchg
mov
mov
add
testl
jbe
add
ds
std
ror
mov
sub
xchg
jb
add
and
lcall
mov
faddl
fldl
xchg
mov
sub
imul
xchg
sub
dec
negb
imul
mov
int
mov
shll
dec
lret
inc
xlat
dec
mov
or
or
inc
mov
lcall
sbbl
xchg
mov
jnp
shll
xor
add
mov
xor
adc
pop
pushf
cmp
add
cmpsl
btr
xchg
insb
shlb
ss
mov
jne
int
je
hlt
mov
out
js
arpl
adc
jb
sbb
mov
inc
movsl
cmpsb
pop
jle
loope
jle
cs
mov
fcomps
or
inc
std
inc
loopne
jmp
les
in
lods
sti
in
mov
and
cmpsb
popa
or
sbb
inc
cmc
or
lret
into
xchg
jecxz
lds
fildll
mov
mov
aas
aad
mov
lcall
ret
loop
mov
es
fs
jmp
pusha
mov
mov
dec
dec
push
mov
sbb
shrl
scas
cli
test
insl
xchg
sub
jb
add
mov
or
xchg
mov
dec
leave
inc
or
or
and
jnp
aam
add
and
xchg
xlat
add
xchg
dec
rcrb
inc
addb
cli
push
pop
cmp
mov
cwtl
fldt
leave
adc
testb
test
sahf
inc
not
cmpsb
and
push
mov
jb
push
cld
div
das
popa
cld
pop
or
out
adcl
repnz
ljmp
adc
sub
or
mov
repz
std
adc
clc
xchg
pop
add
fldcw
repnz
ficoml
mov
inc
orb
jo
mov
xor
mov
lods
flds
cltd
repnz
cmp
mov
subl
jg
aam
fwait
jp
xchg
fbstp
repnz
ret
xor
xor
push
xor
mov
inc
test
fcmovu
je
inc
pop
adc
popf
xor
das
dec
std
cwtl
jmp
stc
cmp
ljmp
and
push
mov
and
dec
mov
je
inc
push
xor
cmp
jnp
jns
lods
fs
and
daa
cmp
mov
pushw
adc
mov
cmp
adc
lret
add
jmp
shr
inc
int3
shrl
lret
mov
dec
fcmovbe
sub
xchg
cmp
mov
mov
inc
fs
jne
xor
out
mov
dec
cmp
pop
insl
rcrl
pop
bound
xchg
scas
scas
leave
cmc
pushf
mov
imul
inc
jns
jl
nop
dec
add
bound
mov
add
mov
push
cmpsl
push
loope
sub
scas
ret
add
or
loopne
mov
movsb
fisubrs
rcrb
sbb
iret
or
cmpsb
fwait
pop
cld
jecxz
decb
jo
mov
cmp
dec
sbb
aas
lock
adc
or
add
inc
inc
add
xor
fwait
sbb
scas
pushf
js
stc
xchg
dec
rcll
inc
sbb
mov
mov
adc
mulb
pop
popa
push
dec
mov
popa
jle
mov
out
imul
pop
int3
sub
sbb
out
and
cmc
or
outsb
fistpll
xlat
shl
push
sbb
or
loope
pushf
dec
fwait
mov
lea
mov
dec
inc
jo
mov
push
mov
or
mov
lahf
ja
push
jb
into
js
mov
mov
inc
mov
mov
push
xchg
xor
nop
add
repnz
xor
mov
daa
aam
dec
enter
cmpsb
fdivrs
decb
adc
loope
out
sub
lock
jbe
add
decl
std
aas
outsl
mov
inc
xchg
test
adc
xchg
sbb
push
push
hlt
mov
out
inc
sbb
mov
aas
pop
dec
sti
cmp
sub
xchg
cmp
pop
testl
insl
add
and
je
sub
inc
jg
sub
cmp
jmp
fsubl
and
arpl
enter
movsl
mov
fidivrl
lods
test
sub
outsl
and
outsl
imul
xchg
inc
pop
fnsave
sub
cs
ret
jno
xchg
scas
into
push
mov
cli
jmp
lret
and
iret
lret
push
mov
jae
mov
paddw
cmpsl
xchg
int
inc
outsl
into
movsl
sti
push
cmp
pop
repnz
cmp
popa
add
insb
or
fisttps
insl
outsl
adcb
mov
les
pop
leave
lret
sbb
fs
pop
and
push
xor
xchg
out
int
push
and
rcrb
in
push
ss
mov
iret
popf
sub
dec
push
add
xor
push
aaa
sahf
mov
gs
xchg
mov
adc
sbb
dec
xor
test
xor
fwait
add
pop
mov
push
cli
out
push
pusha
mov
add
mov
sar
arpl
inc
or
movsl
sub
xor
jg
lds
das
fistpll
movsb
je
mov
test
push
test
add
xchg
aaa
insb
or
xor
cmp
inc
clc
cmpsl
xor
fstpl
mov
xchg
lods
mov
inc
jg
sub
in
faddp
jo
xor
xchg
movsl
sub
test
es
cmpsb
enter
repz
xchg
lock
je
sti
add
out
arpl
pop
in
dec
loopne
dec
mov
lahf
shll
ret
xchg
adc
push
jg
maxps
sarb
push
or
or
std
mov
lods
fnstenv
sub
shll
pop
mov
adc
adc
stos
outsl
or
fsubrs
sahf
cmpb
cmp
sbb
cltd
mov
xor
lret
inc
add
or
aas
dec
subps
mov
pushf
mov
jecxz
cmp
xor
sub
stos
mov
movb
push
and
inc
jo
lea
lods
ljmp
shrb
jmp
mov
outsl
mov
inc
adc
outsl
sbb
mov
fsubs
inc
aam
add
mov
leave
sub
inc
dec
ss
movsl
sbb
push
pop
xchg
jns
sub
dec
pop
jnp
xor
repnz
mov
inc
or
mov
jb
loop
lret
stos
mov
sti
cmpsb
in
jno
mov
xor
mov
enter
sbb
aas
shlb
adc
cmp
dec
cld
add
lahf
mov
mov
xor
out
outsl
aad
xor
push
in
out
sbb
mov
in
dec
lret
xchg
adc
sbb
mov
inc
adc
pushf
repz
adc
add
cld
lret
dec
sbb
shrb
cltd
sub
lods
test
test
das
mov
ja
jecxz
sbbl
or
lds
jo
fnstsw
xor
lea
mov
stos
push
inc
cmp
fiaddl
xor
jo
jbe
mov
leave
pop
lock
aaa
lea
push
dec
inc
inc
lock
jg
pop
out
push
sub
or
stos
jns
dec
in
add
ja
fs
ffreep
cmc
push
enter
pop
mov
icebp
jmp
sub
icebp
movsb
dec
add
loope
cwtl
jmp
xor
dec
cli
rcrb
push
jnp
addr16
in
mov
push
pop
push
stos
aad
push
in
out
in
loope
nop
ja
les
in
mov
adc
add
pop
scas
adc
ljmp
clc
sbb
mov
dec
adc
push
fwait
jnp
cmpsb
and
fdivr
fiadds
push
sub
xor
and
pusha
rclb
add
stc
ss
fsubrl
inc
scas
sahf
jno
shl
not
cmp
push
pop
in
das
inc
adc
add
sbb
or
push
shrb
adc
fmul
or
shl
test
cmpsb
mov
test
jle
cltd
std
mov
fidivs
sbb
mov
pop
fisubl
mov
dec
inc
out
sbb
push
or
std
clc
xor
or
into
push
lods
add
mov
mov
cmp
sub
jo
popf
pop
adc
cmp
or
and
pop
ljmp
push
popa
loope
and
xchg
mov
pop
and
outsl
push
sti
nop
shrb
out
into
mov
lret
pop
sbb
push
fcmovbe
dec
or
xor
fwait
push
mov
lods
pop
dec
mov
cmp
push
jge
shll
sub
sbb
test
cld
dec
jbe
mov
adc
xchg
cmpsb
and
sub
sbb
xor
mov
in
mov
pop
mov
roll
pop
pop
xchg
lahf
gs
dec
pop
push
imul
or
out
xor
lock
scas
sbb
xor
fcmovnbe
lret
das
movsl
push
pop
out
addb
popa
sbb
sub
in
adc
adc
add
test
shrl
cmp
loopne
js
aad
imul
mov
pop
shlb
mov
adcl
xor
nopl
idivb
sub
xlat
scas
jp
icebp
cmp
lret
jecxz
or
dec
pop
mov
pop
mov
jno
nop
imul
xlat
or
aas
cmp
or
ss
jl
xchg
outsl
pusha
cld
cmp
cmp
inc
sbb
dec
dec
aad
pop
and
notl
mov
lods
mov
xor
push
fmuls
cld
leave
fisttpl
cmpsl
cmp
mov
cmc
insb
repnz
data16
pop
pop
fldl
ret
mov
call
push
fwait
cwtl
pop
adc
pop
mov
in
push
scas
mov
xlat
pusha
mov
mov
stos
adc
or
test
repz
ret
std
test
jle
sub
push
fldt
and
jae
test
lret
arpl
xchg
es
pop
cmc
cmp
rcrl
pop
ficoms
imul
sub
push
cmpsb
imul
mov
stos
jl
jle
jp
jnp
clc
jno
push
xor
mov
shlb
add
dec
rorl
pop
movb
jo
sub
cs
mov
enter
call
ret
ret
das
sbb
mov
xor
xchg
arpl
or
mov
cs
mov
adcb
lret
mov
je
popa
push
imul
movsb
int3
loope
push
lahf
stos
rep
loopne
das
mov
inc
pop
mov
fwait
add
mov
stos
xor
pop
inc
adc
mov
pop
mov
ss
cmp
cmp
mov
out
jae
out
es
push
cmp
add
mov
jle
inc
push
cmp
jae
adc
test
fisttpll
add
xor
pop
das
fdivr
inc
mov
mov
xchg
imul
pop
jp
pop
xchg
mov
mov
mov
cmp
cmp
mov
xchg
xor
push
repz
mov
mov
pop
sbb
test
push
ret
notl
lret
add
xchg
shll
test
test
ret
adc
mov
test
adc
jnp
push
fildll
dec
cmp
or
push
negl
mov
pushf
xor
adc
push
ret
cmpsb
dec
jb
mov
int3
and
push
mov
cmp
nop
inc
enter
popf
xchg
cld
in
pop
add
lods
adc
or
push
loopne
imul
je
pushf
js
test
jmp
add
rorl
pop
push
cmp
fwait
and
sub
jg
xor
imul
mov
imul
stc
into
jns
test
dec
mov
mov
enter
repnz
mov
push
ss
data16
push
xor
lret
in
imul
mov
daa
ljmp
std
push
and
sub
xchg
mov
es
jge
and
enter
push
and
ret
ret
rsqrtps
lret
add
bound
inc
pusha
cmp
ja
sahf
cli
sbb
lcall
and
cmp
jo
rcr
pop
inc
setae
mov
mov
sub
cmp
adc
mov
popf
dec
fsubr
pop
jp
mov
pop
es
std
inc
jp
sbbl
xor
js
sub
sbb
and
fucomi
sub
lea
jnp
lret
les
or
mov
adc
pop
std
test
xchg
dec
test
enter
mov
push
scas
cmp
push
jp
fcmovb
cltd
ret
lds
call
sbb
ljmp
sbb
push
es
fwait
mov
jnp
imul
mov
rcrb
repz
dec
jp
lock
loope
cltd
and
jmp
repnz
dec
adc
mov
sbb
jae
mov
sub
xchg
fdivl
outsb
mov
int
xlat
pop
jnp
inc
daa
out
pop
xor
lea
xchg
fdivrl
jp
into
or
sub
sub
mov
push
rcrb
adc
insl
loopne
lods
fwait
sbb
inc
mov
in
xor
jg
or
or
aas
sar
jb
adc
daa
mov
xchg
pop
push
xchg
mov
push
cmp
jae
cltd
rol
or
loope
sbb
filds
xchg
cmpsl
imul
faddl
dec
nop
jmp
pusha
xchg
in
sbb
jl
push
xchg
lods
adc
cmp
cli
scas
in
sbb
fsubs
js
repnz
or
sub
sbb
incl
leave
inc
push
daa
lret
fwait
push
lock
int3
cli
mov
js
sbb
or
ljmp
sub
in
into
push
and
in
xchg
hlt
jl
xchg
icebp
enter
ljmp
inc
add
sub
pop
dec
mov
sbb
shrb
iret
inc
add
mov
and
inc
push
ss
outsb
adc
out
iret
mov
cmp
lahf
pop
hlt
lret
lods
mov
sarl
adc
out
xchg
mov
jnp
aas
xchg
xor
movsb
mov
cltd
xor
pusha
jbe
sbb
xlat
inc
xchg
cmp
mov
imul
push
add
clc
ret
decl
sti
outsl
xchg
pusha
adc
inc
sbb
add
aas
pop
cmc
repnz
in
sbb
sbb
inc
jge
sbb
jle
push
xchg
push
inc
faddl
sbb
fisttpll
and
xor
dec
cli
lcall
es
pop
es
xor
fists
mov
div
sub
adc
ljmp
movsl
cmp
out
mov
add
lods
addr16
jecxz
xchg
jmp
mov
ds
stos
xchg
call
pusha
aaa
mov
inc
adc
push
jnp
insl
cmp
push
or
rclb
repnz
xor
adc
cs
int
mov
loopne
lea
xchg
pusha
xchg
cmc
ljmp
cld
adc
inc
sbb
mov
out
push
mov
and
outsl
and
sbb
mov
dec
push
jb
adc
aam
je
les
jnp
les
jl
sbb
je
in
xchg
xor
lock
add
and
scas
push
jp
rolb
and
test
inc
shrb
mov
jnp
shlb
test
jecxz
push
mov
repnz
cmpsb
adc
cmp
loope
and
and
jae
lock
mov
cmp
mov
in
scas
repz
push
loope
sti
imul
stos
xor
scas
ret
sub
lds
mov
test
fmull
sub
dec
mov
push
shll
pop
arpl
pop
pop
mov
shrl
mov
iret
dec
xchg
mov
sbbb
jle
pop
lea
mov
rcr
adc
out
mov
ja
xor
testl
adc
fs
stos
sbb
inc
push
cld
cmpsl
pop
clc
es
out
xor
dec
mov
jno
ficoms
pop
dec
mov
pop
in
xor
sbb
jne
loope
sub
add
testl
pop
jb
hlt
push
sub
dec
movsl
sub
ljmp
push
sbb
dec
ja
xor
sbb
mov
inc
mull
add
adc
mov
or
mov
cwtl
rcll
addb
out
mov
dec
lods
xchg
cmpsb
push
out
xor
fiaddl
mov
mov
add
cltd
mov
addb
xchg
push
add
xlat
push
dec
adc
fs
insb
ja
jmp
clc
and
cmpb
cmp
lods
imul
ret
jne
or
xchg
shrl
movsb
into
icebp
inc
mov
mov
sbb
pop
mov
es
cmpsb
andb
mov
push
into
cmpsb
dec
hlt
adc
or
push
mov
insl
inc
and
add
lods
adc
or
je
stos
sbb
jns
mov
loope
push
and
icebp
push
jne
jbe
jmp
and
dec
ss
sbb
dec
gs
ret
cltd
push
cmc
mov
lea
xor
fisubrs
imul
call
push
jbe
hlt
fadds
pusha
pop
jns
or
sarl
call
scas
rcr
push
jle
jge
icebp
imul
sbb
vunpckhps
or
mov
cmp
cmpsl
fwait
push
jl
inc
adc
pop
sti
xchg
sub
push
loopne
push
mov
sbb
mov
and
jns
stos
dec
cmp
xor
jmp
push
push
pop
inc
inc
jp
pop
dec
loop
sbbl
sarb
pop
cmpsb
xor
fisttpll
les
jno
cmp
stc
bound
add
sbb
pop
or
pusha
or
mov
or
mov
xchg
outsl
movsb
out
mov
dec
xchg
xchg
lds
sbb
sub
insb
insl
in
cmpsl
test
ds
neg
cmp
sbb
mov
push
aas
cwtl
scas
out
or
or
sub
adc
cmp
adc
in
fisubs
mov
imul
push
xor
fcmovnu
hlt
in
outsb
imul
leave
cmp
push
cmpsb
or
xchg
pushf
test
clc
mov
cmp
mov
smsw
call
mov
scas
xchg
shrl
add
and
sbb
repz
hlt
test
xorl
mov
jl
in
call
mov
jo
cwtl
or
jge,pn
rcl
lds
sub
ss
mov
or
add
js
iret
mov
outsl
rorl
fisubs
addb
je
daa
xchg
popa
inc
and
and
mov
out
dec
mov
aam
out
sub
push
add
gs
jae
arpl
movsb
repnz
in
adc
push
arpl
fs
addr16
add
cmp
xchg
mov
into
pusha
out
jecxz
xor
xor
xor
xchg
pop
add
lds
es
pushf
xor
pop
or
xchg
jge
rcrl
or
mov
push
cli
into
push
pop
sbb
adc
xchg
pop
cld
push
aam
fwait
and
bound
jge
or
pop
insb
push
rolb
aam
out
adc
xchg
push
dec
and
xor
mov
in
mov
dec
pop
cld
gs
rcll
mov
cmc
fildll
inc
stc
push
mov
jp
stos
cltd
incb
mov
xchg
lahf
inc
mov
fstps
andb
test
lret
sub
test
jo
sahf
sub
out
scas
dec
add
sbb
sub
or
mov
mov
xor
jb
xor
gs
insb
cmp
icebp
jecxz
jmp
aas
adc
mov
js
insb
dec
inc
hlt
dec
jns
ret
push
jnp
icebp
sti
inc
imul
inc
sbb
mov
mov
leave
xor
scas
scas
in
jno
clc
push
inc
dec
lcall
or
pop
sub
and
nop
mov
iret
scas
cmp
sbb
mov
cltd
jns
addr16
sub
mov
shrl
add
enter
dec
jle
daa
mov
test
mov
shld
inc
xorb
sbb
adc
ret
pop
xor
shl
push
loopne
dec
push
push
push
jne
or
mov
jno
cmp
shll
add
out
testl
leave
add
adc
in
jge
cmp
repz
push
dec
add
scas
jnp
insl
or
xor
hlt
xlat
adc
andl
cmp
aad
push
lods
or
cmp
pop
inc
orb
leave
sarb
mov
mov
push
enter
and
push
xor
test
jl
out
loopne
jecxz
fists
movsb
mov
movsb
ljmp
adc
mov
lahf
xor
mov
es
sbb
adc
push
jecxz
ss
push
lds
ret
pusha
shll
dec
sub
mov
movsb
rcrb
sbb
and
data16
xor
xor
inc
fwait
mov
push
pop
outsl
call
pop
fidivs
lret
mov
xchg
out
dec
jmp
jecxz
cmp
adc
mov
and
rcrl
hlt
mov
gs
enter
imul
push
jl
mov
fisubrs
xlat
cmpsb
rolb
xchg
xchg
inc
lcall
xchg
movsb
insl
mov
mov
cmp
loopne
and
pusha
xor
fldl
in
push
adc
cwtl
fldcw
bnd
pop
xchg
xor
jno
xchg
xor
test
aam
decb
mov
adc
cmpsl
jg
filds
jle
jo
pop
or
add
mov
cmp
iret
xchg
test
shr
enter
cld
repz
leave
xor
xchg
lods
sahf
mov
push
or
xor
scas
cmp
lods
pop
pop
aam
xchg
or
lahf
sbb
xchg
sahf
sti
push
sub
and
imull
mov
out
cmp
xchg
jmp
xchg
mov
cs
mov
sub
xchg
stc
and
inc
xchg
stos
add
adc
fisubl
lcall
jl
pop
iret
cmpsb
mov
add
jb
mov
das
fmull
or
pop
inc
mov
dec
rorl
mov
push
xchg
fimull
jp
fistpl
dec
popf
in
jle
aad
cmp
push
fdivrs
adc
xchg
ret
inc
insl
ret
add
mov
sub
out
mov
mov
mov
push
sbb
xlat
jne
shrb
push
in
imul
or
fmuls
cmp
adc
pushf
inc
pop
xor
inc
insl
hlt
mov
fmull
xchg
push
loopne
fcoms
cmpl
adc
jae
roll
fs
pop
pop
movsb
push
rclb
icebp
cmp
xchg
sub
jg
scas
inc
stos
and
cmp
int3
cmp
push
fwait
ja
out
inc
cld
xchg
loopne
stos
cmp
cmp
das
out
inc
or
mov
push
aaa
enter
mov
cs
xor
xchg
fiadds
jmp
adc
jae
loope
je
iret
cmc
dec
int
jmp
mov
mov
sti
sbb
push
push
sbb
fidivrl
adc
aad
mov
xchg
push
dec
insb
arpl
xchg
jmp
mov
sti
mov
jge
dec
cmp
sub
add
ret
incb
repz
adc
fnstcw
loope
sbb
call
xor
add
or
sub
stos
pop
mov
lds
call
inc
sahf
arpl
lea
jle
test
mov
adc
jge
dec
add
jne
dec
outsb
mov
add
sbb
jns
fidivrs
inc
sbb
aad
iret
inc
jle
or
scas
stc
jns
dec
add
fistps
push
adc
movsl
leave
add
out
sbb
mov
jbe
call
jns
aaa
idivl
imul
movl
or
adc
dec
pop
ja
pop
mov
cmc
add
jge
in
negl
out
es
cs
xor
insl
jmp
imul
pop
hlt
xchg
js
leave
sbb
enter
es
int
adc
pop
mov
and
lret
stos
call
rcll
cmp
insb
pop
daa
int
ja
sahf
insb
cmp
xlat
sub
loopne
push
imul
jae
call
leave
cmpsl
insl
pop
mov
push
xor
sub
jnp
jmp
stc
adc
iret
test
sbb
mov
mov
sbb
mov
sub
and
das
or
rclb
sub
jg
inc
insl
sbb
and
popa
dec
cwtl
or
out
fstcw
call
lds
enter
ret
dec
shlb
cmp
stos
cmp
aam
sub
and
xor
cld
icebp
aad
push
inc
or
or
sub
movsb
push
bound
or
cmc
imul
cmc
pop
adc
sub
cmp
insb
pop
mov
adc
mov
jecxz
imul
outsb
js
mov
loop
leave
push
int
mov
mov
fwait
mov
in
outsb
mov
sub
repz
pusha
sub
sti
out
add
es
jbe
sub
popf
xor
xchg
pop
push
sbb
fstl
xchg
dec
fldl
fnstcw
push
shrb
jno
sbb
lock
adc
mov
mov
pop
pop
arpl
shl
aas
xchg
ljmp
addb
lock
ds
sbb
in
sbb
repz
xchg
cmp
ret
sbb
cmp
adc
and
cmpsl
fnsave
sti
push
in
cmp
or
std
or
sti
pop
in
lret
push
stos
inc
add
cld
jmp
xchg
or
jmp
cmp
call
dec
les
fld
dec
into
ljmp
pop
ja
push
mov
pop
inc
jle
sbb
pop
cld
outsb
xor
mov
sub
xor
adc
xchg
bound
fcmove
lahf
or
mov
jp
dec
inc
pop
push
jle
hlt
sbb
cltd
xchg
xchg
daa
xor
int3
xchg
int
jo
add
out
jge
mov
into
pushf
sub
pop
lock
or
stc
add
int
xchg
ret
mov
add
cltd
scas
and
rclb
xchg
mov
xchg
mov
loopne
add
cltd
mov
and
inc
sbb
pop
sub
loope
stc
aas
outsl
scas
movsb
push
add
mov
mov
xchg
mov
sbb
add
mov
int
xchg
sub
xchg
popa
mov
cmp
fwait
int3
xchg
xor
dec
sbb
ljmp
lock
dec
mov
data16
nop
mov
test
mov
jno
stos
rolb
xchg
repnz
stos
jmp
lds
loopne
movsb
mov
pop
mov
icebp
aaa
inc
pop
adc
xor
leave
xchg
int3
pop
sub
test
mov
push
mov
push
das
adc
mov
dec
lcall
push
je
xchg
pop
aas
shll
cmpsl
test
jge
pusha
frstor
xchg
out
jnp
jle
jl
inc
cmp
add
xchg
ja
pushf
sbb
push
dec
aaa
xor
int3
flds
xchg
stos
inc
cltd
fcoml
rorb
mov
daa
repz
xor
cld
icebp
xor
add
jb
fdivs
jnp
lods
scas
sarb
jge
js
fiadds
cmp
xchg
or
cmpsb
mov
lods
test
xchg
lods
cmp
pushf
iret
into
xchg
push
and
pop
dec
daa
push
mov
test
mov
les
movsl
pop
xor
push
mov
fnstcw
jne
sub
leave
inc
pop
in
and
pushf
push
and
ret
daa
dec
ret
push
push
xchg
sahf
dec
mov
jge
out
andl
fstpt
std
mov
dec
push
adc
sbb
and
pusha
mov
cmp
push
xchg
sub
push
add
ret
mov
adc
lret
mov
jp
ljmp
mov
inc
xchg
pop
iret
push
push
sub
push
cltd
int
outsb
int
rcrb
pop
jp
sbb
aad
mov
fwait
mov
pushf
mov
xchg
cmc
push
ss
mov
xchg
daa
push
mov
int3
fadd
subb
scas
xchg
xchg
cmp
fcomip
enter
iret
push
fbstp
cmc
loope
out
xchg
dec
ss
inc
sub
xor
mov
add
jmp
adc
xor
jne
push
aas
mov
mov
in
mov
sbb
ljmp
xlat
add
add
hlt
sub
jmp
cmpsb
jmp
insl
xchg
jnp
insb
cmpsl
and
xchg
fs
mov
sbb
inc
pop
inc
repz
stos
divb
ss
into
scas
imul
sub
out
icebp
add
and
jns
xor
cld
pop
dec
inc
shll
inc
mov
pop
ja
fldenv
call
es
push
dec
dec
dec
cmpsb
mov
fwait
add
movsb
xchg
push
ljmp
aam
inc
push
aaa
mov
ficompl
xlat
xchg
rcl
aas
pop
mov
call
fs
add
sti
js
push
cli
dec
sti
dec
stc
xor
iret
call
in
push
scas
les
cltd
mov
ret
mov
add
out
cmp
repz
jecxz
sbb
icebp
dec
lret
xor
addr16
xor
lret
cmpsl
adc
stos
scas
lret
push
sbb
addl
mov
popf
lret
es
mov
cbtw
push
or
or
mov
and
pushf
push
mov
rorl
xor
cmpb
in
ret
xchg
jnp
testl
jo,pt
inc
sub
xorl
cmpsb
insl
push
mov
rolb
fldt
add
call
subb
pop
loop
into
add
push
cmp
sub
mov
arpl
xchg
es
xor
dec
jbe
imul
jns
cli
pop
inc
outsb
adc
pop
lds
out
rcl
ret
jp
pop
jmp
push
pusha
pop
mov
movsb
adc
into
enter
in
sbb
iret
push
jl
test
dec
sti
repnz
jns
clc
mov
mov
lock
sti
lods
imul
mov
xor
rorb
dec
and
pop
xchg
lahf
inc
mov
xchg
cwtl
xor
std
sub
adc
stc
stos
mov
stos
aaa
popf
lds
xchg
and
cs
mov
test
mov
adc
popf
xor
lock
repz
sub
mov
fsubr
cmc
push
ret
aas
mov
mov
imul
test
sbb
add
mov
test
or
fistpl
add
jl
sub
sti
inc
test
call
fbstp
imul
movsl
pop
in
out
mov
adc
inc
fsubr
sbb
insb
test
pusha
fdiv
dec
push
xor
push
pop
xchg
or
dec
add
and
mov
jecxz
lea
iret
sub
xchg
in
std
cmp
fisttpll
xchg
lcall
push
push
daa
push
or
cmc
out
in
iret
rclb
loop
out
xchg
xchg
cltd
inc
xchg
leave
xor
addr16
jno
cmc
mov
fmull
pop
or
xorb
imul
outsb
pop
inc
int
xabort
dec
je
enter
adc
inc
test
dec
divl
jmp
and
or
mov
mov
push
xchg
dec
fyl2xp1
rol
leave
fisubl
inc
mov
negl
pop
cmpsb
push
adc
enter
icebp
xlat
test
cmp
mov
mov
push
or
sbb
push
outsl
mov
ret
inc
jb
sub
les
push
fdivrs
loopne
xchg
cmpsl
icebp
xchg
or
mov
mov
xor
cmp
clc
jle
es
test
push
and
ss
mov
dec
out
nop
and
and
jnp
fld
mov
xchg
stos
jmp
adc
int3
leave
inc
dec
ret
dec
sbb
inc
stc
jge
xchg
scas
or
lcall
dec
cs
movsl
cld
and
push
out
pop
sbb
icebp
sbb
cmpsl
insl
dec
mov
clc
ret
push
adc
aad
add
xor
sub
test
fstps
mov
pushf
pop
aad
push
sub
jne
push
icebp
insl
mov
int3
out
xor
in
dec
rorl
xchg
ficoml
iret
mov
xlat
and
mov
mov
shr
jae
nop
stc
mov
enter
fstps
sar
dec
sbb
xor
cvtps2pd
jae
aam
in
push
loope
ljmp
popa
fidivrl
fldt
das
add
enter
les
sub
cli
mov
jne
sti
add
push
cmp
xor
push
mov
dec
insl
popa
dec
fldl
decb
push
inc
decb
jae
or
test
iret
mull
loop
jp
adc
push
adc
jle
mov
lcall
sub
dec
mov
sub
xor
popa
dec
aaa
scas
movsb
nop
scas
les
repnz
sub
mov
mov
mov
sbb
xchg
jmp
jp
mov
jne
push
stc
les
daa
ret
jecxz
jnp
push
ret
ljmp
cmp
add
jb
ret
lock
cwtl
imul
adcl
ret
push
filds
jo
sub
cmp
lcall
push
or
aaa
enter
sub
pop
sar
enter
mov
mov
add
shr
and
xlat
adc
pop
jp
lcall
jecxz
mov
mov
cmp
mov
test
or
sub
pop
jg
pop
rol
add
out
add
fcom
sarb
sahf
outsb
imul
pop
jb
int
inc
mov
aaa
add
mov
data16
dec
out
pop
cs
dec
mov
loop
test
inc
jbe
leave
and
arpl
scas
loope
imul
xor
adc
pusha
cmpsb
pop
stos
jg
push
xchg
stos
push
mov
mov
fnstcw
add
ficoml
icebp
lahf
inc
cltd
jns
or
outsb
sbb
imul
mov
xor
gs
sub
in
and
xchg
gs
cwtl
roll
pushf
shrb
mov
test
cld
push
xchg
orl
mov
mov
or
add
jl
pushl
fiaddl
std
pop
jae
sti
loopne
cmp
sub
jno
aas
mov
fs
mov
jnp
pop
pop
out
jae
sub
xchg
dec
je
movsb
sahf
rorb
xor
insl
data16
sbb
in
adc
sti
stos
dec
daa
mov
mov
adc
leave
xor
rcrb
xchg
mov
stc
mov
lods
add
fwait
mov
pop
dec
ljmp
pop
js
fmuls
jecxz
loopew
add
jl
sarl
sbb
call
mov
bound
sarb
adc
shlb
mov
mov
jge
shlb
stos
sbb
js
adc
jbe
rolb
mov
lea
cmc
pop
jge
lcall
mov
push
inc
pushf
pop
jns
sub
push
stc
add
xchg
test
mov
lods
mov
and
jo
in
subl
cmp
clc
adc
in
pop
sbb
mov
jmp
sbb
cmp
jg
out
pushf
jp
inc
xor
in
adc
inc
hlt
push
or
aas
or
loopne
ret
xchg
das
cmp
scas
lret
ja
pop
sub
push
dec
insl
sub
mov
mov
xchg
aad
gs
loopne
jle
dec
push
repz
insl
movsb
pop
cmpsl
pusha
and
push
aaa
pusha
es
in
adc
lods
fwait
jmp
popf
cmc
lret
test
repz
and
sti
dec
haddps
ret
sub
mov
cs
sbbl
inc
shrl
scas
andl
rcrb
out
iret
sti
push
enter
lods
pop
nop
add
jmp
out
push
xchg
call
jle
dec
sbb
leave
xchg
popf
lds
out
lods
mov
rcrl
add
jns
inc
inc
lret
lods
xor
mov
xchg
lods
push
mov
adcb
faddp
and
mov
sbb
ret
sub
xchg
loope
fdivl
inc
repz
lcall
jno
jns
sub
sbb
inc
cmp
pop
insb
arpl
stc
jle
and
jns
fs
movsl
jmp
aad
mov
jecxz
mov
scas
outsb
inc
pop
roll
push
mov
and
js
mov
pop
out
xrelease
insb
xor
sub
icebp
inc
int
incb
mov
mov
aam
pusha
xlat
js
push
jle
cmpsb
sbbb
mov
mov
adc
popf
out
rol
lods
or
sahf
int
mov
mov
jo
push
xor
out
sbb
mov
or
jecxz
pop
mov
sub
pop
jle
pop
sar
outsb
jbe
jno
popl
xor
inc
pop
jnp
xor
pop
jns
jae
mov
fwait
dec
push
mov
mov
xchg
lret
cli
frstor
inc
add
push
aas
mov
jbe
or
sbb
adc
adc
mov
lods
adc
cmp
jne
je
jmp
lret
adc
je
dec
dec
xor
fbld
dec
pop
subl
push
and
ja
ljmp
xchg
jbe
hlt
lods
mov
popf
fisubl
pop
aad
fwait
mov
inc
test
imul
movsl
das
inc
divb
stc
in
loop
inc
pop
hlt
jg
jb
add
ja
leave
movsb
and
jmp
pop
repz
inc
pop
add
test
jno
repz
enter
lcall
xchg
or
jae
push
int
lahf
ljmp
add
add
mov
les
jl
pop
jecxz
adc
cmp
setp
loop
stc
cs
mov
sbb
add
or
dec
push
sahf
les
outsl
and
sbb
push
jle
pop
xor
cmp
int
test
xor
xor
cmp
add
pop
sbb
negl
pop
mov
xorl
xchg
gs
push
cs
pop
call
aas
sbb
ret
shrb
jno
jl
cmp
mov
ret
icebp
push
xor
movsl
pop
xor
cmp
add
aaa
movsb
xor
std
adc
cmp
sti
arpl
push
call
xor
inc
pop
dec
pop
inc
lret
imul
outsl
cld
and
mov
das
dec
out
testl
xchg
xlat
xlat
mov
fcomip
xchg
cmp
xchg
int3
mov
icebp
fcmovne
sub
pop
xchg
js
xor
mov
ret
stos
push
dec
lcall
in
insb
cmc
push
adc
mov
push
imul
mov
dec
mov
inc
and
jg
popa
pop
sbb
out
dec
mov
jne
xor
pop
sbb
mov
pop
fcomps
add
push
or
test
movsl
jmp
jae
jns
xchg
lcall
mov
jg
xor
lcall
sahf
cmc
sub
arpl
push
clc
add
push
popa
xlat
mov
cmpsb
mov
cltd
mov
je
xor
cmc
mov
jae
lcall
xchg
ret
lret
mov
jge
stos
xchg
mov
push
or
int3
leave
enter
orl
clc
pop
xchg
push
outsb
iret
and
je
sub
xor
fisubs
gs
dec
inc
and
and
aas
test
into
cmpsl
push
sahf
movsb
adc
xlat
cmpsl
push
dec
push
movsb
or
push
lret
sbb
mov
sbb
xchg
jl
dec
arpl
xchg
sub
out
int3
xchg
shrb
mov
stc
sub
inc
xor
sbb
movsl
xchg
mov
dec
popa
adc
insb
addr16
cmpsl
inc
and
mov
fidivrs
inc
out
test
and
adc
add
lds
cmpsb
in
mov
cld
pop
movsl
adc
std
xchg
push
addr16
xor
and
push
xor
push
pusha
inc
sbb
push
test
push
pop
fnsave
mov
push
or
int
mov
xchg
dec
pop
cmp
lret
and
aad
sub
iret
sub
shl
add
into
mov
dec
mov
sarb
push
jb
jb
ret
mov
mov
dec
push
jge
ficoms
xchg
sbb
imul
sbb
push
sbb
sub
jmp
cli
xorl
adc
cmpsb
dec
fisttpl
cmpsb
xor
aas
shll
jae
cmp
in
fbstp
mov
out
push
cltd
jo
and
xor
mov
push
ficomps
mov
xor
xor
mov
push
out
inc
jbe
daa
imul
scas
and
fidivs
cmp
sub
jmp
cmp
mov
cs
sahf
fidivl
inc
mov
mov
xchg
inc
in
loopne
fadds
mov
xor
int
rolb
pop
aas
les
outsb
mov
mov
cli
aas
adc
jmp
pop
fstpt
fs
mov
jne
pop
mov
mov
inc
dec
push
add
mov
dec
mov
adc
and
scas
std
repz
adc
xlat
jmp
mov
and
cmpsl
pop
movsb
sbb
xchg
cli
mov
mov
jmp
mov
lahf
jge
out
xchg
sti
and
sub
cmp
gs
aaa
fiaddl
js
sarl
mov
ss
push
test
mulb
xchg
add
loop
mov
insb
in
push
das
adc
ret
cmp
and
jge
aam
adc
inc
ds
pusha
mov
push
std
dec
xcrypt-cbc
cmpsl
push
fnclex
inc
popf
lea
daa
xchg
int3
shll
jge
call
and
mov
cmp
out
jbe
xor
mov
imul
dec
aaa
xor
dec
and
pop
cmp
lret
inc
out
cli
add
addr16
adc
mov
dec
rcl
mov
jnp
sbb
leave
subb
insl
dec
addr16
sbb
mov
inc
pop
test
jg
inc
inc
jo
pop
inc
repz
cmpsl
dec
mov
mov
lret
mov
scas
gs
aaa
icebp
in
data16
cmc
rorl
add
sahf
nop
stc
ja
inc
in
adc
cmp
loopne
xor
ss
mov
out
fwait
or
clc
xchg
lds
mov
ds
imul
loope
lock
add
sbb
js
mov
jecxz
jno
mov
xorl
pop
xchg
sbb
clc
aad
out
ljmp
dec
sar
loopne
or
sbb
pop
cli
aas
xchg
cmp
fstpl
mov
add
mov
cmc
jge
fwait
cmpsb
mov
popf
sub
inc
fidivl
push
mov
aad
or
cmp
adc
adc
or
mov
repz
in
lret
mov
int
cmp
sahf
cmp
ljmp
inc
mov
lahf
leave
repnz
sar
push
mov
inc
or
xor
mov
jae
jmp
andb
filds
inc
repz
mov
inc
lds
lods
push
or
mov
mov
lret
mov
push
call
push
add
je
lret
mov
test
stos
inc
pop
ds
push
lods
pop
sbb
add
and
push
mov
addr16
stos
icebp
lahf
xor
mov
ss
inc
lret
inc
cmp
and
jnp
pop
mov
fwait
shl
mov
decb
pop
mov
dec
push
push
lahf
xor
xchg
and
sbb
pop
pop
imul
dec
stos
jge
add
mov
pushf
push
lock
test
sahf
jp
dec
inc
xchg
mov
push
inc
mov
cmc
lods
jne
leave
leave
inc
jb
mov
push
fstps
dec
and
adc
mov
fisttpl
fwait
data16
sahf
inc
xor
xchg
frstor
popa
cmp
xchg
in
sbb
mov
mov
ds
lods
and
imul
cs
shll
lahf
dec
fcos
mov
sbb
cmp
and
sbb
hlt
out
clc
cmc
lock
dec
out
dec
adc
cmpb
js
leave
outsb
call
cltd
xchg
ds
outsl
xor
mov
jbe
lea
pop
scas
out
rcrl
lcall
mov
std
out
orb
and
mov
test
testl
icebp
push
and
icebp
fs
xchg
inc
je
jb
adc
sub
popf
xchg
stos
in
out
mov
negl
push
mov
jl
clc
dec
sub
mov
test
cltd
outsl
out
mov
and
adcl
sahf
arpl
shl
inc
push
dec
pushf
add
sarb
lods
idivb
pop
mov
and
dec
xor
xor
in
stc
fistpl
push
push
es
cli
mov
add
push
fildl
inc
repnz
inc
or
and
mov
or
in
scas
ja
dec
addr16
dec
div
in
out
mov
outsl
rcll
addr16
pop
push
stos
jle
fwait
push
cmpsl
ror
js
sub
es
popa
dec
inc
data16
mov
enter
mov
dec
les
xor
jno
push
in
and
jmp
cmp
add
andb
cwtl
adc
or
and
mov
pop
dec
add
shll
mov
test
inc
fsubrs
jp
pop
adc
sbb
inc
fadd
jno
jns
jae
pop
and
xor
cld
cmpsb
mov
sub
cwtl
jbe
push
jnp
inc
pop
int3
cli
jl
shrl
xchg
adc
fcmovnu
mov
cmp
lds
fmulp
cmp
cld
adc
icebp
mov
rorb
pop
push
adc
divl
stc
dec
push
jo
js
imul
aas
stos
inc
sbb
mov
je
xchg
ret
lea
and
push
scas
sahf
sub
rolb
call
lods
jbe
scas
outsl
test
and
lret
jg
cmp
add
lods
or
fiadds
mov
rcrl
dec
sbb
test
ja
loope
notb
mov
out
add
or
std
cmp
xor
in
xchg
int
addr16
xchg
jnp
add
sub
pusha
push
sarl
mov
jp
mov
jp
scas
pop
loope
iret
cmp
inc
xor
adc
xchg
cwtl
xor
adcl
stos
leave
stos
orl
bound
loopne
xlat
jne
push
xor
dec
jb
fnsave
popl
aas
xor
push
stos
xor
sub
mov
dec
ja
push
popa
add
mov
sbb
lods
mov
test
fwait
int
mov
ljmp
arpl
clc
push
xor
add
stc
arpl
iret
sbb
cmp
jae
push
dec
cmp
andb
jecxz
fsubs
mov
jae
mov
xchg
lcall
ljmp
jecxz
icebp
mov
cmp
ss
mov
jecxz
or
int3
leave
mov
movsb
cmp
in
les
dec
mov
enter
pop
dec
mov
cmp
xchg
inc
xor
pop
pop
or
fdivrs
or
repnz
in
cmc
out
pop
fldl
jb
out
and
pop
push
or
hlt
adc
stc
mov
cmp
pop
cmpsb
bound
add
xchg
loop
jp
inc
or
mov
add
lods
mov
mov
fwait
adc
xchg
sub
imul
test
out
lods
pop
mov
inc
scas
adc
outsb
add
in
xchg
sub
add
mov
xor
and
xor
dec
stos
inc
cmp
inc
push
sbb
mov
aas
jne
inc
xor
nop
inc
dec
pop
jo
sbb
mov
rclb
xchg
pop
cmp
enter
mov
pushf
daa
into
sarl
mov
inc
lahf
fdivrl
xor
loope
mov
mov
les
or
test
push
aad
and
clc
jb
fimull
rorb
jnp
push
xor
push
add
xor
push
icebp
je
mov
xchg
imul
cmc
xchg
dec
or
scas
ss
or
fcomps
cmp
in
daa
jle
lds
sbb
inc
sub
xchg
ret
and
jae
iret
fisttpll
inc
sub
pushf
fwait
mov
sub
or
inc
mov
or
add
ljmp
or
enter
jmp
outsl
xchg
cmp
fs
out
lds
arpl
jge
pop
jmp
imull
sub
push
pushf
shr
jbe
out
xor
shrl
imul
lret
or
push
test
bound
mov
in
mov
rorl
dec
popl
xor
in
andb
loope
lcall
mov
rclb
fmull
mov
fistl
jmp
xor
or
add
jg
mov
pop
jae
std
scas
sbb
jns
xlat
dec
cmpsl
scas
scas
lock
mov
jg
xchg
shlb
sbb
jb
push
mov
cmp
jb
and
lret
xor
adc
lock
cmpsb
out
mov
repz
pop
out
cli
cld
lcall
aas
push
jg
inc
in
pop
push
sub
int3
mov
push
sub
arpl
xchg
push
adc
addb
lock
sti
mov
jns
enter
les
pop
jmp
mov
nop
ret
jns
dec
pop
ja
pop
lea
push
xor
ljmp
lds
and
je
xor
mov
mov
xor
repnz
mov
mov
movsl
push
shrb
jne
xchg
in
out
pop
pop
js
dec
loopne
push
push
push
call
push
loope
daa
dec
aas
stos
fiadds
lea
xor
or
add
roll
sbb
push
xchg
mov
xchg
popl
clc
cmpsb
adc
jno
iret
out
rorl
sub
mov
dec
sub
rorb
mov
fwait
cmp
subl
jb
stos
dec
loope
cltd
xchg
and
sbb
cmp
or
test
adc
add
mov
push
shll
leave
repnz
stos
pop
adc
jle
out
in
dec
mov
dec
mov
aaa
pusha
dec
ret
shll
jne
xlat
mov
rcll
xor
int
int3
xchg
ljmp
scas
jbe
std
push
fistpl
add
jp
adc
aas
push
dec
sti
arpl
push
int3
push
les
lahf
lods
mov
test
rcll
ret
push
stos
cmp
std
or
cmpsl
jg
mov
adc
cs
add
dec
jmp
or
fldcw
mov
leave
adc
movsl
mov
push
addl
cmp
mov
pop
adc
xchg
pusha
ficoml
jae
movsl
out
dec
sub
xchg
test
and
sub
rcll
stos
stc
pop
mov
cmp
dec
mov
xor
mov
aam
xor
outsl
loopne
popa
nop
push
jne
pop
out
jbe
adc
jo
test
mov
imul
adc
fidivrl
imull
jne
cmp
scas
out
in
jbe
add
push
mov
jge
push
cli
aam
test
movsl
ja
lds
aad
movsl
test
std
mov
fs
push
sar
fidivs
mov
ss
into
dec
and
mov
push
dec
shlb
lea
subl
mov
xor
pop
xchg
jns
ja
out
add
ja
or
les
mov
repnz
ss
lods
pop
push
out
adcl
sub
lret
push
andl
int
jg
jns
fcompl
insl
addl
pop
dec
dec
sub
ds
sti
gs
aam
aaa
sbb
xchg
dec
stc
dec
dec
mov
lods
inc
sub
repnz
sbb
out
or
sbb
sub
pop
ret
adc
adc
xchg
rorb
jb
dec
dec
xchg
mov
mov
cli
pop
mov
or
fbstp
adcl
subl
icebp
dec
les
fs
insb
inc
pushf
test
lret
jecxz
dec
jg
lods
push
jle
or
push
mov
cld
aad
aaa
fwait
sub
xchg
jp
lea
mov
push
cmpsl
mov
stos
or
out
sahf
mov
xchg
lea
je
xchg
sarl
movsb
mov
add
je
jmp
jb
xchg
pop
in
out
push
jp
roll
mov
movsl
push
leave
stos
psrld
out
inc
in
and
aas
dec
repnz
enter
cld
jl
icebp
jno
xor
inc
jge
jmp
clc
imul
lea
adc
mov
xorb
jle
cmp
push
jbe
loopne
ds
imul
mov
push
rcrb
add
jmp
stos
sti
addr16
and
lahf
lahf
dec
or
scas
aas
mulb
les
insl
cmp
mov
jnp
jg
aaa
pop
sar
dec
sub
daa
jbe
dec
stc
rcrb
adc
xor
push
xor
sti
mov
ud1
or
cmc
or
fidivl
aad
std
push
cs
lahf
jl
mov
cmp
movsl
cmpsl
push
and
inc
rol
pop
jns
fbld
mov
mov
ja
push
sub
mov
push
jne
cmp
xor
mov
adc
dec
lret
jne
inc
out
inc
lret
test
xor
sbb
cmc
ja
xchg
lret
pop
xor
mov
adc
lret
add
sbbl
mov
mov
mov
jb
cmpsb
stos
push
xorl
cmp
or
mov
inc
mov
enter
cltd
sub
xchg
loopne
stos
test
jnp
out
sub
pusha
je
aad
cmp
cmp
add
fs
mov
ss
jecxz
xchg
lcall
pop
cmp
mov
popa
jmp
sub
pusha
xchg
adc
push
aas
pop
bound
mov
ja
sti
push
mov
stos
aad
jg
clc
push
test
lret
inc
adc
lock
sti
and
and
sbb
enter
movsl
sbbl
dec
mov
les
dec
roll
shl
outsl
adc
in
in
aas
into
jecxz
adc
xlat
cmp
inc
xor
xchg
lods
xchg
dec
sarb
and
pop
sub
push
xchg
stos
sarb
mov
or
stos
pop
jb
loopne
adc
jmp
repz
imul
ds
cs
fcmovnu
xchg
andl
ljmp
les
mov
push
mov
add
fcmove
xor
ss
xchg
loop
pusha
mov
fadds
pop
mov
neg
inc
cmp
jecxz
pop
xorl
add
scas
cmpsl
shlb
out
in
inc
or
frstor
iret
mov
fsts
in
pusha
pop
pop
pop
or
cmp
rcrb
xchg
inc
inc
mov
cmpsb
pop
loope
push
movsl
xor
loope
dec
cmp
xchg
dec
inc
mov
repz
pop
mov
add
test
and
mov
adc
mov
pop
pushf
fimuls
jle
stc
mov
jge
adc
pop
add
shll
xchg
imul
cmp
xchg
sub
out
push
jle
int3
jp
sub
push
scas
addr16
push
cld
pop
mov
pop
xlat
ficompl
and
cltd
push
into
fdivl
sbb
data16
sti
lock
push
pop
cmp
data16
outsb
mov
adcl
inc
push
xchg
push
stos
ret
push
or
push
dec
lds
adc
sub
sbb
cmp
test
pop
dec
outsb
enter
scas
add
push
leave
jae
es
sbb
dec
inc
adc
pop
test
jmp
jmp
sbb
pop
in
int3
add
mov
and
cmp
sar
cmpsb
test
cs
cwtl
and
sbb
push
aam
cli
subl
cmp
cmp
test
rcrb
enter
nop
mov
mov
push
push
cmp
or
scas
xor
cli
or
sub
cmp
lds
cmp
jg
mov
iret
mov
subl
scas
in
add
inc
sub
mov
imul
sbb
and
filds
pop
add
push
mov
mov
cmp
jns
push
pop
sti
aaa
dec
cwtl
icebp
xor
cmpsl
sub
outsl
mov
sub
jmp
pop
or
enter
mov
mov
xchg
insb
ret
xchg
in
add
cmpsb
jae
push
cmp
jns
mov
xor
jmp
xchg
in
jecxz
pop
inc
mov
cwtl
cmp
xchg
or
movl
mov
aam
fcmovnb
popa
pop
insl
pop
fnstenv
jmp
lcall
mov
rolb
dec
gs
adc
sub
cltd
pusha
test
push
in
cmp
je
mov
fimull
ss
pop
xor
mov
or
add
adc
xchg
xor
ss
dec
xor
loopne
lcall
mov
push
inc
enter
fdivr
xchg
adc
add
push
xor
dec
adc
lea
and
scas
aas
jns
mov
fs
sbb
stos
mov
jl
repnz
and
dec
stos
mov
adc
cmc
cmp
cmp
mov
sub
cmp
add
test
stos
and
add
cmc
lcall
sbb
jae
adc
fwait
xchg
mov
pop
mov
shll
aam
sbb
sti
fs
mov
out
and
in
sarl
movsb
jge
mov
push
mov
in
pop
test
div
sub
ja
xlat
adc
fnstcw
mov
test
pop
les
dec
xchg
dec
xchg
shll
or
dec
daa
jecxz
pop
scas
cld
jbe
xchg
push
mov
dec
cmp
rcr
dec
jo
stc
fisttps
rcrl
sti
and
mov
je
pop
xchg
sub
jecxz
gs
sbb
jae
cld
fsubl
xor
enter
loope
or
rorb
mov
lret
add
jl
roll
jmp
hlt
movsb
sub
cld
adc
and
clc
mov
gs
xchg
pop
into
pop
fs
add
outsb
push
pushf
add
pop
call
fsubl
push
movsb
cmc
xchg
outsb
in
andb
incl
mov
addb
arpl
out
addr16
mov
test
dec
jmp
arpl
lods
testb
inc
or
mov
add
mov
mov
mov
dec
ror
mov
add
xchg
jbe
pop
jge
inc
jne
adc
fisubs
sahf
je
inc
sbb
mov
jp
insb
inc
xchg
repnz
inc
adc
test
push
add
and
inc
push
add
stos
jae
sbb
adc
sub
bound
dec
lret
fdivl
negb
xlat
sarl
and
dec
sbb
sbbl
pop
cmpsl
add
push
pop
pop
xchg
insb
iret
test
movsb
jae
adcl
imul
divb
cmpsb
gs
scas
jae
nop
sub
cmp
dec
cmpsb
mov
push
mov
sub
jl
add
pop
and
sahf
std
cmp
stos
add
pop
pop
and
pop
iret
jmp
and
adc
add
and
imul
lahf
aas
dec
cmp
and
xchg
dec
jne
inc
andb
mov
jmp
sbb
mov
aas
std
hlt
and
aaa
push
out
and
fimuls
stc
icebp
adc
js
scas
arpl
mov
out
inc
clc
sub
and
out
addr16
jl
bound
sti
aad
insb
push
insl
imul
xor
cmp
into
mov
out
mov
cmp
mull
int
subb
aad
cmp
jge
pop
xchg
ficompl
adc
sti
jecxz
cmpsb
ror
je
xchg
mov
rcr
cmp
pop
jbe
sti
fisubl
jb
fwait
rcrb
jbe
out
aad
and
and
lcall
loopne
aad
xchg
mov
push
outsl
push
fdivl
iret
fs
fbld
pop
mov
xchg
xchg
xchg
add
les
mov
dec
sbb
sub
and
push
cmp
xor
sbb
mov
out
ret
nop
jns
mov
testl
mov
lea
push
sbb
dec
fs
sar
mov
in
add
inc
pop
xchg
sbb
mov
xchg
pusha
adc
roll
add
data16
in
mov
push
mov
mov
out
mov
mov
popl
or
pop
mov
jmp
mov
outsl
cmp
sbb
fs
cltd
std
ja
cld
xchg
aas
popa
push
sub
jbe
cs
inc
push
add
cmpsl
shl
scas
movsl
pop
int3
pop
repnz
fwait
mov
push
das
mov
call
scas
pop
cmpsl
xor
leave
dec
nop
in
fstpt
jg
out
rorl
sbb
xchg
jmp
out
imul
das
shll
das
sbb
test
in
fstl
pop
or
and
sbb
mov
add
adc
pop
ja
jns
ja
sub
into
push
je
sub
sub
jmp
stc
mov
sbb
mov
mov
in
and
push
dec
sahf
mov
dec
lods
xchg
lea
inc
cmp
rcr
fwait
pop
adc
pushf
lock
fstpl
stc
aas
mov
dec
in
je
sbb
dec
xchg
xchg
mov
push
fs
inc
dec
jg
fwait
lcall
cmp
inc
hlt
in
call
and
mov
in
mov
lcall
movsb
or
sahf
das
adc
scas
into
xchg
mulb
std
mov
xor
stos
sbb
popf
mov
inc
out
mov
aaa
mov
xor
shlb
inc
lret
jno
mov
pop
xor
popf
pop
cmp
dec
mov
mov
pop
push
pushf
dec
or
test
sarl
pop
push
mov
push
jp
xchg
movsb
xchg
dec
adc
mov
push
outsl
add
in
cmc
repnz
into
sbb
inc
imul
push
sahf
cmp
bound
push
inc
mov
sub
leave
nop
dec
jns
dec
fldt
ja
jg
mov
pop
jae
pop
inc
cltd
mov
mov
push
fsts
and
ljmp
sub
push
pop
cmp
pop
dec
in
mov
mov
jmp
loopne
pop
add
push
test
pop
and
mov
cmp
mov
pand
add
sub
push
pop
add
lahf
sbb
lahf
push
xchg
bound
xor
fucomp
nop
repz
test
mov
cmp
out
mov
adc
mov
es
cld
dec
inc
icebp
ja
jns
repnz
add
pop
aaa
outsb
cmp
ds
mov
stos
inc
and
fildll
fwait
adc
push
jmp
pop
imul
push
inc
sub
jmp
sbb
sub
jl
jle
cmp
in
sub
mov
sub
fucomi
leave
inc
jmp
dec
sub
shll
ljmp
jae
fs
std
push
xchg
pop
dec
mov
dec
xor
push
xor
testl
cli
dec
hlt
pop
cmpsb
jecxz
bound
jg
insl
insl
xchg
mov
adc
mov
jae
movsb
pop
pop
or
mov
loope
jge
inc
mov
and
sbb
mov
std
jp
add
mov
or
push
xchg
mov
push
scas
sbbl
pop
out
jmp
testb
pop
add
xchg
jbe
or
fdivl
xlat
mov
pop
xchg
rclb
cmpsl
loopne
aaa
andl
movsl
jp
pop
into
call
lock
outsl
adc
adc
jp
add
lahf
icebp
leave
roll
add
cmp
adc
lods
cmp
xchg
pop
push
adcb
add
stos
iret
daa
sub
mov
test
xchg
shl
sbb
sbb
xor
jo
imul
std
lret
nop
sub
adc
aaa
and
sbb
xor
fs
sub
add
inc
mov
ret
mov
sub
scas
stos
inc
inc
xchg
std
jno
fldenv
mov
int
fcmove
stos
add
jp
jnp
out
ret
dec
jae
test
subb
lods
sbb
andl
std
out
sbb
cli
cmpl
and
call
jg
mov
call
xchg
lret
and
push
movsb
data16
bound
push
adc
ret
pop
lods
popa
and
or
into
imul
das
mov
rcll
std
cmpsl
call
xchg
fsubp
pop
jg
mov
mov
xor
add
fwait
add
xchg
sbb
fiadds
subl
pop
jb
push
daa
pop
mov
xor
dec
sub
pusha
pop
fxch
sti
in
add
cltd
or
sbb
loopne
repz
ds
test
mov
and
call
imul
in
sub
add
cmpsb
xchg
lret
frstor
repnz
push
push
lret
xchg
dec
hlt
jnp
adc
cmp
stos
repnz
xchg
andb
or
int
loope
icebp
lds
push
iret
adcl
sbb
inc
jns
fsincos
pop
les
add
mov
cmc
sbb
jne
pop
shrl
jl
fcompl
xor
rcrb
hlt
aam
and
or
lock
orb
repnz
imul
and
jmp
data16
adc
fisubl
pop
neg
imul
and
jno
adc
push
es
xchg
jmp
imulb
movsl
inc
adc
cs
shlb
fidivs
xchg
xchg
pop
jb
pop
add
aam
lahf
js
mov
out
fdivr
jae
insb
aad
ds
xchg
in
movaps
sub
movsl
sti
sub
out
xchg
movsl
jmp
out
xchg
mov
mov
test
jnp
and
imul
lret
or
mov
fbld
sub
inc
int3
insb
cmp
rorb
adc
call
jl
es
or
mov
mov
sti
jp
xlat
sbb
in
dec
pop
outsb
push
xchg
xchg
dec
sub
cmp
cmpsb
xchg
ja
shll
fistpl
rclb
rcrl
mov
push
lods
inc
mov
mov
cmp
lock
fwait
loope
or
hlt
int3
dec
test
xchg
xchg
cwtl
or
cmp
rcr
jno
jl
daa
adc
test
sub
add
jecxz
fwait
pop
scas
push
std
mov
ds
sbb
mov
fildl
arpl
fldl
dec
dec
lods
aas
or
dec
xchg
fsubrl
xchg
cmp
pushf
adc
adc
ds
cmc
xchg
popa
das
dec
inc
std
outsl
stos
mov
jecxz
jle
push
iret
and
add
ds
sbbl
das
pop
pop
mov
pop
push
scas
iret
mov
sub
sub
cmp
xchg
test
cld
lcall
push
test
jne
jg
jp
adc
or
jmp
fldcw
les
jge
mov
clc
lods
bound
jg
dec
sub
or
adc
fidivs
cmpl
cwtl
aas
shrb
aaa
or
lret
adc
mov
sti
les
fisubrs
adc
mov
sbb
xchg
xchg
data16
mov
lods
inc
arpl
mov
gs
test
stc
lahf
sbb
ds
xchg
mov
test
aam
int3
jl
inc
js
mov
jnp
stc
push
cli
xchg
add
dec
push
and
out
fsubp
test
sarb
xor
imul
repz
jl
clc
insb
call
inc
out
pop
lods
or
in
xor
adc
repz
pop
adc
xchg
lret
and
add
pop
jecxz
mov
inc
es
adc
mov
jno
cmp
pusha
mov
mov
xor
ds
adc
adc
iret
dec
pushf
movsl
push
jne
and
stc
leave
or
jle
pop
fucom
mov
rolb
jb
inc
push
movsl
inc
pop
adc
mov
dec
insl
push
bound
data16
into
xchg
lret
mov
jle
mov
pop
mov
bound
orl
test
xor
dec
jo
pop
or
and
aam
fmull
leave
and
ds
pop
add
fnsave
sbb
jb
sbb
cmp
ret
mov
pop
pusha
ds
fdivrl
push
xor
jno
icebp
and
in
fnstsw
cld
insl
jae
inc
jne
clc
push
shrl
inc
jnp
rorb
and
in
xor
cmp
and
sub
xlat
xlat
jno
les
bound
aas
fsts
add
sub
jo
sub
pop
pop
dec
xor
movsb
es
fildl
mov
jnp
jne
fsubs
add
dec
ret
repz
or
and
das
add
out
pop
fneni(8087
in
cmp
xor
dec
jg
shrl
inc
sbb
adc
sub
sbb
repz
insl
adc
pusha
push
bound
cwtl
push
pop
add
scas
xor
add
test
mov
imul
sti
into
hlt
scas
rcrb
xlat
scas
jo
adc
add
jbe
xor
stos
out
je
mov
mov
mov
jo
fsubrl
pop
rorb
xchg
nop
movsl
push
mov
adc
add
sub
xor
mov
addr16
or
fisubs
andl
mov
test
in
jne
xor
mov
es
mov
xor
mov
sub
sarb
adc
cmp
pop
xchg
and
inc
test
ds
int3
mov
or
push
into
out
xchg
cli
pop
jle
sbb
push
push
popa
push
js
jns
cmp
push
lret
mov
mov
daa
sub
inc
stos
mov
fisttps
xchg
add
cmp
add
or
xor
cwtl
in
push
dec
push
mov
fstl
add
leave
pop
enter
aad
fmul
xchg
jp
sub
jg
aad
mov
stc
js
inc
into
cmp
scas
ror
xchg
jnp
xchg
out
add
aaa
test
xlat
or
xchg
sbb
jne
test
arpl
sub
hlt
loop
fucom
add
push
clc
cmp
call
xchg
out
xor
sbb
inc
ret
popf
mov
mov
or
mov
std
mov
push
sbb
sbb
fldt
or
xor
rcll
mov
fcoml
sub
cmp
call
stc
lods
and
fidivs
or
and
lods
cwtl
gs
pop
add
mov
aas
test
sub
mov
inc
das
adc
or
ret
mov
jp
jecxz
pop
xchg
mov
inc
inc
lock
add
pushf
imul
rorb
adc
clc
loop
stos
sub
out
adc
rcrb
dec
push
adc
adc
mov
push
sbb
mov
adc
cmovo
cmp
xchg
push
sbb
inc
les
jmp
push
les
or
pop
mov
push
sbb
pop
inc
retw
loop
icebp
pop
cmp
jg
mov
cmp
repz
push
fstl
lret
add
and
add
pop
loopne
cmp
sbb
rcrl
sub
sarl
pusha
xchg
pop
fldl
push
jns
rorl
out
mov
xor
test
imul
aas
add
sub
nop
scas
inc
jge
bound
inc
ds
fildl
std
jnp
test
pop
push
inc
adcb
std
pushf
mov
sub
jae
jge
sub
xor
sbb
inc
pushf
xrelease
movsl
lret
stos
adc
and
push
mov
pop
and
cld
sahf
pop
stos
cmp
mov
add
test
add
in
rclb
mov
cmc
mov
lret
or
pop
out
cmp
mov
sbbl
mov
fcmovu
outsb
stos
repz
sub
pop
mov
dec
xchg
insl
in
cmp
imul
scas
lahf
inc
fldt
dec
mov
int
rcrl
push
ret
push
dec
sbb
push
and
mov
inc
xor
inc
and
filds
bound
mov
sbb
loope
jge
out
inc
loop
imul
mov
insb
sbb
mov
shrb
xchg
jns
decb
xor
movsl
fadd
test
push
push
shrl
jl
jle
dec
sahf
inc
or
insl
or
cmpsb
insb
push
push
pop
stos
add
lods
inc
pushf
xorl
sub
xchg
sub
lock
nop
rcr
inc
aad
aaa
cmpsb
push
mov
mov
test
fmuls
call
lcall
pop
ss
mov
push
cmpsb
les
rclb
in
outsl
sub
adc
or
cld
push
pop
fsub
sbb
scas
mov
mov
adc
repz
mov
jmp
mov
lcall
rorl
mov
jb
test
sbb
push
and
mov
jecxz
outsb
call
push
push
lods
aad
xor
arpl
test
push
ljmp
cwtl
fsubr
in
daa
rcr
xlat
imul
xor
les
mov
test
js
movsl
in
movsl
add
imul
jge
xchg
push
cmp
cmp
push
movl
lret
xor
sbb
add
cmp
shrl
mov
es
outsl
gs
pop
jl
or
xor
mov
mov
pop
movsl
xchg
outsl
push
jnp
sti
sub
cmp
shrl
lock
push
mov
pop
xor
jl
stos
mov
cmp
and
mov
push
daa
pushf
loope
adc
dec
test
cmpsb
in
fistpl
sbb
mov
divl
xor
jl
sbb
into
das
cmpsb
jnp
jbe
cld
xor
xor
mov
lods
out
imull
mov
clc
mov
or
imul
push
xchg
jmp
lock
jl
mov
int3
xchg
rorl
cs
mov
fs
jg
div
mov
xlat
inc
mov
and
outsb
cwtl
xor
fstps
jnp
cmp
and
clc
into
dec
cwtl
xlat
mov
dec
std
push
and
lret
dec
dec
push
test
push
outsl
rorb
daa
jecxz
imul
test
std
in
lahf
xlat
jae
sub
jb
shrb
xchg
xor
sub
addr16
cs
mov
cmp
dec
mov
push
insb
mov
lret
jmp
or
dec
xchg
inc
xor
or
ja
sub
hlt
mov
cmp
pop
lods
and
in
dec
fcompl
imul
ljmp
insb
lods
sub
xchg
mov
adc
and
adc
cmc
sahf
adc
fs
ficoms
xor
inc
cwtl
lret
mov
mov
adc
xor
ret
data16
xchg
sbb
aad
inc
adc
popa
mov
je
xchg
and
sbb
shlb
xchg
and
mov
pop
cmpsl
lahf
adc
push
stos
push
dec
outsb
adc
xchg
sti
cmp
jno
xchg
pop
outsl
ret
dec
clc
lret
jne
cmp
dec
movsb
ret
out
mov
data16
movzbl
pop
movsb
inc
push
mov
dec
mov
cmpsb
movb
sub
les
rorb
movsl
data16
mov
adcl
jecxz
lea
jge
popf
jae
ret
aad
inc
notb
inc
sahf
outsb
add
jae
and
fimull
add
fcmovne
mov
insb
out
movsl
out
pop
add
mov
arpl
popf
sub
popf
lods
or
jb
cmc
inc
adc
adc
jbe
cli
lret
mov
pop
fucom
imul
out
xlat
fxsave
dec
insw
leave
orb
inc
hlt
push
sub
rclb
nop
dec
cmp
test
and
mov
stos
dec
inc
enter
test
cmp
insb
or
fisubl
pop
adc
repz
cmp
stc
jb
mov
inc
lods
fs
out
cmp
xchg
lcall
dec
and
mov
ja
pop
test
cmp
mov
inc
mov
fwait
dec
leave
fldt
outsl
add
adc
stos
ljmp
scas
mov
cltd
dec
jg
sbb
out
addr16
and
cmpsb
fcomi
insl
jae
cmp
dec
add
mov
in
test
cwtl
pushf
mov
lods
dec
mov
shll
ret
cld
sbb
adc
sti
mov
adc
scas
ret
xor
adc
mov
les
push
push
shr
addr16
add
cmpsb
pusha
adc
pop
add
inc
sub
scas
fisubl
push
movsl
or
mov
rclb
push
push
and
xorb
cltd
jecxz
adc
cld
jo
mov
xor
lock
xlat
xor
testb
setle
fdivrs
sbb
fsts
loope
ja
scas
push
lahf
pop
pop
mov
and
out
mov
or
xlat
fistpl
arpl
add
hlt
fldcw
xchg
mov
jg
imul
jb
dec
mov
ret
add
sub
inc
rol
lcall
mov
jbe
mov
xchg
stos
shr
les
xchg
lret
lds
sahf
add
add
pop
add
fidivrs
push
jb
leave
cmpb
mov
inc
mov
xor
xchg
cmp
pop
nop
sbb
sub
inc
test
shrl
lods
mov
mov
notb
jb
xchg
xor
pop
sarl
xchg
stos
out
hlt
inc
bound
loop
stc
jge
test
jle
fsubl
lret
cmpsb
out
pop
bswap
loopne
cmpsb
aam
ss
pop
int3
mov
pop
inc
cltd
negl
cltd
lahf
push
mov
lea
xchg
int
popf
lods
out
or
cmp
mov
or
push
ret
mov
jmp
mov
in
or
mov
mov
cs
mov
into
sub
lahf
jge
xor
sbb
movsl
push
hlt
inc
sbb
jmp
jecxz
cs
inc
shl
out
out
jge
test
mov
stos
pusha
loope
xchg
sbb
nop
xor
lret
imul
lcall
push
push
in
daa
mov
shll
jge
ljmp
jae
pop
fsubrl
stc
mov
push
dec
cmp
stos
fcompl
mov
mov
lods
cmp
cmc
imul
push
lcall
push
sti
sub
add
data16
push
cwtl
pop
push
lea
add
cmp
inc
jl
je
jp
std
xor
int
xorb
out
movsb
xchg
test
mull
pop
arpl
jne
lcall
sbb
mov
add
jbe
or
push
fildll
inc
cld
sbbb
cmp
lea
loopne
jae
inc
jl
adc
inc
xchg
insl
add
sbb
xchg
dec
scas
mov
jae
xor
rorb
lods
xchg
aaa
dec
jnp
inc
or
fstp
jecxz
insl
in
mov
cmp
mov
add
loope
cmpsb
sub
inc
inc
jno
pusha
leave
push
shll
fisttps
xlat
sbb
inc
ss
lds
pop
hlt
dec
add
ffree
imul
jge
sub
icebp
repnz
scas
lods
fs
jo
xor
xor
mov
add
jg
mov
and
loop
cmpsl
mov
ror
rcl
mov
arpl
dec
jl
and
xor
inc
mov
push
sub
push
dec
push
ret
fwait
outsb
leave
mov
push
leave
xchg
in
mov
dec
outsl
test
mov
sub
add
imul
and
and
adc
faddp
and
xchg
xor
ss
mov
or
ljmp
cmp
cltd
push
js
test
xor
add
sahf
orl
and
std
push
cmp
add
out
mov
into
rcrb
cmpsb
cwtl
test
mov
mov
mov
ja
pushf
mov
or
sbb
push
adcb
in
mov
ds
loop
ljmp
push
xor
sub
loop
aaa
subb
add
mov
jecxz
cmp
popf
clc
xchg
nop
jbe
lret
push
sub
add
movsb
add
sti
icebp
push
and
popf
cmpsb
pop
out
mov
sub
bswap
data16
mov
adc
das
pop
mov
fwait
fwait
mov
adc
fistpll
repnz
xchg
frstor
das
jmp
and
test
into
daa
fildll
jo
cmp
fistpl
pusha
lea
mov
loop
outsb
js
movsl
or
sarl
shl
push
add
cmpsl
pushf
jne
adc
mov
xchg
pop
xlat
jle
pop
pop
mov
mov
pop
int3
pushf
cmp
lcall
bswap
inc
xlat
xchg
jl
fsubrs
dec
push
dec
je
inc
out
insl
pop
pop
leave
stos
rorb
push
rcl
sbb
adcb
push
and
mov
ss
and
dec
push
nop
and
scas
insb
push
jp
mov
shlb
push
insl
pop
push
inc
jecxz
xor
jo
sub
loop
push
xor
sti
dec
dec
out
ret
sub
pop
push
push
push
jb
cmp
add
clc
xor
cli
std
inc
push
push
push
hlt
pushf
push
xchg
inc
add
ret
notb
xchg
cmpsb
call
mov
stos
repnz
es
adc
adc
pushf
jecxz
xor
in
mov
inc
mov
inc
mov
adcb
xchg
imul
jg
adc
push
in
movsb
sbb
add
lods
adc
jo
or
pop
loop
push
mov
ljmp
xchg
xchg
not
popl
xchg
int3
dec
sahf
inc
cwtl
jns
call
xor
jns
inc
jp
jl
cmp
in
sbb
add
dec
lcall
inc
inc
mov
mov
pop
dec
fs
add
leave
cmp
sahf
testb
inc
push
mov
leave
xor
adc
push
xchg
push
mov
gs
mov
or
int
sbb
int
jbe
xchg
in
sbb
aaa
push
dec
mov
std
stos
dec
test
mov
call
xchg
jl
in
cwtl
xchg
arpl
xchg
mov
rcrb
mov
cmpsb
mov
add
inc
xchg
std
mov
xchg
cmpsb
stc
hlt
daa
adc
pushf
mov
repz
sahf
and
xor
adc
dec
psraw
ficoms
fwait
movsl
inc
idiv
popl
mov
or
mov
xor
dec
or
or
dec
out
jnp
push
mov
cmpsl
inc
mov
add
test
sub
test
dec
pop
cmp
aaa
cmp
inc
fwait
hlt
imul
push
jp
adc
test
sbb
outsl
inc
lret
jo
xchg
pop
fwait
mov
mov
aaa
leave
fldcw
lods
jb
stos
lock
lds
int
addr16
int
sub
popf
sahf
sbb
movsb
pusha
testl
les
enter
and
icebp
mov
jle
test
arpl
pop
insl
xor
mov
mov
scas
in
ds
mov
jae
inc
cmp
mov
xchg
or
cmpsl
add
mov
cmp
hlt
fistl
out
sub
lcall
and
out
mov
lea
inc
lds
push
fdivr
mov
sbb
fsubr
aaa
out
stos
ss
jnp
mov
mov
push
adc
mov
push
pusha
mov
sub
in
sub
dec
sub
js
int
out
incl
hlt
push
jle
jbe
rcrl
sbb
jns
movsb
into
and
dec
call
cmp
out
cltd
inc
repz
es
adc
sub
sbb
add
aam
mov
mov
jb
call
pop
sbb
xchg
movsl
push
mov
mov
mov
and
incb
add
stc
sub
jmp
mov
pop
pop
clc
push
ljmp
mov
add
cli
fistpl
mov
aad
andb
mov
fdivp
das
lret
das
fsubrs
addr16
push
das
add
xchg
insl
push
push
aam
cmp
inc
rcrb
push
pushl
ficompl
jl
xchg
sahf
jp
add
repz
test
push
test
push
call
add
sub
leave
fcomps
clc
xchg
jb
ds
loopne
fsubs
mov
mov
ds
lahf
int
push
insl
mov
xor
test
adc
test
push
orb
pop
dec
mov
aas
jle
sub
add
aas
mov
jo
sub
adc
jo
es
shrb
push
mov
in
insb
fwait
or
daa
sbb
or
in
insb
push
push
mov
fwait
js
clc
pop
iret
sub
xchg
fwait
shlb
jnp
popf
or
dec
repnz
sbb
in
sbb
lcall
inc
pop
add
add
push
ja
jmp
jb
mov
push
adc
jle
push
les
mov
test
mov
push
imul
sbb
mov
into
adc
js
rorl
pop
jmp
jbe
test
test
xchg
cmp
cmc
imul
int
arpl
scas
fisubs
cwtl
pop
lea
mov
loopne
or
stos
sub
sahf
mov
shrl
mov
xchg
xor
jbe
fdivs
lahf
fisubs
pusha
add
out
pop
xchg
out
jle
mov
dec
jae
repnz
insb
pop
inc
fcoml
sub
jle
and
or
mov
js
and
pusha
push
jae
pop
sub
icebp
std
mov
and
in
xor
push
jns
pop
in
movsl
fcoml
fsubr
add
and
mov
cld
jns
push
mov
gs
add
clc
cmp
adc
lds
inc
mov
sbb
xchg
movsl
push
inc
lcall
mov
jle
xchg
out
jo
pop
mov
jae
imul
mov
xchg
ss
jne
mov
fadd
mov
ret
or
or
and
out
jl
push
inc
es
jl
test
cmpsl
add
test
inc
xchg
in
aad
leave
stos
or
ss
pop
cmp
push
mov
dec
ljmp
inc
add
add
in
lahf
stos
pop
cltd
jns
xchg
sbb
or
fs
jmp
movsb
in
es
push
mov
or
jnp
mov
sbb
stos
jne
cmpsl
jne
inc
popf
bound
scas
pop
mov
stos
dec
fldcw
sti
mov
mulb
sahf
lcall
push
cwtl
adc
dec
pop
sub
xlat
mov
dec
mov
mov
je
fisubl
and
push
jecxz,pt
push
mov
shlb
xor
cmp
inc
lret
fcmovbe
clc
pop
xchg
jp
gs
lock
in
lcall
push
push
mov
push
pop
sub
add
inc
scas
stos
or
xchg
mov
mov
push
pop
or
jg
pop
adc
xorl
push
mov
ror
and
pop
addr16
jns
push
rcrb
xchg
icebp
sub
popa
dec
sahf
cmpsb
jge
shll
pop
and
data16
jno
push
and
popa
outsb
mov
les
mov
cs
hlt
push
jns
or
xchg
inc
mov
mov
mov
mov
iret
test
mov
xor
ja
shrb
insb
mov
xchg
pop
sub
sahf
push
dec
inc
jle
aaa
push
test
pop
jne
xchg
imull
sbb
mov
push
adc
pop
mov
out
pop
xor
dec
mov
outsl
xchg
subb
in
clc
cmp
xchg
jmp
out
mov
dec
out
and
lcall
into
daa
sbb
or
popa
mov
mov
push
push
mov
cmpsl
fisttpl
push
push
lret
imul
xchg
or
fwait
mov
clc
mov
adc
out
add
jne
movsl
mov
loopne
sub
adc
rclb
sbb
mov
and
hlt
sub
mov
in
lret
sub
cltd
popf
xchg
cs
out
arpl
cmc
and
and
into
cwtl
push
popa
loopne
aam
add
jl
ljmp
mov
xlat
cmp
lcall
addl
pop
lcall
out
or
pop
xor
or
xor
subb
and
stos
js
fimull
mov
sub
push
cld
adc
sbb
pop
ret
mov
fstpl
xchg
mov
sbb
outsl
sub
adc
push
adc
insl
push
lds
pop
mov
inc
jle
aaa
xbegin
out
in
xlat
xor
stc
outsl
or
std
cmp
pop
lds
push
mov
fwait
push
and
jmp
imul
into
andb
xchg
call
xchg
mov
pop
and
icebp
cli
mov
addr16
jo
fs
loopne
push
inc
sub
fcomps
cs
mov
push
pop
push
or
imulb
dec
popf
ljmp
cmp
push
inc
mov
dec
imul
mov
dec
xor
mov
int
add
mov
lret
mov
mov
lcall
cwtl
fs
xchg
jnp
xchg
sbb
mov
pushf
enter
fcomip
jae
fwait
mov
push
push
dec
imul
push
pop
and
lahf
clc
ja
xchg
outsl
ret
jecxz
pop
sub
cmp
mov
shll
add
xchg
sub
pop
in
and
int3
push
jae
inc
add
add
scas
iret
ja
pop
cmp
js
and
xor
mov
pushf
rolb
or
or
sti
fbld
in
dec
or
arpl
adc
adc
sbb
and
jne
roll
mov
fwait
pop
gs
mov
out
jb
ljmp
dec
fdivs
jo
insl
sbb
bound
or
fcoml
adc
xchg
test
call
cld
fwait
fwait
or
push
aas
ss
inc
aad
imul
push
mov
loopne
aad
sbb
and
pop
sahf
push
pop
pop
sti
add
add
xor
adc
mov
push
fsubrl
int
adc
into
fnstsw
adc
mov
mov
fsubl
enter
lret
or
inc
or
push
inc
clc
push
nop
stos
xchg
xor
jo
adc
sub
addb
pop
mov
icebp
pop
sbb
push
and
movsb
ja
decl
or
out
inc
aaa
cmp
aam
rolb
mov
inc
aaa
pushf
inc
daa
ret
adc
dec
je
je
mov
cmp
das
cld
nop
bound
push
push
mov
jg
pushf
mov
mov
add
push
lahf
cs
icebp
sub
push
xchg
lret
nop
xorb
jl
inc
sahf
mov
fcomps
movsl
ret
lea
sub
shl
sub
mov
inc
jno
and
dec
mov
enter
insl
cmp
xchg
inc
mov
aas
aam
rcr
das
ror
insb
adc
sub
push
pushf
dec
and
jg
aad
lcall
jnp
insl
pop
pop
in
mov
fldt
or
dec
inc
pop
fwait
push
inc
int3
jl
mov
push
add
dec
push
or
orl
jl
sbbl
push
push
fcmovb
xor
inc
mov
outsl
jne
mov
xorb
pop
sbb
dec
mov
testb
fidivrl
std
mov
divl
andb
add
int3
xchg
call
and
push
add
push
mov
sbb
xor
jo
imul
jnp
mov
hlt
pop
in
mov
pop
popa
jecxz
push
std
loop
cmp
test
pop
sarl
ret
push
pop
pop
out
les
lods
lret
stos
test
fs
aam
pushf
add
push
jp
ret
movsb
push
xlat
aas
scas
divl
in
arpl
sbb
xor
or
xor
ficoms
cmp
sub
mov
repnz
push
push
stos
lods
stos
sub
mov
int
sub
sub
popf
shll
mov
cmpsl
push
mov
lea
rcrb
dec
leave
ret
pop
test
sbb
sarb
jge
jb
mov
push
adc
pop
jo
movsb
xchg
mov
ret
in
aam
shll
mov
mov
cmpsl
in
jnp
jg
jge
adcb
lods
or
fisubs
mov
pushf
aas
mov
pop
push
or
cmpsl
imulb
neg
scas
or
and
nop
addl
lret
ret
movsb
inc
mov
or
call
nop
iret
daa
jp
mov
push
in
arpl
popa
dec
push
out
out
push
push
mov
mov
mov
cmp
adcb
je
aam
jno
mov
insb
adc
xor
ud2
pop
ljmp
in
dec
push
ja
in
les
or
sbb
xchg
notb
xchg
jle
sar
inc
jle
sbb
ret
lret
lahf
stos
xchg
or
push
mov
sub
mov
push
pop
bound
dec
lret
pop
mov
psrld
sti
loop
or
fstl
push
jne
sub
push
cmp
scas
testl
mov
xor
inc
pop
ja
jmp
jnp
mov
push
jg,pn
scas
cmpsl
jge
pop
in
push
lods
in
hlt
ja
call
add
roll
shl
shlb
xor
and
mov
icebp
cltd
repnz
sti
sub
in
or
jno
stos
xchg
sub
int3
stc
in
sub
adc
xchg
or
fwait
lea
xor
icebp
shlb
xchg
adc
lods
lret
clc
cmp
adc
mov
cmp
mov
enter
mov
add
pop
inc
js
inc
or
xor
and
rolb
arpl
ss
and
or
jmp
jae
popa
pop
sub
push
jae
test
ds
dec
mov
in
ret
adc
pop
push
push
mov
data16
ret
push
pop
pop
enter
das
mov
mov
push
pop
add
stos
enter
pop
test
popf
das
sub
mov
mov
xor
inc
cmp
cmpsl
sbb
out
dec
mov
subl
test
xchg
mov
mov
push
cmpsl
xchg
xlat
dec
push
push
std
in
outsb
xor
movsb
or
out
mov
mov
data16
mov
inc
in
nop
out
popa
lods
push
ror
add
cmp
push
stc
pop
add
xchg
cmpsl
cwtl
je
decl
cmp
lss
jl
xor
jl
pop
andb
fistl
or
addr16
pop
dec
jge
or
cltd
dec
adc
lock
jnp
inc
cmp
ja
mov
outsb
push
add
push
mov
xchg
into
fists
mov
repz
xchg
loop
ret
arpl
push
xor
test
push
and
test
ret
stc
pop
xor
lds
xchg
sub
sahf
add
fsubrp
cmp
xchg
xor
jmp
loop
insb
or
mov
cmp
mov
dec
add
popa
clc
int
cwtl
jns
xchg
jg
sbb
mov
adc
dec
push
into
js
loopne
hlt
add
jg
lds
pop
cmc
out
push
or
iret
push
or
bswap
cmp
dec
in
sti
in
jle
fisubrl
sbb
mov
and
aad
xchg
jle
adc
or
add
push
aas
in
scas
push
shrb
leave
sub
inc
fisubrs
sti
jbe
pop
xor
mov
aas
out
cwtl
punpcklbw
cmpsl
add
add
mov
adc
push
lret
adc
arpl
ja
rclb
out
pop
jl
or
cwtl
mov
pop
fincstp
jecxz
xor
frstor
or
pusha
mov
shlb
pop
bound
or
es
lret
jl
repnz
sahf
or
cmpsl
cld
sbbl
xchg
xchg
inc
mov
jno
cmp
stos
xor
and
lods
dec
and
mov
addr16
inc
push
cmp
daa
daa
test
fwait
or
popa
mov
cmpl
nop
inc
addr16
push
cwtl
popa
xorl
repnz
movsb
jae
jl
out
addr16
add
jbe
fsubp
xchg
imul
adc
mov
std
xor
mov
stc
hlt
mov
pop
jo
add
iret
add
pop
jl
add
and
jb
hlt
or
orb
inc
cmpsl
xlat
xchg
icebp
cmpsl
sahf
adc
pop
test
cmp
ret
int
fwait
nop
bound
jns
sub
adc
adc
pushf
cmpsl
jecxz
cmpl
pop
push
cmp
cwtl
call
clc
jo
jmp
inc
dec
jmp
mov
arpl
add
push
pushf
cmp
enter
or
cld
push
or
sbb
mov
add
sbb
sbb
mull
ljmp
fisubrs
dec
jl
push
call
add
pop
push
call
nop
dec
mov
pushf
movsl
fs
sub
cltd
xchg
out
mov
inc
jne
addr16
xchg
sarl
mov
mov
sub
shrb
xchg
cmp
movb
insb
mov
loope
test
xchg
mov
dec
and
out
stos
sbb
daa
cmpb
ja
hlt
inc
test
fistl
daa
cli
int
loop
test
cmp
fs
xchg
loop
ljmp
out
negb
inc
cltd
xchg
adc
xchg
addr16
hlt
and
add
sbb
cwtl
xchg
or
sub
fisubrl
in
icebp
pop
es
cmc
push
mov
insb
push
or
adc
jb
jnp
inc
sbbb
jno
das
jle
das
aas
pop
jns
xchg
lods
das
fiaddl
lods
mov
ret
push
aaa
fs
adc
int3
adc
lret
mov
loopne
sub
loopne
cmpsl
int3
jns
xor
shrb
enter
xor
dec
lea
push
sti
iret
add
adc
in
pop
notl
adc
sar
cmp
or
fidivrl
outsl
bound
add
aas
xchg
xor
inc
cmp
dec
adc
mov
lods
enter
sbb
pop
out
icebp
cs
scas
xchg
shr
xchg
test
xor
outsl
mov
and
arpl
rol
pop
repz
push
sub
add
dec
add
and
ljmp
aam
test
jl
arpl
repnz
sub
test
jae
adc
movsb
lcall
push
nop
call
xor
pop
mov
jl
cld
popa
in
insb
xor
test
mov
push
push
mov
sbbl
mov
stc
mov
sub
push
pop
push
dec
jae
xor
jg
dec
loop
sub
push
sti
dec
cmc
xchg
int
fsubl
mov
repz
xor
push
test
out
int
add
xor
add
mov
jle
push
scas
test
add
ljmp
mov
jmp
orl
and
cmp
jbe
adc
sahf
jl
jb
icebp
insb
adcl
test
orl
cmp
ret
cmp
pop
pop
push
rolb
rorb
and
mov
enter
in
cwtl
rol
js
pop
mov
push
cld
mov
in
xor
mov
jg
aad
ss
movsl
mov
lcall
pop
ja
and
outsb
inc
cs
movsl
jo
sub
mov
lcall
xor
add
lret
pop
dec
pop
or
aad
xchg
xor
movsl
call
sbb
xchg
std
mov
push
subl
shr
sbb
shlb
test
dec
sti
pop
sub
std
ja
loopne
add
mov
push
pop
rolb
sub
mov
ja
mov
rcl
cmp
daa
xor
adc
sub
jb
jbe,pn
arpl
jg
negl
enter
ret
jg
mov
scas
cmpsb
out
int
bound
or
sbb
or
shlb
push
or
aas
adc
mov
cmp
mov
mov
out
aad
mov
and
loop
add
add
and
pop
mov
pop
adc
push
mov
mov
iret
sbb
cli
orl
or
loope
test
xchg
and
dec
xchg
pop
dec
mov
jae
xchg
xor
std
movsl
mov
ja
out
loope
stos
inc
fidivrs
push
lds
jle
mov
dec
xchg
aam
in
aam
push
xchg
adc
pop
adc
add
pop
mov
xchg
or
repz
rcrb
scas
jecxz
in
scas
jbe
jnp
pop
sahf
scas
cwtl
inc
xchg
sub
mov
xchg
mov
popa
ds
adc
jnp
push
es
inc
jne
mov
push
popa
sbb
dec
jae
inc
insl
xchg
or
jne
push
cmc
call
cld
cmp
movsb
and
mov
stos
and
aas
ja
add
fcoml
cmpsl
jecxz
mov
enter
das
lock
popl
cmp
xchg
xchg
fists
mov
imul
or
das
outsb
mov
xor
adc
xchg
adc
sbb
jle
pushf
or
js
jns
fldl
in
mov
lret
sar
xchg
push
imul
mov
adc
addr16
int3
jecxz
fldl
dec
js
in
or
mov
lds
loop
sub
mov
sub
jmp
xchg
testb
popa
repnz
xorl
stos
push
lahf
inc
xchg
repz
shrb
cli
in
add
daa
push
cmp
sar
sbb
mov
inc
sahf
lahf
lahf
filds
push
pop
mov
jno
sbb
or
sbb
fsts
xlat
dec
dec
xor
cmp
out
jecxz
out
fucomp
out
and
xor
jne
inc
adcl
or
pop
push
rclb
lods
mov
xchg
cmp
out
push
in
cli
or
pop
or
pushf
or
xor
add
push
fisubrs
push
pop
cmp
cmp
movsl
cs
nop
and
mov
or
aam
add
or
mull
push
in
push
jnp
icebp
out
jle
setp
pushf
or
mov
xchg
enter
dec
push
cli
sub
mov
cs
mov
aas
cmp
sub
mov
fs
divb
push
fsubr
jmp
enter
leave
or
clc
jo
lods
adc
jbe
xchg
leave
jmp
cli
roll
cmp
xor
test
or
sahf
sbb
jg
lret
push
mov
mov
sbb
lahf
xchg
int
jne
cmp
in
push
mov
lds
mov
add
push
in
jbe
outsb
pop
mov
xchg
and
sahf
inc
dec
jo
and
outsl
scas
adc
jecxz
movsl
iret
cltd
pop
test
add
inc
icebp
test
fs
adc
gs
pop
jecxz
addl
cld
out
fadds
lods
mov
jo
movsl
insb
sub
jns
into
cli
sub
adc
andb
sar
fists
rclb
push
sub
lret
pop
pusha
sahf
scas
jmp
rol
push
ds
cmp
and
add
add
rolb
and
js
or
mov
mov
pop
mov
xchg
fdivrl
das
mov
push
test
inc
lret
jne
lea
and
and
cmc
les
xchg
dec
and
inc
or
push
mov
test
pop
push
dec
cmc
jg
add
mulb
inc
pop
addb
inc
shlb
ret
adc
lcall
inc
clc
jg,pn
pop
sarb
xchg
inc
or
push
sbb
popa
sbb
lahf
mov
adc
ret
mov
pop
push
xchg
adc
cmp
fadd
repz
call
jae
jle,pt
data16
imul
mov
cmp
lahf
shlb
std
and
sub
lahf
mov
stos
push
xchg
and
fwait
lret
bound
scas
test
mov
nop
enter
mov
xchg
or
mov
mov
mov
jno
mov
stos
lea
cli
and
insb
pop
in
inc
gs
xchg
rol
mul
shlb
mov
test
cmc
outsl
outsl
or
adc
adc
jl
enter
xchg
adc
pop
xchg
cmp
xchg
xchg
lret
pop
enter
jnp
push
mov
ret
xchg
cmp
adc
jge
in
sahf
stos
mov
adc
jne
ja
jno
outsl
test
lret
leave
mov
push
mov
stc
repnz
cmp
or
test
into
rorb
pop
mul
jns
test
fnstenv
imulb
mov
mov
sbbl
paddw
cmp
sahf
popf
mov
inc
jno
jmp
add
xor
mov
arpl
pop
xor
out
jno
cmp
mov
push
cs
out
iret
insl
js
mov
leave
loop
cmp
inc
sub
cmp
dec
xchg
int3
icebp
or
mov
call
cmpb
inc
mov
imul
into
icebp
xchg
pop
js
mov
mov
roll
mov
xchg
lcall
data16
test
lods
mov
and
test
fsubr
ja
loope
mov
mov
add
dec
mov
or
inc
lds
in
into
aaa
ret
mov
dec
hlt
sbb
out
cmp
fs
inc
test
mov
add
call
and
xchg
in
or
push
bound
add
cwtl
aas
aad
inc
sbb
dec
repz
dec
jo
ja
inc
clc
push
xlat
loop
sbb
mov
adc
and
dec
movsl
sub
jl
xchg
xchg
pusha
adc
je
cld
sbb
pop
mov
xor
or
sub
push
bound
inc
iret
fcmovnu
xchg
jno
push
xchg
lods
scas
cli
stc
push
outsb
mov
jo
push
add
xor
fcompl
jl
mov
jecxz
shlb
jns,pn
sub
mov
or
adc
gs
insl
cmp
push
xchg
frstor
clc
sti
xor
add
or
lcall
in
and
push
jp
sbb
lret
pop
or
xlat
outsb
dec
dec
cmpb
dec
lret
push
pushf
jbe
mov
imul
imul
xlat
xchg
aad
mov
das
mov
shrl
inc
mov
mov
adc
out
out
cmc
cmpb
xor
mov
in
dec
shll
adc
inc
stc
push
sub
cs
mov
xchg
fs
push
mov
cmpsl
repnz
aad
ja
inc
and
es
test
inc
mov
mov
jae
mov
mov
fs
push
push
hlt
jbe
ljmp
sub
bound
mov
outsb
cltd
ret
adc
and
jae
add
sbb
int
pop
adc
sub
and
adc
sahf
subl
mov
lret
inc
inc
inc
iret
cltd
sub
mov
xor
sahf
lock
daa
mov
dec
or
rep
sahf
push
outsb
les
add
pop
dec
mov
jmp
or
jmp
xchg
mov
mov
xor
cmc
inc
cmp
filds
mov
pop
in
repnz
mov
mov
outsl
push
xchg
xor
and
mov
imul
call
jge
cld
lret
outsb
movsl
jbe
jno
lods
jb
dec
dec
push
adc
not
cwtl
jo
dec
pop
xor
fldenv
std
ret
mov
xor
sub
inc
jle
dec
stos
and
loope
lea
inc
jle
ficomps
and
sbb
shll
pushf
dec
jecxz
cmpsl
dec
mov
ret
inc
pop
clc
mov
shrl
adc
mov
int
sar
dec
mov
cmp
xchg
xchg
fsub
mov
add
cmp
jecxz
lret
mov
das
and
mov
leave
push
xlat
mov
push
fistps
js
addr16
adc
lock
shr
cmp
imul
fsubr
int3
es
dec
dec
lock
cwtl
mov
push
clc
mov
stos
lahf
stos
std
sbb
xchg
fsubl
xbegin
mov
ja
in
loop
data16
xchg
cs
movsb
jne
cmp
jbe
add
push
dec
leave
inc
dec
roll
shrl
xor
popf
sbb
data16
jmp
jp
mov
addr16
and
inc
mov
xchg
bswap
push
push
mov
insb
ja
add
mull
loope
jp
loop
daa
mov
cmc
sbb
data16
sub
or
sahf
xor
sti
push
lods
adcb
xor
stos
lods
sub
and
cltd
and
fadds
rcr
pop
divb
jo
mov
repz
rclb
lret
xor
push
mov
xor
dec
sbb
jb
test
jne
mov
lret
dec
jl
movsl
packssdw
xchg
mov
mov
xor
loope
rcll
pop
mov
inc
in
pop
scas
cmp
in
add
sub
stc
movsl
lock
loope
add
std
out
or
inc
aaa
repz
and
cmpsl
lahf
jno
testl
dec
xor
push
jno
arpl
jbe
dec
enter
mov
rcrl
jo
mov
cmpsb
or
add
and
mov
int3
test
cmpsl
xchg
or
sbb
dec
push
adc
leave
lea
cmp
push
mov
inc
sahf
data16
pop
scas
jne
sbb
mov
mov
adc
stc
jle
push
out
leave
jl
xchg
pop
lods
rol
pop
pop
gs
xor
cmp
mov
leave
ja
inc
sbb
mov
lock
and
and
arpl
in
lahf
lcall
adc
pop
out
xor
and
jl
mov
pop
lock
scas
sbb
pop
cmc
inc
or
mov
and
pop
adc
sbb
jbe
loopne
adc
and
cmpl
xor
int
and
adc
xor
pop
mov
mov
jb
ds
adc
lret
repnz
in
out
push
or
push
imul
mov
fisubs
ret
inc
mov
enter
jecxz
xchg
subl
shrb
test
rorl
sahf
jnp
and
xchg
xchg
enter
and
or
out
sbb
jmp
je
mov
popa
ficoms
push
pusha
mov
lock
or
pop
ja
lret
add
xor
popa
xor
push
adc
arpl
aas
movsb
out
cmovne
aas
addr16
pop
lcall
out
out
enter
push
in
sbb
sub
adc
and
test
stos
cmp
sbb
fwait
inc
add
jmp
pop
or
sbbb
loop
fdivp
push
shrb
lahf
stos
fwait
jne
xorb
mov
sbbb
int
cmpsb
inc
js
jno
xor
mov
ret
orl
jmp
xchg
mov
scas
jb
mov
jmp
mov
push
andb
ds
xchg
xchg
sub
imul
pop
mov
jnp
lret
aad
push
fsubrl
test
cmp
push
adc
and
jl
jmp
leave
ss
cld
push
pushf
xchg
test
pushf
xchg
jg
xor
icebp
sti
lret
add
call
jl
subb
loop
dec
fildl
xor
mov
mov
jl
int3
inc
rclb
sub
push
int3
mov
sahf
xchg
loopne,pn
pop
mov
cli
mov
stc
add
mov
insb
lods
pop
scas
mov
or
dec
popa
and
pop
push
dec
sub
jns
cmpb
sbb
jno
or
addr16
sbb
pop
pop
mov
pushf
es
mov
dec
movsb
setge
div
xor
sub
pop
ret
fxch
test
xchg
outsl
sarl
sbb
pop
scas
jno,pt
adc
sbb
push
sub
sbb
inc
xchg
stc
pop
repz
int3
cmp
int
decl
push
xlat
pop
outsb
sbb
aas
dec
add
repz
cmp
inc
xchg
sbb
outsl
icebp
xor
movb
aas
push
mov
pop
sbb
xchg
jp
insb
push
stos
push
mov
pop
xorb
movsl
cmp
mov
mov
push
aad
mov
xor
adc
xor
mov
mov
push
xlat
pop
les
out
mov
jno
mov
jp
int
popa
mov
stc
daa
push
xor
jne
sbb
and
clc
rcll
lods
fwait
push
cmc
clc
sub
aas
cmp
adc
outsl
jl
jnp
lods
pop
lds
outsl
lods
cmc
dec
adc
fldenv
xchg
add
dec
imul
bound
in
mov
inc
mov
mov
push
cmp
addr16
jb
mov
cld
stc
inc
sub
insb
int
dec
out
pushl
mov
fwait
outsl
les
mov
loopne
fstl
in
ss
cmpsl
das
gs
pop
cmpsl
ds
repnz
pop
lds
push
mov
loop
fs
jmp
jmp
jle
inc
mov
int3
lods
mulb
push
sub
dec
sbb
push
push
repnz
push
cs
data16
adc
and
mov
iretw
cli
pop
out
and
mov
incb
movsl
in
imul
xorl
dec
cmpsl
sbb
mov
xor
adc
dec
in
and
rcll
repz
arpl
xor
cwtl
mov
add
push
pop
loope
cmc
jno
fsubs
jle
dec
fucomi
sbb
pandn
mov
mov
in
mov
add
pop
in
mov
adcl
addr16
xchg
ss
mov
sbb
push
je
test
mov
aaa
pushf
out
cltd
jecxz
frstor
jae,pt
mov
stos
jp
int
or
dec
push
enter
es
jge
dec
dec
sbb
add
movsb
jns
icebp
sbb
pop
xchg
mov
testl
jne
loopne
dec
repz
mov
test
push
mov
push
xor
popa
test
int
cmc
arpl
mov
gs
mov
xchg
cmp
mov
bound
scas
je
dec
data16
mov
and
psubq
pushl
xor
push
and
inc
cmpsb
divb
scas
int
mov
arpl
inc
out
or
out
es
bound
jae
and
int3
dec
mov
je
mov
or
movsb
xor
or
mov
lahf
mov
mov
addr16
loop
xchg
pop
es
jbe
int3
sahf
fnstcw
das
rclb
jne
not
ficomps
cwtl
stos
mov
loop
add
sub
shr
add
jmp
push
pop
pop
loopne
mov
popa
daa
aam
mov
je
fwait
call
cmp
adcb
and
jae
mov
push
std
add
jmp
push
or
fldt
or
jne
js
push
cmpsb
mov
pop
enter
dec
loope
mov
mov
xchg
dec
call
and
les
popl
sahf
xorb
pop
pop
fsts
inc
push
cld
mov
and
pop
jnp
lret
jno
mov
mov
push
cmpl
std
dec
sub
ljmp
dec
daa
pop
mov
cs
outsl
sub
in
fdivrs
sub
xchg
stc
push
mov
gs
xlat
imul
mov
push
arpl
les
adc
sahf
mov
dec
xor
js
std
fmull
cli
or
scas
sub
mov
xor
adc
pop
mov
xchg
cmpsl
nop
cmpsb
in
test
adc
sahf
loope
fdivrs
mov
imul
pop
or
js
arpl
out
jp,pn
pop
adc
pushf
lret
popa
sbb
dec
xor
aam
add
inc
iret
cmc
jle
gs
mov
push
pop
insb
loope
pop
jbe
enter
mov
inc
mov
xor
inc
dec
sbb
sub
cmp
sbb
inc
jle
cwtl
stos
inc
scas
mov
aam
fwait
cmp
or
inc
fnstsw
cmp
xchg
call
cwtl
adcl
in
loopne
xor
lea
add
mov
out
pop
shl
adc
sti
in
arpl
insb
cmp
shrl
cmp
adc
mov
fwait
aad
imul
add
xchg
lcall
sbb
test
jo
fidivl
add
aad
pushf
scas
imul
mov
arpl
adcl
loopew
mov
dec
mov
mov
cmp
sub
arpl
xorl
into
push
sbb
push
idiv
sbb
xor
adc
push
les
and
pop
push
cmp
sbb
sarb
push
jnp
mov
into
test
push
mov
lahf
std
push
loopne
das
out
sub
out
out
nop
repz
add
push
fildl
movb
rclb
loop
repz
sub
and
or
in
arpl
insb
mov
cld
xchg
imulb
pop
mov
mov
pop
mov
movsb
in
push
in
outsb
mov
or
outsb
jo
daa
test
fidivs
test
adc
into
inc
arpl
nop
jns
popa
push
jge
adc
jb
xchg
push
iret
cmpsl
je
add
inc
push
mov
push
cwtl
jno
sub
xchg
jg
out
sarl
aaa
xor
sub
ret
bnd
dec
inc
dec
cltd
sub
cmp
lcall
or
push
or
sub
lods
xlat
adc
dec
call
cmp
scas
adc
stos
xchg
push
or
outsl
faddl
and
lcall
add
out
in
mov
or
clc
jecxz
jbe
pop
pusha
jg
mov
fwait
xchg
hlt
sub
in
es
xchg
push
dec
test
dec
lcall
jo
dec
stos
jne
dec
xor
sub
xor
cmp
mov
push
sbb
mov
imul
and
loopne
jp
dec
xchg
mov
ljmp
cmpsb
xchg
xchg
imul
test
inc
sti
scas
cmpsb
shr
in
mov
sbb
lret
in
test
xor
fs
ret
pop
xchg
jne
add
pop
mov
test
je
xchg
pop
jbe
add
dec
sbb
pushf
movsb
or
or
jo
dec
popf
jge
into
adc
jo
push
mov
adc
and
fdivrs
cmp
fwait
cmc
mov
daa
mov
lea
xor
popf
jne
dec
js
out
xchg
movsl
aad
lret
addb
sub
xchg
jl
and
sarb
jle
dec
pop
adc
push
out
lahf
movsb
testl
xor
stc
fidivl
es
xchg
pop
mov
fsubp
test
cli
mov
das
lods
sarl
xchg
and
jne
fwait
push
ret
popw
fidivrs
in
pop
xchg
jb
aas
mov
xor
fsubrl
xor
add
mov
in
jnp
call
inc
ret
cmp
and
inc
cmpsb
loop
mov
mov
jns
clc
sbb
jne
imul
aam
xor
in
leave
pop
sbb
jbe
cmpsl
pop
insl
dec
outsl
les
inc
cmp
out
ffree
add
dec
testb
dec
aam
sbb
outsb
xchg
xchg
push
adc
sahf
pop
daa
cwtl
movsb
lds
cmp
jne
push
pop
and
pop
mov
mov
mov
add
loopne
das
adc
shrb
int
scas
fiadds
ds
jbe
fidivs
in
mov
push
xor
xchg
mov
inc
jae
xor
aam
mov
aaa
insl
add
ljmp
ret
dec
jge
into
cs
xor
stos
shll
and
stc
fldenv
sub
adc
sub
adc
insl
xor
testb
stc
ret
and
insb
sbb
sbb
mov
cmp
sbb
popa
cmpsl
xchg
pop
jno
dec
sbb
mov
jne
pusha
lock
jecxz
mov
cmp
lret
into
mov
arpl
cltd
cltd
xor
xor
xor
xlat
jb
mov
mov
loop
imul
stos
pop
push
pop
fdivrs
pop
pop
add
jb
inc
add
notl
negb
add
movl
cmc
arpl
mov
adc
je
mov
sbb
testl
cmpsb
sbb
in
mov
or
sahf
adc
aaa
mov
and
icebp
int3
sbb
inc
test
lods
loopne
mov
jno
repz
mov
mov
out
int3
fwait
leave
mov
jl
xchg
adcb
leave
mov
ffree
lcall
pop
or
es
and
negb
mov
pop
jbe
xchg
gs
mov
ljmp
dec
negl
xchg
and
or
imul
scas
add
jnp
inc
sub
aad
pop
rorb
push
out
in
scas
and
jmp
shlb
jnp
push
loopne
mov
outsl
push
adc
pusha
xlat
sbb
cmp
push
daa
rcll
push
dec
push
lods
push
addr16
pop
jno
loopne
lea
pop
jp
and
out
arpl
popa
imul
je
data16
jge
mov
roll
cmpsb
iret
xor
or
stos
in
jo
sub
negb
mov
out
pop
repnz
mov
dec
ror
cmp
dec
lret
lcall
aas
xchg
pop
ja
mov
xchg
repz
or
push
sub
cmp
xor
loop
sbb
mov
sbb
jp
and
cwtl
fnsave
mov
mov
dec
adc
mov
outsb
xorl
add
int
or
lret
iret
int
mov
or
sub
data16
js
xchg
jmp
fsubrl
and
lods
add
inc
push
jge
cmp
mov
inc
in
add
mov
and
insl
sbb
inc
int3
cmp
add
jecxz
enter
sbb
jp
imul
in
pusha
xchg
cmp
fisttpl
jne
xchg
and
cmpsb
call
outsb
mov
jmp
shr
shlb
add
ljmp
jmp
int3
stos
sti
rorb
push
shl
jle
jbe
out
fildll
dec
or
fs
jnp
pop
xchg
push
bound
pop
outsb
mov
and
call
fs
jno
pop
ret
jae
mov
and
fists
xchg
cltd
inc
sti
mov
fidivrs
lea
loop
mov
add
lods
les
shlb
mov
movsb
mov
lock
push
lds
inc
xchg
jg
clc
scas
pop
loop
mov
enter
scas
mov
pop
in
jno
cmp
iret
push
mov
loopne
pop
ja
pop
sbb
imul
add
add
jne
sbb
jb
and
push
das
and
jo
mov
int3
push
sub
mov
lods
jne
mov
mull
jae
mov
fsubrs
jo
cmp
push
push
ficoml
or
ja
jmp
mov
jbe
xchg
popa
jmp
sbb
or
xchg
cs
shrl
popf
add
lret
xlat
and
test
fistps
jnp
bound
leave
dec
jnp
jmp
cmpsl
adc
gs
fsub
pop
adc
jmp
sub
jge
and
insb
pop
mov
je
inc
mov
add
xchg
mov
sub
sbb
dec
pop
stc
dec
xor
inc
shlb
loopne
fld
sub
insb
outsl
mov
mov
mov
dec
sbb
xchg
sahf
push
dec
xlat
lods
pop
xchg
sbb
mov
mov
imul
jbe
lea
jno
lock
mov
imul
ret
repnz
jmp
mov
aas
psllw
push
aas
test
imul
frstor
push
daa
and
mov
ja
and
or
imul
cmpsb
js
adc
movsb
insb
jmp
movsl
out
inc
daa
or
sti
add
mov
push
or
xchg
cmp
mov
fisubrs
ja
stc
mov
stos
push
mov
cli
add
fsubrl
stc
push
xchg
adc
bound
out
cld
pop
add
lcall
scas
xor
sub
mov
and
loope
int
jns
out
push
lds
xor
andl
pop
sub
fmuls
addl
call
push
xorl
aas
out
or
dec
popa
sub
push
pusha
add
cld
and
jae
xor
or
in
cltd
ljmp
shl
jne
push
cmpsb
les
jg
pusha
dec
push
jle
push
sub
adc
jmp
popf
popf
pop
xchg
outsl
dec
jmp
jg
fisubs
jge
mov
outsl
mov
or
lcall
sub
in
xchg
xchg
dec
push
neg
push
push
sub
pop
xor
push
lea
cmpsb
daa
fldl
push
test
push
mov
or
iret
sbb
out
push
or
cmp
or
jbe
jne
cmpb
cli
jns
xchg
rclb
jne
lret
jecxz
lods
fincstp
int3
inc
rolb
in
sbb
enter
in
das
lret
add
jg
mov
sahf
test
dec
iret
mov
pop
push
and
cwtl
stc
pop
jle
add
mov
jmp
ret
pop
cs
jo
fmull
mov
ret
bound
adc
mov
popa
xchg
inc
jecxz
je
notl
mov
mov
in
std
out
jo
divb
dec
jecxz
mov
fsubrs
stos
and
stc
and
imul
lods
push
xchg
jl
cltd
negl
in
jl
sahf
ljmp
pop
fsubrl
aam
insl
cmp
imul
insl
les
push
popa
movsl
lods
fwait
mov
setns
push
mov
mov
and
pop
adc
and
in
cmp
cmp
arpl
rclb
aam
and
dec
add
xchg
pop
lahf
mov
jge
push
pop
fwait
inc
movsl
and
add
xchg
movsb
out
ljmp
dec
mov
jle
in
pushf
aam
mov
xchg
dec
mov
bound
popf
xchg
or
cwtl
mov
cmpb
or
xchg
ret
fucomip
lret
jns
fbstp
mov
aaa
sbb
clc
lahf
and
sbb
sbb
jae
pop
mov
cmp
lret
int
fld
aaa
inc
pop
pop
stos
test
inc
jge
sbb
mov
hlt
or
ret
mov
inc
test
fwait
sub
incl
or
flds
dec
aaa
lods
lahf
ret
jge
fs
inc
ret
out
sbb
cmc
xchg
test
ss
imul
out
sar
jno
jnp
or
std
mov
mov
stc
cs
out
ss
jle
aad
movb
push
push
add
mov
pop
and
jmp
dec
mov
mov
push
into
mov
or
scas
ds
nop
mov
jbe
arpl
add
or
sub
cmp
cmp
das
loopne
stc
aas
into
jmp
leave
mov
subl
gs
adc
jge
fildl
outsb
jle
pop
enter
push
insl
repz
aaa
xchg
jne
sub
mov
mov
add
cmpsb
dec
inc
and
outsb
jle
sbb
movsl
dec
rorl
cmp
jle
sbb
movsb
pop
lcall
cwtl
fldcw
adc
dec
jns
cld
mov
dec
lret
dec
adc
dec
in
ret
orl
pusha
dec
lret
outsb
rol
sbb
add
push
imul
divl
fucomi
and
fbld
fdivl
mov
mov
test
inc
pop
cmp
lock
xor
xchg
mov
scas
cmp
icebp
in
scas
xchg
fsubp
mov
mov
mov
mov
stos
out
mov
sub
cld
fadd
cmp
inc
or
scas
popl
mov
mov
push
mov
mov
dec
fwait
scas
ja
cltd
je
pop
gs
filds
das
or
mov
icebp
insb
inc
fbld
aaa
jecxz
lret
sub
sbb
test
pop
testb
aaa
gs
daa
sbb
or
flds
mov
in
adc
pop
inc
cwtl
cmp
xchg
sbbb
xor
adc
mov
or
ret
ds
inc
dec
mov
cmp
mov
dec
mov
mov
sub
mov
xchg
push
add
fs
scas
pop
cmp
mov
lds
mov
pusha
rcl
mov
jne
cmp
fsubp
into
pushf
and
data16
xor
adc
ret
je
or
lret
enter
inc
inc
das
aad
stos
nop
inc
orl
arpl
xor
adc
sarl
jae
subb
cs
fisttpl
out
pop
mov
xchg
imul
sahf
es
je
ret
push
jle
test
mov
rcrb
add
repz
inc
jns
fwait
ljmp
cltd
aad
addb
or
xor
nop
or
pop
dec
lahf
cmp
mov
sub
xchg
ja
shl
movsl
jge
pop
xchg
mov
js
xor
in
jmp
dec
lods
insl
or
movsl
aas
stos
jmp
out
shr
sub
add
push
imul
cmpsb
push
popa
fsubr
pop
aas
loope
xchg
dec
push
pop
xorb
popf
dec
inc
cs
mov
stos
pushf
subl
jmp
push
stos
pop
cli
adc
adc
adcb
push
lods
pop
jg
jecxz
xchg
hlt
lods
enter
data16
lock
push
idivl
mov
xchg
adc
mov
dec
mov
cmc
push
mov
cmp
ret
mov
fcomps
mov
dec
cmp
push
sub
ja
out
mov
movsb
or
xchg
xchg
insb
popa
or
jbe
mov
cld
insl
pushf
outsb
push
cltd
out
jecxz
xchg
nop
push
je
fs
fcos
aas
pop
push
xor
les
inc
ss
lret
insl
sub
or
inc
popf
insl
mov
sbb
adc
jbe
xor
inc
js
lret
popf
pop
jp
aaa
pop
mov
inc
loop
cmp
adc
pop
imul
add
adc
ss
stos
into
cmpsl
es
cmc
test
or
add
cmp
or
xchg
idivb
js
or
jmp
call
cmp
or
lret
inc
orb
hlt
stc
imull
sbb
gs
test
and
cmp
fdivs
jne
xchg
stos
xor
ljmp
out
out
inc
pop
and
push
xor
push
mov
filds
ret
add
add
int
add
mov
mov
xchg
mov
jae
sbb
inc
repnz
ss
movsl
jns
sub
pop
out
pop
fdivp
ja
addr16
and
mov
repnz
dec
cltd
mov
clc
movsl
testb
int
or
jo
push
daa
sub
mov
sub
mov
sbb
xchg
lea
mov
mov
repz
pop
test
les
or
loopne
shl
rcrb
adc
shl
push
mov
sbb
sbbl
mov
push
xchg
test
push
stos
mov
jb
hlt
divb
cmc
and
inc
fmull
pop
dec
xchg
xor
fnsave
dec
pop
mov
push
cmp
fwait
xor
repz
mov
enter
mov
mov
sbb
xchg
and
outsl
frstor
dec
xchg
mov
mov
enter
sub
or
xchg
adcl
scas
xlat
sbb
push
push
cmp
jge
jns
out
shlb
jbe
pop
aam
mov
cltd
shl
mov
jmp
jb
fsubs
rcr
pop
or
popa
or
mov
add
inc
stc
arpl
mov
mov
jns
jb
cmpsl
cld
mulb
push
adc
or
inc
gs
stc
dec
imul
stos
mov
pop
mov
and
pop
adcl
adc
in
lock
sbb
fs
inc
test
xchg
xor
jecxz
or
fwait
pushf
outsb
movl
pop
fwait
pop
cmpb
cli
in
lods
orb
icebp
jbe
mov
loope
cmpsl
xchg
xchg
pop
dec
sbb
jns
cmp
sub
je
mov
push
mov
xchg
sti
lea
sbb
popf
lock
shl
pop
rol
inc
or
adc
shl
pop
mov
loop
out
push
adc
mov
dec
and
and
shr
dec
xor
sbb
or
mov
int
int3
shl
fcmovnu
aad
dec
mov
jle
loop
mov
aas
iret
into
inc
pop
add
and
cmp
jne
push
rcll
scas
or
mov
fistpl
pop
stc
aam
mov
out
in
out
es
shrl
xchg
mov
xchg
mov
scas
add
jge
setne
pop
rol
cli
sbb
adcl
iret
rcl
out
dec
dec
cmp
pushf
dec
xchg
push
dec
das
pop
in
push
faddp
daa
stos
push
or
ljmp
mov
stos
and
sbb
nop
aad
iret
aaa
jp
int3
test
addr16
jbe
jno
pop
int
hlt
stos
add
fsub
inc
or
push
pusha
xor
mov
push
xor
jecxz
push
cmp
pop
test
inc
xchg
scas
xchg
inc
cmpl
xchg
mov
dec
es
mov
mov
call
mov
cmp
mov
fs
xchg
cmp
or
mov
popf
cltd
and
pop
int
fcmovnb
test
jg
mov
test
cmpl
dec
dec
cmp
mov
mov
pop
or
dec
sub
inc
jge
daa
popf
pusha
sahf
out
out
push
fiaddl
fst
adc
daa
mov
subl
aam
cmpsb
sub
pop
shl
mov
in
mov
out
xor
cmp
jo
push
inc
loop
jb
jl
mov
packuswb
loop
ss
fdivs
mov
mov
int
mov
mov
mov
jecxz
or
ljmp
sbb
gs
lret
and
pop
cmpsb
push
insl
std
mov
or
loop
aas
addl
mov
int3
fpatan
inc
in
xor
loop
shll
jge
sub
clc
inc
cld
in
out
ds
mov
push
jo
cmp
inc
xchg
lcall
int
xchg
nop
inc
push
and
mov
sti
rolb
cmp
dec
das
dec
mov
pop
mov
xlat
out
mov
mov
movsb
jp
fcom
sbb
mov
test
mov
and
popf
jae
lods
and
testl
gs
out
jae
mov
xchg
xchg
dec
xor
and
sti
popf
sbb
inc
inc
int3
iret
scas
fimuls
test
sbbb
test
fmuls
cmpsl
rol
ja
rolb
adc
mov
and
jmp
mov
pop
xchg
sahf
fsts
pop
push
dec
xchg
jmp
push
add
rclb
add
out
mov
mov
xor
enter
sub
xchg
mov
xchg
jnp
gs
cmc
inc
fsubr
push
popa
lods
push
sub
cmp
mov
dec
outsl
gs
mov
cmpsb
fisttpl
lret
add
dec
dec
pop
mov
inc
jge
xchg
scas
and
mov
adc
test
data16
pop
mov
mov
in
out
push
fcmovu
adc
iret
mov
mov
mov
cmc
lods
and
jnp
or
iret
out
stc
xor
fists
lret
dec
jo
movsl
aam
cltd
push
adc
xchg
andb
aam
loope
jmp
into
jb
cmp
or
push
sbb
mov
mov
or
insl
or
fidivrs
sub
jecxz
shrl
adc
jg
push
ret
xlat
ja
dec
adc
inc
nop
jle
movsb
es
jne
adc
dec
adc
sbb
or
cld
push
xchg
inc
les
xor
mov
insl
pop
hlt
jecxz
std
andl
out
cli
sbb
gs
adc
inc
lret
cwtl
add
push
into
inc
mov
out
shlb
push
inc
push
inc
xchg
ss
sbb
cmc
out
nop
mov
inc
xchg
clc
add
and
hlt
mov
pop
aam
std
shlb
or
mov
or
or
cltd
mov
out
setnp
rol
xchg
push
daa
lahf
push
adcb
fistpl
cmp
clc
stc
lcall
es
jmp
cwtl
mov
out
stos
in
adc
xchg
and
sbb
sahf
clc
fcompl
scas
aas
pop
push
ret
stos
imul
enter
testl
jnp
enter
push
movsb
xchg
lods
pop
xor
nop
pop
sub
mov
push
push
aad
adc
movsl
call
xor
out
add
dec
leave
repnz
push
pop
add
adc
cmp
mov
cmpsb
lods
test
sbbl
pop
jae
push
adc
jns
fwait
inc
push
pop
pop
inc
jb
pop
filds
jmp
insb
shll
fs
sub
lahf
xchg
je
xchg
or
ja
sahf
push
mov
pusha
xchg
push
adc
xor
lea
mov
add
sub
or
fwait
sbb
and
incl
icebp
js
lods
ja
sbbb
add
rcll
std
sbb
shl
imul
pop
pop
lret
or
dec
loope
fwait
dec
pop
mov
sub
faddl
jb
jae
sub
jl
mov
sub
cmp
ja
fcomps
lods
and
push
xor
mov
inc
inc
xor
bound
insl
lret
fdivl
popf
dec
cltd
rclw
inc
and
fildll
in
mov
pusha
cld
push
ja
stos
pop
mov
sbb
add
popf
mov
and
lahf
in
nop
movsl
xchg
test
call
or
xchg
mov
mov
cltd
and
cmp
lock
repz
ret
xchg
jge
sub
outsl
pop
mov
out
and
das
scas
fstps
xchg
xor
roll
fistpll
cltd
inc
mov
sbb
or
rorl
mov
cmp
rolb
cmp
scas
dec
stos
arpl
aas
fimuls
popf
or
divl
dec
sbb
out
roll
test
sub
scas
adc
bnd
sbb
jmp
rorb
mov
sub
xor
jl
insb
inc
into
mov
sub
jb
fiaddl
cltd
xchg
and
lods
aam
inc
jl
xor
aad
movsb
es
cmp
or
xchg
lock
icebp
sbbb
xchg
or
addr16
inc
cmp
and
int3
dec
push
std
or
stos
cli
pusha
daa
xor
sti
inc
jb
mov
pop
mov
jle
in
fistpl
inc
in
cld
loope
xor
testb
add
daa
push
ret
or
or
xor
lahf
jns
and
cld
push
cld
daa
inc
mov
inc
in
hlt
pop
inc
inc
lahf
mov
daa
stos
sub
jns
xor
stos
leave
stc
fstp
cmpsb
jmp
push
jl
and
xchg
pushf
mov
push
ret
scas
mov
orl
inc
push
in
js
outsb
adc
lds
mov
cwtl
jmp
sub
lods
mov
das
in
inc
pop
dec
addr16
mov
mov
sbb
mov
jg
popa
flds
xorb
add
enter
jae
push
enter
jl
shll
mov
cltd
aad
mov
iret
xchg
push
mov
or
push
mov
mov
and
pop
mov
pop
mov
rcrb
sahf
mov
icebp
push
xchg
or
sub
mov
mov
cmp
add
clc
add
cmp
lahf
in
aad
mov
mov
les
je
fs
mov
jb
push
xlat
add
or
adcl
mov
or
jecxz
push
ss
ror
imul
dec
jnp
movsb
movsl
scas
and
adc
lods
and
adc
mov
hlt
jle
leave
mov
fistpl
test
mov
cld
insb
pop
js
pop
imul
shll
pop
repz
and
push
arpl
outsl
daa
ret
shll
inc
fs
mov
lods
and
lea
mov
out
scas
pop
add
and
vmovss
loop
sbb
xor
jo
outsb
mov
ret
mov
mov
fnstsw
dec
xchg
out
jle
mov
lret
lock
xlat
xchg
out
adc
inc
cltd
jae
or
stos
std
call
jns
leave
mov
add
inc
cmp
or
push
gs
xor
leave
mov
and
push
shlb
xchg
cmp
xor
or
sysenter
mov
popa
adc
sbb
cwtl
xchg
fiaddl
xchg
pop
and
or
aam
stos
push
mov
test
inc
xchg
pop
sbb
push
sub
cwtd
jmp
sbb
pop
rol
inc
jecxz
lret
push
test
arpl
int
popa
mov
cmp
mov
add
test
daa
jg
in
fdivr
mov
adc
shl
xchg
mov
inc
stos
jne
pop
mov
add
mov
aaa
sbb
stos
push
add
js
sub
rcll
sub
aas
jne
inc
jge
push
sbb
fcoms
xor
mov
hlt
mov
out
je
out
les
clc
rcll
mov
mov
ret
sbb
adc
sbb
pop
jp
or
push
push
pushf
jecxz
jg
lea
hlt
xchg
fwait
add
sub
movsb
aaa
lods
xchg
aas
stos
jmp
add
mov
cmpsb
out
movb
sub
cmp
fucomip
cmpsl
popf
lods
pop
lock
pop
inc
cmp
adc
out
sahf
adc
enter
and
loop
dec
adc
adc
mov
shll
out
icebp
jb
push
out
into
push
sbb
fs
mov
mov
insl
cmp
cmp
mov
jle
test
pop
add
stc
inc
inc
mov
test
xchg
pop
and
fsts
test
pop
stos
adc
aaa
jg
incl
and
fwait
xor
adc
mov
aas
fcoml
ds
push
out
in
fs
les
push
pop
subl
dec
xor
mov
data16
jge
mov
cmp
out
in
hlt
adc
mov
jno
insb
cwtl
push
ds
imul
adc
add
mov
subb
inc
dec
cli
cmpsb
ret
pop
jo
addr16
adc
or
mov
enter
or
jle
xchg
inc
and
push
sti
icebp
outsw
jno
enter
mov
jnp
out
cmp
dec
lods
cmc
shl
sub
cltd
shr
aam
cmpsl
mov
int
mov
cmp
jecxz
mov
insb
rolb
jmp
inc
ljmp
jl
sti
out
dec
test
push
aaa
or
dec
sbb
inc
in
clc
sbb
icebp
fucomip
sti
dec
clc
jmp
cmp
cs
cmp
out
into
sbbb
in
stos
out
dec
in
and
movsb
mov
add
dec
adc
mov
xchg
dec
iret
cmc
mov
imul
repnz
popf
test
adc
adc
lds
shrl
movsb
gs
sbb
dec
les
xchg
sub
aaa
mov
sub
cmpsl
cmp
cs
cltd
dec
fmul
test
hlt
scas
pop
out
cld
push
gs
jmp
adc
fiaddl
sbb
gs
icebp
add
and
add
mov
pop
pop
loope
fwait
sub
mov
mov
sub
test
cli
icebp
mov
mov
jecxz
xchg
mov
cmpsw
adc
aam
jmp
xchg
rorl
fldl
sti
mov
cmp
xor
pop
pop
cmp
and
mov
and
daa
fld1
push
outsb
xchg
out
stc
lcall
mov
sub
popa
into
cmp
pushf
loopne
adc
shlb
shlb
std
incl
insb
inc
shl
test
ss
jp
scas
pop
push
pop
into
mov
imul
jo
movsl
ja
sbb
sub
push
stos
lods
push
repz
bound
aaa
mov
das
xchg
push
in
dec
push
and
push
dec
and
inc
mov
addr16
arpl
and
push
test
aad
mov
out
rcrb
jb
lret
cmpsl
fmull
pop
fwait
sbb
adc
in
adc
add
xor
pushf
jl
arpl
loopne
xor
into
xor
stc
dec
jns
rcrl
gs
jo
rclb
sbb
adc
into
or
and
sub
jge
mov
testb
push
adc
push
dec
push
sbb
testl
xchg
sub
push
dec
mov
fs
repnz
fsts
push
data16
mov
pop
imul
or
add
std
cwtl
test
fcoms
out
mov
xchg
add
sbb
iret
in
pop
inc
pop
mov
fstl
xchg
sub
adc
sarb
add
stc
dec
xchg
jecxz
pop
and
je
out
mov
pop
loopne
inc
dec
aaa
jne
add
cmpl
push
adc
pop
incb
stos
xchg
jns
loop
pop
or
mov
les
nop
loop
xchg
leave
inc
mov
xchg
sub
into
dec
mov
in
mov
mov
das
test
fsubr
leave
aaa
pop
sub
xchg
repz
sbb
mov
push
jmp
xchg
and
mov
ja
add
mov
mov
aad
jnp
push
mov
lods
push
mov
jne
mov
xchg
frstpm(287
movsb
js
xchg
shlb
scas
xchg
inc
cmp
sarb
movsb
sahf
test
loopne
mov
call
roll
in
dec
adc
xorl
loop
sub
sub
lret
cmpsb
mov
ret
pop
or
aad
repnz
xor
clc
outsl
fmuls
sahf
pop
or
mov
or
lret
clc
xchg
sub
aam
mov
xchg
cltd
fwait
mov
inc
iret
lds
into
jno
incb
push
ss
inc
ds
sbb
mov
ljmp
andl
and
lcall
fs
enter
pop
xchg
pusha
and
push
sbb
repnz
xchg
shr
jl
cs
or
pop
repnz
int3
nop
xchg
push
add
inc
sub
adc
dec
jl,pn
add
mov
mov
push
fbstp
xor
inc
mov
or
mov
cmpsb
adc
aad
push
mov
rcr
and
xor
sub
sub
cld
cltd
clc
je
xor
out
out
inc
int3
inc
cmp
adc
cmp
mov
adc
pushf
je
cmp
stc
ret
gs
fistpll
sbb
cmp
test
push
sbb
rol
mov
jg
out
pop
insl
pop
push
adc
notb
xchg
sti
notl
xchg
iret
inc
and
pop
xor
cwtl
lcall
lret
sub
pop
int3
orb
add
loope
and
adc
sbb
cmp
dec
into
out
and
mov
aas
jb
lret
cmp
jns
test
out
mov
adc
xor
fistpl
imulb
xchg
pop
stos
aas
push
inc
dec
mov
jg
int
popl
fisttpll
push
inc
movsl
cmp
fimuls
mov
lret
jmp
mov
imul
cmp
in
jle
sti
mov
in
cmp
scas
out
repnz
add
test
hlt
jecxz
out
inc
push
cmc
imul
in
lds
cwtl
js
cli
in
inc
rol
fimull
xor
adc
in
add
jl
sub
xchg
lcall
xchg
out
adc
dec
pop
lcall
sbb
and
rcrb
scas
and
mov
adc
mov
jge
or
cs
sub
mov
inc
dec
pop
adc
or
gs
cmp
cmp
xor
and
pop
sbb
cli
shlb
push
xchg
jg
mov
sub
xor
je
jns
cmc
xchg
xchg
daa
adc
ret
test
lcall
pop
outsl
stos
ljmp
adc
jg
bound
hlt
fistpll
clc
and
sbb
cmc
outsl
mov
int
stos
icebp
filds
pop
push
or
lea
dec
scas
cmp
aas
cmc
mov
pop
cwtl
adc
jns
das
jecxz
iret
sub
insl
arpl
inc
push
push
dec
in
gs
push
mov
mov
and
in
in
jns
ds
cmpsb
adc
jge
push
jmp
popa
or
rol
scas
decl
push
sbb
fldcw
jle
inc
adc
cwtl
xorb
gs
iret
sarl
call
mov
cmc
dec
test
xchg
mov
neg
push
int3
add
ret
and
sub
scas
or
arpl
cltd
pop
adc
push
and
es
imul
popa
fwait
stos
cmp
add
adc
or
add
pop
mov
in
sub
stc
les
popa
jne
sbb
or
push
sbb
mov
popf
dec
dec
fistl
leave
or
inc
insb
dec
call
stos
adc
ljmp
mov
adc
out
mov
dec
jge
pushl
sbb
in
jno
movsb
das
loopne
aas
out
add
push
adc
push
mov
dec
push
sbb
fidivl
negb
adc
hlt
jg
lcall
mov
out
ja
pop
pop
xchg
lret
dec
or
loopne
jecxz
mov
in
push
idiv
xchg
inc
mov
dec
in
fstl
sbb
fisttpll
fisubl
adc
fisubrl
inc
pop
stc
sub
fsubr
dec
mov
dec
int3
aad
mov
mov
iret
addl
lcall
stos
popa
loop
pusha
jg
push
int3
and
xor
sub
push
sbb
xchg
fbld
dec
loope
jg
pushf
test
inc
xchg
mov
push
jno
scas
and
pop
pushf
xchg
xor
xchg
push
jbe
push
popa
mov
sub
mov
lcall
xrelease
dec
adcb
and
pop
push
cld
hlt
arpl
std
dec
cmp
leave
mov
sti
jns
mov
mov
and
mov
jmp
lret
repnz
push
cmp
cltd
jo
call
jle
out
mov
divb
pushf
adc
sarl
xor
xchg
inc
sti
add
xlat
and
ret
cmp
jne
popa
call
and
xchg
xor
xorb
jle
repnz
push
mov
inc
inc
pop
jg
adc
movsl
fimuls
sbb
loope
es
inc
jge
mov
inc
push
icebp
mov
mov
push
mov
mov
xchg
jnp
aas
mov
add
jle
mov
fsubrs
inc
arpl
movntps
mov
mov
jecxz
hlt
in
punpcklwd
stos
push
mov
outsl
js
adc
movsb
jnp
cmpl
push
sbbb
adc
mov
hlt
repnz
pop
fcoml
test
sar
inc
dec
leave
sub
mov
cmpb
call
loopne
pushf
lea
out
mov
mov
lret
shlb
sub
push
fwait
sub
jp
xchg
call
flds
incl
mov
fwait
inc
xor
inc
filds
dec
jecxz
daa
lods
scas
adc
xchg
enter
pop
xchg
or
mov
loopne
sub
push
mov
push
das
shlb
rcll
out
xchg
sahf
dec
mov
push
out
inc
xchg
mov
pop
xor
and
inc
pop
xlat
dec
dec
rolb
push
mov
loop
mov
sub
sbb
pop
lods
inc
sbb
mov
mov
xchg
stc
sbb
cmpsb
dec
repz
jge
pop
test
pop
push
jl
add
in
popf
in
or
icebp
or
jp
iret
out
pop
mov
aad
scas
xor
mov
call
aaa
and
mov
dec
ljmp
push
ret
in
push
repnz
int
jle
xchg
popf
into
cwtl
mov
std
and
mov
jns
fiaddl
dec
mov
dec
add
xchg
sbb
addb
jle
cmpsl
add
push
jl
insl
cmp
pushf
out
mov
imul
xor
aam
adc
iret
inc
xchg
lahf
and
lret
jb
lret
xchg
iret
cmp
push
or
fwait
add
cmp
xchg
sar
fdivrs
jle
inc
imulb
cmpb
jb
mov
int3
jnp
mov
imul
mov
arpl
and
fmull
aad
push
lcall
cmovne
jbe
jmp
sub
das
sti
cmpsb
aad
mov
fs
clc
pushf
cmpsl
in
jbe
pusha
xchg
inc
sub
mov
pop
fistpl
cmp
aam
pushl
rol
adc
cs
mov
jnp
sbb
mov
es
xchg
inc
pop
imul
adc
fwait
mov
fsubrs
sub
jnp
mov
mov
xor
rcrl
fildl
xor
cmc
inc
dec
ret
mov
stc
inc
and
jg
mov
pop
shll
iret
cmp
xchg
jg
addl
ss
or
in
fildll
xor
push
roll
and
xor
mov
inc
mov
or
data16
mov
xor
dec
inc
hlt
fdiv
sbb
shl
xorb
out
cmp
pop
pop
and
sbb
int
sbb
lahf
jmp
sbb
xchg
imul
jbe
leave
lds
mov
pop
adc
or
in
jne
pop
cmpl
cmpb
test
jae
hlt
mov
push
adc
mov
xor
rorb
lcall
sub
cmp
or
leave
and
cmp
inc
ja
mov
adcl
fistpll
stos
fsubr
ljmp
adc
sbbb
inc
mov
or
nop
xchg
xchg
adc
movsl
scas
xchg
inc
out
fstps
jle
call
jnp
xchg
cltd
test
mov
mov
fstl
incl
shll
orb
rcr
ds
idivl
and
add
cs
push
rcl
jnp
lea
rclb
mov
call
lret
cmp
xchg
mov
or
jge
jmp
adc
and
aam
ret
les
adc
mov
fdivrl
mov
mov
or
sbb
xchg
outsb
and
sti
inc
fmull
fs
add
gs
outsb
xor
cmpsb
lcall
pop
mov
sub
sbb
std
mov
test
pop
outsl
lock
sahf
sti
sbb
repnz
lods
dec
iret
sbb
and
xchg
loop
in
jmp
int
lds
cs
jge
xor
push
jns
imul
mov
ds
or
jp
or
and
ds
push
add
mov
sti
das
sarb
pusha
and
out
loopne
sub
pop
xchg
and
add
lock
push
into
sbb
fwait
cld
fisttpl
fisubs
aam
and
les
ja
add
stc
dec
imul
scas
iret
mov
pop
or
inc
xor
rcrb
xor
pop
adc
pop
jno
mov
iret
sbb
sub
mov
cs
cmpsl
sbb
cmp
pop
inc
mov
jmp
repnz
fwait
xlat
push
cmpsl
clc
mov
lcall
mov
and
pop
push
jb
rcrb
shlb
sbb
divb
jecxz
xor
inc
addr16
mov
fwait
push
xor
cmp
nop
sarl
add
pusha
or
cmc
xchg
inc
enter
cmp
sbb
in
push
push
push
jnp
inc
cmpsl
jbe
mov
roll
lea
aaa
test
mov
xchg
loopne
cmp
bswap
in
fwait
mov
test
repnz
orb
test
leave
mov
jns
sti
daa
cmpsb
mov
imul
mov
cmp
daa
in
repz
xchg
jp
ret
int3
push
mov
and
jae
and
lock
sbb
xchg
xor
pop
cmpl
cwtl
les
pop
dec
pop
jl
incl
sbb
jmp
ss
or
dec
daa
out
mov
add
xor
je
jmp
and
movzwl
imul
xor
xchg
insb
icebp
cmp
sahf
mov
dec
mov
jae
mov
jo
jb
mov
jle
out
mov
cwtl
adc
repnz
in
jecxz
imul
scas
pusha
int
into
push
jns
sub
rcrl
out
js
jae
push
cmpsl
inc
pushf
or
xchg
repnz
repz
mov
dec
jno
mov
xchg
add
jmp
popa
in
sbb
jno
out
and
pushf
imul
sbb
mov
stos
mov
dec
dec
or
sub
jge
ret
scas
sti
and
cwtl
fdivp
imulb
jge
aas
xchg
add
push
add
shll
shll
and
fs
les
ret
imul
dec
add
mov
jp
pushf
mov
insl
pop
mov
and
ljmp
enter
daa
hlt
pop
xlat
xor
and
adc
pop
shlb
in
jge
shl
out
inc
add
dec
xchg
and
xor
cmc
pop
or
sahf
loopne
inc
cli
and
xlat
pop
cmpsl
cmpl
leave
js
sbb
je
scas
adc
push
nop
xchg
fwait
dec
mov
jb
and
jmp
test
cs
jmp
neg
xor
dec
inc
or
adc
or
idivb
jno
jge
and
xor
cmpsb
dec
gs
adc
and
inc
rolb
push
fildll
jl
or
mov
sub
jle
test
mov
lock
xchg
mulb
xchg
jne
ja
lds
and
pushf
or
fwait
mov
dec
push
fsubs
sahf
sub
inc
jns
hlt
std
pusha
fidivrs
push
push
scas
lret
jo
pop
fcomps
sub
adc
hlt
or
adc
add
sub
adc
or
inc
rcrb
hlt
or
scas
pushf
lds
dec
ja
xchg
jo
add
add
cmpsb
dec
mov
jae
iret
mov
notb
pop
aam
sbb
mov
xchg
jg
jne
je
lret
jbe
dec
xlat
test
inc
sub
push
repnz
xchg
ljmp
fidivrl
xchg
aaa
pop
add
mov
pop
cmc
jg
jns
mov
cmpsb
dec
rclb
repnz
insb
cs
imul
scas
mov
sub
imul
cmp
ret
pop
sbb
loop
mov
test
mov
xchg
shlb
loope
jo
xchg
shll
sbb
dec
push
bswap
icebp
idivl
out
mov
aaa
test
sahf
sbb
sub
mov
cmp
pop
cmp
ss
add
inc
arpl
push
xchg
push
out
mov
sub
ret
jbe
aam
and
pop
push
or
ljmp
or
ss
add
mov
out
pop
push
lds
jecxz
adc
inc
in
pop
xchg
dec
sbb
mov
clc
das
fincstp
daa
lcall
shr
ljmpw
cltd
insb
leave
sbb
dec
lahf
add
mov
cmpsl
shlb
into
in
mov
dec
cld
je
shrd
push
es
push
ret
jo
lret
jp
int
inc
lahf
fbld
push
cmp
insb
scas
jo
pop
mov
inc
mov
pop
mov
mov
mov
xor
scas
call
imul
aam
test
aad
pusha
sarb
loopne
push
mov
sarb
inc
es
mov
add
xor
adc
test
dec
push
rclb
mov
test
or
cld
jb
and
adc
in
xchg
push
sbb
not
insb
and
clc
rcl
pop
cmpsb
insb
aaa
lods
jecxz
out
pop
lret
and
pop
mov
fwait
pop
and
xchg
arpl
push
inc
aam
push
dec
pop
adc
lcall
dec
xchg
xchg
daa
into
lods
mov
stos
fimull
lock
pushl
inc
add
mov
cmpsb
aas
stc
inc
out
dec
push
sub
fcmovb
add
mov
movb
imul
popa
in
mov
push
xor
jnp
iret
dec
ljmp
out
cld
in
jo
dec
es
mov
sbb
cmp
sbb
orb
inc
popf
inc
adc
fnsave
das
lods
push
sbb
lret
loope
es
jo
pop
hlt
push
or
les
aam
ljmp
or
movsb
into
aaa
leave
pushf
test
adcb
std
aad
cld
loop
xor
adc
aas
iret
lea
rcl
xor
shrb
add
and
dec
rorl
xchg
sbb
test
push
cmpsb
into
fmull
mov
mov
std
cmpsb
int
push
cmp
mov
into
mov
pop
push
aaa
test
add
sub
sbb
lock
into
pushf
mov
sbb
push
jge
push
out
mov
jg
addr16
push
test
incl
testb
sbb
je
jae
dec
dec
out
jp
mov
divl
lahf
sub
aaa
fdiv
pop
pop
repz
gs
negb
cmp
loopne
push
lods
dec
repnz
rorl
push
arpl
xor
jge
or
and
dec
into
shlb
add
xchg
mov
jbe
dec
rcll
shlb
mov
shll
push
or
daa
jmp
incb
pop
insl
mov
xchg
mov
idivb
jbe
popf
sub
sar
popa
repz
shll
mov
pop
sbb
dec
sub
rorl
fnsave
add
ret
cmp
pop
test
dec
mov
mov
or
xor
cli
jl
add
outsl
aad
xchg
mov
lret
pop
jnp
lret
mov
pop
or
lcall
add
pop
pop
xor
push
xchg
sub
and
ja
lret
out
adc
add
rcl
xor
inc
add
insb
lea
jmp
mulb
sahf
inc
loop
je
push
scas
cmc
out
or
call
mov
rcrb
or
dec
movb
pop
pusha
ljmp
mov
cli
push
or
adc
insl
adc
cmpsb
xchg
ficoml
pop
adc
cmpsb
daa
pushf
ds
popl
xor
stos
adc
mov
or
cmp
scas
rcr
addr16
dec
mov
gs
dec
gs
adc
jecxz
pushf
mov
mov
jno
add
sbb
popf
xchg
outsl
lret
lcall
sub
cli
fdivs
mov
stos
cmp
cmp
dec
adc
xchg
xlat
les
inc
insl
jb
push
dec
fnstsw
xor
push
push
sarb
xlat
pop
cmp
in
sub
or
les
sbb
cli
fnstcw
rolb
jp
ds
dec
mov
iret
xchg
mov
inc
xchg
in
inc
jbe
js
nop
mov
cld
movsl
mov
cltd
mov
popl
aas
lret
pop
lods
xchg
cmp
or
shrl
sub
roll
out
jle
jp
pushl
nop
dec
mov
out
stc
lahf
mov
flds
push
jo
test
insb
mov
stc
dec
and
inc
jecxz
cmpsl
scas
ljmp
adc
enter
bswap
xchg
outsl
jle
neg
lock
jns
dec
dec
nop
add
sarl
sub
loope
in
das
mov
hlt
ret
test
sub
lea
stos
rorl
push
inc
aad
mov
inc
lcall
cmp
mov
daa
mov
mov
mov
outsb
dec
pop
movsb
sub
sbb
mov
in
sub
jne
bound
dec
icebp
inc
push
sub
or
push
rcrl
inc
adc
add
iret
cmp
inc
in
xor
aam
jnp
test
in
jne
cmp
pop
shll
out
jmp
lcall
add
out
mov
inc
push
imul
jle
dec
push
mov
adc
int
mull
int3
popf
xchg
xchg
dec
ljmp
fnsave
sbb
or
clc
jae
sub
shll
xor
xchg
sub
sbb
leave
adc
push
jmp
xlat
sbb
out
push
inc
sub
jno
loope
xor
repnz
add
pop
sub
repnz
mov
mov
jge
xor
loop
pop
fcoml
cmc
adc
xor
cwtl
mov
rcrl
pop
xchg
jg
add
shll
push
lds
je
sub
aas
in
jge
xor
cmp
push
fs
jnp
mov
jnp
ljmp
sti
xlat
push
xorl
stc
sbb
push
mov
dec
loope
dec
call
jo
xchg
sub
aas
insl
shll
sub
and
lret
push
push
and
jae
movsb
je
movsl
mov
mov
jne
icebp
out
dec
ficoml
and
lret
xchg
push
jno
push
cmp
icebp
pop
out
pop
cwtl
sbb
mov
add
adc
xchg
std
adc
bound
add
aam
inc
scas
iret
or
jecxz
cmp
das
sub
inc
in
mov
cmc
icebp
cmp
ret
stc
dec
jle
pushf
adc
jns
inc
add
in
rcll
in
mov
sbb
mov
enter
lret
jae
mov
fst
and
push
mov
mov
sub
mov
adcb
sarl
in
cli
xchg
in
sub
sahf
mov
dec
lea
addr16
sahf
pusha
mov
nop
into
jle
stos
pop
mov
cmp
cltd
dec
mov
andb
sub
or
lods
popa
dec
cmpsb
jg
xlat
int3
push
dec
insb
xchg
stos
mov
scas
mov
hlt
add
inc
cli
mov
leave
push
push
lahf
jmp
cli
std
jae
cmpsl
or
add
leave
mov
sub
cli
pop
push
dec
adc
rcll
insb
mov
ljmp
gs
movsl
int3
pushf
fsubr
insb
shrl
push
les
add
pop
lcall
add
sub
and
call
xchg
and
insb
in
cmp
mov
jl
es
movsl
push
sbb
dec
mov
inc
cltd
test
ror
inc
ret
hlt
popa
pop
arpl
in
iret
push
bnd
xlat
cmc
int
popa
inc
gs
inc
add
les
sbb
mov
stos
test
or
movl
pop
xor
pushl
js
xchg
out
std
lds
lahf
repnz
sbb
clc
hlt
sbb
cvtps2pi
es
in
xchg
fsubrl
jae
adc
cmp
xchg
fistpl
fcoms
ret
fs
mov
repnz
out
mov
push
xchg
pop
stos
pop
mov
ret
rcrb
or
fisubl
pop
test
rcrl
and
cmp
adc
add
repnz
cmpsl
or
inc
xor
stc
push
gs
fnsave
pop
pushf
mov
jno
jle
adc
mov
daa
mov
lret
xchg
and
ja
lock
das
xor
adc
lahf
mov
mov
pop
insb
popa
jnp
lock
out
test
mov
aam
sbb
cmp
push
dec
fwait
shr
jbe
push
cmpsb
jb
pop
call
push
pop
es
cmp
add
mov
mov
add
xor
stos
ds
push
mov
fidivs
mov
xchg
sub
out
mov
stc
dec
daa
adc
jp
add
sbb
pop
jnp
add
data16
or
scas
dec
adc
push
push
inc
shl
sub
mov
mov
push
iret
mov
adc
xor
fcomip
dec
sti
lods
cmp
jg
jo
cltd
hlt
stos
outsb
lods
pop
inc
mov
test
inc
xchg
xchg
aaa
jmp
repz
enter
cmpsl
add
pop
adc
in
xchg
add
idiv
pop
out
add
dec
xor
enter
mov
sbb
fldl
xchg
and
mov
lret
fistpl
and
pusha
enter
popf
add
cs
mov
pop
inc
add
dec
mov
push
scas
jns
jp
cmp
push
jb
fwait
xor
mov
xchg
hlt
inc
shrb
cmp
mov
leave
sub
xchg
imul
jle
les
mov
mov
mov
mov
jne
pusha
test
jnp
dec
loop
dec
inc
jno
mov
das
pusha
cmpsl
add
adc
xor
and
mov
push
stos
adc
sub
sahf
pop
cmp
pushf
xor
and
mov
ret
idivb
inc
add
lret
lret
pop
push
mov
mov
pop
iret
inc
push
in
lahf
aad
pop
add
jle
ljmp
aas
mov
push
mov
push
lcall
imul
pop
xchg
mov
adc
sbb
insl
sahf
dec
push
std
adc
adc
sub
add
mov
cmp
fisttpll
fstpt
jo
fcom
test
sub
jbe
mov
add
and
bound
add
fwait
add
jnp
mov
xor
cmp
and
and
pop
jns
idivb
xchg
mov
in
ljmp
adc
repz
push
clc
or
loop
xlat
mov
dec
mov
setno
lahf
pop
dec
ficoms
pop
xchg
inc
pushf
push
negl
subb
mov
cmpsl
in
mov
mov
add
inc
shl
mov
lahf
sbb
xlat
shl
fcoml
pop
ds
fnsave
cwtl
mov
js
ss
and
mov
lods
in
dec
rolb
xchg
add
sarl
or
inc
jl
movsb
cmp
mov
mov
fs
sbb
inc
xchg
cli
inc
repnz
mov
adc
cltd
popf
or
stc
gs
adc
sbb
arpl
test
sub
or
push
pop
push
pop
jns
shr
in
fadds
inc
add
into
out
jmp
mov
inc
cmp
stos
xchg
in
or
or
icebp
and
in
cmp
movsb
test
adc
jb
in
dec
test
js
sub
ficoms
iret
movsl
lcall
rol
sbb
mov
loop
mov
incl
lock
add
xor
inc
adc
dec
mov
mov
lods
je
mov
insb
ret
mov
jbe
repnz
inc
mov
adc
adc
add
loope
mov
push
mov
push
push
icebp
mov
dec
cmp
outsl
loope
xchg
repnz
push
repnz
lock
ret
gs
adc
and
pop
addr16
lret
push
loope
daa
sarl
push
das
lret
dec
and
into
ss
xchg
inc
jmp
sbb
ret
inc
xor
mov
adc
mov
push
das
jno
roll
cwtl
xor
xor
pop
lods
pop
roll
lret
movsb
adc
mov
nop
dec
dec
jecxz
push
aad
cmpsl
int3
sti
negb
inc
enter
shrl
or
les
arpl
sub
cmp
cld
push
add
arpl
push
enter
mov
adc
enter
cwtl
loop
adc
out
adc
or
stos
jl
dec
cmpsb
arpl
int
loope
rclb
jbe
cmp
repz
cmp
js
sub
hlt
dec
inc
jne
inc
lcall
std
push
xchg
or
aam
repz
les
inc
icebp
pop
pusha
mov
in
lea
test
and
adc
sbb
loop
mov
jl
sahf
inc
cmp
sbb
push
jae
cmp
jae
sbb
lcall
pop
iret
and
popa
inc
jl
das
sbbl
push
sub
pop
cwtl
loopne
push
add
ds
mov
fidivrl
inc
sub
stos
mov
cmp
push
jbe
and
rolb
xor
mov
cmc
cs
imul
xchg
push
subl
xor
lret
inc
test
xchg
adcb
es
jb
sub
push
lcall
in
ljmp
cmpsb
adc
cmp
xor
push
jecxz
dec
mov
lcall
mov
sahf
and
push
mov
pop
inc
xor
leave
add
imul
test
and
mov
dec
pop
mov
xor
inc
xchg
xlat
scas
shlb
notb
ljmp
mov
mov
rclb
jg
shll
sbb
shrb
std
sub
pop
sub
xchg
fsubr
sub
or
repnz
loopne
inc
out
push
or
testb
jno
pushl
test
rcr
mov
sbb
inc
popa
and
int3
xor
or
push
mov
xacquire
xor
or
scas
push
popa
cmp
out
push
mov
sti
mov
rcrl
sub
mov
fsts
inc
cmp
cmc
jge
mov
aas
inc
add
rolb
out
jecxz
out
add
out
xor
dec
in
add
cmp
push
popf
push
outsb
cmp
pop
pusha
lcall
sbb
movb
sbb
dec
dec
xchg
push
jbe
mov
sti
nop
xchg
cli
enter
jp
popf
jno
aaa
add
lds
iret
les
es
inc
sbb
mov
adcl
jp
les
scas
fsub
in
out
pushf
mov
mov
or
mov
dec
and
mov
ret
mov
push
inc
loopne
mov
dec
mov
cmp
mov
movsl
lea
adc
test
push
pop
xor
jns
popa
mov
and
nop
test
sbb
psrlq
sub
stos
mov
sbb
mov
rcr
test
adc
jecxz
adc
cmp
inc
pop
sbb
adc
cli
cmp
scas
aad
test
pop
xchg
int3
xchg
cmp
scas
lds
cmc
sub
pop
std
pop
dec
sub
loop
inc
mov
repnz
insb
scas
jo
inc
pop
push
stos
daa
pusha
pushf
sub
addr16
xchg
dec
aad
outsb
sbb
mov
mov
dec
out
xor
ds
inc
mov
fisubl
push
js
and
icebp
rcl
sub
in
ljmp
repz
insl
popf
iret
push
aas
add
cmp
rclb
lea
push
mov
lcall
test
pop
xchg
int3
fistl
rcl
imul
out
xor
repnz
icebp
cltd
insl
test
jae
leave
xchg
and
sub
cmpsl
mov
pop
adc
and
xchg
xor
adc
fs
push
sbbb
lea
ss
mov
and
inc
es
mov
icebp
xchg
add
jne
jge
jge
sub
ret
push
inc
in
dec
in
mov
jge
sbb
mov
mov
pop
test
testb
pop
pop
enter
pop
cmp
jb
ds
push
out
js
inc
cmp
mov
mov
add
dec
jb
fstl
inc
nop
fstp
push
mov
jge
ret
arpl
push
dec
pop
push
ret
es
and
lahf
fcmovne
sbb
mov
jnp
dec
inc
cs
mov
mov
jp
cmp
pop
js
xchg
xchg
into
cli
xchg
sbb
adc
adcb
sbb
jbe
add
mov
dec
jecxz
lret
popa
dec
cmp
push
adc
xchg
stc
cmp
ljmp
ljmp
push
pop
lods
mov
hlt
push
inc
outsb
pop
push
filds
sbb
rcl
jnp
fnstenv
test
cmpsl
int
mov
fcoms
addl
adc
push
enter
dec
dec
psrld
imul
inc
fistpll
xor
push
jns
dec
cmp
cmp
mov
daa
fildl
push
and
bound
cmp
push
fistpl
jmp
in
xchg
mov
movsl
lret
pop
cltd
dec
cmp
push
lret
sub
ret
lret
mov
ret
and
pop
lahf
jbe
push
fdivp
jecxz
inc
pop
test
jns
adc
loope
outsl
inc
mov
xchg
gs
jg
cmp
cltd
pop
xchg
in
int3
movsb
mov
aam
cs
jns
push
movsl
xor
dec
scas
js
mov
cmp
in
data16
jae
mov
test
enter
push
fcompl
insb
mov
push
mulb
mov
push
and
scas
daa
lcall
mov
mov
ret
or
scas
out
sbb
lock
cli
mov
xor
add
mov
sbb
in
pop
mov
pop
inc
jmp
ja
lcall
fwait
mov
imul
imul
inc
cmpsl
je
mov
mov
cmpsl
pop
in
hlt
adc
arpl
mov
jge
jg
jns
inc
xchg
cli
loope
dec
sti
popf
sub
pusha
mov
xchg
push
sahf
jnp
fcoms
fisubl
pop
pop
mov
jmp
cs
inc
orl
xlat
xor
inc
or
cwtl
call
clc
cmp
ret
mov
fiadds
pop
addb
mov
xlat
push
sbb
pop
and
mov
or
add
jecxz
cmp
divl
jp
ja
sbb
shll
ja
xchg
adcb
or
jnp
jb
jle
rol
outsb
sbb
cmp
mov
cmp
insb
jno
mov
out
popa
imul
out
ja
xchg
rclb
into
mov
test
les
mov
add
ja
dec
and
add
scas
data16
cmp
or
xor
mov
repnz
jnp
pusha
inc
pop
out
cmp
add
fwait
mov
fcomps
push
cld
mov
jo
pop
in
iret
cmc
mov
jl
hlt
and
adc
jne
lahf
and
push
inc
lock
pop
push
cmp
and
xchg
mov
lret
outsb
xor
leave
xchg
push
iret
pop
aam
mov
je
sbb
lock
sub
adc
push
sub
pop
push
mov
mov
jmp
sbb
push
push
out
or
rorb
cmp
testb
fildl
sahf
cmp
cli
jbe
mov
mov
push
mov
mov
adc
cmpsl
mov
xchg
pusha
jae
repz
push
sbb
aad
cli
mov
stc
or
pop
imulb
xor
jp
ret
add
jle
shl
cmp
and
xchg
mov
fbstp
clc
clc
mov
inc
mov
xlat
stos
mov
adc
das
mov
dec
xchg
xor
dec
aam
and
incl
sub
mov
fincstp
outsl
ret
ss
in
and
shll
xorl
iret
sub
popa
mov
addb
xlat
arpl
xor
stos
rorb
roll
roll
pop
icebp
mov
pop
push
daa
fwait
cmp
adc
rolb
xchg
insb
lahf
jecxz
jg
dec
pop
sub
iret
jns
pop
push
mov
pop
add
sbb
sub
push
out
and
fcompl
aad
sub
ljmp
fldenv
insb
mov
imul
jmp
sub
out
jg
lret
and
xchg
div
inc
and
inc
jl
pop
mov
xchg
repnz
xor
stos
or
dec
outsb
popf
bound
cmp
or
sub
mov
add
cmpsl
mov
bound
pop
adc
cmp
clc
pop
and
stos
test
loope
pop
lods
icebp
mov
inc
fs
pop
std
jge
dec
punpckldq
int3
cs
jmp
lods
cmp
call
sbb
mov
imul
adc
mov
jp
sub
xchg
sbb
xor
addl
int3
or
pop
sbb
mov
cmp
dec
pop
outsb
clc
sub
mov
adc
xchg
insb
enter
ja
mov
insl
jne
in
bound
int
mov
pop
cs
mov
out
mov
adc
in
cli
jp
out
sbb
xchg
jno
rolb
fildll
icebp
or
jl
cmpl
push
shrl
lds
popf
icebp
ds
adc
mov
lahf
gs
idivl
clc
cmpsl
lahf
mov
inc
leave
xchg
in
dec
pop
sub
add
inc
mov
lahf
jmp
mov
fadds
pushf
rol
das
mov
jnp
test
bound
pop
std
push
mov
xchg
clc
xchg
je
add
pop
int3
outsb
jnp
mov
inc
xchg
jnp
push
add
lods
mov
fwait
sbb
enter
pop
cli
xor
or
out
adc
push
inc
test
push
dec
adc
sub
test
xor
shrb
jno
pop
pushf
aaa
outsl
dec
mov
mov
outsb
adc
ficompl
and
adc
xchg
dec
idivb
xchg
fmul
and
inc
jnp
adc
sbb
dec
mov
emms
test
fidivs
or
mov
cmpl
shll
and
cmpsb
fidivl
inc
pop
xchg
cmpsl
fadds
jno
mov
shl
push
outsl
out
call
decb
dec
fidivl
mov
lret
mov
pop
jnp
cmp
jp
fsubr
scas
ljmp
fldcw
adc
push
pop
ja
ljmp
cli
sub
incl
fisubs
xchg
jecxz
mov
mov
sahf
imul
pmaxub
ljmp
xor
in
jp
outsb
loop
xchg
mov
jns
aam
push
inc
scas
shll
in
out
movsl
inc
incl
jae
pop
call
mov
out
mov
mov
cmp
add
adc
jle
jg
push
cli
ljmp
repnz
lock
rcll
inc
fiadds
adc
movsl
lcall
mov
ds
or
sbb
jmp
lret
dec
testb
xor
xchg
out
jg
sbb
and
xlat
dec
outsb
add
jno
mov
or
dec
add
xchg
jb
dec
push
movsb
inc
mov
or
subl
xchg
jne
sub
js
daa
xorl
test
sub
push
lods
mulb
inc
pop
into
xor
cmp
adc
int3
stos
pop
or
jecxz
pusha
jmp
cmp
jmp
mov
mov
pop
loop
xor
sbb
mov
or
add
xor
lds
imul
iret
dec
cmp
dec
mov
cmc
push
rol
sarb
pop
inc
andb
scas
push
mov
xchg
fdivrs
divl
in
fisttpll
mov
jo
jmp
shl
ficoms
aas
adc
pushf
cmc
in
xor
jp
mov
and
and
cltd
sbb
andl
out
inc
adc
gs
mov
lock
cwtl
scas
xor
dec
cmp
sbb
int
stos
sub
sub
mov
pop
add
mov
push
mov
gs
shll
cmpl
lret
addr16
ret
lret
sbb
pop
jg
xchg
cwtl
mov
sbb
mov
stos
in
jno
mov
cli
and
inc
xchg
lcall
xchg
and
shlb
and
and
xor
push
les
xlat
xchg
dec
xor
dec
sbb
shr
inc
je
inc
cld
mov
lods
cltd
mov
sbb
cld
mov
in
mov
lret
xor
mov
in
orl
outsb
jle
fisubs
sub
xchg
call
loope
sbb
in
xchg
cli
add
je
cmp
and
mov
aas
inc
mov
ja
sub
and
incl
dec
fstpl
adc
ja
sub
mov
mov
xchg
leave
mov
jb
aaa
movsl
fcomip
fwait
dec
sbb
daa
gs
negb
pop
and
lock
pop
lock
fwait
lock
and
push
mov
mov
lods
inc
push
lahf
adc
std
pop
xchg
pop
jb
icebp
lods
ss
xchg
pop
imul
aad
mov
mov
inc
imul
test
lods
lods
inc
daa
test
or
jbe
cltd
lods
sub
adc
cmp
cmp
and
push
and
dec
push
outsl
lret
fwait
mov
pop
sbb
mov
push
imul
pushf
and
pop
or
cmp
or
mov
or
jno
inc
clc
mov
test
adc
ds
andl
test
push
xchg
adc
stos
cwtl
xlat
jmp
mov
push
sub
addr16
outsl
pop
jecxz
push
sbb
dec
cwtl
leave
cmpsl
lahf
pushf
inc
push
rcrb
fdivs
mov
push
push
sbb
cmc
repz
fwait
xor
inc
cmc
pop
dec
and
mov
test
andl
add
sbb
movsb
aad
movsb
out
icebp
mov
and
xchg
loopne
ljmp
inc
fistps
subl
out
or
push
scas
pop
sahf
mov
test
xchg
sbb
pop
sub
sbb
jo
adc
mov
ret
or
xchg
mov
jns
push
stos
movsl
cmc
pop
rcr
or
push
fucomip
add
lret
iret
mov
cmp
push
sub
push
loop,pn
iret
std
pop
add
push
stc
push
ffree
sbb
sbbb
fisttpll
cltd
sub
xchg
cmp
lods
xchg
mov
push
das
pop
sbb
scas
dec
and
ds
add
scas
out
stos
sbb
xor
jo
cmp
pop
mov
cmp
push
dec
stc
mov
sbb
rcr
mov
pop
nop
sarl
rclb
dec
outsb
sbb
push
sbb
xorb
iret
inc
sub
xchg
push
pop
scas
stos
aaa
adcl
out
fwait
jge
shlb
lcall
jle
pop
mov
mov
loope
sub
push
fcomps
jno
xchg
daa
shll
int3
mov
fs
push
rcrl
push
xchg
jb
in
push
lret
incb
pop
cmp
cmp
cwtl
lcall
in
in
xor
sbb
xor
or
push
xorl
push
and
and
int
inc
xchg
push
mov
pushf
jecxz
negl
cmc
outsb
sbb
push
lahf
cltd
fisttps
test
std
rcll
dec
les
rorl
jae
push
fwait
jle
xchg
imul
fistps
insl
mov
mov
and
stc
dec
daa
push
mov
or
inc
imul
fdivl
outsl
faddl
in
fcmovbe
ja
push
lods
scas
data16
inc
shll
cmp
xor
mov
mov
mov
mov
das
and
mov
xchg
dec
inc
int3
scas
out
fldt
and
arpl
cli
leave
jno
jo
pop
arpl
iret
les
jno
xchg
insb
mov
sbb
cmp
out
les
fs
jl
sub
add
subb
ret
test
push
dec
data16
cwtl
xor
push
pop
adc
push
les
movsl
inc
es
mov
jbe
fcmovu
xchg
mov
aad
mov
lods
xlat
fld
call
movsb
les
push
data16
andl
mov
daa
jno
adc
pop
enter
pop
and
jg
add
sbb
pop
inc
push
cs
test
or
pop
mov
push
or
xor
lcall
inc
data16
jmp
push
ret
mov
xchg
add
imul
sub
bound
cmc
je
mov
pop
sahf
mov
jbe
inc
ljmp
xor
sarl
cmp
dec
leave
xor
mov
inc
aaa
mov
cltd
mov
mov
lods
mov
je
aas
cs
les
mov
cli
xchg
outsb
fwait
inc
and
aad
and
and
jl
aas
push
mov
lods
jg
cmpsl
push
jle
pop
mov
mov
aad
mov
imul
cmp
pop
mov
loope
sbb
repz
or
jecxz
enter
es
stc
pop
xlat
mov
lret
push
cmp
lret
cmpsl
and
dec
jecxz
lahf
leave
outsb
mov
xor
cmp
ljmp
jecxz
in
lds
or
ljmp
xor
mov
sub
mov
fwait
mov
in
add
test
push
fcmovb
cmpsb
in
or
cltd
or
data16
adc
pop
inc
std
mov
sub
inc
enter
lcall
sahf
inc
push
dec
ja
pop
fnstenv
push
sbb
in
sbb
arpl
ret
add
and
push
xorl
lods
cmpsl
cmp
mov
hlt
sub
and
incb
aaa
sub
js
dec
or
sub
mov
shrb
mov
aaa
das
test
push
lods
dec
loop
inc
test
insl
dec
mov
mov
add
inc
mov
lock
scas
iret
sahf
mov
or
ret
sarb
popa
iret
enterw
sahf
rcll
stc
xchg
test
sbb
or
popf
out
cmp
xlat
ret
into
adc
out
xchg
in
lret
jecxz
cmpsb
fimuls
out
push
add
fdiv
cmp
dec
mov
push
cltd
in
mov
repnz
mov
sub
cmp
or
dec
ljmp
lret
pop
xchg
mov
mov
mov
sbbb
inc
rcrb
outsb
shl
or
add
sbb
hlt
pop
dec
adc
jns
ja
fmull
popf
dec
xchg
adc
or
popf
dec
and
xchg
dec
xchg
cmp
jmp
xor
cli
aam
mov
jns
pop
push
push
jmp
mov
cltd
mov
aas
insl
mov
and
sub
test
ret
adc
les
pop
inc
andb
mov
pop
dec
inc
imul
sub
xchg
jge
pop
in
loope
repz
int3
mov
or
hlt
insb
test
add
imull
mov
sarb
cs
lcall
enter
pop
cmp
mov
call
mov
clc
mov
push
xlat
or
push
mov
mov
test
outsl
out
nop
mov
mov
repz
jns
pop
pop
pop
daa
mov
fistpll
mov
sub
mov
add
jns
add
std
sub
stc
mov
lret
ss
mov
jmp
inc
stos
popf
fadd
xor
or
pop
jae
jg
out
ds
inc
int3
test
outsb
scas
testb
dec
movsl
js
insb
add
call
inc
ss
mov
and
test
inc
pop
add
or
int
shlb
out
inc
sarb
imul
push
outsl
adc
loopne
xor
or
scas
xor
cld
xchg
aad
sub
xchg
imul
pop
push
in
jp
aaa
xor
xchg
or
dec
mov
dec
loopne
inc
addb
add
mov
push
mov
mov
lahf
in
imul
cld
mov
sub
mov
es
jg
inc
fwait
popa
mov
add
mov
inc
insl
fs
pushf
sbb
nop
rorb
jmp
push
or
xchg
test
leave
jo
jae
into
lret
add
jnp
xchg
out
and
jne
clc
pop
pusha
test
or
arpl
push
idivl
pop
mov
cltd
sbb
mov
xor
addb
into
lcall
pop
xchg
xchg
je
sbb
sbb
jecxz
jge
icebp
xor
push
addr16
rcrl
nop
shr
cmc
mov
mov
mov
xchg
imul
test
pop
lea
jmp
jp
mov
out
and
flds
mov
popf
lahf
adc
leave
cmc
in
adc
mov
es
subw
mov
ja
in
jae
inc
sub
mov
pop
pop
jb
pop
jne
das
loopne
movsb
js
pop
out
mov
xchg
xchg
test
bound
sub
adc
lods
xor
das
sbb
inc
scas
out
or
xchg
ja
lods
mov
rcll
and
lea
dec
mov
shrb
jp
add
setle
in
popf
cmp
add
jb
mov
and
lcall
push
fwait
dec
in
les
or
fsubrl
aas
negb
add
pushw
push
xor
sub
sbb
push
jo
aas
xchg
push
mov
dec
ret
nop
jle
push
fsubr
test
adc
pop
xor
jg
leave
push
enter
iret
or
inc
sub
out
in
push
lcall
dec
gs
addr16
sub
icebp
shll
insl
ret
and
push
mov
xor
adc
cmp
sub
xchg
int3
jae
jb
mov
dec
iret
xor
stos
add
leave
ret
add
xor
and
dec
mov
sub
in
xchg
inc
popf
stos
imul
sahf
lahf
adc
add
inc
fadds
ret
push
js
dec
or
je
decl
test
rcll
adc
jp
repz
mov
fwait
or
sub
cs
test
mov
fsubrl
ja
cmp
rorl
cmp
jle
lods
aam
or
test
lcall
jecxz
mov
das
pusha
dec
xor
mov
jg
loope
sub
ss
rcl
mov
dec
xor
or
aad
daa
and
insl
mov
sbb
dec
je
push
sahf
ss
push
lods
jmp
lods
popa
scas
lods
lods
pop
add
into
das
lret
xor
jle
xor
idiv
add
cmp
jno
add
and
cmc
jl
xor
pop
inc
pop
jecxz
scas
call
cli
in
pop
sub
pop
jmp
dec
arpl
movsb
pop
fsts
in
popa
pop
mov
ret
or
das
jno
fmull
mov
stos
movsb
mov
int3
insl
push
add
add
mov
jns
pop
jmp
adc
nop
cmc
mulb
jge
test
mov
mov
lret
movsb
jb
mov
dec
stos
mov
sbb
mov
sahf
sbb
push
sub
mov
xchg
xchg
out
mov
mov
loope
arpl
sbb
lds
mov
loopne
stc
sub
test
dec
and
jae
leave
insb
pop
fnstsw
sahf
push
pop
dec
xchg
sbb
sub
divb
fistl
jnp
loope
leave
cltd
cmpsb
sbb
xor
idivb
push
cltd
jle
aad
dec
ja
pop
add
adc
dec
xor
pop
jp
mov
lock
test
sub
sub
jb
adc
add
out
lods
add
sbb
mov
shr
adc
xor
out
pop
pop
mov
test
adc
aaa
cmp
hlt
test
lods
sbb
shlb
push
call
and
cmp
orb
out
and
xor
sub
aad
cmp
sub
fnstenv
pop
icebp
fucom
popf
jle
icebp
pop
sub
xchg
lea
sti
inc
xor
out
and
scas
bound
js
cmp
dec
cmp
lret
mov
shll
mov
cltd
insl
ja
adc
mov
jmp
mov
push
dec
arpl
lret
lds
pop
and
inc
push
pop
push
mov
adcl
test
xchg
iret
mov
popa
mov
cs
pop
int3
dec
and
jg
test
adc
jl
into
ficompl
inc
sub
xchg
xor
adc
aaa
xchg
adc
jp
cwtl
stos
adc
push
outsl
push
lret
jb
adc
mov
aaa
iret
or
xchg
fwait
sub
cmp
aas
icebp
sbb
inc
fsubrs
test
push
mov
jae
lods
mov
xchg
inc
in
mov
pop
mov
ficoml
movsb
shlb
ret
pop
outsl
xchg
inc
aad
push
push
xchg
xchg
iret
in
inc
jns
or
cmpsl
loopne
scas
dec
dec
mov
sub
mov
xchg
dec
ds
insb
pop
leave
sbb
cmp
add
push
or
mov
dec
dec
pop
aas
test
sbb
inc
daa
adc
ret
xor
out
ficoms
mov
dec
pop
adc
inc
faddl
jo
pop
rolb
cmc
add
in
imul
nop
cmp
adc
outsl
fwait
cmp
and
and
int
xchg
and
cwtl
loope
mov
aaa
insl
sarl
xchg
sub
lods
dec
or
or
cmpsb
cli
pusha
or
imul
inc
sub
dec
cmp
jl
mov
xchg
pop
into
jno
sub
in
out
stos
sbb
addb
lods
in
insl
fmull
jecxz
shrb
push
cmc
ffreep
jg
loope
mov
dec
jae
stos
push
and
dec
dec
adc
std
test
faddp
lret
popf
les
rolb
mov
sbb
shrb
mov
dec
lret
lahf
mov
arpl
mov
xor
xchg
mov
aaa
cmp
shr
sbb
cld
fs
sbb
or
inc
lret
push
test
fiadds
and
add
xor
sub
push
clc
xchg
jo
loope
fwait
mov
hlt
rorl
add
dec
idivl
xchg
fs
in
cltd
pop
mov
push
sbb
fisttpl
lea
and
dec
xor
insb
in
cmp
fwait
ljmp
sbbb
sub
jne
mov
jle
mov
enter
in
addr16
and
mov
mov
xchg
fdecstp
into
pop
imul
in
adc
clc
les
ja
imul
icebp
movsl
mov
movsb
cmp
add
mov
out
push
or
hlt
push
test
sub
hlt
jmp
popa
push
mov
hlt
push
or
and
adc
jecxz
mov
imul
lds
leave
cmpsl
xlat
rcll
sub
jbe
sbb
fisttpll
and
test
mov
mov
loopne
jno
addr16
std
sbb
rolb
cld
inc
in
mov
pusha
dec
mov
sti
cmp
nop
xchg
adc
outsl
adc
add
fistpl
pop
push
je
push
int
jbe
test
jae
insl
int3
repnz
or
rcl
jecxz
cmpsb
sbb
inc
hlt
add
pusha
mov
xchg
push
lock
shrl
leave
into
jnp
mov
sahf
adc
sbbb
ja
pop
xor
mov
ss
and
ret
jle
in
hlt
cmp
fcmovu
xchg
in
mov
xchg
es
mov
clc
sbb
cwtl
add
inc
mov
in
mov
fs
loope
xchg
push
dec
fdivl
jns
scas
mov
cmpsb
adc
pop
mov
mov
mov
pop
cwtl
sub
imul
sub
xorl
jle
divl
jle,pn
sub
push
add
dec
mov
shl
mov
fsubr
dec
jge
fldcw
push
dec
and
out
mov
cltd
sub
xchg
dec
cmp
jl
pop
xchg
scas
int
adc
rorb
jg
lods
mov
and
outsb
push
adc
mov
xchg
adc
fisubs
add
push
pop
test
and
stos
inc
dec
mov
shr
push
insl
int3
out
mov
and
lock
add
jp
scas
in
fwait
jl
pop
pop
or
cwtl
outsl
push
inc
loope
push
popf
cwtl
int3
les
insb
int3
jecxz
push
lods
int3
xor
enter
sub
sub
adc
arpl
pop
rclb
lretw
shrl
xchg
je
dec
out
jae
dec
int3
stc
adc
inc
sub
ja
in
fcoms
cmpsb
bswap
add
xchg
push
aaa
mov
push
mov
cmp
jb
ja
mov
pop
push
dec
inc
aaa
in
sub
mov
inc
push
fisubrs
fisubs
and
sub
sahf
movsl
cli
pushf
jmp
scas
or
test
into
lods
mov
leave
cwtl
and
cmpsl
inc
in
xor
or
lret
mov
sbb
mov
jge
pop
jge
add
roll
stos
pushf
inc
push
cwtl
pop
ds
je
sbb
pop
lods
imul
into
nop
nop
xor
pusha
sbb
int
sbb
aam
xchg
and
repz
inc
sti
fsts
into
push
inc
xchg
add
xor
xor
sbb
mov
fisttps
orl
xchg
jmp
pop
mov
call
xchg
jbe
aas
push
push
rcll
test
push
rorl
lcall
mov
lahf
pop
xor
loop
aas
and
in
enter
bound
jbe
push
outsl
pop
inc
jge
or
sbb
mov
push
or
jno
sbb
sbb
sub
stos
pop
push
loope
sbb
pop
loope
in
and
lods
loope
xchg
mov
movsl
xor
sbb
inc
mov
jp
jecxz
lods
lcall
insl
loope
ja
cmp
shlb
jno
lret
lods
cli
addr16
push
fstpl
pop
push
mov
push
je
nop
scas
int3
inc
pop
repz
jecxz
jge
cld
push
xchg
dec
fnstsw
stos
rdmsr
hlt
test
rorb
and
and
aas
xchg
icebp
dec
stos
jge
movsb
dec
mov
roll
enter
ss
in
fstpt
enter
inc
out
ret
or
jg
dec
pop
icebp
rclb
mov
in
xchg
or
and
test
sub
or
fdivl
or
out
mov
enter
filds
sub
test
test
test
dec
mov
aaa
addl
xchg
mov
jns
shr
jp
fdivp
adc
dec
jb
push
outsl
stos
lret
es
sub
cmp
jge
pop
cwtl
xor
cmp
out
push
mov
sub
mov
popf
loop
xor
mov
imul
in
mov
shl
jb
inc
mov
xchg
mov
push
aam
test
push
mov
mov
movsb
xor
stos
add
mov
push
fsubp
repnz
mov
cmpb
rcrl
sarb
int
icebp
popf
mov
fsubp
push
outsb
shrl
pop
test
ret
push
adc
pop
mov
cmp
cmp
fimuls
stos
imul
xchg
jmp
cwtl
push
xchg
addr16
dec
push
bound
je
and
sarb
fcomps
push
jae
into
mov
sub
xchg
jne
dec
orb
jl
out
jge
dec
imul
sub
int
xchg
xchg
rorb
ficomps
sbb
jge
test
mov
mov
inc
mov
jnp
jmp
nop
mov
add
pop
mov
mov
in
stos
inc
cmc
vlddqu
sbbl
or
addl
mov
push
and
adc
mov
jbe
and
jno
jle
repz
in
loopne,pn
cmp
jo
repz
mov
repz
cmp
and
fwait
pop
and
mov
cwtl
or
sub
sbb
in
push
cmpsb
or
inc
mov
lods
mov
jb
lcall
pushf
int3
clc
mov
dec
fmuls
jle
in
add
or
mov
xchg
or
test
or
popf
idiv
pushf
sbb
mov
rorl
imul
mov
or
nop
int
pop
fimull
test
inc
and
imul
xor
fwait
leave
jg
scas
in
dec
and
mov
dec
sub
cmp
test
mov
leave
call
jae
shrb
in
cmp
cmp
ljmp
sub
jae
mov
repz
cmpsb
jno
and
lock
in
jno
jns
daa
jp
push
enter
or
jg
jne
cmp
xchg
movsl
push
xor
out
mov
xor
ljmp
and
into
push
inc
pop
jbe
and
dec
jne
rclb
test
es
jo
mov
mov
stos
loopne
dec
xchg
sbb
insl
aaa
je
stos
repz
inc
xchg
pop
movsb
aad
fstpt
test
adc
sbb
or
test
jmp
inc
cli
lcall
lods
ficompl
mov
lret
inc
jnp
insl
pop
sub
add
jecxz
lods
jp
add
or
inc
pop
xor
or
fsts
out
mov
and
movsl
and
pop
loopne
ja
sbb
ret
push
xchg
in
add
imull
fstl
out
pop
dec
cmp
aaa
outsl
or
nop
dec
andb
std
mov
fmull
insb
cmp
lret
pop
rorl
cs
push
call
mov
dec
into
adc
jl
ret
lahf
fnstcw
or
xor
scas
adc
aaa
xchg
jbe
pop
xchg
cmp
or
insb
movsb
pop
stos
cmpsb
pop
mov
es
enter
stos
pusha
ret
jno
popa
out
dec
jl
rorb
mov
out
pop
xchg
div
xor
mov
cmpsl
sbb
jecxz
inc
push
shlb
pop
shll
scas
mov
jb
test
addr16
jns
repnz
xchg
fs
sbb
scas
imul
std
clc
inc
pop
and
mov
jae
dec
adc
and
les
paddsw
jg
pop
pop
adc
idivb
fs
loope
in
add
sbbb
mov
xor
xrelease
xchg
mov
mov
xlat
xor
jle
popf
xlat
pop
adc
pop
inc
cmp
sbb
cmp
xor
aas
cmpsl
mov
dec
data16
xlat
sub
pop
mov
mov
pop
sub
lea
xchg
popa
in
mov
addl
mov
clc
cltd
lret
les
movsb
push
inc
testl
add
in
inc
mov
aad
mov
repnz
aas
sub
rcl
push
mov
push
add
inc
outsb
js
or
dec
loope
out
dec
in
sub
cli
lds
int3
mov
xlat
lcall
xchg
hlt
jae
data16
mov
push
loop
jmp
mov
xor
lods
mov
push
and
enter
mov
in
mov
nop
xchg
out
cmp
adcb
ds
xor
loopne
jnp
pop
shrb
icebp
test
add
outsb
push
out
int
loop
ss
cmp
stos
les
cli
icebp
sahf
ret
inc
pop
ret
push
pop
es
jbe
dec
outsl
mov
xchg
fdivs
shrl
add
jg
pop
and
lea
in
jge
inc
xchg
jo
outsl
ret
cmp
ret
and
xlat
fs
or
inc
shlb
mov
push
push
mov
into
or
cs
je
pop
pop
adc
lret
lret
add
lahf
dec
lods
mov
out
shl
and
lds
movsb
flds
dec
cmpsb
dec
xor
dec
ds
push
out
jecxz
imul
lcall
orl
adc
add
fs
push
pop
xchg
inc
jnp
adc
arpl
mov
cs
in
inc
fnstsw
jnp
mov
pusha
lds
movsl
mov
push
std
cmp
fs
fstpt
ss
std
pop
dec
arpl
dec
push
inc
mov
dec
popf
xor
jl
std
sbb
andl
xchg
adc
or
in
cmp
ds
mov
sbb
jae
scas
pushf
in
pop
or
jbe
rcl
insl
enter
scas
lret
push
les
lahf
mov
pop
repz
cs
xorl
sub
sub
test
and
fldz
out
dec
dec
mov
loop
sbb
or
inc
inc
push
inc
adc
jge
inc
call
scas
jb
adc
mov
xor
bound
test
ret
nop
int
push
push
xchg
popa
bound
xor
call
aaa
push
call
adc
pushf
push
mov
stos
sub
ja
and
mov
cmp
adc
sub
mov
movsl
mov
pop
inc
or
pop
repnz
scas
mov
cmp
outsb
or
dec
mov
pop
xchg
xor
adc
cmpsl
mul
mov
lret
adc
adc
out
cmp
outsl
iret
cltd
loopne
in
mov
cmp
hlt
sub
or
movsb
jbe
outsb
mov
ret
addl
lcall
int
loop
push
repnz
movsb
dec
rcrl
and
sbb
ss
mov
gs
sbb
xchg
jg
or
cs
mov
pop
fdivrs
jne
push
pop
mov
ds
xor
loop
mov
loopne
lcall
cmp
in
mov
orb
aas
bound
movsb
scas
sub
setae
loopne
cmp
pop
sahf
inc
add
dec
scas
test
int
in
push
jmp
sbb
sbb
push
push
repz
xlat
adc
jne
xor
xchg
outsb
leave
je
and
jle
mov
pop
mov
fs
jle
add
cmpsb
out
test
out
shll
hlt
cmc
dec
call
inc
out
popa
int3
mov
mov
pop
subb
xor
mov
push
jo
jp
pop
data16
scas
inc
mov
das
sbb
push
jle
rep
dec
adc
jbe,pn
rcr
cmp
push
pop
pushl
mul
sub
addr16
sbb
into
test
adc
insb
pop
or
ja
ret
repz
lcall
jecxz
inc
push
shrl
xchg
ds
cmp
iret
mov
mov
xorb
xchg
cmpsl
cmp
shl
dec
pop
sbb
js
or
push
aam
adcb
mov
loop
cmp
cmpsb
mov
xchg
mov
adc
rcrl
xchg
pop
cltd
dec
ret
aas
jbe
loopne
xor
inc
pushf
cmp
aad
jmp
je
sbb
mov
mov
insl
or
mov
clc
rcrb
das
int
mov
sbb
push
cmp
aad
or
jbe
and
mov
or
sar
nop
sbb
and
lret
xlat
pop
mov
cmp
jl
ljmp
pop
add
ret
mov
incb
adc
stos
enter
addr16
mov
and
xor
dec
push
setno
cmp
sub
jecxz
cmp
dec
fisubrl
cltd
or
pop
fwait
leave
jmp
jnp
outsb
fdiv
sub
pop
pusha
push
lahf
xchg
test
lahf
rcrl
cmp
stos
mov
xor
leave
adc
rcrb
lret
enter
test
add
xor
or
jo
test
pop
sub
cmp
fcomi
dec
add
stos
lock
in
inc
lds
mov
popf
adc
out
cltd
adc
fdivrs
stc
lods
cmp
hlt
push
fstpl
js
aad
or
lahf
mov
test
jnp
out
lahf
shr
push
repz
lods
dec
cmp
xchg
pop
clc
add
push
mov
dec
mov
das
xlat
mov
dec
cmc
pop
movsb
ficoms
adc
and
and
mov
jbe
mov
inc
mov
adc
cmp
icebp
add
popf
arpl
push
cwtl
mov
sbb
cmp
or
mov
inc
not
aam
test
mov
call
jmp
repz
cs
stc
bound
jae
xor
sbb
insb
ret
add
xor
in
dec
mov
popf
sbb
into
sbb
in
out
ret
or
or
les
sbb
sub
sub
es
movsl
aam
sub
pushf
cmp
sbb
jb
shlb
dec
inc
test
lcall
std
repz
orl
test
fstpt
fsubs
and
out
adc
mov
gs
jne
or
mov
xchg
or
lret
pop
xchg
cld
inc
fcoms
int3
cmp
test
outsb
aaa
ljmp
test
jno
dec
popf
loopne
dec
mov
jg
pop
xor
or
lods
mov
mov
xlat
js
pop
xchg
cmp
fwait
sbb
adc
outsb
ja
adc
das
mov
into
inc
sbb
xlat
mov
sbb
insb
testb
cmp
int3
mov
fsts
mov
lods
aaa
sbb
stos
dec
imul
inc
cmp
pop
cld
mov
jmp
movsl
movsb
adc
jnp
loop
mov
jp
lods
in
cmc
xchg
adc
push
mov
push
push
dec
je
inc
in
or
je
aad
or
fldcw
and
ss
push
adc
in
clc
or
pop
jle
cmp
push
and
jo
adc
jmp
fwait
push
mov
shr
sub
andl
ss
cmp
push
cmpb
add
popa
call
sbb
pop
sbb
nop
std
clc
fadds
add
pusha
mov
sub
insl
xchg
stos
inc
mov
sti
dec
xlat
fistpll
jo
mov
sbb
repnz
andb
scas
jno
sub
repnz
into
cmp
stos
roll
and
xchg
sub
out
push
adc
sub
dec
pop
mov
out
aam
cmp
xor
xor
jae
call
sub
mov
cmpl
or
push
out
jecxz
mov
fcmovb
add
push
push
xchg
and
rcrl
cmc
mov
mov
mov
scas
or
fwait
mov
pop
and
fsubs
outsl
sub
or
lods
mov
push
test
push
int
jp,pt
cmpsb
push
mov
pop
or
pop
or
mov
scas
loope
xchg
mov
scas
mov
loope
aam
adc
cmc
xchg
and
sbb
flds
lods
mov
sub
push
push
sbb
es
adc
imul
mov
adc
and
xchg
es
sahf
repnz
lds
in
sub
mov
int
inc
cmp
mov
mov
jle
mov
and
test
sub
sbb
xchg
fmuls
arpl
xor
xor
dec
dec
test
shr
add
xor
rorb
stos
in
pushf
cmc
sbb
dec
lds
pop
cmp
mov
pop
xor
faddl
cmp
std
ret
pop
insb
packsswb
in
pop
push
push
dec
dec
cmp
add
movb
inc
outsl
scas
pushf
push
shl
xchg
adc
out
scas
fsubrp
popa
daa
ret
jp
cmp
scas
push
idivb
aaa
xchg
add
pop
pop
mov
sbb
cmpsl
inc
popl
nop
push
je
sbb
mov
push
push
lods
sub
xchg
pcmpeqb
test
std
scas
jae
out
xchg
stos
sub
ja
pop
cld
mov
jp
sbb
popa
std
mov
pushf
out
mov
xchg
mov
xor
shll
mov
add
call
icebp
inc
sbb
divl
pop
sub
pop
adc
call
mov
cs
mov
mov
and
dec
pop
scas
lret
pop
jmp
fwait
inc
dec
mov
test
lahf
sub
hlt
sub
xchg
inc
adc
sbb
dec
leave
pop
mov
data16
sub
andl
out
mov
push
mov
repnz
and
lcall
push
xlat
push
push
lods
sti
dec
xchg
sub
add
mov
cs
sti
pusha
jo
sub
lock
add
jb
rorb
je
jbe
int3
dec
hlt
fdivrl
popf
rcrb
dec
mov
int
call
or
mov
cli
inc
jno
cli
or
inc
fldenv
cwtl
les
adc
imul
adc
jns
pop
pop
cmpsl
fs
jmp
jbe
imul
lock
push
clc
mov
lock
mov
shll
and
arpl
jl
dec
aam
dec
dec
fwait
es
out
and
cwtl
dec
fidivrs
pop
fisubs
adc
setp
loopne
int3
jmp
rcr
mov
mov
lds
add
push
ss
jecxz
cmp
loopne
jno
sbb
fldl
push
fs
fadds
push
ret
sub
sbb
shrb
jge
mov
call
and
lds
add
fldenv
mov
sub
rcl
jle
aaa
rcrl
subl
or
or
lea
pop
lods
add
je
and
push
push
imul
push
mov
sbb
jo
mov
loop
dec
inc
cs
stos
daa
das
adc
stos
xchg
mov
cmpl
dec
pop
mov
mov
mov
cmpsl
das
bnd
sbb
fstpl
stos
pop
lods
jmp
pop
pop
outsl
push
jmp
in
adcl
test
es
or
xchg
mov
sbb
repz
push
and
loope
dec
mov
movsb
scas
adc
aad
and
movsl
dec
sbb
lret
mov
outsl
push
pop
lret
mov
outsb
jg
std
pop
sbb
bswap
add
fdiv
pop
mov
xchg
insb
push
mov
mov
push
pop
adc
xchg
inc
mov
jp
cmc
testb
sarl
ret
cwtl
js
jle
dec
push
inc
pop
inc
mov
fwait
jbe
push
pop
or
jb
adc
flds
dec
pop
lcall
inc
xlat
int
dec
and
sub
mov
call
arpl
push
rcrb
push
sbb
fwait
orl
jge
pushf
test
pusha
shlb
xchg
lcall
sub
scas
sbb
xor
into
aas
sbb
cmpsb
adc
xor
ds
popf
shll
dec
or
pop
aam
mov
jecxz
dec
dec
fidivrs
enter
mov
add
sbb
mov
mov
xlat
push
and
dec
repz
test
adc
inc
cmp
pop
xor
jg
lahf
sti
sbb
sbbl
jmp
pop
push
push
sub
mov
inc
sub
sub
push
mov
xor
repnz
mov
rcl
nop
inc
aas
cld
inc
popf
inc
nop
scas
mov
roll
aaa
outsl
cmp
xchg
cmp
and
fs
fwait
pop
dec
inc
lcall
addr16
inc
sub
mov
and
test
mov
inc
sahf
into
aam
addl
ja
jb
in
js
ret
lods
stos
inc
xor
out
mov
mov
pop
test
mov
push
ljmp
ja
les
enter
in
mov
jge
cmpsl
jl
mov
leave
jmp
mov
loop
addr16
sub
sbb
sub
mov
xchg
jo
sbbb
inc
aam
xchg
aas
dec
in
lods
mov
xchg
and
xchg
push
ss
fldcw
cs
or
add
fcmovbe
add
pop
mov
dec
mov
sarl
rorb
push
test
int
out
test
cmp
mov
dec
femms
sub
lret
loope
cmp
pop
or
cmc
mov
aaa
or
xchg
and
in
push
and
cmp
dec
and
and
mov
mov
and
test
movsb
pop
xchg
std
repnz
cmc
pop
lea
xchg
out
ds
lds
and
sti
rcl
jge
fs
xor
push
lds
cs
sbb
adc
push
add
xlat
jae
repnz
data16
and
cmp
addr16
xor
sub
in
out
insb
jecxz
popf
fcomps
pop
call
into
int3
mov
pop
or
enter
lret
sbb
adc
mov
push
dec
mov
sarl
scas
int3
out
testb
fwait
out
stos
pop
pop
xchg
sbb
pop
arpl
mov
rorb
push
xchg
mov
fdivs
fisubl
test
inc
mov
stos
mov
jbe
mov
or
enter
and
and
loop
repz
lock
sbb
rorb
cmpsw
jp
and
mov
jl
and
test
add
sub
gs
shl
cltd
cmc
lret
std
fdiv
in
or
sti
shrl
lods
add
push
popa
scas
sub
jmp
push
push
push
pop
push
add
xchg
popf
repnz
mov
or
mov
push
push
jecxz
mov
and
ss
sub
in
popf
adcl
out
stc
scas
push
mov
inc
pop
pop
xor
dec
shl
mov
bound
ds
loopne
daa
sbb
sbb
clc
imul
fnstsw
adc
pop
jecxz
es
shl
adc
inc
add
ret
xor
jbe
dec
dec
leave
inc
jnp
xor
xor
or
dec
std
inc
mov
jp
mov
daa
sub
cmp
xchg
out
in
movsl
test
pcmpgtd
rol
mov
lea
popa
add
or
lods
cld
jne
sbb
pop
dec
inc
adc
lds
xchg
or
rol
push
out
mov
pop
mov
push
jl
xchg
jne
inc
or
sahf
loopne
nop
repz
inc
gs
xchg
es
les
jl
je
mov
rcl
add
pusha
inc
imul
iret
cs
ss
insb
iret
jne
mov
jbe
movsl
in
jnp
sbb
sbb
xor
fdivs
scas
ss
xchg
aam
loopne
add
pop
push
test
cltd
fcoms
cmpsl
clc
dec
fs
je
xor
ja
insl
fildll
or
into
mov
cmc
add
jl
xchg
sub
mov
mov
jnp
sbb
aad
cmp
pop
cmc
daa
xchg
std
lods
mov
shlb
cmpl
push
xchg
les
jnp
movsl
test
clc
cld
je
test
mov
xchg
int3
xor
daa
leave
fsubl
pop
pop
and
fidivl
lock
or
push
adc
shll
jge
xchg
aam
shll
mov
popl
dec
adc
cmp
sub
sub
adc
mov
mov
sbb
cld
push
mov
pop
push
xor
or
outsb
adc
push
mov
and
sbb
adc
add
dec
pop
push
xchg
xorl
or
adc
xchg
sub
pop
xchg
popl
mov
mov
mov
dec
fists
xor
add
mov
lahf
adc
pop
add
shrb
jge
repz
rolb
out
shlb
dec
push
xor
push
pop
jbe
fcoms
out
fcom
mov
dec
fidivrs
into
xchg
test
cmp
pop
sub
lahf
add
aad
addr16
adc
mov
mov
pop
xchg
and
mov
cwtl
ret
shrb
pop
out
mov
sub
test
jmp
lds
mov
into
into
popf
cli
jo
xor
subl
mov
scas
mov
jb
mov
push
stos
push
mov
xchg
cmp
pop
stos
out
int3
mov
mov
popa
inc
popa
xor
lahf
js
cmp
ds
adc
out
dec
or
xchg
jle
cmp
inc
rclb
or
push
xchg
adc
mov
fnstcw
and
ret
jl
mov
sub
imul
or
jmp
pop
xor
mov
lock
or
push
dec
adc
adcb
popa
enter
rcll
aad
push
enter
movsb
rclb
mov
stc
imul
or
ja
mov
cmovle
or
scas
adc
push
fcomip
and
ja
roll
dec
les
stos
xchg
loop
xchg
rorl
sbb
int3
adc
addl
cmc
fs
pushfw
push
mov
inc
dec
pop
jg
cmp
push
inc
xchg
pusha
shll
mov
fmull
jl
or
scas
das
mov
movsb
mov
hlt
in
repz
mov
cmp
mov
aam
push
and
adc
mov
adc
flds
inc
or
mov
call
and
xchg
inc
lret
inc
pusha
enter
jno
pop
imul
or
pop
pop
push
mov
push
cld
sub
stc
inc
popf
or
cltd
loop
pop
jmp
push
push
or
cld
cmp
xchg
insb
bound
or
jbe
add
aam
and
test
or
cmp
fwait
pop
push
fimuls
cmp
dec
jns
sub
dec
jb
lods
repz
and
aaa
popa
out
adc
and
mov
fsubrp
push
arpl
push
mov
xor
lods
jecxz
mov
in
insl
xchg
pop
incb
add
call
or
add
fildl
xor
arpl
or
push
dec
scas
sbb
rorl
push
gs
adc
jp
repnz
and
out
add
cmp
lea
arpl
adc
scas
cmpsb
inc
imul
daa
inc
les
outsb
sbb
fildll
inc
dec
outsl
cmpsl
icebp
fcomps
cld
or
es
fiadds
das
and
enter
insb
andl
jmp
xchg
into
adc
test
mov
and
add
and
mov
adcl
lret
push
data16
lret
nop
out
pusha
loope
sub
test
dec
pop
xchg
pop
jne
pop
dec
xchg
mov
cmp
icebp
pop
pushf
arpl
inc
or
mov
fdivrl
xlat
dec
movsb
out
mov
roll
in
clc
into
adc
and
jp
stc
and
cmpsb
inc
pop
into
andb
inc
inc
add
test
sub
xor
mov
scas
popa
shr
push
and
sub
add
jle
or
xchg
jge
add
xlat
repz
add
pop
arpl
jg
movsl
mov
mov
xchg
or
movsb
mov
or
add
mov
cmc
fwait
movsl
adc
or
insb
lea
jno
into
scas
mov
xor
rorl
inc
lock
leave
dec
push
fistpll
frstor
fwait
movaps
xchg
add
mov
push
into
xchg
pop
movb
xor
lods
stos
pop
call
inc
mov
mov
aam
push
xchg
mov
dec
add
in
inc
mov
cmpsb
and
lods
divb
pop
test
xor
push
sbb
pop
inc
ja
adc
stc
in
xchg
loopne
sbb
mov
push
ss
cs
xor
cmp
jbe
imul
push
ss
loope
aaa
xor
cmp
adc
xchg
sub
push
nop
inc
mov
push
in
push
sbb
mov
inc
push
mov
and
out
adc
jnp
or
and
push
pop
loopne
jae
loope
push
mov
pop
jbe
cmpsb
sub
xchg
insb
into
fcomip
mov
rorb
fldenv
into
dec
sahf
or
les
push
pop
xor
cs
arpl
inc
scas
mov
scas
sub
inc
add
push
inc
add
pop
cmp
cmp
cli
sub
insl
lea
sbb
mov
mov
fistpl
push
cs
leave
rcr
add
inc
xor
jl
addl
and
cmp
add
jb
xchg
adc
mov
popa
jno
jecxz
cmp
xor
mov
in
fs
arpl
inc
xchg
lock
add
nop
xchg
push
into
sub
xlat
push
sub
cmpsb
push
popa
xor
and
fisttpl
or
jge
gs
push
sub
jp
stos
ret
dec
shrb
int
leave
pop
jl
jns
mov
mov
data16
lds
mov
insl
andb
pop
test
dec
out
cltd
cmpsl
inc
mov
cmpsb
dec
es
inc
lahf
in
scas
stos
inc
std
jmp
mov
mov
cmp
xor
rclb
cmp
xchg
movsb
mov
pop
adc
push
push
paddw
sbbl
fldenv
jmp
adcb
jge
push
and
inc
imul
cmp
mov
cmp
out
ds
cwtl
mov
mov
add
inc
mov
cmc
push
mov
sbb
imul
rolb
dec
or
lcall
or
mov
mov
sbb
lea
fnstcw
cmpsb
mov
in
in
xor
push
push
jnp
jmp
dec
or
pop
add
lods
jo
push
fs
mov
pop
shl
mov
xor
mov
scas
loope
mov
repnz
pop
cld
xchg
fnstenv
das
shrb
pop
mov
mov
sti
pop
cmpsb
add
push
hlt
je
cltd
add
adc
sahf
js
out
pop
daa
roll
dec
popa
and
je
or
pusha
ljmp
jge
sbb
dec
pop
jo
scas
negl
xlat
insl
xor
outsl
hlt
jl
ret
ret
lods
push
lret
adc
shl
jae
in
dec
xor
pop
aaa
cmpsb
sub
clc
xchg
pop
sar
jmp
mov
imul
test
lock
scas
dec
jns
js
inc
out
out
into
mov
daa
mov
mov
pop
loop
ljmp
aad
inc
mov
xchg
adc
push
cmp
inc
aam
and
lods
jb
xchg
push
push
or
adc
faddl
xchg
sbb
mov
jno
adc
addr16
mov
popl
es
stos
push
push
or
hlt
insl
rorb
add
cmp
sub
das
sahf
ret
mov
sbb
xchg
push
outsb
sub
sbb
adc
mov
pop
inc
adc
fdivrs
lods
inc
mov
adcl
stos
cs
mov
cltd
xchg
and
enter
inc
aaa
pextrw
add
or
jp
sub
push
and
ror
mov
sbb
shlb
sbb
fimuls
push
push
pop
loop
outsb
test
jb
movsb
andb
dec
ds
outsl
inc
inc
mov
ds
mov
test
inc
mov
xchg
cmp
or
imul
dec
push
jmp
push
enter
dec
adc
and
aad
push
aaa
inc
mov
aad
add
movsl
dec
add
pushf
jg
outsb
inc
dec
lods
aaa
repnz
mov
sbb
jns
in
inc
dec
cmpb
cmpsb
aam
sub
mov
incl
add
dec
insl
xchg
sbb
mov
incb
mov
insb
or
cli
xchg
nop
pop
jp
and
mov
ror
inc
hlt
dec
test
in
xchg
in
pusha
outsl
jnp
xchg
iret
das
push
in
xor
dec
add
cs
ret
inc
lds
mov
and
movsl
pop
push
shll
stc
fdivrl
dec
es
lock
and
rol
insb
dec
mov
jne
cmp
sbb
sbb
int
fbld
loop
and
rclb
sub
push
mov
mov
filds
lock
dec
inc
xchg
negl
test
pop
adc
cmc
ret
filds
fxtract
lret
push
sbb
ret
bsf
jge
ret
mov
pop
loope
mov
ja
loopne
mov
scas
mov
sbb
repnz
dec
pusha
sub
and
mov
add
dec
mov
das
jg
cmc
cmp
hlt
and
orb
pop
out
stos
and
add
aaa
mov
mov
rclb
inc
mov
dec
jne
es
je
pop
clc
or
stos
nop
jle
outsb
cmp
pop
les
rcl
mov
pop
stos
sub
mov
mov
in
dec
jnp
inc
pop
pop
outsl
and
mov
pop
sub
xor
and
fnstcw
inc
pop
push
daa
movsl
ss
sbb
mov
gs
pusha
adc
pop
je
sub
add
lock
fisttpl
mov
xchg
or
cmp
pop
hlt
dec
test
mov
mov
jmp
mov
call
pop
fs
lods
outsl
cltd
mov
pop
int3
stc
fnsave
into
addl
push
imul
xchg
das
xor
aam
inc
and
jae
lret
in
insb
push
lret
fsubrs
call
and
rcrl
sahf
leave
shlb
fwait
shll
loop
mov
inc
xchg
push
jecxz
dec
mov
mov
mov
inc
imul
pop
jge
cld
jns
mov
les
in
jnp
ljmp
mov
inc
out
hlt
into
fldl
jge
fs
mov
mov
icebp
jns
test
gs
cmc
das
adc
aad
push
dec
lods
pop
sti
ret
sbb
fcompl
rcll
mov
push
xchg
daa
xchg
xor
les
or
test
or
test
push
push
insl
lahf
or
mov
stc
stc
mov
pushf
ficompl
movsb
mov
push
inc
ret
mov
int3
or
mov
mov
outsl
es
mov
std
push
and
dec
push
mov
sbb
add
sbb
jmp
aaa
gs
jnp
sbbl
insl
sub
movsb
pushf
jmp
into
adc
pop
mov
or
in
push
pop
xchg
nop
inc
stos
and
and
test
sti
bound
outsb
cmp
decl
push
cltd
cld
mov
xchg
andl
and
cli
pop
pop
es
mov
mov
hlt
repnz
adc
orb
sub
lods
loope
cmp
ds
push
imul
xchg
dec
ljmp
stos
insb
out
pop
push
pop
jmp
or
pusha
xchg
fwait
and
popa
add
ret
mov
cltd
mov
sub
push
sub
push
pushf
cmpsb
jle
xchg
imul
mov
mov
sti
and
dec
inc
icebp
pop
rclb
iret
xor
out
gs
lahf
movl
mov
mov
lcall
sbb
mov
lods
fcompl
imul
mov
push
and
pop
out
ja
push
outsl
inc
inc
pop
jecxz
sbb
mov
mov
loop
addb
mov
pop
cli
mov
aam
push
fadd
fst
jl
mov
pop
dec
sahf
stos
mov
mov
and
sbb
stc
mov
add
cld
test
addr16
ss
es
push
cltd
ds
jno
out
aaa
sbb
mov
lods
test
call
mov
jb
outsl
das
lret
adc
push
dec
mov
sub
mov
pushl
pop
repz
mov
popf
bound
jbe
xor
or
scas
mov
testb
xchg
adc
push
pop
jle
adc
scas
fs
xor
xlat
mov
pop
aas
insb
test
and
test
pop
je
insl
lret
add
jmp
loope
pusha
mov
push
add
into
and
notb
or
inc
mov
fldcw
jmp
and
jecxz
cmp
loopne
inc
ret
sbb
andl
inc
loope
xchg
ror
xchg
push
call
and
and
stc
dec
inc
pop
in
movsl
cmp
imul
test
dec
jg
adc
inc
scas
aaa
adc
push
add
jg
mov
mov
iret
cmp
inc
xchg
pop
sub
or
or
push
mov
subl
pop
jle
jns
in
daa
mov
pusha
cmp
lahf
xor
push
add
push
das
xchg
int
dec
mov
ljmp
adc
mov
std
inc
mov
lock
imul
pop
ret
sti
jge
jp
jmp
in
push
sub
pop
popa
sarb
cmpl
cwtl
mov
je
push
and
or
xor
aad
mov
adcl
add
mov
popa
mov
inc
and
insb
push
fcoms
inc
push
test
jo
fiaddl
sti
and
cmpb
movsl
fsubl
xor
mov
bound
inc
div
ret
pop
in
lods
mov
pop
shll
sbb
fwait
icebp
imul
in
pop
pop
js
push
std
adc
cmpsb
inc
inc
push
roll
scas
out
in
jmp
or
push
lret
xor
mov
mov
mov
mov
cmp
xchg
ficoms
dec
xchg
add
jbe
sahf
xor
ss
imul
and
mov
add
clc
pop
out
xchg
mov
cmpsl
roll
jmp
call
addr16
int3
push
fsubrs
sbb
jecxz
mov
push
and
out
hlt
lahf
jns
dec
inc
pop
xchg
mov
push
inc
cli
sub
pop
cmp
fldpi
push
in
ja
xlat
cmc
insb
pop
xchg
sbb
add
movsb
lret
shl
in
ret
jno
xchg
negl
mov
aas
xor
mov
sub
mov
sub
das
out
push
incl
sbb
cs
cmp
xor
stos
pop
mov
lds
movsb
mov
stos
adc
nop
mov
mov
mov
push
enter
dec
mov
call
ret
mov
pop
cld
or
frstor
jge
pop
add
jl
or
cwtl
inc
popf
xchg
mov
jnp
cmp
stc
push
push
push
jno
mov
pop
xlat
or
pop
push
popw
lods
adc
pushf
cmp
sbb
icebp
inc
xchg
into
cwtl
push
mov
test
inc
xchg
dec
mov
aam
test
xor
insb
test
xchg
or
add
mov
out
add
insl
outsl
sub
das
lahf
and
sub
in
pushf
ret
addb
cmpsl
xor
mov
push
addr16
mov
mov
int3
mov
call
arpl
cld
pop
icebp
mov
jns
imul
push
mov
insb
pmaxub
scas
mov
repz
xchg
adc
jl
pop
sub
mov
mov
je
outsl
dec
cwtl
jecxz
iret
xlat
push
jnp
mov
leave
lods
pop
outsl
aas
pushf
pop
inc
aad
ret
mov
shl
in
pushf
sahf
adc
jns
push
xchg
add
jg
pushf
gs
or
pop
xchg
fidivl
cmp
mov
imull
jno
pop
jne
jle
xor
aam
mov
jnp
in
mov
lret
xchg
adc
cwtl
mov
jno
sahf
xchg
and
adc
fistps
mov
push
iret
shrl
inc
mov
mov
nop
je
mov
xchg
les
loope
out
pusha
ficoms
inc
xchg
sbb
jo
pop
das
sub
pop
fisubrl
mov
dec
sbb
aad
jg
stc
ljmp
jp
adcb
nop
xchg
push
adc
fnsave
test
imul
fdecstp
mov
mov
insl
jmp
jmp
push
mov
dec
mov
mov
mov
fdivs
outsb
test
jge
mov
or
jns
inc
hlt
mov
jmp
shll
sub
loop
and
cmp
add
add
pop
mov
sbb
iret
movsb
mov
mov
repnz
cmp
mov
inc
pop
es
adc
sarb
xlat
lods
outsl
iret
stos
orps
lea
cmp
mov
mov
aam
pop
or
dec
jle
repz
aam
dec
push
pop
shlb
popf
fcomip
ljmp
ss
repnz
lea
push
mull
in
push
insl
je
and
sub
xchg
test
mov
ljmp
add
fistpl
nop
ss
int3
lahf
xor
bswap
cmp
aas
dec
outsb
shll
jp
lahf
pushf
inc
scas
bound
xchg
mov
inc
or
cltd
xor
rol
pusha
cmp
dec
push
mov
push
pop
insb
and
outsl
jo
sub
dec
rcll
push
fnstcw
out
mov
test
mov
mov
sbb
rcr
xchg
aaa
and
ja
cmpsb
cmc
dec
xchg
fwait
test
mov
cmpsb
in
push
lods
jnp
test
nop
jg
int3
sahf
mov
lahf
or
pop
lcall
add
repnz
cmp
lods
dec
inc
in
sbb
cmc
inc
or
add
popf
lahf
add
add
ficoml
repz
pop
popf
dec
and
cmpsb
lea
push
stos
ljmp
outsb
cmpsl
or
sub
loop
ret
rcll
int
add
dec
jg
rclb
sub
or
enter
cmpsb
in
push
mov
mov
mov
fsts
test
repz
push
lret
in
sahf
xchg
mov
pop
loope
dec
repnz
add
mov
cmc
jb
pop
mov
push
fdivs
lock
pop
sub
cmp
xchg
in
dec
insb
in
jo
sarl
mulb
push
sub
pop
jmp
outsl
idivb
fmull
jno
push
lahf
aad
repz
cmp
lcall
sarb
jne
clc
loop
push
cmp
fwait
jmp
sbb
sbb
mov
leave
jmp
clc
adc
shlb
mov
lds
xchg
in
mov
rcrl
or
test
mov
out
and
out
inc
call
dec
adc
shrb
test
or
mov
imul
das
xor
xor
mov
std
cltd
lock
imul
jae
adc
aad
pop
sbb
or
in
lea
jmp
inc
xchg
fldenv
xchg
or
mov
mov
sub
mov
mov
push
add
stc
aam
ret
sahf
mov
lea
pop
jno
mov
cmpb
push
xor
fisubrl
sbb
push
or
filds
jg
mov
jae
hlt
or
push
and
push
cmc
sub
mov
jo
jno
ljmp
and
in
int3
cmpsl
mov
mov
ret
fcmovb
icebp
mov
lock
fiadds
push
inc
jns
mov
mov
mov
or
rcrb
shrb
cmp
jno
scas
push
inc
insl
rclb
stc
adc
mov
adc
xchg
arpl
pushf
and
mov
cwtl
inc
das
dec
push
xor
pop
dec
icebp
jmp
and
mov
test
imul
xchg
cmp
sub
mov
mov
or
lahf
xchg
arpl
mov
xor
cmpsl
xchg
mov
sbb
lods
cmpsb
lret
stos
sbb
loope
mov
sbb
pop
scas
test
mov
lcall
frstor
es
ss
pop
shll
cmp
jae
xchg
pop
push
cmp
cmpsb
inc
lea
bound
add
inc
stos
inc
pop
wbinvd
fsubs
repnz
mov
xchg
enter
mov
arpl
ror
add
xlat
pop
xor
xorb
clc
inc
push
arpl
lcall
jne
out
outsb
mov
pop
out
sub
sbb
adc
pop
mov
fwait
cmc
mov
jno
dec
cwtl
inc
lock
or
les
push
scas
mov
cli
stos
pop
jb
aad
mov
je
mov
xor
push
std
jle
dec
jnp
add
mov
fs
add
mov
rorb
xor
sub
insb
xlat
inc
and
push
mov
cmp
inc
jns
inc
daa
notl
repz
pop
cli
loop
sarl
int
iret
jl
mov
fistl
adc
lret
xor
nop
inc
inc
xor
jno
loop
fdivrs
jmp
ljmp
xor
test
or
pop
fiadds
out
shrl
rcpps
pop
cmp
repnz
dec
lret
add
lds
xor
cltd
inc
and
pushf
jge
sub
cwtl
ffreep
pop
enter
cmp
repz
dec
loop
mov
mov
sub
push
movsb
sahf
pop
jne
dec
test
inc
mov
loopne
sbb
lret
mov
sbb
mov
shlb
sar
mov
iret
dec
push
or
repz
pop
mov
sub
leave
cmpsl
xor
imul
arpl
dec
push
or
dec
or
pop
cmp
jle
inc
dec
arpl
mov
sub
sub
xchg
stos
repz
pop
mov
lea
push
int
shrb
and
sahf
jmp
pop
test
dec
hlt
test
ret
fcomip
push
jne
movsl
push
add
call
cltd
push
fidivrs
js
xchg
cmpsl
dec
loope
sarb
or
push
xchg
addb
and
and
push
dec
addr16
shll
pop
push
test
pop
push
push
inc
lret
jmp
mov
shlb
mov
dec
movb
dec
cmc
dec
scas
push
dec
add
inc
adc
mov
lret
aam
outsb
push
cltd
push
outsb
bound
mov
cwtl
cmp
cmp
into
sbb
cltd
add
xchg
sub
adc
add
mov
pop
movsl
add
pop
pop
rolb
in
in
dec
mov
imul
das
push
movsb
mov
fld
scas
insl
mov
cmpsl
shrl
aam
dec
pop
sti
in
out
in
pop
xchg
xchg
xlat
stos
pusha
xor
cli
jle
cld
inc
dec
test
sbb
js
test
std
pusha
inc
fimuls
add
test
fisubrs
jb,pt
rorl
getsec
add
lods
shll
lret
mov
cld
mov
cmp
dec
into
imul
rcrl
mov
mov
fisubl
lret
adc
sbb
jb
lret
movsl
aas
lock
in
into
fnstsw
mov
les
sarl
adc
sub
repnz
sub
add
imul
pop
or
data16
mov
leave
xchg
mov
fisubrs
dec
loopne
xchg
imul
mov
cmp
push
outsb
xchg
in
lods
out
sbb
sub
icebp
bound
sbb
pop
or
and
out
jl
cmc
mov
inc
pop
decb
dec
jno
lds
test
fcomps
and
pop
out
sarb
push
dec
rep
cwtl
push
clc
jecxz
fneni(8087
sub
push
arpl
push
dec
mov
dec
frstor
mov
daa
insl
cli
sbbb
jle
push
cmp
aad
xchg
sbb
cmc
jmp
mov
iret
repnz
hlt
adc
int
lock
add
fmull
jge
jne
mov
push
xor
fcompl
xlat
sub
jle
add
add
out
push
bound
xchg
push
xor
jns
jecxz
out
xchg
cltd
sbb
jecxz
push
add
lock
out
sbb
ds
cmp
inc
sub
add
jg
movsb
cmp
inc
jp
and
mov
stos
or
xchg
imul
adc
mov
js
xchg
scas
mov
mov
jl
dec
sbb
push
pop
iret
and
xor
xchg
cmp
or
mov
mov
xchg
inc
test
sbb
scas
in
je
xchg
xchg
push
jge
mov
sub
jle
mov
dec
gs
daa
push
call
jmp
and
sub
xor
movsl
mov
cmp
mov
jg
movsb
or
outsb
xchg
add
dec
mov
jno
loopne
jns
adc
push
xchg
aad
mov
or
pop
cli
rolb
ljmp
mov
adc
cli
setb
arpl
nop
in
imul
mov
dec
jg
xchg
shrb
test
aas
or
ja
inc
daa
inc
popf
lret
sbb
sbb
iret
or
push
mov
inc
push
fwait
adc
fbld
add
shlb
icebp
push
ss
fbstp
push
mov
xor
test
dec
and
jns
xchg
adc
stos
push
mov
sub
fs
pop
cmp
jb
adc
mull
in
jb
or
push
push
cwtl
jbe
adc
jmp
shrl
xchg
mov
cltd
stos
jne
loope
clc
js
xor
aam
fistps
test
rclb
fcmove
inc
cmp
lods
das
pop
sbb
and
cmp
aam
cmp
ss
in
and
push
jae
xlat
add
or
inc
arpl
mov
out
add
in
addb
add
nop
mov
cmp
mov
or
pop
jb
pusha
popa
or
bound
frstor
addb
lret
pop
imul
sbb
cmp
jbe
push
push
mov
dec
icebp
add
in
fnstenv
mov
ret
ret
jle
pop
hlt
das
xor
dec
stos
test
aad
pop
and
jmp
sbb
push
rcrl
mov
sbb
stc
jnp
fwait
and
les
push
mov
xchg
mov
cmpsl
movsl
imul
push
cmp
scas
in
and
out
xor
pop
add
sbb
out
out
push
fsubrl
adc
sub
outsl
push
cmp
cld
int3
fsubs
or
pop
mov
jb
mov
sbb
sub
mov
pop
jge
in
dec
test
movsl
dec
hlt
jp
dec
incb
jp
int3
push
roll
cmp
mov
arpl
jecxz
fdivrl
mov
jb
aam
ficoml
cwtl
cmpsb
arpl
arpl
fs
ss
nop
cmp
scas
cmpb
inc
std
stos
cmc
leave
mov
outsl
cs
mov
sbb
repz
and
cmp
cmpsb
mov
mov
insl
gs
rcr
mov
and
dec
cmc
cmpsb
add
mov
xor
fldl
jbe
orb
inc
mov
lds
mov
xchg
out
fmull
cmpsl
out
adc
repnz
mov
adc
icebp
jmp
sbb
sahf
xchg
adc
nop
aaa
cld
adc
les
lret
fstps
imul
cmpl
sahf
jns
or
test
mov
sub
fidivrl
push
jb
pop
jbe
pushf
shll
imul
jmp
in
nop
mov
adc
inc
ljmp
pop
out
repnz
mov
jb
jmp
push
mov
pop
mov
addr16
sbb
jmp
inc
fildll
xchg
jne
dec
mov
pop
pop
sbb
xor
push
push
pop
xchg
out
pusha
mov
pop
pop
dec
insl
mov
cmp
out
mov
mov
insl
and
mov
add
and
insb
pop
push
aas
inc
mov
push
stc
dec
mov
repz
xor
mov
arpl
mov
jmp
test
sub
insl
cmp
ret
jmp
mov
fldl
pop
cmp
or
aad
inc
jl
pop
or
mov
sarb
jae
mov
jbe
jmp
movsb
outsl
adc
test
or
push
cmp
mov
cmp
xor
das
dec
aad
lcall
cmpsb
xor
jp
mov
push
mov
and
xor
mov
cmp
add
shl
lods
sub
fnsave
bound
xor
loop
pop
int3
dec
test
xor
and
push
push
push
outsb
in
xchg
dec
sub
enter
sbbb
rcrl
xchg
mov
add
xor
fnsave
adc
fscale
lock
mov
orb
xor
les
sub
shlb
leave
fwait
sbb
push
mov
sbb
mov
mov
jo
outsb
xor
popa
clc
sbb
scas
add
ja
inc
imul
idivl
pop
cmp
addr16
ljmp
insl
sub
or
aaa
mov
lret
and
gs
mov
push
and
fidivl
cmp
movsl
jne
adc
cltd
into
pop
inc
xchg
mov
or
ret
pop
in
pop
jp
cmp
inc
shll
ret
and
dec
scas
pop
pop
rcr
xchg
mov
mov
lret
mov
mov
jp
inc
cwtl
lock
outsb
outsb
sub
repnz
sub
sub
mov
std
negl
add
jae
outsl
jle
mov
xchg
xchg
and
fwait
les
testl
sbb
and
xor
jne
les
push
aad
xorb
sub
ret
das
cld
jns
mov
stc
fdivr
add
ret
jge
call
inc
mov
inc
aad
in
decl
and
push
xor
icebp
sarb
jp
mov
xor
jne
mov
mov
jmp
push
jg
aas
sbb
add
nop
clc
mov
push
je
mov
dec
outsb
pop
cmc
cmpsb
mov
sbb
ffree
mov
cmpsb
push
dec
je
into
loop
push
inc
jecxz
mov
mov
push
and
push
xchg
xchg
inc
xor
dec
pusha
mov
xchg
out
mov
adc
mov
stos
cs
inc
push
gs
aaa
adc
loopne
bnd
shl
fwait
sub
mov
mov
cli
push
pop
inc
jge
scas
push
mov
outsb
mov
jle
sub
mov
ret
cmp
negb
cmp
std
cmp
mov
loopne
out
and
movsl
or
mov
push
dec
stos
mov
arpl
daa
pop
sub
test
repnz
stos
in
pop
push
lods
sub
jmp
jo
push
lahf
or
add
cwtl
fwait
out
fimuls
scas
push
into
jmp
xchg
sub
ret
dec
call
or
xchg
xchg
and
movsl
mov
mov
popa
push
stc
pop
hlt
sarl
scas
push
out
je,pn
inc
inc
add
jge
mov
sbb
xchg
test
je
jmp
sub
hlt
test
aaa
push
push
inc
or
adc
lock
xchg
loope
push
adc
les
xchg
jae
or
push
cld
fwait
mov
pop
stc
pop
les
repnz
inc
jl
mov
sub
shl
sbb
outsl
in
lock
inc
jl
push
test
int3
pop
popl
mov
pusha
inc
adcb
jg
and
jae
xor
cmp
out
fnclex
pop
iret
mov
outsl
push
ss
mov
enter
cmp
dec
fwait
mov
and
pop
mov
xchg
inc
aam
pop
add
ss
cli
sub
mov
xlat
ja
scas
mov
jp
adc
filds
adc
mov
shll
movsb
jbe
popa
mov
fcompl
sbb
dec
cmpsl
enter
jle
outsl
fidivs
fwait
adc
cli
mov
mov
push
and
adc
pushf
jle
sub
lret
add
lret
add
sub
mov
jbe
cli
aam
loopne
and
jo
xchg
or
xchg
mov
mov
sti
or
adc
loope
std
add
or
mov
xchg
ljmp
cmp
or
fidivl
pop
outsl
push
and
pop
inc
testb
push
daa
jb
jnp
ss
ljmp
mull
or
mov
jno
test
aas
mov
mov
and
and
shll
arpl
shll
cmpsb
and
pop
sti
enter
sub
jge
jecxz
fistpll
push
and
xchg
sub
and
xchg
or
cmpsl
es
jbe
shll
fsubl
fldl
dec
or
mov
pop
lods
nop
mov
adc
test
mov
test
jmp
loop
pusha
jo
stc
sbb
sub
jb
scas
adc
adc
lods
add
add
cmp
jg
movsl
loop
xlat
mov
push
addr16
jg
jge
cmc
inc
sbb
adc
fiaddl
jmp
push
shrl
daa
jo
pop
out
pop
inc
pop
enter
dec
or
xchg
aam
add
cmp
loope
mov
cs
adc
push
pusha
inc
xor
insb
repnz
sbb
ds
sbb
inc
pop
subb
icebp
xor
ja
cwtl
sbb
movsl
adc
out
xor
push
mov
mov
or
xor
cmp
or
mov
fistps
dec
xchg
dec
cmp
and
xor
int
cmp
jno
negb
in
test
lds
inc
jp
and
cwtl
rclb
push
dec
push
mov
push
cld
mov
add
xor
push
and
xchg
pop
inc
sub
fwait
aad
rcr
jb
cwtl
ljmp
scas
popa
xor
iret
xor
cmpsl
cmp
cmp
mov
push
xchg
xchg
jno
pop
lods
cmp
lods
movsl
lods
add
aas
shll
into
imull
insb
gs
ficoml
or
std
daa
xlat
subb
jb
js
sub
cmp
xchg
jne
out
dec
push
or
push
icebp
pusha
fsubrl
fsubl
or
jb
movlps
lods
mov
mov
sti
pushf
in
add
pop
pop
les
std
xor
sbb
int3
or
jb
ljmp
rcrl
rolb
mov
lods
jns
xor
loopne
push
and
mov
and
jp
icebp
out
pushf
mov
aas
aaa
into
or
movsl
cmpsl
shl
pop
jo
push
inc
enter
popa
iret
push
mov
testb
pushf
icebp
insl
imul
es
movl
or
push
clc
hlt
sbb
lods
jb
notl
test
mov
test
dec
sbb
cld
scas
cmp
scas
or
cmp
popf
dec
push
push
xor
mov
scas
aad
sbbb
pop
fisttpll
cmp
and
mov
sti
into
add
mov
addr16
dec
rclb
mov
add
mov
jnp
loop
adc
jl
push
and
jle
shrb
rclb
mov
imul
lds
loop
cmp
adc
jo
mov
push
sbb
movsb
jb
lahf
pop
cwtl
in
pop
stc
cmp
or
sub
push
lahf
push
jbe
test
and
insb
out
sbb
stc
divl
aad
add
sbb
cmp
outsl
std
mov
cmpsl
arpl
jo
movsl
testl
mov
or
js
sbb
arpl
aaa
gs
hlt
pop
pop
sbb
gs
lahf
mov
xor
lock
fildll
ss
jae
push
ret
jmp
mov
jnp
xor
xchg
pop
call
dec
loop
jecxz
pop
push
adc
inc
pop
mov
popf
gs
leave
rcrb
push
xchg
xor
out
cmp
insb
push
push
test
pop
or
filds
cmp
imul
jmp
mov
jl
imul
pop
out
call
aas
push
icebp
es
ja
mov
sti
inc
xchg
xor
xchg
jecxz
js
rolb
push
movsl
scas
fisttpll
dec
jno
aaa
mov
fisubrs
call
push
loop
lahf
push
xor
mov
pop
shrb
sub
inc
fmuls
incb
sub
add
push
fucomp
or
icebp
xlat
mov
les
mov
cwtl
stos
sub
jb
test
adcl
cmpsb
xchg
and
arpl
cmp
fisubs
add
mov
mov
push
sbb
sub
or
scas
push
inc
and
jb
mov
mov
test
les
scas
fs
lods
sub
jge
xchg
mov
mov
scas
mov
cmc
sub
push
mov
ds
das
jnp
fstp
mov
sbb
imul
mov
xlat
lret
cli
mov
mov
mull
mov
sub
stc
xor
add
sbb
pop
fidivs
not
pop
sub
pop
insl
cs
xchg
and
lret
jge
sti
shrb
mov
js
jg
adc
mov
dec
iret
insb
jae
bnd
das
sbb
jmp
in
mov
xor
push
sarb
ss
inc
in
maxps
inc
xchg
hlt
pushf
push
mov
sahf
ret
cli
or
mov
imul
mov
outsb
adc
ja
pop
xor
mov
in
std
pop
jbe
jne
dec
fistps
cmp
in
sbb
push
ljmp
fnop
sbb
mov
jmp
add
cmovno
stos
in
rcll
pop
shll
repz
pop
loop
mov
nop
and
cmp
or
dec
jge
ss
sub
xchg
xchg
js
test
cmp
mov
push
sub
and
and
cs
cmp
mov
icebp
jbe
pop
sbb
sub
out
es
out
shlb
std
push
add
mov
int3
push
cwtl
fisubrs
pop
cwtl
or
sbb
dec
inc
cmp
out
insl
gs
int
xor
mov
lods
ret
pop
jmp
ret
les
dec
and
push
lret
mov
call
jns
ds
sbb
cltd
ljmp
mov
push
xchg
mov
push
addl
and
dec
and
jecxz
and
xchg
imulb
dec
test
xlat
mov
pop
jae
cmp
add
and
mov
adc
outsb
ret
adc
aam
iret
sbb
cli
repnz
mov
and
insb
xchg
pop
pop
xchg
lds
notb
repz
loope
pop
imul
sub
and
or
inc
jnp
sub
dec
push
imul
js
loopne
dec
mov
aaa
xchg
push
lods
inc
sbb
pop
adc
loop
mov
jae
sahf
cmp
testb
adc
out
ret
mull
mov
cmp
lcall
lret
adc
cli
push
shll
addb
or
popa
repz
insl
add
mov
jne
jb
fidivl
rcll
mov
out
cs
sbb
icebp
mov
mov
dec
addr16
xor
shr
rcr
mov
imul
jb
aam
push
mov
fildl
popa
xchg
icebp
mov
add
fs
dec
std
xchg
inc
int
pusha
aad
cmp
and
in
cmp
or
jns
rclb
cwtl
adc
dec
push
lods
mov
inc
ljmp
into
push
push
add
pushf
pop
xchg
cmp
cwtl
aam
insl
add
pop
push
fcoms
mov
push
leave
cmp
mov
iret
jno
sbb
insl
jl
fcmovb
sub
xlat
inc
stc
movsl
jmp
icebp
fnstsw
lea
fiadds
rorl
inc
in
cld
jno
inc
lahf
out
in
arpl
lret
lds
cmp
mov
ret
inc
cmpb
or
mov
and
sbb
cmp
insl
in
jo
in
cltd
inc
cmpb
xor
sbb
das
sti
iret
push
and
add
mov
inc
mov
sub
rcrb
ljmp
scas
xor
ret
fs
or
gs
push
imull
shrb
leave
ret
adc
xor
jb
sbb
jnp
loope
dec
mov
add
into
sbb
out
fidivl
cmp
aam
bound
and
pop
sub
stos
sti
sbb
add
shll
and
sahf
nopl
jnp
loop
xor
jle
pop
sbb
or
cmp
lock
inc
xor
inc
out
sbb
push
xor
pop
loope
dec
aad
mov
dec
jge
cli
imul
adc
repnz
pop
jne
and
push
ja
fwait
lds
aas
sbb
lods
mov
loop
data16
shlb
fisubl
inc
cmp
push
xor
pop
or
mov
jecxz
popa
cmp
fsubrp
sbb
inc
pushf
jns
out
xchg
inc
push
jle
rorl
mov
cmp
mov
out
xor
daa
jno
push
push
xchg
pop
xchg
push
xchg
std
in
push
orb
cmp
jge
mov
xor
int
push
imul
repnz
mov
mov
fistl
loopne
int3
adc
dec
cmp
mov
mov
sbb
push
loope
sbb
loope
repnz
bound
imull
xchg
std
xchg
fcompl
dec
cmc
inc
mov
dec
imul
ret
jp
dec
mov
out
mov
shrl
test
mov
sbb
lret
jg
jb
and
dec
pusha
sbb
xchg
ss
mov
xchg
mov
inc
pop
out
enter
subl
rorl
aas
mov
mov
outsl
mov
mov
sbb
push
pop
pushf
pop
push
adc
sti
dec
fs
xor
pushl
scas
xchg
push
mov
shrb
pop
and
pop
cmp
pop
imul
and
lcall
int
add
sbb
faddl
shr
pop
out
popf
xchg
add
das
mov
stc
inc
jmp
jp
add
sti
nop
jge
idivb
push
cmp
xchg
jp
movsb
repz
orl
mov
and
dec
out
jecxz
enter
ss
cmpsl
dec
cmp
mov
cmpsl
xlat
lods
lret
and
and
adc
in
roll
xchg
scas
sbb
cwtl
ss
dec
imul
shr
sub
int
scas
pop
cmpsl
cltd
sub
ljmp
xchg
adc
jne
mov
scas
mov
xor
sbb
out
mov
mov
add
inc
push
imul
scas
jbe
data16
sbb
pop
jno
or
push
stos
lret
jle
in
cltd
cmc
cwtl
movsb
sbbl
sbb
stos
jne
sbb
adc
in
mov
rclb
int
in
mov
loop
jns
lcall
adc
iret
test
es
add
popa
out
mov
imulb
inc
cltd
fdivs
dec
mov
jp
lea
ds
arpl
xchg
sub
sub
sub
jmp
adc
jbe
scas
mov
jo
pop
insl
add
aas
mov
cmp
or
pop
pop
loop
in
test
fldcw
and
jne
call
jge
xchg
jle
inc
das
stos
or
add
and
mov
test
aad
mov
dec
jne
mov
aas
stc
rcrl
lahf
dec
dec
xchg
dec
push
xor
dec
mov
ja
or
mov
pop
push
sub
dec
test
aaa
add
in
fwait
xlat
dec
repz
jg
loop
fisubrs
jp
or
mov
cmp
push
jge
cmpsb
imul
mov
jo
add
pop
call
and
movsb
mov
sub
jp
data16
mov
bound
and
sub
movsb
ret
or
add
or
loope
push
sbb
dec
add
fmul
fwait
push
mov
dec
pop
pop
pusha
movsl
dec
or
enter
pop
sub
pop
icebp
fisttpll
pop
mov
data16
into
sub
jne
mov
adc
fs
and
mov
mov
adc
add
jno
jno
sbb
jae
xchg
in
shll
int
sbb
jmp
in
jbe
dec
cmp
jle
push
cmp
dec
jmp
cmp
adc
lcall
pushf
adc
imul
fmul
or
cmpsb
xchg
pusha
in
outsb
int3
inc
shlb
adc
jge
or
jb
push
and
pop
fdivl
sbb
mov
aad
adc
mov
and
pop
lods
vpminsw
add
lods
rorb
repz
addr16
enter
loopne
mov
fdivrp
xchg
mov
jne
push
data16
aam
outsl
adc
xorb
sub
fistpll
je
int3
sbb
dec
iret
fwait
xchg
adc
add
cmc
std
js
and
sti
sahf
push
sbb
jae
mov
pop
jmp
inc
shl
or
fisubl
lahf
add
outsl
outsb
das
jmp
adc
lcall
gs
jno
jg
sub
cmpsl
mov
ds
xchg
and
pop
movsl
sub
jecxz
in
sbb
ss
cmp
add
mov
fs
test
aam
push
sar
aaa
fldcw
cmp
and
push
dec
jae
fisttpll
jnp
pop
and
lods
dec
mov
pusha
js
push
and
pop
ret
repnz
xor
add
or
sub
sti
insb
movd
insb
mov
or
adc
test
mov
cmp
jae
pop
imul
add
xchg
scas
fisttpl
sbb
lgs
mov
loope
xchg
xchg
nop
cmp
iret
insb
xor
popf
out
dec
xchg
ficompl
pop
leave
aam
inc
cs
jp
push
fs
imul
imul
lods
rorl
cltd
arpl
in
pop
in
dec
inc
cwtl
inc
arpl
adc
jg
pusha
mov
in
aam
icebp
jne
pop
mov
xchg
test
cs
repz
and
adc
push
add
pop
push
adc
clc
not
jae
aad
cmc
cmp
inc
inc
push
cmc
out
jo
iret
sti
rcrl
xor
mov
pop
loope
cltd
mov
filds
call
rclb
aam
mov
mov
mov
dec
das
xor
xor
adc
popa
outsb
jno
movsl
or
stos
test
mov
jmp
push
push
js
sub
add
adc
sbb
psraw
add
in
popa
pop
xchg
sub
or
notb
mov
pop
sub
jae
shlb
cli
insb
stos
int
or
pop
movsb
jns
in
dec
and
jl
stos
inc
fsubr
push
inc
cs
dec
add
sbbl
adc
sbb
aaa
xor
sahf
es
int3
pop
movl
fcmovnu
loop
xlat
jno
in
xchg
call
stos
dec
or
pop
adc
loopne
js
les
stos
fldenv
ss
jne
ljmp
test
xlat
mov
rorb
jne
das
out
push
jae
xor
mov
sub
xchg
xchg
mov
and
fsubrl
add
inc
rorl
stos
and
movsl
or
cs
mov
stos
pushf
out
push
out
push
pop
fisttpl
orl
ljmp
and
mov
orl
or
inc
daa
call
push
inc
lcall
lret
inc
popa
push
xchg
sub
loopne
dec
sbb
cmp
negl
mov
push
aas
aad
and
mov
inc
add
add
es
jno
fistpll
mov
sbb
or
lcall
jl
mov
pop
jecxz
xchg
les
mov
add
xchg
sti
pop
sbb
dec
mov
lcall
enter
fists
mov
mov
dec
mov
stos
mov
inc
js
add
inc
jnp
and
or
or
mov
lcall
clc
les
stos
cli
aaa
add
sub
repnz
sbb
or
pop
out
imul
and
in
pop
or
gs
and
lock
xchg
mov
dec
test
fst
cs
enter
popf
mov
imul
xor
imul
or
xor
xchg
inc
jb
test
hlt
jae
orb
in
sbb
imul
adc
xchg
or
mov
sahf
cmp
or
movsb
nop
lret
push
sub
xor
out
ds
ret
and
or
push
scas
mov
sub
stc
push
lds
adc
notl
mov
pop
popa
and
push
cmp
inc
rcrb
mov
fs
mov
mov
jmp
divb
push
push
aam
shrl
push
fnstcw
push
push
orb
cmp
ret
sbb
mov
out
cld
sbb
dec
jmp
add
push
push
sub
push
insb
pop
ja
cwtl
inc
clc
cmpsl
js
sbb
mov
dec
or
out
mov
push
cmpsl
jbe
fidivrs
push
cmpsb
sub
orl
mov
sbb
fidivrs
and
mov
data16
or
mov
in
je
add
jb
out
and
jl
outsl
pop
cmpsl
fs
pop
pushf
iret
inc
int3
das
mov
adc
loopne
jp
leave
into
decb
or
and
fidivs
sti
and
cmp
pop
out
sub
fistpl
jmp
and
mov
aaa
add
mov
jae
dec
mov
leave
ljmp
push
push
or
ja
daa
xchg
adc
std
sahf
in
sub
xor
push
sbb
in
jnp
je
aas
testl
movsb
xlat
mov
mov
pop
dec
fidivrl
mov
adc
and
flds
ljmp
xor
lock
popa
es
mov
insl
cmp
inc
fsubs
insb
rclb
popa
imul
push
lahf
les
lods
adc
pop
iret
hlt
sbb
pop
sti
fisubrl
jbe
pop
xor
mov
ret
sub
adc
lods
adc
aas
or
xor
call
push
xchg
iret
mov
repz
nop
push
movsl
add
push
or
loop
enter
and
fistl
out
jo
divl
call
bound
insb
out
jb
outsb
stos
pop
push
test
add
sbb
andb
xorl
or
scas
sti
ror
call
lret
jbe
ror
mov
mov
ss
lret
mov
xor
mov
fisubl
add
stc
movsl
cwtl
mov
lret
add
sti
xlat
dec
adc
jns
jno
mov
pushf
mov
aas
add
pop
sub
call
scas
xchg
ljmp
iret
loope
insl
out
jbe
xor
sbb
sbb
ja
dec
loope
fmuls
ret
adc
inc
cmpsb
push
mull
xchg
pop
pop
fcmovnb
aaa
jg
jmp
pushf
add
or
js
add
icebp
test
xchg
and
adc
aam
faddl
inc
fisubl
mov
cltd
dec
addl
in
inc
das
jmp
push
push
xchg
inc
cli
sbb
cmp
add
mov
cmp
adc
lods
daa
push
fs
xor
xchg
nop
adc
inc
push
cmc
mov
hlt
and
js
or
outsl
mov
sbb
jecxz
test
out
sbb
fstpt
test
jle
mov
into
leave
sub
pop
lret
cltd
data16
loopne
push
enter
add
in
xchg
std
fildl
pop
jecxz
leave
lret
js
mov
xchg
inc
ljmp
negl
push
and
sub
sbb
shrb
daa
adc
adc
loopne
xchg
push
outsl
xchg
inc
adc
mov
in
data16
jge
cmp
insb
adc
cmp
cwtl
push
cs
aam
sub
mov
mov
mov
lcall
in
stos
push
dec
xchg
in
es
pop
inc
lcall
sti
into
cmp
fmul
push
xchg
inc
cs
icebp
les
fstps
sbb
scas
mov
push
sbb
lods
fidivs
ret
sub
mov
rcll
mov
shrl
xor
push
xorl
and
std
pop
loope
ret
pusha
xlat
adc
jmp
jnp
gs
out
cmp
jnp
mov
mov
jg
outsl
mov
sub
pop
inc
outsl
pop
jne
mov
in
push
sbb
ja
pop
lods
stos
fwait
dec
test
push
pop
fsts
nop
jnp
sbb
pop
add
jl
es
cmp
jg
repz
sub
cmpsl
lret
clc
xchg
sub
or
rol
jae
fistpll
dec
push
movsb
sub
push
int
xorb
xor
std
or
pop
pop
xchg
arpl
aad
xchg
gs
test
lea
loopne
pop
jmp
push
aas
ds
bound
push
xchg
lahf
daa
and
aas
dec
ret
inc
pop
pop
cmpsb
mov
or
push
lea
xor
mov
cmp
xchg
adc
push
jo
jnp
sub
pop
add
push
pop
lcall
or
ret
jl
into
cmpsl
dec
or
sub
lds
loope
pop
mov
out
add
jns
adc
inc
xchg
xlat
sub
std
test
je
mov
testb
int
mov
jmp
mov
jne
adc
sub
int3
ljmp
mov
rcrb
xor
nopl
pop
mov
pop
xor
jae
push
push
and
dec
sub
push
push
mov
jmp
cld
fs
ret
or
pop
mov
shlb
mov
push
and
xchg
cli
pop
or
lahf
lods
loopne
xor
mov
loop
adc
dec
inc
adc
ljmp
xor
or
stc
jbe
pop
inc
push
imul
jne
dec
xor
in
sub
push
popf
add
or
xchg
shll
push
xor
inc
mov
mov
call
rorb
cs
in
add
cmp
pusha
inc
pop
inc
xor
loop
add
lret
push
fdivs
add
jmp
ret
jp
ret
cmpsl
lret
or
push
fldcw
and
add
inc
jle
aaa
cmp
pop
dec
ret
addb
in
ret
push
sbb
add
mov
jnp
sub
lahf
jecxz
sbb
inc
add
or
add
mov
sub
mov
daa
cmp
sub
sub
inc
or
repnz
pop
cld
dec
push
or
cltd
pop
mov
movsb
inc
int3
adc
out
cmp
mov
stc
icebp
push
lret
sub
cltd
xchg
sbb
inc
imul
dec
ljmp
or
jle
xchg
cmp
mov
add
out
int3
daa
mov
cmp
jb
aad
mov
xor
in
clc
mov
push
fmull
push
inc
jnp
call
mov
dec
mov
pop
rorb
xchg
pusha
xchg
fs
xor
dec
cmc
popa
adc
imul
or
mov
or
inc
mov
out
mov
inc
cmp
lgs
dec
xchg
fistps
jnp
ror
faddp
add
add
inc
sub
cld
fcmovnbe
data16
dec
sahf
lret
push
and
out
push
push
fs
mov
fsubl
adc
dec
push
xor
test
push
imul
gs
cmp
hlt
jo
fmuls
call
iret
or
test
mov
jmp
out
dec
jno
js
xor
xchg
pop
mov
mov
fcoms
out
pop
lds
mov
jae
adc
mov
imul
stos
inc
ret
mov
cmc
push
mov
and
xchg
addl
shl
or
push
jne
dec
mov
hlt
mov
dec
int3
outsl
cmc
pop
push
pop
jmp
std
sti
sub
test
cmpsb
lahf
rol
ret
jb
aas
scas
cmpsb
jmp
add
push
insl
jno
push
adc
out
push
out
lea
push
mov
std
push
jb
lods
mov
nop
xchg
dec
lret
or
xor
jmp
or
mov
and
es
inc
jp
lret
filds
inc
cltd
ret
xchg
lret
jl
jg
and
jp
push
mov
nop
mov
jp
inc
mov
movsl
sbb
jge
icebp
cmpsl
jecxz
mov
push
inc
cmp
cmpsb
push
or
int
scas
xor
sbb
pop
xchg
daa
rcl
sub
icebp
mov
cmc
cmp
and
and
mov
mov
mov
sbb
mov
hlt
fwait
shrb
mov
push
into
not
or
xor
bound
ds
adc
cmpsl
cs
cwtl
dec
stos
fidivrs
testl
fwait
push
mov
scas
dec
jb
fnstsw
cmp
jecxz
add
jp
outsl
das
mov
mov
inc
inc
or
fldl
call
xchg
pop
cmc
adc
in
mov
icebp
pop
hlt
icebp
out
or
cltd
dec
jge
cs
push
mov
mov
mov
iret
cmp
jnp
sti
jmp
sbb
mov
test
test
addr16
mov
int
sbb
jp
mov
jge
aaa
gs
fwait
push
int3
sbb
mov
push
idivb
cmpsl
rcll
ljmp
adc
addr16
inc
in
xchg
sub
xchg
mov
and
scas
jp
xchg
cmp
mov
push
bound
inc
pop
sub
mov
sub
frstpm(287
mov
inc
mov
imul
imul
pop
je
pop
and
ss
mov
aam
push
call
xchg
out
es
loop
dec
pop
test
xor
xchg
icebp
ss
sarb
inc
gs
aaa
and
mov
jae
fnstcw
fisubs
mov
out
or
mov
or
or
std
out
fwait
xchg
mov
fstp
cmc
clc
add
mov
in
or
ret
mov
jle
ja
das
xchg
rcll
test
out
mov
shll
loope
loop
sbb
push
fwait
popf
xchg
jbe
pusha
cwtl
mov
xor
in
jne,pn
sub
pusha
shll
jmp
sub
push
dec
pop
scas
push
inc
fisubl
add
ret
popf
fsubrs
xor
push
rorl
jmp
jo
xchg
push
mov
sbb
aas
lods
testb
jmp
cmpsb
stc
out
jle
adc
subb
push
push
dec
cwtl
xor
push
or
jge
ret
into
xorb
jno
sbb
clc
aas
sub
imul
ret
fsts
iret
cmp
sub
pop
pop
sub
cmp
ljmp
ret
mov
pop
out
inc
or
pop
dec
sbb
lea
cmp
cmp
cwtl
mov
lds
mov
jno
lea
xor
outsb
out
mov
add
jle
sahf
adc
adc
add
mov
adc
inc
jmp
scas
sbb
mov
lret
sub
insl
dec
cwtl
test
clc
jnp
mov
stos
mov
xor
hlt
mov
and
test
push
dec
shr
mov
je
push
lds
popf
insl
jmp
dec
jg
ja
gs
pop
pop
add
sub
stos
jecxz
rol
mov
cmp
xlat
xorb
inc
push
dec
mov
int
xchg
adc
add
loopne
push
ret
loope
movsb
pop
scas
pop
cli
fwait
or
loopne
insb
adc
enter
jbe
cwtl
push
lods
add
push
pop
pop
nop
add
or
cmpsl
cmp
mov
cmc
xchg
and
lods
stos
pop
adc
out
xchg
testl
std
pop
mov
cmpsl
jge
jbe
test
cmpb
in
repnz
push
xchg
sub
dec
push
jae
xor
lods
sarb
inc
cmp
popf
mov
movsl
adc
push
lock
cwtl
outsb
xor
adc
push
sbbl
or
adc
mov
roll
test
das
icebp
xchg
dec
add
jecxz
pop
dec
xchg
jnp
jmp
jo
push
or
push
mov
and
negl
mov
pushf
ja
gs
orl
loop
iretw
sub
pop
mov
inc
sbb
add
pop
add
sbb
insb
add
inc
jge
adc
jnp
popa
stos
imul
js
mov
dec
jg
dec
stos
popw
lahf
xor
cmp
es
mov
outsl
or
cmp
mov
loopne
lret
push
jge
push
iret
mov
or
xor
add
or
jbe
add
addr16
popa
add
push
das
and
inc
inc
decl
and
fists
mov
mull
inc
jb
inc
add
cmpsl
xor
leave
pop
lret
jo
int
sti
movsl
gs
fistps
pushl
cmpsb
sub
lods
cmp
mov
dec
inc
cmp
ja
dec
ja
cltd
negl
test
pop
mov
lea
movsl
cmp
jbe
lods
das
sti
dec
dec
pop
popf
lret
dec
data16
jp
push
adc
cli
sub
int3
dec
negb
xor
mov
loop
imul
adc
and
xor
lds
movsl
ljmp
xchg
adc
pop
mov
pop
insl
arpl
jnp
loope
stos
aad
jg
shufps
cltd
ljmp
je
cmpl
inc
gs
xor
lods
mov
std
loopne
ss
dec
imul
sub
inc
cmpsl
jns
jp,pt
loopne
cmc
test
loopne
and
inc
and
xchg
rcrl
pop
call
ss
mov
cltd
cmp
lret
popf
lods
or
inc
std
fsubs
sub
scas
int3
add
ljmp
dec
sahf
arpl
add
jno
push
adcl
cltd
out
mov
sahf
lods
ja
aad
adc
fmul
test
mov
or
fninit
mov
pop
xor
repnz
jp
adc
imul
fisttps
mov
push
stc
ret
pop
jae
pop
mov
add
ja
ds
popa
insl
test
sub
dec
movsb
mov
or
std
iret
xlat
jae
cmp
or
daa
in
iret
adc
inc
pop
mov
popa
fnstcw
and
inc
insb
enter
mov
mov
pop
sbb
push
xor
xor
xor
cmp
xchg
or
sti
out
or
jp
xor
movsb
inc
pop
inc
cli
ficompl
fs
ljmp
sbb
xchg
scas
and
mov
push
in
sbb
mov
loopne
loope
aam
cmpsl
push
gs
int3
fdivs
addl
pop
and
sub
add
xchg
sahf
mov
or
xchg
test
decl
inc
es
push
and
lahf
or
dec
ror
lods
mov
xor
imul
inc
or
sub
mov
inc
loop
xchg
dec
cmp
aaa
add
dec
ret
jo
aaa
mov
int
fcoms
les
loopne
mov
push
nop
rclb
xor
sub
pop
aad
jecxz
gs
or
pop
data16
jle
imul
inc
out
mov
mov
pop
sahf
scas
xor
xlat
pop
in
sub
sub
loop
dec
mov
or
movsb
jecxz
inc
fwait
cmp
push
imul
xchg
fmull
mov
dec
pop
sub
int3
ljmp
out
and
pop
jo
mov
push
divb
out
dec
dec
cwtl
mov
inc
scas
fsts
mov
xchg
testb
mov
pop
gs
pop
pop
xor
popa
test
push
cmc
roll
or
test
nop
xchg
jle
aad
push
mov
mov
pop
mov
adc
pop
call
push
arpl
roll
xor
out
xor
xchg
ja
shll
out
test
push
les
mov
ja
cmp
jecxz
test
xor
mov
mov
ficoms
adc
sahf
xchg
cmpsb
popf
lahf
mov
mov
and
adc
add
push
rolb
call
mov
pop
loope
popa
imul
fisubs
aam
out
shr
je
movsl
dec
sub
pop
out
test
push
lret
test
inc
cli
das
movsb
mov
add
sbb
pop
clc
mov
push
xor
mov
clc
sarl
insl
aad
sbb
push
fnstsw
sbb
stos
enter
pavgw
andl
sub
pop
mov
lahf
add
cmp
dec
popf
push
mov
pop
loop
jmp
mov
or
xchg
shlb
test
cmp
popf
pop
mov
lock
and
clc
addr16
loope
lahf
test
int
cmp
mov
rorb
int3
lret
data16
loope
mov
pop
fidivrl
leave
inc
dec
jne
xchg
mov
inc
hlt
rcll
cs
fdivr
jle
outsb
dec
push
int
fiaddl
in
mov
imul
arpl
jp
mov
or
aad
jnp
pop
jg
pop
push
jmp
fdivrs
push
pop
dec
dec
cmc
cmpsb
lcall
sub
lret
aad
int3
jl
push
inc
je
or
flds
cltd
sbb
leave
add
repz
arpl
push
scas
pop
sahf
mov
neg
dec
out
in
cmp
inc
add
jmp
mov
fcomps
dec
scas
fadd
dec
sbb
fildll
iret
jmp
outsl
push
mov
je
sbbl
pop
int3
sub
push
add
je
fdivs
hlt
xchg
in
nop
je
mov
or
cli
mov
sbb
cmp
xchg
inc
mov
das
jns
cmp
sbb
aad
and
ja
addr16
es
sub
xchg
pop
adc
xchg
cmp
stc
sbb
fisttpll
mov
and
orb
ja
push
leave
mov
jg
sbb
inc
and
ss
cwtl
aaa
dec
nop
es
loop
add
cmp
pop
dec
sbb
or
jp
shll
push
loop
addr16
out
loop
cs
push
or
enter
pusha
out
clc
jmp
rcrb
test
adc
out
jmp
pusha
lret
and
cmc
sub
pop
xchg
jecxz
fsubrl
dec
or
add
push
js
inc
sub
mulb
push
les
insl
and
add
in
pop
mov
in
int3
and
push
shll
lds
xchg
dec
ror
mov
push
mov
sbb
dec
mov
rorl
and
cmp
das
inc
nop
adc
push
fdivrs
xchg
dec
popf
mov
xchg
orps
jle
pop
repz
je
aam
mov
dec
mov
insl
sub
into
and
stos
pop
iret
xchg
pop
shl
push
lea
int
jnp
xchg
loop
leave
mov
add
test
mov
adc
pop
xor
mov
pop
das
pop
pop
nop
out
inc
adc
or
addr16
inc
push
cmp
pop
fcompl
mov
pop
dec
mov
inc
mov
jo
popa
mov
mov
loopne
es
pop
and
xchg
xor
jo
add
jne
jns
shll
cli
imul
imul
mov
cmp
jmp
push
fs
xor
ret
enter
andl
cmp
lea
ljmp
sub
mov
inc
jae
jl
mov
pusha
push
mov
add
fwait
dec
pusha
and
or
push
xchg
inc
xchg
pop
cli
pop
mov
lahf
cmc
mov
aad
popa
mov
loop
mov
out
lea
std
mov
inc
push
pop
cmpb
mov
cs
leave
lds
jmp
jnp
pop
and
jne
cmpsl
ficompl
xor
cltd
push
fdivl
scas
mov
test
inc
mov
imul
sbb
sarl
je
cltd
mov
aam
out
pop
pop
mov
sar
jne
out
and
mov
std
out
adc
pop
mov
pop
mov
lahf
mov
inc
or
dec
jns
mov
xchg
cmp
mov
pop
je
call
lret
mov
add
stos
movsb
xchg
xor
test
mov
rcr
add
loope
mov
cmp
lahf
and
xchg
mov
scas
ror
push
xor
hlt
imul
rol
aas
adc
lea
fnstsw
out
sbb
cmp
test
cmp
popf
js
mov
adc
fs
in
scas
sub
sub
cltd
aad
out
jnp
mov
sbb
xchg
sbb
pop
ret
arpl
addr16
nop
push
test
xorl
clc
push
cmpsl
push
add
push
rorb
xorb
xchg
int3
data16
jns
notb
jmp
pop
divl
data16
out
push
push
pusha
in
dec
rcrb
cli
adc
ja
pop
or
sub
xchg
loope
out
lock
ficoml
popa
out
data16
sti
or
repnz
mov
mov
push
pop
pop
xor
and
add
testl
lock
icebp
fadd
fidivs
outsl
mov
adc
adcl
push
xlat
jb
iret
adc
mov
insl
cmp
dec
inc
inc
imul
aad
xor
fimull
mov
mov
pop
fs
mov
dec
and
push
push
xchg
in
dec
jecxz
push
jne
fwait
xor
and
mov
sahf
jg
inc
test
push
xchg
divl
inc
cmp
imul
iret
imul
stc
sub
ja
adcb
mov
pop
cs
jno
xor
mov
loop
mov
enter
or
lea
lods
jecxz
mov
les
into
push
shrb
outsl
cwtl
cli
outsl
ret
mov
lret
push
rclb
dec
jmp
hlt
inc
or
and
pusha
loopne
push
ljmp
xor
push
jp
cld
pop
ret
xchg
pop
aas
es
adc
mov
sti
xor
in
pop
push
xchg
outsb
mov
push
cmp
hlt
jbe
dec
pop
adc
cmc
shll
or
daa
cli
add
rcrb
xor
inc
mov
add
xchg
test
stos
jmp
sahf
ret
or
mov
xchg
rorb
push
mov
cwtl
mov
xchg
stc
sub
jecxz
adcl
mov
adc
or
or
mov
aas
lds
xor
out
add
cld
fwait
negb
sbb
xor
sub
push
push
enter
stos
push
shrb
mov
lods
fldl
add
mov
sbb
out
cmpsl
clc
mov
xlat
jo
mov
daa
movsl
dec
sub
icebp
in
inc
aas
leave
add
lret
jp
mov
mov
fs
xor
pusha
xchg
subb
xor
cmp
jmp
or
and
aam
lock
sti
push
mov
sbb
fnstsw
movsl
repnz
adc
xchg
pop
out
jo
lods
in
add
mov
pushf
cmp
cltd
jo
fisubrs
in
mov
test
sub
cmp
arpl
sti
xchg
js
adc
outsl
sbb
xchg
fidivrs
push
in
gs
xor
xorb
push
jge
mov
xchg
stos
xchg
xor
jecxz
xor
xchg
or
cltd
or
or
mov
int3
pop
pop
jmp
rorb
push
mov
fcomps
jmp
out
loope
adc
mov
mov
call
leave
aam
push
jmp
push
lret
insl
xchg
or
or
ficoml
push
pop
jnp
cmp
adc
or
xchg
sub
dec
lahf
add
js
leave
mov
cs
inc
fstp
in
push
sbb
retw
rcl
sub
movsl
adc
outsl
or
outsb
inc
xchg
jnp
pop
pop
test
loopne
fwait
pop
das
mov
xor
sub
adc
adc
cmp
scas
cltd
hlt
movsb
shl
loop
mov
cmp
test
pop
jnp
nop
dec
aas
test
and
js
mov
push
push
mov
imulb
imul
lods
imul
sbb
les
lods
addb
fistps
pop
in
ret
jb
xor
mov
ret
pop
cli
xchg
imulb
test
xlat
pop
nop
mov
or
xor
rorb
inc
xor
and
enter
int3
jge
cs
out
outsl
sti
mov
ss
jae
pop
adc
inc
and
cmp
mov
in
loop
scas
into
cwtl
loop
jmp
pop
sbb
pop
pop
xchg
mov
push
jmp
fucompp
js
or
imulb
sub
test
jg
push
dec
inc
xor
or
sahf
adc
mov
in
js
jg
test
div
pop
xor
cmpsb
das
mov
mov
adc
inc
pop
pop
addb
stos
out
imul
dec
inc
push
cmp
lcall
mov
and
imul
lahf
lods
pop
shlb
sub
pushf
sbb
pop
hlt
bnd
cmpsb
mov
js
arpl
push
or
das
pop
cmpsb
inc
test
mov
adc
ljmp
inc
movzbl
loopne
arpl
aam
mov
sbb
test
in
xchg
std
mov
xor
jg
add
inc
cli
test
xchg
sbb
mov
cmp
xchg
pop
dec
mov
jecxz
xchg
xchg
fstps
add
cmp
out
cmp
mov
push
lds
mov
fdivrs
and
xorl
jae
out
ljmp
add
std
add
je
cld
psrad
pop
mov
lods
dec
adc
pop
sbb
daa
mov
dec
mov
orl
mov
inc
mov
data16
arpl
pushf
out
xchg
imul
enter
dec
arpl
mov
repz
dec
add
sub
push
push
xchg
lcall
repz
xchg
push
in
cmpsl
lods
jge
dec
bound
out
add
push
bts
pop
sbb
movsl
fs
out
push
ffreep
jae
push
cs
mov
sbb
cltd
and
and
inc
inc
inc
aas
pop
and
repnz
fsts
dec
mov
mov
sub
aad
ja
cmp
call
sahf
movsb
arpl
fmull
push
mov
cmpsb
pop
push
cmp
jae
inc
dec
push
or
stos
aad
jns
pop
push
test
push
fistps
shlb
and
test
mov
faddl
add
popf
out
ds
pop
dec
mov
xor
daa
daa
repnz
aaa
sbb
int
jnp
dec
pop
out
lods
pusha
xor
pushf
xchg
adc
pop
jmp
fistps
mov
adc
or
outsb
xchg
sub
xor
push
cmp
sbb
pop
scas
popa
imul
mov
lock
arpl
push
lods
and
xor
xor
fistpl
pop
sbb
sub
fwait
or
lret
push
dec
push
imul
xchg
mov
std
cmp
mov
cmpsl
add
sbb
jo
mov
clc
xchg
rorb
cmp
xlat
xor
add
jae
push
cmp
add
cmp
jg
lret
and
loop
insb
stc
push
push
or
xor
cmp
andnps
push
or
lock
xlat
in
push
cli
inc
fwait
jp
adc
clc
out
mov
or
inc
popl
xchg
enter
sahf
fadds
sti
test
pop
sub
add
cmpsb
cltd
in
sbb
cmpsb
into
rclb
in
add
ret
adc
inc
jae
add
clc
movsl
ret
add
cmp
mov
or
das
sbb
adc
stc
lods
xor
pop
inc
adc
repnz
sub
xor
xchg
dec
sub
or
sub
jg
pop
scas
addr16
sub
and
jbe
out
notl
nop
xchg
adc
jns
mov
and
jo
mov
sub
movsb
push
pushf
data16
stos
out
incl
sub
push
mov
mov
jmp
mov
leave
pushf
dec
into
in
jle
push
imul
stc
scas
push
insb
xchg
dec
sub
push
fisubrl
fdiv
cld
jp
repnz
inc
divb
adc
mov
ja
push
jae
icebp
jmp
lahf
stc
addr16
repnz
fwait
jo
mov
outsb
es
jp
icebp
lea
into
jnp
ret
jge
xor
cli
mov
mov
xchg
pop
push
mov
repz
jno
xchg
push
jb
ds
and
cmp
outsl
push
in
icebp
ret
mov
insl
mov
cmp
movsb
jbe
pop
jg
or
xchg
push
adc
add
gs
push
out
and
cmp
mov
stc
pavgw
mull
adc
shl
push
leave
and
cmp
push
mov
cwtl
sbb
sbb
xor
xchg
pushf
inc
scas
sbbb
pop
mov
mov
dec
sbb
sbb
rol
in
jg
testb
dec
mov
ljmp
test
mov
and
cltd
pop
ficompl
inc
pop
sub
xor
insb
jg
add
and
push
xchg
jnp
mov
fldcw
outsl
test
lea
arpl
push
loopne
fsubrs
pop
pop
rorb
mov
call
popf
and
lcall
mov
call
rorb
std
fistl
test
cmp
mov
call
push
enter
movb
xchg
add
pop
dec
out
mov
mov
rol
mov
fidivrs
insl
sbb
scas
aam
test
inc
imul
xchg
sbb
pop
mov
fisubrl
mov
enter
sub
jge
sbb
icebp
pop
xorl
das
push
jge
dec
fs
dec
sbb
push
cli
mov
and
cmp
sub
and
dec
lds
push
hlt
cmpsl
into
cmpsb
push
lea
insb
and
fdecstp
pusha
mov
push
xchg
icebp
xchg
in
ljmp
ljmp
mov
mov
mov
mov
cltd
push
dec
std
jle
adc
gs
cmp
dec
sub
repnz
into
addr16
inc
adc
pop
loopne
xchg
push
mov
loopne
cmp
dec
push
sarb
sbb
cmp
imul
arpl
lea
int3
and
data16
fucomi
pop
in
lds
inc
out
fcoml
ror
es
mulb
imul
imul
inc
ret
fiaddl
inc
push
push
mov
cmpsb
stc
pop
jns
lret
mov
or
jmp
mov
adcb
outsb
fsubrs
rcpps
repz
mov
inc
adc
push
push
and
xor
cmpsl
lock
inc
inc
adc
ret
aam
insl
sbb
ss
jmp
sahf
xor
loope
out
sbb
pop
lods
mov
lods
mov
jge
pop
mov
scas
mov
out
test
or
es
dec
loop
mov
pop
xlat
lcall
ret
rep
fbstp
or
adc
test
xchg
clc
loopne
cmp
mov
pop
loope
in
mov
test
cmp
je
xchg
add
jne
or
stc
movsl
pop
push
es
out
jp
lahf
cmp
test
cmp
cmpsl
sbb
cmpsl
outsb
sbb
xor
jecxz
fwait
iret
push
dec
mov
push
adc
mov
ja
and
xor
mov
mov
push
rorl
sbb
ret
notb
xchg
imul
xchg
adcl
lock
pushf
sar
scas
negb
mov
xor
lcall
add
dec
jnp
mov
aad
pop
outsb
jnp
fcompl
xor
xlat
cmpb
iret
rol
xchg
lret
jb
movb
ss
sti
negb
inc
pop
pop
mov
mov
pop
cli
mov
subl
leave
or
shrl
stos
pop
pushf
std
xlat
mov
add
jmp
mov
pop
mov
repnz
xchg
xchg
arpl
inc
mov
cmpl
ljmp
fimuls
fldenv
sbb
cmp
cmp
fimuls
mov
outsl
or
pushf
in
mov
sbbb
cwtl
out
xor
mov
js
sarb
or
or
xor
addl
pop
mov
pushf
scas
ljmp
outsl
pop
adc
xchg
mov
iret
dec
mov
mov
xchg
js
xchg
fldcw
in
frstor
mov
in
out
int
xlat
jb
adc
push
adc
cmp
mov
mov
fbld
pop
loop
and
or
jmp
fidivs
lods
push
ss
cld
testb
in
add
cmp
je
mov
popa
push
mov
ret
sbb
std
push
inc
fdiv
je
popf
jbe
push
scas
je
idivb
cmp
dec
cmp
pop
std
test
push
jbe
std
sbb
add
push
and
xchg
js
das
lret
mov
ja
push
push
pusha
es
xchg
div
xor
dec
out
and
dec
mov
mov
dec
and
pop
xchg
pop
sbb
mov
call
xchg
xor
add
imul
mov
fs
data16
or
dec
fwait
add
imul
lock
sahf
sbb
nopl
fcomps
ljmp
jno
dec
mov
clc
ficoms
jl
shrb
dec
sarl
sbb
out
cvttps2pi
lret
inc
shll
stos
aaa
outsb
inc
mov
jne
sti
mov
push
cmp
cmp
into
sti
sbb
mov
ljmp
in
jmp
sbb
adc
fdivs
mov
push
mov
pop
lods
mov
mov
dec
or
orb
jmp
dec
cmp
hlt
xor
jg
aad
sub
mov
stc
xor
pop
push
in
inc
into
fisubrs
push
push
data16
test
pop
xchg
lcall
or
and
lods
cmp
xor
fdivp
jge
movsb
inc
xchg
hlt
ja
push
movsb
incb
in
nop
sub
adc
xchg
vpsubusb
jb
or
xchg
push
outsl
nop
and
dec
push
cmp
insb
jg
lods
sarb
dec
cmc
cmp
push
fucomp
jecxz
movb
sbb
call
jb
aaa
ljmp
fimull
or
cli
fldl
imul
movsb
sub
outsb
and
lods
aas
hlt
popa
lock
test
sub
or
dec
sub
push
xchg
outsl
cltd
xchg
add
sbb
or
sub
ss
js
in
sub
jbe
jl,pn
dec
mov
cmc
hlt
sahf
mov
lcall
scas
daa
add
cmp
add
push
push
lret
sub
pop
xor
popa
adc
loope
mov
jno
icebp
test
xchg
dec
js
and
mov
sbb
cmp
in
add
sbb
mov
in
das
mov
and
sahf
lea
cmpsb
call
cmp
cmp
adc
ja
or
and
xchg
jae
sahf
mov
and
adc
cmp
adc
daa
sbb
rorb
cmp
pop
mov
adc
jg
fisttpll
loopne
pop
fists
cs
les
mov
call
mov
mov
pop
add
imulb
sub
inc
jmp
push
xchg
add
fsubrl
into
cli
pop
cs
fisubs
or
add
out
mov
fdivl
test
cmp
addr16
adc
dec
fs
outsl
pop
aas
mov
pushf
xchg
addr16
pop
dec
xlat
ljmp
jg
bound
sahf
cs
push
mov
and
or
sbb
xchg
divl
jae,pt
fwait
scas
inc
jg
popa
xchg
mov
inc
push
or
scas
add
xorl
psubw
push
push
movsb
push
mov
jg
mov
adc
ret
inc
mov
bnd
into
mov
push
outsl
leave
or
cmp
cmc
push
pop
cmp
adc
mov
xlat
aad
sahf
add
jl
outsl
dec
rolb
sub
roll
imul
cmp
xor
out
out
sbbb
jmp
sbb
in
lock
dec
xor
pushf
sub
xor
inc
mov
lea
adc
cmp
jl
pushf
push
mov
xor
jno
pop
pop
cmc
pop
fwait
or
loopne
icebp
movsl
mov
xchg
mov
pop
daa
repnz
jecxz
mov
fisubrs
ja
mov
jbe
lds
fwait
lea
add
dec
or
jecxz
inc
sbb
fisubs
cmc
lahf
push
ja
pop
or
or
jb
xor
push
add
sbb
arpl
popf
int3
pushf
rcr
jb
push
cmpsb
jno
shrl
adc
dec
and
mov
sub
outsb
xchg
pusha
cli
and
xchg
jmp
jl
and
xchg
mov
imul
test
cmp
mov
mov
sbb
ljmp
rol
inc
clc
mov
sub
pop
or
mov
adc
adc
mov
pop
mov
loop
sbb
push
rcrl
and
or
or
aad
pop
mov
mov
jnp
sub
jne
xor
mov
mull
mov
cmp
loop
dec
adc
stc
inc
adc
mov
int
fcompl
loopne
ret
das
cmpb
out
sbb
sarb
pop
loope
lret
inc
call
incb
mov
sbb
push
sbb
xor
outsl
sub
fwait
jge
shrb
inc
sbb
pop
add
arpl
fdivl
dec
sub
lock
aas
mov
ss
repnz
cld
lcall
or
and
add
push
xor
ret
and
mov
jp
push
pop
out
dec
jne
push
bound
les
inc
inc
imul
mov
mov
inc
jbe
lahf
cwtl
lahf
out
hlt
inc
mov
decl
cmp
cmp
adc
int
daa
testb
or
icebp
cwtl
scas
jmp
push
jmp
dec
mov
xlat
int
stos
mov
inc
cmpsb
lods
ret
sbb
insb
fistps
ljmp
mov
mov
hlt
enter
cmpsb
jbe
push
jne
xchg
fiadds
filds
pop
scas
and
push
inc
adc
cmp
or
imul
scas
mov
enter
mov
push
icebp
repnz
push
dec
jns
xchg
pop
lea
call
cli
jmp
cmp
icebp
enter
rclb
push
cld
xchg
mov
ret
mov
mov
in
in
in
daa
test
sub
rcr
push
aas
std
js
outsb
cmp
xchg
mov
fdivrs
xchg
mov
cwtl
dec
shll
pop
mov
and
xor
pushf
call
fcoms
scas
callw
jne
pop
lock
outsb
sarb
jle
hlt
mov
movsb
int3
inc
sbb
push
sbb
negl
mov
sub
pop
inc
adc
js
inc
push
and
fimull
int
push
ret
divl
out
jnp
out
popa
jo
clc
or
xorl
aas
insb
xchg
dec
xchg
xor
add
test
sub
dec
fwait
add
adc
scas
dec
xchg
cmp
and
cmpsb
push
leave
xchg
std
into
repz
mov
or
adc
addps
fistl
imul
shlb
cmp
repz
sbb
cmp
ja
pop
xor
lea
fmul
push
dec
jmp
fs
xor
adc
lret
mov
rcll
mov
mov
fidivs
shrl
mov
lods
not
push
push
clc
inc
cmp
popf
cmpsl
xchg
pop
xchg
scas
loopne
dec
push
int
xor
test
lods
adc
aam
xchg
ret
rcrl
inc
cmc
xchg
xchg
int
sbb
lods
inc
cs
sbb
push
scas
or
mov
out
fists
xchg
lret
mov
push
ds
inc
xchg
sahf
aam
mov
jl
test
inc
ret
sarb
popf
add
pop
cmp
test
mov
popa
jb
test
xchg
fs
push
sbb
icebp
lock
cwtl
imul
jb
clc
cld
push
sbb
orl
lods
insb
or
add
sub
hlt
jnp
xchg
jbe
cmpsl
movsb
sub
adc
mov
add
push
popf
dec
sub
cmpsl
das
aaa
jno
xlat
xchg
cmp
mull
push
jb
inc
push
shll
sahf
adc
push
repz
stc
stos
arpl
cmp
jb
xchg
or
dec
add
dec
inc
ficompl
sbb
pusha
cmp
add
ds
pop
or
daa
jb
xor
sub
sub
push
ret
jbe
das
std
mov
add
jmp
xor
stos
jmp
das
rol
in
sbb
jl
das
rcrl
test
sub
cmp
out
sbb
nop
loopne
fwait
in
push
lods
mov
pop
inc
orb
mov
data16
pop
aam
in
sub
mov
aas
fildll
jecxz
add
inc
cmp
mov
jmp
adc
and
repnz
aam
lret
lods
mov
xor
int
mov
xor
dec
outsl
out
push
mov
xor
sbb
dec
inc
loop
hlt
jnp
mov
les
les
vmovupd
cmp
sub
jg
add
or
push
adc
xchg
iret
sub
test
shlb
lret
mov
xor
jae
pushf
cmc
or
pop
inc
xchg
add
push
stos
sub
mov
rcr
mov
mov
stc
ja
ss
testb
xor
jmp
pop
in
inc
rcrb
sti
cmp
jnp
mov
cltd
sub
shll
stos
dec
je
push
push
ret
test
and
ja
dec
mov
decl
pop
fidivs
pop
cltd
or
xchg
pop
dec
out
sub
sub
aas
incb
mov
int
push
mov
add
repz
lods
pop
movsl
ljmp
pop
mov
or
icebp
push
sbb
call
outsl
mov
xchg
jecxz
sub
pop
in
push
andl
jle
jl
push
addl
insl
jnp
gs
fmull
mov
mov
sbb
sbb
and
xor
xchg
dec
int
lods
dec
xchg
mov
mov
sub
cmp
cmpsl
adc
divb
or
stos
dec
and
shll
sub
sbb
in
frstor
test
jmp
xchg
fidivs
mov
leave
in
insb
hlt
cmp
push
cwtl
and
push
dec
lock
popf
mov
daa
movsb
or
jns
mov
xchg
dec
mov
jo,pt
pop
jb
loopne
rclb
adc
adcb
js
push
push
shll
popl
outsl
jmp
testb
arpl
dec
clc
xor
and
sbb
ret
add
dec
push
pop
xor
popa
pop
pop
enter
or
mov
dec
cltd
sub
xchg
push
aaa
cld
mov
mov
add
dec
ja
fdivl
mov
shll
inc
scas
repz
mov
outsb
lcall
add
sbb
add
adc
mov
popf
sti
ljmp
fwait
mov
cwtl
inc
mov
or
sbb
scas
cmpsb
pop
mov
sbb
mov
flds
mov
xchg
or
cwtl
jle
inc
mov
pushl
xor
mov
or
and
das
js
imul
sub
or
leave
push
bound
scas
sbb
mov
and
mov
jb
daa
out
jg
mov
or
add
out
imul
push
std
adc
cmc
push
mov
incb
repz
cmc
dec
pusha
dec
jecxz
in
add
lcall
or
jo
icebp
xor
add
fistpll
mov
xor
jp
sub
cmp
cmp
mov
into
xlat
or
rcl
sbb
xchg
inc
popf
scas
cwtl
jbe
adc
jge
iret
popf
ret
nop
xchg
test
sti
xor
jg
mov
fldenv
in
jle
or
jno
fidivrs
and
mov
cmpsl
ret
xor
daa
push
jge
cmp
push
andl
mov
adc
adc
pop
cli
cmp
xor
test
dec
dec
xchg
or
rolb
dec
xor
xchg
repnz
repz
push
xchg
dec
fsts
or
pop
push
pushf
les
fcmove
or
jbe
test
outsb
dec
mov
out
fs
in
xchg
cmpsb
push
bnd
scas
stos
mov
rcrl
and
mov
mov
xchg
sbbb
clc
mov
cli
jno
push
sti
lret
dec
in
divb
inc
add
data16
jo
test
dec
test
pop
aam
sti
sbb
in
orb
pop
inc
loopne
push
and
pop
sti
cmpsl
sub
aaa
xchg
jecxz
mov
imul
cld
nop
xchg
je
mov
inc
lods
lock
dec
insl
insl
mov
xchg
adc
push
insl
insb
fs
cmpl
dec
cmp
dec
out
or
jne
pop
stos
cmpsb
xor
std
lret
lds
inc
movsl
add
xor
dec
or
jns
xor
xor
mov
xor
in
mov
mov
sub
test
pop
mov
fmul
mov
stc
pop
mov
movsl
outsl
xchg
dec
js
fmuls
push
sub
push
enter
testl
lahf
xlat
testl
lds
push
inc
dec
and
mov
pop
or
dec
pop
ret
jl
push
flds
test
pop
mov
add
in
pop
and
mov
mov
in
gs
inc
movsl
jmp
or
fldl
mov
fs
addr16
testw
adc
add
pop
into
mov
loop
cli
adc
mov
push
adc
push
shrb
push
mov
fldt
pushf
push
pop
push
cmp
cld
jg
cmc
push
jge
pop
test
adc
adc
mov
popf
in
pop
orb
imul
prefetcht2
scas
mov
add
inc
mov
and
xchg
xor
inc
ja
lret
pop
or
or
packsswb
stos
orb
inc
or
or
adc
sahf
lea
gs
adc
adc
in
mov
xchg
xchg
movsl
jp
cs
mov
loop
in
sub
sub
jns
clc
lea
add
fs
arpl
or
and
inc
scas
test
push
cmp
adc
and
paddq
cmc
pop
adc
jbe
or
push
pop
or
or
jg
fsubrl
stc
cmp
sub
nop
aam
stos
jge
or
sahf
aad
call
movsb
call
push
inc
notb
sbb
inc
xor
or
xor
bound
cmp
pop
jo
adc
in
fucomi
add
sarb
inc
inc
sbb
sub
sub
sub
in
mov
pop
inc
cmp
adc
cmp
adc
mov
push
das
mov
test
and
mov
push
inc
ret
jb
popf
push
jl
icebp
xor
lret
push
or
fisubs
aam
push
xor
sub
sbb
faddl
jne
mov
fcompl
stos
cmp
mov
lea
iret
aad
cmpsb
jle
out
fldcw
push
jae
fiadds
sarb
call
fs
inc
es
sub
and
add
sbb
je
repz
add
pop
into
jb
test
inc
push
jne
stc
pop
fldl
and
das
stos
hlt
cld
enter
mov
jg
xlat
lock
mov
stos
mov
push
jp
and
or
popa
test
push
jp
sub
inc
add
or
ljmp
cli
sahf
inc
rcrl
jp,pn
movb
ret
push
lock
and
or
fisubrs
inc
dec
inc
mov
jno
xchg
ret
scas
mov
pop
mov
movsl
dec
loopne
inc
lea
and
or
aaa
clc
mov
arpl
adcb
jg
cmp
mov
sbb
stc
xor
or
pop
movsl
mov
xchg
mov
je
loopne
les
push
setns
mov
out
dec
lcall
imul
sahf
lahf
shrl
or
jp
fmuls
movsl
mov
inc
test
mov
fcomip
scas
xchg
ror
ljmp
xchg
xchg
adc
test
out
test
ret
dec
mov
in
clc
xor
cltd
adc
jbe
push
sub
sub
cmpsl
sbb
rcl
mov
sbb
push
and
inc
mov
pop
insl
rol
xchg
xor
xorl
cli
mov
shll
push
nop
xor
shl
fisubrs
jmp
pop
or
das
sub
dec
dec
movsl
inc
mov
sbb
das
jnp
pop
das
pop
mov
mov
lods
add
icebp
adc
and
mov
xor
add
dec
div
aaa
push
std
jne
inc
outsl
sbb
roll
outsb
cwtl
xor
psllw
push
daa
repnz
mov
add
inc
xchg
sub
or
push
xchg
nop
jmp
jmp
push
clc
aas
add
mov
hlt
insb
xchg
jo
scas
das
pop
mov
stc
test
dec
mov
xor
add
cmp
adc
imul
jbe
sbb
pop
ljmp
add
mov
and
popa
xor
or
xchg
arpl
clc
mov
hlt
mov
pop
test
xor
xlat
fldt
xchg
repnz
add
mov
push
jno
adc
das
add
push
add
push
movb
das
pushf
sub
flds
cltd
push
pushf
imul
repz
cmp
lcall
jo
pop
lods
adc
bound
fwait
push
jo
lock
aad
add
imul
jecxz
ds
testb
xor
scas
pushf
jbe
outsl
sarl
rolb
fucom
xor
std
cmp
jle
xchg
inc
bswap
popf
out
adc
lcall
test
xchg
or
iret
jmp
aam
ret
das
push
cmpsl
inc
xchg
mov
xchg
aaa
ficoms
lods
pop
daa
xorl
sbb
std
push
cli
jp
adc
pushf
jno
sub
push
sub
mov
js
inc
or
notb
cmp
mov
imul
or
mov
mov
pop
nop
and
adc
sub
mov
or
or
push
push
hlt
ficompl
cs
sbb
push
lods
aad
sub
xchg
jp
pushf
push
cwtl
lret
stos
and
cmp
cmc
aas
andb
ja
mov
fcmovu
mov
sub
mov
pop
cmp
cwtl
cld
mov
jmp
lock
xor
or
pop
add
jmp
adc
daa
test
push
stc
arpl
sub
arpl
mov
loopne
ja
sub
push
loopne
outsl
pop
or
jnp
in
adc
jb
inc
into
lcall
jmp
insl
mov
fcoms
mov
scas
add
dec
testl
ds
lea
shll
cmp
jmp
sahf
lock
fwait
push
adc
negb
push
gs
insl
push
stc
mov
or
push
cli
loopne
inc
lret
mov
out
div
aaa
aaa
aas
xchg
push
add
mov
dec
jno
inc
jb
mul
loope
int3
and
in
cmpsb
jmp
enter
sbb
xchg
nop
mov
int3
dec
in
cmp
mov
pusha
or
fnstenv
pop
and
in
subl
lods
mov
mov
cmp
cmpsb
sub
inc
mov
js
sbb
out
pop
sub
outsl
mov
fadds
sub
cltd
insb
cmp
xchg
je
jmp
jno
decl
rolb
mov
stos
xchg
add
in
aas
into
fcomp
mov
sub
push
pushf
lds
test
add
mov
dec
pop
jne
sbb
inc
gs
xchg
cmpsl
fs
in
add
pop
stos
cmpsb
push
mov
in
stc
jle
jecxz
xchg
push
mov
cmc
lcall
stc
push
arpl
lcall
mov
inc
cld
fstps
add
insl
insl
mov
jno
add
push
inc
add
xor
pop
enter
xchg
pusha
pop
dec
cli
jnp
cs
lods
pop
xor
push
add
cmpsb
jno
add
cmp
test
sti
call
jno
stos
inc
cmpsb
outsl
mov
mov
arpl
mov
negb
xor
out
sbbb
in
pop
leave
mov
xchg
sarl
enter
subl
inc
sbbl
mov
cmp
mov
jmp
loopne
ret
enter
xchg
and
aad
lods
inc
gs
jnp
cmp
subb
mov
mov
cs
fisttps
cli
mov
xchg
das
lret
jle
lock
out
cmp
adc
scas
jnp
daa
aas
add
in
lds
jecxz
nop
rcrb
lea
pop
or
sarb
dec
mov
cmp
pop
sub
repnz
pop
dec
aam
mov
xchg
scas
stos
test
shll
cmp
sti
fwait
aam
push
inc
imul
xchg
insb
and
mov
push
mov
outsl
cmp
cs
pop
rcl
sub
adc
out
fs
add
cmp
sbbl
xor
lret
dec
insb
loope
incb
jns
lahf
cmp
stc
xor
outsb
loop
or
in
jl
data16
stos
push
xor
inc
push
mov
test
bswap
sbb
test
je
inc
add
lock
sub
sub
dec
loop
adc
pop
and
sarb
lock
lret
or
jmp
push
adc
cmp
lock
pop
gs
jnp
outsb
fldt
xchg
cmpsl
popa
mov
mov
inc
jg
dec
push
rorl
adc
or
fcoms
xor
hlt
adc
subb
sub
mov
xchg
inc
sub
loop
cltd
pop
daa
nop
mov
jle
mov
popf
or
or
xchg
aas
or
and
fdiv
mov
out
xchg
xchg
daa
fcoms
filds
rorl
push
mov
test
insb
xchg
push
test
xchg
mov
adc
out
repnz
sti
fmul
add
pop
fadd
mov
push
or
pop
cwtl
insl
sbb
stc
inc
fnstsw
fcmovb
sbb
leave
dec
cmpb
sub
cmp
sub
loop
daa
sub
out
arpl
inc
jge
inc
mov
add
pop
les
fwait
add
push
jne
push
aad
mov
call
out
cmc
cmc
cmc
push
mov
ljmp
jmp
and
push
mov
into
ljmpw
fidivrl
push
pop
pusha
incl
test
aas
jbe
jb
adc
ret
lea
xchg
mov
in
xchg
adc
jns
ds
mov
inc
call
mov
xchg
add
mov
cmpsl
pop
jnp
push
cmpsl
mov
insl
pusha
xchg
mov
sbb
data16
imul
cs
addr16
not
dec
les
pop
fsubrs
cmp
xchg
cmpsb
and
jnp
loopne
mov
sub
mov
push
fwait
leave
xor
movsb
lea
std
loop
mov
xchg
xchg
jae
add
push
mov
in
sbb
pop
xor
and
stc
ljmp
push
sarb
cmp
mov
pop
int3
in
pop
movsl
cli
ret
inc
mov
mov
sbb
push
shrl
xor
pushf
pusha
dec
xlat
push
mov
arpl
cltd
or
loop
scas
in
sub
and
fdivrs
xor
cmp
xchg
mov
and
xor
aad
ja
fildll
jae
sbb
stos
out
mov
push
xlat
pop
inc
pop
and
mov
sub
cmp
outsl
add
data16
inc
xor
mov
test
cmp
xchg
mov
pushf
adc
dec
adc
scas
sbb
inc
and
rcr
cmp
xchg
jmp
push
popf
data16
pop
xchg
xor
ret
mov
fildl
pop
dec
lret
lock
jo
mov
push
inc
xor
add
push
add
push
cmp
movsl
inc
jl
mov
imul
xchg
inc
jae
mov
mov
in
sbbl
cli
adc
mov
cmp
adc
movsl
xor
addb
in
add
sub
mov
popl
mov
push
ja
sbb
add
js
shrb
clc
or
aas
jmp
mov
fldl
fbld
les
stos
hlt
xor
cli
dec
mov
sbb
adc
adc
lret
add
ja
hlt
sbb
test
mov
mov
stos
data16
popf
sub
adc
dec
mov
out
mov
clc
cmp
jnp
mov
scas
inc
pop
sub
pop
test
shll
das
sbb
push
in
or
cmpsb
pop
dec
mov
xchg
or
scas
fwait
sbb
jecxz
push
jb
fistpll
loope
sub
push
pop
loope
jle
pushf
mull
cld
xchg
and
dec
icebp
push
fs
cli
movsl
bsf
jmp
or
inc
aam
loop
xchg
pop
hlt
xchg
jno
fistl
int3
mov
imul
or
aas
push
cmp
push
xor
lret
sub
lahf
jb
pop
into
imul
and
imul
sub
xchg
sub
dec
repz
push
mov
out
push
xchg
lock
mov
sarb
pop
adc
xchg
shl
pop
andl
out
xlat
js
call
lea
mov
push
das
inc
push
inc
mov
push
inc
in
mov
addr16
add
adc
jae
xchg
scas
jmp
inc
insb
adc
dec
je
mov
repz
add
cmp
add
lret
cmp
cli
xor
jmp
imul
xlat
jge
test
mov
call
xchg
and
repz
push
insb
stc
mov
push
clc
mov
or
jae
jb
xchg
pop
sti
ret
imul
xchg
add
adc
and
stos
subb
cmp
jg
push
pop
mov
xor
pop
push
jo
jg
and
addr16
pusha
xlat
add
pop
lret
cwtl
lcall
mov
sbb
movsb
scas
int
push
xor
adc
repnz
inc
inc
add
sbb
outsb
sahf
xor
jb
mov
dec
add
subl
es
pop
das
mov
jge
test
pop
sbb
out
inc
loope
out
ljmp
hlt
jge
scas
adc
adc
sub
test
pop
or
cld
popl
lds
mov
adc
sbb
inc
fsub
or
xchg
cmp
in
push
mov
xor
hlt
nop
fcom
jge
cmpsl
dec
cmc
and
cld
cli
out
or
sub
out
out
jge
je
rcrb
mov
mov
fistps
int3
push
enter
jle
ja
outsl
mov
or
fcomip
fwait
pop
sbb
lods
xchg
addr16
insb
jbe
pop
push
sbb
xchg
xor
push
aam
shll
and
in
loopne
repz
push
cmp
sub
jmp
pusha
shr
rcr
xor
push
push
insb
aas
mov
std
sahf
jg
mov
rorb
andb
ds
mov
push
and
out
inc
push
stos
and
sub
in
pop
popa
xchg
cmpsb
cmpsl
je
mov
rcr
jno
sub
int3
cmc
cmpsl
lods
mov
inc
and
test
jmp
mov
lret
bnd
sbb
jle
out
jns
inc
gs
outsl
push
inc
xchg
out
push
push
outsl
cwtl
sub
sub
in
and
scas
sub
cmp
pop
js
sub
xchg
outsl
add
roll
sbb
fbld
dec
inc
movups
adc
pop
jmp
sub
out
scas
pop
sbb
std
jnp
cltd
jb
es
jne
mov
and
aaa
out
test
push
mov
pop
xor
and
jno
test
xlat
addr16
divb
mov
fldl
push
and
adc
aas
lret
cld
mov
aas
outsl
add
xchg
or
push
xor
leave
fscale
sub
sbb
addr16
addr16
shll
lea
rorb
sub
jns
inc
popa
push
sahf
dec
push
scas
mov
xor
mov
push
pop
mov
add
and
pop
rorl
out
loope
mov
rcrb
mov
loop
jne
or
imul
cmpsl
mov
push
inc
ret
mov
mov
shl
pop
mov
add
dec
mov
dec
lods
or
jecxz
fcompl
ret
mov
mov
push
shl
repnz
pop
pop
lret
in
cmp
dec
push
pusha
xchg
pop
lods
jno
rcrb
hlt
jp
sub
cmpsb
mov
mov
xor
hlt
jl
shl
push
movsb
sub
in
cli
and
mov
mov
movl
leave
mov
xchg
mov
sub
inc
dec
ret
sbb
loopne
add
sbb
cmp
les
clc
in
cmpsb
jp
mov
stc
insl
ret
mov
cltd
addl
adc
das
xor
mov
jne
jl
push
adc
dec
cli
mov
icebp
movsl
test
xchg
push
push
loopew,pn
pushf
icebp
xchg
fmull
inc
out
jge
aaa
mov
sbb
mov
xor
lret
in
pop
push
cmc
adc
int3
dec
push
repnz
or
jle
add
dec
jg
repnz
inc
outsl
sahf
shr
cltd
inc
std
xor
rep
ret
ror
cmp
xor
mov
mov
mov
subl
int
lea
divb
rol
mov
int3
xchg
inc
test
or
mov
adc
or
mov
frstor
xchg
test
loop
sub
pushf
test
cmpsb
pop
jno
inc
ds
pop
inc
cmc
xchg
loope
add
outsl
int
jne
cwtl
sarb
cmp
loope
xor
idivb
add
es
xor
outsl
mov
mov
xchg
mov
shlb
lock
sahf
jns
gs
xchg
addl
or
xchg
test
loopne
and
ja
xchg
loope
rolb
lea
and
sbb
test
lahf
out
push
xchg
rcrb
pop
out
xor
adc
jae
or
lret
dec
fldenv
scas
xchg
aad
nop
push
mov
or
dec
in
adc
cmc
leave
sbb
push
inc
or
adc
js
mov
cmpsb
fadds
bound
mov
popf
cmp
sub
dec
outsb
mov
leave
xlat
dec
icebp
mov
sahf
inc
push
jbe
mov
add
je
pop
lods
or
and
dec
add
cwtl
xchg
pop
dec
sbb
shrb
mov
pusha
fnstsw
out
lods
and
push
sbb
scas
add
mov
push
mov
jg
test
andl
inc
fcoml
mov
das
pop
dec
inc
insl
xchg
lods
adc
scas
js
sbbb
and
test
fiaddl
push
jmp
jno
mov
out
mov
xchg
mov
iret
mov
adc
test
pop
cmc
dec
bound
leave
push
sbb
nop
xchg
inc
mov
xor
int3
fs
mov
jle
mov
imul
fiadds
jne
mov
sar
stc
mov
lds
shlb
or
and
sti
push
xor
cmp
dec
int
add
fstl
iret
xchg
dec
loope
sub
fidivrs
jbe
cmpsl
gs
mov
bound
sahf
out
mov
daa
je
or
inc
add
mul
test
and
mov
jne
mov
xor
fcomi
in
in
add
push
mov
jbe
jmp
pop
add
and
lret
inc
pop
nop
add
add
mov
cmc
push
adc
mov
movsb
add
inc
in
shrb
lret
lcall
ret
cmc
lret
imul
aas
adc
mov
fldenv
push
jnp
es
sbb
and
addb
pop
in
pop
movsl
insl
rcr
dec
push
int
cmp
and
into
out
dec
adc
shr
push
sbb
loopne
outsl
xor
or
sarb
pushf
and
jne
xlat
negb
sarb
lock
mov
dec
lcall
dec
jle
test
iret
or
xor
push
arpl
daa
sub
push
shl
out
pop
fsubrl
call
pop
add
mov
pop
or
loopne
scas
adc
cwtl
rorl
enter
aam
dec
dec
xchg
cld
jp
sub
imul
je
push
mov
outsb
push
mov
dec
add
xchg
inc
mov
xor
cmpsb
scas
loopne
jecxz
sbbb
cltd
push
stc
xchg
addb
inc
add
mov
fdivrl
sub
sub
mov
das
cmp
jge
add
rcrl
push
and
ss
adc
cwtl
pop
movsb
add
dec
cmpsl
mov
movsb
inc
cltd
pop
shrl
cs
outsl
push
lods
test
leave
xor
lods
aad
cmp
inc
enter
or
shrb
out
fsubl
loopne
sbb
aam
jg
and
push
repnz
add
inc
scas
adc
mov
mov
xor
stos
les
out
movsb
sub
stc
shrb
aas
mov
pop
cmp
notl
sbb
daa
mov
jle
mov
xchg
punpckhwd
negl
add
scas
adc
pop
test
xchg
and
push
pop
inc
push
outsb
scas
sub
stos
jbe
jo
fsubrl
out
leave
or
ret
sti
aaa
cwtl
or
inc
cmpsl
mov
cmp
stc
xor
rorl
lret
out
push
push
iret
into
adc
fcoms
cltd
push
das
ss
xchg
pop
cs
jle
push
and
repnz
push
loop
cld
and
cs
bound
push
in
xchg
fs
pushf
test
mov
fcomps
sbb
xchg
fidivs
cmp
jbe
cli
clc
pop
sahf
fidivrs
mov
and
lock
data16
sbb
jb
inc
mov
std
lds
in
in
out
ds
jae
pusha
mov
push
pop
xchg
mov
fwait
in
enter
mov
cmp
scas
add
mov
jecxz
inc
lods
xchg
testl
mov
mov
jne
pop
imul
aas
and
lea
imul
call
xorl
nopl
jne
rorl
jnp
aaa
jnp
fidivrs
xchg
jp
sbb
leave
aas
mov
lret
dec
dec
shrb
sub
aad
fcompl
mov
pop
sub
outsl
sbb
or
push
mov
arpl
add
mov
sahf
mov
lea
push
pushf
aad
add
cwtl
lret
mov
cmc
jmp
movsl
lahf
and
mov
test
cmpsl
cli
sub
dec
xor
cmp
mov
jmp
pop
fs
fimull
sbb
fs
dec
pop
pop
fcom
lea
in
in
jge
pop
xchg
jns
rcr
xchg
ret
dec
xchg
and
adc
roll
xchg
or
dec
mov
inc
inc
out
mov
pop
and
sub
pushf
movsb
lods
outsl
scas
lret
jle
inc
push
push
dec
fdivrs
pushf
gs
jo
or
push
xor
and
push
mov
push
and
pop
xchg
dec
pop
pop
and
xor
cmp
jle
push
sbb
add
inc
stos
test
or
xchg
add
fidivs
les
sub
aam
push
roll
jle
scas
mov
jmp
fscale
cld
push
xrelease
or
xchg
cmp
jns
aaa
add
cmp
push
jp
mov
jle
roll
cmp
pop
mov
std
jbe
sbb
arpl
adcl
and
stos
roll
lret
insl
xor
test
mov
push
cmp
dec
xchg
or
mov
mov
sub
jmp
pop
cs
adc
cmp
add
cli
and
fistpll
hlt
test
inc
inc
sahf
xor
lahf
cmp
out
or
sbbl
loopne
movsb
pop
mov
fs
inc
add
in
mov
movsl
dec
add
jb
xor
jae
inc
sbb
jbe
insb
adc
cmp
fucom
jg
mov
push
psrld
sbb
in
cmpsb
popf
inc
mov
hlt
subb
stc
and
leave
lock
cmc
and
add
dec
jg
arpl
dec
sbb
jge
cld
lock
mov
test
orl
mov
call
sbb
pushf
sbb
insb
mov
jp
jns
adc
jae
movsl
ficoms
in
pop
mov
mov
pop
cmp
insb
and
sub
cmpl
in
stos
test
push
jg
lods
sub
loopne
dec
ss
call
or
movsl
cltd
repnz
mov
pop
xlat
dec
arpl
push
pushf
mov
ficompl
movsl
inc
bnd
lret
jne
aam
push
aad
dec
sub
cmpsb
add
pop
sub
das
jns
subl
xor
aam
pushf
and
mov
cmp
out
cmp
out
mov
cltd
stos
xchg
add
lock
cs
push
mov
pusha
mov
push
fdivs
mov
cwtl
mov
ret
sub
sub
call
test
mov
cltd
inc
mov
leave
fsubrs
adc
insb
icebp
insb
xchg
push
sub
cmpsb
in
push
out
rcrl
push
cmp
lahf
push
test
inc
push
cmp
xchg
xor
shll
pop
xlat
cmpsb
fists
mov
add
in
lods
sub
inc
je
push
pop
repnz
cmc
pop
and
adc
cmpsb
cmp
xchg
arpl
movsl
subb
pushf
jle
scas
movsl
rcrl
xor
shrl
outsb
push
pop
outsb
jmp
ret
out
xchg
lahf
or
mov
jle
pop
mov
faddl
or
int
cmp
sarl
or
arpl
add
stos
push
xor
mov
sub
loope
mov
iret
push
push
pop
dec
push
cmp
test
xor
sbb
lret
xchg
pop
cmpb
sbb
negl
repnz
sti
mov
sbb
adc
cmpsl
jl
repnz
repz
daa
hlt
mov
sbb
insb
aas
cmp
std
xor
lods
adcb
icebp
adc
scas
mov
sbb
cmp
push
jl
hlt
mov
pop
in
test
jle
mov
mov
aas
and
mov
in
loopne
leave
sub
pusha
cmp
inc
frstor
jne
pop
in
ljmp
and
stos
movq
por
cmp
mov
and
test
jo
jecxz
adc
out
mov
js
xchg
xchg
orb
lahf
mov
repnz
xor
nop
and
cmp
movsl
es
mov
mov
pushf
or
push
jo
outsl
pop
dec
mov
xchg
sub
ljmp
sbb
frstor
xchg
sub
pop
into
cmp
not
out
jecxz
icebp
rcl
pusha
push
pop
mov
fcmovnb
enter
popf
inc
dec
sub
and
ja
xchg
clc
jne
aas
or
jp
sbb
jecxz
add
scas
mov
jge
in
mov
cmp
mov
mov
icebp
lods
adc
adc
and
lret
iret
iret
xchg
lods
jp
and
outsl
iret
sar
das
ficoms
cwtl
stc
cmp
sub
mov
ret
mov
xor
test
or
or
mov
test
xchg
dec
dec
mov
sbbb
dec
push
push
xchg
mov
jo
loop
je
and
popa
adc
inc
lds
adc
jge
cmp
lea
jmp
or
cmp
pop
dec
push
shrb
push
arpl
and
dec
ds
pop
fwait
repnz
push
shrl
outsl
inc
sbb
ds
mov
cmp
jmp
lcall
xor
and
call
repnz
sub
lahf
inc
jl
shlb
movsl
in
or
iret
js
int3
xor
mov
testl
push
mov
xchg
outsb
in
fisttps
movsl
inc
dec
inc
fs
cmpsb
dec
scas
in
or
push
and
or
add
lea
xor
sbb
mov
mov
cwtl
fwait
loopne
sbbl
mov
nop
or
aam
jle
push
mov
sti
jnp
adc
push
cmp
scas
jge
cmpsb
stos
mov
mov
sub
cwtl
dec
aas
mov
into
fmuls
mov
ss
stos
mov
jns
mov
mov
jle
cmp
mov
mov
shlb
sbb
addl
push
ret
mov
mov
in
adc
ret
std
iret
loope
inc
jecxz
fsubp
mov
or
xor
xchg
sub
jge
popf
rolb
das
mov
test
out
cmp
cmp
xor
push
clc
jmp
inc
cmp
mov
data16
int3
pop
stos
sbb
adc
fstpt
lcall
out
mov
push
fs
inc
or
cmp
pop
nop
movsb
ficoms
insb
mov
test
pop
add
xchg
rcrb
push
or
div
inc
xor
in
fwait
inc
int3
adc
add
fcompl
sti
sbbb
mov
insb
mov
xchg
fbstp
lods
mov
fsubr
mov
popf
pop
sbb
mov
enter
popl
testl
fstpl
lcall
pop
jmp
ficoml
leave
add
aaa
imul
outsb
cmpsb
dec
arpl
icebp
lds
mulb
jmp
and
call
adc
push
popf
in
out
rclb
mov
push
xchg
fists
fsubr
xchg
cmp
popf
push
pop
lcall
dec
fnop
data16
jmp
push
sbb
jecxz
sub
lcall
mov
jnp
pushf
es
clc
cmpb
pop
fcompl
les
stos
dec
inc
sub
je
push
xchg
idiv
insl
cltd
mov
test
adcb
int
or
xchg
xchg
inc
mov
test
push
xlat
lahf
stc
outsb
push
fidivl
enter
ss
data16
mov
cmpsl
repz
and
sbb
jo
bnd
xchg
xor
sub
adc
inc
pop
pop
cmp
jns
fs
cwtl
pop
rcr
aas
xchg
in
insl
push
add
lds
loopne
out
pop
inc
sbb
jb
stos
sbb
mov
xor
xlat
xor
pop
cmp
mov
scas
ds
add
rcrb
aad
xor
or
scas
push
rcr
cltd
fbld
andb
add
push
stos
mov
in
mov
xchg
xchg
add
iret
pop
lret
notl
sarl
push
mov
das
dec
inc
int
fldl
ret
loopne
addr16
arpl
sbb
jle
int3
pop
in
jno
sarl
push
ss
aas
push
push
mov
adc
dec
xor
cmpsb
or
ret
dec
and
arpl
call
rcr
lret
pop
loop
inc
sbb
cmpsl
inc
mov
or
cmp
daa
sysexit
cmp
adc
or
mov
ds
sbb
and
icebp
sub
sti
jno
and
xor
cmpsl
jnp
add
xchg
insl
and
dec
mov
test
inc
shr
scas
lock
pop
inc
dec
mov
nop
mov
xchg
test
or
sub
fdiv
sub
mov
std
push
xor
ja
xbegin
arpl
xchg
bound
jle
mov
dec
in
jns
ret
outsb
das
in
rolb
jp
insb
xchg
pop
mov
dec
fnstenv
dec
mov
push
insl
ljmp
adc
fst
jl
enter
inc
mov
jo
fidivs
repz
test
cwtl
mov
scas
xchg
jae
xchg
insl
jb
sbb
jno
clc
inc
mov
loopne,pt
lock
fistpl
pop
ljmp
or
hlt
mov
push
test
mov
je
pop
and
pop
sub
jo
fstps
mov
and
cmp
frstor
call
mov
sub
mov
cld
outsl
and
mov
adc
and
sbb
sub
and
xchg
lret
enter
das
push
out
jg
pusha
jno
daa
sub
cmpsl
push
push
je
pop
imull
rcrl
aad
mov
mov
insb
insl
push
fbstp
insb
adc
test
shlb
scas
mov
lods
dec
js
or
push
fistpll
fs
and
inc
xor
adc
jmp
rcrl
fmulp
xlat
dec
push
jp
and
fiaddl
mov
xchg
les
cld
movl
or
daa
daa
push
add
jo
dec
xor
mov
xlat
or
add
fistpl
popf
das
mov
in
test
mov
pushf
mov
mov
fmul
repnz
xchg
in
xchg
sub
pop
dec
int3
and
mov
xchg
pop
lock
mov
inc
mov
or
adc
aad
add
jo
in
xor
mov
inc
xchg
test
sbb
sarl
stos
ret
and
aam
test
enter
sbb
mov
jb
das
cltd
or
shlb
dec
icebp
shll
cmp
pop
cs
shll
into
mov
cmp
stos
adc
fcoml
andb
cmp
or
add
xchg
pop
add
sahf
dec
cmc
and
mov
xor
add
lret
inc
test
xchg
test
mov
mov
out
mov
aad
fdiv
add
scas
jp
outsl
ret
sbb
out
or
pop
or
lods
dec
test
add
push
pop
out
imul
push
cs
pop
or
xchg
push
out
inc
icebp
add
out
loopne
mov
mov
pop
add
and
data16
adc
repnz
dec
stc
rcll
sub
adc
mov
test
xor
data16
cmp
rep
mov
dec
ret
and
xchg
enter
pop
fwait
mov
in
mov
das
add
mov
hlt
nop
int3
sbb
stos
xorl
dec
sub
stc
jg
cmp
mov
jecxz
jae
fidivs
out
testl
jge
push
lcall
xchg
in
mov
push
sub
mov
mov
dec
push
push
or
test
shll
lods
lret
test
mov
pop
sbb
jbe
mov
mov
jge
out
enter
fistl
rcl
dec
adc
xchg
sti
pusha
inc
fsubrl
mov
push
xorb
cmpsl
mov
loop
mov
pop
inc
xchg
mov
sub
je
es
jb
jo
mov
xchg
or
popa
es
clc
inc
jno,pn
out
and
add
pop
loop
cmpsb
mov
mov
mov
mov
mov
fwait
cld
xchg
lods
ret
mov
xor
sbb
testb
sti
scas
scas
rcrl
mov
push
pop
out
dec
in
jo
and
les
mov
test
imul
and
das
push
roll
ror
cwtl
jge
jo
adc
cmp
sahf
pop
sbb
push
pop
sbb
push
sub
stos
and
cmp
jae
mov
fucomip
jmp
addl
jmp
sbb
fcompl
shlb
add
push
cmpsb
insb
fsts
dec
repz
mov
xor
scas
xor
ds
pop
test
cld
pop
and
adc
jp
xchg
sbb
loop
xchg
insl
popa
pop
fwait
insb
ja
inc
ds
loope
fstl
jl
jmp
lea
sub
push
ljmp
dec
icebp
push
aad
mov
jp
clc
orl
dec
mov
iret
iret
movsl
pop
rcrb
ss
repz
cld
popf
out
dec
xchg
int
and
xchg
xor
lock
jge
sub
add
data16
xchg
fadd
sbb
cltd
jg
adc
lods
leave
lahf
lods
addl
inc
adc
inc
sub
shll
mov
sbb
add
int
add
mov
sbb
xchg
sub
sub
xor
mov
mov
loop
rol
dec
jne
mov
jno
or
arpl
out
push
fdivrl
cli
jno
outsb
ret
inc
dec
sub
in
jb
enter
or
push
aas
adc
test
jo
xchg
push
add
inc
and
out
cmp
mov
mov
dec
cmp
rcrb
cmpsb
roll
rcll
adc
pop
lret
repz
sbb
insb
addr16
add
repnz
adc
and
icebp
test
das
icebp
jecxz
jmp
outsb
imul
notl
mov
in
dec
xchg
shrl
inc
inc
cmp
add
cmp
mov
sti
or
testb
sub
add
je
out
lret
outsl
xchg
push
jno
imul
out
mov
mov
inc
data16
mov
sti
add
rorl
ja
es
faddl
dec
jecxz
repz
scas
dec
adc
sbb
rcrb
xor
ret
lret
dec
in
cwtl
movsb
loope
sub
push
push
jg
dec
or
dec
jb
cwtl
pop
pop
and
icebp
jns
stos
jge
jge
cmp
adc
xchg
aam
cs
jp
idiv
mov
test
push
pop
dec
adc
dec
pop
mov
or
mov
js
mov
push
cmc
adc
cmp
inc
cmp
push
inc
inc
jb
jae
lcall
out
and
jecxz,pn
fbld
into
pop
mov
fistps
or
icebp
jmp
fs
and
jno
cltd
insb
mov
add
icebp
mov
sub
or
rcr
sub
lds
inc
jge
imul
inc
mov
mov
aad
test
iret
bound
xlat
ljmp
cs
add
leave
xchg
jne
int
push
push
popf
mov
adcb
inc
dec
push
imul
or
mov
int3
and
push
out
nop
ret
pop
mov
rdpmc
orl
fwait
das
in
in
or
ja
mov
inc
jo
push
outsb
in
hlt
jmp
inc
shrl
xor
mov
xchg
mov
scas
mov
push
scas
cmp
bnd
lods
lret
pop
test
ss
fadd
mov
fstpl
scas
ret
fsubl
cmp
rclb
jmp
mov
pop
ret
adc
addr16
loop
xchg
pop
xor
mov
inc
xor
in
and
mov
push
add
fstpl
xor
and
xlat
insl
je
cli
mov
mov
flds
notl
ret
or
ja
push
or
mov
je
loop
cmc
cli
sbb
fwait
lret
mov
pusha
aam
xchg
inc
sbb
jl
sbb
fbstp
pop
fs
sbb
insl
pushf
adc
ja
jns
mov
mov
scas
int3
xchg
repz
cmpsl
pop
loopne
jmp
pop
push
scas
push
dec
stos
test
dec
lds
lock
push
incb
fmul
ds
scas
dec
ret
or
sub
xchg
dec
cltd
imul
push
cmp
in
dec
fmull
pop
cmp
repz
dec
lods
call
sub
jecxz
ret
push
testl
js
or
imul
jmp
xorb
push
and
loopne
sarb
xchg
fstl
jp
pop
imul
arpl
push
ljmp
and
and
rorb
outsb
xor
mov
maxps
subl
scas
adc
pop
daa
lahf
push
add
or
hlt
mov
out
mov
add
stos
adc
nop
andl
int
out
pop
inc
movsl
ret
ret
lret
in
in
mov
and
push
insl
push
sbb
xor
sahf
push
inc
cmp
rclb
lret
neg
sub
outsl
xor
cmp
and
add
scas
js
ja
sbb
push
push
test
xchg
or
pop
xlat
testl
push
shll
xchg
repnz
std
jle
std
loop
insb
sbb
popf
mov
mov
aam
das
add
xchg
frstor
dec
sub
jb
aam
fmulp
int3
loop
rolb
sbb
xor
mov
jae
movsl
lea
inc
pushf
scas
mov
popa
jle
out
jbe
mov
stc
je
cmp
lds
movsb
insl
repnz
popa
insb
inc
pusha
gs
cmc
or
clc
mov
leave
ds
in
sub
push
mov
sub
and
sbb
adc
adcl
cli
cmp
cmp
cmp
cwtl
mov
jl
jb
mov
cmp
test
movl
sub
cld
icebp
and
scas
lods
inc
test
fucomip
aam
fidivs
adc
iret
jnp
mov
icebp
fldt
dec
fistps
popf
push
cmc
mov
xchg
pop
mov
clc
push
test
in
movsb
das
movb
inc
pop
bound
sarl
jecxz
xchg
test
sub
repnz
cs
pushf
mov
fmul
push
or
or
imul
divl
movsb
cli
lods
js
mov
shlb
popa
lahf
dec
test
movsb
pop
xor
das
mov
sbb
leave
adc
push
outsl
mov
mov
lret
dec
daa
clc
adc
jp
or
rorl
cld
adc
pop
mov
subl
int3
adc
mov
xor
xor
cli
xor
pop
lret
rcrl
fidivrs
push
ss
sub
repnz
and
sub
push
mov
push
imul
cmpsl
adc
bound
and
sbb
adc
push
sti
xor
in
cmc
ja
enter
hlt
fcmovnbe
xchg
pushf
or
pop
cmp
dec
hlt
jno
pop
gs
out
pusha
adcb
nop
mov
dec
xchg
ss
and
call
push
dec
popf
call
mov
jae
or
or
push
push
sbb
mov
push
mov
sbb
dec
jo
ds
or
adc
bound
fcoml
mov
add
insb
outsl
int
dec
aad
clc
mov
adc
xchg
stos
mov
mov
xchg
lock
insl
add
adc
xchg
mov
enter
pop
dec
add
mov
ret
rol
adc
adc
in
jg
insb
xchg
les
mov
mov
int3
xchg
push
adc
scas
pop
xchg
or
mov
sub
les
sub
ja
sub
adc
addb
es
test
mov
addr16
lcall
aam
mov
dec
mov
dec
adc
adc
cmp
mov
stos
mov
rclb
sub
mov
movsl
stos
stos
movsl
dec
cmp
stc
mov
xor
jg
sbb
popf
sahf
test
xchg
push
jns
sbb
mul
add
movl
mov
push
iretw
fnstenv
sahf
xchg
clc
aaa
xorb
hlt
lock
or
lds
bnd
jmp
cld
sarl
dec
ret
int
ljmp
mov
leave
cmpl
mov
icebp
into
out
jecxz
sub
sub
push
cmp
stc
outsl
stc
xchg
add
sbb
pop
xor
fs
jno
mov
dec
pop
xchg
cmp
xor
jl
jl
cmp
std
pop
mov
addb
inc
repz
inc
ret
sub
outsb
sub
pop
cmpsl
push
les
arpl
and
push
cmpsl
xchg
mov
repnz
add
push
pop
pop
mov
adcl
rcrl
inc
pop
adc
cmp
repnz
es
mov
scas
cltd
popa
xor
shll
pop
fidivrs
dec
je
dec
shl
test
or
int3
sub
sbb
je
push
add
push
mov
stos
int3
iret
dec
jl
xchg
dec
jae
sbb
or
sub
cs
pop
pop
std
addr16
cltd
inc
mov
pop
pop
sti
push
mov
and
sub
xchg
jecxz
jnp
pop
pop
ds
dec
push
cmp
xchg
cmp
mov
xor
lret
es
and
loopne
xchg
sbb
push
out
jg
inc
and
stc
lea
iret
bound
xor
fcmovnu
lret
in
inc
xor
push
in
and
mov
mov
dec
cvtps2pi
fstpl
adcl
in
jo
and
out
xor
xchg
add
das
scas
push
and
cmp
addr16
ficoms
xor
or
popa
cmpsb
stc
push
psubusw
stc
out
es
in
daa
mov
movsb
orl
fisubl
nop
inc
lea
je
adc
sub
pop
es
xchg
mov
sbb
cmpsb
iret
pop
outsl
push
mov
dec
outsl
xchg
xchg
pushf
mov
ret
loope
pop
and
jle
push
in
jmp
mov
leave
sbb
push
or
mov
push
and
repz
push
sahf
adc
or
jno
out
cmp
and
dec
nop
xor
call
pop
mov
sub
sahf
or
cmp
negb
sub
in
mov
fsubs
rorb
fnstenv
call
pop
lds
stos
out
xchg
mov
inc
out
sbb
loope
pushf
fidivs
cmpsb
push
adc
mov
sbb
out
xchg
cli
jbe
aas
nop
jns
xchg
xor
stos
sub
mov
mov
and
ret
inc
mov
in
mov
mov
stos
sahf
mov
js
outsb
pop
sbb
scas
push
mov
out
sarl
adc
sub
jne
inc
or
aam
adc
decb
scas
add
fcompl
lret
ds
iret
int
xchg
adc
pushl
push
gs
test
fisttpl
loop
mov
jecxz
cmp
movsl
adc
js
mov
lret
xlat
pop
pop
xor
jle
sbb
aas
aam
push
std
ljmp
pop
mov
movsb
fildll
mov
popf
pop
xchg
cwtl
pop
mov
insb
jae
inc
sub
lahf
push
repz
sbb
aad
loop
jecxz
aad
dec
testb
call
je
or
sub
mov
test
fsubrl
cmp
orl
mov
xchg
inc
mov
mov
xor
mov
jno
inc
xlat
mov
sub
cmp
gs
into
cmp
cltd
xchg
jae
dec
int
test
jecxz
sub
inc
rclb
ja
cmp
and
nop
push
mov
mov
or
adc
fisttpll
sub
imul
or
in
fsubr
std
cli
pop
lahf
jae
xor
push
leave
add
pop
cmp
jbe
cs
cmp
movsl
movsl
mov
adc
inc
push
andl
cmp
adc
mov
cs
sbb
or
pushf
cmpsb
dec
xchg
sbb
xchg
jg
and
xlat
cmp
dec
lock
enter
sti
test
pop
sti
cmp
sbb
sub
cmpsl
adc
inc
push
mov
mov
popf
sarb
out
xchg
xchg
mov
mov
test
jl
ja
roll
popf
cltd
lods
insb
fcompl
mov
stos
cli
ficompl
fists
rcrl
lret
cmp
mov
adc
xchg
test
and
inc
lcall
pop
xchg
in
fstps
lret
lds
lcall
test
and
cmpsb
jbe
mov
popa
mov
lock
insb
cltd
xchg
and
movsl
lcall
xor
cs
movsl
fisttpl
sbb
cmp
pop
mov
sub
data16
ja
dec
loope
leave
push
into
cmpsl
cltd
mov
testl
insb
adc
rcll
imul
xchg
lds
aad
idivb
fs
ror
call
jo
in
dec
in
add
imul
push
sub
inc
outsb
int
sti
fsubs
es
iret
dec
call
push
xor
fcmovnbe
aad
orl
mov
fwait
dec
xchg
mov
sahf
loopne
out
cmp
dec
dec
cmpsb
fisttps
cmp
subl
in
add
xchg
add
push
push
cmp
in
xor
xor
into
push
fwait
insl
dec
stc
cmp
out
jo
test
cmp
pop
cs
dec
push
cmpsb
out
hlt
dec
fldt
aas
or
jns
fcmovnbe
xor
dec
imul
xchg
mov
jmp
push
popf
jo
mov
fisubl
ja
jb
adc
scas
jae
dec
sbb
and
push
xchg
inc
or
outsb
mov
cmpsl
cmp
mov
scas
aaa
stc
fsubl
xlat
pushf
dec
lods
dec
push
xchg
pop
sbb
stc
add
roll
or
sbb
push
push
sub
inc
mov
frstor
jl
push
dec
scas
mov
pusha
dec
icebp
xor
pushf
mov
sbb
or
mov
loopne
mov
ss
xor
ret
mov
push
sbbl
cltd
sbb
cmp
or
adc
dec
adc
pop
inc
dec
or
pop
scas
push
push
js
xchg
jg
dec
test
pop
xor
push
xor
jne
xchg
xchg
rolb
pop
push
jp
test
xor
divb
scas
inc
stc
int3
rclb
daa
into
insl
movsl
popa
xchg
inc
out
jl
rorl
sub
imul
cmp
sbb
push
pop
push
add
lret
popf
mov
dec
ljmp
pop
jg
push
mov
mov
lods
outsb
and
addr16
lods
cmp
loope
mov
cmpsl
rcr
mov
dec
es
mov
je
adc
jae
imul
mov
jge
mov
repz
xchg
aas
mov
call
inc
cmpsb
mov
pop
sti
xchg
lret
mov
push
fdivl
in
push
adc
sbb
negb
mov
pop
pop
clc
test
fisubrl
mov
pop
adc
or
dec
xchg
gs
sub
pop
pop
aam
stos
pop
in
push
lods
xchg
xor
fadds
out
jne
and
adc
cs
lahf
movb
or
jb
popf
outsb
andb
notl
hlt
out
cmp
loop
push
rolb
push
shll
pusha
jp
insb
movsb
cltd
popf
loop
xchg
or
in
ja
push
dec
in
stos
roll
pop
adc
push
rcr
test
inc
pop
inc
and
mov
idivl
push
lods
fisubl
or
in
inc
cmpb
cltd
sub
adc
test
je
popf
add
and
xor
call
inc
data16
adc
cmc
out
test
aad
movsl
or
push
scas
mov
gs
flds
fiadds
inc
mov
sbb
sub
stc
fcomps
push
xchg
cltd
lahf
lock
cli
add
cltd
push
add
and
adc
out
aam
mov
sbb
lret
pop
test
add
test
cmp
xor
fisubrs
pop
or
jmp
movsb
push
jo
dec
lcall
out
pop
mov
lret
push
imul
movsb
out
fmulp
dec
xor
call
in
cmp
xor
xor
jb
pop
orb
outsl
test
cmp
ss
arpl
fdivrl
fistl
push
rcrb
xor
xchg
filds
push
xchg
repz
mov
test
fnstsw
jne
add
rorl
jbe
mov
pop
shrl
rolb
inc
fcomip
sbb
bound
les
add
outsb
sti
movsb
out
xor
inc
xor
mov
jl
lods
mov
jns
and
sbb
lret
push
nop
fwait
hlt
loop
mov
sarb
loope
out
loope
add
mov
loopne
loope
call
mov
dec
pushf
imul
adc
pop
inc
cs
push
xchg
cs
jg
invd
scas
mov
pop
sbb
jl
mov
inc
inc
fadds
add
pop
push
mov
imul
loop
mov
adc
push
out
test
roll
jb
out
lcall
cmp
ret
jle
sbb
pop
sub
mov
and
imul
stc
cli
cmp
mov
mov
jmp
xor
lret
sbb
or
xor
push
cmpsl
mov
mov
pop
fmuls
into
enter
lds
xor
xchg
push
fadd
iret
inc
icebp
mov
jb
pop
adc
xorb
mov
maskmovq
imull
sub
iret
leave
push
and
lock
movl
lds
outsl
sbb
dec
pop
cli
cs
adc
enter
mov
ret
pop
inc
pop
cmp
sbb
push
pop
cmc
add
add
sahf
inc
mov
jl
in
jge
and
cli
pop
add
sub
or
add
cmc
jecxz
sbb
mov
mov
mov
in
and
lahf
test
xchg
xor
testb
aad
jo
mov
mov
push
xor
call
aaa
scas
addr16
xor
fsubrl
in
sub
dec
sar
push
add
mov
fimuls
cmp
mov
cmp
sbb
ja
movsl
jnp
pop
fwait
movsl
push
lods
nop
cld
dec
dec
sub
das
mov
pusha
sub
inc
mov
popf
rorb
jne
filds
xchg
cld
pop
movsb
or
lcall
loope
cltd
vsubss
inc
mov
pop
adc
jne
sub
hlt
lods
sbb
scas
jno
gs
leave
lret
cs
xchg
mov
imull
xchg
sbbb
xor
stos
insl
push
fisttps
xchg
shll
dec
xchg
mov
inc
adc
mov
scas
les
sti
adc
ljmp
int
mov
pushf
pop
fcomi
ja
mov
rclb
jae
repnz
cmp
and
mov
out
xchg
jno
lods
jmp
push
sub
fiaddl
dec
push
mov
push
adc
mov
ret
sahf
pop
jl
cmp
xchg
lds
push
pop
dec
jb
stos
push
and
jp
testb
repnz
popa
and
sbb
xchg
in
cmpsb
cld
and
cmp
mov
add
icebp
lret
test
mov
jge
dec
fidivs
dec
jge
mov
adc
fcompl
and
cmp
mov
in
dec
add
jb
or
inc
xor
mull
pushf
femms
push
jae
test
mov
out
out
add
push
cmp
mov
mov
rclb
testl
inc
loope
and
aas
js
jle
mov
hlt
arpl
gs
call
inc
inc
jbe
sbb
outsl
icebp
sbbb
inc
enter
sbb
dec
fstl
shrb
hlt
dec
je
or
sub
sbb
push
loop
add
mov
call
add
das
ds
test
cmp
push
orb
out
negl
fldt
int
sbb
enter
xchg
shlb
xlat
out
jnp
outsb
xchg
cmp
mov
outsb
push
lds
shld
lret
jnp
lods
pop
popf
cld
in
inc
repnz
stos
leave
jmp
aas
fisubl
imul
pop
cmp
mov
fimuls
les
aad
xchg
pop
inc
cmp
dec
pop
xor
jnp
into
mov
fistpll
mov
outsl
sub
mov
das
cmp
mov
in
cmp
dec
ja
inc
ds
jno
mov
ficoms
out
into
or
pusha
scas
push
or
jle
mov
fsubrs
shll
in
push
mov
dec
lea
lods
sbb
adc
jmp
mov
outsl
push
push
scas
mov
xor
mov
mov
sub
cli
fidivl
insb
bound
cmp
lahf
xor
je
add
dec
xor
xchg
inc
push
mov
add
sub
test
and
shl
jmp
mov
mov
scas
or
inc
add
xchg
inc
add
loopne
pop
xchg
xor
add
lods
adc
xchg
es
and
cmpsb
add
adc
xchg
out
mov
dec
les
adc
mov
jge
jl
xor
scas
mov
push
and
gs
leave
cli
push
cmp
mov
xorl
pop
fsts
jb
loope
int3
pop
cmp
aaa
and
sbb
cmp
pop
sbb
stos
enter
aam
pop
add
sub
push
pop
nop
mov
mov
xor
cli
jne
mov
ds
push
sbb
sub
pop
mov
sub
inc
inc
push
cmp
push
mov
cmp
add
mov
mov
push
mov
fildll
mov
dec
stos
adc
pop
cli
mov
ss
pop
leave
das
xor
xchg
lock
mov
pushf
mov
dec
mov
inc
lea
sbbl
repz
xor
out
xor
xor
lcall
popa
dec
cmp
mov
lods
inc
jb
inc
mov
loopne
lret
cs
aad
sti
pop
xchg
mov
in
lock
icebp
and
mov
inc
push
xchg
jae
mov
cs
imulb
orb
pop
into
xor
test
mov
push
adc
add
je
and
aam
jo
add
out
test
cwtl
jp
incb
pop
xchg
call
push
cmpsl
mov
and
sbb
mov
sub
bound
xlat
sbb
test
sarb
adc
push
inc
lea
pop
push
mov
sti
mov
sbb
addr16
repz
push
and
call
pop
sbb
sti
lcall
in
lahf
shrl
mov
pop
out
scas
xchg
xor
popf
jb
ret
add
ljmp
mov
inc
hlt
cmpsl
stc
xor
loope
int
or
andl
imul
inc
jb
push
leave
dec
cmp
out
xchg
xor
ficompl
dec
test
pop
repz
dec
pop
mov
inc
mov
popa
adc
clc
and
mov
loope
mov
addb
xchg
jp
xor
je
loopne
inc
daa
dec
xor
or
adc
fstps
scas
sbb
loopne
fadds
in
dec
jnp
fbstp
arpl
nop
jne
mov
nop
call
in
xchg
xchg
movsl
pop
cltd
pop
sub
push
push
sbbl
cmovbe
pop
nop
rorb
mov
pop
lret
shll
mov
orb
xchg
popa
loopne
push
pop
push
mov
adc
inc
movsl
xchg
addl
movsb
clc
and
test
cs
mov
mov
push
adc
mov
and
jb
xchg
cmpsl
adc
jecxz
lcall
and
bound
popf
mov
push
xor
lods
and
outsl
iret
xchg
push
iret
out
sub
imul
repz
fdivs
sub
add
inc
enter
sahf
sbb
repnz
pop
pop
add
je
scas
xor
jmp
int3
pop
outsl
and
pop
adc
lods
clc
stos
orb
pop
loope
mov
in
inc
orb
lret
sub
in
dec
mov
mov
xor
fs
je
dec
pop
clc
jp
jns
repz
push
shll
repnz
inc
xchg
dec
in
sbb
fsubs
enter
int
movsb
xlat
and
iret
loopne
into
mov
jne
pop
rcrb
pop
jmp
inc
sbb
push
mov
and
scas
jbe
cmpsl
sti
adc
add
mov
push
sbb
mov
jge
adc
mov
aaa
addr16
js
mov
sub
aam
bound
push
jg
les
sub
loopne
mov
test
mov
xor
xor
and
test
mov
ljmp
pop
cwtl
mov
sub
mov
negb
inc
fidivrl
pop
xchg
std
nop
dec
adc
loopne
cmc
into
jp
daa
jne
mov
mov
lea
arpl
sbb
cmc
mov
mov
lods
mov
sbb
ret
push
lcall
adc
mov
repz
into
lea
jecxz
mov
cmp
fs
cmpsl
enter
jmp
add
leave
adcl
ret
cld
pop
sbb
aad
adc
std
in
cwtl
insl
out
inc
orb
pop
sub
scas
push
sub
push
jg
mov
xchg
push
shll
test
or
sub
push
inc
ds
aas
sahf
add
pop
jnp
push
inc
and
adc
outsl
out
sbb
addb
jb
adc
sub
mov
cmp
xchg
xor
or
pop
cmp
flds
in
adcb
fmuls
inc
add
push
mov
loopne
mov
sub
xchg
aad
mov
adc
imul
stc
test
fidivrs
loopne
adc
mov
xchg
jle
aam
push
sahf
fwait
das
or
out
pop
xchg
jle
mov
addl
fs
sub
and
xchg
adc
push
ja
mov
rorl
jb
out
lcall
add
jmp
xor
fs
inc
movsl
icebp
int3
leave
xchg
sbbb
inc
pusha
lods
icebp
sti
shld
in
sub
fistps
ss
test
scas
jae
xchg
stc
xchg
sbb
add
ds
scas
fsubrs
out
into
jae
mov
aas
ds
xchg
lock
enter
add
shll
in
insl
and
xor
addr16
js
adc
outsl
dec
push
lods
fwait
jecxz
add
popl
mov
out
adc
bound
imul
sbbl
push
cli
xor
sbb
or
jl
or
mov
xchg
xchg
addr16
nop
in
adc
dec
je
pop
push
xor
sub
fists
lods
fcompl
sbb
nop
andl
and
repz
mov
or
pop
adc
fisubl
pop
dec
loopne
rcrb
or
daa
out
mov
je
sti
mov
jecxz
push
fwait
lods
test
sbb
inc
dec
dec
fs
and
cmp
mov
pop
test
or
les
push
cwtl
sub
int3
aam
int3
js
mov
arpl
lcall
popf
xchg
or
outsl
push
jp
nop
add
pushf
ret
jmp
out
andl
outsl
xor
mov
test
xorb
outsb
jp
int
leave
jnp
lods
sbb
adc
push
je
data16
sahf
inc
push
sbb
mov
das
lret
pop
jle
jmp
rcll
lea
mov
jmp
add
aas
lock
sbb
cmpb
xor
mov
rclb
ret
add
adcl
repnz
inc
or
lahf
adc
es
popa
mov
cmp
pop
cmp
mov
iret
sti
dec
push
jno
ret
sbb
jl
jge
jmp
add
iret
js
xlat
add
inc
push
mov
mov
jge
out
pop
ret
jle
daa
popf
rcrl
test
repnz
add
arpl
push
jg
lock
repz
es
jbe
daa
jae
jno
xor
or
leave
inc
lret
xor
loope
scas
push
xchg
leave
mov
loopne
xor
les
fisubl
xchg
lods
pop
inc
sub
sub
cmp
xchg
xchg
pop
insb
mov
dec
insl
outsl
sahf
pop
fisttps
incl
popf
jge
fcmovb
daa
fdivl
jg
mov
sarl
out
neg
push
sahf
notl
add
ds
mov
sub
daa
jnp
idivl
clc
enter
inc
sub
pop
add
jae
fs
arpl
addr16
push
mov
mov
lahf
mov
clc
lea
inc
jecxz
int
pop
movsl
rol
sbb
mov
mov
rolb
out
xchg
stos
inc
add
xor
or
xlat
push
cltd
mov
mov
cmp
rorl
jge
fdiv
mov
or
aas
cmc
dec
inc
push
mov
stos
add
pop
fldt
jns
or
sbb
xchg
outsl
sahf
es
data16
sbb
lea
mov
ja
pop
addr16
jns
add
pop
shrb
pop
mov
sar
fdivr
insl
inc
inc
xchg
mov
cmc
nop
rcrb
stos
cmpsl
pusha
stos
pop
xchg
add
push
dec
xchg
cltd
outsl
dec
jne
out
cmpsl
jnp
outsb
or
xchg
fstp
cmp
sub
jg
jae
add
mov
test
push
jge
cmpsb
pusha
mov
pop
xor
movb
or
sbb
xchg
add
sbb
pop
lret
ljmp
fisttpll
sahf
out
inc
adc
cmp
gs
pop
outsl
fdivrs
test
test
jb
mov
push
hlt
and
fcoms
test
add
hlt
jle
rolb
aas
mov
fldcw
mov
mov
push
aam
pop
cs
mov
jle
dec
ljmp
mov
inc
lods
or
cmp
mov
shl
test
or
scas
inc
sub
jne
sub
mov
add
js
pop
jae
addb
cmp
add
dec
add
jbe
or
cmp
jl
pop
lcall
jnp
sbb
inc
iret
scas
stos
shl
outsl
jmp
mov
imul
mov
cs
jge
and
push
and
es
mov
stos
js
push
sahf
into
xchg
scas
test
call
jno
mov
jmp
sbb
jg
push
dec
cmpsl
add
push
xchg
cmp
andb
movntps
jae
shll
xchg
test
sbb
and
inc
repnz
ficomps
inc
cld
mov
add
xor
cwtl
push
in
inc
xor
sub
mov
roll
pop
adc
fisubrs
nop
xor
xchg
test
cwtl
or
das
sub
mov
pop
and
popf
cld
pop
cmp
stc
sti
pop
std
dec
dec
xchg
mov
jg
call
dec
sarb
push
icebp
rolb
xchg
mov
insl
popl
jmp
mov
test
push
ret
movl
sbb
sbbb
lods
shlb
mov
notb
xor
cmp
addr16
jae
inc
js
xlat
lds
lea
lcall
push
and
sbb
adcb
mov
cs
cmc
sub
pop
sub
pinsrw
in
scas
imul
pop
adc
lcall
mov
mov
mov
fidivrs
sahf
mov
or
jl
dec
data16
call
inc
sub
push
fisttps
repz
jno
jge
cli
movsb
xor
in
sbb
scas
adc
addr16
xor
pusha
inc
sub
mov
dec
inc
out
dec
mov
clc
adc
ret
push
dec
xor
lods
lods
push
fistl
cmp
push
clc
cmp
pop
mov
popa
dec
xor
sbbb
dec
pop
xchg
mov
shr
in
xor
clc
nop
arpl
mov
cmp
cmp
dec
jg
cli
push
cmp
dec
arpl
mov
jnp
add
loope
gs
es
mov
inc
adc
sub
test
jp
inc
mov
xchg
inc
scas
mov
xlat
adc
iret
lods
or
jg
sub
mov
cmp
in
stos
pop
xor
pop
lock
dec
sarb
in
add
jns
sub
aad
jo
cmp
xor
repz
ss
clc
jge
je
gs
es
jl
cmp
sub
dec
int
adc
dec
cmpsb
dec
mov
add
sbb
and
dec
jle
insl
xor
inc
cwtl
test
push
test
pop
movlps
cmp
pop
xchg
mov
xchg
jmp
jmp
fisttpl
jmp
orb
sti
jle
and
fidivs
enter
insl
sub
sti
roll
xchg
test
xchg
int3
jecxz
cmp
lret
inc
push
insl
mov
pusha
std
pop
das
outsl
inc
stc
aad
dec
push
adc
das
ljmp
jbe
fmuls
pop
mov
outsl
int3
mov
cmp
xor
add
mov
cltd
not
pop
inc
into
outsb
cmp
sti
push
add
inc
mov
hlt
pop
roll
push
xchg
aaa
pop
les
cltd
pop
insl
jmp
jmp
lock
jmp
xchg
pusha
sub
jb
ret
adc
xor
inc
pop
jg
push
push
dec
dec
xchg
fwait
hlt
add
or
or
adc
repnz
or
mov
cld
cmp
mov
or
add
jne
aam
mov
xor
fnsave
cmpsl
dec
lahf
xchg
lea
andl
in
pop
hlt
gs
adc
sbb
insl
sti
sbbb
jbe
int
lea
push
fs
xchg
jnp
daa
inc
leave
out
and
xchg
pop
es
paddq
int3
mov
jae
js
or
add
or
pop
pusha
js
adc
movsb
fsubl
inc
pop
in
inc
and
jg
and
pop
outsb
pop
and
fldcw
orl
loope
scas
scas
cmp
fwait
push
push
pop
enter
mov
mov
mov
jno
push
mov
int3
and
and
and
test
mov
mov
je
sarb
jle
jl
cmp
js
ret
mov
in
mov
nop
sub
loope
pop
dec
addl
std
or
push
add
jb
insl
add
xor
sbb
call
lds
cmc
mov
sub
xor
adc
lcall
mov
arpl
je
cmp
xchg
scas
jle
loope
dec
movhps
enter
ja
inc
test
xchg
xchg
fldl
imul
push
xchg
out
cmp
fnsave
adc
dec
arpl
pop
enter
xor
add
inc
xor
sub
xor
ja
scas
ffreep
je
jae
sbb
cwtl
ljmp
hlt
xor
aad
ja
ja
popa
scas
push
mov
clc
in
std
push
inc
outsl
out
jle
int3
mov
mov
aad
mov
inc
sar
jns
dec
push
pop
jne
mov
pop
fsubr
xchg
stos
add
add
arpl
rolb
movl
adc
aaa
addr16
add
mov
or
cmp
imul
or
mov
cmpsl
and
add
cli
xor
jno
js
popf
dec
jae
sbb
cmpl
arpl
sub
add
fs
lods
mov
xchg
inc
insl
push
inc
int3
and
jg
insl
pop
pop
aaa
add
push
cmp
sti
aad
lods
nop
maxps
fwait
sbb
push
gs
js
negb
aaa
push
sbb
add
sahf
jne
lods
adc
nop
mov
mov
insb
ds
shrb
push
push
pop
fisubrl
mov
aaa
lret
xor
pop
mov
mov
aas
rclb
dec
jg
jno
shrl
sbb
mov
in
cmpsl
fwait
adc
stos
rcll
add
sahf
inc
fiaddl
fiadds
jge
pop
loope
sub
sar
sub
fcomi
cmp
xchg
xor
dec
shr
lret
sbb
and
mov
imul
insl
push
sub
mov
sub
pop
ljmp
hlt
pop
addb
ret
daa
orl
movsb
xor
push
ja
mov
or
lcall
data16
repz
add
cmc
jg
stos
lods
shll
iret
mov
mov
mov
jno
xchg
dec
push
out
sahf
jbe
or
orb
fbstp
xchg
pop
stos
in
dec
dec
cmpsb
loop
or
or
or
push
ja
push
inc
mov
movsb
jbe
and
out
mov
jae
jl
mov
mov
outsb
add
cmpsb
aam
enter
es
add
inc
test
jmp
les
jmp
adc
in
mov
xor
sbb
stos
jno
inc
hlt
push
pop
pusha
aam
lds
lods
daa
in
pop
inc
sbb
sti
insb
pop
or
popa
faddl
rcrb
sbb
pop
mov
sahf
je
inc
pop
addr16
dec
jnp
ss
mov
pop
pop
inc
sti
inc
subb
loopne
pop
sbb
mov
adc
daa
aam
movsl
mov
adc
mov
outsl
je
mov
cmp
or
jecxz
add
aam
shl
and
mov
inc
cltd
hlt
push
push
shrb
popa
mov
outsl
xchg
ljmp
inc
hlt
and
or
pop
mov
loope
xchg
or
push
jbe
cmp
scas
lahf
push
mov
flds
mov
inc
addb
addb
sbb
fcompl
jno
pop
test
inc
add
mov
or
xchg
shrl
stos
lret
xchg
and
jae
fdivrl
pop
dec
inc
cltd
pop
popa
lret
fisttpll
arpl
in
mov
in
mov
cmp
jl
add
std
push
xchg
sbb
mov
push
in
mov
subb
or
cmp
bnd
inc
std
cmp
dec
mov
lahf
sbb
in
push
push
jne
adc
test
stos
xor
dec
insl
sub
or
push
daa
pop
xchg
bound
test
or
filds
int
xor
cmp
mov
sbb
inc
and
pop
cmp
jp
aaa
push
cmpsl
scas
bound
cmp
add
push
arpl
repnz
push
mov
jl
aam
out
xchg
in
ffree
scas
dec
push
xchg
pop
mov
xchg
xchg
sub
stc
gs
enter
dec
xchg
sbb
loope
clc
test
mov
cmp
aad
scas
ret
subb
aad
scas
daa
sbb
sub
jp
inc
std
jnp
aas
jbe
inc
js
jl
insb
lds
inc
sbb
lcall
adc
roll
in
mov
add
cmp
test
jecxz
mov
ret
inc
clc
pop
into
mov
adc
out
popa
loopne
push
iret
imul
loop
inc
testl
push
push
xor
insb
int3
adc
and
mov
daa
push
lds
test
or
call
or
jo
xchg
cmp
loopne
jb
xlat
mov
rorb
insl
adc
sbb
and
inc
or
pop
popa
cli
jne
arpl
ficompl
pop
adc
push
shll
into
pushl
loop
adc
inc
sbb
pop
cmc
bound
push
jnp
lcall
cwtl
idivl
xor
xor
jl
jno
aad
adc
rcll
mov
inc
push
jbe
sbb
aas
xchg
push
add
lahf
push
iret
xchg
adc
cs
cmp
push
jmp
mov
push
jae,pn
int3
mov
mov
adc
xor
or
push
xor
andps
test
mov
lods
or
jne
xchg
leave
cli
sub
push
jbe
arpl
or
sbb
dec
push
fwait
cmp
enter
mov
notb
cmc
dec
jge
in
scas
jae
movsb
ficompl
xor
mov
out
sbb
or
ljmp
lods
int3
pop
popf
xorb
add
and
stc
insb
xchg
mov
pop
adc
inc
loope
lds
loop
mov
pop
inc
ja
fsubs
in
and
and
shrl
sbb
sub
dec
mov
mov
mov
mov
pop
pop
repnz
bound
sahf
jle
push
jb
scas
lret
jmp
dec
sbb
in
mov
in
xchg
inc
int
adc
mov
xchg
fs
inc
jmp
sahf
xchg
adc
xchg
mov
sub
and
mov
imul
pop
enter
cmc
outsb
cmp
sbb
daa
gs
or
jae
ficompl
xchg
mov
pop
sbb
fidivrs
dec
lods
mov
push
mov
inc
push
gs
in
jns
mov
push
push
andb
in
xchg
push
cmp
lds
push
or
jno
sub
pop
mov
cmp
mov
mov
inc
les
mov
in
in
pusha
sbb
jo
das
lahf
sahf
xor
aad
iret
dec
lret
sahf
movd
and
add
pop
into
xchg
outsb
sub
jle
push
mov
enter
dec
movb
push
inc
jle
dec
push
mov
rcl
lret
mov
lds
cwtl
jmp
mov
pop
in
xor
mov
jae
sahf
das
dec
lods
sti
mov
xchg
xchg
xor
sbb
in
xor
es
mov
rclb
and
cmp
push
aaa
xchg
rcrb
mov
fxch
jne
dec
fistl
jl
adc
ss
jecxz
or
mov
pop
jnp
sub
sub
adcb
mov
dec
mov
enter
mov
scas
arpl
pop
or
aad
xor
sub
rcrl
lods
mov
dec
cld
jns
iret
xor
int3
cmp
imull
test
inc
mov
mov
pusha
jecxz
mov
inc
fstps
cld
out
stos
addr16
add
std
test
sbb
cmc
dec
dec
repz
dec
stos
iret
ret
lods
and
sbb
outsl
pop
pusha
or
jo
in
and
cmc
pushf
cmc
out
dec
jle
enter
and
xchg
rcrb
pop
fisubrs
into
pushf
inc
inc
xor
jl
xor
stos
nop
int
sbb
cmp
outsb
inc
cs
jbe
mov
adcl
xchg
mov
sub
inc
lret
movsl
loope
sarl
and
icebp
lret
xchg
stos
in
imul
sbb
mov
xchg
mov
mov
sbb
and
decl
xchg
and
sub
into
aas
cmpsb
xlat
mov
ret
sub
xorb
or
xlat
pushf
jne
stos
je
mov
popf
sub
cli
cmp
test
push
adc
shlb
pop
cmpsb
lods
xchg
lea
mov
mov
nop
sbb
cwtl
adc
pop
mov
sti
inc
xor
loopne
cld
and
inc
lahf
xchg
push
std
adc
adc
in
jns
or
pusha
insb
cltd
imull
fs
jge
in
fcompl
arpl
dec
sbb
ror
repnz
std
push
inc
fldt
in
jecxz
pop
iret
rcrl
dec
sub
cli
mov
insb
pop
mov
and
dec
pop
push
push
aaa
xor
loope
loop
sti
cmp
mov
cli
enter
mov
cmp
repnz
sarb
inc
push
xor
sbb
push
test
icebp
add
jae
sar
xchg
adc
mov
dec
imull
sahf
aad
xor
add
or
xchg
in
inc
xchg
in
icebp
mov
or
sbbl
jbe
stc
shll
xchg
iret
sub
aam
mov
lret
les
pop
push
cld
test
sub
cs
mov
fcomps
mov
addb
cltd
xor
gs
mov
pop
nop
lea
sbb
stos
outsl
popa
js
xor
or
dec
and
sti
jb
out
in
adc
sahf
loop
push
in
pop
mov
test
daa
std
roll
mov
pop
jns
lahf
jnp
inc
sarb
cmp
or
mov
mov
popa
in
mov
test
dec
xor
lahf
mov
mov
jp
mov
push
fwait
insl
xchg
pop
jmp
pop
pushf
mov
xchg
xor
adcl
lods
mov
push
clc
stos
pop
ret
mov
js
int
aam
int
pop
lea
cmp
dec
xchg
loope
push
andb
xchg
push
scas
inc
xor
xlat
and
js
adc
pop
lret
dec
dec
lret
or
outsb
pop
and
adc
and
xlat
xor
lods
pop
xor
mov
push
cld
addr16
mov
divl
mov
add
pop
jae
mov
gs
sub
out
inc
pop
sbb
into
xchg
pop
push
or
gs
test
lahf
daa
pop
subl
hlt
int3
sbb
add
in
daa
mov
or
hlt
xor
movl
cmpsb
inc
mov
loopne
sub
cmp
pop
ljmp
pop
xor
aad
ss
test
fildll
sbb
gs
inc
pop
lods
push
add
xlat
sub
jge
push
popa
inc
push
into
nop
dec
xchg
stos
insl
adc
xor
cwtl
jl
ljmp
dec
adc
add
mov
jo
jp
and
mov
imul
ds
sahf
mov
mov
mov
enter
cmp
and
or
out
arpl
std
cld
mov
add
jge
sbb
and
sbb
pop
lds
push
sti
jnp
aam
pop
hlt
inc
xor
fs
pop
pop
push
dec
popa
into
or
scas
xor
sub
ljmp
notl
push
pop
mov
pop
xchg
inc
fistps
pusha
out
dec
std
in
decl
lea
lret
repnz
inc
aas
mov
add
scas
jbe
sub
cwtl
push
mov
rolb
fmulp
and
jno
cmp
or
add
dec
mov
es
aam
sti
xlat
dec
sub
jb
pop
es
inc
pop
lret
in
sbb
iret
movsb
add
repz
sbb
pop
int3
jmp
mov
or
mov
dec
sbb
stos
xchg
adcb
xchg
add
mov
dec
setl
shrb
add
out
stc
insl
lcall
jo
lret
jle
outsl
cld
mov
addl
repz
cwtl
lds
inc
rcrb
and
je
inc
fstpl
lods
stc
adc
cmp
fs
std
xchg
and
push
mov
incb
sbb
test
pop
cmp
insb
or
mov
mov
jmp
mov
add
je
lods
lods
out
dec
dec
add
mov
cs
es
loope
pop
xchg
push
mov
jb
cmp
sbb
cmc
imul
xor
mov
int3
nop
xor
mov
stc
mov
push
jo
stc
inc
and
push
movsw
std
xchg
mov
xchg
adc
pop
incb
inc
dec
cmp
push
jg
aaa
jno
adc
add
mov
lods
cli
and
mov
mov
mov
push
push
cld
gs
lcall
es
rolb
and
mull
jb
pop
aad
mov
sahf
bound
and
push
fimull
adc
mov
xchg
inc
insl
pusha
xchg
les
push
das
inc
bound
lret
out
jns
xorb
lret
testl
sub
lahf
lret
pop
cmp
loopne
imul
push
mov
mov
insl
ss
mov
insb
and
outsb
repnz
les
mov
push
frstor
dec
xchg
inc
test
imul
mov
mov
pop
and
lret
push
test
pop
xor
not
lods
xor
iret
fildll
lret
sub
lods
push
push
dec
enter
ja
cmp
xor
lret
adc
sbb
movsb
xchg
hlt
jmp
lock
mov
inc
lods
pusha
and
lods
or
xor
push
imul
shlb
in
adc
pusha
int
dec
clc
jnp
pop
xchg
aaa
sbb
push
cmp
sub
adc
inc
pop
jecxz
loopne
mov
sub
add
into
or
sub
cmp
sahf
add
cld
push
lea
aad
lds
xchg
jp
cmp
enter
mov
mov
ret
jne
testl
cmpsl
divb
fildl
addr16
inc
jo
sahf
jecxz
pushl
mov
mov
xor
pop
mov
addr16
dec
movsl
cmpsb
cwtl
dec
addb
xchg
jecxz
fwait
call
mov
mov
aad
xchg
dec
and
sbb
mov
add
fnstsw
adc
shl
mov
fldcw
mov
inc
pop
aad
dec
out
or
cmpsl
insl
inc
or
jb
and
mov
jg
jo
enter
les
inc
adc
xor
mov
in
jg
sub
icebp
jnp
xor
cltd
sub
ja
arpl
xchg
in
xlat
daa
mov
jno
mov
push
call
daa
push
sub
cmp
iret
mov
mov
add
lahf
das
ljmp
xor
in
jae
push
inc
testl
pushf
sub
adc
sbb
xchg
xor
in
cmp
loopne
push
scas
nop
cltd
in
cmp
lcall
mov
dec
pop
pop
xor
push
test
flds
sub
add
sete
popa
add
addb
pop
mov
imulb
fimull
add
jmp
pop
cmp
dec
lea
xchg
xlat
push
hlt
push
test
andl
inc
mov
adc
ja
inc
clc
or
pop
mov
or
aas
mov
fdivrl
out
sbb
cmp
insb
pop
mov
or
imul
aaa
sub
loopne
ret
add
jmp
lea
sub
ss
stos
lret
sbb
andl
mov
inc
inc
mov
inc
sub
not
mov
adc
repnz
inc
inc
push
cld
inc
mov
xchg
sub
ss
lret
popf
jle
or
push
mov
xlat
js
aaa
rcl
popa
mov
xor
sub
repnz
hlt
sbb
jo
jne
lock
icebp
push
cltd
dec
std
mov
push
inc
out
idiv
lods
or
sarl
inc
pusha
cmp
enter
add
xchg
push
mov
hlt
sub
add
jne
sbb
shl
jo
push
sbb
lcall
mov
pop
ret
mov
sub
mov
or
scas
cmp
mov
inc
add
sbb
aaa
stc
popf
mov
mov
xchg
ror
divl
inc
repz
push
push
dec
lods
inc
mov
add
dec
fstl
outsb
test
cwtl
loopne
sbb
dec
pop
test
xor
repz
fisttpl
testl
mov
push
mov
adc
shll
and
xchg
mov
lock
outsl
jmp
cmpsl
xorl
cltd
mov
lods
mov
xorb
shlb
ss
aaa
push
cmp
loop
jno
pop
or
mov
lret
cltd
push
pop
repz
xor
dec
mov
fidivl
xlat
xchg
pop
fnsave
pop
lcall
dec
cmc
or
push
int
push
xchg
iret
pop
cmc
mov
jge
into
filds
clc
cmp
pop
pop
jmp
int3
jno
mov
shr
xchg
lcall
stos
inc
xchg
jae
outsl
sbb
enter
mov
mov
add
or
or
sti
ret
cmc
call
sti
jno
gs
inc
fbstp
xor
std
pop
push
push
jne
loope
fwait
outsl
shrl
imul
jno
notb
fstps
xor
mov
sti
nop
decb
addb
test
or
sub
lret
sbb
clc
lds
loop
dec
mov
inc
repnz
faddp
dec
imul
in
xchg
insl
jbe
andb
es
fs
cmc
add
lcall
sbb
cli
lds
test
or
push
adc
lcall
mov
inc
xlat
inc
loopne
push
sub
repz
jno,pn
outsb
ds
lock
pop
bound
mov
popa
inc
mov
inc
xchg
dec
jp
cmp
fwait
pushf
es
movsb
in
add
lret
test
mov
jle
inc
xlat
lret
decl
and
add
mov
sub
int3
test
adc
les
imul
cmc
inc
xchg
outsb
push
cli
repnz
inc
hlt
into
xor
ret
test
sbb
and
push
xor
mov
inc
jns
mull
out
test
inc
lods
repnz
cmp
cli
rorl
xchg
adc
lds
or
int
fmuls
sahf
mov
clc
repnz
gs
jecxz
lret
xlat
fstps
and
loope
xchg
aad
pop
repz
clc
cld
pop
loopne
ss
aas
inc
nop
lea
int3
cmp
mov
dec
fnsave
fnstenv
in
cli
out
sub
push
mov
push
xlat
mov
iret
mov
ret
inc
loopne
pop
push
cmp
jbe
aaa
add
or
cli
scas
jbe
lea
das
cmp
inc
push
adc
fsts
into
mov
sub
out
imul
testb
push
cli
mov
repz
cmpsb
adc
xlat
movsl
and
std
sub
xchg
push
pmuludq
mov
fs
pop
ret
or
inc
mov
jnp
jno
mov
gs
js
scas
data16
push
cmp
inc
inc
xchg
lret
mov
xchg
addl
test
push
fisubrl
nop
cmp
jg
xor
and
dec
pop
imul
dec
mov
jl
mov
iret
or
or
xchg
push
repnz
shrl
xor
loope
mov
mov
ficoml
mov
mov
sbb
and
fstl
into
adc
mov
lds
cwtl
add
dec
nop
rcrl
or
push
shrl
inc
mov
ja
shlb
dec
inc
jecxz
sub
cmp
mov
dec
mov
out
int3
push
adc
std
cld
sub
lods
pop
or
add
or
and
test
pop
fistpll
jns
jge
arpl
mov
and
jg
cltd
and
cltd
xchg
add
pop
xchg
sub
ja
sti
fcoms
xchg
pop
jmp
movsl
mov
mov
mov
inc
pop
sarb
lea
and
cmp
mov
aaa
sbb
std
inc
and
pop
pop
loop
sbb
movsl
xchg
or
bound
fwait
fimuls
xor
daa
ficoml
and
jg
lcall
push
sub
imul
push
cmpsb
mov
cmp
stos
out
sbb
inc
jp
sahf
sbb
stos
sub
cmp
nop
mov
aaa
iret
popa
sub
add
add
fnsave
or
out
pop
mov
pop
mov
data16
pop
and
mov
sahf
shl
xchg
rcrb
sub
sbb
out
test
xchg
adc
rclb
inc
aad
dec
daa
lcall
xlat
add
imul
inc
in
xlat
notl
jl
outsb
xchg
push
test
mov
pop
fstps
add
data16
and
aas
mov
test
push
aaa
and
loop
cli
test
mov
ds
cwtl
add
sbb
call
pop
popf
and
add
xchg
stos
pop
inc
jmp
test
testb
jmp
js
or
push
sbb
dec
mov
test
lcall
mov
aas
push
and
xor
xor
sub
or
mov
fmul
sbb
sub
mov
pop
xor
xchg
sub
adc
and
push
and
and
jbe
mov
popf
pushl
add
pop
bound
adc
xchg
jne
mov
mov
lock
mov
and
mov
rcll
mov
scas
or
xchg
test
fstl
xchg
cmp
pop
lods
mov
mov
pop
cmp
loopne
sbb
popf
mov
fimuls
das
mov
mov
cmp
pop
scas
mov
aas
adc
xor
jg
jge
popf
xlat
mov
mov
scas
cld
cmpsb
lods
jp
sbb
sub
repz
out
popa
adc
adc
jnp
insb
popa
rorb
pop
data16
ljmp
test
pop
andl
jge
pop
insl
mov
mov
shrb
bound
mov
call
cmpsl
mov
adc
loopne
in
push
inc
xor
shlb
outsb
ret
pop
jne
in
cbtw
clc
fisubl
add
sub
stos
ja
and
iret
outsb
cs
roll
jge
sub
das
outsb
mov
aaa
adc
sbbb
test
dec
ud2
mov
adc
lds
jl
stos
mov
aad
cmpsl
sub
inc
sar
arpl
inc
sti
push
sbb
cmp
in
adc
stos
jle
andl
nop
jne
sbb
gs
add
mov
inc
cmpsb
xor
mov
sub
jle
ljmp
ds
xchg
fstps
pop
mov
adcb
or
dec
loope
adc
int
js
fwait
arpl
xchg
adc
shlb
push
jg
out
cmc
call
test
not
sub
mov
add
push
cltd
pop
rorl
lds
sub
mov
aaa
sbb
and
inc
outsl
sbb
test
outsl
adc
mov
repnz
mov
sub
cmpb
repnz
sub
mov
mov
rcrl
push
loop
stos
push
std
xchg
push
arpl
adc
mov
jne
jo
pop
in
inc
mov
clc
scas
pop
and
push
or
mov
arpl
fldcw
and
mov
jb
insb
xchg
in
xor
fistl
fdivl
arpl
insl
nop
cs
in
incb
push
in
add
iret
and
mov
mov
imulb
inc
sub
loope
cmpsl
popf
rcll
mov
pop
add
sbb
mov
mov
mov
xor
or
pop
mov
xchg
add
xchg
cwtl
xchg
cltd
sub
mov
lahf
xor
sti
or
push
sub
jb
jmp
xor
xchg
test
jle
call
scas
mov
fdivrs
aad
mov
xchg
jns
lahf
shlb
jbe,pt
cmpsb
pop
lret
in
pop
lret
or
jnp
ffreep
push
sub
je
inc
outsb
iret
mov
hlt
cmp
jg
sub
jecxz
sub
cmp
or
jg
inc
pusha
lods
les
lret
loop
and
sahf
or
das
jb
jns
dec
popa
dec
push
jl
aaa
push
fimuls
jno
icebp
sbb
add
popf
outsl
imulb
mov
iret
cs
add
cmp
rcrl
dec
mov
cmp
in
jb
out
push
repz
jb
xor
je
ficoml
pop
jg
mull
mov
dec
inc
stos
mov
and
mov
add
mov
movsb
xchg
pop
pandn
mov
flds
test
or
lods
jns
xchg
in
pop
mov
aaa
add
iret
insl
scas
mov
cli
dec
inc
jge
pop
aas
lds
mov
pop
push
push
pop
sbb
aad
mov
xchg
jg
movsl
xlat
xor
ds
repz
imul
dec
nop
decl
imul
push
call
fs
pop
bnd
insb
lcall
cmc
ficoml
or
cltd
and
jmp
push
sbb
inc
aas
inc
mov
jge
les
dec
inc
in
in
jb
mov
jmp
jbe
xor
adcb
mov
cld
dec
sbb
add
aaa
xchg
inc
jne
push
pop
imul
cmp
pop
adc
cmp
arpl
sbb
scas
insb
push
rclb
jbe
mov
mov
shrb
or
mov
out
jae
jecxz
add
arpl
pushf
cwtl
or
pop
fisubl
dec
xchg
rol
and
stos
jmp
jecxz
nop
xor
imul
pop
xchg
pop
inc
fdiv
mov
push
hlt
mov
leave
lret
inc
push
insl
stc
setp
xchg
xor
inc
mov
decl
sub
subb
jg
push
pop
xchg
push
ljmp
arpl
xor
stos
inc
idiv
add
cli
mov
insb
mov
inc
icebp
xchg
out
enter
jmp
aam
jb
dec
dec
test
fs
cld
sbb
jmp
mov
repnz
shll
cmp
mov
leave
push
pop
adc
mov
push
mov
inc
sub
test
cwtl
fistpl
addr16
repnz
pop
push
mov
xchg
xchg
inc
add
fisubs
push
scas
sti
xchg
adc
adc
test
rcrb
cs
add
sub
pop
inc
loope
jg
stc
jne
insb
jge
dec
testb
mov
mov
mull
or
sbb
jns
je
jecxz
mov
inc
push
inc
jmp
add
movsl
cs
xchg
sar
cmp
mov
pop
mov
and
ja
mov
sarl
push
and
ficompl
pop
sahf
outsb
out
xlat
scas
add
lret
fprem1
pop
dec
and
or
pop
fcoms
addr16
dec
clc
mov
and
and
hlt
insl
imull
out
hlt
add
jo
addr16
mov
or
cmc
in
rol
popa
dec
adc
jp
push
mov
movaps
outsl
mov
lods
ret
out
cmpsl
es
fsubrs
cmp
fldl
push
cmp
jb
xor
dec
loope
lods
fidivrs
mov
loop
pop
ret
mov
push
mov
dec
mov
mov
jne
add
jb
insl
sbb
mov
mov
int3
or
neg
cmpsl
sbb
or
mov
and
and
xor
and
jb
push
xchg
cmp
popf
jo
dec
adc
enter
add
and
stc
popf
negl
ss
jbe
dec
push
jo
add
and
jp
push
ss
and
mov
dec
in
push
fiaddl
stos
dec
cmp
imul
jnp
or
mov
sub
sarb
mov
inc
les
lods
orl
cs
jp
inc
pop
push
frstor
inc
cmp
or
mov
hlt
ret
jns
mov
and
push
cmpsb
aad
and
mov
dec
ret
sub
cmpsb
add
lret
xchg
push
movsb
xor
shlb
fsubrl
data16
add
shlb
pop
gs
data16
push
sarb
sub
cli
sub
mov
mov
xorb
outsl
jb
gs
sti
iret
xchg
inc
daa
rol
in
lds
lea
ret
xchg
div
add
test
jle
jo
mov
mov
aaa
dec
jno
or
repz
push
xlat
push
jge
cld
sub
sbb
jle
movsl
lcall
and
push
or
sbb
popa
cmc
push
stos
jecxz
sub
es
loop
repz
jg
xchg
aam
ljmp
fldl
sub
sbb
lock
imulb
push
enter
dec
push
nop
sahf
jle
lret
js
mov
insl
mov
lahf
sbb
stos
xchg
sub
xchg
cmpsb
mov
nop
pop
je
rcll
call
iret
mov
stc
ficomps
cmc
pop
js
fdivrp
add
jae
stc
fmulp
ja
jae
and
fs
lret
mov
mov
jo
xchg
inc
pop
stos
pop
outsl
pop
mov
sub
xor
imul
aad
sbb
in
mov
decb
jp
loope
clc
mov
mov
into
adc
data16
mov
fdivr
sbb
out
iret
cltd
in
imul
sub
push
pop
dec
or
push
mov
push
add
inc
jns
dec
dec
jns
jecxz
jb
lods
or
idivb
test
mov
insl
pop
es
sti
mov
sbb
je
int
loop
jge
stc
repnz
xor
push
movsl
pop
aad
sub
xchg
jle
repnz
fwait
aam
push
aaa
cmp
and
pop
or
divb
into
js
mov
pop
xor
dec
xchg
mov
out
mov
and
jno
sti
ret
outsl
jb
aad
mov
jmp
pop
and
in
notb
mov
shll
inc
bound
pushf
jae
in
inc
pop
push
test
add
aas
aaa
adc
xchg
popa
dec
mov
lret
sub
jae
icebp
mov
adc
cmp
fmull
pop
sub
pushf
push
jmp
jnp
aad
cmp
dec
outsl
sub
fwait
and
push
and
jle
sbb
loopne
xchg
add
stos
inc
sub
dec
jne
arpl
mov
dec
mov
std
inc
insl
cmpsl
pop
fwait
push
mov
out
adc
xlat
and
mov
outsl
jle
cltd
adc
insl
sbb
ja
mov
pop
int3
mov
add
shlb
test
ds
fs
sbb
enter
mov
les
stos
lcall
int
loopne
dec
mov
inc
inc
test
scas
xchg
sbb
or
push
push
mov
sahf
add
pop
cmp
in
in
sub
negl
bswap
inc
xchg
push
fsts
cwtl
in
ret
mov
mov
insl
pusha
movsl
fisubs
cltd
sub
cmp
xchg
bound
mov
mov
cli
mov
sbb
ljmp
and
movsb
jns
ds
or
push
jae
mov
insl
test
lock
fwait
inc
mov
pushf
fcomps
xor
scas
adc
pusha
mov
add
pop
xchg
ds
xchg
push
jae
sub
insl
sub
adc
sahf
jmp
and
leave
daa
scas
xchg
fstpl
mov
stos
add
jns
push
jp
das
ds
shrb
aas
popa
outsl
cltd
xchg
rcr
push
sub
andb
repnz
inc
daa
std
shr
and
xor
scas
push
push
outsl
pushf
mov
dec
std
or
ja
scas
mov
test
sbb
inc
jo
sbb
mov
shrb
pusha
fwait
lock
outsb
aam
imul
mov
outsl
mov
pop
mov
push
outsb
mov
jno
pop
and
xchg
notb
loopne
into
mov
adc
sti
xchg
mov
leave
dec
loop
pop
mov
test
inc
inc
adcb
imul
mov
pop
in
aad
add
data16
shlb
pop
mov
enter
movsl
mov
push
fs
cmp
lret
dec
push
call
or
cmp
mov
js
imul
repnz
jg
mov
xchg
push
dec
push
aad
in
in
inc
lods
stos
out
ja
push
mov
inc
rclb
leave
popa
add
cmp
xchg
sti
pushf
addr16
sbb
test
popf
loopne
in
jmp
mov
jns
ret
jo
inc
pusha
and
test
insl
enter
sub
mov
jmp
das
in
rcl
inc
les
jbe
cwtl
or
add
push
aas
mov
mov
pop
jnp
sbb
inc
ret
mov
dec
clc
cltd
cmp
add
and
push
gs
add
popa
orl
insb
or
shlb
outsb
lods
sub
aas
mov
mulb
sbb
enter
xchg
xchg
cmp
sub
dec
lea
push
or
icebp
sahf
fsubr
mov
push
sub
push
in
mov
pop
dec
and
xchg
push
pop
enter
cld
mov
jno
aam
test
sub
mov
mov
ret
inc
sbb
adc
cld
inc
mov
cmp
shl
jg
lret
outsb
and
mov
jne
jmp
cwtl
arpl
xchg
jae
adc
and
test
adc
cli
or
lods
jp
lahf
fldenv
imul
enter
and
cmp
sbb
dec
insl
into
mov
int3
bnd
ret
xchg
cmpsl
testl
sbb
mov
clc
loopne
int3
sub
mov
add
shrb
or
add
jbe
jle
xchg
dec
push
adc
mov
sarb
adc
and
fnstenv
addl
mul
xor
subl
in
clc
adc
add
sbb
sub
ror
adc
xor
lea
mov
out
mov
sub
in
stc
loope
mov
xchg
jb
mov
ja
jp
loope
push
xlat
fwait
iret
rcl
mov
cli
dec
mov
cmp
mov
scas
std
push
adc
out
mov
rcrb
fs
or
jo
cmpsb
push
out
mov
loope
pusha
mov
cmpsl
xor
add
lcall
xor
div
sub
xchg
cltd
icebp
test
ret
rorl
mov
sbb
xor
scas
stos
lds
test
and
ja
xchg
and
pop
or
sti
and
lcall
int
xchg
mov
pop
pusha
fstpt
inc
cmp
mull
dec
mov
fwait
pusha
mov
les
push
test
add
in
nop
repz
mov
in
pop
mov
mov
pop
sub
cmpsb
jle
adc
lret
dec
pop
aaa
mov
leave
pop
in
ja
jg
inc
jns
pop
jae
ds
pop
pop
xor
leave
mov
cwtl
xor
jmp
es
jns
pop
in
repz
nop
xchg
mov
stos
leave
inc
jb
lods
sub
stos
sub
adc
add
jo
dec
popf
bound
jg
mov
push
cmp
dec
mov
adc
inc
bound
jae
mov
xor
push
in
sbb
repnz
daa
lock
lock
jg
int3
xor
or
push
out
decl
xchg
dec
pushf
inc
insb
xchg
xchg
ret
adc
mov
cmp
shll
in
dec
jnp
fcoml
fwait
es
cmp
out
jmp
pop
or
cmpsl
dec
cmpsb
jmp
mov
dec
sbb
and
dec
sbb
xchg
popf
out
push
mov
call
mov
icebp
jns
adc
jb
mov
mov
mov
das
add
adc
mov
sub
sbb
mov
subl
and
ss
nop
imul
call
aas
lock
psubb
mov
push
mov
in
push
cmp
xor
mov
add
push
jno
pop
cmp
les
sub
into
sbb
in
hlt
dec
mov
inc
clc
outsl
ss
and
and
jne
iret
mov
mov
lahf
dec
push
fs
sub
cmc
add
mov
xor
cmp
pop
jp
xchg
shll
test
movsb
test
out
jge
jle
dec
dec
lret
jge
or
adc
push
loop
jno
jno
loope
and
dec
lret
stos
mov
in
or
pusha
sbb
testl
adc
subb
addr16
sbb
scas
cmc
out
pop
mov
sub
pusha
mov
or
and
inc
gs
jmp
mov
popa
xchg
es
cld
test
ja
xchg
xchg
sub
xchg
push
or
inc
or
lds
push
dec
push
ret
lret
loopne,pn
xlat
cmp
mov
rcr
sub
xor
inc
cmpsl
cmp
popa
pop
jnp
insb
outsl
out
sub
hlt
mov
leave
xchg
test
sbbb
aam
dec
mov
out
pop
mov
outsb
shl
fwait
push
xchg
or
adc
imul
pop
cmp
mov
jge
fldz
and
pop
stos
inc
scas
jne
test
out
xor
jbe
adc
xlat
xchg
sbb
outsl
movsb
push
pop
cmpsb
jle
sti
sub
add
nop
add
and
or
push
add
dec
push
push
sub
dec
les
xor
dec
loope
in
arpl
sahf
push
xchg
dec
in
imul
ss
stos
push
movsl
cmp
int
dec
sub
int3
sub
les
jl
rcrl
lret
cmp
lret
sti
add
movsl
out
fstpl
and
jle
mov
sub
push
mov
push
incb
mov
fisubl
push
leave
es
or
and
and
push
and
jae
xor
cwtl
sub
stos
aam
out
dec
xchg
dec
or
sahf
out
dec
idivl
xor
cmp
fld
mov
mov
push
xchg
inc
mov
xor
and
mov
repz
call
stos
jo
fsub
push
inc
lock
add
lea
adc
push
lcall
int
cmp
hlt
mov
mov
repz
sub
push
stos
stos
pop
push
fisubs
bound
and
rclb
xor
mov
mov
mov
jno
sbb
mov
sahf
jmp
mov
inc
jnp
pop
out
pop
and
mov
xchg
push
mov
add
in
cli
or
push
loopne
mov
jge
nop
lods
lods
out
xchg
mov
ret
push
loope
enter
jbe
fmuls
add
fisubs
mov
sub
sbb
les
lea
mov
jl
lahf
cmovbe
push
je
mov
adc
loopne
les
fimuls
inc
std
and
xchg
inc
mov
adc
push
sbb
arpl
inc
icebp
cmpsl
test
jl
pop
jnp
cmp
cmp
lahf
scas
daa
dec
push
dec
adc
ljmp
test
jae
xchg
out
push
xchg
arpl
cld
add
inc
lret
in
lds
into
mov
inc
sub
imulb
int3
jns
jns
scas
int3
not
daa
rcl
sti
inc
push
jo
daa
insl
leave
and
insb
dec
xlat
or
jle
mov
iret
iret
imul
das
lds
icebp
pop
xor
leave
dec
out
mov
popf
push
pop
xchg
hlt
mov
sub
cmpsb
push
pop
mov
xlat
sbb
adc
mov
or
push
test
cmp
pop
xor
cmp
sarl
sbb
jl
js
mov
mov
push
xchg
fisubl
pop
inc
and
xchg
pop
jno
imul
sahf
outsb
lret
sbb
std
mov
ret
test
xor
push
xchg
sbb
push
dec
mov
jne
or
cwtl
pop
sub
mov
lods
std
out
das
xlat
jmp
imul
mov
int
in
das
xorb
lds
xchg
shrb
cli
insb
enter
jbe
ja
sub
call
leave
add
xlat
arpl
out
shll
int
pop
dec
pushf
or
cmp
jb
mov
mov
clc
and
sub
filds
addr16
push
push
ror
cwtl
ja
stos
mov
iret
dec
add
mov
insl
dec
les
call
inc
cwtl
adc
es
xor
mov
js
cmpsl
mov
xchg
sub
mov
out
inc
push
or
mov
pusha
stos
jge
mov
mov
or
push
int
sub
pop
xchg
xor
xchg
popa
inc
aad
fimuls
push
mov
lods
lods
pop
xchg
pop
daa
and
push
loope
es
add
mov
dec
cltd
mov
mov
sbb
mov
rcll
and
or
mov
xor
push
popf
aas
aad
sbb
frstor
jne
or
xchg
or
iret
mov
inc
and
shrb
push
xorb
cmp
mov
gs
pop
sub
insl
imul
jmp
popl
jne
jl
adc
xchg
dec
adc
jmp
push
pop
xchg
xchg
pop
jo
or
loop
mov
out
stos
lock
lret
or
or
mov
loope
dec
push
xchg
shl
dec
lea
add
mov
fsubl
mov
xchg
fs
cmp
inc
iret
adc
mov
scas
jp
inc
testl
xchg
std
push
orb
jg
mov
inc
mov
ror
pop
je
pushf
aas
leave
int3
repnz
push
fsubrp
stos
cwtl
sbb
scas
mov
push
imul
xor
nop
mov
jl
mov
repz
xchg
mov
lds
sahf
inc
pop
xor
cltd
dec
loop
icebp
xchg
jne
loopne
js
decb
xchg
retw
dec
sub
or
stos
aam
das
call
sbb
andb
inc
out
jmp
xchg
scas
enter
scas
imul
sub
push
jno
inc
sub
pop
push
xor
outsl
sub
lahf
and
sub
lds
inc
mov
in
fsubrs
jmp
cwtl
and
push
hlt
mov
leave
shlb
inc
and
jne
pop
xor
push
aam
out
fnstenv
gs
int3
cwtl
pop
loopne
add
mov
shrl
xchg
mov
insl
sbb
loope
sbb
lcall
push
or
inc
mov
cmp
repz
pop
andb
movsb
push
push
xorl
addb
jmp
ljmp
stos
and
rorl
call
adc
push
adc
mov
lds
sbb
jg
sub
ja
mov
pop
xchg
xlat
jns
int
orl
das
lods
mov
js
cmp
sahf
es
enter
into
lret
shl
sub
xor
mov
fisubrl
and
test
loop
xchg
fisubl
add
in
xchg
push
cwtl
pusha
imulb
ja
ds
std
push
pop
sbb
sub
pop
js
mov
cmp
xchg
cmp
xor
ds
push
jmp
xchg
ds
daa
dec
mov
les
pop
es
addb
push
repnz
xchg
pop
add
and
stc
jmp
and
cmp
std
dec
rcrl
out
jl
adc
xchg
cli
adc
adc
cmpsl
xor
enter
or
or
hlt
fbld
or
loop
imul
and
testb
les
sbb
sbb
in
test
inc
pushf
xchg
add
loope
xorb
pop
cmp
mov
aam
or
jns
ror
ljmp
fcom
or
sarb
adc
lcall
xor
mov
insl
mov
cmp
or
out
dec
mov
test
pop
mov
fwait
pop
pop
mov
stc
jmp
clc
dec
clts
test
inc
subb
repnz
aas
jge
xchg
push
into
stc
mov
mov
push
mov
mov
movsl
pop
ds
outsb
mov
shl
je
outsl
aaa
data16
movsb
sbb
aad
mov
out
adc
dec
scas
mov
fstp
sub
push
push
je
imul
js
sti
stc
sbb
pop
arpl
clc
stos
and
pop
cli
or
bound
push
sub
aas
in
stc
es
pushf
xchg
scas
mov
lret
adc
test
addr16
das
mov
into
push
sbb
int3
orb
sub
negb
ret
mov
mov
cltd
cmc
sahf
pushw
xlat
mov
call
cmpsb
adcl
popf
js
iret
mov
push
mov
adc
dec
sbb
push
pop
clc
pop
or
fimuls
cli
jg,pt
mov
pop
pop
or
popa
inc
les
xchg
iret
dec
jne
push
jnp
xchg
push
lock
jne
add
ficoms
arpl
faddl
push
dec
sbb
dec
add
xchg
mov
jno
or
lcall
scas
mov
push
sbb
jl
mov
pusha
sub
cmp
ret
adc
or
jecxz
leave
lods
fs
and
enter
xchg
in
pop
push
cmp
aam
fcoms
push
cmp
out
and
out
inc
jl
into
jp
call
mov
dec
int
jle
adc
fldt
sti
out
push
out
dec
cltd
dec
ret
gs
adc
xchg
pop
cwtl
pop
cld
sbb
stos
pop
add
adc
dec
pop
adc
imul
cmp
out
notb
cmp
jle
sub
sahf
mov
clc
push
push
sbb
test
pop
ret
dec
push
mov
pop
dec
sub
lea
jns
xorb
mov
pop
mov
mov
mov
out
sahf
mov
inc
xor
and
daa
shll
outsl
inc
aam
js
loopne
loop
xchg
fdivrl
cmp
dec
mov
addb
pop
je
mov
jne
arpl
cs
frstor
xchg
andl
push
cwtl
adc
jae
jb
pop
mov
fldt
lret
sub
adcb
sti
mov
pop
mov
je
rcll
pop
and
arpl
cltd
ljmp
ds
mov
jecxz
icebp
gs
aaa
insb
or
repz
mov
xchg
incb
pusha
rcrl
sbb
decb
jge
out
dec
push
or
pop
lock
mov
pop
mov
adc
repnz
add
adc
push
sbb
lret
test
or
jmp
xchg
and
xchg
push
mov
cmp
xorl
cld
mov
lcall
fmul
mov
push
cli
dec
mov
lea
add
jae
push
xchg
int
mov
out
rcrb
sub
xor
sub
mov
push
mov
pop
sub
cmp
pop
sbb
loope
js
fs
mov
add
cmpsb
add
sti
pop
sbb
out
fcoms
aaa
in
pop
push
mov
xlat
add
test
pop
and
sub
dec
sbb
and
adc
sub
push
and
jmp
testb
ds
sub
push
cmp
jnp
mov
xchg
jp
mov
lret
fucomi
mov
fwait
dec
mov
aas
imul
adc
pop
jecxz
push
mov
lret
add
lahf
aam
and
push
pop
jnp
sti
mov
sub
int
bound
sbb
repz
jb
cld
push
test
pop
loope
and
rcrb
lret
xor
push
xchg
test
sbb
lret
xor
jg
add
and
jnp
divl
pushf
cs
dec
push
jno
aad
xchg
aaa
xor
fisubrs
adc
and
mov
or
ds
pusha
jo
lahf
mov
or
jp
int3
sub
and
jae
gs
fmuls
jg
push
jl
mov
loopne
add
lcall
sar
inc
dec
inc
sti
xchg
jo
push
dec
xchg
cmc
push
jle
xor
push
cmp
push
cwtl
roll
les
xlat
loop
lods
mov
dec
sahf
es
movsl
ja
popf
out
hlt
push
lods
divb
mov
daa
imul
fstps
cmp
jg
out
pushf
jno
pop
cmp
adc
pop
dec
mov
test
lret
sub
fcoms
stos
push
ljmp
jne
stos
or
mov
or
fstps
dec
pop
imul
adc
sahf
test
dec
fidivl
inc
test
cltd
cmp
adcb
pop
lahf
add
in
stos
repz
leave
mov
inc
jge
inc
push
loopne
adc
fisttpll
jae
addr16
call
aas
sbb
js
pop
xchg
rol
push
filds
or
adc
jge
inc
ja
jns
ret
nop
pusha
lea
out
add
xchg
outsl
sub
mov
mov
xor
adc
sub
cli
xor
push
jae
aad
xor
pop
jge
cltd
mov
push
repnz
inc
shlb
dec
push
out
sbb
out
xchg
inc
add
movsb
hlt
pop
mov
mov
in
jmp
push
cmp
sti
cmp
add
adc
pop
or
scas
test
cld
xchg
sub
imul
mov
loop
out
rcll
cmp
xchg
ror
adc
pushf
arpl
xor
sub
leave
inc
rclb
stc
fistl
mov
nop
rcll
and
aas
xchg
push
outsb
mov
shll
arpl
call
cmp
stc
mov
add
or
and
aaa
out
push
cmp
loopne
rep
pop
jmp
fidivrl
add
sbb
sbb
ficoms
aam
and
adc
insl
in
ljmp
and
lea
aas
sti
inc
leave
adcb
fimuls
scas
outsl
data16
cs
je
inc
pop
push
or
cld
dec
mov
pop
xchg
nop
cld
in
scas
sbbb
sub
xor
cld
push
arpl
fsubs
pop
xchg
cltd
push
pop
stos
jl
add
add
imul
inc
in
filds
sub
std
test
xchg
mov
ljmp
push
test
inc
mov
in
and
dec
or
test
xchg
push
outsl
mov
adc
repnz
sub
out
test
lahf
mov
addb
lds
or
repnz
mov
mov
lods
stc
mov
jl
sbb
mov
inc
fldcw
pop
mov
loopne
dec
out
fidivl
repz
leave
mov
fsubr
lret
lahf
xor
fdiv
push
aam
or
lds
mov
in
call
iret
and
dec
mov
mov
push
sub
outsl
push
fists
leave
call
mov
scas
test
cmp
repz
add
fisttpll
jno
jge
push
sbb
aaa
lock
cmp
lods
shrb
sub
movsl
jns
jns
stc
mov
ja
loope
icebp
mov
mov
mov
jecxz
pop
out
push
loopne
push
cmp
stos
mov
push
insb
xor
xor
mov
ret
jl
paddsw
stos
push
imulb
test
fsubrl
adc
fs
fnstsw
fstps
jnp
in
xchg
sbb
arpl
cwtl
out
les
daa
mov
mov
sbb
or
mov
mov
enter
mov
jae
test
push
xlat
out
inc
cli
mov
clc
pushf
xchg
in
mov
jo
ret
mov
add
xchg
ret
xor
popa
movsl
fnsave
mov
mov
lcall
xor
mov
hlt
scas
lret
sbb
xchg
loope
or
iret
incb
aaa
or
imul
hlt
aaa
shl
sbb
ja
in
push
mov
push
jmp
inc
fs
mov
das
jge
cmp
ss
pop
xchg
into
insb
mov
hlt
and
das
fiaddl
nop
cld
out
mov
insb
loope
lock
mov
shlb
dec
mov
or
pop
enter
hlt
shll
stos
sub
adc
cmpsl
jle
or
hlt
xchg
xchg
pop
and
cli
xor
lods
mov
sub
sarb
cmp
sub
jne,pt
scas
lods
cmpl
jecxz
mov
xor
iret
push
shlb
inc
sub
push
daa
test
std
rolb
mov
scas
jp
in
cmpsl
pop
inc
addr16
idivl
es
push
adc
ja
outsl
aad
pop
arpl
stos
push
rcrl
out
clc
imul
dec
xor
mov
out
push
aad
pop
aad
enter
sub
push
jecxz
dec
lods
cltd
jmp
mov
adcb
aad
negb
dec
mov
decl
sarb
mov
mov
lahf
testb
lea
push
lock
cmp
mov
xor
imul
stc
xor
push
ljmp
sbb
in
pop
jno
scas
fisubrs
mov
jb
mov
push
pop
mov
stos
push
out
scas
sbb
pop
outsl
hlt
out
das
and
pop
mov
cmp
jl
push
cs
insb
adc
lcall
push
popa
xchg
inc
ret
pop
jno
lds
sub
pop
xor
fists
cmp
flds
mov
sub
dec
cltd
dec
nop
cltd
inc
adc
enter
fists
test
rorb
in
sbb
cmp
adcb
and
fisubrl
nop
sbb
cwtl
test
sbb
arpl
mov
xor
inc
add
enter
into
mov
test
mov
out
xor
add
add
iret
or
fdivr
mov
lret
in
jo
aas
mov
adc
cmpb
lds
stos
dec
bound
pop
test
jbe
mov
xchg
ret
xor
sub
imul
jg
sbb
adc
flds
xchg
ficoms
pop
jl
dec
adc
adcb
cltd
xor
or
sub
push
fsubrl
hlt
cmp
addr16
push
and
jae
cmp
sub
and
cmp
pop
adc
into
push
mov
rcrl
add
outsb
loopne
xlat
gs
les
jne
icebp
jecxz
lock
mov
pushf
cmpsl
int
or
jo
cmp
pop
jl
jno
push
push
loopne
mov
roll
inc
es
xchg
pop
test
shrl
in
mov
sub
jb
jnp
es
cld
loopne
pop
fdivrp
and
jb
daa
fwait
aas
cwtl
ljmp
cli
in
xchg
mov
enter
nop
stos
dec
or
and
fs
out
cmp
sti
shl
add
mov
mov
cwtl
aad
scas
repz
jbe
mov
sub
push
int
adc
nop
jns
push
call
xchg
cmc
add
xorb
shlb
adc
pop
stos
push
jne
mov
mov
nop
leave
sub
and
pop
adc
divb
out
cmpsl
sbb
in
sti
test
add
test
ljmp
fdiv
jne
jo
cltd
cmc
inc
add
lods
mov
sbbl
movsb
scas
outsl
mov
lret
lret
stc
xchg
adc
xchg
fsubrs
cmc
dec
xchg
pop
mov
das
testl
fistps
loop
sub
jb
out
push
cmpsl
cmp
adc
push
sub
sbb
xchg
cmp
imul
mov
push
cs
push
xchg
push
add
inc
es
sub
leave
add
sbb
dec
mov
into
imul
jno
pop
push
lods
outsb
adc
pop
jnp
mov
pop
push
inc
add
test
xchg
pop
les
pop
incb
jne
int
dec
pop
das
rorb
lea
mov
mov
xchg
mov
mov
pop
xchg
cmp
xlat
ret
fsubp
xor
frstor
cmp
movsl
shrl
xor
mov
push
leave
insb
adcb
out
adc
cs
cmpsb
push
outsb
out
daa
inc
xor
pop
mov
lods
stos
ds
mov
testb
ja
movsl
movsl
out
popf
jb
or
cld
imul
iret
ret
sbb
xor
mov
jb
cmp
jecxz
mov
or
pop
lods
cwtl
addr16
cmp
mov
inc
lret
push
mov
mov
xchg
inc
pop
popa
lock
mov
and
jle
xchg
int
cmp
xor
push
movsl
jo
dec
divb
clc
mov
and
movsb
sahf
jmp
and
mov
pop
into
mov
loop
orb
pop
xchg
pop
clc
rorl
fsub
icebp
adc
enter
shlw
and
popf
stos
scas
fidivrs
fildll
cmp
cltd
mov
cmpsb
xor
repz
xchg
mov
inc
add
sbb
cmp
cmp
lcall
shlb
lock
add
daa
xchg
cmc
xchg
xchg
inc
sub
sbb
pop
and
or
adc
and
sub
xor
leave
outsl
movsb
mov
out
pop
pop
mov
jns
push
mov
repz
mov
ret
fimull
out
push
jne
aaa
mov
lea
fldcw
push
cmp
idivl
mov
insl
dec
mov
movsl
loopne
cmpsl
lods
fbld
aam
push
out
xchg
icebp
les
orl
adc
xor
ja
cmpsb
in
insl
int
pop
es
mov
push
das
sbb
pop
adc
shlb
dec
test
scas
xor
pop
inc
jecxz
mov
dec
mov
mov
pop
mov
dec
jns
movsl
sub
or
mov
mov
scas
mov
mov
and
mov
pop
mov
cmpl
adc
movsb
mov
movsb
xchg
mov
lret
xchg
xchg
pop
roll
sti
push
imulb
add
fdivl
aad
das
pop
daa
cmpsl
rcrb
and
jnp
fistpl
cmp
mov
add
jo
in
xlat
mov
inc
xchg
cmpsb
das
pop
and
stc
test
sti
lods
fwait
cmpsl
hlt
femms
cmp
push
fnstenv
push
jnp
add
int
push
jecxz
dec
jne
ret
imul
dec
and
popa
lret
mov
in
jns
fsubrs
xchg
test
daa
bound
pusha
or
inc
inc
adc
jnp
cltd
mov
movsl
cli
pushf
inc
cwtl
pop
adc
pop
nop
mov
fiadds
push
into
cmp
mov
shrb
pop
ficoms
jnp
mov
fwait
cwtl
aas
lret
dec
add
jne
test
push
jno
ret
dec
jno
in
rorl
pushf
repnz
inc
pop
jge
dec
pop
jb
or
xchg
fstps
sbb
xor
xchg
sub
push
xchg
sub
test
add
cmp
sub
aam
sbb
cltd
xor
cmp
fistpl
mov
jecxz
sbb
push
jle
cli
dec
push
sbb
xor
and
orb
fcoml
imul
sbb
rcl
jae
lret
pop
negb
jg
aaa
scas
mov
lcall
xchg
mov
movsl
fistpll
jmp
stos
aad
arpl
xor
icebp
push
int3
inc
mov
pop
and
dec
mov
std
mov
jo
scas
movsl
lcall
push
jle
lcall
addb
adc
inc
sbb
popa
scas
cmp
push
iret
fcom
aaa
or
inc
sbb
popw
pop
imul
mov
jne
and
and
dec
mov
xchg
lea
ficoml
add
mov
sbb
data16
in
adc
push
es
dec
cmpsl
push
ret
fidivs
loop
sub
data16
loopne
cltd
lcall
dec
dec
lea
xchg
dec
popa
dec
icebp
movsb
out
outsl
sub
mov
inc
loope
pusha
sbb
mov
xor
add
xchg
leave
int3
inc
sbb
add
sbbl
sub
xchg
mov
cmpsl
xor
rolb
jle
cmp
out
js
or
inc
aam
addr16
lea
mov
cwtl
aas
clc
imul
jg
aad
or
insb
pushf
jns
lods
inc
cmpl
lds
mov
inc
push
int3
push
inc
or
adc
inc
test
mov
mov
xor
or
shl
rcll
jae
add
pop
les
sbb
push
fcomps
xchg
jecxz
xchg
pop
and
add
xor
test
or
mov
psllw
ret
cmpsl
mov
stos
push
jo
cmp
int
imul
jmp
or
shlb
mov
or
outsl
dec
ds
or
in
jno
pop
mov
imul
add
adc
pop
mov
dec
jns
pop
push
jge
bound
push
fadds
dec
mov
in
mov
es
jg
negb
fsts
pop
stc
cli
sub
outsl
xlat
or
lcall
scas
jo
insb
inc
mov
sub
dec
add
leave
or
mov
int3
shl
dec
in
lcall
insl
cltd
stos
xchg
pop
out
dec
jae
jp
jns
std
mov
xchg
cmp
js
imul
dec
dec
pop
js
jno
mov
in
dec
cld
ret
pushf
inc
shll
add
insl
imul
icebp
push
clc
add
pop
sub
sbb
decb
cmp
in
leave
mov
adc
scas
gs
sbb
jae
sub
push
or
pop
adc
xor
push
inc
jp
bound
inc
inc
and
pop
imul
movsl
lahf
mov
movups
or
mov
repnz
stos
hlt
fwait
sqrtps
rcl
repz
mov
jecxz
aaa
in
popf
out
aas
adc
aam
sbb
add
imul
iret
out
lea
fldcw
sub
test
mov
push
pop
pop
mov
and
je
hlt
sbb
lahf
outsb
xor
push
sbb
out
dec
push
adc
fbstp
cmpsb
test
movsb
push
sub
add
repz
xchg
and
rolb
les
add
or
in
aaa
add
cmp
test
orb
mov
jae
mov
aam
and
mov
inc
mov
push
jle
and
mov
pop
es
adc
repnz
aas
sub
jl
jge
sub
cmp
push
cmp
lret
inc
jge
fs
hlt
xchg
inc
fstpl
aam
push
fwait
neg
fisubl
cs
andl
mov
mov
sub
idivb
mov
fdiv
jno
push
roll
pop
xor
mov
and
xor
cli
push
jp
pushf
bound
lods
cmp
mov
mov
repnz
aaa
xor
mov
pushf
dec
das
sbb
push
mov
insb
cli
push
sti
xchg
out
jp
mov
leave
and
sub
sbb
std
sub
or
aas
imul
outsb
pop
jae
xor
inc
sbb
ljmp
lret
fdivrp
popa
cmc
sbb
push
pop
jne
loopne
xchg
pop
mov
mov
xor
gs
shrl
std
cld
dec
mov
mov
inc
dec
ljmp
push
cli
cmpsb
ds
enter
repnz
xchg
xor
mov
call
data16
cltd
popa
loope
icebp
sub
pushf
fsubrs
or
inc
pop
mov
aad
stos
movsb
cmp
paddd
jmp
jns
sbb
inc
mov
lods
and
ja
int
cmp
lret
add
and
insb
cmp
cmp
dec
pop
aam
jg
popa
add
push
jo
sbb
xchg
cmp
or
dec
gs
nop
packuswb
mov
jb
sbb
int
cmp
xor
imul
jle
jle
leavew
sbb
mov
xchg
jg
int
inc
jo
adc
cmpsl
or
fisubl
cmp
ficoml
push
das
imul
sbbl
in
pop
addr16
push
in
into
out
jg
fnstenv
xorl
in
cmp
and
popf
aam
mov
xchg
insl
xor
xchg
fwait
pop
cld
popa
jge
fdivrl
loop
ljmp
mov
inc
sub
cmp
jbe
push
dec
popa
xor
je
sbb
add
lret
imul
sbb
shrl
imul
sti
mov
mov
xchg
or
movsl
push
pop
dec
bound
je
ret
cltd
inc
push
cmp
lret
jb
in
push
addr16
push
xor
jbe
popa
out
jnp
and
pop
xor
add
mov
orl
imul
pop
in
fisubl
add
int
fstl
out
int
mov
data16
lea
lock
popa
dec
jne
mov
in
js
jl
out
daa
and
jp
jo
dec
pop
xor
loopne
mov
out
ret
adcb
sbb
xchg
cmp
andl
jmp
sbb
or
jg
aaa
mulb
mov
mov
mov
out
adc
in
xor
push
push
mov
push
and
ss
insb
cwtl
lea
mov
jne
lock
hlt
push
jecxz
mov
outsl
fadds
adc
xchg
mov
adc
pop
loope
subb
lret
sbb
or
dec
jne
test
jmp
orb
sub
push
or
mov
cmovbe
add
cmp
cmpl
jl
pop
out
loop
mov
pop
scas
sbb
mov
ss
sbb
xor
mov
push
out
test
loopne
add
jge
in
test
mov
outsb
popa
adc
stos
je
push
jae
jno
pop
ret
outsb
xor
cwtl
std
cmp
pop
shll
cld
sbb
orb
cmp
insl
push
push
dec
mov
push
push
jmp
push
push
add
pop
cwtl
sahf
mov
js
add
jg
add
lcall
adc
mov
into
xor
imul
movsb
mov
and
sarb
pop
and
push
sahf
lcall
xchg
jg
pop
pop
clc
in
jo
add
popf
mov
jl
push
shl
adc
mov
daa
sbbl
adc
and
nop
data16
xchg
out
pop
outsl
addr16
iret
mov
sub
repz
imul
iret
out
jg
pop
or
xchg
mov
jge
inc
mov
push
inc
fstpt
ds
push
sbb
repz
push
push
arpl
adc
dec
add
push
pop
push
xchg
inc
jne
jg
lock
data16
lods
stos
or
cmc
jp
adc
imul
pop
mov
stos
jge
enter
push
mov
dec
pop
stc
dec
xchg
xor
enter
or
test
lea
test
push
adc
pop
fbstp
leave
inc
rcll
es
push
xchg
mov
cmp
cmp
insb
rcrl
repz
hlt
test
or
fisubrl
orl
stos
add
adc
jb
out
cltd
lret
in
xchg
mov
ret
cmp
daa
dec
imul
push
aas
out
sbb
ret
mov
mov
js
xchg
mov
xchg
idivb
add
ss
popf
mov
jo
pop
lods
les
push
dec
test
mov
inc
ja
push
push
push
movsb
aam
adc
mov
pushf
xchg
lea
lea
mov
sub
push
xchg
mov
out
push
and
stos
and
inc
aam
mov
iret
repz
stc
xorb
or
mov
xor
faddp
das
dec
pop
and
sub
xor
es
push
inc
lret
stos
shl
add
into
or
push
push
mov
mov
es
in
sbbb
jmp
xchg
push
jge
test
add
jmp
inc
ds
jle
pop
ficoms
jle
mov
call
cmc
or
and
sub
dec
aad
fsubp
les
stc
scas
ja
jne
jmp
imul
xor
add
dec
idivl
sbb
push
sets
and
loopne
add
adc
js
xor
mov
call
xlat
in
mov
inc
pop
test
addl
pop
or
or
stc
mov
pushf
lret
and
icebp
pop
pop
stc
ljmp
lret
jl
mov
lods
inc
mov
mov
xor
xor
sahf
lds
hlt
mov
or
and
mov
add
ljmp
fldcw
fstps
adc
adc
dec
sar
dec
enter
fs
gs
xchg
aad
ret
dec
stos
dec
xor
leave
cmp
mov
aas
ss
pusha
add
fcoms
mov
sbb
xchg
xchg
int3
js
jg
cmc
insb
dec
shrl
pop
mov
jge
cmovg
pop
mov
add
bound
loope
in
pop
dec
mov
in
in
out
jmp
icebp
jmp
mov
jo
dec
dec
lods
repnz
jmp
dec
pop
movsl
imul
xor
lahf
cwtl
push
jb
sti
out
fmul
pusha
pop
sub
push
adc
shlb
inc
in
pop
add
and
push
mov
push
mov
enter
xchg
or
mov
mov
push
scas
in
jne
xor
jl
jb
out
push
addr16
cmp
xlat
repz
xor
cmpsw
sbb
adc
std
or
push
jne
jb
push
mov
mov
enter
stos
push
sahf
or
lcall
mov
push
cmp
inc
sub
imul
rclb
js
repnz
xchg
leave
push
imul
gs
or
cmp
and
and
xchg
jne
jbe
cmp
scas
loopne
iret
outsl
stc
xlat
hlt
fisubs
xlat
push
jl
test
sbb
ret
pop
lock
aad
scas
sti
cmpsl
scas
sub
cmpsl
out
ja
or
jae
jecxz
sbb
sub
aaa
in
pop
xchg
adc
xor
outsb
in
mov
pop
clc
mov
subl
mull
aad
xchg
push
cmpsl
mov
sbb
pop
or
loope
fcoml
iret
aaa
ss
das
jge
jne
int3
inc
cwtl
out
sbb
jb
ljmp
orb
imul
data16
sahf
mov
mov
mov
icebp
sahf
push
fisubrs
stos
lds
mov
scas
jp
mov
push
out
fwait
in
fsub
flds
sub
stc
and
test
push
dec
lahf
cmc
std
lret
pop
xchg
xor
jg
stos
inc
pop
inc
fs
xchg
xchg
jl
negl
sub
mov
jno
scas
sbb
mov
sbb
cmp
stos
leave
dec
cmp
xor
rorb
sub
dec
adc
mov
cwtl
dec
inc
add
adc
mov
and
inc
nop
push
out
test
test
jbe
lahf
lock
xorl
xchg
xchg
adc
xor
ret
cs
mov
arpl
mov
push
and
or
and
xor
std
mov
aad
pop
xlat
xchg
into
sbbb
mov
cltd
data16
inc
and
add
cmpsb
out
lcall
and
addr16
out
lcall
add
mov
xchg
lahf
out
mov
fs
sahf
jecxz
or
jg
xor
cmp
adc
mov
jne
dec
sub
add
jg
inc
int3
and
sub
jne
or
fcmovb
cmp
add
mov
adc
in
fdivrs
xor
mov
adc
xchg
and
mov
lds
push
stos
jmp
arpl
sbb
fsubr
add
into
and
and
jb
mov
xchg
add
movsl
push
jmp
push
jp
cmp
push
rorl
jmp
sbb
xchg
dec
out
cwtl
stc
mov
lods
insl
xor
fcmovnu
mov
pop
lock
pop
or
cwtl
sub
fldenv
in
xor
mov
push
xor
and
push
sbb
xor
cmpl
add
je
jmp
mov
jl
test
jmp
test
daa
cld
jecxz
mov
mov
in
pop
call
sbb
fisttps
mov
fcoms
popa
pusha
jnp
stos
iret
dec
jg
incl
test
fildll
inc
incb
mov
jne
push
xchg
mul
mov
xorb
cltd
sahf
sub
xor
add
cs
push
mov
lock
ret
leave
cwtl
arpl
sbbl
or
clc
call
mov
jbe
adc
mov
das
or
or
daa
cmp
jnp
jae
inc
mov
clc
imul
add
mov
mov
cli
lret
adc
cltd
pop
rcll
xchg
fidivs
pop
popa
push
adc
xor
jp
insb
jle
pop
or
mov
push
jg
aaa
shll
and
rolb
jns
cwtl
hlt
dec
pop
sbb
push
les
mov
dec
push
in
in
add
mov
adc
addb
gs
popf
test
xor
pusha
fisubrl
jae
adc
xchg
inc
aam
neg
rclb
fsubl
inc
rol
or
mov
mov
test
cmpsb
cltd
xor
sbb
rcrb
sbb
cli
xlat
fisttpll
lahf
mov
jns
dec
adc
aas
mov
jecxz
pop
loope
or
push
aam
push
lahf
cmp
in
sahf
xchg
pop
mov
test
pop
int
aam
sti
addl
adc
jmp
xchg
add
jns
fistpll
xchg
bound
and
mov
cltd
xchg
and
enter
iret
rclb
sub
push
fcoms
jg
add
shll
movb
mov
mov
xor
sub
cmp
subb
inc
xor
outsb
movsb
dec
push
loop
fbld
lcall
insl
or
loop
or
sbb
add
bound
pop
daa
jb
mov
in
nop
cltd
jno
and
mov
mov
aas
daa
mov
mov
jle
mulb
inc
jno
sub
cmpsb
cwtl
scas
sbb
out
icebp
icebp
xchg
or
push
cmp
adcb
sub
xlat
jle
movsb
or
aad
mov
sub
scas
and
push
enter
xlat
sbb
lahf
sub
dec
cmp
mov
outsl
sbb
lea
mov
gs
mov
add
sbb
ljmp
outsb
push
sub
dec
sub
sub
into
outsb
mov
xchg
jge
xchg
in
jl
mov
push
xchg
lods
stc
loopne
shlb
and
shl
pop
xchg
push
and
ficompl
fdivr
xor
sub
mov
out
sbb
push
sahf
dec
sbb
cmpsl
imul
sub
fwait
insb
and
mov
loope
gs
adc
shlb
lods
rol
dec
inc
hlt
imul
outsl
inc
mov
jecxz
lods
xchg
dec
bound
in
jle
jae
and
and
jb
cmp
sbb
push
out
push
fimuls
push
pop
adc
or
dec
dec
pop
lods
push
cmp
out
std
and
adcl
dec
and
icebp
xlat
push
mov
xor
jb
clc
xchg
lock
fstps
xor
lock
mov
pop
popa
fisttps
pop
add
std
int3
and
pop
pop
push
inc
adc
push
add
adc
inc
sub
idiv
push
shll
mov
out
inc
fldcw
jb
add
push
jo
arpl
jl
pop
cli
xor
or
shll
push
push
das
mov
mov
lods
sub
ret
fsubrl
and
mov
shll
and
test
adc
data16
mov
pop
les
out
fsts
mov
pop
jg
test
xchg
and
dec
xchg
adc
mov
lock
bnd
repnz
cmp
cmp
scas
adc
adcl
rcrb
stos
out
es
push
sub
sbb
movsl
push
and
pushf
adc
sub
push
mov
adc
cmp
je
jns
movsl
and
rorb
nop
sbb
mov
mov
insl
add
lret
mov
add
imul
jne
clc
movsb
aas
test
cs
dec
lcall
push
insb
mov
push
or
inc
pop
xchg
cli
mov
cmp
shll
loopne
jbe
pusha
cmpsl
clc
lahf
xchg
push
sub
stos
aam
jecxz
test
pop
pop
mov
stos
pop
aaa
xor
test
pop
loope
add
call
fistl
add
cmp
push
mov
repnz
push
mov
ds
fucom
push
add
xchg
xchg
pusha
push
ds
dec
decl
mov
lods
add
mov
jg
cld
das
pop
nop
icebp
lods
adc
pop
inc
sar
insl
pop
les
add
int3
out
or
jae
jl
fldenv
cmpsl
icebp
aaa
pop
punpckldq
scas
pop
push
fwait
lods
mov
mov
dec
stc
mov
mov
stos
stc
mov
adc
popf
push
dec
ljmp
mov
mov
dec
mov
stos
add
dec
nop
dec
mov
dec
fmul
cmp
repz
movsl
dec
rorl
ret
xchg
lret
repnz
repz
or
cltd
jmp
xchg
sbb
jmp
sub
sub
dec
mov
jno
pop
sbb
fbstp
or
int3
stc
jno
call
push
fisttpl
daa
xchg
cwtl
and
sub
clc
in
andl
cli
repnz
dec
pop
in
nop
push
daa
pop
inc
push
sti
test
pop
mov
js
call
jge
jmp
lret
out
push
pop
cmp
enter
xor
lods
mov
xor
mov
add
cmp
adc
mov
xor
mov
mov
adc
movsl
int
daa
fucomi
inc
sub
loop
jae
sbb
mulb
mov
ror
imul
push
lcall
clc
arpl
imul
das
pop
xchg
sub
mov
jae
jl
mov
jle
cmpsb
sahf
inc
mov
dec
inc
dec
in
adc
and
or
push
lock
pop
add
shlb
loopne
mov
and
xor
gs
std
testb
push
in
ret
enter
add
pop
mov
xchg
push
mov
xchg
int3
or
jae
enter
mov
subl
es
dec
lahf
lret
mov
repnz
test
mov
mov
sbb
in
das
out
movsl
xchg
push
xchg
mov
test
jnp
shr
sti
pop
mov
rcl
jle
inc
cmp
pop
stos
ds
cmp
jbe
xchg
and
scas
jne
addr16
mov
push
outsl
jg
lea
xor
insb
aas
mov
repnz
xchg
xchg
movsb
mov
xchg
enter
sub
mov
adc
fwait
cmpl
hlt
xchg
cmp
roll
add
sarb
pop
inc
add
jle
lds
test
sbb
lods
les
cmp
daa
aas
test
cld
pushf
push
xchg
mov
xchg
es
es
inc
pop
fsubp
mov
orb
fidivl
outsb
push
or
iret
mov
loope
sub
or
sbb
mov
mov
and
mov
and
fistpll
xor
mov
repnz
pop
stc
xor
dec
movsl
mov
aaa
push
adc
jne
mov
decl
mov
enter
pop
clc
lahf
jo
stos
lock
dec
mov
xor
int
loopne
jns
mov
xlat
push
xor
lret
imulb
sub
test
xchg
push
mov
icebp
or
int
sub
inc
jmp
inc
adc
sub
jo
aaa
push
inc
into
fwait
jl
mov
scas
loope
in
frstor
mov
cmp
mov
and
iret
aaa
adc
sbb
xchg
mov
test
pop
rcl
adc
mov
movsb
in
cmp
mov
cmp
or
test
sbb
scas
cmpsb
loope
xor
cli
lahf
xchg
xchg
movsl
mov
stos
xchg
mov
mov
cmp
jmp
das
ljmp
das
paddw
dec
xchg
mov
ss
mov
mov
clc
push
cvtpi2ps
xorl
add
fcmovnbe
jp
pusha
loopne
loope
fildl
or
adcb
aaa
mov
ret
je
xchg
dec
sarl
enter
test
rcr
dec
jnp
add
clc
or
notl
insl
roll
and
adc
adc
xor
pop
sahf
add
mov
ja
cltd
mov
cmp
push
jne
popf
lods
pminub
cs
sub
pop
mov
gs
xor
mov
xchg
xor
mov
call
cmc
sub
test
or
or
push
xchg
xchg
jnp
pop
fwait
jl
outsl
das
push
inc
cld
push
shrl
out
mov
mov
notb
dec
xchg
sbb
push
add
lahf
jmp
fidivl
inc
mov
jmp
mov
leave
adc
mov
insb
push
notl
mov
xchg
lods
mov
jo
jmp
add
mov
push
mov
xor
cmp
fistps
xchg
pop
pop
outsl
dec
xchg
mov
jb
je
sti
jne
xor
or
push
xorl
mov
in
adcb
sahf
adc
mov
aam
mov
ror
fnstcw
int3
dec
and
cmp
test
subb
or
pop
and
pop
pop
rcrb
shr
lret
into
ret
xchg
ret
daa
mov
daa
pop
add
shll
mov
ljmp
dec
lret
pop
imul
stos
fildl
or
mov
mov
push
adc
mov
dec
xor
pop
xchg
xchg
jmp
jnp
xchg
mov
cmpsl
js
rcr
inc
pusha
das
mov
dec
negb
xchg
push
push
cmc
lods
sub
mov
cmpsl
mov
pop
out
dec
movsl
das
je
jle
out
adc
data16
push
cmpxchg
jns
test
adc
cld
inc
cwtl
nop
mov
mov
dec
js
jmp
xor
fisubs
push
xor
adc
sbb
es
icebp
aas
mov
gs
sbbl
xor
imul
cmovbe
cmp
je
mov
xchg
rcl
setae
test
test
sarb
unpcklps
popf
out
pop
mov
aaa
jp
xchg
xor
iret
mov
outsb
in
scas
dec
pop
dec
gs
aam
cmp
test
sahf
or
gs
add
shrb
stc
mov
divl
sbb
ja
pop
jb
add
sbb
pop
mov
fwait
add
repz
imul
mov
nop
xor
in
jmp
add
pop
push
aas
mov
fisubrs
fwait
adc
sarl
jns
movsb
jae
push
sarb
rcrl
mov
sub
add
adc
jbe
popa
adc
sbb
adc
loopne
xchg
outsb
stos
mov
cmp
jmp
loop
pop
popf
sahf
mov
sub
or
mov
or
dec
pop
sbb
out
mov
push
jge
jae
mov
test
mov
xchg
or
out
cmpb
imul
lds
pop
lret
mov
insb
push
fnstcw
xorl
sbb
push
repnz
xor
stos
mov
call
lods
fistpll
mov
push
rol
sub
xor
out
mov
dec
or
sub
mov
add
div
xchg
xor
pop
xor
movsl
ret
push
jle
jle
add
fbld
push
movsl
and
mov
push
lods
adc
and
and
ret
jne
emms
sbbb
and
cmp
adc
inc
sbb
and
sub
loop
leavew
cmp
pushf
push
fdivrs
xorb
sbb
pop
xor
push
pop
lock
jge
js
fimuls
pop
or
sbb
xchg
add
mov
scas
fistpll
mov
push
mov
mov
sbb
frstor
jecxz
ss
outsl
push
mov
icebp
sub
mov
rcrl
xchg
in
ds
mov
in
inc
ss
add
movsl
jecxz
aaa
mov
add
das
out
scas
int3
stc
testl
push
in
xchg
lds
dec
into
imul
ss
popa
dec
fs
xchg
mov
sbb
inc
movl
jo
xchg
in
fsubl
lea
pop
lock
movsl
dec
stc
push
lahf
adc
mov
ret
fcoml
or
mov
shl
fs
jecxz
dec
pusha
loopne
xor
data16
popa
inc
sbb
cmp
dec
xchg
inc
cmp
cli
or
mov
mov
std
mov
cmpsb
je
imul
jne
mov
sub
cmc
mov
icebp
jle
repz
xchg
rolb
xchg
lock
sub
gs
or
jns
add
mov
sub
nop
xchg
or
shll
mov
push
in
mov
add
ja
fdiv
jae
fstpl
shr
ret
test
push
xchg
iret
stos
xor
add
int3
scas
mov
shl
push
mov
stos
subb
cmp
push
mov
ljmp
inc
test
dec
test
push
or
or
scas
pop
lods
sti
scas
xchg
stos
push
jg
cmp
xor
imul
test
push
iret
ds
mov
pop
into
jns
sub
cmp
jae
mov
xchg
xorl
cwtl
xchg
insb
jp
testl
inc
cltd
fwait
lret
mov
pop
mov
jg
xchg
sub
cld
xlat
bound
ffree
fdivrl
lods
ss
in
popf
fstl
mov
dec
cmpsl
popa
leave
loopne
inc
test
cmp
pop
pop
sahf
dec
icebp
lock
fdiv
ljmp
dec
fsubrp
push
cltd
aaa
or
mov
fsubl
imul
xchg
aas
add
pop
daa
pop
arpl
push
inc
xor
dec
pop
xor
mov
cmp
xchg
mov
mov
jmp
pop
inc
rcr
or
jb
jecxz
add
push
xorb
pop
fwait
ljmp
sub
add
cld
xor
mov
mov
icebp
add
xor
shlb
rcrb
lods
push
aaa
nop
or
popf
lds
out
push
inc
xor
lret
jne
xchg
lcall
pop
push
jne
mov
cmp
insb
sbb
sbb
jnp
mov
shrl
xchg
push
scas
pop
mov
call
lds
sbb
leave
es
testl
jp
hlt
stc
mov
mov
stos
sub
mov
lahf
jge
push
out
pop
jns
mov
int3
or
xor
adc
iret
mov
sub
sub
mov
cs
pop
push
sub
lcall
jae
in
scas
dec
jmp
xchg
sahf
push
cltd
inc
mov
lret
mov
lods
in
dec
dec
test
or
aam
out
out
cli
lods
mov
jecxz
mov
scas
mov
and
inc
mov
adc
iret
cmp
aas
mov
fwait
loopne
sbb
outsl
out
mov
fcom
mov
mov
sbb
cld
jno
and
xchg
outsl
sbb
adc
mov
movsl
aam
pop
pop
into
pop
add
pop
loop
enter
cs
addr16
mov
push
mov
jle
sti
mov
fwait
int3
cmp
out
ret
and
mov
sti
xchg
nop
bound
pop
jns
gs
stos
out
and
inc
push
clc
sar
movsl
rclb
xor
mov
stos
jno
dec
arpl
add
jg
push
xchg
or
sti
sbb
sbb
and
mov
push
or
cwtl
push
pop
fwait
jnp
mov
lret
test
and
add
faddl
fdivs
call
mov
push
int3
cmpsl
movsl
sub
dec
inc
cli
cmc
out
xor
shll
in
movsb
xchg
mov
aas
or
cmp
jne
ret
int
xchg
push
cmp
rcr
or
inc
mov
pop
push
mov
cs
sub
repnz
in
inc
fistpl
fists
mov
inc
or
lods
mov
inc
and
mov
ds
mov
jno
icebp
lods
dec
sub
pop
and
cwtl
lea
xchg
insl
sbb
fimuls
jo
aam
xchg
xchg
adc
mov
pop
and
mov
and
insl
fstpl
xchg
arpl
push
dec
cwtl
xchg
push
aad
xor
push
xor
add
jne
inc
lahf
dec
and
out
xor
int3
push
pop
insl
int3
movsb
into
xchg
sbb
data16
and
mov
nop
scas
jae
sbb
dec
sahf
mov
mov
add
aam
sbb
xchg
in
xchg
ffree
ret
test
xor
add
pusha
ds
ljmp
in
jmp
mov
hlt
in
aaa
gs
or
mov
and
jge
push
dec
insb
daa
out
inc
xchg
int
mov
jge
adc
in
push
add
dec
xor
fsubp
or
scas
cmp
scas
add
xchg
fxch
sti
out
shr
add
xchg
lock
add
cwtl
xorl
pusha
sbb
jne
dec
jno
dec
xchg
movsl
adc
mov
in
pop
test
jnp
cli
lods
cmp
out
mov
jb
mov
sbb
outsl
push
mov
cmpsl
xchg
xchg
and
fsubrs
arpl
jno
dec
cmp
das
xor
jae
shll
push
insb
push
out
ds
or
pop
icebp
cmp
aad
nop
dec
lcall
icebp
into
sbb
cltd
inc
cmp
adc
mov
loopne
pop
dec
cmpb
and
int3
loop
scas
and
fdivr
cmp
sbb
loope
sbb
adc
ljmp
push
pusha
fstpl
mov
jl
push
lds
xchg
ja
pop
out
inc
movsl
adc
or
xchg
stos
inc
stc
fisubrs
add
out
mov
mov
add
xchg
mov
stc
xchg
jnp
out
xor
data16
lea
pop
push
shl
repz
leave
pop
mov
pop
jbe
add
cmp
jns
es
cmp
lahf
inc
xchg
jg
lods
pop
pop
push
or
lret
dec
and
popf
lea
ret
inc
push
std
add
sahf
xor
xchg
sub
or
push
popa
addr16
out
out
ja
adc
mov
cmp
mov
or
int3
and
imulb
lret
or
pop
mov
push
xor
nop
jecxz
push
lods
pusha
adc
hlt
pop
cwtl
pop
out
out
mov
jmp
out
ffreep
inc
lret
int3
xor
xchg
and
nop
and
les
pop
lods
dec
jge
sahf
sti
cmpsb
or
int
jmp
fnstcw
inc
mov
sti
and
dec
cmp
loopne
xchg
enter
cmp
mov
cmp
xchg
and
sbb
imul
xchg
inc
jmp
cli
out
pop
sbb
ret
cmp
mov
pushf
push
rolb
xor
sbb
dec
xchg
inc
mov
mov
test
daa
andb
mov
sahf
push
int3
outsl
addr16
insb
sub
inc
mov
fdivs
pop
and
stos
mov
mov
dec
loope
push
fmuls
mov
jp
fwait
outsl
mov
pop
rcr
out
jo,pt
fincstp
loope
outsl
leave
adc
mov
push
cli
push
pop
lahf
daa
xchg
jae
outsl
sub
mov
jno
enter
mov
mov
push
dec
daa
add
xlat
push
fisubrs
adc
mov
sbb
test
aam
jns
ja
mov
lret
pop
fisubl
sbb
mov
dec
lods
test
addr16
cmpsb
cwtl
mov
jo
test
fneni(8087
fisttpl
adc
fcmovnbe
repnz
jbe
dec
xchg
insl
mov
or
popa
add
add
add
stc
hlt
adc
mov
ss
rcll
lods
in
hlt
mov
jmp
orl
mov
xchg
mov
clc
cmp
clc
pop
fninit
jle
loop
ret
repnz
or
sub
cmp
inc
aad
sub
inc
mov
jns
popa
cli
loop
dec
mov
int3
xchg
push
testl
add
push
or
jno
mulb
cmp
stc
dec
xchg
leave
or
add
xchg
sbb
das
stos
fcoms
cs
or
nop
lret
pop
cmpsb
test
test
aam
add
out
jne
sub
pop
mov
cmp
in
adc
xchg
imul
push
in
addl
jl
fcoml
movsl
sbb
sbb
xor
xlat
movsl
js
jp
stc
mov
fwait
push
cwtl
push
push
outsl
push
mov
mov
sub
add
ljmp
mov
xor
inc
xchg
popf
stos
adc
cld
notl
jg
ret
xchg
sbb
jecxz
data16
fcoml
push
mov
loop
and
ret
mov
cmc
scas
rolb
cmpsb
stos
sbb
movsb
xchg
sbb
cs
shl
jg
jns
divb
or
adc
jle
sub
fcomps
sahf
cmp
lcall
hlt
jbe
inc
dec
pop
ret
cmp
ret
ds
jbe
call
clc
daa
gs
cld
mov
bound
test
ret
and
jl
mov
fbstp
pushf
and
das
inc
insl
ds
pop
cltd
in
incb
push
dec
or
or
fsts
mov
fisttpll
jbe
xlat
data16
xor
sub
xor
mov
push
pop
shl
mov
push
fs
xchg
adc
mov
outsl
sbb
in
lcall
dec
or
fldl
dec
imul
jb
adc
mov
add
out
inc
in
sarl
repnz
cmp
aam
loopne
pusha
cmp
movsb
inc
lcall
xor
fildll
movsl
sub
stos
xor
xchg
mov
cmp
addr16
adc
jle
jl
es
push
mov
ret
cmp
mov
std
ret
out
std
jno
adc
mov
sahf
dec
cltd
testb
push
mov
push
into
dec
lea
mov
push
xor
cmp
xchg
lock
jns
inc
push
leave
mov
pop
xchg
flds
or
cmpl
clc
lea
cmpsb
dec
fsubl
hlt
cmp
mov
pop
dec
loop
cmp
sbb
inc
pop
or
adc
jge
shl
repz
ss
int3
adc
and
mov
mov
iret
ret
push
adc
call
fimull
push
jle
aaa
adc
fwait
int
sbb
int3
subl
or
xchg
mov
xchg
mov
divb
xor
mov
inc
ds
pop
mov
and
shrb
in
mov
daa
adc
jle
fs
test
imul
mov
pop
mov
push
jg
insl
testl
mov
icebp
std
dec
ss
imul
push
ffreep
stos
addr16
inc
pop
xchg
jo
push
dec
inc
pop
cmp
pop
in
push
or
sbb
cmp
fwait
or
pop
mov
iret
add
popa
jo
sub
cltd
fadds
icebp
push
lret
jns
mov
dec
or
dec
or
xchg
shrb
push
push
and
iret
ds
add
inc
sub
icebp
jae
dec
push
mov
into
xchg
xchg
sub
push
shrl
jbe
xchg
mov
jg
in
bound
pop
inc
fisubl
test
lret
popa
ret
mov
sub
imul
aad
xor
xor
pushf
negb
adc
int
cmp
movsl
mov
and
add
jb
or
filds
xor
sarl
icebp
fs
out
movsb
xor
mov
mov
outsl
mov
push
lret
push
xchg
jle
pop
addr16
or
and
xchg
pop
add
dec
inc
sbb
gs
in
mov
or
pop
jp
xor
xchg
aad
mov
bnd
lret
out
jns
mov
test
cltd
add
cmpsb
jae
cmp
dec
or
repnz
lahf
sbb
xchg
jge
or
pop
and
push
adc
cmp
imul
in
mov
fwait
icebp
push
push
icebp
mov
push
addr16
xchg
xchg
mov
shr
mov
insb
ret
inc
xchg
push
and
dec
inc
push
addr16
sbb
xchg
xchg
roll
movsl
daa
pop
cmp
in
loopne
mov
lock
push
and
xor
lret
mov
xor
push
lods
xchg
xor
mov
xchg
and
test
mov
jecxz
jecxz
pop
cmp
int3
repnz
mov
dec
les
iret
fnop
mov
cmpb
hlt
mov
xor
sub
cmp
xor
test
subl
push
leave
and
jl
xchg
in
pop
cmp
adc
ja
in
daa
cmp
aam
test
cmp
xor
mov
ret
cltd
test
mov
jo
mov
sahf
shll
mov
es
mov
push
push
inc
sahf
lret
or
iret
xchg
add
sahf
dec
xlat
orb
jg
ja
sbb
test
push
or
and
clc
jp
dec
addb
mov
dec
sbb
insl
pop
push
leave
mov
fwait
cmp
bound
sub
dec
jle
dec
push
mov
sti
push
stos
mov
cld
mov
repnz
mov
mov
out
insb
pop
out
mov
sub
outsb
cmp
jnp
push
and
or
mov
jmp
sbb
mov
icebp
leave
jns
idivl
insl
stos
int3
or
or
in
daa
out
adc
outsl
sbb
insl
leave
sahf
xchg
cmp
into
sbbl
pop
stos
test
adc
iret
push
iret
test
cmp
decl
sub
pop
xchg
add
fcomi
push
out
sbb
mov
outsb
and
movb
fldl
mov
pop
and
and
insb
stos
dec
in
push
int3
mov
aad
aad
shrb
addr16
cmp
iret
outsb
sub
xchg
inc
sbb
cmp
mov
xchg
pop
xor
inc
cmp
pop
enter
jge
sbbl
out
xchg
fwait
sbb
dec
jbe
xor
inc
aaa
jmp
sbb
cmpb
pop
mov
pop
in
out
es
mov
test
jl
sub
or
dec
in
dec
ljmp
ss
mov
xchg
setge
inc
cmc
repnz
inc
jno
pop
fs
lret
setae
cli
xchg
add
cmc
mov
dec
cmp
clc
cmp
dec
add
ljmp
aaa
cld
sub
pop
push
ret
hlt
in
mov
pop
xor
cmp
into
sub
fists
fcmovnu
xchg
movsb
and
shl
inc
test
imul
popf
or
hlt
pop
cltd
cmpsb
mov
mov
ja
outsl
sti
sbb
inc
popf
mov
movsb
pop
lret
nop
cmp
pop
adc
pop
xchg
pop
pop
or
jmp
sub
push
adc
std
sbb
jmp
cld
add
addb
adc
lea
lea
adc
dec
cwtl
outsb
out
fidivrs
rcl
fs
decl
loope
test
repnz
pop
fst
pop
cmc
fmulp
and
lods
push
sbb
xlat
clc
and
or
mov
inc
outsb
push
stos
les
js
popa
rcl
sarb
into
xchg
dec
cmp
xor
pop
pop
les
cmp
xor
daa
sahf
dec
lahf
adc
repnz
enter
jg,pn
sub
je
xchg
mov
mov
jbe
sbb
mov
shlb
cmp
popa
mov
mov
rcrl
arpl
lcall
cwtl
lods
xchg
or
mov
ja
pop
data16
sub
mov
inc
lret
gs
imul
mov
ja
repz
pop
push
push
jmp
addl
cmc
add
sbb
rorl
nop
inc
insl
mov
mov
cmp
lods
and
add
or
data16
fdiv
movl
out
pop
and
xchg
push
sub
sahf
sbb
addr16
sub
popa
dec
mov
push
xchg
mov
mov
cmp
scas
loopne,pt
gs
call
xlat
jbe
popa
jno
test
fistl
int3
outsb
sub
fimuls
dec
arpl
xchg
dec
mov
bound
outsl
repnz
mov
adc
push
dec
das
pop
addr16
push
lret
in
pop
je
inc
dec
es
sti
add
mov
xchg
js
mov
xor
pushf
stos
push
fisttps
pop
xor
or
mov
sahf
fmuls
inc
push
and
cs
sub
cwtl
mull
and
xchg
sub
leave
mov
push
cmpsb
call
adc
std
jnp
jecxz
pusha
add
jmp
loope
imul
test
and
test
call
pop
pop
dec
ret
mov
inc
enter
xchg
test
inc
fwait
adc
fildl
add
das
mov
jle
loop
mov
jno
adcl
push
mov
jecxz
mov
call
inc
cmc
dec
dec
or
dec
push
sub
mov
push
pop
iret
fildll
loope
sub
sbb
shl
dec
inc
cmpsb
inc
das
lds
loope
or
xchg
movsl
cmp
cli
mov
out
out
movsb
push
cmc
pushl
popa
mov
das
rcrb
adc
mov
iret
lahf
lods
sub
push
and
dec
test
jl
inc
outsl
mov
leave
scas
daa
dec
mov
jae
lahf
stos
das
push
push
mov
xor
in
sbb
push
sbb
test
das
imul
sbb
imul
cmpsb
cs
cmpsl
andb
imul
mov
cld
mov
jnp
or
stc
dec
fstpt
or
adc
xchg
pop
int3
bound
mov
lret
mov
adc
repz
sbb
dec
mov
inc
in
dec
mov
or
inc
and
sahf
out
rclb
cli
rcr
push
das
mov
push
rorb
push
enter
mov
push
push
push
dec
int3
cwtl
fstpl
ja
aad
jbe
iret
sbb
aam
inc
mov
push
and
pop
subl
push
out
iret
or
mov
xlat
push
scas
mov
imul
xchg
shll
dec
out
add
cmp
or
cltd
out
call
jmp
or
add
pop
pop
sub
data16
sub
sti
mov
adc
xorl
rclb
sti
push
or
xchg
nop
sbbb
push
jae
xchg
das
mov
fwait
pop
incl
or
mov
mov
test
stos
into
js
xor
aam
ret
and
add
imul
shlb
imul
mov
adc
mov
lock
jno
pop
ja
in
xlat
ja
pop
fwait
inc
mov
icebp
jecxz
imull
add
inc
lret
jb
mov
in
push
and
jne
aam
dec
ret
ljmp
and
add
lock
add
in
adc
cltd
mov
movsb
jne
sub
xchg
mov
cmpsb
or
mov
stos
ja,pn
inc
scas
inc
jno
jmp
sub
repz
sub
iret
jb
adc
mov
push
in
xor
push
dec
sbb
jmp
mov
mov
jbe
cmpsl
lods
sbb
jnp
ja
dec
hlt
scas
ret
push
pushl
lcall
out
jl
push
adc
imul
pop
cmc
sti
lahf
shll
jno
cmp
mov
sub
ret
lods
push
sbb
inc
adc
imul
inc
fbstp
stc
mov
add
stc
mov
loop
sbb
testl
mov
adc
in
inc
lods
pusha
mov
push
pop
mov
fnstsw
jmp
notb
pop
shrl
sub
in
fidivl
shrl
pop
adc
dec
negl
sbb
jbe
out
mov
sbb
sub
push
sub
fisubrs
dec
fimull
loopne
jo
jns
and
scas
sbb
les
sbb
rorl
xchg
mov
pop
pop
call
mov
add
pop
push
inc
popf
xchg
push
fcoms
movsl
in
dec
add
sti
fsubrs
data16
cld
pop
repz
lahf
loope
gs
fsub
mov
or
daa
jbe
test
add
das
daa
fnsave
inc
fmuls
imul
sbb
shlb
mov
outsl
sahf
lcall
in
iret
mov
shll
push
shl
mov
daa
cmp
add
mov
insb
sub
cld
jnp
cmp
inc
mov
sbb
pop
mov
fcomps
push
and
xchg
or
adc
inc
jae
sbb
es
lds
jo
out
sbb
jbe
js
adc
fcmovnb
les
dec
js
jecxz
cltd
mov
add
cld
jge
scas
jg
cltd
lahf
ja
add
push
add
testb
mov
mov
stc
or
xorb
and
adc
repnz
xorl
loopne
shr
adc
pop
hlt
hlt
mov
test
cltd
pop
xchg
pop
jmp
and
push
xchg
dec
mov
jo
push
mov
dec
xor
out
clc
pop
push
test
hlt
fdivrl
or
jns
push
mov
push
ljmp
fldcw
push
or
movsl
xor
adc
movsl
sub
xor
movhps
fstpl
and
dec
push
xchg
xchg
je
test
mov
stc
jns
cltd
mov
mov
inc
xor
cli
out
fimull
insb
pop
in
mov
je
insb
mov
push
cld
lea
xchg
scas
sub
sbb
mov
fwait
xlat
imul
loope
outsb
adc
loope
fistpll
pop
sub
push
push
and
pushf
fisttps
jge
dec
inc
test
stos
xor
sub
aaa
cmpsl
int3
push
es
or
bound
clc
cmp
cmp
popa
fisubs
sbb
xor
jmp
inc
enter
ror
pop
inc
xchg
or
pushf
out
cmc
cs
outsl
pop
cli
andb
xchg
outsl
inc
pop
push
cmpsl
adc
or
push
notl
repnz
mov
cmp
add
push
fcomi
daa
lods
fildl
xor
cmpsb
jnp
popf
fcomps
stos
testl
and
test
out
jb
lcall
aad
pushf
sti
or
int3
sbb
jne
repz
xor
jns
movsl
mov
je
imul
lock
call
inc
stos
loop
lods
das
aad
jg
daa
iret
and
pushf
cmpsl
test
pmaxub
or
je
dec
dec
scas
pop
jb
add
mul
or
xchg
xchg
jae
out
inc
xor
xor
mov
lcall
add
push
enter
test
lods
jo
inc
aas
fistpll
out
push
roll
repnz
lcall
pop
cld
cmp
popf
loopne
mov
nop
dec
mov
mov
inc
mov
push
icebp
sub
mov
push
lret
and
xchg
and
fildll
xor
jg
lock
test
aas
and
mov
push
push
jnp
adc
or
fwait
push
add
mov
jmp
jns
outsl
inc
shll
jle
push
xchg
sar
jnp
dec
sbb
pop
scas
mov
push
mov
bound
inc
mov
mov
mov
xor
fldenv
dec
sub
pop
pop
orb
les
imul
int
push
mov
xor
inc
lods
scas
adc
adc
xlat
and
fdiv
push
fisttps
test
sub
sbb
ss
pop
mov
pushf
mov
ljmp
mov
std
int
jb
sbb
inc
cmp
hlt
arpl
xchg
inc
push
pushf
scas
mov
add
cld
pop
lods
dec
xchg
mov
push
jnp
mov
ss
test
jb
mov
scas
jb
gs
mov
enter
int
aam
inc
inc
add
xchg
imulb
sarb
sti
xlat
pop
fucomip
add
leave
psubq
mov
aad
xorb
cmp
adc
push
adc
cmpsb
ror
lea
adc
stos
or
push
shlb
std
or
jmp
fdivs
dec
push
scas
dec
mov
fisubrl
loope
mov
cwtl
unpcklps
adcl
fwait
stos
sbb
test
sub
rcll
rcrl
and
loop
pop
adc
sub
pushf
rclb
pop
jnp
pop
sbb
inc
sub
jo
scas
insb
out
decl
loop
mov
negb
mov
cmpsl
mov
or
inc
rcl
int3
dec
push
sub
pcmpgtb
mov
inc
hlt
sti
xchg
sbb
jno
cmp
inc
loop
sub
sub
int3
mov
adc
dec
or
pop
or
cli
inc
adc
std
push
mov
xchg
sbb
adc
insl
ljmp
ljmp
push
pusha
insl
sbb
cli
ret
sub
pop
iret
fldl
and
jo
xchg
test
xchg
push
clc
pusha
out
dec
jae
xor
inc
jo
test
mov
xchg
mov
cmp
fstpl
aaa
sub
adc
dec
push
sbb
pop
cmp
inc
jo
sub
gs
ss
fimuls
lcall
mov
jne
out
add
inc
in
xchg
mov
in
push
sti
xor
sub
and
ljmp
daa
adc
dec
add
xor
movsl
ljmp
pop
ss
push
xor
xchg
and
xchg
inc
adc
xlat
rorl
push
cmc
mov
push
mov
in
xchg
ds
adc
sbb
push
dec
xchg
xor
ss
gs
in
into
mov
mov
and
cmp
mov
xor
adc
jb
inc
pop
pushl
test
sub
rcrl
gs
movsb
inc
push
xchg
movsl
rclb
insb
std
test
mov
jae
insl
ljmp
xchg
inc
xlat
push
shrb
push
lret
out
add
ret
jae
push
sbb
dec
pop
jmp
sub
mov
pushf
lret
cwtl
xchg
inc
sub
pop
subb
sbb
fwait
shlb
jecxz
jo
mov
adcb
sbb
mov
pop
pusha
scas
push
jno
xor
inc
mov
push
js
sbb
push
js
inc
mov
jecxz
imull
test
cltd
xchg
sbb
jmp
ds
popf
or
rcrl
jnp
imul
popf
add
mov
add
sbb
in
icebp
and
pop
sbb
orb
cmp
movsb
jmp
shll
mov
add
repz
je
xor
nop
mov
int
push
mov
scas
aad
adc
ljmp
xchg
data16
cmpl
loopne
outsl
cmp
fsubs
lret
das
outsl
xchg
cmpsb
inc
mov
mov
sbb
or
int
pop
jge
movsl
inc
sbb
data16
jg
mov
pop
out
mov
or
adc
cmp
imul
xor
lret
add
enter
rol
push
sbbb
lds
mov
pop
enter
push
add
mov
and
adc
sbb
ljmp
xlat
pop
adc
repz
jle
shrb
in
rolb
ret
pop
dec
daa
imul
aam
daa
adc
cmp
clc
adc
and
mov
imul
addr16
test
in
push
cmpsb
call
data16
out
lds
add
jle
std
mov
mov
cmpb
cmpsb
loope
out
mov
cmpsb
cmp
shrl
out
std
and
or
arpl
inc
js
push
call
ret
fs
and
rcll
jle
jnp
or
pop
int
mov
insl
pop
lahf
push
ljmp
mov
push
or
imul
adc
orb
xchg
lea
jecxz
ret
rcl
icebp
add
pop
jl
mov
xor
jns
cmp
lret
xchg
rcll
lods
in
and
cmc
push
xcrypt-ofb
cmpsl
test
jmp
xorb
notb
into
jle
sahf
pop
cli
jmp
mov
ljmp
sub
and
jp
cmpsb
int
mov
push
jmp
test
push
sar
push
rcr
jge
jle
jmp
mov
jmp
sbb
lea
pop
hlt
std
cmc
das
dec
insb
imul
sub
mov
mov
aaa
shrl
and
xchg
pop
mov
or
jno
xor
ret
sbb
clc
test
ret
adc
xchg
sub
movb
hlt
xchg
mov
xchg
and
mov
or
xchg
adc
rolb
or
jl
jnp
mov
in
pop
std
xchg
orl
adc
leave
push
pop
fs
cmc
mov
push
mov
jp
cltd
dec
icebp
mov
push
push
or
leave
xorl
es
test
test
out
push
xchg
jb
in
insl
inc
push
ljmp
subb
inc
loop
xor
push
lods
imul
jp
adc
sahf
dec
push
shrb
mov
pusha
adc
in
scas
sub
fnstcw
cmp
mov
dec
aas
push
je
jmp
lea
sub
out
and
or
pushf
cmpsl
nop
sbb
push
sbb
push
dec
cwtl
mov
stc
cmp
bound
sbb
sahf
push
mov
sarb
pop
imul
mov
jno
and
mov
cwtl
and
cwtl
xor
icebp
sbb
mov
jbe
mov
add
aad
aas
lahf
push
es
pusha
xor
xchg
xchg
sub
mov
hlt
roll
fidivl
test
rcrl
cmp
jbe
adc
test
movsb
sub
jno
add
cmpb
lret
sbb
and
mov
or
cltd
loopne
popf
or
fidivrs
fnsave
arpl
mov
call
inc
xchg
xor
and
mov
out
jns
cld
push
sbb
sub
test
movsl
ljmp
pop
add
movsb
xchg
inc
mov
lea
adc
jb
fdivrs
inc
xor
cmp
mov
movhps
fwait
test
test
sub
fisttpll
hlt
ror
sbb
dec
jbe
cs
out
clc
inc
sbb
popf
dec
out
push
gs
or
jns
mov
iret
or
xor
inc
jbe
adc
mov
mov
cld
aad
pop
jl
xchg
imulb
push
loop
loope
cmp
mov
mov
sbb
and
scas
jl
or
add
clc
inc
fadd
loopne
mov
push
ffreep
push
jb
insl
add
adc
int
shlb
in
sub
push
xor
out
stos
pop
cmp
scas
jmp
or
dec
inc
es
push
pop
or
sub
in
adc
mov
iret
fdivrs
stos
inc
out
sub
shll
clc
xchg
lcall
fidivl
das
scas
fimull
stos
mov
loop
shrb
and
lods
xchg
js
insb
xlat
jae
loope
mov
push
dec
pop
mov
push
je
lret
outsl
inc
pusha
mov
fsubrs
gs
or
xchg
nop
mov
inc
sbb
pop
inc
cli
push
sti
mov
daa
lds
adc
mov
cs
int3
jle
xor
pop
test
and
cltd
xchg
shll
mov
jle
push
int
xor
int3
imul
fisubrl
inc
rcrb
popf
popf
xchg
inc
mov
cmpb
xor
xchg
sbb
cmpsb
sbb
inc
and
xchg
and
in
daa
roll
sub
js
vmovhpd
stos
pop
mov
inc
pop
aad
jl
leave
insb
int3
xchg
jbe
rcll
cwtl
insl
cmpsl
xor
mov
ljmp
jo
aam
lea
add
fsub
pop
ret
je
mov
xchg
loope
shlb
dec
xor
add
push
and
movsb
push
push
mov
fs
jne
aaa
jnp
or
and
push
dec
jne
out
mov
nop
ja
stos
mov
push
xlat
jge
cli
test
lods
movsb
icebp
sbb
imul
shll
sarb
add
cmpl
dec
inc
or
test
sub
stos
adc
adc
jbe
or
cmp
std
mov
dec
sbb
mov
dec
out
lret
gs
adc
ds
sub
mov
jg
frstor
je
xor
lods
inc
test
add
ss
out
dec
popa
mov
mov
or
fdivs
xor
stos
and
adc
loopne
adc
sub
roll
cmp
or
je
push
push
add
ljmp
xor
jecxz
scas
nop
sub
out
xor
pushf
cltd
sub
mov
push
loope
push
loopne
popa
ljmp
aad
lea
add
ss
gs
orb
ljmp
in
sub
pop
pop
mov
repz
ljmp
jmp
xorb
dec
mov
jp
fbld
insb
mov
sub
cld
es
inc
jle
cld
mov
xchg
xchg
pop
lods
push
ljmp
outsl
dec
xchg
cld
pop
and
test
pop
cmp
adc
outsb
adcb
jl
dec
dec
outsl
lods
dec
lea
mov
bound
mov
enter
adc
cmpsl
addr16
pop
ret
mov
jl
cmp
cmp
pop
das
pop
push
adc
je
fcompl
mov
xchg
mov
jno
xchg
ds
add
push
cmp
leave
xchg
frstpm(287
adc
pop
mov
jge
push
addr16
jo
into
xchg
es
sub
pop
movaps
test
stos
in
adc
out
arpl
repz
cld
cli
mov
fildll
add
mov
adc
mov
enter
inc
fmulp
mov
clc
or
iret
pop
mov
bound
xor
cmc
or
fidivrl
xchg
enter
push
in
xor
jbe
iret
mov
mov
cmp
xchg
mov
sbb
mull
pop
aad
cmp
mov
mov
test
or
lock
xchg
sbb
inc
xchg
xchg
pop
mov
lds
adc
idiv
jg
das
jle
cmp
and
or
jo
cli
cmpsl
fisubs
sub
push
imul
add
xchg
das
or
jge
jp
leave
add
push
mov
push
mov
aas
das
sub
std
enter
imul
aaa
jmp
stc
sbb
lret
mov
lcall
fs
repnz
add
inc
fsubrs
shlb
das
inc
xor
repz
mov
xchg
imul
imul
test
jae
test
xchg
stos
add
int
in
adc
clc
fdiv
mov
repnz
xchg
push
jle
stos
cmp
outsb
inc
mov
cwtl
aad
fs
push
mov
mov
xor
cwtl
aam
aam
cmp
adc
lcall
jae
scas
ljmp
insb
in
jo
and
rorb
pop
mov
popa
clc
adc
cltd
dec
push
adc
in
jp
or
imul
xchg
mov
enter
aad
je
and
mov
and
sub
mov
cmpsl
leave
sbb
pop
mov
lds
cmp
inc
addl
fst
pop
xchg
mov
pop
cld
sti
jno
xchg
out
js
push
ret
xor
jecxz
fldl
sub
sub
push
mov
lret
sub
rcrb
dec
incb
hlt
lods
test
scas
js
fwait
and
mov
rcrb
pop
int3
out
clc
mov
inc
sbb
add
mov
lcall
jmp
std
out
jg
lcall
dec
and
mov
popa
les
loopne
jecxz
cli
outsb
and
addl
inc
dec
scas
orb
je
pop
stos
xorb
xchg
xor
in
pushf
or
sbb
outsl
or
insb
push
xor
in
cmp
jecxz
mov
mov
nop
dec
and
pop
jg
xchg
loopne
repnz
inc
and
mov
xchg
push
cmp
jg
lcall
xchg
dec
cmp
mov
fs
xchg
xor
dec
mov
out
adc
xlat
cwtl
ret
dec
lock
add
xchg
ss
or
fcmovu
xchg
mov
in
lcall
cmp
jb
aam
xchg
loopne
adcb
and
xchg
sub
mov
push
mov
inc
pop
dec
stos
stos
loopne
hlt
lds
sub
imul
aad
lds
or
notb
pusha
mov
sbb
add
sbb
sub
cmp
daa
pop
jns
bound
mov
mov
jmp
sub
push
pop
les
fisubl
daa
adc
subb
add
sbb
pushf
aam
mov
fs
inc
sbb
pop
stc
and
dec
setae
lcall
adc
xchg
into
sti
dec
std
or
icebp
cmp
xor
mov
mov
xor
or
cmc
add
adc
mov
sahf
pop
in
int
popf
xor
or
rorb
add
loop
sbb
pop
mov
arpl
lret
enter
xchg
gs
jo
fs
adc
lcall
mov
push
pushf
pop
pop
dec
out
xchg
jecxz
fldpi
inc
xor
rol
loopne
or
setb
sbb
dec
out
adc
lcall
call
mov
stos
add
neg
decl
push
push
fcom
test
sbb
mov
adcb
or
jg
das
negb
jae
aaa
mov
aaa
pop
lock
jb
lea
inc
lods
cmpl
sahf
lret
fdivrs
jecxz
cwtl
cwtl
jb
in
repnz
fstpl
ficompl
push
cmp
es
mov
xchg
out
or
push
jae
cmp
fst
pop
or
push
push
fmulp
popa
ds
mov
mov
adc
jnp
addr16
roll
add
imul
jno
jo
sarb
xchg
xor
dec
mov
ret
adc
sbb
and
lret
sahf
in
mov
push
jmp
xchg
jl
or
jle
repz
mov
lret
mov
subb
add
aad
xchg
imul
repnz
mov
pop
jne
cltd
js
pop
rorb
faddl
mov
jmp
js
xchg
lock
jg
xchg
testb
fwait
cld
lods
and
fimuls
stos
sbb
loope
imul
mov
cmpsb
fs
sbb
iret
aad
pop
sbb
lcall
mov
pop
popa
repnz
sbbb
popa
adc
scas
push
adc
sub
sub
inc
cmp
jg
sub
orb
ja
notl
pop
loop
loopne
xor
mov
pop
cltd
push
lods
out
movsb
je
cwtl
ret
popf
in
lods
xor
or
lret
add
mov
orl
push
adcl
add
shr
rcll
add
pop
sub
movsl
es
aam
inc
pop
jb
mov
xlat
cmc
pop
and
fwait
or
jb
jae
outsl
mov
in
sbb
mov
push
shlb
pop
imul
mov
dec
sub
lahf
loop
popf
lret
pop
cld
popa
shll
mov
xchg
jle
jbe
bound
adc
mov
push
out
scas
fists
add
push
test
stos
adc
clc
mov
pop
cmp
stos
icebp
sub
jmp
mov
lods
aas
rorb
inc
js
push
xorb
jb
es
inc
add
pusha
test
pop
pop
aad
cmp
push
mov
lock
frstor
popa
mov
and
das
dec
mov
popa
icebp
pop
jmp
inc
mov
mov
imul
push
cmp
pop
pop
mov
and
cmp
lahf
cltd
movsb
cld
call
adc
mov
or
cmp
jns
in
dec
bound
and
mov
dec
mov
sahf
es
sbb
or
imul
movsb
scas
loopne
inc
nop
sbb
dec
pusha
fwait
dec
in
mov
negb
negl
out
dec
cmpsb
adc
pop
aam
pushf
stos
scas
push
les
jne
cwtl
rorl
rorb
ss
outsb
sbbl
gs
aam
shll
popa
imul
pop
int
stos
ja
mov
fst
xchg
ja
ficoml
mov
cmp
mov
sub
mov
xor
push
je
adc
lods
mov
mov
xor
xchg
xor
and
rcll
push
cltd
cmp
cmpsl
cmp
mov
ss
insl
pop
fisttpl
adc
jl
stos
int3
test
add
fadds
pop
inc
pop
sar
jge
xchg
fwait
scas
in
lds
sub
mov
xchg
movsl
call
push
stos
or
pop
mov
std
push
push
lds
sub
mov
rorb
clc
pop
cld
into
arpl
in
incb
cmp
jge
fwait
das
pop
les
das
outsl
data16
in
ljmp
xchg
mov
xor
or
jle
inc
cmpsb
xlat
or
arpl
cmp
push
movsb
push
push
imul
jne
xlat
int
lahf
cmp
cld
or
in
addr16
int3
push
cmpsb
xor
aaa
int3
and
push
pop
loope
inc
push
push
icebp
sub
xchg
mov
inc
push
es
cmc
jnp
or
aas
out
in
add
cltd
inc
mov
jle
out
and
sub
add
insb
mov
popf
dec
aam
dec
clc
jb
les
xor
shrb
xor
adc
int3
ljmp
fcmovne
cld
stc
inc
push
xchg
xchg
and
aaa
ds
sub
sub
nop
das
pop
int3
jo
jle
jmp
inc
jae
mov
and
clc
xor
scas
cmp
sub
loopne
arpl
ret
ret
push
xlat
insb
jp
dec
lods
jbe
fldt
xor
push
shll
fdivs
aad
pop
push
mov
inc
xchg
sahf
and
push
pushf
push
pushf
sbb
mov
dec
xchg
das
lea
imul
sub
mov
into
and
in
in
xor
js
clc
jl
push
test
sub
roll
hlt
mov
dec
jl
jl
cmp
ret
ljmp
ror
lret
ror
and
aad
out
es
jns
inc
inc
add
inc
dec
xchg
push
lret
mov
jne
imul
imul
sbb
iret
mov
test
and
ret
and
int3
les
sbb
clc
add
sti
and
or
call
pop
push
cld
fisubl
shr
sbb
dec
cli
clc
mov
xchg
loope
js
leave
mov
mov
mov
arpl
rcl
ss
xchg
ljmp
sbb
mov
sti
outsl
aas
pop
push
xlat
jge
jno
stos
dec
mov
iret
repnz
inc
pop
xor
ret
push
add
and
cmc
pop
xor
rcrb
xchg
xor
jae
cmp
call
test
dec
jnp
fdivl
push
add
insb
sarb
inc
imul
popa
mov
testb
and
sbb
mov
xchg
or
ror
bound
loope
add
sub
out
sbb
dec
pop
pusha
pop
stc
sarb
das
fmul
mulb
mov
movsl
inc
ret
ffree
sbb
negl
mov
jne
fwait
popf
dec
test
sbbl
push
cld
pop
out
lds
dec
lock
fs
lds
lea
cltd
notb
xor
fidivs
dec
das
dec
jns
dec
pushf
sub
push
ds
or
into
xchg
or
adc
insb
repnz
xor
or
dec
mov
or
pop
test
xlat
or
cltd
cmpsl
ss
lock
and
xchg
iret
jle
in
inc
jnp
cld
sbb
mov
icebp
or
scas
insb
sbb
mov
jne
ret
lea
mov
scas
mov
ja
xor
insl
jae
nop
sub
or
icebp
frstor
mov
fildll
subl
rcrb
testb
pushl
sub
xchg
add
cmp
jbe
push
mov
sub
jb
inc
lret
adcl
mov
mov
sbb
fs
push
jbe
sub
aad
pop
cmp
mov
mov
xchg
dec
mov
xor
mov
mov
sub
stos
push
fmull
xor
mov
mov
lret
into
outsl
push
pop
mov
jae
cmc
add
addr16
loope
hlt
cmc
test
jae
add
ss
lret
mov
fsubs
cmp
sub
fnstcw
jo
fs
cmp
jnp
or
shll
call
lea
and
aaa
dec
and
mov
rcl
clc
inc
dec
xor
in
pushf
lock
imull
insl
ror
or
fwait
adc
leave
mov
ret
push
jne
lahf
push
lcall
jl
push
cmp
imul
xorl
mov
jmp
les
sahf
movsl
xchg
inc
pusha
jp
pop
cmpsl
jae
outsb
popa
movsb
sub
scas
in
mov
pop
inc
sub
insb
daa
push
dec
dec
jbe
popa
dec
inc
je
add
fidivrs
xchg
loop
jae
push
aas
out
popa
daa
push
or
pop
jp
out
daa
imul
popa
shll
sbb
mov
shlb
call
cwtl
mov
xchg
scas
sarl
adc
pop
add
and
jne
nop
test
aaa
xor
mov
clc
inc
loopne
std
xor
push
lret
icebp
or
or
sub
pop
dec
iret
or
sbb
jbe
enter
mov
push
out
inc
mov
out
ret
cli
movsl
push
cmp
adc
mov
add
mov
lahf
pop
shlb
movsb
dec
not
cmp
jg
xor
lods
popa
fisubrl
xchg
pop
clc
jg
jmp
in
lds
test
pop
sbb
pop
ret
push
or
jne
int
cmc
pop
add
adc
dec
aaa
push
mov
dec
adc
cmpsb
pop
fildll
push
jns
sti
mov
pop
xchg
xchg
and
les
out
sub
bound
popf
data16
sbb
xchg
cmp
jg
aas
leave
push
lret
outsb
fidivl
lea
sti
mov
cmp
outsb
or
adc
icebp
cs
test
in
pusha
enter
fmul
outsb
mov
repnz
sub
inc
pop
insb
imul
or
mov
mov
jb
inc
add
int
push
fisttpll
into
test
mov
lret
pop
fsts
xchg
cwtl
aaa
pop
mov
jb
clc
pop
shlb
mov
push
ret
mov
sar
lcall
cmpsb
sub
dec
xor
sub
cmp
das
adc
jmp
inc
test
dec
popa
or
mov
fists
xchg
movsl
mov
mov
pop
push
mov
jg
push
mov
dec
mov
in
jg
fdivrs
subl
into
pop
dec
repz
sahf
xchg
test
scas
stos
pop
data16
jmp
sbb
or
sbb
mov
sbb
int
push
pop
les
out
pop
cmp
push
mov
lea
mov
mov
cli
pop
xor
lods
leave
mov
idiv
pop
in
mov
mov
push
cmp
and
sbb
cld
pop
les
xchg
imul
and
pop
inc
sbb
xchg
ret
jg
lods
mov
icebp
movsb
loop
fcmovne
dec
hlt
adc
xor
pushf
fdivrl
in
pop
adc
dec
dec
jl
fnsave
jl
sub
loop
cmp
orl
loopne
rcrb
adc
les
test
mov
leave
neg
inc
and
dec
inc
adcl
mov
push
push
cli
mov
sti
ficompl
or
loope
sub
sar
sahf
faddl
xchg
adc
cmc
lahf
and
pop
test
pop
addr16
sbb
dec
lret
sbb
jns
jns
cs
dec
shll
lods
test
outsb
and
jae
xor
sub
aas
jmp
add
aad
in
jbe
fcoml
push
fimull
add
stos
xor
push
sub
or
leave
int3
imul
int3
mov
fcmovbe
cwtl
pop
lock
jbe
shlb
aad
push
mov
ljmp
and
pop
add
sti
das
imul
insb
les
pop
ljmp
std
xor
or
cli
fcmovnbe
jae
fstps
lods
fisttps
out
push
pop
gs
xchg
loop
jnp
inc
test
cmpsb
push
dec
or
sbb
popa
daa
call
sbb
jbe
inc
sbb
movsl
or
insb
dec
jbe
cmc
xchg
test
cmpsl
outsl
pop
lret
test
add
js
xchg
add
xchg
mov
mov
out
push
mov
jae
mov
inc
pop
pop
mov
pop
and
ja
cmpsl
fldenv
push
jp
loop
and
xor
jmp
add
clc
scas
fisubl
bound
sub
inc
push
mov
jae
sbb
pop
bound
enter
inc
shr
mov
jno,pt
roll
xabort
out
aaa
cmpsl
push
mov
push
push
adcb
inc
lret
hlt
fs
in
sub
and
xor
roll
cmp
jns
cmp
xor
in
stc
pushf
scas
sbb
dec
mov
jecxz
arpl
mov
push
negl
in
cmp
dec
enter
mov
mov
or
mov
lock
scas
xor
xchg
enter
dec
fstpt
xor
mov
jno
add
shlb
sub
sub
test
imul
mov
shrb
xor
sub
mov
add
mov
push
das
aam
ucomiss
fscale
dec
sub
hlt
mov
data16
fistl
imul
sbb
cld
jmp
int
and
xor
test
roll
jbe
push
add
arpl
xlat
test
push
loopne
inc
or
loop
jecxz
pop
gs
fidivl
mov
loope
mov
gs
dec
nop
lods
ja
mov
sub
faddl
xchg
shrl
clc
js
jno
fdivp
fstpl
adc
rol
arpl
lret
movsl
cmp
test
stos
cmpsb
adc
cmpsl
push
cmp
imul
or
dec
outsb
ljmp
inc
lret
pop
sub
pop
push
xor
cmp
ret
scas
xor
pop
adc
jne
and
pop
xlat
aas
sub
pop
jbe
mov
outsl
add
data16
loopne
andb
inc
inc
adc
out
mov
inc
icebp
scas
push
push
mov
fcomps
fcomip
fnstenv
mov
cld
adc
lahf
pop
imul
mov
adc
sbb
mov
lcall
xor
lods
mov
and
daa
xchg
jns
int3
mov
push
and
mov
out
xor
pushl
lods
sbb
imul
mov
cli
inc
ret
arpl
idivl
fcmovnb
xor
ljmp
jl
out
and
jg
add
jo
add
jle
jg
push
mov
and
pmuludq
gs
xor
movsl
ds
ret
jo
mov
pop
adc
rcrl
cs
or
iret
pop
and
insb
popa
xchg
sbb
popa
jp
aam
repz
add
push
cld
ds
adc
mov
scas
or
jne
pop
push
inc
sub
mov
sbb
mov
cmpb
dec
fs
and
xor
jg
sbb
pusha
data16
test
inc
xor
pushf
repz
pop
das
adc
sbb
mov
adc
xchg
ret
gs
push
sbb
or
push
dec
add
sub
xchg
int3
xchg
fsubr
add
ret
add
inc
mov
add
arpl
insb
dec
cmpsb
xor
fildl
push
aam
push
sub
int
and
push
lret
push
mov
shll
xchg
iret
push
mov
scas
dec
lcall
jb
je
xchg
jg
inc
add
scas
cwtl
movsl
ror
mov
xor
ret
ja
sub
pushf
mov
orl
sbb
sbb
pusha
out
fstpt
jae
mov
or
sub
aam
sbb
mov
xlat
push
adc
push
pop
mov
mov
mov
shrb
push
inc
xchg
fdivs
nop
adc
lds
popa
sub
lods
xlat
jo
xor
arpl
xchg
jmp
lahf
test
mov
or
cmp
fimuls
xchg
sbb
push
inc
adcl
loop
pop
out
fs
leave
ds
mov
xor
mov
ljmp
into
ret
jmp
arpl
xor
jae
push
icebp
or
mov
test
test
push
push
sub
rcl
gs
cmpsl
dec
bound
sbb
pop
xor
lret
cmpsl
adc
inc
jno
dec
push
pop
stc
mov
mov
popf
xor
mov
mov
cli
add
outsl
cmp
out
mov
test
mov
xor
cmp
mov
cwtl
sub
mov
adc
mov
inc
lods
fst
aaa
mov
sub
inc
pop
out
cmp
cmp
pop
and
rcr
stos
cltd
repnz
stos
add
repnz
jecxz
jbe
sub
insl
pushf
repz
or
clc
aaa
and
arpl
sbb
and
imull
adc
sub
and
sbb
pusha
or
dec
fstpt
imul
or
mov
push
fs
data16
dec
cmp
test
jb
mov
sub
mov
repz
or
std
jns
outsb
jbe
and
cmp
jne
cs
pop
push
add
pop
loop
cmp
dec
cmc
mov
rorb
adc
jmp
xor
or
shll
mov
lret
cs
hlt
xchg
pop
dec
bound
fs
push
repz
dec
jo
in
push
stos
fnstsw
inc
out
out
daa
in
push
idivl
push
push
jnp
and
push
stos
xor
hlt
daa
lock
cmp
dec
cld
pop
daa
or
aaa
push
mov
aad
test
adc
je
adc
cmp
in
mov
fildl
xchg
pop
jmp
sub
imul
sub
inc
iret
cmpsb
sahf
popa
cld
mov
pusha
inc
imull
sbb
into
jno
sub
stos
lahf
int3
sbb
lods
sub
aas
lcall
ja
bound
xchg
xor
sub
nop
jo
jb
inc
fsubrs
or
push
out
pop
fldt
dec
fisttps
movsb
pop
lahf
popa
inc
insb
pop
enter
dec
pop
sti
jae
dec
cltd
repnz
push
popa
jmp
int
jecxz
aas
aam
push
push
pusha
testl
ljmp
fisttpl
xchg
ds
pop
aaa
fs
imul
cmpsl
jmp
pop
outsb
int3
bound
sbb
sti
mov
push
lods
hlt
fmuls
lret
fcompp
cltd
cmpsb
gs
push
jg
in
xchg
xchg
movsl
and
xor
push
adc
daa
xor
push
mov
dec
lret
loop
lcall
fmul
fistps
fs
bound
les
es
jecxz
mov
mov
push
jnp
add
mov
push
mov
fiadds
nop
mov
or
push
pop
ja
jg
pop
ljmp
add
pop
call
roll
push
fldl2e
pop
sub
int3
push
nop
jge
mov
in
cmpsb
sub
mov
dec
dec
jp
add
cwtl
in
enter
stos
dec
xchg
inc
push
bnd
adc
pop
negl
out
out
xchg
sbb
sbbl
jns
push
test
lods
sbb
jp
inc
mov
and
mov
hlt
sub
daa
sbb
mov
mov
std
xchg
movsl
ds
cmpsl
gs
cltd
fcompl
arpl
mov
jp
inc
jns
jb
int3
daa
in
sub
lods
mov
ret
inc
pop
xchg
adc
xor
mov
dec
mov
pop
lcall
mov
inc
or
xchg
push
or
icebp
out
jae
pop
sub
adc
sbb
ljmp
jmp
insl
inc
fstpl
shll
out
cmp
fnsave
fdivs
out
int3
add
add
or
mov
lds
cs
test
xchg
and
incl
push
inc
push
fstps
inc
xorb
mov
pop
jle
xchg
adcl
dec
pop
jl
sub
or
xor
cld
bound
or
jno
dec
push
pushf
mov
dec
xor
inc
mov
fimull
cmp
ret
test
lock
mov
mov
dec
js
sbb
sub
rcrl
fdivrs
xor
sbb
and
ret
int3
mov
push
lcall
les
ljmp
out
push
xor
push
out
adcb
adc
or
dec
stos
mov
lret
ljmp
jo
pop
or
pop
imul
movsl
loope
lret
movsb
jo
ds
les
insb
push
mov
cli
xor
imull
add
push
xchg
test
gs
dec
sbb
xchg
es
fcomp
lds
mov
fstl
shl
jae
adc
adc
mov
sbb
inc
jo
inc
mov
sahf
xchg
push
mov
mov
sub
fs
imul
pop
in
xchg
sub
repnz
jo
not
sub
xchg
mov
dec
pop
sub
push
mov
iretw
ret
ficoml
mov
xor
data16
xchg
xchg
mov
adc
push
popf
loopne
sbb
push
adc
stos
jne
xlat
push
cmpb
or
insl
or
mov
pusha
test
cli
dec
add
sbb
add
aaa
push
pop
mov
jb
sbb
decb
inc
popf
leave
icebp
popl
and
pushf
jnp
call
ficoms
mull
dec
fmull
out
sbb
add
xor
sub
xchg
inc
cs
push
arpl
mov
test
inc
test
jnp
xor
push
xor
ljmp
sahf
pop
adc
lsl
pop
mov
cmpsb
and
and
shrb
jmp
inc
sub
xchg
xlat
jmp
aam
jmp
cs
orb
popa
pop
pop
fistps
jno
inc
int3
fidivrl
fwait
xchg
movsl
pop
lds
fistpll
mov
mov
xor
test
xchg
stos
add
pop
jno
movsl
in
pop
cmp
in
add
int
cli
fsubrs
adc
pushf
jno
lock
add
xlat
jns
test
mov
int3
push
ror
frstor
rcll
mov
xchg
leave
dec
aaa
xchg
aas
and
dec
sbb
pusha
cmp
inc
adc
out
or
in
test
addb
pop
cmp
cmpsl
cltd
lret
sbb
fwait
inc
scas
fdivrl
aas
adc
lods
sbb
mov
xor
mov
loope
sahf
shlb
ss
je
outsl
test
in
pop
pop
outsb
sar
mov
repz
fisttpl
icebp
pop
hlt
sbb
xor
xor
je
mov
aam
mov
add
mov
fwait
jns
mov
enter
mov
and
ret
fistpll
shll
xchg
sbb
xchg
cmp
ret
andl
fucompp
aaa
xor
sbb
mov
js
lret
gs
cmp
int
cmc
and
sub
decb
mov
cmp
loope
xchg
sbb
enter
rolb
adc
pop
add
das
out
lods
call
xchg
cmpsl
push
or
push
xlat
push
inc
scas
ds
inc
adc
xor
xchg
ret
mov
inc
push
icebp
dec
inc
push
and
mov
es
mov
mov
or
fldenv
mov
gs
dec
push
lahf
inc
jno
les
or
mov
inc
lret
test
fistps
mov
in
aad
and
fs
fistpll
xor
xor
aaa
xor
sti
ss
dec
sarb
xchg
imul
cwtl
and
into
pop
loop
imul
mov
gs
mov
jmp
jns
fadd
sbb
sbb
mov
mov
outsl
idiv
adc
scas
bound
loopne
pop
pop
sbb
je
fisttpll
jl
pop
mov
aaa
sbb
fsubrs
cmpsb
xchg
test
sbb
test
xor
adc
cmp
mov
out
add
stos
daa
loope
mov
mov
cmp
add
dec
imul
in
adc
outsl
shlb
test
push
xchg
mov
repnz
popa
nop
sbb
loopw
or
sbb
iret
shrb
cli
xchg
sbbl
into
inc
sbb
pushf
xorb
mov
scas
pop
jecxz
dec
add
pop
xorb
lods
jmp
adcl
xchg
shll
push
inc
mov
lahf
shll
nop
mov
xchg
fs
jnp
xchg
cmp
xchg
push
add
mov
jecxz
mov
insl
push
mov
es
jp
jne
mov
pop
add
push
inc
or
inc
mov
jnp
sti
fildll
mov
div
dec
mov
mov
outsl
xchg
cmp
dec
cld
add
fidivrl
jp
test
dec
arpl
sub
lods
adc
les
loopne,pn
push
scas
outsl
or
sbb
dec
shl
and
in
lods
iret
push
mov
in
andb
pop
pop
movsl
cmp
push
mov
dec
aas
les
dec
scas
ss
loopne
les
jae
and
lods
jecxz
mov
int3
mov
or
cmpsb
push
out
mov
jnp
int
cmp
jle
inc
shl
pop
test
mov
call
ret
dec
data16
imul
push
scas
dec
cmp
inc
adc
adc
call
popa
stos
subl
dec
pop
scas
add
mov
in
jno
mov
enter
sub
xchg
leave
fimuls
dec
repnz
push
mov
movsl
test
cmc
cmp
cs
in
pop
test
cmp
xor
fdivrs
sbb
dec
jb
int3
jge
push
jne
insb
out
inc
cmc
lcall
in
ret
push
xor
imul
push
lods
sbb
mov
lret
lods
lret
pusha
out
push
xchg
outsl
or
fs
sbb
cmc
mov
mov
stos
dec
xor
cwtl
add
pop
iret
addr16
fisttpl
mov
in
adc
mov
mov
repz
inc
dec
mov
xor
rcr
pusha
movsb
cmc
jnp
popa
mov
ret
enter
or
gs
adc
mov
aam
fldcw
stc
ficomps
fidivrl
test
pusha
cs
sbb
mov
jne
outsl
xor
mov
mov
insl
int
push
movsb
pop
sub
out
ret
cli
enter
jae
mov
and
test
test
sbb
lea
or
push
lahf
lods
dec
out
push
fstps
mov
mov
lret
inc
jno
pushf
mov
imul
sbb
js
pop
sbb
dec
js
fnop
jno
pop
inc
mov
xchg
mov
push
aam
dec
call
shrb
mov
push
mov
jns
popa
popa
xor
mov
into
pushf
cli
fmulp
repz
mov
jo
inc
ret
and
gs
mov
mov
mov
mov
lds
mov
jle
xchg
mov
push
xor
incl
fdivr
mov
clc
inc
in
lods
xchg
rcrb
je
add
dec
iret
fcoml
fbstp
roll
aaa
repz
int
mov
cmp
inc
jb
xchg
ret
into
and
add
leave
adc
shll
sahf
fcmovnbe
push
fcmovnbe
mov
lret
inc
mov
nop
insb
adc
mov
ljmp
pop
das
mov
cmp
push
cmp
xchg
inc
pop
or
popf
push
lds
cmp
sbb
xor
push
push
push
push
ss
sbb
stos
in
outsb
push
dec
aad
shll
xor
dec
mov
mov
cmp
mov
dec
or
insl
out
dec
inc
push
scas
aas
lods
sub
cmp
clc
push
sub
jbe
push
js
pop
ffreep
xor
scas
std
cmp
xlat
jl
pusha
into
dec
dec
xchg
jne
push
add
aas
push
sbb
inc
push
jno
xchg
lcall
cmc
pusha
js
int3
jge
cld
mov
dec
popa
cmp
push
sbb
cmp
adc
push
fsubs
lods
dec
ljmp
cli
call
subb
add
push
adc
pop
outsb
sbb
xor
stc
fcomps
jno
and
ss
ror
adc
jo
or
mov
icebp
ror
loopne
push
rclb
xor
mov
or
jmp
adc
sbb
push
je
movsb
shlb
ja
push
cmp
ja
cmp
or
sbb
sbb
fiadds
mov
cmp
outsb
roll
sub
cmpb
dec
cmp
add
ja
dec
outsl
sub
negl
sahf
mov
movntq
dec
gs
imul
push
fs
stos
xor
adc
out
push
cmp
pop
out
push
and
xor
adc
cmpl
fistpll
mov
inc
sub
sbb
in
sti
or
push
aad
mov
and
cmp
dec
bound
mov
iret
imul
or
lock
or
std
ljmp
mov
or
insl
loop
cmpsl
add
aaa
je
fwait
adc
mov
push
push
test
shll
hlt
dec
push
insl
sbb
dec
push
jnp
cwtl
xchg
sbb
test
loope
and
cmp
pop
mov
movsb
test
insl
cli
add
inc
pop
add
in
hlt
and
lcall
push
icebp
push
xlat
jns
jb
adc
push
sbb
jp
mov
movsb
test
scas
and
push
std
leave
sub
jecxz
adc
repz
pushf
in
jne
and
inc
adc
inc
jg
sub
xchg
mov
mov
or
xchg
fucomi
ds
mov
push
pop
mov
ljmp
sub
or
roll
imul
mov
test
mov
loope
adc
lea
andl
cltd
scas
bound
pop
inc
js
insl
xlat
sub
in
push
sub
out
fcoml
into
pop
xorb
cmp
daa
and
sub
jp
cmp
jmp
mov
out
inc
fnsave
xchg
mov
les
jg
popf
incb
aaa
xchg
stc
int3
loopne
insb
jp,pt
loopne
mov
dec
roll
in
sub
lods
adc
out
dec
sub
xor
and
lahf
pop
dec
loop
fiadds
cmpsb
pop
push
test
and
ret
cli
bswap
pop
or
mul
fs
adc
ret
sbb
lahf
data16
adc
leave
stos
push
pop
cmp
push
dec
adc
sub
adc
pop
loopne
xchg
dec
lcall
xlat
adc
adc
lods
aaa
cmpsl
sbb
je
sub
aaa
ss
in
pop
in
je
repnz
sbb
hlt
imul
and
adc
and
xor
outsb
sbbl
mov
push
insl
cmpsl
sub
adc
enter
bound
push
xchg
popf
or
testb
jb
lret
sub
mov
mov
push
lea
mov
imul
repnz
xchg
push
das
fildll
or
call
push
jne
das
imul
int
loopne
dec
sti
and
and
mov
arpl
stos
icebp
addb
cmpsb
push
cmp
mov
mov
sbb
inc
adc
mov
fisttps
jbe
inc
or
out
pop
or
scas
mov
test
mov
cmp
sub
jmp
mov
xchg
xchg
mov
lods
sbb
mov
cmp
div
mov
lret
xor
movsl
inc
test
jnp
xor
inc
or
cltd
into
push
fiadds
into
mov
fldt
sbb
adc
enter
mov
and
mov
adc
mov
lret
jnp
outsb
imull
lahf
sub
lahf
jns
enter
fs
loope
rcll
inc
push
push
add
mov
into
cmp
fs
ss
icebp
pop
push
or
pop
jbe
fistpll
out
aad
popa
and
int
xor
jno
sbb
push
pop
rol
into
push
push
or
inc
icebp
and
scas
insl
leave
push
pop
mov
sbb
es
push
in
adc
sbb
stos
lock
outsb
stos
lret
imul
or
add
cmpsb
lea
add
das
popa
mov
andb
sbb
ss
in
into
mov
aaa
cbtw
dec
lret
fdiv
mov
cmp
mov
movsb
rcr
sti
xchg
mov
ficomps
or
mov
lcall
in
push
icebp
pop
lcall
add
xchg
push
mov
inc
push
sarb
adc
pop
cmpsb
pop
xchg
orb
rorb
movsb
stos
mov
push
xor
je
enter
out
cld
fcmovnb
roll
scas
addl
ret
xor
or
dec
ret
repz
les
das
adc
fwait
push
pop
stos
lahf
mov
or
test
out
mov
fwait
xchg
ret
popa
sub
xchg
mov
movsl
add
push
pop
cmp
mov
repnz
popa
mov
xor
mov
mov
mov
cmc
mov
cmc
iret
sbb
fdivrs
insb
jg
adc
xor
xchg
bound
mov
fwait
cmp
cmp
cmpsb
jnp
mov
jle
sbb
and
jno
shl
mov
cli
sbb
fwait
dec
repz
movsl
mov
mov
fisttps
mov
lret
dec
jns
or
dec
addb
int
ret
dec
icebp
mov
stos
pop
aam
mov
pushf
andb
xchg
cwtl
push
pop
insl
scas
cwtl
mov
ss
and
out
and
xor
adc
gs
lods
enter
je
sbb
nop
or
xor
aas
or
outsl
andb
lods
push
mov
inc
cs
test
mov
sbb
lea
pop
or
sbb
test
xor
in
shlb
pop
adc
add
leave
sarl
imul
lock
mov
fmuls
seta
add
stos
jl
mov
push
addl
cmp
jecxz
lahf
adc
pop
mov
sti
les
test
xchg
inc
xor
push
inc
js
inc
add
dec
cvtps2pd
test
fisubrl
fucomi
inc
fisttpl
adc
pushf
and
fdivr
lcall
mov
mov
stos
and
and
xchg
adc
add
ja
adc
test
mov
jns
bound
outsb
sub
addb
or
sub
call
dec
loop
out
lock
std
xchg
stos
adc
lcall
pop
pusha
xchg
jg
mov
sub
mov
mov
mov
dec
dec
mov
test
sub
sarb
movsl
aas
sti
shrb
xchg
daa
jle
repz
sbb
mov
repz
inc
sbb
rcrl
pop
adc
int
xchg
orl
test
xor
stos
addb
mov
or
ficompl
and
fbld
pop
decl
lahf
int
imul
or
les
pop
mov
dec
sub
cltd
xchg
addr16
xlat
mov
dec
ljmp
gs
sbb
push
call
leave
mov
in
scas
pusha
push
pop
jnp
push
std
mov
mov
hlt
adc
jbe
fsubr
out
aam
or
push
test
test
dec
gs
cmpsl
rcll
xlat
ds
shl
jb
mov
sub
pop
xchg
test
sbb
adc
xlat
or
dec
sti
sub
jno
aad
dec
call
mov
shrl
sub
dec
jle
add
faddl
in
pusha
imul
mov
mov
inc
inc
cmpsl
imul
sahf
cs
mov
fsubs
or
xlat
jp
mov
in
cltd
pop
jb
bound
ret
stc
xchg
cmpl
add
stos
lcall
mov
and
dec
outsb
pop
bswap
or
cmpsl
xor
fwait
pop
mov
hlt
pop
in
in
repnz
popa
data16
js
scas
jmp
push
in
enter
xor
cli
cmp
inc
push
mov
xchg
int
gs
scas
mov
bound
nop
movsl
add
test
mov
adc
sahf
pop
outsb
push
add
lds
and
subl
jno
les
mov
out
arpl
insl
add
and
sbb
in
fmul
mov
add
shlb
pusha
and
mov
push
mov
insl
xchg
popa
out
jbe
test
dec
mov
jmp
or
cli
mov
aam
adc
dec
shl
adc
lock
sbb
sar
mov
lds
mov
sbb
hlt
dec
sbb
xchg
not
add
pusha
add
push
roll
enter
cmp
cmp
es
rclb
xor
sbb
cld
outsl
fwait
jmp
aad
out
and
and
push
iret
sub
and
pushf
inc
mov
sub
out
dec
xor
mov
addr16
push
cmp
movsl
js
fidivrl
mov
pop
inc
rcll
cld
pop
call
mov
xchg
loop
mov
movsb
call
xor
lods
push
popf
or
pop
arpl
sub
in
cmc
jmp
sbb
mov
ret
mov
cltd
sbb
push
cmp
test
xchg
mov
inc
xor
ljmp
mov
or
push
xor
xchg
call
mov
mov
aam
pusha
lahf
jbe
xchg
std
dec
insl
or
js
testb
dec
pushf
or
adc
cmp
or
pop
jno
xlat
jbe
push
sarb
test
test
add
sub
xchg
fnstenv
cmp
mov
pop
test
adc
call
and
call
aad
in
iret
popf
scas
loope
mov
bound
push
hlt
repnz
outsb
push
popa
dec
pop
insb
lahf
pop
aas
orl
inc
jge
ja
pop
xor
lret
stc
bound
rcr
in
jl
and
mov
sub
dec
repnz
lahf
pop
pushf
mov
jno
sbb
inc
xor
mov
cltd
mov
ret
das
jne
pop
push
aam
adc
mov
mov
lahf
mov
jne
repnz
xchg
mov
jae
or
loope
test
add
cld
dec
pop
add
sub
repnz
repz
cmpsb
test
add
cli
dec
je
push
in
dec
addb
pop
xchg
movsb
inc
lahf
lahf
pop
outsb
add
loope
and
pushf
cwtl
sub
fadds
iret
pop
sarb
mov
dec
aaa
mov
push
rol
mov
xchg
inc
push
lock
outsb
xchg
int3
notb
sbb
mov
out
cmp
aad
orl
cs
jge
ficoms
out
xor
dec
test
fcmove
mov
push
das
add
fstpt
sarl
cmc
mov
jno
sbb
xlat
adc
jle
adcl
pop
mov
xor
fs
jne
or
mov
sub
int3
mov
ljmp
out
popa
adc
push
sbb
rolb
sub
xor
fcom
jmp
repz
push
xor
addr16
jno
push
and
dec
test
cmp
lret
mov
rclb
inc
cld
push
lcall
inc
shrl
stc
sub
lret
fwait
mov
outsb
bound
das
jbe
xchg
ret
int3
shr
or
pop
adc
pop
ret
xchg
sbb
sbb
divb
xor
xor
popa
int
js
mov
mov
js
ret
adc
outsl
jo
pusha
loope
jg
pop
adc
mov
mov
push
int
cmpsb
xchg
lahf
inc
mov
or
icebp
outsb
rcl
and
out
mov
rcr
fildl
mov
ficoml
ret
mov
das
cmp
push
xor
popa
pushf
pinsrw
jnp
adc
dec
pop
stc
add
xor
js
dec
inc
scas
lret
stos
pop
lock
arpl
xlat
or
or
xor
pop
xor
aam
mov
xchg
and
decl
lcall
or
mov
cmp
push
push
lea
jmp
fdivrl
addr16
xor
push
popa
inc
push
and
xchg
add
loopne
mov
fsub
mov
rcll
fcoml
imul
or
hlt
sbb
mov
adc
fisubrs
pop
mov
mov
push
std
jmp
push
dec
xchg
push
jne
in
outsb
outsb
nop
stos
dec
out
dec
cmp
sbb
pxor
mov
outsb
push
in
shrb
loop
test
or
call
dec
aam
shlb
add
jecxz
les
gs
loope
lds
pop
enter
scas
ficomps
lahf
pop
clc
test
add
hlt
cld
xchg
loop
fisubl
outsl
xor
xor
push
cmp
add
ds
mov
xor
adc
sub
inc
lods
mov
mov
test
sti
and
adc
fidivs
aas
arpl
mov
jl
push
das
sahf
mov
ret
mov
and
andl
inc
lcall
in
push
pop
repz
jp
sbb
pop
outsb
ljmp
pop
push
movsl
outsl
in
rcr
mov
and
xor
nop
ret
and
xchg
adc
sahf
mov
xchg
pop
push
scas
test
ja
jno
jns
jae
sbb
ljmp
sbb
jl
cmp
je
movsb
add
jmp
xchg
lea
mov
push
sub
push
and
adc
adc
fisubrl
xchg
cli
push
sbb
pushw
lret
js
xor
inc
cltd
cmp
sbb
lahf
jae
aaa
decl
cli
dec
repz
js
pop
mov
mov
aaa
and
es
cmc
sub
outsl
jle
nop
outsl
ds
mov
mov
rol
test
sbb
and
or
ret
icebp
iret
mov
cmp
push
jp
bound
xor
ss
xor
add
cmp
mov
sbb
or
inc
fldl
cmpl
cmp
idivl
mov
lret
bound
lods
jge
testl
and
fiaddl
cli
mov
inc
data16
sahf
ss
dec
adc
repz
mov
andb
fs
mov
in
jae
dec
mov
push
mov
ret
push
std
jnp
jnp
out
outsl
loope
xor
rcrl
adc
addr16
insb
adc
inc
pop
push
add
mov
mov
push
std
rcll
xchg
fwait
cwtl
fs
sub
fcomps
pop
xchg
js
sub
xor
test
xor
lds
mov
rorb
cs
andb
xor
sub
roll
rcrl
sub
jne
stos
xchg
mov
xor
aam
rcll
loopne
lods
add
mov
push
std
into
cmp
or
out
outsb
jns
mov
nop
movsb
arpl
stos
jb
inc
call
movsb
pop
cmp
shr
jae
ds
sti
xchg
ds
fisttpl
mov
jecxz
sar
pop
cmp
lods
and
jp
cmp
push
adc
xlat
mov
mov
mov
mov
fistpl
rol
sbb
mov
push
out
sub
jp
dec
pusha
rcr
cli
or
scas
push
adcl
das
push
sbb
sbb
pushf
and
out
or
sbb
add
push
ljmp
arpl
out
fistps
or
cli
jle
jo
adc
lcall
and
push
test
pop
pop
or
dec
jmp
inc
add
fstps
sbb
mov
enter
cmp
loopne
push
dec
inc
fldcw
inc
fistpll
push
jmp
add
pop
lret
ficoml
sub
inc
cld
pop
jo
mov
push
pushf
adc
cmp
loop
xchg
adc
cltd
cmp
dec
mov
ss
xchg
mov
sbb
fldenv
outsl
mov
dec
fucom
mov
adc
mov
hlt
out
inc
add
xchg
jg
push
adcb
push
idivb
lock
pushf
test
loop
add
add
jp
icebp
push
pop
jae
pop
es
int
mov
pop
adc
push
jns
add
cmp
dec
xor
rdmsr
and
mov
xor
jmp
fisubrl
push
mov
xchg
ud1
stc
mov
add
fnstcw
push
icebp
ss
pop
sbb
mov
inc
xchg
out
mov
aaa
sti
popa
leave
andb
xchg
pop
test
mov
mov
outsb
dec
dec
repnz
pushf
inc
push
mov
adc
mov
xchg
sub
enter
adc
inc
adc
sbb
shlb
mov
inc
dec
jmp
inc
imul
lods
in
jo
add
mov
lods
dec
dec
push
sub
test
sub
sbb
push
repz
cmp
push
out
jmp
push
push
inc
jbe
cmp
lods
lea
or
test
jmp
jle
pop
or
mov
or
stos
sbb
mov
lret
fsubrl
test
dec
stos
lock
in
sbb
jmp
jmp
sbb
inc
mov
mov
inc
push
pop
push
inc
cwtl
pop
test
xor
out
jns
pop
xchg
pop
add
ss
xchg
out
movsb
inc
jmp
dec
imul
push
and
pop
jae
mov
sub
add
push
into
pop
pop
sub
andl
pop
out
roll
mov
repz
add
sahf
mov
xor
push
mov
shr
pop
sub
mov
in
scas
std
mov
jbe
mov
dec
nop
jns
xchg
daa
movsb
xor
outsb
mov
andl
xor
mov
lds
inc
iret
dec
sysexit
inc
inc
ljmp
fdivrp
pop
testb
lret
push
cmp
fmul
cmpsl
xchg
push
enter
lods
push
das
mov
nop
pusha
sub
shrb
mov
adc
push
jnp
xchg
dec
repnz
cli
inc
aas
fbstp
mov
les
in
fisubs
xchg
cwtl
sub
pushf
nop
adc
mov
enter
aam
shl
aad
aaa
in
mov
scas
jae
jne
xlat
sub
mov
sbb
sbb
jle
adc
loope
mov
jg
xchg
mov
rorl
push
addr16
cmp
iret
mov
adc
sbb
sbb
dec
lcall
into
fs
mov
mov
divl
inc
pushf
fwait
popf
sub
cmp
dec
jbe
mov
jp
sub
pop
mov
subl
dec
ds
push
adc
sbb
cltd
mov
ja
mov
fmuls
daa
xchg
push
lcall
mov
mov
test
jo
fimull
xchg
and
shll
jo
push
popf
int
test
and
inc
sbb
xchg
and
fwait
mov
push
cmpsb
enter
xor
sahf
and
mov
mov
adc
dec
mov
jbe
jne
shll
adc
movsb
sub
rcr
mov
je
dec
dec
call
and
out
jne
mov
shl
inc
ja
sar
mov
sbb
push
xchg
ja
lods
jle
pop
xor
sub
ficoml
xchg
sub
inc
pop
dec
pop
add
mov
ljmp
lcall
mov
xchg
add
aam
mov
xor
cmp
fs
add
js
out
icebp
stos
and
test
insl
pop
push
shll
sub
stc
jle
ret
icebp
jae
cmp
imul
push
inc
or
pop
cmpsb
sahf
inc
cs
movsl
adc
adc
or
mov
xchg
mov
mov
inc
sbb
cmp
icebp
mov
pop
mov
daa
sub
adc
mov
rolb
out
aad
xchg
sub
stos
jp
int
lcall
and
mov
loopne
sbb
jo
mov
test
adc
mov
lea
orb
cmp
test
scas
shll
add
stos
sub
push
les
sub
jns
call
cmp
and
out
roll
out
pop
les
dec
lcall
push
bnd
mov
gs
lcall
push
sub
dec
inc
pop
inc
imul
mov
shrl
sub
lds
stos
mov
arpl
into
jb
lahf
arpl
xchg
test
adc
xchg
xchg
repnz
test
jmp
cwtl
mov
inc
mov
repz
sub
pop
aas
fnstsw
mov
jne
mov
pop
sbb
mov
mov
call
sub
sbb
pop
jns
popl
scas
into
cmp
ficoml
cld
add
jmp
mov
ja
cmp
jle
icebp
outsl
les
dec
aas
loope,pn
das
mov
movsb
repz
mov
mov
lods
pop
add
and
sahf
sahf
xchg
cmp
push
jge
push
insl
mov
loope
pop
mov
leave
jp
add
cmp
mov
xchg
pop
adc
adc
cltd
jnp
repz
lods
les
mov
int
je
incb
imul
jp
cmp
movsl
outsl
movb
push
sbb
clc
push
call
and
inc
xchg
pop
fucomp
adc
pop
popa
sahf
fdivrs
xor
sbb
int
int
pop
cmp
mov
push
jp
scas
cld
movsb
or
fistl
cmp
pop
pop
pop
cld
and
insb
pop
into
movsl
xor
mov
ds
popa
js
dec
loope
out
rclb
mov
jne
xor
jbe
cmc
push
mov
pop
stos
or
mov
dec
mov
push
pushf
push
add
jno
inc
insl
jbe
pushf
mov
popa
popf
jne
sub
push
das
loope
mov
push
mov
pushf
mov
sub
adc
mov
in
xchg
jmp
stos
mov
repz
movsb
mov
daa
mov
into
sbb
inc
mov
mov
mov
inc
push
je
fcoml
cmc
imul
mov
mov
lcall
fdivrs
fbstp
push
and
lahf
push
ljmp
xchg
jnp
mov
or
loope
stc
cmp
xchg
and
dec
enter
mov
lret
mov
fistpl
cmp
imul
js
or
js
push
pop
fstpt
mov
jne
bound
push
xlat
cmp
lea
xlat
xchg
or
sbb
inc
add
cmpsl
into
lret
jmp
sar
sub
daa
sbb
loop
dec
shrb
xchg
mov
mov
jns,pn
and
jg
pmulhuw
cmp
loop
mov
flds
lods
add
negb
sub
pushf
mov
jmp
in
sbb
pusha
hlt
jmp
into
or
cmp
popf
adc
addr16
dec
and
pop
pop
or
idivb
jl
or
pop
in
negb
sub
xchg
fstpt
sbb
jg
push
fs
fiaddl
mov
add
arpl
cmpsl
xchg
fildll
add
rclb
push
scas
shr
aaa
xor
mov
pop
adc
stos
xchg
std
push
pop
adc
sbb
mov
mov
sbb
fs
mov
sub
inc
mov
or
scas
in
xchg
jo
or
mov
cmpsb
jb
aad
in
or
fdivs
add
dec
fld
inc
mov
leave
pop
loope
or
aam
daa
movsl
adcl
into
sub
ds
sbb
add
push
in
add
or
and
mov
or
movsb
std
lcall
inc
xor
and
mov
mov
rcrl
or
or
mov
and
mov
sbb
adc
and
pusha
int3
mov
adcb
add
inc
test
add
jb
pop
pop
lods
leave
fisubrl
mov
loopne
cmp
pop
fildl
fistps
fcoml
pop
mov
dec
jecxz
fdivr
fnstcw
icebp
cld
add
push
xchg
jmp
out
cmp
push
fs
sub
or
jmp
jnp
jge
sub
pusha
repz
xchg
inc
popa
or
xor
adc
jp
repnz
rcr
ret
sbb
in
testl
xor
mov
cmp
call
cs
add
jns
or
rcl
or
mov
icebp
jle
mov
stc
mov
or
push
sbb
mov
int3
pop
aaa
cld
pop
fwait
cli
bound
and
xchg
sub
inc
cli
loop
lcall
pop
mov
inc
cmpsb
setp
pop
test
add
imul
sub
lods
pop
in
xlat
mov
cmp
lret
ss
pop
leave
pop
addr16
and
dec
data16
paddusb
outsl
mov
js
iret
xchg
sbb
loope
push
mov
stos
shl
mov
xchg
stos
or
dec
outsl
adc
lret
lea
mov
xorl
cmpsl
shl
movl
mov
jecxz
xor
mov
loope
inc
sub
dec
push
mov
jb
add
inc
pop
aaa
inc
sahf
jae
xchg
sub
outsl
xor
jecxz
clc
lea
mov
divl
insl
push
fwait
incb
iret
mov
test
push
icebp
cld
mov
push
nop
lret
dec
sar
sub
cltd
mov
jne
lret
mov
dec
lcall
mov
xor
pop
add
mov
nop
into
jmp
sbb
pop
int3
xlat
or
std
fwait
rcll
out
push
pop
inc
or
sub
push
pop
leave
mov
push
clc
mov
test
sarl
cmpsb
mov
cwtl
sub
gs
imul
pushf
outsl
sbb
das
dec
dec
test
jb
test
pusha
push
dec
mov
mull
mov
adc
push
cmp
pop
mov
jbe
cmpb
push
lcall
in
lret
xor
imul
xor
jno
insl
mov
lea
inc
out
aad
push
mov
sub
loope
xchg
jg
sbb
jl
xlat
popf
sbb
repnz
cmp
add
jbe
shl
xor
xor
movsb
jns
int
mov
mov
jge
xchg
dec
mov
ret
dec
std
push
sub
jge
cmpsl
sahf
ret
dec
loop
and
das
sti
nop
test
inc
jg
jle
dec
sbb
fisttpl
or
xchg
add
leave
pop
add
push
es
fdivs
or
adc
push
adc
cmp
xor
test
jecxz
fsubs
cmp
in
and
fistpl
fadds
jge
sub
mov
xchg
aaa
subl
mov
sbb
xchg
inc
mov
adc
xor
rcll
pop
jmp
lret
lods
out
fcmovnb
dec
int3
push
adc
cmp
xchg
ds
imul
sub
mov
push
scas
daa
mov
fildl
add
es
mov
xor
imul
pop
mov
movsl
and
mov
inc
or
gs
mov
mov
stos
clc
fstl
mov
jp
aad
and
xchg
cwtl
imul
fiadds
sbb
les
push
mov
stc
lea
mov
lahf
lcall
fsts
sub
in
arpl
test
in
add
and
cli
cmp
pop
or
xchg
hlt
sti
jg
adc
sbb
dec
loop
out
in
and
ss
jp
testb
pop
fsubrl
mov
shlb
mov
mov
movsl
testb
es
jo
jle
stos
hlt
adc
adc
and
ret
insl
push
mov
dec
int3
add
incl
mov
xor
das
sub
jns
mov
lods
mov
push
lods
push
dec
lock
and
sahf
cs
push
jb
pushf
dec
dec
mov
and
inc
and
adc
je
pop
nop
mov
push
popf
jecxz
out
inc
bound
jnp
push
and
pop
ja,pn
in
inc
jbe
mov
mov
lcall
and
cmpsl
das
call
in
ret
cmc
push
in
aam
jmp
sbb
cs
add
icebp
in
jno
lods
inc
cmp
inc
xchg
mov
xlat
popa
movsl
mov
mov
mov
inc
imul
lahf
mov
jne
insl
push
in
adc
mov
jp
sub
and
inc
std
in
icebp
mov
iret
dec
or
xor
outsb
xor
add
pusha
add
arpl
std
ret
iret
dec
sbb
lods
imul
jge
das
mov
int
sub
push
fistpll
jo
sahf
scas
and
pusha
and
push
icebp
lea
shl
adc
lret
lods
adc
push
push
mov
shlb
mov
arpl
or
out
sbb
cmpl
popf
orb
add
mov
xchg
xor
fstpt
dec
or
popf
arpl
xor
xchg
pop
or
nop
adc
imul
sahf
mov
jle
movsl
test
in
jge
cmp
push
icebp
vdivss
and
jns
insb
stos
fistps
stos
lods
xchg
xchg
dec
sub
std
test
shll
xchg
and
add
and
scas
jno
inc
les
add
xlat
sbb
push
loopne
xor
sub
mov
pusha
xor
shrl
push
pusha
mov
adc
testl
adc
mov
rcrb
mov
lcall
ds
push
and
or
inc
aas
or
mov
cmp
sbb
inc
push
rcrl
mov
fists
testl
dec
lods
cmp
bound
sarb
cmpl
sbb
adcl
mov
into
sbb
test
cmp
adc
push
rorl
icebp
test
movsb
imul
rorb
lahf
in
stos
loopne
pop
sbbl
push
ret
data16
nop
jle
gs
cmp
inc
sbb
fcompl
sub
xchg
xor
dec
pop
sbbb
pop
push
add
notl
nop
sbb
cmpl
loope
push
dec
mov
scas
jbe
movl
test
adc
les
inc
gs
jecxz
loop
sbb
call
dec
lret
mov
mov
mov
loop
fs
insb
push
lock
xchg
mov
fucomp
lods
push
popa
pop
mulb
or
or
and
mov
fldt
ds
test
jp
out
dec
and
inc
or
cmpsl
adc
loope
mov
mov
bound
jecxz
arpl
push
ljmp
imul
adc
icebp
dec
lods
out
adc
pushf
ljmp
inc
mov
add
gs
pushf
je
aas
jmp
xlat
scas
lds
daa
cmp
push
sub
cmp
lods
jl
lret
pop
sti
pop
leave
addb
jbe
and
xor
xor
pop
lods
and
call
fidivl
dec
dec
test
push
rclb
mov
inc
dec
jmp
je,pt
int3
lret
jge
subl
int
push
cli
dec
pop
repz
push
dec
adc
int3
mov
addr16
adc
sarb
out
lahf
in
cmpsb
mov
aad
jno
or
jnp
ret
adc
mov
lock
jmp
out
sbb
mov
dec
lds
lods
xorl
xor
or
mov
push
pop
sahf
and
insl
mov
call
cmp
es
inc
cmp
mov
push
inc
mov
sub
bound
mov
push
pop
in
xor
xchg
push
out
fidivs
inc
fwait
test
pusha
mov
cld
mov
inc
shr
xor
idiv
and
jmp
and
inc
pop
jo
mov
mov
out
jmp
cmp
iret
sbb
lds
sbbb
mov
shlb
mov
push
inc
jne
add
pushf
js
ljmp
inc
cli
ljmp
stc
jno
cmpsb
sub
inc
xchg
pop
mov
mov
pop
lret
sti
push
jnp
andl
nop
xor
cwtl
rcr
orb
cmpsb
enter
insl
mov
sub
or
sbb
lock
idiv
outsl
push
dec
cmp
bound
ret
lods
mov
jno
fwait
insl
push
fcoms
loop
lods
shl
sub
push
sub
fucomp
sarl
inc
decl
bound
pop
mov
push
and
shr
je
mov
test
mov
cmp
aas
das
push
pop
pop
divb
scas
mov
sbb
xchg
leave
cmc
sbb
pop
sub
or
adc
imul
xchg
pop
je,pn
arpl
insb
clc
shl
mov
push
add
cmpsb
jmp
jae
das
xchg
das
adc
xchg
andl
hlt
icebp
faddl
mov
cmpb
imul
adc
adcl
pop
cmp
mov
push
mov
imul
fists
cmp
or
fs
jp
popf
mov
xor
pop
ret
rclb
cs
rorl
roll
adc
pop
jbe
cltd
lds
mov
mov
sub
mov
jecxz
or
test
push
les
cld
cltd
xor
lcall
xor
je
add
pop
lea
jne
dec
call
xrelease
push
push
shl
daa
pop
xchg
xchg
xor
xchg
gs
enter
pop
inc
int
nop
and
pop
mov
xbegin
adc
subl
cmp
outsl
xor
or
push
mov
and
push
mov
dec
or
ljmp
stos
rorb
test
lret
jno
out
jge
in
xor
into
repz
ja
aam
in
pop
rol
pop
fstps
pusha
mov
xorl
pop
sbbl
push
shrl
fwait
idiv
cmpsl
xor
js
stc
xchg
adc
push
jp
push
insl
add
fwait
inc
xchg
and
push
sub
fistpll
jle
and
out
inc
sbb
mov
dec
push
leave
out
lods
cld
in
sbb
dec
sub
inc
push
push
push
addr16
clc
insb
push
mov
repnz
cmp
pop
push
test
inc
imul
xor
in
iret
xor
adc
sbb
aaa
lret
lahf
xchg
pop
xor
adc
jno
mov
add
sti
sbb
xor
stos
mov
jl
ja
stos
xorl
lret
jg
cmp
mov
gs
or
and
pusha
xchg
adc
shl
test
das
ret
dec
fists
mov
push
bsf
je
lods
jo
mov
or
sub
les
jbe
jle
mov
in
mov
ret
int
insl
add
sbb
ficompl
sbb
jo
xchg
fstpl
push
mov
lds
xchg
rcr
loope
dec
sbbl
mov
std
shlb
repz
shr
push
pop
dec
sbb
mov
pushf
adc
jne
adc
mov
std
xchg
int
mov
jp
push
scas
jmp
out
insb
inc
ret
and
jae
ss
rcrb
data16
and
fucom
jns
sub
ljmp
and
push
cs
call
jmp
mov
popf
dec
adc
dec
sbb
repnz
inc
push
sbb
xor
push
into
jo
lds
and
cli
out
jno
xchg
out
pop
push
add
xor
aas
push
out
in
in
sbb
insb
add
test
cmpsb
xchg
shll
not
in
sub
fcmovbe
mov
dec
xchg
adc
pop
lcall
xchg
daa
inc
in
sub
add
xchg
popa
pop
cmc
cmp
xchg
cmc
jp
dec
add
sbb
and
loop
jg
mov
loope
addl
mov
mov
jg
xor
int3
dec
xchg
mov
pop
jb
add
push
lock
test
insl
add
adc
cmp
mov
lock
dec
sti
sti
jno
out
sbb
out
adc
push
dec
ficoml
xor
into
xlat
es
add
or
lds
inc
jne
or
in
bound
mov
or
test
popf
cmpsl
mov
sbb
out
jle
add
xchg
xor
jb
bound
add
cmp
int3
cli
aaa
sub
out
cmp
cltd
icebp
xor
ja
dec
nop
stos
outsb
popa
and
jbe
enter
imul
test
out
sub
int
mov
push
push
sahf
sub
mov
mov
mov
stos
sub
jg
fistps
xchg
fsubr
push
ret
call
push
loop
loop
push
test
pushf
add
or
pop
enter
or
push
movsb
cwtl
jnp
icebp
xchg
xchg
mov
les
inc
scas
idiv
insl
mov
ljmp
xchg
out
add
shrb
repz
xor
cmpsl
and
mov
loope
dec
jnp
shlb
xlat
out
iret
add
pop
icebp
stos
cld
lahf
or
shlb
cwtl
in
insl
pop
sub
popf
adc
inc
iret
cs
cmpsl
add
pop
adc
jo
pop
sub
xor
and
sbb
fwait
xchg
and
bnd
push
add
aas
inc
cmpsb
dec
mov
pushf
sub
xchg
fnstcw
popl
insb
push
cmp
mov
cmp
std
adc
test
cltd
je
add
mov
ret
cmc
xchg
int
aad
jge
inc
sub
push
and
jle
fs
out
xchg
mov
loope
ja
add
jne
stos
add
dec
lret
mov
negb
sbb
mov
icebp
cmpsl
testb
nop
leave
sbb
mov
testb
mov
cmp
lods
push
aaa
pop
int
cwtl
jns
dec
ret
and
fistl
sti
jns
fs
dec
mov
jmp
roll
shlb
mov
inc
pusha
sar
or
fidivs
and
jnp
mov
loopne
pop
or
pop
jno
loope
sub
adc
xchg
jns
filds
mov
ljmp
dec
int3
sub
and
jecxz
dec
test
out
insl
adc
cld
dec
imul
loopne
push
push
mov
cli
lea
aam
iret
loopne
dec
int3
in
cld
loope
pop
ss
jecxz
scas
push
xor
sti
lcall
xchg
push
sahf
fstl
dec
pusha
mov
imul
pop
xchg
in
adcb
cmovg
jb
insl
add
push
enter
cmp
loopne
mov
pop
pop
orb
stos
jns
inc
std
inc
xchg
add
in
fcompl
add
push
mov
mov
mov
push
testb
cmpsb
jno
std
in
leave
pop
push
lock
cmp
mov
add
sub
xor
shrb
ret
unpcklps
insl
or
addl
add
out
adcb
cmp
dec
mov
rorl
or
cli
mov
xchg
and
mov
incl
das
push
or
xchg
fistpl
mov
or
test
add
fldenv
ret
lea
in
shlb
mov
pop
loopne
mov
adc
pop
cltd
jo
push
in
stos
mov
jl
leave
mov
js
aad
mov
push
sub
pop
fcmovu
fcompp
in
test
in
aam
pop
mov
sahf
or
stc
es
adc
scas
push
xchg
pop
out
sub
add
sbb
jmp
cmc
jo
clc
sub
insb
rorl
aas
push
xor
lds
insl
idivl
in
inc
aaa
repz
xor
cmp
cli
cmpb
pusha
mov
inc
adc
sbb
imul
dec
int
xchg
stc
scas
dec
aad
into
rclb
xor
sarl
sbbb
push
or
bound
jbe
and
rorl
pop
fimuls
mov
fdivl
push
subl
add
das
mov
in
adc
cld
sub
lock
push
adc
call
push
mov
aas
add
cmp
xor
dec
push
mov
mov
mov
out
xchg
pop
in
adc
xchg
ret
mov
adc
cwtl
movsl
movsl
inc
lds
out
mov
fisttpll
or
out
aas
repz
dec
jo
and
push
daa
lret
stos
pop
dec
push
or
mov
ds
ja
adc
pop
push
outsb
pop
test
xchg
push
test
xor
jae
inc
add
lds
sbb
jb
mov
repz
sub
std
cwtl
push
dec
mov
and
cltd
aam
mov
into
test
rcrl
iret
xor
push
je
adc
inc
xor
mov
push
mov
push
push
push
addr16
mov
sbb
pop
aam
adc
jno
push
rorl
je
stc
mov
cli
and
dec
pop
add
aam
mov
jle
fidivrl
rol
xor
push
cmpl
sbb
adc
and
sbb
or
faddl
pop
push
and
scas
cmpb
movsb
incl
and
sbb
pop
leave
lods
fcmove
cmp
aad
mov
mul
mov
mov
push
add
lds
out
repnz
sub
arpl
cld
enter
mov
ret
fmull
or
lret
bound
lods
aaa
movsl
push
jb
ret
and
shrd
and
test
mov
loopne
popf
mov
pushf
jno
inc
test
jno
daa
mov
stos
adc
jnp
mov
add
sbb
pop
xlat
daa
mov
ja
popa
stc
jp
mov
pop
in
fstp
popw
ret
sbbb
cmp
dec
insb
and
icebp
dec
push
pushf
jecxz
xchg
loope
or
lret
rcrl
or
je
aad
shlb
mov
jae
fimull
cwtl
mov
pop
popf
dec
andl
scas
jmp
stos
mov
xchg
lret
es
out
lock
xor
mov
mov
insl
pop
adc
ret
sahf
aas
arpl
int3
adc
mov
add
or
jmp
jns
dec
pop
cmp
and
mov
notb
push
and
mov
inc
insl
leave
dec
dec
pushf
push
divb
sub
dec
inc
psllw
push
rorb
outsb
lea
pop
or
adc
mov
hlt
data16
xchg
or
ret
in
push
dec
add
icebp
call
cli
stos
or
push
push
sbb
push
sbb
push
xchg
mov
outsl
jmp
push
mov
stc
out
test
movsb
xchg
sbb
pop
enter
in
call
mov
sbb
mov
push
xor
push
fisttpll
nop
sarl
xchg
lods
adc
addr16
ja
insb
jl
lods
inc
cmc
lret
stc
jle
cs
mov
ljmp
mov
cmpsl
aam
sbb
adc
in
insl
insl
repz
imul
xor
cmp
fcomi
sti
jecxz
sub
dec
mov
pop
cmp
jno
icebp
push
adc
xor
jle
add
pop
jne
aam
fwait
rorb
add
adc
lds
fiadds
in
dec
loopne
sbb
jmp
sbb
call
mov
out
sbb
push
inc
fisttpll
add
cli
int3
repz
adc
sbb
scas
movsb
sbb
and
mov
add
xchg
adc
cmp
in
adc
sub
sahf
test
lods
mov
sub
dec
pop
popf
jg
push
ds
imulb
loop
mov
mov
pop
add
push
stos
xchg
inc
out
inc
mov
test
push
lock
in
inc
aaa
sti
lret
stos
fnstsw
xchg
xor
adc
mov
cmc
cli
jb
imul
sub
or
pop
mov
xchg
jb
popf
mov
test
push
test
add
outsb
cmp
pop
fwait
push
push
insl
lods
sub
ret
jle
mov
or
and
push
cmp
hlt
lret
aam
jmp
arpl
imul
inc
jmp
pop
dec
popf
loopne
cmp
or
jb
notb
sarl
sahf
das
sub
adc
shr
ss
fistl
jno
ljmp
adc
sbb
inc
jnp
lahf
adc
xor
or
int3
jno
jmp
mov
dec
add
mov
and
mov
call
adc
insl
xchg
cmp
mov
lret
inc
fs
loop
push
sbb
fistpll
mov
and
cmpsb
outsl
jb
test
adc
lock
mov
mov
std
ret
je
dec
aam
je
loope
jae
xchg
les
pop
cli
insb
cmpsl
push
mov
mov
adcl
inc
ljmp
adc
jno
adcb
push
dec
sbb
insl
addr16
jmp
mov
invd
sub
lcall
cld
jns
jle
push
adc
cltd
push
insb
repnz
jo
out
loope
xchg
pop
jae
xor
fdivrp
cli
test
aaa
fwait
or
inc
fidivl
xor
das
sahf
out
call
push
pop
push
pop
into
sub
inc
in
loopne
and
addr16
pusha
aaa
mov
xor
xor
gs
stos
sub
and
pop
andb
inc
xor
cmp
insl
sub
jmp
aaa
sbb
in
iret
or
cmpsb
xorb
adc
sbb
nop
inc
stc
mov
xchg
fsub
imul
mov
nop
imul
xor
in
ss
and
push
lock
xor
sti
out
push
mov
xchg
incl
lods
test
pop
aad
int
loop
fdivs
mov
xchg
pop
push
mov
fisttpl
dec
icebp
dec
jae
cmpsb
push
pop
cmp
sub
fildll
sahf
imul
inc
iret
clc
sbb
mov
mov
cmp
push
xchg
pop
cmp
cmpsl
xchg
movsb
pop
cld
movsl
lds
xchg
jne
mov
out
das
fs
in
roll
insl
shr
inc
mov
arpl
sbb
popa
fsts
sub
jno
sub
xorb
pop
repnz
sbb
sarb
inc
ret
iret
out
pop
in
xchg
popa
jge
sbb
nop
stos
or
dec
rcrl
test
ds
and
or
pushf
inc
shll
stos
sbb
outsb
sub
test
mov
out
addr16
xchg
jmp
cmp
sti
mov
test
push
adc
gs
les
aad
and
jl
stc
xchg
pxor
sbb
cs
fists
dec
js
std
add
cmpsl
or
into
cwtl
mov
and
xchg
pop
aad
je
push
inc
mov
adc
mov
add
stc
cmp
and
xor
mov
lock
add
push
arpl
data16
jo
sub
mov
cmp
js
sarb
mov
inc
sbb
lret
dec
mov
push
in
sub
xchg
scas
add
xor
cmp
shll
xchg
in
inc
jmp
sub
inc
hlt
push
int3
icebp
insl
in
add
push
jns
in
push
rorb
or
mov
xchg
scas
add
mov
sub
nop
push
out
inc
jns
into
jo
es
sub
jno
dec
addps
notl
xlat
sbb
pop
cltd
sbb
xchg
jmp
sbb
movsb
ret
mov
cmc
add
add
jbe
push
dec
dec
ss
sub
mov
icebp
stos
cmp
push
xor
mov
inc
jle
scas
and
loopne
imul
jl
lahf
imul
fwait
mov
out
mov
jl
test
scas
inc
leave
cmp
or
mov
cwtl
add
fdivr
cmc
ds
jns
in
inc
int
aas
inc
cs
cld
mov
inc
adc
iret
pop
jmp
mov
inc
leave
jnp
inc
sub
imul
adc
call
adc
clc
out
ljmp
fs
adc
sbb
pop
movsl
sbb
lret
iret
rcrl
mov
into
js
ja
add
or
in
int
mov
divb
out
cs
arpl
sub
mov
jg
orb
or
lock
push
push
outsl
sub
mov
cld
mov
ss
pop
push
adc
mov
lret
notl
jg
ss
dec
mov
rolb
jno
mov
xchg
ror
cmpsl
arpl
jnp
mov
sbb
and
mov
fstps
xor
loope
out
mov
push
nop
sahf
or
jp
xchg
les
stos
js
test
inc
sbb
jb
mov
lods
je
repz
aaa
jbe
out
add
into
das
popf
mov
cld
push
cmp
mov
and
mov
push
jno
in
mov
add
cmc
dec
xchg
in
jno
in
sbb
pop
adc
sti
in
sub
movsl
loope
in
cmpsl
loopne
out
dec
cwtl
add
ret
xchg
cmp
lea
repnz
shlb
in
ja
lock
int
test
shrl
fwait
cs
xor
popf
push
mov
repnz
dec
aaa
push
and
or
cmp
jp
cwtl
dec
push
bound
fiadds
scas
lcall
or
cmp
sbb
int
cmp
xorb
loopne
push
sahf
stos
clc
dec
js
xchg
xlat
add
loope
shll
imul
cmp
in
dec
cmp
pop
pushf
icebp
mov
adc
mov
mov
out
imul
icebp
div
jnp
xchg
movsb
pushf
mov
or
lret
inc
mov
inc
pop
dec
dec
sbbl
cmp
arpl
xchg
orb
adc
aad
sarl
int
mov
xorb
xchg
ja
add
dec
movsl
repz
pusha
outsb
jecxz
pop
sbb
pop
dec
lret
sub
scas
pop
inc
pop
ret
xor
mov
in
push
jne
xorl
fxtract
pop
mov
add
dec
push
ljmp
insl
aaa
js
push
push
sub
hlt
or
xchg
insl
add
sbb
mov
jns
mov
push
aas
xchg
mov
push
aaa
loopne
insb
clc
cmp
or
mov
int3
pushf
and
jnp
pushf
lock
idivb
hlt
xor
mov
mov
movsb
or
dec
imul
es
mov
test
jecxz
xor
lea
testb
mov
pop
je
rorl
jp
sub
repnz
mov
insb
jo
loopne
scas
out
mov
fwait
mov
notl
int3
jge
loope
fistl
popf
sbb
fimull
dec
mov
das
cmpsl
xor
fwait
out
mov
enter
aad
fs
mov
jns
inc
xor
dec
or
cmp
inc
repnz
lods
add
adc
into
pop
push
dec
ret
mov
enter
and
push
xchg
and
mov
icebp
ds
cwtl
xchg
sub
enter
jle
sub
and
xchg
cmp
cs
mov
sub
push
inc
nopl
insb
pop
daa
mul
enter
mov
pop
jg
jbe
imul
and
inc
jp
insl
mov
loope
addr16
push
cltd
leave
push
and
adcb
sbb
imul
xchg
inc
adc
shlb
ljmp
xor
scas
dec
jno
sbb
jle
cmp
mov
add
push
lock
push
xchg
xlat
mov
shrb
mov
test
jmp
divl
orb
out
xorl
sbbl
mov
jmp
xor
bound
icebp
add
aas
cli
adc
int3
and
jmp
or
inc
add
adc
popa
lods
cmc
mov
inc
add
lods
lret
pushf
jecxz
inc
aad
inc
mov
aad
movsb
lcall
adc
icebp
pushf
loope
pushf
sub
rol
into
test
push
dec
dec
mov
inc
pusha
arpl
sub
jecxz
cli
sub
mov
pcmpgtw
cmp
sbb
cmpsl
faddl
incl
cmpsb
add
out
aad
insb
mov
out
adc
test
icebp
mov
insl
cltd
stos
clc
dec
adc
out
push
popf
addb
lds
or
dec
push
and
int
sbb
lret
jnp
jns
popa
and
xlat
pop
mov
mov
pop
cmpsl
movswl
je
or
lock
enter
adc
lret
jmp
fstpl
ds
movsb
flds
sbb
lret
cmp
or
xor
repz
cmp
and
mov
iret
mov
cs
mov
lods
lret
add
aad
cli
mov
ja
mov
int
inc
xchg
xchg
xchg
inc
iret
pusha
adcl
sub
adc
lock
add
xchg
jb
pop
jnp
aas
in
fsubr
out
cmc
mov
call
or
fisttpl
out
adcb
xlat
loopne
sti
repz
inc
or
in
push
outsl
sub
pop
aad
aaa
scas
xor
ss
xchg
movsl
lea
push
dec
sbb
jmp
cmp
clc
push
or
inc
stos
push
addr16
mov
dec
cs
sub
xor
add
push
out
stos
out
dec
sub
movsb
xor
pop
pop
test
out
loopne
xor
stos
les
repz
dec
shrl
scas
mov
sbb
xor
sti
dec
cld
lods
jne
ret
into
dec
dec
dec
pop
int
and
sahf
dec
xchg
push
inc
and
leave
ds
adc
bswap
xlat
aad
scas
and
sub
pop
xchg
push
xor
push
jl
cmp
and
les
mov
subl
pop
xor
mov
add
cld
xor
jo
or
xor
ds
push
ljmp
mov
xchg
gs
test
pop
iret
stos
or
lock
daa
divb
rorl
sbb
es
leave
or
lods
pop
outsb
xor
mov
jmp
out
pop
inc
pushf
mov
inc
cmp
add
insb
bts
pushf
mov
lahf
and
or
lds
dec
int
xchg
fadd
into
push
dec
cmp
add
or
dec
ficoms
jne
or
xor
ret
push
pushf
ljmp
sahf
stc
loope
jl
jge
sub
mov
jbe
dec
add
dec
leave
lea
sahf
movsb
or
in
loope
in
dec
aam
pop
push
sub
adc
sbb
jmp
dec
adc
push
adc
pop
jns
inc
and
mul
push
dec
sahf
test
jnp
mov
lock
cmp
or
in
in
and
dec
cld
cmpsb
gs
mov
pop
sahf
sbb
out
dec
jmp
leave
jbe
jmp
mov
js
dec
xor
sahf
sarl
aaa
test
dec
cmp
mov
push
ret
jno
xor
mov
push
adc
xchg
stc
pop
or
shrb
pushf
out
dec
adc
stos
push
fs
xor
das
lods
inc
jl
int
int
pop
nop
adc
jo
outsl
add
notb
mov
pushf
sub
jl
shld
dec
sti
push
inc
js
cwtl
adc
mov
out
dec
or
cmpb
test
and
movsl
add
pop
out
xor
test
popf
mov
mov
ds
or
lods
pop
arpl
xor
enter
dec
shr
js
test
adc
dec
mov
add
jecxz
add
dec
mul
dec
xchg
or
mov
fimull
leave
in
std
pop
xor
inc
add
jge
jp
insl
inc
mov
sarb
jecxz
cmp
cmp
mov
jno
cld
jne
cli
push
leave
rcrl
in
aaa
fst
push
inc
fbstp
dec
pop
addb
outsb
sub
push
mov
aam
into
push
scas
pop
fdivr
adc
jae
pop
test
mov
ret
inc
inc
mov
adc
mulb
pop
inc
repz
lcall
adc
cmpsl
fisubs
addr16
mov
and
xlat
cld
out
cmp
cmpsb
jmp
push
outsl
add
jae
pop
adc
int
nop
push
push
xchg
popf
mov
mov
fcoms
sbb
nop
clc
gs
scas
or
pop
popf
xchg
lcall
stc
inc
das
sbb
xchg
sub
push
flds
lods
lret
cmp
adc
pop
je
sub
mov
stos
mov
mov
push
mov
sbb
imul
dec
sbb
inc
jb
mov
pop
push
xor
dec
scas
imul
pushw
outsb
pop
out
add
jmp
into
shlb
jl
mov
jb
jl
fidivl
mov
movsl
add
sub
cmp
xor
popf
popf
lcall
jg
out
fsubrs
push
ret
pushf
call
xchg
mov
imul
mov
push
jmp
scas
mov
fwait
xor
adc
sbb
popa
ja
hlt
out
mov
ljmp
ljmp
push
mov
cmpsb
pushf
lea
jns
popa
sti
cmp
js
out
sub
lds
repnz
sbb
inc
lea
add
movsb
xchg
and
jb
dec
clc
pop
push
sbb
scas
add
and
and
rcll
clc
fildl
stos
mov
inc
fdivrs
inc
addb
daa
mov
rorl
shll
adc
jbe
or
adc
mov
ljmp
stc
xor
cmc
push
jns
jo
movsb
xchg
jno
outsl
dec
out
add
dec
sbb
xor
loopne
fadds
movsl
sbb
outsl
test
fmull
fisttps
mov
mov
fsubs
pop
pusha
adc
jmp
aaa
pop
insl
cs
mov
sbb
dec
jge
aad
loope
lds
sbb
scas
test
xchg
or
roll
or
shlb
lock
mov
iret
mov
mov
outsl
insl
jmp
mov
sti
sub
mov
and
scas
jmp
out
inc
push
xchg
stos
icebp
pop
sbb
shrb
mov
push
cmp
mov
popf
imul
fs
fsubrl
aas
leave
xor
ss
push
fs
insl
xor
mov
dec
dec
and
push
sbbl
mov
inc
out
or
mov
pop
rol
adc
ss
add
aam
sub
mov
mov
leave
jae
jecxz
clc
jmp
test
push
mov
mov
mov
xor
divb
cmp
push
sbb
jne
cltd
pop
pop
rorb
andb
xor
mov
cmpsb
jnp
shr
adc
push
nop
jb
imul
xchg
mov
mov
push
mov
xchg
lods
xorb
xor
jecxz
cmp
jmp
adc
jl
push
movsb
in
pushf
adc
pop
es
cmp
insl
lds
and
jecxz
xor
leave
out
aaa
mov
mov
cmp
int3
sub
pop
mov
ss
push
pop
xchg
aam
leave
fdivrs
lds
jmp
xchg
lret
push
subb
mov
and
xor
pop
sahf
push
aas
xchg
xorb
into
mov
lcall
cmpsl
push
sbb
cmp
hlt
shl
jp
lret
xor
fldl
cs
jae
test
cmpsb
ljmp
and
mov
insb
add
adcb
dec
push
inc
mov
inc
test
cmp
mov
push
inc
sub
fadds
arpl
sti
or
and
push
shrb
mov
lcall
enter
roll
xchg
cwtl
jnp
jb
mov
cmp
int3
int
push
hlt
or
sub
subb
pop
xor
lods
aas
pop
dec
lods
dec
inc
xchg
push
sbb
cmpsl
std
cmp
or
es
cmpsl
ret
test
add
les
xor
in
mov
sub
mov
shlb
scas
or
sbb
jmp
fnstenv
and
jp
push
dec
scas
and
dec
leave
sub
lds
repnz
push
ret
mov
mov
dec
lds
fstl
sti
or
push
adc
arpl
data16
cmpl
sub
cli
pop
in
dec
lahf
movsb
rep
test
mov
push
add
arpl
fdiv
jecxz
push
adc
enter
aam
pop
adc
cmp
iret
xor
mov
dec
test
not
pop
xlat
ljmp
pop
test
cltd
inc
add
clc
fld
inc
pop
cmpsl
mov
out
pop
ret
or
test
out
stc
rcrl
repnz
sbb
add
cmp
inc
push
xor
mov
lcall
mov
or
jo
jle
mov
cmc
adc
add
xchg
mov
mov
push
pop
fdivl
mov
std
sahf
sbb
or
aam
cmp
shl
repnz
mov
clc
popa
frstor
cmp
mov
push
pop
cmp
jne
mov
push
in
push
mov
cmp
fwait
mov
daa
jecxz
orb
xchg
adc
cmpsl
pop
je
cltd
push
ffree
bound
push
dec
in
je
jg
gs
pop
jl
fisttpll
movsl
mov
lods
mov
aas
out
stos
scas
and
pop
mov
lret
loopne
ficoms
push
or
add
out
repz
inc
mov
and
push
lcall
sub
cli
rcr
adc
mov
xor
ds
jle
cmp
sti
sbbb
sarl
pop
mov
ds
loopne
or
out
out
or
outsl
jmp
push
mov
or
push
shll
xchg
mov
ret
ret
mov
mov
sub
int3
out
or
push
adc
push
jecxz
pop
bound
mov
lahf
lods
sbb
sub
movsb
ds
add
sbb
and
mov
mov
cli
cs
das
in
lds
in
xchg
push
pop
jmp
lret
in
inc
ficomps
lret
fisubrs
push
sbb
jno
insb
daa
popf
imul
subl
adc
in
lods
jnp
cmp
pop
daa
push
push
jmp
push
cmpsb
and
movsb
lahf
xor
sbb
decl
pop
cmp
cld
dec
pop
pop
popf
mov
pop
rorb
jg
shll
inc
dec
mov
adc
jg,pt
inc
out
mov
push
insl
lret
icebp
sub
xor
mov
pop
mov
mov
lahf
push
mov
pusha
mov
mov
jb
cltd
mov
mov
clc
mov
jnp
hlt
mov
push
pop
mov
pop
jns
cmp
cmpl
and
lahf
push
mov
adc
rcr
fldenv
jp
call
cmp
shlb
dec
cmpsl
enter
adc
rcll
movsb
je
xor
mov
jmp
cltd
cmp
jne
add
cmpsl
dec
pop
mov
cmp
inc
cwtl
sti
mov
and
testb
xchg
jns
call
divb
cs
add
cmpsb
fwait
inc
stos
iret
adcb
ret
mov
dec
adc
add
out
cmp
adc
or
cmp
jp
jecxz
stos
addb
mov
mov
push
loope
ficoml
fstpl
bound
mov
ljmp
pop
inc
push
lods
mov
fimuls
cmp
outsl
idivl
cmpsb
enter
xchg
loopne
mov
lcall
addb
dec
outsl
shlb
sub
jnp
clc
in
cs
imull
cmp
lods
dec
inc
xor
adc
add
shrl
or
pop
mov
mov
mov
pop
jnp
call
idivb
jg
pop
outsl
pop
fwait
jno
dec
pop
xchg
xchg
push
xor
sarl
mov
pop
cmp
shl
xlat
mov
mulb
popf
mov
mov
mov
sub
or
pop
pop
cmpsl
and
fbld
jae,pn
cmpsl
bound
jmp
lcall
mov
shrb
pop
rcll
cld
movsl
push
icebp
cwtl
popf
push
sbb
xchg
lods
xchg
jecxz
inc
int
icebp
dec
sti
or
popf
ds
and
dec
and
dec
push
stos
rorb
outsb
mov
loopne
adc
pop
leave
in
adc
jb
mov
pop
std
imull
popf
inc
ret
mov
into
push
fwait
mov
lock
scas
shlb
in
sub
xchg
gs
jge
ja
push
hlt
in
test
mov
push
stc
pop
lret
fwait
shll
lcall
add
das
loope
or
sub
out
xlat
pop
push
pop
or
lahf
push
push
ss
pop
jns
lds
jae
sbb
data16
jo
mov
xchg
dec
jne
mov
xchg
sti
pop
and
pop
dec
dec
out
pop
xor
dec
sub
mov
test
dec
xor
push
test
or
and
dec
das
rcrb
xchg
add
adc
ljmp
mov
mov
js
addl
pop
rol
mov
inc
fcoms
sub
inc
cwtl
mov
pusha
jl
orl
mov
sbb
push
push
push
lcall
fucomp
jbe
and
mov
ljmp
pop
adc
xor
int3
sbb
js
lcall
ret
aaa
xor
jp
jo
cmp
and
fstps
inc
mov
xorb
gs
test
cmp
loope
mov
lret
ret
adc
jno
cmpsl
es
sbb
cmp
add
aaa
je
icebp
sbb
pop
sub
push
push
fisttpll
inc
mov
shll
jecxz
or
fmulp
fldl
jbe
pop
lcall
loope
hlt
enter
dec
std
in
ljmp
mov
sti
sti
lahf
out
ds
lcall
lods
xchg
mov
leave
cmp
popf
scas
insl
jno,pt
shlb
scas
rolb
rcrb
mov
mov
pop
jp
lahf
outsb
or
mov
push
shr
cld
shr
das
insl
in
stos
lds
in
push
lds
mov
fs
pop
cmpsl
xchg
sub
ds
pop
mov
cs
notb
xchg
lret
lret
ficompl
cmp
ficompl
sbb
clc
mov
cwtl
sbb
in
jg
xchg
mov
bound
stc
vshufps
jae
xchg
fldt
cmp
outsl
dec
ljmp
shl
mov
pop
incb
push
mov
loop
test
sbb
pop
mov
fcomps
lret
sub
add
sbb
cmp
xlat
jp
mov
dec
popf
sbb
xchg
add
test
inc
je
cwtl
inc
movsl
xchg
nop
xchg
scas
inc
push
aaa
dec
orl
lock
cltd
adc
repnz
xor
pop
mov
daa
repnz
or
lds
and
push
outsl
in
jae
sbb
xor
jae,pt
sub
iret
push
scas
and
mov
mov
cld
or
loope
sbb
sbb
adc
shll
mov
mov
xor
loopne
sahf
or
inc
and
and
test
js
ljmp
sub
dec
mov
xchg
push
xlat
dec
sbb
dec
shrb
orb
leave
sbb
xchg
and
sub
inc
outsl
add
inc
mov
movsb
push
mov
mov
mov
inc
inc
jbe
add
pop
push
dec
push
enter
mov
xchg
ret
bound
dec
int
push
fcomi
jmp
mov
aaa
aaa
inc
mov
pop
sub
icebp
test
or
push
nop
xor
cli
aad
inc
pop
arpl
sar
push
push
in
jmp
popa
test
mov
test
sub
jo
and
xchg
adc
jg
je
sub
lods
cld
pop
sub
lahf
nop
mov
test
cmp
add
mov
iret
ds
mov
fadds
rolb
push
les
push
pop
pop
add
inc
addr16
aam
push
imul
cpuid
cmp
mov
in
pop
inc
loop
sbb
mov
aas
outsl
sub
cmpsl
lcall
mov
xchg
movsl
inc
inc
movsl
jg
inc
sbb
aam
aas
jp
ja
cmpsb
cmpsl
jg
in
jge
sahf
loope
xchg
or
xor
mov
test
jg
push
loope
and
push
cli
jg
fldt
and
sub
inc
rcr
cmc
mov
rcl
xor
sub
mov
dec
lods
push
jp
sbb
mov
icebp
or
in
outsb
mov
cli
cltd
out
pcmpgtw
pop
stc
pop
scas
jp
out
push
xchg
es
xor
incb
push
repz
or
lret
adc
cs
or
rorb
mov
lea
mov
mov
add
pop
cld
aas
mov
sbbb
adc
or
xchg
add
jmp
or
mov
cmc
shll
jns
or
scas
addr16
xchg
dec
mov
adc
inc
jmp
mov
inc
pop
pop
neg
cld
push
divl
xor
add
fimull
xchg
sub
orl
std
inc
or
imull
ds
and
jecxz
imull
das
sbb
aas
gs
shl
jg
ds
repnz
adc
nop
outsl
xchg
or
sbb
mov
or
mov
jns
pop
and
loope
mov
fildl
ficomps
mov
push
rcrl
pop
test
std
cmc
pop
lds
leave
rclb
sub
lahf
enter
push
scas
mov
sbb
mov
and
addb
dec
in
aad
mov
push
xchg
iret
cmpsb
dec
dec
ss
or
gs
lods
sbb
add
pop
test
pop
or
sbb
iret
in
add
js
inc
dec
in
jmp
sbb
inc
sbb
push
mov
inc
xchg
jge
and
lods
push
out
out
jb
stos
lcall
xchg
mov
cmpsl
js
and
xor
mov
fstpl
aad
dec
xchg
mov
mov
cmp
and
into
mov
dec
popf
std
mov
rolb
lcall
add
shlb
leave
jecxz
mov
fimuls
cltd
andl
scas
nop
cmp
sub
popf
adc
jo
mov
mov
add
das
lds
es
jb
add
mov
xchg
loope
arpl
les
cmp
adcl
jno
rdtsc
add
inc
jo
dec
xchg
sti
xchg
mov
imul
mov
aam
dec
mov
push
inc
cwtl
mov
jmp
xchg
in
sbb
cmpsb
dec
jb
enter
les
repz
mov
cmp
fstpl
inc
in
fbstp
test
or
xchg
cmp
sarl
push
inc
aam
lret
pop
inc
mov
aad
mov
pop
ret
jns
mov
push
xor
jl
test
xchg
and
cmp
out
dec
dec
jp
pop
jl
push
cmp
xor
xchg
xor
js
in
lods
jecxz
mov
das
fisttps
push
jmp
ret
fbstp
mov
out
push
dec
sbb
daa
cmp
jae
enter
dec
mov
out
and
sub
inc
jb
sbb
pop
mov
cmpsl
fcomip
mov
out
sahf
repnz
cmp
inc
mov
outsb
fwait
pop
xor
ja
push
divl
add
lods
mov
adc
aam
sbb
jbe
jl
icebp
rcll
push
or
icebp
sti
lret
loop
xchg
sub
or
clc
jo
pop
sbbl
pop
enter
test
or
insb
in
scas
loopne
jb
rol
rol
nop
pop
xor
jecxz
mov
add
es
pop
mov
testl
outsl
cmpsb
imul
addb
loop
arpl
add
in
cli
decb
jno
adc
and
icebp
shll
in
out
popa
jns
cmpb
out
adc
push
or
pushf
bnd
pop
ja
sarl
rclb
cmp
and
or
dec
test
xlat
and
sub
add
cmp
push
nop
dec
xor
jo
adc
push
push
add
outsb
pop
mov
arpl
das
push
dec
push
sub
xlat
fdivl
mov
jbe
mov
not
push
cld
and
add
movb
mov
loop
jg
push
jp
and
pop
test
cmp
mov
dec
jle
or
mull
pop
or
test
popa
xchg
inc
lods
stos
insl
ljmp
mov
scas
pop
outsl
mov
sub
fisttps
cmp
mov
dec
test
sbb
loope
imul
inc
sbb
cmp
add
and
daa
clc
pop
aas
js
xorb
scas
jp
lods
mov
lods
insl
jge
sub
insl
push
pop
sbb
or
test
repnz
mov
xor
outsl
jp
xchg
pusha
sub
stc
fidivl
lahf
ss
movl
movsl
xor
sbb
popa
mov
in
mov
shll
ss
inc
cmp
in
sub
or
xchg
jg
sbb
or
aaa
mov
std
ret
test
mov
adcb
adc
dec
cmpb
rcrl
movsb
sub
mov
add
jo
pop
mov
dec
mov
fucomi
xor
cmpsl
dec
xchg
pop
xchg
sub
xchg
pushf
movsb
adc
mov
dec
and
ljmp
push
pop
sub
out
lcall
stc
push
mov
mov
fcomp
sbb
mov
pop
fwait
test
imul
movb
stos
or
mov
push
mov
cs
push
pop
scas
mov
je,pn
dec
or
arpl
pop
movsb
add
lcall
add
mov
mov
mov
mov
inc
inc
sbb
jne
mov
lock
enter
mov
or
imul
and
lea
pushf
lret
dec
lahf
pop
das
push
cmp
cmp
ljmp
aaa
mov
or
mov
add
jge
cmp
stc
mov
pop
stos
dec
loop
sub
subb
add
pop
out
aas
pop
mov
stos
mov
out
stc
xor
push
xor
test
add
add
add
je
adc
dec
call
outsl
pop
stos
lcall
xchg
inc
fwait
mov
daa
pop
ss
mov
lods
mov
push
push
xchg
jg
sub
cld
out
rolb
std
pushl
dec
jp
shrl
daa
push
aam
jno
dec
mov
cmp
mov
loope
inc
mov
out
jp
inc
xor
ret
call
insb
xchg
fst
pushf
enter
mov
or
stc
mov
pop
or
into
leave
je
xchg
sti
sbb
mov
push
mov
jp
adc
or
pop
nop
popf
cmpsl
or
or
pop
sbb
in
sti
daa
jb
mov
nop
push
dec
mov
sbb
push
lret
das
ret
cld
ret
in
add
imul
xor
sbb
sbb
sbb
push
add
loopne
cmpsl
lcall
mov
andl
sbb
cmp
pop
sbb
sti
fs
jge
call
jnp
inc
add
cvtpi2ps
adc
loop
xchg
dec
fcmovnu
and
adc
xor
imul
adc
sbbl
dec
xchg
and
inc
shrb
sbb
cwtl
dec
in
cmp
hlt
mov
or
xchg
dec
into
cmp
push
push
popa
insb
cmc
cs
popf
scas
outsb
dec
xor
dec
out
scas
repz
cmp
ds
sbbb
or
jl
out
cwtl
test
jmp
das
inc
orb
in
lods
test
xchg
clc
push
xor
sbb
scas
arpl
bound
pop
aad
dec
cmp
cli
jns
or
aas
add
xor
jae
outsb
ret
sub
movsb
push
sar
jo
pop
test
mov
adc
mov
mov
and
scas
xchg
mov
mov
mov
fs
sti
test
inc
sub
addb
aad
add
hlt
sarb
or
adc
dec
sbb
mov
xchg
scas
dec
rclb
cld
jae
fwait
mov
mov
outsb
outsl
cs
arpl
add
push
outsb
rcrl
es
out
mov
jb
outsb
inc
orl
lahf
jb
andb
xor
dec
jne
int
iret
and
pop
xchg
dec
xchg
or
add
outsl
push
fcomi
leave
pop
xlat
loopne
shlb
xchg
ret
add
das
push
jns
fs
inc
xor
nop
mov
arpl
insb
mov
pop
xchg
adc
lahf
int3
push
loopne
into
cmp
test
or
push
adc
push
mov
or
xchg
shll
xor
dec
stc
jae
shlb
push
jno
mov
sub
dec
nop
ja
lret
xlat
lock
sub
mov
iret
jnp
push
das
jmp
dec
aaa
lods
cmp
insb
push
dec
pop
aas
mov
push
sbb
stos
mov
sub
icebp
push
jo
pop
jge
add
mov
orl
push
data16
dec
jns
sub
aam
rorb
negb
and
fadds
cli
in
pop
add
dec
subl
push
mov
adc
adcl
and
into
sbb
testb
cwtl
repnz
sahf
data16
aaa
mov
mov
int3
mov
pop
fidivl
aas
add
xchg
bound
cmpsl
test
enter
mov
inc
int
jmp
cmpsl
mov
out
jo
stos
xchg
xchg
lea
push
test
fcoms
cwtl
sub
aas
lret
cmovns
cmp
jnp
sbb
shlb
iret
in
mov
push
sbb
std
shl
ja
mov
ljmp
fs
test
mov
int
test
add
cmc
fldenv
out
cmp
out
loope
jno
pop
push
out
or
insl
sbb
hlt
ss
or
rorl
fsts
pop
outsl
xchg
dec
dec
jecxz
xlat
inc
bound
test
and
ljmp
mov
or
mov
das
loop
sub
inc
push
xlat
xchg
xor
xor
xchg
js
fistl
xor
mov
jae
es
stc
int3
pop
js
nop
dec
movb
fcomps
or
push
test
jb
ss
xor
mov
bound
movsb
jg
jne
pop
sarb
dec
adc
sbb
out
sbb
push
dec
fnstcw
jo
and
jne
fidivrs
sub
xor
adc
les
push
sub
mov
fs
dec
gs
sub
xchg
pop
xor
dec
pop
xchg
aad
dec
sbb
rolb
pop
in
lret
xor
popf
jp
movsl
xchg
cmp
jne
scas
mov
push
in
adc
xlat
fwait
inc
bound
outsl
inc
dec
out
daa
fsubl
movsl
repz
push
sub
in
push
mov
pop
jnp
rolb
push
sbb
data16
jp
cmp
push
popf
mov
add
repnz
sbb
pop
arpl
push
jnp
and
arpl
lods
adc
adc
aad
jae
sub
sbb
fmuls
sub
fcoms
xor
stc
in
insl
xchg
or
jmp
adc
icebp
pop
push
mov
jo
xlat
sub
out
pop
jl
or
mov
dec
mov
cmc
arpl
sub
mov
sbb
mov
cmp
lea
pusha
pop
scas
pop
adc
cwtl
mov
insb
sbb
mov
cmp
adc
add
pusha
inc
lods
iret
fcmovu
xchg
dec
repz
xchg
sahf
lret
adc
pop
arpl
in
add
and
push
in
orb
pop
jbe
xor
push
inc
adc
repnz
jl
adc
push
mul
nop
dec
movhps
out
mov
insb
push
loop
dec
mov
sti
push
movsl
int
mul
fstpl
popl
jo
adc
scas
mov
repz
cs
repz
cli
mov
test
ret
out
cmp
loop
adc
pop
int3
xchg
nop
icebp
imul
lds
xor
cmp
inc
xor
inc
div
xchg
gs
cmp
mov
test
adc
lods
cmpsl
das
xor
js
dec
and
pop
mov
daa
fwait
xor
push
xlat
cli
dec
aas
push
fbld
loop
pop
dec
out
push
mov
in
push
fnsave
xchg
imul
or
jns
push
sbb
lods
cld
movsb
or
je
outsb
stos
pop
push
pop
jp
cs
subb
sub
inc
lea
leave
mov
jb
or
pop
cmp
outsb
fnstenv
pop
ret
cmovp
out
outsl
divl
fwait
mov
jecxz
adc
aaa
jae
leave
popa
cmp
das
and
aaa
subl
popw
je
or
pushf
ljmp
aam
inc
les
repz
movsl
punpcklwd
mov
test
mov
push
cmp
negb
lea
push
fwait
pop
sub
mov
xchg
andl
sti
jno
dec
pop
and
ret
and
adc
add
or
ficompl
cwtl
xor
repz
sbb
shrb
addr16
and
nop
jecxz
mov
or
push
sbb
pop
push
jne
mov
cmp
pusha
scas
scas
pop
subl
stos
jbe
pop
and
imul
or
nop
mov
pop
es
jg
and
inc
cmp
xchg
leave
pop
pop
cmp
mov
int3
mov
dec
in
stos
test
add
fldenv
inc
dec
xor
push
in
scas
divb
xchg
adc
test
gs
inc
push
xchg
cmpsb
push
subb
sar
stos
mov
daa
add
lret
push
mov
test
cwtl
push
lock
or
mov
jo
xchg
inc
xchg
mov
out
adc
cmp
movsb
lahf
xchg
add
iret
out
idivb
sti
aaa
test
and
ret
or
xchg
add
push
sahf
push
pop
and
push
or
ds
fnstcw
out
popa
loopne
das
inc
cwtl
pop
pop
mov
xchg
leave
sbbb
punpcklbw
dec
push
addr16
lock
pop
cmp
mov
fldl
pop
int
push
and
push
jl
shl
cmp
ja
push
adc
scas
in
push
lock
cmp
addr16
push
and
imul
out
mov
orl
outsb
xchg
or
jbe
outsb
sbb
xchg
jnp
push
sbb
fxch
lds
and
mov
ror
cmp
mov
in
mov
mov
ficompl
stc
dec
xor
xchg
lods
adc
jl
xchg
loopne
or
push
fcoml
ret
outsl
bound
mov
insb
xchg
mov
setae
out
pop
push
pop
lcall
dec
and
and
jae
in
sbb
sub
scas
out
gs
lods
lret
rcrb
rcll
leave
cmp
ret
sub
add
dec
imul
mov
or
scas
push
out
jecxz
sti
cmpsl
xchg
cmp
insl
mov
movsb
call
sub
jge
and
jle
inc
mov
insl
sar
mov
divb
sub
pop
pop
clc
mov
ret
cmp
push
jo
das
mov
les
jae
lods
adc
sbb
imul
aas
adc
fsubrp
xchg
xor
fisubrs
push
add
mov
movl
sbb
mov
jg
add
dec
loop
gs
sti
or
and
or
jnp
push
mov
fsubrl
jnp
jns
xor
inc
sbb
jb
push
push
rcrl
jb
xchg
or
push
js
arpl
in
xor
aad
pop
jo
les
lret
jecxz
mov
adc
stc
xlat
data16
cwtl
lods
xor
stos
mov
sar
sbb
lret
add
loop
sti
fxtract
cmp
push
mov
out
fmull
cwtl
xchg
push
outsl
fsubr
ljmp
dec
or
mov
add
daa
dec
stos
mov
outsb
push
push
adc
pop
xchg
or
cmp
push
add
add
push
inc
mov
les
sub
ror
xchg
add
jnp
push
add
int
lahf
stos
les
xchg
mov
out
imul
popf
mov
and
jp
sar
push
inc
lahf
adc
pop
movsl
or
add
in
mov
cwtl
dec
pushf
sbb
or
cs
popf
repz
shr
pop
xchg
rcl
mov
test
pop
pop
sbb
pushf
xchg
ficomps
inc
mov
xor
or
sub
mov
sub
std
jns
jae
jl
or
push
cmc
mov
loope
jge
mov
sti
in
and
pop
dec
lock
fnstsw
and
push
jecxz
xchg
xor
sbb
push
pop
push
dec
mov
and
enter
mov
pop
lahf
adc
jns
fadds
xor
mov
jle
shrb
insl
test
in
fidivs
sbb
aad
sbb
jp
arpl
sbb
mov
pop
test
lods
xchg
mov
aas
pop
insl
fwait
loope
cmp
into
push
jecxz
xchg
or
mov
repz
jge
das
xchg
std
push
jns
cmp
shr
cmc
nop
push
push
mov
cmp
push
dec
sti
jns
fbstp
scas
push
std
in
in
and
inc
or
pop
inc
jno
cmp
insb
mov
or
or
or
rcll
or
in
fisubrl
jnp
sub
pop
and
popf
sbb
sti
insl
sbb
sarl
rclb
cltd
mov
or
popf
add
movsb
insb
cmp
xchg
mov
xor
ret
mov
xchg
fs
adc
pusha
push
or
or
cwtl
xlat
adc
pushf
xchg
mov
mov
iret
ds
dec
int
data16
loopne
or
fistpl
sub
movb
ret
test
aaa
js
pop
lahf
push
test
stos
jb
push
test
jne
test
rcll
gs
gs
mov
and
aam
push
fucomi
pop
inc
in
js
scas
das
sub
or
sbb
scas
into
jb
inc
movsb
cmp
jmp
and
hlt
in
ror
mov
mov
out
loopne
xor
inc
xchg
shrl
jae
adc
loop
mov
stos
stos
inc
pop
sub
cmc
lret
test
pop
scas
ret
add
or
dec
iret
movsl
rcr
sbbl
scas
scas
nop
lock
add
shr
mov
cmc
mov
and
or
inc
cltd
in
xor
fcmovnb
or
test
in
js
sbb
mov
popf
outsb
int3
adc
insb
imul
jbe
mov
push
call
and
xchg
mov
xor
push
xor
and
mov
data16
sbb
bound
test
sbb
mov
test
stos
sub
inc
mov
inc
fsubrp
jnp
stos
sahf
push
pop
inc
into
jmp
cwtl
ljmp
icebp
sti
test
aam
mov
sbb
adc
movsb
jb
push
sub
xor
sbbl
cmc
sub
and
push
push
loopne
test
xchg
lock
and
adc
pop
bound
repz
movsl
sbb
pushf
cwtl
pop
mov
imul
jle
or
enter
xor
xor
ret
sub
or
sbb
cltd
aas
ja
cli
cmp
fwait
enter
data16
pop
xor
adcb
add
mov
ret
fdiv
dec
ja
add
adc
imul
insb
xchg
jp
push
pushf
insl
mov
pop
inc
dec
fstps
fisubrl
insb
test
mov
sarb
mov
in
mov
jno
mov
push
push
int3
fbld
jg
sbb
or
jg
sahf
dec
aam
ljmp
mov
dec
scas
iret
pop
mov
nop
movsb
clc
andl
jns
cltd
dec
mov
adc
les
push
mov
mov
adc
adc
lods
cli
mov
pop
push
shll
icebp
jecxz
loop
out
cmp
icebp
xlat
int3
and
mov
lahf
or
adc
mov
pop
mov
mov
addl
sub
pop
adc
adc
and
add
loop
mov
cmp
cli
loop
cmpsb
xchg
dec
pop
dec
sbb
aas
xchg
out
xor
xchg
lret
cmp
das
scas
xor
jge
sub
clc
or
mov
xor
stos
pop
insl
lea
pop
push
inc
push
push
jo
and
repnz
jg
cmpsb
jbe
inc
xchg
or
mov
lds
mov
shll
call
adc
dec
ss
jo
mov
pop
test
aas
inc
in
shlb
adc
sub
sbb
mov
xor
js
or
lahf
ret
sbb
popf
sub
fwait
add
stc
push
bound
and
movb
sub
sub
es
mov
in
lods
stc
xchg
repnz
jge
add
sbb
sub
mov
sbb
push
jmp
call
je
jmp
cmp
loope
mov
mov
sahf
push
std
dec
mov
gs
push
xor
lahf
arpl
aam
dec
push
bound
dec
push
sub
push
xor
into
adc
add
pop
cli
lea
aas
shrl
pop
dec
lock
insb
jmp
push
lds
mov
inc
std
pusha
ja
xor
popa
and
fst
cmc
imul
sub
sub
add
mov
aad
inc
cmp
jne
gs
adc
sub
xchg
and
push
adcb
repnz
fwait
cmp
push
out
xchg
insl
shrb
xor
jne
in
add
cmp
or
test
lds
test
test
push
push
repz
cmp
push
out
sbb
stc
mov
cwtl
sub
dec
mov
lcall
xor
push
or
mov
lea
aad
pusha
or
jl
pop
dec
xor
xor
mov
cld
hlt
mov
lret
adc
adc
dec
xchg
push
or
ficomps
stos
std
fstp
orl
lahf
add
bound
rcrb
xor
cli
pop
pop
jbe
add
or
rorb
stos
jo
and
clc
or
cwtl
sti
sub
loopne
lahf
outsl
fiaddl
mulb
dec
popa
cmp
inc
loop
cmc
les
xchg
test
sahf
dec
xor
fsubs
dec
ljmp
push
push
mov
rcr
mov
pop
clc
push
or
inc
fstl
xchg
xor
out
insb
or
decb
sub
inc
and
mov
push
sub
into
test
out
push
lahf
cmp
stos
push
loope
test
mov
insb
lock
mov
pop
pusha
lret
sbb
jne
call
lret
jg
lds
mov
ret
mov
adc
sbb
push
mov
faddl
imul
imul
sti
fiadds
pop
sub
stos
inc
sub
cmp
and
mov
add
push
mov
jecxz
cmp
sub
jp
mov
adc
and
push
jnp
cltd
cs
jp
lods
repnz
imul
int3
mov
lds
mov
leave
stos
mov
push
push
imul
and
decl
ss
jno
fiaddl
cmp
aaa
pop
push
pop
rorb
in
cmp
and
sub
rcrl
insl
div
xlat
stos
mov
imul
lds
js
jns
xchg
inc
les
cmp
arpl
xor
rclb
lock
in
add
xlat
negb
inc
std
add
dec
jns
loop
scas
jne
mov
mov
in
add
ret
dec
cmp
pop
mov
xor
sarl
in
push
aad
xor
mov
repnz
iret
jo
mul
in
loopne
jne
jg
mov
or
push
ret
orb
das
xor
test
stc
je
sub
out
es
enter
xor
xor
mov
std
adc
xchg
mov
ja
add
mov
test
mov
fwait
mov
sub
pop
fidivrs
xchg
lret
loopne
stc
std
sub
mov
xchg
jnp
jb
or
imul
mov
adc
adc
pop
mov
arpl
int3
das
and
xchg
or
jo
pushl
xchg
enter
dec
cmc
andb
int3
xchg
test
aaa
push
mov
mov
push
xor
sbb
fstps
sub
ror
push
call
in
cltd
dec
pop
nop
push
std
dec
add
jne
or
xchg
mov
mov
push
cmp
into
push
hlt
sbb
repnz
xchg
mov
cld
jle
scas
mov
inc
mov
inc
fldl
into
ds
movsb
and
jne
out
pop
mov
mov
lods
ret
xchg
mov
sub
ja
testb
loope
jne
lret
inc
lret
mov
daa
rcrb
fcom
inc
stos
ja
out
mov
pusha
int
idivl
lahf
pusha
test
mov
bound
push
bound
and
nop
aas
push
and
sub
cmp
sub
jle
cmc
into
clc
dec
inc
push
lahf
cmp
push
mov
push
stos
outsb
rolb
outsl
xor
in
subl
xor
lahf
fwait
jl
mov
or
mov
cmp
xor
sbb
in
stc
mov
pusha
inc
and
or
lret
pop
push
push
mov
xchg
pop
gs
xchg
cmp
adc
aaa
sbb
xchg
mov
push
nop
mov
shll
cld
mov
js
jne
inc
sub
sbb
xchg
cld
fldcw
mov
add
adc
sbb
jge
addb
inc
movsb
or
mov
push
test
xorl
push
adcb
ljmp
loopew
scas
loopne
mov
in
sbb
dec
mov
jle
dec
inc
ljmp
leave
in
mov
push
loop
inc
sbb
pusha
nop
xor
push
push
jns
adc
test
inc
jns
aam
pop
mov
sub
dec
mov
aad
loop
cli
fistpll
xorb
js
xchg
push
out
mov
mov
lret
and
mov
lea
adc
inc
and
jns
test
push
cmovns
in
out
popf
sbb
in
mov
movsl
adc
fisttps
stc
imul
insl
cld
mov
fnstsw
in
xor
int3
add
gs
test
nop
xchg
xchg
mov
mov
mov
jge
pusha
mov
or
cmpsl
in
push
cmpsb
and
test
adc
and
mov
sbb
fcoml
inc
push
iret
cwtl
or
mov
test
sbb
call
std
adc
jae
push
lret
lods
lret
mov
and
pop
nop
mov
inc
mov
cmp
nop
aam
cmp
xchg
pop
insl
xchg
mov
adc
add
or
test
imul
and
fnstsw
add
mov
in
cmc
pusha
or
and
rcr
call
rorl
negl
insl
pushf
leave
xlat
fsincos
test
sub
push
adc
mov
pop
pop
push
inc
fimull
ja
xor
pusha
cmc
dec
into
in
cltd
testb
in
popf
push
mov
rclb
xor
xchg
std
fstps
popa
lods
mov
andl
or
rclb
rcrl
clc
and
mov
scas
mov
cwtl
cmp
lret
fcompl
xchg
pop
and
pop
out
adc
mov
mov
cli
cwtl
icebp
in
stc
fdivs
add
aam
pop
push
add
xor
out
sbb
jnp
ja
cmp
and
js
lret
in
arpl
and
aam
test
jbe
lahf
and
dec
sbb
scas
xor
outsl
push
or
xor
aad
mov
ljmp
mov
mov
adc
ficompl
mov
enter
cs
addr16
xchg
add
loopw
sub
test
mov
add
sahf
pop
fcompp
dec
mov
push
jns
mov
sbb
icebp
aam
mov
aad
lds
pop
dec
in
pushf
pop
or
mov
push
movsl
in
pop
sub
xlat
pop
mov
xorl
fmulp
repz
je
fldt
mov
sbb
lahf
mov
mov
mull
inc
push
inc
xchg
ljmp
repnz
std
lahf
gs
add
push
push
jl
cli
adc
adc
mov
add
bnd
mov
jl
dec
addr16
jmp
or
loopne
into
and
mov
push
sarl
popf
pusha
nop
rcll
mov
lods
pop
mov
int
fdivp
mov
add
sbb
mov
sbb
adc
push
dec
or
fidivrs
out
jp
pop
xor
add
sbb
mov
aam
enter
pop
mov
mov
in
push
mov
icebp
daa
mov
subl
imul
das
popf
jecxz
aas
xchg
pop
outsb
lock
mov
xchg
and
mov
cmp
mov
pop
testl
clc
iret
mov
jbe
rcrl
mov
push
pop
jg
test
fbstp
pop
call
aad
adc
add
adc
jno
mov
arpl
repz
jecxz
jp
mov
mov
or
outsl
xorb
imul
pusha
xchg
inc
decl
int3
inc
call
outsl
cmc
push
lock
mov
pop
movsb
lds
dec
dec
lock
or
sti
jnp
jge
cmp
cmp
lods
shll
adcl
jb
mov
fiaddl
lea
shlb
shrb
sbb
adc
daa
fwait
out
push
dec
cmp
push
and
adcl
mov
ret
js
pop
xchg
paddb
pop
mov
out
jl
fsubl
cmp
sbb
xor
cmp
mov
rcrl
rclb
imull
sbb
pop
js
and
sub
out
jecxz
psubsw
lea
or
jp
and
and
call
ds
fidivrs
std
dec
roll
cmpsl
mov
sbb
or
negb
hlt
ljmp
add
insl
push
sub
movsl
imul
inc
mov
out
and
mov
mov
mov
in
push
sahf
dec
movsl
mov
loopne
int3
cltd
cmp
xchg
inc
inc
mov
push
insb
add
movsl
or
popf
and
frstor
sub
shl
inc
inc
jbe
and
xor
and
mov
stc
test
add
cmp
xchg
xchg
int
imulb
mov
jbe
cmp
jns
and
iret
arpl
int
cmpb
xchg
mov
inc
mov
cmc
mov
xchg
sub
push
push
pop
in
popf
inc
pushf
mov
addl
pop
dec
sbb
cltd
lds
lea
cld
mov
jne
xor
das
pop
jge
dec
dec
aaa
pop
ret
pop
inc
and
add
mov
mov
push
mov
test
cs
in
cmp
jns
push
xchg
jnp
jmp
sbb
mov
cmp
adc
aas
dec
jp
mov
cmpsl
sbb
mov
xor
out
pushf
pop
insl
sbb
lret
add
cmp
bound
call
mov
aas
push
mov
pop
push
lea
push
sahf
xlat
lods
inc
imul
jno
gs
pop
or
push
repz
daa
mov
shlb
fimull
jle
xorb
fwait
add
sbb
xchg
adc
or
cld
or
adc
in
rorb
das
outsb
sarl
lods
sub
ret
jle
push
push
or
jecxz
pusha
jmp
pop
fistpl
inc
adc
push
test
inc
jecxz
xchg
mov
jmp
lcall
mov
adc
mov
fldcw
sub
ljmp
sbb
dec
shrl
cmp
fcoms
stc
lods
push
jb
filds
lret
shll
movsb
pop
or
out
ret
std
push
jmp
sub
inc
inc
scas
repz
test
lret
sbb
imul
jns
push
fwait
push
pop
and
clc
rcrl
test
hlt
call
pop
push
inc
dec
sbb
xchg
push
pushf
pop
add
add
lret
inc
jns
lods
and
orb
out
sub
jge
lods
fcomip
push
ret
testb
jnp
cmpsb
mov
dec
cmc
pop
mov
in
pop
insl
loopne
aam
sbbl
ret
jg
imul
ret
cwtl
mov
xchg
cmp
stos
icebp
repz
int
std
or
xor
fadds
jno
scas
pop
ss
aas
pop
stc
sbb
pop
jl
sbb
imul
xor
push
test
dec
outsl
and
rcrb
xor
ss
scas
mov
adc
mov
cltd
fsubr
mov
mov
jge
and
jb
dec
sub
rcl
mov
sub
movsl
jl
jbe
iret
adc
jno
flds
cmp
mov
pop
pop
lds
lods
das
and
mov
movsb
sub
push
frstor
call
adc
stos
add
mov
push
sub
jge
bound
dec
or
add
lds
xchg
insl
in
push
cmp
jmp
fmull
bound
inc
xchg
stos
dec
sbb
ret
mov
push
jecxz
add
pop
jl
sbb
and
sub
scas
repnz
sub
vmovups
fists
add
jae
aad
ja
adc
cmp
xor
frstor
test
fwait
pop
incb
push
shll
fsub
bound
shl
push
lahf
add
push
sbb
bound
add
lea
jb
call
or
jo
scas
in
stos
cmp
int3
mov
divl
in
and
fisubl
or
jnp
inc
sbbl
repnz
add
cmp
jo
push
pop
gs
jecxz
in
cmpsl
pop
xorl
das
pop
xor
xchg
jmp
popf
pop
out
scas
outsl
mov
pop
lahf
xorb
in
mov
test
adc
and
pop
lock
add
lea
push
jnp
and
je
test
push
aas
jmp
jmp
cltd
jno
push
fdivr
push
dec
xchg
sub
scas
push
das
lret
rorl
adc
popa
xor
call
incl
out
lcall
loop
test
pop
sbb
adcl
and
push
mov
shlb
lret
test
sti
gs
fisubl
xchg
pusha
inc
pop
mov
fs
test
pop
pop
in
shr
rorb
inc
push
inc
mov
iret
dec
loop
cmp
cmp
jmp
test
mov
push
mov
mov
jg
std
xor
pushl
mov
mov
jmp
mov
push
sub
or
push
hlt
push
inc
sbb
leave
hlt
or
inc
mov
jle
cmpsb
test
pop
pop
mov
insb
jmp
and
mov
loopne
cmp
push
inc
lahf
adc
dec
pop
jecxz
nop
xchg
push
lods
push
mov
lret
push
in
fwait
data16
mov
cli
roll
push
scas
cmp
movsl
sub
loop
subb
les
hlt
push
push
inc
push
mov
pusha
jg
insb
adc
sbb
gs
arpl
fdivs
xor
outsl
mov
mov
mov
pop
cmp
in
loop
mov
pop
roll
sub
clc
lretw
je
adc
cmp
and
bound
mov
mov
cmp
test
mov
xor
cwtl
scas
ja
pop
ss
pop
cltd
leave
adc
push
push
inc
add
aas
jecxz
jle
das
fldt
mov
push
cmpsb
jns
daa
push
push
jae
pop
movsl
sahf
cmp
cmpsl
xor
idivl
test
xor
mov
rorb
fstp
cmpsb
and
dec
mov
xchg
jnp
adc
pushf
fsts
fldlg2
dec
outsl
mov
jno
cltd
mov
leave
mov
dec
jb
clc
sub
dec
ja
fsubs
jo
test
cmp
fcmovu
lock
mov
cmpsl
or
call
push
jge
scas
xchg
and
aad
into
add
mov
cmp
stos
movzbl
loop
pop
fstpl
pushf
xchg
cmp
dec
fsub
jl
int3
gs
insl
adcl
sbb
fldenv
clc
mov
sahf
jbe
loopne
and
popa
testl
xchg
push
dec
jl
testb
outsl
and
xchg
sub
xor
test
sbb
movsl
into
xor
lock
xor
and
addr16
imul
sub
xchg
and
rclb
ljmp
cmpsb
mov
lods
mov
sbb
arpl
fcmovb
in
outsl
push
mov
push
or
adc
dec
mov
xchg
outsb
push
cmp
add
inc
and
push
jbe
xchg
push
sbb
jp
adc
adc
jo
add
pop
scas
inc
icebp
cmp
cmp
pop
test
pop
jo
imulb
pop
jp
cltd
enter
xchg
arpl
jo
push
cmpsl
repnz
adc
cmp
aam
jmp
cmpsl
mov
mov
xor
or
push
and
xchg
cmpsl
fisubs
scas
frstor
popf
icebp
or
xchg
dec
stos
and
repnz
adc
ja
mov
add
push
push
scas
fwait
xchg
jecxz
arpl
movsb
jae
decb
in
lahf
insl
pop
add
fdivs
test
jp
inc
sahf
stos
cld
pushf
sub
pop
adc
xchg
add
mov
jge
pop
push
psrld
or
loopne
push
mov
fstps
xchg
fyl2xp1
rcr
dec
pushf
pop
push
mov
frstor
sub
fwait
dec
pop
rcl
sub
or
cli
mov
adc
xor
cmp
and
jg
or
popa
lods
dec
lcall
pop
xchg
sbb
mov
pop
mov
cmp
sub
sub
mov
sbb
in
xor
lods
and
dec
jle
mov
mov
adc
sub
mov
sub
and
ret
in
sahf
mov
jnp
dec
xchg
aad
cmp
aaa
and
adc
inc
ret
mov
repz
cmp
sbb
push
inc
mov
or
pop
sarl
aaa
loope
mov
aad
xchg
sbbb
push
pop
jne
jno
or
adc
push
mov
aas
lahf
mov
int
mov
mov
xchg
imul
jle
mov
dec
cwtl
mov
outsl
cmpb
inc
scas
push
addl
aas
divb
mov
xor
jg
push
int3
sub
ljmp
cmp
icebp
aam
je
push
incl
out
add
iret
movsb
sar
jb
push
leave
ja
int
and
or
fs
dec
push
ret
icebp
jae
addr16
insb
js
jns
dec
daa
sbb
icebp
adc
push
rorb
sbb
icebp
sub
loope
xchg
mov
pop
cmp
aaa
cwtl
in
jbe
xchg
shlb
hlt
jno
pop
or
ds
nop
cltd
stos
mov
xchg
jge
mov
mov
cmp
iret
mov
sub
movsb
xchg
dec
jae
and
push
jle
or
sbb
ret
and
pop
loop
cli
mov
mov
mov
aam
xchg
repnz
sbb
ljmp
jge
add
scas
sti
fnop
mov
mov
sbb
cmc
aas
iret
mov
loop
jns
cli
pop
pop
sarb
pusha
add
stos
imul
xor
mov
and
test
push
xchg
adc
push
xor
scas
mov
dec
jle
loope
pop
jnp
and
cmp
or
orl
fidivl
mov
xor
sbb
ret
int
push
sbb
iret
lods
cmp
mov
xor
jg
addr16
pop
lret
mov
xor
dec
in
aam
and
orb
sahf
mov
adc
pop
xchg
icebp
mov
jecxz
sbb
das
std
out
in
xchg
cld
sbb
sub
pushf
mov
mov
add
je
xchg
sub
rcll
enter
lcall
sub
xchg
mov
sub
cmp
xchg
xor
addr16
pop
adc
push
inc
in
roll
sub
insl
lret
pop
sbbb
jg
sbb
xchg
push
out
sub
sub
daa
jmp
gs
xor
and
leave
push
popf
or
mov
fs
or
xchg
and
mov
movzbl
inc
js
ret
mov
stc
xchg
into
xor
pop
pop
addr16
fadds
insb
adcl
mov
dec
push
jmp
mov
sub
or
test
or
fs
dec
lret
mov
jp
xchg
or
sarl
mov
scas
imul
dec
jnp
hlt
inc
inc
mov
mov
pop
sub
repnz
std
fnsave
fistpll
int3
xor
sbb
pop
mov
cmp
stos
dec
lods
mov
iret
jns
out
popa
xchg
push
ficompl
xchg
aaa
mov
push
sub
lea
dec
mov
roll
xchg
mov
es
mov
in
push
aas
pop
xor
ja
pusha
jl
push
test
scas
add
fdivs
pushf
js
ds
rorl
jp
out
cmp
imul
jnp
lds
push
adc
xor
jne
cmpsl
es
push
inc
mov
inc
test
push
inc
push
mov
push
adc
mov
nop
loopne
and
cmpsl
mov
sub
jno
andl
pop
jecxz
test
inc
push
cs
int3
scas
xchg
lods
lods
cmpsl
mov
cmp
cmpsb
pop
enter
cmp
mov
pop
test
into
sti
add
fsub
into
rolb
jg
or
cmpsb
leave
enter
mov
fwait
dec
add
mov
mov
sbb
lds
aas
adc
pusha
xchg
dec
inc
pop
mov
dec
inc
cmp
int3
or
fwait
stc
mov
mov
in
push
dec
or
dec
pusha
mov
pop
into
out
fdivl
test
leave
mov
stc
jno
das
das
test
xchg
and
sahf
ret
pusha
lcall
inc
das
dec
and
call
loope
push
push
mov
mov
fs
out
sarb
jns
ret
or
xor
mov
xor
jae
and
cmpl
nop
movsb
loop
je
xchg
hlt
gs
lahf
call
cmp
mov
and
insl
arpl
xchg
xchg
mov
out
call
jp
cmc
mov
popa
lea
mov
jo
push
insb
loope
lds
mov
and
push
lret
test
call
mov
gs
xchg
into
in
push
pusha
jne
pop
xchg
rolb
pop
pushf
mov
sbb
sub
sbb
ret
xchg
pop
imul
daa
sub
sbb
push
inc
adc
mov
mov
xchg
idivb
idivb
inc
jo
test
xor
mov
and
or
jb
movsl
inc
jp
mov
push
sub
repnz
clc
push
xchg
gs
popa
fbstp
and
stos
fildl
icebp
sti
sahf
xchg
xor
test
xchg
inc
test
or
or
jl
xor
fstpt
push
aam
push
sbb
int3
push
cwtl
ja
mov
out
push
mov
addb
or
adc
sub
lock
push
pop
movsl
inc
out
ret
adc
dec
adc
lock
imul
mov
sarl
pop
mov
push
dec
push
xchg
or
fmuls
pop
inc
jle
push
sti
sti
add
subl
jmp
pop
mov
es
add
mov
outsl
pop
ss
mov
std
xor
cli
adc
bound
cld
pusha
add
sbb
push
mov
jne
xor
pop
jae
mov
out
mov
jne
add
inc
pop
adc
jns
out
rorb
sahf
je
leave
xor
mov
push
dec
inc
fwait
mov
pop
scas
mov
push
arpl
inc
cmp
cld
cli
mov
cmpsl
sub
xor
mov
mov
cltd
cmp
movsl
jle
mov
out
jo
cld
xor
pop
cmpsb
mov
jns
shl
pop
je
shrl
jmp
push
hlt
arpl
bound
xchg
pxor
scas
loope
sarl
leave
mov
gs
pop
pop
lahf
dec
test
xchg
in
ljmp
sbb
cmp
mov
ljmp
or
pop
jp
jg
adc
icebp
cli
mov
movsl
mov
sbb
xchg
mov
lock
mov
push
and
pop
adcw
push
and
enter
jecxz
out
adcb
out
sbb
push
dec
imul
js
or
jecxz
push
mov
cs
push
push
js
pop
loopne
arpl
scas
add
ss
xadd
cmpb
dec
stos
inc
or
and
push
aas
jg
je
push
fidivl
push
das
and
test
imul
and
or
push
loopne
int
sarb
fdivs
push
mov
es
mov
test
cmova
and
stos
pop
rcr
imul
pop
ds
mov
mov
popa
xor
adc
xchg
rep
outsb
jnp
pop
mov
repz
es
mov
outsb
dec
shll
mov
xchg
sub
jle
mov
outsl
xchg
lods
adc
rol
rcrl
xor
jb
mov
jmp
xchg
scas
mov
daa
aad
lock
jp
fildl
out
lcall
mov
shll
loope
adc
daa
xchg
popa
insl
mov
mov
xchg
xor
cmp
xchg
pop
sbb
mov
lea
cmp
push
xor
mov
add
or
and
sbb
test
fs
mov
scas
cmp
stos
xchg
add
jne
movsb
fnsave
xchg
rorl
mov
mull
xchg
sub
xorb
nop
mov
fcmovne
daa
push
fisubrl
lods
mov
fs
sar
pop
aam
popa
daa
pop
mov
mov
lock
add
push
vpacksswb
adc
dec
sbb
push
push
cmp
mov
sub
inc
jg
push
je
push
lea
in
push
mov
xchg
es
push
cs
mov
popa
clc
push
rcrb
shrb
dec
leave
add
cmp
stos
xor
sahf
stc
pop
inc
sbb
adc
inc
and
leave
mov
gs
xor
icebp
mov
rcll
popa
xchg
mov
addr16
cld
divl
fistpll
pop
gs
lret
jns
pop
cli
out
aas
test
xchg
pusha
and
dec
lea
mov
jno
xchg
xor
adc
add
rorb
jg
and
dec
mov
stos
scas
stos
cmpl
sbb
jmp
aas
mov
dec
cmp
mov
pop
mov
cmp
int
iret
jno
push
jns
cli
movb
mov
jecxz
mov
dec
aad
push
out
inc
sti
add
imul
and
int3
push
cmp
aaa
and
fbstp
cli
rorb
out
adc
roll
repz
int3
xor
mov
pop
inc
test
xor
mov
sbb
dec
ljmp
xchg
sub
sbb
inc
and
test
push
hlt
pop
jbe
push
gs
vmwrite
xor
xor
xchg
inc
mov
inc
push
addr16
xchg
jnp
mov
push
xor
ja
ret
imul
int
out
ds
dec
sbb
mov
jecxz
sbb
and
imul
push
stos
outsl
fs
or
test
sub
ss
mov
stos
icebp
or
dec
nop
mov
lods
dec
movsl
push
push
imul
ljmp
adc
sbb
pushf
mov
xchg
inc
xor
mov
and
lea
movb
rorb
into
lahf
adc
or
lds
and
int3
xor
cmpb
daa
rclb
sbb
nop
adc
cmp
pop
cltd
push
aas
icebp
jo
stc
aad
shlb
jns
out
add
pop
scas
pop
jg
pop
mov
pop
mov
mov
cmp
mov
xchg
adcb
cmc
cli
cmp
sbb
ljmp
inc
mull
inc
sub
leave
lret
cwtl
nop
in
mov
cmp
mov
sub
loopne
cmp
gs
pop
insb
lret
nop
dec
lret
sbb
int3
hlt
imul
xor
dec
mov
loopne
cmp
adc
or
test
mov
cmp
das
ffreep
sub
and
sbbl
pop
int
push
mov
mov
xchg
stos
jnp
dec
test
xchg
aad
movl
or
aam
icebp
aam
leave
mov
cmp
pop
adc
out
jmp
mov
pop
or
dec
andb
stc
cmpsb
xor
divb
inc
lcall
xor
dec
fdivr
loope
jp
jns
inc
jne
popf
and
cmp
lock
jne
jnp
mov
jmp
call
cltd
int
shr
cs
sbb
repnz
push
out
movsb
mov
mov
test
mov
stc
or
fwait
inc
scas
das
clc
pop
nop
xchg
stos
lret
repz
cmp
pop
sub
pop
ss
cmpsb
imul
or
sahf
shll
xchg
jl
imul
xchg
sarb
insl
pop
in
in
dec
out
out
outsl
sub
testl
inc
push
inc
sahf
add
xchg
and
stc
jmp
pop
sbb
lret
lods
pop
inc
sbb
cmp
mov
xlat
cmovno
push
cld
inc
in
iret
rclb
pop
cltd
push
xchg
into
cs
xor
xchg
mov
sub
xchg
in
icebp
gs
jae
std
popf
jmp
add
or
mov
stos
ret
jge
sahf
lods
cli
bnd
scas
and
push
mov
push
or
add
div
scas
sub
iret
sarl
lcall
mov
jecxz
mov
jns
jo
je
and
cmp
or
sbb
outsl
fs
aaa
mov
shrl
aas
addl
das
iret
fucomp
ret
out
movsl
rcrb
cld
sbb
push
outsl
and
mov
aad
shll
sbb
insb
add
xchg
mov
js
push
daa
mov
push
movsb
pop
jne
sbbb
ja
adc
fmulp
sbb
dec
faddl
inc
test
mov
or
call
pop
mov
mov
dec
sti
fidivrs
jno
enter
arpl
fimuls
stos
adc
pop
sahf
push
xor
insb
sbb
push
ds
or
fs
fcomps
inc
in
push
mov
pop
push
or
pop
xchg
cld
test
fimuls
out
ss
jle
mov
xchg
sti
pop
addr16
push
orl
int3
jae
xor
xchg
mov
enter
imul
aam
aad
pop
icebp
xchg
lret
pop
bound
out
and
int3
shrl
mov
data16
xor
aaa
cltd
or
xchg
inc
mov
mov
mov
lock
dec
sbb
push
popf
out
jnp
and
sbb
add
ret
pop
push
inc
sub
mov
decl
mul
test
dec
and
fdivl
jne
jle
xor
lods
enter
popa
ret
fldt
jns
sub
mov
and
inc
mov
ss
jmp
pop
aas
ret
imul
xor
mov
mov
xchg
inc
push
les
xor
div
mov
rcr
cmpsl
sbb
mov
cmp
icebp
movsbl
cmp
sbb
shlb
movsl
stos
dec
cltd
and
dec
repnz
jo
adc
dec
iret
fbld
das
adc
loope
pop
xor
fistpl
ret
imul
rol
and
repz
addb
jle
xchg
lret
jmp
xchg
sar
push
mov
push
mov
push
and
mov
push
rcrl
hlt
nop
mov
cwtl
lret
sbb
xchg
sahf
cmp
pand
add
mov
xor
mov
ds
pusha
push
inc
mov
sbb
mov
popa
out
inc
mov
sub
xlat
cmp
jbe
push
clc
cmp
mov
xor
aad
dec
push
cmp
push
pop
jne
movsb
xor
pop
insb
stos
sub
mov
movsb
adc
mov
pop
sahf
jns
push
pop
fildll
scas
in
adc
jmp
add
mov
mov
xor
dec
nop
adc
sti
sub
mov
imul
add
je
cmc
push
mov
sbb
jmp
mov
jle
sub
mov
dec
and
dec
adc
das
sbb
jl
and
add
add
popa
cmpsb
push
and
and
ljmp
scas
add
test
mov
testl
fisubl
add
inc
mov
leave
dec
push
and
daa
shl
push
and
cmp
cmpsb
int
int
mov
aad
jge
sarb
stos
loopne
rcrw
cwtl
mov
jnp
lock
popf
lret
xor
xor
pushf
push
sbb
leave
mov
mov
fldl
lcall
clc
dec
mov
call
xchg
fsubrs
mov
fcomps
test
or
xor
push
cwtl
sbb
dec
or
imul
out
jne
inc
xchg
stc
repz
xor
mov
sbb
sahf
insb
addl
adc
cmp
cmc
push
xchg
mov
nop
mov
adc
ja
lcall
pop
xchg
imul
jmp
push
les
dec
out
push
sub
jl
mov
test
fimull
repnz
inc
xchg
int3
add
dec
jne
dec
jae
lds
scas
scas
popfw
dec
cmp
shrb
test
jo
lcall
popa
mov
pop
std
sbb
jg
ret
test
sti
sahf
and
ficoml
test
out
mov
loope
mov
cmp
or
std
repnz
fisttpll
or
loope
jne
push
push
adc
mov
cli
inc
sti
shrl
push
pusha
test
outsl
stos
jnp
ljmp
repnz
sbb
jae
arpl
push
cmpsb
loope
ret
mov
test
cmp
shr
cwtl
mov
fistpll
adc
test
xor
mov
call
pop
sbb
stc
push
flds
mov
cmp
push
xchg
stos
sbb
push
push
fs
lock
add
lret
hlt
repnz
mov
jae
pop
cwtl
mov
mov
pop
jg
xchg
cld
nop
leave
ficomps
push
negb
mov
pop
xor
in
sbb
pop
je
lds
sbb
cli
outsb
xor
jb
fs
jno
fcomps
ljmp
xchg
mov
in
push
insl
mov
orb
push
addr16
sub
sbb
mov
adc
dec
div
mov
aaa
cli
jecxz
outsb
pusha
ret
xchg
in
rol
cmp
inc
cmpsl
inc
jno
sub
xor
mov
pop
cmp
dec
cmp
jb
dec
or
pushf
in
mov
push
mov
mov
bound
push
push
mov
adc
sbbl
push
jbe
lds
jno
in
pop
outsl
test
jmp
push
push
mov
cmpsl
cmp
cmpsl
int
mov
xor
mov
add
mov
sbb
fwait
in
add
xor
fstps
fsts
fstps
and
adc
std
sub
inc
mov
nop
adc
dec
and
pop
ds
mov
loop
or
xor
adc
mov
and
jno
sub
fsubrs
roll
jp
pop
pusha
pop
pop
push
push
adc
dec
lahf
bound
jns
mov
stos
adc
mov
int3
adc
dec
addr16
enter
adc
out
xor
push
jae
mov
inc
mov
sti
nop
sbb
ret
inc
mov
sub
mov
ds
rcr
gs
inc
or
mov
push
daa
dec
out
push
lahf
idiv
loopne
out
jle
into
xchg
sbb
lea
ljmp
adc
fiadds
or
lret
fsubs
pop
mov
mov
cltd
outsl
pop
les
mov
inc
inc
das
xor
je
test
jnp
cmp
dec
pusha
mov
inc
loop
dec
lcall
mov
movsb
ljmp
cld
pop
popa
pop
pusha
mov
lret
dec
fidivrl
xor
ljmp
sarl
fcmove
lcall
ficompl
loopne
dec
inc
clc
jnp
pop
imul
cs
fmuls
and
imul
int
cmp
mov
dec
outsb
ret
cli
push
or
sahf
push
lcall
mov
sbb
xchg
icebp
ds
mov
push
mov
push
lret
cli
sub
popf
jmp
daa
ljmp
and
jmp
jmp
dec
int
popf
push
fdivs
and
jno
sahf
stos
cli
cltd
pop
fwait
mov
or
es
leave
test
push
ret
sub
nop
pop
lahf
or
xor
cltd
mov
pushf
add
dec
xor
mov
sahf
ljmp
popa
fwait
push
mov
mov
dec
fnstsw
pop
pop
rolb
push
into
out
sbb
ds
enter
or
mov
ret
aas
cmp
loop
xor
push
je
xchg
xor
or
pop
push
mov
mov
mov
xchg
in
mov
pop
imul
mov
mov
dec
xlat
shll
cmp
stc
sti
jbe
xor
test
push
push
sub
mov
mov
pop
xor
push
dec
hlt
sub
lret
push
imul
insl
iret
mov
jne
cmp
inc
outsb
aas
jle
je
enter
popf
roll
popa
mov
mov
rolb
aaa
fists
mov
mov
sbb
popf
loopne
das
pop
mov
gs
sbb
jg
mov
pop
cmpsb
mov
cmc
scas
addr16
and
dec
push
adc
and
dec
push
repz
xor
jnp
sub
mov
and
adc
fists
xor
xchg
xchg
insb
jnp
in
xlat
cmp
push
fsubrl
int
adc
adc
loopne
jmp
dec
sub
cmp
fbstp
bound
call
out
cmp
lock
mov
dec
mov
imul
inc
pop
sub
pop
ret
xor
push
mov
repnz
pop
inc
test
sub
pop
jecxz
adc
inc
dec
punpckhwd
inc
gs
movl
rcrl
jo
in
repnz
push
arpl
jle
aaa
cvtpi2ps
pop
or
sub
or
leave
mov
cmc
fs
sahf
fwait
mov
xchg
inc
sbb
xorb
sbb
cmc
repz
mov
dec
push
and
inc
les
push
loop
mov
cmpsb
mov
les
jne
and
lret
pop
jg
das
inc
imul
inc
jnp
add
jb
inc
mov
pop
mov
hlt
std
inc
add
imul
adc
outsb
sbb
cmc
adc
inc
outsb
mov
mov
int
lds
add
int3
imul
fisubs
adc
and
xchg
fmuls
aam
xchg
ss
push
jle
jb
or
mov
dec
and
sbb
fcomip
mov
jmp
cs
inc
mov
in
pop
fiadds
adc
lock
or
fsts
sub
pushf
push
shll
mov
mov
mov
pusha
fidivs
or
repnz
mov
push
mov
inc
rcrl
pop
gs
repnz
cmp
fwait
pushf
push
mov
dec
dec
adc
mov
jae
jp
arpl
push
jg
xchg
gs
mov
add
xchg
fstl
cmp
jbe
mull
sti
fmuls
add
rcrl
jl
add
lret
add
stos
cltd
add
jle
or
sbb
and
std
or
push
dec
cmp
add
push
daa
je
jg
inc
mov
into
out
push
in
mov
lret
pop
jb
sbb
inc
cmp
outsb
jmp
pop
mov
mov
lea
cs
jno
movsl
cmp
aad
int
xchg
lcall
mov
xchg
push
add
pop
lds
nop
pop
mov
dec
ljmp
jno
sub
xchg
test
dec
cmp
lods
sarl
sbb
sub
sbb
sbb
xchg
test
test
shlb
mov
scas
gs
fisttpll
dec
inc
dec
fwait
dec
jo
and
scas
and
int3
roll
inc
mov
cwtl
lret
xorb
xchg
mov
mov
push
and
mov
mov
test
test
sub
pop
loope
lock
mov
fisttpll
pop
idivl
test
bound
lahf
lods
inc
mov
push
and
mov
test
inc
sar
aas
pop
out
cmp
loopne
xchg
pop
imul
adc
imul
outsb
sub
sbb
pop
addr16
adc
stos
pop
pusha
dec
adc
std
out
sub
dec
outsl
mulb
jg
insb
xchg
add
data16
ficompl
mov
gs
fistps
dec
mov
inc
pop
inc
outsl
stos
js
mov
loope
pop
push
int3
and
jmp
cli
cli
push
sub
loope
int3
inc
mov
repz
incb
jbe
jl
bound
shll
push
adc
rcrb
push
imul
out
add
dec
mov
push
movsb
mov
jge
fcmovb
push
and
fsts
mov
ret
adc
les
cmp
push
gs
mov
adc
mov
pop
stos
inc
jae
lds
loope
pop
sub
dec
lcall
les
and
add
jo
jae
out
fimuls
stos
addr16
aam
adc
mov
int3
popa
sbbb
jmp
or
pop
enter
dec
jp
xchg
or
pop
cmp
dec
cmp
andb
loop
jbe
cwtl
cli
xchg
jb
lret
scas
mov
std
stos
cltd
push
jecxz
fistpl
lahf
xchg
and
dec
test
stos
in
dec
out
inc
xor
popf
pop
lcall
sbb
push
les
add
jb
in
dec
sub
pinsrw
add
ja
xor
xchg
adc
pop
adc
cmp
daa
push
decb
adc
mov
sub
and
mov
mov
add
mov
test
dec
scas
jns
mov
imul
xor
pop
loop
cmp
inc
dec
les
mov
xor
pshufw
cmp
imul
fdivl
mov
imul
fmul
push
cmpsl
rolb
inc
xlat
insb
scas
mov
xor
or
pop
in
daa
fdivrs
adc
adc
je
fbstp
mov
scas
int
mov
pop
arpl
aad
out
addb
mov
fwait
push
stos
inc
ja
dec
add
or
shlb
jge
aas
jmp
lods
jmp
pusha
pop
popa
mov
jmp
or
inc
mov
mov
mov
test
std
shl
xchg
mov
repnz
push
or
arpl
and
jecxz
xlat
sti
rolb
dec
inc
loopne
jecxz
and
mov
orb
add
jno
pop
push
jp
popf
mov
cmpl
xchg
sbb
vcvtsi2ssl
cmc
imul
xchg
call
jl
jne
shrl
push
stos
cmc
jns
xchg
mov
xchg
sbb
mov
ljmp
jecxz
pop
mov
jmp
pop
mov
outsb
shrl
push
sub
bound
out
push
mov
fwait
and
int
cmp
sub
subl
add
pop
in
sbb
and
in
or
sarl
clc
or
push
int
mov
inc
subps
pop
pop
jo
cld
js
push
stos
push
sub
lcall
bound
loopne
push
mov
fs
jbe
lret
sahf
pop
adc
jp
add
dec
mov
and
test
enter
mov
push
daa
mov
jne
xchg
adc
mov
sbb
loope
cwtl
dec
xchg
in
add
dec
stos
hlt
adc
cmpsl
jb
sbb
dec
fisubrl
pop
repnz
cmp
jo
les
xchg
mov
pop
in
push
sbb
aam
push
jge
inc
insb
cld
pop
fistpll
test
nop
addr16
aas
cli
scas
cmp
xchg
add
cmp
popa
add
adc
lcall
xchg
jg
inc
push
iret
fstpl
inc
pop
jecxz
xor
mov
fildl
out
mov
push
pop
loope
inc
mov
xchg
test
add
mov
add
mov
pop
jno
addl
je
sbbl
xor
push
mov
addr16
aam
adc
dec
jae
andl
jp
test
pop
and
jns
xor
int
in
in
test
fisttpl
aas
fistl
xchg
add
test
fs
lock
xor
inc
ss
sub
das
inc
push
pop
les
mov
or
pop
insl
lahf
lret
insb
mov
cmp
pop
pop
dec
shll
aaa
sbb
je
imul
dec
ret
es
shll
fsubrs
ret
jne
cmpsl
dec
jecxz
call
aas
sbb
gs
xor
mov
out
jae
mov
ret
icebp
sub
push
lcall
es
mov
shll
jl
mov
es
in
stos
xchg
cmpsl
dec
pop
push
clc
jp
mov
or
dec
xchg
stc
in
adc
aad
es
push
jae
cmpsb
sub
adc
outsl
cmp
jno
push
pop
loope
add
sbb
scas
bound
fimuls
insl
repz
pop
and
adc
mov
push
fdivrl
ja
out
cmpsl
lret
mov
notl
out
inc
add
xchg
nop
sbb
push
adc
cli
xor
fsub
lahf
add
jnp
and
lods
mov
lcall
popa
insl
mov
xchg
cmp
cld
lods
pushf
adc
xchg
inc
clc
mov
sub
aas
jmp
sbb
movsb
jne
lcall
dec
aad
cmp
fs
push
jo
in
enter
adc
push
mov
data16
ss
lret
lahf
and
repz
int3
test
int3
pop
or
inc
jne
adc
mov
add
sub
lods
add
ljmp
dec
xor
cltd
mov
lcall
pop
mov
mov
jecxz
lret
inc
rclb
inc
js
aam
mov
xchg
orb
adc
push
lret
xchg
rolb
les
sbb
pop
repz
pop
mov
xchg
insb
cmp
mov
cmc
push
jnp
mov
in
lahf
mov
pop
out
mov
sbb
mov
sbb
fistpll
lret
outsl
aaa
lds
push
imul
sahf
jge
jmp
jo
ja
test
cld
aas
mov
xchg
call
jnp
js
leave
sbb
jbe
lock
add
sub
mov
lock
scas
xchg
or
cmpsb
movsl
xchg
sub
lcall
push
jge
loope
and
sbb
pop
movsb
ss
add
mov
pushl
mov
loope
loope
dec
loop
jg
ret
jg
sub
sbb
and
stos
test
mov
sub
or
and
idivl
ja
pushf
sub
push
fcmovnb
adc
mov
movsb
cmp
lods
arpl
mov
outsl
inc
arpl
sub
popf
xchg
and
or
inc
sbb
shrl
neg
iret
test
hlt
das
fidivrl
aas
and
hlt
lds
cmp
dec
aas
fildl
inc
sbb
pop
pop
or
sub
jne
hlt
jl
fcoms
cmp
sbb
movsl
out
inc
pusha
xor
js
adc
pusha
mov
pop
dec
pushf
mov
in
lret
push
in
mov
jae
cmp
push
jge
leave
xor
jns
mov
sub
mov
mov
fisubs
mov
jmp
stc
cmp
dec
insl
push
fisttps
mov
or
xchg
jl
mov
inc
shlb
insl
fstpt
push
or
cmp
pushf
and
mov
or
and
cwtl
xchg
xchg
fsubrp
mov
fmull
push
xor
outsl
mov
insl
shll
push
cwtl
push
fs
cmp
jl
mul
jo
incl
roll
lcall
jg
push
sti
jnp
aad
mov
lea
inc
xchg
mov
and
cld
mov
aaa
fwait
xor
pop
push
roll
shufps
lret
test
mov
xor
sbb
lret
aam
sub
ja
push
sahf
das
cmpsl
push
popf
xchg
xor
pushw
add
fiaddl
aas
fidivl
mov
insb
jnp
cmp
fsub
daa
xchg
mov
add
jns
mov
cmp
mov
lcall
int3
popa
push
jmp
mov
aaa
push
arpl
sbb
cmp
mov
pushf
daa
negb
jbe
jle
or
or
cmc
addr16
sbb
movsl
mov
mov
ds
cld
or
iret
int3
ja
xor
push
popf
inc
xchg
xchg
ja
test
int3
inc
jb
jbe
cmp
jno
frstor
nop
outsb
lret
cmp
cmp
cs
ljmp
rcll
fwait
movb
cmpb
xchg
ljmp
dec
adc
dec
cmp
jae
imul
in
in
test
or
add
xor
aad
mov
jl
test
lea
sub
adc
sbb
pop
pushf
mov
test
ja
ljmp
cmpsb
ret
mov
xor
adc
or
adc
and
mov
shlb
mov
shrl
dec
pop
mov
sbbb
sti
cltd
and
pop
ficoml
pop
out
std
sbb
int
cmpsl
stc
cmp
int3
iret
cmp
loopne
cmp
adc
lock
sub
fidivrl
add
sub
xchg
cmc
xor
and
jecxz
mov
push
sub
test
ret
loopne
jmp
call
cltd
mov
mov
xor
rcl
shl
adc
cli
xchg
pop
pop
xchg
fidivl
sub
in
repz
inc
lret
sti
into
fwait
mov
mov
pop
xchg
daa
je
jmp
sub
dec
fwait
lods
stc
jle
mov
pushw
mov
js
fistps
nop
jg
test
pop
inc
testb
and
faddp
xchg
mov
xor
cmp
je
inc
cmp
mov
xchg
es
jo
pushf
dec
rcll
lea
test
or
pop
aas
xchg
rcrb
in
out
cmpsb
jae
adc
jle
jae
mov
fnstcw
or
aaa
fnstsw
mov
adc
xchg
je
movsb
int3
mov
sbb
fcmovnu
adc
sbb
sbb
xor
sub
ljmp
xchg
mov
shll
das
subl
loope
addr16
ds
inc
movsb
sbb
vaddsd
popf
xlat
mov
mov
jo
xor
imul
ror
dec
or
cwtl
inc
fld
popl
adc
mov
in
sbb
or
cmp
pop
mov
fsts
cmp
sahf
add
mov
shl
push
arpl
cmp
xchg
push
add
mov
jo
lock
aas
in
decl
sub
adc
ja
xchg
fimuls
insl
jmp
aam
cs
and
pushf
adc
mov
hlt
ret
out
and
cmp
out
xor
in
arpl
shrl
xchg
adc
popf
into
push
push
sbb
cmpsl
jnp
push
pop
mov
mov
out
push
mov
jo
loopne
xor
fistps
lock
xlat
std
movb
fwait
and
fwait
ret
leave
test
mov
subb
js
add
cld
sbb
mov
js
in
out
ror
cli
imul
ficompl
or
aaa
jo
mov
ret
jae
or
jae
out
or
mov
lods
pushf
jns
mov
fcmovb
popf
sbb
pop
sahf
aam
sub
imulb
sbb
aaa
cmp
outsl
add
pop
repnz
or
mov
inc
push
mov
pop
or
lea
rcrl
call
add
or
jg
lret
jo
pop
xchg
repz
imul
leave
mov
cmp
lcall
lret
jl
jmp
std
icebp
mov
sarl
or
inc
andl
jb
mov
inc
es
iret
push
insl
into
out
test
mov
dec
push
mov
xor
enter
in
fimuls
sub
jle
inc
in
clc
call
hlt
bound
add
push
cmpsb
add
dec
inc
jg,pn
ret
sbb
cmpsb
mov
movsb
fadds
xabort
lret
cs
jns
mov
ljmp
daa
cmp
push
mov
cmp
hlt
jl
push
repz
ffree
outsb
lret
xchg
scas
add
aas
das
test
mov
js
adc
daa
fbld
jno
sub
mov
ja
cmp
pusha
add
xor
and
inc
loop
adc
jns
xor
outsb
fcmovbe
or
mov
pop
add
add
xlat
ds
mov
xchg
imul
enter
inc
in
mov
movsl
xor
std
lcall
push
shll
lret
imul
inc
testl
aad
inc
or
ja
push
or
add
ja
in
push
xchg
out
test
dec
dec
arpl
cld
or
mov
adc
ret
push
mov
xchg
test
out
mov
mov
cmp
jle
orl
mov
sub
int
pop
rol
xor
ja
dec
xchg
add
cs
sbb
cmp
push
or
jae
cmpsl
xchg
add
cmp
jmp
aaa
shr
je
subb
pop
and
mov
sahf
mov
lods
xor
rorb
jecxz
js
inc
pop
sub
mov
xor
adcb
repz
dec
lret
shll
push
mov
pop
iret
mov
loopne
add
jle
lods
fisubrl
push
push
add
mov
ss
inc
cli
pop
ds
adc
enter
movl
cltd
mov
cmp
mov
orb
jp
adc
in
sahf
and
jl
insb
ss
inc
pop
xor
xchg
ja
sbb
scas
xchg
xchg
and
adc
mov
push
jnp
cmp
fnstsw
push
idivb
xchg
jg
push
mov
and
mov
and
sahf
cmp
push
xchg
cmp
test
pop
out
hlt
or
nop
mov
mov
push
mov
dec
popf
lea
xchg
in
xor
mov
push
jnp
jns
cmp
pusha
out
iret
xchg
xor
add
fcmovbe
push
mov
dec
jb
cmp
adcb
addr16
mov
and
cmp
jg
push
seta
pop
mov
push
int3
mov
inc
test
xchg
sarb
lods
xor
ds
and
aam
aaa
pop
push
mov
xchg
and
jp
enter
jg
rorl
push
adc
ljmp
shrb
dec
push
outsl
test
rcl
and
push
andl
into
and
shrb
inc
push
mov
out
sbb
xor
sbb
repnz
out
mov
call
lock
mov
jl
mov
mov
orl
lods
mov
push
mov
mov
push
cmp
sbb
cmp
xor
scas
mov
jmp
call
push
outsl
movsl
sarl
push
cwtl
mov
mov
xchg
movsl
fmuls
cwtl
in
adc
xchg
inc
rclb
rolb
rol
inc
mov
adc
or
push
lcall
jnp
xchg
push
iret
sub
ds
jb
out
dec
xchg
movsl
cmc
out
fcoml
mov
repz
fistl
mov
mov
push
lcall
scas
lea
push
ret
nop
sub
cld
es
sti
das
xchg
push
mov
and
jnp
inc
nop
frstor
or
add
repnz
sbb
cmp
xchg
mov
or
mov
cmp
mov
mov
jp
mov
xchg
cmp
outsb
xchg
mov
int
mov
cmp
bound
dec
lock
mov
pop
mov
jp
stos
mov
stos
mov
jle
mov
lock
les
movzbl
fmull
xchg
pop
dec
sbb
icebp
mov
xchg
jnp
mov
mov
dec
push
das
mov
jl
punpcklwd
outsb
mov
ficompl
jns
mov
push
jmp
add
inc
ss
mov
push
jle
cmp
dec
or
cmpsb
shl
adc
xor
or
dec
sub
mov
dec
inc
mov
mov
jmp
push
xchg
xor
add
xchg
mov
fwait
jl
data16
pushf
sub
mov
idiv
mov
test
sub
pushf
stc
pusha
jb
sbb
lahf
rcrb
cmpsb
cmp
mov
mov
inc
mov
mov
ja
push
jne
sbb
bound
test
jl
rolb
sbb
movsb
int3
stos
adc
lods
ret
lds
ds
movsb
rcrb
sbb
mov
mov
add
mov
xor
or
sbbl
test
lea
pop
pop
arpl
leave
sub
mov
adc
cs
push
sub
inc
insb
sbb
subl
gs
xchg
fsub
mov
adc
jp
add
int3
cmp
xor
clc
insb
dec
in
outsb
inc
or
xor
pushf
push
js
pushl
pop
add
jecxz
pop
or
orb
or
gs
jge
rclb
push
stc
sar
inc
mov
adc
adc
into
xor
jle
lahf
cmp
mov
mov
mov
scas
fimull
or
repz
fs
shl
imul
daa
mov
out
mov
push
dec
leave
add
push
aaa
mov
aad
stos
cmp
and
mov
ljmp
ljmp
test
pop
ret
mov
lret
scas
addr16
pop
push
mov
movsl
and
dec
xchg
xchg
push
push
or
repz
fcompl
mov
mov
test
pop
xchg
jb
cltd
scas
sub
test
rolb
lret
pop
das
xchg
insb
in
adc
xor
les
sahf
andl
cmp
pop
mov
adc
bound
inc
bswap
gs
xor
push
cmpsl
bound
ret
or
sbbb
pop
fistps
pop
xchg
xor
ds
out
into
js
sbb
mov
sbbb
pop
clc
xlat
cmpsb
jl
fsubrl
pop
sbb
cmc
nop
subl
cli
dec
xchg
aas
mul
stos
mov
mov
mov
xchg
pushf
sbb
add
or
mov
lods
mov
shl
dec
in
xor
pop
cwtl
mov
or
cmp
loop
fs
lret
iret
push
gs
add
and
dec
pop
jo
mov
xorb
xor
cmp
adc
lret
das
sbb
mov
push
pop
loopne
push
fildll
out
jge
insl
lret
xor
dec
add
mov
adc
push
jecxz
cltd
mov
adc
test
mov
in
jmp
fistps
mov
or
mov
and
out
out
roll
inc
ja
lea
cmp
mov
mov
cmp
test
fdivs
pushf
mov
pop
and
roll
mov
sbb
xor
rorb
outsb
mov
jbe
xlat
or
in
mov
mov
sbbb
sub
xchg
push
mov
dec
push
mov
rolb
fcomip
jnp
inc
sub
mov
mov
inc
fmuls
xchg
add
cmp
add
das
sbb
aam
addl
shrb
pushf
ficoms
popa
add
pop
push
movl
jno
or
movsl
imul
cmp
mov
cs
fiaddl
arpl
push
cmp
sub
xor
cmp
lds
push
fstpl
sub
les
orb
aaa
enter
inc
add
pop
sub
mov
adc
mov
movsl
cmp
inc
pushf
inc
movups
mov
or
fisttpl
fcompl
loopne
shr
aas
cmp
jge
dec
cltd
insb
mov
ja
xlat
pop
ss
mov
enter
and
push
aas
mov
rolb
push
pop
adc
dec
rorb
in
lcall
mov
pop
sub
xor
mov
cmp
pop
or
fsubl
inc
sti
repnz
mov
mov
and
test
out
idiv
cmp
mov
fstps
push
mov
dec
imul
add
dec
cmpsb
jle
xor
je
push
popf
in
shlb
pop
dec
jbe
je
mov
and
fwait
pop
or
enter
pop
icebp
dec
fisubl
sbb
insl
xchg
std
pushf
jge
push
pop
cli
mov
test
das
sahf
lock
cmp
mov
cwtl
test
daa
xor
adc
jg
mov
out
jl
fistps
or
mov
aas
inc
xor
fs
push
dec
pushf
lods
inc
jecxz
push
ljmp
or
sahf
loopne
aaa
xlat
flds
out
dec
mov
mov
mov
out
xchg
xchg
int3
js
adc
mov
dec
cmpsb
stos
out
lds
mov
test
mov
jl
cli
xor
push
negb
repnz
cmpsl
aad
les
adc
xor
push
inc
add
jmp
adc
out
out
clc
dec
ja
fcoml
incb
ss
mov
mov
or
subl
inc
rcrl
test
dec
xchg
xchg
mov
xchg
testl
movl
jle
mov
dec
add
dec
ficomps
cmc
add
and
pop
dec
jnp
mov
sbb
cmp
or
sahf
loope
pop
das
subb
adc
divl
jmp
mov
sbb
lods
les
adc
inc
dec
data16
cmpsl
mov
inc
scas
aam
ret
ja
xchg
jnp
add
mov
out
fcmovne
or
sub
sub
sbb
jle
dec
aad
and
jmp
arpl
popf
dec
sbb
popf
adc
and
or
adc
pop
sarb
xor
out
sbb
mov
push
mov
fistpl
pop
add
inc
and
les
sbb
sub
or
roll
es
sbb
test
cvtdq2ps
cmp
jo
iret
mov
fsts
stc
and
jns
push
ror
rclb
push
test
orl
inc
filds
fidivs
adc
sbb
sbb
iret
inc
sbb
push
mov
pusha
into
and
stos
adc
in
stos
fiaddl
pop
mov
cmp
and
movd
or
cmp
xchg
jmp
dec
test
cli
fists
mov
cld
dec
dec
fnstcw
daa
jg
bound
cwtl
leave
sbb
call
aas
test
scas
int
cmp
jp
push
or
xchg
jne
pusha
sahf
mov
cwtl
mov
pop
cmp
outsb
pop
or
leave
movsb
and
xorl
cmpsl
cmp
push
add
fwait
scas
out
or
inc
push
inc
mov
cli
xchg
dec
or
daa
clc
ret
into
mov
rolb
sub
out
push
cmp
sahf
fldcw
scas
shlb
leave
xchg
cmp
lret
push
les
push
out
dec
gs
mov
mov
jmp
xchg
xchg
in
sub
mov
cmp
sub
sbb
pop
dec
iret
cmp
inc
xchg
ret
jmp
mov
mov
pop
aas
ss
sub
dec
fcomi
iret
cmpsl
mov
push
jo
and
movaps
lock
pop
adc
fsubrl
cmpl
int3
mov
mov
sbb
mov
test
sti
mov
pop
pushf
or
test
sub
out
xor
mov
mov
dec
ss
int3
sub
fsubp
fmul
leave
cmc
cltd
cmp
cmpl
mov
clc
stos
popf
andb
popf
sbb
cmp
jl
cmp
mov
andl
sbb
outsb
dec
adc
inc
ret
cmp
or
add
cmpsb
mov
hlt
mov
mov
jno
lret
jns
jns
xchg
and
cli
push
iret
fsubp
xchg
test
inc
lret
mov
xchg
fcoms
decb
stc
push
xchg
scas
fisttpll
ja
pop
fwait
dec
shlb
cmp
push
mov
rcrb
leave
clc
pop
fdiv
xchg
je
fsubs
dec
dec
adc
repz
arpl
jnp
in
adc
sub
rolb
insl
dec
lds
lcall
sbb
inc
inc
inc
xchg
out
sub
jne
push
fisubs
es
xor
xorb
pop
jne
cmp
test
push
rcrl
dec
cmp
jp
or
lret
lds
insl
movsl
xchg
jg
lock
dec
movsl
adc
mov
or
aas
or
add
aas
pop
xchg
jne
mov
sahf
loope
ret
ss
shll
xor
out
jns
in
sahf
test
and
bound
mov
fldcw
jge
andl
leave
fidivl
out
and
scas
ljmp
dec
or
fsubl
sub
sbb
sub
xor
jne
cmpsl
cltd
or
cmp
psadbw
pop
mov
fiadds
pop
push
les
mov
push
push
lea
or
fimuls
pop
insl
jnp
or
mov
adc
jg
and
lahf
push
and
mov
jbe
repz
pop
sbb
adc
cmpsl
enter
push
in
xchg
sbb
mov
xchg
fildl
clc
jp
jl
int3
mov
lods
adc
stos
sbb
push
dec
iret
out
stc
das
mov
adc
fs
mov
rorl
cli
cwtl
testl
mov
jmp
sub
mov
xlat
sub
sub
daa
aaa
xchg
js
pop
mov
dec
enter
outsl
xor
fwait
and
dec
out
in
xchg
and
jg
lcall
mov
mov
xchg
test
dec
jae
adc
and
ja
std
shl
mov
lea
loope
add
lret
mov
jge
xor
push
lret
cltd
in
loopne
out
andl
xor
test
and
push
shl
pop
xchg
gs
push
adc
and
ljmp
and
iret
lock
dec
adc
out
pop
fwait
push
push
shlb
jo
repnz
cltd
cmp
test
fists
push
add
movsl
hlt
sbb
filds
nop
mov
sbbb
pop
inc
push
orb
ss
adc
xchg
loop
data16
out
mov
mov
loope
xchg
add
push
inc
push
mov
fisttps
push
add
jmp
adc
outsl
ds
cmp
sbb
das
dec
jl
lcall
xor
dec
jne
xor
adc
sub
js
mov
mov
dec
push
addr16
add
jmp
int
xchg
jecxz
inc
mov
popf
daa
push
xchg
jp
xor
push
cmp
pop
jbe
fimull
ret
cmp
icebp
mov
xor
xchg
pop
and
in
jno
insb
dec
pop
int
lahf
add
sar
or
clc
jl
enter
cwtl
loop
lret
inc
lea
dec
into
shrl
outsb
in
adc
popf
lcall
aam
jne
push
stos
addr16
mov
add
pushf
xor
ret
push
int
cmp
scas
jbe
lock
test
dec
mov
sahf
fldt
test
std
or
jae
stos
iret
leave
lds
xchg
insl
push
mov
pop
pop
add
inc
dec
out
ret
cmp
xor
lock
xor
fs
inc
je
add
iret
mov
and
jge
cmp
sbb
mov
cmp
mov
pop
clc
sti
jno
sti
xchg
mov
fcomps
outsl
jecxz
cmp
cmpb
xchg
test
and
xor
in
sahf
dec
pop
shrb
dec
pop
stos
mov
lock
mov
xor
andl
shll
ja
in
pop
add
cmp
jae
ret
addr16
mov
aam
ljmp
xor
call
xchg
in
push
pushf
pop
cmpsl
jb
out
outsl
push
pop
fcmovnu
out
xchg
cmc
sbb
add
adc
mov
fdivl
or
jbe
add
stc
inc
mov
or
push
fstps
add
cld
daa
jle
jmp
cwtl
xor
mov
add
lea
movb
sub
and
rcr
cli
inc
out
int3
insb
aas
sbb
sbb
xchg
sbb
out
inc
or
cmc
inc
out
mov
xlat
lret
pusha
gs
xor
or
insb
loope
mov
jge
or
subl
js
lahf
cld
sbb
aas
jge
clc
push
fisubrl
dec
rcl
mov
movsl
inc
add
pop
fidivs
sub
xchg
cmpsl
push
hlt
pop
add
std
lea
mov
js
push
xchg
daa
mov
std
fnsave
pop
lods
mov
push
repnz
adc
sbb
mov
jmp
push
dec
je
repnz
ror
ds
cmp
pop
jmp
adc
enter
cwtl
dec
cmpsl
outsb
inc
or
mov
fld
addr16
stos
iret
nop
jl
xchg
cs
pop
and
jbe
mov
stos
in
push
mov
mov
xchg
test
dec
push
fsubl
sub
mov
dec
or
push
nop
push
jecxz
popa
jp
fiadds
sub
ret
add
pop
push
rcll
sub
out
mov
xchg
scas
xor
ljmp
sub
lock
cmp
or
mov
xchg
mov
lcall
lea
lods
aad
rcrl
movsb
aas
jl
lods
mov
cs
and
je
add
push
out
pop
sbb
jnp
xor
and
pop
jmp
insl
or
sub
push
rclb
imulb
cmp
jns
test
shrl
leave
mov
adc
cmp
ud1
lret
rorl
jbe
repnz
xor
sarb
mov
push
sbb
add
or
in
jbe
jno
sarl
mov
orb
stos
pop
mov
stos
xor
dec
adc
pop
out
jnp
les
data16
mov
push
mov
xchg
add
test
xchg
cmp
cwtl
outsl
push
dec
mov
sahf
mov
je
xorl
adc
adc
pop
insb
mov
insb
out
add
mov
push
test
pop
sub
push
inc
aaa
mov
add
jne
sbb
clc
dec
movsl
dec
push
mov
pop
jnp
inc
jge
adc
push
outsb
lods
sahf
push
mov
xchg
iret
jo
add
rorl
jnp
loope
xor
jecxz
mov
js
mov
inc
out
push
bound
or
xor
lahf
incl
and
sti
and
adc
lahf
cmp
dec
xor
loop
arpl
adc
scas
mov
mov
shrb
pop
sahf
xor
cmp
sbb
addr16
in
inc
or
push
scas
sbb
aas
jl
sbb
push
xchg
mov
cmc
lcall
dec
insl
imul
int
test
sbb
xchg
dec
cli
lret
incb
cmc
js
fimull
inc
cmpsl
adc
xlat
jecxz
mov
rolb
repnz
lcall
xor
dec
lods
jecxz
ret
mov
mov
xchg
pop
popa
and
das
imul
bound
out
fcomip
cli
test
push
shlb
add
sahf
fucomi
push
jbe
mov
dec
bound
xor
mov
mov
sub
pusha
cmp
fdivrl
out
mov
fmull
jns
mov
pmaxub
adc
es
test
mov
cli
lods
repz
insb
or
shrl
cmp
fcoms
out
mov
push
mulb
in
lock
test
pop
fsubrs
dec
push
adc
cmc
and
gs
and
sbb
repz
hlt
adc
push
add
pop
insl
int3
push
inc
lock
pop
sahf
mov
cmp
mov
ret
push
in
jae
scas
popa
add
outsl
loop
lods
rolb
in
cs
mov
add
pop
mov
fucomi
push
pop
xchg
jns
mov
adc
std
jmp
inc
cmpsl
pop
adc
jae
stos
loopne
mov
loopne
mov
out
cmp
je
cmp
outsl
fstl
pop
je
scas
call
in
dec
push
aam
icebp
or
push
ljmp
ljmp
dec
das
sub
nop
dec
cli
mov
xchg
lea
mov
fstps
sti
cwtl
adc
jno
sub
sti
push
lret
xor
mov
add
push
mov
fnstcw
lock
jge
aad
mov
aam
mov
lods
inc
in
mov
xor
inc
and
mov
cmc
jle
mov
aam
jae
jo
or
cmpsb
in
jnp
mov
push
call
incl
cmp
mov
xchg
stos
jns
imul
imul
into
fs
test
sub
pop
mov
push
into
sub
or
arpl
mov
je
mov
cmp
push
fnstcw
scas
mov
jo
repz
add
xchg
and
pop
andl
adc
dec
fnstcw
in
outsb
das
mov
filds
je
in
mov
mov
test
mov
in
xlat
xchg
cmp
pop
sarb
sbb
mov
xchg
xchg
imul
ffreep
dec
sub
or
fmull
mov
mov
xor
pop
add
and
fcmovb
adc
push
push
mov
dec
add
cmp
pop
faddl
js
scas
mov
insl
int3
out
mov
insl
mov
lret
push
pop
pop
addl
out
xor
aad
pop
mov
jle
dec
sub
sbbl
jmp
scas
cli
test
cs
jbe
js
xor
push
jle
shrl
sub
or
dec
inc
dec
ss
cmpsb
inc
les
enter
push
push
hlt
jns
loopne
pop
mov
pop
xchg
xor
add
stos
test
xchg
in
xorl
cmpsl
jp
lcall
mov
pop
jae
pop
sbb
out
mov
jecxz
pop
nop
ret
pop
pop
aas
fadds
jns
lock
inc
enter
and
add
sub
je
lock
sub
mov
dec
add
insb
pop
inc
popa
cli
test
cltd
pop
jne
test
outsb
icebp
sbb
cltd
out
subl
loopne
test
dec
xor
das
aas
jmp
out
pop
jmp
and
mov
sarb
xchg
insl
jnp
out
js
cs
push
shl
sub
mov
out
inc
push
sbb
cwtl
push
fldl
mov
clc
push
in
divb
stos
mov
jne
push
sbb
call
mov
push
sbb
rcll
mov
and
jecxz
pusha
push
and
into
test
cmc
push
mov
jmp
lcall
outsl
pop
imul
mov
mov
stos
subb
lock
stc
pop
imul
cltd
in
and
aas
or
cmp
ss
mov
push
sar
dec
stc
xor
jno
inc
lcall
push
push
js
inc
jbe
test
ja
xchg
mov
bswap
cmp
scas
lds
mov
mov
and
std
outsb
ficomps
or
mov
out
roll
push
icebp
lods
mov
test
je
cmp
daa
push
jbe
out
adc
mov
fdivrs
div
pop
shl
mov
mov
jle
or
cld
inc
lds
outsb
dec
rcrl
inc
sub
fwait
mov
jno
mov
inc
or
xchg
das
cmp
xor
mov
inc
push
dec
cli
les
fs
pop
lds
xorb
push
xchg
pop
addps
negb
icebp
loope
rcll
sbb
push
adc
sbb
sbb
test
out
cmp
outsb
jmp
pop
xor
xchg
pop
sub
lods
cmp
adc
add
ds
stc
xchg
mov
in
xchg
sbb
adcb
push
mov
pop
mov
mov
pop
fwait
insl
movl
cmp
xor
jl
pop
es
addb
test
cmp
inc
mov
in
icebp
mov
int
daa
dec
aas
mov
mov
xchg
mov
inc
mov
inc
sbb
jnp
adc
lods
mov
xchg
ret
decl
int3
cmpsl
sbb
push
jle
cld
push
mov
mov
outsb
adc
xchg
mov
inc
pop
mul
sar
addb
jns
xlat
arpl
std
ds
push
sbb
aam
je
outsb
pop
int3
fistps
ret
xchg
lret
arpl
inc
cwtl
push
mov
lcall
dec
in
imul
es
pop
adc
or
xchg
test
cltd
push
hlt
push
out
sbb
addr16
or
mov
mov
sub
pushf
xchg
mov
adc
jnp
fists
xor
lods
mov
mov
movsl
popf
inc
mov
dec
gs
jno
pop
gs
icebp
fwait
lods
shl
or
fistl
in
mov
jge
iret
inc
mov
mov
jmp
mov
xchg
push
mov
cmp
adc
in
pop
xlat
jbe
in
lcall
push
cs
push
mov
and
inc
popf
push
adc
mov
adc
cmp
fstpl
sbb
inc
mov
cmp
jp
push
cmp
cmp
dec
pop
add
aad
icebp
jb
arpl
in
dec
testl
addb
mov
mov
or
xchg
mov
shlb
jnp
jae
inc
xor
sar
sbb
ja
lret
or
mov
in
push
je
jne
inc
cs
imul
sbb
lcall
sub
packssdw
cs
pop
push
mov
stc
adc
pusha
les
jle
xor
dec
jge
hlt
xor
comiss
lcall
mov
pop
xor
mov
test
adc
mov
inc
outsb
jae
pop
fidivs
mov
fbstp
cli
jmp
arpl
mov
call
loop
cmp
das
xchg
push
aaa
jmp
in
pop
push
bound
stc
dec
lods
cmpsb
xchg
call
xor
mov
cmpsl
movsb
xchg
test
push
inc
mov
lock
push
push
ljmp
jne
sbb
push
fildl
movsl
aas
mov
mov
bound
loop
out
xor
cmp
jg
stos
adc
xchg
xchg
test
add
dec
inc
shl
lock
or
pop
pop
push
lahf
mov
mov
daa
data16
xchg
pop
jmp
jnp
cmp
push
in
mov
sub
or
or
jno
lods
add
and
dec
in
mov
jge
cmpsb
push
insl
jp
push
dec
sahf
rolb
pop
into
jmp
jp
adc
lcall
mov
sub
and
push
imul
jno
icebp
cmp
mov
inc
add
sahf
cmpl
in
mov
jp
hlt
push
adc
aas
cmc
hlt
jl
test
push
sub
adc
cs
xchg
fimull
cwtl
loope
dec
cmpsb
scas
pop
loope
jns
jno
mov
sbb
ja
out
scas
and
ret
cwtl
sub
push
lret
std
shl
push
pop
scas
inc
push
dec
adc
in
xchg
cmpsl
dec
decl
xchg
fs
clc
bound
mov
iret
dec
jo
cmpsl
test
lods
sbb
push
mov
pop
push
adc
fxch
and
pop
and
mov
sahf
push
push
std
adc
cli
mov
and
enter
cltd
mov
mov
dec
mov
sub
and
sti
stos
lcall
add
int3
mov
mov
push
popf
pop
enter
pop
aad
scas
jg
or
hlt
leave
mov
stos
mov
leave
add
and
fld
cmpsl
push
mov
pop
scas
fsubrp
clc
dec
sub
test
sub
mov
add
mov
xchg
mov
pushf
int
xchg
xor
test
shll
test
jg
or
mov
in
or
lock
jg
nop
push
xor
les
orb
push
int
repz
std
int
jb
mov
sbb
shlb
jnp
orl
inc
cmc
cs
shlb
in
mov
jno
push
les
fisttps
sub
sahf
jno
daa
or
add
mov
or
xchg
mov
mov
cmpsb
cltd
rcl
add
out
cld
dec
shll
incb
adc
je
jae
cmpl
mov
sahf
aam
gs
inc
movsb
push
xchg
sahf
xchg
push
lahf
out
jno
pop
mov
clc
jle
sub
push
out
lahf
test
sub
push
mov
cs
jnp
insl
or
loopne
jge
in
fs
popf
cmpsl
or
push
popf
mov
imul
push
aam
fisubrl
addb
inc
outsl
push
xor
and
dec
jecxz
push
repnz
jge
loop
adc
lahf
mov
push
dec
sbb
mov
inc
mov
or
movsl
je
inc
outsl
jge
xchg
orl
jo
mov
aas
aaa
sbb
pcmpeqb
lea
rorb
ficompl
addr16
xor
adc
mov
stos
jl
in
fdivrs
lods
push
dec
imul
jno
pushl
xchg
call
adc
lret
je
xchg
scas
or
movsb
out
or
dec
inc
bound
pop
repnz
sbb
hlt
test
jl
adc
repz
push
loop
or
inc
std
mov
ret
push
outsb
arpl
aad
aad
add
fdivrs
jbe
leave
bound
imul
jge
pop
lretw
mov
inc
ret
jmp
test
call
std
lret
jmp
pop
mov
orl
sub
mov
aad
mov
add
cmpsb
add
inc
scas
adc
data16
and
mov
cld
insl
clc
iret
jb
fbstp
jp
outsb
cwtl
daa
xchg
push
xlat
mov
adc
add
pop
xchg
adc
daa
ja
outsl
test
mov
jle
test
pop
sti
insb
out
mov
lock
loopne
cwtl
cwtl
imull
mov
ror
imul
mov
fs
test
jge
stos
pushf
and
sbb
cmpsl
mov
das
je
jle
fsubrs
xchg
push
xchg
ret
pop
fcmovnb
or
fdivr
sbb
sahf
outsl
cmp
pop
sbb
lret
cmp
dec
dec
xor
xlat
fistl
loop
or
ficompl
xor
dec
or
jle
insl
or
adc
inc
mov
insb
or
jl
jl
fwait
rcr
push
xchg
dec
sahf
aaa
stos
push
jecxz
cmc
sarl
pop
pop
dec
mov
sahf
dec
push
in
mov
lcall
movb
inc
popf
fcoms
add
addr16
pop
or
insl
sahf
jge
and
pop
or
cmp
pop
adc
shl
pop
aaa
test
loope
xchg
inc
mov
ficoml
cmc
int
pop
jae
xchg
pop
lods
cmc
pop
cmp
push
adc
pushf
insl
inc
outsl
sarb
cmp
mov
mov
and
dec
stos
fcoml
shlb
daa
xchg
lock
adc
std
xchg
and
nop
mov
xor
test
leave
scas
outsl
stc
jmp
mov
dec
call
adc
addl
pop
mov
fadds
cld
repz
add
outsl
out
mov
push
daa
mov
inc
jae
sbb
xchg
popa
mov
inc
lcall
mov
push
in
xchg
mov
dec
adc
test
pop
adc
out
js
cld
std
and
mov
pop
jmp
add
or
hlt
jne
arpl
in
mov
inc
shll
and
sbb
push
mov
inc
pop
arpl
popa
lret
add
pushf
insl
jmp
xchg
hlt
pop
dec
mov
cltd
jmp
lret
daa
sbb
or
jne
xchg
jae
int
inc
rcl
or
dec
cmpsl
xchg
imul
ljmp
dec
je
xchg
push
sbb
xlat
outsb
scas
gs
jne,pn
enter
movsb
xor
jl
and
movsb
nop
cmp
shrb
push
xchg
or
xor
lret
mov
inc
xchg
fwait
lock
in
mov
lahf
outsb
aad
lcall
lock
gs
jbe
lahf
in
imul
lret
cmpsb
xor
xorl
lods
mov
or
mov
repnz
mov
std
push
outsl
push
adc
inc
fwait
nop
sub
loope
adc
sbb
neg
pop
jno
or
and
mov
insl
jns
stc
call
mov
fimull
fldt
sub
dec
fistl
lahf
dec
mov
or
andl
mov
cltd
sub
pushf
push
aaa
movsb
xlat
mov
sub
lds
test
mov
adc
stos
xlat
les
aam
movsl
hlt
vmovapd
iret
push
xchg
add
cmpsb
orl
mov
arpl
in
inc
xchg
cmp
ficoml
mov
pop
xchg
lock
pop
pushf
out
jnp
and
nop
subb
ljmp
cmp
xchg
mov
and
dec
lock
pop
rorl
sbb
test
jge
stos
mov
test
test
fadd
lock
iret
xor
sub
add
pop
mov
js
or
cli
repnz
pushf
dec
loope
dec
mov
shlb
lcall
sbb
int
cmpsb
pop
push
xor
xchg
les
mov
test
data16
dec
sub
mov
and
add
mov
std
stc
mov
rolb
cmp
orb
lea
mov
cli
xor
mov
jecxz
jo
icebp
stos
movzbl
movsl
adc
sbb
jb
add
imul
imul
xchg
sbb
xor
enter
push
jns
add
outsl
movl
lea
mov
jno
je
inc
fs
fsubs
adc
cmp
shll
fidivrl
out
pop
mov
scas
jecxz
and
movsl
or
movsb
jl
out
sbb
std
add
mov
in
add
mov
cmpsb
mov
add
cmpsl
mov
outsb
lcall
or
js
mov
call
lret
movsl
push
mov
mov
cmpsl
or
inc
ret
cmp
inc
sbb
push
int
aad
js
xchg
bound
jecxz
xor
mov
outsl
jo
dec
std
lcall
push
mov
outsl
sub
cmpsb
xor
js
dec
or
cmpb
ficoml
sti
push
divb
jg
in
pop
mov
orb
enter
xor
jno
push
scas
cmp
mov
or
pop
push
popf
into
pop
jle
or
inc
in
in
xchg
mov
scas
outsb
lods
sub
xchg
add
outsb
inc
je
cmpsb
mov
popf
fldcw
mov
movsb
mov
call
dec
cmpsb
pop
decl
push
pop
imul
cmpsb
and
add
push
xchg
inc
in
or
inc
lock
imul
nop
aad
cli
push
cmp
xor
push
scas
inc
adc
sub
jg
cmp
xchg
mov
lods
movsl
xchg
lods
std
mov
inc
mov
pop
stos
dec
jns
je
pusha
popa
lods
lahf
pop
adc
shr
outsb
xor
mov
js
jp
push
mov
adc
sar
test
push
push
and
and
repnz
orl
xchg
loop
iret
mov
and
neg
mov
je
dec
mov
cmp
jl
mov
call
scas
test
stc
lods
pop
pusha
cmp
loop
loope
inc
lods
sbb
xor
push
xor
fs
pop
mov
lds
xchg
mov
pop
fldenv
in
jmp
xor
lret
push
xchg
mov
and
sub
push
jg
scas
or
aas
sbb
sbb
sbb
pop
cs
test
push
repnz
xor
xchg
mov
pusha
imul
mov
bound
push
jmp
inc
mov
mov
mov
add
std
xchg
int
les
sbb
mov
jbe
out
and
scas
out
shlb
cmpsl
int3
into
jo
add
xchg
je
jns
adc
or
or
loope
mov
cmpsl
lea
hlt
outsb
jl
or
mov
loop
add
pop
cli
popa
scas
sbb
pop
mov
inc
outsb
push
jmp
and
dec
sub
or
gs
pop
test
adc
mov
jl
fwait
jno
xlat
cmp
or
mov
movsl
mov
pusha
enter
rcl
jg
ds
mov
sbb
inc
and
cmpl
mov
in
cmp
das
lret
sbb
sub
clc
popa
outsb
jl
mov
inc
mov
clc
imul
cmp
push
mov
cmpsl
das
clc
mov
jne
ds
jmp
pop
pop
fisubl
imul
push
or
mov
scas
mov
test
iret
jecxz
cmpb
cmp
cli
mov
pop
sub
in
fisttps
push
xor
inc
push
lret
dec
push
mov
cmc
jno
sub
xchg
mov
scas
fdivrs
add
popa
dec
xor
add
xchg
das
fisttps
js
jbe
lock
dec
adc
cld
add
les
sbb
xchg
jge
sahf
and
clc
adc
rcrl
mov
sbb
notl
shr
test
jg
xchg
mov
sbb
xor
sbb
mov
stos
sub
push
movb
rolb
mov
test
mov
fisubs
stos
fldenv
xchg
stos
out
sub
jle
cmp
mov
dec
jae
pop
ficompl
cmp
leave
dec
jae
lods
mov
and
in
mov
pop
push
fs
in
in
mov
mov
xchg
daa
mov
fmull
stc
sbb
fidivl
xchg
fwait
inc
inc
enter
and
rclb
add
jns
pop
pop
push
lret
mov
lods
out
int3
sub
xchg
mov
add
sub
sahf
imul
shl
mov
lahf
jae
dec
mov
mov
ss
loopne
xchg
cmpsb
jge
int3
mov
in
or
lcall
test
pop
scas
les
lods
cmp
inc
cmp
inc
sar
mov
push
popa
movsb
imul
dec
fucomp
mov
fstpl
dec
push
cmpsb
ss
add
into
and
out
inc
ret
sbb
scas
repz
jno
mov
cmpsb
fcmovnbe
sbb
cmpsl
orb
and
nop
push
outsl
dec
adc
popa
pop
cwtl
dec
lret
jne
imul
or
sbb
sbb
mov
jmp
insl
inc
aam
adc
repz
fsub
mov
xchg
and
leave
rcrl
loopne
shr
inc
jno
xorb
ss
lret
insb
stos
cmpsb
inc
cmp
adc
and
stc
into
sub
mov
mov
stos
adc
std
out
cmpsb
mov
pop
add
add
lret
nop
outsb
aas
push
popa
outsl
test
push
inc
dec
clc
fcmovnbe
xchg
leave
adc
test
aam
sub
add
cmp
push
push
or
out
outsb
addr16
cmp
enter
mov
dec
mov
lret
push
mov
loope
jl
cmp
xor
jbe
inc
pop
mov
mov
dec
mov
mov
decl
or
mov
jecxz
mov
add
push
cmp
or
mov
push
pop
fwait
ljmp
add
dec
repz
lock
jle
andl
sbb
clc
push
outsb
aam
adc
xchg
mov
sub
test
and
iret
xor
dec
popa
aam
fidivs
mov
das
out
rcrb
and
jo
cmp
cs
push
sub
or
bound
inc
imul
iret
lahf
lret
shlb
inc
push
dec
bswap
aam
into
mov
imul
mov
dec
loop
fidivrs
enter
lret
call
testl
cmp
loop
js
insl
inc
mov
jl
leave
and
jecxz
push
cmp
js
loopne
nop
repnz
pop
sbb
xchg
sbb
mov
rorb
add
add
mov
mov
add
pop
jne
mov
sahf
test
cmp
inc
jae
and
jnp
mov
lret
and
call
lods
push
dec
mov
and
xchg
je
pop
inc
testb
and
loope
or
fnstcw
dec
push
in
test
cmp
jge
loope,pt
mov
xor
xchg
nop
outsb
jnp
adc
cmp
cmpsb
lods
pop
dec
inc
js
or
adc
sbb
negb
andb
push
or
push
pop
aam
pop
cwtl
lock
fnstcw
repz
pop
daa
mov
ret
push
sbb
mov
xchg
adc
dec
jle
push
and
push
in
jg
aas
cwtl
cs
pop
sub
lods
shr
imul
push
and
out
aam
inc
sti
adc
mov
call
mov
pop
mov
mov
ret
inc
and
cld
dec
sbb
stos
adc
mov
mov
aam
inc
dec
dec
addr16
adc
add
pop
dec
lds
ds
fwait
adc
fbstp
nop
outsl
mov
inc
stc
and
adcl
cmp
dec
jno
mov
into
out
in
jbe
gs
loopne
jo
fsubrs
shrl
das
inc
sti
mov
mov
mov
pop
addb
mov
inc
negl
xchg
pusha
pop
jno
cli
and
or
fmuls
shrl
popa
call
add
inc
aas
rorl
fstpt
mov
aas
cmpsb
cmp
mov
leave
jae
xchg
fcoms
mov
in
and
cs
imul
scas
faddl
and
xor
push
jecxz
cld
orl
or
pop
jle
fisttpll
mov
push
sub
outsb
or
sbb
loop
push
lcall
lahf
out
dec
push
jae
xor
stos
push
aas
adc
roll
js
loope
add
add
push
pop
stos
es
push
jae
fsubl
dec
in
fisttps
push
aaa
xor
cmp
roll
sub
ja
push
push
dec
fisubs
adc
shl
sub
or
cmc
imul
cltd
xchg
adc
sub
xlat
lods
dec
stc
push
pusha
cwtl
jne
mov
out
sahf
dec
mov
cmp
outsb
jle
popa
fistpl
pushf
ficoml
nop
clc
or
test
sub
test
addr16
cmp
dec
adc
or
add
mov
jle
mov
adc
popa
add
or
mov
sub
mov
xchg
clc
push
xchg
in
testl
inc
stos
lret
or
out
stos
rolb
pop
sub
xor
jp
addr16
mov
push
sbb
loopne
sub
das
scas
push
mov
jp
mov
lods
movsl
ss
push
cwtl
les
pop
mov
fmull
outsl
mov
insb
rorb
cwtl
popl
xchg
ja
pop
jmp
iret
mov
and
dec
cs
sahf
inc
mov
xchg
adc
pop
adc
loopne
out
cltd
mov
sub
or
daa
xlat
cld
rorb
mov
cvtdq2ps
mov
mov
int3
xchg
lods
mov
push
add
sbb
pop
jne
push
sti
add
aad
add
das
cs
shlb
es
mov
push
jmp
ret
scas
aaa
cmp
cmp
stos
fisubrl
sbb
mov
in
or
sahf
or
inc
arpl
xor
mov
or
ficoml
xor
lcall
int
xchg
xchg
xchg
fisubl
mov
popa
jnp
lea
aad
pop
jle
clc
insb
fpatan
icebp
ljmp
lret
adc
movsb
push
sbb
mov
cmpsb
aaa
xor
sbb
push
lock
cld
out
push
mov
cmc
and
hlt
pusha
jae
out
xor
jle
movsb
hlt
leave
mov
lcall
frstor
jmp
jne
add
aad
inc
add
mov
es
mov
add
cmp
bnd
mov
inc
call
push
push
cwtl
push
divb
movsl
and
push
test
ret
jecxz
mov
mov
ljmp
xchg
fstps
iret
pop
in
fsubp
mov
push
sub
sub
fsubr
sub
sub
daa
pop
push
sbbb
adc
mov
mov
dec
inc
sub
in
clc
shlb
pop
add
lods
mov
int
sahf
out
into
adc
xchg
xor
mov
dec
mov
push
push
nop
push
dec
pop
cmp
adc
jo
pop
cmp
aaa
mov
iret
add
and
jecxz
mov
mov
mov
adc
pop
ret
pop
das
enter
testl
ja
add
iret
idivb
repz
rcrl
orb
out
inc
xchg
in
idivl
mov
push
xor
out
adc
push
lock
xchg
nop
inc
and
fldt
dec
and
mov
jl
pop
shrl
xchg
or
stos
out
loop
jbe
popa
popa
xor
into
cs
in
cli
aam
xchg
mov
jo
mull
fbld
xchg
jg
jp
cltd
push
test
sbb
adc
pop
loope
adc
mov
jl
shr
cmp
mov
fadds
cwtl
inc
adc
pusha
push
mov
add
jmp
push
dec
pop
adc
xchg
xchg
loop
xor
mov
jecxz
mov
mov
jno
xchg
insb
mov
push
aam
cmp
int
xor
stos
fldenv
inc
xor
pop
cmpsb
jo
loope
outsb
pop
pop
loope
jmp
inc
in
mov
cmp
and
arpl
insl
out
sbb
jno
stos
inc
movsl
xlat
sbb
pop
mov
sub
repz
push
mov
push
dec
popf
call
sbb
scas
gs
and
pop
pop
ficomps
mov
repz
dec
rolb
test
sub
insl
mov
and
add
clc
xchg
cmp
xchg
aam
add
push
js
sub
xchg
aam
or
xor
push
or
mov
adc
loop
xchg
jmp
push
loope
jbe
mov
jae,pt
out
pop
leave
push
adc
sti
pop
xchg
lock
xchg
es
dec
jmp
popl
mov
fadd
and
xor
inc
pop
rorb
shlb
int
or
mov
scas
mov
add
xor
es
test
mov
add
jbe
inc
sub
in
push
cmp
xchg
out
lret
nop
xchg
clc
fstp
xlat
pop
xchg
out
jl
add
xchg
lock
xchg
out
push
xchg
xor
adc
cs
fwait
xlat
test
outsb
je
and
fistpll
inc
es
pushf
das
push
sbb
xor
xor
pop
lcall
ds
leave
xchg
test
jo
sbb
xor
xlat
inc
mov
mov
int3
cmp
dec
cmp
cli
xchg
out
inc
pop
and
mov
push
and
jl
sub
arpl
imul
mov
xor
pop
in
jmp
and
jge
pop
add
push
cwtl
dec
movsb
cld
cmpsl
sbb
sbb
xor
stos
mov
aad
push
movsb
add
test
sub
jnp
lret
out
insb
notb
nop
jle
xor
sbb
aam
ljmp
mov
js
and
mov
or
lock
dec
fsubrs
push
mov
or
pop
cmc
xchg
xlat
xchg
xchg
ret
js
adc
xchg
insl
decl
fisubs
in
and
outsb
lahf
mov
jbe
cmpsb
aam
adc
push
jb
inc
call
dec
push
dec
sbb
and
mov
or
sub
push
fistpll
push
test
or
mov
inc
clc
std
lock
aad
push
outsb
and
inc
jbe
inc
sbb
test
jnp
movsb
inc
mov
cmp
mulb
push
xor
test
push
lea
jb
hlt
xchg
inc
je
cs
pop
fsts
mov
jo
insb
and
mov
xchg
aaa
je
jne
in
iret
push
or
subb
jae
pop
mov
or
mov
dec
sbb
sti
sarl
and
fsub
inc
in
mov
xchg
push
jne
xchg
adc
xchg
push
cmpsb
sbb
pop
arpl
cmpsb
pop
xchg
pop
popa
test
mov
ret
in
pop
push
jne
pop
cmc
jle
inc
je
add
and
test
aad
sahf
loopne
inc
xchg
pop
inc
add
mov
adc
mov
pop
push
xchg
dec
mov
fcompl
mov
movsb
les
and
mov
and
cmpsb
mov
iret
jae
sub
mov
dec
sub
daa
ret
iret
loopne
addr16
les
loop
ds
mov
leave
in
arpl
shl
and
push
dec
jp
cmpsl
xchg
push
add
out
xchg
jl
lods
addr16
aas
ja
popf
les
insl
faddl
push
cli
je
xchg
cmp
pop
sahf
inc
push
fcomps
aaa
mov
sbb
or
js
fimuls
dec
fdivr
xchg
outsl
push
lea
pop
sbb
or
test
sbb
mov
out
shrb
mov
jmp
icebp
mov
push
stos
jbe
jae
and
sub
insl
xchg
inc
in
outsb
cmp
repnz
or
jb
fcoms
mov
gs
leave
xor
nop
push
mov
enter
mov
mov
inc
mov
rorl
pop
test
jge
fsub
pop
jo
or
push
xchg
xor
and
lret
pop
data16
inc
cmc
movsl
jnp
daa
xchg
mov
out
and
cld
jno
test
and
jb
mov
mov
dec
xor
lock
push
ss
insl
ljmp
or
mov
sbb
outsl
or
mov
jecxz
adc
ret
out
add
insb
ret
or
inc
es
test
or
dec
in
mov
shrl
jno
cld
into
jne
and
ljmp
jne
jle
pop
or
and
in
or
stos
mov
xor
fldl
inc
scas
pop
cmp
xchg
mov
add
in
das
sbb
and
sbb
mov
dec
fcomps
popa
mov
fsubr
cld
insl
jb
cmp
push
xor
mov
mov
mov
dec
mov
push
in
out
test
and
shll
andnps
mov
ss
test
outsb
push
jnp
stc
popf
lret
popa
pop
dec
jbe
adc
cmp
xor
lock
sub
out
call
add
jns
fs
cli
mov
movb
add
in
sbb
inc
cmpsb
push
cmp
and
fcomps
mov
xor
cli
dec
adc
xor
sbb
inc
gs
and
adc
mov
adc
int3
fsubrs
pop
loope
cmp
pop
pop
aad
mov
iret
pop
fstpt
xchg
and
fs
int3
ss
xchg
cmp
fimull
insb
out
mov
arpl
in
inc
mov
sbbb
mov
jl
xchg
sub
push
cltd
sbb
dec
lret
pop
mov
jo
dec
sub
and
aam
adc
enter
xor
jle
and
add
dec
cmc
andb
xchg
clc
add
xor
repz
cmpsl
mov
pop
pop
jge
out
movl
inc
ret
cmp
sub
jg
pop
xchg
aam
in
iret
inc
inc
xchg
push
and
ret
xor
push
pushf
cmp
out
sbb
orl
lret
mov
mov
jl
pop
pop
jns
in
adc
rclb
jl
in
mov
pop
je
pop
jmp
sahf
sub
cmp
aad
and
int
lds
and
in
outsb
sbb
aaa
push
mov
es
pop
mov
sbb
shll
lods
xchg
mov
pusha
jge
cli
adc
jmp
rolb
adcb
jecxz
sbb
imul
orl
jecxz
push
insb
insb
or
sub
or
mov
and
xchg
cmp
nop
push
cmp
push
adc
das
ret
cmc
add
lock
add
lock
mov
lcall
fildll
add
push
inc
in
scas
adc
insl
rorb
dec
gs
and
or
aam
mov
sbb
or
mov
jl
pop
cmpsl
jnp
xor
xchg
xchg
push
jo
cmpsb
js
inc
mov
pop
push
jl
je
rcrb
int
mov
adc
mov
movsl
faddp
cmpb
or
mov
imul
pop
sbb
or
fisubs
jl
push
movsb
test
jnp
dec
ss
scas
sub
cmc
adc
xor
test
mov
popa
test
fisubs
out
xchg
or
shlb
dec
add
inc
mov
pshufw
mov
sahf
decl
cmp
test
stc
mov
mov
call
add
mov
mov
out
jl
orl
mov
xor
mov
mov
std
leave
jnp
push
mov
mov
mov
dec
mov
xor
das
les
lods
cmp
dec
jno
add
jae
aad
mov
int3
lock
addr16
aas
cld
and
inc
lds
add
add
lods
jecxz
inc
jae
cmp
jp
lea
popf
jecxz
xor
push
or
xchg
incl
repz
push
jae
test
sbb
in
mov
add
mov
lret
mov
mov
and
sarl
push
in
xlat
clc
mov
clc
xchg
jne
push
jno
add
enter
inc
dec
inc
mov
call
lcall
rolb
or
push
push
jo
inc
pushf
out
inc
push
pop
jbe
mov
add
pop
push
leave
loope
outsb
push
mov
sbb
push
cmp
mov
jge
sbb
inc
dec
sub
inc
xchg
sbb
std
shrb
aas
stc
idivb
xchg
mov
sbb
lcall
fs
sbb
jg
sahf
iret
add
push
mov
mov
lock
fisubrs
test
push
adc
dec
or
adc
mov
xor
cmpsb
ret
shl
cmpsl
mov
gs
lahf
insl
mov
imul
in
inc
aad
xchg
mov
jo
jp
mov
push
scas
mov
faddl
or
bswap
mov
in
lahf
cmpsb
loopne
xchg
fdivs
mov
lret
adc
push
repnz
in
aas
sub
divl
xor
std
out
sbb
sbb
add
jo
inc
push
pshufw
in
in
sti
lret
pop
test
xchg
mov
jl
pop
mov
push
jg
dec
jmp
fmulp
cs
ret
popf
xor
sbb
popa
or
push
dec
xchg
popa
sub
ljmp
mov
loope
movsb
fimuls
je
push
and
inc
dec
mov
icebp
lea
scas
stos
jb
inc
dec
repz
and
push
adcb
aas
jp
adc
popa
imul
lret
dec
dec
push
imul
inc
adc
mov
aad
scas
mov
sbb
imul
stos
decb
cmp
dec
aad
push
cmc
enter
dec
pop
or
jne
push
pushf
fsubrs
xchg
repnz
jecxz
xlat
cmpb
fsubrs
xor
jge
xchg
cld
mov
pop
cltd
inc
ret
mov
cmpb
xor
cli
cs
add
adc
jno
iret
pop
pop
jg
and
xor
or
inc
pop
repz
mov
addl
cmp
and
add
mov
push
loope
iret
adc
or
mov
xor
push
cmpsl
pushf
cmp
cwtl
lret
je
jb
ljmp
and
in
dec
jle
push
or
cwtl
pushf
adc
loop
add
stc
mov
xor
sub
gs
mov
xchg
out
pop
mov
outsb
sbb
sbb
cwtl
lahf
mov
jnp
add
xor
jb
pushl
inc
roll
inc
insb
popf
jg
incl
das
lods
xchg
cmp
sub
movsl
add
inc
push
adc
fcoml
les
jbe
dec
sbb
xchg
dec
dec
push
sub
scas
hlt
jmp
push
scas
mov
out
mov
lahf
inc
xor
bound
iret
cltd
es
or
pop
test
mov
rcl
inc
sbb
inc
jo
shll
push
sbb
sub
jns
and
cwtl
lods
or
out
xor
loope
push
mov
outsl
dec
inc
inc
repz
inc
into
dec
inc
jae
lock
xor
ja
cmp
je
xor
ljmp
jbe
xor
out
fs
xchg
nop
movsl
inc
dec
lret
adc
dec
lods
jl
sub
pop
inc
mov
xlat
in
or
xchg
fdivrl
pop
daa
cmpl
adc
sbb
jmp
outsl
ss
subb
pushf
lods
cltd
or
mov
les
gs
repnz
mov
imul
push
lret
mov
cwtl
and
xchg
loop
adc
jp
fwait
sbb
dec
mov
xchg
aas
push
aaa
cmp
aaa
xchg
pop
jmp
arpl
inc
cmp
cmp
rolb
fwait
add
std
or
fistps
xor
dec
sub
lcall
xchg
fcoml
inc
jne
lea
xor
mov
sbb
dec
or
mov
dec
daa
imul
repnz
cmpsl
lahf
int
addr16
mov
xor
sbb
mov
repnz
dec
jge
fadds
fdivrs
lret
jae
insl
pop
andl
gs
pop
scas
inc
into
sub
push
add
rorb
jecxz
jnp
pop
dec
mov
mov
insl
mov
icebp
mov
sbb
call
das
push
pushf
call
daa
aad
dec
and
or
mov
add
xchg
fcomip
testb
mov
push
push
mov
pusha
pop
adcl
xchg
jo
mov
cwtl
fcoms
test
add
sbb
pop
lcall
cmp
pop
int
iret
loope
sbb
outsl
cmc
add
test
jb
adc
mov
loop
popf
dec
popf
pop
lret
fidivl
push
int
adc
outsb
insb
ret
mov
jno
out
push
mov
cmp
repz
loop
sbb
std
add
std
mov
dec
push
lea
loop
ret
cmp
leave
jecxz
fdivs
dec
jae,pn
fcmovne
loope
or
and
xor
sub
xchg
pop
pop
icebp
adc
decl
mov
addr16
loope
inc
ret
pushf
and
je
and
iret
fwait
lods
mov
mov
cmc
inc
lea
daa
in
add
push
inc
mov
dec
lods
cmp
repnz
mov
mov
lods
adc
add
dec
jnp
lods
enter
and
pop
shll
div
inc
pop
cwtl
outsl
push
xor
js
rol
es
sub
into
and
jns
pop
cltd
cmpsb
jae
test
push
add
cmp
xor
cmp
popf
mov
cmpsl
out
or
lret
inc
and
jp
sbb
mov
ja
out
lods
pop
mov
xchg
jp
pushf
mov
or
aam
mov
mov
push
cvtdq2ps
inc
cmpl
mulb
or
pop
lods
inc
cltd
xchg
mov
fcoms
into
push
pop
inc
rorb
in
pop
dec
fnstcw
sahf
pushf
gs
add
pop
jae
ja
idiv
mov
inc
std
mov
add
insl
xchg
cli
aaa
insl
int3
push
aad
mov
setnp
cmc
fsub
mov
adc
incl
adc
push
add
test
xchg
xchg
test
jno
out
push
jno
pop
xor
out
and
mov
insl
daa
pushf
pop
sbb
add
arpl
pop
aas
in
movsb
ss
fcomip
mov
enter
cmp
mov
xchg
sub
rcr
lea
xor
jl
bound
sbb
adc
mov
add
aad
push
jmp
subb
push
into
decl
test
cmp
push
mov
cs
mov
mov
sti
and
jnp
rep
xchg
push
repnz
pop
pop
outsl
fisubl
cmpsl
popf
movsl
mov
test
aas
sbb
mov
mov
jae
push
push
ror
cmpsb
jno
rol
mov
cmpsl
out
aam
fnstsw
rolb
mov
cli
pop
xor
xchg
cltd
arpl
sbb
mov
sbb
mov
inc
push
xchg
jne
jmp
aad
dec
push
adc
jg,pt
and
fcompl
test
lds
add
aam
or
daa
lock
sbb
or
and
test
xchg
inc
popf
cmpsl
outsb
ds
outsb
sub
stos
outsb
and
jmp
jge
pop
les
dec
aas
ljmp
lods
fdivrs
fnstenv
cs
lret
lds
mov
out
add
sbb
mov
jne
adc
cmp
ret
test
clc
pusha
lock
sbb
add
or
lret
shrb
aaa
fmull
or
arpl
pop
mov
push
lods
mov
addr16
mov
pop
int
jb
cmp
ss
stos
ljmp
or
lock
pop
jo
adc
std
ja
pop
nop
sarl
xor
test
mov
jnp
lret
push
jns
sahf
adc
hlt
mov
sub
adc
les
mov
pop
fwait
mov
push
pushf
dec
lods
mov
popf
rcll
int3
mov
scas
lock
mov
inc
dec
mov
test
int3
jbe
sub
outsb
sbb
repnz
test
std
subb
inc
sbb
cli
mov
dec
movsb
adc
or
push
pop
cmpsb
pop
mov
and
and
pop
loop
or
cli
inc
aad
pusha
into
mov
push
push
hlt
orb
xchg
sub
scas
sbb
rorb
fbstp
pop
inc
mov
mov
mov
scas
aaa
cmp
or
movsb
pusha
push
pop
xchg
test
fs
scas
pop
jno
inc
hlt
ds
xchg
pop
clc
jp
repz
xor
xchg
lods
sbb
mov
mov
mov
aam
repnz
stc
mov
pop
jne
shll
or
adc
repnz
mov
js
ds
mov
mov
mov
hlt
push
mov
inc
add
mov
sti
dec
das
mov
loop
fcomp
dec
push
js
sub
das
adc
les
rorb
mov
jg
imul
loop
js
pop
jae
arpl
or
das
fwait
cmpxchg
jno
push
pop
mov
lret
enter
in
fs
mov
in
cmp
jnp
cmp
mov
push
ja
xchg
mov
aas
out
mov
dec
lds
subl
lcall
in
sahf
or
mov
pop
push
pop
lock
or
adc
inc
addr16
sub
repz
mov
push
sbb
lcall
mov
xchg
adc
jne
add
sub
in
stc
xchg
jnp
lods
and
jg
adc
fwait
push
fdivl
push
sub
das
hlt
shl
sbb
lcall
and
fwait
mov
orl
sbb
in
cltd
das
pop
gs
push
cmp
ret
insl
add
ds
pop
cwtl
aas
jo
add
mov
xchg
and
sub
jne
or
out
js
push
mov
iret
and
mul
iret
shlb
push
in
dec
dec
add
test
nop
pop
push
fistpl
push
xchg
mov
rclb
and
ret
cmpsl
test
cwtl
mov
mov
mov
lea
add
lods
int3
repz
insb
test
jle
addr16
jne
mov
scas
fwait
mov
das
pop
lock
mov
pop
pop
das
push
xchg
push
cli
ss
cld
in
inc
mov
movsb
cmp
sahf
push
decl
lea
xchg
arpl
popf
add
jl
fnsave
jb
cli
xchg
cmp
cmp
push
add
sti
fsub
dec
add
push
int
mov
push
test
push
lock
outsb
enter
push
and
ja
frstor
pop
ljmp
lret
fsts
in
rorl
js
int
cs
sub
js
lret
ret
lods
add
leave
call
daa
add
mul
sar
imul
xor
loopne
je
add
stc
movsl
xchg
mov
push
and
lahf
cmpl
sarb
test
ss
xchg
adc
mov
aad
push
and
pop
xchg
jp
aam
xor
test
mov
enter
xchg
push
into
dec
mov
jne
sbb
sub
loope
out
xor
mov
or
inc
jns
sbb
mov
cltd
xchg
shrb
dec
jb
outsl
sbb
adc
xor
push
vprotb
push
jg
pop
js
das
shrl
mulb
loope
jno
cmp
fcoml
lea
repnz
adc
daa
xor
jmp
lods
cmpsb
push
jle
pop
jecxz
mov
inc
and
pop
filds
aad
mov
inc
into
mov
and
jnp
test
shrd
cmp
bound
cmp
test
addl
dec
int3
cli
push
out
xchg
cli
lahf
movsb
and
loopne
xchg
pop
and
mov
push
pop
and
movsl
jae
inc
push
insl
popfw
mov
mov
pop
icebp
jno
jl
pop
inc
xchg
add
jp
out
lcall
out
cmc
je
dec
insl
xor
xorb
sbb
or
jbe
inc
xor
in
arpl
popf
jp
shlb
jmp
lret
mov
jle
into
pop
fdivl
pop
mov
xor
nop
sarb
les
mov
clc
add
cmp
leave
lods
sub
insl
shrb
mov
add
into
mov
xor
xchg
mov
xor
in
lret
jge
addb
jecxz
or
fsubrs
cmp
in
ljmp
xchg
loop
movsb
mov
add
xchg
fldl
mov
jecxz
pop
bound
cmpb
mov
aam
inc
sub
bound
dec
push
inc
sti
mov
xchg
add
fstpt
and
rol
inc
pop
adc
or
jno
xchg
inc
ret
adc
aad
inc
repnz
out
inc
inc
roll
cmp
scas
mov
fwait
dec
insb
mov
jns
xchg
leave
xchg
sub
fists
imul
clc
sub
sbb
in
jbe
mov
cmp
cmp
pop
fstl
fmul
lock
data16
mov
add
pop
scas
jns
jp
loopne
xor
aaa
sub
dec
xchg
or
int
mov
mov
xor
es
mov
pop
fmul
test
or
mov
jge
lods
cmpsb
fwait
imul
push
add
aaa
fwait
das
nop
loop
jle
pushf
adc
sub
sub
xor
or
mov
in
adc
and
adc
adc
xchg
sub
mov
adc
cmpsb
js
inc
inc
shlb
xchg
jnp
jg
fcomip
in
sub
inc
movsl
cmpsb
or
repz
cmp
repz
ljmp
jge
jle
stos
es
outsl
mov
inc
xchg
inc
bswap
sti
sbb
pushf
hlt
repnz
pop
js
movsb
jle
mov
mov
pop
loop
andl
int3
xor
es
imul
addb
mov
adc
ret
mull
call
and
jns
push
add
push
cld
leave
inc
iret
mov
movsl
push
call
push
in
push
pop
aas
out
test
adc
dec
xchg
cmp
adc
aam
lret
pcmpeqd
ds
mov
pop
xchg
cmp
aaa
int3
jb
mov
test
jo
inc
mov
dec
out
lret
ds
mov
and
push
repz
jnp
xchg
dec
test
fwait
mov
jmp
inc
lret
jle
pop
pop
or
icebp
add
inc
push
adc
and
adc
cmp
xor
in
ljmp
mov
pop
sub
jo
imul
fsubrs
out
hlt
inc
ja
rolb
rorl
pop
imul
imulb
mov
fisttpll
xchg
mov
and
test
mov
insl
ret
jp
cmp
and
cmpsb
dec
cmp
and
stc
cli
cmp
aad
cmpsl
or
lahf
pop
sbb
mov
ficoml
sub
xlat
cmpsb
lret
lods
aad
cmpsl
jmp
xor
in
hlt
jb
add
mov
test
adc
les
sbbb
jns
and
aam
dec
push
scas
addl
mov
xchg
mov
jae
inc
nop
es
inc
ret
arpl
pop
sbb
js
popf
add
sahf
xor
xor
and
add
popf
jge
imul
in
or
testl
sbb
xchg
repz
les
jp
mov
test
es
push
xlat
and
andb
repnz
mov
sub
ja
aad
mov
int
adc
cli
pop
cwtl
inc
sub
adc
push
ds
rcl
push
scas
test
push
sbb
xchg
jo
ds
mov
loop
std
mov
nop
test
int3
nop
leave
or
std
outsl
sub
jns
icebp
push
outsl
add
je
mov
sub
pop
es
loope
cmc
pop
rorl
int
in
and
pop
mov
mov
sahf
pop
scas
mov
push
ret
repnz
aas
cli
xchg
jns
les
sub
addps
test
popa
inc
mov
cld
fld
stc
or
repnz
jb
arpl
pop
pop
ljmp
jg
fisubrl
insl
pop
inc
imul
insb
lea
push
cmp
cmp
cmpsb
mov
lahf
push
jnp
fnsave
xchg
pop
add
cmp
test
test
add
jl
add
sub
lret
pop
das
jl
roll
popa
lods
movl
pop
jo
gs
xchg
pop
stc
dec
jnp
icebp
cltd
scas
jnp
scas
xor
test
jmp
sub
pop
into
add
mov
xchg
sbb
imul
inc
stos
jae
jae
pop
cmpsb
fimull
repz
push
iret
js
adc
pushf
mov
push
shl
roll
imul
stos
cmp
testl
mov
lcall
push
jno
mov
out
inc
pop
ds
jecxz
mov
dec
xor
inc
inc
mov
stc
pop
std
dec
and
jecxz
lcall
push
jecxz
repnz
in
stc
out
mov
push
pop
pop
cmp
arpl
cwtl
cmpsb
pop
sbb
xchg
mov
mov
lods
les
add
dec
imul
mov
lcall
fisubrl
cmp
lods
sbb
xor
add
sub
fstpl
repz
mov
xchg
bound
xor
push
mov
fisubl
cmp
sub
pop
or
cltd
aam
mov
int3
xchg
in
icebp
mov
mov
or
mov
push
mov
adc
cli
nop
in
jecxz
pop
mov
mov
addr16
into
jae
int
cmpsl
lods
xor
cwtl
push
mov
rclb
hlt
shrl
fcomps
inc
cmp
jp
sbb
xchg
xor
sub
xlat
push
xor
pop
sbb
adcl
je
mov
bound
lret
dec
lcall
hlt
orl
sbb
pusha
clc
imul
and
int
fnop
cmp
adc
inc
jnp
adc
cmp
mov
mov
jno
mov
push
push
adcl
ds
nop
roll
aam
insl
stos
loop
les
scas
pushf
dec
dec
shlb
push
or
scas
or
jnp
inc
mov
imul
movsl
loop
lahf
mov
ja
out
push
adc
xchg
mov
cmc
ja
subb
imulb
test
iret
shll
pop
cmc
or
or
movsb
inc
lret
cmpsb
cld
or
lahf
sahf
add
imul
in
cmpsb
adc
pop
mov
scas
cwtl
inc
por
enter
sub
out
sahf
test
aam
add
inc
mov
add
je
aam
jg
test
xchg
or
and
adc
in
mov
add
dec
lcall
std
adc
sub
and
stc
jmp
adc
pop
lea
in
test
in
movsb
jbe
pusha
pop
dec
adc
loope
pop
arpl
bound
lahf
sbb
mov
dec
add
sub
adc
xchg
inc
aam
and
dec
sub
cld
out
inc
nop
cmc
cli
dec
pop
in
imul
sbb
jmp
lahf
ja
cmp
ficoms
mov
out
adc
dec
or
rcll
xchg
cmp
mov
mov
jmp
lock
scas
sbb
fbstp
cmpsl
sub
fwait
decb
popa
adc
mov
add
rep
inc
xchg
incl
std
out
jmp
shlb
popa
lret
je
inc
cmc
xchg
cmp
scas
nop
stc
bswap
fbld
or
insl
leave
pop
xchg
fwait
inc
addr16
stos
lods
mov
push
or
les
mov
aas
adc
test
int
mov
mov
int
stos
shlb
hlt
jo
jnp
mov
push
and
fsubs
ja
adc
sub
call
mov
nop
int
incl
jle
ret
into
or
popa
in
inc
lcall
in
or
sub
push
orb
pop
and
sarl
dec
jecxz
mull
outsl
pop
push
xor
in
cmp
dec
in
xor
mov
add
roll
rol
push
add
mov
lret
roll
mov
fisubs
pusha
ss
insl
mov
test
push
pop
mov
jmp
dec
jbe
or
mov
push
out
add
adc
mov
mov
addr16
cmp
or
push
negb
mov
aad
xchg
xchg
insb
out
mov
xor
bound
mov
add
in
roll
insl
inc
cmpl
jne
mov
or
mov
add
or
adc
pop
shll
mulb
jb
or
and
mov
mov
ja
int
pop
sbb
test
pusha
lcall
cmp
insb
push
and
not
cmp
das
and
mov
or
daa
mov
icebp
jecxz
and
outsb
dec
lock
push
sub
rcll
imul
pop
ret
in
add
cld
pop
iret
addr16
pop
xchg
xor
dec
adc
cs
xchg
leave
mov
ss
pop
in
jne
cmpsl
shlb
mov
inc
mov
filds
testl
dec
leave
jns
push
shll
or
std
push
jo
call
mov
out
xchg
push
xor
imul
inc
jb
xor
aad
sub
dec
dec
mov
test
orl
dec
push
cmp
jmp
inc
imul
jp
cmp
lea
jnp
in
mov
nop
jge
pop
cltd
frstor
out
jns
out
mov
adc
jmp
hlt
inc
gs
add
idivl
cmpsl
xor
xchg
xchg
inc
jle
test
aam
fs
nop
dec
fsubl
outsb
outsl
xor
leave
push
push
xchg
sti
mov
popf
dec
mov
jg
inc
cmpsl
divb
adc
ret
pop
sbb
mov
jmp
cmp
adc
clc
ror
pop
inc
fdivl
movsb
aaa
movsl
and
cmp
mov
fs
nop
mov
into
test
cld
into
cmp
ss
dec
lret
and
pop
notb
lahf
pop
ret
add
out
insb
gs
mov
add
mov
push
mov
mov
decl
mov
popf
lods
mov
nop
out
cmp
sbb
cmpsl
idivl
pusha
out
jb
pop
fldcw
stos
lahf
mov
aam
xchg
push
xorl
in
mov
push
and
and
mov
aaa
test
cld
sbbl
and
adc
ret
pusha
movlps
icebp
test
adc
ret
stos
jbe
adc
cmp
loopne
sub
dec
adc
test
and
cmpsl
mov
fwait
call
lret
movsl
std
jp
mull
push
out
dec
xor
pop
lds
loope
testb
gs
or
adc
test
or
sub
fimuls
call
pop
jle
lods
mov
xchg
pushf
mov
fwait
jl
dec
mov
das
rcr
adc
out
or
dec
pop
inc
in
push
lea
add
cmc
pop
lcall
add
scas
mov
jge
scas
sarl
lret
dec
outsl
jo
mov
jmp
sarl
jg
fcoms
inc
mov
pusha
in
mov
cltd
repz
add
insb
mov
daa
cmpsl
sbb
dec
xchg
popf
jbe
dec
pop
inc
jmp
mov
incl
aas
inc
out
roll
dec
cmp
inc
xor
sub
dec
in
dec
lret
mov
xchg
sbb
outsl
adc
mov
mov
xchg
shlb
ljmp
iret
mov
xchg
push
cli
xor
inc
add
pop
xor
add
daa
es
cld
mov
sbb
push
imul
jmp
stos
jne
call
aam
inc
or
sbb
mov
or
cmp
cmp
mov
add
addb
sub
out
cmp
outsb
fmul
into
push
cmp
iret
in
ds
xor
jns
push
imul
aas
aam
add
pop
call
jo
mov
dec
push
gs
outsl
aam
xor
or
fwait
es
test
jo
scas
daa
call
mov
cs
mov
jnp
fildll
sarl
stos
call
sub
mov
fistpll
repnz
cli
icebp
mov
hlt
mov
xor
cmp
and
ss
mov
lret
jecxz
stc
cli
push
xchg
std
xor
push
cli
push
clc
sub
or
das
hlt
inc
mov
jge
lods
iret
and
sbb
sub
pop
fsts
push
jle
mov
out
outsb
adc
adc
mov
popa
pop
js
adc
movsl
pop
mov
push
mov
shrb
fisttpl
push
lock
cmp
inc
fisubrs
mov
std
push
jno
sub
mov
sub
or
shlb
std
fbstp
cltd
mov
pop
cwtl
mov
inc
mov
push
fildll
dec
mov
out
or
popf
pusha
lods
lds
push
sbb
jae
mov
sub
out
movsb
mov
xor
dec
add
lock
add
pop
cmpb
push
cltd
movsb
pop
dec
push
xchg
push
lods
mov
out
rcl
jl
les
mov
mov
ds
ret
imul
mov
mov
jge
rol
push
cwtl
sbb
arpl
sub
cltd
repz
je
pop
dec
inc
jg
loope
jmp
jns
xchg
mov
fistps
cld
ljmp
in
rclb
fisubrl
dec
idivb
gs
inc
dec
dec
movsl
xor
pop
dec
and
push
outsb
fs
cmpsb
dec
push
inc
jg
mov
ret
push
ds
daa
mov
push
stos
xor
jl
cmp
les
sub
xor
insb
insb
cs
lods
das
lahf
fs
or
aas
sub
add
cld
test
cmp
iret
mov
negl
push
dec
adc
loop
pop
or
rep
loop
sub
fs
addr16
outsb
sbb
sub
inc
arpl
cmp
inc
fisubrs
inc
scas
push
add
push
push
inc
push
adc
fwait
hlt
inc
pop
ss
jp
xor
cmp
jb
mov
inc
pop
push
dec
mov
sbb
leave
lea
ret
gs
ljmp
stos
iretw
cmpsb
mov
mov
mov
push
scas
inc
bound
test
sub
pop
xchg
sub
jle
jg
ds
cmp
push
push
sub
call
and
xchg
add
hlt
pop
mov
jbe
loopne
mov
mov
js
push
mov
rorl
int
loopne,pn
mov
mov
lret
in
lahf
sbb
clc
sbb
cmp
pop
pushf
mov
jmp
mov
dec
push
inc
outsb
sti
sbb
and
xchg
xor
fs
cmp
std
in
fsub
and
and
cmp
mov
cmp
push
push
xlat
push
xchg
dec
xor
fwait
out
xchg
mov
adc
xor
cli
xchg
loope
pop
mov
cmp
scas
sbb
dec
call
pop
shlb
ret
jl
into
std
ja
dec
mov
fnstcw
call
cltd
lcall
in
add
add
push
mov
repz
jecxz
inc
mov
movsl
xchg
das
das
xchg
insb
mov
test
aaa
sub
xchg
out
jge
ljmp
movsb
lds
push
sahf
dec
ret
pop
scas
mov
and
push
jo
or
in
and
adc
sub
or
fsts
pop
lock
mov
mov
cmp
jecxz
int3
jnp
ret
jl
fsqrt
test
mov
stos
jg
cli
jbe
push
sbb
add
push
mov
pop
aas
xor
or
dec
arpl
cmp
fnstsw
scas
adc
inc
fmull
ja
adc
in
sbbb
pushf
xchg
or
cmp
mov
cmp
stos
movsl
jmp
adc
repz
aad
cmp
out
sub
or
xchg
sarb
out
stc
movsl
movsl
or
xchg
xchg
push
adc
sbb
adc
jge
into
loopne
dec
imul
cltd
dec
not
cmp
outsb
in
pop
cs
jns
lcall
dec
mov
outsb
jns
pop
enter
popf
sub
inc
xchg
dec
repz
out
mov
inc
dec
cmpsb
lahf
pop
ljmp
mov
loopne
sub
inc
sbb
inc
cli
inc
sbb
push
xor
jp
out
xchg
and
sub
jecxz
mov
ror
and
add
sbb
inc
fidivrs
out
fdivs
aad
lret
xlat
adc
inc
std
adc
loope
lods
sub
jmp
dec
insl
jmp
scas
loop
push
lret
xor
mov
mov
xchg
mov
mov
dec
pop
add
jae
mov
cmp
dec
jns
jae
loop
and
lock
push
dec
inc
iret
mov
icebp
test
adc
cld
mov
xchg
cmp
or
test
aaa
inc
lds
mov
std
cs
arpl
mov
enter
ja
aaa
lahf
add
nop
loope
inc
jl
jge
xor
insb
das
das
in
insl
xor
cmp
out
out
xor
add
pop
negb
push
cmc
std
lret
adc
lcall
iret
stos
mov
ret
popa
stos
jo
test
push
and
jne
push
test
dec
orps
cmp
jno
pop
jg
out
lea
xchg
adc
mov
ja
notl
cli
data16
inc
mov
je
xchg
fdivs
rol
push
js
lea
xchg
movsb
out
mov
sub
cld
fiaddl
xor
outsb
mov
clc
inc
sub
loope
dec
cmp
inc
nop
bound
mov
data16
ljmp
xchg
or
cmp
sub
sbb
push
cs
lret
sub
repz
cmpsb
shl
inc
mov
lea
ja
enter
popf
mov
sub
pop
mov
test
in
lcall
mov
loop
fstpl
sbb
lahf
popf
xor
lds
fisttpl
sub
mov
fadds
pop
js
jbe
in
fistl
int3
insl
pop
mov
sub
xor
xor
movsb
adc
testl
mov
push
push
lcall
int3
or
or
mov
cmp
out
inc
sbb
jp
shll
dec
pushf
add
ja
mov
pop
push
xor
mov
adc
sbb
aad
push
jo
sbb
lods
mov
rcll
mov
dec
cmp
and
xor
pushf
push
xor
add
arpl
fs
in
ficomps
aam
repz
data16
jbe
sub
test
inc
imul
pmulhw
fwait
pop
mov
sbb
jnp
loope
jl
sti
int
shll
stos
lods
hlt
addr16
lahf
push
insb
jae
cs
sbb
rorb
imul
call
mov
jle
fs
push
xor
push
sub
movaps
loop
inc
jmp
pushf
pushf
not
test
adc
out
mov
stc
adc
call
cmp
push
and
push
mov
scas
mov
int
push
jl
fsts
hlt
push
or
sub
push
mov
push
sub
pop
arpl
push
sahf
pop
std
sub
mov
popaw
sbb
cmp
push
out
inc
sbb
adc
push
gs
mov
and
push
test
shrl
jg
mov
mov
cmpsb
popa
ljmp
icebp
cmp
lahf
data16
sti
and
pop
and
jbe
stc
xor
pop
stc
and
jae
stos
sbb
test
cmp
adc
out
repz
pushf
fsubs
or
adc
int
mulb
mov
add
ffreep
into
mov
sbb
inc
pop
ja
insb
dec
sbb
rcr
inc
push
aam
sbb
fst
sub
fwait
dec
inc
push
mov
shll
ret
test
push
pop
imul
mov
xor
xlat
mov
xchg
sub
lock
cmp
loop
or
loopne
jae
xchg
push
xor
pop
mov
les
shl
pusha
stos
mov
inc
or
ret
push
inc
jle
aam
fstpt
movsb
and
subl
loope
idivb
icebp
das
aaa
mov
mov
negb
repnz
sbb
xchg
sub
popa
fisubrl
pusha
mov
test
adc
push
jecxz
repz
inc
jno
cmp
pushf
lds
dec
das
addl
inc
lods
cmpsb
clc
pop
repz
lea
sub
test
sbb
cs
push
sub
mov
and
inc
mov
jecxz
add
sbb
ja
fmuls
cli
sub
pop
pop
push
insb
lret
movsb
iret
inc
xor
xchg
cwtl
aas
stos
adc
xchg
mov
cmp
cmp
pop
stos
scas
enter
xchg
push
sub
and
cmp
adc
out
imul
dec
enter
or
scas
and
shrb
adc
rorb
dec
ret
icebp
loope
scas
add
sbb
lret
outsb
in
hlt
cmp
rcrl
pop
pop
push
mov
iret
cmp
ret
add
aad
icebp
sub
jnp
or
outsb
mov
mov
mov
xor
push
lods
les
dec
xchg
rcrl
mov
pop
dec
test
add
out
mov
int3
fprem1
out
inc
jae
test
mov
pop
shll
out
lea
test
hlt
adc
mov
jmp
in
mov
push
mov
xchg
dec
cmp
jne
mov
fcompl
xlat
leave
cmp
imul
push
inc
popf
repz
xchg
adc
xor
add
dec
cmove
addr16
dec
daa
sub
push
dec
out
or
cwtl
xchg
aas
dec
cmp
pop
sub
mov
nop
jp
pop
mov
dec
jno
jno
das
inc
adc
dec
mov
adc
pop
push
mov
shlb
imul
adc
adc
shrb
nop
loope
pushf
scas
sti
out
fldl
movsl
adc
add
out
mov
lods
sub
dec
pushf
js
pushf
jae
mov
push
xchg
cmp
aad
ret
pop
iret
lds
sub
mov
jge
mov
jo
push
jne
shl
hlt
repnz
mov
mov
mov
adc
shrb
jmp
inc
ljmp
scas
jns
cmc
loope
xor
sahf
pop
xor
lds
push
mov
sbb
inc
mov
mov
push
mov
or
mov
inc
aas
push
int3
jbe
push
dec
lahf
ret
mov
test
test
mov
dec
push
pop
fwait
jge
jns
mov
lock
repz
iret
test
or
mov
fsts
xchg
push
imul
imul
call
add
push
pop
shrb
mov
pop
sub
out
in
pop
xor
je
sbb
aad
mov
adc
int3
movsl
pop
pop
mov
aam
xchg
or
imul
push
jne
sub
shlb
pop
xchg
mov
cmp
adc
aaa
and
insl
mov
jl
xchg
mov
fcmovnb
mov
fsubs
in
sub
xchg
adc
mov
xor
mov
fistl
sbb
mov
add
inc
stos
sbb
iret
mov
dec
or
loope
stos
in
ja
push
pop
push
dec
push
jl
xchg
xor
les
xor
test
cmp
inc
cwtl
pminub
fs
test
imul
sub
iret
not
mov
sub
pop
jl
pop
arpl
daa
inc
cmp
outsb
inc
pop
mov
shrb
cmp
and
iret
or
aaa
bound
in
stos
cmp
cmp
mov
mov
mov
cltd
xchg
rcl
jns
leave
cmp
out
icebp
lret
cmc
adc
cmp
pushf
inc
ss
or
cli
adc
repz
das
js
mov
inc
sub
ja
mov
imul
push
nop
sub
push
lods
aas
sub
test
push
sub
cmp
lds
ffree
mov
and
cli
adc
pushf
gs
aad
hlt
ficoms
jno
aam
imul
jb
scas
cwtl
ret
ror
imul
jg
jp
xor
or
adc
pop
adc
call
inc
and
test
adc
sbb
subl
xor
inc
cltd
mov
mov
or
adc
mov
push
pop
inc
mov
pop
push
inc
push
push
call
pop
js
shlb
dec
test
pop
dec
dec
call
stos
idivl
pop
cmpsl
sub
jecxz
sub
jl
lock
fsubr
fmull
inc
and
rcrl
jge
jb
jge
xchg
jle
push
sbb
movsl
push
dec
mov
mov
test
mov
add
js
adc
in
test
mov
in
je
sbb
adc
dec
xor
xchg
cli
cmpsl
or
addl
lock
push
sarl
sub
pop
or
int3
enter
inc
addl
loop
stos
mov
add
test
pushf
push
jecxz
cli
jl
xchg
xor
ss
mov
mov
or
mov
xchg
xchg
jo
fwait
inc
movsl
jp
mov
ja
enter
test
add
mov
mov
inc
stos
cmp
test
imul
lea
mov
pusha
cmp
push
insl
cld
xchg
push
add
dec
dec
test
adc
mov
or
aam
pop
ljmp
dec
subl
das
push
ret
inc
or
shr
dec
and
lds
or
sub
xchg
fs
andl
out
jle
sarb
imul
ljmp
pop
push
call
inc
in
cmp
sbb
mov
push
push
call
sub
rcll
inc
mov
xchg
icebp
test
fs
popa
out
out
jmp
ja
sub
aas
jp
mov
sbb
shl
sub
add
cmp
pop
mov
cmp
pop
dec
cmp
dec
aam
mov
jecxz
sbb
mov
movsb
push
shrl
int3
dec
ficompl
lock
fisttps
sub
data16
and
in
or
push
insb
push
mov
mov
add
retw
jo
pop
mov
cmp
test
xchg
loope
into
pop
mov
xchg
andb
ljmp
loop
out
mov
sub
les
daa
arpl
push
dec
add
pop
mov
jmp
ret
adc
into
sub
lahf
or
ror
test
xchg
push
mov
dec
adc
insl
push
daa
ret
or
add
imul
js
arpl
push
jmp
insl
or
je
mov
mov
mov
xor
add
jp
shr
add
shrb
cmp
gs
lods
pop
sbb
jne
icebp
jnp
iret
orb
nop
pop
fstpl
pop
icebp
sub
pop
push
ficomps
or
xor
addl
popa
pusha
jns
xchg
lret
int3
inc
mov
adc
loop
ret
ret
lods
or
jg
es
lret
xchg
ret
inc
pop
sbb
and
clc
scas
mov
adc
les
sbb
xchg
pop
inc
subl
arpl
imul
push
imul
enter
cmp
rorl
aad
ljmp
sbb
mov
imulb
clc
cmp
push
daa
mov
mov
dec
xchg
lock
inc
sarb
in
stos
fs
push
out
mov
fmul
pushf
inc
movhps
lds
add
out
outsb
pop
sbb
leave
incb
mov
xchg
jmp
jbe
push
cs
adc
lods
testl
cmp
push
mov
dec
ficomps
les
ljmp
push
add
sub
lcall
cltd
mov
adc
enter
mov
jae
repnz
mov
fcomip
mov
adc
fldcw
push
add
and
fsubrs
add
and
in
std
dec
push
push
xor
xchg
adc
mov
adc
push
les
fstpl
dec
int
invd
leave
pop
xor
mov
mov
jmp
jno
push
push
inc
fwait
sbbb
lret
pop
jecxz
or
cmp
lds
xchg
ja
fnstsw
ja
je
fldt
and
xor
mov
cltd
jb
or
nop
adc
dec
data16
and
push
jbe
loop
daa
cmp
mov
int
xchg
mov
dec
incb
or
cmpsl
out
addr16
adc
push
int3
sbb
mov
insl
mov
dec
dec
xchg
pop
ss
ret
lods
or
push
fidivs
ficompl
cmp
lods
les
scas
xchg
cmc
mov
repz
int
push
inc
enter
jae
push
bound
enter
jbe
and
lcall
xchg
insb
js
test
sbb
std
mov
dec
pop
add
test
imul
push
jg
shlb
mov
inc
push
stos
mov
addr16
fwait
mov
insb
xchg
mov
pusha
aaa
dec
push
das
int
decb
dec
mov
push
je
xlat
inc
xchg
pop
mov
inc
inc
fistl
inc
imul
sbb
adc
push
mov
pop
push
out
pop
loop
xchg
enter
cmpsl
add
scas
jo
loope
xchg
mov
cmp
lret
cmp
je
popf
cltd
imul
push
pop
lock
dec
loop
pop
xchg
lret
pop
pop
fwait
out
scas
cmova
in
mov
or
pop
jne
add
and
icebp
out
fstl
outsl
movsl
cmp
loop
mov
jecxz
std
inc
faddl
inc
pop
scas
inc
push
pusha
ljmp
sbb
and
popa
mov
dec
in
cmp
add
jmp
out
sahf
add
lahf
mov
xchg
clc
je
int3
mov
clc
sbb
xchg
shlb
adc
rorb
or
rclb
mov
jle
sbb
pop
je
pop
test
idiv
lods
cmp
shlb
arpl
call
repnz
scas
les
out
dec
cltd
sahf
div
inc
fwait
mov
sarb
xlat
and
mov
push
mov
dec
mov
cld
and
test
insb
shlb
inc
pop
or
in
fwait
outsl
int3
loopne
pop
iret
sahf
cld
mov
loopne
mov
and
push
jns
cmp
mov
mov
push
iret
shrl
cmp
adc
movsl
mov
daa
adc
cwtl
insl
test
push
inc
adc
push
add
js
and
mov
ljmp
nop
shrl
pushf
dec
sti
xchg
xchg
jno
aaa
mov
adc
sub
hlt
cmp
lods
loopne
mov
jp
call
ja
cmp
data16
int
in
int
repnz
out
sbb
test
inc
adc
lods
lahf
xchg
xor
ret
mov
or
fwait
out
cmp
ss
loope
mov
clc
adc
lds
sbb
or
sub
stos
xchg
add
outsl
push
inc
gs
mov
push
pop
push
jmp
fistps
and
add
pop
sbb
cmp
cli
sbb
and
mov
outsl
lea
daa
movsl
mov
pusha
clc
mov
loop
push
mov
xchg
popf
test
pop
sbb
and
cmp
shl
insl
sbb
push
mov
stos
cld
fdivl
mov
jae
sarl
xor
aad
ffree
push
jnp
popf
in
mov
lods
shr
adc
orb
jne
cmpsl
mov
xchg
into
das
pop
out
je
sbb
cmpsb
in
cmc
xorb
adc
mov
aad
cmp
shl
adc
add
iret
pop
adc
mov
sbb
dec
sbb
push
shl
sbb
add
les
jne
mov
fsubrs
mov
mov
xchg
lods
sbb
mov
cld
int3
push
jle
out
or
xchg
dec
jmp
cld
or
imul
pop
mov
mov
shlb
fwait
sbb
xchg
shlb
ljmp
ror
sbb
rcrb
fwait
or
addr16
xchg
xor
das
repnz
mov
icebp
push
data16
pop
loope
das
stc
push
fistpll
jg
xor
xor
xor
sbb
and
inc
cmp
rcll
in
test
fstl
mov
lcall
push
outsl
movsl
xor
sub
mov
xlat
pushf
pop
lcall
pushf
mov
adc
pop
gs
cmpsl
lcall
inc
sub
cld
cmpsb
mov
cmp
les
scas
arpl
rorb
or
aaa
and
mov
jp
or
daa
pushf
popf
and
push
sub
sbb
into
push
in
pushf
jne
flds
mov
in
xchg
or
lods
xor
shll
sub
dec
pop
std
jge
aam
out
mov
inc
aas
les
adc
lea
lcall
dec
scas
test
rorb
loopne
sbb
push
or
jg
in
inc
xchg
xchg
cmp
mov
xchg
or
dec
jnp
dec
cwtl
call
sub
lret
dec
push
inc
mov
bound
faddp
fstps
shll
push
call
xor
fnsave
outsb
xor
andw
mov
mov
insl
repnz
pop
pop
scas
int
popa
cli
cli
mov
push
fcmovnu
dec
fldenv
adc
in
and
xor
sbb
mov
push
xlat
dec
ljmp
sbb
jnp
lret
sub
aam
xchg
dec
cmp
arpl
repz
and
mov
push
fldenv
mov
pop
adc
pop
mov
adc
das
testb
dec
pop
into
and
mov
ret
dec
shufps
ds
mov
jl
fldenv
aaa
jnp
xor
lods
jl
adc
nop
das
inc
adc
fisubs
pusha
cmp
mov
icebp
push
icebp
mov
sbb
or
xchg
xor
xor
fsubrs
out
add
int3
setnp
fdiv
pop
xchg
dec
out
dec
popa
clc
pop
dec
inc
ja
xor
scas
mov
std
mov
roll
add
adc
sbb
xor
xor
mov
or
sbbl
cmpsl
leave
dec
push
push
cld
into
push
dec
std
shrl
mov
cmp
cmp
lock
shll
incb
cmpsb
ss
push
pop
in
jle
dec
icebp
gs
sub
add
lcall
std
mov
in
in
in
xor
sub
leave
mov
shll
jo
fldt
negb
je
int
jo
pop
imull
out
popa
jbe
sti
xlat
rol
in
add
inc
push
cmc
inc
lret
in
xor
fcoml
scas
fnstsw
push
mov
add
mov
addr16
jae
push
loopne
pop
fcom
cmp
sti
gs
in
adc
dec
aaa
push
push
je
and
pop
cmpsb
jmp
dec
lret
fdivl
mov
push
pop
nop
mov
hlt
xchg
leave
pop
pop
ficoml
sbbb
out
in
pushf
cli
xchg
and
sub
jno
mov
pop
pop
jbe
cmp
inc
add
idivl
adc
call
adc
lods
cmp
sbb
fidivl
mov
sub
jp
clc
push
push
stc
pop
popa
jne
dec
push
pushf
fs
fstl
int3
lahf
dec
xor
xchg
fimuls
cmpsl
xchg
adc
cld
push
fst
jno
mov
test
push
int3
mov
cmp
xchg
dec
dec
pushf
xchg
adc
xchg
dec
es
in
cltd
subl
idivl
sub
loopne
adc
mov
mov
pop
xor
pop
push
in
jl
mov
mov
pop
shll
test
jmp
out
inc
xchg
lahf
sti
sub
sahf
mov
dec
jns
mov
xorb
sub
fcmovb
add
jl
push
mov
add
cmp
rcrl
pop
out
push
fadds
xor
sbb
fistl
inc
popf
stc
mov
repnz
movsb
or
push
aad
mov
push
out
mov
nop
test
lret
mov
push
dec
call
mov
jmp
imul
lds
mov
pop
add
pop
pop
xor
mov
dec
add
fistpl
scas
mov
adc
popf
data16
jns
xor
gs
adc
jl
popf
jb
push
mov
icebp
ret
lret
xchg
shll
and
aaa
xor
inc
stos
adc
sub
fsts
sbb
xchg
les
push
push
sub
mov
sub
add
sub
dec
push
popl
dec
sbb
adcl
aaa
js
test
xor
sub
jns
sub
out
xorb
dec
test
jno
cmc
push
or
mov
inc
fildl
xor
fucomip
mov
mov
jnp
adc
xchg
mov
xor
aad
inc
mov
xchg
dec
mov
sub
shll
int
xor
or
mov
cmp
mov
ret
pop
in
por
repnz
hlt
je
inc
and
pop
push
sbb
stc
ss
rcrb
imul
sahf
ss
inc
sti
mov
adc
popf
in
loope
jmp
adc
js
dec
shll
imul
push
mov
mov
xor
and
pop
bound
jnp
lret
stos
mov
stc
jo
insl
repnz
push
push
pop
out
cmp
mov
stc
mov
xchg
les
fisubrs
shrb
lock
rolb
in
jecxz
repz
ljmp
mov
rcr
jmp
in
pop
jge
dec
inc
or
mov
lods
shll
inc
repnz
mov
shl
orl
mov
jo
cmp
inc
outsb
push
xor
mov
pop
or
xor
mov
adc
dec
inc
xchg
into
in
fidivrs
mov
pop
mov
das
mov
jmp
mov
inc
enter
ds
add
or
lahf
outsl
scas
int
or
mov
cld
and
inc
stos
ja
mov
into
jns
fstl
pop
repnz
fisubrs
dec
fnsave
lret
idiv
jae
pushf
mov
dec
or
out
and
xor
and
icebp
fistpll
dec
push
mov
pop
xchg
push
xor
leave
in
or
push
pushf
ljmp
xor
cltd
mov
out
cmp
push
and
cmpsb
jns
or
jg
add
jp
or
cli
imul
lods
sti
and
test
push
outsb
and
fsubr
sub
or
imul
jp
jne
xor
push
mov
add
aas
ss
cmp
mov
cld
sub
dec
mov
rclb
mov
jl
cmp
test
in
or
jne
ds
inc
stos
jbe
xchg
cmp
cmp
jecxz
sub
outsl
and
jl
or
sub
test
int
jl
or
mov
movsb
jbe
mov
loop
adc
insl
pop
stos
repnz
popf
mov
xchg
sahf
mov
lahf
lods
cmp
bound
fldt
cmp
inc
sbb
lahf
dec
push
stos
test
sub
sar
jb
and
lret
inc
mov
or
pop
jae
in
jnp
cmp
pusha
sbb
mov
mov
dec
insb
dec
movsb
lcall
call
xchg
sahf
decl
ss
push
cmpsl
mov
std
xlat
ds
neg
xor
add
and
lods
sub
mov
and
adc
or
and
out
movsl
and
js
and
addr16
cld
sub
inc
fiaddl
xlat
mov
cmp
addb
js
mov
jge
dec
xchg
enter
in
into
jo
push
scas
push
xor
dec
aaa
push
cwtl
les
push
in
outsb
sbb
in
sbb
lea
jbe
pop
inc
add
push
arpl
loope
pop
in
std
mov
loop
push
shr
arpl
popf
mov
icebp
call
adc
adc
sub
scas
xor
pop
je
adc
fsubl
xchg
jns
gs
test
dec
cmpsb
in
xchg
fsubl
jne
scas
rorl
dec
nop
mov
dec
xchg
mov
adc
add
cmp
push
jg
fildl
rcrb
jo
shlb
out
dec
or
inc
icebp
inc
push
inc
mov
rolb
xchg
push
es
push
int3
imul
mov
pop
xor
scas
and
xor
in
cwtl
sti
pop
rcrl
pop
sub
lds
cmp
fldt
xchg
iret
popf
cwtl
jg
cmp
fsqrt
shrb
push
decb
out
cmp
leave
call
adc
aas
arpl
insl
mov
mov
inc
pop
into
pop
cmpsb
adc
cli
leave
rorb
stc
mov
xchg
and
icebp
movsb
in
mov
les
sarl
incb
subl
sub
sbb
inc
xor
push
dec
dec
inc
sbb
xor
pop
adc
inc
pop
dec
xchg
sbb
xchg
std
mov
fwait
rcrl
xchg
cltd
int3
clc
std
cmp
jle
sbb
mov
pop
sub
or
into
xor
xchg
push
cwtl
sahf
dec
das
cli
fnstenv
imul
inc
cs
into
repnz
mov
inc
add
lock
sbbb
in
outsb
jbe
xor
add
ficomps
out
sahf
push
outsb
ja
mov
fbld
nop
mov
mov
add
push
push
lret
push
sub
mov
lock
test
sub
mov
inc
xor
or
jb
shrl
aas
pop
mov
dec
mov
add
vaddsd
dec
outsl
xchg
cmc
pop
xchg
mov
and
inc
cmp
adc
lds
test
and
mov
sub
xor
fsts
sbbb
enter
je
out
xchg
add
shl
dec
mov
int
xor
jge
pusha
mov
dec
xchg
xchg
xchg
popf
mov
leave
lret
mov
dec
cmp
mov
dec
movsb
fs
xlat
and
cmp
mov
insl
nop
push
xchg
cmp
orl
sti
std
pop
cmp
adc
pop
lret
or
mov
add
std
jge
push
mov
fstl
add
les
in
cmp
ret
inc
cmc
popf
iret
lock
inc
mov
loopne
inc
lahf
or
ds
in
adc
loop
pop
mov
mov
or
movups
hlt
mov
jmp
gs
inc
fsubl
pop
into
mov
pop
sbb
add
mov
lods
in
leave
dec
jnp
fwait
es
movsl
and
adc
push
inc
cmp
sbbl
cltd
dec
and
mov
jno
jb
pop
or
loope
mov
inc
inc
sti
xlat
and
popa
test
sub
push
xor
and
lods
adc
xchg
fwait
jae
mov
mov
fwait
sub
pop
fstpl
testb
mov
jbe
xchg
shll
ljmp
fildll
cli
ljmp
dec
ja
cmc
dec
addr16
shlb
jl
xor
mov
fsub
pop
pop
adc
and
adc
pop
add
stos
xor
jg
mov
mov
dec
mov
xchg
aaa
ret
aas
in
aaa
outsl
or
xchg
shlb
mov
popf
cmp
push
pusha
push
push
xchg
xor
lds
outsb
cmp
mov
mov
dec
cmp
pop
xor
and
jl
sbb
and
add
xor
cmp
pop
ficoml
lret
sub
or
ja
out
mov
aas
mov
mov
fldpi
sbb
int3
or
lcall
mov
sbb
add
mov
lret
mov
sbb
mov
call
xchg
repz
cmpsb
aas
lds
jo
shlb
gs
cmp
mov
and
loope
mov
xchg
sub
xchg
dec
es
popa
arpl
xor
sub
or
mov
xchg
imul
sahf
jecxz
mov
ror
jns
daa
jle
aas
push
xor
and
xchg
out
push
mov
xor
scas
nop
in
pop
aaa
int
daa
icebp
ja
xchg
sub
mul
fldenv
rorb
mov
sub
and
mov
repnz
push
mov
andl
aad
pop
dec
js
rorl
jle
jne
adc
or
stos
sub
daa
pop
test
cmpb
jne
jmp
jns
lret
pop
pop
pop
ljmp
test
mov
push
mov
xor
les
mov
test
lock
or
xchg
and
jl
pop
cmc
mov
pop
imul
je
je
push
sub
adc
sbbl
pop
loope
movsb
daa
sbb
cltd
xor
inc
cmp
inc
fldcw
mov
sub
xchg
je
lods
dec
hlt
jbe
mov
in
pop
inc
mov
mov
inc
push
sahf
adc
jmp
loop
adc
aaa
mov
and
sbb
sbb
jmp
lods
cmpsl
pop
inc
adc
xchg
std
hlt
out
test
rcl
pusha
fdivs
mov
xchg
loope
sub
lods
dec
add
jecxz
xlat
mov
or
cld
rorb
mov
jmp
pusha
ret
sbb
jns,pn
inc
ja
xchg
shl
fcmovnb
push
or
pusha
fcompp
std
push
iret
push
mov
dec
mov
cmp
cmp
leave
push
push
cmp
dec
fdiv
in
in
mov
or
xchg
ret
add
scas
movsb
jb
repnz
mov
jae
xchg
out
mov
fstpl
int
push
lahf
lcall
or
pop
push
push
mov
ja
aam
mov
pop
jle
fs
je
mov
ret
jle
push
jg
fs
lds
mov
xchg
mov
push
jmp
xchg
sahf
adc
mov
sti
incb
sbb
movsl
xacquire
xor
mov
xlat
mov
pop
jp
cld
mov
in
xchg
sbbb
inc
enter
loop
negb
and
dec
inc
scas
cld
aam
fisubl
mov
sbb
inc
ret
dec
jbe
outsl
loop
sub
ss
aaa
push
dec
push
pop
imul
adc
stos
lock
xor
test
and
fdivrs
icebp
pushf
test
jne
pushf
pop
cmp
js
bound
or
addr16
lds
add
mov
arpl
cmp
cmp
pushf
xor
test
lock
shll
xchg
jae
rolb
mov
divb
xchg
ret
and
mov
sub
mov
pop
clc
mov
push
sbb
push
xchg
cli
pop
cmp
outsb
lret
adc
pop
in
jbe
loop
xchg
call
xor
mov
das
sti
cmp
mov
jle
xor
sahf
icebp
stc
and
xchg
jb
mov
gs
jne
loope
adc
inc
xor
in
adc
popf
cltd
sbb
repz
add
inc
dec
mov
push
shll
inc
inc
sahf
mov
leave
inc
add
sti
sbb
jg
sub
mov
inc
outsl
or
push
test
xchg
dec
mov
sbb
mov
sbb
push
test
int
ret
aam
fmuls
mov
mov
mov
cmp
insb
sub
push
add
mov
hlt
ret
mov
subl
mov
xchg
outsl
lods
mov
sub
and
adc
xlat
movsl
jo
fimuls
movsb
and
fucomip
or
shll
xchg
sti
mov
mov
enter
es
repz
mov
mov
sar
jle
sbb
jmp
addr16
dec
inc
arpl
ficomps
sbb
cmp
inc
dec
in
fsubl
cld
jne
mov
add
push
jl
in
xor
pop
jne
fidivl
mov
sub
fnstenv
ret
roll
cs
pusha
lret
mov
fstp
mov
adc
sbb
test
shrb
fninit
cs
mov
dec
loopne
xchg
adc
pop
out
test
sub
call
movsl
dec
bnd
mov
repnz
loopne
pop
loop
sub
and
fs
ljmp
push
subl
mov
rcll
jg
sbb
into
daa
xchg
xchg
cmp
lcall
les
dec
xor
enter
adc
sbb
sbb
or
adc
das
ffreep
sbb
test
sarb
lcall
and
dec
xchg
call
out
and
xchg
out
cmp
sub
mov
adc
jo
dec
or
fisttpll
inc
jp
shl
xchg
xchg
dec
adc
clc
inc
rorb
stos
rol
sbb
or
jge
incb
enter
fwait
arpl
mul
lret
xlat
adc
outsb
insl
add
scas
xchg
pop
sbb
out
pop
jb
std
bound
jbe
cmc
sbb
incl
fidivl
in
outsb
push
mov
icebp
sbb
sub
mov
pusha
out
mov
sub
dec
adcb
cmpsb
xchg
xor
jnp
jecxz
xchg
sub
mov
mov
mov
es
loopne
sbb
ds
pop
sbb
pop
mov
pop
push
sbb
or
mov
mov
mov
mov
dec
cmp
jb
xor
jge
add
not
pop
out
xchg
lods
dec
aaa
sbb
mov
cli
mov
jge
xchg
mov
cli
aas
ficompl
lea
flds
jmp
movl
das
mov
iret
dec
aas
mov
mov
das
xchg
fsubr
mov
and
xchg
loope
iret
xor
mov
adc
lret
sti
aam
or
and
adc
cmpl
mov
pop
lods
insl
ss
int3
push
clc
mov
notb
cmp
inc
scas
lock
sub
adc
pop
arpl
inc
push
cmp
ficompl
lods
or
xor
cli
jp
pop
push
js
cmpsb
ljmp
mov
fcmovbe
jmp
lods
push
push
sbb
adc
daa
cld
mov
mov
jne
push
add
xchg
jecxz
xor
jbe
mov
mov
mov
cmpsb
lea
mov
inc
cmpsb
movsl
and
or
mov
insl
inc
div
sahf
fsub
dec
push
enter
jge
xchg
pop
out
jns
out
jge
enter
das
out
xlat
push
lret
inc
adc
add
or
xchg
jecxz
test
and
add
inc
xchg
sub
lds
in
adc
and
sbb
outsl
leave
mov
ret
jecxz
jbe
lea
jmp
xchg
nop
pop
ljmp
adc
cmp
iret
cmpsl
add
addr16
test
push
add
mov
or
or
push
inc
mov
push
loope
out
mov
mov
or
repnz
push
pop
cmp
cli
add
mov
pushf
xor
mov
adc
push
movsb
sbb
pop
in
rcrl
cmc
sbb
xor
test
pop
cmp
loope
mov
xchg
mov
sbb
outsb
ja
lods
lods
push
push
jmp
xor
mov
xlat
imul
out
jl
stc
inc
pop
or
or
add
jnp
or
push
push
jno
xor
cmp
mov
loop
das
and
adc
jl
movsl
adc
pop
lods
xchg
cmp
sbb
adc
xor
lret
enter
or
dec
xchg
inc
cmp
sbb
xchg
inc
push
imul
gs
loope
in
mov
and
sub
scas
push
shr
add
cmpsb
mov
lea
dec
push
nop
shll
sub
and
xchg
icebp
in
inc
or
insb
inc
push
mov
mov
pop
sub
ss
mov
push
adc
mov
int3
push
popa
ds
xor
loop
out
mov
int
icebp
fcoms
pop
rcr
negl
xchg
mov
sub
daa
inc
outsl
js
or
pop
les
into
js
outsb
xorl
test
cli
mov
jmp
mov
js
dec
xor
adc
mov
mov
mov
pop
xor
pushf
jae
xor
push
adc
insb
mov
mov
out
push
sbb
xchg
lea
pop
nop
jmp
xor
std
push
inc
mov
lret
es
mov
cmp
xchg
sti
sbb
ljmp
xor
cli
ljmp
mov
adc
xorl
inc
addl
stos
pop
jbe
sub
sbb
or
push
xchg
out
sti
lods
cmpsl
lcall
mov
cmp
pop
out
test
cmp
mul
inc
or
andb
push
and
cmpsl
jle
inc
fcmovnu
imul
ret
loope
add
rcll
pop
scas
or
int
inc
and
ds
ret
dec
adc
inc
cmc
orl
mov
aaa
ret
mov
jg
icebp
cmc
push
jle
mov
jge
fmull
sub
stos
xchg
sbb
mov
lock
frstor
mov
or
mov
xchg
mov
in
out
mov
cmpb
stc
xchg
and
loope
rcrl
lock
mov
subl
pop
pop
inc
mov
inc
or
adc
mov
mov
stc
sub
mov
data16
test
jo
cltd
test
in
enter
xchg
add
lahf
in
push
popf
lods
mov
cmp
les
popl
cmp
xchg
pop
and
and
mov
jb
mov
scas
xchg
sbb
sbb
les
xchg
cmp
stos
pop
inc
scas
pop
xchg
sbb
pushf
pop
sbb
shrl
test
cmp
in
icebp
sbb
or
idivl
cmc
adcb
jge
or
mov
pushf
or
jle
fucom
mov
pop
lods
je
cmp
aaa
rcll
adc
es
loop
aaa
repz
je
push
out
insl
ret
bound
adc
and
cli
mov
xchg
inc
gs
test
movsb
gs
push
pop
fadd
js
mov
dec
cwtl
xchg
xor
sub
and
lcall
lods
mov
cmp
sahf
inc
ljmp
ljmp
dec
frstor
fimuls
ja
cmp
movsl
arpl
xor
aas
test
or
sub
les
pusha
jo
sahf
int3
mov
inc
cli
add
cmp
pushf
cmpsl
sbb
sbb
out
sub
cmp
mov
cmpb
push
in
mov
adc
loop
testl
xorb
inc
int3
icebp
jge
jge
scas
xlat
aaa
cld
and
push
popa
jp
ficomps
mov
cwtl
mov
out
movsl
lea
ss
mov
sub
jb
adc
in
push
sbb
jl
lds
mov
insl
das
out
cmc
data16
inc
out
ljmp
int3
stos
sub
fcoml
and
jne
jecxz
push
cmp
daa
into
xchg
xchg
adc
es
mov
test
or
sbb
cmp
dec
jmp
ds
jge
aas
movsl
push
and
pop
and
dec
fwait
notb
inc
pushf
cmp
rcrl
add
dec
or
sbb
repnz
mov
adc
pop
dec
aad
jecxz
std
jg
aad
mov
adc
js
shlb
add
or
rcl
jbe
dec
fstl
mov
call
push
out
pop
jg
push
xchg
sub
xchg
sbb
aam
jge
fisttpll
in
cltd
or
sub
fwait
add
and
pop
sub
mov
cmp
enter
andb
in
jge
lcall
mov
adc
pusha
lret
mov
mov
mov
inc
mov
dec
shlb
inc
jbe
or
rcrl
arpl
aam
mov
pop
addb
sub
cli
mov
dec
mov
push
decb
rcrl
test
fisubrs
rcr
cmp
icebp
loopne
mov
push
repz
jne
sub
cmpb
xchg
or
push
cld
fsubrl
or
xchg
fisubs
pop
cwtl
mov
clc
int
add
inc
mov
or
adc
cmpsl
cs
imul
push
jns
pop
dec
xor
mov
jle
mov
repz
int3
testb
inc
jae
jo
leave
jne
inc
mov
and
mov
sbb
add
add
int3
sub
jl
shll
xor
pop
inc
outsb
mov
pusha
fdiv
mov
rclb
jbe
neg
jp
jmp
mov
mov
loope
out
cltd
dec
or
mov
into
adc
ss
push
cmp
xchg
stos
cwtl
cmp
inc
test
add
pusha
xor
js
clc
pop
test
mov
outsl
test
mov
push
add
adc
in
inc
push
jmp
or
fidivs
cmp
data16
sbb
jp
dec
mov
dec
pop
cmp
rcrb
dec
shlb
xor
adc
mov
sub
xchg
pushf
in
inc
xchg
cltd
mov
add
stos
in
pusha
mov
test
leave
ret
pusha
push
outsl
or
and
mov
push
sbb
or
inc
loopne
push
sub
push
sbb
pop
sbb
mov
js
cmpsl
push
lret
add
stos
or
xchg
add
mov
jg
jnp
mov
push
sub
test
cmpsb
repz
xchg
sbb
pop
xchg
and
out
orb
cmp
cs
adcl
jp
icebp
inc
stc
mov
jae
adc
ss
xchg
mov
int3
in
jae
dec
and
fidivl
sub
mov
mov
mov
stos
and
mov
imul
xlat
test
push
mov
dec
ds
adc
scas
testl
lret
call
movsl
push
push
xor
movsl
and
ficompl
lahf
sbb
subl
sbb
out
ss
jmp
lock
xor
or
sub
test
mov
add
es
push
test
jecxz
xchg
fistpl
xchg
in
sbb
inc
test
enter
mov
add
pushf
and
ret
mov
popa
out
imul
mov
into
jae
test
push
jno
dec
mov
mov
dec
lods
daa
test
jmp
pop
pop
pop
nop
cmpsb
jne
or
inc
cmp
inc
bound
js
mov
pushf
cmp
dec
xor
xor
scas
cld
jno
push
cltd
xor
jmp
movsb
push
mov
add
or
mov
mov
popa
push
int
cwtl
push
pusha
sbbb
arpl
es
xchg
clc
lret
xor
xchg
aaa
or
or
inc
add
in
insb
int3
push
mov
fldt
push
fiadds
push
nop
dec
cmc
repz
cs
je
sbb
lds
mov
add
movsb
or
mov
test
adc
les
nop
out
cmp
inc
lret
mov
pop
filds
jno
lea
inc
jmp
loopne
mov
leave
movsl
bound
negl
push
fidivs
push
ret
jbe
xchg
mov
data16
les
idivb
test
fildl
and
xchg
dec
push
sub
sbb
int
jnp
repz
ljmp
cmp
pop
push
mov
jmp
or
daa
mov
pop
jg
or
ret
shlb
and
or
dec
into
adc
sahf
repnz
xor
xchg
shll
sbb
cltd
cmp
enter
mov
fwait
sub
mov
scas
out
clc
aas
test
jg
dec
es
fimull
mov
ret
stos
sub
sahf
int
lcall
aas
inc
jb
popa
ret
inc
outsl
add
inc
shll
mov
jge
mov
mov
adc
imul
push
aam
cmpsb
jge
push
xor
mov
in
mov
mov
lds
xor
sbb
or
cltd
xor
dec
push
or
sbb
mov
fistpll
fildl
loope
jno
fimull
out
fadd
mov
sbb
out
jmp
xor
inc
or
in
outsb
xchg
repz
jnp
mov
ret
push
jbe
sub
xlat
dec
sarl
jecxz
shlb
insl
movsl
mov
aaa
ja
inc
cwtl
xlat
test
mov
mov
bound
adc
or
data16
xchg
aad
test
aam
lret
adc
and
imul
pop
mov
cltd
push
push
mov
es
mov
outsb
nop
mov
repnz
jne
push
and
out
add
je
dec
imul
push
sbbl
jg
pop
lahf
ds
aas
sub
mov
test
mov
out
ds
xchg
xchg
les
pusha
or
xchg
addb
jmp
sub
dec
pop
cmc
jbe
and
xchg
adc
mov
or
ficomps
pop
rorl
iret
out
or
mov
sbb
xchg
cmp
ret
or
mov
fildll
test
dec
sbb
sbb
repz
leave
add
add
out
ja
jmp
test
dec
imul
sbb
in
adc
jmp
dec
jge
push
sbb
sub
adc
push
hlt
push
pop
sub
out
ljmp
aas
fisttpl
out
lds
fcoml
stos
mov
dec
cmp
outsl
outsl
into
sbb
mov
jne
je
xchg
bound
inc
out
cltd
daa
mov
rcrl
jg
xchg
mov
idiv
xlat
popl
daa
sub
add
mov
cld
data16
cmpsb
xchg
call
movsl
mov
daa
test
and
int3
dec
leave
mov
addr16
stc
out
test
cld
mov
test
nop
sub
xchg
test
icebp
add
es
ficoms
sbb
test
mov
out
fsub
stos
psrlq
imul
fists
fsubl
movsb
pop
add
pop
insl
inc
cmpsb
xor
cmp
rcr
test
fcoml
mov
fs
jp
mov
lret
push
mov
inc
ficomps
imull
scas
loop
xor
and
orb
lea
pop
cmp
shll
fldenv
jbe
test
or
mov
fcomp
lods
sub
cmpsl
sub
fsubrp
neg
adc
shlb
and
loope
add
lcall
mov
jbe
pusha
dec
lods
mov
and
shrb
outsb
xchg
jne
cmp
xchg
xor
movsb
inc
aad
dec
out
sub
mov
xor
jns
js
xlat
loope
mov
cs
jl
pop
adc
mov
lds
in
icebp
or
cmp
popf
lcall
cmp
ss
adc
add
lods
stc
stos
fxtract
sub
lcall
adc
xor
push
shl
ret
in
loop
lods
jae
mov
sbb
fsubrp
loop
sbb
lock
pop
sbb
add
or
dec
jae
push
into
inc
mov
mov
andb
cmp
mov
xor
in
inc
push
int3
sub
aas
inc
clc
scas
cmpsl
lds
scas
lods
cmp
pop
sub
dec
sbb
in
dec
and
pusha
mov
mov
adc
cmc
pop
rclb
adc
or
mov
repz
pop
adc
mov
arpl
out
push
sbb
std
add
iret
repnz
inc
mov
out
das
movsb
pop
xchg
popa
lds
mov
jbe
movsl
dec
ljmp
dec
iret
jecxz
mov
es
add
sub
repnz
je
jge
add
push
push
clc
dec
je
push
pop
sbb
popa
or
xchg
inc
or
fisubrs
and
divl
mov
push
and
and
ret
mov
xchg
into
push
xlat
sub
xor
add
mov
cmp
jne
mov
jns
pop
cmp
mov
dec
pop
test
fldcw
pop
mov
xchg
dec
push
xchg
push
add
mov
dec
adc
or
pushf
pop
lods
aaa
out
nop
cmp
pop
xchg
test
pop
insb
rep
cmc
mov
xchg
add
push
call
or
adc
lods
sub
pop
pop
or
push
lahf
loope
xor
fmul
jbe
dec
inc
les
inc
pop
arpl
fwait
aam
dec
mov
shr
shlb
lahf
inc
popf
mov
loop
jl
bound
push
xchg
inc
aad
xchg
out
push
es
cltd
sbbl
lea
out
inc
or
fbstp
xor
or
push
lock
es
mov
sbb
sti
pushf
cmpsb
lret
js
and
push
sahf
fidivrs
xor
pushf
pop
stos
fucom
sub
mov
or
push
mov
add
xlat
cld
and
jle
mov
outsl
inc
jecxz
mov
popl
dec
pop
inc
xlat
xchg
xchg
js
sbb
cbtw
insl
arpl
jl
sbb
andl
pop
fsts
mov
mov
mov
xor
push
lods
js
push
lock
cmp
movsl
ljmp
in
mov
mov
xor
jp
cwtl
jmp
je
dec
adcb
cmp
mov
lret
xchg
pushf
imul
adc
ficompl
mov
test
aaa
cmpsl
imul
mov
xor
mov
iret
movsb
inc
xor
mov
dec
ja
lods
xchg
stc
int
push
ret
push
mov
sub
testb
sub
aaa
mov
push
imulb
mov
sahf
and
adc
in
int
add
outsb
mov
and
push
rcrl
xor
js
xchg
xacquire
or
inc
sub
lahf
stos
mov
cltd
or
add
fstpt
pop
push
adc
stc
fnstcw
int
cs
cmp
nop
cmp
push
inc
mov
push
lods
mov
iret
cmp
nop
push
fidivrl
aam
sub
jnp
fwait
lds
insl
xchg
mov
push
dec
test
xor
mov
mov
mov
scas
fnstenv
stc
pusha
mov
ret
jne
out
jo
ret
mov
adc
dec
outsb
jg
mov
mov
and
jnp
ljmp
xchg
jp
test
test
in
push
les
cmpsl
call
mov
test
push
sub
lret
cltd
push
inc
adc
insb
daa
inc
xor
scas
and
leave
adc
add
aas
xchg
cmpl
aas
rcrl
rcr
xchg
das
mov
xor
daa
sahf
lock
sarl
pushf
inc
dec
push
push
dec
out
mov
popa
xchg
fadds
dec
sbb
les
sub
xor
or
dec
sub
push
or
std
add
sub
add
mov
and
pop
jecxz
inc
mov
adc
inc
add
inc
mov
sub
loope
scas
aam
mov
cmp
inc
xchg
in
hlt
mov
nop
out
shll
xchg
mov
shr
out
ds
cmp
iret
in
pop
frstor
nop
cltd
jmp
pop
insl
in
xchg
in
movsl
or
in
lods
scas
testl
jle
cmp
rcrl
xor
inc
push
clc
scas
loopne
shlb
jns
dec
adc
stos
or
push
pop
lds
int3
xor
test
jnp
or
push
add
push
cmpsb
or
push
dec
pop
ret
sub
mov
jns
int
movsl
cmpsl
push
icebp
pop
jmp
enter
cmp
push
mov
inc
sbb
jmp
pop
cmp
inc
inc
rorb
pop
btcl
fs
push
movsl
test
in
mov
push
xor
push
add
les
pop
cmp
fisttpll
jo
rcr
dec
dec
mov
or
mov
std
sarl
adc
jmp
jbe
push
mov
adc
pop
cmp
rcrl
adc
std
shl
push
fstl
and
xchg
or
call
jle
bound
hlt
popf
int
or
mov
add
lcall
sahf
and
add
xchg
push
out
dec
sub
stc
add
dec
in
shlb
repz
ja
into
lret
aas
shll
fcoms
xchg
pop
mov
and
cwtl
fcomp
sahf
push
sbb
paddsw
xchg
lock
lds
push
sub
in
fs
in
mov
jne
pop
xchg
jb
lahf
movsl
jge
pop
or
mov
pushl
inc
xchg
dec
ljmp
lock
ljmp
push
sarb
sti
nop
push
sub
imul
fs
or
sub
movsb
cmp
push
dec
mov
jmp
mov
stc
ret
out
cmpsl
lahf
and
adc
jbe
gs
repz
cs
pop
test
shl
ret
wbinvd
cs
jo
testl
jp
or
mov
std
mov
jne
int3
fcoml
sbb
movlps
loopne
adc
xlat
adc
repz
jle
and
adc
js
adcl
outsl
pop
daa
push
xor
adc
cmc
inc
xor
inc
and
inc
push
inc
cmpsb
mov
jecxz
xor
leave
ret
test
push
ss
aaa
sbb
mov
pop
sbb
out
mov
mov
cmp
xor
fs
cmpsb
and
cmp
mov
inc
fst
adc
pop
sub
pusha
xor
xor
cmp
iret
adc
repnz
sbb
fdivrs
pop
clc
cmpsb
loop
sub
mov
add
sbb
mov
incl
xchg
jo
xchg
jnp
lcall
sbbb
mov
adc
push
dec
inc
fdivr
add
mov
xorb
sbb
jmp
aaa
jbe
pushf
inc
dec
jns
lea
popa
clc
loopne
and
dec
push
xchg
movsb
push
sbb
xor
push
jne
dec
xchg
das
jno
mov
xor
fstl
sti
test
xchg
and
cmp
inc
mov
push
push
lods
pop
jo
outsb
add
sub
rclb
cli
int
dec
or
pop
lds
add
lods
pop
cli
xchg
cmpsl
mov
inc
clc
fcomps
ds
test
lock
xlat
push
div
in
dec
cmp
inc
jmp
xchg
pop
mov
sub
mov
pop
mov
or
imul
mov
xor
pop
mov
jle
stos
sub
lea
retw
je
push
fs
dec
dec
mov
in
fstp
dec
pop
cwtl
fnstenv
or
shlb
inc
scas
jbe
cmp
mov
repz
dec
adc
xor
popf
sub
xor
rcrb
push
adc
inc
push
xchg
push
nop
jecxz
mov
iret
in
subb
cmc
inc
daa
cmp
cltd
mov
call
punpckhbw
push
push
sub
test
and
cli
sar
shr
stos
mov
pop
std
es
aam
movsb
pop
inc
lahf
sahf
or
or
jnp
xchg
fisubrs
xor
sub
pop
push
subl
xchg
dec
dec
leave
aam
bound
xchg
mov
xor
pop
push
shll
dec
jnp
xchg
xchg
xorl
imul
fs
jmp
sub
mov
stos
ret
xchg
call
cmp
adc
pushw
insb
dec
out
cmp
rcrb
dec
loop
add
fscale
mov
xor
or
sbb
js
decl
cld
cltd
cmpl
roll
xchg
jecxz
xlat
cmc
jnp
mov
push
jbe
ret
fdivrs
rol
sub
sbb
cli
incl
ret
push
aaa
popa
stos
sti
cmp
inc
mov
cwtd
add
hlt
push
mov
lret
out
int
aaa
mov
clc
cli
sahf
and
loopne
mov
sarl
les
fnstenv
and
or
pop
lock
adcl
and
and
pop
out
mov
jecxz
lods
pop
push
sahf
adcl
bound
xchg
rcrl
lret
mov
movsl
add
add
jo
inc
jae
nop
lahf
js
adc
out
pushf
pop
fistl
push
sub
movsl
in
fbstp
sbb
sbb
lahf
sti
inc
orb
into
shlb
mov
nop
int
dec
push
xchg
xchg
push
sbb
push
ja
fsub
mov
mov
cmp
les
data16
mov
xorb
or
pop
icebp
push
jns
cmpsb
jp
push
mov
jp
adc
bound
mov
inc
xor
es
jle
rcll
outsb
or
xor
lahf
dec
xchg
icebp
cmp
mov
add
xchg
inc
mov
adc
das
pop
xchg
call
pop
sbb
mov
and
and
test
push
fstpt
sbb
pop
andb
hlt
int
cmp
aas
in
adc
sub
or
mov
push
fdivrl
sbb
sub
std
mov
cmc
push
faddl
mov
fcmovnb
insl
into
cmp
shlb
dec
and
and
stos
repnz
mov
add
xchg
hlt
cmp
shrb
cmp
inc
insl
dec
jo,pn
dec
push
rcrb
xchg
mov
lea
je
ficomps
or
popa
pop
xor
lahf
jae
popa
pop
mov
fistl
out
out
das
std
add
mov
sbb
mov
mov
out
inc
pop
cmpl
mov
xchg
scas
or
ss
jae
adc
insb
adc
or
cmp
adc
nop
mov
das
loopne
aaa
and
jmp
xchg
xchg
ljmp
dec
add
pop
in
mov
iret
ss
cmp
push
lods
fisubs
js
inc
xor
fwait
inc
cmpsl
divb
sbb
push
popf
or
sti
xorl
dec
repnz
jmp
sub
push
mov
out
lahf
notl
lret
mov
xchg
fmull
sti
cmp
js
mov
cmp
movsb
adc
xchg
mov
hlt
cmc
jae
inc
insb
in
xchg
xchg
insl
inc
push
sbb
pop
insl
cli
cli
cmpsl
loop
pop
pop
in
out
repnz
test
mov
mov
mov
insl
xchg
ret
inc
push
call
lea
mov
xor
and
aas
std
dec
sbb
int3
sub
push
xchg
insb
repz
add
in
adcl
rclb
add
xchg
lahf
xchg
jne
scas
dec
scas
mov
mov
xor
sbbb
xchg
cli
cltd
xchg
scas
mov
add
add
hlt
sub
imul
dec
mov
mov
mov
pop
das
dec
nop
lret
fbstp
das
add
inc
ljmp
xchg
jg
das
pop
pop
dec
cs
rorb
sbb
das
cwtl
js
fcmovnb
or
enter
jp
cmpsl
cmp
dec
push
sub
aad
jne
mov
iret
adc
mov
hlt
lcall
mov
leave
push
push
mov
lods
adc
bound
sub
mov
in
pop
test
adc
mov
mov
xchg
cld
out
mov
and
test
xchg
push
pop
loope
fldenv
gs
call
and
jp
xlat
push
aaa
mov
mov
and
xor
inc
mov
or
pushf
add
mov
je
mov
ret
mov
add
pop
push
int
push
pop
mov
inc
xchg
push
jae
and
inc
pop
xor
sub
add
jo
xchg
addl
lret
mov
je
lret
sbb
pop
dec
popa
cli
inc
lea
sub
sbb
xorb
xor
in
mov
aas
scas
ja
push
jb
add
subl
sub
fsubl
sahf
add
movsl
pop
push
arpl
inc
cmp
push
fisttps
bound
ljmp
inc
rol
pop
mov
data16
mov
add
imul
or
xor
cs
lods
mov
dec
push
lock
sbb
mov
into
jge
adc
or
imul
xchg
sbb
mov
jns
cli
fptan
dec
jmp
imul
push
imull
xchg
xlat
jge
sahf
cmp
push
jecxz
inc
or
sbb
sti
push
fsubr
lock
dec
push
inc
cmc
addr16
fstpt
push
daa
loop
lret
fcomps
fimuls
jb
mov
cmp
push
push
adc
test
and
sub
shll
cmp
dec
fld
scas
sub
pop
mov
xor
xchg
mov
mov
stos
sbb
loopne
inc
nop
fsubrs
mov
add
lret
inc
sahf
fistps
ret
add
mov
jl
aas
mov
mov
inc
popf
decl
pop
mov
lock
fldt
pop
sub
and
aaa
sub
dec
nop
sub
cld
aad
mov
aaa
test
cmpl
test
fwait
jmp
lds
pusha
imul
xor
cltd
add
jo
and
stos
cmp
insl
jg
xlat
lock
out
mov
inc
cmp
lods
lds
xchg
shrb
loope
test
cmp
ss
xor
fadds
jns
xchg
aad
or
push
sbb
sub
add
sar
pop
fidivs
add
insb
xchg
push
repnz
arpl
dec
mov
ret
rcrl
cs
inc
mov
loopne
enter
or
sub
es
mov
lret
into
mov
es
sbb
bound
xor
nop
and
stos
shll
data16
bound
jnp
ret
and
in
repz
inc
subb
cmpsl
mov
je
sbb
or
mov
imul
jmp
jne
sarb
sbb
push
push
int3
jmp
popa
lock
mov
jecxz
xor
push
aam
cmpsb
push
adc
js
imul
cltd
scas
pop
sbb
cmp
add
sub
lret
sbb
pusha
sti
mov
inc
gs
inc
jmp
jle
bnd
add
mov
inc
cmp
cmc
ret
inc
or
mov
xchg
bound
div
xchg
fsub
pop
xor
nop
xchg
rcrb
cmp
mov
shll
fildl
shlb
idivb
cmp
in
dec
inc
push
clc
aad
inc
or
or
sar
andb
pop
add
fsubrs
mov
shll
jge
rclb
fcoml
and
repnz
xchg
xlat
fwait
push
or
mov
adc
adc
sti
adc
xchg
adc
inc
in
loopne
dec
pop
and
loope
dec
mov
xchg
sbb
mov
movsb
rolb
mov
sbb
and
pop
push
mov
mov
test
icebp
dec
mov
sbb
and
stc
pop
adc
lods
mov
fsin
dec
imul
cwtl
fidivs
dec
pop
xchg
mov
xor
xchg
xchg
fdivrp
or
insl
cmpsb
in
pusha
mov
xor
sti
lcall
mov
or
and
movl
or
je
add
arpl
xchg
test
sub
and
movsl
rcll
pop
clc
and
ds
imull
sub
inc
xchg
loopne
fcompl
push
inc
inc
jnp
loopne
jo
je
loope
jp
lods
ret
push
adc
mov
or
dec
imul
push
mov
cmpsl
inc
mov
iret
lahf
inc
xor
cmp
lods
sub
pop
cmpb
mov
jmp
or
pusha
or
test
jecxz
push
or
push
outsb
or
aas
jg
mov
ja
subl
std
push
jno
jnp
rolb
ja
jo
jg
xor
xchg
pop
insl
out
pop
add
push
mov
outsl
jmp
jae
inc
sarl
fwait
imul
cltd
icebp
xchg
jne
aaa
imul
add
insb
and
mulb
xchg
xchg
das
adc
aaa
insb
sub
add
or
mov
ds
das
cld
in
add
or
movsl
xor
jmp
cmp
in
sti
mov
call
push
loopne
and
push
fcompl
xchg
test
jbe
test
imul
jle
lock
loope
mov
dec
inc
sbb
cmp
adc
jmp
inc
or
inc
and
inc
sub
clc
cmpsl
jo
cmc
sbb
mov
inc
out
negb
std
xchg
add
push
cmc
mov
sub
or
mov
and
jne
ja
es
jg
jge
int3
inc
sbb
ss
in
or
push
fadds
jl
adc
in
xchg
notb
sbb
mov
ds
push
iret
out
mov
test
cmp
gs
push
js
imul
mov
push
incl
mov
les
stc
cmp
popa
clc
out
lods
mov
cmp
test
addr16
repz
jecxz
add
xlat
iret
jmp
jae
add
sbb
ja
mov
ret
rol
push
or
lods
xchg
dec
or
cwtl
in
adc
hlt
jle
push
pop
sahf
fidivrl
call
movsl
jp
sub
mov
cs
pop
repz
mov
loope
daa
mov
lds
xchg
dec
and
xchg
les
push
push
mov
jno
fbld
inc
mov
scas
xchg
insl
hlt
or
mov
ficomps
add
incb
inc
dec
dec
jmp
cmp
xorl
aas
mov
sarb
imul
xchg
bound
out
push
xor
xchg
push
enter
cmpsl
mov
cmp
xor
ljmp
mov
movsl
sub
outsl
shlb
ljmp
lcall
arpl
out
jo
aas
or
cmp
xor
xor
mov
addr16
mov
pop
lods
ss
mov
add
or
adc
ja
push
out
mov
or
mov
sti
sarl
int3
rol
cltd
int
jb
pop
inc
btr
inc
sbb
loopnew,pt
ret
mov
je
into
jbe
mov
clc
xor
test
jg
jno
cs
fnstenv
fbstp
pop
xchg
dec
sbb
jmp
enter
nop
ljmp
inc
xor
xor
js
push
jns
ret
loopne
decb
movsl
idivl
dec
ljmp
bound
sbb
add
and
gs
or
fs
shl
push
add
mov
imul
adc
pop
cld
push
adc
mov
test
mull
mov
dec
imul
mov
in
sub
mov
xor
pop
push
jl
mov
dec
add
push
addr16
lahf
lock
dec
jmp
out
cmp
fs
pop
call
mov
dec
jge
pop
mov
call
ret
jge
movsl
popf
cltd
loopne
or
xlat
sbbl
cmp
adc
es
test
pop
in
xchg
pop
lcall
mov
inc
fnsave
rolb
push
jne
xchg
push
sub
test
popf
imul
aam
and
jp
es
and
arpl
xchg
insb
sti
cltd
add
or
adc
lret
and
inc
bound
arpl
xchg
xor
sbb
adc
insl
push
sbb
and
adc
sbb
pop
mov
je
dec
adc
pop
cli
mov
push
or
or
sahf
pop
mov
pop
dec
mov
dec
daa
fdivl
xlat
and
add
xor
fcmovne
icebp
scas
pop
sbb
inc
add
jp
mov
into
push
gs
and
add
xor
inc
and
nop
adc
out
aam
sbb
test
dec
sbb
mov
xchg
rclb
ret
mov
jmp
cmp
dec
dec
inc
iret
mov
inc
fs
fmuls
and
push
stc
jne
in
cmc
out
int
in
mov
pop
mov
lahf
jne
rcl
ds
push
ja
stos
aas
imul
fsubrl
test
add
jge
stos
sub
xchg
addr16
push
jg
push
adcl
loope
sbb
inc
mov
addr16
push
push
in
in
jae
lock
fcoms
push
repz
fs
pop
add
mov
std
bound
push
stc
cltd
fadds
inc
stos
rclb
mov
orb
mov
lock
dec
mov
loop
inc
lahf
cltd
scas
sbb
push
movsl
frstpm(287
lcall
fisttpll
xchg
push
es
jle
pop
test
jmp
fisubrl
cmp
std
sbb
xor
movsl
add
push
push
mov
jmp
cmp
sub
jnp
iret
aad
rolb
stos
lret
std
in
pop
xchg
insl
jmp
cmp
xchg
dec
mov
cltd
push
lea
mov
pop
jbe
or
jo
pop
or
repz
adc
mov
xor
jmp
mov
push
lea
dec
mov
adcl
jecxz
pop
pop
loopne
and
add
mov
cmp
gs
out
lahf
dec
xor
jne
and
adc
xbegin
ss
es
xchg
mov
adc
ss
dec
outsb
popf
fisttps
in
jne
hlt
inc
push
pop
jmp
mov
int
lods
outsl
mov
stc
sub
lcall
jmp
push
inc
enter
push
stc
insl
push
dec
sub
pop
movsb
inc
mov
or
icebp
mov
sub
or
dec
and
movsb
cmpsb
jb
mov
mov
cmp
lock
cmp
int
insl
add
data16
lcall
or
insb
jle
bound
cmpsb
in
call
out
push
rcll
dec
xor
push
inc
dec
ljmp
out
pop
int3
mov
sub
loope
pop
pushf
push
arpl
push
or
ljmp
pop
addr16
cmp
xchg
mov
call
xchg
dec
xchg
mov
xor
pop
adc
sbb
and
pop
cmpsb
call
fisubs
aas
add
mov
push
call
int
out
insl
ss
sub
sbb
dec
jmp
mov
pushf
scas
push
mov
or
hlt
aam
test
jmp
call
int
sbb
xchg
outsl
mov
ret
sbb
jb
out
xor
fs
call
fs
inc
or
push
mov
scas
mov
sub
ds
dec
test
lahf
js
pop
jo
stc
lock
aas
in
inc
jecxz
test
adc
std
cld
push
jo
sub
out
xlat
xchg
cltd
mov
das
dec
ss
outsb
iret
sti
lods
jne
mov
arpl
daa
fstl
out
jnp
mov
shr
xchg
mov
loope
xchg
mov
enter
inc
loopne,pt
imul
mov
mov
jmp
cmp
fstps
or
pop
mov
filds
testl
xchg
mov
insb
dec
add
mov
push
mov
add
cmp
fs
add
lret
xchg
or
out
xor
ja
sti
mov
divb
outsb
movsb
call
fs
fcomps
add
or
lock
lret
push
insl
fmul
mov
push
push
fwait
adcl
jp
movsb
popf
add
rcl
mov
out
xchg
pop
imul
je
in
test
jp
sub
mov
inc
add
pop
xor
mov
or
gs
cmp
push
aaa
push
cmpsl
cmp
xor
in
sahf
dec
cmp
sub
shrl
movsl
pushf
xlat
sbb
and
daa
mov
mov
mov
js
add
mov
xchg
dec
xor
add
out
xchg
bound
add
aas
fisubs
arpl
cmpsb
push
test
ds
pop
ja
repnz
and
dec
add
add
stc
iret
mov
subb
adc
ret
cmp
stos
cli
fldl
jecxz
adc
arpl
cvtps2pd
shl
add
das
inc
test
xchg
int3
mov
loop
inc
into
into
adc
jecxz
push
push
dec
loop
add
dec
pop
jge
or
jnp
jno
into
push
add
mov
mov
mov
rcrl
or
mov
data16
xchg
stos
inc
jns
cmpsb
cmpb
mov
andl
sub
call
inc
jmp
xchg
lock
push
jge
dec
push
push
imul
sub
mulb
xchg
pop
popa
push
jge
mov
sub
rolb
insb
mov
jmp
fisttpll
lcall
jne
jno
fisttps
lret
cmpsl
stos
clc
mov
lock
push
hlt
sbb
push
fsubl
or
push
pop
dec
push
pop
add
pop
xor
pop
divl
xor
mov
fidivs
rcrb
ret
xchg
push
jb
xchg
sbb
or
cmp
and
jmp
orl
pop
mov
nop
mov
and
jp
lret
jg
lock
ljmp
ror
mov
arpl
mov
shrb
sbb
dec
and
loop
inc
pop
ret
xchg
into
inc
push
iret
adc
inc
adcl
outsb
bound
repz
adc
pop
xchg
sub
sahf
outsl
mov
dec
pop
push
jle
cli
daa
mov
pusha
or
or
or
stos
inc
loope
push
das
popa
jbe
data16
js
mov
sahf
into
xchg
cmp
incl
mov
mov
fsubrl
xor
mov
and
out
add
sbb
out
inc
test
outsl
inc
mov
add
cli
mov
je
arpl
add
out
insb
mov
shr
sbbl
enter
sbb
jecxz
inc
push
adc
cmc
not
dec
jl
mov
aaa
mov
lods
add
fadds
ret
in
cmp
inc
push
enter
test
mov
jnp
imul
fwait
imul
jecxz
mov
push
adc
add
mov
scas
mov
fnstsw
pop
fwait
daa
lods
dec
cmpsl
mov
add
sub
mov
xor
fimuls
sbb
pop
in
adc
or
test
dec
push
rclb
mov
jmp
mov
scas
sbb
fidivl
subl
inc
cmp
fadd
lcall
jae
adc
lret
dec
dec
insb
popa
fistpl
in
jne
aad
std
xchg
pop
loope
dec
pusha
imul
inc
cmp
cmpsl
lcall
push
jae
and
loope
xchg
add
pop
inc
test
jb
xchg
adc
fcmovu
sbb
repz
pop
testb
jle
inc
mov
or
or
fsubs
test
xchg
and
negb
ljmp
jl
xorb
lods
inc
cmp
mov
mov
std
cmp
loope
add
sahf
fdivrs
lcall
jae
xlat
inc
sub
ret
sbb
xor
or
jbe
xchg
cmp
sar
sbb
mov
or
lods
and
dec
push
popf
cmpsl
push
mov
mov
fisttpl
xchg
dec
mov
mov
fbld
xor
mov
stos
mov
negl
dec
pop
in
aas
jb
xchg
xchg
test
cwtl
add
xor
lahf
xchg
add
sbb
xchg
xchg
clc
das
das
aas
ficoms
and
loop
iret
jge
cmpsl
or
enter
mov
xchg
pop
pop
movsl
add
jb
inc
ret
test
push
xchg
es
pop
mov
icebp
pop
call
cmp
or
mul
adc
sub
push
jo
mov
or
and
fsubr
nop
shr
mov
mov
call
adc
cwtl
ret
jmp
je
mov
pusha
cmc
out
xor
cmp
jb
test
mov
or
fs
ss
mov
xchg
mov
pop
sbb
cmpl
mov
adc
xchg
cltd
and
cltd
sub
jmp
incl
stc
adc
cmp
notl
push
sub
loop
mov
sbb
repnz
add
sub
negb
inc
dec
js
scas
pop
lds
aaa
fwait
ljmp
adc
lahf
dec
jne
jnp
or
sbb
adc
jecxz
or
lea
xchg
test
jae
dec
and
aaa
jno
mov
lods
lods
jecxz
je
push
xlat
push
popf
cmp
js
lds
shr
iret
mov
xor
xor
outsl
popl
mov
lods
lret
nop
nop
popf
mov
sbb
adc
or
pop
mov
sub
outsl
push
mov
push
cmp
sbbb
fsubr
pop
ja
inc
cmc
idivl
cs
scas
cmpl
fstps
sbb
and
pop
mov
adc
push
xchg
sub
cld
loope
insl
cmp
lcall
push
cwtl
inc
inc
pop
scas
sbb
add
dec
stc
sub
fnstenv
cs
in
xchg
gs
test
dec
addr16
outsb
data16
in
loope
push
loope
int3
add
adc
ret
rcrl
jns
xor
std
xor
lea
outsb
out
lea
xor
mov
stos
sbb
cmpl
insb
cmpsb
loope
add
inc
jp
aas
into
loopne
jp
or
js
pop
andl
pop
pushf
push
ljmp
jg
pop
pushf
push
push
xchg
sub
iret
add
mov
popf
inc
sbb
lock
ja
pop
out
push
and
dec
mov
mov
push
into
bound
fdivrl
jecxz
or
rorl
mov
outsl
xchg
popa
push
lock
xor
xorl
movsl
or
out
data16
xchg
pop
in
xor
dec
lret
adc
outsb
testl
cld
sbb
jb
pop
aad
and
adc
push
ljmp
fs
pop
lcall
jne
push
pushf
mov
pushf
mov
lea
repnz
adc
testl
imul
add
and
dec
pop
insb
in
icebp
jne
aas
aaa
lods
lret
xchg
loopne
mov
mov
sub
inc
les
jmp
mov
sarl
jne
sbb
xchg
enter
subl
or
outsb
adc
inc
mov
pop
inc
push
jmp
cmpl
push
inc
cltd
xchg
mov
dec
push
dec
or
aas
ss
stos
iret
in
daa
imul
repz
dec
pushf
jae
sbb
lahf
in
jmp
sbb
fnstenv
sub
loope
sbb
push
icebp
fdivrl
out
or
mov
mov
inc
xchg
cld
inc
ret
cmpsb
es
test
jl
pop
inc
xchg
outsb
jno
push
push
in
fs
inc
scas
push
lock
mov
xor
push
mov
mov
sub
test
cmp
in
and
mov
push
mov
pop
jge
outsb
lcall
sbb
lcall
cmc
shl
test
inc
scas
mov
or
imul
lcall
fbld
mov
pop
fisubl
or
pop
decb
xchg
pop
mov
mov
cmp
ss
push
add
xor
in
std
xchg
mov
cltd
pop
adc
shrb
cs
shl
je
inc
lods
test
xchg
cmp
mov
adc
xchg
out
pop
outsb
jae
lock
mov
shlb
jge
mov
cmp
lret
mulb
and
lcall
scas
sbb
push
inc
daa
and
inc
and
xchg
cmp
sub
out
lret
outsl
stos
jno
jne
test
stos
js
pusha
ds
jg
stc
das
pop
add
xor
jns
xor
mov
imul
pop
and
push
aaa
mov
push
insb
outsb
sbb
ljmp
push
leave
lea
mov
popf
shl
ficomps
lret
push
xchg
jg
sub
aas
in
ds
or
ret
cmc
shrl
jmp
xchg
out
cmc
pusha
cmc
and
mov
insl
xchg
popa
xchg
sbb
xchg
xchg
cmp
pop
jecxz
jmp
add
push
mov
and
jmp
cmc
add
add
jae
push
sub
mov
insb
pop
jne
mov
xor
push
fisttpll
pusha
adc
inc
leave
cmpsb
sub
aad
or
dec
and
pop
into
es
sbb
jmp
insb
add
in
adc
lret
xor
in
mov
ja
call
adc
lea
push
dec
leave
orb
or
das
das
dec
sub
imul
push
or
loop
divb
ss
fwait
or
test
in
mov
js
ljmp
hlt
std
mov
rorb
dec
sbb
pop
subl
jns
cmp
jle
out
sbb
bound
mov
sbb
iret
std
clc
outsl
sbb
mov
sbb
sarl
mov
repz
or
lahf
in
and
xor
fidivrl
popa
cmc
mov
and
ret
sbb
stos
ret
std
xchg
xor
rcrb
xor
xor
sbb
dec
xor
xchg
loope
dec
pop
repz
or
add
das
mov
clc
sbb
push
cmpsb
jno
xchg
pop
test
cmp
push
lock
rclb
pop
into
xor
popf
cpuid
loope
repnz
cli
jns
push
out
jmp
jp
in
ret
call
xchg
call
push
in
push
pop
mov
sub
out
ss
xchg
inc
fidivrl
inc
inc
pop
pushf
mov
and
loop
sahf
dec
dec
out
loop
das
mov
dec
fiadds
cltd
push
out
mov
in
sti
or
sar
add
scas
xchg
repz
fists
mov
mov
in
movb
pop
aaa
jb
jle
out
dec
and
mov
shr
cmp
sbb
gs
cmp
mov
pop
fbstp
pushl
push
sbb
xchg
or
pop
push
sub
js
or
cmpsb
inc
lock
lock
fsts
prefetcht1
cli
pusha
cwtl
or
sub
mov
arpl
sbb
in
out
dec
ds
std
xor
jle
ljmp
int
xchg
xchg
fcompl
sub
xchg
cli
mov
mov
ficompl
cmp
rorl
rclb
jge
cltd
lods
in
jl
xlat
jns
lret
nop
outsb
in
sub
add
mov
pusha
pop
add
or
xchg
addr16
push
fisubrs
enter
pop
ja
out
aam
bound
sbb
filds
or
out
mov
rolb
lods
insl
ret
into
jb
xchg
bound
add
cmp
jmp
push
push
mov
adc
pop
and
and
pusha
jg
rclb
push
push
push
out
mov
jo
nop
aas
imul
mov
inc
addr16
call
filds
and
dec
int
xchg
daa
inc
mov
xor
cmpsl
pop
ljmp
lcall
push
fadds
neg
sarb
sub
pop
push
lea
sbb
sub
add
daa
fmull
leave
mov
and
push
les
mov
inc
pop
or
insb
xchg
and
sahf
cli
or
jbe
mov
jp
call
adc
adc
lahf
push
pop
addr16
xor
xchg
aaa
fwait
add
aas
xchg
popa
ss
pop
cmc
jl
jp
push
dec
fs
and
lock
push
inc
imul
cmp
jbe
scas
jge
mov
push
xchg
jnp
js
mov
lods
add
mov
dec
and
pop
and
inc
pop
call
adc
shlb
push
out
rcll
or
lods
add
test
push
int
shlb
repnz
xor
adc
ss
jle
js
sbb
test
aas
or
mov
inc
loopne
hlt
sub
icebp
dec
lahf
sarl
ljmp
cwtl
fs
cmpsb
imul
and
not
movsl
push
jo
out
outsb
stos
jno
sbb
add
pushl
scas
data16
xorl
dec
push
data16
into
xchg
inc
jge
add
mov
fldl
dec
aaa
ret
dec
xchg
sub
les
icebp
iret
enter
adc
imul
cltd
mov
or
sub
jl
outsb
cli
xor
or
mov
pop
push
stos
push
inc
fwait
clc
lcall
mov
les
or
outsb
test
pop
fadds
inc
test
pop
subl
xchg
jns
xchg
hlt
std
fstpt
into
sbb
fndisi(8087
imul
inc
je
das
inc
popf
pusha
adc
insb
bound
mov
dec
xchg
popa
sbb
jg
in
roll
jbe
jno
divl
out
mov
aad
loope
or
adc
jp
or
sub
mov
and
and
dec
jae
data16
lods
jne
dec
and
mov
fwait
inc
clc
hlt
push
sub
hlt
popa
nop
pop
inc
loopne
push
mov
dec
and
dec
mov
inc
popa
pop
enter
negl
xchg
movl
mov
xchg
enter
sub
lret
mov
xor
test
in
call
and
inc
sub
std
out
xor
lods
pop
push
int
fnstenv
add
lock
mov
jo
mov
xchg
test
cmpsb
rclb
fs
addr16
mov
or
outsl
push
repz
shll
loop
pop
pop
mov
xchg
cmp
push
gs
je
pop
ljmp
or
lods
adc
mov
add
xchg
das
call
jo
add
aad
adc
pop
jle
mov
mov
mov
jmp
jmp
sub
loop
inc
popa
arpl
xor
and
sbb
shll
xor
ljmp
xlat
dec
imul
inc
repnz
jecxz
pushf
fisttpl
orl
inc
lods
dec
xchg
pop
les
mov
mov
mov
xor
rorl
mov
add
fnstsw
mov
push
outsl
cltd
insl
mov
in
call
loope
fwait
nop
and
xchg
cmp
xchg
or
enter
lods
jbe
xor
aas
mov
inc
in
cwtl
pop
arpl
xor
pusha
ds
xlat
push
aaa
je
scas
mov
push
stos
add
data16
outsb
and
js
fwait
xor
lods
add
inc
aad
push
pop
cs
jecxz
mov
int
mov
adc
fdivrl
scas
stc
jecxz
insb
dec
jmpw
and
cltd
xchg
shll
xor
cwtl
call
dec
lock
hlt
aas
dec
mov
inc
mov
repz
stos
cmpb
ret
push
pop
dec
jmp
xor
std
jne
roll
insb
pop
outsl
cmp
popf
mov
fdivs
aas
cmpsb
push
mov
andb
and
roll
xchg
leave
lds
push
out
andb
jns
scas
mov
test
add
test
jno
je
nop
and
bound
data16
jb
lods
outsb
sbb
pop
fsubl
mov
jne
or
in
dec
stc
cmpsl
es
jne
jno
jno
dec
imul
mov
inc
push
push
dec
push
stos
stos
mov
insl
out
int3
in
push
or
jl
add
lahf
addl
fdivrs
sub
jns
sahf
jle
fisttps
dec
mov
cmpsb
bound
push
cwtl
mov
jbe
outsb
iret
ffree
clc
inc
sbb
jl
jne
daa
mov
cs
push
push
adc
xchg
loop
repz
cmp
push
cmp
or
push
dec
mov
shrl
nop
into
mov
cmp
mov
popf
jmp
jb
mov
fwait
mov
lea
outsb
pop
mov
xchg
sub
push
add
push
ret
dec
pop
aam
add
dec
insl
test
jae
ljmp
xchg
sbbb
sub
enter
xor
cmpsl
inc
push
int3
jle
mov
dec
repz
push
iret
gs
sub
push
fsubr
push
lods
mov
jne
inc
subl
in
or
mov
mov
jp
add
repnz
scas
sbb
pop
pop
dec
loope
inc
cmpsb
dec
rcll
jne
call
and
repnz
xor
xchg
clc
shll
lock
popf
jo
jne
xor
ds
movsb
mov
mov
cli
and
or
gs
adc
into
aad
mov
add
push
dec
inc
jle
mov
fsts
leave
push
out
test
adc
lods
xchg
jae
or
imul
je
sub
fnsave
xor
cs
popf
jp
in
pop
mov
and
mov
stc
xchg
mov
jne
sbb
repz
bound
jnp
inc
in
mov
lods
iret
stc
in
sub
test
insb
inc
mov
mov
xchg
jp
fldl
mov
adc
xor
hlt
mov
add
xor
ret
mov
pop
fstpt
rcrl
mov
fs
addb
aad
dec
jmp
xchg
sub
into
jle
cmp
cmp
lds
test
and
cmp
ja
std
mov
pop
je
sbb
into
movsl
repz
loope
js
incl
sahf
adc
scas
lret
xchg
fisubrs
cmp
inc
xchg
iret
cltd
fistpl
jno
out
sbb
leave
sub
test
popa
push
pop
ret
cmp
or
filds
shrl
xor
push
sub
and
xchg
sbb
or
xor
ret
aam
mov
aas
sub
aas
sbb
cmp
iret
pop
jg
jl
or
or
call
int3
pop
bound
fstp
pop
push
adc
fprem
cltd
jae
and
std
in
cmp
cltd
cmpl
xchg
push
jne
sbb
into
sub
out
jmp
inc
sarl
push
lahf
gs
rol
rorl
fwait
lcall
xor
jge
or
jl
cli
pop
push
hlt
jge
ss
jg
addl
mov
cmp
xor
mov
fs
nop
mov
cmp
xlat
mov
je
sbb
bound
pop
inc
aas
fcomip
ror
testb
cmpsb
or
pushf
pop
sbb
push
xchg
push
pop
xor
mov
sub
mov
scas
outsl
cltd
ret
dec
or
bound
lret
repnz
das
lods
cmpsl
test
cmpsb
dec
and
mov
xor
aas
mov
xor
or
or
inc
cmp
push
mov
test
rclb
daa
ret
and
fisubrs
jmp
push
xchg
clc
sub
icebp
add
xchg
aas
push
rcll
test
pop
sbb
std
rol
xchg
sbb
aam
inc
jge
rcrb
xor
rolb
jbe
pop
mov
adc
jbe
js
arpl
repz
mov
inc
add
jmp
and
bound
imul
stc
dec
fstpl
push
mov
adcl
ds
test
jge
dec
jno
xlat
movsl
pop
cmp
mov
setge
jp
leave
sub
fiaddl
filds
outsb
and
pushf
push
cltd
xor
push
sbb
test
cmp
jl
aam
fcmovnb
sbb
out
ja
daa
jns
pop
add
xchg
ja
js
je
leave
ljmp
aaa
and
loopne
imul
popf
or
push
int3
inc
adc
in
popa
int3
cmpsl
inc
pop
jp
iret
enter
scas
adc
sbb
cmp
lea
arpl
xor
test
pop
adc
mov
loop
mov
call
push
jae
arpl
neg
fdivrl
xor
mov
shrb
ja
jo
fisubrl
int3
mov
add
int3
mov
mov
rclb
inc
test
push
stos
mov
shlb
icebp
pop
movsb
xor
cmp
mov
jno
cmp
inc
or
dec
xchg
je
mov
adc
sbb
les
pop
mov
popa
inc
push
xor
cmp
movsl
sbb
out
inc
sbb
idiv
aas
mov
mov
sub
inc
pusha
adc
mov
jle
mov
leave
mov
mov
repnz
faddl
inc
sti
adc
xchg
aam
push
pop
push
lds
pop
xchg
fidivrs
cs
fs
add
inc
push
jnp
outsl
sub
push
cs
sub
stos
add
fdivrs
add
cwtl
xor
adc
jbe
subl
imul
pusha
leave
loopne
sub
pop
repz
mov
ret
pop
fistl
sbb
add
inc
into
rol
mov
jno
sbb
lret
faddp
sbb
pop
movsl
imull
xor
push
add
fs
xor
loopne
sub
jl
aas
fcoml
stc
cltd
sub
cmpsb
gs
mov
cld
cmp
sbbb
jbe
mov
sub
setno
pusha
pop
int
insb
inc
mov
push
xchg
lret
sub
push
xor
cli
insb
pushf
fadds
mov
ds
add
xsave
adc
test
push
pop
and
adc
dec
inc
jo
cmp
test
mov
sub
pop
nop
dec
mov
cmp
testl
fldcw
jg
mov
pop
inc
mov
or
mov
loop
mov
mov
or
aam
fisubrs
push
repz
imul
or
xor
jp
mov
jno
mov
xchg
insl
imul
and
dec
pop
outsl
les
add
xor
aaa
stc
ror
push
add
sub
ja
test
dec
dec
div
mov
pop
cmp
insb
sbb
rorb
jg
jl
sub
test
mov
pop
lds
imul
testl
or
xchg
rcrl
lahf
pusha
leave
mov
subb
inc
repnz
aas
outsl
into
test
shl
and
stc
xchg
fsubrs
add
cmpsb
and
and
outsl
ficoms
loope
and
inc
mov
inc
imulb
jbe
mov
pop
mov
mov
fs
mov
add
mov
aas
sbb
shlb
sub
cmp
jbe
mov
add
shll
data16
mov
fdivr
dec
sub
and
push
add
in
rol
stc
fists
fcomp
lret
ficoms
js
lret
test
int3
data16
xor
cmc
push
sub
cmp
nop
dec
cmp
xchg
sub
js
stos
push
loope
andb
or
sbb
sbb
xchg
call
scas
sub
popf
test
mov
mov
shrb
jl
adc
xor
hlt
js
popf
test
repnz
cwtl
stc
sbb
lcall
push
and
sbb
inc
mov
or
adc
loopne
ja
xchg
pop
ljmp
pop
sbb
mov
mov
pusha
mov
push
add
lahf
ficomps
and
movsl
or
daa
ss
ds
cmp
adc
mov
dec
leave
mov
shlb
sahf
push
cs
ds
icebp
mov
mov
adc
mov
inc
jns
mov
mov
ffree
mov
inc
jbe
dec
inc
jnp
mov
inc
test
sbb
push
imul
xor
es
test
xor
ficomps
inc
andb
js
jecxz
dec
repz
lret
sbb
cmp
subl
movsl
add
ret
xchg
push
mov
and
sub
movsl
stos
jge
fdivp
and
pop
cs
inc
popf
add
icebp
jo
pop
mov
dec
and
pusha
in
mov
sub
and
push
mov
add
and
cmp
mov
mov
mov
jmp
add
js
push
lahf
adc
dec
jp
inc
hlt
clc
add
in
jb
leave
jmp
add
push
xor
bound
pop
mov
insb
js
jle
andb
outsl
in
pop
mov
sahf
push
mov
fcompl
cltd
pop
add
stc
mov
xchg
cmp
aam
pop
and
dec
inc
mov
in
lock
or
sub
jecxz
ret
or
cmp
pusha
cmpsb
ljmp
jl
in
rcrb
test
cmpsl
jae
add
mov
cmc
movsl
cmp
inc
bound
jmp
add
adc
mov
jns
negl
push
lret
pop
shl
test
mov
inc
movl
xchg
push
push
jecxz
pop
lock
push
cltd
nop
gs
jmp
mov
mov
jb
or
ss
das
xor
rclb
fwait
sti
xor
xchg
mov
ss
xor
xchg
test
jl
adc
push
jp
lcall
call
dec
xor
and
jl
fwait
imul
insl
fxch
movsl
je
adc
sbbb
inc
rcl
cwtl
stos
pop
jecxz
inc
iret
sti
pop
mov
clts
data16
add
push
insb
lcall
push
repnz
out
dec
call
ja
sbb
adc
negb
adc
lods
aam
bound
data16
sub
mov
leave
sbb
cli
xchg
gs
fildll
inc
mov
jnp
fmuls
mov
xor
stc
into
inc
shll
loopne
cs
lock
mov
cmpl
xor
daa
sahf
xchg
sbb
adc
sub
xorb
rcl
movsb
and
aad
fwait
fwait
loopne
das
clc
pop
pop
popf
adc
mov
in
lea
xchg
rorl
mov
mov
xchg
lea
mov
dec
test
mov
jmp
lock
aaa
jns
and
mov
lret
sub
push
push
xchg
leave
or
je
mov
sar
lea
hlt
push
sbb
cmp
xchg
push
arpl
icebp
cltd
jl
jmp
sahf
jmp
push
hlt
lret
cmp
fs
mov
fcoml
push
push
clc
push
or
dec
cwtl
mov
mov
sbb
push
dec
adc
inc
inc
std
les
test
xchg
scas
enter
pop
jle
jae
jno
push
pop
pop
out
cmp
cli
push
outsb
mov
ljmp
sahf
pop
popa
sub
outsb
ja
test
test
jns
sbb
jns
or
jecxz
jnp
mov
add
jno
xchg
push
xor
test
xlat
sbb
pop
rclb
pinsrw
mov
mov
and
sbb
sub
push
in
insb
mov
loopne
and
stos
cmpsb
mov
push
mulb
sbb
and
mov
adc
mov
imul
idiv
and
loopne
adc
lret
iret
fistl
sbb
pop
inc
pop
insl
aas
cltd
xor
popf
cmp
adc
dec
out
les
test
xor
aam
loope
inc
xor
dec
or
imul
lods
lret
jmp
xchg
imul
xchg
outsb
xchg
iret
push
and
je
cmp
jle
out
rclb
ljmp
arpl
mov
stos
and
sahf
or
sbb
addr16
mov
mov
test
or
cmp
add
aaa
cltd
lods
je
adc
in
ljmp
mov
xchg
fwait
jmp
ror
and
call
and
int3
in
out
aam
and
and
aam
cmp
insb
lods
flds
pop
mov
sbb
popa
std
jmp
sar
call
inc
lret
ljmp
and
jo
aad
jne
push
cmp
xchg
cltd
mov
mov
push
push
adc
jo
es
or
fprem1
xor
jnp
fs
pop
daa
in
daa
rolb
or
xchg
or
scas
out
pop
int
sbb
je
add
xchg
call
jl
mov
dec
pop
fildll
rcll
inc
fsts
loop
jecxz
and
inc
xchg
test
xor
sbb
cmp
pop
das
js
lock
sub
dec
push
adc
mov
jecxz
xchg
lock
in
js
stc
or
add
cli
dec
jo
lea
push
pop
sbb
adc
sub
aas
mov
std
imul
out
or
xor
or
inc
in
jecxz
iret
mov
push
xchg
call
ss
iret
jl
es
fadds
sub
aam
das
and
mov
test
and
cwtl
cmp
and
lahf
test
jle
cli
mov
sbb
push
pop
ficompl
dec
cmp
dec
repz
mov
js
into
retw
stos
xchg
push
cmc
hlt
ret
bound
and
jl
push
and
pop
jne
jb
mov
xor
sub
dec
xchg
xor
enter
mov
lea
or
fimull
cmpsl
and
out
hlt
add
insl
add
mov
sti
sarb
jle
or
loope
lcall
lcall
cwtl
nop
jnp
aad
inc
dec
inc
inc
and
daa
std
mov
test
inc
jg
cwtl
cmp
xlat
push
daa
mov
adc
xor
and
in
sbb
add
stc
sub
jno
pushf
mov
xchg
lret
mov
imul
mov
push
jmp
imul
adc
inc
sbb
shrb
push
and
mov
sbb
sbb
pop
mulps
sbb
dec
test
out
fistpl
pcmpgtw
mov
aad
push
dec
or
mov
adc
mov
sbb
pop
push
ret
push
gs
add
inc
and
loop
xor
dec
jo
outsb
sbb
cld
dec
push
pop
frstor
push
inc
xor
and
add
cmp
mov
mov
jbe
dec
addb
inc
mov
xor
mov
rclb
cmp
hlt
xor
dec
cltd
or
sbb
shl
and
xchg
clc
inc
mov
push
and
test
orb
fwait
push
test
cli
pop
sbb
xchg
xchg
sub
sbb
mov
bound
enter
jbe
mov
mov
das
cmp
mov
paddw
push
aaa
cmc
imul
mov
and
mov
pop
and
dec
dec
ss
jne
xor
stc
inc
add
pop
ror
repz
push
idivb
popl
cmp
adcl
add
mov
cmp
movsl
jl
jmp
push
xor
fisttps
jno
xchg
mov
mov
clc
fisubrl
lods
push
cmp
mov
push
xor
sbb
cmpsb
push
mov
ret
xchg
or
bound
pop
fwait
ret
jbe
add
xor
out
loope
dec
cmp
jle
je
aaa
lods
jg
mov
fdivrs
mov
out
inc
xchg
jl
dec
add
or
push
or
std
leave
hlt
xor
call
insl
or
inc
xchg
out
add
jecxz
not
cmp
inc
in
mov
ret
xchg
jae
scas
add
xchg
xlat
jmp
xor
push
cmc
imul
addr16
mov
cmp
outsl
dec
xor
scas
outsb
pop
mov
sahf
call
inc
and
mov
jns
rol
sarl
int3
cmp
mov
inc
movsw
and
pop
repz
cs
call
adc
pushl
and
mov
add
addr16
repz
or
and
and
call
bound
push
test
icebp
je
cld
int
stos
mov
testb
mov
cmpsb
push
rcll
test
aad
push
adc
leave
shl
outsl
and
enter
jae
aad
scas
adc
js
out
and
sti
lds
xchg
xchg
cmp
ss
mov
or
cmpsl
pop
pop
rcll
and
ss
or
out
enter
test
xor
or
inc
bound
sbb
dec
cmpb
js
push
xchg
dec
xor
cmp
ljmp
pop
cmp
js
fldt
mov
xchg
cmpsb
cs
add
mov
icebp
hlt
orb
mov
sbb
fbld
mov
cld
xchg
gs
jbe
ds
test
int
jge
mov
mov
jle
ret
out
mov
les
js
stos
fstpt
cltd
xor
add
in
jecxz
nop
add
lea
mov
adc
mov
xor
fistps
jae
dec
inc
pop
fs
inc
xchg
iret
aam
dec
mov
dec
sub
mov
push
cmp
test
lods
cmp
cli
push
insl
lods
lods
and
jns
sbb
sub
pushf
inc
pusha
cmp
cmp
in
shr
gs
pop
pop
dec
push
das
insl
pop
test
repz
mov
xchg
inc
lods
mov
xchg
mov
mov
test
mov
jle
aas
sbb
test
mov
sbb
or
stos
adc
push
or
xchg
ret
adc
sahf
cmp
push
repz
dec
mov
push
inc
data16
jmp
push
jmp
push
pop
jno
stos
cmc
pop
outsl
mov
inc
in
repz
mov
inc
pop
enter
out
lods
stos
ds
rorl
add
pushf
paddw
push
stos
inc
fs
fucompp
pop
push
js
sahf
mov
jmp
loope
test
sbb
cltd
cmpsl
out
movb
cld
jp
inc
and
jmp
cli
xchg
mov
mov
jle
lcall
jle
scas
push
ret
frstor
jo
das
jmp
arpl
xchg
std
sub
sbb
sub
out
mov
movsb
or
xor
cmp
or
xor
push
ljmp
mov
mov
dec
out
je
cwtl
push
cmc
shll
pop
adc
cmp
adc
mov
shll
lods
pusha
lds
pop
mov
pop
add
pop
push
jmp
pusha
arpl
jne
or
mov
test
in
call
xor
int
pop
ficompl
mov
in
jl
cmp
and
aaa
mull
aas
xor
mov
fnstsw
insl
lahf
insb
push
pop
pop
pop
scas
ljmp
xor
jmp
pop
fwait
xchg
cltd
pop
push
loope
and
leave
jo
shll
mov
insl
fimuls
xor
adc
sahf
adc
or
jae
out
mov
mov
add
mov
cmp
pop
icebp
xor
mov
or
xor
popf
rcl
xchg
shrb
bound
aam
jl
popa
or
add
pop
or
sbb
rclb
es
enter
or
adc
in
mov
xlat
lahf
ret
mov
mov
mov
xchg
and
mov
adc
shll
sbb
clc
and
iret
mov
and
mov
cwtl
mov
pop
lods
rorl
xlat
xchg
add
inc
cwtl
cld
ss
in
movb
das
jno
hlt
pop
imul
pop
dec
imul
in
push
add
jmp
jae
jnp
insl
xor
add
and
pop
pop
pop
push
adc
and
leave
mov
mov
jb
push
mov
data16
inc
inc
mov
aas
imul
jbe
push
dec
jge
adc
icebp
or
fisubrs
lock
push
adc
out
mov
push
and
xchg
add
mov
inc
inc
dec
push
jp
push
cwtl
stos
movb
fildl
fsubs
orb
xchg
pop
jne
aas
in
shrl
cmpsl
aaa
push
and
xor
push
inc
mov
xchg
test
call
ljmp
in
fcmovnb
lcall
sarl
icebp
stc
in
push
inc
je
stc
mov
push
sbb
adc
mov
in
jae
push
xchg
shlb
je
xchg
punpcklbw
loop
hlt
mov
sub
js
les
fidivrs
jmp
push
lds
lds
rcll
adc
mov
popf
mov
mov
dec
imul
dec
add
push
daa
int
mov
push
xor
add
push
push
lods
addr16
outsb
enter
and
jl
inc
add
cmp
push
arpl
orl
push
xor
andb
mov
shll
mov
add
push
or
test
cmp
pop
aam
dec
loopne
push
dec
les
test
ficoml
mov
xchg
loop
cmp
sbbl
jle
jmp
pop
in
jne
in
adc
lret
jne
cmp
movsb
jge
sbb
mov
hlt
dec
dec
movsl
das
test
neg
inc
jl
xchg
clc
or
in
xor
test
ret
push
push
decl
insb
lods
das
out
ljmp
ret
add
int
out
ret
fs
je
add
ficompl
and
jb
or
call
pop
sti
xchg
mov
loop
and
int3
js
pop
pusha
jge
jecxz
hlt
push
mov
in
sbb
pop
xchg
mov
push
icebp
insl
imulb
push
jmp
jmp
ret
rorl
movsl
lret
xchg
jg
mov
ds
dec
inc
pop
add
ss
ds
mov
negb
inc
mov
lods
cmp
mov
addl
insl
push
test
xchg
fldenv
adcl
shll
xor
leave
sbb
bound
and
push
leave
outsl
and
or
fstps
xchg
hlt
xchg
jmp
and
xchg
cmp
push
lock
adc
loope
nop
jbe
inc
sbb
sbb
and
cmp
or
icebp
test
jg
add
or
imul
enter
out
fcoms
xchg
ficoms
adc
movsb
hlt
popa
mov
mov
inc
andb
mov
mov
shlb
movsb
jg
lcall
push
sbb
mov
push
push
inc
mov
sbbl
jne
xchg
test
sbb
xor
push
outsl
xchg
jns
adc
and
ret
fidivs
xchg
test
xlat
jb
push
rcrl
nop
cs
jmp
rorl
jle
stos
jb
xor
out
in
hlt
cmpsb
push
jp
pop
push
mov
and
xor
imul
hlt
push
or
lret
dec
test
in
enter
test
cmc
add
iret
lods
loopne
sbb
iret
push
push
mov
sbbl
loopne
mov
ret
cmp
icebp
xor
xchg
lods
cli
adc
dec
stos
shrl
dec
xchg
xchg
pop
scas
in
sub
das
sarb
sbb
jns
xchg
movsb
jle
rolb
data16
jns
aas
inc
ror
jo
sbb
imul
mov
sbb
pop
test
cs
enter
jb
sbb
pop
aas
and
push
sub
dec
inc
lock
inc
je
jg
gs
inc
icebp
call
jno
imul
jp
add
lods
lea
iret
cmp
jl
bound
test
mov
hlt
inc
push
int
aad
cmp
leave
or
mov
mov
imull
push
fnstenv
sbb
add
lret
xor
dec
mov
gs
ss
hlt
enter
lods
rclb
incl
xchg
shrb
pop
outsb
and
ss
test
cwtl
mov
inc
nop
push
cmp
dec
inc
and
fld
and
lret
arpl
jl
pop
hlt
divl
mov
ds
aaa
test
test
push
pusha
adc
add
xchg
or
xor
adc
adc
movsb
mov
pop
stc
lods
sub
out
push
call
sbbb
stc
and
pop
ds
lock
mov
mov
inc
and
fbld
xchg
jnp
pop
loop
mov
lds
dec
jle
mov
or
ret
enter
push
scas
dec
pushf
jo
xchg
dec
pop
loope
into
loop
fwait
sub
or
push
imul
mov
movb
push
xor
enter
pop
pop
mov
iret
pusha
ret
lret
je
push
ret
clc
test
lock
cmp
mov
ret
test
aas
scas
insb
js
adc
nop
push
and
ret
movsl
push
sahf
ljmp
addr16
cwtl
mov
repnz
add
push
das
sub
inc
adc
mov
test
nop
out
icebp
xor
mov
sti
cmp
rcrb
xor
insl
sub
pop
sbbl
jb
and
stos
dec
dec
out
push
inc
mov
pusha
jecxz
test
call
cmp
inc
rolb
shll
in
inc
pop
pop
loope,pn
loop
and
bound
xchg
sbb
cltd
xlat
hlt
rcll
sti
inc
mov
mov
push
push
xchg
rcrl
inc
jecxz
inc
sbb
fs
inc
addl
test
and
out
pop
subb
scas
sub
clc
loope
push
mov
jo
lcall
call
sahf
push
aad
add
shll
xor
and
add
das
movsb
test
cmp
push
in
mov
loop
dec
scas
aad
mov
cltd
pop
repnz
pushf
adc
xchg
mov
sub
out
cmpb
cmp
enter
je
inc
xchg
or
push
in
push
push
ss
jp
sti
mov
scas
dec
inc
push
jle
addr16
int3
cmp
in
mov
bound
adc
inc
inc
pop
mov
in
sti
movsb
mov
into
mov
dec
leave
fcom
dec
sub
pop
push
xchg
popa
sub
jge
cmp
mov
stos
test
jno
dec
adc
jbe
push
fnstsw
cltd
jns
or
pushf
stc
cmp
jne
cmpb
pop
jge
pushl
enter
ds
add
das
das
shlb
dec
cmp
xchg
movsl
inc
movsl
outsl
cld
outsl
add
iret
es
loop
xor
sti
mov
int
and
cs
pop
mov
insl
mov
aas
lea
out
or
push
inc
cmp
stc
cld
sbb
mov
lods
stc
or
sarb
pop
outsb
int3
or
leave
pop
mov
lods
inc
enter
or
xchg
int
xchg
fcomps
or
leave
iret
ret
ret
lods
in
imul
lods
mov
repnz
stos
pop
inc
pop
imul
xchg
jae
je
ljmp
dec
int
repnz
add
scas
test
test
add
dec
pushf
loopne
movsl
add
mov
pop
lea
sub
and
ljmp
push
lea
cmc
pop
sti
bound
fcoms
sbb
pushf
jae
incl
andl
mov
ret
notl
sub
sub
sbb
fidivs
sbb
xchg
insl
outsl
out
sub
or
xchg
adcl
sub
js
pop
mov
icebp
sbb
mov
push
cwtl
cmc
les
add
inc
scas
loope
jo
xor
pop
repz
pusha
icebp
push
push
mov
xchg
or
add
jmp
pop
adc
ret
jns
lods
pop
je
test
dec
neg
add
adc
mov
les
cmp
jge
push
orl
jae
loop
cmp
mov
lahf
fldenv
sbb
cmpsl
push
push
pop
out
int3
jno
pop
rcrl
aad
pop
and
or
mov
aaa
mov
not
test
jle
inc
xchg
or
std
sub
and
cmp
dec
movsl
jp
in
std
push
mov
stos
jo
mov
adc
mov
or
cmp
push
in
decb
mov
jne
pushf
pop
bound
sahf
sbb
xlat
loopne
cmp
mov
lods
push
add
mov
fsub
leave
or
mov
xor
jp
adc
mov
ds
dec
jmp
inc
js
ljmp
cs
cltd
insl
pop
xchg
pop
negl
call
shll
mov
out
mov
rorl
inc
xchg
fmulp
cmc
lods
dec
adc
jle
jns
cmpsl
enter
dec
in
cld
test
rorl
cmp
pop
out
mull
adcb
pop
movsl
fsubrl
mov
lret
pop
out
addr16
jle
pushf
mov
mov
and
push
in
pusha
mov
mov
pop
adc
lds
fdecstp
and
fdivrl
gs
mov
or
dec
add
or
mov
lret
dec
push
xor
mov
rorb
dec
adc
inc
push
popf
popf
aam
mov
loope
les
movsl
ljmp
insb
add
out
outsl
mov
shll
mov
sbb
in
shll
mov
mov
pop
loop
ret
lea
mov
pop
loop
xor
pop
cmc
xor
or
adc
je
shlb
orb
enter
test
jnp
xchg
iret
mov
pushf
popf
ss
push
xor
xchg
add
popa
mov
push
in
mov
es
and
jnp
mov
xor
xchg
sub
jge
fisubrs
cmp
sub
js
scas
pushf
lcall
xchg
push
rolb
pop
cmp
sbb
inc
push
mov
pop
or
lods
div
and
loope
mov
pop
mov
push
xor
cmp
pop
in
xchg
cmc
inc
andl
adc
add
push
fnstsw
cwtl
push
lock
jmp
shlb
jb
pop
cmp
xchg
popf
cmp
aas
iret
mov
lds
inc
cmpsl
jne
jne
out
inc
xchg
call
aad
ret
mov
pushf
fs
cmp
push
xor
rcrl
xor
js
cmp
push
fsubl
fmul
je
jbe
push
adc
cltd
repz
xlat
lea
loop
mov
outsl
imul
int
into
sbb
or
pop
fistl
xor
subl
stos
stc
sbb
adc
lcall
mov
sbb
cmp
jmp
pop
xor
pop
ljmp
sti
pop
sbb
test
icebp
sti
or
imul
mov
cmpsl
pop
cmp
fidivs
popa
sti
adc
lahf
fldcw
sbb
or
insl
sar
lods
or
loop
and
push
cmpsb
in
lahf
cli
jmp
add
stos
pop
inc
mov
and
das
bound
pop
add
pop
repnz
enter
jne
adc
cmp
sbb
repz
push
adc
test
cmp
repnz
mov
mov
jp
ret
sahf
pop
lret
xor
mov
hlt
or
xchg
xchg
pop
jle
stos
int
sti
mov
cmp
mov
aad
xchg
pop
and
repz
mov
xlat
cmpsb
int
jge
ja
out
clc
or
inc
test
int
lods
jle
inc
test
cmp
pop
insl
popa
mov
flds
fbstp
cmp
push
xchg
dec
push
or
inc
add
aaa
add
cmp
jl
push
jb
jbe
mov
ja
gs
xchg
pushf
jae
jo
into
sub
sub
push
mov
or
push
sub
cmp
rorl
fisubrl
cmpsl
lret
repnz
stos
das
rol
shl
push
or
lods
mov
xor
ret
mov
pop
pop
ljmp
dec
enter
bound
icebp
and
mov
stos
test
sbb
inc
jb
shll
mov
pop
daa
jae
mov
aam
imul
bound
xchg
stos
or
pop
or
mov
andb
push
movl
dec
jge
rcll
in
int
sub
cld
std
ja
shlb
jb
ds
mov
lea
mov
jne
aaa
sub
and
movsb
sbb
int
rorb
jg
cmc
mov
repz
movsb
cltd
inc
test
pop
fldt
scas
pmulhw
ds
aas
pop
mov
cli
repz
testl
dec
gs
mov
push
sbb
stos
testb
insl
gs
push
fnstsw
cmpb
push
sarb
cmp
pop
cmp
les
cs
subb
ja
jmp
mov
add
lods
mov
mov
lods
andb
mov
dec
sbb
cli
outsl
xchg
idivb
push
dec
inc
cmp
in
push
or
mov
ss
lret
xchg
mov
mov
mov
xor
add
push
cmpsl
fcomip
mov
adc
adc
lock
aas
cmpsl
add
push
bound
push
mov
push
cmc
ja
pop
repnz
scas
xlat
mov
stos
mov
lret
adc
filds
sysret
imul
out
in
enter
jmp
pop
pop
in
aad
xchg
mov
sub
cmpsl
or
jbe
xor
sbb
cmp
in
jb
or
sahf
sbb
inc
push
mov
dec
test
mov
sbb
movl
push
cmp
adc
dec
pushf
dec
sub
mov
rcl
mov
imul
mov
mov
sub
sar
cmc
outsl
xor
sbb
pop
out
cmpsl
mov
jmp
mov
cmp
and
cmpsl
xchg
sahf
mov
shrb
jl
pop
sbb
je
fs
sbb
pop
or
or
cmpsl
fsts
fisubrl
js
add
cmpsl
lret
sub
jne
pusha
jmp
insb
in
loop
sub
clts
in
adc
movzbl
dec
cltd
cmp
cmpsl
insl
adc
es
mov
or
pop
daa
cmp
pop
lcall
push
addr16
cmpsb
lcall
push
ret
jo
dec
or
adc
mov
enter
pusha
in
out
xchg
mov
xorl
dec
leave
ds
jne
or
xchg
cs
test
pop
mov
jo
aaa
in
add
pushf
add
add
pop
cmp
fs
add
aas
cltd
sub
sub
aaa
stc
mov
cmpsb
cwtl
stos
data16
xchg
adc
jae
or
dec
pop
sahf
dec
mov
jp
repz
inc
pop
cli
dec
jle
xor
jb
or
cwtl
pop
int3
sahf
loopne
pop
outsb
xchg
leave
dec
mov
xchg
adc
shlb
ds
sub
pop
xlat
cmpl
mov
aad
iret
mov
mov
fwait
push
mov
mov
imul
inc
popa
fcoms
mov
adc
nop
push
js
push
inc
sub
lret
push
loopne
or
pop
sub
push
sbb
cmpb
pop
outsb
pop
cltd
dec
adc
or
std
xchg
or
in
jp
adc
sarl
and
sbb
cs
lret
add
adc
pop
and
cmpsb
aas
and
in
mov
push
je
mov
js
pop
sbb
test
ja
push
gs
loope
fdivr
fcompl
les
outsl
cmp
imul
aam
xchg
les
push
scas
lcall
adc
ljmp
icebp
sbb
outsl
mov
xchg
insb
mov
cmp
xchg
pop
cmpsl
nop
ljmp
sbb
mov
lcall
mov
jecxz
xchg
repnz
xrelease
mov
aaa
sub
sub
inc
jbe
outsb
add
inc
push
pop
or
jb
test
add
or
imul
hlt
jb
cli
sub
sbb
fidivrl
enter
imul
lea
dec
push
addr16
or
pop
xchg
jbe
outsl
xor
cmp
test
nop
or
pop
xchg
icebp
pop
fldt
int
aaa
fcomps
fsubs
mov
push
add
or
inc
mov
mov
mov
ja
in
fs
sbb
fs
lret
cmc
out
xor
sbb
xchg
ret
data16
jnp,pn
cmp
int
lea
subl
out
adc
lods
jmp
add
into
fisttpll
push
adcl
es
test
jae
ds
sub
mov
loop
lods
or
test
xlat
mov
int3
pop
jnp
icebp
cmp
dec
push
ja
mov
jnp
in
sbbb
pop
xlat
out
and
push
fldenv
pop
add
cli
lcall
xor
jge
dec
inc
ret
rcl
xor
or
repnz
fcmovnb
popa
insl
lock
dec
imul
jbe
push
pop
xor
jmp
xlat
push
ret
mov
mov
push
inc
jo
pusha
inc
inc
popf
dec
sbb
insl
call
into
loope
sbb
and
inc
adc
mov
xchg
enter
xchg
stos
cmp
mov
add
mov
lret
inc
in
ja
dec
in
push
fnstcw
fbld
data16
test
xor
xlat
repz
mov
lods
dec
pop
inc
lret
mov
mov
cmp
jb
das
xorl
loopne
imul
jnp
adc
aaa
pop
mov
xchg
fcompl
fucom
out
out
pop
jl
and
cmp
jecxz
sahf
push
shlb
pop
lea
iret
dec
sti
push
mov
inc
dec
push
sub
cmpsb
push
and
js
aas
out
fdivr
pusha
inc
xlat
and
mov
out
scas
scas
mov
sbb
xchg
inc
jle
push
inc
sbbl
inc
inc
add
dec
inc
add
or
adc
jne
lods
ret
or
push
jge
fcmovne
das
incb
enter
mov
addl
push
sbb
rorb
loop
mov
adc
arpl
out
xchg
lahf
dec
jmp
rol
or
in
dec
inc
adc
xchg
lahf
dec
js
jne
out
dec
mov
movsb
fisubl
test
movsl
test
add
iret
or
and
scas
push
ret
xchg
jnp
jae
mov
lahf
mov
scas
mov
bound
mov
push
shld
add
push
lcall
call
mov
push
test
mov
pop
orb
or
cwtl
xor
clc
repnz
sbb
dec
and
enter
or
pusha
test
rorb
call
adcb
pop
mov
add
mov
mov
mov
sbb
pop
mov
xor
mov
and
inc
jno
pusha
fs
ja
inc
xor
and
shl
jo
add
add
mov
movsb
jp
and
pop
mov
cmp
and
adcl
shlb
jge
push
jmp
jne
aad
fidivrs
hlt
jmp
sarb
std
sbb
aas
nop
vpshufhw
jnp
repnz
sbb
and
dec
xchg
mov
mov
xor
and
scas
xchg
loop
mov
xchg
movsb
lret
ds
int3
xchg
movsl
aam
mov
int3
jnp
stos
sbb
je
les
mov
or
jge
xor
or
shr
cmp
rol
inc
andl
jne
std
jns
xchg
pop
push
aas
faddl
inc
pop
cmp
sub
mov
jae
mov
popa
roll
mov
push
dec
sub
movsb
push
adc
syscall
pop
mov
rcrl
inc
mov
sub
shl
lret
sub
jle
mov
dec
sub
mov
xchg
xor
shll
cmp
fmuls
scas
addb
sub
jbe
movsb
sbb
fnstsw
dec
or
mov
shlb
or
jne
xor
stos
cwtl
jge
insl
add
inc
stc
aaa
and
jmp
repz
inc
mov
outsl
and
test
lock
pop
rcll
mov
mov
aam
cltd
mov
push
jo
idivl
insb
xchg
mov
mov
shrl
sbb
sahf
mull
xor
pop
lods
xchg
jae
in
mov
jne
adc
ja
push
in
mov
fsubl
jg
cmp
inc
loope
popa
sarl
stos
nop
imul
shr
xchg
pop
push
adc
sbb
jb
leave
call
fs
stos
mov
in
ret
aaa
leave
sub
mov
orl
les
xor
ja
fstpl
cmpsb
mov
xor
fcomip
mov
inc
pop
dec
test
xor
jge
push
into
mov
lock
popa
es
lds
imul
mov
fbld
inc
cmc
pop
and
pop
pop
pusha
cmp
outsb
test
cwtl
inc
or
mov
mov
ror
repz
xchg
aaa
sub
and
jb
les
jne
int3
and
test
ja
jecxz
aas
pop
push
insl
hlt
enter
push
mov
ror
call
lcall
mov
insb
or
mov
jae
aad
push
aad
push
stc
jo
sub
jo
lret
outsb
int3
pushf
flds
cmpsl
les
xchg
pushf
subl
popa
and
stos
in
jae,pn
add
adc
imul
out
subl
mov
push
mov
in
nop
cmp
iret
cmpsl
or
pop
cmp
lcall
xor
jl
cmp
mov
dec
pop
adc
fimuls
push
cmp
dec
jno
push
jecxz
cmp
cli
pop
subl
mov
shll
pop
cmpl
push
int
xor
push
pop
cld
cmp
insb
in
pop
xor
test
lret
into
movsl
push
test
inc
adc
adc
cmc
cmp
pop
int
sbb
aas
jmp
jecxz
xor
stos
adc
insb
push
dec
and
mov
aas
pop
inc
test
mov
fisubs
mov
in
mov
cmp
sti
pop
and
jmp
mov
push
mov
stos
out
test
jbe
pop
mov
das
outsb
shr
pop
rcrl
cmp
adc
addr16
mov
lret
or
iret
dec
sub
sub
mul
mov
fidivs
sub
mov
repz
and
xor
mov
and
std
data16
push
push
and
push
mov
jle
sbb
ljmp
rcll
cld
cmp
sbb
out
xorl
fs
adc
pop
xchg
mov
test
scas
and
nopl
xorb
pop
mov
shll
push
fcmovbe
sub
mov
imul
mov
lea
push
or
fnstcw
pop
out
mov
and
jbe
pusha
push
jbe
jae
push
enter
lret
xor
test
cmp
test
mov
mov
xchg
pop
pop
dec
les
rcrl
roll
xor
add
std
sbb
fistps
lds
xor
daa
xchg
xchg
push
xchg
adc
f2xm1
loop
cmpsl
lret
sbb
cmpsl
xchg
daa
mov
adc
pusha
mov
sub
jp
xor
dec
je
xchg
lcall
inc
shlb
imul
dec
dec
bound
iret
pop
add
imul
shrb
jle
mov
shlb
jbe
sbb
sub
xchg
stos
popa
jecxz
or
ljmp
inc
setne
mul
push
push
scas
sbb
rcrb
hlt
mov
push
lldt
in
xor
iretw
aad
jl
and
inc
dec
adc
jmp
cmpsl
pop
popf
or
fdiv
push
mov
add
inc
add
jo
scas
call
divps
lcall
sahf
jl
clc
mov
imulb
mov
sub
add
cwtl
jmp
mov
pop
icebp
fcoml
iret
rcll
mov
xor
clc
arpl
int3
mov
or
mov
mov
leave
out
lret
push
mov
ret
sub
and
and
cmp
mov
cmp
jno
or
pop
sbb
sub
lahf
add
cmp
dec
roll
nop
mov
movsb
dec
push
jne
mov
pop
outsl
rcrl
icebp
lahf
jb
lea
scas
mulb
cs
xchg
out
pop
and
jge
lods
adc
or
xchg
push
jne
test
mov
xchg
push
sahf
xor
loope
cmpsb
jl
dec
fwait
mov
sbb
cmp
imull
scas
imul
in
into
pop
xor
add
in
push
xchg
testl
out
test
jmp
aam
sti
out
sub
je
cmp
jmp
enter
pop
les
jb
aad
fs
adc
lret
sbb
add
test
jp
jle
scas
adc
pop
push
ljmp
xchg
int3
sbb
fwait
xor
ficoml
fstps
cltd
sub
cmp
addr16
xchg
jno
cmp
cmp
cmp
cmc
add
pop
lret
addb
add
mov
xchg
icebp
rolb
js
mov
add
jge
clc
jo
pop
iret
jg
or
adc
lods
and
rol
cmp
idivb
mov
xchg
je
jno
aam
mov
sub
add
out
or
test
mov
repz
mov
push
repz
jno
fisubrs
repnz
stc
movsb
cmc
sub
andb
mov
dec
das
cmp
cltd
mov
xchg
out
adc
addl
jb
int
cmp
add
mov
mov
add
sub
mov
or
stos
and
jne
repnz
pop
xor
cltd
mov
or
pusha
rcl
std
fcmovnb
ljmp
push
and
scas
mov
aas
dec
pop
pop
adc
dec
inc
enter
test
movsb
inc
cwtl
or
push
lret
sub
insb
push
sub
repnz
inc
sti
xorb
inc
xchg
test
stc
pop
mov
mov
mov
push
mov
or
xor
or
test
outsb
scas
add
or
nop
sbb
jae
dec
sub
je
hlt
adc
push
out
and
aaa
xor
scas
mov
data16
fwait
pop
sarb
push
decl
sub
lea
or
fwait
mov
push
xor
dec
mov
mov
fdivrs
cmp
std
outsl
or
fmul
cld
add
and
jns
cmpsb
aam
jno
cmc
movsl
jecxz
pusha
cmp
addb
in
ret
scas
out
shl
icebp
cmp
mov
sub
xor
fsubs
mov
push
xchg
push
gs
or
or
jns
add
test
jnp
out
jl
rcrb
clc
dec
aad
add
add
xchg
xchg
stc
push
jle
ds
and
and
cmp
sub
int
jo
loope
icebp
into
in
push
jne
dec
in
push
add
add
orl
inc
sbb
pop
in
jo
cmpsl
cmpsl
sarl
jp
adc
jnp
push
push
cmp
dec
lock
sbb
push
push
pushf
enter
les
insl
fcom
test
xor
jecxz
jnp
outsb
addb
mov
sbb
mov
in
imul
lcall
adc
or
insl
dec
sbb
stos
add
ja
or
outsl
imul
pop
lock
or
jmp
scas
inc
add
dec
out
mov
add
inc
dec
xor
sbb
cmp
mov
xchg
dec
inc
and
out
test
popf
inc
mov
pop
int
ss
insb
into
adc
push
jl
lock
and
or
or
dec
push
dec
shl
push
into
fmull
pop
outsl
ret
cmpsl
test
idivb
sarb
pop
movsb
inc
sub
pop
repnz
call
and
push
xchg
dec
add
jae
dec
or
jp
push
inc
xor
mov
jl
sbb
xchg
aad
push
imul
in
cmc
dec
inc
fsubr
or
cmp
jp
mov
mulb
arpl
fwait
outsl
insl
mov
and
insl
pop
inc
scas
in
mov
pop
fcomp
cmp
inc
cld
fsubs
sub
add
js
into
push
mov
sbb
inc
mov
cmc
xchg
cld
push
pop
xor
stos
fistpll
movsl
jle
jmp
mov
iret
mov
inc
pop
mov
fs
mov
sti
push
shrb
mov
in
or
loop
and
sub
inc
imul
push
ja
imul
std
enter
or
pusha
jno
add
inc
movzwl
out
shll
mov
test
fmulp
push
xlat
push
jle
inc
inc
mov
clc
mov
xor
outsb
sbb
pop
and
ja
icebp
cli
cmc
idivb
stos
pop
rorb
imul
xchg
mov
lods
cs
mov
incl
push
insl
adc
pushf
adc
xor
mov
cmp
insb
fs
ficoml
mov
jg
les
pop
fdivr
enter
imul
mov
pushf
into
sub
sbb
inc
movsl
jmp
cs
and
jne
fists
fnstcw
push
xchg
push
es
adc
cmc
insl
test
sub
adc
dec
pusha
lods
jnp
movsb
lret
push
leave
xchg
fistpl
push
sub
jle
sbb
sbb
aaa
dec
sub
int3
std
push
scas
cwtl
cwtl
aam
lea
dec
xor
xor
fmuls
js
arpl
or
jb,pn
sahf
es
add
leave
pop
repz
mov
das
jno
lahf
insl
mov
test
cltd
fldenv
in
mov
lods
jmp
jno
pop
ja
shl
mov
lret
cli
push
adcb
pop
pop
xchg
push
xor
adc
xor
adc
xchg
cld
jle
popf
sub
clc
pusha
dec
xchg
or
lahf
fimull
daa
xchg
sub
xchg
inc
enter
jno
dec
repz
repnz
or
cmp
das
sub
mov
idivb
inc
push
mov
daa
mov
xchg
incb
imul
in
xor
jbe
sarb
pop
cmp
mov
stos
outsb
scas
pop
cld
jp
jno
in
adc
out
out
sub
aam
cmp
shlb
xchg
rclb
push
aam
xchg
xchg
iret
pop
inc
inc
jno
mov
std
cli
jb
into
xchg
loop
cmpl
mov
lret
push
sti
enter
test
jmp
repz
cmp
pop
out
inc
pop
test
mov
hlt
insl
arpl
arpl
ret
scas
inc
cli
xor
cmp
inc
xor
or
loope
jl
xor
mov
ja
adc
adc
fnsave
ret
pop
aam
xchg
mov
insb
and
sub
and
test
aad
cli
cmc
xchg
pushf
push
in
out
mov
cmp
jbe
int
xor
lahf
dec
sbb
dec
jns
repnz
dec
into
outsb
cmc
cmc
in
jp
inc
arpl
inc
gs
lods
cmp
mov
fstpl
and
push
pop
fsubrp
adc
aam
movb
and
sub
push
cmp
xchg
mov
xchg
xchg
pop
jecxz
iret
jl
leave
sub
lcall
sbb
jno
fisttps
jnp
push
mov
xor
insl
dec
xor
mov
cld
lea
insb
pusha
add
stos
insl
jns
decb
mov
add
add
stos
lret
outsb
ljmp
and
xchg
fdiv
mov
add
push
and
stos
in
mov
in
loopne
xorl
das
insb
insl
pop
inc
in
or
cmp
adc
pop
stos
test
repz
aad
fs
adc
add
mov
mov
xor
dec
insb
xor
fwait
sbbb
adc
adcb
cmp
mov
ret
cmp
lahf
shll
mov
mov
push
mov
mov
int
sub
lcall
sub
jno
xor
mov
push
cmp
cmc
push
cltd
jns
sbb
xchg
dec
lds
incl
inc
imul
ret
aam
fwait
outsl
fistl
scas
leave
pop
ja
pop
into
mov
xchg
inc
fsubp
sub
cmpsb
add
cmc
jecxz
adc
inc
pop
or
hlt
xchg
aam
cmpsl
and
fsubrs
cli
mov
decb
pop
sub
ljmp
adc
scas
jg
js
addb
xor
jae
dec
lahf
jne
jmp
mov
xchg
insb
pop
div
icebp
lret
xchg
scas
mov
pop
mov
fisubrs
pop
ss
loope
mov
or
rorl
dec
jmp
cmp
add
ljmp
or
popa
dec
lock
int3
les
inc
ja
xchg
push
cli
jp
in
mov
test
push
loop
lods
pushf
add
mov
aaa
insb
mov
aam
xor
ret
fidivrl
in
pop
add
add
lock
insl
call
cs
sub
cmpsl
sbb
jmp
dec
popf
ficomps
adc
sti
mov
xchg
xlat
and
rcl
in
jmp
mov
cltd
pop
inc
lds
jle
mov
fistpll
arpl
pop
arpl
sbb
orb
jb
fstps
fimull
xchg
je
mov
fildll
mov
xchg
dec
add
and
arpl
or
pop
jmp
lret
pusha
jp
xchg
or
mov
aad
mov
xchg
xchg
shlb
add
stc
xchg
es
xor
xchg
fmul
cmp
mov
push
stos
les
mov
add
filds
push
enter
je
scas
mov
adc
js
lods
or
sub
loope
inc
xchg
jg
es
stos
mov
jo
movsb
xlat
mov
pop
mov
in
out
jno
mov
in
jmp
fs
adc
popa
cmp
inc
jno
xor
bound
aad
add
sbb
xchg
cltd
sbb
out
inc
sbb
adc
inc
stos
loope
or
push
push
test
vpmaxsw
rclb
adc
shlb
dec
mov
out
cli
sbb
pushf
jg
or
pop
ljmp
sar
movsb
testl
insb
shlb
xchg
hlt
popa
add
pop
stc
sbb
leave
out
lret
bound
or
sub
cli
mov
fadds
daa
add
gs
js
int3
ds
outsb
mov
lret
outsb
xchg
fcmovb
or
idivl
aaa
aam
or
fdivrl
fdivl
cmpsl
lock
jmp
test
mov
dec
pop
jne
pop
and
inc
or
or
sahf
cltd
sub
inc
adc
pop
cmp
pop
scas
decb
pusha
push
int3
cmp
xchg
push
imul
insl
inc
test
test
dec
adc
inc
fstpl
lods
jmp
push
inc
sbb
and
outsl
xor
xchg
add
or
jnp
mov
es
cwtl
out
lea
cmpl
push
test
push
adc
cmc
xchg
cld
sahf
inc
aad
jae
repnz
mov
bound
dec
add
xchg
dec
sub
repnz
sbb
repnz
arpl
inc
imul
cmpl
sti
lret
inc
out
outsb
xor
out
fdivl
je
int
es
cmp
gs
xor
outsl
in
adc
std
shlb
lret
mov
add
sub
sahf
xchg
mov
shlb
andl
adc
cltd
aaa
aaa
add
cmpsb
adc
and
dec
pushf
mov
push
inc
cmp
dec
sub
mov
out
push
jae
inc
dec
jo
stos
lods
into
shrb
mov
int
cmp
scas
inc
xor
fstp
push
pop
movsl
fistpll
sbb
and
pop
sbb
add
or
mov
mov
jnp
mov
xchg
ret
jne
pop
int
cmp
jecxz
cmp
jae
mov
and
lahf
mov
mov
aas
pop
dec
les
xchg
cmp
cmp
add
cmpsb
jno
sahf
and
inc
dec
jne
push
cld
int3
and
pusha
mov
bound
out
xchg
mov
mov
pushf
fs
sub
mov
inc
out
xor
js
lret
scas
pusha
add
test
push
hlt
push
cmpsb
push
loop
pop
pop
idiv
jmp
mov
lea
xlat
daa
sbb
push
dec
and
cmpb
adc
pop
xor
ljmp
daa
jo
cmpsb
fnclex
out
insl
mov
loopne
rcr
orb
mov
scas
movsb
xchg
daa
aaa
mov
mov
dec
repnz
adcl
lds
xor
pushf
cld
and
xor
mov
inc
pop
sbbb
shlb
outsb
adc
gs
dec
and
mov
xchg
std
push
sub
push
jne
out
addr16
divl
xchg
inc
add
test
lods
push
jne
call
and
adc
into
sub
adc
jge
or
int3
cmp
inc
dec
and
inc
push
inc
mov
cltd
test
adcl
cli
movsb
push
push
dec
les
into
inc
sahf
inc
pop
fidivrs
cmp
stos
push
pop
aad
push
sarb
mov
lods
xchg
fisubs
inc
pushf
inc
mov
imull
fldenv
xor
push
incb
jno
xor
sbb
scas
cmp
lcall
or
jo
and
test
sub
les
jmp
xchg
faddp
mov
out
stos
inc
push
das
sub
sbb
into
mov
mov
pushf
pusha
cmc
fnstenv
scas
aaa
aad
push
inc
or
nop
les
dec
jmp
jmp
mov
sbb
and
push
fistl
mov
sti
gs
jb
adcb
stos
shl
repz
into
mov
xchg
aas
ss
mov
and
icebp
sub
out
in
ret
cmc
sub
aas
and
mov
jae
cli
dec
mov
xchg
jnp
xchg
push
ja
cld
adc
xor
sub
call
xchg
sarl
and
jle
pop
ja
loope
std
insl
add
ret
out
imul
xchg
push
das
dec
mov
bound
mov
ja
sbb
jo
loopne
pushf
cmp
aas
sbb
cmp
out
mov
ss
jns
jmp
cmc
push
fbld
sbbb
jl,pn
xchg
hlt
jb
stc
sbb
and
iret
push
dec
push
sar
hlt
mov
pop
pop
in
or
push
lret
inc
push
or
loopne
xor
in
pop
dec
popa
lret
push
in
pop
push
cmp
xchg
push
popf
add
jo
and
xor
lock
and
adc
mov
lahf
roll
insl
rorl
push
jo
pop
dec
fidivrl
iret
ret
cwtl
sub
test
pop
mov
inc
adc
in
dec
and
add
dec
lea
and
mov
xor
push
adc
daa
pusha
push
sbb
shlb
fsubrs
adc
dec
mov
into
jbe
mov
dec
ds
in
cmpsl
xor
push
pop
add
insb
sarb
test
dec
cmpsb
push
mov
shr
push
mov
sbb
cs
cltd
mov
fwait
jg
in
xor
jns
mov
ss
jp
mov
mov
je
lock
pop
pop
pop
movsl
ds
push
pop
xor
sbb
jle
dec
testb
addr16
ret
idivl
sub
addr16
js
into
dec
push
rorb
xor
jnp
push
insb
xchg
addr16
aad
and
inc
xchg
test
and
inc
xchg
icebp
or
and
sbb
fwait
and
ja
aas
cmp
mov
sub
inc
pop
fs
inc
call
lret
stc
idiv
cmpsb
xor
lods
ret
pop
cmc
xchg
sub
push
sbb
ljmp
adc
insb
sub
inc
mov
lea
sbb
hlt
push
js
div
push
test
bnd
push
sar
clc
lcallw
push
fucom
cs
xor
rcl
adc
cmp
xor
test
inc
jno
dec
dec
sbb
testl
je
lea
fxtract
dec
cwtl
sub
and
push
pop
jl
inc
addr16
fsubl
pushf
lcall
rcl
ds
sub
and
pop
push
andb
or
push
add
push
ja
sbb
jns
out
fiadds
mov
mov
cltd
mov
gs
pop
xchg
or
imul
inc
loope
mov
jbe
cmp
seto
jp
pop
int3
fistps
jg
cmp
out
sti
push
xchg
adc
loop
jb
mov
addb
nop
fbstp
lcall
pushf
repz
in
and
xchg
push
ficoml
jp
jne
push
jne
add
pop
es
les
cmp
ror
mov
mull
cmp
stos
sub
jae
js
lods
aaa
add
sub
mov
and
lea
dec
add
or
scas
xor
mov
and
daa
mov
pop
push
ja
lahf
dec
jg,pn
aam
cmc
filds
sbb
in
pop
out
loop
mov
cmp
push
jmp
add
jecxz
movsb
inc
popa
sub
cli
add
xchg
pop
xchg
scas
xor
sbb
sahf
pop
in
int3
and
push
mov
out
adc
mov
in
push
dec
stos
or
adc
sub
lods
addl
jg
fldenv
push
adc
icebp
lods
jbe
jno
lds
popf
pop
repz
cmp
loopne
sbb
mov
sbb
shrb
adc
pop
jae
inc
add
leave
mov
jo
inc
into
jge
or
aas
jb
dec
icebp
and
dec
mov
xchg
mov
mov
gs
adc
pop
inc
cltd
imul
callw
add
xchg
inc
mov
rcrb
enter
push
dec
in
mov
xor
cmp
dec
lcall
arpl
jo
stos
xchg
dec
push
sbb
in
gs
jnp
aad
sbb
xchg
push
loope
push
cmp
loop
sbb
mov
pop
movsl
fldlg2
xor
cltd
xchg
fwait
aas
xchg
sub
jb
add
mov
arpl
or
xor
cmp
jno
mov
mov
imul
xlat
pop
fs
jno
xchg
or
aaa
pop
stc
enter
int3
mov
or
test
and
repnz
das
cltd
lahf
int
jbe
xchg
test
mov
adc
cmp
test
mov
sbbb
sbb
sbb
and
push
mov
xchg
push
xchg
push
xor
int
inc
stos
in
ret
cli
or
add
inc
or
data16
add
movhps
aam
sub
xlat
lds
popf
pop
pop
mov
xor
shr
cmc
int
push
jl
pusha
lods
and
push
mov
inc
shlb
sbb
out
testb
ret
into
pop
inc
dec
lahf
sti
and
mov
mov
lds
xchg
sub
sbb
push
add
dec
ljmp
mov
mov
std
and
es
adc
push
add
xor
jg
push
sahf
iret
stos
and
xlat
sub
out
sub
mov
into
mov
pop
sbb
out
xchg
test
fisttpll
inc
add
fidivrl
xchg
xor
mov
push
inc
cmp
add
rorl
out
movsl
imul
pop
push
test
stos
aam
je
out
fbld
and
stos
or
cmp
outsl
xchg
lds
jge
shl
in
test
push
jge
fisttpl
js
adc
mov
ss
mov
not
sub
xchg
orl
mov
mov
out
rcl
xchg
push
sahf
mov
addl
inc
sub
cmp
enter
adc
jmp
imul
mov
pop
adc
ljmp
mov
or
ficompl
mov
cmc
cs
sahf
shlb
dec
sti
dec
dec
push
add
mov
insl
shlb
sbb
in
dec
fdivl
or
mov
or
aad
sahf
fsubs
add
outsb
jbe
sub
lods
pop
sahf
pop
out
je
cmp
shrb
hlt
add
loopne
jecxz
pusha
nop
aas
mov
add
mov
xor
scas
loop
inc
stos
mov
mov
cli
imul
into
addb
rclb
lea
es
dec
xchg
mov
mov
pop
clc
jmp
pop
fildl
sub
pusha
lock
jmp
movsl
xchg
pop
cs
lcall
xchg
shrl
cmp
subb
das
insb
or
cli
aam
cmp
pop
cmp
jl
and
cld
cmp
cmpsl
sarl
add
inc
mov
inc
xor
int3
mov
pop
pushf
add
out
cmpsl
dec
jns
ret
imul
mov
pop
inc
movsb
lock
das
loopne
daa
lock
lcall
aad
push
pop
inc
lret
lea
leave
jb
push
push
aam
dec
icebp
ror
adc
test
cld
sbb
push
sahf
push
xchg
push
and
pop
test
mov
leave
adc
cmp
jno
frstor
add
push
je
xorl
ret
jp
xchg
fidivrl
sub
out
jne
inc
inc
mov
adc
sbb
outsb
xchg
lea
xor
out
sub
pop
jle
push
call
cwtl
inc
cmp
or
test
sbb
dec
sub
fisttpl
call
jbe
dec
inc
ljmp
and
or
repz
stos
push
cmpsb
cmpsb
cmc
pop
lret
pushf
scas
xchg
das
adc
cmp
in
and
mulb
sub
sbb
mov
fbld
bound
shll
inc
aam
stc
repz
push
jo
pop
rolb
outsb
dec
jecxz
dec
mov
orb
loopne
add
loopne
das
jle
lahf
and
testl
addl
lret
in
cmp
test
jb
outsb
outsb
mov
lcall
in
xor
xor
insl
out
mov
xchg
mov
xchg
add
sub
xor
and
and
divl
add
add
pop
mov
adc
fsub
cld
lret
inc
daa
adc
push
push
in
push
dec
adc
hlt
push
jg
cmc
test
andb
std
dec
rcrl
cmpsb
sbb
inc
insb
or
es
imul
inc
fmull
mov
mov
sbb
int3
cmp
mov
sub
int
and
je
jbe
pop
je
jno
pop
fcmovnb
aaa
jns
dec
test
cmp
jmp
test
ds
add
cmc
xchg
std
add
xlat
adc
adc
mov
out
pop
mov
xchg
int3
sbb
out
out
cmpsl
lea
push
add
lahf
push
lods
inc
ret
imul
xchg
push
dec
repz
dec
add
cmc
iret
cmp
test
mov
mov
cmp
sbb
lods
inc
xchg
mov
xchg
repz
mov
rol
dec
xchg
ret
inc
mov
jmp
mov
xchg
push
pop
divb
or
sahf
inc
mov
repz
adc
inc
mov
or
xlat
jo
sbb
cmp
cmpl
mov
pop
mov
mov
ds
fisubs
lock
sbb
pop
jmp
scas
daa
mov
pop
cmp
ror
sbb
sub
jmp
push
or
and
jg
jbe
movl
jl
arpl
outsb
shrb
lcall
pop
movswl
aam
pushf
push
repnz
sbb
cwtl
stc
jbe
and
or
push
xor
stc
jmp
cld
mov
cmp
pop
pop
fnstcw
push
addl
and
stos
lods
and
pop
iret
xor
idiv
mov
xor
add
add
les
jg
mov
stos
push
ficoml
mov
or
adc
stos
int
mov
shlb
mov
cmp
sbb
std
into
pushl
daa
in
ss
mov
sub
xchg
dec
int
xor
testb
jl
pop
cld
xchg
jbe
dec
mov
rclb
mov
mov
fcom
xorl
sarl
es
lods
sbb
and
jnp
add
hlt
jno
push
mov
jp
and
cmc
and
inc
sub
call
push
aad
push
ja
roll
push
jmp
in
inc
lret
gs
call
std
mov
jb
push
mov
test
sub
jnp
insb
mov
loope
aas
dec
mov
adc
add
mov
fwait
outsb
adcb
int3
mov
ljmp
cmp
inc
insl
lds
push
push
testl
fisubl
adc
jbe
add
add
jecxz
stc
jnp
mov
pop
or
dec
cmp
sahf
loop
stos
lods
movsl
pop
xchg
dec
fdiv
jne
cltd
std
fnsave
pushf
adc
push
lret
xchg
stos
adc
in
lods
ss
cltd
xchg
call
jns
mov
shrl
dec
push
dec
or
sbb
ret
sbb
popa
jns
leave
mov
jl
mov
add
aas
stos
rcrl
outsb
cmc
inc
decb
mov
out
lods
and
das
clc
jbe
cwtl
insl
pmaddwd
jg
divl
fsubrp
mov
xor
cmpsl
push
fmul
fnstcw
adc
xchg
test
sbb
mov
gs
adc
jno
sub
mov
or
sbb
pusha
xchg
dec
insb
daa
mov
xchg
sub
sbb
adc
repnz
fadd
int
or
dec
fabs
push
jge
adc
in
xchg
dec
dec
fwait
adc
mov
lds
sarb
ljmp
jbe
lret
sahf
cmp
xchg
es
adc
jae
repz
ret
mov
push
push
push
mov
mov
pushf
lock
mov
stos
out
lahf
hlt
pop
jp
pop
stc
lahf
pop
fdiv
mov
lcall
cmpsb
rcl
fsts
shll
mov
call
pop
mov
mov
addr16
pop
sub
dec
aad
mov
pop
out
out
add
add
mov
fidivrl
ljmp
dec
dec
jl
xchg
scas
cld
fmull
arpl
aam
inc
jne
mov
xor
leave
aam
or
jb
jge
inc
sub
jae
stos
adc
shr
xor
xor
out
inc
jl
adc
dec
push
dec
push
cmp
adc
mull
pop
shlb
scas
or
lret
pop
xchg
mov
aas
arpl
insb
sub
push
sbb
fmuls
hlt
sub
pop
dec
in
cs
mov
das
fwait
push
mov
mov
adc
pop
xor
or
and
sub
out
lock
adc
and
mov
sbb
adc
cld
sbb
push
orl
adcb
insb
push
push
sbb
cmpsl
push
pop
cmp
pop
pop
jecxz
out
or
es
sbb
ret
sti
sbb
jae
in
jno
xor
in
push
jl
jp
jg
sub
sti
hlt
stos
stc
movsb
sub
jbe
std
cwtl
mov
inc
sbb
bound
dec
sbb
cmp
testb
cmp
shl
fwait
xchg
data16
rcr
gs
pop
in
es
fs
mov
pop
push
jno
dec
xor
pusha
adc
cmp
xor
sub
ja
and
mov
and
test
shlb
pop
pop
jb
aas
mov
gs
sub
jb
je
pop
xor
rorb
sahf
dec
or
push
testb
loop
outsb
jle
push
or
clc
lcall
adc
test
push
mov
std
fildll
jns
outsl
mov
arpl
divl
loopne
out
aas
lea
and
inc
fistps
jmp
ss
mov
mov
add
ficoml
bound
shlb
ret
add
arpl
jnp
cli
mov
pusha
dec
inc
jle
gs
lock
shr
test
mov
sub
arpl
ret
pop
sbb
dec
sub
mov
mov
daa
jns
jno
jge
repnz
xor
jmp
icebp
arpl
sbb
rorb
jno
sbb
cmpsl
push
cli
push
or
rclb
test
and
xor
jo
in
js
int
add
add
dec
or
pusha
lock
push
cmpsl
mov
push
je
jbe
inc
sub
sbb
orb
cmp
lret
divb
adc
iret
sbb
xchg
test
mov
jo
loope
push
dec
cld
adc
jnp
lcall
loop
sub
mov
pop
or
sub
jno
in
xchg
push
sub
pop
lret
mov
lahf
xchg
icebp
inc
push
mov
lcall
xchg
sbbb
pop
xor
scas
dec
adc
mov
add
out
imull
popa
scas
adc
test
adc
xor
dec
fistps
movsl
jmp
inc
scas
jecxz
into
js
call
fwait
mov
push
add
xchg
jnp
div
mov
mov
hlt
xchg
pop
jl
add
jg
jb
cmp
mov
add
test
jg
mov
inc
xchg
in
adc
lds
scas
hlt
sub
sbb
and
and
fs
int3
add
popf
fdivp
inc
fldcw
xchg
pop
pop
rcrl
mov
dec
fdivl
shll
jnp
sbb
in
js
icebp
xor
inc
add
loop
sbb
fs
pusha
out
cmp
add
cmovns
in
jbe
sub
int
sbb
xor
jne
pop
xchg
push
and
nop
and
or
pushf
xor
mov
inc
scas
and
imul
test
data16
lods
mov
popa
aam
ds
imul
ss
cmp
add
mov
cmp
pop
dec
adc
dec
mov
dec
or
inc
rorb
pop
pop
or
or
subl
ret
xor
adc
jno
leave
shlb
dec
movsb
test
test
mov
mov
leave
aam
movsl
subl
dec
mov
in
push
cli
roll
sub
je
mov
push
adc
inc
xchg
sbbb
dec
jbe
cmp
or
sub
adcb
scas
mov
adc
xor
pop
imul
mov
leave
xchg
cmp
icebp
mov
test
sbb
inc
add
dec
mov
add
cld
loopne
mov
call
adc
fisttps
cli
lret
pusha
push
inc
scas
out
or
pop
xor
and
aad
out
lea
jbe
lock
arpl
cmc
jle
cmpsb
dec
imul
cmpsl
loopne
dec
adc
iret
iret
dec
bnd
mov
jb
mov
mov
dec
mov
fs
pushf
jnp
out
mov
leave
stos
jg
scas
fsubrs
add
jle
ret
fistpll
sub
or
pop
mov
fcmovu
aad
mov
mov
pop
addr16
or
xor
sahf
push
in
cs
enter
lea
lahf
push
cld
xchg
xlat
test
cwtl
ja
mov
loopne
pop
adc
xchg
xor
repz
inc
xchg
stos
sbb
je
addr16
enter
mov
add
mov
xchg
loopne
imul
mov
mov
out
imul
fdivrs
add
sub
fprem
jg
add
inc
mov
popa
push
mov
aaa
push
and
dec
add
fcom
push
sbb
jp
cmp
adc
pop
xchg
add
sub
scas
es
pop
pop
jo
push
jnp
fisubl
add
insb
jne
pop
jo
sbb
inc
lea
scas
push
ffree
out
fistpll
lret
and
jl
pop
test
dec
sub
mov
mov
or
add
sti
imul
nop
addr16
and
cmp
xor
pop
lods
xor
sbb
jp
shrb
mov
cs
jbe
sbb
jmp
movd
and
das
inc
mov
inc
rcrb
adc
fsubs
or
push
push
push
push
dec
loopne
push
mov
xor
pushl
or
mov
mov
in
lret
fidivrs
add
out
mov
push
bound
out
push
rcrl
inc
dec
add
pusha
ret
call
inc
or
adc
rorb
xchg
or
sub
cmc
shrb
xlat
inc
mov
mov
cmp
imul
cli
sub
pop
in
cmp
adc
addr16
enterw
mov
test
lds
sub
xchg
mov
mov
mov
aad
cmpsb
push
and
cmp
and
sbb
lock
or
lods
popf
xor
jmp
mov
add
arpl
adc
pop
xchg
fwait
ret
pop
mov
aad
popa
dec
sub
sti
jns
push
pop
movsl
nop
inc
xchg
sub
sbb
ror
jecxz
popf
pop
push
jae
out
leave
cmp
xor
mov
scas
in
movsl
push
cmp
adc
sarb
lcall
mov
fisttpl
leave
cmp
cmp
ljmp
leave
jl
lcall
or
jg
gs
jecxz
dec
pop
lahf
repnz
loop
mov
hlt
ror
aad
push
mov
fwait
push
xchg
or
jnp
push
call
in
jge
push
inc
push
sbb
mov
shll
shlb
xor
push
pop
pop
aad
mov
push
mov
jge
outsl
lret
inc
inc
cmpsb
sti
add
add
fadd
into
inc
mov
and
dec
jno
sti
xor
fisubl
pop
jns
cltd
fdivrp
scas
mov
ret
push
rcr
sub
es
mov
arpl
and
xlat
lahf
fists
mov
adc
sarb
mov
add
loope
mov
sbb
insb
cmpsb
mov
gs
adc
mov
push
bound
cmp
or
and
popf
pop
push
imul
dec
add
shrb
add
pop
push
and
das
mov
push
les
dec
nop
stc
mov
and
push
jl
add
insb
jl
imul
leave
xor
mov
loope
loop
mov
negb
jb
movsl
lods
push
test
pop
sbb
dec
clc
jp
cmp
aam
fisttpll
scas
mov
push
ja
jb
pop
xchg
xlat
in
jp
insl
cmpsl
repnz
pop
and
aad
incb
jnp
popf
push
mov
jns
cmovb
push
push
mov
xor
or
dec
mov
inc
sti
scas
dec
push
cli
or
lds
inc
push
subb
mov
pop
and
or
push
push
rcrl
cmp
inc
adc
repz
and
cmp
push
mul
data16
mov
ljmp
cvtps2pd
cld
sub
or
lock
and
test
mov
push
dec
or
cmpsb
add
aaa
call
xchg
jecxz
je
push
mov
add
mov
add
pop
out
test
mov
adc
sti
push
mov
add
shrb
aam
mov
cmp
mov
aad
xchg
dec
in
stos
mov
dec
mov
or
insb
insb
ficomps
inc
sub
mov
dec
out
stos
scas
mov
outsl
les
jbe
loop
fcoms
into
lret
cmp
cmp
push
and
daa
xor
cld
jg
xchg
xor
sbb
mov
xchg
addr16
pusha
data16
scas
mov
cmovl
lods
mov
movsl
ret
add
add
lods
lods
ffree
arpl
aas
sbb
rcrl
push
sbb
sbbb
lahf
xor
add
subl
push
lahf
or
mov
pushf
cmp
and
mov
pop
sub
mov
cs
add
push
push
rcl
or
or
cwtl
fstpl
sbb
sub
sarl
adc
icebp
mov
loop
mov
lret
cmpsl
nop
aaa
jg
jnp
clc
mov
out
arpl
imul
fcmovnb
pop
popa
inc
or
arpl
cwtl
sbbl
push
pop
sub
es
into
jecxz
xchg
div
jp
ja
adc
pop
popa
mov
mov
inc
loope
fstp
clc
or
dec
push
shld
mov
cli
cmp
in
insl
pop
or
push
mov
leave
xor
push
arpl
mov
gs
test
daa
fsubrp
imul
inc
cmp
xchg
dec
mov
cmp
add
movsb
jmp
dec
loope
push
movsl
mov
icebp
pusha
int3
je
dec
xchg
out
jg
xor
cmpsb
mov
mov
loopne
fwait
sti
jle
push
pop
int3
adc
sub
gs
mov
xchg
pop
xchg
jo
into
cmp
sbb
aam
popa
das
pop
lret
mov
fdivr
into
gs
clc
gs
addr16
or
jp
mov
pop
inc
cmp
mov
mov
inc
sahf
rorb
jp
xlat
or
test
jl
dec
sti
adc
jae
lret
adc
les
es
or
shlb
sbb
or
sbb
insb
mov
lret
xor
std
xchg
mov
rcrl
addr16
dec
pop
sti
inc
pop
ds
dec
xchg
add
mov
aaa
jge
cmp
and
cmpsb
jns
adc
rorl
adc
cli
mov
lods
pop
or
loop
push
mov
mov
push
cmp
mov
or
add
push
push
in
or
jnp
scas
adc
jno
xor
push
lret
addb
sbb
inc
sub
int
lds
insb
cwtl
sub
daa
jo
pop
jp
sub
pop
les
int
sub
stc
push
fxam
jl
inc
inc
adc
aas
inc
cmp
ret
xor
push
xor
sub
adc
mov
push
push
add
test
in
mov
lcall
test
ds
test
loope
adc
in
mov
outsb
or
mov
jne
dec
pop
mov
inc
hlt
xchg
or
fldt
addr16
xchg
xchg
aas
testb
adc
push
les
imul
sbb
push
stos
pusha
jns
je
dec
jnp
mov
lret
test
cs
add
adc
test
ret
mov
pop
dec
mov
cmp
cmp
je
cmp
iret
daa
dec
inc
sub
sti
dec
loope
es
clc
popa
jmp
and
rclb
mov
cmp
jg
addl
sub
push
cmpsb
dec
cltd
xor
dec
test
xchg
jl
pusha
gs
test
std
shrb
stos
or
out
dec
dec
push
push
jecxz
out
xchg
mov
frstor
les
int3
cmc
xlat
je
mov
dec
cli
imul
mov
fucomi
lret
inc
dec
pop
jo
add
jb
std
add
cli
fnstsw
shl
cmp
dec
jge
lods
aas
jns
pop
cmp
test
jb
ljmp
movsl
iret
jnp
imul
mov
fwait
imul
fs
mov
shr
pop
dec
aaa
out
jb
lret
outsb
ds
jb
add
outsl
insl
add
inc
mov
loop
lahf
bound
mov
fildll
cli
push
pushf
out
adc
inc
leave
dec
sbb
inc
icebp
or
lea
sbb
mov
adcb
and
mov
cli
push
xchg
movsb
loope
or
popa
aaa
mov
pusha
int3
out
add
jmp
pop
outsl
adc
mov
and
std
data16
adcb
push
in
push
pop
outsb
fstpl
pop
inc
sbb
push
dec
jnp
or
fidivrs
outsl
cmpsl
rcrl
dec
loop
incb
cmp
cmp
xchg
mov
in
and
xor
lcallw
adc
jno
or
pop
dec
jns
test
je,pt
les
inc
mov
xor
dec
xchg
aaa
rorb
push
push
in
mov
sub
sub
mov
sub
out
js
mov
hlt
push
inc
mov
test
inc
lret
sbbb
dec
push
mov
xor
pop
test
out
aam
in
clc
dec
push
inc
mov
loopne
fisttps
sarb
hlt
jl
fimuls
add
sahf
xor
movsl
pusha
in
xchg
push
test
jl
jp
jo
dec
sub
inc
sub
lods
scas
lods
add
dec
jae
aaa
mov
addb
dec
lea
das
out
cmp
setl
jb
pop
adc
ret
imulb
dec
xchg
xchg
dec
push
hlt
mov
xor
or
and
mov
jne
xlat
addr16
gs
add
ds
pushf
mov
and
movb
aad
sbb
push
insb
mov
cld
jle
jg
xchg
adc
mov
mulb
mov
stc
cmpsl
xchg
xchg
das
lahf
test
cltd
out
dec
lea
mov
jmp
inc
xchg
pushf
xor
jo
movl
xor
mov
xor
fimuls
fs
dec
mov
ret
sub
push
sahf
rorb
lret
mov
shrb
add
jmp
call
sbb
test
inc
lods
ret
cld
fisttpl
mov
mov
lods
faddl
insb
inc
mov
jp
inc
arpl
mov
int3
inc
jae
std
shlb
push
xor
mov
lods
dec
and
mov
popf
les
mov
mov
jo
jns
into
inc
sub
mov
jle
outsl
testl
insl
fisttpl
outsl
mov
out
loopne
jmp
sarb
cmp
nop
add
insb
mov
xchg
pop
jno
pop
test
stos
lods
imul
lock
pop
pop
pop
and
aas
xchg
outsl
sbb
pusha
clc
push
mov
lock
sub
in
fdiv
loop
iret
out
dec
xchg
lret
xlat
subl
fistpll
fidivrl
xor
or
and
movsl
push
add
sub
mov
push
ficoms
subb
jg
lods
dec
call
pusha
jb
cli
outsl
mov
mov
mov
mov
in
js
cltd
sahf
lods
xchg
fstl
mov
pmulhuw
or
jne
cld
iret
clc
adc
mov
or
insb
rorb
gs
sub
inc
mov
mov
push
dec
sub
adc
outsl
inc
add
lea
sub
mov
clc
movsb
out
mov
dec
arpl
cli
lret
unpckhps
les
out
jmp
in
inc
add
jmp
test
pushf
or
out
loopne
add
loope
or
aad
js
dec
int
sbbb
jmp
dec
mov
push
push
adc
cs
xchg
inc
push
sub
movsl
fisttps
inc
imul
push
fcmovne
push
and
push
pop
push
jae
dec
push
adc
pop
push
mov
nop
cs
push
lea
cmp
sbb
icebp
test
dec
data16
repnz
shlb
mov
mov
mov
insl
lahf
stc
mov
scas
jo
imul
mov
mov
repz
add
stos
fdivp
xor
xchg
pop
dec
ret
push
mov
mov
mov
jecxz
dec
dec
sbb
jbe
divl
test
pop
repz
test
shlb
push
cltd
popa
push
andb
xchg
mov
dec
inc
test
jno
mov
inc
rolb
cmp
movsl
xor
mov
push
jne
rolb
fcomi
cwtl
mov
and
jmp
xor
addr16
push
pop
scas
inc
insl
cmpsl
pop
and
jne
fmull
call
xor
xor
sti
mov
mov
inc
xchg
or
aad
and
cmp
psubusb
insb
lods
ljmp
mov
jbe
xor
test
pop
pop
mov
push
out
xor
or
pop
mov
or
mov
push
xchg
xchg
mov
dec
sbbb
or
dec
inc
inc
lret
std
mov
dec
cmc
adc
add
js
fisttpl
mov
lods
mov
in
jae
aam
or
inc
pop
jp
fidivl
int3
mov
pop
mov
or
xor
lods
jmp
jge
popa
lea
daa
aas
dec
icebp
dec
cmp
int
int3
xchg
ss
insw
dec
xchg
pushf
mov
jmp
dec
dec
andb
push
jge
movsl
hlt
cmpsl
sbb
iret
pop
jp
dec
mov
fldcw
sub
clc
jno
jmp
subb
xchg
insb
push
ds
in
xchg
dec
mov
jo
icebp
stos
lret
mov
add
cmp
into
sub
mov
xor
add
insl
cmpsb
bound
lahf
fcomps
test
mov
mov
jb
dec
repz
xor
shl
xor
sub
icebp
mov
add
pop
fcoms
xor
dec
add
cld
movsl
insl
pop
fld
push
stc
sbb
push
faddl
clc
or
lods
sub
mov
movsl
xchg
mov
outsb
es
lahf
mov
add
xchg
mov
dec
sti
add
mov
punpckldq
in
popf
loopne
ret
ret
test
lea
cwtl
sub
mul
outsl
pop
inc
mov
cmp
and
dec
pop
subl
out
xor
cmp
data16
xor
sub
xchg
xchg
cmpsb
sbb
arpl
pop
hlt
push
test
adc
xchg
sub
scas
ljmp
lods
pop
xchg
fwait
inc
out
fnsave
mov
sbb
mov
movsb
rcl
sbb
xor
leave
sbb
shr
sub
loope
int
int3
pop
inc
ss
mov
jle
ss
into
or
jecxz
imul
xor
jl
jbe
xchg
add
pop
fmul
jbe
push
mov
call
mov
mov
cld
js
mov
xor
aad
aas
jb
inc
lahf
pop
jg
call
mov
repnz
add
adc
pop
xchg
cs
inc
dec
imul
scas
cs
push
cmp
rol
mov
aam
jl
pop
loope
in
lds
xor
or
and
mov
adc
cmp
xchg
jp
lahf
pop
and
insl
lret
sbb
dec
fwait
in
jecxz
es
dec
repz
in
mov
mov
and
or
dec
push
lret
testl
bswap
add
xchg
xchg
into
dec
std
or
jmp
mov
adc
lock
addr16
add
or
xchg
test
test
cmpb
jecxz
mov
lahf
mov
fs
dec
in
mov
and
jmp
jge
jge
pop
dec
shll
or
test
aam
sti
and
adc
xlat
add
jo
sbb
sbb
fs
push
cmp
inc
inc
push
popa
packssdw
pusha
in
jne
lea
xlat
jo
sbb
call
xchg
add
xchg
jnp
push
xchg
xchg
gs
lds
aaa
inc
ljmp
pop
mov
fdivl
or
test
cmpsb
jp
or
clc
js
add
mov
inc
add
pop
hlt
scas
jge
loopne
inc
mov
cmpsb
sbb
pushf
test
jecxz
mov
ret
outsb
mov
test
jp
mov
dec
fs
adc
jne
xchg
sti
leave
fisubrs
cmp
call
vandnps
dec
adc
and
lock
mov
les
jno
dec
sti
push
inc
jno
push
mov
sub
and
aad
jb
xor
push
and
mov
shl
push
es
sbb
add
push
lods
cmpsl
sti
daa
int3
mov
ud2
outsl
movsb
movsb
sub
dec
mov
push
roll
dec
mov
xor
sub
mov
mov
xchg
add
mov
sub
add
mov
adc
lcall
movsb
mov
cld
iret
adcb
push
sbb
adc
movsl
fisubs
sti
pop
nop
repnz
jle
jno
lods
fcompl
jb
sub
push
dec
sub
in
shr
aam
add
jnp
rclb
orl
cld
gs
cltd
xor
out
mov
ficompl
movl
pusha
xchg
push
or
pop
ret
cmp
jb
pop
inc
scas
aad
movsl
lea
leave
sub
stos
fdivrl
and
cmp
pusha
ror
push
stos
mov
mov
and
loopne
inc
mov
mov
pop
mov
iret
mov
mov
sti
outsb
scas
rcrb
xchg
bnd
mov
ss
sbb
ficoms
add
jle
sbb
and
test
lock
xchg
mov
mov
xor
add
jge
cmpsb
xchg
jmp
jecxz
cmc
mov
lret
sbb
xor
add
adc
sub
daa
loopne
jnp
sbb
lods
loop
pop
sbb
inc
mov
lahf
pop
xchg
movsb
fcmovb
mov
dec
shl
inc
lahf
roll
in
dec
mov
pop
out
imull
pop
std
cli
inc
ljmp
stos
or
leave
mov
jecxz
inc
xchg
fucomp
mov
pop
daa
in
and
rol
mov
test
dec
or
dec
fwait
lea
std
jnp
pop
mov
jecxz
stos
mov
xor
sbbl
sub
fs
mov
dec
mov
pop
scas
pop
and
inc
out
push
in
add
rcr
xor
push
popf
xor
xor
das
movsb
jno
jno
cltd
inc
sub
std
and
int3
add
fucom
lret
mov
call
mov
fs
mov
in
push
int3
adc
pop
adc
lret
rolb
out
cmp
inc
add
out
inc
cmpb
jl
lods
add
mov
adc
push
mov
sub
jo
fwait
and
dec
inc
scas
pusha
add
sub
sbb
bound
fsubrp
lods
in
jp
sti
out
jecxz
in
mov
fsubl
jl
ficomps
jecxz
rcr
cs
xor
dec
add
divb
into
cld
inc
sbb
aad
sahf
xor
fists
aad
jbe
je
mov
inc
jecxz
push
inc
adc
pop
sahf
jno
push
int
add
lahf
sarl
sti
jae
and
out
in
push
mov
or
test
scas
cmp
popf
out
movsl
add
fcmovnbe
and
jb
shlb
inc
jp
lcall
cmp
cs
mov
arpl
inc
mov
mov
sbb
xchg
test
sahf
dec
cmp
adc
test
xchg
jb
and
jle
sbb
adc
ljmp
mov
into
test
mov
int
daa
fdivrl
sub
ljmp
and
pop
jecxz
mov
jmp
lods
popf
fisubl
jl
loope
pop
fsubs
pop
imul
aad
push
and
pop
out
stos
mov
xchg
push
and
dec
popa
cltd
sbb
xlat
mov
into
lcall
sahf
cmp
test
xchg
add
mov
pop
mov
stc
stos
stos
mov
xchg
mov
dec
js
in
push
int3
push
and
push
bound
jo
es
inc
inc
adc
js
add
jae
dec
adc
mov
lods
xchg
scas
lahf
cli
xchg
int3
pop
xor
push
ss
outsl
nop
xchg
mov
aad
in
and
xor
lock
dec
jno
pushf
xchg
sub
mov
gs
jne
xchg
cld
arpl
inc
sub
mov
insb
cli
jns
aas
mov
xlat
inc
pop
push
filds
jae
dec
aam
push
addb
aas
jmp
cmp
mov
addl
cmp
and
push
inc
test
dec
aaa
aas
test
push
and
lret
fs
jecxz
xor
mov
scas
mov
mov
cmp
fisttps
cmp
adc
mov
pop
lcall
fildl
adcb
mov
aaa
out
jg
xor
xchg
orb
adc
orl
xacquire
aad
mov
mov
jge
cmc
xor
mov
mov
pop
fs
dec
jg
fistl
pcmpgtd
in
movb
or
nop
mov
sub
notb
add
inc
cmc
mov
dec
mov
xor
in
or
jbe
jle
mov
popf
push
xchg
test
add
add
pop
hlt
sub
jbe
bound
and
inc
js
mov
aaa
leave
pop
mov
add
and
out
ret
imul
jb
loopne
push
mov
popa
pop
adc
mov
scas
dec
test
xchg
aad
test
cltd
sti
mov
cmp
test
addb
push
cmp
test
pop
jbe
mov
popf
cmp
push
mov
cmp
mov
or
frstor
in
pusha
push
mov
in
es
outsb
mov
or
cmp
xchg
in
stos
cmp
xchg
adc
ss
sbb
inc
popa
mov
push
push
add
aaa
xchg
aad
dec
mov
stos
rol
lea
jno
cmp
adc
xor
jo
mov
fldl
add
push
ret
cmpsb
push
cmp
mov
imull
cmpsb
and
push
sbb
and
push
inc
std
aam
ret
jbe
out
cmovle
cmp
out
xorl
sub
cmp
jne
mov
xor
in
adc
shlb
cmp
mov
jle
andl
scas
push
or
addr16
iret
and
cltd
xor
lret
add
inc
push
push
add
adc
dec
or
or
mov
lcall
cld
xchg
adc
push
jmp
out
mov
sbb
add
pop
jecxz
jp
jmp
je
cwtl
stc
mov
xlat
sbb
xlat
adc
icebp
int
pop
fildl
lcall
inc
adc
sbb
fcmovu
mov
mov
repnz
adc
clc
xchg
ret
fwait
push
sub
in
cmpsl
jns
int
mov
movsb
out
stos
xor
mov
inc
jae
sti
adc
repz
ret
dec
dec
cmp
and
ret
arpl
add
jecxz
cltd
dec
cmp
insl
mov
es
sub
out
or
lea
ljmp
jl
out
sbb
inc
inc
cwtl
xor
std
mov
inc
jp
cmp
mov
push
in
les
cmp
xor
jns
push
mov
pop
insb
mov
jl
int
mov
jl
cmp
pminsw
sbb
fs
sbb
call
mov
add
lea
mov
enter
add
imul
inc
xchg
xor
loop
test
adc
adc
push
or
sbb
lds
leave
sub
inc
dec
adc
xchg
sub
push
jl
sbb
popf
test
shl
adc
jnp
popa
out
inc
mov
ss
lret
imul
jae
das
pushf
mov
add
movsb
aam
pushf
inc
clc
loop
loopne
or
test
pop
adc
xchg
fcomp
loop
or
pop
jge
mov
adc
adc
xor
and
mov
test
inc
mov
bound
popa
mov
or
fnstcw
push
xchg
pop
ljmp
ljmp
push
mov
xlat
in
xchg
or
cmp
push
stc
pop
out
sub
or
clc
inc
push
push
addr16
cs
adc
negl
cmp
dec
andl
or
xchg
mov
ja
push
inc
insl
adc
fsts
xor
xlat
ja
dec
push
add
lock
andb
repnz
jle
jge
xchg
adc
lods
jb
lcall
ret
in
iret
xchg
push
std
pop
push
testl
jg
mov
daa
ret
je
jne
insb
and
shlb
gs
outsb
or
mov
push
sbb
add
popa
orl
sbb
push
iret
jg,pn
rolb
or
cmp
push
cmpsb
or
or
mov
add
call
imul
fnstcw
pop
jb
iret
cmp
in
ja
movl
loopne
addr16
adc
ret
lret
jnp
mull
iret
mov
rol
lcall
mov
push
popf
repz
or
pusha
mov
aad
sbb
or
pop
xor
jno
insb
lcall
out
mov
mov
cmp
jb
dec
outsl
and
rcrl
add
ret
subl
stc
add
jo
and
cmpsl
stos
loopne
or
popa
sub
push
mov
inc
push
jbe
adc
aad
cmpb
scas
inc
and
stos
sub
loop
in
subl
mov
aad
inc
xchg
lcall
cmp
xor
sub
out
adc
and
add
mov
clc
inc
movsb
rcll
mov
daa
lahf
add
test
inc
stos
cli
cmp
dec
in
lcall
xor
movsl
out
sub
shlb
mov
sub
push
rcr
clc
shlb
xchg
clc
ss
enter
into
loopne
cmp
push
imul
movsb
push
ja
jb
mov
shlb
popf
pcmpgtb
add
pop
mov
sub
iret
outsl
daa
cltd
fcmovu
xor
ja
or
and
cwtl
cmpsb
mov
cmp
push
mov
into
push
mov
loopne
add
and
insb
cli
sub
xchg
or
clc
fisttpll
mov
xchg
fstpl
jns
js
outsb
fisttps
push
es
scas
loope
popa
movb
add
insb
imul
inc
daa
ljmp
ja
loopne
sbb
xchg
pop
pop
sub
sbb
jno
daa
push
mov
push
sbb
sub
or
cmpb
and
adc
ja
add
mov
arpl
testl
sub
in
jmp
je
icebp
push
cmpsb
popf
mov
fmul
pop
adc
test
xchg
mov
sbb
mov
out
repnz
lea
repz
lock
pop
mov
in
test
push
inc
push
and
in
jle
fistpl
lock
pop
jbe
inc
add
mov
inc
jno
xor
stos
xchg
scas
sub
cmp
mov
imul
push
sbb
add
fnstsw
mov
mov
cmovs
orl
mov
adc
gs
xor
mov
fs
sub
xor
cltd
arpl
and
insb
int3
js
push
adc
sbb
jo
sub
sub
imul
lcall
cmpsl
add
and
fsubrs
mov
ret
mov
cmpsl
xor
jmp
das
cmovae
xchg
fstl
mulb
adc
push
or
sti
lods
call
arpl
out
mov
imul
fsubs
mov
in
push
test
or
out
pop
mov
lret
fbld
mov
push
mov
inc
mov
inc
push
sub
jmp
in
dec
jmp
pop
dec
fs
lcall
shlb
jb
inc
pop
lods
inc
lods
jb
movsb
int3
inc
hlt
aaa
test
jmp
inc
es
lcall
mov
inc
add
test
in
jp
inc
cmp
in
je
ror
scas
mov
je
in
jo
xchg
add
cld
inc
shll
xchg
sbb
mov
adc
mov
fidivs
inc
and
adc
mov
and
sub
bound
js
testl
std
dec
sarl
pop
arpl
rcl
lods
icebp
pop
cmp
mov
test
adc
add
orb
mov
jbe
daa
sbb
jne
lahf
dec
aas
mov
ret
sub
les
out
adc
ret
les
shrb
add
out
or
loop
sbb
pop
sahf
cltd
dec
in
stos
aam
xchg
fstps
add
cmp
dec
sbb
arpl
in
stos
and
je
xchg
into
scas
sahf
lcall
add
rcrb
and
dec
or
pop
shr
pop
and
fistpl
add
mov
push
push
insb
repnz
sarb
movsl
stc
dec
fmuls
jno
mov
loope
scas
icebp
shlb
ja
ja
sbb
cmp
jo
test
xlat
ficoml
popa
push
adc
mov
mov
pusha
dec
rolb
lock
das
push
incl
push
push
int
nop
movq
rcl
pop
int
jb
aam
jns
mov
sbbb
mov
pop
dec
fdivrl
push
adcl
mov
dec
pop
add
shrl
mov
push
shrl
adc
jb
cmc
popa
fdivrl
jg
jp
xor
mov
call
pop
sub
or
mov
dec
js,pn
nop
pop
add
mov
adc
insl
mov
aaa
scas
cmc
add
and
xchg
fcmove
xor
mov
arpl
mov
iret
inc
pop
push
cmc
pushf
out
loope
pop
insb
insb
fcomps
repz
mov
push
mov
sub
cmp
cmp
lahf
paddq
mov
sahf
pop
fwait
sti
xchg
mov
push
iret
dec
pop
push
rol
aad
movsb
cmp
xor
and
jge
imul
push
sbb
inc
xor
gs
shlb
mov
push
mov
and
fnstsw
ret
test
out
loopne
fistpl
cmpsb
mov
or
lock
jmp
cmpsb
jl
leave
call
push
push
scas
mov
stos
subb
jg
or
js
addr16
or
mov
lret
aad
pop
jl
inc
pusha
push
hlt
imul
out
xchg
xchg
add
scas
out
pop
sbb
mov
jbe
xor
sar
inc
mov
outsl
sbb
enter
push
inc
inc
push
add
repnz
sub
pop
lret
fwait
into
push
adc
inc
pop
mov
movsb
pop
rorl
cwtl
call
dec
ljmp
dec
imul
sarl
ss
jae
sbb
popa
repnz
cli
in
jecxz
mov
jle
int
adc
mov
jb
shlb
cmp
mov
outsl
xorb
inc
je
cmp
pushf
lcall
pop
add
sub
out
into
dec
mov
pusha
stc
dec
xchg
jnp
lds
sbb
lods
dec
mov
scas
sub
rcrb
xor
cmpsb
loope
int3
xchg
imul
and
sbb
adc
pop
repnz
dec
cld
inc
outsb
push
xchg
xchg
inc
inc
pop
shll
pop
mov
mov
sbb
mov
add
nop
lret
and
clc
call
sbb
cmc
push
mov
sub
push
rclb
cmp
repz
mov
in
xchg
test
hlt
repnz
les
test
test
outsb
mov
ljmp
mov
cmp
inc
add
iret
pushf
mov
jp
mov
lcall
push
ficompl
loope
mov
std
xor
lahf
cs
pop
ss
adc
mov
inc
das
cmp
sub
fisttps
fwait
push
and
fisttps
jno
loop
cmpsb
test
mov
inc
loop
loope
imul
testb
dec
mov
fs
push
lret
cmp
push
out
sub
pop
xor
cmpsb
sti
mov
lret
loopne
fs
roll
cmpsb
adc
popf
test
inc
outsb
sub
mov
ret
arpl
mov
ret
fildl
mov
repz
jo
loope
cmpsl
test
pop
aad
mov
jnp
popf
test
push
pushf
inc
or
popf
hlt
movsl
or
mov
push
enter
mov
jae
or
cltd
xchg
jo
ljmp
rol
mov
cmp
flds
mov
sahf
cmp
out
es
xchg
mov
out
test
push
sahf
mov
inc
aaa
addb
nop
pop
push
adcl
lret
mov
push
jg
adc
mov
inc
cmpsl
es
mov
push
ret
mov
sti
scas
jg
add
and
cmp
fcoml
and
clc
mov
movmskps
mov
stos
fisubs
inc
js
aam
xor
hlt
int3
mov
fs
hlt
and
dec
inc
out
inc
mov
in
adc
hlt
insb
sbb
dec
jle
insb
push
adc
lahf
dec
test
pop
or
out
mov
mov
add
mov
adc
insl
pop
mov
movsb
cmp
mov
lcall
xor
ja
out
pop
inc
addl
std
fwait
fs
add
sbb
int
popf
loopne
mov
in
adc
pusha
fsts
sti
add
sub
test
dec
and
in
mov
gs
dec
insb
sub
sub
lret
fcmovnb
lahf
or
test
dec
shrb
and
and
jae
xchg
xchg
mov
clc
mov
xchg
dec
mov
mov
hlt
lea
cmp
push
adc
fs
push
out
or
arpl
fldl
jne
mov
insb
and
in
idivl
fstl
mov
mov
dec
ror
int3
inc
lock
mov
cmpsl
lods
push
daa
mov
jle
outsl
mov
dec
scas
mov
push
lahf
stos
xchg
sbb
add
pop
xchg
jnp
adc
pushf
mov
sbb
cld
inc
dec
xor
pushf
out
into
mov
sbb
add
lods
js
enter
dec
ret
inc
push
dec
mov
adc
adc
out
push
fldt
pop
jns
loop
jns
les
fstpl
int
pop
adc
in
fiadds
call
aas
jmp
and
stc
lock
cs
aas
or
pminsw
clc
jb
push
popa
test
and
cli
pop
jecxz
xor
fs
fs
xor
xlat
ret
cmc
repz
hlt
lret
or
inc
into
in
loop
push
adc
jne
js
loopne
mov
push
cwtl
push
pop
lahf
movsl
inc
push
mov
pop
xchg
mov
add
adc
push
js
xor
push
orb
pop
xchg
flds
jb
pop
pop
xchg
jns
loopew
xchg
fiadds
xor
mov
inc
enter
enter
out
iret
int
inc
pop
push
insb
mov
es
imul
adc
sub
stos
push
repz
loope
or
mov
mov
xchg
lds
std
int3
sub
stos
scas
imul
int3
xchg
call
mov
or
inc
add
popa
bound
lock
and
mov
daa
je
jno
xchg
cltd
add
mov
fstpt
pop
sbb
sbb
mov
je
xor
pop
loopne
icebp
nop
aam
lds
ret
inc
test
jb
mov
mov
rcl
imul
test
adc
adc
stc
or
jb
mov
push
filds
push
mov
or
in
sbb
loop
fsub
jb
pop
dec
jo
icebp
cs
jne
aam
fisttpll
adc
sub
in
and
push
mov
ljmp
sub
test
std
stos
mov
jno
lods
pop
dec
xlat
jo
fistpll
mov
je
inc
push
rcr
or
notb
jp
aam
lock
jmp
into
out
mov
ds
lock
xchg
jo
pop
xor
xor
aaa
cli
aas
jo
ja
clc
imul
inc
push
icebp
cmpb
xchg
ds
aad
fisttps
into
jge
sub
xor
lods
mov
outsb
mov
jecxz
test
ret
or
pop
subl
sarb
sbb
mov
pop
insb
mov
xchg
scas
fcoms
cltd
cmp
pop
insb
aam
inc
loop
or
mov
pusha
movsl
adc
lret
fisubrl
dec
dec
push
sbb
ds
xchg
mov
incb
ret
jbe
dec
rep
pop
les
and
pusha
mov
jbe
xorb
cmp
mov
or
js
fwait
xchg
mov
mov
clc
test
push
push
dec
add
es
inc
shlb
fs
ret
mov
jo
out
push
inc
aaa
fcmovbe
out
outsb
rcl
cmp
aam
test
or
xor
pop
jnp
into
popf
xor
or
nop
movsl
mov
test
dec
mov
mov
inc
push
test
ret
in
fucomp
sbb
lods
hlt
arpl
int
ret
int3
out
adc
sub
rclb
aam
mov
jp
push
outsl
ret
lock
call
fisubl
out
add
in
or
orl
xchg
dec
lcall
cmp
push
mov
mov
xchg
cmp
lret
mov
inc
push
data16
xchg
cld
jns
sub
aad
ret
mov
xchg
fadds
push
cmp
idiv
jae
aad
data16
lret
inc
add
xor
pop
roll
inc
cmc
arpl
mov
xor
mov
lcall
out
sub
jge
les
insb
jg
dec
pop
or
addb
mov
testl
jo
mov
mov
mov
les
popa
pop
mov
mov
clc
lcall
iret
lea
mov
pusha
push
lock
rclb
or
ja
or
sbb
mov
mov
and
inc
xor
adc
fwait
add
jp
call
pop
fnstenv
jbe
jmp
xor
and
roll
insl
mov
iret
jg
punpcklbw
jbe
jp
lods
int
inc
rcll
and
add
add
jae
xchg
imul
and
mov
or
mov
jle
mov
outsl
add
push
sub
dec
mov
arpl
movsb
mov
dec
mov
sbb
adc
jne
int3
sbb
dec
aas
pop
cmp
inc
lock
mov
push
aam
push
add
cmpl
fstpt
aad
or
pop
add
imul
dec
mov
test
jbe
popf
xchg
xorl
jns
mov
jl
xor
sbb
sbb
fwait
sbb
int
mov
orb
out
xchg
inc
movsl
xchg
lods
pop
ds
ljmp
mov
inc
test
cmp
clc
dec
das
sub
xlat
lock
inc
inc
mov
rolb
dec
movsb
sbb
js
cmp
pop
inc
push
xor
jmp
call
insb
adc
cs
cmp
sub
and
jecxz
adc
xchg
push
cmp
in
clc
pusha
lahf
sub
xor
mov
das
rorb
out
pop
inc
das
pop
shrb
and
add
mov
push
decb
fwait
cmp
les
clc
pop
mov
inc
pop
jle
js
mov
pop
xlat
cmc
adc
sub
jp
jl
jb
jns
pop
lea
xchg
mov
push
xchg
loop
arpl
filds
xchg
xor
popa
pop
test
lods
or
adc
rcl
popa
jbe
dec
dec
or
jb
xchg
mov
mov
clc
jns
cmp
pop
mov
push
aam
flds
mov
rorl
lock
pushf
push
push
mov
out
or
pop
cmp
repz
mov
sarl
fcomps
fisttpll
and
test
dec
movsb
mov
mov
repz
clc
loopne
mov
inc
inc
push
or
arpl
es
xchg
cmpsl
ret
jge
push
mov
mov
sbb
mov
cmpsl
dec
ss
push
xchg
mov
xchg
mov
mov
cli
cmp
mov
xor
or
ffree
fs
sti
roll
shll
pop
xchg
fwait
test
subb
fdivl
jp
lods
jle
jb
inc
pop
aad
cmp
sbbb
jmp
push
mov
imulb
loop
push
fnstsw
sub
stos
mov
mov
fwait
arpl
pop
inc
aam
imulb
iret
dec
sbb
push
add
jmp
faddp
mov
in
mov
and
mov
repnz
std
stos
xchg
mov
or
pop
inc
aas
cltd
fistps
jb
cmp
mov
jne
cwtl
inc
push
mov
mov
pusha
lcall
fldenv
stc
rcrl
xchg
jo
adc
add
xchg
xorb
and
notl
ret
cmpsb
pop
lods
cwtl
stc
sbb
jae
daa
leave
fwait
push
nop
xchg
inc
xchg
push
pop
add
outsl
es
pop
fcmovu
sahf
aam
lock
stos
mov
mov
faddl
mov
gs
repnz
clc
adc
sbb
pop
cmp
jmp
cmp
rorl
xor
jb
in
out
inc
inc
mov
mov
movsb
pop
xchg
sbb
xor
cld
shl
pop
pop
sbb
idivb
cmc
and
inc
enter
aad
jmp
mov
es
insb
mov
mov
pop
mov
xor
imul
push
jne
ja
daa
loope
xchg
xchg
inc
inc
xchg
sub
and
lock
jle
adc
inc
sahf
insb
cli
jmp
jp
or
ds
imul
mov
out
mov
data16
dec
pop
add
inc
inc
inc
push
cmp
ljmp
jae
imul
test
cs
or
mov
outsb
testl
leave
fst
nop
push
pop
inc
push
pop
sub
sbb
sub
add
push
out
test
xchg
dec
sarl
fwait
insb
aas
test
scas
pop
jecxz
les
cmp
repnz
repz
xchg
and
push
jno
lcall
pop
mov
push
sahf
hlt
sahf
je
cltd
jmp
push
or
dec
dec
or
inc
inc
addr16
pop
movsb
inc
lcall
inc
mov
fwait
jle
sub
stos
pusha
mov
jle
sub
adc
push
pop
in
mov
int
jp
cwtl
and
mov
jb
fmuls
in
mov
sbb
cld
cltd
fbstp
inc
ret
stos
xchg
push
pop
sbb
js
push
jb
mov
data16
mov
imul
mov
adc
mov
or
push
push
pop
orb
pushf
mov
dec
aaa
fcmovne
mov
push
je
sub
sbb
out
mov
cmpsb
sub
xchg
ja
mov
sti
mov
jno
outsb
loope
stos
daa
jl
adc
loopne
push
sub
inc
adc
push
and
enter
jo
loop
leave
insl
repz
fwait
xchg
and
adc
push
lods
push
push
cmp
or
dec
cmpsl
mov
loopne
mov
dec
pop
dec
push
or
fmuls
in
push
popf
loope
ret
out
add
mov
scas
mov
fs
adc
dec
addr16
dec
add
cmc
sbb
lock
mull
mov
scas
pop
or
std
js
lret
test
iret
scas
mov
fsts
lahf
sbb
dec
mov
lock
mov
push
cli
ja
and
dec
int
rorb
push
ja
in
loope
sub
mov
lret
cmp
pushf
out
and
xor
cmpsl
push
cld
push
cmp
mov
xchg
cld
mov
cli
inc
stos
adc
lods
je
test
gs
pop
jge
mov
mov
bound
adc
and
call
push
mov
out
mov
lods
cmp
mov
jmp
in
cmp
dec
jno
sbb
dec
pusha
test
pop
movsl
jmp
jns
push
mov
mov
movsl
add
fwait
mov
shrl
adc
les
mov
lahf
data16
fisubs
out
push
adc
push
or
push
mov
mov
pushf
fnstsw
or
popf
sbb
lock
cmp
cmp
mov
cmp
pop
xchg
lods
xor
aaa
inc
andl
outsl
leave
xchg
xor
sbb
mov
add
arpl
mov
mov
sub
jo
mov
aad
fst
cltd
aaa
mov
scas
xchg
jae
aas
and
inc
cld
aas
mov
scas
fadds
test
popf
bound
ja
push
cmpsl
sbb
push
shl
clc
xor
inc
hlt
push
dec
xchg
das
fs
xor
sbb
jg
ss
negl
scas
popf
adc
scas
dec
or
dec
movsl
pop
fidivs
cli
cmp
jmp
popa
enter
pop
sbb
add
and
xchg
js
cltd
jge
xchg
xor
popf
xchg
mov
imul
cld
dec
inc
adc
test
sub
js
icebp
or
or
popf
or
pop
mov
in
xchg
push
mov
xor
inc
jns
xchg
push
popa
das
int
fldcw
pop
sbb
mov
push
sub
mov
loop
int3
cmp
or
sub
out
int
jmp
scas
mov
or
stc
lret
aas
imulb
out
lahf
sbb
imul
es
sahf
inc
stos
jle
fisubrs
outsl
nop
loop
comiss
cmp
inc
xchg
cs
adc
mov
cmc
aas
loop
shlb
mov
ret
push
test
push
xchg
mov
pop
ja
enter
cmp
pop
fincstp
pusha
jecxz
arpl
and
adc
xor
aas
dec
xchg
add
pop
mov
mov
push
dec
fmul
pop
jl
sub
scas
mov
sbb
ret
mov
popf
insl
les
mov
imul
jb
repz
jle
inc
jae
jno
bound
xchg
inc
dec
jl
mov
mov
cmp
xor
sub
in
mov
dec
jl
mov
push
xor
cmpsl
arpl
jno
arpl
mov
pop
sub
cmp
and
loope
int3
jne
int
and
das
mov
clc
add
mov
sysret
psubsb
insl
test
cmpsb
sub
pop
and
mov
pop
mov
pop
cmp
jne
xor
xchg
clc
mov
jo
mov
xchg
imul
aam
mov
outsl
cmpsl
jecxz
lret
and
xchg
das
pop
mov
dec
sub
inc
sbb
and
cld
and
adc
pop
dec
and
and
xor
sub
lods
adc
add
cmc
sbb
and
mov
fldl
push
or
adc
int
cmp
mov
pop
adc
jae
ljmp
jo
es
ficomps
mov
cmpsb
ja
mov
pop
jno,pn
and
test
loope
test
mov
mov
arpl
inc
rol
lret
scas
hlt
fsin
test
lret
enter
mov
add
imulb
out
nop
dec
xchg
test
pop
jnp
add
jnp
flds
mov
pop
mov
in
or
mov
push
inc
push
mov
jle
adc
dec
test
mov
cmp
lret
add
pop
ja
add
pop
xor
push
push
mov
int3
js
push
loopne
sbb
xor
dec
jmp
dec
cwtl
and
dec
jg
sbb
xchg
lcall
stc
mov
in
das
lret
xorb
sub
push
stos
repnz
and
shr
push
ret
inc
fwait
inc
je
shlb
movsb
imul
or
lds
xchg
mov
push
das
movsl
pop
int3
popf
jg
cmpsb
and
sub
adc
jl
mov
inc
xor
sub
inc
mov
push
mov
sub
xchg
pop
mov
and
popa
lods
cmp
mov
jbe
clc
dec
cmc
xor
jnp
xor
mov
loop
mov
push
push
xor
lret
dec
jl
iret
or
lods
imul
mov
jg
rorb
pop
out
xchg
loopne
push
dec
pop
sbb
and
dec
push
push
repnz
js
roll
pop
xchg
mov
dec
es
mov
es
mov
jge
pop
inc
inc
test
push
inc
stos
xchg
inc
add
shll
mov
ds
mov
cs
mov
test
xor
xchg
mov
sbb
sub
lret
push
mov
sub
mov
shr
jg
mov
test
dec
mov
les
jg
xchg
fdivl
aaa
fcmovnbe
xchg
in
xorl
mov
jb
loope
xorb
es
jne
loope
mov
push
cltd
sbbl
rclb
lahf
sub
arpl
lcall
pop
adc
adc
jmp
pushf
add
daa
dec
push
pop
push
adc
test
jbe
in
es
test
bound
inc
cmp
popf
adcb
xor
add
sbb
in
mov
mov
mov
sbb
ret
and
pop
push
xchg
fldcw
xor
pop
cmp
in
lahf
mov
xchg
pop
mov
cmp
fs
sbb
lods
in
aam
leave
and
xlat
lods
outsb
xchg
sub
mov
aaa
and
aam
cs
fs
cli
push
dec
sub
pop
jb
scas
jae
mov
mov
adc
sti
jo
add
in
lock
jb
cmp
shll
jg
mov
into
sub
call
or
xor
cmpsb
lret
inc
pop
and
mov
lcall
or
pop
jge
scas
hlt
add
pop
push
js
jno
xor
cmp
xor
loopne
and
les
xchg
pop
add
data16
jle
and
xchg
mov
xchg
xor
adc
jo
ljmp
cmp
xor
mov
sbb
push
ficoms
fcmovbe
mov
imul
ljmp
notl
mov
cs
dec
inc
lods
xor
mov
js
add
mov
mov
xchg
xchg
mov
push
mov
sbb
inc
dec
xchg
mov
lods
sub
dec
test
lcall
jo
icebp
dec
scas
cmp
jge
daa
pop
jne
add
push
or
ljmp
sbb
add
imul
lret
cmp
mov
call
xchg
or
push
pusha
adc
adc
xchg
and
out
sbb
sub
rol
and
ljmp
lahf
mov
int3
xor
daa
sahf
loopne
sub
cmp
inc
fdiv
cmpsb
call
in
push
jns
aas
or
mov
push
xchg
fsubl
ficomps
ja
rcl
push
orl
pop
movsl
lock
ret
lcall
dec
fists
js
dec
fstps
inc
ret
mov
out
inc
fldt
and
push
and
shrl
mov
xor
pop
xchg
and
pushf
xchg
push
add
sti
mov
or
mov
lea
add
adc
data16
inc
je
push
stc
int3
scas
inc
xor
sub
hlt
mov
lock
aas
rorb
cltd
loopne
fisttpll
leave
cmpl
imul
int
orl
fldenv
nop
orl
out
pop
push
scas
std
dec
pop
adc
loope
and
mov
adc
jecxz
xchg
data16
leave
and
pop
mov
test
mov
mov
cmc
cmp
or
push
aad
jbe
outsb
mov
out
lods
les
sub
push
lret
loopne
inc
insb
dec
loope
jo
adc
shll
or
mov
lods
xchg
movb
inc
psubsw
ficoml
lds
adc
into
add
mov
cmp
push
dec
and
imul
pop
ja
xor
hlt
popa
jg
stc
xor
fistps
incl
test
adc
sbb
push
mov
xorl
lods
lcall
sbbb
mov
and
out
jle
popf
jg
mov
gs
jmp
adc
cmc
fcoms
sbb
push
scas
adc
inc
cmpsb
stos
lret
mov
into
dec
mov
ja
adc
inc
pop
xchg
or
mov
add
in
cmc
cli
out
sbb
in
mov
das
popf
mov
xchg
rcrl
adc
mov
notb
divl
jbe
sbb
sbb
in
lea
stc
cmpsl
sbb
enter
jecxz
dec
xchg
packsswb
add
push
out
dec
lock
jge
mov
push
mov
mov
push
and
movsl
rolb
cmpl
dec
mov
cwtl
aam
repnz
addb
add
ficoml
into
es
cld
mov
xchg
adc
movb
loop
sub
mov
in
jg
mov
xchg
sbb
fnstcw
push
push
addb
cmp
push
xchg
int
popa
aam
ficompl
sbbb
add
jae
mov
fimull
sub
or
jl
test
push
addb
mov
repz
push
or
push
push
shrb
movsb
popa
xchg
cmp
in
test
aad
mov
pop
inc
xor
into
dec
cmovl
fs
movnti
jmp
aaa
sub
xchg
hlt
cmp
in
mov
sub
xor
cmp
cmp
mov
out
xor
lods
xor
lods
in
xchg
mov
fsubr
jle
int3
pop
and
cmp
in
cmp
lahf
push
arpl
jmp
lret
out
sti
pop
mov
inc
jmp
xor
jne
xchg
mov
mov
lods
jl
out
cmpsb
cmc
sar
insb
mov
inc
nop
sbb
aaa
call
outsb
insb
jp
lret
adc
pop
int
out
test
loope
cmp
push
xchg
xor
ljmp
mov
testb
sub
std
unpckhps
test
xchg
jge
aas
aaa
je
add
mov
or
mov
xchg
gs
sub
test
xor
jge
mov
lods
rolb
and
sub
fists
xchg
pop
xchg
mov
jmp
and
shlb
loopne
mov
fiadds
iret
mov
jno
cs
sbb
xchg
cmpsb
fildl
or
mov
insb
scas
mov
int3
xchg
inc
mov
jg
fimuls
or
dec
sbb
xchg
mov
clc
push
mov
or
sub
jnp
adc
mov
jp
mov
mov
mov
loope
and
add
lcall
bound
out
aas
cltd
int
movsl
mov
jle
jb
sub
xchg
push
xor
pop
cmpsl
adc
mov
xchg
mov
pop
int3
mov
jge
xor
ficoml
xorl
pop
lock
rcl
sub
outsl
or
and
divb
scas
jb
lds
or
mov
cmp
enter
xor
shlb
popa
jb
lret
inc
movd
mov
enter
cmpsl
ret
cmp
movsb
les
testl
lahf
dec
ret
dec
sub
add
xchg
push
rclb
je
xor
lahf
and
cwtl
adc
lods
shrl
and
aad
lock
stos
xchg
pusha
dec
int3
sub
fsubrl
loope
aad
out
lcall
lcall
popa
and
add
pusha
ljmp
xchg
lahf
out
sbb
mov
xlat
or
adc
rcrl
ljmp
adc
lea
pop
out
mov
sbb
mov
push
test
insl
push
stc
mov
outsb
loopne
adc
test
enter
test
mov
addr16
rdpmc
test
mov
push
sbb
push
xor
imul
pusha
adc
mov
mov
aam
and
xor
mov
int3
and
push
je
mov
sbb
or
mov
mov
adc
xchg
mov
leave
and
jnp
enter
mov
imul
xchg
in
mov
les
cmp
mov
in
pushf
das
popf
cli
and
into
ret
decl
jne
jge
imul
sbb
xchg
es
lods
xor
sub
call
sub
sbbl
lock
das
jecxz
repnz
mov
in
pop
roll
int
mov
orl
sti
inc
adc
repnz
fnstenv
sub
inc
popf
bnd
jb
pushf
mov
cwtl
jns
sbb
cmp
icebp
mov
ja
dec
popf
jle
ds
pop
jmp
sub
stc
push
andl
pop
movsl
aaa
push
insl
loope
jl
outsl
jp
inc
icebp
gs
or
fwait
cmpsl
sbb
mov
mov
idiv
fldt
mov
inc
push
test
or
mov
imul
fmul
add
jns
mov
inc
ja
negb
mov
orl
fnsave
add
sbb
cli
fs
sbb
pop
inc
int
fucomp
rcrl
call
test
pop
sub
ljmp
test
lcall
fmul
ja
pop
adc
push
out
push
shrb
test
fmuls
push
push
push
dec
push
push
cld
lcall
mov
in
xor
sbb
mov
data16
lret
lods
adc
xor
sub
cmp
fdivrl
pop
xchg
cmp
pop
pop
rorb
mov
fcoml
js
fs
int
mov
aam
test
in
mov
mov
shll
and
cmp
mov
push
or
repz
movsb
and
lods
divb
pop
out
scas
lret
cli
rcr
or
imul
jg
xchg
test
rolb
loopne
and
imul
ffreep
sub
andb
fs
jno
fstpt
andl
push
nop
mov
imul
and
mov
adc
in
jae
jl
jg
sbb
fs
shlb
iret
adc
add
notb
je
sub
in
mov
ljmp
int3
mov
mov
mov
adc
jg
jo
adc
pop
adc
mov
pop
jne
out
inc
pop
dec
cmpsl
ret
jg
xchg
cmp
les
jbe
push
fs
push
dec
mov
push
jnp
sbb
adc
jno
cmp
aas
push
scas
lret
and
rorb
das
test
sti
jg
cmp
add
and
std
mov
popf
jmp
and
or
push
daa
sbb
sub
sub
mov
sub
add
push
adc
lock
dec
test
mov
scas
aaa
or
ficoml
or
bound
call
nopl
mov
push
loop
rcl
stos
ljmp
pop
movsb
jg
out
xorl
js
pop
cwtl
roll
mov
js
rorb
inc
out
fwait
lret
and
xor
call
xchg
pop
jno
rolb
mov
loop
add
push
sbb
insl
xchg
iret
pop
mov
je
cltd
mov
clc
fs
jnp
shl
lahf
lcall
test
or
je
in
sbb
sub
jecxz
xor
sub
mov
mov
mov
or
rcrb
fcom
or
xchg
sbb
and
sbb
repz
and
lahf
mov
push
cld
out
sbbb
sar
cld
push
lahf
xchg
mov
mov
jg
int3
dec
pop
sbb
xor
cmpsl
repz
mov
pop
inc
popa
cmp
sbb
dec
es
repnz
or
or
ss
addr16
xchg
loope
out
jp
xchg
inc
test
jmp
inc
push
xorb
in
test
scas
adc
ficomps
insl
push
vhaddpd
dec
or
fildl
out
cmpsb
jb
mov
shll
les
imull
scas
pop
xchg
lret
gs
sub
push
dec
sbb
rol
inc
add
iret
out
inc
mov
cltd
jle
les
and
sbb
movsb
movsl
jle
xor
cli
sbb
pop
orb
mov
sub
cmp
jnp
enter
int3
jne
insb
or
xchg
dec
push
cwtl
or
add
adc
add
orl
sbb
cmc
mov
push
cmp
data16
pop
adc
shrl
jo
popf
mov
and
andl
adc
xlat
push
in
stc
xchg
and
push
adc
adc
loope
in
adc
or
into
cmp
and
xchg
sahf
std
aaa
mov
and
enter
loopne
sub
lods
adc
cld
mov
in
clc
repz
mov
pop
add
mov
xor
sbb
adc
mov
lahf
cmc
or
push
jp
sbb
aad
pop
dec
in
mov
and
mov
pop
xor
mov
dec
xchg
mov
xchg
into
out
popf
dec
pop
flds
cmp
cmp
push
les
in
jp
repnz
mov
xchg
popa
mov
outsb
leave
cmp
and
ret
jne
mov
jne
mov
test
fisubrs
adc
test
cmp
mov
insb
xor
rcr
scas
insb
popa
addr16
mov
les
mov
fdivrs
out
jle
gs
jp
mov
stos
push
push
xchg
pop
js
rcl
scas
push
loope
das
mov
outsb
cltd
repz
and
pop
aas
aas
jp
pusha
scas
mov
and
push
movsb
scas
adc
inc
and
mov
enter
shrl
rcr
jge
pop
out
add
pop
test
inc
pop
pop
mov
xchg
fwait
push
loopne
int3
jmp
and
add
and
mov
mov
adc
lods
mov
mov
insl
aam
test
jno
pop
jle
cld
ret
ficoml
or
dec
sbb
push
stc
pop
dec
stc
cmp
and
imul
mov
sub
dec
arpl
clc
mov
dec
pop
testb
and
js
push
mov
stc
adc
test
or
push
fs
and
popa
fsts
xchg
push
sbb
mov
test
imul
inc
enter
pop
adc
push
call
pop
cmc
imul
push
fistps
divl
mov
cld
jl
lret
or
int3
fcompl
dec
dec
xor
int
pusha
sub
test
pop
cld
lahf
pop
adc
icebp
jne
jmp
outsb
sbb
push
jb
lods
mov
lcall
push
pop
out
in
fstpt
inc
outsb
jns
sub
cmp
xor
add
mov
std
jecxz
xor
daa
mov
and
jp
ret
inc
pop
adc
and
jecxz
loopne
rol
call
jecxz
adc
adc
imul
es
sahf
cmp
or
mov
fimuls
add
cmp
xchg
jns
lods
es
psrad
inc
setbe
sbb
cld
ljmp
ret
fstpt
mov
mov
gs
in
inc
push
or
ja
mov
or
xlat
fmuls
das
xor
movlhps
inc
fcoms
ljmp
sbb
sbb
js
xchg
mov
and
out
nop
daa
mov
and
and
jp
add
in
mov
popa
mov
sarb
dec
add
or
jne
addr16
les
jle
cmp
divb
mov
gs
nop
dec
lret
jge
repnz
xor
iret
je
pop
mov
mov
and
mov
inc
sub
inc
rcrb
jbe
aad
mov
ret
outsl
xchg
sub
lods
ret
negb
imul
cwtl
jecxz
shrb
push
filds
cmpsl
sub
mov
scas
mov
mov
xchg
add
xchg
push
faddl
xchg
outsb
lret
cmp
cs
leave
das
jno
loope
test
imul
mov
mov
push
into
in
test
fmull
lahf
lcall
mov
clc
cwtl
cltd
xchg
call
cmp
inc
lods
or
inc
adcb
cmp
jg
or
leave
test
pop
xchg
dec
add
ret
sti
shrb
in
push
in
add
enter
out
jns
add
js
cmp
testl
rclb
mov
cs
push
lds
out
out
add
movsl
sub
jns
mov
fisubrs
dec
pop
jne
or
mov
xor
pop
adc
adc
je
pop
jbe
mov
faddl
push
or
jle
adc
jle
push
std
cwtl
aas
loopne
pop
xchg
aad
pop
negb
bound
pop
insl
lods
in
adc
sub
cld
out
outsb
xor
bnd
pop
or
xchg
sub
push
ljmp
test
fcoms
fdivp
xchg
in
pop
gs
aad
sub
je
xlat
ret
mov
mov
mov
inc
xchg
pushf
push
insb
sub
ret
push
jmp
mov
mov
sbb
aaa
mov
push
sbb
pop
dec
sti
xlat
push
xchg
sub
sti
lds
rcrl
xor
divl
js
jp
dec
out
lret
mov
das
or
or
popf
dec
loop
mov
push
pop
loopne
xor
mov
pop
cmc
clc
ret
mov
pop
shrb
movsb
into
lea
repz
pop
dec
cltd
add
xchg
mov
in
ror
pop
jns
mov
xchg
fisubl
in
stc
outsb
movsb
and
mov
sbb
xor
cmpsb
adc
fwait
mov
push
push
xchg
cmpsb
cmp
sub
imul
sbb
jo
call
push
testb
test
pop
in
ds
aas
jge
pop
add
sbb
inc
adc
inc
mov
push
dec
jecxz
outsb
push
dec
sub
movsb
jl
xchg
mov
gs
mov
outsb
xor
arpl
movb
push
mov
stos
repnz
inc
mov
mov
push
int3
sub
adc
and
push
mov
je
inc
aas
rcrl
cltd
and
push
leave
or
cmp
fcompl
inc
adc
mov
dec
rolb
fsubrl
call
mov
mov
sti
enter
int3
jp
pop
addb
aas
and
dec
mov
lods
mov
in
add
ja
xchg
addb
popa
sti
adc
mov
ret
xchg
cs
jb
lcall
outsb
je
insl
adc
lock
rcll
sar
mov
enter
scas
sbb
inc
hlt
add
mov
add
in
loop
push
jb
rcll
add
repz
inc
out
xchg
sub
cmpb
add
mov
xchg
lret
inc
inc
sub
inc
mov
mov
and
orl
das
mov
cmp
and
or
dec
int3
dec
xor
mov
and
xor
or
push
mov
add
xchg
xchg
iret
add
roll
mov
fsubs
sbb
psubb
ss
jns
push
pop
push
fimull
push
push
lret
dec
mov
cmpsb
movsb
cmp
mov
shrb
xchg
mov
mov
dec
inc
ljmp
push
mov
mov
insl
movsl
dec
xchg
lock
scas
mov
imul
lret
pop
xchg
popa
fs
sbb
add
stos
scas
int3
jne
mov
mov
mov
fwait
mov
push
mov
xchg
scas
mov
mov
out
stc
and
cli
add
jns
dec
ds
out
shl
mov
cmp
mov
xor
or
jae
lret
sbb
ss
subb
outsb
insb
loopne
xchg
lods
and
jno
inc
sbb
jp
out
mov
pop
push
daa
cs
and
pop
aaa
je
mov
cmpsl
xchg
shll
imul
ret
mov
les
push
mov
add
inc
test
jno
push
xor
insl
add
push
mov
pop
mov
cmp
push
punpckhwd
fwait
lea
imul
in
addr16
inc
icebp
stos
lods
fs
sbbl
inc
call
sbb
repnz
xor
jecxz
mov
lea
shll
cld
sub
popa
cmpsb
lods
cmp
jne
mov
mov
or
enter
ljmp
xlat
pusha
push
lea
loopne
pop
push
jmp
sub
xchg
enter
sub
scas
sub
mov
pop
dec
arpl
test
xchg
dec
es
or
mov
adc
mov
into
dec
mov
into
dec
stos
xchg
enter
cli
scas
arpl
fnsave
or
pop
enter
sbb
out
adc
testb
into
add
fisubrs
add
cli
adc
std
dec
lods
adc
fs
mov
out
inc
ljmp
cmc
jns
xlat
inc
dec
mov
repz
cmp
addb
stos
test
in
and
push
pop
mov
cmp
lock
xor
jns
and
mov
push
mov
xor
and
adc
out
arpl
mov
stos
in
movsb
or
push
ret
inc
mov
push
sbb
mov
into
push
mov
pop
and
adcb
jecxz
push
wbinvd
mov
xor
jns
rcr
test
mov
dec
mov
mov
inc
xchg
rorb
xor
ss
pusha
sbb
ret
in
insb
fmul
cmp
cmc
orl
cwtl
sub
loop
in
dec
ja
sbb
adc
mov
xchg
add
stos
cld
xchg
dec
scas
xor
int
or
ja
ljmp
adc
sahf
inc
xor
clc
stos
xchg
pop
scas
paddb
jmp
xchg
mov
adc
inc
test
int
lock
mov
push
clc
cmp
dec
out
orb
and
and
and
xor
mov
cltd
inc
in
add
test
xchg
pop
test
mov
scas
repnz
cltd
cmpsl
and
xchg
mov
push
idiv
loop
lock
inc
inc
jnp
inc
stc
movsl
fldcw
pop
dec
stc
pop
adc
lds
fcoms
xor
cmp
xchg
sbb
jo
popf
mov
leave
imul
out
xchg
jp
adc
shll
outsb
lahf
sti
mov
ja
mov
aam
imul
in
pop
fsubp
stos
out
loope
cmp
jno
insl
clc
scas
enter
jle
fs
dec
sub
xchg
in
sub
insl
enter
and
xchg
mov
xchg
or
jg
push
inc
outsb
sti
lock
movsl
clc
sarl
jp
xchg
ja
pop
xchg
mov
inc
aas
mov
cld
popa
outsl
or
mov
fildll
sub
fcomp
sub
mov
jae
loop
movsb
fcompl
pop
in
jnp
and
push
pop
ret
sub
xlat
ds
out
pop
ret
dec
xor
xchg
int
out
pop
dec
fsubr
pop
fwait
addl
test
cli
insb
stc
imul
dec
mov
pusha
mov
mul
pop
aad
psllw
and
fidivrs
dec
mov
insb
adc
testb
xchg
jmp
lods
test
stos
ss
outsl
or
jb
scas
test
cmp
lret
xor
add
sub
inc
inc
test
inc
arpl
cmp
test
lahf
mov
cmp
cmpsb
mov
or
jns
ja
mov
lds
leave
mov
jne
mov
test
pop
popa
xchg
nop
xchg
lahf
mov
xchg
icebp
shrb
daa
jo
jo
lret
sahf
dec
xor
dec
and
popf
add
movsb
inc
pop
nop
push
lea
or
push
fisubrs
pop
insl
outsl
iret
sub
dec
jl
das
cld
inc
imul
daa
aad
packuswb
sarb
push
push
or
lds
dec
lods
jge
lods
imul
mov
fldcw
cmpps
loope
jno
jg
stc
ret
repz
int
sbbl
nop
fldl
aaa
es
jbe
aaa
stc
mov
and
movb
adc
xor
loop
ds
mov
ss
in
mov
imul
xchg
dec
outsb
sub
add
shll
fucomi
push
jmp
enter
cmp
jle
jl
cmp
adc
orl
stos
popf
adc
inc
data16
mov
insb
mov
mov
sub
adc
push
rolb
outsl
mov
das
and
stc
push
dec
add
daa
fdivl
inc
jns
sbb
xor
ret
or
mov
add
jb
adc
cmp
cmp
test
rcl
push
hlt
int3
mov
repnz
fs
push
pop
fistpl
pop
or
sub
iret
or
and
mov
push
push
add
rclb
and
sti
or
push
std
sub
inc
data16
xchg
rcll
cmp
adc
or
lret
cmp
aaa
cmp
pop
xchg
outsb
or
and
loop
mov
idivl
jns
adc
mov
or
faddl
xchg
mov
outsb
repnz
imul
lahf
inc
xchg
xchg
inc
outsl
int3
pop
inc
scas
dec
xchg
daa
xor
rcr
cmp
imul
mov
xchg
pop
pop
pop
sahf
shl
mov
cmp
and
repnz
cmp
and
in
cmp
jge
inc
fcom
mov
insb
call
mov
mov
out
cs
fwait
inc
fs
sbb
mov
dec
loopne
mov
dec
loope
jg
push
push
cmp
mov
push
rol
into
mov
xorb
adc
push
rcrl
dec
mov
sub
mov
ds
cmp
cmc
aas
mov
mov
cmp
dec
pop
fcompl
xorb
ljmp
jae
inc
mov
ss
mov
je
shll
sub
inc
cmp
mov
or
je
cwtl
sahf
es
mov
pop
pop
int3
push
mov
dec
xor
mov
filds
add
mov
mov
xor
insl
mov
or
inc
pmaxub
push
sarb
xchg
pushf
aas
lret
xorb
pop
xchg
pop
hlt
fs
dec
es
rcll
dec
mov
lret
popa
sub
mov
jae
jmp
or
mov
repz
pop
stc
jg
ja
push
cmp
dec
inc
enter
psrad
xorb
jns
inc
sbb
ja
xchg
mov
stos
cmpsl
out
and
push
fcoms
push
cmp
or
mov
or
scas
add
mov
push
enter
jl
mov
pop
pop
sbbl
mov
loop
jbe
gs
inc
sub
inc
or
mov
xor
icebp
adc
test
nop
dec
aaa
adc
data16
jne
shll
or
aad
jns
leave
push
xchg
and
aad
std
push
adc
or
pop
pop
jle
fdivrl
push
push
inc
es
out
iret
fcmovnbe
mov
ljmp
mov
aad
add
es
movsl
lret
nop
cmpsl
lcall
mov
push
clc
xchg
fidivl
ljmp
pop
addb
movsb
cmp
ja
std
inc
push
popf
flds
push
jg
inc
adc
jg
sbb
push
clc
ja
add
shll
js
jecxz
cmp
lods
mov
and
adc
jne
outsl
dec
cmp
in
fmuls
pop
lret
scas
in
icebp
popf
mov
and
in
mov
out
outsb
or
sub
mov
xchg
add
popa
aaa
into
pop
xchg
jne
jmp
lds
adc
mov
lcall
push
push
mov
lret
adc
pop
jp
xchg
cmp
add
repnz
movsl
pop
insb
out
xchg
xchg
lret
cmp
sub
into
mov
sub
out
shld
mov
or
call
mov
out
push
jmp
rcrl
into
add
mov
mov
jl
xchg
mov
inc
and
inc
cmp
cltd
movsb
jne
aaa
xlat
insb
cmp
lret
and
add
cmpsl
fldl
add
fmul
or
mov
fidivrs
xchg
popa
sahf
or
dec
lods
pop
inc
adc
inc
push
mov
push
sbb
icebp
xor
inc
lea
jecxz
fs
adc
or
mov
adc
push
dec
jns
imul
loope
punpckldq
enter
sarb
insl
fistpll
rorb
fwait
pop
lock
lea
sub
movsl
popf
movsb
mov
ss
sub
stc
adc
cs
add
dec
movsl
test
fsubrp
movsl
jae
enter
in
mov
gs
inc
insl
and
std
rcl
jns,pn
outsl
sbb
pop
jp
jb
ljmp
and
and
mov
ds
lsl
xor
fstp
jne
mov
and
adc
flds
and
and
dec
imul
lea
mov
jg
jo
pop
or
fwait
repz
mov
mov
jg
test
mov
add
add
sub
mov
pop
shl
xchg
mov
add
and
into
mov
call
sarb
in
fadds
pop
jnp
lret
pop
cmp
rcrl
and
sarl
rcr
into
pop
rep
jmp
es
dec
sarl
add
mov
cmc
std
jb
notb
bound
mov
adc
mov
repnz
xor
sub
cmp
xor
lea
dec
shll
test
adc
sub
sahf
dec
outsl
fbstp
sub
sub
cwtl
adc
notb
fiadds
or
stc
jnp
push
stos
dec
fcompl
aam
adcl
lds
push
adcb
movsb
daa
inc
pop
je
push
aaa
xor
in
lret
fcomip
sti
int3
add
jge
or
sub
push
lret
and
jp
sarl
mov
add
adc
adc
add
xor
call
cltd
in
cmp
or
sub
cltd
into
push
xor
cmp
movsl
lret
scas
lret
lods
inc
jbe
in
cmp
mov
dec
or
cmp
rorb
nop
xchg
mov
dec
xchg
inc
pop
stos
cmp
xchg
addb
jle
jp
inc
xchg
fsubr
fmul
xchg
xor
or
aam
loopne
sbbb
cmpsl
pop
jae
iret
cmp
mov
ret
ljmp
cmp
jmp
daa
roll
jne
mov
and
cwtl
test
add
pusha
mov
lret
and
adc
push
lahf
js
xor
add
jns
lods
mov
mov
add
enter
sbb
and
sbb
mov
shl
adc
cmpsl
xchg
das
sbb
sbb
fucomip
faddl
mov
test
outsl
cs
inc
stos
or
add
cli
sti
mov
sbb
out
repz
mov
adc
inc
aad
mov
imul
mov
sbb
cld
sbb
mov
inc
xchg
test
arpl
out
cmpsl
repz
loopne
mov
cmc
mov
sbbb
dec
bound
fistps
add
dec
les
adc
mov
rorb
repz
adc
inc
push
scas
dec
leave
loopne
cmp
dec
sub
and
dec
loopne
mov
cltd
lods
mov
fwait
xor
mov
je
stc
and
cwtl
inc
push
sbb
lahf
sbb
jle
test
roll
mov
push
xchg
lret
ja
mov
add
inc
lahf
xchg
sub
push
std
cli
out
and
imul
into
sarb
in
std
sbb
pusha
or
xor
push
xor
push
movsb
push
test
xlat
xchg
test
pop
jg,pt
dec
xor
xchg
je
or
xchg
je
sbb
adcl
xor
add
fists
enter
nop
daa
repnz
adc
mov
mov
mov
aad
sbb
lcall
push
sub
in
dec
dec
lret
out
pop
loopne
cmp
enter
adc
cmc
mov
adc
dec
test
fdivrl
xchg
insl
cmp
add
jle
jge
and
jl
scas
or
cmp
movsb
in
pop
fnstsw
subb
jge
rcrl
jp
pop
inc
fsubrs
lret
in
add
xorl
clc
mov
sti
mov
adc
push
stc
sbb
sub
sub
sbb
or
jecxz
rclb
or
dec
xchg
xchg
inc
mov
sub
mov
push
scas
test
jg
jge
xchg
pop
mov
das
mov
in
in
xor
mov
popf
add
inc
mov
sbb
push
sarb
imul
mov
mov
adcb
adcl
push
pusha
sbb
cmp
in
dec
ret
call
xor
vpmacssdd
repnz
je
fisttps
and
cmpl
dec
jno
cld
in
sub
cwtl
sarl
xchg
ds
ja
pop
jmp
xor
enter
lcall
in
cmp
sbb
sub
je
sar
xchg
clc
or
sbb
loope
outsb
jae
fisttps
adc
lret
arpl
jns
out
mov
pushf
ret
adc
mov
fdivrl
xchg
dec
and
stos
push
into
call
jp
icebp
test
mov
imulb
mov
call
jle
add
add
jnp
xor
xor
rcrb
rorb
mov
fstpl
popa
mov
sbb
sahf
adc
inc
rcll
and
into
lods
jmp
add
jnp
xchg
jge
xor
mov
pop
mov
pop
sbb
insb
cmpsb
jno
fstpt
imull
shl
std
cwtl
or
mov
sbb
push
subl
adc
shr
push
pop
outsl
xor
xor
jbe
addl
add
sti
lret
aas
int
cmp
lods
sahf
mov
cmp
push
xchg
sub
sbb
adc
jecxz
stos
cwtl
repnz
add
fnstsw
lods
adcb
lock
loop
jp
clc
mov
xchg
pop
mov
fsts
out
test
test
mov
mov
add
or
xchg
pop
lock
or
sbb
in
pop
cs
aam
mov
loopne
aad
wbinvd
pop
xchg
out
jno
xor
mov
mov
dec
mov
xlat
push
arpl
or
jbe
cli
push
or
mov
xor
mov
je
sbb
cwtl
lods
into
jb
mov
pop
lock
pop
jmp
clc
sub
or
inc
and
pop
cli
lahf
pop
xor
add
es
sub
fwait
jl
dec
in
sub
sub
mov
cmpsl
push
mov
xor
leave
movsl
xchg
xchg
cmp
fwait
inc
test
push
aaa
gs
es
mov
adc
out
adc
ds
ds
mov
icebp
xchg
cmp
ja
mov
xchg
into
shl
mov
and
xchg
popf
xchg
repnz
rolb
mov
pop
fisubrs
data16
aaa
shr
hlt
out
sbb
jae
and
scas
mov
test
inc
insb
sbb
dec
dec
lods
sub
add
aad
jbe
add
cld
dec
push
fstp
push
xlat
arpl
dec
push
pop
ljmp
mov
pop
bound
inc
mov
inc
push
dec
mov
lea
jp
pop
xchg
cmpsb
push
mov
dec
notb
ja
lahf
jg
rclb
push
or
dec
lods
arpl
aad
repnz
jecxz
jmp
inc
ds
insl
add
pop
mov
sub
je
xlat
push
or
cli
incb
lret
and
mov
pop
mov
in
insb
repnz
inc
jbe
das
int
out
sti
inc
sub
lcall
dec
dec
cld
in
cmp
jb
scas
test
xchg
mov
ficomps
push
pop
loop
mov
push
mov
mov
mull
ja
shll
mov
fistps
fists
call
mov
xchg
push
pop
or
push
pop
inc
in
roll
cwtl
jecxz
push
fimuls
mov
lea
mov
xchg
lds
inc
rclb
sub
adcl
stos
rolb
mov
pop
push
dec
and
push
inc
pop
popa
add
das
add
in
je
bound
lods
mov
cmp
or
pop
cmp
cmp
enter
pushf
inc
jbe
cmp
jne
scas
pop
inc
and
xor
fiadds
sub
add
test
mov
fs
add
add
sbb
jno
mov
call
pop
pop
cmp
lcall
cmpsb
xchg
jbe
sub
lret
adc
sub
lods
xchg
mov
arpl
adc
xor
ljmp
cmp
jns
sub
aaa
in
lods
xor
xor
push
adc
rorb
mov
mov
cmp
xchg
cmp
enter
xor
xchg
mov
mov
and
ss
cmc
add
and
sbb
insb
leave
mov
mov
test
mov
xor
pop
in
clc
pop
subb
or
decl
cmp
jbe
les
jb
dec
push
cmp
mov
in
icebp
jp
test
jl
pop
out
xor
shrl
cmpsb
lock
cli
out
mov
cs
sub
lret
test
rol
loop
sub
add
movsl
cmp
push
aaa
aaa
shl
inc
roll
lret
dec
jno
je
cmp
lds
loopne
mov
fsubl
or
lret
sub
insl
jnp
mov
push
adc
pop
mov
loope
pop
and
arpl
mov
pop
jp
or
mov
movsb
mov
movsl
jmp
and
pushf
out
dec
mov
les
imul
lret
ja
adc
or
adc
lods
adc
daa
mov
push
jp
dec
mov
dec
jne
cmp
loopne
repnz
mov
sbb
mov
inc
xchg
pushl
cltd
divl
dec
test
movsb
in
push
cmp
xorl
adc
cmp
pop
call
ss
sub
imul
and
decl
pop
xchg
stos
out
xchg
push
sub
pop
lcall
dec
dec
mov
mov
test
push
fsubl
mov
pop
in
fnstenv
mov
lea
cmp
jne
or
push
dec
test
and
sub
iret
xchg
xor
jle
sub
mov
push
push
jp
outsb
mov
adc
aaa
outsb
ds
add
cmpl
dec
jb
mov
sbb
inc
adc
push
inc
neg
pop
cmp
lods
popa
pop
jo
xchg
stos
ljmp
movsl
stc
into
xchg
pop
mov
push
inc
inc
push
mov
sbb
flds
out
fldpi
mov
popl
fstl
enter
dec
mov
adc
xor
out
inc
jp
int3
movsl
jl
inc
mov
inc
or
pop
pop
dec
fcmovne
xchg
in
mov
lea
test
gs
mov
adc
inc
pusha
xchg
fs
adc
sarb
bound
or
jne
shrb
sbb
outsl
cmpsl
aas
add
pop
sbb
rcll
or
fstl
mov
inc
xchg
out
jae
fs
cmp
lret
jb
mov
adc
lret
pop
pop
testl
lods
testb
ds
loopne
popa
pop
mov
jae
inc
mov
popf
mov
sarb
out
inc
mov
pop
sub
popf
lock
fwait
cmp
jnp
dec
and
add
cmp
push
jb
fstps
mov
xchg
cli
out
das
nop
push
stos
xchg
pop
in
mov
mov
cwtl
loope
and
arpl
jnp
shll
pop
es
xlat
std
sbb
ret
jmp
push
pop
mov
xor
roll
push
je
ficoml
mov
pop
sub
cmpsl
cs
xorl
cltd
icebp
xchg
dec
add
xor
push
pop
add
xor
jns
cmpsl
jb
jb
mov
inc
adc
sti
jo
mov
adc
jge
les
jmp
in
inc
int3
cmp
popa
shl
inc
inc
push
aam
sahf
dec
sub
lock
in
cmp
cmp
dec
pop
fcmovnbe
inc
sub
dec
cld
cli
shll
pop
jle
stos
outsb
imul
cmp
and
pop
into
loope
jmp
mov
std
stos
mov
out
mov
jmp
popf
arpl
pop
jnp
icebp
inc
fwait
push
inc
push
sub
aaa
sub
stos
xor
shlb
in
cmpsb
sbb
push
xchg
jae
jg
and
mov
mov
sbb
push
add
ret
jnp
push
idivl
push
mov
and
stos
add
clc
dec
fistl
mov
cmc
inc
enter
daa
cwtl
mov
imul
xchg
out
sbb
and
mov
shll
pushf
xor
sbb
jmp
dec
pop
pop
imul
mov
jbe
sbb
cmpsb
inc
push
xor
add
adc
cmc
into
movups
pop
aaa
enter
xchg
sub
out
and
aas
mov
mov
xlat
xor
clc
push
fwait
add
inc
push
cs
bound
cld
bound
push
mov
imul
test
adc
mov
xchg
hlt
cmp
cmp
cmp
lahf
cs
adc
test
imul
outsl
xchg
inc
daa
pop
das
js
inc
repz
xorb
loop
mov
push
mov
or
xchg
mov
sbb
sbb
les
ljmp
bound
aaa
into
or
iret
dec
push
xchg
outsb
pop
lcall
cmp
mov
fsubrl
cmpsb
add
bound
ret
cmp
into
mov
out
cmp
inc
inc
xchg
dec
dec
jle
loope
scas
cmp
std
adc
cmc
pop
or
fisubs
adcl
adc
inc
xchg
mov
call
push
xor
mov
popa
xlat
daa
xor
mov
sbbb
aaa
xchg
inc
push
or
arpl
cs
pop
ficomps
sub
adc
xchg
mov
cmp
mov
jnp
out
jb
push
mov
inc
jle
lcall
inc
push
push
loopne
imul
shll
shr
jne
add
jge
es
mov
mov
or
mov
movsl
shrb
out
push
xor
jge
cmp
icebp
mov
fstps
bound
fwait
sarb
lahf
in
test
dec
push
sbb
fwait
xorl
ljmp
pop
cmpsl
std
test
xchg
xor
xchg
sub
add
mov
test
stc
mov
push
ret
push
je
nop
push
sbb
cmpsb
stc
imul
les
in
pop
pop
inc
xchg
aad
mov
inc
cmc
jmp
pop
test
iret
adc
xchg
sub
int3
stos
jnp
mov
frstor
shrl
subb
sbb
ljmp
fistps
mov
scas
adc
lods
pop
and
stos
and
in
das
push
mov
adc
jmp
xchg
into
xchg
mov
and
in
imul
mov
cli
jbe
test
sub
aad
lods
jle
imul
jecxz
out
loope
sahf
push
aam
or
and
mov
insl
daa
mov
incb
pop
jmp
jl
pop
sbb
std
xor
enter
adc
push
mov
mov
aaa
sti
dec
xlat
push
jp
and
mov
dec
mov
out
or
xor
xor
fs
mov
out
lds
mov
shlb
xchg
mov
sub
popf
xchg
scas
sub
mov
and
adc
js
xchg
loop
jns
mov
dec
xor
scas
cltd
or
jbe
add
imul
jns
xchg
jl
push
add
adc
adc
sub
lock
loop
inc
or
mov
push
pop
push
jnp
jb
adc
adc
mov
outsb
inc
inc
mov
pop
incb
mov
mov
cld
movsl
jge
jns
repnz
add
adc
popf
dec
pop
repz
test
ja
fistps
das
jl
loopne
cltd
xor
mov
in
test
jl
bound
xchg
sbbb
loope
in
xchg
xor
push
mov
inc
bound
adc
inc
sub
mov
xchg
xchg
inc
mov
cwtl
jnp
mov
es
inc
or
sub
jmp
mov
sub
mov
mov
fisubrs
int3
inc
push
jns
cmp
int
sti
adc
ja
stc
sbb
out
loopne
mov
or
ficomps
fists
daa
jge
imul
fistl
rorl
xorl
rol
mov
pop
push
push
cmpb
sbb
addr16
lcall
iret
ja
bound
push
push
push
call
add
or
cs
dec
cltd
push
lods
xor
out
stc
jae
xchg
test
rcll
fs
scas
test
add
out
aam
mov
adc
cmp
xchg
andl
call
push
jmp
push
repz
test
jle
jae
dec
dec
rclb
clc
and
and
add
pop
sbb
inc
or
jle
lods
pusha
jmp
mov
sub
movsl
pop
shll
call
pop
xor
inc
sbb
or
sub
xchg
fldt
sahf
lods
js
or
cmc
pop
dec
adc
cmpsb
mov
in
jecxz
int
test
out
cmp
imul
je
test
ja
xor
xorb
outsl
lock
mov
pushf
adc
mov
ljmp
stc
push
sub
sbb
xor
mov
fsts
pop
jl
adc
sbb
or
call
push
or
imul
and
push
cmpsb
out
cwtl
pop
popf
sub
sbbb
push
jmp
and
push
xlat
sub
mov
and
jno
leave
aad
mov
cs
lahf
imul
loopne
inc
mov
ret
dec
jmp
add
fsubrl
and
xor
sahf
push
cmpl
xor
inc
int3
dec
andl
in
push
scas
in
pop
insb
in
inc
dec
lahf
loopne
and
aam
xchg
lret
shl
mov
fistpll
and
clc
mov
daa
orb
scas
call
pop
in
mov
pop
jmp
mov
mov
mov
ljmp
mov
sbb
pop
outsl
mov
aam
pop
xor
adc
test
adc
lcall
je
shll
ljmp
fcoms
cmpsl
pop
sbb
jmp
mov
pop
inc
mov
mov
cs
jb
fsub
or
mov
lds
mov
data16
outsb
out
or
lds
inc
sbb
sub
out
lock
fisubrl
mov
adc
shrl
repz
mov
jmp
ja
pusha
dec
pop
iret
cmp
stos
add
mov
test
pop
shlb
imul
push
or
lods
loop
insl
sub
pushf
call
xor
jl
sbb
push
sub
sub
sub
fldcw
fimuls
dec
cmpsl
in
addr16
push
lret
mov
daa
leave
lret
insl
inc
cltd
mov
inc
lcall
xlat
int
ds
in
dec
out
adcl
sarb
sti
cmp
dec
rorl
loope
outsb
andb
xchg
arpl
cmpsb
stc
dec
xor
popf
je
jnp
mov
jbe
cld
sbb
jns
in
cmpsb
xchg
jge
mov
cmpsl
mov
sub
mov
enter
and
pop
and
xchg
sub
push
lods
add
fucomip
mov
pop
add
push
hlt
aam
fwait
mov
push
mov
in
or
push
push
aad
pop
mov
or
iret
lods
gs
mov
push
or
pushf
jge
jp
ljmp
adc
mov
xor
xchg
inc
pushf
lea
loope
repz
jb
scas
mov
jnp
cld
xor
push
jmp
inc
add
stos
inc
stc
jo
mov
stos
jp
cmp
jmp
dec
stos
leave
loope
mov
and
outsl
rcrb
dec
dec
sbb
pop
loope
cli
adcb
jae
rolb
cld
icebp
jbe
out
int
addr16
loop
push
inc
cmp
lods
jnp
adc
sub
mov
pop
je
pop
xchg
test
dec
in
and
push
add
cltd
jecxz
mov
adc
mov
popa
mov
pop
outsl
test
inc
sub
push
jno
addr16
pop
inc
ret
sub
mov
popl
out
js
stc
or
jns
xchg
inc
jg
mov
add
mov
stc
inc
ljmp
sub
pop
mov
scas
stos
sub
xchg
sbb
mov
sub
notl
mov
cmpl
ret
leave
mov
lock
daa
loop
pop
jns
jmp
jo
fnstsw
pop
insb
ds
xchg
pop
iret
dec
jae
cmp
insl
in
dec
fldl
push
fdiv
cs
ljmp
outsb
xor
fsubrl
icebp
inc
sub
fs
cmp
aaa
mov
mov
dec
pop
mov
xchg
adc
fsubr
or
scas
aam
xor
mov
push
mov
pop
mov
dec
sub
sbb
lcall
iretw
repz
xchg
cs
or
rcrl
outsl
repz
cmp
stc
push
dec
repnz
push
fistpl
repz
dec
std
jmp
dec
push
dec
mov
mov
bound
push
lock
les
dec
dec
int
and
mov
out
pop
sbb
call
mov
fsub
sahf
add
shlb
fildl
mov
xchg
xchg
movl
mov
test
dec
dec
ljmp
xchg
mov
and
aad
daa
xor
jbe
pop
cmp
in
adc
sarb
push
mov
xor
push
pop
movsl
loop
fwait
sub
lret
movsb
push
or
mov
in
arpl
push
ljmp
test
nop
push
andb
aas
hlt
xchg
and
dec
dec
push
leave
xlat
dec
test
jg
loope
lret
std
cmp
push
je
mov
push
out
movsb
je
adc
out
lds
lods
push
sahf
das
or
cmp
push
cmp
push
rol
cmp
std
cmp
pushf
and
lods
sub
hlt
imul
push
xor
ljmp
lods
hlt
imul
loope
mov
test
mov
cmp
decb
mov
mov
add
pop
lret
add
and
adcb
orl
in
jo
push
mov
or
mov
scas
int
decb
in
adc
std
daa
dec
sbb
pop
loop
jge
xchg
addr16
mov
adc
in
imul
add
jl
push
inc
jns
adc
cmp
lcall
xor
aam
iret
ss
mov
outsb
jns
divl
out
push
cwtl
xor
adc
pop
cli
sti
mov
mov
push
jmp
xlat
sub
or
inc
xchg
pusha
mov
mov
packssdw
aad
je
dec
fdivr
cmp
dec
lcall
scas
pop
in
in
jp
xchg
xor
mov
push
sbb
adc
mov
jg
xchg
mov
pop
fidivrs
lcall
mov
lea
lcall
int
out
sub
mov
mov
jbe
lret
add
xlat
fcomps
mov
mov
sbb
jo
ja
jle
movsl
adc
push
les
lahf
movsl
push
fsub
bound
aam
jp
or
push
mov
stos
dec
jb
ja
xor
cmp
inc
xchg
test
iret
stos
mov
test
inc
jl
push
cwtl
jmp
mov
xchg
aas
ret
mov
xchg
push
jne
xchg
test
cs
ret
jl
xchg
pop
push
movsl
cmpsl
std
and
scas
stos
pop
psubsw
cld
and
bound
push
enter
cmpsb
mov
push
mov
jg
std
imul
mov
orb
in
sub
xchg
adc
cmp
mov
xor
pop
pop
jl
push
cmp
sub
ja
addl
mov
xor
xchg
cwtl
adc
jnp
jbe
ljmp
outsl
aad
aad
pop
push
mov
adc
pusha
fiadds
or
inc
add
xor
inc
adc
adc
inc
jmp
xchg
clc
arpl
movsl
sbb
ret
insl
out
movsl
roll
mov
inc
xchg
or
add
je
push
xchg
cmp
xchg
xor
rcrb
adc
stos
shlb
pop
negl
or
popf
dec
insb
test
mov
sbb
push
rcl
mov
fsubrl
imul
mov
or
jbe
inc
mov
shlb
ret
pop
enter
test
xchg
in
mov
xor
lcall
adc
cs
adc
adc
sub
push
movsl
add
jne
xchg
push
pop
cmp
loop
push
std
popf
movsb
outsb
or
in
cld
adc
mov
lahf
rol
mov
push
jbe
or
jns
cld
idivb
cmc
dec
ss
adc
leave
add
outsl
je
dec
mov
jno
inc
sub
or
out
aaa
je
adc
sub
aad
sub
stos
xor
pop
push
add
in
sub
lods
cld
clc
or
clc
call
inc
es
mov
pop
test
dec
push
js
push
inc
in
xchg
cmc
out
lahf
ss
loopne
mov
cmpsl
jns
adcb
fstpt
dec
icebp
mov
adc
lds
inc
mov
sbb
idiv
push
and
inc
enter
aam
lret
jg
bound
mov
sbb
push
xor
dec
pop
or
iret
cmpsb
fsubl
sub
xlat
dec
loopne
pop
int
lret
pop
lods
fnstenv
rcrb
rclb
mov
cld
enter
test
add
mov
call
clc
adc
xlat
repz
inc
add
cmp
push
xchg
adc
frstor
fiadds
sarb
mov
adc
dec
stos
push
loope
cmp
sbb
jnp
lret
mov
sbb
sbb
xchg
leave
push
push
add
test
xlat
mov
mov
adc
idivb
stos
push
push
push
aas
shlb
push
out
insb
pop
sub
gs
addr16
xchg
add
mov
sahf
shlb
pop
xorb
push
lcall
fsubrl
bound
pop
or
es
add
xchg
inc
xchg
cwtl
mov
pop
mov
loope
stos
mov
sbb
add
outsb
inc
mov
addb
xorb
int
popa
sbb
stos
jo
fld
ret
mov
mov
ss
sub
or
out
lds
das
gs
shlb
fdivrl
or
addl
xchg
inc
ret
xchg
mov
pop
aaa
mov
cli
nop
rorl
mov
idivb
stos
xor
leave
or
push
cmc
pop
adc
stc
repnz
cmp
mov
pop
outsl
add
jmp
int
sbb
mov
pop
mov
fisubrs
cmc
cmpsb
push
cmp
mov
xchg
xchg
adc
mov
dec
add
mov
lods
imul
testl
imul
add
jl
je
jo
xor
or
sub
sub
lock
pop
popa
and
sub
push
sub
sub
out
xor
cli
stc
mov
add
outsl
scas
ds
mov
loope
out
mov
pop
cmpsb
mov
and
rcl
arpl
mov
ret
sub
dec
cmp
enter
xchg
movsb
inc
popa
xlat
and
or
iret
fistpll
cmpsl
roll
test
and
leave
aam
fmulp
testl
loop
sub
inc
sub
lret
push
outsl
data16
inc
mov
iret
lds
jge
mov
stc
fwait
imul
popa
bound
imul
xchg
push
dec
push
stos
pop
jbe
xchg
sti
mov
stc
sahf
xchg
adc
scas
lahf
sbb
mov
les
mov
imul
ja
add
xchg
rol
add
movsb
push
inc
sub
call
lahf
jmp
lcall
push
add
lods
push
pop
xor
dec
xchg
stc
pusha
adc
divl
dec
xchg
aam
ret
fimuls
dec
xchg
ljmp
out
imul
or
in
out
fwait
sub
cwtl
ret
pushf
repnz
dec
mov
push
pop
out
dec
or
mov
jle
xor
les
loop
mov
fstpl
rcll
aas
add
adc
sub
xchg
test
ds
cmpsl
out
test
or
mov
fwait
iret
addr16
mov
cmp
in
popf
mov
cmp
jmp
fists
scas
ljmp
add
inc
mov
push
xor
stc
lea
in
sti
cld
stos
int
ret
and
or
push
gs
push
inc
jne
mov
cltd
std
enter
fidivrs
mov
call
mov
insb
xchg
imul
mov
and
outsb
cmpsb
adc
adc
popa
pop
ficomps
cmp
insb
and
aad
repz
mov
cld
out
pop
in
xchg
xchg
inc
lret
cmp
and
inc
sbb
int3
sbb
mov
dec
or
and
or
cli
mov
xor
es
pop
pop
pop
mov
lahf
andb
and
js
stos
push
lds
aaa
push
push
push
inc
test
lea
scas
push
jno
jmp
lods
pop
loop
test
mov
das
int
imul
subl
sbb
movsl
addr16
pop
arpl
sub
ss
iret
xlat
mov
fcmove
push
lock
outsb
dec
les
pop
xchg
add
lock
mov
add
or
andb
add
jge
lret
sub
stos
pop
push
push
int3
jle
test
pop
pop
lods
cmp
sahf
outsl
sbb
xor
pop
mov
repz
movsb
arpl
das
cmp
and
rorb
cmp
ds
cwtl
dec
mov
insb
and
negl
mov
shll
insb
cmp
jne
test
pop
jne
jbe
ret
or
adc
jne
fstpt
dec
stos
xor
aam
lcall
movb
popf
out
cmp
fidivrl
adc
inc
adc
push
xor
in
into
inc
bound
mov
in
pop
mov
aad
fcomp
insl
pop
in
lahf
ret
push
mov
cmp
hlt
imul
sub
inc
fcompl
or
into
mov
dec
shrl
or
xchg
repz
and
clc
mov
inc
outsb
lret
jae
sbb
inc
xor
inc
mov
out
ficompl
jnp
push
test
sbb
jae
inc
mov
in
flds
shll
inc
int3
test
pushf
lahf
outsb
inc
dec
cmp
popa
testb
mov
mov
stos
jnp
popa
mov
mov
inc
je
lods
sub
lock
mov
cmc
mov
mov
push
daa
push
es
test
xor
cmc
pop
insl
cmp
xchg
sbb
cs
pop
cmpsb
ret
loopne
add
mov
ljmp
xor
pop
test
inc
into
rcll
frstor
pop
add
movsl
rcrl
or
ret
adc
stos
sbb
gs
in
jns
int
push
fmuls
jl
mov
jmp
iret
je
pop
fadd
pop
mov
iret
aas
ret
or
aaa
rorb
cmpsl
nop
mov
pop
jb
sub
testl
inc
fstpt
incb
mov
lcall
sbb
bound
int3
mov
mov
jp
repz
mov
xchg
fidivl
and
pop
icebp
pop
mov
jae
orl
xor
out
fnsave
cmpsb
adc
les
mov
mov
add
int
xor
add
pop
cli
lock
cli
inc
cmp
hlt
cwtl
movsb
mov
xchg
fidivl
jo
mov
jg
and
notl
cmpsl
cld
rorl
sar
mov
int
xchg
mov
pushf
jp
jnp
lock
ss
enter
aad
enter
push
or
push
in
in
cmpsb
fstps
out
aam
and
inc
cltd
rcrb
mov
jns
push
and
mov
aaa
mov
aaa
jno
pop
lods
sub
push
push
dec
scas
or
ficoms
js
sbb
decl
das
or
inc
inc
fbld
loopne
test
repnz
add
mov
test
sbb
lock
aad
pop
lods
iret
shlb
outsl
push
xor
add
dec
xchg
add
lret
daa
imul
inc
mov
xchg
dec
mov
mov
pop
or
xchg
push
or
xlat
je
adc
adc
jge
push
mov
inc
mov
sub
fisttpl
mov
sahf
mov
sub
inc
and
dec
cmp
lock
mov
push
and
inc
cld
push
add
xor
lods
xchg
jg
add
xabort
jle
test
jbe
mov
mov
pushf
dec
fucom
sti
pop
jp
jno
jl
and
test
xchg
les
adc
xchg
and
or
pusha
push
push
adc
sub
jle
pop
or
repnz
cmpsl
sub
push
fildll
xor
imul
pop
fcom
push
sahf
arpl
das
xor
out
or
pop
and
dec
push
pop
cmc
sub
push
ss
sub
imul
in
jns
in
jecxz
dec
pop
cwtl
into
cli
out
fs
imul
cltd
scas
sbb
sbb
add
cmp
cmpsb
adc
inc
insb
data16
rorl
jns
xor
sahf
out
cmpsb
jmp
test
mul
cmc
sub
daa
jbe
clc
in
fisubs
cmp
push
and
push
hlt
push
and
xchg
or
sahf
jle
jb
mov
sti
in
loopne
jnp
or
out
inc
addr16
dec
push
mov
pop
iret
mov
in
xlat
jl
add
fbld
jae
es
loope
ret
daa
xchg
mov
sbb
mov
jmp
jmp
jo
sahf
push
dec
push
jb
lock
or
jbe
add
ficoml
clc
leave
cmpl
sbb
insl
push
pop
jge
mov
or
add
bound
sbb
mov
leave
add
xlat
push
adc
add
repz
push
pop
dec
pushf
pop
mov
ljmp
pop
pop
outsb
cwtl
pop
outsb
nop
arpl
in
sub
add
jl
mov
mov
sbb
cs
push
rolb
dec
mov
mov
arpl
mov
mov
sbb
stc
ret
loope
fiadds
mov
cmp
aas
loop
idiv
jbe
mov
les
or
xchg
scas
aaa
fsubl
xor
and
in
cmp
ds
sub
movsl
or
gs
out
sub
adc
adc
shl
and
xlat
aad
lea
pop
cmp
loope
add
sub
adc
pop
mov
adc
lock
mov
mov
add
cmp
lods
outsb
pop
push
xlat
loop
cmp
and
add
sbb
fdivrl
adc
cwtl
popa
or
test
push
das
in
popf
jo
mov
test
xor
nop
pop
add
xor
add
dec
lds
mov
pop
outsb
xor
inc
lahf
jno
in
mov
fldt
outsl
imul
gs
add
dec
sub
shll
jmp
ljmp
or
xchg
jp
outsb
push
or
fadds
jmp
mov
call
icebp
stos
insb
jmp
in
call
mov
jbe
xor
add
lea
xor
push
cmp
sar
jns
icebp
popa
xchg
and
adc
cmp
test
sbbl
into
sub
cmp
fwait
push
mov
stos
iret
test
sub
sbb
adc
pop
lods
ja
cltd
cmc
xor
push
xor
push
in
mov
jmp
push
imul
pop
push
icebp
mov
sahf
ret
inc
orb
mov
xlat
mov
sbb
xorl
lret
push
aad
add
pop
enter
imul
test
push
adc
cwtl
aaa
pop
cltd
aam
add
mov
pop
jo
adc
xchg
les
lcall
sub
jle
mov
stos
in
shrb
inc
out
cmc
pop
xchg
mov
iret
xchg
push
aaa
stc
ret
aaa
pop
sbb
pop
movsl
pop
test
cmp
ret
stos
gs
mov
lock
push
shrl
fildll
ret
sub
and
les
jbe
sbb
mov
lods
adc
mov
jge
lret
out
pushf
das
lcall
cli
fiaddl
mov
aam
mov
loopne
cltd
inc
repz
test
cmc
mov
data16
out
jnp
ss
push
addr16
out
xchg
mov
jb
add
add
cmp
mov
dec
lahf
inc
aas
in
loope
loopne
mov
sub
jo
mov
decb
stc
dec
mov
pop
les
cmpb
lret
test
loope
lods
test
sbb
dec
cmp
xchg
hlt
fisubl
fucom
push
or
inc
adc
enter
pop
sahf
dec
test
leave
shr
out
and
pop
icebp
mov
sub
not
scas
in
pop
jp
cld
inc
xchg
insb
mov
push
ljmp
jle
jo
sbb
dec
popa
in
in
mov
push
push
mov
dec
addr16
sub
xor
xor
mov
push
pusha
leave
mov
pop
mov
inc
cmp
vandnpd
push
and
push
sub
xor
in
test
mov
mov
xor
in
fcomi
subb
and
lret
out
mov
sbb
loopne
movsb
adc
and
movsl
inc
lods
xchg
sub
dec
xor
lahf
mov
mov
mov
jmp
pop
repnz
add
lea
nop
adc
stc
inc
sub
sbb
push
data16
lcall
jge
and
pop
jo
loope
int3
test
adc
sbb
out
sub
push
mov
or
rep
sub
xor
jns
orl
mov
aas
add
cmp
inc
fs
jne
cmp
sub
enter
pop
imul
in
mov
dec
ljmp
andb
mov
inc
push
div
test
sahf
lcall
rorl
dec
js
lret
push
xchg
jno
fs
mov
int
bound
imul
das
scas
pop
cs
mov
push
or
stos
mov
mov
imul
push
mov
and
jmp
pop
jb
jns
cmp
sarl
or
pusha
js
aad
add
add
fidivrl
lahf
dec
call
out
jg
cmp
push
mov
jnp
ss
ja
dec
adc
dec
ja
cmp
add
imul
stc
sbb
or
shlb
xchg
dec
adc
scas
fdivrp
ficoml
xchg
aas
lods
ficomps
push
xchg
movsl
imull
rcll
int
pop
sbb
sbb
std
dec
mov
out
adc
sbb
mov
leave
push
jo
dec
stos
inc
push
push
imul
sahf
ljmp
lahf
test
int3
loop
push
mov
enter
aad
sub
fnsetpm(287
shlb
js
sbb
ljmp
arpl
adc
mov
insb
xor
clc
xchg
sub
push
scas
push
pusha
sub
arpl
les
xor
outsb
in
xchg
shlb
movsl
mov
mov
mov
icebp
xchg
push
adc
mov
lret
out
push
movsl
cmp
jne
std
nop
mov
mov
lea
movsb
dec
stos
adc
adc
cmp
sbb
pop
sub
movsl
imul
sub
lret
stos
pop
movl
xor
fcomi
push
ja
mov
pop
jnp
dec
enter
sarl
push
out
iret
sahf
lock
sub
and
mov
inc
popl
out
push
xor
pop
sub
popa
mov
jg
test
fcomps
dec
mov
pop
mov
mov
dec
xchg
adc
iret
cmp
mov
repnz
es
push
push
ja
icebp
adc
pop
icebp
inc
in
xor
inc
cld
aas
hlt
mov
adc
pop
xlat
enter
lods
cmp
inc
test
lea
adc
aad
in
add
xor
je
stos
push
mov
out
inc
mov
mov
mov
xchg
xor
pop
imul
push
mov
fs
jmp
xor
dec
adc
xchg
inc
dec
push
shll
dec
cmp
lock
jg
test
enter
inc
or
mov
sub
pop
and
jbe
and
std
out
pop
mov
push
out
daa
push
icebp
pop
jmp
and
in
and
movsl
cmp
stc
loopne
jmp
jo
ret
inc
out
ds
mov
nop
in
push
add
mov
in
push
mov
mov
lds
scas
mov
leave
push
or
ret
mov
imul
stc
xchg
xchg
add
ja
ljmp
cld
push
push
enter
fldt
fwait
push
add
pop
push
in
pusha
std
xchg
xchg
movsl
mov
pop
sbb
imul
xor
loop
jbe
bnd
in
je
dec
fmuls
lret
popa
das
cmpsl
arpl
cmp
inc
push
push
adc
push
dec
ucomiss
inc
mov
cmp
sar
jg
sbb
jo
sbb
add
ss
mov
jle
out
pusha
push
movsb
adc
xor
xchg
mov
pop
mov
jnp
cmpsb
mov
bndstx
fcompl
xlat
loop
push
leave
cmpb
scas
hlt
xor
stc
pop
ss
jo
jae
cli
addr16
test
outsb
sti
xchg
dec
into
movsl
pop
mov
xor
scas
push
mov
mov
xchg
arpl
cwtl
inc
fstl
cmp
push
fiaddl
xor
or
pop
cmp
scas
add
stc
daa
cwtl
add
push
xor
or
icebp
jae
inc
xor
xchg
xchg
rcll
insl
outsl
mov
cmpsl
mov
adc
mov
or
into
fidivrs
pop
in
jge
ffree
cld
jno
insl
insb
cmp
adc
aaa
or
int3
aad
lahf
mov
xchg
jb
inc
or
mov
outsl
imul
int3
and
push
inc
fnsave
inc
pop
leave
mov
push
push
shll
pop
cld
jge
shl
push
and
xchg
pop
aam
stos
pop
cmp
push
fwait
jmp
test
leave
shlb
ss
test
sub
repz
mov
clc
aad
pop
loope
adc
ljmp
xchg
push
sbb
mov
sbb
into
sbb
fistpl
inc
inc
idivl
xor
lret
ss
hlt
mov
push
sarb
ja
int3
iret
mov
push
jne
mov
ljmp
push
xchg
sub
jb
std
pushf
mov
pusha
jmp
ret
xor
and
std
lods
push
add
in
ret
cmpsl
aad
fisttpll
loope
add
xchg
pop
sbb
ret
xchg
and
adc
push
push
arpl
fcmovne
xchg
out
mov
lahf
shlb
sbb
aaa
call
inc
cld
insb
lods
das
mov
test
inc
xchg
shlb
daa
mov
inc
sbb
out
mov
jecxz
addr16
cmp
mov
or
outsl
leave
popf
xor
mov
inc
adcl
push
xor
mov
push
stos
mov
lret
call
sahf
sbb
adc
imul
shll
jnp
xor
pop
jo
mov
sarl
sub
fidivl
repnz
movsb
repz
add
popf
sub
mov
add
jns
or
inc
mov
lock
inc
cmp
mov
add
stos
pusha
js
xchg
ss
repz
inc
int3
jecxz
movl
mov
sbb
and
jl
mov
or
adc
sti
jae
mov
add
clc
xchg
inc
je
cmpsl
mov
imul
loope
repz
dec
adc
cmpsl
and
insb
out
mov
and
in
popa
jecxz
sub
adc
mov
rcll
xchg
mov
mov
clc
sub
mov
bound
out
xchg
std
mov
ficomps
cmp
flds
hlt
pop
pop
insb
fistpl
int3
push
orb
cmp
mov
inc
xor
xchg
push
jle
orl
cs
mov
hlt
xor
les
test
aaa
rorb
mov
xor
popf
js
jge
xchg
cmpsb
jle
push
int3
ret
arpl
mov
filds
shr
inc
jns
push
push
push
nop
pop
mov
stos
mov
inc
pushf
es
mov
jbe
mov
subl
and
shl
orb
mov
fs
aam
icebp
jnp
neg
adc
dec
leave
sub
inc
aam
fistl
jns
enter
shrl
in
repz
leave
cmpsl
icebp
push
mov
jecxz
mov
inc
pop
aad
and
pop
cmp
imul
shl
xchg
sbb
pop
test
mov
outsl
mov
movsl
fsubl
sub
fucomp
or
mov
jbe
adc
fbstp
scas
lret
lcall
push
or
xor
das
cwtl
pop
roll
sbb
and
cli
push
inc
pushf
int
js
jg
dec
dec
inc
gs
xor
push
aad
aas
cmp
add
xchg
iret
loope
mov
push
js
push
not
pop
mov
pop
dec
mov
subb
xor
addl
push
inc
out
push
mov
push
jb
and
push
xor
mov
ja
xchg
aas
jl
dec
mov
fsubr
mov
sub
xor
cmp
ljmp
inc
mov
js
and
cmp
icebp
cmp
xor
cmp
nop
iret
out
nop
call
lahf
push
mov
aaa
je
jl
cmp
test
enter
lods
cmp
in
sbb
cld
push
add
lahf
and
sbb
push
aad
mov
movsb
pop
nop
mov
ret
xchg
iret
enter
inc
in
xchg
mov
add
pop
mov
sbb
adc
call
int
cmpsl
cmp
das
add
mov
jge
out
jne
push
pop
addr16
scas
lds
jp
cwtl
cltd
push
lods
and
jge
loop
mov
xchg
roll
inc
cmc
jns
out
mov
sub
lods
sub
aaa
mov
in
mov
push
push
ficoms
fildl
fdivrs
inc
outsb
fsubs
push
or
pop
add
enter
cld
enter
adc
cmpsb
dec
insb
jae
jg
sti
into
in
mov
cmp
repnz
cmpsb
dec
dec
cmpsl
and
shrb
jns
divb
enter
add
gs
xchg
rorb
and
xchg
pop
lahf
jecxz
scas
pop
lock
aam
pop
mov
roll
arpl
cld
ficompl
sbb
sub
pop
mov
loop
and
dec
test
pop
pop
add
in
jns
adc
xor
pop
stos
xor
jns
xlat
sti
sbb
ret
lods
push
dec
add
call
cmp
lcall
in
aas
lret
movsb
mov
push
mov
inc
loopnew
pop
inc
mov
and
fisttpll
or
jb
push
push
nop
mov
ljmp
adc
jecxz
aad
std
pop
dec
add
push
pop
lea
pop
sti
bound
xchg
mov
pop
nop
pop
mov
push
out
scas
push
add
push
push
sbb
js
dec
scas
or
ret
add
imul
pop
decl
or
sbb
ja,pt
bound
sub
dec
movsb
lcall
addl
daa
cmpsl
lock
jecxz
mov
out
lea
aaa
or
hlt
inc
roll
iret
xlat
gs
push
insb
or
cwtl
pop
data16
mov
push
xor
fbstp
loopne
mov
push
idiv
cmp
inc
inc
gs
stc
cmp
jg
dec
xchg
rol
jnp
mov
mov
hlt
jl
sbb
mov
mov
fnstsw
xlat
shl
pop
xor
adc
ss
notb
push
fldenv
dec
mov
mov
xor
test
ljmp
nop
ss
negb
jnp
lret
jae
sub
push
add
roll
imul
cmp
call
or
xchg
dec
mov
push
cmpsl
push
je
cmpsb
mov
adc
sarl
mov
fadds
pop
pop
lods
and
lock
dec
jo
cmp
out
aad
fsubs
adc
sub
stos
orb
inc
sub
xor
jle
andl
cld
or
mov
mov
xlat
jnp
mov
fsubrl
xor
adcb
lods
movsl
shlb
jecxz
dec
movsb
arpl
mov
adc
dec
ja
fstl
in
sub
dec
xorl
jnp
into
imul
jmp
xchg
xchg
shlb
cmpl
mov
xorl
adc
add
jg
inc
stos
jnp
push
xorb
sbb
lret
fdivl
cmpsl
adc
fwait
xchg
xchg
push
fcom
shll
mov
mull
jecxz
jl
cmp
es
or
xor
fdivl
add
rclb
ja
pop
pop
notb
mov
sub
jp
pop
cmp
jne
fucomip
in
push
push
jg
xor
jb
xchg
cwtl
nop
jecxz
jbe
push
gs
or
push
add
sbb
mov
jb
data16
or
adcb
loop
pop
mov
int3
push
fprem
insb
adc
call
ds
loope
push
cmpsl
sub
bound
shll
shl
repz
in
sahf
push
stos
xchg
xor
test
or
push
xchg
inc
inc
lock
dec
sub
aas
leave
fisubrs
rorl
adc
loop
ret
lcall
adc
jae
push
push
insb
sub
mov
pop
cmp
jne
movsl
outsb
imul
mov
or
sbb
bound
cs
jo
mov
out
jno
xchg
je
ds
hlt
hlt
lahf
arpl
xor
addr16
sbb
adc
sbb
sub
sub
cmp
shr
test
scas
add
popl
inc
jecxz
dec
mov
je
sbb
imul
cmp
cltd
cld
xchg
cwtl
lods
fs
jge
ret
movsl
sbb
or
xchg
jno
pop
ret
mov
lret
lea
lods
mov
lea
sub
push
sbb
nop
loop
xchg
sub
mov
pushf
cltd
push
ja
dec
push
mov
or
loope
cmp
insl
mov
shr
inc
add
fisttps
mov
imul
cwtl
sub
cwtl
push
inc
ret
test
push
mov
in
loope
inc
push
mov
inc
jge
stos
shll
mov
sbb
xor
frstor
cmpsl
dec
sub
dec
addr16
mov
dec
add
loop
xchg
ret
inc
outsl
jns
into
jp
fldt
lret
add
test
shrb
and
in
imul
push
test
fwait
addr16
inc
inc
into
int3
sub
cmp
mov
adc
shlb
stos
mov
idiv
cmp
cs
mov
lock
pop
or
cmpsb
and
daa
dec
or
outsl
lds
xchg
push
ljmp
fstpl
mov
pop
rcl
daa
xor
notl
inc
andl
popa
dec
add
mov
pop
fbld
into
inc
mov
daa
inc
stos
sbb
cmpsb
dec
shlb
addr16
xchg
enter
outsb
std
cmc
in
bound
adc
dec
jb
movsb
push
bound
sarl
inc
mov
push
mov
call
adc
sbb
aam
sbb
push
mov
in
shrb
fbstp
xlat
popf
xor
ja
xchg
ljmp
fwait
adc
inc
in
sahf
pop
xchg
stos
aas
and
push
xchg
rorl
sub
add
xor
daa
sub
mov
pop
push
fcoml
fidivl
insb
pop
push
movsb
xor
shrb
or
mov
repnz
jge
ss
in
mov
fnstsw
rolb
sbb
pop
fstpt
cmp
test
loop
cli
xchg
fdivrl
sti
mov
shl
sub
jae
je
jns,pt
cmpsl
pop
adc
and
das
or
in
and
in
sub
pop
pop
push
fwait
cmp
xchg
push
jmp
dec
mov
adc
sub
xor
pop
mov
and
jle
cli
mov
int
cmpsl
jl
pop
inc
or
in
jae
pop
popa
xchg
inc
xchg
or
popf
mov
fs
adc
mov
and
lcall
xor
sbb
mov
dec
mov
out
add
cmp
hlt
jge
fs
subb
movb
sbb
pop
fimull
je
cli
dec
pusha
mov
and
or
test
in
iret
cld
jnp
subl
pop
inc
outsb
movsb
addb
mov
dec
out
mov
in
xor
sbb
fistps
jmp
mov
adc
pushf
jecxz
aas
shlb
movsb
push
mov
in
pop
mov
and
mov
pusha
dec
cmpsb
test
adc
pop
mov
scas
js
xor
xchg
jno
and
jnp
mov
push
mov
loope
pop
pop
sub
jb
dec
cltd
test
pop
mov
ja
dec
mov
dec
mov
or
or
decb
shlb
psrlq
cmc
fnstenv
add
into
jg
sub
mov
nop
cmp
xor
add
push
mov
repz
xor
int3
insl
imul
jp
aaa
fldenv
inc
aaa
sub
testb
pop
lret
call
xor
imul
sub
and
pop
repnz
aaa
adc
lcallw
push
sub
pop
shlb
mov
test
stos
or
adc
pop
mov
jg
sub
mov
xchg
out
cmp
adc
hlt
popf
lret
test
test
icebp
xor
mov
pop
and
aas
popf
push
mov
movb
iret
in
and
jno
pop
mov
je
pop
jnp
fwait
rcll
ja
cmpsl
and
or
scas
in
adc
jp
adc
push
and
test
test
into
cmp
decl
lds
or
cmp
add
daa
pop
cmpsb
lcall
dec
fidivrl
sub
int3
inc
dec
jnp
adcl
call
pop
push
les
xchg
mov
enter
insb
cmp
notl
mulb
pop
and
push
and
mov
mov
add
shlb
adc
mov
shll
out
loopne
addr16
iret
and
pop
cmp
cltd
jp
movsl
push
inc
pushf
push
shrb
inc
daa
mov
ret
scas
mov
dec
and
adc
mov
add
cwtl
mov
out
jnp
jg
fstps
int3
dec
lods
je
nop
push
scas
mov
jae
sti
xchg
sub
rolb
cmp
lea
cmpsl
mov
pop
mov
fs
cld
stos
mov
pop
pop
mov
lret
sahf
ja
dec
cmp
dec
inc
test
pop
fisttps
pop
lahf
dec
mov
into
sub
fimuls
popf
int
jb
add
les
pop
sarl
push
pop
xor
outsb
imul
daa
pop
xor
hlt
insl
std
cwtl
subb
add
out
or
push
sbb
and
pop
shll
or
pop
cmc
mov
jnp
rclb
stos
in
push
inc
inc
mov
xacquire
test
pop
pushf
sub
inc
into
and
inc
loopne
or
dec
push
xlat
cmpsb
inc
and
cltd
xor
sub
in
xchg
or
jecxz
sbb
fucomip
movsb
imul
popf
out
repz
or
mov
sub
mov
and
xor
mov
test
outsl
adc
inc
xor
mov
scas
xchg
sub
mov
jge
push
orb
pop
add
inc
aam
addr16
push
fbstp
lahf
es
aam
mov
aad
fwait
cmp
dec
test
ret
sbb
dec
dec
lods
into
adc
mov
cmp
rol
adc
nop
push
scas
bound
in
leave
fdivrs
outsl
sarb
push
aas
leave
sub
adc
es
sbb
or
add
test
mov
mov
or
data16
pusha
xchg
xchg
fsubrl
jp
lods
push
pop
mov
lret
sub
mov
lds
sarb
outsl
cs
adc
idivb
out
pop
pop
jmp
enter
scas
push
and
jge
test
and
loopne
rorl
movsl
sub
cltd
mov
test
jae
call
sbb
mov
repnz
les
xchg
test
loope
test
jge
xor
cmp
fs
sub
push
or
pop
push
loope
xchg
mov
cmp
lds
lahf
cmp
jb
fst
out
adc
mov
test
ret
push
cmp
sbb
mov
cmp
bound
mov
mov
mov
push
mov
xor
mov
add
leave
cmp
dec
dec
int3
in
loop
mov
add
and
shr
ljmp
cs
push
sbb
ret
outsl
or
inc
sahf
inc
sbb
movsl
mov
xor
push
leave
mov
dec
call
lock
and
int3
movsl
popf
loopne
mov
add
mov
mov
add
add
xorl
xchg
int3
jg
mov
clc
aas
push
push
dec
add
stos
mov
and
and
or
int3
loop
hlt
fdivrl
lock
dec
mov
nop
xchg
mov
out
pop
xchg
cmp
cltd
leave
clc
out
addr16
imull
in
pop
imul
lods
stc
sbb
sbb
dec
mov
xchg
jecxz
jns
stos
dec
negl
pop
out
test
adc
incb
out
xchg
xchg
jb
jo
and
lods
pushf
push
das
out
add
pop
and
inc
daa
fsubr
inc
sarl
inc
adc
sti
jl
pop
and
idivb
ficompl
xchg
inc
loopne
xor
mov
fldt
push
jp
aam
jno
jne
loopne
negb
dec
dec
test
cmc
push
outsb
ret
ds
cmp
inc
inc
or
mov
cmp
je
adc
mov
aaa
mov
push
or
xor
push
sbb
mov
nop
cmp
pop
pop
paddq
sbb
adc
sub
dec
xor
ficomps
mov
push
sbb
push
push
out
mov
ds
clc
hlt
xor
sbb
iret
or
pop
adc
xchg
xchg
mov
in
push
xor
pop
add
mov
mov
movsl
lds
dec
and
mov
xchg
fldcw
ror
sahf
add
cmpsl
out
test
in
repnz
add
xorl
push
xchg
bound
dec
out
push
cmp
xchg
cli
movsb
loop
sbb
jne
mov
mov
mov
mov
mov
sbb
dec
sub
aam
jns
xchg
out
pop
cmp
jne
sbb
lods
in
sahf
push
clc
cltd
push
out
and
push
add
xchg
into
jg
xchg
in
and
adc
out
cmp
inc
stos
mov
dec
add
inc
repnz
fucomi
sub
xor
xor
xchg
dec
into
push
or
cmp
dec
fwait
orl
outsb
pop
pop
and
mov
inc
sub
dec
mov
pop
mov
test
fadd
mov
stos
loop
sbb
mov
mov
jg
inc
inc
fdivrs
add
sbb
leave
int
das
jae
test
scas
push
mov
xchg
inc
sbb
inc
call
cmp
or
or
ds
mov
lret
testb
cs
adc
negl
sti
pop
mov
push
scas
pop
cmpsb
xor
pop
or
xchg
lock
dec
cld
cmpsb
das
iret
stos
mov
pop
sub
mov
je
out
jg
cmpsb
notb
out
mov
lcall
inc
xchg
adcl
repnz
ljmp
and
mov
cs
mov
mov
jnp
sub
push
je
push
lret
dec
add
push
push
outsl
aaa
daa
bound
leave
dec
mov
rolb
repz
addr16
pop
shll
mov
test
loope
mov
add
das
push
push
dec
push
loopne
imul
mov
enter
gs
aaa
cmpsl
push
mov
es
push
sub
cmpsb
adc
sti
ja
loope
xchg
adcb
stos
rorb
pop
cmp
cli
mov
or
and
cs
jb
push
out
dec
sahf
jl
sub
rorb
andb
xchg
pop
sahf
adc
test
pop
loopne
dec
shrb
rclb
sahf
stos
cmp
lahf
sbb
sbb
jbe
push
mov
shlb
adc
sub
pusha
push
lcall
cltd
int3
scas
iret
dec
aas
xor
scas
loope
rcrl
jno
add
mov
cli
lds
xor
stos
or
das
shlb
push
ss
inc
subl
negb
add
inc
add
mov
mov
hlt
jnp
out
insl
insb
test
mov
xchg
std
outsb
imul
out
xchg
or
mov
mov
lods
push
or
inc
pop
or
adcl
cmp
push
inc
clc
inc
in
aam
pop
ror
jb
jo
je
push
jge
js
stos
jmp
dec
pop
cmc
ror
int3
cmp
cmp
and
insl
imul
xchg
filds
jmp
jge
pop
cmp
pushf
ljmp
pop
aas
push
js
js
push
lods
les
scas
inc
push
les
add
inc
xor
jle
scas
test
stos
js
in
inc
out
push
shll
arpl
data16
popf
fisttps
incb
push
loope
in
sub
adc
orl
daa
fnstcw
jle
lds
and
aaa
cmp
add
imul
pop
mov
je
mov
or
cltd
fsubrl
fidivrl
mull
fdivs
imulb
jno
mov
mov
insl
arpl
testl
movb
inc
cmp
sub
jo
fistpl
cmp
pop
pushf
jecxz
iret
dec
into
ret
inc
in
repz
push
sbb
lcall
or
mov
mov
push
js
je
mov
gs
mov
mov
fcoml
lcall
jbe
xchg
mov
ficoml
cmpsb
nop
push
lea
loope
inc
dec
inc
and
xor
xchg
js
fadds
mov
push
test
adc
loope
into
jno
sbb
mov
es
and
inc
pop
push
lret
pop
and
add
xor
and
testb
lcall
dec
jp
pop
mov
fists
add
in
iret
cmp
and
mov
rcr
aam
and
iret
fwait
scas
lea
adc
out
sbb
inc
scas
in
test
jecxz
pop
fcoms
in
cmc
sub
pop
pushf
push
imul
dec
jbe
and
jne
mov
push
lahf
jae
jle
xor
pop
addr16
jns
jmp
insb
jae
rcrb
jo
mull
hlt
mov
lods
arpl
inc
sarl
xchg
xor
and
push
icebp
repz
inc
pop
cmp
and
jmp
or
icebp
inc
jp
nop
out
ret
xchg
test
sbb
and
mov
push
pop
push
movsb
mov
loopne
mov
adc
add
adc
inc
loopne
mov
lahf
ret
ja
adc
das
xchg
mov
repnz
insl
into
orl
or
and
push
sbb
les
lret
mov
jp
test
cmp
xchg
sbb
sbb
scas
sub
lahf
stc
decl
movd
jne
adc
imul
imul
or
xor
lock
popa
lock
pop
inc
leave
sub
les
insl
sbb
cmc
jno
sub
lcall
outsb
sbb
add
sub
push
enter
aaa
xor
out
xor
test
mov
std
scas
push
pop
les
adc
xchg
or
in
in
jmp
dec
std
and
dec
dec
ret
inc
lret
lahf
shll
xchg
fistpll
test
cmc
jno
inc
mov
xchg
popf
cmp
mov
cmp
mov
test
xor
js
inc
ja
dec
stc
xor
adc
pop
lcall
lahf
dec
cmpsl
sub
xchg
mov
xor
cmc
iret
xor
addb
xor
and
in
dec
movb
add
out
cmp
sarb
or
push
sbb
lds
nop
in
lock
sbb
adc
mov
cmp
and
jl
pop
xor
enter
xor
std
or
stos
rcll
int3
cli
pop
shl
rcrb
sar
push
lods
adc
mov
cmp
popl
mov
cmpsb
mov
ret
dec
test
pop
pop
mov
mov
sbb
jno
aaa
mov
test
std
jae
scas
imul
movsl
rcrb
adc
inc
or
les
jns
je
xchg
dec
lcall
das
sub
mov
inc
xlat
jp
in
movsl
add
push
repnz
adc
and
push
adc
sub
shl
xlat
mov
jno
dec
jbe
xchg
mov
fsubl
mov
mov
popa
jnp
insb
fiaddl
mov
sbb
jg
test
xor
mov
call
in
js
popf
out
mov
jb
fisubs
inc
or
or
inc
mov
leave
movsb
jb
cli
lods
shrd
push
push
xchg
push
testl
stos
nop
pop
jg
push
test
xor
dec
cmp
cmc
daa
sbb
mov
or
call
andl
in
repz
push
dec
scas
aad
xlat
push
cltd
inc
jbe
cmp
pop
jg
inc
jo
lcall
xor
orl
inc
sbb
mov
or
sahf
into
sub
jno
sub
leave
outsb
lds
clc
cmp
mov
jecxz
lea
jle
sbb
push
fwait
lock
fs
jnp
ljmp
pop
mov
dec
orl
repz
data16
sub
test
mov
lret
in
cmp
mov
dec
out
lahf
push
dec
scas
sub
pop
lahf
test
pop
jo
iret
push
popf
sub
cmp
mov
dec
arpl
scas
pusha
jno
jne
call
cld
fidivrl
fbld
dec
and
cmp
loope
jno
mov
sbb
stc
jns
xor
inc
mov
int3
stos
mov
add
jno
stos
sub
neg
inc
mov
or
shrl
xchg
negl
pop
and
dec
into
dec
cs
lock
rolb
sbb
repz
fbld
je
test
ss
xor
inc
and
subl
sahf
fdiv
dec
nop
das
adc
or
aaa
int3
jge
lret
xor
sub
or
sahf
sub
fldpi
jno
mov
xchg
and
bound
jl
fisttpl
aam
adc
dec
popa
jecxz
xchg
xchg
lods
xchg
jmp
cmp
jbe
xchg
jg
inc
aas
adcb
out
scas
hlt
pop
scas
fiaddl
popa
cld
cld
adc
adc
mov
dec
xor
fwait
inc
jecxz
out
and
xlat
sarl
and
popf
cmp
imul
mov
cmp
push
in
xchg
lret
xchg
das
outsb
bound
mov
dec
sub
loopne
das
push
jns
sahf
cmc
mov
out
hlt
aad
lods
dec
jbe
adc
ret
jne
sahf
xchg
into
mov
xor
lahf
pop
cmp
cmp
jl
mov
pop
cltd
pop
xchg
aam
xchg
ret
mov
decl
sbb
aas
hlt
loope
or
mov
xchg
adc
arpl
mov
xor
jecxz
mov
inc
loope
mov
lock
fneni(8087
xchg
fiadds
cmp
inc
pop
inc
loop
jp
rorb
mov
mov
push
clc
js
shlb
sbb
and
push
add
add
dec
pushf
push
pop
mov
popf
sti
xor
jmp
lods
into
adc
xor
in
jnp
pusha
jno
mov
mov
xchg
pop
cmp
adc
ljmp
in
insl
jbe
fnsave
xor
pop
aas
dec
enter
cmp
xchg
and
lahf
rclb
dec
dec
in
mov
jp
or
dec
pop
or
popf
in
pop
lcall
or
dec
cld
sbb
enter
out
pop
cs
hlt
stos
dec
jae
insb
imul
or
out
pop
mov
sbb
movsl
sub
mov
mov
sahf
ss
mov
insl
xor
mov
test
inc
stc
jae
ret
dec
mov
jmp
pop
pushf
mov
xor
cli
scas
inc
fdivs
data16
leave
cli
xor
loope
aas
mov
fcmovb
dec
mov
in
mov
cmp
cltd
nop
push
cltd
enter
repz
lea
cs
push
out
jl
dec
cmpsl
fisubrl
xor
jno
nop
mov
jne
mov
addr16
in
mov
fdivr
aam
faddp
iret
in
sarb
dec
pop
ja
xchg
aas
jl
fbld
jno
xchg
test
rcrb
sub
in
add
loop
ss
pop
jecxz
lods
jo
jo
aas
rcll
jno
cmp
jb
push
add
push
daa
in
out
imull
mov
lods
jl
cmp
subl
popf
leave
cmp
xchg
cmpsl
mov
in
mov
adc
pop
mov
push
and
and
dec
push
cmp
lret
sub
jns
into
dec
push
outsl
or
pop
dec
xchg
test
jne
rorb
mov
ret
mov
mov
int
aaa
mov
cmp
aaa
cltd
push
add
jmp
mov
leave
jno
or
insl
jno
mov
aam
sar
inc
cmpsl
sbb
arpl
jmp
fidivs
xor
or
mov
out
lret
aas
pushf
out
pop
out
in
mov
mov
xor
adc
inc
push
mov
jnp
imul
push
or
jge
addr16
jns
leave
iret
hlt
mov
and
and
mov
hlt
orb
mov
cmpsl
lcall
aam
dec
out
daa
jmp
hlt
loop
or
ds
mov
or
std
mov
inc
sbb
shl
sub
jl
mov
mov
xor
in
add
and
inc
shrb
xchg
add
inc
outsl
cmpb
and
and
xchg
imull
sub
inc
cwtl
xlat
bound
enter
fistps
adc
test
scas
and
push
push
inc
pop
addr16
adc
outsb
mov
out
repnz
stos
scas
lods
and
jg
push
int
and
in
fcoml
fiaddl
jbe
rorb
mov
sub
or
sub
int3
xor
fwait
dec
and
movsl
sbb
daa
inc
push
aam
inc
jnp
lret
mov
inc
cmpsl
xlat
and
in
jne
fadds
adc
into
inc
cmp
pop
mov
or
inc
inc
adc
jb
xchg
xor
bound
test
adc
or
xchg
imul
mov
aas
test
fs
pop
push
fldl
movsb
mov
push
xor
or
shlb
movsb
les
call
scas
xchg
stc
mov
out
xor
mov
jae
dec
push
fsts
repz
ds
push
mov
sub
xchg
push
fwait
ret
cltd
stos
sub
ficoms
xchg
mov
jne
dec
dec
rcrb
adc
and
fchs
jle
add
push
imul
sub
jne
int
cld
adc
sbb
movsb
aas
and
mov
and
push
mov
mov
pop
push
aaa
and
pop
push
imul
jg
aaa
cmp
dec
dec
incb
mov
fcoml
push
mov
lods
mov
mov
pop
push
in
incb
arpl
stc
orb
adc
jge
scas
inc
in
and
iret
fbstp
jno
jno
fildll
fildll
pop
mov
lcall
negb
shrl
mov
imul
jbe
jp
out
enter
push
sbb
sahf
sbb
loope
push
mov
not
jbe
sbb
cmp
out
fnsave
fs
mov
aam
test
nop
cmp
push
mov
clts
inc
repz
adc
lret
lret
test
ljmp
add
jle
test
xor
stos
scas
xchg
aaa
mov
mov
fwait
push
es
jb
push
push
sub
loope
pop
xchg
mov
fiaddl
repnz
add
sub
xchg
out
adc
xor
insl
mov
stc
xchg
mov
xchg
ret
jle
xor
ret
sub
outsb
inc
xchg
iret
pop
loop
jo
std
push
or
js
add
ret
das
mov
mov
lea
push
fsubrs
add
push
js
imul
test
inc
call
add
repz
ret
pop
adc
lret
inc
dec
mov
pop
fs
leave
jne
pusha
into
cmp
aaa
jbe
xor
adc
and
stos
push
repnz
data16
imul
jae
jp
fidivl
std
jge
pop
cs
dec
add
push
addb
sahf
or
nop
mov
cmp
jmp
int3
dec
loope
xor
mov
add
adc
mov
add
mov
dec
cmp
mov
rcl
ds
ror
iret
clc
or
je
or
mov
cli
call
into
outsb
stos
ljmp
shlb
xor
or
push
xor
push
push
xor
insl
int
jge
loop
in
mov
ss
or
ss
fiaddl
ds
cmp
pop
dec
pop
sub
cmp
mov
sbb
sub
orl
mov
push
jle
movsb
ficoml
and
mov
cmp
es
mov
int3
inc
data16
les
pop
rclb
faddp
je
inc
push
adc
xchg
out
out
or
jbe
sbb
mov
mov
push
mov
mov
in
xor
loope
sbb
sub
gs
jae
xchg
scas
lea
inc
cmp
sbb
xor
pop
mov
mov
inc
testb
mov
cmp
add
pop
fstl
push
inc
scas
pop
mov
mov
push
xchg
imul
push
sub
outsl
inc
push
cmp
jmp
in
push
pusha
outsb
adc
xchg
jb
rcl
je
jno
test
mov
add
jg
call
jmp
sub
mov
stos
lods
sbb
inc
jne
inc
cmpsb
dec
pop
mov
and
push
push
es
addb
flds
call
dec
xor
iret
insb
mov
movl
add
shrl
jae
pop
addr16
mov
jae
stos
sbb
ja
cmpsl
orb
jle
test
cmp
mov
push
jle
jl
ds
push
sbb
sub
mov
mov
in
jmp
mov
cltd
in
push
in
outsb
add
das
mov
int3
cmp
lret
cmp
or
jle
outsb
aam
scas
xchg
and
lds
pop
dec
xchg
and
stos
lret
xlat
pusha
pusha
ret
dec
aam
jbe
nop
notl
mov
xchg
sbb
in
xor
or
pop
and
adc
cmpl
aad
aam
stos
jb
mov
dec
imul
mov
push
push
sub
fwait
shrb
adc
push
push
ret
aaa
sti
and
xor
inc
fildl
pop
inc
fimull
or
mov
sub
mov
sbb
aas
jne
movsb
sub
push
stos
or
pop
mov
jp
cmp
shld
and
in
bound
jbe
aaa
loop
add
aad
aad
daa
imul
icebp
cltd
pop
and
aam
or
xchg
inc
and
push
xchg
jne
test
inc
and
aam
add
int3
mov
imul
lcall
xchg
lock
outsb
mov
dec
xchg
push
sbb
mov
xor
or
mov
mov
adc
arpl
nop
and
mov
lret
mov
incb
clc
pop
adc
jecxz
lock
sbb
add
loop
fmul
dec
inc
icebp
bound
push
push
subl
pushf
out
and
fmull
sub
ret
ja
pop
sub
pop
pop
cltd
cmp
imul
jl
dec
imul
mov
jl
inc
mov
pop
mov
clc
loop
jo
inc
pushf
outsb
fsubl
pop
loop
xor
dec
in
cmc
mov
dec
sub
mov
dec
adc
pop
loopne
cs
repz
mov
ss
jno
jp
jno
hlt
xchg
xchg
test
dec
push
arpl
aaa
add
leave
lcall
test
mov
and
out
cmp
sbb
mov
jecxz
adc
in
lods
add
dec
and
test
cmpb
and
jge
pop
jb
mov
arpl
call
cmpsb
or
push
cmp
mov
ret
test
fisubl
or
xchg
sti
test
and
sti
push
lock
js
into
push
repz
das
fs
push
das
adc
dec
add
aad
lods
jbe
std
sub
mulw
ret
adc
frstor
jne
sub
in
scas
xor
jl
mov
aas
inc
out
push
pmovmskb
ds
addr16
mov
or
inc
add
ds
or
loopne
aaa
mov
aaa
jmp
jne
lock
roll
outsb
cmc
out
loopne
push
mov
sub
pop
sub
and
or
test
jmp
dec
imul
lcall
push
sbb
push
push
sti
and
push
int3
and
cs
sarb
je
mov
mov
psrad
adc
negb
add
imulb
xchg
mov
add
sub
cmpsb
hlt
out
xorb
xchg
or
mov
mov
inc
mov
aad
idiv
orb
call
das
push
std
add
cli
out
mov
aaa
jnp
lea
push
ss
shr
ficomps
je
fmuls
jbe
mov
jns
and
jmp
out
mov
jnp
nop
or
scas
mov
jno
push
mov
mov
das
addr16
add
mov
das
jns
sbb
inc
sbb
sub
pop
test
rolb
mov
jbe
int3
mov
xchg
push
loopne
int
add
repnz
push
push
or
data16
es
add
cmc
mov
mov
push
in
xor
test
addr16
xchg
or
and
fldenv
in
es
aad
insl
fimull
pop
cltd
mov
test
and
loopne
dec
cwtl
out
leave
lock
adc
rcll
push
push
inc
jp
lock
mov
cmp
test
adc
and
mov
mov
test
and
jp
xchg
sbb
in
movsl
xlat
dec
adcl
mov
or
pop
inc
jle
mov
dec
cmpsb
push
adc
mov
ret
or
loope
pop
loope
gs
cmpsb
add
jmp
dec
out
mov
xchg
add
jb
inc
pusha
xor
out
out
orl
iret
push
push
jl
jge
inc
mov
icebp
int3
je
jge
mov
push
ds
ja
push
call
mov
shlb
xchg
xchg
std
stos
inc
sub
lea
sarb
xor
mov
movsl
mov
and
js
pop
inc
pop
push
sbb
ret
adc
mov
xchg
mov
sub
or
outsb
sbb
mov
push
out
in
mov
sbb
js
in
jp
inc
stos
push
dec
data16
cmpl
push
nop
pop
out
lea
addr16
cmc
mov
lods
imul
mov
cmpsl
mov
mov
mov
test
out
ficoml
xchg
iret
dec
fdivl
mov
lods
and
cld
mov
jb
mov
push
test
mov
mov
mov
mov
leave
ret
lds
ret
push
test
jmp
mov
xor
cmp
lcall
push
pushf
cs
jo
jmp
fcoms
or
mov
push
sbb
jp
mov
int3
dec
sbb
sarb
adc
mov
stc
addr16
fdivs
ror
and
xchg
outsl
call
in
cmp
and
xor
xor
loopne
xor
xchg
cs
cmp
ret
aaa
rorl
jle
and
shr
sub
fcoms
sbb
push
xor
cltd
imulb
addb
add
push
leave
nop
mov
jbe
lcall
sbb
fcoml
pop
jmp
inc
mov
cmp
add
cli
in
lods
lahf
iret
dec
rcl
jns
sbbb
movsb
mov
mov
ret
jae
push
jne
les
ljmp
inc
ja
outsb
pop
sub
lret
mov
daa
mov
push
mov
aam
out
xor
hlt
lea
sbb
movl
or
mov
xchg
jnp
jmp
add
icebp
inc
sbb
push
mov
mov
xor
fs
call
imul
inc
jno
and
mov
fwait
xchg
clc
sbb
mov
repz
sub
mov
sub
dec
loop
adc
lahf
lret
mov
and
adc
js
jl
and
or
push
testb
ja
mov
pop
movsl
and
lcall
aad
data16
lcall
hlt
or
sar
xchg
movsw
mov
popa
dec
jmp
inc
ret
shll
cmp
sbb
dec
jne
mov
push
insl
aad
les
notl
xchg
add
xchg
jnp
shll
mov
mov
ret
adc
push
loop
aad
sbb
xchg
sub
mov
push
jecxz
lea
insb
testb
je
cmc
js
mov
fisttpl
les
mov
out
ss
mov
sub
das
stos
outsl
add
mov
lods
popa
jno
out
outsb
xor
stc
out
or
aam
in
xor
xor
jne
and
sub
mov
xchg
cmpsb
smsw
ret
and
out
sbb
xchg
clc
xchg
push
lahf
xchg
scas
imul
sbb
cmp
mov
js
popa
je
mov
jae
jnp
xor
stos
repnz
inc
hlt
mov
inc
jb
inc
int
addl
dec
ljmp
mov
pusha
xor
add
cmpsb
test
rorl
jbe
xchg
xchg
stc
fwait
movsb
push
and
push
rorb
cmpl
nop
push
ret
outsb
ret
adc
sub
add
or
pop
inc
movsb
ficoml
pop
xor
add
or
pop
mov
test
sub
mov
fsubl
adc
loop
mov
and
mov
jmp
loop
add
subb
and
mov
mov
sub
in
sarb
lret
lock
mov
mov
sbb
mov
add
mov
pop
mov
mov
lods
outsb
outsb
repz
ficomps
hlt
hlt
ret
cmp
adc
and
flds
in
jl
insb
mov
pop
cli
push
dec
mov
stos
fwait
data16
or
push
xchg
mov
pop
pushf
xchg
movsl
xchg
pop
jne
mov
lea
fisubrl
pop
gs
jne
cmp
adc
mov
lods
js
js
jns
push
mov
rcrl
and
imulb
add
je
das
ja
in
inc
out
or
decb
int
mov
push
inc
add
xchg
jg
repz
xor
loopne
dec
mov
lret
repz
mov
sbb
aas
inc
mov
cmp
ror
sub
xchg
sbb
rcll
pop
xor
or
jp
xor
cmpsl
hlt
daa
gs
cmp
ljmp
dec
jo
lret
rclb
xchg
enter
sarl
xor
inc
mov
lea
test
push
cmp
iret
insl
push
cmp
pop
add
inc
mov
cli
mov
popf
sub
sub
aam
out
mov
es
push
xchg
jo
jo
outsb
cmp
jmp
ss
mov
xlat
jno
mov
pop
lahf
ficomps
adc
faddl
xor
test
mov
mov
xor
cmp
cmp
dec
push
call
xor
inc
pop
cmp
mov
cmp
fimuls
scas
fwait
xchg
push
add
test
out
inc
lods
jge
sub
imul
push
cmp
outsl
mov
aam
and
das
fwait
inc
inc
outsl
stos
push
addb
fs
mov
in
in
jmp
cmp
pushf
or
inc
lods
jbe
jp
into
enter
test
out
push
test
jle
aas
jge
ljmp
decb
popf
mov
aad
inc
sbb
call
dec
mov
mov
mov
clc
dec
cltd
pusha
cmpsl
cmp
and
pop
leave
sub
ss
push
shlb
jo
inc
aad
fwait
pop
fdivs
movsl
add
rcll
add
and
nop
daa
aad
inc
repz
push
sbb
sub
cmp
adc
outsl
jnp
es
or
mov
popa
ret
push
sti
or
adc
jg
leave
outsb
nop
lahf
push
adc
mov
loope
jne
arpl
add
sub
or
insb
or
lea
sbb
imul
imul
inc
in
dec
cli
dec
sub
inc
ja
mov
xchg
mov
leave
push
lcall
cmp
mov
sbb
into
popa
push
fcmovnu
aam
mov
sti
adc
mov
adc
push
mov
das
adc
adc
sub
mov
call
sub
and
push
ja
jne
sti
insb
cmp
cmp
call
fisttps
inc
call
out
nop
lret
dec
in
lea
rcl
dec
test
xchg
mov
sub
push
xor
popa
stc
xor
mov
call
and
pop
sub
adc
cli
mov
mov
out
loopne
repnz
cmp
das
xchg
repz
mov
clc
shrl
sahf
or
push
pop
ds
pop
orb
std
jno
push
shll
inc
adcb
cmp
enter
mov
loopne
aas
fldt
cwtl
clc
arpl
push
sub
sbb
cmp
repnz
mov
add
cmpsl
push
test
jg
loop
sahf
out
sbb
cmp
jecxz
mov
adc
mov
mov
out
and
out
add
add
imul
inc
or
test
inc
or
hlt
jbe
faddl
pop
mov
cmp
jo
or
inc
loope
aas
push
scas
lock
cmp
addr16
dec
stos
std
rol
and
iret
test
mov
pop
xchg
je
call
xor
flds
and
shll
enter
cmp
add
dec
dec
adc
mov
xchg
jmp
rcrl
jl
pushf
mov
fdivrs
xchg
aad
mov
sub
pop
adc
lcall
pushf
fwait
or
movsl
fdivp
clc
pop
mov
sub
test
xchg
xchg
aam
clc
xor
adc
cmp
insb
test
push
test
inc
insb
mov
push
int
fs
inc
mov
repz
rep
push
daa
cmp
nop
out
out
dec
mov
cmp
add
ja
xchg
fs
sti
sbb
pop
fsubp
lret
mov
xorb
dec
jo
call
mov
jne
mov
sarb
test
bound
shll
xor
and
rolb
push
inc
inc
andb
inc
xchg
mov
jo
inc
jl
ss
sbb
ficompl
xchg
xchg
leave
xor
lds
mov
icebp
or
xor
fstps
faddl
inc
daa
test
gs
in
push
sbb
lcall
mov
add
mov
cmp
fnstsw
pop
mov
sub
sbb
mov
jmp
in
cltd
xor
mov
sub
xor
int3
xchg
sub
dec
stos
xchg
test
sbb
icebp
iret
and
shl
mov
fwait
inc
hlt
push
mul
test
pop
jg
pop
daa
or
insb
repz
and
outsb
cmp
sbb
inc
repz
scas
mov
cmp
xchg
pop
addr16
shlb
out
add
pop
xchg
flds
adc
push
mov
inc
adcl
push
cmp
push
icebp
leave
push
ss
mov
cmpsb
xor
ret
mov
dec
iret
test
rcrb
lret
imul
add
shll
popf
arpl
in
or
mov
sbb
rorl
pop
pop
push
mov
nop
pop
add
cmp
lock
push
adc
shlb
xchg
out
out
sub
mov
jmp
sbb
pop
and
mov
cmp
scas
inc
push
adc
in
out
fstps
out
mov
dec
sahf
pop
bound
cltd
insb
push
add
jne
add
cltd
lret
dec
addr16
mov
jo
into
fistpl
pushf
pop
pop
pop
lds
sub
lods
fdivrs
fucomip
sbb
xchg
ds
cs
lcall
jmp
sbb
loopne
inc
or
adcl
hlt
ret
adc
je
xchg
pop
xchg
or
out
pop
jp
andb
sub
push
nop
and
test
das
test
mov
pop
ror
out
sbb
pop
out
fistpll
mov
insb
cmp
std
jle
iret
loope
in
and
lahf
lock
pop
push
adc
out
fiadds
push
push
fstl
pop
pop
faddl
pop
movsb
dec
push
subb
jecxz
cltd
lods
cmc
cmp
mov
push
std
mov
inc
sahf
aaa
or
jecxz
mov
mov
pop
mov
mov
aad
mov
into
mov
mov
outsl
jb
pushf
inc
ds
setp
or
mov
sub
movsb
inc
je
das
dec
jmp
pop
jle
xor
clc
daa
aaa
cmp
icebp
out
pop
repz
mov
ffreep
pop
mov
out
sbb
pushf
rcrl
jb
mov
lds
push
lods
shl
fstpt
jbe
test
pop
dec
dec
mov
leave
call
dec
inc
sbb
adc
out
push
pand
hlt
mov
shl
addr16
push
adc
dec
in
sarl
xchg
jl
and
jb
mov
cmp
xor
push
cli
push
int3
pop
mov
lods
ds
pusha
icebp
lcall
repz
mov
fs
sbb
jmp
pop
adc
fisttpll
mov
adc
jne
push
bswap
xor
das
lods
jge
ret
mov
inc
int3
push
jo
mov
add
mov
fsubrp
outsb
lahf
xor
sbb
jmp
or
xchg
scas
stos
xchg
sbb
mov
pop
pop
and
xor
ljmp
mov
cmp
mov
clc
ret
push
jmp
fbld
sbb
icebp
pop
xchg
sub
outsb
xchg
jp
adc
mov
mov
sbb
adc
cmp
pop
push
ja
inc
pop
sbb
scas
cmp
or
je
push
mov
mov
pop
insb
xchg
sahf
std
fsts
mov
push
or
fs
test
cs
bound
dec
aad
mov
dec
mov
in
lea
loop
dec
xlat
jae
stos
lcall
mov
push
outsl
in
or
or
adc
icebp
test
aaa
frstpm(287
jle
scas
inc
sti
dec
leave
dec
and
je
mov
dec
pop
int
les
out
stos
ret
dec
jecxz
mov
jmp
mov
mov
xor
out
cmp
lods
shrl
pop
push
pop
and
push
int
and
mov
add
cmp
pop
in
mov
je
adc
sub
or
outsl
xor
mov
pop
mov
jnp
movl
fcoms
imul
pop
call
clc
out
cmp
mov
in
bound
stos
das
pushf
es
inc
pop
and
enter
cmpl
sbbl
scas
jne
jecxz
iret
jno
mov
mov
jo
lahf
test
inc
ja
xor
cltd
insl
sbb
xchg
data16
lret
inc
arpl
mov
addr16
jo
insb
or
inc
pop
lods
psubq
sarl
rcrl
pop
push
scas
dec
int
add
sub
fwait
cmp
mov
imul
push
lahf
sbbb
scas
imul
mov
jp
scas
pop
mov
inc
jmp
es
sbb
add
daa
cltd
scas
shrb
jmp
movl
arpl
mov
pop
lcall
out
xchg
and
sahf
outsl
adc
push
lret
sti
repz
lret
mov
sbb
pop
call
movsl
cmp
cmp
pop
mov
jbe
imul
leave
int
push
lods
lret
cmp
das
into
add
dec
dec
sbb
dec
adc
mov
dec
adc
mov
xor
pushf
mov
jbe
push
pop
sbb
jmp
mov
jmp
loopne
shrl
mov
test
xchg
push
dec
jo
ret
cmp
jp
movsb
xor
daa
cmp
aam
daa
sbb
push
and
in
pop
addb
daa
sub
mov
outsl
dec
hlt
aam
pop
xor
jne
mov
push
cmp
pusha
pop
das
out
call
and
xchg
je
jmp
aad
mov
fmuls
hlt
cmpsl
xor
roll
insb
push
sti
xchg
pop
js
out
cltd
sarb
xchg
cmp
loope
or
or
jne
jmp
adcl
mov
cmp
pushf
cs
packssdw
mov
push
nop
dec
lret
add
jle
xor
pop
jnp
mov
leave
imul
bound
mov
scas
push
sbb
push
dec
ss
mov
stos
or
add
lahf
and
and
stos
mov
sbb
in
imul
shll
jne
sub
adc
ss
lret
repnz
in
lret
ljmp
loop
scas
push
mov
cmp
push
xchg
xor
push
lcall
mov
in
scas
jmp
jnp
add
in
sub
jne
xchg
fidivs
test
mov
push
enter
add
xor
sbb
dec
pop
les
push
jo
inc
and
mov
push
les
dec
jmp
push
ljmp
push
push
mov
cmp
sbb
lahf
add
test
add
sbb
push
or
outsb
testb
cmp
sbb
push
data16
jecxz
push
je
and
push
jge
lahf
fdiv
hlt
mov
xchg
mov
inc
scas
jle
jne
nop
cmp
leave
or
push
xchg
fs
je
push
clc
jge
shrb
fildll
insl
push
mov
aad
ss
sub
jecxz
and
xor
dec
stos
mov
sub
movsl
or
scas
and
dec
and
and
mov
repz
popf
out
push
pop
mov
cwtl
mov
xor
cmpsb
fisubrs
mov
adc
push
je
test
loopne
mov
aas
sbb
xchg
cmpsl
sbb
and
leave
adc
fisttpl
in
dec
movsb
fxch
clc
pop
add
subl
stos
cld
gs
test
mov
mov
loop
dec
mov
test
repz
popa
and
test
jo
xor
pop
and
jns
dec
out
fs
push
ret
mov
insl
ret
mov
lock
sbb
ss
mov
xor
ds
cs
mov
mov
adc
jmp
sbb
data16
mov
clc
or
fcmovu
roll
dec
divl
pop
cmp
mov
push
and
lock
mov
add
sub
bound
aas
test
sbb
out
mov
jne
int
mov
sbb
adc
cmpsl
xor
cmp
dec
iret
sbb
into
dec
outsl
push
inc
lock
cwtl
adc
jne
lret
sub
inc
sarb
jne
into
addr16
inc
lcall
outsb
cmpxchg
inc
pop
lea
leave
add
out
and
sbb
jecxz
cmpsb
jbe
xor
data16
add
add
popa
inc
scas
js
dec
xchg
in
ret
jno
les
pop
xchg
mov
cmp
xchg
stos
xchg
mov
aam
or
mov
xchg
divps
repnz
sub
dec
fwait
jecxz
test
mov
push
sub
arpl
repz
push
xor
inc
loop
xlat
adc
xor
aas
sub
mov
add
xchg
pop
cmp
imul
xor
stos
lcall
mov
jle
rolb
push
add
push
mov
mov
shrl
fistpll
stc
xlat
add
test
mov
pop
mov
rcll
shrb
aas
mov
pushf
leave
and
scas
pop
dec
clc
jo
xor
ds
int
in
jecxz
sbb
and
mov
std
adc
clc
lret
decl
sub
shl
test
dec
scas
mov
cltd
mov
push
aad
xchg
mov
dec
gs
mov
push
out
pop
gs
and
xor
xchg
xchg
das
shlb
cld
rcrb
scas
mov
xor
pop
insb
mov
leave
mov
int3
lds
out
test
xchg
jne
push
mov
pop
fidivl
cmp
cmp
xchg
frstor
ret
sub
xor
and
js
push
jle
jnp
loope
dec
lea
dec
sub
sub
cmp
fiadds
xchg
push
sbb
adc
sbb
movsl
mov
sbb
ficomps
jae
nop
push
sar
mov
xchg
inc
push
xor
cli
mov
sub
cltd
fidivl
mov
daa
push
mov
rcl
pop
dec
loope
and
imul
out
jae
lds
xchg
insl
xchg
aas
pusha
in
or
sbb
out
pop
mov
adc
jne
sub
stos
punpckhbw
leave
lret
jbe
jmp
xor
hlt
adcb
pop
or
xor
ror
pop
mov
mov
adc
xor
lahf
into
inc
xchg
push
xor
mov
jle
mov
jp
adc
hlt
mov
cli
popf
sub
or
movsb
xchg
loopne
hlt
loope
dec
fwait
adc
pop
cltd
mov
stos
out
add
rcrb
aaa
pop
pusha
lds
ja
jl
dec
mov
mov
aaa
mov
cltd
ljmp
jmp
outsl
and
hlt
cmp
or
push
fcomps
cmc
and
xchg
lock
mov
int3
mov
xchg
jp
add
and
out
mov
sbb
xor
lea
sub
lcall
inc
bsf
enter
stos
xor
dec
in
mov
rorb
mov
xchg
data16
orl
mov
mov
push
into
inc
test
push
loope
cmp
ds
cwtl
mov
mov
xchg
push
cmpsl
add
adc
in
int
sub
inc
jns
add
das
pop
push
pop
loop
pusha
sbb
jo
push
mov
andb
xchg
rcll
push
jnp
popf
mov
xchg
dec
repnz
int3
loope
stos
lock
or
dec
mov
push
je
movsl
jmp
pop
in
inc
cmpsb
cmp
xor
mov
sbb
add
mov
loop
fwait
lahf
enter
sbb
mov
mov
jmp
imul
inc
inc
cmp
aam
jmp
add
xchg
out
pop
popf
stos
mov
cmp
jno
xor
out
jp
rclb
pop
dec
cmp
inc
and
idivl
lahf
mov
shrl
adc
cmp
mov
adc
dec
push
std
fdiv
cli
push
daa
jbe
dec
jae
xor
or
not
mov
xchg
add
je
mov
flds
and
sub
xor
dec
mov
loop
push
lcall
and
cmpb
imul
cmpsl
xor
sbb
iret
jnp
cmp
leave
andl
test
outsl
aaa
xchg
fisttps
movl
ljmp
xorb
push
sar
mov
pop
add
push
fcomp
call
or
sub
cmp
sbb
adc
movsb
ljmp
sub
fucomi
xor
add
adc
lods
mov
out
mov
pop
push
mov
cmp
dec
inc
loope
dec
scas
data16
rolb
mull
xor
lret
fs
andb
and
int
aaa
insl
lds
sbb
out
sbbl
pop
insb
dec
pop
cmp
fldenv
sub
pop
dec
sarb
xchg
pop
mov
add
adc
sub
xchg
lahf
testb
pop
ret
scas
adc
mov
mov
mov
or
pop
sbb
mov
aaa
loope
push
mov
test
leave
jecxz
jae
jmp
popa
dec
in
aaa
push
test
sahf
jmp
inc
call
arpl
sbb
std
inc
in
lods
outsl
xchg
sbb
xchg
xchg
mov
push
add
lea
pop
xchg
call
cmpsl
mov
or
push
subb
cmpsl
jl
rorl
fcomps
mov
loop
in
leave
xchg
je
adc
jmp
neg
lret
gs
mov
andb
inc
or
jge
arpl
jno
adc
fistl
mov
lcall
fldl
cltd
cwtl
test
cltd
dec
mov
sbb
xchg
jp
stc
in
jg
rcl
and
xchg
pop
jge
rcrl
pop
xor
js
imull
lods
adc
scas
test
and
fwait
mov
mov
add
mov
je
mov
fs
stc
leave
jg
mov
int
dec
fimull
dec
push
mov
jno
test
ret
in
cmpsb
add
imul
or
pop
adc
add
and
jb
jmp
pop
push
fldl
mov
mov
mov
and
orb
mov
jne
mov
mov
aam
mov
push
mov
iret
loopne
lock
dec
in
fs
or
or
xchg
jns
incl
jle
fists
or
or
arpl
xor
add
ret
inc
pop
sub
inc
adc
cmp
dec
jbe
icebp
mov
mov
adc
jmp
enter
push
ret
mov
aas
adc
sub
adc
outsb
push
mov
xchg
jle
cmp
push
es
mov
sti
fistpll
mov
fisttpl
jb
sti
stc
xor
loopne
fsts
int3
aaa
add
or
test
jb
imul
jl
sbb
jp
in
cmpsl
imul
ret
fwait
mov
es
jo
and
bnd
aam
je
or
push
jp
xchg
icebp
push
mov
ljmp
mov
add
adc
lret
adc
popa
ja
int
jge
jns
cs
mov
xlat
adc
sti
leave
gs
sbb
popa
mov
out
stos
mov
sahf
push
or
loopne
push
cmp
adc
add
scas
add
dec
cmc
fmuls
fs
iret
inc
aas
fcomi
sub
inc
sbbl
in
sub
ret
in
xor
mov
hlt
call
sub
mov
mov
lret
lds
addl
and
inc
aaa
dec
adc
subl
dec
adc
leave
jmp
fldenv
into
mov
insb
sub
or
xchg
sub
in
ret
arpl
adc
leave
jnp
inc
mov
adc
and
aas
jg
add
fidivl
push
loop
xchg
imul
dec
xor
nop
pop
or
repz
js
add
adc
outsl
fistps
jns
xlat
imul
push
cmpsl
mov
pop
cltd
mov
or
jge
test
imul
pop
and
inc
into
hlt
es
rorb
addr16
xor
sub
add
rcrl
fucomip
push
popa
ss
popa
jle
xor
leave
fimull
xchg
movsl
pop
mov
and
lcall
out
mov
daa
rcrb
hlt
or
mov
jp
in
movsb
pushf
xchg
xor
cmpsb
fsubl
loopne
ret
sbb
es
add
xlat
scas
hlt
ss
negb
aas
int
xchg
inc
testl
fs
je
out
fdivl
jl
loope
dec
fadd
inc
mov
dec
aas
cmp
cmp
repnz
and
aas
mov
popf
sarl
aas
cmp
hlt
or
jl
addr16
jp
sysret
mov
and
push
in
fldl
fcmovnu
push
and
adc
mov
arpl
or
mov
mov
jge
jbe
cs
xchg
push
es
dec
lods
inc
rcrb
mov
fistpll
mov
out
cmp
xor
dec
push
add
fidivrs
pop
xchg
shlb
push
fmuls
sub
push
sbb
push
dec
mov
ret
aam
stos
and
data16
bound
mov
xor
andb
je
stc
pop
inc
lds
pop
ss
adc
mov
dec
jmp
cltd
mov
cltd
fistl
repz
adc
sub
sbb
iret
xor
out
or
adc
mov
sbb
test
sbb
pop
mov
push
mov
cmpsb
mov
aas
int
inc
sub
enter
inc
outsl
shrb
aas
stos
sub
mov
imul
jnp
out
and
sub
xlat
cmpl
and
mov
pop
icebp
mov
sub
ljmp
jle
jle
xchg
daa
push
repz
ror
test
inc
xchg
jp
test
notl
inc
cld
movsl
int3
jbe
mov
sbb
shrb
pusha
inc
jae
les
rolb
pop
shrb
pop
lret
and
loop
cmc
aaa
push
pushf
push
or
xchg
dec
fwait
mov
jl
jmp
xchg
push
pop
dec
sub
or
cmpb
les
push
mov
mov
jae
cmpsl
inc
and
mov
sub
fisubrs
xchg
loope
into
and
inc
xor
incb
push
pop
sti
push
cmp
push
mov
cmp
jbe
mov
push
mov
mov
adc
adc
out
mov
xchg
add
nop
cmpsb
inc
jecxz
out
test
sub
outsl
aad
jns
ja
ret
dec
dec
lods
ja
or
jae
loope
dec
adc
in
inc
add
cld
mov
scas
pop
mov
xor
sub
xchg
lods
movsb
cmp
or
jl
jno
jl
jo
adc
inc
xor
lret
pop
pop
cmpsb
xorl
call
or
pop
fdivs
xchg
icebp
jg
push
clc
jae
stos
orb
add
rcrb
cmp
push
jnp
pop
sbb
mov
pop
and
pop
out
push
cli
repz
push
cmp
sub
mull
mov
push
mov
stos
int
sub
or
dec
pop
mov
mov
sub
or
leave
aas
rol
lahf
movsb
xchg
int3
pop
in
jae
lock
dec
pusha
popa
test
repnz
inc
pop
lods
mov
into
cmpsl
icebp
gs
and
push
aas
inc
mov
xchg
pop
ficomps
adc
mov
dec
jl
sbb
jge
je
inc
subl
pop
add
adc
outsl
in
dec
aas
std
pop
mov
stos
pop
xorb
mov
cmc
push
add
push
dec
notl
xor
in
ds
xor
pop
das
out
sub
add
test
test
inc
xor
or
inc
push
jmp
iret
cmp
xchg
xor
or
and
inc
int
inc
ja
or
fidivs
aam
rolb
adc
arpl
andb
or
jmp
into
subl
aas
sub
xor
daa
stos
loopne
negl
int3
push
inc
imul
cmp
mov
and
cmp
sbb
xlat
push
repnz
xchg
insl
push
inc
sarl
out
inc
lds
mov
mov
adc
aas
int
jne
pop
shrb
cmp
inc
ljmp
sarl
fdivrl
enter
xor
inc
xchg
xchg
gs
push
inc
or
cmpsb
push
mov
scas
inc
mov
pop
aad
dec
in
or
jae
adc
andb
sbb
pop
sahf
ret
inc
xchg
mov
mov
xchg
pop
sbb
jmp
imul
pop
and
subl
dec
dec
aad
jp
pop
add
mov
movsb
negl
nop
loope
imul
inc
inc
aas
xchg
push
es
inc
arpl
mov
inc
mov
xor
mov
pop
mov
pop
int3
loopne
outsl
xorb
jbe
mov
pusha
pop
add
shr
cld
cmp
popa
stos
repz
mov
and
scas
jne
push
dec
mov
ljmp
mov
fadd
addr16
ret
adc
pop
shlb
leave
pop
mov
jmp
push
sbb
shlb
dec
xchg
ret
push
in
out
insl
add
dec
jno
mov
imul
cmp
int3
enter
mov
mov
sub
sahf
or
push
dec
clc
mov
mov
cmp
dec
push
sarb
cs
xchg
sahf
push
loope
jnp
popf
push
jge
out
js
insl
pushf
pushf
icebp
xchg
and
cmc
mov
or
and
lds
or
push
cwtl
mov
push
cmpsb
mov
push
cwtl
sbb
lods
mov
int
pop
into
cld
mov
arpl
xchg
inc
fidivs
mov
xor
inc
push
cwtl
mulb
or
or
sub
pusha
ret
mov
cmp
aad
jnp
dec
sbb
mov
gs
and
or
sbb
mov
xchg
in
cmp
dec
pop
mov
btrl
lret
aam
loopne
hlt
xor
or
ret
inc
xor
ds
aam
push
add
mov
es
xchg
xchg
fnstsw
push
mov
in
push
roll
out
shrl
push
jmp
mov
mov
dec
or
cmpsb
xor
mov
jg
int3
arpl
stos
clc
fadd
push
pushf
xchg
call
xor
out
repnz
shl
popf
aad
cmpsl
jno
cli
jae
andb
jge
xchg
leave
daa
stos
arpl
mov
inc
sbb
repnz
push
and
mov
lds
insl
fcompl
ret
push
sbb
xor
inc
add
cld
and
cmpsb
arpl
sbb
mov
dec
pop
inc
mov
or
fisttpll
pop
test
pop
xor
inc
addr16
and
xchg
mov
jg
inc
leave
and
adc
cmc
clc
ffree
jae
xchg
daa
mov
les
jne
inc
pop
lods
mov
xorb
sahf
xor
pop
shr
xchg
pop
cs
test
loope
fcoms
jle
rorl
in
mov
xchg
jbe
jae
in
nop
mov
inc
inc
mov
es
aaa
arpl
repz
in
mov
or
pop
push
testl
aad
mov
iret
repnz
sbb
in
cmp
aad
jge
call
mov
mov
adc
iret
lods
sbb
fldcw
out
add
sub
es
cmp
xor
daa
push
sub
xor
icebp
cli
out
out
sahf
cmp
or
pop
fdivl
bound
dec
pop
js
stc
xor
fsubl
bound
fisubs
sub
fsts
int
div
cld
test
loope
ja
les
cmp
jmp
in
sub
dec
imul
mov
and
mov
mov
sbb
inc
mov
fstpt
jp
add
gs
test
dec
out
daa
pop
aad
shll
dec
mov
xorb
roll
and
adc
loop
pushf
mov
mov
pop
fcmovbe
push
cmpsl
sbbl
rorb
inc
in
hlt
sbb
test
mov
xchg
xor
mov
and
sbb
loope
sub
adc
jle
mov
pop
fnsave
push
aaa
jne
dec
fists
pop
pop
adc
push
lahf
cltd
add
mov
rclb
sub
mov
addb
mov
hlt
test
out
rcrb
aad
mov
mov
jnp
jo
je
pop
xor
mov
pmulhuw
mov
ja
lds
imul
aam
test
push
dec
or
mov
hlt
loop
add
sbb
aad
icebp
test
xor
mov
xchg
shl
js
loop
fwait
inc
mov
cli
hlt
in
xlat
adc
rcrl
mov
cmp
jnp
mov
or
adc
cmpb
jle
or
scas
cmp
movsl
fldenv
mov
imul
mov
mov
cs
sbb
pop
and
cmp
orl
inc
xchg
push
jl
lret
xlat
mov
xchg
or
sbb
dec
add
inc
xchg
cmpsb
movsb
mov
into
xchg
cmp
push
xlat
pop
sbb
repnz
pop
cmp
ja
and
mov
cmpsl
call
lcall
subl
dec
das
in
xchg
cmp
imul
sbb
jbe
ja
dec
jb
add
mov
fimuls
cltd
fisttpl
shrb
jl
cld
lock
icebp
mov
dec
and
xchg
arpl
dec
xchg
push
sbb
push
sarb
ljmp
lods
mov
out
add
xchg
rolb
fwait
jns
push
sbb
lds
add
pop
sbb
outsb
pushf
inc
imul
rorb
test
aad
dec
addr16
scas
jg
popf
mov
outsb
push
stc
mov
cmpsl
in
dec
jne
fdivrs
mov
push
jge
shlb
xchg
negl
arpl
gs
push
mov
inc
xchg
scas
jns
inc
pushf
rorb
call
enter
lret
test
out
mov
mov
jns
dec
shll
shl
add
xor
stc
push
push
out
popf
mov
sbb
or
push
lcall
jg
lcall
adc
pop
mov
push
js
jmp
xchg
xorl
mov
sub
mov
daa
orb
pop
mov
dec
test
add
push
jns
and
ljmp
rep
in
add
sub
daa
aad
cld
loope
sub
scas
inc
xchg
hlt
xchg
xor
push
push
adc
imul
xchg
adc
push
jp
loope
and
cltd
fwait
mov
jo
pushf
lds
mov
mov
cmp
pop
push
popf
push
dec
ds
push
inc
arpl
add
stos
sub
out
cwtl
repz
mov
pop
arpl
inc
test
mov
mov
sahf
xlat
ficoml
hlt
out
pop
mov
push
sbb
fimull
mov
nop
fadd
pushf
rclb
cmp
adc
pop
rorl
inc
shlb
sub
jecxz
sbb
mov
sbb
out
inc
jno
inc
dec
nop
mov
imul
push
jge
out
ljmp
adc
incl
outsb
std
or
and
push
mov
jbe
or
psubd
cmpb
dec
or
mov
push
xor
pop
push
mov
cwtl
jne
ja
dec
sub
std
inc
lret
in
cmpsb
jnp
test
in
std
xor
lea
inc
popf
dec
push
push
mov
and
jmp
and
jae
adc
lea
dec
sub
cmp
int3
aas
push
or
cltd
sbb
js
xor
rorb
adc
push
mov
jecxz
shl
adcl
jns
lea
scas
test
andl
test
fcomps
loopne
hlt
and
mov
mov
pop
lds
jns
xchg
inc
movsb
out
jae
xchg
mov
sbb
subl
cld
stos
fs
jbe,pt
lods
adc
xor
and
clc
push
jne
or
in
mov
mov
jecxz
dec
test
jle
xchg
loope
sub
repz
push
insb
inc
arpl
jmp
shlb
mov
xor
sub
adcl
cltd
and
leave
leave
out
stos
fadd
dec
icebp
pop
loop
cmp
nop
xchg
mov
popa
cld
cmp
pop
or
mov
imul
dec
imul
sub
clc
dec
cmpsb
jl
loopne
repnz
in
ljmp
scas
push
mov
add
repnz
push
pop
lcall
pushl
hlt
imul
lret
fldl
jae
mov
adc
and
sub
xor
jns
cs
lods
stos
inc
orb
mov
lret
scas
cmp
dec
out
cld
mov
jae
ja
or
jle
push
xchg
fimull
in
add
out
into
fmull
clc
xchg
push
cmp
dec
cli
dec
das
dec
aad
dec
in
jg
inc
imull
or
mov
mov
xchg
pop
lock
popa
jle
movsb
aam
push
mov
das
mov
pop
jbe
lret
into
loopne
push
sub
iret
sbb
jne
fstl
outsb
in
mov
jne
xchg
ficompl
jne
outsl
jmp
jno
add
adc
negb
int3
push
out
leave
pop
and
lret
xor
inc
outsb
inc
sbb
mov
jns
sub
sub
out
mov
adc
stc
mov
mov
cwtl
jo
add
int3
rcll
lock
repz
lahf
cmc
cmpsl
cmp
lods
fstpl
sub
andl
mov
pop
inc
and
les
fwait
call
jp
dec
pop
push
loopne
rcrl
add
adc
mov
cmp
sbb
sub
mov
shr
pop
insb
or
test
cs
bound
adc
ds
call
inc
add
lret
in
dec
pushl
fistps
push
sar
mov
dec
pop
fwait
stos
dec
xor
mov
inc
orl
cmp
pusha
hlt
cmpsl
rclb
inc
cmp
cld
dec
add
mov
outsl
and
lea
adc
out
into
repnz
mov
imul
inc
or
ljmp
adcb
cmp
add
and
push
sbb
mov
inc
fwait
jle
repz
enter
arpl
pop
imul
mov
mov
push
andl
adc
lret
or
inc
pop
push
mov
cmp
mov
notb
sub
in
adc
repz
ficompl
mov
and
or
pushf
mov
mov
cmp
test
icebp
gs
in
cmpsl
xchg
orl
loope
dec
add
das
pop
jmp
cmp
jl
adc
in
into
sbb
adc
imul
pop
outsl
sub
or
dec
imul
xchg
inc
jle
cwtl
imul
rorb
mov
cld
sti
sub
ficomps
les
sbb
mov
or
or
jo
mov
lods
in
dec
sbbb
xchg
xor
bound
jne
nop
adc
insl
and
jne
fcoml
cmpsl
shlb
in
jg
mov
adc
mov
xchg
int
sub
mov
pusha
filds
cmpsb
and
orb
shlb
mov
push
pop
push
pop
jns
sub
addl
dec
pop
test
lds
nop
jno
fdivrl
mov
pop
cmpsl
enter
sbb
mov
stos
test
punpckhbw
ljmp
scas
xchg
test
lods
mov
adc
in
cmpsl
sarb
das
imul
jl
mov
mov
imul
fstl
arpl
das
cmc
scas
push
imul
add
and
mov
clc
mov
hlt
mov
mov
sahf
sub
out
in
dec
inc
incb
and
jb
loop
andl
adc
lods
movsl
pop
xor
cmp
loop
add
clc
mov
leave
jecxz
push
shr
sub
jne
das
decb
dec
xchg
add
cli
jg
add
ja
mov
adc
sti
mov
and
les
push
sub
jl
inc
mov
push
and
bound
shrb
roll
and
iret
sbb
xchg
shll
loop
aad
and
mov
jecxz
cmp
mov
mov
cs
inc
neg
adc
push
sbbl
push
lea
insb
sub
and
mulb
fcomp
enter
push
dec
das
jp
js
sbb
icebp
ds
or
sar
scas
xor
xchg
ds
movd
loop
data16
out
popf
fs
fdivl
daa
mov
push
dec
addr16
icebp
addr16
es
mov
dec
inc
xor
jnp
or
adc
test
nop
fisubl
pop
push
mov
jmp
push
lods
cltd
ljmp
lret
mov
push
rcrb
out
mov
fistps
mov
adc
inc
out
or
repnz
sbb
in
push
mov
and
xor
dec
js
mov
arpl
inc
mov
loop
pop
loop
or
popf
rorb
ret
pop
iret
imul
repz
pushf
in
scas
dec
fmuls
cmp
or
jns
xor
mov
mov
test
lcall
sub
cmp
ret
decl
in
push
xlat
mov
ret
inc
es
pop
out
mov
push
pop
xor
cmp
icebp
sbb
lods
push
or
pop
mov
test
push
xchg
cld
jl
jbe
lret
popf
jp
dec
dec
sub
pop
sti
mov
aas
movsl
cmp
and
inc
rorb
or
mov
or
pusha
xlat
mov
addl
inc
std
push
adc
mov
mov
outsb
sarl
lock
mov
jecxz
inc
push
jne
inc
cwtl
xor
lds
xchg
jae
pop
cwtl
data16
lahf
pop
mov
sbb
stos
mov
mov
aad
or
call
push
fs
pusha
pushf
xchg
or
add
addb
std
jle
in
mov
inc
xchg
call
scas
lcall
gs
mov
pusha
inc
mov
adc
je
and
xchg
outsl
mov
pop
mov
out
xor
gs
fisubrl
mov
push
dec
add
inc
call
jge,pt
mov
adc
ds
pop
in
lahf
push
xlat
xchg
fcoms
xchg
xchg
iret
and
add
mov
and
mov
jecxz
xor
pop
xchg
xlat
push
aad
loopne
jb
sbb
cmc
cmp
out
mov
test
xor
cmp
test
push
fs
mov
jl
fldl
pop
mov
cltd
mov
xchg
bound
ss
inc
adc
pop
push
in
mov
fs
dec
pop
bound
icebp
jmp
rorl
shrl
jne
jo
dec
adc
lahf
and
push
add
push
pop
xchg
mov
add
mov
fdivr
loope
decb
xor
push
arpl
xchg
xchg
sub
and
lds
pop
lods
sti
out
xchg
lods
dec
mov
or
mov
sti
aaa
ret
mov
or
add
and
xchg
push
xchg
popa
xorb
mov
ja
jae
cmp
inc
adc
adcb
mov
mov
gs
mov
loopne
push
fists
dec
push
xor
shll
arpl
and
cli
push
fwait
rol
add
loopne
pop
loop
mov
jle
adcb
cmp
adc
test
sub
pusha
inc
sahf
mov
out
or
imul
mov
fisubs
xchg
jns
mov
fdivrl
imul
fistl
nop
bound
ljmp
or
inc
sti
lcall
insl
sub
repz
dec
js
mov
and
inc
rcrb
adc
fs
inc
ret
xchg
mov
jge
mov
call
aaa
mov
lcall
pop
aad
xchg
shrl
or
xor
sysexit
jl
pushf
roll
inc
pushf
add
dec
outsb
aas
mov
cmpsb
rolb
xor
divl
iret
inc
xchg
out
lock
cmp
inc
clc
aaa
jl
les
and
fsubrl
pop
mov
push
add
dec
mov
out
xchg
and
lods
shll
in
fs
pushf
icebp
pop
and
imul
jge
cmp
js
mov
jp
jnp
xor
call
lods
push
mov
mov
decl
cs
mov
xor
fs
je
mov
ret
add
std
movsb
imul
pushf
xorl
pop
and
lods
xchg
sbb
pop
in
and
ja
or
jo
dec
cmp
out
mov
cmc
gs
popf
je
jae
imul
and
idiv
or
add
ret
pusha
add
mov
into
sbb
inc
xor
push
lret
add
or
scas
cmp
push
xor
imul
or
jecxz
xchg
cmp
jmp
in
loopne
lods
dec
mov
es
lock
xchg
testl
inc
fsubs
ds
pop
repz
or
pop
sub
icebp
iret
inc
mov
adc
sub
mov
pop
mulb
dec
inc
cmp
sbb
cmp
into
adc
aaa
cmp
fucom
leave
orb
hlt
xor
in
push
outsb
mov
push
js
rcl
mov
je
cmp
sbb
push
ds
enter
bound
mov
cwtl
push
sti
xor
jmp
repnz
or
fs
aad
pop
push
mov
fidivl
jg
rolb
inc
cmpb
lret
dec
out
ss
dec
xchg
test
rcll
movb
push
mov
xor
pushf
push
adc
or
and
jno
mov
lods
pop
mov
das
inc
xor
cmc
into
and
mov
inc
cmp
jb
adc
add
dec
subl
in
mov
push
adc
xchg
dec
cmp
pop
pop
add
sub
jge
outsl
dec
mov
test
aad
out
icebp
jecxz
movsb
jbe
imul
ret
xchg
je
int3
std
mov
cmc
lock
mov
aaa
mov
cld
xchg
rcrl
rcr
pushf
or
sub
aas
add
cmc
xlat
xchg
mov
or
or
xor
dec
mov
test
or
stos
lods
icebp
and
sbb
flds
sahf
mov
lods
out
xchg
stos
imul
cld
or
inc
fcompl
inc
mov
fldl2t
ja
or
pop
fs
fistps
cmpsb
fisubrl
stc
add
cmp
mov
mov
inc
fwait
addr16
and
pop
mov
adc
push
mov
inc
pop
popa
cs
jmp
or
jle
int3
stos
sub
cmp
out
cli
test
rcll
push
xchg
fnstenv
inc
pop
fucomi
test
add
pop
int3
pop
rcrl
and
imul
int
mulb
nop
xor
frstor
inc
ss
pusha
jnp
xor
push
xlat
out
mov
lahf
dec
popf
hlt
movsl
xor
in
add
enter
add
xchg
xlat
popf
dec
sub
aaa
adc
jl
pop
and
xor
dec
cmp
cmp
pop
insb
fldcw
jnp
push
or
add
inc
inc
xchg
movsl
lods
pop
jle
pop
xchg
cmp
scas
pop
jl
hlt
push
mov
cmp
aas
movsb
pop
cltd
pop
bound
jmp
pop
jp
call
mov
mov
ret
mov
pop
mov
and
dec
andl
das
cmp
int3
repz
dec
sbb
and
mov
sub
ljmp
bound
jne
stos
and
lret
hlt
js
inc
subl
jno
pop
pop
mov
jb
and
dec
enter
dec
enter
cld
mov
fwait
add
and
xchg
nop
mov
ret
aaa
push
je
das
inc
lret
rorb
sub
lods
pop
lahf
xchg
sub
imul
cmp
stos
sub
out
imul
xchg
loope
mov
loopne
push
call
fwait
pop
and
mov
adc
ret
pop
outsb
arpl
mov
dec
sub
mov
jp
xor
mov
mov
aas
ror
bound
xor
push
dec
dec
scas
hlt
inc
cmp
incl
nop
xor
mov
enter
pushf
ds
xor
or
movsb
mov
hlt
jp
mov
mov
and
mov
sti
push
or
mov
test
push
test
mov
adc
xlat
xlat
xchg
out
push
and
out
js
mov
in
dec
out
insb
out
push
cs
xor
les
aam
mov
aaa
jle
fisubrl
mov
dec
rcrl
mov
cwtl
bound
cmpsb
rcll
inc
in
mov
std
inc
repnz
jge
cmp
sbb
aaa
sbb
push
repnz
fiadds
das
push
fcmovb
or
mov
jns
popf
push
mov
cmpl
fs
adc
inc
cmp
xor
jp
or
lods
xorb
inc
jl
andb
fisttpll
js
lds
pushf
ficoml
ret
test
mov
sbb
daa
dec
cld
sbb
adc
fdivr
mov
and
push
sti
cmc
inc
xor
nop
stos
and
popf
cmp
lods
inc
ds
mov
push
xchg
dec
push
jmp
clc
xor
iret
push
pop
cmp
cmp
int
push
fisttpll
jnp
scas
pusha
or
push
dec
mov
jae
xchg
mov
sarl
lds
aam
xchg
divb
mov
adcl
clc
loop
jg,pn
clc
mov
jle
adc
sti
idivb
sub
xor
jbe
mov
jecxz
fisttpll
rcll
scas
icebp
mov
xchg
jns
add
jmp
mov
jno
add
dec
mov
cld
mov
push
adc
pop
xchg
pop
jl
out
push
ret
sarb
std
mov
inc
dec
add
scas
lock
mov
push
inc
loope
lea
xor
sub
jnp
mov
cmp
out
mov
push
push
lahf
sbb
ret
push
mov
mov
loope
cmp
pop
xchg
inc
sbbb
insb
popa
mov
push
jo
adc
mov
pushf
enter
imul
ret
xor
inc
and
dec
wrmsr
es
and
push
shr
sub
xlat
fs
push
cli
cmp
loopne
test
xchg
push
or
jb
add
mov
popf
pop
out
inc
sbb
push
nop
jbe
cmpsl
sub
push
xchg
mov
out
notl
addl
stos
mov
mov
test
pushf
cli
shlb
cmp
dec
dec
xor
jnp
popa
add
test
cmc
pop
sahf
sub
dec
and
bound
daa
mov
xchg
dec
fistpll
ret
arpl
fs
int3
jp
cmp
into
ljmp
ja
rdmsr
sarl
cmpsl
popa
les
push
pop
loopne
xlat
aas
cmp
adc
ret
mov
jmp
mov
lods
push
mov
cmp
xchg
enter
mov
aam
mov
sbb
add
xchg
mov
mov
mov
cld
fwait
lods
lcall
into
vcvttsd2si
xor
int
int
cmp
lcall
mov
inc
dec
subl
cmp
jmp
add
adc
ror
gs
in
cmp
or
in
lock
in
and
sbb
jp
iret
jns
pop
nop
mov
xor
mov
inc
cmpsl
and
cwtl
lcall
push
movsb
add
mov
arpl
js,pn
lods
ds
adcb
ret
xlat
adc
push
pushf
jno
mov
mov
fstps
movl
fiaddl
cmp
jge
inc
ret
fwait
xchg
lcall
mov
into
and
sti
sub
and
test
roll
shll
in
les
stc
pop
sub
and
dec
popf
aad
cmp
sti
sbb
cmp
scas
pop
fs
ret
test
lds
stos
gs
orl
add
andl
cmpsb
adc
cs
insb
pushf
mov
xor
cmp
push
iret
insl
loope
leave
int
hlt
push
cmc
mov
test
dec
addr16
out
fwait
or
fcomps
int
lret
dec
jecxz
in
shlb
das
fisubs
insl
or
cwtl
mov
and
pop
jno
nop
mov
pusha
jg
pop
les
ja
mov
ret
or
dec
ja
pop
jnp
adc
adc
std
jb
call
aam
jnp
inc
nop
fwait
daa
jae
outsl
cmc
in
loopne
jmp
jo
jle
stos
and
outsb
mov
loop
cmp
push
outsl
pop
ja
aam
push
and
mov
enter
add
push
xrelease
adc
lcall
adc
movsl
push
fistpll
loop
out
adc
jb
jmp
mov
mov
pop
popf
sbb
leave
cltd
push
aaa
xlat
dec
push
cmp
mov
add
cld
loope
out
adc
or
ficoms
dec
inc
cld
mov
add
dec
nop
stos
jbe,pn
jne
sbb
mov
inc
mov
add
mov
sbb
or
mov
loopne
imull
stos
cmpb
mov
addr16
jae
sub
leave
sbb
sub
fdivs
push
cmc
cmc
jmp
xchg
mov
dec
adc
ja
arpl
sub
cli
rolb
add
or
subb
in
imull
loop
sub
mov
sub
fcoms
adc
pop
mov
or
sbb
adc
movsb
je
sar
mov
xchg
or
gs
aam
out
cmp
lds
push
repz
or
xor
movsl
cmp
sti
mov
jo
inc
out
int
fucomip
movsl
xor
cs
xor
push
adc
jl
enter
ss
mov
xchg
jno
jb
cwtl
jecxz
outsb
sub
pop
pop
nop
xchg
pusha
es
hlt
jecxz
iret
into
imul
adc
xchg
and
mulb
adc
fcmovnb
xor
pusha
pusha
daa
mov
and
xchg
push
in
lcall
pushf
mov
jns
out
stos
jae
lahf
in
insl
lret
pop
out
jo
out
mov
cmp
adc
pop
jp
cmp
das
mov
xchg
addb
jns
cs
dec
rorl
out
adc
push
cwtl
xchg
sti
rolb
dec
adc
mov
add
cs
xchg
repz
xchg
shl
mov
daa
fbstp
inc
leave
sub
sarb
inc
xchg
ret
add
das
jge
adc
mov
lock
clc
and
xorb
notb
xor
inc
dec
rol
pop
xchg
cmc
push
push
fucomip
outsb
push
cs
adc
mov
sbb
das
loopne
fs
je
loopne
sub
xchg
sbb
pop
jne
loope
fidivl
jno
push
dec
mov
cmp
mov
cld
bound
es
or
gs
ss
dec
push
add
jno
fucompp
or
hlt
dec
dec
mov
test
jge
ret
mov
loopne
mov
mov
lret
push
lcall
lds
mov
imul
lcall
xchg
xchg
pusha
mov
sti
repz
andb
lahf
insl
daa
lahf
mov
iret
xor
cmc
and
aad
cmpsl
dec
inc
test
push
popa
negl
into
sub
sarl
mov
popf
push
mov
push
dec
and
std
hlt
add
jnp
sbb
aam
or
icebp
in
cmp
jno
neg
pop
mov
ljmp
and
fistps
jl
mov
loope
leave
push
pusha
mov
lock
int
inc
xor
testl
insb
push
add
adc
mov
loope
call
xchg
push
enter
mov
mov
iret
aaa
push
xchg
adc
imul
iret
cmp
daa
or
or
data16
jecxz
jnp
push
sbb
notb
inc
mov
dec
mov
rep
arpl
ret
outsb
inc
lea
add
jbe
xchg
mov
adc
fwait
or
cmp
jl
sahf
hlt
rorb
sbb
int
xlat
ficoml
stos
repnz
sub
test
je
push
lock
pop
fisubrl
push
xchg
mov
inc
das
pop
cmp
adc
sbb
sbb
call
fmul
adc
pop
push
rorl
stos
bound
and
popa
inc
add
pop
mov
call
rorl
jg
jge
sub
push
es
loop
flds
popf
daa
dec
cmp
outsb
or
sbb
gs
hlt
popf
jno
adc
or
loop
cli
mov
in
mulb
sub
scas
mov
adc
cmp
mov
pop
mov
mov
test
daa
clc
and
push
in
dec
aas
inc
cld
cmp
pusha
mov
sub
stc
sti
xchg
lret
sub
lds
ljmp
orb
mov
lock
fmuls
mov
sbb
mov
push
push
jmp
sbb
jnp
pop
pushf
jno
jo
das
add
movsl
stos
or
lret
mov
or
out
mov
out
mov
pop
jae
mov
xor
mov
and
inc
mov
push
adc
bound
mov
adc
xchg
negl
lea
stos
dec
jg
lock
mov
call
fwait
ds
jp
push
cmp
loope
js
inc
xchg
call
mov
cwtl
xorl
and
adc
xchg
inc
stc
ror
push
push
sbbl
in
mov
int3
pop
and
push
or
cmp
pop
shlb
cmp
xchg
sbb
rcll
xchg
push
push
mov
sbb
or
int
dec
test
xchg
ret
mov
inc
aas
out
fwait
dec
sbb
push
pop
dec
sbb
imul
cmp
sub
push
fnsave
je
cltd
xchg
sub
mov
dec
sbbb
mov
cli
in
mov
cmp
int
push
xlat
fwait
mov
repz
hlt
insl
cmc
loope
cmpsb
cmp
stc
jmp
push
or
stc
push
mov
mov
loopne
lret
jo
cmp
inc
xor
dec
jmp
fistpl
pop
mov
mov
pop
sub
jne
cmp
fstps
dec
loope
das
in
or
pop
idiv
or
jno
ds
or
icebp
and
icebp
jbe
rcrl
mov
sub
sub
push
fdivr
sub
test
mov
fwait
or
add
outsl
and
sti
mov
push
stc
dec
loopne
jno
sbb
repnz
shlb
outsl
mov
add
and
push
or
sub
bnd
fcompl
je
inc
mov
sbb
and
cmp
ja
add
mov
push
fucomip
cmp
pop
sub
jecxz
lock
adc
arpl
inc
test
xor
das
sti
lahf
sbb
scas
pop
or
outsb
mov
xor
scas
or
push
cmc
pop
inc
shlb
cmp
test
outsl
sbb
nop
push
out
sarl
sbb
cmp
jecxz
out
wrmsr
sub
arpl
inc
jmp
push
jno
or
cwtl
adc
push
movb
out
jl
scas
mov
gs
push
pmulhuw
decb
outsb
nop
sub
sbb
mov
andl
or
int3
pop
movsb
adc
rolb
test
fisttpl
cmp
mov
xorl
push
les
ja
lcall
dec
inc
das
stos
sbb
aaa
xor
icebp
aas
fldenv
mov
or
call
xchg
ja
dec
stc
insb
adc
pop
sub
cmp
sbb
push
mov
sahf
dec
jecxz
push
sahf
int3
pop
sbb
test
jle
int3
scas
lods
fildl
shll
subl
fs
cmp
and
insl
push
out
push
xchg
jno
in
push
inc
nop
icebp
inc
push
sbb
mov
xor
test
lds
lods
dec
les
or
xchg
mov
sahf
mov
sbb
cmp
call
add
xor
sarl
inc
mov
scas
sub
jge
aaa
xor
or
cmp
into
loop
sub
ljmp
in
ret
stos
xchg
add
cmp
or
mov
add
shrl
mov
std
dec
xor
mov
pushf
js
fmuls
lods
xchg
les
pushfw
mov
movb
push
push
popf
mull
sti
add
xchg
and
push
pop
ret
outsl
add
lock
mov
mov
dec
ja
cmp
gs
sbb
stc
jle
cmp
push
mov
cwtl
lcall
sub
or
js
push
add
xor
pusha
mov
jle
je
lret
test
cli
fwait
or
shrb
mov
dec
cmpsb
jbe
mov
or
inc
into
std
mov
enter
fnstcw
mov
push
int
shlb
push
repz
jae,pn
cmp
jo
ss
ljmp
mov
inc
jp
je
aas
int3
int
loope
popa
push
lods
shrb
fcom
pop
dec
insl
xchg
aad
ret
or
clc
xchg
sbb
inc
inc
adc
cmp
rclb
aas
add
movsl
xchg
push
out
jmp
dec
cmp
adc
nop
cs
cmp
sub
xchg
mov
and
mull
cmpsl
xchg
stos
and
sbb
inc
cmpsl
xchg
int
lods
push
adcb
add
in
int3
xor
pop
pop
in
or
cmp
imul
movsl
mov
hlt
mov
and
xor
and
add
mov
xchg
push
inc
xlat
sub
push
stos
add
jns
lret
sub
mov
pop
sub
mov
xchg
push
mov
dec
inc
cmp
ja
dec
jmp
fsubrs
js
mov
add
test
test
div
xor
jle
and
mov
xchg
stos
cmp
cmpsl
int3
mov
jo
loop
adc
push
dec
and
daa
jg
dec
fidivl
lea
jmp
int3
cmp
pop
imul
ss
pop
in
int3
sbb
shrl
cmpsl
hlt
movsb
ds
shl
lods
ret
xor
loope
addb
xchg
in
mov
adc
dec
cli
cmp
or
lods
in
xor
mov
and
pop
jbe
pop
sarb
xor
popf
imul
jl
mov
cmc
pushf
lahf
filds
xchg
icebp
adc
popl
popf
jnp
mov
adc
stos
movsl
std
xor
dec
in
push
sbb
push
cmp
cli
inc
insl
lods
fwait
dec
xor
dec
push
stos
adc
sub
add
cmpsb
and
mov
jnp
dec
loopne
test
xchg
xor
jno
mov
mov
inc
popf
enter
sbb
dec
pop
fs
dec
xor
adc
xor
ret
adc
adcl
inc
fidivl
sbbb
dec
xchg
jl
rcrl
roll
call
adc
mov
je
mov
orl
mov
mov
sub
jnp
inc
adc
es
jb
mov
push
and
insl
xchg
pop
mov
fwait
mov
cmp
lcall
mov
hlt
ljmp
popa
cmp
sbb
sub
jge
mov
xchg
stc
aad
je
movsl
and
in
xor
sar
mov
jle
adc
mov
sub
in
js
test
insl
mov
call
push
mov
mov
xor
les
test
insb
adc
pop
movsl
outsb
les
in
xchg
cmp
in
jmp
cltd
rcrl
add
sbb
sbb
fadds
push
sti
rcll
mov
push
pushf
mov
loopne
inc
int3
xor
imul
mov
mov
fnstenv
sub
fwait
push
popa
cmp
in
push
cmpsl
ror
pop
ja
adc
jmp
pop
push
repz
inc
and
mul
jbe
xchg
mov
ret
jmp
iret
push
mov
xchg
pusha
mov
fsubp
sbb
movsl
push
mov
add
xor
mov
sbb
stos
cmp
dec
adc
aaa
push
int3
sbb
scas
jl
frstor
mov
xor
fcomip
ret
lock
ret
push
std
loopne
mov
pop
mov
sarb
push
xor
movb
mov
add
cmp
fucomp
jge
lock
inc
int
pop
scas
xchg
ror
mov
cld
pop
adcl
adc
sti
mov
inc
ljmp
gs
mov
dec
sbb
fsubl
ret
lea
and
xorl
lret
jl
and
js
in
xor
bts
mov
out
mov
sbb
push
mov
jge
and
mov
push
rol
cmp
jnp
or
adc
fst
sti
pop
xchg
xchg
add
fdivrs
xor
xor
mov
rcrl
mov
adc
enter
loopne
nop
inc
dec
sbb
pop
or
xor
sarb
cwtl
insb
pop
cli
leave
add
cwtl
je
pusha
pusha
lods
int3
aad
in
pop
into
adcb
xchg
enter
push
xor
sahf
orl
insb
add
rcrl
lea
push
mov
insl
inc
js
rol
je
fstpl
jae
xchg
mov
push
mov
leave
cltd
lret
cpuid
xor
xlat
and
scas
add
jge
dec
add
jecxz
xchg
test
loopne
jg
mov
sub
push
neg
xchg
dec
sbb
out
clc
dec
in
out
icebp
dec
popf
loopne
cwtl
aad
es
push
pop
scas
and
adc
jbe
mov
sub
movsl
mov
loop
aaa
xchg
mov
outsl
test
jl
sub
add
movsl
addb
xchg
aaa
inc
cmp
dec
or
adc
push
call
sub
out
cli
enter
bound
dec
cmc
scas
mov
dec
icebp
push
cmp
jnp
outsb
adc
add
cli
jno
pop
sbbl
decl
mov
or
outsl
pusha
sub
outsb
icebp
rcrl
shlb
push
lods
iret
cltd
cmpsb
lea
pop
fnsave
xor
sbb
je
add
jnp
sahf
inc
xchg
imul
sbb
fld
popf
loop
jno
sarl
fwait
adc
cmp
orps
shlb
and
xor
das
add
or
loopne
daa
ds
inc
add
cmpsl
mov
mov
js
dec
pushf
add
cltd
pop
sbb
das
out
into
das
dec
aad
jbe
test
pop
adc
fmuls
push
lret
fcmovnbe
aaa
mov
xchg
in
mov
xor
lcall
rcll
pop
test
fwait
jne
xor
cmpsl
je
int
cli
adc
scas
pop
das
std
daa
fldenv
clc
out
jns
sbb
xchg
cmp
out
call
pop
loop
cmp
test
lret
pop
mov
sbb
scas
and
dec
mov
xchg
dec
test
xor
mov
adc
sub
push
push
sbb
aam
cltd
jge
xchg
js
and
sahf
mov
nop
pop
push
mov
pusha
pop
jbe
int
jecxz
insb
icebp
add
rorb
push
into
inc
mov
popa
sahf
test
push
dec
add
ljmp
cmp
std
sahf
outsb
and
and
imul
lcall
or
shl
ficoml
lahf
fldl
stc
and
xchg
sub
in
pushf
cmp
iret
mov
shlb
outsl
ja
jbe
in
loope
les
mov
pushf
push
rcr
xor
mov
pop
repnz
addr16
shr
xchg
test
jg
data16
addr16
dec
test
add
pop
aaa
dec
pop
and
push
push
roll
or
jmp
dec
dec
neg
dec
pop
pop
mov
inc
dec
sub
data16
call
and
lret
mov
das
ret
mov
mov
inc
dec
mov
adc
je
sti
lods
cmpsl
inc
negl
out
mov
fnstsw
mov
adc
shll
inc
add
inc
cmc
cmc
dec
jp
mov
imul
mov
jne
in
inc
dec
push
lods
or
into
sti
push
fwait
movsl
sub
dec
jecxz
divl
movsb
int3
sub
rcr
pop
pop
fbld
lds
ja
fidivrl
fwait
mov
in
mov
fs
cli
in
dec
adc
mov
negl
imul
push
jp
push
xor
pop
mov
mov
pusha
enter
ss
add
and
je
adc
adc
inc
dec
dec
dec
inc
mov
outsl
mov
test
call
pop
dec
push
rcrl
or
addr16
mov
push
jb
and
add
testl
pop
movsl
imul
addr16
stc
out
add
fs
dec
jo
lahf
xor
push
shll
xlat
sub
xor
adc
lret
mov
mov
ret
cs
scas
mov
adc
jbe
test
xor
js
aas
cmp
aam
mov
xchg
push
xchg
mov
outsl
addr16
cwtl
fxch
mov
pop
and
fcomps
bound
shll
daa
adc
loope
sbb
mov
bound
jno
or
add
xorb
jl
daa
leave
iret
test
ljmp
lret
and
insl
sti
pop
push
loope
push
in
cmp
mov
sbb
mov
dec
push
mov
cmpb
cmp
pushf
cmp
lahf
fmull
shll
in
mov
cs
and
jns
cli
ss
mov
jo
adc
push
xorl
loope
sbb
add
xor
mov
mov
xor
jg
xchg
xchg
test
xchg
data16
mov
in
movsl
and
out
ret
orb
dec
call
mov
pop
lcall
cli
in
dec
fdivs
shll
pop
lods
hlt
insb
call
mov
adcb
movsl
inc
cwtl
inc
movsb
in
pop
pusha
cmp
sbb
out
in
or
or
enter
das
sub
outsl
cmc
inc
pop
push
jnp
lcall
xchg
jl
mov
scas
sub
insl
jb
sti
lahf
inc
xchg
cmpsb
rcrw
fistl
mov
popf
sub
es
dec
sub
lahf
mov
push
pop
popa
stc
ljmp
js
sub
idivl
jns
jl
dec
mov
lret
jnp
mov
or
sub
mov
mov
aad
mov
xchg
mov
pop
sbb
nop
xchg
repz
enter
imul
rcrb
sbb
mull
xchg
jecxz
jmp
and
sbb
cltd
mov
imul
fisubl
xlat
sub
and
xor
mulps
jle
pushl
clc
minps
shll
mov
push
lea
push
aas
pop
fidivl
dec
xor
aas
and
xor
jnp
pushf
sub
jg
shll
lds
shlb
aad
and
cmpsl
push
xorb
pusha
into
fstpt
jb
ljmp
out
cmp
iret
cmp
aad
jb
push
popf
cmp
mov
outsb
sub
sbb
xor
jl
xor
pop
lahf
cld
mov
and
xchg
add
xor
push
out
push
cmp
mov
xchg
dec
ret
cmp
sbb
aas
fsub
dec
imul
and
push
pop
inc
jg
mov
xlat
jo
mov
out
lea
fcmove
pop
xlat
les
sbb
jae
fistps
adc
das
test
mov
in
jl
clc
aas
pop
in
inc
xchg
shrb
cwtl
in
adc
lods
xchg
imul
test
loope
fs
mov
test
or
add
and
inc
fwait
test
sahf
aad
push
push
or
sbb
in
and
into
push
xchg
addr16
lea
push
icebp
movsl
push
mov
gs
push
jne
inc
cmp
push
dec
into
xchg
push
std
push
sbb
fistpl
inc
add
jae
cld
mov
xchg
xchg
adc
sti
andb
push
jae
fstcw
imul
jo
in
stos
cmpsl
add
popa
mov
mov
lods
fdivs
in
rep
loop
pushf
movsl
jmp
xchg
jbe
cmp
negb
xlat
dec
out
sub
popa
cmp
ss
fisubrs
inc
and
cmpsb
daa
lods
push
lahf
jmp
push
jno
push
push
movsl
mov
jne
gs
mov
mov
push
cmpsb
idivb
jb
push
pop
shll
std
jno
or
sub
gs
test
int3
mov
jp
into
xchg
stc
or
pop
arpl
ret
or
push
mov
ret
jb
mov
mov
mov
sbb
jmp
inc
in
iret
mov
test
and
xorl
test
mov
outsb
dec
push
ja
xchg
cld
ljmp
decl
adc
pop
xchg
outsb
cmp
xor
xlat
cwtl
push
jne
sbb
arpl
push
pop
lock
inc
sub
lea
xlat
sbb
stos
lahf
in
test
in
lret
and
lahf
mov
lds
xor
xor
fcmovnb
icebp
sub
sbb
imul
js
push
add
xor
push
inc
lret
filds
xchg
dec
inc
mov
sub
mov
arpl
sub
gs
sub
dec
push
mov
add
xchg
xchg
mov
sub
dec
aaa
sub
jp
push
and
cmpb
cld
adc
xchg
rorl
mov
enter
movsl
stos
ljmp
xchg
adc
std
or
clc
ss
rolb
pop
cmp
jp
sbb
cs
dec
cltd
push
stos
or
jnp
fdivrs
test
outsl
fiadds
jmp
xchg
mov
mov
xchg
movsl
movsl
loopne
add
mov
xchg
call
sti
jbe
subb
jl
push
add
clc
mov
sub
call
cmp
movsb
lods
sbb
lret
sbbb
or
cmc
shll
and
mull
loopne
andl
add
or
or
pop
rorl
aaa
sbb
cmc
outsl
dec
pop
mov
push
subb
mov
rorl
jns
xchg
mov
inc
test
dec
mov
int3
jge
cmpsl
mov
push
mov
adc
mov
sub
insl
into
popf
xchg
xor
jmp
jle
push
fdivl
scas
bound
nop
adc
sar
loope
aas
inc
ss
mov
imul
and
ds
sub
mov
sub
inc
arpl
test
pop
sbb
fidivrl
add
lret
mov
frstor
in
fcomps
in
in
arpl
jbe
cmpsb
stos
add
pop
mov
aaa
cltd
jae
xor
lcall
pusha
push
ja
dec
pop
xchg
out
and
sbb
xor
xchg
xchg
and
mov
dec
sub
jp
cmp
and
into
push
jne
outsb
movb
xchg
ja
bound
sbb
dec
mov
lcall
xor
pop
jl
not
xlat
pop
lods
or
movsl
mov
mov
aam
adc
mov
push
rorl
ret
hlt
mov
xchg
dec
pop
in
pop
dec
push
jo
mov
test
cmpsb
fidivrs
outsl
mov
xor
pop
xchg
iret
add
cmp
inc
cmp
push
arpl
pop
jne
mov
mov
outsl
xor
popf
outsb
sahf
mov
scas
leave
xchg
das
je
push
sbbb
jge
adc
dec
rorl
stos
add
jmp
adc
test
and
es
xchg
clc
add
and
stos
jecxz
mov
js
sub
sbb
inc
mov
mov
pop
add
add
ror
out
cmp
jbe
mov
es
jb
mov
pop
push
lcall
push
jnp
int
js
cmp
leavew
shll
pop
cmp
in
in
imul
inc
xchg
test
arpl
sbb
push
push
jp
dec
mov
dec
mov
xor
sub
add
mov
sbb
mov
pop
dec
sub
add
cmp
pop
push
add
xchg
pushf
shld
xchg
jl
or
and
call
std
mov
popf
aad
or
hlt
or
dec
rcrb
lahf
mov
mov
push
das
push
je
push
scas
test
cmp
sub
xor
mov
dec
sub
outsl
nop
aaa
dec
jns
fs
jo
xchg
mov
add
dec
sbb
add
sarl
fidivrs
cwtl
aam
jb
scas
mov
xor
sbb
mov
inc
sub
aam
xchg
lock
dec
sbb
adc
out
push
mov
cli
adc
mov
lret
push
mov
in
scas
jo
adc
test
dec
fbstp
dec
xlat
push
jmp
mov
in
rcrl
popa
cmp
mov
ret
les
inc
std
dec
push
mov
xchg
ret
or
pop
or
sub
sar
jge
pop
dec
sbb
mov
xor
push
xor
loop
xchg
stos
mov
movsb
jl
fldcw
mov
sbb
std
dec
pop
jns
rcrb
mov
es
jbe
cs
bound
iret
add
inc
bound
arpl
or
mov
sbb
xchg
fsubs
outsb
je
mov
fwait
mov
fdivs
ds
not
pusha
loop
push
call
sub
cs
cmp
sub
popf
cs
ret
push
or
inc
fs
aaa
data16
cmp
dec
sahf
icebp
push
sti
pop
dec
cld
mov
orb
inc
cmp
pusha
or
dec
pop
ljmp
stos
ss
ja
pop
ret
push
pop
xchg
push
ret
sub
xor
bound
lock
and
xchg
xchg
cmpsb
xorl
sarb
shll
test
sbb
fsubl
xchg
jae
push
mov
std
popa
or
loope
push
mov
inc
in
sub
dec
add
sbb
addr16
incb
sub
mov
lds
inc
jae
cmp
push
mulb
push
mov
jp
pop
mov
repz
dec
xchg
int3
and
sbb
pop
cmp
xchg
push
lods
dec
pusha
aam
xchg
mov
sub
loopne
jmp
sahf
pusha
in
fldenv
jge
jmp
out
add
dec
xor
cmp
fisubl
or
xor
sbb
scas
xchg
dec
push
or
out
cmp
scas
adc
add
rorl
imul
mov
aas
pop
inc
mov
pusha
jl
hlt
pop
jl
jg
mov
mov
jp
sbbb
mov
lods
xchg
xlat
xchg
outsl
push
cmp
push
adc
ss
in
and
mov
sub
mov
adc
push
out
cld
hlt
mov
das
pop
pop
sub
hlt
push
test
push
imul
imul
imul
outsl
xor
test
outsl
movsb
inc
cmp
mov
push
add
pop
xor
push
les
loop
mov
cmp
pushf
sbb
sbb
push
sub
shlb
push
imul
pop
pushf
rorl
mov
sub
adc
push
jns
aam
dec
mov
addr16
rcrb
enter
addb
adc
dec
scas
adc
mov
dec
aas
mov
cmc
inc
adc
mov
jns
mov
call
stc
cmp
adc
fists
lcall
cld
jne
mov
loopne
jno
sti
fdivrs
inc
pop
subl
clc
jns
imul
sub
push
insb
push
and
push
rolb
jl
inc
iret
movsb
pop
jno
inc
icebp
mov
sahf
jg
ret
mov
ds
adc
push
xor
cli
shll
imul
fimuls
pop
xchg
and
repz
jnp
mov
cmp
jbe
adc
andl
and
adc
dec
xchg
mov
adc
lock
or
enter
adc
ljmp
and
xchg
ret
test
jb
shl
into
das
cmc
and
adc
loop
or
inc
pop
sbb
lret
push
repz
jl
pushl
pop
xchg
rolb
jnp
nop
xchg
std
fdecstp
push
fcoms
sbb
scas
mov
push
enter
js
movsb
shlb
xorl
das
scas
mov
inc
in
mov
lods
into
int
xchg
shr
imul
roll
in
jno
push
mov
sbb
xor
sbb
int3
stc
jge
popa
lods
push
xchg
add
jmp
jae
filds
push
xchg
ljmp
mov
pop
sbb
out
jo
clc
adc
adc
mov
mov
enter
fisttps
stc
xchg
ret
xor
cmpsb
cs
stos
into
insb
ljmp
js
int3
xor
mov
dec
mov
mov
and
lds
inc
popf
insb
cmp
cs
and
out
cmp
hlt
out
mov
adc
pop
jnp
sbb
enter
faddp
pusha
dec
pop
mov
xchg
gs
adc
mov
xchg
adc
xchg
leave
mov
sub
scas
loop,pt
cld
inc
orb
lods
cmp
test
inc
add
mov
test
int
cmp
into
and
jno
scas
aas
mov
mov
cmp
lea
fs
or
js
js
pushf
push
pop
mov
fdivs
lods
mov
push
push
popf
mov
mov
faddl
sub
cmp
test
xor
cmpsb
cmpsb
pop
int3
pop
iret
or
icebp
inc
cli
sbb
in
pop
icebp
adc
shrb
andl
xor
enter
outsl
hlt
lea
dec
cld
lods
lods
mov
jbe
int3
cmpsb
fistl
icebp
jmp
mov
sbb
mov
les
cli
rclb
pushf
cmp
dec
lods
negl
cmp
dec
rorb
inc
dec
cmp
mov
or
scas
push
mov
loopne
lods
loopne
and
bound
push
shlb
push
bound
mov
enter
adc
add
inc
mov
xchg
and
out
arpl
bound
andl
es
push
mov
pushf
popa
sti
mov
ja
xchg
shrl
xchg
and
cmp
add
cwtl
cmpsl
inc
push
mov
jns
jne
xor
add
sub
rclb
adc
and
mov
addr16
sbb
or
testb
insb
sub
in
cmp
fs
out
stos
dec
or
xchg
imul
test
hlt
mov
add
sbb
andnps
outsl
aam
lret
mov
sbb
stos
push
mov
dec
rorb
or
pop
pop
punpcklwd
cmc
cmpsl
sub
sti
and
add
aad
mov
jne
mov
lods
cmpsl
sbb
stos
sub
sbb
cli
aam
xchg
cltd
cld
ja
or
xor
pushf
xchg
je
mov
sbb
imulb
rcr
cmc
popa
out
dec
jb
sti
jle
xchg
icebp
cmc
mov
popf
mov
cli
ljmp
pop
mov
testb
inc
nop
movsl
ljmp
xchg
std
cmp
sbb
push
jno
scas
sub
mov
and
add
or
inc
xchg
cmpsb
jne
jge
popf
das
pop
aaa
fcompl
lret
dec
fs
stos
fsincos
jg
shrl
fcompl
out
mov
push
mov
mov
ret
jg
cmp
xor
into
sbb
fidivrl
mov
cmpsl
flds
mov
cmp
and
add
mov
cltd
push
lock
cmp
xor
sub
mov
aam
cmp
jnp
in
movsl
arpl
jnp
xchg
mov
rcll
sbb
sbb
shrd
sbb
jb
out
or
mov
lea
pushf
and
or
fmuls
or
jmp
jmp
pop
pop
pop
fmull
mov
pop
outsb
sti
sbb
push
mov
cmp
inc
push
or
push
xor
pop
inc
and
lahf
and
xor
pop
insl
loopne
js
addr16
in
and
mov
xor
test
mov
add
bound
cli
sbb
or
lahf
cwtl
fwait
mov
mov
in
addr16
movsb
cli
xor
mov
add
cmpsl
inc
frstor
popf
push
cmp
mov
sub
nop
or
rcrb
sti
scas
iret
movsb
push
arpl
jmp
mov
shr
jbe
add
in
icebp
outsl
push
sub
push
xor
mov
shll
test
loop
jbe
and
pop
lock
out
imul
push
lds
xchg
push
or
movsl
scas
pop
add
cli
cmp
lock
push
mov
sahf
lock
out
or
jg
mov
jmp
and
pop
cmp
mov
push
popf
and
jae
mov
outsb
mov
leave
mov
mov
add
push
lret
push
out
sbb
divb
lret
lods
ds
xor
ficoms
jo
aam
fsub
mov
cltd
or
movsb
xchg
xchg
mov
scas
lock
addr16
adc
xchg
loop
leave
xorb
cmp
data16
ja
pop
scas
mov
fs
or
rcll
sub
ret
add
mov
imul
mov
scas
fmuls
mov
sbb
fdivrp
fnstsw
mov
xchg
mov
pop
push
ss
sbb
pop
inc
dec
data16
jae
out
xor
jmp
cmpsb
push
jns
insl
sbb
stos
cmp
cli
enter
sti
sbb
inc
mov
loope
push
or
fimull
add
inc
lret
out
or
hlt
andb
push
jnp
mov
dec
and
push
sub
rcl
inc
lret
mov
cmpsl
add
xchg
cmp
bnd
iret
mov
xor
xor
push
xor
call
sbb
aas
pushl
sub
pop
mov
cmp
and
jae
in
int
aad
mov
add
cmpsb
or
push
xchg
mov
scas
rcrb
mov
into
gs
sahf
jmp
dec
cli
xchg
jecxz
push
sub
shlb
in
jbe
sarl
testb
jp
adc
jo
bound
stc
pop
mov
out
or
fs
outsl
stc
and
and
jae
cld
or
mov
loop
notl
add
cmp
mov
push
js
mov
or
jbe
or
lcall
outsb
cwtl
jmp
pushw
pop
push
mov
es
dec
idivb
in
arpl
mov
jnp
ffreep
fistl
dec
bound
clc
inc
sub
cmp
mov
into
leave
test
mov
mov
shrb
mov
cwtl
adcl
ss
mov
out
jmp
adc
xorl
adc
add
cmp
pop
pop
leave
sbbl
cmpsb
stc
and
cld
mov
not
or
jno
stc
sub
bound
addl
cmpb
je
sub
lahf
cmpsb
inc
scas
pop
inc
imul
sbb
mov
pop
jo
lock
ljmp
stos
enter
and
aas
adc
and
mov
and
sbb
mov
test
sbb
push
pop
out
jo
cmp
or
testl
insl
aad
out
sub
mov
mov
fidivl
mov
leave
incb
inc
scas
sahf
leave
leave
mov
test
jp
into
rolb
xorb
mov
ss
cltd
movsb
and
sahf
hlt
jnp
stos
outsb
imul
lret
and
loope
pop
push
int
mov
fnstenv
data16
out
or
and
xchg
out
xchg
jnp
icebp
lret
cmp
loope
mov
insb
ja
dec
adc
xchg
sarb
nop
bound
fadd
and
imul
pushf
gs
stos
dec
pusha
es
int3
push
fnsave
mov
loop
xor
orl
pushf
mov
sbb
sub
ret
fcmovnbe
mov
jno
adc
sbbl
sti
inc
cmp
push
aam
cld
mov
push
or
loop
imul
dec
mov
ficoml
andb
stc
popa
cmp
out
push
xor
cli
mov
pop
in
mov
jns
push
into
dec
cmp
or
cmp
mov
mov
jbe
cmp
sbb
sbb
imul
dec
or
repz
enter
fbstp
dec
mov
cld
arpl
aaa
sub
loopne
in
adc
arpl
dec
inc
repnz
jmp
stos
mov
sahf
outsl
inc
int3
aaa
aam
push
xor
pop
mov
aaa
xor
sub
outsb
out
mov
sbb
push
mov
retw
jp
data16
adc
repz
lds
testl
pop
shl
inc
adc
lock
and
pop
add
fcomps
orl
jp
sbb
shll
movsl
pop
aad
or
ret
push
out
ffreep
test
sub
sub
sahf
jge
or
sub
and
inc
popf
xchg
mov
pushf
sub
add
imull
rcr
sbb
inc
mov
sub
add
lods
out
repz
decl
sub
sbb
adc
insl
mov
sub
shrl
jmp
and
popf
xchg
sbb
mov
add
std
ud1
out
js
xchg
mov
mov
loope
sub
mov
jmp
fstp
sahf
je
aas
daa
cmp
insl
loope
xor
mov
mov
in
cmp
ds
outsb
clc
fiaddl
xor
and
cs
out
jo
push
mov
in
push
sarb
mov
cmp
push
test
add
jb
stos
mov
lret
aaa
push
daa
leave
imul
xor
in
imul
jnp
lock
xor
aas
pusha
jne
mov
rorl
fwait
ret
cmp
and
xor
arpl
mov
pop
or
xor
ret
das
sub
pop
xchg
push
cmp
xchg
adc
push
jbe
inc
jge
sbb
aam
add
out
cltd
daa
dec
js
push
push
icebp
out
roll
daa
filds
das
add
outsl
ljmp
mov
loope
popa
into
int3
inc
add
mov
cwtl
xor
mov
arpl
mov
cltd
adc
cs
movsl
jecxz
js
sub
cmp
mov
loop
dec
cmp
mov
push
ror
cmp
nop
mov
pop
dec
ds
insl
ds
out
adc
fdivr
test
xor
mov
test
mov
jae
jge
xor
sub
sbbl
incl
jle
push
push
jbe
inc
shrl
jecxz
mov
movsb
fwait
jecxz
sub
ret
add
mov
or
pop
push
jne
pop
sbb
scas
iret
je
pop
add
popa
dec
mov
gs
sahf
push
int
pop
das
jo
and
add
xchg
dec
fwait
add
lret
loop
out
test
leave
push
jg
sbb
add
inc
jecxz
cmc
nop
nop
xor
dec
xchg
cs
imul
mov
sbb
subl
lahf
mov
dec
pop
mov
jmp
imul
pushf
jg
test
sub
push
sub
shlb
xor
jno
mov
cmpsl
mov
lcall
sub
sti
mov
leave
or
out
mov
int3
frstor
enter
mov
xchg
jecxz
es
out
lcall
xor
ljmp
inc
pop
std
hlt
aaa
popf
adc
mov
or
xorb
scas
ljmp
in
add
jg
push
sub
data16
jg
mov
cmp
xchg
add
xchg
cli
or
or
out
in
jne
dec
in
test
dec
push
pop
outsl
int3
js
out
xchg
adc
test
shr
das
mov
cld
loope
bound
cltd
scas
dec
in
cli
out
jns
pop
fucom
ds
push
mov
cwtl
xchg
and
sub
mov
jns
add
mov
xor
fsubs
cmp
in
or
xchg
xchg
xchg
dec
nop
roll
xor
in
mov
xchg
xchg
jle
or
int3
pop
pop
jo
ret
add
xlat
test
fwait
dec
xchg
int3
lock
mov
xor
outsl
clc
and
mov
cmp
js
mov
je
int
mov
dec
aaa
jnp
push
ret
ss
add
into
in
jns
push
in
pcmpgtw
xchg
icebp
sub
int3
jae
shl
mov
arpl
cmp
insl
xchg
outsl
jno
shrb
jge
sub
or
ret
cmc
sub
stos
cmp
add
rorb
lret
jge
mov
mov
jg
and
divl
sub
mov
adc
insl
sub
sbb
mov
adc
inc
sbb
rol
push
loop
xchg
mov
push
inc
addr16
add
test
loope
pop
pusha
stc
aam
sahf
mov
push
pop
sbb
xor
dec
adc
leave
sbb
mov
fstpt
outsb
sahf
jnp
xor
cmp
fldl
xchg
pop
rcrl
test
cltd
push
shlb
pop
sub
fadds
das
orb
lods
add
pop
or
mov
cltd
xchg
xor
xchg
lods
jge
pop
pop
push
sti
add
mov
pop
call
mov
movsl
daa
mov
fstps
divb
cmp
push
icebp
lret
not
adc
or
mov
loop
push
into
cltd
je
mov
pop
or
aaa
lods
loopne
es
cmp
mov
into
adc
cmp
jmp
mov
jle
push
cmpl
sub
lods
cmpsl
or
inc
add
inc
mov
xor
xor
je
push
dec
and
xchg
push
push
sbb
pusha
mov
inc
jmp
cmp
mov
and
je
shll
sub
lods
leave
negl
mov
repz
cmp
int
or
adc
xor
lahf
push
andb
aas
push
insl
mov
sub
xchg
mov
xchg
cmc
pop
hlt
cltd
xor
push
mov
andl
in
inc
das
or
add
dec
aam
inc
jmp
jbe
mov
rcrl
sub
mov
test
in
stos
cwtl
arpl
outsb
into
mov
repnz
dec
inc
adc
in
push
movsl
jg
pop
or
or
ds
dec
mov
pushf
rolb
test
scas
ret
cmpb
inc
and
add
mov
and
dec
nop
fmull
mov
fbld
sahf
loopne
aad
push
clc
dec
dec
mov
jae
je
mov
pop
daa
or
mov
mov
mov
stos
ja
pop
orb
or
adc
out
jg
add
mov
test
rcll
cli
addr16
out
adc
push
mov
jmp
gs
fbstp
outsl
mov
pop
jne
mov
inc
hlt
enter
cmpl
add
jbe
dec
shrb
inc
dec
icebp
cld
insb
and
inc
ljmp
xor
adc
or
roll
push
xor
cmp
aam
lds
rcrl
bound
cmp
push
data16
addr16
repnz
test
push
cmp
sub
and
inc
out
sbb
faddl
sub
ljmpw
ret
push
mov
lock
scas
jp
outsl
adc
xor
jp
out
mov
rolb
sbb
mov
xor
mov
cwtl
xchg
push
jl
jb
mov
jo
fsubrl
mov
adc
fisubrs
jb
sahf
imul
dec
cmp
and
sahf
sahf
jnp
push
fwait
test
push
jecxz
push
mov
sub
adcb
aaa
fldl
sbb
repz
inc
push
fwait
fistl
jo
mov
fiaddl
mov
pop
dec
or
cwtl
mov
adcb
push
test
in
vmwrite
push
fisubrl
insb
or
or
std
or
or
inc
xor
stos
out
cmp
inc
sti
mov
scas
adc
gs
insb
cltd
or
jmp
inc
sbb
lret
mov
repnz
xlat
into
xor
shll
mov
sub
pop
idiv
push
pop
mov
xchg
mov
outsb
and
jmp
sbb
das
jl
and
inc
sub
movsb
dec
sub
or
lods
add
rcrl
test
jb
aam
dec
nop
imul
sub
aad
or
icebp
sahf
mov
fisttpl
jae
mov
in
sti
pop
pushf
mov
sbb
mov
loopne
jge
test
les
sub
xor
and
jb
fmuls
outsb
repnz
sub
insb
adc
jns
push
cmp
scas
add
jle
mov
int
pop
dec
mov
dec
pop
test
xchg
xlat
mov
mov
mov
or
jnp
pop
cmc
inc
adc
out
movsl
push
sub
xchg
shl
cld
pop
and
jl
pop
mov
xlat
mov
jae
sbbl
cmp
test
mov
mov
fidivrl
movsl
fildl
or
adc
jecxz
es
stc
xchg
mov
mov
sahf
sbb
cs
out
jnp
cmp
ret
fisttpl
mov
subl
jg
sbb
add
test
in
jl
rcl
inc
mov
pop
pop
sbb
inc
nopl
sub
insl
jecxz
sub
je
icebp
mov
jge
lmsw
shlb
stc
pushf
pop
inc
ss
scas
ljmp
xor
xchg
fucomi
mov
pop
test
xchg
mov
aad
push
outsb
jle
sub
mov
into
sti
std
lcall
mov
lods
sub
cmpsl
imul
adc
cmc
call
or
jg
mov
mov
inc
add
das
jne
in
cld
mov
scas
dec
mov
push
out
fimull
iret
movsl
and
push
call
xchg
lock
out
xchg
mov
jecxz
leave
adc
adc
dec
popf
ja
sbb
mov
leave
mov
mov
orl
es
jo
xchg
cwtl
shl
movsb
sbb
mov
out
sbb
or
ja
icebp
loopne
fs
lret
mov
jnp
pop
push
lock
cmpsb
ret
ljmp
mov
cmp
lcall
inc
popa
pop
push
roll
adc
or
test
loopne
sti
pop
insb
pushf
pop
mov
nop
adc
add
xchg
aad
lds
adc
movsl
popa
int
cltd
xchg
xchg
or
xchg
arpl
es
and
sbb
add
pop
loope
bnd
aaa
mov
cs
push
add
test
arpl
xor
xor
or
in
mov
push
dec
xorl
sub
test
call
xchg
lea
sbb
dec
test
loopne
fstpt
dec
in
iret
push
pusha
movsl
jo
fucomp
or
jl
les
lods
test
je
out
lods
mov
dec
pop
shlb
jno
mov
and
push
mov
lods
jmp
push
mov
lods
cmp
mov
stos
adc
subl
ss
adc
subb
mov
mov
rcll
push
mov
and
push
jle
push
fsubrs
fisubs
cmpl
mov
or
dec
push
stos
push
dec
xchg
mov
pop
outsb
shrb
movsb
dec
mov
fs
sbb
mov
dec
fnstcw
mov
andl
idiv
push
cld
pop
xor
popf
push
aad
mov
xchg
jbe
movsl
xlat
mov
lret
hlt
in
popf
mov
faddp
jbe
scas
stc
lcall
or
js
dec
es
inc
mov
outsb
divb
sti
scas
lods
fadd
shll
inc
loope
sub
cli
in
dec
or
inc
cmp
addr16
sbb
stc
movsb
aad
inc
dec
dec
outsl
sub
fistpll
dec
xor
jp
jg
adc
daa
mov
sarb
popf
mov
popa
enter
lret
out
sbb
pop
icebp
sbb
repz
int
imulb
and
pop
ret
out
add
adc
push
xor
xchg
cmpl
in
test
mov
push
lret
pop
aam
shll
sub
push
mov
inc
mov
ret
dec
adc
xchg
idivl
fbld
cmp
daa
and
push
pop
dec
clc
cmp
jb
pop
in
adc
sbb
ss
push
pop
lret
pop
lock
repz
pop
scas
movsb
inc
in
lret
adc
sbb
push
jge
push
rclb
push
fildll
fldenv
scas
imul
les
xor
sbb
xor
mov
push
xor
lods
leave
xchg
mov
xor
inc
cmpsb
cmp
orb
xor
jnp
test
or
push
arpl
notl
fisubs
in
cmp
bound
pop
and
in
pop
jae
scas
lea
fidivrs
lock
adc
mov
lock
lds
out
fistpll
in
test
outsb
gs
cmp
inc
fprem
adc
movsb
jmp
ss
fldcw
mov
movl
test
insl
push
or
cwtl
jmp
xor
dec
cmpl
add
stos
pop
outsl
push
push
push
outsl
out
and
stos
fildl
cmp
mov
test
sub
icebp
cwtl
dec
mov
ja
jl
test
jne
or
clc
push
adc
in
xchg
inc
push
sbb
jnp
in
aam
cmp
mov
iret
xor
bnd
cmp
in
mov
pop
sub
sbb
cmp
lret
push
cs
daa
sub
cmp
or
pop
mov
or
jo
mov
lret
subb
pusha
push
cmp
loope
ja
jbe
icebp
cmp
lret
xor
inc
in
jp
int
adc
inc
mov
aaa
mov
pop
out
loopne
jmp
or
mov
outsl
setg
mov
in
sub
fisttps
adc
dec
jnp
cmp
pop
addb
aad
imul
popf
inc
popa
insb
out
aam
mov
je
scas
ficompl
mov
stos
push
aaa
mov
push
cmpsb
mov
adc
push
loopne
fwait
orb
push
adc
cmp
es
push
or
lds
mov
cmpsb
push
add
mov
mov
sti
test
jmp
jbe
and
mov
mov
add
jne
or
cmc
jmp
xlat
gs
xchg
lds
push
imul
pop
lcall
shll
adc
out
jnp
sbb
push
shrb
loope
sahf
mov
xor
sub
mov
andb
xor
in
mul
jg
lahf
rorb
or
out
hlt
adc
fsubrl
es
mov
sub
loope
aaa
shlb
dec
mov
mov
cmpl
ljmpw
and
jbe
cmpsl
and
ja
call
cmp
push
call
push
shr
jle
jo
mov
mov
popa
cld
lret
mov
mov
es
lret
int3
sahf
jns
cmovp
mov
jge
pushf
jge
cs
gs
add
adc
pop
or
inc
pop
ds
xchg
mov
js
pop
daa
push
loop
insb
xor
push
hlt
push
int3
xor
shlb
or
xor
into
inc
imul
xlat
and
inc
inc
leave
pop
jg
fdivr
mov
mov
pushf
mov
cmp
and
ljmp
sbb
test
shll
mov
push
mov
pop
pop
pop
jo
cmp
pop
inc
mov
scas
aad
outsb
faddl
xchg
rorl
insl
pop
inc
repz
xchg
xchg
mov
out
dec
and
xor
loope
es
xlat
scas
jns
cmp
inc
pop
ds
in
jae
ud2
inc
aaa
rorb
mov
call
and
xchg
stc
jle
mov
lret
int
sbb
fcoms
jno
xchg
add
pop
outsl
imul
jo
loopne
ja
popa
outsl
int
jle
sub
mov
sahf
cld
mov
mov
out
in
arpl
js
rcrl
aam
shr
clc
ljmp
sub
mov
sbb
testb
mov
test
lcall
scas
movsl
loop
movsb
mov
lahf
pop
js
or
mov
aaa
cs
add
sub
jecxz
pop
xchg
ffreep
mov
jne
fstpl
out
movl
pop
mov
scas
pusha
sahf
out
les
ret
jno
scas
sbb
dec
jns
movsl
aas
daa
jp
je
inc
add
jmp
lahf
nop
pop
and
bnd
sbb
fidivs
movsb
mov
xchg
pop
pop
jae
sub
sbb
test
jp
xor
pop
cld
mov
fxch
adc
popf
adc
dec
daa
repz
fcmovnu
movsl
test
ds
fldcw
loopne
lea
rorb
xchg
pop
pop
jbe
ret
push
pushf
cmpsb
push
rclb
jbe
into
adc
test
inc
std
into
cs
por
test
add
test
adc
jp
into
fisubrs
leave
mov
dec
pop
lock
cmp
jg
arpl
mov
daa
fmuls
sbb
and
jae
sub
popa
pop
cmp
ds
inc
and
lea
cli
shll
popa
testb
divl
mov
pop
dec
std
movsl
outsl
mov
mov
pop
dec
xchg
das
inc
xchg
inc
in
adc
mov
xchg
or
pmaxub
shlb
jle
push
lds
movsb
and
pop
sub
out
push
sbbl
int
scas
iret
add
sbb
mov
jbe
inc
iret
xor
dec
out
test
arpl
aas
pop
lods
jp
dec
cmp
pop
scas
mov
push
mov
and
js
lea
cmp
ret
loopne
fisttps
pop
pop
push
xor
sbb
lcall
out
jmp
ss
cld
and
movsl
sub
int
sub
jecxz
sahf
pop
cmc
mov
sub
int3
js
aas
push
dec
repnz
test
pop
dec
fsubl
jp
test
push
aad
pop
int
lods
or
repnz
sbb
xlat
or
mov
call
cltd
or
call
or
sahf
dec
and
mov
dec
sbb
dec
mov
scas
xchg
lret
push
sahf
es
lock
cmp
sub
mov
cmpsb
push
ss
lahf
es
dec
loopne
inc
icebp
test
sub
jbe
dec
fdivl
sub
aaa
mov
sub
cmpsl
add
movsl
test
test
push
mov
inc
sub
popf
cld
sarl
call
insb
push
sbb
push
inc
push
mov
push
scas
sarb
ret
push
xchg
xchg
sbb
mov
repz
decb
js
fdivrs
inc
jns
fimuls
adcl
xchg
addr16
or
je
sahf
gs
testl
push
lret
repz
das
jo
mov
pop
loopne
add
out
mov
out
xor
add
mov
sub
in
insl
jo
in
data16
cmp
xchg
dec
xlat
mov
add
insb
adc
imul
pop
lret
and
fs
mov
push
cmpsb
jmp
mov
scas
cli
out
jne
inc
test
mov
addb
imul
ror
pusha
andb
mov
xchg
mov
xchg
sahf
xchg
dec
adc
dec
mov
insl
scas
inc
dec
outsb
sub
jp
out
add
fcompl
mov
sub
movsb
scas
rol
mov
rcrl
outsb
rcl
inc
sub
push
stos
inc
sub
stos
enter
jmp
inc
rcrb
xor
movsl
dec
test
lea
arpl
aaa
cmp
mov
push
xor
int3
mov
out
and
lods
push
push
jmp
push
dec
scas
jmp
cltd
popf
test
std
xchg
xorb
pop
test
pusha
cmpsb
jmp
stos
cmp
insl
pop
add
ret
je
jge
pop
and
inc
imul
push
jns
push
xchg
inc
mov
iret
inc
dec
popf
into
add
mov
xchg
imul
stc
imul
add
xor
mov
adc
test
jle
xchg
out
movsl
in
pop
mov
std
mov
ds
jl
sbb
sub
sub
xchg
das
imul
test
sub
mov
je
loop
jge
sub
scas
in
ja
jo
test
movsl
outsb
scas
inc
or
xor
push
push
daa
in
lods
cld
xchg
jge
adc
mov
inc
cltd
testb
push
xchg
shll
xchg
outsb
insb
fxch
test
ret
test
rorb
mov
dec
and
bound
out
push
jno
stc
pusha
inc
clc
ja
or
das
lcall
dec
lret
data16
lea
xchg
mov
jmp
push
mov
inc
jle
data16
fisubs
mov
and
enter
add
stc
es
jmp
das
mov
jmp
ror
or
mov
cmpsb
push
test
sbb
sbb
mov
jno
xchg
xchg
mov
ljmp
mov
js
test
or
ret
and
jp
jo
or
loope
push
jns
pushf
je
es
or
es
in
adc
xorb
dec
enter
pop
add
lret
inc
mov
adc
xchg
sbbl
cmc
and
mov
les
jmp
xchg
shl
ret
aam
repnz
inc
dec
add
test
push
outsl
sub
dec
pop
mov
jge
test
repz
push
outsb
popa
sub
movsb
jle
cmp
inc
je
inc
lret
mov
sub
pop
out
int
lret
stos
xor
push
xor
cmc
pop
dec
xchg
dec
sbb
xor
int
mov
mov
mov
negb
test
push
ret
ret
mov
mov
nop
lret
stc
rcll
sub
inc
push
popa
xor
mov
sti
out
add
pop
mov
insl
aaa
sbb
push
jae
cmp
pushf
es
fdivrs
scas
movsl
push
in
mov
repnz
mov
sub
jl
mov
fdivrp
jne
ret
pushf
adcb
das
mov
inc
mov
fimull
sbb
dec
jl
sar
pop
pop
adc
pop
mov
xor
push
cli
dec
fstl
push
mov
or
push
hlt
cwtl
jo
pop
ffree
sub
mov
mov
cld
ret
imul
rorl
stos
repnz
pop
shlb
dec
mov
adc
shll
arpl
test
or
les
imul
pop
inc
ficompl
int
std
xchg
mov
repz
fldenv
cmp
jo
mov
cs
or
bound
dec
push
bound
sbb
repz
out
sub
faddl
sbb
jecxz
mov
popl
shrb
jp
or
mov
test
and
jno
sbb
negb
aam
sub
xchg
outsl
movb
dec
inc
lret
or
test
sarb
int3
xor
sahf
mov
lahf
mov
fistl
in
mov
les
jne
jbe
push
jne
lret
mov
xor
sub
xor
jge
scas
pop
lret
shll
fwait
cli
hlt
or
or
mov
idivb
dec
cmp
mov
cs
xor
cmp
inc
cmp
addr16
popf
push
sub
xchg
jne
cmc
and
push
mov
jmp
xchg
lea
and
out
xor
insl
add
push
insb
mov
inc
stos
push
jne
jne
pop
pop
xchg
xchg
into
jno
cmp
std
test
clc
xor
orb
push
fistpll
mov
lret
cmp
mov
or
shll
out
mov
vpmovmskb
xor
mov
fwait
push
cmp
insb
idiv
add
adcb
mov
and
adc
int3
mov
push
sarb
sub
data16
mov
aaa
pop
test
out
cmp
movsl
cmpsl
mov
jnp
sub
pop
addb
arpl
adc
xor
test
fadds
imul
push
cltd
je
call
add
arpl
sub
scas
add
rolb
outsb
cmpsl
or
sbb
fs
int
ja
push
icebp
sti
mov
or
stc
clc
aad
imul
and
cwtl
xchg
xchg
dec
xchg
cmc
mov
fwait
scas
xor
test
repz
xor
dec
icebp
loopne
cmp
xchg
lahf
mov
mov
pop
mov
add
or
xorb
jno
pop
sub
dec
sub
jl
jge
test
pop
mov
dec
add
pop
dec
mov
stos
hlt
mov
int3
pop
xor
sbb
shll
xor
les
cli
imul
xchg
mov
sti
adc
dec
adcl
and
pop
add
adc
cmp
leave
lret
mov
in
cli
jge
aaa
repnz
mov
bound
or
daa
das
adc
popf
mov
cmp
and
add
ret
dec
xor
xor
and
std
int3
or
xchg
add
jb
mov
popl
scas
and
loope
shlb
jae
mov
arpl
sbb
mov
scas
add
in
cmpsl
mov
js
dec
push
stos
popl
clc
xor
loopne
std
mov
adc
sbb
mov
repz
sbb
pop
aad
xchg
jb
sub
scas
ret
inc
adc
leave
and
inc
inc
popf
xor
xchg
dec
rcrl
jnp
sahf
lods
jne
add
pop
jae
cmc
add
outsb
and
cmp
aas
mov
lret
push
or
push
xchg
sbb
jl
pusha
das
es
push
stos
and
sarb
scas
adc
aas
cwtl
dec
dec
jo
mov
cmp
dec
mov
inc
out
sbb
movsb
add
xchg
mov
push
test
push
mov
push
call
sarl
test
xchg
rorl
push
jge
push
scas
cmp
mov
int
insb
and
ja
push
mov
xchg
jb
inc
mov
adc
push
stc
push
sub
cltd
fwait
movsl
scas
adcl
pop
mov
lahf
repnz
rcll
or
and
dec
in
rcll
std
loop
xor
or
call
mov
push
or
sub
insb
lcall
sbb
mov
cli
int
sub
cmc
lahf
lret
ss
loopne
dec
and
insb
data16
ljmp
mov
out
push
and
fs
jle
push
pop
sbbl
push
movsl
aam
bnd
cmp
cltd
push
out
mov
repnz
dec
lret
cmpsb
int
lea
xor
mov
stos
pushf
inc
decl
mov
and
ret
pop
or
adc
dec
jmp
pop
les
add
mov
shl
iret
mov
test
jecxz
aad
mov
xchg
outsl
fildll
cld
adc
xor
add
xlat
xor
rolb
cmp
into
fldenv
int3
pop
adc
sbb
int
add
or
jl
cwtl
sahf
sub
int
dec
scas
popw
cmpsb
sub
lahf
xchg
mov
mov
jmp
aaa
push
lahf
rorl
xchg
dec
scas
mov
es
sub
mov
aaa
jo
int3
mov
add
pop
cmp
and
loope
popa
popa
fistpll
sub
sbb
or
pop
shll
in
pop
and
sarl
fdivrs
dec
push
js
rcrl
sub
jns
mov
jg
cmp
rcrl
lret
or
add
xor
inc
dec
hlt
aad
sbb
jae
repnz
mov
mov
fwait
push
xchg
adc
sbb
xor
hlt
scas
into
push
in
and
jbe
pop
arpl
hlt
mov
adc
xchg
add
mov
mov
fs
loopne
push
or
xlat
or
sti
into
dec
outsl
rorb
gs
sub
andb
movsb
sub
push
cmp
test
jge
cs
stos
sub
xor
sbb
dec
add
xchg
add
adc
aaa
lret
icebp
mov
test
xchg
loope
and
pop
add
imul
enter
clc
loop
jp
inc
push
fnstsw
and
xor
in
leave
jecxz
dec
insb
test
out
mov
insl
dec
sub
sbb
mov
and
pop
outsb
sbb
leave
sahf
lret
and
scas
in
sbb
cmpsb
add
ss
jecxz
and
out
daa
sub
jecxz
mov
dec
mov
mov
ror
push
loope
insl
inc
in
adc
sbb
cmp
cld
lds
sbb
mov
add
sub
divb
sbb
mov
xchg
dec
push
imul
jnp
cmp
repz
jl
loop
aad
pop
xchg
andl
lods
mov
stc
mov
cmpsb
push
sbb
cmpsl
push
call
or
adcb
out
sub
arpl
out
mov
out
orb
mov
jge
addr16
xchg
out
loop
ds
xchg
or
js
lock
in
test
gs
pop
inc
ds
sbbl
lret
faddl
dec
dec
repnz
sarb
and
daa
xchg
cmp
lods
jne
pop
push
mov
mov
jns
dec
jmp
fcmovne
outsl
xchg
data16
test
enter
leave
std
cld
xchg
jle
mov
jp
xor
ficomps
jbe
push
mov
mov
loope
push
xor
sbb
hlt
mov
jl
call
pop
inc
xchg
lret
clc
add
test
aad
pushf
and
movsl
stos
outsb
cli
push
adc
seto
dec
dec
push
xchg
inc
imul
mov
adc
mov
clc
inc
push
jg
pop
test
test
jl
mov
mov
ret
push
pop
xorb
shrb
sub
jno
xor
sbb
xor
inc
test
inc
xchg
jmp
cli
imul
cmp
test
xlat
or
mov
popl
mov
cmp
pop
mov
mov
clc
popf
sbb
push
pop
cs
stos
fcomps
inc
pop
sub
in
fcomps
inc
jmp
xor
or
jmp
repz
add
push
dec
call
adc
push
nop
xchg
test
mov
pop
mov
adc
jle
cmc
lock
xchg
push
dec
and
shll
mov
jo
push
fidivrs
test
cltd
loope
push
push
jb
push
mov
sub
stos
jge
cltd
lods
hlt
xchg
sub
sub
add
mov
xchg
mov
push
add
mov
mov
xor
ret
mov
icebp
xor
out
add
std
pop
sub
mov
inc
orl
sbb
inc
test
and
orb
xchg
insl
pop
dec
cmpsl
cmp
nop
mov
adc
mov
xlat
out
push
sbb
test
mov
xchg
push
clc
pop
pop
dec
cltd
lcall
cmpl
js
adc
inc
adc
daa
cmp
arpl
xlat
cmp
je
mov
sbb
movsl
in
xchg
mov
shll
jmp
sbb
stos
test
lcall
aas
pop
mov
push
fisubs
push
pop
and
mov
inc
mov
jl
sub
push
imul
inc
xchg
je
and
jg
icebp
inc
jns
repnz
aaa
adc
push
fsub
xchg
or
ljmp
cmp
outsb
aaa
jge
add
inc
roll
dec
push
or
loope
rcr
xchg
mov
or
loope
ds
mov
mov
pop
arpl
testl
outsl
pop
sub
int
movsb
out
add
dec
mov
stos
aam
mov
xor
out
lods
cmp
das
xor
clc
inc
and
or
xor
mov
xlat
cld
stos
les
push
or
mov
pop
mov
pop
lods
or
hlt
hlt
cmp
inc
cli
insl
ja
mov
mov
or
inc
addr16
movsb
dec
jns
leave
dec
ret
fiadds
sbb
pop
cmpsl
and
jecxz
rolb
enter
add
adc
xchg
movsl
daa
cmp
lfs
xchg
scas
adc
sub
subb
fmull
adc
xchg
mov
addb
or
outsb
jge
pop
fs
xor
mov
repz
iret
cwtl
repnz
cmpsb
xlat
jle
mov
shrb
rorb
cmp
or
rol
mov
xor
cs
mov
cmp
pop
imul
daa
ljmp
jmp
push
and
mov
sbb
add
popf
lods
pusha
rcrb
adc
fimull
cwtl
push
xor
and
es
mov
add
inc
rcll
flds
dec
loop
xchg
sbb
in
in
mov
xchg
fistpl
subb
fsubs
mov
out
and
dec
mov
mov
sbb
and
cmp
pusha
outsb
mov
pushf
es
icebp
xor
fwait
mov
fcomps
cmpsl
movsl
push
adc
test
ret
mov
dec
push
mov
sbb
xchg
xlat
notl
xlat
outsl
mov
inc
cmpb
and
sbb
int
or
mov
ss
jae
test
pusha
leave
adc
pop
inc
sbb
leave
push
in
in
mov
call
stc
nop
mov
fsub
scas
push
add
cli
xchg
scas
out
cmp
es
and
sub
mov
xor
into
cs
jp
and
xchg
push
lret
mov
movl
adc
push
inc
sbb
push
out
jmp
add
or
std
int
int3
add
stos
out
inc
sbb
jmp
jmp
in
push
repnz
outsb
push
jae
and
imull
mov
sbb
sub
outsb
xlat
repnz
pop
dec
out
test
cmp
inc
mov
add
lea
mov
pop
in
icebp
add
lods
mov
sbb
mov
loop
and
lret
aad
push
loope
rcl
mov
mov
or
dec
sub
int3
divb
dec
sbb
movsl
fnstenv
and
aam
and
jo
lods
out
lret
dec
mov
inc
add
imul
mov
call
ficoml
movsl
into
dec
adc
push
jnp
jb
pop
clc
jle
adc
dec
hlt
dec
call
push
sbb
mov
dec
inc
test
pusha
das
and
pop
dec
out
sub
clc
cmp
mov
pop
push
xchg
sub
adc
mov
jns
jg
lahf
insb
and
mov
ret
stos
cmc
pop
rcrl
sbb
out
outsb
xchg
pop
dec
pop
cld
sub
dec
mov
lret
in
pop
stos
mov
xchg
mov
daa
push
and
lods
cmp
js
insl
xchg
sbb
es
xchg
pop
les
cmp
lods
inc
enter
out
push
jecxz
xchg
push
xchg
out
out
cmp
lock
repnz
jle
dec
mov
add
dec
add
jmp
imul
repz
dec
jge
imul
xchg
push
hlt
dec
mov
scas
data16
nop
fprem
adc
fcmovbe
jl
inc
push
cmp
sti
mov
xor
cmpsb
insl
movsb
inc
mov
sub
jl
dec
daa
dec
jmp
icebp
dec
sbb
fnstcw
mov
adc
movsb
scas
fucom
ljmp
fldenv
mov
dec
iret
popa
xchg
pusha
jnp
jl
push
imul
lahf
aas
mov
inc
push
add
loop
loope
push
pop
sbb
xor
repz
sbb
or
sub
dec
fidivrs
movsl
mov
cmp
fbstp
std
test
fs
jo
cltd
rorl
push
sub
xor
ret
fstps
imul
xor
pop
or
inc
gs
mov
mov
inc
mov
or
inc
xchg
icebp
hlt
cmpsl
fisubrl
xor
out
push
xchg
ret
lods
sbb
sub
mov
test
in
lcall
addr16
std
fistps
fsubl
ds
jb
inc
jne
jmp
cmp
inc
push
xchg
mov
pop
inc
sbb
fs
into
test
mov
xlat
cli
aaa
mov
jne
aas
cmp
jbe
mov
es
cmpsb
push
idivl
mov
je
gs
scas
int3
xor
inc
inc
sbb
notb
dec
rol
scas
jno
or
out
aam
aas
lcall
cmpsb
cltd
out
das
aaa
pop
mov
mov
arpl
lcall
cltd
lds
push
fs
aaa
push
out
mov
outsb
fisubl
pop
push
out
std
rcrb
ficoml
cs
mov
fsubl
and
rcll
mov
mov
jno
cli
mov
mov
out
stos
fistpl
jnp
rolb
sahf
push
dec
dec
faddl
cltd
ret
cli
mov
xchg
out
ds
in
mov
jnp
mov
dec
sbb
movsl
xorb
fisubrs
in
xor
push
pop
xlat
shr
sbb
adc
aad
fwait
inc
scas
jns
xor
adc
cmc
adc
mov
data16
inc
pop
mov
fs
cs
push
rorl
add
sub
shlb
iret
sahf
lret
pop
mov
push
outsl
fdivs
mov
jle
add
xor
je
jae
inc
call
push
ljmp
xchg
sub
out
or
jle
into
xor
adc
cwtl
rclb
loopne
mov
int3
lods
addr16
push
add
iret
push
mov
adc
loope
stos
loopne
mov
inc
xchg
jge
add
xchg
test
inc
jns,pn
stos
stos
mov
repnz
push
mov
fs
scas
out
outsb
add
sbb
inc
cmp
lret
repnz
xor
stos
mov
nop
pop
mov
mov
dec
ret
pop
push
fdiv
mov
mov
rol
lcall
ja
in
lock
sbb
jb,pt
jmp
in
inc
inc
ja
dec
jns
mov
adcb
addl
out
sbb
pushf
or
loope
xchg
adc
mov
nop
xor
pop
xchg
les
sbb
mov
frstor
adcb
jmp
imul
aas
repz
fisttpll
int
pop
fsubrp
mov
mov
push
shlb
aad
scas
adc
mov
test
or
adc
jge
add
hlt
iret
sarl
cmpsl
sub
inc
leave
sbb
addr16
and
dec
popa
xor
cmp
push
adc
or
mov
into
lretw
repnz
xchg
xor
enter
cmp
jb
ficoms
sbb
clc
test
dec
sbbl
push
mov
pop
jmp
xor
nop
mov
or
mov
addr16
faddp
cmp
in
push
test
stos
ljmp
movl
out
js
adc
pop
jno
sbb
out
ds
pushf
push
sub
dec
frstor
pop
xor
mov
fs
test
mov
jae
push
std
pop
sub
int
outsb
daa
ret
adc
sub
add
enter
xor
push
in
sbb
jbe
inc
dec
sub
fmull
push
and
popa
cmp
adc
imul
mov
test
aaa
mov
loope
loope
int3
xchg
out
adcb
stc
jnp
cmp
ret
cmc
push
mov
stos
sub
stc
xor
push
or
in
mov
inc
cmp
push
ret
lahf
inc
shrb
add
popa
test
sub
aas
mov
shrl
test
and
arpl
push
dec
rolb
cmp
je
and
push
dec
imul
loop
lret
dec
loope
popf
pop
es
mov
sub
push
sbb
pop
inc
jb
xchg
repz
mov
lods
and
mov
or
insl
dec
jge
xchg
lahf
sahf
add
aaa
adc
sti
and
jg
in
push
leave
jne
xor
or
test
xor
sti
stc
xor
ljmp
mov
jnp
nop
push
lcall
icebp
jle
cwtl
pop
adc
mov
cmpsl
pop
movsl
outsb
ds
dec
sub
adc
neg
push
test
xchg
push
push
lods
out
xor
push
xor
insb
fs
fsub
enter
push
outsl
xchg
test
push
mov
mov
or
nop
or
cmpb
jg
cltd
lods
jle
sbb
xor
fisubs
dec
stos
in
mov
ljmp
dec
push
cli
daa
les
fadd
jbe
xor
enter
in
jle
pop
rcr
sti
hlt
test
insb
je
push
push
mov
and
cmpsl
rol
mov
sbb
loop
push
mov
idivb
push
dec
cmpsb
push
shlb
aaa
push
add
adc
jge
nop
lds
aas
mov
jne
cli
jl
imul
and
stc
sub
sbb
loop
jl
or
push
cmp
cmp
sbb
ds
test
sub
mov
mov
push
mov
or
push
pop
enter
sbb
jg
pop
inc
xchg
inc
nop
jle
testb
add
adc
loop
mov
ds
cmpsl
cmp
lea
pop
insl
pop
test
push
xor
pop
inc
mov
clc
outsb
mov
mov
out
adc
inc
daa
sbb
out
pop
ljmp
imul
mov
mov
cld
xchg
mov
pop
push
aas
lods
add
sbb
xor
sbb
jle
das
lret
fs
sbb
or
cmc
and
in
jbe
aas
stc
out
call
dec
lret
lock
data16
adc
cmp
add
mov
lods
adc
std
mov
iret
shlb
in
sbbb
adc
jp
mov
dec
std
into
nop
stos
inc
ds
xor
push
shrl
xchg
inc
inc
push
scas
aad
add
dec
scas
rorl
pop
adc
jl
cld
daa
bound
push
jecxz
dec
hlt
clc
inc
inc
add
shll
aaa
mov
pop
inc
jg
pop
js
sbb
mov
shl
popa
mov
scas
mov
aam
ja
addr16
add
mov
cmp
cmc
xor
fcmovb
negb
lcall
sbb
int
or
push
hlt
int
jno
xchg
or
xor
clc
js
jnp
adc
push
dec
add
stc
sbb
daa
shll
cmp
mov
lret
pop
insb
cmc
out
xlat
cmp
insl
xchg
push
dec
test
div
test
mov
test
push
movsb
sbb
sbb
xchg
bound
cmp
mov
inc
imulb
dec
inc
fdivs
adc
aaa
mov
enter
sbb
ljmp
pop
sbb
add
fcoms
mov
ljmp
ljmp
jns
sbb
aaa
cli
clc
cmpb
push
mov
inc
adc
cmpsb
inc
or
lret
aam
cwtl
xor
gs
fwait
and
lea
mov
xchg
ret
push
jbe
ja
jb
mov
sub
fs
jae
jecxz
sbb
loop
inc
mov
dec
adc
jle
je
in
sti
pop
cltd
lcall
push
sub
mov
data16
test
bts
mov
int3
inc
xchg
repz
lret
jo
sbb
mov
pop
iret
popa
sub
out
stos
shlb
hlt
sbb
repz
icebp
loopne
sbb
mov
popf
ljmp
lret
std
icebp
scas
mov
pop
cs
xchg
fisubl
pop
cmp
inc
and
jo
and
loop
push
pop
push
mov
enter
popf
jae
mov
and
nop
adc
and
mov
clc
sub
test
aaa
out
jl
jnp
lret
lds
leave
jns
push
int3
rclb
rclb
call
or
js
add
test
adc
dec
jnp
xchg
ficoml
test
sbb
mov
jmp
in
insl
and
out
adc
sub
into
sub
jmp
loope
and
dec
mov
insl
pop
dec
cmc
push
movsb
mov
pushf
cld
mov
pop
outsb
mov
push
sub
insb
cltd
add
das
jno
inc
fmuls
imul
mov
add
lahf
rol
xchg
inc
adc
jns
jo
aaa
add
cltd
jecxz
mov
add
pusha
and
inc
push
jbe
int3
iret
fwait
jmp
test
mov
jle
cmovl
lods
in
imul
sarb
fisubs
mov
mov
scas
movsl
pop
adc
data16
jae
mov
mov
or
dec
test
xchg
inc
in
test
popa
loopne
sarl
fisttpl
cltd
or
rcrl
xchg
sub
cmp
mov
xchg
and
gs
sarl
movsb
je
iret
push
insl
xor
jecxz
addr16
lods
test
fwait
inc
or
push
iret
push
mov
stc
and
mov
push
cltd
push
loope
jno
enter
and
sub
push
ds
inc
fists
adc
mov
movsb
adc
xchg
push
sub
push
inc
inc
cmc
jle
inc
shrl
into
sbb
adc
sub
nop
and
enter
leave
ret
xor
dec
sti
int
push
xchg
mov
out
adc
and
in
mov
mov
outsl
add
shlb
test
ret
in
mov
ror
xor
and
push
ds
xchg
insl
mov
pop
dec
push
jb
ja
dec
sub
into
aad
insl
push
cmp
add
sbb
hlt
cmpsl
dec
mov
out
add
mov
cmc
mov
pop
xor
push
sbb
xor
aas
add
cmp
dec
jns
stos
push
or
or
sub
cmp
mov
sub
pop
dec
adc
adc
mov
lods
sub
ds
popf
hlt
js
mov
xchg
mov
in
pop
inc
scas
js
scas
mov
lds
int
icebp
and
js
lahf
insl
dec
std
bound
push
stos
ljmp
push
mov
mov
scas
mov
fistps
and
scas
nop
leave
pop
loop
xor
sbb
adc
test
mov
sbb
mov
xchg
jmp
test
cmp
fisubl
add
loopne
hlt
mov
cmp
cmp
push
push
rorb
ret
sub
mov
adc
movsb
add
or
dec
loope
hlt
icebp
pushf
pop
into
out
pop
mov
out
mov
lret
pop
lea
aaa
or
dec
xor
jle
call
leave
adc
xor
insb
inc
fimuls
xor
int
fistl
or
in
mov
dec
add
push
pop
enter
cmpsb
xchg
pop
cli
pop
icebp
into
push
adc
in
popf
jmp
dec
daa
mov
adc
call
adc
push
imul
je
dec
jbe
cmp
xchg
std
pushf
push
mov
jmp
dec
sub
hlt
mov
stos
clc
je
pop
inc
je
xchg
or
cmp
push
stos
or
dec
push
inc
lret
mov
or
or
shr
inc
or
mov
es
mov
xchg
mov
inc
dec
enter
aad
std
inc
movsl
sahf
dec
push
pop
mov
sub
inc
lcall
hlt
sbb
shlb
mov
dec
addr16
les
ficompl
pop
jbe
test
mov
ret
in
adc
insb
dec
int3
mov
mov
sbb
mov
cmp
das
mov
and
mov
js
push
xchg
mov
xchg
adc
inc
mov
cli
cmp
sbb
adc
arpl
push
fdivl
pop
cmc
mov
dec
pusha
or
mov
xorb
fwait
call
sbb
sbb
add
cli
inc
fdivl
mov
push
test
pop
subl
jmp
add
int3
aas
jecxz
jae
push
mov
rorb
mov
arpl
inc
inc
pop
adc
dec
jmp
or
neg
insb
in
cmpsb
sub
rol
int
inc
adc
xchg
sub
xor
mov
pushf
dec
sub
fldenv
add
mov
xchg
sbb
jp
mov
inc
insl
test
test
add
adc
cld
les
lahf
xor
mov
cmp
jge
or
push
stc
mov
and
jae
dec
ret
addr16
xor
and
leave
scas
mov
in
mov
adc
lods
pusha
push
nop
in
fcmovnbe
hlt
jle
stc
jae
cwtl
jg
cmpsb
and
xor
fs
shrb
cmp
cmpl
stc
mull
or
jle
sub
ja
fnstcw
int3
fs
push
jge
test
add
sbb
pop
or
cmpsl
gs
or
pop
push
push
fistpll
pusha
mov
lods
pop
out
inc
out
loope
add
out
sub
push
mov
dec
and
call
mov
mov
push
out
int3
jnp
add
testb
repnz
pop
pop
pop
sarb
jmp
inc
rorb
addr16
push
testl
das
scas
or
jae
mov
pushf
sub
adc
sub
int
popf
int3
jb
push
xchg
scas
push
scas
aam
in
pop
sub
stos
push
movsb
push
push
mov
fs
xchg
out
sbb
adc
mov
push
aam
mov
jg
pop
std
and
mov
shrb
test
repz
lds
icebp
jmp
cmpsb
stc
daa
shll
iret
lahf
sub
orl
inc
xchg
aad
das
leave
push
mov
sbbl
sbb
int
gs
negb
mov
das
imulb
or
pop
shlb
and
mov
jg
pop
and
pop
pop
add
shr
pop
out
xchg
nop
scas
mov
outsb
dec
push
movsb
xchg
jns
or
mov
addl
xlat
popa
jle
and
aaa
mov
jne
fisubrl
and
js
gs
cmp
lret
in
jmp
mov
cmc
rcr
shlb
adc
lret
xor
sahf
test
mov
popf
xchg
cmp
push
push
cltd
daa
sti
xchg
jno
jnp
mov
insl
addr16
lret
sub
push
push
push
mov
sbb
sub
sbb
shrl
cmp
or
lcall
bound
sub
add
xchg
pushf
repnz
in
fldenv
das
inc
lcall
cmpsl
cmc
pop
sbbl
cmp
adc
les
bound
test
ja
pop
adc
adc
ljmp
push
dec
jg
lahf
popf
movsl
jae
pop
cmp
addr16
xlat
or
jbe
fs
pop
cmp
push
cmpsl
add
fdivrs
xlat
lcall
fldt
and
mov
mov
pop
cmpl
pusha
decb
xchg
xchg
sahf
es
aad
inc
jb
jno
push
out
fcoms
inc
mov
and
sbb
ja
ret
sbb
dec
scas
fmull
enter
xchg
fcomip
add
lock
in
ret
popa
cmp
xor
cmp
int3
mov
xchg
mov
fimull
loop
vpshlw
jge
aaa
rolb
cmpsb
cmp
fs
lcall
mov
mov
scas
pop
gs
sbb
imul
xor
xor
cmpl
dec
xchg
sbb
cltd
mov
mov
adc
scas
and
fsts
and
xchg
out
pop
in
xchg
dec
loopne
mov
jmp
lds
push
outsb
or
xor
push
fistps
cmpb
and
inc
imul
xchg
lods
daa
adc
sahf
push
xor
xchg
int
std
cmp
std
daa
enter
push
popf
pop
insb
cwtl
popa
jecxz
mov
push
sahf
test
pop
lds
adc
aaa
pop
xor
imul
rcrb
sub
dec
sub
or
out
adc
std
sbb
call
xor
arpl
push
mov
fwait
in
jp
xchg
ds
mov
dec
syscall
aas
lahf
add
stos
add
rcrb
push
dec
pusha
iret
je
sub
nop
inc
lock
mov
loope
push
outsl
and
pop
addr16
cli
stos
mov
dec
push
xorl
mov
mov
push
out
or
outsb
insb
sub
or
jns
pop
pop
fsubr
jo
arpl
bound
mov
add
iret
push
mov
push
and
sbb
shlb
mov
shlb
es
cmp
xchg
pop
shrb
scas
xchg
add
aaa
mov
ret
jbe
add
jmp
cmp
sbb
lock
movsl
dec
nop
insl
icebp
pop
std
add
push
shrl
rclb
xchg
fcoms
aas
cmpsl
push
mov
jb
mov
adc
dec
vorps
sbbl
mov
mov
in
add
sub
in
in
mov
ret
hlt
in
insl
dec
adc
inc
dec
arpl
mov
xchg
jecxz
or
fwait
adc
xchg
xlat
popf
sbb
in
adc
pushf
out
lds
int3
enter
dec
cli
xchg
and
test
mov
mov
cwtl
mov
jnp
mov
shlb
cmpsb
xchg
push
das
pop
pop
mov
and
xor
pop
or
in
jp
lret
repnz
jl
lcall
clc
loopne
pop
mov
cmpsl
xor
push
xor
pop
mov
xchg
mov
mov
aam
repnz
stos
dec
pop
add
xor
fcmove
bswap
mov
jl
mov
cltd
sub
sbb
mov
xchg
sbb
dec
fiaddl
idivb
shl
sbbl
adc
sub
lcall
jno
or
in
cli
int
je
addl
adc
push
jne
xchg
mov
adc
cld
out
lods
mov
cmp
aaa
dec
mov
xchg
jnp
into
loope
xchg
fiaddl
scas
shlb
or
and
shl
xchg
fmull
push
mov
in
adc
pop
dec
orl
es
pop
out
ficoml
icebp
std
mov
inc
jg
and
imul
daa
cltd
mov
shr
mov
mov
adc
cmp
insl
push
ret
lret
mov
out
mov
aam
lcall
aad
inc
mov
jg
or
adc
bound
xchg
int3
mov
add
xor
push
or
xchg
fldcw
pop
ror
add
cs
sahf
add
sbb
idivl
push
jno
icebp
mov
stos
xchg
mov
fcmovb
js
push
std
mov
movsb
or
addr16
lret
dec
movsb
xchg
sbb
dec
movsl
mov
cmp
mov
rclb
cmpsl
mov
fwait
xchg
int3
jmp
xor
dec
xchg
and
sub
call
dec
pushf
push
iret
out
shl
push
xrelease
jnp
mov
xchg
imul
pop
addl
es
push
sub
push
inc
jmp
pop
xor
test
test
inc
je
mov
imul
into
fnstcw
insl
pop
orb
mov
ficomps
outsb
mov
adc
mov
pushf
jg
adc
and
xchg
cli
or
mov
adc
addr16
pop
ret
cmpsb
xorl
les
xor
mov
xchg
pop
xchg
stos
mov
out
jg
xchg
adcb
dec
mov
popa
ss
push
mov
aas
int3
sub
sti
adc
filds
xchg
push
dec
sbbl
mov
test
or
dec
mov
subl
aas
out
xchg
fmull
cld
stos
outsb
inc
popf
mov
mov
xchg
sbb
mov
xchg
lahf
shlb
and
lods
out
fisttps
ljmp
mov
ljmp
or
add
ds
xlat
adc
lock
xor
sbb
outsl
mov
std
or
mov
insl
mov
add
aaa
clc
repnz
mov
and
loopne
inc
or
inc
aaa
mov
vsubps
sti
cmpsl
mov
adc
out
test
jbe
fprem1
ret
test
in
popf
nop
out
mov
mov
push
ret
addl
jle
or
rcrb
aam
sub
mov
pop
rol
aas
imul
xchg
in
popf
clc
mov
cmp
out
mov
push
jae
push
rorl
js
int3
add
cltd
jmp
mov
xor
and
pusha
mov
stos
xchg
sub
loopne
and
jmp
outsl
repz
lret
cmc
aas
mov
stos
push
or
add
pop
sti
jo
cmp
icebp
xchg
mov
ja
sub
dec
insb
arpl
insl
cmc
add
xchg
insl
cld
bound
ret
imul
bswap
call
rorb
movzwl
xor
dec
lods
add
push
xor
cmp
in
xchg
dec
or
or
jle
or
pop
fsubrl
sub
mov
stos
push
fstl
sub
or
jne
lods
pop
movsl
jecxz
leave
mov
push
aas
divl
mov
dec
pop
mov
mov
mov
sbb
outsb
or
shrb
ret
scas
test
cmp
pop
jno
inc
mov
cltd
imulb
fld1
mov
pop
adc
arpl
add
movsl
movsb
mov
bnd
addr16
push
jno
xor
add
loope
mov
clc
clc
jmp
loope
mov
out
and
cmpsb
xchg
imul
shlb
mov
repz
movl
jnp
aad
iret
inc
shrb
pop
jp
in
mov
sub
pop
mov
out
push
sbb
rolb
push
xor
enter
movzbl
jmp
in
cmp
ss
sbb
push
lods
mov
and
fnstenv
dec
insl
dec
test
aas
add
or
and
cmp
add
push
mov
imul
stc
adc
dec
adc
adc
dec
cmp
nop
stc
jmp
shlb
adc
or
aam
pop
into
out
mov
inc
test
std
or
cmp
loope
mov
clc
in
sub
in
ds
sub
add
mov
movsb
in
pop
iret
mov
stc
stos
cld
sub
xor
or
dec
std
pop
sbb
aam
js
out
dec
jns
xchg
je
popa
icebp
jns
testb
push
icebp
fs
mov
pop
jns
push
mov
jl
push
adc
rorb
rclb
out
cmp
xor
leave
jle
gs
dec
xlat
inc
ja
testl
nop
sub
hlt
loop
xor
sbb
mov
push
sub
js
lods
mov
jmp
mov
insb
xchg
scas
aam
sahf
pushl
outsb
mov
lret
testl
mov
cli
mov
mov
sub
fnstenv
mov
mov
push
mov
hlt
jae
lcall
xchg
lods
fiadds
cmp
mov
insb
sahf
sbb
push
dec
lahf
movb
ss
or
xchg
or
push
pop
repz
movsl
movq
stos
lods
out
dec
inc
inc
adc
and
insb
push
popa
adc
ljmp
imul
push
add
imul
negb
mov
xchg
ljmp
lcall
dec
jp
cmpsb
mov
leave
addr16
adc
xchg
ljmp
inc
mov
es
roll
push
imul
notl
idivb
jge
xor
repz
fwait
xchg
outsb
clc
cmp
add
cltd
sbbl
iret
add
jb
xor
rorl
xchg
lahf
out
out
nop
or
xor
dec
repz
push
xchg
shr
push
and
pop
mov
dec
std
imul
jb
xlat
ret
mov
int3
das
jecxz
dec
xchg
mov
test
xor
sbb
aaa
sub
push
subl
dec
mov
adc
aaa
repnz
stos
int3
movsl
pop
push
mov
inc
inc
xor
jae
and
shll
jae
or
nop
jle
inc
push
sbb
out
loope
rcr
xlat
xor
pop
cli
in
jbe
arpl
dec
xlat
leave
sub
inc
add
outsb
inc
popf
push
daa
xchg
int
gs
jmp
inc
adc
testb
je
int3
adc
decb
adc
jno
ret
inc
int3
cs
imul
pop
or
daa
sbb
hlt
cs
imul
fwait
cmp
adc
popa
jno
or
mov
mov
lods
mov
movsl
addr16
popf
jge
ret
adc
jg
inc
or
xchg
imul
sub
cli
push
and
push
mov
cmp
sti
push
imul
mov
lds
jp
stos
xorb
xor
addr16
ljmp
enterw
cs
xchg
mov
outsb
push
sbb
sti
or
add
jmp
ret
fwait
shl
xor
jns
leave
movb
lea
xchg
data16
por
cmpsl
jbe
in
lret
mov
pop
and
sub
fimuls
mov
les
shll
cmp
mov
cmp
or
add
sub
push
adc
mov
jae
shrl
mov
sub
mov
mov
dec
mov
pop
sub
dec
leave
cmpsl
ror
les
ljmp
stos
cld
sahf
xchg
add
mov
or
rclb
xor
stos
mov
xor
fnstsw
dec
arpl
pop
loop
sbb
or
test
mov
jns
loope
leave
mov
lods
fs
shr
out
mov
push
add
fldcw
rcl
pop
shlb
adc
mov
negb
rorl
push
sub
jno
mov
mov
push
test
xor
popf
mov
idivl
jno
mov
mov
movsl
or
adc
fistpll
pop
mov
int3
aad
pop
pop
cmp
mov
add
movsl
dec
push
and
cs
or
push
out
ret
js
mov
pop
divb
mov
push
inc
mul
bound
andl
popf
sbb
xor
ret
es
jle
adc
or
std
jmp
mov
inc
mov
add
xor
xchg
xacquire
mov
push
xor
push
xchg
cmp
xchg
mov
rcll
scas
and
ja
iret
inc
add
xor
daa
xchg
mov
pop
pop
cmp
les
shl
aad
popa
mov
inc
mov
nop
imul
daa
push
mov
mov
scas
cmpb
cltd
test
jmp
int3
fsubr
hlt
and
aad
stos
pushf
lahf
ret
push
add
push
arpl
mov
pop
fucom
cli
xchg
gs
jnp
cmp
stos
aas
cmc
outsb
adc
jnp
aas
add
cmp
inc
mov
sub
mov
das
cmpb
sahf
pop
jg
pop
addr16
ds
dec
leave
iret
loop
sub
add
cmp
push
imul
inc
pushf
repz
insl
popa
sbb
mov
shr
js
pop
pop
daa
push
jae
inc
aad
aas
es
and
pop
in
out
and
xchg
cmp
jns
lock
jae
adc
mov
jp
mov
les
shlb
xor
push
push
and
aas
pop
or
xchg
insb
push
popa
out
sahf
mov
cvttps2pi
mov
mov
xor
mov
mov
ja
jo
ficomps
fucom
or
or
dec
aas
inc
jo
lea
jmp
loop
push
jmp
cmp
push
ds
movsl
jmp
inc
ds
aaa
xor
loopne
or
ret
negb
imul
mov
sbb
pop
imul
cli
push
mov
pop
adc
cmp
fsubp
jns
mov
sysret
add
xchg
push
push
sub
push
mov
pop
push
mov
adc
ja
leave
cmpsb
out
add
int3
inc
xchg
sub
arpl
sbb
sub
sub
dec
jle
fadds
mov
mov
adc
movsl
fimull
ja
jno
lcall
clc
add
lret
aaa
jae
push
mov
xor
dec
cmp
stos
cli
shl
loope
dec
cmp
std
gs
pushf
pop
test
ret
cmp
jbe
mov
es
and
dec
movsb
pop
xchg
sub
lock
jnp
mov
inc
outsl
jns
arpl
rorb
test
into
or
fldenv
mov
int
xchg
cmp
sahf
jecxz
push
sbb
ja
jae
in
mov
jo
inc
hlt
sub
cmp
sarl
inc
sbbb
fwait
fs
mov
nop
pop
push
jle
inc
ds
insl
stos
nop
push
cmpsb
cmp
addb
cmp
push
lret
push
jp
ret
lods
pop
cmp
mov
jecxz
stc
imul
jbe
push
sbb
test
jne
and
scas
xchg
nop
and
loopne
mov
aas
sub
jbe
mov
and
inc
xchg
push
jle
gs
inc
cltd
clc
outsl
lret
cmp
test
negb
jae
fs
fxch
nopl
pushf
push
and
repz
aas
sbb
in
and
fsub
mov
mov
and
push
cmp
imul
cwtl
inc
dec
mov
pop
sbb
jmp
popa
mov
mov
rcrb
adc
insb
xor
insl
push
das
das
cli
adcl
push
arpl
adc
jb
imul
je
pop
dec
pop
jg
dec
aam
jmp
and
push
mov
or
clc
mov
hlt
das
or
test
xchg
jge
iret
pop
xor
aam
mov
movb
mov
jg
jl
jp
lods
ret
jno
fisttpll
aad
shl
sub
sahf
stc
into
and
movsb
adc
dec
mov
cmp
mov
mov
out
icebp
xchg
cmp
pop
jae
mov
ret
cmc
push
pop
repnz
shll
sbb
and
fwait
shll
lahf
or
xchg
xor
insb
and
ss
mov
push
repz
outsb
addl
dec
cmp
and
lds
mov
fmuls
xor
cltd
inc
sub
inc
dec
mov
push
std
rolb
jmp
int
inc
push
sbb
cmp
dec
int3
subps
cmp
sbb
outsl
pusha
add
ficompl
mov
imul
out
leave
add
lahf
mov
arpl
xor
adc
in
add
inc
rcll
cmc
adc
lock
andb
xchg
je
xchg
mov
cmpsb
rcrl
ss
out
popa
out
scas
ss
repz
sbb
mov
fidivrs
notl
or
movsb
pop
enter
mov
sbb
test
iret
add
pop
cmc
cli
jns
cmp
nop
cli
lcall
arpl
aad
pop
dec
pop
out
sti
pop
enter
repnz
mov
or
pop
mov
test
xorl
insb
jg
es
fstpt
sbb
xchg
std
push
xor
dec
sub
jbe,pt
ret
lds
adc
test
jne
mov
cmc
push
int3
arpl
pop
adc
or
inc
xlat
aaa
in
inc
fidivs
adc
dec
stc
outsb
clc
lock
jno
xor
add
iret
lahf
aaa
mov
lods
jbe
inc
insb
mov
jbe
sbb
mov
imulb
out
jl,pn
in
mov
pop
push
fwait
mov
mov
in
adc
adc
adc
push
lods
pop
xor
cli
jns
negl
mov
dec
jle
fwait
enter
mulb
loopne
push
insl
mov
sbb
sub
xchg
jp
sti
pop
mov
loopne
stos
sar
lret
jae
push
cli
xchg
addr16
into
insb
leave
pop
mov
cmpb
hlt
ret
loop
in
leave
testl
inc
pushf
adc
xchg
mov
jae
cmp
jecxz
xchg
aad
test
xchg
pop
push
push
or
push
lret
mov
ljmp
sbb
xchg
pop
pop
repz
jbe
jle
nop
insl
add
and
cmp
repnz
mov
lds
in
fnstcw
mov
or
or
lea
jge
mov
dec
enter
data16
fstp
jge
repnz
cs
in
pop
mov
pop
push
adc
and
inc
test
or
cmp
leave
lahf
insl
dec
ja
loop
push
cmp
aam
imul
gs
pusha
adcl
aaa
jae
fsubrp
in
add
jmp
into
pop
pusha
lret
xlat
stos
mov
mov
fcoml
cmp
popa
xchg
jbe
clc
aad
addr16
lods
sub
cmp
data16
popf
lods
jb
mov
cmpsb
fstpl
sti
arpl
fucom
jae
jmp
and
add
dec
dec
pop
ret
mov
xchg
ret
fabs
test
inc
fwait
mov
or
into
lret
push
ret
sarl
push
inc
sub
add
pop
adc
les
pop
add
daa
scas
add
push
push
sub
push
dec
mov
adc
arpl
insl
je
addr16
shl
xchg
ss
sub
cmc
cmp
mov
cmp
jp
xor
mov
xchg
mov
mov
and
sub
pop
fnstsw
sub
rcl
xchg
dec
outsl
dec
mov
xchg
inc
outsb
add
mov
negb
jnp
enter
imul
pop
je
lea
stc
pop
jmp
pop
pop
pop
mov
testb
jmp
in
cmc
sub
mov
arpl
fsubrs
or
int3
mov
mov
pop
adc
add
loope
sub
dec
xor
and
sbb
lret
iret
push
iret
cmpsl
pop
sbb
addr16
mov
cmp
sarl
jmp
push
outsl
ret
mov
clc
clc
cli
sub
js
ljmp
sbb
mov
es
jg
cmc
inc
fistpl
es
seta
repnz
js
or
fsubp
je
call
or
bound
or
dec
xor
push
push
int3
xor
sbb
stc
add
fldcw
sub
push
mov
call
xchg
push
jmp
or
fsubs
mov
push
pop
push
out
cmp
dec
pushw
add
xor
mov
lods
outsb
mov
inc
xchg
aaa
inc
add
or
or
movsb
add
cmp
sbb
into
stos
xlat
fwait
sbb
mov
push
cmp
leave
inc
mov
loopne
loope
call
aas
insl
mov
cli
test
iret
insl
sub
out
hlt
lret
or
lcall
push
xchg
adc
mov
loop
jne
jb
pop
lret
xor
loop
mov
jl
movsl
xor
fisubrl
dec
ljmp
call
inc
addb
jnp
push
loope
rcll
or
pop
shlb
int3
xor
testl
xchg
mov
cs
or
xor
push
mov
fs
daa
jne
aam
movsb
and
pop
je
je
jg
sbb
adc
arpl
test
or
pop
ljmp
fidivrl
or
pop
mov
push
mov
dec
gs
push
test
sub
dec
mov
pop
xchg
mov
aas
and
push
aad
fwait
das
sub
mov
notb
test
sub
insl
pop
lea
lret
ss
mov
in
fistpll
out
push
mov
or
out
daa
sbb
ret
stos
sub
push
inc
imul
jecxz
das
inc
xchg
fldt
mov
ret
jns
adc
push
adc
mov
mov
push
pop
enter
xlat
jbe
clc
push
js
sahf
push
jno
adc
dec
pop
add
xchg
insl
aaa
out
mov
jl
adc
sbb
pop
cmp
add
mov
stos
insb
sbb
push
out
cli
adc
inc
and
fists
push
addl
adc
dec
ljmp
and
shl
and
mov
xor
dec
in
sub
sub
sbb
repnz
in
jge
jecxz
rcl
mov
xorl
pop
jne
rcll
xor
int
jb
push
dec
mov
mov
adc
cwtl
lret
mov
outsl
mov
loope
or
cmp
adc
out
hlt
pop
xchg
decb
lahf
mov
or
mov
jp
pop
pop
call
adc
fstl
shll
pop
xor
pop
jno
sbb
mov
movsl
mov
sub
sti
jns
and
or
mov
aas
popa
xor
in
sbb
sbb
jb
sti
pop
xor
je
adc
jl
cmc
loopne
aaa
sbb
rcrb
mov
mov
repnz
stos
fisubrl
mov
fwait
aas
mov
loope
insl
push
jle
and
add
hlt
inc
dec
lds
add
add
mov
inc
fnstsw
push
outsb
inc
inc
mov
inc
xor
mov
mov
lcall
lods
scas
add
mov
jae
mov
push
lods
cs
lcall
jns
cltd
mov
cld
jo
outsl
xlat
scas
ss
fildl
add
inc
repnz
xchg
lods
sub
rcrb
sub
jl
fistpll
add
sti
inc
ss
jno
push
popa
aam
push
scas
mov
dec
mov
jb
jge
xchg
or
mov
lahf
dec
mov
adc
mov
and
xor
arpl
bound
add
and
xchg
test
cmp
lcall
xchg
in
hlt
lods
nop
inc
mov
inc
sbb
or
xchg
xor
sbb
cltd
hlt
jmp
je
mov
ss
sti
xor
push
add
popa
cmp
mov
dec
and
nop
insb
jb
sbb
lods
pop
in
imulb
mov
outsb
cmpsl
xchg
movsl
sarb
dec
adc
dec
stc
stos
sbb
orb
movaps
shll
aaa
pushf
lret
sbb
xchg
sub
movsl
dec
pop
adc
inc
dec
dec
mov
jle
xor
subl
int3
repnz
pop
mov
mov
ret
pop
and
popf
movsb
iret
sbb
jb
jns
xchg
arpl
imul
xchg
jo
loope
ret
jp
pop
rorb
mov
push
mov
push
jae
in
repnz
xchg
jb
cmpsb
in
or
xchg
cmpsb
rcrl
ja
mov
lahf
mov
inc
adc
cmp
movsl
sub
popf
pop
das
test
jge
add
movl
mov
stos
out
xchg
fstl
gs
inc
and
xor
ja
cmp
mov
push
add
out
mov
mov
and
iret
test
mov
popa
mov
int
movsb
popf
pop
js
xchg
mov
popa
imul
and
cmpsb
mov
movsl
push
loop
out
inc
dec
das
sbb
sbb
imul
or
cmp
or
mov
lock
pop
and
mov
add
flds
scas
cmp
xchg
sub
dec
or
mov
xor
cmp
fistps
out
jb
push
dec
mov
push
shr
inc
jne
pop
push
jno
cli
push
cmp
js
mov
mov
test
xorb
inc
cmp
adc
subl
sbb
insb
or
xchg
mov
push
mov
into
in
mov
add
lock
lret
and
cmp
fwait
enter
out
mov
sbb
in
fnsave
leave
xchg
xchg
loopne
adc
dec
stc
xchg
or
imull
push
mov
add
fnstsw
xor
mov
gs
xlat
cmp
es
xchg
push
pushf
jns
push
dec
jns
lret
int
lods
cmp
sub
fiaddl
mov
out
out
xor
sub
or
imul
pop
inc
sbb
inc
mov
or
in
mov
mov
roll
imul
mov
std
push
mov
cmpsb
enter
popf
fnstenv
jbe
aam
lds
jge
push
mov
mov
push
xchg
jb
adc
mov
shr
sbb
test
cmp
pop
sbb
sbb
jle
sbb
fwait
xor
mov
ss
outsb
jne
fdivrp
sahf
mov
push
jns
arpl
or
ror
mov
adc
cmp
outsb
jae
data16
mov
mov
add
sub
sbb
call
enter
add
dec
push
or
cltd
gs
xchg
into
lods
popa
cli
call
xlat
int
sub
sub
adc
adc
pop
pushl
cs
jmp
sub
popf
push
fs
dec
jb
insb
jns
sbb
mov
insb
lcall
mov
mov
movsb
or
repz
stos
add
ret
inc
loop
mov
cmpsb
ret
movsb
insl
popa
cmp
stc
hlt
push
inc
ror
add
out
andl
mov
pop
jg
clc
incb
pop
fwait
jge
and
lds
and
dec
jle
mov
xchg
mov
pop
test
jo
pop
lahf
mov
data16
dec
test
sbb
cmp
stc
jle
int
dec
cmpsl
ljmp
inc
inc
out
pop
or
cmp
sbb
shlb
lds
sbb
rorl
inc
fildl
mov
movlps
js
jmp
cmp
xor
shrl
mov
loop
sub
adc
outsb
jmp
mov
jmp
sbb
inc
test
movb
adc
ljmp
fistl
and
cltd
scas
std
out
cs
push
add
sub
or
adc
in
sbb
add
or
ja
lret
test
lahf
add
repz
shll
pop
jp
daa
dec
push
repz
mov
insl
xor
out
and
lods
out
or
ss
xchg
ret
add
lea
xchg
mov
daa
xchg
cli
mov
adc
mov
insl
icebp
lock
inc
mov
mov
cmp
xor
scas
xchg
aad
add
insl
cmp
dec
adc
sub
cmp
inc
dec
pop
push
shll
or
xchg
fsubl
fdivs
out
xchg
jmp
cmp
ss
sbb
mov
mov
xlat
dec
xchg
push
push
cwtl
test
cmp
push
rcrl
sbb
lods
jle
ret
dec
pop
lods
rorb
outsb
fwait
mov
inc
bound
andb
add
mov
ret
aas
mov
movq
les
pop
mov
les
mov
cmpsb
push
in
jl
inc
das
roll
in
sbb
xor
push
in
loopne
stos
lahf
aam
mov
aas
lret
cmp
push
lock
outsl
pop
andl
or
adc
sbb
push
imul
or
bound
xchg
and
mov
shll
xchg
int3
and
cmp
insb
ja
ret
subl
xor
sti
mov
adc
add
and
test
ljmp
and
iret
add
sub
mov
push
xchg
sub
mov
out
lock
test
mov
lret
mov
fcmovu
mov
icebp
call
cmp
ret
sub
bound
sub
jl
into
std
ret
sub
mov
lcall
mov
xchg
xor
xchg
loope
jnp
jp
push
jecxz
xor
mov
jae
xchg
xchg
or
gs
repnz
push
movsb
aaa
pusha
out
jge
cmp
and
leave
push
arpl
push
ja
cli
bound
insb
jb
leave
sbbl
add
inc
sbb
cld
mov
adc
es
cmc
mov
lods
enter
push
movsb
mov
mov
arpl
or
mov
or
push
xor
int
stos
cs
push
in
sahf
pusha
cmc
pop
sub
imul
sbb
jmp
or
xchg
xchg
sahf
mov
cmp
insl
nop
les
test
sti
pop
mov
popa
faddl
inc
jnp
cmpsb
stos
nop
cmp
mov
jle
jg
test
shr
cmc
or
scas
lahf
xchg
xor
test
pop
ret
pop
adc
sti
xchg
jmp
adcb
adcl
jno
lret
inc
arpl
jo
xchg
in
push
xchg
sarb
fidivrs
popf
sub
sub
cmpsb
std
data16
push
rol
jp
mov
arpl
mov
adc
fidivl
popa
pop
push
sub
cmpsb
inc
dec
int3
jle
dec
mov
das
inc
mov
rcrb
cwtl
aaa
fwait
sti
mov
leave
jle
lret
mov
and
fdivrs
and
loope
jp
jne
shlb
pop
mov
jle
rcll
mov
outsb
jae
cmc
nop
outsl
aas
jge
fs
mov
repz
popa
ja
out
jg
add
popa
stc
push
push
sub
pop
pusha
and
mov
js
ret
popf
mov
sahf
int
loope
pusha
in
lock
push
mov
pop
in
testl
iret
lods
add
mov
les
pop
add
cmp
les
or
or
jae
call
mov
cmp
cmpsb
rcrl
xchg
push
jp
push
fadd
into
pop
pusha
dec
jecxz
xchg
mov
xchg
jns
pusha
loope
movsb
aas
test
loop
push
xchg
arpl
cmc
pop
ret
addr16
sbb
xor
push
ds
fdivl
in
in
cltd
jp
push
dec
lock
jge
and
mov
lahf
pop
pop
mov
lods
jp
pop
or
jno
sbb
inc
mov
push
clc
cmp
rcr
stos
cltd
daa
divl
xchg
ds
mov
mov
int3
ret
sbb
mov
popa
cmp
jg
call
pop
mov
xorb
jbe
mov
push
sub
add
lods
cmpsb
jp
lds
out
mov
out
add
ja
jno
pop
adc
adc
testb
fists
jnp
xor
and
mov
mov
aaa
sub
out
push
and
sub
mov
ja
inc
popa
jl
arpl
sbbl
xor
and
fidivl
dec
adc
addr16
push
aad
or
das
mov
push
dec
nop
pop
cmp
push
inc
pop
push
push
xor
jno
adc
enter
cmp
cmp
inc
out
or
jmp
xchg
cmp
stc
nop
shll
push
rcrl
data16
movsb
stc
jae
push
xor
ds
inc
lds
aaa
stc
scas
nop
cli
fisttpll
sbb
call
push
mov
dec
aaa
xchg
leave
dec
loopne
jmp
aaa
pop
mov
adc
cltd
or
fsubrp
in
dec
dec
ja
test
icebp
out
adc
fmuls
imul
dec
ds
daa
movsl
aas
xor
or
clc
jg
dec
jnp
and
incl
test
aad
dec
sub
insb
mov
stc
cmp
mov
in
sti
pop
je
popf
xor
loop
outsb
cmp
and
mov
dec
cmp
adc
stos
fwait
mov
orl
and
lock
imul
js
cmp
aas
movsl
in
sbb
mov
add
push
out
aad
cld
add
push
pusha
int
pop
aas
sbb
rcr
fnstenv
pop
cltd
jo
call
sbb
and
mov
mov
xor
popa
je
jge
pop
inc
jg
dec
cltd
add
clc
aaa
decl
rol
movsb
shll
sbb
jg
cmc
jmp
xlat
mov
leave
push
cli
loope
lods
cmp
cltd
leave
jg
xchg
ds
testl
iret
rorl
jg
xchg
in
movsl
xchg
gs
popf
cmc
mov
jg
out
and
aaa
orl
data16
insb
xor
aaa
or
fwait
push
movsb
jbe
sbb
xchg
test
cli
mov
leave
int3
push
pop
sbb
pop
stos
push
lock
insl
fdecstp
rcll
shll
rolb
cmp
in
sbb
mov
fnstenv
mov
ret
or
sbb
xchg
lahf
orl
das
mov
stos
std
or
imul
xor
add
outsb
and
inc
sti
add
lahf
repz
xchg
cld
cwtl
js
sti
inc
in
stc
xlat
cld
jae
push
mov
adc
insl
sbb
adc
cltd
test
sahf
cmovb
push
inc
and
mov
adc
sub
lahf
cld
leave
fscale
add
mov
lcall
push
dec
jl
aam
pop
lcall
movsb
fwait
scas
in
loope
add
push
mov
int3
insl
xor
test
cli
je
jb
push
ljmp
xchg
scas
sahf
jl
sub
push
data16
ret
addr16
push
stos
sub
xchg
mov
add
test
xor
shrl
sti
gs
or
mov
scas
push
in
inc
out
mov
jle
lret
pop
insl
into
add
movsl
add
mov
xchg
aad
data16
lods
test
jle
xor
test
push
jbe
addr16
dec
add
or
sub
fwait
sti
rcr
fisubrl
mov
lea
pusha
popa
fldt
lea
mov
movsl
int
jb
xor
add
cld
cmpsl
jae
pop
xor
iret
add
adc
mulb
fstps
mov
mov
mov
cmp
fisttps
sbb
inc
inc
stos
xor
stos
roll
cld
pop
push
adc
lcall
inc
scas
cmp
dec
xchg
div
mov
lret
lahf
ljmp
inc
mov
ss
sbb
jnp
test
mov
cmc
cmpsl
lds
cmp
and
mov
outsb
cmpsl
mov
into
adc
pop
mov
out
into
and
jge
mov
lcall
jb
iret
xchg
insl
xchg
xchg
loop
bnd
adc
cltd
movsb
ret
pop
cmp
in
rolb
and
repz
or
lock
das
xor
movsl
mov
adc
bound
mov
aas
adc
inc
je
mov
gs
data16
rcrl
fisubl
add
fistl
xlat
sahf
fimull
pop
clc
xchg
push
sbb
mov
cmpsb
movsb
rclb
pop
push
and
mov
js
xchg
outsl
mov
push
daa
mov
pop
mull
and
ret
mov
sti
jmp
imul
daa
adc
insl
loopne
jo
push
pusha
in
pop
ss
sahf
mov
xchg
mov
and
sub
pop
push
je
mov
push
outsl
cmp
fistpl
incb
in
and
pushf
pusha
sub
jp
jae
pushf
movsl
nop
fabs
mov
lret
into
xor
ds
stos
aaa
ja
imul
xchg
jno
test
lods
orl
out
pop
data16
adc
pop
add
test
inc
xor
js
mov
and
mov
pop
fwait
aad
sub
outsb
mov
test
int3
lcall
pop
mov
stos
push
pop
xchg
push
test
outsb
pcmpeqd
add
es
mov
iret
jnp
xor
pop
push
addr16
mov
sti
or
add
gs
out
sub
das
xorb
dec
jns
mov
dec
inc
nop
mov
scas
cmp
inc
dec
push
xchg
repnz
adc
xorl
push
sbb
pop
js
mov
fs
loope
sahf
bound
dec
ret
outsb
push
fwait
xor
mov
pop
inc
pop
inc
loop
sub
xorl
mov
xor
xor
insl
insl
pop
lods
test
xacquire
mov
or
xchg
or
sbb
shlb
iret
mov
data16
mov
ljmp
popa
inc
mov
fldl
mov
lods
stos
jle
inc
jecxz
loopne
sbb
mov
fistpll
enter
xchg
rcrb
mov
rolb
or
aad
mov
pop
mov
mov
popf
popf
xor
popa
cld
cs
arpl
sbbl
outsb
insb
repz
or
add
cmp
ljmp
dec
lods
add
dec
inc
mov
iret
scas
cwtl
push
js
inc
dec
lcall
movsl
xchg
push
repz
jne
fisttps
sub
or
cmp
mov
inc
xchg
stos
and
cli
mov
xor
movsl
jbe
outsl
push
cli
inc
mov
adc
push
ss
jb
fs
in
insl
xchg
fidivrs
mov
adc
loop
sbb
bound
call
movl
cmp
sub
and
in
mov
dec
dec
xchg
es
imulb
push
jecxz
pop
inc
sub
addr16
in
pusha
dec
xchg
mov
push
mov
cltd
arpl
jns
or
mov
call
xchg
int
in
mov
mov
pusha
fdivs
outsb
xchg
pop
iret
jmp
lea
fidivrl
test
mov
mov
xor
inc
pop
cs
sub
cmpsb
inc
push
pusha
jle
stos
in
pop
pop
jns
add
xor
and
das
in
mov
stos
lods
mov
out
jecxz
or
icebp
std
add
or
stos
jecxz
enter
insb
xor
and
jno
in
jo
inc
loopne
mov
dec
mov
call
int
sbb
sbb
adc
inc
push
cmp
and
push
xlat
jno
xchg
or
sbb
fstpt
out
or
shr
xchg
insl
cmp
out
add
jle
push
inc
pop
aad
xchg
push
cli
xchg
test
mov
dec
push
push
cltd
pop
test
xor
mov
out
xchg
mov
fdivp
fdivrl
mov
pop
jne
gs
movsb
push
lcall
xchg
dec
in
clc
xlat
add
repz
xchg
sub
lods
ret
fistpl
mov
xor
dec
shlb
xor
dec
fwait
jb
jnp
out
stos
push
imulb
rorl
sbb
cmp
gs
lret
push
pushf
mov
pop
orb
add
xchg
and
fs
xchg
stos
pop
xchg
push
out
icebp
xchg
mov
push
xor
fimull
divl
popf
push
jnp
and
outsb
fstl
mov
pop
sub
iret
leave
repnz
jnp
movsl
mov
bound
xchg
dec
jbe
push
popa
shrb
es
push
mov
xchg
mov
xchg
pop
xor
adc
xor
rclb
push
dec
leave
jno
stc
lds
in
dec
xchg
push
ret
pop
aam
mov
xchg
xchg
outsb
xor
out
cld
imul
xchg
mov
mov
mov
das
pop
shlb
mov
jbe
enter
inc
fdivrs
or
repz
jg
and
and
sbb
jmp
rclb
ljmp
filds
xor
mov
pop
mov
adc
lahf
sti
xchg
push
imul
lods
jmp
sti
xor
fdivrs
jl
mov
je
lods
cmpsl
ja
dec
push
and
lea
out
rorb
sub
faddl
xchg
xchg
xor
lock
out
xchg
ficompl
dec
inc
xor
xchg
lods
xchg
sbb
data16
xlat
and
mov
in
and
and
cmp
cmp
sti
mov
or
mov
xchg
jns
stc
notb
lea
nop
rolb
outsl
shlb
dec
jmp
test
in
insl
or
jns
xor
dec
fnstenv
lret
push
cmp
or
mov
mov
push
dec
imul
fnsave
test
test
jp
or
mov
adc
jb
pop
dec
test
dec
outsb
pop
inc
sbb
out
push
or
sbb
pop
push
das
push
xchg
aaa
lea
sti
jne
popf
xlat
int3
fildll
insl
mov
push
call
jns
xor
mov
xchg
sbb
test
sub
sub
cmp
mov
sub
mov
sbb
pop
cwtl
rolb
xchg
shrb
loop
mov
ss
data16
mov
and
mov
add
loope
cmp
pop
mov
mov
std
and
jns
sti
stc
repz
mov
movsl
movsb
and
dec
popf
xlat
ret
pop
lcall
cmp
mov
in
add
xor
ret
or
sarb
cld
xor
xchg
xchg
mov
out
out
rolb
out
roll
rcl
pop
push
xlat
faddl
mov
jne
in
sbb
and
test
mov
out
aaa
or
sbb
hlt
xchg
mov
stos
push
xchg
mov
imul
jbe
jno
shrl
push
xor
aam
inc
aad
xor
inc
push
cld
jbe
pop
aaa
mov
mov
lea
sub
hlt
fisttpl
in
pusha
rorl
je
inc
add
inc
push
das
pusha
mov
xchg
aad
and
adc
xchg
xchg
cmp
or
bound
inc
push
dec
call
jno
mov
mov
clc
aas
lds
lret
repnz
add
out
pop
test
sub
ret
push
cmp
filds
cmp
mov
loope
pop
sbb
mov
adc
je
dec
adc
or
rclb
push
pop
sub
push
xchg
mov
fsubp
push
aam
idiv
sub
cmpsl
mov
mov
or
insb
push
jge
nop
outsb
imul
arpl
ret
cmp
cmpsb
out
hlt
out
cli
out
adc
popa
dec
sbb
into
cli
inc
out
mov
add
push
pop
icebp
dec
test
in
or
sbb
pop
mov
nop
mul
cmp
or
push
and
cs
push
mov
mov
mov
jle
and
lcall
imul
xchg
fists
data16
into
dec
cmp
fidivs
inc
cmc
stos
ljmp
sub
jae
popf
fsubl
or
jmp
adc
adc
cmp
xor
imul
or
cmovns
mov
push
loop
clc
pusha
cld
mov
mov
sub
lods
mov
cld
out
imul
test
lret
inc
xchg
das
push
lahf
fcomp
mov
add
and
les
pop
into
hlt
sub
ljmp
enter
pushf
sahf
add
mov
mov
add
aaa
push
inc
push
mov
stos
insl
xorl
or
push
xor
sub
outsl
loop
pop
jmp
call
js
test
mov
daa
adc
mov
out
popa
inc
xor
mov
stos
cmpsl
fdivrs
sahf
les
loope
mov
test
adc
mov
stc
ja
insl
push
sub
sahf
cmc
and
push
ret
pop
inc
mov
inc
mov
bound
jnp
js
sub
sbb
push
mov
and
adcb
sbb
mov
test
mov
movhps
jl
test
mov
int
mov
xchg
repz
dec
shlb
mov
mov
cmp
lahf
push
push
insb
lret
in
rorl
or
mov
mov
push
pushf
scas
cltd
inc
push
pop
mov
sbb
not
sbb
scas
inc
xlat
mov
cmpsb
xchg
sub
sub
ss
dec
or
add
popa
sub
rcrl
dec
xchg
push
jmp
pop
lahf
jmp
inc
sbb
mov
mov
jmp
sbb
and
js
inc
dec
or
mov
shr
dec
add
and
mov
stc
pop
pop
hlt
mov
mov
iret
dec
aam
jl
std
das
mov
pop
adc
loop
cli
test
and
int
rorl
stos
addr16
sahf
mov
ss
push
adc
jo
mov
stos
outsb
push
leave
in
mov
xchg
inc
add
lea
adc
dec
test
scas
xchg
add
cmpsl
dec
or
mov
jg
pop
cld
jne
aaa
scas
stos
fdivrs
inc
decb
ljmp
out
subb
mov
adc
mov
test
mov
sar
push
outsb
aad
sub
cmpsl
addl
jns
cmpsb
add
and
and
in
dec
push
sub
or
adc
jnp
testl
pop
pop
stc
mov
cld
push
out
jo
lahf
pushf
xchg
aam
sbbb
mov
mov
lcall
flds
xor
adc
mov
cltd
inc
lcall
mov
xor
in
xor
je
push
or
das
lock
jg
or
cmp
or
inc
pop
pop
incl
shrb
cmp
push
mov
int
mov
lret
mov
cmpsb
das
test
aad
daa
pop
fwait
daa
or
mov
enter
scas
push
aam
dec
push
cmp
icebp
daa
jmp
sbb
push
mov
add
adc
sar
int3
inc
mov
jo
xchg
add
push
adc
nop
scas
jns
fwait
cmp
rcr
xchg
fstl
push
sub
xor
pushf
leave
push
aad
mov
pop
fisubs
insb
cmp
mov
jmp
mov
adc
xchg
cld
inc
insb
rol
dec
mov
sarl
push
outsb
mov
idivb
fdivrs
mov
dec
jmp
cmp
enter
mov
jge
in
bound
push
outsl
xchg
mov
pop
dec
pop
loopne
addr16
jb
sbb
sbb
or
into
arpl
xlat
pop
inc
pop
jmp
sarb
or
xchg
test
mov
das
pop
mov
inc
jecxz
fistpll
xchg
inc
xchg
ds
cld
or
out
pop
sub
imul
sub
push
scas
and
sub
test
loope
pop
add
cmp
or
jl
leave
insl
mov
hlt
lahf
cmp
jns
pop
movsb
xor
fsubl
pushf
iret
mov
idiv
imul
out
or
xchg
mov
shrl
sbb
cmpsl
jmp
dec
sub
icebp
adc
pushl
gs
push
xchg
push
xchg
jecxz
orl
fwait
and
xlat
stc
jle
scas
inc
in
mov
or
lahf
adc
fnstsw
fwait
push
movsb
or
pop
cmp
mov
outsb
fsubrl
mov
xor
cmp
loop
mov
loop
sti
and
push
sahf
divl
cs
fsubs
xchg
add
or
cwtl
inc
or
pusha
mov
xor
or
fadds
adc
lret
faddp
pop
int
mov
dec
push
mov
fwait
int
testl
push
out
cmpsb
insb
jb
add
ja
jmp
les
add
mov
test
lea
pop
push
imul
push
fmull
mov
and
add
or
push
xor
iret
repnz
iret
ss
lods
cmp
mov
sub
lods
push
cmp
into
adc
addr16
test
test
lods
mov
and
insb
sbb
dec
inc
push
in
fisubl
xlat
cmpsl
outsl
sub
add
unpckhps
jns
mov
ret
ds
adc
mov
cmp
jo
push
ds
or
mov
mov
into
pinsrw
loopne
add
insl
cmpsb
cmp
sbb
sar
ret
icebp
dec
mov
push
rcrl
sub
das
cmp
dec
inc
or
jl
mov
xchg
sub
push
jae
sbb
cmp
or
and
das
lock
adc
cwtl
cmp
jns
mov
xor
adc
dec
mov
jl
xor
add
sti
adc
test
xor
adc
hlt
mov
mov
test
push
cltd
cmp
das
xchg
icebp
mov
out
xchg
push
xor
dec
mov
sbb
mov
cmpsb
in
inc
mov
into
flds
push
sti
lea
push
scas
test
rcrl
lret
popf
fcompl
xchg
cmp
sahf
or
frstor
fucom
push
xor
push
sarl
sarb
sub
imul
in
pop
jl
rcr
sub
mov
adc
dec
dec
add
movsl
adc
shlb
aad
sbb
adc
ret
bound
mov
mov
jbe
pusha
add
scas
sahf
mov
sbb
loop
stos
icebp
jg
out
or
and
ljmp
mov
jl
dec
sub
or
jne
pusha
lds
data16
pushf
icebp
fadds
mov
notb
cmc
cltd
inc
cmpsb
nop
xchg
mov
das
xor
mov
push
push
fidivrs
push
mov
je
sub
pop
divb
fbstp
lods
add
mov
hlt
ja
gs
mov
and
xor
out
js
sti
xchg
rclb
stos
push
int
gs
cld
dec
adc
add
jl
mov
addr16
push
jae
roll
adc
fsubrs
bound
clc
out
inc
cs
xchg
mov
pop
out
sahf
fdiv
pop
jno
xor
cmpsb
das
je
adc
and
movsl
scas
mov
jne
das
mov
repnz
mov
mov
fcoms
add
push
sub
clc
lds
mov
jge
pop
sbb
push
ja
stos
cmp
shr
nop
xchg
rcrl
mov
jnp,pn
in
dec
negb
imul
test
push
cmp
and
jbe
bound
xchg
push
push
mov
pop
pop
mov
cs
fmul
loope
adc
jmp
test
lahf
dec
adcb
fnstcw
es
xchg
movsb
in
inc
cmp
mov
push
incl
xor
fnstcw
mov
loop
cmp
dec
inc
sbb
mov
cld
push
and
push
ret
movsl
push
imul
push
or
and
aam
inc
mov
mov
xor
outsb
cs
arpl
cmpsb
mov
fisubrl
xorl
mov
sbb
stc
xor
aad
clc
cli
jb
jmp
xor
mov
xchg
xor
cmp
lret
sub
out
stos
leave
test
test
sbb
xchg
xchg
cltd
fs
sbb
lock
adc
dec
adc
cmpsl
mov
and
mov
mov
mov
es
mov
cmc
pop
pop
cmpsb
xor
call
push
cltd
pop
pusha
cmp
dec
xchg
cmp
loop
jl
inc
mov
mov
repz
mov
jle
push
test
ss
loop
stos
stc
and
adc
mov
mov
lret
imul
imul
jmp
fsin
lods
push
xchg
jmp
sti
add
addr16
pop
lods
inc
outsb
or
repz
and
xchg
ljmp
pushf
or
cmp
cmpsl
xchg
sbb
mov
in
push
repnz
int3
sbb
or
clc
mov
cltd
ror
pop
minps
das
xor
inc
xor
inc
or
arpl
mov
sbb
mov
and
les
adc
out
pop
or
movsb
enter
or
scas
jns
in
adc
inc
jae
xchg
and
mov
out
pop
xchg
pop
repnz
xlat
out
call
xlat
xchg
fmull
xchg
loope
jno
imul
jmp
mov
sbb
test
gs
pop
loop
jmp
push
inc
mov
lods
push
pop
fs
adc
xchg
pop
imul
sbb
icebp
imul
lea
push
lds
pop
shr
out
or
enter
stos
push
js
inc
scas
jecxz
sub
mov
jg
and
loopne
push
xor
sbb
icebp
fcmovnb
movsl
aam
xor
scas
or
cmp
rolb
cltd
scas
xchg
inc
test
popa
fisttpll
jecxz
lods
dec
mov
sub
test
cmp
dec
aam
rcl
mov
fimull
push
popa
inc
mov
xor
sbb
inc
push
push
lret
sbb
repnz
or
push
ret
dec
sbb
je
adc
xchg
push
jae
rorb
dec
mov
mov
imulb
push
jg
inc
lds
jns
push
ficomps
add
call
xlat
cld
sub
mov
pop
stos
jge
mov
sarb
cmp
push
and
pop
jnp
test
pushf
repnz
bound
rcll
imul
add
pop
mov
sbb
sti
aad
test
add
leave
popa
popf
outsb
fstpl
pushf
repnz
mov
adc
std
sbb
dec
cli
lods
jp
and
mov
mov
test
xor
clc
in
imul
xchg
repz
xchg
sub
sbb
xchg
dec
ds
ficomps
test
ret
int
clc
aaa
dec
jbe
es
fwait
js
jmp
mov
sbb
adc
lret
scas
stos
jo
push
jbe
inc
pop
std
sbb
js
loope
gs
aam
cltd
inc
shlb
cmc
dec
outsb
fsubrl
in
and
or
mov
enter
inc
loope
and
cmc
or
lds
gs
rorl
out
call
pushf
or
mov
orb
pushf
nop
fldz
mov
mov
cs
out
sbb
sbb
jo
sti
into
xchg
outsl
mov
jne
mov
daa
mov
mov
mov
adc
mov
push
xchg
mov
out
sbb
out
cltd
jge
clc
mov
xor
xor
fmull
inc
or
out
insl
xchg
or
test
push
out
icebp
mov
test
add
push
ret
scas
ret
cwtl
test
scas
sbb
icebp
cmc
jecxz
pop
jp
inc
pop
add
cli
call
dec
fldt
mov
xchg
ss
jne
and
in
repz
imul
adc
out
xor
ret
jb
push
add
cmp
nop
and
fs
mov
aad
cmp
or
jmp
cli
inc
add
pop
cmp
ljmp
int
mov
jae
xchg
sub
loop
stos
xor
or
cs
mov
inc
sti
rcl
sbb
sbb
out
repz
cmp
mov
add
not
xchg
lods
scas
aaa
dec
dec
out
sub
pop
sbb
mov
lret
cmp
enter
cmp
fidivrl
jae
sbb
addl
adcb
pushf
addl
imul
cld
xor
mov
les
or
xchg
pop
pop
enter
sahf
addb
add
jl
shrb
bound
int
and
movsl
int
sub
negl
jnp
add
cmc
cmc
hlt
mov
xchg
test
xchg
sahf
inc
xchg
push
lea
push
inc
inc
or
lahf
daa
loope
pop
mov
inc
mov
imul
push
clc
xchg
jg
adc
sti
mov
mov
movsb
cmpsb
rol
inc
push
inc
imul
pop
jle
inc
cli
loop
cli
pop
inc
mov
dec
xchg
popa
jne
xor
das
icebp
lcall
lcall
rolb
xchg
jae
xchg
pop
scas
enter
xor
ret
cmp
mov
ja
aam
ret
adc
jns
aaa
mov
sub
aad
pop
sbb
jbe
add
addb
aam
xor
rorb
insb
sbb
out
sbb
aaa
add
jl
jbe
int
push
inc
sti
int
sbb
mov
outsb
push
and
test
adc
std
aaa
scas
or
lods
jnp
icebp
jl
dec
lods
ljmp
inc
pop
push
popf
rol
hlt
call
sahf
dec
sbb
xchg
iret
ljmp
push
fwait
xchg
sbb
scas
adcl
mov
xchg
pusha
pop
sahf
arpl
pusha
add
pop
sbb
data16
out
jg
sbb
cmp
lds
xchg
pop
insl
mov
mov
fiadds
scas
rcr
add
and
mov
sub
popa
lds
mov
mov
adc
stos
mov
hlt
add
in
lods
mov
xlat
adc
sub
cmpsb
call
test
mov
lcall
adc
dec
insl
sub
cmp
pop
icebp
add
and
imull
lcall
es
inc
pop
stos
inc
and
xor
sarb
sbb
xor
dec
ljmp
cmc
test
sbb
mov
or
mov
call
popf
cmp
aas
mov
and
and
cmp
xor
addr16
cli
dec
test
std
dec
test
cmp
fimuls
ud1
pop
mov
lcall
fsubp
out
inc
xchg
orl
cld
fstpl
fstps
dec
jmp
std
js
mov
jle
repz
sarl
inc
xchg
movsb
jne
fimull
adc
daa
inc
pop
adc
into
stos
out
mov
sub
push
add
or
stc
in
outsb
sub
push
dec
stos
sbb
and
les
push
cmp
mov
jg
mov
fninit
push
adc
sub
cmp
push
sbb
gs
cmpsl
out
mov
jbe
adc
mov
push
pop
pusha
cmpsl
xor
hlt
jns
or
mov
ja
jo
add
push
cmc
sbb
les
xor
dec
fcompl
pop
jecxz
adc
je
cmpsb
cld
mov
jle
jo
jo
xchg
addb
into
shlb
and
push
cmp
sub
rcll
jbe
xlat
pop
mov
mov
push
fmul
fcoml
test
scas
int3
std
clc
iret
jecxz
cmp
lods
mov
int
in
mov
dec
sbb
pop
jge
cmpsl
in
loop
or
mov
lcall
sub
das
push
cmp
pop
push
sbb
mov
pushf
cli
pop
inc
inc
in
ds
sub
leave
mov
push
das
xchg
xor
rcll
mov
std
mov
sub
sub
push
jp
addr16
inc
inc
xor
jae
into
jle
fisubl
jge
cs
jnp
cltd
mov
jo
aad
mov
divl
stos
mov
dec
out
loope
ja
ja
push
and
outsl
js
in
pushf
sub
orl
xor
push
call
jle
mov
shll
lea
xorb
jecxz
int3
loop
cs
addr16
bound
inc
jp
andl
inc
add
inc
lret
mov
or
mov
test
push
mov
or
dec
xor
lock
cs
push
aad
das
mov
fcmovbe
inc
lods
sub
addb
es
in
pusha
pop
dec
out
pusha
outsl
mov
mov
cmp
push
push
fcmovne
repz
sbb
cmp
and
jb
cli
popf
fisubrl
test
adc
repnz
xchg
xor
in
mov
incb
inc
js
fcmovnb
xor
pop
aad
repnz
xor
daa
pop
sbb
mov
lcall
fldt
imul
int3
xchg
xor
pop
cwtd
mov
mov
ss
je
add
mov
pop
aas
mov
shll
sbb
xchg
xchg
icebp
and
pop
ljmp
xchg
xchg
dec
mov
and
mov
jns
es
daa
movsb
inc
in
xor
jge
adc
push
aad
scas
rcrl
loopne
decl
leave
popf
push
es
dec
sub
mov
inc
pop
out
scas
fcmovu
mov
les
lea
dec
test
adcb
aam
mov
inc
or
aam
popa
ret
mov
sub
push
pop
rcrl
dec
adc
fstpt
xor
inc
stos
or
pop
lods
sub
xor
fadds
xchg
out
mov
in
je
iret
push
dec
into
mov
and
loop
lds
out
loop
sbb
and
push
cmp
and
out
mov
cmovb
push
testb
outsl
xor
jl
mov
dec
dec
lods
ljmp
cmp
daa
adc
clc
daa
iret
xchg
mov
shrl
lds
andb
sub
adc
out
in
and
ljmp
push
into
cmc
xchg
pop
pop
inc
test
add
out
jo
inc
insb
mov
mov
pop
ds
test
mov
sub
add
loopne
xor
addr16
dec
into
sti
test
inc
outsl
popa
jmp
jnp
leave
imul
addr16
lds
out
mov
pop
movsl
insl
or
shl
ret
inc
and
dec
mov
mov
lock
jge
jbe
imul
divl
sbb
je
fnstenv
jnp
arpl
or
dec
je
fmuls
rorl
and
xchg
xchg
dec
mov
cld
fdivl
cmp
add
cltd
cmp
jmp
mov
popfw
das
aas
gs
dec
iret
xchg
mov
push
pop
add
xor
movsb
ljmp
sub
push
cwtl
add
push
dec
xor
pop
addr16
out
fbld
adc
inc
mov
cltd
daa
je
add
daa
stos
sbb
cwtl
in
das
xchg
push
cwtl
jl
shrl
outsb
shl
mov
js
mov
insb
cmp
or
fwait
cli
adc
sahf
iret
fs
mov
repnz
cmp
mov
mov
sub
gs
dec
push
xchg
in
pop
inc
pop
cs
sbb
xlat
mov
insl
inc
push
push
icebp
rcrb
add
sub
inc
inc
or
pop
clc
mov
jp
pop
fisubl
fdivrl
adc
mov
push
dec
pop
int3
mov
lods
dec
aaa
fwait
ror
fdivrp
cs
mov
fwait
adc
mov
arpl
in
lcall
jge
repnz
sub
mov
jmp
mov
mov
subl
pop
subl
fdivs
jmp
inc
movsl
sub
xlat
lret
pop
in
call
push
in
stc
dec
cmp
call
jp
inc
aaa
jp
insb
xchg
stos
xor
test
jbe,pn
inc
loope
movsb
cmp
cmc
cmp
fimull
fcompl
push
es
push
dec
imul
xor
aaa
inc
xchg
dec
rcll
and
jl
jmp
dec
sub
cmp
dec
pop
adcl
dec
push
shll
xor
addr16
push
pop
push
rolb
js
stos
scas
add
xlat
cmp
arpl
movsb
popf
xor
pop
and
and
mov
fnstcw
cs
dec
mov
imul
push
xchg
jl
push
in
mov
jge
xor
dec
jge
mov
pop
mov
outsb
in
daa
dec
data16
mov
scas
test
cs
lds
int
xchg
mov
mov
cmp
les
js
es
mov
enter
icebp
idivl
mov
je
loop
or
jecxz
dec
mov
fsubrl
daa
insb
sub
outsl
and
jecxz
aaa
stc
test
loop
fidivrl
push
in
test
js
arpl
rclb
pop
xchg
sbb
orb
call
ja
les
fs
int3
repnz
sub
add
mov
lock
loop
pop
cmc
dec
inc
testl
xorb
addr16
rcl
notl
mov
insb
imul
dec
sub
add
add
mov
inc
dec
jns
clc
int
stc
push
cmp
mov
stc
inc
add
clc
adc
jnp
clc
and
ret
mov
shl
ja
sub
xchg
add
fisubs
push
and
xor
jle
dec
movsb
shlb
js
pop
or
add
sbb
ret
mov
jmp
inc
cmp
jmp
pop
push
cmpsl
lods
push
andb
fidivl
into
mov
dec
mov
sbb
loope
cmpsl
xchg
bound
js
cmc
call
fisttpl
sub
push
daa
mov
lds
or
add
mov
stos
data16
arpl
dec
leave
pop
shl
dec
lds
dec
pop
xchg
outsl
push
mov
inc
push
mov
sbbb
in
aad
cltd
loope
lret
into
pop
popf
pusha
xchg
xchg
mov
test
test
inc
xchg
sbb
outsb
fwait
mov
xchg
test
jp
and
adc
mov
xorb
mov
dec
fbstp
jbe
ret
xchg
cli
aam
pop
clc
dec
adc
aaa
cmp
jg
push
push
fdivrs
data16
pusha
ljmp
bound
ficoms
inc
cltd
fimuls
stc
cmp
sbb
or
inc
int
xchg
aaa
aas
cmp
inc
rcll
xor
in
test
stos
sahf
lds
arpl
jp
cs
push
call
pop
sahf
or
inc
lahf
inc
mov
push
inc
popf
adc
js
pop
add
push
push
and
lret
test
popf
ret
mov
int3
loopne
icebp
into
test
ret
add
clc
mov
int3
movsl
test
leave
addr16
int3
or
pushf
loop
outsl
movhps
sub
adc
mov
add
jne
stos
add
xchg
shrb
inc
jbe
or
mov
cmp
lret
pop
push
cmc
cmp
ljmp
cmp
dec
mov
outsl
std
jmp
aas
xchg
shlb
mov
fistpl
mov
enter
xchg
and
cwtl
loop
push
test
hlt
ljmp
or
adc
adc
mov
lods
hlt
jno
add
xlat
xchg
iret
mov
mov
loopne
fistl
mov
jb
imul
in
inc
popf
rcl
jp
clc
sub
nop
push
mov
je,pn
dec
sub
aam
fwait
push
xor
test
cmp
subb
add
mov
pop
je
xchg
pop
pop
add
xor
cmpsb
dec
leave
loope
xchg
pop
mov
xchg
imul
xor
sub
dec
pop
int3
adc
mov
jae
or
int
je
iret
cmpsl
mov
fadds
daa
mov
dec
push
mov
fisttpl
sbb
cmc
popa
and
mov
mov
sub
stc
and
adc
sub
xchg
cmpsb
in
stc
or
xchg
js
push
in
pop
sub
dec
ja
push
shll
popa
lea
fiadds
lods
jb
mov
mov
sbb
int
mov
mov
adc
sbb
shlb
dec
jg
ja
cli
out
das
add
sbbb
fisttpll
xchg
out
xor
push
dec
shrb
sti
test
push
pop
pusha
bts
xlat
or
clc
inc
test
leave
lds
or
out
shrl
lods
rclb
dec
imul
sbb
cmp
mov
mov
ret
mov
dec
fistpl
pushf
out
dec
sti
jge
pop
iret
mov
or
mov
cmp
push
stc
xchg
pusha
lret
clc
push
lcall
cmp
mov
divl
ret
xchg
popf
fnsave
pop
jecxz
jno
icebp
pop
aam
cmc
aad
js
adc
adc
out
pop
fildl
add
mov
aaa
mov
arpl
inc
and
pop
ficomps
cmp
mov
jecxz
or
xchg
and
xor
loopne
cmp
cs
mov
stc
jb
inc
xor
aam
shll
push
dec
jl
flds
frndint
out
fists
popa
mov
rorb
or
xor
push
hlt
sub
sbb
fs
xlat
fldl2e
lds
ds
sub
ret
or
jg
fdivrs
adc
and
mov
push
add
push
shlb
scas
push
sub
cmp
jno
mov
repz
xchg
adc
sub
rcrl
xchg
dec
dec
jnp
test
out
inc
idivl
test
and
xchg
ss
fcom
sub
mov
fdivrl
test
jae
pop
cwtl
mov
in
ljmp
stos
into
lahf
fldl
jbe
or
jnp
test
fucomi
fwait
jp
shlb
cmp
movsb
mov
and
sbbl
in
xlat
sbb
in
cmp
test
or
xor
push
insl
and
call
inc
xor
xlat
lahf
or
ds
cmp
lret
jmp
faddl
adc
ljmp
and
sbb
into
cltd
xchg
pop
sbb
or
in
out
popa
and
cmp
pop
sbb
fmul
dec
cs
xor
iret
push
mov
lds
movsl
inc
mov
mov
divl
stos
jo
lods
jb
pop
lret
leave
jle
push
test
jg
loope
pop
and
aad
sbb
aam
xor
stos
mov
aam
out
xor
dec
jle
stc
pop
sub
fcoms
ret
or
xchg
jae
lahf
push
pop
xchg
jg
inc
or
fisttpll
divl
mov
in
shrb
out
lret
push
jmp
out
mov
aas
adc
or
fimuls
push
cmp
sub
clc
andl
out
jo
pop
shl
mov
lock
xchg
cmc
in
xchg
shlb
fs
lahf
jmp
mov
or
stc
pop
xchg
and
clc
inc
pop
shlb
mov
mov
divb
dec
inc
xchg
mov
test
add
mov
insl
and
daa
ds
adc
cmp
jecxz
fs
add
mov
and
cwtl
or
mov
pop
jb
insb
fs
aaa
adc
or
clc
xor
fyl2xp1
jae
xlat
fisubrs
in
xchg
outsb
or
add
push
adc
jg
mov
bound
mov
jbe
push
test
movsb
loope
or
pop
or
shlb
dec
jb
sbb
cmp
cmp
jb
pushf
fsubrl
scas
arpl
sub
inc
test
add
push
sub
xchg
pop
dec
mov
cmp
add
ds
add
fbld
in
test
push
dec
inc
gs
outsb
xchg
cmc
fsubrl
pop
fcoml
aam
jbe
lret
fwait
cmp
test
pushf
out
dec
inc
jmp
dec
enter
fnstsw
jb
mov
or
jnp
mov
leave
push
sahf
mov
sub
add
loop
xchg
xor
xchg
mov
xorb
gs
in
mov
in
inc
cwtl
add
das
push
jnp
shl
out
sti
or
cmpsl
cmp
sbb
sbb
and
cld
aaa
adcl
into
cmpsl
ljmp
lret
pop
mov
stos
mov
xor
sbb
xchg
loop
scas
aam
jbe
or
in
jg
push
jg
cmp
test
test
dec
jp
enter
cmp
out
enter
mov
mov
jnp
test
mov
xor
adc
sbb
jp
test
dec
mov
pushf
lcall
nop
call
cmp
in
pop
push
cmp
lret
and
popa
cmp
ljmp
js
out
fldenv
sbb
stos
sbb
jl
outsb
xchg
ret
ret
fisubl
inc
dec
loopne
adc
cli
sbb
xchg
mov
jmp
push
fdivl
mov
jno
in
add
aam
std
jl
test
xchg
into
testb
int
sub
sub
in
out
and
sbb
push
pop
dec
pop
cmp
sbb
repz
dec
clc
pop
sub
jne
mov
into
div
cmp
push
call
mov
outsb
add
sub
loope
in
xor
sub
mov
ror
nop
xor
ficoms
mov
jbe
mov
fnstenv
cmpsb
jmp
xchg
sti
dec
add
jp
cmc
outsb
int
stos
dec
sbb
mov
push
rcr
push
jb
movsb
push
push
lcall
lock
cld
push
push
mov
and
push
decl
mov
in
lea
pop
ss
out
ja
mov
pop
cmpsl
call
mov
test
in
stos
jb
mov
push
lock
mov
mov
add
dec
add
sbb
pop
lret
sbb
jns
sub
add
jl
in
push
repnz
mov
jbe
inc
scas
or
xchg
in
mov
adc
mov
clc
adc
jmp
push
les
popf
iret
adc
cmp
test
push
sarb
ja
pop
frstor
mov
mov
cld
cmp
or
dec
cmpb
lcall
push
js
cmp
outsl
outsb
test
adc
lret
jmp
and
sbb
or
push
pop
in
add
mov
sbb
push
xchg
pop
in
cli
mov
push
jl
or
cmpsl
lahf
xor
sub
call
lds
jmp
jge
daa
pushf
pop
jnp
adc
add
adc
push
sti
inc
stc
inc
or
sbb
lret
cmp
inc
push
jp
sbb
ficoml
filds
and
aas
mov
cmpsl
push
movb
aaa
negb
leave
pop
xorb
or
les
jmp
pushf
test
lahf
dec
mov
mov
fldenv
cmpsl
fs
test
push
out
pop
sbb
xor
ret
dec
cmp
pop
add
pop
mov
in
mov
aam
js
push
xchg
mov
push
push
xchg
dec
pop
rcl
dec
pop
sarl
jno
pop
and
jle
jno
fisttpll
pop
out
iret
dec
jge
jmp
sbb
cld
enter
or
std
xlat
mov
jne
push
fidivrs
jne
stos
sbb
mov
outsb
dec
xrelease
cltd
push
int
out
sub
pop
mov
jecxz
ret
mov
cmc
fsubrl
call
cmpsb
xchg
clc
cmpsl
fsubl
and
adc
jno
adc
out
xor
inc
inc
adc
ficompl
push
iret
mov
in
lret
pop
jb
or
add
js
hlt
rcr
adc
xchg
dec
dec
dec
sbbb
push
sahf
negb
sub
and
push
mov
movsl
aaa
xor
cld
sub
popf
adc
push
inc
adc
adc
dec
lods
outsl
mov
xor
inc
scas
xchg
insl
push
in
ret
jb
push
mulb
jb
mov
mov
outsl
or
in
cmp
xor
mov
shrl
jb
and
push
aad
fisttps
xchg
xor
mov
divb
addr16
out
pushf
adc
sbb
addr16
addb
scas
cld
lret
lods
pop
hlt
adc
push
movsl
xorb
mov
mov
and
jmp
cmc
jl
jge
std
clc
and
icebp
pop
sti
pushf
ja
rorb
mov
rorb
into
mov
add
inc
inc
pop
pop
fisttpll
daa
aam
leave
xor
popf
cs
mov
ret
addb
mov
insl
scas
mov
mov
out
sarl
int
or
call
lds
dec
test
mov
sub
aad
int
add
out
dec
fldcw
iret
test
sbb
aaa
push
xor
fdivr
or
xor
mov
cmp
sub
test
adc
dec
stc
xor
xor
ja
adc
xchg
sub
pop
pop
dec
add
and
insl
jnp
loop
cmp
addr16
and
and
dec
stc
scas
scas
and
dec
adc
add
xchg
sbb
pop
push
stos
dec
faddl
stc
movsb
rclb
fsub
push
jmp
mov
mov
mov
ret
inc
lahf
rol
enter
pusha
andb
loop
cmp
jmp
mov
mov
xor
fcmovnbe
out
jg
sub
mov
jmp
movl
outsb
xor
jg
es
sub
je
push
push
addr16
dec
daa
jnp
out
xor
in
jmp
aam
sbb
incb
and
inc
xchg
les
dec
ljmp
cwtl
xor
and
pop
xor
adc
mov
sahf
pusha
lahf
fs
inc
mov
cmp
mov
inc
lahf
rcrb
push
in
xchg
mov
mov
mov
pop
out
xor
jge
addr16
pop
dec
out
jbe
repnz
cwtl
cli
mov
je
je
aas
gs
push
iret
sub
ds
pop
pop
scas
or
loop
lods
sarb
mov
mov
pusha
lods
xor
loopne
sti
int
bound
clc
jmp
in
or
stc
pop
dec
add
or
fwait
pop
das
loop
mov
jae
out
xor
pushf
xchg
xchg
in
pop
xor
push
and
pop
dec
stc
inc
divb
mov
pop
pop
xchg
shrl
mov
pop
std
fidivs
adc
aaa
popa
lods
mov
fmull
gs
ljmp
sti
loopne
mov
call
push
push
or
ljmp
scas
test
mov
and
inc
or
cli
lea
push
mov
sti
mov
mov
adc
or
fistps
push
lahf
mov
xor
and
pop
cmc
mov
push
es
fmull
xlat
inc
mov
mov
shrl
repnz
mov
jmp
mov
lcall
xchg
or
mov
xchg
sub
imul
lods
dec
xchg
mov
js
dec
nop
cmp
xchg
cwtl
jp
test
adc
jb
mov
dec
or
add
fcomps
xchg
bound
add
pop
addb
push
cld
in
ss
xchg
mov
jecxz
push
inc
clc
ret
imul
mov
cmc
push
dec
out
adc
mov
jno
xchg
les
mov
pop
mov
cli
jge
lea
stc
inc
jp
cli
mov
int3
or
or
adc
jmp
and
cmp
cli
fsubrs
inc
jne
push
fwait
std
in
gs
mov
jge
daa
stos
stos
fidivrs
xchg
rorb
hlt
mov
call
roll
adc
cmp
sbb
inc
hlt
sub
addr16
inc
lret
xor
or
test
xor
jp
add
fstps
jno
scas
call
les
dec
stos
rclb
in
mov
imul
lcall
push
pushf
add
add
aas
jnp
cmp
add
dec
push
les
pusha
insl
outsl
adc
inc
xchg
cmp
xor
in
lods
loopne
outsb
aam
cwtl
jp
les
pop
adc
out
and
cltd
outsb
xchg
fstpt
mov
dec
jl
push
aaa
push
dec
lret
jmp
sub
mov
jle
sahf
dec
jg
adc
and
mov
negl
ror
mov
pop
push
lea
add
daa
xchg
dec
jnp
xchg
dec
mov
repnz
jns
push
cltd
iret
imul
push
mov
and
out
pop
in
test
dec
test
jne
das
or
fwait
inc
pop
rolb
mov
sub
fucom
mov
push
add
std
pop
inc
pop
jl
sbb
mov
movsl
inc
clc
cmpsb
hlt
cmp
inc
enter
bound
insb
sbb
pop
sbb
sbb
outsb
loop
lret
js
in
out
mov
cmp
stc
call
sti
xor
bound
mov
sti
or
sub
pop
das
in
or
insb
pop
mov
daa
repnz
pusha
insb
fildl
mov
xor
pop
jmp
fisubs
mov
push
inc
xchg
in
pop
jmp
ret
jl
fisubs
xorb
call
mov
mov
rcll
clc
lods
test
das
jmp
aam
fs
fcoml
movsl
jo
or
or
jmp
shlb
ret
dec
lcall
fnstcw
mov
sbb
xor
fcomp
int
and
int
ror
mov
mov
cli
mov
sbb
and
mov
outsl
pop
iret
sub
push
jle
xchg
cli
loop
stos
fs
sbb
pop
sbb
enter
clc
adc
movsl
leave
sbb
pop
jns
mov
pop
lods
repz
adc
fisttps
fdivr
lock
movsl
xchg
ljmp
jnp
jge
out
xchg
or
xchg
adc
out
jg
loope
addr16
out
std
int3
imull
xor
push
jb
dec
call
mov
je
sub
xchg
jmp
lahf
pop
cmp
inc
adc
dec
sbb
mov
lahf
dec
hlt
iret
sarl
je
sbb
out
push
xchg
mov
sub
pop
adc
push
push
adc
shlb
jae
stos
fisubrl
clc
js
andl
push
jo
jl
pop
outsb
or
pop
in
mov
xchg
std
stos
jb
mov
ret
xor
imul
ret
mov
sbb
mov
lret
ret
or
sbb
loop
push
mov
into
adc
fadd
and
sbb
or
call
add
dec
adc
xor
jmp
jp
xchg
fstpl
lods
ds
xchg
adc
scas
jns
mov
adcl
inc
pop
test
call
out
mov
adc
aad
xchg
cli
cmc
mov
and
insl
cli
in
mov
mov
aam
test
rolb
xchg
dec
sahf
mov
or
stos
fstps
cmp
sahf
repnz
sub
jns
fwait
in
pop
dec
sbbb
stc
repnz
cmp
int3
mov
mov
movsb
push
mov
jp
cmp
fnsave
mov
jo
pusha
ds
mov
mov
inc
xor
inc
xchg
jo
jae
sbb
jnp
inc
adc
call
aaa
stos
nopl
pop
cmc
jne
mov
mov
insl
mov
in
add
jmp
shll
dec
icebp
or
pminub
adc
iret
mov
ljmp
xchg
mov
stc
sti
mov
xchg
inc
repnz
aaa
leave
add
mov
addb
xchg
rcll
mov
test
std
push
lods
hlt
pop
lock
mov
mov
shrl
xor
pop
add
lret
sbb
outsl
xor
sub
out
std
adc
rcll
scas
jge
sbb
jb
or
call
push
aad
adc
outsb
scas
fnstsw
test
test
out
mov
out
mov
je
lds
shl
jle
pop
cmpsb
adc
aas
mov
mov
movsb
mov
mov
mov
and
out
jg
je
mov
jg
add
pop
stos
mov
call
add
lret
fs
int
je
ljmp
inc
xor
adc
mov
inc
inc
push
mov
into
push
add
decb
aaa
xor
aad
adc
xchg
pop
mov
adc
jae
pop
cs
icebp
xchg
shl
push
mov
lods
mov
push
cmc
mov
mov
out
cmp
mov
mov
in
mov
lret
mov
inc
mov
xor
xchg
in
xchg
lds
test
mov
or
mov
out
test
and
test
notb
repnz
sahf
sbb
ret
mov
pop
mov
in
push
arpl
outsb
ret
xchg
cmc
add
fstps
mov
cli
sbb
cmp
xchg
sahf
shr
dec
mov
push
mov
test
sahf
ja
repnz
inc
and
jmp
and
imul
test
stos
xor
push
iret
out
scas
shll
nop
fidivrs
es
in
popa
leave
pop
dec
push
dec
cwtl
push
xchg
fs
popa
jmp
mov
and
push
inc
sbb
dec
pop
mov
mov
cld
aam
clc
cmp
xchg
aad
cmp
mov
mov
sar
jne
sbb
and
lret
sub
imul
iret
imul
mov
jmp
mov
es
mov
jnp
cwtl
iret
push
addb
mov
adcl
into
repnz
or
lcall
inc
jbe
sbb
push
xor
lods
sub
and
fsubl
insl
mov
sbb
into
xor
xor
clc
jl
jbe
das
repnz
imul
test
sub
or
addr16
bound
lods
and
stc
sbb
movsl
sti
xor
xchg
imul
or
xchg
jno
dec
cs
mov
repnz
lret
pop
adc
cli
mov
xorl
sbb
les
in
mov
pop
inc
xchg
mov
push
add
stos
sbbb
mov
cli
inc
xor
mov
test
movsb
sbb
push
movsl
sar
cld
or
repz
loopne
pop
rorl
in
cmc
dec
movsb
mov
pop
xchg
xor
test
xorb
pusha
sysexit
xchg
ss
jmp
cmp
jl
sbb
mov
cmp
in
push
movb
push
out
test
xor
flds
mov
pop
mov
aam
clc
push
xor
push
xorb
jmp
cwtl
fs
jl
pushf
popf
fwait
popf
adc
inc
pop
dec
cmpsb
nop
mov
and
or
and
andb
add
push
cmpsb
jp
aaa
mov
inc
push
or
and
mov
inc
cltd
imul
js
jns
jbe
mov
jge
cltd
lods
sti
add
fnsave
insb
stos
movsl
ljmp
out
xchg
push
repnz
stc
jns
icebp
fistl
shlb
mov
adc
pusha
jb
push
xchg
repz
hlt
imul
repnz
mov
hlt
xlat
inc
jbe
jmp
daa
jecxz
and
ja
pop
cltd
mov
les
in
movsb
loope
shr
hlt
mov
sbb
xchg
pop
mov
sub
inc
mov
call
push
jmp
shlb
push
lahf
imull
pushf
sahf
dec
xchg
jbe
sahf
into
test
in
jl
je
into
adc
cs
and
xorl
stc
mov
sti
pop
dec
movsl
in
iret
repnz
in
insb
mov
xor
xor
test
cmp
pop
daa
inc
inc
pushf
int3
mov
pop
aaa
cli
pop
fldl
xchg
rcll
ja
bound
add
push
cmp
cmp
add
xchg
xor
fcompl
push
mov
pop
fisttpll
data16
mov
cmp
rol
into
or
mov
sbbl
xchg
dec
scas
daa
jl
add
mov
mov
pop
loope
out
fs
or
mov
ret
lods
jnp
unpckhps
jne
jge
lock
sub
je
or
push
xor
inc
out
jno
mov
push
adc
xor
bnd
movsl
jbe
test
cltd
mov
or
std
push
loope
movsb
sbb
in
test
loopne
not
xchg
shrb
add
stos
jmp
cmc
xchg
pop
mov
pop
xor
pop
xor
dec
sub
das
outsb
mov
push
insl
xor
fldt
push
adc
pop
sub
pop
mov
lret
aam
test
arpl
ficomps
sti
pop
mov
scas
mov
jp
cwtl
xlat
or
cmp
cmc
cmp
cmpsl
lea
loopne
cmp
cmp
xchg
addr16
inc
adc
ret
mov
pop
aaa
int3
mov
add
push
aad
push
fildll
sub
mov
sbb
lods
push
iret
fwait
pop
fwait
int
pop
insb
jae
inc
xchg
xchg
mov
jae
jge
jne
popa
dec
and
mov
adc
and
rclb
shlb
and
xor
repz
mov
lcall
jne
mov
or
fisubs
mov
fnstsw
mov
jp
cltd
je
mov
or
xorl
lret
mov
pop
test
xchg
dec
lcall
jmp
push
and
or
xor
loop
push
int
cld
inc
imul
cmpsb
xchg
in
je
nop
sbb
push
mov
jmp
in
lcall
dec
mov
mov
into
sahf
pushf
dec
inc
int3
mov
mov
jno
sub
ret
dec
jns
jge
adc
imul
xchg
pop
mov
cmpsb
sbb
push
jne
jno
mov
idivb
mov
xor
repz
repz
or
out
dec
fs
icebp
add
xchg
inc
repnz
ja
mov
sti
and
cltd
int3
dec
lods
jg
mov
sahf
roll
loop
inc
or
push
ficompl
and
push
test
sar
pop
mov
inc
test
push
aaa
pushf
gs
cmc
xchg
mov
call
stos
sarl
push
adc
ret
dec
pop
mov
xchg
or
mov
sub
push
lods
jo
and
push
and
mov
push
cmpsl
sbb
add
mov
and
sub
popa
das
jp
jne
jp
sar
arpl
inc
mov
mov
or
add
jmpw
dec
loop
sub
lods
or
sar
test
jns
lods
jmp
cmc
or
pop
shll
dec
int3
mov
jns
dec
push
ljmp
inc
sub
mov
mov
subb
jge
lret
xchg
sbb
dec
xor
pushf
loop
mov
xchg
enter
inc
mov
cmc
enter
xlat
daa
stc
mov
pop
xchg
mov
mov
les
data16
in
ret
mov
stos
fs
sbb
mov
out
inc
stos
mov
mov
cmp
leave
add
push
add
adcl
int3
sbb
sub
push
movsl
test
mov
in
or
mov
aaa
fcoms
pop
out
push
inc
fcom
loopne
push
fidivl
call
test
push
dec
adc
or
mov
push
sbb
in
lret
fstps
pop
nop
dec
inc
sbb
xor
mov
and
mov
lea
stos
push
add
xor
insl
call
xchg
mov
cmp
lea
jbe
mov
movsl
mov
jmp
xor
xor
pop
xor
or
jnp
dec
xor
pop
pop
pop
inc
ljmp
cmp
inc
jne
push
std
in
out
push
inc
add
ja
pop
hlt
not
scas
pop
ret
in
mov
adc
push
mov
inc
out
repz
lods
pop
mov
xor
icebp
pop
in
and
addr16
aas
mov
inc
pop
es
ror
fsubp
leave
dec
fidivs
add
sahf
sub
dec
sti
or
push
push
and
lock
jbe
dec
divl
jb
test
out
or
lods
pushf
lret
fiadds
sti
sbb
mov
mov
push
bound
xchg
cmp
cmp
jmp
push
test
icebp
mov
xor
jnp
scas
mov
add
push
adc
mov
cmp
aam
cmp
aam
push
mov
lret
or
ret
psadbw
and
mov
sbb
and
push
sbb
inc
andb
icebp
mov
fdivrl
pop
sbb
push
cmc
sub
xlat
cli
cmpsb
cmpsb
pop
xorb
jle
push
or
sub
push
sbb
adc
cwtl
push
data16
xlat
lcall
mov
pop
inc
sub
mov
jg
push
out
inc
sarb
inc
push
add
inc
arpl
lds
jmp
adc
dec
les
int
push
cmp
arpl
jne
inc
lret
sbb
xor
sub
dec
lock
es
ds
sbb
jne
sub
pusha
addr16
cmp
push
lcall
pop
mov
loope
sub
imul
dec
addr16
xor
leave
addr16
push
or
jns
inc
test
imul
dec
std
into
push
cwtl
test
addb
xor
or
xor
aam
js
and
lret
mov
movsl
int
mov
xchg
mov
mov
loop
and
mov
xor
jp
cltd
add
lret
pop
mov
in
in
push
mov
sbb
in
mov
inc
enter
les
lcall
jle
das
cmp
sbb
xor
push
sti
xchg
add
stos
cwtl
adc
cwtl
xchg
push
inc
adc
outsb
mov
ret
jge
xor
mov
movsl
jne
arpl
rcrb
xchg
es
repz
and
mov
dec
enter
push
dec
add
xchg
or
loope
add
or
test
ja
sarl
in
push
cmp
add
jmp
fdivrs
loop
sub
xor
out
xor
icebp
xchg
test
jb
cmp
push
lret
jno
test
inc
mov
repz
dec
cmp
fs
sub
xchg
cmpb
mov
push
or
jne
stos
or
mov
aam
xor
pop
push
sahf
cmp
insl
nop
cwtl
insl
and
imul
cmpsb
sar
loop
inc
sub
repnz
inc
in
cwtl
mov
cld
mov
xchg
jbe
test
sahf
pop
jp
imul
aam
add
call
int3
sub
fists
fidivs
jle
or
mov
in
rcr
inc
mov
out
jmp
dec
popa
adc
pop
xchg
adc
cmc
jp
push
push
mov
and
rcrb
sbb
mulb
dec
or
ret
xlat
or
mov
loopne
or
adc
das
adc
cmp
pop
les
repnz
lahf
subl
stc
mov
imul
add
repz
data16
xchg
add
movsb
xor
ja
data16
xor
sub
lods
xchg
and
ror
sub
jp
mov
pop
lret
and
sar
lret
mov
jle
call
push
out
push
and
out
jge
ret
mov
sbb
mov
mov
repz
jne
cmp
xchg
inc
aam
popf
clc
popf
sub
fstpl
test
dec
adc
dec
adc
xchg
roll
jno
push
add
xchg
mov
xchg
mov
add
repnz
stos
cmp
out
jecxz
shll
push
sbb
cwtl
jp
imul
lods
loopne
std
in
jne
loopne
fcmovnb
sub
leave
addr16
mov
sbb
inc
mov
jle
add
inc
sbb
jmp
subb
in
scas
pop
sbb
out
pushf
pop
call
outsl
lods
pop
filds
add
jb
mov
inc
popf
or
rcl
fldl
jbe
out
sub
pop
jo
mov
or
mov
cmp
imul
xor
jp
and
lds
pop
mov
xor
sbb
jp
mov
mov
pop
mul
mov
add
stc
xchg
lret
push
and
cld
sub
std
dec
push
insl
scas
cmp
sbb
shll
add
mov
mov
sub
mov
xor
adc
aaa
stos
icebp
push
lock
adc
jle
and
fisttps
xchg
fwait
repnz
jns
pop
leave
stos
rcrb
sub
imul
jne
sub
xchg
cltd
cmp
pop
leave
imul
push
add
xor
dec
push
mov
aaa
fimull
fdiv
stos
cmp
cmp
std
inc
add
out
jae
push
pop
push
mov
add
jb
mov
mov
stc
fs
push
xchg
push
fsts
or
sbb
pop
jb
add
dec
adc
pop
fstl
adc
arpl
mov
ret
push
pushf
and
sub
or
mov
sub
scas
insb
into
inc
aaa
cs
cmc
int3
mov
rclb
sahf
and
adc
jge
test
and
out
imul
js
pop
test
popf
xchg
clc
mov
outsl
mov
lock
jl
sbb
push
mov
inc
in
divl
adc
insb
jns
push
push
in
add
xchg
mov
dec
enter
ds
testl
push
dec
pushf
jg
cwtl
mov
fwait
jmp
mov
xor
ficompl
addr16
sub
loopne
loop
mov
gs
sub
adc
xlat
sub
faddp
mov
mov
ret
icebp
lcall
adc
cmpl
inc
sahf
sub
mov
dec
mov
cld
fnstsw
dec
enter
push
mov
jno
mov
jae
out
mov
push
inc
sbb
imul
popa
hlt
rclb
fcmovnbe
xor
outsl
cli
mov
sub
icebp
jno
mov
pop
sbb
sbbl
lret
jns
rol
add
leave
inc
loop
mov
xchg
movsb
push
pop
push
xor
mov
push
sub
add
pop
inc
mov
in
cli
push
mov
jbe
push
inc
fcomip
outsl
loop
fcoms
pop
insb
fcoml
xchg
dec
stos
adc
mov
stos
cvtps2pd
fidivrl
fwait
xchg
mov
cwtl
push
sbb
dec
or
add
outsl
outsb
mov
dec
les
ret
sti
inc
stc
adc
sarl
push
aas
xchg
jg
scas
clc
jb
in
sarb
loopne
popa
sbb
outsb
dec
inc
outsl
in
inc
pop
mov
and
inc
jmp
mov
insl
sbb
pop
xchg
fidivs
sub
test
divl
fdivrs
jnp
outsl
test
mov
stos
and
mov
cvtdq2ps
jl
and
shll
gs
xchg
dec
js
in
int
filds
icebp
pop
aas
pop
stos
mov
dec
hlt
jmp
andl
sub
das
out
in
or
out
cwtl
or
sbb
xchg
loop
and
push
les
dec
xchg
iret
dec
mov
jecxz
and
jg
or
das
roll
outsl
int3
stos
pop
sahf
test
pop
movsb
mov
mov
lds
cmpsb
xchg
jg
jecxz
mov
scas
cmpsl
insb
lods
mov
loope
add
shlb
mov
pop
repnz
psubusw
ss
out
mov
scas
in
jbe
das
aaa
inc
and
mov
push
jge
aaa
or
je
inc
adc
inc
orl
push
inc
xchg
inc
and
ljmp
outsb
rolb
jg
sbb
jbe
jg
lds
xchg
cmp
jp
mov
adc
add
push
xor
mov
in
mov
outsb
dec
sub
jl
ja
inc
int3
and
sub
jmp
inc
mov
data16
outsb
arpl
mov
push
imul
and
mov
jmp
jmp
notl
movsb
cmp
cwtl
xchg
mov
push
xor
dec
std
sub
cmpsb
out
dec
lock
xorb
sub
pop
or
sbb
js
lahf
mov
mov
jb
out
or
and
aas
adc
ret
lcall
jbe
pop
rolb
add
xchg
xchg
rcrl
jmp
mov
xchg
fs
dec
aam
orb
xchg
pop
xor
cmp
in
mov
and
rol
xchg
jno
test
adc
jbe
aam
sub
rol
adc
sbb
push
aas
jb
iret
es
lret
pop
cmp
jle
lcall
and
jle
jge
out
mov
cmp
test
test
bound
daa
and
and
cmpsl
out
pop
insb
or
and
test
fidivrs
stos
lret
mov
stos
dec
cmp
fstp
les
push
je
cmp
insb
in
arpl
or
sahf
into
imul
lcall
out
nop
nop
ss
jae
and
mov
movsb
sarb
lock
xchg
scas
out
ljmp
cmp
cmp
out
sbb
jge
loop
add
adc
xor
xor
rcrl
xchg
jp
jl
aaa
mov
notl
dec
out
shll
daa
fldcw
or
aam
sti
jge
mov
mov
and
je
iret
popa
push
inc
push
push
cltd
dec
cmpsl
mov
jge
pop
dec
loope
sub
fwait
add
pop
cmp
lds
rorl
jp
sbb
mov
icebp
mov
ljmp
jg
or
pop
test
inc
pop
notb
adc
sub
in
and
adc
cld
cli
pusha
jno
xlat
les
jo
adc
loopne
inc
aam
fcmovnb
fidivrl
mov
in
pop
sti
pop
add
xchg
outsl
cld
loop
js
push
popa
ret
add
sbb
add
push
pusha
imul
mov
add
mov
push
data16
loopne
stc
push
pop
pop
test
jle
or
ds
rolb
sbb
mov
xor
fisubrl
sub
scas
sti
sub
add
movsl
jmp
mov
sbb
xor
test
add
aas
mov
cmp
xchg
pop
fildll
pop
fistps
test
jmp
and
subl
pop
mov
insb
int3
dec
aad
fcompl
pop
out
mov
sbb
cmp
jno
adc
pop
adc
jp
leave
mov
mov
enter
mov
push
iret
and
push
jo
neg
lds
lcall
jl
daa
pop
jns
and
mov
push
sbb
xchg
mov
and
popf
lcall
pop
adc
adc
hlt
jl
add
mov
jp
ja
sahf
cmpsb
push
hlt
hlt
in
xlat
rsqrtps
pop
rolb
jle
frstor
cmc
xchg
sub
xchg
mov
arpl
push
jg
sbb
test
in
outsb
in
inc
sarl
jecxz
sbb
imul
add
rclb
jle
in
push
push
popa
or
mov
dec
int3
jg
adc
subb
push
push
push
push
push
mov
into
call
es
test
cmp
inc
shr
test
mov
data16
stos
mul
shlb
xchg
push
in
out
fstps
jle
test
pop
into
lret
ret
ss
dec
shll
enter
inc
fs
aas
pushf
cs
enter
adc
push
jne
pop
fwait
add
dec
inc
mov
cmp
mov
xchg
gs
aas
lods
mov
mov
in
xchg
add
loop
call
xor
inc
movsb
cmp
aad
sub
inc
test
push
mov
enter
mov
rorb
pop
repnz
sub
aad
std
mov
mov
fmul
fistps
pop
xchg
int
push
mov
rcr
js
cmp
xor
mov
sbb
outsl
sbb
or
pop
lds
xchg
popa
and
add
int
fwait
dec
inc
fs
or
sti
mov
pop
daa
popa
pushf
add
jge
fldcw
rcrb
inc
test
out
and
lret
and
call
mov
sti
lea
cmp
pushf
and
mov
pop
mov
mov
mov
lcall
push
popf
sti
fxch
jge
lods
iret
lret
enter
push
lahf
sbb
push
pop
sub
inc
test
insb
and
pop
int
add
aaa
dec
cmp
sbb
out
negl
out
jecxz
inc
adc
das
das
dec
fcomps
xchg
lods
cmp
sbbb
mov
sub
sub
in
in
fildll
cmc
setbe
mov
repz
into
das
fwait
mov
negb
inc
push
add
roll
mov
inc
adc
mov
imul
push
bound
cmp
repnz
insb
fstpt
lods
and
push
pop
je
add
es
jno
xor
insl
imul
adc
pop
sti
ret
shrl
inc
stos
jae
cmp
and
scas
aad
fadd
jle
push
mov
sarb
inc
jecxz
jns
std
or
test
stos
js
jae
leave
test
inc
push
f2xm1
hlt
std
cmp
cvtdq2ps
stos
mov
ss
add
imul
mov
call
xor
movlhps
mov
movsb
dec
insl
push
lcall
testl
xor
bound
ja
movsb
sub
mov
arpl
and
push
adc
cli
jno
xbegin
jg
or
dec
mov
jb
mov
and
loop
cmp
sti
push
test
pushf
movsl
mov
mov
pushf
les
mov
ret
aaa
inc
dec
mov
push
outsb
inc
shlb
ja
push
in
add
test
jp
aas
cwtl
mov
and
mov
xchg
xchg
int3
add
sub
pusha
test
push
push
icebp
mov
repnz
inc
iret
sbb
adc
movsl
imul
lods
mov
push
push
icebp
mov
mov
mov
lcall
nop
stos
inc
push
div
and
xchg
shll
xlat
inc
lea
add
add
pop
sbb
or
loopne
and
outsb
ljmp
mov
pop
das
cmp
push
bound
scas
jb
stos
scas
outsl
fidivs
add
and
sbb
sub
aam
test
lcall
sbb
push
and
sub
call
mov
jge
or
xor
out
add
lock
mov
leave
and
lds
mov
pop
loope
mov
gs
imul
repz
push
in
pop
in
mov
shlb
cltd
push
dec
sub
mov
dec
lahf
mov
xor
and
negl
mov
stos
cmp
rorb
pop
dec
push
in
nop
loopne
mov
in
cmp
mov
xor
lods
fnstsw
pop
dec
push
nop
add
dec
leave
nop
das
jmp
stos
pushf
cmpsb
push
or
push
movhps
enter
and
mov
jo
shl
movups
jp
mov
into
mov
xor
js
clc
add
jb
fsubrp
jae
addr16
xor
ja
into
jp
cmp
push
mov
adc
mov
pop
mov
jl
ss
jge
mov
inc
adc
xor
enter
nop
iret
add
fldenv
pop
dec
mov
pushf
fstps
insb
adc
lods
adc
dec
stos
mul
sub
cmp
sbb
mov
or
push
or
mov
into
mov
inc
sbb
push
adc
pop
xor
push
int
jo
fucomp
repz
mov
sahf
mov
jg
xor
or
jp
dec
mov
add
xchg
mov
in
nop
aam
or
xchg
fisttpl
aaa
pop
push
fwait
mov
cmp
outsb
data16
and
add
nop
pop
jae
aaa
pop
push
mov
inc
lods
mov
xchg
sub
xchg
push
add
paddsb
das
outsl
cmpsl
test
mov
jp
in
xchg
or
sete
repz
icebp
sub
pop
mov
std
inc
out
mov
cmp
push
or
imul
mov
jle
mov
mov
cmp
cwtl
into
jecxz
adcl
out
sbb
push
dec
lret
sbb
daa
out
cmp
pop
sub
push
inc
fldenv
push
pop
in
stc
cmp
enter
dec
push
mov
pop
cmp
or
jne
dec
aaa
lea
inc
arpl
adc
jmp
push
pop
imul
outsl
push
cmpsb
mov
rcl
xlat
mov
xor
dec
and
addl
into
mov
cs
aas
jp
iret
imull
push
frstpm(287
test
out
popf
jb
in
setne
in
outsl
and
cmc
aaa
push
in
int3
fsubrl
repz
jmp
lods
fsts
add
cs
mov
push
shl
out
xchg
adcb
xchg
pusha
imull
fistpl
daa
aaa
fisubrs
adc
aaa
addr16
adc
shlb
fldl
xchg
ja
push
xor
fstps
inc
sti
shrb
and
jnp
imul
mov
pushf
inc
xchg
stc
movsb
mov
lret
inc
popf
lea
test
fsubrl
push
mov
or
pop
dec
adc
mov
push
stc
adc
mov
or
icebp
aad
mov
stos
pop
sbb
cmp
xor
dec
repz
lock
mov
sub
cmpsb
xchg
bound
pop
cld
sbb
or
dec
mov
cltd
dec
dec
sub
mov
mov
adc
mov
stc
cmc
aas
mov
lds
scas
cmp
call
cmp
addr16
jle
movsb
dec
pop
sbb
test
dec
inc
movsl
cwtl
mov
iret
mov
mov
push
aam
push
cmp
pop
mov
imul
pop
inc
push
pop
test
shlb
push
and
push
enter
adc
push
fs
incl
addr16
out
jecxz
popf
mov
pop
mov
cwtl
push
ss
or
mov
insb
ds
lahf
push
sysexit
mov
adc
push
sarb
dec
cltd
dec
ja
test
cmp
aad
mov
fcmovnu
add
mov
ja
stos
adc
aam
stc
into
imul
mov
cmp
xchg
push
mov
sbb
nop
or
add
test
fsubp
scas
mov
sbb
lock
and
lods
icebp
pop
int3
jnp
and
cmc
mov
cli
in
scas
dec
int3
jae
cmc
or
fld
jne
lcall
jno
and
push
or
sbb
jnp
sub
fldt
aaa
out
lods
out
add
shld
add
movsl
xchg
fimuls
lods
inc
pop
cmp
push
test
jmp
clc
in
call
jno
data16
sub
xchg
gs
xor
sub
insb
mov
lea
stos
rorb
push
lahf
mov
xchg
dec
std
daa
and
xor
mov
stos
xor
cmp
pop
cmpsb
adcl
andl
adc
and
test
add
pusha
jbe
jecxz
dec
fstl
pop
inc
test
xchg
and
mov
dec
mov
cmc
or
mov
test
loop
call
ucomiss
adc
test
pop
inc
push
mov
adc
dec
or
adc
int3
loopne
jp
ja
mov
mov
imul
inc
mov
xchg
fstpt
jl
lds
leave
out
pop
xlat
push
call
sbbb
loope
pop
cmc
jns
push
mov
add
cmpsl
test
and
fidivrl
aam
pusha
aas
ret
scas
sbb
and
and
inc
jb
cmpsl
sahf
lahf
loope
cmp
xchg
fs
dec
in
mov
xchg
out
lods
mov
call
xor
adc
stos
cmp
mov
push
jmp
mov
in
sub
and
push
fs
and
ret
cmpsb
shl
jg
xor
mov
push
prefetch
push
aad
repnz
inc
js
into
mov
push
fidivrs
inc
cmp
sbb
rcl
mov
and
xchg
ret
int3
and
xchg
sbb
pop
mov
mov
pushf
xchg
outsb
jmp
mov
das
cmp
fs
xchg
mov
ljmp
adc
jmp
dec
in
mov
imul
jl
xchg
mov
pop
xchg
or
enter
mov
add
stc
js
mov
xchg
mull
pop
lcall
mov
test
xchg
inc
xchg
adc
fidivrl
cmpsb
das
aad
hlt
in
dec
test
mov
cli
mov
add
roll
movl
mov
lret
stos
ja
subb
jno
sbb
les
and
loope
loopne
data16
and
xchg
icebp
mov
jmp
mov
pop
inc
dec
xor
mov
xlat
and
hlt
sub
sub
mov
sbb
or
lds
xlat
mov
mov
fiaddl
mov
je
gs
mov
adc
xchg
mov
push
or
xchg
inc
stos
sbb
into
cmp
or
pusha
popa
popf
mov
popa
mov
mov
loopne
add
inc
pop
dec
xchg
push
rcl
ss
xor
leave
push
mov
std
sarb
and
loopne
pop
stos
inc
aad
ja
cltd
mov
mov
mov
aas
out
in
push
dec
mov
inc
and
xor
xchg
subb
xchg
rcrb
sbb
mov
icebp
jle
sbb
sbb
stc
lea
jno
lds
sbb
imul
dec
sbb
jnp
pop
in
jge
in
clc
test
jg
jecxz
out
ror
xchg
cli
jg
push
es
pop
inc
mov
in
stc
mov
cmpsl
jecxz
insb
inc
sub
ud1
add
cmovb
cmpsl
sub
mov
jmp
test
test
js
pop
sbb
pop
pushf
test
cs
sbb
test
adc
dec
popf
pop
push
push
sbb
loope
test
std
push
test
int
mov
test
sbb
sub
popf
aad
pop
xchg
xchg
pushf
dec
xchg
push
out
pushl
and
dec
mov
inc
inc
inc
jmp
jg
or
and
jl
mov
lea
out
sbb
add
sub
pop
xchg
movsl
mov
insb
and
clc
test
jge
sub
xchg
fldz
mov
aad
nop
lcall
lods
lock
popf
mov
mov
or
mov
lods
packsswb
add
sub
or
inc
aam
negb
jne
or
inc
mov
xchg
push
ja
mov
lock
push
pop
scas
sbb
cmp
mov
add
dec
push
fldt
add
out
pop
out
movsl
loop
les
ljmp
sbb
pop
fs
cwtl
pushf
stc
pop
shll
ss
xor
xor
cld
sub
pop
dec
shll
inc
test
and
lods
int
nop
and
mov
arpl
and
insb
add
xchg
jmp
push
fists
xor
push
dec
subl
jge
popf
adc
sub
enter
inc
lahf
lods
out
int
or
cmc
jo
sbb
push
imull
scas
test
fwait
cvtdq2ps
and
mov
sbb
cmp
leave
and
add
push
cmpsb
and
loope
and
negl
sub
ss
arpl
inc
or
xchg
mov
js
ss
mov
mov
mov
sub
es
movsl
loop
std
mov
mov
and
push
pushf
ljmp
in
pop
loope
add
mov
jae
rcll
jb
out
std
xchg
sub
rorl
mov
jo
xor
add
int
dec
mov
ret
scas
fs
jle
movl
rolb
repz
icebp
xchg
or
or
jno
sub
rcr
jle
jno
cwtl
rorb
xor
fisttpl
add
xlat
int
cmp
mov
xchg
out
pushf
dec
cmovle
push
cs
aaa
push
dec
or
stos
repz
pop
lock
pop
adc
mov
push
or
mov
mov
scas
mov
jge
mov
ja
outsb
pop
xlat
add
addr16
mov
pop
ja
movsb
xorl
movsb
lret
adc
stc
div
jg
xchg
imul
aaa
into
popa
gs
mov
dec
mov
cs
mov
adc
dec
hlt
mov
fincstp
call
aad
out
cld
pop
arpl
cmp
daa
ror
fcomps
cmp
mov
cmpsb
fnstenv
cmc
sub
mov
fildl
mov
mov
xchg
dec
mov
push
cmc
sbb
mov
dec
xor
icebp
jl
pop
sbb
push
adc
call
xchg
les
fisttps
mov
and
sbb
push
mov
fs
or
push
ja
sti
mov
add
jne
unpcklps
pop
sbb
ret
movq
insl
cltd
shl
ja
mov
inc
sub
push
add
pop
test
addr16
push
out
loop
or
jb
iret
cmp
outsl
inc
inc
xlat
filds
cmc
mov
jnp
mov
xlat
mov
dec
aaa
inc
pusha
loopne
cwtl
mov
xchg
jb
rclb
adc
push
loop
pusha
mov
jo
gs
stos
xor
test
add
jmp
dec
jge
hlt
or
or
ret
pusha
loopne
add
sub
mov
jne
loop
push
aaa
fs
shrl
jbe
aam
inc
fucom
xchg
outsb
clc
jecxz
shlb
push
dec
xlat
int
pop
fstpl
inc
ja
and
out
pop
fs
cmp
mov
cltd
xor
mov
insl
jno
mov
outsl
pop
jp
scas
cmp
xor
cmpsl
mov
scas
inc
rolb
push
out
fisubrs
aas
xchg
mov
push
sub
sub
test
push
xchg
shll
jo
pop
dec
pop
push
mov
addl
adc
movsb
push
call
cmpsb
adc
inc
xchg
or
pop
out
outsb
in
popf
mov
jl
mov
lcall
fidivl
jno
sbbl
inc
clc
mov
fimull
sbb
in
mov
push
mov
sbb
cmp
jnp
inc
repnz
aam
ljmp
cmp
xor
inc
in
pop
add
mov
and
mov
xchg
test
int3
or
adc
lods
cmp
hlt
push
scas
or
jg
push
or
outsb
mov
or
rorl
mov
leave
sbb
insl
popf
pop
pushf
lods
pop
negl
inc
add
or
jl
inc
cmp
aad
xchg
dec
cmp
cmp
ret
xchg
arpl
xchg
int
mov
test
mov
inc
lds
fadds
sbb
into
cs
insl
outsl
jnp
iret
and
imul
cmpsb
fcomps
cmp
lods
in
popf
in
sub
ds
lds
loop
xchg
aaa
push
in
and
fiadds
sbbl
inc
add
sub
add
aad
mov
clc
push
pop
xor
pushf
xchg
aaa
mov
aad
lds
xlat
dec
sub
addr16
jbe
lahf
mov
nop
lret
xor
fmul
jo
mov
cmpsb
clc
mov
xchg
pop
jo
xchg
cmpsb
cld
or
push
es
adc
mov
lret
ljmp
xlat
dec
cmp
xlat
js
outsb
scas
fstpl
imul
xchg
sbb
add
add
pusha
in
xor
ret
aaa
adc
mov
in
pop
jecxz
nop
push
mov
xor
test
bound
cltd
jmp
mov
aaa
mov
jb
aam
int3
jecxz
mov
outsb
add
orl
dec
pushf
and
or
es
jb
sbb
dec
jge
outsb
dec
inc
cmp
arpl
push
repz
mov
mov
js
fcmovbe
ljmp
xchg
or
cmp
cmp
lods
xchg
cld
test
jbe
call
cs
cmpsb
mov
xchg
add
inc
cmc
mov
lret
inc
dec
and
push
ret
adc
jae
and
adc
imul
xlat
int
out
mov
shrb
mov
jge
jbe
out
mov
cmp
inc
dec
stc
js
and
pop
or
pop
cs
ja
xchg
adc
mov
mov
sub
jmp
lahf
xor
dec
add
mov
jns
gs
clc
xchg
mov
adc
insb
pop
cwtl
xchg
outsb
mov
xor
and
cmp
sbb
aas
sbb
xor
loop
loopne
sub
test
pop
js
cmpsb
xor
jns
movsl
push
add
sbb
dec
test
add
in
sarw
daa
and
cmp
fwait
lahf
fstps
cmp
mov
mov
outsb
adc
mov
les
push
jle
enter
lods
sub
aad
leave
sbb
ret
cld
push
bound
jg
fistps
or
imul
sahf
shrl
jns
stos
jno
in
leave
mov
les
scas
push
adc
out
push
loope
and
jae
dec
xchg
les
push
nop
mov
imul
mov
rclb
jb
jns
inc
orb
or
aaa
sbb
pop
cmpl
mov
mov
in
jmp
scas
mov
xchg
mov
pop
movl
pop
inc
in
das
jp
adc
ror
lea
push
ret
push
mov
iret
dec
mov
xchg
dec
dec
dec
jae
xchg
push
sbb
aas
lret
pop
mov
or
out
loopne
inc
sar
ret
out
je
cli
stos
fisttpll
shll
pusha
push
pop
mov
xor
shrl
loope
jmp
loopne
jge
pop
pop
mov
mov
fucomi
xchg
xrelease
fcmovnb
lods
inc
cmp
in
mov
inc
stos
cld
pushf
js
dec
jae
imul
mov
in
ds
adc
mov
mov
and
push
adc
mov
mov
rcrb
or
push
cltd
push
cmp
test
add
loope
ss
test
test
mulb
push
push
loop
fidivs
or
xchg
pop
push
jnp
dec
adc
xor
rcll
add
sub
int
push
lea
ja
xchg
enter
lret
out
fwait
mov
mov
jl
and
pop
sbb
sbb
xchg
in
mov
mov
cld
jno
xchg
cld
out
mov
jae
dec
ljmp
leave
or
mov
call
mov
cld
add
mov
arpl
jnp
cmp
pusha
dec
lret
movsb
push
call
dec
loope
sti
inc
pop
insb
sbb
fwait
inc
imul
insb
adc
sahf
loop
ss
shll
xchg
out
cmpsb
int
push
sbb
jl
cmp
push
sbbb
js
pushf
test
in
push
test
mov
add
or
mov
lds
cwtl
inc
shlb
and
inc
push
test
push
jle
out
movsl
loop
test
and
stos
int3
cmp
cmp
sarb
pusha
push
cmpsb
mov
test
and
pusha
int
aaa
pop
jg
test
fstpt
int
dec
hlt
popf
addr16
addr16
mov
xchg
push
xor
dec
fsubl
pushf
mov
sar
xlat
icebp
mov
jmp
or
jp
ljmp
lret
aas
xchg
testb
das
test
mov
call
add
jbe
mov
jbe
andl
xchg
fwait
das
nop
out
mov
pop
sahf
mov
mov
pop
push
mov
cmp
mov
rclb
lds
cmpsl
xor
ds
mov
movsl
dec
push
pop
bound
mov
cmc
daa
sbb
mov
xor
dec
xchg
popa
xchg
mov
push
repz
inc
mov
stos
out
push
sbb
pop
les
push
push
movsl
js
es
ljmp
mov
cmpsb
add
add
fdivrs
dec
jecxz
and
cmp
pop
movsl
push
mov
jmp
rclb
rorb
jmp
adc
xor
fidivs
push
and
daa
into
lret
repz
add
inc
ja
cmpsl
scas
lret
xchg
fstp
or
jmp
es
push
sbb
mov
jns
adc
mov
lea
out
int3
xchg
cmc
and
int
dec
jo
mov
jns
adcl
paddsb
adc
stc
xchg
xchg
insl
push
orb
xchg
aam
cli
aas
mov
fs
loope
and
jne
cmp
jbe
test
and
out
and
outsl
cmpsl
ds
out
mov
xlat
adc
add
fxsave
mov
push
hlt
add
shrb
ss
loopne
cmp
xor
jge
out
insl
xor
orb
ja
pop
sbbb
outsl
shll
jl
insb
xor
stos
aaa
mov
mov
cltd
in
je
xor
daa
jae
daa
mov
mov
jmp
xorb
lret
jb
xchg
orb
or
jecxz
pop
lret
xor
cmpsb
mov
sub
jp
leave
mov
rcl
jp
dec
fbstp
cmc
popa
insl
rorb
mov
jge
or
into
daa
out
popf
dec
inc
pop
out
mov
imul
sbb
addl
xor
insl
ja
push
xor
dec
jmp
dec
lahf
test
mov
dec
aaa
push
mov
dec
xor
inc
push
mov
ja
mov
aaa
sbb
jmp
pop
jae
and
pusha
mov
movsb
jb
adc
dec
xchg
mov
jle
mov
pushf
cmpsb
rcrl
int3
popa
xchg
cmpsb
add
cli
pop
xchg
mov
sub
outsl
sbb
pop
adcl
xchg
jl
test
pushf
mov
fistpl
les
cmpsb
inc
arpl
add
push
loope
xchg
sarl
in
add
js,pn
fidivrs
cs
and
clc
and
pop
dec
fisubrl
and
inc
or
or
and
mov
xchg
push
pop
xchg
dec
xor
sti
xor
subl
ficoml
inc
add
mov
push
or
scas
push
shlb
sub
and
sub
adcl
jle
rol
pushf
or
and
sub
push
pop
pusha
clc
xor
pop
mov
mov
jl
lods
out
mulb
repnz
das
lret
scas
fisubl
add
jnp
cld
xor
lret
dec
jno
jge
enter
mov
imul
xchg
mov
xchg
movsl
mov
mov
dec
jnp
shrl
xchg
stos
adc
test
cmp
pop
test
mov
pop
leave
es
clc
ret
insl
cmp
jle
and
imul
fst
jp
sub
pushf
mov
sub
rorb
mov
loope
loopne
mov
out
xor
jne
inc
or
sub
adc
pushf
jle
mov
dec
fstpt
or
ja
out
es
xchg
ror
and
cmc
aaa
xlat
cmc
mov
out
ror
ljmp
hlt
stc
pop
rcll
cmp
mov
sbb
cwtl
notl
cltd
sub
push
repnz
cmc
jnp
jne
xchg
cmpsl
mov
fildl
and
cwtl
popa
mov
adc
in
xor
andl
sub
shll
pop
xchg
sahf
add
jbe
ret
or
push
cmp
lods
sbb
out
mov
push
mov
and
arpl
insb
movsl
push
cmp
jmp
jmp
cmc
mov
mov
imul
jmp
addr16
mov
jecxz
hlt
out
cmp
stos
adc
rcl
sub
add
xchg
insb
test
sub
or
push
cmpsl
and
adc
sub
adcl
in
outsb
test
sbb
shr
or
inc
clc
push
jl
test
pop
mov
and
sub
sti
mov
pop
jb
aam
dec
addr16
cmp
jmp
jmp
mov
lahf
push
mov
repnz
adc
inc
jne
mov
sub
jle
bound
jge
sub
pop
add
cmp
sbb
push
nop
cmpsb
xor
movsl
shrb
inc
in
adc
andl
mov
fisubrl
jns
cltd
frstor
nop
outsl
std
mov
mov
lahf
cld
pop
add
cmc
add
stos
and
cmovbe
cmp
int
insb
lret
or
mov
mov
push
fldln2
nop
mov
adc
push
cs
fdivrp
push
pop
mov
loop
orl
sti
pop
xchg
sti
sub
jbe
mov
sbbl
shlb
sbb
lret
pop
in
movsl
xor
or
mov
subb
sub
cmp
je
jne
outsb
cld
into
add
cmc
mov
dec
mov
js
jno
cmp
xor
sbb
pop
or
test
out
cwtl
cmp
mov
in
jno
shll
jae
lods
xor
outsb
mov
pop
aad
xchg
jbe
and
sbb
aam
add
add
int3
dec
sbb
mov
adc
lret
loope
jno
mov
in
ss
leave
jmp
mov
dec
es
cmpsl
pop
loopne
cmp
fsubr
ret
xchg
outsb
test
out
lret
arpl
cmova
es
pop
pop
pop
mov
fcoms
cmpsb
ljmp
inc
les
clc
stc
push
repnz
pop
pop
std
lcall
sbb
adcb
icebp
xor
cltd
pop
cmpsb
push
lea
stc
push
fsts
jmp
push
xor
shrd
push
mov
mov
jo
mov
fnsave
rol
xlat
inc
sub
dec
cmpsl
and
dec
mov
cwtl
repnz
or
rclb
jns
pushf
inc
mov
lret
lods
jp
cli
scas
jge
push
sbb
cmpsl
mov
add
mov
cmpb
jl
loopne
and
fs
cmc
pop
sbb
not
jns
jecxz
or
es
in
rorl
test
pop
inc
lods
lcall
and
call
out
inc
scas
bsr
into
in
mov
sub
mov
cmp
jb
dec
repnz
pusha
fstpl
fwait
xchg
stos
jns
mov
or
cld
sbb
jp
imul
ffreep
notb
inc
adc
mov
test
mov
rcrl
xchg
imul
cmp
andl
aaa
jmp
cmc
js
xchg
fs
decl
pop
lods
mov
inc
cli
mov
mov
jnp
inc
lahf
lret
repnz
ljmp
pop
push
lret
push
push
and
cwtl
jae
bound
sub
shrb
mov
sub
pop
movsl
cltd
and
push
jno
adc
mull
xchg
jbe
jl
dec
sub
sub
inc
pop
jg
add
insl
mov
or
outsb
mov
inc
cmp
fisubrs
fistps
mov
sbb
loopne
rcll
aas
movsb
fcoml
ret
jge
into
shlb
lahf
je
mov
mov
popa
push
sbb
and
out
jo
xchg
and
jge
lret
fistpl
jno
jecxz
xchg
xchg
jo
push
push
int3
clc
test
xchg
dec
adc
rorb
sub
lea
sbb
aas
lds
idivl
and
cmc
aam
xor
xlat
jg
leave
in
sbb
loop
int3
pop
push
add
cmp
add
dec
test
imul
ja
enter
and
adc
mov
pop
mov
and
fcoml
add
pusha
popa
jns
inc
popf
jae
pop
stos
mov
xchg
xchg
test
imul
and
cltd
arpl
insb
mov
jmp
xor
cmpsb
mov
cwtl
js
add
xor
or
xchg
add
or
xchg
lcall
lret
pop
lock
xlat
pop
nop
dec
jge
outsb
cvtpi2ps
stos
clc
lods
xchg
pop
jecxz
lock
fidivrl
add
xchg
xchg
mov
rcrb
push
ret
in
js
sub
pop
and
test
pop
xchg
jne
or
insb
dec
push
mov
adc
and
es
mov
mov
insb
xchg
xchg
fldl
push
je
lahf
push
ds
pop
pop
and
scas
lea
ljmp
cltd
jge
insl
jp
mov
dec
rorb
jns
insl
fistpll
popl
jmp
incb
mov
aaa
jecxz
sub
inc
xchg
add
xchg
dec
mov
lret
and
daa
mov
pop
les
ss
pop
imul
call
mov
loope
insb
or
pop
cs
mov
dec
push
sbb
cmpsb
jo
cmp
cmp
lds
fcomps
push
push
sbb
mov
mov
loopne
mov
sbb
mov
lret
mulb
popf
nop
stos
fadds
cmp
lahf
sbb
xchg
int
cmp
push
pop
jnp
pop
inc
pop
xchg
or
mov
imul
pop
add
mov
sbb
jle
aaa
cmc
outsl
mov
call
mov
out
xorb
inc
outsl
xor
sbb
flds
lods
pusha
subb
sbbb
and
jmp
and
jp
fistps
pushf
push
and
sub
sub
adc
cmpsb
mov
cli
ljmp
test
outsl
inc
lahf
andb
adc
push
jge
xchg
add
mov
push
in
pop
or
sub
lods
fidivrs
fistps
mov
mov
std
insl
push
xchg
imul
insb
imul
hlt
or
das
sbb
fisubrl
dec
jo
outsb
cltd
jge
movsb
aam
adc
pop
sbb
mov
aam
push
inc
mov
mov
js
adc
and
iret
mov
mov
cmp
dec
sbb
dec
out
mov
cmpsb
aas
pushf
decl
mov
xchg
pop
mov
cwtl
xchg
and
aaa
cmc
popa
cmp
lcall
push
int
cli
inc
sarb
setl
jl
push
in
sub
push
sub
and
jbe
cmp
insl
lea
xor
add
mov
cmp
cmp
cmp
mov
notl
lret
xor
mov
push
stos
mov
push
mov
pop
int3
mov
jge
das
lods
out
fsts
enter
es
push
iret
jge
or
shl
adc
ja
jne
mov
dec
dec
jle
aam
sbb
or
cmp
pop
ljmp
or
test
popf
rcrb
dec
bound
mov
lahf
iret
mov
dec
into
cmp
push
test
add
dec
ja
cmc
cmpb
ret
cmp
bound
push
adc
lahf
xchg
add
ljmp
fsub
pushf
jp
push
pusha
mov
dec
iret
and
insb
pop
sbb
je
subb
es
mov
inc
dec
test
add
xchg
outsl
pop
mov
xchg
or
ret
cld
jno
outsl
xlat
aad
xchg
in
xor
mov
fcoms
aaa
xor
ljmp
cmp
pop
mov
pusha
mov
test
mov
lea
clc
xlat
sbb
stc
adc
cmp
cwtl
fwait
mul
adc
adc
orl
lock
scas
and
cs
inc
xor
cmp
jbe
bound
push
into
sub
mov
jne
xor
scas
sub
mov
mov
pop
popf
inc
adc
mov
sub
repz
mov
mov
push
xchg
adc
dec
cmp
sahf
or
aad
jnp
xchg
cmc
addr16
lock
rcll
mov
pop
in
jne
addb
jg
mov
sbbl
jo
aas
js
nop
notl
mov
lret
sahf
cmp
fisttpll
cmpb
das
mov
scas
std
mov
mov
inc
test
aas
out
mov
xchg
daa
cmp
pop
xor
mov
xchg
pop
mov
lds
or
lcall
sbb
pop
mov
lahf
lret
enter
mov
test
dec
jg
xchg
lods
push
adc
mov
ret
repz
xchg
push
sub
cmp
jne
movsb
sub
mov
xor
mov
js
mov
out
int
pop
dec
jno
xchg
lock
sub
lods
add
or
setg
std
imul
outsb
stos
mov
dec
add
mov
mov
pusha
movsb
les
cmp
or
hlt
jg
or
mov
or
mov
push
loop
stos
sbb
push
in
sub
out
icebp
mov
xor
int3
ja
test
es
mov
jne
lret
xchg
sarb
fildll
pop
fisttpl
cmpsb
xor
out
gs
mov
pop
mov
push
fsts
push
fcmovne
xor
aad
pop
jle
es
push
xchg
jne
xor
stos
mov
xor
lods
pop
not
push
cmp
inc
mov
bound
xor
cmp
test
ret
mov
mov
loope
jns
rcll
adc
xchg
xor
xchg
imul
cmp
inc
dec
mov
cmpb
pop
out
adc
and
aad
and
jae
mov
xchg
pop
mov
inc
movb
test
jno
dec
ret
or
dec
jo
mov
divb
jne
sbb
xchg
xor
sahf
jae
and
xor
lret
xchg
jl
sub
pop
test
sti
dec
mov
cmp
or
mov
fdivrs
xchg
out
or
xchg
cmp
div
in
cmp
mov
stc
rolb
cmp
pop
sbb
adc
movsl
int3
pop
fldl
cmp
test
out
cmp
add
xchg
mov
js
aad
jb
sahf
add
mov
sahf
in
fidivrl
push
loopne
cmp
data16
inc
jle
xor
dec
ljmp
arpl
cmp
pop
jns
mov
jl
pop
push
mov
mov
sbb
cmpsb
cmpsb
mov
push
xor
xor
sti
addb
jb
push
stos
stos
enter
cmp
sahf
in
out
adc
cs
jb
int
je
add
in
jns
jl
dec
or
idivl
ret
push
mov
mov
adc
lea
pop
xor
cmpsl
fldl
dec
mov
sbb
int
xor
mull
ja
mov
sub
mov
add
aas
into
dec
xchg
aad
add
shrl
ficoml
fstp
adc
popf
sub
sub
jmp
ljmp
and
add
roll
movsl
or
jp
in
into
xor
adc
jl
sub
ljmp
dec
pop
xor
dec
call
cmp
call
adc
arpl
mov
pop
push
cmc
daa
xor
clc
dec
cmpsb
fwait
movsb
hlt
daa
pop
mov
push
xorb
pop
cmpsb
sub
mov
add
aas
pop
push
mov
hlt
add
ds
repnz
mov
pusha
cmc
loop
out
ss
fdivrs
xlat
nop
sbb
in
nop
cwtl
ror
int3
scas
lret
cwtl
sbb
adc
inc
fimull
cmpsb
sub
arpl
rcrl
aas
cli
mov
push
orl
or
push
incl
lods
pop
icebp
pop
xchg
lret
adc
int
inc
cs
js
xchg
adc
xor
pusha
mov
jne
pushf
xchg
mov
jle
das
sub
cmc
jge
fimuls
in
pop
movsl
jp
jno
push
sbb
pop
outsl
mov
or
icebp
pop
dec
xor
jno
pop
mov
adc
cmc
cltd
mov
mov
jg
inc
or
pop
sub
push
scas
mov
mov
sbb
imull
subb
xchg
push
outsb
mov
int
lods
and
imul
stos
int3
mov
dec
cmp
insl
loop
repz
std
cmpsl
xor
lret
mov
add
ja
int
lea
push
mov
mov
push
jl
test
lahf
bound
mov
mov
js
lcall
movsb
pop
and
push
sti
cmp
mov
cmp
ja
ror
incl
mov
mov
aas
pusha
pop
ja
js,pn
sbb
pop
and
mov
jne
dec
mov
cwtl
mov
test
sbb
sub
jns
sbb
mov
cltd
shlb
dec
mov
in
or
loope,pt
and
mov
pop
mov
dec
sbb
ljmp
sbb
sbb
lret
out
mull
sub
into
push
sub
inc
inc
and
inc
lea
insl
sub
icebp
inc
pop
sbb
mov
mov
sahf
lret
mov
add
loopne
out
xchg
lea
or
fadds
inc
jmp
add
adc
out
cmp
or
ret
push
push
sbbl
pop
mov
or
test
sar
mov
push
ds
xchg
cmpsb
sti
in
rolb
ret
lea
movsl
xchg
aad
and
jb
mov
and
sbbb
stos
mov
js
jp
mov
jnp
je
pop
jmp
jno
push
int3
push
pmaddwd
mov
xchg
mov
ja
cmpsl
jg
inc
xor
xchg
and
or
loop
sahf
in
fisttpl
rcl
repz
jecxz
cld
dec
arpl
leave
dec
mov
pop
les
lds
inc
inc
pop
movsb
dec
lods
movsl
bound
inc
mov
pop
jae
push
xchg
scas
ror
in
inc
filds
inc
insb
dec
cltd
test
insb
inc
adc
inc
aas
inc
lock
adc
sub
leave
mov
inc
mov
or
push
dec
in
cmpb
or
add
cmpsl
int3
jmp
mov
mull
out
xor
xchg
test
repnz
mov
js
gs
and
jnp
mov
add
mov
inc
imul
fisttpl
jns
pop
push
sub
std
add
test
outsl
xchg
push
and
xchg
mov
and
mov
dec
xor
cwtl
dec
dec
jecxz
cltd
jmp
cld
sub
jne
mov
daa
mov
shll
repnz
fimull
and
pmaxub
pushf
mov
mov
jnp
sbb
push
sti
test
fsubl
add
movsb
sahf
sbb
inc
jnp
mull
movsb
inc
out
frstor
bound
pop
dec
lods
cmpsl
mov
pop
ljmp
mov
jne
push
sbb
loop
sbb
push
insb
frstor
inc
leave
dec
stos
shlb
mov
leave
mov
jge
dec
stos
int3
push
fidivrl
inc
pop
test
jns
cltd
aad
rcll
andl
xchg
mov
inc
adc
pop
sbb
inc
loop
das
mov
pop
sbbb
nop
mov
push
sub
cmc
add
stc
pop
fists
arpl
mov
mov
js
sti
ret
loopne
push
aam
xchg
mov
out
xor
xor
push
rcrl
jmp
jecxz
and
adc
les
scas
mov
cmp
cmpsb
adc
sub
and
aas
xor
in
in
mov
pushf
mov
cmpsl
cmc
test
xlat
loop
mov
add
lahf
das
dec
push
les
negl
push
push
jle
or
fisubrl
dec
popa
cltd
arpl
jo
fnstcw
xchg
adc
cs
push
mov
enter
adc
bnd
in
and
out
imul
in
stos
cmp
cmp
mov
rcll
adc
pusha
xchg
dec
out
cmpsb
fdivrl
int
lds
ds
pop
lret
andl
ffreep
jns
xchg
push
outsl
push
xchg
inc
pop
repnz
jnp
mov
test
push
dec
cmp
mov
js
or
lret
inc
adc
jnp
inc
ljmp
xchg
jno
and
cmp
mulb
jle
mov
in
fidivrl
pop
adc
sbb
test
sahf
lock
jnp
lea
or
lock
dec
iret
jne
stos
adc
adc
nop
movsl
sbb
adc
iret
push
mov
and
pop
imul
push
mov
mov
push
push
pop
push
adc
gs
xorb
outsb
test
jmp
data16
and
mov
push
call
inc
xor
sub
dec
xchg
mov
sbb
mov
aaa
xchg
pop
ret
mov
sbb
add
jo
xor
lods
inc
push
scas
cmp
les
sbb
fcoml
int
jb
iret
sahf
inc
pop
adc
pop
push
push
cltd
cmp
cmpsb
orl
inc
aam
or
out
jge
imul
repz
mov
pop
sbb
dec
xchg
xchg
and
lock
std
scas
mov
das
and
das
lods
test
test
mov
push
add
and
or
mov
mov
cs
mov
fmul
fwait
dec
inc
ja
test
sbb
popf
scas
mov
stc
bound
testl
sarb
test
sahf
lret
push
cmc
fdivl
mov
fsub
push
insl
cli
lock
jbe
stos
rclb
and
inc
sub
lds
dec
mov
cmp
imul
and
scas
push
xor
movsb
fstl
xchg
sub
push
loope
mov
ret
xor
jmp
push
push
rorl
test
or
popa
inc
das
aam
test
loop
xlat
jle
pushf
mov
mov
insl
pop
adc
and
arpl
pusha
sbb
and
stc
push
out
inc
or
cs
call
es
adc
sub
mov
add
or
push
jecxz
adc
cld
imul
das
aam
dec
repz
mov
inc
ret
xchg
jbe
mov
lds
jne
cmc
mov
pusha
sub
lahf
mov
cmc
cli
xchg
aas
insl
lods
mov
pushf
xchg
or
loopne
cmpsb
je
xlat
or
int
jns
sub
jmp
and
rorb
or
or
imul
jae
push
mov
enter
jo
xor
dec
and
in
or
notl
adc
xchg
inc
ss
jmp
popa
dec
cmp
cmp
sti
sub
cli
int3
dec
lcall
jno
popf
subb
in
scas
andb
ss
mov
into
push
cmp
jmp
mov
outsb
sti
jnp
lret
sub
fbld
and
pop
pushf
loope
cwtl
push
sbb
jmp
and
or
add
repz
stos
pop
sub
loopne
ljmp
sti
add
movsl
inc
adcb
repnz
jnp
lds
out
push
sub
hlt
out
mov
lods
repz
xchg
ret
mov
push
into
push
sbb
xor
pop
adc
lock
es
mov
imul
xor
lods
testl
push
cmp
loop
adc
fisubrs
push
sbb
setg
mov
dec
int3
imul
cld
aad
adc
cmc
lret
jb
sub
sbb
pop
out
mov
adc
cwtl
adc
in
loope
xchg
cltd
and
inc
rclb
test
insb
in
push
push
insb
push
push
aaa
or
repz
mov
int3
insb
mov
mov
insb
mov
xor
ss
lock
sub
rorb
jb
jo
sub
mov
pop
pusha
sbb
jp
aas
lock
jne
dec
or
mov
mov
xor
rcrb
cmp
xor
xchg
aas
and
iret
cld
out
lcall
outsb
insb
sbb
call
push
in
fimuls
adc
ss
shrb
cmp
scas
lods
push
cltd
mov
pop
roll
adc
lods
call
mov
xor
push
xor
dec
lea
xor
pop
scas
dec
and
stos
jmp
mov
xchg
cmp
xlat
cmp
pop
mov
fs
push
ja
jb
sbb
andb
stc
leave
cwtl
icebp
dec
or
rorl
adc
cmp
lock
sub
mov
xor
jns
xchg
cmp
push
int3
adc
inc
xchg
fadds
adc
outsb
push
loope
sbb
fidivrs
cli
loop
xor
mov
sbb
xchg
add
ss
mov
and
mov
fidivs
sbb
cmp
mov
in
jmp
xchg
mov
aaa
add
pop
cmpsb
jg
xor
into
and
repz
faddp
inc
jle
add
lock
arpl
int3
gs
pop
stos
iret
flds
fisttpl
popf
aam
jb
mov
add
sub
adc
cmp
push
sub
mov
cmp
fimuls
outsl
adc
cld
ds
mov
mov
cmc
movsb
adc
negl
lods
imul
testl
and
add
aad
loopne
cmp
fwait
push
mov
inc
cmp
std
adc
mov
add
jl
cli
sbb
jnp
mov
sbb
sub
into
lods
dec
xchg
inc
mov
loope
hlt
js
mov
xor
cwtl
cwtl
test
sub
ss
inc
push
notl
popa
pop
adc
mov
or
and
mov
scas
sub
mov
xchg
mov
hlt
pop
imul
clc
rcr
lcall
mov
cmp
fstpt
pmaxsw
xchg
clc
daa
fsubr
push
and
xor
cmc
xchg
push
icebp
notl
ja
sbb
mov
mov
aas
mov
mov
test
fdiv
mov
jbe
mov
jb
mov
test
xchg
loop
mov
and
aad
mov
cmp
adc
pop
mov
cmp
bound
jle
dec
inc
or
cmc
push
ret
mov
in
jle
jb
fisttpll
push
rol
ljmp
adc
pushf
mov
fs
dec
pusha
pop
lret
push
sti
mov
sti
inc
mov
aam
adc
fxch
pop
out
adc
enter
cld
sbb
jg
daa
rcl
js
or
outsl
pop
shrb
mov
imul
fimull
ficoml
xlat
fistpl
mov
clc
das
shlb
fimull
sbb
mov
and
popl
push
lock
outsl
xchg
push
cld
xorl
pop
cmc
out
fcoms
mov
cmp
inc
lret
mov
je
sub
out
mov
repnz
xchg
xchg
sbb
push
out
push
or
xor
mov
dec
xor
cli
adc
or
inc
imul
pop
lret
cmp
push
sub
out
std
push
shl
mov
enter
jmp
xor
enter
mov
jp
mov
jbe
stos
mov
clc
in
mov
lods
cmp
jae
stos
stc
mov
jno
mov
pop
mov
dec
loop
mov
jl
jnp
fisttpll
adc
mov
sbb
mov
mov
dec
jae
xchg
mov
lods
shlb
daa
outsl
mull
dec
sub
sub
rcr
imul
scas
cmp
aaa
sub
adc
in
insb
mov
cmpsl
cmp
fwait
not
mov
xlat
popf
nop
testb
add
mov
enter
es
lea
push
inc
mov
mov
dec
repnz
lock
cmp
in
xchg
jae
mov
stos
jne
loop
cmp
xchg
hlt
inc
jle
jge
dec
pop
fsubrl
pusha
lock
push
in
or
shlb
test
mov
jae
or
push
es
pop
sub
aad
testl
popf
repnz
or
add
sbb
dec
push
lahf
inc
jo
shlb
ret
fwait
adc
add
sub
push
aas
pop
xchg
mov
mov
and
test
or
pop
sbb
and
in
es
ja
adc
lds
in
pop
orb
fistpl
cmp
push
sahf
dec
xchg
push
sub
pusha
inc
xor
jmp
pop
adc
cmp
out
jns
or
loope
jecxz
popf
shr
adc
add
popf
ret
imul
xor
adc
push
cmp
push
insb
std
jno
and
dec
inc
inc
inc
pop
lret
sub
fcoms
movsl
mov
loop
lock
or
cmp
jae
inc
inc
outsb
pop
mov
dec
jb
iret
xorl
adc
aas
aam
insb
xorb
iret
mov
movsb
add
stos
insb
lahf
std
fwait
cmpsl
movsl
imul
jp
mov
dec
ja
clc
sbb
mov
sti
pop
cs
xchg
add
pop
cld
in
jmp
inc
and
ss
dec
push
jae
sub
mov
fiadds
rorb
std
pop
xor
xchg
jns
adc
xchg
jns
adcb
repnz
jl
fdecstp
mov
xchg
loopne
mov
pop
dec
scas
xor
pop
jne
push
decb
adc
jne
cltd
test
xchg
ds
ljmp
cwtl
aad
pushf
cmp
mov
shlb
jge
fldl
cmpsb
or
lods
xlat
mov
pop
rorb
jae
and
adc
pop
dec
xchg
outsl
pop
hlt
adc
fstl
popf
int3
or
inc
aaa
or
and
es
shll
jns
mov
lods
xor
loopne
jo
xlat
fildl
or
cmpsl
shll
mov
cs
inc
mov
pop
out
mov
add
or
fdivrl
sub
outsl
jg
or
or
int3
mov
pusha
movsl
aam
imul
mov
add
mov
dec
pop
adcb
xchg
fisubl
ljmp
pop
and
xor
js
sarb
push
mov
push
pop
pop
popa
adc
icebp
iret
sbb
xchg
lret
mov
in
iret
leave
add
fld
inc
mov
pop
clc
add
lds
cltd
sub
lret
adc
xchg
mov
sub
jns
mov
pop
adc
pop
aam
daa
mov
sbb
fidivs
arpl
lret
jno
in
add
outsl
icebp
or
push
add
sbb
jge
lret
jp
nop
cmp
lock
aad
fiadds
lahf
jbe
mov
add
cmp
ds
loope
fwait
add
lret
fwait
add
push
add
jb
sub
in
lahf
arpl
fisubl
xorb
popa
xor
stc
jbe
fcmovbe
fsubrl
faddl
jo
hlt
inc
js
add
lods
adc
mov
xor
mov
int
call
das
cmp
pop
neg
clc
push
xor
pop
mov
insl
into
cli
inc
sbb
js
sub
xchg
arpl
dec
sub
rorb
xchg
push
stc
je
or
add
mov
add
dec
push
dec
dec
ljmp
psadbw
mov
popa
adcl
cmp
insb
sub
push
inc
and
push
and
adc
dec
insl
jg
xor
xor
fdivs
push
inc
xchg
mov
out
jg
pop
leave
mov
test
mov
mov
ret
and
xchg
adc
or
lahf
push
mov
test
adc
dec
subb
cld
sbb
xor
sub
decb
lods
sbbb
xor
jmp
jecxz
mov
scas
xor
int
cwtl
clc
sbb
imul
xor
out
outsl
and
data16
cwtl
shll
xchg
stc
dec
xor
push
jecxz
or
loop
lods
loopne
fildl
mov
push
xchg
cmp
push
push
and
add
push
inc
shr
aad
adc
in
add
arpl
push
mov
mov
jae
or
ficoms
and
movsb
push
pop
jl
push
cli
arpl
inc
test
or
lds
clc
nop
mov
xorb
pop
lcall
cmc
mov
mov
sbb
loope
jmp
mov
xchg
lahf
lea
icebp
xchg
lock
es
into
xchg
int3
lret
mov
fiadds
out
rclb
imul
shl
pop
fisttpl
lods
push
mov
aad
mov
lds
into
inc
add
inc
pop
xor
data16
cmp
and
sbb
xor
test
dec
pop
sub
aam
pop
lahf
mov
in
pop
clc
xchg
mov
pop
mov
enter
mov
jne
ret
adc
lcall
push
sbb
or
sti
push
mov
shr
xor
stos
sub
or
int
scas
push
mov
fld
mov
mov
lds
pop
adc
pop
aam
das
mov
scas
mov
ds
mov
into
vphaddudq
sub
xor
inc
mov
jnp
aad
int
xlat
int3
mov
push
repz
or
xchg
lock
fstp
aas
jl
sbb
pop
mov
jnp
dec
mov
cmp
stos
sub
les
jecxz
stos
lods
mov
dec
fsubr
push
repnz
xor
nop
or
jne
sub
push
push
push
pushf
dec
addr16
or
cmp
jge
xor
inc
xor
fisubs
jne
adc
addb
cmc
mov
cli
lret
ss
dec
sbb
add
sbbl
repnz
dec
out
ja
cmc
and
mov
xor
and
repnz
inc
xchg
dec
mov
mov
test
mov
cmp
loopne
bswap
in
sbb
sahf
add
dec
mov
shl
push
rcll
push
fdivrp
xlat
inc
loop
into
unpckhps
lahf
dec
dec
push
dec
push
sub
inc
jp
rclb
mov
inc
xor
loop
mov
pop
call
aaa
push
pop
les
mov
xchg
out
cmp
test
mov
lret
push
mov
inc
nop
push
lret
push
pushf
ret
xlat
bound
add
insl
scas
jo
lret
addr16
insl
jg
cli
push
sahf
ljmp
mov
into
and
addb
mov
aad
jb
lock
mov
cmc
and
sbb
lods
inc
test
or
push
and
clc
xchg
xchg
dec
jns
sub
out
loop
leave
pop
aad
push
lahf
loope
popf
lods
lock
es
push
xchg
jns
hlt
in
xor
aaa
jno
rorb
imul
xor
andl
mov
inc
xchg
testb
addr16
je
lods
ja
hlt
aas
cmp
lahf
stc
mov
lea
add
lock
out
xor
int3
inc
mov
sub
fistpl
in
cmc
cwtl
jno
adc
jne
push
adc
jle
push
pushf
mov
jecxz
cmp
je
xlat
or
pop
mov
loope
mov
inc
inc
cld
sbb
mov
mov
and
inc
jle
imul
sbb
int3
pop
xlat
bound
std
fisubrs
cwtl
inc
adc
inc
cli
push
or
stos
into
les
and
sub
pop
cld
cmpsb
call
mov
stos
pop
loop
sub
divb
xor
int
pushf
scas
nop
mov
divl
sbb
inc
or
mov
sub
and
scas
icebp
stos
aaa
sub
xchg
addb
and
bound
mov
daa
sbb
sti
push
and
mov
lcall
and
mov
rorb
xchg
sub
push
push
jle
in
or
aad
dec
std
push
mov
cld
dec
mov
xor
arpl
inc
movsb
aas
inc
jnp
lock
imul
fnsave
pop
xchg
sahf
xchg
jp
andl
sub
xchg
outsb
pop
or
push
push
in
adc
inc
iret
daa
pop
loope
pop
push
xor
imul
adc
mov
in
ret
negb
repz
jae
daa
jne
fnstsw
in
pusha
or
ret
stos
mov
cmpsl
sbb
in
pop
dec
data16
and
cmp
stos
fsub
clc
cltd
and
jae
sub
sbb
cmp
das
call
adc
mov
out
mul
gs
addr16
add
lds
shrl
and
cmp
shll
mov
or
xchg
xor
xchg
xchg
mov
lahf
lods
fcomps
push
divb
add
or
pop
xchg
push
inc
js
test
mov
push
popa
ljmp
gs
dec
mov
xor
jecxz
lds
lret
repnz
inc
bound
mov
repz
xor
add
or
inc
repnz
mov
inc
rorl
adc
pop
jecxz
test
loopne
cmp
loopne
adc
jbe
cli
lods
sub
and
cmp
scas
push
imul
imul
mov
sub
jns
jp
aas
mov
call
inc
dec
ret
incb
jp
sub
pop
test
jnp
pusha
adc
xchg
jge
add
out
xchg
orl
packsswb
loop
and
jae
enter
call
adc
mov
ljmp
dec
mov
xchg
jae
mov
les
ficompl
sub
mov
sbb
adc
mov
aas
xor
int
push
inc
pop
jmp
adc
pop
lcall
mov
lret
insb
cmp
mov
inc
aad
xchg
addr16
shll
mov
pusha
cmp
scas
ja
xchg
in
insl
push
jp
push
sbbl
out
mov
sbb
push
dec
pop
sbb
arpl
bnd
std
iret
imul
ret
loope
pushf
enter
push
stos
inc
dec
repnz
sub
mov
push
in
test
adc
outsb
std
mov
mov
lods
pop
popl
jge
cmp
mov
pop
xchg
push
and
outsb
mov
dec
lret
je
andb
cmp
pop
and
outsb
sarb
adc
push
jp
jl
gs
inc
outsl
stos
punpckhdq
mov
and
mov
xchg
mov
test
ljmp
lods
mov
rorl
lods
mov
dec
pop
lds
jne
pop
dec
cmp
stos
jmp
mov
mov
pop
sbb
cmp
push
into
loop
shr
dec
add
or
leave
mov
div
cmp
shrb
shll
jle
xchg
adc
and
xor
inc
in
test
mov
mov
nop
mov
insl
out
mov
sub
std
adc
adc
les
or
sti
mov
andb
or
nop
ret
lods
and
fmull
push
cmpsb
data16
push
sbb
fistl
add
xchg
das
imul
pop
mov
in
mov
flds
sub
dec
xor
mov
ljmp
hlt
mov
mov
and
out
xor
mov
jns
push
dec
ret
lods
sahf
dec
dec
nop
or
mov
and
or
cmpb
je
jle
sbb
jge
dec
mov
inc
bound
clc
sbb
cwtl
mov
xchg
enter
adc
adc
outsl
sub
in
xor
cli
test
push
inc
sahf
jns
lds
out
cmp
jnp
mov
push
pop
fcomps
test
out
aas
outsl
cmp
fnstcw
mov
adc
loope
add
sti
lcall
adc
sub
push
inc
mov
lods
hlt
shrl
lods
pushf
cmpsl
loop
adc
mov
std
mov
inc
mov
xchg
bound
adc
ret
sbb
int
rcrl
push
ja
arpl
sbb
xchg
shlb
or
hlt
faddp
mov
mov
pop
int
popl
push
enter
mulb
fneni(8087
fs
fmull
mov
imul
add
roll
pop
insb
mov
cs
mov
es
or
loope
call
pop
test
jmp
mov
loop
mov
push
dec
fs
sahf
gs
stos
daa
xor
adc
mov
cmc
lahf
movsb
fdivrs
jo
jge
nop
push
cli
adc
hlt
test
popf
shl
mov
cmp
lods
test
loop
jmp
hlt
sbb
mov
sti
stos
push
dec
add
dec
mov
std
mov
and
dec
xchg
jnp
sub
repz
add
xchg
xor
push
lds
shl
sbb
dec
mov
add
stos
test
and
loop
out
or
xchg
test
mov
out
jg
mov
push
mov
push
and
sub
push
sub
and
in
mov
mov
scas
pop
fmul
adc
sub
aam
push
mov
sahf
push
or
dec
pop
xchg
adc
gs
add
daa
pop
inc
mov
out
outsl
push
xor
das
and
mov
rol
ja
ja
das
aad
pop
cmp
jge
imul
daa
subl
fwait
cmp
mov
call
or
cmp
push
rclb
notb
arpl
sahf
mov
lret
xor
cmp
stos
fisttpll
jo
call
xorb
pop
push
add
pusha
push
imul
pop
sub
and
add
and
pop
jl
sahf
adc
xlat
fsubrl
vmread
mov
icebp
cmpsb
sbb
outsl
push
mov
sahf
add
fsubrs
xor
pop
jae
xchg
arpl
ret
pop
xlat
pop
pop
cmp
popa
mov
mov
xorb
xchg
push
jb
scas
mov
ss
scas
xor
mov
pop
ds
decl
dec
cmp
jae
xlat
jge
ret
cwtl
pop
mov
fdecstp
shlb
pop
out
pop
clc
mov
push
jnp
mov
mov
mov
in
aam
or
pusha
add
movsl
jmp
jnp
dec
xchg
ja
mov
pop
stos
xlat
add
loopne
test
mov
in
insb
sub
dec
movsl
or
and
repz
mov
cmp
incb
cmp
xchg
pop
and
repnz
cmc
stos
stc
sbb
int
add
test
adc
js
lods
out
dec
pop
xchg
mov
xor
pushw
mov
testb
mov
imul
addb
push
fstpl
ss
dec
push
fs
mov
inc
inc
mov
adc
mov
fmull
clc
insl
and
adc
es
cmp
mov
xor
bound
int3
add
ljmp
jecxz
je
int3
dec
pop
call
fprem1
lea
mov
fcomps
push
int3
cmp
pusha
mov
in
test
mov
mov
xchg
iret
fsub
inc
xchg
mov
and
pop
int
adc
jmp
out
imul
fsubs
out
lret
sbb
pusha
push
xlat
inc
clc
das
xor
mov
loopne
xor
loop
popf
or
loopne
push
fs
xchg
in
push
cmp
mov
jle
hlt
lcall
ss
jecxz
inc
jg
inc
xchg
sti
sbb
dec
fisttpll
mov
jg
and
cmpsb
je
lods
inc
cmp
or
iret
ljmp
sahf
sub
lahf
dec
and
lea
pop
dec
roll
push
repz
aaa
xchg
leave
popa
out
and
jp
pop
pop
popf
cmp
pushf
and
jp
dec
mov
dec
push
loope
mov
shlb
and
jbe
or
fsubs
mov
pop
mov
lods
mov
xchg
sbb
lods
xchg
daa
test
fistl
inc
pusha
inc
pop
test
mov
cmp
push
movsb
sbb
dec
adc
sub
xor
rorb
sahf
aas
in
dec
and
pcmpeqw
pop
pop
hlt
mov
cmpsb
xchg
push
call
enter
jp
out
xchg
sbb
cmp
mov
push
adc
lods
adc
test
dec
test
rclb
sbb
or
fldl
or
cmp
ret
cmp
dec
add
xchg
jp
into
add
data16
popa
xor
ja
cmp
stos
adcl
pop
in
cmp
push
enter
dec
mov
mov
or
xchg
popf
adc
gs
mov
dec
ror
fcoms
inc
pop
and
adc
lods
or
mov
cltd
pop
sbb
jb
loop
xor
in
sub
mov
xchg
push
stos
mov
sti
scas
scas
mov
nop
xchg
mov
jne
or
into
pop
xchg
xchg
xchg
jmp
adc
xchg
sub
adc
test
inc
sbb
jae
hlt
iret
sub
mov
mov
dec
mov
jo
or
pop
xchg
pop
ljmp
and
lock
adc
jl
loopne
pop
repz
mov
xor
out
push
sub
mov
out
pop
and
sbb
pop
mov
add
pop
mov
ds
sbb
mov
push
fldenv
std
test
inc
mov
mov
xchg
inc
push
pop
inc
outsl
out
out
rorl
mov
repz
pop
or
ret
add
cltd
push
jns
push
pop
adc
fidivl
std
test
mov
sub
dec
mov
iret
jbe
xchg
cmpsl
test
in
int
das
lea
movsl
fbstp
mov
xchg
aad
mov
fcomip
inc
mov
jle
mov
mov
mov
movups
decl
dec
cmp
bnd
sub
push
pushf
jp
xchg
pop
dec
fnsave
rclb
aaa
mov
fildl
cli
or
js
jecxz
aad
mov
jle
mov
cmpsb
adc
mov
aas
fxch
stos
cltd
push
sbb
pop
sub
jae
adc
or
xor
pop
push
mov
es
lods
dec
lods
in
sti
sub
mov
xor
pushf
cmpsl
lahf
push
mov
outsl
js
or
adc
push
mov
stos
jb
mov
lret
imul
adc
call
shlb
call
fstpl
jmp
and
pop
cmp
push
es
repnz
add
or
push
cli
jecxz
ret
and
enter
jb
cld
cmp
xor
aad
push
cmpsb
dec
rorb
push
fisubl
or
hlt
or
iret
dec
sti
and
lock
inc
push
repz
xchg
cmp
mov
and
div
sahf
mov
and
inc
inc
mov
ret
jmp
dec
repnz
and
xchg
push
scas
or
add
dec
sub
jecxz
test
mov
popf
and
sub
insl
jecxz
fs
xor
je
inc
fsubrs
xor
lods
pop
pop
js
popa
pop
mov
test
jb
and
adc
movsb
cmp
insl
data16
mov
jb
lret
xor
xor
sarb
loopne
dec
jmp
xor
out
loop
jmp
dec
shll
rclb
mov
aam
xchg
data16
test
dec
in
push
mov
fdivrs
movsb
xchg
fstpl
inc
lcall
jge
xchg
cwtl
sbb
cld
sti
mov
aaa
sti
add
jns
mov
mov
les
inc
cwtl
daa
and
adc
in
push
pop
xchg
jmp
insl
enter
mov
cwtl
seto
inc
and
movsb
lea
out
cmpsb
cli
sbb
push
push
jle
sub
cmpsb
push
notb
imul
out
cwtl
imul
jl
push
enter
add
in
jg
ss
leave
pop
inc
roll
xlat
sti
cmpsl
add
js
push
insl
jno
cmp
jl
cmp
movsl
xor
sbb
push
sbb
push
gs
and
mov
mov
addr16
xchg
adc
imul
jb
push
addr16
mov
add
ja
adc
out
dec
and
sub
and
shl
dec
aad
or
mov
rcrb
leave
test
push
sbb
ljmp
mov
fisttpl
icebp
adc
mov
push
sbbl
xor
or
rcrl
andl
lds
pop
andl
mov
jle
jge
mov
movsb
xchg
fnsave
push
xor
pop
lret
addr16
pop
mov
stc
add
pop
aad
outsb
xor
ja
sbb
or
std
outsb
insb
push
add
push
je
std
pop
xor
xchg
testb
xchg
sti
and
push
xchg
pop
mov
fsubp
mov
sub
hlt
cmpb
cld
sub
jl
loopne
xchg
jmp
mov
shlb
mov
mov
mov
in
or
jle
pop
jae
mov
out
xor
imul
pushf
shll
fdivrs
jge
rorl
ret
push
xchg
leave
dec
jmp
adc
sahf
imul
sbb
push
mov
mov
sbb
jbe
mov
ret
out
loop
aad
aas
push
cmp
jae
bnd
lea
xor
imul
movsb
adc
and
sbb
mov
stc
jmp
lods
gs
push
std
sbb
sub
int3
xchg
push
rorb
out
jbe
xor
mul
cli
jg
jnp
into
sub
pop
jle
pop
dec
jg
mov
call
cmp
clc
mov
fstl
fdivrs
fnsave
cmpb
pop
dec
iret
sub
test
rcrl
sarl
in
in
insb
enter
andl
ret
sbb
pop
jne
lcall
add
dec
xor
dec
adcb
cmp
ret
repz
mov
loopne
dec
adc
jmp
sbb
jle
nop
jecxz
pop
xchg
in
fisttpl
mov
push
aad
repnz
rep
sbb
std
popa
sub
mov
mov
xor
mov
push
jo
sahf
outsb
mov
icebp
aaa
jno
cmp
ror
cmp
mov
movsl
rcrl
xchg
fadds
incl
cli
or
les
sub
mov
add
push
push
mov
repnz
into
imul
mov
add
push
mov
aas
bound
fistpl
rclb
add
lret
add
call
xchg
outsl
adc
sbb
mov
stos
fimull
add
xor
mov
outsl
cmp
rcrl
jbe
outsb
pop
stos
cld
xor
test
or
sub
scas
jl
pop
sbb
jnp
cld
jne
inc
inc
mov
mov
dec
add
xor
arpl
push
lock
mov
test
sub
in
pop
fldl
mov
jmp
xchg
push
lock
add
xor
cld
mov
pop
push
imul
mov
insb
lock
aaa
imul
jmp
ret
ljmp
test
hlt
outsl
sub
add
in
sbb
mov
cmp
cmp
rcrl
jcxz
out
and
sahf
inc
and
push
popf
addl
movb
mov
iret
sbb
rcr
jne
aad
mov
cmp
adc
lock
enter
cmp
bound
mov
pop
fnstcw
fnstenv
les
push
xchg
mov
ficompl
mov
lret
sar
aam
loop
dec
pop
std
adc
pop
aam
pushf
xor
ret
lods
dec
hlt
insl
scas
insl
movsb
inc
jge
inc
decl
cmc
cs
xchg
lret
add
jb
fisttps
dec
push
adc
lcall
shll
sbbl
cmp
in
mov
push
mov
xor
inc
rcl
cmp
and
stc
adc
pmulhw
mov
push
jg
or
std
stc
outsb
pop
sahf
mov
enter
pop
sti
pop
comiss
sub
push
push
xchg
shlb
mov
repnz
rorb
cltd
nop
sti
arpl
pop
imul
jns
cmp
out
sbb
lds
mov
icebp
or
cmpsl
jnp
push
sub
or
sbb
out
lret
adc
pop
push
lds
jns
sbb
xor
sbb
add
adc
add
repz
xchg
fs
xor
setge
js
ret
jo
sub
rcll
adc
arpl
cmp
pop
repz
mov
popa
sbb
ds
data16
movsb
cmp
addl
push
cmp
mov
js
xchg
mov
daa
mov
xor
mov
sub
xor
and
imull
sub
mov
jle
dec
mov
mov
xchg
mov
xor
or
psubd
xchg
or
mov
scas
repz
mov
pop
dec
in
xor
pop
es
cwtl
and
pop
sbb
pop
cli
lret
add
daa
jbe
inc
inc
sub
or
sub
scas
jo
es
nop
jnp
push
movsl
dec
pop
pop
out
pusha
mov
std
and
mov
pop
dec
sub
jbe
pushf
jne
adc
mov
leave
sub
sbb
sub
jns
mov
mov
enter
cmp
stos
fldcw
test
int3
cmp
fldt
add
xchg
arpl
push
jb
mov
notl
dec
lea
push
cmpl
xchg
sti
or
adc
out
sbb
enter
and
daa
sti
lock
in
lcall
sub
pop
xlat
lods
std
xchg
ljmp
push
rclb
and
cmpsl
sbb
cmpl
push
push
and
mov
sbb
ss
ljmp
or
aaa
pop
mov
orl
adc
lcall
jl
push
dec
lds
xor
mov
jl
xorb
xor
sahf
xlat
loope
xor
push
lea
fisubrl
sub
leave
std
sub
cli
repz
mov
incb
mov
aaa
icebp
sahf
imul
mov
xchg
mov
add
adc
xchg
fsubrl
negl
pop
int3
mov
dec
loopne
inc
stos
mov
arpl
scas
insl
xor
inc
test
or
mov
xor
sahf
scas
es
bound
repnz
dec
scas
sub
push
and
stos
mov
rclb
cld
aam
pop
movsb
out
push
cmp
pusha
cmp
sbb
push
in
xchg
inc
pshufw
sub
orl
lods
xor
cli
icebp
push
cmp
lahf
cs
cmp
pop
xlat
lret
pusha
adc
data16
push
enter
dec
push
jo
loopne
dec
sub
arpl
jo
jmp
stos
call
imul
dec
scas
andb
popa
adc
popf
dec
aam
xor
enter
sub
out
or
test
add
out
xchg
das
adc
ret
test
clc
add
cmp
loop
sub
fcoml
iret
push
cmp
pop
clc
push
inc
ret
in
lods
and
fwait
lahf
pop
xchg
pop
aas
jmp
frstor
into
xor
je
out
imul
shl
loopne
mov
jne
xor
jns
and
sub
out
sarl
adc
lahf
xchg
jl
push
adc
stc
xchg
adc
call
push
xchg
clc
je
in
es
mov
cmp
adc
mov
sbb
or
mov
scas
mov
xchg
xor
or
xor
nop
iret
les
sbb
out
mov
movsb
imul
and
pop
mov
fwait
push
aam
inc
mov
lret
in
or
mov
adc
push
out
in
sbb
dec
dec
pop
out
mov
cli
pop
les
int3
dec
add
cwtl
mov
xchg
xor
imul
out
inc
mov
rolb
sbb
pop
dec
imul
dec
mov
les
push
mov
cwtl
adc
cmp
idivl
sarl
outsb
int
inc
add
inc
pop
xchg
std
neg
mov
push
lea
test
sbb
pop
jbe
adc
hlt
ficompl
jbe
imul
cmp
movsb
add
mov
and
hlt
pop
add
adc
out
xor
lea
popa
mov
fbstp
pushw
mov
testb
and
rcll
push
repnz
rcl
lock
outsl
push
jne
jo
mov
xor
push
fucom
inc
mov
adc
and
adc
pop
inc
leavew
clc
shll
jb
sbb
je
mov
ljmp
adc
dec
mov
mov
xchg
cmpsb
nop
sub
jecxz
stc
lret
cmp
dec
push
or
popa
pop
out
add
jnp
fwait
push
mov
add
aad
push
repz
mov
xchg
push
inc
mov
and
jge
pop
stc
icebp
add
out
into
inc
lcall
sub
mov
mov
adc
mov
fldl
jle
pop
pop
mov
mov
xor
sbb
fisttps
sbb
xor
fsubl
repz
mov
scas
out
mov
cmp
dec
lods
icebp
cld
xor
lods
lods
scas
roll
xor
or
sub
jb
sbb
lea
sbbl
mov
es
shll
int
xchg
loop
rcr
jle
mov
mov
push
cmp
cltd
push
mov
js
insb
mov
mov
pop
insl
clc
xchg
xlat
cmpl
xchg
sti
jp,pt
test
push
cmp
aam
subb
orb
bnd
ss
ret
adc
fs
sti
push
cmpsl
xchg
pop
xor
inc
pusha
xlat
lahf
xchg
jmp
dec
xchg
dec
push
movsl
sbbb
cmp
add
sbb
dec
xchg
xor
shll
aam
stos
daa
jmp
sahf
mov
rorl
icebp
jns
ror
pop
ljmp
into
test
pop
ficoms
rorl
or
jle
lea
insb
shlb
cld
stos
xor
test
sub
aam
mov
pop
jb
xor
jns
mov
sbb
aas
imul
test
pushf
repz
sahf
inc
mov
sbb
loope
jge
pop
pop
popa
pop
dec
inc
lods
xorl
inc
jbe
inc
lcall
sub
dec
jno
or
cmp
clc
mov
dec
xlat
pop
rcr
ja
in
mov
cmp
pop
cmp
xlat
cld
cmpsb
mov
jnp
ret
pusha
adc
pop
xor
repnz
sbb
gs
les
mov
mov
inc
scas
call
push
lret
xor
jne
daa
in
jle
xor
mov
push
sbb
mov
xor
xchg
push
cmpb
pop
outsb
jno
stos
inc
jp
jae
stos
inc
pop
fucom
jae
adc
lret
stos
je
jmp
aas
rcrl
frndint
xor
mov
push
outsb
mov
and
das
out
xor
xor
and
test
or
addl
jp
mov
xchg
add
mov
cmp
out
sub
jl
xor
xor
xor
mov
inc
pop
mov
int3
test
jle
in
fcomp
mov
loop
or
out
sbb
mov
inc
out
out
stc
sbb
pop
xchg
sbb
das
lock
cs
adc
push
dec
cmpsl
sub
mov
movsb
lea
ds
fnstcw
pushf
sarb
cmp
jbe
loopne
test
lods
mov
cmp
mov
add
testb
sti
lcall
push
stos
xor
add
jno
stos
test
sbb
lret
sbb
inc
add
outsl
fisttpll
cmp
je
leave
fnstenv
jmp
loop
inc
inc
mov
push
data16
je
pop
js
xchg
inc
gs
mov
popa
lret
mov
in
xor
pop
xlat
scas
in
jnp
lea
and
jae
xorb
imul
jmp
clc
mov
iret
lds
lods
lcall
stc
or
or
pushf
xchg
incb
sub
popf
loopne
or
pop
mov
xchg
sub
adc
scas
mov
xor
push
loope
sti
sub
and
test
stos
dec
xor
stos
push
push
cmp
cli
jg
inc
push
jb
and
or
cltd
cld
lods
hlt
push
aad
test
push
int
jp
fmull
push
ret
mov
rolb
fsubrl
in
dec
shll
push
xorl
sti
sahf
mov
pop
adc
mov
scas
call
inc
xchg
fsubrs
or
and
hlt
icebp
push
stos
xchg
int3
shll
es
std
sub
or
daa
subl
ja
es
add
out
xor
pushf
or
je
xchg
cmp
mov
pop
fnstsw
jns
std
jp
rcr
enter
je
jmp
inc
mov
mov
jp
pop
aas
xchg
push
pop
push
aas
push
addr16
mov
mov
ret
out
cmp
mov
scas
aad
sbb
and
xor
jb
gs
dec
daa
stos
out
sub
leave
xchg
frstor
andl
incb
popa
cmp
sbb
mov
add
mov
aad
xchg
testb
call
sub
jecxz
call
fildl
mov
je
or
lcall
mov
sbb
sbb
jg
add
pop
dec
bound
xchg
add
xlat
cltd
mov
lock
cli
xchg
fsts
fistpl
and
std
popf
inc
clc
jl
and
mov
mov
in
add
outsb
adc
adc
lahf
lea
fists
xchg
jbe
sahf
sbbl
mov
popa
insl
or
dec
jmp
call
repz
cwtl
mov
scas
popa
adc
pop
pop
leave
jp
or
flds
inc
mov
out
mov
or
ljmp
mov
movsl
mov
setg
test
les
and
xor
sub
mov
and
jg
leave
out
fs
out
outsb
jl
mov
or
sub
mov
aam
decl
es
inc
inc
dec
sub
fcomp
addr16
jl
add
sahf
stos
cmpsl
icebp
ret
sub
arpl
rorl
inc
arpl
imul
add
arpl
loop
nop
jnp
mov
pop
imul
jbe
test
fmull
loope
call
out
rcll
andl
sub
les
mov
rorb
sub
inc
and
mov
ret
mov
mov
dec
into
jp
sbb
out
lahf
aam
dec
jae
sbb
xor
ret
stos
pushl
add
mov
xlat
push
test
pop
les
xchg
shll
test
adc
mul
hlt
dec
mov
pop
mov
push
pop
ficomps
leave
mov
xchg
mov
stc
xchg
mov
cmp
push
inc
xchg
sub
sbb
popf
outsl
mov
and
pop
jg
mov
ds
dec
into
jl,pn
rcrl
ret
std
mov
mov
pop
loopne
dec
call
xchg
xor
iret
sarb
jl
jg
push
test
pop
repnz
push
repz
jmp
adc
cmp
sbb
icebp
cltd
xchg
es
jae
movsl
inc
or
fisubrl
test
int3
or
test
sarb
shrb
mov
dec
imul
add
adc
fldl
mov
cmc
fisttps
shlb
jecxz
in
push
xor
shr
jg
stos
fxch
push
stc
pop
cmp
pop
mov
xchg
mov
sbb
jne
or
mov
pop
push
fwait
ja
popa
dec
mov
ret
data16
xor
fidivl
and
lods
ret
mov
iret
sub
fnstenv
dec
icebp
cmpsb
adc
dec
shl
notl
mov
adc
ret
shl
ret
aad
repnz
lahf
out
fnstsw
adc
and
cmp
or
add
loopne
mov
add
sbb
cwtl
fwait
sarb
bound
popa
adc
sti
cmpsl
enter
negb
push
mov
jg
pop
jno
fwait
xor
mov
pushf
je
pop
pop
in
lcall
push
mov
test
sub
imul
jmp
sbb
les
inc
aad
and
lcall
sarb
xor
pop
push
cmp
popf
cmp
inc
mov
mov
roll
jp
inc
mov
aaa
pop
mov
xor
enter
sbb
int3
std
in
mov
cmp
test
pop
fmuls
cmpsl
mov
or
out
and
mov
jb
stc
jg
dec
loopne
cmc
jbe
pop
mov
push
and
scas
je
adc
lock
arpl
jg
and
les
cwtl
adc
imul
xchg
and
add
stos
pop
xchg
pusha
push
xchg
cld
cld
imul
scas
dec
dec
xchg
das
sub
mov
mov
pop
orb
inc
mov
filds
aad
xchg
push
pop
add
lcall
cmc
fnsave
push
cmp
pusha
sub
adc
notb
push
iret
jmp
mov
push
mov
fldl
lret
xlat
pop
pushf
push
test
and
inc
loop
cmp
int3
stc
imul
stos
xchg
mov
loopne
in
test
mov
jecxz
cmp
enter
leave
sbb
mov
out
pop
insb
fstpl
cmp
push
sub
xchg
adc
stc
lods
fcompl
inc
ljmp
popa
test
mov
inc
bound
sarl
sbb
mov
push
adc
sbb
jae
xchg
jae,pn
mov
lea
stos
push
and
jbe
rcl
mov
jl
fdivp
loop
sub
call
inc
and
test
adc
repnz
xor
mov
push
jns
pop
push
push
test
cltd
cmp
mov
rcl
push
or
push
inc
pop
stc
jno
cmp
pop
mov
jne
or
pusha
adc
aaa
repz
cli
loopne
outsb
cmp
push
repz
lahf
jle
sub
mov
insb
mov
xchg
or
dec
fcmovne
sub
push
les
mov
pop
xchg
in
jns
call
mov
addr16
test
xchg
cmpsb
and
jb
pop
cmpsb
pop
jne
mov
and
cmp
push
insl
sub
addb
mov
movsb
sbb
jge
mov
jl
into
fwait
mov
out
push
lret
in
jmp
les
enter
enter
push
fldt
dec
pusha
lret
stos
fcmovnb
xchg
imul
add
aas
mov
mov
push
sahf
imul
movsb
inc
cmp
cld
fdivl
ficoms
mov
adc
sub
imul
lods
mov
mov
das
mov
jno
lds
xchg
repz
jae
or
orl
mov
xchg
sub
iret
adc
cld
repz
dec
push
mov
shll
aaa
js
cmp
shlb
scas
or
cmp
jmp
in
dec
or
mov
dec
xchg
or
xchg
push
adc
lods
insb
mov
mov
xchg
xor
inc
mov
jmp
sti
pop
fsts
cmpl
fcoms
sub
addr16
sub
mov
imul
or
jne
arpl
pop
cmp
idivl
je
lods
lret
rorb
aas
cltd
mov
lods
cmpsl
loope
xchg
ljmp
aad
les
cltd
aaa
mov
adc
scas
lods
popf
loopne
movsl
dec
cltd
sti
cmp
int3
adc
int3
aad
mov
mov
sub
fiaddl
in
pop
adc
pop
es
jmp
test
hlt
int
jmp
push
scas
pop
mov
shr
dec
jle
pusha
les
pop
mov
jge
ja
cltd
xchg
shlb
cmp
ss
add
popa
insl
cs
ja
xchg
lcall
push
lods
imulb
out
shld
pop
mov
cltd
loope
jae
inc
aam
cs
loop
add
ret
jb
mov
fisubs
into
imul
mov
lods
mov
inc
aad
lods
mov
add
out
xchg
xor
mov
mov
aaa
in
cli
dec
out
stos
pop
lods
dec
xlat
movq
mov
adc
push
mov
popf
pop
enter
sbb
jb
dec
dec
leave
outsb
mov
inc
ds
lahf
iret
out
gs
mov
lret
insl
jg
xchg
out
push
push
mov
xchg
aas
xor
jl
fimuls
pop
push
sbb
pop
mov
jg
inc
cmp
xor
push
inc
out
in
ret
pusha
add
xor
addr16
sub
lods
fdivrl
or
xor
or
mov
fnstcw
push
sub
push
loope
les
pop
stos
test
addr16
jecxz
mov
push
push
mov
add
inc
ss
xor
out
insb
xor
movl
push
jae
outsb
push
and
pop
push
pop
sub
cwtl
sub
fistps
push
imul
and
in
lods
mov
mov
mov
pop
inc
push
popa
stos
or
jno
jp
das
sti
pusha
popa
shl
and
mov
pop
leave
dec
push
adc
lods
clc
ror
and
rcll
adc
or
clc
pop
xor
inc
iret
xor
out
bound
mov
mov
cmc
xor
jnp
inc
stc
mov
push
out
push
mov
xorb
jecxz
js
stos
test
and
mov
adc
mov
adc
mov
enter
mov
rcll
xchg
fwait
sub
lock
sub
sahf
fdiv
pop
out
dec
sub
and
jg
inc
ret
jne
push
mov
jbe
push
jo
popf
fcompl
rolb
incl
bound
int
ss
mov
pop
repnz
out
test
sbb
in
and
cli
sbbb
and
lock
xchg
cld
push
jns
ficompl
jle
or
and
out
jge
int3
aas
in
mov
cmc
dec
adc
loope
cmp
mov
sbbl
adc
notl
or
or
pop
sarl
push
mov
cli
insb
cli
scas
jo
lahf
push
outsl
push
jns
outsl
dec
jnp
fnstcw
xchg
push
sbb
mov
cwtl
xlat
mov
pop
inc
dec
or
mov
gs
or
sub
cmp
lret
adc
pop
adc
test
dec
stos
jno
lods
js
fisttpll
cmp
dec
frstor
fdivr
pop
out
push
and
ss
pop
mov
xor
or
cld
push
call
jle
jae
jns
dec
adc
mov
pop
out
cs
outsl
lcall
xor
or
outsl
leave
adc
pop
push
adc
cmpsl
inc
mov
mov
or
nop
cmpsl
cli
les
loopne
fsubs
cmc
inc
fcomip
cld
ja
loope
sbb
dec
pop
je
xchg
push
aas
icebp
in
roll
cld
or
in
sub
inc
pop
xchg
or
push
mov
cmpsb
mov
xchg
jae
das
add
mov
mov
xor
push
cmp
cmpsb
orb
dec
adc
neg
xchg
sub
mov
jno
dec
ret
addr16
or
mov
push
xchg
or
int
xchg
mov
jle
jp
or
or
cmc
emms
dec
push
out
les
in
push
loope
je
ja
int3
lds
ljmp
jle
push
pop
aaa
jb
test
jae
adc
call
dec
cmp
ds
pop
roll
pushf
sti
lea
insb
test
ds
sub
mov
inc
mov
jmp
sar
ss
loopne,pt
ret
les
das
xor
loop
push
fistpl
mov
mov
sbb
or
and
shlb
cmc
shrl
outsb
mov
xchg
jbe
and
clc
add
fisubrl
pop
addb
rol
daa
movsb
inc
jmp
repnz
push
jo
and
xchg
jb
int3
cmp
and
insl
cs
test
jle
push
push
or
andb
loope
leave
mov
stos
add
pop
jns
pop
and
sbb
test
inc
les
ss
pop
adc
add
call
lds
movsb
sbb
mov
out
notb
std
cmp
mov
loopne
lods
jo
ja
jle
mov
mov
je
inc
cltd
andb
mov
loopne
inc
dec
sub
ret
jle
dec
out
popf
push
mov
in
cmpsb
inc
and
loope
out
lods
sbb
rcrl
movsb
leave
loop
inc
testb
das
aas
add
ret
jecxz
lahf
or
in
js
inc
push
pop
clts
and
sbb
popa
mov
out
add
imulb
push
sbb
imul
xchg
lcall
int
sub
jecxz
lds
sbb
scas
ret
cld
loope
outsl
mov
push
add
adc
jno
xorb
call
mov
pop
nop
pushf
imul
test
sbb
mov
xchg
movsl
lret
cli
jmp
lret
inc
lock
rclb
xorb
xlat
xchg
jb
outsb
cmpsl
xlat
fsubp
out
mov
shl
lds
cmp
pop
cmp
fstpt
pop
xor
cmp
dec
add
daa
dec
dec
stos
dec
and
pop
imulb
adc
and
xlat
imul
mov
xchg
jns
js
mov
imul
add
repz
in
repnz
and
test
movsl
mov
pop
sub
fs
icebp
aaa
jl
inc
push
icebp
popf
jecxz
out
mov
sub
mov
cmp
push
das
jle
adc
sbb
lock
push
mov
pushf
cli
aaa
jp
negl
inc
bts
dec
push
jmp
cmp
push
or
fcomps
jg
sbb
push
test
mov
movsl
rcrb
push
rcrl
fsubrl
jp
pop
lea
ss
aad
pop
jecxz
cmp
xor
daa
cmp
xchg
mov
rorl
mov
lea
lds
ljmp
fwait
mov
push
nop
das
cmpsl
mov
in
out
push
inc
sub
sbb
mov
adc
ja
push
mov
dec
mov
adc
testb
dec
mov
inc
insb
js
jae
das
repz
popf
adc
mov
cmp
shrl
mov
adc
dec
sub
adc
popa
mov
sbb
lret
adc
mov
mov
mov
in
mov
ret
or
mov
dec
aaa
xor
outsb
and
jae
inc
add
dec
add
sub
jae
pop
cmp
and
pusha
dec
test
pop
test
xor
push
test
mov
addl
rclb
cmpsl
cmpsl
cmp
mov
jg
mov
adc
push
mov
cmp
xor
fmuls
ret
imul
push
push
pop
lds
data16
out
mov
adc
xor
pop
xor
or
repz
and
fnstsw
iret
pop
adc
jb
xacquire
and
xchg
inc
add
mov
xor
push
add
cmp
pop
adc
jne
out
pop
mov
xor
pushl
cmp
xor
dec
stos
jnp
pcmpeqw
stos
lcall
mov
jl
mov
cwtl
aaa
xchg
sub
mov
stos
daa
xchg
cli
ret
push
int
outsl
gs
jp
push
sahf
stc
stos
cli
into
adc
outsl
fstpt
cmpsb
add
ret
jno
mov
add
ds
pop
xor
les
fsubrs
movsl
add
mov
or
mov
lret
sarb
lcall
inc
push
and
sahf
dec
and
iret
roll
test
mov
lahf
stc
movsb
rcll
popf
xchg
sbb
jo
test
push
push
push
xor
insb
aad
push
push
loope
cmp
cmp
cld
pop
icebp
mov
pop
aad
das
jg
idivl
ja
pop
lahf
outsb
mov
dec
sbb
and
inc
iret
sbb
jnp
int
adc
sbb
sub
pop
in
mov
xlat
xchg
repz
push
pop
in
rolb
push
out
cmpsb
or
nop
pop
dec
add
adc
mov
outsl
je
xor
dec
cmp
cmp
inc
cwtl
push
scas
push
push
bound
cmp
sub
fiaddl
lcall
inc
ret
loop
xchg
cmp
rclb
cld
fildl
lcall
rorb
xor
adc
clc
pop
sti
lahf
jmp
pop
adc
mov
dec
pop
cmp
test
lods
push
sti
sbb
jg
iret
or
out
sub
fnstenv
or
aam
int3
mov
cmpsb
lcall
lock
loop
jno
loope
mov
xor
and
or
bound
dec
js
jbe
aaa
add
mov
dec
push
aaa
mov
nop
out
iret
js
jmp
mov
fwait
xchg
pop
adc
push
mov
mov
xor
fsubl
sbb
and
adc
push
mov
bound
inc
sahf
inc
mov
data16
fsubrs
add
xchg
imull
addr16
std
lret
repnz
gs
jae
in
pop
lahf
adc
scas
pop
gs
sub
adc
pop
jae
test
add
cmp
jns
imul
and
enter
mov
jg
rorb
xchg
nop
movsb
sub
xchg
dec
jbe
inc
xchg
lahf
inc
popf
add
adc
push
inc
adc
jg
rcll
cld
adc
jbe
jae
inc
xchg
lods
lcall
or
cmc
add
cmp
jae
or
sti
subb
scas
mov
repz
lods
mov
inc
cmp
fisttps
inc
xor
xchg
or
movsb
lahf
or
movsb
or
xchg
inc
popf
xchg
pop
imul
pop
dec
outsb
push
and
daa
ds
xchg
and
in
sub
xlat
fistpl
xlat
and
sub
adc
jmp
jmp
sbb
push
dec
mov
daa
movsl
les
in
jae
xchg
cmpsl
mov
add
imull
ret
jp
and
cmp
add
xor
and
cli
sub
sbb
call
addr16
cmpsl
sbb
or
push
cmp
mov
sub
rcll
inc
add
sarb
mov
pop
and
xchg
jbe
pushl
pop
sbb
inc
popa
sbb
pop
es
cmp
and
pop
xchg
loopne
pop
mov
or
sub
repz
out
ret
lcall
shl
push
pop
xchg
dec
add
sti
fnsave
pop
dec
cmpsb
out
and
jne
sub
push
imul
lods
fistl
fs
jmp
cltd
ss
jecxz
movsl
cwtl
xchg
sbb
or
imul
inc
sub
xor
lea
or
add
and
or
mov
pop
and
or
xchg
mov
outsb
xor
adc
lret
xor
cvtps2pd
adc
mov
pop
inc
xchg
xor
mov
mov
cmc
arpl
in
and
sub
inc
or
push
cltd
cmpsb
bound
ja
push
popf
or
les
and
lahf
xchg
mov
cmp
pusha
adc
sbb
stos
imul
fidivrl
xchg
ljmp
outsb
fwait
adc
std
cmpsb
imul
adc
push
jno
fbstp
les
xchg
lret
cmp
xlat
adc
out
and
outsb
adc
int3
sbb
sbb
ljmp
mov
orl
sbb
xor
rolb
xchg
mov
or
mov
mov
pop
test
in
mov
in
mov
int3
jae
fwait
xor
pop
aam
sub
lret
jns
loop
cmp
or
mov
xor
and
popf
inc
dec
jmp
rorl
pop
test
mov
inc
cli
sub
pop
mov
pop
mov
xor
stc
fisttpll
dec
movsb
int3
sbb
popf
jle
xor
push
jecxz
insb
mov
aad
sub
pop
dec
outsl
jo
push
out
xor
cmp
dec
popa
scas
adc
mov
mov
cmp
enter
mov
cmpsb
imul
les
push
and
cmpl
divl
xchg
pushf
out
imul
popa
cmp
add
sbb
pop
lods
je,pn
mov
fldln2
adc
outsl
pop
dec
cmp
inc
ljmp
push
jb
insb
inc
mov
jmp
shll
inc
push
xor
enter
out
jecxz
sbbb
dec
jl
lods
aad
pop
push
mov
mov
push
jbe
lret
jbe
shrb
sbb
lret
sbb
xor
std
or
notl
das
test
stos
jno
adc
inc
sahf
orb
mov
ja
pop
fucom
testl
pop
lods
cmp
nop
clc
cmc
imull
or
adc
push
iret
sbb
lret
dec
ret
fisttps
scas
and
adc
sbb
mov
in
xchg
mov
jo
es
jecxz
in
add
popf
dec
iret
dec
pushf
frndint
add
es
rol
add
lds
lock
popf
inc
sahf
inc
lods
add
jecxz
out
xchg
lcall
mov
mov
sbb
pop
int3
jmp
adc
test
jmp
icebp
std
sbb
add
aam
push
sbb
call
rcl
mov
jne
fbstp
sub
add
dec
mov
fimull
arpl
iret
xlat
out
add
and
icebp
pop
mov
push
pop
or
push
daa
loopne
ds
sbb
sub
out
push
sbb
dec
push
mov
jmp
in
fmull
add
dec
addr16
xchg
mov
pop
jae
lahf
mov
push
sbb
lock
xchg
push
mov
insb
stos
pop
icebp
or
inc
lcall
mov
adc
inc
cmp
insb
daa
cmp
inc
pop
sbb
jle
sbb
pushf
mov
in
test
iret
push
push
xchg
dec
mov
push
fdivrl
fcmovnu
sub
or
pusha
adc
sbb
subb
mov
cmp
inc
cltd
pop
fwait
test
cmp
and
sub
jg
sar
jmp
jl
scas
cltd
lds
or
and
js
scas
out
xor
fimuls
inc
pop
mov
push
mov
lret
pop
pop
sub
lahf
add
pop
les
and
xchg
mov
icebp
push
mov
pop
daa
pop
iret
push
ret
pop
icebp
idivb
sbb
lock
arpl
pushf
fs
sbbb
cli
or
inc
pop
ja
push
cld
in
jne
in
rcrb
sub
jp
mov
int3
test
mov
sub
sub
push
shll
jb
pop
add
cmp
dec
leave
sbb
mov
insb
adc
xor
dec
adc
xor
movsl
les
shr
out
pop
imul
cmpsb
scas
cmp
and
cmp
push
add
mov
mov
or
fimuls
les
arpl
sub
popf
imul
cltd
cmc
dec
and
clc
xchg
and
mov
ret
sbb
inc
in
push
stos
cmp
sar
into
mov
jge
inc
mov
test
sub
mov
sbb
jmp
adc
xor
fdivr
push
cmp
jb
jg
je
insb
jmp
and
dec
mov
or
mov
leave
and
or
decl
mov
insb
aas
mov
negl
push
inc
push
roll
sbb
cmpsl
jno
jae
cli
jmp
mull
rolb
cs
add
cmp
rclb
mov
lods
or
push
mov
stos
js
cmp
xor
outsl
add
test
xchg
mov
push
ficoms
repnz
loopne
aaa
push
jmp
fucom
pusha
pop
xchg
jge
loop
stc
test
cmpsl
in
sub
xlat
repnz
nop
popa
loope
fcomp
pop
negb
xchg
mov
leave
push
jne
mov
pop
jns
rclb
loope
adc
add
mov
adcb
pusha
mov
sub
insb
cmp
aad
pop
mov
scas
sub
xor
dec
lret
pusha
jg
mov
jp
gs
cmpsl
leave
xor
and
pop
scas
or
pop
sbb
adc
cmp
xchg
stos
lea
dec
pop
leave
test
loopne
inc
and
rcrb
sar
xchg
sbb
sbb
mov
sahf
mov
jbe
pusha
push
jb
fiaddl
idiv
and
imull
push
cmp
sti
mov
int3
lock
jg
add
jae
xchg
dec
adc
mov
es
fsub
movsb
mulb
sahf
arpl
aad
sub
pop
mov
insl
adc
aaa
push
mov
inc
mov
and
adc
enter
mov
arpl
shr
mov
sub
inc
adc
es
jno
shrl
shr
cmp
fld
sti
lds
cmp
test
and
mov
cli
push
mov
movsb
stos
jnp
xchg
and
roll
sbb
and
leave
daa
leave
add
bound
and
jmp
fnstsw
or
pop
xchg
or
adc
fwait
sbb
mov
shlb
push
mov
push
faddp
add
scas
scas
xor
mov
sahf
mov
fists
shll
sbb
pop
and
aam
mov
mov
add
dec
bnd
pusha
ds
push
mov
and
lock
inc
adc
subb
aam
movsl
sahf
out
lea
aam
dec
out
jecxz
in
lds
adc
sub
cmp
sub
xchg
into
pop
cwtl
inc
out
insb
cltd
mov
add
call
imul
hlt
outsl
and
adc
dec
push
ret
add
sar
inc
jno
cmp
dec
bound
dec
pop
bound
push
aad
sti
fnsave
fucomi
jp
ljmp
out
jae
int
xchg
jecxz
push
inc
ret
movsb
add
cmp
leave
js
xor
xor
cs
mov
pop
nop
repz
sbb
sub
jns
and
adc
xor
xor
mov
and
push
in
mov
notb
jne
scas
popf
bound
mov
enter
test
jno
adc
into
lahf
dec
into
loopne
jl
lds
xchg
loope
push
lods
sti
xor
mov
pop
insl
and
jns
daa
and
testl
rol
fbld
xor
xor
pop
sub
ret
xor
push
pop
jecxz
or
lret
mov
pop
fdivp
or
rolb
mov
fsubs
mov
rorb
lahf
pop
out
push
push
cmp
daa
sub
xchg
outsb
repnz
fidivrl
out
ja
dec
adc
ss
fcom
or
push
mov
xchg
inc
aaa
jmp
push
mov
lahf
and
icebp
add
pusha
mov
je
ret
cmp
sti
adc
adc
fidivrl
mov
insl
xor
push
mov
inc
push
std
enter
mov
xchg
hlt
cmp
cmpsb
sti
adc
lret
adc
xchg
arpl
push
and
lcall
xchg
add
xor
cmp
add
push
mov
ror
ds
movsl
lret
inc
decb
or
gs
pop
add
cmc
fwait
lods
adc
ret
mov
mov
cmp
daa
shrb
adc
adc
cmp
mov
outsb
xchg
mov
lret
into
fisubrl
insl
imul
je
adc
and
pop
jae
movsl
inc
mov
xlat
lods
mov
daa
call
sub
lret
stos
pop
movsb
faddl
rclb
push
inc
mov
repz
inc
xor
aaa
into
dec
out
notl
xor
mov
dec
stos
sbb
add
jmp
aam
out
sbb
xor
out
jp
mov
mov
andb
test
loop
lds
cld
ds
test
push
fucom
pop
push
scas
xchg
mov
push
pop
add
les
in
xor
gs
push
fcmovu
xchg
lds
and
popa
hlt
arpl
push
fwait
pop
test
and
insb
in
pop
xor
rcll
or
dec
les
mov
xchg
cmp
mov
insl
pmaddwd
pop
jno
orl
xor
insb
sub
xchg
icebp
cwtl
in
into
cmpsb
out
leave
pop
outsb
daa
and
add
subl
adc
pusha
xchg
jecxz
push
int3
or
xchg
and
cmp
movsl
push
inc
stc
add
push
add
push
fbld
clc
cmp
mov
addr16
mov
push
dec
dec
mov
clc
ret
add
and
cmp
ret
test
dec
xor
mov
xorb
jno
in
pusha
pop
mov
jl
and
stos
pusha
pop
imul
and
mov
inc
cwtl
mov
jb,pn
and
sti
pop
sbb
add
out
or
jnp
and
ss
add
scas
lea
jmp
repz
out
xchg
or
loopne
fnstcw
test
cwtl
fidivl
stos
inc
and
mov
loopne
cmp
sbb
xchg
js
jb
sbb
jle
jae
jge
add
popf
nop
mov
xorb
rclb
rcrl
pop
in
icebp
push
imul
ljmp
lods
or
push
sbb
ljmp
int
add
daa
xchg
inc
xchg
jo
inc
or
jae
bound
xchg
scas
sti
push
imul
das
mov
push
adc
mov
incl
adc
mov
xor
aaa
cmpsb
andb
loop
sbb
je
mov
lea
pusha
mov
fxch
or
inc
stos
add
pop
inc
and
out
fidivrs
cmpsl
bound
sub
xchg
repz
mov
inc
or
jne
sarl
fiadds
adc
clc
aam
iret
pop
enter
jb
pusha
dec
or
imul
xchg
js
inc
popf
mov
pusha
mov
pushf
cmp
scas
movsb
sbb
hlt
cwtl
add
cmp
push
es
bound
push
xchg
das
insl
push
and
insl
nop
mov
loope
add
cmp
or
or
mov
mov
add
cmp
test
es
mov
out
ret
xor
cmc
fs
ret
push
cltd
mov
pusha
cmpsl
fcomps
xchg
adc
idiv
ds
imul
dec
dec
test
decb
stc
shll
dec
bound
iret
imull
lret
ja
dec
mov
sar
sti
lahf
sbb
repnz
in
push
mov
pop
mov
jb
mov
imulb
divl
and
aad
mov
idivb
popf
mov
movsl
sti
or
and
sbb
in
clc
mov
int
sbb
mov
cmp
mov
adc
gs
xchg
sti
sub
aad
push
lcall
inc
lret
inc
and
sub
mov
popf
sub
mov
in
sti
add
sub
mov
cmc
ss
insl
pop
mov
loopne
ljmp
sbb
stc
sbb
cmp
mov
stos
pop
inc
cwtl
loopne
mov
jnp
movb
cltd
adc
mov
clc
stos
inc
and
out
cwtl
or
pop
repz
pop
jle
repnz
mov
push
clc
jl
cli
cld
cltd
je
imul
in
sub
ficoml
stos
mov
negl
push
cwtl
add
stc
jle
xchg
sub
dec
loopne
int
cli
push
ss
add
aaa
mov
sub
enter
movb
or
mov
fs
scas
xchg
push
data16
or
js
pusha
sub
popa
pushf
dec
icebp
movsb
push
movzwl
lea
pusha
jmp
loope
rorb
testl
pusha
popf
xlat
test
jb
or
add
fists
in
sub
call
in
sahf
push
imul
xor
inc
or
xor
push
lret
mov
lcall
pushf
sub
nop
popa
hlt
scas
xchg
out
mov
and
cltd
shlb
pop
rcrl
pusha
push
mov
int
sbbl
test
int3
je
xor
add
shll
mov
lahf
test
divl
es
lret
mov
xor
push
mov
push
add
mov
add
xor
cwtl
inc
shll
les
pop
push
mov
loope
push
or
mov
shll
ret
cmp
stos
outsb
jg
sahf
lret
cmp
xor
push
fldenv
cmp
dec
inc
xchg
jge
out
testb
pop
and
jmp
insb
mov
xchg
icebp
out
jnp
dec
or
ffreep
jnp
test
xor
mov
out
add
inc
fucomp
pop
dec
push
jns
xchg
xchg
outsb
jo
js
stos
fnstenv
loop
jno
les
and
outsl
cmp
pop
push
stos
scas
push
jp
jae
jns,pt
push
gs
or
jmp
jb
fisttpll
fwait
ja
add
adc
cmp
push
sarb
mov
jge
sub
iret
pushf
ret
sub
adc
xor
cmp
mov
dec
cmp
shll
stc
dec
das
cmc
aas
sub
and
js
lret
es
fsin
ret
dec
xchg
pop
outsl
in
mov
or
test
mov
addr16
cmp
loope
cmpsb
or
adc
cmp
mov
xchg
out
and
add
mov
mov
je
lret
insl
mov
pop
das
inc
jne
pop
insl
add
and
sbb
mov
add
out
popa
adc
hlt
fs
xchg
insb
cs
jo
or
or
mov
add
sarb
push
cmp
dec
pop
sbb
push
icebp
sbb
leave
aam
dec
test
dec
out
mov
cmp
cmp
jnp
jbe
adc
push
or
xor
imul
add
mov
adc
dec
lret
jns
sbb
cmpsl
test
cmp
jae
cmp
mov
adc
inc
faddl
inc
dec
imul
push
adc
and
stos
and
xor
add
loope
xchg
or
inc
jns
jmp
jbe
lds
dec
scas
andl
lret
cmpsl
jl
push
lods
cmc
xchg
into
jg
sbb
in
and
push
scas
jge
pop
cmp
les
scas
ja
push
ret
xor
int3
in
movsb
mov
int
add
cmpsb
nop
mov
adc
adc
fisubs
xchg
and
sti
fninit
adc
jmp
add
dec
test
outsb
jb
scas
imul
shrb
or
add
stos
pop
xchg
shr
pop
mov
xchg
sub
negl
mov
and
das
and
loope
sbb
or
fildll
ret
inc
pusha
mov
ja
and
or
xchg
stos
xchg
adc
and
or
mov
and
jge
mov
mov
daa
and
ljmp
jbe
scas
dec
pop
das
gs
incl
scas
cld
xchg
arpl
enter
sub
push
jne
int3
addr16
aad
dec
jl,pn
mov
cmp
sub
mov
mov
inc
or
or
push
jg
out
out
inc
mov
xchg
mov
mov
aas
inc
mov
fisttpll
test
aam
pop
or
orb
pop
repnz
cld
pushf
insl
mov
loop
cmpsb
out
xchg
lret
stc
mov
push
or
mov
jns
in
lahf
push
aas
xor
pop
xchg
jg
aas
popf
add
push
or
pop
pop
rol
dec
cmp
mov
xor
leave
cmp
in
jp
inc
ja
pop
je
inc
in
mov
aad
mov
lea
cmpsl
sti
jge
repz
adc
imul
inc
pop
pop
divb
cmp
pop
push
adc
jmp
mov
jns
movsl
sbb
cld
fidivs
repnz
mov
adc
pop
in
ljmp
xchg
push
pop
fstpl
outsl
shr
and
xlat
adc
ljmp
push
jmp
jb
cmc
cmpsb
int3
jbe
push
and
lcall
addr16
rclb
mov
nop
fmulp
add
into
pop
jb
je
mov
dec
pusha
ret
mov
clc
pop
push
aaa
or
adc
mov
in
xor
push
mov
push
pop
xor
or
push
or
add
test
jp
jae
in
lock
mov
dec
pop
shll
or
cmp
fsubs
ss
rol
cmpsb
fidivrl
mov
imul
jmp
ljmp
mov
test
xchg
call
lret
idivb
xlat
in
shr
out
lock
cs
lcall
movsl
sbb
add
dec
sbb
xchg
loope
push
pop
cmp
rcrb
jb
mov
mov
in
popa
mov
jns
jb
xor
scas
call
in
inc
out
add
push
fs
adc
insb
jecxz
aad
xor
jno
rcl
inc
roll
movsb
testb
test
sub
or
test
dec
test
aad
sub
mov
sbb
sub
loope
out
iret
notb
push
cmp
dec
and
xchg
dec
inc
rcll
cmpsb
adc
aaa
shll
cli
loope
push
dec
xor
hlt
call
mov
dec
mov
jnp
cmpsl
cli
ret
bound
test
cmpsl
and
in
adc
loopne
shr
clc
mov
jg
or
test
leave
xor
movsb
lds
or
int
aas
repnz
int3
lea
loope
dec
loopne
mov
mov
scas
mov
xchg
int
pop
repz
add
lods
mov
cmp
dec
fldcw
mov
lds
hlt
push
dec
arpl
push
out
pushf
cmpsl
dec
or
or
xchg
or
lret
jns
fstp
mov
push
pop
and
mov
pop
add
nop
in
sbb
cltd
xchg
mov
or
cmp
jbe
sbb
aad
jbe
inc
sbb
pop
cmp
ljmp
negl
add
add
dec
hlt
ja
ljmp
divl
lods
cmp
xor
jp
mov
test
lods
ja
out
sahf
imul
in
and
inc
out
mov
jle
test
inc
push
pushf
xchg
xchg
andb
decl
sub
enter
mov
mov
cmp
mov
shrb
sbb
out
mov
sti
mov
jp
dec
ljmp
mov
sbb
into
out
or
out
imul
lahf
ret
dec
mov
lcall
ret
or
pop
fidivrs
cmc
sub
sahf
fistl
lock
nop
and
push
mov
jmp
mov
jmp
out
and
cs
push
out
movsl
xor
lods
jmp
mov
pop
movsl
pop
xchg
pusha
stos
xor
push
push
or
or
imul
cmp
sahf
rorl
xchg
and
mov
xor
divb
and
dec
pop
iret
cmp
fdiv
shlb
mov
movzbl
inc
sahf
rolb
stos
movsb
xchg
xor
jmp
dec
es
mov
aad
cmp
cmp
xchg
pop
jp
or
movsb
and
stos
and
fstpt
imul
mov
mov
outsl
push
inc
dec
and
stos
test
insl
std
mov
mov
dec
mov
mov
push
inc
std
pushf
add
cltd
jnp
lods
mov
mov
cltd
mov
sbb
or
lret
shr
mov
dec
and
dec
or
rolb
add
gs
rep
add
icebp
cmp
fdivrp
movsb
push
jl
sti
addl
xchg
iret
jp
pop
cmp
ret
sarl
mov
fisubrs
std
cmp
jb
das
ror
test
mov
popf
and
ljmp
push
xchg
scas
in
out
dec
sbb
mov
call
sub
jge
aam
or
ds
cwtl
dec
fsubl
mov
cli
scas
idiv
std
push
out
xchg
xchg
pop
fwait
add
lea
pushf
jnp
addb
inc
mov
lock
or
xor
mov
je
out
in
das
pusha
orb
add
sbb
xor
mov
pop
je
mov
jo
shlb
xor
nop
sub
push
sub
scas
lods
int
inc
pop
push
test
sbb
dec
mov
ret
jecxz
or
cmpsl
dec
std
mov
jns
mov
lret
test
inc
push
xchg
out
gs
cwtl
movsb
icebp
pop
sbb
xlat
sub
jle
scas
out
nop
push
mov
push
xchg
mov
fildl
imulb
sahf
cmp
push
cmc
jb
ljmp
dec
in
cmpsb
lods
inc
into
sahf
stos
addr16
xchg
test
jp
mov
sub
mov
pop
ja
and
mov
cli
mov
mov
test
ljmp
imull
and
subl
ja
push
test
mov
xor
hlt
mov
xchg
mov
lret
push
sbb
mov
cmp
mov
xchg
fnsave
dec
hlt
sub
pusha
into
adc
mov
lea
mov
leave
shr
cli
fisubs
mov
aas
test
inc
pop
adc
in
sbb
mov
cmovle
mov
mov
stos
pusha
push
mov
pop
jp
daa
testb
dec
jg
mov
out
sbb
into
aas
push
inc
jle
jno
lock
orl
call
jle
imul
shrl
sti
std
in
push
lods
cmp
mov
push
cmpsl
ljmp
addl
and
push
add
mov
adc
loope
fistpl
mov
lahf
mov
sub
mov
xor
push
sbbl
sub
xchg
adc
push
xchg
jg
or
shrl
shrb
mov
loopne
xor
adc
mov
cmp
inc
fnstenv
sbbb
xchg
xchg
push
jmp
roll
cltd
clc
sub
mov
arpl
pop
fnsave
add
imul
push
scas
jl
outsb
xor
stos
push
int3
into
scas
lods
cmp
popf
imul
cmp
xorl
mov
mov
add
or
adcb
cld
dec
xchg
pop
mov
cltd
lret
call
sahf
xor
jmp
jb
jne
fldenv
fildll
lret
lahf
loope
dec
mov
push
shll
dec
xor
bound
mov
frstor
in
icebp
xchg
sbb
les
add
xchg
and
mov
fdiv
push
fnsave
insl
xchg
pop
xor
fs
insb
fcompl
jg
stos
mov
repnz
mov
jns
ljmp
pop
or
sahf
xchg
outsl
repnz
shlb
inc
inc
jecxz
xor
std
jns
call
cmp
lret
lret
or
cmp
push
arpl
mov
out
cmp
mov
sub
xor
shrb
out
fcoml
xor
xor
movsb
jno
addb
adc
sub
test
push
mov
xlat
cmp
sti
arpl
mov
push
sub
xchg
xlat
sti
daa
fildll
aaa
ja
data16
cmp
push
mov
or
popa
adc
addr16
inc
ret
mov
in
addl
addr16
xchg
or
cwtl
rcrb
sub
enter
push
dec
mov
mov
inc
aaa
fsubrp
xor
or
xchg
adc
cltd
sbb
insb
add
xchg
inc
stos
outsl
mov
int3
cmp
aam
js
mov
push
add
clc
clc
mov
mov
mov
lods
mov
pushf
pop
nop
scas
sub
shlb
mov
lods
jg
cld
out
imul
cmpsb
cmp
in
ret
xor
popf
mov
clc
sub
movsb
add
xlat
inc
xchg
mov
das
push
and
lret
aad
sub
adc
sbb
pop
xchg
pop
inc
les
es
push
pusha
jb
mov
ljmp
mov
sub
push
mov
out
decb
xchg
xor
repnz
dec
pop
addr16
dec
sbb
js
mov
mov
mov
repz
int3
jg
push
adc
js
jle
call
fistpll
test
adc
sbb
lods
outsl
mov
ds
cld
rcrl
jg
sub
dec
es
inc
add
xchg
mov
and
push
lahf
scas
les
movsl
inc
inc
mov
fimuls
lds
inc
subl
cmp
pop
jo
mull
sub
dec
cld
mov
aad
aad
movsb
imul
ds
jmp
sbb
cmp
outsl
adc
jmp
mov
loope
lcall
jmp
inc
pop
sbb
orl
stos
mov
xor
ss
and
or
inc
mov
mov
aaa
js
jmp
push
sub
jge
jns
dec
in
pop
js
xchg
test
sub
gs
in
inc
repnz
xor
std
mov
push
fisttpll
xor
inc
sbb
xchg
or
enter
negl
test
sub
push
cwtl
sub
popa
movsl
adc
jp
in
jns
lret
push
push
push
sti
push
pop
xchg
pop
dec
jg
or
xchg
dec
mov
mov
loope
xchg
mov
sahf
adc
adc
and
ret
iret
push
fldt
jmp
jp
shlb
push
cs
test
sub
imul
xchg
sahf
js
daa
into
pop
adc
xor
lahf
clc
int3
sub
or
adc
mov
mov
pop
sahf
cli
inc
jo
daa
fisubrl
sahf
or
push
popf
lods
mov
aaa
and
aas
pop
push
inc
shrb
les
fcmovb
xor
inc
in
lret
or
mov
or
pop
pop
mov
push
mov
test
or
nop
adc
inc
lahf
jecxz
mov
in
cmp
add
jle
dec
fdivrl
stc
call
push
jo
add
sbb
dec
xchg
lods
mov
cmp
inc
sbb
or
cwtl
add
cmp
orb
cmpsb
dec
pop
or
sbb
cltd
xchg
outsb
bound
decl
dec
jne
jbe
dec
cmc
imulb
jne
out
xor
ret
pop
sub
xor
cli
ss
ret
xchg
imul
pop
stc
adc
sub
mov
mov
cltd
add
adc
jecxz
nop
and
push
push
bound
pop
mov
aaa
push
fwait
pop
lds
jno
out
mov
in
rclb
clc
mov
pop
mov
or
push
dec
lahf
or
cmpb
xor
jge
lea
or
out
imul
ljmp
xlat
call
int3
subb
nop
cli
in
push
daa
lods
pop
xor
stos
decl
push
pop
lret
or
shr
push
movsl
jo
mov
mov
rorb
lret
sub
roll
call
repz
xor
adc
ret
cmpsl
xchg
imul
sahf
test
icebp
push
fidivs
cwtl
mov
jmp
test
xchg
aam
sub
arpl
push
ror
outsb
test
xchg
push
out
out
sbb
push
fadds
imul
repnz
pop
out
insl
push
imul
push
das
in
enter
push
xchg
mov
cmpsl
add
and
mov
arpl
jns
mov
notb
js
jg
mov
pop
hlt
pop
pop
fs
mov
jbe
sbb
mov
rcr
stos
xchg
lahf
mov
push
jnp
idivl
cmp
sub
jns
push
adcb
xchg
or
pop
stos
ss
xor
add
outsb
testb
mov
xchg
ficoml
in
in
aad
ud0
pop
nop
sar
mov
mov
mov
call
lret
sbb
inc
add
mov
es
imul
lret
xor
push
jecxz
mov
lods
pop
pusha
jl
mov
or
mov
aam
dec
call
testl
sub
lods
add
mov
jmp
or
outsb
pushf
outsb
add
dec
inc
pop
lret
add
add
lea
jno
mov
rcrb
aam
xchg
and
and
out
sub
inc
inc
mov
into
adc
ss
adcl
clc
cs
testl
pop
jns
sahf
out
mov
sbb
jl
lods
add
push
stos
repz
in
jmp
imul
jle
ljmp
jae
gs
xor
xor
jae
pop
fstpl
aam
inc
ja
fildll
mov
mov
add
or
shl
push
mov
cmp
xchg
mov
or
into
addr16
or
shlb
adc
xor
fisttpll
mov
or
push
or
mulb
pushf
out
xor
icebp
push
pop
mov
or
in
das
testl
cmp
jp
scas
xlat
lahf
jo
pop
sub
lret
pop
into
cmp
out
and
sub
fucomip
icebp
cmp
push
push
rcll
adc
lcall
pop
pop
sbb
in
test
in
lds
clc
sbb
jmp
shlb
push
bound
hlt
jns
mov
fwait
sbb
rolb
sub
ds
fisubs
push
sbb
iret
xor
sub
lds
jo
in
dec
mov
and
add
test
sub
ss
out
movsb
iret
xor
movsb
lcall
dec
jmp
sub
xlat
ficoml
daa
dec
push
mov
imul
jl
out
daa
cmpsb
xabort
sahf
mov
push
push
aaa
push
movsb
or
pop
dec
movsb
repz
xchg
jp
add
mov
dec
lret
mov
sub
mov
fstpl
pop
addb
mov
cmp
cmpl
dec
std
cltd
cmc
and
push
das
mov
pop
mov
adc
mov
fisubs
scas
cli
lcall
mov
mov
stos
push
cmp
mov
aaa
add
je
or
inc
dec
mov
pop
sbb
xor
mov
mov
imul
subb
xor
fsts
cltd
loopne
in
and
add
insb
inc
scas
push
push
inc
xchg
pusha
cltd
mov
mov
pop
dec
repz
iret
inc
mov
jecxz
mov
adc
movsb
and
xchg
call
int3
popf
ret
pop
jbe
jae
das
mov
fisttpl
push
sbbb
lods
jbe
pop
lock
cmp
dec
gs
cli
push
das
stc
pop
sbb
sbb
mov
lcall
int3
arpl
stos
out
push
jecxz
aaa
mov
pop
fsts
pop
das
mov
jge
adc
cmc
lret
sub
orb
mov
cmpsl
add
mov
popa
rorl
scas
push
push
push
dec
and
in
out
sti
test
int
inc
push
mov
cmpsl
aas
jo
stc
mov
repnz
pop
push
dec
std
xchg
xor
inc
in
ror
mov
test
out
int3
sahf
mov
push
decb
jae
das
int
mov
pop
and
pop
imul
stc
push
loopne
cmp
cmp
jns
xor
sahf
js
xor
pop
or
sub
loop
cmp
mov
mov
popf
fdiv
adc
xchg
bound
mov
xchg
sbb
imul
xchg
rclb
imul
fisttpl
imul
push
test
push
nop
pop
mov
mov
imul
das
daa
pop
adc
fidivrs
lret
jmp
aas
scas
cli
pop
leave
mov
sti
push
add
sarb
mov
add
adcl
push
inc
mov
addl
cmp
pop
xlat
mov
mov
notb
push
mov
scas
jmp
ds
cmp
int
ret
cmc
sub
jle
pushf
and
in
xchg
mov
jb
sub
mov
std
push
cmpsl
mov
adc
aas
into
sub
scas
mov
mov
fdivl
inc
aaa
fwait
pop
nop
mov
push
cmp
hlt
mov
emms
adc
and
stc
jmp
fcoms
sub
sahf
inc
out
xor
xor
outsb
das
xor
push
mov
add
test
xchg
movsl
xchg
mov
jl
adc
jb
sub
movsb
push
loop
test
jbe
add
shr
inc
xor
scas
mov
xchg
jp
inc
aad
out
imulb
add
mov
pop
loope
out
aad
repnz
inc
push
in
das
cmp
inc
fldenv
mov
aaa
or
mov
lea
mov
fcoms
rclb
mov
mov
sub
std
andl
cs
mov
fiaddl
imul
jb
lock
cmp
jnp
fwait
sbb
gs
pop
test
bound
and
mov
data16
mov
push
lods
int3
mov
xchg
xlat
and
stc
jnp
data16
add
pop
mov
out
fwait
pop
jo
mov
cwtl
xor
sarl
push
push
mov
mov
pop
xchg
cmp
aaa
repz
sub
sar
dec
or
inc
js
aad
jns
mov
flds
imul
xchg
dec
pop
fisttps
test
xchg
cmpsb
out
mov
inc
sahf
lds
xchg
out
push
outsl
lahf
out
adc
pushf
cs
jbe
inc
jl
and
into
fsubl
lods
push
sbb
ret
jecxz
int
fadds
jo
or
and
or
out
and
vmovntps
jno
hlt
rcr
sub
cmpsb
in
dec
das
xor
ja
inc
ljmp
ret
pop
push
pop
testb
sbb
xor
add
xchg
ja
cbtw
mov
gs
ss
nop
pmulhw
movsl
cmp
xchg
lods
push
out
test
bound
and
xor
jmp
xchg
idivl
dec
pop
mov
mov
sub
ret
ds
fnstcw
or
repz
push
mov
xchg
mov
mov
mov
or
xchg
mov
jle
sub
dec
xor
dec
aam
dec
out
out
mov
sti
xchg
fidivrs
in
std
sub
call
inc
out
xchg
inc
imul
push
ss
xchg
lcall
fs
mov
int3
je
in
push
dec
push
push
daa
arpl
jnp
mov
pushf
les
sbb
ret
mov
popf
pop
and
testb
jg
jmp
mov
pop
lahf
adc
test
push
sbb
hlt
popf
pop
jp
mov
or
jge
add
adc
movsb
jb
addr16
lods
xchg
push
test
xchg
push
fisubs
cmpl
pop
or
dec
in
mov
and
pop
stc
cltd
lret
pop
and
mov
fs
fmuls
test
inc
stos
adc
fcoml
leave
mov
dec
cld
add
cmpl
dec
arpl
sub
repz
addb
push
dec
cmp
mov
in
movsl
lret
bound
out
fildll
scas
inc
mov
sub
jae
cs
clc
fimuls
mov
dec
jns
std
or
rol
fs
mov
xchg
mov
mov
mov
aaa
push
int3
or
or
das
into
add
cmpsb
cmp
xchg
cmc
dec
ja
insl
daa
push
mov
sbb
mov
movsb
inc
sub
mov
insb
mov
daa
jns
fadd
jmp
dec
cmp
insl
or
out
xchg
mov
loopne
imul
cmc
aam
aad
mov
fisttpll
aam
stos
lods
stos
sahf
fistl
xor
incl
aas
push
sub
fstp
inc
ljmp
movsl
jmp
dec
sub
in
pop
dec
std
sub
pop
std
aaa
fs
pushf
pop
bound
sub
stos
jne
adc
aam
stos
hlt
ret
mov
and
sbb
sbb
xchg
mov
or
imul
hlt
jbe
cmp
lcall
sti
adc
pop
in
dec
out
inc
cmp
lds
jle
cmp
mov
mov
enter
mov
test
xor
imul
aad
xchg
and
pop
je
adc
mov
mov
cmpsb
pop
add
daa
inc
fiadds
fstpl
mov
imul
movsb
jae
sbb
or
movsb
lea
jne
dec
addl
sti
in
hlt
adc
pop
iret
fists
sarl
sub
pop
ret
sti
int3
popl
mov
sti
movsb
rclb
xchg
je
sub
mov
sbb
aas
mov
cmpsl
das
outsl
inc
add
add
imul
imul
outsb
or
arpl
push
sbb
xor
mov
mov
sub
jns
ss
insl
mov
jbe
inc
ja
xor
pushf
aas
bound
inc
fldln2
xchg
inc
jbe
mov
out
fdivs
pop
shl
int3
add
fmul
dec
push
xor
jp
mov
fsubl
bound
addr16
ss
scas
mov
inc
adc
pop
das
test
clc
push
or
test
xchg
iret
pop
cmc
sbb
xor
ret
sbb
jbe
aaa
repz
arpl
pop
imul
xor
or
leave
loopne
mov
or
pop
dec
xchg
xor
es
iret
push
insb
lods
out
xor
add
pop
adc
lret
pop
leave
arpl
fwait
in
xchg
push
dec
lock
out
clc
push
add
jne
stos
mov
jmp
loopne
out
lods
mov
lret
push
test
adc
popf
cmp
movsl
xor
mov
push
cmpsl
cmp
mov
dec
add
mov
mov
ss
subb
leave
aam
push
pop
mov
sub
in
sub
roll
mov
dec
push
jns
sahf
adc
sbb
into
out
call
rcr
insl
rcll
push
pop
rorl
andl
inc
or
adc
das
jne
lahf
rol
dec
or
mulb
aad
and
jmp
mov
stos
fidivl
aaa
dec
aaa
lahf
mov
lock
xchg
cmp
rcll
aad
test
lods
or
xor
sub
test
mov
cltd
and
aam
outsl
adc
xor
pop
cmpsb
cmp
ret
dec
xlat
movsl
jp
test
mov
cmc
mov
xchg
call
and
rorl
dec
lcall
jp
js
or
cmp
repz
dec
xor
mov
negb
cli
test
pop
les
shr
dec
jecxz
lret
in
dec
cmp
xor
movl
push
mov
sti
mov
loop
in
shlb
lods
test
mul
xchg
adc
dec
mov
rcl
sbb
lret
sahf
fxch
push
add
and
jns
jne
pop
pop
addb
inc
sti
inc
sub
cwtl
out
pop
repz
movsb
fcoms
int3
stos
xchg
popa
out
call
mov
jae
lcall
pop
cmp
jnp
xor
lods
gs
pushf
mov
xchg
push
inc
push
sbb
jle
enter
mov
fisubrl
rcrl
fldl
xchg
push
arpl
iret
loop
ds
enter
cmpb
inc
or
enter
add
xor
int
dec
sub
inc
lret
dec
shl
shrl
cmp
test
xchg
ja
pop
out
into
dec
xchg
addr16
in
push
outsb
fsub
cwtl
jns
scas
das
add
dec
mov
jo
in
mov
mov
rol
mov
mov
dec
rcr
in
movsl
and
aaa
sbb
xchg
adc
testb
into
mov
pop
inc
xchg
inc
xor
mov
insl
adc
lods
addb
sbb
jecxz
fstl
ret
or
mov
ja
sbb
mov
ljmp
ret
jecxz
mov
jmp
clc
sbb
jle
repnz
push
mov
jae
repz
out
lahf
xchg
lock
xor
sbb
mov
jne
fidivrl
test
adc
jne
mov
cld
bound
cmp
lret
negb
push
push
in
inc
test
sarb
sub
mov
xchg
sbb
fisubl
out
mov
test
mov
ret
lea
xor
aam
lcall
hlt
push
imul
mov
jns
pop
jle
sbb
xchg
outsl
push
sti
sub
rorb
iret
push
inc
pushf
dec
cltd
pusha
leave
xor
xor
dec
push
arpl
jecxz
sbbb
icebp
aas
fidivrs
sbb
cmp
test
add
push
divb
inc
push
fldcw
jb
mov
sub
push
or
xchg
sbb
out
int3
shlb
push
daa
call
in
cli
push
jmp
mov
arpl
cld
xor
mov
subb
adc
idivl
lret
stos
roll
inc
fsubl
cmp
jbe
dec
xchg
jp
lcall
int3
icebp
adc
xlat
mov
jmp
mov
push
andl
out
adc
das
mov
xlat
mov
or
das
xchg
sbb
sbb
xchg
adc
dec
pop
or
sbb
sub
pop
fadds
lods
xor
mov
lods
dec
dec
outsl
ja
ja
mov
aaa
mov
ljmp
rol
dec
daa
and
xlat
mov
pop
xchg
push
bnd
sub
ret
push
sbb
shr
fsubl
leave
cmp
xchg
and
sbb
mov
outsb
and
pop
and
sub
lock
adc
push
icebp
push
stos
lods
xor
in
jl
dec
ficomps
fcompl
xchg
cmpsb
or
les
mov
test
sbb
mov
sbbl
dec
xor
mov
xlat
cmp
gs
les
dec
mov
fidivl
movsb
fimull
and
inc
add
adc
ss
fisubs
mov
xchg
lock
sbb
mov
testb
icebp
xor
mov
jle
pusha
xor
testb
dec
std
jp
mov
push
inc
cmp
push
pop
in
into
pusha
iret
pop
sbb
push
cwtl
std
mov
scas
sbb
push
cltd
pop
inc
nop
lods
or
sub
incb
cmp
cs
jle
das
xor
div
fimuls
adc
test
out
cmp
push
cmpsl
movsb
add
inc
loopne
dec
aas
ss
push
lods
push
imul
xchg
cld
rcrl
mov
cmp
int
adc
cli
out
fwait
add
arpl
and
mov
lret
mov
movsb
dec
and
sahf
adc
leave
xchg
jge
outsl
jmp
mov
fsubrl
in
or
movb
sub
orl
pop
push
push
pop
lods
call
in
fldl
jmp
xchg
movsb
test
rorl
andb
mov
mov
inc
std
jb
repz
push
cwtl
push
or
loop
push
lock
out
xor
rorb
gs
xchg
mov
lea
or
jb
and
cld
sbb
pop
outsl
mov
fisubrs
mov
cmp
cmc
cmp
jnp
push
in
lcall
add
test
call
dec
addb
fdivl
icebp
cmpsb
out
pop
jo
stos
flds
jge
fiaddl
adc
add
imull
sub
test
lcall
push
pop
xchg
andb
pop
stc
bound
lcall
out
mov
inc
loope
inc
and
call
mov
aad
pop
shll
test
sar
sti
pop
idivb
jae
sub
mov
mov
aam
xchg
jmp
mov
push
xchg
mov
jbe
pop
fcompl
xchg
sti
outsb
pop
stc
aam
lds
jle
sarb
fisubrs
mov
pop
push
clc
dec
add
xor
in
mov
fs
add
sarl
push
inc
mov
push
mov
sbb
inc
ss
lret
aas
popa
inc
insb
push
icebp
pop
je
jb
arpl
jo
mov
pop
pop
and
mov
es
push
sar
pop
push
mov
xchg
std
sti
arpl
pop
icebp
add
dec
xchg
leave
add
xchg
jl
cmpsl
and
xchg
out
xor
ds
xchg
adc
adc
xchg
push
pushf
or
out
xchg
out
scas
inc
mov
ss
pop
dec
sub
jb
push
mov
jo
cmpsl
push
sbb
es
inc
pushf
pop
movsb
xchg
insb
lock
int
cmpsb
sub
sub
call
popf
sahf
add
cmp
jle
adc
test
arpl
jae
fnstsw
pop
dec
dec
xchg
mov
lds
push
and
mov
sub
int
std
movsb
stos
or
add
dec
dec
std
mov
sti
push
in
push
jb
xor
push
mov
out
mov
cs
or
mov
imul
sub
push
pop
adc
fcompl
adc
js
sub
mov
loope
jg
je
les
mov
pop
outsl
cmp
xlat
mov
xchg
jmp
sbb
ljmp
fwait
cwtl
sti
add
pop
inc
mov
inc
lret
jnp
das
mov
dec
decb
or
iret
dec
xor
je
lea
data16
rcrl
mov
xchg
aas
xlat
lahf
push
dec
adc
ret
push
jnp
addb
sub
sbb
gs
push
inc
not
mov
mov
xor
sbbl
cltd
aas
or
in
adc
scas
cmp
mov
cld
ret
push
cmp
xchg
mov
nop
cmpsb
imull
push
dec
shlb
sub
inc
mov
or
lock
pusha
movsl
xchg
sahf
out
pop
and
and
jb
ljmp
out
fidivrl
lcall
pusha
mov
jmp
in
push
sub
bnd
pslld
sbb
sbb
sbb
xor
pop
push
xor
cli
push
xor
leave
cmc
std
daa
stos
mov
ss
sub
sub
push
cmp
daa
loop
add
mov
push
repz
andl
test
and
add
inc
mov
or
hlt
ja
mov
inc
lret
rcrb
sbb
fisttps
mov
int3
cmp
mov
and
daa
stc
out
cmp
push
adc
sbb
cmpsb
jp
push
dec
mov
xchg
inc
push
cmpsb
insb
mov
in
add
jne
movsl
xlat
sbb
nop
sub
sbb
lcall
imul
sbb
leave
jmp
test
mov
bnd
jg
stc
adc
shlb
push
in
push
or
and
jae
or
cld
sub
mov
stos
or
mov
sbb
popl
xor
movsl
or
xlat
cmpsl
into
jns
push
ds
fldcw
and
rcrb
insb
inc
call
mov
loop
jp
mov
leave
cwtl
cmp
push
sub
and
pop
add
xchg
divb
dec
lods
lock
icebp
fistpll
movsl
xchg
pop
jae
jno
sub
xchg
ja
ja
or
lahf
dec
inc
shlb
aas
stos
ja
cltd
pop
xchg
jmp
test
xchg
orl
sub
out
std
icebp
outsb
clc
cmp
call
int
cltd
test
es
push
cmp
shlb
jg
in
xor
xlat
push
push
mov
jns
jmp
mov
jmp
nopl
cmpsb
stos
inc
es
orb
dec
inc
leave
test
es
pop
or
out
pushf
add
push
or
cs
and
in
push
push
sbb
jae
pusha
mov
sahf
mov
xor
sarl
xchg
les
rcll
pop
xor
mov
test
jg
scas
loope
sub
clc
mov
sbb
pop
testb
mov
push
sti
xchg
shll
fsub
fcoml
popf
xchg
fstpl
pop
movsl
fdivl
scas
jl
shlb
mov
lods
inc
ds
xorb
dec
lahf
pop
pushf
addr16
or
shl
sub
outsl
or
cli
mov
inc
imul
shlb
mov
inc
sbb
mov
sbbl
jne
daa
cmpsb
jge
fsubr
lds
test
jae
mov
pop
mov
int3
std
sahf
adc
popf
and
mov
into
xor
mov
jmp
mov
cmp
mov
mov
cmpsb
push
fiaddl
cmpsb
fldt
and
pusha
int3
and
or
fpatan
dec
sub
in
sbb
sub
xlat
push
jl
or
inc
cwtl
or
stc
out
addl
cs
xor
xchg
cli
out
in
test
cmpsb
cmc
inc
sbb
jo
mov
ret
mov
and
xor
mov
mov
iret
jo
movsb
das
pop
in
xchg
ljmp
push
add
push
lods
and
sub
dec
cmp
pop
adc
mov
add
subb
inc
mov
inc
dec
fcompl
sbb
ds
adc
loope
test
sub
mov
ficoms
pop
mov
inc
and
cmc
push
cmpsb
xor
mov
mov
ss
or
cmp
or
sbb
ja
mov
push
lods
lds
sbb
pop
imul
stos
pop
sbb
stc
sbb
sti
jl
lods
add
sbb
or
push
cld
mov
jmp
fstpt
pusha
cmp
cmc
mov
inc
icebp
mov
int3
mov
lea
jle
mov
and
push
aas
lods
sub
test
adc
out
xor
lret
stc
shrl
mov
jge
pop
enter
push
cmc
inc
jae
push
jle
jmp
jno
aam
jo
xchg
in
cmpsl
sbb
rcll
mov
or
stos
fdivs
adc
loope
clc
push
leave
fwait
jb
rorl
pop
fs
movsb
aad
mov
add
andb
lret
test
adc
xor
aaa
xchg
sbb
push
cwtl
adc
or
add
xor
sbb
cmp
xor
sti
push
push
cmpsb
popf
inc
icebp
jo
test
test
adc
cli
mul
pop
dec
mov
fistpl
adcl
inc
in
push
xchg
xchg
pop
lret
and
xchg
pop
mov
sbb
in
jnp
push
rorl
lahf
jbe
mov
mov
xor
xchg
add
out
xor
outsb
data16
stos
adc
ja
aas
mov
gs
xchg
xchg
outsb
lcall
xor
mov
cs
shll
mov
cmc
repnz
dec
aas
mov
lds
mov
pop
gs
repnz
icebp
stos
cmp
add
cmp
xor
imul
dec
dec
out
in
cltd
sbb
test
int3
das
push
jae
push
and
popf
xchg
sbb
xchg
fiaddl
pop
arpl
dec
sbb
and
pop
mov
mov
scas
test
or
jge
iret
mov
jnp
mov
pop
icebp
push
sub
lods
lea
shl
in
addl
sbb
dec
pop
push
out
fcoms
je
insb
lahf
push
xchg
in
sbb
mov
add
ss
filds
sti
add
fwait
inc
dec
cs
je
daa
sub
cmp
adcl
test
add
inc
pop
and
cmp
arpl
push
faddl
addl
push
sub
rcrl
jecxz
xchg
fldt
mov
mov
jge
sbb
and
xchg
jb
sub
loope
out
inc
xchg
testl
rcrl
xor
idivl
mov
out
stos
xor
sahf
imul
mov
fwait
and
and
lods
mov
loop
dec
mov
ret
pop
mov
xor
xor
mov
inc
pop
ljmp
pop
rcrl
call
cmp
test
jp
xchg
inc
test
push
jge
in
call
call
frstor
lret
pop
mov
xchg
push
xchg
mov
push
inc
test
jb
pusha
faddl
fildll
jbe
sub
jmp
sub
movsl
mov
sub
pop
dec
sahf
fisttpl
rclb
inc
stos
in
and
pop
mov
test
in
xchg
aad
rclb
movsb
xchg
imul
std
adc
inc
js
dec
popf
adc
inc
je
outsl
jb
adc
pop
jo
dec
push
cmp
cmp
mov
hlt
fbld
addr16
test
and
aad
cmp
fwait
pop
mov
out
cli
lret
xor
jnp
mov
and
test
cmp
xchg
xchg
mov
add
int
outsb
ss
arpl
xlat
imull
pop
cli
dec
mov
dec
sub
mov
pop
mov
push
cs
cmp
lea
movsl
xchg
pop
adc
out
jle
or
stos
repnz
mov
js
xor
stos
cmp
or
sbb
pop
movb
sbbb
and
add
push
pop
or
pop
jne
pop
pop
mov
test
adc
xchg
mov
ljmp
inc
popf
dec
adc
dec
mov
rcr
inc
mov
or
mull
and
mov
cmp
leave
push
jmp
das
pop
daa
loopne
std
xor
and
nop
push
lahf
jl
pop
stos
xlat
xor
xor
pop
mov
inc
adc
cltd
sbb
jl
stos
xchg
inc
sub
or
pop
inc
adc
stc
dec
lds
push
inc
loop
mov
sbb
shrl
adc
push
iret
loope
xor
pusha
mov
sbb
fdivs
ret
addr16
psrlw
xchg
mov
pop
pavgw
xchg
jg
lret
mov
test
sbbb
pop
pop
sbb
das
inc
xchg
jne
or
data16
nop
in
inc
mov
adc
cmp
ret
xor
es
lret
cmp
push
xor
cmp
in
pop
mov
not
insb
sarl
dec
jno
fiaddl
testb
adcl
out
jne
pop
clc
inc
pop
mov
fsubs
rorb
push
aas
imul
nop
push
imul
cmc
hlt
mov
nop
movsb
dec
xor
mov
pushf
clc
adc
into
add
rorl
jo
xlat
jo
movsl
movsl
or
mov
movsl
xchg
out
mov
stos
les
mov
or
ja
xchg
loop
push
jmp
sub
pop
cmpb
enter
sub
cld
sub
movsl
jecxz
adc
mull
and
js
int3
pop
dec
jecxz
das
mov
jnp
mov
sbb
dec
jle
fisubs
mov
mov
cmp
sbb
bound
or
pop
mov
jg
or
sahf
in
movsb
inc
aad
bnd
dec
mov
cmp
pop
aas
jno
scas
stos
js
repnz
push
sub
jmp
cmp
insl
push
push
test
or
jo
ja
scas
push
icebp
jnp
sub
in
or
xchg
fimuls
inc
sub
pop
xor
aad
mov
or
sbb
andb
imul
mov
mov
dec
cwtd
int
jl
mov
aaa
or
stc
movsl
jmp
sbb
cmp
fistpl
mov
xchg
add
insb
mov
out
mov
stos
cmc
das
ret
xchg
pop
das
sub
xchg
icebp
into
rcll
and
mov
xchg
fdiv
das
lds
sub
scas
cltd
nop
cli
arpl
in
or
jnp
and
sarl
iret
sub
cltd
add
frstor
push
lock
sub
mov
jge
in
sbb
cli
mov
inc
jnp
sub
loop
nop
dec
mov
mov
scas
scas
test
iret
jnp
sub
rcr
daa
cmp
aas
ficoms
mov
push
mov
call
lea
loope
cmp
jecxz
lea
xor
cmp
popf
insb
in
xor
sbb
pop
sbb
lock
jbe
jle
aas
xchg
mov
and
cs
xchg
xlat
cmp
cltd
cs
jmp
jae
fnstcw
xor
in
mov
test
sbb
inc
mov
xor
ja
or
mov
pop
pop
imul
dec
add
bound
fcoml
push
adc
pop
fidivs
pop
mov
bound
xorl
cmp
lcall
setl
gs
notl
imul
shrl
jge
push
lret
jg
push
popf
or
lahf
xchg
cmp
push
push
cltd
lret
cmpb
mov
sarl
push
daa
cmp
mov
mov
cmp
dec
sbb
aaa
xlat
mov
outsb
pop
addb
movsb
xchg
icebp
mul
jo
sub
subl
inc
idivb
sahf
stc
jno
jae
data16
push
jno
shlb
aaa
sbb
aas
add
xchg
xor
mov
fnsave
mov
jl
pop
mov
lods
mov
mov
xchg
mov
jp
xchg
inc
inc
xlat
sti
push
jmp
pop
mov
cmp
int
xchg
sub
mov
jp,pn
daa
or
sub
pop
pop
fxch
or
and
xchg
mov
jae
mov
bound
jecxz
decb
or
sub
loop
std
aam
aas
sbb
xlat
add
call
mov
addr16
mov
lcall
scas
and
rorl
out
xor
daa
test
bound
mov
das
iret
mov
test
adc
or
lea
pop
ljmp
mov
in
add
roll
jns
add
or
xchg
lahf
jne
das
ret
or
dec
xorl
popa
jle
lds
push
cld
inc
push
sub
push
xor
dec
ret
push
lahf
jb
sub
sub
push
test
xchg
ret
and
cmpsb
cmp
pusha
xor
out
xchg
dec
push
imul
mov
ja
lcall
mov
test
pop
xchg
add
push
addl
insb
add
mov
xchg
hlt
sub
and
sahf
inc
sbb
mov
hlt
push
cmp
or
mov
dec
or
icebp
sbb
bound
dec
sbb
ljmp
mov
ret
sub
jns
in
ret
mov
aad
jns
jecxz
ficoms
mov
in
mov
mov
hlt
mov
fnsave
stos
jne
stos
cwtl
loop
data16
leave
xchg
addr16
mov
dec
cmp
sbb
mov
std
addr16
mov
jecxz
inc
lret
sbb
dec
mov
stos
js
outsl
aam
lret
lcall
lcall
adc
outsb
pop
dec
jae
push
fists
inc
int
lea
ret
popf
mov
ljmp
movsl
adc
xchg
adc
or
pushf
jl
dec
adc
xor
nop
aam
cmp
loope
adc
adc
jbe
movsl
mov
dec
xor
int
shrl
fisubl
xorl
in
call
fs
pop
maxps
jae
jmp
adc
fstl
rolb
pop
push
fadd
dec
call
sar
lea
pop
nop
sbb
adc
xor
jae
xchg
xchg
popa
lock
dec
lea
loope
rorb
test
push
stc
lods
and
adc
enter
or
mov
adc
cs
popa
lods
jp
ret
sub
mull
mov
fildll
inc
pop
cld
push
xor
pushf
int3
adc
dec
and
pop
xlat
push
sub
or
pop
or
xor
fistl
stc
push
je
mov
decb
ja
gs
sbb
imul
filds
xchg
mov
inc
and
jnp
mov
dec
mov
sub
test
jo
outsl
ja
and
lods
and
or
lahf
mov
loop
sub
pop
xchg
lret
stos
xor
push
xchg
push
sub
pop
mov
aad
sbb
add
xchg
xchg
aas
mov
jg
lea
insb
and
mov
mov
push
cli
push
pop
sahf
mov
movsb
inc
mov
and
sahf
push
jmp
dec
mov
bound
mov
dec
jne
fisttpll
push
or
js
test
and
jo
imul
pop
pop
cld
popf
jl
sub
mov
faddl
enter
or
sbb
inc
out
repz
adc
mov
std
cmpsb
iret
pushf
pop
push
pop
jae
mov
add
sbb
stos
es
cwtl
das
mov
xchg
and
in
xchg
mov
inc
into
out
ficoml
xor
mov
cs
fwait
inc
aas
loop
and
shrl
test
lods
bound
stos
xor
inc
pop
data16
mov
aam
movsl
fsubrp
or
mov
adc
sub
jecxz
rolb
jl
mov
andb
mov
in
mov
or
push
dec
xor
sub
sub
sahf
test
jo
lret
lret
outsl
jp
xor
ljmp
std
adc
mov
inc
rcrb
and
jecxz
loopne
jl
or
popf
and
adc
push
roll
mov
sbb
pusha
mov
cmp
or
jmp
movsl
scas
sbb
fs
lds
loopne
movsl
mov
sbb
addr16
jmp
outsl
stos
add
mov
sti
fwait
stos
cmpsl
dec
push
and
sub
add
test
xchg
mov
andb
popa
in
dec
push
pop
lods
mov
dec
push
dec
lds
int3
jg
add
outsl
fdivrp
cwtl
add
fucom
rcrb
push
push
sbb
or
out
iret
pop
movsl
pop
push
ds
ljmp
or
popa
scas
and
dec
jg
out
aam
faddp
push
mov
inc
jg
out
test
inc
or
push
push
cwtl
loopne
data16
pusha
adc
test
dec
sub
aas
shlb
push
pop
adc
mov
lods
repnz
mov
cs
inc
inc
pushl
jno
jp
dec
dec
int
fs
push
addr16
sub
pusha
mov
dec
sub
add
inc
stos
ja
int3
mov
sbb
mov
iret
cld
pop
sub
sbb
push
inc
xor
les
push
sahf
insl
stc
mov
mov
dec
rcrb
scas
std
jns
or
or
divl
push
stos
stc
imul
inc
mov
loopne
test
gs
insl
xchg
and
fistpll
lret
dec
push
sub
out
mov
rolb
push
fstps
xchg
test
mov
xlat
daa
add
sbb
xchg
test
out
test
ljmp
insb
subl
stc
mov
ret
jp
ss
std
xor
mov
sbb
mov
lret
cs
sbb
and
sub
cmc
cmpb
imul
adc
notl
mov
adc
pminub
in
xor
xlat
jl
cmpsl
out
ljmp
mov
cmp
mov
xor
insl
lea
cmp
popl
pop
les
mov
push
insb
iret
fidivl
push
cmpsl
cmp
adc
sbb
adc
mov
repnz
xchg
pusha
inc
aam
dec
push
jp
mov
xor
inc
xchg
mov
xlat
das
pop
ljmp
mov
mov
xchg
add
fsubrl
lcall
int
dec
scas
pop
es
inc
push
xchg
enter
les
mov
out
loopne
cmpsb
or
mov
loope
add
inc
lcall
dec
and
adc
ja
xor
pop
sbb
cmpsb
adc
sub
gs
mov
out
inc
xchg
in
cmp
das
sahf
xor
sahf
cmp
and
clc
cltd
inc
insb
or
or
mov
inc
imul
int3
movsb
pop
or
mov
rcll
lock
mov
out
lods
fsubrl
cmp
cmpsl
loop
push
cld
pushf
dec
xchg
pusha
xlat
push
iret
cs
inc
repz
mov
scas
sbb
std
cltd
insl
mov
push
idivl
es
pop
adc
js
pop
fimuls
jno
ljmp
aam
addr16
in
lea
or
push
outsl
add
pop
es
negl
lds
sub
xchg
scas
and
icebp
outsb
xchg
push
hlt
notb
nop
pop
cmpsb
ds
dec
mov
sub
cmp
lret
lret
scas
and
addr16
cs
or
adc
jecxz
sbb
data16
adc
xlat
mov
popa
mov
fcmovnb
iret
mov
into
mov
adc
xor
call
pushf
ljmp
adc
jle
lret
xor
aam
cmp
lock
add
and
scas
imul
adc
cmc
popf
and
push
sub
push
add
inc
repz
pop
pop
xor
mov
inc
xor
xor
or
sub
enter
push
pop
test
sub
sti
enter
mov
cmpb
mov
mov
add
xchg
xor
mov
adc
loope
jne
push
sbb
mov
sbb
iret
sbb
insb
cmpsb
pop
push
stos
pop
pop
lret
hlt
aas
mov
sahf
in
xchg
jno
push
orl
cmp
sti
mov
in
jne
test
add
jmp
into
or
fdivrl
xchg
and
pop
fwait
out
xchg
add
out
fldl
add
int
lods
stc
adc
les
stc
test
das
pop
cmc
mov
jge
loope
cmp
pop
push
mov
xor
mov
pop
pop
sbb
popf
call
jge
add
xorps
add
jle
dec
sahf
sahf
dec
stos
add
into
ljmp
and
add
fmul
and
mov
inc
jae
aam
inc
out
mov
cltd
enter
push
adc
mov
xor
js
loope
push
cmp
and
add
int3
xor
dec
mov
repz
cmp
xor
and
jne
movb
cmp
or
mov
pop
xor
lock
or
ljmp
imul
jbe
in
ret
cmp
add
cmp
sub
dec
jecxz
jmpw
cmp
rcl
lods
cmp
cmp
push
lea
fcmovnu
cmp
call
and
xchg
cltd
mov
leave
fwait
sbb
repnz
inc
sub
jo
into
push
pushf
repnz
pop
jns
xor
in
pop
adc
pop
sub
lret
adc
loop
addb
and
pop
or
cmc
sub
mov
add
jp
out
inc
mov
fisttps
pop
xchg
ret
fucom
sub
and
outsl
rolb
repz
jge
cmpsl
cmpsl
adc
or
add
mov
mov
dec
cli
sbb
mov
pop
jmp
or
ja
sub
mov
in
push
inc
gs
mov
rorb
add
orl
dec
mov
fs
sbb
push
ljmp
xchg
pushf
mov
aas
sbb
cmp
add
push
sbb
jle
bound
mov
sub
dec
mov
adc
adc
out
aaa
mov
or
nop
insb
lods
mov
iret
out
mov
jle
out
js
loop
xchg
or
mov
fistpl
jb
or
mov
and
int
loop
bound
rol
push
movsb
ljmp
xchg
jnp
in
shl
pop
lret
add
fdivrl
test
sbb
push
js
inc
insl
imul
mov
jg
sbb
push
add
or
and
int
rcl
in
pop
jbe
out
or
add
cmp
mov
cltd
push
adc
fcmovb
dec
pop
out
inc
stc
loop
mov
ret
sahf
push
mov
jae
or
push
mov
adc
mov
add
mul
lahf
push
lahf
int
sub
inc
jl
lahf
and
jno
xor
pop
adc
add
aas
aas
imul
in
outsl
test
popa
data16
sbb
movsl
loopne
sub
and
dec
int3
inc
loopne
xchg
mov
adcl
mov
aad
xchg
sbb
in
push
cmpl
inc
jb
insl
les
push
cld
mov
stc
fdivs
add
ret
stos
iret
push
jle
jns
push
sub
out
lcall
iret
lret
aam
add
ljmp
mov
inc
cmp
and
stos
cli
xlat
call
cmpl
pop
in
outsl
adc
lret
sub
test
aaa
out
jp
pusha
push
ret
mov
cmp
jg
test
mov
jl
sbb
cmpsb
xchg
mov
pushf
aad
loopne
insl
inc
lret
pop
add
int3
mov
std
sub
xchg
enter
xchg
rcl
or
cmpsl
xlat
roll
sub
mov
imul
sub
inc
stos
stos
jmp
pop
mov
mov
sbb
bnd
mov
loope
mov
test
pop
add
push
push
push
aam
imull
dec
test
and
icebp
imul
into
mov
sbb
stc
sti
xchg
inc
imul
and
sti
lret
shlb
xchg
mov
insb
stos
push
mov
outsl
lods
mov
add
pusha
aad
mull
cmpsl
push
add
mov
jne
test
push
out
xchg
mov
lret
sti
adc
sarb
and
popa
inc
dec
cld
or
and
cmp
add
test
jbe
arpl
xor
xor
out
inc
xchg
aam
sbb
mov
stc
lods
adc
inc
dec
inc
mov
inc
lret
mov
mov
push
xchg
sub
ret
out
bound
xchg
mov
adc
ss
inc
loope
adc
xchg
pop
sbb
cltd
sbb
mov
addb
push
aam
push
jns
shl
stc
into
test
or
dec
adc
lods
aad
out
je
pop
cwtl
test
fwait
lea
cmp
stos
add
test
dec
loope
pushf
push
jle
gs
jnp
mov
sbb
cmp
add
sbbb
aad
fidivs
fstps
rclb
xor
mov
xor
jg
fcomip
cmp
cltd
xchg
inc
pop
fnsave
mov
mov
push
mov
sbb
xor
pop
mov
pop
xchg
test
gs
adc
into
out
rclb
aam
int
pop
mov
add
xor
pop
aad
mov
xchg
pusha
arpl
inc
dec
fiadds
insb
push
mov
push
rorb
or
stos
cmc
orb
pop
stc
mov
jae
ret
stc
sub
or
push
pop
sbb
shlb
inc
inc
jne
clc
lahf
ljmp
sub
cltd
add
xor
sbb
adc
jecxz
mov
stos
cwtl
bound
lods
and
data16
nop
cmpsl
inc
pop
pushf
into
jne
icebp
inc
add
mov
sub
adc
pop
sahf
int
test
or
mov
lret
mov
cld
adc
dec
add
lret
push
adc
pop
sbb
and
aam
jl
pushf
scas
adc
sub
fnsave
push
inc
sbb
scas
push
pop
cmp
shll
je
pop
das
mov
or
pusha
lcall
dec
lret
xor
cltd
loop
int3
mov
inc
push
test
jl
jle
pop
xor
aas
adc
xchg
mov
adc
mov
sbb
cli
jmp
fs
int3
push
std
lds
adc
lods
pop
push
cwtl
pop
mov
or
sbb
add
xor
lock
add
adc
push
xlat
dec
jo
xchg
and
xchg
sub
xor
test
ret
dec
sbb
nop
sbb
mov
es
sub
jge
xchg
dec
dec
cmpsl
sub
mov
xor
movsb
push
mov
fisubl
xor
pop
dec
lcall
std
or
xchg
shrl
repnz
lea
push
loope
pop
inc
fs
hlt
ljmp
xor
mov
loop
jbe
push
and
jb
adc
fcomps
mov
in
stos
aam
and
inc
out
lret
add
sarb
add
repnz
adc
cltd
mov
push
sub
and
stos
lods
clc
jp
dec
mov
xor
adc
divl
cmpsl
push
push
cmp
dec
cwtl
ljmp
pop
repnz
mov
mov
hlt
out
mov
imul
cmp
pushf
sub
mov
lahf
imul
addr16
push
popf
xor
jno
fcomip
adc
mov
pop
adc
jmp
jmp
loope
jns
pop
pushf
jbe
imulb
imull
cli
cmp
popf
ss
mov
sub
push
xor
mov
xor
out
jp
sahf
or
push
mov
mov
shll
iret
mov
test
push
lret
shl
outsb
repnz
sub
inc
lock
push
out
rol
cmp
push
jo
dec
xor
and
clc
add
mov
pop
std
inc
int
jns
inc
push
shr
aad
jl
addl
int3
mov
mov
repz
jl
cmp
inc
xchg
ss
fldcw
mov
xchg
imul
popf
xchg
fildl
push
adc
fimuls
sub
xchg
lea
mov
jge
scas
sub
nop
jo
imul
scas
les
and
lret
cld
dec
mov
ret
aam
mov
icebp
mov
pop
sbb
add
pop
divl
push
movsl
pusha
je
imull
fs
adc
aaa
or
mov
lret
sbbb
pop
jl
push
mov
cmp
jae
mov
mov
xchg
or
pop
xor
add
je
push
sbb
jl
into
jno
adc
add
lods
ja
out
or
ljmp
pop
mov
push
cmpsb
mov
jbe
negb
mov
ret
addr16
js
mov
xchg
test
mov
rolb
insl
adc
movsb
push
out
adc
inc
loopne
rorb
xor
cmpsb
or
or
sub
lcall
add
roll
loopne
push
enter
dec
add
inc
adc
ljmp
test
jmp
aam
and
imul
lea
mov
add
mov
or
and
cld
xchg
inc
lock
insl
iret
shrb
and
xchg
mov
adcb
add
mul
or
sti
cltd
sbb
fimuls
outsl
push
xor
fstp
jmp
and
mov
xchg
shlb
sub
popf
call
add
push
lea
pop
scas
sarb
xchg
or
jge
outsb
test
sbb
out
xor
xorl
es
push
or
sub
sti
xor
or
rcrb
cmp
enter
and
push
mov
icebp
mov
jne
inc
cmp
xor
fxch
jp
jge
and
jns
nop
cmp
lock
jg
push
dec
add
push
cmpsl
cltd
inc
mov
inc
mov
mov
notl
push
jns
or
mov
iret
sti
ret
out
jnp
adc
push
in
fdiv
xchg
loop
js
cmpsb
in
shlb
ljmp
inc
shr
bound
jns
fdivl
push
xchg
and
pop
dec
push
mov
push
loopne
xchg
mov
mov
bound
xchg
sub
iret
mov
add
adc
lret
and
popf
or
aaa
xor
add
sbb
dec
mov
les
sahf
pop
mov
lret
fs
jbe
pop
mov
shll
and
cmpsb
mov
inc
adc
stos
push
push
rorb
inc
adc
lcall
in
aam
fildl
xchg
pop
jnp
pop
les
pop
sub
xchg
mov
inc
jmp
xor
or
data16
fsubp
nop
or
sub
pop
jg
cmpsl
js
add
xlat
xlat
addr16
rol
movsl
in
in
outsb
mov
daa
push
pop
repnz
mov
int
or
push
popa
les
mov
and
mov
fidivrs
and
inc
xchg
pop
leave
cli
addr16
sub
movsl
xor
das
or
and
shrb
xchg
add
ret
ret
inc
cmp
xlat
cmp
icebp
xor
mov
mov
mov
lods
out
inc
xchg
test
cvtps2pi
movsl
fistpll
pop
out
adc
sbb
shrw
lock
and
fs
dec
lods
out
mov
dec
popa
mov
mov
fcmovb
add
data16
movsl
sahf
adc
idivb
rclb
pop
movsb
inc
cmp
mov
sub
in
add
loop
xor
das
call
jb
lcall
test
ja
xchg
enter
loope
jnp
fsubrl
mov
mov
test
sbb
cs
push
pushf
cli
push
stc
gs
lods
and
fwait
push
inc
dec
mov
push
mov
aam
jmp
stc
inc
push
xchg
push
cld
pushf
jne
inc
pop
stc
loopne
mov
arpl
movsl
mov
lret
fstpt
gs
lcall
inc
mov
mov
mov
movsb
ss
fs
stc
jmp
cmp
int3
mov
outsb
cmpl
fs
arpl
lods
xchg
jl
push
aad
jmp
shl
js
sbb
out
xchg
movl
mov
scas
xor
xor
dec
inc
sahf
xchg
cmp
fadd
sbb
cltd
xchg
xchg
in
fiaddl
pop
inc
bound
mov
lods
int3
arpl
out
pop
pop
mov
push
dec
cmpsl
jno
sbb
stc
jno
sbb
mov
sub
sub
iret
pop
adc
outsb
add
mov
xchg
push
and
mulb
out
cmpsl
push
or
mov
stos
gs
imul
add
jnp
xor
lcall
fyl2x
sbbb
xor
lea
add
lret
out
pop
sub
int
dec
das
in
imul
xchg
jo
fwait
jbe
nop
sarb
lds
fnstcw
bound
lods
push
sti
test
aad
or
shrl
lahf
inc
adc
aas
cld
mov
icebp
mov
xchg
leave
das
inc
cwtl
mov
cs
lods
pop
lock
pop
xchg
mov
inc
dec
pop
or
and
pop
cmc
rcrb
stos
mov
push
cmp
loope
cmp
test
adc
cs
in
mov
xchg
mov
xor
testb
pop
mov
pop
out
or
and
inc
sarb
push
sub
pop
rcll
lock
or
inc
js
sti
pop
int
xor
cmp
dec
cmpl
jno
sahf
xchg
pop
mov
inc
or
scas
lcall
adc
in
jp
dec
test
inc
mov
call
dec
mov
mov
outsl
xor
sbb
data16
xor
es
sahf
xchg
outsb
rolb
out
add
xchg
dec
mov
ss
hlt
sbb
push
push
inc
call
loopne
push
xchg
insl
out
fldt
aam
stos
js
hlt
sub
mov
cmp
out
stos
aam
out
scas
mov
movsl
leave
cltd
mov
jb
sub
test
lds
nop
sti
and
xchg
add
test
cltd
or
mov
sub
fdivrp
sub
cmp
loopne
popa
dec
mov
push
repnz
out
test
lcall
cmpsb
mov
fists
jp
or
sbb
fstl
mov
mov
pop
hlt
shlb
test
pop
pop
sub
loop
cmpsb
imul
lret
flds
out
ja
clc
add
ret
rcl
daa
jecxz
inc
loopne
sbb
ds
pop
add
inc
mov
sbb
cmp
jle
jge
daa
mov
outsb
loop
inc
pop
push
xchg
mov
lods
jmp
cli
popfw
std
xchg
fbstp
es
mov
loope
es
lods
addr16
adc
mov
mov
cmpsl
push
lahf
addr16
movsb
xchg
pop
int
adc
orl
xchg
stos
xor
add
mov
es
xor
lds
mov
mov
cmpsb
mov
jo
xchg
dec
add
andb
fisttpll
fcomp
xlat
xchg
pop
into
cmp
pop
jge
jmp
sub
inc
sub
sbb
dec
iret
lahf
aad
fisubrs
cmp
sbb
ret
testb
xchg
adc
mov
push
es
sub
cmp
xchg
xor
push
test
outsb
rcll
mov
pop
dec
jnp
in
or
and
mov
sub
hlt
sub
pushf
adc
les
lds
xor
test
test
mov
and
jmp
lret
int
inc
lods
fwait
jge
mov
jae
jno
das
orb
test
jbe
int3
jecxz
sbbb
inc
lods
std
testb
jle
push
adc
mov
xlat
add
dec
hlt
push
out
cmpsl
dec
out
mov
push
pop
stos
push
jb
jle
pusha
lock
inc
pop
mov
jno
sub
stos
mov
in
mov
cmp
in
inc
cmp
pusha
imul
aas
int3
xor
into
fldcw
push
add
or
dec
jo
pop
cmp
insl
adc
fisubrs
jnp
add
mov
negl
inc
add
scas
mov
and
xchg
dec
mov
sub
mov
movsl
stos
out
scas
pop
fisubrs
jbe
aaa
push
sbb
adc
adc
inc
xor
sbb
movsb
gs
sti
xlat
insb
mov
sbb
stc
cld
rolb
adc
add
cwtl
xor
mov
jg
mov
mov
pop
cmp
inc
je
es
pop
sbb
adc
sbbb
daa
inc
push
xor
xchg
cwtl
or
cli
push
lods
push
dec
sbb
data16
inc
inc
dec
sbb
pop
mov
sti
sbb
loop
addr16
mov
gs
std
xor
rcl
sub
fcmovnu
in
cltd
mov
stc
jmp
add
push
ficoms
test
add
jl
lds
mov
sub
xchg
int
sub
pop
aaa
inc
xchg
xor
fcmovbe
push
fildl
or
idivb
jno
ljmp
adc
int
add
sbb
call
shl
pushf
loop
int
loop
mov
mov
loop
mov
xor
add
xchg
jae
cltd
xor
imul
push
fists
jg
jmp
dec
mov
adc
mull
test
jle
std
push
cmp
mov
or
testl
out
xor
and
hlt
adc
or
fstl
test
inc
les
xchg
inc
test
out
add
out
push
insb
or
enter
popa
subb
pop
out
xor
scas
cs
shlb
push
sbb
mov
cmp
mull
inc
push
imul
mov
jecxz
fst
pop
ret
xlat
leave
leave
rcrb
pusha
loope
cmp
sub
ds
cmc
pop
jae
inc
mov
popf
mov
mov
mov
pushf
mov
or
mov
sub
ficoml
das
jg
repnz
xchg
cld
mov
and
lods
cmpsb
fadd
sub
cs
push
aas
ret
fmul
fsubl
aas
test
in
mov
mov
ss
mov
arpl
add
mov
cmp
ret
popa
sbb
mov
loop
mov
adc
cltd
jmp
stos
adc
lds
sarl
sub
inc
mov
mov
test
pushf
mov
arpl
leave
movsl
jp
mov
int
or
aad
dec
pavgw
push
xchg
push
jnp
cmp
leave
add
inc
mov
sbb
inc
fmull
push
in
or
lods
stos
mov
bswap
xchg
sub
pusha
imul
fmuls
or
jae
push
std
dec
test
in
sub
pop
cmp
cmpsl
leave
pop
sbb
call
xchg
mov
fidivl
add
push
jg
cwtl
add
pop
enter
cmp
imul
pusha
icebp
fcoms
sbb
pop
and
or
and
xchg
mov
pop
addr16
sti
cmp
pop
stos
cmp
xchg
add
xchg
pop
xor
cmp
cli
das
add
sub
xor
cmp
inc
ficoms
fs
lods
sub
int
xchg
pusha
mov
sbb
cmp
mov
fcomps
sbb
cltd
lock
cmp
outsl
cmp
push
std
or
pop
cmp
insl
aam
push
mov
xor
lods
sbb
cld
test
sbb
outsl
movsl
rcr
mov
pop
cli
dec
ds
xor
cwtl
ss
xchg
or
dec
std
aad
add
pop
insb
outsl
mov
addr16
push
cmp
rcrl
aad
mov
push
or
or
ret
mov
mov
and
xor
cmc
pop
pop
jp
aam
jle
mov
loop
pop
sbb
mov
popf
or
pop
out
xchg
or
aad
mov
test
psubb
xchg
add
roll
add
test
add
ja
outsb
jmp
xchg
test
mov
jns
frstor
xor
out
add
push
popf
xchg
cli
sbbl
and
pop
imul
jo
jae
pop
nop
rcrb
pmullw
cmp
aaa
movsl
xchg
jb
inc
mov
xchg
loopne
outsb
jo
xchg
insb
lret
sbbb
inc
fs
ret
dec
popa
mov
or
aas
ljmp
fcmovbe
jg
and
mov
xor
push
cmpsl
pusha
jb
inc
xchg
fstpl
and
cs
sbb
push
in
dec
xchg
push
cmp
mov
fiadds
add
lahf
bound
movsb
push
imul
adc
mov
imul
ret
shrl
cmp
sbb
out
mov
lock
pop
sub
leave
cmp
scas
mov
lea
out
add
fisttpll
pop
ss
cmc
outsl
dec
sbb
sbb
cwtl
mov
push
out
loop
dec
mov
call
lods
jge
inc
ret
cmp
push
fidivs
dec
cmp
addr16
fsubl
loope
dec
pop
adc
pop
jbe
mov
cmp
mov
inc
hlt
cld
add
jno
sbb
stc
mov
aaa
cmp
les
popf
mov
pop
iret
je
inc
cli
or
aas
xor
xchg
jb
pop
mov
in
xor
icebp
mov
and
push
addb
push
jbe
sub
add
inc
push
and
fbld
ds
inc
and
cwtl
roll
sti
sbb
pop
int
rcll
fcoml
pop
sti
jecxz
push
cwtl
sbb
jne
clc
jno
mov
push
int3
sub
test
sti
sbbb
adc
arpl
pop
push
cltd
dec
mov
out
shll
shlb
inc
inc
and
mov
push
fimuls
insl
mov
push
sbb
cmp
xor
push
sub
inc
mov
mov
adc
sbb
xlat
sbb
jecxz
test
insb
sahf
das
out
cmp
inc
jo
movsl
in
push
jmp
mov
add
scas
inc
push
pop
pop
mov
fstpl
mov
cs
mov
adc
or
mov
imul
dec
cli
icebp
iret
aas
add
aas
inc
push
aam
fwait
inc
in
cmp
sbb
jbe
push
out
sub
sub
testl
xchg
sahf
out
nop
cli
xor
outsl
cld
dec
push
ret
cmp
and
in
cmc
testb
aam
and
xlat
lret
icebp
or
lods
sti
lret
sub
mov
cmpsb
inc
cmp
out
scas
fs
lret
stos
push
idivl
jnp
bound
shll
and
jp
shrl
fsub
pop
push
mov
mov
cmp
repnz
xor
adc
gs
fcmovne
leave
pop
imul
mov
lahf
xchg
shl
lahf
sub
repz
adc
inc
fistpl
mov
pmaxsw
jecxz
pop
dec
mov
push
lret
xchg
sub
xchg
mov
call
ja
outsb
test
or
inc
jl
outsb
jae
ds
sub
clc
xchg
js
cmp
pop
arpl
pushf
jle
xor
lds
stc
sbb
fcmovne
mov
dec
lea
dec
or
jae
pop
push
idivl
cmpsb
frstor
mov
mov
ljmp
pop
mov
in
addr16
cwtl
lcall
mov
inc
xchg
call
adc
gs
lock
jbe
movsb
fisubrl
mov
xor
mov
xchg
sbb
cltd
fmull
icebp
popa
pop
mov
mov
jbe
aam
mov
mov
das
mov
and
sub
test
adc
sbb
ret
enter
testb
or
lods
loope
aad
nop
push
lds
push
pop
xchg
mov
and
rorb
shlb
std
pushl
add
aaa
lock
push
dec
inc
sub
push
test
push
loopne
mov
and
out
push
sbb
dec
or
insl
jle
mov
test
pop
outsb
cmpsl
nop
push
lahf
push
and
je
sub
std
int3
push
pop
mov
sbb
dec
call
lods
pop
sub
testl
outsb
mov
scas
mov
insb
in
inc
shrb
popf
push
jnp
push
aam
or
or
pop
xor
cld
mov
cltd
xor
xchg
push
inc
roll
pop
es
adc
mov
or
push
xchg
cmp
cmp
push
push
mov
fadds
push
insb
mov
add
mov
out
inc
mov
inc
data16
or
or
xchg
mov
test
lock
stc
ret
cmpsl
inc
mov
fisttpl
or
dec
mov
enter
push
imul
mov
mov
mov
cmpl
fsubrs
nop
cmp
fildl
shrl
aam
push
pop
hlt
in
sub
fwait
out
mov
shlb
lea
xor
in
adc
lods
mov
loop
jle
cmpsb
push
mov
cmp
cmp
hlt
push
jne
adc
cmp
mov
pop
pop
adc
sbb
mov
jmp
add
xor
adc
aaa
adc
addr16
rorl
mov
cwtl
popa
push
jl
scas
cmp
mov
jg
inc
xchg
jno
in
sbb
sub
cmpsb
xor
and
imul
sbb
xor
adc
or
dec
mov
push
mov
jne
push
imul
dec
push
sbbb
js
stc
mov
and
popa
int3
out
scas
sub
lcall
pop
sbb
pop
rep
int3
std
inc
pushf
das
cmp
add
sahf
leave
into
sub
push
pop
and
popa
dec
ficompl
xor
int3
pop
cmpsb
cmp
xor
dec
hlt
popa
pop
xchg
dec
stc
and
push
add
mov
mov
clc
testb
push
lcall
adcl
cmpb
adc
push
dec
mov
mov
jne
cmpsl
cs
into
or
adc
clc
sti
jo
pop
imul
mov
cmpsb
dec
mov
add
inc
pop
xor
fsts
mov
ffree
xchg
imul
pop
int3
pop
push
sub
xchg
push
sub
in
sbb
andl
ds
mov
sub
stos
dec
jno
mov
sbb
push
pushf
xchg
rclb
inc
das
push
les
clc
mov
pop
out
pushf
xchg
outsb
add
mov
pop
mov
movsb
in
test
out
jne
testl
dec
int
inc
adc
inc
sahf
sbb
sbb
jne
push
sub
shrb
push
incl
inc
test
lahf
pop
shrw
jl
test
cltd
adc
adc
push
cltd
test
int
in
xchg
in
xor
dec
pop
outsl
mov
das
mov
js
xor
cltd
pop
test
int
mulb
inc
fdivl
fs
aad
mov
out
xchg
cs
adc
add
fcoml
sbb
adc
inc
call
addb
xor
rorl
stos
loop
repnz
xor
jb
or
leave
sbbl
or
xchg
or
sub
jp
data16
pusha
ret
sbb
cmp
dec
jno
xchg
lret
add
lcall
cmp
scas
mov
inc
lret
out
ljmp
cld
inc
sbb
cmp
push
mov
inc
xchg
sub
sub
into
ret
jns
leave
or
loopne
imul
push
je
loop
icebp
jnp
mov
shlb
add
imul
jno
inc
sbb
lcall
pushf
pop
imul
sbb
pop
enter
shlb
insl
adc
cmc
dec
xchg
out
ljmp
cmp
jmp
push
lret
cmp
jecxz
imul
hlt
adc
jo
mov
xchg
xor
or
insl
addl
fdivrs
imul
mov
stos
jl
aad
mov
xchg
or
push
lds
mov
aam
jmp
scas
sti
cltd
jmp
inc
mov
adc
push
jp
fldenv
inc
xchg
cmc
mov
sub
add
or
aam
popf
dec
adc
sahf
add
loope
pop
scas
clc
xchg
mov
pop
es
repz
bound
xor
aas
lret
adcb
mov
pop
fsubp
pop
mov
daa
pop
ljmp
shll
sbb
or
repnz
ret
mov
and
cmc
adc
cmp
push
mov
dec
sub
nop
in
xlat
in
mov
xor
inc
jbe
xor
outsb
insl
sbb
pop
lcall
test
shlb
adc
mull
push
in
push
in
and
and
pop
push
push
fwait
sahf
das
push
ja
push
mov
adc
mov
fcmovne
in
inc
mov
dec
push
nop
insl
mov
cld
mov
jbe
fiaddl
xor
jno
aad
ja
jp
repz
push
dec
out
enter
push
push
sub
arpl
cmp
mov
into
lea
mov
xor
push
inc
adc
push
pop
cmp
jbe
cmpsl
hlt
lods
lock
push
hlt
dec
faddl
pop
push
aaa
mov
and
jg
push
pop
and
nop
xor
or
in
jmp
cmp
mov
and
repz
rcrl
xchg
push
mov
push
aaa
mov
xchg
push
lods
push
test
xor
icebp
lock
dec
cmp
adc
and
std
int
lret
sub
mov
ja
test
sbb
push
loop
xchg
xlat
shll
push
add
enter
insl
push
xchg
push
xlat
pop
mov
jno
inc
daa
inc
out
lret
jg
xchg
mov
mov
mov
fdiv
lcall
es
lods
adc
jns
fwait
cmpsb
in
cs
jb
jmp
mov
xchg
push
mov
adc
cwtl
xor
leave
imul
icebp
roll
out
pop
fcoml
sub
jmp
test
lahf
repnz
push
or
sbb
sbb
adc
andb
lock
xchg
leave
push
es
pop
sbb
aas
xchg
rcr
adc
aad
pushf
push
outsb
mov
inc
push
js
cmp
jbe
dec
test
shlb
into
pop
stos
mov
icebp
push
in
lock
xchg
inc
in
test
movsl
pop
xchg
and
xor
mov
mov
lods
aam
push
and
sub
sub
imull
mov
pop
js
pop
test
sub
jns
mov
dec
scas
jg
out
sub
push
xor
mov
mov
sub
mov
cs
mov
bound
add
mov
mov
scas
xchg
popa
push
push
jae
test
pop
movsl
cmp
out
sahf
and
xchg
leave
shrb
cltd
inc
push
jo
mov
addr16
xor
mov
mov
fstps
scas
pop
bound
pop
iret
inc
out
sbb
icebp
adc
pop
or
call
imul
sub
loop
and
sbb
scas
pop
in
dec
rcrl
lahf
fnstcw
fisttpl
inc
cmp
lods
movsb
fwait
leave
and
cmpsl
ret
test
push
int3
mov
push
repnz
ret
je
int
inc
insb
sub
int3
cmp
sti
lret
pop
mov
cmp
stc
sbb
cmp
mov
push
scas
mov
cli
or
pop
cmp
leave
xor
dec
lcall
lea
add
orb
ja
mov
out
push
cltd
or
sahf
mov
inc
decl
push
les
mov
into
dec
jb
mov
into
das
lock
test
outsb
enter
incb
sbb
and
and
shrl
out
sbb
cld
movsb
push
lea
pop
mov
imul
nop
pop
and
add
in
out
xor
push
ret
in
jno
push
jno
jne
sar
aaa
ret
rorl
or
shr
sub
repnz
shrl
jb
adc
loop
pop
shl
push
loop
cltd
shr
arpl
inc
dec
lock
cmpsb
sub
inc
pop
test
mov
pop
dec
pop
orb
pop
mov
pop
inc
nop
cs
push
mov
loope
adc
cmp
scas
loopne
test
sub
xchg
mov
ret
popf
inc
pop
in
xchg
test
mov
xchg
negb
test
sbb
sarb
cmpsb
fistpl
mov
jbe
pop
push
pop
outsl
insb
out
push
mov
nop
jp
adc
and
cmp
mov
popa
sbb
sbb
and
jae
in
sbb
sahf
sbb
fs
in
repz
mov
adcb
mov
sub
into
xlat
adc
mov
addr16
daa
sbb
add
mov
sti
jg
cwtl
pop
test
scas
les
jne
sahf
or
or
inc
push
insl
test
fisubl
int3
inc
push
pop
adc
mov
pop
inc
adc
data16
out
cwtl
sahf
cltd
lea
outsb
adc
daa
jmp
loop
dec
sub
pop
or
dec
jnp
shll
sub
int
mov
sbb
xor
and
cmpsl
xchg
jo
xchg
pop
mov
shrw
add
imul
aaa
jge
popf
pop
pop
sub
ret
jp
ret
and
jl
mov
int3
movsb
movsl
cmp
les
pmaxsw
mov
pop
test
adc
inc
dec
add
mov
loope
pause
pop
js
cmp
out
fs
inc
push
pop
mov
test
or
shr
shl
pop
push
repz
xchg
jns
sbbl
cld
xlat
rcrl
bound
pop
test
mov
sbb
mov
add
pop
adc
into
or
adc
jae
mov
fiaddl
test
mov
call
aad
sti
ret
inc
cmp
sti
sbb
mov
in
cld
mov
sub
fwait
cmpxchg
scas
push
ds
test
jle
mov
mov
aad
stc
in
pop
cmpl
in
test
outsl
movsl
std
inc
out
ja
push
cs
xorb
aad
movsl
xchg
inc
mov
mov
mov
jns
and
fwait
js
mov
dec
sub
or
sti
outsl
movsb
decb
dec
aas
cmp
xor
lds
insb
aad
add
loope
mov
mov
in
sub
and
fmuls
jmp
movsb
int3
cs
rcrl
xchg
add
add
addr16
dec
out
adc
mov
lods
ja
xchg
je
push
ret
ror
jns
xchg
std
iret
fs
adc
jae
add
mov
xor
mov
jae
jns
rclb
add
fistl
scas
mov
and
test
pusha
xlat
call
fwait
mov
adc
pop
lahf
scas
popa
ret
cli
pop
adc
pop
xor
pop
cmp
cs
mov
mov
jle
push
enter
mov
popa
xchg
cwtl
push
add
pop
dec
xchg
inc
ja
shll
lret
dec
insb
stc
fisttps
push
pop
out
inc
mov
xchg
push
add
test
es
insl
js
xlat
and
inc
shl
rcrb
jp
arpl
xor
jg
inc
mov
push
rcr
aas
inc
pop
scas
in
mov
sub
pop
data16
sbb
and
cmp
ffree
ds
lea
add
add
mov
cmp
pop
dec
add
jnp
adc
pop
lcall
mov
cmp
ror
fs
ficompl
mov
sub
add
testl
jg
xchg
pop
out
dec
pop
mov
jp
add
push
add
xorl
add
push
jecxz
fisubrl
sbb
mov
imul
xchg
les
test
jbe
mov
pop
mov
push
stos
stos
addl
dec
sub
mov
cmc
push
movsb
xlat
mov
push
ljmp
cltd
mov
mov
clc
xchg
mov
sub
xchg
mov
sub
sub
push
rcrl
or
add
adc
iret
mov
popa
mov
mov
xchg
and
or
loop
sbb
loop
insl
mov
jno
adc
in
cmpsb
insb
mov
rcrb
cltd
pop
pusha
push
mov
xor
cli
inc
mov
and
mov
mov
mov
int3
xchg
cmp
jg
je
addr16
xchg
mov
sbb
int
add
mov
and
lods
push
push
aam
cmc
or
sbb
sbb
and
pusha
sbb
sbb
adc
adc
enter
pop
sub
out
es
aaa
cld
ret
mov
loop,pt
xlat
mov
in
add
push
aas
pushl
push
cld
mull
ds
mov
dec
jb
xchg
sbb
test
cwtl
daa
addr16
jmp
das
pop
or
xchg
xchg
test
mov
mov
pop
ficomps
lret
scas
dec
add
sub
inc
jmp
jmp
rorl
or
cmp
jo
loop
cmp
fstpt
arpl
fwait
iret
xchg
dec
ljmp
jp
sub
outsb
std
push
out
or
rcrl
inc
or
jns
repnz
in
sub
insb
daa
sbb
das
add
fisubrl
sbb
xlat
jne
call
xor
sub
sbb
jne
mov
mov
stos
mov
and
xor
cmp
fldcw
addr16
xchg
xlat
out
aam
loopne
sub
add
xchg
cmp
test
mov
aad
cmp
mulb
adc
cmpsb
jnp
xchg
or
adc
test
pushf
cmp
outsb
and
sub
addr16
xchg
fldt
jg
xor
fsub
sbb
adc
sub
add
shll
mov
cld
mov
add
cmp
adc
cmp
inc
jb
and
dec
push
aam
mov
ljmp
aas
cmp
sti
fsubs
adc
test
jnp
scas
arpl
addb
cmp
adc
iret
push
lret
mov
jl
notl
inc
mov
xor
scas
hlt
cmpsb
push
mov
orl
loope
push
or
xchg
ds
pop
dec
test
and
xor
sbb
and
push
cmc
repz
gs
ljmp
ljmp
std
xor
jg
aas
aas
or
je
mov
sbb
insl
popa
shrb
mov
js
mov
and
add
or
sub
mov
xchg
enter
cmpsl
cmovno
pop
in
fadd
stc
sbb
into
cwtl
and
xchg
sbb
mov
xor
sub
jge,pt
push
sub
or
mov
add
jns
adc
ror
and
xchg
cli
dec
bound
cwtl
loope
mov
rcl
mov
inc
outsb
out
out
or
jp
jbe
int
inc
fcompl
mov
xchg
ror
mov
mov
leave
cmpsl
aaa
push
movsl
fs
sbb
out
add
sbb
jecxz
inc
jle
outsb
push
leave
cmc
adc
mov
ss
cmpsl
push
outsl
mov
ficoml
scas
lea
mov
jmp
jns
add
aad
popf
xlat
loopnew
loopne
sbb
iret
call
and
sbb
mov
mov
lock
ficompl
fisubl
mov
in
call
add
mov
cmp
repz
and
cs
aas
inc
icebp
clc
xor
shll
scas
mov
and
push
lock
stos
add
dec
pop
jle
fstl
xchg
jmp
pop
add
pop
lock
dec
dec
test
inc
pop
mov
nop
mov
mov
cmp
push
rcl
or
push
xor
adc
push
dec
sti
xor
fisttpl
add
repz
call
jo
insl
js
pop
popa
add
rcrl
adc
lds
daa
loop
fldl
sbb
cmpb
sbb
pop
xorb
int3
scas
iret
movsb
cli
mov
movsb
lahf
cwtl
mov
adc
push
inc
pop
in
pop
imul
mov
lret
inc
mov
int
faddl
pop
or
sub
sbb
pusha
ret
pop
and
aad
fs
add
iret
outsl
push
pop
movsb
sub
and
inc
jbe
or
push
push
jle
xor
ss
xchg
mov
jle
rcr
repz
mov
xchg
dec
stc
sub
mov
ja
adc
adc
rclb
loope
out
mov
add
lahf
lock
fadds
cmp
pop
fxch
sahf
push
push
pop
pushl
xchg
cld
cmc
push
outsl
scas
jp
hlt
sub
push
stos
sub
push
lods
gs
inc
in
testb
cld
cs
mov
mov
xor
stos
mov
lahf
jge
mov
mov
dec
push
dec
inc
jbe
inc
jno
fdivrs
stos
sbb
lea
std
push
int3
mov
out
scas
jecxz
xor
pop
cmp
fldenv
adc
ja
mov
xor
insl
add
xor
mov
testl
ljmp
decb
cmpsl
fcom
adc
daa
xchg
add
lret
nop
iret
cwtl
adc
sbb
repz
inc
addb
mov
cmp
lret
push
push
xor
sbb
jmp
add
mov
repz
movsl
mov
cwtl
jecxz
push
lds
testl
out
aad
jb
nop
push
sbb
ja
ds
fcoms
inc
push
xchg
imul
cmp
notb
clc
xlat
jbe
mov
cmp
je
sbb
int
and
jae
fs
and
mov
and
idivb
xchg
cmp
or
fdivl
repnz
mov
leave
in
repz
cmp
lock
aad
mov
fwait
inc
inc
jo
sub
mov
mov
les
jmp
cs
scas
movsl
loop
add
mov
mov
or
sarl
pop
std
inc
pop
mov
mov
mov
repz
addr16
test
fldt
push
ds
iret
adc
xchg
jno
sarb
push
cmp
insb
testb
sbb
test
push
cmp
mov
mov
iret
sbbb
sub
mov
lahf
lds
cmp
out
mov
push
lret
dec
stos
in
pop
gs
inc
ja
jae
add
mov
aad
sub
mov
cmp
dec
jge
popa
filds
imul
and
int
out
in
mov
lock
psubb
mov
loope
mov
add
lret
inc
push
clc
ss
or
lret
mov
ds
dec
cld
lds
or
and
sub
lea
test
adc
push
repz
in
jecxz
add
fbstp
inc
clc
fmull
inc
sti
fbld
dec
lahf
mov
cli
mov
int
mov
xacquire
lods
mov
push
movsb
test
movsb
push
xorl
dec
inc
xchg
int3
pop
and
inc
into
or
jae
rep
mov
xor
jmp
cwtl
add
nop
jmp
rcrb
sbbb
adc
xchg
pop
or
push
iret
xchg
clc
daa
clc
std
and
add
jbe
lret
cwtl
in
mov
scas
xor
cmpsb
je
jmp
jge
repnz
add
cmpsb
scas
test
es
cmc
mov
lret
pop
dec
mov
scas
movsl
sbb
outsb
mov
ds
in
lret
sub
ljmp
xor
sbb
or
hlt
stos
dec
mov
sbb
sbb
jae
adc
inc
push
popa
xchg
mov
jno
fs
leave
lret
jns
rcrl
mov
cmpsb
xchg
or
mov
in
adc
lods
push
or
ss
xor
adc
cmp
xor
and
and
cmp
es
push
mov
mov
push
push
test
mov
in
es
rcr
dec
mov
shl
push
xchg
adc
fs
xchg
mov
and
xchg
aad
mov
adc
repz
jge
movsb
fwait
cmp
add
cwtl
mov
mov
or
mov
in
outsb
mov
cmp
roll
add
cmpsl
push
lock
mov
xchg
rclw
repz
les
mov
loope
test
mov
jp
fnstenv
pop
stc
pop
sbb
jmp
xchg
in
and
or
adc
dec
sub
iret
mov
in
dec
int
push
into
stos
negl
cmp
lds
ja
inc
movsb
cmp
and
cmpsb
stos
in
cmp
cmp
fcomi
test
test
cmp
fadds
in
dec
jns
pop
hlt
insl
pop
adcl
inc
popa
xchg
mov
shl
mov
xchg
jmp
push
int
das
pushf
js
shr
stos
mov
push
inc
sub
jno
adcl
inc
divb
in
sbb
or
push
and
dec
xor
xor
jge
sbb
out
inc
test
scas
or
jo
push
mov
mov
cmpsb
and
cs
mov
jne
jmp
in
in
push
jge
push
mov
push
adc
daa
rcrl
lcall
mov
sub
pop
in
fcmovne
sbb
dec
test
pusha
or
repnz
sarl
adc
inc
mov
jns
push
stos
sbb
mov
lods
int3
and
lods
push
dec
shrl
jnp
xchg
nop
push
jge
jns
dec
jae
gs
insl
jmp
loop
fs
mov
repnz
xor
daa
xchg
pop
pushf
mov
shr
pop
sbb
xor
pushf
icebp
movsb
popa
adc
das
xor
out
lods
xchg
lods
repz
hlt
scas
mov
dec
scas
mov
daa
in
shl
in
incb
pop
sbb
mov
out
sub
jp
addr16
jno
call
mov
ja
or
pusha
sub
mov
pop
clc
stos
xchg
popa
dec
int3
jmp
cmp
jb
push
lret
sub
test
in
cmc
cmp
pop
stos
test
jb
cmpsl
xor
push
aaa
fidivrs
sub
mov
stc
mov
xchg
dec
or
mov
pop
fnstsw
cmpsb
xchg
sub
jp
and
test
int
or
paddw
test
jecxz
push
cld
mov
jp
mov
sbb
xchg
and
xchg
jmp
mov
inc
ss
mov
pop
repz
je
mov
and
jge
jmp
lods
push
or
mov
cs
scas
push
push
sbb
ret
sysexit
add
hlt
insb
fwait
in
sbb
sbb
fistpll
es
sbb
popa
insl
les
in
shl
decl
dec
in
lea
or
ja
inc
sbb
inc
mov
cmp
clc
jl
ret
add
rorb
test
imul
in
jb
fcmovb
addl
popa
popf
fmull
push
imul
cmpsl
xchg
jns
or
sbb
das
jmp
mov
mov
into
pop
jo
mov
jmp
sbb
add
orl
ucomiss
loope
leave
cmp
pop
mov
int
out
movsl
jne
divb
rclb
cmp
call
xor
cltd
pop
inc
mov
lock
xchg
cmpsl
jo
inc
mov
jb
mov
mov
and
mov
out
jmp
divb
inc
subb
das
mov
mov
push
pop
mov
dec
test
cmp
sbb
fbld
scas
mov
mov
jmp
jl
fsubs
jae
rolb
jo
push
cmp
mov
enter
mov
adc
mov
arpl
jbe
aaa
test
or
or
out
pop
dec
leave
inc
arpl
cmc
insl
cmp
cmp
adc
mov
jg
jns
fstp
sbb
pop
daa
mov
xlat
inc
subl
sub
hlt
ret
mov
mov
or
sub
pop
fildl
lret
push
sbb
iret
stos
movzwl
stos
mov
cmp
cmp
mov
andb
or
jb
mov
into
bound
mov
je
call
in
push
dec
or
addr16
pop
ret
lret
bt
je
adc
iret
in
fld
lds
jmp
mov
pop
pushf
xor
stos
or
adc
jae
jb
clc
sbb
cmp
or
mov
clc
nop
fists
pop
mov
test
std
pop
dec
je
push
and
test
cli
jg
xchg
pop
loopne
insb
nop
add
inc
movsl
mov
clc
lods
push
je
push
mov
andl
push
adcl
lcall
pusha
jbe
out
jb
lea
add
xchg
jl
pop
movsl
adc
and
mov
test
bound
mov
test
jle
clc
lret
add
inc
push
repz
fwait
xor
sbb
sbb
pop
inc
dec
out
push
movsl
sub
icebp
inc
lcall
add
out
nop
mov
and
sbb
les
fisttps
mov
call
int3
push
jle
dec
sarl
loop
jle
or
cmp
cmp
sbb
mov
sub
xchg
jne
loope
mov
leavew
mov
div
xor
out
push
or
imul
adc
lahf
roll
push
inc
push
shll
dec
pusha
jl
dec
adc
enter
cmp
pop
jmp
dec
enter
sub
iret
xor
lds
shr
jno
cwtl
jp
cmp
fisttpll
mov
mov
cmpsl
push
xor
dec
sbb
push
cmp
in
push
mov
xor
jae
arpl
cmpsl
movsb
mov
iret
lods
repz
icebp
cld
and
jno
pop
xor
clc
loop
push
in
pop
test
jp
pop
fisubrl
mov
mov
pusha
jbe
pop
sbb
adc
xor
int
xchg
or
pop
lcall
jo
popf
adc
or
inc
mov
cltd
or
inc
xlat
cmp
and
xchg
cmp
inc
mov
jecxz
inc
jl
jp
ret
or
icebp
xor
push
imul
les
jnp
arpl
popa
cmp
cmp
dec
pop
mov
adc
arpl
sbbl
addr16
int3
sbb
or
sbb
xor
jb
fs
xchg
push
push
xor
jb
imul
popf
pop
jmp
addr16
aam
push
js
push
xor
loop
jne
ja
scas
test
push
ja
hlt
lret
mov
std
pop
cmc
es
xchg
fs
test
lock
pop
cmp
rcrl
divl
arpl
iret
xor
cmp
aam
and
test
insb
insl
pop
f2xm1
inc
mov
scas
push
mov
pop
sbbl
fistpll
mov
fstpt
nop
pop
imul
inc
jle
stos
jo
mov
bound
lea
push
testb
cmp
test
pushf
or
popf
lock
mov
dec
leave
push
push
pop
lret
push
cltd
aad
sub
js
cmp
rcr
test
xor
flds
hlt
add
mov
add
fs
loope
add
bound
ss
push
push
adc
mov
fisttpl
add
adc
jmp
aam
dec
lods
sbb
jmp
jb
or
lret
rorb
jge
pop
stos
mov
ss
shlb
mov
test
add
cmpsl
sti
add
inc
stos
pop
insb
xlat
and
test
outsb
fcomps
push
jge
test
sbb
adc
faddl
jle
out
cmc
adc
sbb
mov
xchg
fsts
lods
xlat
stos
lea
and
xchg
mulb
repnz
mov
dec
lods
pop
push
pop
shufps
inc
push
repnz
arpl
and
icebp
cmc
sbb
sub
sbb
add
cs
inc
insb
cli
ficompl
std
fsts
mov
cmc
or
xorb
pop
fwait
paddsb
cltd
lea
jg
xchg
aas
push
pusha
arpl
test
jno
rcl
pop
stos
jne
xchg
les
subl
repz
inc
mov
mov
jne
pop
sub
and
inc
int
ret
xchg
js
arpl
stos
and
sbb
in
scas
dec
lds
enter
jb
scas
fadds
shlb
adc
movsl
push
lds
xchg
dec
xor
loope
or
push
daa
dec
cld
xor
movb
cli
out
mov
adc
add
inc
inc
adc
mov
ret
sbb
sub
pop
popf
je
repz
sub
fidivrl
scas
bound
sbb
mov
ljmp
jb
loop
int
or
jp
mov
jb
test
cs
les
inc
xor
sahf
out
or
call
pop
shr
ficoms
mov
or
cmpsb
pop
es
cs
dec
jne
xchg
sub
jbe
mov
inc
pop
mov
fldenv
push
mov
je
stos
aad
add
sbb
cmc
sub
ljmp
ja
ja
negb
add
sub
add
rorb
adc
ret
push
push
push
or
std
in
pop
mov
xchg
jle
cmp
and
sti
xchg
mov
xchg
cli
cmp
xor
popf
in
and
inc
in
mov
jge
test
push
mov
xchg
fwait
popa
add
mov
add
scas
aaa
xor
imul
lret
xchg
jp
or
leave
jnp
std
stc
mov
aas
or
lcall
mov
inc
cmp
fisttps
jecxz
imul
add
test
or
idivb
shll
cltd
adc
jae
or
stos
mov
lock
mov
xchg
and
fs
jbe
pop
sbb
mov
lds
mov
and
lods
xor
push
andl
xchg
sub
inc
sbb
rcrb
or
jge
inc
mov
iret
and
ljmp
lea
test
sub
jmp
adc
sbb
fsubrs
imul
std
aad
and
mov
xchg
mov
inc
lods
ljmp
add
xchg
jne
mov
lods
mov
add
idivl
inc
and
pop
mov
mov
mov
aam
dec
repz
bnd
adc
push
test
push
test
jge
mov
in
cmc
out
dec
test
dec
mov
fidivrl
outsb
xchg
jl
jne
aaa
outsb
js
in
addr16
dec
movsb
jno
sbb
sbb
shlb
inc
cwtl
addb
sbb
add
std
cld
cmp
outsl
xor
inc
repnz
inc
je
push
scas
cmp
je
movl
mov
sub
mov
popf
add
test
aad
jle
mov
jne
ret
bound
and
icebp
int3
je
pop
fistl
push
out
shrb
lods
cltd
xchg
sti
scas
jg
mov
js,pn
xchg
jp
gs
add
cmp
dec
xchg
mov
dec
and
sub
paddusw
push
cmp
jns
jb
aam
inc
sbb
dec
sarb
xor
out
mov
push
fisttps
xor
or
cmp
loopne
mov
pop
add
dec
arpl
sub
mov
outsb
ja
test
pop
xor
dec
inc
dec
push
pop
xchg
iret
lcall
push
lret
or
mov
movsb
and
mov
push
fcoml
push
ret
dec
ret
or
or
lahf
mov
gs
in
mov
cmp
adc
testl
push
push
inc
sbb
sarb
nop
jp
iret
in
jl
fisttps
jo
sub
lcall
in
test
and
jnp
pop
cli
fimuls
aaa
hlt
mov
cmpsl
mov
iret
pop
lahf
cmc
mov
addl
sbb
add
out
cld
inc
pop
ss
adc
pop
add
mov
jno
xchg
mov
and
cmp
sub
lods
scas
lcall
rolb
cmp
dec
inc
xchg
rcrl
mov
pusha
sub
dec
call
cmp
sub
loopne
les
adc
adc
jl
dec
stc
test
insb
aaa
cmp
xlat
data16
out
cmp
popa
sub
jne
xchg
call
lock
inc
dec
inc
adc
in
gs
push
cli
pop
cmp
aam
sti
orb
mov
inc
push
jmp
loopne
push
xchg
or
popf
je
xchg
cmp
sbb
lds
inc
testb
repnz
mov
je
addl
aaa
xor
cmp
cmp
bound
mov
div
push
out
sub
fwait
lods
in
cmp
xchg
cli
lock
sbbb
dec
sub
inc
adc
pop
fidivrs
pop
cli
add
shl
mov
fimuls
sahf
pop
lcall
aam
xor
clc
aas
push
inc
dec
mov
adc
mov
jno
adc
mov
dec
jp
jmp
push
mov
mov
inc
adc
cmp
dec
stc
and
jno
fiaddl
popa
sarb
and
mov
xchg
add
aaa
jge
jmp
cmp
sar
add
pop
daa
dec
fcompl
das
mov
xchg
sbb
test
sub
inc
add
jg
rcrb
add
sub
xchg
inc
xchg
and
or
out
test
addr16
pop
adc
ja
mov
xchg
jl
cmp
mov
mulb
push
add
cmp
ficomps
test
mov
test
jle
pop
ret
inc
jle
es
xor
int3
lret
mov
enter
faddl
lret
inc
mov
push
sub
mov
xchg
adc
pop
mov
lcall
fisubl
xchg
sbb
fidivrs
es
adc
movsl
or
out
sub
push
cmc
or
test
sub
iret
sub
fisubrl
push
std
pop
leave
xchg
scas
shlb
adc
mov
sbb
xor
leave
mov
sbb
mov
ret
xlat
pop
fnstsw
mov
push
addr16
jo
in
lods
jp
jns
xchg
jg
inc
xor
sbb
popf
test
inc
hlt
mov
push
leave
xor
add
pop
sub
bound
test
test
mov
push
cli
notl
leave
test
xor
lods
insl
pop
add
fldt
mov
push
add
mov
pop
mov
mov
jg
sub
jb
sbb
lods
insb
add
loop
sbb
pop
imul
xor
pushf
gs
std
and
movsl
cmp
lahf
sbb
sbbb
sub
repnz
stos
jg
fcomps
xchg
or
adc
sub
adc
push
cmp
sbb
getsec
pushf
push
sub
pop
sub
xchg
sbb
pop
jnp
enter
mov
test
lds
scas
push
enter
arpl
in
push
mov
dec
xor
pop
scas
xor
pop
idivl
in
sub
xor
lcall
mov
iret
lret
jno
sub
pop
loope,pn
mov
push
dec
pop
stc
jae
pushf
push
stc
jae
dec
jns
iret
test
xchg
fs
repnz
dec
xchg
mov
int3
ljmp
mov
and
jl
push
and
addr16
pop
lret
repz
outsl
mov
cld
sbb
dec
rorb
mov
or
repnz
popf
push
sbb
xlat
pop
stc
and
sub
add
hlt
addl
jns
sbb
mov
and
iret
test
adc
int3
movsb
fsub
mov
cmpb
adc
daa
mov
mov
jne
adc
fisubs
cld
or
mov
test
clc
jge
sbb
in
xchg
out
dec
dec
push
imul
xor
inc
fisubrl
jle
inc
xor
jno
and
mov
lods
xlat
push
in
shl
aas
add
into
or
int
xor
xor
sbb
jmp
in
ffreep
cmp
iret
dec
outsl
mov
xchg
subl
cmpsl
stos
jle
xor
cwtl
lahf
repz
inc
loopne
jp
xchg
mov
mov
and
pop
jp
ficoms
cmp
pop
aad
stos
lcall
in
jecxz
xchg
xor
scas
lods
xchg
or
sub
push
mov
rcrl
cmpsl
push
je
cmpsl
jns
mov
outsb
dec
push
std
icebp
addr16
out
cwtl
mov
int3
test
mov
pop
xor
dec
adc
cld
imul
lods
push
xchg
or
xorb
cltd
insb
mov
pop
leave
cli
mov
dec
call
aaa
jl
or
fildll
pop
aad
outsb
addr16
pop
add
cld
mov
je
ret
ret
loope
cmp
jo
out
xlat
cmpsl
and
int
push
es
xlat
sbb
pop
pop
dec
pop
or
mov
mov
xor
cmp
adc
or
lods
inc
xor
mov
inc
stc
divb
jmp
ficomps
mov
and
dec
cld
xchg
inc
mov
loope
push
mov
dec
test
addr16
ret
int
test
add
sti
gs
push
mov
clc
ljmp
outsl
subl
cmp
sub
cmp
mov
movsl
mov
fwait
insb
dec
test
pop
cmp
add
jle
inc
mov
outsb
mov
adc
mov
xor
pop
xor
decl
xchg
fildl
jg
subb
xor
bextr
and
fdivs
mov
pop
int
push
and
add
jbe
push
jg
lret
call
dec
push
ljmp
push
divl
adc
into
and
popf
sbb
mov
in
lret
mov
xor
sahf
or
mov
add
lods
cmp
inc
loopne
test
xor
mov
and
adc
cmp
stc
imul
jne
pop
push
pop
aaa
xchg
cmc
mov
mov
mov
sub
insb
call
cmpsl
test
in
and
mov
test
xchg
cmpsb
ret
fdivrs
or
out
lcall
fbld
add
movsl
push
sbb
xor
int3
jbe
test
cmp
dec
pop
call
cmc
mov
and
jg
ss
push
imul
and
cli
scas
xchg
loop
pop
lret
div
or
fsubs
add
daa
or
lret
push
pusha
jge
fldenv
imull
popf
dec
inc
into
xor
dec
cmc
and
and
jecxz
dec
mov
and
lea
adc
mov
pop
mov
shlb
out
inc
xchg
ror
loopne
sub
inc
jl
out
out
repz
mov
or
push
inc
imul
mov
push
clc
lcall
mov
mov
and
xor
pop
inc
scas
jg
iret
popa
sub
xchg
mov
imul
and
shrl
pop
mov
xchg
leave
jo
out
mov
fdivrs
mov
mov
jecxz
imul
and
add
jge
out
gs
and
sti
add
mov
mov
xchg
xor
mov
mov
cmp
stc
sub
aas
xlat
mov
sub
xchg
xor
sub
inc
push
xchg
xor
int
pop
popa
sbb
ja
and
ds
pop
push
gs
xchg
add
add
ljmp
stos
rcr
cmp
mov
or
push
mov
sarl
out
or
in
sbb
fwait
jle
or
daa
aaa
add
sahf
loope
dec
leave
jge
fs
dec
xchg
pop
repnz
ret
mov
jnp
pop
mov
cmc
pop
sub
fs
cs
add
mov
daa
imul
mov
sbb
daa
subb
lret
sbb
inc
adc
xor
ljmp
dec
add
cmp
mov
mov
das
rcrb
mov
pushf
pop
and
xor
bound
shrb
popa
imul
enter
mov
sbb
xchg
dec
scas
push
das
push
lods
jp
repnz
cmp
test
test
jge
fisubrs
xor
push
mov
pushf
xorb
mov
cmpsl
lds
cmc
cpuid
lock
fisttpll
push
add
xchg
and
mov
repz
push
scas
in
push
ja
push
push
inc
clc
push
xchg
repnz
dec
imul
rclb
push
aad
jg
add
fidivrl
mull
dec
mov
scas
inc
xchg
mov
test
mov
and
loop
cmp
pop
jecxz
cmpsl
mov
add
int3
sbb
add
bnd
std
jno
repnz
enter
lods
pusha
mov
aas
dec
shr
jp
mov
pop
add
sahf
fadd
sub
or
jmp
push
dec
loopne
fwait
dec
ss
mov
cwtl
gs
arpl
jecxz
les
rclb
push
dec
cmp
pop
mov
adc
fistl
cmpl
jl
inc
push
mov
pop
xorl
pop
cmpsb
cmp
in
jl
rorl
out
xor
mov
das
mov
shlb
outsb
jns
into
sub
add
xchg
sahf
add
mov
enter
nop
aas
add
call
jle
mov
mov
pop
sub
pusha
sbb
adc
xchg
insl
clc
ja
xor
dec
das
add
mov
loope
imul
sub
dec
cmp
test
cmpsl
push
push
sub
rcrb
icebp
ret
jecxz
jmp
pop
jnp
sub
std
add
dec
pop
sub
fists
cmp
jns
das
fs
mov
and
jge
dec
pop
scas
xchg
out
shr
mov
or
cmpsl
or
faddl
imul
mov
push
push
scas
mov
imul
js
repz
jns
rorl
or
subb
cli
xor
adc
jnp
test
dec
loop
mov
cmc
out
andb
loopne
mov
xorl
pusha
fcmovnu
add
xor
mov
xchg
pop
push
adcb
push
out
pop
inc
xor
xor
or
data16
cs
pop
shrl
cwtl
xchg
loope
push
xchg
outsb
insb
sbb
gs
cmp
add
inc
repnz
pop
dec
dec
pop
xor
psllw
xor
push
mov
jmp
mov
sar
jne
add
js
mov
xchg
sbb
mov
cmp
push
and
fmuls
jg
loope
mov
and
push
scas
cmc
out
data16
mov
pop
into
add
sbb
hlt
xchg
sbb
lds
inc
mov
out
fcmovnb
xchg
stc
push
dec
inc
mov
push
jg
dec
das
jle
cmpsb
bound
iret
pop
out
ud1
mov
mov
fists
push
add
push
jl
in
jb
imul
adc
loope
jle
cmpsl
ljmp
les
jg
pop
sbb
mov
inc
push
sbb
ret
mov
in
sub
popa
inc
into
jb
inc
jo
mov
adc
xchg
mov
mov
in
ja
jo
mov
in
pop
pop
mov
rcl
sar
mov
push
jns
fdivrs
popf
inc
cwtl
shll
test
lds
sub
shlb
jno
fs
jle
outsb
push
fildl
lret
jge
loopne
inc
inc
mov
cmp
push
jno
inc
dec
and
lds
rolb
and
dec
add
test
scas
mov
and
fucomip
mov
shrb
outsb
aas
mov
or
mov
fistpll
out
and
repz
xchg
std
xor
xor
adc
or
adc
hlt
or
lods
adc
jp
scas
fstpl
int3
ds
fcomps
lea
xor
fwait
inc
lret
and
jp
mov
gs
pop
outsb
iret
loopne
sub
push
negl
push
inc
xor
sub
xor
inc
icebp
ljmp
pop
ficoms
shll
adc
push
sbb
push
gs
les
xchg
mov
cmpsb
outsl
jecxz
sbb
mov
fstsw
cmc
mov
fs
test
xchg
inc
ja
fs
inc
sub
jb
test
fiaddl
out
sbb
push
dec
sub
xor
adc
xchg
adc
popa
fnstcw
jno
aad
inc
bound
dec
pop
mov
pusha
sahf
pushf
test
or
in
stc
jae
jl,pt
test
pmaxsw
sub
les
mov
sbb
pushf
mov
test
fsubrl
add
loopne
or
cmp
sub
dec
push
jg
out
cwtl
pop
aad
lds
fmuls
shlb
jmp
push
mov
mov
cmp
xchg
test
inc
addr16
jge
push
xchg
fisubrl
popf
mov
or
push
sti
sbb
loopne
or
popa
mov
adc
cmp
xchg
rcrl
jne
dec
mov
int
adc
clc
fdivs
jmp
dec
add
and
add
and
inc
lock
cs
mov
adc
pusha
aaa
inc
cmp
mov
sbb
fildll
xchg
mov
fnsave
add
push
sub
mov
leave
pop
jbe
dec
sbb
adcb
or
mov
pushf
cld
sbb
in
adc
test
sahf
out
mov
fsubp
push
test
insl
les
cmp
nop
bswap
xor
insb
sbb
mov
lds
pop
mov
jae
mov
sahf
mov
push
jge
sbb
xor
add
adc
enter
mov
push
jg
test
das
ja
or
adc
xor
testb
stos
cmp
mov
xchg
adc
pop
mov
xchg
sbb
adc
push
fbld
scas
rcrb
rorb
shll
xchg
xchg
in
sbb
das
mov
xchg
or
add
movsl
stos
es
les
cmp
adc
sub
mov
out
add
push
mov
jno
hlt
fsts
mov
push
insl
and
enter
arpl
shll
xor
add
pop
out
cli
mov
into
add
or
push
shl
mov
or
iret
sub
daa
decb
movsb
outsl
jnp
xchg
cld
cmpsb
fisttps
dec
mov
and
xchg
cltd
fsub
out
out
pop
in
push
jp
mov
jne
lds
sbb
movsb
and
jbe
out
lret
cmc
stos
xor
xchg
mov
loope
fldcw
or
fwait
lods
sub
mov
ret
aad
jae
sbb
nop
in
outsb
xchg
out
inc
dec
out
xchg
nop
fscale
or
fmull
jne
cmp
adc
sbb
stc
test
mov
push
mov
rolb
jo
push
in
pop
sahf
insl
add
jae
out
dec
adc
xor
lea
fdivrl
xor
pop
lods
sbb
jmp
lock
cmp
push
hlt
sub
sub
add
lock
fisubl
mov
cmp
pushf
push
fwait
add
pop
movsl
adc
push
or
cs
shrb
mov
adc
mov
cmp
in
xor
sbb
mov
and
scas
sub
addr16
mov
sbb
add
in
sub
inc
add
mov
push
dec
test
test
scas
mov
movsl
sub
sbb
xchg
xor
jns
pusha
fists
scas
insb
lcall
test
test
int3
repnz
iret
cmp
or
adc
fcmovnbe
adc
xchg
into
cmp
inc
enter
addr16
mov
cmp
outsb
out
add
or
in
ret
enter
push
jmp
mov
in
pop
rorb
call
inc
cmp
insl
repz
lcall
idivb
or
xchg
cmc
adcl
out
or
xchg
mov
frstor
setbe
xchg
gs
into
cmp
pop
stc
pop
push
add
mov
mov
pop
in
pop
aaa
xlat
mov
std
mov
dec
xchg
loope
sbb
mov
daa
and
adc
jp
cli
lret
adc
adcl
add
and
mov
lahf
pop
mov
into
addr16
pop
sahf
xchg
into
jg
lds
push
mov
mov
roll
push
sub
mov
shll
enter
ds
sti
push
pusha
inc
cmp
int
test
test
imul
mov
sbb
mov
pop
xor
mov
stos
xchg
sub
xor
popf
mov
jno
loop
xchg
add
js
std
pusha
loope
mov
jmp
jns
xor
xchg
xorl
aaa
cmp
aas
fisttpl
daa
mov
mov
lret
fs
push
sti
std
bnd
pop
mov
pop
inc
and
push
fiadds
pop
push
push
sub
aas
mov
popl
sub
das
mov
xor
or
push
popa
movsl
adc
mov
aad
test
out
in
add
gs
mov
je
imul
push
pop
cmp
xchg
xor
jle
hlt
ret
loopne
xchg
mov
stos
inc
lahf
or
dec
outsl
out
pop
sbb
jl
mov
push
inc
ret
divl
in
mov
and
add
cmpsl
pop
add
fildll
add
and
xor
pop
sub
mov
push
negb
sbb
cmp
push
mov
jnp
call
cwtl
outsb
inc
loope
pop
cmp
push
mov
lea
dec
sbb
mov
push
das
cld
int
in
mov
pop
iret
mov
lods
push
daa
mov
mov
mov
pushf
fistpl
mov
cmp
stc
sahf
jbe
loope
push
jp
jecxz
inc
stc
ret
dec
cli
sub
ss
mov
sub
cmp
jle
push
inc
sbb
and
insb
movb
daa
stos
mov
shll
scas
mov
js
pop
add
jge
jno
mov
aaa
cmpsl
ja
push
sbb
jns
mov
adc
movsb
mov
lea
sub
dec
jp
push
arpl
aaa
add
fisubrl
xchg
das
loopne
sub
and
or
cmp
rolb
inc
fs
xchg
adc
mov
in
inc
enter
inc
das
into
inc
mov
push
jp
push
insl
ret
pop
ja
xor
fistps
roll
out
stc
maxps
and
or
mov
stos
push
dec
aas
push
mov
lea
fdivrl
jg
push
loop
xor
jl
lret
mov
sbb
call
in
mov
cmpb
sub
and
rcrl
orps
cmc
sbb
mov
pop
or
cli
outsb
dec
test
aad
push
jb
mov
jl
sbb
and
push
pop
ret
inc
call
out
hlt
cmp
call
lcall
cltd
bnd
scas
lret
js
lret
push
sub
cmp
mov
mov
fcoms
sub
das
ret
inc
push
gs
or
cmp
or
or
inc
sub
inc
jmp
jmp
bound
test
in
sub
lret
rcll
pop
ret
call
out
mov
clc
mov
jno
dec
pop
jp
sbb
mov
pop
add
cmp
nop
outsl
xor
fs
mov
je
dec
or
popa
fstps
inc
hlt
mov
popf
push
adc
in
idiv
loope
add
mov
mov
insb
inc
mov
xchg
pop
dec
mov
pminub
fstpl
mov
movsb
mov
and
jl
push
dec
sbb
jmp
scas
test
xchg
jbe
inc
cld
dec
addr16
sub
push
rcrb
sbb
mov
rclb
jle
cmp
addb
hlt
inc
stos
lods
adc
stc
add
xchg
test
mov
or
mov
popa
jne
lds
mov
xchg
pop
movsl
hlt
push
out
sbb
loope
pop
inc
test
jo
rcll
push
push
gs
scas
mov
jmp
cli
lea
ja
sbb
add
pushl
push
mov
dec
out
lods
repnz
pusha
jmp
dec
in
scas
aas
jecxz
inc
adc
push
daa
out
mov
inc
or
dec
sahf
aam
loope
movsl
test
js
xorl
mov
jnp
sub
sbb
int3
stos
cmpsl
popf
mov
push
pusha
pop
xchg
jno
sub
lods
pushf
cld
mov
lods
sbb
scas
call
paddd
ret
cmp
pop
inc
fs
aam
in
outsl
cmpsl
lods
sub
jmp
nop
repnz
in
iret
xor
xchg
or
js
fsubrl
testb
out
outsb
popf
adc
popf
iret
in
in
ljmp
pusha
pop
shl
and
out
pop
push
jno
into
int3
xchg
inc
bound
and
adc
dec
adc
pushf
mov
hlt
mov
cmpsl
push
mov
jp
add
xchg
out
paddb
mov
xchg
ss
std
sbb
lret
or
rclb
lock
iret
ljmp
push
std
arpl
jl
data16
mov
das
and
mov
push
cmpsl
mov
lds
loop
loope
js
dec
mov
mov
cltd
popf
cmp
mov
xlat
out
mov
jbe
popa
mov
xor
imul
andb
push
movsl
maxps
xchg
out
jno
int
xchg
aam
lret
in
sbb
insl
xorb
xor
push
jno
or
and
sbbb
jp
dec
lea
push
xor
jo
mov
icebp
sub
ror
jmp
fldt
xchg
or
and
mov
push
or
cld
xor
not
and
lods
ror
dec
pop
popa
mov
dec
push
inc
mov
sbb
dec
cmp
rcrb
aas
call
scas
into
fchs
jnp
pop
sbb
push
mov
xor
add
mov
fs
or
aaa
add
jg
mov
mov
push
pop
or
add
sbb
daa
jecxz
fldt
mov
dec
aam
xchg
call
shrl
cmp
dec
jnp
xor
pusha
cmp
rorb
mov
cmpsb
js
test
mov
pop
sbb
sbb
mov
push
mov
sub
mov
lret
repz
scas
jno
mov
adc
or
push
dec
adcb
pusha
mov
ds
pop
ficoms
leave
inc
sahf
mov
push
pop
dec
insb
stc
inc
push
mov
push
mov
mov
sar
mov
hlt
dec
push
xor
in
std
imul
lds
add
hlt
sbb
mov
lret
sub
sbb
hlt
xor
or
in
mov
shlb
and
js
adc
aam
dec
xchg
sub
fldl
int
mov
mov
repnz
cmp
or
ret
jns
push
out
nop
popa
imul
sub
and
ret
add
xor
arpl
ficomps
mov
pop
sbb
aam
test
aam
and
stos
jg
enter
gs
enter
jns
outsl
mov
dec
data16
push
jns
dec
dec
xor
frstor
pop
sub
inc
jo
orb
push
addr16
mov
and
jns
cmp
adc
arpl
sbbl
jle
stos
imul
repnz
lds
cmp
push
jae
jecxz
fisubl
adc
pop
stos
push
cmp
loopne
scas
popf
sbb
fistpll
and
adc
xor
rcll
sub
sbb
bound
repnz
xchg
fs
jl
inc
jbe
or
bound
push
inc
daa
push
gs
xchg
aas
mov
and
push
enter
inc
pop
aaa
sbbl
into
les
popa
add
int3
sar
fldl
clc
call
mov
inc
mov
jno
add
or
icebp
mov
fisubl
mov
roll
pop
sub
int
or
arpl
mov
cmp
loopne
test
sarl
arpl
jg
and
fidivrl
movsb
loop
rep
mov
outsl
insl
not
dec
loopne
pop
or
les
dec
in
jne
mov
inc
clc
mov
clc
dec
popw
lea
xchg
sbb
mov
mov
repnz
dec
pop
clc
jp
popf
and
test
dec
cmp
sbb
cmc
push
jne
hlt
pop
pop
xor
jle
stos
mov
dec
imul
insl
dec
mov
adc
jp
mov
ds
adc
lret
add
lods
cmp
aam
dec
in
jae
mov
movsl
ja
xor
sub
inc
ret
outsw
dec
sub
mov
add
cmc
or
push
xlat
push
movsb
out
sbb
ljmp
pushf
lea
mov
xchg
les
dec
mov
jns
into
fs
push
sti
push
aad
daa
shrb
int
jae
sub
jg
mov
scas
jecxz
addl
jno
inc
fdivl
js
xorb
jns
xor
cmp
imul
xchg
pop
outsb
gs
xchg
repnz
sbbl
fcmovne
mov
push
xor
cmp
mov
dec
lea
and
pop
inc
shl
cmp
rorb
mov
sub
jns
in
adc
or
clc
cmp
adcb
sbbb
add
mov
enter
int3
pop
cwtl
lret
movsl
jno
jno
sub
or
jne
in
negb
addr16
add
out
fsubs
jns
leave
fstps
and
sub
add
test
stos
decl
adc
push
call
inc
push
das
mov
in
ret
lock
mov
dec
add
xchg
push
pop
nop
push
lret
push
repnz
jns
mov
rcll
popa
inc
push
mov
mov
stc
cmp
xor
mov
jne
sbb
push
mov
pop
popf
jp
imul
xchg
in
enter
in
test
or
cmp
push
addr16
fidivrl
cmpsb
sarl
fsubrl
cltd
jle
ret
or
push
fisubrs
sub
sub
jbe
xchg
fistps
sahf
cli
inc
or
popa
mov
daa
sub
jg
je
mov
pop
into
lahf
cmp
imul
inc
push
out
or
lea
call
and
imul
out
fisubs
cmc
sub
fsubrl
hlt
ret
mov
cmpsl
mov
sbb
loopne
lret
enter
mov
sahf
jp
rol
mov
scas
adc
add
int3
popf
test
shlb
xchg
adc
out
movsb
icebp
push
pop
mov
adc
std
cmp
jnp
lods
add
loopne
clc
movsb
jmp
push
jg,pn
mov
xlat
push
cmpsl
mov
mov
jg
popf
xchg
add
stc
in
mov
idiv
imul
mov
jo
lea
daa
gs
movsb
push
xchg
dec
cmp
mov
dec
movsb
popw
cmp
xchg
enter
mov
mov
push
ret
repz
sub
in
popf
xchg
movsl
mov
mov
jecxz
sbb
adcb
int
cmp
enter
adc
lods
lea
or
js
inc
int
inc
sub
sbb
mov
lds
inc
les
mov
inc
inc
and
jo
jb
xor
out
push
jo
push
idivb
mov
mov
sub
pop
in
lock
test
xor
push
xchg
add
mov
mov
pop
dec
mov
pushf
in
es
xchg
push
sbb
jmp
xchg
sti
jg
xchg
dec
in
pop
mov
xchg
mov
pop
pop
movsl
mov
cmp
ror
idiv
clc
sub
sub
cmp
ficoms
push
test
cmp
fsts
arpl
mov
jmp
xor
jmp
inc
jmp
sbb
push
ljmp
mov
in
fisttpll
bt
stc
dec
push
outsl
fwait
jg
icebp
inc
clc
incb
pop
xchg
mov
pop
movlps
js
inc
jne
out
andb
hlt
mov
je
fisubl
sbb
push
dec
lret
xor
cmpsb
xor
test
xor
push
xchg
mov
mov
sub
push
hlt
sub
pop
or
cmc
popa
pusha
lods
mov
mov
leave
add
pushf
dec
and
jmp
dec
jecxz
in
pusha
sub
scas
dec
cmc
mov
mov
push
or
and
rcrb
in
test
fisttpll
mov
pushf
cmp
or
pop
inc
pop
sub
imul
inc
stc
ljmp
mov
sub
jnp
and
xorl
cltd
js
xor
fmuls
rolb
repz
and
xlat
jg
in
cld
ret
pusha
lret
jb
out
jl
lret
and
out
mov
outsb
aam
jl
daa
mov
stc
test
mov
push
pop
lods
mov
or
and
daa
sti
and
or
sti
xor
cmp
cmp
pop
out
je
adc
fmuls
cmp
outsl
insb
add
mov
arpl
daa
fnstsw
adc
shrb
inc
stos
and
enter
sti
xchg
loopne
jmp
cli
cmpsb
enter
jge
xchg
clc
bound
or
out
dec
jecxz
shrl
or
rclb
dec
jno
aaa
sbb
icebp
mov
sbb
shll
das
jmp
bt
and
cmc
pop
fistl
xchg
inc
xor
loope
cmp
dec
jp
push
outsl
adc
clc
in
jge
imul
add
ret
sub
pop
in
push
pop
mov
mov
jb
sti
mov
xchg
addb
lods
push
mov
lods
mov
enter
xchg
cmp
cmp
inc
ret
aam
pop
lret
mov
repnz
jmp
or
stos
jae
add
cmpsl
ljmp
cmp
xchg
repnz
adc
cmpsb
adc
in
test
ljmp
fdivr
movsb
fnsave
lea
jge
insl
clc
clc
idivb
sbb
ret
adcl
and
pop
or
cmp
mov
ljmp
stos
mov
dec
fwait
jge
cltd
shll
jnp
sub
loope
sti
xchg
enter
test
test
bound
xor
mov
and
je,pt
xchg
lea
mov
test
js
sbb
sbbb
push
outsb
mov
inc
mov
enter
xor
pushf
incl
mov
rclb
ljmp
test
cs
adc
insb
inc
pop
mov
xor
cs
ja
xor
sbb
add
adc
cwtl
outsl
movsl
test
js
repz
push
mov
mov
mov
repz
lret
push
add
inc
adc
xchg
int
jno
out
cld
sub
sub
adc
sbb
add
and
or
call
jne
push
cmp
in
cmpsl
cs
repz
cltd
xchg
xor
or
fstl
movsb
dec
sub
shr
xchg
loope
clc
testb
mov
outsl
les
imul
or
sbb
lahf
std
aas
mov
enter
add
loope
pop
mov
xor
inc
pop
ret
xchg
jecxz
stc
ds
daa
les
cli
lods
dec
sbb
int
and
sub
mov
xor
enter
insb
bound
mov
fisubrl
pop
aad
scas
push
in
outsb
push
div
pop
xchg
fwait
test
push
push
mov
push
dec
call
push
cmova
inc
mov
pop
sbb
int
mov
les
mov
or
cwtl
sbbb
jecxz
jmp
adc
and
cmpsb
cld
dec
jo
jg
pop
ret
test
cmp
xorb
jb
inc
inc
bound
test
xor
cwtl
push
ret
sub
dec
stos
cmpsb
jp
cmp
xchg
cmp
out
add
imul
aad
inc
push
lahf
push
cmp
xorl
and
mov
or
jns
jmp
lcall
xchg
xchg
add
jno
movl
clc
pop
pop
push
popf
push
sbb
cwtl
xorb
test
lds
shrb
add
inc
negl
movsb
fucomip
ss
sbb
xchg
xchg
push
scas
add
shlb
inc
bound
adc
mov
imul
xor
jnp
adc
xchg
jne
in
aaa
xchg
mov
adc
xchg
push
loop
ds
addr16
in
push
std
inc
fwait
lea
rorl
adc
xchg
bound
lods
sub
addr16
stos
movl
insb
adc
xor
or
lahf
dec
and
jns
loope
pop
and
pop
ud2
mov
into
xchg
jl
sub
mov
out
int
pushf
adcb
dec
idivb
sbb
aam
sbb
push
xchg
sbb
pushf
and
push
adc
outsb
push
movsb
or
lea
orw
sarl
and
pand
shll
mov
sub
xor
inc
ja
jb
movsb
out
das
scas
and
xchg
push
aam
jae
rcrb
push
jg
test
rorl
or
inc
mov
sub
xchg
fmul
jo
fistpll
mov
int
and
jno
xchg
int
pop
dec
pop
xchg
pusha
mov
outsl
mov
lods
clc
or
into
insl
shrb
adc
adc
pusha
sub
imul
xor
sub
idivb
jle
ret
outsb
jne
jg
push
pop
mov
pusha
push
fisttps
cltd
aas
test
mov
out
xor
pop
cli
sbb
jmp
mov
mov
out
mov
nop
jle
mul
lret
inc
js
adc
ret
movsb
mov
mov
fdivrl
repz
inc
adc
and
mov
push
jmp
outsb
fsubl
in
sub
decl
xorl
add
adc
mov
aam
and
shrb
bound
or
and
mov
fwait
sbb
mov
cmp
and
mov
ja
out
jo
dec
cmp
out
lcall
outsb
lret
pop
out
adc
dec
pop
filds
popa
lock
lcall
loopne
sarb
fisttpll
data16
test
rcr
aas
ret
lods
clc
sbb
xchg
lods
sbb
bound
jg
push
lock
movsb
dec
mov
xchg
cmovnp
aas
aad
dec
or
test
dec
int3
mov
jo
push
mov
js
mov
in
cltd
outsl
aaa
leave
push
push
dec
sbb
movsl
jle
stc
sub
pop
sbb
nop
push
mov
lahf
lods
mov
movsl
pop
arpl
sti
imul
cmp
mov
adc
stos
aad
int
rcr
inc
lret
fcmove
out
jecxz
cmp
pop
xchg
push
aas
insl
fimuls
jne
in
jecxz
aas
or
push
jp
lret
and
dec
fists
test
in
int
mov
and
adc
insl
icebp
pop
hlt
mull
sbb
push
mov
in
push
add
pop
add
repz
fistl
rcll
rcrb
fsts
les
inc
push
sbb
in
mov
ljmp
ret
mov
sbb
andl
lods
lret
xchg
mov
pop
push
mov
mov
movsl
sti
in
test
aas
shl
aam
out
mov
gs
jmp
pop
and
pushf
lahf
nop
push
adc
in
push
mov
push
imul
xchg
add
repnz
cmp
adc
and
pop
arpl
xor
mov
cld
pop
test
dec
pop
arpl
lcall
add
adc
pop
andb
dec
and
nop
sbb
pop
decl
cmp
cwtl
sub
pop
mov
dec
insl
cmp
inc
nop
fistl
jne
out
pop
jmp
push
and
icebp
fistpll
fnstcw
loope
jo
in
adc
jle
mov
es
fnstsw
mov
shrl
cmp
mov
fnsave
mov
out
sbb
add
loopne
sub
jl
ror
pop
xchg
jo
fdivl
ja
xor
test
cwtl
dec
and
push
mov
or
push
or
pop
inc
mov
imul
pop
cmp
gs
aad
or
negl
cmpsl
les
jge
in
mov
into
pop
movl
es
movsl
jnp
lea
sbb
inc
push
lea
mov
sahf
mov
jae
lahf
daa
jge
negb
in
jmp
addl
mov
mov
push
leave
ss
pop
rclb
and
jb
sbb
orb
std
in
out
loopne
mov
cmc
enter
push
cs
stc
addr16
pushf
out
cmp
fidivl
xchg
mov
pop
jge
jmp
cltd
movsw
icebp
loop
lret
std
shrl
aad
jg
or
movsl
cli
test
jno
inc
lcall
sahf
pop
fucomp
repz
shlb
es
ja
inc
and
adc
push
or
inc
pop
shll
adc
add
push
fists
push
inc
mov
pop
stos
enter
sub
cmpsl
xchg
adc
or
sahf
lock
addr16
add
sbb
and
pop
leave
outsl
jmp
xchg
mov
mov
ret
add
dec
call
cwtl
pop
xchg
dec
or
sti
lods
add
loopne
cmp
fs
scas
and
shlb
ret
sbb
push
incl
out
fmuls
lret
pop
adc
in
push
and
dec
add
xlat
fnsave
sbb
xlat
test
pop
js
out
jno
jno
sub
adc
ljmp
int
roll
jnp
pop
mov
jbe
mov
not
push
and
and
adc
jb
clc
sti
sbb
loop
jmp
push
data16
cmp
inc
inc
ljmp
in
jnp
sahf
push
loop
cmpsb
jnp
test
sbb
pop
dec
mov
adc
mov
jl
popa
add
sarl
inc
into
push
mov
js
xor
bound
mov
frstor
inc
xchg
aam
out
push
jae
mov
cmc
imul
adc
popa
mov
mov
or
out
idivb
bound
mov
daa
icebp
lds
xchg
ret
movsb
loope
int
test
jo
xchg
or
xchg
stos
push
pop
push
ret
cmc
push
dec
insl
pop
cmpsl
arpl
fstpt
dec
stos
daa
or
dec
arpl
xor
inc
ss
movsb
jl
xchg
enter
dec
test
lods
roll
aam
or
dec
or
pop
rolb
push
outsb
add
and
sub
inc
xchg
mov
push
gs
aad
sbb
inc
loope
sub
ret
aas
mov
mov
or
jmp
pop
mov
sub
pop
scas
mov
mov
fwait
cli
imul
dec
sahf
adc
ret
sbb
jge
sub
mov
add
or
cmp
inc
pusha
insb
int
fld
rolb
fstl
mov
xchg
mov
mov
or
and
ficoml
jmp
testl
repnz
repz
out
jb
clc
pop
dec
jnp
cmp
repnz
pop
cmp
ficoms
pop
fldenv
loopne
sbb
sbb
stos
aad
xor
stos
cwtl
ja
mov
adc
ds
add
and
push
push
mov
push
pop
dec
iret
fs
es
ja
imul
mov
enter
adc
fisubs
mov
insl
mov
mov
and
out
stos
dec
push
dec
shlb
and
aaa
jnp
cwtl
test
xor
adc
sbb
inc
jl
icebp
mov
ret
pusha
test
out
div
ljmp
cltd
cmpsb
dec
dec
ret
xchg
fidivrl
add
aas
dec
sarb
enter
sbb
bound
or
in
inc
hlt
xchg
shrb
aaa
int
mov
sbb
gs
cmc
cmc
jnp
aas
push
das
jecxz
mov
xchg
inc
and
popf
jmp
addr16
fnstenv
divl
sub
mov
pushf
std
out
mov
inc
out
popf
hlt
dec
push
xchg
dec
push
jne
mov
or
outsb
and
iret
scas
movsb
and
cmpsl
jge
xor
jmp
xchg
dec
xchg
outsl
sbb
repz
fs
pushf
mov
mov
mov
inc
lret
js
hlt
leave
or
mov
dec
dec
in
jae
mov
shl
dec
adc
cmc
sub
test
fxch
and
fwait
movsl
xchg
outsl
jmp
jle
repz
fdivs
popf
fstps
in
xor
rcrl
mov
dec
jnp
pop
sbb
movsl
int
in
outsl
mov
loope
out
mov
add
sub
mov
nop
jmp
pushf
mov
loope
rcrl
loop
lea
dec
enter
repz
jne
mov
inc
jbe
sbb
js
nop
sub
push
push
inc
nop
mov
jne
push
mov
cmpsb
scas
rorl
rcrl
rolb
mov
loopne
and
and
lahf
and
sub
js
inc
pop
mov
jae
lahf
jae
inc
inc
ret
xor
mov
xor
decb
sub
cld
adc
push
arpl
leave
mov
daa
sbb
bound
cmp
mov
sbb
xchg
jl
stos
jo
fwait
pop
shlb
sbb
fldcw
push
mov
pusha
clc
mov
movsl
mov
lret
pop
les
push
mov
xchg
es
mov
lret
lock
mov
adc
stc
out
or
mov
insb
xchg
jne
sub
mov
xchg
jns
int
stos
add
sub
btc
xchg
dec
cld
jo
notl
fistpl
lods
mov
inc
xor
loopne
sbb
mov
movsl
std
fstpt
xor
ret
aas
mov
popa
xchg
cmp
inc
cli
jns
outsl
call
lods
or
rcr
xor
ss
fwait
mov
inc
xor
mov
lock
sbb
jmp
mov
ss
adc
jnp
test
push
push
pop
out
sbb
add
fnstenv
cmp
add
sbb
ret
es
fwait
repz
mov
arpl
pop
or
scas
stc
mov
xchg
mov
pop
data16
and
out
xadd
pop
dec
into
fcmovb
add
mov
popl
shl
mov
push
push
stc
and
jmp
aaa
sub
cmp
test
mov
sub
fildl
fdivrl
mov
push
out
sub
push
mov
mov
dec
push
jb
aad
push
and
pop
pushf
cmp
add
test
add
lds
inc
xchg
cmp
pushf
sbb
push
into
es
and
sub
add
xlat
jl
mov
arpl
sub
and
push
add
push
jnp
lahf
push
jl
es
mov
jmp
fadds
adc
or
dec
jbe
ret
fistps
sub
clc
mov
daa
mov
movsb
inc
mov
push
pop
leave
mov
jl
and
or
aad
push
aam
jae
sbb
push
xor
jp
stc
out
push
imul
cmc
push
dec
jns
jae
pop
jns
fidivrs
arpl
xor
ljmp
pop
inc
lods
push
mov
movsl
in
mov
sti
mov
push
push
jnp
jnp
add
lea
jmp
in
cmp
aad
sbb
push
nop
sub
add
mov
es
insl
sub
mov
packssdw
mov
test
cmp
les
push
enter
and
pop
push
push
push
add
lock
movhps
testl
imulb
add
cmp
inc
dec
jge
jno
sahf
adc
xlat
das
aaa
xchg
rclb
loope
add
inc
and
fnsave
in
cmp
mov
rcrl
push
mov
nop
add
scas
pop
inc
ljmp
in
sbb
jp
xor
push
fbld
mov
in
out
jae
lock
sti
jnp
xor
and
idivb
stc
sbb
sbbl
rcrl
dec
lahf
shrl
cmp
sbb
jmp
test
push
fisttps
mulb
jns
mov
inc
inc
jb
addb
pop
or
movsl
dec
mov
subl
leave
mov
add
push
shll
std
xor
int
aam
and
je
mov
mov
and
ja
mov
int3
or
xchg
xlat
addr16
mov
push
pop
xchg
movsb
sbb
jb
jae
dec
bound
ja
jnp
jb
subl
mov
jns
inc
xchg
dec
fisubrs
or
pop
push
jne
js
scas
inc
test
mov
adc
xlat
hlt
cmp
mov
pop
pop
jb
jnp
push
pusha
dec
outsl
mov
movsb
jbe
sbb
repnz
in
push
scas
cmpsl
jp
shll
or
rcr
mov
add
cmp
ret
mov
ljmp
decb
iret
dec
sub
je
push
sub
adc
ja
xchg
pop
popl
in
and
mov
dec
mov
dec
and
test
sbb
lret
ret
pop
jo
sub
out
bound
cmp
pminsw
dec
xor
loop
dec
dec
pop
aas
cmc
imul
lock
in
push
aam
popa
or
jge
cmp
pop
push
orl
lods
jno
aad
fs
or
out
adc
bound
fiaddl
add
roll
add
xchg
andb
pop
int
push
lahf
jno
shrl
cmp
mov
push
in
cmp
ja
or
push
add
sub
cmpsl
cld
in
sub
paddd
pop
and
aam
adc
cmpsl
stc
mov
or
cmc
out
xchg
stos
cmp
lcall
and
push
hlt
imul
jp
adc
sbb
inc
rcr
bound
aam
add
push
fldt
push
xchg
sahf
mov
pop
pop
ljmp
outsb
dec
mov
cmp
pop
fs
orb
cmpsl
mov
pusha
popf
mov
xor
mov
jb
sub
mov
inc
scas
clc
jnp
push
push
ljmp
and
mov
push
adc
inc
and
rcll
dec
cmp
lods
sbbl
aaa
cmc
enter
iret
jg
and
sar
mov
fmuls
push
or
les
push
jae
pop
xchg
sbb
xchg
movsl
dec
clc
mov
sub
inc
pop
inc
int
adc
test
cmp
fldenv
xorl
pop
scas
pop
pushf
outsl
pop
jg
cmp
sbb
insl
jge
sarl
xor
pop
pop
xchg
movsl
pop
inc
push
sbb
xor
movsl
sahf
outsl
jae
lods
mov
mov
imul
lock
inc
mov
or
out
test
lret
fwait
push
repz
mov
cmc
setg
add
xor
add
es
subl
aad
mov
add
je
les
xchg
sub
jge
cmp
dec
xchg
out
mov
xor
cltd
movsb
jo
bound
cmp
ljmp
out
mov
pop
cmp
loopne
add
sbb
cmp
aas
lea
ret
push
mov
add
subb
xchg
pop
or
ljmp
inc
bswap
shll
lcall
aad
adc
ficompl
repnz
push
adc
out
ja
ja
lahf
xchg
imul
adc
cli
int
pop
imul
mov
aas
ds
jecxz
sbb
les
mov
jl
jnp
xor
pop
mov
add
dec
aam
pop
cli
push
sub
ret
ja
movsb
call
cltd
adc
into
cmp
loop
adc
sbb
clc
inc
pusha
xchg
push
in
mov
sub
push
call
arpl
out
push
sbb
cmpsb
clc
in
out
dec
test
shr
or
into
xchg
fiaddl
mov
xor
mov
xlat
adcb
pop
push
pushf
cmp
mov
stos
mov
ret
xchg
xor
dec
mov
imul
ds
pusha
cmp
push
inc
pop
adc
dec
cs
sub
daa
jmp
cmp
aas
fwait
xor
lea
adc
loopne
outsl
ret
in
adc
fstps
push
xchg
mov
xchg
xor
xchg
sub
stc
pop
dec
mov
ja
popl
push
int3
jns
mov
mov
bound
or
and
loop
inc
rorb
lret
mov
out
pushf
sbb
mov
cmp
call
sub
fs
scas
mov
out
gs
stos
xor
mov
ss
stos
lods
xchg
callw
out
sysexit
std
pop
insb
daa
or
xchg
lods
dec
jb
repz
jp
jne
jge
loopne
pop
orl
stc
inc
jecxz
stos
lock
rcll
fsub
xchg
add
stos
ror
cmpsl
push
add
cs
xchg
dec
cmpsl
add
mov
dec
inc
pop
das
adc
sub
xchg
imul
gs
inc
push
add
neg
mov
loope
jno
pop
stos
mov
je
mov
stos
int3
aam
push
pop
push
stc
loop
out
cmp
inc
mov
sbb
xor
je
ja
mov
mov
push
gs
sub
arpl
roll
xchg
fidivl
jo
push
adc
aaa
fiadds
add
rolb
negl
sbb
sbb
pop
push
test
add
pop
mov
cmp
loopne
cwtl
call
lret
pop
jge
leave
and
xlat
xchg
stos
jg
fsubr
xor
daa
mov
cwtl
push
sub
xor
out
push
sbb
cmpl
xchg
jno
xchg
pop
repnz
mov
idiv
push
pop
push
xor
subl
pop
test
test
xchg
cmc
jae
jne
add
jp
cmpsb
std
dec
lahf
mov
sahf
xlat
int3
das
mov
imul
mov
test
insb
jge
lahf
sbb
pop
and
mov
scas
cmp
addb
ficoml
cmp
rolb
fcompl
mov
pop
int3
leave
pop
add
test
scas
inc
jg
push
pop
jle
shll
addr16
sub
push
ds
test
jge
fnstsw
adc
mov
lcall
jp
cli
aam
lahf
stos
pop
loopne
movsb
xchg
mov
sbb
jno
xchg
cli
xchg
daa
xchg
test
rorl
lcall
push
inc
pop
dec
adc
mov
js
lods
sbb
out
mov
or
jae
xor
shll
aam
mov
xor
sbb
mov
cltd
fiadds
in
cmpl
scas
mov
pop
pushf
icebp
jae
loope
pcmpgtw
sbb
iret
adc
jg
cli
push
mov
adc
repz
jecxz
and
sbb
jg
jb
lahf
sbb
push
push
imul
mov
mov
sub
repnz
sbb
arpl
adc
imul
sbb
fucomi
xchg
mov
data16
mov
xchg
jbe
in
ljmp
xor
jbe
outsb
insb
popf
out
jle
jl
sahf
mov
sbb
inc
int3
test
sub
jecxz
pop
insl
xorl
mov
pusha
and
rolb
hlt
mov
xchg
test
jbe
aas
std
dec
int3
out
out
mov
int
jp
inc
cmp
xchg
jp
mov
mov
push
lret
xchg
ss
rcrb
dec
insl
adc
leave
adc
or
xor
ljmp
push
ficoml
scas
scas
aad
cmc
pop
ds
jne
out
xorl
dec
imul
int
and
pop
mov
xor
das
jecxz
pop
loopne
orb
inc
stc
clc
aas
cmpsb
insb
in
pop
inc
sti
fwait
bswap
fnstenv
xor
das
push
inc
pop
ret
outsb
pop
mov
sbbb
xlat
lds
mov
cs
jns
xor
push
adc
dec
cmc
dec
aam
ror
hlt
nop
jns
arpl
into
aas
pop
call
or
add
pop
sbbb
ja
add
pop
cltd
lock
mov
outsl
ret
je
mov
sti
cs
int3
dec
pushf
out
das
pop
xchg
xor
mov
mov
int3
andl
js
fadd
or
inc
imul
imul
dec
stos
cmpsb
dec
adc
clc
fwait
xchg
cld
xchg
push
ds
and
and
dec
stc
bound
pop
ja
sub
stos
jb
jle
roll
xchg
push
sbb
and
inc
add
xor
pop
jns
mov
in
inc
lahf
jne
jno
repz
add
daa
fldl
imul
ja
push
pop
cmp
movsb
in
les
lcall
shrl
rcr
jb
push
xor
adc
and
outsl
dec
scas
pop
mov
adc
lret
hlt
popa
ficomps
lock
cld
fldenv
push
pop
aad
sti
movsl
das
pop
add
movsb
outsb
pop
sub
add
xchg
mov
xlat
in
fwait
stos
movsl
jns
adc
mov
out
push
pop
aas
movsb
pushf
test
jg
test
clc
or
mov
pop
push
mov
popf
sub
mov
or
add
div
popf
rcll
sti
inc
cmp
cltd
fistl
cs
mov
sbb
add
or
jmp
je
add
mov
mov
aam
push
adc
jb
lods
iret
or
out
fcomps
mov
jl
punpckhbw
lods
pop
rcrb
or
cmp
mov
in
pop
sbb
test
popa
xchg
jmp
fbld
lret
mov
xchg
push
adc
add
mov
jl
dec
xor
les
and
inc
repnz
into
rol
out
jnp
mov
mov
mov
sbb
sub
fnstenv
ret
cmpsl
divb
xchg
addr16
cmp
sbb
mov
push
repz
pop
roll
mov
fidivs
jg
out
loope
mov
das
adc
jge
stc
shl
lret
or
jmp
dec
loope
adc
xchg
dec
cmpsl
test
lahf
mov
divl
popf
bound
xchg
jl
dec
mov
pop
inc
mov
add
push
sbb
cmp
mov
mov
repnz
sbb
divl
sbb
mov
sub
cmp
sub
push
push
fwait
inc
jb
lods
push
push
pusha
xor
iret
sarl
decb
sub
insb
pop
mov
cmp
loope
jmp
push
jbe
jmp
jecxz
dec
pop
inc
repnz
xor
mov
push
push
out
sarl
cmpsl
sub
clc
test
nop
mov
adc
int
js
adc
mov
call
push
movsl
sub
sub
rcrb
aas
mov
mov
fnstsw
xchg
xchg
sbb
pushf
in
addb
dec
inc
mov
dec
rcrl
add
push
ret
movsl
pop
aam
inc
dec
int3
adc
rdmsr
pop
loope
mov
shl
push
clc
adc
das
dec
xchg
or
mov
cmpsl
popa
push
jne
dec
insl
ds
roll
xchg
jp
lods
lods
rcl
push
mov
lods
pop
xchg
add
jmp
mov
add
movsb
insb
mov
jnp
cmp
cmpsb
or
pusha
pop
out
inc
xchg
jnp
and
lods
mov
jp
push
sub
lcall
mov
cmpsl
sbb
js
paddusb
scas
xchg
pushf
adc
mov
add
rorl
or
or
gs
leave
movsb
mov
data16
repz
ja
notl
add
test
or
pop
jno
lods
add
js
outsl
or
mov
adc
out
cmpsl
roll
lret
dec
push
out
sbb
pop
aam
xchg
fdiv
sbb
mov
sbbl
test
data16
xchg
xor
imul
add
add
leave
lock
inc
mov
jne
mov
mov
es
pop
stos
jmp
cli
jo
push
sbb
ss
cmp
sub
xlat
nop
out
push
mov
dec
mov
cmp
inc
sbb
cmpsl
repz
mov
cmp
mov
std
roll
scas
repnz
out
sub
into
js
ss
push
je
inc
lods
mov
mov
or
lahf
pop
andl
imul
movsl
dec
sub
movsl
jbe
or
das
xchg
and
std
test
cmp
das
clc
outsb
insl
xor
fidivrl
hlt
outsb
mov
hlt
das
icebp
lods
push
xlat
test
test
dec
jno
inc
or
push
fdivrl
cmpsl
push
stos
movzbl
mov
shlb
mov
int3
cmpsl
sbb
xor
mov
xchg
lret
mov
jg
cwtl
inc
inc
push
mov
xchg
and
adc
adc
dec
xchg
leave
dec
jl
push
add
jb
or
ds
stos
push
push
loopne
inc
dec
mov
lods
cwtl
nop
fcmovne
cli
in
hlt
jae
xor
in
dec
arpl
notb
popa
cli
sbb
mov
rcr
popa
mov
scas
pop
push
mov
xchg
adc
push
mov
jle
lock
pop
test
mov
rcl
ret
mov
mov
push
mov
mov
les
jecxz
out
pop
out
leave
mov
or
lret
rorl
lds
test
add
stos
xor
addr16
mov
push
clc
mov
mov
fcoml
add
adc
jne
rorl
jne
fcomps
and
out
ja
and
dec
xchg
shll
push
loop
cmp
jbe
fsubrs
int
and
and
inc
pop
outsl
inc
ret
ja
inc
aad
rcrl
std
xor
daa
mov
popl
adc
lock
push
cmp
dec
inc
push
push
in
rcl
rcll
and
sti
mov
lcall
test
ret
cmpsb
fbld
into
sbb
sub
sub
cmp
mov
faddl
sbb
es
in
jle
inc
or
cli
add
adc
popa
mov
loop
stos
sub
xor
mov
in
pop
xchg
sub
xchg
jnp
int
pop
hlt
ja
push
insl
jbe
inc
add
jb
pop
loop
mov
xchg
test
shl
fldcw
shll
repz
cmp
test
cld
imul
mov
and
sub
mov
xchg
mov
jnp
mov
pushf
mov
mov
push
adc
mov
inc
cmp
lods
icebp
cwtl
xchg
cmpsl
dec
push
scas
addr16
pusha
inc
sbb
ret
lret
fcmovb
jno
out
inc
jno
sub
aam
pushf
into
aas
lods
jl
icebp
mov
inc
and
daa
loop
loop
inc
mov
cwtl
je
push
loope
cmp
jns
cmp
push
test
jg
pop
ds
jecxz
xor
call
call
inc
out
into
pop
fsts
es
fnstsw
pop
xchg
scas
shrl
daa
fcomp
add
dec
cld
in
lds
pop
scas
push
je
jb
dec
xlat
cmp
mov
and
inc
dec
adc
xorl
pop
jl
lds
or
in
imul
shll
fs
fwait
fwait
lods
xor
jle
fsubrl
adc
mov
pop
pop
nop
dec
sub
sti
icebp
push
jle
adc
dec
mov
data16
loopne
ss
std
mov
push
ljmp
jl
xlat
out
mov
repz
roll
adc
and
pop
call
or
mov
sub
daa
jle
or
stos
or
xchg
ret
mulb
or
popf
jns
stos
les
cwtl
jno,pn
pop
xor
xorb
bound
xchg
mov
aad
shlb
out
adc
data16
cmpsb
sahf
jle
jg
ds
lods
jns
push
cli
adc
xchg
pop
mov
and
movsl
cwtl
mov
mov
lds
sbb
mov
in
loope
cs
and
lds
sbb
dec
out
pusha
nop
lcall
mov
push
aaa
sbb
lea
push
decb
pop
mov
inc
mov
sub
add
in
sbb
nop
pop
ret
and
mov
shlb
shll
push
shlb
insb
lret
xchg
push
inc
je
sbb
xor
fsubl
or
push
adc
ja
sbb
lret
mov
mov
test
imul
add
pop
xchg
ret
int
mov
dec
inc
adcb
push
jnp
mov
aad
mov
xchg
arpl
inc
mov
ret
dec
push
jge
jo
mov
popa
add
mov
mov
lea
jecxz
lods
push
das
xchg
loope
mov
sub
mov
adc
les
cltd
sti
daa
jl
cmp
cmc
test
push
jge
cmpsb
push
inc
xchg
xor
push
call
adc
xchg
fsubrl
movb
dec
aad
test
adc
push
aas
sub
lcall
xchg
pop
dec
lods
pop
inc
lods
in
int3
cs
les
fsubrs
nop
mov
mov
stc
add
mov
shrl
adc
pop
negb
aaa
andb
adc
or
adc
ret
lret
cmp
lret
mov
pop
out
inc
es
mov
pop
push
jge
pop
inc
je
lods
stos
pop
rcl
lcall
jl
in
in
dec
jg
mov
js
jg
mov
leave
mov
sahf
add
add
push
leave
hlt
addr16
lods
aas
bound
js
push
mov
ljmp
push
mov
add
mov
loop
adc
pop
scas
leave
dec
or
stos
fucomi
mov
inc
add
outsb
clc
push
lods
jno
imul
sahf
cwtl
adc
xor
fisubl
decb
jnp
mov
jle
addr16
pop
xchg
loopne
or
in
sbb
pushf
sbb
mov
cmp
jl
ss
sbb
jns
lret
andl
and
imul
xor
add
push
sahf
mov
addr16
inc
insl
xchg
push
mov
cwtl
and
cs
jl
fnstsw
cmp
mov
inc
cmp
cmpsl
ss
mov
jmp
push
push
mov
mov
inc
test
js
pop
inc
inc
imul
inc
add
test
clc
cltd
cmp
pop
into
inc
in
sbbb
adc
pusha
icebp
jne
sahf
xchg
imul
pushl
lods
aas
jl
jp
xor
xchg
mov
rclb
and
inc
add
inc
jae
mov
imul
jmp
adc
jne
sti
dec
mov
cwtl
cs
mov
xor
and
mov
sbb
les
popa
ljmp
lods
jns
jg
cli
sahf
std
mov
dec
repz
dec
and
pop
push
test
xchg
push
je
sub
push
xchg
out
cmp
shl
cmp
out
mov
lods
orl
mov
adc
loope
push
scas
lahf
mov
pop
pop
int3
add
add
push
nop
xor
ficompl
push
les
in
dec
es
dec
or
jno
inc
popf
fsubs
adc
sbb
dec
je
mov
scas
mov
and
add
and
call
add
es
fwait
lods
push
out
lret
mov
into
fildll
insl
jmp
pushf
lods
and
sbb
pop
mov
pop
adc
mov
dec
add
decb
jg
dec
fnstcw
sbb
fsubrl
leave
dec
subl
xchg
push
inc
mov
and
jbe
lock
fidivl
scas
in
mov
pop
nop
icebp
out
shlb
mov
sbb
test
movsb
add
mov
pop
cmc
push
add
push
and
aaa
ss
jae
in
sahf
xor
inc
stos
mov
xchg
das
loopne
aas
insl
jno
xchg
addr16
shl
xchg
jge
cmp
aam
scas
or
or
sub
test
shll
jne
cmpsl
and
fstp
sbb
cmpsl
ret
sti
push
lret
stos
mov
pop
inc
xchg
pop
in
mov
dec
jo
jbe
in
xchg
jbe
push
scas
shll
push
pop
in
ljmp
lret
test
jmp
ret
shrl
dec
mov
mov
lret
sbb
pop
rclb
test
in
in
aad
outsl
push
mov
jne
push
push
or
mov
xor
sub
jb
xor
fwait
jns,pt
jns
add
mov
rcrl
shrl
dec
movb
dec
push
scas
stos
and
mov
cmpsl
push
sbb
nop
scas
ficoms
mov
stc
cmp
mov
clc
pushf
les
sbb
fmulp
inc
add
add
stos
inc
cltd
mov
in
cmp
cltd
aad
ja
add
push
sbb
aam
cld
cmpsb
cli
test
mov
lds
pop
repz
sbbb
xor
ja
lret
addr16
cmp
pop
push
js
cs
shll
insl
mov
daa
leave
into
mov
pop
cmp
mov
dec
xchg
pop
loopne
icebp
xchg
movsb
add
xchg
popa
mov
lret
out
jb
js
test
dec
hlt
dec
popf
cmp
push
lds
mov
pop
xor
out
mov
les
mov
in
hlt
sub
mov
hlt
test
pop
icebp
sbb
aad
out
xchg
sbb
aad
or
mov
rcrb
ret
xchg
dec
ljmp
jp
fdivrs
ss
popf
fisubs
mov
mov
pop
call
mov
mov
xchg
jg
dec
jbe
daa
xor
xor
fsts
movsb
jno
ret
leave
lods
fwait
lock
test
test
cmp
sahf
push
sbb
xchg
jge
dec
fucomp
ljmp
jnp
cmpb
aad
and
dec
ds
div
cltd
addr16
aaa
mov
stc
mov
pop
push
hlt
inc
and
push
or
pop
push
lcall
and
movb
mov
pop
fwait
ds
pop
ret
stc
xor
and
cld
push
or
dec
jmp
cmpsb
int3
push
fs
inc
insb
outsl
orb
out
les
pop
ja
shrl
xlat
call
fcomp
or
cmp
stc
cmc
outsb
push
lods
mov
in
out
cs
fcmovu
shlb
lods
arpl
pop
test
xchg
testl
mov
cmp
mov
add
cmc
std
jnp
sbb
clc
out
loopne
mov
test
sub
dec
xchg
test
ss
cmp
xchg
sub
ja
loop
sub
jo
jl
scas
clc
shl
or
pop
push
rcrb
add
pushf
mov
mov
insl
scas
mov
sub
cli
ret
je
cmc
jbe
inc
gs
xor
mov
scas
icebp
xchg
inc
mov
inc
and
mov
insb
cmp
jecxz
add
and
xor
jle
pusha
adc
jae
push
pop
mov
mov
jbe
inc
lods
pop
mov
add
jno
popl
in
ss
jns
fcmovnbe
add
dec
xor
inc
dec
aaa
mov
adc
outsl
aam
andl
mov
cmp
cwtl
clc
jae
je
shlb
sbb
lahf
push
mov
dec
mov
and
sti
push
xor
adc
and
mov
and
int
mov
and
test
nop
xor
and
mov
xchg
hlt
test
gs
ja
outsl
sbb
sahf
mov
dec
setns
sbb
or
and
mov
out
ret
mov
push
outsb
mov
mull
mov
jmp
testb
es
jne
outsl
loopne
in
fildll
xor
add
aad
sbb
cmp
test
add
fwait
sbbl
xchg
scas
in
sbb
test
ficoml
insl
sub
lds
shlb
outsb
push
clc
xorl
outsl
inc
fidivrl
pop
mov
mov
jns
movsb
shl
lcall
sbb
scas
cli
push
mov
outsb
out
mov
fcom
out
xor
repz
idivl
xchg
ds
jecxz
test
popa
and
mov
cmc
xchg
cs
int
mov
xchg
push
clc
xor
jnp
push
outsb
jge
test
mov
mov
subb
xchg
xlat
in
inc
fisttpl
jb
jl
je
imul
mov
clc
scas
cmp
mov
xchg
mov
jns
and
ja
fwait
jbe
repz
pop
cmp
and
int
loope
ficompl
dec
and
mov
leave
xchg
inc
aas
jnp
inc
dec
mov
cmp
lret
test
add
jns
pop
stc
mov
imul
mov
mov
jno
add
testl
mov
ret
mov
xchg
push
fisubs
notb
or
sbb
out
js
dec
push
dec
clc
adc
jbe
paddw
xchg
mov
xchg
sub
shlb
frstor
or
or
xchg
aam
dec
stc
dec
call
pusha
mov
lods
cmp
push
fwait
sbb
int3
fcmovb
sub
lahf
adc
jge
xchg
mov
xchg
inc
push
inc
orl
sti
add
leave
pop
fsubrl
inc
ljmp
add
clc
add
sahf
bound
cli
imull
shll
jge
mov
sub
dec
cmpsl
subb
mov
outsb
int3
push
bound
cmp
addl
push
sbb
in
ret
sbb
out
jae
and
xchg
outsb
sahf
lcall
cld
mov
mov
pop
cwtl
xor
dec
cmp
sbb
mov
push
sbb
subb
aam
nop
sub
test
sbb
push
imull
int
cmc
pop
adc
mov
xor
dec
mov
aaa
scas
and
mov
and
xchg
push
int3
divb
insb
sbb
sahf
and
push
cld
cmpsb
lods
insl
bound
push
mov
cmp
cmp
loope
push
fwait
stos
sbb
mov
int3
xchg
sub
ja
aam
push
and
or
push
mov
fdivl
aaa
sti
jb
push
add
test
jb
jnp
fcompl
adc
les
ret
push
mov
shll
fwait
inc
inc
jno
cltd
lea
out
mov
mov
jae
lcall
fistpll
jo
lods
fcoms
pushf
pop
daa
or
pop
mov
inc
mov
test
or
adc
imul
popf
jae
dec
in
push
pmaddwd
arpl
flds
inc
testl
push
fisubl
cmpsb
insl
inc
mov
push
jns
popf
iret
jle
daa
sti
aad
jns
push
push
pop
pop
inc
lds
push
bound
fcom
imul
mov
mov
lock
mov
push
inc
aaa
lock
sub
lods
aaa
rcrl
jle
pop
mov
lods
cmc
ror
push
sub
lret
clc
ljmp
lret
lcall
scas
jb
xlat
mov
jmp
std
jnp
sub
test
sub
dec
bound
es
std
push
leave
rolb
push
pop
sub
lds
and
out
repz
int3
cld
pop
fimull
push
sub
and
sbb
lahf
das
pusha
jbe
jbe
in
jg
int3
ss
cwtl
data16
outsl
int3
xchg
mov
mov
cmpsb
xchg
xor
insb
out
shrl
cld
push
mov
pop
mov
cmp
and
push
cmp
stos
bound
or
test
cs
inc
scas
hlt
xchg
mov
xchg
dec
push
sub
jb
xor
hlt
jmp
aam
lods
out
icebp
and
sub
or
ret
xor
stc
int
enter
inc
mov
mov
sub
icebp
or
mov
jno
add
adc
call
add
and
xor
push
mov
aas
test
mov
mov
fimull
pushf
jp
orb
adc
incb
imul
xlat
hlt
dec
push
mov
int3
popa
addl
jg
adc
mov
cmp
add
loopne
sarb
clc
push
mov
popf
icebp
insb
decb
cmp
mov
cmp
mov
lods
mov
pop
mov
dec
icebp
loope
pop
ret
leave
sub
int3
add
cld
js
mov
mov
aas
sub
fs
dec
mov
cmp
lahf
psubsb
jmp
clc
fdivr
add
add
shrl
adc
sbb
test
popf
je
xor
sarb
cmp
jns
ja
dec
inc
cwtl
es
cmp
icebp
cmp
pushf
sbb
jns
add
xor
int
and
pop
test
imulb
test
and
cmp
pop
jbe
add
das
add
and
insl
push
and
mov
imul
sbb
cld
and
lock
pusha
push
cwtl
es
aas
in
aad
jle
mov
fs
jne
add
call
cmp
mov
add
push
in
cmpsb
mov
mov
jmp
add
subl
cmpsb
xchg
jnp
fstpl
xchg
popf
addr16
xor
jmp
sub
gs
adc
mov
cmp
pop
sub
mov
cmp
ret
sti
sub
shrb
cmp
inc
xor
mov
mov
sti
cmpl
aam
add
and
cmp
test
and
inc
gs
inc
cmpsb
or
scas
inc
rolb
adc
icebp
iret
dec
lret
int
out
xchg
inc
fsubl
lret
lcall
in
sub
jb
jge
sahf
iret
lahf
pop
cmpsl
sub
sbb
stc
xchg
aam
jge
outsl
js
push
ljmp
lret
pop
pop
mov
xor
in
mov
mov
psrld
mov
jb
pushf
jb
cli
add
mov
cmpb
cmp
sub
into
xchg
stos
adc
pushf
fmuls
jne
xlat
inc
xorb
popf
xchg
xchg
push
daa
loop
dec
mov
jns
inc
and
pop
sub
lea
pop
mov
add
add
adc
ljmp
jb
adc
sar
cs
enter
in
shrl
push
stos
push
mov
mov
or
imul
popl
in
or
sub
gs
ret
sub
xor
or
insl
mov
lahf
push
adc
mov
or
in
sub
enter
push
imul
mov
sbb
fs
cli
loop
xchg
jle
xchg
mov
popf
pop
mov
iret
aad
xchg
scas
ja
hlt
addr16
adc
insb
mov
dec
imul
jns
stos
mov
mov
outsl
lock
sbb
repz
fmul
outsl
jge
lds
orl
dec
inc
sub
dec
lods
gs
pusha
fildll
adc
and
lods
aad
inc
outsb
data16
mov
pop
fistps
xor
nop
je
mov
add
cmp
push
mov
cmp
test
dec
test
inc
mov
push
lods
add
and
aam
pop
push
xchg
sub
or
js
inc
sub
inc
pop
enter
stos
adc
pop
js
pop
mov
popa
push
push
std
jno
ret
je
movsb
test
fdivl
xchg
imul
cs
jle
out
mov
inc
aaa
add
lahf
repnz
dec
test
jmp
mov
or
popa
or
aad
unpckhps
dec
lods
dec
adc
mov
dec
and
pop
cmpb
mov
mov
jno
int
scas
and
stos
in
sub
call
fldcw
lock
popf
xor
push
push
mov
rclb
sbb
push
out
and
jo
pop
loopne
nop
aas
mov
push
push
pop
jmp
cmc
jecxz
jg
fs
shr
leave
inc
daa
sub
and
fiadds
sbb
xchg
test
aas
or
cmp
mov
out
out
loope
xor
fisubs
mov
pop
sub
sti
je
sub
mov
cmpl
xor
xlat
repz
jle
gs
cli
aad
inc
jge
inc
movsl
or
in
shll
out
xor
inc
rclb
lds
cmp
fdivr
enter
jae
or
cmpsl
rcrb
xlat
jmp
scas
aaa
lcall
cmp
push
inc
pop
fdivrp
cmp
add
lock
push
ljmp
stos
sti
js,pn
loope
sbb
insb
lds
lock
xchg
movl
push
jae
dec
lahf
mov
xor
and
xchg
aad
pushf
xchg
int3
add
xor
enter
sub
enter
pop
fnstsw
std
loopne
mov
flds
in
ja
push
push
xchg
pop
cmpsl
mov
fs
clc
and
xor
repz
cltd
test
insl
inc
inc
ja
orb
stc
aam
xchg
test
and
call
std
fistl
fldenv
inc
sub
movsb
jmp
fistpll
lahf
out
add
adc
in
mov
sti
loope
cmc
xchg
lret
sbbl
jge
jae
stos
add
jmp
push
aad
addr16
sub
mov
adc
scas
mov
mov
mov
outsb
or
cltd
mov
je
call
push
insl
add
mov
enter
jp
or
cmpsb
or
data16
mov
pop
pop
les
sub
mov
lea
mov
mov
push
pusha
dec
pop
or
jns
mov
jnp
jo
xchg
cmpsl
frstor
inc
and
loope
adc
cmpsl
repz
addb
sbb
mov
mov
jle
mov
ret
out
pop
dec
dec
push
mov
xchg
cmc
fstl
shl
clc
lea
jns
ret
stos
pop
es
shr
push
lods
xchg
inc
jg
mov
das
adc
sbbb
mov
sahf
xor
arpl
cmp
stos
mov
das
mov
mov
mov
sbb
insl
pop
testb
lds
sub
or
sarb
mov
mov
cmp
popa
or
rorl
addl
js
nop
push
dec
movsb
shll
xor
jne
cmp
lret
pop
mov
dec
dec
insb
add
fiadds
or
popa
and
rcrl
movsl
xchg
mov
push
out
cmp
pop
mov
sbb
sbb
outsb
loopne
js
cwtl
data16
adc
fwait
sub
ljmp
jg
jecxz
inc
cmp
aas
or
je
scas
subl
cmc
sub
repz
leave
pop
imul
aaa
out
les
cmp
test
leave
mov
jmp
jnp
insl
dec
and
adc
stos
xor
mov
sahf
std
call
lret
pop
fidivl
jecxz
mov
lods
xor
push
xor
out
mov
movsb
and
dec
mov
pop
mov
bound
sbb
push
faddp
divl
push
lcall
roll
cwtl
push
sbbl
cli
push
rol
cmp
sub
push
sar
or
jb
cmp
fsubs
jb
in
rorl
cli
inc
lods
stc
mov
xchg
scas
gs
mov
push
imul
pop
dec
repnz
lods
push
fnstcw
pusha
insl
repz
sub
mov
lret
nop
push
pop
jo
dec
lock
mov
mov
or
mov
orl
and
and
movsl
xor
inc
jne
mov
ja
push
rolb
sbb
ljmp
notl
std
and
push
loop
sbb
testl
push
add
inc
mov
push
jns
push
repnz
lea
pop
sbb
jle
scas
orl
cmp
lret
mov
adc
sub
push
out
mov
dec
inc
std
xor
out
int
and
push
xchg
lret
and
add
fst
mov
fistpll
xor
push
push
mov
enter
cmpsb
adc
lret
fstpt
fisubl
sub
inc
ljmp
lret
outsl
cli
jno
adc
aaa
jb
pop
inc
iret
jl
adc
or
pop
into
push
push
andb
lret
xchg
or
push
pop
jg
push
cmp
leave
dec
jae
outsb
fwait
sbb
shll
xchg
daa
add
and
xchg
jl
fdivl
adc
jnp
and
aas
inc
mov
lea
test
jmp
mov
je,pn
insl
leave
mov
fimuls
pop
fstp
inc
mov
daa
pop
xchg
cmp
and
repz
mov
cli
mov
nop
ds
adc
cltd
repz
movb
pop
cli
mov
je,pt
cltd
fwait
mov
fstl
jl
cmp
push
lahf
or
sbb
loop
push
add
dec
jne
or
sub
inc
pop
jl
fwait
mov
cmp
dec
movsb
bnd
das
dec
mov
and
mov
push
ds
and
add
dec
add
xchg
movsb
dec
cmp
xor
lock
daa
mov
fdivr
push
and
enter
inc
les
inc
repz
js
inc
out
rclb
sbb
or
push
xor
das
insb
fisttpll
add
cmpsb
xchg
mov
test
mov
cmc
test
sub
mov
ficoml
popa
aad
popf
pop
popf
gs
cwtl
mov
stos
les
shlb
jo
add
cmp
dec
adc
lahf
push
inc
arpl
lock
sub
fadd
push
andb
testb
call
lods
aas
lret
movsl
shlb
cmp
lods
mov
cmpsb
inc
xchg
out
sbb
in
jmp
bnd
adc
inc
sub
jnp
sub
test
imul
add
jnp
cmpsb
cmp
mov
and
sub
jge
push
adc
push
add
pop
loop
cmpsb
pop
nop
in
scas
ja
adc
aam
aam
lods
cmpsb
mov
lds
add
cs
popf
jle
ss
jge
add
add
bound
cmp
jnp
fcom
repz
and
adc
pop
xchg
imul
es
mov
std
in
adc
push
mov
daa
cmpsb
push
cld
mov
add
cli
pop
sub
sbb
insb
dec
sub
pop
or
test
sbb
push
adc
mov
and
and
lock
xchg
inc
xchg
sub
jle
out
xchg
xchg
popf
sub
mov
push
jmp
add
cmc
or
sbb
lods
adc
jle
lret
adc
leave
or
out
add
fnsave
jo
std
lcall
mov
mov
add
fsts
test
scas
mov
push
add
int
sub
add
shlb
dec
mov
fsub
fwait
mov
pushf
pop
popa
xchg
loop
rcrl
sbb
mov
stc
or
lods
cwtl
in
or
lahf
and
ficoms
mov
lret
aas
mov
in
jne
pop
xor
push
ds
std
cli
fs
sub
mov
int3
int
push
nop
cmpsl
lock
xorl
outsl
inc
nop
jl
pusha
cwtl
or
pop
xor
clc
inc
sub
and
ds
mov
push
and
jb
mov
inc
or
adc
inc
push
cwtl
fucom
mov
xchg
and
ret
jb
imul
enter
scas
sbb
out
in
rorl
gs
sub
aam
fnstcw
cld
jle
push
or
push
push
mov
xlat
in
mov
mov
cmp
insb
mov
fdivl
ljmp
push
cmp
aaa
jp
mov
iret
mov
xor
adc
push
mov
add
mov
ja
push
gs
jmp
and
repnz
mov
mov
mov
xlat
or
pop
incb
mov
rolb
fs
inc
inc
test
aam
push
rolb
add
xchg
inc
iret
mov
inc
ljmp
jbe
or
inc
pop
xor
mov
xchg
in
ss
in
pop
add
inc
add
repnz
dec
lea
xchg
lcall
fisubl
shrl
lcall
out
push
add
mov
xchg
mov
push
cli
jnp,pn
dec
xchg
inc
clc
mov
out
stc
sub
add
lods
shrl
jb
ja
aas
fucompp
aas
stc
lea
arpl
inc
dec
pop
inc
rcrb
inc
jb
les
ds
mov
lea
shr
bound
test
cltd
aad
out
ds
xchg
popa
mov
sub
fs
paddq
mov
cmpsb
stos
lahf
jmp
data16
and
jmp
lret
mov
push
push
add
js
cmpb
cmpb
inc
jl
add
pop
iret
stc
mov
clc
les
stos
inc
out
xor
cwtl
sti
std
scas
pop
fwait
mov
adc
les
leave
orl
pop
inc
or
cmp
cltd
daa
push
scas
jno
sub
bswap
push
hlt
xor
rcll
push
imul
iret
xchg
loopne
xchg
push
jge
mov
mov
inc
pop
jns
gs
pop
push
in
hlt
rolb
stos
pop
sbb
iret
push
popf
loop
es
in
add
adcl
ror
rolb
gs
xor
inc
xor
add
aas
lods
mov
cmp
pop
ss
negb
jae
and
jmp
push
xor
add
or
inc
xor
bound
sti
xchg
and
sarb
cmp
jne
ficompl
push
insb
push
mov
int3
push
or
rclb
or
pop
mov
lock
out
cmp
test
xor
rdpmc
mov
test
mov
xor
gs
insl
clc
jns
lea
cwtl
xchg
out
and
cwtl
push
adc
sbbl
fwait
dec
ja
adc
adc
testb
dec
div
cmpsb
adc
clc
lahf
inc
cmp
sahf
jns
popa
pop
pushf
pop
sbb
incl
bound
outsb
jle
dec
into
gs
cmc
pop
js
fcomp
int3
repz
push
std
and
push
push
and
aam
jg
pop
subl
jmp
nop
xor
cmp
adc
add
jmp
jle
ja
int3
das
rol
cltd
lret
pop
cmp
nop
inc
cli
pop
mov
fisttpl
mov
or
dec
mov
nop
stos
push
pop
mov
mov
cli
inc
sbb
adc
xchg
or
add
cwtl
pop
jns
or
jns
push
mov
sub
xchg
sbb
adc
lret
int3
imul
xor
pop
mov
jle
cs
add
cmp
ret
arpl
hlt
push
sub
scas
push
ja
loopne
pop
sti
lds
cmc
dec
dec
adc
nop
xchg
pop
jmp
mov
js
mov
mov
mov
dec
cmp
cmpsb
pop
loop
arpl
dec
repz
and
test
add
mov
lds
and
shr
add
and
mov
cmpsl
xchg
in
cli
push
int
mov
and
es
fidivrs
xlat
mov
addr16
mov
pop
ja
insl
mov
sbb
mov
shll
repnz
push
mov
cmovg
jmp
push
adc
adc
push
xchg
dec
repnz
sub
mov
out
out
sbb
cmp
jmp
add
lahf
cmpsb
nop
mov
add
andl
aas
ret
lea
mov
loopne
or
cwtl
adc
cmpsl
push
mov
ret
sti
out
adc
xlat
movsl
push
enter
cmp
ret
test
insb
xchg
je
inc
int
cli
dec
loopne
add
lea
xchg
mov
test
and
sub
outsl
push
ljmp
mov
bswap
add
mov
jmp
sti
imul
and
pmaxsw
dec
sti
jmp
es
pop
jo
test
frstor
scas
pop
add
adc
push
jmp
pop
outsl
jae
cmp
jns
out
xor
mov
rorl
jnp
scas
sub
cltd
int3
mov
fbld
jp
in
push
outsl
cld
push
ret
icebp
aaa
cltd
jmp
shl
jmp
push
add
loope
push
xorl
cmp
cmpl
xchg
enter
test
sub
add
xchg
loop
inc
ret
idivl
push
pop
sub
daa
inc
ret
add
lret
mov
jle
stos
scas
stos
nop
jg
jg
hlt
leave
adc
or
repz
jecxz
xlat
pop
mov
movsb
xor
pushf
daa
test
pop
push
add
sbb
iret
cmp
into
aad
push
cltd
lea
adc
leave
pusha
fisubl
xchg
fadd
popa
cwtl
in
js
push
enter
daa
cmp
je
mov
inc
push
addr16
and
inc
lds
std
xor
jge
xchg
sub
fdivrp
mov
outsb
mov
stos
adc
mov
or
sub
test
fs
jbe
and
inc
enter
mov
scas
push
sbb
pop
dec
divb
testl
in
add
ds
jbe
or
xor
push
cmp
bound
cltd
cmpsb
fiaddl
cs
std
xor
int
pop
or
sub
hlt
addr16
pop
cmp
mov
das
jge
push
pushf
add
ljmp
in
repz
dec
sar
imul
xchg
xor
add
sbb
popf
cmp
adc
addr16
cmp
push
mov
xchg
adc
mov
aaa
pop
cmpsb
push
out
arpl
repnz
push
iret
cld
insl
stos
dec
dec
pop
repz
mov
mov
ja
adc
jg
cmp
add
sbb
icebp
je
sbb
or
lods
jno
jo
lods
mov
xchg
mov
pop
ss
ljmp
sbb
pusha
jl
jns
les
adc
mov
cli
les
fdiv
add
dec
hlt
cltd
cld
into
jno
xor
mov
cld
dec
mov
adc
loop
mov
mov
icebp
mov
push
jb
repnz
mov
pop
push
negl
jo
insl
into
test
test
add
out
cwtl
sbb
jns
jecxz
ret
aaa
lret
cmp
lea
andl
repnz
lret
dec
dec
cli
loopne
ret
dec
std
jecxz
xchg
push
rcr
aad
les
cmc
loop
mov
add
push
sbb
mov
or
inc
mov
fs
fs
cld
loop
jg,pn
xor
call
push
call
in
xor
ficoml
pushf
xchg
aas
mov
psubsb
subb
popf
jo
cmpsb
jl
mov
or
jne
mov
arpl
pmaxub
dec
mov
in
gs
scas
cmp
aam
imul
arpl
mov
adc
out
test
xchg
mov
int3
inc
jp
mov
xor
dec
loop
xchg
repnz
push
in
mov
lret
cmp
jge
add
inc
decb
lret
es
mov
test
xor
shrl
insb
out
fisttpll
xlat
cli
mov
ret
lcall
punpckhdq
xor
mov
addr16
scas
xor
movsl
scas
mov
push
add
jmp
push
push
bound
xor
stos
cmp
sub
push
movsl
lods
aad
int3
nop
les
fstps
mov
les
jo
test
sbb
repnz
jbe
hlt
pop
inc
cmp
mov
mov
pop
pushf
cmc
faddl
push
push
and
leave
sti
fs
out
cmpsb
jae
push
or
jecxz
mov
ljmp
sub
outsl
fwait
xchg
xchg
test
mov
xchg
clc
jg
xor
stos
leave
mov
mov
mov
dec
mov
insl
and
lds
cmp
push
scas
mov
mov
mov
dec
or
xchg
test
or
inc
in
je
ljmp
ja
and
test
jp
sbb
xor
mov
dec
sahf
xchg
xchg
push
inc
mov
rcll
cmp
cmpsl
pop
jae
add
push
xchg
data16
imul
mov
lret
or
jnp
mov
call
jbe
inc
lcall
movl
mov
in
push
and
mov
lods
push
fwait
pop
and
jb
dec
cld
pop
pop
and
imul
mov
bound
xchg
xor
bound
add
hlt
fucomip
je
jbe
push
aam
outsl
jno
and
mov
std
das
in
ret
inc
mov
xchg
out
dec
jo
jns
in
gs
fcmovnbe
sub
pop
fwait
daa
push
sbb
mov
mov
sarl
in
push
aaa
push
dec
mov
test
adc
iret
adc
icebp
subl
inc
aam
pop
jge
ds
xchg
addr16
ds
or
mov
jl
inc
mov
and
roll
mov
in
push
inc
mov
inc
hlt
sti
jp
sbb
in
fdivrp
js
pop
dec
sub
test
inc
fs
add
cltd
add
push
pusha
cmc
cmc
cld
cmp
insl
sub
shrb
mov
and
daa
cld
cmp
ss
popa
repz
xchg
rcrl
jge
sbb
popa
mov
sub
mov
cs
shlb
pop
lock
ret
inc
les
pop
dec
stos
xor
leave
adc
mov
setge
clc
push
pushf
lods
in
mov
cltd
jo
inc
cmc
dec
and
flds
jecxz
in
add
nop
into
push
icebp
pop
mov
icebp
add
lret
cmpsb
xor
push
add
inc
inc
jb
and
push
lcall
xchg
fdivr
mov
bound
and
aad
lods
jo
aaa
fiaddl
mov
rorl
mov
xchg
imul
inc
stos
outsl
jnp
lods
je
js
ja
hlt
mov
out
xor
add
lret
outsb
mov
test
mov
or
insl
adc
mov
lret
push
repz
jge
dec
mov
mov
xorl
int3
shrl
or
fwait
aam
mov
mov
lret
ds
push
inc
ds
dec
dec
mov
sbb
out
xchg
scas
sbb
xor
lcall
xor
mov
aas
mov
push
xchg
inc
int
mov
dec
fs
jg
ja
mov
aaa
push
fiaddl
pop
dec
pusha
clc
sub
mov
ror
xchg
xor
rolb
andb
mov
mov
fldt
lahf
out
xchg
addr16
pop
dec
pusha
stc
mov
pop
inc
enter
jmp
inc
hlt
popa
fsub
mov
imul
xchg
shll
sub
xchg
pop
xor
dec
dec
sub
or
or
fstpl
dec
in
xchg
test
inc
repnz
jmp
mov
lods
push
mov
pop
int3
imul
ret
movsb
jl
addr16
jmp
test
imulb
adc
fists
push
ja
pop
push
sub
mov
outsl
mov
and
sti
xchg
test
sub
mov
out
hlt
faddl
mov
mov
ljmp
jbe
out
out
pop
inc
sahf
jnp
push
into
adc
repz
fs
mov
and
mov
cwtl
cmp
sbb
inc
stos
fadds
ret
test
adc
loopne
push
sbb
cmp
mov
cwtl
pop
outsl
adc
dec
adc
rcr
or
pop
fnstenv
pop
insb
push
in
clc
inc
cmp
popa
shll
cmpsl
ja
push
mov
pop
cbtw
sub
je
out
sub
jo
in
add
xor
imul
dec
in
ss
stos
push
inc
jg
jmp
mov
outsl
mov
pop
push
imul
mov
repz
test
mov
adc
loop
ljmp
mov
sbbl
push
or
inc
mov
adc
xlat
jns
subb
mov
fdivs
cli
jne
call
into
sti
xchg
repz
lods
inc
int
repz
add
pusha
and
pusha
push
lds
push
loop
ljmp
int
testb
sub
push
jnp
lds
or
cmpb
pop
mov
jbe
or
push
adc
and
mov
and
clc
mov
sub
pop
fwait
loop
jmp
mov
cmpsb
cmp
daa
bound
push
mov
cmpb
lret
in
mov
cmpl
pop
xchg
or
gs
xchg
push
js
lock
hlt
int3
fs
inc
sub
cmp
int
out
push
xchg
aam
and
stos
and
ds
fs
mov
testb
daa
adc
fsubrp
sti
shrb
adc
push
shlb
jb
and
and
in
lods
fwait
les
orb
lods
push
sbb
mov
cmp
fwait
popa
aam
cwtl
mov
xchg
jge
mov
out
inc
xchg
lahf
cli
or
mov
cmc
jp
or
mov
cmp
lcall
loop
xchg
or
sub
arpl
pop
in
sub
xor
arpl
add
and
add
or
aam
push
or
rcrl
out
mov
xchg
xchg
push
xchg
xlat
sbb
call
es
inc
andb
mov
pop
add
jo
aas
push
aaa
xchg
out
jecxz
add
rep
mov
fidivs
dec
mov
movsb
xor
cmp
popf
sub
int3
shll
mov
pop
mov
and
or
iret
or
cmpb
push
mov
int
or
rcrb
rorb
inc
and
cmpsl
lea
adc
int
mov
addb
add
movsl
ret
jbe
add
dec
jmp
inc
push
push
shlb
addr16
mov
xchg
add
pushf
push
cmp
xchg
call
push
fcom
sub
dec
call
and
jl
cli
pop
fadd
mov
cltd
cld
loope
inc
or
lcall
imul
ficompl
cli
popl
insl
or
push
lea
jae
loop
cmp
ljmp
and
xor
insb
rorl
out
imul
push
and
cmp
adc
ret
std
xorb
push
sarl
in
mov
leave
mov
jg
js
mov
sbb
dec
ss
divl
or
xorb
aad
add
stos
insl
popa
jae
out
pusha
ljmp
fildll
and
les
test
jle
pop
fwait
movsb
push
add
mov
xchg
sub
push
or
jle
out
inc
loopne
andb
xchg
push
mov
pop
dec
in
es
xchg
fidivs
jae,pt
or
push
mov
and
call
adc
adc
rol
and
movsl
dec
ja
jecxz
mov
xchg
xchg
sbb
in
inc
push
lret
xor
js
cld
mov
outsl
outsb
test
outsl
es
test
ljmp
stc
icebp
bnd
sub
jg
ret
cli
jp
adc
push
frstor
mov
fcompl
adc
pop
loope
jae
in
orl
mov
movsb
add
or
jg
fcoms
imul
lea
repnz
aam
ror
jne
jnp
pop
popl
adc
mov
lds
repz
ja
sarl
pop
adc
mov
movsl
arpl
outsl
mov
daa
push
in
cmp
jecxz
xchg
pop
lahf
pop
jg
pop
cmc
in
popa
xchg
and
stos
cmp
cld
out
test
test
lcall
out
out
add
shll
jo
inc
mov
mov
imull
lods
pop
out
fwait
push
ss
clc
inc
xlat
sbb
or
aaa
sbb
call
dec
push
sbb
popa
hlt
or
les
xchg
adc
add
pushf
cmp
jge
subb
add
enter
inc
add
repz
pop
mov
mov
or
aam
data16
arpl
shrb
repz
in
dec
xchg
xchg
inc
stc
inc
hlt
mov
adc
lcall
mov
shrl
pushf
cmp
and
push
out
test
jl
mov
lcall
sub
ficomps
fyl2x
lods
notb
lock
xor
sbb
out
or
jno
sub
xchg
sbb
sar
in
push
icebp
repnz
aaa
sbb
ljmp
mov
xchg
loope
mov
sti
clc
pop
insl
fwait
jge
cld
andl
inc
mov
sti
adc
mov
ret
lahf
clc
or
ljmp
js
ss
inc
xor
xor
in
xor
push
in
cmp
and
pop
les
out
jp
mov
mov
rcr
call
sbb
xchg
out
addr16
inc
iret
adc
and
xchg
mov
lock
push
xor
outsb
inc
push
lret
or
pop
mov
push
addr16
mov
stos
lahf
sub
mov
inc
jmp
pop
mov
lahf
sbb
xor
push
push
adc
stos
les
pop
xchg
push
cmp
shll
insb
ds
pop
gs
psllq
fwait
mov
popa
jmp
daa
js
aad
jnp
fs
gs
lahf
push
mov
ja
mov
insl
es
insb
pop
mov
cmp
sbb
mov
fmul
pop
inc
xchg
cmp
and
paddusb
xchg
mov
subb
loopne
ja
clc
arpl
xor
cmp
push
mov
xchg
popa
sbb
jl
call
in
jl
xchg
cmp
cwtl
fstl
movsb
xor
scas
gs
sub
stos
mov
les
pop
adc
out
mov
mov
test
sahf
add
xor
and
xchg
repnz
into
pop
leave
push
mov
repnz
in
out
inc
out
push
aas
daa
push
pop
jl
jns
movsb
jae
int
mov
lahf
pop
js
dec
adc
mov
ljmp
movsl
lods
jo
cs
cwtl
mov
js
mov
mov
cmp
shl
jp
add
inc
xchg
push
or
push
push
dec
sub
pop
push
ja
xor
lret
fistps
dec
push
les
or
sub
cltd
imul
push
out
mov
fsub
mov
fistps
int
sarl
and
loop
dec
fisubl
das
call
aam
lahf
fwait
sub
adc
xchg
repz
sbb
cmp
dec
jle
stos
push
pop
push
push
add
je
dec
lret
and
xchg
sbb
xlat
leave
lods
mov
pop
cmp
mov
jae
mov
xor
mov
push
mov
xchg
mov
jmp
scas
mov
push
test
mov
pop
fmull
insb
stc
adc
push
mov
out
andl
movb
hlt
xor
inc
push
out
dec
xor
and
sti
ds
dec
jns
mov
mov
dec
xlat
sbb
int3
sub
addb
ror
push
pop
pop
jo
xchg
out
dec
xlat
inc
inc
sahf
xor
dec
in
lds
std
dec
out
mov
insb
sub
cltd
adc
adc
jle
add
lcall
in
push
or
push
inc
sub
sub
jp
sbb
ficoml
std
mov
mov
mov
push
imul
lret
jo
adc
cmc
in
int
pusha
icebp
push
in
stos
dec
add
int3
iret
mov
jmp
push
jne
mov
addr16
inc
mov
insl
sub
lea
in
jp
jmp
xor
sub
push
repz
cmpsb
xchg
mov
inc
into
std
fsubs
fcmovnb
lods
xor
jns
jo
aaa
jno
cwtl
mov
scas
shll
cmp
mov
in
jge
andl
jno
dec
sti
ds
nop
clc
insl
cmp
mov
out
cmp
lahf
aam
ljmp
clc
sti
lea
nop
movsl
xlat
push
mov
xor
ret
into
cmp
mov
mov
enter
mov
lods
cltd
xchg
in
pop
push
scas
jo
xor
insb
outsl
mov
call
sbb
lods
mov
loop
adc
imul
push
dec
add
movsl
jmp
leave
push
sahf
cmp
xor
mov
dec
cli
sub
les
jg
stc
mov
stc
pop
fistpll
test
cmp
fwait
cmc
shr
xlat
pop
dec
notb
fisubl
movsb
pop
jns
push
cltd
hlt
loope
shll
scas
inc
sub
fimuls
vandnps
insb
adc
cs
test
movsb
add
add
jge
gs
jp
sbb
cmpsl
cwtl
mov
push
mov
fnstsw
scas
psrad
dec
mov
jne
jo
inc
push
aad
dec
icebp
sub
xchg
jg
push
dec
and
pop
xchg
adc
jmp
leave
pop
and
mov
cmp
loopne
cmp
mov
inc
cld
lea
stos
pop
jb
lock
or
ljmp
dec
shr
cmc
add
lcall
cmpsb
testl
lock
pop
loope
and
clc
inc
fcmovnu
and
dec
dec
fwait
xor
fldl
subb
adc
cmpb
jne
xor
ja
cmp
out
inc
dec
repz
xchg
and
mov
pushf
cld
arpl
js
ljmp
mov
leave
xchg
sub
xor
or
movsl
mov
push
sbb
jne
pop
mov
jge
jmp
cmp
mov
bound
pusha
xchg
inc
mov
adc
pop
lods
inc
dec
mov
jp
mov
push
add
popa
jo
mov
out
or
push
mov
mov
outsl
pushf
cmp
movsl
sub
pop
mov
aad
pop
cmpb
orb
jae
imul
xchg
enter
hlt
push
pop
ds
push
scas
dec
fstpl
ficompl
push
dec
inc
stos
repz
rol
push
or
cs
aam
or
fcompp
repz
inc
pop
sbb
jnp
xchg
adc
push
and
cli
push
jbe
adc
dec
mov
inc
bound
aad
adc
push
dec
lahf
sbb
loope
shrb
scas
pop
or
xchg
out
divl
xor
cli
or
sbb
out
outsb
loop
cmc
int
push
les
mov
lret
fadds
jae
sub
lcall
bound
sbb
sub
sarb
mov
rol
fsts
push
push
lods
mov
jge
dec
and
cmp
or
xchg
sbb
lret
loopne
sub
lret
push
enter
pushf
fmul
xor
jo
out
cmp
add
jb
fwait
outsb
enter
notl
lock
mov
shlb
stc
cmp
call
jbe
fnstsw
xor
and
mov
sbb
or
clc
icebp
add
sub
push
imul
pop
shlb
push
adc
movsb
pusha
lret
add
add
divb
sbb
and
je
adc
xchg
jnp
and
jg
nop
jne
mov
sbb
andb
fwait
into
dec
cli
out
test
pop
test
or
pusha
cmc
mov
sbbl
hlt
xchg
dec
repnz
dec
cmc
mov
pop
pop
push
out
and
jb
or
test
adc
mov
mov
adc
push
dec
movsl
mov
jle
call
inc
fbstp
lods
dec
sub
adc
test
movsl
call
cmp
sub
push
ljmp
jle
add
nop
lret
in
test
push
mov
xchg
ds
xor
mov
flds
mov
test
dec
inc
enter
fidivrl
out
push
aaa
aaa
xor
add
push
int
das
imul
pushf
xchg
push
xchg
pop
loope
dec
ret
add
mov
shrl
adc
mov
add
test
xchg
mov
inc
mov
xchg
bound
pop
mov
xchg
mov
xor
fdivr
xor
sbbl
or
dec
pop
ja
xchg
and
jbe
icebp
ja
test
aam
push
dec
and
xor
movsb
mov
movsl
mov
jns
inc
scas
insl
and
in
xchg
mov
and
aaa
arpl
shrb
test
inc
dec
cmp
and
dec
inc
in
inc
call
inc
mov
xor
hlt
rcrb
nop
push
js
out
inc
xchg
jb
mov
push
fldlg2
into
mov
notl
out
pusha
lahf
mov
f2xm1
mov
dec
add
test
xchg
xor
imul
jl
inc
clc
idivb
mov
cmp
shrl
jbe
fwait
mov
cmc
xchg
push
adc
mov
lea
sbb
jo
cmp
and
cmp
lret
and
dec
mov
mov
outsb
clc
daa
pop
and
push
dec
in
ds
filds
daa
sbbl
out
js
fnstenv
push
fsubrl
jp
push
add
push
inc
cmp
repz
test
xorb
outsl
jp
mov
cmp
jb
xor
cmp
mov
imul
cmc
leave
cmp
out
mov
mov
cld
ja
dec
xlat
jae
cmpsb
mov
fdivl
xchg
sub
inc
dec
icebp
cmp
shl
fdivs
hlt
and
push
jge
and
enter
hlt
jo
and
mov
mov
jnp
mov
mov
add
int3
ficoml
pop
dec
xor
push
in
pop
sub
test
popf
pop
fdiv
int3
enter
dec
and
mov
scas
pop
icebp
mov
into
in
mul
cmc
ds
hlt
dec
adc
mov
scas
mov
push
xchg
adc
push
cmp
data16
and
aaa
int
xor
jg
and
fst
xchg
and
xor
cmp
ret
loope
pusha
sarl
sbb
fs
add
push
mov
call
clc
sbb
xor
jp
repnz
push
out
inc
inc
sub
lcall
out
mov
push
js
xchg
sahf
test
int
xlat
addr16
es
add
sub
jmp
mov
outsb
xchg
jns
aad
jae
mov
stc
das
jnp
int3
sahf
xor
or
adc
loope
pop
mov
gs
repz
mov
push
aam
push
arpl
decb
lea
test
xor
mov
pop
dec
ss
test
and
cmpb
mov
call
pop
xchg
push
rclb
daa
arpl
sahf
popf
fsts
movsb
lods
jbe
data16
add
inc
scas
dec
push
hlt
mov
xchg
and
sub
jp
mov
fcoms
add
pop
jae
fwait
jge
movsb
in
jne
inc
jnp
stos
dec
insb
adc
imul
sbbb
jp
cwtl
mov
mov
fwait
nop
dec
mov
leave
movnti
fdivrs
clc
dec
xchg
cmp
mov
subl
ret
mov
cld
pop
loope
popa
adc
mov
jnp
jno
jae
out
out
xor
ds
clc
lret
inc
mov
out
jbe
cmpsb
rclb
popa
subl
stc
mov
ret
lret
or
mov
lret
rcrb
cmpsb
movsl
out
pop
mov
add
xor
push
push
ret
cli
mul
mov
inc
jo
divb
and
in
fildl
cmp
pusha
push
aam
out
mov
cmp
aaa
mov
jbe
jo
cwtl
loopne
lss
fst
int3
and
push
lods
fildl
jnp
ret
dec
int
mov
lds
cmp
mov
cmpsl
std
cmp
test
xchg
mov
push
jl
mov
cli
pop
mov
loopne
and
inc
lods
add
lahf
fwait
jl
ljmp
inc
pusha
cmp
and
iret
test
mov
jmp
jg
in
jae
xchg
push
pop
enter
jmp
stc
mov
lock
xor
push
cmp
push
xchg
out
push
mov
bound
push
and
xlat
push
shrb
stos
int
repz
out
mov
enter
stos
lods
repnz
idivb
add
lods
inc
add
arpl
lods
dec
and
dec
test
dec
mov
mov
pop
pop
fdivr
es
jle
shrb
pop
jno
inc
or
clc
or
andl
mov
ficomps
jns
cli
pop
aad
jecxz
pop
mov
mov
ret
push
push
mov
test
push
pop
int
and
lret
mov
shlb
pop
scas
dec
inc
out
insb
jp
or
pop
push
shll
lds
sub
push
rorl
jnp
mov
pop
lock
fstps
jno
xchg
push
cltd
fists
outsl
inc
dec
cmc
add
jg
cmpsb
push
push
or
jl
loop
rcr
add
add
mov
push
sbb
std
adc
jae
movsl
jl
jbe
xchg
dec
roll
mov
cli
inc
sti
jl
jo
sarl
dec
scas
in
push
push
jbe
int3
cmpsl
mov
loopne
mov
push
pop
imul
adc
adc
mov
push
stos
scas
xchg
sub
cmc
aad
push
mov
insb
das
pop
cld
test
mov
adc
push
stos
andl
repnz
sbb
iret
xchg
repnz
add
je
or
push
call
or
leave
push
mov
xor
lds
push
pop
xlat
aam
cmp
mov
push
repz
scas
fisubrl
mov
jecxz
dec
and
pop
ret
push
jp
push
dec
sti
scas
aam
mov
cmp
clc
add
add
pusha
lea
pusha
and
adc
sbb
xor
js
push
mov
outsl
pop
fincstp
loop
call
xchg
pop
popf
push
dec
in
adc
out
dec
mov
movsb
cmpsb
ret
mov
dec
pop
push
int3
jae
in
or
les
je
and
push
stc
pop
jb
cmp
inc
pop
sbb
xor
fsubs
popf
mov
mov
insl
mov
insl
pop
push
inc
loopne
cmp
cmpb
mov
mov
sub
js
push
mov
jnp
dec
leave
dec
push
das
push
ja
pusha
nop
push
xor
inc
sbb
ds
push
jmp
mov
jno
lock
lahf
rcll
add
adc
lahf
rol
dec
lahf
sub
inc
push
xor
int3
es
rolb
sub
or
inc
push
push
xchg
aaa
fbld
jnp
dec
enter
loop
xchg
or
stc
jecxz
jge
sahf
inc
aaa
jmp
lods
loop
dec
lods
xchg
test
push
cmp
pushf
or
movsb
imulb
sbb
sub
fwait
mov
xor
add
sub
lock
mov
or
dec
mov
jle
popf
incb
mov
fcoms
inc
sub
xor
xchg
mov
ja
out
call
loop
mov
inc
or
sti
ret
add
sub
jbe
leave
mov
or
xchg
push
add
dec
push
xor
shlb
dec
jbe
int
mov
dec
mov
int3
push
aaa
pop
and
push
rol
lea
jne
aaa
jg
fs
lods
test
sbb
out
xor
pop
mov
pop
dec
sub
dec
push
into
ret
cwtl
lret
inc
pop
cltd
push
mov
or
fidivs
ret
movsl
push
cmpl
dec
inc
add
notl
xor
clc
ds
lods
jle
dec
clc
out
xchg
pop
and
or
jbe
fs
jae
popa
out
cmp
mov
push
iret
jne
aaa
subb
jge
push
scas
testb
push
mov
mov
push
jne
std
xchg
pusha
bnd
dec
cmc
jne
mov
rcrl
add
mov
pop
dec
fistps
cli
shll
in
mov
adcl
je
cmpsl
lods
inc
ja
xor
cmp
pop
insb
repnz
pop
mov
repz
adc
pop
sbb
insl
add
hlt
daa
or
enter
add
movsb
insl
out
or
icebp
movsl
inc
lahf
push
jecxz
xchg
cmp
jle
out
lcall
and
sub
jo
mov
mov
mov
jp
lods
in
or
iret
out
mov
inc
jbe
lock
and
xchg
add
out
in
mov
pop
lods
adc
lods
test
sub
add
pushl
movsb
imulb
scas
sub
mov
icebp
out
lret
inc
mulb
leave
scas
jl
data16
push
hlt
movb
fidivs
jecxz
out
xchg
mov
push
inc
insl
cmp
push
push
rol
jmp
cmp
stc
sub
subb
inc
inc
popf
and
jnp
rorl
data16
insl
xor
xchg
sub
pop
sti
aas
ja
and
or
adcb
push
in
add
int3
jg
or
jle
lea
jle
cld
sbb
or
pop
dec
pop
lea
not
jecxz
and
sbb
js
jb
jo
loopne
jbe
fnstcw
dec
test
push
lcall
inc
shlb
push
dec
das
in
leave
movsb
or
jne
mov
aas
sar
pusha
in
ja
cmp
add
jmp
add
aas
jae
mov
xor
inc
or
fistpl
in
jmp
sub
pusha
addr16
push
lods
xor
fmull
out
push
dec
sahf
push
test
pop
xor
pop
push
and
cmp
in
cli
cwtl
fwait
gs
das
push
aas
out
adc
js
mov
test
call
leave
outsb
inc
pop
ds
cltd
ds
je
adc
pop
lcall
or
cli
rolb
dec
inc
add
es
adc
pop
test
inc
bound
nop
jle
push
or
imul
insb
notb
iret
jbe
xchg
pop
lea
sub
sub
jecxz
adc
cltd
repnz
or
sub
imul
dec
jl
bound
mov
lea
aad
push
pop
int
add
jns
inc
fwait
das
and
stc
push
push
movsb
and
mov
shrl
inc
xor
pop
icebp
xor
and
cmc
inc
mov
and
cmp
mov
fdivrp
in
decl
lea
jl
push
push
mov
nop
xor
xchg
pop
cmp
scas
popf
ja
cmp
push
xor
inc
lods
mov
dec
bnd
pop
lcall
jge
inc
cld
adc
clc
imulb
mov
xchg
inc
sub
cmp
jo
stc
push
mov
popa
aas
or
push
mov
jo
xor
push
movsb
fcoms
xor
xchg
lret
jle
push
daa
jo
pusha
push
push
pop
js
fs
cmp
in
test
cmp
or
mov
int3
cltd
das
dec
in
ljmp
sahf
daa
ret
fistpll
jo
adc
sub
or
lahf
cld
mov
pop
loop
int3
sub
cmp
mov
push
or
popa
mov
aam
xchg
lea
in
sarb
sti
movsb
insl
jmp
fildl
push
pop
cltd
shrb
insl
mov
pusha
lahf
insb
jns
mov
jmp
js
int3
xchg
mov
mov
fistpll
sbb
cmp
sbb
mov
leave
sub
sbb
pop
pop
cmp
nop
adc
jne
push
jnp
adc
jg
aad
popa
cmpsb
enter
add
dec
insb
jecxz
call
jl
or
stos
bound
or
pop
pop
pusha
dec
jp
adc
push
fldcw
sti
in
loop
addr16
jo
in
xchg
mov
adc
data16
negl
je
nop
and
in
xchg
pop
iret
pop
and
in
jp
pop
sub
sbb
mov
pushf
test
out
fstpt
inc
xor
mov
inc
mov
xchg
sbb
sub
xor
add
testl
fistps
leave
mov
adc
popf
les
clc
icebp
int3
lret
in
into
push
dec
xor
mov
jnp
ret
xchg
adc
lahf
xlat
jo
xor
test
rorl
add
test
repnz
je
mov
mov
or
in
pop
ret
or
cmpsb
cltd
dec
xchg
int3
sbb
push
aas
jns
and
jo
in
add
pop
xlat
in
sbb
lods
xchg
out
stos
negb
pop
sub
mov
fisubs
cmpsl
repz
xchg
pop
shlb
xor
lods
dec
loop
jns
dec
xchg
dec
push
loope
dec
repnz
iret
in
mov
sbb
lock
jbe
test
sub
pop
insb
mov
call
pop
jne
lahf
fs
push
mov
aaa
jecxz
cmc
stos
dec
or
cld
inc
mov
in
idivb
imul
out
cmpsl
push
pop
cmp
jbe
movsl
xlat
dec
jmp
mov
xchg
decb
orl
fistl
add
clc
fdivs
and
enter
shlb
arpl
lods
adc
lahf
aas
test
shlb
test
pop
gs
xchg
sbb
fchs
fimull
xlat
adc
pusha
dec
sub
mov
xor
push
cs
leave
xchg
out
mov
shll
jp
les
cmp
pop
dec
jg
pop
xchg
jp
xchg
mov
lcall
jne,pt
test
or
call
cld
add
mov
enter
mov
adc
into
sbb
pushf
mov
call
jne
sub
jmp
cli
mov
lock
jge
xchg
sbb
ljmp
sub
adc
push
gs
icebp
dec
push
add
sub
popf
fwait
dec
jnp
sbb
in
push
and
call
fdivrp
sbb
mov
mov
push
mov
cmpsb
xor
idivb
inc
mov
jecxz
out
fs
test
sub
sbb
daa
push
sti
cmp
je
arpl
push
push
jbe
int3
cmp
push
outsl
jo
and
fdivrl
dec
mov
ja
movb
out
sti
inc
and
pop
xor
popa
adc
les
cmp
fisttpl
pop
ds
mov
mov
js
sub
pop
popa
clc
adc
pop
imul
sub
jl
adc
jge
and
out
pop
pushf
adc
pop
out
test
xlat
std
cmp
jle,pn
in
fcomi
test
and
mov
dec
mov
dec
shl
outsb
dec
push
or
jmp
push
and
es
pop
push
imul
in
mov
fimuls
adcb
or
xor
mov
mov
ret
je
fsubl
inc
mov
shr
push
jnp
cmp
fistpl
adc
imul
xchg
push
es
adc
mov
enter
pop
jecxz
cmc
and
out
pop
rcrl
ljmp
mov
adc
adc
jge
sbb
in
fstps
ljmp
stc
or
idivb
push
iret
xor
enter
or
sub
inc
xlat
in
jns
ret
xchg
mov
ss
mov
sti
jbe
stc
inc
mov
xor
push
mov
jne
fildll
xchg
sub
addr16
cmp
push
test
push
rep
or
lods
xchg
jl
aam
dec
test
lret
xchg
pop
cltd
dec
andl
jl
adc
rcll
inc
or
xchg
adc
mov
scas
and
out
lret
mov
mov
push
xor
out
add
adc
popf
or
loope
cmp
mov
into
movsb
test
mov
out
sbb
or
add
sub
insl
push
xchg
push
lods
iret
inc
iret
xchg
scas
sbb
sub
mov
leave
popf
xchg
insb
loope
sbb
add
cmp
jl
leave
adc
xchg
test
movsl
das
xor
or
out
pop
enter
jg
inc
add
mov
or
pop
cltd
dec
std
rcll
ljmp
jg
hlt
test
sti
or
stos
add
pop
lret
repnz
adcl
hlt
or
pushf
sar
gs
scas
adc
push
dec
dec
push
jmp
push
and
loope
mov
shll
mov
or
inc
push
adc
add
scas
pop
insl
sub
lret
inc
cmc
into
leave
cmp
pop
adc
sbb
jo
dec
outsb
add
les
push
stc
and
and
xchg
xchg
fbstp
lea
mov
or
or
repz
add
mov
and
clc
cld
mov
mov
call
fnsave
push
sahf
add
xor
xor
stos
test
dec
mov
or
sbb
out
pushl
mov
scas
push
cltd
repnz
xlat
loop
mov
js
test
outsl
in
inc
inc
dec
sbb
dec
cltd
lret
lods
sub
or
lock
fnsave
or
mov
sti
test
fcompl
lret
inc
loopne
add
loop
xchg
lcall
fsub
movsb
pop
out
cmp
dec
enter
or
mov
lret
sbb
or
andl
insb
jle
int3
add
loop
mov
mov
xchg
pop
sbb
or
jmp
mov
sbb
out
mov
test
xlat
jge
lods
or
sbb
loopne
lds
movsl
ficomps
faddl
or
and
clc
push
jo
sbb
xchg
aam
loopne
fsubs
shll
xor
shrl
js
ss
stos
inc
cmpl
cmp
lret
loop
in
sti
psllq
scas
jno
stos
push
or
andb
cltd
pop
int
outsl
dec
jno
cmpsl
scas
loop
xchg
mov
js
popf
frstor
arpl
dec
jl
adc
sub
mov
xchg
daa
pop
andb
or
cmp
push
in
mov
outsl
dec
pop
cmp
test
aad
push
mov
dec
insb
subl
push
daa
push
popf
or
subl
jnp
mov
cwtl
sahf
test
or
lds
insb
push
mov
lret
hlt
loope
daa
cmp
mov
mov
bound
sbb
adc
insl
and
loop
jnp
in
add
pop
jne
cmpl
test
dec
movb
pop
shlb
push
push
shrb
mov
scas
hlt
fsubr
cmp
add
nop
repz
gs
push
and
pushf
negb
pop
addl
lods
or
mov
sub
in
cmp
stos
divb
or
repnz
rcl
mov
movsl
jne
jmp
int3
loop
movsb
lret
pop
add
pop
jne
xchg
xor
stc
ficomps
sub
mov
fisttps
and
cmc
loope
push
mov
les
les
rcrl
mov
cmpsl
sub
xorl
fwait
inc
repz
and
ja
addl
xlat
cmc
call
in
jp
push
and
mov
add
iret
int3
data16
push
mov
fwait
or
inc
mov
cmpsb
or
cwtl
push
lret
inc
jo
mov
shrl
push
ret
test
pop
insb
jle
mov
outsb
out
sbb
inc
test
insl
es
call
xor
aas
addb
pop
pop
fidivrs
mov
es
sub
xchg
cmp
mov
xchg
cmpsb
jge
mov
fwait
aam
and
sbb
push
les
push
mov
fwait
xor
in
and
sbb
loopne
aaa
dec
mov
cmp
adcl
out
iret
and
pop
xchg
test
mov
jge
xor
jne
fiaddl
pop
scas
and
add
dec
mov
das
xlat
fildl
fcmovnu
je
pop
jecxz
xor
sub
xchg
xchg
xchg
inc
ds
flds
mov
loop
cmpsl
iret
rcrl
jmp
insl
rclb
add
jb
popf
loopne
jnp
and
pop
leave
movl
popf
lret
es
inc
adcl
test
jb
add
push
mov
aam
in
mov
cli
sub
inc
popa
mov
add
ds
pushf
mov
fwait
fwait
mov
ret
pop
sti
pop
inc
popa
mov
cltd
int3
pop
outsl
ret
leave
and
pop
popf
out
dec
push
ljmp
and
inc
pop
cmp
fildll
dec
ror
add
outsl
mov
and
in
in
sbb
mov
and
jae
xor
and
jp
jno
loope
inc
loope
push
stc
push
pusha
leave
mov
push
xor
lea
sbb
sub
loop
add
popf
and
jb
dec
sub
xchg
mulb
lods
aam
aaa
adc
es
sub
add
shl
sbb
sub
mov
ja
adc
sub
lret
imul
fisubs
hlt
clc
cmp
test
in
fidivrl
push
pusha
negb
fidivrl
mov
lods
mov
movsl
roll
sbbb
sub
jno
sbb
and
xorl
push
pop
stos
in
in
xchg
into
int
dec
jle
jge,pn
mov
sub
push
lret
cmp
adcl
adc
sbb
nop
shl
rorb
add
pop
adc
sub
pop
push
sbb
iret
div
jmp
mov
sbb
outsl
mov
and
mov
adc
adc
popa
aad
fwait
push
cld
stc
inc
xor
and
sub
ret
cmp
roll
in
cmp
jp
outsl
or
sahf
popf
cmp
mov
dec
sbb
mov
adc
and
out
xchg
cmp
mov
testl
and
xor
mov
mov
jno
addr16
aas
sbb
mov
xchg
cmpsb
int3
pop
xchg
scas
and
pusha
sarl
push
xchg
pop
push
adc
inc
pop
clc
xor
cwtl
or
hlt
pop
shll
add
outsl
xchg
xchg
call
push
jo
jp
mov
xchg
mov
dec
sbb
jb
fnstcw
adc
shr
dec
cmp
and
xlat
jbe
add
into
rclb
cmp
andl
dec
loopne
cwtl
sti
je
addb
jno
push
call
pop
xor
test
fsubr
dec
je
pop
cs
jno
mov
xchg
push
add
add
jmp
sbb
div
push
pop
enter
movl
in
outsl
ficoml
xor
pop
jmp
test
pop
daa
out
jb
sub
in
jae
enter
add
pop
scas
inc
cli
pop
out
sahf
and
nop
jl
dec
sbb
push
rcrb
fucomi
leave
sahf
adc
xor
jns
pusha
lret
imul
mov
call
sarb
stos
subl
xor
mov
into
add
int
inc
push
filds
cmp
aam
es
in
add
xchg
addr16
mov
ret
jbe
cmc
sarb
lret
rcrb
push
out
adc
pop
icebp
pop
lcall
pop
xchg
scas
cmp
cli
and
cmp
jno
scas
outsl
sbb
or
pop
das
in
cmpsl
rcl
inc
inc
outsb
or
rcrb
or
or
xorb
mov
inc
pop
inc
aad
int3
aad
stos
push
push
sbb
pop
aas
mov
xor
dec
xor
movsb
pop
jb
adc
or
ljmp
inc
std
cmp
movsb
andb
es
cmp
call
xchg
mov
mov
es
in
jle
and
es
pop
sub
cmp
mov
arpl
xor
ds
jp
mov
dec
sbb
sub
in
arpl
pop
hlt
inc
orb
jb
cmc
add
scas
aaa
sbb
imul
int3
or
ret
cmp
inc
fldt
xchg
shll
mov
in
stos
jbe
mov
outsl
mov
cs
addb
lret
rorl
fcom
mov
pop
std
iret
inc
js
outsl
std
inc
mov
bound
rclb
or
repnz
popf
mov
sub
and
subb
pusha
mov
add
push
sub
mov
inc
shlb
push
test
lods
or
jns
fldlg2
loope
or
test
dec
inc
imul
jmp
sbb
ljmp
inc
enter
jo
bound
cmp
add
and
push
fimull
xor
leave
ljmp
mov
pop
movsb
sahf
stc
aam
mov
lock
push
lcall
jge
mov
cmp
mov
cld
sbb
data16
mov
push
inc
mov
sbb
scas
movsb
cmp
xchg
daa
mov
xor
enter
test
test
jb
in
pop
xor
scas
push
fidivrl
addb
lods
push
mov
sarb
scas
mov
popa
jb
inc
std
jle
xchg
insw
iret
aam
je
sbb
cltd
imul
sbb
idivb
and
aam
jle
cs
mov
sub
mov
fiadds
xchg
mov
ret
xchg
mov
jp
leave
into
and
xchg
dec
and
sub
xchg
mov
cs
pop
xor
push
lahf
jns
fisubrs
in
mov
push
dec
cltd
push
or
sbb
xchg
and
or
mov
stc
add
jl
ds
out
xor
xlat
and
loop
xlat
outsb
fistpll
push
and
iret
jle
mov
out
loop
mov
ljmp
jnp
lcall
pop
jns
ret
stos
dec
pop
movsl
jno
or
roll
sub
add
clc
jp
out
or
les
icebp
inc
xchg
jno
das
loop
js
mov
repz
frstor
enter
popf
mov
insl
lahf
cmp
xor
rcll
repz
dec
mov
and
ret
int3
add
js
mov
addr16
sbb
out
scas
aad
cmpsb
cmc
and
xor
in
pop
add
xchg
andl
and
testb
hlt
xchg
pop
jg
insb
dec
shr
lret
testb
aas
sub
xchg
mov
cwtl
dec
out
repnz
fbld
sbb
gs
arpl
stos
cmp
mov
ret
jb
sahf
pop
lods
fdivrl
out
adc
push
roll
mov
movsb
insl
fsubrs
cmc
orb
lods
lcall
jl
and
cmp
push
xorb
mov
mov
fcomi
jnp
xchg
and
mulb
enter
pushl
mov
cld
sub
add
fs
stos
or
cmp
xchg
iret
add
stos
push
loopne
addr16
jne
dec
xchg
cmpsb
and
ljmp
mov
jecxz
sahf
jl
cmpl
mov
pusha
or
pop
fidivs
adcb
cmp
stos
push
iret
and
pusha
fs
push
push
fdivs
mov
imul
adc
lods
cs
fisubrl
mov
mov
lock
xlat
push
inc
lods
cmpsl
imul
sub
pop
adc
xlat
sbb
and
gs
js
es
push
or
mov
xor
rcrl
sub
mov
mov
imul
push
push
out
loop
mov
inc
jl
stos
jbe
cmp
jge
negb
mov
adc
xor
out
ret
popa
mov
push
mov
pop
jnp
loopne
je
adc
xor
dec
outsb
xchg
xor
loop
es
aam
data16
sti
repz
mov
mov
mov
mov
xlat
cmpl
shrl
aam
sub
jbe
fcompl
add
sti
ret
add
sub
and
fldenv
mov
sub
or
jno
mov
jbe
mov
adc
imul
mov
ret
xor
aaa
sbb
cwtl
jp
dec
test
push
test
lock
adcl
lods
adc
mov
adc
int
cmpsl
push
mov
mov
mov
or
scas
into
sub
ret
push
cli
or
jbe
enter
sub
loopne
adc
cltd
inc
test
outsb
testb
and
mov
cmc
xlat
ret
sub
dec
mov
dec
lock
sub
shrb
push
enter
xchg
and
xor
jl
add
adc
pop
fwait
inc
adc
fisubrs
xor
scas
cli
lods
cmp
push
sahf
jne
bound
or
sub
cli
xor
scas
push
xchg
adc
dec
iret
sub
sub
mov
cmp
cmc
lret
pop
mov
mov
pushw
mov
movsb
and
xchg
jmp
das
ds
inc
insb
mov
cltd
filds
das
sub
aad
das
cmp
mov
dec
fldcw
mov
and
xchg
xchg
adc
je
and
or
push
pop
fs
call
test
dec
shll
push
push
loope
mov
lret
mov
popf
mov
scas
mov
add
out
xor
insb
add
xchg
out
mov
in
movsb
inc
mov
dec
aad
jle
popf
lcall
inc
mov
jne
inc
jno
int3
dec
mov
xor
sbb
add
inc
push
in
ja
pfcmpge
push
cmp
aam
lds
xor
inc
jne
xchg
push
dec
jmp
cmp
push
pop
xor
mov
lcall
cmp
push
jg
xchg
adc
arpl
inc
insb
adc
dec
aam
push
dec
mov
mov
mov
in
repz
adc
cld
mov
sub
cs
lock
xlat
nop
xlat
push
ljmp
pop
and
inc
cmp
icebp
sub
fdiv
mov
leave
xlat
scas
pop
xchg
lcall
adc
rorb
push
mov
lds
ss
inc
push
pop
enter
dec
and
xor
daa
xchg
daa
and
ficoml
in
stos
loopne
inc
adc
hlt
imul
lods
add
icebp
imul
int
add
mov
std
repnz
add
xor
in
idivb
mov
loopne
pop
jmp
enter
add
or
and
les
mov
inc
jg
xor
jle
push
shl
xchg
aam
lock
mov
mov
mov
fidivl
cltd
xchg
into
subl
mov
xchg
add
dec
enter
mov
mov
mov
mov
loope
stos
icebp
add
push
inc
fistl
ret
pop
imul
icebp
xor
ffree
movsb
andb
nop
mov
lahf
mov
fcomps
subl
test
mov
cmpsb
enter
mov
pop
push
out
xchg
arpl
iret
jg
cmpsl
leave
or
lret
push
jae
adc
cmp
adc
and
idivl
ja
inc
or
mov
adc
sahf
mov
daa
sub
mov
ret
jb
clc
or
jg
pop
adc
and
in
sbb
scas
or
mov
or
in
std
mov
mov
mov
dec
cmp
xchg
test
inc
sbbl
rcr
inc
sub
sbb
test
dec
mov
mov
pop
fstpl
pop
dec
popf
lods
dec
dec
int3
push
push
jecxz
mov
dec
inc
add
testl
jmp
in
jle
int
cmpsb
mov
jnp
mov
aad
add
xor
sub
lcall
stos
cs
cmp
ds
jge
ret
scas
call
xor
out
fildl
aam
jne
mov
jmp
push
xchg
sub
or
sub
int
pop
stc
rcl
jo
adc
xor
lcall
fiadds
or
xchg
adc
js
xchg
add
dec
mov
add
daa
cmpsb
not
gs
cmpsb
js
xor
loope
cmpsb
and
xor
addl
mov
xor
jecxz
ss
std
nop
jle
stos
out
cltd
xor
in
out
jnp
out
jle
aaa
movsl
or
ret
pushf
push
cmp
pop
sbb
aas
outsl
clc
add
push
jmp
cmpsl
addl
arpl
jmp
pop
loope
ja
cltd
out
mov
push
fdivrs
mov
mov
jne
xchg
or
fstl
add
cmc
fisttps
sbb
pop
mov
cld
leave
std
inc
xchg
enter
dec
aam
push
iret
lcall
add
imul
fprem1
into
aaa
mov
jnp
nop
mov
std
sub
rorl
stos
rsqrtps
int3
int
sub
adc
rolb
out
roll
ror
inc
jne
adc
repnz
push
dec
int
mov
movsb
or
comiss
lds
mov
out
pop
xor
add
into
test
lahf
and
mov
jp
in
sbb
jle
sti
pop
in
jle
mov
mov
jne
xchg
pop
sub
outsl
mov
in
add
outsl
leave
test
punpcklwd
xor
lahf
mov
fistpll
fidivs
daa
cmp
out
adc
subl
in
xor
push
adc
mov
inc
call
shll
sbb
fimull
mov
jnp
out
movsb
push
push
lock
lods
jmp
mov
xlat
pushf
inc
ljmp
xor
dec
inc
sbb
and
movsl
jecxz
lods
sahf
pop
pop
mov
xlat
pop
sbb
fs
outsb
cmp
pop
stos
dec
sbb
push
ja
jp
xor
fcomps
insb
sbb
fstp
jge
aaa
xchg
out
inc
inc
mov
mov
fwait
push
mov
test
xchg
pop
cmp
sbb
stos
xor
ret
outsb
ss
scas
lcall
js
fildl
mov
aas
popf
stc
ret
ja
push
xchg
leave
ljmp
test
adc
enter
repz
jmp
ret
sahf
pop
pop
pop
jl
neg
es
out
das
mov
fistl
cmp
pop
inc
or
pop
fwait
int3
sbb
pop
xorb
sbb
sub
gs
ret
inc
jmp
sub
aad
xchg
xor
lock
sti
inc
jg
sub
gs
push
pusha
leave
xor
sub
push
push
icebp
nop
cmp
in
pusha
mov
inc
pop
fadds
add
scas
int3
iret
xor
push
push
jecxz
loope
jo
and
pop
or
cmp
push
adc
hlt
adc
pop
push
in
sahf
jl
sbb
jecxz
xchg
mov
sbb
pop
mov
and
push
nop
xor
lea
stos
adc
ret
dec
add
and
sbb
pop
pop
push
test
ret
pop
fcomip
js
cmc
sub
decl
aas
or
jle
cmp
sub
mov
loop
and
cmpsl
pop
ret
jmp
or
rclb
js
lock
pusha
cmp
jl
fists
fs
or
cmpsb
jge
push
out
addr16
push
inc
pop
mov
adc
cli
add
jno
fsubr
shrb
loop
rcr
mov
sub
dec
es
fstpl
mov
jg
loopne
cmc
loop
inc
int3
imul
push
inc
jnp
roll
dec
movsb
or
sub
cmpsb
push
mov
jmp
inc
cmp
repz
inc
arpl
jbe
popa
and
subb
dec
or
pop
pusha
push
test
aam
push
gs
xor
jns
cld
icebp
call
cli
or
add
xchg
inc
mov
xchg
mov
popf
inc
sbb
imul
test
lcall
mov
or
push
xor
xchg
adc
test
in
fs
into
and
mov
mov
mov
andb
lcall
sub
mov
sbb
mov
neg
jo
mov
push
data16
daa
xor
pop
sbb
inc
test
fs
mov
ds
dec
or
dec
into
jnp
lods
or
daa
fs
mov
aad
fadd
xlat
ss
mov
test
das
push
int3
je
xor
repz
sbb
xlat
and
push
mov
rol
adc
cmp
aas
out
jno
outsl
mov
arpl
mov
sbb
das
jge
mov
data16
aam
push
scas
pop
mov
ljmp
repz
insb
loope
pop
mov
xor
ret
mov
mov
testl
lret
adc
scas
aad
fisubrl
xor
adc
rcrb
pop
lahf
add
jnp
daa
mov
test
pusha
lcall
mov
rcrb
jle
push
and
mov
sbb
fildll
mov
loop
shll
je
je
mov
sub
or
rorl
lock
leave
incl
mov
xorl
xchg
jbe
add
cmp
xchg
rcrl
repz
mov
inc
dec
push
and
xor
sub
icebp
fsubl
enter
loope
or
incb
test
push
and
or
pop
push
fidivl
and
fildll
push
psrad
pop
xor
inc
xchg
xchg
add
gs
les
jo
add
jmp
jmp
jge
xor
out
lea
repz
add
lea
rorb
popa
adc
push
cwtl
jnp
or
cmpsl
andl
or
mov
ret
push
ds
sbb
or
push
inc
mov
pop
cmp
aaa
rolb
jb
push
or
insl
and
add
loope
and
jmp
xchg
out
test
aam
shr
or
xchg
push
andb
pshufw
add
ror
mov
je
sbb
inc
loop
mov
jmp
std
stos
adcb
add
push
xchg
mov
in
mov
lahf
jb
or
maxps
pop
xlat
sbb
or
js
div
xchg
fstpl
gs
sub
xchg
aas
iret
mov
pusha
adc
lcall
es
stos
jnp
test
xchg
aad
outsl
xor
movsb
ljmp
insb
push
jb
lds
js
push
push
or
out
sub
xchg
fnstenv
xor
push
cmp
or
sarl
cmp
mov
lods
jbe
sbb
stc
shrl
faddl
aaa
or
test
add
jg
xor
pop
lods
daa
jbe
movsb
add
aaa
xor
mov
mov
dec
fdivrl
in
adc
and
cmpsb
popa
lcall
add
sti
dec
dec
pop
pop
fcmovb
lret
jbe
ljmp
mov
addl
loop
jle
pushf
daa
daa
push
xchg
cmc
cmc
xchg
mov
xchg
pop
sbb
xlat
mov
lahf
stc
nop
cmp
aam
sbbb
loope
and
mov
movsl
and
and
stos
xor
jmp
xchg
cmp
adcl
test
outsl
loopne
xchg
jmp
and
sub
lret
xchg
sbb
push
xchg
jl
loopne
clc
and
insb
xchg
pop
xchg
xor
jae
inc
cli
jmp
call
dec
xor
adc
jno
mov
mov
sub
cmpsb
ja
hlt
push
push
xor
in
mov
ds
lods
jmp
cs
mov
movsb
mov
mov
bnd
xchg
mov
jno
add
cwtl
cltd
mov
pop
xorl
loope
arpl
in
jmp
cmp
push
popf
mov
or
ret
dec
push
les
jns
arpl
mov
sub
in
or
out
xor
or
pop
scas
fidivrl
or
sub
mov
push
int3
das
adc
insl
inc
cmpsb
addr16
lods
cmp
jae
sbb
pop
scas
dec
ret
push
stos
insl
lods
pop
jnp
or
into
test
sbb
xor
mov
mov
dec
es
in
js
mov
imul
movsb
les
test
sbb
sbb
ljmp
mov
data16
dec
ss
outsl
rcrb
hlt
jle
lcall
push
inc
jmp
out
add
cmp
addr16
enter
das
xchg
lods
cmp
insl
sbb
xor
push
jl
fistl
lods
pop
out
jl
in
dec
bound
lret
push
and
test
cltd
add
cltd
movb
lahf
lods
addr16
loope
int
mov
sbb
push
das
add
aad
xchg
fidivs
aaa
mov
fs
test
cwtl
lret
fdivrs
lock
cli
test
jbe
lods
fisubrs
mov
or
jg
fidivrl
inc
pop
lcall
and
sub
dec
dec
cmp
jmp
in
aad
inc
pop
fwait
push
jmp
fdivl
jo
push
or
daa
sti
push
jg
mov
enter
rcrl
sub
xorl
push
push
insb
sub
jb
jge
and
ret
cli
sbb
inc
hlt
lock
stc
in
pop
or
xchg
mov
dec
cmpsb
shlb
icebp
imul
jg
cmp
xor
jecxz
add
sub
test
jns
cmp
cmpsb
adc
rol
xchg
cmpsb
test
sarb
fisubs
imul
push
ds
insb
mov
fnstcw
ja
std
dec
jle
scas
push
hlt
imul
mov
shlb
pop
pushf
mov
imul
add
imul
cs
stos
xchg
sbb
jl
push
loop
repz
adc
xchg
mov
into
and
cs
mov
jb
in
or
jae,pt
mov
dec
mov
jmp
pusha
inc
daa
mov
cwtl
mov
cmc
lret
jb
scas
rcll
mov
cmpsb
jge
arpl
cld
push
test
repz
fdivr
jmp
adc
imul
pop
mov
or
lahf
push
adc
imul
sti
or
test
addr16
sub
or
xchg
gs
addr16
ret
fldcw
mov
lock
jp
jnp
sub
jo
push
jp
pop
sbb
sbb
or
mov
subl
aam
push
je
xor
in
xor
lds
pop
adc
fwait
adc
mov
cmovno
gs
push
adc
sub
dec
fwait
sbb
notb
mov
loopne
dec
jno
aas
push
int
ret
shll
out
lret
rcll
adc
icebp
test
in
ss
sbb
fsubr
mov
lods
test
add
cli
aas
sub
inc
cmp
sbb
fcmovu
mov
xor
movsl
sahf
push
dec
test
add
and
xchg
lret
push
push
inc
sbb
xor
sub
and
ret
shl
adc
inc
pusha
fwait
call
arpl
in
sbbl
cmp
stc
dec
dec
subb
ds
push
sbb
lods
pushf
movsl
xor
mov
or
imul
push
sti
mov
mov
push
sub
ja
push
xor
cmp
mov
fwait
mov
ret
push
mov
jmp
sti
aaa
xchg
jb
in
rcl
mov
and
movsl
mov
adc
ss
lods
data16
in
jbe
pop
xchg
divb
pop
lret
mov
je
mov
call
dec
sahf
mov
xor
sarb
es
push
push
sbbb
fdivrs
loopne
xchg
dec
jne
sub
inc
lcall
movsl
xchg
xchg
ljmp
sub
adc
jne
add
popa
ljmp
loop
loope
inc
fnstsw
inc
bound
out
inc
jns
mov
pop
fs
mov
push
sub
add
jnp
push
push
cmpsb
add
subl
adc
cmp
inc
cwtl
sti
fpatan
imul
pop
jns
inc
mov
jle
popa
cmp
sub
addr16
imul
ret
xchg
mov
add
stc
mov
adc
aam
fdivrs
jae
ljmp
jecxz
pop
sbb
jns
xor
adc
or
jl
dec
xorb
stos
nop
cli
push
push
ljmp
sbb
xchg
jl
push
lods
arpl
push
xor
sub
ret
call
sub
es
push
push
loope
sub
push
push
cmp
and
jmp
jns
and
jo
pop
neg
pop
jo
movsb
cmpsb
or
hlt
cmpsb
lods
call
mov
stc
in
popf
add
push
xchg
jecxz
test
enter
lods
jmp
jecxz
daa
or
push
mov
xchg
shll
add
mov
adc
mov
loop
adc
hlt
mov
add
mov
iret
pop
fdivrs
cmc
adc
dec
mov
mov
les
xchg
das
in
pop
pop
dec
cmp
inc
xchg
push
aaa
mov
push
add
add
jecxz
dec
jmp
into
mov
pop
clc
lea
add
lods
push
test
jne
das
xchg
xchg
pop
cmp
xor
mov
and
mov
or
lods
push
data16
xchg
test
or
fildl
and
or
dec
cmpsl
sahf
rorb
sarl
lret
xchg
movl
inc
lods
ds
mov
inc
sub
cmp
lret
lea
test
jnp
pusha
mov
loop
cltd
stc
fs
mov
add
and
cmpsl
inc
movsb
out
inc
mov
lods
push
adc
mov
mov
dec
lahf
jae
cmp
addr16
aad
and
mov
pop
mov
movl
test
out
push
cwtl
mov
cmpsl
dec
outsb
aas
lods
jmp
dec
jns
jg
int3
ljmp
or
and
test
add
test
rcr
ljmp
push
jae
and
push
lds
adc
mov
jge
das
cwtl
dec
mov
sub
dec
xchg
outsb
pop
jg
clc
pop
inc
lret
lods
mov
sbb
mov
add
sbb
lret
sub
dec
psubusb
stos
pop
repz
dec
enter
movsl
push
mov
mov
into
jno
aad
shlb
cmpsb
pop
lods
ss
inc
mov
mov
out
outsb
mov
arpl
cltd
and
ja
idivb
fwait
dec
xchg
iret
lret
insl
pop
adc
mov
int
cmpsl
xor
mov
psubb
loop
je
data16
mov
outsl
mov
and
push
lcall
sub
xor
dec
rol
movsb
xlat
sbb
lret
fidivrs
mov
mov
cltd
sub
loope
push
mov
mov
push
sar
add
cs
inc
mov
jmp
push
pop
lcall
fs
scas
mov
insl
pop
and
push
adc
xchg
sub
jg
sti
call
frstpm(287
inc
lret
sarl
dec
push
in
adc
rcrb
fadd
inc
out
stos
out
js
xchg
loope
xlat
push
int3
lods
xchg
jp
insl
dec
cs
sahf
orl
jp
mov
sub
sbb
sbb
std
add
loopne
pop
gs
inc
out
adc
jg
push
mov
popa
fwait
push
jb
push
jge
adcb
add
enter
inc
leave
ret
dec
shll
push
add
mov
call
jnp
jmp
pop
ja
xchg
inc
adc
jg
jmp
cmpsb
adc
xchg
and
cwtl
ret
popa
call
jl
call
mov
and
insl
dec
cmp
xlat
or
sub
push
insb
icebp
inc
cmpsl
inc
test
mov
test
push
in
pop
dec
mov
mov
mov
test
jl
mov
add
pop
movsb
add
int3
jb
lcall
push
sahf
popa
add
sahf
notb
jns
test
loop
arpl
or
data16
stc
lret
mov
ljmp
cmp
stos
cwtl
movsl
loop
dec
in
js
test
xchg
mov
outsb
ljmp
rorb
xchg
sub
add
ja
fdivs
xor
xlat
jl
mov
adc
stos
lahf
cmc
inc
ljmp
enter
push
push
lea
fsubl
or
popa
xchg
pop
sbb
pop
fisubrl
xchg
rcrl
or
into
mov
push
adc
hlt
aaa
and
inc
aas
jmp
push
loopne
movsl
test
xor
push
cmp
into
mov
frstor
mov
and
and
cld
fmuls
and
icebp
sub
lods
mov
shrb
pop
jo
stos
shlb
mov
jne
jne
mov
pushf
pop
jb
sbb
jns
ret
pop
mov
jns
dec
add
test
dec
pop
mov
jbe
imul
sub
imul
inc
aam
sbb
jbe
and
mov
or
cmp
mov
insl
mov
sub
loop
mov
fisubs
out
lcall
pop
rcll
icebp
mov
adc
fs
sti
std
sarb
rorl
cltd
inc
repnz
or
pop
sbb
stos
dec
mov
mov
lret
and
push
jl
imul
mov
aaa
lcall
out
movsl
mov
pop
loopne
sbb
jl
and
into
mov
fcomp
outsl
mov
loope
std
pushf
test
ss
cld
dec
cli
jp
or
aas
jecxz
jmp
jle
xor
mov
dec
mov
ds
sub
mov
cmpsb
jns
repz
fdiv
lods
fmulp
clc
nop
mov
xchg
push
adcb
sbb
adcl
iret
xlat
stc
insl
xchg
loop
jmp
push
enter
loop
ret
or
pop
jge
std
sbb
or
out
pushf
inc
xlat
cltd
push
subl
pushf
fs
inc
jbe
cltd
shlb
xor
xor
adc
push
jp
cmpsl
inc
mov
xchg
xor
jecxz
pusha
in
lods
and
xchg
xchg
mov
push
dec
jmp
jge
xchg
jnp
fs
dec
popf
pop
wbinvd
fdivs
data16
out
xchg
mov
or
push
mov
out
mov
push
pop
xlat
fisttpll
outsl
jmp
mov
lods
enter
mov
push
xchg
stc
push
dec
lods
fisttps
outsl
add
ljmp
lahf
mov
sti
inc
xor
loop
in
cwtl
fucomi
inc
xor
mov
mov
or
test
ds
rorl
ds
bound
pop
xchg
or
or
test
mov
sub
call
dec
test
dec
mov
push
add
push
pop
add
gs
shll
sub
cmp
add
jns
mov
pushf
ret
nop
sbb
nop
mull
push
mov
add
daa
xlat
dec
add
movsb
add
rolb
gs
mov
fcom
sub
inc
popf
adc
push
mov
jo
add
gs
rolb
daa
jmp
std
pusha
stc
and
subb
das
fwait
pushf
rcrb
das
loope
es
sbb
test
adc
push
or
fidivrs
sti
lcall
xor
out
adc
in
orb
xchg
sub
out
into
sub
mov
push
mov
xchg
hlt
popf
xlat
movsb
das
jmp
push
xchg
and
leave
mov
cld
jo
out
insl
daa
sbb
dec
inc
jne
mov
push
cmp
sub
jg
movsb
std
jecxz
les
cmpsb
iret
mov
mov
repnz
test
lods
and
sub
popf
push
sbb
out
sub
cmp
subl
in
std
add
scas
dec
mov
dec
movsb
test
pop
mov
add
stc
pop
fwait
lods
inc
pop
pop
fildll
dec
aaa
or
cmp
xlat
cli
xchg
out
mov
jecxz
cmpsl
jb
add
aad
pop
xor
bsr
or
cmc
shlb
clc
mov
insb
sub
aaa
lret
pushf
pop
sahf
xchg
jne
lret
xchg
lcall
xor
pop
inc
jmp
pop
lret
sbb
sti
xor
add
fucomi
mov
jbe
push
call
jae
aad
and
lret
xchg
xor
push
addr16
cmpsl
push
push
mov
inc
repnz
sub
push
xchg
loop
sarb
in
jb
mov
js
scas
sbb
pop
loopne
jbe
mov
bound
subl
dec
scas
addr16
scas
mov
fstpl
aad
cmc
in
aaa
pop
ficoms
pushf
mov
sahf
adc
mov
outsb
das
fwait
jae
ja
lods
imul
adc
fcmovnbe
shrl
cmpl
cs
into
dec
cld
jge
cli
pop
pop
inc
jl
pop
jge
and
cli
xchg
sub
sarb
xchg
jp
insl
ss
repnz
or
add
inc
scas
mov
jo
jo
mov
outsl
shlb
clc
arpl
punpckhdq
jnp
rcrl
jno
stos
dec
cmp
jnp
sub
mov
and
push
lods
jmp
push
int3
out
or
lret
or
push
mov
icebp
sub
negb
aaa
xchg
aas
insb
xor
cltd
mov
dec
outsl
ja
cmp
nop
lea
mov
mov
test
adc
xchg
sub
out
xlat
cli
lock
in
mov
loopne
fnsave
push
jbe
fstl
test
outsl
adc
jnp
pop
lret
xor
fcoms
loope
lock
xchg
push
sbbb
jo
sub
mov
outsb
jbe
mov
cmc
cmp
repnz
rcr
sub
cmp
mov
sbb
xchg
clc
int
push
and
nop
stos
or
push
dec
mov
enter
mov
ja
mov
push
pop
jmp
add
dec
daa
test
add
js
test
sbb
das
ficoms
rorb
mov
add
pushf
pop
push
xchg
lret
lahf
sbb
add
cmp
add
cltd
lcall
jnp
test
cmp
jno
adc
mov
sbb
daa
mov
fwait
aaa
xchg
jmp
fimuls
mov
jp
xchg
in
lds
test
push
stos
mov
adc
fists
and
sbbb
in
daa
cli
out
jle
addr16
mov
jge
scas
sahf
add
aam
shl
push
insb
jmp
dec
jb
into
aaa
jne
fnstcw
adc
or
scas
iret
cmp
mov
inc
xchg
push
arpl
rcr
popf
mov
mov
mov
jmp
or
sahf
out
cmp
out
push
mov
lcall
dec
es
jns
inc
repz
cs
jecxz
xchg
jbe,pt
js
mov
mov
cwtl
ror
mov
addr16
cs
hlt
pop
shrb
imul
xchg
sbb
and
and
dec
xor
and
pop
and
bnd
inc
int
jge
push
testl
pop
scas
popf
xor
jle
jnp
out
outsb
test
test
mov
push
mov
xchg
sub
adc
xchg
and
stos
jmp
jl
andl
sahf
mov
bound
sub
sub
ret
mov
lahf
xor
and
lock
testl
repnz
stos
and
stos
mov
sub
insb
jns
int3
imul
jns
xor
testl
cwtl
xchg
scas
and
nop
xchg
mov
into
push
jecxz
xchg
sub
or
pop
ljmp
fmul
inc
and
shr
outsl
dec
adc
xchg
cmp
hlt
outsl
xchg
sub
stos
xchg
popf
test
pop
daa
leave
mov
outsl
shrb
pop
push
outsl
andb
cli
clc
mov
mov
cs
pop
das
mov
mov
stos
rolb
mov
fchs
hlt
mov
inc
push
push
ret
xor
decl
pop
push
out
push
and
hlt
cli
and
jl
jnp
mov
or
in
dec
xchg
sarb
in
and
outsl
in
sbb
lea
jg
outsb
or
daa
xor
and
insl
fwait
int3
cmpsb
in
xlat
pop
jbe
jecxz
aas
fs
xor
in
sbb
sti
cld
adc
xchg
fisubrs
cltd
dec
loop
add
sbb
xchg
cmp
cmp
mov
sub
xchg
stc
loopne
gs
mov
in
xchg
inc
scas
mov
add
mov
in
xchg
mov
adc
xor
jnp
xor
in
test
in
ja
je
sbb
mov
test
xchg
lcall
lods
xchg
or
fcompl
fdivrl
sub
sbb
popf
xor
xor
add
cmpl
ret
enter
xor
cmpsb
rcll
xor
jno
cmp
and
lea
cmp
das
sub
movb
mov
lret
jbe
pop
js
scas
ja
and
jnp
jno
cld
mov
outsb
int
mov
jo
ljmp
mov
pop
faddl
dec
imul
sahf
insb
cltd
mov
adc
cld
mov
rol
aad
sbb
sub
cmp
insl
aas
jmp
aad
pop
dec
jle
gs
lahf
mov
clc
jnp
sti
push
repnz
cmpsl
rorl
xchg
testb
inc
push
outsl
push
adc
movsl
push
loopne
les
xor
aam
mov
jnp
test
in
or
mov
pop
rorb
inc
fldt
add
test
test
fdivl
jno
lock
test
call
fisttps
pop
stos
jno
dec
mov
imul
xchg
push
ret
cmp
or
insb
les
popa
les
push
mov
sbb
sbb
push
imul
pop
or
inc
cmp
shr
mov
dec
cs
ret
mov
subl
aaa
out
sbb
clc
cs
dec
sti
pop
shll
lods
cmp
into
mov
popf
mov
add
jns
rolb
loope
xor
les
mov
mov
fdivs
lock
sub
mov
pop
stc
or
xor
lcall
push
pop
jl
ja
repz
sbb
scas
inc
sub
cmp
fdivrl
mov
pop
enter
cli
ds
lods
add
mov
and
xor
test
mov
lock
inc
cwtl
insb
test
inc
push
or
mov
fnsave
add
scas
sub
xchg
lahf
lds
fildll
jmp
push
add
aam
sbb
and
or
xchg
scas
pusha
xchg
les
jg
je
jle
aaa
or
lret
int
cmpsl
arpl
pop
sub
aam
xor
fmull
adc
rcll
sbb
orl
fcoms
imull
pop
cld
bound
fs
gs
mov
mov
xlat
xchg
push
cwtl
fdivrs
mov
mov
or
rolb
dec
aam
cmp
pop
mov
jne
mov
imul
push
or
les
aas
cmpsb
mov
hlt
jno
xchg
mov
push
mov
adc
xchg
sbb
stc
mov
jbe
loop
mov
pop
xchg
inc
push
out
and
pusha
cltd
cli
rcr
cmpsl
add
and
repnz
sbb
xor
push
push
or
lock
mov
out
mov
push
inc
adc
push
nop
popf
sbb
xor
imul
pop
fsubl
insb
lock
std
adc
push
jae
cld
dec
mov
mov
cmp
fwait
das
js
fdivr
out
and
out
loopne
cltd
jg
lods
sbb
dec
lahf
fnstenv
mov
movsb
in
or
inc
pop
andb
cmc
aam
arpl
sub
cwtl
or
nop
sub
push
mov
cmpsb
or
xor
inc
fdivs
jl
nop
in
test
pushf
jno
dec
int3
mov
push
out
pop
popf
mov
dec
jg
xchg
jne
fimull
cld
les
cmp
out
push
push
pop
adc
pushw
hlt
cmpsb
jmp
daa
jo
add
in
push
xchg
int
mov
add
mov
dec
mov
mov
icebp
outsl
pop
xchg
jo
sub
cmpsl
int3
pop
hlt
lea
fcomi
xlat
inc
pop
dec
pop
pusha
jno
fnstcw
xlat
bound
fdivs
push
and
lods
mov
addr16
subl
mov
repnz
stc
or
cmp
lahf
js
int
xchg
inc
cli
sbb
idivl
popl
daa
cmp
ror
cltd
sbbl
sbb
cmp
out
out
icebp
lret
aaa
push
sbb
mov
dec
xchg
xlat
mov
cs
add
je
adc
pop
jno
mov
dec
ds
xchg
jae
xchg
in
pop
xor
pop
test
bound
dec
push
sarb
inc
inc
outsl
jns
mov
xchg
pop
sbb
daa
xchg
insb
movsb
fcmovnb
enter
shl
push
adc
insb
out
jp
jp
inc
cmpsl
push
jnp
in
out
pop
push
les
dec
imul
cmpb
lret
xor
mov
lock
popf
gs
add
pop
pop
fldcw
out
dec
mov
cwtl
lcall
pop
mov
repnz
clc
aam
mov
jno
adc
movsb
test
dec
or
pop
xchg
push
add
push
pop
ret
jle
and
xchg
fsub
pop
js
xchg
push
sbb
in
push
xor
dec
sar
pop
xor
and
xor
scas
dec
xchg
push
je
and
dec
mov
sub
xchg
mov
shr
adc
gs
pusha
ficoms
xchg
in
in
pop
or
es
jbe
xchg
out
pushf
sub
arpl
int
rcl
mov
imulb
xor
insb
pusha
sbb
les
icebp
xchg
mov
fcmove
leave
push
mov
pushf
jl
stos
push
cs
mov
inc
mov
cltd
daa
add
or
je
xchg
rcll
xchg
icebp
and
push
cli
dec
push
adcb
inc
shlb
inc
nop
pop
call
sub
cmp
mov
arpl
push
sub
imul
push
lahf
push
cs
cmp
mov
jecxz
popf
das
aaa
rcr
adc
xchg
in
lcall
dec
mov
mov
rcl
ja
pop
or
mov
lods
and
cltd
fcomps
push
rcl
loope
or
push
inc
outsb
xorl
pop
or
lahf
add
shll
fistps
jbe
cmp
lea
outsl
mov
sub
scas
lds
adc
cmp
ret
outsb
adc
mov
sub
mov
lea
popf
sahf
in
mov
jmp
stos
push
clc
fmull
rep
cli
jp
les
xor
testb
jns
frstor
push
pop
xor
lret
push
inc
lret
pusha
and
imul
int
int3
inc
and
adc
mov
fmul
xlat
dec
xchg
in
add
into
aas
int
jae
sub
dec
stc
pushf
loop
es
aad
dec
cltd
pop
jle
mov
xor
and
xchg
dec
dec
jle
pop
loopne
xchg
dec
or
inc
stos
fs
mov
jae
push
insb
jne
and
or
fwait
divb
movsl
inc
jl
add
sbb
sti
insl
addr16
or
flds
aad
or
mov
push
test
inc
mov
or
xor
push
fs
in
and
shll
pop
sub
shl
sub
ret
mov
fstp
stos
pop
xchg
pop
xor
mov
cmpsl
into
add
out
mov
es
xor
xchg
stos
sbb
aaa
xchg
xor
mov
mov
pop
neg
in
mov
scas
sbb
xlat
mov
push
add
push
mov
mov
dec
mov
push
iret
add
cwtl
pop
cmp
xlat
push
out
int
pop
leave
and
sub
push
loope
adc
xchg
fcmovnbe
xor
inc
lahf
pop
int
cmp
mov
addr16
sbb
daa
imul
lret
sbbb
push
in
rcrl
cwtl
repnz
sti
mov
mov
rorb
shrl
sbb
aaa
inc
xchg
and
movsl
lret
mov
movl
std
call
pushl
out
jg
cli
add
lods
pop
ret
repnz
lds
adc
inc
jnp
in
add
push
scas
cs
mov
insl
ljmp
scas
imulb
loop
xchg
aad
aad
mov
test
jl
popa
add
cmp
add
lahf
ja
int
mov
jno
fcoml
mov
or
jl
ss
scas
push
xchg
pusha
ret
mov
movl
std
pop
stos
mov
data16
ss
jg
jno
sub
scas
in
mov
iret
jl
lret
dec
lret
roll
rcrl
rclb
jg
ds
jp
add
mov
repz
or
sub
xchg
inc
jno
fistpll
fidivs
dec
insl
inc
sahf
inc
mov
cmp
xchg
dec
cmp
jnp
fsubrs
pop
shlb
mov
mov
stc
mov
mov
bound
xor
addl
jmp
dec
movsl
daa
push
cmp
out
cwtl
aaa
fcoms
push
cmpsl
xchg
mov
sti
sub
aaa
mov
or
jnp
clc
stos
mov
xchg
shl
dec
jp
addl
dec
test
xor
push
jmp
fistpll
mov
push
jmp
fisttpll
jecxz
mov
mov
sbb
sub
sub
das
sbb
inc
mov
xor
out
loop
scas
insb
dec
adc
xchg
dec
gs
sbb
mov
add
xchg
mov
fsubs
dec
and
pusha
pushf
dec
adcb
bswap
lcall
outsb
out
imul
cmpsl
xchg
xchg
enter
sti
leave
or
in
popa
lods
imul
pop
mov
call
mov
cmpsl
clc
leave
popa
in
xchg
scas
jns
sti
sbb
push
xlat
out
xchg
add
inc
jb
scas
test
pop
es
add
cmc
mov
addr16
mov
mov
and
inc
inc
aaa
or
push
adc
fldln2
mov
cmp
ljmp
pop
and
sbb
ljmp
cmp
outsl
fistps
in
xor
gs
adc
ds
xchg
xor
cmp
sub
add
sub
out
test
xchg
aas
add
fsubl
stos
jmp
mov
stos
xchg
lods
stos
mov
cmp
ljmp
sbb
or
xchg
divl
roll
mov
test
in
cmp
scas
mov
and
cmp
js
and
stc
jge
pushf
jmp
js
test
add
jns
or
pop
shll
leave
js
mov
negb
xorb
fadds
dec
adc
jnp
push
mov
push
pop
gs
cs
addr16
dec
setne
jmp
mov
insb
adc
jle
or
cmp
pop
pop
push
rcl
lods
aaa
sbb
and
sahf
and
or
call
mov
dec
dec
int
xchg
movsb
xchg
xchg
test
mov
ror
cmp
imul
push
jle
cwtl
inc
mov
mov
mov
gs
call
mov
jge
mov
and
push
sbb
daa
rolb
sbb
dec
xor
pop
insl
dec
add
adc
inc
and
adc
push
push
pop
clc
mov
aad
pushf
jp
bound
pop
bound
mov
mov
xlat
shll
movsb
loop
mov
lock
mov
sub
inc
int3
fidivrl
jecxz
icebp
insb
in
stos
push
push
scas
in
scas
nop
pusha
enter
sbb
pushf
mov
mov
rclb
push
add
ret
add
dec
sub
xor
inc
sub
repz
add
lret
xchg
sarb
sub
fwait
stos
jne
push
sahf
cmc
loopne
xchg
cltd
aas
icebp
fiadds
jl
add
mov
jnp
pop
xchg
xor
mov
mov
mov
daa
dec
sub
xchg
and
dec
cmp
push
or
lret
cld
jl
xchg
adc
mov
lret
shlb
cmp
mov
test
scas
mov
mov
jno
jp
cmp
xchg
sub
ret
mov
int3
pop
or
cmp
cmp
mov
mov
pop
test
sub
jmp
out
add
pusha
xchg
movsl
sub
addr16
js
dec
mov
jne
mov
das
cmp
loope
and
sbb
stos
add
mov
and
mov
sub
imul
aad
inc
mov
or
inc
shll
scas
or
pop
push
push
xor
jns
add
mov
mov
xor
arpl
popa
std
mov
dec
pop
lods
repz
pop
data16
xchg
fldt
push
cmp
cmpsl
mov
push
addr16
dec
sub
xor
mov
sbb
pop
data16
add
mov
or
push
clc
lret
pop
cld
shl
add
lahf
test
cmp
leave
sub
cmpsl
push
insb
popa
repnz
std
scas
and
pop
mov
out
pop
cmp
cmp
daa
ret
push
pop
cmpsl
dec
xor
add
mov
fnsave
mov
xor
add
sub
and
cs
popf
ja
dec
push
mov
cli
loop
or
out
push
lcall
dec
and
roll
jecxz
and
cmp
iret
stc
sbb
leave
jl
in
jecxz
popl
ja
pop
test
out
jo
lahf
sub
cmp
jbe
xchg
iret
inc
sbb
aad
loop
data16
mov
pop
roll
stos
jno
or
jp
mov
call
rol
jp
outsb
sarb
mov
sub
xchg
sbb
cmp
pop
mov
lea
test
push
cmpsl
in
lock
scas
js
rorb
xchg
imul
jecxz
mov
hlt
ffreep
pop
arpl
scas
mulb
popf
push
jg
inc
jo
dec
push
ss
clc
inc
add
icebp
cmp
mov
xchg
add
inc
mov
ret
push
cmpsb
ds
jp
sub
inc
clc
shlb
repnz
add
call
mov
shll
push
push
insb
mov
dec
sti
jns
enter
mov
popf
push
fldl2e
mov
inc
rep
sub
insl
mov
pop
shll
pop
sbbb
hlt
imul
outsl
test
out
xor
sbb
or
cmpsl
mov
hlt
jae
mov
dec
mov
pop
mov
lds
lret
loope
aas
cs
repnz
dec
out
xchg
and
push
in
xor
jmp
cmpsb
push
mov
push
out
into
inc
mov
nop
enter
mov
sti
aas
pop
dec
xor
inc
fwait
loopne
cld
push
push
xor
movsl
push
enter
push
adc
cmp
imul
inc
sti
test
add
xchg
cmp
mov
stos
inc
aas
mov
jbe
into
ficoml
cmp
push
ds
notb
mov
sub
xor
cmp
clc
sub
sub
inc
sahf
enter
jnp
ds
jb
cmp
mov
leave
rolb
jnp
iret
jecxz
in
sub
rol
aad
xchg
sbb
stos
ret
jo
je
icebp
or
adc
testl
add
sti
clc
and
loopne
jecxz
xor
mov
or
sbb
loopne
cmp
jl
in
dec
push
repnz
adc
xor
inc
mov
pushf
sbb
fwait
lret
outsb
ljmp
push
push
sbb
xor
icebp
pusha
popl
repnz
popa
dec
add
out
and
mov
jg
mov
and
enter
fmull
movsb
je
rorl
fcomp
cltd
sbb
jns
push
scas
xor
cmp
in
push
xchg
push
push
in
rol
fldt
add
push
lret
mov
sahf
mov
add
pop
jg
in
cmpsl
inc
shl
jmp
hlt
stos
and
add
pop
jp
jge
dec
fcomip
lods
sbb
adc
lods
fldt
mov
stos
in
xor
jno
xchg
fwait
pop
adc
shrl
pop
mov
jmp
sti
jb
shlb
clc
sub
rcll
into
mov
out
mov
test
mov
dec
mov
lods
lcall
das
in
dec
ret
movsb
push
jmp
mov
inc
mov
xchg
and
adc
inc
push
jnp
add
or
mov
les
imul
sbb
sub
ljmp
add
loop
adc
mov
cltd
xor
jge
lods
scas
mov
sbb
test
cld
xchg
mov
outsl
xchg
sub
iret
jne
jns
adc
xchg
push
add
jne
xor
in
sub
dec
lahf
call
and
cmpl
movsl
lret
jp
test
xorb
mov
clc
and
in
xchg
fidivrs
inc
or
pop
aas
add
mov
push
data16
sbb
jbe
sub
jge
mov
fcmovnu
int3
mov
scas
cltd
inc
pusha
or
jb
cmp
and
pop
or
mov
inc
xchg
sub
and
push
mov
xchg
imul
shrl
rcr
jl
mov
dec
cltd
and
js
cli
cmpsb
cld
fnclex
xlat
test
fistpl
int
and
or
cld
loop
data16
push
lods
in
jno
mov
popa
ffreep
leave
mov
out
inc
into
mov
inc
add
cmc
mov
shrb
adc
xor
fisttpll
jns
mov
insl
subl
dec
xchg
stc
loop
les
xchg
add
into
mov
fsubrl
add
inc
mov
pop
push
sarb
sub
rclb
mov
sbb
cld
and
enter
in
loopne
xor
sub
xchg
lret
divb
out
jbe
rclb
pusha
mov
lret
enter
out
ret
sub
mov
loopne
scas
and
mov
mov
sarl
gs
jnp
push
outsl
mov
or
ss
stos
mov
in
out
dec
or
enter
mov
pushf
lret
popf
add
clc
sub
mov
cmp
mov
icebp
sbb
jecxz
cli
subl
push
iret
nop
adc
vmovaps
or
sbb
xor
or
nop
nop
dec
push
ds
fcomps
adc
inc
lods
pop
clc
js
ret
cltd
lcall
sbb
stos
stc
sub
lods
es
aam
pop
cs
rorb
xor
fisubl
sub
push
mov
jne
jmp
in
mov
xchg
mov
and
pop
push
rcrl
push
xor
pop
orl
mov
mov
sub
ljmp
test
mov
ret
sti
add
sub
adc
push
mov
je
lods
jno
arpl
jle
xor
and
fadds
js
cmp
stos
lcall
sub
inc
mov
es
cmpsb
mov
mov
sub
sbb
insb
in
jno
je
in
jg
pop
pop
ret
jp
out
out
stos
mov
cli
in
ljmp
sub
mov
adc
rclb
movsl
pop
mov
std
add
sub
iret
stc
push
test
add
pop
loopne
pop
push
js
shll
sti
mov
aas
and
lret
sub
adc
jb
cli
cmp
cmp
je
jno
iret
sub
je
fistpll
push
xchg
cmpsb
sub
leave
filds
in
insb
and
inc
mov
mov
jne
adc
cli
or
orb
mov
insb
mov
pop
ret
xor
cmp
fisubl
or
clc
xor
outsb
adc
or
cltd
sti
icebp
push
push
cwtl
and
inc
lock
jno
jnp
icebp
fucom
add
mov
mov
or
loop
lret
fwait
jle
idivb
xchg
outsb
fwait
in
pop
jmp
mov
mov
jecxz
rclb
stos
inc
push
mov
aam
pop
aam
jge
mov
xlat
jmp
jno
fwait
mov
mov
cmp
jg
pop
in
xor
out
adc
out
xor
jmp
stc
dec
or
scas
mov
ffreep
imul
dec
fwait
push
jmp
mov
cs
out
pop
popa
test
cmp
sub
sub
mov
inc
es
inc
cwtl
sub
push
inc
out
inc
push
push
cmpsb
or
outsb
lahf
sbb
push
add
xor
pop
mov
pusha
push
sbbl
jae
lds
aaa
fs
ret
mov
add
insb
sub
adc
inc
xor
stos
into
inc
inc
and
sub
xchg
jp
lods
test
inc
subl
call
and
add
mov
sub
out
js
imul
sub
pop
push
push
sti
sahf
test
insb
fcoml
pusha
push
dec
icebp
add
in
push
push
sbbb
test
shlb
idivl
add
lret
mov
push
pushf
cwtl
fucom
push
and
jmp
call
repnz
int
movsb
popf
int3
jo
imul
push
je
pop
push
xchg
jl
mov
dec
adc
sub
mov
movsl
out
cs
psubq
jae
bound
cmp
push
or
cmpsl
clc
jmp
shrd
mov
roll
adc
shlb
mov
jns
in
and
pop
lods
decb
fcmovb
les
jg
pop
push
leave
lret
sti
and
add
mov
push
adc
inc
xchg
enter
sbb
and
ret
push
das
cli
shlb
adc
add
and
mov
mov
pop
scas
inc
andl
jp
sbb
fstpl
sbb
add
dec
sub
cltd
xor
ja
pusha
aaa
jmp
mov
sub
mov
mov
add
data16
pop
mov
jmp
std
push
push
out
inc
rcll
addr16
les
rol
repz
add
pushf
hlt
cltd
cli
dec
sbb
pop
xor
cli
into
sbb
sti
xor
xchg
std
jne
arpl
jmp
in
and
sbb
mov
cld
rorl
iret
mov
mov
jp
sub
pop
test
clc
dec
xchg
rclb
cwtl
cwtl
cs
xlat
scas
inc
test
pop
and
call
fwait
mov
jbe
jmp
inc
ret
mov
out
jmp
insb
fsubrs
aam
imul
sahf
cmpsb
fisubs
cmp
lcall
mov
xor
es
xor
dec
ret
pop
or
movsb
in
gs
push
cmpsl
inc
xchg
pushf
incl
stos
dec
xchg
pop
aam
xchg
pop
in
cmpsb
mov
mov
das
dec
fisttpl
or
in
push
xchg
xchg
push
or
add
xorb
stos
sbb
fadds
xchg
jmp
mov
stos
push
push
xchg
xor
or
dec
dec
stos
xchg
xor
mov
icebp
repz
stc
cmc
cwtl
daa
add
lea
jmp
mov
pop
das
ret
insl
jnp
jb
fwait
loope
cwtl
jmp
loop
jge
or
jge
dec
pop
hlt
xor
les
jb
stos
push
shlb
into
or
jle
pop
xchg
adc
add
insl
xor
and
imul
and
xchg
sub
or
dec
loopne
cmp
adc
push
pop
sub
sbb
pop
xchg
into
xchg
stos
sbb
sti
cltd
je
jne
aas
outsb
add
stos
mov
das
and
mov
xor
cwtl
int
ss
lds
and
xchg
ljmp
xor
sbb
std
es
cmp
imul
inc
fwait
push
adcb
or
iret
sub
mov
mov
in
insl
pushf
mov
ret
inc
xor
dec
repnz
loop
jns
xlat
out
cwtl
xchg
and
fbstp
popa
inc
sbb
pop
pop
xor
push
cmpl
xorb
fistps
lds
cltd
jp
adc
or
lcall
pop
pmulhuw
cmpsl
dec
xchg
loopne
push
fldenv
mov
aam
or
int
xor
nop
inc
sbb
cmp
test
push
fisttpl
xchg
push
mov
dec
add
repnz
mov
add
push
mov
aad
inc
fiaddl
jbe
iret
pop
or
lret
adc
movsl
nop
sahf
pushf
add
std
mov
adc
adcl
xchg
xchg
cmp
sarb
cmp
mov
enter
ret
and
fcomps
lea
scas
movsl
popl
rolb
or
inc
push
lods
add
dec
inc
add
push
lcall
add
sbb
aas
jns
arpl
sub
dec
adc
push
sub
outsb
mov
mov
sbb
out
mov
fnsave
shlb
xchg
lea
dec
mov
mov
fisubs
cmp
ja
mov
pop
xlat
lods
icebp
jl
jmp
sbb
lea
sbb
into
mov
lret
xor
nop
cmpsl
mov
inc
loope
xor
jbe
js
cmp
mov
test
hlt
mov
cmpsl
fs
pop
lods
daa
xor
dec
or
fwait
ja
cmp
xchg
setae
push
add
mov
jl
xor
jbe
jne
ljmp
jae
adc
jo
leave
in
xchg
lock
xchg
outsb
jmp
jmp
mov
cwtl
loopne
xchg
outsl
mov
data16
push
imul
lret
and
and
clc
fwait
dec
xchg
cli
lret
scas
jecxz
cmp
xchg
test
dec
arpl
pop
inc
mov
test
imul
push
pop
ja
pop
mov
cmp
cld
push
adc
in
jg
andb
aas
xor
lahf
packssdw
and
repz
pop
lock
xorb
add
xlat
fisubrl
int3
fmull
or
ljmp
inc
push
push
enter
adc
clc
cwtl
push
jo
push
pushf
bound
and
mov
aaa
daa
dec
dec
adc
add
mov
xor
outsb
inc
jbe
and
shrl
popf
repz
aaa
iret
add
popa
sub
das
mov
push
inc
in
mov
mov
or
int
or
movsl
enter
rcrl
rclb
jb
cli
xor
mov
push
cmpsl
lahf
mov
inc
test
sbb
inc
loope
arpl
pop
clc
cmc
pop
mov
and
xor
dec
mov
xchg
fldenv
mov
jne
insb
and
add
mov
daa
mov
lea
testb
pop
pop
rorl
dec
add
mov
lahf
cltd
inc
arpl
pop
arpl
enter
push
imul
pop
ds
mov
push
outsl
push
sarb
je
pop
sub
xor
jge
leave
add
out
rcrb
adc
xor
and
jl
into
ss
gs
xor
fstpl
jb
stc
adc
mov
push
and
pop
hlt
dec
inc
pop
pusha
or
sbb
insb
icebp
pop
out
divb
arpl
lret
cwtl
mov
xor
jnp
int
mov
jo
xchg
shrb
cld
jge
pop
aas
jge
movsb
ja
or
sub
aaa
jb
cmp
ret
mov
enter
and
push
ret
cmp
lcall
pusha
int3
jne
lret
mov
xlat
xor
fwait
jg
lods
icebp
fsubrs
mov
orb
lcall
add
mov
sub
xor
lea
push
cmpl
fadd
outsl
subl
call
or
sbb
adc
adc
lret
jns
out
sub
imul
pop
jl
xor
jmp
mov
xchg
push
pop
popf
or
ret
push
pop
cmpsb
out
lods
cmpsl
sub
push
pop
popf
je
lret
pop
test
cmp
mov
gs
mov
sarl
jge
rorb
jb
pop
adc
push
or
cmp
inc
pop
repz
out
jle
mov
mov
adc
cs
pop
cmp
nop
or
pusha
mov
adc
and
cmp
call
fimull
xor
pop
ret
fs
stc
sahf
mov
js
sub
sub
lret
push
fwait
in
mov
lret
pop
jo
sahf
sub
pop
mov
pushf
sub
out
test
movsl
les
imull
and
pop
lea
roll
mov
xchg
std
out
or
orb
dec
shll
outsb
jno
das
in
push
cmp
lret
mov
test
stos
sbb
ret
mov
jmp
les
outsb
es
in
sub
push
out
test
in
adc
mov
jb
cmp
int
inc
push
mov
xchg
fwait
mov
and
in
arpl
push
inc
ja
sbb
push
stc
fisubl
adc
pop
and
xchg
push
mov
rclb
stc
adc
fidivrs
and
fimull
cmp
repnz
dec
or
mov
imul
pusha
xchg
out
out
jecxz
push
mov
call
jae
dec
mov
push
fadds
mov
aad
aas
cmp
or
js
repz
mov
xchg
inc
loope
mov
mov
icebp
iret
jge
rcll
in
sbb
dec
pop
mov
push
jecxz
xlat
dec
push
sahf
into
insb
movsl
pop
into
mov
incb
scas
int3
bound
jbe
mov
cwtl
or
shl
cmp
dec
call
mov
test
aam
add
mov
pop
movsl
xlat
lcall
enter
pop
outsl
fisubrs
rcll
inc
and
and
push
jg
lds
scas
cli
sub
sub
mov
in
enter
in
rol
paddsw
ljmp
and
mov
pop
xchg
fcmovbe
inc
fisubs
test
push
roll
xor
call
stos
outsb
loopne
dec
pushf
xor
and
cmpsb
mov
cmp
mov
js
mov
fldt
push
xchg
inc
scas
fs
lods
lds
inc
add
mov
sbb
cmp
call
pop
loop
jb
int3
push
dec
inc
shrb
pop
adc
mov
das
insb
fs
cmc
hlt
dec
pop
pop
xor
and
pop
loop
cwtl
rcll
pop
adc
and
aad
sbb
xor
xchg
out
dec
test
dec
cli
addr16
and
jecxz
mov
lock
insl
jmp
dec
lret
adc
or
jns
pop
lahf
push
call
jle
cmp
in
adc
jns
sbb
inc
jg
and
lock
cmp
aas
gs
sub
cmp
jmp
lret
imul
lods
cld
adc
and
subb
inc
insb
pop
dec
push
xchg
shrl
fmul
shrl
addr16
stc
push
xchg
lcall
loopne
pop
roll
incl
imul
cwtl
ret
jp
cs
rclb
cmp
ret
das
gs
lret
adc
out
in
ja
cmc
and
push
fldl
push
movsl
je
repz
sub
sub
fcmovu
repnz
xor
jno
adc
pop
push
jge
ret
hlt
pop
xor
jo
mov
push
fs
icebp
in
push
out
jecxz
lock
cmpsl
xor
and
std
cltd
xchg
bound
fldcw
xor
fldt
mov
sub
shl
mov
scas
xor
add
mov
outsl
sub
bound
in
movsl
pop
in
mov
shrb
loop,pt
mov
stos
inc
add
fistpll
cld
mov
pusha
pop
add
insl
iret
push
cmpsb
cmpsl
inc
jns
das
fimull
ss
into
pop
adc
mov
repz
mov
jnp
sub
bound
insb
xor
mov
js
mov
nop
cli
aas
pop
sub
xchg
inc
mov
mov
shll
add
xchg
ret
mov
lahf
xchg
stc
and
popa
dec
and
and
loop
and
fldt
cld
xchg
sbb
shrb
fdivl
aad
pop
les
ret
push
daa
cwtl
mov
push
adc
mov
test
adc
xor
gs
aaa
rorl
std
into
mov
popf
mov
test
jb
add
push
lock
es
push
dec
mov
imul
insb
xchg
rcr
stos
int3
sub
cmpsl
add
mov
adc
decl
push
mov
shr
and
inc
out
add
jmp
mov
cmpsl
push
sbb
in
cmc
push
adc
or
push
fsubp
lds
daa
repnz
lret
fnstcw
enter
repnz
sbb
lret
loop
loope
mov
setg
mov
cmp
push
ljmp
enter
mov
cltd
jmp
insb
out
mov
test
ss
ficoml
inc
lcall
das
call
and
std
jne
inc
cmpsb
xchg
shll
xor
imul
std
inc
mov
mov
mov
loope
fistps
cmp
jle
icebp
pushf
pop
lcall
ffreep
cli
mov
jno
adc
dec
inc
clc
add
subl
mov
imul
jle
xchg
lods
push
fimuls
inc
stos
jmp
leave
xchg
iret
mov
xchg
push
sar
mov
data16
push
test
aam
out
sbb
mov
mov
inc
stos
adc
in
jno
lcall
cmpsb
stos
outsl
jno
mov
fdivs
dec
sub
adc
in
xchg
pop
fcmovnu
jp
pop
mov
stc
mov
xchg
add
mov
pop
fsubs
cltd
insl
dec
call
xor
sarb
movsb
test
adc
leave
lahf
out
or
mov
out
ja
inc
mov
pop
adc
mov
xchg
push
pop
xor
inc
pop
cld
loope
push
aaa
pop
popf
cmp
mov
in
test
fs
call
push
sahf
mov
out
inc
mov
je
insl
outsb
jl
cmp
and
dec
loop
ficomps
jns
add
adc
mov
lods
in
movsb
test
jns
daa
dec
stos
jne
add
sbb
jp
and
jmp
lods
xor
mov
mov
fisttpl
mov
stc
leave
cmp
sbb
sbb
enter
fmuls
push
int
shrw
push
jg
mov
mov
jmp
aad
push
lahf
dec
and
sbb
popf
xchg
xor
cmp
cmpsl
inc
inc
and
sub
idiv
fs
adc
jbe
mov
and
mov
shl
push
jbe
xchg
jg
std
mov
jmp
jmp
aas
mov
bound
test
and
shll
pop
lock
mov
pushw
add
lahf
ror
xchg
mov
mov
pop
pop
je
rolb
add
add
mov
aas
jecxz
fdivs
pop
subl
daa
in
sub
ja
aam
arpl
into
jmp
call
lcall
push
daa
xor
mov
lea
pusha
push
xor
xchg
jae
mov
cs
ret
pop
inc
pop
shlb
mov
mov
lods
into
inc
mov
jp
subl
movsb
xchg
push
fwait
and
mov
xchg
jecxz
movsb
mov
xchg
or
or
add
in
lcall
mov
js
xor
xchg
jmp
aam
xchg
jecxz
dec
add
testb
sub
cmp
ja
jecxz
sub
xchg
mov
xor
or
into
and
imul
sbb
adc
imul
and
inc
add
sub
sbb
or
mov
jbe
mov
test
push
fdivrs
scas
out
pop
push
jns
roll
lods
pop
mov
loop
jns
sbb
repz
sbb
stos
dec
push
mov
fistpll
and
jno
cmpb
lret
in
hlt
fst
cmp
mov
daa
cmp
push
adc
das
push
ret
es
xor
adc
push
repnz
nop
pop
loopne
inc
ss
add
fs
clc
mov
xor
pop
loopne
das
sub
pop
in
cmpsl
ljmp
and
into
and
inc
sub
roll
inc
adc
xor
clc
fnsave
xchg
mov
call
sub
cltd
das
lods
mov
data16
dec
xor
ret
cmp
loop
jmp
pop
rclb
in
pop
ss
push
pop
mov
idivl
add
mov
aam
push
sub
cwtl
xchg
xor
xor
or
test
pop
push
cmp
jecxz
popf
inc
mov
ret
pop
or
jge
fisttps
push
ja
mov
scas
and
loope
push
dec
sahf
jmp
mov
push
sub
bound
cmpb
push
xor
idivl
mov
test
inc
stos
dec
popa
cwtl
fld
sbbb
mov
js
jecxz
mov
sub
xchg
xchg
dec
lret
jne
lods
mov
test
adc
add
sbb
leave
inc
aad
xor
mov
out
rorb
fbld
jp
test
leave
call
mov
xlat
imul
jle
adc
sbb
push
cmp
inc
in
xor
xchg
fimull
fwait
loop
xchg
jbe
ds
pop
in
in
mov
mov
stos
push
dec
test
or
ja
loope
jno
fwait
push
add
sub
paddq
xor
into
loop
mov
mov
inc
adc
sahf
pop
mov
jg
jge
inc
das
cmp
popa
jmp
mov
mov
iret
jbe
sbb
inc
inc
mov
aad
arpl
cmp
daa
fsubs
mov
or
jg
and
jp
inc
sbbl
stos
lret
dec
dec
hlt
ss
sbb
dec
sbb
jne
shrl
xor
dec
cmp
dec
xchg
mov
cltd
mov
lock
adc
push
out
inc
xchg
sub
mov
das
xor
in
scas
ss
repnz
add
les
icebp
jnp
push
xchg
push
or
pusha
inc
add
cmp
dec
xor
pusha
out
adc
stos
into
push
imul
insl
mov
jno
insl
sarb
cli
cmpsl
mov
mov
inc
mov
jbe
pop
mov
cwtl
rdpmc
sbb
sub
leave
cmp
add
outsb
mov
add
jnp
jle
je
fs
fdivs
dec
pop
push
in
or
es
cld
ret
push
jmp
cmp
adc
jp
das
dec
and
jge
inc
cmpsl
mov
pop
loope
mov
push
gs
inc
inc
inc
mov
mov
into
and
inc
inc
push
xlat
movsb
pop
jge
dec
or
jbe
dec
cld
into
sub
das
gs
jp
mov
push
dec
out
call
cli
and
stos
dec
push
inc
pop
incl
hlt
fmuls
jmp
in
push
fisubl
mov
mov
cli
aam
xor
jle
ljmp
outsb
sub
or
push
in
mov
push
dec
cli
jmp
repnz
or
or
mov
dec
inc
dec
pop
ss
dec
mov
sarb
movhps
out
fs
cmp
repnz
push
push
push
mov
inc
les
jo
cmp
dec
in
mov
inc
repnz
divb
cltd
cwtl
and
insl
es
cwtl
jae
popf
scas
sti
or
sbb
cmp
enter
rorl
sbb
add
rcrb
les
mov
fadd
jne
shll
or
cmp
popf
aad
mov
mov
inc
test
dec
adc
mov
cmp
into
jno
mov
pop
mov
xor
mov
push
inc
lods
dec
mov
inc
pop
fs
inc
sarl
inc
push
xor
sarb
daa
dec
cmp
insb
out
push
sbb
les
and
fcomp
jmp
add
inc
mov
ss
mov
push
and
cmp
mov
jo
pop
jle
imul
sub
and
fwait
and
sbb
pusha
fistl
inc
lds
mov
or
iret
aam
nop
mov
mov
call
xlat
lret
push
xor
pop
int3
xor
pop
call
inc
fiadds
popa
adc
loopne
rol
sub
ss
sbb
dec
or
jno
adc
push
adcb
add
mov
xlat
addl
pop
push
jae
andl
stos
shrl
cwtl
dec
or
push
xor
and
fs
inc
and
mov
aas
arpl
repz
pop
push
and
xchg
mov
jmp
add
test
xor
addr16
sti
loope
aad
cwtl
xchg
xor
or
cli
xor
mov
addr16
fnsave
lods
aas
cli
push
sbb
push
cltd
cmp
pop
add
dec
and
mov
cmc
in
aad
push
adc
add
mov
xchg
cmpb
xor
movsb
xchg
loop
in
jge
jl
push
lds
lods
ret
pop
jge
push
fistpl
sub
arpl
shl
addb
dec
pushf
roll
sub
lret
and
std
fs
xor
jl
and
cmpsl
adc
or
sti
adc
lods
imul
add
pop
jl
mov
add
ljmp
inc
out
rorl
mov
lods
adc
inc
xchg
inc
jnp
stos
les
push
push
mov
push
movsb
stos
inc
jnp
pop
inc
das
jmp
lds
out
jne
push
mov
aad
sbb
xchg
cmp
fldt
dec
mov
cmpsb
mov
orl
inc
xchg
mov
ret
mov
xor
mov
outsb
sbb
sub
dec
insl
push
mov
mov
cmp
mov
cmpsl
dec
lea
xchg
mov
cmp
or
push
daa
lods
ja
out
mov
test
cmpsb
mov
out
and
adc
mov
xchg
xchg
mov
push
pop
lods
imul
jmp
sti
add
and
inc
or
cltd
dec
mov
mov
or
cmp
jg
outsl
sbb
dec
cmp
fildll
out
lock
leave
pop
push
adc
inc
outsl
mov
mov
adc
or
ja
out
and
fbld
add
mov
ret
fs
xchg
arpl
sub
imul
sub
sti
push
stos
iret
jns
mov
mov
xor
or
lret
cmp
sbb
push
aad
imul
outsb
jo
cmp
mov
mov
jb
dec
mov
loope
adcl
test
out
cmp
das
pop
push
cld
cmp
sub
and
xchg
xchg
dec
xchg
dec
cmpsb
jecxz
jo
insb
clc
mov
aas
pop
pop
mov
addr16
scas
inc
lods
lea
xchg
test
mov
add
mov
mov
xor
int3
push
call
xor
jb
xor
cmp
push
jle
mov
push
outsl
or
inc
int3
xor
rcrb
mov
rcl
inc
sbb
lret
inc
xchg
imul
ds
ror
ret
xchg
test
test
sbbb
pop
in
push
cltd
cld
add
pop
std
call
push
pop
bswap
mov
mov
rorl
or
xchg
jbe
dec
xor
jo
dec
and
loope
imul
nop
mov
sbb
add
inc
int3
testl
mov
inc
cwtl
inc
dec
rcrl
lcall
loope
outsl
dec
cmpsb
loop
hlt
enter
inc
sub
jno
mov
loopne
je
mov
dec
xchg
orl
adc
add
aam
mov
mov
loop
scas
aad
imul
std
pop
xchg
mov
loopne
adcb
mov
inc
fdivl
inc
imul
insl
xchg
pop
pop
dec
push
or
add
xchg
pusha
ljmp
sbb
adcl
aas
sahf
jg
sub
sub
add
ffree
pop
outsb
je
fisubs
stos
xchg
mov
jno
das
and
cmp
iret
inc
xor
or
in
repz
sbb
mov
adc
js
out
xor
fbld
sub
and
es
and
test
sbb
addr16
movsb
cmp
lods
or
pop
cld
aas
push
adc
add
mov
adc
imul
xor
add
cld
sbb
pop
leave
ja
and
out
adc
pop
adc
mov
cmpsb
push
test
stos
push
adc
xor
aaa
ret
scas
sbb
movsb
mov
inc
add
ljmp
push
jle
mov
imul
push
inc
add
es
push
lahf
add
jnp
pop
test
jmp
push
pop
std
iret
scas
push
push
jae
push
dec
jns
test
mov
call
add
dec
in
mov
push
jge
fs
xor
lock
pop
scas
mov
divb
decb
mov
mov
lds
and
xor
fs
cld
dec
mov
pop
fldl
pop
stos
aas
aam
mov
lret
sub
ret
aas
aam
pop
jmp
jo
sub
jg
popl
pusha
fs
cmp
xchg
pop
cmp
out
cld
xorps
xor
adc
sbb
mov
testb
lret
inc
push
jo
jno
jno
sti
mov
aam
dec
icebp
push
cmp
xchg
mov
sti
jno
jl
insb
jns
fiadds
adc
es
shll
dec
mov
insb
sahf
mov
pop
and
pusha
inc
adc
sti
jmp
in
pop
push
add
cmp
push
xchg
jne
out
xchg
in
jecxz
enter
shl
add
jnp
int
jbe
in
cli
inc
ja
mov
jle
imul
add
fdivrl
icebp
jge
fmul
inc
push
mov
stos
and
inc
aam
or
cmc
sub
repnz
je
adc
lea
cmpb
add
xor
inc
adc
or
xchg
dec
test
xchg
nop
jecxz
in
cmp
out
pop
xor
js
sahf
mov
mov
mov
loope
mov
xchg
ja
leave
pop
pop
outsl
xchg
jns
ret
inc
sbbl
push
mov
sar
je
jbe
add
mov
mov
scas
sbb
sub
gs
loope
shlb
ja
mov
fimuls
xchg
call
add
pushf
in
jmp
fisubs
inc
sbb
mov
jo
lret
ds
orb
or
mov
inc
push
cmp
ja
add
mov
aad
fadds
mov
lret
push
push
lret
jnp,pn
dec
shlb
and
dec
push
ss
push
je
cmc
mov
dec
cli
loopne
cmp
jnp
inc
loop
xchg
rcr
sarl
lcall
rcll
das
jle
fidivl
fwait
sahf
aad
lds
sti
sub
nop
mov
mov
shl
or
in
push
repz
mov
xchg
in
dec
add
idivl
dec
cmp
add
in
jmp
cmp
ret
xor
outsl
add
adc
mov
out
nop
mov
jg
inc
repnz
stos
pop
adc
cmpsl
fwait
mov
jbe
mov
sub
mov
aas
lds
fadd
sbb
xor
mov
bound
inc
lahf
inc
je
add
movsl
push
or
dec
test
mov
sbb
cmp
lret
ljmp
lret
push
jbe
shlb
sbb
xlat
loope
push
adc
outsb
vpmaxsd
push
es
data16
and
ja
push
test
jmp
or
nop
imul
aas
loope
pop
cmp
fsubl
ljmp
or
sarl
mov
or
jle
pop
push
lds
push
mov
mov
and
pop
sbb
pop
xchg
pop
or
data16
and
mov
mov
icebp
nop
pusha
xchg
cmp
xchg
addr16
into
inc
mull
lds
mov
or
add
ljmp
ljmp
push
jg
movsl
cmp
pop
mov
fnstsw
and
xor
test
stc
les
sahf
icebp
mov
shr
sbb
bound
or
aas
xchg
fstps
imul
lahf
dec
in
jnp
aaa
push
xor
mov
sbb
and
repnz
mov
or
daa
sti
mov
cmp
pop
sub
fcmovb
or
test
dec
stos
and
mov
outsb
aam
fs
inc
mov
mov
ja
adc
das
mov
iret
dec
jae
daa
iret
loop
adc
roll
inc
jne
mov
add
cmp
sbb
mov
sub
mov
cmp
jl
stos
repnz
cli
pop
and
mov
insb
nop
imul
sub
xor
sti
mov
aas
outsb
les
mov
push
int3
outsb
push
push
sub
xor
cmp
cld
or
jle
mov
pop
jbe
jle
inc
push
mov
lock
xor
and
mov
test
push
dec
dec
mov
jl
lahf
pop
and
sub
pop
ret
popa
dec
in
paddusw
mov
lret
aas
test
ds
clc
push
clc
and
mov
decl
cmpsb
inc
cld
cmp
jnp
cmc
push
ja
into
mov
adc
inc
pushf
adc
adc
sub
adc
f2xm1
sub
fbld
mov
dec
and
mov
test
xchg
cmc
mov
push
jno
lret
cmp
shll
sub
into
jnp
shll
xor
add
clc
jnp
xchg
shrl
arpl
pop
fwait
std
outsb
arpl
loope
aam
cmp
jae
inc
mov
imul
xchg
out
lea
scas
adc
inc
jo
jge
les
xor
in
add
nop
or
sub
adc
add
add
dec
jae
jecxz
jmp
cmp
push
cmpsb
jp
mov
xlat
inc
xor
pop
mov
add
or
cmp
aaa
stc
cld
adc
getsec
xchg
sti
xor
push
add
xor
xchg
inc
jmp
cld
pop
arpl
dec
xchg
or
hlt
cmc
or
mov
repnz
jmp
cmp
arpl
mov
test
mov
repnz
mov
mov
xor
mov
ja
sbb
jnp
mov
mov
clc
fldcw
in
aaa
inc
imul
adc
mov
fsubl
lock
arpl
les
jae
dec
adcl
js
push
loope
insl
sbb
movsl
fs
cmp
jb
mov
or
jbe
js
add
mov
loopne
cmc
sarl
sbb
sub
mov
adc
adc
insb
mov
and
mov
ret
push
stos
pop
jl
push
add
mov
xchg
lea
sahf
lods
lds
jb
iret
add
ffree
int3
clc
cmc
shlb
push
cmp
icebp
ja
test
lcall
lock
repnz
inc
xor
mov
mov
mov
addb
sub
jle
cmc
divl
adc
ffreep
push
pop
dec
jmp
mov
dec
int
xor
js
cltd
mov
lods
pop
jge
mov
lds
cmc
cli
mov
addr16
mov
clc
sub
dec
mov
cmp
mov
xchg
jmp
or
bound
imull
mov
jp
sbb
sbb
lds
xchg
adc
std
rcl
mov
cld
cltd
daa
testb
movb
add
jno
outsl
in
testb
leave
sub
icebp
mov
movsb
test
stos
cmp
jbe
in
hlt
lcall
ds
aam
inc
pop
jge
fmuls
cmp
dec
outsl
add
aaa
mov
xchg
ljmp
mov
sub
jp
sbb
jge
sbb
push
jbe
mov
movsl
cmpsb
ror
xchg
mov
leave
sbb
repz
or
jbe
and
pop
sbb
orb
lcall
scas
daa
xchg
mov
and
fimuls
sub
mov
ss
sbb
fwait
imul
cmpsl
inc
pop
inc
adc
rcrb
cmp
mov
mov
out
cmpl
repnz
imul
fwait
inc
xchg
cmp
inc
lcall
push
aas
sbb
xor
cld
in
add
push
mov
clc
jg
mov
pop
inc
adc
pushf
es
xor
fidivrl
icebp
jecxz
or
out
adc
xor
xor
add
adc
fimull
gs
not
movl
sahf
ficomps
mov
jg
cltd
mov
mov
push
fdivl
ret
movsb
aaa
or
push
xorl
in
fs
and
sbb
negb
sub
inc
leave
lgs
pop
shrl
mov
xchg
iret
cld
or
mov
push
stc
xchg
or
pushf
mov
ds
mov
xor
inc
jp
xlat
ds
jecxz
sub
pop
adc
xor
xor
adc
lret
pop
xchg
mov
or
das
push
sarb
ret
fsubl
ret
testb
mov
lods
sub
insl
in
pop
lods
scas
inc
pop
shll
lahf
adc
inc
enter
cltd
mov
xorl
mov
lods
cwtl
lcall
sti
leave
cmp
adc
jmp
inc
bound
cli
aam
add
cmp
test
pop
dec
fwait
or
add
or
jmp
movsb
cld
dec
add
inc
sti
jmp
adc
sub
lahf
dec
and
or
cld
or
ja
jmp
dec
test
sbbl
pop
cmp
lods
or
psubusw
lock
loop
fdivs
loope
test
sbb
hlt
adc
das
push
cs
imul
mov
mov
push
push
dec
stos
imul
jne
pop
rorb
cld
out
xchg
or
lods
lods
jns
inc
mov
mov
sbb
cmp
fbstp
jg
jo
sbb
push
loop
outsb
push
stos
inc
in
and
push
lahf
scas
pop
sbb
xchg
xchg
test
fcmovb
fdivrp
and
dec
cmpl
add
adc
push
out
xlat
mov
add
jmp
sub
mov
xchg
sub
sub
in
test
das
hlt
sti
loope
testb
pop
jl
adc
lea
insl
lret
bound
roll
cmp
decb
rcrl
nop
mov
test
fnstsw
sbb
sbb
mov
repz
loopne
cltd
popf
popf
cmp
mov
test
mov
inc
cmp
test
cmc
and
push
or
sub
rcl
rcrb
test
ljmp
jl
mov
inc
xlat
mov
test
fiaddl
add
pop
or
in
jae
sbb
cwtl
not
xor
fdecstp
add
fldenv
mov
dec
out
xchg
out
sub
fistl
mov
mov
mov
outsl
sbb
sbb
xor
inc
out
test
xchg
not
jo
popf
ss
adc
push
pop
dec
inc
adc
jl
pop
xchg
fwait
push
mov
mov
neg
imul
insb
cs
sub
pushf
std
pop
mov
dec
or
pop
mov
stos
add
push
cltd
jl
mov
test
add
and
int3
fwait
mov
xorb
adc
hlt
push
add
inc
loop
jb
adc
xchg
and
add
mov
mov
push
cmc
or
int3
sub
sub
sti
test
push
mov
mov
mov
cmp
sahf
dec
add
daa
pop
mov
and
pop
xchg
lds
cmpl
xor
sbb
inc
ret
inc
mov
shr
sub
mov
xchg
mov
dec
adcb
sbb
fstl
sub
sbb
or
mov
sahf
test
mov
cmp
addr16
outsl
cmpsb
in
xchg
mov
daa
push
ja
aam
pop
or
data16
xchg
push
sar
rclb
or
int3
mov
popf
cmpsl
imul
stos
scas
or
in
jae
outsb
adc
mov
push
mov
pop
popf
xchg
aaa
bound
xor
push
xchg
xchg
ficoms
xlat
arpl
ja
mov
imul
ficompl
daa
dec
and
mov
or
jp
popf
push
lds
and
dec
data16
mov
out
cmpsl
mov
pop
cvtpd2pi
adc
pop
sahf
in
sbb
mov
cmp
lret
das
movsl
lahf
pop
mov
or
loop
jne
mov
gs
aas
pop
pop
sub
mov
pop
movsb
shl
inc
maskmovq
clc
sahf
mov
xchg
cltd
out
inc
xchg
ja
adc
mov
fs
repnz
and
aas
mov
fs
rcl
ss
daa
mov
jb
out
lret
popf
lds
sub
sti
fiaddl
iret
mov
mov
xor
std
aam
mov
icebp
jg
and
pop
push
push
fistpl
inc
pop
enter
cmp
xchg
mov
xor
subb
out
clc
ljmp
stos
in
sub
mov
mov
imul
pusha
inc
push
mov
in
fsubrl
push
sub
outsb
movsl
testb
rorl
sub
dec
adc
jb
mov
fdivrs
push
xchg
enter
xor
mov
aas
arpl
movsl
pop
popa
sti
jno
adc
std
or
clc
shll
mov
adcb
test
movsl
xor
and
xor
push
sub
and
mov
sbb
adc
ds
repz
lock
das
int3
adc
pop
daa
pop
sub
js
mov
inc
inc
stc
jg
aas
cli
ds
inc
lods
das
mov
pop
mov
cmp
dec
jae
inc
xor
stos
enter
lahf
cld
inc
mov
or
scas
sbb
andps
pushf
int
or
es
in
in
mov
or
lock
aad
sbb
pop
mov
imul
inc
jb
pop
div
cmpsl
jge
inc
cmpsl
sbb
in
nop
pop
push
dec
mov
sbb
mov
xor
xor
lahf
push
mov
jae
jo
cmp
shlb
mov
mov
jb
gs
push
outsl
scas
cmp
insl
or
sbb
push
sbb
push
shlb
or
insb
int
cwtl
mov
icebp
xor
shrl
sub
mov
lahf
call
div
mov
outsb
shlb
cltd
and
mov
adc
mov
mov
push
outsl
fnstsw
sbb
mov
lcall
out
pop
xchg
add
in
push
repnz
movsb
adc
pop
hlt
sub
in
es
lock
sub
cli
add
cli
cmp
rsqrtps
out
jmp
jns
dec
xchg
outsb
aaa
jno
pop
inc
movsl
stc
xchg
and
pcmpgtb
popa
fnstsw
fiaddl
cmpsl
or
mov
sub
cmc
incb
in
pusha
cli
into
mov
rcll
mov
add
movsl
loop
or
fsubs
xor
jle
shrb
dec
or
test
mov
inc
push
xchg
jle
push
das
jmp
in
sub
or
hlt
cmp
imul
insl
in
je
subl
or
sub
enter
fisttpl
sub
and
mov
push
enter
xor
shlb
in
sbb
insl
jns
push
and
shrl
mov
push
je
nop
dec
imul
pop
cmpl
pop
xor
and
shr
cwtl
ds
jmp
mov
nop
adc
mov
ja
cmpsl
and
jno
mov
stos
rcrb
es
pop
mull
add
and
cmc
inc
icebp
cmp
insb
dec
pushf
mov
pop
cwtl
aas
dec
cmp
xchg
je
sub
xor
dec
jge
inc
pop
xorl
cmp
cmpb
sub
lret
andl
movsl
mov
mov
sub
lret
roll
pop
mov
repz
pop
scas
scas
data16
jg
ret
add
lea
pop
imul
xchg
clc
or
lahf
sbb
and
jle
xchg
call
sub
lods
lret
es
ss
mov
mov
jae
dec
out
xor
icebp
pop
mov
push
mov
inc
xchg
mov
and
pop
aaa
lret
cwtl
pop
mov
mov
fucomip
mov
stc
xchg
push
pop
adc
dec
mov
add
loop
fsubs
popa
inc
mov
xchg
and
loope
or
mov
sti
lock
dec
fisttpl
jae
pop
popl
mov
dec
outsb
push
sbbl
lea
xor
jbe
movsb
loope
aam
adc
dec
iret
jb
xchg
in
cmp
xor
push
adc
push
imul
mov
sub
aas
mov
pop
pop
daa
jp
test
arpl
dec
mov
clc
and
pop
fldenv
pop
xor
dec
scas
gs
test
cs
add
jbe
je
shlb
dec
jae
inc
aaa
mov
sub
imul
insb
jecxz
inc
sbb
bound
push
lock
setg
enter
mov
push
in
cmp
movsb
int
lock
xchg
cmpsb
negb
inc
xchg
jnp
popf
cmp
dec
lods
sub
je
and
jecxz
and
lret
adc
std
in
pop
and
nop
and
sbb
das
js
cli
mov
lods
sub
or
aad
js
addr16
adc
jo
iret
pop
bound
dec
push
inc
pop
adc
add
xchg
mov
out
xor
test
loopne
or
mov
cmc
mov
inc
mov
mov
xchg
xor
mull
pop
das
fisttpl
pop
outsl
fdivrp
bound
insl
fdivr
daa
movq
or
push
cmpl
sbb
add
ss
xchg
mov
push
scas
shrl
lret
pop
cmp
test
sbb
push
clc
pusha
jne
or
movsl
fcoms
mov
jecxz
cld
insl
dec
sub
shl
sub
sbb
iret
rorb
push
mov
js
jmp
sahf
and
and
popa
inc
xor
stc
rolb
repnz
movsl
unpcklps
imul
push
ds
add
xchg
gs
les
dec
sub
test
or
pop
movsl
jb
pop
inc
imul
icebp
cmp
push
rorb
andb
pushf
jae
or
jnp
dec
scas
shlb
test
call
js
cmc
dec
add
sbb
dec
xchg
test
cmc
xchg
mov
push
jb
sub
mov
pop
sub
xchg
repz
dec
les
enter
mov
add
cld
inc
sbb
xor
adc
and
adc
inc
pop
pop
repz
nop
aas
jecxz
fldl
lret
fstps
inc
stc
outsb
adc
dec
push
in
adc
lods
or
inc
pop
rcrb
js
addr16
mov
push
dec
jnp
fs
test
scas
push
pop
xorb
jmp
sarl
aam
scas
mov
in
into
adc
das
pop
inc
inc
pop
push
jg
lods
stos
jmp
out
xor
pop
dec
leave
dec
sbb
mov
cmp
aam
adc
sub
out
loop
out
sbb
pop
inc
pop
cmpl
mov
sbb
stos
cmp
lret
movsb
push
sub
xchg
int
bnd
test
and
adc
mov
adc
lcall
sbb
jmp
fnstenv
dec
iret
cs
les
sub
push
insl
mov
sub
test
rcr
sub
xchg
or
xchg
ret
pop
stos
inc
jns
adcl
push
jle
fsts
sub
pop
arpl
fwait
stos
sbb
inc
mov
fdivl
adc
fnsave
and
mov
dec
jmp
adc
push
pop
mov
xchg
mov
ljmp
dec
pop
movsl
mov
call
mov
push
jp
xor
xchg
xor
mov
stos
push
in
ja
and
dec
loop
std
lcall
cmp
sub
sbb
pop
dec
xchg
adc
xor
sahf
pop
ret
push
push
xrelease
cld
popf
cmp
mov
jg
jo
mov
or
das
stos
sbb
imul
lock
mov
aam
push
add
cwtl
dec
adc
push
lret
and
stc
mov
push
idiv
inc
stos
sbb
mov
xor
push
in
xchg
test
xchg
aas
or
adc
rorl
lcall
sti
mov
mov
negb
mov
mov
cmp
fcomi
mov
mov
mov
and
add
xor
sahf
cmpsb
xor
inc
insb
xchg
xchg
cmpsl
inc
testb
adc
mov
bound
pop
int3
add
inc
dec
inc
mov
aas
and
fmull
adc
mov
mov
jns
ljmp
mov
pop
leave
xchg
xor
sub
xor
repnz
daa
sub
xor
dec
ja
scas
cmpsl
xor
sarl
fisubs
pusha
xlat
xchg
fucomi
fstps
push
or
lods
xchg
mulb
sahf
mov
mov
loop
or
push
scas
repz
roll
sub
fidivs
push
mov
ret
pop
repnz
jns
pop
mov
cmp
pushf
and
lods
sub
push
and
pusha
repnz
ljmp
mov
jg
jl
adc
sub
movsb
mov
mov
mov
push
std
mov
icebp
xor
mov
insl
pop
arpl
add
cmp
fcoml
bound
out
push
mov
mov
lcall
and
lds
xchg
push
je
lret
jp
jo
push
addr16
sti
fs
cltd
inc
xor
scas
es
int3
sar
popl
loope
push
lcall
incb
jno
or
sarb
push
sub
xchg
inc
iret
xor
movsl
pop
popa
sbb
out
mov
fwait
daa
push
jno
das
movsl
test
repz
jne
xor
inc
mov
pop
push
aam
call
fstl
fstl
push
pop
adc
stc
lcall
jnp
sbb
mov
push
inc
imul
inc
pop
enter
dec
xchg
lea
pop
out
inc
int
xchg
sub
subb
daa
insl
jno
je
data16
or
inc
scas
dec
pop
mov
into
pop
push
in
sub
jp
xor
inc
push
push
xchg
mov
ret
ret
popa
int3
icebp
push
sbb
imul
hlt
mov
sbb
and
loopne
inc
rcll
imul
mov
in
mov
mov
jb
mov
mov
popf
mov
scas
lret
push
out
test
mov
cmp
push
pop
dec
imul
ds
sbb
mov
pusha
pop
cmp
orb
in
adc
out
or
fldl
mov
or
mov
adc
leave
mov
lret
push
les
mov
mov
popa
in
in
vsqrtpd
jp
jb
int
or
mov
xor
into
repnz
mov
dec
sbb
or
adc
inc
lahf
sbb
mov
call
movsl
cmp
out
outsb
xchg
jle
jp
pop
gs
fimull
inc
jns
mov
or
movsl
add
je
out
sub
jp
dec
and
fstpl
mov
rclb
dec
pop
lea
stos
lds
out
nop
test
cmc
pop
mov
add
out
mov
loope
or
or
hlt
fildll
xchg
inc
cld
cmp
aaa
mov
pusha
rcrl
inc
jge
cmc
sbb
inc
fwait
rcl
xchg
movsb
mov
pop
fwait
push
jmp
aam
dec
paddusw
dec
fsts
and
and
orb
fnstcw
mov
sub
pop
outsl
push
mov
xor
aad
pop
mov
jle
jae
inc
sub
into
les
gs
jge
call
scas
push
or
imul
aas
push
push
add
cmc
int3
test
es
xchg
and
outsb
addr16
les
fldcw
or
call
pop
push
mov
push
mov
repz
pop
in
xchg
push
mov
pushf
inc
dec
int
jbe
aad
sbb
xchg
lds
out
repnz
dec
out
xchg
lret
add
jae
mulb
cmovo
inc
repnz
das
adc
rolb
push
out
pop
flds
inc
andb
and
jns
and
xor
clc
jae
popl
cmp
lret
xor
stos
popa
aam
dec
adc
add
mov
adc
jge
aaa
dec
mov
pop
cmp
xor
cmpsb
jecxz
jo
in
sbb
mov
xor
adc
jecxz
daa
xor
out
test
add
jl
pop
aas
rcll
mov
push
mov
push
fists
adc
ds
aad
cmp
dec
movsl
dec
mov
push
push
nop
xor
scas
mov
xor
sub
fs
xor
nop
xchg
jne
cmp
popf
sbb
push
adc
xlat
movsl
and
sahf
adc
jl
xchg
push
pop
xchg
or
mov
push
fldcw
cltd
cmp
ficoml
lock
sub
cwtl
xchg
pop
ja
pop
push
or
cmpsb
mov
std
rclb
addr16
push
pusha
cmc
orl
xchg
pop
cs
mov
in
xor
mov
pop
lods
cmpb
push
cmpsl
lret
loope
dec
sub
pop
hlt
insl
jnp
out
call
dec
testb
mov
movsb
xchg
jecxz
sub
dec
and
add
push
scas
xchg
imul
pop
lock
pusha
cli
lds
mov
sub
xor
mov
imul
add
mov
iret
das
sbbb
inc
rcll
data16
imul
push
lret
cmp
test
mov
sti
in
outsl
sbbb
mov
mov
sti
mov
inc
aas
push
mov
adc
jae
out
insb
xchg
sub
rcr
cwtl
leave
sti
mov
icebp
loopne
icebp
cmp
inc
jnp
and
push
jno
mov
sbbl
ja
test
push
mov
das
jl
scas
maskmovq
imull
cmp
insb
pop
inc
out
mov
mov
mov
mov
jae
xchg
pop
fxch
loop
and
fs
jecxz
cmp
jl
in
jge
je
mov
mov
in
rolb
sub
inc
in
or
xchg
test
icebp
jmp
xor
nop
push
clc
in
ret
mov
lcall
jge
push
dec
out
mov
hlt
mov
imul
sbb
lds
mov
scas
lahf
sarl
aas
pop
and
inc
scas
cmc
in
div
stc
mov
repz
jne
aad
fimull
fidivl
and
sub
data16
fists
pusha
repnz
push
xorb
enter
jle
aad
lods
mov
test
outsb
mov
or
cld
add
push
jnp
sbb
and
cmc
xor
dec
sbb
fidivs
add
xchg
rcl
sub
sbb
fisubs
shll
ja,pt
inc
sub
fucom
pop
push
push
push
out
sub
pop
sub
aas
cmpsl
scas
loope
test
lock
fisubl
sahf
divl
adc
adc
loop
lcall
pop
out
or
stc
jecxz
cmpsb
scas
mov
adc
jno
cmpsl
fwait
and
out
iret
fcmovnu
cmc
gs
arpl
inc
or
jns
jo
aaa
mov
push
ja
sub
sbb
adc
xchg
mov
and
iret
cmpb
push
sbb
or
push
icebp
dec
cwtl
cmc
xchg
jae
pop
imul
adc
je
jne
xorb
inc
imul
jnp
inc
out
and
shlb
addr16
int
aaa
sub
repnz
jge
cmp
jge
popa
jae
push
sbb
and
mov
es
push
ror
push
leave
or
and
add
or
fmuls
rclb
add
push
ret
repz
sub
call
jne
es
popa
cmp
push
inc
sbb
and
ss
mov
icebp
xlat
inc
mov
clc
mov
movb
mov
add
mov
sti
adc
pop
xor
clc
mov
cmp
stos
mov
es
pop
mov
cwtl
movsl
pop
jmp
enter
push
inc
pop
mov
xor
mov
psraw
or
rorl
fmulp
aam
dec
cmp
dec
test
xchg
into
jle
ss
adc
cmpsb
push
shl
xor
frstor
std
adc
dec
movsb
rolb
xor
xchg
xor
aas
or
sub
arpl
mov
hlt
add
aaa
jle
int3
popa
mov
enter
push
mov
push
test
pop
call
adc
xorb
sbb
add
leave
mov
pop
cmpl
mov
stos
xchg
pop
clc
les
out
out
jns
cs
lock
add
cmpsb
testb
mov
xchg
inc
fisttpl
pushf
jbe
cmpsb
pop
jmp
xchg
addr16
dec
mov
ljmp
ret
and
or
cmpsl
out
dec
jmp
mov
sti
fdiv
cld
cmc
div
adc
fistl
mov
imul
or
jae
mov
mov
pop
xchg
or
xorl
movsl
sbb
mov
sti
jne
push
add
inc
pop
data16
in
outsl
xor
xor
or
pop
add
jmp
shrb
hlt
cwtl
mov
fst
sbb
movsl
jg
push
pop
mov
and
inc
fwait
dec
and
sub
jne
sbb
add
imul
jb
dec
or
mov
add
mov
mov
mov
xor
inc
repz
mov
or
or
mov
stos
cwtl
shlb
sub
or
sub
sub
mov
rol
adc
dec
sbb
cli
iret
aad
subl
cmpsl
xlat
mov
mov
fsubr
nop
pop
or
jmp
loop
lds
lods
mov
xchg
push
fidivrl
jmp
pusha
mov
add
inc
icebp
and
cmp
rcll
sub
mov
test
inc
pushf
sahf
adc
addr16
lret
mov
lcall
push
cli
out
push
ret
imul
daa
scas
xchg
pusha
xchg
aas
xchg
sub
xor
cmp
in
ss
test
fildll
cmpl
or
jne
pop
xchg
movb
sbb
jne
dec
sub
lds
pushl
add
pop
push
movq
int
ficoml
jle
mov
xor
jl
out
mov
inc
into
cwtl
dec
jbe
ja
mov
mov
pushf
xor
dec
and
ljmp
icebp
lea
jbe
scas
ret
daa
cmpsl
xor
jns
cmp
leave
add
and
repnz
pop
ret
cmp
addb
add
clc
call
frstor
arpl
adc
cmp
addr16
pop
stc
enter
push
jg
lods
adc
ja
data16
fbstp
fsubrs
scas
and
imul
or
sub
jecxz
cmp
cs
cmp
loope
std
int
cmp
aam
lretw
scas
sub
dec
enter
cmpsl
scas
das
jae
ljmp
repz
addr16
or
adc
adc
das
pop
js
mov
or
push
dec
inc
xchg
mov
mov
cli
jne
mov
sub
rorl
or
xlat
fistpll
add
cmpsl
sbbl
in
dec
gs
add
imul
sub
cmpsb
lods
jne
in
scas
jg
fimull
inc
aaa
inc
in
sub
mov
das
movsl
gs
and
xlat
jmp
les
mov
iret
fs
pop
ja
call
icebp
fistps
std
xor
adc
subb
push
inc
into
mov
push
into
add
mov
lods
roll
subl
lret
cmp
out
cld
push
adcl
ror
enter
sbb
xor
xchg
rcrl
inc
pop
push
fimull
mov
stc
shlb
dec
xor
ret
lods
lret
mov
and
imul
enter
inc
pop
jge
cmp
push
push
movsb
test
push
test
lods
mov
ljmp
adc
or
imul
std
rcl
jp
sub
dec
outsb
movsl
add
jae
mulb
test
pushf
sub
negl
xchg
xor
ret
mov
lret
mov
pop
pushf
pop
outsb
cmpb
cli
jne
or
inc
jp
mov
dec
fwait
jne
inc
movsb
push
rolb
mov
enter
push
pop
push
into
mov
cmc
push
nop
mov
scas
mov
pop
sbb
shlb
scas
iret
loopne
sarl
cmp
and
mov
or
push
push
stos
fimull
sub
jge
std
jno
cmp
aas
sub
sub
jnp
fstps
sub
jecxz
xchg
or
or
xor
out
pop
dec
adc
mov
xchg
inc
sbb
xorb
lods
fnsave
ret
adc
mov
sbb
inc
mov
jb
es
icebp
sbb
aaa
mov
lcall
fistpl
cmp
jno
sub
cmc
test
leave
mov
jnp
pop
enter
clc
adc
mov
sub
add
stc
or
or
insl
insb
lock
sbb
mov
push
jno
scas
cmp
sub
cwtl
jl
pop
je
push
fisttpl
outsb
aas
jno
cmpsb
lret
pop
clc
xchg
das
cmpsl
or
adc
mov
mov
adc
lods
and
and
xchg
idivl
sub
fmull
pop
outsb
pop
push
jle,pn
mov
jae
cli
mov
ds
mov
jmp
lds
jae
hlt
imul
test
add
pop
out
or
adc
arpl
xchg
push
popf
arpl
ds
jae
mov
xor
cwtl
mov
fldt
out
mov
ficoml
inc
mov
xchg
inc
cwtl
push
subl
int
jle
push
and
imul
into
shll
sub
inc
sub
mov
sub
xchg
xor
shl
sahf
lahf
mov
popa
jg
int3
out
sarl
mov
sbb
outsl
subl
aas
pushl
fwait
xchg
fistpl
pop
pop
jne
jge
sbb
jns
inc
jo
lret
ljmp
pushl
inc
mov
popf
arpl
sbb
sbb
cmc
into
mov
push
pop
sbbl
mov
outsb
into
cmp
push
nop
inc
push
inc
popa
loop
js
xor
jae
mov
push
xchg
cmp
loope
cwtl
dec
sbb
aas
push
and
or
in
adc
xchg
xchg
cmc
movb
jo
repz
ja
xchg
cmp
mov
add
add
mov
push
dec
imul
lds
xchg
push
lds
aad
ret
push
add
xor
mov
xor
inc
mov
pusha
jmp
dec
fildl
fs
cmp
and
cmp
add
imul
mov
les
mov
pusha
push
sbb
fwait
sti
imul
mov
repnz
pop
iret
testl
jnp
gs
jnp
push
cmc
adc
pop
jo
mov
and
inc
mov
push
add
mov
push
fstpt
xor
ret
xchg
and
lea
imul
sbb
sub
std
mov
or
pop
dec
lods
lcall
fdivrl
jp
mov
mov
mov
sbb
and
fiaddl
xor
popl
in
inc
nop
jno
sarb
cmc
mov
cld
cmp
or
lods
cmp
repz
pushf
push
jno
lahf
jnp
adc
xchg
stos
lods
or
xor
fists
jo
or
std
gs
xchg
es
push
add
and
mov
frstor
sub
enter
dec
and
jmp
xor
jmp
pop
sub
hlt
sbb
lock
inc
inc
mov
popa
jl
and
cmp
add
stc
repnz
cmp
lahf
push
mov
push
popl
ds
jne
iret
sar
dec
lea
mov
lods
test
sub
decb
pop
clc
sub
fadd
fisttps
je
mov
inc
inc
les
or
stos
idivb
or
push
adc
push
fwait
cli
cmp
pop
ja
loopne
imul
and
aad
je
mov
mov
orb
stos
call
pop
ret
daa
iret
cmp
out
xor
sbb
jb
cwtl
repz
inc
aam
rcl
pop
mov
pop
enter
mov
pop
movsl
shrd
out
in
xchg
sbb
pop
loope
test
ret
mov
adc
js
mov
jbe
lea
pushf
lret
sub
jmp
adc
repnz
dec
adc
jno
loop
hlt
std
aad
jb
jmp
xchg
gs
rolb
mov
jno
cmpsl
and
sub
push
xor
mov
stos
push
jne
or
js
push
mov
adc
mov
movsl
add
mov
mov
sub
icebp
aas
push
and
lods
push
mov
enter
addr16
xchg
arpl
dec
fidivrs
jmp
adc
pop
sbb
or
mov
stc
lahf
jne
call
daa
sub
fs
movsl
sarl
shl
and
iret
jns
mov
mov
jne
jle
push
mov
jb,pn
jo
aad
pop
fldl
loope
sub
mov
repnz
aaa
pop
inc
rcrl
inc
int
pop
lret
test
movsb
stos
inc
lcall
cmp
sbb
and
imul
or
xor
cmp
push
pusha
mov
insl
cmp
jne
jge
mov
test
xor
fbstp
orb
and
into
xor
xchg
add
int3
jmp
pushf
inc
adc
dec
sbb
xchg
pop
xchg
imul
pop
in
cmpsl
push
pop
mov
out
pop
pop
lcall
mov
mov
mov
xchg
dec
movsb
inc
cmpsl
jecxz
jnp
mov
and
dec
adc
mov
insl
cmp
mov
push
xor
fnstsw
int
jb
or
fisubrl
movsb
and
cmp
popf
pop
outsl
pop
or
mov
adc
inc
pop
or
jecxz
sub
inc
addb
sub
sbb
dec
repnz
dec
mov
xchg
cmp
mov
xchg
insb
xchg
and
addr16
aaa
mov
sahf
jge
dec
and
sub
mov
adc
in
cmc
dec
lcall
mov
inc
lcall
fs
cwtl
and
dec
out
lods
pop
push
aad
jle
push
push
lcall
cmp
xchg
sti
mov
xchg
jo
xchg
lock
push
scas
or
mov
xor
shll
data16
int
aaa
xchg
stc
call
fidivrs
pop
cmc
pop
push
pop
or
cld
xchg
lods
mov
jp
push
aaa
xchg
jns
sub
dec
hlt
inc
mov
fadds
cmpsl
jg
test
push
or
in
hlt
cmp
mov
cmpsb
repnz
popf
cmpsb
pop
insb
push
lods
mov
adc
aaa
lock
jge
mov
loop
es
pop
sub
push
pop
mov
call
pushf
mov
mov
dec
mov
ds
mov
jmp
testb
clc
push
xor
stos
stc
scas
rorl
pop
hlt
add
jp
jns
out
jne
mov
ja
xor
add
ss
aaa
inc
popf
mov
testb
mov
addb
jbe
fcomps
jecxz
or
gs
hlt
test
lods
add
repz
inc
shrl
in
shrb
jle
xor
push
jo
push
test
xchg
push
shrb
outsb
mov
push
lods
icebp
pop
mov
adc
fsubr
push
enter
shll
ss
ljmp
mov
and
xor
push
pop
nop
sbb
sbb
sbb
cltd
or
cld
dec
das
cmp
iret
jne
test
dec
lea
cmp
jb
mov
scas
test
and
push
repnz
hlt
xor
dec
sbb
cmp
sub
negl
jmp
pop
mov
cmpl
xchg
prefetch
call
sub
call
scas
out
fstpl
sub
push
jg
mov
add
or
mov
xor
or
jbe
popf
push
add
es
mov
sub
push
xchg
imul
xor
aaa
add
imul
in
and
popf
push
xor
and
stos
pop
hlt
cld
lret
add
outsb
out
jb
mov
stos
add
sti
mov
mov
fwait
mov
xor
inc
les
arpl
test
incb
adc
dec
lds
adc
in
sbb
insb
insl
je
sub
dec
imul
pop
iret
popf
test
push
push
mov
dec
pop
cs
or
dec
inc
add
mov
or
std
in
loop
dec
sub
int
cmp
cld
xor
notb
fcoml
icebp
roll
pop
cltd
xchg
jb
orb
add
jae
dec
mov
cwtl
dec
pop
outsl
jbe
xor
repz
mov
rcll
sbb
ret
xor
push
rorl
xchg
adc
mulb
es
xchg
scas
stos
ss
dec
push
outsb
mov
outsl
in
mov
imul
sub
xor
sbb
pop
jne
xchg
cmp
stc
mov
mov
mov
xor
jns
pop
xor
pop
pop
add
sbb
rol
sub
jo
out
xchg
aam
rcrb
inc
ret
dec
and
jl
dec
gs
aam
sarb
ds
pop
in
jnp
shlb
rcr
imul
outsb
dec
mov
push
xchg
lods
cld
aam
push
repz
lods
test
inc
into
or
inc
es
or
dec
inc
sbbb
lahf
inc
cld
lret
jno
fiadds
hlt
pop
or
mov
sub
fsubrs
or
sti
inc
mov
dec
mov
jnp
xor
imull
fwait
xor
sti
repz
lods
imull
stc
loop
sub
mov
test
add
lcall
cmp
jbe
cld
shlb
cmp
insl
leave
in
popl
stos
enter
repnz
aas
jo
roll
mov
insl
adc
mov
inc
addr16
mov
leave
push
lret
lods
mov
cmp
call
adc
cwtl
in
aad
loopne
sub
cs
push
sub
mov
mov
pop
xchg
pop
and
add
outsl
lret
mov
rcrl
adc
rcrb
jl
xchg
rcrl
daa
sarl
out
subb
jb
mov
mov
dec
jno
mov
lcall
mov
imull
mov
mov
cltd
push
cwtl
inc
test
dec
xchg
mov
add
sbb
adc
xor
jno
mov
fcomps
inc
mov
adc
out
test
mov
cmpsl
or
mov
hlt
sub
sbb
ficompl
sub
xchg
xor
mov
out
xor
push
sub
add
push
add
repz
vandpd
jae
inc
inc
ret
ss
adc
popa
cmpl
sbb
inc
and
lods
jns
jge
cmp
mov
mov
aad
xlat
mov
popa
stos
fldenv
mov
and
inc
sbb
inc
or
fists
cmp
pusha
xrelease
clc
out
jo
xor
push
and
fwait
stc
int3
cmp
cmp
push
sti
out
fucomi
fidivl
daa
or
sub
gs
sbb
notb
adc
or
cmc
idivb
xor
push
mov
hlt
inc
dec
pop
ret
mulb
push
divb
cs
pop
push
test
mov
mov
addr16
rclb
push
push
in
fcmovne
stos
imul
push
fiadds
adc
inc
dec
sub
lods
into
cli
gs
lcall
inc
xor
ja
stc
idivb
mov
xchg
lcall
imul
popa
sub
mov
outsb
xchg
add
lahf
sub
push
or
xchg
jmp
enter
mov
icebp
sub
sahf
cld
push
pop
jb
in
and
push
stc
fnstcw
in
push
pushf
std
test
leave
icebp
lds
psrad
mov
repz
xchg
mov
in
lret
test
sbb
mov
int3
repz
add
les
pop
cmpsb
loop
popf
pop
rcll
loop
test
mov
add
sahf
adc
lret
or
sub
jle
mov
jne
fst
ss
dec
push
pop
pop
nop
or
in
das
in
repnz
fstps
cwtl
movsl
mov
cli
xor
sahf
and
xor
cmp
xchg
jnp
add
pop
lret
sub
sub
pop
push
mov
and
aaa
xchg
jecxz
adc
xchg
xchg
in
jbe
rol
je
pushf
push
ja
movsb
ljmp
mov
outsb
fstpt
mov
lods
icebp
jne
arpl
mov
cmp
inc
pop
pop
mov
lret
shlb
jns
in
xchg
adc
in
pop
or
mov
push
inc
iret
fs
jnp
sbb
dec
sub
std
mov
mov
addr16
nop
add
jmp
cmp
mov
dec
or
data16
xor
fsubrs
sbbb
pop
data16
push
mov
or
sub
xor
gs
imul
int3
push
sbb
mov
test
ss
nop
jg
mov
mov
mov
push
sub
jne
jle
sbb
cwtl
xchg
stc
mov
mov
or
mov
lret
and
addl
stos
push
int3
cwtl
dec
outsl
mov
add
and
jnp
jmp
cmp
pop
pop
popf
adc
inc
dec
jne
sbb
or
imul
inc
pop
jb
push
aaa
cltd
in
jns
bound
ljmp
scas
mov
push
jle
and
mov
lea
pop
inc
mov
jne
mov
inc
adc
mov
int
mov
mov
push
or
mov
sub
dec
insb
cmp
pop
inc
bound
pop
dec
dec
and
das
in
cmp
mov
mov
inc
aaa
fwait
mov
and
jmp
clc
pop
loop
scas
movsb
sbb
pusha
push
in
and
imulb
cmp
lret
xchg
mov
enter
insb
insb
adc
scas
or
dec
iret
sbb
loopne
stc
std
gs
jns
popf
inc
sub
lcall
or
lock
and
add
mov
pop
hlt
loop
shrl
ret
jg
cld
insb
enter
mov
call
rorb
pop
xchg
stos
cmp
aam
push
popf
xchg
addr16
outsb
cwtl
mov
adc
int
dec
rorb
mov
leave
adc
mov
scas
push
cmp
xor
test
shrb
jne
jecxz
popf
xchg
cwtl
pop
xchg
iret
fbstp
int
inc
hlt
xor
inc
mov
repnz
loope
out
out
dec
jne
enter
jno
sub
push
xchg
xor
into
push
mov
add
jae
push
pusha
xchg
clc
dec
jmp
je
or
dec
loope
pop
shlb
clc
and
insb
pop
lock
add
fstpt
inc
inc
dec
arpl
cmp
cmpsb
out
cmp
pop
cli
sbb
push
in
cld
mull
mov
lret
push
decb
es
test
cltd
or
and
jne
push
cs
push
add
mov
ficoms
mov
or
out
xchg
fwait
sti
xor
out
aaa
aas
mov
mov
fdivrs
lock
mov
push
repz
xchg
jo
shl
mov
sub
ror
imul
sub
pop
adc
xor
mov
lods
imul
jbe
adc
in
add
ds
stos
push
daa
xor
pop
xlat
jle
sarl
out
adc
push
dec
fildll
cwtl
cltd
inc
insb
sub
mov
iret
outsl
adcb
cli
ret
out
or
pushf
vunpckhps
pop
nop
lods
push
loopne
out
sbb
mov
mov
loopne
sub
dec
mov
sbb
lahf
sarb
add
in
mov
loopne
fwait
xchg
mov
xchg
lock
repnz
lcall
jp
imul
mov
test
inc
cmpsl
cmp
inc
pop
jnp
in
and
in
push
push
mov
xor
dec
dec
xor
pushf
es
or
cld
sti
push
adc
andl
cmp
push
les
lret
push
xor
fs
mov
int3
cmp
popf
out
lods
in
lea
mov
movsb
and
mov
xlat
imul
adc
inc
inc
shlb
cs
repnz
xor
jp
insl
cmp
rol
ss
in
adc
clc
pushf
stos
mov
push
imul
or
dec
xor
mov
sbb
jge
sbb
mov
sti
inc
out
in
jb
dec
mov
and
xor
adc
fisttpll
mov
popa
jg
cld
stos
xchg
das
pop
dec
inc
pop
sub
cwtl
outsl
hlt
shr
xor
dec
cwtl
addr16
sub
ret
pop
int3
inc
xlat
lods
and
clc
dec
sub
fwait
xchg
fistps
jmp
xor
add
mov
hlt
fistpl
jno
mov
sbb
and
xchg
sub
or
cli
push
divb
jb
mov
add
test
arpl
lret
adc
xchg
pop
loope
sarb
jp
adc
addr16
jb
decl
sbb
dec
and
inc
push
es
inc
or
pop
or
loopne
lfs
mov
call
aad
mov
xor
pop
jbe
mov
stc
inc
jno
inc
xchg
mov
adc
cmp
inc
xchg
ret
out
out
sahf
jle
dec
push
into
lds
mov
add
icebp
mov
and
push
mov
bound
stos
pop
inc
cltd
and
mov
arpl
xchg
stc
pop
xor
fldt
lret
addr16
and
shl
inc
stc
jecxz
pop
sub
stos
jge
fwait
sbb
mov
icebp
loope
and
jge
cli
cmp
mov
pop
xchg
jnp
jmp
sub
cli
outsb
iret
xchg
shr
or
lods
les
sub
filds
sub
cmpl
ds
daa
adc
test
movsl
xlat
pop
cmp
and
add
es
int
jne
inc
ret
xor
lods
lret
add
lret
clc
sub
push
jb
jle
push
jmp
stos
mov
pop
lcall
shl
sub
mov
and
xchg
cmp
fsubr
xchg
std
sbb
mov
std
cmpsb
scas
pop
lods
xchg
jecxz
sahf
dec
push
ret
lret
jmp
dec
sbb
je
or
xor
stos
add
cld
leave
xchg
xchg
inc
sub
lods
cli
inc
or
aaa
loopne
pop
movsb
ficoms
scas
rcrb
jle
add
iret
add
loope
testb
fisttps
mov
ds
xchg
mov
scas
in
pop
popf
call
pop
arpl
jle
int3
lds
test
dec
add
or
cmp
mov
pusha
add
pop
push
push
push
shrb
imul
test
sarl
outsb
mov
repnz
popf
jl
xchg
cmp
nop
mov
add
mov
test
repnz
mov
into
or
enter
inc
popa
mov
test
pop
jb
and
or
jo
rolb
mov
outsl
xlat
leave
jbe
or
pusha
cmpsl
fs
outsl
push
fidivrs
xchg
cwtl
xlat
jns
pop
lahf
mov
xchg
cwtl
add
mov
xor
jecxz
test
sbb
push
mov
mov
xchg
sub
jb
dec
mov
mull
dec
sbb
ja
out
in
xor
xchg
dec
cltd
jo
data16
hlt
insb
je
pop
push
jmp
test
fcomps
mov
test
xchg
cmc
dec
xchg
pop
jb
fidivl
lods
test
sbb
xchg
pop
outsl
mov
or
lods
loopne
ss
call
cmp
jo
push
shrb
aam
pushf
mov
arpl
pop
push
xchg
xchg
mov
lods
adc
pop
pushf
or
mov
xchg
add
jo
cmp
ss
mov
popf
scas
es
cmp
lods
les
insl
add
xchg
or
call
push
imul
jp
lretw
jb
inc
aad
adc
jecxz
js
cmpsb
mov
shrl
ljmp
jnp
sahf
sub
loope
adc
les
push
jmp
daa
test
nop
popf
push
and
inc
and
ja
div
test
mov
aas
out
jae
xchg
sbb
xlat
push
cmp
lret
mov
mov
jo
jg
pop
lds
cmp
sti
rorb
add
jp
cs
adc
sub
shrl
ja
fs
arpl
xor
pop
push
mov
mov
push
mov
xlat
jmp
mov
inc
out
and
pop
push
push
or
lahf
sub
scas
adc
mov
pop
in
xor
ljmp
add
add
fwait
add
pusha
lea
fsin
inc
push
mov
jecxz
je
xor
lahf
push
dec
outsl
dec
lods
push
fldt
push
ss
je
arpl
fwait
movsb
addr16
push
xor
pusha
pop
push
lret
mov
xchg
mov
pop
jae
iret
inc
mov
ffreep
inc
or
xor
mov
inc
in
ljmp
out
sti
jg
mov
ja
mov
stos
pop
movsb
jae
out
xor
push
push
xchg
push
scas
inc
es
dec
pop
test
cmpb
inc
ljmp
adc
mov
sbb
pusha
jno
and
and
fistpll
fidivl
dec
or
or
xchg
fstpl
mov
aaa
hlt
cmpsb
cltd
nop
loopne
add
adc
push
inc
adc
and
jp
lea
negl
adc
dec
repz
lcall
inc
mov
jbe
jge
inc
xor
aas
push
and
jb
sarb
jne
lahf
dec
push
clc
jecxz
xor
dec
push
inc
dec
xchg
fbld
mov
cmp
fldl
mov
add
adc
xchg
lret
xor
pop
aam
lahf
mov
xchg
test
mov
push
popa
pop
mov
stos
mov
es
gs
mov
push
xchg
mov
cli
adc
call
movsl
orl
inc
and
cmp
fldt
sbb
sarb
notb
pop
add
sub
outsl
mov
or
push
fdivrs
jb
jnp
orb
sbb
popl
int
test
dec
movsl
rorl
outsb
mov
notl
pop
xlat
or
mov
and
lods
cmpsl
ja
dec
pop
jnp
test
or
add
jle
pushf
bound
xlat
stos
and
ja
iret
and
insl
pop
mov
shll
dec
stos
mov
in
ss
out
test
in
arpl
fildl
inc
out
push
pop
cmpsb
in
pusha
mov
xor
xchg
mov
cwtl
sahf
popf
outsb
dec
int3
leave
adc
sub
dec
adc
lret
leave
loop
int
push
push
in
in
mov
test
add
xchg
add
lret
mov
cmp
movsb
rorb
insl
push
dec
mov
ja
inc
ds
int3
aas
lods
test
fldl
jp
jmp
xchg
cmp
jbe
mov
and
cltd
add
popf
aaa
mov
jecxz
mov
add
jne
stc
inc
adc
popf
insb
iret
or
or
mov
jge
sti
mov
mov
xor
xchg
mov
pop
enter
lret
and
dec
ss
sbb
outsb
sub
and
js
push
xchg
jnp
mov
pop
pop
sub
sbb
xchg
pop
ror
push
inc
mov
mov
cltd
and
adc
push
push
js
push
push
enter
jns
movsb
and
imul
push
push
test
lods
adc
adc
push
mov
xor
test
mov
inc
test
aas
inc
sahf
insb
jl
pop
pop
daa
adc
das
add
push
test
adc
ret
gs
mov
jmp
ret
add
jno
jne
call
push
mov
lock
and
and
lods
sub
ret
fwait
mov
jge
pusha
fdivrl
pop
out
cmpl
cmpsb
mov
pop
pop
sbb
leave
add
push
cwtl
add
push
int3
enter
int
dec
test
pop
pcmpgtd
out
and
test
or
sarl
cmc
inc
adc
cmp
orb
sbb
in
ljmp
sub
pushf
dec
mov
mov
mov
cs
pushf
repnz
sbb
xor
fcomps
sub
je
adc
popf
sbbb
xorb
fidivl
subb
ret
sbb
push
xor
mov
fwait
out
dec
cmpsl
ss
jge
inc
cmpsl
shrb
gs
xor
add
sbb
inc
sar
imul
lock
push
shll
aad
jae
dec
mov
inc
push
push
sahf
mov
in
into
mov
add
aas
sbbb
lret
mov
cmp
mov
cwtl
and
mov
pusha
push
add
mov
insb
lods
or
add
sub
push
test
jecxz
cmp
cmp
xlat
jge
lcall
dec
pusha
sti
pushf
dec
push
mov
sbb
mov
mov
adc
lahf
jbe
loopne
jae
movsl
xor
aaa
int3
stos
and
lds
hlt
lods
adc
shlb
sub
dec
xor
xorl
jle
mov
decb
in
or
pop
int
mov
xchg
das
mov
lock
sub
adc
nop
test
scas
adc
mov
nop
lods
add
dec
dec
sub
mov
dec
pusha
outsl
add
sbb
scas
or
xchg
faddl
imul
je
rol
xlat
bnd
sub
sub
and
xor
ja
loop
and
dec
pop
xchg
adc
hlt
out
pop
add
popf
inc
mov
andl
ja
mov
sbb
scas
push
and
jecxz
inc
mov
dec
jecxz
lods
test
and
mov
aas
sbb
mov
xchg
and
cmpsb
std
jnp
lret
inc
pop
push
mov
inc
push
movsb
jecxz
pushf
mov
aad
or
ret
rcrb
fnsave
jg
push
fstpt
push
mov
pop
xor
and
addb
push
adc
fs
negb
lret
fsubl
xor
mov
jo,pt
pop
cmpsb
xchg
sub
push
out
lock
pusha
lahf
push
aas
cmpsl
jge
lret
push
and
out
mov
addr16
sub
loope
mov
rcr
ret
or
out
jl
sbb
jbe
mov
pop
in
jae
js
dec
and
jecxz
push
push
sarb
mov
das
xor
sub
and
xlat
adc
mov
mov
mov
lods
cld
dec
adc
mov
lret
js
ljmp
jl
fistps
xor
imull
shll
push
pop
addl
stc
mov
ds
loop
ljmp
fld
sub
lcall
mov
lahf
repz
inc
inc
adc
mov
in
mulb
mov
dec
add
jo
fidivrs
scas
lods
cmpsb
ss
insl
loop
loope
cmpsl
or
fsubrs
pusha
push
stc
jmp
dec
outsl
inc
int3
jecxz
subb
pop
clc
lahf
in
adc
mov
ficompl
repz
arpl
mov
push
pop
lods
push
call
push
cmp
dec
inc
xchg
loop
in
dec
icebp
pop
addr16
cltd
in
jecxz
pop
sahf
shld
ja
and
inc
mov
js
imul
mov
addr16
push
loopne
push
ljmp
mov
xor
mov
hlt
stos
jns
sub
sahf
iret
ret
or
push
xor
add
loope
mov
pop
pop
dec
sbbl
jl
pushf
mov
xor
popa
ja
add
sbb
sbb
fisttps
out
push
aad
ret
test
outsb
or
jecxz
cwtl
mov
or
mov
sbb
int
mov
lret
les
sarb
sbb
xchg
jbe
or
sbb
sub
pop
jmp
fcomi
sbbb
fstps
int3
push
inc
sub
pop
pop
mov
push
sti
jmp
add
and
mov
int3
xchg
hlt
mov
mov
mov
mov
jae
loop
les
sbb
sti
and
xor
pop
lods
sbb
cmpsl
adc
outsb
add
gs
sub
rclb
jl
lds
fcmove
pop
add
add
rorb
jnp
mov
xor
mov
test
out
aaa
xor
xchg
adc
sbb
push
sti
push
pop
mov
mov
lret
adc
or
out
cmp
repnz
in
mov
out
shlb
in
cmp
mov
pop
add
mov
int3
mov
out
mov
repnz
jae
scas
inc
and
fptan
lea
je
rolb
sub
test
loopne
addr16
xchg
outsb
inc
ret
or
enter
in
fdivrl
mov
lret
hlt
data16
stos
or
inc
js
push
data16
lock
arpl
mov
adc
sbb
inc
mov
pop
das
pop
sbb
cmc
mov
mov
cmp
jnp
ret
mov
push
les
pop
int
lds
cmp
push
inc
outsl
ja
cmpsl
sub
xlat
xor
inc
sub
dec
es
mov
cmp
push
leave
sub
insl
xchg
pcmpgtb
ds
push
pop
cli
cli
ss
push
cmp
lods
in
sahf
push
dec
cmpsb
adc
stos
cld
inc
subb
pop
push
or
outsl
inc
mul
cmpsb
mov
in
mov
out
or
aaa
dec
mov
jbe
mov
arpl
cwtl
xchg
fimull
or
call
lock
shl
xchg
push
mov
outsl
test
cmp
stos
push
push
fbld
sub
sahf
insb
adc
adc
nop
cmp
cmp
ljmp
xchg
sbb
loop
xchg
arpl
mov
cld
arpl
add
fimuls
and
mov
scas
lods
jecxz
test
push
test
je
jg
adc
flds
inc
aaa
xchg
xchg
sbb
jp
fcomps
jg
lea
push
leave
lahf
pop
enter
aam
gs
fs
rcll
jmp
in
out
push
xchg
call
xor
inc
pop
sbb
mov
mov
rol
popf
xor
and
cwtl
sub
push
add
pop
pop
fisubs
jl
pop
push
fcomps
adc
lea
mov
and
movsb
decb
inc
pop
outsl
jle
shr
sbb
rorl
cld
xchg
and
adc
jns
add
stos
call
leave
push
lea
das
repnz
mov
das
std
lret
fists
fsubrs
and
ffree
test
notl
das
xchg
int3
add
mov
xor
cld
ficoml
sbb
lods
lahf
clc
sub
stos
imul
adc
roll
jmp
scas
ljmp
inc
jne
mov
sbb
inc
jb
into
sub
rolb
mov
stos
mov
aam
sti
fidivrl
iret
lods
mov
xchg
xchg
and
mov
add
lahf
inc
mov
lods
push
jle
inc
adc
adc
inc
inc
les
out
jo
xchg
sti
daa
lea
lret
xchg
add
mov
fdivs
in
test
fcmovb
mov
mov
mov
adc
in
pop
or
test
out
sti
cltd
rcl
lds
or
mov
dec
push
jl
pop
das
lcall
mov
adc
xchg
jecxz
lods
lahf
push
shll
push
mov
mov
sbb
sbb
add
lds
cmp
mov
mov
popa
je
je
daa
loope
ficoml
cmc
cmp
lods
push
out
daa
rcrb
sahf
mov
gs
pop
lret
push
scas
xchg
lds
sub
dec
fsubp
xorb
and
xchg
gs
fnstenv
rcr
inc
popa
cmp
mov
sti
jmp
std
mov
addr16
imul
push
mov
inc
pop
cmp
in
mov
test
in
and
xchg
rcr
sub
jl
mov
mov
inc
dec
jg
sbb
data16
in
fisttpl
mov
push
mov
adc
mov
push
movsb
in
cltd
add
pop
sub
cmp
mov
hlt
movsb
inc
iret
test
cmp
icebp
inc
add
popa
aaa
sar
cltd
push
add
xor
adc
push
dec
insb
mov
shl
dec
dec
add
mov
push
enter
add
popf
sbb
or
pop
add
fs
push
into
or
dec
add
dec
out
notl
jmp
lret
push
adc
sub
fldenv
and
push
popf
div
mov
sahf
shrb
std
mov
cli
scas
jge
push
orb
pop
imul
xor
idivl
jno
test
dec
adc
and
pop
mov
sub
test
xchg
aam
lea
push
mov
cmp
fisubl
rorb
loop
lds
pop
fstp
fs
aas
add
push
or
dec
or
lret
push
push
sbb
inc
lret
loop
cmpsl
sub
mov
xchg
iret
jo
mov
call
fnstenv
cltd
rcrb
inc
popa
pop
in
arpl
popf
jbe
mov
cltd
mov
sub
add
xchg
mov
push
push
fisubrs
sub
imul
sbb
jecxz
ss
sbb
xchg
add
mov
pop
mov
imul
nop
aam
loop
or
mov
out
daa
inc
jmp
in
mov
cmp
pop
pop
pop
popa
and
xchg
lahf
lea
mov
pushl
dec
sub
gs
mov
repnz
out
mov
je
push
sub
and
push
push
mov
and
pop
jmp
jg
cmp
and
pop
notb
pop
fnstenv
or
das
js
add
dec
mov
dec
repz
js
inc
jmp
shlb
sub
outsb
xchg
push
clc
scas
les
sub
dec
popf
je
rcll
or
into
es
and
xchg
mov
xlat
pop
pop
jns
lods
lcall
ret
mov
mov
lahf
aad
mov
xchg
aad
add
pusha
roll
std
or
sub
decl
test
fidivrs
subb
jle
fidivl
movsb
jge
out
bound
add
cld
xlat
xor
inc
les
fdivrl
insl
pop
cmp
fucom
and
movsb
pusha
out
sahf
sbb
sbb
in
movsl
cmpsl
xlat
xor
out
cmp
inc
pushf
fimull
mov
fistps
sub
xor
inc
and
popa
jmp
rclb
xchg
in
push
inc
sbb
lcall
mov
mov
rcr
leave
cld
test
mov
gs
mov
mov
fldt
sub
cmpsl
icebp
xchg
add
xchg
push
stc
aas
ficoms
and
test
add
cmp
rol
jne
jb
push
push
jnp
nop
or
push
cltd
mov
or
fisubrl
lret
pushf
and
fiadds
gs
jnp
cmp
mov
adc
scas
bound
mov
mov
jns
mov
sbb
call
sub
repnz
into
rclb
jno
xchg
movsb
adc
sbb
mov
dec
or
mov
or
pushf
adc
xchg
push
xchg
cli
test
jb
push
cmp
popl
push
mov
jmp
push
loope
adc
aas
xor
call
mov
add
add
jg
push
dec
lahf
jns
sarb
aad
cmp
ds
pop
cltd
adc
lods
imul
add
mov
and
mov
mov
sub
xchg
xchg
lock
movsl
or
int3
dec
shrl
adc
sub
rcll
dec
add
stos
mov
adc
cmc
push
and
ljmp
out
sbb
xor
push
jb
cmp
xchg
jl
lcall
xchg
jns,pt
pop
int
jno
je,pn
movsl
or
fistpll
int3
aad
sub
pop
mov
shrb
jb
jmp
lock
pop
adc
xchg
xlat
dec
push
mov
cmp
mov
adc
sarb
sbb
nop
jmp
mov
jecxz
add
pop
mov
xlat
xor
lret
fisubs
aas
ret
mov
bound
mov
add
cld
lret
repnz
sbb
dec
push
in
mov
es
or
lahf
dec
shl
pop
cld
push
addl
mov
xor
js
pop
adc
dec
cmpsl
jo
adc
jae
pop
jg
xor
data16
lcall
push
xchg
clc
les
xchg
lret
ss
mov
pop
or
push
sbb
xchg
xchg
add
and
cmpl
insl
stc
fs
xchg
push
push
shll
cltd
jge
and
push
inc
arpl
arpl
cmp
inc
jge
push
fiadds
mov
enter
daa
into
xchg
sbb
mov
xchg
mov
push
mov
xchg
lcall
pop
and
sahf
dec
xchg
mov
faddp
lea
or
xchg
mov
jbe
dec
inc
push
lods
add
sbb
sbb
and
jg
mov
push
xlat
xchg
mov
mov
aaa
sub
stos
xchg
fcoms
xchg
rcr
mov
aas
pop
adc
adc
mov
xor
sbb
sbb
movsb
and
xchg
sub
mov
adc
fs
cld
movsl
adc
dec
or
lahf
jmp
mov
imul
in
jo
xor
mov
mov
xor
test
or
adc
push
in
mov
or
push
icebp
mov
aaa
mov
jb
inc
xor
adc
std
xor
shl
imul
aam
imul
call
addr16
hlt
sub
fs
lods
sub
insb
dec
sahf
out
das
and
sub
pop
and
lods
shll
mov
push
push
sub
push
lret
xor
xor
imul
in
cmp
sahf
ja
rcl
cmp
fwait
pop
cmp
ret
pop
and
xor
testl
movsb
sub
faddl
fs
shrb
mov
mov
cmp
or
sahf
jbe
cmp
lret
dec
jae
xchg
int3
popa
inc
stc
sbb
mov
mov
inc
aad
add
or
jbe
sbb
imul
sbb
adc
loopne
out
and
inc
adc
sub
jbe
dec
jp
jns
inc
xchg
dec
daa
mov
add
adc
loop
xor
incl
push
push
sub
and
out
jl
xchg
inc
ss
push
mov
inc
dec
pop
sahf
in
hlt
pop
ss
repz
pop
andb
mov
jg,pt
mov
dec
inc
popa
push
bound
test
jno
repz
and
xor
and
add
test
mov
jmp
mov
insl
in
mov
add
mov
stos
shrl
dec
pop
adc
and
jge
nop
push
jmp
sub
inc
movsb
enter
xchg
movb
sub
stos
repnz
xchg
jmp
push
xchg
mov
test
call
xor
sbb
pusha
fistps
arpl
loopne
mov
or
mov
insl
test
mull
jle
add
jmp
das
mov
outsl
adc
inc
gs
mov
adc
mov
movsl
lahf
push
std
mov
repz
mov
lods
jb
in
out
mov
xchg
cmp
mov
mov
out
or
ret
xor
pop
push
or
punpckhwd
jmp
adc
pushf
xchg
xlat
fld
mov
dec
sub
imul
sti
ror
pop
sub
push
pop
jbe
inc
xor
rorb
push
fst
stos
add
rcll
sbb
fwait
js
test
xor
es
mov
scas
or
mov
mov
lods
cmpsl
call
push
in
hlt
imul
sar
addr16
push
out
inc
sbb
cmpsb
jae
loope
nop
ljmp
add
push
clc
arpl
lods
xor
pop
cli
or
add
rorb
gs
xor
push
test
mov
xchg
scas
sub
dec
lret
add
mov
lcall
fcomp
fiaddl
pop
popa
dec
sbb
add
jmp
loope
aad
and
scas
sub
xchg
jmp
ja
dec
adc
in
xchg
sar
cmp
and
sbb
adc
sbb
shlb
add
loopne
in
cli
sub
mov
lret
in
jp
fidivs
sub
loop
adc
out
sahf
pop
xorb
test
xor
rorb
mov
push
pop
sbb
mov
pop
mov
cmpsl
sbb
or
add
test
push
div
mov
pop
scas
in
imull
push
jmp
or
les
sub
xor
jl
push
ror
adc
xchg
cs
jbe
jle
popf
add
imul
xchg
mov
lds
call
add
jo
out
mov
or
popa
push
loopne
fnstenv
int
stos
fstpl
jb,pt
mov
mov
fistps
inc
leave
add
jg
push
or
xchg
push
pop
popa
inc
mov
pop
outsl
rcll
add
js
mov
jp
mov
xchg
aam
add
mov
test
movsb
sahf
inc
ja
in
jl
push
test
push
pop
sub
dec
rorb
imul
in
mov
xorl
inc
nop
xchg
inc
sub
pop
in
cmovne
iret
jl
sbb
ja
cs
scas
add
and
shlb
lcall
test
mov
dec
clc
jle
lock
outsl
cwtl
mov
lock
scas
pop
lcall
pop
or
xchg
stc
shll
push
outsl
pop
imul
pop
jb
push
pop
hlt
popf
pop
insl
lea
roll
jecxz
ret
repnz
arpl
inc
aam
movsl
cmp
inc
gs
mov
sbb
pop
mov
add
mov
in
lret
xor
les
dec
cmpsl
dec
mov
or
mov
stos
adc
pop
mov
adcl
xor
inc
ss
adc
mov
rcrb
loope
inc
mov
lea
int
add
pop
sub
push
sub
shll
adc
aad
and
dec
mov
jne
jle
jns
cwtl
adc
pop
and
outsl
int3
fnstenv
adc
fstpl
cmp
jle
jge
xor
hlt
mov
push
int3
pop
xchg
js
cmp
jg
roll
fwait
sbb
je
inc
pusha
inc
adc
jae
adc
aad
sub
adc
mov
test
aaa
fdivrs
lret
mov
loope
dec
cld
mov
pusha
sti
lock
push
adc
pop
pop
les
test
call
sahf
imul
jmp
test
add
notl
inc
push
xor
popa
negb
xor
pop
xorb
insb
xor
sbb
pushf
mov
xor
jge
lret
js
fildll
and
xchg
add
pop
pop
out
in
dec
das
fbstp
jecxz
test
pop
test
mov
and
add
and
jbe
or
and
fwait
stos
jmp
fsub
jg
mov
lea
mov
jge
outsl
mov
outsl
mov
xchg
jg
pop
mov
dec
fbstp
sub
fs
cmp
xchg
out
cmp
dec
push
in
lea
dec
lahf
daa
sbb
jg
enter
in
iret
xor
fnstcw
push
pop
fisttps
shrb
xor
add
lret
xor
xchg
pop
push
inc
dec
mov
fidivrl
movsl
mov
or
mov
xchg
hlt
fcmovu
lret
fists
sub
out
popa
mov
frstor
pop
cmp
xchg
in
movsl
or
daa
mov
loopne
repz
sub
pop
ror
int3
jge
imulb
lahf
arpl
push
pop
and
xchg
aad
ror
sub
pop
xor
jae
dec
inc
imul
inc
push
jle
jae
xor
mov
in
pop
lods
roll
inc
jge
xor
inc
inc
sub
cmpb
and
lret
pop
ds
jb
push
push
int
or
lds
divl
sbb
inc
pop
cmp
out
out
jmp
mov
and
jnp
lods
dec
or
cs
sub
loopne
incb
sbb
js
fcmovu
push
dec
push
sub
pop
std
mov
stos
mov
mov
cs
jmp
icebp
lds
adc
aaa
call
and
rclb
in
hlt
in
sub
outsl
adc
dec
daa
popa
dec
pop
xor
dec
in
pop
scas
enter
jp
sbbb
popf
test
xchg
fisubs
pop
stc
in
mov
pop
jle
and
not
mov
in
xchg
icebp
int
xor
in
xchg
mov
fsub
in
sub
shl
cltd
adc
mov
add
test
add
inc
std
imul
into
mov
xchg
pop
popf
fs
inc
aam
xchg
xchg
xor
pop
cmpsb
xor
sub
outsl
arpl
or
add
je
mov
test
mov
jo
pcmpgtb
pop
push
adc
lods
imul
orb
cmp
jmp
dec
in
jne
popf
cmp
movsl
sub
or
lods
sarl
and
jl
mov
push
and
inc
push
adc
dec
jae
pop
loop
pop
pop
and
iret
pop
mov
pop
je
xor
jbe
push
cmp
gs
mov
adc
mov
mov
mov
cmp
push
mov
jp
loop
jecxz
mov
push
inc
shrl
ret
mov
cli
cli
inc
test
out
hlt
inc
xchg
aas
sub
cmp
sahf
pushf
add
dec
sbb
push
adc
imul
dec
test
dec
cwtl
mov
sti
int
aas
dec
push
xor
jbe
add
mov
jbe
ss
pushf
inc
pushaw
test
cld
mov
add
xor
dec
stos
lret
stc
adc
mov
sub
vpshlb
inc
fstl
cmp
test
arpl
ljmp
xor
cltd
push
aad
pop
in
jbe
sti
movsl
add
enter
lock
testb
lret
mov
cmp
xor
adc
xchg
adc
xor
push
push
mov
and
in
xor
pop
mov
cmp
pop
mov
hlt
lcall
cmp
and
imul
sbb
inc
mov
sub
lea
pop
cld
in
or
sbb
adc
cwtl
stos
push
push
sti
sar
popa
ss
xchg
mov
movsb
mov
nop
inc
or
and
out
fwait
xchg
lods
shrb
lea
sbb
dec
cli
sub
adc
lret
orb
pop
test
push
and
sbb
insl
fsubrl
xchg
lods
dec
pop
sub
in
ljmp
lea
pop
gs
scas
stc
stc
push
and
and
or
mov
add
gs
cltd
lea
cmp
dec
cmp
ss
loopne
mov
dec
mov
add
xchg
popa
mov
shl
cmp
push
cs
xchg
dec
push
clc
mov
mov
fisubrs
mov
testb
sbb
add
jge
pop
sbb
jns
int3
sub
sbb
or
pop
add
pop
adc
cmp
leave
dec
mov
das
mov
repnz
push
cmp
cmp
in
jge
and
xor
sub
into
loopne
sahf
jnp
and
lahf
mov
sbb
bound
adc
rorb
cmp
adc
jmpw
cmpsl
push
stos
xor
imul
inc
lret
cmpsb
lret
mov
aad
adc
mov
imul
cmp
out
or
mov
stos
mov
mov
sarb
adc
ja
cmp
and
mov
std
scas
or
iret
xlat
push
and
sbb
push
pusha
jge
mov
push
pop
mov
cld
dec
sbbl
xchg
pop
out
sub
mov
add
xchg
push
iret
insl
xor
fwait
push
cmc
inc
mov
int
int3
pop
enter
sub
jo
iret
inc
sbb
xchg
dec
or
call
add
jp
stc
stos
lods
mov
inc
jne
adc
lahf
cltd
ljmp
clc
es
push
and
xchg
mov
pop
aaa
sbb
inc
or
pop
inc
and
xchg
loopne
or
imul
xor
pop
jl
mov
xchg
push
sbb
out
dec
cmp
dec
add
popf
xor
arpl
lret
outsl
stc
cs
test
fcomi
dec
xchg
loope
jl
gs
push
es
xor
lods
jns
or
into
lods
pop
push
mov
push
pop
leave
test
and
adc
nop
xlat
sbb
inc
bound
pop
out
out
test
mov
adc
test
xor
outsl
xchg
mov
mov
mov
mov
pop
imul
cltd
add
repz
pop
dec
xchg
lahf
ret
pop
pop
or
sbb
add
jp
xor
ja
pop
cltd
adc
jmp
or
adc
aad
mov
xchg
sub
add
sbb
or
lret
out
lahf
jl
inc
cli
lret
adc
pop
gs
mov
daa
mov
nop
pop
or
jae
pusha
jb
adc
cmc
repnz
push
int
ja
sbb
push
and
ja
ljmp
cmp
dec
push
fadds
pop
jle
mov
xor
rep
stos
rep
arpl
outsb
in
cmpsl
push
xchg
iret
fcoml
clc
divb
dec
jge
push
addr16
jecxz
cmp
mov
and
mov
or
in
mov
mov
into
push
sbb
testb
cmp
fistpll
cmpsl
cmp
adc
cltd
movb
adc
add
pop
pop
loopne
into
sub
pop
mov
sbb
lock
dec
adc
mov
sbb
push
mov
inc
jnp
and
pushf
lods
dec
pusha
jmp
enter
out
fs
insb
mov
add
bnd
add
push
pop
push
dec
jp
fnsave
cli
adc
sbb
lahf
and
outsl
mov
cmp
xor
xchg
stc
xchg
xor
sub
inc
fdiv
pop
repnz
push
idivl
cwtl
mov
in
add
mov
mov
sub
push
mov
mov
xorl
jae
test
cmpsb
mov
inc
in
rolb
cmpsl
push
sahf
pop
xchg
aam
cmp
xor
cli
adc
mov
add
push
push
popf
pusha
enter
lea
pop
and
jg
lods
daa
in
scas
sub
mov
int
mov
insb
aas
mov
mov
lret
lods
mov
fidivs
mov
das
cld
push
movsl
pop
dec
das
je
inc
ret
adc
and
mov
imul
int3
daa
jecxz
add
rol
adc
pop
cld
enter
jb
mov
arpl
out
insb
jnp
push
test
test
and
cmp
stc
aam
sbb
pop
leave
cld
lahf
push
bound
xchg
sub
xor
scas
sub
cmpsb
divb
fabs
or
xchg
int3
or
dec
movsb
xchg
outsl
push
mov
push
cs
sbb
enter
mov
sbb
out
adc
or
out
out
sbb
fsubs
in
clc
out
mov
sub
sub
pop
pop
movsb
push
imul
rorb
dec
icebp
cmpsl
mov
jge
imul
cmp
lret
jge
enter
sbb
iret
sbb
push
pop
das
rclb
inc
mov
pop
stos
cwtl
adcb
out
pushf
adc
cwtl
in
cmp
mov
push
or
mov
sub
addr16
xchg
pop
jge
mov
mov
cmp
mov
mov
jae
xor
testb
cmpb
es
push
outsl
int
or
popf
add
pop
xor
or
xchg
cmp
call
pop
xlat
insl
lock
daa
or
sub
loope
mov
cmc
divl
xor
jl
movb
shl
inc
cmp
sbb
xor
mov
push
pop
cmp
out
in
mov
and
sarb
hlt
xor
push
xchg
test
dec
mov
xchg
push
std
xor
mov
add
sub
dec
pop
cwtl
or
pop
das
fcomps
ss
loop
jl
sbb
pop
sbb
and
xchg
fxam
shll
sub
aaa
aam
add
jecxz
mov
cli
lods
inc
lret
pushf
push
ljmp
sub
or
stos
in
inc
push
cmp
or
stc
push
loope
sbb
mov
jecxz
add
sahf
sub
jb
sbb
ror
dec
repnz
dec
push
xor
jae
dec
fsubs
dec
outsl
add
shll
sahf
repnz
scas
iret
cmp
adc
mov
adc
pop
mov
pop
cmp
inc
and
dec
mov
xchg
push
cltd
jno
stos
mov
xor
into
sti
mov
xor
gs
xchg
lret
push
outsl
xor
mov
aad
cmp
andb
add
ja
cmp
mov
inc
lds
ret
out
scas
inc
or
inc
outsb
hlt
arpl
push
stos
enter
jae
xchg
cmp
loop
jno
out
inc
bound
cmp
mov
xor
sub
pop
add
fbstp
pop
mov
add
sub
xchg
inc
xchg
bound
push
jb
pop
pop
pusha
push
mov
adc
push
inc
fisttps
out
mov
pop
mov
pop
push
int
push
mov
xor
jns
fs
dec
sub
add
mov
sbb
mov
out
enter
sub
cs
jb
sub
orb
fsts
push
jb
dec
daa
mov
jg
aam
dec
xor
xchg
cmc
pop
push
or
xchg
addl
mov
out
xor
imul
dec
xchg
popa
push
mov
add
and
mov
push
mov
sub
jp
call
mov
in
xchg
push
jge
xor
add
xchg
push
bound
iret
mov
add
imul
addr16
and
aad
das
push
outsb
pop
inc
mov
gs
push
enter
ss
mov
or
movsl
xchg
les
andl
push
data16
and
xchg
mov
cmp
jae
xchg
data16
xchg
dec
jge
lock
push
clc
mov
dec
jb
sub
push
in
out
cli
inc
data16
adc
dec
jno
jnp
call
xchg
mov
and
mov
inc
test
pusha
mov
mov
pusha
fwait
arpl
xor
sub
adc
fwait
pop
mov
mov
adc
xchg
mov
lock
bound
sbb
fcmovu
cwtl
pop
sub
sbb
inc
test
mov
mov
mov
sub
icebp
dec
fcomp
jbe
mov
adc
cltd
push
data16
adc
aaa
imul
scas
aad
pop
and
inc
mov
inc
or
adc
mov
inc
sub
call
pop
mov
leave
shr
and
xchg
pop
mull
loopne
out
fsubl
pop
test
sub
xor
aad
xchg
ss
add
jl
in
push
mov
mov
xor
xchg
enter
add
pop
bound
add
and
fbstp
mov
sti
add
mov
sub
push
cmp
xchg
mov
loop
mov
call
arpl
sbb
call
xchg
scas
fldt
lods
or
jb
les
sahf
xor
inc
pop
les
popf
push
sub
popf
xchg
xchg
mov
aaa
or
imul
mov
xor
mov
jne,pt
enter
push
fwait
cmp
clc
xchg
inc
ret
es
nop
add
sbb
pop
js
andl
fmull
ss
add
jne
jo
scas
lcall
aam
addr16
pop
out
inc
mov
jecxz
pop
inc
stos
add
pop
jmp
add
pushf
or
dec
inc
xor
enter
fstps
mov
lret
sbb
outsl
push
sbb
ds
cwtl
pop
das
pop
std
xchg
mov
in
push
bnd
int
movsl
in
lcall
mov
cmp
cs
add
lcall
adc
lret
lahf
adc
cmp
loop
xchg
dec
ret
sti
push
testb
or
mov
add
movsl
cmp
cmp
push
aad
out
inc
mov
mov
fcomps
es
mov
sahf
and
xor
stc
sbb
mov
mov
dec
mov
pop
fwait
add
aaa
js
out
push
xchg
push
push
in
or
mov
xor
je
inc
xor
ss
inc
imul
sti
jecxz
cltd
mov
xor
xlat
jle
and
cmc
leave
in
xor
call
mov
fsubs
imul
dec
aad
andl
mov
dec
xchg
movsb
xchg
ret
xchg
jb
cmp
xor
mov
cs
cmp
mov
xor
dec
cmpsb
daa
mov
mov
lea
xchg
cli
or
inc
mov
xor
int3
incl
aaa
leave
mov
lods
nop
pop
popf
dec
ss
xor
mov
mov
sub
rcl
loope
mov
clc
jnp
push
push
sbb
inc
cmp
cmc
shrb
jns
es
into
movsb
mov
loopne
mov
jae
fnstenv
aaa
cmp
fdivr
faddl
dec
movsl
aaa
mov
fdivs
adc
mov
outsb
push
test
sahf
pop
push
cmp
jo
les
mov
mov
push
mov
incl
dec
sbb
fcmovnb
or
cmpsl
sbb
lea
pop
pop
mov
std
jne
mov
inc
cmc
xchg
jnp
push
arpl
daa
mov
in
mov
pop
push
jbe
outsb
aad
lret
pop
mov
sbb
sub
fsubl
push
mov
imul
lahf
cmp
add
sub
or
aam
shl
dec
push
mov
push
stos
mov
xor
lret
dec
cmp
rcrb
mov
jnp
int3
cmp
ret
clc
sub
dec
mov
or
lret
scas
enter
sub
push
xor
mov
int
popl
cltd
popf
data16
aas
mov
lret
nop
imul
inc
adc
sbb
cmp
xchg
movsl
scas
jb
pop
inc
dec
xchg
dec
in
dec
jle
jecxz
pushf
sbb
push
inc
add
push
ret
in
push
rcl
sbb
sbb
outsl
sub
and
push
stc
pop
loope
mov
jge
cld
mov
and
aad
sub
insb
cmp
data16
es
jae
iret
sub
jno
fstl
mov
mov
sbb
inc
in
xor
xlat
adc
pop
jne
adc
add
fst
ja
out
fildl
sbb
mov
pop
outsb
or
dec
cwtl
adc
push
inc
lea
adcb
xchg
fsub
rorl
idivb
imul
repnz
sbb
add
fdivs
jl
push
mov
loope
dec
mov
mov
fcmovnu
fimuls
sbb
xor
negl
test
scas
fsts
or
mov
mov
push
push
repz
test
jge
add
xchg
pop
or
inc
std
jae
imul
pop
mov
inc
nop
iret
or
pop
sahf
aad
sbb
stc
or
repz
aad
sbb
sbb
daa
andl
mov
push
out
fidivrs
mov
cmp
lock
into
es
jmp
fs
push
mov
inc
cld
arpl
getsec
pop
adc
insb
dec
xchg
loope
mov
mov
outsb
leave
sub
or
fwait
pop
jnp
push
xchg
mov
xchg
jmp
mov
je
sarb
mov
dec
mov
fcompl
push
out
test
jo
test
insb
mov
jo
jmp
dec
and
inc
cli
push
mov
mov
and
xor
test
aam
incb
mov
leave
inc
pusha
sar
testb
dec
jg
int3
les
int3
out
sbb
add
minps
icebp
cli
sbb
aam
jle
xor
andb
jns
sbb
loopne
gs
pushf
fwait
xchg
pop
mov
cmp
cmpsl
adc
xor
addr16
cmp
xchg
mov
dec
adc
andb
das
sbb
add
cmp
inc
sub
rcll
add
jbe
jg
add
mov
adc
aas
cltd
fistpl
cld
jg
inc
cmp
mov
cmp
mull
jge
pusha
pushl
ja
stc
fisttpll
push
movsl
call
xchg
dec
xor
shl
cmpsb
dec
test
stc
push
aas
xor
call
nop
sbb
push
sahf
movsl
leave
dec
stc
ret
negl
push
push
inc
cmp
lock
mov
pusha
mov
fldcw
fsubrl
sub
popf
aam
stos
fdivr
sbb
inc
addr16
xchg
bound
dec
or
dec
enter
incl
cmp
adc
ds
fdivp
inc
aad
cmc
hlt
lret
and
xchg
insb
mov
lds
inc
in
aaa
push
fcomp
aas
out
dec
add
inc
das
hlt
in
in
jbe
or
and
enter
aas
and
lock
jno
adc
mov
sahf
mov
or
lds
push
stos
jo
fdivs
into
pop
fnstcw
ss
pop
imul
or
xchg
mov
rcrb
mov
fildll
cltd
cmp
pop
int
mov
add
and
test
push
mov
xchg
leave
push
mov
mov
hlt
or
rcrl
jl
xor
sbb
lods
dec
add
xchg
add
cltd
iret
loope
cmp
sahf
cmc
mov
cltd
test
fisubrs
mov
mov
inc
out
mov
cld
les
jg
xlat
sbb
rcll
mov
les
outsb
out
push
inc
mov
jno
cmp
xchg
sbb
cmc
push
aad
insl
ja
dec
push
pusha
invd
jp
insl
ljmp
adc
push
cmp
scas
inc
mov
decl
int
cmp
pop
ja
dec
xor
adc
cmp
sub
jg
imul
in
push
pop
enter
enter
cli
std
lods
out
mov
or
adc
and
xor
pop
pop
sub
mov
jge
add
cwtl
mov
jge
inc
lods
cwtl
mov
outsb
cmp
in
xchg
cltd
xchg
jne
jg
sbb
mov
cmp
inc
pop
cld
pop
jb
pop
and
mov
adc
das
call
cmc
xor
adc
mov
lock
mov
lcall
sub
ret
inc
pop
xor
hlt
enter
sub
ja
cltd
movsb
or
xchg
pop
cmp
cmc
xchg
pop
loope
faddl
inc
int3
sub
sahf
rorl
or
sub
or
dec
xchg
out
mov
jmp
repz
or
je
xchg
mov
cltd
cmp
scas
mov
int3
stc
jl
sub
dec
adc
repnz
push
ret
and
push
fidivl
dec
jmp
in
out
push
xchg
inc
in
push
sti
movsl
lcall
mov
lods
inc
in
mov
adc
fnstcw
xchg
in
xchg
loopne
adc
sbb
xchg
push
cmp
adc
sbb
adc
je
jo
and
jp
pop
dec
lret
jne
xor
xchg
enter
mov
mov
cmpsl
stos
xchg
adc
lock
push
in
jecxz
sbb
fsubrs
fistpll
or
cmp
or
push
fnsave
pop
mov
pusha
sub
popa
ret
movsl
xor
sub
psubb
push
lret
sub
cmp
icebp
aaa
push
xor
je
adc
fldt
addr16
jp
outsl
mov
pushf
sub
cmc
repnz
xor
dec
cmp
mov
push
or
loop
mov
dec
outsl
outsl
pop
cmpsb
iret
cmp
sub
xchg
mov
xor
outsb
xor
mov
xchg
mov
xchg
xchg
lea
sbb
test
sahf
jnp
mov
movsl
pop
xchg
push
aad
pop
push
aas
push
icebp
dec
adc
loopne
cmp
pop
sub
sbb
jne
lret
sbb
roll
aas
pop
jecxz
cmp
and
inc
sarb
mov
loopne
call
fildl
push
in
mov
sub
mov
push
or
stos
push
mov
faddl
mov
pop
sbb
adc
lods
pop
add
xchg
dec
dec
ror
jb
push
sbb
mov
add
dec
imul
pop
xlat
jne
in
mov
ja
xor
adcl
push
or
adc
or
out
jg
sti
lahf
out
lcall
mov
sbb
pop
xchg
decb
es
mov
std
testb
icebp
xor
test
sti
or
ret
push
into
imul
popf
icebp
sub
es
pop
fcompl
fiaddl
out
fimull
pop
aam
ss
push
stc
outsb
stc
push
sarb
jmp
push
inc
pcmpgtb
jns
dec
push
movsb
xor
ss
rclb
cmp
xchg
iret
loope
popf
sbb
sub
xchg
push
mov
mov
jbe
ficompl
mov
or
mov
add
movsb
mov
inc
subl
in
les
push
clc
idiv
jb
or
adc
testb
fcoml
adc
stc
xor
or
xor
pop
daa
cmp
pushf
pop
inc
jbe
test
orl
loope
pop
dec
pop
lcall
mov
test
std
sti
testl
daa
in
cmp
sub
cmp
xchg
cmpsl
icebp
pop
mov
loope
dec
faddl
pop
push
mov
cmpsb
mov
mov
into
or
ljmp
adc
repz
adcl
cs
mov
fnsave
in
ja
cmp
push
adc
aaa
sti
pop
test
pop
mov
add
mov
imul
inc
repz
dec
jg
and
adc
and
inc
mov
inc
je
push
xor
mov
dec
dec
imul
mov
ret
mov
loope
js
and
cmc
xchg
xchg
ljmp
repz
mov
test
stc
es
sar
repz
and
repz
push
clc
and
cmpsl
pop
mov
adc
push
cltd
arpl
lret
shll
xchg
mov
jecxz
fsubr
loopne
pop
lret
movsl
inc
out
insb
mov
pop
pushl
iret
cmp
ret
jns
pushf
enter
call
mov
sub
or
ja
int
mov
xchg
dec
int3
fucomi
outsb
xor
dec
imul
adc
aas
inc
fwait
out
mov
and
cmp
add
pop
cmp
cs
mov
sub
push
pop
jno
lret
sub
leave
pop
in
dec
inc
sub
repz
pop
xchg
ja
sbb
cld
insb
test
out
xlat
cli
out
sbbl
cld
iret
pop
or
jno
dec
testb
rclb
mov
int
aam
jne
mov
das
cmc
pop
mov
bound
or
adc
pop
test
mov
jne
inc
jbe
jge
fs
inc
daa
fidivrs
or
mov
outsb
and
or
repnz
pop
push
pop
sub
and
xchg
hlt
lock
add
mov
adc
pop
xchg
add
jb
stos
dec
sub
xchg
mov
je
inc
or
push
test
ret
fprem
or
cli
jbe
insb
xor
in
out
mov
mov
shl
lods
std
popl
mov
leave
in
push
lahf
xor
xchg
sub
cmpsb
fbld
or
iret
dec
out
jp
pop
mov
iret
dec
rorb
rolb
mov
dec
aad
fdivrl
and
call
adc
xor
je
fidivs
and
out
arpl
mov
sbb
lea
push
fadds
stc
movsb
int3
and
cmc
mov
test
insl
xor
sbb
push
sub
pop
or
out
adc
pop
sbb
inc
scas
push
pop
pop
frstor
leave
xor
xor
int
sarb
loope
iret
aas
mov
jge
shrl
xor
mov
mov
fs
ret
dec
mov
fdivs
fcoml
dec
and
and
push
out
divl
fstpl
fstpl
sbb
sarl
mov
mov
test
inc
icebp
push
mov
mov
dec
stc
sub
imulb
loopne
jbe
popf
loopne
sbb
mov
jbe
ret
adc
pop
dec
jne
push
mov
inc
push
jmp
or
sbb
inc
lods
in
pop
stos
cwtl
cs
adc
mov
je
std
fstp
push
or
iret
sbb
mov
shlb
and
popf
push
lret
fistpll
jo
adcl
xchg
push
scas
jecxz
lock
or
bound
pop
jecxz
xlat
mov
and
imul
inc
movsb
std
adc
xor
test
pushf
mov
loope
out
add
js
lds
jmp
inc
lds
and
aas
sbb
sub
sbb
cs
push
mov
stos
std
mov
dec
mov
repz
mov
sahf
mov
adc
loope
shll
mov
jle
xchg
sarl
lock
add
pop
push
xchg
lods
jl
lds
ret
and
mov
inc
mov
dec
xor
repz
adc
hlt
fbld
xorb
dec
and
rcrl
mov
push
add
movsb
dec
sbb
inc
dec
jno,pt
sub
adcl
dec
fdivs
inc
insl
push
pop
shrb
adc
aam
xlat
jmp
popa
sub
dec
mov
rcrl
push
lea
ret
scas
lcall
dec
mov
dec
xchg
sbb
leave
loop
sub
and
dec
mov
push
icebp
cmp
imul
dec
dec
jbe
mov
movsl
mov
scas
cli
pusha
xchg
lds
xchg
data16
push
dec
adc
mov
jbe
and
xor
inc
sub
fbld
fsubs
test
push
pop
or
inc
xor
or
jle
cwtl
xor
xlat
fsubrl
or
inc
mov
dec
xchg
cmp
dec
sbb
call
movsb
pusha
mov
popf
int3
push
clc
pop
pop
add
xchg
jmp
int
jne
jmp
mov
shll
les
adc
push
test
mov
pop
mov
pop
fwait
xlat
les
popa
pop
push
leave
inc
mov
fiadds
insb
sub
jo
jbe
out
dec
aad
test
test
mov
push
lods
test
aaa
jp
jbe
dec
jbe
pop
fdivs
xor
data16
les
or
in
pop
movsb
jp
popl
aad
push
mov
sub
inc
dec
stc
sub
lret
imul
and
jle
xor
mov
mov
lea
mov
test
push
jle
inc
mov
jo
adc
lea
pop
and
sbb
jne
and
pop
sbb
add
mov
ds
mov
xchg
xor
pop
loop
imul
inc
or
sbb
sbb
into
inc
xchg
sbb
mov
stc
pusha
ret
mov
gs
adc
jge
dec
enter
psubw
add
sbb
inc
rcrl
rorl
mov
push
inc
and
jge
int3
stc
cmp
das
pop
js
push
out
push
push
dec
cmp
push
mov
pop
cmc
mov
inc
dec
hlt
push
cmp
mov
lods
popa
and
dec
lret
xchg
sub
jae
jle
jle
xor
dec
sbb
addr16
jae
jmp
or
mov
pop
mov
mov
pusha
push
jo
dec
lret
or
les
and
sub
in
xor
rep
movsl
push
je
lods
inc
pop
sbb
scas
xlat
stos
imul
fld
add
fldt
adc
mov
mov
insl
mov
pop
ja
daa
rolb
or
rcr
shrb
les
repnz
push
mov
test
hlt
push
imul
daa
shr
xor
int3
cwtl
adc
ja
mov
int
ret
les
jecxz
cmp
rep
xor
push
rorb
into
cmp
cmp
push
mulps
sbb
cli
inc
testl
out
mov
out
fyl2x
in
dec
xchg
in
ffreep
push
adc
mov
shll
pop
adc
aaa
dec
je
mov
and
and
add
mov
int3
je
in
push
test
je
and
mov
cmpsl
rcrl
sbb
inc
or
shll
inc
popf
das
lock
xlat
test
pop
adc
jb
mov
jmp
mov
sarb
mov
fadds
call
jne
out
add
shr
icebp
dec
imul
cwtl
mov
inc
mov
adc
adc
lret
mov
jp
icebp
or
adc
es
pop
pop
add
pushl
push
xchg
push
js
push
push
test
sbb
sbbb
pop
data16
xchg
pop
fwait
cmpsl
push
jbe
or
mov
in
and
sbb
sarb
repz
pop
sbb
pop
lcall
lcall
xorl
jl
inc
pop
xchg
mov
push
sub
sbb
lcall
adc
ljmp
pop
dec
scas
jno
das
mov
iret
xchg
leave
mov
and
pop
dec
std
mov
push
push
out
sbb
dec
mov
pop
adc
sbb
je
mov
lods
xchg
pushf
loop
in
sbb
cmp
insl
and
sbb
cmp
popf
or
jo
sub
rorb
mov
mov
cmpl
sbb
inc
mov
cwtl
and
mov
mov
jb
inc
adc
xor
xchg
ds
loopne
das
jmp
mov
out
and
cmp
cli
gs
shll
inc
hlt
dec
or
mov
iret
pop
xor
shll
jmp
ret
js
jecxz
cmpsb
jae
adc
insb
xor
fnstsw
fsubs
xchg
mov
inc
sbb
stos
jge
jnp
push
les
pop
inc
lods
test
add
call
add
lret
jecxz
push
sub
loop
sub
rcr
mov
aaa
loope
or
mov
or
cmp
cmpsb
sbb
js
xchg
push
cmp
jb
pop
adc
lock
lcall
and
out
jne
xor
popa
fisttpll
adc
rorb
adc
xchg
or
push
dec
add
and
add
pop
push
leave
jnp
cmpsb
adc
dec
fldenv
imul
push
loope
sub
xchg
or
dec
insb
pushf
or
sbb
push
push
call
mov
xchg
ret
sbb
dec
int3
cmpsl
ljmp
push
mov
sbb
sub
das
out
jb
das
jl
push
lock
jne
xchg
mov
popa
and
outsb
add
push
push
sbbb
lret
add
pop
push
je
push
rcr
and
fistpl
adc
fwait
sbb
mov
mov
lds
lea
or
arpl
mov
stos
push
xchg
ja
jae
sbb
sahf
pop
iret
mov
in
ja
and
enter
mov
ffree
mov
or
or
pop
inc
jne
andb
pop
xor
mov
ret
imul
lret
sub
mov
sbb
insl
sbb
jb
or
outsl
test
popa
jge
dec
push
mov
adc
je
popf
jp
leave
rorb
cli
mov
into
xor
insb
sbb
in
mov
sub
aas
inc
mov
ficoms
addr16
ret
jecxz
and
xchg
ds
cmp
dec
cld
mov
mov
cld
cmp
ret
mov
loopne
and
inc
pop
aad
ss
pop
push
mov
nop
lret
stc
push
mov
or
rorl
dec
sbb
pop
mov
mov
add
popf
ds
push
fs
sbb
cmp
cwtl
dec
cltd
imul
addr16
iret
lods
ret
into
ja
insl
mov
sub
in
jbe
cwtl
and
stc
ss
scas
gs
fldcw
push
mov
loopne
test
xor
xor
jge
jae
repnz
out
shl
mov
cmpsb
fcomps
in
adcb
rcrl
mov
imul
mov
xor
xchg
sbb
shrl
js
push
push
aas
lcall
jg
add
imul
pop
mov
lods
push
add
loope
fidivl
mov
xchg
test
out
fiadds
sub
lods
mov
in
jne
push
mov
or
sti
mov
cmpsl
push
es
jg
xchg
jns
in
call
test
cmpsl
pop
aam
test
sub
xlat
imul
add
rcrb
cwtl
cmpl
gs
ja
lods
fildll
fdivrs
sbb
xor
add
or
and
dec
xchg
push
insb
xchg
cmp
push
adc
aad
adc
fs
lods
out
cmp
fwait
jbe
and
clc
fisubl
sbb
xchg
push
inc
jo
mov
push
lods
mulb
jne
cltd
add
jb
cmp
push
xchg
mov
mov
sub
imul
xor
push
fcoms
and
sarl
bound
xchg
pop
or
ret
add
adc
or
into
insb
roll
in
or
sub
mov
cmc
inc
je
outsl
ja
and
shlb
lahf
cmpsb
pop
aaa
xchg
fwait
mov
insw
aaa
push
nop
dec
adc
das
dec
loopne
mov
inc
subb
add
mov
fisubrs
lods
adc
push
and
jae
push
or
adc
push
shl
cmp
jno
out
dec
aam
sbb
adc
icebp
mov
aad
pop
adc
fidivrl
mov
mov
in
mov
push
mov
js
jg
mov
or
lret
fidivs
or
sub
out
bound
xor
xorl
into
mov
test
jb
lods
xchg
hlt
data16
int3
scas
adc
xor
sbb
xchg
into
add
mov
or
out
dec
jae
push
adc
xor
push
pop
loop
ret
jns
into
rorb
mov
pop
xor
adc
aaa
out
insl
int
gs
imul
sub
inc
sbb
sub
aas
sub
fcomps
or
movsl
dec
push
adc
movsb
lret
cli
in
mov
cmpsl
adc
dec
mov
call
es
inc
in
lahf
xchg
lea
or
inc
push
shlb
mov
sbb
mov
mov
cwtl
xor
in
ret
adc
std
movsl
push
mov
add
adc
and
sub
mov
lods
cmpsb
mov
and
bound
lahf
cmp
add
fdivs
sti
insb
fs
cmp
jnp
movsb
into
jge
or
fldt
rolb
mov
mov
cltd
inc
bound
cmpsl
push
mov
fcompl
mov
pop
mov
bound
jl
mov
lds
push
dec
inc
dec
and
and
andb
xchg
arpl
and
loop
sahf
dec
jbe
cmc
mov
or
arpl
es
divl
adc
fstps
mov
fisubl
or
jle
mov
xchg
xchg
push
faddl
dec
das
repz
mov
fldcw
cmp
adc
mov
testl
fwait
ja
repnz
insb
add
mov
cltd
mov
adc
ret
ja
sub
sbb
adc
outsl
arpl
sahf
mov
xchg
xchg
mov
ljmp
in
lret
call
sbb
in
rolb
test
les
jecxz
fcoml
and
repnz
or
cmp
push
xor
mov
add
pop
or
rcrb
push
daa
dec
into
test
mov
mov
sub
mov
or
fnstcw
jne
mov
arpl
sahf
movsl
rol
sub
mov
inc
add
sahf
xor
jl
push
add
jmp
sahf
sbb
push
andnps
aad
mov
push
dec
movsl
mov
jo
int3
inc
dec
dec
mov
xor
mov
xor
in
call
popa
jl
jno
rep
jne
sti
sysret
fisubrl
adc
clc
xlat
rcrl
mov
inc
pop
cmp
pop
int3
fstpl
test
mov
push
cltd
adc
pop
aaa
xchg
or
cs
rolb
mov
cmp
xchg
sub
push
pop
pushf
and
mov
in
and
in
stos
dec
icebp
inc
mov
add
scas
repnz
sbbl
rcr
or
mov
push
pop
add
gs
push
push
addr16
and
test
fsubrs
adc
pop
mov
push
add
adc
mov
push
loop
imulb
jmp
ficompl
xorb
movsl
adc
shl
and
negl
dec
mov
fmull
mov
jnp
dec
cld
test
popf
sub
dec
es
jbe
loope
inc
insl
mov
pusha
adc
dec
jo
jns
mov
mov
int3
jbe
and
mov
iret
cld
fcmovbe
cmp
out
sub
xchg
jno
cld
fstpt
pop
and
int
insl
repz
add
push
lods
test
or
jecxz
cli
jl
scas
gs
adc
push
jg
sti
inc
jmp
fndisi(8087
lds
sarb
pop
push
jae
dec
and
popa
cli
cmpsb
outsl
sti
repz
jmp
sbb
in
aam
dec
sub
ret
mov
in
jne
movsl
lahf
fisttpl
scas
movsb
rcrb
xor
decl
cltd
or
int
or
sbb
push
hlt
test
jns
sar
loopne
xchg
adc
cmp
scas
jns
xor
xor
aam
inc
stos
orl
mov
cmp
mov
xor
xchg
mov
cmp
cltd
sub
sub
jbe
clc
push
neg
repz
scas
jb
rcrl
arpl
fsubrs
dec
push
sub
sub
divb
xchg
sbb
xor
out
lcall
dec
popa
jmp
lret
cmp
sub
int3
push
fnstcw
xlat
and
in
jb
movsl
stos
mov
sti
mov
insb
enter
inc
loope
imul
fwait
jno
mov
loop
push
and
js
shrb
enter
leave
into
int
mov
aaa
mov
mov
nop
adc
ds
push
jp
lods
call
sub
xchg
lret
addr16
loop
les
idivb
insb
mov
pop
call
lret
pop
sbb
jae
push
jl
add
jae
xor
sahf
outsb
mov
pop
cli
xchg
outsb
int3
and
fcmovu
add
xchg
fisubrs
in
push
cmp
push
shll
lcall
lea
dec
loop
dec
xchg
dec
mov
add
lea
sbb
lods
scas
les
popf
cmp
ret
mov
in
mov
test
movl
lcall
inc
rol
xchg
xchg
inc
xchg
into
in
test
je
icebp
pop
xor
cld
loope
jg
les
inc
xchg
ss
fcmovne
idivl
push
mov
imul
mov
dec
lods
imul
jb
sbbb
mov
fists
inc
dec
mov
popa
ds
push
ja
jg
push
daa
jae
jnp
sub
lahf
xchg
cli
pusha
inc
mov
jp
and
incl
sbb
cmp
xorb
mov
jmp
push
sbb
popf
or
add
or
test
cmp
pushf
mov
jbe
sti
sti
int3
lret
int
jmp
bound
ja
cs
int3
adc
test
lock
fimuls
jb
imul
mov
add
push
push
mov
sarl
in
sbbb
cld
in
ret
cmp
in
jb
push
lret
mov
push
jo
add
subl
xchg
out
sub
cltd
and
pusha
mov
dec
inc
sbb
out
pop
gs
push
pop
ds
iret
jns
sub
xchg
xchg
jnp
dec
sbb
xchg
adc
ljmp
out
dec
jns
and
call
cli
popf
and
push
outsl
dec
sbb
mov
push
jg
sbb
pop
cmp
dec
pop
jge
adcb
push
out
ret
fsubs
pop
xor
pop
xor
pop
add
sub
daa
cmp
pop
cmp
arpl
xchg
addl
movsl
aaa
stc
sbb
lret
add
push
dec
mov
and
out
testb
pop
or
sbb
in
inc
xor
aad
aam
adc
ss
fnsave
gs
iret
xchg
test
pop
sti
xor
outsb
clc
cmpsb
imul
lea
lcall
pop
xchg
ret
fnstsw
lcall
mov
push
iret
inc
notb
test
movsb
add
ja
cwtl
lahf
pop
mov
push
add
lret
fsubrl
mov
shll
xor
or
lret
push
mov
adc
xchg
pop
mov
pop
mov
psrld
sahf
sarb
jnp
mov
lcall
les
in
popa
mov
les
cmpsb
lock
iret
in
jmp
ret
push
and
pusha
mov
adc
add
dec
add
cmp
xchg
dec
jp
and
sub
ljmp
mov
cmp
out
jbe
xchg
jmp
nop
out
mov
ja
test
inc
or
shrl
clc
enter
out
in
push
push
inc
andb
sub
mov
adc
cmp
mulb
adc
inc
scas
dec
scas
into
jle
and
mov
push
add
out
pop
sbb
push
pop
testl
stc
push
lock
stos
xchg
sbb
cmp
aam
in
xor
insb
push
subl
inc
cli
ret
pop
xor
je
add
jg
sbb
adc
stos
xchg
pop
push
pop
call
and
xchg
icebp
sbb
inc
mov
pop
ret
mov
mov
xor
ljmp
ja
pop
mov
pop
stos
push
inc
leave
dec
stos
fs
mov
mov
fs
scas
mov
and
mov
addr16
mov
sti
stos
mov
in
fsubrs
mov
scas
jge
out
stc
leave
cld
and
stc
ret
std
xorb
pop
xor
pop
add
and
stos
loop
loopne
outsl
rorl
mov
push
add
test
jne
in
inc
push
addb
mov
pop
adc
inc
scas
xor
or
or
imul
ja
sub
loop
imul
mov
jnp
add
add
loopne
inc
int3
cmp
push
test
mov
bound
mov
out
sbb
inc
jl
push
add
ds
mov
fisubrl
add
mov
js
jo
or
cs
fwait
sub
mov
aam
sbb
jle
xchg
adc
cltd
sbb
dec
mov
pushf
cmp
add
rclb
sub
pop
push
pop
jle
mov
mov
popf
mov
faddl
add
stos
sbb
inc
repz
leave
cli
aad
test
bnd
push
cs
mov
sub
cmp
pop
add
fs
adc
xchg
or
out
sbb
shrl
les
jns
pop
movsl
jne
mov
leave
pop
scas
loope
dec
sbb
les
xorl
sahf
or
notb
into
and
sbb
add
xchg
repnz
fsts
arpl
dec
dec
gs
rcrl
or
sahf
add
cmc
sub
imul
incb
ljmp
mov
dec
inc
cmpsl
push
xchg
gs
adc
adc
adc
inc
repz
or
iret
iret
les
xchg
xor
mov
nop
or
xor
loopne
fistpll
fcompl
in
xor
and
cmp
pop
pop
lret
in
stc
xchg
inc
loope
sahf
mov
pushf
sbb
mov
mov
and
pop
dec
clc
or
outsb
neg
cmp
dec
lahf
lahf
xor
mov
fidivrs
lret
pop
push
fildl
adc
jg
jg
in
outsl
push
inc
inc
cmpl
jp
or
ja
arpl
ret
cs
pop
das
aaa
cmpsb
add
cmpsb
xchg
push
imul
mov
rep
dec
jae
nop
and
sub
mov
push
lcall
or
in
lret
pop
repnz
pop
aam
cmpl
push
xor
inc
xor
xlat
addr16
adc
adc
faddp
std
pop
lods
pop
mov
hlt
mov
cld
bound
sub
loopne
pushf
call
fs
or
movsl
pop
mov
dec
inc
xchg
movsb
sub
enter
jb
lret
stc
sbb
dec
jecxz
negl
xlat
movsl
out
fisubl
sub
sub
addb
jecxz
mov
out
enter
add
stos
xchg
rcrl
test
notb
jnp
aaa
pop
imul
sti
sub
sahf
rorb
adc
pop
jle
addr16
jge
or
lods
lods
ja
mov
arpl
xor
inc
mov
jae
loopne
test
js
out
jno
xchg
ja
inc
cli
jae
and
cmp
daa
cmp
adc
push
dec
sar
inc
cmp
xchg
mov
xor
fwait
cmp
pop
icebp
push
xchg
mov
cwtl
pop
enter
mov
push
popa
cmp
scas
and
insb
ret
inc
iret
std
mov
pop
ret
inc
movsl
jo
dec
pop
dec
clc
sbb
pusha
aad
stc
imulb
icebp
in
imul
push
roll
or
inc
mov
pop
push
popf
mov
push
cmpsl
xchg
pusha
sub
sbb
pushf
xchg
fs
xchg
hlt
es
add
scas
sbb
into
mov
push
jp
aaa
push
xchg
daa
or
lock
pusha
cli
sti
sbb
mov
xchg
arpl
or
cmp
pop
dec
jno
dec
adc
push
push
mov
scas
mov
cmpsb
xor
dec
sbb
lcall
pop
cmp
imul
inc
je
xlat
es
imull
jge
mov
mov
int3
sahf
lea
push
push
ljmp
fld
jmp
dec
push
cmpb
or
fbld
push
sbb
insb
xor
jae
mov
andl
nop
pop
loopne,pt
mov
call
lret
repz
mov
xchg
add
out
lahf
cmpsl
pop
outsb
xchg
mov
out
mov
and
push
sar
mov
clc
xchg
lods
push
jp
cltd
inc
lahf
je
stc
push
sub
ja
roll
sar
les
xor
ret
mov
nop
mov
popa
pop
mov
cs
xlat
xchg
js
cmc
lahf
push
cltd
imul
shlb
je
hlt
cmp
sub
dec
pusha
fwait
and
fwait
lods
stos
pop
jle
flds
outsl
cmp
dec
push
lock
aad
out
push
fadd
dec
and
push
xchg
stos
scas
call
or
cwtl
mov
into
cli
push
hlt
push
notl
repz
push
aas
enter
and
jbe
aaa
mov
push
pushf
fldt
sbbl
ss
dec
jecxz
adc
mov
inc
mov
or
pop
xchg
and
mov
cld
pop
mov
inc
clc
imul
ficoms
or
mov
and
jno
imul
pop
fcmove
insb
push
and
jmp
popf
sahf
xor
xchg
jmp
icebp
daa
imul
adc
out
push
mov
sub
int3
adc
push
movsl
sbb
fdivs
add
pop
inc
jo
add
push
inc
mov
mov
sbb
sub
rcrb
cmp
aam
sub
or
mov
or
lret
enter
arpl
and
xor
imul
nop
in
test
cltd
and
inc
ret
add
cmc
inc
arpl
pop
xchg
in
ljmp
cmp
jmp
jnp
aaa
imul
jns
orl
mov
add
mov
push
ret
popf
shll
mov
pop
mov
jbe
mov
push
test
int3
aas
loop
out
ja
test
jo
fdiv
xchg
jno
lahf
stc
inc
xlat
xchg
gs
ss
pop
pop
sbb
inc
mov
xchg
pop
aas
arpl
daa
rcll
sub
cmp
push
fwait
test
mov
jbe
jle
mov
mov
mov
js
dec
in
pop
xchg
rcrb
cmp
cmp
push
cmp
add
cmovbe
inc
ficoms
lret
xchg
mov
and
fnop
loop
insl
dec
lret
outsl
test
insl
jbe
inc
adc
mov
or
aaa
jl
xchg
xchg
jp
fldenv
mov
and
ds
dec
sbb
mov
out
adc
xchg
push
mov
mov
data16
cmpsl
mov
ret
sbbl
dec
inc
sub
push
lods
dec
sub
jecxz
and
ljmp
negl
sub
mov
and
xlat
popf
rorb
aas
xor
les
mov
icebp
jno
cmp
cmp
jb
sbb
and
cmp
xchg
loope
pop
mov
or
or
fs
mov
lods
jmp
enter
jne
jne
xchg
jmp
xchg
addl
push
and
addr16
addr16
in
icebp
mov
mov
mov
mov
aam
xchg
insb
shl
jbe
clc
mov
sub
int
les
ja
cltd
sub
or
lods
divb
js
push
ljmp
shl
xchg
sbb
or
mov
mov
push
pushf
jecxz
pushf
clc
arpl
lods
sbb
add
mov
xchg
das
push
inc
outsb
int
test
pop
push
xchg
inc
mov
fistpl
cwtl
mov
scas
fwait
mov
xorb
pop
xchg
and
incl
sub
sahf
nop
mov
out
or
cmp
mov
pop
aad
jl
pop
rcll
mov
xor
scas
xchg
loop
and
pop
cltd
insb
pushl
lods
or
jge
nop
das
sub
adc
in
ret
add
popf
sub
ja
add
imul
sbb
jle
mov
repnz
aam
lds
jmp
sbb
mov
repz
xchg
pop
and
decl
cmp
and
and
mov
popa
add
xorl
fstpl
lahf
inc
repz
jg
out
adc
jecxz
sbb
xor
test
rep
push
insl
mov
jae,pt
and
mov
je
lret
push
clc
imul
loop
rolb
cld
inc
mov
push
pop
arpl
pop
mov
test
pusha
ja
mov
in
xor
or
inc
mov
add
pushf
sbb
push
mov
push
das
or
aaa
jae
div
inc
cmpsb
and
roll
sbb
dec
mov
gs
or
xor
aad
mov
arpl
xor
inc
and
jns
inc
mov
mov
adc
jg
dec
test
popa
mov
lahf
leave
scas
xchg
pop
rorb
cmc
stc
pop
outsb
fdivl
and
mov
push
lret
xchg
xor
mov
cmp
mov
mov
sbb
std
sub
mov
adc
lock
arpl
pop
sub
or
and
insb
fcmovnu
pop
int3
lock
imul
mov
das
jns
jmp
das
js
and
sti
ljmp
and
push
sub
cmp
ljmp
sti
xchg
jno
xor
pop
pop
pop
mov
pop
or
xor
hlt
pop
xor
imul
mov
dec
cli
loop
adc
aad
and
cld
hlt
test
pusha
enter
fstpt
pop
dec
adc
mov
xchg
in
mov
outsb
out
sti
jo
or
ljmp
stos
pop
mov
imul
cmp
in
mov
arpl
and
test
lock
test
adc
or
push
ret
sub
push
adc
icebp
stos
pandn
jg
adc
jbe
and
rorb
or
std
into
filds
aam
inc
push
shl
pop
movb
cwtl
enter
outsl
pop
lock
inc
rcrb
or
inc
push
mov
pop
cmp
loop
lcall
or
mov
inc
test
mov
lret
push
cmp
adc
add
addr16
or
insl
fsubrs
mov
in
je
pop
or
inc
pop
out
sbb
add
xchg
mov
mov
dec
adc
xor
ljmp
ljmp
lret
das
sbb
dec
xchg
fs
or
lods
pop
jl
add
push
enter
adc
cmpsb
xlat
lods
std
cmp
sbb
jmp
fildl
mov
pop
shll
pusha
mov
xchg
or
ret
test
pop
stos
rcll
lods
inc
xor
pop
cltd
dec
or
imul
sub
cmc
scas
or
dec
aam
add
push
and
or
mov
adc
jl
outsb
filds
fisttpl
insl
mov
jmp
mov
push
xchg
add
xchg
scas
lret
push
mov
rclb
mov
roll
push
in
xchg
jmp
mov
sbb
in
or
xor
jg
fistpll
jl
dec
inc
cli
cmc
sti
dec
mov
jb
hlt
dec
add
rcrl
dec
nop
dec
dec
xchg
stc
loope
cmp
jo
push
adc
ja,pn
mov
addl
outsb
popa
movsl
inc
lahf
out
adc
add
clc
js
pop
nop
or
testl
imul
std
sahf
ss
add
cmp
pop
jbe
cmpsl
cmp
out
or
and
jl
mov
inc
rolb
xchg
jae
repz
daa
aaa
xchg
adc
pusha
xchg
insb
insb
xchg
iret
cld
call
lret
into
mov
xchg
push
push
cmp
and
pop
cli
xor
sti
scas
push
add
mov
xor
and
xchg
xorl
pop
movsb
and
int3
movsl
test
lcall
and
jmp
pusha
xchg
push
dec
push
arpl
push
push
mov
int
mov
stos
xchg
push
sarb
inc
jle
sub
lcall
jo
cld
cwtl
mov
push
stos
jno
cmp
sbb
dec
aas
adc
push
cmp
data16
mov
sbb
nop
repnz
adc
lret
inc
or
cld
dec
clc
lods
mov
jg
pop
xchg
xor
jp
popa
mov
repz
mov
test
sbb
sbb
push
out
js
and
clc
sub
cmpsl
out
and
repz
sbb
daa
xchg
scas
sub
les
push
xor
in
add
ja
mov
seta
xchg
and
jge
arpl
aam
mov
stos
and
lahf
out
push
xchg
pop
jnp
mov
pop
or
cmp
fldt
popa
pop
loop
cmpsl
mov
mov
push
mov
sub
dec
sub
stc
pushf
and
lcall
or
cld
adc
lret
jp
loope
fimull
stc
push
sarl
push
jmp
mov
ret
mov
xlat
cmp
fistps
in
pop
bound
push
push
leave
adcb
stc
das
hlt
nop
xor
or
push
ficompl
pusha
repnz
insl
cmpsb
mov
adcb
pushf
sbb
enter
addr16
adc
loope
inc
jno
jg
jo
clc
pop
lret
stc
in
arpl
leave
mov
mov
scas
or
jle
sbb
jge
xor
cmpsl
pop
cmp
mov
jmp
jb
dec
fs
in
or
mov
push
ja
roll
movsb
mov
pop
pushf
mov
icebp
inc
sbb
dec
add
mov
or
sbb
push
cmp
nop
movsl
or
fidivrl
mov
das
dec
push
push
mov
das
adc
jg
mov
cld
or
and
mov
dec
mov
test
dec
fsubrs
and
adc
jns
outsb
mov
xchg
out
pop
sahf
mov
sbb
inc
rol
cmc
and
xchg
push
int3
int
js
mov
xchg
jbe
mov
inc
push
daa
clc
push
rcr
pop
xor
pop
loopne
xor
int
push
fs
inc
pop
add
jnp
xlat
xor
adcb
push
cmc
dec
sarl
mov
xor
hlt
jg
xor
xchg
push
jno
lahf
mov
ret
cmp
scas
push
scas
out
push
dec
or
sarl
adc
in
add
lock
clc
gs
jnp
and
or
cmp
dec
push
push
test
subl
mov
or
int
repz
jno
lret
push
cld
jne
pop
push
stos
das
sahf
loopne
xchg
test
xlat
sti
xchg
inc
aas
xor
adc
je
nop
jmp
mov
stos
cmc
pop
inc
xchg
add
mov
dec
xchg
scas
push
mov
insb
cltd
int
loope
fwait
cmp
jnp
cmp
jbe
aam
into
and
loope
test
mov
popf
mov
out
mov
mov
cmpsl
shrb
repz
push
je
jnp
pop
stc
jg
xor
inc
stc
insl
cltd
mov
fists
add
sub
xchg
mov
decb
dec
push
test
fwait
jae
fstpt
sti
jmp
jno
jmp
cwtl
pushf
or
aas
or
fs
xchg
and
ja
in
sbb
adc
lds
cmpsl
jae
mov
fildl
lods
dec
aad
add
add
arpl
data16
xor
in
or
jge
iret
xchg
cmp
in
rorl
dec
cmp
pop
pop
xchg
pop
insl
cld
popa
lods
dec
mov
xchg
mov
xlat
xor
pushf
add
jl
rcr
jb
push
push
call
cmp
and
push
stos
dec
mov
inc
pop
jo
mov
adc
popf
js
mov
push
xchg
lcall
push
mov
movsl
or
ljmp
in
sbb
mov
xchg
jno
in
mov
jp
lret
fsubs
add
subb
ds
mov
add
or
mov
in
mov
adc
mov
test
cmc
add
dec
mov
loope
les
inc
sarl
gs
data16
mov
jo
int3
or
outsb
adc
ss
fwait
cmp
test
add
and
adc
inc
sub
jnp
rcrl
sub
jecxz
cmpsb
aad
scas
xor
in
out
addr16
adc
insl
add
mov
xlat
lods
sub
cmpsl
inc
iret
xchg
into
loop
movsb
cltd
sub
push
jge
mov
fsubrs
les
pop
adc
repnz
shlb
neg
jl
std
cmp
xor
and
cmpb
jmp
push
or
and
ja
jge
adc
fnstsw
xor
in
add
jns
in
mov
testb
dec
cmpsl
adc
mov
mov
imul
mov
cmc
dec
push
pop
cmpl
pop
setnp
adc
aaa
divl
cwtl
out
mov
xchg
and
icebp
pop
or
jb
mov
cmpsb
aam
std
inc
add
add
mov
fisubs
cwtl
jge
inc
cli
push
out
andb
pop
ds
imul
leave
push
ja
or
or
iret
mov
insb
cmc
lods
out
adc
aas
div
mov
shl
sbb
xor
mov
mov
ljmp
cmp
addr16
dec
xor
ljmp
push
jp
add
pusha
xchg
pusha
push
jno
push
pop
std
ret
or
ss
out
lcall
pop
das
mov
jnp
xchg
fildl
mov
bound
xor
mov
mov
jne
hlt
mov
pop
mov
insl
xor
mov
add
jle
jo
in
or
repz
loope
push
inc
dec
dec
xchg
mov
out
sub
cmp
mov
jp
outsl
cltd
push
sub
jg
fistpl
mov
jbe
and
jae
data16
xor
ret
rorb
jno
dec
mov
enter
lcall
jp
xchg
pusha
xchg
push
cltd
lods
jle
or
fldl
lret
xor
arpl
fimuls
mov
inc
jns
popf
jne
clc
push
xor
in
jo
ja
or
mov
insb
jnp
out
jle
sbb
iret
sbb
push
in
fs
dec
cli
pop
sbb
testl
mov
je
jo
sub
scas
fmul
jno
dec
lds
pusha
int
stos
negl
xchg
mov
std
sbb
ja
ret
js
xor
test
addb
loope
push
push
bound
in
push
pusha
and
or
adc
and
add
push
add
push
mov
sahf
addr16
aaa
ja
js
ficoms
imul
out
clc
mov
cmp
jl
push
sbb
add
mov
notb
dec
mov
cmp
xor
jo
sub
xor
or
icebp
lret
shl
outsl
add
ret
andb
dec
daa
cmp
push
das
inc
mov
mov
sar
pushaw
js
nop
enter
add
in
adc
sbb
test
shl
pushf
aam
das
jno
leave
fnsave
mov
mulb
mov
mov
rcrl
add
lret
sub
addr16
and
xor
push
sub
push
imul
dec
repnz
adc
inc
loope
sub
clc
sub
out
or
les
ss
pop
inc
mov
xor
add
dec
sub
cwtl
xchg
push
pop
xor
aam
or
jl
sub
jle
jle
or
mov
dec
aad
or
adc
cmp
das
out
js
sbb
push
fs
mov
adcl
mov
xor
ret
adc
repnz
sbb
inc
xchg
dec
xor
jl
inc
fsubrl
push
mov
hlt
int
in
mov
xor
sti
xchg
clc
jae
into
jp
jg
add
cmp
xchg
inc
outsl
incb
inc
mov
dec
out
dec
pop
aam
xchg
ret
repz
dec
mov
iret
jae
xchg
pop
loope
mov
cmp
add
lds
cmp
and
js
sti
cld
int
cli
cmpsb
imul
xchg
roll
xchg
mov
mov
scas
iret
inc
sbb
mov
lock
mov
inc
fstpl
jecxz
push
mov
sti
mov
mov
js
mov
mov
xlat
mov
loopne
data16
cld
adc
mov
inc
hlt
ja
add
movsb
xor
ja
fidivl
pop
nop
std
leave
add
mov
fistpl
xchg
inc
cmp
jb
dec
in
nop
and
int
xchg
jbe
hlt
jl
test
dec
shlb
xlat
je
inc
dec
mov
enter
pop
sbb
div
sar
stos
sub
mov
es
push
test
nop
xchg
pop
jp
rcll
push
insl
push
cld
push
or
xchg
xchg
fcmovne
dec
sub
xor
push
mov
mov
sbbb
test
add
arpl
movsb
pop
lods
mov
adc
inc
test
jb
mov
popf
int
je
nop
cmpb
add
ljmp
sarl
push
decb
lret
sbb
addr16
pop
arpl
cmp
cld
outsb
jle
jge
lds
icebp
xor
loopne
insb
test
insb
jmp
rcl
insl
mulb
pop
sub
subl
push
gs
lock
fs
pop
lods
jp
mov
stc
xchg
fsubs
xchg
sub
pop
insl
movsb
int
daa
cmp
jo
pop
or
repnz
int3
jl
dec
fcompl
out
popa
mov
pushf
push
pop
stc
out
lea
sub
rcrb
pop
sbb
pop
push
xchg
mov
mov
std
imull
inc
dec
out
into
insb
xchg
or
shll
jmp
xchg
mov
in
add
fcoml
mov
enter
jecxz
sub
call
test
cltd
xor
pop
popf
mov
and
mov
mov
push
push
jnp
sbb
mov
sbb
add
hlt
mov
sti
cmp
std
dec
in
jne
mov
fcmove
and
cmp
rcll
pop
stos
stos
xor
cmp
pop
daa
and
pop
in
xchg
xchg
jecxz
jns
aas
mov
cmp
xchg
and
mov
subl
adc
popa
or
jle
sbb
mov
sahf
xchg
fdivrl
nop
fdivrl
fsubrl
gs
out
mov
lods
pop
out
mov
psubusb
filds
push
sbb
sub
jmp
in
mov
lret
stc
pushf
movl
gs
scas
jg
pop
dec
mov
cmc
adc
mov
push
adc
ret
jge
daa
sti
cs
xor
push
js
sub
icebp
fstl
idiv
or
inc
jl
in
sbb
scas
inc
rcrb
sub
mov
mov
cmpsb
out
aad
out
and
pusha
pop
cwtl
xchg
push
inc
insl
stos
or
in
jp
cmpsb
jb
push
add
es
push
clc
mov
pop
push
or
sub
jno
xchg
and
xchg
dec
pop
jp
xor
fildl
xchg
mov
pop
into
sbb
pop
push
into
decl
ror
outsb
fiaddl
int3
push
add
enter
jno,pt
sub
cltd
lods
mov
jne
cmp
or
cwtl
mov
cli
popf
cmp
sbb
inc
jbe
lock
add
xor
data16
dec
fmull
out
cmp
faddl
fadds
adc
inc
loop
push
push
pop
stos
sbb
outsb
dec
xor
out
leave
pop
sub
and
js
lds
push
mov
cltd
adc
mov
fisubrs
xor
icebp
scas
ffree
fimull
xchg
cmp
mov
imul
ss
dec
sbb
in
test
mov
mov
pop
enter
iret
cmp
movsb
pushf
push
in
aad
mov
mov
inc
sub
jnp
mov
test
andl
adc
test
add
mov
adc
loopne
and
jbe
aad
mov
xor
inc
xor
imul
rcrb
mov
test
lcall
and
frstor
mov
jl
frndint
mov
xor
nop
mov
mov
dec
or
sahf
test
ret
mov
call
push
ljmp
ret
out
mov
mov
and
mov
pop
mov
lret
pop
inc
push
or
out
sub
pop
shll
jno
dec
out
fimull
arpl
subl
inc
movsb
add
sahf
inc
adc
xor
push
fdivl
test
adc
cmpsl
pop
in
xchg
mov
adc
enter
sub
clc
pushf
add
lahf
cmp
sbb
mov
push
aad
inc
push
fistps
fnstsw
jb
jle
je
and
cld
popf
add
mov
push
loop
data16
push
fsubrs
push
jae
mov
push
ror
daa
std
mov
adc
xrelease
shlb
mov
cmp
fsts
outsl
adc
push
pushf
fs
arpl
mov
mov
add
push
dec
pop
sbb
xchg
shll
push
xchg
lcall
push
std
cmp
inc
pop
inc
sub
push
lret
es
or
je
dec
hlt
jle
dec
mov
push
pop
repz
popf
xor
and
subl
xor
fmul
adc
stos
lds
mov
cmpsb
jmp
mov
mov
push
rolb
fildll
dec
hlt
cmpsl
pop
cmp
adc
fcom
jo
into
push
leave
loope
std
in
sbb
push
popa
repnz
das
push
push
in
repnz
mov
sahf
data16
je
insl
sub
sbb
mov
xchg
mov
stc
xchg
stos
outsb
cmpsl
je
movsb
mov
inc
mov
push
stos
lret
cli
or
xor
imulb
test
sti
rorb
or
ss
mov
sub
inc
push
in
jo
aas
orl
fldl
ljmp
lahf
rol
add
jl
ja
dec
and
jecxz
sub
dec
mov
fisttps
or
inc
inc
xchg
movsb
iret
sbb
pusha
pop
ss
inc
test
jae
fstpt
sub
jae
cmp
movsl
insl
call
shll
push
cmp
test
pop
shl
lods
fstpt
loopne
lret
mov
and
jns
outsb
xchg
sbb
das
adc
je
dec
fsubrs
mov
aad
and
jge
cs
push
fisubrl
mov
fistpll
and
sub
pop
sub
hlt
push
mov
fbstp
sbb
popf
xchg
into
in
mov
frstor
adc
mov
push
xor
xchg
insl
aaa
dec
test
jne
subl
mov
cld
fldt
mov
decl
mull
cld
mov
call
lahf
out
pusha
shr
jle
pop
popf
stos
dec
loope
xchg
jne
in
imul
out
sub
add
cmpsb
fwait
pop
gs
mov
or
and
fidivrs
cmp
iret
fsts
adc
push
cmp
jns
fdivl
movsl
xor
outsb
add
ds
mov
into
jmp
mov
push
fcoms
adc
xchg
pop
adc
mov
xchg
or
pop
or
movsb
adc
pop
inc
lods
adc
scas
js
lds
xor
mov
mov
and
push
sahf
insl
nop
or
mov
into
cmpsl
js
jne
mov
es
add
sbb
lea
inc
out
dec
sbb
sbb
push
int3
jne
push
mov
jne
ljmp
mov
sub
sub
out
push
jecxz
add
pop
mov
ds
fwait
xchg
push
mov
sbb
fsubs
loopne
pop
add
pusha
in
mov
xchg
push
add
test
outsb
cmc
adc
mov
push
cli
cli
ss
and
lods
not
add
lds
hlt
push
mov
mov
fwait
test
push
and
pop
add
sub
jge
xchg
icebp
mov
iret
adc
pop
and
data16
push
shlb
ret
imulb
data16
or
arpl
sub
fiaddl
jbe
and
xor
cmpsl
pop
ret
jo
jp
inc
pop
mov
jb
cs
rcll
sbb
push
mov
sub
cmpsl
dec
pop
inc
and
div
in
imull
inc
mov
xchg
inc
cmp
jb
mov
stos
sub
sub
ds
hlt
in
xchg
jne
xor
mov
mov
jmp
pop
pop
mov
stos
adc
scas
arpl
push
jae
xchg
fs
ss
gs
stc
popf
xor
sbb
sti
mov
pop
sbb
mov
movsb
dec
and
mov
inc
xor
fnsave
jge
fs
jecxz
lret
test
lock
lods
and
loop
stc
jae
adc
loopne
mov
enter
jle
shll
push
les
xchg
sbbl
cwtl
xor
dec
push
stos
xchg
and
iret
inc
jge
cltd
jnp
sbb
das
pop
es
andl
pop
lret
mov
mov
push
push
mov
cltd
xchg
xorb
pop
adc
out
outsl
test
add
mov
mov
test
in
push
jnp
inc
sbbb
sbb
or
xlat
fsts
cmp
call
push
loop
popf
mov
mov
jle
lret
es
push
sarb
cli
stos
or
cmp
push
fs
xchg
pop
fiaddl
adc
dec
std
push
push
repz
xor
sub
pop
sbb
jmp
in
inc
mov
xchg
cmp
addr16
sbb
xor
int
test
xchg
jmp
jp
jmp
js
pop
sub
mov
or
push
mov
pop
push
and
in
mov
dec
and
dec
lea
xor
aaa
outsl
lcall
mov
ja
jne
jnp
jge
cmp
mov
cmc
jne
push
xchg
xchg
cmp
int3
add
sti
mov
stc
arpl
lods
sub
inc
dec
pop
icebp
add
and
cld
sub
nop
mov
xlat
xlat
insl
lahf
jns
push
pop
jmp
lea
lahf
push
into
dec
mov
dec
add
pop
dec
push
negb
cmpsl
fcmovbe
leave
sbb
mov
lret
cmp
das
jae
sbb
push
outsl
xor
shlb
mov
cmpsl
in
mov
icebp
inc
push
mov
es
jp
aad
mov
pop
mov
pop
push
cwtl
insl
subl
and
push
lcall
scas
loop
addr16
imul
jae
xchg
pushf
bound
insb
push
pop
mov
in
mov
cmp
imul
sub
jns
testl
ja
mov
mov
mov
les
dec
movsb
loop
mov
mov
mov
pusha
sub
out
arpl
sub
imul
jge
jecxz
sub
aaa
sbb
testl
adc
ja
pop
inc
cmpsb
decb
sbb
test
mov
arpl
inc
lcall
in
in
pusha
repnz
inc
lds
jo
lret
fxch
add
dec
xlat
pop
out
test
jae
popf
minps
rclb
je
mov
mov
sbb
jae
mov
fwait
xchg
jp
ljmp
or
dec
addr16
sub
lea
add
dec
sub
fisubrs
imul
add
and
movsl
ret
cli
or
outsl
mov
mov
cmp
rep
andl
mov
jnp
adc
mov
and
js
add
sub
xor
pop
lods
jo
pop
enter
mov
cs
inc
in
daa
adc
cmc
faddl
or
fnsave
mull
ss
pop
cmp
mov
dec
stos
shrl
scas
xchg
mov
mov
mov
add
aas
retw
cmp
mov
push
or
cmp
ja
and
push
repz
pop
sbb
shr
dec
adc
clc
ret
shl
pop
addb
xchg
adc
jmp
mov
stos
in
jb
filds
push
push
movsb
fwait
or
xlat
pop
jb
jne
lea
hlt
cs
loopne
cmp
les
pop
hlt
rorl
lahf
loopne
pop
cmp
xor
imul
cmc
int
mov
lods
xlat
aam
sub
pop
and
and
pop
adc
lods
addr16
xor
cmpsl
and
mov
mov
xor
filds
ret
or
push
mov
inc
aaa
xor
inc
mov
adc
mov
xchg
mov
ret
out
sbb
scas
fldt
sti
jmp
adc
mov
dec
jge
loope
rolb
mov
dec
or
sahf
fidivl
test
call
call
mov
lods
aas
jg
rcr
inc
icebp
aas
mov
rorl
xor
add
mov
and
inc
xchg
lahf
das
dec
cmpsl
inc
inc
mov
push
cmc
mov
pop
jmp
subb
xor
sub
mov
sub
jge
je
loope
out
cmc
loop
pop
pop
lret
cmp
inc
jp
or
lret
pushf
pusha
mov
xchg
jecxz
jcxz
data16
jl
dec
cmp
ljmp
cmp
jbe
fdivl
add
add
out
jne
out
dec
jo
bound
shrl
mov
aaa
push
xlat
pusha
lds
pop
mov
cmp
addr16
outsb
jae
inc
dec
adc
inc
rolb
cmpsb
in
lods
pop
inc
jno
lock
cwtl
pop
jg
jbe
clc
cld
pusha
mov
adc
test
push
pop
loope
data16
or
dec
fstl
xor
jle
sbb
add
das
jmp
test
repnz
sti
jno
call
test
mov
fsts
int3
ret
fwait
jb
aad
mov
div
and
mov
imul
inc
jnp
pop
and
adc
xlat
fisubrs
pop
fistps
or
push
cmp
outsb
icebp
insb
sbb
inc
std
jnp
jl
or
leave
mov
adc
out
pop
lods
insl
and
rclb
mov
xlat
add
and
cmpsb
push
adc
and
mov
mov
dec
ja
insb
mov
out
dec
fsubrs
or
adc
mov
dec
jno
rorl
inc
pop
xor
adc
ds
push
in
out
pop
xchg
jbe
jp
dec
movsl
jp
shlb
aas
xlat
mov
mov
dec
addb
fst
dec
ret
pop
mov
mov
pusha
addr16
cmp
xor
cmp
jnp
xor
mov
insl
fimull
xchg
call
cmp
jno
mov
sti
xor
add
push
cmp
movsl
mov
adc
dec
jmp
or
popa
cltd
dec
xchg
xor
dec
or
les
xchg
cmp
clc
shll
fmuls
fdivr
les
in
aaa
test
adc
bswap
repnz
andb
adc
lods
in
adc
dec
inc
jno
lds
dec
shlb
orb
mov
imul
stos
rcrl
nop
icebp
loope
adcl
ret
int3
inc
loop
aas
or
scas
in
cmc
cmp
sub
add
popf
stos
mov
bound
inc
fsubrl
int3
pop
jg
movsb
add
daa
aam
pop
and
dec
cmp
inc
jge
gs
mov
sub
pop
lcall
int
inc
jle
adc
mov
movsl
ror
push
scas
mov
out
sub
call
sbb
cmp
pushf
push
inc
and
movsl
ret
adc
inc
enter
dec
adc
rclb
mov
adc
pop
push
dec
js
test
sub
addr16
jp
movsb
push
jb
xchg
inc
popa
pop
repz
sbb
lret
xor
xchg
loope
push
cmp
repz
dec
push
cmp
leave
rcr
xchg
xchg
adc
add
pop
jne
jno
mov
jmp
decb
clc
scas
outsl
imul
stos
cmp
inc
pop
push
jmp
add
movsb
or
fsubrs
cmp
xor
stc
mov
xor
in
jmp
cmp
cmpsb
add
sub
jmp
xor
arpl
sub
ret
mov
push
mov
scas
das
cmc
lret
outsb
mov
add
adc
scas
idivb
adc
inc
mov
sub
xor
push
dec
push
push
push
mov
mov
sti
sahf
pop
fstl
lret
and
imul
sbb
les
dec
xchg
mov
pop
fisttpl
or
fisubs
testl
sub
push
mov
cli
pop
pop
test
push
pushf
iret
scas
ret
jnp
pop
jmp
cld
or
cmc
push
fildll
inc
ljmp
jg
jb
int3
add
dec
pop
add
and
out
jne
dec
push
cmpsl
mov
or
mov
mov
fdivrs
movsb
or
gs
iret
adcb
jbe
add
aad
filds
pop
movsb
xor
fiaddl
es
pop
pop
and
add
push
push
sbb
dec
fdivs
lods
lea
das
pop
outsl
pop
lret
fiaddl
mov
sub
mov
add
adc
sub
jl
mov
mov
mov
and
fs
cwtl
inc
daa
cmp
sbb
inc
in
pop
ljmp
sarb
dec
adc
push
sbb
pop
enter
inc
es
dec
mov
sti
int3
mov
mov
jmp
aam
shrb
not
add
xchg
test
inc
mov
loopne
cmpsl
popf
movl
lods
ret
mov
cmpsb
addr16
testl
xor
jae
adc
or
jl
cmc
loopne
lea
sbb
in
inc
mov
jno
dec
ja
aas
and
dec
dec
leave
xor
mov
pop
sub
add
les
repz
lret
ficoms
xchg
pop
repz
mov
outsl
dec
push
sahf
mov
mov
mov
cmp
push
shll
push
xchg
pop
pusha
dec
ret
in
inc
aam
mov
jecxz
jbe
lods
sbb
xchg
inc
inc
pop
mov
pushf
lods
add
xchg
mov
out
je
push
jne
cld
mov
adc
and
mov
cmpsb
push
repz
add
dec
lock
xchg
dec
add
sbb
subb
and
jae
lahf
sbb
and
pop
stos
xor
shrl
xor
pop
repnz
rorb
xlat
repz
pop
jne
lods
sub
cmp
push
xchg
enter
inc
xor
pusha
cwtl
or
pop
outsl
mov
push
pop
sbb
xchg
adc
flds
fcmovnbe
cltd
lock
ret
call
or
stos
mov
add
leave
jge
jb
mov
and
test
mov
fldcw
mov
aaa
mov
ret
loopne
fisubrs
and
shlb
arpl
rorl
push
lret
fistl
jo
mov
mov
rcrl
or
cmp
cmpsb
fistps
sub
and
push
sub
xchg
in
mov
cmp
jne
mov
fnsave
cltd
push
xchg
mov
aas
jecxz
pop
mov
push
mov
adc
pushf
lret
sahf
cltd
sub
dec
mov
idivb
jecxz
mov
pop
pop
sub
pop
or
add
data16
mov
push
mov
pushf
ror
dec
inc
imul
es
hlt
jo
sbb
sbb
stos
incb
ficompl
dec
jbe
and
mov
sub
inc
cli
icebp
push
lret
xchg
ljmp
xor
inc
lds
mov
inc
sub
das
xchg
xor
ljmp
lds
lock
push
cmp
cli
test
popa
dec
dec
and
lds
loop
mov
insb
xchg
clc
xchg
lret
inc
xchg
rclb
movsb
sarb
out
call
dec
test
or
fsubl
or
stos
push
lret
inc
add
mov
mov
mov
jne
insl
adc
imul
inc
iret
cmc
mov
call
lahf
addr16
popl
ss
sub
pop
inc
out
out
cs
push
lods
outsb
lds
pop
loop
adc
xchg
cmp
call
outsb
adc
call
inc
pop
pop
lds
pushf
and
or
arpl
in
inc
push
jmp
jg
jae
lods
sub
or
cmc
mov
pop
stos
cmc
pop
cmp
xchg
mov
leave
out
nop
pushf
cwtl
mov
ja
dec
jge
inc
mov
add
push
dec
sbb
cmpl
dec
outsb
xchg
addl
mov
lods
ja
bound
aas
sbb
decl
arpl
fsubr
sub
add
mov
jns
push
pop
popf
bnd
pop
cld
fsubl
and
pop
sub
test
hlt
dec
test
sub
lret
xor
jns
fldl
fs
or
inc
dec
out
mov
dec
out
mov
cvttps2pi
sbb
sub
sbbb
jo,pn
out
add
lcall
xor
cmp
jmp
xor
sub
popa
push
stos
sbb
mov
mov
cmp
hlt
sub
mov
push
add
push
lret
mull
scas
mov
xor
out
stos
or
shrb
stc
inc
stos
lcall
insl
adc
lods
loopne
ss
lods
rcrl
xchg
sarb
les
dec
lahf
cmp
loopne
scas
pop
dec
cmc
dec
sbb
adc
in
inc
movb
sub
bound
fwait
and
sub
int
popa
jl
dec
sbb
jecxz
pop
test
loope
mulb
sub
pop
jp
inc
inc
and
lcall
arpl
fidivl
xchg
dec
stos
push
pop
lods
or
mov
movl
lahf
xor
add
lds
mov
sub
cmp
dec
gs
xchg
in
scas
add
xchg
cmpsb
or
mov
jg
xchg
or
jb
add
push
out
dec
cmpsb
inc
mov
popa
adc
sahf
je
pop
outsb
orl
mov
in
lret
repz
xchg
mov
sub
xchg
aam
mov
je
ss
int3
jge
fisubrl
ret
inc
sbb
sbb
jp
cltd
lea
inc
enter
popl
or
popf
add
mov
fmuls
insl
jns
das
sar
push
lret
mov
pop
loop
into
mov
fs
loope
js
out
stos
sub
xor
dec
jp
inc
data16
mov
inc
sub
cwtl
jne
ljmp
aam
push
loop
xchg
xlat
sub
and
imul
leave
fidivl
dec
push
or
addr16
cwtl
jno
add
xchg
jg
pop
push
and
dec
cmp
repnz
xchg
mov
in
aam
clc
addr16
repz
lret
jg
xchg
or
out
pop
sbb
andb
sbb
insb
xchg
xchg
pop
fwait
jne
fcompl
sub
ret
imul
pop
fisubrs
adc
jge
cltd
or
ds
fbstp
and
cwtl
adc
lock
mov
xorl
adc
or
fdivp
or
jnp
add
aad
push
leave
lea
mov
or
aaa
sbb
push
sbb
jne
dec
clc
xor
loopne
mov
inc
xrelease
sub
enter
mov
pushf
jne
mov
rcrl
pop
cmpl
inc
dec
dec
js
sbb
aam
sbb
popf
jge
xlat
push
xchg
push
xor
add
fldenv
push
popa
xorl
iret
gs
xchg
lcall
push
push
fstpl
aam
sbb
mov
or
adc
mov
in
das
xchg
mov
loop
cmpsl
xor
bound
jmp
and
loope
inc
in
outsb
js
cwtl
push
jnp
ret
sarl
mov
mov
jmp
gs
pop
adc
jmp
jb
sbb
sub
mov
xchg
arpl
fdivrl
int
mov
outsb
sub
clc
aaa
and
pop
push
arpl
push
xor
ficomps
test
inc
lret
test
jecxz
mov
rorb
adc
xchg
test
daa
dec
lcall
pop
xor
add
mov
inc
jle
pop
les
mov
lds
push
in
add
in
and
shl
mov
pop
push
sbb
dec
std
push
dec
mov
bound
leave
gs
sub
jnp
pop
mov
test
sub
mov
cmpsb
arpl
aam
inc
mov
inc
daa
jo
and
aam
pop
int
and
xchg
mov
add
insl
clc
xor
push
mov
fcomps
pop
in
fnstsw
mov
jb
je
aam
push
jle
fsubrl
add
jb
lock
shr
jo
xor
mov
ds
fldcw
cmc
cmp
lock
ja
dec
subl
sti
popf
cmpsb
xchg
mov
rcrl
jecxz
sysret
mov
popa
mov
xchg
and
push
pop
repz
dec
out
adc
fcmovu
scas
jmp
clc
shl
adc
in
sbb
shrl
enter
add
sbb
or
aad
test
jne
sub
xor
xchg
fwait
jmp
lds
in
in
cmp
and
aad
mov
jmp
cmc
push
xor
jns
ficoms
lret
dec
aas
das
cs
push
xchg
cli
push
pop
and
jae
addb
pop
fbstp
arpl
xchg
cwtl
fwait
or
sbb
gs
xchg
mov
jecxz
mov
push
mov
ret
adc
lret
xor
mov
addr16
xchg
fcmovne
dec
pop
es
loop
sbb
pop
cmp
ret
mov
pusha
movsb
out
lahf
les
movsl
andb
mov
imul
or
repnz
adc
xchg
fcomi
xor
add
inc
mov
push
gs
or
lcall
mov
cmpsb
repnz
cltd
cmp
stos
jno
enter
loope
mov
sbb
or
out
lret
fsubl
insl
ljmp
divl
js
lret
lea
push
jle
hlt
cltd
testl
and
rorb
sahf
pop
shrl
lea
push
add
mov
xchg
push
leave
pop
out
mov
jne
sti
jnp
jle
lea
out
pop
dec
jns
mov
leave
mov
jl
popf
dec
or
cmp
lss
test
jmp
jns
jo
bound
lret
xchg
push
loope
adc
adc
inc
xor
adc
cs
out
mov
mov
vrcpss
sub
scas
push
mov
push
out
cmp
popl
pop
inc
imul
test
push
inc
jnp
aad
mov
fwait
mov
bound
jo
and
loope
fistl
adc
dec
mov
add
data16
inc
add
xchg
xchg
stos
lcall
ss
jno
inc
add
out
insb
fcoml
sti
filds
xchg
shll
ficoml
mov
orb
add
xchg
cltd
jb
push
jmp
cmp
xor
rcrl
xchg
jae
xor
lret
outsb
lock
push
cmp
mov
jmp
adc
mov
cmp
xchg
dec
test
sub
negl
push
cmp
pusha
fimull
mov
and
jmp
or
mov
mov
fs
sti
mov
aam
adc
jecxz
adc
popa
fcomi
stos
mov
sbb
mov
mov
or
lods
cmp
orb
xlat
jb
movsl
aaa
push
cmpsb
ret
scas
jb
je
jbe
aad
adc
mov
in
dec
inc
xchg
ret
stc
dec
out
add
adc
fprem
sbb
sbb
fildll
sahf
in
leave
rcll
jmp
js
and
loop
sbb
in
pop
dec
lods
popa
test
inc
pop
sub
cwtl
inc
pop
sbb
cli
ret
sbb
test
lret
and
fdiv
adc
ljmp
inc
arpl
sub
movsb
iret
in
and
add
sbb
jbe
push
call
std
or
mov
mov
mov
pop
lret
ja
adc
scas
and
push
adc
fsubrp
shrl
push
mov
hlt
add
clc
pop
test
test
mov
pop
or
and
jp
push
cmp
mov
mov
insl
mov
mov
pop
pop
jnp
pusha
dec
repnz
cmp
push
out
and
mov
test
jle
fwait
roll
mov
iret
cmp
cltd
adc
mov
mov
stos
and
cwtl
jns
mov
jb
adc
push
sbb
fcomps
inc
stc
push
cmpsb
repz
std
mov
bound
dec
adc
add
push
inc
add
enter
adc
and
ja
test
lcall
mov
cmc
fld
je
xor
cmc
add
sbb
xchg
mov
jb
add
ja
sub
sbb
jl
inc
inc
movsb
xchg
push
dec
es
xor
dec
into
sub
imull
or
jb
repnz
or
fs
fs
mov
repz
ds
xor
ds
and
sbb
js
aas
subl
adc
enter
jle
les
aaa
add
mov
das
loop
sub
add
ret
cmp
pop
add
loopne
sbb
loop
xor
cmp
cmp
loope
testl
test
arpl
jmp
inc
mov
mov
movsb
jbe
mov
cmp
adc
xchg
lcall
ds
ds
inc
xchg
xor
lods
sub
jg
dec
pushf
ret
mov
fcmovnb
xor
stos
fldcw
cmpsl
add
pop
test
inc
push
imul
mov
mov
inc
into
loopne
inc
subb
sbb
mov
mov
add
js
jne
dec
hlt
wrmsr
aam
mov
adc
movsl
stos
inc
jb
fwait
or
mov
inc
movsb
xor
dec
sub
test
fcompl
lret
es
test
sbb
outsb
lcall
push
enter
pop
and
outsb
cli
lds
ficomps
mov
fucomip
jp
dec
cld
imul
push
dec
and
add
popaw
into
xor
ss
and
repnz
cli
iret
and
std
inc
and
jle
adc
rdpmc
dec
mov
jg
aas
lahf
pop
iret
fsub
test
lds
adc
cli
mov
out
cmp
and
lcall
out
je
sbb
and
out
push
or
inc
leave
leave
loopne
push
movsb
xor
gs
jmp
xor
lcall
push
shrb
int
fldl
push
enter
call
mov
mov
mov
mov
enter
into
mov
inc
clc
xchg
fsts
add
xor
adc
push
stos
mov
loope
pop
push
and
shll
jmp
je
xor
sub
add
movsl
ja
sub
ljmp
rorl
cmovb
or
cmpsl
ljmp
repz
xchg
push
xlat
pop
or
mov
pop
stos
test
mov
sub
xchg
dec
lcall
pop
jb,pn
lcall
je
add
popa
dec
sub
or
lods
out
rcll
sarl
test
add
std
jmp
add
je
or
je
pusha
sbb
jno
in
cmpsl
adc
cmpsb
bound
push
mov
call
xor
cmp
test
push
in
jns
adc
push
add
pop
xchg
mov
jmp
dec
cltd
movsb
mov
push
dec
int
out
xor
pop
mov
stos
mov
xchg
xchg
das
in
iret
inc
out
fdivrs
bswap
adc
xchg
arpl
xlat
sub
loop
dec
movsb
pop
jmp
mov
sub
cmpsb
pcmpeqb
sub
push
mov
add
push
adc
out
cmp
sub
out
in
mov
mov
xor
jmp
inc
sub
stos
fstps
cmpsl
jl
sub
pop
pushf
dec
mov
mov
inc
out
dec
outsb
add
test
test
xchg
pop
jbe
bsf
repz
mov
js
add
loope
push
inc
push
imull
cmp
push
pop
jo
push
test
out
push
pop
fs
pop
add
or
xchg
mov
and
mov
push
nopl
jb
inc
lahf
inc
and
stos
jmp
lcall
cmp
mov
sbb
inc
inc
xchg
dec
shr
dec
sub
mov
int3
adcl
push
mov
xlat
push
rcrb
jmp
add
add
mov
pop
subb
icebp
test
and
or
jo
mov
pop
les
mov
dec
or
loopne
or
out
sub
adc
data16
xor
popf
stos
pop
push
lahf
pusha
sbb
js
std
jge,pt
add
add
pop
mov
movsb
push
fcompl
adc
xor
or
add
cmp
inc
xchg
movl
mov
jb
bound
xchg
xchg
imul
mov
ror
ret
shrl
mov
fs
mov
adc
jnp
dec
pop
jg
or
je
adc
fdivrp
jle
lcall
out
std
sahf
fst
add
jne
mov
test
xorl
fcmovbe
push
mov
xlat
pop
mov
outsl
rolb
aaa
dec
nop
push
js
inc
or
sbb
or
jnp
lahf
shlb
mov
je
icebp
sub
insl
loope
ljmp
ret
sub
pop
outsb
popa
bnd
sub
or
sbb
mov
in
mov
and
add
sbb
inc
rcrb
dec
xlat
dec
idivl
stc
mov
pushf
jmp
adc
mov
cmp
aam
movsl
icebp
adcl
loopne
push
xlat
xor
sahf
inc
dec
std
arpl
add
inc
push
insl
mov
sti
and
js,pn
sbb
jmp
mov
sub
test
bound
clc
sbb
pop
adc
pushf
je
push
pop
xor
mov
cmp
mov
leave
or
push
imul
aad
or
aaa
mov
xchg
pop
aas
sbb
cmp
stos
sbb
adc
mov
setns
push
cwtl
gs
je
mov
or
loope
test
push
pushf
xor
xchg
jo
les
out
lea
fnsave
clc
sub
scas
mov
leave
sub
add
mov
loop
xchg
repz
or
scas
mov
icebp
cmp
movsb
jbe
in
dec
repnz
nop
add
and
sbb
mov
sub
push
lahf
hlt
xchg
ret
jnp
add
cmp
sub
into
rcrb
jp
sub
cmp
push
sbb
test
aam
push
mov
pop
mov
mov
inc
test
loop
sub
pop
pop
in
or
stos
mov
or
bound
shll
ret
popa
stos
jg
pop
in
push
cmc
repz
jge
fsubrl
dec
mov
push
mov
pop
lods
loop
loopne
in
mov
gs
dec
loopne
loope
sti
movsl
mov
xchg
adc
movsl
push
call
xchg
enter
cwtl
cwtl
or
push
pop
cli
out
pop
in
inc
iret
push
faddp
inc
push
cmp
je
lods
and
mov
rcrb
xchg
xchg
mov
pop
jns
push
mov
cmc
dec
in
or
imul
sub
lock
inc
xor
in
pop
or
ja
fstps
mov
pop
lcall
fwait
add
pop
fisubrl
mov
jp
mov
pop
enter
repz
pop
out
bound
popf
mov
hlt
mov
jecxz
jnp
mov
xor
stos
add
xor
dec
adc
pop
shll
fildll
out
and
jno
adc
fimull
mov
and
jle
testl
mov
mov
insl
fstpt
mov
inc
cld
mul
mov
inc
out
lock
mov
stos
push
or
mov
adc
insl
mov
inc
hlt
dec
mulb
shl
lods
pop
mov
cmp
imulb
lock
lahf
inc
scas
fnstcw
test
or
adc
stos
frstor
xchg
sub
movsb
sar
mov
std
mov
std
dec
jb
mov
xor
iret
iret
jo
xchg
cmpsl
and
or
loop
testl
in
sbbb
aam
outsl
sahf
jp
in
xor
xorl
addr16
iret
dec
lock
push
adc
enter
push
jae
sarb
shll
jl
dec
stc
sahf
xchg
push
loope
adc
popf
rcr
jbe
adc
outsb
aas
mov
ljmp
xor
dec
stos
inc
inc
jb
aam
dec
cmp
pusha
adc
in
cmp
mov
mov
sub
fbstp
cmp
add
sar
int
scas
sti
iret
adc
xor
roll
mov
mov
jbe
ljmp
mov
mov
std
out
cltd
addr16
or
orb
imul
xor
lods
cmpsb
mov
popa
mov
mov
pop
aas
push
xchg
fs
or
daa
out
add
pop
and
xchg
mov
loop
inc
not
push
out
std
or
sbb
notl
sti
inc
test
and
ret
cmp
push
cli
add
jle
jmp
pop
jns
in
into
sbb
cmp
jmp
cmpsb
lahf
in
cs
sbb
sub
bound
xor
sti
xchg
cwtl
sub
pop
sub
jecxz
jae
test
lods
bound
xor
lods
out
movsb
mov
enter
pop
xor
adc
xor
scas
xchg
sub
cmp
out
sub
jmp
fs
lahf
lahf
aas
lea
aas
jp
ss
ss
lock
jp
outsl
push
dec
data16
push
push
xchg
inc
or
scas
jnp
es
test
jl
dec
ljmp
loop
sbb
stos
fwait
or
iret
rolb
push
loopne
shll
sahf
aad
frstor
loop
dec
xlat
xchg
das
mov
fcmovu
nop
dec
int3
rorb
mov
mov
je
pop
test
rolb
mov
arpl
rcl
xchg
add
push
lea
cmpsb
sub
sub
mov
mov
push
mov
or
iret
std
mov
cld
cmc
fists
jle
sti
push
pop
jmp
lahf
dec
mov
sbb
add
dec
adc
mov
sbb
and
mov
pop
sub
mov
out
popf
pop
decl
rorl
or
mov
add
xchg
jno
dec
cmc
inc
lret
mov
push
or
jno
enter
xchg
ret
adc
stos
es
mov
sahf
lock
outsl
movsb
fwait
push
lret
outsb
iret
je
cmpsb
dec
add
popf
aaa
jg
mov
cmpsb
fs
dec
or
std
xor
es
test
pop
add
in
fldenv
inc
lods
mov
or
jb
dec
or
in
mov
adc
scas
push
sub
aaa
test
push
es
xchg
loop
insb
fs
sub
into
loop
mov
in
sub
insb
mov
push
fldenv
call
stos
add
pusha
mov
sub
iret
sub
or
das
in
ss
fld
test
mov
and
jecxz
mov
add
pandn
dec
adc
xor
aad
out
jge
in
jle
fs
ja
add
vpsubq
dec
mov
testl
dec
and
pop
mov
adc
sbb
int3
and
fadds
cmpl
hlt
push
and
loope
clc
in
add
shr
pop
fstps
or
in
and
js
cli
pop
inc
cmc
iret
icebp
xchg
hlt
cwtl
cmc
sar
push
and
out
lahf
sbb
jge
add
mov
cmp
imul
test
jecxz
aaa
inc
mov
lock
scas
daa
mov
jmp
pop
scas
mov
notl
or
shll
aaa
out
xor
jo
jle
clc
sub
bswap
push
xor
pushf
mov
les
inc
sbb
aas
aam
or
icebp
fsubr
adc
aas
inc
or
pop
pop
pop
and
or
mov
cmp
notrack
dec
xor
nop
jne
pop
outsb
mov
sbb
push
out
leave
je
aaa
fsubrp
fwait
mov
sub
dec
lahf
or
popf
aam
nop
loope
idiv
test
cwtl
test
push
adc
hlt
inc
push
aaa
ret
movsb
sub
pop
jb
sub
cmp
push
pop
push
sbb
out
push
xor
daa
int
out
mov
lahf
mov
xchg
adc
fdivs
adc
push
inc
mov
dec
pop
gs
mov
lods
shrb
fs
push
fdivl
inc
jg
hlt
cmp
testb
aam
dec
jbe
outsb
fisttpl
xor
lds
xchg
sub
mov
inc
push
cmp
ja
das
inc
lcall
out
mov
sti
leave
xor
cmpsl
stos
imul
cmp
jmp
and
sbb
mov
mov
jmp
mov
pop
xchg
ss
imul
push
xchg
outsl
or
xor
fiadds
out
les
dec
or
push
dec
pop
loopne
rorb
mov
add
in
inc
stos
aaa
ret
mov
rcrb
push
test
inc
pop
lds
cs
ss
shrd
lcall
adc
js
xchg
outsl
inc
lea
unpckhps
scas
lods
dec
cmpsl
movsl
cvtdq2ps
arpl
sub
pop
push
mov
in
and
push
add
andl
divl
lods
or
repnz
js
stos
jmp
jg
mov
mov
sti
xor
mov
lcall
xor
cmp
pop
adc
dec
pop
jbe
stc
and
out
xchg
rcll
xchg
push
addr16
test
loope
repnz
xor
add
push
or
jl
mov
sbb
xor
add
jbe
cmp
or
sub
sub
aaa
mov
push
mov
dec
add
fcoms
add
shll
cmp
call
cmp
jbe
xor
fcmovnbe
add
push
jge
add
mov
sub
mov
mov
xor
stos
inc
fistl
mov
fimull
inc
shl
mov
iret
sub
cmc
push
arpl
adc
sbb
repz
adc
out
shrl
and
ret
clc
imul
add
das
xchg
push
mov
add
stc
and
or
push
mov
sbb
insl
xchg
inc
insl
jne
sub
aad
mov
sub
nop
mov
xchg
adc
scas
jp
sti
lods
stos
jb
pop
xchg
cwtl
sti
pop
cmp
adc
sub
loop
push
push
dec
loope
inc
mov
xchg
xor
fwait
test
hlt
pop
jno
mov
imul
in
cmp
mov
data16
scas
xchg
mov
jecxz
int3
sbb
aam
sti
loop
addr16
xor
cmc
jmp
mov
shrb
add
lahf
mov
rorb
jb
push
push
rorb
pop
bound
fnsave
inc
mov
jecxz
cmp
xor
aad
stos
pop
xchg
mull
std
dec
jo
dec
cltd
arpl
icebp
inc
dec
shl
sub
popa
lret
mov
cmp
mov
xchg
cli
pop
mov
push
xchg
iret
sub
push
add
cmpsb
aas
in
dec
mov
sbb
inc
xchg
iret
push
mov
mov
sub
in
jl
xchg
adc
pop
rorb
es
sbb
jae
push
push
imull
data16
inc
into
and
es
scas
push
lock
inc
and
enter
cwtl
jp
sarb
mov
add
js,pn
aam
or
and
dec
lahf
xor
dec
orb
xor
cmp
rcrb
stos
push
je
aam
call
out
mov
stos
es
sarb
dec
cwtl
mov
shl
and
xchg
jmp
mov
inc
lds
int3
subb
lcall
inc
testb
out
xor
mov
stos
mov
adc
sub
shlb
sti
daa
cwtl
dec
leave
push
mov
jnp
test
call
psubw
loope
jno
iret
adc
cmp
je
das
out
in
das
jecxz
or
rcrb
xor
in
shr
mov
dec
stos
sbb
and
aam
inc
dec
inc
pushf
jne
shll
mov
xlat
xchg
orl
mov
jg
inc
mov
fisttpll
push
jecxz
std
jp
push
or
jle
lahf
mov
push
sub
push
les
jns
lahf
push
xchg
inc
lcall
mov
adc
arpl
sub
mov
mov
and
mov
sbb
pop
xchg
xchg
aam
test
push
aad
inc
fwait
mov
adc
xchg
sub
xchg
insb
or
aas
lods
push
sahf
iret
mov
jnp
cmp
fiadds
mov
push
mov
add
mov
iret
popf
adc
out
movsl
push
sub
pusha
jb
outsl
fcoms
in
jle
jb
hlt
adc
xchg
push
shll
cmp
popa
rcrb
mov
lods
jp
mov
scas
mov
mov
shl
dec
into
shl
ss
mov
mov
les
lcall
addl
aas
leave
add
cli
mov
push
testl
cltd
xchg
or
pop
cwtl
movsb
pop
or
ljmp
adc
add
pop
test
or
and
pushf
das
mov
addl
fldenv
add
dec
dec
jmp
lcall
xchg
xchg
scas
adc
cwtl
lahf
jg
jne
sti
iret
adc
jle
in
pop
movsl
fistl
mov
les
and
std
cmc
cmp
push
mov
inc
mov
jno
sub
dec
inc
push
inc
add
orl
pop
fucomp
add
sbb
jno
hlt
inc
or
in
test
out
lods
addr16
inc
jae
sbb
rcr
cmp
cltd
xor
and
dec
lods
pusha
rcrl
dec
lret
testb
or
or
lods
repz
xchg
sbb
or
sub
fwait
pop
add
cli
incl
mov
jno
mov
adc
xor
arpl
jl
jbe
jle
pop
gs
xchg
mov
add
fiaddl
cs
pop
adc
in
movsl
daa
jg
aad
mov
push
pop
and
mov
xor
sbb
repnz
and
aas
pop
aaa
iret
pop
adc
imul
jle
insl
int
cmp
dec
fisttpll
subl
jno,pt
sub
xchg
push
add
hlt
adc
iret
or
leave
jl
xor
sub
or
stos
mov
pop
fidivrl
iret
dec
shlb
in
mov
faddl
aaa
sbb
daa
sub
push
scas
adc
lahf
test
mov
inc
test
insb
pusha
xchg
cwtl
sub
popf
mov
xchg
cwtl
pop
enter
rcrb
leave
lret
inc
fistpll
or
mov
mov
push
dec
shll
ret
adc
xchg
insb
xor
add
xor
add
fisttpl
mov
data16
sbb
aam
ja
push
jge
push
mov
rorl
mov
and
cmp
or
js
stc
fsubrl
or
test
mov
pop
push
inc
add
and
pop
sub
adc
into
mov
mov
inc
outsb
int3
or
dec
imul
mov
outsl
out
dec
imul
out
aaa
js
loop
mov
cmp
bound
mov
jnp
rclb
inc
cmc
push
outsb
xchg
mov
fistps
pop
xor
jmp
out
mov
shrl
sub
or
jno
in
and
mov
test
push
xorl
movsl
in
and
xchg
loop
data16
lret
inc
in
lods
pop
xchg
mov
lds
addr16
call
testb
fisubl
cmpsb
jle
push
sbb
or
inc
xor
inc
daa
or
rcrl
popf
por
fidivrs
test
dec
or
aam
movsb
and
push
int
xchg
inc
lret
in
inc
fnstenv
jle
icebp
imul
or
dec
push
out
add
add
add
jo
jle
repnz
test
movsb
lods
sbb
push
xchg
je
fimuls
jns
fsubrs
xchg
mov
pop
push
push
pop
imul
ljmp
frstor
mov
pusha
push
mov
ud1
jmp
arpl
mov
repz
xchg
cmp
sbb
and
cmpsl
mov
or
cmp
fdivr
xchg
add
dec
xor
mov
push
fwait
mov
mov
in
xor
popa
push
ja
movb
push
inc
notl
aas
test
dec
outsl
mov
adc
mov
push
jb
aas
push
aam
mov
fucomp
stos
test
rcll
adc
int3
scas
mulb
icebp
and
out
or
mov
or
adc
sahf
subb
xchg
mov
cmp
or
mov
rorb
push
sub
movl
imul
inc
sub
xor
aaa
adc
into
repnz
cmp
clc
out
sub
cmc
pop
popa
pop
adc
sub
dec
and
dec
sbb
push
xor
call
in
pop
mov
bound
ret
int
imul
cmp
cmpsb
sub
filds
push
das
lock
jg
push
xor
jnp
pop
sbb
inc
lock
rcrl
sbb
push
ficomps
lock
rclb
xchg
jbe
sbbl
jmp
icebp
rcr
iret
popa
pop
int
push
pop
xchg
jbe
leave
inc
xor
jae
ret
xor
cli
sub
data16
sbb
push
push
repnz
mov
push
mov
aas
and
xor
imul
addl
or
xchg
repnz
fisttpll
stos
adc
incb
xor
sbb
test
push
clc
bound
jno
lods
sarl
ret
les
fs
mov
sub
push
and
clc
xor
jl
loopne
ror
enter
lret
xchg
mov
adc
and
add
popa
xor
aam
fcomps
adc
and
daa
ss
pop
adc
out
mov
xor
inc
movsb
fs
mov
call
and
mov
mov
jo
shl
cwtl
icebp
je
je
aam
pop
inc
in
cmp
push
mov
push
test
inc
pop
push
sbbb
pop
cltd
orl
ja
sub
fwait
loop
stos
nop
pop
pusha
inc
xchg
sub
ds
adc
addr16
or
pushf
inc
popf
out
insb
ficompl
scas
inc
leave
cmp
test
mov
pop
inc
icebp
mov
icebp
ss
mov
insl
into
bound
test
and
std
sub
adcb
xchg
into
imul
adc
fidivrs
jmp
faddl
pop
rorl
cmpsb
sub
mov
sub
cwtl
int3
cmc
addr16
in
lret
dec
mov
mov
loop
sub
sahf
push
pop
out
push
xchg
fstpt
fidivrs
bound
out
mov
xchg
mov
lret
in
repz
cmp
xchg
jge
mov
mov
and
pop
add
js
adc
scas
jno
aam
mov
flds
sbb
xchg
or
sub
lods
lahf
and
pusha
sub
and
xchg
test
jle
arpl
cmc
dec
cwtl
xor
sub
repnz
push
xchg
in
cmp
imul
mov
add
mov
dec
mov
jo
or
jmp
mov
sub
pop
ret
subl
sbbl
mov
lods
push
mulb
mov
fwait
sahf
lods
push
xchg
cmp
and
and
xor
movsl
sbb
or
mov
int
addr16
dec
idiv
cs
cmpb
cmp
cmp
jecxz
insb
sub
movl
fdivs
in
shrl
loope
mov
inc
cs
loope
stos
movsb
mov
jp
mov
push
or
jns
push
cmc
or
fistl
pop
repz
pop
jp
mov
push
test
cmp
dec
mov
sbb
inc
cs
sub
mov
mov
int
dec
or
movsb
jne
int3
mov
lcall
inc
xchg
adc
push
bound
jle
pusha
popf
xchg
mov
xor
cmp
and
fsubrs
mov
andb
inc
cmp
aad
pushf
outsl
and
add
inc
sub
adc
xchg
arpl
inc
imul
imul
or
mov
xor
lds
xchg
sub
aad
or
pop
loop
add
arpl
inc
or
adc
leave
data16
push
loope
es
xchg
dec
sbb
mov
add
js
mov
inc
push
inc
out
lods
sbb
xchg
aas
add
fdivrl
pop
dec
xor
push
in
mov
mov
xchg
das
or
jl
repz
popa
je,pn
cmp
mov
sti
out
cmp
iret
inc
in
jo
and
inc
lods
jge
xor
test
xchg
jp
enter
add
pop
and
lahf
mov
loopne
cli
bound
mov
jl
sbbb
xchg
mov
mov
test
or
adc
sub
jecxz
pop
movsl
sub
mov
out
rep
push
aaa
test
pop
into
mov
and
and
in
xor
mov
je
addb
frstor
dec
fsubs
js
jg
cmpsb
jb
test
out
pusha
js
leave
mov
jl
adc
loope
xchg
add
into
mov
popa
cmp
jge
xor
je
int
inc
fistpll
pop
leave
adc
push
pop
test
imul
fnstcw
and
arpl
mov
jp
sbb
jecxz
out
sub
pop
jle
std
dec
sti
fwait
repz
fsts
cli
outsb
pusha
mov
mov
in
mov
les
xchg
sbb
pop
divb
push
movsb
sbb
sbb
cld
xchg
mov
mov
scas
lcall
je
mov
xchg
or
mov
pushf
sub
test
arpl
dec
cmpsb
ret
push
cmp
stos
and
sbb
push
dec
sbb
loope
bound
mov
mov
mov
das
popf
dec
lock
movsl
mov
imul
imul
push
jae
es
in
test
push
stc
daa
push
cmp
sbb
ds
mov
dec
adcb
and
loop
push
btsl
sbb
mov
inc
or
sbb
add
mov
jnp
insb
sub
sub
sub
xor
xchg
iret
test
jge
jg
jb
mov
pop
pop
mov
mov
lods
sarb
pop
cld
iret
dec
cmp
lds
popf
dec
fstps
add
lcall
jg
mov
push
jae
stos
mov
inc
inc
in
push
sub
out
cs
sub
lcall
add
mov
jnp
xor
test
nop
out
dec
test
jge
xchg
push
pop
gs
scas
fsubl
xor
int
std
jmp
popf
jecxz
adc
cmpsb
mov
into
sub
das
divb
inc
xor
push
and
test
cltd
cmp
fs
imul
pushf
sub
ljmp
clc
push
incb
push
sbb
arpl
push
cmp
out
cmc
into
insl
loope
shr
add
loop
pushf
push
push
cmp
pusha
add
jp
jg
in
xchg
mov
inc
cmpsl
out
movsb
andb
xchg
cmp
inc
movsb
arpl
jge
in
fwait
lock
mov
mov
dec
add
dec
xchg
pause
pop
sub
pop
sub
arpl
out
enter
pop
xlat
shll
or
jecxz
divb
nop
das
insb
sub
cmp
stc
into
lds
cltd
and
cwtl
lret
mov
test
pop
in
bnd
js
mov
rcrb
add
cwtl
xor
shr
or
xchg
ds
sub
arpl
lcall
mov
rclb
lds
lock
adc
mov
dec
jmp
fwait
sub
jne
arpl
xchg
rclb
mov
jae
jae
es
cltd
rorb
mov
andl
icebp
cmpsb
push
dec
xchg
insb
or
pop
pop
jmp
movsb
adc
cmp
pop
bound
lcall
push
iret
loop
dec
loop
inc
inc
rorb
inc
mov
sub
gs
dec
sysret
daa
or
pop
sbb
lock
xchg
xor
mov
lock
ret
fwait
mov
int
mov
rorb
dec
sarb
pop
mov
xor
push
adc
sti
in
mov
lods
or
gs
inc
dec
mov
cwtl
sbb
mov
jge
cmpsb
dec
je
inc
scas
jmp
xchg
scas
je
scas
and
and
movnti
mov
into
addr16
test
cmp
vpmaxsw
sub
imul
push
cmp
rcll
jb
sahf
stos
pop
fdivrs
ja
iret
push
xor
jnp
cmpsb
cmp
loop
cmp
dec
negl
stos
mov
xor
out
dec
in
xchg
and
xchg
addr16
add
sub
sbb
enter
test
fbstp
mov
inc
cld
adc
aas
stos
dec
mov
test
aas
outsl
adc
push
jnp
add
add
adc
inc
out
enter
jne
push
js
out
mov
lret
pop
pop
imul
mov
sbb
sub
sub
std
popf
jl
bound
mov
xchg
add
ljmp
mov
pop
arpl
sbb
jmp
call
and
jno
repnz
jo
mov
push
push
daa
dec
cmc
sarb
fiadds
fldl
mov
dec
cmp
push
shrl
sbb
test
aam
dec
mov
stos
fists
pop
aad
xor
and
pop
subb
push
mov
pop
std
xor
in
daa
pop
inc
cmp
int3
and
jnp
pop
push
mov
lcall
jb
pop
inc
fisubrs
sub
in
cmp
fdivrl
mov
aaa
sti
pushf
mov
xor
stos
ja
cmp
cli
inc
mov
and
outsb
mov
sarl
js
jae
cmp
pop
mov
cmp
jl
sub
inc
popf
mov
xor
lret
add
mov
adc
gs
jno
lahf
add
or
cmp
sub
inc
cmpsb
cmp
stos
xor
and
sbb
ljmp
insl
or
jns
aaa
fdivs
xchg
push
jmp
lods
js
mov
xor
jbe
iret
movl
or
xor
lret
push
enter
add
lock
popf
in
xor
idivb
pop
in
mov
or
xor
dec
pushf
xor
cmpsl
jne
inc
and
adc
clc
pop
pop
dec
adc
ljmp
loopne
test
dec
fisttpl
shrl
mov
out
lcall
jbe
xchg
add
cmp
mov
cmp
xor
stos
jmp
xchg
jo
jae
xchg
pop
push
sbb
push
arpl
repnz
insb
inc
cmpsb
xlat
out
inc
mov
aaa
dec
fcomp
fs
ljmp
and
inc
and
sub
xor
icebp
popl
inc
sub
shlb
js
stos
insb
xlat
repz
imul
jae
xchg
fadd
imul
pop
mov
lcall
or
out
fs
lcall
mov
ret
push
sub
out
push
aas
cmp
rcrl
sub
push
xor
and
xchg
add
lea
and
jb
dec
mov
xor
stos
lds
mov
fidivl
std
cltd
adc
pop
xchg
scas
push
mov
mov
push
not
insl
fimuls
sbb
mov
add
push
fists
lcall
icebp
pop
lret
std
rcr
stc
shl
ds
pop
into
xor
pop
out
roll
stc
lret
loope
push
xor
out
outsl
push
push
fiaddl
push
pop
inc
inc
test
jns
adc
jno
lea
fisubrs
and
push
cli
jo
mov
xor
scas
pusha
cmp
adc
push
mul
gs
ds
jg
movsl
push
pop
in
ret
cld
push
aas
add
or
mov
mov
aam
lods
xor
sti
icebp
bsr
test
daa
xchg
add
adc
xor
mov
sbb
stos
test
xor
mov
adc
pop
fisubrl
mov
loope
ror
sbb
fldenv
mov
add
mov
shrb
mov
sub
negb
flds
inc
xchg
jecxz
enter
scas
roll
cwtl
adc
mov
jmp
cmp
xorl
cmp
mov
mov
cwtl
push
push
out
dec
inc
adc
aam
data16
inc
sti
leave
adc
leave
pop
into
inc
push
lds
stos
and
movsb
jg
test
out
outsb
dec
mov
jb
sbbl
push
lock
sarb
ret
into
loop
xchg
enter
pop
sbb
mov
mov
jmp
inc
test
fsubs
popf
scas
cmp
inc
xor
lods
arpl
sbb
mov
sbb
add
add
loopne
and
mov
xlat
inc
mov
lods
pop
cmp
loop
mov
insb
out
mov
adc
cs
push
pop
mov
xchg
xchg
and
add
in
cmpsb
clc
xchg
cmp
push
push
sbb
or
sbb
cwtl
pushf
fidivs
outsb
sti
mov
nop
out
sbb
xchg
xchg
mov
jnp
xor
cmc
iret
test
and
out
mov
in
outsl
imul
push
loop
aas
cmp
and
ret
insl
jp
dec
mov
loope
int3
outsl
inc
cmp
mov
and
push
xchg
cmp
adc
mov
mov
cmp
mov
or
push
mov
sahf
jo
shll
sbb
and
inc
jbe
jp
testl
imul
sbb
inc
adc
mov
mov
push
stos
iret
sub
stos
sub
jnp
sub
popl
and
xchg
lcall
adc
mov
xchg
xor
data16
jge
mov
adc
imull
and
les
mov
icebp
jmp
rcrb
push
outsl
sbb
mov
mov
jnp
je
into
pop
out
call
cmp
mov
or
movsl
jecxz
jno
out
shr
scas
test
push
jns
jmp
movsl
shrl
into
xchg
add
push
call
mov
cmp
stc
jp
popa
daa
pushf
dec
sti
into
xor
movsb
test
xchg
pop
cmc
mov
mov
adc
jne
dec
aaa
call
sub
xchg
or
mov
clc
mov
push
xchg
sti
iret
lahf
adc
in
out
adc
out
xchg
push
scas
insb
or
sub
and
lret
in
ret
sbb
jb
xchg
cli
or
pop
bound
mov
xchg
mov
xchg
or
mov
push
mov
loop
hlt
es
in
out
in
xchg
push
pop
loop
rolb
scas
inc
loop
in
and
sbb
and
inc
xchg
sbb
fs
inc
jns
out
and
aam
lahf
fcmovnb
mov
sbb
or
cwtl
mov
sub
test
or
jl
mov
jno
mov
xor
mov
popf
lcall
cmpb
sti
nop
xchg
fmuls
leave
cmc
jbe
test
mov
dec
pop
mov
test
in
fadds
fdiv
dec
jg
pop
mov
jle
adc
or
sub
mov
fnsave
movsb
adc
lds
adcb
outsl
mov
cs
mov
xlat
xor
adc
push
shr
dec
mov
das
cli
dec
sti
roll
adc
xchg
icebp
sub
into
cmpsl
repnz
lcall
xor
pop
lock
cmc
xchg
fstps
adc
repz
inc
insb
roll
pop
xorl
or
pop
xchg
xchg
pop
andl
and
sub
rclb
inc
aaa
movsb
jmp
xchg
jae
mov
push
push
rsqrtps
notl
or
jp
sub
lods
addl
adc
cmp
mov
ror
data16
or
jmp
push
int3
inc
sub
pop
je
mov
jb
push
mov
jbe
je
stos
sbb
ljmp
xor
out
jp
hlt
pop
sbb
popf
jno
test
xor
test
ret
or
mov
xchg
push
and
pushl
mov
ret
pushf
shlb
out
xchg
test
rcrb
rcrl
in
push
push
fcomps
lods
sub
lods
xrelease
nop
fstl
ds
cli
mov
or
ss
cwtl
jae
pop
lds
jne
fiaddl
add
pop
loope
jle
pop
cmpsb
push
lods
pop
mov
movsl
clts
push
mov
mov
fcmovu
sbb
rcrb
xchg
imul
jb
and
insl
push
imul
pop
sub
cld
movsl
or
scas
lds
fs
pop
ret
and
outsl
mov
mov
or
jmp
pop
or
inc
dec
sti
ja
or
push
inc
adc
cltd
jno
push
ja
sbb
or
sub
and
aas
mov
sbb
test
lods
inc
mov
pop
clc
cmp
add
ljmp
lea
and
push
jecxz
pop
xor
dec
fildl
inc
push
test
shll
js
inc
and
add
dec
cli
dec
clc
insl
repz
out
adc
iret
push
jo
jb
call
push
xchg
test
mov
jp
fcoml
dec
out
jns
arpl
or
mov
into
push
mov
sub
fildll
jo
sbb
cltd
popf
sub
shll
cmp
sbb
test
pusha
lret
pop
xor
cmp
pop
fwait
push
es
mov
cmp
xchg
push
inc
push
inc
jno
jge
scas
mov
test
dec
pop
pop
cmp
mov
bound
and
cmp
mov
sbb
lahf
sub
jp
pop
loope
jns
mov
add
movsl
pop
xchg
loope
test
pop
lods
and
mov
xor
aad
and
sub
push
fisttpll
fmull
push
pop
push
mov
pushf
test
mov
adc
inc
xchg
or
xor
aaa
mov
daa
sub
adc
mov
rorl
dec
push
int
out
popf
sti
scas
push
fcmovnu
inc
insl
in
cwtl
mov
mov
ret
call
xchg
ret
lcall
dec
call
stc
cmp
jmp
shlb
inc
fcompl
sub
jno
jmp
ror
pop
out
xchg
roll
mov
sbb
out
and
sahf
mov
cli
ficompl
adc
fcom
xchg
inc
cmpsl
mov
mov
movsb
mov
push
ljmp
pop
xchg
out
cmp
inc
repz
xor
pushf
movsb
cmp
stos
in
dec
mov
add
mov
ljmp
xchg
or
pop
jb
inc
movsl
cmpb
mov
ficomps
add
mov
fldt
pop
rcll
jmp
stc
in
repnz
inc
cmc
fidivrl
lock
mov
jp
dec
sti
fwait
mov
dec
mov
ficoms
sbb
cmpsl
mov
outsl
sahf
pop
sbb
out
pop
fldcw
sub
loope,pt
enter
and
mov
jg
xchg
orw
sub
fiadds
std
dec
repnz
xor
rcl
add
fs
outsb
push
xlat
hlt
adc
leave
in
je
cltd
les
bound
aam
loopne
mov
outsb
mov
jle
adc
imul
push
inc
dec
out
push
js
std
cmp
or
xchg
icebp
push
sbb
sbb
xor
push
fcmovb
repz
in
mov
jne
dec
and
mov
aam
xchg
es
adc
push
ja
sbb
lret
pop
movsl
xchg
mov
mov
imul
fisttpl
imul
mov
or
fdivrl
cmp
xor
mov
and
roll
loope
mov
es
mov
pop
in
nop
jle
icebp
pusha
jbe
xchg
pop
and
mov
andl
or
pop
xchg
dec
mov
mov
mov
je
xor
or
lods
out
outsb
add
jne
inc
mov
in
mov
jb
movsl
aad
fsubrs
mov
xchg
mov
gs
mov
fists
mov
mov
addb
mov
inc
movsb
sub
daa
mov
push
leave
aam
jae
sub
lods
out
sub
push
mov
or
mov
cwtl
mov
aaa
fs
mov
sbb
push
jmp
and
ret
mov
jmp
cmp
push
lods
dec
or
xchg
xor
push
ss
shrb
mov
test
imul
jae
test
rorb
aas
dec
adc
jecxz
fistpll
shlb
sub
aaa
rcrb
rcll
cs
lea
xchg
xor
std
jecxz
xchg
inc
inc
nop
xchg
pusha
xlat
popf
inc
cwtl
dec
xchg
mov
lcall
xchg
xlat
dec
or
xchg
jp
es
push
frstpm(287
ja
inc
in
jecxz
pop
pusha
and
imul
ret
dec
push
mov
fs
cmp
mov
dec
push
xlat
cmpsb
sub
adc
je
mov
cmpsl
sub
iret
mov
testl
outsb
push
in
jge
ret
mov
cltd
or
xchg
and
or
pop
cwtl
xchg
out
jne
ss
daa
movsb
sub
cwtl
and
repnz
mov
cmpsl
pop
insl
mov
int
imulb
pop
cmpl
lods
dec
popa
loop
lret
ret
dec
mov
mov
cmp
popf
clc
xchg
mov
push
jge
push
and
pop
insl
ret
lds
and
arpl
and
adc
outsb
outsl
mov
push
jge
std
push
and
sbb
xor
sub
cmp
xchg
imul
int
mov
lock
aas
test
jae
xchg
push
push
cmp
adc
scas
push
fwait
mov
imul
in
mov
jmp
dec
outsb
in
jb
fisubl
ficoms
insb
mov
add
jp
in
inc
ret
push
adc
ljmp
stos
cmp
and
jae
push
lret
dec
lea
ret
pop
push
cmp
mov
aas
sbb
jg
in
neg
ljmp
inc
or
dec
scas
test
leave
push
dec
lods
sbbb
setge
xchg
add
cmp
jo,pn
cmpsl
cmp
dec
and
push
scas
call
xchg
xchg
push
jmp
daa
cmpsb
inc
and
mov
and
adc
and
mov
cmp
sub
xchg
push
push
sti
gs
add
xchg
pop
test
into
fidivl
push
fcmovnu
jo
dec
xchg
lods
inc
flds
decl
sub
xlat
imul
test
movsb
jmp
sub
inc
scas
jp
lret
mov
and
pop
lds
or
lods
dec
push
xchg
pop
test
sub
sbb
mov
das
cs
pop
jge
in
leave
adc
add
test
mov
bound
fwait
das
pushf
fisttpl
cltd
xchg
insb
dec
aaa
pusha
cmp
jns
repnz
or
xchg
sub
adc
addb
push
adc
push
fmulp
mov
inc
jb
xlat
les
jge
mov
inc
lret
cmpsl
xchg
xchg
xor
push
pop
pop
ljmp
leave
outsb
in
sar
jo
xchg
fwait
pop
loope
push
xchg
xchg
aad
repz
dec
adc
rcll
dec
cs
jbe
push
push
jnp
subl
insb
loop
dec
dec
pop
mov
mov
mov
insb
inc
ljmp
ret
cmp
cmpsl
lret
out
movsb
and
pop
fnstsw
rcrl
and
scas
js
insl
mov
cmp
xchg
inc
enter
pusha
cmp
cmp
sub
jb
mov
sahf
dec
ds
and
mov
pop
sarb
je
and
push
adc
jbe
inc
dec
cs
push
mov
addr16
iret
imul
fimull
and
je
pop
insb
ljmp
sub
lods
scas
fsubs
or
dec
fmuls
sbb
add
stc
xchg
fmuls
pop
icebp
or
mov
int3
je
lock
or
repnz
jne
dec
hlt
mov
cltd
jne
mov
jne
fildl
push
xchg
std
push
and
aad
inc
icebp
loop
sub
cmp
adc
mov
outsb
jmp
mov
rorl
fsubs
mov
ja
sbb
mov
and
pop
xchg
lret
out
push
outsl
xlat
mov
inc
dec
push
sarl
cmp
mov
js
bound
mov
scas
dec
push
cmp
aad
dec
sub
adc
stos
ret
xchg
push
sbb
scas
fldcw
cwtl
jmp
or
outsb
xchg
jecxz
and
iret
inc
leave
cmpsb
inc
adc
out
mov
lret
jge
sbbb
inc
mov
add
cmp
sub
mov
js
fwait
jge
daa
mov
adc
insb
orl
mov
lods
lock
leave
adc
or
mov
inc
mov
xchg
ljmp
stos
fdivs
int
test
sub
cmp
mov
mov
mov
mov
xchg
scas
push
mov
in
stc
fsts
test
jns
push
jle
js
fxam
pop
cmpsb
xor
mov
mov
jecxz
lods
cmp
ror
ret
ljmp
mov
dec
pop
mov
scas
ja
in
xor
push
push
xchg
jge
nop
scas
out
loopne
out
push
sbb
push
or
leave
scas
or
adc
das
dec
das
cltd
cmpb
test
loopne
icebp
xchg
cmp
outsl
loopne
add
dec
idivb
xchg
add
push
mov
lods
mov
mov
psubsb
repz
out
rcl
ss
xchg
sub
insb
sbb
adc
lea
cmc
popf
test
mov
pop
popf
jnp
xchg
push
into
or
mov
out
pop
jns
lock
sub
mov
cli
shll
mov
pop
int3
adc
or
int
or
lds
pop
push
mull
repz
inc
mov
and
jp
mov
xor
adc
popa
cmp
data16
sub
mov
imul
pop
loopne
movsl
pop
cmpsb
xor
adc
out
addr16
ja
mov
ja
aas
scas
xchg
dec
shll
adc
ret
mov
xchg
inc
dec
call
stos
mov
cld
shll
xor
and
jg
pop
and
push
out
les
push
arpl
out
push
cwtl
out
push
jnp
jg
xchg
les
sbb
mov
and
cltd
or
incl
add
mov
clc
out
push
adc
sbb
pusha
call
test
scas
cmpl
mov
push
or
and
sar
jmp
js
pop
pop
sbb
or
jmp
stos
sub
and
sub
push
push
popf
push
dec
rorb
inc
outsl
mov
inc
push
lret
insb
aam
ret
xor
sbb
inc
xor
or
xor
xchg
mov
or
add
incl
jno
cltd
insl
cs
out
jle
cld
mov
mov
sarl
jp
xchg
xchg
jne
xor
mov
ss
and
jbe
icebp
repnz
rorb
fwait
pop
pop
in
or
xchg
call
push
jg
cmp
or
das
sub
test
inc
pop
insl
mov
out
sbb
int3
push
bnd
aaa
adc
inc
fs
popl
out
push
fnsave
in
or
sbb
testb
ja
push
outsb
inc
mov
test
jbe
pop
stc
mov
sbb
cmp
stos
daa
adc
cmpsl
int3
aad
in
cmp
int
rcr
adc
mov
pop
jge
adc
int
mov
outsl
and
int
test
lods
popf
inc
jle
jns
fldt
in
leave
jmp
pop
popa
push
fists
add
mov
dec
pop
test
add
es
es
cld
or
addr16
mov
jae
push
lret
fiadds
cmc
out
aaa
and
daa
xchg
addb
xor
dec
subb
sarb
cmp
ja
inc
shlb
insb
xorl
loope
mov
push
pop
enter
adc
in
mov
cwtl
xchg
inc
rcl
movsl
add
aas
je
cs
or
jl
cli
cmp
push
call
jo
lock
push
imulb
cwtl
dec
lcall
adc
movsl
pop
jb
mov
js
mov
adc
cmp
xor
sub
push
ret
and
cld
negl
movsb
je
add
xchg
enter
lods
outsl
scas
mov
mov
loope
pop
addl
sarl
dec
jmp
mov
mov
negb
shlb
mov
fadds
ss
adc
mov
pop
or
loope
das
sbbb
pop
fisubl
shll
stos
int3
lahf
outsb
movsl
sarb
pop
xor
fsubs
and
int3
idivb
sub
inc
cmp
popa
push
mov
cmc
and
outsl
iret
outsl
xor
cltd
adcl
shlb
pushf
mov
enter
jle
ljmp
xchg
pop
sbb
sbb
into
push
add
pop
pop
std
cmc
push
divl
std
jmp
pop
mov
push
aam
and
arpl
dec
popf
mov
push
push
inc
pusha
es
rolb
jnp
jle
lods
mov
shll
ss
ja
rorb
fiaddl
das
cmpsb
jo
fwait
push
sub
adc
pop
add
jae
and
pop
dec
mov
bound
out
in
fwait
mov
mov
pop
xlat
mov
jp
fisubs
iret
and
and
mov
shlb
lods
outsb
jb
and
and
lock
lahf
popa
jnp
out
dec
insb
add
out
bound
push
jle
inc
inc
add
insb
push
cmp
inc
stos
lea
fadds
imul
xlat
std
lcall
sbb
adc
push
sarb
mov
cltd
mov
mov
jle
aas
mov
xor
std
fldl
and
stos
dec
mov
ds
cli
popa
xchg
jp
add
lea
jecxz
add
jmp
mov
mov
xor
pop
adc
mov
sbb
loope
hlt
fiaddl
sbb
shl
sarb
ficoml
sub
cmp
push
xchg
adc
cmc
popa
push
mov
push
divb
in
fcomp
das
xchg
pop
sub
inc
adc
fcoms
sbb
icebp
xchg
lea
pop
insl
and
lds
sub
jbe
stos
aad
push
fbld
fdivrs
aad
pop
adc
mov
push
xchg
jmp
adc
popf
xor
push
pushf
pop
mov
ficompl
or
add
cs
xor
pop
sub
lret
cmp
cmp
inc
rcrb
mov
mov
loope
cmpsb
sub
pop
loope
clc
xchg
jo
sbb
adc
dec
xor
lcall
repnz
lret
lods
insb
out
push
test
add
outsl
mov
imul
icebp
dec
push
mov
outsb
arpl
push
adc
popa
cmp
lods
push
jecxz
jnp
pop
mov
hlt
sbb
icebp
sti
push
sub
dec
push
xchg
pop
outsl
mov
test
neg
pop
push
std
push
sub
adc
mov
fildll
push
sarl
roll
fdivrp
decl
cltd
sbb
mov
mov
les
push
pop
mov
add
ficomps
movsl
sub
fisttpll
push
xchg
xchg
sbb
scas
jns
xor
repz
adc
cld
loope
aaa
call
mov
xchg
in
rorl
jmp
pop
adc
fnstcw
sahf
and
repz
fbstp
lods
jmp
sub
sahf
int3
ljmp
ljmp
ret
jae
jbe
and
ret
es
std
cld
cmp
pop
std
jecxz
or
stos
push
push
pop
dec
and
lods
jo
sub
gs
pop
scas
jne
aas
mov
fmull
xchg
ret
jns
nop
add
inc
fs
int
mov
in
xchg
lahf
mov
arpl
insb
int3
out
lret
inc
and
push
xchg
pop
mov
cmp
push
sahf
pop
sub
inc
pusha
outsb
dec
push
jbe
jmp
sub
dec
pushf
pop
jmp
jb
sti
clc
mov
bound
ficomps
push
gs
adc
jl
jge
sub
xor
call
fimuls
popf
loop
sub
sub
add
adc
out
aaa
lds
pop
mov
add
std
lock
mov
adc
push
int3
xchg
out
test
das
stc
outsb
inc
cwtl
vunpcklps
cmp
adc
mov
sbb
sub
xchg
adc
xorb
mov
sub
les
lds
testl
in
jne
add
pop
pop
jnp
addb
lds
out
xchg
mov
dec
mov
rorl
push
sbbl
stc
inc
shll
fidivrs
lcall
jl
cld
fsubrl
xor
cwtl
inc
nop
mov
ja
push
pop
xor
cmpsl
mov
jmp
xor
shll
mov
fidivrl
dec
stc
or
fwait
pop
dec
lods
jno
sbb
in
adc
fwait
cmpsl
mov
push
mov
mov
or
mov
pop
cmp
mov
jae
arpl
jno
mov
pop
cltd
or
sub
stos
adc
add
je
cltd
or
gs
dec
sub
daa
and
mov
call
aaa
xorl
sub
and
ja
outsl
mov
sub
or
rcrb
rorb
inc
sub
jbe
add
stos
adc
inc
pop
fwait
jp
pop
jmp
jno
pusha
mov
jp
sbbb
cmpsb
pop
aas
cmp
test
insb
adc
or
lea
fs
rcll
push
and
leave
scas
mov
movsl
jb
pop
add
inc
call
or
lahf
jg
pop
in
int
cmpsw
sub
inc
aad
into
mov
ret
and
movsl
leave
jae
test
fs
or
xorl
ret
cld
add
xchg
mov
test
aaa
inc
loop
jp
pop
aaa
popa
mov
not
and
cmp
and
roll
pop
and
movsb
cmc
push
adc
dec
jbe
ss
xor
nop
mov
mov
mov
mul
push
pop
mov
gs
cmp
jg
pop
bound
icebp
lds
fdivrs
adc
jns
mov
stc
inc
leave
or
jmp
data16
loopne
cmp
pop
sub
mov
push
aam
lods
or
hlt
and
data16
insb
adc
and
jle
and
push
adc
cmp
xchg
cmp
in
mov
cwtl
cmp
xor
pop
jg
cmp
mov
cmpsb
decb
inc
mov
cmc
push
pop
cmp
enter
dec
lods
cmp
test
push
push
hlt
out
imul
and
leave
xlat
cmp
push
and
dec
outsl
in
dec
imul
dec
daa
inc
inc
sub
xchg
cld
push
jmp
jmp
xchg
ret
jns
das
stos
je
sub
inc
push
sbb
jmp
cmp
inc
loop
test
cwtl
insb
or
or
or
inc
pusha
add
lods
not
jo
ds
or
lds
mov
loop
sbb
mov
jmp
mov
push
repnz
or
out
cmp
aad
arpl
divl
rep
pop
pop
repz
outsl
jge
out
adc
mov
dec
sbb
xlat
pop
gs
sarl
dec
rorl
mov
icebp
add
aad
push
and
popa
sub
push
into
add
in
xchg
mov
cmp
adc
test
cmp
inc
ret
mov
call
jne
mov
inc
pop
mov
movsb
pusha
or
lret
nop
push
pop
fldt
cmpb
sbb
pop
nop
hlt
scas
fdiv
rorl
pusha
adc
das
fstpl
dec
xlat
leave
sub
loope
cmpsl
add
xor
mov
pop
and
push
enter
jb
insb
mov
cmp
aaa
iret
xor
popf
jmp
or
or
sbb
push
movsl
mov
frstpm(287
pushf
test
or
fbld
xor
mov
jg
inc
xchg
cltd
sbb
ds
into
hlt
inc
imul
emms
fcmovbe
dec
lods
add
and
mov
paddq
push
jmp
cmp
mov
int
leave
hlt
inc
int3
lods
movl
sarl
in
jnp
loopne
fimuls
push
sub
and
int3
sub
aas
or
lods
cmp
jns
ljmp
sti
xchg
jnp
test
sub
cmp
into
xchg
aad
or
hlt
push
mov
dec
insl
sbb
add
and
gs
xchg
loopne
dec
adc
cli
or
scas
loopne
sub
and
iret
push
movsb
repz
gs
outsl
popf
adc
cs
jbe
cmp
cmc
data16
js
fcom
data16
add
fbstp
cltd
jg
hlt
and
push
mov
mov
ljmp
dec
lcall
movl
pop
push
movsb
mov
iret
sbb
inc
push
inc
sti
outsl
mov
and
shll
les
lods
mov
mov
in
fidivs
pushf
mov
lret
mov
fdiv
xchg
push
shll
lods
push
pop
punpckhdq
jnp
pop
xor
sbb
dec
hlt
ficomps
pop
mov
mov
rcll
jmp
mov
scas
add
mov
in
cmp
out
sbbb
shll
mov
cmp
push
mov
clc
sbb
add
mov
dec
pop
imulb
xor
iret
mov
int
xor
push
insb
xlat
inc
cltd
out
xchg
mov
add
push
in
lods
shl
in
lea
mov
dec
flds
cmp
out
das
jae
cli
sub
out
mov
jmp
pushf
stos
fidivrs
pop
in
ljmp
sbb
fcmovnb
pop
imul
mov
or
subl
push
pop
lret
scas
sti
pop
mov
inc
adc
adc
jle
or
push
sbb
shlb
iret
inc
push
pop
popa
sub
jp
sub
nop
pop
xchg
addr16
xor
push
loope
dec
cli
pop
and
leave
cmp
sti
fldl
jns
js
roll
ss
enter
xlat
dec
inc
in
movsl
in
outsl
xchg
dec
scas
loop
pop
xor
sbb
mov
cmpsl
imul
dec
and
cltd
out
test
xlat
and
jmp
js
arpl
out
sti
clc
clc
cmp
stos
mov
in
sub
and
ljmp
mov
fisubrl
test
jb
popa
bnd
gs
dec
xchg
sub
cmpsb
ss
sbb
loope
mov
nop
sub
enter
in
mov
sbb
ss
and
xor
shr
or
sti
mov
xchg
adcl
shr
mov
xchg
mov
xchg
testl
mov
imul
adc
push
pop
popa
popa
xor
inc
incb
lret
xlat
ds
adc
ljmp
pop
mov
mov
outsl
mov
push
mov
mulb
rorb
xor
dec
mov
sub
cmp
push
push
mov
jns
mov
pop
call
insl
imul
lods
cltd
cmp
clc
push
mov
sbb
sub
mov
enter
mov
into
stos
cmp
sub
push
js
out
roll
frstor
shrb
loopne
icebp
scas
xchg
rcr
lds
clc
mov
xor
sub
int
addl
shl
mov
push
icebp
push
add
icebp
clc
sbb
jae,pt
mov
sub
mov
mov
sahf
xchg
pop
dec
sbb
or
inc
push
rcll
test
cmpsb
jnp
nop
pusha
jbe
cmp
xchg
in
jae
xchg
outsb
ja
cmc
dec
rorb
or
and
or
dec
and
fsub
or
daa
mov
pushf
push
xor
aaa
xchg
mov
insl
xor
iret
jle
jle
inc
mulb
sbb
jns
fdivp
aam
jecxz
cli
or
rcrl
aam
sub
ret
mov
sbb
cli
test
jmp
inc
imul
xor
popf
inc
or
mov
rcrl
rclb
adc
les
add
mov
inc
xchg
ds
aad
jecxz
mov
call
jg
push
push
inc
xor
out
adc
shrb
dec
movsl
and
ret
pop
lods
clc
sbb
jo
shlb
enter
or
fistpll
push
lods
push
std
clc
sub
mov
testl
lea
mov
jl
loopne
or
add
and
mov
movsb
push
push
mov
js
add
outsb
shrl
out
jno
push
cmpsb
je
mov
sub
subb
adc
push
mov
dec
lds
andl
jae
inc
jnp
cs
out
out
icebp
fcompl
mov
mov
fs
dec
cmc
js
sahf
mov
movsb
push
lods
adcl
inc
loopne
mov
test
sub
jbe
adcl
cwtl
or
scas
and
out
inc
mov
data16
or
inc
inc
out
xor
adc
mov
loop
pusha
repnz
xor
fwait
aaa
movsb
iret
mov
es
fisubrs
pop
nop
xchg
pop
and
pop
inc
cmp
mov
adc
rolb
xchg
pop
push
mov
mov
addr16
dec
sbb
jl
xchg
imul
push
lods
cs
imul
jmp
filds
xchg
sar
dec
mov
in
fbld
in
out
subl
lock
scas
mov
dec
mov
pop
sbb
sbb
add
adc
xchg
fisubrs
sbb
nop
leave
pop
ret
xor
mov
ds
mov
jo
pop
and
add
sti
push
add
outsb
stos
or
scas
mov
dec
inc
std
jb
sbbl
sub
lea
ficoms
jno
xchg
lock
adc
or
into
gs
xchg
sub
cmp
mov
mov
arpl
lret
pop
stos
sti
push
iret
scas
arpl
aas
dec
shll
push
inc
mov
hlt
mov
xor
xchg
xor
pop
mov
mov
add
mov
sbb
shlb
xor
fadds
pop
inc
xor
mov
loope
pop
jno
clc
mov
daa
mov
or
data16
in
mov
ss
push
or
lods
lock
int3
test
lock
leave
addr16
mov
cmp
push
push
or
pop
fdivl
jae
cmc
add
stos
outsb
xchg
dec
xchg
in
stos
or
dec
cmpsb
imul
fisubrs
dec
xchg
imul
sub
movzbl
call
jo
mov
mov
xchg
adc
pcmpgtb
in
scas
sub
insl
scas
repz
xor
inc
sbb
shl
cmp
push
mov
bound
insb
ss
icebp
mov
data16
dec
pop
loope
repnz
and
xlat
mov
xchg
mov
subb
movsb
leave
loope
xor
insl
jmp
cltd
loopne
adc
mov
leave
aas
sub
jle
inc
testb
pop
lar
cmovge
mov
xchg
cmp
into
sbb
xchg
stos
out
call
dec
sbb
cmpsl
jge
fsts
lahf
xchg
dec
inc
adc
xchg
inc
jge
dec
and
test
push
stc
lea
xor
cmp
mov
adc
in
mov
movsl
mov
lock
es
cli
shll
shll
into
stos
and
sbb
movsb
inc
xor
js
sbb
fwait
pop
sar
mov
dec
fs
xchg
movb
outsl
inc
and
push
fwait
call
dec
shll
enter
aas
cmpsb
jb
adc
and
adc
rcll
fs
lds
fs
mov
inc
push
mov
ljmp
cmpsl
mov
push
pop
mov
mov
sbb
lods
adc
leave
dec
mov
xchg
leave
js
sbb
add
cli
rcll
ja
sub
ret
movsb
mov
testb
rcr
push
pop
cmp
icebp
jo
mov
mov
cmp
xchg
cwtl
xlat
mov
add
or
sti
cwtl
xchg
adc
fiaddl
rorl
dec
xor
enterw
call
fistl
ret
jg
jle
int3
mov
js
add
pop
les
subl
mov
in
inc
jecxz
mov
xchg
inc
mov
leave
leave
hlt
test
push
iret
add
cmp
ret
and
sbb
add
push
jnp
bound
mov
ficoms
sahf
or
fidivrs
inc
push
mov
jp
lret
mov
cld
roll
outsb
pop
lock
xchg
push
mov
and
shrl
and
ret
pop
cmp
mov
push
dec
add
jnp
insl
popf
out
cmp
jne
int3
jge
add
push
rcrb
cld
jns
iret
imul
mov
push
lock
cmpsl
add
cmp
sbb
bound
in
outsl
add
mov
push
sub
or
js
jg
push
sbb
dec
and
jecxz
pop
xor
xchg
mov
nop
adc
int3
icebp
out
mov
add
imul
ficoms
insl
loope
into
jg
xchg
mov
lods
mov
mov
js
aam
iret
jns
xchg
repz
mov
imul
adc
sub
mov
inc
sti
insb
fisubrs
jecxz
aad
imul
out
adc
push
in
xor
push
pop
arpl
dec
dec
ds
enter
aas
xor
pop
ljmp
xchg
mov
inc
inc
push
pop
mov
aam
out
jl
xor
sbb
lcall
xor
adc
jb
mov
xchg
insl
sub
jo
dec
adc
mov
out
mov
inc
dec
add
add
bound
lret
inc
pop
jns
xchg
and
or
mov
dec
pcmpeqb
cmp
add
cli
push
jmp
mov
imulb
cmpsl
jecxz
xor
mov
pop
adc
adc
mov
in
movb
psubd
int3
mov
mov
rorl
dec
test
ror
stos
stos
pushf
cmp
xchg
jnp
xchg
iret
cmp
in
push
cmp
jno
push
jl
imul
sbb
mov
fstpl
mov
mov
ret
nop
inc
mov
les
popa
pop
mov
mov
movsb
sub
int3
mov
clc
cmp
mov
sbb
rclb
xlat
mov
ja
sbb
xchg
insl
jl
dec
fnstcw
mov
xor
inc
cmpsl
int3
cs
dec
xor
dec
push
out
cs
in
mov
in
mov
xor
pop
inc
jmp
pop
mov
rolb
scas
inc
cld
mov
cmpsb
ret
push
jl
mov
adc
sub
out
cmpsb
pushf
aam
nop
in
popf
jge
into
cmp
fcomip
xchg
pop
pop
imul
cmc
mov
push
movsl
aad
and
add
mov
daa
xchg
xlat
xchg
mov
das
xor
jbe
cmpsl
mov
dec
aam
mov
ja
loop
repz
sbb
adc
cmpsl
rcrb
cltd
jp
ffreep
nop
or
push
jl
data16
mov
rcll
add
mov
mov
pop
mov
int3
xchg
mov
mov
dec
imul
dec
sti
push
pop
sub
xor
ficompl
xchg
jno
xchg
fsubr
pop
sahf
cmp
cmp
sbb
sti
orl
cmp
pop
jae
add
aam
outsl
dec
and
js
mov
cmc
sti
pop
add
sbb
xlat
emms
es
insl
jge
adc
fcoms
cld
rcrl
jns
mov
rorl
mov
and
jno
data16
push
enter
push
test
out
lea
pushf
mov
xlat
or
mov
fidivrl
mov
mov
pop
push
and
icebp
test
jp
sbb
inc
pop
or
insb
push
ds
daa
sub
adc
cmpsb
fldl
pushf
ja
sbb
hlt
xor
cli
xor
xchg
pop
dec
jns
dec
add
jb
adc
cmp
lret
popf
adc
lea
or
dec
xchg
ss
xchg
add
jb
pop
shll
inc
cmpsl
xorb
cwtl
xchg
arpl
sbb
lods
push
notb
ds
push
jb
push
js
mov
add
dec
xor
loope
lret
out
daa
das
xchg
cmpsl
cmpl
jge
out
push
out
xchg
fucomi
arpl
dec
arpl
sbb
jge
jle
test
lock
imul
and
or
in
lret
jo
mov
sub
push
fcmovne
jb
gs
rcl
pop
xor
cmpsl
sarb
popf
movsb
mov
mov
aas
addr16
adc
dec
and
in
aas
inc
and
gs
out
test
mov
jb
jmp
loopne
xchg
rorl
pop
mov
fiadds
out
xchg
sahf
and
push
inc
mov
shl
mov
jb
cmp
pop
and
xor
dec
mov
push
std
fwait
dec
or
jns
and
dec
jg
or
mov
cmpsb
xor
xchg
in
jecxz
adc
popa
xchg
ret
out
sub
ss
sub
loop
into
out
pop
cmpsl
push
repz
fucomip
fs
push
addr16
loope
lcall
outsb
aam
pop
or
dec
push
popf
xchg
jb
mov
jecxz
mov
inc
sbb
lock
sti
xchg
aaa
cmp
jecxz
aaa
sbb
jnp
mov
fiaddl
jg
dec
lods
lcall
and
add
jle
and
in
ret
pop
andb
jns
and
fstps
int3
mov
push
pop
ja
f2xm1
xchg
add
jl
xchg
jmp
mov
std
cmpsl
mov
and
gs
add
pop
das
xlat
mov
dec
jne
negl
imul
jo
pop
mov
addr16
jle
js
aas
add
cmpsb
or
hlt
push
sarl
mov
cmp
xor
pop
gs
pop
int3
arpl
inc
pop
jmp
mov
or
xor
in
fs
push
mov
sbb
into
push
cmp
in
xor
sub
test
lahf
push
jmp
lahf
and
sbb
inc
jle
lods
xchg
std
in
rcl
xchg
mov
jbe
adc
inc
cmpb
inc
data16
dec
sbb
fstpl
das
jbe
leave
imul
js
add
jb
out
xor
scas
clc
sbb
xor
into
imul
and
sub
out
sbb
mov
ja
push
inc
in
ffree
sbb
sbb
pop
and
mov
sets
xchg
add
arpl
ret
pop
adcl
add
push
jae
ss
jecxz
cli
icebp
loopne
ficoml
fcomp
jb
je
out
xor
test
rcrb
mov
mov
popf
cmc
cmp
or
mov
aad
push
push
movsl
mov
fcmove
adc
insl
cmpsb
fcoms
inc
jg
pop
movsl
xchg
jo
into
adc
clc
add
data16
jmp
mov
int
inc
inc
mov
jo
sbb
inc
enter
std
lods
push
sbb
cmpsl
fisubl
cmpsb
cltd
popf
in
sbb
outsb
mov
jbe
sub
fs
mov
mov
fwait
cmp
push
mov
pop
jne
jae
push
sub
mov
xchg
fadds
imul
into
sbb
push
cmc
notl
jnp
test
xchg
cmpsb
adc
popa
lcall
iret
push
cmp
jmp
xchg
or
loop
movsb
call
call
lods
add
or
push
call
scas
out
inc
sub
push
fs
lret
scas
cmpsb
shrb
pop
mov
aam
decb
dec
arpl
jo
in
xlat
or
fidivrl
in
divl
jge
in
repnz
loopne
mov
pushl
or
fnstsw
xor
mov
in
repnz
jno
pushf
test
cli
adc
stos
iret
cmpsl
lahf
cmp
xor
out
bound
xchg
inc
mov
or
call
dec
daa
lret
xchg
mov
push
daa
pop
xchg
je
shlb
push
xchg
mov
push
call
std
scas
ficompl
jae
pop
sti
add
add
dec
loope
jae
mov
fcompl
xchg
gs
inc
add
mov
lahf
push
inc
test
pop
mov
add
adc
add
and
jns
ror
mov
pusha
xor
push
shr
rcr
fs
jp
jno
push
mov
es
cmp
gs
sub
cmp
sub
push
xchg
adc
dec
orl
fimuls
pop
jg
ret
call
stos
cmp
les
shlb
mov
sbb
jae
je
add
shll
es
lods
out
loope
mov
in
cld
jns
push
punpckldq
dec
adc
lret
sahf
mov
mov
xor
push
and
stc
xor
adc
mov
mov
mov
xor
pop
dec
mov
sbb
jl
jg
cwtl
jbe
push
jo
inc
in
dec
lret
cmpsl
roll
ret
les
jne
lds
push
cmpsl
aad
or
xlat
mov
shlb
mov
inc
pop
int3
xchg
push
xor
aaa
push
imul
pop
fdivrp
dec
sbb
dec
push
ret
add
pushf
pop
fnstsw
mov
nop
push
stc
int
xchg
les
adc
movsb
push
xchg
push
lahf
push
scas
daa
add
dec
dec
pop
add
push
dec
in
fwait
cmp
lret
and
mov
inc
shlb
jg
push
cmp
cmpb
pop
sub
mov
push
loopne
xor
int3
pop
bound
jg
jns
les
dec
inc
aad
xor
filds
mov
pop
dec
in
aam
xchg
in
cmpsl
in
movsb
pop
add
aad
jmp
add
cmp
mov
sub
or
scas
into
les
jle
jecxz
inc
mov
xor
or
dec
adc
adc
in
fbld
jno
es
sub
cmpsb
push
cmp
dec
pop
jae
jne
pop
popa
push
xchg
jmp
fildll
shlb
stos
sub
xor
sbb
hlt
sub
shlb
iret
push
xchg
es
in
cmc
inc
pushf
fildll
jg
add
and
jecxz
or
out
pop
arpl
add
inc
xchg
scas
jbe
inc
lret
pop
jae
dec
push
cli
hlt
insl
adcl
sub
mov
dec
gs
fstp
icebp
movl
inc
cmp
cs
dec
lock
je
adc
jnp
sub
outsb
and
fmul
jae
push
ljmp
mov
dec
imul
test
hlt
dec
ja
scas
jns
pop
rorl
mov
int3
push
das
or
push
repz
dec
sbbl
sub
jb
mov
dec
leave
push
dec
bound
and
sbb
jecxz
push
dec
lds
jne
mov
push
rol
mov
arpl
aaa
mov
mov
cmp
shl
and
push
call
jle
cmp
jmp
xchg
pop
cwtl
cmp
push
pop
lods
sub
jne
sbb
inc
push
mov
clc
lret
mov
arpl
outsb
push
rcrb
in
icebp
movsb
addr16
add
push
fisubs
sbb
cmp
js
fidivl
rcl
mov
sbb
test
cld
or
sbb
loope
lret
adc
jbe
clc
popa
cmp
shlb
pop
popa
sbb
mov
hlt
lods
mov
pop
jbe
cmc
cli
pop
pop
sub
inc
in
xchg
repz
sbb
push
xchg
mov
push
mov
test
push
and
xchg
pop
or
pusha
addl
daa
mov
outsb
aam
adc
lods
movsb
inc
jno
cmp
data16
pavgb
pop
xchg
mov
mov
cmp
sahf
movsl
dec
lds
xchg
frndint
ss
and
shr
sub
add
add
repnz
jp
and
popa
sub
pop
cmp
mov
out
mov
sbb
xchg
int3
sbb
das
lea
jno
mov
pop
lahf
das
push
cmpsl
and
in
or
int3
mov
add
dec
add
iret
out
test
movsb
pushf
xlat
push
jae
cwtl
push
repz
pop
mov
push
inc
fnstenv
and
sub
cmp
std
je
xor
out
mov
cmc
out
jecxz
aas
mov
jns
add
sub
mov
int3
push
lock
scas
stc
cmp
sub
cmc
sti
nop
jecxz
xchg
and
push
mov
mov
jl
jg
bound
pop
scas
insl
xchg
test
mov
cmc
push
jl
xor
in
lea
mov
nop
sub
jo
mov
xchg
cmp
or
push
pop
data16
mov
mov
cmc
cmp
mov
gs
int
adc
xchg
int3
cli
push
or
outsb
xor
shl
xchg
sub
jp
mov
enter
es
and
fists
and
addl
repnz
sub
ficoml
sbb
ja
adc
loopne
loopne
or
roll
push
sub
push
pushf
add
push
mov
fisubs
jae
sub
jp
jno
cmpsb
mov
xor
pop
cli
fists
adc
cmpl
out
sub
add
loop
hlt
cmc
bnd
xor
pop
or
sub
xchg
scas
sub
adcl
inc
mov
dec
sub
out
jg
subl
insl
and
hlt
xchg
push
ljmp
mov
je
jbe
cld
push
jp
adc
mov
call
in
pop
lds
icebp
dec
mov
dec
data16
sub
testb
je
xchg
mov
sub
xchg
pop
jmp
pusha
scas
lods
xchg
dec
pop
cltd
lock
jle
movsl
inc
adc
inc
iret
xchg
pop
adcb
cwtl
add
pop
test
push
mov
gs
icebp
cltd
iret
jne
and
cltd
sbb
ss
add
mov
imul
mov
dec
jae
aaa
insl
xchg
addb
xchg
xchg
mov
dec
in
dec
push
xor
pop
fistps
push
add
push
icebp
mov
pop
lret
lahf
mov
adc
mov
test
inc
fdivrl
in
hlt
xorb
jne
fidivl
sti
mov
mov
stos
aad
xor
in
jns
mov
mov
or
lods
js
and
lods
mov
jnp
rol
pop
xor
jg
lret
dec
outsl
sarl
and
cmp
cmp
mov
xor
push
cs
mov
scas
outsl
cmp
pop
loopne
sub
add
mov
loopne
fsubs
cmp
xor
xchg
mov
ds
rolb
jecxz
push
mov
push
jp
and
mov
sbb
aad
out
es
cltd
shr
jl
inc
iret
je
insb
xchg
inc
ds
xor
enter
xor
mov
setle
repz
push
ret
test
fxch
ljmp
dec
xlat
dec
fstl
aad
jle
ss
mov
push
add
add
xlat
es
cmc
jp
lock
mov
cs
jnp
fistps
or
les
shrb
or
jno
dec
fs
decl
jp
bound
cs
or
js
shlb
cli
aas
in
mov
insb
push
sub
repnz
es
mov
jle
rorb
xor
stos
mov
in
mov
sti
inc
test
es
test
sahf
jmp
jmp
inc
jle
cwtl
loopne
int3
int3
mov
loop
popf
jb
mov
or
add
mov
frstor
mov
adc
lock
jecxz
test
stos
fdivrs
js
xchg
pushl
inc
jno
movsl
gs
cltd
ret
jg
cmp
dec
jp
stos
sbb
inc
xchg
test
cmp
lret
insl
mov
add
rcl
or
fs
popf
test
pusha
fdivs
fwait
xchg
lret
mov
push
cld
xchg
vpcompressb
cmp
andb
aad
push
push
and
enter
or
orl
addr16
mov
loope
loope
dec
sub
lock
scas
or
imul
mov
ljmp
mov
cmp
adc
in
clc
stos
enter
scas
iret
fisubl
cwtl
ss
test
loop
shrb
pop
xor
mov
dec
adc
push
repnz
subb
mov
pusha
dec
clc
call
xor
push
lock
enter
ror
loop
xlat
into
and
sub
pop
sub
jno
push
sbb
test
pop
lea
jb
and
out
jmp
fsubrs
jecxz
dec
aad
les
movsl
mov
jp
lods
mov
lods
mov
sub
je
leave
cwtl
adc
dec
ret
icebp
push
repz
jge
jnp
lock
jle
fdivrl
mov
pop
cmpsb
fistpll
push
push
cmp
push
test
or
push
push
sub
cmpsl
jne
xor
inc
xchg
shlb
mov
fistpll
mov
pop
pop
inc
xchg
sbb
cmp
mov
jmp
or
outsb
jne
mov
jecxz
xlat
adc
sbbb
stos
movsl
lock
andb
jg
or
cmp
xor
pop
add
jp
jl
dec
call
cs
fcomp
xchg
xchg
lcall
mov
mov
lret
push
mov
stos
ret
dec
movsl
inc
xor
ja
data16
mov
pop
sub
mov
ljmp
jbe
inc
icebp
movsl
arpl
clc
test
scas
addl
andb
xor
dec
nop
jne
and
js
rclb
inc
sbbb
jp
push
fld
hlt
clc
sbb
mov
jg
int3
dec
lret
dec
adc
mov
mov
loopne
dec
pop
mov
int
dec
or
adc
mov
inc
mov
fdivrl
das
add
loop
mov
rclb
push
push
fdivrl
cltd
jp
and
out
jno
je
shl
xor
arpl
push
or
aam
ljmp
sub
fmul
fidivrs
sbb
xchg
test
inc
pop
adc
lahf
adc
and
clc
fsubrs
ss
xor
cmp
jmp
in
std
push
fldt
adc
push
lret
lods
sahf
fildll
shll
and
and
pusha
and
bound
divb
dec
pop
sbb
daa
mov
shl
sbb
mov
nop
je
xchg
icebp
sub
mov
xorl
jmp
mov
imul
push
push
xor
adc
or
int
insb
mov
pop
pop
inc
dec
cmpsb
clc
pushf
dec
rcrb
out
xchg
fstpl
test
cmp
push
pop
sub
pop
jp
out
push
cld
pmulhuw
incl
imul
mov
lods
mov
jg
mov
ljmp
in
cmc
mov
mov
or
jmp
jo
dec
sbb
add
pop
fld
lahf
or
out
mov
adc
dec
lcall
idivb
jne
fsubs
cmp
xchg
cmpsb
pop
sub
and
xchg
sub
xchg
push
xchg
mov
jp
cpuid
mov
push
clc
ds
hlt
xchg
add
pop
clc
inc
sbbb
nop
jmp
lcall
mov
test
stc
xchg
inc
push
jno
sbb
jbe
cltd
push
pop
pop
dec
sti
and
pop
adc
or
push
adc
jae
adc
dec
into
fcompl
pop
ret
adc
movl
sub
in
dec
lea
lods
flds
jb
sub
xchg
mov
xchg
sub
cs
dec
pop
or
out
sbb
pop
popf
sahf
loop
pop
dec
mov
subl
fwait
lods
sti
addr16
add
out
sub
cs
push
jns
mov
push
lods
cwtl
daa
or
les
xchg
popa
fs
cmp
ja
jo
daa
mov
push
cmovge
js
push
lds
lds
push
enter
cmp
pushf
outsb
out
push
test
addr16
out
movsb
pop
cwtl
subb
outsb
daa
pop
js
ficomps
xor
lods
out
jo
sub
test
dec
outsl
iret
into
ret
ss
mov
shl
pop
subl
sar
sub
mov
mov
loopne
xchg
inc
mov
push
dec
cmc
int3
xchg
xor
test
jno
pop
push
push
or
jb
daa
iret
mov
out
popf
incb
negb
in
sti
inc
adc
ljmp
jecxz
test
or
in
movsl
outsl
fstl
mov
xchg
xor
inc
pop
adc
shlb
mov
adcb
fldt
fdivs
sbb
xchg
fwait
leave
iret
sti
cmc
into
icebp
xor
aad
aam
add
inc
out
and
jmp
stc
cmc
and
fsts
mov
pusha
imulb
jl
out
popf
pop
fimull
cmp
rcrl
out
and
leave
cli
iret
ret
lret
ret
fnstsw
jmp
mov
outsl
cmc
je
data16
add
decl
cmp
xor
scas
ffree
jbe
mov
jnp
push
cli
mov
inc
mov
sub
mov
cltd
mov
and
jne
adc
push
cmpsl
add
sbb
in
fsubrs
daa
fnstsw
sbb
out
mov
sub
adc
add
push
mov
dec
addb
inc
push
mov
jns
enter
clc
bound
je
sbb
cmp
pop
mov
cld
sti
and
mov
push
pop
or
or
cwtl
adc
lea
jae
and
cli
mov
pop
fbstp
inc
enter
icebp
out
jns
pop
mov
push
xlat
std
lods
jbe
adc
push
push
gs
imul
xchg
iret
inc
in
add
add
fldt
dec
dec
cs
dec
push
data16
cwtl
movsl
popl
inc
mov
dec
jnp
inc
pop
xchg
and
loop
jbe
test
lods
loope
rcrl
adc
jne
jno
out
sahf
adc
dec
cmpsb
sub
sbb
pushf
mov
push
adc
cmp
mov
lods
insb
mov
outsl
pop
sub
push
jbe
insl
xchg
mov
push
ret
in
inc
sbb
xor
repz
xor
scas
leave
aaa
mov
lods
sub
clc
rcll
fdivl
imull
mov
je
jo
xchg
lret
add
sub
mov
jp
xchg
scas
sub
mov
mov
inc
in
cltd
fcoms
inc
mov
sbb
add
std
dec
mov
mov
xchg
mov
mov
loop
adc
out
stos
inc
cld
js
imul
mov
add
sbb
ljmp
scas
outsl
xchg
stos
daa
mov
call
push
in
add
jae
popf
sahf
xchg
jb
sahf
cmc
and
lret
mov
add
adc
pop
sub
or
cld
xor
sbb
jnp
addr16
mov
pushf
sbb
jns
dec
leave
xor
adc
inc
fs
push
fidivs
inc
push
fld1
inc
dec
mov
sbb
mov
adc
mov
arpl
out
movsb
mov
cmpb
cmc
pusha
fisubrl
sub
std
popa
adc
lcall
lock
in
add
sahf
pop
pop
fstpl
mov
lods
mov
fsubl
stc
gs
addr16
mov
scas
cmp
push
mov
sub
lahf
or
popf
aas
ret
add
cltd
fidivs
aad
mov
insb
stos
or
aad
xchg
sbb
test
xor
test
xchg
jmp
add
push
xor
lods
cmovae
jae
loop
ret
fs
add
cmp
shrb
jno
xchg
sbb
cmc
js
cmp
mov
adc
xchg
push
fld
jg
add
movsb
mov
lahf
test
test
xchg
ds
add
fldl
push
mov
mov
popf
sarl
mov
push
push
arpl
arpl
jp
and
movb
jo
int3
and
pop
stos
dec
push
shlb
dec
pop
addr16
inc
insb
cmp
jo
mov
push
repz
mov
and
xlat
leave
rcr
es
dec
cmp
inc
lret
jl
jle
aam
mov
lret
in
pop
sub
sub
inc
mov
push
sub
into
arpl
test
jbe
push
test
loopne
sbb
mov
add
sbb
mov
inc
js
or
out
inc
insl
lcall
mov
sub
mov
or
lds
lods
scas
lods
cmp
test
jns
pop
daa
pusha
mov
xor
test
hlt
aam
int3
xchg
adc
adc
std
xor
xchg
cltd
fsubs
scas
adc
out
test
mov
jmp
mov
dec
mov
push
mov
in
pop
lret
orl
test
push
adc
rcrb
add
xor
adc
and
inc
ja
aam
jge
cli
xor
xchg
lock
dec
cmp
enter
cs
js
cld
cmc
mov
sbb
ret
cmp
sub
test
pop
ja
xchg
jp
adc
lret
out
lods
negb
int3
xor
rol
jb
inc
add
loopne
ja
mov
lret
loop
pop
mov
pop
jle
jb
lods
adc
arpl
dec
and
jnp
test
push
dec
rolb
and
pop
mov
xor
aas
les
repz
sub
pushf
in
jge
inc
mov
lea
iret
movsb
adc
ljmp
in
mov
pop
adc
push
xchg
outsl
mov
cmc
mov
in
outsb
imul
fld
mov
lea
fs
cli
xchg
jno
cmc
adcb
xchg
xor
mov
adc
mov
push
sub
adc
inc
xor
pop
mov
sub
and
lret
xchg
js
cmp
xchg
add
mov
mov
add
gs
adc
sbb
nop
scas
addr16
mov
jge
repnz
xchg
xchg
ret
jne
cmc
pusha
sub
fcmovnbe
aad
btc
ret
mull
cld
and
mov
mov
cmpsl
and
call
cmc
dec
pop
adc
push
jecxz
std
cs
ja
lcall
pop
mov
mov
push
sub
xor
mull
stos
mov
inc
test
push
notl
or
enter
pop
mov
cli
insl
fsubrs
pop
or
iret
inc
inc
dec
lret
or
sbb
inc
mov
adc
jno
inc
add
xchg
arpl
lahf
mov
xchg
popa
inc
fildll
adc
aam
jmp
mov
pop
hlt
mov
inc
sbb
pop
cmp
mov
shlb
xor
jae
inc
nop
daa
fimuls
jbe
sub
mov
or
into
or
add
jo
mov
mov
inc
lea
out
mov
sarb
insl
insl
enter
mov
pop
cmp
js
jg
add
movsb
dec
lret
cmp
xchg
jmp
inc
test
lock
or
inc
cmpsl
jle
jno
mov
and
or
xchg
cwtd
pop
mov
push
js
cmpsl
xchg
sbb
fidivs
or
mov
aaa
aaa
push
cmc
loope
iret
cmp
ror
push
scas
push
insl
pop
fistpll
bound
aad
inc
dec
fistl
add
addr16
xor
leave
adc
jo
jmp
cmp
cli
into
push
int
and
jo
push
pushf
testb
push
cmp
in
mov
mov
fucomip
jbe
pop
subb
leave
hlt
xchg
cmc
out
je
dec
iret
inc
dec
pop
adc
call
aad
movsb
cwtl
shr
jbe
sbb
pop
sub
shlb
mov
rclb
lods
rcr
roll
adc
data16
pop
aaa
gs
xchg
ret
ss
enter
repz
fisubrs
fcomi
mov
xor
sbb
pop
inc
not
movsl
insl
mov
test
sbb
cmpl
xor
mov
gs
lea
pop
jns
movsl
and
out
int3
andb
inc
je,pt
iret
xchg
and
pushf
stos
add
xchg
addl
cmpsb
jmp
loop
mul
out
ds
sti
and
test
cmpsb
sub
xor
add
dec
repz
or
jne
pfacc
mov
xchg
add
sti
test
stc
dec
std
popa
aaa
pop
js
mov
ss
sbb
jg
dec
gs
test
test
push
push
fs
nop
xchg
pop
sarl
imul
jl
movntq
mov
and
loop
xor
ret
xchg
dec
cmp
dec
je
pop
add
or
dec
adc
and
cmp
scas
dec
or
and
sub
sbb
push
int3
stc
cmc
fcompl
sbb
mov
dec
mov
jae
mov
addl
cmc
mov
dec
mov
dec
sbb
test
xor
adc
push
lods
and
xchg
push
xlat
lods
int
sub
pop
xchg
les
pop
inc
je
gs
imul
jbe
outsb
pop
and
jae
xchg
bound
pop
shr
adc
test
mov
data16
bound
lock
in
jbe
add
adc
pop
adc
sbbb
call
inc
sub
adcb
mov
repz
shlb
jecxz
loop
jno
dec
inc
rolb
xchg
inc
fsubl
loopne
dec
xor
shll
pop
and
jecxz
clc
dec
xor
dec
push
adc
jg
xchg
adc
sbb
ljmp
iret
dec
lods
adc
mov
outsl
fisttpl
cmp
mov
xor
je
loop
in
ljmp
adc
test
lahf
adc
inc
jns
outsl
movsl
fadds
cmp
jne
mov
mov
call
lcall
out
imulb
xchg
sub
fimull
hlt
aaa
stos
xchg
cmp
xchg
loope
fwait
shlb
scas
dec
pop
inc
daa
jns
ss
mov
pop
add
cld
inc
pop
test
xchg
in
arpl
frstpm(287
inc
lock
push
daa
cmp
xchg
mov
call
mov
leave
jae
test
xor
pop
sbb
unpcklps
xor
pop
aaa
das
and
or
sar
aaa
mov
mov
nop
in
lahf
sub
cmp
sub
ficomps
inc
addl
sbb
and
xchg
int3
ficompl
sub
rorb
and
daa
outsl
xchg
mov
cwtl
jmp
cmp
enter
shrl
je
dec
enter
fmulp
mov
adc
or
add
fwait
sub
dec
test
ss
cmp
jp
or
jbe
xorl
ffree
les
mov
push
sbb
xchg
mov
jecxz
dec
xchg
mov
sub
fidivl
add
mov
mov
jae
addb
out
inc
and
mov
xor
jmp
sbb
push
add
cmpb
test
xor
and
shl
aad
imul
pop
test
out
mov
incl
cmp
int
cmp
push
cmp
jp
insl
jb
test
dec
cwtl
push
sub
insb
adc
push
push
pop
mov
outsb
jae
imul
andl
in
or
mov
movsl
jb
cwtl
cltd
inc
add
xor
cmp
adc
mov
or
andb
cli
inc
inc
fs
fucom
or
pop
out
fwait
movups
aam
cmp
pop
and
mov
cmp
enter
add
mov
shrl
aad
les
repz
aaa
repnz
fs
xchg
enter
jb
arpl
lea
out
sub
adc
mov
adc
sti
movsb
mov
xlat
add
loopne
xor
mov
insb
mov
jo
pop
sbb
lods
mov
add
fistps
fsubrs
loopne
movsl
inc
popa
add
and
sub
pop
iret
enter
jmp
out
xor
flds
cmp
gs
cli
add
cmpsl
cld
mull
mov
cmpsb
sbb
inc
inc
inc
ljmp
add
pop
pop
lahf
dec
icebp
leave
jmp
jle
mov
fistl
jne
jle
add
add
negl
outsb
clc
mov
cld
mov
je
inc
push
sub
jae
push
and
mov
rcr
aad
inc
xor
xor
js
gs
out
in
inc
ds
cs
cs
add
cmp
sbb
cmc
negb
add
jle
push
sub
and
mov
rorw
fdivs
and
jecxz
lods
pop
pushl
and
jnp
outsb
xor
cltd
mov
sub
pop
mov
fcmovb
xchg
dec
lahf
roll
addr16
outsb
push
pop
xchg
fisttpl
sbb
nop
cmpsl
xchg
lods
ljmp
cld
aaa
adc
cmp
outsl
adcl
mov
adc
mov
mov
adc
cmc
cmp
mov
jmp
push
pop
lods
fs
ljmp
inc
nop
mov
and
cmp
inc
loopne
pop
sahf
xchg
insl
lods
sarb
pop
jg
push
inc
dec
fidivrl
mov
nop
jnp
mov
clc
xorb
add
arpl
test
mov
adc
iret
jg
or
in
ljmp
inc
pop
cmp
and
jg
test
out
in
data16
dec
cmp
stos
outsb
sbb
aad
aad
push
into
dec
mov
cwtl
dec
push
mov
pop
dec
testb
btl
xchg
mov
inc
rorb
mov
pop
cli
out
xchg
xchg
mov
xchg
shl
push
xchg
sbb
fldcw
dec
sub
cmpsl
sbb
jmp
inc
sarl
add
xchg
and
pop
mov
sahf
mov
or
fsubs
sub
aaa
sbb
lcall
xlat
enter
ret
jo
sub
popa
in
notl
jp
xorl
push
adc
mov
testb
lcall
mov
push
mov
test
ja
arpl
ret
mov
jp
jno
xchg
cmp
test
jmp
adc
ret
and
shr
xchg
fs
negl
push
jae
inc
insb
inc
cmp
out
cmp
mov
mov
mov
frstor
inc
daa
cmpsl
push
cmp
aad
jnp
pop
das
fs
pop
test
cmc
fnstsw
arpl
mov
int
mov
imul
ljmp
cmpsl
sub
mov
test
mov
ret
fiaddl
shrb
arpl
imul
push
cmc
jmp
fnstenv
cmp
cwtl
shlb
dec
lods
push
inc
test
aad
fmul
mov
xchg
cmpsb
jno
add
popf
adc
jecxz
enter
sbb
or
and
fstpt
in
mov
and
ficoms
dec
mov
loope
pop
cld
aad
jge
je
jle
ficompl
rcll
inc
cmpsl
aaa
in
jns
dec
push
inc
jns
clc
pop
sub
cwtl
inc
push
mov
sub
pop
imul
leave
adc
jmp
push
fbld
xchg
fs
cmp
xchg
lock
testl
rol
sbb
sbb
or
mov
inc
mov
add
je
movsl
repnz
xchg
add
inc
mov
lahf
imul
loopne
cmp
inc
xorb
mov
jns
repnz
ja
dec
jnp
jae
leave
mov
nop
bound
cmp
dec
pop
shl
out
scas
mov
adc
dec
jb
push
daa
jmp
ljmp
in
fs
decb
add
cmp
rolb
jge
lcall
or
push
dec
dec
nop
pop
mov
pop
and
mov
pop
bound
adc
out
mov
lods
std
jne
shlb
mov
xchg
adc
dec
pop
jae
aaa
inc
mov
or
inc
cmpsb
adc
inc
ret
push
int
mov
outsl
inc
or
xor
insl
push
jge
add
inc
sahf
rolb
xchg
fstpt
adc
xchg
lcall
bnd
shlb
add
xchg
cli
movsb
test
dec
lods
cmp
pop
orb
pop
adc
or
int3
mov
xchg
addr16
das
pop
lret
push
jmp
scas
push
mov
jg
mov
aad
and
pop
push
jns
xchg
shll
adc
cmp
mov
xor
adc
loopne
dec
mov
cmp
push
test
adc
mov
sub
leave
or
arpl
sbb
sbb
xchg
cmp
inc
pop
sahf
loop
dec
shlb
mov
insb
scas
and
rcll
clc
cmp
dec
cmp
out
test
push
and
stos
and
push
or
jl
pop
test
sub
sbb
mov
pop
shlb
add
pop
pop
cwtl
jmp
out
js
inc
jo
xchg
add
imul
cmc
xchg
movsl
push
into
int3
cmpb
push
mov
ficomps
cwtl
in
rcl
cmpsl
scas
lock
stc
push
repz
xor
mov
sbb
mov
cli
mov
pop
xchg
lods
int3
imul
mov
mov
test
xor
je
push
push
xlat
hlt
sarl
daa
mov
xchg
add
stos
ja
sub
jecxz
xchg
pop
and
lahf
jno
int3
lahf
subb
jne
cld
inc
add
push
xor
push
andb
ficoml
cmpl
popa
test
push
loop
mov
sub
mov
daa
ljmp
adc
mov
add
mov
push
xlat
adc
pop
adc
out
pop
in
es
hlt
in
sahf
es
repz
cmp
push
pop
test
push
imul
add
js
jl
or
dec
and
lea
cmp
dec
sbb
fisubs
inc
and
fwait
add
es
jg
push
mov
and
adc
into
push
jne
adc
pushf
andl
outsl
xchg
cwtl
cmp
sarl
lock
cmp
push
fwait
and
lods
adcb
ljmp
leave
and
adc
push
push
mov
sbb
jge
inc
lahf
call
push
sbb
adc
popa
lods
cld
xchg
repnz
icebp
imul
loopne
push
ds
push
jno
mov
cltd
pop
fadd
dec
cld
pop
mov
inc
cld
loop
out
insb
lret
xchg
push
scas
ret
jo
add
and
mov
push
xor
pop
xor
mov
mov
xor
int
add
push
out
inc
xchg
mov
movsb
push
xchg
inc
cld
into
shlb
pop
mov
shl
adc
shll
test
in
std
clc
mov
pop
mov
xor
or
std
aam
shrb
cmp
lret
hlt
pop
andl
add
repnz
jns
cmp
dec
shlb
imul
repz
in
js
mov
ja
push
push
cltd
dec
mov
mov
push
push
pop
movsl
pop
push
lds
std
xor
xchg
xor
popf
or
gs
add
setp
sbb
lcall
sbb
iret
cmp
imul
mov
ljmp
dec
dec
mov
jmp
jae
xlat
pop
ror
mov
scas
or
xchg
push
sub
nop
jle
movsb
mov
rcll
dec
mov
sub
xor
sahf
rorb
orl
jno
pop
out
es
push
cmc
das
stos
push
and
or
insl
rcl
jae
int
xchg
sbb
lods
inc
add
xor
jne
fsubrl
adc
add
test
xchg
add
lods
xchg
sub
ss
outsl
inc
xor
test
mov
sub
xchg
repnz
push
test
or
sbb
jl
lret
enter
xchg
and
mov
aam
cwtl
mov
xor
add
std
pop
repz
add
and
xor
mov
std
sbb
pop
dec
mov
ja
sub
mov
fiaddl
mov
ret
sub
sahf
pop
pop
sbb
push
bound
pop
push
xor
mov
inc
push
adc
xor
pop
and
xorl
mov
jnp
dec
mov
ds
push
repnz
inc
inc
xor
in
fwait
dec
stos
frstor
inc
lods
add
lods
push
xlat
sti
js
popf
fmuls
sbb
cmp
imul
out
cmpsl
out
xor
aaa
lahf
xor
pop
xor
es
sub
mov
int3
mov
fmul
mov
ret
stos
xorl
adc
inc
dec
stos
out
in
sbb
fdivrp
stos
push
in
sbb
out
movb
jmp
nop
stc
inc
scas
addr16
inc
cmp
mov
and
ds
test
fs
sar
xor
mov
sub
orl
sbb
subl
push
icebp
sub
xor
cmp
cli
shrb
xchg
adcb
mov
sub
fwait
or
push
js
mov
mov
sub
testb
jmp
sahf
jne
pop
jnp
icebp
adc
adc
mov
mov
dec
pop
sti
test
cltd
test
stc
pop
xchg
nop
call
and
push
es
lea
xchg
inc
daa
mov
cmp
adc
ja
sbb
sbb
push
cmp
dec
pop
jg
rolb
sub
add
jnp
pop
push
imul
mov
xchg
inc
int3
adc
aas
pop
inc
cmp
cli
adcl
cmp
repnz
push
dec
xor
stos
jmp
outsb
adc
xchg
sbb
aad
addb
xchg
and
clc
scas
lcall
pop
lret
ret
enter
and
in
btl
xchg
inc
add
add
xorb
sub
inc
cli
inc
jecxz
mov
sub
loope
inc
inc
ss
fsubp
hlt
movb
decl
jge
add
cli
ss
xchg
imul
fcmovu
inc
add
cmp
pop
xchg
negl
scas
movsl
xor
lods
mov
std
out
lret
shl
aad
lret
cli
imulb
adc
orb
out
nop
ja
cmp
aad
jae
int
xchg
mov
jno
or
push
popf
and
inc
rolb
mov
mov
dec
or
xchg
sbb
jp
cmp
inc
cli
xor
mov
adc
flds
pop
cmc
jp
adc
mov
shll
cmp
aaa
cmpsb
fs
fcmove
push
insl
jp
les
js
into
in
in
push
lods
hlt
mov
mov
adc
jns
insb
mov
add
mov
cld
push
xor
push
cwtl
inc
nop
fs
mov
insl
sbb
shrb
cmpsb
enter
adc
cmpsb
popf
js
mov
je
sar
xchg
mov
push
push
add
push
sbb
mov
shrb
sti
cmp
adc
fcoms
cld
out
sbb
xchg
push
xor
adc
jne
push
cmc
mov
out
test
into
sahf
ja
and
adc
in
jg
pop
rclb
jmp
or
xchg
pushl
jbe
movsb
sbb
outsl
sbb
mov
add
push
sbbl
and
push
addr16
lahf
jno
and
xor
mov
jecxz
mov
xor
lods
inc
scas
cmp
mov
into
inc
xchg
int3
or
mov
stos
pop
scas
jle
hlt
out
decl
gs
sbb
inc
jb
xchg
scas
shlb
jno
push
mov
pop
inc
xor
addr16
loope
out
cmc
rolb
xchg
and
movsl
test
push
mov
xchg
jle
sub
xchg
adc
sahf
gs
out
push
cmp
push
pop
dec
out
pop
adc
popa
enter
mov
fwait
ret
xchg
mov
lret
mov
outsb
nop
scas
fisubl
adcl
jnp
mov
sbb
cmp
aam
movsb
sub
inc
das
orl
clc
rcll
jg
cmp
mov
sub
pop
out
cli
sti
fnstsw
inc
push
lock
dec
adc
pop
andl
test
in
idiv
fistpl
xchg
adc
sti
jnp
inc
cmp
pop
jge
dec
jb
xchg
push
mov
and
sub
mov
xlat
inc
mov
dec
adc
pop
outsb
lret
imul
xchg
jle
xchg
push
loopne
stos
xor
dec
lock
inc
pop
in
cmp
and
data16
jo
int3
and
out
mov
adc
cmp
pop
call
test
xchg
sbb
loope
sbb
mov
xchg
sbb
andb
cwtl
inc
fs
jno
inc
mov
cwtl
mov
ret
stos
pop
fsubl
dec
pop
jmp
pop
mov
movsb
or
push
mov
fildll
pop
stos
aad
sbb
jne
xor
dec
xchg
jg
xor
aas
and
in
cltd
adc
fadd
int3
sbb
pop
mov
inc
test
jae
call
add
mov
pusha
sbbb
test
shll
rcrl
xor
mov
mov
lods
mov
sub
sbb
inc
pop
jg
iret
mov
xchg
jns
shlb
jg
aam
cmp
push
out
outsb
and
jb
add
dec
and
ret
in
fxch
in
push
iret
rcrb
push
dec
inc
iret
xchg
es
jle
loopne
stos
xchg
push
lcall
aad
push
adc
adc
pop
in
daa
aaa
loop
mov
xchg
or
pop
loop
lea
fmuls
in
fistpll
ret
cld
insb
xor
sub
in
cmp
dec
push
stos
ljmp
mov
loope
push
cmpsb
adc
scas
xor
adcl
pushl
lret
lods
sti
popf
and
mov
inc
sub
punpckhwd
fs
xchg
js
sub
mov
push
jecxz
dec
sti
mov
xchg
nop
jb
sbb
mov
sub
mov
sbb
daa
mov
jl
cmc
push
xor
xchg
fisttpll
test
call
out
xchg
pop
sbb
add
loopne
xor
xor
lret
mov
ret
push
pop
push
mov
arpl
lret
sub
sub
mov
lcall
jecxz
scas
mov
movsl
pop
in
mov
scas
jb
jg
stos
fcomps
daa
negl
lret
pop
inc
jmp
out
mov
adc
lret
mov
mov
jg
push
adc
push
pop
sbb
fldl
ljmp
pop
sti
jo
xchg
jns
sbb
jb
push
add
into
and
aaa
fpatan
push
sub
pop
cmpsb
hlt
test
xchg
hlt
popa
les
sub
out
test
pushf
push
push
or
std
add
cmp
xchg
pop
stos
fbld
fisubrs
fsts
ss
push
aad
and
sub
adc
jbe
sti
sub
cltd
adc
mov
aas
push
pop
add
fdivl
push
jg
xor
or
icebp
popf
push
decb
mov
je
hlt
or
sbb
push
or
das
pop
cmpsl
cmp
cmp
shr
cmp
lods
popl
lock
xchg
mov
sarl
stc
ds
mov
adc
pop
outsl
jmp
adc
test
jns
jge
add
jle
int
mov
sub
ja
push
divl
stc
sbb
or
jmp
ret
std
ret
xchg
sbb
test
loop
sub
mov
ja
sarl
mov
mov
ss
dec
mov
clc
xor
or
and
pop
fisubrl
mov
dec
sbb
sub
xchg
aas
sbb
test
dec
pop
lret
test
add
jl
adc
xchg
mov
jbe
fcmovne
mov
rcll
fidivrl
xchg
jmp
mov
cs
cmp
cwtl
dec
scas
jbe
jb
and
or
inc
mov
jne
mov
ret
pushl
imul
pop
push
js
lahf
mov
add
mov
dec
fs
adc
inc
jo
sbb
push
or
mov
jle
jmp
imul
ret
mov
xor
jp
cmpsl
mov
xchg
cli
enter
in
mov
sub
cmp
mov
and
mov
dec
push
lahf
and
insb
mov
clc
loope
push
and
push
mov
dec
lahf
stos
out
add
les
push
push
scas
jb
out
push
inc
imul
icebp
mov
jno
in
push
or
adc
dec
or
cmpsb
loope
xchg
add
mov
lahf
rcrl
shll
pop
icebp
xchg
dec
call
jl
lahf
fs
ret
or
daa
subb
cmp
das
cmp
flds
sub
mov
pushf
stos
pop
or
mov
push
sahf
rcrb
sbb
lcall
call
decl
sbbb
call
jb
dec
cltd
out
sbb
sbb
mov
push
je
inc
mov
js
rclb
sub
push
xlat
repz
jp
aaa
fistpl
xor
test
pop
test
loope
push
mov
sub
lret
std
sbb
xor
pop
out
dec
cwtl
mov
lcall
mov
mov
jge
out
ss
xor
sbb
cs
popa
push
xchg
push
jl
lods
lds
lahf
loop
movl
loopne
jo
and
out
pusha
fmull
leave
scas
adc
sbbl
loopne
lcall
inc
or
shll
into
xchg
cmp
mov
and
out
jne
shll
or
and
mov
es
mov
or
aam
shlb
or
mov
cmpsb
sbb
inc
test
insl
mov
insl
fisubs
jno
push
cld
sub
and
out
jmp
in
sbb
cmpsb
movntq
inc
mov
testl
das
inc
js
enter
in
mov
or
jnp
sub
pushf
push
or
mov
cmp
mov
dec
pop
add
adc
mov
mov
xlat
push
daa
sub
pop
jne
lods
sub
ds
lds
mov
stos
jae
mov
hlt
in
or
stos
test
mov
pop
adc
lods
jl
push
aaa
addr16
jl
nop
dec
mov
cmpsb
fmuls
mov
out
out
and
inc
mov
mov
leave
jmp
aaa
js
cmp
sbb
in
sbb
and
fucomip
jb
dec
cwtl
out
dec
add
stc
test
sub
fdivp
or
rorl
ja
jno
cmp
aad
or
jb
push
dec
push
aam
sbb
mov
push
xchg
clc
adc
pop
and
movsb
movsb
jg
sub
mov
in
rcl
jecxz
mov
mov
fsubrp
add
ds
ljmp
inc
sub
and
xchg
sahf
sub
mov
jmp
mov
or
push
xchg
loope
adc
pop
lahf
xchg
sahf
pusha
clc
xor
mov
ss
cld
in
cs
loop
or
mov
iret
fsubl
mov
mov
test
sub
cmc
sbb
out
ret
iret
std
push
ljmp
mov
sahf
adc
popa
outsl
cmp
sub
sar
mov
push
mov
shlb
mov
sub
inc
in
adc
lods
xlat
xchg
push
es
cs
mov
mov
lock
add
adc
les
stc
jmp
imul
pop
and
das
ret
shll
je
imul
mov
scas
test
aad
shlb
leave
sbb
aam
mov
inc
mov
cmp
pop
adc
ds
insl
jae
fistps
fstl
fistpl
mov
pop
mov
inc
lods
cmp
inc
mov
mov
dec
subb
cmpsl
out
and
lret
dec
dec
shlb
out
adc
add
ss
stc
push
mov
push
es
and
test
push
sarl
lret
adc
mov
and
fsubp
sbb
mov
rcl
mov
and
pop
fnstcw
pop
dec
cmp
mov
add
dec
mov
jge
adc
popa
mov
pop
dec
push
mov
mov
roll
cld
push
sbb
cmp
inc
shl
add
add
repz
sbb
sub
sub
jae
dec
add
lret
inc
jg
fcompl
push
ja
divl
and
mov
test
cmp
arpl
cmp
dec
jbe
in
outsb
out
mov
pop
repnz
pop
cmp
mov
adc
outsb
sub
add
adc
push
es
mov
insl
test
mov
testb
adc
push
notl
or
xchg
cmp
dec
cmp
cmc
nop
inc
pop
xor
cmp
xor
or
pop
les
pop
fmulp
xchg
dec
inc
cld
arpl
inc
xchg
movsl
pushf
js
in
dec
arpl
dec
les
xchg
mov
and
xchg
decb
xchg
inc
jne
addl
js
sub
mov
pop
push
or
mov
int3
jae
insl
dec
jnp
jmp
jg
lea
cwtl
dec
nop
xor
push
lds
push
xor
push
test
pop
mulb
add
lea
jmp
mov
cwtl
adc
adc
or
cwtl
in
cli
out
fs
mov
mov
and
addr16
sbb
ja
cmp
xor
inc
or
and
adc
and
push
cltd
stos
cmp
popf
pushf
arpl
movsl
or
ljmp
std
sub
inc
loopne
add
out
rorl
adc
int3
push
adcb
mov
daa
sbb
stc
loop
imul
lds
jo
push
nop
push
add
hlt
mov
adc
cs
call
mov
mov
xchg
jg
push
mov
call
xchg
movsb
enter
or
xor
mov
icebp
sub
inc
sbb
push
orb
pop
out
pop
int3
dec
sbb
iret
cmc
pushf
xchg
adc
jmp
jbe
ret
out
cs
divl
in
pop
mov
cmp
jmp
and
push
arpl
pop
mov
les
jb
push
hlt
or
insl
sub
xchg
jns
cmp
movsb
xor
mov
mov
ss
sbb
mov
stc
outsb
xchg
xchg
mov
xor
inc
mov
in
or
test
les
cli
sub
sub
pop
sahf
leave
jbe
push
push
pop
jmp
in
xchg
adc
fucom
dec
ret
sub
and
adc
ds
ja
push
lods
xchg
pusha
lods
sbb
mov
jne
push
or
push
adc
jg
ficompl
mov
pushf
aas
movsl
fadds
movsl
sub
inc
insb
xchg
pop
pop
push
jl
movsl
mov
movsb
cli
push
xchg
mov
pusha
js
loope
xor
mov
call
add
push
sti
xchg
xchg
push
push
shrb
fildl
sub
sahf
xor
push
mov
scas
sub
adc
mov
inc
push
call
pop
decb
xchg
ja
adcl
sub
pusha
je
pop
lods
jnp
hlt
in
outsb
mov
fwait
sahf
jb
mov
cli
cli
lret
fisubrl
mov
mov
inc
je
jae
mov
inc
jg
sbb
sbb
push
lock
xchg
inc
or
mov
mulb
or
sahf
jp
mov
jmp
adc
test
call
cmpsb
ret
out
xor
add
aam
imul
sbb
outsb
mov
cli
xchg
add
xor
call
lea
jl
cmpl
inc
xchg
and
cmpsb
jae
pushf
enter
ror
bound
pop
dec
lahf
not
push
or
sarl
rcll
repz
sbb
push
test
xor
iret
mov
lret
subl
imul
popf
jge
jge
aad
addb
sbb
sub
push
inc
arpl
sub
data16
lds
add
out
cmpb
sbb
loopne
rcr
push
outsb
mov
incl
popa
lds
iret
sbb
popa
test
aaa
push
mov
xor
add
pop
mov
xchg
dec
outsb
in
iret
mov
mov
sbb
popf
dec
std
inc
fs
lcall
push
arpl
pop
push
int3
out
orl
pop
push
lahf
jno
mov
xchg
add
dec
aas
ret
mov
and
xchg
sub
cld
in
push
jns
pop
jmp
test
and
and
push
cmp
lret
push
jecxz
shll
xchg
jle
mov
sub
xchg
aad
arpl
xor
rcll
inc
jp
xchg
add
pop
repz
test
loope
mov
loop
adc
enter
cmpsl
fidivl
sbb
test
cmp
call
or
xor
out
ss
mov
push
jmp
push
lret
outsw
das
pop
stos
pop
mov
ret
enter
xchg
cmpsl
mov
fwait
in
aas
loopne
mov
push
movsb
mov
stos
dec
adc
popf
out
xor
fnstenv
push
push
cmp
int3
adc
aam
pop
test
dec
push
jecxz
lock
imul
cmp
mov
lcall
bound
jl
ljmp
imull
mov
xor
add
add
and
xchg
and
xchg
addr16
mov
push
xchg
jne
fldcw
into
jne
insb
sar
dec
pop
cli
sub
dec
add
jge
pop
or
fbld
ja
movb
inc
jmp
adc
stos
adc
mov
adc
inc
and
test
add
mov
jmp
sbbl
or
aam
pop
mov
sti
push
mov
aas
cmpsl
loopne
lcall
notb
fs
xor
fnstenv
xchg
lock
dec
push
sbb
outsb
mov
mov
or
add
cmp
inc
mov
xchg
cmpsl
jbe
sub
push
add
popa
out
std
adc
mov
nop
jge
nop
leave
out
shll
add
jo
imul
pop
mov
pushf
int3
fidivl
mov
roll
shl
std
out
mull
sahf
mov
cld
ja
insl
insl
fnsave
jge
jns
sbb
daa
jmp
xchg
shr
movsb
jo
add
jae
push
or
push
clc
add
inc
inc
sar
dec
jno
nopl
cmc
push
pop
shlb
loopne
dec
imul
lods
cmc
push
hlt
aam
gs
mov
mov
outsb
push
mov
inc
bound
leave
packssdw
insb
lods
fwait
sub
fwait
pop
jl
out
int
cmc
lods
mov
push
daa
out
mov
adc
xor
test
mov
rol
inc
jb
rcl
negl
lods
je
cli
mov
pop
pop
scas
add
or
cltd
dec
popa
das
int3
pop
add
cwtl
cmp
nopl
icebp
mov
dec
ficoms
jnp
pop
iret
repnz
lock
test
loopne
das
sub
push
mov
inc
les
movsb
mov
push
clc
lcall
movl
mov
rcll
out
dec
cs
imul
dec
ret
inc
dec
je
mov
lods
mov
gs
fstpl
test
xchg
inc
leave
fcmovnb
testb
cmpsl
lods
lahf
pop
dec
iret
cmc
mov
pop
or
roll
adc
pop
stos
xor
int3
repnz
out
mov
testl
cmp
mov
cld
je
lret
and
pop
push
movsl
mov
cmp
cld
gs
dec
iret
int3
inc
out
mov
cmp
or
sub
xor
ljmp
in
cmp
push
es
fistl
sub
outsl
sub
pop
and
rorl
jne
mov
mov
in
lock
sub
movsl
mov
cmpsl
test
lods
inc
mov
fadds
cmp
jp
mov
mov
jo
js
addr16
and
popa
sbb
jl
mov
or
lock
xor
inc
or
jg
into
repnz
jno
inc
adc
sti
mov
xchg
xor
scas
sub
pop
mov
sbb
pushf
std
xor
mov
ret
pop
mov
ffreep
repnz
pop
dec
or
jge
sub
xor
decb
mov
dec
sub
mov
std
stos
cmp
adcl
xorl
sti
sbb
lock
push
push
cmp
xor
cmp
loop
gs
push
test
push
int3
adc
outsb
imull
leave
and
shl
adc
mov
lods
out
frstor
imul
mov
xchg
in
add
mov
loopne
call
movntps
jl
mov
xchg
pop
mov
adc
mov
adc
inc
ffree
cwtl
pop
jmp
sbb
loopne
inc
xlat
jbe
mov
jo
hlt
push
mov
mov
rol
inc
lcall
inc
mov
int
fbstp
jbe
adc
fldt
cmpsl
jmp
out
sub
daa
insl
pusha
lods
pop
jo
xchg
xor
sbb
les
xchg
pop
pusha
fistps
push
xchg
add
aam
in
push
aad
pop
sub
lods
mov
mov
jmp
jge
xchg
mov
jbe
mov
inc
sub
ja
push
cmpsb
test
shlb
jb
add
addl
stos
sarb
xchg
sub
mov
mov
sbb
enter
lcall
insb
add
mov
jge
ret
fs
shll
ds
mov
lods
pop
jmp
inc
decb
sbb
in
mov
push
sub
sbb
mov
lds
neg
pop
cmpsl
lock
std
xchg
js
addr16
cmc
fs
js
xor
insb
mov
imul
loop
arpl
inc
adc
enter
pushl
out
jmp
lahf
imul
in
add
mov
sbb
stc
push
mov
aam
leave
pop
or
jl
mov
push
mov
mov
cmc
cli
shrb
cmpsl
int
mov
lods
cmp
sub
jmp
cli
and
andl
mov
aaa
mov
lret
jle
adc
mov
rcr
jns
jb
cmpsb
cli
inc
mov
pop
repz
sbb
pop
xor
adc
jmp
add
leave
leave
cld
lret
rcll
mov
aad
movsb
jg
test
inc
lods
cli
lret
dec
loopne
dec
leave
iret
push
push
iret
or
scas
xor
fs
dec
and
call
movsl
mov
repnz
cmpsb
inc
lahf
jb
int3
jmp
fcmovne
js
ret
mov
pop
mov
adc
or
int3
push
inc
dec
and
jg
ret
and
mov
out
mov
sahf
mov
imull
fsubs
sbb
fidivl
fsubr
outsl
scas
cmp
mov
mov
popa
dec
and
push
lahf
push
and
mull
in
xchg
fists
jp
mov
add
xchg
or
aaa
fsubrl
insb
fmull
xchg
cwtl
lods
cmc
jo
fadds
mov
fldenv
shr
int
and
call
or
dec
ja
and
das
and
xlat
dec
flds
imul
adc
aam
xor
imul
mov
into
xchg
icebp
scas
jns
xchg
push
shll
mov
ret
mov
int3
sbb
repnz
daa
push
mov
xchg
insl
jbe
mov
mov
test
and
in
shl
adc
aas
mov
mov
fwait
stos
bswap
insb
nop
out
xor
imul
or
pop
xlat
jns
sbb
cmp
cmp
shrl
dec
mov
lds
mov
fs
push
decl
js
imul
leave
sbb
je
xchg
dec
fcompp
inc
popf
jmp
adc
mov
nop
xchg
in
lret
cld
out
xchg
rorl
jg
dec
pop
es
jge
and
ljmp
insb
insl
rol
sbb
mov
add
in
pop
mov
dec
cmp
push
adc
outsl
or
dec
repz
sub
pop
cmpsl
sarl
fisttpll
imul
gs
ret
sbb
shlb
gs
loopne
cmp
daa
mov
cs
push
hlt
addr16
pop
inc
mov
mov
imul
cmp
push
push
push
fstpt
mov
lret
dec
scas
inc
mov
lds
mov
jp
fstl
imul
cltd
out
push
inc
push
mov
cmp
xchg
sub
imul
stc
mov
xchg
les
es
fdivrs
fstps
push
cltd
pop
int3
add
jb
push
xor
jne
xor
in
aad
xchg
mov
mov
fadd
in
push
out
aad
xchg
sti
popa
mov
push
mov
fwait
inc
fdivs
andb
or
out
or
mov
or
xchg
notb
inc
mov
decl
subb
lods
xlat
sarl
mov
leave
test
movsl
loop
loop
sahf
popf
mov
push
lods
xor
shrl
and
fsubr
lock
cld
rep
pop
repz
or
cmpl
pop
clc
loopne
jbe
pop
jb
in
jbe
sub
fcompl
xor
sub
shrl
aas
xor
movsl
inc
jb
fnsave
mov
mov
ud2
jb
xchg
movsl
lods
stos
or
sbb
ljmp
fnstenv
mov
in
cmc
loopne
test
mov
ljmp
jp
cltd
sahf
jg
into
xor
mov
pop
inc
fiaddl
bound
std
mov
push
scas
and
in
popa
imull
jne
inc
and
adc
sub
sbb
sbb
test
out
test
pop
test
aam
int
mov
adc
push
cmp
inc
sub
and
cwtl
sub
mov
sub
push
nop
pusha
mov
fld
mov
in
fldcw
gs
dec
enter
mov
xchg
lea
lahf
or
cmp
adc
stc
lods
cmc
mov
repz
enter
pop
xlat
sbb
push
mov
incb
push
jo
fcmovnu
and
inc
push
jp
mov
cmp
or
cmp
repnz
cmpsl
dec
sarl
adc
and
pop
pop
dec
shll
and
push
inc
inc
mov
push
stos
push
sahf
adc
mov
pop
dec
out
xor
sbb
sub
out
xchg
mov
movsb
into
sbb
ljmp
jns
cmc
mov
xor
rorl
daa
xchg
cmpsl
mov
filds
ror
cmpsl
frstor
jne
cli
xor
loope
in
mov
cmp
test
bound
or
or
xchg
stos
jl
jo
cmp
pop
xchg
mov
mov
sbb
aad
mov
fs
inc
jecxz
test
icebp
adc
and
sbb
punpckhwd
xchg
rorb
int
imul
cmc
call
mov
ficoml
xchg
ss
xchg
out
xchg
lds
scas
cmp
test
nop
xor
addr16
fwait
lea
inc
xor
and
jle
sbb
push
cmp
push
jae
add
inc
and
test
rcrl
fs
xchg
fisttpll
lea
popf
xor
xchg
lahf
ret
or
je
jecxz
frstpm(287
lock
inc
cmp
into
cmpsl
and
fs
stc
sub
dec
fdivrs
dec
jmp
xor
popw
in
dec
in
es
sbb
rcrb
jle
sbb
js
xor
daa
in
lods
jg
shlb
push
test
cmp
in
mov
out
jne
sbb
imul
mov
cmpsl
fdiv
adc
in
nop
call
mov
out
dec
adc
adc
cmp
out
out
popf
cmp
ljmp
push
add
add
std
mov
in
add
xor
dec
test
pop
cmpsl
jo
sub
mov
sbb
jns
adc
and
daa
pusha
test
xlat
pusha
cmc
jmp
push
hlt
jno
mov
addr16
adc
or
jns
cmpsl
mov
xchg
sub
cmpsl
pop
ficoml
sbb
fwait
insl
fisttps
dec
cmpsb
mov
insb
rclb
mov
shll
call
adc
aad
rclb
mov
popa
stos
dec
fwait
aas
insb
mov
shll
loop
cmp
push
fistpll
andl
in
aam
dec
pushf
in
fsubr
and
sub
xchg
outsl
or
out
sub
cmp
in
mov
mov
ljmp
hlt
testb
mov
and
xchg
lock
jge
pop
stc
ss
mov
mov
pop
mov
xlat
shlb
fstpl
repnz
int3
sbb
aaa
sbb
loop
in
test
clc
pop
inc
sbb
inc
insl
loope
cmp
lea
js
cmp
or
in
mov
negl
mov
fdivs
cmpsl
cmpsb
rclb
nop
sbb
jns
rcrb
xchg
cmp
imulb
pusha
test
in
dec
adc
cmp
mov
mov
jp
mov
add
pop
mov
pop
xchg
outsb
imul
sbbl
sub
fdivr
inc
push
in
das
and
imul
sub
iret
and
jmp
xor
xor
add
add
push
mov
data16
pop
insb
xor
adc
movsb
xor
sub
sub
loop
repnz
insl
out
adcb
xchg
daa
jg
cwtl
nop
inc
test
icebp
rclb
sbb
loope
mov
test
mov
inc
lcall
push
flds
cli
sbb
mov
loop
idiv
jle
sbb
sbb
jns
pop
imul
arpl
lahf
jmp
and
inc
cmp
inc
push
out
and
lods
pusha
sub
bound
cmp
sub
fstpl
dec
cmpb
mov
aas
les
xchg
scas
mov
push
mov
fimull
fisubrl
cmp
sarl
lock
negb
jo
test
lds
and
xchg
push
xor
pop
test
xchg
lods
dec
popf
aad
mov
dec
outsb
dec
into
movsl
sub
mov
js
pop
cmp
fnstcw
pop
shlb
sub
fidivs
xor
mov
adc
mov
je
xchg
movsl
mov
iret
adc
outsl
push
mov
mov
aas
fdivrl
mov
das
lods
enter
cmp
xor
xor
popa
push
sub
dec
push
dec
cld
mov
add
aas
push
arpl
xchg
stc
cltd
enter
cmp
lret
mov
insb
bound
jp
fisttpll
add
jl
mov
pusha
orl
jbe
loop
mov
add
add
das
cmp
push
popa
scas
fadds
fdivrl
cmp
pop
outsl
jge
std
xchg
enter
xchg
adc
sub
bound
cmp
and
stc
dec
xchg
ror
mov
adc
jp
sub
stc
mov
and
sbb
out
add
or
mov
fisubrs
dec
test
mov
loopne
imul
xchg
mov
jp
jbe
into
sub
out
pop
dec
sub
sub
adc
fistps
orl
push
sbb
push
js
rorb
test
rclb
cmpsb
adc
cwtl
mov
fucom
not
mov
jle
cld
mov
xlat
jecxz
lahf
fcom
insb
jle
fimull
cmp
test
addb
scas
jmp
cmp
xchg
xchg
negl
mov
jp
mov
loopne
scas
xor
sub
cmp
xchg
mov
lock
xchg
xchg
les
pop
cmp
mov
loop
adc
bound
lahf
jecxz
or
mov
stc
pop
cmp
jge
outsl
adc
fistpll
push
cmpsb
sub
in
gs
mov
push
clc
adc
adc
jmp
pusha
mov
push
pop
mov
adc
xor
mov
pop
repnz
mov
pop
sub
mov
int
mov
insl
test
scas
inc
addr16
in
sub
bound
inc
insl
aaa
xchg
in
and
lret
cmp
pop
dec
mov
dec
aas
add
jne
shrb
mov
pop
test
fiaddl
add
insb
ja
out
les
jg
stos
xor
cmp
inc
cltd
cmp
mov
add
xor
and
mov
inc
xor
push
rcll
jl
fwait
add
dec
xchg
push
sub
push
fisubrl
fldt
clc
cwtl
mov
fwait
cmpsb
sub
neg
xchg
shll
cmp
inc
outsb
pop
jne
xor
pop
in
mov
imul
out
in
xchg
sbb
ret
jp
fsubl
js
pushf
aaa
ret
mov
out
es
xor
shl
sahf
mov
stos
mov
or
jne
cmp
or
lock
add
das
mov
inc
add
gs
xlat
cmp
cmpsl
lods
scas
fmulp
js
push
fisubrs
mov
jg
push
rcrl
xchg
push
sbb
sbb
dec
pop
cmp
popl
mov
in
fwait
jo
pop
sbb
in
pop
or
mov
sub
cmpsl
and
cmp
push
rcr
stos
sbb
inc
out
dec
icebp
loopne
sbb
xor
mov
xor
pop
lret
and
arpl
pusha
out
outsl
push
movsb
jbe
lea
cmp
mov
repnz
xchg
mov
fs
pop
cld
leave
mov
sbb
lahf
adc
test
popf
ja
push
sbb
dec
jns
fistl
leave
pop
dec
or
mov
inc
push
gs
ret
or
loopne
mov
pop
mov
jb
pop
inc
xchg
data16
js
mov
or
and
mov
icebp
enter
aam
xchg
ds
js
dec
imull
sahf
popf
adc
xor
fistpll
lcall
sub
xchg
std
xor
xor
dec
lahf
add
jae
mov
or
pop
testb
andb
adc
lods
addr16
pusha
jb
sub
jl
fcoml
xlat
fidivl
xor
or
cmp
out
adc
mov
fcmovne
pop
pop
daa
inc
and
or
in
rcr
das
out
sahf
mov
negl
lds
sahf
xchg
dec
sub
mov
pop
test
pop
mov
pop
sub
mov
inc
mov
loope
mov
bound
mov
cmp
pop
scas
out
cld
xchg
jnp
getsec
andl
adc
int3
mov
out
push
test
in
negb
mov
pop
sarb
mov
in
and
push
pop
jge
addr16
adc
sarl
cs
iret
xor
inc
pop
es
pop
sub
cs
mov
stc
mov
shl
dec
xchg
arpl
jecxz
or
pusha
je
lods
inc
pusha
xor
enter
js
enter
mov
hlt
cmp
sbb
fisttpll
cltd
sbb
or
fcmovnu
mov
fidivrl
loop
pop
sub
lds
mov
lret
mov
mov
inc
and
aam
sbb
and
add
fisttpll
mov
sbb
nop
js
test
inc
decb
insb
fsubrl
sbb
insl
add
decb
lcall
mov
dec
adc
into
mov
push
ret
stos
cmp
inc
dec
cmpsb
cmpsb
leave
notb
lea
cmp
pushf
fmull
mov
inc
stc
mov
xchg
out
xchg
leave
dec
pop
fs
hlt
mov
inc
cmp
ret
cwtl
ret
sub
and
out
aaa
jl
xchg
data16
sub
adcl
shll
addr16
jge
mov
pusha
add
jae
test
jle
sub
int3
sub
sub
cmp
push
xchg
out
mov
aad
sub
xorb
adc
jno
add
sar
sub
and
movsb
out
jle
push
scas
push
inc
dec
outsl
inc
sbb
popf
xlat
ljmp
or
or
add
sahf
dec
jl
mov
call
cmpl
pop
mov
fistpl
sbb
cmc
cmp
xor
push
rcrb
pop
mov
gs
dec
xchg
mov
loopne
es
mov
adc
mov
mov
dec
movsb
sub
or
and
push
out
jbe
gs
or
push
push
stos
sbb
fcoms
jle
arpl
adc
mov
sbb
jns
and
mov
les
outsb
in
imul
ds
loope
mov
out
sbb
or
or
inc
sbb
test
bound
mov
flds
std
cs
adc
mov
mov
out
in
inc
leave
sbb
cmp
cmp
pusha
cld
jmp
dec
jge
clc
jno
or
jne
jno
jo
xor
xlat
pop
cs
sub
and
jle
daa
test
mov
fcmovnu
hlt
out
jmp
mov
popa
scas
int3
scas
ret
xlat
sbb
adc
sarl
xor
fdivrp
jmp
sbb
popaw
jo
sub
repz
lea
test
and
xor
jnp
add
adc
pusha
lret
xor
push
aaa
aad
stc
xchg
inc
and
push
pop
mov
shll
dec
int
mov
lahf
loopne
pushf
lods
jnp
mov
dec
xor
in
insl
pop
leave
jge
out
lret
aam
fbstp
xor
sub
hlt
cld
fnstsw
fstpt
push
dec
lds
das
cmp
or
jno
insl
out
cmp
push
popa
jno
clc
ja
cmpsl
stos
mov
sub
add
cmpl
out
testb
mov
fisttpll
adc
xchg
imul
enter
popf
mov
jp
leave
push
lret
xchg
xor
add
fprem
pop
popa
mov
pusha
mov
aad
fs
xor
cmp
out
pop
mov
stc
aaa
push
lcall
xchg
scas
addr16
push
xchg
mov
sub
jb
ja
push
stc
xor
add
ret
pop
adc
pop
in
mov
mov
ret
lret
xor
and
push
dec
mov
fists
adc
adc
push
out
out
mov
adc
out
sbb
sub
imul
cmpb
or
ret
sbb
sbb
pop
dec
inc
in
or
pop
lods
dec
sahf
sub
xor
mov
scas
sub
pop
pusha
aam
cmc
gs
and
outsb
iret
push
dec
xchg
pop
ds
add
jne
bound
gs
dec
jle
jae
in
jnp
push
mov
pop
loopne
inc
sti
jnp
inc
and
lcall
lahf
dec
inc
mov
mov
sub
or
and
and
adc
jp
cltd
ficompl
add
and
and
imul
or
rorb
pop
pop
arpl
daa
shll
call
fwait
and
inc
dec
pushf
xchg
sahf
mov
or
mov
test
rcrb
sub
mov
jo
jno
jp
out
or
or
inc
dec
add
push
dec
fcmovbe
imul
jnp
test
sbb
sub
cmp
ss
jo
mov
and
adc
popa
imul
pinsrw
mov
or
dec
out
xorb
mov
mov
out
xor
mov
pop
ficoml
adc
loopne
xor
and
div
cli
or
jo
xchg
in
and
adc
xchg
cli
pushf
enter
jge
pop
lock
jp
mov
sbb
xchg
xor
inc
dec
adc
clc
inc
in
add
das
sub
mov
sub
push
scas
mov
and
push
sbb
pusha
fwait
imull
icebp
mov
cmp
mov
xchg
or
add
pop
push
sub
jp
cmp
and
es
stc
inc
pop
inc
imul
insb
out
jge
xchg
pop
scas
dec
sub
pop
lea
cmp
adc
xor
hlt
ss
jg
mov
jno
icebp
mov
add
cmpsb
loopne
fbstp
sbb
xchg
test
push
xchg
pop
fcom
dec
cli
inc
dec
adc
xchg
xor
cmp
aam
pushf
in
mov
loope
or
js
mov
fmull
xor
push
test
sub
aad
add
jecxz
mov
cmc
arpl
jmp
test
sarb
pop
mov
pop
fidivrs
inc
mov
mov
popa
and
icebp
pop
mov
cmpsl
inc
in
jae
push
in
xor
lock
scas
and
inc
xchg
dec
jl
mov
xor
adcl
ja
into
stos
insb
push
pop
es
adc
ss
flds
sub
pop
push
test
cmpsb
mov
insb
jbe
push
mov
inc
ret
pop
ja
pop
movsb
dec
iret
jbe
jl
hlt
cmp
dec
sahf
jo
jmp
mov
push
sqrtps
dec
or
stos
sarb
mov
add
enter
mov
jae
mov
std
or
and
bound
pusha
dec
xor
in
sti
loope
push
mov
push
out
inc
test
sbb
cmp
scas
inc
std
push
and
inc
lret
rcrl
and
pop
xor
mov
inc
pop
jae
fcmove
jg
push
dec
in
pop
lods
test
into
dec
inc
mov
add
lea
sbb
pop
hlt
test
adc
push
mov
rorb
or
pop
inc
into
pop
call
stos
mov
xchg
mov
inc
dec
xchg
push
mov
lret
cli
dec
lea
sti
adc
sbb
push
xchg
jl
leave
adc
push
cld
loope
jnp
pop
or
ss
dec
pop
test
push
int
aad
lahf
rcrb
cmp
sti
mov
mov
incb
inc
into
aam
inc
addl
sub
xor
das
insl
xchg
iret
jbe
clc
addr16
fmuls
push
fsubrs
xchg
jl
inc
adc
nop
lods
pusha
add
mov
jmp
insb
sahf
in
out
mov
outsb
xchg
xchg
pop
flds
scas
test
lea
pop
mov
push
sahf
and
jmp
push
sbb
pop
daa
sbbb
cmc
aaa
inc
adc
aas
sarl
inc
mov
ficoms
jnp
cmpsl
jae
ss
xor
pshufw
enter
add
dec
sti
bound
inc
pop
dec
mov
aam
dec
dec
jmp
and
mov
gs
push
add
bound
js
mov
int3
mov
xor
inc
or
mov
jl
test
aas
xchg
and
mov
repz
in
filds
sbb
pop
xchg
push
sti
fdivs
sbb
in
dec
in
mov
push
mov
add
add
arpl
mov
jb
insb
scas
hlt
and
cmp
test
pop
xchg
ret
push
cmp
push
add
mov
mov
movsb
sub
xchg
inc
jge
out
sbb
dec
add
divl
popf
shl
mov
mov
pop
pop
gs
addl
pop
push
and
fcoms
adc
scas
out
in
outsl
mov
xor
cld
inc
sarb
ret
mov
subl
add
hlt
mov
inc
pop
jno
in
orl
andb
mov
xor
nop
xor
or
imul
sbb
sbb
stos
and
jmp
cmpsl
cs
mov
lret
mov
sbb
aaa
jge
clc
push
xchg
stc
xlat
rcl
icebp
push
sbb
push
add
xchg
in
pop
push
xchg
mov
movsl
sub
mov
push
sbb
cld
call
cmp
lock
test
daa
loopne
inc
xor
push
insb
cmpsb
and
mov
mov
test
nop
xor
scas
jno
pop
cmp
cmpsl
adc
scas
pop
jmp
sub
xchg
push
sbb
inc
jge
loop
and
add
in
push
nop
inc
fistl
dec
and
lea
sbb
mov
stos
shll
js
mov
push
arpl
shlb
loopne
loopne
xchg
bound
mov
mov
arpl
in
xchg
sbb
lods
fwait
cmc
add
setno
movsl
xor
jmp
in
and
pop
stc
jne
mov
sub
rol
mov
push
cmp
jmp
adc
hlt
jbe
aad
js
and
xor
movsl
cmp
pop
lahf
and
xchg
xchg
mov
ret
cltd
mov
jne
jne
push
arpl
aad
xlat
ljmp
mov
or
adc
cld
insb
or
add
or
sahf
scas
jo
push
mov
jnp
sub
and
andb
out
fdivl
cmp
out
adc
leave
or
fsubrs
mov
sub
outsb
and
inc
xor
push
shlb
pushf
jae
xchg
fmuls
lock
mov
push
xchg
mov
scas
mov
repnz
aaa
int
ret
out
jnp
stc
pop
in
adc
ljmp
cmp
add
and
mov
rolb
fisubs
xchg
sub
iret
adc
cmp
xchg
mov
aad
shrl
dec
push
xor
jp
adc
push
frstor
sub
stos
cmp
push
jno
and
fwait
cs
fcoml
cwtl
shl
jge
add
pop
jns
pop
sbb
xchg
jbe
push
adc
mov
je
addb
mov
sti
sbb
ds
dec
int3
lds
sub
sahf
xor
in
mov
cmc
mov
mov
in
test
aad
adc
sub
add
xchg
mov
xlat
les
jge
xchg
jmp
in
inc
in
jnp
jae
mov
jns
sub
xchg
push
inc
icebp
ds
add
imull
cmp
ss
jbe
add
leave
add
ret
xchg
fsts
rolb
sbb
int
inc
cmpsl
inc
push
inc
xor
sub
movsb
mov
xchg
aaa
sar
repnz
in
mov
push
insb
pop
jg
ret
fs
lods
lret
cltd
mov
xchg
pop
mov
js
inc
sbb
fisubrl
dec
sub
mov
mov
imul
adc
push
add
push
push
jmp
das
adc
pop
add
enter
xchg
cmc
addr16
sbb
sarb
int3
in
sub
dec
ja
movhps
jae
jo
popf
cs
mov
ffreep
mov
pop
add
xchg
mov
push
clc
jno
xchg
and
or
loope
ss
out
movsb
loop
xchg
subl
xor
xchg
adc
shlb
dec
cs
aam
mov
mov
sbb
mov
das
xor
outsb
sbb
pop
mov
push
lret
mov
insl
fbstp
push
pop
push
sbb
mov
inc
andb
mov
fnstenv
fbstp
adc
mov
adc
jge
outsb
stos
sub
xchg
mov
lcall
lret
push
ljmp
fistl
cld
lods
jnp
pop
clc
lret
mov
pop
xchg
sti
gs
ja
icebp
fwait
mov
enter
out
clc
inc
mov
repz
mov
and
insl
in
bound
mov
xor
jge
ljmp
cld
push
adc
stc
loopne
fistps
scas
mov
orl
scas
movsl
jp
arpl
lock
jno
out
fs
in
fnstsw
scas
mov
inc
mov
popf
dec
xchg
lock
mov
sub
lds
xlat
scas
sub
dec
daa
xchg
loopne
pop
rsm
pop
sti
mov
nop
add
dec
jecxz
incb
xchg
pop
dec
and
sub
pop
ja
aam
mov
sahf
mov
shll
inc
addr16
outsb
ljmp
lret
inc
pop
adc
push
dec
shl
rcrl
sbb
mov
jl
hlt
cmp
inc
mov
sub
xor
lea
mov
rcr
mov
ds
rclb
sahf
cmpsl
add
mov
xchg
fisttps
shr
ds
scas
push
movsb
sbb
jecxz
cld
or
push
lcall
call
xchg
lahf
adc
cmp
mov
xchg
xchg
call
inc
inc
aad
cmp
pushf
sbbb
mov
cli
pop
mov
jp
sub
inc
in
dec
add
xor
mov
mov
loopne
mov
into
or
jg
dec
aas
leave
enter
add
push
cltd
cmc
push
sub
cmp
sti
je
out
hlt
scas
fimull
fisttpl
cmp
shll
jl
fsubrl
mov
je
insb
testb
jns
fcmove
fldcw
in
movsl
popa
sub
insb
push
dec
inc
lock
daa
sub
imul
lods
addr16
cmpsb
mov
and
ja
jne
fdivs
xchg
mov
add
fidivl
cmp
xlat
cld
lret
fnstcw
and
test
test
div
xlat
xchg
fldlg2
mov
mov
pusha
or
pop
in
push
pushaw
mov
in
jae
lcall
jl
negl
push
daa
jne
cmp
jbe
call
inc
arpl
ret
shl
inc
sbb
je
jo
arpl
imul
decb
fwait
push
xchg
stc
inc
in
ret
inc
popa
stos
fimull
inc
pop
lahf
pop
call
xchg
adc
aad
inc
push
scas
jmp
inc
loope
dec
lahf
scas
pop
jne
add
and
push
and
int
mov
adc
inc
leave
cmp
push
outsb
xchg
cmp
push
inc
xchg
movsl
lar
lret
cld
and
outsl
aas
arpl
pop
and
adc
fisttps
pop
or
push
in
cmpsb
mov
cmp
bswap
push
std
cmp
and
loopne
icebp
inc
mov
hlt
out
or
sarl
mov
push
xchg
jb
repnz
xchg
jne
push
insb
rcr
insb
mov
adc
sahf
enter
xor
xor
cmp
mov
pop
push
mov
mov
or
imul
mov
jp
mov
inc
add
popa
das
mov
mov
or
test
adc
in
dec
les
leave
mov
dec
loop
push
mov
cs
sahf
ret
dec
sahf
add
aas
loop
cltd
dec
mov
movsb
sub
mov
shl
out
testb
xchg
sub
mov
shrl
dec
sub
jb
jmp
leave
sub
jmp
hlt
jne
shlb
in
shll
rcl
xor
mov
sbb
xchg
popa
jo
sahf
push
push
movsl
inc
inc
mov
das
cltd
insl
in
sub
in
roll
adc
and
je
insb
in
push
mov
inc
pop
imul
xor
cli
jecxz
scas
cld
fs
fiadds
int
jmp
js
inc
out
add
call
xchg
and
popa
std
mov
lahf
mov
int3
lds
sbb
cmp
arpl
jno
stos
cmp
cmpsl
inc
ret
scas
cmpsb
dec
add
rcrl
inc
test
scas
mov
push
imul
cli
shrl
mov
imul
fwait
mov
pop
aas
or
out
aas
and
pop
mov
pop
jp
cli
in
mov
jecxz
add
popa
xchg
imul
sti
dec
xor
rcll
ljmp
inc
test
popf
xor
push
ja
ret
mov
adc
and
mov
jns
sarl
je
dec
ljmp
es
adc
xor
scas
jns
xchg
pop
sbb
xor
sti
jae
mov
pusha
add
insb
dec
mov
jp
sbb
push
mov
push
addb
and
add
jle
in
fcomp
ja
mov
arpl
jg
arpl
aaa
rcr
cs
mov
mov
xchg
repz
add
test
stos
sbb
push
lock
addl
out
aam
ret
sbb
pop
push
mov
test
orb
sti
setg
pusha
xchg
jnp
int
xor
out
pushf
or
xchg
sub
pop
out
lods
call
sbb
out
leave
popa
push
lahf
jno
inc
adc
push
add
es
jbe
das
fcomi
mov
pop
xchg
xchg
mov
cmp
cmp
ljmp
dec
jp
xchg
xchg
test
movsl
jno
mov
sbb
sub
sub
jp
dec
jae
mov
or
scas
out
push
fwait
daa
aas
test
push
fwait
sub
scas
clc
aas
fisttpll
xor
mov
sub
mov
arpl
sub
aas
shlb
arpl
cs
add
jl
test
icebp
pop
push
std
loope
and
icebp
ret
pop
lret
int3
stos
aas
enter
aad
add
insb
fdivrl
fldt
mulb
les
mov
lods
push
fiadds
int
out
xor
scas
lds
sub
cmp
push
xchg
xchg
lahf
and
jno
stos
inc
andb
cmp
ds
push
aas
jmp
dec
insl
inc
cltd
push
lret
popf
or
sbbb
inc
xor
add
fldl
rcrb
lods
imul
push
insb
es
out
call
mov
xchg
inc
jno
lods
sbb
es
fucomi
loopne
mov
lret
cmpsb
movsl
add
scas
enter
or
mov
test
and
mov
and
push
jg
and
mov
ja
cmpsl
sbb
push
mov
mov
fwait
inc
push
adc
leave
push
fimuls
add
adc
mov
push
cli
jge
sub
and
push
outsb
fldcw
nop
cmp
xchg
loopne
popa
movsl
mov
xchg
das
inc
daa
cmp
dec
lahf
addb
dec
stc
loopne
xchg
mov
or
out
imul
outsb
test
mov
out
push
dec
push
or
cmpsb
add
jo
or
adc
xor
imul
cmp
inc
push
shr
dec
sbb
mov
push
push
imul
movsb
inc
sub
push
mov
mov
or
cmp
sbb
add
imull
cmc
xlat
jecxz
push
xchg
add
jne
in
push
adc
es
lds
mov
out
dec
fsub
mov
sbb
push
pop
cmp
movsl
jb
lcall
and
out
loope
cmpsb
int3
fsubs
pop
pushf
sbb
cld
inc
cmc
ds
adc
jns
jle
pusha
or
pop
dec
icebp
inc
inc
fldenv
test
sub
or
push
ret
push
mov
mov
aaa
pop
mov
das
ds
inc
pushf
xchg
fdivl
pop
rorl
out
mov
mov
imul
fldcw
imul
xchg
out
mov
xchg
jle
shl
or
sarl
jnp
jl,pt
sub
xchg
idivb
subl
adc
fdivrs
jmp
aas
pushf
push
mov
jmp
movsb
iret
adc
pop
xor
adc
or
push
test
pop
or
jl
mov
les
xchg
pop
xor
outsb
lock
je
arpl
xchg
push
rcl
push
fmuls
mov
ja
or
mov
mov
mov
sysexit
push
mov
pop
rolb
or
jecxz
push
inc
add
cmp
jnp
js
clc
or
fimuls
cmp
and
jno
xor
dec
pop
xor
pushf
jg
mov
imul
dec
lahf
das
fdivp
aas
out
mov
gs
add
jns
xchg
and
cltd
push
scas
pop
aaa
mov
loope
ja
rorb
mov
stc
cltd
fistpll
add
mov
jle
lret
cwtl
mov
jo
hlt
push
fidivs
pop
lcall
cld
ret
mov
inc
jnp
add
adc
jge
mov
divl
xchg
xor
dec
les
jecxz
mov
iret
jae
int
lret
xchg
and
mov
jl
lahf
outsl
jo
sbb
and
cmp
cmp
cmpsb
fiadds
jbe
pop
xchg
jbe
inc
jne
mov
ljmp
int3
cmpsl
popa
jl
sub
in
and
in
stos
outsb
faddl
mov
dec
iret
sahf
hlt
push
xchg
and
movsb
lret
add
jge
add
dec
mov
cltd
pop
xchg
cmp
jge
repnz
and
test
add
insl
push
push
push
jg
jns
mov
aas
xchg
dec
stos
lods
adc
psllw
cmp
loopne
fwait
mov
push
aam
data16
dec
adc
xor
dec
add
cwtl
inc
nop
aad
mov
cmc
push
in
push
test
xor
xor
repnz
jno
rcrl
jle
mov
jo
xchg
fcompl
adc
or
inc
xchg
and
lods
loope
fcmovnb
jmp
mov
push
mov
fistl
dec
in
test
std
mov
adc
inc
mov
mov
inc
push
sarb
in
loope
pop
insl
sub
xchg
iret
jae
inc
inc
push
rol
sbb
mov
test
xchg
push
mov
push
dec
cmp
mov
rcr
or
xchg
popa
inc
inc
pushf
test
icebp
push
pop
xlat
add
inc
adc
and
pop
cmp
pop
add
dec
aam
rcrl
pop
jae
cmpsl
sbb
and
add
sub
add
insl
cmpsb
das
jne
out
scas
and
xor
movsl
lods
addl
pop
mov
mov
xor
insb
lds
clc
mov
cmp
shl
sbb
outsb
dec
aam
in
fcomps
add
mov
leave
adc
xchg
fbld
roll
clc
push
and
and
or
rcrb
mov
ss
fstl
popf
cli
pop
icebp
ljmp
mov
scas
mov
leave
jnp
out
ror
pop
loop
pop
inc
push
outsl
dec
into
lea
or
js
daa
xchg
lds
mov
xchg
sbb
push
xchg
movsl
or
sub
sarl
shl
inc
jge
leave
adc
out
je
sub
adc
and
loop
into
shl
push
imul
adc
ds
out
mov
jle
adc
push
je
data16
test
pop
mov
out
clc
and
push
jnp
pop
xchg
subl
call
pop
cs
sbb
daa
stos
cmc
jne
pop
mov
stos
jmp
lods
jnp
stos
cmc
movsl
lahf
xchg
and
int3
insl
sbb
test
pop
push
std
hlt
add
adc
cmc
arpl
xchg
sub
je
jns
xor
mov
fistps
mov
mov
leave
adcb
mov
xorb
jl
cltd
imul
lea
jecxz
dec
into
xchg
inc
test
mov
push
sbbb
jo
mov
mov
bound
xchg
dec
add
cmp
ficompl
jae
jge
xorb
insb
fadds
pop
inc
mov
xchg
shl
xchg
sti
mov
stos
xchg
rclb
jns
mov
fadd
fldcw
jno
test
adc
or
mov
xchg
jae
ret
iret
mov
mov
shll
cmp
bound
push
jmp
or
fs
push
pushf
ficomps
jge
cmp
jmp
rclb
lods
rorb
push
push
jnp
inc
and
push
jae
mov
adc
push
popf
mov
mov
popf
xchg
clc
scas
notb
mov
jb
repz
sbb
cld
mov
xlat
sahf
dec
or
pop
loopne
pop
es
push
push
add
ja
iret
inc
mov
jmp
push
push
lret
iret
pop
push
xchg
cmp
cmc
stc
dec
jne
outsl
out
inc
outsb
imul
mov
fmull
xor
pop
pop
jp
cltd
pushf
subl
mov
push
xchg
pop
adc
xchg
iret
cmpsb
scas
shlb
mov
cmp
and
and
cmpsb
pop
andl
and
shll
iret
pop
push
sbb
sbb
mov
sub
jno
leave
shlb
push
out
pop
sub
js
and
cmp
sub
js
fisubrs
rcll
in
mov
mov
mov
das
loopne
outsl
das
and
aaa
fwait
xor
cmp
jl
stc
arpl
jge
xchg
mov
push
add
sbb
shl
gs
xchg
mov
test
cmp
aas
inc
inc
inc
pop
insb
mov
jbe
pop
sub
int3
mov
cmp
cli
loop
pop
jle
add
sbb
xor
sahf
jp
mov
mov
es
jae
negb
push
roll
mov
fsubl
loop
iret
sub
adc
mov
test
sub
cmp
adc
call
add
pop
or
xchg
and
pop
rolb
lock
out
dec
cltd
aad
loopne
pop
mov
sahf
dec
mov
insb
insl
push
int
add
inc
mov
mov
pop
push
call
xchg
jg
divb
pop
je
mov
mov
push
jle
pop
mov
inc
scas
push
or
dec
in
mov
inc
ret
xchg
sbb
fisubrl
sahf
add
mov
add
in
lods
mov
mov
out
add
dec
or
or
or
out
lods
pop
add
add
push
fldt
or
dec
out
insb
iret
xchg
mov
xor
inc
mov
pop
imul
xor
inc
js
clc
cmpl
push
outsb
fidivrs
xchg
push
push
sbb
and
popa
dec
stc
lods
cmpl
daa
jg
adc
dec
pop
aaa
sub
or
dec
inc
out
mov
mov
data16
adc
sub
adcb
mov
jne
jnp
pop
test
or
in
clc
sub
mov
xchg
jge
aad
mov
inc
scas
push
adc
and
dec
push
sbb
adc
shr
ret
and
loope
mov
mov
jnp
scas
lret
notb
cs
and
jbe
popa
ja
xlat
xchg
and
nop
mov
mov
lret
cwtl
and
jmp
lock
nop
pop
lea
ret
pushf
inc
data16
insb
jge
pop
push
hlt
sub
and
cltd
add
inc
movsb
outsl
ficompl
lea
sti
dec
call
xor
xchg
out
pop
js
cld
in
cmp
in
cmp
daa
and
mov
mov
repnz
or
cmp
mov
mov
cmp
sbb
rep
std
or
outsl
adc
pushf
xor
sbb
mov
in
xchg
pop
or
into
lods
loop
or
pop
enter
lret
cmpsl
pop
fwait
push
cmp
mov
dec
xor
shlb
popa
cmc
repz
inc
out
xor
mov
cmp
ljmp
add
out
push
push
jp
fs
insl
pushf
cmp
push
xor
push
or
daa
lock
sbb
dec
pop
sub
and
sti
dec
bnd
imul
push
sub
jp
aad
jbe
mov
or
sub
outsl
jne
push
pop
add
add
and
jge
mov
fsubp
cmp
cmp
jecxz
fiaddl
xchg
xor
inc
pop
insb
out
loope
push
jmp
lret
bnd
subb
mov
mov
or
inc
je
sub
dec
rorb
fdivrs
hlt
mov
imul
testl
xchg
fists
lods
mov
inc
cltd
add
xorb
pop
idivl
movsl
lods
xor
mov
test
outsl
cltd
inc
push
and
mov
pop
call
jo
cmp
pop
mov
mov
jo
adc
gs
in
adc
gs
cmp
xchg
dec
cmp
mov
ret
cwtl
jp
addr16
jg
mov
js
cwtl
insb
push
into
mov
mov
loope
sub
dec
mov
movsl
and
xor
in
sub
ficompl
out
scas
mov
test
in
jns
out
dec
frstor
push
and
arpl
int3
aad
stc
xchg
sub
add
int3
in
lcall
mov
jnp
fidivrl
imul
lahf
cmc
adc
fsubp
mov
mov
jne
pop
or
fmuls
mov
mov
sub
mov
pop
xor
mov
cmpsb
movsb
jbe
jmp
out
std
popf
sub
dec
aad
adc
inc
sub
lcall
mov
inc
mov
and
imul
jne
push
sbb
add
repnz
in
stos
fdivs
rolb
ds
mov
movsb
pop
outsb
or
mov
aas
fwait
lea
jmp
or
repz
insl
out
das
outsb
lea
mov
lahf
fcompl
pop
fidivl
sbb
cmp
rorb
or
cmp
mov
push
repz
movsl
ret
rcrb
mov
sub
adc
pmulhuw
ds
call
pop
je
pop
pop
xchg
rolb
xor
lock
or
icebp
int3
movsl
cmp
mov
gs
js
push
and
jbe,pn
mov
daa
xchg
mov
push
or
fucomi
ja
lcall
out
das
push
addb
add
mov
std
negl
sbb
or
daa
mov
outsl
repz
mov
insl
adc
mov
aam
shlb
mov
sahf
int
inc
lret
aad
jecxz
mov
lcall
lcall
test
xor
add
adc
fldl
or
cltd
cmp
lds
xchg
or
out
insb
inc
and
loop
push
out
pop
jb
int
dec
clc
lcall
add
jl
aam
insl
movsl
addl
or
mov
sub
pop
dec
mov
popf
loopne
or
fxch
mov
jecxz
cwtl
aam
fcoms
dec
ret
adc
out
xchg
ja
notb
xchg
fiaddl
mov
mov
or
cwtl
lods
int3
push
outsl
aaa
test
jb
in
scas
xchg
imul
sub
movsl
jb
int
lret
sbb
pop
stc
fsts
aam
popa
dec
stos
nop
mov
out
add
pusha
xchg
push
and
or
or
int3
test
pop
cltd
jmp
bsr
cld
imul
or
add
mov
je
xor
call
xor
add
mov
test
outsl
ret
sbb
adc
call
cltd
movsb
mov
das
arpl
lret
stos
jge
sarl
xchg
dec
pop
xchg
int
sub
xchg
cmpl
jae
inc
or
cmc
jne
dec
pop
sub
cs
rol
mov
outsb
fcomps
dec
ret
leave
movsb
adc
jl
sbb
xor
pop
dec
or
xchg
out
lods
call
out
or
fcompl
xor
orps
xor
cli
mov
sub
lods
inc
jp
inc
adc
ss
push
inc
xor
cmpsb
and
cmpsb
hlt
insl
and
pop
push
imul
mov
movsl
add
in
xor
out
pop
push
int
in
dec
std
and
repnz
pop
xor
lret
sbb
sbb
cld
dec
cmpsb
mov
sbbl
loop
fidivrs
loop
ja
jae
adc
ss
movsb
iret
jge
push
mov
imul
fsts
lods
cmc
popa
cmpsb
jle
mov
rolb
add
mov
movsl
mov
and
rcl
inc
jae
iret
jle
testb
shll
lea
pop
lret
movl
push
in
mov
iret
inc
or
dec
push
mov
adc
dec
push
sbb
sub
fwait
pop
add
in
test
xor
mov
movl
mov
jl
rorl
xor
addr16
mov
lods
test
adc
pop
and
mov
iret
movsl
lods
jle
sbb
ret
cmpsb
lret
mov
stc
iret
fldl
inc
jae
ret
jo
add
hlt
notb
call
lret
les
pop
popa
sub
ficompl
call
in
mov
jl
mov
mov
int3
jle
cld
lcall
scas
and
cwtl
adc
cmp
call
negl
mov
lods
stos
mov
loope
fs
inc
test
addr16
pop
pop
inc
mov
dec
dec
sub
iret
cmp
movsb
mov
mov
das
movsb
icebp
mov
fsubrl
pusha
mov
stos
push
jmp
and
imul
fmuls
mov
pop
add
dec
pop
dec
jg
stos
mov
mov
aam
and
push
jmp
rorb
cli
add
inc
xor
in
mov
enter
pop
loope
daa
mov
lds
pop
mov
nop
pop
add
jnp
jg
cld
inc
out
xchg
mov
lret
sbb
bound
pop
pop
aam
dec
mov
fidivrl
push
out
xchg
and
add
test
subb
xor
icebp
and
sub
cld
pusha
fdivl
and
aas
ficoms
cmpsl
dec
sbb
add
or
push
insl
cmp
lea
in
lret
loopne
sbb
push
aam
dec
dec
mov
mov
cmc
push
push
mov
and
pop
sbb
fiaddl
es
mov
shll
mov
dec
in
cmp
loopne
and
mov
in
insl
mov
pop
outsl
or
inc
les
pop
jbe
aad
notb
cwtl
adcl
push
pop
outsb
repz
ljmp
sbb
stos
xor
mov
xchg
mov
sbb
inc
pop
mov
jne
and
test
mov
cmp
jo
std
or
sub
sub
push
mov
ljmp
sub
lret
add
cmp
add
fdivs
aaa
lods
imul
xchg
decl
inc
jecxz
xor
jge
mov
push
mov
mov
cli
jns
fcmovnu
xor
addr16
rcll
pop
stc
enter
mov
xor
cmp
enter
lock
sub
loopne
out
cmpsb
and
lret
jnp
add
pushf
addl
ret
jnp
mov
sbb
jg
nop
lahf
mov
sub
and
mov
add
mov
cmp
or
or
mov
dec
mov
test
dec
shlb
into
out
cmp
rclb
sarl
jmp
xchg
jo
movsl
cltd
imul
fisttps
cmc
add
lret
xor
adc
cs
xchg
in
mov
jmp
ret
xchg
adc
add
outsl
repnz
push
repz
js
sub
aas
out
iret
sbb
in
mov
sbb
mov
outsb
test
fstps
mov
pushf
ficoms
push
push
sub
or
inc
insl
fldenv
outsl
popa
dec
ret
out
push
push
das
sbb
leave
mov
stc
xor
add
or
shll
mov
enter
hlt
mov
test
dec
inc
iret
inc
nop
cmp
sub
std
movsl
lea
add
into
pop
data16
xor
push
adc
jl
sti
stos
dec
inc
aam
cs
mov
mov
mov
mov
hlt
adc
dec
mov
shlb
push
sbbl
pop
push
jbe
iret
js
xchg
in
shlb
pop
test
jnp
decb
sub
mov
jle
out
add
adc
xlat
into
lods
fdivs
jmp
jno
push
push
xor
aaa
loopne
loop
jl
sub
fwait
jae
jp
mov
mov
mov
pusha
inc
shlb
adc
dec
icebp
outsb
xor
cmc
imul
mov
dec
inc
pcmpeqd
xchg
xor
imull
dec
shld
aad
dec
mov
mov
cmc
push
movsb
cmp
jle
push
test
in
xchg
mov
ds
cmp
add
mov
adc
lods
lods
and
sub
pop
cmp
push
push
sbb
or
ret
xchg
stc
xor
fadd
dec
xchg
or
pushf
comiss
xor
fsubrl
inc
pop
xchg
inc
and
lahf
jno
fmul
call
sbb
movsl
add
cmpsb
lds
lea
pop
push
mov
ljmp
pop
ljmp
push
xchg
add
sbb
stos
push
lahf
sub
cmp
mov
pop
cwtl
test
jns
inc
imulb
in
pop
xchg
rorb
stos
sub
out
push
adc
and
push
addr16
pop
lcall
mov
pop
loop
rcrb
dec
int3
cld
inc
add
test
mov
inc
stc
mov
scas
dec
xchg
mov
aad
dec
adc
pop
jb
ljmp
mov
lds
sbb
int3
pop
sarb
les
xchg
mov
jg
push
cmpsb
or
repnz
aaa
ret
ret
adc
xor
ret
cmp
int3
dec
fdivrs
xor
mov
lret
or
call
lss
loopne
out
sub
pop
xor
push
cmp
stos
mov
sub
pop
and
fdivs
pop
test
push
sub
or
popl
inc
inc
inc
call
fwait
or
fs
mov
push
sbb
test
into
or
ja
andl
mov
mov
mov
ret
cli
jns
and
pushf
mov
dec
and
pop
mov
clc
iret
scas
js
xchg
in
data16
jl
in
push
cmp
mov
mov
cmpsb
lcall
leave
add
jbe
xchg
pop
xchg
dec
mov
js
mov
sbb
mov
fwait
cwtl
in
cs
icebp
daa
xchg
dec
or
stos
dec
push
ficomps
and
fcmovb
rcrl
jno
faddl
out
scas
inc
hlt
fists
clc
xor
sub
or
pop
test
sbb
int3
repnz
add
dec
pop
mov
loopne
inc
shlb
cltd
mov
rcl
aaa
scas
bnd
aam
mov
icebp
inc
inc
pusha
std
mov
push
testb
insb
bnd
or
in
data16
sarb
add
fldenv
mov
jl
sbb
lret
mov
adc
enter
jp
dec
aaa
sub
fildll
push
ficoms
adc
dec
cld
adcl
lret
std
fucomi
sbb
es
inc
mov
jae
test
mov
sarl
xor
xchg
loope
push
shll
and
fsubp
or
lock
mov
add
mov
xchg
out
push
add
jae
cmp
sub
sub
test
push
mov
xlat
mov
sbb
notl
leave
enter
add
push
jmp
or
push
jae
std
es
xchg
fcmovnu
into
adc
add
mov
xchg
insl
insb
shlb
lahf
xchg
jns
mov
push
cmp
xor
jecxz
lea
out
pop
sub
cmpsb
ret
pop
enter
adc
fsubrl
scas
xor
daa
rorb
push
jle
adc
sub
ret
jge
mov
int3
and
popa
cmp
divb
lcall
xor
inc
repnz
arpl
inc
fdivl
sbb
pop
inc
push
cmp
or
jg
pop
sbb
loop
sbb
jl
fs
and
les
into
cmp
les
xor
aas
dec
loop
aam
and
clc
cli
mov
add
and
nop
jns
inc
cwtl
shr
insl
testb
aad
or
push
jl
dec
cs
and
testb
loop
add
pop
inc
neg
pop
scas
cmp
test
pop
adc
test
mov
fs
add
fists
cmpsb
aas
pushf
scas
shrb
and
gs
iret
push
movsb
cmp
rcll
cmpsb
cltd
push
and
and
xchg
sbb
fwait
mov
pop
leave
adc
jne
stos
addr16
dec
jg
push
insl
mov
xchg
scas
jmp
adc
jno
aam
call
sub
sub
mov
push
and
mov
lds
sub
jne
pop
sbb
addr16
mov
push
push
fdivp
xchg
hlt
add
sbb
jmp
fnstcw
stos
test
int
and
scas
ljmp
in
push
inc
mov
add
cmp
jmp
imul
jge
lds
clc
lea
pusha
inc
sbb
jo
inc
movsb
aaa
pop
gs
lahf
mov
pop
adc
xor
sti
and
or
cmpb
fistpl
xor
mov
rcll
mov
je
lahf
or
insb
andb
stc
dec
jno
movsl
shl
jecxz
rcrl
shlb
push
push
xor
jbe
pop
fsubs
xchg
das
jno
inc
mov
mov
xor
movsl
loope
cmp
dec
adc
xchg
mov
out
mov
xchg
andl
cmc
add
int
cs
enter
sub
xchg
or
les
dec
bound
lods
int3
shll
jecxz
or
sbb
jb
inc
mov
int
inc
xor
cmp
fsts
rorb
fucomi
cld
cmp
push
mul
je
cs
insb
ja
imul
xchg
mov
lea
sub
xchg
or
jno
mov
mov
dec
jnp
and
data16
xor
push
sbb
dec
cmp
out
in
jnp
cmp
ret
bound
xchg
jno
mov
test
jge
out
imul
mov
movsl
push
enter
subl
pusha
lahf
push
scas
data16
int
scas
addr16
pop
pop
xor
std
push
out
mov
das
mov
mov
jae
nop
ror
mov
dec
push
jns
adc
mov
movsl
and
mov
leave
mov
into
out
adc
mov
cmpsb
arpl
jl
rol
mov
daa
fldcw
sbb
cmc
jbe
fidivrs
mov
pop
cmp
add
inc
loope
add
sbbl
ss
pop
push
out
adc
mov
dec
div
dec
outsb
and
mov
mov
cltd
shrl
xchg
jp
push
hlt
in
pop
out
sbb
nop
popa
mov
mov
pop
shl
into
mov
sub
popf
into
adc
pop
push
outsb
xor
into
out
sub
dec
jbe
pop
aas
xchg
sub
adc
daa
inc
push
leave
hlt
pusha
loop
sysenter
mov
fadd
movsl
sti
notb
hlt
jae
push
jge
and
dec
ja
and
xchg
in
scas
mov
push
jp
das
push
xchg
xchg
lock
mov
push
clc
das
dec
jbe
inc
xchg
out
sbb
movsb
adc
out
jl
sbb
add
add
lods
lret
sbb
ret
xor
mov
enter
jecxz
sbb
xchg
mov
sarb
push
mov
hlt
xlat
xor
daa
xor
inc
test
cmp
pop
data16
xchg
cld
sub
adc
sarb
push
addb
jo
sub
shlb
in
cli
sub
adc
and
cmc
adc
pop
in
pusha
rcll
test
repnz
lea
cld
jb
bound
pop
lods
jg
cmp
push
jbe
sub
mov
inc
jo
and
pushf
push
outsb
das
popa
scas
std
adcl
cltd
fcomps
push
in
js
mov
lea
dec
sub
dec
push
out
dec
lea
ret
push
adc
mov
mov
jbe
add
sub
fidivl
js
pop
push
mov
ljmp
or
sbb
fstpt
leave
ss
cmpsb
sub
pop
loop
sbb
pop
xchg
imul
and
dec
mov
test
pop
mov
mov
nop
sub
lods
shll
cmpsb
mov
orb
push
ret
je
shlb
subb
adc
sub
jge
popf
test
adc
jp
rolb
psrlq
mov
mov
xchg
ficompl
lret
mov
out
xor
fisubl
fistpl
stc
jge
and
and
repnz
movsb
pop
test
call
bound
in
sub
testb
scas
int3
into
jle
lcall
push
andl
adc
cmp
mov
sub
cmp
ss
push
cmp
movsb
jnp
or
cmp
faddl
insb
dec
pop
es
sahf
and
stos
jnp
inc
jb
bound
adc
or
push
cmp
mov
fcoms
adc
xlat
jl
jecxz
and
movsl
cmpsb
pop
xor
mov
loopne
loop
test
push
or
shrl
lock
rcrl
cmp
dec
sbb
popf
or
std
lahf
mov
enter
cmp
ljmp
inc
jg
mov
in
test
sub
push
adc
inc
lahf
mov
clc
outsb
push
lods
in
mul
test
and
das
mov
aad
iret
std
add
js
xchg
lock
in
sbb
jnp
cwtl
popf
mov
test
lcall
mov
push
mov
sbb
cmp
lcall
fnstsw
icebp
imull
jnp
add
xchg
mov
je
jecxz
ret
or
sub
dec
repz
popa
out
sbb
stos
add
jge
mov
cmp
mov
mov
test
fcomip
in
test
and
inc
ja
adc
movsb
cmp
inc
pusha
mov
jmp
lock
xor
lea
mov
std
mov
aad
pop
andl
andl
sub
and
stos
pop
mov
dec
out
inc
push
aas
mov
into
jbe
jl
mov
and
insl
push
xchg
pop
popa
fidivs
mov
test
stos
cmp
mov
adc
orl
addr16
sub
popa
jl
loope
lock
jecxz
mov
neg
orb
sti
mov
sbbl
lea
insl
mov
pop
pop
leave
popa
jno
leave
or
xor
bound
jmp
in
and
pop
scas
push
and
xchg
fld
repz
xor
stos
xor
xchg
pop
testl
push
shl
push
push
dec
aam
push
xchg
lock
mov
and
popl
mov
xlat
mov
jnp
xchg
ss
or
fisubrs
mov
xchg
jnp
inc
mov
cli
int
mov
jbe
cs
xchg
cld
jae
cli
push
jecxz
inc
jmp
loopne
clc
mov
inc
push
sub
mov
push
mov
je
out
mov
cmpsl
adcl
test
mov
lret
ret
pop
or
gs
jmp
pop
pop
ss
jp
out
xchg
cmp
insb
mull
push
repnz
inc
mov
daa
cli
mov
movsl
roll
aam
xor
data16
mov
gs
fimull
call
loopne
test
xchg
inc
lods
mov
and
gs
movsl
out
mov
movsl
cmp
in
add
ret
test
dec
dec
xchg
rolb
mov
ret
fldcw
add
insl
xchg
cltd
pop
mov
jecxz,pn
push
rcr
mov
xchg
dec
std
xor
ret
fnstsw
ret
xor
sbb
vpmaddwd
fldcw
cs
pusha
bound
dec
lret
sbb
push
movsl
sbbl
hlt
cmc
aam
pop
sbb
mov
fadds
incb
or
out
movsb
mov
mov
pop
jns
xchg
adc
add
dec
lods
mov
push
dec
mov
xor
dec
mov
inc
fdivs
outsl
mov
fdivs
rorl
xorb
pusha
cmpsl
daa
lods
adc
scas
and
xchg
xchg
lret
sti
mov
lahf
pusha
mov
arpl
outsl
pusha
in
pop
insb
sub
call
add
mov
or
lret
mov
gs
cmp
lret
push
mov
loop
jmp
or
outsl
add
mov
mov
sub
lods
inc
rclb
dec
sub
out
add
jle
test
fdivrl
mov
jl
inc
ret
inc
das
stc
fs
in
cmpsl
mov
ficoml
mov
push
test
pcmpeqb
pop
push
xorb
insl
lods
dec
lret
mov
push
inc
stc
push
aam
sub
iret
pusha
insl
ret
lahf
cmp
rcrb
sbb
fcmovnu
pop
fisttpl
dec
aam
cmp
stos
adc
inc
enter
cmp
dec
pop
push
push
je
arpl
pop
popf
adc
sbb
xchg
adcl
sahf
in
add
xorb
enter
sub
mov
inc
push
cmovg
imul
into
cwtl
cmc
mov
dec
sbb
imul
pop
ficoml
sbb
clc
dec
xchg
shld
cs
push
jo
mov
shrb
jmp
ret
mov
mov
rdtsc
fbld
xor
push
dec
mov
out
xchg
mov
adc
in
data16
mov
cmp
inc
ljmp
adc
clc
mov
jnp
push
cmpsl
xor
scas
push
pusha
lret
mov
sub
movl
inc
mov
stos
xor
cwtl
fdivl
fisubrs
enter
cmp
lcall
xchg
xchg
insl
ljmp
jle
jecxz
sbb
cmp
out
mov
setnp
cwtl
pop
imul
lods
out
leave
mov
sub
addr16
ja
pop
mov
insb
std
out
push
cmc
aaa
jns
push
cmp
push
add
fnstenv
out
and
pop
jns
int3
psadbw
lret
add
fstpl
incl
insl
lret
adc
mov
xchg
cli
sbb
inc
bound
mov
push
mov
xchg
popf
stos
cmp
shr
sub
add
iret
inc
sbb
jns
gs
inc
pusha
and
push
dec
stos
andl
mov
jp
dec
aaa
fdivs
daa
lods
imul
adc
adc
rorl
xor
lcall
mov
mov
jbe
pop
mov
mov
into
shl
push
adc
cmp
mov
xchg
or
test
push
mov
dec
dec
or
insb
adc
pop
xchg
inc
adc
lods
mov
adc
or
mov
add
pop
aad
sbb
pop
jo
popf
out
dec
mov
or
push
ror
stc
mov
jno
leave
pop
mov
js
adc
pushf
xor
cmp
mov
imul
dec
sbb
shll
mov
aaa
cwtl
aaa
test
movl
lods
nop
subb
pop
xchg
lret
shll
test
lods
mov
bound
mov
pop
insb
pop
push
dec
and
leave
or
fs
loop
adc
das
and
jb
sahf
ret
hlt
mov
and
and
sub
data16
add
ret
sahf
add
daa
repz
jecxz
xor
inc
or
pop
and
lea
ja
ret
test
or
pusha
or
imul
mov
dec
push
mov
fildll
pushf
adc
ret
xchg
in
lea
sbb
mov
addr16
mov
frstor
and
loop
pushf
lods
aaa
mov
push
cmpl
dec
jne
inc
out
pop
pop
sub
sbb
adc
bound
cmpsb
push
or
push
jle
loopne
push
pushf
mov
sar
jno
jb
jb
jae
mov
sti
dec
pop
fisubs
cmpsb
jno
cmp
in
test
or
aas
mov
inc
insb
ds
sub
adc
in
mov
push
or
pop
push
int3
jl
sbb
rcl
fisubrl
dec
call
push
cmc
xor
jns
idivl
repnz
xchg
pcmpeqw
dec
fimull
cmp
fists
fadd
inc
add
std
loope
and
push
cmp
out
or
push
xor
pop
pushf
jg
dec
out
ret
stos
mov
sbb
cmp
pop
lods
icebp
push
pop
mov
popa
push
pop
lds
jg
les
ja
mov
ljmp
mov
sbb
test
ja
imul
repz
and
jnp
dec
add
sbb
adc
cld
leave
repnz
fwait
pusha
test
mov
mov
xchg
and
bound
add
xor
hlt
push
jmp
inc
or
popa
dec
arpl
rolb
fsubrp
clc
adc
adc
push
xchg
cmp
fisttps
mov
mov
fstp
sub
out
fwait
mov
repnz
pop
out
lret
pop
xor
imul
test
and
icebp
nop
ret
adc
cmc
adc
cmp
and
dec
aad
push
and
pop
in
xor
mov
dec
xchg
pushl
mov
mov
mov
fstpl
leave
push
pop
dec
mov
imul
xchg
or
rcll
out
data16
push
sahf
jg
sti
sbb
push
mov
cmpb
nop
inc
repnz
mov
lret
icebp
pop
test
xchg
fdiv
enter
lods
jae
jmp
or
enter
sub
gs
xchg
outsb
xchg
lods
addr16
pop
seto
fistpll
inc
cmp
sbb
out
or
repz
mov
cli
inc
popa
inc
cld
ret
fwait
push
test
pop
hlt
in
adc
inc
subl
es
sbb
dec
pop
sbb
lock
pop
cmp
vsubps
cmpsl
cs
cmp
mov
pusha
lcall
push
add
imul
mov
sbb
adc
mulb
icebp
gs
pop
cmp
stos
push
cmp
inc
fmull
outsl
mov
inc
xor
fsubp
lcall
cmpsl
in
xlat
popa
xchg
adc
push
lock
or
in
cmp
sub
lock
bound
mov
xor
sbb
lret
sbb
adc
ror
xor
dec
cmp
dec
ficoms
mov
bound
add
push
jge
xchg
xchg
cli
jns
inc
stc
int3
xchg
mov
mov
cwtl
pop
std
push
cmp
sub
jle
mov
sub
xchg
xor
jno
iret
add
and
pop
adc
push
xchg
ja
xlat
jecxz
lret
adc
cmpsb
call
cli
test
in
mull
mov
adc
aas
inc
xor
mov
sub
in
push
pop
out
insl
dec
sbb
xchg
fwait
lock
sti
repnz
push
in
sbb
push
mov
pop
dec
push
sbb
cmp
enter
pop
popa
jne
lods
hlt
adc
add
pcmpgtd
sbb
stc
adcl
fwait
insl
or
xchg
repz
push
dec
mov
cmpsb
adc
repnz
cmp
popa
arpl
and
mov
mov
lret
dec
sbb
pop
dec
mov
outsb
mov
ljmp
or
cmp
ljmp
mov
sub
leave
cmp
sahf
xor
xchg
pop
mov
cltd
mov
inc
dec
not
xor
xchg
data16
out
ds
jb
sti
pop
les
push
insl
outsl
stc
cmp
cmpl
xchg
clc
cwtl
imul
shr
jo
sub
mov
jno
add
loop
mov
jle
loopne
add
pusha
notb
sub
sbb
xchg
aas
leave
dec
adc
iret
xor
test
push
xchg
adc
mov
xchg
or
dec
jae
dec
adc
ret
push
or
mov
mov
loopne,pt
sti
sub
add
pop
inc
adcb
int
mov
data16
push
mov
movsb
jo
fs
sub
lret
pushf
stc
mov
push
aaa
popf
into
jb
aam
xchg
popf
adc
inc
cs
in
test
fimuls
cmp
pop
or
popf
aas
push
jmp
pushl
aaa
cmpsb
enter
stos
inc
stos
jecxz
push
lods
mov
adc
jmp
cli
push
dec
movsl
mov
mov
fwait
xor
mov
out
mov
cmp
out
data16
mov
ja
daa
cmpsb
mov
and
cmpb
pop
jecxz
bound
jo
mov
test
xchg
testl
aad
adc
jge
cmp
in
adc
arpl
and
scas
and
lods
dec
data16
sbb
mov
cmp
stos
test
stos
dec
or
push
mov
movsb
cli
and
negl
xorl
ret
push
clc
mov
add
push
jge
std
inc
sub
mov
inc
and
add
push
mov
adc
aam
mov
jnp
jmp
hlt
add
bound
addr16
shlb
sahf
dec
shll
fsub
xchg
inc
mov
mov
jo
fstpl
lret
dec
lds
mov
push
push
sahf
push
cmp
jno
dec
or
into
sbb
pop
pusha
adc
ret
cmpsb
jp
aas
lea
lods
pop
cltd
mov
xchg
stos
mov
push
adc
sbb
cmpsl
data16
in
fldl
scas
hlt
popf
call
sbb
adc
jns
jl
stos
and
xor
fisubs
mov
out
movsb
and
sub
xchg
jnp
je
jp
addb
pop
pusha
clc
add
or
cmp
or
or
pop
les
jo
outsb
test
sbb
xchg
pushf
pushl
lahf
jg
data16
jnp
push
outsb
push
test
pop
outsb
pop
add
test
aam
daa
mov
cwtl
test
roll
jae
mov
test
lds
jno
mov
push
bound
adc
test
mov
stos
das
mov
mov
das
dec
jnp
fisttpll
push
xor
mov
fmuls
add
in
ja
mov
imul
ja
scas
test
emms
jnp
movsl
or
int3
loopne
mov
icebp
fadds
push
xor
repnz
int3
push
and
fidivs
push
cld
test
pop
sbb
inc
cwtl
in
dec
mov
push
sarb
pop
fnstsw
imul
ror
ror
pushf
aas
mov
xchg
jl
sbb
idivl
xchg
cmp
arpl
aaa
dec
mov
sbb
in
shrl
clc
jns
push
cmp
dec
lods
daa
jmp
arpl
add
adc
jo
inc
or
jl
mov
iret
dec
cli
pusha
xchg
ljmp
push
hlt
ret
mov
sub
fdivs
cmp
jo
add
jge
adc
sub
add
test
aam
xor
jp
mov
sbb
jg
cmpsl
mov
outsl
fisubl
bound
dec
xchg
lret
jae
xchg
mov
pop
mov
jb
xor
jg
std
ss
xor
adc
add
and
out
fucomp
jns
sbb
jne
shll
test
iret
mov
fisttpll
fwait
mov
inc
add
adc
xor
cmp
lret
fisttpll
iret
fwait
lds
fbstp
xor
js
mov
adc
ud2
or
adc
pop
dec
sahf
ja
outsb
lahf
clc
lea
in
subb
xor
mov
jmp
or
dec
push
shlb
andl
mov
pop
enter
pop
ret
jne
mov
xor
adc
fdivl
sub
stc
inc
xor
scas
cmc
mov
adc
loop
sub
cmp
sti
imull
add
mov
or
ljmp
cld
icebp
xchg
xchg
aad
mov
pop
adc
push
sbb
jge
scas
int3
xor
adc
mov
fildll
mov
dec
xchg
push
jge
add
out
shll
jg
orl
aas
push
loop
xchg
dec
push
and
push
add
mov
int3
ja
fnstcw
fstpl
mov
movsb
pop
pushf
fbstp
out
and
ds
shlb
roll
aad
sub
int
sbb
inc
push
add
and
mov
push
adc
insl
xchg
lods
pop
mov
xchg
loop
push
xor
cli
cmc
shlb
xchg
cmpsb
add
pop
add
or
test
movsl
adc
pop
push
xor
nop
std
jle
out
in
js
xor
sbb
jp
mov
sbbl
jge
rcl
ss
xlat
cmp
fistl
jno
sub
jg
or
arpl
mov
aaa
imull
adc
les
mov
hlt
push
nop
dec
push
jl
pop
inc
nop
sbb
int3
xor
aaa
fwait
shll
lods
fndisi(8087
add
xor
dec
jge
loop
into
mov
push
push
int
cmpsl
divl
shlb
scas
movsb
jmp
xor
sbb
cmpb
mov
pop
daa
shlb
dec
mov
or
xchg
std
jno
in
inc
pop
xchg
aaa
jecxz
pop
dec
mulb
mov
pop
sbb
daa
std
popf
rolb
and
and
jge
in
pop
stos
sbb
mov
adcl
inc
xor
std
push
and
add
iret
mov
add
xchg
stc
xor
jmp
inc
mov
mov
insb
lret
lods
xor
and
f2xm1
imul
out
outsb
outsl
dec
stc
out
lea
inc
adc
mov
sbb
cmpl
ljmp
shr
imul
daa
aam
sub
mov
fstl
iret
call
lret
cmp
popa
add
lea
jmp
lods
mov
imul
push
js
push
fdivr
mov
xor
gs
sysret
js
mov
jecxz
movb
inc
cmp
je
jo
xchg
and
aad
stc
ret
jno
add
out
lretw
xor
lahf
sbb
sub
and
pop
pop
loop
add
mov
mov
out
outsl
sub
adc
xorl
popf
mov
hlt
xor
ret
inc
aad
or
or
jl
dec
adc
sub
out
scas
mov
mov
push
pop
xor
pop
jnp
ss
dec
movsb
push
inc
test
cmp
aas
add
pop
adc
scas
xchg
mov
inc
dec
into
cmp
cmp
cmp
lahf
cwtl
sbb
push
adc
mov
mov
cwtl
test
bound
mov
js
jle
gs
lret
cmpsl
out
shrb
pop
jl
jg
xchg
adc
inc
push
insl
xor
xchg
or
xchg
cltd
rolb
mov
pop
and
mov
mov
incb
or
fisubrl
cmp
cmp
sti
cmp
notb
mov
add
in
mov
repz
mov
adc
xlat
cmp
push
lds
ror
pushf
add
adc
pop
imul
pop
ret
out
sbb
imulb
loope
mov
xacquire
sub
mov
mov
dec
add
sbb
test
pop
loope
out
pop
mov
pop
aaa
addb
push
sub
aad
xchg
jmp
sbb
jae
sub
aad
lret
aam
les
lods
in
add
xor
stc
stos
cli
das
in
jp
and
es
mov
scas
int3
adc
pusha
pop
push
xchg
mov
test
sar
call
xchg
add
repnz
mov
mov
ljmp
outsb
enter
jmp
ret
ret
ljmp
ljmp
add
repnz
cmp
jp
or
pop
adc
movsl
cmp
inc
dec
xor
ficoms
sbb
hlt
xchg
pop
loop
lods
xchg
outsl
adc
in
mov
jns
addl
sbb
inc
js
popf
daa
dec
pushf
int3
test
movsb
pop
or
test
jg
addr16
mov
lea
add
je
frstor
and
testb
push
add
sbb
mov
xchg
xor
push
xor
xor
in
dec
jp
jmp
je
sti
loop
paddq
and
adc
out
cmp
pop
and
ficomps
push
pop
fs
dec
repnz
pop
in
mov
enter
dec
xchg
js
dec
inc
push
idiv
jnp
int
mov
fisttpll
gs
cmp
test
dec
outsl
sbb
jno
push
fxch
outsb
lret
mov
dec
mov
mov
mov
add
mov
sahf
data16
test
xchg
or
jl
push
adc
in
inc
xlat
rcll
fwait
add
add
adc
repz
lcall
das
lds
xchg
jle
sub
pop
cmp
pop
inc
dec
xchg
jmp
mulb
inc
ss
cmc
lds
mov
enter
and
pop
adc
aas
mov
xor
inc
enter
push
arpl
sbb
or
stos
int3
out
push
jl
in
insl
adc
lds
push
adc
adc
test
shll
insb
cmpsb
sub
cmpl
lret
pusha
xchg
and
das
push
sbb
sahf
sbb
es
jmp
pop
push
xlat
add
push
mov
jecxz
mov
inc
cmp
sub
js
int3
lds
enter
push
stos
negl
cs
mov
movsb
mov
pusha
add
and
je
cmp
arpl
dec
mov
mov
adc
jns
cmpsl
rcrb
adc
inc
lea
or
xor
out
adc
les
popa
xlat
cli
sbb
pop
cmp
cli
shll
mov
rorl
push
xchg
fcmovbe
jecxz
sti
lds
push
cwtl
or
jbe
out
xchg
mov
das
adc
mov
push
adc
jp,pt
or
inc
cmc
nop
movsb
hlt
xor
in
daa
nop
leave
or
mov
cmp
dec
out
push
orl
dec
movntq
cmp
sti
cmc
and
fsubr
push
stos
in
jecxz
shrl
cmp
ss
push
xor
sub
sub
imul
daa
pop
rorl
loope
dec
insl
in
inc
mov
aaa
cmp
jmp
mov
xor
ret
pop
xlat
test
xchg
push
imul
jbe
jmp
and
insb
out
jmpw
push
jge
or
fbld
inc
filds
add
lcall
scas
fwait
cmp
aas
je
lret
sbb
lods
push
lods
cld
andb
dec
mov
sar
pushf
cs
mov
xlat
fcos
pop
push
cmc
pop
fcoml
jnp
sbb
jo
push
push
xchg
repz
jge
adc
leave
in
cmpsb
cmc
subl
jp
mov
out
lods
aam
repz
sub
les
std
shrb
mov
or
sbb
fwait
stos
pop
or
or
pop
sbbb
scas
sbb
outsb
xor
aas
addr16
mov
mov
test
xor
fistpll
out
jo
negl
inc
leave
adc
mov
adcl
lods
mov
dec
and
pop
je
movsl
popa
iret
mov
fwait
and
outsb
ret
loope
popa
test
pop
jl
push
adc
pop
mov
ljmp
leave
xor
mov
es
mov
push
clc
pusha
mov
iret
insb
dec
cmp
inc
icebp
pushl
cmpb
outsb
cwtl
ret
add
and
icebp
and
ljmp
xor
jne
or
lods
jns
xchg
and
test
xorl
iret
nop
call
jle
sahf
push
loop
xchg
out
fildll
fwait
push
inc
cmp
out
aad
sbb
cmp
daa
sahf
add
inc
fs
inc
into
cmpsl
lret
add
inc
ret
out
pop
cmp
scas
setno
jp
shll
fsubrs
int
inc
dec
lret
stc
cmc
addr16
xorl
sub
into
loopne
pop
inc
enter
in
mov
adc
jno
lahf
and
pop
adc
cmc
dec
push
mov
decb
push
cmovs
outsb
jbe
mov
frstor
rclb
cmp
pop
rclb
inc
adc
mov
add
add
inc
imul
int
xlat
mov
test
push
pushf
mov
mov
xchg
jb
in
int3
or
jp
and
dec
test
sbb
rsm
cmc
jmp
push
lret
int3
pop
cmp
std
push
mov
or
sub
out
mov
xchg
dec
adc
xchg
outsl
cs
push
nop
test
inc
or
jns
jne
mov
xor
xchg
std
jno
push
xor
stc
mov
jb
xchg
or
pop
push
mov
pop
mov
xchg
add
mov
mov
mov
sahf
rcr
addb
dec
jecxz
test
mov
lods
dec
cmp
hlt
push
adc
in
adc
js
ror
pop
adc
cs
mov
add
jmp
mov
loop
jb
xchg
iret
add
sbb
dec
bound
push
or
dec
sub
mov
mov
and
sub
add
pop
add
out
cmp
dec
pop
sar
inc
pop
xor
inc
shrb
jnp
stc
cmc
insl
pop
cld
sti
les
sahf
sbb
push
push
inc
int
sbb
cmp
push
pushf
in
mov
mov
jmp
pop
sbb
hlt
push
sbb
sarl
int3
gs
cmp
shll
or
jecxz
out
nop
push
es
lcall
aaa
enter
addr16
sbb
adc
lods
jle
pop
add
or
in
jns
mov
mov
pop
clc
ds
or
jb
shl
adc
add
fstpt
xchg
cmp
scas
nop
xchg
shr
aaa
lds
add
repz
pop
xchg
cli
cmp
icebp
cmp
pop
fcomps
shll
pop
sbb
and
mov
push
ficoms
insl
iret
push
test
push
in
mov
jne
das
subb
leave
mov
xchg
jns
scas
fldcw
jns
gs
inc
call
xchg
in
add
mov
push
shrb
mov
fidivl
fcmovb
mov
mov
sub
sub
xor
sahf
in
sbb
pop
xor
shll
mov
pop
fbld
xchg
or
xchg
adc
and
pop
jle
mov
leave
push
iret
mov
cmpsb
mov
mov
mov
ljmp
pop
out
lea
xor
push
icebp
ret
jae
lock
inc
mov
sub
dec
stc
adc
adc
nop
icebp
gs
loopne
fwait
out
sub
das
call
dec
jns
dec
mov
test
sbb
insl
jns
imul
add
popa
outsl
dec
daa
fdivrl
lcall
out
jnp
mov
push
push
mov
stos
inc
sub
adc
adcl
mov
scas
xor
add
push
gs
and
rcrb
data16
stc
xor
out
mov
addr16
and
or
mov
and
inc
nop
mov
fidivs
adc
push
ficoms
mov
mov
out
lods
push
xor
nop
shlb
mov
loopne
mov
popa
decl
inc
movsb
nop
ljmp
jo
pop
inc
sub
pop
push
xor
jno
ss
xchg
or
lahf
jnp
data16
fsubrp
or
cmpsb
mov
rcrl
fdivr
mov
ja
mov
jmp
cmp
sub
xor
outsl
divl
outsl
sbb
imul
fisttps
inc
sbb
std
push
testb
ss
aaa
mov
lret
adc
adc
adc
xchg
xchg
push
add
sbb
imul
cs
daa
mov
mov
out
cli
mov
dec
fildll
or
push
jecxz
xchg
mov
cmp
cli
sbb
sbb
sub
ficoml
sub
jno
testl
flds
sub
pop
xor
imul
jecxz
jnp
rolb
jge
or
sbb
ret
mov
sbb
jo
and
repz
jnp
cmp
in
nop
imul
fadds
xorl
pop
mov
sti
jecxz
add
xlat
scas
jb
push
mov
inc
scas
push
pop
jnp
fisttpll
mov
movsb
mov
sub
popa
fwait
jnp
aam
dec
mov
xchg
cmp
lahf
mov
jae
int
sarb
mov
and
cmp
iret
sub
push
sub
mov
adc
mov
dec
lds
in
mov
pop
or
loope
cmp
imul
and
mov
push
mov
divps
je
out
mov
icebp
out
jge
mov
and
mov
xor
pop
insl
mov
cltd
adc
sti
xchg
nop
in
out
je
pushf
mov
cli
aaa
test
shrl
mov
shll
icebp
cmp
lcall
mov
dec
cmp
sub
inc
out
stos
jmp
lods
insb
dec
cmp
aad
nop
mov
add
iret
mov
push
pop
xor
ror
fsub
jno
cmova
insb
mov
jne
add
ret
mov
mov
sub
loopne
fldenv
jle
fwait
es
sub
xchg
into
lods
pop
in
inc
pop
adc
shlb
loopne
and
sub
stos
popf
int
cltd
xchg
fmull
fildl
fsubr
jmp
mov
push
roll
add
and
addr16
shll
sbb
stc
les
jl
dec
scas
lret
mov
aam
lods
push
orl
add
jae
pop
lock
adc
lret
push
or
xor
cmp
sub
jo
jp
test
repz
cmpsb
shrb
and
mov
push
repnz
leave
call
cmp
pushf
and
enter
push
sahf
inc
repz
in
inc
add
xor
sub
ret
mov
outsl
mov
mov
arpl
idivb
and
inc
sub
call
mov
cli
adc
push
mov
insl
adc
sbb
cmp
pop
push
lahf
mov
mov
dec
in
dec
mov
mov
or
and
fstpl
dec
aas
mov
loope
orl
clc
dec
cmp
push
sub
test
mov
enter
push
pushf
cltd
push
and
call
gs
roll
lods
fs
push
push
shlb
dec
orb
push
ret
lods
dec
inc
mov
aam
cltd
inc
add
movsl
jl
mov
cmp
scas
mov
fdivr
addr16
ret
lret
sub
or
enter
jecxz
push
pop
xor
jae
inc
stos
add
ret
or
cmpsl
or
push
iret
lret
test
rcll
adc
lea
xor
inc
cwtl
pop
mov
jecxz
push
data16
mov
js
push
pop
icebp
add
addr16
pop
rclb
outsl
in
xor
aas
ret
test
push
mov
test
cmpb
sbb
mov
jg
in
js
inc
xor
fistpll
test
jnp
inc
mov
je
out
inc
popa
sbb
cltd
leave
imul
cmp
mov
aam
in
xorb
mov
cmp
mov
mov
int3
cmp
insl
in
mov
dec
lahf
popa
in
push
sahf
aas
adc
add
aam
sbb
iret
pop
test
push
jl
cmp
cwtl
and
out
sbb
lahf
adcb
scas
dec
cmp
popa
inc
jb
add
gs
cwtl
adc
push
aam
lods
scas
cwtl
test
xchg
inc
jmp
push
pop
sbb
shlb
nop
push
inc
inc
mov
add
sbb
call
xchg
xor
dec
push
xor
lods
sub
mov
lcall
pop
imul
aad
aas
les
js
mov
push
mov
push
fwait
int
xor
movsb
xor
dec
into
in
add
jo
and
out
aas
das
mov
lds
insb
xor
daa
inc
nop
mov
int3
mov
sbb
dec
in
fldenv
push
ljmp
or
xlat
mov
adc
nop
push
mov
aas
fbld
adc
inc
mov
or
push
rcrb
test
mov
das
scas
lock
pop
dec
aaa
dec
cmp
sahf
or
ret
loopne
nop
push
daa
or
addr16
push
loopne
filds
cltd
out
and
push
adc
push
inc
sub
stos
loope
jo
xorb
add
movsb
add
cmc
inc
xchg
sub
cwtl
mov
int3
fsubs
and
xor
fsts
sub
inc
push
fstl
fistl
mov
lock
mov
dec
inc
jnp
mov
and
inc
mov
or
insb
orb
mov
leave
fs
shll
mov
xor
scas
push
push
jg
xchg
xor
sti
dec
loop
lock
adc
ljmp
les
inc
shl
mov
mov
pop
or
imulb
dec
adc
in
ret
stos
aaa
bound
scas
sbb
imul
icebp
das
roll
insl
fisubrl
or
pop
sub
mov
mov
and
mov
pop
mov
dec
mov
pop
je
push
ss
add
scas
jb
fisttps
testl
cmp
push
cmp
xor
fldcw
inc
mov
int3
push
mov
scas
sbb
mov
dec
stos
lods
leave
cmp
mov
fsubl
nop
mov
into
push
loope
inc
mov
aas
jge
aad
sub
mov
cmp
adc
ljmp
dec
iret
pop
rcll
jo
lods
adc
hlt
daa
imul
inc
add
push
push
adc
mov
shrb
mov
aas
inc
xchg
or
icebp
pusha
cld
jl
rorl
dec
lcall
int
dec
fsubp
jo
test
mov
test
flds
sub
adc
fsubrl
xor
cmp
call
shlb
xchg
push
incb
add
ret
iret
ljmp
mov
push
xchg
imul
xor
neg
add
lods
xchg
aaa
xor
fbstp
inc
stos
push
fnstenv
mov
xchg
and
push
xchg
xchg
call
xchg
mov
adc
lds
aaa
or
lcall
mov
jle
xchg
in
out
push
adcl
mov
dec
loope
pop
loop
sarb
movsl
sub
lea
sbb
or
adc
lahf
mov
fnstcw
push
lods
jecxz
mov
jne
mov
std
ljmp
icebp
jae
lods
nopl
loope
cmp
add
pop
gs
iret
sub
xor
push
xor
sbb
addr16
and
aam
sub
or
stos
aam
ds
ljmp
or
les
fwait
lcall
push
outsb
imul
add
cmp
jns
iret
pop
mov
jo
fisttpll
mov
and
sahf
cs
sahf
rorb
xor
cmp
fists
sarl
ss
ljmp
cmp
jp
or
xor
shrl
jb
jl
and
fildll
and
imul
adc
push
adc
ficompl
inc
int3
mov
push
in
sbb
mov
mov
fadds
xor
or
andb
insl
test
jb
add
lret
test
sub
enter
adc
mov
outsb
mov
insb
je
mov
sub
push
push
pop
or
xchg
leave
pop
jae
hlt
sahf
aad
loop
int3
shr
test
loope
xchg
std
ss
and
enter
loop
andb
inc
lds
sti
and
js
movsl
xor
cmpsb
hlt
jb
jae
xchg
cmpb
sbb
test
adc
les
xchg
adc
jle
cmpsl
cmp
inc
loopne
or
scas
xchg
push
jg
stc
sub
push
inc
and
cmpsb
nop
or
ss
std
lea
in
aam
int3
sti
xchg
cmp
mov
mov
or
daa
fucomip
xchg
mov
scas
das
test
stc
jg
ficoms
fcomip
mov
andb
jb
pop
adc
mov
xor
test
popf
add
mov
outsb
cmp
or
js
mov
cmp
or
les
sbb
lahf
push
sub
and
jno
push
gs
cld
arpl
fmull
pop
add
sbb
push
cmp
push
sub
xchg
cli
shr
je
daa
adc
sbb
test
or
nop
xor
cwtl
xor
xchg
mov
cmpsl
or
cmc
jnp
mov
fidivrl
repz
push
clc
or
jae
hlt
pushf
popa
jle
mov
test
idivl
cmp
movsl
mov
xchg
xlat
iret
cltd
adc
sub
jae
int
mov
jnp
sbb
enter
jne
jns
add
jae
out
push
fmul
and
jge
jp
mov
aad
add
pusha
inc
in
pushf
sbb
pushf
aaa
mov
xor
sarl
imul
les
sub
jmp
int3
jmp
das
aam
bound
jno
cmp
movsl
sub
jmp
ret
test
mov
pushl
ss
test
mov
push
test
mov
int
mov
sti
sub
lret
jl
test
in
daa
test
pop
mov
arpl
fisttpll
inc
sbbl
leave
je
dec
pop
sahf
jne
mov
xor
test
enter
adc
mov
adc
fidivl
mov
xor
lret
push
int3
scas
repnz
dec
push
adc
aam
cltd
jae
add
dec
and
mov
cmpsw
xchg
arpl
xchg
cmpsl
lods
cmc
sbb
jp
in
sbb
and
add
push
mov
cmp
mov
pop
sbb
repnz
orb
roll
daa
popa
jns
and
lret
int3
lea
loope
icebp
cltd
aam
push
jo
push
jmp
outsl
stc
ja
scas
sub
dec
int3
dec
pusha
xlat
fcmovu
rorl
push
inc
jb
xchg
pusha
sub
addr16
testl
in
mov
in
repz
aam
inc
pop
jnp
movsl
mov
ss
push
push
testb
in
sub
ret
mov
jae
cli
sbbl
jle
shrl
pop
test
and
inc
out
repz
sti
jne
push
outsb
sbb
mov
add
adc
pusha
or
and
andl
push
aam
dec
scas
inc
pusha
jnp
jecxz
cmp
add
addb
repz
push
push
or
out
scas
aas
jmp
xor
dec
sbb
push
jg
inc
call
loopne
xchg
adc
addb
sahf
and
sti
mov
test
mov
sahf
andl
leave
mov
adc
mov
cwtl
push
inc
adc
xor
rol
cmp
js
fidivrs
addr16
xchg
js
jae
shrl
insb
dec
mov
aad
dec
xchg
xor
inc
adc
cmc
shll
and
mov
dec
mov
and
aam
xchg
int3
pushf
bound
notb
xchg
in
sbb
lea
clc
dec
xor
sub
push
inc
enter
mov
push
jge
nop
sub
inc
les
insb
ds
mov
sbb
popa
inc
jns
mov
sub
cltd
loopne
aas
cli
maskmovq
popf
dec
shrb
adc
aaa
call
push
sub
idivb
jb
jo
fs
and
xlat
fidivrs
xchg
fs
dec
in
inc
push
xchg
xlat
in
gs
std
jnp
pop
mov
stc
sahf
adc
movsl
repz
pop
or
add
inc
xchg
sti
int3
movsl
int
sahf
inc
inc
loop
push
jnp
add
mov
jns
in
pop
fsub
jo
cmc
xor
mov
hlt
dec
sub
dec
ljmp
ficompl
test
test
lds
jmp
or
enter
push
dec
pop
sbb
dec
outsl
adc
mov
fxtract
mov
popa
scas
add
test
adc
fldcw
add
mov
jl
ds
dec
sbb
movsl
push
fsubrl
test
sbb
into
jne
sbb
xor
mov
push
nop
repz
bound
xorl
notb
push
sbb
aam
mov
frstor
jae
out
pop
cmpsb
jecxz
ret
xor
movsl
jae
add
mov
lret
out
out
jne
mov
adc
xlat
inc
xchg
xor
cmp
dec
outsl
popf
jmp
sbb
fistps
fldenv
adc
xchg
dec
mov
xor
sti
adc
mov
cmp
in
sbb
std
jp
cmp
pop
adc
mov
in
rol
inc
testl
sub
pop
addr16
movsb
aas
dec
jmp
push
in
cmp
outsb
inc
xor
fistps
scas
jmp
fadd
jb
jecxz
mov
movsl
jmp
xor
sbb
mov
cld
xor
mov
mov
pop
and
inc
mov
std
push
dec
cmp
clc
in
cmp
mov
pop
das
jp
sbb
dec
jb
cmp
cmp
push
push
or
es
adc
sub
xchg
inc
cmp
test
leave
mov
and
push
cmp
nop
or
into
mov
lock
rcrb
cli
jnp
repnz
ljmp
pushf
sbbl
adc
daa
jp
add
inc
push
mov
sarl
loope
scas
enter
xchg
jno
lahf
sbb
mov
loopne
aaa
jp
icebp
cmp
enter
test
arpl
dec
lret
ror
fistpll
dec
dec
incb
or
insl
repz
add
mov
mov
add
mov
push
mov
push
insb
and
push
rorb
or
arpl
lret
mov
inc
mov
in
sti
mov
out
and
sub
adc
shll
adc
xor
movsl
daa
std
popf
mov
ret
jmp
sbb
scas
rcll
cwtl
xor
in
adc
inc
test
pop
scas
pop
jo
mov
lahf
xchg
loop
and
insb
xlat
lret
inc
push
fwait
sbb
repnz
push
ficoml
pop
imul
add
adc
enter
xor
decb
stos
xchg
xor
xor
shll
xchg
scas
lret
pop
insb
inc
int3
ljmp
dec
jmp
add
aaa
dec
xlat
mov
jo
sub
sbb
clc
mov
cmp
jnp
push
into
cmp
imul
push
loop
cmp
fcomip
mov
pushl
inc
add
cmp
and
xchg
pop
bound
test
lock
push
ror
test
shr
pop
or
pop
fcompl
push
inc
cmp
dec
adc
loop
scas
mov
out
cmp
jns
stc
rcl
fwait
sbbl
out
dec
ja,pn
lods
bound
shr
push
pushw
pop
clc
inc
imul
aas
fists
mov
fld
mov
pop
sahf
je
sahf
add
push
in
test
push
scas
in
push
fildll
xor
push
pop
or
jl
inc
daa
inc
dec
mov
scas
inc
xchg
loope
into
xor
add
adc
xchg
jmp
inc
jae
imul
out
testl
pusha
icebp
push
inc
ss
int
pop
stos
arpl
gs
dec
aad
mov
lcall
fstpt
jmp
xchg
xchg
in
gs
ret
adc
push
loope
loop
enterw
xor
cli
dec
inc
jg
stos
fdivrp
or
and
testb
jp
mov
push
or
loopne
cmpsl
add
daa
in
xor
sub
dec
das
push
inc
mov
add
jp
lahf
int
sbb
aad
sub
pop
or
iret
mov
lahf
into
inc
jne
cli
mov
gs
mov
xlat
mov
push
push
rcl
pop
sub
imul
mov
xor
movsl
es
dec
push
loope
xor
jns
aaa
rorb
or
xchg
fdivrs
and
bound
jl
xor
daa
xchg
stc
and
sub
in
mov
lret
int
fs
pop
push
adc
cmpsl
cmp
xchg
das
sub
pop
faddp
test
mov
je
push
aad
and
pop
sti
mov
xor
jb
cmp
pop
cwtl
jl
daa
or
lock
push
ljmp
adc
sarl
sub
fistps
mov
hlt
sub
mov
sbb
xor
inc
jne
cmp
xor
jle
or
outsl
inc
and
mov
and
sbb
gs
fsubl
cs
pop
xor
mov
sub
dec
ss
pop
je
sbb
jmp
mov
push
xor
jmp
out
add
sub
dec
adc
insl
cmc
jmp
bound
mov
mov
sbb
arpl
xor
popf
cmp
out
mov
mov
cmp
jle
cmp
mov
ds
scas
push
xchg
sbb
xor
push
fiadds
in
jl
push
push
mov
cmpsl
mov
adc
xlat
jmp
inc
loop
mov
outsb
jmp
dec
mov
in
out
ljmp
popl
ss
pop
push
or
popa
mov
xchg
fwait
push
cmp
xchg
lahf
call
aas
dec
int3
xorb
adcl
dec
shll
lret
inc
jmp
pop
mov
and
xchg
pop
jge
cmp
adc
rcrb
pop
dec
test
or
clc
enter
push
rolb
cli
push
arpl
je
jp
adc
out
iret
dec
dec
scas
mov
add
ds
lret
and
mov
cs
out
stos
jg
pusha
or
cmp
add
xchg
incb
stc
clc
sbb
test
cld
jbe
out
out
dec
push
shll
sahf
lea
mov
jge
in
push
test
ret
ds
stc
outsb
sahf
mov
or
fst
mov
std
cltd
add
mov
dec
into
mov
adc
lds
enter
nop
mov
lea
push
dec
pop
mov
or
hlt
and
into
mov
mov
shl
cli
mov
add
xor
or
mov
cltd
and
xchg
add
xchg
jecxz
mov
mov
and
sub
mov
cli
cmp
jo
sbb
mov
stos
sub
xchg
push
aaa
mov
aam
lea
xor
ja
dec
adc
sbb
in
sub
push
and
and
bound
push
xchg
mov
add
movsl
jmp
nop
lock
mov
pop
add
mov
out
inc
ror
xor
mov
out
pop
insb
pusha
fdivrp
jge
inc
or
mov
inc
mov
adcb
jae
fnstenv
mov
in
mov
mov
xchg
xor
mov
cs
mov
ret
movsl
sbb
lahf
adc
fcomps
lods
mov
xchg
sti
repz
andl
push
inc
jo
jp
cmp
mov
insl
and
cli
cmp
movsb
xchg
sahf
scas
ret
inc
dec
fcomi
or
pop
cmp
mov
dec
pop
jae
insb
ss
mov
lds
cmc
stos
sbb
pop
jp
gs
jo
jle
lret
xchg
jmp
xor
mov
stos
test
repz
dec
icebp
push
and
xor
enter
xchg
pop
mov
dec
shlb
ljmp
rcrl
lret
in
call
jecxz
xchg
cs
add
aas
mov
mov
push
pop
mov
cmpsb
mov
cmpsb
shlb
mov
insb
fidivl
ret
movsbl
bound
pop
adc
cltd
add
test
ret
sub
mov
sbb
dec
orl
test
sub
ja
pop
push
outsl
push
jne
push
test
icebp
or
xor
sbb
imul
or
jbe
pop
or
mov
fstpt
sub
icebp
lds
push
bound
addr16
and
dec
sub
scas
xor
mov
icebp
and
fiadds
xchg
es
cld
cmp
stos
mov
bound
pop
inc
jb
mov
or
jge
xor
loope
xor
sub
rcll
call
jg
rorl
xorb
sbb
pop
mov
adc
xchg
mov
pop
or
dec
popa
add
cmp
mov
imul
nop
push
test
inc
pop
xchg
pushf
imul
les
sub
or
dec
lahf
push
les
xchg
sbb
pop
enterw
rcrb
add
jnp
jno
inc
add
adcl
inc
jg
jecxz
in
out
filds
mov
and
push
in
xor
ljmp
lods
mov
sbb
xor
mov
repz
and
jno
faddl
add
mov
inc
cmp
in
js
movsb
mov
dec
je
divl
and
mov
sbb
notb
pop
int
add
xlat
popf
das
mov
rorb
mov
mov
test
rorb
cmp
cmp
add
inc
push
shlb
mov
mov
lods
iret
mov
rorl
cs
lahf
mov
mov
fstp
mov
cmpsl
inc
xor
stc
sbb
push
call
enter
lock
imul
stos
xchg
fisubs
outsl
adc
mov
xor
insl
jmp
adc
sbb
or
xor
sub
cmp
mov
fistps
arpl
lods
rolb
data16
mov
popf
imulb
das
cmp
dec
or
das
pop
jle
sbb
adc
or
add
fstl
cmp
xchg
pushf
jo
xchg
sub
adc
frstor
into
push
mov
inc
sub
fisttpll
out
sarl
inc
dec
cli
lock
test
mov
ljmp
sub
popf
popf
adc
jmp
pop
cmp
enter
imul
mov
lcall
in
sarb
std
xchg
fbld
fsts
loopne
mov
repnz
cltd
sub
add
loope
hlt
xlat
mov
popa
xchg
push
mov
not
and
push
push
stc
shr
cltd
adc
adc
fs
mov
movsl
aam
pop
mov
add
and
jg
and
loope
loope
push
bound
adc
xchg
test
pop
jle
mov
je
push
lds
jp
xchg
fistpl
sub
ret
mov
add
test
aad
movsb
pusha
fwait
xchg
cmp
mov
das
mov
push
push
int
ficoml
jecxz
push
mov
mov
loop
xlat
ljmp
cmp
dec
fcomip
addr16
pextrw
insl
jmp
hlt
jge
mov
shr
aas
sti
add
pop
jle
dec
xchg
sub
jmp
sbb
lock
xchg
push
mov
mov
stos
sub
movsb
wrmsr
xchg
xor
sbb
pop
mov
sub
hlt
in
inc
roll
leave
jecxz
test
outsb
ss
sti
in
xlat
in
in
movsl
notb
pop
sahf
ds
pop
mov
lea
subb
push
push
sbb
and
jne
int
xchg
addr16
aaa
jle
jl
dec
arpl
je
fcomp
inc
sbb
xchg
mov
sbb
lds
jo
hlt
jnp
loop
enter
daa
subb
xor
mov
aas
adc
inc
ret
jnp
lahf
adcl
fiaddl
lcall
roll
fcomip
jo
scas
xor
pop
pushf
mov
repz
add
pop
push
push
xchg
popa
sub
pushf
pushf
cmc
popa
mov
xchg
outsb
gs
adc
mov
pop
jle
adc
popf
jmp
insl
mov
lret
jb
cmp
aam
insb
out
fsub
pusha
xor
movsb
add
inc
sarb
div
and
jo
sbb
ret
enter
in
lods
or
in
or
int3
dec
ret
mov
xchg
adc
adc
push
and
sarb
jg
push
imul
jmp
idivb
mov
call
mov
test
call
pop
ret
dec
jnp
dec
inc
cmp
pop
data16
jle
mov
mov
xor
jle
and
insl
sub
or
sub
jg
mov
lods
sbb
ror
jp
das
enter
shrl
fld
mov
cmp
xor
pop
ret
scas
xchg
adc
aaa
jg
mov
push
adc
lret
mov
lock
add
in
movsb
xchg
es
lock
bound
sti
lret
sub
inc
in
gs
lahf
push
inc
inc
adc
notl
stos
rcll
xlat
push
push
popa
inc
js
xchg
adc
mov
jnp
sar
sbb
fnstenv
ljmp
adc
mov
popa
stos
lcall
orl
cmp
or
cmp
decl
and
mov
sahf
ja
mov
jp
gs
sbb
fnstsw
jl
push
push
add
in
or
push
popa
insb
cmc
mov
cld
scas
cmc
int
mov
push
cld
fstpl
in
push
lahf
cld
push
mov
mov
out
pop
movsb
inc
enter
xchg
mov
cmpsl
int3
xor
inc
and
jns
push
pop
jg
push
out
jb
jge
jle
les
jl
pop
imul
sbb
jecxz
cwtl
or
out
cmp
in
fwait
dec
sbb
jp
sub
jge
cmc
stos
cmp
pop
mov
and
cmpsb
idiv
orb
pop
popf
xchg
aam
int3
fsubs
mov
das
ficompl
decb
iret
jg
or
jnp
jle
enter
leave
push
es
sub
out
mov
test
sub
dec
ret
outsl
out
push
aas
sub
fdiv
out
xchg
xchg
popf
add
ljmp
ret
push
lea
rorl
pop
dec
test
mov
xor
mov
loope
daa
fcoml
sbb
mov
outsl
pop
out
mov
and
repnz
sbb
mov
sbb
mov
xchg
mov
push
ss
mov
xorb
xchg
cld
or
mov
ljmp
loopne
in
cli
lret
xchg
mov
adc
pop
fstps
jo
std
movsl
ljmp
aam
or
movsb
ret
xchg
incl
and
loope
out
cli
xchg
fs
xchg
pusha
outsl
sub
cmp
movsl
fnstsw
dec
into
cld
cmpsb
adc
cmp
dec
push
lret
jg
bound
inc
lock
cmp
outsl
jp
xlat
aad
fstps
jbe
shl
mov
mov
push
movsl
jecxz
push
repnz
icebp
adc
xor
xchg
lods
aaa
push
stos
stc
cmp
imul
and
leave
je
stos
push
bound
mov
mov
pop
into
scas
inc
or
hlt
insb
xor
scas
cmp
or
insl
inc
xchg
aad
inc
scas
push
pop
ja
ja
jg
or
in
push
shlb
jns
daa
lcall
push
cmpsb
push
insb
jp
xlat
jp
cmp
inc
sbb
lahf
je
mov
enter
out
je
lret
cmp
insl
loopne
sbb
shrl
cmpsl
aas
insb
jmp
xor
add
es
inc
and
pop
dec
in
sub
inc
cmp
es
pop
dec
mov
mov
outsb
mov
fsubrs
loopne
lret
push
sahf
inc
push
mov
in
mov
mov
pushf
sarb
mov
add
decb
incb
lcall
dec
outsl
push
adc
push
arpl
je
push
iret
mov
push
pop
rcrb
pop
orl
outsb
adc
popf
daa
jecxz
lret
jbe
fldz
ljmp
lds
lock
cmp
leave
ficoml
and
popa
jge
pop
imul
out
in
add
leave
xchg
std
divl
lods
and
div
mov
pop
push
sahf
icebp
jbe
loop
sub
lock
push
adc
mov
mov
jb
mov
andl
les
cmp
cmp
sub
mov
and
stc
test
lock
mul
in
mov
inc
mov
hlt
dec
xor
fs
jg
std
out
hlt
mov
leave
rorl
repz
mov
div
inc
dec
test
ret
cmc
mov
mov
scas
adc
out
scas
and
mov
push
push
add
dec
movaps
lds
inc
out
je
loop
push
or
fadds
daa
cli
and
sbb
pop
das
in
jo
loopne
aas
adc
or
aad
out
cld
sbb
and
xor
fcmovu
fwait
xchg
mov
xchg
dec
rcrl
jl
pop
xor
js
lret
xor
pop
dec
fs
pusha
jnp
mov
push
fsubrs
sbb
mov
or
out
arpl
mov
jp
xchg
icebp
aas
ret
mov
mov
xor
lods
xchg
dec
sub
pop
mov
xchg
mov
mov
fcoms
cmp
push
fistps
stos
xchg
cltd
mov
push
mov
lcall
and
lret
ljmp
mov
rorb
sub
outsl
xchg
sbb
mov
test
outsb
xor
test
movsb
xchg
in
push
incb
je
cmp
sub
sbb
mov
and
nop
mull
outsb
cmp
and
enter
ljmp
ret
arpl
cmp
inc
je
sbb
add
rclb
inc
xor
ja
or
sub
xor
mov
imul
or
mov
aas
add
xchg
pop
mov
mov
jmp
jg
inc
mov
mov
enter
pop
xor
jae,pn
es
into
aam
lret
mov
std
ret
jns
shlb
lcall
mov
lock
pop
insb
in
pushf
gs
jmp
test
aad
lcall
aaa
cmpsb
roll
cli
dec
xchg
ja
or
jnp
dec
lock
int
xor
push
pop
cmpsb
imul
outsb
lret
insl
shll
mov
in
inc
cmp
push
sbb
cmp
stc
clc
lods
cmp
sahf
sti
inc
dec
push
lea
fdivrl
mov
jg
cmc
sub
xlat
sub
js
pusha
or
and
pop
cltd
xor
mov
push
cmp
ror
arpl
les
mov
xor
cmp
mov
cli
shlb
xor
lods
jp
xchg
dec
push
aad
sbb
das
cli
cmpsb
fcoms
fadds
adc
jns
add
lret
enter
dec
mov
inc
and
lds
pop
popa
jnp
sbb
mov
mov
lods
lretw
dec
pusha
sub
je
cmc
insl
addl
ljmp
pop
lea
daa
sub
fsubrs
lahf
mov
popf
jp
and
in
push
cmpsl
sti
ljmp
mov
jmp
pop
sbb
cmp
cltd
inc
movsb
mov
adc
jmp
jne
xchg
lds
imul
add
jns
insb
inc
popf
out
imul
push
call
out
inc
jg
sbb
movsb
popf
mov
dec
insl
out
cs
pop
jne
imul
mov
pop
or
jecxz
sbb
mov
mov
cmp
and
insl
js
dec
fnstcw
iret
cli
outsl
inc
loope,pn
outsb
mov
lea
adc
aam
scas
sub
cmp
loope
or
addr16
in
das
adc
clc
sub
xor
ret
mov
loope,pt
mov
gs
gs
rolb
lock
pusha
pop
cmp
loop,pt
mov
mov
pop
jno
ret
outsb
ds
mov
jnp
mov
out
jle
gs
popa
push
mov
ljmp
sbb
sbb
inc
sbb
dec
mov
cmp
pop
lods
out
pop
fcmovbe
hlt
addr16
cwtl
and
mov
sarb
out
dec
lea
stc
es
mov
fs
std
call
je
xchg
cmpsl
cld
inc
popf
insb
push
repz
mov
push
jb
jg
in
jo
push
push
cli
ja
push
jae
movsb
cmc
jno
outsl
cs
add
in
mov
dec
sti
mov
shlb
xchg
lret
repz
cmc
nop
mov
insl
sub
mov
insb
mov
sbb
cs
xchg
push
push
push
je
and
loop
jmp
repnz
and
mov
add
mov
std
push
aas
pop
test
xor
stos
mov
bound
or
lret
ret
add
gs
test
dec
out
inc
pop
jge
cmp
outsl
je
icebp
sub
jle
int3
ss
cmp
aad
ds
xor
jecxz
test
sbb
xor
mov
sub
mov
pop
inc
add
mov
lret
xchg
in
mov
jl
adc
mov
in
popa
scas
sbb
jle,pn
loop
lods
idiv
movsl
pop
xchg
mov
test
enter
inc
mov
stos
dec
jns
dec
cs
stc
test
inc
mov
lods
shlb
cwtl
adc
cmp
outsl
mov
lcall
push
jl
push
aaa
dec
xorb
mov
cs
mov
aaa
or
mov
rclb
xchg
ja
into
dec
or
adc
xchg
xchg
sbb
inc
xor
ret
incl
inc
or
or
add
push
add
xor
into
gs
push
mov
adc
stos
add
sbb
adc
scas
cmp
ja
inc
xchg
xchg
mov
das
sub
sbb
popa
dec
add
mov
push
movsb
mov
rorl
add
add
ds
xor
fisubrs
ror
mov
and
stos
out
cltd
add
into
or
das
mov
jmp
repnz
in
lret
in
inc
push
pop
mov
mov
inc
cmpsl
and
aas
dec
cli
sbb
mov
and
mov
mov
dec
xor
in
stos
je
pop
popf
cmp
inc
in
dec
shrl
jg
add
pushf
pop
pop
cmp
adc
jmp
add
xor
mov
mov
pushf
mov
mov
adc
mov
jl
dec
lods
loope
je
xor
xlat
jg
and
clc
out
jnp
or
and
lret
gs
mov
mov
shlb
test
pushf
and
push
pushf
loop
lret
lret
aas
mov
add
xchg
sub
test
add
and
ss
xor
push
sub
inc
sbb
xchg
cld
dec
mov
mov
in
or
stos
xlat
pop
cmp
fsubrp
cmpsl
popa
jge
sbb
out
andb
bound
cmp
repz
test
pop
outsb
jns
add
fdivr
daa
fs
std
cmc
outsl
aaa
dec
jg
out
cmpsl
cmp
out
xor
aas
and
andb
jg
cmpsl
cmp
ret
clc
js
lret
sarb
mulb
popa
adc
cld
leave
in
inc
inc
movsl
ror
add
gs
popf
push
stos
in
mov
scas
cmp
inc
push
subl
nop
adc
loop
inc
shl
movsl
push
push
mov
andl
push
mov
mov
xor
fcompl
push
fsts
shrb
pop
leave
fldcw
inc
mov
cwtl
imul
and
fidivrl
xchg
push
xchg
ds
lods
push
adc
mov
mov
mov
je
pop
push
adcb
lock
insb
scas
fists
add
adc
mov
adc
cmpsl
adc
mov
cmp
mov
cmp
fstps
cmp
fildll
stos
sarb
inc
lret
mov
pop
mov
xchg
pop
lahf
ret
mov
inc
add
addr16
dec
sbb
scas
mov
jmp
int
fnstsw
push
sbb
iret
pusha
inc
lds
dec
jle
fs
jne
loopne
loopne
jle
jecxz
or
cmp
imul
mov
xchg
into
inc
inc
popa
add
inc
pop
cmp
into
fs
in
xor
int3
xchg
add
les
icebp
rcr
incl
push
test
repnz
mov
adc
and
cmpsl
sahf
cmp
pop
sar
je
xor
in
fidivrl
sarl
inc
cli
mov
jo
or
mov
xor
cmp
insl
mov
xor
jnp
lcall
inc
xlat
inc
mov
mov
fistpll
lcall
xchg
pop
div
add
sub
push
lahf
imul
fsubrp
into
dec
inc
les
out
addr16
pop
cli
sub
in
cmp
jne
dec
insl
jg
and
mov
sub
or
pop
mov
mov
pop
mov
xchg
out
enter
dec
jnp
add
outsb
xchg
les
adc
inc
and
push
sahf
xchg
or
clc
ret
xor
xchg
sbb
cmp
dec
lds
fstps
cmp
lods
pop
sub
fsubs
or
and
mov
cltd
pop
loop
repz
addb
out
int
outsb
outsb
pop
cmpb
cmp
jb
ds
sub
cltd
xor
out
inc
test
sub
ror
sbb
xor
lock
ljmp
mov
lcall
jmp
mov
xor
dec
xor
mov
add
sbb
mov
in
cmp
jg
inc
sar
mov
mov
and
inc
pop
ss
mov
popa
iret
fistpll
nop
loopne
ret
mov
inc
pop
pop
js
mov
aas
sbb
jns
shlb
rolb
mov
fsubrs
pop
mov
pushf
push
or
je
pop
mov
push
sbb
mov
or
adc
sarb
mov
adc
popf
fdivs
sahf
adc
fiadds
sub
xchg
xlat
sbb
mov
push
mov
dec
popa
ds
aad
pop
test
push
sbb
sahf
addr16
xchg
sar
inc
xor
stc
ret
outsb
and
sub
jmp
shlb
push
enter
jnp
mov
ja
lcall
ja
ds
jmp
or
push
push
daa
push
mov
mov
stc
dec
fdivrl
or
cmp
or
mov
xchg
in
test
sub
cmp
int3
ljmp
scas
dec
inc
mov
sub
mov
pop
int
ds
pop
mov
pop
lret
adc
jb
jl
inc
inc
test
scas
popf
push
fwait
xchg
cmp
and
fnstsw
mov
xor
repz
test
or
xor
into
sub
loopne
outsl
cmp
aam
pop
push
mov
push
add
sub
fwait
jno
sbb
loop
cmp
bound
ucomiss
das
sbb
fidivrl
aas
shlb
mov
jnp
sbb
movsb
xchg
cltd
popa
and
test
jle
imul
jo
mov
and
jne
push
sbb
es
ret
mov
xchg
faddp
mov
and
sub
dec
jmp
test
andb
sub
popf
adc
or
mov
out
fbld
fistl
cmp
mov
mov
push
adc
add
and
pop
cmp
mov
xor
stos
mov
pop
insb
ljmp
in
mov
mov
outsl
iret
psrld
js
inc
leave
lcall
push
dec
cmpsb
out
aam
mov
out
cmpsb
add
stc
xchg
mov
int3
scas
inc
fisttpl
sbb
sbb
test
xchg
das
cmp
in
dec
iret
stc
inc
stos
ljmp
sti
inc
pop
jo
scas
inc
sahf
jae
xchg
push
adc
xlat
xchg
jmp
pshufw
rcrb
neg
xchg
cmpsl
inc
mov
push
cld
stos
pop
mov
sub
sahf
pop
mov
mov
sbb
jnp
cmp
out
and
leave
bound
testb
mov
pop
push
pop
aaa
sbb
dec
push
dec
xchg
cmpsl
pop
sub
imul
pop
xor
pop
lock
mull
ljmp
push
out
cli
adcl
fs
sbb
fiaddl
out
out
cmp
push
mov
mov
add
fs
out
test
dec
addr16
out
push
mov
and
jg
push
xchg
mov
lcall
lock
and
ja
sub
repnz
push
add
mov
mov
aam
and
dec
fisttpll
or
inc
test
aam
popf
mov
push
mov
push
jno
push
mov
push
fscale
pop
xchg
jle
mov
mov
xchg
je
fstpl
jle
xor
sbb
or
mov
sub
incl
pop
add
add
jmp
fdivs
push
popa
add
ret
mov
in
inc
aaa
std
sbb
and
jp
mov
std
xor
in
jae
cmp
mov
inc
fs
aas
repz
xchg
int
jb
mov
lret
inc
sbb
hlt
adc
xor
pop
push
push
daa
or
enter
shlb
mov
jns
xor
in
adc
adc
xor
inc
pushf
push
nop
aad
lock
scas
in
mov
push
mov
loope
out
add
cmp
inc
sub
fisttps
add
push
loop
inc
xchg
push
inc
lcall
cmc
push
dec
xchg
pop
pop
cli
icebp
mov
insb
mov
leave
lods
mov
jne
xchg
das
inc
mov
mov
shrl
inc
dec
pop
adc
lock
je
xchg
xor
loop
mov
lods
push
xor
cmp
cmp
je
divb
idivl
and
test
mov
mov
das
adc
andl
ret
dec
popf
aaa
ret
lahf
push
xchg
xchg
insb
and
mov
out
cmp
loope
mov
ljmp
pop
cmp
cli
pop
sub
mov
test
xor
test
stos
dec
cmp
add
lods
out
test
inc
imul
addb
push
pop
jmp
ds
mov
pop
daa
sbbl
shrl
sub
test
mov
fs
dec
cld
in
out
mov
xchg
jle
push
cltd
jge
jge
push
dec
movsl
mov
movsl
mov
xlat
adcb
mov
mov
jmp
mov
adc
sbb
fs
inc
mov
repnz
dec
or
ss
insb
fdivl
std
sar
sbb
xor
sbb
gs
mov
clc
pop
and
mov
push
out
jb
inc
and
push
dec
xchg
sti
dec
sbb
push
cmp
in
dec
push
dec
jge
sbb
jo
jl
insl
push
imul
push
pop
pop
jbe
ficoml
mov
pop
clc
loopne
xchg
aaa
stos
mov
inc
xor
mov
jnp
aad
push
pop
aas
data16
cli
jp
fmulp
nop
jge
xorw
lds
sub
adc
test
loop
rcll
test
jle
push
loope
pop
jp
xchg
pop
or
cmp
in
fmul
call
xor
sbb
mov
mov
mov
xor
push
mov
or
xor
das
push
orb
mov
rcrb
xchg
movsb
hlt
pop
shlb
and
mov
mov
sbb
leave
mov
or
and
adc
xor
arpl
jno
mov
inc
out
cmp
dec
rclb
mov
fisttpl
fdivrl
xchg
pop
add
ficoml
lock
push
or
imul
mov
hlt
iret
sub
push
ret
arpl
inc
and
inc
arpl
fstps
jne
pop
push
pop
push
aaa
inc
cmp
nop
flds
mov
int3
adc
inc
xchg
aam
mov
mov
and
rcrb
aas
mov
adc
movsb
jle
and
js
jg
pop
in
lods
arpl
fidivrs
xchg
xor
andb
test
push
add
adc
cmp
cld
or
add
int3
xlat
cmpsl
pop
mov
xchg
pop
pop
rcl
lea
lods
fs
cmp
or
loop
sub
xor
lock
rcll
mov
cmpsb
loopne
xor
int3
test
loop
test
inc
cltd
je
sub
loope
sub
in
out
mov
popf
stos
outsb
jnp
or
pop
pop
ret
mov
and
xlat
ss
mov
pusha
and
and
test
lock
test
xchg
add
push
mov
or
xchg
mov
int
cwtl
mov
jmp
mov
mov
jns
in
adc
adc
lock
mov
in
or
mov
fwait
adc
je
into
insb
es
divl
add
push
mov
mov
mov
push
aad
mov
or
push
dec
sbb
stos
nop
jnp
mov
adc
sbb
xchg
lock
test
in
into
or
adc
mov
int
imul
scas
out
inc
cmp
movsb
add
push
inc
xor
dec
dec
xor
cmp
and
scas
lahf
into
adc
push
dec
out
xchg
inc
add
xchg
lea
push
dec
loopne
mov
sti
and
add
xlat
jb
pop
push
arpl
inc
jb
loope
mov
mov
fcomp
add
xchg
pop
xor
pop
pop
sub
pop
aas
loop
jg
lcall
inc
pop
loopne
pop
push
push
jp
mov
pop
popa
hlt
pop
sar
push
fildl
imul
xchg
loopne
cmp
scas
nop
adc
fists
jo
inc
inc
rolb
mov
inc
mov
cmp
out
shr
dec
fs
dec
sti
jge
inc
es
or
ret
aaa
out
arpl
xorl
sub
jae
fucomip
int
mov
rorb
insb
xchg
clc
mov
andl
sub
aam
out
fnstsw
pop
dec
cmp
in
fcmovu
in
es
icebp
or
or
add
push
inc
cmp
test
and
ret
fimuls
pop
ja
fwait
in
call
jo
mov
fistl
sbb
je
stos
clc
iret
adc
sbb
xchg
pop
sbb
filds
or
in
addr16
lret
cmp
addr16
mov
jno
bound
or
sub
lret
mov
call
repnz
arpl
mov
popa
cmpb
lock
mov
and
into
adc
jmp
fstpt
push
pop
fs
push
jmp
xlat
dec
dec
arpl
jae
mov
icebp
inc
mov
sub
jno
pop
pop
pushf
push
sub
xchg
dec
jecxz
imul
nop
rcl
push
lods
fucomp
in
dec
fnstenv
push
mov
mov
or
mov
inc
push
test
mov
jnp
xchg
mov
adc
rcr
fstps
mov
xor
clc
popf
cmp
pop
and
push
into
pushf
les
xchg
jbe
mov
insl
fidivrs
mov
scas
aaa
cmp
dec
js
jae
mov
addb
das
lahf
aaa
imul
xor
outsl
mov
inc
mov
inc
dec
cmpsl
dec
jp
hlt
lret
fdivp
std
hlt
scas
add
pop
pop
mov
aaa
and
scas
lods
in
nop
mov
fadd
xchg
inc
or
add
dec
or
icebp
mov
add
hlt
push
adc
mov
in
dec
pop
sbb
xchg
push
mov
add
jmp
sahf
daa
fnstenv
adc
aaa
sbb
daa
cmp
jge
movsw
mov
mov
inc
fmuls
pop
adc
adc
idivl
int
sub
mov
stos
ret
mov
adc
jne
jl
xor
and
mov
loop
jae
add
ljmp
and
rcrb
lret
leave
out
jbe
jns
xor
fstpt
nop
lret
bound
mov
cld
pxor
adc
pop
push
das
orl
push
jns
pop
cwtl
mov
dec
insb
mov
mov
movsl
xchg
cmp
icebp
scas
and
ss
or
xor
jns
sub
subl
and
mov
jae
add
push
lds
jae
adc
and
test
xor
pop
popf
mov
out
jno
cwtl
pop
add
testl
out
pop
into
in
cwtl
arpl
inc
movsl
or
add
dec
addr16
xor
leave
jmp
sub
sbb
dec
jae
in
xchg
cmp
jne
aad
daa
aam
arpl
fstl
mov
stos
or
jge
sbb
test
push
lret
push
mov
popf
int
cmc
outsl
rclb
popf
mov
sbb
mov
jae
mov
adc
mov
sbb
popa
inc
mov
mov
add
lcall
mov
data16
subb
mov
pusha
lcallw
lret
sbb
lret
iret
test
push
loope
mov
mov
xor
imul
jl
jno
pushf
mov
mov
fwait
sub
cmp
aad
lahf
dec
xor
ss
pop
inc
call
imul
dec
and
adc
sbb
jne
dec
scas
add
push
mov
push
xor
cmpsb
addl
and
add
repz
jl
xor
push
testb
sahf
push
or
in
push
sub
cs
xchg
sub
sbb
scas
test
push
adc
mov
dec
cwtl
xor
cmp
fldl
mov
mov
ss
add
ss
xor
int
jno
mov
mov
fs
fldenv
test
and
xor
aaa
dec
call
xchg
cmp
sbb
push
icebp
popa
or
pop
sbb
arpl
push
pop
push
sti
incb
loopne
fdivs
mov
jle
ds
cmc
sub
xor
sti
jbe
mov
cwtl
mov
mov
add
leave
jg
xor
nop
jbe
in
sub
mov
outsl
leave
push
lcall
or
cmp
add
cli
cmpsb
das
push
and
jno
xlat
rcl
sbb
jae
stos
outsb
cmp
adc
pusha
in
or
in
or
xorl
or
add
jbe
add
orl
sub
and
jl
xchg
pushaw
mov
aaa
pop
inc
js
mov
cmp
outsl
dec
or
outsb
dec
inc
lea
inc
dec
test
cmp
stos
sar
push
shll
xchg
xor
testl
and
aad
mov
or
test
js
fidivrs
pop
dec
outsl
add
pop
popf
shrl
aas
cld
xor
ljmp
push
sbb
sub
pop
leave
mov
sub
testl
push
or
sub
inc
xor
sbb
adc
std
dec
mov
sbb
push
push
xor
mov
aad
fmull
lds
stos
xchg
xorb
loope
imul
add
popf
cmp
div
push
in
ss
mov
aam
inc
fwait
jecxz
pop
cmpsl
pushf
fwait
testl
jne
gs
imul
int
push
fcompl
int
in
jg
and
icebp
sub
mov
or
lods
and
or
jmp
leave
rolb
pusha
mov
lret
repz
inc
nop
in
mov
adc
push
inc
or
adc
out
cmpsl
xchg
push
out
pop
rcrb
xlat
inc
aad
pop
adc
fisubl
add
std
mov
lret
dec
mov
mov
mov
pop
leave
jmp
jge
mov
dec
push
icebp
lock
mov
sub
xchg
xorl
scas
mov
stos
inc
jge
fstpt
das
dec
es
inc
inc
pop
or
cmp
mov
xchg
pop
aad
push
loope
sbb
pop
xor
jno
inc
sahf
adc
sti
pop
mov
pop
add
xor
call
repz
movsl
rorb
dec
js
cmp
sarl
je
cmp
push
ficompl
mov
push
lods
imul
lods
in
cmc
out
mov
xor
xor
mov
and
fnsave
aam
or
stos
ficomps
xor
leave
outsb
sub
xor
sti
cmp
xchg
xlat
int
adc
pop
or
iret
pop
decl
dec
pop
sbb
mov
pushf
sbb
adc
or
clc
stc
dec
xor
ret
in
push
test
addr16
dec
pop
pop
ret
inc
movsl
xchg
cmp
rorb
fwait
mov
cli
stos
movsl
xor
adc
mov
push
in
xchg
call
adc
outsl
jmp
mov
nop
cmpps
cmp
inc
adc
xor
dec
dec
andb
rclb
sbb
clc
mov
jg
mov
sbb
push
dec
adc
pop
inc
call
mov
jl
ret
rorb
mov
nop
add
mov
jne
adc
out
xchg
add
mov
mov
imul
push
out
loope
sbb
and
dec
jb
lds
fstps
test
mov
sti
mov
mov
mov
mov
repz
dec
cld
pop
out
dec
bound
adc
clc
jne
or
je
lahf
sahf
mov
fwait
jge
mov
jae
sti
aad
lock
psubsw
mov
out
rcll
popa
fldz
sbb
sbb
sti
into
mov
jnp
mov
jnp
lea
jne
mov
hlt
roll
add
insb
bnd
and
addr16
xchg
or
fsub
xchg
out
fimuls
xchg
lret
xor
xchg
lea
sub
pusha
lret
aam
pusha
outsl
mov
fwait
xor
cli
lods
scas
and
js
mov
mov
pop
sub
jnp
mov
je
pop
mov
iret
jae
out
mov
push
les
mov
les
sahf
iret
aad
aam
shlb
adc
pop
ret
mov
mov
xchg
mov
cmp
test
xchg
loopne
lret
cli
icebp
jb
dec
bound
test
mov
repz
pop
adc
jnp
mov
xor
cmpsl
add
nop
ljmp
cmp
inc
push
fldl
cwtl
xchg
movsl
pop
clc
test
pop
leave
cmc
fmull
mov
mov
inc
cmp
insl
out
out
sbb
shrb
push
lahf
loopne
add
inc
fs
fsub
pushf
xchg
and
leave
add
cmp
jae
in
popa
mov
pusha
movsb
fsubrp
pop
or
sbb
loope
lock
aam
dec
lds
jmp
mov
inc
dec
enter
repnz
cmpl
mov
sti
ret
movsb
addr16
mov
push
lret
imul
cwtl
aam
dec
cld
int
imul
imul
xor
insl
mov
test
fs
test
pop
xor
repnz
mov
inc
fstp
icebp
jmp
rorb
mov
sub
ds
inc
fsubrl
and
fcoml
das
pop
loopne
fmuls
daa
pushf
leave
test
jb
pusha
negl
mov
adc
es
cli
in
adc
test
fidivs
mov
lahf
data16
iret
mov
sahf
shrl
mov
push
out
rorl
lods
push
mov
mov
aas
mov
rcl
add
loopne
mov
ja
mov
movsl
sub
cmp
insb
jge
in
xrelease
mov
test
mov
lahf
jnp
xor
jae
ret
stc
dec
xchg
add
ljmp
jmp
cmovbe
dec
add
stos
inc
dec
ret
pusha
cmpsb
adc
inc
shll
jl
lret
mov
sar
dec
scas
arpl
outsl
mov
push
out
jg
fdivs
aad
jp
dec
test
insl
jecxz
int
andl
rorb
jle
inc
jge
or
jle
adc
or
sbbl
in
jmp
clc
add
fs
push
hlt
rcrl
sbb
aaa
adc
rcll
mov
mov
pop
enter
cmpsl
pop
inc
xchg
add
lods
sub
mov
pop
push
pop
das
insb
test
es
out
loopne
shll
mov
or
pop
ret
pop
popf
repz
push
ljmp
jge
dec
cwtl
rcrb
pusha
cltd
cmpsb
xor
insb
int
lret
outsb
ja
ficomps
adcl
loopne
frstor
loope
stc
inc
incl
imul
cld
pushf
push
sahf
pusha
dec
lods
cmp
fiaddl
movsl
fadd
xor
lds
mov
inc
xchg
in
xchg
cmp
jb
lods
mov
test
adc
popa
push
nop
into
add
xchg
jle
test
add
push
enter
pop
lock
push
sub
sbb
xchg
inc
lods
ss
mov
jecxz
sahf
cmp
xor
test
sbb
jbe
imul
je
adc
inc
test
dec
ss
out
mov
nop
jl
inc
mov
lret
mov
into
adc
adc
mov
aad
popa
leave
cmc
mov
mov
fiaddl
imul
daa
inc
xor
out
xor
loopne
pushl
jmp
stc
fs
mov
aas
cmp
sbb
mov
mov
insl
adc
mov
xchg
push
mov
xchg
push
mov
lods
bound
adc
xchg
or
push
jnp
xor
cmp
mov
inc
jb
imul
adc
fldenv
push
sub
dec
and
add
daa
aam
mov
add
pusha
pop
push
js
cs
xor
sub
xor
mov
mov
ret
push
pop
divb
movsl
shlb
jne
addl
sbb
in
repnz
mov
lock
addr16
jno
sbb
pop
push
out
scas
jb
sbb
dec
inc
inc
push
or
icebp
xor
push
jp
inc
test
sahf
adc
negb
push
xlat
dec
ret
dec
adc
xor
mov
decb
jne
jae
xlat
jae
jg
or
sbb
jg
call
push
pushf
mov
mov
xor
into
lock
cmp
xchg
sbb
sbb
or
jle
stos
das
in
insl
ds
outsl
loop
xchg
sub
sub
cmpsl
and
lock
lcall
repnz
xor
ja
pop
stos
mov
mov
pop
rolb
dec
xor
imul
movsb
ret
pusha
add
div
ljmp
push
jnp
test
cmpsb
xor
push
pusha
mov
add
mov
mov
rcrb
lds
or
pop
lods
scas
data16
push
sub
mov
jge
fildll
mov
push
xchg
mov
fidivl
pop
ds
je
outsl
push
fildll
mov
cmpsb
mov
adc
xor
cmp
loopne
ret
nop
aaa
add
movsl
scas
mov
aas
jae
popa
xlat
jne
rcll
adc
sub
loop
bound
push
dec
xor
rcll
inc
aaa
fcoml
loope
insl
sub
or
jmp
dec
ss
test
xlat
daa
in
rorb
test
sahf
jl
popf
icebp
xchg
outsb
add
xchg
ljmp
mov
xchg
push
sbb
sbb
xor
mov
movsl
out
out
ds
mov
or
jb
dec
jne
mov
enter
iret
shrb
xorb
mov
inc
rclb
popf
pop
rorl
push
iret
pop
mov
xchg
imul
jbe
cmpsb
mov
or
mov
test
mov
mov
sahf
mov
scas
ret
ja
mov
daa
xor
mov
xchg
dec
xchg
sub
imul
lsl
dec
mov
movsl
adc
mov
mov
push
mov
adc
cmp
mov
cld
sub
cmp
sbb
andl
lods
push
int
cs
popf
adc
repz
in
xchg
mov
mov
dec
cmp
clc
divl
popa
jo
jne
aaa
loop
mov
mov
or
cmc
cltd
add
dec
jecxz
scas
lea
mov
push
jnp
test
fwait
sarb
inc
pop
mov
cmp
push
stos
rcr
imull
inc
mov
lcall
sub
ret
addr16
push
sbb
fidivrl
adc
push
adc
leave
adc
add
lods
add
inc
shlb
cmp
and
inc
out
cmp
xchg
pop
pushf
xor
je
or
js
xor
dec
lods
mov
fs
scas
cld
cmp
ficoml
sbb
cmp
es
arpl
test
sbb
push
stos
inc
cmc
sub
or
movsl
mov
das
mov
insl
nop
xchg
ja
jbe
leave
pop
fwait
jmp
adc
mov
insl
push
stos
inc
lret
rorb
lcall
cltd
sbb
fidivrs
xor
movsb
nop
inc
add
cmpsb
in
std
push
popa
push
inc
sbb
pop
sti
push
ds
movsb
lret
adc
mov
push
std
pop
cmp
inc
sahf
jl
mov
and
cmpsl
popf
inc
mov
outsb
out
test
nop
push
xchg
or
mov
ret
mov
xchg
mov
add
sub
insl
push
push
inc
scas
fstpt
aam
adc
xor
fwait
dec
push
test
xor
mov
adc
pushaw
test
pop
and
pop
iret
enter
aaa
pop
or
xor
xor
adc
inc
add
xchg
mov
scas
iret
sub
adc
stos
test
pop
in
sbb
insb
jg
js
aaa
or
icebp
daa
js
sbb
xchg
inc
rcll
mov
jecxz
sbb
pop
xor
mov
mov
mov
pop
in
inc
outsb
repz
test
mov
xchg
loopne
dec
in
cwtl
jp
mov
lea
mov
dec
dec
fwait
cwtl
jb
or
or
xchg
fists
icebp
lret
fs
adc
xor
cmpsl
repnz
inc
adc
scas
jp
mov
in
inc
in
mov
insb
cmpsl
sub
in
in
sbb
and
or
scas
in
mov
sarb
jnp
cmc
xor
lock
xchg
pop
clc
dec
xchg
jmp
test
mov
add
hlt
test
fs
sub
jae
adc
mov
lea
jle
std
add
scas
negl
ret
sbb
inc
lret
mov
aad
adc
movb
test
or
outsb
push
lahf
inc
jmp
push
sbb
or
scas
mov
sub
push
adc
push
xchg
int
or
aad
test
mov
imul
call
xchg
mov
pop
lods
lcall
mov
aad
roll
ret
adc
test
push
mov
popw
addl
xorl
imul
adc
pop
cmp
xor
push
or
pusha
dec
fwait
lods
repnz
xor
loop
sbb
loopne,pn
or
add
sub
push
pushf
cwtl
les
lret
mov
mulb
mov
pop
or
or
addr16
jno
in
inc
pop
xchg
shll
addr16
mov
jmp
mov
nop
lock
push
sarl
dec
xchg
loop
mov
mov
dec
jge
jb
std
xor
jle
add
dec
cmc
mov
mov
lcall
mov
push
sbbl
xor
leave
mov
jl
fwait
int
movsl
sbb
adc
xchg
inc
jg
insb
xor
mov
std
inc
sub
mov
rcll
or
out
add
ret
sub
pop
pop
xor
out
xchg
sbb
push
jge
pushf
xor
and
push
push
std
cltd
cmc
add
imul
cli
scas
pop
add
cmp
mov
mov
test
mov
stos
jl
negl
repz
jne
sbb
pop
addr16
mov
out
xchg
push
adc
sbb
lea
mov
inc
insb
stc
stos
aas
adc
ret
cmp
test
rcr
rcr
pop
aaa
sbb
ds
cli
mov
fwait
stc
jecxz
xchg
aam
fidivrs
mov
sbb
data16
push
inc
clc
sbb
add
pop
pop
sbb
dec
and
mov
insb
inc
mov
mov
mov
sub
pop
in
jl
mov
xchg
xchg
addr16
xor
lods
and
sti
out
push
imulb
dec
test
loop
sub
test
mov
cli
inc
dec
inc
and
lods
popa
push
xchg
je
push
out
add
lea
jmp
mov
jp
sti
mov
das
mov
js
add
incl
adc
sub
or
insl
lret
dec
mov
jl
sti
test
mov
and
jne
pop
das
bnd
adc
lcall
pop
pop
dec
mov
or
add
jp
fwait
xchg
push
pop
lea
jle
fwait
jne
xchg
cmp
lahf
shll
pop
enter
pop
cmpsl
in
lret
js
pop
pop
ljmp
add
cmpsb
ja
mov
cld
scas
rcrb
arpl
iret
jno
xchg
aas
std
push
testl
lds
loope
mov
cli
sub
cmp
cmpsl
jns
inc
sahf
repnz
add
mov
push
xor
push
aad
mov
lea
js
cmc
cmpsb
punpckhwd
das
add
insb
or
hlt
xor
sub
mov
test
adc
push
jge
cld
addl
push
test
inc
push
jbe
pushf
mov
xlat
out
mov
push
and
popa
mov
dec
pop
std
xor
pop
subb
sbb
addr16
gs
mov
adc
push
imul
pusha
and
jae
push
aas
ficoms
sub
mull
repz
mov
sub
cs
mov
popa
inc
mov
aaa
jge
or
mov
test
mov
out
mov
mov
aaa
inc
mov
dec
pop
mov
stos
cmp
stc
mov
pushf
cmp
int
loope
ljmp
pop
sub
mov
call
lcall
dec
lcall
xor
stc
ds
xchg
insl
fsubrl
push
fildll
rcrb
xor
pop
sub
or
mov
insb
sbb
sub
in
mov
pop
push
dec
cmovo
push
mov
dec
fsubr
das
lock
xchg
sub
or
jle
stc
adc
mov
fwait
js
xor
mov
or
xchg
mov
pop
ja
pop
jecxz
pop
in
dec
es
lods
cltd
pop
sub
cwtl
bound
ret
xor
fisttpll
ljmp
inc
cmp
inc
lret
ret
xchg
push
inc
das
imul
outsb
mov
lods
shll
mov
push
xor
scas
mov
inc
shlb
insb
push
add
push
ror
dec
loope
in
filds
mov
rcl
inc
adc
sub
inc
scas
mov
neg
jl
jmp
sub
mov
mov
rorl
fnsave
out
aam
pop
xchg
mov
sbb
push
cmp
mov
lret
lods
dec
sahf
mov
enter
imul
add
and
jge
insl
dec
mov
mov
mov
stos
adc
add
ljmp
inc
loop
popa
lcall
aad
push
pop
or
arpl
gs
mov
into
cmpsl
stos
mov
dec
fcmovnbe
adc
leave
dec
aas
push
adcb
and
xor
outsl
jmp
or
inc
sub
push
sub
divb
fcomps
cltd
stos
aad
dec
inc
lods
fiadds
fs
mov
jp
mov
stos
mov
push
sbb
push
or
test
pop
imul
stos
fwait
in
adc
lcall
xor
push
sub
jae
jne
popa
pop
cmp
cs
add
pop
or
ljmp
xchg
adc
sub
pop
fmulp
leave
je
repz
ror
loope
adc
or
adc
jnp
scas
push
cmp
jne
jno
das
divb
mov
push
lods
pop
push
ss
cmp
scas
mov
or
push
push
and
arpl
push
xchg
in
lods
pop
xchg
cmp
push
push
loopne
insl
mov
push
push
mov
rcr
lret
mov
ret
sti
push
mov
pop
aaa
inc
dec
inc
sarl
mov
lret
jl
in
cmp
add
pop
decb
push
dec
fldt
xchg
neg
or
jnp
pop
test
add
xor
jg
mov
fisubrs
mov
ficoms
jmp
jg
loop
push
mov
push
lea
adc
arpl
stos
ret
push
out
ret
xor
xchg
in
sub
js
mov
not
lds
dec
mov
jae
hlt
pop
push
and
inc
lahf
inc
add
rcl
aas
mov
inc
aam
aaa
arpl
cmp
cmp
aas
ret
inc
les
ret
sbb
iret
or
addr16
or
pop
xchg
mov
stc
push
imul
test
ja
lods
mov
mov
adc
pop
jg
pop
push
push
es
jo
sbb
adc
sahf
shrb
jae
out
jge
and
add
scas
out
popa
js
gs
and
mov
ror
adc
pop
cmp
outsl
lock
jg
jo
shl
int3
iret
rorl
outsl
cwtl
jno
pushf
aaa
dec
pop
xchg
pop
pop
arpl
adc
jnp
in
adc
out
jge
nop
xchg
pop
fimuls
addb
inc
mov
mov
dec
loopne
hlt
lds
and
xor
cmp
leave
mov
aam
mov
test
loope
adc
fwait
jnp
andb
mov
roll
xchg
stos
adc
jp
call
mov
push
mov
inc
fldpi
mov
repz
jecxz
imul
lret
mov
lds
jne
enter
pop
std
mov
movsb
cld
pop
cwtl
fcoml
jo
push
cmp
outsb
aas
fwait
mov
jmp
pushf
xchg
out
jo
and
xchg
cli
dec
rolb
out
or
sbb
xchg
xor
inc
jmp
sti
inc
sbb
cmp
enter
push
out
sub
cltd
mov
mov
xchg
or
pop
mov
pop
ret
mov
sub
xchg
pop
ret
in
cmp
jle
mov
mov
dec
xchg
jno
mov
addl
sbb
int3
and
inc
push
cmp
mov
pop
fcmovnu
popa
mov
and
cmp
push
or
add
push
lea
mov
movsl
dec
insb
xchg
adc
mov
mov
adc
clc
mov
adc
inc
or
and
mov
rcll
hlt
in
jp
push
jne
outsb
adcb
jnp
hlt
aaa
cmp
sahf
ret
filds
push
pop
scas
outsb
lret
fcos
pop
call
or
fdiv
xor
jae
push
in
fiaddl
cmp
dec
pop
notl
or
outsl
xor
jmp
popf
sbb
andb
test
dec
sub
mov
ret
mov
loopne
jnp
mov
int3
dec
ljmp
lods
rcll
and
or
mov
out
mov
jae
iret
bound
dec
imul
adc
imul
add
daa
out
clc
lahf
out
xor
mov
stos
or
cltd
lods
jno
ret
fildl
int3
mov
inc
dec
loope
outsb
cmpsl
dec
cmpsb
sbb
or
scas
push
lds
insl
dec
cmpl
lret
ret
dec
inc
sub
aad
data16
js
inc
cld
ds
shlb
arpl
jecxz
repnz
dec
clc
clc
xchg
into
aad
lea
inc
inc
sahf
lods
cld
sub
mov
inc
and
xchg
outsl
notb
mov
orb
scas
fnsave
popa
xor
ja
sub
loopne
frstor
cmc
test
pop
mov
addr16
cmc
mov
enter
iret
push
cld
stos
ret
xchg
lods
and
out
jl
add
cmp
lret
sub
add
ss
and
out
xchg
sub
mov
pop
loopne
inc
orb
imul
dec
cmp
aaa
push
xchg
daa
aam
cmpsl
push
daa
dec
dec
mov
mov
adc
movlps
ja
jp
push
stos
loopne
inc
jbe
arpl
mov
std
mov
adc
and
push
stos
push
cli
cmp
in
sub
xchg
xchg
push
leave
pop
fistl
push
sarl
aam
out
xor
mov
xchg
stos
mov
test
cs
pop
cmpb
test
adc
inc
jns
pusha
cmp
add
pop
insl
in
xchg
xchg
bound
fdiv
push
mov
jbe
mov
ja
sub
lcall
pop
fsubrs
sar
or
mov
scas
dec
lds
gs
in
mov
push
push
call
rclb
sbb
pop
loope
outsl
and
or
les
inc
mov
mov
xorb
ja
mov
push
sti
cld
adc
mov
jnp
lret
ret
clc
sub
add
lea
inc
cmp
adcl
jmp
and
sahf
sbb
stc
es
cmp
jb
in
fisubs
cmp
cmp
cmc
rcrl
lcall
test
test
fildll
xchg
js,pt
push
xlat
xorl
and
cli
sbb
sbb
lods
mov
cltd
push
lret
ja
clc
out
mov
jecxz
aas
pop
ret
inc
fidivl
pushw
sub
out
imul
loop
es
aad
sub
push
ss
lock
sbb
push
rcl
cmc
or
sub
test
and
sahf
roll
mov
pop
xor
loop
xlat
jae
stos
add
add
popf
hlt
pushf
hlt
into
sar
inc
das
push
mov
mov
repnz
ds
jno
xchg
inc
mov
dec
xchg
cmc
add
mov
mov
and
fwait
mov
xchg
es
add
insl
mov
ficompl
ja
pop
lea
mov
iret
push
push
in
or
mov
scas
lahf
les
jle
xchg
incb
imul
add
mov
call
mov
jp
notb
movsb
inc
adc
cmpsb
testb
sub
shl
ljmp
cmp
pop
mov
dec
sbb
add
ljmp
sub
push
cli
test
mov
sub
loopne
or
imul
mov
lahf
bnd
xchg
mov
or
fsts
inc
hlt
lret
cmp
xor
mov
adc
mov
test
pop
cwtl
xchg
ja
int
dec
in
mov
aam
roll
jmp
loopne
arpl
add
pop
test
lcall
push
jnp
and
push
fwait
push
pop
aas
mov
subl
shr
lret
adc
pop
or
and
cmp
daa
faddl
xchg
inc
xchg
push
or
jg
mov
sub
ljmp
pushf
inc
fistpll
lea
jle
pop
inc
stos
sub
mov
aaa
out
mov
imul
lods
adc
mov
fcomps
jmp
testb
mull
out
xchg
push
mull
sub
mov
and
stos
ret
mov
or
mov
mov
mov
nop
mov
add
cli
sbb
and
mov
hlt
test
sub
jg
out
out
test
stc
mov
push
adc
mov
sbb
incl
or
xor
xor
mov
jge
inc
inc
mov
mov
fisubrl
mov
movsl
and
mov
sbb
dec
adc
fs
pop
pop
adc
out
sub
and
mov
fldenv
push
daa
jne
inc
enter
xlat
cwtl
mov
adc
mull
rorb
dec
inc
insl
in
push
inc
and
cli
insb
inc
outsb
pop
inc
push
or
pop
push
inc
lods
jne
xchg
sar
cmpsb
fwait
push
cmc
mov
jge
dec
xor
int
out
int
outsl
sub
rcll
xor
cmpsb
roll
jg
outsl
mov
push
test
repz
adc
pop
xchg
cs
cltd
xor
dec
dec
cmp
icebp
rcr
jo
or
dec
cmp
es
adc
shll
mov
rcr
ror
iret
cmp
daa
rcrl
rol
pop
sbb
orl
mov
idiv
inc
adc
jmp
aaa
mul
mov
inc
cmp
mov
xchg
adc
fisttps
mov
push
xchg
dec
sbb
icebp
mov
sahf
push
divl
dec
cmpsb
push
add
dec
adc
movsl
jge
jae
dec
int
test
stos
xor
insb
adcl
adc
test
inc
hlt
adc
inc
shl
jns
js
movsb
loopne
sbb
push
call
sbb
insb
adc
xchg
sub
xchg
out
mov
repz
xchg
jne
mov
lods
daa
and
rcll
sets
lret
movsl
andl
fimull
loope
mov
test
orl
sub
pushf
fidivs
loopne
scas
add
xchg
add
mov
retw
loope
lahf
test
insb
and
mov
adc
movsb
int
push
insb
jp
add
jl
mov
push
call
mov
mov
insb
outsb
movsb
mov
lahf
pop
adc
scas
jl
int
add
and
out
xchg
pop
outsl
and
ljmp
pop
out
pusha
cmp
or
and
aas
push
add
and
andb
and
or
xchg
movsl
in
add
and
xchg
sbb
adc
sub
les
inc
xchg
stos
mov
push
es
sub
popa
pop
mov
xchg
imul
sub
jmp
jle
mov
mov
mov
inc
into
xor
test
repz
inc
pop
mov
pop
test
jge
or
lretw
add
or
or
mov
das
rclb
sbb
sbb
jno
inc
cmp
test
cmp
lcall
and
pushf
hlt
pop
dec
push
cld
js
pushf
inc
in
inc
mov
daa
lods
hlt
cld
dec
insb
rcll
adc
inc
pop
xchg
xchg
inc
cwtl
cs
cmp
inc
xchg
sbb
clc
xor
adc
lret
push
push
int3
cmp
pop
and
lods
cli
enter
imul
leave
lea
imul
shlb
stos
mov
mov
push
adc
cmp
sbb
mov
fnstsw
dec
hlt
aad
in
inc
nop
pop
insl
mov
in
loop
fstp
mov
cmpsb
outsl
inc
ja
adc
cmpsl
mov
dec
mov
xor
xor
and
pop
pop
int
mov
mov
notl
push
cli
sub
sub
adc
mov
lret
mov
xchg
jge
shlb
ret
jle
fisubrl
dec
add
jns
pop
scas
imul
sti
jbe
mov
mov
call
add
iret
cmp
cmp
aam
sbb
inc
inc
mov
mov
jno
jbe
xor
push
sbb
add
cld
jl
incl
lret
cmp
rcl
in
cmp
test
es
aad
dec
mov
dec
test
inc
mov
mov
roll
data16
call
mov
mov
fcompl
cmp
out
lods
rol
and
pop
adc
test
roll
jnp
mov
inc
jge
mov
mov
insl
mov
lret
jae
push
faddl
movsb
cmp
ds
cmpsb
and
and
cld
aam
mov
aam
gs
add
push
lret
imull
shll
test
jns
in
lods
ljmp
ljmp
mull
sbb
repnz
clc
push
sub
dec
pop
std
adc
ficompl
scas
jle
in
sub
sbb
jg
testl
test
jb
jg
lret
leave
mov
jo
jge
mov
enter
lret
ljmp
pop
int3
sub
jnp
mov
and
mov
jmp
lret
lahf
fld
sub
inc
jb
mov
or
test
or
dec
pop
jg
aaa
mov
sbb
mov
cmc
cmp
test
sbb
imul
lahf
outsl
xor
push
jmp
jle
lds
pushf
cmp
sbb
add
mov
jge
pop
in
and
inc
pusha
es
adc
aas
and
sub
enter
xor
cmp
sbb
pop
cwtl
ffreep
movsl
popf
dec
push
aad
ret
and
jae
jb
cmp
dec
insb
aad
mov
mov
addl
xor
add
call
and
aaa
outsb
ret
dec
loope
leave
and
xchg
mov
sbb
pop
mov
pop
cmp
scas
addl
sbb
fistpll
jne
fstp
mov
sub
mov
ret
cmp
repz
pop
mov
adc
add
inc
add
clc
mov
aaa
sbb
test
and
xor
call
mov
lahf
jb
mov
roll
leave
adc
lcall
inc
das
and
lods
nop
dec
lahf
cmc
fnstenv
cmp
lahf
xor
xchg
xchg
in
outsl
daa
jg
sub
cli
ret
push
pushf
push
sub
xor
test
int3
cmp
mov
sub
xchg
xchg
pop
dec
outsl
test
sti
pop
push
pop
lds
subl
pop
mov
mov
push
xor
int3
fwait
or
ret
sbb
out
lret
mov
ret
movsb
mov
ss
xchg
mov
cmp
cmpsb
pop
shrl
in
and
xchg
out
imul
mov
mov
or
push
movsl
lds
xchg
das
jg
mov
dec
ret
mov
or
cwtl
cmp
test
push
lds
sbb
push
add
repnz
jp
rcll
data16
into
iret
cmp
push
xchg
pop
in
dec
in
daa
pushf
js
mov
daa
cmpsb
add
mov
stc
push
mov
test
xchg
sub
inc
inc
bswap
outsl
push
mov
ljmp
pop
stos
cli
push
cmpsl
sbb
mov
hlt
xor
and
push
or
push
mov
and
shr
insb
pop
mov
ja
lcall
out
call
gs
add
ds
dec
sbb
push
fildll
insb
mov
push
adc
mov
jns
mov
xlat
pop
xlat
adc
cmp
call
arpl
or
sbb
inc
cld
add
pop
mov
fstpl
pop
dec
hlt
das
out
lock
and
inc
shll
sub
jno
adc
loopne
xor
jnp
xor
add
scas
inc
insl
xor
jnp
sbb
dec
adc
mov
xchg
or
jne
lock
dec
sbb
cmp
out
rcrl
ja
andb
mov
popf
push
std
sub
inc
cltd
dec
mov
stos
pusha
mov
enter
xchg
mov
insl
xchg
sub
popf
jg
sti
jmp
dec
or
dec
sahf
stos
notl
or
cs
mov
sub
pop
push
inc
js
bound
mov
cmp
cmpsb
mov
push
insl
jle
push
out
call
ja
fs
int
pop
lds
inc
inc
fwait
mov
push
and
mov
lea
test
xchg
mov
or
sub
mov
push
cmp
mull
xlat
inc
divb
ret
pop
cld
pop
sbb
adc
pop
dec
pushf
sahf
push
xchg
inc
enter
mov
jno
cmp
ljmp
jae
inc
mov
inc
or
add
push
dec
or
fldenv
xchg
mov
nop
inc
push
mov
mov
es
icebp
insl
xchg
pop
jecxz
ljmp
stos
xchg
xor
ja
sub
stc
arpl
lret
js
adc
sub
daa
mov
dec
jnp
divl
adc
into
lret
jg
xlat
push
or
xchg
sub
mov
push
es
xchg
mov
xor
mov
cmp
dec
jl
mov
sbb
cmp
jp
shll
or
mov
adc
mov
ds
jns
push
sbb
aaa
push
push
jge
sarb
adcb
mov
xor
jmp
fldl
pop
xor
std
xchg
aam
jmp
fstl
xchg
fisttps
inc
test
cmpsl
inc
fidivrl
mov
pop
sub
mov
mov
pop
ret
imul
lods
repz
inc
xorl
xchg
daa
icebp
data16
adc
dec
fimull
fs
popa
neg
sub
and
stos
pop
jb
insb
push
stos
lock
insb
push
cmp
sub
test
adc
popf
xor
push
dec
jle
xor
adc
roll
movsb
xor
pop
xchg
mov
push
test
fstpt
addr16
sub
icebp
mov
aam
lods
mov
or
and
pop
imul
and
in
pop
out
sub
cmp
pushf
fs
es
sub
inc
adc
sbb
push
sbb
dec
add
loop
and
and
ret
ret
xchg
aas
aaa
mov
imulb
add
mov
aad
rcll
dec
int
push
inc
add
cwtl
jmp
fcoml
pop
cli
dec
cmpsb
add
rolb
fisubs
lods
adc
xchg
and
sbb
adcb
es
inc
out
jns
fldt
push
inc
cmp
and
push
aaa
xchg
rcrl
mov
imul
lds
leave
jae
sub
mov
int
dec
lcall
aam
movsl
lock
jge
popf
daa
outsl
imul
inc
sub
adc
mov
mov
inc
sub
cld
xchg
cmp
in
jp
mov
jb
push
insl
cmp
dec
xchg
fcompl
lods
mov
repnz
lcall
cmp
aam
icebp
sbb
mov
xor
mov
enter
pop
test
stos
jle
arpl
mov
shrb
jl
stos
aas
fisttpll
les
dec
sub
out
test
push
push
mov
fdivs
sbb
mov
pop
aam
out
lods
mov
std
adc
int3
cs
mov
xor
push
fmuls
cmp
int3
movb
mov
xlat
clc
xchg
xor
pushf
lahf
fwait
lahf
push
pop
lcall
mov
mov
shrb
dec
sbb
popa
fsubrl
mov
ret
jg
ja
or
jmp
je
add
mov
and
fistpl
out
shlb
push
mov
jb
or
xchg
shr
mov
mov
mov
ljmp
aam
std
jne
sahf
insl
lea
arpl
outsb
dec
push
inc
sub
xchg
out
jb
lret
jle
es
mov
or
out
dec
mov
xchg
mov
jno
or
mov
jo
mov
add
mov
je
xor
mov
jno
and
jbe
push
faddl
or
lods
rolb
mov
call
mov
push
cmp
fs
mov
push
sarl
xchg
dec
cmpsb
xchg
testl
or
push
push
adc
shlb
clc
mov
push
sarl
repz
push
cld
ja
jmp
push
rol
mov
adc
notl
push
mov
orl
or
and
xchg
mov
adc
shr
dec
adc
test
popf
es
mov
xor
xlat
outsl
dec
orl
pop
push
and
push
xor
test
icebp
push
out
loop
mov
fld
mov
push
sub
mov
loop
jno
mov
pop
sub
mov
sbb
ret
adcl
push
popf
pop
cmp
mov
push
addb
xchg
sub
rorl
pop
scas
clc
push
mov
adc
xchg
push
ds
pop
fidivs
add
loope
or
push
adc
sub
xor
mov
inc
sbb
or
lods
sbb
and
inc
add
mov
out
lcall
shlb
outsb
int3
sub
or
mov
stos
lock
lahf
outsb
sbb
or
push
xchg
push
cmp
imul
lods
sub
jbe
mov
enter
lret
into
rcrl
and
jmp
pusha
loopne
ret
popf
aas
sub
add
sarl
dec
mov
xchg
mov
out
rol
sahf
insb
sbb
mov
mov
popa
stc
sub
sbb
sbb
inc
popa
cmp
inc
stos
popa
les
repnz
imul
cmovg
inc
lret
and
inc
jbe
int
ja
loop
decb
andb
mov
in
test
aaa
push
inc
xor
sbb
or
pop
lods
jno
mov
or
cld
sub
mov
pop
fistl
inc
add
jne
push
loopne
pop
js
xchg
sarb
rorl
into
sti
les
testl
push
rolb
inc
mov
dec
xchg
sbbl
fwait
adc
jnp
imul
negb
adc
or
stos
mov
testb
xchg
jo
cmp
stos
sbb
imul
int3
decl
pop
sbb
sbb
rclb
jns
sbb
mov
adc
or
sahf
and
cmpsl
in
daa
add
pop
cmp
loop
mov
xchg
xlat
add
dec
std
fistl
andb
sub
xor
mov
jl
lods
dec
repnz
jge
outsb
push
adc
sbb
jl
js
pop
ret
leave
rcl
or
cmp
scas
inc
out
loopne
mov
mov
pop
dec
jp
pusha
and
jecxz
ret
test
and
out
adc
xchg
sbb
shr
lret
jo
xchg
or
mov
jnp
test
dec
and
shlb
pop
outsb
jne
dec
popf
jbe
and
int3
mov
movsb
jmp
inc
jmp
cmp
xor
push
testb
mov
xor
sub
sbb
xor
stos
mov
fldcw
lock
ljmp
test
loopne
adc
mov
adc
shll
jns
fcomi
xor
add
mov
xchg
outsl
sub
cmc
in
and
int
pop
mov
adc
mov
out
rcll
jmp
push
xchg
jp
inc
jg
cmp
in
adc
js
mov
in
lock
ret
fs
mov
pop
dec
and
in
inc
xor
repnz
mov
xor
out
mov
xchg
mov
jns
push
sar
xor
and
sub
leave
xor
cmp
lahf
call
push
jge
inc
dec
mov
data16
iret
lret
inc
push
add
mov
jo
mov
push
in
stos
pop
pushf
adc
les
testl
inc
xchg
sahf
fmull
aam
arpl
cmp
sub
sahf
cmp
test
sahf
lods
lods
sub
inc
cmc
mov
loopne
sub
inc
xchg
in
mov
xor
in
addr16
str
mov
fdivrl
xor
cwtl
sub
outsl
ljmp
loopne
dec
pusha
mov
xor
lods
lea
aaa
sbbb
adc
pop
adc
or
mov
shrl
int3
cmpsl
adc
mov
bound
mov
mov
cmp
jg
jl
rcll
xchg
mov
stos
jle
push
mov
mov
jg
jge
or
aad
and
arpl
or
jbe
mov
sbb
or
dec
leave
xor
ret
inc
sub
and
nop
das
cmpl
sbb
xchg
addr16
out
push
loopne
or
mov
int3
add
jp
xchg
pop
or
mov
or
xor
cmc
gs
pop
dec
loopne
cmp
push
ret
push
cmp
sub
int
jbe
outsl
clc
aaa
je
ret
pop
icebp
xchg
or
fwait
push
mov
call
inc
sbb
mov
mov
and
stos
sbb
or
mov
mov
shll
fwait
sub
jno
mov
sbb
lods
sbbb
or
int
shlb
stos
mov
adc
jae
mov
mov
sahf
or
push
jnp
icebp
jg
mov
je
into
dec
cwtd
or
jo
pushf
jl
pop
mov
leave
cmp
test
ficoms
aas
add
jp
in
inc
out
push
cmp
sahf
aaa
test
xchg
mov
sahf
or
cmp
punpckhwd
and
mov
sti
ljmp
pop
test
mov
mov
pusha
dec
sti
add
xor
jp
daa
fists
mov
nop
inc
mov
and
cmp
mov
rep
cmp
dec
jp
jno
std
sbb
imulb
mov
xchg
xlat
rorl
faddl
vmovlpd
sbb
xchg
mov
mov
out
inc
sarb
mov
ror
mov
mov
ret
and
psubusb
shlb
test
lcall
leave
stc
cs
mov
pop
push
xchg
adc
dec
cli
scas
fdivr
daa
jg
push
cmpsb
int
push
int3
sbb
sub
mov
mov
cmp
cmp
push
hlt
sub
out
popa
add
int3
add
and
dec
std
fwait
test
dec
icebp
lock
insl
xchg
and
rcrb
icebp
inc
pop
push
pop
shll
sbbl
sbb
movsl
xor
ljmp
push
jp
les
mov
insb
adc
sub
sbb
scas
cmp
cld
dec
xchg
iret
or
imul
enter
jb
mov
push
repnz
dec
xchg
mov
or
jmp
pop
mov
stc
aad
push
insb
inc
sbb
push
dec
adcl
filds
cmp
pop
jae
adc
mov
les
add
adc
loopne
in
push
mov
inc
inc
mov
lret
stos
fnstsw
ss
popf
mov
and
pop
add
fistpll
inc
mov
sub
ret
cmp
cmpsl
jo
out
leave
lock
js
lods
cltd
cmp
icebp
pop
mov
test
xchg
mov
fs
shll
add
and
or
mov
jl
mov
jmp
push
scas
js
lcall
sbb
scas
push
fnstsw
movsb
or
je
test
cmp
out
popa
add
stos
insb
lcall
cmp
pop
sbb
cld
cmpsb
les
or
pop
adcl
sub
inc
add
jns
jp
cmp
movsl
in
aam
push
adc
sti
add
xchg
push
mov
movsb
mov
dec
mov
xchg
add
jmp
push
sbb
pop
leave
mov
int
pusha
sahf
sti
lcall
aaa
jl
sbb
mov
mov
fdivs
dec
inc
cli
mov
push
aad
push
inc
or
call
pop
test
iret
pop
push
in
or
imul
push
imul
cmc
sbb
adc
das
sbb
out
fdivs
xor
push
jecxz
sub
std
cmp
and
stos
xchg
stos
cmp
imul
lret
fisttpll
xor
lret
mov
xchg
das
loop
loope
push
ror
push
mov
and
or
xor
inc
push
mov
pop
sbb
jns
repnz
bound
int
mov
popa
js
push
and
mov
in
fdivrs
sahf
or
nop
fwait
out
lods
xchg
add
ror
sti
leave
mov
mov
js
add
or
jle
cltd
or
hlt
aam
movsl
test
xor
push
cmp
ja
out
inc
cmp
mov
xchg
adc
out
mov
loope
xchg
ja
mov
inc
fimuls
negl
mov
iret
ficompl
pop
cltd
es
push
push
jne
ret
push
ds
mov
mov
pop
xchg
fs
data16
cmpb
scas
xchg
cmp
cmpsl
push
int3
xchg
test
pop
mov
sahf
aam
lods
jnp
adc
repnz
push
adcl
dec
jmp
mov
scas
fisttpll
add
out
pushf
negl
aaa
xchg
das
pusha
and
pop
inc
cmpb
xchg
dec
pop
jbe
psrlw
addb
lcall
pop
cmp
push
adc
rcrl
stos
add
daa
and
push
lahf
mov
lds
and
clc
push
add
xlat
push
stc
jl
stos
dec
push
xchg
xchg
out
push
cmp
cmp
test
mov
adc
and
xchg
std
loop
pop
test
int
sbb
enter
lret
ss
call
les
rclb
jecxz
std
mov
insl
icebp
adc
sbb
pop
stos
repz
es
push
add
cmp
out
push
push
jns
enter
adc
jle
sbb
mov
mov
outsb
sub
repnz
outsl
jl
fstl
inc
jle
in
jecxz
cltd
mov
out
insb
mov
and
mov
test
aad
cmp
add
xchg
jno,pt
adc
pushw
mov
xor
add
mov
daa
inc
cld
push
xchg
and
inc
sbb
call
bound
in
jmp
mov
mov
cld
cwtl
inc
cmpsl
pop
aam
dec
movsb
cmpsl
movsb
fmuls
xor
filds
cmc
iret
int3
add
xor
repnz
pushf
popf
rcll
xchg
mov
cmpsb
and
shl
aam
icebp
fcmovb
outsb
push
je
pop
sub
mov
inc
or
push
push
mov
or
lcall
xor
popl
inc
jbe
dec
enter
push
inc
aas
push
out
cmpsb
push
iret
aas
mov
and
test
inc
add
sahf
sbb
fs
inc
cmp
test
mov
xor
mov
xor
out
sub
mov
and
mov
repz
cmp
mov
sbb
sti
push
push
fldl
les
pop
sbb
rcrl
xlat
pop
divb
enter
lret
jmp
sbb
lods
jno
jl
negl
xchg
mov
xchg
pop
loopew
lods
loope
mov
dec
lret
enter
ret
jne
divb
icebp
or
sti
pop
mov
mov
or
mov
fisubrl
xor
pop
rcrl
mov
pusha
roll
sbb
out
ds
cltd
lcall
pop
scas
out
out
test
inc
pop
adc
pop
pop
add
add
push
ds
or
repnz
bound
jl
push
xor
loope
xor
insb
sbb
adc
push
add
inc
mov
lcall
xchg
sub
mov
sub
lock
dec
adc
dec
dec
sub
push
in
dec
pop
rol
cmp
push
xor
lods
lret
mov
icebp
inc
pop
rcrl
cli
pop
inc
sub
dec
frstor
cmp
outsl
pop
imul
push
ja
inc
cmp
das
adc
add
dec
add
mov
cmp
lcall
frstor
lret
sar
xchg
push
jne
jnp
in
push
mov
add
jle
ss
or
adc
sub
int
sbb
xchg
insb
xor
loop
mov
cs
loop
ljmp
add
stc
push
mov
aad
clc
cmp
dec
sub
imul
test
mov
lret
into
and
inc
imul
dec
mov
fldl
shll
or
cld
fidivrl
jnp
aam
jne
sarb
jl
rclb
dec
aaa
pop
inc
mov
mov
jnp
lods
pop
into
pop
jmp
mov
pop
call
rclb
leave
pushf
mov
xor
xor
cmp
int3
or
mov
clc
mov
nop
cmp
and
jge
dec
adc
jp
movsl
lret
popf
fs
xor
scas
xchg
mov
xchg
in
mov
shrl
test
movsl
mov
lret
int3
addr16
xchg
femms
xor
xchg
pop
movsb
inc
loop
insl
imul
fcmovnb
jno
mov
cld
mov
and
outsb
mov
shufps
pop
jg
dec
daa
les
push
push
adc
push
xchg
mov
in
cmp
or
xchg
jmp
loop
out
mov
popf
or
inc
add
push
out
in
cs
sub
xchg
in
push
xchg
loop
lcall
repnz
push
lods
add
fimuls
push
mov
cwtl
hlt
sub
jnp
add
mov
or
dec
sahf
pushf
mov
rcrb
add
push
push
std
xor
inc
scas
dec
fneni(8087
push
add
js
stc
pop
mov
rcr
sub
imulb
inc
push
ss
lcall
mov
popa
int
adc
add
aas
dec
pop
mov
add
xchg
push
dec
sub
push
pusha
repz
jmp
mov
lcall
call
dec
test
cmp
mov
rep
mov
pop
sbbb
out
pop
push
xor
je
int3
jl
outsb
addr16
rcr
pop
cmpsb
mov
push
mov
inc
cmp
mov
inc
mov
fnstcw
push
mov
test
jmp
mov
fcmovbe
pop
mov
leave
mov
cmp
mov
jne
push
pop
push
push
hlt
push
xchg
mov
xchg
jp
shll
fneni(8087
testl
idiv
popa
xchg
or
popa
or
cmp
mov
cmp
cmp
and
xchg
dec
pop
push
mov
scas
sbb
fmulp
cmpsl
insl
xor
insb
push
pop
fwait
repz
aaa
loope
mov
xchg
pop
dec
std
jmp
imul
sbb
xorl
jbe
popf
lds
ljmp
xchg
pop
sbb
rolb
test
insl
loop
sub
inc
cmpsb
cmpsl
fwait
or
sbb
stc
or
lcall
call
and
push
push
jbe
pop
sub
mov
and
inc
adc
adc
lea
xor
les
stos
pop
sub
cmp
aad
inc
adcb
mov
in
mov
or
shl
and
push
dec
mov
inc
mov
jge
clc
xchg
xchg
stc
pop
and
hlt
fbstp
add
pop
and
pop
cld
sarl
stos
stos
mov
xor
adc
ja
adc
xchg
cmpsl
push
jno
sub
rclb
jge
je
scas
mov
sbb
mov
pop
dec
jnp
clc
ljmp
and
or
mov
in
in
add
test
xor
imul
aaa
mov
out
aaa
das
loop
mov
xor
rcll
dec
mov
test
cwtl
inc
jle
mov
faddl
xchg
mov
cmp
jle
cld
icebp
std
cmp
jne
stc
mov
aad
jb
push
dec
inc
lahf
mov
jecxz
jg
mov
sbb
mov
shl
pop
lret
xor
popa
dec
jg
loopne
andb
out
push
daa
dec
and
repnz
or
xor
mov
int3
and
add
test
jnp
popa
inc
in
gs
sub
mov
inc
in
ja
bound
ret
imul
jo
fists
xor
push
inc
fisttpl
dec
mov
xchg
adc
xchg
imul
mov
or
mov
adc
pop
mov
and
sbb
clc
mov
jo
or
test
cld
aam
arpl
divl
or
sahf
sti
sahf
dec
mov
popf
mov
insl
mov
addb
xorb
aas
repnz
xchg
popl
repz
movsb
push
scas
sbb
imul
sbb
mov
in
add
and
mov
push
push
cmpl
fistps
jl
or
pop
sub
mov
es
and
adc
add
xchg
fst
es
xor
mov
mov
xorl
movsb
push
and
jecxz
gs
outsb
adc
or
sbb
adc
add
or
negl
clc
mov
sub
inc
sti
xchg
je
repnz
push
dec
push
mov
sbb
xor
xchg
test
icebp
jb
and
jg
mov
cld
scas
pop
pop
mov
xchg
addr16
movsb
jg
insb
and
pop
push
cmp
pop
xor
and
push
jmp
push
jmp
repz
bswap
dec
gs
mov
jae
test
out
push
mov
or
int3
jmp
jns
mov
je
adc
rorb
and
lret
jnp
inc
leave
sbbl
push
jb
lds
jmp
test
cld
movsb
mov
das
mov
xor
mov
push
call
cmp
add
lods
inc
lock
and
add
jno
dec
inc
pushf
mov
mov
inc
and
pop
mov
int3
pop
push
sub
add
stos
movsb
mov
mov
dec
dec
scas
adc
jnp
lret
mov
mov
or
in
cld
and
sub
subb
outsl
or
test
mov
repz
cmp
ud0
in
lds
pop
cmpsl
cli
jno
movsb
stc
ror
scas
hlt
xchg
pop
mov
bound
cld
out
ret
sahf
jp
mov
pop
jmp
lea
test
outsb
add
jbe
inc
imulb
pop
stos
push
and
add
std
fmulp
inc
in
mov
lret
pop
ja
push
scas
dec
sti
push
std
xchg
push
sbb
push
inc
fbld
mov
imul
nop
enter
dec
insb
jge
xchg
or
push
sbb
cmp
out
mov
mov
push
cmp
jb
sbb
ljmp
das
xor
mov
cmp
imul
ret
lcall
es
aad
inc
jb
lods
pop
into
push
not
jb
js
in
mov
sub
loope
push
int3
mov
iret
mov
neg
leave
lcall
fcoms
pop
add
dec
cli
je
add
sbb
dec
sbb
cmp
sub
push
hlt
sbb
jae
inc
xor
cli
xor
xor
bound
lods
and
invd
imul
push
mov
dec
outsb
sbb
xor
scas
xchg
clc
mov
inc
les
sbb
out
sbb
jne
outsl
lcall
jb
push
inc
or
out
inc
mov
sbb
jl
pop
push
daa
pop
shrb
mov
jae
xchg
jae
out
xchg
enter
sub
xor
sbb
or
xor
dec
push
adc
mov
andl
pushf
add
push
insb
fldcw
cmp
mov
mov
sbb
cmpsb
mov
cmp
xor
and
xchg
icebp
enter
int
int3
mov
data16
push
in
sub
mov
mov
dec
add
fsubrl
je
xor
pop
mov
cmp
mov
jl
out
mov
outsl
pop
lods
nop
inc
nop
sbb
push
jl
xor
clc
mov
dec
push
mov
mov
sub
mov
lds
sti
les
mov
jge
bound
jne
shr
push
push
cmpsl
cmp
es
sbb
popf
mov
in
clc
nop
rorl
mov
mov
or
or
popa
cmpsl
xchg
inc
mov
outsl
pop
out
mov
fsubl
insb
pop
mov
jge
hlt
daa
out
mov
mov
push
mov
xor
stos
btr
cmp
popa
xchg
insl
pop
int
out
push
dec
add
xchg
pop
outsl
iret
push
daa
pop
insb
cltd
scas
push
mov
in
imul
and
xchg
fwait
ret
stos
out
fwait
add
lcall
mov
jae
cwtl
xchg
insb
idivb
cltd
test
sahf
repnz
repnz
sbb
push
cltd
repz
xor
clc
add
or
cs
aas
push
cmp
sub
mov
rorl
stc
test
dec
or
pop
or
fildl
pop
cmpsb
dec
mov
popf
fisubrs
aam
and
mov
loop
sahf
div
or
mov
mov
out
xor
sub
push
sub
jle
outsb
push
fcompl
pop
fxch
enter
sub
dec
xchg
scas
xchg
ficompl
pop
pop
ret
mov
movsl
sahf
xor
and
xchg
mov
hlt
shl
push
pop
adc
dec
and
icebp
adc
sub
inc
adc
cmpb
xchg
xchg
clc
lock
xchg
in
aad
sbb
insb
sub
jno
out
xchg
push
hlt
outsl
jnp
call
test
push
int
popf
repz
ja
cmp
push
int3
pop
fimuls
mov
cs
dec
test
fsubrs
test
jne
mov
repz
cmp
jle
sarb
rcll
jbe
and
push
orps
movsb
push
int3
mov
shl
cld
fucomip
pop
test
mov
addb
cmp
loop
add
das
inc
popf
icebp
push
sbb
add
inc
sub
bound
cmp
pop
dec
dec
fidivl
es
mov
out
jg
push
inc
xor
ja
mov
cmp
push
and
outsl
push
fisubs
fisttpl
sbb
iret
imul
push
nop
test
mov
lret
sub
es
push
mov
movsb
int
lea
scas
jmp
outsl
dec
mov
cmpsb
movlps
add
das
pushw
pushf
imul
pop
adc
in
je
adc
jmp
adc
push
mov
lds
cltd
mov
push
or
hlt
data16
ljmp
inc
mov
pushf
or
xchg
orb
mov
mov
push
and
stc
mov
cmp
int3
push
xor
add
shll
fldl
cltd
popl
stos
pop
mov
mov
sar
mov
sub
leave
xchg
mov
xor
mov
mov
xor
shrb
push
cmp
xlat
pop
scas
fwait
pop
xchg
sub
adc
ljmp
push
adc
lcall
cwtl
sbb
xchg
jno
jbe
test
xchg
das
inc
idiv
lcall
sbb
out
xchg
int3
xor
push
cmp
repz
mov
stos
mov
sub
clc
stos
pop
loope
int3
mov
xorl
jl
mov
ret
cmp
xchg
pop
dec
mov
and
insb
test
fsts
mov
jne
outsl
sbb
fdivrl
pop
xor
pop
push
add
mov
sbb
int3
lea
mov
lret
cltd
push
inc
aas
cld
fnsave
cwtl
adc
popa
xchg
dec
sub
pop
cmp
rclb
jne
dec
xchg
mov
lret
lock
pop
xchg
sub
xchg
push
aad
cmp
pop
in
cli
cmp
pusha
xor
cmp
lods
sub
stos
push
mov
jmp
cmp
dec
ds
xor
into
cli
aas
mov
xchg
popa
dec
gs
dec
movsl
repnz
imul
stc
aam
xchg
adcb
fcomp
inc
mov
or
daa
push
jmp
ret
cmp
comiss
jecxz
out
repnz
or
fidivrl
out
cmp
mov
adc
insl
xor
mov
add
movsl
rcrl
testl
loopne
adc
incb
cmp
xor
rcrb
dec
push
adc
dec
scas
cmp
jle
out
aaa
imulb
fwait
fwait
mov
sbb
repz
xlat
call
jne
xchg
push
push
loope
xor
fdiv
js
bound
divl
mov
sub
addr16
xor
jecxz
gs
in
and
sbb
subl
fldenv
jno
jne
dec
test
jb
movsb
nop
push
orl
cmp
push
ds
lahf
xchg
stc
stos
add
or
cmp
or
int3
in
shl
inc
xor
sub
add
inc
gs
stc
cld
mov
into
jno
mov
pop
sti
ret
add
movsl
addr16
xor
leave
sbb
push
repnz
nop
test
ljmp
jmp
mov
lret
cltd
int
jge
lret
lret
mov
aas
lea
pop
popf
pop
lds
push
repnz
aaa
push
jecxz
jo
cmpsb
stos
sti
jae
into
or
out
popf
jno
cmp
ljmp
fldenv
add
and
bound
aas
and
xchg
stc
pushf
mov
mov
xchg
aas
aad
movsl
mov
test
popa
out
pop
inc
sub
clc
pop
sub
clc
sub
fwait
ret
jno
xchg
les
nop
add
inc
adc
lret
orb
dec
cs
push
or
nop
sub
mov
out
das
dec
push
ja
and
add
mov
shlb
dec
push
xchg
inc
inc
jp
mov
sub
pusha
cmp
push
int
or
mov
repnz
pushf
loope
xor
fistpll
in
mov
push
inc
in
dec
or
gs
test
xorb
xor
lock
dec
xchg
add
and
sbb
jnp
push
inc
push
add
inc
ja
int
dec
or
and
pushf
enter
shlb
push
xor
js
fbld
mov
int3
test
adc
data16
scas
insb
jle
add
adc
movw
pop
cmp
fnstenv
and
push
test
mov
pop
cmc
outsl
add
loopne
sbb
xor
scas
repz
fnstcw
add
aam
xor
out
fimull
adc
gs
xchg
sahf
mov
or
sar
fildll
cmpb
push
jg
int3
ss
lahf
lcall
mov
dec
roll
neg
in
and
pop
mov
movsl
adc
fidivl
dec
fisubs
inc
mov
mov
inc
xor
leave
aas
mov
outsl
mov
push
loop
popa
pop
push
jno
jbe
add
and
pop
add
mov
insb
es
cwtl
mov
or
xor
sbb
sub
std
xchg
jae
repz
jns
out
aas
out
sub
jo
cld
cmpsl
add
out
mov
int3
lds
push
inc
mov
adc
or
int3
fucomip
and
js
xchg
add
dec
insb
cli
push
xchg
adcl
fsubrs
push
imul
enter
int
clts
add
out
fwait
lret
jne
fidivrl
movsb
fnstsw
pop
xchg
mov
test
dec
pop
inc
dec
push
insb
fwait
mov
dec
test
setge
je
add
or
inc
jae
jae
lret
js
lods
and
mov
std
std
call
inc
xlat
sbb
sub
aaa
mov
popa
xchg
leave
add
out
jp
pop
cmpsl
cmpsb
dec
subb
sub
aad
sti
mov
lea
inc
test
int
icebp
das
jmp
adc
out
insl
push
or
mov
push
into
aad
push
jmp
xchg
jecxz
sbb
adc
enter
insb
fisubrs
dec
ja
test
inc
test
gs
push
imul
or
roll
fisttpl
imul
sahf
push
stos
hlt
shrb
in
mov
fwait
in
xchg
imul
out
imul
out
xchg
cmp
shlb
mov
dec
je
das
adc
jns
pop
and
dec
in
xchg
mov
idiv
push
jge
xor
imul
repz
je
push
push
mov
mov
enter
xchg
fstpl
sbb
pop
out
stos
rorb
loope
cltd
nop
mov
enter
inc
push
add
adc
cs
ljmp
mov
scas
fcomps
sub
pop
lods
mov
jns
rolb
ds
cmpsl
nop
ja
arpl
adc
mov
stos
xchg
repnz
lahf
push
fs
mov
sub
das
sub
xor
fwait
jge
mov
movsl
idivb
stc
mov
and
outsl
push
in
jnp
mov
into
popf
push
or
stos
xchg
push
and
rol
stos
xchg
mov
mov
scas
in
jmp
mov
inc
movsb
sbb
inc
stc
sbb
pop
push
pop
out
sbb
cmp
xor
rol
cmp
mov
stc
push
out
pop
mov
ja
sahf
out
cltd
ficoml
adc
shlb
inc
push
insl
xchg
arpl
sub
xchg
adc
xor
rclb
add
fnsave
pop
negb
pop
xchg
movsl
daa
sti
popa
shrb
push
fs
push
icebp
lock
add
push
fiaddl
rep
push
xchg
cltd
test
out
inc
es
adc
subl
dec
xchg
rclb
rclb
cwtl
jae
out
push
or
loop
sbb
jle
inc
mov
cmp
sbb
mov
dec
loop
clc
aaa
insl
push
test
jo
add
clc
jmp
xchg
repnz
mov
and
inc
pop
jmp
lret
adc
push
and
lret
repnz
dec
mov
sbb
pop
cmpb
mov
sbb
sub
jnp
inc
fcomps
xchg
cmp
outsb
mov
ljmp
push
mov
sti
sti
aas
lret
xor
pop
pop
fwait
dec
cmp
sub
fwait
inc
jns
rcll
jno
loopne
xchg
xor
sub
in
xor
decl
mov
es
lock
hlt
fs
lds
dec
mov
mov
mov
push
xor
aam
and
sbb
sbb
sbb
roll
dec
jo
ljmp
cmp
xor
das
mov
fcmovu
inc
int3
jns
fucomi
mov
fiaddl
ret
xchg
insb
std
and
ret
mov
inc
push
sbb
lds
insb
dec
imul
jb
push
daa
fisttpll
jp
int3
mov
or
std
int
in
call
fstpl
mov
cmp
cs
jl
inc
loope
add
push
dec
aaa
cs
dec
cltd
mov
fld1
adc
dec
jnp
cwtl
pop
push
repz
pop
push
cmp
incb
data16
or
add
dec
shlb
jmp
cmp
faddp
cmp
mov
bound
dec
mov
pop
inc
sub
mov
imul
cltd
inc
or
iret
lret
mov
dec
imull
repz
push
push
lods
xchg
add
xchg
or
or
pop
dec
xor
push
sub
mov
ficomps
push
insl
add
mov
outsl
mov
add
mov
sahf
xor
pop
fucomi
aas
adc
add
xor
daa
test
xchg
addr16
cmp
xchg
xchg
hlt
cmp
xchg
mov
insb
xor
push
mov
xchg
mov
in
pop
jae
clc
lea
enter
leave
cmp
jp
pop
inc
jb
jb
jo
fcoms
pop
inc
fs
sub
cmp
arpl
leave
adc
out
ret
hlt
xchg
cwtl
sub
insb
dec
dec
data16
das
and
lea
out
inc
pop
mov
scas
fisttps
insb
loope
std
mov
sbb
shrl
jl
inc
lcall
loopne
mull
fnstcw
sbb
jmp
cmp
bound
mov
pop
fnstsw
or
popa
ja
sbbb
push
imul
pop
pop
and
push
add
fistl
jp
stc
mov
fistpll
xchg
sub
clc
xchg
rcll
shrb
mov
sub
jmp
jge
lods
leave
mov
es
and
jg
mov
fmulp
and
out
mov
js
icebp
loopne
mov
subb
pop
or
or
lret
out
pop
xchg
inc
dec
insb
push
ds
push
roll
call
push
pop
push
mov
xchg
outsl
cmpsl
xor
jg
adcl
clc
mov
inc
std
inc
dec
mov
or
testb
int
aam
pop
xor
mov
int
xchg
adc
mov
into
loope
adc
out
pop
jg
leave
sbb
xlat
lret
add
ret
adc
jle
push
rcrl
ret
pop
aas
jge
movsl
and
mov
fsubrp
imul
popf
fs
mov
sub
inc
xchg
testb
sub
ds
xchg
lock
xor
ficoms
mov
sbb
test
and
sub
mov
dec
call
fistpl
adc
sub
dec
cmp
cmp
ficompl
inc
add
cmp
in
or
jmp
fcompl
lret
ja
xor
add
sub
mov
push
sbb
sahf
pushf
cmp
pop
pop
push
mov
jae
pop
and
cmp
testb
fldenv
pop
cmp
es
lock
jmp
arpl
push
scas
push
inc
pop
jae
pop
mov
lds
imul
sahf
mov
dec
inc
mov
xlat
std
jle
inc
xchg
cmp
dec
ret
insb
ret
call
xor
cmpsl
mov
pop
rclb
jecxz
int3
repz
push
cmp
imul
add
lock
lea
jge
jmp
or
xchg
mov
jnp
sub
push
pop
dec
jns
pop
xchg
dec
pop
cmc
push
pop
inc
dec
aas
outsb
add
or
pop
push
mov
stos
sarb
rorl
mov
xor
mov
sahf
dec
jmp
xchg
pop
std
pop
not
lahf
fsubp
out
movsl
inc
xor
aad
test
or
inc
xor
or
or
xlat
jecxz
cmp
or
in
dec
pop
rclb
ja
push
outsl
sbb
xchg
mov
dec
mov
xchg
test
mov
pop
inc
test
push
dec
mov
mov
cmpsb
mov
or
stos
ss
xor
rcrl
jo
dec
xlat
scas
cmpsl
shrb
idivb
cmp
mov
jecxz
fisubrs
adc
aas
bound
fildll
dec
add
adc
fdiv
call
pusha
pushl
inc
ficoml
push
jmp
push
bswap
or
out
sbb
push
dec
add
cmp
mov
pusha
shlb
sub
daa
push
xor
mov
dec
adc
stos
and
rcrl
pop
test
mov
inc
pop
xchg
test
mov
cmp
gs
push
sbb
and
xchg
stc
pop
jns
in
pop
es
jl
mov
js
ss
call
mov
dec
dec
in
or
mov
je
rcr
call
cmp
sbb
push
push
loope
or
pop
into
roll
or
cmpsb
jmp
inc
cld
sti
je
aam
fdivl
mov
lods
push
stos
or
pop
lret
ss
xor
and
cwtl
push
rorl
cmp
decl
rolb
fdivl
ret
addr16
cmp
lods
jecxz
stc
mov
and
fs
or
aam
es
push
sub
jp
je
push
pop
repnz
fimuls
xchg
jae
pop
stc
fst
and
adc
inc
insb
shll
and
in
inc
or
lahf
xor
adcb
outsl
and
jne
ret
or
jns
sub
loopne
je
into
adcb
fisubrl
add
and
mov
scas
repz
je
popf
inc
inc
add
pusha
inc
pop
or
add
pop
pop
mov
xchg
insb
sub
out
jno
sub
in
loopne
mov
les
mov
data16
iret
shrb
sub
mov
outsb
adc
orb
iret
pop
sbb
pop
add
sub
cmp
push
xchg
ds
movsl
jp
ss
mov
bound
movsb
jo
daa
sub
mov
cmp
mov
mov
push
jo
pushf
jp
xchg
mov
pushl
jge
lods
inc
and
dec
rcl
push
out
xchg
xchg
dec
sub
icebp
mov
in
das
dec
push
in
fucomp
inc
pop
add
cld
push
into
movsl
movsb
stos
xchg
mov
push
sbb
ret
inc
flds
add
mov
push
pop
xchg
aam
in
mov
adc
xchg
dec
xor
lods
dec
sbb
xchg
or
daa
push
lds
cs
pop
xchg
mov
sbb
je
ja
or
jmp
lcall
xchg
pop
ljmp
sbb
sub
arpl
enter
or
add
xor
jg
mov
mov
inc
dec
out
hlt
xchg
sub
xor
cmp
xchg
or
sbb
mov
jns
testl
insl
enter
std
add
mov
inc
inc
ds
and
lods
jle
mov
mov
xorl
ljmp
push
add
enter
xlat
test
add
xor
movsb
push
sub
adc
xchg
lcall
sbb
lds
je
mov
xchg
cltd
ds
pop
insl
lahf
push
adc
inc
pop
pop
incb
push
jp,pt
and
repnz
dec
xchg
pushf
sub
sbb
push
loop
iret
lahf
and
jb
clc
outsb
cmp
stc
push
leave
aas
ret
inc
aam
ret
cmpsb
cmp
push
mov
into
xchg
call
inc
inc
jl
fstpl
mov
adc
repz
mov
jns
mov
fisttps
push
mov
jmp
data16
adc
ljmp
mov
mov
ret
ret
lods
shrb
sbb
aaa
sub
inc
mov
xor
mov
cmpb
jmp
dec
repz
mov
pop
ja
ss
inc
imul
inc
sub
fwait
lcall
popf
jmp
cltd
mov
loope
add
shl
lock
fldt
gs
movsl
popl
ds
mov
jb
fisttpl
pop
pop
sub
outsb
dec
add
xlat
ljmp
call
mov
mov
cmpsl
mov
out
cmc
pusha
into
mov
mov
xchg
mov
and
jg
scas
lea
das
inc
xor
stos
or
mov
mul
mov
or
enter
pop
jno
outsl
inc
test
stos
daa
aas
inc
in
rol
dec
lret
js
sub
cltd
test
pop
jmp
outsl
xchg
dec
int3
xchg
bound
test
mov
adc
mov
lods
pop
xchg
lds
outsb
push
push
dec
ja
loope
push
scas
inc
xchg
rcrl
ret
stc
add
add
jmp
push
mov
pop
addr16
jp
daa
add
imul
adc
xor
lea
rcll
mov
dec
sub
rol
mov
or
nop
sub
adc
jp
pop
sarb
mov
pop
scas
dec
sbb
adc
dec
push
shrl
fldt
in
xchg
scas
imul
jp
jmp
flds
inc
imul
xchg
icebp
jb
cli
xchg
fnsave
repnz
and
aaa
adc
jp
push
rclb
frstor
fsubp
pop
dec
mov
cs
stc
mov
scas
out
xor
sbb
outsl
cmpsb
int3
jne
icebp
push
fstpl
js
sbb
scas
rorl
cwtl
shrb
pushf
shr
mov
es
scas
stos
dec
imul
negb
out
adc
es
mov
shrb
addr16
lock
mov
pop
clc
subb
cmpsl
test
cmpsl
roll
jl
imul
pop
lahf
pop
fnstenv
xchg
mov
and
pop
scas
cmpsl
xor
add
dec
dec
imulb
ljmp
mov
rcll
sbb
push
iret
sti
jno
adc
jl
push
mov
push
lds
inc
rorl
inc
nop
mov
xor
jnp
pop
pusha
repz
fbstp
imul
testl
hlt
dec
inc
fisttps
repnz
mov
add
std
outsb
push
jne
inc
leave
jbe
aas
xchg
loopne
sarl
repnz
incl
bound
fsts
ret
std
mov
pop
adc
cmpsl
insb
mov
dec
lods
lea
outsb
add
into
fildl
sbb
loope
sarl
pop
repz
addl
sbb
jge
inc
mov
xor
pop
jg
mov
mov
fbstp
movsb
cltd
lahf
xchg
mov
cmp
shrb
sti
xor
pop
cmp
leave
xlat
cmc
data16
cs
fcompl
pop
fnsave
cmc
outsl
mov
jns
or
or
fldt
cmp
push
fsubr
mov
test
xor
mov
cmovb
mov
incb
loope
imul
xor
sarb
pop
out
popa
xlat
adcl
or
adc
iret
add
fists
insl
dec
xchg
pop
mov
add
sbb
push
xchg
inc
pop
or
pop
xor
dec
bound
and
aas
push
push
and
xor
decb
sbb
sbb
xchg
mov
jne
imul
jle
adc
add
pop
popa
lahf
bound
ljmp
repz
push
sti
push
sbb
add
mov
ds
adc
mov
adcl
sbb
hlt
cmpsb
pushf
outsl
pop
dec
pop
jbe
xor
repz
ljmp
sbb
add
sti
add
xchg
mov
in
fistpl
ror
leave
rolb
inc
cmp
pop
aad
jo
jae
push
repz
stos
xchg
in
pop
push
idiv
inc
aas
movsl
in
ret
loop
loop
incl
xchg
or
jge
mov
out
ffree
cmp
jbe
gs
dec
outsb
out
push
add
jecxz
repz
jnp
dec
fstpt
jb
pop
mov
push
jp
fptan
mov
jmp
push
cwtl
sub
pop
rcr
test
adc
arpl
or
or
fildll
aaa
or
leave
mov
pop
daa
and
lcall
jecxz
mov
or
add
sbb
push
mov
xor
aam
fiadds
inc
push
fwait
aad
sub
enter
inc
mov
scas
outsl
jbe
dec
jge
cwtl
addb
scas
rorb
xchg
mov
pushf
inc
movsl
mov
cmp
jno
les
loop
xchg
es
xchg
jne
icebp
stc
leave
sbb
dec
std
sbb
shrl
mov
mov
rclb
test
js
and
cmp
cmp
fsubl
stc
jnp,pn
js
adc
inc
call
mov
sub
cli
xchg
rolb
sbb
mov
pop
mov
maskmovq
testl
in
lret
aas
orb
insl
inc
mov
mov
or
cltd
add
mov
xchg
mov
push
mov
push
inc
inc
cmp
inc
mov
rcl
jmp
test
lahf
cmp
pop
nop
and
je
sbb
call
mov
adc
sbb
mov
das
and
in
imul
push
mov
in
mov
in
push
shrl
les
xor
imul
int3
sub
addb
js
loop
xorb
enter
jge
xor
and
xchg
fwait
sbb
cmpsb
push
lret
xchg
jb
lcall
lea
je
push
mov
jo
lds
dec
ret
fs
mov
inc
scas
push
sbb
sti
mov
imul
jmp
inc
insl
fmuls
aad
mov
loope
mov
fcom
test
aas
arpl
in
push
dec
mov
int3
push
push
mov
jne
cmp
cmp
xchg
xchg
sti
dec
mov
hlt
mov
in
cmp
cs
sbb
clc
aaa
sarb
mov
rclb
inc
movsl
imul
add
out
ljmp
inc
daa
imul
push
imul
sbb
mov
adc
push
repnz
imul
sbb
cmp
cwtl
xchg
pop
push
add
add
sub
je
dec
jle
jo
push
enter
ds
add
call
cwtl
mov
mov
popf
mov
jmp
setbe
sub
mov
jg
and
fdivl
fnstsw
stc
rcrb
cld
outsl
int3
or
add
dec
out
pop
aam
sub
push
push
dec
fstl
dec
mov
inc
dec
shrb
in
fiadds
push
das
push
daa
jb
int
adc
cmpsl
push
imul
mov
xor
or
or
shr
jle
cltd
psubw
jmp
cs
pop
sbb
inc
push
sbb
mov
mov
dec
inc
movb
xchg
ror
xor
add
insl
mov
stc
ljmp
adc
xor
add
and
or
mov
cmpsl
or
scas
or
cwtl
fcmovbe
fisubrl
sbb
fwait
inc
fcomps
cmc
xor
out
dec
iret
mov
jg
xor
stc
adc
inc
jne
icebp
hlt
mov
fwait
mov
push
fidivrs
jl
cmp
pop
xor
fidivs
cmc
xor
mov
cmp
pop
out
mov
mov
push
or
leave
aaa
and
pop
loopne
imul
testl
sub
and
lods
mov
or
test
cmpsb
push
jg
cs
push
cmp
mov
push
es
sahf
repz
mov
pop
gs
aaa
loopne
inc
repnz
mov
mov
mov
fwait
insb
adc
sub
xorb
sub
dec
pop
into
test
fwait
nop
dec
push
xlat
push
xor
repnz
ss
out
sbb
mov
add
mov
dec
adc
cmp
lret
in
pop
ret
leave
fistl
roll
cmpsb
das
imull
adc
xor
outsb
data16
je
push
cld
push
add
add
nop
mov
aam
sahf
aaa
xor
sub
push
js
ss
iret
fmull
xchg
sbb
out
mov
cltd
pop
test
push
sub
es
mov
pop
jmp
inc
rol
into
or
fistpll
inc
and
rolb
xor
cmp
jns
push
mov
adc
mov
test
push
lods
ja
scas
mov
mov
loope
mov
xor
test
xor
mov
jmp
sarb
ret
cli
sub
xchg
push
scas
jne
fisubl
lods
pop
mov
jno
mov
push
adc
sbb
push
popa
sbb
jmp
popa
out
jp
inc
arpl
int3
cmpsb
aaa
out
xchg
scas
lods
adc
sti
loop
or
gs
inc
cmp
xchg
aad
and
imul
mov
jp
clc
mov
enter
outsl
outsb
add
or
jb
in
push
ja
cmp
inc
or
pop
in
push
in
push
imul
inc
xchg
daa
push
cmp
dec
xor
mov
clc
adc
flds
inc
sbb
stc
sub
jl
popa
or
or
stos
hlt
test
adc
push
xrelease
leave
jo
jmp
dec
gs
push
call
sahf
ret
pop
imul
cmp
fcmovnb
xor
clc
test
or
cmp
mov
test
inc
fwait
xchg
inc
fwait
sbb
divb
enter
in
sbb
sbbb
pop
das
icebp
je
sbb
xor
sarb
daa
arpl
orl
fldl2e
addr16
jg
aas
jecxz
lcall
mov
fisttpl
stos
push
or
and
lods
mov
in
inc
das
or
xor
fs
das
xchg
rorl
jp
jnp
imul
aad
loop
cld
pop
mov
pop
dec
lret
rorl
addb
test
stos
mov
pop
sti
sbb
je
lods
cmc
rorl
das
dec
testb
cwtl
fnsave
int
push
pop
jb
fdivs
ljmp
lds
xchg
mov
jg
test
xchg
push
jecxz
aad
pop
inc
or
sub
cmpsb
xor
fcmovb
daa
int3
mov
mov
sbb
mov
shl
push
movsb
nop
adc
xchg
lds
xor
mov
lret
jecxz
push
shll
fisubl
sub
sbb
push
push
dec
xor
or
jmp
sti
xor
aas
pushf
fldl
jo
jecxz
inc
mov
fidivrs
dec
or
cld
lods
mov
jg
lods
jbe
enter
xchg
cmp
mov
cld
sar
ja
gs
inc
incl
sbbb
clc
push
out
fwait
leave
mov
xchg
jmp
sahf
fsubp
rcrb
shll
aaa
jecxz
pop
mov
out
and
fiadds
jae
gs
daa
lods
es
sbb
pop
fisttpll
lret
xor
dec
sbb
mov
addr16
into
faddl
mov
jmp
orb
sbb
out
js
arpl
enter
ficoml
jnp
lock
scas
or
enter
lea
mov
out
pop
xor
addr16
xlat
inc
stc
pop
stos
add
ss
adc
and
fisubs
enter
outsb
out
mov
add
pusha
adc
cltd
xchg
sbb
push
push
arpl
or
mov
pop
push
in
std
mov
sarl
lret
pop
adc
sbb
clc
out
pop
dec
lds
push
divb
dec
mov
jb
movsb
mov
cld
mov
pusha
add
mov
jns
lods
add
test
and
xchg
xlat
push
inc
xor
inc
stos
fcoms
jle
outsb
movsb
push
pop
adc
clc
out
cmp
adc
movsl
out
xor
outsb
lret
xlat
cmpsl
daa
mov
ficoml
sbb
cwtl
adc
and
cltd
sbb
shrb
and
ja
jae
push
adc
cmpsb
imulb
in
insl
jno
sbbb
pmullw
ss
and
es
jae
out
aaa
xor
or
movsb
pop
xchg
jne
push
lret
mov
add
adc
dec
mov
xchg
sub
insl
mov
fnstcw
sbb
std
mov
xorb
dec
push
lret
int
mov
and
mov
fldl
fisubrs
stos
lds
push
mov
dec
outsl
mov
inc
cmp
loopne
sub
outsb
aas
mov
fidivs
imul
xor
mov
xchg
jns
sub
inc
push
in
shlb
add
stos
imul
out
adc
imul
lock
ds
movq
rcl
jge
pop
fwait
mov
stos
jl
lods
mov
xchg
mov
mov
sub
sbb
fs
inc
roll
rcll
xchg
ja
testb
iret
sarl
sti
fcompl
cltd
cli
inc
mov
mov
aas
cmpsl
mov
adc
pop
cmp
mov
repnz
adc
or
test
cmp
xchg
repnz
out
addr16
xchg
sbb
or
sbb
lock
test
lea
fmuls
stos
jne
pop
add
push
pop
imul
mov
lret
clc
push
cmc
jecxz
repz
pop
ss
mov
sbb
mov
or
sbb
fidivrl
push
es
insl
inc
sbb
fimull
lahf
xor
xchg
mov
mov
orb
fildl
es
and
rcl
mov
fildll
loope
inc
aaa
btr
push
out
std
or
aas
fidivrl
mov
mov
jge
or
add
cs
pop
sub
jnp
jnp
shrl
push
pop
xor
test
mov
push
push
mov
insl
mov
xor
inc
inc
sti
pop
mov
dec
cld
sub
daa
push
or
xor
push
dec
push
and
repnz
mov
mov
cmp
dec
mov
out
pop
sahf
mov
andb
cmp
lret
pop
ja
adc
rcr
jmp
lea
ret
loop
repz
test
jo
sti
jno
fwait
movsl
cmpsl
divl
loopne
cmpsb
mov
adc
fsts
mov
pop
sub
xlat
adc
lahf
cmp
loopne
adc
jae
sbb
xchg
pop
mov
mov
pop
jp
sbb
ljmp
xchg
mov
cmp
aaa
or
or
jp
push
das
xor
push
mov
enter
push
pop
fs
xor
push
xchg
mov
cmp
adc
xchg
outsb
xchg
push
dec
ret
test
popfw
xchg
std
jmp
cs
sbbl
push
dec
inc
imul
mov
xchg
mov
xchg
and
in
mov
scas
fwait
push
iret
scas
xchg
add
add
pop
xchg
stos
and
adc
adc
mov
sub
bound
push
sahf
int
lret
mov
movsb
loop
inc
orl
xchg
or
outsl
testl
mov
in
jle
adc
into
icebp
mov
pushf
lret
push
pop
aad
test
mov
lods
jbe
stos
pop
xchg
xor
dec
jmp
gs
addr16
push
stc
xor
jg
mov
mov
mov
cmp
fs
xchg
inc
cmp
mov
into
pop
lret
outsl
leave
adc
cmp
and
fwait
push
or
pop
call
sbb
shll
mov
push
test
xlat
inc
scas
shll
jge
lea
lock
mov
mov
rcll
iret
or
out
std
sub
add
popa
cmp
mov
or
jb
popf
push
inc
mov
fildl
add
es
cltd
xchg
jo
daa
nop
shr
push
jns
mov
push
test
push
xchg
mov
add
sub
jns
jle
sbb
jmp
mov
mov
jmp
pop
lret
bound
jecxz
loopne
adcb
les
cmpsb
mov
or
mov
fcmovu
movsb
cld
icebp
popa
loope
push
inc
mov
and
pop
lret
es
gs
xchg
xor
jl
cmp
fs
push
pop
mov
cwtl
jae
push
xor
fsubrs
sub
pop
sbb
stos
push
call
inc
inc
xor
jmp
lods
in
cmp
rcr
movsl
xor
adc
stc
mov
lods
ljmp
mov
les
test
bound
fstl
stos
adc
subb
and
cld
push
aaa
cmp
mov
loop
mov
loopne
jo
pop
xchg
adc
shl
sbb
das
mov
out
lods
dec
pop
pop
repz
cmp
fs
xchg
bound
pop
movsb
mov
and
sbb
loopne
sahf
cld
test
sbb
and
cmp
pop
movb
or
inc
insb
lcall
fdivrl
cmp
shlb
aad
std
int
pop
xor
sahf
cmc
inc
push
in
pop
jne
jb
iret
das
ljmp
std
nop
mov
dec
xchg
ret
in
xor
dec
or
push
mov
frstor
adc
xchg
pop
arpl
lods
sarl
xchg
ret
hlt
xchg
add
mov
dec
test
test
loopne
or
subl
iret
divl
cltd
jae
push
mov
cmp
and
divl
mov
imul
mov
cmc
xor
in
loopne
sbb
test
lods
inc
leave
sbb
hlt
lods
fstpt
or
mov
fdivp
clc
cld
sbb
leave
out
dec
pop
or
lahf
cld
pop
and
mov
pop
mov
movaps
adc
add
add
shll
fistl
icebp
xlat
mov
sub
and
lcall
mov
and
cmpsb
std
out
inc
add
mov
insl
sbb
lock
sahf
mov
sub
jecxz
aas
fstps
imul
mov
or
outsl
lock
add
insb
dec
or
sbb
push
push
repnz
into
out
aam
repz
push
mov
in
mov
mov
lock
pop
std
push
sub
pop
sub
sub
push
shlb
outsb
loop
popa
xchg
cmpsl
mov
push
push
inc
mov
daa
push
adc
out
pop
fmul
push
popa
add
inc
arpl
push
or
mov
push
sub
and
push
shl
movsl
sbb
cmpb
mov
fdivr
jno
sbb
aaa
inc
pop
sub
jnp
scas
or
sti
xor
or
dec
les
xchg
rcr
inc
out
stos
mov
fdivs
inc
pop
xchg
and
or
inc
xor
aad
pop
push
cs
fisubrs
inc
sbb
jne
mov
adc
adc
or
xchg
mov
push
push
inc
mov
pop
and
int
pop
ljmp
icebp
inc
ds
jne
inc
and
cmc
repz
sysenter
adc
inc
icebp
or
pop
shrl
xor
jb
or
in
pop
mov
lock
aaa
out
fistl
push
push
popf
jnp
outsl
mov
fcoms
shl
mov
mov
fwait
mov
fidivl
or
leave
xor
jg
testl
mov
fdivs
fs
jb
leave
fidivs
insb
pop
cmpsl
int3
mov
jnp
leave
mov
movswl
push
mov
insb
lahf
popa
inc
push
in
aaa
adc
and
in
arpl
cmp
dec
mov
sbb
sbb
xor
xchg
xchg
add
inc
add
sbb
push
test
test
pop
in
and
push
lret
data16
iret
cmp
inc
lcall
adc
test
out
pop
push
mov
xchg
lods
add
dec
pop
push
cmp
jge
lods
filds
xor
inc
flds
jecxz
mov
div
ja
dec
jg
fstl
hlt
stos
xchg
lret
mov
popa
xor
mov
dec
mov
xlat
cmpsb
xchg
cli
aaa
dec
adc
xor
mov
push
aad
jb
aas
jmp
and
iret
xorl
scas
pop
icebp
lahf
push
inc
mov
les
xor
outsb
inc
xor
adc
adc
pushf
xor
rol
cs
push
sub
dec
arpl
sbb
xchg
or
adc
jne
and
shlb
push
add
xchg
loop
ds
bnd
fcmovne
adc
rcll
int3
sbb
fadds
aas
xchg
xor
inc
pop
pop
jmp
in
mov
scas
xchg
add
ljmp
cwtl
mov
pop
int
aam
add
xchg
jecxz
out
fnstsw
push
fsubrl
dec
mov
mov
mov
movsl
mov
dec
bnd
jns
repnz
into
inc
sub
mov
mov
dec
data16
mov
and
adc
cli
sub
dec
xchg
insl
mov
or
outsl
sbb
insb
sti
ja
imull
mov
rolb
scas
sub
adc
hlt
loopne
adcl
mov
fsubs
sbb
inc
mov
adc
lock
addr16
inc
aaa
pop
call
xchg
ja
adc
mov
jle
fldt
rorb
repz
shrb
pop
or
sbb
popl
sub
loopne
sub
popl
daa
inc
mov
rolb
lret
ss
sarl
xor
inc
les
cmp
xchg
pop
cli
sbb
ret
or
push
jb
insb
push
jne
lcall
xor
es
jbe
scas
insb
aaa
adc
cmp
test
jl
cmpsl
adc
mov
add
daa
lock
out
pop
or
lock
shlb
outsl
ja
or
outsl
mov
sub
divl
in
hlt
lahf
imul
test
jb
cltd
iret
mov
pushf
mov
leave
push
xchg
xor
cmp
xorb
xlat
jmp
jns
mov
dec
nop
sahf
mov
mov
jg
mov
ret
inc
xchg
push
mov
mov
mov
fistpl
adc
sub
inc
sub
and
stos
insl
push
int3
push
js
bound
js
repnz
xchg
shll
loope
jmp
loope
ja
iret
jne,pn
or
fs
std
push
push
cmp
mov
jno
push
dec
mov
push
push
xor
pop
test
push
xchg
or
cli
icebp
cld
cld
xor
sbb
inc
subb
and
lahf
in
or
mov
mov
dec
push
lahf
inc
and
cld
notl
shll
or
inc
cmpsb
ds
or
mov
outsb
or
out
push
out
cs
bound
or
xor
jg
js
jbe
movsb
or
add
aad
movsb
decb
mov
push
int
and
jb
adcb
mov
push
leave
push
cmpsl
cld
dec
stc
fimuls
fwait
xchg
cmp
push
push
mov
lods
in
push
dec
fs
xchg
push
in
aam
or
outsb
or
jmp
pop
mov
jmp
stos
inc
xchg
mov
or
cld
inc
pop
or
mov
push
mov
jmp
xchg
or
mov
leave
inc
mov
push
and
jns
pop
pop
movsl
cmp
out
stos
out
mov
fisubs
sbb
fldcw
outsl
mov
dec
push
je
aam
push
lahf
aaa
pop
clc
dec
jae
or
pop
pop
sub
dec
je
ja
cltd
adc
leave
in
xor
mov
jp
mov
inc
xchg
sub
jbe
mov
mov
gs
jmp
mov
jno
cmc
pop
mov
mov
pop
jle
xchg
pop
cli
shl
aad
lcall
adc
xchg
mov
pusha
in
inc
lcall
jb
out
push
cmpl
lds
jmp
and
imul
lahf
cltd
je
mov
flds
and
aam
push
adc
jne,pn
jo
mov
ss
cmp
cmpsb
in
inc
mov
or
pusha
push
ror
cmpsl
adc
arpl
gs
and
sub
cmpsb
lods
or
out
mov
shrb
loop
xor
dec
lods
out
adcl
jmp
pop
orl
gs
adc
cs
pop
ja
jae
test
rorb
cmp
test
mov
mov
dec
ljmp
add
push
jmp
cld
testb
stos
jmp
lea
mov
mov
in
and
xchg
push
outsl
jecxz
test
fwait
push
lea
mov
xchg
test
jno
mov
push
jl
fcoml
mov
insb
cs
mov
xchg
lock
repnz
add
mov
out
xchg
mov
push
push
icebp
pop
loope
or
or
repz
push
jbe
cs
int3
fmul
dec
add
orb
clc
lods
movsb
dec
add
mov
test
mov
or
jg
shr
mov
dec
stos
daa
inc
xor
xor
jmp
stos
pop
jg
jl
cmp
lret
fcmovnbe
js
psubd
mov
mov
dec
jle
mov
dec
mov
data16
repnz
mov
pop
stc
shlb
push
mov
cmp
ret
push
xchg
xor
mov
sub
inc
sbb
mov
scas
loop
movsl
push
cwtl
xchg
push
in
sub
lret
and
push
ja
lods
int3
insl
pop
mov
push
pop
push
and
pop
icebp
popa
jbe
jp
imul
insl
push
loop
stos
cmpsb
out
or
int3
jmp
xchg
pop
movsl
push
movsb
mov
fisttpll
adc
and
adc
jge
cmp
mov
push
jns
cld
les
fwait
rcrb
pusha
mov
cmp
lods
ret
xchg
xor
jg
mov
scas
push
fisttpll
cwtl
mov
js
xchg
bound
je
fistpl
aaa
hlt
cmp
sub
sbb
sbb
hlt
jae
jae
xor
or
cmpsb
xor
or
dec
xchg
mov
mov
xchg
out
and
in
add
xchg
popa
lret
cmp
push
xor
and
lahf
sub
aaa
aad
inc
jbe
or
cmc
in
adc
ret
xchg
xchg
bound
inc
add
mov
ja
bound
cmp
jae
sbb
pop
aad
popf
xchg
mov
push
and
lahf
sub
nop
fs
stos
stc
fwait
insb
xor
mov
push
xchg
repz
xor
mov
push
pusha
dec
daa
lods
scas
stos
add
push
jns
and
xlat
mov
inc
and
mov
add
jne
xor
inc
lods
into
std
dec
cmp
xchg
icebp
push
shlb
mov
aam
lcall
inc
pmaxub
pop
fwait
cmc
mov
dec
and
xchg
sub
addl
mov
xchg
fwait
mov
mov
aad
mov
jne
xor
jbe
pop
sbb
mov
pop
add
faddl
mov
cs
shlb
clc
loop
or
push
and
enter
jae,pt
and
test
subl
sbb
pop
sub
mov
cmp
lock
mov
cmpsb
add
add
fwait
sbb
sub
in
daa
bound
test
and
lahf
mov
cld
mov
shlb
sbb
or
idiv
popa
dec
test
jmp
push
jnp
mov
out
xor
out
inc
mov
cmp
push
and
mov
pop
pop
jnp
add
les
jecxz
add
xchg
nop
cmp
ror
addl
mov
push
or
adc
sbb
inc
cmc
jecxz
adc
jle
addr16
cmpsb
mov
out
lods
pop
scas
lcall
int3
sbb
cmp
lock
push
pop
pusha
rclb
push
mov
mov
subl
lret
and
dec
stos
pop
xlat
es
pop
mov
clc
inc
xor
popf
push
pop
inc
add
rclb
push
jge
pop
negb
or
cmp
mov
sahf
mov
cli
cmpsb
imul
ds
lds
test
out
add
push
call
or
and
push
inc
adc
pop
and
inc
lods
jns
dec
xor
and
cmp
aaa
sbb
addr16
push
shlb
mov
mov
dec
cmp
sub
pushf
ds
sub
nop
and
jmp
fs
sbb
mov
jg
mov
es
test
loop
push
std
sbb
pop
addb
xor
shll
and
jp
sahf
jge
mov
xchg
dec
popf
cs
or
insb
sahf
xchg
adcl
fs
or
pop
out
cli
jo
mov
lcall
sbb
pushf
mov
lock
cld
bound
xor
in
out
inc
fnstsw
mov
dec
lds
jae
xlat
adc
imul
mov
out
lods
sbb
addr16
shrl
repz
sysret
ds
and
test
pop
push
in
call
repz
jp
push
push
andl
jle
dec
stc
stos
dec
jle
push
sbb
stos
cmp
xchg
xchg
sub
mov
movb
movsb
faddp
addr16
int3
xchg
mull
add
inc
sub
cmp
jb
test
dec
adcb
iret
js
mov
xor
xor
shlb
mov
xchg
cmp
lahf
pop
aad
test
icebp
aad
inc
mov
and
push
std
icebp
dec
cltd
pop
stos
ja
cmpb
or
addb
pop
adc
jl
mov
lcall
fnstsw
orb
jmp
xchg
movsl
sbb
mov
inc
std
adc
je
pxor
mov
sarl
outsb
test
or
sub
jno
in
notb
mov
pop
int
pop
cmp
cmpsb
lret
fiaddl
dec
sub
or
cmp
push
test
stc
mov
fmuls
xchg
xchg
sbb
mov
or
jp
mov
and
fsts
shlb
push
adc
sarl
pusha
gs
pop
adc
mov
xor
cmp
jp
dec
or
stos
cmpsb
pop
repz
cs
in
in
xchg
dec
and
test
shll
mov
mov
loopne
xor
xor
filds
sub
loope
divl
test
bound
push
cmpsb
and
mov
pop
inc
aad
iret
add
add
mov
push
adc
test
jge
aad
jl
movb
int3
adc
add
icebp
sbb
popa
pop
inc
inc
xchg
inc
std
sub
dec
xor
loope
mov
sbb
leave
adc
push
xlat
xor
ret
jmp
lret
jbe
nop
sbb
xor
testl
xchg
pop
imul
sub
or
push
loope
lahf
aas
xchg
add
leave
xor
movsl
stos
lds
adc
adc
dec
push
mov
nop
repz
push
bnd
sahf
popf
test
xchg
add
cmp
inc
test
pusha
cmp
jno
lods
push
lcall
rolb
loope
jg
cld
xlat
out
fistps
or
sub
mov
pusha
mov
js
jecxz
ljmp
pusha
or
and
jmp
jp
into
aas
dec
in
inc
lods
je
and
aam
push
scas
dec
addps
jp
std
push
js
fs
and
dec
sbb
aad
ret
mov
xchg
jg
mov
push
add
push
mov
jb
add
out
pop
mov
xor
rorl
nop
cltd
sbb
cmpsb
gs
cli
cmpsb
lret
out
rcl
dec
mov
arpl
mov
lahf
adc
jecxz
cmpsl
scas
inc
outsl
sbb
mov
lods
inc
adc
xchg
inc
subl
adc
adc
lock
aaa
adcb
das
push
lods
in
rcl
cmp
lds
inc
les
lods
jb
mov
mov
cmp
mov
pop
push
mov
cmovnp
shll
out
sbb
loop
mov
pushf
test
call
jmp
add
js
add
lods
inc
pop
push
loope
and
imulb
lret
hlt
cmp
xor
xor
dec
aam
push
loop
mov
mov
jl
iret
movsb
push
test
ss
mov
ljmp
sti
push
pop
cmpsb
sub
lcall
iret
jns
sub
cmpsb
mov
jns
lret
fldcw
in
aas
sbb
in
adc
inc
inc
push
jg
fdivs
bound
mov
push
xor
jl
lret
mov
jno
sahf
inc
fistps
outsl
outsl
cmpl
insl
call
sbb
cmp
jbe
jecxz
fnstcw
jnp
sbb
cmpsl
insl
insb
int
dec
or
add
stos
int
hlt
add
inc
add
mov
or
jbe
jg
fistpl
xchg
outsb
jne,pt
cmc
add
and
popa
aaa
and
outsb
inc
stos
scas
sbb
mov
movsl
or
lods
mov
mov
xor
fidivrs
push
sub
out
pop
cmp
pusha
lds
enter
ret
mov
and
mov
mov
mov
cmp
inc
ljmp
fidivl
cmpsb
movsb
pop
ds
jns
cmp
aaa
lods
enter
or
xor
jnp
push
dec
sbb
adc
fmull
hlt
mov
sbbb
cmpsl
fwait
mov
mov
loope
addl
dec
mov
mov
dec
gs
cmc
imul
sub
lea
xlat
pop
pop
ljmp
arpl
out
pop
cltd
push
add
js
addr16
xchg
add
mov
mov
test
clc
xchg
and
rcr
adc
or
test
in
jecxz
test
dec
mov
adc
xor
push
cmp
aas
cli
lret
popf
and
addr16
scas
scas
in
ss
negl
jle
fnstsw
push
pop
js
pop
jae
into
fcoml
mov
das
add
lret
lret
fwait
iret
cmp
cmpsl
xor
addb
sub
sbb
adc
enter
xchg
dec
push
mov
xchg
jno
jae
ss
and
and
sbb
mov
xor
aas
rcll
xor
push
xchg
bound
pop
insb
insl
clc
test
inc
dec
int3
sbb
cmp
push
push
inc
sub
mov
pop
roll
leave
cld
dec
dec
push
shrb
mov
cwtl
add
xchg
adcl
scas
pop
pop
push
ss
imul
bound
sbb
sbb
iretw
jb
add
mov
test
enter
push
mov
or
add
and
mov
addr16
fwait
push
xchg
pop
stos
xor
jg
aas
push
pop
testl
cmp
imul
rclb
push
movsb
xor
scas
jae
xchg
loope
push
hlt
or
mov
cmp
mov
add
lea
push
xchg
mov
or
rolb
push
das
dec
adc
dec
or
ljmp
mov
movsb
mov
cmpsl
insb
test
test
fmulp
and
negl
mov
ficoml
cld
popf
jo
xchg
leave
lcall
faddl
stc
xlat
sbb
push
sub
push
push
push
inc
xlat
mov
jae
inc
or
mov
negb
cld
cmp
sbb
xor
mov
mov
sub
jmp
movsl
cld
lret
movsb
mov
or
outsb
insl
ljmp
pop
aas
cmc
pop
xor
xor
sub
js
sbb
or
push
mov
popf
mov
lret
pop
jnp
lcall
sub
test
push
arpl
ret
shll
cmpsb
jbe
mov
insl
jmp
test
test
loope
dec
int
cmpsl
out
imul
leave
jecxz
adc
idivb
mov
mov
data16
pop
popa
inc
loop
aaa
xor
sub
aas
mov
mov
mov
stc
ret
insl
sub
adc
dec
sbb
mov
push
pop
ror
cltd
pop
sub
xor
fcmovb
jnp
loope
mov
insb
jp
lcall
add
xchg
test
testl
jne
push
das
lods
loop
mov
mov
les
pusha
int
lahf
lods
pop
ds
sbb
sbb
call
mov
sbb
fstpt
movsl
pop
push
xor
mov
adc
out
cmpsl
mov
sar
cs
sub
enter
cltd
sti
js
pop
add
xchg
mov
popf
call
lret
outsl
cmp
aam
or
cmpsl
cli
in
and
lcall
sbb
sbb
mov
cmp
xchg
xchg
arpl
adc
call
cld
sbb
das
adc
fbld
je
scas
dec
sub
mull
cmpsl
aam
rorb
jmp
cmp
out
ret
push
daa
jnp
push
cmp
out
dec
pop
lret
xor
shrl
sbb
sbb
int3
xchg
cmpsb
jne
shll
pop
lea
or
lahf
sbb
push
fst
test
inc
arpl
and
pop
and
fistpll
mov
sub
pop
adc
dec
popa
xor
inc
push
bound
iret
ficoml
add
aam
outsl
hlt
jl
pop
cmp
xchg
inc
xlat
aam
test
and
repnz
sahf
cmp
sti
pop
add
cli
sti
xor
xchg
ss
in
mov
test
repz
cwtl
in
lea
xor
popf
adc
mov
mov
xor
jo
push
mov
sbb
inc
lds
add
gs
scas
lcall
add
aad
sub
adc
es
mov
lea
xchg
pop
sub
jmp
pop
sub
aam
add
dec
sbb
jne
push
xor
xor
push
sbb
dec
lds
xchg
enter
jl
add
and
jmp
jae
mov
inc
iret
add
dec
xchg
imul
xchg
mov
mov
jg
rorb
xor
lds
stc
push
sub
int
ljmp
arpl
inc
push
sub
repz
mov
inc
scas
rorl
dec
or
sbbb
dec
jmp
leave
adc
xor
lahf
dec
fisubl
scas
adc
adc
enter
or
cs
cmp
sub
ret
std
sti
mov
pop
int3
in
fcoml
mov
dec
ds
lea
inc
xchg
xor
test
movsl
lret
add
xor
adc
pop
mov
jg
rcll
xor
pop
dec
sbb
adc
mov
mov
fistl
xchg
negl
xchg
adc
mov
push
mov
adc
xchg
neg
jmp
xchg
inc
add
and
inc
jae
stc
add
xchg
loopne
xlat
jne
mov
daa
lahf
ja
xor
loop
in
cmpsb
in
push
mov
jae
les
adc
enter
mov
outsb
imul
mov
xlat
aam
pushf
add
in
add
out
fsubrp
repz
xchg
out
ror
sub
inc
dec
int3
adc
mov
sbb
dec
add
and
roll
int3
jb
push
pusha
popa
or
cmp
leave
stc
push
jno
andb
fs
mov
push
js
pop
cmp
push
jne
inc
cmpsb
aad
leave
movsl
pop
popa
shr
mov
sub
xchg
adc
jl
push
pop
jo
arpl
mov
addr16
imul
xchg
jnp
sub
inc
ret
call
pusha
std
sbb
std
pop
movl
lods
or
ljmp
fwait
jle
pushf
pop
mov
je
jne
mov
cwtl
sahf
call
jno
addr16
sbb
fdivr
mov
dec
dec
xorb
pop
sbb
mov
mov
pop
add
test
xor
gs
in
cs
add
mov
int
or
das
pop
sub
push
stos
stos
mov
scas
sub
mov
jp
outsb
into
xchg
xorl
or
jns
imul
scas
stc
xor
push
test
pop
lods
or
push
xchg
adc
ja
in
hlt
jl
stos
out
aam
loop
dec
fwait
sbb
xor
data16
mov
test
mov
inc
test
repz
xchg
insl
movsl
in
mov
mov
mov
adc
mov
and
or
mov
mov
popf
cli
les
dec
jbe
mov
add
int3
in
pop
jo
jmp
std
ljmp
jae
stos
push
sub
in
outsb
out
movsb
sarl
inc
data16
loop
dec
fidivl
mov
mov
out
sub
dec
or
adcl
rcrb
roll
js
in
lret
je
mov
push
mov
pop
xchg
pusha
mov
jae
dec
loopne
icebp
mov
xchg
inc
xchg
rcrl
cmpsl
dec
loope
fmuls
into
mov
xchg
cmpsl
jl
mov
push
adc
xchg
lea
inc
jmp
xor
sub
bound
pop
mov
cmp
pop
lea
pop
fwait
lret
es
test
lock
cmc
fsubrs
testl
or
jo
mov
adc
sub
inc
pop
mov
push
daa
into
and
inc
in
xlat
icebp
and
jmp
xchg
inc
and
test
loop
xchg
xchg
shlb
mov
ja
scas
dec
cwtl
cld
add
fiadds
and
inc
cmc
insl
inc
repnz
push
in
mov
fcompl
arpl
clc
xchg
lock
aas
xor
pop
inc
filds
ud2
mov
or
ljmp
push
ljmp
cwtl
loop
lahf
mov
js
adc
inc
cwtl
pop
pop
sub
cmp
aaa
loop
xchg
lods
sub
mov
jns
lcall
pusha
fldenv
cli
sub
xor
add
fwait
cwtl
mov
fldenv
cmp
insb
das
mov
ret
arpl
mov
sub
fs
movsb
pop
jbe
add
xor
pop
clc
hlt
jg
daa
dec
mov
push
das
pop
imul
lret
ftst
fs
das
xchg
jbe
lret
jle
insb
pop
mov
adc
xorb
cmpsl
fcompl
mov
pop
cmp
jle
mov
lea
outsb
movsl
sub
cltd
outsb
adc
ja
dec
mov
mov
pop
sbb
fstpl
push
adc
mov
mov
aaa
mov
mov
ret
or
cmp
xor
ss
xor
addr16
inc
pop
out
pop
jmp
xchg
lods
inc
inc
xchg
out
sbb
ss
scas
aad
imul
or
pop
ret
dec
in
fwait
and
mov
pop
outsb
mov
fistl
pop
sbb
iret
xor
add
lea
and
pop
in
mov
dec
sbb
xchg
int3
add
addr16
push
in
pop
jp
or
push
std
fwait
in
pop
cwtl
out
pushl
cli
adc
hlt
mov
cs
shll
stos
sbb
fimull
aas
sbb
insb
test
nop
dec
je
std
adc
cmp
and
out
je
or
mov
inc
push
sub
pushf
dec
js
iret
inc
xchg
out
imul
movsb
jmp
mov
adc
cmp
mov
lock
xlat
fbstp
or
mov
fldcw
fcom
mov
push
jbe
pusha
lods
push
mov
pop
pop
and
mov
dec
jl
inc
cmp
and
aaa
iret
mov
pop
mov
addr16
mov
faddl
pop
sti
pop
arpl
jo,pn
enter
pop
push
rcl
ljmp
fnsave
sbb
push
push
push
sbb
adc
lcall
enter
jne
mov
cmpsl
push
push
push
fisubs
imul
mov
cmp
es
lcall
mov
lret
mov
lret
call
inc
mov
lret
aaa
testb
pop
rcrl
add
mov
inc
imul
cmp
sbb
flds
mov
xchg
stc
inc
lret
adc
ljmp
ljmp
push
add
insb
in
das
insb
movsl
std
pop
leave
sti
insl
ret
pop
dec
insl
fwait
inc
mov
les
inc
xor
push
push
je
jl
pop
cmovge
mov
mov
call
jg
or
sti
sub
mov
decl
out
mov
inc
lcall
pop
ds
xor
loopne
mov
inc
inc
and
and
jecxz
loope
sti
mov
out
xchg
pop
sub
movsb
cmp
fs
cmpsl
dec
cmpb
int3
jecxz
pop
mov
sti
movsl
mov
jbe
jle
test
push
inc
sbb
pop
mov
pop
enter
xchg
jns
sub
jecxz
rcrb
sub
ljmp
out
ljmp
mov
jp
mov
xchg
jg
cmp
mov
sbb
mov
mov
push
js
cmp
insl
imul
xchg
cmpsl
mov
les
into
mov
mov
push
sub
inc
aas
sarl
push
mov
nop
ljmp
jo
pop
sarl
je
and
and
outsb
out
and
leave
cmpsb
or
mov
lahf
mov
clc
int
xor
das
xchg
xchg
xchg
push
insl
mov
push
lret
out
pusha
mov
jmp
mov
push
push
imul
mov
pop
add
hlt
inc
cwtl
cvtdq2ps
mov
and
int3
shr
dec
sbb
push
xchg
loopne
add
hlt
jbe
popf
sub
jb
ja
pop
push
xchg
scas
sti
ljmp
lds
lods
xor
add
scas
in
mov
sub
insl
das
add
jns
rcll
mov
cli
stos
and
push
rcrl
int3
cmpsb
xchg
add
adc
imul
mov
in
mov
out
clc
inc
leave
mov
push
outsl
mov
push
lret
jg
cmp
sarl
lret
or
push
test
iret
js
mov
into
fsubrs
mov
fwait
nop
loope
hlt
imul
ret
nop
dec
inc
lds
aaa
xchg
jle
cmp
popa
ja
mov
cmp
cs
xor
and
add
pop
fwait
add
rcrl
aaa
adc
cwtl
mov
rcrb
lods
js
cmpsl
outsb
mov
rorb
inc
mov
lock
mov
pop
inc
adc
dec
sub
xor
xchg
sub
mov
mov
xchg
movsb
dec
pop
imul
mov
sti
gs
iret
and
repnz
mov
jne
dec
in
sbb
inc
cmpsl
add
and
repnz
outsl
xlat
xchg
cmp
add
jecxz
or
hlt
mov
daa
shlb
stos
or
add
push
and
mov
lahf
int3
shl
fstpt
jb
jb
jno
inc
jnp
adc
pop
or
fwait
mulb
sbb
pop
call
pushf
jns
adcb
or
addl
mov
negl
mov
es
xchg
divb
push
cmp
orb
or
jne
test
mov
mov
ret
das
hlt
loop
inc
adc
sub
lods
loope
insb
mov
push
movsb
mov
popa
pop
nop
jmp
jns
sub
ljmp
xchg
bound
scas
mov
icebp
pop
adc
mov
mov
inc
mov
add
fldenv
fistl
lcall
push
cmpsl
cld
xor
jo
adc
jecxz
xchg
std
cmp
lods
fadds
push
push
mull
cmovp
pop
adc
lcall
xchg
notb
pop
scas
pop
xor
mov
jae
shlb
and
lods
jp
mov
addr16
loope
iret
cmpl
mov
xchg
jae
lcall
cli
movsl
or
inc
rolb
lds
das
cmpsb
stos
test
iret
scas
popa
jne
imul
ds
dec
mov
std
lret
aad
mov
sbb
or
pop
pop
pop
jb
fsubrs
inc
mov
dec
out
sub
add
sub
dec
push
enter
inc
out
repnz
xchg
loopne
nop
frstor
xor
in
inc
jmp
or
adc
pop
push
clc
lahf
aam
inc
in
mov
adc
add
pop
fnsave
fisubrs
mov
lcall
in
xor
jmp
cmp
xchg
dec
pop
xchg
aad
in
lds
or
xor
repnz
mov
push
jg
bound
jg
xorl
and
pop
mov
pop
cmp
xchg
cmp
xor
mov
jecxz
jecxz
mov
adc
cmp
scas
repnz
andl
insb
xor
add
inc
sbb
cmp
push
cmp
jp
mov
add
inc
sub
and
add
in
inc
aad
fldenv
ljmp
sbb
cmp
adc
divb
and
je
popa
xchg
add
popa
jle
add
add
sbb
and
ds
and
push
adc
lods
pushw
dec
pop
sub
stc
dec
sbb
mov
pop
stc
outsb
mov
dec
inc
cmp
lret
or
inc
push
adc
aaa
je
fcoms
pusha
sbb
inc
bound
xchg
out
xchg
inc
pushf
lods
scas
inc
mov
in
jp
lock
sub
xor
hlt
pop
rcrl
mov
or
jns
jb
adc
movsl
xchg
cmc
out
adc
cmc
mov
stos
imulb
or
testl
sub
inc
and
jno
sbb
and
fistps
add
in
mov
or
mov
hlt
mov
xchg
arpl
and
and
xorl
jg
aaa
daa
js
mov
mov
inc
addb
movsl
cltd
add
loop
pop
and
adc
fildll
pop
outsl
ror
jp
cmp
xchg
ja
cmpsl
arpl
imul
dec
mov
dec
out
xchg
and
mov
out
mov
stos
dec
es
je
popf
lods
push
scas
or
loope
loope
insl
std
sbb
in
shlb
sarl
in
ljmp
xor
arpl
push
imul
arpl
sbb
jo
mov
jmp
sub
add
sbb
fmull
out
jno
sti
pushf
shll
xchg
jbe
clc
test
in
jo
mov
and
mov
shl
mov
pushf
jg
test
push
push
or
in
jle
dec
jp
loop
int
and
adc
pop
and
and
inc
mov
sub
loop
or
xchg
outsl
jbe
dec
les
adc
push
pop
and
pop
lret
sahf
gs
or
jns
sub
gs
dec
shll
mov
sub
push
xchg
mov
sbb
sti
scas
cmp
test
scas
push
pop
cs
divl
xchg
jb
in
or
ss
push
movsb
mov
fiaddl
push
pop
sti
jns
ljmp
xchg
mov
pushf
sub
test
mov
cmp
jmp
lea
mov
inc
sub
mov
test
jl
push
pop
mov
ss
sub
jns
fists
adc
movsb
pop
xor
sbb
insb
aam
dec
mov
fidivrs
xor
out
mov
sub
incl
sbb
inc
pop
sbb
inc
adc
dec
mov
xchg
insl
jcxz
dec
test
adc
int3
push
lret
popf
subb
xchg
mov
in
test
jnp
jg
rcl
adc
aad
inc
add
popf
out
sbb
jo
xchg
js
adc
aad
sub
xchg
ss
adc
sub
pop
xchg
mov
aas
mov
adcl
lcall
in
inc
loop
add
and
adc
or
aad
outsb
and
mov
mov
mov
in
mov
nop
fucomip
sbb
sbb
addr16
or
xchg
in
mov
js
out
sub
ret
push
mov
add
nop
fnstenv
insl
push
stc
loope
jmp
mov
dec
or
loopne
sbb
gs
push
push
xor
pusha
and
inc
clc
in
mov
movsb
into
mov
subl
jge
pop
into
dec
mov
aad
mov
fbstp
cmp
shll
femms
rcl
dec
pop
fwait
fwait
jo
xor
in
aaa
sbb
mov
add
les
rorb
into
jge
cwtl
pmaxub
insl
mov
ret
lahf
into
outsl
jecxz
mov
pop
and
push
dec
jle
or
dec
cmpl
ds
mov
int
nop
mov
adc
out
push
icebp
notb
sub
cld
push
dec
mov
call
dec
add
cmp
cmp
std
je
adc
mov
inc
hlt
shrb
out
insl
jecxz
xor
sbb
adc
xor
sub
mov
lods
push
add
mulb
fsubrl
cld
pop
icebp
cs
out
lods
js
or
cli
push
cmpsl
jae
imul
pusha
pop
mov
inc
push
das
jnp
rcll
incl
aaa
pop
mov
leave
xorb
cwtl
jae
jge
cmc
fwait
sbb
mov
xchg
hlt
jle
out
cmp
sti
andb
and
jnp
pop
es
sbb
sbb
mov
pop
idiv
fcomip
cwtl
lds
push
adc
mov
sbb
mov
nop
push
fisttps
adc
adc
test
lods
fstps
xor
mov
bound
in
sbb
int3
jo
add
add
mov
cmp
test
cmp
jg
fs
imul
add
lock
fcmovnbe
js
lock
ja
popf
dec
imul
xor
cmc
les
cmpsl
pop
pop
jns
insb
jno
xor
icebp
pop
pop
adc
cmp
sub
mov
push
push
xchg
ret
push
inc
adc
mov
popf
hlt
adc
and
into
je
shrb
out
and
sub
mov
bound
fwait
jne
into
xor
fnstenv
stc
add
test
lods
nop
xchg
jl
rcll
xchg
add
jle
xchg
jne
jecxz
xor
sahf
cmp
jecxz
icebp
sub
and
jg
xor
ds
loopne
push
fistps
and
icebp
int3
imul
push
xlat
loop
mov
jl
pushf
loop
ret
lods
push
cwtl
sub
les
push
jmp
out
ret
jecxz
mov
mov
inc
enter
sub
enter
xor
xor
in
mov
in
jno
ss
inc
sbb
mov
insb
jns
imul
push
mov
mov
xchg
mov
pop
inc
aaa
inc
es
mov
sbb
push
cmp
inc
in
dec
push
stc
jbe
les
sub
xchg
test
cmpsl
xlat
fmuls
ret
mov
scas
dec
cmp
and
cmp
ss
push
or
mov
popa
clc
orl
sub
pop
jno
xlat
mov
pop
fisttpl
mov
movaps
popa
ja
incb
sarb
stos
and
sbb
xor
out
push
add
mov
push
xchg
adc
test
aas
add
mull
jp
divl
lds
loopne
push
icebp
mov
xchg
mov
mov
in
lahf
repz
add
aam
cmp
mov
sub
adc
dec
addr16
push
nop
test
mov
mov
cltd
popf
jb
cmp
movsb
pop
and
lock
xor
push
jae
pop
mov
roll
pop
loopne
sub
xchg
mov
mov
inc
xor
iret
outsb
xor
jne
inc
out
inc
out
mov
sbb
outsb
ret
out
mov
shrb
les
xor
inc
cmc
movsb
mov
out
cmp
movsl
mov
iret
sarb
hlt
imul
jge
into
popa
xchg
cmp
add
xor
ret
shlb
fnsave
or
adc
xor
jl
add
icebp
mov
je
and
pop
shlb
mov
pop
mov
sbb
test
cmp
test
xchg
mov
test
sub
cmp
mov
xchg
pop
ds
ss
cmc
outsl
inc
dec
movsb
sti
cwtl
add
int3
dec
call
push
pop
hlt
call
rcrb
idivb
in
std
stos
in
xchg
movsl
xchg
add
out
and
pushf
inc
dec
cmc
jmp
sbb
repnz
adc
clc
in
je
daa
and
cltd
dec
lods
test
xchg
repz
add
fidivrl
and
and
and
ret
nop
add
hlt
lret
cld
sub
mov
dec
sbb
repz
cmp
cmp
lods
arpl
ds
xorl
daa
dec
push
das
idivl
dec
jg
jecxz
pop
inc
test
pop
xorb
daa
pop
mov
push
les
cmpsl
xlat
sti
fnstsw
and
add
ja
fmuls
inc
insb
xchg
mov
leave
xor
scas
rcr
mov
mov
cwtl
mov
arpl
das
ss
test
js
sahf
aad
bound
insl
ds
dec
stc
clc
jnp
and
jne
fbld
xor
and
lods
std
mov
data16
popf
push
fcmovbe
out
cs
cltd
fcomp
inc
dec
push
adc
dec
lock
xchg
sub
pop
mov
lcall
cmc
enter
test
int3
mov
in
bound
sbb
xchg
aas
outsl
data16
sti
fwait
cld
or
cli
mov
push
xchg
outsl
xorl
loopne
ret
xchg
adc
sub
inc
push
mov
notb
mov
adc
xchg
mov
dec
mov
jb
mov
popa
test
xchg
inc
sub
mov
sbb
jo
mov
lods
xchg
add
clc
dec
jae
insb
fsts
mov
cmp
xor
jae
adc
jae
dec
xchg
daa
mov
in
mov
sbb
add
es
xchg
mov
dec
stc
aam
pop
stos
jle
ret
jbe
dec
jb
pop
add
mov
stos
mov
jns
mov
jmp
ret
lahf
mov
xchg
sbb
mov
loope
push
sti
cs
inc
rol
xchg
sub
pop
mov
pop
mov
push
jno
sub
dec
icebp
push
fwait
enter
jp
or
shlb
sub
aad
sbbl
sbb
sbb
dec
adc
mov
xlat
test
push
pushf
js
jbe
out
mov
push
cmp
roll
popa
and
in
inc
mov
popf
subl
sbb
dec
mov
and
mov
imul
cmp
cmp
mov
jmp
cmp
nop
out
sbb
in
pop
cmpsl
cmp
ss
js
adc
dec
mov
push
pop
xchg
or
pop
sbb
jle
in
pushf
dec
mov
pusha
lret
test
loope
add
pop
dec
sub
sbb
pop
push
sub
test
iret
fs
shl
daa
mov
jns
inc
fistpll
dec
adc
pop
imul
inc
loopne
inc
shl
or
mov
fs
xor
pop
adc
jbe
es
xchg
in
xchg
outsb
adc
lods
xchg
inc
adc
fistl
push
ss
and
frstor
add
test
jb
dec
int
inc
fcmovu
ds
pop
int
clc
std
add
sbb
inc
mov
gs
mov
mov
add
pop
mov
jno
lea
in
popf
xchg
xchg
out
sbb
inc
lcall
push
gs
test
jg
push
popa
mov
mov
push
mov
aas
add
loopne
push
xor
wrmsr
add
inc
xchg
into
ds
or
ljmp
cld
cwtl
int3
adc
push
int
push
pop
ret
adcb
jp
lea
fwait
sub
inc
ss
jo
das
inc
repnz
test
int
mov
xor
leave
sbb
lods
ret
popa
xchg
push
lea
jno
scas
pop
dec
jne
inc
pushf
xchg
gs
fcoml
arpl
or
loope
pop
and
or
ret
in
insl
iret
xchg
pop
jns
and
imul
aaa
sahf
js
out
mov
insl
out
push
lds
sbb
sarb
xchg
push
sbb
mov
sub
es
push
jne
mov
dec
mov
es
sahf
pop
mov
or
aam
pop
xor
lcall
cmpb
idiv
outsb
cmpsl
bound
add
jecxz
mov
repz
pop
inc
and
scas
sub
sti
shrl
icebp
dec
sbb
mov
stos
cltd
add
mov
xor
inc
rcrl
add
cld
mov
adc
outsb
xchg
aaa
jle
mov
add
scas
lcall
inc
mov
lret
leave
pop
pop
je
sti
outsl
xchg
adc
dec
gs
aaa
cmp
cmp
pop
xlat
sub
sbb
lahf
data16
mov
popa
inc
sbb
mov
aaa
repnz
mov
pop
subb
aaa
out
mov
mov
loopne
pop
repnz
dec
std
push
orl
dec
repz
inc
out
out
or
andl
jg
pop
pusha
lea
adc
testl
outsb
xchg
jnp
das
push
jl
push
mov
push
add
xchg
jnp
stos
shlb
insl
add
dec
iret
int
xchg
add
sub
jmp
adc
lret
xor
xor
jo
or
subb
daa
cwtl
loop
and
xor
jp
repnz
rorb
push
xor
movntps
xor
insb
pushf
adc
daa
sbb
popf
inc
ja
mov
loopne
je
in
push
push
push
fistpll
sahf
jg
mov
ss
in
scas
mov
jecxz
and
mov
mov
sub
push
inc
and
jle
dec
mov
rcrl
or
pop
imul
xor
std
add
insb
stc
adc
add
stos
mov
popf
push
and
pusha
daa
dec
loope
out
cwtl
popa
jmp
test
mov
loop
cmpsb
and
xchg
inc
xchg
xlat
dec
adc
lea
add
std
adc
mov
movsl
xlat
cmpl
sbb
and
ja
sar
data16
roll
adc
imul
jp
mov
lods
shlb
mov
mov
inc
pop
push
aam
pop
pushf
add
mov
fsub
xchg
xor
push
hlt
sub
cmpsb
pop
sub
test
hlt
lock
or
sbb
fninit
scas
nop
adcb
lods
add
sti
jne
fidivl
and
and
or
xchg
es
mov
int
ds
ljmp
and
repz
mov
addr16
loope
loop
ret
push
mov
enter
jno
jne
mov
js
cmp
mov
sub
in
sub
nop
lahf
sub
mov
push
lcall
into
in
jge
sub
xchg
hlt
add
xchg
pop
xor
mov
inc
cmp
sbb
cmp
push
pop
into
jecxz
sbb
or
sbb
push
push
and
push
dec
pop
mov
mov
sub
dec
stos
test
lods
cmp
dec
cwtl
mov
sti
sbb
and
testl
test
cmp
cmp
push
fstp
mov
in
cmc
sarb
dec
adc
in
sub
adc
pop
sub
sub
jns
mov
xlat
lret
and
and
xor
sub
push
inc
loopne
push
orl
push
xchg
movsl
cs
inc
sub
and
mov
mov
out
adc
fs
jle
addr16
add
inc
mov
and
andl
movsl
pushf
cmpsl
push
push
inc
sbb
add
out
mov
outsb
es
push
xchg
adc
cmp
jl
push
lret
sti
js
outsb
inc
mov
insl
add
cmp
mov
bound
push
mov
or
aad
ss
test
or
sub
xor
or
jl
dec
push
in
nop
aaa
outsb
xchg
decl
arpl
pop
sbb
aaa
lods
mov
adc
rcrl
fwait
dec
pop
imul
mov
dec
mov
aaa
xor
xchg
xchg
mov
add
mov
mov
or
add
add
and
shlb
pop
pop
cld
and
adc
xchg
adc
shrb
mov
cltd
push
cmp
fisubrs
xlat
xor
lock
out
pop
adc
mov
adc
xchg
pop
ret
or
ficompl
sarl
jmp
cmp
out
test
adc
loop
jge
sbb
cmpsb
js
pop
cmp
cli
stos
xlat
rol
adc
jb
daa
sbb
movsl
adc
or
divb
fdivs
sbb
inc
fs
pusha
in
gs
cli
call
pop
xor
rorb
aam
nop
xchg
mov
jmp
inc
mov
jmp
in
adc
imul
lea
scas
inc
mov
xlat
ret
es
jno
inc
arpl
add
push
cmpsl
xor
out
fsts
bound
pop
pop
mov
sar
ja
cmp
inc
pop
push
cwtl
fimuls
call
mov
sub
test
lret
daa
lcall
test
and
lret
fisttpll
sub
mov
or
das
fstp
popa
push
sbb
mov
dec
adc
adc
pop
into
aad
popa
mov
fwait
daa
jo
cwtl
stos
sahf
scas
movsb
scas
incl
fsubrl
jo
repnz
mov
xor
or
dec
mov
mov
and
xor
out
fimull
sub
int3
imul
repnz
adc
lahf
cli
je
inc
movsl
outsl
lea
cwtl
mov
enter
xor
jecxz
scas
mov
jmp
mov
or
push
ror
and
scas
iret
mov
arpl
mov
test
scas
mov
mov
sbbl
mov
mov
inc
enter
sbb
pop
inc
insl
dec
int3
in
dec
mov
cmpsl
push
scas
dec
fidivs
push
sub
mov
jle
call
cld
dec
dec
lea
jge
mov
pop
push
loope
and
scas
flds
ret
push
xchg
inc
popa
popa
inc
lds
pop
idiv
xchg
inc
sbb
getsec
addr16
ljmp
jl
mov
jb
pop
inc
push
pop
jg
sub
cwtl
mov
xchg
sbb
or
xchg
cmc
stc
shr
add
xor
stos
adc
mov
cmp
inc
cs
pushf
cmp
cmp
cmp
sbb
pop
das
scas
popa
fcoms
push
dec
sbb
int3
test
in
xchg
dec
xchg
clc
jecxz
cmp
mov
mov
pop
sub
sub
lods
rolb
add
repnz
pusha
xlat
sti
dec
sub
cli
je
xor
neg
push
push
push
adc
and
xchg
add
hlt
adc
imul
xchg
cmp
jg
sbb
inc
out
mov
ret
adcl
xor
mov
aaa
lea
push
jb
imul
push
adc
cmp
popaw
adc
push
fimuls
jp
push
or
pop
pop
mov
loope
inc
add
xchg
scas
bound
out
sub
mov
repz
iret
and
test
push
push
inc
dec
sbb
sti
jl,pn
out
xchg
jp
loop
mov
jp
xchg
or
push
sub
jbe
sar
test
pop
xchg
pop
sub
lock
sub
mov
out
mov
push
push
in
jo
shll
fsub
mov
ss
int3
jns
pop
stos
mov
fmull
int
es
lods
enter
push
dec
or
mov
push
mov
fnsave
inc
add
aaa
cmpsb
into
xor
ret
dec
insl
pop
add
pop
or
pusha
and
cmpsb
out
out
mov
pop
push
ja
xor
nop
fimuls
xor
scas
fs
sahf
jo
int3
sub
add
ja
mov
mov
xor
dec
mov
lcall
xor
pushf
xor
mov
test
bound
inc
dec
jae
int
cli
js
or
cld
jg
jge
and
pop
mov
pushf
sub
inc
js
int
fisttpll
inc
in
lcall
test
lea
fcomi
clc
jle
mov
or
sbb
negb
mov
jno
lahf
pcmpeqd
push
jbe
sbb
into
into
std
jnp
push
icebp
repz
mov
das
dec
mov
adcl
jmp
cmc
rorl
jbe
icebp
jg
inc
repnz
dec
push
xor
pop
pop
les
fstl
xchg
jo,pt
or
cmp
insl
js
in
push
pop
mov
push
fs
les
daa
jno
test
cs
or
sbb
jbe
fstpt
cld
arpl
ljmp
jnp
daa
gs
mov
mov
lret
lret
inc
call
cmpsl
mov
leave
fwait
daa
lea
xlat
imul
add
add
xor
xor
loop
sub
mov
or
repz
sub
add
or
out
icebp
jmp
aam
mov
mov
enter
mov
int
fs
lds
inc
ss
inc
aaa
pop
test
loope
push
stos
out
imul
pusha
xor
inc
movsb
imul
and
enter
mov
out
sub
cltd
ret
cmp
repnz
test
mov
xor
fistpll
rcll
mov
test
jle
loopne,pn
xor
pop
ds
in
dec
fs
in
ret
pop
nopl
cs
sbb
cmpsb
into
cld
xchg
xchg
jb
outsb
inc
xchg
dec
mov
inc
jp
jge
dec
dec
add
sub
into
dec
cmpsb
add
ret
pop
xchg
cmp
fwait
pop
adc
mov
and
mov
rcrl
scas
pop
cmpsl
lret
mov
sub
fwait
sbb
idivb
mov
dec
lods
fldt
push
mov
aad
insb
jg
pop
add
dec
mov
xchg
scas
ljmp
sbb
inc
cmp
fwait
lods
cmpsb
loop
sub
les
std
sarl
xchg
mov
outsl
push
pop
sub
mov
test
in
add
and
insl
sti
cmpsb
hlt
cmp
mov
clc
xchg
push
lahf
popf
stos
sti
inc
fstl
inc
push
jp
and
incb
pop
cmc
lods
cmp
sbb
pop
leave
sbb
fisubrl
out
and
daa
fwait
dec
xchg
aam
adc
imul
addr16
sub
mov
andb
fdivl
mov
mov
data16
cmp
jno
push
ljmp
pop
jne
or
sub
xor
imul
push
jne
adc
adc
lods
mov
mov
scas
pop
mov
mov
lods
or
mov
and
inc
dec
lds
mov
cmp
cmc
adc
fbstp
mov
dec
jecxz
dec
lret
scas
shl
mov
jns
add
mov
mov
or
aad
or
xor
fs
cmp
xor
es
xchg
stos
adc
out
shl
stos
pop
fsts
cltd
push
js
jb
sub
fldl
adc
xor
xorw
or
or
insl
xlat
sub
addr16
mov
insb
enter
mov
sbb
stos
movsb
cmp
je
cmc
out
mov
icebp
inc
fsub
inc
ret
fdivrp
sub
xchg
daa
mov
insl
movsb
data16
lock
popf
adc
shrl
pop
lcall
in
mov
xchg
and
movsl
cmp
mov
and
outsb
pop
xchg
ja
filds
pop
inc
sub
add
mov
mov
es
stos
out
or
icebp
add
push
push
in
movsl
cmp
add
mov
ret
cmpsl
ja
mov
cwtl
repnz
adc
sbb
xchg
pushf
or
inc
pushf
dec
inc
loop
orb
push
shrb
inc
inc
mov
push
sahf
mov
je
adc
aaa
test
mov
scas
push
xor
mov
mov
orb
ja
adc
add
add
fsts
mov
pop
lock
ss
or
popa
js
into
test
stc
aaa
add
or
enter
jne
add
rcrb
sub
add
test
int
aam
mov
inc
pop
lahf
shl
pop
xlat
ss
or
outsl
mov
mov
cmp
add
jp
mov
cli
in
enter
fadd
neg
jmp
mov
jle
repz
addr16
lods
xor
mov
jne
fdivrl
mov
stc
fs
push
cmpsl
pop
or
out
lds
sti
aam
adc
adc
and
jno
imul
je
dec
scas
rorb
imul
loope
cwtl
stc
hlt
sub
xchg
mov
sub
out
mov
jl
adc
pushf
scas
gs
xor
adcl
xchg
icebp
and
xor
xor
addr16
pop
cmp
loopne
cs
popf
iret
es
or
cli
or
lahf
mov
ljmp
cmpsl
sbb
scas
out
loop
cmp
hlt
lret
lods
loope
xor
cwtl
mov
ret
fucomi
lods
mov
test
nop
outsl
dec
pop
orl
scas
in
dec
jle
jl
inc
or
loop
loope
enter
mov
int3
dec
xchg
cmp
adc
in
pop
inc
orb
jbe
insb
fcoml
addr16
imul
outsb
lret
jne
subl
dec
lods
filds
jecxz
mov
push
mov
mov
add
cs
push
mov
dec
jne
jno
loope
test
mov
repnz
and
sub
xor
adc
mov
dec
cmp
cmpl
aaa
xchg
shll
je
addr16
repz
jnp
mov
out
adc
mov
icebp
dec
push
adc
xor
dec
int3
inc
dec
push
outsl
add
pop
mov
mov
mov
repz
cmp
xor
adc
fsubrl
stos
fsubrl
sub
cmp
ss
and
mov
imul
jecxz
or
test
jmp
lcall
and
cltd
xchg
outsb
pop
adcl
sub
xor
jle
lds
out
push
inc
mov
mov
aad
cmp
and
mov
xchg
mov
insb
dec
mov
lds
dec
add
inc
mov
add
push
outsb
dec
cs
fisttpl
fsubs
pop
loopne
jg
or
enter
sti
loope
cmpsl
popa
mov
divl
jo
pop
repnz
pop
cmp
addr16
stc
jmp
outsl
int3
xlat
jmp
cmpsb
adc
int3
and
inc
add
mov
xchg
push
sbb
mov
pop
mov
fcmovu
pop
inc
jecxz
cltd
cmpsl
sarl
xchg
inc
ret
movsb
gs
es
add
sbb
mov
pop
jns
out
testb
push
cmpsl
fdecstp
cmc
inc
push
xlat
shr
pop
cs
call
xchg
sub
out
repnz
xchg
ljmp
fdivs
sar
sbb
xorl
jmp
pop
out
mov
mov
push
or
roll
and
dec
ret
gs
out
cmpsl
dec
push
pop
das
aas
sbb
push
xor
stc
cli
lretw
mov
gs
std
xchg
mov
out
mov
mov
add
in
jle
adc
movsl
jnp
cmc
mov
test
in
push
ss
fbld
cmp
xor
mov
lret
pop
jne
sarb
dec
cmp
jle
xor
int3
xor
mov
mov
imul
int
and
inc
or
inc
fcompl
sbb
enter
aas
enter
mov
cmp
and
cmp
pop
cwtl
aam
notl
nop
rcll
mov
xchg
push
xchg
aam
cmpsb
outsl
inc
arpl
stos
jbe
jno
xchg
add
xchg
mov
clc
loop
fmul
insb
xor
push
pop
fisttps
vrcp28ss
mov
dec
int3
jbe
fdivrl
lfs
pop
or
adc
insb
lret
popf
ret
mov
or
and
lahf
add
ljmp
mov
test
stc
pop
xor
mov
dec
icebp
push
adc
data16
and
dec
cli
clc
out
arpl
add
mov
iret
out
xrelease
mov
ljmp
dec
andl
sbb
jg
ss
jle
or
fisttpll
outsb
add
jne
mov
dec
or
adc
adc
xchg
lods
mov
jo
xlat
mov
js
addl
push
mov
jp
sbb
loope
jecxz
pop
mov
lret
cwtl
add
pop
fs
enterw
mov
dec
jno
sbb
sbb
jns
and
lock
out
sub
imul
aas
js
jns
fwait
sbb
cmpl
jae
repnz
add
add
imul
bound
sub
inc
das
pop
push
imul
mov
mov
dec
rcll
imul
adc
and
test
bswap
loop
dec
data16
punpckhbw
stc
push
or
mov
sbb
fmull
dec
sub
mov
jecxz
stos
out
mov
xor
dec
push
xchg
fdivs
jl
mov
lods
push
mov
inc
sub
daa
in
adc
test
lahf
fildll
mov
out
out
jae
shll
sahf
stc
inc
push
push
pop
jmp
aad
cmp
xor
es
daa
sbb
sbbb
add
xchg
add
jns
mov
adc
nop
cs
enter
dec
mov
fidivs
test
dec
clc
sbb
sub
adc
fiadds
mov
pusha
xchg
loop
cmpsl
cld
pop
dec
js
xor
sub
mov
jbe
hlt
mov
dec
mov
jge
adc
adc
in
fdivs
jno
xor
sbb
fs
imul
mov
sahf
or
cmp
inc
mov
int3
repnz
int
popa
movsb
adc
push
stc
dec
jl
cmp
inc
rorb
adc
out
inc
jecxz
repz
pop
mov
test
out
lds
cs
inc
adc
push
pop
adc
cwtd
insb
jns
cmpsl
lahf
xor
adc
push
lock
lret
lea
xor
push
lods
in
jmp
xchg
xchg
adc
fldl
fdivl
xchg
jae
leave
andl
insl
xchg
mov
andb
pushl
lea
cmp
mov
push
sub
inc
in
or
popa
fs
xchg
daa
in
clc
jb
push
add
add
mov
adc
lods
insl
and
pop
mov
mov
shrl
ret
xchg
shll
sahf
imul
lds
pop
bound
loopne
ja
lret
xchg
rcl
fldl
dec
push
imul
jnp
cli
push
xchg
jle
rolb
mov
sbbb
ds
mov
jno
sub
jmp
jle
adc
repnz
pop
adc
sub
test
sbb
sub
insb
inc
fstp
cmp
adc
and
pop
call
cwtl
pushf
movsb
xchg
scas
fiaddl
sbb
fsubs
out
push
pop
sbb
jne
aaa
sbb
jnp
adc
sub
adcl
jp
popf
out
testb
scas
pop
inc
pop
xchg
fiaddl
loopne
movsl
loop
xchg
xchg
enter
stc
mov
in
jmp
repz
push
je
es
insb
jge
cmpl
pop
lea
add
repz
push
pushf
daa
jle
js
cs
xchg
popa
push
imul
cmp
dec
push
ljmp
enter
dec
mov
aaa
inc
nop
mov
imul
mov
pushf
ret
ljmp
inc
in
movswl
dec
cltd
popl
stc
dec
fs
sub
loopne
aad
jb
xorb
mov
push
xchg
cmp
imul
jno
mov
mov
scas
and
ret
jns
subb
jns
and
cmpsl
cli
outsb
pushf
cmpsb
xchg
sti
sub
mov
dec
roll
arpl
jmp
enter
pop
dec
outsb
outsb
sbb
cltd
sbb
mov
and
pop
fnsave
mov
call
std
dec
and
leave
loop
out
stos
stc
out
outsb
xlat
pop
or
sbb
ficompl
jns
mov
lods
lret
inc
outsb
dec
adc
push
loop,pt
leave
sahf
aam
rcll
jecxz
pushf
nop
into
lret
xchg
in
cmp
jle
insl
inc
push
aam
icebp
fistpll
xchg
sbb
or
xchg
inc
cmpsb
test
loop
mov
xchg
inc
pop
xchg
aad
sub
xor
pop
outsl
jo
add
sub
shll
jae
pop
pop
push
cwtl
lret
cmp
pop
xor
mov
inc
and
mov
or
pop
mov
and
outsl
inc
mov
faddl
pop
shr
pop
jno
ror
pop
or
je
sarb
ret
xor
mov
push
mov
xor
cmp
pop
cmpsb
xlat
pop
adc
push
or
clc
jne
push
or
xor
and
push
test
addb
and
inc
inc
mov
dec
add
mov
lock
mov
and
push
stos
dec
gs
and
stc
push
or
jecxz
inc
jmp
fistpll
gs
xor
mov
lds
loop
es
mov
xchg
icebp
pop
sbb
jbe
out
shll
in
push
stos
mov
enter
pop
push
and
inc
hlt
pop
adc
sbb
jecxz
pop
cmp
adc
and
jo
adc
ljmp
cs
test
out
je
fwait
cmp
ja
in
imul
rorl
pop
xlat
enter
and
or
pop
aaa
cmp
imul
pop
enter
divl
or
insb
push
lds
in
adc
mov
mov
cmpsl
push
lds
das
adc
js
movb
sub
clc
bound
xchg
add
inc
push
fisttpl
lret
lret
js
sahf
call
or
cwtl
jb
push
and
pusha
ret
push
sub
es
ss
pushl
imul
add
das
daa
mov
fldt
mov
lahf
lret
add
push
mov
push
ss
jle
jo
es
mov
dec
mov
jmp
call
clc
adc
je
sub
clc
les
test
jp
mov
in
sub
sub
popf
mull
sbb
xor
xchg
psrad
cld
add
outsb
pop
xchg
adc
jle
add
dec
jge
popa
mov
sbb
sbbl
and
sub
push
push
dec
cld
dec
dec
pop
lods
repnz
xchg
scas
pop
cmp
into
pusha
jns
fimuls
inc
lret
imul
and
add
or
jno
pushf
loopne
mov
pop
cmp
xor
cli
push
and
fimuls
cmp
mov
inc
xor
out
pop
mov
xchg
cmp
push
dec
insl
xor
cmp
sub
mov
es
mov
icebp
fwait
jle
and
lock
dec
cmp
jmp
mov
mov
outsl
mov
mov
mov
xlat
in
jnp
sqrtps
nop
clc
jno
movsl
dec
and
dec
jb
jns
loopne
rclb
cmp
xchg
inc
mov
scas
inc
cmp
daa
in
arpl
std
lock
push
sub
sbb
sti
xor
outsl
repnz
jecxz
dec
xor
add
inc
sbb
push
fs
xchg
mull
std
jecxz
loop
mov
fdivl
mov
ja
js
xchg
les
scas
jmp
mov
sti
xchg
lcall
call
pop
ror
add
icebp
xchg
xchg
shl
testl
popa
push
in
jmp
pusha
stos
mov
pop
shlb
movsl
dec
push
and
loopne
and
icebp
pop
scas
pop
jne
pop
xor
loopne
and
in
inc
mov
push
jmp
jo
fidivrl
das
outsl
lea
cmc
lret
add
ret
rcl
pop
loopne
nop
dec
addr16
sub
lock
sub
xchg
jne
xor
into
xor
imul
repz
daa
fsub
mov
pop
cmp
std
icebp
enter
cmp
push
mov
in
push
cwtl
data16
movsl
or
xchg
mul
inc
shrl
lods
or
icebp
mov
sbb
out
imul
mov
cmp
mov
les
mov
or
mov
aaa
dec
add
leave
sbb
data16
lock
test
rcrb
mov
ret
loop
sti
jb
loopne
std
outsb
cmp
ljmp
push
into
das
js
xchg
imul
loopne
add
and
data16
jns
or
sbb
sti
xchg
cmp
rcrl
repz
shlb
ret
notl
cmp
repz
bnd
addr16
testl
nop
mov
push
lock
cmp
push
loopne
sbb
xlat
fwait
or
imul
jns
daa
or
pop
or
in
pusha
fwait
in
mov
jge
test
mov
sub
out
xchg
ljmp
pshufw
sbb
mov
sbb
sahf
sbb
jbe
loopne
pop
outsb
test
sbb
mov
scas
lds
in
out
imul
movsl
gs
dec
mov
in
inc
fcompl
aaa
negb
loop
iret
stos
cmp
mov
mov
add
rcl
jge
fcoms
xor
push
call
inc
mov
or
pop
aam
popa
pop
sub
imul
or
jb
push
add
xchg
pop
loopne
xchg
add
jnp
aas
gs
test
mov
pop
pushf
scas
mov
popa
sti
pop
mov
hlt
ja
xor
jmp
aas
lcall
add
repz
clc
or
pop
stc
push
xlat
inc
mov
test
jns
int3
fsts
or
xchg
adc
icebp
addl
mov
shrb
addb
or
add
adc
inc
jmp
fs
into
push
inc
std
inc
outsl
sub
testb
inc
or
jns
sarb
loop
jp
idivl
jp
xchg
cmp
mov
fstpt
xor
xor
not
cmp
cmp
cwtl
dec
push
push
lock
repnz
mov
xor
andl
orl
push
push
sub
xchg
stc
mov
es
add
sbb
mov
xor
mov
push
add
call
in
adc
mov
inc
pop
or
inc
sub
and
lock
test
mov
xchg
cmp
inc
xchg
mov
mov
pop
mov
outsb
fstps
mov
or
sub
jb
mov
sarl
mov
xchg
mov
cwtl
xchg
fs
dec
aas
pushf
outsb
adc
inc
sahf
mov
in
dec
xchg
inc
push
push
ret
repz
shl
and
inc
lock
dec
subb
pusha
std
or
pop
pushf
rclb
cmc
popf
mov
stos
jo
daa
xchg
inc
orl
xor
outsb
aas
mov
push
clc
inc
or
jge
int
and
mov
mov
xlat
ret
fildll
lret
jle
mov
push
push
imul
mov
out
rolb
iret
adc
mov
in
xchg
loope
sub
cmp
popa
mov
lcall
jo
imul
pop
lea
push
in
jb
lods
pop
cmp
jne
pop
push
cmp
movsb
sbb
ja
lds
enter
mov
out
pop
in
mov
loop
in
out
imul
pop
data16
cmp
jl
pop
cmp
mov
sbb
xchg
sbb
mov
sub
aad
fs
and
stos
scas
ret
lret
pop
shlb
jo
jecxz
filds
cmpl
test
mov
fwait
mov
clc
add
int3
test
sarb
adc
xchg
xlat
xor
push
outsl
das
mulb
std
push
pusha
pushl
imul
xor
addr16
aam
icebp
pop
js
cmc
sub
cmp
mov
mov
jb
loopne
mov
mov
outsb
dec
ljmp
adc
es
add
and
inc
test
mov
adc
cmpsl
lea
jb
mov
stos
gs
mov
mov
rorb
jmp
imul
or
push
add
jbe
popa
cmpsl
sbb
hlt
mov
mov
dec
jmp
cmp
push
mov
dec
stc
inc
push
xlat
xor
lret
or
data16
int
mov
cmpsb
add
sub
sbb
fbstp
test
mov
aas
in
sub
mov
jno
jnp
ljmp
in
or
mov
rorl
add
add
jl
fiadds
and
stos
scas
fisttpll
cli
rcl
test
xchg
push
sbb
mov
dec
mov
cld
notl
lret
pop
pop
pop
sub
mov
cmc
loop
fistl
test
pop
push
jge
stos
mov
out
add
call
pop
or
fsubrp
xor
jnp
mov
outsl
sahf
test
lea
bound
fs
fildl
dec
mov
add
test
adc
cmp
outsl
jo
ret
fs
sbb
push
mov
mov
movl
and
lods
icebp
cwtl
std
jo
push
popf
xor
hlt
lahf
lea
out
daa
mov
mov
es
insb
and
jb
xchg
jo
in
addr16
fcmovne
imul
out
add
jo
fisttpll
filds
push
mov
stos
cmp
jp
jns
dec
add
adc
mov
adc
lcall
dec
je
pusha
pusha
pop
fimull
or
and
and
push
mov
dec
push
fcmovnb
xlat
in
and
mov
jl
jmp
bound
ja
xlat
divl
cli
jl
push
cmp
sbb
adc
add
repz
push
sbb
pop
xchg
jmp
nop
push
jns
push
aad
jp
pop
loopne
ja
inc
cmc
es
jbe
bsr
dec
push
adc
inc
lahf
dec
xor
adc
fisubrs
inc
filds
ss
adc
testb
dec
enter
push
lds
xor
aad
xchg
or
inc
cmp
fsubl
mov
loope
clc
and
sub
fstps
push
xchg
lds
stos
sub
shl
push
sbb
jp
das
or
fistpl
sub
ljmp
jp
mov
fisttpll
cs
aas
imul
jb
push
sbb
mov
std
push
pop
pop
inc
repnz
das
xor
movsl
push
mov
scas
adc
aaa
jb
xchg
xor
sbb
push
sub
jmp
adc
inc
in
in
push
fwait
in
or
dec
xor
lods
cmp
into
cld
das
xchg
andb
stos
pop
insb
andl
clc
jnp
pop
dec
pop
pop
xchg
sub
fisttpll
les
in
jle
jge
or
dec
pop
mov
test
inc
or
hlt
xchg
xor
mov
inc
push
mov
decl
lret
or
jne
xchg
jb
push
js
into
fadd
mov
pop
rolb
cmp
mov
cmp
jno
mov
cli
bound
outsl
pusha
cmpsl
push
xor
mov
cld
cltd
mov
mov
jle
jnp
pop
sbb
aaa
push
lcall
iret
xchg
cltd
call
pop
pop
cmpsl
leave
adc
push
leave
ficoms
lcall
mov
adc
out
inc
daa
push
stos
lods
popa
mov
push
xchg
jge
shrl
adc
or
mov
stos
sbb
pop
xchg
outsb
mov
mov
cmpl
js
inc
sbb
call
push
inc
imul
clc
and
xlat
add
cmpsb
int3
pop
shrl
dec
lret
in
mov
lds
cmc
xchg
gs
nop
jno
dec
out
rorb
or
cmpsb
repnz
cwtl
cmp
xchg
aas
xor
sarb
mov
add
mov
sti
lds
jns
dec
mov
leave
imul
test
arpl
fistpl
inc
pop
loop
mov
hlt
les
int
mov
ds
inc
cli
mov
in
jecxz
pop
xchg
push
jg
and
mov
push
jbe
xchg
rorl
add
fsub
outsl
pop
jae
bnd
pop
mov
aam
mov
fnstsw
and
dec
inc
sub
dec
mov
jbe
or
imul
mov
ljmp
cmp
sahf
fists
mov
push
nop
mov
or
pop
cs
clc
mov
insl
add
mov
ljmp
adc
mov
popf
push
fs
lahf
loop
shll
xchg
jg
push
call
adc
and
dec
xlat
test
add
imul
xor
hlt
nop
xor
or
lret
loopne
sbb
inc
daa
jmp
xor
lret
fs
jecxz
push
dec
add
or
popf
jno
mov
xchg
mov
adc
negl
inc
mov
ljmp
imul
movsl
push
orl
cs
mov
fs
jbe
jecxz
cmp
icebp
dec
mov
or
test
std
xlat
movsl
mov
inc
sub
fdivrl
xchg
cmp
and
shr
loop
pop
xchg
and
push
xor
gs
das
out
push
dec
call
and
scas
insl
aam
xor
cmpsl
mov
push
fldl
or
sbb
add
jl
je
sar
add
inc
andb
push
xchg
call
shll
int3
cmp
testl
leave
lods
inc
int3
adc
jl
mov
push
dec
jno
lea
stc
xchg
outsb
arpl
es
ja
aas
jg
in
out
lret
dec
or
testb
dec
rcrb
test
dec
hlt
mov
add
jl
lret
fs
in
cmp
rcl
or
out
fs
jl
loop
lea
mov
mov
sub
pop
lret
mov
sub
jmp
stos
dec
jecxz
cmp
jge
jecxz
sbb
out
push
cld
fdivr
fistpll
jnp
hlt
jp
push
test
into
mov
dec
leave
push
and
adc
cmc
addl
dec
push
xchg
cli
in
inc
mov
dec
add
popa
mov
flds
lcall
or
mov
adc
add
cltd
jl
and
fisttpl
filds
fdivl
fbld
adc
in
mov
test
pushf
dec
loope
loop
push
push
sbb
in
notb
jne
xor
ret
xchg
and
jo
adc
xor
cwtl
movsl
adc
or
in
stos
lcall
lods
jb
push
xchg
cmpsl
mov
jo
cmpsl
and
sub
test
xchg
cwtl
mov
xchg
repnz
jne
sbb
push
cwtl
dec
cwtl
std
fsubrs
and
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
mov
bound
mov
mov
call
loop
xor
xchg
es
pop
mov
mov
fwait
cmpl
js
jb
cmp
orb
mov
sarb
xlat
and
push
int
fdivrs
cmp
push
or
and
mov
add
mov
dec
out
daa
cld
ficompl
and
xor
js
fwait
pop
adc
data16
cmp
push
pop
ret
and
jns
and
lock
sub
xchg
jo
mov
test
data16
in
dec
add
push
pop
stos
int3
cs
cli
add
push
xchg
jecxz
mov
hlt
sub
push
pop
adc
xchg
rorb
lret
lods
mov
sbb
mov
out
fisttpl
int3
shll
xlat
mov
addr16
int
adc
push
and
mov
cmpsl
push
adc
hlt
pop
stos
xor
movsl
ja
add
sbb
xor
adc
hlt
jg
aad
shll
inc
test
in
fidivl
cltd
insl
mov
hlt
hlt
rorb
add
inc
jp
or
inc
sbb
mov
xchg
inc
push
adc
and
test
and
push
sbb
inc
xorb
arpl
cmp
xchg
jp
frstor
pusha
gs
push
movsl
lds
mov
nop
lock
int
xlat
sub
jmp
add
jmp
dec
dec
mov
mov
mov
or
xchg
fdivl
add
jge
mull
pop
cmp
roll
cmpsl
pop
or
push
xchg
in
test
mov
mov
ss
fidivrl
add
xor
push
mov
mov
jecxz
shlb
adc
test
pushf
xlat
mov
call
jge
mov
sub
push
adc
xor
outsl
das
inc
gs
int
push
and
xor
adc
cld
xlat
add
popa
mov
hlt
and
cmpsb
add
repnz
out
or
jbe
and
iret
clc
dec
cmpb
push
xor
xchg
iret
ja
arpl
add
adcb
push
xchg
xor
pop
repz
addr16
in
fsub
mov
adcb
das
hlt
popa
and
add
mov
test
and
test
aam
and
clc
lea
xlat
dec
sub
jo
fnsave
cmp
fldl
mov
pop
leave
xchg
leave
sahf
jae
out
xor
loop
jb
loope
imul
movsl
jnp
iret
dec
loope
mov
int3
arpl
push
lock
roll
push
mov
into
sbb
sub
mov
mov
insb
mov
sub
in
ja
test
aad
sahf
sbb
dec
movsl
packssdw
mov
repz
test
nop
movsb
pop
clc
jnp
push
test
xchg
insl
lods
pop
in
in
jmp
icebp
arpl
int3
jno
pop
mov
outsb
cmp
dec
dec
mov
xchg
sub
in
in
mul
jbe
aad
mov
out
dec
and
ficompl
push
cmpsl
insl
pop
jae
add
mov
lret
cltd
mov
inc
mov
jne
sbb
pop
insl
fildll
xchg
fisubrl
lcall
cmpsl
outsb
sbb
dec
pop
in
cwtl
fldcw
das
mov
mov
je
mov
dec
inc
imul
out
adc
xchg
daa
or
xchg
push
lahf
cbtw
inc
stos
jnp
fildll
mov
adc
add
mov
shl
cs
and
xchg
push
xchg
mov
in
in
jno
adc
test
dec
sub
dec
arpl
and
jns
adc
sbb
xchg
or
sbb
inc
and
ds
jle
lods
dec
jmp
push
in
das
xor
cmp
movsb
pop
pop
lcall
in
push
lea
pop
xor
orl
adc
jns
out
cmp
adc
cwtl
xorb
ret
sbb
push
shlb
mov
data16
stos
jns
test
pop
cmpsb
fcompl
inc
push
add
xchg
jno
sbb
fistpll
inc
cld
negb
add
daa
push
pop
and
insl
jp
inc
jne
lods
loop
cmp
jo
or
mov
aad
mov
mov
in
lcall
lahf
imul
xchg
or
add
ret
in
pop
mov
fs
or
frstor
dec
ror
and
scas
pop
fistps
xor
loop
xor
fsubrl
jmp
xchg
enter
call
insb
dec
stc
sahf
loopne
call
ja
mov
test
imul
dec
notb
mov
sbb
test
dec
ds
push
fisubs
imul
fcomps
ds
pop
cmp
bound
xlat
in
leave
out
out
sub
std
add
pop
ds
arpl
es
pop
sub
push
xor
int3
push
pop
jbe
sbb
add
clc
roll
or
pop
stc
out
or
pop
js
mov
push
jmp
add
cmpl
outsb
cmp
cld
ljmp
mov
loope
jo
push
xlat
loope
mov
inc
pushf
jmp
sarl
mov
loopne
es
push
push
ja
or
fcmovb
mov
push
outsl
mov
jle
add
xchg
outsb
jge
in
sbb
scas
sub
cmp
or
out
std
mov
loop
pop
cli
mov
nopl
popl
rcrl
push
inc
out
or
mov
push
popa
idiv
sub
pop
ficompl
xchg
test
loopne
aad
and
pop
js
pop
mov
incl
sub
jle
mov
imul
into
inc
mov
or
hlt
cltd
outsb
jb
sbb
out
jmp
aam
push
stos
aaa
jecxz
ss
test
out
adc
mov
pop
aad
add
sti
insb
jmp
mov
jp
fadds
mov
jmp
inc
add
jge
movsl
lods
mov
hlt
out
fidivrs
push
iret
dec
or
lea
stc
or
mull
add
jo
ss
fdivrp
imul
inc
xchg
inc
sbb
pop
push
xchg
xor
xchg
cmpl
movb
in
arpl
pop
repnz
and
mov
xchg
pop
cltd
jbe
push
pop
xchg
jecxz
mov
mov
cmpsl
cmc
fs
sub
rolb
out
mov
shll
adc
enter
mov
sub
xchg
ljmp
mov
adc
adc
in
mov
add
xchg
mov
xchg
lea
fwait
fwait
cwtl
popa
mov
std
lea
jecxz
jne
fs
push
xor
add
and
data16
daa
clc
cmp
sti
hlt
push
or
sub
xor
movsl
into
dec
rclb
sub
lock
ret
pop
and
inc
inc
aaa
mov
mov
loop
dec
call
mov
rcll
fidivrs
imul
push
sub
rclb
sub
mov
inc
stos
imul
rcl
sbbb
xchg
addl
push
nop
enter
shrl
and
out
test
scas
sti
or
or
pop
pop
cwtl
xchg
jecxz
mov
stc
das
mov
adc
faddl
mov
or
sub
jns
leave
rcll
nop
fiadds
fnsave
xchg
or
add
je
mov
jmp
orb
mov
addr16
add
xchg
js
cld
call
pop
xchg
rorl
inc
iret
rcrb
add
jo
cmp
lea
mov
out
mov
flds
lcall
push
cmp
call
xor
ficoml
insb
lahf
pop
loop
mov
jl
inc
adc
idivb
loopne
aad
pop
pushf
adc
out
sub
in
lods
das
ss
push
lea
movaps
shrb
addb
sahf
dec
lea
sub
xchg
int3
ljmp
lds
sbb
fcoms
pop
in
in
push
test
aam
xchg
xor
bound
jp
jns
in
pop
cltd
dec
mov
dec
cmpsb
iret
outsb
ja
movsb
fldl
mov
sar
add
fdivrs
sbb
in
pop
repnz
inc
mov
cmp
cwtl
cs
int
arpl
daa
lods
mov
adc
mov
loope
sbb
jb
popf
jne
loope
pop
lahf
jne
shll
jne
fistpll
dec
fdivs
add
adc
in
cmpsl
lea
xchg
pop
cltd
sbb
add
loopne
cmp
mov
pop
or
clc
pop
int
jno
test
jmp
dec
mov
mov
outsl
leave
xchg
inc
ss
hlt
mov
loope
jmp
pusha
sub
cmp
fcoml
inc
inc
mov
cmpsb
jo
lock
jae
leave
push
pop
and
lret
in
jg
add
push
pop
inc
mov
add
shld
sub
int
loop
sti
sub
imul
adc
xadd
lret
adc
rep
cmp
movsb
pop
add
push
test
out
jge
mov
je
popf
shll
dec
cmp
repz
jae
xchg
dec
insb
or
xchg
or
pop
inc
push
jg
jb
fsubr
and
and
jmp
jle
mov
fsubl
xchg
push
lret
mov
or
js
xor
jnp
mov
sbb
shrl
xchg
mov
jbe
int3
sub
jl
adc
hlt
add
rol
cli
inc
mov
push
xor
hlt
mov
pop
in
or
mov
cs
outsl
sbb
add
stos
and
cmpsl
sti
jg
sahf
pushf
roll
push
stos
nop
call
popf
es
jns
stos
out
pop
lcall
test
push
push
mov
mov
outsb
adc
mov
cmp
mov
outsl
push
jns
je
dec
xchg
adc
dec
dec
sarl
pop
hlt
or
pop
dec
hlt
pop
add
divl
dec
cmpsl
jecxz
sbb
sbb
inc
outsl
daa
fdivrs
stos
sub
out
pusha
shl
dec
mov
push
les
add
mov
dec
mov
popa
scas
pop
into
repnz
and
cltd
ss
enter
inc
push
imul
mov
mov
sbb
mov
ja
into
cld
insl
imul
push
push
xchg
jbe
xor
cmp
repz
or
dec
fisttps
ret
xchg
lcall
mov
xlat
sti
fcmovne
xlat
jno
daa
js
call
push
sub
test
sbb
xlat
sub
out
lret
jo
jge
xchg
and
mulb
mov
outsl
fdivr
movsl
aaa
pop
fwait
test
fsts
sti
inc
shlb
xor
pop
inc
dec
push
addr16
out
push
lea
add
inc
xor
sub
mov
push
pop
dec
rcl
mov
jmp
push
cmpb
andb
imul
insb
or
stos
sbb
mov
rcll
lret
pop
dec
mov
push
outsl
js
lea
adc
leave
fidivl
and
fs
xchg
adc
and
es
pop
dec
inc
sub
dec
enter
add
fidivrs
outsb
xchg
inc
lahf
int
sub
mov
rcrl
call
push
cmp
les
jle
sbb
movsl
fwait
mov
mov
jae
mov
dec
sti
imul
cmp
mov
mov
pop
imul
push
ljmp
lcall
in
xchg
pop
jecxz
lds
xor
cltd
push
adc
push
mov
imul
dec
sbb
std
lret
pushf
sbb
sarb
leave
mov
cmp
xchg
mov
loopne
ret
push
mov
dec
sti
push
dec
sub
lods
lods
mov
movsl
nop
push
jl
inc
fiaddl
mov
jnp
add
lahf
ljmp
lock
sub
nop
jnp
sbbl
pop
jae
je
aaa
or
lcall
sbb
stc
cmp
inc
push
pushf
out
ds
add
call
imul
push
stos
pop
xchg
outsb
jecxz
and
pavgb
dec
in
sbb
push
ja
inc
aas
mov
aad
rcrl
xchg
mov
shll
dec
cmpsl
mov
or
push
jg
stos
js
aam
mov
aad
xor
gs
insb
mov
lds
leave
movsb
xor
jnp
dec
enter
cmpl
pop
fchs
repz
adc
cmc
xchg
mov
int3
mov
and
inc
add
popl
xchg
sub
and
push
out
cmc
push
jbe
add
dec
loopne
fnsave
ljmp
nop
in
pop
xchg
push
mov
sahf
pop
stos
xor
outsl
pop
jl
pop
jbe
jmp
mov
push
pop
add
mov
out
lds
adc
lods
clc
out
lds
pop
loop
pop
pop
push
call
inc
sbbb
mulb
inc
dec
aad
or
jle
push
pop
inc
inc
in
aas
jle
outsl
jns
jmp
movsl
jo
fs
jae
or
or
or
aaa
mov
dec
mov
outsl
loop
addr16
sub
data16
bound
jno
inc
mov
mov
lods
rorb
cs
push
jle
dec
mov
popw
xchg
dec
jl
add
xor
pop
rolb
loopne
sub
adc
or
fwait
xchg
mov
subb
dec
pop
mov
inc
mov
gs
xor
adc
mov
out
test
mov
adc
andl
xor
sub
pop
mulb
push
mov
jo
jl
jl
std
inc
mov
lret
ss
scas
xchg
adc
push
out
in
jl
imul
cmc
mov
adc
fisttps
outsl
jecxz
ret
mov
rorb
add
fisubs
inc
arpl
aaa
dec
mov
sub
lds
neg
leave
push
sti
fwait
out
dec
arpl
push
in
mov
mov
sbb
pop
pop
lahf
pop
cmp
lock
jecxz
sbb
stc
nop
pusha
fcmove
stos
dec
mov
cli
sti
jmp
jno
sbb
or
adc
push
outsb
sysexit
insb
test
xchg
pop
icebp
dec
ljmp
aad
or
stos
sbb
sbb
sbb
gs
mov
sbb
dec
jnp
rcll
jl
or
lret
sahf
xor
test
aaa
xor
xor
inc
jp
jecxz
cmpb
fldt
dec
ficompl
jmp
insl
dec
fadds
add
aas
in
in
ja
jmp
les
fisubl
adc
inc
fwait
jl
xchg
xor
jnp
push
push
pop
loope
pop
cmp
call
pop
sub
mov
dec
xchg
sbb
mov
push
js
pop
dec
in
fnsave
icebp
xchg
dec
idiv
xchg
pop
and
stc
pusha
jnp
les
adc
dec
cmp
xor
push
lea
pop
push
add
aaa
insb
lea
aas
fcoml
shll
iret
ds
adc
scas
push
mov
out
xor
pop
and
test
push
cld
loope
xor
adc
ds
imul
test
sti
mov
sub
or
aam
mov
repz
mov
inc
dec
ror
pop
mov
fmuls
loope
sahf
in
icebp
aad
cwtl
mov
jmp
mov
xchg
jbe
cmpsl
push
movsl
cmpsb
jo
fisttps
repnz
pushaw
icebp
mov
subl
repnz
sarl
lds
mov
inc
loopne
adc
mov
imul
inc
nop
les
or
pusha
sbb
pop
mov
clc
sbb
xchg
ret
sar
adc
test
add
dec
jl
xchg
jle
int3
push
fs
fldcw
pop
std
or
xchg
ret
imul
andl
inc
push
mov
in
and
stos
sbb
jle
ja
mov
inc
cmp
push
mov
pop
bound
dec
nop
sbb
scas
shll
outsl
test
mov
push
fldt
cmpsb
inc
cmp
cltd
adc
inc
and
cmp
js
mov
mov
lods
movsl
xchg
scas
inc
xor
inc
xlat
xchg
mov
push
jle
add
sub
fwait
scas
pop
adc
rcll
addr16
fisttpll
xchg
in
in
scas
pop
xor
xor
mov
mov
imul
xchg
cld
insl
js
sbbl
cs
pop
loop
inc
pop
sub
out
daa
mov
xor
cmp
mov
in
push
orb
sbbl
jg
cli
movsb
jo
icebp
xor
inc
test
push
and
pop
testb
add
mov
push
iret
aad
pop
cltd
sbb
stos
cmc
js
loopne
xlat
por
and
pop
mov
shll
mov
push
jb
jae
or
inc
imul
push
lods
mov
outsl
pop
xor
jne
ljmp
xorb
add
mov
fldcw
ja
out
adc
pop
mov
pop
push
repz
daa
push
imul
jb
mov
fs
xchg
pop
iret
ficomps
jp
jbe
pop
gs
push
pop
cmp
out
loopne
xchg
cmp
pop
adc
xchg
mov
adc
fadd
stos
inc
insl
lods
push
sahf
jl
stos
pop
gs
xor
ja
cli
inc
lret
ret
adc
test
xchg
stc
xchg
push
in
cmc
aaa
push
xchg
test
ficoml
popa
mov
mulb
rcrl
mov
outsb
add
pop
fisubrl
cld
mov
mov
sub
or
cmp
cmp
out
mov
js
sbb
cmc
pop
mov
gs
scas
lock
sub
add
adc
and
mov
jg
or
aad
imul
dec
hlt
lods
jbe
cmovo
xchg
les
loop
xlat
inc
mov
mov
xchg
pop
xor
sub
mov
inc
sub
mov
out
mov
sub
nopl
fdivrs
dec
xchg
dec
ficoms
cmp
adc
rcr
mov
push
push
test
pop
jae
cmc
jbe
and
pop
int
cmpsb
imul
jg
xchg
or
enter
es
push
sub
push
daa
jnp
jns
gs
push
cmpsb
loopne
test
aam
mov
imul
xchg
testb
hlt
data16
cmp
gs
push
lods
sub
sti
inc
add
loopne
int
cli
mov
and
cmpsl
mov
scas
fsubrp
mov
nop
sub
ljmp
sbb
or
mov
jecxz
lret
add
xor
lds
fbstp
push
out
or
ret
test
ss
cmp
xor
push
inc
in
mov
pusha
mov
push
mov
push
dec
inc
mov
adc
sub
push
ja
sbb
pop
leave
sub
cmc
mov
sub
xchg
rcrl
cmp
inc
hlt
into
insl
and
jecxz
mov
negl
popf
add
and
stos
jl
sub
mov
fdivs
ret
sub
push
jbe
pop
bound
aaa
es
fisttpl
int3
xor
arpl
mov
cli
or
inc
jno
fwait
add
sbb
inc
lods
or
out
out
rolb
pop
push
jl
adc
add
dec
adc
and
sbb
adc
lock
nop
fistpll
mov
add
mov
mov
inc
jb
test
push
pop
das
jnp
mov
movsb
mov
inc
fistpl
insl
dec
nop
test
mov
pop
pop
mov
fnstenv
jo
bound
fwait
sub
inc
xchg
xchg
fnsave
cltd
js
or
stos
enter
mov
cmp
aaa
sbb
lret
dec
sub
repnz
add
mov
mov
xor
lahf
repz
daa
arpl
xchg
and
into
push
mov
add
mov
loopne
push
and
sub
aam
inc
xchg
mov
jb
ss
or
in
cmp
jbe
and
je
repnz
vunpcklps
pop
outsl
adc
cmp
mov
or
mov
hlt
int3
out
adc
popa
sbbb
in
mov
mov
jl
addr16
mov
cmp
mov
jle
repnz
mov
add
xor
insb
enter
and
jmp
jbe
mov
sete
cmp
inc
and
sub
adc
sbbb
andb
mov
mov
sahf
fisttpl
xor
jno
dec
lock
or
push
ret
pop
push
repnz
mov
cld
shl
sbb
add
mov
stos
out
into
jmp
mov
loope
mov
mov
das
pop
push
mov
cmp
sbb
mov
hlt
insb
aad
lock
inc
cld
push
icebp
push
imul
dec
or
loopne
xchg
sub
jg
fwait
popa
scas
imul
cmp
mov
imul
sub
add
iret
fstpt
lahf
xchg
mov
jecxz
jo
dec
dec
int
sub
stos
xchg
push
add
outsb
mov
arpl
xor
inc
push
inc
xor
mov
ret
jecxz
out
mov
out
rcrl
imul
cmp
pop
and
and
xchg
xor
and
in
pusha
out
adc
or
in
subb
adc
jmp
fildll
add
push
movsb
dec
arpl
in
repz
mov
push
jo
sbb
daa
xchg
mov
popa
sub
mull
icebp
fidivs
sahf
lds
arpl
adc
inc
ror
in
xchg
sti
sbb
in
fstpl
or
add
lahf
cmp
es
push
xchg
push
sbb
pop
adc
insl
stos
mov
rorb
and
pop
es
lods
mov
lcall
pusha
and
ja
out
sarl
jae
push
std
mov
xchg
in
shrl
and
xor
hlt
into
orl
xorl
insb
fisubrs
xchg
pop
in
xchg
mov
cmpsb
inc
data16
mov
arpl
pop
mov
outsb
pop
leave
add
notb
js
pusha
into
mov
popa
jbe
xor
fdivrp
push
inc
dec
inc
add
jmp
pop
mov
dec
cmp
pusha
cmc
lock
mov
and
es
jg
push
loop
mov
pop
cmp
out
sbb
lahf
shlb
dec
jne
enter
sbb
test
pop
mov
pop
and
cmpsb
repz
mov
leave
rcl
sbb
pop
out
xor
adc
push
addr16
rolb
fwait
mov
jl
jno
jns
sbb
and
lcall
add
push
and
cmc
negb
sbb
andl
xchg
inc
mov
cltd
lock
add
adc
sub
push
jl
xor
push
push
in
fwait
je
pop
ja
jns
add
div
sub
jbe
int
cmpsl
test
out
jge
sarb
sbb
and
je
dec
dec
or
stc
mov
xor
xor
xchg
ficompl
jbe
iret
iret
jns
jmp
jb
ficompl
push
jle
cmovo
push
dec
cmp
cmp
and
dec
pop
and
lcall
icebp
stos
decl
jae
xchg
push
hlt
adc
aas
outsb
sub
jo
mov
lret
ja
push
or
lods
sbb
jbe
push
je
mov
iret
pop
dec
repz
pop
jge
dec
pusha
pop
mov
ror
or
inc
aaa
in
sub
jl
or
inc
outsb
in
sub
add
scas
aaa
and
fidivrs
xchg
xchg
mov
pop
jo
rcl
add
movsl
leave
adc
xor
push
sub
and
mov
adc
add
ret
cmp
sub
push
scas
sbbl
es
inc
jae
int3
rolb
jo
fstpt
dec
into
push
or
mov
loop
pop
push
out
mov
adc
and
mov
sub
xchg
xchg
cmp
rcrb
loopne
in
pavgw
pop
shll
and
fmull
iret
jge
and
arpl
push
cwtl
test
xor
test
movsl
inc
out
push
cmp
pusha
or
xchg
fsts
scas
sbb
push
xchg
cmpsl
or
mov
add
mov
es
nop
mov
mov
add
outsb
add
jmp
jnp
adc
in
incl
mov
in
mov
pusha
and
call
mov
stos
xor
out
outsl
rol
enter
rolb
jne
inc
pop
lods
hlt
xchg
dec
cmpsb
decb
xchg
imul
daa
inc
mov
movsb
pop
mov
xor
cld
lar
adc
pop
es
fdiv
sub
lret
xchg
xchg
adc
icebp
mov
out
add
cmp
scas
addr16
inc
sub
mov
pusha
adc
sub
cli
adc
inc
es
xor
inc
ret
add
out
push
dec
adc
addr16
push
pop
rcrb
sbb
pop
jnp
pop
mov
ret
sbb
add
cmp
in
iret
mov
mov
call
jg
xor
fwait
xlat
cmp
sarb
test
jne
mov
mov
sti
or
aas
cmc
out
sub
aaa
nop
bound
jecxz
daa
and
xchg
pop
dec
lret
or
insb
dec
imul
lods
stc
jno
xchg
mov
iret
add
lock
enter
add
sahf
test
jo
test
rcrl
dec
dec
add
add
ss
jb
lret
dec
mov
insb
out
xor
push
inc
adc
mov
jge
mov
push
mov
sahf
notb
dec
xchg
pop
and
ds
shlb
ja
insb
or
fidivrs
jbe
test
sbb
dec
and
mov
rclb
adcl
dec
xor
fwait
js
cmpsb
mov
push
mov
rorl
in
mov
xor
ja
fdivrs
in
rorl
xor
jl
jbe
fnsave
outsl
imul
movsl
cltd
push
sbb
pop
and
xchg
bound
add
jg
cs
pop
into
cmp
xchg
jecxz
xchg
data16
xchg
mov
xor
inc
add
popf
add
pop
mov
addl
ljmp
cmp
sub
pusha
dec
add
shll
or
lcall
mov
sub
cmpsl
push
cmp
std
inc
in
inc
test
cmp
insl
sbb
shlb
jl
rorl
arpl
gs
jbe
adc
xchg
rcl
sub
stc
pop
inc
cmp
popw
sub
adc
lret
sub
dec
mov
loope
or
jl
sbbb
stos
mov
mov
mov
or
sub
popa
cmc
jp
dec
xchg
mov
out
arpl
cmp
ja
mov
cwtl
lcall
rcrb
pop
mov
call
mov
xor
jne
les
fxch
icebp
mov
leave
xor
mov
cs
pop
add
pop
mov
les
cmp
xchg
mov
nop
xchg
jl
jg
push
push
dec
mov
cmp
aam
inc
jmp
mov
adc
das
notl
testl
pop
ret
cs
push
mov
dec
adc
sub
cs
mov
mov
out
jns
add
call
dec
aad
test
add
aas
cli
push
inc
gs
push
repnz
or
ljmp
repz
pop
cs
clc
xlat
sarl
cmp
cwtl
cltd
sbb
xor
loope
in
cld
jmp
push
lds
stc
mov
inc
bound
mov
gs
scas
push
pop
adc
sbbb
icebp
adc
repz
xor
xlat
ljmp
mov
cwtl
push
xor
iret
shll
xchg
outsb
into
test
test
sbb
in
sbb
icebp
or
fildll
jae
inc
inc
pop
mov
stc
in
ljmp
add
sub
inc
xchg
mov
cmp
adcl
xchg
hlt
push
mov
inc
popf
push
cmp
push
or
xor
cmc
ret
mov
js
enter
dec
je
or
xchg
dec
rcll
pusha
lds
mov
jb
icebp
jns
stc
inc
int3
push
orb
lahf
inc
nop
in
or
inc
dec
adc
roll
add
inc
fsubs
clc
push
xchg
mov
cwtl
repnz
in
test
add
outsl
out
cmp
into
mov
push
stos
out
js
lods
xchg
hlt
sbb
ret
push
mov
inc
lock
mov
or
mov
xor
mov
stos
into
sub
pop
cltd
mov
mov
jge
dec
adc
xchg
cmp
adc
and
mov
dec
cmc
xchg
icebp
ret
cmpsb
pop
sbb
xchg
loop
mov
xchg
adc
cmpsb
dec
push
mov
mov
cmp
add
push
lcall
clc
mov
addr16
wrmsr
and
jb
push
sbb
sbb
les
pop
out
cli
push
decb
shl
repz
into
addr16
mov
pop
push
xchg
pop
pop
lods
mov
movsl
mov
cmp
or
shr
insl
mov
jne
mov
jle
push
mov
lcall
mulb
mov
div
mov
stos
xlat
das
jle
testb
or
je
pop
mov
aas
adc
lret
cmc
js
mov
lock
push
pushf
cmp
cmp
addl
jns
popf
cmp
add
mov
and
add
mov
imul
xor
lock
lret
add
push
data16
jne
lods
pop
xchg
repnz
lock
push
cmp
inc
je
mov
xor
inc
in
xchg
cmpsl
in
adc
mov
inc
fs
inc
mov
std
mov
iret
cwtl
rclb
ds
cli
ljmp
loopne
test
cmp
test
mov
mov
dec
and
mov
push
cmp
fucomi
xchg
sbb
stos
and
nop
add
gs
mov
mov
int3
push
shl
jbe
sbb
xchg
test
pop
xor
mov
inc
and
mov
jae
adc
mov
aad
cmpsl
jg
loopne
insl
add
lahf
lret
dec
stos
std
inc
mov
cmp
imul
push
jp
add
jp
jo
addr16
subl
inc
adc
pop
push
add
es
pop
pop
call
mov
cli
and
xchg
push
test
cmp
imul
mov
scas
push
aas
out
dec
push
pop
popf
adc
push
pop
cmpsb
loop
mov
dec
imul
or
in
and
add
add
add
xchg
add
inc
xchg
sub
jp
push
stos
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
dec
sbb
add
cmp
