lea
xchg
lea
mov
shr
lea
xor
adc
xor
movl
lea
xor
neg
jmp
xor
neg
mov
rcl
xor
mov
xor
add
shrl
lea
rcl
jmp
not
mov
xor
lea
neg
mov
xor
mov
mov
rcr
jmp
mov
xor
xor
jmp
push
xchg
lea
lea
call
push
xor
neg
neg
jmp
mov
xor
xor
mov
lea
rcr
ror
and
push
lea
lea
and
and
lea
ror
jmp
xor
not
lea
neg
shl
mov
jmp
not
xchg
lea
mov
lea
mov
mov
rol
jmp
shr
xor
mov
and
xor
not
lea
rol
jmp
push
mov
sub
push
push
push
xor
lea
jmp
add
mov
mov
shr
mov
lea
xor
push
call
not
jmp
mov
neg
mov
lea
xor
xor
mov
jmp
add
mov
ror
not
neg
mov
jmp
xchg
lea
xor
mov
push
jmp
xor
xor
xor
rol
xchg
popl
mov
not
mov
jmp
mov
not
adc
shr
lea
lea
mov
lea
not
jmp
shl
mov
xor
mov
xor
ret
mov
jmp
lea
lea
rol
adc
neg
mov
mov
not
lea
shr
jmp
mov
neg
xor
cmp
je
lea
ror
not
or
je
mov
neg
mov
xor
jmp
mov
neg
xor
add
xor
mov
xor
xor
mov
jmp
shl
xor
xor
push
rcl
jmp
shl
adc
neg
mov
lea
lea
cmp
je
xchg
and
neg
neg
and
neg
neg
jmp
xor
mov
lea
xchg
mov
neg
mov
jmp
xor
add
pushl
xchg
not
shl
xchg
mov
jmp
not
xor
xor
pop
mov
not
ror
shl
mov
jmp
rcl
lea
shl
shr
call
ror
mov
neg
jmp
xor
lea
not
mov
adc
mov
shl
mov
neg
adc
mov
neg
and
xchg
jmp
mov
xor
ror
lea
xor
jmp
add
and
mov
mov
lea
jmp
pushl
xor
mov
and
not
mov
xor
call
lea
xor
lea
neg
rol
lea
ror
xor
jmp
shl
xor
lea
xor
push
mov
jmp
xor
movl
mov
xor
xor
xor
ror
xor
rcr
lea
not
lea
lea
ror
lea
jmp
lea
mov
adc
xor
xor
rcl
call
mov
mov
jmp
xor
rol
add
rcr
xchg
ror
mov
xor
rcr
add
decl
jne
jmp
xchg
mov
push
mov
adc
mov
xor
neg
mov
lea
jmp
aaa
arpl
fildll
ljmp
cmp
loope
cmp
and
cmp
inc
sub
inc
pop
data16
sbb
das
test
push
test
loop
rclb
pop
sbb
inc
and
loop
jecxz
sahf
in
cli
pop
push
orl
xor
sarb
pavgb
ret
or
or
imul
mov
imul
lea
ficoml
fildl
pop
test
fildll
scas
jb
pop
ret
pop
sbb
xor
fildll
mov
jae
jge
fsts
mov
cmp
add
mov
sti
dec
mov
pop
dec
jbe
adc
out
add
inc
cmp
sbb
inc
popf
jno
adc
sub
inc
lahf
adc
or
and
popf
test
fildll
fsubrl
dec
xor
ret
aaa
and
xchg
lret
sbb
cmp
aaa
inc
ret
aaa
and
shrb
rol
imul
cmp
imul
aam
mov
mov
and
and
xchg
ret
aaa
push
out
cmp
pop
sub
mov
pop
lods
les
fistps
add
test
mov
xlat
cmpl
sti
negb
fbstp
mov
mov
ljmp
daa
add
pop
cmp
and
mov
adc
push
and
mov
and
popl
or
mov
lcall
jecxz
jo
data16
jbe
enter
push
mov
jl
mov
cmp
fildll
outsb
xchg
inc
pop
sbb
mov
push
cmp
xchg
aas
jae
jbe
enter
xlat
lahf
imul
xlat
lahf
imul
stc
fadd
fidivs
push
sub
lret
pop
xor
jns
mov
or
fstpl
arpl
lea
or
mov
dec
shrb
sbb
mov
cwtl
mov
bound
rcll
push
outsl
scas
ret
bound
inc
ljmp
sub
aaa
or
dec
mov
in
outsl
pop
xchg
int3
dec
lods
inc
dec
ss
addl
loope
outsb
aas
test
cwtl
push
dec
es
lahf
mov
aaa
in
inc
cmpsb
mov
movsl
jmp
outsl
or
jmp
in
icebp
shll
imul
mov
lea
outsl
outsl
add
sbb
mov
std
and
add
jecxz
fs
pop
sbb
sub
add
mov
push
sbb
inc
pop
pushf
xorl
addb
lods
push
mov
loop
xor
addb
lea
pop
xchg
cmp
popf
nop
jl
iret
insb
inc
stos
bound
imul
nop
jl
daa
imulb
adcb
add
popa
lods
or
mov
cmpl
mov
inc
dec
add
inc
imul
and
pop
arpl
mov
push
mov
jb
xchg
shll
aaa
push
cmpsb
imul
pop
inc
sub
outsl
add
dec
xor
and
xchg
sub
scas
lock
push
sub
mov
into
shll
or
jg
andl
sub
push
sub
and
mov
inc
add
push
cmpl
xchg
adc
in
jb
cmp
ss
lahf
jo
cmp
or
dec
je
xchg
adc
cmpl
nop
jl
adc
stos
dec
push
dec
lahf
mov
aaa
in
inc
cmpsb
fwait
jecxz
daa
cmpsb
rcll
into
fwait
push
insb
lret
sub
outsl
add
out
scas
in
je
sarl
aas
lds
orb
ret
shr
jnp
and
xor
outsl
shrb
lods
imul
xchg
push
jb
jbe
shr
jg
das
xchg
sbbb
mov
gs
in
sbb
and
and
fmull
jb
jbe
shll
cmp
nop
mov
shrl
ret
bound
jb
jbe
rorl
jmp
push
sar
sub
xchg
jl
jmp
ja
mov
outsl
orl
aam
lds
lock
outsl
mov
add
cmp
lahf
nop
jl
loope
lcall
outsl
orl
or
jmp
dec
in
and
dec
and
xchg
pop
insb
lret
in
xlat
add
ret
and
sub
shll
ret
adc
jl
push
lods
scas
fs
stc
pushf
nop
jl
jmp
fwait
or
popa
and
gs
push
mov
imul
jmp
arpl
stc
sub
mov
dec
add
les
jb
std
int
sbb
mov
cmp
inc
jmp
xchg
pop
push
fisttps
or
adc
jmp
mov
dec
stc
out
add
insb
fmulp
jmp
sbb
ret
aad
adc
add
ds
fs
mov
cmp
dec
fildll
jl
jmp
in
lret
orl
adc
jae
adc
test
ret
xchg
xor
dec
sub
les
loope
xchg
sub
in
leave
jmp
push
test
push
sbb
cmpsl
insl
aad
xlat
bound
add
outsl
idiv
jmp
iret
add
in
ret
or
mov
pusha
out
ret
add
xor
cmpsb
ds
outsl
add
push
popa
das
jmp
iret
add
insb
add
outsl
cmp
sbb
add
mov
dec
shrl
test
and
lds
add
aas
mov
popf
in
lds
or
int
mov
shll
leave
movsl
insl
add
outsl
or
jmp
outsl
xorb
not
iret
fs
mov
insb
leave
add
test
mov
and
bound
dec
and
subl
mov
xor
jmp
sbb
cmp
pushf
push
fcmovnu
jmp
xchg
outsw
jmp
roll
out
popf
nop
into
stc
cmp
mov
insl
push
bound
andl
jle
cmp
bound
jne
mov
iret
lret
bnd
test
adc
out
push
inc
sbb
or
in
pop
or
cmp
adc
mov
push
cmp
xchg
daa
popa
mov
cmp
test
dec
gs
mov
pusha
jbe
sti
sub
jbe
xorl
lock
popf
jmp
push
pop
lds
mov
iret
xchg
enterw
and
mov
push
mov
repnz
gs
icebp
dec
xor
add
movsl
repz
subb
sub
insb
inc
ja
movl
aas
jg
adc
mov
push
mov
arpl
leave
mulb
lods
fistl
test
or
mov
cmp
sahf
scas
mov
ret
adcb
lock
mov
xor
icebp
lock
icebp
pop
mov
icebp
ret
aas
shll
sub
call
test
sti
shr
push
xchg
popa
les
sti
xchg
inc
lret
sarb
xchg
ret
je
divl
jnp
jne
rorl
scas
arpl
ret
pop
daa
idivb
mov
insl
ljmp
loope
cmp
mov
push
push
ljmp
in
cli
and
out
add
cmpsb
jno
pop
repnz
push
scas
xchg
insl
adc
mov
xchg
dec
sbb
cmpsl
adc
out
inc
dec
and
adc
mov
add
test
in
sub
loop
xlat
or
mov
mov
push
lret
frstor
loope
adc
stos
das
addr16
jle
or
inc
cmpsb
sarl
add
adc
cmpsl
in
arpl
xchg
aad
push
in
stc
cltd
xor
lret
dec
pop
mov
push
pop
mov
pop
inc
lahf
in
sub
add
cmp
inc
pop
outsl
idiv
or
fcmovnb
inc
jmp
or
out
test
scas
loopne
test
frstor
out
push
outsl
addr16
in
ret
popf
test
ja
and
jns
push
sbb
sbb
xchg
cmpsb
je
adc
shll
xor
mov
pop
lods
clc
push
jne
scas
or
jmp
mov
xor
xchg
outsb
fcoms
aad
imul
ss
jp
movsb
pop
int3
pop
mov
or
test
xchg
mov
fmulp
shrl
stos
or
cmp
push
lea
xor
scas
outsb
dec
inc
mov
das
nop
sub
lret
cmp
outsb
test
push
bound
cmp
lea
cmpsl
xchg
xchg
dec
jmp
pop
pop
jmp
aas
xor
dec
dec
pop
fcom
lcall
pop
pop
lahf
icebp
mov
mov
imul
push
or
or
and
fdivrl
inc
sbb
mov
fwait
out
xchg
lods
pop
lods
int
inc
mov
lret
out
sbb
mov
jp
push
adc
xchg
dec
lock
jp
lock
int3
cli
fistps
inc
jle
loope
repnz
pop
dec
mov
sti
pop
inc
pop
push
jns
adc
xchg
push
add
testb
cmp
sub
cli
out
mul
mov
daa
stos
sub
or
and
mov
xor
push
push
and
mov
ret
sub
jo
es
mov
sbb
adcl
pop
je
pop
outsl
sub
gs
and
push
adcb
xlat
cmp
jno
lea
cld
inc
xchg
adc
xor
jo
arpl
insl
mov
mov
repnz
jl
xchg
jge
mov
add
jmp
in
and
div
xchg
mov
cmp
cmpsl
push
dec
imull
mov
mov
ret
enter
imul
adc
out
sahf
into
dec
in
out
leave
inc
jp
jo
clc
sahf
test
out
das
aad
inc
dec
xor
repnz
and
lahf
dec
gs
jne
add
mov
jmp
iret
inc
dec
bound
xor
dec
pop
std
sbb
orb
jb
jbe
xchg
cmp
or
shrl
cltd
jb
test
xor
scas
shll
xchg
idiv
pusha
add
int
std
sbb
jo
xchg
arpl
cmpsl
movsb
push
imul
jo
cmp
ret
jg
jno
dec
lock
pop
mov
xor
das
dec
insb
mov
rol
ljmp
cmp
jl
push
inc
movsl
nop
mov
add
push
inc
cmp
mov
mov
adc
loopne
xchg
mov
cwtl
mov
inc
mov
hlt
push
gs
aas
stos
lret
movsl
xchg
sub
and
pop
fbld
pop
mov
sbb
jb
cmpsl
popf
mov
jns
pop
jb
push
pusha
or
lret
pop
lcall
in
stc
arpl
aas
pop
push
into
std
aad
mov
cmpsb
push
pop
popl
aas
mov
xlat
inc
in
and
cmp
int
addr16
imul
mov
and
into
out
jmp
sbb
add
fstl
sti
sahf
test
add
inc
pop
pop
sub
jae
ret
dec
sub
jg
pop
cwtl
out
mov
dec
inc
repz
mov
add
testl
negl
jae
test
mov
mov
or
or
and
push
ljmp
mov
out
xchg
shrb
jne
sub
push
dec
out
xor
sbbl
or
iret
fsubrs
popa
out
push
or
jecxz
mov
addb
push
jae
adc
pop
add
push
aam
in
lret
push
push
push
sbb
cmp
dec
mov
cmpsl
inc
add
jp
pop
out
fisubl
cmpb
lret
addl
fwait
ret
cld
aas
outsb
jno
pop
cmpl
inc
sti
cmp
fnstenv
xchg
insb
xor
xchg
test
test
cmp
mov
test
out
fsubp
cmpsb
cmp
lea
mov
cltd
call
out
arpl
cwtl
xchg
mov
addb
std
sarl
jb
std
mov
pop
adc
dec
pop
jp
jns
imul
jne
mov
shll
mov
xchg
add
xchg
jbe
cmp
lret
mov
xchg
and
sahf
enter
inc
ja
mov
lcall
insb
sbb
js
or
insb
add
test
cmp
out
sub
ja
in
jl
xor
lea
mov
sub
push
jmp
sub
hlt
ret
mov
cmpl
and
sub
mov
add
mov
frstor
jns
jb
mov
popa
push
push
sub
aas
push
ret
mov
stos
insl
or
lret
mov
out
or
loope
imul
sbb
xlat
mov
xchg
pop
fucomip
int
popa
imul
shr
jae
loopne
leave
lret
pop
insb
mov
loope
jge
push
lret
loopne
mov
call
mov
inc
sub
mov
test
loope
sub
adc
pop
pop
pop
push
sub
stos
loop
mov
adc
sbb
ret
in
imul
sbb
xorl
sub
push
sub
adc
jle
mov
hlt
jle
mov
call
movsl
imul
loop
testb
ds
adc
cmpsl
xchg
pusha
sub
jnp
pop
arpl
xchg
inc
testl
popf
mov
loope
fstpl
add
xor
or
into
xchg
scas
les
lock
push
loop
jg
xchg
pop
push
es
stos
out
lds
jg
mov
and
push
jmp
ret
test
ret
xchg
mov
dec
pop
or
out
into
push
mov
insl
out
xchg
push
push
shll
bound
popf
gs
add
je
sti
clc
xchg
out
jo
xor
cmpb
adc
nop
mov
xchg
mov
push
jb
or
inc
and
pop
xchg
fucomp
adc
enter
push
stc
jle
lret
mov
imul
dec
mov
mov
es
scas
pop
lahf
test
into
push
pusha
xchg
out
incl
dec
pop
dec
and
pop
push
je
lcall
outsb
cmp
pop
lock
and
call
inc
insb
push
lret
mul
and
jne
jae
push
js
add
cmpsb
aad
mov
test
hlt
loopne
jns
jp
xor
stos
xchg
xchg
aad
mov
jb
mov
rorb
int
pop
stos
fstl
pusha
or
cmpsb
pop
mov
fisttpll
ror
mov
inc
jo
mov
xor
insl
mov
xlat
push
sbb
xchg
loopne
sub
pop
and
inc
add
and
fisttpll
fbstp
cmp
mov
in
pusha
or
fiadds
std
mov
into
pop
imul
js
orl
cmp
sub
into
int3
adc
add
fwait
pop
ljmp
xor
daa
daa
call
movsl
daa
or
jo
or
arpl
jmp
inc
lock
aam
cmp
xor
mulb
movsl
dec
xor
cmc
xchg
jae
insl
push
ret
imul
popf
and
pop
in
push
mov
pop
and
xchg
clc
mov
mov
cltd
xchg
lret
jo
mull
adc
xchg
push
cmp
and
adc
dec
ljmp
cli
in
or
mov
call
mov
mov
call
push
push
adc
test
rol
mov
mov
dec
push
out
ja
inc
xchg
dec
push
fstpl
mov
lret
mov
adc
imul
ss
cmp
rcr
dec
int3
inc
jmp
pop
rcrb
mov
call
outsl
insb
push
fistps
fistpl
jmp
fsubrp
lret
pop
mov
orb
out
inc
gs
cmp
mov
xchg
jbe
dec
xor
or
repnz
popf
setne
fimuls
jns
cmp
jbe
adc
sub
mulb
inc
jo
inc
mov
iret
popf
aaa
mov
sub
enter
lret
scas
dec
jmp
movl
arpl
popf
jmp
addr16
sub
addr16
add
mov
inc
icebp
leave
ret
add
lds
pop
push
adc
adc
inc
out
xor
inc
xchg
xchg
adc
xchg
lods
xorl
and
loope
adcb
pop
push
in
imul
mov
inc
mov
sub
xchg
out
inc
and
iret
leave
mov
cs
and
xchg
popa
adc
xor
xchg
movsb
outsb
daa
jae
mov
sub
mov
xor
inc
mov
enter
gs
lret
jns
ljmp
idiv
fisubs
repz
shll
dec
dec
outsl
pusha
push
lea
xchg
int
inc
add
bnd
pop
aaa
popa
insl
stc
xchg
jmp
xchg
inc
popa
subl
pop
ret
fiadds
out
push
addr16
push
cltd
jnp
aas
push
add
mov
fildl
loope
mov
adc
xchg
xor
je
nop
ja
jmp
movsl
dec
and
dec
pop
iret
in
out
mov
jmp
inc
addr16
int
out
mov
lret
idiv
pop
jo
and
mov
subb
add
dec
arpl
test
inc
dec
mov
insb
and
pusha
scas
lcall
in
mov
xor
or
fnstsw
ljmp
adc
mov
and
test
inc
es
and
mov
gs
push
adc
add
in
ja
addb
pop
data16
cmp
in
inc
inc
lea
in
pop
lahf
inc
pop
clc
pop
in
mov
out
push
xchg
leave
xchg
xchg
mov
repz
push
dec
fstpt
jmp
ret
ja
jmp
out
lahf
mov
xor
stos
inc
call
dec
sti
mov
js
mov
push
inc
push
inc
addl
ljmp
jnp
or
xor
xchg
cwtl
imul
fsubrs
outsb
inc
xchg
mov
pop
inc
adc
xchg
or
divl
es
stos
dec
movsb
jb
push
xor
pop
fs
ljmp
push
inc
mov
out
mov
fsubr
out
movsb
mov
sbb
sub
mov
es
mov
inc
or
push
push
mov
mov
sub
popa
lock
inc
or
sahf
addr16
loop
orl
bound
ret
popf
bound
loopne
sbb
inc
test
stos
loope
add
lret
inc
loope
nop
popf
mov
shl
push
outsl
add
sbb
mov
sub
nop
dec
cmpsl
lret
cmp
push
ret
push
scas
push
call
xchg
and
fsubrs
push
test
jl
mov
jmp
inc
inc
and
lahf
push
jne
fstps
inc
mov
and
aad
scas
je
arpl
jo
mov
xor
mull
push
cmpsb
or
jmp
popa
sub
push
and
fcomi
pop
push
jne
inc
lahf
repnz
dec
add
add
pop
cwtl
mov
jae
test
inc
subl
popa
mov
xchg
add
pop
and
cltd
stos
outsb
faddl
out
out
lahf
sar
mov
adc
call
imul
inc
idivl
int
in
inc
ret
popa
test
in
jo
push
sbb
push
aaa
int3
fwait
popa
adc
pusha
out
push
ljmp
sub
lods
dec
fstps
popw
inc
push
pop
xchg
shl
jbe
into
adcl
mov
call
push
xchg
xor
mov
ja
sub
bound
aad
pop
rolb
mov
cmpb
out
sbb
adc
dec
test
out
cmpsb
xchg
sub
and
ljmp
cltd
neg
or
mov
xor
es
outsb
incl
divl
nop
xchg
or
out
mov
sub
cmp
test
popa
je
sub
jge
inc
sbb
sub
loope
mov
jecxz
sbb
jb
dec
ljmp
fistpll
js
jns
inc
int
mov
int
fcomip
fsts
mov
in
andb
and
fisttps
lret
pop
test
enter
bound
sarb
lods
sub
jge
in
sarb
int
and
xchg
outsb
mov
aad
clc
scas
add
add
xchg
aas
popf
iret
cmp
nop
inc
lcall
insb
push
mov
test
cmpsl
sub
inc
cmp
push
pusha
fcmovne
daa
xchg
outsb
lahf
incb
into
sbb
test
push
inc
or
pop
and
dec
aad
cwtl
push
adcb
xchg
cmc
imul
inc
inc
dec
fmulp
push
pop
jae
mov
dec
in
cmp
adc
popf
adc
inc
xchg
stos
add
movsb
xchg
inc
ret
out
mov
test
inc
mov
inc
sbb
imul
fldl
adc
xor
xchg
out
xor
xlat
imul
std
lret
dec
cli
data16
out
enter
int
xor
mov
frstor
in
mov
mov
sub
stos
push
clc
sar
mov
dec
nop
ds
arpl
push
movsb
dec
hlt
inc
push
pop
and
xchg
fwait
sub
daa
imul
add
inc
fisubrs
out
addb
or
sbbb
bound
divb
rolb
push
sbb
inc
cmpsl
or
cmpsb
push
or
iret
xlat
xchg
xchg
inc
movsb
mov
mov
call
push
xor
shl
iret
rcrl
rcll
jmp
xchg
repnz
cltd
scas
push
mov
sub
sub
cld
jbe
dec
sbb
std
push
sub
cltd
jbe
push
inc
imul
dec
adc
add
sub
pop
fadds
push
scas
xchg
fnsave
ja
aam
add
mov
ss
cmp
lea
ss
dec
into
push
xchg
jo
es
inc
out
aas
insl
imul
xchg
cld
push
jae
add
scas
dec
xchg
push
sbb
daa
daa
jnp
jle
xor
mov
cmp
xchg
pop
pop
jo
inc
xchg
mov
xchg
cmpsb
push
and
leave
push
mov
jb
mov
sub
or
xor
xchg
inc
cltd
aas
rcll
cmp
xchg
dec
pop
mov
jle
jmp
mov
mov
repnz
shlb
xlat
stos
rclb
bound
sbb
sub
mov
ret
gs
mov
add
push
mov
mov
leave
jge
sub
fcompl
movb
inc
pop
out
repz
mul
push
adc
das
inc
adc
and
cmp
mov
movsl
ja
push
mov
push
mov
movsl
icebp
inc
test
clc
sahf
arpl
jg
frstor
pop
out
mov
push
ror
mov
ret
aam
xchg
sub
call
fidivl
mov
jae
aas
mov
pop
inc
roll
scas
or
xchg
lahf
fcomps
outsl
mull
inc
jp
jmp
in
popa
mov
test
cmpsb
xchg
insb
mul
out
lods
les
jnp
data16
and
popa
outsl
in
jno
rcl
lea
inc
out
sub
pop
imul
jl
out
ja
int
arpl
push
mov
outsb
inc
mov
stos
sub
cs
cli
lods
or
repz
add
add
xor
jecxz
jl
cmp
out
insl
fadd
movsl
std
mov
push
xorb
and
mov
mov
bound
lahf
jns
les
stos
sub
test
lahf
mov
pusha
outsl
dec
jl
add
inc
sbb
adc
mov
out
sti
cmpl
pop
mov
subl
rolb
mov
in
mov
add
imul
clc
lcall
shlb
mulb
pushf
mov
xchg
mov
pop
mov
cmp
inc
and
repz
jle
pusha
sub
push
mov
inc
add
mov
shll
xchg
shll
dec
mov
imul
mov
jecxz
clc
ss
jmp
mov
fimuls
lock
out
dec
inc
jo
ja
shr
cmp
aas
mov
shlb
xchg
sub
daa
or
andb
mov
or
hlt
jmp
ret
dec
cltd
test
test
mov
adc
xlat
xchg
jl
shrl
mov
mov
jge
push
arpl
std
lcall
icebp
xchg
bnd
sbb
mov
pop
or
aaa
in
adc
fldl2t
dec
mov
mov
inc
outsb
js
out
mov
mov
fs
jne
pushf
outsb
or
xchg
and
int3
scas
sbb
cld
ds
adc
xchg
aad
dec
xchg
shlb
inc
lret
pop
loopne
addr16
inc
cld
shrl
mov
lret
fiaddl
mov
mov
sbb
inc
push
mov
push
jns
add
pushf
sahf
mov
jl
or
mov
fcomip
mov
outsb
dec
fwait
mov
xchg
push
push
mov
inc
sub
int
daa
rcrb
es
xchg
and
or
es
lods
loopne
jg
xor
mov
push
add
pusha
jbe
pop
das
movsb
pop
daa
shlb
mov
ret
addr16
mov
arpl
leave
inc
fwait
xchg
add
stc
sbb
out
addr16
jbe
jmp
cli
shrl
jb
cmp
mov
dec
add
push
repnz
add
dec
outsb
and
lret
xor
push
xchg
je
cmc
inc
stos
lods
jge
int
negb
push
pop
mov
xchg
lds
or
cmpsl
test
insb
and
mov
mov
mov
sbb
mov
xchg
push
and
pusha
insb
dec
vmwrite
pop
aad
push
mov
ret
lcall
mov
ja
in
movsb
dec
cltd
mov
mov
xchg
sti
clc
pop
out
fists
xchg
push
mov
push
push
sub
lds
cs
mov
cs
repnz
jo
pop
aam
and
stc
stos
xchg
push
fsubrl
movaps
push
sub
js
mov
aam
shrl
cwtl
repz
xchg
ds
cmp
mov
sub
subb
aam
mov
jo
xor
pop
inc
in
sub
lret
repnz
out
lock
sub
cmpb
jg
add
xchg
imul
outsl
or
push
sub
arpl
push
push
mov
pop
sbb
xchg
shll
or
testb
cmc
or
and
cld
mov
sub
popa
pushfw
pop
stos
std
add
icebp
adc
inc
scas
xlat
fs
pop
loop
nop
scas
popf
in
outsl
or
mov
sarb
inc
or
adc
call
stos
cmpsb
mov
ss
adc
or
clc
add
ja
repnz
outsb
add
sbb
pop
jnp
mov
lret
rclb
dec
hlt
mov
rclb
dec
push
xor
inc
aas
daa
push
lcall
inc
or
hlt
and
shrb
outsb
sbb
into
jo
test
push
out
mov
push
outsl
divps
inc
movsb
jmp
push
push
or
push
mul
stos
xor
imul
mov
jl
add
pushf
cmp
fs
aas
ror
dec
inc
data16
xor
xchg
cmp
xchg
daa
xor
scas
gs
add
or
addl
add
xchg
jb
mulb
inc
and
or
ljmp
pop
push
rclb
iret
and
gs
xchg
popa
repz
mov
fsub
xor
cmpsl
imul
jmp
es
adc
pop
pop
push
imul
pop
addr16
sahf
stc
sub
sub
inc
sub
jo
cmp
ljmp
inc
cmp
jns
repz
xor
arpl
mov
jle
imul
xchg
adc
test
sbb
cmc
gs
cwtl
sbb
sub
xchg
mov
adc
cmpsb
rcll
fcompl
add
push
imul
inc
fwait
xchg
adc
into
bnd
push
pop
dec
cmpsb
and
addl
jmp
lea
jns
dec
mov
jge
pop
jg
jg
stos
mov
test
out
mov
mov
and
lock
cmp
push
cmp
mov
push
mov
movsl
xchg
sbb
lods
arpl
jo
scas
das
pusha
push
mov
rcrb
cltd
call
js
inc
mov
inc
das
xor
outsb
pop
mov
xor
dec
xchg
leave
test
inc
enter
mov
push
js
cmp
movsb
xor
xchg
inc
adc
xlat
inc
jno
fsts
jecxz
adc
push
jl
fisttpll
insl
jno
push
shlb
repnz
cltd
arpl
call
sahf
jns
sub
xor
sbbl
ja
sub
popa
pop
aas
pextrw
cmp
clc
push
lret
mov
jl
scas
and
je
push
inc
popa
fistpl
jb
and
pop
adc
jae
sbb
inc
inc
pop
ja
push
rolb
stc
jb
or
pop
out
rorl
inc
andb
push
in
push
daa
int
jge
enter
loopne
outsb
and
stos
inc
adc
loop
add
dec
ss
iret
or
xor
addr16
jle
dec
mov
jecxz
imul
dec
adc
arpl
xchg
mov
ficomps
mov
jp
aad
out
lahf
push
mov
xchg
movsl
add
sub
mov
stos
leave
cmp
sti
data16
cmp
push
xor
pop
push
and
add
pop
xchg
adc
orl
mov
jg
ss
aas
fst
sbb
dec
or
xchg
xchg
xor
and
xor
xchg
jb
mov
ret
ret
and
adc
mov
push
pop
shlb
in
shll
xchg
mov
xchg
movsb
sub
and
nop
outsl
pusha
pop
xor
xchg
jne
push
jnp
in
rcl
js
xor
rcrl
cs
sbb
fisttpll
xchg
inc
sbb
dec
fildll
roll
dec
and
fstpt
and
dec
aam
test
push
jno
fidivs
lret
push
jge
mov
ss
daa
movsb
lds
and
cmp
xchg
mov
ljmp
inc
and
and
dec
xchg
xchg
and
ret
lds
lods
mov
jno
mov
ret
movsb
jl
or
ret
leave
mov
sub
fiaddl
rcll
pop
idivl
stos
daa
xchg
rorb
sub
xlat
adc
push
xchg
ss
xchg
cs
dec
gs
xor
inc
jnp
add
jo
popa
mov
daa
dec
out
jmp
addl
cld
and
fnop
or
mov
fcoms
inc
mov
mov
add
xchg
call
cwtl
ja
ret
testl
xor
cmpb
xor
in
inc
popa
add
or
negb
or
in
add
push
cld
lock
ja
dec
push
negl
ja
aam
add
fdivrs
sub
xchg
mov
testl
jnp
in
icebp
inc
mov
and
mov
inc
test
out
xor
out
inc
xor
stos
lcall
xchg
jno
loopne
jo
fidivs
fidivs
inc
and
mov
movl
in
int
xor
std
or
mov
push
mov
pop
and
divl
lahf
lea
or
pop
mov
adc
cmp
inc
and
fsubrl
or
rcll
jg
cld
xchg
xchg
int3
sub
loopne
xlat
pop
mov
ds
jecxz
push
dec
shlb
pop
daa
fwait
adc
rclb
sbb
dec
mov
fs
add
mov
hlt
cmp
enter
mov
push
lcall
xor
stc
mov
xor
pop
mov
pop
in
adc
in
pop
push
push
shl
std
shrl
mov
repnz
mov
push
roll
insl
sbb
mov
mov
ret
push
inc
lahf
cmpsl
mov
pop
adc
jb
jecxz
ret
das
loopne
sub
sti
lahf
inc
icebp
loop
xchg
adc
xorb
out
scas
xchg
jmp
xchg
xchg
xchg
jae
mov
repnz
sarl
cmpsl
movsb
bound
jnp
aam
mov
fidivs
mov
mov
xchg
jne
fwait
mov
add
std
jle
push
mov
imul
jns
dec
mov
xchg
add
pop
test
inc
dec
or
fildl
popl
inc
jecxz
mov
into
lock
lods
add
xchg
pop
xchg
xlat
inc
xchg
mov
scas
or
cmp
js
mov
ficomps
sahf
mov
cs
lock
rcl
inc
mov
ss
insl
and
imul
ss
pop
fadds
xor
mov
push
test
jne
cmp
cmp
xor
cs
add
inc
or
xchg
inc
das
inc
xchg
add
enter
add
and
test
or
push
into
lahf
cmc
push
int3
push
je
test
ljmp
add
inc
or
jp
inc
cmp
xchg
jl
push
ret
mov
test
stos
jg
gs
cli
jmp
xchg
xlat
loope
and
jae
or
mov
add
jbe
imulb
les
xchg
add
push
shrl
sahf
lds
out
ret
adc
frstor
inc
sub
push
jg
ljmp
imul
dec
mov
lods
add
pop
insb
jp
push
sub
lock
sbb
lahf
lea
or
jo
mov
inc
pushf
xchg
lcall
dec
pop
jge
xchg
rolb
adc
adc
inc
and
imul
push
outsl
fs
add
push
idivl
sub
jae
insb
outsl
cmp
sub
or
popf
loope
or
push
cltd
push
popa
ss
int
into
stos
lret
ja
and
repnz
add
cs
fistpl
xor
adcl
fists
aaa
adc
sub
daa
cmp
dec
sub
pop
scas
in
test
cs
cmp
lret
out
std
jmp
sti
xchg
mov
inc
inc
mov
pcmpgtd
fs
push
es
dec
loop
scas
mov
jmp
jg
adc
in
std
or
mov
cmpsb
nop
jns
pushf
test
xchg
jbe
and
pushl
fs
sbb
xor
shll
mov
insb
mov
mov
cmpl
mov
xchg
mov
dec
mov
movb
in
idivb
cmpl
loope
pop
shrb
add
jne
add
mov
push
fcoms
bound
push
mov
cli
and
cs
mov
mov
mov
adc
addb
jnp
ret
push
jo
outsb
rcll
xchg
jmp
push
fsubrs
xchg
inc
xchg
pushl
loopne
push
mov
jmp
shlb
ret
pop
jp
test
pusha
popa
or
cmp
sub
pop
scas
xchg
push
or
lcall
mov
popa
pop
mov
xchg
ret
popa
dec
mov
std
mov
in
add
repnz
mov
nop
shrl
mov
fsubrl
or
lcall
push
les
jmp
push
loopne
pusha
pop
arpl
sub
add
daa
cli
xchg
sbb
dec
dec
dec
xchg
ret
scas
dec
nop
in
sub
clc
or
push
cs
xchg
nop
subl
rolb
jo
sarl
xchg
leave
fisubs
lahf
pop
jo
dec
mov
pop
push
cmp
cmp
fiaddl
add
jecxz
mov
cmp
insb
out
jl
into
cltd
inc
pop
mov
mov
jle
gs
sub
mov
sub
jg
mov
lahf
imul
xchg
cmp
arpl
addr16
mov
dec
xorb
inc
push
dec
test
dec
lea
into
andl
mov
outsb
adc
sbb
jae
mov
ret
push
ret
or
sub
movsl
xor
jp
sbb
push
pop
out
sub
pop
fdivl
mov
cmp
cmpsl
push
push
or
pop
sarl
and
xchg
push
pusha
mov
jns
push
xchg
sahf
lret
in
jmp
jns
mov
je
les
jno
pop
jnp
pop
mov
scas
xchg
inc
bound
jno
dec
mov
das
js
mull
lock
push
mov
jmp
hlt
leave
lds
je
and
mov
push
out
cli
stos
popf
jmp
sub
das
sti
cmp
arpl
sbb
data16
sbb
mov
inc
sbb
cmp
cmp
enter
sub
call
adc
stos
sub
pop
push
aam
jle
repz
mov
jb
cli
jmp
popa
adc
ja
fstpl
dec
sbb
mov
arpl
dec
mov
cwtl
jmp
fsubrs
stos
fcmovnbe
in
sbb
nop
cmpl
xchg
mov
scas
push
jge
xchg
inc
pop
lock
xchg
mov
jl
call
xchg
repz
xchg
ljmp
int
push
fneni(8087
jo
dec
pop
dec
test
cmp
or
jge
je
mov
xor
inc
jmp
cs
iret
add
push
sub
cmpsl
push
cmp
inc
iret
in
dec
or
and
push
leave
mov
push
push
jp
push
loop
xor
mov
je
push
mov
popf
sbb
or
lea
fs
test
dec
leave
mov
pop
push
or
mov
inc
movsb
xchg
jp
in
js
pop
sbbb
gs
add
cmp
popf
jo
lahf
dec
sahf
mov
clc
popa
mov
mov
mov
xor
mov
daa
std
out
hlt
xchg
xor
inc
adc
cmp
pop
mov
stos
fimuls
out
mov
jle
stos
lret
subb
leave
rclb
in
push
jle
fcompl
jns
inc
or
jge
mov
fs
dec
cld
adc
es
call
std
js
movsb
nop
ljmp
cwtl
arpl
mov
lret
jae
xchg
dec
jnp
lcall
into
fwait
mov
shlb
adc
add
sbb
mov
pop
aad
and
push
out
jg
fimuls
in
out
push
xor
js
test
dec
jo
dec
sti
mov
mov
jbe
cmpsb
frstpm(287
push
jbe
sub
lahf
jle
inc
xchg
repnz
xor
leave
outsb
aas
add
imul
rorl
xchg
bound
dec
and
mov
mov
ret
shr
in
push
or
shrb
popa
dec
out
lock
push
push
ret
outsb
ljmp
popa
test
jmp
or
xchg
or
xchg
mov
loope
and
inc
stc
mov
xchg
mov
shl
jno
inc
jae
test
xchg
test
lret
outsl
pop
jo
pop
cmc
sahf
ret
xchg
jg
push
push
lret
mov
jbe
dec
mov
mov
jns
mov
orb
sahf
outsl
add
mov
jnp
xor
call
jne
xorb
stos
adc
jne
sub
out
lret
cmp
mov
outsl
inc
mov
push
pop
repz
push
jge
ret
ljmp
fs
fmull
jbe
out
push
pop
cltd
sub
jge
jb
fdivs
in
or
lahf
data16
in
push
mov
loope
xor
in
pop
adc
jecxz
xor
stos
mov
das
nop
stc
inc
imul
push
mov
out
mov
inc
jp
push
mov
sbb
rcl
call
sub
xchg
inc
push
xchg
mov
decb
lret
outsl
pop
xchg
xor
cmp
fs
and
das
push
xchg
cmp
lret
mov
pushf
jmp
sarl
xchg
cmpsl
orl
fmull
xchg
leave
popf
sbb
ret
mov
mov
jmp
jp
jp
push
mov
add
push
addl
add
jb
push
mov
and
jno
adc
fsubl
mov
ret
xor
mov
int
iret
shlb
xlat
or
or
lahf
in
dec
mov
test
shlb
imul
es
rcrb
repz
ret
out
dec
shll
aas
stos
xor
fists
cmpsl
sarb
mov
cmp
inc
fldt
cmpsl
js
fwait
cmpsb
dec
mov
push
pop
or
mov
cmpsb
add
xor
cmpsl
xchg
enter
xor
ds
pop
nop
or
lret
js
das
mov
inc
jl
and
inc
jns
push
or
jp
scas
mov
iret
mov
daa
push
push
iret
rol
mov
lds
adc
sub
pop
dec
shl
movsb
mov
inc
movsl
xchg
lcall
cld
mov
adc
rcrl
dec
sarl
arpl
out
fs
and
cs
test
jl
bound
xchg
mov
in
insl
out
inc
mov
push
push
in
aam
outsl
cmc
lds
dec
inc
pop
inc
cmpsb
sti
ljmp
jae
popa
into
gs
jae
fnstsw
addr16
sbb
cmp
push
xchg
bound
or
daa
js
ss
aas
push
fdivl
mov
inc
mov
mov
mov
es
inc
mov
dec
xchg
leave
cltd
aas
sbb
sbb
gs
mov
push
jbe
xchg
push
subl
clc
xchg
mov
cld
jle
pop
push
arpl
jle
lret
outsb
pusha
lea
test
adc
dec
orb
sbb
push
daa
movsb
cmp
inc
sub
cmp
bnd
or
sahf
cmp
lds
push
imul
pop
arpl
loope
cmp
jns
shrb
pop
ljmp
fbstp
push
inc
test
push
imul
lock
push
push
pushf
enter
popa
jbe
rorb
lds
sarl
orb
xchg
push
bnd
dec
cmpsb
ss
add
xchg
pop
call
pop
add
push
adc
pop
insb
xorb
jae
jg
mov
jnp
pop
popa
ljmp
add
mov
push
test
pop
push
push
add
push
insb
inc
mov
pop
arpl
or
xor
xor
in
inc
cld
xchg
shrb
and
or
xchg
mov
add
sub
cmpsl
sub
push
loope
andb
and
popa
sub
out
cli
imul
rcll
popa
or
pop
das
add
mov
enter
mov
cmpl
or
jo
cmp
lods
or
push
mov
or
ja
jns
mov
adc
jl
jmp
jns
pop
pop
adc
lahf
jl
lcall
into
jmp
xchg
shlb
sub
lahf
arpl
mov
jbe
stos
pop
fwait
and
cmp
jnp
shrl
adc
or
iret
sub
xchg
outsb
and
sub
movsl
mov
mov
lods
mov
das
scas
mov
cmpsb
fldl
lret
pop
and
notl
lcall
push
lock
aam
aas
jle
jno
sahf
arpl
or
int
sub
and
jge
and
cmp
call
push
cmp
sbb
cmp
jno
sub
out
sahf
test
and
jb
mov
cmpsb
mov
out
into
ret
scas
sbb
cmpsb
mov
push
test
jbe
aad
xchg
mov
mov
fidivrl
mov
mov
outsl
dec
xchg
rcrb
in
pop
sbb
ss
mov
mov
and
sbb
insl
loope
dec
scas
pushf
dec
and
sbbb
and
sub
fucomi
data16
push
ret
add
sub
mov
in
lock
repnz
dec
stos
dec
fstpl
mov
rcrl
lea
pusha
mov
jne
inc
lea
xchg
arpl
sbbl
pop
fadd
pop
fistpll
pusha
test
pop
daa
add
dec
and
dec
mov
pop
inc
fsubs
lcall
aaa
movsl
andps
sbb
popa
lods
call
lods
push
pop
mov
inc
jge
ret
mov
add
cmpsb
xor
loop
or
mov
fimull
aas
dec
fldt
mov
movsb
sub
int
gs
scas
pop
adc
aaa
leave
cld
neg
fbld
dec
int3
hlt
pop
cmpsl
xchg
stos
cmp
sub
insb
data16
inc
inc
add
aad
call
test
push
out
mov
or
jmp
sahf
pusha
push
imul
shl
loopne
sub
mov
mov
xchg
dec
rclb
mulb
cmpsl
aas
mov
jbe
loop
mov
repz
xor
push
out
jl
cmp
bound
push
aaa
pop
cmp
xor
insl
movsl
fisttpl
adc
sub
subl
and
cli
dec
inc
jb
pop
ljmp
cmpsb
andb
jmp
push
pusha
stos
add
mov
dec
adc
popa
fisubs
pop
add
fwait
loop
sub
in
xchg
in
lret
inc
pop
mov
xchg
inc
mov
cmp
stc
fisttpl
xchg
scas
cmp
divl
test
lret
xchg
pop
or
aas
adc
lock
inc
dec
ljmp
push
push
daa
sahf
xlat
icebp
inc
stos
push
mov
pop
rolb
xor
call
inc
xchg
lret
jae
pop
and
data16
test
jno
in
jp
pop
aad
sub
aad
xor
push
sbb
aad
or
cld
xchg
sbb
inc
repz
stos
cli
addr16
cmpsb
mov
std
mov
daa
test
and
rcrl
xchg
cmp
jno
test
dec
xchg
imul
lods
add
pusha
push
fmull
cld
scas
fsubs
push
xchg
stos
sbb
adcb
mov
push
mov
jne
stos
iret
out
rcl
and
arpl
imul
sbb
je
int
xlat
or
cmp
sub
scas
loope
cmp
mov
jmp
push
dec
clc
addr16
lahf
cmp
push
clc
pop
dec
pop
imul
or
inc
push
adc
sub
sub
xchg
push
lea
or
dec
jo
xchg
mov
stc
fwait
popa
dec
mov
push
dec
ret
jg
mov
and
pop
andl
icebp
or
push
mov
lret
repz
sub
push
xorl
mov
adc
xchg
push
dec
jle
or
and
mov
sub
jno
dec
jnp
incl
in
and
into
push
push
in
cmc
insl
xor
in
xchg
xor
mov
ds
rorb
pop
outsb
es
xlat
cld
rorb
mov
dec
and
and
fstpt
leave
push
out
mov
push
inc
imul
imul
mov
loope
mov
inc
or
mov
jle
mov
lcall
stos
out
mov
sti
ja
push
or
enter
sbb
cmp
mov
mov
add
sub
test
push
out
push
lods
inc
test
jp
loope
xchg
rcll
shlb
xlat
fs
movsl
mov
or
out
inc
out
psllq
mov
adc
in
xchg
sub
jecxz
ret
pop
push
pushf
mov
mov
jns
adc
in
xor
test
xor
shll
ret
cmpsl
dec
sub
shlb
les
stos
scas
push
pop
cmpsl
test
jecxz
add
aad
incb
jle
gs
repz
lods
loop
cmpsw
mov
inc
in
jmp
push
mov
xor
mov
xchg
sbb
mov
or
leave
fisubrl
mov
mov
pop
pop
lahf
lods
in
sub
loop
jecxz
ds
mov
push
rcr
loope,pn
mov
adc
adc
icebp
jle
or
push
inc
cmpsl
lahf
and
jb
sbb
repz
dec
or
popa
inc
cmp
mov
mov
push
jl
push
mov
jae
sub
icebp
mov
int
push
shl
es
sub
and
cmpsb
int
rorl
addr16
jecxz
ret
aam
inc
sub
repz
dec
jns
cmp
and
xor
popf
call
bound
popa
push
jb
nop
jo
xchg
mov
xchg
push
je
lcall
cmp
xchg
mov
and
or
push
xchg
imul
jae
dec
and
orb
xor
pop
mov
push
loop
push
pop
cmp
pop
mov
push
pop
fnstsw
mov
push
stos
scas
add
lods
mov
xchg
cmpsl
dec
and
test
mov
dec
jno
fdivp
jae
fcompl
loop
xor
fimull
cmp
fsubp
les
adc
iret
addr16
adc
mov
xchg
dec
and
sbb
xor
push
dec
fistps
out
aaa
cmp
lock
dec
insl
jae
ror
inc
iret
dec
insb
mov
mov
imul
mov
or
in
fldl
push
fs
addr16
pop
fsubrl
jecxz
lret
movsb
add
fistps
stos
pop
adc
popl
insl
into
movsb
icebp
mov
movsl
push
jns
mov
scas
mov
xlat
scas
mov
add
xor
push
loopne
loop
adc
sub
roll
add
jecxz
xchg
adc
aaa
jg
push
fidivrl
mov
jb
loop
bound
test
sbb
mov
dec
call
cltd
mov
scas
shll
xor
jb
int
addr16
xchg
adc
in
push
add
test
daa
loopne
or
out
dec
arpl
mov
iret
fstpl
add
jne
sbb
mov
cmp
rclb
xor
mov
test
adc
or
and
pop
mov
cmp
sub
mov
xchg
or
mov
subl
cmpsl
into
add
shrl
ds
or
clc
out
push
movsl
popf
movsl
sub
mov
xchg
or
or
cli
mov
iret
cmp
mov
aad
push
mov
in
mov
fbld
xor
mov
ficomps
stc
inc
scas
aas
icebp
test
xchg
cmp
xchg
imul
mov
repnz
in
mov
ret
test
add
lods
mov
cmpsl
add
mov
xchg
add
or
pop
outsb
or
mov
rolb
dec
lret
add
loop
inc
or
pop
pop
jg
and
imul
inc
sbb
adc
cltd
rcrb
das
cmpsl
rclb
popf
and
mov
movsb
std
adc
pusha
jle
out
push
pop
xchg
xor
addr16
clc
cmp
mov
lcall
xchg
push
dec
mov
ret
cmpsl
cmp
lods
inc
sub
je
cwtl
xor
leave
sahf
outsb
dec
jno
mov
fbld
shrl
or
outsb
and
or
jmp
in
mov
push
sbbl
sub
mov
inc
mov
pop
cwtl
pop
adc
cmpsl
jp
ret
dec
popf
dec
push
ljmp
mov
push
popa
ret
jle
sbb
cs
fwait
jb
cmp
sti
repnz
push
pop
ss
mov
out
inc
xchg
sbb
mov
imul
xor
jbe
jg
add
and
or
inc
stos
sub
int3
leave
sub
das
push
push
fsin
mov
cli
xchg
adc
inc
sbb
pop
jbe
dec
cmpsl
pop
push
rorl
sbb
push
mov
notl
daa
lret
roll
popf
pop
imul
sbb
iret
xchg
mov
pop
inc
push
xor
and
and
mov
cmp
je
loop
mov
cwtl
push
mov
popa
jg
dec
je
aad
mov
fld1
adc
adcb
pop
imul
outsb
orb
leave
mov
out
out
xchg
jmp
add
xor
test
xchg
jno
cmp
gs
stos
stos
sarl
push
icebp
cmp
inc
jecxz
pop
jo
push
out
and
icebp
stos
xor
movsl
mov
inc
outsl
inc
xchg
pop
mov
lret
xchg
push
dec
ret
mov
arpl
cwtl
inc
dec
shr
push
sub
daa
jg
pop
jecxz
cmc
add
adc
cmpsb
addr16
push
cmp
add
pusha
mov
mov
adc
jp
sbb
mov
jb
imul
and
imul
sbb
mov
dec
fs
mov
sub
xchg
ret
pusha
jmp
test
popf
mov
pop
push
leave
inc
and
pop
pop
addr16
stos
aas
inc
mov
scas
inc
xor
es
jg
jmp
addr16
inc
test
loope
xchg
cmp
shll
jp
shrl
shl
imul
rclb
jmp
stos
int3
ds
imul
in
rcrl
lea
xlat
inc
jge
push
mov
out
sub
imul
nop
fidivrl
or
scas
aam
jmp
sub
mov
jnp
add
in
mov
rolb
sti
repnz
push
or
sar
and
inc
imul
sub
mov
cmpsl
dec
mov
pop
inc
test
cltd
jmp
and
ds
cmp
cmp
xchg
inc
mov
jg
subb
push
or
and
fstps
sub
cmp
popa
enter
mov
jae
out
xor
das
inc
into
imull
push
xchg
test
int
adc
xchg
popa
stos
dec
loopne
push
outsl
and
cmp
add
outsb
or
arpl
test
sahf
test
mov
sbb
xor
icebp
cmp
dec
add
dec
test
mov
dec
cmpsb
popf
popf
jns
shl
push
mov
ja
aad
push
add
adc
xchg
andl
bound
push
test
repnz
push
in
and
test
jno
push
inc
sbb
or
mov
mov
psrlq
lock
lcall
pusha
push
xor
rclb
int
jg
mov
add
xor
in
mov
dec
push
xchg
mov
rorb
sub
ret
cld
daa
xchg
repz
lcall
sub
add
imul
mov
fcmovnb
imul
arpl
adc
shlb
xor
pop
lods
jae
repnz
jle
xabort
repz
aas
jns
scas
nop
call
es
rclb
out
add
jmp
jp
pop
dec
add
cwtl
aaa
mov
cwtl
sbb
out
jl
pusha
pop
jo
insb
aam
sbbl
jb
cmp
das
cmc
add
mov
or
mov
jge
and
bound
pop
cmp
cmp
xor
jl
push
sub
xchg
adc
mov
lahf
sub
je
mov
inc
outsb
fadd
dec
mov
push
sub
dec
sub
jno
lret
loopne
fistpll
mov
out
mov
sbb
cmp
mov
xchg
or
cwtl
inc
add
test
sbb
in
xchg
mov
jp
or
fildll
xor
rclb
movb
mov
data16
aas
aas
call
push
out
add
roll
call
jnp
cmpsb
inc
fcoml
in
test
test
int
jb
lret
jl
sub
xor
pop
xchg
scas
push
sub
dec
into
inc
imul
jle
push
es
and
cs
