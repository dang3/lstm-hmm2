cmpsb
daa
add
add
add
dec
dec
inc
inc
push
push
xor
cs
insb
add
sldt
inc
jb
popa
je
inc
jne
add
adc
inc
outsl
inc
jb
popa
je
dec
outsb
jae
popa
outsb
arpl
add
add
dec
outsb
imul
add
pop
add
push
gs
jb
js
inc
insb
popa
outsb
imul
add
push
popa
jae
dec
gs
inc
jb
add
in
add
outsb
imul
add
xor
push
je
imul
inc
dec
push
dec
inc
add
xor
cs
insb
add
add
outsl
jae
dec
popa
outsb
fs
add
add
insl
jo
jb
inc
imul
xor
inc
outsl
insl
jo
jb
push
je
imul
add
insl
jo
jb
push
je
imul
add
gs
je
inc
imul
jns
add
dec
add
gs
je
inc
jbe
outsb
je
add
push
add
gs
je
inc
imul
jb
popa
je
dec
jne
gs
add
arpl
inc
jb
popa
je
push
jb
arpl
jae
add
imul
je
push
push
add
jp
inc
gs
gs
inc
jb
je
arpl
push
arpl
outsb
add
inc
gs
gs
inc
imul
imul
push
dec
imul
popa
insb
insb
jae
popl
inc
outsb
je
jb
jb
je
arpl
push
arpl
outsb
add
mov
inc
js
popa
outsb
fs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
insb
gs
imul
jae
gs
push
imul
inc
imul
gs
add
outsb
fs
imul
gs
add
aam
inc
imul
inc
imul
outsl
jb
popa
je
gs
popa
addr16
add
out
add
gs
imul
cmp
inc
gs
jne
jb
outsb
je
jb
arpl
jae
cmp
inc
gs
jne
jb
outsb
je
jb
arpl
jae
add
inc
jne
jb
outsb
je
push
add
add
je
jne
jb
outsb
je
push
dec
add
dec
add
je
jb
jbe
push
jns
gs
add
inc
gs
js
je
outsl
fs
jb
arpl
jae
add
inc
gs
js
je
outsl
fs
push
add
inc
gs
imul
bound
gs
js
add
pop
add
je
imul
bound
gs
add
pop
add
je
imul
pop
add
je
imul
pop
add
je
imul
imul
gs
outsl
arpl
push
imul
inc
gs
outsl
arpl
gs
outsb
outsw
push
add
outsl
add
je
outsl
imul
jbe
push
je
imul
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
popl
inc
gs
jb
jbe
je
push
jb
imul
push
add
push
jb
jbe
je
push
jb
imul
imul
add
je
jb
arpl
fs
jae
add
fwait
add
je
jb
arpl
jae
gs
jo
add
push
jns
je
insl
inc
gs
jne
je
popa
outsb
addr16
inc
add
mov
push
jns
je
insl
inc
imul
jns
add
push
jns
je
insl
dec
outsb
outsw
add
push
jns
je
insl
push
imul
gs
jns
je
insl
push
imul
insb
gs
imul
gs
imul
je
add
add
je
jae
jb
gs
jne
je
popa
outsb
addr16
inc
add
loopne
inc
gs
gs
imul
loop
inc
gs
outsl
insb
jne
gs
outsb
outsw
jb
popa
je
outsl
outsb
push
add
add
je
outsl
insb
jne
gs
popa
je
jo
inc
add
add
add
je
imul
imul
jns
add
out
add
outsl
bound
inc
insb
insb
outsl
arpl
cmc
add
outsl
bound
inc
jb
add
push
add
popa
jo
insb
insb
outsl
arpl
or
dec
gs
jo
jb
add
adc
dec
gs
jo
gs
insb
insb
outsl
arpl
sbb
dec
outsb
imul
inc
jb
je
arpl
push
arpl
outsb
add
dec
outsb
je
jb
outsl
arpl
fs
outsl
insl
jo
jb
inc
js
push
add
push
add
je
jb
outsl
arpl
fs
arpl
insl
outsb
je
add
add
je
jb
outsl
arpl
fs
js
push
add
add
je
jb
outsl
arpl
fs
outsb
arpl
insl
outsb
je
add
dec
gs
jbe
inc
jb
je
arpl
push
arpl
outsb
add
dec
add
fs
imul
js
add
push
add
popa
insb
inc
jb
add
dec
popa
jo
imul
insb
add
dec
outsl
jbe
inc
imul
jne
je
inc
jns
gs
outsl
push
imul
add
push
jne
jb
push
gs
outsl
jb
popa
outsb
arpl
outsl
jne
je
jb
test
fs
imul
gs
gs
jae
dec
jne
gs
add
outsl
jbe
inc
imul
jns
add
ret
gs
je
jbe
outsb
je
add
add
je
outsb
fs
inc
imul
gs
jbe
outsb
je
add
inc
imul
bound
gs
add
push
add
je
imul
gs
add
add
je
imul
sbb
push
gs
popa
jae
inc
jb
outsl
jb
add
add
je
outsb
push
gs
js
gs
imul
gs
inc
add
gs
dec
add
jae
gs
push
imul
insb
gs
imul
push
gs
imul
outsl
arpl
jae
add
push
outsb
push
gs
js
gs
imul
gs
add
push
outsb
insl
popa
jo
imul
insb
add
je
outsl
jb
jne
je
jo
gs
bound
arpl
add
je
outsl
jb
imul
push
arpl
add
fs
push
dec
jne
je
inc
jns
add
gs
imul
je
arpl
push
add
mov
insb
jae
jb
insl
jo
push
add
jb
jo
outsb
push
add
insb
outsb
inc
add
mov
jb
outsb
push
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
add
pusha
fildl
ja
jb
add
sub
inc
push
js
push
add
inc
push
jo
jb
add
aaa
add
mov
add
jb
add
mov
jo
je
push
popa
addr16
add
loope
inc
js
je
imul
js
jmp
inc
gs
arpl
gs
imul
add
je
gs
outsl
popa
jb
push
jns
add
inc
gs
imul
cmp
add
outsl
arpl
jae
add
in
add
addr16
popa
imul
je
jo
gs
bound
arpl
add
push
gs
jae
addr16
add
add
push
outsl
jae
dec
gs
popa
addr16
add
inc
add
outsb
fs
gs
popa
addr16
add
stos
add
outsb
jae
popa
je
dec
gs
popa
add
push
push
inc
push
xor
cs
insb
add
sub
push
popa
je
inc
int3
inc
add
je
outsb
jae
outsl
outsb
push
add
dec
add
je
add
inc
add
imul
push
popa
je
lret
enter
je
add
popa
je
out
inc
add
add
data16
je
xchg
aam
add
inc
popa
arpl
insb
popa
jae
movsl
ljmp
push
jo
outsl
push
outsl
outsl
je
add
fadds
push
je
inc
push
add
jb
insl
jo
push
add
filds
push
je
inc
insl
jo
add
add
jb
inc
push
add
push
je
push
je
dec
push
add
or
push
je
push
outsl
dec
outsb
je
js
add
add
jb
outsl
dec
outsb
je
add
add
insb
inc
outsl
insl
bound
gs
add
add
insb
inc
gs
popa
jb
push
add
dec
push
inc
push
dec
cs
insb
add
push
dec
inc
jb
ja
gs
outsl
jb
outsl
insb
fs
add
mov
push
dec
inc
gs
outsl
insb
fs
popa
je
dec
filds
add
inc
gs
popa
insb
insb
outsl
arpl
mov
gs
popa
je
sub
inc
add
dec
imul
add
movsb
loope
add
arpl
gs
add
inc
dec
dec
xor
cs
insb
add
inc
fs
jae
push
outsl
imul
jb
jbe
insb
gs
sbb
outsl
arpl
gs
outsb
fs
outsb
imul
push
imul
outsb
jbe
jb
push
je
imul
jb
je
inc
gs
jb
jo
outsl
jb
outsl
push
arpl
imul
imul
add
inc
outsl
jo
push
imul
popa
insb
push
imul
gs
imul
dec
outsb
addr16
test
inc
add
or
inc
gs
arpl
imul
imul
arpl
add
je
arpl
imul
imul
outsb
gs
add
add
je
outsl
imul
outsb
outsw
jb
popa
je
outsl
outsb
add
add
push
popa
insb
imul
add
imul
jb
jbe
insb
gs
popa
insb
jne
push
add
jae
inc
insb
outsl
jae
add
bound
dec
jae
inc
jb
gs
gs
outsl
jb
add
dec
jae
dec
je
je
je
jae
outsl
push
imul
add
dec
jae
dec
jo
outsb
push
outsl
insb
imul
jae
push
jne
jb
dec
outsb
outsw
jb
popa
je
outsl
outsb
push
outsl
insb
imul
jo
outsb
push
jb
arpl
jae
outsl
imul
add
add
addr16
insb
outsl
jae
dec
gs
into
add
addr16
jb
popa
je
dec
gs
js
add
add
addr16
gs
gs
dec
gs
add
add
addr16
outsb
jne
dec
gs
js
add
add
addr16
outsb
jne
dec
gs
add
add
addr16
jo
outsb
dec
gs
js
add
add
addr16
jo
outsb
dec
gs
add
add
addr16
jne
jb
push
popa
insb
jne
inc
js
add
cli
add
addr16
gs
popa
insb
jne
inc
js
add
sub
push
gs
popa
insl
gs
arpl
imul
add
push
inc
push
dec
xor
cs
insb
add
add
je
jb
gs
popa
outsb
outsl
outsb
imul
push
jb
push
add
jb
dec
outsb
je
jb
gs
jb
arpl
jb
push
add
gs
gs
gs
outsl
outsb
outsb
arpl
push
je
je
add
gs
gs
jne
jb
dec
jo
imul
dec
dec
dec
dec
inc
push
cs
insb
add
inc
dec
pop
inc
gs
inc
gs
outsl
fs
push
imul
jb
jo
jb
jns
add
inc
dec
pop
inc
gs
inc
gs
outsl
fs
push
je
je
jae
lea
inc
dec
pop
dec
outsl
arpl
gs
inc
gs
outsl
fs
add
out
push
gs
jo
insb
outsl
jae
inc
imul
add
add
je
jo
insb
outsl
jae
dec
outsb
inc
imul
je
jo
imul
jb
jbe
jb
outsb
outsw
dec
imul
push
gs
jo
imul
inc
gs
arpl
outsb
outsw
dec
imul
gs
jo
imul
inc
gs
arpl
outsb
outsw
dec
imul
push
gs
jo
imul
jbe
arpl
outsb
outsw
add
add
je
jo
imul
imul
outsl
push
add
xor
push
gs
jo
imul
jae
inc
gs
push
add
aas
add
je
jo
imul
imul
popa
insb
insb
push
popa
jb
insl
jae
add
inc
add
je
jo
imul
imul
popa
outsb
arpl
fs
add
push
gs
jo
imul
imul
jae
jb
push
jb
jo
jb
jns
add
push
gs
jo
imul
jbe
jb
outsb
jae
popa
insb
insb
push
popa
jb
insl
jae
add
pop
add
je
jo
imul
insb
inc
jb
jbe
jb
imul
gs
jo
imul
jbe
gs
gs
add
push
gs
jo
imul
jbe
arpl
outsb
outsw
push
add
jbe
push
gs
jo
imul
imul
popa
insb
insb
push
popa
jb
insl
jae
add
jle
push
gs
jo
imul
arpl
inc
jb
jbe
jb
add
jne
inc
imul
je
imul
push
gs
jo
gs
je
imul
fs
add
movb
gs
jo
jo
outsb
inc
imul
add
enter
je
jo
jo
outsb
dec
outsb
inc
imul
gs
jo
arpl
inc
imul
push
add
push
push
push
inc
push
dec
cs
insb
add
inc
add
jb
inc
gs
gs
imul
inc
outsl
outsb
je
js
push
jb
jo
jb
jns
cltd
add
jns
je
popa
jae
out
jmp
add
dec
gs
outsb
outsw
add
inc
push
pop
push
push
xor
cs
insb
add
add
in
push
push
call
cmpl
je
mov
cmp
jne
mov
mov
leave
ret
js
add
js
add
add
add
cld
and
add
add
add
and
add
and
add
and
add
and
add
and
add
and
add
add
add
add
mov
add
add
add
loopne
add
shlb
add
add
add
xchg
and
add
add
add
add
sbb
add
clc
and
add
and
add
and
add
and
add
jmp
add
add
cmp
add
test
add
dec
and
add
add
les
add
xor
add
sub
add
repnz
add
add
lock
add
and
add
and
add
and
add
and
add
and
add
and
add
add
add
and
add
and
add
and
add
and
add
and
add
and
add
add
add
add
mov
add
add
add
loopne
add
shlb
add
add
add
xchg
and
add
add
add
add
sbb
add
clc
and
add
and
add
and
add
and
add
repnz
add
add
push
add
je
jo
insb
outsl
jae
dec
outsb
inc
imul
je
jo
imul
inc
gs
arpl
outsb
je
jb
popa
arpl
gs
gs
add
add
je
jo
imul
inc
gs
arpl
outsb
outsw
dec
imul
push
gs
jo
imul
jbe
arpl
outsb
je
jb
popa
arpl
add
push
gs
jo
imul
jae
inc
gs
push
add
push
add
je
jo
imul
jae
dec
outsb
jae
popa
insb
insb
push
popa
jb
insl
jae
add
push
gs
jo
imul
imul
jb
popa
arpl
gs
imul
gs
jo
imul
insb
inc
gs
arpl
add
jne
inc
imul
inc
gs
arpl
outsb
je
jb
popa
arpl
add
jne
inc
imul
jae
dec
outsb
jae
popa
insb
insb
push
popa
jb
insl
jae
add
add
je
jo
jo
outsb
dec
outsb
inc
imul
jne
popa
jo
cs
insb
add
sub
inc
push
ja
jb
add
push
push
inc
push
xor
cs
insb
add
lds
dec
dec
inc
inc
jb
insl
push
je
imul
je
imul
inc
push
dec
inc
xor
outsl
insb
xor
cs
insb
add
add
addr16
insb
outsl
jae
dec
gs
inc
inc
push
inc
push
dec
xor
cs
insb
add
add
outsl
jae
dec
popa
outsb
fs
add
inc
jb
popa
je
inc
jbe
outsb
je
add
push
add
gs
je
inc
imul
gs
arpl
outsl
inc
outsl
outsb
je
outsl
insb
add
bound
push
dec
imul
popa
insb
insb
jae
imul
popa
jae
inc
jb
outsl
jb
add
jbe
jb
popa
jo
gs
gs
insb
je
fwait
add
je
jb
arpl
jae
gs
jo
add
add
popa
jo
insb
insb
outsl
arpl
or
dec
gs
jo
jb
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
push
mov
push
push
call
cmpl
je
mov
cmp
jne
mov
mov
leave
ret
add
add
sgdtl
add
and
add
add
add
or
add
js
add
add
add
or
add
or
add
sub
add
dec
and
add
inc
add
add
add
add
add
add
add
add
add
add
add
adc
add
adc
add
and
add
and
add
and
add
and
add
and
add
and
add
add
add
add
add
add
add
jb
outsl
insb
cs
insb
add
push
dec
outsl
arpl
outsl
ja
push
jb
jbe
fs
inc
dec
push
push
outsl
insb
imul
dec
push
push
outsl
insb
imul
imul
inc
popa
outsb
push
outsb
insb
outsl
popa
fs
outsl
ja
inc
insb
insb
push
imul
jb
gs
inc
insb
insb
push
outsb
jb
imul
jb
gs
inc
gs
jne
insb
imul
gs
outsb
jae
outsb
gs
gs
imul
add
add
add
add
add
and
add
add
add
or
add
js
add
add
add
or
add
or
add
sub
add
dec
and
add
enter
add
add
add
add
add
add
add
add
add
add
adc
add
adc
add
and
add
and
add
and
add
and
add
and
add
and
add
add
add
add
add
add
add
jb
outsl
insb
cs
insb
add
push
dec
outsl
arpl
outsl
ja
push
jb
jbe
fs
inc
dec
push
push
outsl
insb
imul
dec
push
push
outsl
insb
imul
imul
inc
popa
outsb
push
outsb
insb
outsl
popa
fs
outsl
ja
inc
insb
insb
push
imul
jb
gs
inc
insb
insb
push
outsb
jb
imul
jb
gs
inc
gs
jne
insb
imul
gs
outsb
jae
outsb
gs
gs
imul
add
add
add
add
add
and
add
add
add
or
add
js
add
add
add
or
add
or
add
sub
add
dec
and
add
movl
adc
add
adc
add
adc
add
add
add
adc
add
adc
add
and
add
and
add
and
add
and
add
and
add
and
add
add
add
add
add
add
add
jb
outsl
insb
cs
insb
add
push
dec
outsl
arpl
outsl
ja
push
jb
jbe
fs
inc
dec
push
push
outsl
insb
imul
dec
push
push
outsl
insb
imul
imul
inc
popa
outsb
push
outsb
insb
outsl
popa
fs
outsl
ja
inc
insb
insb
push
imul
jb
gs
inc
insb
insb
push
outsb
jb
imul
jb
gs
inc
gs
jne
insb
imul
gs
outsb
jae
outsb
gs
gs
imul
add
add
add
add
add
and
add
add
add
or
add
js
add
add
add
or
add
or
add
sub
add
dec
and
add
in
inc
add
add
add
add
add
add
add
add
add
add
add
adc
add
adc
add
and
add
and
add
and
add
and
add
and
add
and
add
add
add
add
add
add
add
jb
outsl
insb
cs
insb
add
push
dec
outsl
arpl
outsl
ja
push
jb
jbe
fs
inc
dec
push
push
outsl
insb
imul
dec
push
push
outsl
insb
imul
imul
inc
popa
outsb
push
outsb
insb
outsl
popa
fs
outsl
ja
inc
insb
insb
push
imul
jb
gs
inc
insb
insb
push
outsb
jb
imul
jb
gs
inc
gs
jne
insb
imul
gs
outsb
jae
outsb
gs
gs
imul
add
add
add
add
add
and
add
add
add
or
add
js
add
add
add
or
add
or
add
sub
add
dec
and
add
les
adc
add
adc
add
adc
add
adc
add
add
add
adc
add
adc
add
and
add
and
add
and
add
and
add
and
add
and
add
add
add
add
add
add
add
jb
outsl
insb
cs
insb
add
push
dec
outsl
arpl
outsl
ja
push
jb
jbe
fs
inc
dec
push
push
outsl
insb
imul
dec
push
push
outsl
insb
imul
imul
inc
popa
outsb
push
outsb
insb
outsl
popa
fs
outsl
ja
inc
insb
insb
push
imul
jb
gs
inc
insb
insb
push
outsb
jb
imul
jb
gs
inc
gs
jne
insb
imul
gs
outsb
jae
outsb
gs
gs
imul
add
add
add
add
add
and
add
add
add
add
js
add
add
add
or
add
or
add
sub
add
dec
and
add
enter
add
add
add
add
add
add
add
add
add
add
adc
add
adc
add
and
add
and
add
and
add
and
add
and
add
and
add
add
add
add
add
add
add
jb
outsl
insb
cs
insb
add
push
dec
outsl
arpl
outsl
ja
push
jb
jbe
fs
inc
dec
push
push
outsl
insb
imul
dec
push
push
outsl
insb
imul
imul
inc
popa
outsb
push
outsb
insb
outsl
popa
fs
outsl
ja
inc
insb
insb
push
imul
jb
gs
inc
insb
insb
push
outsb
jb
imul
jb
gs
inc
gs
jne
insb
imul
gs
outsb
jae
outsb
gs
gs
imul
add
add
add
add
add
and
add
add
add
add
js
add
add
add
or
add
or
add
sub
add
dec
and
add
testb
add
add
add
add
add
add
add
add
add
add
adc
add
adc
add
and
add
and
add
and
add
and
add
and
add
and
add
add
add
add
add
add
add
jb
outsl
insb
cs
insb
add
push
dec
outsl
arpl
outsl
ja
push
jb
jbe
fs
inc
dec
push
push
outsl
insb
imul
dec
push
push
outsl
insb
imul
imul
inc
popa
outsb
push
outsb
insb
outsl
popa
fs
outsl
ja
inc
insb
insb
push
imul
jb
gs
inc
insb
insb
push
outsb
jb
imul
jb
gs
inc
gs
jne
insb
imul
gs
outsb
jae
outsb
gs
gs
imul
add
add
add
add
add
and
add
add
add
add
js
add
add
add
or
add
or
add
sub
add
dec
and
add
roll
adc
add
adc
add
adc
add
adc
add
add
add
adc
add
adc
add
and
add
and
add
and
add
and
add
and
add
and
add
add
add
add
add
add
add
jb
outsl
insb
cs
insb
add
push
dec
outsl
arpl
outsl
ja
push
jb
jbe
fs
inc
dec
push
push
outsl
insb
imul
dec
push
push
outsl
insb
imul
imul
inc
popa
outsb
push
outsb
insb
outsl
popa
fs
outsl
ja
inc
insb
insb
push
imul
jb
gs
inc
insb
insb
push
outsb
jb
imul
jb
gs
inc
gs
jne
insb
imul
gs
outsb
jae
outsb
gs
gs
imul
add
add
add
add
add
and
add
add
add
add
js
add
add
add
or
add
or
add
sub
add
dec
and
add
fildl
adc
add
adc
add
adc
add
adc
add
add
add
adc
add
adc
add
and
add
and
add
and
add
and
add
and
add
and
add
add
add
add
add
add
add
jb
outsl
insb
cs
insb
add
push
dec
outsl
arpl
outsl
ja
push
jb
jbe
fs
inc
dec
push
push
outsl
insb
imul
dec
push
push
outsl
insb
imul
imul
inc
popa
outsb
push
outsb
insb
outsl
popa
fs
outsl
ja
inc
insb
insb
push
imul
jb
gs
inc
insb
insb
push
outsb
jb
imul
jb
gs
inc
gs
jne
insb
imul
gs
outsb
jae
outsb
gs
gs
imul
add
add
add
add
add
and
add
add
add
add
js
add
add
add
or
add
or
add
sub
add
dec
and
add
out
add
add
add
add
add
add
add
add
add
add
add
adc
add
adc
add
and
add
and
add
and
add
and
add
and
add
and
add
add
add
add
add
add
add
jb
outsl
insb
cs
insb
add
push
dec
outsl
arpl
outsl
ja
push
jb
jbe
fs
inc
dec
push
push
outsl
insb
imul
dec
push
push
outsl
insb
imul
imul
inc
popa
outsb
push
outsb
insb
outsl
popa
fs
outsl
ja
inc
insb
insb
push
imul
jb
gs
inc
insb
insb
push
outsb
jb
imul
jb
gs
inc
gs
jne
insb
imul
gs
outsb
jae
outsb
gs
gs
imul
add
in
push
push
call
cmpl
je
mov
cmp
jne
mov
mov
jmp
cmp
jne
mov
mov
jmp
cmp
jne
mov
mov
jmp
cmp
jne
mov
mov
jmp
cmp
jne
mov
mov
jmp
cmp
jne
mov
mov
jmp
cmp
jne
mov
mov
jmp
cmp
jne
mov
mov
jmp
cmp
jne
mov
mov
jmp
cmp
jne
mov
mov
leave
ret
add
add
inc
pop
add
add
add
add
add
cmp
pop
dec
add
add
adc
add
add
add
mov
add
mov
add
sub
add
in
and
add
adc
add
adc
add
adc
add
adc
add
add
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
or
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
adc
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
sbb
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
and
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
sub
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
xor
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
cmp
adc
add
adc
add
add
inc
adc
add
add
inc
adc
add
add
add
inc
adc
add
add
dec
adc
add
add
dec
adc
add
add
dec
adc
add
add
dec
adc
add
add
push
adc
add
add
push
adc
add
add
push
adc
add
add
push
adc
add
add
pop
adc
add
add
pop
adc
add
add
pop
adc
add
add
pop
adc
add
add
pusha
adc
add
add
bound
add
arpl
add
adc
add
add
data16
add
add
push
adc
add
add
imul
add
add
add
outsb
adc
add
add
jo
add
jno
add
jb
add
jae
add
je
add
jne
add
jbe
add
ja
add
js
add
jns
add
jp
add
jnp
add
jl
add
jge
add
jle
add
jg
add
adcb
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
sub
add
push
daa
add
js
add
xchg
add
scas
daa
add
lret
daa
add
frstor
add
hlt
daa
add
or
add
sub
add
inc
sub
add
add
insb
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
aaa
sub
add
add
push
sub
add
add
add
in
sub
add
sub
add
sub
add
add
push
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
sbb
sub
add
add
add
jg
add
xchg
sub
add
add
lret
add
sub
add
sub
add
sub
add
add
pusha
sub
add
add
xchg
sub
add
sub
add
sub
add
sub
add
push
sub
add
subl
add
into
sub
add
pop
add
sub
add
inc
add
popa
add
jp
add
xchg
add
cwtl
add
test
add
mov
add
enter
in
add
push
das
add
push
das
add
xor
add
dec
das
add
outsb
das
add
test
add
sahf
das
add
scas
das
add
les
add
das
add
repz
add
add
add
sbb
add
sub
add
inc
xor
add
add
data16
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
xorl
add
mov
xor
add
xor
add
xor
add
xor
add
add
xor
add
add
bound
add
jnp
add
xchg
xor
add
xor
add
xor
add
add
push
xor
add
add
xor
add
add
lea
add
stos
xor
add
xor
add
xor
add
xor
add
xor
add
add
aas
xor
add
xor
add
add
pop
xor
add
add
mov
add
xor
add
xor
add
xor
add
xor
add
add
adc
add
inc
xor
add
jno
add
xorb
add
xor
add
out
xor
add
and
add
push
add
je
add
xorl
add
add
loop
add
adc
add
cs
add
inc
aaa
add
xchg
add
add
add
test
pop
add
add
pop
add
add
add
add
add
cli
inc
add
jne
cltd
add
push
add
add
add
lcall
add
movsb
add
pop
add
add
add
pusha
add
mov
inc
add
cmp
inc
add
add
add
add
add
add
pop
add
add
jg
aas
add
add
add
add
xchg
add
add
add
mov
add
add
add
add
add
add
add
jnp
and
xor
add
dec
add
add
add
mov
push
add
mov
lahf
add
dec
add
or
je
jns
sbb
mov
add
add
addb
add
addl
and
cwtl
add
xor
test
sub
ja
stos
add
dec
add
data16
add
fwait
add
imul
nop
add
add
add
popf
add
add
add
mov
add
add
add
cmp
xor
and
je
popa
insl
cs
insb
add
gs
je
dec
outsb
je
jb
popa
arpl
dec
outsb
je
jb
popa
insb
push
je
popa
insl
dec
jne
inc
insb
imul
outsb
outsb
arpl
push
outsl
inc
outsb
imul
gs
popa
insb
push
je
popa
insl
push
push
push
push
ja
inc
outsb
imul
gs
insl
inc
bound
je
popa
insb
insb
add
gs
insl
inc
bound
je
outsb
outsl
imul
dec
inc
push
imul
insb
imul
push
je
popa
insl
inc
arpl
jne
jae
jb
jo
imul
imul
popa
insl
inc
insb
outsl
arpl
outsb
addr16
popa
insb
insb
add
gs
insl
inc
push
inc
arpl
jne
je
popa
insl
add
gs
insl
inc
push
inc
insl
popa
imul
jae
push
je
popa
insl
inc
push
inc
outsl
jb
outsl
je
outsb
push
popa
jae
ja
jb
add
gs
insl
inc
push
dec
data16
imul
jne
add
gs
insl
inc
push
push
popa
jae
ja
jb
add
gs
insl
inc
push
push
gs
outsl
outsb
popa
insb
push
inc
add
gs
insl
inc
push
jo
dec
ja
gs
push
je
popa
insl
inc
insb
gs
outsb
jne
add
gs
insl
inc
insb
gs
jb
jb
outsl
jb
push
je
popa
insl
inc
insb
outsl
jae
inc
imul
insl
inc
jb
popa
je
inc
arpl
jne
je
push
je
popa
insl
inc
jb
popa
je
inc
popa
arpl
enter
outsl
popa
fs
add
gs
insl
inc
jb
popa
je
dec
outsl
addr16
outsl
outsb
je
js
add
gs
insl
inc
arpl
jo
inc
popa
je
inc
outsl
jb
push
arpl
inc
add
gs
insl
inc
gs
addr16
popa
arpl
out
add
insl
inc
gs
gs
inc
arpl
jne
je
push
je
popa
insl
inc
outsb
arpl
jo
inc
popa
je
inc
outsl
jb
push
arpl
inc
add
gs
insl
inc
outsb
jne
gs
je
inc
jo
add
gs
insl
inc
outsb
jne
gs
je
inc
jo
inc
gs
outsb
fs
arpl
push
je
popa
insl
inc
outsb
jne
gs
je
inc
jo
dec
arpl
add
gs
insl
inc
outsb
jne
gs
je
inc
jo
dec
popa
jne
arpl
fldl
outsl
outsb
add
gs
insl
inc
outsb
jne
gs
je
inc
jo
push
gs
imul
popa
insl
inc
outsb
jne
gs
je
push
jne
jae
jb
jo
imul
popa
insl
inc
outsb
jne
gs
je
push
jne
jae
jb
jo
imul
outsl
jne
je
push
je
popa
insl
inc
outsb
jne
gs
je
push
jne
jae
jb
jo
imul
outsl
jne
je
jne
insb
imul
je
popa
insl
inc
imul
push
je
popa
insl
inc
imul
add
gs
insl
inc
imul
je
xor
push
je
popa
insl
inc
imul
je
push
je
popa
insl
inc
imul
ss
push
je
popa
insl
inc
imul
add
gs
insl
inc
imul
gs
inc
gs
jb
outsl
jb
je
imul
popa
insl
inc
imul
gs
dec
je
jb
je
push
gs
gs
push
je
popa
insl
inc
imul
gs
dec
jne
push
gs
gs
add
gs
insl
inc
insb
jne
push
add
gs
insl
inc
insb
jne
push
add
gs
insl
inc
outsl
jb
gs
gs
insb
dec
add
gs
insl
inc
outsl
jb
gs
insb
insb
dec
imul
gs
insl
inc
outsb
gs
je
push
jne
addr16
gs
arpl
jne
je
popa
insl
gs
push
je
popa
insl
inc
gs
arpl
jne
je
je
je
jae
push
je
popa
insl
inc
gs
jo
inc
popa
arpl
aad
add
push
je
popa
insl
inc
gs
jo
inc
dec
inc
push
je
je
jae
push
je
popa
insl
inc
gs
jo
inc
gs
outsb
fs
arpl
jae
push
je
popa
insl
inc
gs
jo
inc
imul
insl
inc
gs
jo
dec
fs
push
je
popa
insl
inc
gs
jo
push
jne
arpl
aad
add
outsb
je
jns
push
je
popa
insl
inc
gs
jo
push
je
je
add
gs
insl
inc
gs
jo
push
jo
popa
je
push
je
je
add
gs
insl
inc
gs
jo
push
jae
jb
imul
outsb
outsw
add
gs
insl
inc
gs
jo
push
jae
jb
imul
arpl
add
gs
insl
inc
gs
popa
arpl
filds
jb
jo
imul
push
je
popa
insl
inc
gs
popa
arpl
out
add
insb
je
imul
jns
push
je
popa
insl
inc
gs
popa
arpl
call
popa
je
je
inc
add
inc
gs
popa
arpl
fiaddl
arpl
je
jb
insl
outsb
je
je
outsl
outsb
add
gs
insl
inc
gs
outsl
outsb
je
outsb
je
gs
gs
outsb
outsw
add
gs
insl
inc
gs
jne
jb
outsb
je
insl
popa
imul
jae
push
je
popa
insl
inc
gs
outsb
arpl
jo
gs
gs
popa
insb
jbe
inc
inc
dec
gs
push
je
popa
insl
inc
gs
outsb
arpl
jo
gs
jae
jb
inc
push
imul
je
popa
insl
inc
gs
outsb
arpl
jo
imul
outsl
push
outsb
fs
outsl
dec
gs
insb
imul
gs
insl
inc
gs
outsl
arpl
inc
insb
imul
jae
outsl
outsb
add
gs
insl
inc
gs
outsl
arpl
inc
imul
push
je
popa
insl
inc
gs
jne
inc
arpl
jne
je
push
imul
inc
fs
jae
add
gs
insl
inc
gs
data16
imul
jne
add
gs
insl
inc
gs
jo
outsb
jae
jb
jb
add
gs
insl
inc
gs
jne
jae
jb
jo
imul
outsb
fs
outsb
outsw
add
gs
insl
inc
gs
jne
jae
jb
jo
imul
push
je
popa
insl
inc
gs
jne
jae
jb
jo
imul
push
outsl
jne
je
jns
push
je
popa
insl
inc
gs
jne
jae
jb
jo
imul
imul
popa
insl
inc
gs
jne
jae
jb
jo
imul
jae
push
je
popa
insl
inc
gs
outsl
je
insb
push
jo
popa
je
push
je
je
add
gs
insl
inc
gs
jae
jb
push
je
popa
insl
inc
gs
jae
jb
jns
add
gs
insl
inc
gs
gs
imul
popa
insl
inc
gs
add
gs
insl
dec
imul
jne
arpl
gs
gs
insl
dec
outsb
imul
push
jae
jb
inc
push
imul
insb
imul
je
popa
insl
dec
outsb
jae
jb
inc
jo
inc
gs
outsb
fs
arpl
push
je
popa
insl
dec
jae
arpl
jne
je
popa
insl
gs
outsb
push
jae
add
gs
insl
dec
jae
jo
push
jne
jae
jb
bound
add
gs
insl
dec
jae
popa
arpl
into
inc
add
addr16
outsb
popa
bound
add
gs
insl
dec
jae
imul
imul
jbe
imul
je
popa
insl
dec
jae
imul
fs
jns
jo
add
gs
insl
dec
jae
imul
fs
jns
popa
arpl
lret
gs
insl
dec
jae
outsl
addr16
outsb
add
gs
insl
dec
jae
arpl
gs
outsl
insl
jo
je
jb
push
je
popa
insl
dec
jae
jne
jae
jb
bound
add
gs
insl
dec
jae
jae
outsb
addr16
imul
je
outsb
je
gs
gs
push
je
popa
insl
dec
popa
jne
arpl
in
add
gs
insl
dec
outsl
popa
fs
popa
arpl
rolb
inc
imul
insl
dec
outsl
popa
fs
imul
add
gs
insl
dec
outsl
popa
fs
imul
push
gs
insl
dec
outsl
add
gs
insl
dec
outsl
addr16
gs
jne
arpl
outsl
popa
fs
imul
inc
add
insl
dec
outsl
addr16
gs
jne
arpl
outsl
popa
fs
je
jb
gs
gs
insl
dec
outsl
imul
insl
dec
outsl
outsl
jne
add
gs
insl
dec
imul
dec
outsb
imul
dec
outsl
jne
je
jo
inc
imul
insl
add
gs
insl
dec
outsl
jne
je
imul
insl
add
gs
insl
dec
outsl
jbe
inc
jo
add
gs
insl
dec
jne
inc
jo
jae
jne
outsb
imul
popa
insl
dec
jo
outsb
inc
imul
gs
insl
dec
jo
outsb
inc
imul
insl
dec
jo
outsb
inc
imul
gs
insl
dec
jo
outsb
push
insl
jo
imul
insl
dec
jo
imul
gs
outsb
push
jo
data16
jb
insb
imul
inc
imul
arpl
add
gs
insl
push
popa
jne
gs
popa
arpl
icebp
inc
add
imul
popa
insl
push
jb
outsb
je
imul
insl
push
jb
arpl
jae
popa
insb
insb
add
gs
insl
push
jb
arpl
jae
outsb
outsl
imul
dec
inc
push
imul
insb
imul
push
je
popa
insl
push
jne
arpl
push
je
popa
insl
push
gs
fs
imul
insl
push
gs
jae
arpl
inc
add
je
outsb
outsw
xor
push
je
popa
insl
push
gs
jae
jmp
outsb
je
outsb
outsw
add
gs
insl
push
gs
jae
push
roll
outsb
je
outsb
outsw
inc
js
push
je
popa
insl
push
gs
jae
push
lret
inc
add
push
je
popa
insl
push
gs
jae
sub
jne
inc
outsl
outsl
je
jb
outsb
je
imul
popa
insl
push
gs
outsl
jbe
inc
jo
inc
gs
outsb
fs
arpl
push
je
popa
insl
push
gs
imul
jb
jo
inc
popa
arpl
faddl
je
popa
insl
push
gs
gs
inc
arpl
jne
je
inc
jns
fs
gs
insl
popa
imul
push
gs
gs
inc
arpl
jne
je
inc
jns
insl
popa
imul
jae
insl
popa
imul
push
gs
gs
inc
insl
popa
imul
jae
gs
imul
outsl
outsb
inc
insl
popa
imul
push
gs
gs
inc
outsl
jb
outsl
je
outsb
push
popa
jae
ja
jb
inc
insl
popa
imul
push
gs
insl
gs
popa
arpl
stc
inc
add
imul
popa
insl
push
gs
gs
push
je
popa
insl
push
gs
add
gs
insl
push
gs
jo
inc
popa
arpl
lret
add
gs
insl
push
gs
jo
push
gs
imul
popa
insl
push
gs
popa
arpl
in
inc
add
insb
je
imul
jns
push
je
popa
insl
push
gs
popa
js
je
insb
insb
inc
outsl
jne
je
push
je
popa
insl
push
gs
outsl
je
imul
outsl
outsb
inc
popa
insb
insb
bound
imul
je
popa
insl
push
gs
jae
jb
push
je
popa
insl
push
gs
inc
jne
add
gs
insl
push
push
ja
inc
outsb
imul
popa
insl
push
push
ja
push
jae
jb
inc
push
imul
insb
imul
je
popa
insl
push
imul
ss
push
je
popa
insl
push
imul
add
gs
insl
push
je
jb
inc
outsb
imul
popa
insl
push
je
jb
inc
outsb
imul
je
popa
insl
push
je
jb
dec
outsl
popa
imul
dec
cmc
inc
add
insl
push
je
jb
push
popa
insb
imul
gs
popa
insb
jbe
inc
inc
dec
gs
push
je
popa
insl
push
je
jb
push
popa
insb
imul
jae
jb
inc
push
imul
je
popa
insl
push
je
jb
jne
add
gs
insl
push
je
je
xor
push
je
popa
insl
push
je
je
push
je
popa
insl
push
je
jo
outsl
popa
imul
dec
in
inc
add
insl
push
jne
jae
jb
bound
push
je
popa
insl
push
gs
insb
inc
imul
gs
insl
push
gs
insb
inc
imul
insl
push
outsb
imul
add
gs
insl
push
outsb
insl
outsl
jne
je
jo
inc
imul
insl
add
gs
insl
push
outsb
insl
outsl
jne
je
imul
insl
add
gs
insl
push
outsb
jae
bound
jb
bound
push
je
popa
insl
push
jo
popa
je
inc
arpl
jne
je
imul
outsw
add
gs
insl
push
jo
popa
je
push
jne
jae
jb
jo
imul
imul
add
gs
insl
push
gs
data16
insl
popa
imul
jae
push
je
popa
insl
push
gs
data16
popa
jae
ja
jb
add
gs
insl
push
popa
imul
push
gs
fs
outsl
dec
popa
jne
arpl
repz
add
push
popa
imul
push
gs
jne
arpl
add
gs
insl
push
popa
imul
outsl
jne
arpl
add
gs
insl
push
popa
jae
insb
outsl
bound
imul
insb
gs
add
gs
insl
push
gs
imul
imul
popa
insb
jbe
inc
inc
dec
gs
push
je
popa
insl
push
jb
je
inc
imul
insl
push
jb
je
dec
imul
inc
jb
insl
inc
jae
gs
add
gs
insl
push
jb
je
dec
imul
push
gs
outsl
insl
insl
outsb
je
push
je
popa
insl
push
jb
je
dec
imul
push
jae
outsb
addr16
js
gs
imul
add
gs
insl
push
jb
je
dec
imul
push
jae
outsb
addr16
js
gs
imul
push
imul
dec
add
gs
insl
push
jb
je
dec
imul
push
imul
add
outsb
xor
dec
imul
dec
outsb
imul
add
inc
pop
add
add
add
add
add
cmp
pop
dec
add
add
adc
add
add
add
mov
add
mov
add
sub
add
in
and
add
adc
add
adc
add
adc
add
adc
add
add
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
or
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
adc
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
sbb
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
and
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
sub
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
xor
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
cmp
adc
add
adc
add
add
inc
adc
add
add
inc
adc
add
add
add
inc
adc
add
add
dec
adc
add
add
dec
adc
add
add
dec
adc
add
add
dec
adc
add
add
push
adc
add
add
push
adc
add
add
push
adc
add
add
push
adc
add
add
pop
adc
add
add
pop
adc
add
add
pop
adc
add
add
pop
adc
add
add
pusha
adc
add
add
bound
add
arpl
add
adc
add
add
data16
add
add
push
adc
add
add
imul
add
add
add
outsb
adc
add
add
jo
add
jno
add
jb
add
jae
add
je
add
jne
add
jbe
add
ja
add
js
add
jns
add
jp
add
jnp
add
jl
add
jge
add
jle
add
jg
add
adcb
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
sub
add
push
daa
add
js
add
xchg
add
scas
daa
add
lret
daa
add
frstor
add
hlt
daa
add
or
add
sub
add
inc
sub
add
add
insb
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
aaa
sub
add
add
push
sub
add
adc
inc
add
add
in
sub
add
sub
add
sub
add
add
push
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
sbb
sub
add
add
add
jg
add
xchg
sub
add
add
lret
add
sub
add
sub
add
sub
add
add
pusha
sub
add
add
xchg
sub
add
sub
add
sub
add
sub
add
push
sub
add
subl
add
into
sub
add
pop
add
sub
add
inc
add
popa
add
jp
add
xchg
add
cwtl
add
test
add
mov
add
enter
in
add
push
das
add
push
das
add
xor
add
dec
das
add
outsb
das
add
test
add
sahf
das
add
scas
das
add
les
add
das
add
repz
add
add
add
sbb
add
sub
add
inc
xor
add
add
data16
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
xorl
add
mov
xor
add
xor
add
xor
add
xor
add
add
xor
add
add
bound
add
jnp
add
xchg
xor
add
xor
add
xor
add
add
push
xor
add
add
xor
add
add
lea
add
stos
xor
add
xor
add
xor
add
xor
add
xor
add
add
aas
xor
add
xor
add
add
pop
xor
add
add
mov
add
xor
add
xor
add
xor
add
xor
add
add
adc
add
inc
xor
add
jno
add
xorb
add
xor
add
out
xor
add
and
add
push
add
je
add
xorl
add
add
loop
add
adc
add
cs
add
inc
aaa
add
pop
add
add
add
add
add
add
arpl
pusha
add
add
add
pop
add
jno
pop
add
add
add
add
insl
add
sbb
pop
add
add
lahf
add
add
push
add
add
add
add
add
inc
add
add
scas
add
test
add
add
add
add
add
or
cmp
sbb
xor
sbb
add
add
add
add
add
add
enter
xor
lods
add
add
jns
sub
cmp
cmp
add
outsb
add
add
add
add
add
add
add
dec
add
add
add
add
add
cmp
ja
cmp
scas
add
add
add
popf
add
add
add
add
add
add
add
add
add
add
add
add
push
add
js
sbb
sbb
jo
xchg
add
add
dec
add
push
je
popa
insl
cs
insb
add
gs
je
dec
outsb
je
jb
popa
arpl
dec
outsb
je
jb
popa
insb
push
je
popa
insl
dec
jne
inc
insb
imul
outsb
outsb
arpl
push
outsl
inc
outsb
imul
gs
popa
insb
push
je
popa
insl
push
push
push
push
ja
inc
outsb
imul
gs
insl
inc
bound
je
popa
insb
insb
add
gs
insl
inc
bound
je
outsb
outsl
imul
dec
inc
push
imul
insb
imul
push
je
popa
insl
inc
arpl
jne
jae
jb
jo
imul
imul
popa
insl
inc
insb
outsl
arpl
outsb
addr16
popa
insb
insb
add
gs
insl
inc
push
inc
arpl
jne
je
popa
insl
add
gs
insl
inc
push
inc
insl
popa
imul
jae
push
je
popa
insl
inc
push
inc
outsl
jb
outsl
je
outsb
push
popa
jae
ja
jb
add
gs
insl
inc
push
dec
data16
imul
jne
add
gs
insl
inc
push
push
popa
jae
ja
jb
add
gs
insl
inc
push
push
gs
outsl
outsb
popa
insb
push
inc
add
gs
insl
inc
push
jo
dec
ja
gs
push
je
popa
insl
inc
insb
gs
outsb
jne
add
gs
insl
inc
insb
gs
jb
jb
outsl
jb
push
je
popa
insl
inc
insb
outsl
jae
inc
imul
insl
inc
jb
popa
je
inc
arpl
jne
je
push
je
popa
insl
inc
jb
popa
je
inc
popa
arpl
rolb
outsl
popa
fs
add
gs
insl
inc
jb
popa
je
dec
outsl
addr16
outsl
outsb
je
js
add
gs
insl
inc
arpl
jo
inc
popa
je
inc
outsl
jb
push
arpl
out
inc
add
gs
insl
inc
gs
addr16
popa
arpl
fiadds
je
popa
insl
inc
gs
gs
inc
arpl
jne
je
push
je
popa
insl
inc
outsb
arpl
jo
inc
popa
je
inc
outsl
jb
push
arpl
aad
add
gs
insl
inc
outsb
jne
gs
je
inc
jo
add
gs
insl
inc
outsb
jne
gs
je
inc
jo
inc
gs
outsb
fs
arpl
push
je
popa
insl
inc
outsb
jne
gs
je
inc
jo
dec
arpl
add
gs
insl
inc
outsb
jne
gs
je
inc
jo
dec
popa
jne
arpl
repz
add
add
gs
insl
inc
outsb
jne
gs
je
inc
jo
push
gs
imul
popa
insl
inc
outsb
jne
gs
je
push
jne
jae
jb
jo
imul
popa
insl
inc
outsb
jne
gs
je
push
jne
jae
jb
jo
imul
outsl
jne
je
push
je
popa
insl
inc
outsb
jne
gs
je
push
jne
jae
jb
jo
imul
outsl
jne
je
jne
insb
imul
je
popa
insl
inc
imul
push
je
popa
insl
inc
imul
add
gs
insl
inc
imul
je
xor
push
je
popa
insl
inc
imul
je
push
je
popa
insl
inc
imul
ss
push
je
popa
insl
inc
imul
add
gs
insl
inc
imul
gs
inc
gs
jb
outsl
jb
je
imul
popa
insl
inc
imul
gs
dec
je
jb
je
push
gs
gs
push
je
popa
insl
inc
imul
gs
dec
jne
push
gs
gs
add
gs
insl
inc
insb
jne
push
add
gs
insl
inc
insb
jne
push
add
gs
insl
inc
outsl
jb
gs
gs
insb
dec
add
gs
insl
inc
outsl
jb
gs
insb
insb
dec
imul
gs
insl
inc
outsb
gs
je
push
jne
addr16
gs
arpl
jne
je
popa
insl
gs
push
je
popa
insl
inc
gs
arpl
jne
je
je
je
jae
push
je
popa
insl
inc
gs
jo
inc
popa
arpl
flds
add
gs
insl
inc
gs
jo
inc
dec
inc
push
je
je
jae
push
je
popa
insl
inc
gs
jo
inc
gs
outsb
fs
arpl
jae
push
je
popa
insl
inc
gs
jo
inc
imul
insl
inc
gs
jo
dec
fs
push
je
popa
insl
inc
gs
jo
push
jne
arpl
int
add
outsb
je
jns
push
je
popa
insl
inc
gs
jo
push
je
je
add
gs
insl
inc
gs
jo
push
jo
popa
je
push
je
je
add
gs
insl
inc
gs
jo
push
jae
jb
imul
outsb
outsw
add
gs
insl
inc
gs
jo
push
jae
jb
imul
arpl
add
gs
insl
inc
gs
popa
arpl
rolb
jns
je
outsl
outsb
dec
gs
push
je
popa
insl
inc
gs
popa
arpl
ljmp
inc
imul
jns
push
je
popa
insl
inc
gs
popa
arpl
lret
inc
add
popa
je
dec
repz
add
inc
gs
popa
arpl
stc
inc
add
outsb
je
jb
insl
outsb
je
je
outsl
outsb
add
gs
insl
inc
gs
outsl
outsb
je
outsb
je
gs
gs
outsb
outsw
add
gs
insl
inc
gs
jne
jb
outsb
je
insl
popa
imul
jae
push
je
popa
insl
inc
gs
outsb
arpl
jo
gs
gs
popa
insb
jbe
inc
inc
dec
gs
push
je
popa
insl
inc
gs
outsb
arpl
jo
gs
jae
jb
inc
push
imul
je
popa
insl
inc
gs
outsb
arpl
jo
imul
outsl
push
outsb
fs
outsl
dec
gs
insb
imul
gs
insl
inc
gs
outsl
arpl
inc
insb
imul
jae
outsl
outsb
add
gs
insl
inc
gs
outsl
arpl
inc
imul
push
je
popa
insl
inc
gs
jne
inc
arpl
jne
je
push
imul
inc
fs
jae
add
gs
insl
inc
gs
data16
imul
jne
add
gs
insl
inc
gs
jo
outsb
jae
jb
jb
add
gs
insl
inc
gs
jne
jae
jb
jo
imul
outsb
fs
outsb
outsw
add
gs
insl
inc
gs
jne
jae
jb
jo
imul
push
je
popa
insl
inc
gs
jne
jae
jb
jo
imul
push
outsl
jne
je
jns
push
je
popa
insl
inc
gs
jne
jae
jb
jo
imul
imul
popa
insl
inc
gs
jne
jae
jb
jo
imul
jae
push
je
popa
insl
inc
gs
outsl
je
insb
push
jo
popa
je
push
je
je
add
gs
insl
inc
gs
jae
jb
push
je
popa
insl
inc
gs
jae
jb
jns
add
gs
insl
inc
gs
gs
imul
popa
insl
inc
gs
add
gs
insl
dec
imul
jne
arpl
gs
gs
insl
dec
outsb
imul
push
jae
jb
inc
push
imul
insb
imul
je
popa
insl
dec
outsb
jae
jb
inc
jo
inc
gs
outsb
fs
arpl
push
je
popa
insl
dec
jae
arpl
jne
je
popa
insl
gs
outsb
push
jae
add
gs
insl
dec
jae
jo
push
jne
jae
jb
bound
add
gs
insl
dec
jae
popa
arpl
ljmp
inc
outsb
popa
bound
add
gs
insl
dec
jae
imul
imul
jbe
imul
je
popa
insl
dec
jae
imul
fs
jns
jo
add
gs
insl
dec
jae
imul
fs
jns
popa
arpl
filds
gs
insl
dec
jae
outsl
addr16
outsb
add
gs
insl
dec
jae
arpl
gs
outsl
insl
jo
je
jb
push
je
popa
insl
dec
jae
jne
jae
jb
bound
add
gs
insl
dec
jae
jae
outsb
addr16
imul
je
outsb
je
gs
gs
push
je
popa
insl
dec
popa
jne
arpl
rolb
push
je
popa
insl
dec
outsl
popa
fs
popa
arpl
hlt
inc
add
imul
insl
dec
outsl
popa
fs
imul
add
gs
insl
dec
outsl
popa
fs
imul
push
gs
insl
dec
outsl
add
gs
insl
dec
outsl
addr16
gs
jne
arpl
outsl
popa
fs
imul
inc
add
insl
dec
outsl
addr16
gs
jne
arpl
outsl
popa
fs
je
jb
gs
gs
insl
dec
outsl
imul
insl
dec
outsl
outsl
jne
add
gs
insl
dec
imul
dec
outsb
imul
dec
outsl
jne
je
jo
inc
imul
insl
add
gs
insl
dec
outsl
jne
je
imul
insl
add
gs
insl
dec
outsl
jbe
inc
jo
add
gs
insl
dec
jne
inc
jo
jae
jne
outsb
imul
popa
insl
dec
jo
outsb
inc
imul
gs
insl
dec
jo
outsb
inc
imul
insl
dec
jo
outsb
inc
imul
gs
insl
dec
jo
outsb
push
insl
jo
imul
insl
dec
jo
imul
gs
outsb
push
jo
data16
jb
insb
imul
inc
imul
arpl
add
gs
insl
push
popa
jne
gs
popa
arpl
icebp
inc
add
imul
popa
insl
push
jb
outsb
je
imul
insl
push
jb
arpl
jae
popa
insb
insb
add
gs
insl
push
jb
arpl
jae
outsb
outsl
imul
dec
inc
push
imul
insb
imul
push
je
popa
insl
push
jne
arpl
push
je
popa
insl
push
gs
fs
imul
insl
push
gs
jae
rcl
inc
add
je
outsb
outsw
xor
push
je
popa
insl
push
gs
jae
out
flds
jne
je
outsb
outsw
add
gs
insl
push
gs
jae
mov
outsb
je
outsb
outsw
inc
js
push
je
popa
insl
push
gs
jae
jl
inc
add
push
je
popa
insl
push
gs
jae
out
inc
add
insl
inc
outsl
outsl
je
jb
outsb
je
imul
popa
insl
push
gs
outsl
jbe
inc
jo
inc
gs
outsb
fs
arpl
push
je
popa
insl
push
gs
imul
jb
jo
inc
popa
arpl
cmc
inc
add
insl
push
gs
gs
inc
arpl
jne
je
inc
jns
fs
gs
insl
popa
imul
push
gs
gs
inc
arpl
jne
je
inc
jns
insl
popa
imul
jae
insl
popa
imul
push
gs
gs
inc
insl
popa
imul
jae
gs
imul
outsl
outsb
inc
insl
popa
imul
push
gs
gs
inc
outsl
jb
outsl
je
outsb
push
popa
jae
ja
jb
inc
insl
popa
imul
push
gs
insl
gs
popa
arpl
fldl
insb
outsl
popa
imul
popa
insl
push
gs
gs
push
je
popa
insl
push
gs
add
gs
insl
push
gs
jo
inc
popa
arpl
stc
inc
add
push
je
popa
insl
push
gs
jo
push
gs
imul
popa
insl
push
gs
popa
arpl
faddl
popa
jne
je
imul
jns
push
je
popa
insl
push
gs
popa
js
je
insb
insb
inc
outsl
jne
je
push
je
popa
insl
push
gs
outsl
je
imul
outsl
outsb
inc
popa
insb
insb
bound
imul
je
popa
insl
push
gs
jae
jb
push
je
popa
insl
push
gs
inc
jne
add
gs
insl
push
push
ja
inc
outsb
imul
popa
insl
push
push
ja
push
jae
jb
inc
push
imul
insb
imul
je
popa
insl
push
imul
ss
push
je
popa
insl
push
imul
add
gs
insl
push
je
jb
inc
outsb
imul
popa
insl
push
je
jb
inc
outsb
imul
je
popa
insl
push
je
jb
dec
outsl
popa
imul
mov
popa
insl
push
je
jb
push
popa
insb
imul
gs
popa
insb
jbe
inc
inc
dec
gs
push
je
popa
insl
push
je
jb
push
popa
insb
imul
jae
jb
inc
push
imul
je
popa
insl
push
je
jb
jne
add
gs
insl
push
je
je
xor
push
je
popa
insl
push
je
je
push
je
popa
insl
push
je
jo
outsl
popa
imul
mov
inc
add
insl
push
jne
jae
jb
bound
push
je
popa
insl
push
gs
insb
inc
imul
gs
insl
push
gs
insb
inc
imul
insl
push
outsb
imul
add
gs
insl
push
outsb
insl
outsl
jne
je
jo
inc
imul
insl
add
gs
insl
push
outsb
insl
outsl
jne
je
imul
insl
add
gs
insl
push
outsb
jae
bound
jb
bound
push
je
popa
insl
push
jo
popa
je
inc
arpl
jne
je
imul
outsw
add
gs
insl
push
jo
popa
je
push
jne
jae
jb
jo
imul
imul
add
gs
insl
push
gs
data16
insl
popa
imul
jae
push
je
popa
insl
push
gs
data16
popa
jae
ja
jb
add
gs
insl
push
popa
imul
push
gs
fs
outsl
dec
popa
jne
arpl
xlat
inc
add
push
popa
imul
push
gs
jne
arpl
add
gs
insl
push
popa
imul
outsl
jne
arpl
add
gs
insl
push
popa
jae
insb
outsl
bound
imul
insb
gs
add
gs
insl
push
gs
imul
imul
popa
insb
jbe
inc
inc
dec
gs
push
je
popa
insl
push
jb
je
inc
imul
insl
push
jb
je
dec
imul
inc
jb
insl
inc
jae
gs
add
gs
insl
push
jb
je
dec
imul
push
gs
outsl
insl
insl
outsb
je
push
je
popa
insl
push
jb
je
dec
imul
push
jae
outsb
addr16
js
gs
imul
add
gs
insl
push
jb
je
dec
imul
push
jae
outsb
addr16
js
gs
imul
push
imul
dec
add
gs
insl
push
jb
je
dec
imul
push
imul
add
outsb
xor
dec
imul
dec
outsb
imul
add
inc
pop
add
add
add
add
add
cmp
pop
dec
add
add
adc
add
add
add
mov
add
mov
add
sub
add
in
and
add
adc
add
adc
add
adc
add
adc
add
add
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
or
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
adc
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
sbb
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
and
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
sub
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
xor
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
cmp
adc
add
adc
add
add
inc
adc
add
add
inc
adc
add
add
add
inc
adc
add
add
dec
adc
add
add
dec
adc
add
add
dec
adc
add
add
dec
adc
add
add
push
adc
add
add
push
adc
add
add
push
adc
add
add
push
adc
add
add
pop
adc
add
add
pop
adc
add
add
pop
adc
add
add
pop
adc
add
add
pusha
adc
add
add
bound
add
arpl
add
adc
add
add
data16
add
add
push
adc
add
add
imul
add
add
add
outsb
adc
add
add
jo
add
jno
add
jb
add
jae
add
je
add
jne
add
jbe
add
ja
add
js
add
jns
add
jp
add
jnp
add
jl
add
jge
add
jle
add
jg
add
adcb
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
sub
add
push
daa
add
js
add
xchg
add
scas
daa
add
lret
daa
add
frstor
add
hlt
daa
add
or
add
sub
add
inc
sub
add
add
insb
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
aaa
sub
add
add
push
sub
add
pop
rolb
sub
add
sub
add
sub
add
sub
add
add
push
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
sbb
sub
add
add
add
jg
add
xchg
sub
add
add
lret
add
sub
add
sub
add
sub
add
add
pusha
sub
add
add
xchg
sub
add
sub
add
sub
add
sub
add
push
sub
add
subl
add
into
sub
add
pop
add
sub
add
inc
add
popa
add
jp
add
xchg
add
cwtl
add
test
add
mov
add
enter
in
add
push
das
add
push
das
add
xor
add
dec
das
add
outsb
das
add
test
add
sahf
das
add
scas
das
add
les
add
das
add
repz
add
add
add
sbb
add
sub
add
inc
xor
add
add
data16
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
xorl
add
mov
xor
add
xor
add
xor
add
xor
add
add
xor
add
add
bound
add
jnp
add
xchg
xor
add
xor
add
xor
add
add
push
xor
add
add
xor
add
add
lea
add
stos
xor
add
xor
add
xor
add
xor
add
xor
add
add
aas
xor
add
xor
add
add
pop
xor
add
add
mov
add
xor
add
xor
add
xor
add
xor
add
add
adc
add
inc
xor
add
jno
add
xorb
add
xor
add
out
xor
add
and
add
push
add
je
add
xorl
add
add
loop
add
adc
add
cs
add
inc
aaa
add
mov
add
add
add
push
add
add
jae
mov
dec
add
sub
test
outsb
add
add
dec
add
jl
popa
add
add
add
add
add
add
add
add
add
push
add
jnp
cmp
mov
add
adc
cmp
add
inc
add
add
jne
insb
add
pop
add
add
add
js
jno
pop
add
add
add
add
add
add
add
add
add
add
verr
inc
add
addb
add
add
add
add
cmpsl
add
scas
add
add
lahf
add
add
add
add
dec
add
add
add
inc
add
add
add
cmp
add
add
add
push
pop
add
add
add
pop
add
xor
dec
add
add
add
add
add
add
add
add
sbb
stos
add
xchg
add
add
push
je
popa
insl
cs
insb
add
gs
je
dec
outsb
je
jb
popa
arpl
dec
outsb
je
jb
popa
insb
push
je
popa
insl
dec
jne
inc
insb
imul
outsb
outsb
arpl
push
outsl
inc
outsb
imul
gs
popa
insb
push
je
popa
insl
push
push
push
push
ja
inc
outsb
imul
gs
insl
inc
bound
je
popa
insb
insb
add
gs
insl
inc
bound
je
outsb
outsl
imul
dec
inc
push
imul
insb
imul
push
je
popa
insl
inc
arpl
jne
jae
jb
jo
imul
imul
popa
insl
inc
insb
outsl
arpl
outsb
addr16
popa
insb
insb
add
gs
insl
inc
push
inc
arpl
jne
je
popa
insl
add
gs
insl
inc
push
inc
insl
popa
imul
jae
push
je
popa
insl
inc
push
inc
outsl
jb
outsl
je
outsb
push
popa
jae
ja
jb
add
gs
insl
inc
push
dec
data16
imul
jne
add
gs
insl
inc
push
push
popa
jae
ja
jb
add
gs
insl
inc
push
push
gs
outsl
outsb
popa
insb
push
inc
add
gs
insl
inc
push
jo
dec
ja
gs
push
je
popa
insl
inc
insb
gs
outsb
jne
add
gs
insl
inc
insb
gs
jb
jb
outsl
jb
push
je
popa
insl
inc
insb
outsl
jae
inc
imul
insl
inc
jb
popa
je
inc
arpl
jne
je
push
je
popa
insl
inc
jb
popa
je
inc
popa
arpl
in
add
fs
add
gs
insl
inc
jb
popa
je
dec
outsl
addr16
outsl
outsb
je
js
add
gs
insl
inc
arpl
jo
inc
popa
je
inc
outsl
jb
push
arpl
icebp
inc
add
gs
insl
inc
gs
addr16
popa
arpl
lret
inc
add
insl
inc
gs
gs
inc
arpl
jne
je
push
je
popa
insl
inc
outsb
arpl
jo
inc
popa
je
inc
outsl
jb
push
arpl
filds
push
je
popa
insl
inc
outsb
jne
gs
je
inc
jo
add
gs
insl
inc
outsb
jne
gs
je
inc
jo
inc
gs
outsb
fs
arpl
push
je
popa
insl
inc
outsb
jne
gs
je
inc
jo
dec
arpl
add
gs
insl
inc
outsb
jne
gs
je
inc
jo
dec
popa
jne
arpl
fadds
outsl
outsb
add
gs
insl
inc
outsb
jne
gs
je
inc
jo
push
gs
imul
popa
insl
inc
outsb
jne
gs
je
push
jne
jae
jb
jo
imul
popa
insl
inc
outsb
jne
gs
je
push
jne
jae
jb
jo
imul
outsl
jne
je
push
je
popa
insl
inc
outsb
jne
gs
je
push
jne
jae
jb
jo
imul
outsl
jne
je
jne
insb
imul
je
popa
insl
inc
imul
push
je
popa
insl
inc
imul
add
gs
insl
inc
imul
je
xor
push
je
popa
insl
inc
imul
je
push
je
popa
insl
inc
imul
ss
push
je
popa
insl
inc
imul
add
gs
insl
inc
imul
gs
inc
gs
jb
outsl
jb
je
imul
popa
insl
inc
imul
gs
dec
je
jb
je
push
gs
gs
push
je
popa
insl
inc
imul
gs
dec
jne
push
gs
gs
add
gs
insl
inc
insb
jne
push
add
gs
insl
inc
insb
jne
push
add
gs
insl
inc
outsl
jb
gs
gs
insb
dec
add
gs
insl
inc
outsl
jb
gs
insb
insb
dec
imul
gs
insl
inc
outsb
gs
je
push
jne
addr16
gs
arpl
jne
je
popa
insl
gs
push
je
popa
insl
inc
gs
arpl
jne
je
je
je
jae
push
je
popa
insl
inc
gs
jo
inc
popa
arpl
ret
add
gs
insl
inc
gs
jo
inc
dec
inc
push
je
je
jae
push
je
popa
insl
inc
gs
jo
inc
gs
outsb
fs
arpl
jae
push
je
popa
insl
inc
gs
jo
inc
imul
insl
inc
gs
jo
dec
fs
push
je
popa
insl
inc
gs
jo
push
jne
arpl
ljmp
jb
add
gs
insl
inc
gs
jo
push
je
je
add
gs
insl
inc
gs
jo
push
jo
popa
je
push
je
je
add
gs
insl
inc
gs
jo
push
jae
jb
imul
outsb
outsw
add
gs
insl
inc
gs
jo
push
jae
jb
imul
arpl
add
gs
insl
inc
gs
popa
arpl
in
inc
add
jo
imul
push
je
popa
insl
inc
gs
popa
arpl
roll
popa
jne
je
imul
jns
push
je
popa
insl
inc
gs
popa
arpl
rolb
push
popa
je
enter
popa
insl
inc
gs
popa
arpl
cli
inc
add
outsb
je
jb
insl
outsb
je
je
outsl
outsb
add
gs
insl
inc
gs
outsl
outsb
je
outsb
je
gs
gs
outsb
outsw
add
gs
insl
inc
gs
jne
jb
outsb
je
insl
popa
imul
jae
push
je
popa
insl
inc
gs
outsb
arpl
jo
gs
gs
popa
insb
jbe
inc
inc
dec
gs
push
je
popa
insl
inc
gs
outsb
arpl
jo
gs
jae
jb
inc
push
imul
je
popa
insl
inc
gs
outsb
arpl
jo
imul
outsl
push
outsb
fs
outsl
dec
gs
insb
imul
gs
insl
inc
gs
outsl
arpl
inc
insb
imul
jae
outsl
outsb
add
gs
insl
inc
gs
outsl
arpl
inc
imul
push
je
popa
insl
inc
gs
jne
inc
arpl
jne
je
push
imul
inc
fs
jae
add
gs
insl
inc
gs
data16
imul
jne
add
gs
insl
inc
gs
jo
outsb
jae
jb
jb
add
gs
insl
inc
gs
jne
jae
jb
jo
imul
outsb
fs
outsb
outsw
add
gs
insl
inc
gs
jne
jae
jb
jo
imul
push
je
popa
insl
inc
gs
jne
jae
jb
jo
imul
push
outsl
jne
je
jns
push
je
popa
insl
inc
gs
jne
jae
jb
jo
imul
imul
popa
insl
inc
gs
jne
jae
jb
jo
imul
jae
push
je
popa
insl
inc
gs
outsl
je
insb
push
jo
popa
je
push
je
je
add
gs
insl
inc
gs
jae
jb
push
je
popa
insl
inc
gs
jae
jb
jns
add
gs
insl
inc
gs
gs
imul
popa
insl
inc
gs
add
gs
insl
dec
imul
jne
arpl
gs
gs
insl
dec
outsb
imul
push
jae
jb
inc
push
imul
insb
imul
je
popa
insl
dec
outsb
jae
jb
inc
jo
inc
gs
outsb
fs
arpl
push
je
popa
insl
dec
jae
arpl
jne
je
popa
insl
gs
outsb
push
jae
add
gs
insl
dec
jae
jo
push
jne
jae
jb
bound
add
gs
insl
dec
jae
popa
arpl
inc
add
addr16
outsb
popa
bound
add
gs
insl
dec
jae
imul
imul
jbe
imul
je
popa
insl
dec
jae
imul
fs
jns
jo
add
gs
insl
dec
jae
imul
fs
jns
popa
arpl
rolb
popa
insl
dec
jae
outsl
addr16
outsb
add
gs
insl
dec
jae
arpl
gs
outsl
insl
jo
je
jb
push
je
popa
insl
dec
jae
jne
jae
jb
bound
add
gs
insl
dec
jae
jae
outsb
addr16
imul
je
outsb
je
gs
gs
push
je
popa
insl
dec
popa
jne
arpl
fldl
push
je
popa
insl
dec
outsl
popa
fs
popa
arpl
rolb
insl
inc
imul
insl
dec
outsl
popa
fs
imul
add
gs
insl
dec
outsl
popa
fs
imul
push
gs
insl
dec
outsl
add
gs
insl
dec
outsl
addr16
gs
jne
arpl
outsl
popa
fs
imul
inc
add
insl
dec
outsl
addr16
gs
jne
arpl
outsl
popa
fs
je
jb
gs
gs
insl
dec
outsl
imul
insl
dec
outsl
outsl
jne
add
gs
insl
dec
imul
dec
outsb
imul
dec
outsl
jne
je
jo
inc
imul
insl
add
gs
insl
dec
outsl
jne
je
imul
insl
add
gs
insl
dec
outsl
jbe
inc
jo
add
gs
insl
dec
jne
inc
jo
jae
jne
outsb
imul
popa
insl
dec
jo
outsb
inc
imul
gs
insl
dec
jo
outsb
inc
imul
insl
dec
jo
outsb
inc
imul
gs
insl
dec
jo
outsb
push
insl
jo
imul
insl
dec
jo
imul
gs
outsb
push
jo
data16
jb
insb
imul
inc
imul
arpl
add
gs
insl
push
popa
jne
gs
popa
arpl
jmp
popa
imul
popa
insl
push
jb
outsb
je
imul
insl
push
jb
arpl
jae
popa
insb
insb
add
gs
insl
push
jb
arpl
jae
outsb
outsl
imul
dec
inc
push
imul
insb
imul
push
je
popa
insl
push
jne
arpl
push
je
popa
insl
push
gs
fs
imul
insl
push
gs
jae
cmp
outsb
je
outsb
outsw
xor
push
je
popa
insl
push
gs
jae
mov
inc
add
je
outsb
outsw
add
gs
insl
push
gs
jae
inc
add
je
outsb
outsw
inc
js
push
je
popa
insl
push
gs
jae
sub
inc
add
push
je
popa
insl
push
gs
jae
xor
add
insl
inc
outsl
outsl
je
jb
outsb
je
imul
popa
insl
push
gs
outsl
jbe
inc
jo
inc
gs
outsb
fs
arpl
push
je
popa
insl
push
gs
imul
jb
jo
inc
popa
arpl
testb
gs
insl
push
gs
gs
inc
arpl
jne
je
inc
jns
fs
gs
insl
popa
imul
push
gs
gs
inc
arpl
jne
je
inc
jns
insl
popa
imul
jae
insl
popa
imul
push
gs
gs
inc
insl
popa
imul
jae
gs
imul
outsl
outsb
inc
insl
popa
imul
push
gs
gs
inc
outsl
jb
outsl
je
outsb
push
popa
jae
ja
jb
inc
insl
popa
imul
push
gs
insl
gs
popa
arpl
fldl
insb
outsl
popa
imul
popa
insl
push
gs
gs
push
je
popa
insl
push
gs
add
gs
insl
push
gs
jo
inc
popa
arpl
call
push
je
popa
insl
push
gs
jo
push
gs
imul
popa
insl
push
gs
popa
arpl
stc
inc
add
insb
je
imul
jns
push
je
popa
insl
push
gs
popa
js
je
insb
insb
inc
outsl
jne
je
push
je
popa
insl
push
gs
outsl
je
imul
outsl
outsb
inc
popa
insb
insb
bound
imul
je
popa
insl
push
gs
jae
jb
push
je
popa
insl
push
gs
inc
jne
add
gs
insl
push
push
ja
inc
outsb
imul
popa
insl
push
push
ja
push
jae
jb
inc
push
imul
insb
imul
je
popa
insl
push
imul
ss
push
je
popa
insl
push
imul
add
gs
insl
push
je
jb
inc
outsb
imul
popa
insl
push
je
jb
inc
outsb
imul
je
popa
insl
push
je
jb
dec
outsl
popa
imul
xlat
cmc
inc
add
insl
push
je
jb
push
popa
insb
imul
gs
popa
insb
jbe
inc
inc
dec
gs
push
je
popa
insl
push
je
jb
push
popa
insb
imul
jae
jb
inc
push
imul
je
popa
insl
push
je
jb
jne
add
gs
insl
push
je
je
xor
push
je
popa
insl
push
je
je
push
je
popa
insl
push
je
jo
outsl
popa
imul
mov
inc
add
insl
push
jne
jae
jb
bound
push
je
popa
insl
push
gs
insb
inc
imul
gs
insl
push
gs
insb
inc
imul
insl
push
outsb
imul
add
gs
insl
push
outsb
insl
outsl
jne
je
jo
inc
imul
insl
add
gs
insl
push
outsb
insl
outsl
jne
je
imul
insl
add
gs
insl
push
outsb
jae
bound
jb
bound
push
je
popa
insl
push
jo
popa
je
inc
arpl
jne
je
imul
outsw
add
gs
insl
push
jo
popa
je
push
jne
jae
jb
jo
imul
imul
add
gs
insl
push
gs
data16
insl
popa
imul
jae
push
je
popa
insl
push
gs
data16
popa
jae
ja
jb
add
gs
insl
push
popa
imul
push
gs
fs
outsl
dec
popa
jne
arpl
filds
popa
insl
push
popa
imul
push
gs
jne
arpl
add
gs
insl
push
popa
imul
outsl
jne
arpl
add
gs
insl
push
popa
jae
insb
outsl
bound
imul
insb
gs
add
gs
insl
push
gs
imul
imul
popa
insb
jbe
inc
inc
dec
gs
push
je
popa
insl
push
jb
je
inc
imul
insl
push
jb
je
dec
imul
inc
jb
insl
inc
jae
gs
add
gs
insl
push
jb
je
dec
imul
push
gs
outsl
insl
insl
outsb
je
push
je
popa
insl
push
jb
je
dec
imul
push
jae
outsb
addr16
js
gs
push
call
mov
add
add
jbe
xchg
add
xlat
mov
scas
aam
in
mov
add
cmpsl
add
add
xlat
aad
mov
fiaddl
add
add
add
mov
fwait
mov
add
xchg
nop
addr16
add
add
add
test
pushf
add
scas
lahf
nop
incl
flds
incl
test
jnp
insb
add
add
add
mov
add
xchg
mov
mov
xchg
add
fs
push
incl
incl
mov
incl
mov
mov
dec
add
add
movsl
cmc
movsb
scas
add
add
incl
ljmp
add
mov
call
add
incl
loopne
mov
add
push
push
push
push
push
push
push
push
push
push
call
call
add
mov
mov
ljmp
lods
add
lods
outsl
add
add
jge
testb
mov
mov
fistpll
incl
add
add
add
add
mov
add
je
aam
add
jecxz
sar
add
addr16
enter
add
jmp
ljmp
in
fcomps
inc
call
movsb
push
inc
add
push
push
push
push
call
mov
pop
data16
ljmp
popf
movl
pop
stos
data16
icebp
loope
add
jmp
les
mov
xchg
add
cmpsl
jecxz
sahf
mov
mov
add
andb
leave
test
add
movsl
shrl
call
out
testl
push
push
push
call
pop
add
xchg
jmp
popf
pop
test
add
cltd
movl
std
add
movsb
add
jae
loop
add
xchg
add
add
incl
out
stos
add
fs
fcompl
cmc
scas
in
idiv
jmp
movsl
add
in
add
xchg
add
std
push
add
incl
add
add
mov
loop
push
mov
add
mov
sub
push
push
push
push
push
push
push
call
push
lock
fs
call
lcall
jle
jbe
repnz
xchg
incl
mov
faddl
into
push
scas
mov
add
add
mov
add
stos
clc
fdivr
dec
loope
je
enter
ljmp
add
roll
movsb
fwait
lea
lret
add
scas
arpl
call
int3
fistl
add
add
push
push
push
push
push
push
push
push
push
push
push
call
pop
scas
add
jge
jmp
push
fsts
push
movb
lds
scas
rolb
mov
idiv
fdiv
add
add
xchg
add
cltd
cltd
add
add
add
imul
int3
bound
add
add
ljmp
mov
sub
push
push
push
push
push
push
push
push
push
push
call
fiadds
xchg
add
add
out
add
mov
push
add
jp
jns
outsl
shl
add
cwtl
add
pushl
in
add
jo
push
shll
add
lret
xchg
push
test
mov
filds
gs
add
add
lret
mov
mov
push
out
lock
push
stos
hlt
mov
add
pushl
incl
xor
add
scas
add
add
push
push
push
push
call
push
arpl
mov
andb
decl
in
push
iret
push
mov
scas
add
add
int3
mov
jmp
add
cmpb
add
cmpl
xlat
add
sti
shll
xchg
incl
add
leave
push
in
mov
ret
test
std
popl
add
add
incl
mov
add
push
call
push
push
push
push
push
push
push
call
jecxz
add
add
clc
jb
imul
lea
nop
test
out
add
pop
cmc
into
mov
mov
mov
push
lret
pop
incl
add
rorl
incl
scas
xchg
add
notb
incl
fwait
xchg
push
cmc
cmc
xchg
mov
jmp
push
push
call
cmpb
add
call
add
add
lods
call
mov
add
add
fists
shll
sahf
incb
lahf
add
push
addr16
mov
add
add
ljmp
add
xchg
loopne
cld
imul
rclb
bound
pop
leave
mov
incl
inc
push
push
push
push
push
push
call
xchg
add
add
add
rol
mov
mov
test
pop
stos
lods
add
mov
add
stos
xchg
add
rolb
add
add
add
lods
lock
rolb
scas
add
add
incl
fnstcw
call
push
pop
lock
filds
jle
out
add
lcall
sub
mov
push
call
fldl
negb
faddl
mov
fadd
lcall
out
xchg
ja
cld
add
mov
fiadds
insb
add
leave
lcall
add
add
add
aad
pop
add
jb
mov
add
add
mov
jo
jle
mov
mov
sub
mov
add
push
push
push
push
push
push
push
push
push
call
add
rol
mov
fstpl
mov
int
add
add
mov
incl
add
add
mov
push
mov
fistps
lods
test
mov
sahf
add
movb
add
push
add
fwait
add
incl
fadds
add
add
push
push
push
push
call
add
jmp
xlat
add
loope
cmc
sar
incl
jo
xchg
add
sahf
insb
popl
test
incl
add
add
out
jmp
lcall
cld
push
add
add
add
mov
xchg
lcall
add
add
test
mov
scas
push
add
mov
add
lea
in
call
dec
push
push
push
push
push
push
push
call
push
movsb
add
adc
cli
mov
jmp
mov
mov
add
lcall
jl
add
add
add
incl
aam
pushf
cwtl
add
add
into
push
xchg
cwtl
lods
lret
stc
ja
mov
jno
cmp
add
add
add
into
add
mov
loop
push
shlb
mov
sub
call
mov
sub
push
push
dec
ror
push
xor
add
shl
add
sub
pop
ror
pop
push
push
push
call
mov
cmpsl
add
scas
mov
jge
addr16
decl
jae
mov
sar
leave
add
test
fcmove
add
lods
jmp
mov
add
add
mov
add
incl
jnp
lea
push
add
incl
fistpll
mov
jmp
repnz
dec
call
xchg
add
lock
pushl
push
push
call
fadds
pop
add
out
out
les
add
popa
add
add
mov
add
add
jmp
xchg
add
fildl
lea
mov
push
fcmovu
mov
decl
int3
imul
add
add
add
mov
mov
add
pop
pusha
add
hlt
add
call
push
push
push
push
push
call
pop
add
mov
mov
fcompl
lea
add
call
nop
xchg
fisubl
pop
rcll
testl
test
int
int
bound
inc
cli
into
push
fstpt
fldl
adcb
push
test
js
addl
add
push
cmpsb
lcall
clc
add
lcall
add
add
cli
mov
sub
mov
movl
push
push
push
call
out
into
add
add
incl
in
pop
out
add
mov
ljmp
movb
stos
scas
add
pop
push
shll
xchg
add
in
mov
dec
loope
add
pop
jnp
leave
sti
nop
mov
add
enter
add
filds
decl
leave
shlb
decl
push
push
push
push
push
push
push
call
mov
cltd
pushl
cld
incl
push
add
je
lcall
add
lret
add
cmpsb
mov
movsl
add
loop
popf
incl
aam
incl
add
test
add
data16
fwait
pop
jle
icebp
stos
rolb
std
add
les
add
movsl
idiv
leave
add
mov
sub
push
pushl
push
push
push
push
push
push
call
add
push
jl
add
js
mov
incl
jae
data16
cld
std
add
into
pop
xlat
int
incl
repnz
add
shl
mov
icebp
add
add
add
incl
jb
add
shl
xchg
test
call
mov
add
xchg
xchg
mov
mov
sub
pushl
call
pushl
push
push
push
push
push
push
push
push
call
mov
jb
lock
lret
aad
shrb
lods
add
imul
push
add
leave
xchg
jp
pushl
mov
add
test
outsl
jmp
add
stc
add
call
incl
mov
jmp
fildl
add
sar
mov
mov
sub
pushl
push
push
push
call
lcall
pop
add
add
shlb
movsl
pop
mov
fcoml
cli
xchg
fiadds
pop
lret
pushf
add
push
shll
imul
add
bound
mov
cld
mov
sti
add
jno
pop
pop
imul
subl
pusha
xchg
mov
sub
call
push
push
shl
lea
push
xor
add
rol
rol
add
sub
lea
pop
sub
shl
pop
push
push
push
call
add
add
fiadds
add
add
ficoml
arpl
push
call
mov
ljmp
jmp
mov
call
inc
xchg
add
jae
add
call
popf
xchg
leave
add
call
mov
addb
ljmp
jnp
hlt
pop
gs
popl
mov
fidivs
incl
pushl
call
push
push
push
push
push
push
push
call
test
gs
add
insb
push
roll
xlat
pop
mov
add
cltd
loopne
mov
mov
jae
popf
clc
add
lahf
pop
push
push
add
add
add
ljmp
arpl
push
imulb
call
add
add
out
ret
add
data16
dec
mov
jmp
add
aam
add
mov
rorl
inc
push
push
rol
shl
xor
push
and
add
inc
sub
sub
shr
sub
add
pop
rol
not
shl
pop
push
push
push
push
push
push
push
call
add
loope
mull
pushl
inc
shll
incl
popa
cmpsl
add
incl
into
add
jmp
add
clc
add
add
inc
add
add
add
lcall
mov
cwtl
insb
mov
jmp
lcall
je
out
lret
rolb
add
pop
ret
push
mov
sub
push
push
call
push
push
call
test
idiv
ljmp
push
add
ljmp
call
les
lcall
add
xlat
pop
mov
add
incl
iret
rolb
mov
mov
add
lret
not
mov
outsl
fildll
ljmp
pop
incl
fsin
ja
mov
fdivr
mov
mov
in
hlt
mov
push
push
push
push
push
push
call
push
push
add
add
xchg
not
add
xor
add
incl
jle
cli
xchg
jae
add
add
pushl
js
add
add
sahf
jns
add
jmp
add
fiadds
add
lds
add
call
push
js
mov
add
out
popl
add
push
push
push
push
push
push
call
xchg
mov
in
stos
mov
ljmp
cld
stos
add
addb
add
add
add
lock
mov
test
pusha
imul
incl
add
add
xchg
lcall
xchg
add
incl
add
cltd
add
outsl
xchg
mov
add
call
cmpsl
in
incl
incl
pop
lcall
lock
decl
call
pop
loopne
pop
call
push
call
ljmp
int3
add
jle
mov
add
cltd
popa
js
add
add
popf
rolb
mov
fdivs
lock
incl
add
je
outsl
sar
add
sarb
add
data16
cli
add
repnz
cltd
ja
pop
push
shll
add
in
incl
add
add
add
call
jl
add
add
add
xchg
fwait
add
add
mov
fmulp
call
stos
lret
fucomip
call
cmpsb
add
cltd
add
mov
add
test
fbstp
roll
add
add
movsl
push
add
add
lock
jne
jle
add
add
call
in
xchg
clc
in
pop
mov
subl
pusha
add
pop
enter
in
lock
incl
add
out
and
fcoms
push
push
push
push
call
mov
jns
lods
add
jl
mov
add
subl
pop
imul
sar
add
rcr
jmp
iret
fisubs
addr16
call
push
cmc
popa
add
jnp
call
add
incl
lret
mov
jbe
mov
sub
add
push
push
push
call
mov
lcall
add
xchg
mov
cli
add
enter
mov
add
dec
cli
out
xchg
fsubp
jecxz
add
out
loop
mov
fnstenv
fildll
pop
add
je
add
mov
xchg
incl
lods
lcall
add
movsl
cmpsb
call
sub
push
push
push
push
push
push
call
rorb
xchg
enter
mov
add
mov
icebp
push
push
insb
lcall
add
xchg
add
incl
add
mov
add
fdivrp
scas
fadds
add
lret
rcr
lods
loop
add
xlat
cmpsb
add
add
add
lds
ljmp
sahf
sahf
fwait
add
mov
add
add
decl
mov
push
push
push
push
push
push
push
push
push
call
jo
incl
add
hlt
lea
jae
add
incl
lahf
add
lahf
add
jns
flds
ja
add
add
je
jmp
add
decl
cltd
jbe
push
faddl
add
add
incl
xchg
add
incl
add
add
incl
add
loopne
std
fwait
add
sub
push
push
push
push
call
push
jae
xchg
cwtl
jmp
jmp
add
jno
xchg
ljmp
rclb
sarb
dec
jns
add
mov
into
popf
mov
add
bnd
insb
mov
mov
jo
js
hlt
cmp
add
fcoms
cli
lcall
push
xchg
fucomi
std
cmp
decl
xlat
add
imul
incl
incl
lock
push
call
incl
mov
add
lahf
add
test
call
mov
mov
dec
mov
add
add
fiadds
in
mov
cmc
ljmp
add
fldl
add
add
loop
scas
add
add
mov
lahf
testl
add
idiv
jmp
mov
sub
pop
push
push
call
shll
data16
cli
sar
jmp
add
repnz
lcall
fadds
push
call
out
mov
mov
pop
add
incl
scas
add
scas
lcall
mov
out
lret
sahf
fadds
lods
ret
rolb
add
add
pop
fistl
mov
sub
mov
sub
push
push
push
push
push
push
push
push
push
call
push
popl
cmpsl
lock
mov
mov
add
test
in
ficomps
pop
xchg
in
jmp
xchg
incl
jmp
mov
mov
in
jp
add
add
pop
adc
add
test
add
add
lcall
fcoms
lcall
add
int
bound
add
loopne
add
in
fmull
push
push
push
call
add
fwait
int
add
jb
jae
add
test
mov
incl
clc
scas
iret
mov
xlat
xchg
add
add
cltd
mov
add
in
fstpl
enter
incl
add
add
add
std
add
outsl
mov
xchg
lea
clc
xchg
push
stos
mov
sub
sub
push
push
push
push
call
test
pop
add
add
incl
andl
lods
add
int3
mov
add
stc
jmp
pop
jmp
inc
add
add
xlat
or
push
jb
out
mov
add
push
ret
js
xlat
mov
xlat
fnsetpm(287
xor
insb
jmp
mov
mov
sub
sub
pop
push
push
push
push
push
push
push
call
add
into
xchg
add
add
jb
ja
add
add
incl
add
xchg
in
jmp
arpl
xlat
enter
call
orb
incl
add
test
popa
add
test
xlat
lock
sahf
add
push
push
movsb
add
add
mov
ret
mov
add
xchg
dec
std
cmc
xlat
testl
sub
rep
pop
push
push
push
push
push
push
push
call
test
jmp
incl
add
add
cwtl
mov
cld
jmp
add
add
imul
shr
aad
in
jle
mov
mov
addr16
add
add
add
call
add
add
mov
leave
incl
add
sub
mov
add
push
call
add
mov
out
cltd
xchg
add
xchg
into
pop
xchg
add
pop
add
pop
int3
jp
mov
stos
rcl
loope
add
mov
arpl
add
les
add
jo
divb
xorl
push
xchg
mov
incl
add
call
les
mov
add
add
cld
add
jns
jns
lock
pop
fwait
pushf
jmp
mov
sub
add
push
push
push
push
push
push
call
mov
jecxz
jns
add
pushf
fucomip
add
xlat
fsubl
movsl
push
jecxz
std
pop
call
jmp
popl
insb
lahf
imull
movsb
insb
movsl
out
mov
lcall
push
clc
fiadds
lods
lods
cmpb
addl
test
push
add
add
lods
jne
stos
add
incl
incl
add
push
push
push
push
push
push
push
call
mull
in
add
incl
incl
add
leave
out
add
incl
add
add
add
incl
movsl
add
mov
add
call
les
jmp
mov
add
add
neg
incl
add
pushl
add
jmp
add
ret
jl
scas
mov
sub
sub
mov
sub
push
push
push
push
call
jo
add
out
xchg
cmp
clc
add
repnz
cld
jp
add
inc
jne
jmp
data16
fcomps
loope
incl
roll
add
push
pushl
mov
add
add
incl
add
mov
jmp
push
add
repnz
incl
decl
and
popf
push
push
push
call
add
add
xchg
add
int3
add
ficoms
add
add
jmp
fcmovnbe
add
fildll
add
add
add
addb
pop
add
hlt
mov
xchg
out
add
mov
add
jns
pop
gs
incl
add
add
push
add
test
add
cwtl
cmpsb
mov
sub
sub
push
push
push
push
push
push
push
push
push
call
lock
add
push
jmp
add
add
mov
add
add
add
add
andl
cmpb
xchg
add
push
movsb
loope
lods
int
mov
data16
mov
lcall
jne
add
movsb
push
fldenv
incl
push
push
push
push
push
push
call
aam
push
jecxz
xchg
mov
add
jecxz
in
ret
incl
add
mov
cld
fdivl
push
jmp
repnz
rorb
in
loopne
mov
jmp
mov
add
icebp
scas
add
jle
add
arpl
out
add
incl
pushl
out
incl
mov
jb
fldt
in
rclb
add
add
mov
push
push
inc
push
or
inc
add
rol
rol
sub
sub
dec
lea
add
pop
sub
not
shr
rol
pop
push
push
push
push
push
push
call
add
pop
imul
mov
cld
push
push
loopne
pop
out
mov
xchg
rol
stos
addl
push
push
movsl
test
frstor
cmpsl
jmp
add
mov
add
add
push
add
jp
mov
push
pop
add
fistps
add
xchg
add
add
push
out
jmp
fadd
add
incl
pushl
call
push
push
call
movb
shl
lcall
xlat
mov
out
push
add
push
ljmp
incl
add
jno
test
decl
push
add
add
mov
mov
add
add
ja
add
xorb
mov
incl
add
mov
add
rol
jmp
mov
sub
push
push
push
shl
push
or
inc
add
inc
shr
sub
not
add
pop
shr
pop
push
push
push
push
push
push
call
mov
xchg
jle
add
stc
mov
add
xchg
scas
incl
add
add
loopne
incl
mov
incl
add
add
sbbl
incl
pusha
movsl
jmp
incl
scas
cwtl
out
add
add
add
add
push
test
call
add
push
push
push
push
push
push
push
push
call
out
incl
pop
xchg
add
jbe
add
lcall
pop
xchg
add
addb
add
in
js
mov
icebp
push
add
lret
jmp
nop
mov
call
pop
add
mov
add
add
jae
imul
incl
out
add
incl
xchg
add
call
mov
push
push
push
push
push
call
sbb
incl
add
xchg
xchg
mov
jns
cmp
incl
add
incl
add
add
movl
out
cld
pop
rcl
add
jmp
add
pusha
out
pop
loope
add
add
jne
push
mov
add
popa
xchg
jbe
mov
fldl
xchg
mov
pushl
add
mov
sub
push
push
mov
push
call
add
jmp
test
add
adcl
add
out
decl
test
filds
add
aam
incl
mov
xchg
jl
jle
sahf
call
add
dec
call
add
loope
pop
scas
out
jmp
cmpsb
add
incl
mov
add
jns
add
add
add
add
add
push
push
push
push
push
push
push
call
cmc
jl
addr16
incl
incl
mov
add
push
add
mov
loopne
fwait
add
add
add
in
sar
jmp
xchg
hlt
add
aam
ja
add
in
fld1
cli
data16
jae
add
arpl
in
mov
add
mov
add
ror
imul
mov
fstpl
incl
decl
out
and
add
add
mov
xchg
dec
add
add
faddl
mov
in
add
push
add
mov
add
add
jmp
add
stos
jae
pop
jl
pop
rolb
add
mov
lcall
fildl
mov
add
mov
lods
add
data16
rclb
jle
push
xchg
mov
sub
add
push
push
push
push
call
incl
add
mov
push
mov
push
add
push
lret
mov
decb
call
add
out
outsl
mov
jp
add
aad
aam
push
jno
jmp
jae
adcb
jmp
add
cmp
incl
add
pop
cli
lret
xchg
scas
push
add
xchg
call
push
push
call
add
mov
add
in
push
xchg
push
faddl
sarl
jle
add
incl
arpl
add
add
mov
out
addb
out
push
ljmp
fnsave
aad
cld
add
test
add
push
add
push
add
mov
incl
add
fildl
addr16
mov
clc
lret
loopne
pushl
pushf
cwtl
ljmp
decl
and
push
push
push
push
push
push
call
add
mov
lcall
int
jmp
add
incl
shll
add
add
add
add
mov
mov
divb
cld
jge
roll
add
incl
push
add
incb
mov
mov
clc
add
add
add
mov
test
push
rolb
decl
incl
lock
push
push
push
push
call
mov
mov
pusha
mov
add
push
cltd
movl
movsb
mov
add
push
mov
js
jno
add
add
clc
mov
jmp
cmc
mov
sbbl
xchg
sub
jmp
jb
rcrl
repnz
cmpsl
rcrb
pushl
sub
pop
mov
sub
push
push
push
push
push
push
push
call
jge
add
add
jo
jl
call
les
pushl
fiaddl
add
jmp
push
idiv
fxtract
cwtl
cli
mov
fldenv
pushl
ljmp
add
popa
call
stos
js
jo
testb
mov
fcmovnbe
pushl
push
push
add
lcall
pop
add
add
add
je
push
jno
add
in
loopne
push
movsb
mov
sub
push
push
push
push
call
xchg
mov
mov
loopne
mov
add
incl
add
mov
add
pop
add
add
push
add
mov
jae
sti
lret
loop
pop
add
mov
neg
jmp
mov
push
add
push
lods
in
add
jp
rol
lods
jb
mov
test
incl
in
xchg
add
add
cltd
dec
jmp
movsb
add
into
pop
movsb
add
mov
sub
or
je
mov
sub
push
push
push
push
push
push
call
mov
cltd
incl
add
pop
add
aad
push
call
roll
add
incl
fwait
ret
pop
add
mov
add
clc
incl
icebp
insb
pop
ljmp
add
cld
add
jnp
bound
mov
outsl
movsl
in
incl
add
jge
pushl
cmpsb
mov
add
lods
add
imul
add
mov
sub
push
push
push
push
call
cmpsb
add
rolw
sti
incl
mov
outsl
jmp
add
mov
sarl
loopne
add
jbe
add
std
popf
push
jge
xchg
add
ja
out
add
jge
add
imul
add
fstp
clc
arpl
jae
nop
pop
lret
lret
lcall
hlt
clc
loop
mov
sti
push
add
incl
jle
call
sub
add
add
push
push
push
push
push
push
push
call
cmpsl
arpl
add
jmp
add
movsb
bound
jl
je
add
mov
incl
fucomi
test
add
lret
add
call
add
call
lea
roll
jno
add
mov
rolb
sti
add
jbe
push
pop
movsl
lods
lods
mov
mov
add
add
call
push
push
push
push
push
push
call
add
add
fs
aad
jne
mov
incl
lcall
in
jo
add
xchg
mov
lods
movsb
xchg
addb
rclb
mov
data16
ljmp
ljmp
add
incl
add
add
add
stos
jecxz
add
pushl
sub
mov
sub
add
push
push
push
push
push
push
push
push
push
call
sarb
fdivr
incl
in
add
enter
iret
add
idiv
decl
mov
cmpsb
mov
imul
cltd
add
add
add
add
add
incl
jnp
add
add
incl
add
mov
jl
jmp
add
jb
out
jl
mov
add
add
gs
je
idivb
add
add
incl
movsb
push
push
push
push
push
push
call
add
lods
jae
jno
loop
sahf
xchg
add
addb
leave
add
call
add
add
add
arpl
add
jl
mov
loopne
add
mov
scas
add
fs
bnd
add
clc
jb
add
xchg
add
pushf
in
add
fcoms
add
add
in
in
dec
xor
les
das
inc
add
push
push
push
push
push
push
push
call
add
fiaddl
add
pop
lods
mov
add
add
call
xlat
xchg
add
xchg
pop
mov
lahf
add
add
add
xchg
add
jmp
scas
faddl
add
incl
cld
hlt
ja
add
movl
out
jae
mov
xchg
push
mov
sub
or
je
push
push
push
push
call
mov
in
rcrb
jmp
aad
scas
xchg
imul
stos
mov
imul
pop
add
imul
stc
add
jl
incl
shl
pop
pop
add
fisubl
sar
incl
mov
add
fidivl
out
xchg
add
incl
push
push
push
push
push
push
call
lods
add
jge
add
rolb
push
jb
add
jmp
lods
pusha
add
push
outsl
push
jmp
pop
pop
pusha
lcall
mov
add
jmp
in
ja
mov
add
xchg
lcall
aad
pop
xchg
incl
cwtl
add
jne
call
js
add
lods
add
add
enter
cmc
add
mov
sub
add
push
push
call
out
mov
add
hlt
add
incl
mov
into
in
mov
add
add
xlat
add
add
mov
movsl
mov
mov
mov
out
xorl
int
stc
decl
jmp
add
call
stc
mov
push
add
icebp
mov
rcl
imul
jb
add
incl
decl
add
rep
pop
push
push
push
or
not
add
inc
sub
shr
sub
add
not
pop
ror
pop
push
push
push
push
push
push
push
call
add
mov
add
popf
push
add
mov
pop
jne
add
lock
incl
add
jae
jp
mov
call
int3
arpl
out
jmp
incl
jnp
insb
testb
js
add
add
add
add
incl
add
add
in
mov
lock
xchg
mov
sub
pop
mov
push
push
push
push
push
push
push
push
push
call
mov
xlat
mov
popl
jne
test
decl
std
push
data16
movb
incl
add
loope
iret
push
mov
scas
ror
add
add
pop
idivl
jnp
cld
imul
xchg
stos
ret
push
xchg
bound
add
mov
fstpt
decl
mov
push
push
call
mov
test
gs
ljmp
fwait
nop
mov
test
mov
clc
int
ja
mov
add
add
pushf
movsl
inc
add
add
in
add
movb
add
dec
call
add
add
add
add
add
incl
into
cwtl
mov
in
aam
mov
call
add
add
js
out
test
add
icebp
mov
sub
mov
push
push
push
push
push
push
push
push
push
call
lret
add
iret
addb
mov
imulb
addb
push
push
mov
jmp
add
pop
mov
outsl
add
add
fidivrs
add
incl
add
add
rcrl
stos
incb
les
jl
mov
fnsave
mov
incl
incl
out
in
mov
decl
jmp
push
push
push
push
push
push
push
call
add
mov
add
pusha
leave
mov
add
add
fwait
jo
incl
pop
cmpsl
add
add
incl
mov
add
add
cli
lcall
add
mov
ja
out
in
lods
add
cmc
add
add
push
rcrb
testl
loopne
call
in
add
push
push
push
push
push
call
jne
mov
mov
xchg
add
push
js
push
call
popf
stc
add
xchg
mov
inc
lcall
lret
cli
add
jb
xchg
add
add
ljmp
add
push
call
aad
jae
pushl
lock
ret
pop
add
mov
lret
mov
out
mov
sub
push
push
push
push
push
push
push
push
call
mov
mov
jns
mov
into
mov
ljmp
add
nop
add
incl
ror
add
add
iret
add
add
add
into
xchg
add
pusha
ljmp
roll
add
ficomps
add
gs
add
std
add
push
add
mov
add
push
jnp
in
xchg
incl
js
pushl
add
decl
push
mov
sub
push
push
push
push
push
call
leave
add
add
jns
push
push
shlb
add
add
add
in
pop
addr16
add
add
add
mov
push
flds
push
push
cmc
ret
adcb
mov
xlat
pop
scas
jmp
fists
lods
les
add
roll
add
bound
int3
add
add
fadds
int3
add
incl
or
adc
push
push
push
push
call
add
mov
add
stos
add
push
mov
in
mov
add
in
push
add
stos
testl
add
add
sahf
imul
add
jne
push
in
incl
sahf
add
incl
movsl
add
insb
jno
add
out
ljmp
mov
add
inc
add
decl
inc
add
push
push
push
push
push
call
mov
inc
add
add
add
add
jae
lds
xchg
add
aad
adc
add
jmp
jo
call
call
add
fcomp
loope
mov
add
out
incl
loop
jns
jmp
incl
iret
ljmp
push
ljmp
lcall
mov
sub
lea
push
push
call
test
call
xchg
add
decl
in
add
add
aam
in
out
cmc
jns
add
insb
jae
add
in
push
add
jnp
mov
jbe
add
pushl
pop
ja
mov
add
pop
add
add
faddp
mov
jbe
imul
incl
pusha
jp
xchg
lods
aad
decl
call
push
push
push
push
push
call
arpl
dec
add
add
push
push
sti
mov
stos
push
enter
push
add
add
jmp
jmp
fiaddl
lods
add
pop
push
ja
frstpm(287
cmc
fldl
push
add
mov
incl
fs
push
lret
pusha
roll
add
cwtl
stos
fidivs
mov
xchg
add
add
incl
incl
mov
sub
mov
sub
add
push
push
push
push
push
call
jno
add
push
incl
add
test
ror
jecxz
sti
loopne
mov
nop
decl
pushf
imul
incl
pop
add
add
add
incl
jns
add
hlt
out
pop
pop
add
jnp
mov
add
xlat
add
add
lea
mov
sub
push
push
push
push
push
push
push
call
push
add
mov
mov
idiv
sti
pop
jne
add
add
add
add
popf
add
fdivr
mov
call
add
mov
add
jecxz
jmp
pusha
fiadds
jbe
xchg
out
push
xchg
ret
enter
incl
mov
push
add
mov
push
push
push
push
push
push
push
call
add
popa
add
pop
mov
jmp
add
jne
in
jae
pushl
test
lcall
add
lret
cld
lcall
fcoms
pushl
jmp
mov
xchg
jmp
outsw
lds
jnp
imul
sub
push
push
push
push
push
call
ret
add
popa
add
scas
add
xchg
incl
test
push
into
or
add
imul
add
add
incl
popa
sahf
xchg
mov
add
int
mov
test
jno
into
add
imul
incl
add
mov
incl
lret
add
add
cwtl
addl
push
incl
add
js
incl
call
push
push
push
push
push
call
loopne
ja
loopne
add
data16
popl
add
int3
xchg
sti
add
dec
mov
add
xchg
push
notb
mov
jecxz
scas
std
test
jns
add
mov
lods
je
imul
incl
xchg
add
mov
jmp
flds
test
popf
jns
test
add
call
add
in
lds
int
rorb
pop
push
push
push
push
push
push
push
call
mov
jl
lret
mov
insb
pop
shll
jno
add
incl
iret
add
mov
incl
iret
lret
nop
fsub
in
iret
add
mov
iret
add
add
cmc
push
bound
add
mov
pop
add
jp
xchg
push
in
mov
flds
push
js
sti
decl
pop
push
push
push
push
push
push
call
add
xchg
mov
fnstsw
fbstp
add
mov
add
add
add
incl
incl
add
testl
add
imul
out
rolb
sahf
lcall
xchg
imul
add
pushl
in
lcall
sbb
add
push
push
push
push
push
push
call
data16
jmp
lcall
insb
addl
testb
mov
add
add
add
scas
lahf
add
add
mov
add
test
jl
stos
add
aad
fisubs
call
call
out
pop
xchg
popf
cwtl
add
fdivl
mov
add
push
mov
into
decl
dec
push
push
push
push
call
in
add
add
data16
add
incl
out
loope
jnp
cltd
xchg
add
std
jno
addr16
addr16
add
add
push
inc
mov
mov
fldcw
jmp
fnstenv
mul
add
push
int3
add
add
incl
lret
imul
pop
jae
mov
ret
push
push
push
push
push
push
call
cmc
in
add
mov
shlb
fadds
mov
stos
add
outsl
xlat
call
cmpb
lods
iret
cmpsb
lret
call
incl
jne
jle
cld
je
call
add
jo
add
push
iret
pop
add
rolb
out
add
mov
in
sar
lcall
jno
int3
add
imul
add
jno
incl
in
push
push
push
push
push
push
call
add
jmp
roll
add
lods
lret
pop
out
add
lcall
enter
out
push
test
jno
test
or
add
jmp
add
scas
jbe
add
lds
in
incl
iret
roll
popf
fdivrp
mov
je
mov
jae
add
xchg
add
incl
call
dec
add
push
push
push
push
push
push
push
push
call
xchg
call
jge
add
test
push
popa
test
out
pop
add
add
shl
add
pop
leave
xlat
add
repnz
add
add
add
incl
add
enter
mov
out
add
jnp
add
enter
pop
push
add
rolb
mov
jb
add
pop
leave
fwait
add
incl
test
mov
sub
push
push
push
push
push
push
push
push
push
call
mov
add
xchg
add
jns
fdivrs
add
mov
incl
add
movsb
add
sarl
jmp
mov
add
filds
ljmp
in
rolb
push
push
add
outsl
loop
cltd
pusha
xchg
mov
add
inc
out
fcomps
call
add
add
add
call
call
jle
add
in
shlb
fadds
add
js
aam
hlt
std
mov
add
add
jne
lcall
iret
add
pushl
iret
leave
fnsave
add
aam
lods
add
pop
fsubrl
add
add
dec
fwait
aam
mov
jecxz
add
add
jo
push
add
out
aam
jecxz
add
lods
insb
add
add
add
jle
add
add
add
add
in
clc
mov
mov
and
push
push
push
push
call
ret
jle
ljmp
xchg
add
pop
add
fadds
nop
push
add
mov
ljmp
rolb
jo
add
jbe
ljmp
pushl
mov
std
add
jne
add
decb
xlat
fsts
fisubrl
xchg
add
in
in
mov
cmp
push
call
mov
sti
add
lcall
add
inc
add
out
rcrl
jmp
rcrl
mov
add
lods
mov
add
pop
add
pusha
add
pushl
movb
add
movsl
pop
push
popl
test
add
mov
pushl
add
add
mov
incl
mov
lret
roll
mov
sub
add
add
push
push
push
push
call
add
addr16
and
fiaddl
xchg
push
add
mov
fsubrs
add
imul
jmp
push
lods
std
stos
outsl
add
jl
movsb
jle
mov
add
add
add
incl
add
jge
std
add
add
add
ljmp
add
nop
mov
add
stos
cmpsb
in
mov
mov
sub
dec
jne
pop
pop
push
push
push
push
push
push
push
call
add
mov
incl
mov
add
xchg
fdivrs
mov
loop
add
add
add
incl
pop
push
jecxz
fcomi
incl
aad
popf
add
push
lcall
addl
shrl
jbe
cmpsl
add
pop
incl
incl
cmp
ljmp
loopne
push
push
call
add
aam
filds
add
jge
add
call
add
andb
add
repnz
jbe
add
mov
add
roll
shl
add
shlb
add
mov
into
jle
mov
jl
push
add
call
push
filds
in
jb
add
push
mov
stc
scas
lret
sub
pop
leave
ret
push
push
call
jmp
inc
addb
fldl2e
mov
out
jge
incl
jmp
mov
add
scas
enter
pop
xchg
dec
add
pop
jle
out
add
test
add
cli
xchg
add
icebp
cmc
add
sahf
data16
sahf
les
add
pop
mov
add
jl
in
fisubl
add
out
pop
push
mov
incl
mov
sub
push
mov
push
push
push
push
push
push
push
push
push
call
pop
popa
mov
nop
js
pushl
incl
les
xchg
mov
add
add
fistl
push
incl
mov
add
pop
mov
xchg
jmp
add
out
sti
mov
ljmp
add
pop
mov
decl
mov
ljmp
xchg
decl
incl
sbb
or
add
rclb
outsb
add
add
test
mov
call
xchg
add
add
xchg
cmpsb
fdivr
out
xchg
add
add
xchg
add
add
add
add
fwait
notb
add
imul
int
cwtl
xchg
stos
xchg
gs
mov
incl
add
test
push
dec
mov
fwait
jo
add
iret
iret
add
mov
incl
in
push
push
push
push
push
push
push
call
aam
add
in
add
mov
cld
mov
jmp
popa
mov
add
jnp
add
imul
incl
mov
xchg
rorl
movl
incl
lcall
call
shlb
add
scas
cli
add
jge
mov
sub
push
push
push
push
call
mov
loope
fldenv
mov
add
xchg
incl
add
mov
mov
lcall
bound
jecxz
pop
add
add
mov
add
add
add
test
jne
add
xchg
xor
add
push
pop
add
lret
mov
mov
xlat
cli
mov
sub
push
push
mov
push
push
push
push
push
push
push
call
add
mov
add
addr16
call
add
testl
add
fs
jmp
jo
xchg
add
in
add
lods
add
in
ljmp
loope
add
add
call
je
xchg
add
lahf
incl
add
out
mov
add
add
mov
add
sbbb
mov
mov
sub
pop
pop
pop
push
push
push
push
push
push
push
call
mov
inc
push
mov
test
add
add
in
mov
add
jmp
add
out
push
jmp
add
mov
stc
add
add
push
mov
add
add
mov
add
incl
add
in
loopne
lcall
push
push
push
push
push
push
call
jl
pop
add
add
out
fsubr
data16
xchg
add
add
std
pop
add
pushl
lcall
ljmp
add
sti
cld
add
mov
incl
mov
add
dec
ja
pop
test
loope
add
sti
int3
movsl
add
int
add
dec
push
call
add
add
push
pop
clc
popa
out
jecxz
add
pop
add
add
nop
lods
je
xchg
lock
mov
mov
mov
add
add
add
stos
add
xchg
stos
add
popf
jl
add
jmp
add
jmp
out
enter
add
into
out
jne
push
add
clc
ret
push
push
push
push
push
push
push
push
call
decl
add
mov
add
add
incl
jbe
jp
add
popa
jmp
add
inc
add
add
cld
pop
mov
xchg
mov
incl
add
cmpsl
lock
add
ljmp
mov
mov
ficoml
mov
push
mov
sub
mov
add
push
push
push
push
call
je
add
call
add
add
xchg
add
gs
add
add
cmpsb
push
lds
add
mov
incl
xchg
mov
add
popa
nop
inc
mov
ja
add
jge
add
iret
lds
push
add
pushl
clc
add
add
add
mov
testl
add
mov
add
mov
lret
js
outsl
mov
sub
push
push
push
push
call
std
incl
clc
jmp
incl
lea
mov
add
push
xchg
incl
mov
push
cmc
mov
add
insb
popf
add
add
incl
jbe
mov
cmpsb
mov
push
add
lcall
add
lea
jecxz
jns
mov
push
call
loope
out
cli
imul
mov
incb
xchg
add
incl
aam
inc
add
push
push
push
push
call
jno
add
mov
add
xchg
xchg
jb
std
mov
out
lret
add
mov
fnsave
pop
clc
sarb
pushf
call
lcall
mov
rcll
add
dec
add
pushl
stos
add
movsb
mov
call
in
lcall
add
incl
mov
sub
push
push
push
push
call
push
mov
int3
in
aam
cmpsb
add
int
mov
insb
pop
shrb
add
lcall
jmp
pop
filds
lret
scas
xlat
inc
movsl
add
lock
js
scas
add
in
add
cmc
add
jmp
mov
jmp
mov
js
mov
shl
add
int3
push
add
pushf
add
jae
incl
cld
add
add
addl
test
je
push
push
push
push
push
push
push
push
call
add
add
out
std
xchg
arpl
loope
push
out
mov
rolb
push
call
jbe
jmp
incl
mov
fiadds
cli
movb
lret
popf
cli
add
mov
pop
add
lock
call
add
pop
insb
out
mov
in
add
sub
xchg
out
icebp
std
add
pushl
filds
jae
and
in
fdivr
decl
movsb
sub
add
add
add
lcall
imul
mov
data16
je
fcmovne
mov
aam
ja
push
rcrb
lret
ja
add
vpcmpgtb
mov
hlt
add
add
ljmp
add
mov
incl
in
pop
pop
pop
roll
hlt
roll
test
call
test
decl
lcall
sub
pop
pop
pop
push
ror
pop
pop
push
ror
pop
leave
push
call
add
cmpsb
add
add
popa
jmp
xchg
mov
ljmp
add
fwait
lcall
xlat
incl
cld
add
xchg
add
jp
faddl
fadds
jb
add
jo
in
incl
mov
iret
hlt
jecxz
ror
int
push
add
add
xchg
add
ljmp
outsl
lcall
pushf
push
mov
add
stc
ja
incl
inc
add
push
push
push
push
push
push
push
call
lcall
incl
pop
cmpsl
xchg
incl
mov
retw
mov
jle
ljmp
out
cmpsl
add
jne
call
xchg
je
add
enter
bound
std
jle
repnz
add
mov
mov
mov
pushf
ljmp
add
in
loopne
call
in
push
inc
pop
add
push
push
push
push
push
push
push
push
push
push
call
filds
mov
incl
xlat
push
mov
jnp
nop
add
lcall
into
incl
pushl
jns
add
ljmp
insb
rol
call
cmpsb
dec
jns
push
jl
lcall
fs
int3
xchg
add
mov
aad
stc
ret
dec
nop
mov
mov
sub
push
push
push
push
push
push
push
call
add
iret
fbstp
loope
add
clc
jmp
lahf
mov
mov
incl
mov
jb
test
jns
add
stos
scas
stc
incl
call
add
jmp
add
adcl
movsl
filds
add
add
addr16
in
ljmp
lcall
add
add
lods
mov
sub
push
push
testl
push
xor
shl
shr
pop
addl
push
push
push
push
push
call
filds
iret
add
jmp
imul
imul
iret
jbe
add
add
incl
gs
add
push
push
add
jl
cli
scas
in
add
fistpl
imul
mov
add
lahf
add
mov
sti
arpl
add
push
pop
test
add
incl
add
call
ret
cmpl
ljmp
call
mov
push
push
push
call
push
add
hlt
add
add
call
add
std
pop
sahf
add
loope
xchg
out
call
add
incl
add
nop
add
outsl
add
incl
add
cltd
mov
add
add
in
in
xchg
add
add
add
sahf
je
insb
call
in
lock
pushl
push
push
lea
pop
push
call
cmpl
jne
push
push
push
push
call
test
jecxz
add
xchg
roll
jmp
mov
iret
imul
lods
jnp
push
ljmp
add
call
in
cld
xchg
lret
call
in
mov
add
jbe
add
xchg
add
add
jmp
lods
add
leave
lret
xchg
jne
add
incl
cltd
xchg
cltd
add
lret
push
in
jne
mov
sub
pop
pop
pop
push
sub
xor
shl
not
pop
pop
push
push
push
push
push
push
push
push
push
call
mov
add
movsl
out
out
add
xchg
movsb
add
add
add
data16
insb
jae
pop
jl
call
mov
test
jae
lds
addr16
mov
jmp
jl
loopne
pop
in
add
xchg
push
lods
xchg
fadds
test
add
xchg
mov
add
add
sar
incl
pop
pop
pop
call
mov
sub
leave
ret
push
push
push
push
push
push
call
addl
test
in
push
data16
mov
incl
loopne
add
out
incl
addr16
pop
test
rolb
jmp
jmp
call
lret
add
cmc
push
push
push
call
add
incl
xchg
call
jbe
add
jns
mov
fmuls
iret
roll
push
loop
mov
sub
mov
add
push
push
push
push
push
push
push
call
rclb
add
push
fwait
out
rolb
add
cld
ret
add
nop
ljmp
fwait
int3
add
lret
rcl
popl
cli
mov
shl
call
add
add
mov
add
decl
add
add
icebp
out
imul
movsb
rorl
call
push
lea
pop
push
push
movl
push
sub
pop
push
call
push
push
pop
call
push
push
push
push
push
push
push
call
movl
mov
testb
cmc
xchg
mov
pop
loope
test
loop
mov
scas
lahf
lret
mov
add
iret
hlt
add
add
lods
xchg
add
xlat
loopne
add
mov
pop
addb
incl
into
add
lcall
add
icebp
addb
add
add
add
incl
add
addl
subl
push
push
push
push
push
push
push
call
iret
xchg
out
icebp
bound
jmp
mov
add
jmp
gs
sahf
add
push
add
lods
outsl
out
shl
mov
pop
pop
faddl
stc
roll
pop
add
jo
mov
insb
mul
popa
lock
lahf
jnp
fldl
hlt
add
add
incl
test
call
sbb
push
push
push
push
push
call
lret
pop
les
mov
add
push
add
pop
add
addr16
imulb
push
cltd
add
add
add
out
push
mov
add
mov
leave
jmp
add
insb
xchg
add
push
mov
add
call
add
aad
jb
int3
mov
sub
pop
push
add
pop
pop
push
push
push
push
push
call
add
incl
add
fbld
add
sbbl
push
in
xchg
jmp
in
add
out
fistpll
xchg
gs
mov
pop
cld
icebp
iret
pop
add
fmuls
lret
add
add
incl
pop
lcall
add
mov
mov
call
stos
fwait
dec
mov
xchg
jmp
decl
pop
push
push
push
push
push
push
push
push
call
popa
testb
add
mov
mov
ljmp
int3
push
incl
pushl
sti
add
outsl
xchg
stos
test
popf
mov
push
add
jb
popf
add
roll
add
pushl
stos
add
stc
repnz
add
add
lds
insb
add
lcall
cmp
xchg
push
push
push
call
shl
add
hlt
in
mov
add
cltd
shll
cltd
mov
mov
mov
in
cwtl
jns
fstps
lret
jecxz
incl
add
mov
addr16
add
add
mov
incb
push
ljmp
xchg
add
xchg
incl
add
call
push
add
sub
shr
pop
ret
push
ror
shl
pop
push
push
add
ror
pop
mov
push
push
push
push
push
call
call
jge
add
mov
insb
fbld
sarl
add
sahf
add
add
bound
incl
push
fdiv
add
fcompl
loop
lcall
jp
xchg
popf
xchg
cmpsb
jle
popl
jmp
add
in
xchg
fsts
mov
add
add
mov
sub
add
push
sub
pop
push
push
push
push
push
push
push
call
xchg
popf
leave
push
push
fcoms
add
mov
incl
mov
addl
pop
push
out
jl
add
add
incl
incl
out
jmp
addb
mov
incl
add
mov
lcall
add
bound
add
stos
roll
call
add
nop
cltd
stos
mov
loop
aad
add
lods
and
data16
push
push
add
push
push
dec
dec
pop
push
push
push
shr
push
xor
add
xor
shr
sub
add
inc
pop
add
pop
push
push
push
push
push
push
push
call
test
mov
add
pop
mov
lods
mov
mov
jmp
jno
incl
fistl
loopne
icebp
push
mov
incl
xchg
lahf
mov
out
jbe
mov
jecxz
stos
push
enter
cmpsb
add
fsubl
push
mov
add
aam
add
xchg
sahf
stos
mov
add
in
mov
fs
pushl
iret
imul
add
pushl
call
push
push
push
push
push
push
push
push
call
push
add
add
out
add
fildl
add
jge
mov
cli
leave
out
mov
movl
mov
leave
mov
add
xchg
mov
add
mov
jmp
mov
add
fstpl
jmp
jle
out
add
fadds
popa
mov
push
xchg
gs
sub
call
push
push
shr
push
push
pop
add
sub
sub
not
pop
pop
pushl
push
push
push
call
push
out
pusha
add
add
pusha
mov
ljmp
mov
call
lcall
leave
push
fs
add
jmp
js
add
loop
add
sti
pop
shlb
xchg
lods
mov
xlat
add
xchg
call
movsb
push
add
jbe
jo
scas
add
data16
add
jle
lods
faddl
add
lods
lret
add
add
call
call
push
push
push
xor
add
ror
add
sub
sub
pop
ror
inc
pop
push
push
push
push
call
scas
jmp
add
mov
loopne
cmc
add
add
add
jmp
add
add
add
fs
pushl
jmp
rol
loop
incl
call
add
jo
test
add
pushl
js
orl
push
add
jne
sahf
addl
push
add
pushl
call
call
push
push
call
shl
add
add
pop
call
or
xchg
js
add
add
call
add
add
pushl
push
hlt
xchg
mov
push
mov
add
out
mov
add
ljmp
hlt
std
add
add
jmp
add
iret
call
jl
add
add
decl
mov
push
push
push
push
push
push
push
push
push
call
test
incl
pushf
rolb
xchg
call
add
lea
incl
arpl
enter
repnz
mov
add
mov
testb
mov
xchg
jmp
push
jl
test
js
mov
xchg
xchg
xchg
mov
add
xchg
mov
mov
mov
mov
sub
lea
push
push
push
push
call
add
clc
xchg
icebp
stos
mov
jmp
fs
mov
js
add
add
xchg
loope
jp
push
je
stc
add
pushf
imul
call
add
add
ret
dec
push
jmp
rorb
add
add
mov
mov
incl
cmpsb
add
andl
mov
add
sti
mov
incl
incl
push
add
xchg
aam
add
loope
mov
add
jmp
pushf
leave
rcr
jno
xchg
lods
push
xorb
stos
int3
mov
add
jmp
mov
faddl
add
mov
jmp
incl
popf
in
jo
je
incl
add
test
add
cltd
mov
jnp
imul
add
mov
shr
add
push
shl
pop
mov
mov
add
push
push
push
push
push
push
push
call
add
cld
ror
mov
add
push
jno
jns
incl
pop
repnz
arpl
hlt
in
mov
loopne
lock
movb
in
add
mov
mov
jmp
test
call
mov
popa
mov
arpl
jge
notl
rclb
add
add
nop
jl
add
add
mov
sub
movzwl
push
push
push
push
push
push
call
addb
mov
call
incl
jns
xchg
rolb
aam
test
pushl
les
xchg
fcomps
out
cli
jp
iret
or
call
add
call
add
add
add
test
mov
testl
rcl
shrl
mov
add
jne
mov
call
movl
lcall
mov
sub
add
push
push
push
push
push
call
add
push
incb
add
leave
test
add
add
add
incl
add
xchg
enter
arpl
shl
add
fdivrs
incl
mov
pushl
nop
add
out
add
add
int3
stc
mov
jae
mov
add
add
pusha
filds
add
fs
cmpsb
fisubl
rolb
xchg
cld
add
arpl
test
jne
push
lea
rol
pop
mov
push
lea
dec
pop
movl
jmp
mov
push
push
push
push
push
call
xchg
lods
mov
add
jbe
add
add
stc
fldl
scas
add
pop
jl
addr16
incl
clc
add
mov
pop
push
add
add
out
incl
jne
jo
fs
pop
push
fldenv
arpl
add
in
jae
ficomps
add
mov
jbe
xchg
add
add
jmp
icebp
jae
push
add
mov
sub
mov
push
push
push
push
push
push
call
dec
add
in
add
add
jns
enter
add
add
mov
stos
add
mov
stc
roll
nop
add
aam
roll
jns
lock
pop
xchg
fiaddl
jecxz
add
add
add
push
pop
lock
pop
jge
add
fsubrl
jmp
mov
mov
sub
sub
jne
mov
push
push
push
push
push
push
call
call
mov
jmp
add
out
add
fnstenv
add
stc
add
incl
cmpsb
jnp
add
jbe
add
mov
iret
add
imul
jne
loope
in
mov
in
add
xlat
mov
incl
add
stc
add
pop
jge
cmpsb
popa
add
in
addb
imul
pop
add
xchg
mov
sub
movl
push
push
push
push
push
push
call
add
movsb
add
rcll
pop
add
fistps
fisubrs
iret
add
incl
add
flds
add
popa
ljmp
decl
mov
fildl
add
pop
stc
int3
pop
xchg
add
mov
add
loope
add
xchg
add
add
sbb
jmp
add
mov
sub
jmp
push
push
push
push
push
call
add
imul
add
fmuls
lcall
add
add
imul
add
sahf
mov
xchg
fxch
add
lods
add
fxtract
std
jmp
jmp
mov
incl
aad
mov
add
js
sti
incb
decl
mov
push
push
push
call
jno
add
mov
data16
std
cwtl
add
call
shr
loop
incl
mov
or
add
add
ljmp
lods
xchg
push
rclb
leave
add
call
add
call
lds
popa
aad
add
iret
mov
add
push
add
pop
int3
add
decl
mov
push
sub
sub
pop
sub
jne
mov
push
add
shl
rol
pop
movl
push
push
push
push
push
push
call
jmp
jge
add
lcall
add
xor
ljmp
ljmp
add
add
jne
add
add
xchg
stc
cld
in
outsl
stos
sahf
add
add
add
mov
std
divl
incl
lds
push
leave
aam
les
mov
add
decl
jmp
push
push
push
push
push
push
call
add
cmpsb
add
add
loop
out
in
in
jb
jle
jecxz
mov
add
incl
add
add
add
lods
les
add
incl
jo
incl
lret
jle
stos
jge
add
xchg
scas
aam
add
add
ja
jbe
incl
dec
std
add
out
fucomip
xchg
cli
ljmp
decl
mov
add
push
dec
pop
cmp
jne
mov
movl
push
sub
rol
sub
pop
jmp
mov
push
push
push
push
push
call
popf
testl
movsb
pusha
mov
pushf
add
jne
fstl
add
add
mov
fildll
mov
cmpsb
lret
insb
pop
add
add
push
out
fidivrl
mov
mov
incl
iret
add
call
pushl
add
sub
cmpw
jne
push
not
add
pop
mov
movl
jmp
push
call
push
jge
pop
js
imul
add
sar
nop
std
push
jb
jo
imul
addr16
incl
mov
ljmp
stos
add
and
jae
add
add
add
std
clc
add
sahf
cmpsb
add
add
incl
test
add
incl
jmp
add
add
pushl
lea
pushf
mov
lahf
outsl
mov
clc
pushl
push
push
push
push
call
test
xchg
int
pop
add
pushl
gs
decl
push
jnp
loop
roll
test
xchg
add
addr16
add
add
add
incl
mov
shrl
add
add
cmc
jno
lcall
jne
ljmp
enter
push
fs
add
pop
push
add
rol
shl
pop
mov
push
shl
pop
mov
push
push
push
push
push
push
call
add
shll
stos
mov
cmpsl
push
add
mov
shlb
cli
inc
lods
out
arpl
std
add
push
jnp
clc
clc
add
push
push
add
jmp
pop
in
cmpsl
add
add
testl
incl
pop
add
xchg
add
sub
mov
push
push
dec
push
or
inc
add
rol
shr
add
sub
not
rol
dec
pop
inc
pop
push
push
push
push
push
push
push
push
call
in
push
add
add
lock
incl
push
test
popf
add
leave
jp
jae
add
adc
jns
ljmp
push
mov
add
enter
add
shrl
scas
add
pushl
scas
movb
add
mov
xchg
cmpsl
sti
add
in
loopne
aaa
add
push
sub
dec
inc
pop
cmpl
je
push
push
shl
add
push
or
not
add
not
xor
lea
sub
lea
pop
lea
add
add
sub
pop
push
push
push
push
push
push
push
push
call
divl
jl
push
cli
test
fisttps
hlt
xchg
out
add
mov
lcall
mov
sti
mov
add
adcl
add
rolb
in
add
mov
add
iret
add
pop
push
aad
add
fadd
mov
jle
int3
add
lret
mov
incl
call
cld
add
call
jmp
jne
shll
lea
call
mov
fdivr
add
add
cld
mov
jmp
add
jne
add
xchg
add
incl
cld
pop
add
push
mov
add
test
insb
lcall
mov
pushf
pop
addr16
add
jmp
xchg
add
jns
jmp
jne
decl
lock
test
fstps
dec
lahf
arpl
call
cmpl
je
push
push
lea
inc
push
sub
add
shr
sub
xor
lea
rol
xor
pop
lea
ror
pop
push
push
push
push
push
call
push
loopne
lcall
incl
add
incl
out
jbe
dec
add
fbld
mov
mov
add
ljmp
lock
jmp
call
push
add
add
mov
incl
ja
add
incl
xchg
add
sub
push
push
rol
add
dec
shl
pop
call
push
push
push
push
push
push
push
push
push
call
shrl
jno
pop
in
add
add
sahf
incl
add
movsl
xchg
add
xchg
push
out
add
in
add
xchg
lock
enter
stos
test
insb
ficoms
incl
add
add
popf
pop
mov
jns
jno
jmp
bound
add
mov
jmp
mov
in
fdivr
incl
and
test
fstl
jno
lea
push
or
inc
add
shr
shl
sub
inc
add
ror
pop
ror
sub
pop
push
add
lea
shr
pop
push
push
inc
add
pop
call
push
shl
pop
cmpl
je
push
push
push
or
not
add
shl
sub
sub
not
add
add
pop
add
pop
push
xor
sub
shl
xor
pop
push
push
push
push
push
push
push
push
push
push
call
add
fadds
jnp
xchg
shll
stos
jo
lahf
push
lods
add
add
stc
pop
roll
mov
imul
mov
cmpsb
add
incl
mov
fiaddl
vandps
hlt
mov
fildll
add
mov
les
push
lret
mov
mov
add
shlb
cld
add
rol
add
sub
fdivr
call
push
sub
not
add
pop
cmpl
je
push
push
sub
push
xor
add
shl
shl
lea
sub
add
dec
pop
pop
push
push
call
mov
testb
add
add
pop
incl
jp
sahf
pushl
add
add
call
aam
in
add
lcall
mov
add
enter
push
push
movsb
out
add
cld
xchg
add
out
je
jae
lcall
add
cmpsb
incl
mov
sub
push
call
push
push
push
push
push
push
push
call
xchg
mov
arpl
jnp
out
add
mov
lret
add
mov
add
jno
ljmp
call
add
push
add
push
in
mov
pop
data16
add
clc
add
popf
add
add
mov
sub
cmpl
je
push
push
xor
rol
push
or
inc
add
xor
sub
pop
sub
xor
pop
push
inc
pop
push
push
add
pop
call
push
lea
ror
add
add
pop
cmpl
je
push
push
inc
xor
push
push
pop
add
inc
sub
xor
pop
add
shl
xor
inc
pop
push
pop
push
push
push
push
push
push
call
add
idivl
cltd
movl
add
popa
push
testb
test
ja
jmp
inc
add
mov
add
incl
pushf
js
add
fdivp
loopne
push
add
add
in
icebp
add
popf
add
add
sub
mov
add
add
icebp
int
add
roll
call
icebp
mov
sub
call
push
shr
xor
pop
cmpl
je
push
push
ror
lea
inc
push
or
not
add
dec
lea
shr
sub
sub
add
shr
pop
sub
add
dec
pop
push
push
push
call
add
shll
call
negb
mov
mov
pop
out
push
popf
lcall
add
roll
mov
incl
add
xchg
roll
movsl
fwait
nop
cltd
fcoms
add
add
std
cltd
fiadds
push
push
add
loopne
notb
imul
mov
sub
call
cmpl
je
push
push
ror
push
push
pop
add
rol
add
sub
sub
pop
ror
dec
pop
push
push
push
push
push
call
add
add
addr16
pushl
test
loopne
add
incl
mov
mov
ljmp
jnp
add
add
incl
icebp
add
add
pop
add
add
fiadds
add
push
out
je
lcall
add
incl
gs
xchg
mov
data16
mov
sub
push
push
not
sub
pop
call
push
xor
dec
add
pop
cmpl
je
push
push
push
sub
add
inc
not
sub
sub
add
pop
shr
add
pop
push
push
push
push
push
push
push
push
push
push
call
stos
rol
stos
add
add
add
add
incl
xchg
add
add
in
stos
insb
push
addb
add
scas
fdivrp
incl
add
mov
clc
ljmp
add
add
mov
pushl
int3
lahf
aam
push
cmpsb
add
loop
jmp
push
lcall
mov
test
test
sub
call
cmpl
jne
push
push
push
push
push
push
push
push
push
call
mov
add
push
push
jns
ret
xorl
test
clc
mov
add
pop
hlt
incl
add
fdivr
movsl
incl
add
add
filds
add
add
add
jnp
add
sar
jmp
inc
out
add
jo
add
fdivr
decl
add
add
jmp
push
dec
pop
xor
pop
push
inc
sub
ror
pop
pop
pop
pop
push
push
call
jb
add
std
loopne
jne
lcall
add
in
test
call
int
add
add
add
stos
call
stc
xchg
add
add
fcos
fildl
add
cli
jbe
jmp
popa
out
decl
movsb
je
jmp
add
mov
fsqrt
jmp
mov
icebp
add
sarb
hlt
dec
ret
push
push
xor
pop
mov
push
xor
shr
pop
add
push
shl
xor
sub
pop
cmpl
jne
push
sub
sub
shl
pop
int3
push
push
sub
xor
push
and
add
lea
inc
inc
sub
sub
xor
pop
add
lea
rol
xor
pop
pushl
push
sub
rol
pop
call
push
push
call
popa
add
push
add
incl
add
push
mul
add
dec
sahf
mov
cmp
incl
imul
add
xchg
mov
pusha
lea
mov
into
incl
mov
cmc
add
mov
pop
lods
shr
xchg
into
add
xchg
lret
add
incl
add
mov
push
xorl
mov
incl
loope
loopne
cwtl
mov
sub
push
call
push
dec
sub
add
pop
jmp
push
push
push
push
push
push
call
mov
mov
mov
mov
dec
incl
lods
filds
cli
rolb
mov
fists
add
cmpsl
xchg
roll
fsubrp
pop
xchg
mov
add
add
add
data16
add
cli
add
add
jmp
call
push
mov
test
js
mov
decl
cmpl
jne
push
push
push
push
push
push
push
call
add
clc
je
jae
add
pop
add
jmp
add
sti
jno
mov
add
stc
hlt
test
jmp
leave
incl
add
pusha
fisubs
movsl
in
shlb
mov
pop
incl
push
push
add
xchg
movb
lahf
cmpb
pushl
incl
insb
incl
add
add
xlat
jmp
add
mov
sub
ret
push
add
not
inc
pop
jmp
cmpl
je
cmpl
jne
push
push
dec
rol
push
or
inc
add
not
shr
add
sub
shl
add
add
not
pop
dec
pop
push
shl
sub
pop
pushl
call
push
not
lea
shr
pop
call
push
pop
push
push
push
ror
push
sub
add
sub
lea
add
add
pop
dec
sub
shl
sub
pop
push
rol
sub
inc
pop
pushl
call
push
push
push
push
push
push
push
push
call
decl
hlt
subb
cmc
in
add
loopne
repnz
roll
xchg
add
add
mov
add
popf
test
push
loop
test
add
rolb
scas
ljmp
fiaddl
outsl
faddl
add
cmpsb
add
arpl
fldt
clc
fstpl
add
sub
call
push
push
push
push
push
push
push
push
push
call
cld
add
push
add
incl
roll
call
insb
mov
bound
into
mov
add
add
call
loop
add
in
add
mov
mov
lcall
push
xlat
cld
add
shlb
mov
add
addr16
lods
lcall
incl
movsl
cmpsl
movsl
mov
insb
add
stc
in
add
int3
leave
add
push
xor
add
pop
pop
push
push
push
push
call
insb
ljmp
pushl
cmc
call
jmp
add
fdivs
add
into
gs
ret
add
add
pop
rorl
scas
int3
mov
test
incl
fcoms
add
add
mov
add
imul
call
rcrb
xchg
mov
icebp
add
imul
fnstenv
decl
pop
push
push
push
push
push
push
call
add
mov
add
in
jecxz
cmpsb
mov
int
cltd
add
mov
ljmp
repnz
mov
in
insb
test
add
add
pop
add
xchg
loopne
pop
int3
popl
fwait
pop
push
add
popf
call
jne
movl
jo
push
jmp
jge
test
ror
push
add
mov
jae
add
incl
lcall
leave
push
rol
sub
pop
add
push
push
push
push
push
push
push
push
call
add
test
int
add
mov
call
add
popl
int
push
andl
xchg
pop
sahf
add
decl
lds
add
add
lea
test
cmc
je
je
mov
add
ljmp
pushl
add
mov
fincstp
sti
cmpsb
add
add
shrb
incl
inc
push
push
push
push
push
push
push
push
call
add
inc
rcl
push
addb
xchg
add
lcall
add
in
jmp
aad
incl
roll
add
cltd
add
add
add
add
iret
aam
add
add
add
push
incl
jl
add
int
add
add
movsb
add
add
decl
jmp
push
not
xor
pop
cmpl
jne
push
push
sub
ror
push
push
pop
add
ror
add
shl
sub
dec
lea
pop
inc
ror
xor
pop
pushl
push
push
push
push
push
push
push
call
mov
hlt
jmp
xchg
into
pop
sahf
xchg
loope
in
xchg
arpl
jecxz
incl
add
mov
ljmp
add
add
decl
jl
roll
ret
add
mov
mov
rcrl
loope
xlat
add
pushl
add
fs
pop
movsl
xchg
xchg
pop
add
decl
call
push
add
pop
push
push
call
out
lcall
pusha
add
incl
add
add
add
mov
lcall
push
add
sti
mov
add
mov
jmp
jae
iret
cltd
fdivl
cmc
add
lock
mov
lea
out
xchg
sti
add
cld
push
loope
jae
mov
cwtl
add
push
rorb
call
push
add
inc
pop
jmp
cmpl
jne
push
shl
ror
pop
mov
push
push
push
push
push
push
push
push
push
call
cwtl
mov
roll
loope
addr16
add
clc
xchg
test
movsb
add
call
ljmp
lcall
jmp
movsl
push
jecxz
incl
mov
lret
test
add
outsl
leave
ja
int3
cltd
stc
add
mov
add
mov
call
lcall
mov
test
incl
in
jne
mov
decl
mov
jmp
push
shl
dec
not
pop
push
push
push
add
push
and
add
add
ror
sub
shl
add
pop
dec
pop
pushl
push
push
push
push
push
call
xchg
call
popf
ljmp
jmpw
hlt
add
lret
add
add
cmpsb
incl
add
add
add
add
ljmp
xchg
stos
fdivl
jne
cmc
out
push
fs
pop
add
incl
out
xchg
add
in
stos
mov
mov
incb
jo
in
mov
jns
mov
pushl
fidivs
add
decl
call
call
push
push
ror
rol
add
push
sub
add
sub
dec
add
inc
sub
sub
shr
lea
pop
add
inc
pop
push
dec
dec
pop
pushl
push
not
xor
pop
call
call
push
push
push
sub
add
shr
dec
shl
not
sub
xor
dec
pop
lea
pop
push
push
call
add
incl
add
add
out
add
incl
ret
xchg
mov
pushl
cwtl
incl
jmp
add
cmpsl
fsub
roll
mov
xlat
test
add
add
testl
hlt
ret
mov
les
push
add
jp
incl
test
cld
insb
testl
out
call
nop
jmp
sub
pushl
call
push
push
push
call
jmp
add
add
xchg
add
fwait
add
roll
stc
mov
mov
lret
addr16
jmp
cmc
mov
cmpsb
mov
add
add
insb
aad
add
add
jge
movsl
ljmp
movsb
xchg
add
add
add
out
mov
add
mov
sub
call
push
push
rol
push
sub
add
not
sub
dec
sub
pop
rol
pop
push
lea
rol
pop
pushl
push
dec
pop
call
push
shr
inc
pop
call
push
push
lea
dec
add
xor
push
or
inc
add
sub
sub
xor
inc
pop
shr
sub
pop
push
call
loope
iret
lahf
add
push
in
add
add
arpl
add
into
pop
inc
lea
mov
les
push
jns
mov
mov
add
xchg
fcoms
ja
add
add
fnstenv
mov
add
lahf
add
hlt
out
mov
mov
add
xchg
imul
out
insb
outsl
out
xchg
pushl
call
call
push
push
not
sub
push
and
add
not
sub
sub
sub
lea
rol
pop
sub
pop
push
dec
shl
sub
pop
pushl
call
call
push
push
rol
inc
push
sub
add
not
sub
add
sub
not
dec
pop
inc
dec
pop
push
push
push
push
push
push
push
push
push
call
add
xlat
add
incl
add
jmp
mov
cltd
int
mov
xchg
incl
push
ljmp
dec
mov
mov
cmpsb
popf
add
iret
add
popa
incl
fdivr
push
rolb
lcall
call
clc
in
jmp
incl
pushl
push
sub
pop
call
push
add
pop
call
push
push
shl
ror
push
xor
add
add
sub
shr
add
pop
shl
add
pop
push
xor
sub
pop
pushl
push
add
pop
call
call
push
push
sub
add
push
or
not
add
shr
dec
sub
shr
inc
xor
pop
ror
not
pop
push
push
push
push
call
add
lcall
add
lcall
xchg
add
stos
xchg
jnp
mov
js
incl
iret
push
mov
in
pop
popf
lcall
pop
jmp
ljmp
fistl
push
add
lcall
js
mov
incl
mov
sub
pushl
push
inc
shr
pop
call
push
push
push
push
push
push
push
push
push
call
rolb
mov
cmpsb
enter
iret
aam
stos
test
push
add
cmpsl
fiadds
mov
pop
out
add
add
decl
add
cmp
pop
outsl
movsl
stc
icebp
add
mov
rolb
jmp
movsb
iret
add
add
mov
pushl
incl
decl
call
mov
mov
arpl
add
loop
add
idivb
loope
pushl
mov
pop
cli
testb
xchg
outsl
pop
mov
call
lcall
add
incl
pop
lock
into
lods
lcall
jbe
in
xchg
aam
add
pusha
fildl
add
incl
mov
imul
incl
shrb
pop
add
push
lea
shr
rol
dec
push
sub
add
not
add
sub
shl
lea
xor
rol
pop
lea
sub
sub
pop
push
pop
pushl
call
push
shl
dec
not
pop
push
push
dec
lea
xor
pop
call
push
push
lea
ror
push
xor
add
dec
inc
sub
sub
ror
pop
pop
pushl
push
lea
pop
call
call
push
push
add
shr
add
push
xor
add
dec
shl
sub
add
shl
pop
sub
pop
push
push
push
call
jge
add
stos
stos
lcall
cli
xchg
add
sar
jbe
lret
addl
call
imul
push
aam
fildl
add
out
add
fsubp
stos
add
add
incl
xchg
sti
add
xchg
jne
incl
pop
xchg
fucomi
add
in
lock
pushl
push
not
inc
shl
pop
call
push
push
push
push
push
push
call
fisubrs
je
call
incb
jmp
add
add
jp
mov
mov
stos
add
pushl
call
shl
add
stc
lods
add
incl
mov
mov
add
arpl
repnz
xchg
sbbb
add
push
aad
add
in
in
call
push
push
sub
xor
push
sub
add
shl
sub
sub
add
pop
add
pop
push
shr
add
pop
pushl
push
push
push
push
push
push
push
push
push
call
testl
pushf
add
incl
bound
jmp
movsl
mov
add
push
adcb
mov
js
pop
in
imul
pop
jle
mov
stos
jno
int3
push
xchg
mov
jmp
pop
add
add
pushl
jno
addl
add
call
iret
push
add
fadds
aad
pop
sbbb
decl
call
push
push
push
push
push
push
call
iret
add
add
push
addl
xchg
out
loop
add
mov
cld
jns
bound
lcall
add
xor
mov
incl
addb
mov
add
shrb
add
cwtl
jae
mov
scas
repnz
fistpl
lcall
fnsave
dec
add
shll
mov
add
pop
rorl
sub
call
lea
push
push
push
and
add
shr
sub
dec
pop
sub
pop
push
shr
add
pop
pushl
call
push
push
call
jae
int3
in
sahf
faddl
push
add
add
add
push
add
jmp
incl
mov
xchg
add
add
jle
mov
fs
ja
mov
push
pop
lcall
lahf
in
add
add
decl
add
call
add
incl
pop
xchg
add
mov
add
incl
call
push
push
lea
sub
shl
push
or
inc
add
dec
ror
xor
sub
sub
dec
sub
pop
add
pop
pushl
push
push
push
push
push
push
push
push
call
xchg
mov
int3
enter
mov
xchg
push
mov
add
add
add
mov
mov
leave
add
roll
add
roll
in
jb
int3
xchg
nop
bound
mov
lcall
push
popf
xchg
xchg
fildl
add
fiaddl
jae
sahf
add
add
cmc
cwtl
jae
add
mov
add
add
fsubr
jae
add
call
mov
push
push
lea
sub
push
xor
add
add
sub
shr
dec
ror
pop
add
not
add
pop
push
push
push
call
add
add
mov
ja
mov
pop
lret
ret
add
add
add
dec
add
sahf
incl
mov
ret
xchg
push
add
ffree
cmpsb
mov
popa
xchg
loopne
add
out
push
mov
add
mov
faddl
mov
outsl
mov
stos
push
add
lock
ja
decl
js
mov
sub
pushl
call
push
rol
shr
dec
pop
push
push
not
pop
call
push
push
lea
add
add
push
or
not
add
rol
not
sub
sub
shl
rol
pop
sub
pop
pushl
push
not
not
pop
call
push
dec
pop
push
push
push
push
call
mov
cwtl
roll
add
loopne
add
add
popf
call
add
push
add
jmp
pop
xchg
decl
repnz
out
xchg
mov
data16
movsb
mov
add
pusha
js
mov
add
mov
cmc
into
add
add
pop
mov
add
push
iret
nop
add
add
add
add
mov
sub
pushl
call
push
push
shr
shr
add
push
push
pop
add
xor
ror
sub
pop
ror
pop
push
push
push
push
push
push
push
push
push
call
nop
loope
fildl
pushl
add
add
mov
mov
xchg
pop
lods
cld
add
mov
add
mov
call
fidivl
jmp
in
add
in
iret
loop
jmp
loop
push
jnp
xchg
mov
add
fs
movsb
lock
add
mov
jne
jle
push
ljmp
mov
scas
je
int
mov
in
fdivr
pushl
call
push
push
dec
xor
shl
push
push
pop
add
sub
shl
sub
sub
pop
not
pop
push
push
push
call
push
jmp
add
pop
cmp
incl
add
jmp
incl
jno
add
lret
lret
add
movsl
pop
add
sti
fucom
js
stc
push
mov
incl
mov
mov
repnz
mov
jae
add
add
jmp
push
in
push
mov
push
add
mov
cltd
add
sub
push
push
push
push
push
push
push
call
incl
xchg
out
add
add
fs
add
add
lcall
xchg
into
testl
jae
jne
mov
incl
loope
je
push
cmpsl
imul
cwtl
add
sar
pop
sbbl
call
add
add
stc
insb
mov
sub
call
push
push
lea
sub
push
push
pop
add
shl
sub
add
pop
xor
sub
lea
pop
pushl
push
pop
call
mov
lea
push
push
push
push
push
push
push
push
call
imul
jle
jb
je
add
fstpt
ljmp
add
mov
add
add
out
mov
dec
repnz
iret
add
call
add
incl
mov
add
lcall
sar
add
mov
rcr
add
call
add
add
mov
sub
lea
push
push
ror
pop
push
push
push
push
call
sahf
cmpsl
lahf
cmpsb
jae
jmp
add
jns
lahf
add
lret
pushl
push
leave
xchg
mov
incl
int
incl
incl
push
jecxz
stos
add
incl
pop
cmpsl
rolb
xlat
fsts
xor
mov
incl
incl
std
clc
mov
mov
in
hlt
push
push
push
push
push
push
push
push
push
push
push
call
outsl
cmpsl
mov
popa
dec
ja
xchg
and
jmp
pop
add
ljmp
pushl
movb
stos
mov
lcall
add
arpl
mov
push
mov
mov
xchg
shr
clc
add
add
ljmp
add
inc
add
add
outsl
decl
push
add
add
sub
push
push
push
push
push
push
call
push
push
add
push
addl
lea
popl
add
mov
into
add
jmp
mov
mov
add
add
imul
call
loope
mov
add
mov
jnp
add
add
mov
les
stc
int
mov
sub
push
push
pushl
push
push
push
push
push
push
push
call
ja
add
add
lcall
mov
add
ja
ljmp
push
into
stc
shrb
add
add
fwait
mov
add
movsb
jno
rcrb
lcall
mov
fcmovnbe
jae
pushl
mov
loop
add
mov
into
bound
decl
push
call
push
push
dec
sub
sub
push
push
pop
add
shl
not
sub
xor
pop
not
inc
pop
push
push
push
push
push
push
push
call
fs
cmpsb
xchg
pop
data16
mov
incl
lds
add
out
add
fistpl
call
add
popf
add
add
popa
pusha
sbbb
jmp
mov
add
jno
add
add
incl
incl
scas
lret
add
decl
mov
add
fisubs
in
loopne
jne
call
call
push
rol
pop
mov
pop
push
push
push
call
movsl
mov
ja
test
xchg
add
add
add
clc
jmp
add
ret
add
add
mov
mov
inc
push
incl
add
cli
add
out
incl
pop
add
add
in
jb
loop
pushl
lcall
mov
add
pushl
lcall
sub
dec
jne
jmp
push
push
push
push
push
push
push
call
stos
cmpsl
cmpsb
stos
flds
fldl
add
incl
hlt
mov
incl
push
pop
jmp
add
add
add
movl
dec
mov
mov
mov
add
lcall
add
scas
add
gs
mov
mov
mov
sti
add
mov
add
add
incl
icebp
add
decl
call
jmp
call
push
push
sub
push
or
inc
add
not
lea
inc
sub
dec
pop
lea
rol
xor
add
pop
push
dec
add
sub
pop
pushl
push
push
push
call
js
add
jge
lahf
test
xchg
xchg
mov
push
fldt
pop
add
enter
cli
insb
loopne
mov
data16
add
add
mov
add
test
add
cmpsb
pusha
add
call
add
call
push
aam
add
add
jl
incl
call
push
shl
inc
pop
push
push
push
call
jmp
js
mov
add
aam
loop
mov
pop
add
cli
add
add
mov
add
mov
add
cmp
incl
add
jne
add
cwtl
add
push
xchg
push
mov
add
pop
add
mov
cwtl
add
xchg
fdivrp
incl
decl
call
push
lea
pop
mov
lea
push
push
xor
push
push
pop
add
not
shr
shl
sub
add
sub
not
pop
add
add
not
pop
push
push
push
push
push
push
push
push
push
call
add
jns
roll
stos
add
cmp
cwtl
pop
test
push
add
incl
out
add
mov
mov
lock
gs
aam
fsubl
add
orl
add
fisttpl
lret
pop
incl
je
mov
push
loope
mov
sub
pushl
call
lea
push
ror
inc
inc
pop
push
push
push
push
push
push
push
push
call
insb
lods
rcll
call
pop
lods
or
in
push
mov
push
add
vdivsd
jge
mov
lret
mov
push
add
lock
andb
xlat
iret
add
add
pop
int3
bound
incl
fstps
incl
add
repnz
iret
into
stos
mov
sub
pushl
push
push
add
dec
ror
add
push
xor
add
add
sub
add
add
lea
pop
sub
xor
inc
dec
pop
push
push
push
call
arpl
add
push
hlt
mov
jb
incl
std
ja
add
mov
sti
cmpsb
add
bound
in
sti
pop
add
icebp
cltd
call
fs
imull
popa
enter
pop
push
fcom
scas
add
push
sti
pusha
incb
add
cmpl
sti
cmpsb
mov
incl
call
push
push
push
sub
add
not
sub
shl
shl
rol
pop
add
lea
shl
pop
push
ror
add
sub
not
pop
pushl
push
push
push
push
push
push
push
push
call
xchg
add
hlt
pop
pusha
leave
out
incl
add
mov
sar
lcall
lods
incb
add
sahf
xlat
add
add
test
lret
push
mov
add
fcomip
add
add
add
fcoml
stc
mov
add
push
scas
sbbl
jmp
sub
call
push
push
call
add
push
jp
popfw
add
add
jecxz
add
add
shll
pop
stc
add
cmpsl
add
add
call
dec
out
push
push
add
add
incl
add
pop
incl
mov
mov
mov
fiaddl
mov
pop
in
mov
incl
ljmp
call
push
push
dec
push
push
pop
add
inc
sub
sub
not
shr
pop
not
inc
ror
pop
push
push
push
push
push
push
call
add
mov
mov
mov
jae
jle
add
rcrl
add
add
incl
jmp
scas
decl
js
mov
add
stc
add
aad
scas
incl
add
mov
clc
push
stc
push
std
scas
sahf
arpl
loope
add
add
mov
sub
pushl
push
add
shr
pop
call
call
jmp
push
push
call
add
into
scas
out
cwtl
add
loopne
mov
add
lds
ljmp
sar
incl
add
add
in
iret
add
xchg
loope
add
add
mov
test
fldenv
pushf
add
mov
pusha
push
add
movsb
pop
add
jmp
fst
add
mov
in
hlt
jmp
add
add
mov
push
push
push
push
push
call
les
fstpl
add
incl
popf
jae
mov
fstl
push
fwait
lea
cli
fdiv
add
add
push
jle
jmp
fadds
mov
into
leave
pop
add
arpl
incl
aam
outsl
xchg
mov
jge
mov
mov
js
add
icebp
add
jmp
push
push
add
lea
push
sub
add
ror
sub
lea
inc
pop
ror
pop
push
not
pop
pushl
push
dec
pop
call
push
call
push
push
inc
inc
push
sub
add
ror
sub
not
sub
pop
shl
rol
pop
push
add
xor
shr
pop
pushl
push
push
call
add
pushl
incl
add
fcos
call
fdiv
addb
mov
add
sar
jmp
pop
mov
mov
mov
mov
add
call
in
pushl
mov
ljmp
fiaddl
xlat
add
add
pop
out
add
mov
mov
sub
call
push
call
push
shr
add
pop
leave
add
push
push
push
push
push
push
call
pop
scas
add
add
gs
fcmovnbe
jmp
mov
cli
add
ror
in
pop
push
add
incl
popl
lcall
shll
jmp
mov
lods
add
pushl
rolb
push
add
incl
push
add
jecxz
call
mov
sub
pop
pop
pop
push
rol
pop
pop
leave
push
shl
add
sub
pop
add
ret
push
add
add
not
pop
leave
ret
push
push
push
push
push
push
push
push
call
jb
incl
sarb
add
incl
aam
out
jle
add
jmp
sbb
ja
jmp
add
call
add
cmpsl
fwait
add
incl
scas
push
xlat
push
add
add
mov
jmp
fistl
add
mov
jo
jns
add
push
mov
add
push
jno
add
decl
call
dec
pop
mov
push
push
push
push
push
push
push
push
push
call
test
add
mov
jmp
call
les
popa
fiaddl
add
inc
xchg
shll
je
mov
cld
popf
mov
ljmp
add
pushf
fnsave
mov
ja
lcall
jle
add
scas
xchg
rcl
fs
pop
push
add
jnp
jbe
xchg
rcrb
jmp
fucomp
enter
add
mov
sub
cmpl
jne
push
push
call
xlat
mov
add
js
test
clc
loop
xchg
fdivr
push
add
mov
add
mov
lea
rol
add
fwait
jl
add
stos
cmpsl
jns
jno
jne
add
pushl
ljmp
mov
add
aam
out
movsb
decl
decl
or
add
mov
push
dec
sub
shl
pop
and
xor
push
push
push
push
push
call
add
popa
enter
into
xlat
jmp
cld
add
out
add
hlt
icebp
in
pushl
xorl
push
add
push
add
add
incl
add
ljmp
je
icebp
add
push
popa
arpl
add
add
test
add
bound
movsb
add
add
jno
mov
sub
xor
push
ror
pop
add
xor
push
push
push
push
push
push
push
push
call
insb
add
add
add
lret
add
fwait
mov
mov
je
jb
jmp
add
into
jmp
mov
out
incl
stc
add
pop
mov
hlt
mov
add
jns
incl
scas
jp
popa
call
add
add
sti
iret
add
cmpsl
les
push
ljmp
lcall
incl
jmp
push
shr
pop
jmp
sub
pushl
push
push
push
push
push
push
push
push
push
call
mov
add
in
inc
out
aam
mov
pushl
lahf
popa
xchg
rolb
add
xchg
add
js
in
mov
jnp
loopne
cmpsl
imul
add
add
add
mov
mov
incl
movl
pushl
add
jmp
lcall
incl
sub
push
push
push
push
push
call
add
scas
pop
add
aad
incl
pushf
stos
lret
pushl
sti
add
movsl
subb
jns
incl
incl
add
ja
add
add
jmp
add
incl
xchg
xchg
mov
xlat
fs
lcall
imul
mov
push
lcall
mov
add
push
test
mov
out
add
mov
sub
sub
cmp
jne
push
push
push
push
push
push
push
push
call
les
dec
add
mov
out
xchg
incl
stc
lods
add
scas
add
add
movl
push
add
push
add
mov
incl
mov
lret
divl
add
jl
jnp
add
add
test
into
movsb
in
add
jmp
loop
incl
mov
mov
sub
mov
push
sub
shl
add
pop
lea
sub
push
xor
pop
mov
push
push
push
push
push
push
push
push
push
call
mov
add
rorb
add
mov
incl
jecxz
mov
bound
add
sahf
js
incl
stos
add
stos
xchg
jmp
add
out
dec
call
add
pop
insb
mov
jbe
pop
add
add
stos
loop
add
call
mov
add
nop
xor
pop
imul
in
incl
inc
jmp
jo
add
push
dec
shr
pop
sub
pushl
push
push
push
push
push
push
push
call
xlat
add
add
roll
xchg
jl
cld
fidivl
pop
iret
jge
add
div
mov
add
mov
jno
add
mov
lret
jp
push
add
fidivrs
fcoml
add
jo
rolb
ret
push
mov
repnz
mov
add
inc
add
decl
lcall
jmp
inc
add
push
push
push
push
call
add
clc
test
add
clc
mov
mov
add
pop
xchg
popa
aam
add
insb
cmpsl
cmp
call
xchg
incl
incl
jge
add
jl
jnp
push
enter
add
push
add
divl
fiaddl
jge
add
pushl
sub
and
sub
cmp
jne
push
push
push
push
push
call
fsubr
fldl
mov
jo
add
test
cmpsl
jns
je
xchg
outsl
ror
add
add
mov
cmpsb
cwtl
add
jmp
xlat
add
cmpb
add
ljmp
jb
xchg
add
cmp
incl
add
pusha
pusha
jecxz
mov
sub
leave
ret
push
sub
add
pop
push
push
xor
lea
add
pop
mov
add
push
pop
push
push
push
push
push
push
push
push
call
stos
add
add
add
add
add
shl
roll
cmpsb
repnz
lods
aam
add
fadds
add
add
jae
shr
add
in
xchg
decl
aad
cli
fld
add
incl
out
add
scas
mov
enter
cmp
add
incl
add
jge
fiadds
add
cwtl
jno
add
call
add
call
push
push
shr
pop
mov
push
shr
inc
pop
lea
sub
push
push
push
call
iret
mov
pushl
add
mov
in
cwtl
push
std
mov
out
add
lock
lcall
lcall
add
ljmp
testl
jns
movsl
cmc
cli
cmc
xchg
pop
add
addl
mov
call
loop
jl
cmpsb
lret
push
jno
in
xchg
add
mov
sub
mov
shr
push
push
push
call
rclb
add
lock
ret
scas
mov
out
add
jp
incl
xorl
cltd
mov
jb
incl
mov
xchg
int3
jne
call
incl
add
mov
int
pushl
mov
in
stos
mov
xchg
popa
ret
cltd
test
add
xchg
add
add
push
push
push
push
push
push
push
call
add
lcall
fs
add
xchg
stos
add
ljmp
incl
les
add
add
lods
jnp
add
call
iret
push
je
incb
add
incl
add
je
lods
bnd
imul
faddl
add
mov
pushl
add
jnp
flds
add
mov
push
push
push
call
mov
mov
cwtl
imul
add
sbb
add
cmpsl
lock
ljmp
jmp
add
rolb
add
decl
loop
imul
mov
incl
mov
mov
cmpsl
add
lcall
add
jne
add
loop
rcl
mov
sub
add
mov
push
shl
pop
add
push
push
push
push
push
push
push
push
push
call
fsubs
add
push
pop
rcrl
add
testb
addr16
test
pushf
cltd
jns
incl
decl
pushf
test
je
add
dec
add
dec
add
jmp
xorl
mov
rolb
jb
out
add
jnp
mov
decl
pushl
testb
sub
inc
pop
and
push
inc
pop
call
add
push
push
push
push
push
call
loop
add
incl
mov
add
jnp
add
mov
loop
movb
push
lahf
sahf
stos
addl
incl
test
movl
out
decl
cmpsb
add
jmp
mov
ret
xchg
mov
add
call
movsb
jp
loope
add
add
add
jmp
call
add
faddl
add
decl
cmp
je
add
cmpl
jne
push
lea
pop
xor
pop
pop
push
push
push
push
push
call
xacquire
jp
add
add
add
pop
test
lods
scas
add
fwait
pop
loope
insb
fldcw
rol
mov
add
add
sahf
add
out
add
add
lret
fldenvs
lahf
add
ljmp
mov
decl
add
aam
cli
rolb
pop
add
pushl
mov
sub
pop
push
push
push
call
add
aad
pop
incl
jbe
out
jo
je
jns
add
jl
fnstenv
lock
clc
lock
cmpsl
cld
mov
add
pusha
pop
fs
jne
jb
add
mov
rcr
lds
cld
rolb
xchg
xchg
sbb
xchg
lock
mov
add
mov
fwait
scas
loope
scas
fiadds
jnp
stc
add
lcall
leave
push
sub
sub
pop
ret
push
push
push
push
push
push
push
push
push
call
loop
add
add
out
add
add
mov
lea
sti
push
in
add
incl
bound
stos
add
jo
add
movsl
add
mov
lcall
lcall
add
popf
lret
iret
xlat
add
lret
bound
cli
push
push
mov
mov
sub
mov
add
push
push
push
push
push
push
push
push
call
pop
add
ret
loopne
test
jmpw
jp
pushf
fldenv
je
add
add
fisubs
add
add
stos
add
xchg
jmp
xchg
mov
lds
add
decb
lahf
add
incl
stos
aad
in
mov
movsb
lret
push
leavew
mov
add
call
add
inc
pop
push
pop
pop
push
shl
add
sub
pop
mov
push
call
push
call
mov
add
push
jl
jmp
add
add
lock
pop
add
add
incl
decl
scas
lret
mov
add
fidivrl
lahf
stos
xchg
sahf
ret
int
add
add
mov
mov
ljmp
push
incl
xorb
incl
pop
lcall
fiadds
out
add
mov
sub
xor
pop
pop
push
call
lcall
mov
imul
loop
add
mov
add
lea
incl
add
pushl
incl
fsincos
rol
testl
jmp
jl
dec
mov
add
add
incl
mov
clc
push
add
pop
add
fdivrp
jmp
pop
cmpsb
add
fnstcw
xchg
stos
add
add
lcall
pop
push
push
push
push
push
push
push
push
call
enter
incl
fs
add
jae
add
mov
lods
mov
add
add
add
lcall
add
lahf
jno
add
xor
mov
movsb
lahf
push
pushl
add
add
fnstsw
shl
add
rcr
xchg
add
pop
xchg
jmp
incl
or
push
add
xor
pop
push
push
push
push
call
leave
into
incl
push
arpl
incl
jle
jmp
add
decl
add
add
push
pop
call
mov
add
incl
loop
int
incl
add
jmp
rclb
add
bound
pop
movsb
add
in
add
sub
mov
add
push
push
push
push
push
push
push
push
push
push
call
mov
ja
add
in
add
ja
out
mov
mov
imul
in
addb
mov
mov
lods
jns
neg
push
add
jmp
cli
add
add
lea
call
add
neg
xchg
test
loop
xchg
std
roll
push
loopne
push
incl
cld
mov
mov
sub
push
push
push
shl
xor
pop
push
mov
push
ror
shr
pop
push
pop
push
call
add
mov
add
in
popa
add
add
fidivs
lret
add
int
add
jmp
les
add
jmp
iret
jp
add
add
movl
popa
imul
test
fdiv
pushf
add
out
jnp
incl
xlat
mov
mov
jnp
mov
mov
sub
lea
sub
mov
push
push
push
push
push
push
push
push
call
xchg
add
add
pop
gs
pushl
jnp
loop
incl
jnp
pop
add
add
incl
jle
mov
jnp
mov
xchg
jne
jge
add
lcall
lret
jmp
rcl
add
add
add
mov
lods
push
mov
out
mov
fdivr
inc
ljmp
push
call
xchg
mov
add
add
add
out
jnp
mov
cwtl
add
clc
test
incl
mov
scas
xchg
pushl
lods
test
stc
in
add
arpl
fadds
lahf
add
xchg
mov
mov
add
dec
loopne
aam
movsb
loope
je
in
xchg
incl
jl
push
out
add
incl
incl
fisubrl
daa
inc
add
push
push
call
add
add
add
imul
mov
mov
outsl
cmp
xchg
add
out
ja
mov
pop
rcrb
pushl
mov
add
mov
hlt
push
mov
clc
add
incl
ljmp
lods
add
call
push
add
scas
iret
mov
add
add
decl
pushl
push
sub
rol
rol
ror
pop
popl
mov
push
inc
pop
add
push
shl
inc
shl
pop
xor
lea
mov
push
sub
sub
pop
add
xor
push
push
push
push
push
push
push
push
push
call
scas
test
push
jmp
out
mov
add
movsl
mov
add
add
mov
mov
add
lcall
add
xlat
mov
add
push
fwait
add
aam
jno
cmpsb
add
test
in
add
pop
add
mov
add
mov
ret
add
in
push
mov
add
decl
add
incl
call
push
push
push
push
push
push
call
add
loop
sahf
xchg
pushf
sti
cmc
mov
lock
xlat
sahf
lret
incl
jae
test
incl
xchg
ljmp
add
pop
add
incl
lret
add
cwtl
lea
add
ret
in
and
push
add
pop
ja
cmpsb
movsl
push
push
jl
add
mov
mov
incl
mov
iret
ja
repnz
je
mov
mov
sub
add
push
push
push
push
push
call
add
push
mov
mov
sar
call
mov
hlt
test
cmp
add
bound
xchg
jb
jl
jge
add
sti
repnz
push
push
negb
addb
add
inc
lods
add
incl
incl
je
aam
add
mov
sub
nop
nop
cmp
je
push
sub
dec
rol
dec
pop
nop
push
push
push
push
push
push
call
jb
add
add
aam
jmp
mov
imul
add
mov
add
add
lret
scas
lcall
mov
mov
jle
arpl
add
add
in
in
fs
add
add
call
xchg
mov
jb
addr16
stos
movsl
ret
incl
mov
mov
push
push
call
outsl
jle
add
add
add
out
add
pusha
sarl
addl
add
mov
ljmp
lcall
dec
faddl
add
add
fucomp
add
test
add
arpl
add
cli
add
out
add
jmp
popl
popf
mov
xchg
int
popf
out
add
ja
add
incl
mov
sub
inc
nop
push
push
push
push
push
call
add
ljmp
imul
xchg
xchg
add
test
lds
cli
icebp
jo
imul
add
mov
add
push
scas
add
pop
add
ret
add
jmp
in
push
mov
jmp
add
rolb
jmp
call
std
add
cld
add
mov
add
shll
add
mov
add
call
addb
sub
pop
xor
jmp
mov
push
push
push
push
push
push
call
add
jge
ffreep
addb
call
hlt
out
decl
add
mov
mov
movsl
fdivrp
add
inc
mov
movsb
mov
add
roll
cltd
testb
xchg
mov
sarl
xlat
add
pusha
incl
add
add
add
movsl
xchg
xchg
add
aam
andb
decl
incl
rorl
mov
jb
add
rol
pop
mov
push
push
push
push
push
push
call
loope
sahf
pop
mov
push
cltd
add
jl
add
enter
cmc
add
jmp
cli
mov
add
jno
lret
lcall
add
pushf
scas
mov
lcall
je
loopne
push
imul
ljmp
iret
jge
xchg
incl
movsb
test
in
cli
insb
mov
fsubrl
add
pop
fisttps
add
push
pop
mov
xor
push
lea
ror
pop
xor
push
lea
pop
shl
xor
push
ror
shl
shr
sub
pop
shl
xor
shl
push
push
push
push
push
push
push
push
push
call
lods
jne
stos
add
cmc
add
mov
nop
add
pop
add
push
add
inc
call
add
pop
scas
add
fcompl
pushl
js
add
les
fwait
xchg
div
jmp
cld
lahf
jp
push
outsl
jecxz
add
incl
fmul
add
pushl
jnp
mov
push
shll
incl
nop
push
push
push
push
push
call
add
mov
rolb
add
mov
lcall
add
aam
add
pop
inc
add
mov
add
add
lret
inc
add
xchg
jecxz
add
mov
lock
mov
pop
clc
add
enter
jae
jmp
push
jmp
mov
incl
jp
scas
add
call
rcll
jecxz
add
pop
push
rol
pop
pop
push
not
pop
pop
pop
push
shl
add
xor
pop
leave
ret
push
shl
shl
pop
push
push
push
push
push
push
push
call
pop
mov
mov
clc
mov
xchg
xchg
incl
stc
roll
add
incl
sahf
jl
movsb
fidivl
xlat
push
mov
push
xorb
add
imul
int3
add
add
ljmp
jmp
incl
nop
add
push
mov
jmp
incl
decl
push
push
push
not
pop
push
mov
mov
push
push
push
push
push
call
push
dec
js
add
call
add
stos
rcrl
add
notb
out
add
call
outsl
jl
add
cmpsb
mov
mov
shll
push
jns
ljmp
mov
cld
lret
xchg
orb
incl
xchg
add
filds
mov
sub
mov
push
push
push
push
push
push
push
push
call
mul
cmpsl
add
cli
out
xchg
jp
pushl
add
stos
lcall
add
jge
dec
add
add
imul
test
jmp
lods
add
add
pushf
add
jb
mov
testb
add
cmpsl
rolb
fdivrs
call
add
movsb
jae
mov
sub
test
je
mov
test
je
push
push
push
push
push
push
push
push
push
call
fbstp
arpl
push
shrl
out
add
mov
push
push
add
imul
xchg
mov
jl
pop
mov
add
add
add
ljmp
mov
add
push
push
mov
add
xchg
incl
mov
add
mov
cmpl
add
lock
outsl
xchg
add
mov
je
incl
push
lea
rol
add
sub
pop
mov
mov
push
push
push
push
push
push
push
push
push
call
faddl
mov
cwtl
add
jns
add
shll
mov
xchg
cld
add
add
incl
int3
loope
add
add
add
mov
jbe
add
push
lods
mov
test
pusha
xchg
push
add
insb
in
imul
decl
add
js
in
jb
incl
popa
mov
sub
inc
cmp
je
push
push
push
push
push
push
push
call
jns
arpl
add
fsts
mov
pushl
mov
les
popf
jge
test
push
popa
push
stos
mov
xchg
add
rcrb
add
add
out
mov
mov
movl
add
add
add
sar
repnz
clc
clc
popa
cli
popa
jbe
incl
je
push
xor
pop
mov
inc
cmp
je
push
push
push
push
push
push
push
call
outsl
add
mov
ja
add
add
add
in
addr16
add
ljmp
add
lret
cli
stc
jbe
mov
fcos
incl
outsl
add
in
scas
push
arpl
add
add
add
mov
stos
jno
testb
stc
mov
add
call
data16
jmp
incl
mov
flds
in
add
stos
bound
incl
pushl
rcrb
loopne
xor
shr
pop
pop
pop
push
inc
shr
add
pop
pop
leave
ret
push
sub
sub
add
pop
mov
inc
push
not
pop
cmp
jne
push
add
ror
ror
pop
lea
mov
test
je
push
lea
pop
mov
add
cmp
jne
push
push
call
add
add
repnz
incl
jo
incl
incl
fildl
mov
add
add
idiv
incl
jmp
add
add
add
jle
incb
call
add
jp
aam
pop
xchg
mov
mov
ljmp
add
jb
ljmp
rcrb
incl
add
push
push
push
push
push
push
push
call
xor
mov
jno
sbb
push
add
mov
jmp
add
mov
call
testl
pushl
mov
fs
ljmp
push
in
iret
into
add
cwtl
mov
nop
lea
push
jmp
add
incl
rcrb
insb
mov
js
add
xchg
add
decl
test
je
push
push
push
push
push
push
call
add
jmp
aad
pop
fisubl
add
xchg
incl
adc
incl
jb
add
add
loope
ljmp
lods
jmp
sti
add
ljmp
xorb
pop
add
mov
imul
call
fs
cmc
add
jmp
leave
jno
add
pop
add
incl
test
xchg
xchg
iret
mov
add
mov
push
add
mov
push
push
push
push
call
xorb
jae
add
mov
mov
add
lahf
mov
int3
mov
pop
jge
call
fs
push
hlt
jecxz
add
icebp
add
incl
insb
fsubl
ljmp
jmp
add
mov
pusha
mov
orb
mov
mov
jmp
mov
sub
add
cmp
je
jmp
push
push
push
push
call
test
add
call
add
mov
cmp
call
xchg
add
lods
in
in
ja
gs
ret
call
movsb
xchg
testl
leave
add
call
fcos
call
mov
jmp
pushl
lcall
add
xchg
mov
incl
pushl
rcrb
sbb
push
inc
add
cs
add
sbb
call
cli
mov
js
add
incl
add
add
sbb
mov
call
add
lcall
mov
fnstsw
lcall
xchg
jo
add
add
fbstp
add
incl
push
add
mov
in
push
repnz
out
sti
test
incl
lea
pop
pop
pop
leave
push
push
call
mov
imul
ja
add
incl
lcall
pop
add
out
mov
data16
mov
add
outsl
add
add
add
mov
add
data16
jmp
jae
mov
xchg
add
bound
incl
clc
add
jmp
mov
rcrl
add
cld
lds
pop
int
xchg
decl
ret
lea
pop
push
push
call
add
lcall
jp
pop
mov
cltd
dec
xchg
in
jo
jns
add
lods
add
nop
js
add
add
add
push
faddl
add
lods
add
jecxz
rcl
jl
pop
data16
std
incl
add
inc
fcomps
out
mov
mov
sub
pop
pop
push
push
push
push
push
push
push
call
add
add
add
add
add
lods
push
outsl
in
orl
test
push
push
lods
add
push
incl
mov
jecxz
add
fdivs
add
mov
add
in
mov
scas
pop
in
cmpsb
fs
add
decl
loopne
push
push
push
call
lea
add
add
fucomi
xlat
add
add
jmp
js
pop
pushl
incl
add
add
add
mov
je
sar
incl
pop
roll
pushf
addl
add
ljmp
mov
mov
inc
fs
nop
push
incl
add
push
dec
loop
mov
sub
leave
ret
push
ror
add
pop
mov
pop
pop
push
add
rol
rol
pop
pop
pop
push
push
push
push
push
push
push
push
push
call
mov
call
mov
add
add
pushl
imul
lock
pop
mov
add
add
mov
mov
mov
incl
add
out
add
add
add
add
mov
nop
fdivr
lcall
add
in
call
mov
sub
leave
ret
push
push
push
push
push
push
push
push
call
stos
add
call
fdivrs
ljmp
lods
add
add
loop
call
add
add
jle
les
bound
push
rolb
addl
cli
xchg
faddl
nop
stos
mov
call
add
shl
into
test
incl
add
add
pop
xor
inc
push
push
push
push
call
xchg
jns
add
lea
jl
xlat
loope
fst
add
mov
stos
add
jmp
incl
xchg
add
incl
fcompl
incl
add
incl
add
add
int
addr16
addr16
add
fadds
in
add
mov
mov
lcall
addl
mov
sub
cmpb
jne
ret
out
and
movl
testl
xchg
out
repz
les
test
xchg
out
and
out
and
mull
xchg
out
jae
les
mov
jae
mov
adc
hlt
jecxz
subl
imul
sbb
test
outsl
cs
cwtl
jmp
dec
mov
into
jge
mov
mov
mov
stos
cmp
jmp
or
das
imulb
aas
sarb
lret
lock
fucompp
sub
xchg
mov
test
pop
add
pop
dec
pusha
sub
je
out
dec
mov
shl
jno
fwait
jg
adc
sbb
ja
lock
dec
mov
add
pop
push
pop
sahf
insb
pop
add
mov
addr16
mov
push
arpl
sub
mov
out
pop
les
leave
xlat
jnp
mov
sbb
push
stos
les
ja
mov
in
jne
ret
adc
xchg
fildl
sub
arpl
sub
ja
dec
xchg
pop
lods
sarl
sbb
mov
inc
rorl
inc
sbb
dec
je
js
sbb
pop
pop
testl
or
aas
cli
sbb
lods
push
push
mov
or
mov
sbb
add
mulb
ja
sub
add
rcrl
dec
inc
pop
jp
loopne
sbbb
sub
jp
push
inc
stc
mov
nop
aam
jge
lea
int3
mov
add
rclb
test
or
hlt
adc
cmp
inc
in
jle
lret
sub
in
lock
out
sub
repz
cmp
push
test
shlb
push
decl
xor
out
mov
xchg
pop
push
mov
jg
cs
das
pop
js
xchg
push
sbb
dec
fstp
inc
jo
fildl
aad
repz
mov
cld
sti
push
hlt
xor
fwait
cld
mov
aaa
jne,pt
add
xorl
jns
test
int
push
mov
mov
imul
sbb
repnz
in
cmp
hlt
lock
sub
mov
sbb
push
movsb
aad
mov
adc
lcall
add
jae
adc
mov
sub
rorl
push
mov
ds
and
shll
lret
stos
add
jp
ficoml
dec
xchg
shll
call
pop
cli
adc
movsl
ficompl
add
xchg
popa
push
movsb
push
dec
xchg
lock
pop
add
popa
pusha
movsb
in
push
mov
test
sbb
adc
add
cwtl
and
nop
and
push
mull
into
rclb
arpl
scas
insl
adc
adc
icebp
leave
loope
cmpsl
call
jb
dec
cld
and
fidivs
or
xchg
jbe
ja
cmp
dec
in
mov
pop
stos
jne
sbb
lods
mov
out
call
mov
in
jl
inc
xchg
mov
xchg
add
adc
das
adc
adc
sar
sbb
push
stc
mov
test
in
cmpsb
dec
inc
outsl
cmp
mov
push
sbb
inc
mov
inc
cmc
movb
ds
jle
dec
es
sub
test
dec
ljmp
popa
cld
lock
dec
mov
mov
lret
insb
jmp
push
sarl
jp
incl
mov
popl
jge
leave
popf
sbb
mov
dec
scas
sarb
or
mov
jbe
add
or
push
out
mov
push
call
adc
jmp
xchg
mov
sahf
cmp
mov
inc
cmc
icebp
popa
icebp
shll
mov
out
add
pop
cltd
fists
cmp
push
sub
bound
mov
js
cmp
divl
sbb
lock
imul
push
movsl
xsaveopt
push
int
mov
push
and
pop
and
ret
aam
or
mov
and
jg,pt
cli
test
and
push
and
bound
add
aad
mov
outsl
aaa
sarl
in
fistl
dec
sbb
xor
xor
cwtl
and
xor
stos
jecxz
mov
xor
and
mov
imul
xchg
call
and
add
inc
cwtl
mov
jb
jo
or
xchg
mov
adc
xor
lahf
int3
lea
lahf
movsl
in
sub
fisttpl
lods
ds
dec
mov
xchg
sti
jne
add
jl
fs
jbe
mov
gs
jecxz
and
mov
mov
nop
jno
iret
outsb
insl
jl
adc
jbe
adc
ss
cltd
mov
out
jle
loop
or
push
inc
jo
cmp
pop
shl
pop
es
push
xchg
inc
add
sub
rcll
mov
sbb
jno
ja
ja
leave
cmp
jecxz
cmpsb
dec
push
scas
mov
xlat
mov
pop
rcrb
fcoms
les
jae
or
mov
roll
aas
and
sahf
test
xor
clc
sbb
add
scas
cmp
sar
push
mov
jo
clc
negl
sahf
xor
enter
sub
ret
aad
aad
mov
out
jnp
and
cld
mov
stos
mov
stc
out
cltd
es
out
jle
scas
aaa
inc
mov
xchg
adc
lahf
mov
fsubs
push
push
xor
jge
mov
cmp
or
cmp
dec
loopne
insl
and
aas
addr16
dec
cmp
push
xchg
dec
popa
imul
mov
push
gs
mov
xchg
stos
pop
mov
cmp
shl
jge
mov
out
xchg
mov
lahf
sbb
aaa
arpl
and
mov
aad
out
idivb
push
loop
loopne
sbb
dec
cli
pop
xor
lds
and
or
mov
aaa
in
sub
imul
cmc
mov
out
jo
ja
push
cmc
ficoml
xlat
xor
xor
mov
gs
add
inc
mov
mov
or
adc
mov
add
push
out
out
addr16
fcoml
mov
out
pop
xor
jbe
leave
stos
or
std
jmp
xor
in
out
lret
and
sahf
js
in
fwait
and
loop
mov
fcmovb
sbb
pop
imul
mov
mov
jo
stc
cmp
jle
jo
movsl
jnp
cmp
mov
jg
mov
repnz
mov
in
xchg
add
inc
pop
pop
stos
pop
or
jns
xchg
insl
jno
dec
push
xchg
lahf
rorb
xor
addr16
mov
push
mov
dec
stos
dec
aaa
sbb
outsl
sub
sbb
or
sub
add
orb
ss
jp
fs
movsl
and
push
fmull
out
repz
pop
shrb
enter
mov
in
rcrb
test
call
add
rcrl
fdivs
aas
ljmp
jmp
repz
xchg
ja
pusha
and
fstl
pop
bnd
clc
je
push
movsb
jge
jne
sarl
inc
cltd
inc
ja
sub
testb
mov
or
sbb
and
lahf
inc
mov
xor
flds
roll
rorl
in
sbb
add
jno
cmpsl
push
popa
cmp
xchg
mov
or
jmp
mov
jl
cltd
out
mov
in
sbb
fwait
in
sub
inc
aad
cmp
lods
push
pop
cmpsb
dec
inc
movsb
mov
xorl
dec
mov
lahf
fmuls
sub
pop
or
dec
fmuls
pop
pop
or
or
ror
push
cmp
xor
lds
bound
mov
test
cmp
loope
fstpt
xchg
mov
clc
ljmp
pop
scas
enter
inc
xchg
push
xchg
hlt
jae
bound
mov
xchg
jno
test
scas
sbb
jne
js
lods
pushl
jnp
das
push
mov
adc
mov
in
sahf
jle,pt
inc
in
shrb
mov
insb
jbe
adc
pop
mulb
mov
icebp
movsl
enter
in
pop
mov
repnz
add
mov
jge
loope
es
push
out
iret
add
popf
movsl
lret
inc
insb
addl
lahf
sarl
pop
pop
mov
cltd
cmp
inc
pop
add
fwait
dec
mov
nop
ret
push
dec
imul
loopne
cmp
aam
inc
rcrb
test
outsb
and
add
push
and
sub
stc
movsl
push
jecxz
jle
adc
pop
push
inc
popa
test
cwtl
dec
mov
push
jo
js
jmp
dec
lret
mov
mov
lods
push
jmp
loop
xor
adc
fidivl
jmp
fdivr
dec
imul
cs
out
inc
jns
test
orb
out
or
xchg
sub
pusha
addr16
xchg
add
ja
pop
xor
push
pop
fbstp
jbe
adc
fcmove
mov
push
outsl
mov
fdivrp
cmp
ret
mov
cmp
sbb
lret
cli
inc
mov
inc
jg
shlb
ljmp
inc
subl
popw
inc
shll
outsl
jb
mov
flds
pop
jmp
int3
pop
scas
js
jae
aad
xor
loopne
xchg
pop
xchg
frstor
add
pop
ljmp
xchg
inc
leave
ja
adc
dec
jmp
or
loopne
cmpsb
dec
out
enter
pushf
icebp
ds
add
cld
jns
mov
push
lds
mov
or
xchg
mov
shrl
cmp
hlt
push
gs
inc
jmp
xchg
push
xor
and
das
xor
cmpsl
sbb
and
xor
ss
pop
arpl
xorb
mov
cmp
push
jg
lods
jo
shll
popf
mov
mov
pushf
sbb
fst
ss
push
call
fxch
mov
mov
dec
xchg
push
mov
mov
xchg
pop
int3
xor
jno
ret
shr
cmp
xchg
loop
pop
pop
mov
xchg
ret
jo
test
lret
mov
and
imul
ljmp
adc
jp
or
xor
aam
push
xchg
jle
and
xchg
popa
daa
subl
push
jne
push
enter
pop
mov
out
xchg
and
popf
int3
or
out
push
jg
jb
enter
or
mov
xor
jl
movb
ljmp
pop
xchg
mov
or
push
js
jns
pushf
fisttps
lret
pop
and
addl
cmp
mov
in
jmp
mov
mov
xchg
pop
pop
push
int
xchg
neg
call
pop
ds
add
stos
mov
sbb
push
mov
xor
dec
cld
sub
cmp
shll
aas
or
sbb
push
outsl
out
pop
pop
xchg
int
jl
add
pushf
add
jns
add
add
out
fmul
fidivs
jbe,pn
sub
adc
arpl
aas
filds
call
shrb
jae
popa
cmp
scas
sbb
xchg
push
outsl
push
cwtl
pop
sbbb
outsb
jb
lock
dec
cmp
popa
add
lret
jp
pop
andl
xchg
pop
aam
pop
xor
mov
mov
clc
dec
pop
jecxz
sub
mov
adc
jl
dec
pop
cmp
mov
mov
addr16
inc
and
cli
push
imul
rorb
jns
mov
xchg
xchg
or
sbb
or
push
scas
xchg
sub
loopne
mov
insl
das
jl
es
sbb
mov
jae
setae
and
xchg
xchg
push
loope
push
inc
test
pushf
mov
jo
out
add
in
ljmp
int3
lock
icebp
or
shll
dec
xchg
jno
or
adc
xchg
mov
dec
pushf
cs
mov
mov
cs
adc
fisubrs
sub
or
or
sbb
test
mov
adc
cmp
or
je
and
test
cltd
mov
xor
out
nop
cmp
jge
dec
push
and
xor
enter
or
and
adc
jns
xchg
ret
xchg
fstl
roll
push
adc
enter
add
arpl
imul
or
xor
mov
gs
addb
dec
negb
sub
push
shll
jle
popf
push
dec
rorb
mov
out
push
push
mov
loopne
outsb
xchg
dec
jge
in
mov
scas
sub
dec
sbb
cmp
sbb
shlb
in
xor
nop
jne
aad
loop
popa
add
mov
and
cmp
cs
mov
pop
pop
dec
out
insl
xchg
pop
movsl
shl
push
mov
jg
or
leave
jge
sahf
rorl
dec
push
test
pop
and
loope
add
push
ficompl
cmc
cld
jge
push
add
mov
insb
cld
push
call
sbb
out
in
mov
in
push
stos
mov
stos
pop
imul
mov
scas
or
shr
lcall
scas
and
cld
cmp
jge
fnstsw
call
enter
push
push
nop
js
mov
sub
cli
push
add
mov
fwait
mov
sub
xor
pop
cld
mov
out
inc
loopne
inc
sub
test
jb
inc
and
mov
popf
and
xchg
scas
or
scas
outsl
testb
xchg
mov
aad
xchg
je
inc
push
js
lds
add
movsb
rorb
out
lret
pop
out
mov
inc
jbe
sub
xchg
imul
mov
adc
outsb
or
leave
aam
pop
mov
mov
fcompl
sbb
pusha
cmp
gs
mov
ja
sarl
adc
pop
inc
divb
stc
sbb
aam
popf
pusha
mov
mov
pusha
pop
outsl
jne
shlb
notl
and
loopne
cmpsb
sahf
daa
jbe
test
call
hlt
dec
test
movsl
xor
lea
adcb
mov
movsb
int3
jb
jg
mov
add
aaa
mov
lahf
or
ficoml
pop
sub
lods
lea
test
inc
in
pop
insb
cwtl
loope
cmc
out
pop
xchg
inc
inc
jbe
add
popf
lcall
insl
or
dec
fsubs
and
sbb
scas
xor
leave
ret
jp
and
aaa
test
lea
mov
loopne
sub
outsl
push
sbb
jne
dec
aam
iret
jge
jecxz
bound
jl
leave
lret
fadd
mov
test
mov
inc
pop
cmpsl
js
or
stos
bound
and
xchg
nop
cmp
push
jbe
in
mov
adc
add
jp
daa
mov
pop
jg
xor
xor
das
lret
xchg
mov
mov
xchg
pop
cmc
sarb
mov
out
sarl
push
lods
jb
adc
mov
push
test
mov
clc
push
icebp
test
mov
sbb
arpl
add
dec
sysexit
mov
mov
xor
sub
cs
stos
mov
mov
lcall
mov
loope
add
fidivrs
sbb
daa
push
into
aaa
into
pop
into
and
out
jle
fld
ss
ja
arpl
into
loopne
sub
dec
pop
mov
mov
push
loope
or
and
cmpb
pop
hlt
adcl
mov
mov
adc
xchg
inc
fildll
insb
mov
or
mov
inc
inc
sbb
push
xchg
cmp
mov
loopne
or
cmc
cwtl
xor
jo
pop
js
fwait
mov
repnz
jg
cmp
aad
pop
sarb
lea
mov
or
sub
xor
jge
inc
adc
scas
mov
mov
cmp
sub
or
cmpsb
xor
cld
pusha
mov
pop
ret
jb
fs
out
or
xor
popa
xchg
movsl
int
ljmp
inc
jl
xchg
les
xor
sbb
mov
xchg
and
ret
loope
push
and
cmp
mov
or
sbb
pop
xor
scas
es
inc
mov
dec
mov
inc
mov
sub
pop
hlt
or
lock
les
aad
hlt
sbb
jl
push
lcall
mov
or
outsl
sbb
and
adc
daa
or
sub
inc
loope
xor
mov
or
fs
adc
pushf
pushf
outsb
jp
cmpsl
stc
push
push
mov
push
scas
bound
into
adc
emms
mov
mov
pop
add
and
pop
mov
aaa
shll
das
lods
out
js
mov
xchg
lds
cs
adc
cmp
jns
pop
adc
stc
clc
enter
cwtl
adc
adc
nop
adc
pop
add
in
push
push
data16
mov
stc
repz
pop
push
pop
mov
insl
das
and
nop
xchg
and
pop
push
daa
and
dec
and
cld
out
js,pn
insb
fs
xchg
mov
mov
hlt
inc
test
ret
cld
popa
mov
push
daa
pushf
in
in
leave
adc
iret
inc
pop
out
jb
mov
fnstenv
mov
ds
xor
sub
lods
dec
iret
jmp
clc
mov
sbbl
loopne
mov
sahf
adc
cmc
ljmp
notb
push
sahf
lea
xchg
and
icebp
pop
pop
sbb
add
mov
dec
cmp
jb
insb
rol
inc
outsl
ja
jmp
rep
inc
mov
das
mov
add
fildll
lahf
jb
xor
push
bound
js
pop
inc
mov
adc
jmp
lret
pushf
mov
enter
pop
das
sti
dec
push
fbstp
jl
scas
mov
xchg
popa
and
mov
mov
lcall
push
pop
mov
dec
scas
and
add
fdivrl
in
add
lods
or
push
xor
jl
decl
jae
mov
xchg
je
sbb
adc
adc
sub
cmp
mov
sbb
or
pop
enter
fs
popl
outsl
lds
cmc
dec
jmp
xor
add
stc
jo
or
aam
jle
add
pushl
inc
outsl
sub
loop
test
mov
dec
xor
je
imul
dec
psrld
push
or
out
mov
scas
into
inc
pop
lea
cmp
cmpsb
cmc
sbb
sub
out
inc
and
mov
rclb
lods
mov
inc
inc
push
cmpl
fidivrl
push
rcr
out
xor
or
inc
inc
sub
mov
jbe
cmp
int
mov
sub
xchg
mov
dec
mov
enter
push
insb
mov
adc
jno
fwait
jg
std
xchg
xchg
push
sub
call
roll
popf
rcl
fdivp
and
daa
loop
xchg
pop
popa
jno
push
inc
inc
jecxz
dec
mov
outsb
cmp
and
jl
movsl
inc
in
or
lret
xchg
push
push
imul
xor
xlat
pushf
xor
inc
sbb
in
enter
inc
dec
ljmp
in
inc
out
lahf
pop
xchg
inc
add
add
fisubrl
pop
xor
or
outsb
mov
test
idivb
pop
and
mov
movsb
pop
push
stos
scas
test
jecxz
jae
mov
dec
fwait
or
js
and
mov
aas
push
mov
mov
sub
or
or
inc
xchg
inc
mov
cld
push
add
push
iret
rol
xchg
aaa
inc
cmp
mov
dec
stos
pop
xor
jp
and
pop
sub
pop
mov
add
adcl
aas
jb
adc
sbb
pop
in
sub
or
or
cld
dec
shlb
jmp
icebp
out
xor
mov
push
repnz
push
ret
jecxz
xor
ja
push
cmp
lods
fbld
add
mov
ljmp
xor
repnz
add
aam
mov
nop
test
jne
in
bnd
pushf
outsb
push
xchg
jae
jno
jnp
shlb
mov
fists
jmp
icebp
fdivr
inc
mov
cmp
fadds
jge
in
jle
jne
movsl
pushf
pop
nop
jle
int
pop
push
in
addb
mov
repz
or
out
shrb
pop
scas
scas
cmpsl
xor
nop
loopne
data16
arpl
lea
push
enter
push
iret
sub
repz
inc
sbbl
fnstsw
jg
insb
adc
xchg
jno
outsb
shrb
pop
icebp
sub
lea
xchg
xchg
pop
push
rcr
mov
mov
scas
leave
lcall
jo
sub
stos
or
mov
pop
jb
push
movsl
inc
fcoms
inc
mov
jbe
add
push
sub
mov
cwtl
xor
cmp
cmp
std
insl
xor
repnz
stos
and
push
daa
test
ret
mov
push
mov
in
or
test
sbb
cmp
cmp
sbb
mov
pop
stos
fadds
sub
arpl
or
scas
fcomps
mov
inc
sbb
jne
subl
push
lret
mov
sub
sbb
xchg
xor
sbb
mov
inc
push
ficoms
push
sub
mov
lods
push
scas
mov
fsubrs
rcll
jmp
cmp
cmp
in
inc
shlb
cmpsb
bound
mov
stos
jp
inc
cmp
cmc
in
xchg
movsl
scas
mov
cmc
pop
lcall
insl
sbb
sbb
pop
fs
fcoml
push
js
add
andb
insb
testl
xor
xchg
loopne
testl
jo
cs
push
jno
pushf
push
mov
es
adcb
nop
clc
pop
sbb
movsl
orb
or
xor
inc
icebp
int
jne
pusha
mov
in
clc
pand
fnstsw
cmp
push
aas
fldenv
jb
mov
mov
sub
sti
push
pop
pop
movsl
outsb
cmp
jmp
out
shld
cmpl
lea
push
cmp
mov
pop
lret
sub
dec
fs
and
adc
or
in
dec
hlt
push
sub
sar
std
shrl
xchg
pop
mov
jnp
sbb
pop
xchg
adc
push
fnstsw
in
rcrl
jbe
add
test
test
jb
jbe
pop
mov
jge
daa
in
mov
dec
jae
xor
into
or
insb
shufps
and
push
add
pop
out
test
mov
sbb
pop
pop
xor
mov
xchg
rcl
scas
in
lock
addr16
or
arpl
pop
invd
inc
int
jp
aas
pusha
jb
mov
cmp
dec
add
call
movsb
jmp
popa
js
adc
jle
mov
jo
xchg
push
jmp
adc
jbe
movsl
cmp
and
jp
roll
lret
stos
jge
repz
into
xor
pop
jge
mov
fcmovb
cmp
sub
jp
mov
and
lret
and
xchg
aas
stos
xor
movsb
into
mov
loopne
mov
mov
pop
push
leave
jp
test
jle
xchg
repnz
xchg
cmpb
cmp
push
cmp
mov
xor
lods
mov
dec
ficoml
lock
sub
push
dec
inc
mov
mov
sbb
nop
xchg
pop
pop
dec
push
inc
mov
lcall
adc
sub
and
jbe
dec
out
pop
or
and
cmp
test
pushf
jns
pusha
fprem1
add
xchg
dec
xor
lods
inc
lret
mov
stos
leave
imul
out
mov
or
inc
fucomi
lahf
xor
popf
dec
adcb
jl
lret
imul
jmp
or
fs
push
stos
xchg
push
jnp
negl
sub
pusha
mov
sti
mov
inc
add
inc
testb
pop
sahf
inc
scas
add
aaa
pushf
arpl
pop
cmp
sub
mov
xchg
pusha
jne
mov
push
push
jno
pushl
mov
mov
jbe
rcr
xor
into
mov
mov
adc
orb
inc
sub
sbb
nop
fldenv
cmp
or
adc
cmpsb
in
sub
pop
ficompl
dec
push
mov
cmpsl
mov
mov
and
adc
dec
das
out
adc
jb
push
cmpsb
cmp
sti
add
add
rolb
nop
gs
mov
adc
dec
xchg
fdivrl
out
cld
fists
jmp
clc
in
std
pop
pop
stos
jns
lcall
xor
mov
fldt
mov
or
in
push
sbb
std
rcll
jb
js
shll
dec
aam
push
add
les
mov
hlt
xchg
cltd
into
inc
mov
ss
mov
icebp
scas
lret
cmc
mov
lods
repz
in
sbb
sub
pop
pushw
xor
clc
sarb
rcrl
test
cmp
cmp
xchg
pusha
repnz
pop
lret
imul
sbb
repz
leave
test
ja
and
je
pop
loopne
popa
mov
jnp
mov
and
xlat
nop
jnp
xchg
inc
iret
cli
dec
lea
or
icebp
add
insb
inc
fwait
add
imul
jae
fidivrs
dec
fwait
movsl
pop
push
fbld
xchg
mov
adc
xchg
dec
ds
gs
dec
sbb
pop
and
and
imul
les
lahf
and
das
and
jae
xor
nop
cwtl
pop
inc
mov
and
jmp
das
push
int3
dec
adc
cmp
enter
mov
jbe
ret
out
and
nop
pop
pop
push
dec
or
or
mov
push
je
and
mov
mov
mov
fcmovnu
pop
pushf
pop
pop
jno
push
xor
movsl
cmp
dec
mov
pop
imul
insl
iret
into
pop
mov
xor
stos
addb
cmp
shrl
mov
jp
or
dec
cmc
mov
mov
jne
xor
lret
in
lea
cli
out
push
lock
inc
negb
dec
sub
mov
in
stos
std
hlt
add
mov
and
cmpsb
pop
inc
pushf
aad
loope
fmull
rclb
jnp
xchg
inc
leave
fstpl
shr
pop
ret
or
ret
xchg
xor
adc
enter
dec
fbstp
fsub
stos
js
ret
jge
inc
imul
or
mov
addb
into
or
cmp
out
ret
xchg
arpl
clc
popf
sbb
pop
push
icebp
test
push
out
ss
mov
push
aad
and
fnclex
adc
cltd
mov
cmpsl
pop
dec
pop
repz
addr16
jmp
aas
mov
in
add
lret
pushl
dec
mov
mov
into
das
pop
call
add
ja
cmpsl
inc
xchg
mov
xchg
rcrb
daa
insb
shlb
sub
or
cmp
hlt
mov
dec
xor
mov
lcall
sub
and
faddl
jmp
dec
aam
xchg
add
call
xchg
cmp
daa
xor
add
push
mov
dec
xor
cs
xchg
ret
mulb
pushf
leave
ljmp
imul
repz
test
outsb
jbe
ja
dec
mov
add
mov
adc
mov
mov
insl
ret
mov
adc
repnz
cmp
push
repnz
mov
imul
test
in
cwtl
sub
sub
rorb
bound
push
xchg
sub
mov
mov
xor
pop
mov
mov
ficoms
fildl
adc
std
repnz
xorl
and
imul
scas
cmp
psrlq
out
in
cmpsl
mov
pop
push
pop
int3
push
fs
ja
push
dec
add
je
stc
xchg
pop
orb
pop
lret
cld
pop
pop
fcomps
sub
lods
sbb
sub
mov
pop
shl
jae
add
cmp
ja
lock
stos
mov
ds
data16
out
lds
imul
mov
jp
aam
mov
pop
enter
sti
idivl
sti
cmc
fistpll
dec
push
out
test
sbb
inc
icebp
mov
fists
push
sbb
fwait
inc
sub
xlat
dec
sbb
iret
sbb
dec
clc
movsb
xor
fisubrl
mov
test
out
sbbb
into
pop
jo
mov
imul
pop
xor
adcb
xlat
mov
std
xchg
loop
rcrl
andl
fistpl
mov
mov
xor
or
int3
in
dec
cmpsb
pop
adc
xchg
mov
int
push
adc
mov
mov
sub
pop
add
test
and
cmp
stos
or
gs
mov
inc
or
ret
mov
ljmp
and
leave
out
mov
cs
jns
inc
stc
insl
push
je
xor
outsl
outsl
das
inc
adcl
mov
stc
mov
dec
sti
pop
xor
or
out
xchg
in
or
inc
iret
bound
jo
mov
mov
xchg
and
int3
xor
push
mov
test
mov
mov
fcoml
jge
ja
nop
fisubl
adc
sbbl
push
jnp
lret
arpl
fbld
adc
subl
add
push
pop
push
mov
inc
popf
cvtdq2ps
gs
xor
int3
add
sbb
inc
pop
daa
in
fmuls
push
jns
jae
and
test
insl
out
adc
or
je
mov
cs
mov
jmp
icebp
scas
pop
cmp
mov
fs
mov
sub
add
and
fstps
jae
fcoms
push
jbe
pop
ja
push
sub
das
and
in
jp
add
cwtl
test
pop
sub
xor
xorb
in
add
mov
cmp
xorb
dec
xchg
std
rcrl
jp
mov
mov
mov
inc
cli
cmpsb
add
pop
xor
aaa
add
loop
jne
inc
popa
xor
push
das
out
test
mov
mov
popl
pop
fsubrs
dec
adc
push
shll
pop
rdmsr
daa
scas
inc
fists
mov
lods
add
ss
mov
and
out
sti
add
ds
lret
pop
hlt
dec
xor
lahf
add
or
fisttpll
dec
cmp
fildl
push
fimull
add
popf
xor
xor
in
dec
jecxz
sub
jg
insl
push
sbb
jl
pop
inc
dec
pop
aad
pop
or
stos
popa
in
inc
dec
xchg
pop
je
push
sbb
dec
xor
push
inc
inc
jecxz
lea
out
xlat
push
xchg
mov
jg
jnp
cmp
mov
cmp
sub
jb
das
add
in
push
fs
jecxz
andb
pushf
idivl
cmpsl
lahf
mov
nop
pop
mov
mov
scas
or
fisubl
push
adc
xlat
lahf
test
test
xor
iret
push
jp
enter
inc
xor
sub
leave
fnstcw
incl
nop
or
sbb
ficompl
mov
daa
dec
dec
push
fistps
hlt
or
roll
lods
jecxz
test
and
mov
rcrl
iret
insl
test
dec
leave
sti
xlat
subb
in
popf
mov
pop
mov
jo
sub
shufps
cld
popa
mov
mov
dec
mov
sub
sbb
scas
mov
mov
pop
loope
outsb
add
push
lret
mov
mov
stos
ret
dec
pop
fisubrl
rol
sbb
pop
icebp
add
add
pop
mov
and
je
push
dec
mov
sub
push
test
and
jo
mov
xlat
and
adc
rolb
addr16
andl
data16
and
inc
mov
mov
cmp
or
idivb
fdivrs
xchg
pushf
insl
mov
xor
hlt
xchg
and
xor
add
sbb
push
and
aam
or
jg
out
cmc
stos
jle
clc
out
pop
cltd
sbb
push
insl
cmc
jno
aad
pop
sbb
in
jp
ficomps
gs
out
push
mov
fstps
sbb
enter
lcall
roll
xor
sub
insl
fwait
aam
xchg
clc
lds
mov
shlb
ror
dec
pop
int3
dec
adc
out
cmp
inc
into
adc
adc
mov
inc
pop
aad
mov
add
push
xor
adc
and
mov
push
ja
add
insb
testl
dec
dec
mov
lahf
xchg
test
adcl
outsb
mov
iret
add
cs
in
jmp
es
in
lods
push
addr16
mov
imul
je
or
or
shrl
inc
dec
mov
les
pop
xchg
push
roll
mov
jae
fistpl
sub
cmp
pop
ljmp
lahf
push
mov
or
jbe
xchg
mov
test
jne
std
out
fimuls
sbb
jbe
mov
xchg
mov
xorl
sbb
mov
pop
es
daa
push
push
mov
push
cltd
leave
jno
push
mov
push
inc
dec
jae
sbb
adc
sub
dec
fs
loopne
pop
bound
outsb
and
or
pop
xchg
dec
jl
fs
sti
stos
pop
and
adc
cmp
jmp
es
movsb
xchg
insb
scas
fadd
andl
scas
pushf
pusha
jbe
mov
fdivrl
cmp
imul
jl
cmc
sub
pop
inc
jne
push
lret
cmpsl
cmp
popf
sub
push
push
or
nop
mov
arpl
or
in
loopne
adc
push
stos
cmp
dec
scas
sbb
movzbl
loop
and
rolb
sub
addl
scas
stos
sbbl
push
xlat
mov
fildll
xor
sti
inc
push
add
jg
aad
jns
pop
gs
movsl
dec
in
gs
cmp
test
in
call
mov
mov
shll
sahf
loop
icebp
lea
push
flds
push
or
subb
cmp
adc
clc
dec
push
xchg
fwait
repnz
aaa
mov
lods
sub
xchg
jecxz
sbb
and
lret
lock
lret
pop
mov
repnz
outsb
js
cmp
mov
sub
es
xor
add
xchg
addr16
mov
mov
inc
sbb
incb
xor
adc
fldt
cltd
mov
jno
cmp
ret
je
lcall
mov
or
in
adc
mov
and
adc
pop
loop
mov
or
mov
dec
bound
jnp
cmpsb
xor
ljmp
jnp
or
movsl
inc
mov
addr16
mov
pop
push
push
shll
idivb
daa
xor
sti
vmovupd
mov
sub
ficompl
xchg
fs
pop
push
cltd
inc
aam
es
outsl
push
aaa
cmpsl
push
push
mov
pop
orl
lahf
popa
cmp
and
orb
stos
pop
cmp
xor
sub
sarb
push
jo
add
mov
jae
fisubrl
mov
dec
jp
mov
rcl
mov
mov
inc
aas
movsb
xchg
pop
jae
test
sub
adc
cmp
cltd
sti
mov
xor
fwait
dec
dec
jnp
sbb
push
jno
xchg
xchg
js
or
pop
jnp
loope
rorb
mov
icebp
push
dec
lods
dec
mulb
repz
mov
cmp
push
js
scas
lods
xchg
bswap
adc
pop
shr
jbe
inc
daa
push
scas
jno
inc
cmpsl
out
lret
push
js
inc
mov
pop
xchg
jne
lods
pushf
push
pop
iret
mov
mov
push
xor
jns
push
add
mov
xchg
cmp
jne
jnp
fstp
sar
sti
jo
pusha
in
pop
inc
push
in
push
sub
dec
push
rclb
fildll
shlb
int3
jle
push
int
sbbb
add
insl
mov
inc
adc
in
stos
ljmp
out
add
fildl
add
bound
stos
mov
rol
fwait
pushf
leave
rcr
inc
pop
aas
lods
mov
jp
outsb
aad
xor
pop
mov
les
out
mov
insl
dec
adc
pop
lret
or
loop
cld
fildl
jle
cmp
jecxz
loopne
scas
sbb
sbb
push
and
and
push
scas
add
push
cmpsb
and
pop
or
scas
inc
inc
pop
stos
push
adc
cld
imul
xor
xor
push
imulb
movsb
dec
jg
push
xchg
pop
repnz
cmp
shlb
inc
sbb
fistl
push
inc
jo
nop
les
mov
loope
stc
push
cmp
or
pop
cmp
les
adc
cmp
inc
cmp
loopne
int
dec
and
outsl
mov
jb
mov
add
sub
jnp
mov
cmp
enter
cmc
pop
cmpb
or
jecxz
add
repnz
inc
adc
xchg
xchg
add
and
sti
lods
mov
jo
cmp
in
jge
cltd
mov
or
mov
xchg
add
scas
icebp
stos
add
repnz
iret
pop
xchg
mov
in
sub
pop
mov
inc
lahf
stc
aad
sub
push
inc
mov
lea
xchg
pop
outsb
shr
mov
iret
mov
xlat
push
ds
imul
xor
xchg
idivl
ja
in
out
scas
inc
mov
sbb
sbb
lea
xlat
mov
inc
add
cmpb
and
cmc
lret
pop
rorl
cmp
mov
or
inc
xchg
jp
sbb
lea
push
outsb
pop
xor
sbbl
fildl
dec
push
ds
xor
idivb
rorl
mov
loope
jg
mov
or
scas
add
xchg
inc
movsb
dec
cmpsb
jecxz
clc
fwait
and
scas
jmp
xchg
lret
enter
jl
roll
lret
cltd
stos
push
and
lods
cmp
mov
ds
ljmp
cwtl
mov
xchg
insb
adc
push
mov
add
cmp
sbb
int3
jae
push
out
lds
gs
addr16
negl
pop
mov
sbb
pushf
jnp
xchg
add
scas
pop
mov
daa
addr16
adc
sahf
bound
or
mov
and
jecxz
stc
mov
mov
data16
sub
push
and
ffreep
pop
cmp
lret
lret
xchg
insb
pop
ficompl
insl
and
push
and
mov
inc
out
sub
push
jecxz
jg
insl
movsb
sub
mov
cmpsb
icebp
mov
inc
mov
mov
jo
repnz
jge
imulb
xor
xchg
dec
sti
imul
leave
inc
fistpl
adc
mov
push
mov
add
cmp
aas
test
je
inc
and
fdivl
fcompl
jbe
idivl
dec
xchg
jle
js
sub
rolb
push
push
add
jbe
imul
xchg
sub
push
mov
arpl
mov
in
pop
popa
stc
jle
into
sbb
outsl
aas
test
imul
fistpl
sbb
gs
loop
adcb
cmp
cltd
jb
pop
pop
jp
outsw
cmc
fwait
mov
sbb
data16
ljmp
cli
rcll
fldt
rcll
xor
lock
jl
fisttpl
inc
sub
jecxz
stos
jae
xchg
pusha
or
pushf
mov
jne
and
repnz
popl
outsb
or
paddsw
and
cmp
mov
adc
ja
sbb
cmp
pop
jmp
jp
sarb
mov
daa
xchg
or
loope
push
add
fnsave
in
inc
int
and
cmp
push
adc
push
pop
loopne
xchg
jbe
in
pop
das
js
pop
push
hlt
repnz
test
leave
in
outsl
xor
clc
add
pop
ljmp
push
xchg
loope
inc
lret
add
cmp
jno
test
mov
xchg
mov
sbb
insb
dec
xchg
and
ret
push
lret
mov
jb
call
adc
ror
movsl
jg
mov
data16
adc
imul
xchg
outsl
xor
loop
sbb
sahf
push
cmp
bound
xchg
push
lret
movsl
mov
out
fisubrl
in
sub
dec
and
lock
loop
xor
out
aaa
push
das
or
nop
mov
outsl
add
pusha
cmp
mov
xlat
inc
out
bound
outsl
fsubl
lea
arpl
roll
ljmp
jb
push
int3
loope
jae
jne
mov
shlb
into
xor
and
mov
fsubs
push
stc
adc
in
cltd
movsb
adc
fidivs
mov
xchg
push
adc
and
imul
daa
add
xchg
movsb
popa
sbb
adc
jmp
orb
sbb
dec
lods
mov
in
jl
sub
cmp
jae
pop
cltd
jnp
adc
xor
cmp
push
add
es
xchg
mov
ds
inc
push
push
lret
rcll
pop
jge
out
pop
aas
repnz
xchg
fwait
adc
sahf
xchg
fs
in
jnp
add
xor
adc
stc
mov
and
add
cmc
cmp
add
rcll
pusha
fstpl
stos
dec
inc
mov
insl
lods
imul
push
or
int3
or
sahf
inc
movsl
daa
fists
cltd
adc
xchg
out
testb
sbb
pop
or
dec
jecxz
movsb
pop
aad
ja,pt
pop
jmp
leave
xor
mov
les
aam
jb
clc
pop
loope
xchg
test
aas
push
fstpt
movsl
dec
push
out
outsb
andl
mov
xor
mov
aas
pushf
shl
mov
test
movsb
jp
push
sbb
out
xor
pop
jb
xor
add
cwtl
cld
push
inc
dec
pusha
lods
fsts
orl
fwait
cmp
push
push
pop
mov
popa
lahf
test
fiaddl
lods
sub
mov
mov
insl
mov
xchg
mov
sub
pop
push
push
adc
aam
call
addr16
fnstsw
fs
iret
push
mov
add
test
inc
mov
enter
mov
addr16
mov
mov
aas
test
shlb
cmp
push
and
insb
push
insl
xor
cwtl
jg
dec
mov
xor
lret
jmp
adc
inc
loope
mov
in
jmp
or
dec
or
jnp
lods
jbe
clc
pop
data16
mov
xchg
ret
fs
xchg
stc
repz
sub
sbb
jecxz
sub
mov
push
xchg
xchg
push
out
xor
push
pusha
leave
and
outsl
sub
pop
insl
cwtl
mov
test
jge
lret
pop
mov
or
mov
jns
test
mov
add
and
mov
in
cmp
adc
addr16
loopne
cmp
je
jmp
or
mov
repz
xchg
repnz
sbb
pusha
es
pop
xor
out
cmp
cmpsb
loop
jecxz
outsb
sti
outsl
in
mov
and
adc
inc
pop
sub
dec
imul
test
cmp
adc
dec
dec
pop
shlb
mov
arpl
cmp
in
fisubrl
ret
cmp
mov
stc
outsl
jb
lahf
cmp
inc
test
push
lods
pop
cld
xchg
inc
push
pop
or
jp
push
xchg
movb
xor
pop
add
xor
cmp
sbb
dec
dec
and
cld
shr
xlat
cwtl
cmp
movl
pop
rcll
inc
mov
mov
mov
xchg
or
jl
fsubr
mov
push
cs
inc
lock
jnp
lock
sub
cmpsl
in
aas
dec
lods
mov
bound
xchg
mov
mov
cmp
xor
clc
mov
fstl
lret
jp
std
stos
ret
mov
inc
add
push
xchg
pusha
sahf
push
push
push
jne
movsb
push
in
push
sub
cld
insb
adc
lods
bound
daa
jb
push
and
pop
iret
imul
sub
in
or
mov
arpl
orb
in
mov
add
inc
add
repz
aad
rorb
adc
out
les
xor
out
in
pop
sub
data16
add
cmp
mov
jno
mov
shl
xchg
das
push
clc
clc
lret
in
push
fdivl
popa
push
stc
aad
insb
lock
or
mov
add
inc
lret
out
pop
cmc
ret
xor
stos
cld
mov
sar
in
adc
scas
loopne
and
jp
pop
push
mov
cli
ss
adc
outsb
jnp
dec
mov
jmp
stos
cmc
inc
cmp
push
jo
or
sbb
inc
shrb
and
xchg
cmc
test
ficoml
mov
pop
sbb
arpl
outsb
idivl
repz
mov
cld
repz
vpunpckhdq
mulb
idivl
sbb
or
or
pop
inc
ret
adc
js
cmpsb
hlt
enter
std
mov
mov
imul
leave
mov
outsb
test
loope
mov
dec
dec
sbb
gs
pop
mov
jo
ret
fdivrl
aaa
adc
jmp
pop
adc
jge
outsb
das
rclb
int
into
inc
mov
into
aam
push
mov
mov
mov
inc
or
inc
in
push
add
lret
lods
std
push
das
std
add
add
inc
cmp
jp
mov
and
ss
jno
cmp
stos
loop
fldenv
lea
lahf
pop
sbb
call
mov
jne
push
cli
paddsb
dec
xlat
in
fldenv
sub
push
in
pop
push
sbb
push
lds
xchg
lcall
mov
pusha
movsb
faddl
mov
pop
lret
sub
addr16
hlt
dec
subb
cs
adc
into
cmpb
mov
std
frstor
cli
negb
push
mov
mov
push
pop
pop
mov
mov
lret
repnz
or
push
push
fwait
cmp
insb
pushf
fcomps
add
dec
out
enter
clc
push
dec
mov
mov
mov
mov
mov
aad
out
call
repnz
rorb
fdivrl
sbb
out
stos
dec
out
test
mov
inc
sbb
jp
loop
cmp
jle
push
jmp
ficoms
cld
add
ss
cmp
cmpsb
sbb
pop
loop
dec
xor
cltd
add
sub
shlb
les
lea
cmp
bswap
mov
mov
test
add
mov
push
cmc
jmp
pusha
std
push
or
loop
sbb
and
xor
add
or
popf
dec
and
ja
xchg
xor
cltd
movsl
pusha
inc
jae
and
mov
and
outsl
repz
loop
pop
add
jno
cmp
mov
fs
ret
cmpsb
jl
jle
aas
sbb
dec
pusha
jl
adc
sbb
test
push
sbb
cltd
sbb
popa
inc
push
lods
push
scas
inc
push
inc
cmp
rclb
or
mov
add
sbb
cltd
movsb
mov
cltd
jbe
pop
jg
loope
jmp
scas
les
pushl
dec
pop
mov
lret
jae
jae
insl
scas
or
xchg
sbbb
mov
pop
ja
dec
mov
xchg
xor
nop
cltd
pop
mov
adc
movsl
sbb
and
adc
dec
or
fstp
pop
xor
xor
pop
pop
icebp
fistpl
jp
xchg
mov
pop
pop
mov
or
xchg
mov
jmp
out
addr16
mov
add
imul
rol
xchg
out
outsl
xor
ja
movsl
push
outsl
push
cwtl
sub
jno
xchg
pusha
jb
sbb
and
fwait
push
mov
cwtl
jle
mov
add
jb
dec
inc
mov
jns
aaa
outsb
cmp
lea
std
cmpsb
rorl
sbb
in
stc
data16
xor
pop
mov
std
cmp
loop
dec
arpl
std
xor
lahf
add
sub
fnstenv
cltd
xchg
and
push
shr
push
sahf
pushf
cld
addl
push
icebp
imul
dec
daa
aad
xor
and
jmp
sahf
cmp
div
in
or
imul
ret
notb
arpl
jnp
pop
adc
les
divl
in
mov
inc
jo
sarl
dec
mov
and
aaa
lahf
ja
popf
mov
sub
dec
aas
fdivrp
cltd
cmp
sbb
xchg
add
int3
shrl
jnp
or
sub
jns
scas
mov
fwait
sbb
xchg
fsubl
into
in
out
add
testl
sbb
add
addl
xchg
inc
arpl
cmp
cmp
in
nop
aaa
ret
jae
insb
stos
icebp
lods
ljmp
cmpsb
and
jns
in
sub
ret
shlb
dec
push
jg
mov
jae
cli
xlat
icebp
xchg
loop,pt
cs
pop
push
dec
xchg
sti
stos
imul
data16
popf
test
aad
aam
popa
or
mov
mov
outsl
xchg
sbb
in
in
dec
loopne
roll
jae
inc
fidivs
scas
dec
shr
repnz
fildl
repnz
add
pop
shlb
imul
cli
lea
popa
dec
cmpsb
inc
jnp
das
lods
push
insb
and
xor
test
sub
push
insb
sahf
mov
shr
nop
add
adc
mov
or
xor
jp
mov
xor
rcrb
adc
icebp
push
sub
sub
mov
fistl
popl
int
and
mov
inc
daa
lock
or
jbe
fs
push
mov
icebp
shll
scas
iret
rclb
test
rcll
jne
sub
xchg
fistl
pusha
sub
pop
adc
inc
mov
ret
jbe
and
stos
mov
mov
addr16
inc
push
les
jle
in
rolb
cmpsb
in
mov
fwait
sub
add
ja
out
leave
inc
add
mov
dec
jmp
ret
scas
fldcw
inc
into
or
cltd
push
pop
jo
in
add
cmpl
test
cwtl
and
xchg
pushf
outsl
xor
out
inc
es
testl
add
inc
movsb
mov
adc
int
xchg
cld
push
icebp
or
fidivrs
xacquire
push
push
mov
fs
cmc
adc
pop
pop
arpl
xchg
cltd
pop
inc
mov
sbb
and
icebp
fdivrl
icebp
mov
std
cmp
test
insb
mov
or
xor
jecxz
or
stc
lret
mov
or
pop
dec
dec
add
mov
jo
daa
jns
xorb
outsl
ds
andb
loope
xor
aaa
arpl
repz
add
mov
cmp
inc
xor
xor
cmp
fiaddl
push
shll
sub
sbb
int
push
aad
dec
xchg
adc
in
fcmovnbe
sbb
mov
or
cmpsb
roll
pusha
loop
sbb
adc
fstpl
pop
lcall
cmp
dec
out
aad
dec
lods
dec
mov
notb
adc
adc
ja
cmp
das
adc
movsl
scas
pushl
push
push
pop
and
pop
mov
or
xor
out
outsl
xor
ret
mov
sarl
sub
outsl
addr16
in
xchg
shr
push
imul
cmp
lcall
xchg
jecxz
test
pusha
popf
xchg
punpcklwd
ljmp
cmpsl
mov
or
pop
push
pop
inc
mov
jno
gs
sub
jl
inc
adc
inc
ds
minps
mov
sbb
xor
in
imul
mov
jo
sub
xor
mov
cs
scas
int3
mov
pop
rcrb
inc
and
movsb
mov
sarb
outsb
xchg
mov
push
outsl
outsl
pop
dec
mov
movsbl
mov
andl
insl
add
cmp
mov
jp
test
ss
xchg
cltd
shrb
sbb
xchg
dec
sarb
je
test
sub
rorl
int3
ss
dec
mov
jae
rcrl
hlt
repnz
inc
adc
in
scas
fdivs
mov
jmp
jae
ja
sarb
xchg
adc
ss
push
enter
scas
dec
fldenv
fstp
insb
mov
fdiv
loopne
and
jno
or
mov
jb
loopne
in
pop
push
push
cmp
pop
movsl
inc
imul
xchg
lahf
adc
je
adc
add
test
stos
push
and
dec
call
les
push
push
inc
mov
jge
out
daa
sub
lahf
cli
frstor
adc
mov
fsubl
and
cmp
aad
repnz
movsb
mov
dec
daa
cli
dec
gs
jl
inc
in
lret
push
ss
repz
popf
adc
lahf
cmpb
push
xlat
push
popa
adc
and
in
icebp
xchg
cwtl
cld
push
xor
inc
push
xchg
push
scas
inc
loope
int
inc
lret
shl
inc
add
push
mov
mov
fiadds
je
sbb
test
push
insb
adc
or
clc
xchg
cmp
jmp
jmp
jo
aaa
rcrl
or
popa
mov
lret
test
ss
dec
scas
xchg
jmp
test
xchg
push
push
fs
mov
hlt
mov
push
mov
nop
mov
mov
xor
mov
rolb
mov
mov
lcall
or
mov
xor
jle
inc
add
and
test
loopne
and
and
dec
add
push
scas
faddl
push
in
fists
ret
popa
dec
add
mov
test
pop
aad
push
mov
in
or
jnp
rcl
leave
je
push
jbe
enter
push
or
ret
lods
outsb
dec
adcl
rol
lds
cmp
lock
loopne
mov
mov
xchg
xor
adc
mov
lret
push
xchg
add
push
cwtl
xchg
out
inc
cmp
aaa
jns
adc
cld
inc
mov
xor
push
mov
stos
rcrl
xchg
push
js
cli
pop
lahf
loope
and
adc
pop
cmp
cmpsl
push
xchg
in
inc
mov
xchg
sub
scas
repz
and
movsb
mov
inc
fiaddl
or
mov
xacquire
subb
push
dec
push
dec
jo
add
mov
cltd
pop
lods
shlb
adc
jmp
push
sub
sub
sub
xor
add
inc
loopne
sbb
outsl
pop
lds
rcl
mov
sbb
ret
pop
subl
inc
in
lret
mov
adc
push
mov
sub
ret
push
mov
inc
mov
jae
or
in
pop
cmpb
mov
jne
ret
ds
xor
add
pushf
jno
pop
loop
loop
imul
adc
ds
cmp
mov
sub
sbb
jmp
or
jg
mov
xchg
adc
dec
clc
fisttps
ss
push
cld
xchg
cmp
push
xor
popa
or
orl
sahf
add
xchg
aas
xchg
cmpsb
sbb
es
jae
mov
pop
mov
mov
xor
fidivl
das
movsb
dec
jbe
dec
call
les
pop
jmp
or
jmp
xor
nop
iret
jb
add
mov
or
sarb
mov
cmpsl
mov
fldcw
enter
and
mov
add
push
xor
sbb
cli
jg
int
fidivl
out
rcrb
mov
movsl
dec
imul
lock
xchg
cmp
sub
mov
iret
and
decl
arpl
push
or
aas
fsub
shr
jno
in
mov
ret
sbb
push
ss
shlb
fiadds
test
add
leave
shll
or
loop
cmpsl
cmpsl
fsub
jge
jecxz
movd
fadds
call
and
and
adc
shrl
andb
xor
pop
cwtl
cli
in
call
pusha
mov
sub
and
jbe
data16
or
push
insl
inc
adc
inc
scas
movsl
rorl
gs
cmc
xor
enter
imul
mov
ja
xor
insb
nop
push
mov
cli
stos
pop
sub
out
daa
es
mov
sbb
inc
js
aam
xchg
iret
or
jo
fildll
mov
mov
cmp
rcll
and
push
popf
mov
sbb
mov
nop
push
outsl
xor
out
pop
test
sbb
cmp
cli
or
cld
jo
jmp
adc
mulb
cmp
rcrl
or
arpl
icebp
repz
jecxz
xor
je
sub
jae
jb
imul
pop
inc
inc
push
inc
rdtsc
inc
jo,pt
sub
inc
jb
aam
hlt
mov
jl
xlat
inc
mov
and
insl
sahf
outsb
jb
xchg
ds
mov
sbbl
popa
mov
or
ljmp
idivl
cmp
dec
pop
sub
inc
dec
stos
jbe
jmp
aaa
mov
test
sub
in
and
inc
mov
test
xor
rcrb
arpl
mov
mov
iret
push
inc
test
push
pop
xchg
imul
pop
mov
in
fidivrl
xor
mov
push
cs
mov
aaa
repz
loop
mov
push
lods
out
or
jge
inc
not
hlt
cmp
cwtl
add
sub
inc
sub
mov
add
mov
imul
mov
jg
fildl
adc
add
xchg
jns
push
xor
and
out
xor
fidivrs
out
xchg
push
dec
xor
stos
repz
sub
cmp
mov
sub
jae
aas
js
insl
imul
push
push
pop
pop
inc
xor
cmc
xor
jno
xor
subb
pop
xchg
lahf
xor
jae
fistpll
add
push
push
mov
mov
or
popf
or
pop
lcall
cmpsb
mov
mov
fdivrp
mov
mov
dec
adc
andl
sbb
out
mov
add
inc
and
ret
lds
fldl
pop
in
loope
dec
test
std
or
lcall
ret
pop
mov
data16
jne
mov
fidivl
aad
movl
or
dec
ja
lds
push
mov
inc
movsb
pop
int3
cmp
sbb
out
out
into
outsb
fidivrl
or
add
ret
add
mov
in
cmp
mov
cmpsb
sbb
addr16
scas
pop
adc
dec
sbb
dec
aaa
test
inc
mov
cmp
inc
inc
or
mov
sub
bound
jle
mov
rcrb
pushl
xchg
sbb
cltd
inc
clc
lea
les
pop
notl
bswap
rcll
add
jno
inc
xor
mov
daa
or
call
dec
dec
mov
xchg
push
mov
mov
rclb
push
pop
iret
fists
in
inc
adc
js,pn
push
repz
sub
aaa
mov
sub
aam
cwtl
loope
out
sub
fisttps
jno
enter
andb
or
push
xorl
jno
push
cmpsb
mov
stos
mov
adc
call
imul
cltd
icebp
adc
jg
jae
loope
aam
sub
sub
in
bound
push
loopne
adc
adc
jecxz
repnz
xor
insl
add
push
cltd
adcb
jnp
cmc
mov
sbb
inc
add
movsb
and
mov
test
testb
adc
rcl
mov
mov
stc
in
sbb
testl
movsb
aas
inc
fnsave
lahf
scas
js
scas
xor
lcall
ret
xchg
jg
xlat
lea
add
loope
jae
sbb
inc
pusha
cld
cmp
inc
lcall
pop
or
xor
xchg
je
lea
lds
les
aad
and
in
lods
mov
dec
and
mov
stos
xchg
or
loop
sbb
inc
mov
test
insl
imul
test
mov
mov
fdivs
cmp
pop
xchg
jle
xchg
pop
sti
dec
mov
mov
in
mov
repz
add
mov
sub
xor
mov
mov
int3
daa
push
pop
dec
xchg
jp
negl
rcrl
mov
mov
jae
push
xor
mov
xchg
xchg
adc
or
jmp
scas
cmp
sbb
push
arpl
mov
shll
loope
lahf
jns
negl
repnz
dec
lods
sub
fs
sbb
cmpsl
in
enter
inc
mov
cmpsb
or
sbb
push
sbb
arpl
mov
jne
mov
add
mov
pop
adc
dec
adc
stc
xor
ror
roll
scas
ljmp
sbb
and
data16
push
test
inc
push
mov
lret
push
pop
aaa
xor
scas
jge
rclb
pop
leave
mov
pop
cmp
test
mov
movsb
xchg
push
out
pusha
cmp
popa
lret
test
push
movsb
cmp
scas
ror
rorl
mov
jge
push
inc
test
mov
fistpl
sub
js
mov
icebp
add
mov
lods
outsb
loop
mov
xor
sti
aad
xchg
movsb
dec
icebp
mov
stos
inc
in
add
sbb
es
xchg
adc
jo
je
and
js
inc
mov
xchg
cmp
mov
jne
add
mov
mov
clc
sbb
jae
lret
and
mov
mov
adc
xchg
ret
xchg
pop
pop
pop
xor
fcompl
and
mov
movb
xchg
xor
sub
pop
test
arpl
mov
mov
inc
inc
push
in
sub
loop
and
adc
mov
lods
cmp
loope
test
push
push
sbbl
roll
cmp
insl
cmpsl
rolb
push
or
xor
repz
cmc
xor
int3
iret
dec
fs
cmc
hlt
lahf
sbb
cmp
dec
ficoml
pusha
scas
xor
les
xlat
les
add
push
adc
mov
bound
or
lahf
sub
sbb
call
stc
xchg
pop
push
ljmp
and
mov
add
cmp
push
inc
pop
js
jbe,pt
inc
mov
push
cmc
cltd
pop
add
aad
sbbl
mov
or
jp
inc
mov
pusha
sti
aaa
fs
push
pop
cld
push
add
incb
repnz
sbbl
lret
mov
icebp
mov
cmp
mov
imul
popf
cltd
push
dec
mov
sub
enter
xor
push
stc
adc
call
xor
cmp
xor
pop
pop
add
cmp
aas
adcl
adc
adc
push
xchg
or
and
in
add
popa
lock
fwait
xchg
mov
lret
dec
rorl
pop
out
dec
xor
dec
stos
shll
push
out
enter
shl
add
outsb
cmp
sub
mov
xchg
daa
or
das
enter
mov
test
sbb
out
or
pop
ret
fnstsw
arpl
cmc
es
call
fimuls
mov
pop
pop
adc
mov
insl
push
clc
adc
out
icebp
cmp
mov
dec
mov
lods
jecxz
jne
pop
dec
lock
lea
xor
mov
gs
insb
ljmp
je
jb
mul
mov
in
add
outsl
lods
flds
mov
add
adc
je
cld
jo
cmp
je
ficompl
jno
mov
enter
outsb
loopne
and
pop
jae
adc
sub
out
sbb
iret
call
sbb
in
mov
pop
add
repnz
dec
icebp
js
pop
mov
ret
arpl
sub
rcrl
out
adc
fs
push
mov
int
and
sarl
icebp
mov
movsb
jno
outsb
sbb
inc
stos
xor
cwtl
mov
pop
ja
inc
xor
jg
adc
inc
fdivr
in
insb
inc
sbb
and
lods
fsubrs
fcmovne
push
roll
and
add
inc
xor
andb
push
xor
orb
xor
dec
mov
cmpsb
push
mov
dec
pop
cltd
fs
test
aam
mov
icebp
mov
clc
adc
clc
push
scas
cld
out
ljmp
adc
dec
mov
and
sbb
arpl
sbb
into
fcompl
adc
mov
imulb
lahf
fisubs
and
testl
dec
test
xor
inc
mov
mov
mov
and
clc
xor
pop
movsb
imul
push
sarl
mov
call
stos
sub
stos
fcmovnbe
push
lods
in
cmp
scas
pop
idivl
insb
or
xlat
test
ret
movsl
daa
or
adc
fldcw
mov
push
enter
or
insb
das
mov
aas
fsubl
lods
out
idivl
or
pop
stc
popa
scas
repnz
pop
push
jp
loopne
dec
int
dec
nop
push
lods
and
lds
jae
pop
fcmovne
jmp
xchg
out
cmc
in
clc
inc
lds
nop
mov
jle
jbe
mov
enter
xor
insl
jle
xor
leave
aas
inc
aad
sub
mov
cmp
leave
cwtl
nop
lret
mov
pop
outsl
fdivs
cmp
insb
lret
scas
mov
dec
jo
icebp
test
scas
pusha
inc
loope
xchg
leave
or
push
add
popl
jle
cmc
jp
and
dec
dec
js
cmp
fmuls
bound
pop
mov
fisubl
jne
cwtl
jo
adc
jp
gs
je
xorb
adc
test
and
xchg
jmp
add
inc
nop
jge
stc
mov
in
add
add
aad
mov
fmul
and
fmuls
fs
and
sub
xchg
push
daa
lret
hlt
push
cmp
cmpsl
repz
mov
cmp
mov
call
inc
mov
mov
push
scas
js
sti
out
adc
push
enter
stos
jae
fnstcw
adc
lods
outsl
push
inc
jge
js
inc
jmp
inc
repz
sbb
lret
pop
popf
xor
sahf
jmp
fldt
dec
sbb
icebp
pop
out
cltd
inc
cmp
mov
cmp
mov
or
nop
or
mov
mov
cli
mov
dec
call
cs
xchg
js
cld
aaa
and
testb
mov
push
lock
movsb
call
add
inc
ss
jl
cld
jp
mov
jp
fs
jbe
adc
ret
rcll
mov
cltd
cmp
arpl
pop
mov
mov
cld
add
xchg
jae
or
shlb
aas
or
pop
andb
pop
in
jbe
negb
push
xor
jb
dec
mov
cli
ret
out
dec
subl
cmp
das
into
mov
lds
adc
cmpsl
pusha
dec
mov
pop
out
iret
inc
adc
in
lret
inc
sub
out
fcmove
jno
pop
andb
or
call
fiaddl
lods
imul
negb
pop
scas
jl
cmp
push
or
mov
pushf
mov
fcomps
scas
sbb
call
cmp
rolb
out
or
pop
loopne
sbb
xorb
stos
rcrb
les
cmp
push
ja
gs
xchg
ficoml
mov
mov
icebp
adc
ret
xchg
mov
aas
dec
inc
xchg
mov
cmp
fs
dec
and
dec
mov
je
xor
hlt
cmpsl
mov
mov
sbb
ficoms
add
out
dec
repz
add
lea
cmc
lock
scas
ret
push
push
lods
aaa
add
js
pop
mov
xor
push
call
xchg
xor
scas
inc
jo
mov
lods
insb
scas
int
in
mov
scas
mov
loopne
jecxz
inc
or
mov
and
xorb
out
scas
into
sub
adc
cs
ret
jnp
inc
mov
adc
xchg
mov
and
ja
add
sbb
push
cmp
imul
sbb
dec
fists
jns
sti
mov
call
mov
ss
push
ljmp
popl
movups
lret
outsb
dec
lret
pop
sub
pusha
fstl
mov
pop
or
lahf
add
add
adc
adc
dec
mull
loop
mov
ss
repnz
enter
lret
hlt
loopne
sub
or
out
mov
sub
hlt
sub
mov
xchg
and
push
xor
xchg
in
pop
and
fisttpl
lock
xor
mov
and
repnz
mov
outsl
nop
pop
dec
xchg
mov
testb
mov
stos
ret
xor
push
cli
sub
loop
daa
popa
or
xor
push
xchg
repz
cmp
inc
stc
dec
mov
mov
sarb
ds
pop
ret
inc
push
std
jb
push
jo
fs
inc
scas
mov
orb
cli
fwait
test
and
jg
fsubr
movsb
es
inc
adc
pop
xchg
push
inc
xor
and
das
stos
push
adc
in
adc
cltd
jae
lret
ret
insb
inc
xchg
aad
jecxz
mov
sbbl
dec
out
fnsave
jg
leave
push
addb
cmp
rolb
outsl
sub
ret
jmp
jbe
movsb
addb
fldcw
cmp
out
cmp
xchg
xor
push
frstor
cmpsl
push
cmp
jmp
sub
aam
ret
inc
xchg
fwait
push
in
ja,pt
pushl
and
les
pop
mov
xlat
or
test
mov
mov
arpl
fdivr
sbb
add
fcmovnb
dec
mov
sbb
jbe
clc
jp
and
rcrb
cmp
push
repnz
out
adc
pusha
push
lcall
push
dec
push
imul
call
shl
jbe
and
stos
fisubrs
pop
int3
push
cmp
or
jb
mov
adc
loope
fldl
xor
shl
inc
inc
daa
cmp
pop
jmp
push
cmpl
inc
sub
and
mov
pusha
mulb
icebp
js
les
divl
sub
cs
jb
sahf
out
fistpl
and
pop
xor
or
cmc
pusha
mov
mov
loope
arpl
bound
push
into
call
jbe
outsl
xchg
xchg
push
jp
sub
push
sbb
subb
push
arpl
stc
inc
lds
mov
loop
or
mov
or
pop
dec
push
xchg
jbe
or
and
cli
rolb
rcrl
sub
mov
out
sbb
pop
movsl
xchg
push
sti
mov
out
dec
negl
push
hlt
enter
xor
test
cwtl
gs
xchg
insl
inc
jo
hlt
pop
or
ret
jp
call
addr16
es
jp
sub
jnp
inc
stos
xor
rorb
arpl
mov
or
xchg
dec
or
mov
adc
sbb
push
fisubs
sbb
xor
mov
sbb
mov
das
push
and
xchg
sbb
cwtl
sbb
jbe
sub
or
negb
push
push
stos
ja
subl
mov
loopne
das
pop
dec
test
push
push
imul
enter
pop
sbb
test
push
ja
das
sahf
repz
and
xchg
inc
outsb
add
lock
dec
mov
or
pushf
mov
lds
dec
icebp
inc
and
pop
sahf
adc
jmp
out
jo
push
sbb
and
fbld
mov
and
or
add
das
add
pusha
jae
arpl
sbb
in
arpl
push
jo
jbe
adc
test
negb
push
xor
xlat
sahf
mov
pop
call
cmp
mov
lock
sarl
mov
dec
rcrb
dec
sar
das
push
or
js
outsb
cmc
lods
sbb
add
inc
jmp
cmp
mov
pushf
adc
je
and
inc
dec
pop
loopne
push
cld
andl
into
popf
cmp
leave
cmp
cmp
enter
inc
cmpb
xor
inc
jp
add
lods
jecxz,pn
inc
xor
fwait
aad
xor
pop
in
inc
int3
add
stc
std
adc
mov
and
sbb
pop
xchg
jo
std
aaa
xor
mov
mov
stc
sbb
cmp
or
add
es
movsl
xchg
or
out
lods
test
imul
pop
mov
sub
mov
add
cmp
pop
in
dec
mov
out
sbb
aad
pushf
mov
sti
in
movsb
add
popa
mov
adc
sbb
aas
xchg
and
rolb
mov
lock
ds
push
popf
insl
mov
xor
sahf
js
cmp
xchg
mov
pop
std
adc
push
mov
shrl
push
cs
xor
push
sbb
mov
iret
lahf
cltd
sub
pushf
mov
pop
out
popa
jg
cmp
icebp
stos
push
test
fldl2t
jmp
pop
push
xchg
mulb
call
int
loop
push
pop
idivb
and
cltd
cwtl
mov
sahf
loope
push
mov
push
dec
pop
loope
cmp
cmpsb
sbb
stos
cltd
sub
dec
push
lods
imul
movsl
adcb
add
sub
clc
cmp
js
pop
add
lcall
cwtl
ljmp
add
ret
mov
loop
xor
inc
sbb
pop
mov
xchg
cmp
stos
inc
jle
in
ss
cmp
adc
inc
xor
sahf
clc
sub
cltd
popf
ret
bound
xchg
enter
aas
mov
and
lea
pop
dec
pop
loop
adc
arpl
movq
shrl
adc
adc
loope
xchg
dec
not
dec
jp,pt
pop
jb
mov
negb
ficoms
das
sar
lahf
and
lahf
push
sub
xor
divl
lds
add
xor
jmp
lods
and
mov
sbb
or
or
or
pop
jg
loopne
loope
mov
call
sbb
xchg
xchg
mov
jo
out
imul
dec
push
inc
aas
out
andl
mov
ret
lods
sub
push
sbb
xor
mov
push
or
clc
pushw
fdivl
xchg
pop
push
adc
repz
xchg
mov
and
and
fldt
into
pop
sbb
imul
lret
cwtl
adc
mov
insb
addr16
xlat
arpl
pop
and
icebp
and
xor
shr
cmp
mov
stos
addr16
insb
cmp
xor
arpl
insb
cmp
clc
pop
add
popa
loope
fiaddl
push
fidivl
adc
mov
ret
push
fisttpll
mov
call
iret
imull
fiadds
test
jae
xor
cmp
dec
cmp
rcl
lret
xchg
ficoml
leave
push
inc
fwait
jne
and
add
mov
cmpsl
mov
xchg
imul
les
sbb
or
xorl
cmpb
pop
jmp
and
es
jl
push
cmp
ljmp
movsl
cwtl
xor
jecxz
filds
push
and
or
addr16
xchg
in
clc
jp
aad
push
insb
fistps
enter
mov
inc
faddp
mov
inc
jp
xor
loop
movsb
repnz
fcompl
mov
hlt
sar
lahf
mov
pop
loopne
loop
jg
aas
ret
sti
sbb
adc
jbe
inc
ficoms
jge
pop
gs
xchg
adc
jge
cmc
aaa
adc
scas
mov
shlb
imul
mov
jo
xchg
or
mov
imul
adc
ret
lret
rolb
insl
ds
in
and
or
or
cmp
cltd
sub
fistl
mov
movb
loopne
add
fcompp
or
leave
call
or
fsubs
pusha
mov
cwtl
ret
adc
sbb
or
and
sub
push
icebp
push
repnz
adc
fcmovnb
call
insl
inc
ss
repz
mov
pop
pop
sub
xchg
add
mov
out
sahf
sub
jp
test
jg
dec
mov
mov
sbb
mov
jle
xor
ficoml
cmpl
inc
sbb
cli
imul
adc
or
jo
inc
mov
adc
xchg
xor
add
pop
pop
pop
mov
loopne
nop
xchg
jbe
and
in
mov
pop
mov
dec
cltd
je
xchg
push
ja
add
cmp
push
sub
frstor
ja
and
dec
loop
ret
mov
pushf
pusha
xchg
pop
out
xchg
and
xchg
stc
mov
jge
loop
mov
pop
mov
ds
xchg
mov
dec
int
adc
xor
shlb
loopne
sbb
je
scas
cmp
jne
aam
js
gs
arpl
mov
sub
rclb
fidivs
fstpt
cwtl
dec
pop
or
pop
xor
mov
dec
mov
dec
jp
inc
out
and
or
xchg
mov
jecxz
pop
and
mov
add
lahf
movsb
iret
inc
ss
insb
cld
push
and
xor
addr16
stc
notl
cmp
xor
jmp
sub
mov
jl
shll
adc
cmpsl
movzbl
stos
test
inc
cli
andb
shrl
je
jbe
sahf
pop
xor
mov
xor
mov
mov
xchg
fdivs
push
sub
adc
or
jge
mov
fistpll
imul
mov
xchg
aad
jbe
pop
xor
jge
xchg
cmp
dec
xchg
mov
int
or
xor
dec
cltd
cmp
pop
loope
lahf
ss
flds
lods
push
jl
jmp
ljmp
push
xchg
sahf
pop
movsl
push
xchg
adc
inc
hlt
jle
in
in
mov
and
rcrl
push
mov
lods
lods
push
pop
inc
shlb
sbb
ds
sbb
mov
pop
and
repnz
loopne
xorl
and
mov
or
mov
sahf
out
jmp
and
xor
inc
mov
sahf
es
jmp
adc
sbb
sub
stc
xchg
sti
dec
push
shlb
inc
je
idivb
popa
call
jno
gs
sub
mov
ja
pop
test
xor
mov
aad
xor
mov
dec
dec
cmp
out
push
and
sbb
shr
loope
xor
mov
jp
mov
jb
mov
dec
mov
push
mov
out
push
lret
mov
adc
das
inc
pushl
push
fcomps
jge
pop
mov
jecxz
in
and
cmp
cli
xchg
inc
or
mov
sub
push
outsl
cmpsl
xor
mov
sti
mov
add
pop
jle
scas
addr16
roll
push
pop
lret
mov
xchg
cmpl
pushf
push
aas
jmp
sbb
orl
mov
xchg
or
pop
mov
mov
movsb
ljmp
movsl
dec
adc
popf
dec
sbb
jp
add
es
mov
push
cmpb
out
xchg
outsb
xor
pop
imul
fcompl
and
cli
out
push
int3
imul
mov
adc
add
pushf
jge
add
sub
sub
bound
adc
std
lds
jmp
fwait
xor
mov
aaa
incl
loop
xchg
adc
pushf
inc
insl
cld
es
dec
sub
pop
in
pushf
push
cli
pop
clc
xor
ds
jle
clc
cmp
pop
cmpsb
jle
repz
jbe
bound
xor
jp
ss
xchg
nop
aad
pop
scas
and
pop
pusha
outsl
mov
pop
neg
int
dec
pop
fsubs
add
loop
icebp
sub
int3
add
loopne
aas
xor
sub
shll
sub
mov
pop
mov
data16
xlat
sbb
aam
jle
mov
inc
mov
fwait
push
test
mov
imul
jne
das
daa
mov
sub
hlt
mov
push
loop
sub
inc
and
jp
lods
iret
mov
ss
add
fidivrl
add
inc
cmc
dec
add
xor
iret
xor
sub
jo
cltd
push
push
lret
jge
lahf
cld
dec
mov
test
push
push
sub
sahf
add
ja
fldl
pop
pop
loop
je
cmpsl
cmpsb
jbe
adc
fs
mov
mov
fs
lock
push
std
outsl
and
pop
nop
dec
and
cmc
mov
movsb
dec
or
and
inc
add
leave
jo,pt
or
jp
adc
push
int3
fsubl
xor
inc
bound
cmp
sarb
push
push
aas
push
inc
outsl
ss
mov
into
mov
adc
fldz
jp
in
nop
pop
adc
dec
mov
sbbl
mov
jp
mov
rcll
aas
aas
loope
inc
mov
xchg
mov
xchg
sahf
ss
das
xlat
jg
lcall
shll
mov
inc
aaa
sbb
adc
jg
in
jae
push
mov
sarl
mov
xchg
xrelease
popa
outsb
mov
cmpsl
inc
stos
pop
mov
cli
jge
xchg
xchg
push
lds
loopne
mov
xchg
out
daa
mov
mov
fdivrs
jle
cs
lahf
es
mov
loope
mov
mov
cmpsl
dec
mov
sub
addr16
push
ljmp
dec
int3
push
je
fnstcw
sbb
cli
fildl
fistps
ljmp
jle
enter
jge
xchg
add
mov
int
jmp
fldt
add
adc
mov
or
insl
or
loopne
jg
mov
lds
adc
orb
inc
mov
outsb
leave
shll
lcall
sbb
sub
jle
fmull
jne
in
or
fwait
pushf
lahf
mov
mov
xchg
dec
add
hlt
mov
jno
sub
mov
sbb
dec
loop
cmp
push
sub
popf
imul
cltd
jb
sar
or
imul
rcl
push
in
and
jl
mov
insb
adcl
push
jae
data16
shlb
mov
out
adc
hlt
mov
pop
rep
dec
shll
adc
push
fadds
dec
outsb
xchg
jno
daa
sahf
pusha
test
outsb
int3
mov
inc
sub
xorl
dec
imul
in
dec
add
inc
mov
sbb
hlt
movsb
mov
lret
xlat
mov
lcall
cmpb
push
jl
fs
stos
stos
lods
lahf
clc
clc
mov
jl
das
mov
lahf
fs
add
push
cmc
notb
sbb
movsb
cmp
jle
rcll
sub
add
fiaddl
sub
movsl
or
adc
mov
sub
push
loop
popf
lds
xor
shrb
mov
fdivs
and
xor
mov
aam
lods
push
inc
push
stos
cmpsl
cmp
xlat
push
xor
neg
xchg
cmp
fadd
lock
mov
imul
xlat
idiv
pop
inc
daa
in
fwait
test
std
jb
push
xchg
or
negl
dec
out
or
xchg
test
dec
addr16
insl
rorb
mov
aaa
jl
js
push
mov
out
cmp
mov
sbb
cltd
push
cmpsl
or
xchg
mov
fcompl
push
mov
in
xchg
shl
shrb
cs
sarl
cmp
roll
sub
andl
out
fsubs
sbb
adc
adc
adc
aam
mov
or
pushf
ret
int3
xchg
xchg
sub
fwait
mov
subl
or
xor
mov
mov
pushf
cmp
push
jb
sub
mov
jl
push
stos
rolb
mov
ret
cmp
cld
popf
inc
andl
push
jge
int
and
mov
pop
jne
jno
stos
xlat
shlb
and
in
or
shrb
ds
test
xchg
out
pop
push
sbb
xchg
inc
mov
das
test
mov
inc
add
jg
sti
xor
dec
pop
jmp
inc
or
push
aaa
stos
test
or
addb
cmp
ror
or
jbe
push
jns
sbbl
jb
mov
imul
lods
cmpsl
icebp
imulb
push
sar
jb
dec
in
xor
clc
popf
movsb
mov
shlb
lock
xor
ficoml
xchg
sub
pop
cwtl
inc
sbb
movsl
push
inc
fldl
push
int3
or
pop
enter
test
cmp
sbb
cs
cmpsl
xchg
adcl
sarl
jbe
dec
insl
mov
arpl
sti
lahf
in
repz
cmp
bound
push
lods
jecxz
adc
test
gs
pop
fs
mov
jo
xchg
lret
fsubs
mov
add
cmpsl
sbb
out
out
pop
jg
push
rcrl
jbe
rcrb
ret
rcrl
fdivl
mov
test
fisttpll
repnz
and
cld
cs
out
int
xlat
sbb
arpl
mov
adc
add
loop
inc
adc
fdivl
adc
call
push
push
test
loop
insb
cmp
mov
jmp
inc
fnstsw
pop
stos
jl
cmp
lds
gs
dec
xchg
jae
roll
inc
sbb
pop
ljmp
sub
mov
loop
loope
mov
aad
xchg
out
scas
lods
push
rcll
add
js
cmp
or
push
inc
push
xchg
leave
into
cmc
dec
cmp
jno
cld
push
ret
mov
in
dec
shlb
fiaddl
mov
loop
sbb
insl
sbbb
loop
lret
outsl
iret
add
insl
inc
scas
out
enter
cmp
and
int
mov
and
sti
push
mov
add
bt
adc
lock
ret
das
jle,pn
jmp
xor
jbe
aaa
mov
xchg
and
inc
cmp
daa
sbb
pop
mov
sbb
jb
lods
add
xchg
mov
lock
stos
adc
mov
ja
sub
leave
jo
cli
jmp
lds
push
call
test
xchg
icebp
jg
decl
dec
int3
nop
cmpsb
mov
cwtl
popa
repnz
mov
sarl
das
mov
sub
ja
cld
push
bound
dec
push
adcl
repnz
mov
addb
mov
dec
xchg
inc
jns
shrb
push
push
pop
pop
lock
xchg
popa
sub
mov
xchg
cmp
mov
sbb
mov
sbb
add
lret
cmp
fs
mov
dec
mov
daa
ja
fwait
cwtl
sub
fld
lds
mov
cmp
insl
out
xor
ljmp
mov
mov
test
inc
loope
adc
mov
hlt
adc
adc
jne
mov
mov
icebp
or
lock
mov
mov
fmuls
outsl
iret
orb
pop
test
mov
repz
call
data16
inc
enter
mov
bound
mov
iret
xor
add
mov
push
das
xchg
pusha
aad
adc
inc
repnz
in
inc
add
pop
sbb
or
ret
inc
add
or
mov
add
out
push
cli
imul
push
cwtl
xchg
jge
cmpsl
popa
jmp
sub
aas
mov
dec
js
cld
stc
inc
stos
ret
popa
pop
jp
into
mov
add
pop
enter
ljmp
ss
cmp
in
mov
push
adc
sub
cltd
mov
punpcklbw
xor
jbe
mov
push
mov
jge
fwait
pusha
or
adc
lds
push
mov
mov
out
imul
sar
cmp
adc
stos
loop
imul
cmpsb
dec
in
fimuls
mov
addl
fsubr
mov
dec
push
imul
shlb
out
out
cli
and
dec
xor
jb
push
mov
out
jb
push
daa
adc
xor
imul
mov
sbb
cmp
and
fnstenv
enter
adcb
idiv
or
sub
pop
inc
arpl
mov
out
mov
jae
jnp
and
lar
jnp
cld
xor
add
iret
or
mov
sbb
add
xlat
out
lods
test
daa
in
fwait
cmpsl
lret
popa
repnz
jns
orl
into
sub
ds
cmp
into
mov
mov
lret
and
mov
shrl
xchg
adc
lcall
sahf
dec
lods
jp
or
ss
fsubrl
shrl
xchg
or
xor
or
adc
push
xchg
add
lret
mov
xchg
out
mov
xor
push
xor
pop
scas
mov
jns
inc
cmp
jno
lods
sbb
into
pop
cmpsb
mov
mov
xchg
push
add
inc
or
in
mov
pop
rcr
arpl
clc
movsb
inc
ret
pop
shll
xor
sub
es
adc
pop
dec
sub
outsb
nop
push
outsl
inc
std
nop
cs
fstps
push
test
cmpsb
sahf
fsts
inc
mov
xchg
or
jl
shrl
ret
cld
or
icebp
repz
or
test
test
inc
out
sahf
test
lods
and
sbb
lret
fs
cs
test
xchg
pop
inc
cli
xchg
in
fs
mov
mov
sub
dec
fsts
shlb
pop
loop
out
sbb
hlt
fistl
push
movsl
adcl
popa
adc
sub
test
pop
fnstenv
ljmp
pop
cmc
adc
scas
jbe
cmp
out
bswap
test
cli
arpl
test
xorb
incl
das
sbb
idivl
movl
cltd
jmp
clc
xchg
mov
insb
xlat
imul
sbb
pop
das
lock
repz
stc
fwait
xor
add
jg
test
pop
lods
or
push
sbb
and
jnp
cli
mov
lods
repnz
push
cltd
jl
mov
xorb
push
cld
or
aad
in
dec
dec
push
lods
xor
pop
mov
or
mov
inc
jo
xchg
and
xchg
out
push
dec
cltd
push
call
into
fisubrl
loope
ror
daa
jno
cmpsb
mov
jge
mov
mov
es
aad
xchg
jp
or
lea
ret
push
or
or
jle
xor
cltd
lock
fisttpll
loop
inc
sbb
inc
adc
sbb
addb
adc
rcrb
lods
push
lock
jge
cld
outsl
scas
les
leave
xchg
mov
in
repnz
into
sbb
add
int
dec
cld
mov
int
or
lock
push
in
loope
hlt
ret
fcmovu
mov
mov
into
stc
shl
test
movsb
std
lds
sub
pop
roll
std
sahf
pop
inc
sbb
pop
insl
sbb
aad
jno
xchg
mov
addr16
adc
xchg
ds
xchg
jns
imul
lea
xor
rcl
loop
icebp
mov
rcrb
dec
rorb
xchg
push
dec
sub
xor
mov
pop
jecxz
aad
addl
jmp
inc
fidivl
and
mov
pop
mov
mov
pop
xchg
add
pop
icebp
mov
xor
cmpsb
add
mov
stos
cmp
imul
in
pop
scas
filds
divl
xor
mov
push
xchg
test
adcb
int3
or
mov
fsubs
pop
mov
int
test
rclb
xchg
jns
add
loop
rorl
sbbb
mov
testb
inc
push
push
add
push
cmpl
mov
mov
cmpsl
cmp
imul
js
dec
fcoml
addr16
gs
and
pushf
add
ds
hlt
das
roll
mov
les
cld
imul
mov
pusha
nop
inc
testb
lock
xchg
loop
stc
cmpb
jl
or
je
outsb
dec
enter
icebp
jecxz
repz
fisubl
ja
and
xor
push
rorb
jmp
int
popf
cmc
cmp
sbb
or
pop
xor
test
out
test
xor
nop
fnstsw
aad
addr16
jmp
and
adc
dec
inc
in
loope
sbb
or
insl
lret
stc
push
lods
pop
imul
mov
push
push
cmp
sub
call
jbe
jp
outsl
mov
adc
cmc
xchg
cmc
mov
add
adc
out
gs
bnd
push
call
fstps
in
pop
gs
repnz
push
icebp
sahf
or
dec
adc
lret
cmpsl
addr16
in
leave
add
ljmp
not
mov
inc
les
mov
or
inc
add
mov
mov
aas
push
jae
pop
xor
movsl
cmp
lcall
fimuls
push
adc
adcl
sbb
inc
stc
in
sarb
push
pop
and
aad
jo
js
xchg
xor
fisubs
fstl
sub
add
imul
sti
hlt
mov
inc
jmp
mov
out
stos
xor
add
xchg
sti
js
sub
sbb
inc
xchg
inc
gs
js
cwtl
out
ja
clc
jl
mov
mov
in
cmp
cmp
adc
dec
movsl
push
sub
mov
cltd
mov
fwait
or
push
jb
cwtl
jp
cmp
pop
call
and
push
cltd
daa
fcomps
or
in
xor
test
xor
loop
test
nop
and
fstp
leave
mov
push
int3
mov
sbb
in
and
insl
mov
stc
out
ret
cmp
and
test
pop
std
jbe
jmp
fmull
leave
aaa
aas
mov
jg
xor
push
inc
shll
xchg
adc
movsl
fsub
leave
mov
repz
jbe
mov
mov
loopne
and
cwtl
xchg
les
mov
lahf
cmp
in
jge
mov
lock
aaa
imul
xchg
test
or
and
dec
repz
sub
insb
aas
loop
cwtl
lret
inc
inc
dec
dec
popf
clc
add
ret
pop
inc
sub
mov
pop
mov
mov
xor
stc
out
loopne
scas
pop
adc
sub
mov
mov
mov
sbb
cmp
call
dec
jo
movsb
xchg
imul
insb
das
fwait
mov
fistpll
jno
mov
addr16
mov
shr
pop
scas
inc
lods
bound
fdivp
das
leave
mov
inc
cs
xchg
leave
js
sub
pop
mov
inc
iret
add
lret
mov
pop
mov
ds
xchg
mov
inc
xor
movsb
loope
pop
or
iret
fsubl
add
xchg
lret
xlat
xchg
orb
lcall
out
lahf
push
push
lahf
out
mov
mov
xchg
cmp
out
lcall
pop
ss
fsubrl
ja
stos
push
jne
outsl
scas
cmp
jge
adc
loop
xor
mov
icebp
ret
movsl
xchg
imul
or
dec
inc
sbb
cmp
out
std
pop
fsubs
ds
das
outsl
outsb
gs
lcall
popf
xor
test
in
cltd
jp
dec
insb
adc
lock
xor
or
mov
dec
js,pt
xchg
das
sub
pop
push
cmp
push
aad
jge
inc
and
imul
xor
dec
sbb
push
fiaddl
out
leave
fmul
aad
xor
dec
out
jle
insb
fistpl
fucom
push
in
jmp
outsl
outsl
js
popa
mov
xchg
jnp
out
in
mov
lret
loope
mull
xchg
insl
addr16
in
sub
jge
fistl
push
rolb
mov
pop
inc
in
pop
in
or
ret
xchg
mov
pop
pusha
sti
aas
mov
cmp
les
sbb
cmc
rcrb
lcall
rclb
fsubr
int3
imull
inc
dec
fs
and
inc
js
push
and
mov
cmp
mov
pop
cmp
xor
xchg
je
setne
mov
pop
push
jo
ret
mov
cmp
addr16
push
repnz
gs
ds
xor
hlt
cmpsb
add
mov
dec
xor
mov
lret
imul
leave
mov
sub
inc
ljmp
xchg
mov
push
das
mov
mov
sub
mov
pushf
xchg
in
cmpsl
cmp
insl
lods
mov
push
push
cmp
lds
adc
jo
mov
pcmpgtd
iret
xor
cmpsl
leave
or
pop
push
xchg
loop
pop
popa
xor
call
xchg
xchg
out
sbb
bound
repz
mov
jno
xchg
fmull
dec
xchg
int
dec
lcall
push
jno
dec
aad
shrb
push
cwtl
sub
and
int
adc
dec
das
add
sbb
or
jo
push
out
lds
jle
adc
lcall
mov
add
icebp
push
movsb
adc
fstl
add
xor
rclb
loope
mov
loop
sbb
sub
lods
xchg
aas
sbb
mov
sbb
mov
lods
sub
and
in
add
jg
cmpsl
push
xor
in
mov
in
xchg
scas
pop
mov
xchg
into
mov
gs
or
mov
ljmp
inc
mov
stos
jmp
movsl
xor
fiaddl
es
xchg
cmp
les
popf
pop
insl
fildl
xchg
daa
inc
mull
xor
call
pop
push
xchg
pop
int3
or
xchg
push
jae
fs
xorl
sbb
rcl
repz
cmp
call
or
jo
out
push
sar
or
push
out
inc
jg
or
cmpl
imul
jmp
mov
popa
and
add
shll
jbe
bound
sub
mov
xchg
mov
mov
add
cmpsb
mov
inc
xlat
add
dec
lods
mov
pop
js
js
les
shll
jp
add
daa
mov
pop
sti
fcompl
into
outsb
dec
jnp
cmp
dec
xor
arpl
dec
les
cmp
or
sub
lock
xor
add
call
pop
pop
sub
push
scas
rcll
dec
call
sub
lock
mov
dec
movsb
sub
in
sbb
addr16
mov
cmp
ljmp
fisttpl
sub
shll
aas
rorl
inc
push
lret
dec
xorb
sarb
pop
cmp
cwtl
rcll
adc
adc
inc
and
sbb
mov
cmpsl
push
test
scas
sti
rolb
jmp
scas
adcl
xchg
sarl
jne
adc
adc
adc
cli
jne
push
lret
mov
test
cmp
aas
insb
dec
mov
jmp
sahf
jp
sbb
mov
push
rcll
ja
or
ret
mov
enter
cld
outsb
or
int3
jmp
mov
leave
cmp
dec
fnstenv
out
push
out
lahf
mov
mov
or
mov
add
jp
es
std
jbe
adc
shrl
shl
or
push
sbb
dec
xorl
mov
loopne
dec
push
sahf
jns
jno
insb
jne
mov
pusha
push
lcall
das
xlat
dec
inc
out
das
sbb
fdivl
mov
mov
mov
ljmp
dec
mov
mov
jb
and
mov
push
dec
cli
cmp
and
adc
mov
int3
push
pop
sub
or
repnz
mov
stos
or
int
testb
cmpsb
sub
insb
inc
xlat
bound
pop
stos
adc
mov
or
aad
test
pusha
sub
ds
jnp
mov
pop
jmp
cmc
xchg
dec
das
bound
pop
sub
cmp
mov
push
add
fstl
sbb
mov
ljmp
dec
mov
cmp
or
les
iret
leave
inc
icebp
rcll
loope
outsl
pop
daa
add
mov
inc
adc
cmpsl
and
xor
mov
sub
sub
das
cmc
mov
mov
cld
fcoml
mov
popl
out
icebp
or
jmp
add
xor
sti
adc
push
fdivs
test
sbb
adc
ss
mov
divb
adc
imul
mul
xchg
jle
xchg
adc
or
or
xor
fcomps
dec
push
data16
xchg
jo
hlt
inc
sub
mov
iret
std
and
bound
not
nop
push
cmpsb
iret
out
ss
jmp
sbb
mov
and
cmpsl
xchg
les
xlat
shrl
bound
xlat
mov
cmp
inc
push
repnz
test
inc
pushf
cs
jg
in
imull
out
mov
push
jo
sbb
fs
stos
mov
sbb
insb
adc
cmp
xor
xor
in
fstl
pop
xchg
ret
xchg
test
cmp
cwtl
sub
in
popa
nop
add
adc
cmc
movl
lock
mov
enter
and
xor
int
aam
dec
sub
pop
negb
or
je
scas
cli
out
mov
add
mov
mov
pop
push
adcb
dec
test
cmp
aaa
xlat
sti
jb
stc
fcom
sbb
cmc
xchg
add
mov
add
sub
mov
repnz
fs
outsl
fwait
sbb
lret
mulb
dec
dec
mov
addr16
stc
out
ja
pop
inc
ret
arpl
popa
sbb
sar
stos
jnp
out
into
mov
inc
pusha
pop
fdivl
xchg
out
jecxz
sbb
mov
adc
inc
inc
mov
std
mov
push
mov
outsb
popa
popf
jecxz
movb
fsts
idivb
jmp
into
xchg
adc
cmp
cmp
cmp
mov
push
xchg
repz
xchg
push
scas
sbbl
sti
mov
add
loop
js
mov
aam
dec
pushf
mov
or
adc
xchg
neg
mov
sub
cmpsl
pop
jl
cmpsb
stos
les
adc
lret
jecxz
push
js
daa
inc
jnp
into
xor
jmp
stos
pop
enter
cmp
es
xchg
pop
mov
mov
shl
mov
mov
insb
clc
cmp
mull
nop
jmp
pop
jo
add
jb
fs
ret
adc
rorl
add
mov
jecxz
out
jecxz
imul
nop
add
pop
movsl
lret
call
repz
flds
or
cmp
or
push
push
iret
scas
in
mov
inc
sti
push
loopne
in
sub
jns
sub
stos
mov
pop
enter
cltd
xor
aad
or
push
mov
mov
mov
int3
xor
mov
je
jle
leave
push
out
add
inc
lret
cwtl
lahf
xchg
cli
loopne
inc
or
and
sbb
js
jp
mov
pop
std
jno
jmp
cmpsb
lahf
js
cs
lods
or
jl
xor
imul
in
push
mov
cld
mov
jbe
dec
mov
std
roll
sbb
cmc
adc
ss
mov
mov
out
jecxz
xor
push
js
pop
xor
xorl
push
push
je
add
scas
aad
pop
push
adc
iret
fs
mov
mov
scas
lea
xchg
dec
cmp
push
xor
mov
pop
push
stos
imul
fisttps
or
cld
jb
push
into
insb
cmc
data16
sti
push
movsb
inc
sub
sbb
mov
mov
pop
out
jbe
inc
stos
and
xchg
loope
lret
jp
adc
pop
mov
sub
in
scas
xchg
xchg
inc
jno,pt
mov
mov
fidivrs
imul
fists
out
push
mov
xchg
xchg
outsl
lret
push
jo
negl
push
pushf
cmpsl
rcrl
incl
mov
fxch
repz
push
push
sbb
push
das
or
xor
sbb
pusha
cli
sub
loope
cmp
and
stc
pop
cmp
mov
mov
and
test
repnz
addr16
pop
add
adc
int
mov
mov
arpl
js
fisubrl
xchg
mov
rorb
insl
pop
push
mov
and
jle
loopne
push
sarb
out
into
inc
jle
jnp
mov
int
cmp
lret
sub
ficoml
loope
xchg
loop
repnz
fcoml
fisubs
sbb
mov
sarl
sbb
std
jg
or
cs
jmp
xor
push
mov
pushf
lret
mov
ja
rcrb
jb
rorl
scas
pop
and
cmpsb
loope
xchg
jae
sbb
xchg
push
rcl
pop
sbb
mov
dec
sub
in
mov
sarl
daa
inc
cmp
and
shr
pop
aaa
test
pop
xor
fdivs
aam
push
ret
jle
sub
or
sbb
add
in
shrl
je
sbb
adcb
ds
sbb
stos
pusha
shll
add
lahf
xchg
repz
adc
add
push
and
mov
loop
add
inc
sbb
out
cli
adc
lret
cmp
add
push
cmp
aas
and
pop
mov
jbe
filds
mov
movsl
mov
orl
iret
pop
enter
imul
movsl
sub
cltd
dec
push
push
pop
ficoms
addr16
xchg
cmp
sar
xchg
pop
jns
mov
add
inc
sbb
idivl
xchg
scas
out
iret
aaa
cmc
sbb
mov
push
mov
mov
addr16
pop
jmp
mov
push
xchg
sbb
out
insb
insl
mov
cmc
adc
sbb
stos
sbb
data16
bound
outsb
jge
mov
imul
in
xor
scas
cmp
in
push
xor
fnstenv
push
adc
fidivs
lahf
dec
test
leave
stos
mov
or
and
push
jae
scas
fidivl
sub
pop
in
outsb
fidivs
rolb
xlat
imul
clc
subl
sub
cmp
loop
push
lds
imul
ja
aas
jecxz
out
mov
popf
in
out
movsb
pop
mov
clc
insl
aad
test
imul
xor
jns
mov
inc
lcall
lret
pop
adc
pop
das
ror
insb
das
scas
test
fisubl
icebp
add
inc
test
lds
push
loope
into
loope
fistl
stc
dec
sub
or
xor
push
or
inc
nop
push
push
mov
enter
xor
test
cmp
pop
fnstcw
xchg
lcall
out
jno
loope
and
into
jl
repz
and
mov
pop
mov
xchg
mov
out
sub
divb
xchg
add
mov
mov
into
mov
adc
movsl
cwtl
add
xor
adc
es
loopne
lret
adc
aaa
lahf
fwait
div
adcb
pop
jle
add
push
out
sbb
int3
xchg
fiadds
mov
fwait
inc
cltd
mov
xchg
pop
dec
pop
inc
mov
lds
pop
sbb
xchg
or
jne
divl
shrl
aas
mov
sbb
ret
pop
imul
cmp
lret
push
mov
in
xchg
sbb
mov
fldl
jne
daa
dec
jno
jp
xor
add
xor
xchg
pop
int3
ljmp
lock
xchg
or
sub
ds
shrl
dec
or
scas
cmpsl
mov
or
sbb
jnp
cli
push
ret
mov
xor
xlat
push
or
jnp
mov
xchg
aam
cmc
movsb
test
sti
ljmp
pop
inc
imul
outsb
cmp
andl
rolb
gs
imul
sub
jo
cmpl
push
inc
push
jns
aam
mov
ret
pop
pop
cli
aam
pop
push
lock
pop
jne
sub
jecxz
mov
push
in
push
push
addb
sub
jl
sbb
mov
add
xchg
push
mov
dec
sahf
jnp
test
stos
sub
mov
jnp
xor
mov
push
pop
das
out
jbe
bound
sub
jmp
and
mov
ret
rcrb
and
loopne
stc
loop
xor
sub
cs
xchg
and
loop
cltd
xor
divl
fldcw
cmpsb
subb
push
mov
xor
or
or
dec
mov
das
fbstp
jo
pusha
dec
test
rcl
mov
adc
mov
enter
cmp
ss
in
hlt
add
idivl
dec
mov
jno
cmp
fyl2xp1
mov
es
movsb
mov
outsb
mov
push
fs
fucomip
pop
int
loop
movq
sub
inc
adc
push
cld
sub
arpl
inc
fidivs
pop
cltd
pop
movsl
jne
shrb
jno
inc
bound
mov
out
pop
jo
inc
xor
test
inc
mov
test
mov
test
hlt
xchg
inc
add
jle
xor
testl
nop
and
mov
inc
cld
mov
mov
inc
sub
pushf
lods
cmp
dec
push
repz
stos
sbb
aad
loop
shrb
or
inc
push
mov
clc
jg
push
push
pop
and
or
push
pushf
push
inc
adc
repnz
inc
push
leave
ds
pushf
cmp
push
mov
lods
pusha
je
les
jecxz
iret
push
rcll
nop
sub
dec
push
cmpsb
in
sbb
pop
fbld
pop
mov
and
and
xchg
insb
nop
adc
fstpt
jns
cmpsb
loope
pop
jns
jecxz
or
icebp
shlb
push
data16
jg
cmpsb
clc
loope
clc
cld
mov
fdiv
xchg
xlat
stos
adc
dec
sbb
xor
pop
mov
repz
push
cmp
iret
xchg
xchg
test
loop
sbb
mov
int
xor
adc
sbb
jo,pn
cmp
enter
pop
push
and
jo
cltd
out
test
jnp
out
adc
cmc
xor
jge
and
pop
nop
aam
sbb
push
in
test
pop
pop
xor
ret
dec
sbb
inc
icebp
or
pop
xor
clc
rcl
scas
nop
or
bound
and
mov
cmpsb
adc
lret
into
or
insl
leave
or
je
flds
dec
cmpsb
jmp
mov
loop
or
add
push
adc
int
ds
and
mov
push
and
fsubr
imul
scas
pushf
and
jbe
cmpsl
cmpsb
lods
lcall
and
imul
scas
movsl
add
cmp
out
cmp
jmp
idivl
mov
or
addl
add
imul
pop
mov
jo
scas
insb
jno
fsubl
jne
adc
fdivrp
jp
inc
test
addb
jno
repz
mov
push
mov
inc
addb
or
add
test
xlat
mov
jl
jg
aas
sub
test
nop
std
push
fimuls
int3
out
arpl
insb
lds
jl
pushf
sbb
lahf
mov
add
lds
inc
push
or
adc
jp
les
and
rorl
cmp
sub
xchg
jo
cld
mov
sub
test
jle
test
das
repnz
inc
and
pop
push
jns
adc
sbb
push
enter
in
adcl
daa
bound
dec
mov
dec
or
es
pop
out
mov
in
sub
and
iret
popf
inc
setg
push
pop
jne
lods
movl
int3
inc
sub
lcall
jmp
inc
mov
movsb
sub
popf
xor
stos
shll
neg
pusha
lods
sar
mov
sbb
cltd
test
mov
iret
jbe
push
or
movsb
fxch
lahf
mov
sarb
push
cmp
mov
xor
push
mov
pusha
mov
mov
aas
mov
fisubrl
dec
fcmovnbe
lret
add
sbb
adc
bound
test
daa
sbb
fmull
fcompl
in
rorb
add
sbb
imul
jmp
pop
rcll
inc
sbb
sbb
shll
pop
xchg
push
repnz
jb
ret
stos
xor
aaa
stos
lret
icebp
std
dec
dec
addl
mov
xchg
bound
dec
outsl
mov
popf
aaa
mov
sahf
dec
outsb
xor
out
mov
mov
aaa
mov
fcoml
adc
repz
xor
fisttpll
pop
sbb
sub
div
nop
pop
fildl
repz
test
push
add
ret
push
fcmovnu
fwait
push
mov
dec
test
mov
das
dec
fdivp
stos
stc
jmp
jle
dec
cltd
xchg
mov
test
adc
rcrb
bnd
add
enter
rorb
pop
add
adc
pop
repz
xchg
jnp
int
ljmp
adc
repz
dec
push
cmp
pop
hlt
fisttps
jle
mov
cmp
jo
xchg
jns
sub
xchg
lcall
hlt
test
int3
sbb
push
dec
repnz
mov
loopne
xchg
aam
mov
cmp
xlat
cmpsl
jns
out
test
pop
mov
nop
int3
call
bound
ror
xchg
push
mov
jae
xchg
popa
loopne
jge
mov
adc
daa
in
sbb
cmpb
cmp
or
es
cmp
jo
adc
mov
movsb
andl
out
fs
dec
negb
xor
xchg
aad
imul
add
mov
cld
lds
stos
inc
jecxz
pop
jmp
xlat
mov
or
fiadds
cltd
shlb
pop
mov
neg
lcall
pop
out
push
pop
sub
sbb
mov
mov
push
or
lea
bound
push
inc
sbb
cmp
inc
repz
sbb
andl
sub
testb
fistl
pop
aas
push
or
stc
xchg
iret
jge
clc
in
pop
int3
inc
dec
and
xchg
in
subb
rcrl
jp
mov
lret
add
mov
jp
cs
mov
mov
xchg
stc
mov
mov
test
nop
jo
xor
adc
mov
clc
sbb
out
adc
xchg
cmp
fs
cmp
into
mov
dec
into
scas
mov
jle
dec
aam
xchg
pushf
mov
dec
inc
mov
pop
jo
inc
pop
int3
lods
xor
popf
sub
loop
and
inc
int
movsl
inc
mov
test
aad
mov
sub
lock
movsl
in
lret
negl
cmpsb
pop
pop
insb
test
sbb
and
xlat
xlat
fimull
xchg
loope
fsubrs
xorb
notb
dec
dec
xor
adc
push
and
lcall
jecxz
movsb
add
stc
jnp
aas
pushf
xor
mov
xlat
rcr
jle
jmp
mov
or
lcall
fdivrs
push
sbb
loope
push
pop
pop
das
mov
push
or
call
or
cli
push
jle
sub
rcll
outsb
jge
mov
pop
out
aaa
aas
push
xchg
in
adc
push
mov
in
adc
add
jnp
inc
xor
int
andb
adc
lock
mov
mov
mov
lods
aas
mov
sbb
jge
fidivrl
lock
loope
inc
add
sbb
push
pop
cmp
in
cmpsb
mov
jl
or
bound
pop
sub
loope
in
movsl
into
push
mov
mov
fstpl
movsl
mov
cmp
fidivrl
jge
loop
cli
lret
inc
xchg
fwait
pop
pop
mov
enter
scas
cld
das
mov
or
jae
int3
popa
dec
cmpsb
jno
xchg
sbb
dec
adc
jle
pusha
or
ds
sbb
cmpsl
mov
imul
xchg
jle
pop
push
cwtl
pushf
iret
cmpsl
mov
daa
cwtl
test
xlat
or
dec
popf
jg
gs
stos
xchg
ret
call
xor
xchg
ja
xor
pop
mov
ret
ja
adc
stc
fwait
nop
sub
inc
loopne
loop
daa
mov
mov
std
ret
outsl
test
xchg
sbb
or
push
xchg
lret
cmp
mov
mov
outsl
mov
lods
addr16
les
hlt
inc
xchg
push
imul
test
dec
das
ss
sub
xor
pop
mov
adc
and
movsl
imul
xlat
push
jo
jns
lahf
imull
mov
and
mov
mov
and
sub
push
xchg
aas
fdivrs
aas
mov
pushf
xor
imul
push
adc
cmp
jmp
test
sub
jo
stc
xchg
test
or
xchg
push
inc
push
pop
iret
mov
xchg
jp
lret
add
pushf
rcll
sub
and
pop
cmp
adc
add
adc
inc
jb
sahf
pop
or
fldenv
mov
mov
in
jnp
mov
push
jmp
scas
adc
mov
dec
cld
pop
xchg
jl
dec
push
lcall
lcall
ret
in
xor
cmp
lret
mov
pop
adc
repz
loop
scas
aam
jp
push
loop
lds
pop
ds
mov
in
das
icebp
xchg
int
test
mov
push
hlt
sub
push
dec
fsubrs
icebp
or
push
dec
cmp
bound
divl
ljmp
push
outsl
fnstcw
addb
jae
adc
push
jg
mov
inc
stos
popa
cwtl
inc
push
push
mov
ss
into
imul
stos
pop
das
push
std
ret
out
loope
js
stc
xchg
icebp
testl
and
sub
stc
jne
movsl
adc
pop
mov
adc
lahf
or
add
add
push
add
stos
fldenv
ljmp
and
cmp
test
add
sub
mov
imul
mov
mov
lock
add
dec
or
cmc
imul
lds
imul
aas
leave
sub
bound
std
mov
fsubp
mov
cli
data16
popa
arpl
sub
es
xor
int3
loopne
xor
inc
cmp
push
adc
mov
mov
arpl
adc
idivl
lods
test
mov
cltd
mov
sub
mov
rcll
in
and
mov
iret
add
jo
in
test
pushf
push
ror
addr16
hlt
cmc
sbb
ret
sub
add
cmp
push
xchg
ljmp
repz
fxch
icebp
sahf
mov
add
dec
xor
in
iret
mov
mov
int
les
xchg
popf
sub
inc
xchg
test
fmul
js
cmp
inc
jo
push
sub
xor
inc
cmp
negb
mov
push
js
push
push
push
adc
add
xchg
out
jp
test
adc
pusha
jb
cmc
sbb
mov
lds
push
fdivrl
data16
xor
inc
adc
insb
inc
rorb
test
push
mov
incl
inc
repz
mov
jnp
in
push
xchg
sub
xchg
push
cmp
inc
imul
out
imul
outsl
adc
push
outsl
movsl
mov
cmpsl
or
les
pop
insl
dec
add
pop
pop
out
or
scas
out
iret
jp
fs
cmp
xchg
out
in
imul
xchg
mov
xchg
mov
push
mov
loope
scas
jge
pop
dec
repnz
push
add
cmp
adc
pop
rclb
fidivs
sub
jno
add
iret
iret
inc
call
lahf
leave
pop
mov
les
stc
sbb
and
mov
mov
dec
addr16
sub
pop
es
nop
jle
popf
pop
sbb
add
bound
jle
ljmp
stos
jns
orl
mov
adc
push
lcall
into
push
and
dec
or
std
cmp
fcmovb
sub
cli
inc
lds
xchg
fsubl
outsb
pop
mov
mov
push
xlat
mov
adc
lods
fiadds
es
fbld
adcb
inc
dec
and
sarb
xor
fnstsw
sub
push
cmp
dec
fadd
and
adc
je
scas
mov
jne
out
and
push
xchg
xor
fcoml
mov
std
imul
pop
pop
ds
mov
int3
dec
cmp
pcmpeqd
mov
pop
xchg
movsl
mov
xor
shlb
fistpl
add
in
aas
fildll
xor
mov
mov
mov
imul
imul
fistps
mov
mov
dec
movsl
jmp
dec
iret
adc
mov
sahf
mov
push
ljmp
and
adc
lods
adc
lahf
dec
inc
jecxz
or
mov
rcrb
je
xor
pop
loop
mov
ss
outsb
imul
mov
cmp
mov
jecxz
mov
je
mov
push
xor
cvtps2pi
adc
or
jg
enter
dec
ret
pop
in
push
xchg
mov
shrl
mov
and
aam
cli
xchg
xchg
mov
and
mov
out
pusha
xchg
or
ljmp
xor
and
idiv
xchg
mov
mov
addr16
sbb
leave
sbb
dec
inc
mov
push
dec
repnz
or
mov
pop
and
xchg
inc
push
cmp
cmp
jp
dec
xchg
pop
sahf
sub
stc
cld
mov
test
bound
jmp
in
into
and
sbb
mov
bswap
sbb
cmpsl
pop
mov
mov
or
dec
fisubrl
js
cmp
or
loop
cmpb
in
sub
pop
out
adc
popf
ret
sbb
xchg
lret
or
jmp
retw
push
jl
dec
pop
negl
push
out
scas
xlat
test
jnp
inc
jae
push
jmp
shrb
xchg
jecxz
jge
stos
sbb
jl
mov
sbb
jp
rcrl
push
inc
test
rcll
pop
cmp
adc
mov
fs
or
les
sub
cmp
mov
jno
sbb
inc
lods
lret
add
mov
cld
mov
out
imul
pusha
divl
pop
dec
nop
fsts
mov
mov
and
lock
sub
dec
out
mov
and
xchg
movsl
pop
cs
jnp
mov
jnp
sub
adc
cmc
sub
adc
lea
xchg
fldln2
out
jge
in
inc
xlat
sub
repnz
and
cmp
push
lcall
test
dec
push
push
clc
fwait
stos
pop
test
std
lahf
imul
outsb
fsubrs
rclb
ret
andl
xchg
jbe
outsb
jmp
cmc
mov
mov
rcl
push
roll
inc
mov
and
xor
push
loopne
mov
std
mov
dec
pop
xor
mov
andl
arpl
psrlw
jno
jne
dec
fidivrs
ret
repnz
mov
jp
pop
cmpsl
idivl
xchg
mov
lds
xor
mov
adc
sub
cmp
push
daa
xor
cmpsb
jae
popf
fcomip
push
addr16
inc
mov
push
aad
out
in
push
push
cmpsb
fisubrl
xor
lret
and
and
popf
test
sub
int3
xor
push
jb
mov
stos
rcrb
adc
mov
and
cld
push
fldl
lret
gs
cmp
add
mov
stc
sbb
cmpsl
jecxz
add
lret
es
cld
std
mov
dec
inc
inc
xor
outsl
inc
inc
loope
push
fnstcw
cmp
cmp
pop
fiadds
loop
push
in
inc
or
jae
mov
icebp
inc
daa
sub
push
jne
ffreep
jnp
and
xor
mov
mov
pop
push
push
inc
adc
les
stos
inc
sub
dec
sub
and
mov
pop
mov
push
and
lds
jle
and
out
ds
dec
push
xchg
and
lock
test
cmpsl
mov
sbb
mov
aam
testl
inc
pop
mov
in
sub
jno
adc
xchg
lds
mov
push
adc
pop
adc
jb
mov
xlat
sbb
push
push
adc
push
sub
lret
cmp
rcl
add
dec
xchg
in
or
cld
mov
sbb
arpl
cmc
stc
dec
cmp
jmp
sbb
mov
xchg
std
sbb
mov
push
inc
xlat
mov
in
das
nop
mov
std
idivl
aam
inc
test
mov
jae
bound
inc
sbb
xchg
cli
call
int
pop
inc
int
int
rol
cli
and
jae
je
shll
pushf
shrl
xchg
lds
mov
or
push
xchg
les
faddl
out
add
push
arpl
js
sub
mov
ljmp
push
fisubrs
jle
cmp
jno
cmp
dec
jle
cmp
inc
mov
rolb
imull
pop
leave
sbb
ficomps
mov
add
xchg
imul
xchg
repz
and
adc
mov
fld
jp
cmp
or
and
mov
movsb
pop
xchg
lret
mov
push
xchg
sbb
out
cmpb
pop
dec
cwtl
xchg
das
insb
adc
sbb
cmc
and
inc
jne
paddusw
inc
lds
pop
inc
in
lcall
adc
insl
mov
xlat
mov
lahf
jb
fs
pop
nop
push
mov
cli
adc
js
push
dec
int
mov
outsl
fnstsw
inc
stos
lds
pop
testl
insl
push
jnp
je
int3
pop
jb
cmp
xchg
xlat
mov
add
mov
mov
cmp
repz
mov
push
pop
cmp
in
dec
movsl
dec
mov
mov
pop
test
repnz
icebp
dec
jp
bound
pop
pop
and
insb
mov
js
sub
cld
inc
dec
in
inc
jae
int3
addb
mov
xor
add
test
jle
jmp
mov
mov
pusha
movsl
jge
cpuid
dec
pop
cmp
cmp
adc
scas
cmp
ret
mov
sbb
xor
and
xchg
mov
sti
aam
fsts
mov
cmp
rcrb
add
jb
push
jnp
aaa
mov
push
xor
int
insb
add
dec
ljmp
imul
jle
or
xchg
xchg
pusha
out
std
stos
and
and
mov
loope
add
pop
sub
scas
mov
ja
push
jmp
mov
pusha
add
loope
outsb
fistps
sub
adc
dec
mov
outsl
push
pop
ljmp
ds
sbb
dec
push
or
adc
int
gs
je
fisubs
jno
mov
xchg
lcall
arpl
mov
adc
std
ds
mov
inc
pop
dec
mov
sbb
scas
push
xchg
cwtl
es
popf
es
and
mov
add
clc
push
cs
test
cmp
loop
sub
mov
stc
into
int
add
shrb
mov
jbe
adc
inc
and
aad
cmpsb
xor
or
inc
popf
rorb
xor
xchg
std
jno
iret
dec
pop
and
sub
aam
les
add
das
in
inc
dec
in
sub
adc
push
cmpsb
sub
dec
mov
jecxz
and
je
inc
and
imul
inc
cmp
cmp
mov
push
loop
cli
add
fnstenv
push
fcomip
aam
mov
pop
cli
mov
jge
data16
int
cmpsb
jno
pop
push
imul
sbb
push
pushl
and
lahf
inc
mov
test
aas
test
mov
xchg
js
push
pop
cmp
iret
jno
jne
jl
je
insb
inc
loope
fldl
mov
imul
in
cmp
jecxz
jns
jae
mov
ret
fcoms
add
shlb
scas
pushl
inc
xchg
insb
roll
lcall
adc
out
jle
pop
sti
jo
inc
inc
inc
in
push
cld
ret
icebp
call
push
cmpl
sbb
or
jns
sbb
fisubrl
cmp
into
clc
lret
adc
shlb
pop
cmp
hlt
add
neg
push
cmpsb
aas
jmp
sarb
mov
fidivrl
jmp
jg
or
lret
pop
mov
or
pcmpgtb
push
lret
stos
aas
insl
inc
push
call
insb
rcrb
ret
mov
movsb
push
mov
lock
lods
or
jmp
mov
popf
jg
dec
push
pop
bound
out
add
idivb
mov
mov
pextrw
adc
xchg
cld
clc
sbb
pop
mov
lret
cld
add
loopne
sbbl
sbb
push
fbstp
push
popf
push
outsb
rolb
add
lea
stos
and
and
mov
fucomp
or
pop
add
cmp
mov
add
inc
mov
lods
repz
inc
pop
mov
mov
jge
sbb
mov
scas
mov
adc
out
testl
dec
xor
incb
and
push
or
xchg
add
and
cmpsl
insb
jg
push
cmpsl
shlb
xor
push
sbb
icebp
aaa
mov
mov
lahf
cmc
loopne
cmp
cmp
addr16
sub
cmpl
sub
jno
mov
dec
mov
sbb
cld
adc
push
pop
bound
and
xchg
mov
and
aam
andb
scas
xor
jmp
jmp
sti
pop
ljmp
jne
add
aas
adc
std
icebp
mov
in
stc
addr16
xchg
outsl
gs
loop
sub
cmp
jne
mov
sbb
hlt
hlt
mov
mov
fbld
lahf
pop
sub
pop
test
mov
lcall
mov
add
sub
rcrl
sub
inc
loopne
ja
mov
outsl
les
cli
sub
and
mov
cld
shll
movsl
out
popa
lock
jo
je
pop
out
xor
insb
es
xchg
dec
push
inc
inc
inc
xchg
xchg
in
adc
add
add
add
icebp
fsubrl
add
imul
or
or
out
adc
push
push
ja
sub
jg
cld
cmp
in
repnz
inc
out
jecxz
push
ret
push
lock
jmp
mov
aaa
dec
mov
stc
mov
incl
loope
test
cmc
adc
dec
xor
jecxz
lods
adc
sub
xor
or
mov
push
je
test
jg
jo
xlat
int
fs
rorl
push
lds
cwtl
mov
insb
pop
mov
fwait
rclb
dec
push
mov
addr16
call
push
xchg
in
inc
out
in
negl
jmp
imulb
adc
or
repnz
mov
enter
out
enter
inc
fnstenv
dec
mov
or
xchg
xor
pop
push
inc
scas
pop
mov
adc
adc
fdivl
jnp
ret
pop
cmp
push
add
cld
repnz
icebp
push
push
and
sub
in
add
xchg
mov
andb
adc
bound
jno
inc
xor
and
jle
push
mov
rorb
push
int
add
cld
add
stos
push
les
cmp
dec
lcall
mull
xlat
ret
fadds
lret
popa
xlat
mov
pop
add
adc
sti
imul
stos
push
sub
cmpsb
and
sub
cwtl
sub
mov
cmp
pusha
adc
sub
out
jle
ljmp
cld
cmp
ljmp
mov
out
clc
repz
push
sbb
out
xor
mov
push
dec
or
mov
sub
xchg
inc
cmpsb
cli
shl
mov
insb
fstpl
loopne
xchg
rcrb
lock
shll
loope
or
clc
jb
loopne
nop
add
xchg
mov
mov
or
popf
sbb
pop
xor
jle
popf
in
pop
dec
cli
and
push
ljmp
add
adc
int3
push
cmpsl
cmpsl
loop
in
adc
fldenv
addr16
scas
addr16
dec
add
mov
out
scas
jae
and
adc
ss
clc
mov
icebp
imul
loop
icebp
sub
add
cwtl
fnstenv
das
faddl
inc
mov
sbb
jp
add
nop
mov
push
xor
je
repnz
pop
mov
sub
nop
pop
out
addr16
loopne,pt
xchg
movsl
fdivl
xchg
mov
int
mov
xchg
xchg
lock
ss
xor
lods
es
dec
inc
fists
ret
cwtl
into
loopne
test
push
sub
add
mov
dec
imul
mov
into
jnp
push
mov
mov
add
xor
cmpsb
and
test
mov
pop
xchg
pop
sub
testb
lret
lods
push
addl
pop
out
xchg
jecxz
aam
stc
repz
loope
xchg
cmp
cld
insb
sub
dec
popa
insl
xor
pop
andb
out
aad
xorl
sub
ds
cmpb
mov
adc
adc
xchg
mov
sub
stc
mov
mov
mov
dec
or
pop
fcoms
shl
fisubrs
sub
and
mov
push
sub
jo
or
outsb
adc
sub
fstl
pop
cld
and
divb
jp
sub
sbb
enter
pop
jb
adc
ljmp
xor
ds
fs
mov
arpl
sbbb
in
pop
jbe
push
in
lock
mov
adcl
lods
test
cli
js
dec
xlat
xchg
jae
sar
loope
int3
lcall
pop
push
pop
pop
mov
call
das
pushf
dec
jo
in
test
mov
cwtl
xor
cwtl
in
xchg
pop
enter
ja
dec
jmp
sub
lret
cmp
push
fcmovbe
hlt
daa
or
jecxz
loop
pop
push
cmc
xchg
test
or
ret
cmpsl
xor
jl
pop
mov
inc
aas
mov
shll
and
shrb
inc
cwtl
cwtl
mov
mov
pop
rcl
mov
fxch
cs
pop
sub
outsb
xchg
andb
in
jmp
mov
cltd
pop
inc
loope
adc
sub
add
mov
outsb
push
jb
sub
pop
repnz
cmp
jmp
mov
ror
das
cmp
jmp
ja
movsb
popf
jae
std
mov
jl
mov
mov
sahf
xor
icebp
icebp
add
xchg
inc
lcall
add
pop
popf
js
add
add
repz
fdivl
dec
xchg
and
or
cmp
xchg
and
mov
repnz
imul
mov
cmp
nop
push
out
lret
pop
test
xlat
add
rcrb
cmp
pop
div
mov
jb
push
mov
xor
or
scas
imul
adc
es
mov
sbb
lds
jae
clc
insl
and
ljmp
clc
lea
popa
pop
rorl
mov
jo
pop
xlat
mov
test
jl
notb
jle
mov
jns
xlat
jg
scas
popa
imul
fiadds
mov
sub
cmp
es
lret
xchg
mov
lea
cltd
scas
mov
sub
sbb
pop
or
je
xchg
imul
mov
mov
push
std
es
pop
loopne
mov
icebp
stos
lcall
lahf
out
mov
ss
imul
in
pop
jle
sahf
outsl
or
mov
cmp
les
sub
adc
xchg
je
xor
sti
xchg
repnz
push
dec
jno
sub
push
std
cmp
ret
dec
pop
cltd
adc
dec
popf
test
inc
jbe
push
xchg
mov
xor
fisubrl
or
pushf
outsl
adc
lea
lcall
inc
imul
lahf
clc
lock
das
jns
dec
xlat
stos
push
xor
cmp
shlb
mov
lret
pushf
js
fisubrs
push
add
xchg
ss
mul
fnstsw
loope
mov
sti
es
mov
pop
jbe
fcomps
rcr
xchg
les
adc
sbb
pop
stos
sub
nop
fistps
in
repz
or
inc
xchg
pop
dec
jg
lret
mov
lret
pop
sbb
pushf
mov
leave
sti
push
insb
xchg
jb
push
arpl
and
test
repnz
jbe,pt
in
mov
cmpsb
test
or
jp
cmpsl
pop
xlat
sub
inc
jmp
push
movsb
out
push
add
cwtl
imul
imul
push
mov
push
dec
sbb
dec
xlat
shrb
int
ja
mov
pop
popf
mov
jecxz
pop
inc
push
sbb
push
dec
jp
sbb
adc
enter
add
movsl
testb
jg
scas
add
jp
sub
das
xor
add
insl
or
add
imul
lock
test
inc
decl
add
loope
stc
test
stos
xchg
or
mov
mov
shl
jg,pn
inc
popa
test
frstor
cld
dec
loope
in
dec
and
outsb
in
mov
test
push
sarb
shll
push
or
outsb
scas
nop
arpl
nop
stc
push
ret
pop
paddq
or
arpl
fstps
es
popf
mov
addl
pushf
adc
shll
add
mov
jmp
xchg
xlat
adc
fbstp
push
lds
icebp
clc
outsl
push
sbb
inc
enter
xor
fcomps
out
repz
dec
aas
push
inc
sbb
pop
xchg
fstpl
mov
xchg
int
leave
sub
push
cmp
lods
arpl
lcall
mov
pusha
and
mov
push
jo
imul
pop
mov
aas
jo
jns
xacquire
aam
xchg
fimull
fs
movsb
imul
fsubp
adc
push
mov
mov
adc
push
mov
cmp
aaa
mov
inc
cmp
fnsetpm(287
push
fs
test
adc
add
cmp
inc
imull
inc
rclb
popf
push
pop
push
cmpl
lcall
mov
cmp
sbb
adc
xchg
or
pop
xor
aas
mov
aas
lea
adc
inc
jmp
dec
push
out
mov
or
outsl
in
jns
lret
in
test
and
or
pop
sub
jns
dec
clc
xchg
add
mov
into
enter
mov
add
imul
mov
dec
movsb
sub
jnp
cld
jo
fwait
push
jnp
stos
shrb
ljmp
lahf
and
and
test
sub
stc
int3
imul
sub
inc
push
cmc
sbb
and
push
cmpsb
fisubl
out
jle
cmpsl
inc
fbstp
pop
mov
pop
imul
push
push
cltd
ficoms
cmp
dec
sub
cmp
xchg
xchg
scas
pop
mov
xor
inc
insb
jmp
sbb
es
popf
jmp
add
mov
pushf
and
sbb
jo
ja
ret
sub
test
mov
ret
mov
out
push
push
bswap
add
mov
inc
jae
mov
lods
xchg
lods
imul
adc
sbb
xlat
ljmp
push
pop
pop
mov
shr
str
movsb
xor
dec
cltd
or
addr16
jae
shr
or
cmp
push
mov
scas
mov
enter
insl
fbld
int
mov
popa
adc
pop
sub
fidivrs
ja
xor
dec
pop
jnp
mov
jmp
je
xchg
es
jl
xor
jo
mov
or
lret
fbstp
and
sbb
mov
aas
out
lret
jp
adc
shl
lods
pop
movzbl
je
or
sbb
out
or
orb
sahf
inc
cmc
pop
mov
jp
lahf
pop
pop
pop
je
fimuls
gs
arpl
mov
cmp
iret
pop
stos
add
push
mov
fiadds
popa
xchg
das
je
lds
cmp
lea
lods
mov
push
push
popa
test
cmp
in
add
stos
rcr
or
inc
rorb
ljmp
adc
jmpw
inc
and
xor
nop
arpl
adcl
cmp
ljmp
or
sub
mov
mov
les
imul
dec
ret
movsl
mov
fimuls
movsl
mov
loop
jae
out
and
aad
adc
jg
lcall
or
shrl
lods
mov
sbb
jnp
je
dec
insl
out
repz
mov
jge
push
mov
pop
out
pusha
rclb
lret
xchg
push
dec
mov
bound
and
dec
push
lret
cmpsl
pushf
add
mov
out
out
in
out
jbe,pt
inc
rolb
jmp
adc
das
cmp
movsl
cmp
out
mul
hlt
add
andb
dec
add
lcall
dec
fidivs
pop
movsl
mov
jmp
and
imul
sub
jecxz
mov
dec
or
jno
sbb
cltd
xchg
jmp
adc
dec
or
aas
push
aad
mov
scas
mov
push
int3
insl
in
sub
movzwl
mov
adc
leave
imul
mov
mov
mov
add
inc
jecxz
pop
aad
das
mov
pushf
cmp
arpl
fnstenv
rcll
bound
aam
xchg
mov
jne
fsub
adc
jbe
xchg
test
call
dec
imul
and
dec
test
repz
lds
xor
mov
jg
rorl
sub
fldenv
and
and
iret
jnp
adc
cmp
sub
cs
fucom
int3
bound
xchg
pcmpgtb
and
cmp
push
push
adc
inc
pop
mov
pop
jno
mov
subb
add
popa
mov
outsb
xorl
pop
insb
push
jmp
sar
outsb
mov
mov
dec
push
jns
add
sub
pop
xchg
xorl
aas
xchg
pop
pop
subl
gs
lret
jmp
pop
ficomps
push
orl
jno
sbb
das
push
or
push
int
test
int3
fcoms
mov
lcall
mov
pop
dec
jecxz
inc
ljmp
cltd
lea
into
daa
in
fs
pop
push
or
sbb
push
inc
pop
popf
in
insb
mov
lahf
daa
add
cmp
cmpsl
lods
pop
xchg
loopne
xor
jmp
xchg
inc
and
sub
enter
dec
push
lahf
xchg
test
rcr
gs
into
cs
test
clc
fs
cmp
inc
mov
int3
mov
fsts
fdivrs
sbb
popa
hlt
sbb
popa
jp
fildl
popa
jmp
dec
ljmp
cwtl
sti
mov
push
push
mov
jno
inc
sub
adc
cli
int3
daa
pushf
mov
loop
mov
or
xchg
and
mov
rep
pop
lcall
mov
xchg
das
rcrb
imul
and
sbb
data16
out
push
xlat
repnz
popa
popf
cmpsl
loop
dec
xchg
adc
add
pop
test
rcl
sahf
inc
fmull
mov
vmread
jbe
mov
inc
jo
mov
push
mov
les
icebp
ds
cmc
loopne
dec
mov
adcl
out
cwtl
push
mov
insl
cmp
sbb
xor
jge
int3
push
sbb
adc
test
fs
jno
hlt
xor
fisttps
popl
cmc
cmp
mov
xor
sub
push
adc
dec
xchg
adc
les
ret
mov
dec
and
jno
jmp
fdivrs
sbb
mov
pushf
cltd
aas
enter
outsl
xor
das
mov
arpl
outsb
push
repz
lahf
loop
shl
fimuls
add
add
movsb
cwtl
notb
mov
xor
in
xorb
push
leave
adc
scas
inc
push
pop
iret
jne
mov
jmp
push
icebp
jns
roll
inc
push
push
or
les
in
fxam
jno
sub
xor
jnp
repz
or
add
aam
sub
cmp
movsb
dec
sub
jo
push
cmp
push
sub
or
in
test
cmp
xchg
roll
adc
pop
adc
insl
push
sti
inc
dec
push
sbb
in
pop
cmc
xor
xchg
out
jmp
iret
mov
movsl
loopne
inc
stos
cwtl
test
test
cmovle
loopne
scas
add
mov
push
jnp
test
mov
jmp
and
or
mov
mov
dec
jp
int
xor
aam
fisubl
ret
adc
cmp
into
cld
fsubrp
rolb
outsl
ds
orb
cmc
xchg
cmpsl
xchg
sbb
gs
xchg
cmp
xlat
cmp
and
mov
sti
les
fcomi
xor
jns
mov
cmp
cmp
push
mov
movsb
xchg
sbb
jg
clc
rorb
mov
xchg
arpl
cmp
js
test
aas
cmp
inc
mov
pop
and
gs
aaa
or
xchg
add
iret
sbb
insb
mov
sahf
and
xchg
sahf
aad
mov
ror
repz
and
outsb
push
nop
out
mov
push
ficompl
out
test
scas
stos
test
mov
push
xor
movsl
add
xchg
xchg
leave
sahf
sahf
sbb
or
imul
pop
cmpsb
mov
add
add
sbb
jmp
xchg
xor
lcall
jle
out
pop
mov
or
and
sub
xchg
jns
ds
pushf
popf
divl
subb
push
sti
pop
add
js
rcrl
popa
mov
xor
shrb
adc
or
aas
dec
sbb
cli
xchg
mov
add
stos
test
jp
repz
mov
cmp
cli
xchg
push
dec
pop
ficoml
test
lock
mov
and
ja
imul
push
and
je
cmc
inc
xchg
in
push
pop
adc
mov
mov
bound
aad
dec
call
fwait
stc
sbb
mov
inc
das
jl
push
mov
cmp
ljmp
inc
rcll
aaa
push
push
xlat
dec
loope
jb
push
aad
mov
jns
push
inc
mov
gs
jne
dec
dec
xor
ret
jge
xchg
push
xchg
sub
and
xor
aaa
dec
mov
inc
jae
movsl
lea
into
sbb
lea
ljmp
cs
sub
pop
jmp
xorl
jmp
mov
out
ds
ret
jecxz
mov
out
cs
jg
inc
outsl
jno
sub
mov
dec
cs
decl
imul
cli
jbe
cmpsl
push
push
mov
gs
mov
bound
loopne
int3
mov
iret
lcall
je
fdivl
mov
call
mov
dec
sub
xor
or
test
outsb
xchg
pushf
cmp
or
pop
test
push
dec
mov
mov
pop
adc
nop
in
in
insb
inc
ret
sahf
ss
cltd
cmpsl
jg
cmp
lret
push
adc
fs
lods
stc
fs
jmp
lods
cwtl
test
ret
dec
push
clc
sub
dec
dec
inc
xchg
mov
mov
stc
fildll
lds
aaa
test
sub
jge
xchg
cmpsl
inc
push
push
rclb
cli
dec
sub
std
or
je
and
pusha
dec
outsl
mov
fisttpl
cmp
sub
outsb
addl
loopne
jnp
leave
or
imul
imul
xchg
or
lods
aas
cmp
call
and
push
and
or
dec
pop
mov
out
in
into
sbb
mov
or
jl
mov
add
aad
push
cmp
and
fwait
into
shrb
pop
cld
cld
inc
inc
dec
incb
jecxz,pn
aam
mov
test
or
and
and
add
lret
xchg
test
adc
jns
cwtl
or
xor
subl
inc
cwtl
inc
fisubrl
and
stc
and
dec
jle
jne
out
dec
sbb
xchg
je
scas
add
pop
or
cmpsl
pop
fisubrs
decb
mov
adc
add
pop
push
push
cld
lea
pop
push
pop
xchg
jecxz
push
faddl
shl
add
data16
dec
jecxz
add
xchg
clc
inc
jb
aad
add
and
cmp
mov
and
mov
pop
mov
jnp
pop
ljmp
sbb
enter
dec
cmp
xchg
mov
inc
pop
test
xchg
xchg
cmpsl
icebp
mov
mov
mov
pushf
lods
sub
pop
inc
mov
pop
arpl
in
ficomps
inc
xchg
mov
or
xchg
cmp
pop
cmpsb
lods
pop
in
push
mov
enter
push
mov
in
outsb
loope
pop
jle
int
fistps
out
int
sbb
add
sbb
insb
mov
lcall
adcb
inc
push
popa
mov
out
stos
fs
testb
mov
cmpsb
and
mov
cmp
pop
cmp
jmp
cwtl
call
jmp
stos
movb
push
notb
cld
push
in
je
popa
pop
and
add
xchg
add
imul
pop
cmp
jns
pop
aad
imul
xor
mov
fists
scas
push
adc
enter
xchg
pusha
add
movsl
or
push
lock
sbb
ror
out
test
jae
or
lds
add
rorb
and
fsubrp
pop
push
fdiv
cmpsb
je
ss
js
dec
ss
test
jle
call
in
out
andb
scas
add
cmp
rcrl
out
jo
adcl
fcompl
mov
dec
pushf
xchg
sub
add
loope
or
push
mov
ret
insl
xor
jb
jp
clc
xchg
enter
lea
inc
hlt
push
push
aad
add
inc
or
out
xchg
xchg
dec
inc
lret
push
test
repnz
mov
adc
test
inc
in
out
mov
aas
js
insl
push
fcmovnu
jmp
cmp
test
outsl
mov
push
in
jns
xchg
sub
xchg
sub
scas
gs
mov
test
push
jmp
mov
int
cld
rcr
jle
popa
rol
jnp
inc
bound
mov
pop
stos
movsl
sub
and
jne
es
mov
inc
dec
popa
shr
stos
mov
mov
jg
mov
fdivrl
sbb
adc
lret
loope
out
xchg
insl
rcrb
xor
jecxz
xor
sbbb
insl
aam
and
sbb
sahf
inc
jbe
add
outsl
cli
cmp
cmp
and
push
pusha
mov
jae
popa
loope
mov
xor
xchg
sbb
call
xchg
es
call
xor
ds
jnp
lds
push
and
dec
movsl
lock
push
sub
mov
roll
dec
xlat
jne
cs
int3
push
fwait
in
ja
mov
inc
add
nop
nop
jle
call
jnp
out
lcall
aaa
mov
push
shlb
es
filds
xchg
mov
bound
push
dec
sbb
loope
sarl
inc
mov
and
mov
push
and
int3
jle
adc
adc
je
pop
pop
and
jle
pop
sti
cmp
fdivr
insl
enter
int
out
enter
mov
rcrb
xlat
jge
out
xor
in
icebp
push
inc
jp
push
add
pop
push
push
pusha
mov
insb
sete
add
push
mov
in
pop
inc
arpl
cltd
in
add
mov
popf
inc
lods
mov
clc
and
xchg
sarb
jo
mov
clc
adc
js
test
jecxz
pushf
sbb
pusha
xchg
mov
xchg
mov
dec
iret
test
divl
jae
fcmovnb
or
scas
sub
pop
sub
fstp
lahf
jp
cltd
jp
jae
out
rorb
sbb
mov
inc
add
sbb
jmp
imull
inc
and
jecxz
mov
pop
mov
xchg
mov
cmp
fdivs
stos
outsl
xor
inc
fmul
std
sbb
leave
pop
aad
fidivl
mov
loopne
adc
outsb
mov
xchg
aaa
ss
dec
or
leave
je
push
dec
dec
inc
adc
xor
push
imull
aad
loope
dec
mov
cmp
mov
adc
mulb
xor
pop
int3
or
mov
cmp
mov
push
inc
outsl
lret
mov
sti
scas
mov
and
dec
push
sarb
rcrb
jle
dec
lea
out
or
hlt
xor
xchg
movb
add
push
call
xlat
rorl
testb
aam
sbb
es
mov
and
dec
cmp
sbb
xchg
jo
mov
shrb
pop
lds
cmpsl
push
movl
fistl
imul
and
ftst
fbld
jl
sbb
xchg
cmc
cmpps
cwtl
or
cmp
fadds
dec
int3
hlt
iret
adc
push
outsl
sub
pop
push
loop
sbb
leave
in
and
lods
iret
xchg
jmp
jl
leave
adc
jl
ja
nop
les
int3
push
fisubl
cmpsl
bound
cwtl
and
stos
pop
lods
jl
mov
mov
add
sbb
or
orl
push
addl
ljmp
lds
fdivr
mov
test
cld
iret
inc
lods
pop
movsl
jge
dec
sbb
call
xor
or
dec
shrb
xor
adc
or
iret
sbb
data16
movsl
stc
or
pop
xor
jnp
sbb
ret
pop
lock
add
mov
mov
rclb
xchg
sahf
dec
icebp
and
inc
xor
sub
xchg
stos
cmp
mov
or
test
inc
inc
push
cmp
lret
mov
dec
mov
fucomip
add
add
xchg
jns
xchg
fnstsw
lea
and
out
aaa
push
cmp
shrl
in
inc
jmp
xchg
hlt
pop
sbb
pop
fnsetpm(287
jg
mov
push
xchg
or
pop
jp
mov
mov
jnp
insl
adc
mov
iret
clc
loope
into
push
mov
mov
loopne
add
pop
imul
sbb
cmp
ljmp
outsl
arpl
fsubrl
and
mov
xor
jle
fwait
push
push
cld
pop
popa
add
sub
enter
repnz
jge
jns
adc
jg
js
loop
xor
mov
add
cmp
push
inc
adc
popf
hlt
outsl
jecxz
dec
and
out
arpl
dec
xor
xor
jne
mov
cli
outsl
lds
dec
cli
cmpsl
adc
insl
cmp
cmpsl
mov
dec
insb
adc
or
xchg
add
mov
rol
jae
loope
lret
dec
push
adc
push
repnz
inc
in
or
pop
pop
mov
or
lea
imul
adc
push
and
dec
fists
xchg
push
dec
adc
or
cmp
push
lods
arpl
lods
rcrb
imul
inc
add
pop
pushaw
add
sbb
or
das
aas
and
sub
xor
ficoml
insb
dec
out
sbb
enter
xchg
test
adc
ds
popf
xor
sbb
sbb
cltd
jle
push
and
pop
push
and
fdivs
fimuls
adc
lahf
mov
xchg
in
jl
roll
push
js
lcall
mov
daa
mov
sub
cltd
mov
xchg
lods
std
es
push
or
jp
xchg
mov
outsb
push
sbb
loope
fidivrl
pop
stc
test
or
cmc
ror
adc
in
cmp
je
aad
jl
xor
adc
jo
jae
mov
addr16
adc
push
faddl
cmp
push
adc
sbb
mov
pop
and
xchg
mov
fs
stos
and
clc
mov
imul
mov
fadds
scas
cmpsb
mov
add
mov
and
mov
pop
addr16
dec
mov
add
mov
lds
shll
xchg
out
xchg
push
push
dec
sahf
add
xor
sub
je
adc
mov
jne
loope
out
lret
mov
movsb
cltd
jae
xlat
xchg
jle
cmpsb
mov
jg
cmp
jno
and
popf
test
jnp
dec
imul
or
test
jl
sub
mov
daa
into
ljmp
pop
loopne
xor
out
ss
ret
sbb
jp
sub
add
or
sub
or
dec
out
fwait
mov
repnz
push
mov
arpl
add
dec
test
std
push
adcb
test
in
addr16
cltd
daa
jmp
dec
repz
in
pop
inc
popa
xor
mov
in
jb
leave
movd
arpl
loop
dec
adc
jecxz
sub
add
call
sub
enter
sub
and
adc
shrl
lret
and
sti
mov
mov
cld
inc
decb
fwait
loop
ret
cmp
push
repnz
xchg
rcrb
sub
enter
ja
inc
aam
test
inc
add
adc
call
int3
out
fwait
mov
push
sahf
stos
fidivrl
aad
jo
imul
test
cwtl
xchg
mov
push
testb
outsl
jle
jle
sbb
xlat
loopne
sub
sub
add
enter
jae
mov
pop
push
add
rorl
push
sub
jp
jnp
popf
jmp
add
add
jecxz
stos
push
and
adcl
dec
mov
lea
in
dec
shl
rorb
mov
xchg
aas
test
adc
and
stos
and
stos
aam
xchg
dec
xchg
daa
out
sub
out
jmp
test
cmp
js
xchg
mov
pop
adc
std
int3
jmp
push
fwait
push
inc
into
out
cld
sbb
into
mov
jbe
std
sub
adc
pusha
inc
arpl
push
add
xor
ret
pop
ret
fwait
push
pushf
sbb
lock
aaa
push
popf
dec
pop
mov
sub
cmp
insl
jecxz
jp
push
mov
sarl
push
fnstenv
lcall
dec
out
ljmp
jno
imul
out
sti
mov
fmuls
out
lods
cmp
ljmp
sbb
dec
cld
fisubs
notb
xchg
cld
or
movsl
shl
push
xor
inc
push
mov
shlb
push
mov
xchg
xor
ds
jmp
lcall
inc
in
in
mov
adc
inc
jmp
push
inc
xchg
xchg
adc
mov
pop
mov
sub
out
addr16
outsb
mov
in
pop
push
ret
in
insl
outsb
dec
mov
test
mov
clc
inc
fistps
in
ss
subl
filds
inc
shll
popa
nop
roll
push
loope
in
lret
mov
cmp
lods
and
adc
mov
dec
mov
and
inc
cmp
mov
inc
mov
mov
inc
rcrl
cmp
pop
jge
xor
test
inc
cmp
clc
and
mov
dec
call
inc
imul
push
outsl
jno
outsl
pop
sbb
scas
stc
popa
test
fcoml
outsb
data16
iret
jecxz
push
adc
bnd
popa
mov
or
out
mov
xchg
shrl
adcl
or
mov
pop
ret
loopne
loopne
hlt
movsb
xchg
or
push
mov
mov
sub
or
xorb
mov
mov
xchg
loope
stos
mov
add
sti
mov
xor
fldl
jge
daa
mov
fstpl
mov
mov
sarl
enter
scas
cmp
push
adc
pop
jbe
out
icebp
inc
filds
mov
je
xor
fnsave
push
xor
loopne
mov
lods
lea
sub
mov
test
lock
inc
adc
cmp
sub
adc
adc
xchg
push
pop
cltd
add
into
add
cs
ret
js
int
xchg
lds
scas
jno
jecxz
movsl
push
ret
add
pop
jl
stos
jg
cmc
pop
sub
cmpsl
loope
lock
cmp
push
inc
sbb
adc
ret
xchg
cmpsb
sbb
pop
movsb
loopne
dec
inc
dec
orl
cmp
fldt
lcall
lock
or
add
ja
dec
mov
stc
add
mov
data16
sbb
clc
in
jnp
push
pop
cld
lds
mov
xor
daa
mov
inc
xchg
sbb
dec
fidivl
add
ljmp
nop
mov
xor
out
or
xor
sbb
or
roll
mov
or
push
push
fisttpll
mov
lods
mov
xchg
or
xchg
push
pop
xchg
push
adc
dec
jne
ja
pop
jle
mov
mov
mov
adc
or
add
mov
sahf
bound
mov
outsl
mov
mov
jle
gs
cltd
cli
ret
and
movl
lods
push
daa
push
fistpl
pop
push
mov
mov
dec
stos
in
jo
fs
mov
and
jge
imul
js
adc
xor
cwtl
push
cmp
imul
out
inc
and
jmp
fwait
int3
or
mov
mov
outsb
das
mov
stc
jecxz
imul
inc
cmp
out
add
insl
jnp
pop
ret
pusha
fstpt
decb
or
inc
ljmp
add
sub
cmp
sub
mov
cmp
xor
aaa
gs
cmp
xchg
pop
pop
push
xor
cmp
mov
mov
mov
ficompl
fdivs
cmpsb
js
jbe
dec
add
adc
test
int3
inc
lea
dec
dec
pop
cmpsl
jbe
scas
jne
fnsave
iret
or
mov
pop
repz
inc
popa
rep
jno
insb
sub
outsl
shll
ficomps
sub
popf
inc
xor
fistpll
lock
jb
movsb
pushl
cmpb
xor
enter
in
lret
lds
data16
je
inc
js
lds
test
pop
je
push
pop
xor
or
js
aam
inc
xor
pop
std
ret
je
das
test
out
xchg
jl
adc
bnd
int
mov
hlt
jb
ret
loop
insb
xor
in
loopne
inc
popf
or
inc
or
sub
cld
mov
insb
xchg
lcall
mov
adc
je
cmp
pop
shrl
dec
xlat
dec
clc
cld
jg
daa
jo
xchg
sub
pushw
add
aas
popa
test
aad
idivb
icebp
or
mov
pop
mov
inc
popa
pop
jp
mov
ljmp
inc
mov
mov
xchg
pop
dec
aaa
dec
das
lods
mov
shll
loopne
stos
xor
in
sbb
lods
es
sbb
jecxz
fmull
push
test
and
and
fmuls
out
mov
and
or
js
ret
cli
in
cmpsb
cld
sbb
and
push
out
in
imul
test
divb
mov
test
pop
loop
bound
out
jns
add
inc
sbb
nop
idiv
sbb
push
sahf
push
jl
movsl
cmp
sub
inc
sbb
jno
sub
ret
repz
adc
filds
pop
xlat
xchg
cli
sub
mov
ffreep
dec
pop
xchg
dec
cli
mov
mov
lea
xchg
lods
arpl
mov
nop
push
stos
xchg
jb
mov
sbb
fisttps
add
dec
in
mov
das
cmc
dec
out
mov
popf
add
mov
data16
outsb
rolb
push
aaa
mov
pop
jecxz
ficomps
movsl
jle
or
jge
fstl
pop
fwait
icebp
mov
outsl
push
popa
mov
pop
push
and
push
mov
in
mov
les
push
loop
jle
icebp
inc
cltd
push
fs
shl
xchg
push
es
inc
lods
sbb
into
imul
sub
cs
sub
sbb
cld
cmp
cmp
nop
es
pop
xlat
xchg
adc
jl
xor
pop
and
or
mov
loopne
cld
add
mov
in
call
es
jg
aas
push
mov
or
xor
push
sub
mov
sbb
cld
sbb
loopne
roll
push
out
fldenv
push
jle
fcmovnu
sti
data16
stos
cmp
andl
mulb
mov
and
or
insl
push
shl
mov
sarb
pop
dec
flds
mov
or
hlt
mov
xor
into
dec
stos
xchg
mov
aam
push
jb
mov
mov
pop
cltd
lds
movsb
inc
dec
negb
push
push
rclb
and
cmp
movsl
sbb
or
sbb
aas
and
lods
mov
lods
inc
addr16
adc
add
test
pop
cltd
outsl
imul
repnz
push
out
fs
cmp
imul
scas
dec
aam
pop
stc
outsl
mov
sbb
sub
imul
nopl
dec
xor
pop
xor
mov
out
or
das
mov
mov
cld
aas
xor
adc
inc
insb
enter
add
ljmp
cld
das
pop
jne
sub
sub
push
ss
mov
sub
sbb
pop
sub
lods
push
das
mov
arpl
stos
mov
in
nop
adc
sub
out
or
movsl
stos
push
das
pop
sub
loopne
xchg
loop
mov
pop
mov
test
adc
in
fs
mov
cwtl
jp
int3
jae
insl
and
mov
mov
pop
mov
test
xchg
in
mov
pop
pop
aaa
or
data16
push
mov
test
shl
dec
mov
pushf
outsl
fwait
or
test
lret
mov
lret
int
mov
popa
sbb
cmp
mov
dec
fildl
dec
loop
fldenv
push
cmp
xchg
xlat
mov
leave
testb
pop
sbb
enter
decl
cs
lock
jmp
in
pop
xor
mov
mov
push
inc
push
xchg
mov
flds
sbb
mov
stos
sbb
idiv
mov
cmp
int
cmpsb
imul
mov
inc
sub
mov
movsb
jae
push
or
mov
cmp
fmull
mov
push
test
sbb
int
or
sarl
jge
int3
mov
xor
pop
arpl
hlt
aam
pusha
out
dec
outsl
outsl
cmp
mov
fistpl
cltd
xchg
jo
out
and
data16
pop
or
popa
cmp
aam
call
fbld
popf
fstps
jmp
daa
fcompl
daa
add
ljmp
pop
rorl
daa
mov
scas
popl
gs
mov
lds
mov
mov
loop
xor
dec
inc
or
adc
add
dec
shrl
push
or
adc
ret
inc
shrb
ret
pop
mov
icebp
fimuls
xchg
and
loope
adc
cmc
mov
and
jge
mov
rcrl
sub
shrb
pop
or
in
push
repnz
ds
out
cli
jno
pop
push
dec
push
enter
mov
xchg
cltd
inc
xchg
in
adc
jne
mov
clc
fwait
stos
dec
adc
nop
stc
stos
mov
fildll
clc
xchg
dec
sub
xor
sub
adc
mov
pop
fnstenv
cmp
mov
add
push
cmp
cmp
outsl
pusha
sbb
add
sub
inc
aad
xchg
leave
icebp
jp
dec
mov
test
testl
and
or
inc
add
in
iret
cmc
add
rolb
cmp
jg
lcall
sub
sub
push
jp
inc
lret
lds
and
or
push
mov
jge
stos
icebp
mov
cwtl
mov
lea
dec
cld
push
clc
mov
movsl
movsb
or
mov
je
xchg
imul
jns
jg
shlb
inc
or
lock
sahf
xor
icebp
movsb
mov
enter
mov
mov
add
insb
in
imul
push
push
and
inc
cmp
pop
movsl
aad
dec
arpl
mov
mov
mov
fisttpll
popf
test
mov
mov
sahf
int3
test
dec
xchg
mov
push
ljmp
std
scas
test
push
mov
mov
iret
test
lds
cmp
mov
mov
push
int3
loopne
stc
xchg
test
clc
mov
cmp
jbe
xor
stc
jmp
jae
mov
push
cmp
sub
data16
sbb
movsl
fnstenv
ljmp
rcll
sbb
cs
js
jg
xchg
data16
pop
lds
dec
cmpsb
jbe
xchg
mov
shl
xor
adc
xchg
clc
push
lock
in
sahf
push
mov
fldcw
inc
mov
fsts
imul
call
adc
je
sub
call
js
cmp
sbb
enter
cld
push
add
jp
outsb
and
xlat
dec
push
negb
pop
mov
and
xor
jne
bound
jns
insb
scas
nop
push
in
imul
mov
daa
jp
pop
sbb
cmp
sub
mov
stos
dec
xchg
sti
adcb
mov
aam
mov
mov
adc
aas
mov
cs
fists
xor
addr16
scas
or
cmpsl
jns
addb
sbb
mov
or
fcomi
push
dec
stos
inc
mov
sbb
icebp
push
xor
shl
push
mov
cmc
sub
shrb
jae
mov
and
cs
imul
or
pop
les
fcmovne
mov
imul
inc
adc
fs
cmp
or
stos
sub
cwtl
test
jg
bound
ret
jne
adc
cmpsb
jnp
fmulp
pop
adc
dec
popa
cmp
pop
call
sub
sahf
push
mov
bound
mull
bound
xchg
mov
js
inc
lahf
mov
insl
lds
loopne
xchg
inc
flds
test
and
mov
das
cmp
and
or
arpl
mov
loopne
popa
jb
in
div
push
mov
jbe
cmp
sbb
fistpl
push
in
pop
shlb
mov
call
jp
add
dec
mov
jp
xor
adc
inc
sbb
pop
or
jecxz
xor
out
lods
jns
mov
out
movsb
out
aam
andl
out
mov
in
hlt
in
xchg
inc
scas
sub
xor
dec
iret
mov
in
in
or
lret
inc
mov
adc
ja
sbb
mov
aas
rolb
xchg
sub
mov
add
dec
push
lods
je
clc
in
repz
push
int
cs
mull
mov
ret
sub
xor
aam
test
aam
not
enter
lret
pop
cmpl
in
sbb
cmp
pop
jbe
addb
loope
test
sub
pop
pop
pop
insl
sub
sub
dec
mov
cld
jae
loop
push
cmp
sub
cltd
and
scas
ss
inc
push
inc
setnp
sti
ljmp
mov
add
mov
cwtl
cmc
xchg
mov
inc
push
test
cltd
pop
aaa
test
push
jno
jae
roll
divb
lock
mov
int3
insl
fadd
negl
mov
daa
mov
idivl
daa
jmp
cmpsl
ljmp
pop
aad
es
loop
fnsave
into
add
mov
addb
test
sub
xor
loop
popf
push
mov
sub
mov
or
fcoml
and
mov
xor
aad
jb
lock
aad
in
and
testb
popf
cmp
adc
add
ja
in
in
shlb
mov
lret
jecxz
jmp
sbb
or
negl
sbb
sbb
jmp
scas
inc
repz
inc
jle
mov
mov
and
mov
scas
sub
sub
jb
cld
nop
xor
inc
shl
cwtl
mov
xchg
scas
scas
sti
mov
fisttpll
imul
stos
add
clc
hlt
sub
jmp
pop
flds
pusha
lea
push
mov
mov
cmp
mov
jae
out
rorb
ss
and
sub
pop
jl
mov
sub
or
ljmp
mov
jo
ficomps
les
cmp
enter
xchg
push
adc
adc
pushf
pop
add
fidivl
cmp
arpl
notl
mov
insb
stos
sbb
jne
jbe
pop
out
rcrl
mov
and
mov
push
fs
pop
sbb
pop
jmp
xchg
mov
insb
mov
notb
jnp
push
addl
inc
mov
aas
mov
js
dec
sbb
cmpsl
xchg
inc
js
imul
clc
mov
cmp
pop
pcmpeqd
or
push
enter
lcall
jb
aas
or
sbb
scas
sbb
stos
movsb
adc
sub
jge
in
dec
faddp
test
addb
je
insb
lods
test
sub
mov
fadds
js
adc
push
cli
sbb
jnp
inc
leave
mov
cmp
movsl
mov
fstpt
and
sbb
jnp
xchg
fstps
iret
push
movsb
mov
ja
rcrl
popf
lret
divl
popa
pop
sub
jl
pop
xchg
xchg
add
cmp
push
stc
sub
sbb
mov
xchg
mov
sub
mov
stc
pop
push
mov
jne
mov
imul
insb
push
inc
adc
stos
mov
jp
xchg
xor
pop
adc
and
popa
dec
stos
mov
movsb
and
adc
mov
int
fistpll
cmc
add
and
imul
push
lea
in
loop
negl
std
daa
sub
adc
or
add
jb
mov
mov
or
dec
add
cmp
fucomip
call
scas
jo
in
sarl
inc
das
xor
lods
imul
pop
pop
mov
sahf
lods
mov
push
in
xor
rclb
add
int
inc
ds
nop
outsl
sub
mov
mov
in
les
xor
push
inc
fmuls
add
push
and
dec
add
nop
adcl
stos
ss
cmpsl
out
cmp
xchg
add
inc
jb
lods
ljmp
cmc
in
push
dec
sub
rcr
dec
jb
cmpsb
push
out
or
cmpsl
cmpsl
or
lods
insl
leave
lods
jge
lahf
inc
movsb
stos
enter
mov
jo
add
mov
cmp
xor
mov
out
aas
dec
in
xor
mov
pop
pop
ficoms
xchg
cmp
je
sub
mov
xchg
jl
enter
push
sbb
adc
xchg
pop
inc
push
js
mov
insl
movsl
dec
ss
pop
pop
or
push
cmpsb
mov
subb
adc
push
andb
push
flds
shrb
mov
lock
and
xor
pushf
ljmp
xchg
in
out
mov
rcr
and
jnp
rolb
xchg
jbe
lcall
data16
jb
cmc
cmpsb
lret
std
inc
cmp
testb
or
cmp
push
add
pop
push
into
sti
stc
icebp
mov
push
xchg
sub
pop
jmp
lcall
jmp
repz
mov
outsb
mov
stos
mov
leave
mov
mov
outsb
int
sub
fnstsw
pop
insl
xchg
add
gs
lds
pop
push
enter
and
jge
test
not
es
mov
ret
xchg
lahf
enter
push
adc
sti
cmpsl
cmpsb
scas
inc
sub
xlat
xchg
or
fisubl
clc
adc
sbb
std
test
pop
fsubrs
cmp
sahf
outsb
aas
sbb
pop
adc
add
rcrl
push
or
negl
cmp
or
es
cmp
push
stos
out
gs
inc
inc
mov
rclb
notl
fidivl
push
rolb
xor
in
cmpsb
mov
loope
xor
les
pop
andl
movsb
scas
insb
int
push
lea
push
imull
push
imul
pop
in
shll
clc
sub
mulb
mov
dec
mov
negb
mov
mov
stos
enter
push
mov
bound
sbb
pop
mulb
push
sub
int
negl
cmp
incb
xor
fucomip
mov
sub
jp
mov
adc
stos
mov
icebp
jp
leave
cmpsb
mov
dec
fsubl
out
or
sub
mov
mov
xchg
xchg
cmp
mov
inc
push
aaa
fistl
shll
aas
test
mov
nop
inc
jo
mov
das
sub
mov
scas
pop
jp
push
jle
adc
cmp
push
lcall
add
out
sub
andb
inc
pop
nop
rcll
jl
jge
sbb
pop
jno
test
jge
pop
xor
cwtl
orl
pop
mov
fwait
adc
cs
jbe
ljmp
cmp
sbb
mov
xor
iret
sub
in
xor
mov
std
stc
push
mov
shll
cmp
data16
mov
sahf
dec
add
dec
cmp
insb
movsb
jle
and
packssdw
xchg
les
lods
or
mov
fnsave
jne
pop
dec
adc
pushf
adc
shrl
mov
mov
les
sbb
xlat
ds
push
adc
loopne
add
adc
xchg
test
xor
pop
fs
mov
inc
pop
jp
cmp
in
mov
pop
mov
mov
aad
dec
in
in
fldenv
or
inc
pop
into
icebp
gs
out
mov
scas
adc
dec
pop
and
mov
and
lahf
jbe
pop
cmpsb
imul
push
sub
lret
in
adc
adc
xor
xor
jmp
adc
or
dec
push
or
pop
pop
pop
push
daa
adc
repnz
fcomps
fs
jl
mov
test
pop
jbe
or
pop
sub
xchg
mov
mov
imulb
push
xchg
mov
push
sbb
push
xchg
icebp
push
iret
std
cmp
iret
fldpi
xchg
dec
push
mov
sub
inc
xchg
add
inc
adc
jb
ja
dec
add
test
dec
aaa
jo
lods
setns
test
sbb
test
mov
push
add
pop
add
test
lock
daa
imul
jge
mov
repz
pop
push
xchg
mov
sti
imul
imul
add
inc
mov
popa
in
int
adc
mov
je
enter
addr16
call
cmpsb
lret
add
mov
mov
scas
or
sbb
fcoml
sbbb
fs
dec
in
imul
pop
inc
repz
mov
aas
jg
insl
pop
orb
xchg
test
jp
repz
cmp
jne
and
stc
mov
cmp
fnsave
lcall
jbe
out
adc
hlt
cs
sbb
inc
xor
mov
lcall
aam
bound
xor
cmpsl
insl
shl
stc
xchg
ret
jge
movb
inc
cmpsb
add
adc
pop
pop
test
sbb
das
jb,pt
fwait
sub
fstpt
or
inc
push
jbe
fldcw
add
push
scas
imul
jg
adc
push
dec
imul
jno
movsl
stc
arpl
fisubs
cmp
subl
mov
push
inc
ss
push
and
sub
cltd
pushf
cwtl
add
fbstp
pop
test
mov
pop
imul
pop
jp
in
and
idivl
insl
sub
ljmp
clc
pushw
sub
gs
sub
ljmp
pop
pop
test
ss
push
mov
xchg
rorl
outsb
gs
push
mov
sbb
sub
sub
mov
std
movsl
adc
sub
ss
paddb
push
mov
mov
aas
popf
data16
lret
cld
addr16
std
dec
jle
dec
pop
dec
sub
xlat
bound
nop
cltd
test
lahf
addl
cmp
adc
cmp
scas
lods
je
and
jge
xchg
mov
jo
xchg
cwtl
sub
data16
paddusw
pop
adc
pusha
push
or
stos
pop
popa
ret
pushf
and
jnp
ja
fadds
in
rorb
mov
jmp
cld
faddl
leave
pop
subb
scas
lods
pop
adc
and
mov
add
cmp
jecxz
push
jb
mov
inc
imul
test
mov
mov
cmp
adc
add
mov
mov
out
jnp
pop
pop
add
ret
mov
dec
mov
xor
in
xlat
pop
insl
out
push
xchg
pop
pushf
cmc
cmpsb
dec
in
sbb
add
fdivrs
jbe
and
lea
aam
shlb
mov
pop
and
fisubrl
jne
adc
xchg
addr16
and
iret
stos
rcrb
sbbl
sub
mov
mov
xor
jge
pop
xchg
adc
nop
les
sahf
jb
fldcw
pop
psubusw
mov
xchg
xchg
jbe
bnd
cltd
outsb
add
sar
mov
add
ret
in
stc
fldcw
and
dec
inc
xor
mov
sbb
push
add
shrb
and
pop
sahf
xchg
ljmp
cli
or
rcrl
xchg
loop
fbstp
mov
pop
mov
mov
mov
xchg
xchg
and
repnz
les
inc
jno
repnz
dec
lods
cmp
jnp
sbb
test
aad
sbb
sbb
in
divl
or
lcall
mov
mov
xor
sti
add
mov
sahf
push
test
and
mov
mov
or
xchg
scas
je
mov
push
sub
dec
inc
xchg
sbb
hlt
insl
push
mov
fwait
or
mov
aas
sbb
scas
roll
cs
imul
int3
loopne
lds
mov
xor
adc
stc
xchg
jl
lret
sub
sbb
adc
and
imul
ficompl
xchg
pop
xor
lock
add
pop
inc
fnsave
add
jl
nop
jg
mov
cmp
bound
cmpsb
inc
mov
push
addr16
inc
mov
in
mov
xor
or
int
sbb
notl
in
icebp
cmp
push
xor
lds
hlt
sub
xchg
jg
icebp
sub
push
leave
rorl
jge
pop
sub
adcb
add
repz
push
lods
mov
or
mov
ficoms
fbld
cmp
sbb
dec
out
xchg
dec
pop
das
mov
pusha
out
and
cmp
into
pop
pop
insb
mov
pop
scas
ja
ja
push
push
mov
cmovl
cmp
in
stos
mov
push
in
mov
lahf
gs
pop
adc
mov
gs
mov
xor
cmp
insb
jnp
sub
mov
inc
into
xor
hlt
fnstsw
sahf
mov
mov
daa
mov
jp
add
jge
out
enter
jp
stc
aad
movsb
jo
jle
lret
ret
repz
icebp
fsub
out
cld
mov
cli
dec
sub
jl
jne
adc
push
add
scas
test
stos
push
and
dec
es
pop
jge
lods
fwait
pop
and
mov
test
and
fistpll
dec
test
mov
sbb
push
lds
clc
iret
xchg
mov
xor
lea
je
pop
adc
mov
sub
or
icebp
add
xchg
mov
push
xchg
popl
in
fstl
ret
cmpsl
pop
or
out
jp
and
imull
testl
and
popf
push
push
stos
xor
sub
and
push
push
cmc
dec
jge
outsb
pop
movsl
xor
or
adcb
stos
jns
in
adc
dec
mov
lahf
dec
or
add
xchg
stos
pop
sbb
fstpt
out
scas
mov
cmp
hlt
sub
adc
int3
add
push
jle
adc
cli
scas
xchg
mov
pop
movsb
cmp
sub
imul
cltd
push
pop
cld
daa
adc
inc
xor
loop
pop
in
mov
cmp
jmp
testb
inc
adc
leave
sahf
cmpsb
inc
sub
movsl
jge
inc
inc
nop
insl
mov
push
pop
sbb
repnz
cmpsl
xor
sub
adc
cld
incl
shll
inc
in
movsl
ret
insl
mov
faddl
mov
dec
in
and
add
das
mov
jno
inc
pop
mov
dec
dec
addr16
pop
adc
xchg
xor
lret
test
cli
xor
bound
adcb
pop
dec
sahf
testl
lods
jo
and
nop
addr16
sub
xchg
push
mov
add
pop
push
xchg
fsubl
fimull
sahf
jg
sbb
cmp
jle
inc
test
sub
push
inc
inc
or
mov
dec
xor
jbe
or
cmpl
mov
call
mov
cmp
pop
popf
push
mov
or
jae
and
push
cmc
sti
cmp
cmp
or
out
mov
test
nop
lret
test
sub
jg
lea
lds
and
xchg
lods
pop
loope
out
enter
repz
jmp
ret
adc
mov
into
leave
cmp
inc
sbb
notl
xchg
stos
scas
adc
testl
pop
push
push
movsl
xor
sub
outsb
pop
enter
dec
in
jle
sbb
stc
cmpb
sub
jbe
inc
xchg
xor
sti
xor
sub
sub
lcall
cmpl
dec
in
jae
test
std
cmp
pop
pop
adc
xchg
xchg
test
mov
xchg
cmp
mov
and
mov
push
rcrl
aaa
sarb
jge
mull
or
xchg
int3
pop
mov
mov
cmp
loop
imul
pushf
arpl
les
pop
xchg
test
pushf
mov
xor
leave
mov
cmp
sbb
rol
in
sti
mov
in
str
xlat
mov
cltd
cld
incl
daa
mov
test
fldcw
movsl
jae
xor
inc
jnp
fdivrl
std
jb
push
imul
sbb
loop
push
xchg
and
dec
add
cli
cs
dec
dec
sbb
push
repz
loopne
loope
mull
fs
cmp
lods
push
out
dec
out
sub
loop
ret
jne
outsb
popf
pushf
loope
inc
push
pop
push
mov
je
pop
dec
movsl
or
mov
jge
stc
mov
push
sbb
fdivrl
mov
mov
movsb
clc
cmp
in
out
push
push
fidivs
ret
mov
add
clc
pop
pop
adc
cs
adc
adc
mov
mov
and
pushf
mov
int
je
frstor
mov
data16
pusha
dec
imul
xor
dec
inc
cltd
pop
jno
pop
cmp
mov
sbb
pop
fnsetpm(287
inc
cld
or
mov
jne
cli
insb
jle
jge
ds
jnp
outsb
mov
mov
jae
repz
repnz
repz
pop
mov
mov
lret
adc
jge
cmp
popf
les
popf
xor
imulb
jmp
cli
xchg
je
pop
popf
adc
dec
jecxz
mov
mov
insb
mov
ss
xor
cli
add
fcmovu
add
out
and
jne
sbb
jg
sbb
imull
cmp
mov
mov
cmpsl
inc
stos
and
jns
sbb
xchg
mov
pop
data16
jns
in
cmp
fildl
shl
mov
and
jecxz
dec
bound
xor
movsb
gs
mov
xor
mov
or
icebp
packuswb
pop
mov
mov
pop
cmc
jle
jbe
mov
jle
inc
sub
lret
dec
stc
mov
adc
out
movsb
dec
jg
pushf
jmp
adc
lock
push
hlt
mov
fs
adc
inc
adc
cli
xchg
int3
xor
pop
inc
loope
fdivrs
in
aam
sbb
fldcw
push
sbb
test
mov
loope
lret
mov
cmp
fistl
cmp
dec
jnp
sub
lcall
outsl
pop
mov
mov
sahf
mov
loope
add
das
cmc
sbbb
sbb
sbb
jne
pop
jb
lock
or
mov
mov
mov
and
in
pop
add
pusha
cmp
rol
cmc
mov
out
ljmp
xchg
pop
push
sub
pusha
fcoms
sbb
leave
push
jmp
jb
mov
sbb
add
adc
lcall
push
inc
sbb
clc
mov
loope
dec
sbb
mov
hlt
xchg
das
jmp
push
cld
mov
out
and
pop
push
push
cmp
push
inc
lock
xor
dec
add
mov
repnz
or
lcall
cmp
jne
dec
mov
add
mov
jp
es
mov
push
push
insl
sbb
mov
pop
std
add
cmpb
ds
rol
jecxz
scas
add
pop
fsubs
add
imul
sub
out
inc
jno
sbb
int
dec
cmovae
flds
aas
jg
push
jg
push
andb
mov
out
pop
add
scas
jl
jg
test
push
mov
xor
pusha
mov
xorb
cmp
js
ss
in
lret
inc
in
popf
push
inc
jmp
mov
sahf
ret
testl
aad
mov
jno
mov
jbe
dec
rcl
dec
pop
sbb
lret
cmpsb
push
and
and
xchg
jns
mov
aaa
pop
mov
call
push
or
bound
adc
fadds
lea
xchg
xor
xchg
nop
mov
cmp
xchg
insb
inc
pop
mov
sbb
mov
aam
pop
dec
das
cmpsl
xorl
sub
or
mov
shrb
fnstcw
call
mov
mov
mov
mov
or
jns
icebp
cs
gs
imull
cmp
ss
jl
sbb
out
loop
adc
adc
cwtl
sbb
sarl
sahf
shrl
inc
sub
push
aaa
pop
inc
push
fmuls
push
mov
cmp
lahf
lds
and
enter
inc
cmpsb
andl
sbb
fwait
pop
ret
mov
hlt
inc
pop
xor
rcr
out
daa
sti
add
scas
inc
repnz
ret
orb
inc
sub
xchg
incl
mov
cli
pop
pushf
xchg
ds
push
gs
mov
pop
inc
dec
jbe
xor
cmp
fsubrp
inc
mov
mov
loop
and
and
add
imul
push
adc
push
cmp
mov
scas
mov
mov
sub
push
mov
and
jecxz
jle
daa
scas
cwtl
rclb
shr
sbb
sbb
sarb
loopne
test
and
push
cmp
mov
adc
cmp
bnd
pushf
xchg
and
add
or
sub
int
push
movsl
sub
mov
out
adcl
mov
jmp
cmpsl
mov
push
std
test
lea
test
pop
cmc
mov
cld
mov
mov
mov
push
jne
jns
sbb
add
fsubl
cmp
pop
or
mov
or
xchg
shll
and
inc
movsb
fbstp
mov
sbb
adc
and
mov
push
adc
mov
jns
jle
pop
push
pop
sub
fsubs
dec
in
dec
js
jge
adc
nop
xor
mov
fnstsw
je
jne
fldt
aad
inc
bound
addr16
inc
mov
in
lcall
add
test
push
nop
ja
push
push
or
adcb
sbb
icebp
cmc
fsubrl
test
mov
lea
cwtl
fidivl
pop
sub
fnstenv
pop
rcrl
mov
loopne
pushf
popa
ret
push
xor
mov
cmp
es
jnp
mov
pop
sbb
repnz
mul
xor
cmpsb
jne
scas
mov
mov
jge
stos
lcall
loope,pn
popa
mov
jo
incb
sbb
lock
pop
in
fcmove
sub
jno
in
loope
ds
scas
imul
loope
cli
lea
or
mov
push
inc
add
shrb
adc
cmp
dec
inc
and
xor
loope
stc
stos
dec
pusha
or
add
xchg
push
add
aaa
mov
pop
cmp
add
cmp
push
jnp
mov
frstor
xchg
and
push
mov
cmp
adc
add
pop
insb
shll
daa
mov
mov
aad
or
or
push
das
mov
fsubs
add
inc
xlat
jle
mov
inc
addr16
or
addps
sub
mov
mov
dec
aaa
mov
out
fcmovnb
aas
pop
and
mov
int
sbb
sbb
fs
loopne
lods
pop
fcoms
pop
call
rol
leave
inc
syscall
mov
out
dec
sahf
add
add
xchg
mov
iret
ret
adc
cmc
jg
xchg
sub
xor
and
jae
add
cmp
push
or
icebp
fdivr
js
jae
push
pop
inc
loopne
push
xor
dec
pop
jecxz
test
negb
sbb
sarb
stos
jmp
in
repz
subb
int3
loopne
test
jne
roll
lods
std
pop
cmpsl
push
push
scas
or
das
sbbl
shlb
sub
cwtl
test
pop
and
dec
adc
mov
jae
rcrb
cmpsl
adc
shlb
ljmp
cmpsl
popf
or
pop
mov
push
mov
xchg
aaa
repz
lahf
xchg
adc
jmp
test
add
outsl
pop
mov
mov
or
ss
scas
mov
pop
sub
outsb
insl
int3
push
dec
xor
mov
sbb
enter
adc
sbbl
push
arpl
adc
leave
jmp
dec
pop
pop
cmc
setne
xor
push
stos
pop
shll
nop
xlat
ret
jle
jns
fdivrl
rcrl
mov
je
xor
stc
or
mov
xchg
in
xor
imul
cmp
xor
mov
sbb
rorb
pop
int
sub
or
aaa
and
and
fwait
mov
imul
mov
int
xorl
pushf
insl
sub
fldenv
cli
arpl
inc
out
and
sub
cmpsl
testb
pop
cli
aaa
in
mov
add
rcpps
add
pushw
lahf
insb
in
mov
setbe
jno
ja
int
mov
aaa
xchg
repnz
icebp
cltd
repz
rolb
mov
dec
cmpsb
or
enter
pop
mov
lcall
ret
lret
jge
mov
fwait
in
scas
sbb
call
mov
xor
lret
stos
out
sti
adc
or
lods
lods
inc
fwait
mov
sub
loopne
ljmp
scas
dec
sti
mov
adc
dec
mov
jle
sub
or
sbb
add
lds
rcl
sub
sbb
fsubr
adc
rol
movsl
out
loope
scas
cmp
xchg
data16
bnd
and
out
roll
aaa
sahf
movsl
xor
xor
jecxz
into
lods
lret
gs
push
push
sbb
sbb
int3
arpl
pop
mov
lcall
pop
and
addr16
push
mov
test
arpl
sbb
sti
fwait
test
mov
jno
mov
stos
lret
mov
xchg
sbb
jbe
inc
mov
inc
in
xor
test
cmpsl
mov
mov
mov
mov
popf
mov
icebp
add
arpl
ss
popa
cld
shlb
adc
sahf
add
lea
out
or
roll
adc
cwtl
ss
es
sbb
mov
push
xchg
scas
sarb
subb
out
mov
shlb
inc
test
mov
fstps
sbb
call
jle
scas
sti
ret
das
movsl
mov
mov
cmpb
jmp
xchg
pop
aad
xchg
xchg
cmp
test
jmp
jae
inc
add
adc
test
xor
clc
push
jnp
iret
mov
push
cmpsl
inc
int3
xchg
or
add
lret
push
pop
fisubrl
add
push
cwtl
dec
imul
out
in
jecxz
fcmovnbe
mov
fbld
sub
enter
test
fidivl
or
mov
lahf
daa
jmp
dec
and
imul
xchg
jge
out
mov
movb
sbb
jge
stc
aaa
addl
adc
pop
sbb
mov
data16
mov
das
std
shlb
mov
adc
sub
inc
xor
xor
ljmp
jne
jg
pop
or
clc
add
mov
dec
pushf
push
les
les
xor
cltd
daa
mov
pop
fcompl
lret
pop
mov
test
stos
jns
mov
andb
mov
push
jo
test
daa
lods
clc
leave
xchg
mov
fidivs
pop
jnp
or
mov
fbstp
popa
cmpsl
xor
lea
stos
lods
inc
mov
lock
add
sarl
add
mov
movsb
pop
aam
int3
stos
ds
push
lods
pop
loopne
mov
mov
pop
dec
lea
loop
mov
dec
scas
and
mov
jp
push
mov
jecxz
enter
stos
testb
push
insb
or
sub
cwtl
push
mov
mov
and
mov
push
mov
popf
add
mov
push
cmpsb
jb
mov
jle
add
and
add
addb
xor
and
mov
push
cmp
aad
mov
adc
scas
loop
pop
dec
cmp
mov
bound
sub
sub
stc
cwtl
push
push
jl
add
and
pop
bound
mull
dec
pop
cmp
jns
inc
shll
xor
lret
xor
or
shrl
pop
push
mov
mov
and
push
loop
jg
sub
lock
jg
loop
or
int
aam
sti
test
xchg
pop
add
adc
push
fcompl
sbb
inc
loop
adc
push
xchg
dec
add
adc
incl
add
lret
or
rorl
repnz
xchg
daa
lahf
sbb
ljmp
lahf
mov
orb
lods
pop
jle
outsb
add
imul
test
movhps
jmp
call
adc
daa
notl
rorl
movsl
fdivl
and
dec
test
adc
pop
pop
cwtl
out
in
mov
stos
cmc
inc
ds
mov
mov
xchg
sbbb
sbb
addr16
imul
adc
cmp
or
adc
jge
mov
mov
clc
cmp
add
jns,pt
or
cmp
int3
cmc
inc
lahf
imul
sub
rcr
mov
test
enter
mov
and
mov
xchg
jnp
lods
stc
xor
stc
mov
xor
mul
ds
stos
jbe
cmpsb
push
mov
ja
fsub
mov
jg
dec
leave
jb
pop
bound
sbb
adcl
jmp
sbb
gs
imul
pop
dec
out
fisubs
test
outsl
and
int
in
dec
lods
mov
loopne
jge
xor
jle
out
icebp
dec
sbb
insb
xorb
aas
sbb
jne
into
push
cs
dec
push
sbb
fs
lds
cmpsb
iret
jbe
inc
scas
cmp
jg
sub
adc
sbb
mov
clc
nop
dec
movb
popa
inc
fwait
mov
jge
xlat
rcl
mov
sub
mov
gs
test
pop
lahf
out
js
adc
movsb
ret
adc
xor
cmp
jge
repz
in
mov
inc
mov
enter
push
sbb
pop
sahf
jecxz
and
push
jbe
xor
xchg
add
enter
and
daa
mov
aad
or
cmp
mov
shrb
jle
imul
pop
add
mov
js
imul
push
adc
jns
jg
hlt
dec
imul
mov
imull
adc
loop
icebp
fimull
cmpl
dec
push
gs
inc
rcrb
push
cld
xchg
clc
lret
repnz
cmp
add
fucomip
jno
adc
jge
lds
leave
jle
jl
or
inc
add
and
inc
test
xor
movl
stos
mov
leave
cmp
or
aad
out
dec
sub
push
flds
adc
pop
push
cmp
js
and
push
xchg
cltd
inc
out
icebp
sub
or
mov
cwtl
lret
mov
pop
imul
mov
sbb
xor
scas
pop
pop
sahf
mov
add
shrl
jle
push
int
jle
ss
test
cmpb
shl
aad
clc
xor
into
lahf
pop
test
out
ficompl
mov
orl
mov
jnp
fdivs
sbb
and
add
and
mov
dec
cmp
mov
popf
mov
lcall
xchg
push
movsb
mov
mov
push
sub
and
push
into
lret
cmp
push
sarl
les
out
or
lods
cmp
out
inc
loopne
lods
fisttpll
add
popf
or
loope
fildl
xor
or
inc
les
call
add
mov
sub
int3
movsb
cmovns
ljmp
cmp
idivl
cmpsl
sbb
adcl
loope
pop
pusha
ds
movsb
jle
cltd
dec
es
aam
dec
dec
mov
sub
es
movsb
sarb
sub
push
sbb
sub
pop
mov
les
jge
mov
decb
sbb
pushf
cmp
mov
into
int
mov
stos
pop
out
sub
jl
addb
test
imul
cmc
loope
enter
jp
inc
or
imul
stos
das
enter
push
mov
mov
mov
adc
jecxz
lea
cmp
out
dec
sub
inc
jne
popl
xchg
les
fdivrs
sti
cmpl
je
ljmp
hlt
test
inc
mov
inc
dec
mov
popf
push
sahf
or
mov
xchg
call
std
push
in
jl
add
imul
shlb
cmpsl
xchg
aad
cmp
and
adc
add
shlb
sbb
and
repnz
cmpsl
pop
xor
loope
je
fidivrl
xor
xor
stc
mov
adc
and
into
xchg
dec
mov
push
mov
or
dec
xorb
jne
clc
inc
enter
jecxz
lea
sbb
cmp
or
into
pop
sub
shrl
adc
jmp
call
cmpsl
adc
xor
std
jno
xchg
sub
bound
in
and
and
cli
imul
sbb
imul
or
lcall
pusha
cwtl
popf
and
fldt
xchg
daa
les
jnp
addl
pop
or
daa
rcr
js
push
mov
sub
cmpsb
lret
push
adc
cs
out
adc
push
scas
ja
xchg
cmpsl
jno
mov
jle
imul
icebp
stos
sub
mov
sub
test
scas
push
cwtl
jns
cmp
or
dec
into
fdivrp
cli
cwtl
inc
test
mov
push
cmp
jae
leave
aam
xchg
sti
mov
shrl
popf
mov
dec
and
mov
pop
xchg
mov
jne
xchg
lret
dec
inc
in
jge
mov
pop
aas
pop
mov
mov
cmpsb
sar
addr16
and
push
out
xchg
jecxz
test
fcoms
hlt
cmp
cli
lcall
adc
inc
dec
mov
icebp
jne
inc
jns
shlb
in
mov
sub
std
enter
adc
lods
imull
enter
test
in
orb
fidivrs
cwtl
mov
mov
in
adc
lahf
and
inc
lret
mov
cmpsb
xor
pusha
test
out
jmp
pushf
popf
outsl
and
fcomps
sbb
cli
jge
sub
cmp
addb
and
ja
mov
lea
je
fldl
test
xor
call
dec
inc
movb
sub
jl
stc
jl
push
push
sbb
ret
dec
sub
xor
movsl
pop
aaa
pop
and
jo
add
inc
popf
rolb
in
mov
fsts
mov
cmp
les
inc
test
push
cmp
add
insb
aad
lcall
inc
dec
and
rcr
and
imul
jecxz
mov
jb
xchg
aad
push
push
mov
fiaddl
jecxz
pop
jg
add
decl
cwtl
inc
dec
jge
mov
pop
dec
pop
addr16
fmull
fprem
lock
pop
jno
xor
cmp
ss
ficoml
xchg
add
push
adc
xchg
fdivrl
data16
imul
into
cmp
int3
adc
adcb
cs
xor
mov
jp
int
movsb
jle
stos
lahf
dec
mov
insl
rclb
icebp
hlt
stos
push
lret
inc
xchg
and
pop
sbb
stc
fmull
pop
xchg
std
pop
sbb
call
out
popa
inc
inc
shll
fwait
jl
and
enter
test
ret
push
mov
popa
xlat
call
shl
in
push
jl
or
test
mov
pop
les
or
dec
aad
xchg
lods
xor
mov
jp
leave
nop
mov
mov
add
jbe
icebp
std
lret
popf
lods
jle
add
aad
adc
hlt
sbb
jge
lahf
xchg
cmp
cld
mov
out
sahf
stos
je
push
dec
adc
mov
or
fstl
stos
adc
es
mov
add
js
and
psubsw
icebp
fwait
mov
inc
mov
clc
stc
sti
in
xchg
aam
nop
sbb
sbb
lcall
jo
aad
pop
pop
std
sbb
add
xor
inc
imul
rcrb
add
inc
mov
lock
stos
xchg
lds
scas
mov
push
scas
sti
push
cmpsl
mov
not
xor
mov
int3
push
xorl
inc
test
and
daa
int
jmp
mov
xor
dec
nop
int3
add
jns
ja
xchg
sbb
je
xor
adc
jns
mov
sbb
xchg
and
inc
add
loop
ljmp
inc
fiaddl
ljmp
les
and
test
aaa
mov
call
push
repz
mov
and
xor
cs
adcl
add
icebp
jbe
jns
lods
push
stos
daa
xchg
fists
outsl
lret
dec
push
xor
xchg
outsl
push
call
mov
fldcw
in
popa
insb
fstps
cwtl
test
pusha
lea
xchg
movsb
adc
mov
mov
cmp
inc
push
aas
fwait
or
xchg
hlt
dec
mov
out
inc
jbe
pop
scas
sahf
fs
insl
sbb
insb
ficoms
aam
xor
push
xor
jg
adc
lcall
loope
and
in
int3
out
jae
mov
cltd
xchg
sub
divl
jb
adc
imul
fildll
mov
cmp
adc
adcb
es
mov
dec
mov
dec
lret
repnz
fsubr
push
pusha
push
cmp
imul
in
clc
pop
nop
cmp
cltd
mov
shlb
inc
movl
and
mov
and
adc
adc
std
clc
leave
push
stos
sub
xchg
mov
inc
adc
mov
cld
xor
rclb
or
imul
xor
mov
cld
imul
or
aad
inc
out
hlt
mov
dec
cmp
cmp
pushf
inc
ret
push
loope
test
and
cmp
mov
pop
cmp
stc
pop
ret
cmp
sub
xchg
test
sbb
test
jp
mov
cltd
test
lret
adc
fldt
arpl
or
in
push
xor
xchg
jmp
fistpll
mov
icebp
sbb
test
loop
and
fcom
popf
and
adc
mov
sub
lret
data16
in
loope
mov
pop
add
push
clc
enter
je
jo
shlb
pop
mov
inc
imul
pop
lods
loopne
das
jns
icebp
shl
lcall
cmp
mov
cmpsb
inc
test
jmp
repnz
cmc
jae
lea
pop
int3
sbb
idivl
popa
test
inc
mov
inc
outsb
rcrl
and
popa
sbb
pop
leave
xchg
test
in
push
inc
push
iret
loopne
pop
aad
and
outsb
pushf
mov
mov
pop
test
or
pop
xchg
mov
cld
jne
cltd
dec
dec
rolb
push
mov
pop
leave
inc
jge
cmpsb
jbe
cmc
movb
push
out
xchg
das
dec
pop
negl
pop
pop
mov
cwtl
data16
or
push
ret
bound
push
push
add
mov
test
xchg
stc
test
int3
mull
cmpl
fdivl
out
rcrl
pop
cli
jns
gs
pop
mov
into
mov
adc
enter
mov
and
movsb
push
rol
or
adc
pop
sbb
jns
loopne
stos
xor
mov
jle
ret
insl
push
scas
jbe
xchg
repnz
xor
inc
jg
imul
mov
adc
fstpt
or
pop
and
mul
pusha
sahf
adc
test
clc
mov
popf
popa
mov
xor
je
loop
mov
jns
ljmp
mov
ds
push
sbb
lods
je
jno
sbb
adc
xor
mov
pop
fcom
jmp
ret
ss
dec
xchg
and
orb
cwtl
lret
fisttpl
shl
inc
sbb
jbe
mov
in
loop
pushf
sub
xchg
push
sub
jb
fisubrl
call
rol
jo
stos
cltd
mov
adc
pop
xchg
push
lods
bswap
or
push
popf
scas
jo
repz
cs
daa
loop
fidivrs
in
cs
stos
sarb
sub
gs
fbld
ss
lret
cmp
mov
sbb
cs
clc
pop
cmpsl
test
jo
or
scas
sub
pusha
dec
push
out
xchg
add
pop
sbb
fsub
sbb
and
fsubrs
ret
clc
mov
xchg
int
push
movsl
and
xor
into
int
pop
dec
lea
xchg
outsl
inc
icebp
subb
xor
dec
jge
movsb
sbb
fstpt
xchg
leave
call
xor
cmp
repnz
inc
insl
je
stc
aaa
ss
scas
or
ret
cmpsb
cmpsl
out
fs
cmc
lds
dec
icebp
jge
inc
lds
dec
xor
mov
clc
pop
mov
sub
rcrb
out
jno
int3
sahf
lea
jno
fcmovnbe
jno
hlt
dec
aad
das
lret
cli
or
out
sbb
jp
int
adc
mov
pop
shrl
test
pushf
xchg
in
lea
in
scas
mov
cmp
pop
dec
jb
or
push
test
cmc
cli
in
mov
das
pop
sub
bound
xor
mov
inc
cmp
inc
pop
int
std
add
enter
mov
ds
adc
xchg
mov
xor
sub
lahf
stc
jne
out
int3
sbb
ds
or
xor
jle
jge
dec
jg
xchg
pop
sbb
lret
dec
dec
or
sub
aam
stc
push
pop
mov
mov
fisubrs
lods
out
push
dec
inc
cmpsl
inc
in
or
into
lret
mov
movsl
or
shll
insb
rorl
jecxz
dec
push
shl
iret
cmp
push
mov
lock
pop
inc
ret
adc
or
data16
mov
jp
mov
daa
mov
lock
stos
mov
setle
js
gs
fiaddl
insl
mov
pop
and
mov
adc
mov
div
out
lds
hlt
push
stos
mov
iret
scas
add
mov
pop
and
jo
lcall
jge
fisubs
mov
jnp
loopne
hlt
pop
push
jp
out
in
fdivrl
cmc
icebp
xor
push
mov
mov
ss
les
sbb
add
adc
mov
pop
sub
loopne
sbb
push
enter
and
loope
out
xchg
ss
mov
push
in
cmp
scas
rorb
int
ja
insl
imul
inc
pop
into
mov
xor
aad
loope
fldcw
mov
adc
jmp
mov
out
jno
sar
pusha
arpl
and
push
and
jns
sti
cltd
pop
movb
sub
push
mov
into
sbbb
aad
jo
ja
dec
xchg
or
xor
rol
inc
daa
js
cmp
loope
push
jge
dec
in
mov
push
mov
push
clc
popa
cwtl
pop
stos
inc
scas
mov
or
rcrw
pop
adc
in
gs
mov
pop
xor
testb
arpl
add
in
cmp
cmpsl
and
cmp
or
icebp
mov
cmp
jbe
in
out
lea
inc
sbb
sti
shll
inc
sbb
test
les
aas
filds
out
jp
sub
jbe
aad
push
xchg
push
sbb
ret
fcoml
ja
test
scas
mov
push
aam
jle
pop
add
ret
inc
orl
xor
push
aad
vmulps
stos
in
jmp
cwtl
or
xor
jp
mov
aad
xchg
mov
xchg
sbb
pop
and
mov
in
cmp
mov
xchg
shlb
dec
mov
cld
mov
mov
pop
cmp
cmc
lods
cmp
jp
mov
mov
scas
xor
shl
cmp
pop
and
dec
fcmovnu
jmp
std
sub
jl
repnz
cld
orb
sub
dec
ficoml
mov
inc
cmp
notb
ja
adc
test
add
nop
iret
fistpll
add
je
or
push
adc
subb
cmp
adc
int
shl
push
out
lcall
xor
insb
dec
cmpb
and
adc
dec
cmpsl
add
mov
movups
or
fdivl
cltd
sbb
mov
pushf
mov
neg
add
push
data16
mov
mov
and
pop
imul
jle
filds
icebp
push
adcl
stos
push
add
ret
and
ja
mov
xor
std
adc
sarl
lret
push
icebp
cltd
or
add
mov
test
mov
jmp
xor
mov
sub
sbb
es
dec
xchg
leave
xchg
pop
or
test
ss
fists
lcall
test
jl
mov
xor
inc
mov
outsl
xor
stc
movsl
push
shll
or
imul
lods
data16
pop
rorl
out
dec
pop
sub
xchg
sbb
int
adc
jo
add
mov
out
inc
lea
or
dec
mov
cmp
and
mov
int3
clc
dec
insb
mov
mov
pushf
jb
cmp
add
icebp
aad
pop
xchg
cmpsb
shlb
add
push
mov
pop
in
pusha
and
mov
fs
lret
xchg
lds
add
xor
add
jl
mov
xchg
cmc
sub
test
jnp
inc
and
jno
repnz
movsl
fs
test
xchg
ss
cli
lods
clc
cmp
std
lret
loopne
jp
and
fisubl
xor
mov
lret
push
add
dec
mov
add
add
or
xor
mov
cmpsw
or
aas
jbe
mov
imul
adcb
dec
sub
in
popf
daa
cmp
xchg
test
inc
jno
mov
xchg
imul
mov
sub
shrl
push
and
sbb
bnd
push
pop
iret
and
dec
je
xor
pusha
test
stc
sti
jg
cmp
cmp
cmp
dec
std
xchg
or
lahf
in
out
scas
clc
sub
cli
inc
bound
sti
in
test
andl
mov
mov
or
or
cmpxchg8b
lret
ret
imul
xor
xor
push
lods
aas
das
mov
shlb
cwtl
mov
sarb
sub
and
cmp
cmp
and
adc
jno
rorl
jge
out
aam
aaa
fisttps
and
jne
sbb
filds
int
scas
das
into
orl
daa
in
in
xchg
cmp
inc
test
and
andb
iret
mov
or
xchg
xor
cltd
jb
into
andl
push
sbb
push
sbb
and
jmp
and
enter
stos
push
and
fwait
adc
and
lock
test
movsb
or
loope
jns
xor
lcall
dec
add
pop
jbe
int
fimuls
lods
inc
les
dec
jecxz
adc
imul
int3
mov
notl
adc
push
iret
inc
sbb
mov
push
or
rclb
jle
push
jecxz
mov
sub
xchg
xor
cli
sub
inc
das
jo
inc
sti
out
push
xor
lret
nop
cli
cmp
and
jbe
mov
repnz
inc
sub
js
ds
sub
mov
sub
out
mov
add
test
pop
js
add
insb
pop
push
cli
movsl
push
loopne
mov
pushf
in
push
bound
inc
aad
xchg
stc
test
cmp
adc
pop
xor
jg
imul
aaa
adcl
inc
arpl
jp
push
push
push
sbb
out
pop
pop
repz
sub
inc
push
pop
repz
mov
add
xchg
mulb
in
ja
insl
bound
mov
shrb
lds
inc
adc
cld
jnp
or
aad
pop
stos
mov
mov
pop
out
push
mov
push
cld
pop
nop
jb
scas
pop
or
cwtl
dec
push
ds
int3
mov
icebp
out
add
mov
imul
jge
push
sbb
fs
and
mov
cmp
cltd
shll
or
into
loop
int3
lret
rcll
xchg
arpl
fbstp
sub
pop
fsubl
in
push
push
add
or
sub
sbb
je
sarl
dec
fchs
jecxz
pop
cli
dec
int
xor
jno
js
xchg
mov
or
mov
pop
mov
xchg
aas
das
repz
das
bound
pop
mov
or
out
lret
nop
lds
jno
push
sbb
rolb
sub
xor
hlt
fnstsw
or
mov
sbb
mov
iret
mov
push
adc
jb
jmp
insb
sub
clc
mov
rorl
ljmp
clc
int3
movsb
sub
addl
add
cltd
dec
or
scas
rclb
push
pop
hlt
push
sub
cld
mov
mov
or
pusha
dec
and
cmpsb
xor
xchg
jb
jno
bound
ja
testb
jne
cli
lret
or
cmp
fisttpll
aas
adc
andb
imul
movsl
mov
ja
dec
jl
jg
out
sbb
rol
dec
gs
sti
add
pop
jg
shrl
test
mov
mov
sbb
dec
stos
mov
testl
mov
shll
xor
inc
faddl
fs
and
cmpsl
orb
sbb
aas
mov
push
add
xchg
mov
imul
sub
mov
push
ret
addb
add
ficomps
or
test
push
movsl
outsb
jno
pop
pop
push
data16
aaa
jo
cmc
rcl
cmc
jp
ja
jns
or
mov
in
sti
push
shl
mov
fistps
je
sub
inc
inc
mov
cmpsl
scas
cmp
roll
cmp
loope
jns
mov
push
sub
dec
cwtl
mov
jmp
mov
push
sahf
mov
lret
push
mov
push
popa
fsubs
xchg
rclb
mov
jns
cld
aas
xchg
adc
pop
mov
dec
add
xor
je
test
add
cmp
mov
idivl
and
push
jle
mov
cmp
imul
cwtl
inc
arpl
pop
divl
pusha
mov
out
inc
leave
in
in
pop
ljmp
mov
or
pop
mov
test
punpcklwd
in
ss
scas
mov
inc
xchg
out
into
mov
lea
mov
pop
mov
dec
adc
shrl
lret
aam
push
pusha
lods
push
loop
dec
and
ds
mov
mov
jo
mov
pushw
dec
out
imul
out
roll
and
testb
xor
fcmovnbe
fs
cmp
sub
stos
sbb
xchg
xchg
lret
inc
adcb
loopne
movsl
xchg
into
lock
or
hlt
sub
fwait
shll
je
cld
add
loop
pop
icebp
cli
mov
orl
push
mov
add
pop
xor
imul
push
fcoms
inc
mov
sbb
into
jecxz
push
in
push
hlt
xchg
addl
jne
xlat
cmp
stc
add
aad
repz
jns
lret
add
frstor
mov
mov
je
push
adc
test
rcll
sbb
push
stos
movsb
push
movsb
movsb
sbb
cmp
decl
loope
adc
std
loop
fstpt
dec
mul
push
mov
cld
cmp
clc
int3
dec
or
and
aam
sub
sub
push
xor
push
popf
sbb
pop
mov
sbb
cmp
hlt
lret
add
xchg
inc
repz
cs
ss
ja
ret
adc
rolb
xor
lock
xor
pop
stos
hlt
sub
sbb
xor
clc
cmpsl
push
xchg
push
fs
xchg
rcrb
ret
jne
xchg
lcall
iret
fwait
pop
pop
insl
or
scas
sbb
pop
push
pusha
movsl
and
stos
test
loop
jne
clc
dec
popf
xchg
mov
mov
or
rcrb
pop
call
or
xor
xor
xor
in
xchg
int3
jb
sub
push
mov
pmaxub
and
notb
sub
stos
adc
pop
adc
in
pop
xor
mov
data16
mov
loopne
push
push
enter
xlat
lods
mov
imul
push
push
jl
cmp
js
shrb
outsb
sbb
push
inc
add
icebp
out
fwait
movsl
xlat
call
rolb
lahf
ljmp
mulps
subb
stos
fistpl
jg
lock
sahf
aad
mov
dec
push
aaa
adc
outsl
push
xchg
cmp
cs
aam
nop
ds
push
ret
jne
je
inc
fwait
pop
scas
test
shrl
out
inc
idiv
outsb
fnstenv
cmp
faddl
sub
jmp
iret
push
mov
inc
std
outsl
outsl
cld
jle
sub
xor
jmp
jne
popa
sbb
inc
imul
dec
jmp
push
int3
bnd
push
xor
dec
add
cmp
lods
inc
mov
pop
adc
xor
pop
cltd
pop
rclb
fdivrs
movsl
ret
fucom
mov
shl
mov
jle
shrl
scas
ss
arpl
and
test
and
fcoms
sbb
mov
xorl
or
sbb
jb
jns
movsb
jbe
mov
jl
pushf
cmp
jge
push
sbb
pop
cld
xorl
pop
jae
ret
cwtl
add
in
das
mov
mov
jo
cmp
push
ret
nop
pop
or
or
push
in
das
sbb
loopne
mov
cli
dec
mov
pop
push
stos
les
xchg
sbb
jbe
pop
add
outsl
inc
push
sbbb
jne
jmp
call
aam
sub
xchg
inc
nopl
scas
cmc
imull
dec
pop
dec
mov
or
aad
xor
lods
or
pop
cwtl
pop
sub
rcrb
shlb
pushf
loope
es
xchg
subb
or
pushf
push
xchg
xor
adc
imul
jnp
xorl
cmp
mov
xchg
push
cmp
or
and
dec
call
daa
cmp
shrl
test
push
push
into
addr16
int
mov
push
daa
pushf
sbbb
aaa
daa
mov
add
arpl
insb
pop
and
mov
movsb
cld
ret
xchg
xchg
cmp
inc
aad
add
sbb
and
out
sub
sbb
push
aam
add
out
adc
jbe
leave
adc
sub
sub
dec
pop
lock
out
rcrb
outsb
out
int
pop
dec
jne
lods
xchg
jnp
aas
movsl
into
mov
mov
mov
xor
jl
push
sub
fnstsw
bound
data16
stos
sbb
ret
inc
rolb
retw
int
cli
popa
or
mulb
les
jge
inc
or
jo
mov
inc
adc
mov
xchg
sub
xor
call
ret
push
mov
sub
mov
jns
pushf
nop
mov
xchg
fstl
enter
and
std
sbb
sub
dec
int
aaa
scas
xchg
inc
mov
xchg
repnz
add
mov
inc
mov
sbb
mov
pop
xchg
iret
inc
mov
stos
js
cmp
xchg
xchg
out
mov
push
ss
mov
xchg
adc
push
outsl
lods
cmc
mov
mov
lods
imul
test
push
imul
scas
lods
xchg
outsl
sti
decb
mov
gs
or
movsb
adc
mov
push
subl
pop
test
movsb
popa
sub
out
jmp
or
enter
pushf
sbb
sub
sbb
or
decl
xchg
mov
sarb
lods
adc
lret
lahf
sbbb
or
inc
add
xor
sbb
pop
out
mov
shrl
pusha
adc
add
sti
sbb
cmp
sbbl
cld
clc
andl
mov
lret
in
cmp
es
jmp
test
iret
mov
lods
mov
out
push
test
push
out
lret
xchg
ss
js
inc
mov
fmull
fbstp
xor
pop
mov
imul
fldl
cmc
mov
dec
and
push
mov
push
mov
and
xchg
pop
ud2
xor
mov
in
mov
or
movl
addr16
cmp
movsb
mov
gs
mov
filds
es
adc
and
xchg
ds
sbb
lds
clc
add
push
jg
mov
jns
bound
rorb
int
nop
dec
idivb
xor
mov
xchg
xchg
into
je
pusha
scas
mov
es
add
mov
iret
out
pushf
cli
leave
inc
popa
popf
lea
in
and
fimuls
andb
lcall
mov
aaa
xor
pop
scas
add
ror
push
add
cmc
popa
imul
jne
data16
cli
scas
stos
dec
adc
fisubrl
lret
add
push
jp
enter
pop
aas
out
into
push
je
jb
sbb
lret
mov
popl
jmp
push
cmc
stc
lret
movsb
adc
into
pop
pop
cli
mov
push
lahf
insl
or
pop
addr16
pusha
pop
dec
fldcw
loop
mov
decb
mov
push
mov
andb
cltd
stos
fimuls
mov
add
mov
push
cmpsl
inc
add
sar
mov
mov
cmp
xchg
xchg
mov
jne
adc
xor
or
jne
dec
hlt
sbb
icebp
fsubrl
dec
lea
les
rcll
ss
out
mov
sub
mov
adc
push
inc
lret
sbb
sbb
test
gs
pop
and
outsl
test
push
dec
les
lods
adc
sub
xchg
jle
xchg
adc
adc
in
mov
cs
insb
pop
ds
insl
call
loop
dec
xor
sbb
pusha
dec
ficompl
fistps
and
repnz
xchg
les
imul
aaa
xor
pop
xchg
xchg
test
adc
dec
dec
jge
pop
insb
enter
and
addb
sbb
and
test
and
push
pop
dec
ljmp
jmp
xchg
imul
mov
add
js
push
lcall
mov
aam
data16
push
fistpl
js
pushf
outsl
mov
dec
into
mov
lahf
bound
ljmp
add
ja
xchg
cwtl
arpl
stos
mov
fisttpll
jnp
inc
push
sub
cmp
fwait
daa
cld
ja
pop
dec
xchg
test
or
sbb
fsubr
mov
call
mov
cld
gs
and
and
dec
ret
mov
add
mov
shll
pop
dec
std
push
push
jno
fneni(8087
mov
mov
cmc
xor
mov
jnp
pop
and
js
mov
mov
out
pusha
in
mov
pop
add
jb
jmp
ret
adc
sub
sub
mov
jbe
fisubl
inc
int
js
or
cltd
mov
mov
cmp
arpl
jno
xchg
sahf
daa
loopne
les
xlat
jp
into
add
adc
jge
jae
xor
mov
lods
dec
lods
cltd
push
sahf
lret
scas
mov
push
add
fwait
sbb
jg
mov
mov
mov
lcall
popf
cmpsb
mov
jl
test
loop
imul
xchg
pop
stos
inc
jecxz
dec
xchg
push
mov
lods
daa
scas
icebp
sub
cld
pusha
std
jnp
xchg
push
pop
imul
pop
clc
add
jnp
push
jnp
xor
lods
xchg
in
cmp
ds
xchg
inc
jb
xchg
enter
mov
add
mov
jl
xchg
sub
jge
std
or
xchg
adc
fadds
in
xor
xor
inc
inc
icebp
fisttpll
xor
roll
scas
cmp
lock
mov
add
push
cmp
dec
std
repz
sub
cwtl
pop
stc
sub
out
lea
push
pop
jg
jecxz
cs
mov
inc
lea
push
push
and
mov
xchg
push
xor
lret
cltd
xchg
xchg
and
cmp
and
sbb
push
xchg
add
mov
pop
aaa
jl
or
arpl
movsb
and
inc
mov
sbb
jnp
lcall
lahf
mov
or
pop
jp
arpl
lods
popf
mov
lds
arpl
xor
rorb
pushf
in
mov
cmp
ret
mov
adc
xchg
push
add
cwtl
and
xor
xchg
ret
iret
jae
stos
push
movsl
adc
or
fdivl
cld
push
shll
cmpsl
in
add
push
xor
jl
in
jmp
sbb
jge
js
test
sub
push
xor
sar
xorb
fstps
dec
lds
aas
frstor
pop
out
ljmp
sbb
rcll
push
cmpsb
adc
cmp
popl
and
lods
and
sbb
jmp
in
int
xchg
gs
hlt
xor
loopne
fldcw
xchg
inc
xlat
xchg
dec
pop
sti
je
pop
aas
call
icebp
push
fdecstp
cmpsl
jg
mov
fidivs
mov
divl
sub
xor
pop
mov
jl
nop
adc
xchg
push
jns
jge
xor
add
or
cmp
push
xor
mov
sub
mov
pop
icebp
adc
jb
xlat
adc
xor
repnz
addr16
cld
add
lods
push
or
sbb
shlb
jo
inc
adc
dec
cmpsb
out
ror
in
stos
mov
stos
outsl
hlt
lds
jno
mov
xor
and
cld
sub
mov
popf
das
es
mov
jo
lds
and
mov
addr16
mov
push
fnstcw
pushf
sahf
cli
dec
xchg
cmp
push
jge
aad
ss
pop
sub
jo
or
sarl
cltd
jbe
pop
sub
stos
in
pop
fldenv
and
ljmp
pop
lret
xor
mov
push
mov
in
push
into
mov
inc
in
int3
popa
or
pop
test
or
sub
in
xchg
jae
xchg
fimuls
rcrb
inc
call
mov
out
inc
inc
loopne
pop
outsl
xchg
and
sahf
shl
xor
inc
and
into
xor
fistpl
rcll
mov
lret
xlat
lea
sub
xor
pop
pop
cli
sti
jmp
pop
push
out
fs
xchg
add
shl
mov
sub
inc
adc
inc
push
xor
sbb
pop
icebp
add
and
rcll
add
jl
push
ljmp
inc
add
sub
jg
and
push
sub
inc
dec
pop
mov
pop
sbb
inc
fwait
dec
scas
jo
bound
jge
dec
pop
sub
adc
and
dec
js
ffreep
adc
xor
hlt
outsb
sahf
jb
mov
jno
sub
icebp
outsb
pop
dec
icebp
fs
push
and
nop
xchg
mov
scas
out
ret
mov
sub
insb
dec
inc
cmp
insb
outsl
imul
push
daa
mov
and
mov
adc
cltd
call
and
je
push
mov
push
and
fisttpll
pop
lret
dec
test
lock
cltd
jae
xlat
add
sbb
outsl
pusha
jno
add
and
cmp
lods
out
iret
mov
out
lahf
or
sti
cs
fcomip
dec
mov
push
bound
dec
fcoml
icebp
push
and
jl
enter
loop
into
icebp
data16
mov
fstpt
sub
int3
in
in
dec
cwtl
iret
cli
adc
cmp
iret
ret
je
test
sahf
lahf
sahf
push
push
aam
mov
sbb
fadd
arpl
dec
mov
lds
mov
lret
ljmp
pop
xchg
je
aam
notl
outsb
ljmp
xchg
pop
jg
outsb
mov
cwtl
pop
rcll
cmp
ficoml
add
mov
arpl
push
and
lods
sbb
jg
inc
xchg
jge
sbb
shl
sub
xchg
ss
test
rclb
push
add
cs
pop
scas
dec
out
sub
pop
add
clc
mov
mov
sarl
jbe
mov
test
test
jbe
and
push
shlb
add
cmp
inc
daa
loop
xor
loopne
push
xchg
adc
jp
xchg
push
pop
cltd
pop
xchg
add
arpl
cmp
push
mov
pop
and
and
shl
add
in
lret
adc
leave
lods
dec
or
and
sub
mov
and
call
ljmp
jp
lds
aaa
jg
gs
and
mov
fstps
sub
mov
mov
dec
jne
hlt
xchg
js
mov
mov
psrlw
ja
or
or
scas
jp
push
mov
inc
sbb
jo
and
pop
jno
ret
test
lahf
push
movsb
pop
mov
loope
adc
and
out
int3
jg
push
addr16
sbbb
or
loope
stc
rep
rorb
pusha
sub
or
movsl
in
insl
push
ds
add
aad
cmpsl
dec
pop
adc
insb
in
leave
push
and
mov
std
mov
xchg
out
or
iret
gs
adc
inc
inc
add
adcb
pop
push
ret
adcb
push
in
mov
aaa
xchg
outsb
mov
mov
xchg
sub
push
lds
in
xchg
dec
mov
movsb
nop
ljmp
jb
inc
pop
cmc
sub
fs
and
jns
enter
arpl
outsb
inc
sbb
int3
adc
mov
lods
sbb
add
mov
and
nop
pop
iret
or
jo
test
fstpl
jp
ret
mov
out
pop
sub
testb
sbb
sbb
ret
iret
repz
sbb
inc
mov
xchg
dec
in
outsb
push
cld
push
mulb
mov
mov
es
xor
cmp
mov
outsl
dec
rep
pop
or
inc
cmpsl
jne
in
sbb
push
js
outsb
adc
mov
fs
jae
pop
xchg
ss
dec
pop
xchg
pop
les
xchg
js
lds
push
and
pop
inc
dec
test
add
mov
cmp
popa
stos
jbe
xor
lcall
xlat
pop
xor
adc
das
mov
repz
mov
aaa
shr
call
cltd
push
cmp
inc
cltd
arpl
cli
dec
jl
aaa
mov
call
cmp
pop
loope
mov
or
ret
sbb
xchg
or
inc
sub
repnz
jbe
cmpsb
sbb
insb
fsubrs
add
push
xchg
mov
mov
pop
add
dec
sub
cmpl
ss
sbb
sub
or
mull
dec
mov
and
xor
add
mov
movsl
pop
inc
ljmp
clc
cmp
outsl
aam
dec
loopne
movsl
icebp
pushf
sahf
push
jmp
dec
cmpsb
cmp
pop
ja
loop
pop
das
or
ret
push
dec
dec
adc
icebp
mov
icebp
mov
and
mov
fisubl
lcall
push
add
sub
es
shll
or
jbe
std
or
adc
out
mov
ja
cmpsl
push
gs
jae
inc
leave
mov
pushf
push
cmp
in
scas
leave
out
ficomps
pop
push
push
inc
inc
inc
mov
aaa
imul
push
add
popa
lahf
xchg
xor
negl
lds
dec
lret
outsl
lret
xchg
dec
sub
dec
push
scas
iret
xchg
xchg
mov
add
push
out
enter
sub
and
cli
fs
add
cmp
es
aam
incb
mov
dec
popa
cld
or
mov
jno
popl
js
jbe
pushf
jnp
add
xchg
xchg
stos
cs
imul
lret
and
mov
or
inc
jecxz
out
ljmp
cltd
aas
xor
xchg
jg
sub
inc
xchg
push
dec
mov
ja
sub
in
movsl
test
jns
xor
in
sbb
rcrb
or
subl
cmp
push
ficompl
fwait
adc
mov
lock
push
and
mov
add
mov
pop
sarb
sub
popa
icebp
rep
dec
mov
jo
cmpl
sub
dec
cmp
pop
fiadds
repz
adc
mov
insb
sub
pop
and
mov
test
out
mov
xlat
pop
lahf
icebp
pusha
sbb
movl
mov
and
mov
cmp
shll
add
int
mov
aaa
mov
out
push
lea
sbb
stos
das
mov
cmp
pop
lahf
add
imul
add
or
arpl
ja
xor
idivb
imulb
daa
int
xorb
imul
xor
rcr
js
into
inc
daa
pop
iret
jo
add
or
pop
fmull
das
mov
lret
sub
test
inc
repz
popa
sti
test
sbb
in
testl
push
xadd
or
movsb
lcall
fidivrs
dec
inc
and
cmp
dec
out
int3
hlt
mov
out
movsl
push
sti
push
adc
pop
popa
js
mov
jp
jle
das
dec
pop
scas
imul
lret
rcll
ss
dec
lea
pusha
shl
ror
stos
xor
outsl
jle
inc
push
add
jmp
bound
xlat
or
movsl
mov
iret
jb
cmp
inc
cmc
stc
lods
idiv
mov
test
push
bound
add
pusha
xchg
ljmp
es
jmp
and
push
xor
lock
enter
mov
push
sbb
mov
daa
adc
shl
cmpsb
mov
mov
sub
fbstp
cld
lds
lds
fbld
movsb
in
mov
je
jmp
add
sbb
mov
dec
scas
push
xchg
fldenv
aam
fsub
movsl
cmpsl
mov
pop
xchg
jo
out
lock
test
sub
xlat
cld
bound
cmp
bound
ds
or
fiadds
imull
adc
icebp
lret
outsl
xchg
mov
adc
adc
in
js
push
in
xchg
aam
add
or
out
xlat
fnstcw
dec
xchg
out
add
hlt
or
rcl
test
gs
cmp
mov
jnp
aad
adc
jmp
mov
jns
rcr
cmpsb
add
leave
xor
pop
and
inc
pop
cmpsb
jno
les
rcl
mov
inc
inc
xchg
les
mov
fimuls
mov
arpl
aad
or
arpl
fbstp
add
jb
das
adc
or
mov
fdivs
loope
in
mov
adc
cld
bswap
imul
call
cld
push
jbe
cmp
mov
push
pop
and
call
mov
xchg
mov
ljmp
orl
out
adc
out
outsb
mov
in
jmp
sub
cmp
loopne
push
push
and
or
in
fs
cltd
and
cmc
inc
fcoml
test
sub
pop
sub
fwait
push
dec
pop
cmp
sbb
pop
mov
ror
push
xor
and
insl
push
jb
ret
dec
pop
loop
movsl
or
mov
dec
outsl
ret
test
lods
cmp
mov
nop
jge
xor
pop
shrl
andl
repnz
mov
rcr
daa
repz
sub
cwtl
data16
loopne
inc
xchg
or
in
push
sti
call
in
mov
inc
xlat
mov
cwtl
cmp
xchg
push
sbb
push
decb
xchg
jge
fdivrl
xor
test
adc
mov
xchg
out
dec
jge
mov
insl
xor
push
mov
and
jb
and
sbb
sub
aad
repz
je
sub
jo
and
add
xchg
nop
mov
push
xor
dec
adcb
inc
insb
or
shrl
in
pushf
inc
pop
shl
nop
push
fcoml
sarb
sub
fwait
push
mov
lods
shrl
bound
xlat
pop
popf
sbb
jmp
fists
rclb
shl
xchg
repnz
pop
and
popf
repz
mov
subl
cmpsb
incl
cmpsb
std
sub
xor
sbbb
push
pop
cltd
jo
mov
mov
push
jae
subb
repnz
scas
push
xchg
mov
test
xor
or
xchg
pop
or
lahf
clc
rolb
loop
and
mov
daa
sub
stos
push
imul
mov
std
iret
fidivrs
dec
fwait
mov
xchg
icebp
jns
shrb
scas
or
dec
pop
or
in
or
inc
jns
xchg
dec
or
dec
test
pusha
sub
dec
fistpll
adc
push
push
push
mov
out
cwtl
dec
out
scas
insl
xor
in
fwait
dec
jo
dec
pop
push
movsb
js
xchg
mov
jmp
pop
out
jne
cmp
and
push
pop
and
sub
aam
mov
jecxz
pop
push
repnz
mov
pop
arpl
add
jnp
inc
mov
jmp
ss
jbe
xchg
mov
mov
int
push
push
sbb
add
lea
sbb
sbb
aas
enter
outsl
and
push
pop
lea
adc
insb
dec
std
xchg
stc
ror
cmp
stos
scas
in
and
fisttps
rclb
xchg
cmc
stc
pop
test
cmp
inc
jecxz
aad
dec
adc
jl
mov
mov
andb
add
rcrl
scas
ss
xchg
sub
xlat
ret
scas
rclb
mov
cmp
in
mov
pop
xchg
add
xchg
cmpsb
inc
jbe
adc
iret
push
loopne
lret
xchg
add
scas
and
movsb
xchg
mov
ret
in
dec
pushf
inc
xor
jl
and
cs
imul
mov
mov
push
sub
pop
lods
sub
ss
insb
pop
sarb
nop
imul
adc
adc
dec
xchg
cmp
inc
xor
push
and
movsb
mov
mov
loopne
bound
or
pop
dec
aas
mov
inc
pop
iret
ret
push
jb
das
test
or
push
clc
sbb
outsb
insl
stos
mov
call
cltd
cmp
cmc
repnz
or
push
stos
out
roll
movsb
enter
cmp
lret
lcall
incl
dec
sbb
es
not
jge
sub
rolb
aam
dec
xlat
adc
jl
fisubs
jl
mov
test
and
lahf
aam
or
jle
sub
mov
popa
or
jge
imull
inc
push
and
stc
lds
cli
loop
pop
addb
push
pop
leave
in
inc
imul
inc
mov
dec
mov
push
repnz
popa
and
sahf
std
jle
icebp
cmpsl
insb
sbb
mov
scas
lahf
jl
cli
xorb
add
stos
ds
repz
cs
or
test
add
or
repz
ret
push
popa
in
iret
cld
lea
out
lcall
pusha
gs
cmp
enter
and
mov
lret
mov
mov
dec
pop
or
mov
aas
cmpsl
shll
mov
ss
sub
lea
push
mov
add
orl
ljmp
inc
xor
popa
lret
cmp
stc
mov
test
push
add
jo
push
jbe
out
mov
hlt
xor
dec
mov
rolb
sbbb
cmpsb
int3
inc
xchg
andb
mov
ret
inc
movl
daa
into
ja
dec
ja
pop
insl
push
insl
jns
cltd
in
into
fsts
pop
lahf
push
shl
xchg
out
adcl
enter
or
sbb
dec
cmp
cmp
int3
add
dec
lds
les
je
adc
add
sahf
rorl
popf
sarb
test
jecxz
shlb
jnp
mov
inc
push
fcoms
aaa
fucomp
repz
sti
jl
push
enter
in
cmpsb
dec
ljmp
fs
cmp
jge
push
iret
fimuls
xchg
mulb
jo
sbb
jecxz
sbb
xchg
cmp
in
in
or
pop
jns
mov
test
aam
mov
out
mov
cmp
sbb
and
sub
inc
jb
push
mov
std
lret
push
xor
jnp
insl
in
jbe
stos
push
pop
cmp
push
mov
inc
adc
xor
or
fisttps
fcmovbe
ret
clc
inc
and
sub
dec
aam
into
das
jbe
stos
ljmp
loop
fcomps
scas
dec
enter
and
loope
fildl
add
sbb
addr16
add
shr
push
std
jae
pop
inc
scas
cmp
aaa
insb
loopne
je
pop
pop
mov
addb
lcall
cs
adc
jle
inc
lret
mov
mov
push
je
jecxz
mov
dec
inc
notl
test
sbb
cmpsl
adc
mov
mov
sub
enter
pop
xchg
subb
cmpsl
enter
decl
cmp
bound
nop
cmpsl
and
or
repz
orb
getsec
cmp
cld
cmp
pop
or
push
push
daa
fwait
cmpsl
cmpsb
cmp
xchg
pushf
aaa
outsl
stos
mov
rorl
fnstsw
lcall
adc
clc
jecxz
pop
dec
inc
fsts
hlt
xor
or
xor
adc
xorb
and
sti
and
mov
xchg
sub
push
movsb
or
xchg
aad
mul
mov
inc
ret
test
vpsubsb
jp
rcll
mov
jnp
xchg
sub
add
push
push
xor
std
inc
pop
mov
jmp
lock
fisttpll
pop
insl
sub
jl
int
pop
pop
dec
pop
cmp
mov
inc
loope
pusha
js
xor
mov
daa
cwtl
or
sbb
and
int
mov
js
shrb
push
outsb
mov
out
xchg
xchg
out
pushf
pop
adc
std
jg
mov
pop
xchg
popa
xchg
std
out
mov
lcall
push
inc
mov
xor
dec
mov
rclw
xchg
icebp
fcmovnbe
xchg
aas
inc
test
loope
mov
xchg
mov
aas
add
cmpsl
jp
mov
daa
pop
gs
test
in
sbb
aas
jge
and
xchg
stos
inc
cli
jg
add
inc
jae
mov
and
push
jb
aas
daa
roll
addb
movsl
and
jl
shlb
and
xor
push
fnstenv
fisubrl
leave
pop
or
jecxz
cmpsl
mov
sbb
loope
addr16
sbb
push
lret
inc
pop
sub
mov
push
cld
sbb
adc
push
mov
ljmp
inc
cmp
mov
jne
lcall
xchg
xor
pop
test
sub
mov
and
ljmp
movsl
inc
lahf
cli
shll
xchg
jge
push
int
xchg
mov
in
aaa
sub
xor
mov
movsb
outsl
rol
ret
push
pop
shll
xchg
lcall
pop
mov
mov
push
sbb
mov
js
jle
sbb
clc
mov
lds
fwait
cli
mov
movsb
mov
mov
fidivrl
pop
cwtl
divl
andl
dec
out
dec
mov
and
clc
lahf
xlat
xor
cld
xor
jg
mov
cmp
mov
cmpsl
test
add
ret
test
xor
mulb
cltd
and
fisubrl
or
notl
and
into
xlat
test
xlat
and
test
jg
repnz
imul
in
in
and
push
test
shl
mov
jge
ja
xor
push
xor
out
pop
mov
inc
mov
jg
xchg
mov
popl
cmpsb
pusha
test
cmp
or
add
out
pop
adc
xor
adc
xchg
adc
dec
icebp
iret
loope
test
aas
jns
adc
cmp
ucomiss
mov
aam
je
out
push
mov
cmpb
out
cmp
mov
or
movsb
imul
fs
jbe
sub
movb
jbe
pop
mov
and
ret
jnp
cmpsb
sub
mul
push
push
stos
in
and
aaa
mov
add
or
ja
push
inc
test
test
cwtl
cmpsl
mov
pop
int3
pop
xchg
jmp
lcall
add
and
xor
sbbl
fadds
sub
imul
push
sahf
or
and
or
jge
lret
sub
outsb
add
movsb
dec
mov
mov
lods
xor
push
fsubl
fbstp
icebp
ret
or
push
jae
fists
sbb
pusha
cli
in
cwtl
pop
or
push
xor
sbb
xchg
inc
vhsubpd
mov
pop
es
adc
cmp
sub
pop
stc
push
mov
mov
dec
push
inc
lret
sub
fists
mov
xchg
jge
jl
inc
sbb
sub
inc
dec
add
cmp
fsubrs
arpl
inc
pop
outsb
inc
xor
push
dec
das
adc
push
pop
lds
jle
into
stos
push
stos
popf
mov
jle
xchg
fmuls
sbb
or
insb
jecxz
flds
and
mov
ljmp
lahf
mov
add
xor
adc
bound
fisttps
or
loope
scas
push
xchg
lds
fldl
into
cmp
mov
sbbb
inc
in
pop
mov
inc
stos
call
or
xchg
mov
mov
test
inc
fmuls
shlb
mov
repz
mov
inc
cmpsl
cmp
cmpsl
aas
pop
pop
add
cwtl
sbb
mov
mov
div
sub
movsb
js
and
mov
cltd
add
fdivrs
push
test
add
lret
and
clc
pop
loopne
mov
sub
sub
clc
addl
movsl
mov
lea
lret
out
nop
pop
xchg
adc
adc
imul
loope
push
xor
sub
inc
sub
mov
and
sbbb
pusha
dec
add
and
xchg
enter
outsb
jbe
xchg
js
sti
pop
sub
jns
sbb
inc
or
inc
sbbb
mov
mov
sbb
jo
in
pop
ficoms
and
shlb
ja
cmp
add
mov
sub
cwtl
xchg
mov
orl
fnstcw
push
bound
fistpl
pusha
inc
nop
mov
jl
bnd
xor
pop
add
mov
cmp
xchg
pop
add
mov
adc
in
out
jmp
gs
mov
lahf
das
push
gs
jo
jae
daa
mov
inc
cmc
es
mov
push
iret
imul
dec
add
jnp
testb
jb
movsb
sub
xorl
pop
and
stos
rcll
mov
inc
or
adc
sahf
xchg
movsl
loopne
jns
stos
scas
pop
mov
in
pop
xchg
cmp
popf
mov
mov
or
xor
sub
jb
in
or
push
jp
sub
cmp
push
pop
adc
mov
dec
or
iret
add
push
mov
mov
jns
rcrl
fsts
and
xor
clc
or
dec
and
push
ss
movsb
shlb
xchg
mull
mov
into
mov
pop
arpl
push
out
xlat
sub
cmp
rcll
out
push
cmpsb
stc
mov
lcall
arpl
sbb
push
xchg
mov
push
or
adc
add
or
mov
push
inc
jmp
mov
rol
faddp
inc
shll
mov
or
fcomps
add
dec
bnd
fwait
js
adc
pop
shll
fwait
lahf
mov
and
and
icebp
sbb
dec
js
insl
test
dec
or
sbb
add
in
repz
out
push
pop
ret
into
mov
stc
orl
out
aas
pop
push
cld
cli
dec
imul
push
xchg
cmpl
mov
jb
jns
mov
pop
add
cmpsb
or
in
lret
xchg
cmp
or
insb
xchg
or
ret
fidivs
test
hlt
xchg
xor
pushf
ja
push
fdivs
jp
cmp
test
lret
jecxz
vpmaxub
mov
arpl
je
testb
sbb
cmpb
jnp
fnstenv
stc
cmp
mov
mov
xor
mov
ficomps
in
and
les
fbstp
xor
insl
inc
loopne
movsl
rcll
out
insb
lret
popf
inc
daa
test
aad
add
sti
imul
loope
icebp
cmp
inc
imul
mov
or
out
pop
out
mov
pop
aam
out
fbld
es
loop
icebp
xchg
jl
filds
lock
adc
dec
lea
adc
lods
mov
mov
in
loopne
push
push
cmp
rcl
push
lret
popf
das
xchg
lret
jb
xor
lret
popa
and
dec
lret
mov
imul
pop
hlt
shrl
push
das
lcall
lds
push
xchg
jge
sub
dec
jecxz
nop
mov
out
andl
or
fistpll
mov
cltd
jp
shrl
jmp
cmp
fisttps
pop
test
daa
fisubl
roll
scas
and
jae
pop
sbb
inc
aaa
fistl
in
push
push
jns
lahf
rorb
out
mov
aam
push
adc
mov
ds
cwtl
rolb
push
sub
and
and
xchg
je
adc
xor
add
pushl
sub
or
mov
scas
and
mov
jle
fwait
jne
rorb
mov
js
pop
xchg
inc
inc
dec
in
inc
pop
lds
iret
das
fidivl
jl
loope
jg
clc
mov
imul
mov
dec
mov
ret
movsl
in
clc
mov
ss
pop
jns
cmp
pop
es
xlat
cmp
imulb
sub
lock
sub
push
inc
lret
or
mov
add
sbb
shll
rcrb
jns
lcall
into
test
jle
cmp
or
jnp
push
dec
jl
in
lds
mov
in
into
and
repnz
or
out
adc
mov
mov
xchg
jge
ds
aad
std
or
mov
sbb
cmpsb
out
jp
and
rcrl
xor
mov
mov
sti
pinsrw
cld
stos
sub
sahf
jo
jae
orl
mov
dec
cli
test
jae
dec
adc
pop
clc
cmp
std
clc
cmp
jl
dec
imul
jge
add
mov
inc
add
aad
mov
lret
xchg
add
cltd
arpl
jno
mov
mov
jge
jl
mov
dec
and
lahf
lahf
push
jmp
adc
out
in
loop
repnz
fnstcw
repz
out
xor
cmp
ficoms
outsb
pop
jo
in
xchg
sub
add
xchg
xchg
shll
jecxz
pop
das
aas
xor
popf
jae
dec
loopne
out
ret
cli
and
and
add
gs
xchg
pop
mov
aam
outsb
in
into
dec
add
aad
shrl
or
mov
stos
mov
add
rol
mov
repnz
scas
in
flds
jae
xor
fucomip
testl
or
cmpsb
add
sub
jns
movhps
stos
dec
and
xchg
cmpsb
cltd
int
dec
daa
mov
push
rcr
cld
daa
push
jo
jne
inc
jne
add
push
pop
adc
lret
sub
lea
je
ljmp
fdivrs
test
je
insl
cmpsb
popf
enter
or
testl
xchg
mull
xchg
notb
stc
sbb
mov
add
into
ficoml
xchg
dec
pop
push
cmovl
mov
arpl
jb
dec
sbb
jno,pn
or
popf
mov
cmpsl
mov
cmp
jne
stc
inc
fmulp
fs
or
sbb
sbb
push
pop
inc
shlb
xor
imul
mov
out
pusha
fsts
ja
adc
cld
lock
cmp
cltd
and
mov
pop
inc
dec
es
out
scas
or
daa
mov
sub
add
popf
push
sub
loopne
inc
jecxz
pop
mov
pop
sbb
push
inc
jnp
into
pop
mov
aas
aad
xchg
adc
add
xchg
pop
mov
xchg
and
cmpsl
jbe
scas
fwait
sbb
jp
mov
lds
push
push
and
sti
sub
xchg
mov
out
out
sbb
out
xchg
repnz
cmpsb
push
aam
ljmp
ret
orps
mov
mov
sub
jge
fwait
fwait
lock
psubd
push
testl
pop
mov
js
lahf
adc
dec
mov
fnstsw
jne
mov
push
inc
call
sub
cmp
test
push
popf
jno
sbb
mov
xchg
xor
jo
ds
inc
xor
cltd
rcll
mov
imul
xchg
daa
sbb
or
sbb
pop
or
xlat
scas
enter
ret
xchg
insb
jmp
dec
sbb
imul
jb
outsb
pop
xor
daa
lcall
push
mov
or
repz
dec
test
in
rorb
adc
mov
sub
test
adc
push
mov
sub
add
or
cmp
js
int3
insl
mov
sub
mov
loop
or
shrl
cmp
into
ljmp
mov
les
push
aas
and
lret
push
test
daa
pop
mov
jns
shll
xor
arpl
sbb
fcmovb
mov
gs
iret
or
jmp
mov
mov
dec
es
pop
ss
dec
mov
push
cmp
jb
dec
or
fisubrs
loope
or
fistpll
lea
insl
testl
xchg
xor
cmp
gs
movsl
xor
enter
jno
pop
in
test
mov
and
jl
mov
push
push
or
xchg
das
xor
pop
add
sbb
and
jecxz
push
shl
push
xor
fwait
and
mov
ret
jl
jnp
clc
ljmp
mov
sub
cmp
rcrl
and
shll
shrb
jae
dec
xchg
icebp
sarb
mov
or
and
inc
adc
inc
mov
test
inc
cld
mov
xor
cmpsb
adc
icebp
int
sar
sbb
ret
fbstp
pusha
ja
pop
movsl
int3
in
mov
mov
or
add
xchg
lds
push
ret
clc
call
dec
jo
mov
lahf
out
scas
mov
cmp
cmp
dec
push
push
sub
mov
dec
xchg
push
mov
and
sub
jmp
bnd
adc
mov
pop
into
cmpsb
xor
fldcw
or
push
rcrl
test
xchg
or
jae
pop
inc
dec
mov
or
sbb
leave
test
inc
loop
test
rolb
jecxz
pop
das
lret
mov
dec
iret
dec
in
adc
popa
rorb
insb
popa
push
idivb
xor
xchg
sub
xchg
test
mov
push
mov
mov
add
shr
jae
mov
pop
adc
outsl
cld
inc
mov
lret
test
lret
add
clc
sub
or
out
cmp
leave
shll
repnz
mov
insb
adc
or
mov
mov
insb
or
loopne
idiv
cmc
push
leave
xchg
aas
rcrb
pop
push
test
imul
pushf
jo
cmp
jne
in
ljmp
nop
inc
stc
dec
jo
pop
popa
popa
stos
add
out
test
xorl
ds
push
xchg
cltd
movsl
pop
add
subb
cmpsb
ds
sbb
push
jno
mov
jmp
fidivrs
jnp,pt
or
jmp
sbb
addr16
jle
out
xchg
dec
jmp
movsl
and
and
testb
imul
sub
inc
rclb
add
in
mov
adc
decl
xor
mov
jno
adc
pop
adc
mov
cmp
sti
arpl
add
pop
jb
les
call
lds
xor
xor
out
add
out
sub
fucomi
jp
out
inc
outsw
fstpt
adc
push
int
mov
repz
shl
daa
jnp
cmp
xchg
cmpsb
jl
mov
jno
push
lcall
enter
int3
insl
jl
pop
xchg
adc
mov
add
mov
pop
push
mov
xor
cwtl
adc
shll
cs
pop
jb
leave
dec
js
pop
jl
fidivrs
pop
push
adc
jns
scas
dec
out
jnp,pt
mov
push
adc
in
inc
xor
test
push
lahf
push
sbb
push
test
out
add
or
adc
mov
inc
in
scas
push
call
mov
std
int3
xchg
hlt
arpl
and
dec
add
cmp
loope
dec
arpl
adc
dec
jecxz
into
xchg
pushf
cltd
test
call
jge
stos
push
test
pop
mov
and
ss
loope
cmp
cmpsb
idivl
hlt
inc
ds
mov
inc
push
dec
insb
dec
dec
fistpl
fcoml
hlt
adc
je
sti
rcll
push
adc
inc
sbb
or
cmp
cmp
mov
jp
sbb
cmp
and
popf
xchg
ret
cmp
les
pop
in
or
stc
push
das
fdivp
mov
mov
cmc
ret
and
in
mov
mov
dec
ss
push
jno
xchg
aaa
sahf
scas
dec
cmp
in
jmp
push
out
imul
push
fs
jmp
dec
adcl
loop
aad
lods
push
sbb
adc
in
ja
out
out
mov
push
push
imull
add
mov
imul
lcall
loope
dec
lods
lret
ljmp
test
adc
pop
nop
xchg
gs
mul
enter
repz
imul
push
jno
das
or
dec
mov
in
shll
push
mov
inc
pushf
test
jae
dec
std
push
sarb
cmp
call
xchg
add
pop
xchg
or
add
inc
push
test
dec
or
pop
mov
je
test
inc
decb
decb
insb
push
aas
sub
cmp
out
cmc
imul
in
test
cmc
std
rcr
sarb
lods
mov
dec
mov
nop
mov
jo
faddl
inc
cmpsb
add
jecxz
out
xor
rcrb
inc
xor
rorl
xchg
lret
xor
cmp
imul
add
in
xor
mov
jecxz
sbb
sbb
jp
mov
push
popf
dec
aad
call
adc
sbb
jno
fistpll
or
xor
xor
aad
movsl
lods
xor
imul
aaa
test
scas
mov
stos
jge
push
dec
xor
in
addl
aas
jne
sub
cmpsb
pop
daa
das
in
fcompl
sub
jo
mov
ret
rolb
decl
aaa
aad
mov
adc
stos
es
jns
into
or
faddp
jl
push
andb
sub
mov
sub
dec
sbb
push
addb
sub
jecxz
sarl
or
sbb
mov
xchg
mov
xchg
xor
adc
mov
hlt
push
fistpl
shl
cmpsl
addr16
and
data16
fistpl
dec
jo
mov
in
icebp
push
pop
rorl
cltd
xchg
sarl
mov
pop
and
lea
jo
jge
dec
ss
push
shll
xchg
add
aam
or
mov
and
and
popf
mov
decl
in
inc
jmp
jg
repz
loopne
std
fdivs
and
jge
and
sarb
mov
test
ret
loop
pop
cmp
enter
inc
jmp
shrd
push
jl
cmp
sbb
push
xor
sub
and
xor
jg
xor
aaa
imul
jns
mov
outsl
into
ret
in
mov
inc
test
mov
sub
call
cwtl
shrl
xchg
int3
xor
loope
push
dec
lods
mov
shl
jmp
in
adc
jmp
decb
mov
push
sbb
xchg
sbb
aad
push
es
push
and
add
xchg
into
xchg
push
sbb
sbb
mov
stos
iret
stos
icebp
mov
movsb
cmp
lea
sbb
je
sbbl
dec
mov
in
imull
adc
es
test
and
cmp
scas
xchg
pop
es
sbb
mov
adc
ljmp
and
pushf
leave
push
mov
aam
lret
mov
mov
add
or
cmpsl
or
mov
xlat
and
or
mov
nop
jecxz
mov
scas
jne
pop
hlt
or
sbb
mov
or
sti
dec
dec
cs
sbb
mov
cwtl
aad
jns
mov
xchg
mov
fstl
jno
fistl
cwtl
lret
aaa
fdivs
jmp
cltd
push
mov
mov
push
jbe
mov
mov
cmp
je
insw
jns
pushf
xchg
mov
ret
stos
dec
movsb
lret
pop
loopne
dec
and
inc
cmp
xchg
pop
inc
cmpsb
xchg
popa
clc
aas
jbe
or
sub
int
jns
push
xlat
lods
xchg
test
orl
decl
dec
fstpt
mov
cmpsb
inc
jmp
mov
aad
cmpsb
ds
push
call
cwtl
orb
loopne
rorb
mov
in
pop
xor
data16
dec
in
inc
imul
jbe
loop
xchg
push
test
cmp
into
sub
mov
sbb
repnz
sub
leave
in
aaa
push
dec
sti
shl
test
shlb
frstor
sbb
pop
loope
in
push
inc
mov
xor
pop
cmpsl
add
cmp
ret
cwtl
arpl
into
mov
cmc
add
iret
add
push
push
fst
add
shrl
inc
cmp
sbb
dec
mov
into
xchg
test
jp
lcall
mov
cmp
movsb
das
sbb
mov
xchg
jb
or
adc
mov
inc
xchg
push
loop
push
mov
js
movsb
rorb
add
repnz
cmp
pop
cmp
and
clc
mov
jns
rcrl
icebp
cld
cld
xchg
movl
push
push
testl
mov
fdivrl
xchg
nop
sbb
int
loop
das
ja
vmread
sbbb
adc
xlat
insb
cltd
fldt
add
jmp
push
out
shll
cmp
push
loop
scas
into
adc
fistps
scas
cmpsb
push
mov
mov
dec
arpl
inc
fmul
mov
insb
pop
test
mov
xchg
out
imul
sbb
sbbl
push
mov
jo
cmp
pop
mov
addr16
fwait
mov
jo
dec
js
loope
dec
ret
cmc
test
ja
mov
cld
pop
inc
fisubs
mov
into
shr
cwtl
xchg
andl
mov
pop
push
orb
dec
in
sub
aad
xchg
mov
jo
lods
pop
pop
jbe
cmp
mov
dec
cmp
add
push
in
sarl
aaa
mov
mov
and
js
or
fisttps
xor
mov
pushf
in
mov
mov
pop
sbbb
adc
std
pop
leave
sbb
ret
mov
lahf
movsl
lds
aam
push
push
adc
push
push
xor
hlt
xor
insl
mov
xchg
jp
sti
sbb
lds
inc
mov
jp
int
fisubrl
lea
xor
adc
movsb
xchg
les
out
js
arpl
dec
jne
inc
fisubl
popf
lcall
out
inc
pop
dec
pop
push
out
enter
xchg
pop
mov
sbb
mov
test
repz
add
xchg
dec
out
fs
inc
push
sbb
lahf
and
mov
push
fst
xor
mov
sub
stc
dec
addr16
or
mov
jno
push
jo
adc
cmc
in
and
or
add
cmc
fcomps
mov
loope
sbb
push
repnz
pusha
mov
pop
xor
cmp
leave
test
sub
mov
sarl
xor
xor
jmp
mov
mov
jmp
mov
sub
aaa
xchg
cmp
push
fisttpll
sub
je
push
and
push
enter
mov
les
addr16
imul
xor
add
xchg
xor
pushf
jb
shl
out
scas
cmp
lea
test
mov
jg
popa
aas
sub
push
in
fstpt
sub
rorb
jnp
adc
pop
scas
jmp
jnp
jne
jnp
outsl
imul
xor
xchg
jns
push
loope
push
aad
push
jo
fs
push
mov
and
std
fldz
fwait
aaa
pop
cli
pop
fs
js
cwtl
mov
xor
fmull
into
in
addr16
mov
sbb
mov
ret
in
clc
push
orl
mov
dec
cld
inc
jp
mov
loop
cmp
out
xor
jae
inc
adcl
call
add
insb
out
add
pop
in
xor
adc
dec
sbb
and
cmp
xlat
push
and
jb
test
int
sbb
incl
xchg
push
out
sub
dec
jecxz
sub
sbb
xchg
loope
in
repnz
mov
sub
push
dec
outsw
mov
loop
mov
cmp
mov
inc
pop
xchg
or
mov
mov
or
inc
jne
test
xchg
mov
inc
out
test
repnz
sub
lret
jae
mov
mov
sub
mov
pop
pop
xor
dec
out
mov
stc
pop
sbbb
lcall
fists
loope
lcall
mov
cmpsl
or
push
xor
pushf
push
add
loope
add
xchg
sarb
cmp
push
inc
push
and
cmp
repz
mov
cs
in
mov
aam
lret
mov
inc
ret
push
xchg
xor
neg
les
jecxz
call
dec
adc
dec
es
or
pop
mov
pop
test
ljmp
mov
loope
mov
adc
stos
mov
cltd
or
in
out
sbb
ret
jg
loop
push
inc
rclb
inc
gs
std
stc
jmp
xchg
fs
jmp
data16
xlat
push
nop
pop
xor
mov
shrl
jle
jge
in
ret
sbb
loopne
mov
pop
add
aam
jecxz
test
pop
mov
sbb
icebp
pusha
xor
ret
dec
pop
sub
fndisi(8087
repz
or
jbe
xchg
incl
add
cltd
mov
push
xor
mov
sub
dec
or
aas
icebp
repnz
sub
orb
outsb
mov
ss
popa
bnd
xchg
daa
bound
rcrb
ss
cli
movsl
ret
and
cmpsb
inc
mov
jg
sub
adc
jp
and
adc
inc
movsl
mov
mov
or
lcall
mov
daa
popf
lock
push
jecxz
pop
pop
xchg
addr16
inc
fidivrs
fbld
sbb
lea
sub
pop
adc
mov
ljmp
ja
mov
inc
or
je
icebp
cmpsb
pop
stos
add
pop
shlb
fildll
mov
mov
lds
cwtl
outsb
push
xor
jnp
xchg
jp
dec
subb
dec
inc
aaa
dec
push
addr16
repz
enter
mov
jecxz
es
lret
into
stos
out
mov
sbb
cltd
in
jns
fimull
pushf
dec
xchg
je
cmp
scas
mov
ljmp
mov
cmc
hlt
daa
add
stc
sbb
cmpsl
pop
test
movsl
mov
aaa
int
xchg
cld
paddd
sbbb
rclb
cltd
xchg
mov
inc
xchg
out
cmpb
add
out
mov
mov
icebp
lock
and
das
out
in
int3
inc
adc
mov
xchg
out
sbb
dec
add
adc
arpl
fidivrs
das
cld
stos
fcom
mov
cwtl
pop
cmc
jns
and
idivl
xor
mov
int3
mov
outsb
xchg
mov
xchg
es
dec
mov
lods
pop
push
jge
je
pop
push
sub
js
jecxz
test
out
inc
sbb
or
pop
knotw
sbb
pushf
xchg
push
or
add
add
hlt
adc
add
and
dec
out
xor
repz
int
add
dec
and
jbe
lea
mov
out
xor
roll
push
cmp
lds
sbb
int
push
mov
vfrczsd
or
pop
jb
cmp
scas
xchg
popa
pop
mov
rorb
sbb
pop
jns
adc
and
xor
sbb
nop
mov
repnz
or
ss
sbb
sub
mov
adc
push
mov
adc
adc
insb
std
lret
cwtl
jb
xlat
mov
push
gs
loopne
and
daa
jg
push
in
or
aam
jbe
outsl
arpl
mov
rcrb
aad
xchg
mov
pop
dec
dec
hlt
in
stos
hlt
popf
mov
add
mov
sbb
jb
jnp
xor
pop
rcll
aam
and
xor
xor
fildll
push
and
out
and
pop
cmc
lahf
push
pop
add
aad
fdivp
addl
dec
popf
insb
aam
popf
xchg
xor
adc
jo
add
aas
out
push
sahf
adc
mov
cmc
cmp
jns
jg
jae
mov
ret
insb
popa
or
jmp
loope
insb
stos
inc
pop
sbb
add
in
xchg
fwait
repnz
rorb
push
lods
and
aam
int3
ja
dec
stos
bound
jns
mov
xchg
xor
xor
repz
xorb
ljmp
lea
aad
push
push
sbb
push
pop
das
and
push
pop
ficoml
xor
push
adc
add
gs
outsl
pop
add
adcb
lods
je
sbb
jmp
mov
sub
fsubrs
mov
add
jl
mov
lods
jno
xor
inc
mov
push
fists
repz
push
xchg
xlat
xor
jo
pop
cs
or
imul
fadd
out
lods
push
inc
mov
bound
std
lods
mov
ret
add
rolb
iret
sub
xor
push
call
push
jnp
jne
hlt
xor
mov
xchg
in
pop
out
loop
pusha
add
and
and
mov
popf
push
imul
xor
out
rcrl
cmpsl
icebp
cmpsb
or
dec
xorl
shrb
fbstp
xchg
mov
iret
shl
and
cmpsb
push
add
shll
lea
lahf
mov
xor
push
cmp
ss
mov
cld
stc
mov
push
rorb
cmp
dec
xchg
jnp
xor
in
or
xchg
or
filds
rcrb
ja
fdivrl
cmpsb
dec
add
push
sub
xchg
push
pop
mov
not
cmc
cmp
sbb
dec
mov
jge
cmc
inc
inc
imul
sbb
dec
jp
push
push
ja
jb
jg
mov
lock
pop
lods
cmp
sbb
inc
mov
push
scas
dec
sbb
pop
push
jbe
pop
in
cmp
pop
sbb
dec
cli
iret
stc
sbbl
and
pop
dec
test
add
fdivrs
dec
adc
ror
stc
jno
fs
inc
xor
fistpl
sarl
xor
sub
pushf
cltd
lret
lcall
lret
xchg
hlt
push
in
outsb
ret
cmp
testw
fs
insl
mov
popf
in
lea
sbb
loopne
fisubl
movsb
mov
jns
les
in
xchg
ljmp
in
xor
mov
hlt
fsubr
cmc
jae
dec
mov
stos
cltd
or
sub
fdivrp
sub
xchg
jg
add
lea
sub
push
das
vpcmpgtb
jno
push
nop
aam
popa
test
testl
adc
rorb
out
cmp
popa
cs
add
sub
adc
jecxz
loope
push
adc
and
or
popa
mov
fmul
cmpsb
add
rolb
pop
push
cmpsb
mov
sbb
xor
mov
adc
loop
add
sub
in
ja,pn
mov
jmp
pop
cmp
rcll
dec
out
ret
adc
hlt
imul
xchg
movl
je
fsubrs
mov
xchg
popa
sub
jo
lds
lcall
in
loop
sbb
mov
jbe
pop
add
cwtl
add
aad
pop
or
push
iret
xor
adc
push
xlat
or
hlt
or
lret
pusha
cmp
iret
cmp
inc
outsb
xchg
adc
mov
ja
push
ret
cs
sub
stos
fiadds
pop
hlt
imul
out
test
inc
fcmovbe
movsb
jne
icebp
jl
inc
add
sub
adc
aaa
and
cmp
std
mov
push
jle
pop
xor
push
ret
inc
fdivr
movsl
sbbl
xor
ret
jle
stos
iret
data16
xchg
xor
fsubs
xchg
mov
sbb
sbb
inc
js
inc
pop
das
mov
rolb
pushf
popf
dec
dec
mov
pop
or
cmp
lods
add
les
in
push
cmpsl
dec
mov
gs
jecxz
dec
push
cmpsl
xor
sar
sub
bound
push
pushf
arpl
sub
test
sbb
mov
push
cmp
out
adc
add
push
fdivrs
imul
std
stos
jmp
push
push
pop
inc
lret
je
or
aam
mov
mov
and
and
mov
pop
pusha
loope
add
jne
aaa
ficomps
pop
divl
inc
and
lcall
ds
loopne
lock
cmpsl
iret
aam
pop
mov
into
push
fs
and
xor
inc
dec
pop
das
cmc
sub
test
add
ror
mov
cwtl
cmpsl
and
jae
or
movsl
mov
shll
pop
adc
or
inc
ret
xor
mov
add
push
inc
stos
test
mov
test
mov
jb
sbb
xor
xchg
sub
jns
lds
data16
mov
mov
mov
xor
ljmp
xchg
jg
add
sbb
mov
jae
sbb
out
daa
pop
aam
mov
aad
push
ljmp
dec
fiaddl
mov
cmpsl
inc
jno
lret
sahf
fisubs
aam
add
in
mov
fs
sbb
in
push
pusha
in
jb
loop
call
inc
mov
repnz
dec
inc
sbb
fsubp
inc
fdivl
pushf
in
ret
dec
or
adc
lcall
or
fucomp
and
movsb
int
adc
popa
jmp
pusha
sbb
add
pop
outsb
inc
arpl
stc
dec
repz
movsl
rol
pop
rcrl
inc
sahf
lock
xchg
fdivp
sub
and
popfw
sbb
adc
or
rcrl
out
mov
dec
add
or
and
fnstenv
pop
rcr
push
fs
add
in
enter
adc
sub
push
and
mov
xchg
pop
inc
call
data16
or
fadds
ret
pop
ds
jae
pop
out
inc
mov
push
fnsave
jnp
into
xor
daa
mov
cltd
fld
ds
adc
add
mov
push
test
es
movsl
mov
xor
jecxz
arpl
dec
jb
popf
mov
xchg
fisttpll
in
pop
lahf
pop
into
sub
shlb
pushf
out
push
cld
pop
inc
xchg
sbb
imul
into
lahf
inc
xlat
mov
push
ja
pop
test
fidivrs
in
into
add
push
push
mov
scas
ja
je
or
sbbb
into
inc
fmuls
sti
jbe
sbb
jp
inc
mov
jnp
mov
movsl
xlat
ret
jmp
pop
mov
jo
shrl
push
lods
xor
rcrb
stos
inc
inc
push
outsb
xlat
sahf
pushl
imul
lods
xchg
pop
sarb
sbb
adc
test
xor
add
cmpsl
bound
ss
mov
stos
sbb
movsl
movsb
sahf
xchg
lahf
pusha
dec
or
loop
push
bound
addr16
stos
add
les
shrl
dec
icebp
fisttpll
je
in
or
push
dec
rorl
sub
flds
sbb
pop
movsb
inc
ret
cmpsb
push
push
fisubs
mov
lret
adc
lahf
inc
int
jle
mov
in
cld
jnp
cmp
movsb
jbe
jmp
out
mov
call
mov
bound
outsw
in
cmp
cmp
xchg
xchg
mov
scas
mov
pop
pop
push
je
pop
or
sbb
inc
addr16
or
lahf
scas
cmp
cmp
scas
js
mov
cmp
in
adc
aam
inc
imul
mov
sarl
movsb
mov
aaa
mov
mov
out
in
inc
pop
mov
test
sub
scas
arpl
in
xor
leavew
lahf
pop
iret
test
mov
out
sub
sub
push
xor
test
notl
sub
rep
sarl
xor
sub
or
mov
pop
in
ja
sbb
xor
cltd
mov
xchg
pop
pop
fwait
sahf
cmp
xor
mov
aam
popa
stc
mov
pop
mov
push
bound
cld
testl
sahf
and
das
cmp
mov
int3
out
sub
inc
push
jle
out
lcall
xchg
mov
pushf
es
sbb
stos
out
xor
data16
fisubl
dec
out
cmp
mov
or
hlt
loopne
mov
test
push
ljmp
iret
imul
sbb
push
pop
loop
icebp
lret
mov
fptan
jecxz
jbe
cmp
push
psubusw
es
and
adc
popa
adc
mov
sub
cmpsl
xchg
addl
xor
fiadds
js
push
push
sbb
leave
xchg
daa
xor
fidivrl
cmp
outsb
and
dec
negb
imul
daa
cld
call
dec
std
jo
clc
cmp
les
jmp
inc
clc
mov
dec
or
cmpsl
mov
iret
mov
daa
in
xchg
das
int3
dec
and
int3
pusha
hlt
push
dec
repnz
xchg
pop
sub
jg
inc
push
inc
cli
daa
out
sub
js
jge
or
xor
fcmovnu
sbbl
and
aam
inc
add
imul
adc
imul
shrb
aam
leave
cmpsl
ja
push
jns
mov
test
imul
add
into
cs
cwtl
pop
add
test
outsb
add
mov
mov
mov
test
mov
xlat
sub
pop
xchg
dec
cmp
lea
mov
mov
dec
enter
adc
lea
jp
pusha
sub
sub
jmp
fidivl
push
cmp
xchg
xchg
arpl
jle
pop
outsb
mov
call
inc
ja
jo
outsl
es
cld
inc
movsl
mov
xchg
jp
repz
xorl
test
push
les
test
mov
xchg
sbb
xlat
fwait
cmc
in
mov
das
cmp
mov
lea
mov
inc
inc
negb
cmpsl
std
out
xchg
popa
fdivrs
fldenv
sti
xor
pop
mov
movl
jp
mov
adc
cmp
cmpsb
in
adc
aam
pop
lds
add
imull
mov
add
dec
adc
aaa
mov
lss
pop
test
pop
fucom
sub
jno
push
or
movl
repz
dec
subl
jb
cltd
sbb
lock
push
push
cmp
fists
imul
cmp
cmpsb
es
sarl
lcall
mov
pushf
add
bswap
push
mov
lahf
std
bnd
pop
dec
push
mov
sub
test
mov
in
fmul
sbb
into
gs
outsl
inc
mov
enter
adc
out
mov
push
repz
les
in
jmp
ds
nop
cmp
out
jle
xchg
fstpl
dec
push
push
int3
fistpll
ds
imul
iret
dec
cmp
enter
loop
lahf
into
xor
out
inc
lock
fdivs
push
inc
push
mov
aad
dec
fidivs
inc
iret
clc
push
xchg
repnz
push
sahf
and
data16
loopne
sbb
xchg
adc
movups
js
cmp
rcr
lret
push
stc
xor
push
jno
mov
inc
fs
mov
cmpl
pop
sbb
cmp
loope
mov
push
int
sbb
jbe
testl
cmp
add
repnz
jns
je
adc
in
negl
fbld
es
xor
dec
mov
lea
clc
mov
cltd
test
add
mov
ret
sub
inc
xor
xlat
negb
jg
jo
lods
lods
xor
mov
sub
int
pop
inc
enter
flds
push
xor
bound
mov
inc
jnp
xor
fisttpll
shl
mov
xlat
xchg
mov
outsb
mov
sti
insb
mov
or
jns
dec
dec
das
mov
repz
inc
ja
and
les
decb
filds
mov
popf
dec
xor
int3
cmp
xchg
sbb
rol
pushf
incl
test
out
popa
inc
inc
xchg
sub
rorb
ret
bound
outsb
stos
or
mov
mov
incb
mov
mov
imul
pop
pop
out
insb
inc
xlat
cmp
hlt
mov
int3
push
in
or
cmp
into
push
inc
push
mov
lods
lock
fldenv
andb
inc
in
daa
bound
dec
cmp
rorl
stos
js
push
sti
popf
in
and
sarb
stos
jns
popa
ret
push
sahf
and
lock
into
xchg
imul
std
cli
repnz
out
xorb
andb
lock
es
mov
push
xor
rorl
dec
cmp
add
cli
aad
clc
rcrl
xchg
dec
dec
fmul
lret
mov
pop
mov
sbb
call
push
pushf
movsl
orl
mov
pusha
fidivrs
cmpsb
mov
mov
add
mov
adc
loop
lcall
cmp
xor
lods
daa
stos
mov
jae
jo
lea
imul
cmpl
lea
jbe
xchg
mov
sub
sbb
test
mov
fcompl
jg
push
push
cs
sahf
les
pop
divl
dec
and
addr16
mov
cli
into
lret
aad
mov
lods
test
or
inc
xchg
add
icebp
stc
mov
shl
lahf
jbe
jge
es
imul
jmp
xor
int
jg
sahf
stc
das
call
add
push
insb
or
mov
push
cmp
mov
gs
in
das
mov
ret
ss
mov
xor
cmp
and
pop
shl
xlat
out
subl
std
mov
pushf
fisttpl
cs
jno
movsb
insl
jp
fistpll
sbb
mov
inc
push
sub
or
and
sub
stc
fnstsw
movsb
enter
scas
mov
es
cwtl
or
sbb
in
mov
push
dec
xchg
test
jo
mov
mov
jle
insb
mov
aas
stos
lods
out
lock
dec
shrb
mov
ret
in
out
add
xor
stos
cs
xchg
ficomps
lret
push
cli
xchg
test
outsl
repz
push
push
add
adc
pop
mov
sbb
mov
mov
ljmp
repz
bound
inc
mov
sbb
enter
dec
push
dec
leave
lods
mov
pop
xchg
repz
lods
fs
ret
inc
jp
xor
pop
shl
scas
hlt
insl
in
xor
add
mov
insb
jle
jge
sbb
mov
imul
mov
out
shrb
movsl
sarl
xlat
cmp
cs
lret
int
cwtl
mov
dec
fsub
in
cmpsb
mov
xchg
xor
loope
or
sbb
mov
cmc
in
push
xchg
fcmovne
sar
inc
repnz
cmp
dec
cmpsb
jbe
jge
xor
add
mov
push
sbb
les
xor
fldenv
insl
mov
lods
lret
pop
fildll
insl
addr16
pop
dec
add
leave
mov
lods
jmp
jle
lahf
pop
dec
stos
dec
scas
out
jge
mov
or
inc
sbb
sti
cmp
add
adc
push
pop
jne
cltd
mov
sub
out
sahf
and
xor
or
jl
cmpsl
leave
loop
push
lds
jge
pop
mov
xchg
data16
leave
inc
jle
popa
pushf
dec
ret
lock
fisubs
jge
aad
dec
outsb
pminsw
clc
inc
mov
jne
popa
inc
push
push
mov
outsb
pusha
jo
or
pop
add
mov
in
pop
imul
xor
sbb
adc
jmp
fidivrs
lods
add
dec
repz
jnp
lret
ljmp
lret
daa
aas
incb
mov
mov
lret
int
int3
insb
js
movsl
daa
mov
ret
pop
mov
addr16
or
xchg
loope
mulb
wrmsr
sbb
pop
insl
xchg
mov
out
adcl
jb
inc
sahf
and
add
insl
in
in
inc
ljmp
popa
roll
mov
mov
fldl
adc
lret
mov
xchg
repz
stc
or
imul
mov
jmp
fmul
fldenv
sbb
adc
aaa
or
or
xchg
fiadds
mov
or
dec
xor
imul
xrelease
arpl
idivl
xchg
add
xor
lds
stos
cmp
aaa
dec
xor
repz
mov
lea
mov
lret
loopne
lds
aas
jae
in
fs
mov
subb
push
in
dec
test
icebp
stos
dec
sahf
push
pop
push
mov
xchg
ficompl
mov
adcb
jmp
stos
gs
sbb
and
divl
jb
mov
xchg
push
inc
mov
xchg
push
adc
lret
push
rcrl
jle
inc
ss
rorb
fldl
and
cmpsl
in
adc
movsb
cwtl
dec
push
sahf
lds
jo
int
push
mov
pop
or
sub
cmc
cli
pop
jp
stos
in
in
adc
dec
mov
lahf
lea
mov
sarl
lcall
pop
js
pop
lods
mov
aas
mov
hlt
hlt
sbb
pop
and
cltd
mov
sub
fs
and
outsl
sub
aaa
icebp
xchg
cmp
dec
inc
fwait
inc
xor
ds
xor
inc
inc
inc
cmpsl
xorb
imul
and
jle
mov
xor
outsb
bound
ficompl
xor
lret
mov
lds
rcrb
leave
lds
cmpl
mov
pusha
rcl
mov
bound
lds
push
ficoml
xor
pushf
add
test
roll
call
jg
xchg
push
test
xchg
and
or
stos
sub
loopne
push
popa
aad
mov
cmp
push
mov
les
sub
shlb
lret
mov
cmp
jno
or
cli
cltd
decb
xor
out
fbld
hlt
sub
dec
add
pop
mov
xor
outsl
ret
rcrl
dec
jmp
popf
or
jne
shl
xchg
jne
mov
fwait
or
xchg
out
cmp
pop
fs
mov
push
and
insb
sub
sbb
fcmovnb
xor
in
xor
inc
cmc
jns
popa
jle
addr16
insb
cld
test
vprotw
adc
mov
inc
sbb
into
xor
test
call
rcrl
cmp
and
pcmpeqw
pop
test
sub
xchg
dec
mov
mov
sub
mov
xor
pop
and
sub
pushf
mull
xchg
mov
pushf
sbb
mov
push
sub
xchg
sbb
enter
lods
push
pop
cs
andb
imul
cmp
cmpl
es
pop
std
sti
clc
mov
mov
and
imul
leave
shrb
les
mov
fldcw
dec
sub
mov
xchg
push
loope
xchg
mov
int
adc
pop
push
xchg
and
das
fsubrs
call
sub
pop
enter
loopne
setae
push
pop
lock
sub
in
nop
fistpll
mov
dec
mov
cs
fucom
pop
int
and
in
jno
cld
jle
cmp
add
mov
xchg
mov
xchg
es
jo
in
mov
je
jge
jge
fdiv
out
cmp
lods
mov
test
cld
inc
into
inc
push
cli
testb
aas
inc
pop
mov
negb
and
cmp
ret
iret
sub
add
fisttpll
div
shl
inc
daa
es
sub
loopne
pop
cmp
xchg
subb
sub
test
hlt
repnz
jmp
cli
push
jle
test
push
pop
notb
shrl
sub
mov
orb
icebp
xchg
add
clc
inc
or
mov
dec
or
lods
test
or
fmuls
sbb
jne
pop
rorb
push
orb
inc
jle
mov
dec
dec
pusha
sbb
mov
push
inc
outsl
xor
sahf
mov
and
xchg
clc
out
mov
fsubrs
sbbl
fistpl
push
jo
adc
mov
insb
adc
inc
lods
mov
in
pop
pop
push
mov
lahf
jg
jnp
pop
arpl
xchg
xor
das
pop
call
dec
push
cld
dec
cwtl
pop
xchg
fs
shlb
mov
mov
xor
sbb
xchg
add
aam
in
push
loop
inc
mov
and
in
adc
sub
into
inc
sub
mov
sbb
mov
stos
movsl
test
xchg
and
subl
ficomps
fsubs
insb
pop
mov
push
adc
pop
inc
sbb
push
mov
sub
fadds
dec
in
in
mov
jo
ret
ss
inc
inc
incb
mov
push
aas
dec
inc
and
sub
data16
mov
xchg
jecxz
pop
jae
movsl
outsb
mov
sbb
popf
push
or
mov
mov
mov
out
dec
xor
xchg
jb
push
imul
jmp
push
add
cmp
popa
adc
xor
outsb
jnp
lods
sbb
adc
lds
in
pushf
loopne
inc
subb
xor
push
ljmp
push
hlt
jg
mov
dec
push
into
into
scas
in
jecxz
push
je
les
sti
test
stos
inc
jp
lret
jns
filds
push
push
iret
repnz
bound
push
test
repz
and
std
mov
mov
inc
pop
loope
out
test
dec
xlat
std
aas
dec
jp
pop
pop
mov
push
daa
sbb
stc
in
xor
fiadds
cmpsb
sub
aaa
mov
sbb
pop
fcompl
subb
xor
ss
shll
iret
mov
lea
es
mov
sbb
xchg
movsl
mov
mov
scas
add
addr16
cli
xchg
jae
jecxz
adc
inc
add
jno
xchg
xor
ds
sahf
pusha
jnp
repnz
push
add
pop
into
lds
mov
pop
push
mov
sbb
mov
fistl
aas
mov
pusha
push
dec
sbb
test
in
inc
sti
inc
jecxz
scas
add
sarl
cmp
sbb
ja
iret
bound
je
or
pop
dec
in
rorl
cmp
imul
arpl
xor
fs
cmovle
push
out
push
call
sarw
push
enter
or
jo
inc
das
pop
xchg
and
or
repz
fs
pop
inc
rcl
add
icebp
xor
ljmp
xor
addr16
movsl
mov
std
lahf
rorb
cmp
mov
roll
inc
mov
ficompl
pop
lea
imul
shll
push
enter
cli
mov
in
imul
adc
mov
rcrb
int3
loope,pt
aad
mov
leave
dec
jecxz
ficompl
ja
pop
out
lods
dec
adc
and
xor
mov
cmp
inc
mov
jg
push
pop
or
jnp
add
pop
xor
subb
push
test
jle
xchg
adc
or
insb
sub
arpl
cmpsb
dec
lods
std
mov
add
inc
sahf
gs
addl
loop
mov
ds
mov
pop
add
push
mov
imul
push
inc
in
mov
push
rcrl
pop
pop
scas
fwait
sub
pushf
mov
in
push
adc
sub
mov
adc
int3
cmpl
pop
xchg
pop
jge
mov
push
pushf
mov
enter
std
cmp
jns
mov
test
jns
mov
pop
outsl
daa
mulb
xchg
add
add
pop
pushf
sbb
and
imull
into
and
lods
insl
js
dec
add
lea
mov
jecxz
jne
mov
in
andb
and
xor
mov
shlb
adc
outsl
mov
jecxz
jno
jg
popf
or
loope
daa
aam
inc
int
add
pop
add
pop
pushf
jns
pop
jle
add
sbb
mov
lret
jp
push
int
bound
or
sbb
mov
shrb
cmp
fwait
mov
sbb
shr
inc
dec
mov
inc
ret
pop
enter
jne
iret
aas
loop
fmul
ss
cld
fdivrs
shlb
sbb
icebp
sbb
fwait
sbb
pop
dec
daa
add
mov
mov
fcmovb
and
mov
jo
cvtps2pi
add
aad
mov
and
call
sbb
sbb
mov
clc
push
popa
imul
mov
int
dec
fs
xor
push
push
scas
and
nop
mov
mov
cmpsb
and
lods
pop
notl
mov
orb
dec
jp
into
outsb
xchg
xchg
jns
call
sbb
imul
dec
push
mov
jb
mov
movsb
inc
shlb
fdivr
fs
hlt
movsl
gs
mov
scas
shr
lahf
rcrl
lret
fisubrl
mov
movsb
scas
in
mov
std
jbe
jnp
mov
pop
data16
sub
jl
daa
test
or
lods
mov
ds
fildl
xchg
and
in
pop
lods
lcall
outsb
mov
add
mov
arpl
in
add
out
call
in
adc
lds
mov
xchg
sbb
mov
jae
insl
cmc
add
je
lods
loopne
sbb
xchg
jg
das
cmp
xor
and
xor
xchg
sbb
inc
popf
into
dec
nop
and
in
jne
mov
stc
mov
and
and
lcall
adc
lock
clc
add
mov
das
notl
popl
ja
xchg
jb
outsl
orb
mov
inc
or
mov
fldenv
push
stc
and
cld
js
pop
lods
cmp
mov
and
mov
fistl
jge
sub
repz
jb
add
call
dec
ret
stos
mov
icebp
cmp
jns
adc
test
mov
out
inc
sub
add
fwait
out
jmp
adc
jle
push
lock
mov
nop
sarb
outsl
es
pushf
scas
test
push
mov
fiaddl
lods
mov
and
addb
pop
fs
sti
xchg
mov
dec
xor
pop
sbb
fcomi
mov
lods
mov
mov
sub
jmp
xor
insb
push
mov
mov
stc
addl
jno
filds
loop
pop
jmp
lods
dec
mov
cmpsl
daa
lods
cmc
loope
subb
push
call
cltd
jns
outsb
in
outsb
lret
pop
add
and
ffree
xchg
js
lds
or
xchg
fsubs
cmp
and
jmp
mov
int3
xchg
dec
sub
push
nop
leave
jnp
movsb
add
sbb
fisttpl
lea
loope
inc
mov
in
mov
insl
scas
imul
cltd
bt
push
push
aaa
fnstenv
dec
xchg
imul
in
loop
mov
xor
js
sarb
stos
jp
loop,pt
mov
cltd
pop
outsb
push
mov
jp
das
ja
hlt
jne
scas
and
sbb
out
call
pop
mov
in
jge
data16
jbe
dec
lret
jnp
sbbb
test
leave
sub
aaa
fsts
aaa
lahf
pop
inc
mov
aaa
fst
movsb
dec
cli
jbe
pop
enter
repz
push
scas
sbb
addl
jle
sbb
mov
mov
lahf
faddp
pop
jb
scas
mov
popa
inc
test
mov
imul
ljmp
int
fistpl
jmp
mov
inc
mov
insb
mov
stc
into
mov
pop
jae
movsb
fsubrp
mov
imul
xor
or
pop
pusha
jne
xor
inc
inc
fadd
lea
or
das
push
pop
push
in
inc
and
xor
mov
jns
pusha
dec
mov
lahf
xchg
fucomi
adc
imulb
or
push
addl
mov
dec
jbe
in
adc
jns
sub
popa
sbb
dec
add
lock
stos
xlat
mov
push
mov
iret
out
xchg
lock
cmpsl
adc
dec
mov
lcall
push
cmpsl
aaa
jmp
inc
sbb
cmc
xchg
insb
test
fsubrs
jecxz
jle
mov
sbb
add
mov
and
mov
lds
mov
inc
pop
inc
lods
xlat
sbb
lret
sarb
push
inc
sbb
loopne
cmc
mov
xor
imul
fsubrl
sarl
andb
clc
sub
repz
cmp
icebp
cmp
or
or
cwtl
mov
sub
mov
icebp
lcall
and
xlat
xchg
cmp
cmp
or
cmpb
xchg
inc
js
fwait
cld
das
mov
inc
inc
dec
xor
sbb
test
pop
or
mov
xchg
in
iret
inc
fmuls
shr
adc
js
adc
pop
icebp
pop
inc
mov
imul
out
daa
adc
pushw
push
stos
inc
pop
nop
pop
scas
repnz
push
push
ss
or
shlb
jbe
fidivs
push
out
jb
iret
inc
in
mov
enter
ja
jae
adc
pop
cmpsb
or
imul
mov
std
xchg
repnz
or
mov
cwtl
scas
push
add
out
sti
xchg
cmp
fcomi
pop
aaa
push
lods
mov
imul
scas
fstpt
out
fidivl
xchg
iret
std
aaa
mov
insl
mov
xlat
in
cmpsl
test
xor
bound
cmpsl
dec
mov
out
xchg
inc
push
add
aaa
aam
inc
pcmpeqd
mov
mov
ficoml
cmp
mov
mov
adc
insb
ds
push
shlb
dec
jmp
mov
adc
push
jmp
test
in
loop
ss
push
addr16
xchg
iret
adc
lret
dec
xchg
das
mov
or
data16
xlat
or
xor
repnz
mov
sbb
mov
jno
pop
sbb
xlat
pop
xor
aam
clc
mov
or
xor
hlt
popa
fadd
add
jmp
mov
fisttps
dec
add
push
push
and
icebp
adc
pop
sarl
cmp
popf
mov
pop
mov
sbb
fs
add
sub
lcall
push
aad
lret
enter
and
dec
jns
adc
mov
ja
push
test
xor
lret
jbe
mov
hlt
pop
inc
and
jl
inc
int
std
test
pop
mov
jle
inc
mov
fldenv
push
bound
mov
xor
adc
mulb
mov
outsl
fistpll
test
orl
pusha
cmpsl
adc
pop
inc
push
mov
sub
scas
jle
addb
mov
jb
popa
or
out
mov
mov
lea
mov
cld
xchg
pop
cld
es
mov
repz
jp
mov
pop
lcall
ret
push
inc
fdivp
jb
dec
cmp
je
push
sarb
dec
sub
mov
aaa
les
cmp
sub
mov
inc
jmp
movsb
icebp
fiaddl
and
sahf
adc
imul
dec
inc
sub
fcompp
jmp
cmp
insl
je
pop
int3
cs
add
jns
push
and
sub
sbb
mov
or
imul
cmc
mov
lea
cmp
cmpsl
mov
cmp
xchg
sub
jno
mov
cmp
fcom
fistpll
jl
pop
loope
ret
les
setl
cmp
aaa
es
jno
dec
loope
push
sub
fimull
ficoms
mov
lahf
test
mov
add
arpl
xor
test
mov
das
jbe
cltd
push
lods
push
test
or
fs
leave
cmp
sti
add
ret
stos
inc
repz
sbbl
popf
enter
jp
test
jmp
aad
jge
icebp
test
out
cwtl
shrb
jnp
sarl
jb
xor
push
push
mov
mov
mov
add
mov
mov
das
pop
cmp
in
mov
notb
dec
out
xor
and
or
stos
mov
push
testb
les
pop
ret
ss
adc
mov
mov
out
sub
mov
ja
rorl
jbe
wrmsr
mov
cmpsb
sub
sahf
in
shll
std
divb
xchg
dec
inc
and
int
lds
cmp
dec
mov
fsubrp
xor
xchg
mov
inc
adcb
das
jmp
repz
mov
inc
push
in
xor
sbb
pop
cmp
add
stos
sbb
cltd
clc
sahf
and
dec
ficoms
cmpsl
and
push
xchg
push
adc
aad
roll
pop
ficoml
movsl
adc
adc
mov
and
aaa
pop
or
in
icebp
cmpl
int3
imul
push
add
mov
lahf
mov
dec
jle
jmp
push
int3
cli
incl
xlat
or
sub
cli
repz
adc
jp
dec
js
leave
imul
daa
sub
into
add
sahf
lret
insb
push
sarb
cmpsb
mov
test
imul
push
dec
cld
jge
cmpl
dec
ds
jg
outsl
and
fstpt
xchg
insl
lock
push
and
scas
xor
movsl
pop
inc
nop
fdivr
mov
jbe
pushf
mov
loopne
xor
outsl
sbb
out
js
stos
cmp
fcmovne
insl
in
dec
sub
dec
mov
push
outsb
shrl
out
movb
dec
test
or
add
xor
cld
inc
xor
dec
repz
sbb
repnz
ret
and
xchg
mov
adc
js
sti
leavew
jno
inc
pop
out
xor
cmp
outsl
loop
sub
inc
xor
out
lret
xchg
cmpsb
lock
cli
dec
cmp
mov
sbb
stc
rol
lcall
jbe
mov
adc
dec
cmp
push
jg
inc
mov
pop
fs
stos
out
mov
add
add
xchg
ds
or
and
or
testb
mov
push
sub
stos
xchg
adc
cmpsl
shll
cmpsb
les
aam
and
inc
out
popa
xor
add
mov
push
imul
lods
test
out
aas
dec
repnz
inc
xor
mov
dec
dec
aad
sub
subb
movsb
cltd
loopne
loope
cmp
xor
xlat
pusha
jecxz
sti
sub
call
jle
cmp
mov
out
add
adc
test
sbbl
cmp
jmp
popf
adc
push
cmpsb
xchg
sub
mov
test
xchg
sbb
adc
xchg
mov
or
insb
add
clc
pop
xchg
test
das
out
push
xor
rorb
xor
jne
movsl
test
loope
xchg
mov
mov
jo
pop
lcall
mov
push
inc
pop
hlt
mov
sbb
pop
jno
stos
inc
mov
fstl
xchg
push
imulb
les
imul
aam
inc
jmp
rolb
jne
dec
xor
cmp
xor
ret
shr
mov
js
inc
stc
xchg
fadds
lods
sbb
int
push
lea
shr
mov
test
mov
pcmpgtd
mov
dec
jno
cmpsb
call
stc
mov
les
aas
imul
negl
or
mov
lret
lea
stos
loope
negl
dec
push
xchg
inc
jl
dec
lock
mov
mov
cltd
aaa
jmp
pop
jl
jne
xorl
cmpsb
pop
add
cmp
inc
stos
sarl
adc
ret
in
xlat
mov
out
popf
and
ja
add
adcb
xor
js
xor
push
and
dec
jbe
sbb
cmp
or
inc
sbb
testl
dec
cs
xor
outsl
mov
xchg
insb
scas
mov
into
cmp
mov
and
in
shll
cmp
adc
add
das
cmp
test
mov
cmp
rcrl
es
jno
and
cmp
push
mov
out
repz
stc
mov
pop
subb
jns
xchg
inc
lret
push
jb
mov
fsts
xchg
dec
aam
in
ljmp
jns
popf
add
or
mov
sbb
incb
shlb
jne
mov
daa
sub
fisubs
jecxz
pop
int
pop
sbb
xor
in
out
xchg
movsb
daa
xchg
mov
mov
pop
mov
loopne
cmp
ret
dec
cmp
mov
xchg
add
movsb
loop
cmpsb
add
dec
push
inc
push
pop
cmc
int
loope
and
aad
push
stos
jmp
sarb
imull
cld
cmp
cmp
pop
add
lock
jp
pinsrw
pop
or
iret
fs
cmp
fwait
stos
pop
xor
rcrb
repnz
pushf
movswl
jp
sahf
sub
jl
and
movsb
std
sbb
out
pusha
fstl
dec
or
jge
fdivr
add
cmp
inc
or
push
test
cmp
sbb
ret
iret
mov
jle
push
xchg
push
or
js
sbb
jmp
insb
in
mov
inc
imul
imul
js
adc
push
div
lcall
aas
xor
aas
mulb
rolb
nop
pop
lods
mov
ljmp
leave
pop
decl
cmp
dec
xor
adc
mov
mov
xchg
jno
jno
xor
bound
jmp
jae
sub
into
ss
and
cs
iret
inc
or
dec
mov
sbb
lret
div
add
stos
movsb
push
jge
cmp
ss
insb
cld
dec
xchg
jmp
dec
insl
jb
repnz
pop
mov
insb
fnstcw
jns
leave
cli
sbb
fsubrl
push
sbb
pop
push
in
add
dec
fsubr
cmc
lds
ss
rcrl
div
jae
loop
fbstp
lods
pusha
sub
stc
test
pusha
je
in
out
stos
mov
lods
enter
aaa
add
add
in
push
inc
lret
mov
mov
dec
iret
adc
pop
lahf
cmpsl
cmpsl
mov
and
nop
enter
add
out
ja
jmp
les
sub
shl
jge
mov
or
dec
pop
in
xor
push
or
shlb
sub
push
movsl
div
or
mov
inc
pop
cwtl
in
mov
adc
fildl
inc
sbb
aam
ja
cmp
add
or
pop
sti
push
push
filds
add
xchg
mov
aas
daa
out
dec
sbb
adc
lahf
dec
vmovsd
push
fiaddl
sub
and
adc
scas
xchg
cmc
cmpsb
nop
lret
imulb
xchg
addr16
repnz
lock
cwtl
clc
pop
xchg
mov
dec
repnz
stos
push
add
ljmp
xor
add
pop
dec
addb
outsb
in
imul
jno
dec
pop
mov
and
enter
sahf
inc
dec
add
or
aad
push
std
cli
js
xchg
mov
je,pt
cs
sbb
sbb
xchg
movsb
adc
cld
push
ja
cmp
inc
and
and
dec
dec
aas
jmp
sub
cmp
and
scas
hlt
cs
movb
xchg
shrb
mov
jl
add
cmp
nop
outsl
pop
push
inc
push
inc
lret
jl
aad
test
xchg
push
dec
aad
out
xchg
push
sbb
arpl
leave
nop
out
mov
sub
loop
pop
cmp
in
jge
add
jbe
mov
ret
cmp
add
mov
into
inc
arpl
addb
pop
ss
mov
cmpsb
add
sub
sub
mov
std
mov
and
mov
cmp
jl
xchg
mov
testb
bound
sbb
adc
and
and
fcoms
xor
dec
cli
shll
pusha
mov
mov
rcr
sbb
cli
scas
add
int
sarb
mov
pop
stos
scas
jae
out
mov
outsb
mov
push
inc
lahf
lock
add
sbb
icebp
sarl
cmp
mov
repz
lea
test
cli
jns
add
sbbl
jo
cmp
shlb
cmc
mov
mov
mov
test
jae
out
negb
lret
ljmp
not
jmp
inc
mov
push
mov
movsb
fwait
mov
enter
adc
xchg
sbb
scas
out
daa
aam
fcompl
sbb
mov
pop
xchg
mov
push
lea
jnp
adc
xor
and
push
ffree
ret
aaa
cli
push
pop
xor
sbb
jge
and
xchg
fildl
pop
nop
xchg
cmc
add
pop
add
les
iret
mov
mov
aaa
hlt
ljmp
test
ret
nop
inc
inc
dec
add
ja
xor
push
fidivl
jbe
scas
aad
cmp
and
movsl
xlat
push
aam
xchg
sbb
cmp
cmp
mov
lea
lock
jmp
cmc
insl
cltd
fnstsw
cmp
hlt
add
mov
icebp
adc
stos
mov
xchg
add
mov
dec
mov
sahf
cmc
stos
xchg
add
out
mov
test
call
xchg
scas
fidivrs
sbb
push
or
addr16
scas
test
push
push
in
mov
adc
lahf
cmp
jnp
jge
pop
and
dec
shll
cmp
mov
mov
add
shll
xorb
movb
lret
sbb
cltd
lods
andb
xor
andb
or
fdivrs
push
inc
out
fstps
xor
int
movsb
das
aam
inc
adc
jns
sbb
sti
pop
inc
in
sbb
sub
pop
sbb
lods
ficoms
add
popf
lods
fldenv
pop
xlat
push
xchg
jbe
aaa
lds
loopne
mov
mov
ret
cwtl
add
xchg
ret
out
cmp
push
pop
pop
add
std
sarb
arpl
dec
sub
movsl
clc
xchg
jae
xchg
repnz
mov
aaa
xlat
imul
mov
lret
ret
mov
ds
das
jbe
push
jp
mov
cmpsb
sti
mov
mov
jnp
inc
ja
fists
mov
pop
test
and
add
fstl
pop
xor
and
mov
sbb
pop
pop
lahf
sbb
xlat
sub
jae,pt
inc
push
push
lret
iret
jne
mov
testb
sar
stos
sahf
sub
mov
mov
sub
push
fidivl
andb
mov
stos
cmp
mov
lds
lods
incb
mov
mov
daa
inc
push
test
fcomps
subl
xor
insb
lods
jmp
sahf
or
fstps
pop
pop
movsl
pop
add
out
ret
shlb
and
cmp
jge
ja
ss
inc
mov
mov
cmp
mov
sbb
out
inc
sub
insl
fld
stos
push
xchg
repz
sti
enter
cmp
inc
enter
pop
or
enter
inc
cmp
negb
aad
or
jl
outsl
or
xchg
mov
rolb
nop
mov
and
push
jecxz
insl
mov
stc
or
outsb
out
dec
out
mov
aad
addb
dec
and
jb
lahf
test
or
jne
cmp
and
mov
mov
sbbl
outsb
push
icebp
les
lods
dec
in
mov
lret
sbb
fwait
cmc
stc
pop
jg
mov
push
add
xchg
repz
es
cmp
and
mov
pop
sub
cs
and
rclb
rcl
lret
sahf
arpl
push
inc
dec
imul
in
into
jge
movsl
xor
xor
cmp
imul
pop
scas
lods
ss
inc
cmp
add
cld
mov
inc
push
jmp
xlat
sub
cmp
popa
cmc
fldt
out
movsb
sub
icebp
push
pop
jle
mov
adc
or
adc
sarl
loopne
adc
dec
in
test
insb
icebp
sub
gs
in
mov
or
cmp
xor
push
inc
mov
sub
inc
inc
push
inc
jb
testl
rclb
test
jne
mov
or
lret
pop
jecxz
loopne
movsb
insl
imulb
xor
push
jl
mov
gs
dec
repz
mov
pcmpgtb
in
inc
jecxz
sub
xor
cld
pmaxub
jecxz
mov
mov
xor
dec
in
imul
mov
mov
pop
sub
dec
out
dec
mov
int3
mov
inc
aaa
xor
mov
imul
arpl
push
sbb
sub
jno
jb
push
repz
pop
shll
test
jb
mov
into
sbb
add
push
jb
dec
jl
shl
popf
add
test
dec
cmp
movsb
jg
pop
test
lahf
clc
faddl
iret
in
leave
add
iret
int3
ret
rol
add
nop
lea
loopne
push
adc
aam
test
bound
mov
insb
test
mov
cmpsb
icebp
jecxz
imul
outsb
leave
pop
jno
popa
fstpl
stos
mov
fadds
jns
into
outsb
test
movsb
ljmp
sahf
es
or
outsl
sarb
scas
rcl
jp
lret
lds
mov
inc
fisubrl
shrl
sub
imul
hlt
or
dec
sar
dec
into
jecxz
add
dec
movsl
xlat
inc
fsubrl
xchg
jnp
or
sbb
inc
pop
dec
cmp
jp
shlb
and
pusha
repz
pop
adc
xchg
mov
loopne
xchg
pop
cwtl
fistpll
mov
push
filds
push
fisubs
loopne
mov
nop
mov
push
andl
push
sahf
ror
in
pop
push
push
inc
imul
sbb
sbb
in
mov
mov
sarl
cld
dec
sub
mov
fwait
add
adc
sbb
cmpb
ret
shrl
idivb
mov
stc
xchg
clc
xchg
mov
jnp
push
js
push
cli
out
cwtl
es
xor
xor
mov
pop
sbb
mov
dec
sub
test
xchg
mov
jb
mov
mov
push
and
insl
mov
push
mov
fs
js
pop
cmp
sbb
sub
sub
enter
enter
in
scas
sarl
mov
rcl
cmovl
and
xor
jl
movaps
or
push
mov
test
sti
mov
adc
rcrb
mov
add
mov
int3
and
lret
imul
adc
int3
or
cmp
out
jo
pop
jns
fcmovb
dec
mov
and
pop
sbb
cmp
jae
pop
fwait
out
cmc
and
add
scas
repz
loop
cltd
imul
dec
inc
mov
pop
mov
mov
sbb
addr16
xchg
rcrl
ja
out
sub
adc
pop
xchg
jne
xchg
mov
sub
fiadds
dec
dec
mov
ret
movsl
gs
jmp
push
xchg
rcl
repnz
dec
mov
pop
mov
out
aaa
pop
add
cmp
movsl
outsl
mov
xchg
inc
jno
inc
fs
jl
pusha
dec
stos
jecxz
mov
mov
jb
jne
or
lahf
sbb
mov
iret
adc
mov
int
int
imul
clc
aad
lret
sub
mov
fiaddl
test
sarb
aas
sub
lea
lods
clc
scas
dec
aad
push
test
mov
jnp
dec
push
add
fmuls
stc
sbb
xor
mov
pop
stos
add
pop
cltd
add
mull
xchg
pop
dec
sub
jp
sub
outsl
ret
xor
inc
enter
mov
aad
mov
lea
iret
mov
sti
sub
xor
rcrb
push
push
mov
mov
or
out
mov
jbe
mov
repz
stc
lcall
inc
loop
push
pop
pusha
jge
cs
mov
shll
pop
push
mov
dec
mov
xchg
dec
inc
mov
jmp
les
in
add
pop
mov
dec
add
jae
test
sarl
sti
repz
ficompl
mov
dec
jbe
xchg
mov
and
ret
testl
lea
mov
pop
fistpll
cmp
outsb
and
sti
mov
mov
repnz
push
and
pop
push
out
jne
repnz
dec
xor
and
push
scas
scas
sbb
cld
mov
and
sbb
cld
mov
dec
test
rorl
mov
in
adc
mov
jmp
xchg
sti
xor
pop
cmp
xchg
out
out
jns
mov
xchg
fdiv
jne
scas
lahf
out
jp
xor
data16
or
icebp
lods
les
cmpsb
rclb
inc
mov
out
ljmp
data16
push
xor
xor
pop
lock
filds
dec
and
jbe
dec
sarl
inc
fwait
lods
sti
aad
pop
add
mov
push
cld
leave
hlt
test
iret
sub
popf
fxch
mov
in
mov
loop
call
dec
stc
mov
push
popa
dec
ret
push
pushf
addr16
cld
dec
add
call
leave
cmp
aam
movsb
pop
sbb
enter
cli
aad
cmp
scas
xchg
arpl
mov
jb
outsb
sbb
shrl
scas
sbb
sub
sbb
and
gs
int
and
movsl
cltd
dec
adc
ror
in
jl
pop
sub
and
push
push
fisubrs
dec
lods
pop
sbb
shlb
ja
dec
int3
daa
mov
xchg
fisubrs
mov
int
push
inc
push
int3
cwtl
push
addb
rcrl
sbb
jge
lods
lock
adc
xor
mov
call
push
lods
mov
movsl
leave
or
push
jne
and
mov
jg
jae
popl
mov
mov
imul
cmp
iret
movsl
cmc
sbb
test
cmc
aad
sbb
cld
rcll
cmp
aad
sub
sti
rcrb
xor
out
hlt
sub
aad
aaa
fs
repnz
fisttps
dec
xlat
call
imul
pop
subb
cltd
xor
loopne
cmp
lds
adc
dec
imulb
jns
or
sti
incb
xor
fldcw
xchg
or
xchg
cmpsb
rclb
push
inc
lods
pop
sbb
add
sub
gs
adc
out
xchg
mov
popa
pop
mov
scas
xchg
imul
loopne
imul
std
adc
pop
fs
add
mov
inc
jns
dec
adcl
std
pop
sbb
and
add
outsl
ja
xchg
dec
adc
or
pusha
cwtl
inc
dec
and
hlt
aas
xchg
push
cli
cmpsl
xor
aas
or
dec
cmpsl
sub
or
lret
cs
ja
sub
jecxz
aas
push
pop
pop
pop
addr16
rorl
lea
add
inc
mov
stos
sbb
js
loopne
fs
test
cmp
inc
and
out
mov
jne
sarl
dec
lret
lea
pusha
call
stos
pusha
ja
add
not
ret
add
fildl
cmpsb
stos
std
pop
test
clc
test
shlb
add
sub
hlt
cmp
add
mov
xchg
cmp
mov
dec
add
iret
in
xchg
test
cmc
fidivs
mov
mov
in
mov
or
decl
add
popf
imul
repz
lcall
rorb
mov
add
xchg
xlat
mov
or
mov
cs
push
xor
mov
aaa
lcall
jnp
mov
dec
in
sub
lods
xchg
sbb
int
leave
adc
scas
mov
insl
mov
adc
xor
push
sbb
fisubs
clc
add
pop
mov
icebp
fimull
dec
int3
jbe
in
out
dec
sbb
adcb
leave
xchg
inc
dec
or
movsb
repnz
and
movsl
inc
fnsave
std
lret
sti
add
sub
inc
jae
lds
sbb
jo
aas
decb
xor
mov
xor
mov
stos
and
movsl
add
lods
sbb
xlat
sbbb
push
testb
ljmp
mov
sub
imul
out
mov
inc
pop
ljmp
das
daa
mov
sbb
mov
sarb
or
mov
test
cmp
push
adc
int3
not
cld
jle
loopne
xchg
push
faddl
sti
ret
push
std
jae
mov
imul
andl
ljmp
imull
int3
shrl
push
dec
jo
add
sub
int3
outsb
ds
xchg
sbb
cmp
and
sub
aaa
cltd
out
mov
jmp
mov
repz
mov
add
dec
adc
push
shll
movsw
xor
shll
or
shlb
out
adc
xchg
clc
dec
repnz
push
arpl
mov
push
mov
xchg
rorb
lret
adc
nop
loopne
dec
ret
cmpsl
pushf
mov
dec
int3
testb
push
pop
jae
xchg
lahf
ret
push
outsb
pop
xor
inc
aaa
jnp
mov
aaa
sbb
popa
inc
out
cmp
mov
cmp
int
sbb
push
sub
mov
leave
jl
adc
lret
movsb
sbb
sti
outsl
adc
sub
push
xchg
lds
xchg
xchg
xor
jge
pop
or
inc
out
inc
insl
clc
stos
pop
cmpsb
dec
pop
mov
mov
inc
inc
mov
roll
or
lret
mov
mov
insb
push
ss
mov
pop
in
pop
or
dec
mov
addb
fisubs
hlt
and
and
fnstenv
stos
jmp
mov
sub
pop
lcall
jb
lret
mov
shl
and
mov
jge
mov
and
rorl
enter
sbb
dec
repz
inc
ja
xchg
push
add
mov
jg
cmp
push
pop
sub
insl
mov
push
enter
and
jg
test
push
lods
in
hlt
es
jp
les
cli
and
outsb
push
or
popa
adc
cmp
xchg
imulb
and
mov
mov
outsl
aam
cwtl
jns
cmpl
pop
stos
ds
or
popa
jo
sub
cld
cmp
inc
daa
loopne
xor
dec
ret
sub
invd
out
cmp
sbb
mov
sbb
xchg
lods
int3
dec
addr16
cmp
xchg
in
jge
jbe
add
call
repnz
push
lods
add
jp
xor
cmpsb
stos
dec
sbb
fildll
rcrl
outsb
pop
cld
shrb
adc
add
sub
std
jmp
popf
xlat
push
jne
cs
lock
mov
int
out
lret
add
cmp
insb
pop
ret
cmp
fistps
push
call
insl
mov
mov
mov
mov
aaa
xchg
popl
fmulp
mov
cwtl
add
or
movsb
scas
mov
in
ljmp
aaa
inc
xor
jnp
jae
cmp
mov
pop
bound
imul
lret
mov
push
fdivrl
js
or
push
dec
fldl
xchg
jo
add
pop
lock
cmc
in
js
mov
hlt
scas
sti
aas
sbb
imul
sub
inc
fistps
lods
push
mov
out
add
dec
xor
adc
and
sbb
rcrb
mov
sbb
scas
call
cltd
xchg
iret
pop
push
mov
mov
call
les
sbb
xor
fdivrl
stos
mov
rorb
popa
push
bound
mov
imul
leave
mov
pusha
test
insb
jbe
adc
mov
lret
ret
adc
pop
jnp
sub
int
xor
mov
sub
sbb
cmpsl
testl
cmc
mov
repnz
jecxz
out
mov
fisttpl
sarb
xor
sub
xor
test
out
loop
and
ds
xchg
pushl
cmpsb
cs
ret
cmpsb
sub
add
adcl
test
flds
xchg
loopne
data16
xor
xchg
push
cmpsb
jg
mov
arpl
and
mov
aaa
mov
push
enter
jae
pop
int
sbb
dec
mov
rorb
stos
nop
push
in
add
push
loopne
rcl
mov
or
xchg
jns
and
inc
xor
push
pcmpgtw
jecxz
xchg
inc
addb
mov
scas
iret
lock
lock
gs
leave
lahf
mov
push
cmp
push
dec
dec
sub
cwtl
jne
push
push
cmp
insl
out
xor
mov
xor
ljmp
dec
xchg
lret
popf
dec
js
add
loop
adc
xlat
and
dec
das
push
outsl
or
adc
div
ficoml
jbe
or
rclb
cmp
loop
sahf
xor
sbb
lods
insl
xchg
fwait
xchg
sbb
lods
shlb
subb
dec
jmp
clc
out
xchg
or
adc
cmc
insl
sub
fs
cmp
jnp
fisubrl
or
xor
pop
fcmovnbe
xlat
jge
clc
jg
scas
pop
xchg
lea
mov
cmpsb
add
jo
imul
add
fldl
xor
add
andl
inc
hlt
jg
inc
or
push
into
push
mov
mov
std
imul
pop
xchg
fiadds
and
xor
mov
xor
dec
xchg
decb
xlat
cmp
sbb
push
fdivl
aas
push
push
push
sub
ja
insl
into
xor
sub
mov
ja
add
jbe
out
lods
pusha
lret
fisubs
mov
pop
lret
inc
mov
jge
pop
add
pop
xor
pop
std
nop
subb
je
jge
pop
sub
lds
cmp
mov
int
je
adc
and
loope
and
pusha
insl
xchg
test
mov
add
outsl
or
xchg
and
sahf
jae
mov
dec
lret
movsb
shlb
jl
or
ficompl
xchg
and
mov
orb
pop
jp
inc
cmp
dec
clc
aaa
mov
mov
sub
into
or
cmpb
xchg
aam
sub
lea
and
lret
sub
test
iret
js
mov
mov
lcall
ret
inc
test
mov
cmpsb
sbb
ss
push
xor
xor
mov
mov
out
shrl
push
aad
and
mov
cs
xchg
adc
test
fs
shll
es
lock
popf
sti
jmp
push
imul
mov
pop
imul
ret
sub
insl
lock
dec
pop
mov
adc
mov
dec
mov
xchg
pop
push
push
or
cli
sahf
sub
fnstsw
outsl
sub
pop
jbe
sub
or
mov
sti
addr16
fs
rolb
jecxz
lret
jl
test
outsl
iret
out
test
jl
pop
jae
mov
jl
mov
xor
das
push
inc
cmp
xchg
lods
roll
xor
pushf
add
jg
xchg
jp
mov
sbb
mov
lret
loopne
fnstcw
lds
test
adc
ja
dec
int3
add
jle
leave
adc
xor
push
popf
xor
sbb
stos
scas
adc
xlat
test
mov
popa
inc
ljmp
mov
add
cmp
adc
cltd
inc
xchg
cmc
nop
inc
jecxz
repz
cli
xor
fsubrp
jnp
push
into
jmp
xor
outsl
xor
outsl
sub
sti
jmp
cmpsl
lea
inc
test
xchg
sbb
fistl
adc
shl
leave
outsb
iret
dec
cld
mov
pop
push
mov
fistpll
adc
jmp
shlb
fadd
imul
aas
rcr
shll
xlat
cmp
xchg
and
cmp
xchg
int
cli
out
and
das
gs
ss
xor
adc
addl
es
dec
jne
ret
pop
mov
mov
imul
test
ret
push
fcmovb
add
popf
push
inc
ret
push
in
aaa
fstl
outsb
stos
insb
dec
mov
adc
lret
ds
mov
pop
ss
icebp
fwait
mov
mov
jns
add
sub
jo
dec
sbb
les
test
ja
mov
stos
fildl
cmp
mov
sarl
in
outsl
or
push
loopne
pop
xchg
xchg
fildl
pusha
pop
jg
sub
imul
or
or
stos
lods
lock
je
pop
jecxz
pusha
or
sbb
jnp,pn
push
adc
or
xchg
pop
push
mov
jg
push
lock
mov
jmp
mov
sarb
push
add
scas
fbld
push
outsb
and
fnsave
inc
repz
push
mov
stos
testb
xchg
cmpsb
xchg
mov
int
cli
sbb
ljmp
xor
mov
push
sbb
and
sub
cs
push
roll
sbb
nop
rol
cmp
andl
in
bound
in
sbb
std
sub
xchg
mov
pop
inc
icebp
lods
sub
es
or
out
mov
sar
push
xchg
push
hlt
sub
cmp
cmp
dec
ror
pop
jns
pop
fstps
in
faddl
mov
inc
fwait
je
mov
test
popf
jl
or
adc
pop
mov
sub
fiadds
aaa
inc
rcll
incl
lahf
push
fucomp
and
movsb
xchg
and
shl
dec
in
jns
dec
adc
jg,pn
dec
dec
loop
js
into
cmp
dec
js
test
and
cmp
mov
test
mov
or
or
dec
and
outsb
push
pop
aaa
fwait
jg
int3
xchg
stc
jge
dec
mov
imul
push
lahf
dec
mov
daa
ret
xor
pop
adc
enter
mov
into
jb
jecxz
inc
das
ds
xchg
mov
std
mov
inc
bound
cli
xchg
daa
mov
sub
pop
outsb
fbld
cmp
xchg
adcb
faddl
int
insl
daa
mov
loopne
cwtl
cmp
jns
rcll
movsl
xchg
jnp
jbe
dec
shrl
mov
pop
mov
sub
mov
movl
mov
jb
inc
mov
leave
jl
cmp
mov
adc
mov
and
mov
test
and
nop
ja
rorl
sbb
jmp
daa
xor
mov
and
lock
mov
lds
testb
push
cmpsl
shll
pop
xchg
and
jne
mov
cld
sar
stos
push
cli
loope
push
fwait
or
aas
lcall
lds
mov
lret
xor
pop
int3
dec
sub
rcll
ja
add
jns
fucomp
inc
insl
outsl
ja
xor
test
pop
sub
mov
xor
mov
mov
pop
jmp
fucomp
jb
loope
pop
fnstenv
fs
lcall
scas
dec
add
sub
loope
adcl
jno
dec
inc
jns
xlat
and
adc
and
dec
mov
push
sbb
sub
test
popa
push
lds
sahf
xchg
movsb
icebp
fcoms
xchg
loopne
mov
daa
pop
mov
inc
dec
cmp
pushf
test
cmp
lahf
sub
pop
pop
xchg
xor
jmp
pop
inc
xor
insb
sub
sub
jl
ficomps
pop
repnz
push
jnp
sbb
pop
mov
cmpsl
pop
ja
pop
out
pop
push
lea
fwait
ss
test
jmp
stc
repnz
lahf
pop
xor
lea
sbb
int3
push
arpl
lds
mov
cmp
push
movsl
adc
lods
hlt
or
inc
sub
js
mov
aam
aam
iret
stc
imul
xchg
iret
and
dec
pop
mov
and
inc
or
push
jle
sub
inc
xor
mov
arpl
out
outsb
cli
filds
pop
pop
fdivrp
insb
sbb
rsm
scas
or
out
jbe
pop
jne
inc
scas
test
roll
leave
sbb
dec
xchg
xchg
mov
ret
cld
ja
push
mov
aad
xchg
out
orl
adc
call
rcrl
out
mov
jmp
int
cld
jmp
addr16
out
sbb
dec
rolb
inc
jp
push
lcall
mov
jb
pop
cmpl
ja
pop
das
imul
sub
sub
jle
sub
jg
mov
xchg
std
and
ss
sub
cmp
add
pop
cmpl
pop
mov
jmp
or
push
xor
push
lahf
cltd
jae
fwait
mov
sbb
out
insb
das
adc
imul
jb
dec
pop
xchg
xor
xor
xor
or
cld
pop
enter
jnp
std
out
int3
ret
jo
mov
or
ret
in
pop
sub
pushl
ret
jnp
push
xchg
rorl
xchg
popf
nop
inc
leave
fistpl
les
std
mov
push
pop
sbb
xlat
pop
mov
call
out
sti
jp
lods
mov
fwait
sub
pop
mov
push
in
test
aas
pop
out
xchg
inc
test
lods
add
xchg
insb
add
cmc
lcall
mov
outsb
shll
dec
xor
jge
pop
into
adcl
in
push
jno
push
sbb
int3
clc
and
dec
popf
xchg
fs
cmp
inc
sbb
in
push
dec
adc
imul
test
orb
movsl
mov
lret
sbb
outsl
dec
pop
sbb
adc
rep
mov
out
dec
and
dec
jno
pop
or
sub
inc
pop
fmull
orb
pop
iret
mov
pushf
popa
insl
das
in
xor
rorl
outsb
mov
fsubr
jne
push
je
sbb
jns
xchg
sti
xchg
daa
insl
ja
das
shr
jge
mov
out
mov
enter
lcall
jns
add
sbb
hlt
cmc
xchg
inc
mov
xchg
cmp
xor
out
push
and
push
dec
pop
sbb
add
movsb
pop
mov
or
jmp
fildl
pop
add
fiadds
fbstp
imul
arpl
xor
sbb
mull
rcrb
mov
mov
int3
or
jne
push
add
mov
pop
xchg
test
aaa
sbb
and
sub
dec
ja
add
arpl
cwtl
js
cmpsb
mov
xor
fnstsw
jo
into
pusha
push
insl
mov
add
int3
das
ret
lahf
adc
mov
jbe
mov
stc
sub
into
iret
add
pop
sbb
mov
add
fidivrs
fwait
jg
clc
mov
or
dec
mov
cmpsl
cmpsb
mov
mov
js
sub
clc
pop
fs
sahf
in
stc
and
jae
out
pop
popa
jmp
movsl
sbbb
cmp
pop
jae
stos
pop
test
inc
inc
mov
mov
jle
inc
mov
addl
inc
xchg
mov
std
pop
ret
repnz
lods
stos
movb
fisubl
pushl
enter
xchg
jecxz
dec
xor
jno
push
out
sbb
insb
mov
cmpsb
std
cli
jno
dec
inc
sub
xchg
push
lea
mov
inc
mov
stos
bound
push
sub
cmp
lea
or
lock
jecxz
cltd
int3
lret
jbe
psraw
shll
es
cmp
icebp
sbb
mov
cmc
nop
fwait
mov
cmpl
inc
and
clc
mov
loopne
jmp
cmp
push
jp
das
pushf
stos
or
pop
add
outsl
mov
push
cmc
jo
shlb
stos
cmpsl
aaa
mov
sbb
scas
js
je
pop
jae
ja
pop
testb
pop
and
xchg
iret
test
iret
cmpb
bound
pop
xchg
sbb
pusha
loop
or
inc
pop
lock
sbb
lret
frstor
cmpsl
jg
pop
pop
and
xor
sbb
and
push
leave
inc
xchg
jge
pop
jp
jo
fs
repz
jns
ljmp
rclb
std
inc
fwait
dec
adc
mov
mov
lds
imulb
xor
adc
sbb
mov
inc
stos
jp
xchg
mov
push
push
ljmp
push
mov
jge
stos
cld
data16
push
pop
loope
cmp
push
cli
outsb
mov
mov
add
repz
jecxz
xchg
subl
std
mov
inc
adc
inc
inc
push
jmp
mov
mov
jae
push
adc
in
cmp
mov
insb
jbe
sub
and
das
movsb
mov
test
push
loop
test
adc
out
xor
neg
xor
movsl
jb
xchg
fcmovne
push
jl
repz
addr16
mov
xor
sub
adc
fnstcw
aas
sub
mov
into
jl
cmp
cmpsb
test
in
loope
push
in
cli
imul
dec
iret
cmc
jae
sub
cltd
sub
aas
test
cmc
rcr
xor
xor
add
mov
in
mov
mov
mov
pop
push
mov
xor
jae
push
into
faddl
or
cld
fcmove
add
add
popf
and
fbstp
idiv
es
ret
cmpsl
jge
sub
sub
sub
insl
cmp
es
or
int
inc
mov
xchg
jmp
int
fstpt
orl
mov
mov
sub
addr16
pop
pop
mulb
fcomi
mov
adc
push
sti
sub
push
cmpsb
dec
test
xchg
mov
pop
adc
push
cmp
push
das
push
lcall
jo
sbb
add
arpl
ud0
mov
mull
sbb
jno
cmp
sub
xchg
xor
sbb
inc
inc
dec
or
pop
test
jns
sub
dec
hlt
push
push
in
shrb
fsubl
lea
adc
pop
pop
push
mov
cltd
mov
inc
test
sub
inc
in
xor
out
and
aad
in
clc
xor
xor
adc
shl
out
std
or
inc
test
pop
xchg
repnz
sahf
add
jae
lods
ret
mov
xchg
loope
scas
jns
mov
imul
daa
pop
int3
call
dec
push
aam
cmp
mov
pop
fwait
inc
rclb
adc
sub
add
filds
xor
stos
sbb
out
dec
push
push
xor
sub
mov
xor
js
dec
stc
out
and
insb
out
ljmp
push
pop
roll
stc
jnp
cmc
cs
lods
sub
inc
pop
mov
xor
sbb
and
rep
push
or
inc
mov
fistps
ljmp
lret
fstpt
mov
mov
xchg
xlat
xorl
sbb
inc
pop
cmp
bound
out
jbe
and
addr16
push
call
shr
shlb
xorl
mov
insl
mov
pop
ficoml
xchg
dec
out
sarl
add
cld
stc
lods
jle
std
or
xchg
dec
out
int
and
sub
sub
or
ret
jecxz
icebp
jmp
dec
xor
xor
out
cmp
mov
inc
sarb
inc
les
pop
push
inc
or
add
add
inc
push
repz
dec
les
push
testl
fisubs
jbe
cmp
int3
lock
adc
stos
dec
push
cmpsl
loope
push
jmp
push
lds
sub
sbb
stos
fsubs
in
jnp
or
pushf
mov
lret
sbb
int3
cmp
push
pop
mov
les
adc
adc
pushf
aad
inc
movsl
mov
pop
inc
outsl
into
push
jge
mov
leave
jmp
stos
sbb
pop
push
insl
loop
ja
push
jnp
and
xchg
mov
mov
and
cs
adc
insb
xchg
xchg
andb
outsl
test
pop
and
inc
lods
or
hlt
into
cmp
mov
sub
rcrl
sahf
xor
ja
lods
sbb
jge
in
pushf
out
lods
jge
loopne
push
mov
xchg
flds
xchg
push
mov
jge
push
imul
aaa
push
sub
mov
cmp
lret
test
mov
push
cmp
loope
cmpsl
cmc
scas
mov
enter
mov
ret
dec
cmpsl
xchg
add
pop
scas
push
mov
mov
jb
out
push
dec
nop
xcrypt-cbc
cmpsl
shl
cmp
inc
lods
std
sbb
mov
das
lret
movsb
dec
outsb
stos
adc
inc
test
roll
mov
mulb
dec
jp
cmc
insb
inc
sahf
jmp
lcall
mov
repz
and
adc
lahf
arpl
stos
pop
adc
lods
mov
insb
ja
les
shr
push
mov
es
xchg
mov
ljmp
mov
and
pop
sub
jmp
and
mov
or
imul
lods
mov
or
cmc
push
stc
xchg
fists
out
mov
adc
inc
jp
lahf
sub
push
inc
icebp
mov
add
push
and
jecxz
jo
adc
out
adc
pop
jae
call
cld
ret
add
pop
push
inc
inc
push
sahf
adc
out
call
xor
movsl
jl
sub
jne
xchg
add
loop,pn
mov
sub
sbb
test
dec
ja
loope,pn
jno
bound
xor
lret
shlb
jne
jmp
jbe
inc
dec
mov
dec
sub
or
out
pusha
push
shll
shrl
popa
mov
jnp
mov
inc
daa
mov
push
into
mov
test
push
inc
and
cmp
mull
aam
cmp
mov
push
aas
cmp
ljmp
insb
sti
pop
cs
push
stos
stc
mov
aam
mov
adc
stc
jg
cmp
or
mov
push
cwtl
loopne
xchg
imul
ret
pop
bound
adc
inc
movsl
jp
pop
in
mov
push
sub
cli
jge
mov
pop
out
loope
and
fwait
inc
pop
push
xchg
mov
pop
pop
leave
int3
addr16
hlt
and
add
inc
lods
mov
nop
dec
out
or
sub
arpl
push
pushf
enter
sahf
pop
add
scas
mov
out
jge
and
push
sti
or
mov
cs
xor
sbb
jbe
xor
mov
add
mov
cmp
adc
add
add
push
mov
lods
xchg
inc
shll
imul
adc
cmpsb
stos
mov
push
dec
adc
pop
mov
testb
xchg
cld
dec
popa
and
adc
mov
insb
inc
xchg
into
mov
ja
int
xor
icebp
and
or
loopne
mov
sub
push
in
rorw
or
inc
arpl
adc
out
or
clc
xchg
mov
fxch
mov
sbb
jmp
sbb
adc
xor
lcall
ret
int
fisubrs
inc
loope
cmp
shrb
push
mov
and
in
inc
mov
cmpsl
mov
filds
iret
int
outsl
lret
jnp
fiadds
aaa
aaa
fsts
mov
cmp
sub
stos
pop
jnp
mov
pop
pop
lahf
setae
hlt
cmpsl
mov
rolb
dec
jb
jmp
adc
out
xlat
jno
daa
cmpsl
dec
dec
inc
adc
adcl
pop
xchg
in
push
inc
push
stc
lds
rorb
xchg
ja
push
sbb
push
stc
aas
addr16
dec
sub
pop
sub
rcrb
cmp
pop
stos
push
inc
addr16
jle
cld
bound
xchg
xchg
lods
push
mov
mov
call
ja
mov
and
call
mov
add
bound
fldt
dec
mulb
sarb
dec
pop
pop
xor
adcb
lea
sahf
fsubl
aas
jl
pop
adc
inc
fdivrs
xchg
fisubrs
dec
addr16
xchg
xchg
cld
cwtl
jb
aad
push
popa
rcrl
mov
cmp
pop
aaa
sahf
adc
daa
mov
add
sti
mov
out
push
pop
or
mov
pop
ficoml
mov
push
rol
lahf
mov
mov
add
ret
mov
push
mov
mov
push
jmp
imul
push
ljmp
fsubl
das
sti
cmp
push
inc
insl
dec
pushl
mov
int
and
jge
jg
lods
cmpsb
cmpsl
push
lret
sub
das
imul
loopne
icebp
mov
stc
inc
mov
sbb
imull
lcall
pushf
out
flds
iret
mov
xchg
dec
mov
cli
insb
xchg
ds
addr16
jmp
push
std
adc
scas
jle
dec
mov
push
add
nop
into
shlb
ss
jg
mov
daa
mov
inc
pop
cld
fimuls
bound
lahf
hlt
pop
cmpsl
add
add
add
daa
cltd
sbb
sub
cltd
adc
jl
or
fbstp
jns
imul
sarl
fimuls
pause
push
xchg
sub
in
insb
sbb
js
pop
and
jne
sub
stc
imul
or
fidivrs
mov
fs
pop
ja
mov
pop
sub
push
mov
adc
add
clc
pusha
mov
lock
jmp
scas
add
sbb
push
sub
pushf
std
jnp
ja
inc
or
les
ja
push
pop
add
mov
sti
incl
and
xchg
xor
inc
pop
cmp
push
or
jno
aas
and
nop
test
out
push
stc
pop
fistpl
imul
iret
push
outsb
xchg
lods
dec
sub
sub
push
pop
and
push
ret
xor
xchg
adc
fadds
and
cld
or
mov
ret
cmpsl
fildl
sub
bound
call
mov
into
cwtl
loop,pt
idivl
mov
inc
inc
jbe
mov
sub
jge
subl
pop
sbb
or
sbbl
insl
mov
in
mov
ds
cwtl
jp
jmp
movl
popa
outsl
shll
dec
add
and
loope
pushf
pop
les
xlat
gs
add
outsl
jp
fstpl
icebp
stc
xor
aaa
fwait
aaa
hlt
xchg
xchg
cmpsl
dec
testb
mov
push
and
push
sub
xchg
dec
jmp
sbb
out
jb
sub
jl
add
rcr
dec
mov
mov
fimuls
sbb
or
mov
arpl
mov
lret
fisttps
lods
psrlq
shl
sbb
cmpsb
ds
mov
add
lods
push
shlb
pop
ret
ljmp
dec
xchg
inc
enter
or
out
inc
add
mov
ficompl
negl
pop
fwait
es
popf
cwtl
loopne
mov
cmp
mov
jno
jb
mov
cmpsl
mov
scas
pop
sbb
mov
xor
push
dec
mov
cmp
fsubl
xchg
fistpll
mov
dec
aad
add
test
or
jp
ljmp
cwtl
aam
add
pop
data16
sti
shll
fidivl
lods
mov
cmpsb
mov
cmp
enter
mov
pop
lcall
mov
mov
lods
lret
aaa
lcall
pop
or
arpl
pop
mov
aaa
shrl
cmp
push
cmp
cltd
stos
sbb
jbe
test
shrl
add
mov
icebp
pop
dec
scas
xchg
dec
shll
mov
push
mov
dec
push
add
push
or
in
jbe
inc
mov
push
xchg
pop
rolb
add
pop
mov
xchg
xchg
mov
mov
push
rcll
mov
inc
or
test
ss
pop
mov
cmp
in
jns
loop
mov
dec
add
stos
dec
add
sbb
xchg
cmp
xor
lea
mov
jno
xchg
pop
cli
jp
lods
lock
add
add
out
ret
movsb
ficoml
aam
pop
mov
xchg
test
xchg
stos
jb
mov
push
fldcw
and
push
jnp
repz
jns
jbe
jns
fwait
icebp
jp
lcall
data16
xchg
sbb
jecxz
out
sub
xchg
mov
iret
pushf
pop
mov
push
xor
xor
add
enter
push
fiaddl
ja
loopne
ljmp
adc
xchg
in
inc
fcompl
mov
pop
pop
out
mov
pusha
icebp
sahf
cmp
or
repz
sbb
jne
mov
cmp
jg
xchg
push
icebp
push
jmp
hlt
xor
dec
mov
jnp
cmp
subl
and
and
push
push
jp
lcall
hlt
test
and
repnz
xor
mov
push
mov
mov
xor
popf
pop
int
xchg
adc
pop
insl
dec
pop
mov
mov
iret
idivb
in
cld
xor
lcall
add
mov
cmp
cmpsl
rorl
jmp
jbe
add
pusha
xor
out
cltd
lds
call
sbb
nop
jge
js
adc
mov
ficompl
subl
ds
sbb
xchg
mov
sbb
lds
ja
or
pop
pop
sub
jae
cwtl
mov
int3
inc
shrb
ja
pop
loop
push
repz
xor
jnp
cltd
pop
mov
cmp
mov
sbb
dec
mov
clc
aas
sarb
xor
mov
inc
xlat
mov
add
sub
lds
push
sub
xchg
push
popf
fisttps
fmulp
imul
add
stc
pop
repz
xchg
push
mov
decb
notb
imul
rorb
cwtl
push
nop
sbb
decb
int
in
dec
push
or
adc
loop
in
lcall
cltd
adc
mov
push
or
sub
xor
fstps
pop
insb
xor
mov
xchg
or
inc
pusha
fs
jbe
add
dec
movsl
add
mov
imul
lahf
outsb
lret
lods
jle
in
sub
shrb
subl
mov
fwait
xor
stos
mov
in
or
or
mov
je
rcr
and
decb
fisubrs
xor
jnp
and
mov
cmp
bound
imul
testb
in
fstpl
in
lcall
in
push
test
add
js
mov
ret
jbe
ds
fucomi
xor
enter
mov
adc
fs
pop
sbb
cmpl
in
lahf
shrl
dec
lahf
cwtl
es
jns
or
enter
nop
daa
pop
or
mov
mov
mov
inc
xor
mov
pushf
ret
loope
jmp
int
inc
into
push
sub
jb
pop
mov
das
aas
mov
inc
fadds
addr16
adc
pop
jp
inc
and
mov
xor
lods
pop
test
dec
int
adc
in
xchg
adc
cmp
mov
loopne
js
cmp
push
add
adcl
push
sub
mov
subl
xor
pop
mov
dec
mov
filds
lods
sahf
iret
xor
and
sbb
mov
jb
in
add
pop
cmp
mov
ja
outsl
mov
xchg
jo
jge
enter
push
and
inc
inc
in
daa
ss
adc
mov
xchg
repnz
mov
scas
les
cmpsb
mov
subb
dec
adc
movsb
xchg
testl
adc
andl
add
add
shl
scas
push
arpl
stos
pusha
fsubrs
inc
in
mov
xchg
mov
clc
pop
popa
ret
fs
jl
mov
push
cmp
add
outsl
arpl
xchg
repnz
test
pop
fs
addr16
sbb
xchg
enter
fwait
and
idivl
inc
inc
xchg
aam
mov
mov
es
sbb
jo
xchg
jecxz
fnstcw
dec
push
add
lret
loop
sbb
push
xchg
lahf
push
ljmp
jge
inc
jbe
test
cmp
imul
out
ljmp
daa
xor
pop
cs
and
jae
insb
out
jmp
scas
mov
or
add
loope
or
cld
fs
in
arpl
jne
sti
ds
mov
inc
xor
dec
shll
ljmp
pop
xchg
call
xor
pop
enter
cli
test
mov
ficomps
jo
sbb
ret
xor
push
lods
add
sub
xor
bound
addr16
sub
mov
adc
leave
add
adc
negb
movsl
xchg
fsubl
or
add
xchg
js
ljmp
arpl
mov
cmp
mov
cmc
or
push
js
or
jbe
imull
or
aaa
cmp
popf
out
addr16
lds
fistl
lods
xor
aas
int3
arpl
faddp
cmpsb
arpl
or
cwtl
xchg
es
xor
es
or
lret
shll
pop
in
or
xlat
arpl
mov
mov
cli
jle
push
cmpsl
mov
in
mov
iret
adc
dec
and
mov
sbb
dec
hlt
cwtl
mov
imul
mov
sub
std
and
dec
adc
mov
fidivl
xchg
loop
flds
inc
cli
and
xchg
or
jp
cmp
ja
scas
sub
mov
mov
jnp
pusha
imul
nop
cmp
in
cwtl
pop
adc
test
dec
ds
aad
iret
mov
mov
sbb
adc
stos
cmp
adc
fwait
int3
imulb
fisttpl
fildll
mov
mov
in
stos
xor
cmp
inc
in
sub
lret
mov
cmpl
pop
int
pop
mov
cmpsb
imulb
jb
aas
jno
cltd
push
test
xlat
or
jge
fcompl
xor
shlb
dec
adc
inc
in
xchg
ja
and
push
das
xchg
mov
psubusb
jns
sbbb
jb
dec
bound
gs
jl
xor
subl
jmp
adc
loope
loop
xor
cmp
arpl
push
xor
daa
mov
popf
movsl
mov
test
add
lods
enter
add
and
pop
xor
jmp
in
popf
add
int3
push
lea
mov
scas
lea
push
cmp
iret
mov
aas
out
and
mov
call
cmpsb
lahf
xor
mov
popf
cmp
out
inc
outsb
adc
dec
andb
and
jne
xlat
jae
pop
sbb
imul
je
pop
push
out
mov
rorb
repnz
add
push
xchg
mov
scas
xor
mov
sub
pop
jmp
sbb
mov
mov
mov
stos
lsl
sbb
sub
imul
popa
mov
xor
push
push
in
mov
sbb
mov
sub
xorb
push
cli
cmc
jns
dec
or
adcl
ljmp
or
push
inc
shlb
je
outsl
loop
cltd
cmp
xchg
mov
sub
lcall
lahf
imul
lods
repz
xlat
in
lcall
mov
lcall
dec
inc
mov
out
rcr
lock
sti
xchg
mov
adc
lods
mov
cwtl
cld
data16
mov
or
out
aas
dec
test
dec
leave
cmp
lods
lahf
in
out
inc
sub
or
jp
imul
mov
cmp
pop
rorb
jmp
nop
pop
pop
inc
sbb
mov
and
ret
aas
seta
mov
jae
insl
ret
or
in
mov
push
pop
mov
mov
mov
mov
push
cmpsl
xor
cmpsl
pop
icebp
fwait
xor
insl
xlat
sub
xchg
dec
js
incb
fisubrs
push
lret
inc
test
cmp
int
sarl
or
mov
test
sub
outsl
incl
fdivrl
jp
shrb
nop
mov
outsb
cmp
les
fldl
lcall
and
int
mov
aad
cwtl
lret
xor
push
nop
in
je
pop
jno
mov
xor
xchg
jle,pn
inc
adc
add
push
testb
jl
and
xchg
fcompl
enter
pop
mov
adc
clc
imull
fisttps
mov
ss
into
or
cmpsl
push
push
pop
mov
leave
add
int
aas
iret
xchg
pop
lahf
dec
std
shl
mov
fisubrl
inc
insl
js,pn
adc
mov
movsl
sub
push
stc
adc
mov
mov
lods
cmp
pop
leave
ljmp
pushf
jmp
into
cmp
lahf
mov
adc
nop
arpl
jmp
pop
add
stc
sub
test
mov
cmp
cli
lods
ret
les
sub
inc
mov
loopne
daa
incb
sub
outsl
aas
fdivrp
cld
aad
cli
xor
inc
sahf
scas
dec
scas
rcl
hlt
lcall
imul
les
add
fimuls
addl
push
cltd
push
bt
push
adc
adc
dec
cli
lock
sti
notl
dec
insl
dec
fs
mov
sub
mov
shl
xor
clc
pop
call
jg
mov
in
loop
pop
jno
inc
or
jnp
xchg
test
mov
lods
or
or
in
sub
sbb
mov
mov
push
outsl
mov
int3
out
fisubl
mov
movsb
ljmp
mov
data16
and
push
mov
inc
fnstcw
inc
xorb
mov
gs
sbb
pop
pop
hlt
and
lock
xor
loope
jbe
dec
dec
mov
inc
aam
scas
jne
mov
ja
cmp
insb
repnz
dec
lret
enter
xor
sti
push
xor
xchg
lret
andl
sub
cmp
cmp
adc
mov
pop
mov
icebp
dec
pop
cmp
pushf
lock
arpl
stc
jp
inc
xor
mov
fsubs
and
outsl
in
jo
cmp
aad
mov
push
notb
sub
pop
mov
shl
inc
dec
int
mov
xchg
inc
test
cmpsb
and
jno
nop
imul
xor
movnti
xor
fcomps
add
aas
repnz
subb
jnp
mov
sub
fcomi
rorl
mov
fbstp
jne
mov
mov
or
out
fwait
inc
xchg
fists
or
add
xchg
jne
lock
das
fistl
cltd
mov
imull
jecxz
inc
arpl
in
inc
scas
popf
xorl
inc
dec
adc
mov
and
mov
mov
add
scas
mov
lahf
xor
xchg
outsl
mov
jg
or
std
test
or
mov
js
popl
xchg
fisttpll
jmp
test
and
xor
add
lret
and
add
jnp
inc
push
xor
aaa
or
enter
mov
push
pusha
pop
jg
sahf
mov
mov
xchg
xor
setne
es
lcall
xchg
cmc
push
mov
jl
sbb
jmp
mov
xor
sub
mov
fimuls
repnz
add
xchg
cmc
or
jae
pop
in
cmpsb
push
cmp
pop
add
jg
pop
or
mov
lods
inc
adc
mov
push
ja
aad
sbb
mov
cld
cmpsb
fistps
fdivl
xor
cmp
mov
hlt
or
jle
fisttpl
push
addr16
int3
push
push
test
sahf
popa
loopne
mov
mov
aad
add
cmp
lret
aam
dec
xlat
or
ret
int3
lcall
sbb
shlb
aas
loope
jne
sbb
jb
dec
and
adc
loop
adc
arpl
scas
cmp
push
inc
insb
fiaddl
pop
xor
scas
int
cltd
inc
popa
sbb
scas
pop
loop
sbb
xchg
aas
sbbl
popa
rcrl
sub
fwait
scas
push
mov
loopne
pop
jle
int
test
stc
and
nop
mov
mov
rcl
xchg
pop
mov
jo
add
daa
fwait
cs
jns
mov
loope
pusha
in
outsb
jmp
loop
and
fcompl
pop
int3
xor
push
mov
aas
and
cmp
iret
test
dec
fstpt
lds
shrb
sti
icebp
aas
test
int
adc
lods
xchg
mov
cld
mov
rorb
pop
pminub
in
lea
sarl
xor
mov
mov
jo
xchg
inc
data16
adc
mov
mov
cmp
mov
and
dec
scas
movsb
into
ss
icebp
out
lahf
shlb
outsl
push
sbb
mov
dec
in
push
mov
sbb
adc
or
xchg
mov
cmc
xlat
sarb
out
sbbb
adc
ret
add
out
stc
pop
jecxz
jae
mov
inc
cmpsb
es
inc
xchg
cmpsb
test
fcoml
lods
les
repz
jo
fucom
mov
bound
pop
sbb
pop
xor
call
pop
movsl
inc
xchg
adc
loopne
mov
sub
or
xchg
and
pop
pop
mov
pop
dec
push
xchg
loopne
loop
rcrb
inc
stc
add
xchg
test
inc
ljmp
int3
imul
mov
xor
cmpsl
stos
lock
mov
inc
sub
shr
mov
shr
popa
sbb
push
scas
shll
jbe
mov
es
in
mov
pop
xor
mov
jns
loopne
inc
shr
fcomp
mov
xor
jno
lods
jno
jecxz
cmp
lret
int3
shll
add
cmp
pop
fcom
pop
and
pop
shlb
mov
loop
xlat
notl
in
dec
pop
inc
inc
dec
mov
mov
xorl
lea
xor
fmul
scas
mov
rorb
inc
add
push
xchg
mov
xchg
mov
pop
mov
push
cmp
ds
pop
sub
sti
test
arpl
test
dec
add
aaa
xchg
and
xchg
leave
cwtl
mov
outsb
inc
les
xlat
call
push
mull
cmc
rcr
in
lods
aas
sahf
sbbb
add
or
popa
out
imul
mov
or
rol
xor
sbb
jle
pop
xchg
adcb
test
andb
stc
ret
mov
mov
cmp
xchg
fists
add
js
out
push
repz
outsb
sbb
test
push
adc
movsl
push
lock
mov
ss
adc
adc
cmpsb
hlt
cwtl
add
aas
ret
jo
mov
fucomp
add
or
xchg
inc
shlb
inc
mov
sub
out
sbb
mov
andl
pop
sahf
test
je
inc
push
or
mov
hlt
add
inc
sub
pusha
or
cmpsl
mov
mov
cmp
js
sbb
xlat
or
mov
jb
xchg
cmp
sbb
mov
aam
sub
pop
movsb
lret
fs
imul
shrl
xorl
popf
cwtl
jg
push
sti
cli
cmp
inc
aaa
aas
rclb
lods
pop
or
jns
scas
jbe
cs
cmp
das
pop
and
mov
or
mov
icebp
icebp
loope
std
into
rorb
clc
or
jle
icebp
pop
insl
mov
add
out
inc
xchg
hlt
mov
shl
stos
lea
push
sub
es
xor
ficompl
mov
mov
sub
pushf
popa
or
sub
xor
mov
sub
loopne
lea
and
and
mov
jmp
fwait
pushf
xchg
fldcw
fstps
adc
clc
mov
in
jecxz
shl
inc
bound
cmpsl
sbb
inc
subb
jae
pop
pop
jns
jg
test
mov
adc
push
in
repnz
push
stc
pop
mov
out
shrl
add
sub
sub
pop
leave
imul
arpl
aas
int
das
test
test
inc
das
adc
fs
fsubrs
rorb
inc
add
jns
repz
out
mov
add
sbb
sbb
add
shll
push
ret
push
popl
icebp
sbb
and
push
sub
xchg
mov
nop
sti
sti
scas
add
imul
ret
movb
mov
pop
jmp
add
bound
xor
push
cmp
daa
insb
int3
lret
test
aaa
mov
out
ret
fidivs
scas
or
stc
shrb
push
nop
stc
fnstsw
test
push
sub
test
ret
lahf
dec
cmpsb
inc
xor
sbb
jno
push
mov
lret
aam
xchg
insl
dec
sub
sub
subb
xorps
inc
dec
out
sbb
rorb
push
in
arpl
mov
fistpll
div
adc
xchg
xchg
or
lahf
popa
sbb
cmpsb
adc
xchg
and
pop
cltd
js
xor
pop
xor
ss
sbb
dec
filds
adc
outsl
dec
mov
mov
push
jno
add
push
adc
pop
lock
test
mov
lahf
fcmovnu
push
pop
mov
dec
mov
shr
gs
mov
add
dec
int
xchg
insl
cmp
shr
or
fldenv
in
leave
fcompl
int3
mov
push
aaa
pop
jge
pop
or
fsubs
rclb
loop
call
push
or
xchg
es
push
shll
iret
adc
jl
divl
mov
push
push
ja
ja
fisttps
pop
adc
adc
mov
jbe
outsl
ret
mov
lahf
aam
cmp
sti
in
ret
adc
jbe
cltd
or
test
xchg
dec
imul
mov
repz
leave
insl
mov
xorl
nop
pop
arpl
enter
xchg
js
lret
jmp
adc
adc
leave
les
push
addl
xor
mov
pop
inc
mov
pop
mov
out
adc
mov
xchg
sahf
out
inc
mov
push
mov
repnz
and
add
mov
in
icebp
lret
fsts
lret
dec
sub
push
jae
lods
aas
dec
test
push
loope
push
push
dec
fcompl
lds
dec
xchg
jmp
adc
out
js
in
repnz
inc
jae
leave
iret
das
inc
ds
push
addb
sahf
dec
dec
scas
lods
out
lods
xor
cmp
in
and
mov
cli
das
ss
sub
dec
sub
and
insb
shl
stc
int3
mov
fstpt
add
rcrb
mov
aaa
shll
and
fisubs
das
icebp
jg
mov
or
orl
mulb
sub
mov
ljmp
inc
sbb
fsubl
arpl
fadd
shll
or
andl
or
adc
xor
aad
int3
pop
cwtl
nop
sub
push
nop
inc
adc
xchg
aas
dec
adc
rcll
mov
icebp
inc
adc
jne
mov
push
in
push
dec
int
jae
fwait
dec
mov
filds
lret
lahf
mov
dec
adc
jp
out
fisttpl
imul
cmp
mov
xchg
lock
fs
sbb
fs
mov
leave
inc
int
mov
sub
xchg
push
adc
mov
test
rclb
push
inc
lahf
bound
jge
jecxz
xor
xchg
std
push
jbe
mov
jp
loop
adc
imul
or
pop
lcall
inc
mov
lods
cli
shl
lods
push
cld
ljmp
fsqrt
dec
adc
cmpsl
and
push
jne
inc
sub
sub
pusha
push
inc
inc
jns
dec
sbb
sbb
jg
mov
add
ficomps
rcrl
cltd
inc
insl
cmp
lock
dec
cmp
pop
xchg
jnp
and
faddl
fstl
mov
enter
mov
fisttps
xchg
dec
test
lods
xchg
call
fs
pop
icebp
mov
mov
jg
es
xchg
xor
mov
mov
mov
jle
push
add
pop
loop
insl
mov
mov
orb
or
daa
imul
test
addb
xchg
stc
jbe
dec
hlt
mov
jae
adc
loopne
lods
movsl
sarl
mov
dec
dec
mov
push
sbb
ror
jns
mov
adc
mov
in
arpl
mov
mov
jmp
xchg
adc
ja
pop
jmp
pop
test
je
ret
fldt
sahf
mov
lock
outsl
pop
and
ror
cmp
sbb
mov
jno
sbb
sarb
or
lahf
xor
mov
mov
test
sub
mov
mov
or
pusha
cmp
cmc
inc
call
mov
xchg
xchg
mov
arpl
dec
test
push
mov
bound
mov
mov
dec
mov
sbb
or
pop
fildl
push
leave
movsb
push
pop
jge
mov
insl
push
push
jp
imull
sarb
dec
sub
jmp
cwtl
fwait
inc
adc
add
mov
xlat
repz
lahf
cmp
mov
xor
mov
ja
mov
xor
adcb
shlb
or
pop
fs
pop
or
in
fcoms
stc
mov
das
dec
adc
aam
clc
add
xchg
pop
jge
xchg
jle
mov
lret
negl
jne
mov
addr16
incl
cmp
cmpsb
dec
das
xor
push
push
pop
lret
push
jp
push
nop
movl
mov
mov
vmovd
pop
add
iret
je
or
jmp
popl
sbb
lcall
pushf
testb
ss
cmp
mov
sbb
and
push
fildll
lock
nop
xchg
and
dec
push
xchg
jecxz
cmc
movsl
pushf
iret
lea
xchg
ficomps
insl
test
mov
push
aaa
int3
aam
imul
add
cmp
aas
cmp
dec
andb
arpl
mov
sbb
aam
out
and
loop
mov
das
cmp
call
pop
sbb
and
mov
ss
rcrl
inc
pop
scas
es
mov
mov
xor
cmp
icebp
leave
cmp
mov
mov
in
pushf
rcrl
rcrl
or
repnz
hlt
pushf
add
sbb
sbb
sbb
jnp
mov
push
and
push
mov
lds
pop
imul
test
in
hlt
dec
in
cmpsl
addr16
sub
xor
sub
jnp
push
xchg
das
imul
pop
pop
sbb
jns
sbb
jb
cmpb
cmc
mov
sub
imul
mov
sbb
sbb
icebp
xor
aam
mov
cmc
xor
xchg
jl
out
push
inc
and
int3
daa
push
sahf
add
arpl
fs
sub
sbb
cltd
addr16
repnz
mov
orb
insl
sarl
mov
or
push
jb
ret
jge
rolb
in
push
push
rcll
adc
sbb
or
pop
xor
iret
pop
lret
push
push
insb
and
jne
adc
mov
out
dec
loop
add
add
data16
adcl
arpl
jne
pop
in
pop
cltd
lods
shl
out
or
cmp
add
fcoms
fincstp
fisubs
pop
mov
mov
pushf
lods
loopne
sub
test
loop
push
test
adc
insb
stos
dec
mov
and
adc
fdiv
adc
push
aad
xor
or
push
ror
fdiv
and
popa
ds
sahf
cmp
pop
fs
call
or
divl
jbe
fs
movsl
and
sub
hlt
das
lret
fdivrl
jle
mov
dec
rcl
fdivrs
mov
or
dec
sbb
stc
pushl
xchg
and
popf
imul
push
ret
mov
in
ret
cltd
dec
mov
loop
jb
mov
mov
sbb
repnz
mov
xchg
sub
pop
dec
xor
movsl
mov
mov
fsubs
xchg
insb
jne
icebp
xor
pop
sbb
repnz
push
sub
insl
mov
lret
rcr
scas
cltd
pop
int
pop
push
scas
fsqrt
mov
pop
in
cmp
notl
pop
test
mov
test
pop
xchg
mov
out
ljmp
in
subl
inc
shll
insl
lahf
mov
ja
loopne
and
mov
cli
stc
scas
or
repz
cmp
mov
mov
movsl
mov
stos
xchg
mov
inc
fisttpl
aas
int3
and
flds
adc
jno
adc
cmc
fsubr
dec
dec
rol
dec
addr16
push
arpl
in
push
imul
xor
inc
lret
js
out
repnz
icebp
sub
cmp
aaa
pop
aaa
adc
xor
adc
xchg
popa
rolb
inc
xor
cmpsb
mov
xchg
inc
and
outsl
cli
pop
xchg
pop
out
rcl
loope
cltd
les
add
or
sub
cmp
xor
lds
fiadds
cs
jbe
pop
jnp
inc
insb
mov
sbb
inc
jmp
mov
xadd
sbb
stc
mov
mov
mov
lahf
xor
mov
out
inc
in
aad
rcrl
fld
cmpsl
sbb
cwtl
mov
shlb
adc
cmp
push
nop
push
add
or
adcl
pop
stc
xchg
inc
in
push
aas
cmp
pop
push
or
mov
into
inc
pusha
fldl
mov
jmp
inc
push
inc
mov
fsubrs
out
movsb
lods
jmp
cmp
imul
push
sarl
add
sub
outsl
lret
cmpsb
dec
lret
in
arpl
cmpsl
sbb
jo
inc
sbb
lea
pop
lds
pop
in
push
out
push
xor
add
insl
lods
sbb
add
xchg
out
jne
sub
sbb
pushf
imul
cmp
pop
sub
jno
sub
dec
int
insl
leave
outsb
inc
cmp
lods
js
int3
sbb
lcall
xchg
cltd
push
movsb
inc
inc
sahf
sub
push
mov
loop
jmp
xor
in
repnz
or
jl,pn
mov
push
pop
enter
sub
incl
leave
cld
stc
mov
sti
in
mov
dec
dec
fs
test
sbb
xor
pop
inc
popa
ficompl
in
push
inc
sti
cltd
leave
and
or
inc
ret
enter
popf
adc
push
or
gs
pushf
and
jge
xchg
push
mov
neg
loope
jl
mov
test
xchg
pop
mov
cmp
push
popa
test
call
mov
jb
sbb
into
mov
push
mov
std
or
xor
inc
fstpl
loopne
imul
jb
mov
rorb
pusha
jbe
jno
sub
fcoml
mov
test
cmpsb
push
ror
int3
xchg
int3
inc
lods
fistpll
jecxz
loope
cld
mov
dec
push
jbe
mov
dec
sub
cmp
mov
inc
push
movsb
cs
test
test
rcl
xor
out
add
cmc
push
mov
inc
sub
pop
lcall
sets
and
inc
adc
lahf
fcoml
jnp
inc
xchg
sub
leave
jmp
xor
lahf
jge
xchg
fdivr
std
jne
in
lret
ret
lahf
vpcomuw
nop
ss
int3
mov
xorb
test
lea
mov
xchg
std
lods
sbb
cmp
test
or
mov
jnp
inc
in
inc
xor
into
mov
imul
lahf
xchg
test
outsl
inc
movsl
cmp
xchg
dec
jo
out
das
jno
pushf
imul
pop
inc
aad
fcmove
out
mov
inc
aaa
mov
sub
cmp
xor
popa
add
mov
je
inc
jne
add
inc
div
ds
mov
roll
dec
into
out
cmpsl
cmpsl
jmp
shlb
adc
orb
mov
pop
adc
dec
frndint
insb
jp
push
rcrb
mov
test
lods
pop
adc
jg
iret
mov
push
push
push
hlt
loope
loopne
faddl
imul
ds
hlt
jae
fldl
dec
rolb
push
ds
pop
push
nop
lcallw
jge
xor
fs
scas
jge
xlat
add
inc
iret
fs
movsl
insl
bnd
push
dec
push
daa
add
loope
adc
lds
lcall
ljmp
pop
mov
cmp
scas
adcl
das
pop
sub
jmp
cld
out
mov
call
in
rcr
in
out
in
scas
mov
repnz
shlb
pushf
xchg
adc
and
in
lea
stos
std
adc
push
outsl
adc
adc
jo
xor
add
mov
add
out
insb
mov
scas
iret
movl
mov
xor
or
sub
in
sub
in
cmp
stos
cmc
clc
jp
aam
mov
push
pop
movsl
insl
insl
out
es
push
repz
xchg
data16
push
push
orl
push
jle
fstp
popf
jmp
or
xchg
add
adc
add
out
push
jns
jbe
imul
into
push
out
sbb
ret
out
pop
push
int3
mov
push
xchg
jne
imull
mov
stc
mov
mov
pushl
xor
push
scas
jecxz
cmp
pop
pop
mov
or
cmc
push
mov
in
xchg
or
lods
popa
dec
cmp
cli
sub
add
in
and
pop
xchg
mov
or
push
jae
xor
adc
pop
mov
insl
mov
jmp
cli
jnp
daa
push
sbb
cli
ret
clc
arpl
lahf
aam
out
sbb
shlb
cli
mov
addr16
repnz
fstp
inc
sti
out
aas
cld
mov
pop
xor
jmp
jmp
int
xchg
fimull
mov
xor
aam
test
jg
jle
and
je
bound
fcomps
js
adc
mov
and
sbb
bound
addr16
cmp
out
jmp
out
aam
in
dec
repnz
pop
push
inc
mov
xor
lods
fcompl
jecxz
and
mov
shl
popa
sti
sti
out
sub
imull
xchg
jb
out
cmpsb
cld
and
popa
pop
inc
pop
xchg
mov
insb
aaa
sbb
jns
dec
jbe
mov
fs
xor
add
jbe
inc
repz
xchg
mov
add
sbb
adc
fcomp
jb
push
cwtl
mov
cmpb
lret
push
in
inc
and
sbb
loop
nop
lock
sub
outsb
jbe
in
movsl
cmc
rorl
mov
sub
sub
sbb
call
int
adc
shlb
or
test
incb
add
add
dec
sub
ds
mov
inc
adc
lock
neg
xchg
arpl
xchg
std
rcl
mov
stos
roll
mov
jns
inc
and
or
mov
test
adc
call
xor
mov
inc
adc
and
popl
jo
pop
xchg
jns
cltd
lret
cmp
adc
push
dec
test
mov
pop
xchg
adc
imul
jecxz
push
or
fmuls
cmpsb
inc
cltd
icebp
aaa
test
cmp
loope
add
and
pop
ljmp
jmp
and
xor
add
or
mov
std
xchg
adc
jmp
orl
push
test
mov
mov
in
ret
pop
and
iret
mov
mov
push
mov
cmpsl
testl
scas
or
sub
loopne
lret
mov
cmp
js
stos
adc
insl
gs
insl
cmpsb
aam
sbb
loopne
cld
in
push
in
ljmp
jle
fwait
xchg
sub
push
sbb
xorb
call
mov
add
inc
inc
not
and
out
mov
sbb
test
jo
out
lea
cmpsb
pop
arpl
adc
mov
dec
lods
push
imul
hlt
push
ret
mov
popa
testl
pop
xchg
cwtl
dec
loop
xchg
mov
fidivrl
lea
dec
testl
add
repnz
sub
cmp
popa
hlt
cltd
int
cmpsl
add
xchg
loopne
and
sbb
jae
and
jo
push
or
mov
fsubrl
js
xlat
mov
and
dec
neg
mov
add
jae
pop
repz
add
sbb
arpl
pminsw
test
xor
inc
mov
pusha
push
test
out
icebp
sbb
or
xchg
stc
pusha
push
or
je
pop
test
lcall
lods
jecxz
adc
dec
adc
movsl
adc
rorl
sbb
stos
sub
sti
icebp
mov
xor
out
dec
sbb
xchg
sbb
scas
add
ja
cmpsl
in
mov
cltd
jmp
pusha
cwtl
iret
bound
fst
inc
dec
push
mov
das
sub
shrb
lahf
mov
orl
fistl
ds
mov
shll
dec
je
push
mov
rol
repnz
fdivrl
mov
mov
sub
and
inc
sub
shrb
ds
adc
pop
fmull
jecxz
divb
and
movsb
xchg
nop
xchg
lcall
scas
cltd
pop
mov
iret
outsb
shr
jecxz
mov
mov
call
and
neg
cmpsl
dec
jecxz
push
lcall
push
repz
loop
inc
ss
pop
sub
ret
jle
negl
inc
inc
imul
lock
pushl
jge
leave
pushf
arpl
add
jmp
out
push
ja
push
mov
sti
mov
lods
lret
cmp
mov
ficoms
popa
lods
xor
xor
insb
lret
adc
jmp
dec
lret
fimuls
jnp
add
aas
stos
mov
jle
shlb
int3
dec
xchg
or
jge
inc
loope
fimull
push
xchg
jecxz
sub
adc
gs
negl
sub
insl
dec
nop
and
or
or
test
pusha
pop
push
hlt
jbe
sbb
jno
sub
in
es
addl
bound
out
incb
mov
and
out
dec
push
dec
mov
repz
das
cwtl
add
sahf
sbb
mov
adc
ret
pop
add
std
loopne
sbb
addb
xchg
sarl
xchg
cmpsl
inc
loop
lret
test
shrb
mov
dec
xchg
push
jbe
leave
adc
xchg
dec
push
inc
ret
xchg
sub
push
push
out
inc
xor
ljmp
fstpl
inc
inc
cmpsb
xrelease
sbb
loopne
mov
lret
scas
mov
and
xor
xchg
or
mov
jns
mov
dec
orb
out
mov
mov
push
lods
test
test
pop
sub
mov
filds
xor
cmpsb
imul
inc
inc
mov
mov
adc
cmp
sub
cwtl
mov
dec
mov
mov
jo
popf
ds
clc
rcrl
popa
inc
pop
jno
adc
ret
mov
fisttps
sub
jnp
jmp
leave
add
mov
in
dec
gs
adc
push
add
mov
mov
xor
loope
mov
arpl
inc
pop
cmp
jle
les
or
pop
aaa
push
push
subb
dec
sub
cmpsb
adc
shlb
cmpsb
adc
cli
xchg
fwait
push
cmc
repz
or
sbb
inc
outsl
fnstcw
cmp
mov
ret
cltd
mov
jno
ljmp
es
movsb
cld
inc
pop
sub
xchg
mov
sub
bound
inc
fldt
add
sbb
and
xor
fsubrl
scas
push
enter
rorl
inc
sbb
clc
sub
or
div
inc
adc
ljmp
sbb
push
fidivrs
jno
aam
sbb
sub
mov
loope
inc
xchg
xlat
and
jge
xlat
mov
lret
mov
xor
mov
sub
adc
out
fiaddl
test
rolb
push
test
mov
mov
mov
add
loopne
sarl
mov
ficompl
mov
das
lds
or
aas
cmp
fs
push
aad
jae
rcll
push
in
inc
push
sub
pop
loope
xor
dec
mov
fnsave
adc
mov
jns
add
mov
leave
aaa
imul
cmp
xchg
aam
pop
jo
dec
addr16
inc
into
fildll
and
lds
cmovl
mov
mov
xchg
pop
and
xchg
subb
fidivs
push
lret
adc
cmpl
rolb
inc
mov
and
fnstcw
loop
popa
leave
jno
daa
jecxz
sti
jl
enter
mov
or
sbb
rorl
ja
out
ja
int3
sub
jbe
les
js
mov
stc
gs
xchg
clc
pop
setns
insl
scas
cld
mov
aam
cli
jge
andb
mov
sbb
fisubs
mov
testb
push
jno
stc
sahf
sbb
adc
fstps
push
xchg
sbb
scas
aas
fs
dec
lret
cmp
stc
ja
iret
or
test
dec
add
mov
repz
sub
xchg
xor
sbb
sbb
sbb
xchg
mov
insb
push
xchg
testl
adc
in
gs
pop
outsb
jb
cmp
inc
sub
int
push
cmpb
xchg
cmp
mov
xor
lret
jl
or
inc
lock
fwait
push
ret
stos
int3
out
rcl
mov
jbe
mov
push
fisubs
fwait
adc
add
test
mov
in
imul
jne
push
adcb
pop
mov
push
dec
cld
mov
xchg
xchg
cmp
sbb
rcl
shl
out
pop
fs
dec
jg
fldcw
adc
cmp
mov
fwait
test
sub
adc
mov
push
loop
into
add
add
lret
and
lods
mov
ljmp
fwait
nop
cmc
jbe
mov
or
mov
movsb
imul
leave
mov
xor
enter
mov
fnstsw
repnz
push
es
jmp
dec
aam
xor
sub
ss
cwtl
xor
mov
movsl
mov
repz
jmp
je
mov
cmpl
insb
sub
inc
aas
push
inc
xchg
adc
mov
or
push
xor
lret
outsb
pop
scas
jecxz
pop
xchg
jnp
fisttps
out
dec
daa
fcmovbe
mov
icebp
sub
mov
mov
mov
fsubrs
rcrb
push
mov
stos
lock
es
mov
mov
cmp
popa
sbbb
in
iret
jge
push
loope
cs
pusha
pop
and
jge
sbb
pop
sbb
mov
daa
push
jmp
mov
mov
inc
ss
insl
push
adc
sahf
or
push
xchg
inc
xchg
pop
test
and
pop
clc
push
cli
adc
mov
mov
rclb
push
cmp
hlt
lds
sbb
insb
pop
in
cli
imul
jmp
cmp
out
adc
and
pop
mov
mov
lret
outsb
lcall
lcall
pop
cmp
jnp
mov
es
mov
mov
aam
or
dec
xchg
adc
pop
fidivl
push
pop
shlb
jmp
jae
jmp
lahf
push
xchg
xor
and
xchg
add
test
popf
lret
sub
pop
adc
jge
cmp
lods
call
and
ret
fadds
lods
ret
shlb
adc
dec
xor
jl
cmpsb
sti
fst
xchg
sbb
sbb
mov
adc
jae
fcoms
push
mov
stos
xchg
adc
je
jecxz
push
sub
test
adc
mov
mov
jo
xchg
xchg
in
push
arpl
xlat
or
cltd
add
es
das
dec
mov
push
pop
jmp
mov
mov
adc
pop
ds
adc
mov
ds
mov
lret
inc
shrb
pop
fs
lea
call
or
and
sti
xlat
and
in
out
xchg
lret
adc
movsl
out
jmp
push
cmpsl
adc
dec
dec
sbb
repnz
pop
sub
inc
popl
xor
imul
into
lods
ret
sub
xchg
and
cmpsb
in
into
sarl
sbb
imul
add
adc
push
xor
jge
or
push
shl
cltd
shrb
imul
stos
pop
fs
aaa
pop
jbe
sbb
jbe,pn
popa
cmpsb
nop
dec
inc
adc
xchg
pop
ljmp
inc
push
addr16
mov
ljmp
cld
int
mov
bound
mov
or
mov
sahf
stos
inc
jle
inc
aas
cmp
push
xor
ficomps
dec
sub
xchg
stos
outsb
stc
test
inc
xchg
mov
push
shlb
aam
and
mov
fidivl
scas
add
xchg
and
or
dec
pushf
hlt
or
inc
mov
dec
pusha
pop
cmp
pushf
mov
icebp
xor
stc
xchg
popf
je
mov
cmp
sbb
mov
cmp
adc
xor
cmp
sbb
adc
cmp
repnz
xor
sub
xor
xorl
js
cmp
sbb
pop
mov
sarl
or
test
mov
stos
sub
lret
adc
icebp
andb
mov
ljmp
aam
jo
ss
push
sbb
stos
lea
fcompl
test
mov
test
aaa
dec
ljmp
enter
aam
andl
jno
icebp
push
out
push
xchg
dec
inc
les
mov
xchg
scas
fisubl
ss
jle
les
addr16
sub
xor
icebp
mov
mov
loopne
jecxz
adc
jmp
mov
sbb
jne
test
push
movsl
outsb
mov
cld
push
daa
xchg
repz
push
xor
and
lea
jp
mov
mov
lret
or
es
cld
sbb
xor
xlat
rolb
iret
jnp
mov
icebp
pop
mov
int
jb
in
inc
mov
push
xor
xchg
sbb
dec
push
adc
ret
push
ret
das
add
gs
cs
jae
and
popa
dec
pop
inc
xor
mov
data16
dec
push
push
test
adc
addr16
and
lret
push
dec
xchg
shl
add
cmp
rorl
cvtps2pi
cs
fs
aaa
mov
nop
in
adc
and
adc
cmpl
dec
mov
cltd
sub
push
jno
das
xchg
dec
leave
fwait
popa
pop
test
hlt
rorb
push
ds
ja
and
sbb
out
jmp
rcl
push
in
dec
pop
sub
out
mov
subl
adc
jmp
insl
inc
lock
pop
cmp
add
mov
mov
cmc
mov
lret
arpl
cmpsb
mov
fidivrs
mov
ss
adc
add
xchg
out
or
lret
adc
jnp
call
je
sub
sub
adc
mov
xor
ret
outsb
mov
loop
scas
sub
push
cs
push
jl
out
push
es
push
lods
mov
mov
jge,pt
add
sub
push
xor
andb
inc
out
sub
iret
das
mov
sbb
cmc
or
sbb
es
mov
sti
add
push
mov
jae
xchg
add
push
dec
push
ds
adc
fwait
push
scas
cmp
mov
mov
jae
xor
outsb
fwait
mov
call
iret
ss
fistpl
mov
adc
outsl
lock
jg
inc
lods
rcrl
cmp
lods
mov
mov
push
test
repnz
ds
jle
insb
pop
or
jae
dec
addr16
pusha
and
std
adc
xor
div
cmpl
or
or
icebp
scas
rcrb
shlb
sbb
insb
mov
scas
insb
andl
adc
js
pop
cwtl
sub
sub
dec
inc
jl
cmpsb
mov
movsb
pop
mov
scas
xchg
push
sahf
das
push
adc
pop
ds
mov
xchg
xchg
push
fstps
push
mov
lret
and
lcall
pushf
and
sub
cmp
inc
cmp
ja
cld
cmp
push
mov
sub
inc
jge
sbb
push
mov
das
jno
push
jo
sbb
sbbl
jnp
mov
dec
mov
fcmovnbe
sarb
mov
imul
test
push
movsl
pop
jmp
andl
rcll
lret
out
push
xor
xor
in
lods
xchg
test
mov
cmp
ss
addb
and
push
xchg
dec
daa
mov
push
or
test
pop
push
pop
jmp
pop
shrl
repnz
xorb
sbb
ja
fwait
xor
stos
jp
mov
mov
movsb
inc
xor
pop
xlat
aas
or
sbb
pop
ficoms
mov
fs
sub
std
adc
bound
pop
in
mov
inc
cmp
add
mov
xchg
pop
subb
cld
sbb
mov
xlat
add
xor
stos
sub
iret
adc
mov
sub
int3
push
mov
inc
mov
push
inc
lds
lock
std
mov
sbb
into
popa
and
push
movsl
imul
mov
sub
xlat
aas
pop
jne
in
push
dec
inc
pop
das
aaa
cmp
jbe
and
add
bound
rcl
fsubrs
mov
stc
sbb
mov
lret
insl
pusha
sahf
setge
pop
add
arpl
pop
pcmpgtd
inc
popf
mov
add
push
imul
mov
push
mov
ja
decl
xchg
adc
aam
mov
mov
insb
mov
xchg
dec
mov
push
pop
lea
in
out
cwtl
or
push
outsb
dec
push
ficoml
adc
mov
movsb
sahf
popa
xchg
mov
push
or
jb
push
dec
or
imul
mov
pop
scas
xchg
fsubr
pop
adc
add
repz
fs
adc
loopw
mov
sub
push
pusha
mov
push
jg,pt
ret
scas
sbb
pop
jnp
xor
bound
cmp
pop
push
sar
mov
push
cmpsl
fwait
jmp
jbe
mov
ljmp
ds
sub
adc
sub
in
leave
jg
jl
arpl
aam
pop
push
or
repz
inc
adc
mov
mov
pushf
mov
pop
xchg
sbb
mov
repnz
add
push
fistl
mov
push
fwait
xchg
shl
mov
lods
lds
dec
in
xchg
pop
inc
into
xor
push
xchg
mov
dec
adc
mov
test
into
adcl
into
mov
push
aad
aad
and
cmp
fimuls
jae
mov
sub
rorb
add
xchg
stc
push
dec
in
int3
aas
mov
inc
jno
pop
or
mov
push
aas
inc
jne
xlat
mov
adcb
cmpl
int3
and
jge
lods
pop
lret
sti
dec
ficoml
cmp
fs
dec
mov
cmp
dec
add
aaa
sub
adc
cmp
xchg
pop
loop
cmp
adc
jle
daa
mov
push
jb
movsb
andl
aam
lret
js
push
mov
cwtl
pop
lods
mov
lods
cmp
jns
xorl
mov
dec
lock
jae
pop
mov
mov
loop
or
or
ret
data16
scas
add
and
incb
pushf
bound
hlt
mov
add
aaa
inc
push
adc
or
lcall
sub
or
insl
mov
dec
pop
sbbl
add
mov
add
push
xchg
iret
xchg
iret
cmp
shl
ret
mov
cmp
dec
sub
int3
xor
mov
addr16
hlt
mov
sub
push
push
icebp
lds
dec
mov
aas
stos
mov
sbb
ds
subl
mov
pop
push
xor
arpl
repz
xor
mov
shlb
inc
cli
dec
nop
lret
jmp
pop
lods
mov
jo
adc
cmc
xchg
push
cmp
flds
or
mov
jnp
mov
imul
jmp
push
stos
xlat
sti
inc
xor
jnp
mov
pop
rorb
dec
xlat
sub
lcall
dec
js
and
lcall
lea
or
ds
call
cld
out
mov
push
dec
mov
cwtl
push
scas
cmp
pop
mov
std
cltd
addr16
add
faddl
cld
aad
sub
repz
push
pop
inc
or
in
cmpl
into
xor
mov
das
arpl
xchg
sbb
out
pop
mov
imul
push
xor
or
inc
inc
xchg
insl
push
mov
inc
pop
mov
rcrb
lret
fsubrs
test
cmpsb
popa
pop
shlb
mov
movsb
inc
add
cmc
pop
scas
mov
dec
adc
movd
push
adc
dec
mov
outsl
mov
xlat
xor
adc
add
imul
ljmp
mov
dec
mov
stos
mov
push
mov
adc
jmp
jge
mov
clc
push
int3
and
dec
mov
or
ja
movb
xchg
mov
cmp
sbb
in
sub
outsl
mov
repnz
xorb
push
push
ss
mov
out
inc
xor
movsl
add
add
inc
fisttpll
cmp
add
dec
dec
fistpl
out
out
inc
mov
fidivrl
and
out
mov
mov
push
jae
scas
inc
jmp
add
mov
xchg
hlt
jecxz
imul
std
fdivrl
mov
aas
cs
sub
mov
mov
lcall
mov
lods
mov
push
mov
push
jnp
outsb
mov
repnz
cmpsb
adc
das
fwait
mov
mov
repnz
enter
stc
push
add
pop
sub
jge
push
mov
call
daa
imul
and
les
mov
add
push
xlat
ljmp
sbb
mov
popa
fists
dec
outsl
ret
clc
sbb
in
cltd
xor
rolb
cmp
rorl
dec
mov
pop
and
ret
or
adc
add
dec
ds
pop
stos
mov
cmpsb
and
idivb
shlb
push
push
jb
pop
fsts
mov
sbb
fwait
or
cmp
stos
fbld
lods
jnp
or
or
cmp
mov
xchg
fistpl
mov
fwait
mov
push
xor
stos
cmp
fcoms
mov
popa
add
lods
insl
mov
xor
punpckhwd
arpl
pop
dec
mul
popf
xchg
cmpl
mov
dec
aad
jmp
mov
daa
out
pop
clc
into
ds
sar
sahf
jbe
icebp
xchg
push
dec
inc
xchg
sub
push
jo
mov
dec
mov
mov
inc
adc
pop
aad
or
inc
movsb
std
les
inc
stos
pop
pop
sub
arpl
mov
into
jp
adcl
mov
lea
mov
movsl
rorl
ds
stc
adc
push
or
add
repz
outsl
fwait
mov
cmpsl
push
xchg
lods
inc
popf
mov
sub
inc
jae
xchg
stos
out
xchg
pop
arpl
bnd
push
push
insl
test
aam
and
and
lock
jmp
and
cld
daa
jnp
into
mov
gs
jb
das
push
mov
mov
das
cmp
sub
imul
lods
xlat
gs
mov
addr16
mov
test
pop
mov
dec
mov
out
sub
fstpl
stos
fstl
test
xchg
int3
sbb
repz
pop
push
mov
adc
mov
insb
pop
lods
dec
jmp
sti
ror
int
xchg
mov
scas
loope
jmp
imul
out
xor
push
jns
and
xchg
lret
push
mov
inc
les
pop
insl
clc
inc
mov
fucom
xor
and
jg
pushf
inc
xor
push
inc
fimull
aas
enter
lret
fcompl
test
dec
mov
and
rcr
push
xchg
and
xlat
in
or
cli
mov
leave
outsl
test
inc
aam
jbe
into
cmp
mov
stos
loope
sbb
cmpsb
repnz
or
push
mov
aas
imul
lock
adc
mov
pop
xchg
movsb
fdivp
cmp
push
fnstenv
fwait
sbb
sub
sub
add
xlat
je
fists
jle
cmp
cmpl
cltd
and
out
sub
in
pop
dec
in
iret
shrb
adc
out
inc
xor
orb
lods
sbbl
test
jle
cmp
ficoml
ja
out
adc
push
dec
fildl
cmp
out
into
lret
sahf
out
cmp
movsl
or
cs
jle
rorb
push
xchg
push
int3
enter
lods
mov
test
enter
jecxz
dec
rorl
dec
fdecstp
fstpt
pop
pop
dec
dec
xor
cld
xchg
cmp
mov
lahf
sub
jp
inc
xchg
ret
or
mov
jbe
out
loope
cmp
mov
cmpsb
lcall
mov
push
pop
rolb
shlb
or
lret
sbb
bound
adc
adc
inc
lret
push
sub
fstp
mov
jo
test
jb
mov
pop
mov
out
std
adc
dec
push
xchg
ja
push
jg
iret
std
dec
ja
inc
add
mov
test
test
xchg
jb
pop
je
nop
adc
popf
mov
iret
je
pusha
mov
gs
dec
jnp
jmp
push
xor
or
jl
dec
test
cli
ret
adc
pop
xchg
push
movsl
cltd
push
sub
mov
mov
sub
push
mov
pop
repz
and
pop
sbb
cmp
les
xchg
in
lret
stos
jne
sbb
movsl
cld
xchg
aas
aad
insl
outsb
jg
pop
sub
aam
mov
arpl
aaa
les
inc
jne
aaa
scas
sbb
xchg
dec
inc
test
sbb
cli
enter
push
cmp
outsb
aad
lret
insl
test
mov
xchg
js
roll
inc
cmp
or
and
cmp
jmp
int
sarl
jnp
mov
mov
rorl
adc
jo
pushf
mov
shrl
iret
pop
aam
pop
lods
outsl
movsb
add
push
out
and
mov
inc
das
ret
pop
not
jmp
orb
lret
fnstcw
test
adc
int
mov
pop
lods
adc
xor
movsl
sub
fstpt
into
lahf
mov
mov
repnz
es
cmc
dec
imul
xchg
test
pop
mull
pop
loop
std
repz
ds
adc
lds
cli
aam
stos
push
push
mov
jle
and
std
fisubl
scas
jge
xor
fiadds
mov
cmpl
push
xchg
cld
sub
or
rcll
push
movsb
mov
stos
or
enter
ret
adc
js
push
and
jle
xchg
test
sub
pop
xchg
push
mov
insb
cmpsb
aam
push
push
fnstcw
stos
enter
decl
jns
xor
movsb
jge
iret
and
imul
mov
mov
call
loope
ds
imul
into
imul
mov
mov
je
mov
xor
xchg
xchg
subb
adcb
pop
push
lret
cmc
fdivl
inc
and
imul
sbb
repz
stos
lcall
xchg
sbb
scas
rorl
popa
cmp
lahf
sub
pop
mov
or
fsubrp
test
mov
adc
or
incb
in
jb
arpl
pop
dec
sub
les
cmc
sbb
test
mov
add
aaa
dec
js
add
cs
mov
jo
sub
mov
movsl
scas
jmp
ljmp
xchg
subb
pop
fsubrs
into
cmc
mov
gs
sub
pop
cmpsl
cmp
xchg
pop
mov
pop
push
fldl
scas
cmp
sahf
jmp
int3
pop
clc
inc
cmp
push
js
mov
rolb
pushf
aas
icebp
cmc
pop
inc
pop
scas
incl
test
xor
fwait
cs
push
xor
lods
cwtl
call
push
xlat
loop
mov
adc
xor
push
add
das
int3
in
ret
loope
loop
lcall
sbb
mov
cmpsl
out
inc
dec
sbb
adc
add
testb
xchg
mov
xlat
scas
scas
and
insb
mov
sbb
cmc
lods
cmpsl
lcall
mov
out
inc
jge
pop
dec
popa
iret
sti
loop
jecxz
and
mov
mov
and
push
aad
aas
adc
lods
mov
push
popa
cmpsl
js
jl
fs
dec
or
mov
ss
mov
hlt
dec
jg
push
pop
xor
cmp
push
jg
lods
and
out
enter
pop
test
lcall
xor
and
cmp
dec
and
pop
popa
daa
push
mov
inc
insl
bound
lahf
pop
lock
hlt
aad
jb
jne
enter
or
jl
test
adc
and
repnz
sub
bound
jge
or
sub
and
push
pop
imul
hlt
mov
adc
adc
adc
out
aaa
add
cltd
dec
push
popf
cmp
pusha
adc
xchg
aaa
inc
cltd
nop
jns
inc
adc
cmp
sbb
fsubs
jnp
rclb
adc
gs
sub
mov
ja
pusha
movsl
shr
pop
jns
daa
andl
lods
dec
xchg
dec
in
and
insl
std
es
xchg
dec
push
push
fadd
cmpsl
push
ret
push
mov
shll
into
lock
cmp
shl
push
sub
jge
sarb
and
scas
xchg
push
aas
dec
and
sar
add
inc
xchg
lea
push
dec
mov
sub
es
clc
sbb
push
bound
or
cltd
ret
stos
mov
sub
add
inc
leave
xchg
jno
pop
mov
movsb
mov
mov
jne
mov
pop
push
dec
rcrl
sub
xchg
lahf
loop
lock
cmpsb
repz
loope
pop
stc
or
lods
scas
sbb
cmc
insb
orl
sarl
xchg
sbb
or
or
and
hlt
pop
jge
repz
je
adc
fists
orb
or
inc
test
mov
inc
pop
out
stc
adc
lcall
arpl
xchg
icebp
cmc
es
aaa
out
or
or
xor
negl
lret
cmp
mov
pop
xchg
sub
sbb
jne
lahf
insl
inc
ss
sub
idiv
mov
xor
jae
inc
push
mov
enter
push
leave
fcoml
dec
in
fistps
daa
or
lock
cli
adc
pop
loope
or
adc
outsl
mov
pop
mov
jecxz
std
and
pop
xchg
sbb
jge
inc
divb
xchg
orl
add
push
xchg
xchg
bnd
mov
jge
jns
mov
jg
push
mov
xchg
icebp
pop
add
pop
cmpsl
shl
xchg
xor
in
push
inc
xchg
xor
jmp
int
cmp
cmp
push
push
test
test
movl
or
and
loop
sbbl
dec
imul
lret
pop
repz
stos
in
mov
ret
mov
ficoml
loope
nop
push
mov
dec
sbb
push
movsl
mov
push
js
das
add
cmc
mov
mov
or
jne
jg
jg
addr16
mov
add
sahf
push
outsb
jo
xlat
and
xchg
es
jnp
sub
adc
in
mov
insl
popf
push
icebp
mov
sub
ljmp
in
sub
mov
push
aam
insb
lret
fwait
rcr
lea
adc
rcrb
shr
jecxz
push
lock
and
adc
dec
mov
mov
scas
mov
int
cs
call
loopne
pop
sbb
mov
push
out
ss
js
cmpsl
call
xor
pop
les
pop
add
mov
hlt
in
rclb
or
cmp
pop
nop
test
fildll
repz
sbb
in
push
adc
and
int3
ja
jge
insl
jl
or
mov
cltd
xchg
jl
inc
sbb
adc
add
sub
inc
rorb
mov
sbb
out
push
mov
xchg
mov
shrl
and
fistpll
fsub
scas
mov
cmp
sahf
cmp
mov
mov
clc
dec
pop
stos
jmp
arpl
push
aaa
orb
ja
cmp
ds
jae
sbb
scas
mov
adcb
outsl
sbb
imul
sub
push
gs
orb
in
aas
mulb
mov
out
inc
arpl
lock
dec
es
adc
shlb
push
loopne
sub
and
in
jle
push
add
cld
cmp
or
jno
adc
pop
or
jne
jp
int3
stos
add
push
cmpsb
or
rep
cmpb
aaa
ss
iret
ret
dec
push
bound
call
adc
int3
fldenv
insb
mov
dec
lret
jge
inc
cs
cld
push
cmc
or
xchg
sub
mov
stc
mov
xchg
xchg
jne
and
lahf
adcb
stc
iret
aaa
add
jge
xchg
inc
jmp
test
std
cmpsb
arpl
cmp
notl
decb
mov
push
scas
cltd
adc
jbe
mov
cmp
cs
inc
dec
dec
mov
outsl
outsb
add
xor
adc
je
scas
adc
stos
dec
cmpsl
icebp
dec
lods
push
psubusw
daa
push
scas
inc
push
pop
mov
data16
sub
cmp
lcall
icebp
idivb
cmp
mov
and
cli
bound
shlb
jo
xor
aas
push
loopne
dec
imul
add
popf
sbb
push
or
mov
call
mov
rcr
dec
js
adcb
clc
mov
loop
bound
aam
js
fsubrl
ss
xchg
add
pop
into
fmuls
fsubrs
aas
ss
test
fcmovnb
in
dec
outsl
mov
or
ds
test
fprem1
rorl
scas
adc
cld
sub
sub
cmp
std
push
cmp
lcall
stc
jns
gs
loope
cs
or
stc
test
les
enter
fdivrs
mov
std
je
pop
dec
mov
sub
scas
dec
lods
repz
xlat
int
xchg
sbb
and
pop
jae
loope
sub
xor
sbb
jne
or
mov
xor
mov
cltd
mov
cli
jbe
mov
lods
xor
subb
test
sbb
and
mov
push
mov
pop
sub
xchg
jo
jecxz
inc
mul
mov
xor
add
sbb
loop
shlb
in
push
fadds
subb
add
or
cmp
add
popa
mov
sub
aam
in
xor
cmp
pop
jne
shlb
sbb
loop
shrb
adc
push
insb
popa
iret
jno
popa
lret
xchg
ss
cmpsb
cli
pop
lea
dec
shlb
pop
jnp
or
sub
cwtl
jg
lock
pusha
sbb
cmp
ljmp
testb
sbb
mov
sahf
popf
mov
fs
imul
decb
pushf
fiadds
mov
lods
outsl
or
inc
leave
out
scas
stc
add
cld
push
dec
mov
rol
insl
xchg
sub
iret
stc
sbb
push
cmp
imul
mov
dec
shll
xchg
adc
xchg
inc
ret
xchg
loop,pn
pop
dec
das
xor
push
lea
cmp
add
movsl
repnz
inc
mov
sahf
and
testb
fwait
lea
scas
daa
inc
jge
subb
mov
ds
test
shlb
mov
addr16
dec
call
loope
mov
pop
frstor
mov
push
lahf
inc
arpl
ret
fidivrs
pop
ficomps
adc
cmc
enter
mov
dec
test
add
cmp
push
loop
int
jb
pop
mov
outsl
inc
dec
mov
dec
iret
push
xor
mov
call
sub
xchg
jae
lock
add
mov
mov
filds
jnp
out
int
mov
sbb
das
shl
xchg
adc
pop
jae
repz
movsb
jle
loope
loope
xlat
jl
lahf
inc
movsl
fisttpl
sub
inc
lret
pop
dec
insb
push
into
movsl
loopne
sbb
stos
mov
cmpsb
pop
mov
hlt
arpl
loopne
jle,pn
push
ficomps
out
bound
mulb
in
lods
test
in
sbb
sbb
mov
xchg
jecxz
test
push
and
xchg
inc
aam
or
ss
xchg
fistpl
sbb
jb
sub
aas
dec
ds
out
je
inc
dec
lcall
xchg
pop
mov
dec
hlt
push
push
jle
bound
xchg
xlat
dec
mov
loop
jo
xor
test
mov
jns
aam
push
hlt
dec
fdivr
add
dec
loop
xchg
int
and
enter
jecxz
sbb
dec
fbld
cld
or
aaa
mov
xchg
dec
sub
in
test
loope
bound
push
hlt
jo
add
pusha
inc
mov
outsl
add
cmp
xchg
pop
sub
cld
xchg
fsubs
inc
cmc
jbe
leave
add
xchg
mov
movsb
pop
mov
cwtl
push
push
aam
ret
je
andb
lret
std
icebp
jns
mov
pop
adc
loop
outsb
sbb
int
scas
jmp
xchg
shl
popa
fiaddl
outsl
mov
cmp
xchg
lcall
add
xchg
cld
xchg
das
enter
movsl
je
shl
ret
mov
mov
sbb
lahf
mov
push
jb
jne
jmp
sbb
inc
push
inc
call
sub
dec
mov
das
and
faddl
cmp
int
mov
iret
andl
test
mov
dec
push
fwait
cld
xchg
cmc
popl
imul
mov
fmul
andl
nop
xchg
repz
ret
sub
fnstcw
push
insb
jno
inc
mov
xchg
inc
out
sarb
cmp
sarl
scas
data16
push
inc
pusha
mov
xchg
mov
cmp
std
cmp
and
test
sti
dec
push
pop
movsl
sbb
test
jecxz
fldl
mov
xchg
aas
push
insb
push
or
xacquire
sub
cmpsb
adc
push
adc
lret
stos
and
cmp
sarb
jo
mov
mov
xor
mov
jg
je
popa
mov
rcrb
idivb
sub
cmpsb
dec
outsl
sub
mov
addb
iret
xchg
jns
jecxz
and
adc
ss
repnz
xchg
lock
sbb
mov
pop
xchg
loope
or
pop
ss
mov
imul
xor
in
test
stos
xor
mov
lret
push
mov
cmpsb
xchg
xchg
bound
mov
sbb
popa
xchg
shl
mov
fdivp
in
nop
mov
stc
inc
std
in
lds
clc
cmp
mov
jg
pop
rclb
je
in
clc
push
enter
jge
xchg
push
arpl
std
pop
mov
mov
xor
daa
shrl
shrb
dec
mov
dec
int3
lods
push
imul
pop
xor
jl
into
and
or
scas
push
inc
mov
add
mov
imul
stos
ret
push
jp
mov
dec
xchg
in
push
bound
in
lahf
addr16
rcl
popf
das
pop
add
outsl
loop
stos
in
xchg
in
scas
das
jns
add
mov
adc
insb
lcall
fcmove
loopne
mov
or
xlat
shlb
or
nop
out
jb
jmp
add
leave
cld
mov
dec
clc
and
andl
and
cmp
adc
loopne
lea
lock
inc
add
mov
nop
dec
or
xchg
pusha
or
cmc
mov
fnstsw
rcr
sbb
mov
insl
cmpsl
fs
mov
ret
out
sti
dec
xchg
subb
inc
out
cmc
das
nop
mov
xlat
arpl
aas
cmp
pop
pop
sub
outsl
insb
mov
clc
pop
add
add
push
int
or
mov
mov
adc
pusha
and
lds
jecxz
xchg
sub
or
lods
xor
dec
adc
fwait
jg
sbb
add
test
and
add
adc
andb
cmp
sub
and
pop
test
jb
scas
mov
pop
inc
pop
out
and
xor
mov
mov
xchg
xor
scas
in
add
sti
mov
pushf
cmpsl
dec
dec
inc
push
scas
and
in
hlt
inc
dec
push
xchg
out
fwait
pop
leave
into
dec
and
outsl
lea
mov
decl
lods
or
mov
std
in
pop
adc
orb
push
inc
cld
outsl
fstps
lret
or
ror
push
jbe
loop
das
es
insl
pop
xchg
sub
dec
jmp
insl
sub
xchg
insl
dec
pop
popf
add
js
add
ret
pop
push
cmp
pop
mov
out
cmc
fcompl
cs
shlb
jmp
cmp
sbb
mov
dec
xor
ds
mov
ret
sbb
out
pop
fidivl
loop
jae
pushf
add
adc
push
addb
hlt
sti
push
les
in
mov
int
stos
xor
cmpsb
mov
ljmp
pushf
loop
int3
xchg
mov
xor
pop
lcall
sbb
stc
pop
mov
or
int
and
jno
and
mov
lods
les
or
and
mov
mov
lds
ret
enter
push
ret
popa
push
outsb
shrl
pop
jge
outsl
cltd
mov
mov
push
adc
cmp
mov
cmc
les
je
out
xchg
sahf
out
mov
scas
clc
xchg
inc
push
mov
jb
cmp
jae
add
push
mov
pop
push
fldt
aam
xchg
leave
xchg
push
test
xor
mov
sbb
add
fwait
xor
and
int3
sub
fwait
and
and
shl
ret
cmp
inc
sub
bound
mov
fisubl
push
int3
cmp
stc
das
enter
cli
fisttps
mov
ficoms
adc
pop
ja
mov
dec
mov
xor
jbe
lcall
das
dec
iret
xor
jge
xlat
push
leave
out
andb
pop
in
xchg
sbb
mov
loope
ds
xchg
adc
lahf
lret
cmp
enter
xchg
xchg
fsubrp
dec
js
repnz
cwtl
icebp
adc
cmpl
fcmovnb
leave
test
fwait
cmp
aas
lret
push
cmp
xchg
xchg
mov
sbb
xor
imull
cwtl
fidivl
or
aas
cmpsb
cmp
movsl
jnp
sbb
pop
xor
or
enter
arpl
mov
ret
jne
xor
gs
lret
fisubrl
or
xlat
cwtl
orb
js
mov
mov
add
scas
popf
test
pop
sbb
shl
pushf
adc
mov
pop
xchg
push
sub
adc
and
rcr
dec
mov
ja
scas
fdivl
or
cmp
sub
or
iret
jmp
clc
test
movsl
das
jno
in
aam
data16
xchg
in
stc
jl
push
iret
mov
mov
push
les
xchg
in
push
add
cmp
xor
scas
pop
push
mov
jp
jmp
add
clc
out
std
dec
xor
imul
leave
xor
mov
pop
iret
add
add
rcrl
out
xor
bnd
mov
adc
xor
push
fldenv
or
push
mov
sahf
je
jle
sub
mov
jp
dec
popa
shl
bound
das
leave
push
ja
sahf
mov
rorb
out
or
imul
jo,pn
xchg
cmpsb
and
xor
push
sub
fstps
ret
inc
or
test
mov
cwtl
mov
jge
adc
sbb
inc
stos
in
subl
incl
jae
and
fsubl
add
push
shlb
ret
out
cmc
cmpsl
and
adc
adc
outsl
fiaddl
fstpt
xor
inc
push
into
mov
push
jbe
out
sahf
mov
inc
ss
int3
adc
pusha
pop
loop
pop
jno
mov
jg
data16
subb
insb
pop
rcl
mov
xlat
pop
add
cmc
shll
scas
pop
inc
adc
push
cld
xchg
pop
and
cmp
cmpsl
jae
or
jns
jae
sti
mov
fcmovne
dec
jle
inc
xor
cltd
mov
loope
and
add
fistl
lret
cmp
adc
jmp
ret
xchg
sub
push
adcl
mov
mov
pop
mov
out
sub
xchg
fildl
push
or
push
lods
inc
sbb
jge
mov
sub
and
dec
subl
insb
inc
rorl
call
push
push
jne
mov
sti
cmpl
sbb
inc
sub
cmp
xlat
outsb
scas
popf
dec
lock
scas
fs
jns
cli
cmp
mov
push
mov
fmul
scas
lock
push
xor
jle
xor
xor
adc
loopne
push
out
jmp
popa
jl
cmp
jmp
sti
sbb
pusha
jle
adc
shrb
fs
and
mov
xchg
ret
push
xchg
pop
stos
add
pop
das
mov
int
call
stos
jae
aad
pop
sbb
cmpsl
mov
adc
mov
pop
sub
mov
cmp
add
sub
jp
mov
jb
sbb
jl
jbe
sub
jne
jl
dec
fcoms
mov
je
cli
jnp
dec
jg
test
cmp
pop
js
test
mov
outsb
and
mov
stc
pop
mov
into
cmp
sbb
scas
xchg
or
test
lods
in
addr16
mov
bound
mov
enter
subb
adc
sbb
std
aas
mov
push
jg
xchg
punpckhwd
push
clc
jecxz
mov
popa
push
dec
mov
pop
mov
test
jg
or
int
mov
adc
filds
mov
in
mov
cltd
inc
or
bt
test
adc
in
inc
divb
call
out
in
mov
xchg
fadd
jo
dec
test
push
and
or
inc
dec
and
cmp
mov
mov
add
inc
lcall
mov
test
xchg
mov
push
aam
or
mov
mov
mov
pop
or
mov
push
fcom
daa
adc
mov
dec
mov
decb
mov
lcall
xchg
dec
push
loope
cmp
stos
jbe
dec
sub
test
adc
addr16
cwtl
mov
cmp
sbb
sbb
push
stos
rcrl
mov
aad
les
pop
leave
cmpsb
jbe
mov
add
enter
lahf
call
inc
xor
lea
loop
or
mov
lds
sbb
push
pop
pushf
popa
inc
mov
jl
mov
push
pushf
push
xchg
shll
sar
stos
fwait
adcb
jns
idivl
push
testl
dec
xchg
insb
addr16
ret
fistl
stc
mov
push
std
push
nopl
outsb
hlt
icebp
ja
dec
pop
shrb
cmp
fs
aad
mov
and
mov
add
fidivrs
or
in
scas
sub
jo
jae
and
xchg
sub
movsl
int3
sahf
loope
inc
shrb
ret
addr16
adc
aam
mov
fdivs
lock
test
lods
dec
lea
xchg
arpl
xor
dec
mov
repnz
insl
cwtl
testb
movsl
sbb
dec
push
xchg
xchg
inc
scas
fimuls
pop
insl
pop
aad
xchg
and
mov
aas
outsb
xchg
add
adc
decl
inc
push
popf
xchg
adc
movsb
inc
inc
enter
imul
mov
and
and
fiadds
xor
pop
lock
cmp
inc
mov
xor
test
loop
les
into
mov
dec
jbe
pushf
lods
pushf
imul
cmpsb
out
call
faddl
inc
iret
faddl
add
sub
subl
push
dec
out
lock
push
aas
int3
jp
mov
arpl
repz
js
dec
adc
pop
je
or
pop
adc
cli
and
fnsave
adc
pop
jns
addl
out
js
mov
add
push
xor
insl
cmp
test
mov
push
push
lcall
popa
adc
mov
movsb
out
xor
ss
mov
nop
or
mov
xor
fistl
mov
sub
cmp
mov
xor
mov
and
mov
cmp
dec
xor
xchg
inc
xchg
out
idivl
insl
adcb
and
rcl
add
in
in
cmpsl
lods
adc
mov
dec
push
pop
sahf
dec
push
jb
mov
push
ja
ret
ja
sahf
or
outsl
out
fmuls
repz
aad
sbb
jb
cli
out
jae
or
mov
mov
in
jbe
iret
xchg
adc
mov
lcall
inc
in
std
mov
sahf
jo
rcrl
sbb
cmp
hlt
popf
xchg
jae
cmp
sub
pop
rep
jo
fistps
cs
jb
out
loope
mov
push
stc
or
mov
sub
xor
das
into
jbe
push
jbe
rcll
into
outsb
fsubrs
mov
xor
jecxz
pusha
loope
push
aam
mov
jl
pop
lods
pop
ss
adc
gs
lret
xor
pcmpgtd
xlat
inc
xor
mov
mov
adc
aaa
add
add
sub
jmp
cli
ljmp
push
mov
outsb
nop
cli
adc
shlb
xchg
xchg
sbb
jmp
add
mov
dec
and
add
ror
jns
aaa
adc
jbe
add
jno
add
jmp
push
inc
cld
mov
xchg
jbe
test
jno
sub
mov
push
mov
inc
push
and
jb
test
andl
sbb
cmc
icebp
out
pop
aad
inc
xchg
lds
adc
data16
leave
or
fadd
jbe
sbb
mov
mov
gs
mov
outsb
mov
ja
sub
rcl
xchg
xchg
repnz
rolb
jb
lea
lret
mov
jne
arpl
mov
dec
push
adc
stos
sub
mov
cmpsb
pop
push
mov
sarl
inc
insl
test
xor
adc
adc
pop
add
inc
arpl
in
mov
mov
xchg
add
add
roll
sbb
lahf
adc
lds
pop
lret
jle
test
jns
add
adc
enter
jae
dec
fstp
and
push
mov
jae
dec
and
sbb
xchg
int
push
lret
lods
lret
iret
push
aaa
mov
inc
popf
fisttps
mov
xchg
jge
imul
out
push
xchg
outsl
add
mov
push
iret
mov
sbb
cmpb
out
mov
maskmovq
mov
cltd
fcomps
mov
pop
jae
dec
call
xor
lret
pop
mov
dec
icebp
jp
sbb
jecxz
mov
repnz
mov
fucom
mov
les
cmp
out
aas
cmpsb
orb
out
push
cmp
mov
add
inc
mov
enter
js
fistl
in
stc
lock
popa
imul
out
clc
cmp
add
dec
sbb
adc
shrb
inc
jnp
mov
addr16
addr16
fstpl
or
push
adcl
ja
popa
mov
dec
cmp
outsb
mov
movsl
lea
xor
and
lods
nop
lahf
push
jno
fcoml
mul
mov
addr16
mov
xchg
lods
ja
into
push
pop
bound
add
add
loope
in
inc
insl
lds
fbstp
cmp
ja
jecxz
sahf
ja
sub
in
add
mov
lods
mov
or
mov
mov
inc
out
xor
in
pop
inc
pop
and
mov
and
jae
fidivrl
pop
push
je
cmp
mov
mov
insb
dec
push
or
sbbb
imul
jo
push
xchg
mov
cmp
mov
ljmp
push
ljmp
mov
in
push
sub
int
xor
orb
sti
call
add
sbb
pop
xchg
xlat
push
mov
push
sub
sbb
xchg
lcall
xchg
and
div
sub
adc
pop
inc
loope
xchg
or
push
les
arpl
fmuls
popf
call
add
mov
dec
sbb
sub
cwtl
test
xlat
lret
or
ret
fs
push
and
sub
lea
addr16
cmc
in
mov
fcoms
mov
aad
push
ja
sub
jle
outsl
and
test
pop
fld
cmpsb
add
out
flds
inc
cld
dec
add
popf
decl
daa
and
outsl
into
dec
xchg
xor
push
xchg
ds
repz
xchg
test
cmpsl
pop
cltd
inc
or
mov
sbb
sti
pusha
aad
add
or
stos
jecxz
xor
jns
mov
out
cmp
xchg
out
jns
adc
pop
mov
movsl
hlt
inc
cwtl
jo
bound
inc
nop
push
pop
loope
mov
pop
inc
hlt
gs
bnd
lods
rcl
inc
and
mov
cs
leave
xlat
dec
out
lahf
adc
loope
popf
xor
loop
in
add
cmc
dec
loopne
gs
mov
repnz
aaa
sub
test
cmp
xor
imul
mov
push
cwtl
inc
xchg
pop
xlat
call
shlb
cld
inc
jns
mov
push
pop
lahf
andb
movsl
jmp
cmp
cmp
adc
mov
sbb
ds
xor
jle
push
pop
inc
scas
cmc
push
repz
jg
mov
aam
inc
mov
les
aad
movl
and
lahf
shlb
ljmp
cmp
pop
fcoml
je
jbe
cmp
scas
scas
mov
push
mov
popf
pop
subb
mov
jg
in
movsl
adc
mov
sub
loop
scas
in
mov
out
jno
stos
push
inc
aam
push
jae
cltd
stos
loope
cmp
sti
mov
sti
dec
insl
sub
push
ret
xchg
cli
cmc
mov
cwtl
mov
or
jle
sbb
pop
mov
add
test
iret
adcl
bound
sub
popf
ds
xor
daa
pop
hlt
adc
and
popf
cmp
jbe
fwait
or
jne
mov
mov
adcb
outsb
adc
and
jmp
sbb
in
cmp
inc
rcr
mov
xor
sub
in
xor
xor
sbb
mov
and
push
or
cwtl
mov
aad
test
fsubr
fwait
lahf
enter
inc
inc
jp
xchg
adcl
out
pop
fmul
cmpsb
cld
fildll
or
stos
pushf
gs
subl
push
in
gs
sbb
jle
cmc
scas
iret
mov
sti
push
mov
test
loop
mov
add
in
push
or
notb
or
je
movsl
in
pop
mov
and
push
xor
addr16
xorl
mov
hlt
xor
loopne
sub
aas
mov
xchg
mov
push
mov
pop
adcl
loopne
repnz
mov
repnz
lcall
outsl
stos
xchg
mov
lahf
test
sbb
mov
nop
xlat
inc
sbb
mov
cs
fistps
iret
push
jnp
mov
mov
jnp
pop
std
pushl
lds
mov
push
dec
insb
test
mov
mov
lock
das
je
mov
jg
in
loopne
xor
jnp
inc
out
sbb
sbb
daa
inc
push
in
jg
adc
out
jl
loope
flds
cmpl
push
push
xor
scas
shrb
and
daa
jbe
movsl
sbb
clc
add
subl
or
dec
cmp
mov
adc
pushf
jo
push
ret
mov
or
hlt
inc
pushf
stos
jmp
ret
cld
gs
std
xor
or
jecxz
pushf
mov
sbb
aam
fimuls
mov
mov
push
test
les
les
xor
xorl
or
daa
sarb
xor
fadds
fnstenv
adc
incl
push
mov
es
int3
sbb
loopne
push
push
push
imul
movsb
mov
insl
pop
andb
cmpsl
lcall
sub
jecxz
push
cmp
fcompl
or
and
cmp
add
in
leave
push
inc
stc
rorb
lret
mov
lcall
push
pop
push
jge
fstl
nop
out
out
call
out
pushl
jbe
push
aas
xchg
icebp
cmpsb
mov
cltd
mov
push
dec
stc
dec
jno
push
pop
cs
movsl
push
cmc
xchg
test
push
xor
outsl
ja
imul
lcall
psubusw
mov
add
ljmp
push
loopne
inc
xchg
shll
jl
lcall
mov
ss
pop
aaa
leave
dec
dec
cmp
loopne
push
add
pusha
roll
jg
int3
test
into
sub
or
scas
mov
scas
jnp
in
bound
shr
sub
loop
lea
sbb
stos
jge
pop
nop
mov
sbb
xor
inc
jbe
mov
popf
clc
daa
fnstcw
sti
jo
popa
mov
out
pop
cmp
data16
dec
notb
dec
pop
jo
mov
or
dec
sub
mov
stos
out
xor
adc
arpl
or
mov
cmc
mov
lret
mov
icebp
sub
loopne
fistps
scas
lods
mov
out
addr16
das
int3
lret
lret
clc
sub
mov
jb
add
adcb
clc
or
inc
lahf
adc
pop
cmp
xchg
inc
inc
push
adc
and
jne
inc
gs
and
jmp
lret
pop
add
bnd
cwtl
cmp
test
das
adc
mov
popa
icebp
das
incb
int
in
pop
xor
adc
sub
into
popa
add
adc
pop
cmp
mov
std
mov
sbb
pushw
ja
rcll
inc
xchg
mov
movsb
das
mov
das
adc
call
fsubr
add
xchg
push
lock
push
inc
pop
sub
pop
or
sbb
aam
mov
andb
adc
mov
repnz
push
jecxz
in
mov
xchg
js
pusha
jo
sbb
inc
sbb
mov
cmp
mov
in
scas
or
jo
hlt
lods
setb
test
adc
jno
lea
loope
xor
adc
sti
sti
mov
call
loopne
mov
shr
dec
mov
outsl
ja
sahf
jp
or
fstl
ds
xchg
and
popa
adc
mov
in
or
jge
sbb
stc
xchg
sti
leave
push
mov
xchg
enter
dec
imul
push
jae
add
sar
out
xlat
adc
negb
cltd
pop
mov
sets
cltd
pop
sub
rol
test
xor
imul
jp
ret
pop
sti
orb
outsl
movsb
les
bsr
xchg
inc
mov
push
call
sbb
test
sub
mov
add
adc
add
push
xchg
sub
and
mov
push
jae
dec
ja
xchg
sub
inc
lock
mov
push
outsb
jge
push
imul
icebp
sarl
push
cmp
popf
loope
xchg
popa
lods
mov
stc
icebp
sbb
xchg
mov
add
data16
aam
clc
pop
js
cli
repz
lods
pop
icebp
aaa
and
pop
mov
test
pop
enter
add
movsb
jne
popf
fisttpl
push
and
movsl
cmc
out
add
xchg
xor
xchg
test
cld
sbbl
iret
shll
mov
jb
movsb
sbb
xor
sbb
mov
mov
xchg
pop
mov
pop
add
cmc
mov
imul
cld
shl
sub
pop
out
xor
push
adc
movsl
rclb
cmp
dec
sbb
push
sbb
push
andb
dec
fdivs
outsl
out
leave
sub
adc
jle
add
loopne
cmp
or
vpmaxsw
iret
pop
adc
push
fucomp
xchg
loop
icebp
in
andl
cmc
out
scas
outsl
push
pop
xchg
repnz
cmp
fiaddl
xor
inc
mov
fiaddl
push
pop
ja
add
lret
dec
cld
ss
mov
and
or
add
mov
add
push
lea
mov
adc
cmp
mov
out
das
add
lds
stc
pop
sub
and
mov
or
sti
sarb
nop
int
lahf
lcall
loope
mov
jmp
sbb
jg
jae
dec
mov
das
fcoms
push
pop
inc
std
mov
loop
int
xor
pusha
pop
mov
inc
mov
mov
mov
sub
cwtl
sarb
outsb
shlb
sbb
jae
cmova
mov
pop
adc
sti
ret
xlat
adc
push
xchg
push
jmp
ja
xlat
cs
push
shrl
xchg
pop
or
les
mov
adc
pop
aaa
lret
aam
popf
mov
xchg
mov
shr
cld
sub
dec
lahf
pop
cmp
icebp
inc
sub
push
push
xchg
mov
adc
sbb
and
or
cld
xor
repnz
js
dec
adc
fdivr
in
outsb
dec
js
ljmp
cmp
aaa
enter
ljmp
std
dec
jo
xchg
push
hlt
mov
inc
in
mov
mov
fnstenv
movsl
xor
outsb
inc
jnp
loope
jo
sarb
lods
adc
cmpsl
inc
or
or
lea
sub
jg
mov
sub
mov
lods
push
mov
sti
inc
rcr
lret
xchg
xchg
in
imul
pop
add
mov
lds
pop
mov
sub
es
mov
shrl
and
gs
xor
add
rol
xchg
in
jmp
ficoms
adc
lods
flds
mov
or
nop
sub
jle
fs
int3
ds
adc
or
pop
xchg
add
testb
test
cwtl
jle
lahf
mov
jl
cmp
inc
xchg
push
cmp
jbe
mov
ss
mov
shl
sub
int
in
mov
jnp
adc
jbe
addb
lahf
loope
jmp
add
dec
in
pop
jno
dec
ficompl
movsb
mov
in
ds
cmc
out
sbb
pcmpeqb
and
dec
sti
push
shlb
xorl
and
push
push
stc
andl
mov
push
loopne
jo
xor
test
mov
push
jecxz
stos
inc
rorb
inc
stc
outsl
or
sti
xor
sbb
icebp
int3
inc
pop
lahf
push
sbb
mov
mov
ja
mov
imul
mov
daa
inc
imul
leave
imull
ja
and
jae
mov
sbb
pop
jge
test
cmp
xor
jb
sbb
aad
shrl
dec
push
cmp
inc
pop
ljmp
js
lods
and
jo
outsb
test
xor
xchg
push
mov
call
dec
mov
repnz
sbb
dec
mov
sub
push
jecxz
inc
add
inc
arpl
clc
cmp
pop
sub
push
imul
ret
out
inc
and
mov
loope
dec
bound
insb
lahf
sbb
addr16
inc
jae
lock
sub
clc
jae
and
xor
fiaddl
fwait
push
jnp
lea
mov
mov
mov
jmp
dec
jmp
cmpsl
jg
int
push
jo
pop
stos
cmpsb
add
mov
cmp
push
adc
inc
cld
test
or
cmp
into
jno
ds
dec
jge
jnp
dec
je
mov
popa
lds
fstps
cld
xchg
sub
rorl
mov
popf
mov
push
cmp
shrb
gs
aam
jp
xchg
adc
aam
nop
mov
aaa
pop
sbb
pop
cli
jecxz
mov
inc
add
add
lret
jno
mov
pushf
pop
cmc
push
xchg
clc
sub
mov
mov
call
push
insl
pop
pusha
jmp
fnsave
dec
cwtl
jecxz
push
xchg
xchg
sbb
push
leave
and
push
xchg
xor
push
add
xchg
popf
pop
inc
lret
cmc
pop
sbb
fsubl
pop
add
frstor
mov
cmpsl
mov
out
repnz
jle
fists
cmp
xchg
xchg
in
and
pop
in
outsl
lcall
es
cmc
rorb
sbb
movsl
xor
and
mov
ds
mov
nop
fincstp
pop
les
inc
inc
fisubrl
inc
lds
repz
sub
and
out
mov
cmp
or
aam
in
inc
daa
jl
dec
shrb
push
daa
lods
scas
std
lret
imul
dec
cmp
inc
push
pop
lods
aaa
push
xor
mov
enter
jmp
divb
inc
ffreep
cmp
inc
and
mov
test
pop
lret
mov
adc
push
inc
cmpsl
cmpsl
add
loopne
inc
pandn
insl
in
cmp
lds
pop
aam
jmp
imul
and
loopne
testl
mov
xor
fistps
inc
in
pop
pop
adc
pushf
out
pop
cmpb
stos
fnstsw
ret
imul
pop
outsb
rorb
adc
sub
xor
fs
jl
in
jo
mov
sbb
xor
stos
fs
mov
fiadds
dec
out
pop
mov
out
inc
add
pop
daa
xor
mov
pop
sahf
push
lock
fbstp
cmp
push
out
jmp
mov
sbb
inc
int3
and
rorl
sbb
mov
loope
or
pusha
adc
outsb
pop
hlt
enter
imul
jmp
lea
aam
dec
and
lcall
scas
jmp
int3
sub
push
jmp
movsl
inc
leave
bound
and
lods
dec
stos
push
xchg
jae
xchg
and
out
xchg
mov
push
fiadds
mov
outsl
adc
fists
dec
mov
into
ljmp
in
fsubs
mov
roll
jne
in
add
das
leave
out
popa
adc
jo
shr
aad
dec
push
and
imulb
or
dec
push
cmpb
testl
pop
cmpsb
or
xor
leave
movsb
or
dec
mov
add
fstp
mov
jno
bound
test
mov
nop
pushf
sbb
mov
cmpsl
orl
popf
shll
jmp
mov
gs
hlt
imul
lahf
subb
xchg
inc
mov
movsb
shrl
mov
dec
idivl
or
ja
push
fstps
push
bound
incl
repz
adc
movsb
ss
pushf
pop
mov
data16
jae
sub
adc
push
das
xchg
std
movsb
adc
dec
jecxz
shld
fcomp
jns
jo
pop
push
in
stc
jmp
lret
mov
xor
ficoms
sti
fbstp
pop
pop
cmp
mov
sbb
aaa
push
sbb
mov
movswl
hlt
hlt
ret
xchg
subl
xor
incl
adc
loopne
popf
mov
outsl
add
push
dec
pop
adc
pop
xchg
aam
xchg
incl
ds
adc
aad
pop
scas
lret
aaa
add
cs
or
int3
int
mov
cmp
pushf
push
fisttpl
dec
and
ljmp
adc
andb
sub
adc
fdivs
mov
lods
fisubs
add
fildll
xor
xor
jno
scas
dec
fnstcw
and
push
movl
mov
inc
xchg
test
sti
pop
icebp
mov
adc
sbb
js
cli
mov
sti
insl
and
and
or
aam
mov
std
pop
push
stos
shlb
fstp
scas
jl
mov
xlat
mov
in
imul
es
test
mov
in
test
or
sub
push
cmpsl
mov
push
xor
and
ret
rolb
int3
enter
pop
jp
rcl
js
mov
xchg
cmp
fwait
and
dec
mov
es
push
xchg
xchg
sbb
push
adc
xchg
insl
andb
andl
or
adc
js
and
stc
scas
mov
fcmovb
ss
fwait
ret
fstpt
and
adc
ret
rolb
shll
xor
xchg
ror
mov
imul
test
int
xchg
bound
lds
push
loop
add
das
lret
push
lcall
aad
jge
jns
call
mov
jae
mov
push
scas
inc
mov
fstps
mov
push
clc
addl
cwtl
in
sbb
dec
lea
lods
mov
test
cltd
lcall
repz
push
iret
cmp
scas
out
js
jg
das
movsl
mov
shrb
out
xor
dec
mov
lods
aas
dec
fwait
dec
orb
adc
arpl
pushf
jl
repnz
ljmp
fcomps
fcmovne
ret
dec
lock
test
pop
or
jg
ret
xchg
repnz
inc
jecxz
in
cmp
fwait
stos
cmp
adc
dec
nopl
fldt
loope
xchg
fmul
lock
inc
inc
daa
jp
je
cmp
frstor
scas
data16
jb
fildll
pop
mov
adc
sbb
add
xor
mov
sbb
sahf
xlat
or
int3
daa
or
mov
ret
out
mov
dec
sbb
ds
pop
in
jl
jge
out
movsl
lock
xor
xor
lret
pop
repnz
sti
xor
mov
mov
sbb
inc
outsl
in
cltd
xchg
cmc
pop
mov
cmp
lock
jnp
xchg
and
jno
add
or
and
faddp
out
adc
mov
push
int
pop
addr16
sbb
cmp
mov
stos
scas
inc
xchg
ljmp
lret
sub
push
jg
repnz
dec
push
loope
pop
mov
mov
daa
mov
fdivrl
aas
or
mov
cltd
dec
push
add
adc
sbbb
adc
daa
fwait
dec
dec
in
and
pushf
lret
mov
sbb
or
inc
in
xor
hlt
imul
in
add
dec
mov
fwait
mov
test
dec
jg
inc
push
decb
mov
out
jae
jle
in
fistpl
sbb
add
xchg
mov
cmc
pop
adc
cmp
xchg
scas
jnp
sbb
rorl
add
mov
cmp
pop
sahf
add
xchg
shrl
ret
jp
sbb
aad
and
scas
xor
loop
xor
cmp
std
push
mov
pop
dec
mov
sbb
int3
je
in
or
loope
mov
lds
insb
fs
fucomi
and
mov
sbb
cmp
cmp
pop
popa
xchg
or
add
pop
stos
inc
arpl
fistps
inc
movsl
out
sub
jbe
pop
in
dec
dec
gs
ja
lret
imul
shrl
mov
mov
lret
jecxz
jnp
push
idivb
stos
sbbl
xchg
fs
xchg
jne
loope
cmp
std
mov
jl
jmp
int
inc
ret
out
mov
sti
inc
xchg
mov
inc
and
push
iret
fwait
jo
push
cwtl
and
inc
insl
mov
scas
adc
setl
gs
push
lds
stos
mov
pop
add
arpl
dec
subb
cmp
ljmp
jne
mov
arpl
data16
xor
or
mov
push
mov
jnp
rcr
movsl
dec
xor
bound
jg
test
xor
inc
rcr
or
pusha
cli
xchg
xchg
mov
addr16
outsl
mov
add
and
lods
jp
or
mov
sub
xor
scas
xchg
add
aaa
stos
int3
lods
sub
xchg
popf
test
mov
aam
push
jns
int3
cmpsb
adc
lcall
mov
mov
pop
lds
mov
scas
and
ret
mov
sahf
sub
daa
ljmp
mov
xchg
into
xchg
add
std
je
add
repz
pop
ffreep
adc
mov
mov
mov
pop
incl
inc
pop
xchg
in
dec
movsl
or
add
rcl
push
xchg
in
int
rclb
popf
xor
lock
test
and
leave
adcl
cmpsb
mov
xchg
pop
dec
stos
int
cltd
enter
push
jmp
dec
push
ljmp
and
out
jae
push
sub
sub
pop
imul
mov
push
stc
pop
negb
jge
sbb
pop
push
es
out
lods
xor
xchg
dec
aaa
jecxz
push
ds
cmp
movsb
rorl
and
ja
es
pop
dec
mov
mov
popa
mov
jmp
movsb
outsb
xor
cs
jl
sar
mov
jne
in
cmpsb
test
mov
mov
mov
mov
std
or
xchg
sub
test
movsl
cmp
sahf
fwait
xchg
mov
leave
lahf
cld
mov
pop
mov
lahf
push
clc
sti
mov
dec
xchg
adc
mov
add
adc
fwait
or
les
jmp
into
add
cli
adc
dec
adc
mov
flds
repz
xchg
mov
adc
idivl
xor
mov
js
pop
insl
les
clc
jae
add
repnz
dec
out
bound
rcll
xchg
pop
mov
push
pop
and
hlt
movsl
or
mov
sbb
cmp
sub
add
inc
push
fistpl
xlat
jbe
mov
push
or
mov
out
and
cld
frstor
mov
lods
mov
ret
dec
shl
clc
hlt
mov
sbb
lahf
push
add
pushl
mov
stos
mov
sbb
add
lret
dec
add
cmp
and
xchg
in
inc
pop
inc
xor
out
or
xor
dec
mov
mov
pusha
xchg
mov
sbbb
mov
outsl
xchg
mov
add
cli
mov
arpl
mov
gs
js
xor
pop
mov
scas
fmul
test
inc
sub
push
loopne
dec
jge
mov
xorb
sbb
or
xchg
shll
test
mov
mov
adc
shr
xchg
sarb
cs
sbb
scas
mov
test
dec
dec
sarb
pop
xchg
jle
outsl
mov
add
clc
inc
jmp
jno
jnp
xlat
imul
add
stc
push
std
xor
pop
xchg
aas
lret
sub
sub
out
fs
pop
dec
mov
jg
push
sub
pop
jge
push
jge
lret
jmp
or
mov
stc
in
push
ja
repz
rorb
xchg
xchg
push
mov
mov
and
and
insb
push
movsl
sahf
movsl
xor
pushf
xor
iret
or
lahf
dec
shrl
sub
or
jns
nop
clc
mov
mov
mov
pop
pushf
popf
je
pop
xchg
push
popa
and
dec
dec
push
movsb
add
cltd
data16
sahf
pop
fmull
or
cli
mov
xchg
addr16
sub
mov
lahf
dec
push
dec
cmpsl
xor
addr16
pop
and
pop
outsl
push
and
mov
das
pop
std
jno
insl
shl
out
lret
and
mov
pop
sub
dec
xor
pop
cld
and
mov
neg
mov
daa
inc
cmp
lret
in
lea
lret
mov
xchg
push
sbb
mov
icebp
cmp
int
push
or
in
loope
outsl
lret
xchg
rcll
aas
stos
fmuls
mov
cmp
mov
lcall
dec
xchg
test
add
lret
insl
gs
jmp
scas
in
sbb
out
data16
or
js
shrb
testb
shlb
sbb
xor
xor
pop
fwait
push
pop
rcrb
add
push
adc
incl
sub
ds
imul
mov
jne
mov
xchg
pop
divl
sahf
insl
push
test
fisubrs
xlat
or
enter
or
cmp
add
fimull
in
popf
xor
into
bound
mov
push
pop
push
pop
in
push
push
mov
sbb
jno
jbe
sub
push
or
push
dec
or
int3
adc
out
sbb
push
test
test
bound
xchg
fidivrs
lret
mov
cld
icebp
mov
idiv
pop
daa
popl
sti
fcoms
mov
xchg
lods
fwait
cmpsb
aad
insb
adc
rol
add
pop
stos
sub
inc
loope
or
fisubs
cmp
scas
xor
inc
fstpt
sub
push
dec
loop
fnstcw
inc
ret
add
mov
sub
fnstenv
or
loopne
ss
lcall
mov
push
dec
xor
add
aad
repz
imul
cwtl
sub
pop
gs
add
dec
inc
fsubr
pop
pop
xchg
cmp
jbe
cmp
cmp
popa
fldcw
out
hlt
sbb
imul
test
mov
subl
adc
roll
notb
repz
incl
dec
inc
dec
push
push
cli
outsb
pop
in
jl
mov
loopne
cmp
popf
rcrl
sub
lret
ljmp
cmp
inc
imul
cmp
lret
jo
test
push
sbb
cltd
pop
cmpsb
not
out
icebp
adc
gs
repnz
lds
ja
push
andl
push
movsb
repnz
push
outsl
push
adc
inc
loopne
pop
xchg
jg
xchg
decb
mov
icebp
jge
jg
jmp
enter
rcrb
adc
popf
test
gs
or
add
cmc
repnz
je
in
outsw
jnp
mov
repnz
inc
icebp
ss
mov
repnz
nop
sub
sti
adc
mov
fdivrs
push
repnz
or
xchg
xchg
stos
and
in
or
lods
dec
push
sarb
or
add
jg
stos
add
cmp
adc
xor
aaa
out
ljmp
pushf
fsubr
pop
xchg
je
and
daa
ds
ja
ret
fdivrl
ret
clc
stos
int3
mov
add
ret
inc
or
xchg
lret
jae
add
repnz
xor
dec
sahf
cmpsb
or
pop
jle
cmp
in
cmp
rol
repz
push
mov
scas
fnstsw
mov
jl
push
xchg
mov
sub
stos
stos
aam
sub
xchg
xchg
imul
push
dec
mov
xchg
out
dec
push
mov
daa
cmc
push
rorl
rorb
std
mov
stc
mov
lods
dec
xchg
movsb
aas
jne
cmpsl
jb
lods
rcr
pop
pop
sbb
cmpsb
cld
jbe
inc
xchg
arpl
jae
pslld
ror
pop
fbld
shl
test
xchg
iret
leave
inc
inc
ja
cmp
aaa
add
mov
fmull
adc
ret
mov
jnp
sub
mov
mov
stos
xor
xchg
mov
testb
pop
insb
mov
icebp
aad
mov
dec
push
mov
mov
jle
scas
hlt
ja
movsl
clc
adc
xchg
arpl
in
push
lret
xchg
pop
xchg
push
mov
jno
stc
and
out
test
mov
test
jo
adc
fnsave
daa
jbe
or
inc
test
push
rorl
and
xchg
fadd
inc
popa
mov
aaa
add
out
pop
xor
fsubr
dec
scas
sub
sbbb
pop
mov
lret
pop
lds
pop
or
jb
jmp
sub
sub
es
mov
cld
jo
insl
sub
lcall
insl
mov
stos
stos
xor
jns
es
fxch
cld
adc
loopne
or
jnp
and
xchg
push
dec
cli
aad
push
cmp
das
or
adc
daa
fidivrl
hlt
sub
dec
out
push
repnz
cmp
iret
pusha
pop
mov
jecxz
jle
mov
fiadds
stos
sarb
mov
push
push
mov
test
pushf
xor
jmp
inc
sarl
xor
jle
sbb
ret
pop
jnp
dec
adc
mov
mov
inc
push
int3
mov
or
daa
loop
mov
mov
es
push
scas
out
jo
punpcklbw
lahf
addr16
mov
lods
jns
push
ret
in
je
and
jle
push
or
mov
add
xchg
xor
orl
bound
ds
or
clc
dec
cmp
pop
push
nop
pop
outsl
adc
dec
test
mov
in
aas
and
mov
jns
add
jb
push
cmpb
das
mov
js
mov
sbb
movl
adc
push
sti
xchg
fbld
push
shll
ja
push
push
xchg
push
push
pop
cmpsb
fisttpll
xchg
pusha
repnz
cs
adc
in
addr16
lock
arpl
mov
into
jno
mov
int3
fcomps
pushf
in
scas
inc
and
jae
ret
xchg
or
int3
xor
mov
pop
data16
sbb
inc
xor
dec
insb
push
cmp
leave
into
and
adc
mov
pop
lock
mov
push
push
xchg
mov
sti
call
mov
sub
dec
mov
mov
pop
inc
daa
adc
inc
je
push
dec
repnz
push
pop
push
rcrb
mov
cmp
lahf
mov
shll
adc
sbb
xchg
jo
or
ds
lods
push
xchg
rcrl
je
out
sub
xor
cmp
adc
sub
movsb
iret
mov
add
aas
aas
pop
adc
inc
negl
mov
pusha
mov
out
rcr
mov
and
cwtl
jmp
enter
mov
in
rolb
js
cmpsl
cmp
scas
enter
xchg
jnp
mov
pushf
fsubl
mov
jmp
insw
insb
out
lea
adcl
xlat
movl
jge
mov
test
or
aaa
sub
ja
pop
pop
adc
das
sub
aaa
ss
adc
jmp
shlb
push
jb
jl
jecxz
mov
inc
pop
dec
push
stos
mov
dec
jg
js
mov
sahf
xchg
inc
push
mov
or
imul
cld
mov
jb
iret
mov
jl
push
cmp
fstl
cmpsb
das
ds
jbe
inc
fs
sub
lods
xor
loop
sbb
shl
push
pop
dec
lret
xor
pop
pusha
push
icebp
mov
cwtl
nop
test
cli
packssdw
aas
mov
push
addr16
pop
jno
fstl
movsb
or
aam
cmpsb
xlat
loopne
xor
jne
fldenv
add
adc
cmp
into
adc
cwtl
adc
lods
or
test
es
imul
jmp
xor
test
xchg
addb
repz
xor
scas
insb
mov
jno
and
cmpsb
out
sub
pop
lret
add
clc
or
mov
ror
pop
mov
adc
fistl
ret
mov
test
dec
lret
xor
stos
xchg
jmp
pop
mov
pop
daa
lahf
repnz
mov
jae
sub
dec
pop
call
mov
jl
sub
dec
fldenv
inc
sub
mov
js
loope
sbb
out
dec
std
mov
cmp
outsb
imul
xchg
mov
xchg
leave
sbb
pop
sub
std
push
push
lock
mov
in
lods
test
dec
cmp
inc
add
mov
loopne
jns
cmp
jbe
repz
mov
in
sar
push
jnp
sti
sbb
mov
aad
sbb
mov
ret
stos
pop
cmpsb
addr16
sti
pop
test
shrl
icebp
add
outsb
fistps
test
outsb
or
mov
pop
and
adc
cmp
sti
ficomps
xchg
cmc
fistpl
and
and
sbb
shl
pop
push
data16
lahf
push
jge
inc
xlat
push
push
scas
inc
sbb
cmp
in
xchg
mov
xor
aaa
jbe
je
icebp
int3
or
xor
icebp
pop
add
inc
pop
popf
out
inc
xor
xchg
adc
je
clc
addr16
ja
es
push
fdivr
add
divb
gs
jecxz
mov
rcr
lcall
push
nop
movsl
arpl
mov
push
push
or
add
push
leave
adc
jb
loope
mov
ds
movsl
in
je
outsl
or
std
repnz
popa
sbb
les
mov
and
cs
in
mov
dec
ret
mov
or
daa
jge
add
cmp
and
and
mov
aas
push
adc
je
sbb
add
je
sbb
cmp
mov
sub
jnp
mov
jbe
sub
push
sub
jb
push
aam
inc
push
lock
lods
jmp
stos
cs
insb
movl
or
jno
frstor
daa
and
or
push
dec
fstpt
cwtl
gs
sbb
movsl
or
sub
dec
std
cmp
cmp
stos
nop
repz
inc
sbb
and
jae
or
call
and
xor
aaa
fs
inc
cwtl
or
adc
push
movsb
ficoms
mov
movsb
jg
jne
push
out
fildl
cld
inc
sub
rcrl
loope
test
mov
cmp
mov
repnz
pop
pop
test
rcll
sub
mov
outsb
test
leave
cmc
scas
mov
jne
sub
jle
mov
xchg
xor
inc
sbb
int
xor
mov
imul
aad
cli
enter
lock
pop
mov
cmp
gs
mov
or
inc
xchg
sbb
shrl
adc
sbb
pop
xor
pop
mov
ftst
adc
dec
negl
and
pop
push
dec
insb
xchg
rcl
mov
xchg
adc
mov
pop
xchg
lds
inc
pop
fldcw
cmp
outsl
add
fs
fs
and
pop
shrb
xchg
icebp
aas
mov
xchg
sub
arpl
aaa
cld
mov
loope
icebp
push
jnp
pop
lret
pop
xor
pop
test
cltd
jmp
pop
inc
and
pop
mov
aaa
xchg
mov
or
pop
fmull
sub
xchg
sarb
jmp
jb
std
pusha
jg
add
adc
adc
inc
cmp
shlb
inc
sbb
mov
xor
and
fisubs
push
jne
pop
das
sbb
pop
negl
ja
inc
mov
xchg
iret
stos
lods
mov
xchg
pop
push
in
int
and
xchg
icebp
pusha
cmc
mov
mov
or
lods
xchg
jb
cmp
mov
movl
mov
adc
je
push
call
cmp
fldl
hlt
lea
mov
dec
leave
jne
mov
outsb
aaa
sub
in
sbb
pop
pop
adc
add
pop
scas
call
pop
jbe
xchg
push
xchg
push
fcomp
pop
cmp
pop
sbb
adc
stc
repz
push
int
fdivrs
dec
clc
and
js
lcall
pop
jecxz
ficompl
ljmp
ljmp
jmp
push
pop
insb
shrl
adcb
mov
xor
xlat
negb
fistl
jo
or
push
xchg
jb
popf
in
jp
pop
out
clc
sub
mov
jo
add
movl
fisubl
jns
nop
test
scas
dec
jecxz
inc
gs
jno
test
shll
pop
xchg
mov
jns
sahf
ret
jnp
jbe
ja
and
xchg
std
adc
aam
adcb
add
decb
mov
sbb
mov
adc
push
xchg
pop
popf
sbb
jnp
aam
pop
mov
fdivrs
xchg
mov
call
cmpsl
imul
fistl
popf
insb
mull
sub
jno
insb
xchg
xchg
lds
rolb
xchg
idivl
loope
int3
xchg
ds
and
mov
lahf
push
iret
mov
subb
xor
int3
add
rorl
outsb
xchg
mov
xchg
insb
das
push
mov
lods
mov
stc
sbb
mov
fdivl
fs
or
inc
ftst
dec
ret
mov
lret
bound
mov
insl
adc
dec
fstps
add
xchg
or
push
cmc
jmp
ret
push
lea
leave
mov
out
adc
cld
loop
and
xchg
mov
repz
movsl
in
mov
sbb
push
adc
mov
jbe
add
pop
pop
popa
loopne
imul
ret
inc
sbb
dec
mov
in
subb
xchg
add
int3
lds
lret
mov
mov
mov
in
lret
cmp
xchg
pop
fs
jl
push
mov
dec
push
lods
xchg
hlt
pop
jns
mov
out
addr16
pop
aam
mov
das
add
enter
adc
out
pop
nop
xor
cmc
js
dec
fidivl
sub
xchg
xchg
scas
mov
pop
movl
lret
decl
adc
mov
addr16
cld
sbb
lea
ja
ficomps
js
testl
cli
js
call
pop
xchg
jp
jge
gs
aam
xor
ds
out
mov
dec
mov
call
jno
mov
sbb
mov
out
or
push
adc
sub
cltd
sbb
cmpsl
adc
pop
or
inc
outsb
sub
xor
loopne
sbbb
dec
jl
adc
push
imul
inc
mov
pop
arpl
in
pop
xorb
mov
push
adc
inc
rcrl
dec
bnd
inc
aas
and
and
push
sub
pushf
loop
lods
xchg
mov
jae
mov
lods
fs
push
and
adc
test
sahf
inc
pop
js
movsb
xchg
arpl
sub
fsts
icebp
jnp
imul
les
sbb
jecxz
fdivrs
add
pop
mov
mov
out
mov
pop
movsl
pusha
xchg
or
cli
imul
pop
pop
add
jns
sbb
cmp
dec
cmc
jge
jbe
jmp
popa
pop
xor
fists
cmp
pop
inc
imul
scas
mov
xchg
inc
popa
cmp
inc
popa
jnp
jbe
add
mov
cli
sbb
test
notb
fsubrl
sbb
sbb
push
xchg
aad
jle
mov
cmp
loope
push
push
xchg
dec
les
sub
xchg
movups
sub
imul
push
and
cmpsb
cmp
je
jnp
xor
pop
ret
mov
inc
fistl
jle
test
in
xchg
mov
dec
lods
subb
clc
out
mov
mov
inc
inc
loop
pushf
or
xchg
dec
xchg
cmc
ret
adc
add
pmullw
nop
ja
inc
jle
dec
pop
sbb
xchg
js
jl
sti
out
jle
jecxz
and
add
cli
mov
push
mov
popf
push
mov
fcmovne
mov
call
lret
pop
in
xor
pop
push
rcl
xor
ds
cld
jb
push
xchg
pop
sbbb
test
inc
faddl
popf
outsl
pop
call
fildll
push
jmp
mov
cli
sbb
jge
shlb
or
mov
cmp
adc
sti
push
sub
jg
mov
push
loopne
in
mov
aad
jp
mov
push
jbe
ljmp
cmp
sub
div
push
mov
or
pushf
mov
insl
ret
cs
subb
xor
fidivrs
xchg
fisttps
in
xchg
add
lahf
dec
cmp
lods
mov
clc
jl
lds
push
shll
cmpsb
cmp
mov
out
push
pop
mov
out
lock
fisubs
fs
dec
mov
fadds
mov
mov
rcll
mov
and
scas
cmp
add
mov
cmc
lods
imul
stos
xchg
mov
cli
lds
mov
loop
int3
or
stc
imul
fwait
cs
fisubl
test
out
jne
xor
imul
loopne
push
mov
arpl
xor
add
adc
mov
mov
js
sbb
dec
cwtl
pop
adc
cmp
add
in
mov
mov
or
dec
int
jns
movsl
rcll
lds
jbe
push
mov
pusha
mov
stos
scas
xchg
sbb
push
dec
sub
jae
pushf
xor
adc
mov
fdivrp
mov
outsl
xor
fwait
ja
or
lods
cwtl
into
mov
test
mov
out
xor
repnz
into
dec
sub
jle
das
xchg
jmp
pop
das
dec
loop
inc
cli
iret
in
mov
lods
cmp
xor
ss
mov
lea
xchg
mov
stos
js
jle
push
hlt
notb
fsubs
aaa
jno
loope
mov
clc
adc
clc
mov
xor
imul
jecxz
jmp
or
ljmp
sub
sub
cmp
add
cmp
push
add
mov
cmpsb
or
adc
out
push
inc
sub
fwait
movsl
inc
dec
push
jle
mov
push
sar
jmp
repnz
ja
out
push
mov
xor
cmp
repz
scas
pop
xchg
sub
fsub
pusha
out
es
jno
repnz
adc
xchg
scas
gs
lds
add
jle
les
xchg
icebp
and
sub
pop
stos
add
pop
sub
cmpsb
mov
mov
aad
add
inc
fisttps
je
xchg
sbb
pop
mov
push
nop
sbb
inc
movsl
ficoms
ret
cmp
pop
adc
fs
jnp
mov
push
insb
push
push
fnstsw
add
scas
fisttpll
insb
xchg
mov
push
dec
xor
mov
addl
fs
inc
and
and
sbb
jl
cmp
adc
xlat
push
inc
pop
fld
sub
mov
cmp
fldenv
xchg
xor
jecxz
or
into
lret
mov
xchg
xorb
mov
out
push
popf
fldcw
xchg
pop
lods
icebp
push
hlt
or
in
xor
cs
adc
outsl
mull
iret
cwtl
sti
xchg
sbb
inc
repz
aam
push
fmull
jne
adc
jb
iret
arpl
push
fcomps
mov
push
mov
jp
iret
lods
mov
out
in
decb
jne
mov
stos
push
mov
inc
xchg
push
mov
jp
push
mov
and
xor
mov
mov
cmpsb
xchg
aam
in
push
jp
xor
movsb
out
testb
add
xchg
fistps
sub
mov
cmp
and
jb
cltd
dec
and
or
and
andb
scas
or
inc
shrl
bound
inc
test
ds
cmc
loopne
xchg
jae
mov
jne
fwait
repnz
xorl
lret
xchg
mov
mov
sub
cmc
mov
loop
int3
xor
movsl
sarb
enter
daa
std
push
pop
rorb
pop
aas
adc
lea
sarl
jbe
test
fwait
cs
pop
jp
test
mov
xor
ficomps
dec
mov
fdivrl
sbb
push
lock
mov
xor
fsubrl
mov
or
loopne
imul
pop
imul
add
das
std
cmp
ja
cltd
jo
add
in
lea
cmp
adc
mov
dec
out
mov
lret
and
out
jle
arpl
dec
jne
mov
add
arpl
in
push
inc
pusha
mov
mov
bound
or
lret
add
push
xchg
and
data16
add
inc
cmp
mov
out
out
test
clc
shll
jmp
outsb
hlt
pop
out
and
and
mov
adc
mov
cmp
fwait
xor
inc
push
leave
test
sbb
repz
and
and
xchg
push
or
push
out
dec
adc
pop
fisttps
xchg
push
mov
jle
add
cmp
das
in
ja
test
mov
pop
dec
frstor
jp
dec
lods
scas
out
inc
push
xor
clc
into
inc
cmc
push
lahf
sbb
cmc
orl
mov
add
xor
shrb
stc
loope
adc
das
fsubrl
dec
nop
xlat
sbb
loop
mov
push
scas
cld
mov
inc
dec
out
leave
pusha
and
imul
mov
jge
mov
out
ja
mov
xchg
inc
sub
lret
sbb
mov
xchg
inc
loope
bound
stos
xor
lds
pop
mov
inc
xlat
fcoms
aam
movsb
roll
insl
push
shlb
mov
push
test
adc
push
mov
stos
dec
fists
andl
sub
out
shl
pop
jl
adc
sbb
xor
arpl
jl
cmpsl
xor
xchg
lea
lcall
mov
mov
adc
sbb
or
pop
fs
pop
and
xor
loop
cs
outsl
add
fldt
leave
mov
or
mov
mov
imul
test
push
out
cmp
sbb
fs
dec
dec
jecxz
push
push
inc
ror
jl
dec
fs
pop
daa
and
les
mov
pop
and
push
int
xor
pop
mov
pop
adc
mov
inc
push
cmpsb
ret
xor
stos
mov
inc
aad
rcl
and
dec
js
sub
xchg
push
mov
xchg
or
dec
mov
mov
std
std
jnp
mov
jnp
pop
pop
lahf
lcall
sub
mov
adc
pop
shlb
mov
xchg
imul
outsl
adc
xorl
std
xor
xchg
shll
ret
dec
aas
xorl
pop
push
mov
xchg
mov
and
decl
push
pop
xchg
iret
adc
push
cmp
sub
cmpsl
xor
pop
dec
mov
mov
mov
outsb
test
insl
dec
add
flds
sub
in
call
faddl
inc
in
mov
xchg
cmpsb
xchg
and
adc
xchg
add
pushf
movsb
in
push
push
sub
and
loop
ret
shrb
shlb
and
xchg
or
daa
fcoml
mov
mov
jo
jae
call
sahf
jo
std
decl
push
out
es
mov
in
lea
sarb
push
lret
sub
fcomp
int3
iret
xchg
xchg
sub
idivl
pusha
sti
js
stc
mov
and
lea
cs
mov
dec
sub
in
jecxz
adc
pusha
mov
jns
stos
xor
mov
add
mov
pop
sahf
or
mov
sti
xchg
jmp
and
mov
mov
cmp
push
mov
fdivr
push
ret
scas
add
jecxz
jp
jb
jae
into
lods
inc
sti
xor
es
mov
sbb
add
mov
add
or
add
push
jae
arpl
dec
pop
xchg
ja
pop
je
sahf
outsb
repz
and
fcoml
pop
jb
daa
or
lods
sbb
sbb
icebp
das
data16
loopne
mov
les
imul
insb
add
adc
movsl
dec
addr16
lahf
cwtl
aas
mov
adc
lret
push
pop
xorl
out
cmp
js
aas
fdivl
es
cld
push
pusha
inc
mov
mov
adc
xlat
mov
pop
or
repz
fcmovnb
inc
and
sbbl
jns
imul
jle
or
fs
or
aad
test
and
or
jp
jle
mov
mov
shll
pop
add
jp
jo
fsts
cmpsl
dec
xchg
pop
mov
pop
movsl
cs
ret
push
and
push
mov
imulb
push
lea
and
std
insl
outsl
sbb
stc
jno
cmp
xor
inc
and
cmp
pop
mov
out
and
fs
jo
jecxz
cmc
mov
sub
clc
test
xchg
rcl
clc
adc
push
inc
lret
das
jno
push
ljmp
bnd
ds
or
and
fchs
aas
aad
in
data16
xlat
cmpsl
inc
loop
or
jnp
gs
mov
xchg
int
push
dec
ss
adc
outsb
imul
xchg
stos
mov
push
sub
or
pop
jns,pt
scas
out
arpl
mov
pop
loop
ljmp
pop
cmp
out
adc
cs
lock
add
js
or
scas
icebp
cmpsl
inc
mov
in
inc
push
out
dec
andb
mov
imul
and
icebp
lods
sahf
or
mov
dec
dec
pop
dec
scas
adc
or
pop
xchg
jge
enter
pop
jbe
mov
mov
imul
imul
mov
sti
mov
out
push
xchg
mov
sbb
and
hlt
inc
add
mov
and
xlat
inc
movsb
sub
iret
inc
add
jne
or
jbe
xchg
pusha
nop
lods
popf
cmpsl
mov
out
jnp
push
dec
jae
aaa
push
jnp
ds
nop
or
addr16
dec
or
mov
pop
or
jp
rorl
int3
inc
xchg
ja
pop
or
dec
dec
stos
xchg
sub
pusha
int
fnstsw
jmp
xorb
xchg
jne
je
cs
mov
loop
popa
mov
movsl
xchg
jle
pop
jbe
push
shrb
dec
mov
pop
xorl
out
loop
adc
cld
sub
outsl
inc
push
adc
mov
lods
push
pop
aas
dec
xchg
add
mov
push
int3
loop
ficomps
mov
scas
fisubrl
inc
rcrb
inc
test
xorb
lock
inc
imul
or
pop
mov
hlt
popf
lods
sub
sbb
and
dec
rorl
out
xor
jae
push
in
dec
notb
shlb
sub
ret
out
sbb
test
leave
dec
xor
sub
lea
test
jo
sub
lahf
aaa
mulb
push
dec
cmp
mov
xchg
jbe
push
das
dec
fisubs
mov
test
das
es
subb
push
cmp
push
dec
push
call
adc
in
or
shll
mov
inc
aaa
pop
jle
sbb
mov
orl
and
cltd
lock
jle
xor
out
data16
pop
incl
call
xor
out
push
adc
or
inc
pop
xchg
scas
insb
flds
inc
sahf
dec
mov
mov
dec
dec
sbb
lds
mov
in
out
push
xor
jle
aas
pop
mov
aas
out
jo
dec
jae
enter
addl
aad
movntq
sbb
dec
lret
dec
jle
and
les
shlb
adc
test
sub
mov
sub
mov
notb
add
pop
push
popl
fistpl
fsubrs
adc
xchg
xchg
ret
sub
sub
out
dec
xchg
mov
in
sahf
ja
in
pop
js
xchg
insb
shlb
ret
cli
popf
mov
or
jnp
mov
mov
jmp
mov
popf
push
popa
add
into
sbb
ja
scas
or
mov
in
mov
mov
daa
orl
inc
lcall
xor
dec
or
mov
xchg
imul
sbb
jmp
pop
ret
inc
nop
jmp
push
repz
fnstsw
inc
insl
mov
mov
push
fmuls
lahf
mov
mov
jge
movsb
lahf
outsl
dec
xor
lods
sbb
enter
xlat
lret
fmuls
sti
insl
sbb
cld
lods
mov
fldt
jnp
mov
cmp
stc
xchg
pushl
aaa
lods
outsb
js
insb
test
mov
inc
add
test
dec
xchg
in
pop
and
scas
cmp
or
and
mov
shlb
push
fs
sbb
jbe
dec
test
mov
dec
push
fildll
pusha
pusha
mov
adc
mov
outsl
insl
in
add
push
mov
mov
pushf
fisttps
cmp
push
adc
add
in
shld
push
push
mov
inc
sub
cmc
movsb
out
push
bound
cmp
dec
mov
inc
sbb
popf
in
repz
pushf
in
mov
bound
lea
mov
out
int
arpl
dec
jg
jg
or
bound
aad
mov
std
push
sub
rolb
test
jp
mov
push
les
rorl
jb
lahf
lcall
xor
push
lock
or
sbb
push
push
lgs
movl
or
mov
xor
push
stc
jp,pt
fnsave
xor
mov
out
sbb
adc
decb
jbe
lods
mov
shlb
jno
int
idivl
loopne
loope
xor
aas
jne
jl
push
mov
jno
adc
insl
xchg
jg
pop
cmp
mov
mov
aam
imul
mov
dec
leave
mov
stos
aaa
mov
je
add
fadds
jl
dec
fiaddl
cmp
outsl
pop
repz
les
lods
mov
rclb
or
sbb
jl
xor
ret
pop
mov
xor
mov
adc
fidivrs
mov
adc
testl
add
sbb
mov
in
adc
cwtl
inc
push
mov
add
xchg
mov
jmp
out
outsl
sbb
xchg
cmp
sub
loope
sbb
xor
sbb
sti
adc
outsl
push
inc
sbb
loop
insl
or
stos
xor
int3
xlat
cs
sub
out
fsts
dec
or
fldl
ret
pop
ret
bound
push
and
ficomps
mov
xchg
xchg
and
mov
dec
jnp
test
pop
and
shll
cmp
pop
push
loopne
add
pop
mov
ficoml
sbb
jecxz
movsl
jo
ljmp
mov
ss
sbb
scas
jle
cltd
insl
mov
or
shl
jmp
add
jmp
into
jmp
inc
pop
jecxz
xchg
jmp
cs
push
popa
mov
sub
xor
push
jno
jecxz
and
jae
sub
out
sub
mov
aad
mov
ss
push
add
out
movsl
ljmp
movsb
inc
scas
xor
push
mov
insb
ret
ror
push
sub
jmp
mov
xlat
repnz
fcompl
aam
scas
cmc
insb
movl
add
fsubrp
bound
sarb
xor
adc
movsb
jle
push
pop
lret
sbb
loopne
loope
movsl
stos
loopne
dec
orl
sbb
data16
enter
fsub
add
jnp
clc
mov
dec
das
mov
cmp
xor
push
arpl
xchg
gs
bound
mov
and
shrb
xchg
lds
xor
xchg
rorb
mov
push
mov
xchg
cmpb
add
pusha
and
outsb
jp
lds
dec
clc
and
push
push
sub
pushf
data16
sahf
cmp
stos
negb
int3
mov
mov
inc
sub
orps
adcb
fadd
rol
mov
movsb
bound
pusha
jl
pop
xorb
movsb
scas
aas
daa
lock
push
movsb
rorb
dec
lcall
xor
inc
push
cmp
mov
sub
inc
dec
sbb
clc
mov
adc
fldl
dec
stc
cmc
rolb
ret
jmp
mov
pop
pop
jl
fs
int3
mov
subb
adc
jg
leave
sbb
testl
clc
and
mov
orl
lds
push
sub
iret
out
xchg
call
cmp
sbb
js
mov
mov
lds
mov
xor
mov
sub
sti
jl
std
in
pop
push
xchg
add
test
pop
aad
add
mov
cld
lods
cmp
or
mov
mov
cli
push
shr
push
pop
repz
fs
adc
pop
loop
push
jg
dec
inc
pop
movsl
leave
fcmovnbe
mov
push
mov
into
ljmp
pop
pop
inc
sub
jne
xor
loope
clc
inc
push
adc
push
nop
ljmp
push
ds
dec
testb
cmp
in
xchg
push
out
mov
adc
mov
xchg
rorb
aaa
rorb
push
fstpl
pop
pop
sbb
stos
rcrl
addr16
stc
jle
mov
in
xor
xor
ficompl
and
in
stos
mov
ds
mov
xchg
dec
inc
mov
add
or
pop
jnp
es
push
call
loopne
push
out
scas
mov
inc
daa
sub
imul
cmc
or
frstor
pop
xchg
insb
loop
gs
pop
inc
nopl
fistps
daa
jnp
jmp
sarb
cli
clc
sbbl
ja
cli
add
fninit
cli
and
xor
sub
add
ja
jno
mov
pop
pop
xchg
ds
pop
inc
cli
aaa
and
fildl
ret
or
mov
mov
mov
xor
sub
scas
cmp
xor
insl
fsubrs
xor
mov
popf
dec
hlt
pop
or
sbb
xlat
adcl
xor
sub
inc
xchg
push
pop
inc
mov
pop
mov
sbb
jnp
pop
or
adc
scas
repz
xlat
cmp
xor
lods
and
test
pushf
mov
mov
stos
aas
je
push
add
xor
pushf
inc
xchg
out
js
lret
adc
lea
ret
ret
fisubl
jle
jne
bound
sahf
push
jne
add
dec
outsb
shr
lret
cltd
pushf
xchg
add
test
add
and
mov
leave
add
sbb
adc
arpl
cli
mov
lcall
jl
test
shlb
push
adcb
xor
xchg
and
push
sbb
sbb
mov
movsb
mov
sti
std
pop
and
jne
push
shr
out
adc
sub
ret
in
outsb
fisttpll
sub
lret
das
dec
test
lret
dec
addr16
add
ret
or
leave
jl
mov
sub
dec
mov
xchg
cmp
loope
xchg
test
sbb
push
orb
enter
dec
xchg
loope
sbb
lds
loop
cmpsl
jle
lahf
pushf
push
data16
clc
mov
fdivs
jmp
mov
inc
ds
xchg
lock
push
or
test
loopne
test
mov
push
in
or
jge
push
adc
mov
inc
or
pushf
orb
xchg
xorps
pop
call
adc
loop
dec
xor
imul
inc
add
lret
push
cmp
jge
stos
jl
jbe
jmp
lret
dec
loop
das
cmp
popa
xchg
shlb
jo
cmp
imul
mov
out
or
and
xchg
cmc
ja
lock
pop
lahf
dec
dec
ret
nop
in
push
ds
mov
jne
mov
or
cld
sub
sub
fstpl
ds
test
and
sub
imul
lcall
cs
loope
mov
adc
ror
sub
inc
pop
rclb
sahf
lret
mov
push
popa
inc
lds
xchg
insb
not
sub
lea
das
rol
push
and
cmp
inc
imull
cld
mov
xchg
push
mov
mov
dec
out
sbb
push
push
das
or
enter
into
call
mov
gs
push
jae
sbb
xchg
aad
push
sbb
inc
fdivrl
fmuls
mov
sahf
inc
stos
xchg
mov
jmp
je
stc
xchg
decl
push
enter
iret
orl
jl
push
sub
imul
out
lret
xor
jb
scas
bound
sti
dec
cwtl
repz
inc
cmp
in
ret
dec
mov
adc
xchg
inc
icebp
addr16
or
sub
adc
aaa
pop
sarb
jle
pop
lods
ds
movsb
imull
addr16
roll
push
push
pop
mov
mov
jle
inc
push
lock
outsb
outsb
push
mov
movsb
dec
outsl
imul
fdivl
aam
pop
idivb
sarb
mov
stos
ds
mov
dec
mov
mov
iret
push
imul
add
movsb
mov
mov
xor
imul
or
fisubrs
sbb
add
int3
outsb
jl
mov
push
ja
in
mov
out
sbb
xor
pop
add
xchg
subl
or
or
xor
xchg
lcall
jno
arpl
dec
ljmp
inc
ljmp
sub
pop
shrl
and
cmp
cmc
loope
dec
fnstcw
dec
es
std
sub
decb
in
adc
inc
or
or
push
sahf
orb
insb
pusha
adc
and
dec
out
mov
hlt
mov
and
out
pop
mov
shll
inc
inc
cmp
shll
loopne
adc
dec
pop
loop
mov
sub
imul
mov
aaa
in
mov
loop
jl
xor
sahf
mov
pusha
sub
cmp
xor
es
dec
aad
cmp
stos
pop
pop
lock
mov
jns
jp
or
shrb
fadds
fdivrp
js
lock
ret
cmp
mov
cli
aad
es
ret
sarb
es
imul
pop
jae
mov
fisubl
xchg
or
jecxz
setge
push
adc
cmp
inc
pop
in
adc
mov
add
lock
jae
pop
cmpsb
mov
test
cmp
es
or
sbb
xor
add
arpl
scas
mov
rcrb
mov
cs
lret
fst
xchg
fs
xchg
cmpsb
lahf
add
cs
imul
mov
jecxz
sub
fnstenv
push
loopne
pop
adc
les
jno
adc
push
int3
mov
sub
xor
mov
cmc
std
or
cmp
das
cs
jns
jae
push
push
mov
or
int
ja
enter
mov
insb
push
pop
xchg
dec
lds
inc
mov
xor
mov
or
mov
outsl
push
loopne
xchg
movsb
hlt
jge
pop
mov
dec
out
aam
adc
mov
jnp
pop
idiv
fisubrs
pop
push
loop
adc
inc
and
inc
nop
and
mov
or
sub
xchg
sub
shrl
test
mov
test
mov
js
imul
rol
pop
loope
sub
mov
add
call
repnz
mov
or
pop
loop
xor
loope
mov
sbb
sbb
dec
mov
mov
into
aas
in
push
movsb
and
pusha
or
sub
lock
push
push
and
mov
jns
mov
aad
add
mov
push
insl
movsb
mov
sbb
aam
mov
cmp
sub
mov
dec
cli
add
add
sahf
aaa
ficoms
rcr
and
push
rorb
test
inc
push
jle
arpl
inc
cli
mov
add
xor
sub
push
or
scas
inc
mov
add
outsb
inc
cmp
aaa
mov
sbb
lods
push
aam
or
clc
mov
inc
sbb
add
fidivl
addr16
pop
adc
das
in
mov
shr
and
jecxz
ror
jnp
shlb
dec
ret
adc
out
mov
push
pop
sbb
add
lret
enter
pushf
jmp
es
sub
sub
mov
lahf
sbb
jo
imul
gs
fld1
pop
mov
mov
cli
pop
out
in
xor
addr16
pop
fmulp
jmp
ja
fsubp
sub
xor
aaa
popa
push
movsb
cli
inc
cmp
sbb
sub
fiadds
jmp
push
jl
imul
jb
data16
or
out
mov
movsb
dec
pop
push
add
dec
add
inc
fisttpl
sbb
iret
stc
jge
push
cmp
push
adc
push
call
and
xor
xchg
mov
xchg
mov
xchg
shl
out
je
sbb
nop
jb
adc
or
imul
divl
adc
pop
leave
popa
sbb
cmp
xchg
fwait
icebp
daa
xor
push
test
and
daa
pop
xor
add
fistl
pop
sbb
cli
cld
xor
inc
inc
add
into
push
mov
lds
scas
imul
jns
scas
pusha
jnp
add
fdiv
dec
mov
mov
mov
mov
jle
sbb
insb
stos
mov
xchg
out
pushf
cmp
mov
jmp
aas
pop
xor
out
add
hlt
cltd
repz
pop
sbb
adc
hlt
jecxz
in
ja
aaa
mov
xchg
adc
jo
or
lret
shl
sub
ret
inc
mov
push
dec
dec
pop
je
and
xchg
sub
and
aaa
pusha
call
xor
cwtl
mov
ds
dec
out
mov
cmpsl
sub
imulb
push
jne
xlat
cmp
inc
xor
das
cli
inc
and
fdivs
xor
data16
sbb
xchg
js
mov
shl
in
jo
sub
lret
lret
push
mov
mov
leave
mov
cmpsl
mov
repz
xchg
cmpsl
push
push
and
test
jge
fisttpll
mov
dec
cmp
dec
je
push
gs
arpl
test
scas
xor
sbb
xchg
or
fistl
sbb
sti
adc
jb
mov
test
sub
dec
cmp
mov
sti
aad
loope
icebp
mov
jg
mov
sarl
xor
mov
xchg
shlb
int3
inc
or
pop
push
call
mov
or
jmp
ret
test
in
push
xchg
imul
cltd
adc
out
and
xlat
in
sbb
lret
push
pop
rol
and
dec
cltd
lahf
enter
push
push
jge
aas
jne
xchg
or
jne
push
sbb
mov
popa
negb
js
test
movsl
ljmp
movsl
mov
push
and
jecxz
test
mov
push
inc
dec
dec
jle
add
sar
pop
iret
stos
xchg
and
shlb
ja
adc
fcoml
mov
push
dec
or
cwtl
shll
mov
and
mulb
imul
mov
cmc
xor
or
loop
test
jle
cmp
aam
xchg
outsl
jg
sbb
inc
in
fwait
adc
ljmp
jmp
subb
mov
xchg
and
insl
mov
out
ds
xor
jmp
push
loop
or
lock
out
cmp
push
pusha
push
rcll
xchg
push
fisubrl
sti
sub
sub
xlat
or
jle
repz
or
mov
popa
push
jnp
test
in
in
sbb
cltd
sti
add
sbb
fidivs
xchg
inc
test
xchg
lahf
pushf
sbb
sarl
gs
jbe
lods
dec
mov
dec
out
push
push
loop
mov
je
jns
sarb
std
cmp
lock
push
ret
cmp
xor
sub
dec
push
mov
subl
add
lret
lods
es
xchg
in
pop
mov
and
aas
icebp
xchg
fcoml
pop
pop
jne
jo
push
mov
lock
pop
push
dec
lds
jp
mov
aam
js
clc
pop
sub
inc
xchg
adc
ja
shll
das
cmp
cltd
scas
add
fcmovbe
pop
in
push
leave
jmp
xor
push
popa
imul
sbb
out
movq
jns
or
and
pop
ret
in
rolb
and
fdivl
adc
fbld
in
pop
icebp
gs
rcrl
xor
inc
push
arpl
inc
cmpsl
push
fwait
add
aaa
adc
xchg
xor
pop
arpl
loope
je
inc
cmpxchg
dec
and
inc
xor
bnd
stc
mov
ljmp
jbe
cmp
leave
cli
ficomps
cmp
mov
dec
hlt
pusha
jmp
sbb
in
repz
inc
rcrb
repz
mov
shrl
jecxz
dec
jns
sarl
out
test
dec
enter
insb
add
ds
xchg
and
gs
cmpsl
stos
mov
bnd
adc
mov
xor
popa
adc
lds
add
dec
mov
ror
add
or
and
push
xor
mov
add
inc
ja
stos
pop
or
popa
cld
in
imul
cs
ss
notl
fsubs
cmpb
xor
xchg
mov
and
cmp
xor
out
test
pop
add
push
dec
mov
push
stc
or
add
loope
fwait
scas
popf
mov
pop
into
out
hlt
inc
jne
ret
int
leave
pop
fnstenv
jnp
xchg
jne
push
and
js
ss
cmp
outsl
pop
lcall
test
push
nop
mov
lret
outsl
lret
data16
pop
push
in
incl
movsb
xor
push
cmpsl
cmp
jbe
mov
cli
jmp
bound
and
xchg
pop
mov
pop
cli
out
popa
jg
push
bound
popa
xor
movsb
cmpsb
adc
push
push
test
jbe
fsub
pop
es
pop
mov
jo
xchg
mov
ss
mov
aas
lret
push
jmp
rcrl
testl
jns
xchg
ja
xchg
loopne
jns
jmp
push
or
fistpll
std
dec
test
outsb
xchg
dec
mov
mov
lahf
or
lock
pop
jge
je
mov
aaa
imul
add
xchg
sub
bound
in
jo
and
jb
js
cmpb
outsb
push
sbb
imulb
lcall
push
mov
rclb
cli
or
lret
pop
adc
cmpsl
and
jo
mov
cmp
jo
cmpsb
push
outsl
and
or
pushf
das
xor
sub
jne
aad
jmp
xchg
test
fcmovnu
xchg
xor
jecxz
imul
popa
mov
orl
aas
dec
jecxz
cmpsl
iret
cmp
mov
lcall
mov
sub
nop
pop
sub
sub
jno
add
dec
jb
jmp
add
mov
aam
mov
jecxz
stos
adc
stos
jae
call
scas
icebp
sub
movsl
in
adc
jle
push
xchg
and
int
and
dec
dec
nop
and
lds
pop
sub
in
dec
mov
jmp
add
test
cmpsl
insl
mov
pop
cli
cs
ljmp
outsb
sub
xchg
shll
sbb
je
sarl
xor
mov
and
lcall
dec
addr16
fsub
pop
sub
aam
popf
leave
das
pushf
pop
fiaddl
push
ljmp
iret
insl
mov
sbb
cwtl
call
fistpl
scas
dec
pusha
jno
sbb
cmpsb
loop
leave
jns
xchg
out
cltd
or
push
fcmove
sahf
pop
inc
mov
xchg
fdivs
in
push
nop
pop
mov
jle
lea
mov
adc
push
mov
sbb
mov
mov
add
mov
cs
int3
fcomps
cmp
jge
loope
mov
ret
fldcw
or
sub
xchg
mov
clc
lock
sub
loope
dec
rcl
inc
pop
out
mov
pusha
or
lea
ja
lcall
int
jnp
jge
mov
mov
push
outsl
cmp
div
mov
mov
push
rorl
lock
or
mov
inc
xchg
frstor
adc
lods
xchg
arpl
mov
lret
jmp
xchg
push
adc
mov
or
ret
mov
push
je
push
sbb
add
pop
lahf
pop
mov
shlb
jbe
jg
mov
inc
push
push
push
jno
adc
cmpsb
and
cmc
cmp
js
mov
sub
jo
add
mov
jae
seto
mov
adc
cmp
mov
into
dec
stos
sbb
jnp
ds
push
push
xchg
xchg
push
pusha
or
fiaddl
push
js
mov
or
repnz
test
xchg
lock
cmp
mov
call
cmp
rcrl
adc
ljmp
lret
cmp
mov
mov
imul
inc
mov
in
add
lcall
mov
sub
mov
lcall
sub
push
inc
testb
mov
mov
pop
adc
mov
cmpsl
lea
test
push
sbb
jle
cmpsl
test
inc
pop
jge
mov
repnz
sub
cltd
mov
pop
pushf
jns
adc
in
lods
pusha
movsb
pop
jne
pop
daa
xor
inc
mov
mov
or
inc
popf
addr16
lcall
xchg
rcll
push
fidivrl
dec
in
cwtl
sahf
xchg
loopne
jnp
cli
ret
jg
or
sti
mov
jp
adc
jl
inc
inc
insl
out
sbb
lods
fwait
push
shl
push
ret
mov
mov
movsl
xchg
inc
repnz
stc
xor
rorb
xchg
push
xor
and
push
sub
sbbl
data16
adc
dec
jmp
add
add
cld
jge
jae
in
mov
mov
xchg
mov
jl
jno
jl
sub
xchg
fcoml
inc
fidivrs
jle
mov
movl
and
ljmp
je
pop
int
jae
mov
gs
pop
sbb
test
out
and
fs
pop
or
sub
push
jne
outsl
int
fwait
sahf
inc
inc
sbb
xchg
push
movsb
cmc
repz
inc
add
icebp
lods
idivl
faddl
cld
sub
dec
mov
popf
push
and
pop
fcomps
jne
mov
int
in
adc
or
insb
fucomp
fs
jne
not
mov
aas
mov
or
lds
pop
pop
pop
mov
arpl
push
sub
in
repnz
jecxz
pop
dec
dec
cltd
popf
push
sbb
mov
dec
shlb
fs
ljmp
fdivr
jo
dec
pop
jnp
fwait
test
pop
mov
aam
jae
loope
fldenv
aas
lock
cmp
arpl
es
add
mov
jnp
add
xchg
lret
loopne
push
fs
clc
gs
ret
in
sbbl
ret
inc
clc
rcll
repz
fisttpl
shlb
inc
cmp
cli
inc
and
or
movsl
push
dec
lahf
movsl
xor
movsb
xchg
stc
xor
pop
lods
xchg
adc
fistps
cmp
push
dec
mov
outsb
and
mov
xor
sub
jle
mov
aad
imul
ret
popf
rcll
xchg
adc
push
ds
shll
sbb
cld
std
xchg
cmc
pushf
je
lods
pushf
sub
xchg
gs
inc
xchg
fs
mov
xchg
cmp
and
rcrl
push
movsb
dec
mov
mov
lods
insl
mov
add
mov
das
loopne
subl
add
fldcw
push
jne
jmp
sub
and
mov
sub
dec
adc
cmpsl
test
push
pop
out
pop
cli
sbb
stos
and
push
out
push
stos
fmull
adc
pop
mov
fisubrl
sub
sub
or
pop
push
scas
cmpsl
mov
jp
adc
jp
test
pop
xchg
pop
jle
in
jne
pop
shr
jno
mov
jmp
fisubl
ds
fwait
adc
notl
bound
scas
subb
sbb
fisttpl
sar
add
lock
fdivr
rcr
hlt
je
iret
scas
xchg
mov
sahf
or
stos
jecxz
mull
fadd
shl
les
jb
pop
or
in
mov
xchg
jl
aaa
test
jbe
repnz
jecxz
xor
sbbl
push
sub
ss
xchg
aad
push
mov
push
addr16
insb
icebp
movsb
adc
sub
orb
dec
push
adc
xchg
mov
adc
jecxz
int3
cmp
sbb
pop
sbb
xchg
inc
loopne
mov
push
sahf
sub
mov
nop
sbb
test
mov
xchg
and
mov
xlat
pop
and
mov
mov
popl
lret
cmp
movb
jne
shll
push
xchg
jno
push
xor
test
cs
pop
subl
xor
xchg
sub
out
out
je
iret
pusha
mov
ljmp
cltd
or
inc
xor
inc
dec
mov
push
jnp
sarl
into
enter
rclb
add
push
inc
nop
xor
ficoml
add
jns
jle
inc
or
rorl
fnsave
cmp
ss
xor
jmp
and
pop
sahf
das
shrl
dec
sbb
outsl
mov
shrl
jmp
mov
cmpsb
imul
data16
loopne
pop
add
test
in
lds
divb
mov
dec
xor
sub
cmp
jnp
int
xor
and
cmp
jmp
pop
outsb
sbb
repnz
aas
sbb
inc
sbb
cs
fcoml
mov
jle
cld
insl
bound
test
inc
fildll
xchg
fwait
mov
add
lret
popa
mov
fistpll
xchg
adc
mov
stos
adc
js
or
push
push
sbb
add
insb
dec
cmp
add
or
aad
mov
rclb
dec
mov
mov
sub
or
cmp
int3
pop
xchg
pop
loope
hlt
inc
adc
lods
and
nop
out
lret
mov
cwtl
jbe
xor
jl
cmpsl
jb
pop
or
jae
lods
or
outsb
sti
mov
jnp
push
or
test
lods
jmp
int
hlt
xchg
inc
iret
pop
mov
repnz
mov
adcl
push
fxch
movsb
and
xchg
dec
fstl
js
and
fs
popa
sbb
inc
xchg
add
aas
and
les
cmp
cmp
lds
lea
scas
jecxz
mov
push
js
test
ss
aas
fisttpl
pop
push
lock
xor
pop
or
cs
or
iret
scas
mov
dec
and
sub
mov
fldt
push
icebp
or
lea
push
pop
cli
jl
sbb
scas
mov
jl
out
call
mov
and
adc
pop
mov
lret
pushf
mov
nop
add
xchg
mov
jb
xchg
dec
push
dec
inc
xchg
xchg
add
movsb
mov
mov
popa
aad
arpl
add
cld
push
mov
insb
sub
pop
daa
pop
xchg
ljmp
and
popa
inc
adc
and
insb
and
sub
orw
mov
in
loopne
push
andl
sub
pushf
inc
lods
xor
fcoms
jecxz
jo
cmpsl
cmc
fcmove
xchg
mov
xchg
and
lcall
call
adc
repz
sbb
cmp
push
push
rorb
leave
sbb
jae
inc
dec
pop
lods
adc
lods
mov
insl
jne
lcall
jnp
jo
sbb
pop
jp
repz
mov
xchg
cli
cmp
popf
sbb
and
xchg
roll
cmp
arpl
adc
mov
cmc
jmp
lock
scas
push
jo
loop
mov
std
dec
push
out
cmpsb
mov
cmp
adc
pop
xchg
imul
and
pop
cmp
or
insb
sti
jne
push
adc
ret
pusha
cld
mov
mov
orb
repz
into
jae
sub
push
sahf
repz
sbb
movsb
hlt
lcall
clc
sbb
sbb
daa
sub
sbb
cmpsl
mov
shl
cmp
notl
or
and
mov
stos
lahf
pop
nop
fcompl
ljmp
in
inc
mov
lret
pop
popa
xchg
lcall
and
and
push
mov
push
and
jg
cwtl
pop
mov
gs
mov
arpl
cltd
fnstcw
push
mov
cmp
cmp
sub
mov
pop
dec
loope
lcall
add
dec
loope
cmp
repnz
sahf
les
pop
push
xchg
cld
fwait
clc
inc
loope
jmp
and
pop
xchg
jmp
push
cmp
or
into
mov
andl
lods
mov
dec
lret
push
sti
cltd
xlat
bound
mov
js
or
adc
lods
dec
mov
or
and
xor
and
mov
imul
jp
mov
insb
push
insl
or
inc
bound
xor
push
loop
mov
popa
push
xchg
aad
or
dec
dec
push
mov
xchg
ret
or
or
movsb
ds
xchg
jae
or
enter
punpckhdq
and
dec
adc
mov
mov
int3
in
mov
sub
cwtl
inc
push
add
mov
hlt
jnp
mov
dec
cmpsb
xor
push
ret
cmp
adc
addl
lock
out
fcompl
lea
outsl
nop
sub
xchg
nop
mov
fidivs
push
jecxz
scas
cli
in
cmpsb
scas
iret
cmpsb
inc
mov
mov
cld
ljmpw
cmp
mov
shld
push
pop
lret
leave
out
pop
jno
pushf
cmp
xchg
sub
scas
in
xchg
hlt
dec
xchg
add
shlb
imul
pop
sbb
int
fbld
cld
lahf
iret
push
and
ljmp
mov
lea
dec
jle
xor
mov
dec
in
xor
stos
and
cmc
cmp
sub
hlt
and
jg
jecxz
or
xor
into
arpl
clc
js,pn
sbb
aam
jno
popa
inc
cltd
mov
xor
cmp
lahf
or
xor
push
xor
jne
test
scas
shrl
leave
iret
aad
inc
inc
xor
jecxz
xor
dec
imul
fcompl
ljmp
cltd
int3
inc
aaa
jecxz
xchg
in
fimull
dec
xchg
sbb
mov
mov
aaa
dec
je
stos
out
sti
pop
out
push
cmc
pop
pushf
outsl
cs
pop
mov
sbb
mov
mov
mov
fwait
mov
scas
fnstsw
inc
int3
mov
scas
push
icebp
iret
or
test
lret
xor
mov
stos
and
pop
pop
movb
movnti
rcl
stos
leave
sbb
pop
push
mov
xlat
lods
jnp
push
das
jbe
xchg
and
dec
lods
sti
inc
js
mov
leave
in
pushf
dec
mov
mov
enter
mov
sub
jp
mov
cmp
push
xor
and
add
or
mov
js
fbld
insl
stos
dec
mov
and
rcrl
test
cmp
ret
mov
sub
cmp
into
subl
add
jp
cld
outsl
mov
shll
in
movsl
inc
andl
ret
mov
lock
sbb
test
insl
stos
sbb
xor
les
xchg
lret
pusha
jne
data16
dec
mov
scas
push
lret
jle
mov
add
adc
inc
stos
incb
arpl
outsb
movsl
ret
sub
inc
add
fdivl
xchg
aas
je
cwtl
pop
fidivrl
loopne
in
xchg
jge
and
data16
mov
rcl
jmp
or
in
shrl
push
inc
fimuls
stos
sti
lock
push
out
jge
fldl
pushf
ret
iret
insl
cld
outsl
adc
nop
jmp
aad
aam
mov
ret
jl
add
inc
add
popa
out
dec
mov
xchg
xchg
scas
test
jbe
sub
mov
mov
test
nop
loop
sbb
push
out
ljmp
in
xor
mov
imul
mov
inc
outsb
lret
jnp
frstor
ror
lods
hlt
ljmp
pop
sti
add
js
test
jno
lret
xor
push
jmp
or
mov
and
les
or
fiadds
add
nop
jge
jge
sti
mov
mov
mov
das
mov
cmp
dec
mov
addl
jnp
cmc
cmpsb
jle
lock
fadds
stos
inc
cs
sbb
insl
and
push
mov
stos
adc
fildl
sbb
dec
fadds
imul
pushf
jne
jno
mov
dec
out
nop
rcrl
pop
lret
fnstenv
mov
sbb
or
or
call
pop
mov
rorl
nop
sbb
cmc
in
test
add
xor
out
mov
jns
arpl
mov
bound
loopne
push
popa
lds
int
sbb
ret
adc
rorb
js
xchg
addb
nop
mov
loop
mov
adc
sbb
imul
pop
or
and
mov
stos
add
push
push
mov
mov
mov
outsl
add
add
adc
cmp
xor
jns
fcmovnu
xor
das
test
pop
outsb
inc
inc
ljmp
scas
call
jae
out
or
mov
xlat
inc
je
ds
or
jmp
sub
ret
aas
lock
jae
iret
lcall
xchg
push
jle
push
aam
add
lahf
jbe
into
mov
jno
mov
push
or
repnz
pop
test
inc
mov
push
sbb
pop
sbb
pop
jle
lods
mov
sub
lcall
or
out
insb
pop
subb
aaa
mov
ss
lods
in
andl
sub
dec
push
call
add
fwait
ret
dec
gs
movsb
iret
inc
int3
xor
xchg
pop
lret
imul
clc
inc
push
xchg
fstp
xor
insl
ret
pop
mov
insb
mov
mov
sub
lret
inc
xchg
int
and
push
xchg
inc
add
mov
or
mov
sbb
add
cwtl
dec
push
je
idiv
mov
sahf
mov
inc
mov
jecxz
jmp
stos
inc
dec
mov
mov
xchg
inc
dec
mov
mov
push
loopne
sti
fldl
mov
mov
incl
loope
jne
push
jmp
push
pop
jle
mov
pop
cmpsl
mov
xor
mov
out
mov
fwait
insb
ja
add
outsl
sub
ds
fs
jnp
lret
xor
push
flds
dec
sbb
arpl
lret
mov
mov
sti
mov
lea
fincstp
mov
mov
clc
pop
cs
js
sbb
cmp
and
ljmp
jno
imul
xor
mov
out
in
imul
test
cmp
rcrl
enter
cmp
fcomps
xchg
inc
push
pushf
call
xchg
out
daa
icebp
aaa
dec
lds
ficoml
sbb
out
ljmp
xchg
rorb
jnp
sub
lods
sub
mov
fdivrl
xor
lret
es
loop
fsubrl
ret
fwait
int
in
rol
cmp
fnstcw
fdivr
mov
sbb
dec
cmp
cmpb
icebp
pop
inc
test
jns
lcall
fldenv
jae
popa
dec
jg
ret
stos
pop
jnp
rsqrtps
inc
pop
sub
mov
mov
add
mov
xor
neg
ljmp
push
stc
push
sbbb
movsb
pop
pop
mov
jne
dec
fisubs
mov
aam
sub
or
and
rorl
adc
cltd
stos
jp
es
xchg
arpl
aaa
xor
sub
mov
jle
dec
aas
inc
jecxz
sub
xlat
aaa
outsb
hlt
movsl
cs
and
xchg
movb
xchg
and
push
add
popf
fcmovb
push
imul
fldt
and
negb
jae
adc
pop
xchg
bound
push
dec
xchg
mov
cmp
popf
push
push
push
lahf
scas
mov
aam
jb
scas
or
cmp
or
xchg
jae
scas
xchg
loop
insl
or
push
insb
or
and
arpl
jne
sbbb
mov
mov
mov
cmpsl
jge
lahf
push
rclb
cld
shll
lock
mov
stos
cmp
mov
mov
mov
or
mov
daa
jns
daa
in
shlb
adcb
push
adc
inc
je
cld
sbb
popf
and
cmp
incb
lods
orl
jnp
js
mov
add
mov
mov
sbb
cmc
sub
lods
cmp
cmpsb
or
add
push
and
fimuls
dec
or
fisttpl
mov
cmpb
insb
lds
mov
cmp
push
rcll
hlt
ret
push
loope
pop
jmp
test
sub
movsb
xchg
jo
rclb
pop
in
in
xchg
repnz
outsl
icebp
dec
xor
cmpsb
push
sahf
std
test
daa
cmpsb
adc
out
lea
mov
stos
or
sbb
jg
ror
sbb
mov
insb
lret
out
out
mov
dec
fs
jecxz
rcl
clc
cwtd
and
daa
icebp
aam
mov
fs
std
in
test
or
loopne
jg
fcoml
xchg
xor
add
addr16
cmp
outsl
pop
fwait
das
ljmp
add
fisttps
int3
loope
int3
jns
movsb
stc
cmpsl
fwait
jb
mov
inc
sbb
xchg
mov
mov
jae
addr16
int3
sub
ja
loope
scas
sub
stos
loopne
mov
jb
push
repnz
iret
mov
mov
fsts
clc
lret
jp
bound
arpl
bound
xchg
rep
add
pushf
adc
and
jle
lods
std
leave
push
mov
mov
inc
sbb
dec
enter
and
cmp
mov
dec
mov
sahf
inc
or
add
aad
add
pop
mov
and
insb
inc
aad
inc
cmpsl
lds
pop
or
adc
mov
cmpsb
mov
lock
ja
das
xor
dec
test
nop
jl
test
dec
jns
mov
add
push
inc
jge
jl
lods
dec
push
dec
xor
adc
push
pop
test
inc
adc
movsl
or
xor
pop
popa
xchg
mov
lock
mov
dec
into
lock
test
mov
lcall
mov
mov
pop
js
stos
jge
sahf
bound
lods
shll
jp
scas
pop
pop
lahf
mov
xchg
stos
stos
gs
push
cltd
pop
mov
or
pusha
and
rorb
fiaddl
aaa
xor
cwtl
xchg
and
imul
cmp
jecxz
mov
xlat
call
jmp
or
ja
jbe
cltd
ss
icebp
xchg
jnp
xchg
pop
clc
jae
adc
xor
pop
out
sub
subb
adc
jmp
or
fs
cmp
pop
scas
shll
bound
sarb
fimull
push
das
imulb
lret
mov
repz
nop
les
dec
ficoml
loop
test
dec
outsl
push
gs
dec
xor
or
cld
shll
sub
adc
test
inc
push
das
adc
aad
cmpsl
dec
mov
xor
dec
in
imul
lods
cmpsb
cwtl
jl
ret
out
push
int
push
jg
notl
out
mov
push
enter
mov
imul
add
pusha
dec
mov
ds
or
pop
fwait
jp
sub
dec
add
or
imul
lea
ss
pusha
adc
sbb
xor
out
adc
hlt
inc
push
inc
rcrb
sbb
rol
or
cmc
push
in
lods
loopne
push
and
mov
sti
into
sub
xor
movsb
test
cmpsl
aam
aam
cs
mov
sub
dec
mov
repz
mov
in
lock
dec
dec
cmp
push
loopne
aaa
xor
pusha
mov
push
or
xor
pop
adc
sbb
aas
mov
sbb
stos
push
fucom
ret
push
sub
mov
xchg
outsb
jl
pop
sti
xchg
adc
lods
cmc
dec
sub
mov
mov
mov
das
aam
int3
sbb
shll
ljmp
cmp
xlat
mov
adc
pop
cli
and
add
mov
mov
arpl
jle,pt
or
push
and
sub
outsb
sub
dec
outsb
fs
lea
stos
into
cmp
jae
mov
scas
add
sub
push
cmp
jae
stos
out
test
test
xor
cs
cmp
mov
xchg
rorl
sbb
add
lea
inc
rcll
fs
sbb
xor
in
mov
cltd
inc
jb
test
jns
push
add
addr16
fdivrl
sub
dec
mov
mov
push
movsb
sbb
into
xor
push
je
test
add
dec
in
push
cmova
outsl
add
shlb
inc
je
outsb
cmpsl
lcall
cmpsl
push
idivl
js
scas
jmp
sarl
xchg
mov
xchg
xchg
adc
or
mov
mov
mov
ret
shrl
cli
pop
pop
test
or
in
jmp
jmp
ds
inc
adc
and
inc
push
adc
fs
movsl
int3
fsubl
jmp
inc
inc
mov
aam
mov
test
lret
in
ss
mov
lods
cld
aaa
pop
test
xchg
sti
stos
mov
mov
aam
pop
xchg
xor
dec
lret
es
push
out
mov
pusha
xchg
movsl
pushf
fbld
add
ret
adc
and
xchg
xchg
mov
enter
sbb
sbb
jo
xchg
push
jbe
xlat
xchg
arpl
adc
push
push
push
ror
aam
jno
mov
inc
pop
pop
je
or
hlt
stos
sbb
jp
jmp
jl
imul
add
int
rcll
xor
or
xchg
out
enter
ss
lret
push
sub
lret
xchg
inc
ja
enter
xchg
mov
aam
shrb
mov
lret
mov
out
ss
and
add
adc
cmc
imul
call
lret
push
sub
fisubl
mov
je
pop
lea
add
pop
fmull
subb
jmp
xlat
imul
outsl
mov
je
mov
adc
pop
aad
lret
std
cmp
xchg
mov
or
je
and
mov
cli
dec
out
mov
stc
mov
inc
das
cmp
fwait
mov
movsb
int3
mov
js
mov
movsb
rol
jecxz
cmpsl
test
lds
lods
adc
mov
xchg
test
pop
push
sbb
lahf
aaa
sar
dec
out
push
imul
lods
xor
xchg
inc
adc
sub
xchg
aad
mov
jl
jnp,pt
add
or
fisubrl
aaa
in
roll
push
add
out
inc
loopne
aas
fdiv
lea
cwtl
fstps
adc
push
test
push
ret
mov
in
stos
scas
mov
fistl
inc
sub
icebp
or
jmp
or
jb
sahf
jns
inc
stc
add
adc
sahf
subb
push
loop
dec
loop
test
cmpsl
jg
dec
cmp
pop
adc
jle
int3
out
cmp
lds
gs
scas
int
test
and
mov
jmp
shlb
pop
inc
fstpt
inc
int3
fidivl
or
xlat
pop
xchg
popl
frstor
push
add
push
xor
scas
sar
jge
pop
hlt
test
fists
ds
sbb
sub
jb
out
jb
movsb
fs
mov
jns
jmp
xchg
sub
pushf
notl
lds
jb
jg
lret
stos
or
cmp
push
mov
push
enter
pop
jecxz
xlat
pop
popa
inc
sti
push
dec
mov
les
fwait
cmpsl
sub
adc
outsb
shr
roll
or
sbb
add
lcall
int3
das
sahf
into
imul
and
mov
inc
sbb
pop
pusha
push
pop
insb
add
xchg
mov
and
mov
pop
test
lret
cmp
aad
pop
sbbb
and
xor
and
xchg
cmpb
mov
aaa
out
mov
dec
ret
aas
fmuls
cmp
push
dec
lret
and
push
jmp
adc
popf
mov
insb
xor
pop
mov
jecxz
pushf
mov
sbb
xlat
icebp
pop
dec
push
jae
xor
lcall
xor
lds
das
js
repz
pushf
jne
aam
call
pop
out
fistpl
jno
sti
sbb
ret
mov
imul
xor
xor
pop
sbb
or
or
and
add
xchg
mov
repnz
sbb
popf
and
inc
jp
test
repnz
repnz
shl
bound
jl
pop
int3
push
inc
clc
mov
mov
lock
or
xor
add
mov
loope
dec
pop
or
aam
push
test
xor
movl
shll
sbb
jle
and
jp
jns
sub
push
retw
lods
enter
cmp
lock
testb
rcrb
mov
rcrl
lods
xchg
jge
mov
aas
mov
adc
and
leave
int3
in
dec
in
xchg
and
xchg
stos
push
pop
int3
mov
movsb
xor
mov
add
cmp
adc
or
dec
adc
push
add
or
imul
add
or
pop
mov
stos
pop
out
dec
and
int3
shll
push
lock
test
sub
push
aad
fs
cwtl
shl
andl
test
push
mov
push
mov
dec
mov
sbb
add
add
cmp
int3
sub
jbe
xchg
xor
lahf
fwait
inc
cmp
or
xchg
cmc
test
sub
in
mov
mov
push
push
dec
inc
into
jle
jecxz
insb
pop
or
add
repnz
jb
pop
es
in
or
popa
shrb
insb
pop
mov
scas
out
mov
sub
aam
cmp
mov
mov
push
inc
mov
or
clc
push
gs
push
adc
sbb
dec
add
popl
stc
dec
inc
or
ss
ja
icebp
pusha
sahf
les
lock
in
nop
jae
dec
cli
pushf
cmp
xchg
pop
pop
popf
icebp
sahf
sub
push
mov
jp
movsb
paddb
aam
pop
jle
xor
push
loop
push
adc
jle
pop
or
mov
cli
mov
addr16
jecxz
mov
mov
mov
shl
gs
mov
mov
dec
rorl
jnp
icebp
daa
enter
dec
insl
std
fsub
jg
lcall
sbb
fadd
mov
je
int
push
push
dec
dec
cmpl
pusha
jp
repz
xor
cmpb
test
adc
pop
mov
jg
loopne
roll
leave
test
mov
mov
add
std
inc
jmp
mov
in
sub
in
lods
fwait
cs
inc
push
insl
jge
je
or
pop
cld
mov
xor
sarb
adc
dec
movsl
inc
andl
roll
dec
ss
into
xor
push
and
pop
sbb
or
sbb
bound
xor
mov
test
bound
mov
sbb
dec
adc
fs
xchg
icebp
mov
stos
push
outsb
stos
or
cmp
lahf
int3
xor
sub
and
enter
lds
pop
std
and
mov
loopne
adc
pop
mov
popf
imul
out
dec
sbb
sbb
vpshlw
xchg
sub
pop
into
sbb
test
cmpl
or
mov
push
xorl
sub
xor
cmp
vmovhps
jge
sbb
pop
daa
pop
ret
add
test
pop
jb
mov
cmp
leave
inc
add
shll
repnz
inc
lock
cmc
pop
or
notl
inc
andl
outsl
out
test
add
adc
sbb
xor
ret
mov
and
lret
jle
and
sub
or
sbb
pop
xchg
testl
sub
xchg
cltd
enter
mov
cmp
push
enter
pop
pop
sbb
aas
pop
xor
fidivrl
fs
je
loope
mov
xor
pop
sbb
mov
popa
lcall
lea
xchg
inc
pop
inc
xorb
lret
lods
es
lods
andb
sub
mov
pushf
sahf
mov
call
add
adc
push
rclb
push
movsb
cmp
jle
repnz
enter
pop
cmp
dec
xor
sub
xchg
mov
mov
jg
push
sbb
scas
add
sub
pusha
mov
mov
mov
cmpsl
cmp
test
cltd
popf
sbb
out
pop
lret
ret
das
and
fcom
mov
push
xchg
add
lret
out
sub
call
adc
or
mov
arpl
xor
in
divb
cmpsl
xor
pop
adcl
mov
sbb
addl
xchg
insl
xchg
push
sub
xchg
xchg
in
test
mov
clc
jmp
sub
cmc
cmpsl
cmp
xchg
xchg
enter
movsb
sbb
ja
sbb
sahf
dec
xchg
xchg
push
dec
push
mov
cmp
and
notl
ljmp
and
ljmp
loope
pop
lahf
std
outsb
cmpsl
mov
out
inc
jnp
mov
rcr
test
jmp
lret
stos
mov
fisttpl
idivl
aam
ret
mov
in
stc
stos
mov
call
xor
es
adc
jnp
add
leave
dec
data16
dec
or
or
jle
shl
imul
add
xor
fisubrs
icebp
jg
and
jno
in
pop
cmp
mov
inc
inc
and
add
xor
fldcw
cmp
and
inc
sbb
iret
mov
outsl
leave
insl
xchg
or
pop
in
sub
test
mov
xchg
addb
inc
mov
out
sbb
xor
cmp
imul
ffreep
pop
adc
test
xchg
jp
add
movsb
pop
xor
and
cmp
jmp
test
adc
jle
xchg
pop
adc
sbb
inc
sub
fcomip
jb
rorb
pop
pop
push
pop
addl
insb
cwtl
or
aad
push
lahf
push
sub
or
xchg
cmp
movsl
xchg
pop
xchg
sti
cltd
dec
testl
push
and
hlt
dec
lahf
rcrl
inc
mov
mov
gs
push
fdivp
and
sub
pop
mov
and
repz
push
daa
inc
cmp
sub
mov
out
or
jp
es
imul
ss
hlt
pop
inc
cli
test
mov
dec
inc
lods
jae
xlat
xchg
mov
lret
mov
and
sub
push
ss
sahf
add
aaa
faddp
cmpsl
jae
jbe
xor
push
or
outsl
rcrb
cli
stos
shll
sbbb
aas
sub
push
pop
fistl
dec
sub
pop
ffreep
out
adc
jbe
jbe
push
jno
mov
dec
jnp
mov
add
xchg
repz
stc
test
ficomps
mov
push
dec
je
jb
stos
bound
stos
test
pop
xchg
add
test
mov
inc
pop
jo
sub
jecxz
cmp
in
outsl
pop
ret
push
mov
popa
enter
sarb
cmpsb
pop
ror
xor
sahf
xor
ja
hlt
loopne
xor
adc
jo
ja
cmp
cmpsb
push
push
imul
add
aam
out
repnz
sub
ret
in
sbb
repnz
dec
mov
insl
dec
cmp
xor
clc
jecxz
filds
pop
adc
push
loop
ret
daa
test
icebp
outsb
nop
fwait
jg
jmp
cmc
mov
inc
ret
sahf
ljmp
add
push
jmp
xor
xlat
push
aam
dec
faddl
sub
int
mov
add
insb
sbb
sbb
lret
lods
imul
pushf
or
lret
jno
cmp
inc
inc
lds
cmp
movsb
test
mov
outsl
ret
jne
and
mov
fnstenv
jmp
addr16
rclb
lahf
push
dec
dec
fists
dec
mov
mov
rcrl
mov
or
xor
sub
cmp
int3
test
ficompl
mov
mov
mov
push
pop
aad
cmp
xchg
pop
or
cmc
rolb
ret
mov
mov
mov
sbb
std
mov
mov
xchg
cmp
xor
cli
in
iret
test
ficompl
xchg
add
jle
fwait
inc
pop
and
loope
mov
push
pushf
jae
lods
gs
or
into
pushf
cmp
incl
mov
call
ljmp
clc
in
xchg
sbb
pop
push
stos
sub
mov
xor
fdiv
jns
push
fwait
inc
dec
xchg
ret
add
mov
lahf
and
lcall
repz
fstpl
faddl
push
dec
popf
inc
imull
dec
push
and
adc
mov
xor
mov
and
cmp
lret
xor
xchg
xchg
and
xlat
sub
xor
xchg
sbb
push
push
push
jmp
aaa
dec
mov
jecxz
stc
and
lds
sub
adc
dec
insb
jo
adc
loop
sub
push
sbb
pop
dec
adc
xor
or
ljmp
movsb
xchg
sbb
das
jae
or
