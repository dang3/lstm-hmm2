sbb
add
mov
int
fiadds
cs
mov
rolb
frstor
pop
pop
jp
into
lock
test
dec
fstpt
and
push
jmp
insl
mov
jg
lcall
or
adc
mov
jnp
setb
inc
add
push
pop
xor
lods
cltd
scas
push
das
mov
inc
aad
imul
test
cmp
lahf
loop
push
sbb
in
imull
pop
loop
in
out
int
ss
ror
cmp
inc
pop
sub
out
lds
adc
clc
push
jg
mov
and
sub
popa
ss
sub
xchg
mov
mov
and
mov
imull
sbb
sbb
push
sub
or
test
jecxz
xchg
ja
adc
mov
xchg
fcompl
clc
das
idivl
pusha
push
and
push
and
cmp
rcrb
and
int
xorl
cmovae
aas
hlt
push
cmc
push
dec
sbb
fadd
xchg
xchg
push
js
xor
lock
push
int
std
and
lret
mov
adc
sub
xor
xor
enter
ret
int3
and
sub
jnp
dec
fidivrs
push
out
sbb
inc
pusha
push
sub
daa
add
jns
mov
mov
cltd
mulb
dec
push
xchg
jno
xchg
popf
dec
xchg
xor
pushf
mov
adc
inc
les
inc
loopne
inc
adc
scas
iret
xchg
adc
and
sbb
je
insl
or
xchg
fsubl
fmulp
iret
repz
inc
add
orl
lods
arpl
mov
ljmp
pop
mov
inc
repnz
scas
xchg
or
cmp
mov
and
sahf
test
cmpsl
jg
or
pop
inc
mov
dec
fisttpl
dec
cs
xor
mov
push
add
lods
cmpsb
mov
in
inc
mov
ret
nop
xor
scas
imul
lret
lret
adc
mov
dec
add
lret
mov
addr16
pusha
mov
add
es
shll
dec
call
mov
andl
negl
das
and
sub
lcall
and
sbb
pop
pop
enter
adc
push
jae
mov
xor
loop
rcll
sub
mov
dec
pushf
cmpb
jle
addl
fisubrs
sbbb
out
push
incl
adc
xor
jmp
dec
imul
fildll
cmp
add
mov
mov
push
or
outsb
mov
inc
outsl
mov
ret
addr16
dec
test
fs
pop
push
dec
arpl
dec
sub
pop
add
aad
repnz
cmp
mov
data16
push
ljmp
xor
pusha
push
shl
cmp
pop
add
adcl
test
out
fiadds
mov
fwait
negb
or
iret
or
iret
lea
hlt
jl
dec
pop
jecxz
sub
push
push
jns
nop
pop
cld
xchg
pop
cli
scas
pop
shll
imul
call
add
mov
xchg
cmp
or
sbb
addb
out
sbb
push
imul
mov
ret
xor
jecxz
dec
shlb
mov
divl
ficomps
pop
and
lock
pop
aad
jg
lock
dec
jle
mov
sub
shll
int3
push
leave
inc
add
sub
outsb
sbb
sub
jb
test
or
insl
stos
dec
mov
icebp
insl
nop
mov
clc
in
xor
xchg
in
pop
mov
outsl
xchg
fldt
decl
movsl
fdivrl
push
xor
xor
sti
sti
pop
sbb
mov
mov
lahf
xchg
aad
cld
cmp
out
xchg
push
lock
xchg
rcll
pushf
push
subl
pop
movsb
sbb
xor
push
ficoml
outsb
ret
push
mov
sbb
sti
je
jp
imul
leave
loopne
inc
rolb
dec
cmpsb
add
inc
pop
ret
push
jmp
cmc
cltd
ret
mov
es
les
mov
rol
sub
push
lret
pop
lcall
jg
sahf
cmpsb
repnz
dec
add
cmp
fildl
jnp
js
adc
sub
xor
aaa
mov
mov
xchg
fcompl
inc
imul
hlt
adc
lret
sbb
xchg
push
shl
sub
in
lods
lret
cmp
cmpsl
dec
fistps
arpl
inc
pushf
and
xchg
jg
add
push
cmp
movsl
dec
jno
es
pop
mov
mov
iret
imulb
ss
popf
pop
in
sub
lret
aaa
lahf
jecxz
and
cmpsb
sbb
cmp
mov
out
add
fdivrl
lahf
daa
pop
nop
aad
dec
pop
dec
fimull
cltd
in
mov
mov
and
mov
or
xor
jae
arpl
sbb
mov
sbb
int3
imul
pop
mull
pop
imul
jmp
fidivs
into
cld
and
shr
pushf
push
mov
enter
sbb
cmp
add
add
fnstenv
sbb
popa
push
jbe
mov
cmp
cmp
jg
out
sub
mov
and
lds
loop
dec
cmp
lods
loop
or
in
std
ret
mov
int3
das
cmc
xchg
push
pop
pop
stos
pop
js
fisubrl
filds
xor
dec
out
or
test
les
jecxz
fs
in
adc
cmpsb
lret
insb
sarb
xchg
movsl
xor
lret
adc
lock
cmp
push
aad
mov
push
in
cmp
outsb
insb
mov
jns
hlt
lds
mov
add
fs
and
aad
add
and
xor
mov
inc
insl
pop
movsl
test
mov
push
fcmovbe
lret
cmp
addr16
xor
insb
add
pop
jge
ds
enter
mov
push
and
pushf
popf
jge
gs
test
imul
mov
mov
rorl
mov
lret
xor
jne
push
mov
jl
inc
mov
ja
sub
daa
push
int3
in
ds
repz
mov
push
jo
cmp
sub
lods
fisubs
sub
and
pop
ds
dec
pop
dec
and
leave
daa
push
jle
ret
jmp
mov
mov
or
lock
cltd
sub
sub
sub
xchg
inc
mov
fadds
repz
pop
and
inc
outsb
add
pop
imul
rep
lret
inc
push
inc
popf
dec
stos
xchg
mov
sti
sbb
jmp
inc
mov
icebp
inc
mov
adc
insl
mov
aad
repnz
mov
fmuls
mov
add
testb
dec
sbbb
out
mov
in
iret
mov
pop
xor
mov
movsl
lcall
xchg
xlat
cmp
enter
in
add
lfs
jne
sub
inc
leave
push
bound
inc
jg
mov
mov
stc
add
adc
pop
mov
out
sbb
push
mov
mov
push
lock
inc
test
pop
mov
divl
jno
outsb
jp
cmp
xchg
pop
cmp
mov
pop
xchg
loop
mov
dec
ds
rcll
xor
daa
push
test
test
inc
adc
and
dec
movsb
adc
pushf
popf
popa
enter
xchg
outsl
fwait
jae
jl
movsb
push
pushaw
pushf
nop
mov
lcall
xor
sbb
add
sub
in
cmpsl
ja
lods
push
dec
mov
call
dec
jbe
loop
fs
popf
in
adc
and
xchg
fmull
iret
repz
mov
ret
xor
repz
popf
mov
imul
push
xor
or
push
inc
clc
jnp
add
push
lods
push
and
add
sbb
dec
daa
insb
dec
fidivrs
sub
dec
aad
add
shll
jno
out
push
popa
aas
push
mov
imul
dec
in
push
outsl
inc
iret
bound
mov
lea
mov
pop
sbb
ret
cmp
lret
sbb
pop
enter
inc
dec
add
mov
fcmove
cmpsb
push
mov
push
enter
jg
call
out
arpl
push
adcl
adc
cmp
fistps
sahf
fldt
rorl
mov
ror
mov
xorl
rorb
dec
mov
call
xor
add
mov
jne
insb
mov
mov
outsl
mov
out
xor
fs
clc
push
in
adc
sbb
push
out
aad
jo
sbb
aaa
mov
or
aad
sbb
sbb
fisubs
sbb
std
cmp
jbe
pop
xor
arpl
daa
xchg
mov
movsl
inc
xchg
push
xchg
icebp
cs
fldl
or
fwait
in
lods
ret
push
int
inc
inc
mov
push
mov
pusha
adc
add
dec
push
movsl
jg
sbb
repz
ss
add
push
pop
negb
add
xchg
rcrb
lahf
mov
out
lods
sub
add
insb
add
xor
adc
pusha
cmp
xor
sub
lret
dec
pop
fwait
add
stc
sti
adc
jnp
call
pusha
leave
sub
push
daa
mov
sub
or
ss
rcll
xlat
pop
fsubrl
mov
xchg
aas
mov
repz
std
xor
lret
negb
xor
or
or
adc
xchg
mov
mov
dec
or
orb
rorl
xor
les
xor
movsl
cmp
push
or
xchg
bound
out
adc
push
mov
notl
nop
popa
aaa
flds
add
aas
and
sbb
sub
das
cld
mov
das
jg
push
mov
cld
adc
inc
jb
push
bound
js
sbbb
sti
adc
pop
bound
stos
fldt
movsb
hlt
frndint
mov
pop
pop
push
sub
add
incb
lock
dec
sbb
jnp
lret
fsubl
xor
jle
or
mov
jecxz
push
mov
mov
mov
stos
out
ficomps
sub
push
xor
aas
shrd
cs
mov
push
lret
fwait
mov
mov
lods
inc
push
call
clc
ljmp
jmp
mov
in
add
jle
in
pusha
add
mov
aad
scas
xlat
cmp
pop
subl
stc
iret
imul
mov
dec
push
jns
ds
jg
sarl
cld
push
insb
out
cwtl
xchg
inc
or
sbb
js
cmc
and
sbb
cwtl
repz
test
xchg
test
sbb
push
xchg
xor
enter
inc
jmp
jp
jp
xchg
aas
jae
dec
mov
loopne
decl
fcmovnbe
sahf
jno
push
cmp
xchg
cmp
jbe
push
sbb
rcrl
imul
xchg
shlb
cmp
adc
cmp
in
aad
jmp
std
add
mov
or
xchg
je
and
jne
out
mov
push
imul
push
call
or
loopne
cli
jecxz
call
cmpsl
dec
lret
pop
jecxz
push
jb
mov
xlat
test
pop
dec
test
dec
and
and
xor
inc
sub
icebp
cmp
lock
add
xchg
xchg
or
ja
daa
std
add
push
mov
fildl
enter
inc
add
push
out
es
int
jecxz
xchg
xor
mov
mov
push
adc
mov
sub
aaa
pusha
fnstenv
push
lret
repnz
jns
jmp
icebp
sbb
imul
inc
pop
in
jg
mov
iret
int3
xchg
and
mov
cmp
and
xlat
subb
jmp
je
cld
fiaddl
jns
std
adc
dec
xchg
xor
fwait
push
push
mov
test
pop
adc
or
nop
sarl
adc
in
sub
pop
pop
nop
scas
lcall
movsl
and
test
das
inc
loope
pushf
mov
jno
adc
xor
nop
and
xor
inc
push
push
addr16
adc
ficomps
dec
fcoml
mov
testb
xchg
push
scas
out
repnz
lcall
imull
icebp
shrl
lcall
mov
ja
rcll
ja
pushf
repz
pop
mov
imul
xor
pop
sub
or
popf
pop
movsl
xchg
pop
call
out
cmp
mov
pop
out
aas
or
mov
jmp
sbb
sarb
ss
cmpsl
fldcw
inc
movsb
ja
pop
xor
xor
sarl
nop
jnp
jecxz
lcall
jle
movsb
aaa
xor
push
inc
outsb
mov
inc
lods
daa
imulb
inc
clc
inc
fnstsw
xchg
sub
push
arpl
jo
add
jne
pop
xchg
stos
jno
mov
enter
mov
mov
inc
sbb
push
rol
or
cld
mov
iret
call
push
lret
lods
fnstenv
lds
popw
mov
mov
das
int
inc
cmp
xchg
sub
jae
jecxz
mov
mov
push
rcrb
pop
into
daa
sbb
gs
loop
and
xchg
sbb
test
inc
xor
jmp
in
aam
xor
into
mov
jle
outsl
add
movsb
mov
fsubr
icebp
jb
dec
ret
or
dec
dec
dec
lods
or
test
push
sub
mov
js
addl
jle
adc
mov
pop
imul
ja
inc
xor
inc
cmp
mov
mov
not
adc
lcall
sti
inc
xchg
mov
pop
sahf
xchg
sbb
test
pop
push
lods
pop
or
adc
xchg
jno
shll
out
sub
mov
pop
in
mov
cli
movsl
pusha
add
dec
aaa
pop
cmp
push
xchg
in
xor
stc
jg
mov
adc
pop
mov
and
mov
stos
adc
or
push
addr16
cli
xchg
out
cmp
sahf
mov
and
fcmovnb
std
std
ds
pop
int3
dec
inc
sub
ds
mov
push
pop
inc
jecxz
cmc
repnz
pop
cmp
pop
fldl
movsl
sbb
dec
mov
sbb
jns
in
jnp
imul
jge
dec
or
push
test
stos
nop
daa
xchg
aad
pop
push
ret
xchg
call
xchg
mov
outsl
shl
sbb
movl
pushf
stos
mov
fldenv
fbld
test
xor
or
out
xchg
test
int3
fcompl
add
lods
shll
out
or
mov
idivl
lds
xor
test
mov
and
add
addr16
test
aas
push
dec
fcmovnu
sub
roll
cmp
std
movsl
or
ss
repz
mov
lock
pop
adc
sbb
add
imulb
test
mov
aas
pop
dec
data16
movl
popf
cmp
xor
stos
jbe
lret
icebp
das
and
iret
adc
call
aam
je
in
loopne
sbb
mov
and
jne
insb
int3
inc
sub
push
stc
mov
push
pop
jp
xchg
sbb
lods
js
std
xchg
push
cmp
rcl
leave
out
ja
jmp
daa
sub
addl
cmp
pusha
es
jns
inc
jb
mov
rorb
dec
and
jle,pn
lods
pop
notb
add
pop
lahf
mov
push
dec
mov
push
mov
fbstp
xchg
sub
sarl
jnp
sti
xchg
test
fstl
in
sbb
xor
jl
push
or
add
mov
je
stos
xor
out
adc
cmp
push
out
jnp
in
lods
std
mov
or
jns
xchg
sub
push
lods
out
pop
lods
dec
pop
arpl
inc
sbb
sbb
pop
pop
push
or
sbb
loope
jl
pavgw
or
pop
sbb
xchg
das
add
push
adcb
push
lret
and
test
jns
xchg
cmpsl
pop
test
cmpsb
fwait
add
xchg
or
push
mov
rcrb
cmpsl
add
js
add
cwtl
or
xchg
push
je
add
cmp
push
js
mul
xchg
dec
mov
outsl
cmpsb
cmpsl
pop
orb
adc
lock
popa
add
inc
xor
jb
adc
cmp
xor
call
jp
adc
scas
inc
or
inc
adc
lods
mov
out
stc
pop
push
inc
cmp
test
scas
jp
imul
add
fstps
sbb
jnp
cmpsl
movsl
jl
imul
push
roll
jne
movsl
push
lcall
pop
filds
sbbl
out
pop
xchg
xor
cltd
inc
cmp
and
dec
sbb
aam
mov
aaa
arpl
inc
data16
sbb
fisubrs
adc
cmp
jnp
ss
in
mov
pop
popf
jne
mov
rcrb
push
je
and
sub
lock
ljmp
int
add
movsb
cwtl
mov
sub
dec
out
in
adc
xor
mov
inc
xchg
mov
out
pushf
adc
push
insb
and
insb
hlt
ret
vucomisd
ljmp
inc
push
aad
hlt
lahf
mov
inc
popa
into
test
mov
orl
fisttpll
stc
ds
push
or
inc
mov
push
adc
scas
mov
sbb
ds
inc
sarl
sub
mov
xchg
or
enter
push
mov
rcrl
daa
sub
ds
fwait
jne
mov
xchg
cld
jnp
inc
cltd
es
mov
scas
lcall
mov
int
mov
std
ljmp
mov
pop
adc
mov
rep
xchg
lea
push
lcall
into
and
push
mov
jg
arpl
int
sbb
mov
jb
adcl
mov
xchg
mov
mov
stc
push
inc
shrl
mov
cltd
jg
push
mov
rcpps
push
loope
ffree
ljmp
cmp
pop
lods
repz
test
out
inc
div
add
fisubs
jmp
cmpsb
xchg
sbb
out
jb
jp
addl
test
inc
repnz
sub
jmp
xor
pusha
out
movsl
out
ret
stos
test
pop
cmp
gs
xor
add
sub
scas
ljmp
push
into
sbb
std
fwait
xorl
aad
fldl
bound
mov
repnz
push
ficomps
stos
mov
pop
dec
push
in
sub
lock
pop
clc
mov
add
loope
xor
adc
je
cmp
insl
sahf
xchg
icebp
dec
gs
cmp
data16
incl
inc
and
mov
fiadds
fs
outsb
and
cwtl
mov
fwait
js
stos
gs
dec
lods
mov
dec
test
jmp
mov
test
dec
hlt
insb
xor
push
shrl
inc
andl
mov
dec
xor
push
pusha
scas
dec
or
insb
adc
iret
inc
and
out
aaa
xor
ret
inc
imul
fdivs
mov
dec
lcall
scas
adc
and
jne
sbb
adcl
fisubrl
push
pop
mov
jmp
add
jae
mov
dec
stc
les
xor
mov
loop
lahf
idivb
or
out
insl
scas
sbb
mov
cmp
xchg
mov
lods
les
sub
cli
mov
push
mov
mov
jno
xchg
pusha
outsl
inc
mov
outsb
dec
lea
cmp
setb
dec
gs
movsl
cmp
mov
adc
das
movsl
pop
and
in
sub
mov
dec
aad
dec
cmc
push
scas
pop
inc
ret
xchg
test
mov
and
xchg
mov
in
in
push
xor
dec
iret
sub
pop
out
arpl
movsl
cmp
sarl
inc
xor
rcrl
leave
inc
pop
pushf
in
imul
inc
push
jae
scas
sbb
jo
outsb
das
inc
sub
lret
jmp
mov
or
mov
dec
std
rorb
mov
call
push
mov
ss
adc
jne
scas
lret
add
ss
xor
fnstcw
push
and
or
dec
jp
shl
push
mov
sub
iret
popf
cmp
mov
add
stos
dec
add
xlat
in
out
xchg
jne
daa
or
rorb
sub
popf
push
roll
in
xor
or
dec
mov
xor
jbe
outsl
movsb
jnp
jl
pop
testl
or
xchg
notl
dec
jo
jecxz
push
dec
inc
cmp
outsb
nop
push
dec
fadd
jne
out
inc
or
outsl
jmp
jo
mov
xchg
mov
shrd
mov
inc
add
mov
pusha
sub
test
or
ds
xor
ss
cmp
sbbl
addr16
jmp
stc
jb
movsb
sub
mov
inc
aam
pop
fwait
int
pop
dec
lods
push
lds
jnp
push
adc
movsb
sahf
ret
outsb
ret
fstpt
mov
jp
dec
ljmp
insb
adc
xor
cmpl
ss
push
jbe
adc
jnp
inc
mov
shr
scas
mov
mov
jg
testl
in
sbb
ds
lods
inc
enter
lods
sbb
jge
jae
lods
dec
movsb
clc
adc
div
out
inc
lock
aas
mov
int3
stos
adc
inc
cmpsb
mov
fadds
int3
test
and
mov
les
int3
es
jb
icebp
mov
xchg
xchg
push
nop
or
inc
imulb
leave
or
mov
adc
movsb
loopne
adc
or
dec
mov
imul
sbb
mov
ret
jae
roll
mov
push
xchg
pop
mov
and
movsb
movsl
pop
push
cs
sarl
ds
inc
lods
push
xor
push
lret
cwtl
mov
jmp
jp
inc
xor
rolb
push
in
jmp
mov
lods
aas
sbb
bound
and
dec
sbb
ficomps
mov
cs
fwait
bound
xlat
inc
cli
add
bnd
jo
adc
movsl
and
and
insb
insl
cld
mov
stos
or
cmp
stos
icebp
xor
shlb
inc
mov
mov
sbb
ja
sahf
jle
sub
mov
decl
mov
imulb
inc
movsb
incb
lea
test
mov
insl
inc
add
in
or
ficoml
xchg
xchg
or
mov
dec
orb
decl
loop
fdivl
mov
xor
jb
inc
xor
sub
jnp
test
aam
sbb
enter
aad
dec
push
adc
fisubs
out
sbb
cli
lahf
pushl
mov
add
xlat
or
loopne
in
ljmp
btc
shl
inc
adc
sub
jnp
lock
std
xor
adc
xchg
xchg
addr16
dec
xor
mov
clc
sub
xor
and
pusha
jae
sbb
xchg
xchg
inc
xchg
jns
inc
mov
ds
cmpsl
test
cmp
test
or
xchg
xor
sub
mov
cmpsb
xchg
sbb
pop
inc
dec
in
aam
mov
mov
xchg
inc
jb
push
in
ds
dec
aas
imul
ss
stos
xchg
cmp
negl
into
rcrb
xchg
insb
mov
dec
push
jae
pop
adc
add
mov
add
mov
insb
cmp
adc
or
mov
mov
push
jg
div
adcl
cmpsl
add
shrb
leave
ds
pop
add
cmpb
mov
sub
test
andb
daa
mov
dec
push
cmpsb
test
cli
clc
pop
xchg
xor
adc
add
jp
mov
lods
mov
in
scas
roll
inc
push
pop
pop
call
je
icebp
insb
dec
cmp
daa
cmc
iret
aaa
lea
push
cmp
sub
std
or
js
mov
dec
sahf
lock
cli
sbb
mov
popa
cmp
ficoms
pop
jo
pop
insl
xor
sahf
iret
testl
scas
std
or
das
pop
sub
repnz
aad
sbb
add
push
jecxz
aam
fistps
adc
out
sub
rcrb
lods
mov
mov
das
outsb
fisttpl
cwtl
imull
xor
test
addr16
ret
sbb
movsb
decl
clc
push
inc
cld
push
sub
dec
cmp
or
mov
inc
jl
icebp
adc
into
fdivr
addr16
popa
dec
add
es
add
jno
jl
mov
sub
std
xchg
mov
xchg
inc
cmp
mov
jbe
pop
imul
pusha
outsb
outsb
xor
lea
xchg
sub
stos
outsl
cwtl
aad
cmp
dec
ret
inc
mov
add
je
jb
les
adc
dec
lock
jecxz
jnp
mov
pop
push
mov
or
mov
subl
mov
into
add
mov
outsl
inc
jns
xchg
xchg
lahf
bnd
popa
push
in
stos
mov
jns
xchg
iret
into
adc
add
int
rcr
dec
cltd
jle
cmp
mov
mov
cmp
jge
pop
mov
inc
mov
and
add
xchg
xchg
bound
popa
fstps
add
inc
fildl
sbb
mov
sahf
fcomip
adc
xchg
xchg
mov
cmp
ret
xchg
in
cmpsl
nop
inc
xchg
sub
sbb
adc
into
pop
sub
and
psllq
push
cmpsl
mov
loope
mov
gs
jae
mov
xor
xchg
adc
pop
int3
cmp
mov
js
pop
incb
lods
cwtl
movsb
add
lock
int3
ret
cltd
movsl
lods
in
test
push
stos
in
std
push
mov
xor
incl
es
test
cmp
test
jno
lret
test
sbb
pusha
mov
lods
inc
movb
mov
adc
add
sbb
daa
add
leave
outsl
adc
add
cmc
pop
dec
push
test
mov
or
sbb
nop
push
clc
shlb
int3
les
js
inc
icebp
aas
in
or
stos
jge
das
int
pop
fs
mov
bound
into
adc
lret
imul
scas
dec
xchg
xor
pop
into
pop
mov
dec
jns
leave
jle
daa
ret
in
movsb
std
rolb
push
cmp
mov
leave
loope
xor
mov
imul
les
add
rcrb
outsb
outsl
inc
mov
in
pop
testl
arpl
sub
pop
cltd
out
js
out
test
jecxz
popa
dec
pop
aad
repnz
ret
fstpt
orl
in
sahf
xchg
rcll
mov
xchg
jb
jo
lahf
shl
jb
imul
push
daa
repnz
lds
xor
addr16
mov
and
popf
popw
or
iret
cmp
mov
sbbl
out
cmp
ljmp
insl
lret
sbb
imul
loop
cmpsb
push
mov
jecxz
push
push
imul
sarl
pop
jmp
rcrl
cmp
mov
dec
adc
inc
mov
mov
sub
sbb
and
imul
leave
add
jmp
mov
aas
das
cltd
pop
and
adc
push
je
ljmp
dec
pop
lahf
cmc
sub
cmp
push
push
dec
repnz
loopne
je
lret
pusha
sbb
jp
dec
sbb
jb
mov
mov
sbb
imul
sub
pop
xor
jo
or
cld
pop
xlat
mov
in
test
stc
push
mov
pop
pop
outsb
push
push
jg
add
aad
inc
jne
add
loopne
in
lret
dec
xlat
adc
mov
out
outsb
push
fidivrl
ret
push
jbe
jmp
call
xor
xor
nop
push
fwait
shlb
stos
or
js
cmp
cltd
cs
mov
loopne
xor
mov
dec
jb
cmc
mov
sub
stc
loope
push
sbb
or
ss
or
mov
daa
mov
mov
jmp
dec
pusha
lock
pop
jae
lea
add
inc
stc
pop
sarb
lret
dec
lock
dec
sbb
aam
or
test
bnd
push
pop
mov
test
sub
push
int3
push
nop
cs
xchg
imul
jge
mov
hlt
mov
pop
jl
ret
add
add
sub
mov
mov
dec
push
add
into
arpl
movsl
sbb
std
add
fildl
int
outsb
lret
cmpsb
outsb
xchg
xlat
or
cltd
js
fwait
jg
inc
mov
cmpsb
cmp
xor
sbb
lods
outsb
push
outsl
movsb
xchg
pop
arpl
sti
add
mov
loop
ret
push
stos
and
das
icebp
push
aam
or
test
or
mov
xchg
xlat
test
ficoms
enter
jmp
jne
loope
cmp
push
pushw
int
scas
loop
xchg
outsl
ja
imul
es
rorb
and
daa
orb
dec
adc
pop
push
cltd
popa
xchg
add
push
push
loop
add
mov
inc
insl
push
enter
js
stos
vcmpsd
or
jl
mov
aam
jg
jecxz
pop
pop
adc
int
in
ljmp
push
xor
aaa
jae
loop
mov
jae
add
pushf
dec
ljmp
hlt
jno
scas
cld
pop
cmp
dec
jne
shlb
subl
or
mov
cmp
mov
adc
xor
repnz
mov
int
xrelease
mov
loope
iret
leave
mov
iret
sbb
inc
jecxz
push
ret
sub
inc
xor
sub
aam
out
inc
das
pop
test
cmp
lret
inc
sub
pop
jmp
push
sub
lock
loopne
adc
es
cmp
out
in
clc
inc
cmc
adc
sub
and
inc
scas
mov
jmp
shrl
out
in
push
jecxz
push
shlb
lds
int3
std
rorl
pop
push
jns
jb
xchg
dec
jb
xchg
and
pop
mov
test
je
ficompl
stc
xlat
pop
push
inc
sub
mov
ja
add
lods
addr16
insb
or
sbb
inc
mov
push
int3
fsubs
popf
mov
mov
mov
mov
mov
or
sub
jg
sarl
pop
jmp
lds
pop
or
mov
mov
ror
mov
jnp
xchg
clc
movsl
or
ds
in
arpl
push
dec
dec
sub
clc
insb
xchg
lods
lret
xchg
fldt
int3
lea
fisubs
sahf
xor
mov
adc
pop
scas
push
mov
inc
and
and
mov
pop
sub
xor
jg
mov
test
adc
movsl
jle
daa
les
shlb
cwtl
jbe
mov
mov
shrl
sub
fmull
dec
adc
loop
and
and
xchg
sarl
dec
push
sahf
sub
movsb
mov
sbb
lds
les
dec
sub
jp
test
jb
lock
jno
rcll
into
hlt
adcl
dec
pop
xorl
lcall
int3
cmp
scas
ret
or
leave
inc
xor
or
out
ret
addr16
fiadds
imul
outsl
stos
fs
inc
data16
ljmp
jae
hlt
loope
leave
sub
cmp
outsb
test
aam
fs
fwait
mov
cmp
lods
div
fistpl
mov
popa
fisubs
push
push
add
in
roll
xlat
mov
popf
sub
loopne
add
shll
add
lret
inc
shll
inc
stc
fstpt
mov
lods
cmp
lahf
mov
or
cmp
xchg
flds
fsubs
add
mov
popf
test
mov
sub
mov
jne
in
jae
loope
out
stos
mov
test
lahf
movb
jo
xchg
fdivrs
jge
pop
je
scas
add
lods
pusha
push
lods
pop
outsl
pop
jnp,pt
aam
mov
shll
test
jmp
dec
xchg
ljmp
and
dec
hlt
int3
add
xchg
scas
push
xchg
mov
sahf
rorb
nop
shlb
xchg
sahf
loope
or
roll
inc
loope
test
sahf
lcall
lea
fistps
adcl
inc
ds
test
mov
jns
dec
fwait
xchg
jae
js
jle
in
dec
repnz
pop
adcl
in
loope
stos
sub
addb
sub
icebp
mov
sub
dec
dec
xor
push
scas
mov
bound
insb
loopne
xlat
stc
push
inc
dec
insl
stos
loop
inc
or
repnz
cwtl
aaa
xor
popa
fldcw
mov
and
les
setge
in
push
push
mov
lret
adc
cmp
mov
jecxz
pop
in
mov
and
xor
fisubl
ljmp
jno
cmc
dec
sbb
pop
mov
and
cld
pop
leave
dec
fstpl
sub
jp
cmp
enter
inc
out
stos
movsb
stos
cwtl
imul
mov
gs
stos
lods
and
push
add
fwait
push
sahf
leave
push
dec
stc
popf
test
xor
mov
leave
xlat
loopne
fwait
adcb
and
stos
inc
cmpsl
pop
xchg
fs
fwait
hlt
cmp
hlt
sbb
mov
mov
sub
pop
cmp
xchg
lock
and
xor
out
fists
js
mov
xchg
and
push
xchg
xchg
in
movsb
pop
popf
dec
pop
insb
dec
push
jg
shlb
xor
cmpsb
or
test
dec
xchg
imul
mov
lea
adc
mov
imul
repnz
jp
pusha
jns
insb
inc
fldl
mov
imul
leave
push
leave
push
push
clc
mov
ret
das
imul
insb
push
scas
pop
lret
mov
in
adc
add
add
inc
mov
aad
outsl
pop
dec
and
add
mov
lock
jle
loopne
in
sahf
cld
push
sbb
mov
ss
hlt
orl
divb
mov
popf
icebp
sbb
mov
pop
sbb
jnp
ds
loop
enter
arpl
in
adc
pop
ds
ret
mov
push
out
inc
xchg
mov
shrb
mov
in
jl
lahf
xchg
xchg
adc
push
ss
test
arpl
sbb
mov
cmp
jecxz
leave
gs
test
lret
notl
out
jne
push
pusha
push
sub
push
pop
lods
roll
jp
pop
cmp
stc
fidivrs
xor
adc
je
xchg
push
bound
mov
repnz
jo
push
repnz
es
mov
lods
push
popf
push
adc
test
xlat
mov
out
sbb
mov
data16
test
sbb
js
add
mov
jle
add
mov
push
inc
add
push
js
lcall
aaa
into
repnz
xchg
xorl
ret
mov
adc
nop
cmc
stos
sub
fldt
je
lods
inc
push
xchg
test
and
out
lea
testl
lea
loopne
aas
lcall
cli
mov
das
das
inc
enter
push
iret
pop
mov
or
lds
add
mov
popf
pop
and
aam
divb
pop
in
shrl
inc
cmp
cmc
nop
je
subb
lea
mov
test
stos
mov
fsubrl
jecxz
mov
cmp
dec
jg
push
mov
mov
sub
sub
mov
and
aas
dec
cmp
xchg
sub
mov
inc
xor
imul
or
shr
fabs
and
jo
into
xchg
add
sbb
push
fisttpl
nop
mov
xor
mov
mov
add
push
stos
jmp
arpl
jb
add
cld
movsl
out
inc
aas
cmc
xor
scas
les
in
sbb
pushf
fcom
dec
lods
pushl
or
je
mov
mov
sbb
test
ficomps
mov
insb
mov
mov
popf
cmpsb
js
and
cmpsb
subl
adc
push
push
cwtl
ss
add
les
xchg
std
jge
mov
sbbb
jmp
sarl
and
sub
or
and
dec
test
mov
sub
imul
hlt
xchg
out
mov
xlat
inc
push
pop
leave
shll
push
push
mov
int
testl
inc
das
imul
push
mov
arpl
and
jmp
aas
add
test
xchg
inc
cmpsl
lret
mov
test
aas
jl
xchg
test
out
subb
sti
cltd
mov
mov
inc
je
lcall
cli
inc
xchg
or
aam
xor
add
add
push
jmp
xchg
xchg
xchg
cmp
test
xor
repz
stc
insb
mov
jecxz
dec
test
mov
xchg
enter
jo
enter
js
pop
inc
mov
call
mov
sbbb
adc
push
xlat
scas
dec
mull
sbb
fisttpl
sub
xchg
sbb
jl
sbb
sti
and
jecxz
jo
jo
fdivs
lret
insl
mov
aam
mov
mov
add
push
in
mov
mov
jb
loop
movsb
xchg
pop
popf
xchg
clc
mov
jno
dec
xor
mov
push
jb
rorl
xor
fistps
xchg
dec
mov
mov
cltd
movsb
push
pop
aam
arpl
jno
imul
fs
loope
sub
xchg
fisubrs
add
push
ffree
dec
mov
pusha
imul
cmc
sbb
lcall
add
jg
or
inc
sub
mov
test
test
stos
test
sub
jp
cld
notb
mov
out
xor
mov
addr16
mov
push
ret
xchg
xchg
hlt
sbb
xchg
std
fidivrs
imul
xor
test
and
popa
cltd
dec
fwait
cmpsl
mov
and
dec
subl
push
xor
xor
notl
cmp
insb
and
jb
cmpsl
push
bound
add
movsl
inc
sbb
mov
dec
bound
xor
bnd
pop
xchg
int
je
pop
and
dec
loope
xchg
leave
adc
lret
mov
push
mov
xchg
sbb
hlt
or
fisubs
push
fucom
test
out
add
jns
jns
mov
mov
in
dec
sbb
lahf
mov
mov
ret
mov
loopne
cmpsb
lahf
lock
fcmovnu
push
cld
shrl
fdivrs
dec
add
sub
in
pop
scas
dec
icebp
lahf
subb
push
jl
pop
xor
jbe
lret
andl
les
lahf
pop
add
fld
jno
test
cmp
sbb
sub
cmp
add
or
jnp
jl
mov
ljmp
sbb
jbe
mov
or
leave
out
pop
jo
shll
fs
movsb
push
jne
loop
fildll
out
or
inc
inc
sarb
inc
sbb
mov
xor
stos
jo
leave
mov
adc
adc
shl
sbb
out
adcb
int
fstl
adc
pop
lods
sbb
shr
mov
add
mov
mov
jns
movsb
jp
test
mov
xor
icebp
mov
out
add
test
xlat
lea
and
test
jo
xor
ficompl
cmp
or
scas
std
fldenv
dec
pop
shrl
mov
sub
out
xor
out
adc
mov
add
daa
and
sti
cmpsb
repnz
mov
push
gs
cmpsl
fmul
test
imul
sub
std
imul
and
ljmp
js
outsl
pop
cltd
ret
dec
sbb
and
and
or
inc
jno
das
mov
lock
outsb
out
inc
loop
and
mov
push
fidivrs
mov
mov
aad
mov
lret
dec
aaa
push
test
int
push
jns
mov
jo
inc
sbb
popa
pushf
push
jo
jecxz
pusha
push
outsl
and
cs
pushf
mov
xchg
adc
lret
int
stc
xlat
vmovntps
in
and
jne
std
xchg
push
xchg
insl
scas
sahf
push
in
mov
loope
mov
pop
mov
sub
stc
stc
dec
test
xchg
test
and
mov
mov
inc
cmp
inc
dec
jmp
fadds
push
cld
jg
sub
xlat
push
push
mov
fs
push
push
enter
es
pop
fnsave
psraw
push
shlb
xchg
pop
or
stc
imul
sbb
inc
adc
rorl
stos
orb
shrl
aaa
sub
xchg
lea
mov
xor
popa
push
mov
les
cmp
das
scas
mov
pusha
xorl
mov
rorl
sbb
scas
mov
loope
call
jne
test
jge
das
outsb
jbe
sti
jbe
pop
jle
nop
push
aas
roll
addr16
hlt
xlat
and
cmp
hlt
sub
or
test
es
sbb
mov
and
mov
loop
xchg
mov
mov
leave
mov
out
iret
xor
ljmp
shrb
inc
in
cltd
nop
jecxz
xor
adc
stos
mov
stc
xlat
jg
cmpsb
mov
cmp
jnp
cltd
mov
dec
in
add
imulb
out
cmp
xlat
sahf
mul
pop
mov
xchg
or
mov
in
sbb
pop
cli
imull
push
pop
mov
pop
and
sub
movb
push
mov
jmp
inc
shl
lahf
inc
xchg
or
mov
pop
idivl
insl
sub
cli
or
insb
xor
cmp
adc
loop
enter
js
jmp
pusha
add
sbb
adc
adc
cltd
les
push
ret
ret
pop
sbb
bound
inc
mov
jmp
xlat
stc
dec
xlat
sbb
je
mov
lcall
pop
stos
arpl
test
mov
repz
in
inc
jns
xchg
stos
jns
iret
xor
aad
stos
aad
push
jl
cmp
sarb
les
xchg
mov
popf
lds
xor
xchg
xor
out
and
rcrl
faddp
icebp
dec
dec
jecxz
jae
mov
pop
daa
dec
in
test
es
or
jbe
mov
push
adc
mov
ret
cmp
popf
jecxz
popa
sub
mov
dec
jle
in
cmpsb
xor
sbb
pop
xchg
ds
mov
out
popa
shrb
rorl
aam
addl
stc
insl
rolb
insl
add
hlt
sub
das
inc
and
inc
dec
xor
jne
das
add
mov
xchg
addl
sub
in
mov
insb
sbb
pop
lods
movsb
scas
xor
testb
cli
les
mov
dec
outsl
shr
pop
int
je
shlb
std
fcomps
inc
push
push
inc
cmpsl
outsl
jecxz
scas
loope
imul
notl
xor
and
push
insb
push
sbb
stc
and
aas
lock
and
test
outsb
daa
sub
add
xchg
fisubl
and
js
test
lret
ret
repnz
int
insl
push
xchg
mov
mov
xorl
mov
cmp
adc
jge
jns
xor
cltd
sub
mov
or
pop
cmp
xchg
jp
or
loope
das
arpl
sub
rcll
sbb
mov
add
sub
mov
iret
mov
call
mov
enter
call
fstps
imulb
jge
shrl
sub
xchg
test
mov
jg
cmp
mov
add
loope
or
sbb
lret
jb
notb
adc
pop
sub
pushf
clc
das
dec
aad
and
push
cmp
aaa
int3
push
loope
jp
in
leave
pop
rorb
sub
lahf
dec
push
ret
daa
rorb
xchg
push
icebp
jnp
sbb
and
cmp
repnz
jg
dec
sub
in
push
sub
dec
and
fsubs
test
movsb
clc
faddl
cli
loopne
adc
xchg
cmp
xor
xchg
repz
xor
divb
cmpsw
fistpl
pushf
int3
jle
pop
cmp
sbb
or
mov
rcrl
mov
stos
test
cmpsb
xor
add
push
cmp
and
clc
stc
mov
cmp
cmp
jecxz
add
and
ss
or
mov
lcall
pop
repnz
pop
out
aad
dec
fmul
cmp
dec
mov
insb
xchg
imul
add
fisttps
iret
lock
jmp
jo
fstl
push
inc
mov
leave
xor
sbb
dec
inc
cmp
aad
cmc
imul
push
jnp
sub
lds
lods
outsb
push
js
jecxz
sbbb
inc
pop
daa
aaa
dec
add
pop
sbb
leave
mov
mulb
ror
pop
imul
xlat
nop
das
loop
jp
ret
jecxz
cwtl
mov
loopne
cmpsb
inc
xor
xchg
fidivl
xchg
xchg
push
movsb
and
mov
mov
sbb
jae
inc
and
jbe
sbb
pushf
jp
mov
shrb
dec
stos
adc
sti
jmp
sarl
ja
mov
jle
push
sbb
je
pop
enter
pop
jl
cmpsl
push
lahf
and
push
faddl
fdiv
aam
test
ljmp
inc
imul
sbb
sub
pop
rorl
mov
lds
jl
fimuls
sbb
iret
js
mov
mov
pop
lret
fdivrs
xlat
pop
je
sar
iret
sub
mov
test
xchg
incl
inc
dec
pop
add
mov
jge
movsb
aam
mov
xor
imul
inc
push
dec
mov
dec
data16
icebp
lret
negl
mov
inc
sbb
outsb
jg
mov
push
mov
xor
stc
xchg
outsl
cmpsl
lret
adc
mov
jecxz
jae
inc
push
jne
dec
popf
in
lds
pop
enter
or
das
push
sbb
jno
xchg
mov
aad
sub
and
xchg
inc
ret
imul
scas
add
cmp
jmp
inc
inc
lock
stos
into
clc
ljmp
pop
je
inc
sub
ljmp
adc
rcll
aad
into
jmp
mov
dec
dec
pushf
pusha
add
pop
xor
pop
clc
add
or
leave
lods
ret
push
sub
jbe
sar
stos
stos
mov
add
sbb
dec
clc
stos
call
imul
aam
mov
dec
faddl
pop
and
push
into
ja
out
jae
fbld
sub
jbe
out
push
cli
mov
rol
aad
lea
add
mov
test
add
xlat
sub
pop
test
cmp
jne
sub
jecxz
lods
pop
mov
dec
imul
je
out
popf
mov
stc
pop
xchg
and
sub
cmpl
out
ss
call
mov
out
lock
mov
pop
xchg
ljmp
push
sub
xchg
pop
es
mov
or
inc
daa
dec
roll
fists
cltd
js
mov
psrad
xchg
imul
xchg
dec
stc
outsl
ljmp
mov
xchg
arpl
sbb
pop
jno
lret
pushf
into
ja
out
test
mov
dec
and
mov
test
hlt
adc
scas
daa
daa
sarl
sbbb
imul
xor
pop
pop
enter
lods
sbb
cmp
pop
jnp
cmp
lcall
pop
mov
aad
test
jnp
sbb
inc
jge
cwtl
loopw
jp
lret
lods
adc
enter
dec
subl
sub
stos
loope
and
js
sub
dec
and
cmp
nop
lds
cmp
repnz
xchg
mov
aad
inc
and
aad
inc
data16
es
mov
adc
aad
sub
fwait
cmp
test
fisubs
cmpsl
out
sub
shll
sbb
std
stos
mov
dec
mov
je
ret
dec
loop
mov
sahf
cmp
lret
frstor
adc
inc
jae
add
sbb
movl
out
mov
ficomps
mov
orb
pop
ds
sub
push
pusha
dec
lock
adcb
xchg
loop
xchg
jnp
das
loopne
sub
sbb
in
adc
rcrl
popf
dec
and
xor
mov
rorl
pop
xor
xor
sub
stc
test
cmovnp
mov
xchg
push
or
fbstp
push
jle
jge
sti
clc
cmp
inc
or
and
push
pusha
cmp
cwtl
cwtl
enter
mov
clc
jmp
hlt
pop
insl
cld
outsb
jae
lds
leave
lret
pop
sub
xchg
push
jbe
xchg
dec
or
sub
jge
dec
mov
aam
xor
dec
out
push
loope
or
jno
dec
jmp
pop
stos
mov
mov
push
or
jb,pt
stos
pop
test
cmp
jecxz
mov
jl
pop
cmpb
movsb
clc
insl
or
sbb
jno
sub
sbb
and
aad
sti
and
int3
jp
xchg
dec
and
int3
push
jmp
pop
pushf
add
bound
fs
inc
test
push
xchg
cmp
int3
xlat
mov
jbe
adc
and
in
fidivs
push
add
mov
add
dec
or
shll
ljmp
push
test
int3
test
dec
mov
cmpsl
and
or
pop
inc
icebp
pop
sbb
xchg
sbbb
xchg
jo
dec
mov
test
xchg
mov
ss
xchg
push
shll
adc
test
repnz
jne
outsl
xor
pop
les
scas
negb
mov
mov
xlat
pop
roll
enter
pop
adc
mov
gs
scas
sub
rcll
inc
stc
scas
mull
jle
popa
sbb
out
imul
inc
dec
adc
adc
sti
sbb
adc
incl
xorb
out
cmpsl
push
mov
or
lods
sbb
sub
test
jg
icebp
mulb
lds
add
xor
loop
xor
or
cmp
xor
lret
xlat
dec
jmp
pop
jmp
aaa
fsubrp
sbb
push
mov
pop
mov
jl
sub
ret
hlt
jne
or
add
inc
shll
mov
dec
xlat
sub
test
push
mulb
notb
mov
loope
sarl
in
dec
lret
ret
sar
cwtl
dec
mov
mov
inc
mov
stos
repnz
fcoms
and
jg
lahf
mov
lods
bound
push
dec
add
cmp
hlt
mov
add
shll
dec
or
jne
pop
repz
mov
lods
and
stos
inc
popa
pop
dec
ljmp
js
cmpsl
sarb
push
dec
sbb
sub
popw
pop
fbstp
pop
cmc
sbb
or
in
cmp
mov
jo
xchg
mov
push
mov
dec
push
sbb
xchg
mov
mov
and
movsl
push
cmp
dec
jb
xchg
cmp
dec
and
lods
lret
push
test
cmp
in
pop
and
push
mov
push
test
xlat
cmc
and
stos
scas
and
popf
mov
add
xchg
cmp
pop
xchg
inc
or
add
dec
arpl
pushf
xor
push
fs
push
pop
xlat
aaa
jae
or
scas
cwtl
mov
cmp
inc
les
or
add
sub
gs
and
dec
jle
jl
sbb
sub
xchg
loope
mov
pushf
loopne
dec
fstpt
or
je
xchg
shrl
repz
popw
and
mov
push
int3
pop
dec
adc
mov
lahf
ljmp
fildll
xor
fldl
push
sub
pop
xor
das
adc
cmp
aaa
test
push
or
pop
lods
fwait
sub
mov
xchg
dec
xchg
fwait
jb
fnstenv
push
stc
mov
or
jo
xlat
ret
jbe
in
daa
dec
js
inc
das
sub
test
inc
scas
movb
cmc
and
icebp
pop
add
jb
xor
add
lods
xchg
mov
adc
add
cltd
aad
daa
fs
into
pop
cs
jl
in
inc
fists
lods
mov
call
adc
pop
sbb
or
cmp
into
lahf
test
std
xchg
mov
cmp
sbbb
fstl
movsl
mov
or
push
int3
enter
cmc
out
out
jne
ret
icebp
adc
ds
js
std
imul
jne
rcrl
inc
test
adc
xchg
pop
xor
xchg
lahf
add
adc
pusha
jbe
insb
add
adc
loopne
sbb
mov
mov
jg
sbb
and
ret
mov
and
adc
loopne
out
cmpsl
out
or
in
cmp
andb
sbb
aas
pop
cmp
daa
sub
fs
push
pop
das
push
sbb
and
mov
sbb
mov
xorl
cmp
pop
xorl
inc
mov
mov
ror
cli
jae
ss
fidivl
dec
push
pop
pop
mov
sbb
mov
ljmp
dec
movsb
mov
into
and
les
jns
inc
adc
jbe
inc
insb
std
aaa
pusha
push
stos
scas
mov
jns
xchg
mov
xchg
dec
cmpsb
inc
mov
ljmp
shr
mov
lods
fldl
mov
push
iret
cld
pop
xchg
mov
pop
fdivrs
xor
in
lcall
xor
mov
test
out
push
and
loope
popa
lods
inc
mov
mov
cmc
sbb
mov
sbb
test
lcall
call
pop
out
arpl
jmp
test
adc
sbb
add
inc
mov
aad
inc
scas
sub
xor
pop
scas
and
loope
icebp
ds
mov
pop
push
mov
mov
and
inc
xor
push
repnz
mov
js
push
mov
fistpll
mov
push
add
cmp
xor
call
idiv
cld
js
cmp
fidivs
ja
push
idivl
push
scas
push
inc
mov
inc
ja
nop
mov
mov
and
popf
pop
mov
rol
out
lods
pop
push
movsb
mov
pop
pop
add
pop
adcl
arpl
xchg
pop
jae
add
add
cwtl
movsl
popl
incl
aam
jb
xchg
push
sar
inc
js
inc
call
mov
test
xchg
popf
aaa
mov
push
scas
sub
push
movsb
testb
adc
push
mov
andb
xchg
std
dec
movsl
jmp
jne
loop
dec
sarb
std
out
in
cmpsl
sub
xchg
nop
jne
jns
sub
and
mov
jg
inc
and
and
jge
lahf
cld
ja
and
fistpl
inc
scas
adc
fwait
mov
icebp
or
cld
push
add
sahf
loope
jl
ja
ds
sub
dec
wbinvd
sub
jnp
lods
and
xchg
test
in
pop
notb
in
fisttpl
or
outsl
mov
mov
mov
xchg
jecxz
xchg
sub
shl
mov
rolb
cwtl
adc
mov
pop
in
gs
shrb
add
inc
pop
test
inc
add
push
mov
pop
inc
dec
push
pop
int3
int
inc
pop
mov
std
insl
xchg
lcall
mov
psadbw
dec
inc
scas
je
mov
lock
mov
fistpll
imul
enter
mov
adc
pop
add
xchg
push
inc
mov
sbb
push
js
or
ds
sbb
test
jg
test
mov
mov
adc
add
add
mov
fwait
sahf
das
fists
dec
test
mov
faddl
clc
and
mov
fwait
and
xor
cmpsb
mov
fsubr
push
xor
lahf
xchg
push
inc
add
xchg
lods
xchg
xchg
leave
adc
imul
sub
mov
inc
jmp
in
mov
loope
and
mov
mov
insl
js
xchg
xor
jl
xor
lret
xor
test
ret
rolb
ret
xchg
sub
imulb
lahf
fstpt
pushf
or
subl
xor
push
rorl
stc
stc
ss
sbb
push
or
add
sub
lret
mov
pop
xchg
adc
xchg
xchg
xchg
das
cmp
and
aas
loope
xchg
sub
in
insb
std
sbb
mov
add
sbb
xchg
sub
ret
xchg
imull
andb
mov
loopne
xchg
xlat
fs
and
loopne
sbb
dec
repz
xorl
jmp
and
nop
xchg
outsb
lret
sbb
jl
dec
movsb
jno
mov
push
popf
inc
dec
fwait
movsl
adc
inc
ja
stos
in
cmp
rclb
and
xchg
mov
adc
negl
sbb
sbb
or
mov
fcomps
aam
lret
sub
push
jno
xchg
enter
sti
sbb
xchg
movsb
sub
int
test
or
mov
dec
xchg
and
jg
adc
push
cmp
loop
pop
fwait
in
push
push
inc
sbb
leave
scas
les
adc
out
adc
add
add
and
sahf
inc
lds
sbb
ljmp
push
add
xchg
jns
mov
dec
pop
pop
xchg
std
xchg
sub
mov
xlat
or
inc
repnz
inc
icebp
inc
dec
decl
or
test
dec
jmp
hlt
jne
jb
sbbl
ss
pop
lret
pop
and
aas
and
ret
adcb
in
mov
xchg
out
test
and
aas
jp
xchg
lahf
push
mov
test
push
hlt
xor
mov
aas
cwtl
xor
lock
std
movsl
inc
dec
pop
cmp
cmp
repnz
and
add
data16
aam
scas
outsl
jo
mov
pop
in
lods
jmp
mov
mov
xchg
adc
hlt
arpl
in
enter
enter
dec
fisubrl
inc
imull
outsb
std
mov
outsl
out
jp
sbb
jns
sbb
mov
dec
ljmp
push
cmp
ret
into
movb
in
pop
mov
ljmp
push
inc
ret
jg
or
dec
test
mov
lea
pmaxsw
imul
cli
mov
out
xor
adc
stos
jge
xor
mov
loope
dec
mov
mov
xor
arpl
shll
adc
scas
add
data16
dec
adc
mov
addr16
sti
xor
inc
mov
xchg
stos
nop
sahf
add
out
inc
mov
inc
imul
hlt
cmp
std
xor
add
mov
js
lahf
lock
mov
cmpb
jmp
lock
pop
cmc
scas
push
or
pop
out
inc
mov
and
mov
bound
ljmp
add
mov
mov
push
jmp
ret
cli
data16
push
loopne
movl
xchg
push
outsb
mov
jbe
or
cmpsl
in
outsb
mov
pop
stos
inc
fiadds
lahf
add
xlat
push
cmp
jmp
repnz
scas
mov
jmp
insb
and
ja
adc
cmp
sbb
jl
inc
push
inc
fstps
test
sti
adc
scas
push
mov
xor
lea
adc
adc
mov
rol
sub
in
mov
xor
jl
jnp
xor
cli
sbb
test
stos
fcmovne
ret
xlat
roll
stos
and
shll
movsb
sbb
ret
mov
out
push
fbstp
outsb
sub
mov
loop
sub
adc
or
subl
or
sbb
inc
mov
aaa
push
mov
or
inc
leave
lahf
gs
pop
xor
ds
xchg
pop
pop
mov
cmpsl
jmp
push
call
mov
sbb
lret
or
cmp
ljmp
ffreep
xchg
test
insl
xchg
add
lret
xor
dec
sbb
xor
or
cmp
mov
xor
mov
sub
sub
xor
push
aas
lods
or
mov
mov
inc
pop
cmp
outsb
xlat
aas
js
in
lahf
push
push
test
cmp
inc
in
dec
inc
sub
scas
adc
insl
add
mov
xor
lods
sub
lea
test
clc
in
cmpsb
xlat
insl
sub
mov
int3
xorb
or
mov
push
dec
lahf
pop
decb
inc
aas
mov
std
sub
jno
mov
lret
jmp
sub
mov
push
je
test
loopne
stos
imul
out
shr
cli
inc
push
dec
out
dec
stc
xor
enter
add
lods
test
mov
cwtl
push
pop
mov
xchg
xor
test
cmpsb
cmp
jbe
cmp
cwtl
in
xchg
stos
cld
dec
inc
xor
mov
mov
inc
loopne
xor
push
in
repnz
loop
adc
lret
sbb
cs
mov
sbb
imul
aam
mov
pop
jns
enter
sub
out
fnstcw
sahf
or
sbb
scas
rol
insl
popa
cmpsl
int
jecxz
pop
cmp
jecxz
out
push
int
inc
loop
push
jmp
cs
sbbb
jb
movsb
imul
inc
lcall
ds
nop
shrb
pop
cmp
sub
mov
stos
jno
js
mov
add
mov
sbb
push
pop
iret
cltd
out
int3
fisubrl
inc
xchg
jecxz
arpl
pop
adcb
push
pop
lods
in
jge
push
mov
push
or
lret
leave
jl
fcomp
cld
loope
arpl
jb
aaa
xlat
ja
ret
std
mov
in
or
sbb
dec
int
mov
les
fldt
repnz
cltd
push
mov
fdiv
fs
and
inc
add
scas
setl
mov
stos
cmc
es
hlt
push
pop
das
adc
jmp
cld
cmpsb
out
jbe
lret
or
pop
out
cmp
inc
jle
dec
lahf
ret
fst
aas
push
popa
mov
andb
cmp
sbb
or
arpl
pop
xchg
cmc
push
push
aas
inc
push
inc
scas
in
rol
aas
inc
out
mov
jae
push
xchg
cli
add
adc
mov
fists
std
aam
add
das
cmc
mov
lahf
into
jns
inc
mov
mov
imul
xor
fdivrs
mov
sub
add
jns
adcb
mov
mov
sbb
mov
in
lds
outsb
push
mov
sbbb
loope
xchg
sub
adcl
fistpl
ss
dec
adc
ret
mov
lock
xlat
push
mov
outsb
push
push
cmc
xchg
lods
sub
testl
and
idivl
or
fnsave
mov
sbb
das
cmp
aam
ret
add
cwtl
jl
lahf
rolb
nop
and
or
ja
out
mov
lahf
push
jecxz
cmp
outsb
test
and
pop
inc
gs
dec
xor
int
lahf
cmp
repnz
xor
and
pop
mov
js
push
decl
mov
add
push
and
lds
xchg
mov
and
lods
jbe
movsl
mov
cld
sub
sub
std
cld
fwait
pop
into
xchg
fs
jge
int
dec
add
sbb
fwait
lock
arpl
push
cltd
outsb
bt
hlt
xor
rorl
push
inc
adc
fdiv
in
and
lock
xor
incb
mov
dec
push
pop
cld
nop
leave
jmp
push
fistpl
sbb
pop
in
xor
pop
mov
pushl
push
mov
repz
cmp
sbb
adc
push
jmp
fwait
mov
cmp
and
pop
stos
in
in
ss
lods
pop
xchg
das
mov
inc
xchg
loopne
ficoml
shll
dec
pop
adc
fsubrl
js
dec
ret
and
lret
inc
shl
dec
sub
roll
mov
sub
inc
xor
inc
daa
daa
out
or
xor
add
in
mov
mov
xchg
mov
dec
lahf
lea
incl
push
and
sub
loopne
xor
sbb
mov
mov
popa
stos
mov
mov
xor
imul
lods
sti
call
cld
test
push
and
icebp
xor
out
mov
repz
lock
scas
sbb
cwtl
out
test
lret
aas
xchg
in
lcall
test
jmp
mov
inc
mov
inc
xor
lret
sub
jecxz
aas
jl
popf
loopne,pt
int3
cmp
imul
cmpsb
mov
mov
mov
mov
adc
gs
mov
std
sbb
insl
imul
mov
cmp
pop
movsl
jne
jb
adc
jge
dec
hlt
dec
outsb
cmpsl
push
cld
cmp
ret
xchg
out
xchg
mov
mov
sahf
lds
lds
std
imul
pop
lods
xor
push
pop
cmp
loop
lret
xchg
sbb
dec
fmulp
xchg
sub
fcomip
or
and
pop
sbb
mov
fidivrl
pop
push
mov
rolb
mov
int3
jo
stc
pop
mov
jge
or
jge
int
ret
rol
xchg
dec
mov
lock
jbe
xchg
icebp
and
aad
sti
lret
int3
test
xchg
js
inc
cwtl
or
pop
sbb
push
ja
test
insl
test
xor
or
or
cld
mov
mov
pop
in
pop
and
xchg
in
cmpsb
xchg
add
hlt
out
aam
add
mov
loop
jmp
jne
idivb
and
cmp
test
movsl
les
jnp
push
sub
dec
leave
je
push
mov
mov
in
fistpl
fldenv
xchg
pop
or
std
mov
insb
inc
mov
pop
xor
orb
cmp
cs
inc
mov
test
pop
cld
out
sbb
sbb
adc
add
jg
and
pop
mov
insl
push
dec
jecxz
push
cmp
xchg
cmp
outsl
mov
mov
adc
mov
sbb
test
cmp
jbe
push
stc
outsl
lcall
jno
cmp
pop
push
cld
pop
lds
push
adc
mov
xchg
sub
fdivrp
outsl
call
sbb
xor
xchg
lock
aaa
jno
int3
mov
or
adc
fcoml
jecxz
inc
pop
mov
dec
into
lret
mov
movsl
xchg
mov
sbb
das
lods
in
outsb
push
pop
jb
or
mov
lret
push
xchg
mov
xorl
sahf
pop
jbe
call
mov
xor
iret
push
sarb
aad
jno
int
jmp
or
cmp
jnp
mov
jg
arpl
shlb
leave
mov
pop
xchg
sbb
adc
or
sbb
jae
lods
sub
loope
mov
arpl
sti
repnz
sbb
jmp
cmc
xchg
fsubr
jmp
outsl
in
sbb
jle
mov
mov
and
jmp
sbb
push
sbb
jnp
jns
inc
cmp
movsl
pop
cmp
clc
nop
xor
jne
jns
lret
dec
mov
or
pop
sub
xchg
push
cmp
pop
dec
ret
cmp
lock
mov
fadds
jge
stos
in
out
iret
inc
lret
daa
and
sar
cwtl
sbb
hlt
push
mov
mov
mov
int
push
faddp
push
add
xor
sbb
push
dec
or
jo
xchg
xor
dec
inc
push
lahf
insl
ret
cmc
and
mov
mov
adc
repnz
mov
out
out
popf
jp
out
push
pushf
push
popf
cmpsl
sub
cmp
push
mov
fildll
pusha
pushf
dec
cmp
aas
inc
sbb
ds
add
mov
and
test
or
rclb
sbb
xor
push
cmp
xor
mov
in
call
bound
jmp
ss
mov
or
stc
dec
pop
pop
aam
inc
repz
loopne
es
xor
stos
sbb
and
xchg
and
movsb
and
sub
add
adc
xor
jae
call
movsl
pusha
sbb
gs
in
rep
daa
ret
pop
lea
and
outsb
cmp
aad
out
dec
push
pop
pushf
push
in
jae
fidivs
in
mov
and
inc
nop
jge
test
rcrl
jge
aaa
cmpsb
fists
inc
cmp
clc
mov
mov
lret
ror
nop
jecxz
mov
sub
scas
xchg
loope
ficoml
xor
std
pop
notl
sbb
jle
xchg
xor
fcom
push
test
sbb
stc
stos
cmpb
or
popl
iret
push
mov
aad
outsl
add
sbb
int
sbb
xor
or
rcpps
push
mov
xchg
mov
in
or
fldenv
hlt
cli
ljmp
fstpl
sarl
ja
mov
gs
jmp
enter
and
push
mov
xor
mov
lea
mov
xor
aas
lret
inc
sub
push
enter
filds
jb
pushf
inc
mov
xchg
push
push
push
cmc
insb
dec
mov
or
mov
push
insb
push
mov
sub
shll
pop
jb
xchg
sar
lret
mov
loopne
inc
out
je
xchg
ret
popf
leave
jne
jb
add
mov
or
mov
pop
xchg
push
inc
push
sub
test
add
jmp
testb
push
sar
xchg
cmp
out
mov
xchg
stos
or
lcall
xor
push
ss
adc
loopne
roll
stos
push
pop
pusha
pop
sti
inc
cwtl
into
fcmovu
test
xchg
fistpll
sbb
scas
hlt
loopne
inc
rol
sub
sub
mov
mov
sbb
inc
cs
es
jmp
rcrb
fdivl
mov
test
mov
repnz
inc
fists
iret
add
mov
add
pop
addr16
sahf
xchg
int3
xchg
mov
sub
push
cmp
fidivl
fs
ret
mov
leave
and
test
and
out
adc
cmp
xchg
inc
add
or
push
mov
xor
fadds
fdivl
or
mov
xchg
fsubr
inc
fdivrs
daa
pop
add
in
adc
pop
mov
outsl
into
les
dec
shrb
or
mov
rcll
xchg
cmpsb
popa
ret
out
rorb
rsqrtps
mov
movsb
xchg
data16
cmp
push
mov
mov
or
sbb
push
and
mov
add
sbb
mov
mov
fbstp
adc
cmp
and
test
xchg
js
sbb
daa
jle
mov
iret
jo
fcmovnu
sbb
mov
clc
cmp
sahf
imul
gs
rclb
mov
lds
inc
repz
xlat
cmpsl
cmp
jmp
fld
iret
addr16
or
dec
mov
jnp
test
icebp
jns
addr16
je
lods
aad
jmp
cwtl
test
subl
ficomps
sub
inc
pushf
mov
sbb
cs
leave
movsb
repnz
mov
in
xchg
cmp
xchg
xchg
fs
push
cmp
push
mov
xchg
fldenv
pop
repz
pop
stos
xor
rcll
mov
call
pop
inc
ljmp
push
add
xor
sub
cwtl
adc
push
mov
mov
out
xchg
jbe
mov
fdivrs
sbb
cmp
push
cmp
adc
xlat
stc
dec
mov
pop
ja
notl
push
jmp
dec
push
mov
pop
inc
add
cld
cmp
lcall
sbb
or
movl
cmpsb
sbb
inc
inc
dec
push
jp
ja
push
scas
lods
sub
adc
fldl
roll
and
add
cs
rorl
sbb
sub
mov
in
addr16
inc
mov
sub
popa
mov
sbb
push
lock
sbb
cld
lds
push
sub
idivb
and
sarl
or
movsb
sbb
stos
aas
andb
inc
inc
mov
push
xchg
imul
add
daa
push
push
sahf
xorb
mov
inc
inc
lahf
add
imul
iret
push
test
aas
int3
popa
lock
mov
loop
dec
sub
imul
or
call
add
inc
push
dec
into
mov
mov
jmp
in
or
xchg
or
cltd
pop
sub
and
fs
test
and
pushf
mov
sbb
inc
push
in
jecxz
jp
repz
sbb
shll
int
cwtl
xor
push
push
add
test
loop
add
sbbb
mov
cli
pop
cmp
add
outsb
jnp
std
mov
jo
cli
inc
sub
or
fildl
lock
pop
ret
pop
jg
jge
xor
and
es
sbb
mov
cmp
cltd
jae
test
xchg
mov
mov
sbb
data16
in
daa
fstpl
pop
rorl
test
fwait
ljmp
xchg
sahf
pop
hlt
test
adc
mov
rorb
ret
fwait
and
movsb
mov
inc
mov
fiadds
mov
ret
sarb
add
xchg
fs
sbb
shlb
add
mov
into
fisubs
imul
jae
call
fists
in
rorb
sbb
les
jp
outsb
mov
xchg
inc
jo
pusha
and
jmp
mov
addr16
lds
stos
pushl
adcl
daa
xchg
adc
divb
mov
dec
stos
xor
mov
adc
pop
mov
es
push
ss
xorl
cmp
arpl
sub
dec
lds
call
sub
mov
imul
sar
mov
push
test
mov
sbb
pop
stos
scas
aas
popf
mov
xor
movsl
mov
cmpsl
movsl
add
cmp
lea
scas
test
or
push
aad
push
mov
sti
xchg
mov
jae
mov
or
cmp
stc
sub
jne
or
incb
outsl
push
cmp
or
mov
and
test
popf
pop
andb
in
xor
xchg
inc
sub
sbb
cltd
mov
mov
mov
hlt
mov
das
push
dec
mov
mov
xor
push
jg
movsb
inc
add
jbe
pop
pop
insb
dec
jo
inc
adc
sub
cmpsl
adc
mov
push
into
imul
xchg
xchg
cld
arpl
push
aaa
pop
icebp
fs
inc
and
xchg
js
cmp
insl
rolb
xchg
movb
pop
xchg
movsb
or
popa
jle
xchg
fiadds
pusha
adc
popa
xchg
xchg
adc
sti
rcrl
sub
xor
cs
fs
movsb
xchg
dec
cs
js
unpckhps
inc
xchg
cs
mov
call
aas
pop
sar
mov
mov
or
mov
out
inc
jge
cmc
movsl
mov
adc
roll
daa
iret
lods
or
popf
xor
int3
push
jne
xchg
fwait
inc
std
adc
je
das
mov
jecxz
add
fcompl
sub
mov
add
xor
ss
ret
xor
and
test
lods
pop
jp
adc
pop
test
mov
gs
popf
mov
pop
push
mov
loopne
and
jae
xchg
mov
addb
dec
xchg
adc
pop
or
ds
xor
push
mov
xchg
add
push
xchg
inc
push
adc
loope
popf
add
sbb
push
fwait
mov
rcll
mov
mov
pop
xlat
xchg
xchg
and
pop
test
add
insb
enter
lock
jg
loope
popf
push
mov
pop
popf
out
or
frstor
in
xchg
jecxz
fisubs
fnsave
ret
dec
lock
fidivl
push
mov
and
xor
xlat
add
das
mov
aam
mov
popl
adc
xchg
fs
dec
xchg
rorb
sbb
sbb
add
push
sbb
push
mov
cmc
fs
roll
mov
arpl
in
inc
es
lods
sahf
jnp
xchg
mov
inc
test
ds
pop
xchg
push
sub
xor
mov
push
xor
or
inc
sbb
cmp
stc
mov
mov
daa
jecxz
das
or
test
cltd
pusha
xchg
mov
sbb
lret
inc
in
and
cwtl
push
fsts
mov
xchg
mov
dec
ja
push
js
mov
mov
arpl
sbb
lds
mov
loop
mov
mov
and
in
rdtsc
mov
je
adc
inc
add
hlt
pop
insb
sbbb
sub
and
mov
mov
mov
mov
push
loop
sub
mov
add
mov
mov
sub
pop
xchg
pop
out
adc
lods
jne
repz
cli
jbe
hlt
add
fisttpll
cmp
add
lods
xchg
daa
ds
inc
fs
loopne
jg
cwtl
mov
mov
bound
and
xchg
sbb
xlat
fs
lock
pop
mov
rorl
stc
lcall
push
mov
notl
xlat
aas
fstpt
outsl
sub
sub
pop
sbb
or
mov
inc
pop
sub
jns
and
mov
and
mov
fcmovbe
bound
daa
and
js
pop
push
jl
xchg
iret
add
push
pop
lods
dec
mov
pop
sbb
mov
daa
xchg
inc
push
mov
movsl
push
rol
leave
mov
push
scas
jl
xchg
push
sbb
dec
jb
sbb
mov
in
rolb
and
mov
push
sub
gs
test
stos
data16
imul
imul
jbe
repnz
lcall
mov
sub
jl
icebp
movsl
fsubs
push
sbb
movsb
or
mov
xor
xchg
adc
xchg
xchg
mov
scas
jb
mov
repnz
testl
scas
lahf
test
mov
clc
mov
lcall
in
loop
mov
aaa
dec
dec
mov
sbb
pop
outsb
ds
sub
pop
arpl
pop
pusha
cmp
inc
xor
iret
fiadds
push
jmp
jecxz
xor
aad
test
mov
pop
mov
push
sub
or
mov
mov
mov
jns
xor
daa
cmp
mov
test
jge
push
fwait
and
cmp
sahf
push
xor
mov
fwait
cmpsl
int
out
stc
fnstenv
cwtl
movsl
cmp
fchs
aas
inc
call
mov
mov
adc
inc
adc
cld
ret
dec
cmp
pop
aaa
cmpsl
or
shlb
and
or
xchg
outsl
inc
and
insb
add
fcomi
test
icebp
leave
sub
mov
out
pop
lcall
xor
inc
mov
repnz
sbb
pop
xchg
mov
sahf
mov
inc
leave
push
xchg
xchg
fmul
mov
adc
add
test
out
movsl
mov
adc
clc
xorb
rcrb
loop
mov
movsl
stc
jmp
test
popf
popf
test
jo
nop
jl
nop
scas
cmpsl
fcomps
and
out
insl
inc
cmp
jb
fmull
cmpsl
fidivl
mov
mov
dec
cmpl
lea
cmc
push
pop
xchg
ds
popf
sbb
or
flds
int
inc
mov
bound
in
sbb
test
and
jle
into
adc
iret
add
push
hlt
lgs
xor
negl
sub
stc
sub
adc
lds
arpl
lret
xchg
adc
jne
not
push
aam
dec
scas
xlat
in
inc
add
jmp
insl
aam
xchg
clc
lret
sbb
lods
add
ss
leave
fildll
mov
add
in
rorb
cmp
insb
xlat
mov
inc
inc
cmpsl
rcrl
or
adc
xor
sbb
mov
mov
cmp
in
idiv
or
or
push
inc
popa
mov
das
fdivrs
xchg
push
addb
idivb
cmp
adc
cmp
out
sbb
and
jg
mov
test
dec
and
lock
fstps
filds
addr16
shr
lahf
scas
stos
movsb
std
mov
into
add
mov
ja
clc
jo
pushf
mov
jo
sarl
fs
call
iret
push
and
bound
jmp
shlb
xor
xchg
insb
cmpsl
push
pop
adc
cld
jne
mov
call
je
aad
dec
mov
out
call
idivb
test
outsb
jbe
dec
push
aam
dec
jb
in
sub
lock
pop
fs
mov
mull
fcoms
pop
xor
bound
lock
movsl
cli
dec
mov
inc
imul
imul
fisttpll
es
js
lret
push
addr16
xor
cmp
xchg
add
sbb
jo
inc
jl
cmpsl
fmuls
sbb
xor
inc
aaa
insb
das
xor
xchg
lcall
clc
add
out
jmp
icebp
push
sub
bound
pop
aas
cmpsb
mov
sub
pop
sub
mov
jno
int
mov
adc
in
sbb
test
in
xchg
fcomps
adc
sbb
jg
int3
out
adc
in
hlt
push
inc
cmp
xchg
mov
enter
aaa
nop
enter
shlb
movsl
sbb
push
addr16
cmc
xor
ljmp
out
in
pusha
push
cs
adc
hlt
shrl
dec
fwait
inc
mov
mov
ja
xor
inc
sub
xchg
dec
sbb
adc
mov
test
mov
or
mov
lcall
or
xchg
adc
addr16
out
xor
xchg
cli
adc
std
jge
jge
stos
es
inc
call
and
sub
sub
inc
mov
push
mov
inc
dec
lret
ret
idivl
push
push
adc
out
cli
call
adc
ds
xchg
insl
pop
pop
gs
dec
xor
out
stos
dec
jnp
ss
shlb
and
js
arpl
xchg
xor
into
pop
pop
add
loope
cmpsb
sub
lret
dec
or
push
stos
sub
fcompl
aam
jle
std
xchg
data16
leave
xor
mov
xchg
mov
xchg
movswl
mov
inc
mov
in
out
jp
ljmp
xchg
jae
mov
dec
cwtl
cmpsb
cld
mov
push
or
call
out
jp
ret
int
mov
leave
dec
mov
add
lahf
xor
lret
sub
xchg
inc
lods
xchg
pushf
jmp
fildll
sub
sub
jp
push
out
nop
sarl
add
out
call
sbb
mov
add
mov
aaa
add
xor
cmp
out
shlb
lahf
rolb
cmp
mov
adc
cmp
mov
addr16
xchg
mov
les
fisttpll
enter
pop
or
sub
rorb
adc
sbb
popa
daa
ret
popa
mov
xchg
mov
fwait
popa
repnz
pop
mov
lea
pop
xchg
arpl
jecxz
inc
lea
fwait
dec
adc
push
jne
shl
lahf
aam
testl
aad
add
fstpl
pusha
in
test
push
rorb
xchg
mov
push
js
cmpb
pop
mov
add
fidivrs
cmp
push
scas
xchg
icebp
sbb
fstpt
xchg
lret
mov
test
pop
push
xorb
sarl
mov
dec
mov
xchg
mov
icebp
dec
imul
popa
shll
roll
xchg
dec
gs
imul
lret
call
mov
das
mov
je
xor
lods
dec
jo
cmc
cmc
pop
cmp
shlb
pop
scas
ljmp
test
aad
jb
adc
jb
dec
ja
lahf
clc
xchg
mov
lock
push
xchg
cmpsb
imul
push
pop
xchg
mov
add
or
xchg
call
enter
iret
fistpll
ficomps
cld
mov
lds
mov
popf
test
pop
cmp
or
movsl
push
sub
stos
lock
or
shrb
mov
sbb
dec
repz
repz
mov
stc
adc
shll
sub
movsb
xor
mov
cmp
push
jnp
aam
lods
or
outsb
enter
pop
push
jge
scas
test
dec
out
call
sbb
shll
lahf
arpl
lds
adc
fisttpll
testl
pop
lods
lcall
lahf
dec
into
mov
push
inc
ret
dec
mov
dec
add
andb
pop
xchg
pop
mov
and
lods
cmp
dec
jg
mov
arpl
negb
fcoml
jb
mov
pop
jle
lcall
imul
cmp
imul
jmp
mov
xchg
sbb
in
push
jb
add
cmp
ret
aam
repz
iret
mov
testl
les
cmc
mov
inc
push
lock
decb
mov
cld
add
rclb
mov
hlt
jnp
cli
dec
push
or
insb
mov
dec
mov
dec
aad
out
sub
xor
loop
xor
in
lds
mov
out
pop
mov
pop
mov
hlt
incb
mov
inc
and
pop
sub
cwtl
iret
mov
jns
pop
sarb
cltd
je
mov
cmp
xchg
addr16
or
mov
out
jnp
push
push
adc
xchg
mov
xchg
ds
push
mov
mov
xor
mov
add
scas
xor
cltd
sub
mov
ret
pop
and
inc
incb
cltd
roll
or
pusha
push
adc
lds
add
mov
data16
pop
push
xchg
fwait
mov
pop
je
repz
dec
iret
enter
loopne
fistl
fnstsw
jmp
popf
adc
popa
and
or
push
aam
cmovb
jl
inc
pop
loopne
popf
and
lea
jo
aad
or
pushf
test
ss
ds
movsl
mov
mov
mov
pusha
lahf
out
testb
in
fdivrl
lock
and
pop
popa
bound
out
lcall
rorl
das
cmp
je
push
or
mov
repz
out
test
or
push
arpl
sarl
mov
mov
and
jne
xor
cmp
xor
mov
adc
jbe
lret
or
sbb
les
iret
test
add
mov
notb
je
sbb
je
jns
gs
leave
cs
sbb
jmp
int3
js
inc
sub
int
and
sbb
mov
je
mov
rcl
cmp
cmp
jb
iret
mov
and
add
in
dec
jno
pop
popa
insl
fisubrs
lahf
insb
add
sti
sbb
scas
sbb
xchg
aad
xor
xor
fimull
adc
sahf
cmp
pop
inc
lds
mov
aas
test
fwait
rorb
jbe
add
loop
adc
push
loope
iret
push
pop
popa
jmp
dec
insl
mov
or
frstor
mov
jno
xchg
adc
outsb
stos
cmp
std
addr16
add
xchg
lock
imul
jne
loope
mov
mov
addl
fidivs
xchg
xchg
insb
cmp
mov
or
jnp
test
push
stc
pop
mov
sub
in
push
push
add
popa
fisttps
outsl
push
je
or
leave
add
sbb
enter
testb
lahf
jge
clc
pop
cltd
enter
insl
jecxz
mov
xor
rolb
dec
ljmp
mov
cmp
aam
add
add
mov
std
mov
mov
cmp
in
xor
ss
inc
add
shlb
xchg
jae
cli
inc
mov
fucomi
stos
test
loope
sahf
imul
test
cmp
and
push
data16
dec
js
cld
dec
das
jno,pn
std
dec
sub
imull
xchg
mov
les
inc
dec
mov
aaa
fimuls
outsb
adc
pop
stos
call
mov
push
mov
andl
mov
inc
jno
xchg
in
fsubs
push
xor
fs
push
cld
xchg
scas
dec
add
leave
fiadds
pop
dec
popa
cmp
rcll
pusha
outsl
ret
lods
xor
lods
cmp
loopne
outsl
repz
ljmp
hlt
lea
out
lea
adc
mov
or
rolb
pop
sub
sbb
sub
mov
jg
push
push
cmpsl
add
cld
adc
xchg
lods
loop
ljmp
mov
and
inc
gs
cmp
xchg
mov
adc
xor
ljmp
add
aam
xchg
aaa
clc
jne
xor
jnp
xchg
aad
add
inc
cmp
imul
shrl
adc
sbb
clc
and
adc
push
and
inc
jb
sti
or
xor
jg
mov
push
aad
xorb
jg
adc
outsb
xchg
dec
mov
jecxz
sbb
and
repnz
mov
repnz
push
xchg
inc
int3
or
push
xor
ficomps
call
adc
mov
data16
les
inc
aam
ss
jnp
mov
movsb
xchg
dec
or
mov
adc
mov
cmp
mov
cmp
mov
mov
mov
jne
gs
ja
pushf
mov
nop
and
rcrl
inc
cli
pop
mov
push
lock
out
repz
sbb
cmp
sub
inc
sbb
arpl
inc
sub
jge
fwait
pop
or
sti
adc
mov
out
inc
ljmp
dec
shlb
bound
xor
nop
mov
mov
mov
dec
jmp
pop
xchg
sbb
or
loope
movhlps
add
pop
enter
sbb
cs
fisubl
aam
mov
ret
push
pop
sub
add
jp
jl
cmc
xchg
leave
add
dec
jns
cmp
xchg
push
fisubrs
xchg
test
jle
fnsave
sub
xchg
repz
mov
xchg
xor
pop
mov
fwait
sahf
lds
jbe
je
aam
pusha
lahf
lods
lcall
xchg
cli
mov
jbe
sub
outsl
adc
push
fimull
mov
cmp
xchg
jl
aaa
inc
and
and
popf
ret
cmp
mov
mov
xchg
rorb
pop
sbb
int3
xor
fstpt
and
adc
mov
inc
pop
pop
and
pop
push
roll
sub
and
push
inc
cltd
pusha
sub
cmpsl
mov
iret
mov
dec
or
sbb
pushl
arpl
pop
xchg
jae
add
lods
icebp
inc
outsl
dec
sti
pop
push
pop
xor
sub
dec
icebp
cmp
mov
jae
lods
int
or
add
sbb
xor
std
pop
cmp
cmp
fldt
roll
adc
fs
xor
sti
inc
es
or
mov
int
faddl
or
mov
inc
pop
jl
hlt
cmp
jp
bound
jns
jne
arpl
sahf
push
sbb
and
insb
mov
or
mov
je
push
jno
stos
adc
lret
popa
sbb
sub
mov
out
add
mov
faddl
push
dec
jne
dec
push
orl
ja
and
pop
loope
pusha
and
cmp
dec
outsb
xor
jbe
add
nop
es
adc
mov
test
shll
and
dec
out
lods
sub
sbb
and
cltd
js
mov
es
test
out
ret
push
mov
std
sbb
dec
cwtl
and
adc
mov
add
pusha
gs
fucom
sub
adc
dec
shrb
add
mov
aas
lcall
mov
jb
adc
insb
rorl
imul
call
rcll
mov
lea
je
lea
and
fldcw
mov
int3
jns
mov
bound
es
xlat
or
adc
sbbb
mov
fstl
sub
scas
mov
aas
movsl
xchg
mov
inc
dec
xchg
loopne
jmp
aad
sti
cmp
scas
mov
cmpsb
xor
scas
dec
int
xchg
cmpsb
jmp
dec
ss
cmc
out
call
dec
adc
movsb
add
pop
lret
mov
or
push
add
and
xchg
aaa
sarl
xchg
jge
jmp
inc
jl
out
out
addr16
aad
push
lret
imul
sub
andl
sbb
mov
in
push
sbb
add
and
add
outsl
pop
xorl
jno
mov
mov
push
adc
pushf
imul
mov
mov
imulb
xchg
mov
loop
sbb
std
xchg
cwtl
dec
out
jl
mov
loope
arpl
clc
in
js
lds
mov
lret
incb
scas
gs
jne
insb
loop
sti
shrl
loopne
adc
and
dec
inc
mov
lcall
lds
mov
pop
mov
xchg
movsl
or
dec
mov
outsl
jp
sbb
mov
cltd
jns
clc
nop
inc
xor
inc
pop
pop
xchg
icebp
push
adc
lea
inc
icebp
fisttpl
lock
das
xor
insb
mov
sbb
push
inc
int
leave
sub
pop
cli
lods
mov
leave
jns
inc
mov
outsl
cmc
aaa
fstpl
sub
adc
adc
adc
adcl
scas
arpl
lret
adc
stos
and
outsb
and
test
sub
inc
stos
jno
aad
test
aad
sub
gs
repnz
pop
inc
mov
test
pop
xor
sahf
mov
inc
add
jns
push
sahf
lods
dec
repnz
mov
in
test
or
rcr
addr16
cmpsl
jmp
daa
cmp
insl
sbbb
aas
add
in
ret
push
in
orb
cmpsl
jecxz
cmpsl
int3
les
pop
xor
into
xchg
jecxz
pop
ss
mov
gs
xchg
loopne
push
aaa
xor
stc
out
xor
and
and
cmpsl
or
mov
shlb
dec
push
jne
rcr
jne
call
or
xor
fdivs
enter
enter
pop
mov
add
mov
std
cwtl
mov
mov
jo
cmp
pop
stos
or
aam
dec
aad
lds
mov
cmpsl
xlat
mov
jle
lret
call
jb
cmpsb
je
pushf
and
sub
fmul
mov
jg
inc
xor
popa
add
insb
push
sbb
pop
cmp
daa
imul
adc
shl
xor
cmp
notl
sub
in
cmp
or
push
add
pop
cld
mov
add
or
outsb
push
fsubl
cmp
add
jl
pop
jg
pop
mov
insl
sub
addr16
int
pop
fwait
rorb
imul
adc
sbb
rcrb
das
xchg
stos
mov
and
mov
and
hlt
mov
insl
ret
out
or
mov
and
or
in
cli
push
mov
loope
cmp
sahf
xchg
loopne
or
add
xchg
insb
insl
add
inc
jge
xchg
lret
mov
int3
mov
test
pop
mov
scas
out
fwait
divb
xor
dec
jle
push
pushf
outsl
ss
push
or
push
shll
loopne
outsb
xchg
xchg
xchg
mov
mov
xor
in
ret
in
das
es
or
mov
pminub
cld
and
push
fisubrl
nop
cs
mov
pop
inc
repz
aad
xchg
mov
mov
cmp
loopne
bound
mov
or
outsl
mov
scas
jl
leave
pop
pop
insb
stos
cmp
ror
cmovo
mov
add
inc
xor
or
adc
in
out
es
mov
and
xchg
fiadds
xlat
std
mov
movsb
cltd
lds
es
mov
add
in
dec
mov
adc
inc
sub
ljmp
cmp
add
jge
push
pop
xchg
das
pop
pop
int3
push
cwtl
mov
mov
push
push
stos
adc
cmp
or
jns
pop
addb
mov
jb
lret
int
mov
ficompl
inc
orb
pop
sar
js
jmp
dec
aaa
add
inc
icebp
bound
push
ret
mov
mov
sahf
daa
mov
jmp
xor
fstpl
fwait
cmp
or
pop
or
push
add
ja
xchg
sbb
call
stos
adc
jmp
inc
mov
sub
inc
and
inc
sub
and
mov
cmp
es
cmp
and
sbb
pusha
jle
jl
shlb
push
lods
aaa
push
add
inc
sbb
dec
ret
aas
pop
mov
in
in
mov
ret
mov
cmpl
jg
jb
jecxz
and
cli
das
or
rolb
ret
data16
cmp
idivl
shlb
push
cld
test
pop
repnz
fs
mov
lcall
lret
cld
inc
sub
fstpl
data16
jbe
add
popa
inc
mov
test
jb
shrb
cmp
xchg
add
adc
sarl
sub
pop
mov
sub
cmp
or
clc
es
stos
bound
dec
mov
dec
repnz
es
push
mov
mov
xor
push
mov
cmp
or
cwtl
ljmp
mov
xor
xchg
outsl
sar
dec
jae
shlb
inc
clc
in
fstps
int3
sub
leave
pop
int3
cmp
sub
stc
negl
xor
test
adc
cltd
arpl
jmp
aas
sub
mov
mov
push
iret
movsb
ret
ds
lea
daa
xor
js
pop
pop
stos
jb
pop
push
inc
fldl
ljmp
xor
out
pop
add
inc
js
add
cmpsb
push
enter
pop
sti
mov
or
xchg
cmp
enter
fistpll
mov
sub
ret
rorl
mov
add
jp
stos
mov
gs
xchg
ljmp
rorb
dec
pop
push
jnp
mov
mov
fsubl
sti
addb
aaa
out
addr16
int3
loop
test
js
insb
xchg
push
cmp
jmp
lahf
int3
adc
iret
sbb
mov
jmp
ret
cltd
jg
add
insl
psraw
mov
adc
mov
lds
aam
aas
mov
ret
stos
and
mov
add
push
push
xchg
mov
fs
inc
punpcklbw
notb
inc
jb
jne
cmpsl
mov
cld
movsl
sti
pop
sti
addr16
mov
mov
xchg
stos
pop
mov
cltd
cmp
push
ljmp
mov
dec
leave
lret
mov
pop
pushf
jp
aaa
mov
stc
mov
out
pop
sbb
dec
mov
bound
adc
jne
jecxz
inc
subl
scas
stos
xchg
push
inc
jo
negl
cld
nop
mov
fidivs
pop
mov
test
mov
mov
repnz
ja
mov
scas
jl
push
or
adc
cli
fsubl
inc
aam
pop
mov
jl
push
lods
cld
addr16
pop
idivb
xchg
pushf
mov
movl
movsb
cltd
gs
mov
shrb
or
test
fcomps
pop
pop
push
ljmp
dec
outsb
xchg
xor
push
adc
lea
movsl
sbb
pop
and
lret
mov
inc
iret
jp
pop
xor
and
mov
push
mov
leave
ja
and
pop
mov
dec
push
lea
mov
pushf
cs
dec
sbb
xchg
push
in
sbbl
fidivl
int3
mov
lea
ss
fwait
sbb
lods
popf
mov
sahf
js
outsb
add
jmp
pusha
incb
test
xchg
out
mov
xor
movsb
pop
arpl
movsl
pop
lahf
mov
lret
addr16
decb
out
insl
mov
fisubs
sub
lds
lcall
inc
pop
adc
jb
out
test
mov
lcall
cmp
sub
inc
and
pop
enter
adc
jecxz
ja
sbb
testb
xor
add
mov
pop
mov
les
pushf
and
pop
jle
inc
insl
mov
int3
or
xor
lods
adc
pushf
and
stc
sti
in
ja
mov
idiv
fnsave
rol
stos
lret
test
cmp
mov
sbb
dec
jmp
mov
lahf
aam
loope
add
shld
add
cmp
aas
jecxz
jmp
xchg
xlat
pop
xlat
inc
mov
sbb
jg,pt
aad
shlb
insl
push
jg
in
mov
loopne
fisttpll
insl
xor
addl
out
nop
in
mov
add
popf
lds
jmp
or
inc
inc
xchg
or
fidivs
sarb
or
hlt
pop
or
jg
cmp
popf
mov
mov
fsubl
test
mov
push
xchg
pop
shr
cmpsb
cltd
jne
sub
decl
push
or
into
in
ret
or
and
add
in
dec
xchg
xor
or
das
adc
jmp
js
sbb
aad
stc
cmp
inc
int
sbb
adc
mov
repz
orb
iret
push
dec
test
adc
stos
xor
lods
sub
rcr
inc
aam
sbb
mov
sbb
inc
inc
inc
divb
pop
popf
data16
sbbl
adc
lcall
in
pusha
sub
add
inc
pop
popf
jne
mov
out
lea
mov
insl
mov
je
adc
cmc
sbb
shr
push
jbe
pop
inc
dec
sbbb
in
lds
cs
clc
cmp
mov
adc
push
pop
or
div
mov
dec
movsl
cmp
push
lock
lret
add
mov
and
loop
push
push
shrl
and
insl
mov
sub
push
jmp
and
add
dec
xchg
mov
in
pop
cmp
in
repnz
pop
insl
and
mov
hlt
rcl
push
cmc
inc
in
ljmp
call
push
dec
dec
push
pop
mov
add
nop
or
pop
das
mov
arpl
das
lock
mov
mov
out
js
push
pop
ds
sbb
nop
jge
jnp
out
sbb
insb
cmp
repnz
inc
or
jo
push
insb
inc
bound
ffree
xlat
out
idivb
jmp
pop
cltd
adc
adc
add
movsl
or
xor
or
dec
sbb
or
sub
fwait
push
fsubrl
xchg
int
mov
xor
sbbb
addr16
mov
xchg
aad
push
pop
jb
cmp
mov
or
clc
ds
cwtl
sbb
in
sbb
mov
fdivrl
push
jnp
int3
dec
pop
mov
leave
icebp
inc
sub
ja
push
decb
rcl
xchg
jae
mov
and
jne
mov
or
xchg
loop
out
icebp
mov
mov
outsb
jne
dec
hlt
mov
sbb
add
inc
jg
inc
test
test
movsb
rcll
pop
lods
lods
pop
cmp
pushf
xchg
cs
fcmovu
in
fwait
iret
insb
xchg
xchg
lahf
int
sub
sti
cli
jmp
pop
out
aas
mov
sbb
adc
ja
cli
dec
sbb
jnp
cmc
inc
xchg
xchg
loop
pop
int
mov
mov
hlt
mov
sub
sbb
in
fsubrs
lea
in
mov
push
push
aad
mov
ret
stc
mov
js
clc
lcall
push
adc
mov
aaa
cs
in
and
pop
cmpsl
sub
les
add
add
jo
xor
fnsave
cmp
jg,pn
pop
xor
fcom
sbb
jns
and
cld
leave
push
sbbl
inc
cmp
out
push
jp
push
add
jne
pop
loopne
cmp
xor
stos
dec
cmp
dec
xchg
jg
test
add
bound
mov
pop
std
scas
mov
and
inc
lcall
or
sub
jg
inc
pop
cmpsl
and
js
mov
das
and
push
loop
sbb
xchg
push
lahf
or
mov
movsl
popa
jns
xchg
xlat
jae
cmp
loopne
sbb
enter
pop
bound
adc
ficoms
mov
imul
cmp
push
mov
jnp
loopne
and
enter
nop
sbb
subb
add
lahf
pop
ficomps
pop
or
test
daa
mov
push
mov
adc
lods
arpl
cmp
out
hlt
imul
cmc
add
dec
pop
aad
jb
test
sbbl
sub
xchg
jmp
lret
fs
aad
dec
or
adc
aam
rcll
cmc
cmp
jo
jecxz
lcall
add
scas
mov
mov
leave
cmp
jno
das
inc
jne
or
mov
push
inc
mov
out
stc
or
and
sub
movsl
movsl
fistps
pop
inc
scas
pop
push
mov
mov
cli
xor
pop
and
scas
dec
in
or
addr16
push
sti
js
inc
and
jmp
in
xor
ss
scas
adc
iret
push
and
adc
jecxz
mov
xchg
jl
arpl
jle
cmp
aaa
adc
mov
add
jge
sub
sbb
sub
jecxz
xchg
mov
mov
stos
cmp
sahf
adc
test
mov
lods
loopne
sub
les
xchg
cmpsb
adc
xlat
jg
xor
lcall
push
movsl
sbb
pushf
into
push
outsl
pop
xor
stos
xchg
out
mov
aas
mov
out
nop
insl
pop
loope
dec
lods
push
cli
jb
dec
roll
imul
ror
inc
les
xchg
cmpl
out
mov
cmc
stos
adcb
popa
ret
sub
jnp
cmp
mov
push
movsb
xor
stos
inc
jb
repz
mov
mov
xchg
sub
push
inc
pop
jne,pt
push
adc
mov
ds
pusha
cmpsl
mov
push
insb
imul
lods
push
mov
std
sub
push
jno
sbb
push
jp
push
xrelease
sbb
adcb
rolb
fildll
mov
dec
xchg
shll
adc
fisttpl
stos
lahf
jns
shrl
jo
sbb
pop
pop
ja
loopne
fs
dec
test
gs
cmp
repz
dec
int3
dec
xchg
and
mov
aaa
pushf
fimull
pusha
xor
test
outsl
mov
mov
into
mov
mov
mov
mov
gs
mov
in
negb
sti
sbb
enter
pop
in
jmp
dec
mov
sbb
fcompl
sub
dec
sbb
cmc
inc
das
fadd
pop
push
popa
arpl
cli
bound
mov
in
adc
mov
jnp
popf
dec
mov
or
ja
arpl
dec
push
out
frstor
jp
js,pt
hlt
imul
dec
cmp
dec
es
scas
adc
std
jns
hlt
inc
mov
adcl
shlb
dec
roll
xor
mov
ret
jo
fnstsw
out
aas
cmp
lock
pop
add
inc
stos
xchg
mov
add
mov
das
sbb
lret
adc
pop
int3
add
and
stos
adcb
aad
sbb
repnz
cs
and
outsl
jg
sub
out
js
mov
and
or
mov
adc
arpl
test
aam
adc
out
push
ror
jae
testb
hlt
jmp
mov
inc
inc
lds
and
add
xchg
or
xchg
andl
push
dec
sub
mov
clc
shlb
cs
pop
dec
mov
xchg
aaa
fmuls
out
mov
dec
xor
sub
pop
jae
lahf
add
mov
rcl
in
mov
repnz
xchg
outsl
add
mov
xchg
fcmovnbe
mov
fdivr
lods
xor
sbb
inc
out
inc
jg
cwtl
push
add
pop
imul
fwait
sti
pop
push
adcb
rorl
push
shr
push
add
push
mov
inc
and
dec
rorl
das
testb
add
jecxz
and
loopne
test
testl
sbb
xchg
icebp
pop
sti
pop
jnp
aad
push
hlt
fadds
mov
gs
push
cs
aaa
sub
push
push
push
outsb
ret
push
jl
cmp
add
or
nop
test
or
add
or
push
jnp
push
stos
and
outsl
pop
xor
int3
insl
push
and
push
dec
xchg
adc
inc
decb
outsb
inc
push
pop
dec
dec
mov
mov
pushf
ds
fdivs
push
jo
or
rcll
lahf
add
xor
jb
test
dec
mov
popf
cmp
push
mov
inc
scas
xor
ror
xchg
add
sbb
lea
inc
int
adc
xchg
pop
or
dec
leave
jnp
das
iret
iret
lret
sub
fidivrl
out
lea
adc
and
xchg
loope
shl
and
mov
ret
xacquire
scas
inc
sbb
dec
xor
inc
mov
movsl
decb
sbb
and
mov
add
lods
mov
loope
jle
loopne
mov
gs
sbb
lods
fistpl
pop
test
in
push
xor
fiadds
jo
jno
mov
jecxz
mov
insb
shlb
xchg
test
jle
outsl
sub
and
insl
insl
inc
lods
arpl
das
mov
fnstsw
adc
mov
je
pop
cwtl
mov
mov
push
xchg
or
out
or
inc
xchg
cs
push
js
out
es
xor
loope
imul
roll
xor
aad
cmp
mov
data16
adc
cmc
fcmovb
mov
jae
push
fstl
stos
lahf
out
sbb
xor
jecxz
sbb
dec
out
repnz
inc
mov
sbb
addr16
push
adc
mov
jmp
lcall
call
mov
adc
ss
out
shlb
push
add
jbe
pop
subl
loop
xlat
cmpsb
pop
jmp
inc
dec
popa
lea
sahf
push
cmpsl
and
test
repnz
mov
dec
test
sbb
enter
jb
dec
adc
lods
or
in
xor
pushf
cmpsl
pop
dec
es
add
pop
mov
adc
and
loop
stos
mov
enter
repz
addb
movl
mov
xchg
push
sbb
stos
lcall
mov
js
jnp
jg
and
sti
mov
leave
cmp
cmpsl
and
clc
jns
mov
mov
lcall
sub
xchg
ret
push
pop
or
out
sub
add
call
test
fldl
push
out
inc
pop
aas
or
js
sub
xchg
mov
or
cmp
testl
jmp
sub
sbb
add
jge
fsubrs
add
ret
insb
inc
pop
pop
outsl
inc
cmpsl
sahf
je
xchg
arpl
mov
in
jge
sub
imul
aad
jbe
clc
or
push
dec
add
pop
lcall
pop
fdivr
and
dec
test
int3
sbb
aad
lahf
pop
mov
mov
mov
iret
dec
jg
fcomip
adc
sahf
cmc
dec
mov
repz
pop
not
sbb
loope
movsl
es
dec
rorb
xchg
xor
jbe
popf
jle
add
sub
lods
xchg
jp
in
pop
lret
or
lret
sbb
ret
push
mov
xchg
pushf
repnz
xor
pop
icebp
call
scas
or
dec
das
fmulp
cltd
rolb
add
mov
mov
cmp
icebp
sub
push
jecxz
mov
sub
jno
push
mov
jl
push
into
sub
hlt
or
pop
inc
leave
push
sbb
xchg
notb
cmp
ljmp
mov
xchg
ret
push
lcall
enter
dec
mov
mov
les
dec
pushf
iret
pop
test
sub
push
mov
add
int
inc
aam
pop
and
inc
push
dec
aam
test
mov
xchg
fcomps
push
gs
and
cmc
outsl
xchg
pop
jmp
mov
in
mov
fwait
jnp
jle
or
pusha
or
subb
push
add
xor
fiadds
adc
ret
outsl
or
push
pop
lds
xor
aas
xchg
dec
imul
cmp
rolb
add
and
jo
sbb
pusha
xor
inc
mov
movsl
test
or
aaa
subb
pushf
inc
push
dec
sub
fbstp
jb
dec
xchg
add
leave
jnp
cld
lret
int3
inc
add
push
out
popa
in
pop
and
push
xor
pop
fs
shl
cltd
int3
push
stos
mov
cmc
outsl
ljmp
mov
scas
sbb
cmpsb
adc
mov
loop
sbb
lret
push
into
add
je
mov
insl
sbb
out
add
mov
push
pop
inc
fiaddl
push
xchg
adc
das
xchg
stos
ss
out
fiaddl
out
lret
clc
pop
sbb
cmpsl
in
cmpsb
and
pop
aam
incb
xchg
shl
xchg
ja
fstpt
dec
dec
jb
pop
ret
int3
adc
and
cs
pop
shl
mov
add
filds
and
stc
les
xlat
fs
and
push
and
jp
pop
xchg
out
sub
inc
dec
aam
or
jl
movsl
jmp
lock
mov
lcall
cmp
sahf
daa
dec
divb
adc
pop
mov
inc
push
js
and
dec
das
lea
mov
ficoml
push
divl
cmpb
fadds
das
mov
std
dec
dec
add
push
or
in
pushf
out
repnz
cmpsb
loope
or
test
mov
pop
icebp
nop
hlt
mov
mov
ljmp
adc
ja
fimull
inc
pop
add
aad
jb
sub
in
sub
test
and
mov
jne
pushf
push
mov
xor
xchg
xor
and
pusha
pop
cwtl
imul
or
xor
lahf
push
xlat
out
adc
and
scas
xlat
mov
sub
fdiv
add
sbb
mov
rcrb
and
iret
nop
pop
cmp
fldcw
mov
popf
je
sarl
shrl
sti
in
inc
data16
pop
xchg
mov
push
add
cli
loope
push
and
and
cltd
dec
xlat
push
hlt
and
jno
adc
mov
sbb
scas
push
test
aas
jl
imul
iret
rcrl
pop
pop
ds
mov
pop
outsl
lret
mov
sbb
pop
popa
pusha
mov
je
mov
sub
push
adc
movsb
mov
test
je
adc
inc
jb
mov
jmp
addr16
stos
dec
out
mov
cli
adc
mov
inc
ja
inc
dec
dec
into
ss
mov
repz
jmp
stos
in
or
xchg
or
sahf
mov
in
mov
mov
outsb
je
nop
cmp
insl
movsb
jmp
jne
fmull
in
sbb
push
repnz
mov
fidivrs
rorl
sub
push
sbb
sub
dec
mov
stc
adc
in
cld
push
pop
mov
pushf
or
fnstsw
xchg
stc
pop
cmp
and
cmpsl
test
xor
fnstenv
xor
adc
xor
pop
inc
in
neg
adc
scas
outsb
pop
cmc
adc
jns
cli
xchg
sti
lret
sbb
mov
aam
pop
movsb
test
push
xor
ja
int3
mov
incl
push
mov
cmp
pop
cmp
in
cld
fadd
insl
hlt
mov
inc
cs
mov
add
repz
sbb
stc
shrl
push
pop
addb
inc
push
jbe
lock
cld
sub
add
nop
sarb
fs
pop
jne
ljmp
scas
pop
push
dec
out
ds
pop
pop
mov
jbe
jae
stos
ss
imul
inc
mov
test
das
push
aaa
cld
mov
mov
xor
inc
cltd
pop
push
insb
jp
arpl
mov
loop
pop
sub
dec
je
mov
inc
sbb
outsl
ret
das
addr16
xor
roll
insb
and
jecxz
bound
fsubs
add
les
aam
cmp
test
mov
fwait
addr16
iret
sbb
or
out
dec
or
lds
in
sub
out
xchg
or
add
enter
in
xchg
test
loop
cs
mov
jge
add
or
sub
leave
mov
jne
jl
mov
pushf
mov
inc
outsl
add
stc
adc
or
ja
call
add
icebp
clc
pusha
mov
das
jecxz
das
aam
rolb
or
push
dec
imul
jo
mov
imul
stos
xor
sbbl
add
imul
repz
inc
sub
std
addb
xchg
dec
sbb
bndstx
insl
xchg
jns
cmp
cmp
jmp
cmc
and
aaa
add
jmp
js
mov
scas
jecxz
jle
pushf
lods
popl
ljmp
call
push
cltd
push
loope
cmc
sub
cmp
and
push
test
popa
cltd
scas
push
jp
cmp
jg
lahf
mov
mov
and
mov
add
call
adc
cmpsb
dec
pushf
test
ret
das
in
je
insl
pop
dec
lock
rcrb
jnp
sub
adc
add
xchg
jns
je
adc
xchg
jae
inc
jne
insb
js
popf
imul
pop
ret
sub
movsb
fildl
shll
jge
lods
xlat
add
ret
mov
ja
js
outsb
lret
mov
outsl
out
pusha
jp
xchg
faddl
insl
inc
mov
dec
movsb
dec
inc
mov
andb
mov
lods
leave
xchg
and
dec
mov
rcr
das
arpl
cmp
xchg
xchg
mov
xchg
adc
popa
push
jle
shrb
sbb
in
adc
dec
mov
test
js
int
sbb
push
mov
push
jle
imul
loop
sbb
push
mov
lahf
mov
nop
xchg
push
mov
rorl
sbb
clc
in
mov
fisttpl
iret
mov
loope
mov
addr16
push
movsb
mov
shl
stos
ror
rcrl
sub
sub
loop
push
push
stos
cmp
mov
pop
mov
cmp
cld
or
fildll
lret
inc
jne
in
stc
cltd
dec
cmc
jae
lcall
aam
push
sbb
mov
or
shll
xor
test
adc
xchg
push
inc
cmp
gs
out
clc
fidivs
xchg
cmpsb
andl
les
mov
mov
fs
jnp
jno
std
inc
xchg
adc
mov
push
lds
pop
jge
push
pushf
mov
in
fdivrl
pop
popf
mov
xchg
test
fildl
jge
adcl
pop
jb
xor
sbb
es
aas
ficomps
subl
mov
dec
call
cli
dec
cld
xchg
jno
sar
imul
faddp
push
xor
stos
stos
cmp
cmp
xchg
dec
enter
xchg
pop
out
push
dec
push
js
xor
outsb
ds
stos
mov
xchg
pop
xorb
xchg
lock
xor
and
dec
adc
ss
pmuludq
mov
insl
les
mov
jnp
popl
ret
movsl
lret
sub
xchg
sbb
cmp
mov
pop
dec
push
in
jo
jne
pop
fisubs
hlt
push
inc
adc
sti
nop
jns
add
std
stos
xor
cmp
imul
arpl
dec
jmp
sub
aaa
pushf
sbb
lods
test
xchg
inc
jl
xchg
data16
das
jge
stc
sub
mov
out
movsb
cmp
sbb
in
push
pop
adcl
aas
jo
dec
cmc
xchg
add
movzwl
add
dec
ret
sbb
push
push
scas
sub
and
in
sbbl
cmp
xchg
daa
sub
dec
jecxz
cmp
int3
cmp
xor
fadd
pop
inc
or
cli
jmp
test
xchg
jno
sub
mov
shll
cmpsb
jecxz
push
sub
jecxz
xchg
insl
xor
or
sub
daa
push
and
dec
add
mov
pop
iret
mov
push
inc
mov
cmp
jl
mov
mov
pop
test
cmp
push
inc
push
lea
xchg
sbb
iret
add
ljmp
dec
pushf
cltd
mov
xor
dec
fs
dec
mov
jecxz
out
fmul
adc
icebp
fsubl
xor
jmp
pop
bound
imul
adc
fnstsw
sti
mov
repnz
jg
aad
or
or
jp
enter
push
push
xor
push
mov
push
jecxz
lahf
xchg
xchg
xchg
mov
aaa
push
cmp
aas
pop
cs
sbb
insl
sbb
lret
pop
lret
mov
xor
mov
sub
jbe
clc
popl
mov
dec
jns
pushf
jnp
sbb
cmp
fists
xor
add
mov
cmc
xchg
cltd
xor
xchg
jl
in
sub
mov
sub
ljmp
jle
lods
imul
aad
xchg
pushf
aad
fdiv
nop
dec
in
jmp
ret
pop
insb
mov
jns
jae
and
cmp
filds
jb
sub
lea
loop
sbb
mov
add
inc
aaa
and
jecxz
inc
iret
push
dec
in
inc
jg
incb
push
arpl
pop
mov
clc
and
sbb
enter
mov
out
or
jae
dec
popa
add
mov
aad
mov
adcb
or
rcrl
dec
nop
inc
inc
add
daa
fidivs
subl
sub
lahf
xor
inc
xor
mov
sbb
insl
lock
sub
mov
das
popf
jb
loop
mov
fildl
dec
fucom
sbb
cmpl
pushf
push
out
negl
clc
xchg
cmp
subl
vmovd
dec
jmp
cmp
divl
sub
in
jnp
scas
xchg
mov
mov
movsb
and
ret
and
jo
adc
mov
mov
and
mov
pop
sbb
xor
cmp
pop
jmp
leave
adc
xor
imul
xchg
push
sbb
and
test
xor
pop
inc
xchg
popa
push
add
mov
pop
in
loope
adc
push
pop
daa
cld
dec
dec
adcl
push
iret
fldt
xor
addl
ficoml
aam
push
xchg
inc
sub
jo
notb
test
in
out
mov
icebp
clc
notl
cmp
and
mov
shlb
push
lods
push
loopne
mov
pop
and
pop
xchg
cmp
xchg
shlb
test
push
fiaddl
cs
mov
xor
mov
jp
mov
or
jecxz
mov
inc
test
cs
lds
ret
inc
stc
add
inc
pop
mov
js
sub
out
mov
ja
cmp
movsb
iret
sbb
jb
and
scas
adcl
pop
jo
mov
mov
movsb
dec
adc
ror
cmpsl
push
add
dec
cld
cltd
repnz
sbb
mov
mov
xor
out
fildll
add
mov
decl
jno
lock
cli
jne
cmc
jb
push
adc
fiadds
cmp
push
fcompl
xchg
sub
jle
jge
adc
sbb
movsb
enter
jae
js
cmp
aas
mul
add
nop
push
push
inc
insb
sub
in
sbb
ds
outsl
add
cmpl
mov
jns
into
aas
cmp
sarb
pop
push
popf
test
bound
xlat
xlat
test
popa
ret
lods
sub
aam
mov
dec
loop
mov
pop
mov
lea
scas
sub
mov
adc
lods
mov
shrl
cmp
out
or
es
push
lods
lea
xor
popa
lea
sahf
xlat
cmp
push
hlt
push
loop
ret
xor
mov
xor
daa
or
jae
sub
push
dec
out
cltd
mov
mov
in
mov
les
call
mov
adc
mov
adc
mov
loop
cmpsl
sub
call
and
filds
shl
mov
nop
lds
mov
push
sbb
pop
aad
sbb
push
cmpsb
fs
aaa
lahf
push
cmp
or
ds
stc
mov
rcr
daa
and
pop
insl
inc
inc
pop
pushl
aam
pop
or
xchg
jae
popf
dec
push
xchg
inc
mov
dec
and
sub
ja
test
adc
pop
dec
adc
pop
sbb
mov
mov
push
mov
or
addl
and
sub
jo
adc
in
imul
repnz
and
jge
xor
test
jmp
call
test
cltd
inc
data16
sbb
jecxz
pop
enter
push
xor
xchg
stc
adc
mov
nop
inc
jmp
push
outsl
cmp
jno
loop
jns
rorb
aam
iret
mov
cmp
inc
das
sarb
scas
mov
aam
andb
mov
repz
aam
mov
pop
dec
pop
in
mov
fwait
fwait
dec
decb
int
mov
sbb
inc
xchg
pop
pop
movsl
xchg
jecxz
shl
jo
push
clc
outsb
add
pop
dec
std
dec
pop
or
iret
cmp
dec
xor
ja
dec
pop
xchg
push
xlat
inc
fsubl
addr16
and
arpl
xlat
scas
not
or
in
or
fmuls
inc
icebp
movsb
sub
adc
lret
jno
inc
sbb
cmp
sub
lahf
dec
push
and
sbb
cmpsb
and
popa
test
mov
jo
or
hlt
add
popf
leave
ficompl
fs
push
cmp
mov
dec
mulb
xchg
shrb
dec
and
fnstenv
int
repz
pop
mov
aam
jmp
xor
pusha
cmp
mov
xchg
idiv
sub
xchg
pop
cmp
lret
inc
das
es
sbb
and
or
adc
xchg
jb
push
jge
addb
lret
inc
pcmpeqd
jae
inc
aad
clc
pop
outsb
fwait
ds
mov
dec
lods
loope
xchg
inc
dec
mov
xchg
push
testb
sbb
sub
pop
aam
addr16
pop
and
roll
ja
rorl
in
dec
mov
test
cmpsb
imul
fistl
mov
cwtl
sub
push
lret
and
faddl
int3
mov
les
dec
xchg
mov
daa
stc
je
ds
imul
xchg
test
mov
clc
jb
mov
insb
hlt
dec
lret
mov
cwtl
and
dec
inc
jmp
and
mov
push
adc
cs
push
jecxz
cmp
outsb
js
or
mov
push
fistpll
cmpsl
cmp
jge
lret
test
in
jge
mov
mov
frstor
xchg
pmullw
pop
daa
and
mov
inc
pushf
idivl
push
iret
inc
testb
subl
ja
aam
mov
jg
or
test
inc
or
out
es
and
mov
int
add
out
sub
sbb
or
push
push
push
inc
pop
scas
je
test
cmp
test
push
xchg
push
outsl
ret
ret
mov
cmp
jae
sbb
push
push
stc
pop
push
mov
adc
lcall
mov
js
mov
cmpsl
cli
ja
ja
ret
test
push
mov
imul
xchg
jle
icebp
cmc
sti
pop
and
imul
mov
cmpsl
repz
addr16
xor
imul
lods
cltd
out
negb
add
xchg
mov
outsl
jne
sub
xlat
loop
popa
test
rcrl
data16
bswap
pushf
fnsave
stc
fucomi
jmp
mov
dec
xor
push
test
xor
inc
add
lods
stc
imul
aam
jp
inc
or
dec
mov
jge
pop
and
outsl
jne
aas
int
push
pop
inc
xor
aam
dec
clc
or
aaa
lods
inc
sbb
lock
movsl
iret
xlat
push
pop
loope
out
push
stos
shlb
xchg
in
cwtl
scas
sub
cmp
sbb
repz
xchg
or
adc
and
les
outsl
loop
mov
bound
clc
ret
ret
arpl
rcrb
sub
aaa
outsb
mov
sbb
fnstcw
xchg
jp
mov
inc
imul
xor
ffree
js
push
jae
bsf
int
pop
push
xchg
inc
loopne
mov
hlt
add
lahf
lret
jo
pop
xchg
adc
add
imul
ja
ja
repz
mov
pop
loopne
xor
xchg
and
mov
adc
lea
in
xor
dec
sub
sarl
movsl
les
cmp
outsb
mov
adcb
mov
cmp
sub
gs
sbb
add
dec
roll
cwtl
or
mov
mov
pop
stc
jg
and
and
mov
lar
inc
je
cmp
xlat
xor
test
mov
sti
mov
bnd
lret
push
xchg
cmc
insl
ljmp
scas
jp
push
fldt
aam
pop
mov
icebp
inc
inc
clc
jp
and
mov
into
xor
dec
loopne
cs
jnp
cli
adc
fwait
cmpsb
pop
mov
inc
and
int
inc
jnp
mov
push
in
mov
rcll
ja
imul
ret
pusha
cmpsl
stos
aas
js
loopne
mov
movsl
nop
fucomip
cmp
or
sbb
leave
lret
jmp
mov
das
pop
cmp
lea
lahf
xchg
dec
dec
push
or
subb
stos
scas
inc
add
ficoml
lea
notb
out
jmp
push
cld
sbb
inc
xchg
adc
pop
cmpb
lret
mov
outsl
xchg
pop
cmp
aas
in
enter
mov
push
loop
pop
xchg
jnp
mov
xchg
mov
sub
dec
sub
pop
mov
pop
or
sahf
cltd
dec
insb
jle
out
push
or
mov
pop
jge
int3
cmc
jb,pn
push
je
stos
mov
or
lret
mov
rorb
loopne
mov
push
and
xchg
ss
add
pop
push
xor
loop
or
shrb
inc
call
lock
cs
pop
idivb
insb
push
adc
push
push
push
sbb
sub
scas
nop
push
scas
movsb
push
push
cmp
mov
sub
scas
jle
lds
pop
and
sub
push
sub
mov
mov
adc
jle
mov
adc
jmp
inc
inc
mov
outsl
sub
jmp
fisubl
jge
fldt
mov
mov
and
orb
shrb
test
cld
pop
lahf
push
inc
add
int
lret
add
popf
repnz
dec
or
or
loopne
rorb
adc
ja
adcb
data16
cmp
imul
clc
sbb
cmc
adc
xor
push
cmp
push
xchg
out
scas
test
es
out
lods
mov
test
sbb
pop
pop
insl
or
cmpsl
adc
lea
pop
hlt
fldenv
mov
cmp
mov
sbb
lret
pop
test
xorl
movl
jmp
repnz
pop
int3
or
lcall
lret
pop
loop
mov
inc
imul
inc
pop
cmp
jae
aaa
mov
ja
popf
pushf
pusha
cmp
sub
jp
clc
lock
scas
pusha
dec
sbb
mov
out
nop
xchg
fists
pop
inc
and
push
jmp
pop
jnp
faddp
es
into
jns
pop
shll
je
xbegin
shrb
or
xchg
cmpsb
inc
sbb
xor
mov
xchg
add
mov
push
xchg
sbb
pop
fcoml
cmpsl
mov
inc
adc
lret
dec
rorb
mov
aad
adc
mov
sahf
aas
inc
jne
hlt
lret
and
pinsrw
loopne
adc
add
mov
xchg
fsubr
mov
pop
lret
jecxz
mov
pusha
mov
or
inc
lds
cs
shlb
mov
in
loopne
jge
dec
xchg
test
sahf
pop
mov
xlat
push
lock
out
xor
pop
gs
pop
mov
and
adc
push
enter
cs
cmp
cmp
add
pop
mov
jns
ljmp
xchg
fcom
idivl
inc
pop
jb
shll
pop
dec
sub
call
vphsubwd
orl
push
imul
push
xchg
adc
sub
out
sbb
lret
xchg
mov
test
rcr
cltd
imul
jp
push
adc
add
pop
push
jno
nop
leave
movsl
push
jae
adc
fdivrs
cmp
mov
cmp
das
add
jge
mov
adc
orl
icebp
dec
cmp
repnz
ret
and
std
jle
sahf
andb
pop
mov
and
pop
cltd
sbbl
mov
adc
mov
pop
push
inc
xchg
dec
cmp
jne
lods
fsubrp
daa
jo
fildll
cmpsb
scas
inc
sub
xchg
sbb
jmp
iret
mov
push
pop
repnz
enter
call
iret
inc
rclb
or
clc
cmp
adc
jge
jg
push
or
loopne
cmp
test
or
and
outsl
cld
aas
push
push
fistl
dec
ret
push
pop
rcll
bound
ds
popf
repz
push
add
jo
jne
daa
mov
ret
push
stos
pusha
out
push
xchg
cmpsb
sahf
divl
pop
mov
sub
push
jae
mov
sub
sub
enter
adc
rolb
pop
inc
cmpsl
sbbb
pop
loopne
mov
cmp
add
jb
inc
add
and
inc
add
out
push
out
popl
dec
add
aam
ss
dec
and
daa
push
mov
cli
loope
sub
les
andb
dec
pop
adc
mov
jbe
mov
lods
mov
push
sub
or
mov
nop
mov
movsb
add
and
adc
inc
imul
lock
xchg
ret
inc
sub
or
cmc
sub
or
in
enter
loope
xchg
or
test
or
inc
pop
rolb
popf
jl
dec
into
jge
and
int
or
loop
jmp
pop
xchg
push
popl
xchg
data16
add
fcoms
lock
mov
pop
inc
sbb
and
ss
mov
adcl
jle
inc
push
popa
mov
imul
adc
adc
in
lock
movsb
int3
icebp
hlt
xchg
int3
lock
mov
jne
pop
pop
out
inc
inc
pop
insl
gs
xchg
mov
fpatan
and
gs
int
mov
jnp
fsubrl
mov
dec
andb
ja
sbb
cmp
stos
int3
rcrb
jle
mov
add
pop
add
test
insl
mov
lods
test
jmp
arpl
or
mov
push
test
dec
lcall
mov
pushf
nop
and
pop
mov
inc
adc
cmpsl
imul
faddp
inc
mov
mov
mov
dec
dec
lea
and
mov
push
outsb
mov
pop
mov
iret
iret
std
cmpsb
das
movsb
push
loop
and
shlb
repnz
insb
popf
adc
xchg
mov
lods
adc
push
cmp
sub
jge
je
sub
adcl
rcll
or
movd
xchg
lods
stos
in
mov
xor
ljmp
test
in
add
pop
test
cld
movsl
out
sbb
lret
jns
in
dec
push
jecxz
push
scas
mov
loop
rep
mov
test
andb
sar
add
dec
and
push
sbb
push
sub
add
jbe
test
mov
and
jae
movsb
out
bnd
mov
xor
mov
aad
and
fisttpl
shrl
adc
inc
mov
cmp
pop
pop
scas
dec
pushf
loop
xchg
lret
fnstenv
fsubrs
inc
cld
and
jl
adc
shlb
cwtl
orl
sbb
sbb
jo
rorl
xchg
push
outsb
icebp
fdiv
xchg
and
and
pop
enter
xor
lahf
in
and
sbb
add
xor
lea
mov
lods
ret
mov
test
push
adc
adc
dec
jecxz
stos
enter
adc
repz
aad
lret
ret
test
sti
push
or
adc
dec
jecxz
xchg
jp
jp
push
or
hlt
das
ds
sbb
xchg
in
sbb
adc
and
push
mov
push
repnz
jb
sbb
or
jmp
jp
in
mov
xlat
or
aas
divb
leave
inc
cld
dec
sub
sbb
jp
idivb
div
lea
adc
test
sub
lock
stc
rcl
inc
adc
clc
xor
mov
movsb
mov
dec
push
mov
test
push
daa
loope
movb
test
pop
jns
into
and
add
jp
std
daa
jp
popa
xor
jns
and
push
out
add
scas
aad
mov
stc
sbb
or
out
adc
sti
mov
push
ss
data16
cmpsb
lods
fisttpll
cmpsl
inc
pop
xchg
out
test
mov
fisubrl
sbb
xor
popf
and
jae
dec
loopne
jecxz
lcall
pop
fsts
xor
cmpsl
adc
mov
in
or
imul
mov
stos
test
xchg
ljmp
cmp
loopw
add
mov
call
imul
je
vminps
cmp
hlt
in
or
popa
xchg
sti
jmp
sbb
sbb
dec
js
xchg
sbb
mov
add
add
add
sub
dec
aas
mov
adc
fistl
mov
sbb
pusha
idivl
jae
scas
outsb
in
jnp
addb
mov
jp
add
repz
lods
push
adc
std
mov
in
xor
cmpsl
jbe
mov
enter
dec
popl
adcl
movsb
repnz
test
call
aas
adc
add
test
shr
mov
adc
xor
daa
aam
sbb
cmpsb
int3
fiadds
cmpsl
xchg
xor
xchg
pop
pushf
dec
mov
jns
xchg
in
ds
mov
fwait
aaa
mov
mov
loope
in
fiaddl
jo
fwait
cld
fsubrs
jne
nop
cmc
or
adc
pushf
push
adc
lret
mov
mov
js
push
cltd
mov
mov
dec
clc
jge
jns
enter
insl
mov
lea
jecxz
jno
shll
fld
clc
mov
adcb
jle
fldt
xor
pop
repz
cltd
xor
mov
push
dec
test
xchg
movsl
lretw
inc
shrl
lcall
add
xor
pop
pop
jne
or
lahf
es
aad
inc
mov
pusha
gs
cmpsl
pushf
and
mov
adc
jbe
mov
mov
mov
pop
movsb
cmc
imul
lds
insb
adc
push
add
dec
je
adc
mov
into
das
push
pop
lods
xchg
test
and
lret
in
sahf
mov
out
cli
shrl
and
jg
sub
lods
pop
ret
pop
out
sbb
push
aas
outsl
jnp
inc
push
icebp
sbb
movsb
das
call
sub
push
jecxz
cmp
mov
xchg
loop
in
in
xchg
jns
filds
cltd
push
mov
sbb
mov
cmpsb
std
mov
and
inc
rcll
xchg
push
mov
xchg
pushf
sub
cmp
cli
or
lock
xchg
jp
ret
dec
dec
and
cmpl
and
in
mov
addl
fs
mov
fsubp
inc
dec
push
inc
add
adc
xchg
xchg
loop
lods
push
test
cmp
rcll
or
xchg
into
dec
pop
imul
lret
mov
and
dec
dec
mov
and
movsb
xor
ja
cmc
cltd
xchg
jo
or
sbb
out
aaa
dec
fdivrs
xor
negb
push
xor
push
xor
jne
or
std
inc
mov
rclb
fisubl
mov
gs
cltd
xor
mov
xchg
movl
or
arpl
add
mov
das
inc
in
add
push
xor
mov
and
out
sarb
push
dec
lds
add
cwtl
mov
mov
xchg
out
dec
cld
jno
sbb
push
mov
sbb
add
dec
add
ret
pusha
lods
movsl
sbb
cmp
jge
pop
pop
fldl
lock
mov
out
and
push
lea
fsubs
or
cmpsb
test
ret
mov
movsl
xor
sarb
int
dec
push
testb
mov
xlat
mov
fists
ljmp
ja
mov
xor
sbb
imul
push
out
push
adc
inc
xor
mov
inc
cli
aaa
add
and
xchg
arpl
fsts
addr16
fsubl
jle
pop
add
orb
mov
pushf
mov
nop
sub
jl
orb
push
outsl
inc
inc
adc
add
and
stos
pusha
push
or
and
test
into
pop
sarb
and
xchg
pop
and
test
jge
repz
sub
adc
inc
aaa
mov
xchg
push
loop
loopne
out
fnstcw
jl
shl
push
lods
cmp
rorl
lods
dec
repz
ljmp
sub
aad
repz
mov
and
mul
rclb
sub
push
in
mov
loope
pop
pop
sub
add
cmp
ja
and
iret
adc
adc
sbb
mov
mov
cmp
not
xor
pop
xchg
sti
jle
in
lock
and
or
sbb
mov
dec
cmp
cltd
sub
and
jo
scas
fcompl
pop
pop
push
xorb
lret
mov
sub
gs
xor
out
sub
mov
stos
xchg
movsl
lret
jl
mov
test
gs
jae
cmp
adc
out
jae
jns
sub
in
cmp
scas
cmp
rorb
sarl
jmp
cwtl
pop
sub
cmp
pop
fists
xchg
bswap
cmc
dec
lret
mov
mov
mov
addr16
decl
in
pop
and
ja
mov
insl
xor
fwait
mov
xchg
mov
imul
dec
es
sarb
ljmp
aad
lcall
sahf
dec
mov
push
mov
push
fmul
loopne
cmp
insl
shll
xor
in
add
loope
dec
xor
stos
test
scas
test
add
adc
incl
std
mov
lods
das
sub
and
int
mov
stos
cs
cmp
lds
loopne
cmpb
in
lcall
dec
test
pusha
inc
and
or
fldcw
xor
aaa
mov
inc
rolb
repz
sbb
ret
push
cmc
icebp
lock
out
and
rcll
push
mov
sbbl
xchg
ss
cmp
add
mov
in
sub
movl
ja
ljmp
push
sahf
or
bound
subl
xchg
negl
mov
cltd
pop
shrl
lods
mov
mov
fwait
sbb
mov
gs
cmpsb
push
test
add
adc
push
adc
lds
popf
or
pop
and
sub
clc
push
pop
inc
dec
and
sbb
nop
jbe
ret
add
jp
mov
lock
sti
lock
lods
jp
je
inc
nop
cltd
add
xor
pop
out
shrl
daa
add
scas
xor
out
pop
addr16
loop
bound
pop
mov
inc
pop
cmp
mov
mov
jle
xlat
and
xor
aas
int3
movsb
mov
gs
in
adc
xor
or
inc
call
inc
shl
into
mov
ret
or
mov
cmp
mov
movsl
loopne
rol
arpl
repz
imul
mov
sbb
mov
les
cmp
addr16
sub
fadd
testl
iret
bound
sti
sub
sbb
insl
mov
repz
shl
xor
mov
pushf
inc
scas
movsl
pop
push
ds
push
xor
or
pop
mov
mov
fwait
aas
sti
sub
test
cld
push
cmp
enter
test
add
jg
push
pop
arpl
push
and
mov
push
fstpl
push
dec
cwtl
xlat
fistpll
cli
cld
dec
outsl
jnp
shlb
mov
pop
cwtl
movsl
cmp
in
jecxz
mov
mov
dec
mov
jecxz
xor
outsl
mov
cmpsb
cmp
add
pop
push
mov
sbb
xlat
ljmp
xor
outsb
xchg
andb
loope
inc
add
andb
mov
fadd
lock
enter
xchg
push
mov
sbb
adcb
orl
sbb
sti
mov
adc
or
movsl
test
fldcw
xor
or
mov
add
xlat
mov
sbb
mov
fildl
xchg
push
mov
lahf
in
movsb
sti
mov
ficoml
adc
mov
jmp
enter
dec
popf
lret
xchg
cmp
out
aaa
cmp
cmp
stc
mov
nop
xchg
jl
pop
outsl
sbb
ret
mov
jmp
cmp
insb
insb
and
out
fs
jnp
push
xchg
fdivl
jae
sub
stos
lea
pop
icebp
mov
pop
dec
jo
lcall
pop
jae
lds
and
push
repnz
add
inc
cmc
push
leave
add
cmp
fdivrp
sahf
jl
xchg
cld
mov
decb
loopne
jge
lahf
cmp
loope
scas
inc
push
add
insl
outsl
xlat
sub
rcr
loop
daa
fcomps
fpatan
inc
addl
or
mov
in
sbb
das
call
daa
mov
shll
push
outsl
das
stc
ss
and
repz
hlt
mov
and
das
andb
pop
imul
mov
push
arpl
and
ds
psrld
aas
xorl
iret
lcall
xchg
inc
notl
add
shlb
push
imul
test
stos
adc
sub
pop
jbe
ja
ret
fst
or
movsb
outsb
jg
inc
jg
fsts
lods
mov
ljmp
fwait
lret
push
inc
xor
xor
jle
xor
sti
adc
cmp
pop
add
and
inc
mov
ffree
into
sbb
xchg
adc
push
jle
jne
rclb
inc
adc
dec
xorb
lods
xor
pop
push
pop
aas
popf
pop
rol
ljmp
jne
or
test
iret
xchg
mov
adc
scas
ffreep
movsl
enter
fldt
mov
imul
pop
cmp
sahf
bound
add
aam
fcoms
or
xchg
adc
push
repnz
add
pop
rcll
sbb
mov
negl
scas
std
xchg
adc
mov
dec
in
aam
adc
inc
lret
fnstenv
and
xchg
xchg
dec
cmp
mov
pusha
mov
xor
xor
inc
cltd
lock
lahf
add
mov
repz
and
pop
and
push
je
pop
or
call
or
sbbl
lods
cmp
mov
subb
pop
popf
mov
or
mov
and
repnz
pop
aaa
fidivrs
cmp
dec
jns
leave
jge
xchg
pop
add
cmp
sarb
out
movsb
sub
mov
lahf
jge
dec
ror
mov
ficoms
jne
out
lods
cld
mov
leave
mov
pop
or
sbb
pop
jl
ja
push
pop
mov
push
jp
out
fwait
xor
push
add
aas
xor
repnz
insb
jg
pop
dec
mov
imul
mov
add
in
mov
cmp
xchg
and
es
add
cmp
and
outsl
imul
xor
das
and
cmp
xchg
arpl
in
das
and
ss
sarb
mov
adc
ja
movsl
mov
stos
pop
js
add
leave
or
or
xchg
pusha
popa
rorb
dec
ja
pop
sub
ja
xor
pusha
dec
inc
dec
xor
enter
gs
cmp
repnz
fcmovnb
pop
or
lds
enter
call
push
dec
stc
data16
or
push
aas
ljmp
test
pop
aaa
xor
sub
xor
cwtl
subl
pushf
lcall
xchg
add
insb
add
push
and
xchg
fisttpl
jmp
add
push
xor
fisubrs
sub
mov
xchg
loop
data16
jb
lret
mov
jge
xchg
sbb
out
insb
inc
popa
lods
lcall
xchg
rclb
push
mov
mov
test
mov
mov
cmpsl
mov
dec
frstor
or
sub
pop
add
cwtl
aas
jb
shrb
rolb
inc
sub
pop
cmc
lds
xchg
stos
pushf
js
cmp
pop
or
jge,pn
shrb
jp
and
adc
ret
jno
cmc
sub
shrb
mov
add
mov
pop
ret
sbbb
rcll
push
adc
addr16
push
pop
lods
clc
push
adc
pop
xchg
or
and
int3
outsb
mov
and
jge
cmp
or
sbb
push
outsb
xchg
stos
dec
roll
inc
jb
test
sbb
inc
ja
mov
imul
out
das
xchg
les
push
ja
rclb
aaa
dec
fisttps
lcall
sub
xchg
cmp
dec
clc
sbb
pop
add
inc
loopne
sbb
outsb
std
jae
push
stos
test
stos
mov
inc
mov
sub
push
xor
aad
outsb
inc
sub
and
add
push
inc
inc
sbb
pop
iret
add
fcmovbe
in
aam
in
test
loopne
fs
pop
rol
xchg
gs
xor
hlt
mov
rolb
add
cmc
dec
inc
iret
cmc
mov
es
pop
dec
xor
jl
addr16
pop
lret
les
sbb
leave
mov
sub
xor
incb
not
mov
mov
or
daa
inc
sti
rol
jno
popf
aam
das
ret
dec
movsb
xor
sub
cmpsb
rorb
bound
jge
jb
add
inc
jg
adc
fiadds
or
xchg
lods
inc
int
inc
jbe
mov
xlat
lods
lcall
testl
stos
mov
push
jmp
add
cld
pushf
and
and
fwait
mov
sub
fucomi
cli
scas
ret
in
inc
icebp
outsl
fdivs
mov
lret
mov
and
mov
shll
jle
pop
ss
lret
dec
cmp
sbb
pop
fistpll
cmp
movsl
mov
jo
jne
imul
jmp
daa
stc
push
imul
sti
jns
and
popf
repnz
or
and
in
sahf
fcomp
jp
test
stos
arpl
in
imul
or
mov
push
cmpsb
and
repz
push
iret
xor
and
cmp
icebp
add
sbb
mov
and
or
cmp
mov
mov
push
pop
popa
mov
push
jbe
mov
lods
xlat
rorb
popf
cmp
loope
push
aaa
mov
sub
adc
xchg
mov
jp
incb
sbb
jmp
jge
jo
in
fsubl
cli
in
xchg
mov
jo
lea
loop
jae
mov
jo
gs
jns
xchg
icebp
mov
push
and
xor
movsl
jne
jge
mov
dec
dec
or
ds
gs
pop
aas
sbb
pop
cmpb
push
jbe
out
jnp
hlt
out
mov
loop
in
pushf
das
imul
leave
jmp
insl
icebp
loopne
jns
push
cmp
xor
dec
int
ljmp
sub
xchg
push
mov
mov
ret
in
sub
lods
gs
sub
push
neg
cwtl
push
xchg
pop
pop
jb
in
pusha
jecxz
mov
std
jnp
mov
cli
mov
add
rolb
ror
xchg
fs
shr
fwait
xchg
sbb
int3
ficompl
add
pop
clc
int
jmp
fwait
cmp
xchg
mov
xchg
and
sub
mov
dec
mov
ljmp
push
inc
dec
icebp
jmp
add
gs
addl
les
popa
fdivs
push
or
mov
sbb
jl
hlt
lahf
jnp
jmp
in
inc
jecxz
or
inc
sub
mov
dec
inc
xchg
pop
ret
xchg
mov
inc
sub
shll
push
sti
fwait
pop
mov
mov
push
jb
jp
cmp
adc
push
inc
adc
call
lds
xchg
mov
pop
sub
push
test
or
out
inc
adc
jbe
mov
out
pushl
add
mov
pusha
cli
lock
loop
sub
pop
mov
cmp
dec
aad
fistl
mov
xchg
mov
loopne
mov
loope
fsts
rcll
dec
dec
xor
fsubrl
jp
add
cmpsb
std
hlt
js
push
pop
sbb
pushf
fadds
ljmp
xlat
jns
inc
or
repnz
dec
cwtl
lock
cmp
test
xor
hlt
push
and
fs
shll
lahf
iret
data16
dec
and
enter
into
push
insl
std
scas
jmp
cmp
pop
cltd
iret
adc
stos
ret
ret
push
lods
mov
fxch
sub
xor
imul
pop
pop
jmp
fbld
cmc
sub
mov
mov
aaa
or
loopne
push
jge
jne
jle
mov
into
xchg
test
jbe
out
jmp
pop
lods
adc
pop
xchg
fneni(8087
mov
test
stc
test
adc
mov
xchg
pop
inc
loope
add
cmp
mov
adc
inc
xor
xor
imull
cmp
imul
cmp
and
sar
mov
pop
dec
fs
sbb
xor
xor
aas
cmp
int3
dec
cmp
rcrl
cmpsl
repnz
inc
ljmp
xor
out
mov
inc
mov
dec
out
into
push
out
jl
scas
mov
stos
neg
jne
sub
adc
popa
sti
or
cwtl
adc
sbb
adc
std
sbb
repz
sbb
out
or
std
loopne
je
sarb
xor
gs
rcrb
adc
pushf
mov
pop
rorl
jno
loop
jmp
sub
xchg
inc
sbb
stc
js
cmpsl
inc
xor
aam
cmp
and
or
fwait
lret
icebp
xchg
mov
adc
inc
fdiv
adc
movsb
adc
enter
inc
lret
fptan
push
push
js
push
fwait
ja
mov
mov
aas
sub
lods
sbb
lret
test
fstpl
mov
sar
ret
sub
cmpsb
and
mov
clc
mov
mov
fimuls
pop
jp
fbstp
or
popa
add
sbb
or
inc
xchg
notl
pushf
loopne
adc
aas
ja
mov
sbb
add
mov
maxps
cltd
xor
rcrl
dec
cltd
adc
push
sub
pusha
inc
add
clc
leave
mov
jb
iret
scas
stc
iret
lock
lahf
push
movsb
sbb
lock
push
mov
data16
pop
cmpsb
push
mov
mov
mov
push
std
movd
and
lret
push
gs
ljmp
sti
stos
push
inc
imul
xchg
mov
int
daa
pop
or
mov
subl
sub
or
pushl
outsl
mov
sbb
jb
lock
ret
xor
pop
repz
push
lret
cmpsl
andl
les
stos
mov
mov
and
or
outsb
lret
ds
imul
or
scas
add
stos
mov
mov
leave
negb
and
sbb
out
jnp
push
xchg
xchg
fistpll
or
mov
or
andb
sub
shll
jae
in
push
je
aam
fwait
or
add
fwait
push
inc
inc
pop
inc
jne
xor
imulb
fwait
adcl
xchg
mov
push
fnsave
xchg
ljmp
aas
rorb
mov
cmc
imulb
adc
lods
dec
shll
sahf
xchg
lcall
ficoml
xchg
sbb
mov
cld
out
pop
cmp
ds
cmc
inc
aaa
out
sbb
push
cmp
mov
ja
ja
imul
mov
sub
push
in
fimuls
outsb
rclb
int
std
aam
dec
in
gs
fmuls
adc
mov
dec
mov
push
mov
inc
add
and
lock
fcomps
les
xor
inc
mov
into
dec
mov
mov
and
in
ds
xor
stos
stc
inc
push
int
push
mov
inc
outsl
xchg
jle
gs
adcb
out
xlat
inc
arpl
ja
ds
cmp
jl
adc
mov
fldl
ljmp
popa
xlat
dec
pop
or
add
cmpsw
aad
mov
out
mull
cmp
cmpps
sub
stos
pop
idivb
insb
roll
add
movsl
sbb
and
mov
clc
notl
insl
pop
jns
testb
pop
pop
andl
iret
in
insl
mov
xchg
outsb
idivb
lcall
or
mov
es
sub
bswap
lea
mov
inc
sbb
test
cmc
subb
cmp
outsl
and
pushf
cmpsl
das
or
pop
dec
ret
push
inc
inc
push
inc
push
mov
push
pop
push
and
cmp
cmp
inc
leave
ds
leave
cmc
jns
test
push
pop
adc
arpl
cmpsl
mov
push
push
mov
nop
aaa
inc
rolb
mov
stos
push
inc
pop
pop
in
bound
cmp
add
sbb
jbe
aas
lods
sbb
mov
shrb
xor
adc
inc
rcrb
sub
lret
loopne
mov
cmp
sarb
mov
mov
fbld
out
jmp
jge
sarl
xchg
test
xor
js
push
adc
jne
mov
rolb
or
cmc
jb
lahf
lahf
sub
mov
add
push
cmc
mov
sbb
jge
pop
popf
scas
add
shl
or
in
inc
cmp
push
fistl
imul
push
mov
push
mov
repnz
cmp
lahf
sbbb
inc
jne
pop
or
mov
cli
lds
les
xchg
aad
dec
mov
into
lock
faddl
pop
xor
out
xor
mov
cmp
test
push
ja
lcall
inc
pop
jle
jecxz
and
movsb
cmpsl
scas
mov
jge
imul
shlb
lea
test
es
shrl
xchg
cwtl
je
stos
adc
repnz
sbb
inc
and
enter
xlat
mov
or
int
mov
cmp
pop
ret
test
and
jg
inc
sbb
std
fnsave
sbb
pop
xor
mov
sarl
insb
fdivrs
mov
pmaddwd
pop
sub
icebp
xor
enter
out
cli
jge
test
add
pop
jg
sub
outsl
hlt
fidivrs
xchg
les
cmp
sahf
inc
lret
sbb
les
and
fisubrs
dec
and
mov
daa
enter
lcall
loop
xor
in
jbe
jno
jmp
loopne
cmp
repnz
imul
lret
and
cmp
mov
rcll
ss
or
int
icebp
dec
frstor
inc
inc
xchg
call
fs
inc
jns,pn
ja
shrl
mov
sahf
or
jmp
cmp
std
xchg
push
push
add
cmp
and
fildll
cld
push
mov
stc
sbb
cwtl
rol
paddw
fcoml
jnp
jge
scas
std
sbb
dec
pop
pop
addr16
push
insl
repz
pop
test
mov
fimuls
add
data16
jo
xchg
xor
leave
clc
and
scas
test
inc
adc
cmp
fwait
pop
xor
in
mov
xor
rorb
pop
sub
aad
aaa
lea
and
xor
push
or
addr16
mulb
stos
adc
loope
dec
mov
les
lahf
jp
add
mov
inc
cs
mov
mov
into
inc
jnp
push
sti
js
or
imul
stos
dec
pop
jp
adc
test
cmp
aam
push
les
imul
fidivs
les
fidivrl
in
pusha
in
idivb
jg
aaa
jl
pop
mov
mov
xchg
mov
fs
inc
out
push
les
cltd
mov
jo
push
mov
push
fsub
gs
out
cwtl
push
mov
add
es
add
insb
inc
push
or
addr16
popf
lcall
mov
adc
fldl
out
test
cltd
gs
ds
adc
jl
enter
xchg
jb
pushf
and
shrb
lret
outsb
fstpt
add
mov
cmp
sub
scas
sbb
push
xchg
mov
les
inc
xchg
sub
sahf
loopne
and
jno
das
mov
jp
lahf
ret
test
js
popa
mov
inc
cmp
and
pop
test
mov
push
xorl
cld
add
jae
test
adc
mov
push
mov
and
fcmovnu
cs
in
jbe
lds
mov
pop
and
adc
std
sub
adc
data16
pop
jg
into
sti
sbb
xorl
pop
dec
js
mov
loope
jae
shll
push
ffreep
xor
jbe
mov
out
jae
stos
shlb
dec
push
and
cmp
repz
cmpsb
jbe
clc
mov
xchg
sub
mov
lds
add
cmpsl
in
mov
dec
fistps
ja
push
mov
adc
hlt
fists
pop
mov
out
sbb
inc
jo
push
mov
jp
or
sbb
mov
mov
cmp
out
mov
cmpb
imul
inc
incb
jmp
ror
and
hlt
or
adc
cmpsl
loop
push
cmp
push
mov
xor
stos
mov
lret
int3
cmc
mov
xchg
jmp
fdivl
jo
imul
mov
bound
jg
or
out
mov
dec
and
cld
outsb
add
mov
test
lahf
addr16
loopne
add
es
adc
add
aam
popf
insb
dec
cmp
jg
sbbb
lret
js
adc
push
mov
call
lret
cmp
fsubrl
insb
fstl
mov
fwait
ja
jecxz
mov
dec
pop
add
cld
sbb
aaa
jae
or
lock
rol
ret
mull
inc
and
cmp
xchg
xchg
jns
sbb
les
xchg
andb
pop
pop
xor
push
rorb
notb
lret
jbe
push
jns
xor
ljmp
xchg
cmp
inc
or
fbstp
inc
inc
mov
dec
dec
bound
dec
fisubs
adc
xchg
pop
dec
inc
int
scas
sbb
mov
sti
pop
sbb
pushf
out
jbe
int3
mov
xchg
mov
and
push
imul
pop
aaa
jl
aam
test
xlat
fmul
popa
sbb
mov
add
jnp
cld
or
ss
fwait
leave
mov
gs
xchg
and
xlat
mov
jmp
hlt
push
lods
mov
sahf
fstps
inc
mov
pop
or
cmc
mov
lcall
mov
sbb
jbe
mov
pop
jae
imul
push
and
xchg
in
mov
adc
push
aaa
jae
add
lret
jg
dec
push
mov
cmp
adc
fdivr
scas
ficompl
repnz
inc
pop
adc
fadd
icebp
add
add
mov
xor
adc
roll
loopne
data16
sbb
jae
pop
or
jp
xchg
pop
js
push
cmp
nop
mov
aas
add
pushf
dec
repz
movsl
dec
fs
pop
pushf
mov
mov
and
sysret
push
std
movsb
test
loop
sub
jne
cmp
push
mov
pop
cmc
fcmovnu
ja
lea
leave
pop
sbb
loopne
push
mov
pushf
dec
push
sbb
lea
inc
hlt
push
mov
push
jmp
adc
sbb
dec
push
orl
add
cmpsb
insl
ret
xchg
cli
mov
enter
push
inc
scas
std
popa
and
pusha
add
les
sub
pop
xor
aam
cmp
xchg
out
addr16
lods
cmpsl
push
xchg
push
mov
icebp
cltd
bound
sbb
jg
dec
push
cld
ljmp
lcall
mov
cli
test
adc
das
mov
fs
push
sub
popa
inc
call
xchg
repz
pop
mov
or
cmp
add
addr16
test
repnz
push
out
stos
jno
inc
cli
push
mov
test
pusha
cmp
cltd
xchg
push
push
cmp
xor
lds
lds
sub
test
loope
add
pop
ret
cmp
or
xor
push
xchg
ret
push
iret
add
addr16
pushf
mov
pop
les
fisubrs
mov
inc
add
mov
mov
js
aad
mov
pop
jmp
xor
xchg
out
int3
sub
sahf
mov
inc
push
mov
pop
cmp
mov
outsb
lret
pop
fwait
or
shr
inc
fmuls
push
jb
inc
mov
addr16
scas
push
mov
add
incb
cmpl
in
dec
push
fs
push
xchg
ja
mov
cmpsl
out
rcll
jne
xor
icebp
out
mov
jo
xchg
push
icebp
mov
stos
fnstsw
add
adc
add
or
xchg
in
xchg
nop
fdivs
out
xor
inc
sbb
mov
bound
enter
fstl
rcll
inc
mov
push
nop
cmp
jmp
orl
inc
dec
xchg
add
je
mov
xor
add
cwtl
push
leave
xchg
sub
mov
test
lret
cmpsb
adc
jnp
idivb
xchg
adc
xlat
jnp
pop
mov
rclb
jnp
xchg
stos
dec
xor
pop
int3
cli
mov
or
mov
pop
jp
jl
test
mov
xorl
add
push
lods
push
call
lahf
loope
pslld
fdiv
adc
jbe
push
jnp
mov
adcl
mov
notb
pop
in
sub
and
add
inc
or
mov
push
stos
xchg
jecxz
or
sbb
xchg
cmp
cli
in
cltd
rclb
fwait
clc
mov
das
arpl
lret
jge
xor
inc
or
xchg
xchg
push
ficoms
jp
ds
mov
jp
lcall
cmp
and
int3
aad
xchg
mov
xlat
inc
out
cmp
fdivl
in
mov
ficoms
cld
or
and
or
repz
das
mov
xchg
dec
scas
jecxz
cli
es
decl
sub
sarl
daa
lock
adc
loopne
js
add
xchg
in
inc
push
jmp
dec
pop
fsts
in
mov
test
mov
mov
popf
mov
imul
push
jecxz
loope
jns
dec
stos
mov
sub
movsb
push
outsl
mov
fmull
dec
xchg
mov
dec
jmp
inc
or
les
or
mov
sti
adc
aaa
jae
je
mov
mov
lock
into
xchg
mov
inc
fidivrs
push
or
aas
out
lock
es
push
jns
inc
cmc
negl
mov
push
mov
daa
mov
sahf
cmpsl
orl
sbb
neg
int3
mov
mov
imul
pop
cmp
arpl
out
or
xchg
inc
or
mov
cmp
fwait
and
mov
dec
popf
sub
adc
imul
dec
xor
dec
mov
or
cli
pusha
fwait
push
mov
sbb
fwait
xlat
xchg
cli
push
add
inc
xchg
out
lret
push
dec
icebp
pop
jg
push
adc
xor
lods
push
cmp
jle
enter
out
icebp
testl
hlt
rclb
cmp
mov
pop
xchg
incb
js
jnp
pop
filds
mov
popa
inc
cwtl
xor
insb
push
sbb
cmp
aad
push
xlat
inc
cli
mov
iret
inc
mov
sti
sbb
pop
loopne
xor
inc
test
cmp
push
xchg
inc
mov
test
stos
sti
mov
push
adc
jmp
sbb
rcrb
jno
lods
pop
xor
and
sub
cmpsl
fdivr
out
push
sbb
out
mov
and
mov
dec
adc
mov
ss
xor
notb
and
imulb
ss
loop
mov
mov
and
dec
shlb
inc
mov
add
shlb
or
lods
pop
add
ret
ja
cmpsl
push
mov
push
mov
push
dec
push
cli
loopne
mov
pusha
insb
jae
jecxz
rorl
cli
lods
enter
jg
loope
xorl
mov
iret
iret
pop
adc
je
dec
pop
mov
and
and
stos
jecxz
in
dec
cmp
jp
lret
not
cs
pushf
aad
into
or
and
mov
lahf
or
and
mov
mov
call
out
mov
push
adc
repz
in
shl
mov
cld
jmp
cld
aam
xchg
pop
movsl
xor
push
mov
cmp
dec
sahf
mov
inc
in
lret
xor
or
lret
stos
les
push
mov
int
pop
into
icebp
pushf
scas
push
int
cltd
sbb
pop
scas
xchg
and
and
mov
cmp
adc
mov
cmp
sbb
mov
out
adc
push
fucom
xor
cld
sbb
xchg
sarb
push
mov
es
lock
cmp
scas
xchg
out
adc
jno
xorb
mov
pop
mov
pop
jnp
insb
adc
lret
pop
aas
and
stc
inc
clc
loop
mov
and
sbb
loopne
sbb
jo
mov
dec
cli
and
shl
jnp
shll
inc
fs
cmp
push
pop
push
mov
sahf
arpl
hlt
stos
add
leave
jae
cld
sbb
test
sahf
jno
jb
mov
push
or
inc
and
cmp
fldt
cmp
stos
cmp
dec
xchg
mov
push
sub
imul
adc
in
mov
int
loopne
or
imulb
ret
mov
push
sub
jbe
not
daa
lcall
pop
sarb
sbb
inc
and
es
leave
or
adc
cmpb
mov
rorb
xchg
pop
cmc
test
das
push
imul
and
mov
add
pop
mov
sub
sub
or
fmuls
fstps
mov
push
xlat
or
ja
xor
gs
sub
xchg
sub
pop
pushf
sahf
or
test
inc
aam
jnp
sbb
out
cmp
xchg
pushf
jo
jae
inc
mov
add
jmp
pop
add
loop
mov
pop
sub
push
fiaddl
push
mov
insb
idivb
pop
and
cmpb
fwait
jmp
decl
pusha
rorl
sbb
xchg
sbb
shr
arpl
lahf
ret
imul
push
jmp
dec
add
mov
mov
mov
or
insb
mov
incb
or
mov
jg
sub
pop
push
scas
xor
sub
jne
pop
test
iret
pop
push
dec
and
sbb
cmp
mov
or
dec
pop
mov
je
fisttpll
push
inc
in
mov
icebp
filds
add
icebp
rorl
push
subl
aas
push
test
or
js
push
cmp
sbb
aam
or
sub
push
lcall
fucomi
out
sub
sbb
movsl
jp
test
xchg
icebp
or
add
sub
sub
jnp
cmp
pop
sbb
push
dec
imul
call
pop
pusha
test
int
lods
flds
jns
aad
push
inc
icebp
mov
or
pop
inc
clc
cmp
ds
imul
and
dec
jecxz
fisubl
gs
hlt
mov
dec
mov
pop
and
cltd
out
nop
out
push
xorb
in
out
pop
popf
push
add
in
add
sub
inc
sub
ja
jno
je
and
in
inc
lods
enter
lcall
and
push
and
out
test
sti
jns
xor
pop
out
jbe
push
in
push
orb
shlb
jns
mulb
movsl
mov
bound
xchg
aad
inc
xchg
iret
xchg
movl
jbe
lods
xchg
jae
adc
in
imul
sbb
or
jle
xchg
fsubrs
pop
ljmp
mov
mov
aas
leave
add
scas
dec
test
lret
pusha
jle
rol
test
and
notl
notb
mov
aas
adc
loop
xor
mov
mov
clc
fs
sarl
jmp
outsb
dec
push
jnp
and
sarl
hlt
inc
fsts
sbb
lods
push
mov
inc
movsl
outsl
or
sub
push
bound
jnp
iret
cmpsl
xor
jl
inc
enter
andb
and
xchg
inc
jns
cmp
and
jl
pop
lcall
adc
or
xor
mov
add
push
xor
pop
jmp
mov
ds
jg,pt
jecxz
subb
jl
xor
pop
dec
icebp
pusha
imul
mov
sbb
icebp
pusha
fdivl
rcl
in
jae
add
das
faddl
pop
test
fisubrl
mov
mov
dec
and
push
or
orl
mov
pop
arpl
pusha
test
cmp
repnz
jae
push
cmpsb
mov
pop
dec
push
movsl
xchg
add
lret
das
mov
dec
push
std
out
sub
xchg
test
test
daa
xchg
sub
mov
adc
lahf
inc
outsl
sbb
cmp
lahf
or
lahf
and
jae
ja
add
mov
xor
jg
dec
in
jbe
cmp
ja
lods
mov
dec
imul
push
jg
and
frstor
mov
rcll
mov
pop
cmp
xor
xchg
rclb
push
out
jne
and
pop
lds
jmp
dec
mov
push
inc
rolb
xchg
je
pushf
pusha
pop
xchg
adc
mov
mov
xor
or
scas
inc
outsb
cltd
xor
arpl
loop
dec
fidivrs
dec
or
outsl
jl
ljmp
push
cmp
cmp
adc
aam
sbb
stc
ret
fwait
clc
sbb
rcrl
stc
xor
ss
insl
mov
sub
pop
cmp
jl
popa
mov
cld
stc
jp
and
mov
addr16
ljmp
xlat
and
repz
testb
fsubr
mov
stc
hlt
or
sub
rorl
jp
jl
cs
stos
mov
jg
in
push
adc
jns
outsl
in
pop
sbb
jo
int3
fildll
cmp
adc
shl
push
cmp
lret
fldl
mov
hlt
subb
jae
shlb
pop
or
add
and
shlb
cwtl
sub
mov
lcall
test
mov
and
dec
push
push
sbb
add
xchg
cltd
mov
and
or
fisttpl
xor
dec
shlb
xchg
out
out
fs
cs
jbe
mov
xor
adc
paddd
dec
mov
stos
outsb
ret
sub
jp
mov
sub
test
mov
mov
push
loopne
mov
pop
sub
mov
pop
mov
mov
xchg
insb
loopne
mov
pop
xchg
push
dec
lcall
mov
leave
adc
icebp
xor
fidivrs
jnp
vsqrtps
jae
shr
sti
pop
cwtl
nop
aaa
pop
push
je
mov
mov
inc
inc
cmp
dec
imul
rol
mov
push
test
fisttpl
subb
cmp
shl
outsb
lea
ss
fadds
mov
fchs
mov
mov
fbld
arpl
shll
and
pop
sub
mov
scas
sarl
insl
sub
pop
iret
stc
sub
pop
mov
cmp
sub
mov
insb
aam
inc
popf
cmp
mov
data16
sub
repz
loopne
mov
movsl
repz
mov
aad
xor
mov
dec
cmp
mov
push
pop
gs
sub
bnd
addr16
jmp
dec
insl
in
jnp
sub
cli
out
fwait
push
subb
inc
xchg
inc
stos
inc
jmp
pusha
sbb
js
add
shr
add
arpl
nop
movsl
arpl
test
inc
cmp
js
cmp
jg
mull
scas
test
shlb
enter
sti
mov
xchg
rcl
mov
mov
outsb
jmp
and
insl
dec
xor
xchg
addr16
xchg
adc
xchg
xchg
push
popa
jle
pusha
mov
push
ljmp
push
aam
adc
inc
xchg
andl
notb
lea
test
addl
fnop
inc
pop
in
adc
push
mov
data16
xlat
mov
pop
fld
lahf
push
lret
cmpsl
idiv
das
ret
cmpsl
xchg
cmp
xchg
push
xchg
in
sub
fidivs
fisubl
bnd
mov
and
test
ret
mov
cs
aas
lea
jno
call
stos
xor
add
mov
jnp
outsl
or
and
inc
jno
lret
mov
xchg
push
or
outsl
push
xchg
cmp
adc
add
in
pop
jne
pop
dec
out
lds
insb
mov
adc
inc
scas
jnp
xchg
push
aam
outsb
sbb
sbb
movsb
sti
adc
jns
inc
adc
mov
pop
daa
dec
jmp
adc
adc
out
js
adc
push
data16
fbstp
push
icebp
jl
jge
into
outsl
ja
leave
or
xchg
loope
pop
data16
jg
imul
and
orl
outsb
mov
enter
push
stc
adc
outsl
rcl
mov
jg
xchg
xor
or
loop
dec
push
and
inc
fldenv
flds
out
out
flds
aam
fists
mov
aaa
pop
fiaddl
inc
xchg
ficoml
add
mov
ds
lock
mov
mov
ficomps
aas
enter
push
mov
lock
jle
lock
lret
mov
or
jl
push
jge
sahf
loope
loop
aaa
insl
outsb
stos
aaa
push
or
movl
ja
inc
das
pop
mov
xchg
xchg
lret
mov
xchg
imul
mov
mov
popf
cs
jp
ret
xchg
movsb
addb
and
or
sbbb
icebp
and
popa
xor
mov
dec
icebp
push
lret
loope
cld
inc
sub
push
cmp
xor
xlat
subb
sub
dec
out
adc
push
test
cmp
sbb
xor
dec
mov
mov
xor
int3
ret
jns
and
jbe
xchg
inc
jle
mov
sti
hlt
dec
adc
cld
jle
push
mov
cmp
pop
gs
daa
xchg
call
jle
adc
mov
inc
scas
nop
add
int3
sahf
sbb
mov
pop
pop
mov
loopne
mov
jmp
mov
test
jge
movl
ja
lahf
sub
push
ret
inc
jmp
push
sbb
mov
ja
test
dec
push
scas
mov
stc
lret
lahf
dec
jnp
push
lods
mov
sub
add
fsts
add
lahf
movsl
filds
xchg
sbb
pop
xor
cs
stos
xchg
insb
insl
rcr
out
pop
outsl
out
mov
scas
fnstcw
popl
push
dec
inc
mov
int
xchg
out
sub
outsl
jg
add
test
push
mov
lahf
lahf
dec
push
jl
jl
lahf
mov
aam
cmp
cmp
dec
cmp
push
lret
pop
loop
lahf
jbe
cmpsb
pop
sub
sti
sub
mov
out
jmp
fidivrl
dec
shlb
jg
or
shr
mov
lret
mov
sub
fildl
aam
push
popf
divl
pop
mov
cmp
cmovbe
xor
push
xor
add
aaa
and
stc
pop
inc
mov
sub
mov
mov
out
fmuls
dec
mov
pop
sub
inc
jno
lcall
cmp
repnz
call
sub
out
xor
push
je
mov
push
sbb
cld
mov
stos
and
cmpsb
jl
sbb
push
xchg
out
pop
mov
cld
add
pop
push
shll
out
jbe
mov
and
jmp
mov
js
jle
lods
mov
inc
aad
addr16
loope
mov
in
xchg
sub
mov
loop
xor
cld
sub
and
stos
sbb
jge
jne
fisttps
dec
mov
dec
inc
sbb
jp
sbb
dec
test
dec
imul
sub
ret
int
or
xor
lock
in
jmp
inc
xchg
sbb
cmp
imul
arpl
insb
stc
in
jo
test
lock
xor
push
fisubl
loope
push
insl
sbb
cmc
daa
mov
sahf
stc
lret
cmp
outsl
push
clc
dec
xchg
ret
in
jg
fnstsw
dec
sub
xor
mov
int3
sbb
xlat
fwait
pop
dec
ret
jl
or
add
pushf
mov
outsb
dec
dec
es
int3
subl
out
movb
pushf
icebp
push
mov
in
jle
sti
and
int
arpl
test
or
or
mov
daa
sahf
sbb
push
inc
mov
and
imul
cmpb
or
mov
test
jae
movsb
sti
dec
jbe
add
sub
mov
pop
or
push
push
pop
fs
jl
fsts
add
in
insb
jmp
add
mov
leave
lea
pop
ss
add
icebp
cwtl
in
mov
call
popf
addr16
out
pop
jp
push
test
push
test
std
fwait
jns
inc
inc
shlb
pop
push
pop
fnstsw
mov
and
mov
clc
inc
mov
popf
inc
xchg
push
leave
repz
imulb
mov
cwtl
dec
es
jns
xor
pop
and
inc
or
adc
cmpsb
lods
jg
jle
loope
push
negl
pop
cmp
push
xlat
pushf
insl
rcll
sbb
jo
cmp
add
inc
push
popl
pop
addr16
jb
push
mov
push
mov
loope
jg
not
mov
or
fadds
xor
out
cmpsl
cli
jecxz
xor
mov
es
inc
rol
sub
es
insb
adc
push
adcl
ret
push
cmp
push
push
sub
iret
pop
es
jns
mov
adc
xor
std
lret
lea
call
mov
inc
mov
jge
sub
ss
nop
pop
sbb
dec
push
addr16
movsb
mov
cs
adc
jo
mov
dec
pop
aas
sti
js
mov
adc
mov
cmc
pushf
cli
mov
in
cmp
arpl
pop
or
mov
push
call
dec
or
cmp
and
sub
push
cltd
adcl
nop
mov
ss
lods
int
dec
in
cmpsl
pop
mov
mov
vphaddbw
push
lock
sub
cmp
je
jne
xor
mov
loopne
fwait
mov
jle
add
xor
add
jmp
jnp
pop
popf
sbb
cmp
jne
or
mov
inc
movsb
in
stos
loopne
sarl
xor
insb
adc
xor
pusha
repnz
call
cwtl
lret
addr16
cmpb
in
adc
pop
push
jge
ss
pop
sbb
jbe
cmp
mov
xor
cli
add
out
subb
loopne
dec
xchg
xlat
push
and
sbb
in
pop
testb
push
jbe
insl
inc
adc
icebp
call
mov
out
push
sbb
hlt
lods
imul
push
pushf
mov
add
adc
and
test
in
in
sbb
mov
outsb
lds
sar
or
sti
mov
cmp
push
std
in
and
jns
push
das
repnz
dec
inc
stos
sahf
xchg
bound
pusha
sarb
push
icebp
cmp
ret
ljmp
push
xor
pop
inc
adc
insb
mov
jne
cmp
fidivl
pop
ds
aas
adc
jecxz
pop
xchg
mov
push
lcall
cmp
inc
mov
mov
cltd
xchg
pop
push
push
test
add
push
stos
in
cmp
xchg
arpl
jo
push
ja
out
sub
mov
insb
sub
xchg
out
add
pop
jle
je
repz
fdivp
scas
pop
xchg
mov
es
and
mov
jmp
repnz
sbb
mov
mov
inc
gs
pop
shrb
je
in
lcall
cmpsl
mov
xchg
mov
ret
cli
in
adc
cmp
push
fstpt
lret
push
movsb
sti
push
sbb
pop
or
or
stc
lea
sti
pop
ja
add
jg
lret
fcmovnu
iret
rcrb
stos
out
push
pop
sbb
cmp
or
mov
pop
data16
mov
cmp
decb
fbstp
xor
mov
stc
idivb
sbb
and
mov
rcrb
jg
mov
or
jb
outsb
jp
sbb
and
stc
inc
call
jg
out
xlat
adc
mov
jae
add
push
inc
xor
inc
out
js
leave
sbb
pop
mov
xor
mul
jle
rorb
cli
into
add
outsb
inc
mov
gs
gs
pushl
pop
inc
scas
sub
daa
cmp
cwtl
lods
outsb
pop
xor
jl
inc
sub
cltd
shr
add
sarl
movsl
push
xchg
mov
inc
pop
mov
ljmp
movsb
or
testl
mov
cli
and
insb
lahf
jns
popa
test
jecxz
cmc
and
orb
xchg
add
test
adc
outsb
pop
push
push
int
jbe
dec
cmpsl
mov
mov
notl
mov
or
idivl
cmp
pop
roll
or
xchg
cli
pop
jl
pminsw
jle
test
xchg
xchg
push
test
lret
xchg
xlat
mov
std
xchg
jbe
lods
popf
pusha
bound
addr16
sahf
or
sub
fwait
cmc
jl
inc
test
pop
sbb
fs
ret
or
pop
push
stos
push
jb
xchg
jae
enter
test
and
cmp
or
in
jg
push
bound
pop
lcall
stc
in
pushf
pop
je,pt
push
adc
and
in
stc
cmp
cwtl
mov
jne
add
test
pushf
or
mov
or
and
jmp
pushf
cmpb
xchg
push
ret
dec
jbe
xchg
xor
out
cmp
add
or
aas
lds
daa
cmp
mov
in
testb
xor
jle
adc
inc
adc
icebp
mov
xchg
inc
xchg
test
mov
inc
push
loope
ljmp
notb
pushf
mov
stos
mov
aad
ja
test
mov
push
mov
cmp
sti
scas
pushf
ret
or
subl
or
lahf
push
je
repz
cmp
cmp
xor
fdivrl
int3
sti
cs
into
nop
lock
cmp
out
jle
ljmp
lods
pop
jmp
xor
sub
mov
int3
loope
loop
aaa
fdivp
push
xor
pop
repz
adcb
mov
fiadds
cld
mov
icebp
loopne
call
mov
insb
enter
or
sbb
shrl
mov
pop
jb
fistpl
cli
cs
mov
cld
arpl
adc
mov
je
jge
push
cmp
mov
lret
loope
add
cmp
testl
or
outsl
xor
or
or
mov
imul
jb
jns
or
add
cmp
sub
adc
leave
fwait
sub
jmp
lods
push
push
xchg
out
xor
out
fistps
scas
mov
dec
test
fdivs
bound
mov
and
inc
push
cmp
sbb
arpl
xchg
fdivrl
add
jne
jno
mov
adc
add
pop
xchg
insl
lret
mov
pop
and
icebp
add
inc
int
daa
mov
pop
sbb
mov
push
movsb
cwtl
adc
shll
pop
push
shll
andb
cs
repz
mov
and
mov
and
push
pushf
adc
cli
dec
rcl
in
mov
xor
lea
lret
push
pusha
stc
js
movsl
mov
jecxz
test
mov
mov
add
and
xchg
enter
lds
push
aaa
push
pushf
lret
jle
mov
enter
mov
inc
out
dec
dec
jp
dec
inc
inc
push
and
lds
adc
es
aas
jo
pop
out
stc
dec
insl
orl
and
lret
test
jl
dec
push
and
mov
mov
jno
mov
or
sub
enter
jo
jae
mov
xorb
ret
jl
jno
clc
fs
pop
js
pop
mov
and
inc
sarl
out
xchg
xchg
push
aad
bound
push
out
addr16
pop
fcoms
mov
jecxz
lahf
je
aaa
rolb
lret
or
ss
std
in
jmp
pop
lcall
push
movsb
push
iret
push
shlb
xchg
stos
and
push
rcr
mov
pop
inc
pop
sub
dec
aas
les
and
gs
and
push
ss
mov
push
xorb
dec
mov
push
jbe
inc
dec
cmpsb
mov
popa
push
cli
xor
fldenv
and
ds
hlt
jno
icebp
push
aaa
adc
call
cltd
xlat
or
shll
pop
dec
notb
mov
inc
scas
pop
pop
fdivl
int3
shrl
or
aam
popf
xchg
fiadds
out
into
sbb
subb
sub
ja
jecxz
repnz
int3
cmp
xchg
call
xor
lea
call
jae
mov
cmp
mov
out
int
sarl
pop
xor
rcrb
dec
shll
adc
test
jne
call
cmc
push
je
imul
inc
pop
mov
jbe
std
popa
mov
and
das
faddl
jmp
lahf
jae
mov
adc
dec
dec
jg
adc
push
and
leave
js
mov
xor
or
fildl
into
mull
addr16
push
push
mov
and
rorb
shl
shlb
mov
ret
xor
loopne
rorb
leave
dec
add
push
sti
ret
pop
or
adc
call
push
data16
imulb
add
pusha
sahf
div
cmpsb
mov
cwtl
test
xlat
xchg
mov
dec
sub
xchg
push
push
mov
and
mov
xor
xor
stc
loope
dec
xchg
mov
pop
pushf
and
je
out
pop
push
rcrb
ss
push
jle
mov
pop
mov
popa
pop
outsl
sub
mov
dec
pop
add
jle
cmp
mov
fimuls
adc
cmpsb
int3
cmp
mull
mov
adc
ret
out
lds
iret
pushf
in
xchg
or
jmp
cltd
dec
in
test
xchg
lret
shl
xor
icebp
mov
mov
mov
push
adc
les
loope
call
jno
dec
or
outsb
xchg
fdivl
sub
fwait
xchg
cmp
pop
mov
iret
nop
or
gs
mov
daa
sub
jge
xchg
fisubl
pop
mov
ss
in
in
fsubrs
lret
jne
insl
adc
cmp
mov
lret
pop
and
aas
rcrb
cmpsl
jp
imul
inc
sbb
shll
iret
push
pop
nop
sub
outsb
mov
fistps
cmp
xor
stos
cli
mov
and
add
xor
mov
lret
dec
lret
mov
ds
inc
xor
cmp
repnz
xor
xor
jb
mov
mov
sub
aaa
test
cmc
clc
loope
enter
lds
lcall
incb
fwait
add
rorb
lods
xlat
push
push
out
lods
stos
jle
mov
das
lods
loop
pop
xchg
or
mov
leave
stc
pop
and
lret
enter
or
and
pop
pop
testl
push
repnz
dec
cmp
push
sbb
out
mov
mov
jmp
lods
icebp
in
adc
jle
push
out
dec
movsb
and
xchg
and
add
test
inc
ds
lock
add
cmp
in
push
loop
sub
int
insb
in
mov
dec
lods
das
shlb
fwait
mov
mov
cwtd
jmp
pop
jmp
jb
or
flds
test
iret
jp
sub
inc
mov
xor
add
sbb
aad
xor
mov
adc
sbb
dec
imul
addr16
outsb
dec
pop
cmpsl
in
arpl
pushf
mov
lea
push
pop
and
add
inc
dec
push
dec
cmpsb
mov
adc
aad
dec
jmp
scas
insb
sahf
outsl
sub
cmp
jge
outsb
lods
jns
fucomi
mov
sti
ds
jge
arpl
jge
mov
xchg
aas
sbb
das
dec
cld
adc
out
imul
jbe
into
cmp
or
push
jg
mov
jns
pop
es
pop
or
mov
scas
pop
inc
in
dec
xor
in
sub
dec
lret
cmp
pop
bound
or
lock
cmpsl
scas
pop
xor
test
lahf
push
popa
or
mov
ret
sub
sbb
lahf
xlat
lahf
push
xorb
inc
mov
test
sarb
cmpsb
test
int3
mov
loop
adc
inc
push
adc
mov
aad
sbb
xor
push
add
sahf
and
pop
pop
xchg
xchg
sbb
or
out
push
in
mov
push
pop
dec
cltd
cmp
or
mov
xor
dec
cmpsl
nop
mov
xchg
sbb
mov
cmp
fdivrl
shrl
mov
int3
movsl
cmp
push
push
sbb
jns
pop
movsb
inc
inc
xor
test
push
fdivrs
mov
je
inc
lahf
cmp
ss
aad
in
jl
xchg
xchg
adc
cmp
les
cs
leave
stos
call
scas
mov
mov
jno
pop
add
iret
and
sbb
pop
and
insb
cmovnp
lods
clc
sbb
into
lods
xchg
cmpsl
jmp
lret
xlat
decb
les
jmp
shlb
jno
push
jecxz
iret
adc
or
jmp
pop
add
cwtl
lods
sahf
hlt
jne
jecxz
fcomps
cmp
dec
ljmp
mov
stc
mov
cwtl
cwtl
frstor
leave
push
cltd
test
js
or
cmpsb
sub
xchg
fsubp
dec
sub
push
inc
sub
lahf
fwait
jns
sub
mov
test
fwait
push
xor
int
loope
jb
test
fxch
push
hlt
mov
sub
leave
mov
insl
mov
inc
or
push
mov
inc
lds
sub
lahf
inc
cs
jne
sub
cmp
xchg
cmpsb
sahf
ljmp
aam
sub
std
inc
subl
lcall
sub
jl
fcompl
jb
popf
movsb
mov
mov
dec
sbb
push
sub
xchg
add
in
pop
mov
cmpsl
xor
mov
fldcw
pop
sbb
imul
jnp
ret
movsb
out
pop
aam
loopne
fwait
or
sub
xor
jl
mov
jnp
pusha
stc
or
jno
xchg
mov
pop
and
dec
decl
sub
sub
pop
in
insb
es
cld
stos
fisubs
xor
cwtl
inc
mov
loop
outsb
jmp
xor
divb
pushf
mov
int3
fdivr
negb
dec
pushf
jne
and
push
pop
loop
sti
in
mov
push
pop
imull
sub
or
outsl
rclb
popa
shlb
pop
lret
xor
rclb
scas
lock
or
push
ret
mov
lcall
xchg
pop
push
mov
add
lods
cmp
pop
testb
sbb
jl
add
add
push
jo
paddsb
pop
push
dec
imul
ds
pop
or
in
stc
orl
mov
or
inc
fs
or
out
outsb
adc
pop
cmp
add
xchg
loope
cmp
push
mov
pop
lods
pop
mov
aaa
pop
and
iret
ret
adc
and
stc
push
lcall
cmp
and
xor
enter
sbb
jb
sahf
pop
dec
cmpsl
and
pop
jbe
jmp
imul
cld
xchg
jg
adc
sub
sub
mov
xchg
dec
pushf
jmp
mov
add
inc
sub
scas
fnstenv
divl
xchg
adc
sar
xchg
sub
inc
dec
scas
jne
mov
inc
out
and
adc
pop
or
jb
xchg
aam
xor
cli
enter
dec
and
mov
jmp
das
cmp
add
or
fbstp
pop
pushf
xchg
sbb
das
nop
rcll
lods
mov
sub
repz
xchg
mov
or
in
mov
in
xchg
aad
repnz
add
cmpsl
push
jne
jnp
dec
mov
push
cmp
sbb
dec
cmpsl
lahf
out
push
test
mov
pop
bound
sub
loope
test
cmc
movsl
pop
jp
test
lock
xchg
mov
adc
inc
add
fs
dec
lahf
dec
push
add
sti
jmp
dec
les
ret
fs
fcmovbe
cmc
pop
mov
mov
mov
jl
repnz
pushf
frstor
xchg
inc
jo
fistl
pop
lea
dec
mov
pop
outsb
cmp
jecxz
sbb
sbb
cwtl
ficompl
jbe
push
les
arpl
js
add
mov
repnz
shl
imul
sbb
inc
stos
mov
lcall
add
test
push
loop
lea
xchg
xor
aaa
pop
xor
sbb
and
loopne
and
lcall
bound
scas
dec
aam
leave
int3
add
push
int
in
sub
add
pusha
loope
pop
std
push
xchg
pop
mov
mov
ret
mov
push
out
out
mov
jmp
jb
and
mov
mov
fwait
bound
xor
sub
mov
mov
lret
fldcw
xchg
push
or
lods
sub
repz
dec
lock
ljmp
cmp
and
xlat
movsb
out
mov
jecxz
xchg
mov
hlt
mov
pop
push
xor
xor
shl
pushf
es
pop
mov
cmp
in
loopne
imul
orl
sahf
clc
popf
inc
mov
rolb
inc
xchg
mov
jb
lods
pop
sbb
xorb
jecxz
jnp
jecxz
hlt
movsl
mov
lods
cmp
insb
cltd
icebp
in
sarb
push
add
add
pushf
fnstsw
xchg
jecxz
loopne
cvtps2pi
out
pop
int3
dec
jecxz
mov
loopne
lea
push
adc
popf
sbb
mov
push
xchg
jnp
dec
lcall
cmp
call
xchg
xchg
jge
mov
adc
sti
mov
add
pop
cmc
mov
cmp
ja
pusha
and
shll
mov
test
fs
movsl
jne
jne
repz
jno
mov
sub
xchg
dec
cs
cmpsb
icebp
jne
dec
shlb
outsl
push
mov
inc
fwait
xor
ds
push
pop
pop
inc
sub
push
sbb
inc
pop
inc
xchg
mov
push
sarb
outsl
jbe
lds
jbe
lret
push
mov
pushf
xor
imul
les
rclb
xor
iret
rolb
andb
jb
cmc
adc
push
sbb
or
test
shlb
in
jg
loopne
enter
mov
aam
inc
fwait
mov
xor
or
loope
mov
cwtl
inc
fstps
and
adc
lds
or
inc
lret
repz
mov
insl
mov
cmpsb
aas
jnp
sub
stc
mov
mov
jg
jge
fldl
stos
pop
mulb
test
mov
mov
rorl
enter
into
mov
fildll
add
dec
adc
outsl
and
and
mov
mov
push
je
shlb
mov
cld
dec
cmpsl
idiv
add
lcall
xchg
testb
lret
and
and
out
flds
enter
popf
or
push
or
fisubrs
ss
out
add
or
jl
xchg
fwait
in
fdivr
push
inc
or
lcall
lods
lock
pop
hlt
aad
dec
mov
arpl
cwtl
mov
inc
dec
adc
imul
cwtl
add
ja
shrl
imul
pop
ffree
aad
jbe
sub
jno
decl
dec
ss
test
cmpl
cmc
iret
popf
jno
cmc
ret
jo
pop
pop
jo
jae
cmp
fistps
lea
ljmp
lret
stos
mov
sbb
sbb
xchg
jg
mov
aam
mov
repz
nop
ffree
push
cmc
or
adc
sub
adc
dec
cmp
sbb
cmp
or
or
mov
lods
xor
xor
adc
cli
adc
icebp
or
inc
data16
xor
stos
adc
and
cmp
repz
inc
mov
rcrl
jns
dec
cmpsb
aad
stc
and
movsb
push
cmp
and
mov
add
loope
pop
mov
fcoms
xor
mov
add
xor
mov
mov
xor
ficoms
test
xor
aam
icebp
insb
jmp
xor
jo
scas
push
lods
jge
push
mov
push
push
and
mov
jp
mov
push
out
gs
fisttpll
test
mov
das
insl
fldt
jle
enter
imul
iret
cmp
lods
xchg
or
in
xor
lret
pop
fs
mov
cmc
ds
jae
fs
mov
pop
lret
stos
jl
sbb
iret
stc
push
mov
dec
jp
xchg
xchg
mov
inc
mov
xchg
or
les
xor
pop
add
add
std
sbb
mov
shlb
mov
pusha
outsl
jmp
push
leave
pop
jne
mov
cmp
jae
scas
ret
sbb
xchg
aad
add
repnz
sbb
mov
mov
adc
mov
mov
aas
ss
pop
cmp
jp
add
push
outsl
lret
xor
out
push
push
cld
shll
fcmovb
out
pushf
push
pop
cwtl
loopne
adc
jno
int3
mov
ret
mov
cmpsb
and
sahf
sbb
data16
pop
jbe
and
jb
and
outsb
pop
cmpsl
cmp
fsubp
sar
cmp
es
cltd
jle
mov
mov
dec
adc
ss
add
mov
pop
in
mov
or
aad
push
mov
enterw
jmp
mov
lahf
and
int
or
popa
mov
xchg
sbb
mov
push
or
xor
out
jecxz
cs
inc
roll
outsl
jo
mov
rorl
sahf
inc
mov
and
fs
dec
out
mov
or
inc
inc
inc
mov
xor
or
xchg
hlt
cmpb
or
sub
sub
shrl
pop
out
lcall
cli
dec
inc
out
xchg
iret
xchg
ss
sub
push
pop
ljmp
pop
mov
inc
sub
mov
mov
xchg
arpl
inc
sbb
jnp
rcrl
aas
adc
push
stos
inc
pushf
pop
ljmp
jb
sbbl
sbb
cli
xor
inc
push
jno
sbb
in
test
stos
push
gs
fildl
fcomip
push
stc
cs
sub
and
xor
loop
jb
jns
lahf
ret
rcrb
imul
orps
adc
adc
mov
mov
jno
mov
push
dec
mov
insl
mov
jnp
js
sar
fucom
mov
and
ret
pop
inc
push
xlat
push
daa
mov
out
or
xor
jae
xchg
movsl
adc
add
test
test
aam
pop
mov
push
sar
dec
sub
pop
push
in
shl
jne
data16
push
ret
adc
faddl
add
xchg
icebp
jbe
icebp
mov
decl
and
sub
andl
jo
fs
cmp
popa
xchg
jge
push
imul
int3
loopne
lcall
test
les
or
adc
dec
and
mov
jle
insb
xchg
mov
xor
lahf
adc
shlb
shll
jmp
and
movsl
inc
mov
hlt
inc
stos
xorb
jno
addl
or
sub
gs
pop
stos
cmpsl
fildl
orl
pop
rep
push
pop
push
mov
push
orl
xchg
scas
mov
js
jmp
xchg
ds
scas
mov
and
inc
test
test
bswap
push
cwtl
mov
mov
fnstenv
xchg
aam
mov
jb
outsb
jno
pop
imul
pushf
sub
xchg
cli
and
lcall
inc
out
pop
fsubl
out
sbb
dec
out
jno
mov
divl
inc
push
push
or
jecxz
xchg
call
adc
in
daa
pop
cwtl
cmp
add
das
mov
jno
mov
sarb
ljmp
cmpsb
xor
in
fchs
sub
xor
sub
bound
xlat
insb
adc
dec
adc
cmp
ja
rcrb
jno
outsl
sahf
inc
xor
jns
out
xor
sub
mov
pcmpeqw
gs
mov
jp
push
icebp
mov
jp
fstps
adc
int
add
int3
out
mov
inc
fsubrl
mov
push
xlat
mov
xor
push
xchg
push
les
push
cmpsb
pop
lock
loopne
cmp
fstl
fdivs
test
sub
or
push
divl
jae
adc
test
stos
fbstp
mov
adc
and
leave
inc
adc
mov
mov
jmp
test
incl
ja
pop
mov
inc
leave
or
sub
jecxz
adc
xor
cmp
jecxz
pushf
das
and
pushf
je
int3
imul
mov
mov
cltd
sub
stc
push
and
inc
loopne
scas
cmp
scas
jae
arpl
hlt
negl
xor
fisttpll
ss
or
inc
out
xor
mov
xchg
sbb
ja
or
lret
push
xor
jg
imul
mov
push
add
movl
cmp
movsb
mov
pop
jb
loop
dec
std
jnp
push
mov
cmp
adc
lcall
leave
xor
pop
pop
dec
nop
fmuls
inc
push
or
mov
lock
repnz
lea
std
sub
cmp
mov
mov
nop
pop
sarb
divl
mov
movsl
sub
jns
push
aaa
mov
into
je
adc
jle
xchg
mov
sub
add
jne
cmp
sti
sub
fisubl
xchg
jmp
call
pop
jge
test
jns
adc
lahf
cmpsl
je
shll
testb
not
fisubrs
call
cmp
lods
jmp
cmpsl
jbe
push
or
clc
jge
sub
out
jbe
xchg
push
flds
in
pushf
dec
pop
add
sbb
jg
xor
mov
add
daa
mov
and
out
loopne
dec
imul
pop
outsb
xor
lds
test
cmp
ret
or
xchg
ret
dec
push
push
mov
sub
jl
xor
push
outsl
loope
mov
jno
push
push
js
orb
cmp
add
add
mov
popa
inc
fsubl
sub
call
test
fdiv
das
jns
shrl
pop
int3
shll
mov
lret
lods
fndisi(8087
out
lret
inc
mov
inc
adc
repnz
xchg
fistl
push
das
mov
add
sbb
repnz
mov
pop
xchg
add
and
push
sub
fwait
and
mov
cmpsb
xor
mov
add
mov
icebp
adc
or
jge
out
cmpsb
inc
pop
jecxz
fdivs
int3
loop
mov
in
movsb
push
mov
cli
cwtl
cmc
jl
insb
je
lahf
dec
dec
inc
cmp
bswap
jnp
inc
ficomps
aaa
push
mov
jle
adc
mov
idiv
sub
clc
mov
dec
xchg
out
mov
int
dec
sub
out
in
es
mov
inc
fmuls
int
sub
inc
test
in
jp
insb
jae
arpl
aaa
dec
or
cmpsl
bound
out
xchg
lods
sbbb
lret
fwait
add
mov
jl
clc
jl
xchg
inc
shr
mov
loop
lahf
test
test
push
cli
stc
mov
aas
fwait
sahf
adc
sbb
mov
sub
mov
fs
or
xor
inc
movsl
inc
or
adc
in
cmp
mov
fsubl
mov
mov
pop
mov
movsb
outsb
sbb
sbb
js
aad
sub
xor
incl
loop
lods
imul
inc
imul
jmp
fwait
push
ret
adc
and
or
ficompl
cli
xchg
push
aad
andb
inc
mov
js
cmpsl
push
jp
pushf
das
ja
iret
rorl
nop
in
and
lcall
icebp
in
add
add
dec
repnz
rcll
mov
cmpsl
out
mov
sub
jl
fldcw
lods
lret
and
fdivs
popa
fnstsw
jl
fildl
daa
add
pop
push
insb
mov
push
mov
jle
fistps
stc
cmc
sub
push
xor
pop
xchg
mov
movsb
mov
and
fstps
outsl
jb
mov
lea
fcomps
in
cwtl
push
mov
lds
xchg
repnz
fldcw
sub
outsl
fs
xor
inc
sub
jmp
cld
stc
cmp
dec
push
fdivl
jl
sbb
out
inc
or
xor
imul
xchg
pop
jno
xchg
dec
dec
loop
inc
sub
daa
testb
mov
cmp
push
jmp
rcll
add
jg
mov
inc
int
je
cmp
in
lcall
xorl
aas
mov
test
sub
add
pop
inc
out
mov
ffreep
pop
lahf
cmp
je
test
fs
icebp
and
dec
cwtl
add
push
jp
pop
jnp
call
dec
mov
aam
gs
ret
mov
pop
repnz
scas
cmp
fldl
int
sbb
jae,pn
sbbl
leave
insl
jmp
or
cld
add
adc
cmp
jne
mov
das
insl
xchg
mov
mov
movhps
push
call
repz
fidivl
dec
int
adc
out
scas
sub
mov
xorl
jecxz
push
or
outsl
es
or
out
shll
push
out
push
jne
xor
insl
insb
pop
mov
rorl
into
add
adc
sti
jl
sub
enter
adc
pop
hlt
imul
push
jge
das
loopne
popf
jb
loope
inc
imul
pop
pop
push
test
mov
dec
push
or
aaa
inc
fimull
xchg
xor
inc
stc
mov
jecxz
xchg
dec
mov
dec
sti
notb
fwait
or
jo
popf
and
jno
int3
jne
dec
orl
cltd
fildll
lods
fs
inc
pop
and
xchg
mov
ret
xchg
fwait
pop
imul
std
add
mov
ret
push
shlb
push
jmp
fcoms
jecxz
xchg
inc
sbb
inc
into
mov
cmc
sub
pop
add
xchg
jbe
mov
push
je,pt
dec
sub
pop
test
pop
dec
mov
mov
out
outsl
xchg
mov
mov
movsb
ret
jle
pop
sbb
xchg
add
mov
rolb
or
xor
fldenv
jbe
and
rorl
mov
and
stos
cmpsl
xchg
leave
cmpb
jmp
pop
xchg
or
or
jp
insl
dec
movsb
les
pop
mov
lahf
push
pop
ret
add
and
js
movb
add
cmp
push
mov
pop
mov
push
cmp
das
mov
fstpl
mov
add
adc
xchg
dec
mov
rcrl
or
shll
xchg
mov
or
adc
jne
mov
test
flds
or
xor
int
aas
pop
mov
xchg
dec
and
xorl
mov
lret
push
fnstsw
daa
stos
xchg
or
stc
ljmp
ja
mov
rcll
out
push
cmp
cmp
insb
sub
pop
or
lea
jbe
in
pushf
push
mov
sub
push
mov
pop
inc
adc
jg
mov
or
in
mov
mov
pop
out
pop
insb
xchg
test
loopne
xor
and
or
lret
ret
mov
lcall
mov
aaa
cltd
cwtl
adc
insl
jae
das
pushf
scas
out
aas
ja
sub
pop
sar
inc
pop
iret
arpl
aaa
into
test
and
jo
jb
jnp
stos
in
xor
int3
out
sti
aaa
int3
jecxz
leave
sbb
mov
cs
ss
cs
push
add
jnp
inc
or
leave
rcll
movsl
mov
dec
fs
outsl
ja
cld
lods
mov
pushf
xor
pushf
fistpl
cld
loopne
add
mov
mov
mov
sbb
fcoml
push
stos
inc
int3
lahf
arpl
inc
outsl
addr16
out
fwait
sub
or
xchg
sbb
mov
js
add
dec
or
fiaddl
enter
fsubrp
lock
icebp
loopne
rcrb
adc
fistpll
jp
dec
pop
dec
cltd
xor
fsubrs
jo
cmc
cli
push
mov
inc
mov
pop
ret
jne
mov
test
fmuls
lret
in
jo
es
dec
sahf
xchg
pop
dec
mov
lock
sbbl
push
adcb
sahf
scas
fcomps
mov
xor
jecxz
repnz
cmp
outsl
test
outsl
test
stos
outsb
fdivs
out
xchg
int
xorl
scas
repz
inc
jle
cmp
mov
inc
cmp
adc
cli
aaa
xor
cld
pop
xchg
in
lahf
xor
addr16
test
push
mov
outsl
rcl
stos
cmpsl
push
cmp
das
aaa
jb
push
shl
out
inc
push
or
xor
lret
mov
xchg
imul
adc
mov
xlat
add
mov
int3
or
aas
pop
xchg
inc
aas
cmp
lahf
sbb
and
movl
jg
mov
cmp
pusha
andb
fbstp
aam
xlat
mov
jp
stos
clc
pushf
int3
mov
xchg
in
push
imul
xchg
cmp
repz
pop
mov
pop
pushf
xchg
mov
and
test
adc
mov
mov
xor
and
push
add
adc
xchg
negl
shl
roll
add
fwait
push
xor
iret
frstor
lds
xlat
fidivrl
andb
xor
cmc
popa
fistpl
mov
mov
into
addb
or
xchg
xlat
loopne
jmp
int
clc
jge
mov
fs
mov
mov
push
add
cmpsb
sub
test
jne
fwait
mov
out
jns
dec
aam
leave
mov
adc
aas
mov
xor
xchg
in
xor
mov
out
push
rorb
jbe
push
scas
xchg
push
push
mov
and
push
pop
iret
cmp
push
mov
les
push
shr
icebp
adc
sub
push
int
jno
repnz
into
pop
in
dec
hlt
dec
and
andl
inc
mov
mov
imul
sbb
sbb
repnz
xchg
int
scas
mov
movsl
pop
movl
daa
fistps
cmpsl
push
in
rcrl
dec
xor
lods
pop
adc
and
leave
arpl
shlb
leave
lcall
pop
lret
daa
pop
fidivrs
mov
xchg
loop
add
dec
in
jmp
ja
jns
fcompl
jno
mov
or
rcll
dec
push
jbe
xchg
into
xchg
shr
roll
dec
mov
lods
cmc
sub
xchg
stc
mov
xchg
push
jbe
arpl
mov
fcmovne
xor
lds
push
loope
inc
sbb
pusha
shrl
stos
jecxz
ds
je
movl
subl
es
fdivrs
or
sbbb
rclb
mov
inc
mov
test
imul
xor
in
pop
mov
call
jle
push
jo
xchg
inc
fwait
xlat
enter
cmpsb
add
daa
cmp
xchg
sbb
mov
or
jge
push
pop
test
stc
xchg
repnz
push
sub
add
addr16
lcall
test
xlat
and
inc
or
xchg
lods
imul
test
andl
arpl
inc
push
sbb
iret
dec
das
enter
je
sub
lock
push
inc
and
add
pop
cs
adc
arpl
fsubrs
enter
pop
cmp
jnp
enter
push
jnp
sbb
jp
popf
daa
cmp
add
jmp
pop
sar
cmp
sbbb
mov
out
mov
cmc
dec
lods
je
fwait
cli
add
mov
in
dec
pop
lahf
xchg
leave
fstpt
push
sbb
and
lahf
mov
ljmp
and
xor
xchg
adc
cwtl
lahf
pop
or
mov
lods
inc
xor
fistpl
xor
mov
sbb
test
mov
pop
popf
push
pop
cmp
jp
in
push
adc
adc
lds
std
daa
aas
int3
adc
xchg
mov
gs
fnsave
into
movsb
lret
xor
jle
rcrb
lds
push
mov
sbb
xchg
lds
mov
sbb
aas
inc
repz
js
enter
rorl
js
jns
stc
imul
mov
xchg
lds
mov
jo
arpl
or
jmp
call
insl
mov
sbb
pop
xchg
out
xor
scas
inc
xlat
shrl
pop
aas
xor
pop
mov
mov
lods
icebp
mov
scas
add
cwtl
sub
pop
scas
dec
adc
insl
or
rcll
jo
cmc
inc
sahf
push
nop
xor
xchg
push
push
data16
cmpsl
or
add
test
inc
push
ret
xchg
cwtl
rcll
negb
testb
sub
test
add
add
call
iret
mov
je
outsl
dec
or
xchg
ljmp
sbb
pop
mov
aam
push
rcrl
sub
mov
outsl
sbb
xor
lods
cs
jae
insl
cmpl
faddl
pushf
jp
xchg
jecxz
adc
mov
fs
lahf
stc
das
adc
ljmp
mov
mov
fldl
sbb
sub
aam
mov
push
fisttps
inc
sub
pop
mov
or
imul
sbbl
push
pop
pushf
or
lahf
cld
sti
fwait
pop
in
adc
cmpsb
adcb
ficoml
test
mov
pop
cwtl
inc
jno
mov
fcmovb
ds
push
dec
jo
push
jo
push
inc
movsl
hlt
shrl
adc
das
cmp
lds
sub
and
jg,pn
push
in
stc
loop
jno
mov
and
adc
inc
mov
push
pop
pop
cli
out
test
nop
pop
out
decl
sub
cwtl
xor
sbb
fwait
pusha
bnd
add
out
sahf
ja,pn
sub
or
cmp
jmp
xor
inc
mov
nop
lods
sarl
or
push
jno
sbb
xor
inc
andl
cs
xchg
push
mov
roll
xchg
push
mov
xchg
mov
sbb
or
sahf
push
push
pop
test
and
or
push
shll
sbb
push
mov
mov
ja
lds
mov
aad
pop
orb
stos
out
loop
jge
mov
cltd
stc
jmp
lods
lea
scas
mov
pop
inc
popa
push
and
mov
pop
inc
xchg
pop
in
dec
pop
aad
push
aad
mov
push
inc
int
mov
xor
pop
pop
push
fdivrs
mov
sahf
pop
leave
mov
xchg
xor
loop
mov
dec
pop
mov
std
mov
orl
xlat
pop
call
jp
xchg
ja
pop
cmp
sub
inc
leave
pusha
xchg
adc
pop
xor
xchg
leave
or
lcall
icebp
xor
pop
mov
sub
dec
cmp
push
jmp
cmp
and
dec
movsb
cli
fidivs
testl
pop
cmpsb
cwtl
ss
not
mov
vmovmskps
xchg
cmp
pop
fstps
inc
sbb
daa
shrb
add
xor
mov
push
push
adc
je
mov
inc
push
mov
lahf
enter
mov
lcall
sti
nop
rcrl
add
mov
out
cmp
or
lret
or
and
mov
adc
cld
cs
dec
pop
test
shll
outsl
in
xchg
mov
sbb
fisttps
mov
call
negl
int3
or
xchg
fldt
out
insb
jmp
addb
xor
lcall
stc
dec
insl
jnp
addr16
push
ret
jns
insl
cmp
cwtl
fadds
push
repz
and
sub
js
out
test
sbb
sbb
outsl
jne
cli
dec
push
xor
test
push
or
cs
stc
push
pop
into
lods
dec
scas
mov
cmp
jge
call
adc
shl
shl
xlat
scas
lea
jge
ja
mov
insb
cmp
xchg
xchg
loopne
or
jg
test
mov
jae
or
fs
xchg
add
dec
imul
pop
or
lods
push
shll
inc
jle
mov
pop
jne
push
jb
xchg
xor
jae
jne
aas
cmp
insb
addr16
mov
sbbb
jno
test
mov
repz
hlt
add
outsb
data16
fidivrs
xor
rcr
push
stos
xchg
and
rcll
into
pushw
out
pop
bound
xor
adc
pop
sub
sub
dec
outsb
jns
cltd
dec
cld
xor
gs
jnp
in
aam
or
ds
loop
stc
mov
es
inc
mov
incb
das
add
rol
adc
enter
cmc
popa
ss
lea
sub
cmp
xchg
xchg
rclb
sahf
sub
add
dec
fstl
and
imul
push
lock
fsubs
dec
aam
ds
movsl
lahf
sub
hlt
outsl
add
inc
push
xor
cmp
movsl
mov
int3
xchg
in
int
scas
sbb
pop
push
in
outsl
loopne
ss
push
arpl
sub
cmp
es
xor
lods
add
inc
mov
cmp
mov
dec
pop
jne
fimull
push
inc
mov
daa
push
and
mov
fsubrs
repz
sub
aad
fsubr
inc
pop
in
inc
dec
adc
cwtl
add
mov
data16
es
mov
xchg
loope
add
sbbb
in
sbb
pop
cmpsb
pop
sub
mov
pop
movsl
jp
aad
mov
cmc
inc
add
or
insl
xchg
call
jb
bound
or
in
xchg
adc
xor
imul
lods
mov
sbb
mov
or
and
ljmp
sbb
push
or
outsb
pop
push
sub
and
aad
sub
cmp
in
pop
pop
scas
pushf
outsb
jecxz
or
test
push
imul
hlt
jge,pn
cld
stc
fildl
addr16
pop
sbb
pop
cmp
mov
xor
testb
jle
dec
in
dec
gs
out
pop
mov
movsb
stos
cwtl
ret
sti
lods
fisubrl
es
jbe
mov
mov
in
mov
dec
mov
arpl
je
adc
push
insl
xor
dec
stos
mov
jnp
jb
inc
add
adc
mov
mov
mov
cmp
and
cltd
icebp
js
push
cmp
cld
mov
mov
push
addr16
jnp
push
jnp
mov
fisubrs
fwait
into
inc
cmp
push
shll
dec
cld
test
sub
add
scas
lahf
shrl
out
push
daa
rolb
sbb
pusha
sub
jbe
mov
or
push
shll
cli
pop
cmp
stc
push
inc
dec
ljmp
or
pop
test
pop
dec
scas
scas
out
into
pop
popf
cmpb
adcb
mov
pop
inc
sti
jle
xor
ja
mov
or
icebp
scas
pushf
mov
xor
cmp
xchg
js
push
xor
mov
xlat
in
pop
pusha
or
aaa
loopne
push
xor
aas
fidivl
or
into
push
mov
mov
mov
pushf
out
dec
lea
push
jnp
sub
mov
stc
mov
jmp
inc
sbb
fimull
cs
stc
dec
cmp
jne
adc
in
adc
jmp
cmpsb
sbb
mov
sbb
xchg
fwait
lahf
in
jb
idivb
inc
or
mul
and
push
fldcw
mov
fsubrl
out
pop
insl
into
cmc
aad
sbb
data16
test
mov
nop
test
jp
cmp
jbe
cmc
fs
pop
lret
xor
pop
in
xchg
jmp
lock
jnp
xorl
adc
addb
dec
pop
mov
inc
sub
imul
pop
movsl
mov
mov
sahf
xchg
lret
pop
inc
in
adc
jg
sbb
cmp
imul
xchg
mov
test
xchg
popa
scas
lds
cli
aad
jns
xor
popa
gs
jb
ja
inc
xchg
adc
cld
pop
pop
inc
pop
imul
and
into
subl
scas
jp
je
xor
add
idivb
jl
pop
push
add
popf
lods
mov
loope
loopne
test
mov
jnp
mulb
add
fst
mov
dec
into
dec
mov
jg
add
and
aad
inc
add
in
xchg
adc
stc
sbb
rcrl
or
aad
mov
insl
sbb
sahf
repz
mov
xor
sub
or
fistpll
add
cli
inc
push
cmp
jle
and
cmp
or
pop
pusha
shl
les
lret
adc
xor
sbb
mov
jp
cmp
jecxz
sub
mov
nop
cld
into
rorb
lods
inc
sbb
xchg
pop
and
arpl
xchg
inc
sub
daa
scas
pop
loop
fs
inc
pop
push
in
or
call
aas
mov
jmp
or
mov
andl
pop
pop
in
xor
xor
mov
shlb
clc
and
jp
or
mov
test
and
pushf
imul
pop
mov
test
mov
pop
repz
inc
fs
sbb
sti
loop
dec
leave
xchg
clc
xchg
scas
shrl
shrb
int
bound
cmp
inc
lods
xchg
lds
mov
mov
jnp
xor
icebp
hlt
jnp
cmpb
mov
ret
xor
mov
fdivr
dec
imull
mov
jb
pop
incl
les
xor
cmp
out
pop
inc
insl
mov
shlb
pop
aas
cli
loopne
enter
inc
leave
sbb
lcall
and
fucomip
sub
stos
and
lret
into
test
cmp
push
addb
pop
sub
sub
dec
inc
mov
mov
subl
xor
sub
sbb
xchg
mov
mov
mov
pop
es
inc
ljmp
mov
jle
jnp
cld
pop
adc
in
mov
adc
mov
dec
out
sub
daa
mov
into
imul
cmp
subb
dec
jno
pop
jb
push
movsb
frstor
sub
mov
jecxz
test
out
out
repz
and
negb
negl
jge
nop
mov
xor
ret
push
testl
xchg
and
pop
inc
mov
scas
dec
mov
in
ss
cmpsl
insb
dec
sbb
and
iret
fmul
out
sub
mov
scas
mov
pop
mov
aas
ja
adc
inc
testb
push
cld
repnz
lods
dec
dec
xor
lods
lret
xchg
nop
or
xor
shlb
dec
mov
mov
cli
xchg
or
leave
jns
lret
ljmp
je
or
dec
aad
mov
push
in
pop
xlat
in
mov
loope
stos
hlt
das
popa
mov
rolb
int
adc
xchg
or
loope
push
testb
mov
mov
icebp
fsub
test
fwait
stos
cmc
push
mov
xchg
cmp
ja
jle
sub
xor
jbe
scas
out
outsl
add
cld
int
mov
orb
roll
or
gs
das
mov
cmp
jge
sti
push
xchg
and
mov
testl
fcomps
addb
in
inc
call
dec
pop
lret
mov
aaa
mov
test
jle
jns
pop
scas
arpl
cwtl
test
mull
je
repz
outsl
rorb
add
cmpsl
sahf
jnp
bound
mov
je
and
enter
out
aad
push
jge
adc
jg
mov
mov
dec
je
or
push
or
aam
cwtl
inc
jecxz
les
and
xchg
inc
pop
add
xchg
or
xor
rcrb
dec
lcall
jo
cmp
xchg
mov
into
add
inc
sub
inc
cmpsb
rep
mov
or
pop
or
mov
push
les
dec
sub
popa
shrb
xor
ss
dec
push
jbe
ret
lock
or
repz
pop
adc
rclb
push
mov
outsb
pop
aaa
inc
push
jno
sbb
push
out
aas
dec
sub
out
add
icebp
mov
call
mov
cmp
das
sahf
pushf
out
das
les
call
sbb
out
cmp
push
paddsb
in
cmpsl
cmp
inc
imul
lock
bndldx
iret
cwtl
pop
repz
mov
or
dec
push
push
mov
mov
or
mov
sub
xlat
xchg
ficomps
lret
cmp
stc
dec
add
stos
sarb
mov
fstps
test
add
mov
shlb
pop
cmp
add
xor
testl
mov
mov
ja
fidivrl
jbe
gs
xchg
adc
or
cwtl
mov
xor
movsl
and
movsl
push
pop
add
loopne
cmp
mov
repz
mov
imul
adc
bound
mov
cmp
mov
mov
pop
cmp
jb
mov
enter
xor
and
add
test
mov
xchg
mov
dec
lds
imul
lret
sub
xor
scas
pop
mov
mov
xchg
inc
gs
and
add
outsl
xorl
sub
into
jne
sbb
mov
xchg
add
and
and
imul
xchg
xchg
repnz
in
push
sbb
mov
pop
mov
push
test
es
rol
or
sub
int
and
int3
sbb
jge
mov
iret
shll
adc
mov
adc
lret
mov
imul
rorb
xchg
lock
dec
in
adc
and
mov
xchg
std
lret
jnp
jg
xor
sub
ror
mov
xchg
in
outsb
push
sbb
dec
mov
push
enter
sbb
push
loope
xchg
add
xchg
sub
fldt
cwtl
pop
pop
das
dec
xchg
mov
mov
pop
out
mov
cmp
lahf
xchg
mov
sub
js
lcall
out
mov
leave
dec
cmp
jno
out
jle
dec
arpl
sub
inc
dec
mov
or
inc
ficompl
and
push
mov
lret
sub
jns
dec
stc
or
or
scas
aad
dec
add
aaa
push
movsl
sbb
adc
mov
xor
imul
jns
sbb
mov
jp
fnsave
mov
xchg
or
sub
jns
dec
sbb
popf
fistps
sub
fcoml
sbb
out
data16
xor
sub
pop
jnp
dec
dec
or
lret
pop
cmp
popf
or
mov
mov
push
repnz
mov
jae
sbb
add
pop
jmp
cmp
mov
dec
or
es
flds
cwtl
jg
sub
pop
movsl
sub
fnsave
mov
cmpsb
push
mov
ds
aas
outsb
adc
dec
dec
lcall
pop
mov
mov
pop
call
outsl
mov
xor
sub
imul
popa
xlat
sbb
adc
mov
inc
pushf
bound
cmp
xor
lahf
xor
lret
cmp
ret
imull
jl
pop
jnp
xchg
movsb
push
in
and
jo
dec
mov
mov
aas
negl
stos
js
inc
sub
and
fsubrl
popa
pop
dec
xchg
mov
sbb
es
in
rorl
mov
lahf
cmp
xchg
sub
dec
mov
dec
mov
xor
shll
out
jo
shrl
xchg
js
sti
jmp
sbb
shrl
jo
push
out
aas
mov
add
cwtl
fiaddl
sub
cmp
lcall
dec
push
xor
fcoml
mov
inc
inc
mov
data16
push
faddl
sbb
lahf
scas
iret
dec
div
jl
add
mov
adc
add
mov
jecxz
cmp
xchg
push
xchg
rorb
loopne
enter
iret
test
jae
insl
jmp
jg
js
jmp
xor
gs
jl
adc
cltd
fsubl
arpl
sub
je
js
popa
dec
lret
sub
andl
and
mov
add
push
mov
sbb
xchg
push
inc
inc
pop
int
leave
jno
mov
int
repnz
in
ret
push
adc
data16
xlat
int3
xor
sbb
adc
in
movsb
cmp
enter
iret
outsl
mov
fwait
out
cmpsl
sub
adc
inc
push
call
hlt
mov
out
int3
fbstp
sti
dec
outsb
xor
mov
outsl
mov
cmp
icebp
or
mov
lock
dec
mov
aad
mov
insb
iret
dec
hlt
mov
mov
sti
sbb
shl
lcall
mov
nop
test
stos
xchg
add
lahf
xchg
ds
pop
and
add
loope
xor
cs
sub
push
mov
rolb
xchg
add
sub
mov
sbb
movsb
adc
mov
mov
xchg
sbb
pop
pushf
pusha
out
pop
add
mov
int
stc
push
leave
xor
adc
xchg
inc
xchg
addr16
clc
or
or
imul
fidivrl
mov
xorl
js
insl
scas
cmc
push
sbb
adc
ljmp
push
sub
cmpb
insb
movsb
je
hlt
pop
sbb
jbe
jl
push
mov
outsb
bound
mov
gs
xchg
adc
inc
loope
cwtl
ds
and
xchg
shr
test
xchg
clc
and
shrb
adc
push
sub
sub
arpl
mov
icebp
loopne
sub
xchg
pop
or
mov
xchg
test
dec
dec
hlt
push
add
adc
jnp
idiv
adc
mov
lahf
jne
hlt
fisubrl
add
mov
das
out
das
dec
add
lods
lods
pop
aad
sar
sbb
or
sbb
mov
repz
pushf
xor
adc
iret
out
out
test
jecxz
loop
mov
shl
btr
rorl
xor
jno
insb
out
cmpsl
sti
cmp
sbb
ror
add
dec
lea
xchg
and
xor
sbb
pusha
pop
mov
xor
fldl
or
add
sbb
rcl
and
xor
orb
cwtl
test
sub
shl
pop
mov
testb
add
sbb
and
test
or
stos
subb
add
xor
pop
in
pop
mov
cmpsl
lds
xchg
mov
insb
adc
jmp
pop
scas
ret
add
imul
xor
mov
stos
mov
es
adc
and
cmp
pop
mov
leave
lock
cmp
test
pop
inc
xor
out
jg
ret
jnp
and
dec
sti
fcomps
xor
adc
push
fisubl
sub
cmc
mov
out
or
imul
je
out
fsubs
sub
call
mov
aad
movsl
jge
xor
cmpsb
xchg
cld
out
mov
les
inc
xchg
arpl
mov
jns
adc
jno
xor
xor
cmpb
std
in
sti
jbe
scas
out
mov
js
sub
xchg
psraw
lea
add
popf
lods
int3
addr16
shll
inc
and
shlb
aas
outsl
xor
pop
adc
jnp
hlt
mov
or
mov
jbe
mov
inc
mov
test
pop
mov
aam
push
inc
sti
inc
loope
mov
pop
inc
mov
cmp
pop
pop
std
ss
add
push
scas
lcall
jo
movsl
pop
xor
movsb
fcoms
arpl
sbb
jge
mov
mov
rcll
out
cld
into
mov
popa
mov
stos
shrl
sub
popa
fnstcw
aas
pop
pop
std
imulb
arpl
sarl
mov
dec
enter
push
cmp
imul
or
sbb
adc
int
push
pop
imul
enter
call
ja
sbb
popf
sub
or
rorl
and
imul
iret
sarb
pop
lea
jp
addl
cmp
leave
push
pop
inc
shlb
xor
dec
fistl
adc
dec
popaw
jns
pop
inc
decb
mov
xchg
pop
pop
cs
adc
fstpt
hlt
push
push
outsl
dec
or
sub
xchg
jl
xchg
sub
stos
lea
mov
and
cmc
mov
push
and
shlb
lock
jb
iret
mov
test
add
sbb
lret
xor
repnz
xchg
xor
aam
or
push
iret
cld
dec
lock
sar
cmp
jg
fnstsw
ja
mov
test
pop
jle
scas
push
inc
jl
pop
ret
cmp
xor
jb
lock
inc
push
push
sbb
fidivl
add
loop
loope
int3
std
pusha
stc
pop
bnd
stos
mov
xor
cmp
push
jecxz
mov
sarl
ret
push
sqrtps
daa
mov
imul
dec
incb
out
jle
jbe
adc
dec
mov
mov
cmc
repnz
inc
cmp
mov
int
in
dec
pop
jb
jmp
push
xchg
out
stc
loope
scas
and
sti
bound
push
jg
mov
pusha
xchg
rclb
mov
mov
jecxz
sub
sbb
pop
lret
xchg
orb
les
sbb
and
sbb
jb
adc
mov
mov
add
inc
fcoms
mov
addr16
mov
pop
lea
pop
push
jns
incb
jb
push
or
mov
aaa
rcll
out
mov
sub
dec
mov
sar
jns
dec
or
imul
repz
sub
int
lock
in
outsl
mov
jno
cmp
mov
sbb
sbb
inc
or
add
jns
jle
and
inc
test
mov
and
sbb
sub
jb
pop
sub
inc
xor
out
inc
pushf
and
shrl
pop
pop
enter
andl
lock
pop
sub
inc
idivb
fwait
pop
fistpl
pushf
mov
mov
sub
push
sub
outsb
and
jl
push
mov
in
mov
testl
lret
push
jo
das
out
mov
fcmovnu
movsl
loope
pop
add
xchg
inc
movsl
aaa
or
mov
fsubl
pop
loopne
or
mov
rorb
add
arpl
jl
mov
push
dec
mov
mov
aas
enter
mov
cmpsb
xchg
mov
mov
pop
fildl
ljmp
push
cmp
jno
inc
cmp
sub
orl
loop
inc
xchg
xchg
in
cmp
call
in
sti
lahf
jb
in
aas
inc
jp
mov
xor
orl
add
or
add
dec
cli
test
fs
ret
adc
scas
push
imul
add
pop
cmpsb
xchg
xchg
test
shll
fdivl
popf
cmp
dec
fisttpl
fidivrs
idivb
fdivrs
adc
dec
cwtl
lds
and
into
das
bound
int
mov
sbb
mov
mov
adc
mov
mov
int
aam
add
jmp
or
pop
into
or
stc
into
je
push
mov
mov
or
lcall
adc
dec
xor
fsubrs
sub
xchg
lock
jbe
jnp
enter
adcb
cmp
shll
and
push
sti
int
lods
dec
std
stos
test
mov
fldl2e
jno
fs
mov
fildll
xchg
fnstsw
xchg
mov
imul
pop
mov
in
imul
pop
das
lds
pop
sub
cli
fcoml
mov
stos
daa
push
pop
or
das
les
jg
jno
mov
sbb
lahf
xlat
in
jecxz
shlb
lret
sub
sub
loop
bound
call
fsubrs
cmc
inc
ja
in
bnd
xchg
cld
sti
fldz
fcos
xchg
andb
pop
sbb
pop
inc
ret
aad
push
inc
inc
neg
enter
and
lcall
fwait
inc
add
aad
cltd
pop
scas
mov
clc
or
stc
aaa
cmp
fnstsw
nop
jb
and
cmp
lods
daa
popf
xchg
dec
mov
adc
fildll
or
push
popf
cmp
addb
xchg
sub
jmp
js
fs
sbb
sbb
cltd
mov
push
jle
xchg
bound
cmp
lahf
popa
insb
fdivrl
stos
push
rol
pop
jns
enter
stos
test
jbe
lds
call
iret
or
sub
jbe
sub
xor
in
add
mov
lahf
adc
test
stc
add
dec
inc
or
inc
adc
push
pushf
cmp
outsb
stc
sbb
testb
vpaddb
cmp
sbb
fucomp
mov
pop
fimuls
add
push
stc
push
in
out
inc
fmuls
xchg
fiadds
push
cli
push
ss
xor
mov
add
fdivrl
adc
popf
and
sub
mov
mov
or
push
icebp
popf
jl
mov
push
jo
cmp
cmpsb
mov
sub
std
lahf
insb
int
xchg
std
cmp
jne
cmp
push
cmc
daa
data16
in
outsb
imul
fsubr
bound
pop
sbb
repz
aam
mov
data16
arpl
imul
add
outsl
or
add
sbb
and
testb
movsl
mov
sahf
fisubrl
or
jmp
scas
pop
pop
shlb
and
stos
cmp
or
fs
push
and
fs
mov
adc
fists
or
push
push
scas
push
mov
sub
pushf
or
mov
pop
sti
inc
imul
movsl
fisttpll
mov
popf
pop
cmp
fldenv
addl
adc
ds
and
jmp
cmp
inc
cmp
dec
push
outsb
and
mov
pop
lret
scas
jecxz
in
fs
mov
andb
pop
ljmp
ja
lahf
sti
push
insl
push
aaa
lods
scas
or
or
add
lds
add
pop
scas
loop
xchg
insl
mov
shlb
insb
mov
std
dec
jle
popf
mov
cmp
add
sbb
cli
ret
popa
jno
jbe
jne
mov
fistpll
je
aam
sub
cmp
xchg
lret
icebp
xchg
mov
push
push
stc
lock
or
sar
idiv
jno
outsl
and
xor
lea
mov
fwait
popa
push
mov
mov
pop
adc
dec
push
insl
pop
mov
adc
fcmovnu
lds
ljmp
cmp
or
xor
test
xlat
lcall
cli
pop
test
mov
sub
bound
inc
xchg
mov
adc
mov
gs
cmp
aam
xor
sbb
test
popf
push
out
adc
int
mov
add
rorb
loope
ja
sub
mov
pop
scas
jnp
sub
sahf
sub
js
and
inc
punpcklbw
les
mov
lret
inc
xchg
inc
in
and
test
cltd
inc
mov
add
and
inc
mov
jne
xchg
aas
les
mov
jb
jge
cmpsl
out
test
ffree
in
stos
dec
das
dec
xlat
sbb
mov
loopne
or
mov
mov
pop
mov
push
andl
and
jmp
inc
popa
pop
push
enter
hlt
or
cmc
sahf
add
stos
outsl
mov
icebp
call
aas
mov
shr
dec
pop
jp
lock
fwait
lcall
mov
fadds
lea
repz
push
cmpsb
in
ja
jg
add
cs
popa
xor
mov
push
jno
jle
lods
sbb
push
iret
push
adc
xor
mov
adc
negl
cmp
jl
sbb
sub
add
in
lods
test
cmc
or
or
xchg
stc
outsb
mov
xor
lahf
add
rolb
lods
mov
push
sub
sub
mov
inc
outsb
mov
inc
imul
mov
xor
adc
and
mov
cmpsb
insl
push
lahf
sbb
cs
push
stos
lret
out
cmp
xchg
data16
test
fmul
mov
ljmp
inc
rorl
xlat
mov
out
fiaddl
xlat
xchg
pop
inc
mov
jp
push
test
inc
cmpsb
dec
inc
pop
jno
mov
enter
movsb
rorl
int
subl
mov
shll
gs
dec
add
out
shll
cli
aad
mov
mov
sub
movsl
xchg
push
push
xorb
adc
inc
div
and
mov
aam
movsl
inc
rcrl
test
pop
shlb
mov
and
mov
lock
sti
dec
adc
imul
sub
or
pop
stc
lods
out
sub
sub
out
lods
cmp
test
xor
mov
in
push
sbb
fsubr
cmp
pop
and
adcb
xchg
cwtl
repz
adc
divl
xchg
out
xor
fimuls
adc
test
dec
xor
arpl
js
dec
xchg
mov
or
es
jmp
inc
test
pop
jecxz
cmp
push
jne
push
or
sub
cli
ljmp
test
sub
sbb
dec
xchg
fwait
add
loope
loope
cmp
mov
xlat
cmp
mov
popa
dec
mov
lcall
pop
xor
stos
sahf
pop
push
push
pop
pop
test
push
pop
movsb
mov
xor
and
bound
mov
inc
pop
mov
sbb
mov
test
and
in
clc
aad
aam
js
sbb
mov
das
les
pushl
inc
daa
xor
test
xchg
aad
jmp
loopne
mov
test
and
scas
add
pop
push
stos
movsl
fwait
js
in
ficoms
divl
push
dec
imul
pop
pop
ljmp
movntq
cmpsb
mov
jb
inc
mov
dec
jno
or
scas
mov
pushf
pusha
aam
mov
sarl
imul
loopne
fldenv
out
cmp
push
sub
aas
daa
xor
test
leave
cltd
mov
clc
jp
subb
pop
not
aas
cmp
push
adc
test
jo
add
sub
jecxz
sarb
adc
mov
mov
fs
pop
bound
mov
aas
in
cltd
movsb
rol
aaa
add
mov
and
cmp
call
outsl
jbe
jo
aam
jmp
in
imul
test
mov
nop
mov
dec
mov
cmp
sti
inc
outsb
jne
jb
shll
adcl
ret
pusha
js
imul
int
and
int3
mov
xchg
mov
inc
pop
je
sub
ds
jae
and
insl
mov
sub
test
sbb
push
fnstcw
pop
sub
test
popa
shl
cs
mov
in
jmp
imul
daa
in
hlt
arpl
sbb
and
nop
ss
or
jo
daa
inc
dec
sbb
xor
imul
pop
lret
and
lret
pop
inc
aas
movsl
cltd
mov
and
sbb
push
pop
movsb
push
fdivrs
bound
push
sub
sub
adcl
stos
xchg
cmp
push
shl
xor
pusha
jb
insb
pop
aaa
lea
negl
push
subb
ja
jns
popa
cld
push
pop
dec
mov
imul
popf
adc
sub
and
xor
mov
mov
in
fdivrs
mov
lahf
push
int
pop
pop
inc
iret
sub
sbb
adcb
push
pop
in
cmpsl
mov
dec
push
fstpt
fwait
in
imul
mov
mov
push
scas
jge
icebp
jp
adc
ljmp
inc
adc
cmp
sahf
les
inc
icebp
adc
mov
adc
movsb
mov
lds
mov
sti
cli
inc
mov
ds
leave
jmp
adc
mov
mov
cpuid
mov
pop
aas
out
lcall
mov
cmp
and
int3
lea
aam
stos
dec
cmpsb
out
and
ja
stos
sbb
cwtl
xor
inc
std
stos
xchg
push
adc
lods
cltd
ror
and
nop
inc
sub
lods
push
mov
subl
movb
push
cmp
xchg
aas
and
outsb
stos
pop
dec
xchg
mov
mov
pop
loop
sbbb
shrb
push
sub
scas
mov
lods
pop
sbb
pop
xorb
mov
cmp
rorl
sar
mov
enter
adc
push
fldl
mov
mov
aad
adc
ja
jno
loope
loop
sahf
add
dec
stc
mov
pop
cmp
mulb
jl
xchg
enter
aad
repz
xlat
sti
lret
aaa
sub
adc
call
mov
sbb
xor
mov
push
out
inc
in
jmp
lods
fiaddl
pushf
rorl
lds
cli
mov
push
jp
lock
lods
je
sub
pop
jecxz
xchg
ret
and
in
dec
mov
hlt
std
shlb
test
shlb
cmc
stc
jl
add
lahf
out
orl
inc
mov
test
aas
and
test
sbb
out
in
cltd
aam
out
jl
aaa
inc
lcall
pop
adc
and
das
or
faddl
inc
jge
inc
and
scas
push
lods
cwtl
mov
xchg
cld
addr16
mov
cmp
movsb
scas
jb
mov
cmp
int3
movsl
jl
dec
cltd
or
jg
jnp
inc
jo
and
or
js
mov
push
stos
mov
cmpsl
in
add
push
mov
enter
xchg
cmc
adc
repz
sub
mov
adc
and
test
aam
loopne
insb
xchg
les
dec
mov
adc
in
movsl
xlat
ficoms
imul
cmpsl
aad
sbb
jns
cmp
lret
mov
push
andl
into
push
cmp
mov
jle
fimull
mov
adc
inc
stc
inc
mov
ds
dec
dec
out
mov
dec
bound
sub
sti
dec
pop
pop
xchg
data16
cmp
add
int3
movsb
jns
js
jo
jge
rorb
xchg
arpl
loope
xchg
jmp
outsb
shlb
mov
cltd
insl
mov
mov
xor
add
ret
lret
sub
dec
inc
cmp
or
out
push
add
mov
cmp
lods
es
sub
mov
pop
mov
aam
fbstp
mov
movsl
cli
data16
mov
ffree
jb
mov
and
jecxz
push
and
and
movsl
imul
lea
push
std
and
std
in
mov
fcmovb
call
dec
decl
sti
insl
xor
int3
rcr
sbb
or
ud0
sbb
sbb
push
icebp
mull
sub
sub
cmp
inc
mov
push
inc
inc
movb
pop
aas
or
lahf
mov
aas
imul
dec
js
xchg
jns
shl
dec
sbb
xchg
or
fcmovnbe
xlat
repnz
mov
pop
dec
lret
xchg
ffreep
mov
sbb
sub
je
push
movsl
add
mov
faddl
orl
adc
push
inc
or
xchg
in
or
sti
sbb
pop
jmp
or
call
lock
pop
adc
xor
dec
outsb
mov
cmpsl
negb
xchg
mov
add
mov
sbb
pushf
pop
lods
jg
pop
jo
mov
repz
repz
loop
aas
sbb
ficoms
dec
cmp
sub
int
sub
out
bound
mov
push
roll
push
sbb
fs
into
movsb
movsb
es
pop
lahf
or
xchg
inc
dec
fwait
adc
scas
cmpsl
add
fadds
inc
or
ret
sub
mov
mov
dec
dec
xor
repnz
fnsave
adc
ret
pop
movsb
cwtl
push
not
frstor
addl
lahf
inc
sbbl
pop
into
mov
shll
push
mov
lcall
adc
test
add
movsb
and
cmc
push
pop
aas
xchg
pop
imul
leave
incl
sub
mov
iret
xchg
cmpl
test
sbb
ljmp
aad
js
pop
insb
add
ss
jecxz
push
sarl
cmp
test
stos
adc
pop
shl
add
out
and
lods
jmp
pop
decb
lds
xchg
push
into
aam
dec
cltd
lahf
dec
aam
dec
mov
loop
sbb
aaa
sti
sar
push
mov
dec
ret
jbe
popa
mov
cmp
xor
negl
hlt
les
mov
out
mov
sbb
add
bound
pusha
pushf
pop
cmpl
aad
imul
xlat
sub
pusha
aaa
or
jno
in
in
test
sub
dec
xchg
push
stc
fidivrl
mov
out
iret
in
ret
imul
xchg
nop
repnz
mov
int3
fldcw
scas
nop
xchg
das
dec
jno
cmpb
out
mov
in
cwtl
pop
jb
add
and
xor
inc
and
out
pushf
sub
and
lods
pop
pop
rorl
inc
sbb
data16
pop
mov
mov
data16
fwait
popf
adc
movsb
jp
test
inc
test
xchg
fistpl
std
xchg
or
test
rcll
dec
ja
idivl
je
mov
push
mov
ret
sub
pushf
cmp
dec
xchg
lret
test
fstpl
int3
mov
inc
and
dec
adc
jle
jnp
xchg
dec
lods
scas
dec
outsb
mov
mov
mov
fs
pop
repnz
inc
push
lcall
dec
les
xchg
mov
cmpsb
push
add
mov
jecxz
aam
ret
push
xor
pop
dec
inc
cmp
cmc
xchg
loope
jmp
adc
pop
dec
in
cli
jmp
data16
xor
addl
jno
lret
lea
fsubrl
adc
xchg
ds
jnp
ficomps
push
xor
fs
das
xchg
lcall
jl
fidivrl
xchg
dec
insl
andl
je
push
lods
aad
pop
adc
addl
lods
xor
mov
es
out
stos
enter
leave
inc
push
mov
cmp
xor
cmp
xor
out
dec
xchg
or
sub
sar
xchg
push
les
dec
fistpll
push
jb
push
movsl
enter
xchg
fcmove
push
les
pop
movl
movsl
je
mov
shrd
xor
push
mov
pop
or
ret
jno
sub
adc
fs
mov
lods
lea
mov
sarb
ja
mov
addr16
scas
xor
mov
cmp
xor
test
jl
aas
ret
or
cmp
pop
rcl
pushf
and
jecxz
pop
imul
loop
add
jge
lret
lret
inc
jp
mov
test
inc
in
xchg
loope
ss
scas
and
xchg
das
pop
xor
inc
xlat
adc
hlt
dec
push
mov
mov
cld
repz
pushf
lods
hlt
fcompl
rorb
repz
jne
push
mov
push
add
and
ja
mov
sbb
stos
clc
and
ftst
insb
or
mov
mov
test
pop
jle,pn
xchg
sbb
repz
mov
jmp
mov
lock
jnp
jge
sbb
shll
fcompl
xor
pusha
mov
int
push
and
push
sbb
xchg
push
mov
in
cmp
inc
mov
mov
pop
js
inc
pop
xorps
and
push
popf
adc
mov
rorl
inc
aas
sbb
mov
jecxz
xchg
addr16
dec
stos
sub
jnp
in
cmpsb
dec
insl
loopne
les
pop
sbb
mov
stos
test
ss
divl
ret
jge
loop
jge
xor
in
cmpsb
jp
ret
cmp
test
repz
sbb
shrb
enter
stos
dec
inc
inc
fdivl
fwait
sbb
cmpsl
lahf
xlat
xor
int
lods
je
or
jno
xchg
movsl
xor
pop
es
mov
sbb
push
mov
pop
rcrl
aaa
pop
ljmp
fisttpl
cmp
test
enter
shll
sub
jl
addl
push
icebp
add
popf
pop
fwait
ret
mov
lahf
mov
cmpsb
jbe
outsl
or
xchg
sbb
jns,pn
push
adc
in
idiv
push
int3
jle
leave
int
sub
ret
test
sub
icebp
fs
xchg
cmp
cmp
mov
sbb
bound
cmp
add
jmp
add
subb
sbb
es
mov
push
sbb
and
int
aad
add
mov
jp
shll
adc
addl
inc
lret
popf
out
or
test
js
ret
xchg
loopne
pushw
adc
notl
scas
jb
ficomps
cltd
lock
add
add
mov
push
cmpsb
imul
pop
out
lds
mov
mov
mov
scas
sub
push
fwait
js
repz
sbb
fidivrl
jne
bound
cmp
js
shr
pop
ja
jmp
dec
add
xchg
scas
pop
pop
clc
jmp
sar
pushl
add
call
add
xor
jbe
lock
cmp
call
add
gs
and
cmp
sub
fbld
pop
mov
out
incb
aas
mov
or
icebp
and
aas
popf
inc
jns
aad
sub
xor
xchg
dec
in
and
stc
cmc
out
xor
cmp
int
stos
aad
cld
sbb
hlt
aad
jecxz
jnp
cmp
or
jmp
sbb
outsl
xor
mov
and
mov
movsl
insl
stos
jecxz
daa
pop
sti
daa
cmpsb
mov
sub
push
sbb
sbb
jne
xchg
mov
sub
into
bound
std
mov
fistps
out
xchg
mov
icebp
pop
cltd
lahf
add
sbb
ret
mov
cmp
negl
mov
aas
jb
popf
int3
mov
cs
in
mov
out
insl
pusha
xchg
mov
adc
push
mov
cmp
in
cmp
pop
dec
fists
push
xchg
xor
mov
sbb
std
lock
call
add
cwtl
jo
mov
fs
sub
lahf
pop
inc
lret
call
dec
bound
pop
movsl
in
mov
mov
mov
test
addr16
andnps
insb
ja
repnz
xor
or
push
and
aas
fisubl
arpl
mov
push
clc
push
sub
nop
jb
leave
das
cmp
adc
iret
aam
push
cs
jno
mov
dec
jo
scas
add
lahf
enter
mov
clc
add
je
arpl
pushf
lret
sbb
fwait
je
pop
add
push
push
dec
inc
ret
push
hlt
in
push
xchg
scas
in
pop
and
mov
imul
mov
bound
out
xorl
rolb
mov
je
sbbl
into
cmp
mov
sbb
ret
inc
fnstsw
outsl
test
inc
jns
gs
lahf
xor
mov
icebp
pop
and
cmp
mov
xchg
fcomps
jge
jmp
cmpsl
mov
mov
inc
jp
int
push
jl
out
popf
sti
cmp
sbb
inc
daa
adc
xor
mov
xlat
shlb
fs
fsubrs
es
jecxz
mov
jp
xchg
bound
je
sub
push
sbb
jb
outsl
mov
stc
outsb
sub
xchg
sbb
sub
iret
mov
adc
cld
mov
mov
decb
push
cmp
lds
mov
in
rcrl
gs
push
inc
cmp
lods
mov
bound
cmp
iret
insb
repnz
icebp
or
sarb
shl
mov
xchg
into
fsubr
fs
mov
mov
cs
jmp
cmp
div
stos
pop
loopne
pushf
inc
adc
pusha
dec
mov
fdivrl
jl
sub
lahf
mov
adc
in
cmpsb
out
daa
daa
jecxz
push
jl
les
lock
rorb
xlat
push
lahf
cmp
adcb
and
mov
inc
hlt
das
fwait
mov
lcall
jb
inc
jg
xchg
imul
dec
xor
pop
pop
xchg
mov
orl
adc
cmp
xor
pop
jno
push
add
inc
sub
hlt
mov
sub
and
xchg
loopne
mov
sbb
mov
in
fidivrl
mov
push
ss
arpl
pop
popa
test
outsb
popa
fsubrl
fs
lods
iret
cmpsl
adc
pop
nop
cmp
push
arpl
xchg
xchg
mov
rorb
inc
leave
xchg
ss
movsl
icebp
add
pop
idivb
adc
push
fists
out
inc
cli
in
xchg
gs
sbb
mov
and
mov
xlat
sbb
out
xlat
inc
in
in
orb
inc
xor
mov
shll
out
out
mov
in
lret
negb
test
cmc
mov
sarl
pop
ret
adc
dec
in
add
mov
mov
iret
pop
mov
fimuls
or
xor
or
iret
movsb
mov
inc
data16
loope
iret
mov
fwait
mov
xchg
mov
scas
sub
inc
test
mov
and
pop
push
pop
lock
jnp
adc
add
sarl
dec
xchg
data16
fistl
lods
test
daa
sub
mov
push
sbb
jge
in
jo
mov
or
push
daa
or
scas
push
out
push
sub
aas
xchg
mov
outsl
stos
pop
arpl
or
or
push
jno
je
loop
dec
push
cltd
push
mov
jl
loopne
adc
iret
xchg
or
push
mov
sbb
lods
xor
jbe
mov
push
pop
dec
jnp
xchg
int
push
cli
and
inc
out
mov
push
out
add
in
xchg
in
mov
int
insb
lahf
adc
adc
push
jge
jp
or
stos
mov
jo
sbb
mov
push
inc
pop
push
adc
lret
lods
scas
insl
fistl
mov
mov
aam
cld
or
repnz
test
xchg
mov
push
and
test
cmc
pop
ret
pop
pop
clc
loop
insb
push
push
stos
cmc
dec
roll
negl
mov
gs
fcoml
push
sarb
mov
lret
sbb
and
push
loop
bound
or
inc
test
pop
or
mov
aad
out
cmp
clc
xor
mov
stc
xlat
jnp
cli
pushf
sbb
mov
mov
inc
sub
cmpsb
push
mov
xchg
adc
mov
in
stos
hlt
lock
into
inc
cld
add
push
mov
xchg
rcrl
push
cmp
aad
jnp
out
clc
loopne
xlat
pop
xchg
icebp
or
and
pusha
mov
xchg
push
mov
add
popa
or
inc
imul
jge
cli
scas
dec
test
ljmp
mov
mov
sti
fadds
fidivrl
push
inc
sbb
mov
icebp
mov
out
dec
out
push
js
inc
das
pop
and
inc
mov
xchg
dec
cld
pop
xchg
test
test
xor
lcall
pushf
and
icebp
lret
xchg
cwtl
lds
sub
sub
mov
push
aas
sub
dec
arpl
push
in
adc
pop
dec
inc
sbb
arpl
in
lods
dec
xor
in
test
mov
mov
xor
sbb
in
fistps
stos
dec
mov
movsb
mov
pop
adc
nop
icebp
popa
test
pop
dec
loope
sbbb
movsl
sub
dec
subl
jmp
stos
fsubr
push
dec
int3
lds
jmp
cmp
cmp
fldt
pop
cmp
pop
mov
jge
jb
scas
xor
mov
in
cmp
fidivrs
add
cld
mov
mov
mov
mov
mov
push
jg
rcll
movsb
ljmp
lret
adc
sbb
movsb
adcb
subb
fiadds
mov
jmp
nop
dec
adc
dec
lret
push
lret
mov
stc
out
or
lods
daa
lea
ljmp
pop
out
mov
jnp
jae
sbb
adc
jnp
push
aad
negb
cli
lret
int
loop
int3
lret
das
outsl
push
adc
test
aad
inc
je
iret
in
push
or
mov
or
or
push
aam
jmp
sub
cmp
in
sti
push
push
mov
cmp
sti
inc
mov
sbb
inc
je
testb
das
cs
in
lret
add
mov
cmp
sbb
mov
mov
inc
es
mov
inc
cmp
and
in
into
popf
out
pusha
push
adc
inc
icebp
outsl
pop
mov
fsubl
sti
call
sub
scas
xchg
or
fmulp
mov
lret
aas
addb
pop
sub
addl
push
push
ds
aas
lods
inc
mov
mov
mov
xchg
sbb
jnp
lods
pop
sbb
data16
xchg
mov
lea
xor
shlb
fcmovbe
daa
push
addr16
inc
xor
fcmovu
xor
sub
loopne
cs
lods
out
mov
and
mov
lcall
fs
xchg
outsb
lods
xchg
adc
push
jnp
jg
push
outsl
ss
enter
dec
mov
nop
pop
dec
js
sub
xor
add
jo
movsb
stos
sub
lock
add
fmul
test
andb
int3
push
add
pop
dec
aad
push
sub
inc
cmp
mov
inc
ja
xor
xchg
jnp
cwtl
fistpl
hlt
ret
popf
daa
mov
out
mov
cltd
jnp
int
mov
popf
aaa
and
lret
ja
gs
xchg
out
adc
lods
data16
jnp
mov
in
lods
imul
adc
imul
int3
out
cwtl
data16
loopne
fpatan
dec
mov
sub
xorb
cmp
ret
in
jno
inc
inc
mov
insl
iret
test
mov
mov
inc
mov
mov
rcll
lret
xor
incb
popl
mov
push
inc
stos
leave
pop
ss
mov
lea
jge
scas
fwait
sbb
fcomi
test
das
fldl
loope
mov
ret
jb
sti
cli
xchg
int
jne
enter
aas
rol
ret
mov
mov
flds
add
mov
test
or
lock
mov
leave
add
mov
inc
adc
mov
jno
and
xchg
ret
sbb
lcall
adc
inc
mov
cmpb
fdivl
dec
aad
sbb
popf
xor
in
ds
data16
jne
or
push
add
mov
imul
xlat
mov
out
fs
mov
leave
test
adc
inc
mov
mov
mov
xchg
pop
and
add
aam
cmpsb
xor
lock
ret
or
stos
dec
loope
jno
and
popa
enter
cltd
popa
jmp
mov
xchg
push
mov
xchg
cltd
sbb
aad
sub
push
imul
stos
xor
xor
negb
mov
inc
push
mov
ror
shrl
mov
jb
scas
jp
push
mov
xor
ss
inc
push
ljmp
aaa
out
xor
fcompl
sbb
mov
test
push
sub
lods
addr16
xchg
lds
std
and
push
mov
aam
fistpll
mov
lcall
pusha
pop
cmp
dec
jnp
xor
insb
or
ja
add
movsl
or
mov
mov
icebp
ss
sbb
pop
push
js
inc
add
dec
loop
and
lret
mov
movsb
pop
aaa
dec
jae
mov
fidivrl
repz
adc
data16
and
sub
adc
push
outsb
test
ret
decb
xor
or
push
cmp
add
xchg
xchg
and
cmp
rorb
stc
int3
sub
test
leave
mov
or
or
add
hlt
lock
mov
lea
xor
stc
lea
dec
sub
dec
mov
lock
or
or
sbb
inc
mov
lret
jnp
push
xchg
scas
and
pop
das
or
cmp
and
or
js
in
mov
cld
fildl
or
mov
dec
stc
dec
mov
adc
and
sub
mov
fldt
pop
hlt
aam
test
andl
push
adc
in
pop
dec
jnp
mov
jne
je
xchg
inc
pop
filds
or
xor
sbb
sub
push
push
dec
push
xchg
lea
aas
fwait
dec
sub
adc
lods
sub
ret
jmp
sub
outsl
bound
xchg
mov
outsl
xchg
xchg
mov
sub
fstp
add
push
cmc
shrl
cmc
lock
mov
iret
push
push
jl
pop
rcr
inc
sbb
mov
inc
fdivrp
push
push
add
call
xchg
and
sbb
or
int3
xchg
xor
outsl
dec
fs
dec
lcall
icebp
andl
les
ljmp
jo
inc
cmp
sub
pop
ss
fmul
xchg
sbb
mov
cmp
xor
ror
xchg
out
mov
add
mov
bound
outsb
dec
lahf
sub
aad
mov
out
pop
shll
sbb
jo
pop
dec
ret
xchg
jmp
cmp
fcomip
push
scas
mov
cltd
sub
dec
add
fwait
fwait
xor
push
xchg
push
out
insb
mov
js
push
xlat
dec
xor
xchg
pop
mov
push
mov
and
sbbl
enter
pusha
je
jmp
jmp
arpl
je
js
outsb
mov
js
dec
into
push
ficompl
outsb
pop
iret
add
iret
aam
xchg
mov
xor
cmp
mov
lahf
pop
sub
out
xchg
jnp
leave
inc
or
clc
pushf
xchg
add
cmp
sub
ja
inc
jo
inc
mov
push
inc
je
mov
push
mov
mov
sti
mov
shlb
jae
clc
sub
data16
pushf
pop
outsl
sub
pop
std
mov
sahf
fwait
sub
mov
mov
shr
dec
into
ljmp
cmpsl
push
sbb
addr16
sbb
sbb
and
push
pusha
xchg
pop
cmc
inc
and
cmp
push
sti
and
dec
or
call
xor
jo
in
in
jmp
cmp
xchg
arpl
mov
jb
je
xlat
das
sub
icebp
jge
jne
fildll
movsb
add
fisubl
dec
jae
loopne
pop
and
ljmp
or
pop
pop
rcrb
ficomps
cli
and
leave
int
out
imulb
mov
cld
lds
sub
rorl
or
cs
dec
cld
mov
ja
lcall
mov
dec
sbb
fs
stos
rcll
fsubrl
pop
gs
pop
mov
rcll
push
xor
lea
jbe
shll
xor
push
lahf
loope
pop
sub
pusha
std
loope
out
or
fwait
stc
sub
pop
add
call
daa
inc
adc
test
in
xor
mov
test
fs
pop
jg
dec
lcall
push
jge
mov
enter
dec
adc
jnp
inc
mulb
popf
mov
mov
mov
xor
xor
scas
mov
pop
insb
das
and
sub
out
pop
pop
add
testl
lret
or
sub
int3
xor
int
cmp
lds
fdivl
lds
jg
mov
sbb
add
pop
addb
inc
mov
fstpl
fsub
popa
cld
cmpsb
adcb
cli
lock
jo
lcall
int3
ret
or
in
sarl
in
psrad
loopne
jo
iret
ja
in
test
mov
dec
pop
jbe
sbb
push
inc
sbb
popf
ret
js
test
mov
mov
mov
aaa
sbb
dec
into
shll
inc
xorb
ret
xchg
sbbb
fcoms
add
xchg
inc
sub
mov
add
jmp
sub
ljmp
push
xchg
sbb
out
mov
sahf
and
cmp
xchg
rcl
xorl
dec
loope
cmp
repnz
subb
stc
jl
inc
inc
es
xchg
divb
out
xor
or
roll
das
test
mov
adc
shlb
mov
jmp
mov
sub
lock
xor
jecxz
popa
push
sbb
ret
mov
cltd
jo
push
ret
out
lods
jnp
xchg
sub
int3
shl
xor
dec
cmpsl
adc
jae
testb
es
inc
iret
hlt
loope
push
ja
jl
lock
xchg
jb
sbb
rcrl
nop
rcrb
imul
shrb
jge
cmpsb
sbb
or
dec
dec
dec
rcll
notl
movsl
xchg
xor
jl
lods
jge
clc
je
adc
cmp
xor
in
or
pushf
jl
loope
aam
xorl
adcb
or
ljmp
pop
mov
adcb
testb
imul
or
sbb
out
je
sbbl
or
sub
cmc
mov
xchg
xchg
int3
cmpsb
ss
icebp
xchg
sub
lock
jecxz
int
sbb
icebp
push
divb
sbb
sbb
mov
jp
mov
mov
mov
xchg
aaa
insb
imul
xor
insl
add
inc
shlb
add
lods
out
and
outsb
shlb
jnp
and
scas
in
arpl
dec
ret
xor
xchg
or
scas
xlat
rorb
repnz
xlat
jmp
push
mov
or
stos
dec
mov
cli
adc
hlt
fsubs
push
mov
frstor
jae
mov
adc
xchg
inc
and
lret
jb
test
test
out
pop
adc
xchg
cmpl
xlat
sar
xchg
mov
and
push
sti
cmp
pop
mov
clc
or
sub
mov
mov
jge
int3
ljmp
arpl
push
pop
jno
sub
dec
cmpsl
aas
ljmp
aaa
sbb
dec
stos
jecxz
add
cs
pop
in
int3
es
lods
stos
test
lock
stos
xchg
push
lret
psadbw
mov
daa
mov
shl
push
lea
inc
mov
clc
cmp
pop
push
or
inc
sbbl
pop
jae
popa
pop
inc
mull
jecxz
inc
dec
loop
xchg
fistpl
push
call
scas
mov
push
or
cmp
push
mov
jp
push
and
cmc
ret
mov
hlt
jns
xchg
adc
mov
in
ja
jno
push
sti
insb
shl
cmp
mov
mov
aaa
insl
or
cmp
andl
aas
mov
stos
fmull
push
mov
fsubrs
cmp
pop
jnp
push
dec
xor
out
or
stos
mov
jb
cmp
popa
in
sarl
fs
lods
sbb
push
jns
jmp
and
fwait
jbe
jb
adc
add
add
popf
fwait
mov
out
enter
je
mov
mov
pop
aad
mov
mov
xor
add
dec
bound
cmovl
imul
adc
movsl
or
or
push
or
push
test
out
inc
out
push
push
push
xchg
scas
jge
xchg
in
test
sub
jge
into
mov
loopne
mov
dec
pop
pop
xchg
fmull
fimull
push
cmp
xchg
stos
pop
fisttps
fmuls
ja
inc
pusha
push
ss
sbb
movsl
adc
jmp
cmp
popa
cwtl
decb
sbb
ja
outsb
insb
pop
out
pop
pop
adc
mov
fsub
sahf
cmp
jnp
mov
xchg
mov
ftst
inc
sbb
mov
pop
sbb
sub
hlt
xchg
xchg
push
outsl
inc
xor
jp
sbb
push
jo
iret
arpl
dec
dec
js
mov
les
mov
std
loop
fiaddl
das
sbb
lcall
roll
jne
xchg
push
xchg
dec
push
mov
out
leave
mov
xchg
sbbb
mov
repz
jbe
cs
mov
out
pusha
jae
jg
jge
xchg
dec
or
dec
pusha
mov
add
rcrb
filds
sub
dec
mov
xlat
inc
pop
leave
mov
add
loop
add
sti
jecxz
pop
adc
sbb
sub
mov
cmp
faddl
dec
arpl
pop
mov
and
ror
and
jmp
cmp
push
movsl
inc
xor
imul
cmp
dec
jno
loopne
inc
jbe
lods
repnz
dec
xchg
sbb
fdivrp
iret
xchg
stc
inc
xchg
ss
inc
loopne
fistps
leave
dec
jl
inc
cld
test
pop
test
push
int3
and
pop
fsubs
js
or
xor
inc
mov
jb
inc
je
xchg
sub
lea
inc
fistl
jl
sbb
fcom
pop
lea
out
cs
mov
test
bound
ficomps
int3
aas
mov
dec
add
pushf
shll
test
mov
lcall
repz
out
or
addr16
leave
rclb
inc
test
lret
add
sub
or
in
cwtl
subb
push
jmp
lods
nop
dec
jo
or
je
xor
dec
fistl
test
std
jle
movl
cmp
movsb
pop
dec
xchg
aam
or
xchg
mov
scas
adc
push
push
cmpsb
fs
pop
or
outsl
scas
inc
dec
xchg
dec
push
stos
bound
out
icebp
cmp
jp
pop
lds
repnz
sub
mov
pop
pop
fadds
in
adc
cmp
jbe
divl
mov
cs
js
adc
inc
out
mov
fmuls
les
jge
push
push
int3
mov
ret
lcall
add
xor
cmp
mov
rcr
loopne
es
popa
or
mov
xor
push
push
sti
mov
jg
push
jg
mov
popa
inc
aad
in
push
inc
cmp
xor
xor
sub
push
cmpsl
inc
and
sub
subb
sub
jmp
pop
mov
dec
popf
lcall
loopne
mov
mov
je
xor
jns
lcall
xchg
sbb
or
stos
fucomip
scas
pushf
mov
add
cmp
and
cmp
mov
sarl
out
pop
sub
cmpsb
xchg
cmp
jp
mov
mov
adc
inc
xchg
or
fmul
loope
lcall
sbb
pop
ss
or
lret
pop
mov
in
in
add
sub
nop
xor
je
jns
mulb
into
sti
xchg
dec
push
push
xorb
pop
lds
jns
ret
pop
daa
test
mov
add
mov
mov
inc
sub
fisubrl
fistpl
out
push
adc
mov
xchg
dec
loopne
inc
clc
lods
dec
push
pop
pop
in
adc
mov
push
dec
and
mov
idivl
mov
fistps
adc
fsubs
bound
hlt
dec
and
push
shl
lret
sub
jecxz
lods
movsl
mov
pop
jns
test
mov
mov
fisubrs
xor
jno
loope
push
lds
ja
push
pusha
mov
mov
stc
lea
cld
clc
and
mov
jg
pop
loope
loope
cmp
xchg
sub
bound
or
and
mov
adc
jmp
or
pop
xchg
addb
adc
imul
pop
fildll
stc
xorl
mov
xchg
ss
shr
jmp
out
jae
aam
cmp
out
cmpsb
dec
push
add
mov
les
cli
xor
in
mov
sbb
mov
push
rclb
mov
dec
in
fbstp
and
pop
notb
sub
scas
das
jge
cwtl
fistps
les
jecxz
jns
int3
repz
add
sub
fstpl
into
aaa
dec
rorb
fidivl
out
pop
out
mov
sbb
imul
into
mov
rcrb
das
pop
daa
push
nop
pop
jmp
cmpsb
cwtl
and
jae
pop
cli
sub
push
cs
fcompl
cmpsl
fsubl
jle
shll
add
out
sub
cmp
add
mov
pop
scas
shrb
lcall
scas
sub
pop
jns
pop
int3
rolb
movsl
push
jg
dec
jmp
leave
data16
fwait
mov
test
xor
inc
cmpl
xor
jae
mov
cmc
xchg
je
dec
add
testb
aaa
pop
insl
aam
mov
repnz
je
jns
movsb
mov
add
daa
ffree
or
out
dec
and
jb
leave
mov
pushf
jl
xor
mov
cmp
xor
mov
adc
pop
ret
divb
jle
fisttpll
lcall
xchg
xor
dec
inc
je
aas
pushaw
lret
and
jae
push
rorl
xchg
es
testl
test
scas
mov
lcall
rcrb
clc
aad
es
inc
sub
pop
push
push
inc
xchg
stos
je
push
sbb
or
or
hlt
cmp
in
cmp
or
cmpsb
dec
gs
cmp
mov
and
sub
mov
mov
mov
sahf
pusha
hlt
das
popa
or
cmp
lahf
mov
jno
xchg
lcall
rol
shll
dec
pop
addr16
adc
nop
mov
xchg
dec
loop
adc
aaa
arpl
lods
aaa
iret
repz
xor
inc
jbe
das
jmp
lahf
aaa
pop
adc
jo
fimull
and
push
aam
ret
and
lret
cmp
test
inc
jmp
lods
outsb
xchg
je
arpl
rcrl
lret
and
rcrl
jo
imul
or
sub
mov
out
mov
sub
jl
mov
jo
cmp
jecxz
loop
imul
cltd
cwtl
cld
dec
test
sbb
xorb
adcl
adc
sbb
xor
int3
shl
in
dec
pop
add
pop
xchg
push
or
push
enter
mov
mov
lods
std
push
or
int
lock
add
xor
mov
stos
je
or
in
xchg
cmp
rorb
and
loop
filds
mov
add
push
inc
or
jge
ret
push
imulb
push
inc
in
mov
imul
mov
xor
mov
out
sub
and
cmpb
xlat
lea
jl
sub
sub
xchg
mov
scas
fldt
dec
movsb
jns
or
notl
ja
adc
ss
lea
movl
into
or
and
cmp
xchg
repz
cmp
mov
stc
ret
mov
test
xchg
cmp
in
push
jno
mov
push
incb
dec
add
pop
or
movsl
add
mul
lret
push
test
imul
ret
cmp
cmc
mov
dec
add
jmp
insl
sbb
pushl
out
iret
mov
dec
les
idivl
push
es
mov
insl
mov
cs
push
mov
or
arpl
cmpsl
and
out
rorb
pop
scas
test
pop
lret
sar
cmp
repz
lea
jmp
lea
push
mov
jo
sbb
adc
jle
mov
test
data16
mov
sbb
pop
inc
ret
call
push
pushf
fdivrl
shrl
data16
xlat
outsl
popl
adc
dec
dec
pop
mov
int3
sub
inc
jne
cmp
xor
das
xchg
pop
gs
pop
pop
iret
or
js
outsl
faddl
test
stos
movsl
or
xchg
jp
popl
lods
xor
pop
jmp
insb
jno
mov
xlat
push
sbb
addb
in
add
shrl
es
sbb
sub
sub
test
insl
add
dec
mov
push
mov
adc
popf
sbb
push
cmp
std
aas
sbb
nop
mov
cmpsl
jo
mov
out
shlb
sahf
xor
out
leave
xchg
iret
or
stc
cmp
xchg
rep
sbb
pop
dec
std
stc
int
ret
iret
push
pop
inc
xchg
xchg
ffree
shlb
mov
in
fstp
adc
dec
movsl
pop
jecxz
rcll
cmp
std
aas
das
inc
hlt
jb
adc
sub
test
imul
cmp
pop
or
pushf
out
aam
aas
mov
pop
pop
addr16
aaa
xchg
hlt
loope
mov
push
sbb
jle
ret
pop
push
mov
mov
cmc
movsl
idivl
sbb
mov
xchg
xlat
shlb
cmc
pop
dec
sub
mov
cmp
cs
cltd
dec
xchg
int3
pop
lock
or
sarl
int
mov
xor
stos
adc
ret
dec
adc
and
and
push
xor
jp
in
movsl
in
add
scas
mov
dec
xchg
jecxz
rcrb
decl
jle
fs
lods
jmp
lret
stos
push
out
xchg
movsb
mov
int
and
mov
movsl
xor
pop
nop
mov
lcall
jae
pop
sub
jns
lret
pop
add
push
ret
push
mov
mov
adc
dec
sbb
jne
inc
rorb
push
shrb
mov
shrd
lds
jae
cwtl
test
adc
xor
cmp
jl
xchg
cld
add
test
cmp
arpl
pop
ss
pop
aas
or
aas
fcoml
stc
sbb
pop
sub
jle
xor
sbb
sbb
pop
pop
cmp
enter
jo
pushf
out
cli
push
ds
adc
icebp
cmp
xor
shll
popf
rcrb
outsb
mov
movsl
cmp
sub
xchg
repnz
mov
and
inc
cmpsb
scas
call
cld
jmp
and
sub
add
cmp
xorl
jmp
mull
mov
mov
jns
out
mov
mov
or
outsl
xchg
inc
test
ljmp
ss
jbe
shrb
pushf
daa
out
out
rcrl
bound
scas
das
mov
lea
mov
or
es
inc
push
into
xor
testb
cmpsl
out
test
mov
leave
jl
mov
test
or
mov
ds
cld
incb
xor
loope
popa
imul
ja
js,pn
adc
push
es
imul
adc
in
adc
cmp
outsl
enter
mov
or
mov
pop
mov
addr16
ja
outsb
xchg
insb
mov
push
loope,pn
imul
idivl
sahf
push
cmp
mov
inc
jecxz
mov
mov
les
sarb
rorl
cmpsl
mov
add
outsl
add
sbb
in
jge
inc
test
outsl
cli
test
cmpsl
and
insl
icebp
dec
aam
je
jne
out
pusha
mov
shll
test
fs
xor
dec
dec
mov
dec
sbbl
stos
mov
popa
js
jp
in
mov
hlt
jae
rolb
mov
scas
mov
ja
inc
jg
cld
push
test
xor
pop
fs
mov
mov
push
mov
dec
dec
arpl
das
sub
inc
test
cltd
mov
cs
icebp
and
les
inc
cmp
and
dec
test
mov
pop
mov
jecxz
ret
xchg
loopne
sbb
push
dec
test
test
inc
push
jo
xchg
sarl
xor
roll
mov
or
mov
leave
and
or
pusha
inc
stos
push
std
and
mov
add
cmc
shlb
inc
xor
ret
stos
pop
cli
adc
std
dec
adcb
aaa
out
mov
cmp
xchg
and
push
jne
insl
xor
sub
xchg
inc
fldl
adc
adc
daa
adc
arpl
fistl
cmp
fstpl
or
imul
std
cs
cltd
mov
rclb
or
incl
shll
cmc
inc
cltd
sub
movsl
pop
sbb
mov
cmpb
mov
mov
xchg
sahf
fcmovne
sbb
add
dec
push
repnz
xor
push
outsl
ja
add
mov
psubq
enter
and
scas
pushl
ss
icebp
iret
into
inc
sub
icebp
jae
jnp
xor
fldt
or
inc
repnz
jl
cmp
push
inc
pusha
sbb
mov
lods
xor
aaa
int3
jmp
adc
scas
mov
out
push
mov
push
out
sahf
cs
pop
xchg
rcrb
push
jg
fsubs
dec
cmp
mov
imul
sub
pop
pop
and
lods
mov
sub
cmp
lcall
inc
mov
add
cltd
jg
mov
lods
int3
out
push
sti
push
enter
scas
orl
frstor
aas
mov
inc
adcl
sahf
cmc
test
out
inc
mov
xor
notb
lar
adc
hlt
mov
and
rorl
ret
xchg
pushf
jle
adc
mov
decl
out
jno
lret
inc
cmp
nop
fbld
inc
fbstp
or
fistl
jnp
mov
jb
nop
fldenv
adc
dec
jle
sbb
shl
pop
jne
mov
das
add
sub
aaa
xchg
xchg
xchg
cli
nop
push
daa
jae
jmp
push
mulb
xchg
xchg
jb
xor
jb
negb
popa
xor
and
jae
xchg
rol
fiaddl
push
mov
mov
bound
lock
sarl
mov
mov
in
push
sbb
fistpl
imul
cmp
xchg
jb
and
mov
pop
jnp
test
sub
inc
jo
in
cld
dec
mov
hlt
sub
mov
sub
push
mov
js
push
sub
ret
adc
add
push
cmp
push
pop
mov
mov
dec
out
dec
jmp
popf
pop
jge
imul
imulb
cmpsl
jge
jb
cld
fs
mov
xlat
push
ljmp
mov
ss
cld
or
pop
jbe
xor
test
add
mov
xlat
scas
fidivl
mov
mov
jecxz
orl
test
jg
or
sub
lahf
and
call
or
lret
mov
fisubrs
dec
sbb
sub
pop
lock
sub
bndstx
add
imul
adc
loopne
or
fstl
sub
xor
xchg
jmp
sub
popa
mov
ret
out
mov
or
test
les
push
inc
and
dec
mov
dec
sbb
icebp
fisubl
insl
push
cmc
jg
js
aaa
mov
aaa
rolb
popa
or
jecxz
cmp
push
rcll
jno
pop
sar
insl
dec
test
fs
lahf
jb
and
out
push
or
imul
in
pop
push
and
push
cmp
imul
leave
mov
inc
shll
subb
jno
mov
addr16
xorb
jl
adc
mov
jnp
mov
jnp
sub
subl
cmpsl
dec
dec
or
shrb
jbe
sub
mov
stc
testl
fistpl
imul
rorb
push
aas
sub
lods
bound
repnz
shr
lods
cmc
sahf
loop
push
ret
push
rcr
outsb
xor
adc
mov
pusha
mov
dec
aam
je
xchg
scas
es
xchg
mov
ret
lea
cmp
xchg
repz
adc
dec
fsubr
push
aam
xchg
jnp
into
xchg
insb
push
pop
leave
repnz
sub
lods
nop
cmc
add
loopne
pop
add
out
xor
jp
and
adc
scas
fisubrl
sub
and
call
adc
adc
clc
or
fstpt
leave
lahf
lcall
addr16
es
imul
outsl
enter
xor
call
mov
movb
pop
rorl
cwtl
pop
dec
dec
sahf
or
adc
inc
bound
jp
outsl
ret
mov
add
xlat
pusha
insb
jne
push
decl
sbb
shlb
push
mov
ret
test
out
jle
lock
bound
das
sub
popf
in
data16
adc
clc
repz
add
test
hlt
and
pushf
pop
mov
lods
cltd
lods
outsb
jne
dec
int3
mov
imul
mov
mov
inc
or
push
xor
hlt
in
out
test
add
fsts
xchg
test
fmulp
movsb
ret
pop
xchg
xorl
mov
dec
push
lahf
ljmp
jo
call
dec
jnp
xor
sbbl
imul
rcrb
mov
cmpsb
fldl
mov
and
cmc
push
pop
call
mov
jg
push
inc
pop
loop
pushf
or
call
in
repnz
xor
cmp
mov
lahf
adc
xor
test
xchg
add
xchg
sbb
stos
dec
fcomps
mov
fdivrl
jnp
das
pop
in
jg
mov
sbb
not
sbb
adc
cs
pop
es
mov
inc
test
jb
je
lret
addr16
jecxz
dec
repz
iret
mov
rorb
dec
test
into
add
push
inc
fisubs
mov
inc
ja
je
cs
js
sbb
xchg
xchg
mov
rcrl
push
fidivrl
mov
nop
xlat
cwtl
pop
adcl
adc
sbb
push
inc
pop
or
aad
push
insl
and
fucomi
std
push
test
push
je
xchg
or
cli
int
push
dec
in
popa
clc
mov
push
imul
dec
mov
cmp
pop
insl
ret
test
or
add
testl
es
call
out
push
pop
loope
sti
xchg
mov
push
or
jb
ret
cmc
lret
jo
arpl
push
loopne
or
add
testb
jo
andb
stos
cs
xchg
inc
cli
js
movl
out
cmp
mov
in
rcrb
jp
cmp
inc
insb
sub
push
jmp
ss
cmp
xor
sub
lret
movsl
mov
test
rclb
cwtl
ret
ss
pop
push
mov
add
sub
nop
mov
lds
test
fldenv
popf
pandn
xchg
cmp
addl
lretw
add
or
les
pusha
or
inc
call
je
test
out
pop
mov
das
aaa
das
mov
sbb
adc
add
imul
or
sbb
jo
fld
pop
repnz
push
mov
push
inc
add
sub
or
adc
fcompl
push
push
xchg
in
loopne
sub
xchg
lods
mov
cmpsl
push
lods
push
inc
pop
ljmp
mov
sbb
adc
cmpb
mov
or
aam
int3
outsl
sti
aaa
repz
repz
repnz
jp
sbb
dec
mov
cmp
xlat
jo
jno
sbbb
js
je
sub
or
jns
mov
xchg
or
and
jp
cmp
subl
xchg
mov
lea
bound
xchg
outsl
jbe
ss
aaa
or
je
mov
mov
call
pop
jmp
xor
mov
test
mov
jns
dec
dec
in
adc
repnz
mov
into
js
push
in
in
enter
sub
icebp
negl
push
aaa
fs
cmp
mov
xor
push
xchg
out
dec
nop
mov
ret
pop
adc
jle
cmp
test
fistps
int3
jecxz
in
mov
test
enter
dec
or
jb
pop
jo
inc
add
cmp
or
cmp
fnstsw
sub
inc
fucom
dec
addl
sahf
and
dec
mov
adc
jne
adc
pop
and
push
aas
sub
mov
push
or
int3
xor
aas
mov
inc
push
pop
in
cmc
or
sbb
mov
aam
fidivl
mov
mov
imul
fists
nop
shr
iret
jge
or
xchg
pop
cmc
lds
rcll
xor
and
mov
inc
out
aaa
pop
movsb
mov
jo
fstl
xchg
lret
loopw
test
mull
sub
lock
jnp
loopne
test
xchg
test
bound
movsb
movsl
push
jge
pushf
int3
sub
enter
ret
or
jb
fdivs
pop
xchg
aaa
insb
dec
dec
sbb
sbb
rorl
ret
enter
pop
adc
add
sub
outsl
mov
orb
loope
sbb
push
add
pusha
stos
cmp
pop
out
push
xor
or
mov
adc
jns
xor
pop
push
fdivrl
pop
test
loop
xchg
push
into
popf
movsb
mov
mov
aaa
lcall
mov
mov
inc
adc
rclb
pop
out
mov
sbb
xor
add
or
sbb
cmp
icebp
cltd
andb
and
insb
or
pusha
cmp
aad
cmp
adc
sahf
test
and
cmp
lds
sbb
mov
ret
add
dec
aas
cmp
leave
jl
mov
push
inc
dec
push
or
mov
fmull
xor
push
insl
xor
or
setp
cmpsl
arpl
inc
out
mov
rorb
or
addb
pop
inc
xchg
and
rcrl
mov
push
mov
cmpsb
adc
cmpsb
sbb
mov
aas
xor
adc
cmp
icebp
push
pop
xor
ret
pushf
add
cli
inc
and
stos
call
adc
pop
aam
add
imul
push
jae
push
mov
test
repnz
fistpl
xchg
jb
cmpsl
push
mov
ret
cmp
stos
ds
shl
repz
and
sbb
sbb
cmp
jns
inc
sbb
jo
pop
sbb
sub
pop
loopne
fldcw
push
aam
fistpll
cmp
fwait
push
and
mov
sbb
insl
jg
mov
inc
mov
decl
cltd
pushf
sub
jo
aam
dec
mov
push
jecxz
mov
ficomps
ret
mov
cmp
out
inc
inc
lods
dec
cwtl
out
pusha
inc
loop
outsb
dec
outsl
sbb
xor
stos
xchg
imul
iret
cmc
in
int3
movsb
fs
mov
or
lds
lea
out
mov
jae
les
enter
stc
pop
cmp
xor
lahf
fwait
push
dec
mov
imul
and
scas
mov
dec
adc
jno
fidivrs
xrelease
divb
outsl
roll
cmp
mov
in
or
aam
cli
mov
jg
mov
sahf
sbb
int3
cltd
adc
pusha
stos
mov
aam
xor
fadd
mov
das
leave
jno
out
xor
repnz
sbb
in
mov
lods
adc
jo
fidivrl
test
dec
inc
fsubs
push
dec
adc
mov
iret
bnd
mov
jecxz
xchg
clc
shlb
push
aaa
dec
mov
or
push
pop
imul
fisubs
jae
push
mov
insb
imul
in
pop
imul
mov
popf
int
mov
cmpsl
sbb
mov
inc
push
jb
data16
mov
cmpsl
ret
mov
out
mov
lea
mov
sti
leave
mov
test
scas
loope
add
repz
sbb
sub
mov
mov
lret
cmp
mov
adc
sahf
mov
cmp
test
test
stos
push
pop
jecxz
push
push
std
cmc
sub
fs
xor
xchg
add
fists
movsb
hlt
sbb
jne
pusha
push
mov
pop
and
lcall
mov
jae
ds
ljmp
es
adc
xchg
push
aaa
cltd
sub
lods
inc
sbb
mov
nop
ret
jp
pop
xor
mov
lock
in
jg
stc
into
shl
dec
test
sti
xchg
aas
add
or
fsts
push
jnp,pt
or
inc
out
sbb
ds
aam
cmp
repnz
lods
ret
sub
and
xor
dec
nop
jmp
das
in
je
aas
movsb
mov
adc
pop
popf
push
int
mov
out
mov
push
cmpsl
nop
mov
mov
xchg
cmpsb
jl
dec
dec
aas
jp
or
xchg
adc
inc
add
jmp
sub
jg
adc
push
dec
stos
loop
cmp
pop
pushw
add
lock
and
scas
ljmp
loopne
lods
loop
and
mov
in
jg
cwtl
shr
jle
xor
and
mov
mov
imul
lods
fwait
mov
fwait
pushf
repnz
js
into
mov
std
lods
stos
xchg
xchg
and
mov
adc
std
xchg
mov
or
pop
jne
aaa
adc
mov
sti
ficompl
jbe
mov
cmp
fs
cmp
or
add
push
repnz
mov
cli
testl
inc
iret
outsl
hlt
or
das
sub
clc
inc
sub
mov
loopne
cld
jns
ja
cli
mov
push
add
ljmp
xchg
in
sbb
xor
xchg
xchg
mov
leave
pop
cmpsl
jne
enter
lods
lods
push
and
jge
neg
stos
xor
cld
andb
cmp
dec
into
sbb
xchg
jp
clc
sub
movsl
cmp
xchg
pop
shrb
mov
fldcw
add
push
adc
pop
ud1
fstl
ljmp
xchg
push
les
fisubrl
cmp
test
sub
adc
leave
popf
insb
cltd
push
inc
popf
pop
pop
push
mov
jae
mov
idivb
mov
dec
mov
jns
cwtl
pop
push
test
lcall
push
pushf
popf
fisubrl
int
xlat
shll
or
repnz
or
sub
add
adc
addr16
jmp
add
jl
sbb
mov
insl
leave
stc
sbb
fimull
and
adc
jg
dec
mov
loop
and
fs
and
mov
lock
adc
inc
into
shll
fsts
xchg
mov
or
inc
hlt
es
ficoms
adc
cmp
or
loopne
je
ljmp
sub
rclb
ret
ret
jmp
js
fdivl
lds
jle
pop
fidivrl
pop
ret
stos
push
rclb
lock
mov
xchg
adc
or
mov
xor
or
andl
out
and
jmp
stos
cmp
icebp
mov
xor
arpl
loopne
push
mov
and
adc
insl
das
icebp
cmp
xor
adc
arpl
push
aas
icebp
mov
xor
add
sahf
dec
aad
insb
push
in
jle
mov
mov
dec
nop
or
jno
mov
out
or
xchg
shlb
pushf
cmc
cmp
cmp
jb
stos
adc
pop
cwtl
mov
insl
shl
jbe
xchg
lods
arpl
pop
cwtl
mov
push
js
addr16
lods
rcrb
cmc
rep
xor
fwait
test
push
mov
push
nop
and
pop
xchg
adc
pop
fwait
test
mov
mov
movsl
adc
sbb
mov
xchg
into
outsb
mov
ret
and
mov
rcrl
push
push
pop
pop
mov
stc
mov
jp
xchg
add
int3
cwtl
enter
mov
mov
adc
dec
lds
iret
adc
js
mov
push
mov
mov
fs
idiv
sti
insl
mov
in
fnstsw
sbbb
scas
fadds
mov
adc
pushf
push
push
scas
jle
rol
fildl
cmc
lea
cmp
pop
in
cs
adc
cmc
adc
or
stos
sbb
jns
xorb
fldcw
inc
js
xchg
pop
mulb
arpl
mov
jp
sbb
cmp
lock
add
xor
daa
das
mov
insl
subl
jg
movsb
aam
dec
enter
pop
mov
and
sahf
push
call
aaa
outsb
int3
sub
adc
mov
sbb
and
stos
test
lahf
mov
sub
addb
inc
dec
fwait
xor
sbb
lea
mov
inc
dec
cmpsl
in
jmp
mov
xchg
add
jecxz
mov
or
loopne
pop
adc
jmp
inc
mov
clc
ljmp
pop
or
insl
sub
jnp
inc
cld
push
out
imul
addr16
xchg
dec
and
inc
dec
jae
xchg
ljmp
mov
add
pop
add
pushf
add
push
scas
cld
add
call
stos
xchg
sarb
imul
dec
rcrl
pop
sbb
outsl
and
sbbb
addr16
mov
mov
std
or
and
das
mov
push
xlat
leave
push
pop
mov
rcrb
jnp
mov
sub
inc
ret
lds
xchg
pop
mov
push
sbb
mov
fcmove
push
shl
inc
push
into
andl
cmp
or
fadds
leave
pop
mov
or
pop
sahf
call
sbb
sti
inc
pop
das
inc
es
sbb
cltd
cli
scas
lcall
pusha
sub
push
mov
or
mov
xor
add
or
lods
int3
nop
out
sbb
inc
insb
sub
das
mov
dec
add
mov
pusha
mov
dec
mov
pop
fldt
dec
test
cs
adc
divb
ret
mov
mov
fsubr
mov
mov
and
lock
iret
xchg
xchg
mov
pop
sar
ss
and
sub
cs
and
push
sete
lret
mov
lods
adc
lcall
andb
stos
icebp
mov
add
arpl
push
call
fldt
test
mov
lods
pop
dec
lock
jnp
out
adc
ss
andb
cli
repnz
je
adc
dec
je
mov
jg
xchg
data16
stc
mul
jp
inc
rcr
les
xor
cmpsl
pop
imul
sub
stos
js
xchg
les
pop
enter
pop
ret
or
or
xlat
lret
fldt
cli
fdiv
fwait
pop
xchg
jae
int3
jae
in
ds
pop
adc
daa
scas
cmp
jecxz
lret
jns
divb
bound
in
icebp
jb,pt
jecxz
inc
inc
sub
sub
shl
jb
mov
test
jb
push
jle
movsl
in
sbb
pushf
inc
fwait
bound
out
aad
add
sbb
ficomps
pushf
jmp
xchg
jne
stos
inc
ficomps
dec
sub
jl
xor
dec
cwtl
mov
mov
jb
shrb
xor
xchg
sbb
clc
pop
xor
mov
addb
mov
ss
mov
jne
push
mov
orl
adc
movsl
sbb
outsb
mov
or
push
insl
fwait
scas
nop
pop
daa
ret
mov
enter
pop
popa
mov
sbb
pop
sbb
ss
loopne
dec
sub
andl
data16
xchg
pushf
enter
sub
push
sbb
pop
pop
scas
jmp
verw
sub
cltd
mov
or
idivl
dec
cmpsl
outsl
fs
add
mov
pop
call
subl
jg
js
sbb
lahf
out
or
mov
xchg
lcall
mov
fidivs
cmp
jae
mov
je
movsb
sub
cmp
mov
subl
add
cmpsl
gs
xor
mov
fstpt
pop
in
xchg
mov
mov
outsb
or
out
scas
ret
cmpsb
ficomps
inc
lods
dec
pop
inc
sbb
aam
fists
jno
fcomp
daa
mov
push
push
popl
pop
sarb
fcoms
addr16
cmp
jno
inc
mov
aam
mov
mov
cmp
sbb
pop
fstl
negb
sbb
push
sub
jg
mov
cltd
adc
loope
in
xchg
xchg
mov
loop
dec
mov
ja
mov
mov
mov
gs
setnp
inc
div
adc
frstor
mov
jbe
dec
fsub
push
sbbb
jbe
jl
sub
mov
imul
shr
xchg
pushw
cmp
adc
fs
outsb
mov
xchg
fcmovnbe
sti
loop
fcompl
cli
imul
xchg
jne
imul
or
or
in
push
adc
fsubl
es
sbb
es
out
les
cmp
sbbb
and
aas
xor
lahf
arpl
mov
lret
cmp
lret
cmpsl
rolb
mov
mov
pop
andl
sub
push
push
or
sarb
inc
xor
adc
adc
dec
mull
and
mov
xchg
in
flds
mov
sbb
xchg
out
cmpsb
out
inc
fwait
adc
das
and
sub
sbb
sti
mov
fwait
pop
and
clc
cmp
stos
mov
mov
xchg
jge
xor
add
mov
out
sub
mov
lds
xchg
add
push
push
push
sub
loope
mov
scas
sbb
inc
test
pop
cltd
rolb
mov
lods
jmp
mov
iret
push
dec
dec
mov
push
xor
mov
movsb
pop
int
mov
cwtl
fisubrs
cld
popf
push
jnp
sub
mov
jge
pop
shll
mov
add
loopne
inc
dec
ret
std
inc
outsl
dec
mov
or
shr
sahf
es
add
mov
sbb
clc
shl
inc
push
test
add
adc
sbb
adc
ds
fsubr
mov
add
ja
dec
lret
xor
push
int
rorl
inc
xor
iret
aad
jae
pop
loopne
jo
add
jl
insl
dec
mov
push
push
insl
in
xor
mov
arpl
fisttps
ja
jl
clc
sbb
xor
in
cmp
nop
stos
sbbl
fistpll
push
mov
sub
push
scas
cmc
cmpsb
jb
mov
fistl
daa
push
ljmp
pop
and
inc
sub
jae
mov
stos
mov
test
pop
nop
or
ret
mov
and
jb
sti
lock
mov
jae
add
mov
adc
nop
imul
cmc
xor
mov
mov
ret
or
push
inc
rclb
loope
and
inc
adc
popf
and
sahf
lea
or
add
cmp
jns
sbb
adc
mov
or
mov
in
xchg
and
xchg
mov
dec
xor
insb
push
mov
push
icebp
mov
add
add
in
mov
xor
call
pop
popa
mov
movsb
inc
jnp
inc
cmp
mov
and
sti
mov
ret
pushf
loope
or
pop
mov
arpl
xor
mov
pop
mov
lcall
mov
int3
mov
or
jnp
push
jmp
xor
cld
mov
leave
movb
hlt
enter
imul
enter
xor
push
lahf
es
xor
sub
mov
outsl
pop
outsb
test
xchg
inc
mov
cmpsb
repz
add
roll
xchg
cwtl
out
inc
or
and
pop
ss
inc
sub
mov
dec
push
clc
mov
sahf
cs
or
xor
push
vpinsrw
repnz
lahf
and
cmp
daa
fildl
or
testl
jns
xor
push
xlat
fwait
jge
mov
je
jl
fstps
scas
icebp
push
cmp
lea
jl
shl
inc
mov
imul
pop
adcb
int3
cmp
loop
fwait
dec
rcrl
leave
mov
rcl
fnsave
or
pop
daa
xlat
test
inc
in
bound
and
mov
cmc
mov
rcrl
inc
xchg
mov
loope
push
add
pusha
bnd
int
jecxz
mov
mov
loopne
sub
xor
std
dec
loope
out
hlt
sub
clc
push
mov
jmp
pop
mov
or
cli
mov
in
jl
mov
iret
daa
cwtl
push
in
jp
or
pop
mov
mov
lock
int3
outsl
push
roll
inc
mov
fcmove
inc
pop
mov
adc
ret
mov
pop
lcall
xlat
mov
sahf
ljmp
push
rep
ss
cld
xor
dec
adc
cmp
xchg
push
das
sbb
mov
pop
jge
jp
mov
mov
push
mov
dec
push
pop
loop
mov
leave
test
sbb
sarb
psraw
or
rol
rcll
jo
push
inc
xchg
addr16
dec
cli
inc
jp
lahf
dec
fcmovu
add
mov
push
pop
add
mov
int
cwtl
stos
stos
outsb
loope
dec
add
pop
cld
adc
cli
cmp
lock
jmp
push
lock
xchg
push
int3
xchg
or
xor
adc
mov
adc
cld
imul
stos
lods
daa
mov
push
clc
xor
xchg
cmp
inc
in
add
xor
or
cwtl
sarb
lods
or
jp
mov
mov
adc
mov
and
push
mov
lock
arpl
test
aam
aad
in
ljmp
lods
dec
mov
mov
push
and
mov
pop
jo
icebp
inc
scas
mov
idiv
daa
shrl
push
popa
and
in
mov
dec
jp
or
sub
fcmove
add
adc
loopne
test
popa
mov
dec
loopne
jne
call
int
jmp
rcrb
jmp
imul
je
cs
not
stc
aad
or
cs
or
xor
mov
jne
jmp
sub
aaa
stc
xchg
cltd
or
inc
jmp
outsl
cmpsb
mov
dec
sub
mov
xchg
mov
sbb
hlt
push
outsl
test
shll
xchg
repnz
mov
out
inc
fsubs
test
jp
pop
lcall
mov
pop
cmc
pop
pop
sub
popa
lods
pop
call
jecxz
popf
pusha
leave
loopne
jne
xor
xchg
test
or
cmp
imul
xor
xchg
lods
cmpsb
popa
pop
jb
ja
repnz
pop
fistpll
sub
test
dec
dec
mov
mov
cli
fwait
dec
adc
es
dec
mov
sbb
nop
cmp
jae
push
pop
lds
push
out
aam
cmp
popf
xor
mov
pop
cmpsb
cmpl
loopne
xchg
jge
xchg
xchg
or
cmp
cmp
icebp
inc
in
jecxz
hlt
sub
cli
andb
imul
dec
xlat
add
pusha
loope
lret
lret
shrl
and
and
jecxz
pop
mov
fsub
out
pop
ret
pop
inc
mov
push
test
or
sub
and
addr16
lock
mov
mov
arpl
mov
cld
test
aad
push
or
rorl
or
xlat
and
add
mov
sub
popa
inc
out
jge
lods
dec
cmpsl
xchg
cmp
ret
iret
and
sub
xchg
cld
sbb
or
sbb
adc
das
xchg
push
movsb
out
add
les
icebp
ficoms
xor
icebp
mov
xchg
movsb
xor
movsl
inc
xlat
dec
add
addb
rorl
cwtl
xor
add
gs
jne
sub
push
mov
loop
mov
movsl
jb
jb
fneni(8087
div
popa
inc
jae
inc
pop
sbb
fxch
test
or
inc
sbb
scas
shr
lods
gs
lea
or
sbb
mov
sub
fmulp
adc
test
ss
xchg
les
ljmp
shll
outsb
mov
dec
ds
les
and
lods
out
mov
cmpb
leave
ret
and
add
push
rolb
and
pop
cmp
lds
xchg
bound
out
mov
xor
clc
adc
outsl
mov
bound
jno
and
lret
mov
jg
mov
add
adc
test
imulb
shl
inc
jecxz
xchg
jmp
and
push
pop
and
cwtl
pop
rclb
imul
push
pusha
mov
orl
jle
jnp
jecxz
mov
imul
adc
mov
or
ret
repz
inc
cmc
mov
ja
sti
mov
mov
or
lods
popa
es
or
int3
lcall
mov
inc
jge
cmp
out
es
xchg
adc
mov
nop
jns
cmp
popa
xor
repz
jp
fiaddl
push
das
jmp
sub
dec
fcmove
orl
pop
xchg
fsts
into
pop
in
imul
xor
inc
push
sub
in
stos
push
shl
sub
dec
mov
mov
sbbb
add
test
loope
mov
xor
pushf
xor
xlat
push
cli
ds
pop
add
push
fwait
cmp
xor
neg
test
popaw
into
bnd
lods
add
negl
fwait
push
push
movl
xlat
sarl
jmp
test
cmp
sbb
or
imul
mov
ds
xor
mull
inc
pop
inc
enter
mov
hlt
sub
dec
sub
out
into
adc
in
push
andb
pop
push
fisubrs
lods
push
outsb
xchg
inc
sub
pop
jbe
rorl
dec
lods
mov
aas
dec
rcrl
add
xor
cmp
fstl
lahf
repz
daa
pop
cmp
pusha
xchg
icebp
jo
pop
cltd
cmp
test
pop
fs
int
push
ret
enter
loope
mov
test
mov
dec
mov
mul
cmp
mov
repz
dec
andb
shl
xor
or
mov
adc
push
dec
sahf
and
push
and
fstpl
push
sub
filds
mov
jg
xchg
push
sub
sbb
mov
sub
mov
jecxz
in
inc
xlat
pop
xor
xor
mov
add
xor
fadds
mov
jle
outsb
add
mov
bound
jnp
push
mov
or
pop
dec
xchg
stc
mov
loop
outsl
xchg
xor
add
mov
mov
jns
or
or
fnstcw
stc
mov
or
scas
sbb
pop
clc
add
cmpb
pop
xchg
es
xor
xlat
adc
jae
xor
das
mulb
jno
ret
cmpsl
cmp
sbb
sbbl
push
pop
xchg
dec
sbb
movsb
out
cwtl
sbb
scas
sbb
inc
movsl
cs
add
bound
xchg
add
sub
jns
pop
mov
test
inc
mov
jnp
and
mov
sahf
and
adc
push
loope
out
loope
xor
sbb
adc
dec
add
cmpsb
mov
cld
or
pop
int3
out
mov
fbstp
roll
adc
mov
in
mov
or
fdiv
mov
xchg
jb
in
dec
das
add
push
pop
bound
scas
es
mov
add
fiaddl
test
mov
and
sub
cwtl
inc
lock
xchg
and
inc
sbb
cs
dec
jl
sub
cld
adc
aas
pop
lds
mov
mov
mov
test
and
cmc
repz
in
jbe
lds
sbb
inc
sub
adc
fldenv
mov
and
jge
sub
sbb
pop
cwtl
cmpsl
jmp
jo
pop
sub
jb
adc
jg
fsub
sub
mov
sbb
loopne
dec
sub
popf
inc
mov
pop
sti
jle
or
add
push
dec
mov
dec
popf
push
mov
mov
or
xchg
out
outsb
add
cld
pop
scas
push
pop
aam
ljmp
fwait
or
hlt
inc
push
mov
sbb
jmp
mov
mov
push
sub
shr
lods
jno
sub
xor
ret
mov
mov
out
xchg
xchg
aad
and
xor
adc
es
dec
loop
jecxz
stos
cwtl
mov
mulb
or
push
pop
fsubs
jb
leave
push
loope
jle
add
inc
insb
ret
loope
push
sub
fsts
rolb
sbb
in
mov
int
xchg
cmp
repz
jp
cli
pop
and
mov
sub
dec
notb
in
adc
or
addr16
je
js
xor
inc
push
push
lds
ja
mov
mul
sbb
hlt
mov
andb
imul
out
rclb
aaa
mov
outsb
fnstenv
mov
mov
sbb
loopne
or
mov
jae
sbb
add
inc
mov
add
xchg
repz
mov
lret
dec
imul
push
iret
lea
mov
daa
push
cld
dec
fs
out
cli
test
cld
mov
loopne
call
xor
ret
sub
adc
movsb
movsb
out
repz
add
in
sub
hlt
push
repnz
js
je
pop
nop
fcos
and
inc
int
sbb
jmp
fnsave
lahf
sti
xor
xchg
mov
dec
int3
std
das
iret
push
mov
jbe
cltd
or
mov
adcb
add
mov
inc
mov
out
je
cmp
inc
adc
cmp
sarl
shr
push
lock
mov
leave
cmp
movsb
dec
pushf
addb
insl
movsb
int3
mov
cs
outsl
adc
sti
jne
adc
addl
adc
xchg
pop
xor
mov
int
sbb
xchg
mov
mov
xchg
jecxz
xchg
in
xchg
sbb
push
pushf
outsb
out
into
add
adc
cmp
scas
iret
jns
mov
imul
fcomps
stos
fistps
lret
pusha
mov
jo
outsl
dec
mov
lock
imul
adc
jg
mov
cs
fcomi
bnd
out
inc
push
js
test
mov
xchg
add
in
fwait
pop
pusha
push
push
stos
popa
sbb
scas
cmp
aam
xchg
sbb
or
ret
cmpsl
pushl
jg
bnd
pushf
in
ss
int
repz
push
pop
data16
lcall
popa
test
pop
add
movsl
sbbl
or
in
cmpsb
sbb
push
loope
push
popa
lret
jae
ret
mov
dec
jnp
imul
dec
test
std
mov
cmc
xor
cmp
orb
ljmp
and
sbb
pop
and
dec
in
jmp
js
lock
dec
aaa
sub
pop
ret
faddl
jae
jge
cmp
iret
mov
dec
inc
jae
scas
das
cmp
xchg
dec
sub
cmpsb
cwtl
jmp
sarb
scas
mov
jbe
sub
ljmp
fcmovnbe
dec
fwait
xchg
dec
adc
insl
pop
lret
pop
test
mov
mov
sub
xchg
movsl
mov
mov
in
fisubl
ret
push
or
cmp
jp
pop
cmp
mov
pop
adc
mov
lcall
mov
das
loope
ja
push
out
push
or
xchg
jae
jnp
push
xlat
jl
mov
into
sbbl
and
pop
addr16
addr16
and
sahf
daa
sbb
mov
push
or
loope
or
add
lock
aas
mov
pop
mov
lahf
adc
xchg
shrl
das
aas
popa
xor
sbb
jg
ror
jmp
aam
mov
popf
sub
rcrl
ss
iret
dec
push
cmp
inc
out
les
pop
mov
decl
jge
stc
and
add
cmp
lret
pushl
in
loop
mov
push
or
push
xchg
iret
ficoml
shll
cmpsl
enter
sbb
inc
mov
push
fstps
jnp
xor
xchg
xchg
repz
sbb
sub
stos
mov
loopnew
push
pop
dec
xchg
push
jle
adc
ljmp
dec
mov
jno
xchg
cltd
cmp
push
jl
in
hlt
loop
shl
inc
test
dec
sarl
cmpsl
dec
imul
sub
mov
mull
out
nop
fstps
sbb
int
add
flds
jb
shll
push
xchg
insl
xchg
test
mov
stos
dec
add
in
add
fdivrs
xchg
pop
scas
lds
mov
rcl
aas
aam
and
mov
roll
lahf
out
icebp
mov
push
push
cltd
jns
imul
inc
in
cmpsb
adc
sbb
xor
pop
cmc
add
frstor
pushf
add
add
outsl
cmp
jl
cmpsl
bound
adc
hlt
pop
mov
sub
mov
add
out
das
sbbb
lock
pop
in
movsb
or
imul
push
lret
and
dec
rclb
push
inc
jns
pusha
sti
lods
loope
loopne
jg
or
inc
fsub
popa
adc
outsl
mov
mov
mov
cmp
pop
fwait
ljmp
xor
adc
leave
xchg
cs
dec
mov
jno
lahf
or
dec
fs
jmp
imul
das
mov
sbb
leave
push
dec
add
aad
ss
cmp
or
xchg
push
mov
aaa
push
lret
enter
mov
jo
test
mov
mov
pop
push
rcrb
aad
adcl
sbb
icebp
inc
cmpb
cmp
loopne
mov
cmpsl
in
in
jge
div
jl
cld
lcall
lret
fsubl
and
cmp
in
mov
push
imul
hlt
test
and
inc
inc
pushw
add
xchg
push
cld
fs
out
and
xchg
in
scas
rorb
push
mov
lret
jne
out
push
lods
pop
fdivr
dec
dec
sub
mov
in
mov
or
cmp
xchg
shrb
pop
lock
xor
or
pop
jmp
push
push
jae
imul
mov
xor
or
inc
and
bound
mov
fsincos
lret
push
jmp
cmp
dec
mov
fidivrl
jne
gs
cmpsb
shlb
arpl
icebp
pop
lcall
lods
inc
mov
mov
lods
enter
out
test
and
pop
sub
mov
lods
in
pop
dec
jno
stos
fwait
shlb
movsl
popa
jge
jnp
cs
adc
out
jmp
mov
or
into
insb
cmp
das
adc
scas
sbb
bound
shll
mov
xor
dec
inc
fwait
jmp
scas
jle
push
pop
int
add
sti
stos
xchg
push
cmp
and
add
inc
je
shlb
clc
dec
js
push
dec
cmp
aad
or
daa
cmc
flds
jmp
pushf
addl
mov
jecxz
mov
imul
test
mov
or
fwait
push
leave
nop
fsubrl
or
out
pop
add
movsb
push
pusha
pop
cmpsl
test
sbb
sub
into
imul
je
xchg
mov
adc
movsl
nop
ja
pop
imul
mov
out
stc
add
mov
stos
leave
push
pop
cmp
data16
mov
shl
nop
lds
sbb
or
cmp
mov
inc
bound
mov
mov
adc
dec
or
dec
sbb
in
push
popf
cmp
es
scas
std
jno
pop
jge
popf
xchg
adc
xchg
imul
push
daa
dec
mov
pcmpeqd
jb
cmp
dec
adc
push
or
lret
rol
in
js
and
stos
dec
push
xchg
call
xchg
setae
pop
jp
lahf
mov
pop
daa
lret
push
ja
xor
test
mov
ss
cld
push
fldt
jnp
mov
push
lods
or
push
push
add
jmp
inc
cmp
push
mov
ljmpw
jb
lods
nop
je
add
mov
test
inc
cmp
call
push
and
push
lock
jle
jmp
shll
les
fucomip
aad
mov
fisubrl
mov
cmp
xchg
lret
negb
xor
cmp
dec
or
cmp
push
mov
sub
jns
inc
hlt
les
lods
adc
out
dec
sub
dec
inc
inc
andl
loopne
test
cmc
orl
nop
add
popf
xchg
popf
jne
mov
out
daa
clc
or
inc
out
jo
aas
pop
incl
xchg
push
xor
adc
cmpb
cmp
or
sbb
daa
push
xor
lcall
adc
std
cmpl
push
dec
aas
call
mov
mov
shlb
popf
push
sub
leave
xor
dec
jecxz
push
test
aam
mov
iret
mov
jmp
mov
xor
sub
jb
mov
cli
cltd
ljmp
int
pop
or
mov
ss
cmp
hlt
xchg
dec
push
in
add
mov
lcall
mov
jbe
mov
mov
dec
add
fwait
jo
out
or
push
in
gs
xor
mov
leave
push
mov
nop
mov
cmp
stos
jbe
orl
mov
inc
xchg
cwtl
mov
loopne
push
pop
push
jle
scas
sbb
and
mov
es
test
inc
sub
jmp
push
lock
insb
pop
in
or
mov
sbb
fldcw
inc
jae
out
roll
mov
inc
xabort
leave
or
jecxz
ljmp
inc
test
lahf
xor
mov
hlt
fildll
in
xchg
jecxz
dec
sub
pop
mov
lret
ja
xor
les
clc
pop
push
insb
mov
aas
mov
imul
adc
pop
call
out
rorb
and
push
les
ret
test
mov
jae
add
or
lahf
arpl
xchg
cmp
push
lea
fldz
inc
pop
cmp
dec
pop
lret
popf
xor
bound
es
xor
and
jae
jle
popf
xor
pop
and
dec
dec
shl
sub
cmp
sub
clc
adc
push
xchg
repz
ljmp
cltd
jl
jae
fidivl
lret
gs
rorl
lret
jmp
fnstcw
add
mov
fdivp
cmp
call
push
ret
enter
add
in
fdivs
adc
adc
and
lods
aam
sbb
xchg
pushf
mov
xchg
mov
cmpsb
pop
mov
cmp
or
shlb
mov
adc
stc
push
jne
and
jne
ror
es
dec
push
mov
repz
adc
mov
loopne
mov
pop
in
pop
mov
pop
inc
in
icebp
jg
incl
stos
loope
push
in
and
hlt
jne
push
cmpsl
push
mov
dec
imul
cwtl
mov
ficoms
inc
fistpl
aas
and
sbb
push
aam
and
pusha
sub
lods
lock
mov
dec
inc
push
mov
dec
xchg
loop
add
mov
cmc
adc
adc
mov
fisttps
and
fdivrs
adc
movsl
adc
enter
in
jbe
or
pop
mov
test
cmp
stos
ds
dec
xor
sub
jne
enter
stos
xchg
movsb
mov
pop
fs
jecxz
mov
negb
dec
xorl
inc
stos
jns
cld
xchg
sti
xchg
jne
add
scas
stos
cs
enter
divb
mov
push
mov
sbb
andb
loope
cmpsb
sarl
mov
sbb
outsl
ds
in
rolb
adc
or
out
iret
fnsave
test
arpl
add
and
cmpsb
xchg
jle
rorl
sbb
lret
rcll
out
sub
sbb
popa
mov
lret
shlb
rep
mov
sub
xor
pop
pusha
add
outsb
cmp
pop
mov
in
push
sahf
in
sub
and
and
cli
rorl
dec
sbb
es
jo
sub
fcoms
push
jb
add
dec
push
add
push
add
and
sub
or
jecxz
outsb
imul
dec
pop
push
adc
cmp
fsubs
das
leave
mov
mov
dec
push
stos
hlt
int3
fsub
adc
rolb
enter
fldl
cmp
pop
and
leave
inc
outsl
adcb
rcr
pop
mov
sub
jbe
ret
decb
movsb
movsl
repnz
shll
pop
push
sahf
inc
sbb
in
xchg
cld
xlat
dec
idivl
lret
or
fisubs
movsb
ficompl
test
xrelease
jo
nop
adc
mov
sub
imul
js
cld
mov
push
inc
xchg
xor
pop
xor
push
js
lret
in
movsl
jnp
sarl
mov
shr
cli
cmp
setno
pop
fs
push
dec
imul
ss
movsl
cld
icebp
jecxz
jp
ja
rcrb
sahf
mov
mov
mulb
jge
mov
sub
shll
fisttpl
mov
xor
lods
mov
mov
xlat
sub
xor
push
inc
popf
push
jl
xchg
lcall
dec
fwait
pop
xchg
xchg
sbb
adc
addr16
pop
dec
test
ja
and
orb
dec
xchg
ljmp
lods
jg
das
in
push
push
sub
xor
loope
mov
xchg
fnstsw
pop
adc
shrl
jl
js
and
pop
in
mov
ja
std
sahf
xor
jle
mov
repz
scas
or
add
aad
lock
popf
and
mov
mov
shrb
jo
dec
in
mov
sbb
xor
ret
cltd
outsb
add
mov
nop
cmp
xchg
ficoml
aad
in
cs
repz
pop
cld
pop
daa
lcall
pop
xor
scas
lds
loop
sahf
push
jp
sbb
push
dec
or
enter
pop
mov
xchg
add
mov
push
sub
movsb
or
push
mov
mov
rorl
stos
inc
inc
cmp
rcl
movl
inc
jbe
mov
mov
xchg
push
pop
das
sub
adc
ljmp
push
mov
and
push
or
push
cltd
inc
iret
fwait
adc
fmuls
mov
jmp
lahf
dec
fisubs
sbb
xchg
icebp
pusha
sub
lret
out
fadds
ret
inc
jbe
or
fsubrs
int3
cmpsb
push
bound
insl
sbb
add
mov
xchg
adc
adc
rolb
add
cmpb
aam
add
dec
sub
roll
imul
mov
jecxz
int3
pop
mov
sti
sbb
mov
pop
movsl
in
inc
cmp
lcall
icebp
xchg
cld
in
xor
mov
jle
call
jae
push
add
cmc
push
mov
rol
sub
inc
testl
ret
std
xchg
jno
lock
aaa
cs
mov
xlat
test
stos
adc
fstpl
jg
dec
out
ret
and
es
enter
insb
loop
inc
in
pop
test
dec
data16
push
pop
add
pop
jmp
cmp
std
js
mov
sub
jne
ljmp
shlb
test
and
adc
push
push
jp
rcrb
aad
sbb
call
insb
or
loopne
das
dec
cmc
adc
nop
popa
xchg
push
int
loop
jmp
es
mov
test
mulb
and
add
loope
cmpsb
sbb
xor
call
sbb
push
imul
addl
rcr
inc
cmpsl
enter
dec
inc
push
adc
call
pop
and
int
cwtl
mov
push
arpl
gs
clc
stos
jle
cwtl
jo
sub
xchg
lock
xchg
fcoml
lret
into
inc
popa
add
sbb
cmpsl
sub
out
sub
rorl
fnstcw
sar
adc
mov
push
adc
or
scas
cld
scas
push
fiadds
mov
out
jo
std
jae
mov
aam
pop
lock
jge
ljmp
mov
mov
subb
cld
pop
in
cmp
jno
scas
xor
cmp
add
xor
sbb
add
and
sub
les
outsl
cmpsb
sbb
rcrb
sbb
mov
pop
dec
add
aas
jle
loopne
lds
ret
mov
cmpsb
sub
lock
imul
sub
dec
adc
push
pop
mov
mov
inc
push
pop
dec
pop
sbb
xchg
xchg
cmc
push
sbb
lret
jg
stc
lock
mov
mov
push
push
inc
fs
mov
inc
inc
xor
je
ret
sbb
or
sbb
rcr
sub
lods
call
enter
and
mov
lret
mov
pop
dec
bound
sub
xchg
lea
mov
or
cld
and
lret
fstl
fcmovnbe
sub
inc
adc
in
add
cwtl
mov
into
xchg
cmp
push
popf
dec
or
mov
xor
pop
pop
rcl
lret
adc
std
sbb
out
dec
inc
pop
mov
mov
xchg
push
shlb
push
loopne
frstor
or
adc
mov
icebp
daa
cmpsb
dec
mov
jl
inc
movsb
jl
mov
cli
cmp
jnp
movsl
das
xor
cld
mov
adc
fdivr
insb
add
dec
filds
push
push
les
sarl
cmp
adc
cmpsl
cmp
out
xchg
idivl
add
mov
mov
imul
mov
popa
fldenv
push
imul
and
mov
cltd
in
mov
or
push
mov
add
push
test
sbb
popf
lret
fistpl
adc
fnclex
insb
xlat
pop
dec
fstp
inc
cmp
xchg
loopne
xchg
xchg
inc
cld
clc
das
pop
xchg
dec
daa
and
pop
jg
cmp
popa
push
iret
mov
inc
lret
aam
aaa
je
cs
jge
mov
xchg
cs
leave
or
mov
push
mov
xor
lret
xchg
jp
jb
fs
fists
adc
sbb
lods
aad
stc
mov
mov
xchg
test
sbb
fs
aam
mov
push
cmp
leave
mov
movsl
mov
scas
sbb
js
or
sub
inc
in
xchg
cwtl
inc
mov
adc
notl
sahf
add
cmp
add
cmp
insl
test
cmc
push
cmc
xchg
pop
cmp
mov
ja
xchg
popa
imulb
icebp
insl
cmp
fisubrl
xchg
cs
cmpsl
repz
mov
push
dec
jo
fdivrs
movsb
pop
test
insl
out
das
jmp
jl
push
lcall
pop
es
lods
lods
or
push
in
and
inc
lods
ja
xchg
stos
loope
or
mov
sub
mov
stos
jmp
add
mov
xchg
and
adc
inc
xchg
gs
push
mov
xchg
bound
mov
sub
rcrb
xchg
addr16
adc
ds
sbb
sbb
sub
push
aaa
adc
clc
dec
lds
adc
pushf
jnp
xor
mulb
add
inc
adc
je
int
jo
mov
mov
or
sub
mov
jle
push
leavew
add
cs
imul
imul
clc
xchg
xor
dec
jmp
dec
adc
pop
shll
dec
rcrl
inc
fwait
mov
mov
ds
cmp
fnstsw
push
int
sbb
mov
jbe
mov
sub
sbb
dec
fdivrs
xor
xor
xlat
or
rcrb
rcll
mov
add
jb
jge
and
sub
mov
mov
dec
cmc
ds
push
imul
mov
pop
std
scas
add
arpl
shll
mov
dec
pop
sbb
out
scas
jne
mov
mov
mov
cmp
cwtl
loopne
int
xchg
dec
mov
fimuls
and
outsl
jne
mov
jo
add
pop
loope
xor
lret
xchg
xchg
jmp
sub
addr16
shrl
inc
nop
fildll
call
inc
cltd
fucomi
outsl
push
lea
xchg
cs
leave
sbb
cli
out
mov
sub
push
aam
dec
sub
cmpsb
clc
gs
cwtl
bound
jg
decb
mov
test
pop
add
mov
inc
imul
dec
mov
test
cltd
fisubl
sbb
or
xor
push
jb
fwait
cmp
xchg
mov
sub
test
imul
xchg
jo
mov
mov
xchg
and
gs
out
push
pop
dec
ljmp
mov
sub
or
gs
xor
inc
sbb
pop
out
xchg
rcll
in
clc
loop
xchg
ret
mov
push
in
sbb
and
mov
jb
push
stos
jnp
fisttps
ljmp
les
addr16
fbstp
mov
adc
adc
sub
mov
lret
pop
cmp
out
push
cmp
out
cmc
lock
cmpsl
mov
push
inc
repz
inc
dec
je
insl
testb
pop
mov
xor
popa
add
inc
jno
or
and
xchg
aas
cs
or
sahf
cmp
ja
adc
in
mov
in
cltd
lahf
hlt
std
xor
std
sbb
popa
push
je
das
ss
stos
lods
add
pop
ds
add
ds
out
sub
dec
in
fwait
lcall
adc
int3
mov
xchg
popf
adc
ljmp
mov
incb
je
dec
cmp
xchg
adc
sub
push
inc
xlat
std
fxch
fcomp
or
push
sub
call
roll
out
mov
scas
cmp
mov
mov
jnp
out
lea
jne
mov
pop
leave
cmp
sub
hlt
pop
test
into
repnz
jne
ss
pop
xchg
leave
pop
adc
lds
sub
jle
mov
or
stos
scas
loope
pop
cli
repz
test
nop
aam
add
test
sub
cmp
nop
xor
popf
push
sbb
sbb
insw
xchg
leave
sahf
ss
mov
inc
dec
mov
sbb
jns
clc
fsubr
arpl
jle
aad
inc
ror
sahf
xor
fwait
pop
clc
dec
aad
je
shlb
stos
push
dec
mov
adc
sub
push
cmp
movb
enter
nop
negb
into
push
lock
das
fucom
or
aam
sub
icebp
test
out
pop
cmp
sti
out
adcb
int
jbe
cmp
adc
imul
das
mov
xchg
rcrb
push
sbbl
push
call
mov
int
dec
in
sub
testb
stc
jne
in
jae
int3
hlt
jae
adc
sarb
inc
test
fldl
jo
es
aaa
fs
pop
stc
mov
je
inc
psadbw
movsb
fistpl
dec
and
pop
pop
sbbb
pop
xor
pop
lcall
repnz
hlt
xor
xchg
jl
mov
scas
jb
fstl
fwait
jge
push
fnstcw
sbb
mov
dec
insl
fstl
and
inc
inc
out
adc
test
andl
jge
push
repz
aam
push
call
mov
pop
nop
pusha
ret
mov
push
xchg
stos
ret
and
sti
ja
mov
daa
fsubr
pop
iret
stos
bound
adc
ret
inc
add
cmpsb
out
lret
xchg
sub
stos
fwait
or
lods
jecxz
rol
xor
cli
repz
sahf
mov
test
icebp
aaa
adcb
cwtl
pop
aad
data16
in
orb
push
lahf
xchg
push
adc
sbb
scas
cltd
push
and
mov
or
lcall
inc
mov
sahf
popf
push
cmpsb
cmp
in
fsubs
jb
pop
adc
notb
ret
insb
push
pop
test
inc
push
sub
out
and
cmp
mov
mov
shlb
push
mov
adc
loopne
and
stos
in
ds
icebp
sbb
xor
or
pop
and
sub
add
cmp
sbb
js
sahf
mov
cltd
lcall
jne
shlb
fldl
pop
sbb
push
scas
push
jecxz
dec
outsl
orl
pop
dec
lahf
gs
fs
sbb
in
int
adc
or
lock
pop
in
jb
stc
cmp
dec
fs
loope
mov
push
xchg
arpl
jmp
pop
in
stos
jmp
push
sub
js
orl
pop
inc
adc
xor
stc
jl
bound
test
shlb
sub
mov
inc
cmp
push
movsb
fcomip
add
xchg
rorb
pop
xor
popf
bound
mov
imul
pop
mov
jo
or
xchg
call
notl
mov
adc
mov
ja
les
rol
ret
jbe
sub
mov
push
loopne
sub
sbb
and
adc
int
dec
add
leave
and
jae
lret
js
fiaddl
sub
xchg
jae
jp
mov
pusha
dec
test
leave
fcompl
inc
push
mov
jne
repz
and
cmp
and
xchg
pop
pusha
out
cld
dec
inc
outsl
leave
add
dec
add
mov
icebp
lock
imul
sub
jnp
cs
je
xrelease
adc
or
lea
mov
leave
pop
push
jns
arpl
ret
iret
in
mov
hlt
cmp
popf
pusha
inc
mov
dec
aas
sar
fcmovb
in
cmp
mov
popa
pushf
xor
pop
cmc
jbe
jne
sub
in
or
imul
and
mov
or
stos
cli
push
out
and
loope
add
sbb
pop
xchg
addr16
aaa
das
jl
add
add
std
ja
mov
sbbl
sub
test
int3
push
xchg
xchg
mov
cmpb
add
scas
scas
clc
xchg
mov
mov
adc
cmp
and
adc
sub
shrl
jnp
or
lcall
popf
add
arpl
mov
mov
mov
pop
cmp
dec
inc
in
ficoms
mov
xchg
sub
aaa
dec
push
outsb
push
andl
pop
cld
aaa
cmp
daa
adc
cmpsb
pop
out
sub
cmp
jns
fisubl
repz
ds
cmp
inc
cltd
addr16
out
bound
repz
cs
insl
push
fs
mov
xor
loop
imul
pop
lahf
movsb
or
lea
cmp
dec
lods
cli
icebp
jae
mov
fdivrs
and
fists
add
pop
cld
outsb
and
jle
leave
cmpb
push
and
sbb
gs
lds
push
out
push
adc
and
pop
out
movsl
push
lds
dec
inc
inc
adc
lcall
jmp
xchg
sub
inc
jb
adc
mov
sub
mov
jg
pop
adcb
ficomps
cmp
pop
rolb
jo
dec
jae
cmp
or
inc
std
jp
aaa
add
out
les
enter
cmpsl
addr16
push
cmp
or
xchg
lretw
pop
cld
sub
push
dec
sub
xor
je
cmp
gs
stos
pop
leave
push
cmp
mov
jb
ja
dec
dec
cmpsb
mov
xchg
push
cwtl
dec
push
push
push
and
or
imul
out
lret
dec
jnp
das
orb
pop
out
inc
mov
fcom
sbb
xchg
inc
push
outsb
jp
xor
adc
fcomps
dec
adcb
sbb
loope
cmpsl
mov
cmpsb
mov
popa
insb
and
es
es
xchg
or
bnd
in
fisttps
loop
out
nop
add
shlb
pop
mov
mov
js
or
pop
mov
sahf
pop
mov
push
imul
in
aad
or
cmpl
jge
jb
in
scas
imul
xchg
icebp
push
test
std
repz
aaa
fwait
test
sbb
out
xchg
lret
cmp
add
mov
mov
les
jp
xchg
sti
pop
pop
jecxz
or
scas
xlat
inc
clc
mov
out
fucomip
mov
notb
jae
roll
frstor
cwtl
fldt
sbb
shll
leave
sbb
fistpll
fisttpll
addr16
outsb
movsb
lock
jo
add
addb
cld
dec
mov
dec
daa
cld
and
sub
cmp
imul
inc
test
cld
adc
jge
mov
inc
push
jno
sbb
xchg
xchg
lds
test
outsl
fs
add
cwtl
mov
mov
xor
mov
test
jmp
inc
adc
cmp
jp
cld
loop
rep
adc
mov
add
daa
fnstcw
pop
and
mov
sbbb
xlat
dec
pop
out
orb
cltd
ret
push
push
scas
xlat
into
test
mov
je
add
imul
out
dec
or
pop
ja
sbb
out
jl
out
addb
cmp
push
or
mov
push
pop
cltd
add
ret
sub
int
dec
iret
inc
lock
daa
inc
jo
out
ja
int3
addr16
sub
sub
pop
aad
inc
std
test
ja
and
xchg
jp
pushf
pop
aas
or
stc
adc
mov
mov
pop
dec
sti
es
xor
sbb
add
pop
repz
sub
xchg
fidivrs
xchg
pop
push
rolb
adc
std
cmp
mov
or
pop
adc
inc
xchg
stos
lret
flds
sahf
repnz
add
out
movsl
out
jle
das
xchg
dec
imul
cmc
mov
inc
ret
js
je
mov
sub
mov
jge
int3
ja
and
push
jg
das
sahf
pop
outsl
daa
fiadds
xchg
xchg
test
aaa
inc
and
cli
push
xorb
loope
aam
dec
push
mov
mov
fs
inc
ss
adcb
cwtl
outsb
cmpsl
fnsave
inc
mov
sub
dec
pop
idivb
loope
sub
push
aas
stc
push
mov
cmp
inc
xlat
test
out
and
xor
sub
pop
mov
ljmp
mov
add
mov
cmp
pop
jecxz
shll
pop
cs
pop
jle
adcb
stos
pop
jnp
jmp
popf
mov
cmpsb
mov
mov
sub
jo
in
arpl
cmp
sti
jmp
fbld
dec
jle
mov
jmp
sub
idivb
cwtl
out
popa
ret
jp
fs
pop
stos
xchg
xchg
out
or
push
divb
mov
sbb
jecxz
mov
dec
scas
push
dec
aad
xor
sbb
and
aad
lcall
xchg
fcmovnb
fisubrs
and
xchg
insl
adc
mov
mov
aad
cs
das
cmc
mov
inc
outsb
push
adc
fdivrs
add
mov
std
icebp
sbb
jmp
lods
or
mov
stc
cmp
shrl
or
sbb
sub
loope
adc
scas
adcl
mov
mov
fcompl
ret
in
sub
mov
ret
repz
push
add
iret
inc
imul
mov
cmpsl
sar
test
jl
loopne
and
xlat
out
test
out
mov
mov
push
les
rorl
mov
ret
mov
add
sbb
or
jp
clc
inc
dec
js
push
cmc
pop
push
pusha
xchg
mov
mov
push
filds
dec
iret
and
sbb
data16
addl
pop
sbb
sbb
cmp
loop
mov
pop
push
and
xchg
test
mov
xor
aad
cmpsb
out
test
hlt
push
aas
notb
dec
xor
arpl
mov
pop
mov
in
dec
sub
xor
cmp
cmpl
lret
lea
pop
push
mov
cmpsl
or
repz
cmp
aas
jb
into
inc
es
out
test
jmp
mov
mov
or
mov
fistpl
add
call
out
and
imul
cmpsl
in
popf
pusha
loop
enter
scas
cmpsl
lcall
mov
fisttps
int3
sahf
jle
sahf
insb
fwait
lahf
inc
stos
or
sub
dec
cmp
cmc
out
or
sub
xor
pop
mov
in
shrl
pop
pop
mov
cmp
out
or
leave
push
lret
repnz
iret
mov
dec
pop
leave
dec
int3
adc
push
ss
loope
stos
imul
xor
add
popa
push
mov
mov
adc
icebp
inc
mov
test
nop
std
ret
sbb
std
mov
pusha
inc
scas
into
rorl
inc
pop
mov
ljmp
mov
in
sub
xor
mov
mov
pop
cli
xchg
nop
sbb
push
dec
add
pop
mov
add
xorl
test
fisttpl
subl
out
adc
add
shlb
mov
leave
sub
sti
dec
mov
ljmp
lahf
mov
xorb
jmp
push
loope,pt
pop
mov
mov
lock
enter
dec
push
jb
cmc
lret
sti
xor
jg
out
and
cmp
testl
jecxz
leave
scas
sub
inc
jo
jl
ja
rclb
add
jne
sbb
inc
div
movsb
mov
arpl
mov
call
jmp
mov
sti
int
sbb
pop
dec
dec
leave
clc
jnp
frstor
loopne
cmp
loopne
daa
pop
jns
shll
sub
add
insb
inc
js
inc
in
sub
fwait
xchg
inc
mov
jge
mov
movsb
mull
sbb
cs
in
pop
cs
dec
mov
and
lods
sarb
shlb
mov
arpl
mov
sbb
ret
lods
stc
inc
enter
cwtl
sbb
fistl
cli
jg
push
mov
stc
and
lock
decb
call
testl
out
push
jns
pop
loope
cmpsl
push
fisttpll
cmp
cli
or
and
push
scas
mov
mov
ss
or
popf
cmc
push
jbe
jmp
cmpsb
into
repz
push
mov
cli
inc
rclb
pop
ds
xor
xchg
and
jbe
push
pop
into
ds
pop
xor
neg
in
pop
stos
popa
pop
frstor
adc
push
pushf
xchg
fistl
rcll
sub
xor
xchg
cmpsl
popf
leave
jo
sti
insl
xorl
mov
jbe
jle
test
sub
pxor
mov
arpl
push
test
sub
push
rclb
sarl
pop
dec
xchg
cmp
cltd
fsubs
dec
loope
inc
cmp
rclb
cmp
leave
loopne
fwait
pop
xor
inc
std
ds
stc
ljmp
sub
fwait
lods
jp
stc
xchg
mov
stos
mov
inc
popf
or
xchg
outsb
outsb
fdivp
adc
addl
sub
rolb
push
adc
out
popa
pop
add
cwtl
sarl
stos
cmp
pop
movsl
cld
mov
lock
mov
imull
inc
pop
xchg
loope
mov
fmuls
mov
cs
ss
cmp
jp
mov
mov
sub
cmp
or
das
jp
sti
pop
xchg
mov
or
mov
dec
cmp
inc
push
and
imul
popf
mov
pop
dec
sbb
js
mov
jecxz
outsb
inc
test
mov
bound
dec
lahf
xchg
mov
add
test
jne
int
and
mov
scas
shll
lock
dec
pop
and
rcrl
loope
lock
push
movsb
out
and
adc
dec
jo
push
sub
cltd
cltd
xchg
mov
xchg
lods
jo
in
sarb
jnp
cltd
bound
ja
push
xorb
sbb
stc
adc
pop
and
stc
adc
aam
and
xor
push
mov
and
stos
lock
pop
pop
and
in
mov
in
add
ja
sbb
jle
out
add
jb
data16
or
data16
push
out
ljmp
sarl
sbb
jnp
rolb
add
test
sub
push
popa
dec
shr
pop
pop
xor
jns
lret
nop
dec
lret
pop
repnz
dec
sub
mov
push
xchg
dec
ja
cli
aas
ljmp
dec
sbb
enter
and
pop
sbb
insb
push
jp
aas
mov
popa
jno
dec
outsb
ja
fstl
mov
mov
mov
lock
pop
movsl
push
or
stc
bound
out
shrb
xorb
in
popf
rcrl
jbe
arpl
movsl
jle
xchg
int
call
add
push
dec
roll
mov
mov
cmpl
sbb
push
gs
cmpsb
stos
repnz
in
pushf
dec
jecxz
pushf
adc
hlt
pop
in
dec
ljmp
dec
adc
es
lock
data16
pop
and
add
jae
push
ja
movsb
jno
mov
add
push
mov
lahf
mov
sarb
xchg
cmc
mov
rol
cmp
mov
jmp
and
addb
cld
inc
add
cltd
ret
push
test
loopne
jbe
pop
lret
pushf
out
mov
sbb
sbbl
sub
repz
sub
push
xchg
lock
aaa
jl
cwtl
inc
push
gs
xchg
push
mov
jl
or
xor
cmc
adc
bnd
mov
adc
rorl
outsl
insl
orb
mov
scas
scas
imul
mov
dec
sahf
addb
testl
add
xor
add
cmp
fstpt
jb
ljmp
add
sub
mov
mov
stc
adc
inc
and
bound
psrad
jge
lret
out
dec
inc
stos
cmp
fwait
sahf
aaa
scas
in
scas
test
mov
data16
arpl
cmp
cmc
lea
movsb
adc
cmc
rorb
sub
mov
xchg
rorl
insb
dec
aad
aas
dec
jae
jb
outsb
pop
inc
in
arpl
mov
test
jl
loope
xchg
das
out
in
jae
xlat
xchg
add
fsubrl
inc
sub
lahf
in
mov
mov
cmc
pop
dec
xor
pop
loop
add
jecxz
inc
es
dec
test
sbb
xchg
xor
xchg
xchg
rcr
jecxz
inc
inc
cs
mov
fidivs
pusha
cmp
cwtl
scas
xorb
and
in
cmp
cld
test
sbb
lret
xchg
scas
fstps
inc
out
movsl
imul
pop
adc
insl
test
mov
icebp
or
insl
pop
cmpsb
jl
outsl
mov
mov
jmp
lods
pop
dec
sbb
icebp
gs
mov
or
repz
or
sbb
fstl
lds
fcmove
out
pop
bnd
mov
pop
push
lahf
and
and
mov
scas
cmc
xor
out
movsb
pop
pop
testl
stos
or
mov
mov
lods
out
inc
enter
cmpsl
push
mull
jbe
bnd
jae
imul
outsb
das
xlat
mov
dec
jmp
add
clc
sub
jb
xchg
xchg
test
test
adc
push
add
xor
fisttpl
ja
rep
pop
ret
sub
mov
xor
inc
rcll
js
iret
mov
mov
pop
push
int3
mov
std
pop
into
add
push
push
push
push
bound
test
fs
mov
hlt
cmp
test
fmull
or
or
pmaxsw
rorl
sbbl
and
dec
jb
ss
imul
ret
rcll
in
mov
fdiv
mov
push
fldt
lahf
push
jne
inc
fucomip
pusha
adc
fdivs
xor
inc
and
lock
add
outsl
subl
movl
cmp
call
idivb
in
subl
pop
dec
aaa
loope
xor
testl
xchg
mov
and
cmp
shlb
push
xor
arpl
ljmp
mov
push
test
insb
aaa
movsl
sub
out
push
mov
inc
jmp
pushf
imul
lret
dec
mov
jne
insb
popf
mov
fcoml
pop
xor
jle
pop
cmc
pop
aas
mov
inc
out
lods
pop
sbb
test
push
enter
jbe
dec
and
mov
xchg
outsl
lods
push
gs
fidivrl
pop
je
mov
syscall
lcall
xorl
or
rcl
dec
push
daa
and
lea
shll
push
popa
scas
jbe
repz
cmpsl
add
cli
or
popf
addr16
daa
fnstsw
mov
push
pop
loopne
xchg
outsl
xlat
sub
push
aaa
aam
mov
cli
inc
dec
in
movsb
movsl
mov
sub
addb
mov
fwait
jnp
jmp
fcoms
or
jns
rep
xchg
test
out
popa
filds
pusha
out
xor
cmp
adc
adc
add
in
mov
inc
aam
hlt
call
sbb
sub
push
incb
loop
call
inc
jne
xor
push
outsl
push
rcrb
and
jle
mov
dec
scas
flds
mov
leave
stos
xorl
adc
cvttps2pi
jne
test
or
in
xor
jmp
lret
inc
dec
xchg
fwait
push
stc
jae
les
stos
lret
push
lret
sub
inc
fs
push
or
lahf
movsb
in
push
xlat
movsl
xchg
or
mov
inc
or
pop
xorl
add
test
dec
dec
js
xchg
popa
roll
push
dec
clc
fidivs
dec
pop
sbb
fincstp
popf
dec
mov
add
lea
or
and
stos
inc
and
sub
scas
daa
and
out
and
dec
adc
shl
shlb
mov
jb
adc
insl
pop
dec
push
sbb
xor
push
adc
jp
cwtl
and
stc
jae
movsb
push
inc
enter
std
imul
inc
xor
xchg
or
inc
test
mov
lods
mov
call
stc
inc
insb
jecxz
push
push
xchg
pop
sub
jns
lods
mov
js
iret
mov
in
jp
jo
fdivrp
xor
add
aam
mov
and
leave
nop
pop
out
sub
out
pop
dec
adc
mov
daa
or
push
scas
jle
cmp
cltd
cld
mov
sar
out
ja
int
or
pop
jbe
pop
add
lea
in
mov
bound
xor
mov
addb
pop
frndint
pop
cltd
dec
mov
faddp
imul
mov
jnp
inc
and
dec
pop
inc
aas
scas
and
lock
dec
lods
gs
outsb
sub
jns
mov
cmpsb
rcll
xor
inc
xchg
in
out
sbbb
mov
into
add
or
xor
pop
lret
cmp
push
sahf
dec
ja
pop
mov
cmp
pop
xor
sbb
or
movsb
jbe
out
xor
jno
ds
xor
and
jae
arpl
mov
sbb
mov
ret
or
rcl
stc
cmc
repz
push
pop
scas
sbb
pop
cmp
pop
in
lcall
filds
mov
or
addl
sbb
aam
add
add
adcb
fmull
push
add
mov
jle
mov
push
fwait
movsb
into
adc
xchg
clc
das
mov
arpl
dec
sbb
dec
stos
jnp
cwtl
popf
push
add
fistpll
push
mov
xor
mov
fistl
les
fistpl
fildll
mov
fstl
fdivrl
sub
cmpsb
ret
xor
or
push
sub
adc
jp
mov
adc
dec
cli
lahf
push
aaa
int3
mov
push
lret
mov
inc
rorb
insl
orl
inc
call
or
ljmp
jl
imul
jbe
outsb
test
cld
add
push
movsl
pushf
out
out
push
lret
inc
leave
out
mov
daa
mov
sti
fwait
dec
add
mov
fidivrl
into
pop
sbb
loop
cltd
mov
bound
mov
aam
or
and
int
xlat
sub
cmpsb
je
movzwl
lcall
js
mov
mov
push
imull
jnp
xor
mov
ljmp
rolb
push
push
dec
pop
fwait
xlat
sarb
mov
aam
lret
pop
fisttps
repz
jmp
sub
cli
inc
xor
arpl
push
mov
aaa
cmpsl
addr16
mov
mov
lea
lahf
call
xchg
mov
mov
movsl
imul
dec
push
fimuls
lahf
add
xor
mov
push
add
cs
js
fs
or
rclb
dec
repz
dec
sub
jo
ret
in
jp
in
push
mov
pop
mov
dec
fldcw
sbb
mov
call
mov
cmp
mov
pop
int3
addr16
cmp
je
cmp
popf
mulb
fwait
jno
repnz
pop
test
test
icebp
cmpsb
sub
lret
push
and
dec
leave
mov
repz
jmp
mov
iret
stos
jne
out
cld
push
in
negb
std
jns
mov
ret
pop
sti
insl
call
jns
cltd
adc
push
push
mov
data16
popa
mov
call
fxch
aam
test
adcl
sahf
std
pop
xchg
in
pop
inc
cmp
fnsave
loope
insl
dec
pusha
dec
push
fists
jno
sub
jmp
popf
lcall
ljmp
jo
fcomip
adc
sbb
in
push
div
sbb
aas
cmp
lcall
test
cli
xchg
leave
mov
es
mov
jp
lret
sahf
nop
data16
push
jbe
les
mov
mov
sub
or
dec
das
into
out
scas
test
push
enter
fsub
out
bound
add
repz
rcl
push
das
mov
adcb
ret
pop
arpl
sti
in
insb
and
mov
mov
mov
push
popf
pop
dec
sarl
int3
fnstsw
pop
pop
out
mov
mov
iret
das
mov
scas
sbb
mov
jb
loop
cmc
roll
fwait
mov
jmp
mov
insl
in
mov
addl
hlt
pop
sbb
pop
cltd
or
xor
sti
sbb
iret
sbb
or
pop
pop
test
pusha
pop
and
cmp
sbb
xchg
outsb
call
stc
mov
ds
mov
lods
xchg
mov
out
sub
mov
inc
inc
loop
xchg
loope
push
bound
movsb
mov
and
jns
or
sbb
scas
int
fisubl
jb
sbb
mov
push
xor
push
inc
insl
and
pop
inc
outsl
jno
sbb
imul
fimull
mov
adc
mov
sub
pop
xchg
fidivl
outsb
lcall
fdivrp
mov
aam
hlt
jbe
jo
mov
mov
out
mov
popl
fwait
jl
jle
data16
jge
jecxz
cltd
scas
sar
xchg
rsm
xorb
cmp
adc
outsl
das
and
xor
ret
jge
lock
push
test
arpl
cmp
xchg
mov
and
and
je
test
push
daa
dec
xchg
dec
mov
rorb
mov
mov
inc
insl
xor
cli
add
and
cmp
lret
dec
mov
decb
inc
cld
imul
mul
dec
sub
clc
imul
stos
stos
pop
mov
adc
push
lods
movsb
and
outsl
cmpsl
add
jmp
sbb
adc
aam
shl
dec
sbb
loop
cmp
dec
xorl
ljmp
jns
outsl
test
fadds
sub
xor
iret
cmpsl
or
adc
ret
push
jmp
xchg
or
jne
into
mov
sbb
aaa
gs
dec
stc
fisubs
lea
mov
movsb
pop
mov
add
popf
cltd
pop
inc
jmp
in
push
roll
int3
sub
insb
xchg
pushf
andb
aad
js
sbb
mov
in
fscale
add
lea
pop
outsb
cld
sbb
aaa
push
ret
shr
fcoml
or
dec
mov
dec
out
iret
insb
insl
out
xor
data16
and
jne
fadd
mov
dec
sbb
sahf
push
cmc
movsl
rcrl
sahf
repz
mov
push
xor
repz
jo
loopne
in
mov
test
lock
test
test
divb
cltd
loop
lea
fisttpl
sbb
jg
xchg
dec
dec
outsb
cmpsb
scas
jecxz
ds
ret
and
pop
shlb
lds
divb
shlb
fcomps
lea
cmp
ficompl
lcall
mov
mov
and
mov
xchg
lret
mov
stos
fwait
enter
dec
push
mov
and
mov
call
inc
add
mov
movsl
mov
add
pusha
mov
push
rcr
addr16
data16
out
movsb
ret
mov
mov
push
jne
mov
cs
cmpsb
fdivr
lods
mov
call
dec
xchg
sub
adc
shrl
dec
subb
es
arpl
stos
sti
test
jg
push
mov
xlat
es
xlat
ficoml
jbe
pop
ret
leave
dec
mov
test
test
in
inc
mov
push
aaa
push
cld
lret
pop
cmp
addr16
sub
pushf
push
pusha
loope
movsl
jbe
mov
test
xor
insb
mov
add
jge
dec
mov
pushf
pop
leave
scas
stos
mov
add
and
inc
mov
xor
cmpsb
jnp
addr16
data16
mov
adc
scas
call
cmp
mov
sub
lock
jae
xchg
xor
ja
lret
mov
fstpt
push
jbe
dec
push
flds
scas
ret
inc
inc
idivl
push
mov
push
mov
movsl
stos
insb
add
out
addr16
loop
mulw
pop
iret
push
adc
ret
and
lods
dec
push
shlb
or
out
sti
mov
cmp
enter
mov
aas
or
mov
mov
subl
in
and
inc
std
jecxz
jbe
negl
dec
cmp
shll
out
mov
mov
fwait
lea
lea
push
sbb
jmp
xchg
gs
xor
in
jmp
lods
pushf
inc
rcrb
popa
jnp
add
and
int3
aaa
scas
gs
pop
mov
jle
jp
adc
mov
inc
mov
in
call
mov
and
mov
int
subb
lret
push
sahf
loop
fisubrs
jno
mov
mov
mov
mov
out
jmp
push
int
pcmpgtw
loop
outsl
in
inc
scas
add
test
add
ja
pop
lcall
stc
test
mov
sub
pop
push
sub
dec
jmp
lret
jg
xchg
or
lret
pop
fildl
sahf
mov
cmp
aam
shll
call
es
dec
dec
push
in
mul
inc
sub
gs
aad
push
cmp
sbb
gs
push
pop
adc
cmp
add
ljmp
call
push
sbb
jne
sub
sbb
inc
adc
rcrl
pop
aad
jo
pop
xor
xor
cwtl
inc
sti
and
scas
and
xor
mov
jb
jmp
push
inc
mov
fmuls
idivl
inc
sti
jnp
fs
sbbb
mov
cmpsl
mov
out
cltd
out
imul
daa
ja
jg
cmc
add
sbb
sub
pop
stc
adc
lods
pop
add
movsl
jbe
in
mov
inc
clc
out
lret
lret
in
notl
jmp
xchg
mov
data16
mov
dec
repz
and
cli
mov
xchg
add
dec
pusha
pop
jnp
ja
jae
mov
pop
cli
enter
mov
mov
ljmp
xchg
add
arpl
lcall
into
das
popf
imull
cmp
stos
add
cmp
sbb
mov
sahf
repz
push
and
jge
mov
cli
pop
mov
cmp
and
inc
ret
pusha
loop
ja
pop
mov
push
push
sub
sub
call
out
or
imul
sub
idivl
loopne
shll
movsb
hlt
jmp
jmp
cmpb
sub
or
add
add
fucomi
stc
mov
jmp
nop
mov
icebp
fadds
adc
test
sub
mov
aas
adc
and
or
xchg
loope
clc
insl
jnp
xchg
adc
lods
bound
cmp
jmp
sti
sbb
mov
popf
pop
in
outsb
cmp
sub
out
pop
mov
fnstcw
int
int3
jo
imul
lods
and
or
movsb
or
xlat
jle
push
add
jecxz
cmp
push
xlat
out
pop
mov
outsl
ss
add
xchg
ret
xor
in
mov
mov
daa
jae
cmp
orl
jbe
clc
sbb
and
mov
lret
adc
sti
pop
hlt
mov
imul
mov
std
jp
shld
sbb
test
adc
inc
dec
pop
fs
repnz
pushf
pusha
xchg
scas
jne
in
xchg
sbb
ja
cmp
and
movsl
ficompl
mov
dec
fldenv
imul
call
test
inc
cmp
cmp
jp
add
mov
fndisi(8087
inc
push
fwait
mov
dec
mov
mov
mov
and
or
outsl
xor
xor
cli
aaa
cltd
push
jecxz
jp
cmp
lret
mov
out
sbb
adc
xor
lds
push
push
enter
dec
sub
stos
or
out
dec
or
into
mov
ror
inc
in
mov
movsl
xor
movsl
imul
hlt
sub
shlb
jb
xchg
inc
push
or
mov
sub
xchg
sbb
cmp
pop
jo
mov
xchg
in
rolb
dec
in
cmp
inc
subl
inc
jb
shrb
add
mov
adc
push
cmp
clc
lods
xor
pop
inc
cli
sbb
ret
dec
jle
outsb
or
lcall
xchg
push
dec
push
les
lss
ret
sar
pop
in
mov
xchg
pop
or
lcall
mov
or
dec
pop
in
les
jbe
jns
cmc
ror
std
pop
pop
cli
dec
cmp
sbb
sbb
sbb
aas
mov
rcrb
mov
shl
mov
adc
push
adc
enter
pop
ret
movsl
cs
int
jle
and
int3
stc
and
aas
in
cld
outsl
lcall
mov
insb
jae
pop
xor
or
or
adc
lgs
push
lods
ret
mov
cwtl
mov
mov
cltd
das
loop
std
add
lods
test
lret
add
loope
inc
push
mov
adc
pop
fistl
sbb
mov
and
cmovl
fdivr
or
ljmp
mov
push
gs
and
xor
jl
jecxz
aaa
sub
mov
out
add
icebp
repz
andb
cli
jo
mov
stos
pop
fstpt
pop
jae
mov
jae
push
cmp
mov
popa
push
ljmp
daa
insl
aaa
jmp
adc
bound
aam
lods
call
rcrl
pop
jb
adc
sub
stos
ret
repz
cmc
mov
pop
xor
stos
mov
es
cmp
stc
add
dec
xor
mov
jne
jmp
in
xlat
sub
pop
cmc
jae
and
pop
pop
dec
repnz
add
inc
loopne
pushf
sbb
outsl
xorb
loopne
lds
jns
popa
out
bnd
mov
and
sub
pusha
and
ret
adc
daa
mov
pop
mov
dec
cmpsb
jg
adc
sbb
sub
mov
ss
xchg
lea
inc
inc
xor
or
pusha
jle
xchg
mov
outsl
lcall
lods
mov
aaa
sarl
or
test
and
das
movsl
mov
int
pop
push
idivw
shrb
push
xchg
fsubrl
add
xchg
dec
dec
or
push
sub
pop
push
stc
lods
int
loop
lea
inc
fwait
and
xor
dec
xor
bnd
add
aam
leave
pushf
push
or
movsl
xchg
cmp
xlat
jl
jno
repz
adc
and
andb
xchg
push
and
mov
push
cmpsl
stos
mov
adc
rclb
es
mov
stc
ret
inc
std
cld
fistpll
sub
lahf
dec
xchg
test
push
sti
out
mov
sbb
jmp
roll
push
mov
pcmpeqd
cmp
aaa
jle
xor
pop
adc
add
fwait
pop
sti
mov
int3
push
jb
mov
and
je
mov
inc
adc
mov
dec
push
cmp
js
adc
xchg
and
cmp
jg
hlt
mov
pop
pop
pop
mov
push
pop
movsl
pop
rclb
sub
push
cmp
test
or
adc
mov
dec
aas
repz
or
adc
cmp
sub
sahf
sbb
mov
shll
popf
mov
mov
es
push
lret
push
stc
das
jmp
and
fadds
nop
push
stos
aad
mov
addr16
cmp
gs
or
pushf
mov
add
xchg
fisubrs
in
pop
jle
pop
dec
aam
js
aad
adcl
sub
jns
imul
mov
movsb
jo
icebp
repz
push
mov
add
out
push
data16
jle
loop
loope
mov
test
ficompl
and
or
les
xor
inc
or
adc
data16
pop
jo
das
push
movsl
dec
das
ret
in
mov
push
xor
push
addr16
pop
mov
into
scas
xchg
lahf
pop
hlt
loop
sbb
stc
pop
mov
xor
jne
dec
fstpl
sub
and
std
push
mov
sub
sub
pushf
ss
adc
mov
push
nop
fdivl
push
out
mov
dec
cmp
aad
push
mov
fldl
movsl
leave
fistpll
movsb
pop
mov
popa
lret
jp
out
push
imul
and
cwtl
ja
test
lret
enter
jno
xor
cltd
ds
insl
fcomip
mov
popf
daa
xchg
shll
out
ss
jbe
xor
add
in
mov
inc
mov
je
addl
test
outsb
dec
movsb
out
test
enter
pop
ficomps
fildll
dec
or
pop
mov
mov
dec
mov
push
cmpsb
dec
fldt
mov
push
loope
je
adc
jmp
inc
jg
inc
aaa
jecxz
fwait
es
jbe
outsb
xchg
aam
xchg
adc
arpl
jp
ljmp
push
pop
xor
int3
sbb
or
lret
pop
aad
repnz
cmp
outsb
push
sbb
hlt
lret
mull
cs
add
push
adc
gs
mov
sub
lret
pop
in
loop
or
xor
cltd
jmp
cmc
test
inc
ret
shr
xchg
call
pop
cmp
shll
mov
hlt
xor
addr16
dec
pop
xchg
xlat
mov
cmpsb
inc
adc
rorl
das
xchg
gs
subl
cmp
or
fistpl
mov
out
sub
in
push
out
add
ja
mov
js
aam
xor
aad
adc
shl
daa
dec
jo
sbb
xorl
jno
xchg
mov
fldcw
loope
xlat
pop
fisttps
idivb
lret
scas
sbb
pusha
aam
dec
xchg
mov
and
push
sub
rcrl
and
sarb
mov
mov
aad
test
stos
frstor
repnz
in
sbb
lods
outsb
movsb
cmp
pop
js
xorb
out
push
add
leave
andl
dec
and
das
and
dec
or
jle
xchg
push
inc
iret
pop
jecxz
divl
push
mov
cli
inc
push
jns
mov
mov
fs
push
xchg
push
inc
dec
sub
add
lret
jbe
call
mov
jno
stos
sti
hlt
std
outsl
stos
xchg
lock
popa
and
adc
and
and
sub
sub
xchg
repnz
popf
xlat
xor
data16
aad
dec
pop
outsl
popa
inc
imul
and
std
imull
loopne
mov
sub
adc
out
mov
arpl
cmc
shlb
mov
push
sub
icebp
adc
out
push
test
fnsave
gs
mov
inc
test
mov
sbb
fisubrl
cmpsb
popa
add
inc
xchg
fidivs
mov
or
sti
cmp
inc
xor
test
call
repz
mov
stos
mov
jmp
jp
inc
repnz
mov
int3
test
mov
xor
and
in
dec
test
addl
clc
jge
push
fcoms
scas
mov
sbb
jle
in
cmc
cmpsl
or
fdivrp
mov
jl
and
inc
push
fisttps
and
mov
mov
test
pop
push
int3
enter
cld
fs
mov
push
hlt
out
jl
hlt
loope
xor
scas
dec
or
push
xchg
pop
add
jae
inc
pop
push
mov
pushf
jmp
add
push
sub
mov
sahf
std
xchg
insl
sahf
pop
jne
pop
jecxz
movsb
in
icebp
inc
mov
mov
dec
lds
stc
std
sti
xchg
cltd
cwtl
hlt
fisubs
jl
fisttpll
leave
loop
push
adc
insl
pop
xor
mov
jbe
push
fs
sbb
and
push
lret
push
stos
pop
nop
mov
add
mov
outsl
jle
push
jno
loop
loop
sbb
out
fdivrl
sbb
in
in
mov
sbb
jg
push
sub
fnstsw
jbe
push
jb
push
adc
mov
notl
mov
mov
in
fidivrs
fucomi
xchg
bound
js
sbb
lds
xchg
arpl
mov
dec
repnz
mov
enter
fnstsw
mov
pop
add
lcall
std
inc
pop
mov
and
cltd
push
aas
imul
push
push
mov
jns
movsb
sub
and
shll
or
data16
cmpsb
js
mov
mov
arpl
push
add
sahf
loopne
or
mov
xchg
and
stos
jle
in
push
lret
push
pushf
addr16
xchg
adcb
sahf
sbb
in
cvtps2pd
or
cld
pop
mov
js
imul
dec
sub
xchg
bound
mov
pushf
xchg
mov
lcall
orl
out
addr16
outsl
xor
cmpl
pop
je
sar
or
lock
jb
ss
lea
popa
ja
ds
pop
adc
or
call
xor
xor
mov
aas
int3
adc
pop
cwtl
jbe
dec
and
push
add
xor
jl
cmpsl
pop
std
into
pop
popa
mov
push
push
fdiv
adc
inc
rorb
xor
push
mov
mov
shll
cmpsl
xchg
and
adc
xlat
call
movsb
xor
mov
setae
push
mov
cmovne
cld
mov
jae
jp
mov
and
sbb
ljmp
test
out
bound
xsha1
cmpsb
int3
test
repz
rol
aas
xchg
and
push
cld
pop
movsl
add
mov
out
cltd
mov
pop
mov
scas
sar
mov
xchg
scas
or
std
jge
dec
lcall
aaa
nop
dec
jo
sub
add
push
jb
out
mov
ljmp
push
or
ficomps
pop
movsl
pop
lea
adc
jg
lret
cmp
mov
adc
mov
notb
sbb
xor
in
mov
mov
cmc
cltd
popa
cmp
cld
jae
sbb
outsb
mov
add
dec
fwait
and
inc
xchg
push
dec
sbb
xchg
in
ret
int
or
xor
mov
test
popf
scas
insb
lahf
repnz
xchg
pushw
mov
mov
pop
dec
xchg
mov
sbb
popa
jnp
push
scas
mov
and
fsubrl
sbb
pushf
outsl
and
popa
roll
mov
out
pop
ja
add
or
adc
lods
dec
scas
fnstsw
jmp
dec
cmpsl
push
lods
or
cmpsl
jae
xchg
push
add
mov
cmovge
test
sub
push
cmp
add
xchg
mov
mov
dec
mov
jmp
and
in
add
lds
mov
jno
aam
fwait
jle
mov
push
mov
arpl
or
out
mov
aas
jb
movsb
iret
aam
lds
mov
inc
idiv
enter
xchg
incl
mov
adc
insl
insl
in
mov
mull
mov
add
aam
sbb
mov
jecxz
inc
jle
imul
push
adc
lret
push
or
iret
pop
inc
mov
and
mov
outsl
xor
push
push
mov
jb
mov
aaa
sbb
loop
jl
sub
push
addb
pop
push
cs
daa
movlps
stc
je
add
xchg
or
movsl
mov
mov
jno
adc
mov
add
fsubp
push
inc
xchg
pop
js
dec
sbb
hlt
repz
popa
push
xorl
cli
roll
mov
das
in
or
and
push
sti
js
xlat
ljmp
pop
cmc
fsts
movsl
clc
lret
je
xchg
dec
inc
and
inc
xchg
cmc
incl
sti
add
out
adc
push
xor
pop
pushf
sub
mov
bt
push
add
movsb
cld
in
jl
pop
sbbb
and
iret
addr16
push
xchg
movsb
loopne
addr16
push
push
jl
cld
std
ficoml
gs
aaa
mov
loopne
sbb
je
cwtl
pushf
mov
jb
sub
jno
push
dec
sti
sahf
adc
and
jp
xchg
daa
out
int
cld
std
add
adcb
jae
and
inc
adc
jno
cmc
adc
mov
setle
arpl
je
shrl
jecxz
push
dec
add
daa
xchg
sbb
das
inc
sbb
xor
out
xchg
inc
loop
outsl
outsl
push
orl
sbb
dec
pop
rorl
dec
fimull
xor
ss
cmp
cld
lret
pop
sub
push
in
cmp
and
scas
stos
out
mov
push
mov
lahf
repz
adc
mov
mov
pop
fimull
cld
sub
and
jmp
xor
push
fs
setne
ds
push
and
adcl
testl
add
sar
mov
mov
jmp
test
in
jl
pop
xchg
scas
mov
jle
dec
in
mov
repnz
or
mov
pop
inc
arpl
fistps
and
cmp
into
divb
jns
xchg
mov
pop
or
push
sbb
ret
clc
lret
or
out
push
aas
jl
push
or
not
push
and
mov
sub
lock
mov
jb
loope
mov
lret
dec
loop
xchg
data16
mov
insb
xchg
lods
mov
xchg
test
cmp
aam
xor
mov
es
bound
leave
aad
sub
lahf
int
push
outsb
xchg
lea
inc
push
cmpb
lea
xchg
mov
sti
cmpsb
xor
inc
outsl
sbb
and
fs
pop
and
cmp
ljmp
aaa
jns
pmovmskb
cwtl
or
pop
repz
adc
xlat
sub
adc
movsb
subl
and
dec
adc
pop
xchg
int
and
xor
lods
fldenv
int3
les
add
sbb
cmp
movsl
ret
hlt
xchg
out
cmpsb
sbb
or
jg
sub
arpl
fsubrl
gs
cmpsb
sahf
inc
sub
or
pushf
movsl
cmp
in
jnp
lock
out
imul
xchg
sbb
lea
rcrl
inc
shrl
sti
iret
push
lods
cmc
aad
imul
out
mov
xor
sbb
lds
pop
stos
arpl
jb
aaa
lods
push
or
mov
imul
sbb
mov
mov
or
dec
out
cmpb
sub
in
inc
sbb
adc
xchg
and
push
das
je
das
sub
xchg
push
sub
insl
and
scas
push
rclb
lods
or
ljmp
xchg
jne
cmpl
jp
pop
pop
cs
mov
dec
dec
or
cmc
jge
aaa
mov
sbb
mov
movsl
imull
mov
push
mov
insl
pop
sarb
out
out
xchg
mov
xor
push
ret
repz
imul
pop
ljmp
jnp
ja
es
loope
or
mov
mov
ffree
stc
outsb
dec
iret
or
or
ds
or
sub
mov
add
aad
mov
xchg
dec
lods
xor
push
jle
scas
push
mov
jge
cs
adc
sbb
ret
addr16
in
push
sub
adcb
pop
sub
inc
jle
in
int
insb
mov
cmp
push
mov
ljmp
icebp
test
lea
inc
push
pop
hlt
dec
xchg
sahf
and
xlat
bound
lods
jno
in
loopne
lahf
add
push
add
pop
inc
pop
sub
fildl
add
push
xchg
add
xchg
pop
or
bound
sub
shll
sub
xchg
int3
pusha
stc
int3
pop
call
ss
and
sbb
lods
mov
dec
sarb
das
mov
fcom
repz
scas
mov
cmp
push
mov
scas
adc
mov
bound
jl
outsb
jp
mov
adc
pop
lret
sub
hlt
les
imul
push
rcrl
orb
aaa
insl
data16
fstpl
shr
inc
jmp
pop
pop
test
in
cli
mov
dec
adc
push
pop
fistl
sbb
scas
sub
movd
das
push
pop
inc
xchg
in
mov
movsl
lods
xor
addb
or
cmpb
push
repz
lea
push
jae
and
lea
ret
mov
push
pop
in
mov
xor
xor
and
inc
xlat
push
arpl
ret
sbb
push
sbb
pop
fsubrs
jo
ret
jle
lock
pusha
dec
movsb
mov
inc
adc
mov
mov
mul
or
jnp
xchg
mov
outsb
dec
jp
mov
lahf
fcmovnu
jl
or
mull
mov
jecxz
push
inc
iret
mov
popa
mov
inc
and
push
inc
or
xchg
push
dec
ret
outsl
xchg
dec
xlat
jecxz
stos
or
movsb
clc
jno
js
push
inc
sub
add
imul
mov
lret
fildl
xor
repz
jge
jbe
lods
or
imull
mov
cld
lret
push
mov
xchg
cmp
movsl
dec
test
jl
sbb
leave
push
test
jg
mov
mov
xchg
loop
fistl
sbb
out
cmp
inc
dec
in
clc
xor
lods
aas
inc
dec
sti
jmp
test
jns
sub
daa
jno
or
int3
inc
mov
and
enter
popf
jecxz
dec
or
ficompl
lock
lock
test
cmp
jmp
or
mov
jae
cmc
jp
add
jno
les
cld
adc
les
stc
jp
call
push
pop
mov
xchg
leave
push
cld
imul
jnp
inc
daa
mov
or
cmpsb
out
aaa
lock
ret
rorl
adc
dec
add
sbb
cld
mov
mov
inc
dec
arpl
push
inc
or
xor
into
cmp
mov
mov
dec
xor
add
push
sbb
addb
fwait
pop
sbb
call
in
cmpsb
inc
scas
add
movsl
lock
xor
xchg
out
or
inc
sub
mov
rcl
rcll
inc
out
test
inc
adc
mov
sbb
jns
sub
loope
sub
daa
xchg
inc
lods
data16
sti
dec
xchg
and
dec
fldcw
sti
fsub
mov
xor
loopne
insl
pop
stos
push
mov
fmuls
shrb
jl,pn
addps
loopne
lret
cld
sub
out
sti
movsb
mov
cmp
sti
sahf
and
mov
lock
aas
cld
out
nop
aad
dec
inc
aad
sbb
aas
clc
rclb
inc
adc
test
sub
lret
imul
push
push
imul
call
sub
loopne
ljmp
out
loop
out
in
scas
cmp
jp
pop
mov
mov
fs
push
cwtl
rorl
push
jnp
movsb
in
mov
gs
jle
mov
fs
faddl
push
mov
in
movsb
stos
sub
bound
inc
add
loopne
into
fstp
repz
mov
sub
jno
xlat
bound
stc
ret
pop
loope
jl
add
sbb
les
data16
das
mov
scas
inc
mov
das
roll
mov
cld
adc
jnp
fimull
sub
mov
sbb
xchg
pop
pop
fcmovnu
pop
hlt
insl
pop
dec
imul
scas
out
arpl
mov
or
aam
les
xor
pop
xor
push
mov
push
sub
cltd
or
mov
lods
sarb
sahf
sahf
pop
js
lea
xchg
mov
mov
ret
pop
xchg
adc
in
lea
dec
inc
mov
fs
jg
loope
and
cli
and
pop
or
sbb
sub
push
fs
push
sub
jmp
cmp
sar
les
push
dec
bound
pop
xchg
lds
daa
std
pop
fs
pop
push
push
push
ja
xor
pop
jmp
xor
cmpl
xlat
aas
inc
cld
cmpsb
jl
mov
mov
mov
aas
mov
mov
or
clc
movsb
xchg
leave
xorb
cmpsl
jnp
arpl
push
mov
or
hlt
out
sub
outsl
hlt
in
cld
call
stc
sbb
in
movsb
cmpsl
ffreep
ds
fbstp
sub
xor
pop
adc
mov
cmpsl
mov
in
sub
cld
push
add
push
ret
dec
jmp
rcr
jp
jbe
ret
bnd
movsl
movsl
pop
es
xor
fwait
gs
sbb
jns
adc
data16
lea
lcall
mov
arpl
addr16
pop
mov
rolb
jo
addr16
mov
xchg
dec
xchg
push
mov
or
iret
jo
shll
je
jmp
dec
lods
or
ljmp
cltd
pop
dec
sbb
sub
jge
push
pop
or
shll
lahf
add
sub
and
shrl
push
adc
std
pusha
repnz
iret
inc
jno
je
mov
push
fdiv
add
rolb
das
sbb
xchg
mov
fstl
mov
jae
cmp
and
decb
jne
mov
xor
aam
lods
mov
pop
dec
inc
jbe
adc
pop
dec
push
and
push
inc
clc
shlb
mov
sbb
gs
es
mov
jnp
cmpsl
jmp
push
addr16
xor
iret
inc
xor
push
outsb
cs
ret
and
pop
jns
fildl
add
push
xchg
lretw
imul
cmp
cltd
test
mov
out
sbb
cltd
outsl
decl
je
mov
jnp
sbb
inc
or
sub
int
sbb
jno
xchg
imul
subl
aam
adc
das
test
adc
adc
test
cmp
jnp
popf
and
mov
sbb
mov
sbb
inc
mov
test
mov
sahf
jp
iret
cmc
jge
push
inc
lret
mov
mov
in
push
in
push
test
lock
in
out
push
sbb
ds
cmpsb
popf
push
stos
clc
adc
mov
addr16
jae
or
push
ss
lsl
mov
enter
subb
imul
inc
in
rclw
pop
pop
fidivl
repz
daa
fsubs
mov
adc
pusha
inc
loope
arpl
add
fstl
bound
call
sub
scas
mov
and
push
xor
filds
or
adc
inc
sbb
jns
rorb
xor
addr16
lods
xor
sub
push
and
xchg
mov
call
xor
es
and
jns
sbb
jmp
ret
or
lahf
sub
or
sbbb
mov
inc
mov
lret
cld
inc
pop
clc
outsl
dec
scas
cld
xlat
xchg
in
fldt
or
dec
fldcw
mov
scas
jp
daa
icebp
inc
sub
loopne
shrb
sbb
leave
sbb
loop
ljmp
mov
mov
xchg
mov
not
fnstenv
jmp
lret
sbb
add
cmp
xchg
mov
jmp
xor
pop
aam
mov
adc
adc
mov
jns
pop
ret
popa
sub
mov
push
mov
inc
test
clc
scas
jecxz
xor
jns
push
adc
cmp
adc
sub
shll
js
push
jmp
push
mov
rorb
push
cmp
aad
adc
fs
bswap
jb
gs
in
or
push
outsl
int3
xchg
rcrb
cld
rcrb
std
jg
subl
clc
repnz
lods
scas
cmp
leave
sahf
adc
inc
xchg
xchg
push
jmp
push
stos
mov
lock
jecxz
adc
cli
jbe
push
sahf
and
mov
xchg
sahf
sti
push
int3
or
int
sub
push
and
sbb
repz
push
add
push
lea
sub
cmc
pop
inc
push
jb
das
ret
aaa
in
jge
ljmp
lcall
out
hlt
jno
nop
mov
xor
push
inc
shrb
sub
outsb
mov
dec
ljmp
cmp
add
pop
movl
sarb
add
dec
xchg
orb
outsb
gs
pop
xor
in
xchg
in
push
out
aad
add
jnp
push
pop
push
arpl
jecxz
push
sahf
pop
int
pop
shlb
ja
mov
nop
shrl
sbb
divl
dec
scas
and
repnz
fwait
popa
xchg
adc
xchg
dec
pop
lret
test
outsl
push
mov
mov
loope
mov
in
pop
out
sbb
pop
outsb
mov
icebp
and
jo
testl
in
sub
and
xchg
dec
das
push
int
stos
roll
sbb
lea
rclb
inc
in
mov
pop
mov
jle
cmp
pop
scas
adc
ss
push
dec
fcomip
fsubrl
stos
add
xchg
mov
push
pop
inc
rorb
je
hlt
mov
loope
cld
cmpsl
in
xchg
insl
aas
mov
pop
sub
cltd
or
inc
dec
sub
dec
stos
xchg
das
mov
cmp
pop
arpl
pop
je
lcall
inc
sbb
imul
pop
lret
bound
outsl
mov
mov
jmp
in
scas
or
gs
std
out
push
mov
xlat
xchg
js
fisubrs
mov
repnz
fcomp
inc
and
pop
cmpsb
fiadds
lods
cld
not
in
pop
dec
xchg
mov
lret
popf
lcall
popf
fadds
add
or
sahf
or
inc
shrl
lahf
cmp
insl
mov
push
and
push
scas
xor
jno
mov
jg
inc
mov
pop
leave
imul
pop
sbb
cmp
icebp
stos
xor
inc
stos
sbb
mov
stc
push
mov
fs
cld
mov
dec
lods
and
dec
xchg
loopne
xchg
push
add
stos
mov
cmpsb
mov
mov
or
xor
ret
daa
jmp
scas
out
movsb
mov
test
or
movsl
out
sar
popa
add
cld
push
jmp
cmpsb
cmp
clc
pop
mov
push
es
fimull
es
ja
xchg
inc
mov
cltd
ret
mov
pop
int
cwtl
pop
addr16
ljmp
aad
xchg
in
mov
or
xchg
mov
ret
pop
arpl
decl
cmpsl
mov
and
mov
paddw
pop
gs
mov
mov
mov
aaa
pop
aaa
cmc
or
bound
rorl
and
and
cltd
push
ret
dec
out
lret
pushf
xchg
iret
cmpsl
loope
xchg
pop
in
call
sbb
dec
pop
lahf
int3
push
rcrb
test
jne
test
cwtl
and
lods
jecxz
enter
pop
test
mov
mov
cli
ss
xor
pop
mov
push
gs
out
inc
in
xor
std
pop
les
insb
add
or
aas
aam
jge
mov
xchg
shll
lret
sarb
stos
repz
cs
int
fdivl
enter
lret
mov
mov
adc
rcrl
push
cmp
clc
xor
dec
jnp
data16
fld
sbb
dec
lcall
int
repz
xchg
xchg
adc
inc
xchg
loop
or
add
pop
sbb
repnz
outsb
out
insb
mov
stc
shll
jnp
mov
gs
inc
je
cmp
shrl
mov
jl
mov
out
jae
aaa
inc
ljmp
and
or
iret
lahf
sub
in
shlb
inc
cmove
dec
mov
jnp
push
mov
inc
in
cmpl
outsb
add
daa
pop
mov
lods
repz
sub
mov
xchg
fistl
add
out
xchg
xchg
adc
sbb
ss
pop
enter
nop
jo
inc
mov
inc
movsl
imul
movsb
enter
push
fs
mov
lods
cmpl
xchg
mov
inc
dec
dec
scas
or
lods
into
fbld
lret
fcompl
xchg
sbb
mov
mov
inc
fbstp
or
adc
jnp
popa
into
lret
imul
loopne
xchg
cmp
lock
pop
or
outsb
add
loop
into
dec
sti
push
pop
push
mov
pop
push
inc
dec
and
rcrl
ret
and
sbb
lcall
les
xor
aad
pop
mov
xchg
fs
xor
pop
pop
shll
xor
add
push
xor
push
out
dec
or
jo
gs
fwait
test
ficomps
mov
mov
sti
enter
dec
movsl
mov
add
add
sub
loopne
movsb
sbb
cmp
rcr
je
xor
mov
mov
hlt
xchg
lea
pop
pop
inc
mov
test
inc
int
lds
iret
sub
push
pop
mov
fwait
test
repnz
sbb
mov
cmpb
ds
fwait
adc
or
dec
aaa
xchg
mov
xor
testb
pop
dec
repz
les
xchg
dec
hlt
cli
test
cmp
xchg
push
lret
pop
cwtl
sub
adc
mov
and
add
addl
leave
adc
push
leave
ds
cmp
cwtl
shlb
int3
jmp
shrl
xor
xor
imul
cmp
dec
adc
scas
das
sbb
divl
lods
jae,pt
nop
test
mov
or
xor
dec
aaa
xchg
and
or
aas
shlb
aaa
ret
es
push
mov
push
adc
or
push
inc
imul
mov
jne
sahf
pop
jl
jmp
das
mov
fsubs
shl
sub
fmulp
xor
xchg
cld
gs
repz
out
rcll
cmpsl
mov
rcll
notl
pop
sbb
cld
push
lret
jne
insl
jne
pop
xor
dec
xor
lock
xchg
jle
inc
ret
push
sahf
repz
in
jp
mov
pop
push
sbb
jo
sub
cltd
push
and
les
adc
sub
or
dec
adc
sub
cwtl
inc
push
inc
daa
mov
sahf
fwait
mov
hlt
data16
mov
je
push
shrl
sbb
popf
push
sub
push
sbb
les
mov
fnsave
and
xor
add
mov
in
sub
xchg
xchg
mov
loope
fcoml
mov
aas
cmp
data16
aam
mov
aad
push
inc
push
scas
fmul
dec
sbb
stos
ljmp
cmpsb
shrl
cmp
xor
mov
xor
vpsubq
jmp
orb
popf
inc
fnstcw
inc
dec
pusha
nop
fisubrs
out
adc
xor
cmp
gs
movsb
pop
lahf
jae
frstor
pop
push
bound
xor
cmc
fldt
or
imul
or
sub
jmp
in
add
push
or
imul
cmp
inc
xchg
in
popf
jnp
push
pop
add
mov
ja
cmp
pop
movb
insb
in
out
mov
push
or
pop
or
stos
test
out
imul
je
mov
mov
and
fcmovb
pop
cmova
sub
mov
xor
aad
rolb
xchg
pop
shl
insb
jecxz
loope
pusha
dec
push
xchg
lea
push
cmp
out
movsb
es
cmc
movsl
mov
add
ljmp
fs
lock
sbb
xchg
out
std
push
push
aam
adc
dec
sahf
aam
les
insl
pop
sbb
pop
sbb
cmp
push
xorb
dec
sub
adc
add
or
xchg
ret
arpl
into
add
mov
and
neg
push
filds
test
ss
sub
or
fwait
dec
xlat
nop
xchg
movsl
daa
jne
or
lcall
push
jbe
into
cli
fsubs
in
enter
loope
cmp
xchg
add
jnp
push
mov
mov
mov
arpl
xchg
xchg
mov
subl
mov
xchg
jg
fldt
add
or
or
lods
je
push
pcmpeqd
cmp
sti
cmp
adc
inc
pop
cmp
mov
shrl
scas
out
push
xor
call
fldenv
out
dec
pop
dec
mov
ret
fisttpl
xchg
jbe
out
out
cmp
sbb
mov
pop
sbb
dec
lods
test
adc
jbe
push
cmp
xchg
sub
inc
xchg
mov
out
mov
movq
add
lret
xchg
cltd
or
jmp
mov
lret
out
cmpsl
pop
sbb
loop
fcomps
or
or
cwtl
fcmove
jnp
xorl
jb
push
negl
sub
push
dec
dec
push
xchg
push
push
and
sub
in
lock
out
and
aas
xor
mov
sbb
movsl
mov
sbb
sub
add
mov
or
test
loop
push
or
cmp
popf
fs
fisttps
push
cmp
pop
test
xchg
pusha
sub
int3
cmp
lods
sbb
pop
mov
outsb
scas
jge
mov
and
imul
loope
fldenv
adc
fcomi
sub
les
out
or
sbb
in
jno
add
lcall
cmp
cli
and
sub
cmpsl
mov
fwait
xchg
and
or
dec
sti
enter
fcmovnb
and
out
adc
adc
jge
les
into
sahf
pusha
or
sbb
mov
js
fmul
std
jmp
pop
jl
sahf
cmp
pop
imul
sub
dec
jecxz
test
push
pop
pavgw
sahf
popf
pop
sarl
xchg
pop
xchg
sahf
flds
stc
cmp
lret
popl
xchg
and
imul
jp
sbbb
pushf
mov
popa
lcall
inc
xor
cmpsb
int3
push
jl
mov
push
add
int
push
lock
jge
mov
xor
pop
adc
cmp
inc
pop
lods
js
clc
inc
mov
test
adc
xchg
adc
xlat
insl
dec
mov
icebp
mov
and
arpl
adc
dec
cmp
std
mov
push
push
push
insb
xor
shll
daa
dec
mov
pop
xchg
push
scas
insl
dec
popa
jne
cmpsl
cmp
mov
sub
jo
pop
xchg
lcall
repz
jp
mov
int3
mulb
test
repnz
out
leave
jmp
shrb
lds
xchg
cwtl
mov
sbb
or
aas
or
mov
push
sahf
jp
iret
inc
aaa
lret
lret
and
in
cmpsb
xchg
push
ret
pop
mov
mov
lcallw
xchg
sub
push
ds
cmp
xchg
cmp
lret
fwait
icebp
and
sbb
mov
push
xchg
jecxz
add
stos
std
mov
pop
mov
imul
xlat
inc
andl
cmpsb
xacquire
sbb
jmp
xchg
sahf
clc
mov
xchg
loop
fcomi
adc
push
mov
out
mulb
and
mov
xchg
or
iret
loope
sbb
cmp
add
fcmovnbe
cmp
xchg
xchg
or
add
pop
mov
je
cs
imul
xchg
push
sbb
stos
dec
imul
into
mov
imul
and
inc
clc
adc
ret
out
push
and
inc
mov
ss
enter
sub
dec
orb
xor
mov
stc
mov
adc
movsb
out
fmul
inc
push
dec
mov
sub
jge
xlat
mov
xchg
or
aam
gs
inc
push
lods
jnp
add
ljmp
jns
pushf
inc
or
nop
mov
cmp
pop
push
inc
pusha
and
adc
xchg
xchg
out
lods
push
cmpsl
mov
je
xchg
push
ret
arpl
scas
aas
cmpl
push
inc
sub
fwait
jg
pop
es
push
mov
std
jp
xchg
mov
mov
mov
stos
sbb
mov
xor
xor
shlb
mov
sti
push
xor
loop
rorb
jns
je
mov
cmp
sahf
xchg
movsb
xor
adc
add
arpl
and
xchg
scas
fsub
adc
inc
mov
mov
or
loope
mov
xor
sub
cs
mov
popa
inc
xchg
and
rorb
and
mov
dec
loope
or
xor
lret
daa
lods
jne
pop
lcall
test
pop
jno
loopne
sub
xchg
enter
cltd
subl
mov
jmp
lret
rcrl
inc
sbb
jb
pop
and
mov
in
and
push
sarb
mov
out
xorl
xor
jp
in
sub
dec
pop
pop
addl
js
daa
pushf
movsb
dec
xchg
cmpl
sub
xchg
and
inc
icebp
dec
in
fisttps
jecxz
pop
sbb
test
add
xlat
lock
pop
mov
jge
pop
imul
pop
vmaxss
sbbl
cli
dec
hlt
roll
mov
fdiv
daa
push
cmp
lea
xchg
jge
mov
adc
lcall
pop
fstps
call
loopew
out
mov
push
mov
nop
cli
mov
xor
out
movl
divl
fs
add
and
in
xor
mov
aad
jno
xor
dec
test
sahf
adc
cmpsb
xlat
lods
mov
push
sub
mov
jne
vmovlps
lcall
pop
push
xchg
lds
sub
roll
jb
sti
sar
pushf
pop
fstpt
xlat
loopne
inc
adc
lods
popf
adc
push
jl
iret
outsl
ret
cmp
xchg
sub
dec
dec
in
or
adc
cmpb
and
in
stos
dec
jb
es
test
test
pushf
sub
inc
push
mov
jmp
pop
into
pop
push
cmpsl
and
fldcw
sub
push
and
add
popa
sti
mov
pop
in
sbb
dec
test
sub
es
popa
ds
bound
int
test
jp
or
outsb
mov
xchg
push
dec
or
lods
xchg
pop
or
test
or
js
ficoml
outsl
mov
xchg
shll
jne
lret
lock
or
aam
jge
addl
xor
jae
iret
jecxz
add
testl
sti
push
push
rorl
inc
mov
movsl
xchg
inc
push
dec
add
or
fs
mov
ss
std
test
ds
fdivs
or
lret
push
jb
xchg
sub
and
jo
add
movsl
push
push
sarb
imul
cmp
enter
mov
mov
sarb
xchg
loopne
data16
jg
sbb
jmp
ljmp
xor
es
add
test
es
sub
gs
cmpsb
mov
sub
jb
mov
xchg
mov
arpl
jno
push
test
out
sbb
adc
fisubl
pop
into
xchg
xchg
and
mov
mov
or
fldenv
shrb
and
sahf
lcall
shlb
shll
outsb
in
add
mov
pop
mov
or
movsl
in
and
cmp
jb
and
movsl
bound
mov
xor
adc
dec
mov
push
stc
sbb
bound
pop
loopne
lds
mov
mov
popf
cmp
adc
add
test
and
lea
int
ja
je
stos
xchg
mov
mov
dec
mov
jne
in
push
jge
test
sbb
repnz
jbe
arpl
pop
imul
icebp
insl
jg
ss
xor
lcall
dec
xchg
inc
repz
push
aam
add
aas
das
xchg
popf
int
pop
mov
sbb
mov
cwtl
mov
iret
jbe
int3
cwtl
fisubl
out
lcall
imul
mov
push
mov
cmc
loope
fwait
ret
cmpsb
std
mov
push
enter
xor
js
stc
pushf
add
nop
std
xchg
rol
ja
jg
fbstp
jge
pop
pop
pop
xor
adc
xchg
xchg
pusha
lods
mov
add
and
lcall
pop
roll
les
jne
mov
mov
les
and
pushf
xor
sbb
cmpsb
xor
fs
cmp
div
xchg
push
hlt
mov
cmp
int
pusha
cmp
inc
sbb
jmp
pop
mov
hlt
adcl
loope
gs
jne
lahf
inc
cmc
and
and
or
bound
inc
mov
clc
and
icebp
movsl
sbb
jg
imul
add
xchg
lret
jge
dec
sub
cmp
xchg
xlat
mov
int3
push
mov
aam
pop
pinsrw
sub
cmp
setbe
or
bound
lods
and
pop
mov
aaa
in
mov
subb
push
in
adc
fbstp
push
loop
movsb
test
cmpsb
addb
ret
push
aaa
dec
sub
inc
mov
mov
cli
es
lds
jne
xchg
xchg
repnz
mov
xchg
leave
pop
jmp
pop
movsb
movsl
sub
hlt
out
adc
dec
and
cli
pop
std
mov
pop
bound
cmp
shr
adc
mov
dec
cli
adc
dec
pop
pop
subl
lods
cltd
pushf
stos
push
sub
shl
pop
push
jb
sub
xor
leave
sub
adc
and
cmp
ret
cmpsb
das
imul
scas
fptan
dec
stos
dec
pop
and
jne
sub
mov
xor
add
fwait
sbb
mov
hlt
add
fnstenv
or
mov
std
and
push
insb
dec
push
outsl
add
notb
push
pop
lock
inc
inc
iret
and
int
xchg
pop
xchg
jecxz
shr
jle
sarl
mov
add
test
test
in
inc
cmpsb
xlat
pop
aam
mov
mov
sub
push
ja
add
js
xchg
lcall
fisubrs
pop
aad
inc
les
out
scas
xchg
mov
add
pop
push
jbe
pop
cmc
int3
cmp
pop
mov
and
jg
sbb
scas
stos
xor
test
inc
gs
xchg
loopne
dec
xchg
fucom
pusha
daa
inc
push
aaa
dec
sbbb
or
ret
push
push
cmpb
inc
cmp
sti
decb
xor
inc
mov
xchg
jg
cmp
int3
pusha
mov
fwait
aam
xchg
ret
sahf
imul
dec
test
dec
jbe
jecxz
pop
arpl
cmp
xchg
aad
add
test
cmpps
test
add
pop
lock
scas
inc
and
int3
dec
js
in
fdivrl
pop
and
or
cmp
insb
sbb
or
pop
pop
loopne
sbb
or
mov
das
cmp
xor
shll
inc
out
roll
fdivl
push
insb
add
mov
repnz
cmpsb
ret
mov
xchg
test
dec
and
fistpll
sub
mov
cmp
arpl
xor
mov
jmp
aad
out
lret
lds
shlb
sub
push
mov
add
lods
lcall
pushf
xorl
dec
xchg
xchg
mov
test
shrb
sti
imul
fs
testb
lea
sti
je
or
fnstenv
loope
and
filds
jbe
insl
pusha
jmp
outsl
test
mov
gs
mov
jmp
rorb
push
rcrb
pop
daa
bound
cmp
mov
pop
imul
push
xchg
nop
push
mov
mov
sbb
mov
int
es
pop
test
add
stc
cmp
pop
and
js
fisubrs
fsubr
loop
sahf
mov
addr16
mulb
pop
mov
inc
cwtl
jl
rcrl
in
inc
jg
mov
in
aas
mov
outsb
cmp
bound
sarb
addr16
xchg
and
sub
inc
mov
fmull
mov
rorl
dec
aaa
enter
insl
ret
add
idivl
lret
aam
std
cmp
dec
enter
pop
push
sub
or
adc
sarb
or
fistpll
into
sbb
fiaddl
dec
pop
cmp
out
mov
sbb
add
lock
out
rorl
xchg
shrb
adc
mov
ja
jo
jge
dec
in
mov
std
push
lahf
sbb
dec
lds
ja
xchg
out
dec
pop
inc
icebp
jg
scas
fistpl
sbb
inc
push
xchg
and
pop
push
leave
ja
lock
dec
mov
ret
mov
ret
sub
cmpsb
and
mov
cs
into
inc
push
fs
jecxz
xchg
fcoml
jbe
stos
in
cld
cmpsl
jg
sub
adc
add
fstpt
mov
mov
sahf
js
adcb
inc
ljmp
stos
cmpb
mov
xor
cmp
cmp
add
fildll
ds
daa
push
dec
sub
in
mov
jb
cli
cmc
fdivl
jge
in
pop
loope
pop
cs
test
xor
out
mov
push
js
mov
xchg
sub
in
loopne
adc
sbb
cmc
aas
sbb
sub
sub
test
dec
inc
mov
cmc
fucompp
jge
push
andl
cmp
stos
cwtl
loop
jmp
ror
mov
ja
cmp
xchg
mov
and
cli
cwtl
nop
loope
test
jl
and
push
iret
test
adc
push
sbb
jg
mov
dec
mov
mov
mov
dec
add
fmulp
aaa
adcb
add
push
mov
adc
in
mov
es
into
insl
mov
div
push
mov
jg
imul
out
xchg
mov
push
xchg
pop
jge
sub
loope
sbb
push
cmp
lea
add
je
jge
or
inc
and
orb
enter
jo
add
pop
push
pushf
cltd
mov
stos
dec
repz
incb
mov
jo
ss
cltd
out
cmpsl
adc
adc
pop
in
and
inc
ss
dec
icebp
fcomp
mov
ljmp
subl
pop
mov
ret
mov
add
daa
push
scas
int
fwait
enter
fimull
mov
sub
add
pop
scas
cmp
fisttpll
ret
xor
and
fistpl
aas
stos
adc
test
adc
je
xchg
call
and
je
popa
fcomps
xor
fmuls
fdivrl
insl
and
inc
shlb
pusha
cs
or
subl
int
and
in
fidivrl
sub
jns
jno
pushf
pop
fists
call
sti
xor
mov
jg
outsb
mov
mov
clc
js
test
cmpsl
cld
pop
and
daa
mov
loop
xchg
lds
sub
pop
adc
mov
outsb
sub
mov
scas
mov
aaa
into
dec
push
cmc
inc
pushf
or
insb
and
adc
jl
lods
inc
add
mov
xor
mov
mov
xchg
insl
xor
xor
or
scas
sub
cwtl
outsb
aad
jg
hlt
test
rolb
mov
push
inc
inc
je
enter
push
rol
mov
pop
inc
insl
leave
dec
push
adc
xor
enter
inc
test
cs
outsl
sub
enter
xor
or
pop
nop
cmp
jmp
jmp
push
es
pop
es
add
sub
repz
pop
xchg
dec
jnp
push
in
enter
in
mov
dec
adc
aad
lea
xor
xor
pop
xor
ljmp
add
js
cmp
adc
xchg
fcomip
call
ja
inc
push
xor
ffreep
out
mov
repz
loope
inc
dec
xor
call
adc
mov
subl
icebp
push
mov
lock
jmp
mov
or
orb
xchg
movsb
repnz
pop
sub
lahf
enter
cld
out
fcmovb
mov
xlat
push
out
imul
out
cmp
test
add
jle
and
fstps
sbb
push
pushf
xor
xchg
fwait
xchg
xchg
cmp
jne
and
jns
dec
sub
into
adc
gs
mov
fisubs
sub
and
mov
fst
daa
dec
push
adc
sub
pop
enter
sub
inc
inc
cmpb
mov
xchg
push
ss
cmp
subl
mov
mov
push
push
insb
into
inc
cmovp
cwtl
sbb
ss
mov
dec
mov
movsb
mov
mov
leave
ficomps
cmp
cmp
in
mov
mov
jp
adc
dec
push
adc
xor
sahf
enter
mov
out
ljmp
jmp
mov
loope
sti
in
addps
adc
pop
leave
mov
or
sbb
clc
cmp
jmp
mov
inc
lock
addr16
les
sub
daa
jae
push
jg
je
addr16
fbstp
or
dec
cld
shrb
jae
lock
lods
push
jmp
mov
out
push
lock
aad
or
xchg
pushf
test
pop
mov
cmpsb
xor
loopne
roll
repz
int
fwait
mov
pushf
lea
imul
push
fxch
inc
pop
mov
cs
orb
leave
cmpsb
fwait
jno
pop
adc
sbb
ret
jb
les
inc
aam
ret
addr16
fdivrs
pusha
gs
mov
mov
repz
sub
pusha
ja
test
imul
inc
test
inc
dec
idivb
loope
push
xchg
jae
popf
xchg
add
add
adc
dec
sub
sbb
into
jno
mov
pop
push
scas
cmp
adc
cmp
mov
fwait
mov
in
scas
or
and
call
lret
lods
inc
lock
mov
nop
jl,pn
inc
hlt
out
fs
ljmp
ss
in
xchg
shlb
xor
push
adc
xchg
xor
negb
cltd
les
sub
sub
jecxz
sub
insl
pop
movsl
test
xor
xor
mov
ds
arpl
stc
inc
mov
jecxz
cmp
sti
loope
es
int3
in
mov
cmpsb
mov
inc
push
xlat
sub
mov
xor
addr16
push
shlb
clc
pop
stos
fwait
mov
int
ret
cld
cmp
repz
sbb
push
mov
inc
cmpsb
xchg
imul
repnz
pop
sbb
pushf
inc
push
test
sti
in
bound
cwtl
fnstenv
sbb
and
or
dec
lods
aas
pop
into
insl
sbb
push
ljmp
jns
jp
adc
repz
xor
cmp
aas
push
call
vphaddwq
dec
inc
mov
lret
adc
jecxz
mov
sub
adc
and
sbb
jns
roll
stos
push
notl
mov
pop
and
inc
cmpsl
mov
sbbl
mov
icebp
and
pop
xor
sub
popa
sarb
xchg
xchg
jg
jle
inc
lds
sub
push
mov
repz
fisttpll
push
ds
xor
mov
out
nop
out
incl
aaa
insl
dec
cltd
mov
pop
sub
jmp
sub
fwait
lds
nop
out
inc
fdivp
lock
jl
xchg
les
mov
shll
push
sbb
stos
std
xor
shl
mov
xchg
pusha
loop
je
xlat
pop
js
adc
into
dec
inc
mov
aam
icebp
inc
cmpsb
icebp
mov
sar
and
fs
adc
aas
add
bound
out
push
jl
into
hlt
cmc
mov
cmp
pop
cmpsl
shlb
jo
or
scas
mul
pop
add
frstor
sbb
dec
xchg
jle
jb
cmp
jg
mov
arpl
mov
out
cmc
movsl
repnz
stos
leave
enter
fmuls
or
sub
fstpl
inc
mov
mov
mov
mov
add
test
ud2
aad
jge
rcrl
cli
aam
pop
sbb
lods
or
sti
xchg
je
ja
out
lods
outsl
mov
pop
and
test
xchg
or
cmp
call
sbb
or
cvtpi2ps
daa
or
mov
lahf
mov
xchg
arpl
or
jnp
mov
mov
std
cmc
adc
test
popf
cltd
push
xor
jp
lods
neg
sbb
sbb
pop
test
aad
cmp
inc
movsb
mov
sub
das
ljmp
mov
xchg
out
jge
mov
roll
popf
stos
and
push
or
mov
push
clc
mov
test
mov
mov
adc
repz
fwait
push
out
inc
cltd
xchg
cltd
leave
js
cmp
jg
push
dec
loop
and
loop
mov
imul
or
das
fs
sbb
sbb
imul
test
sbb
mov
movsb
iret
add
adc
or
scas
jne
mov
shlb
xchg
hlt
dec
fisttpll
jl
insl
add
sub
pusha
sbb
daa
cmpsl
pop
mov
lret
cltd
dec
pushf
jge
sarb
inc
stos
xor
mov
pop
pop
inc
mov
stc
sti
xor
mov
add
sbb
xor
xor
cmp
adc
gs
mov
add
popa
pusha
mov
imul
ljmp
xchg
das
out
rcll
mov
add
inc
cmpsl
cmpsl
fwait
jmp
test
adc
jmp
cmp
jae
pop
xchg
sbb
and
mov
push
mov
jp
mov
cmp
aas
lea
pop
imul
xor
jne
cmpsb
fsubr
loop
jle
ss
lods
repz
test
fs
lock
xor
mov
std
push
fistl
dec
jmp
add
shrl
cli
add
pop
cs
inc
insb
ds
mov
mov
insb
in
cmp
repz
jle
scas
addl
mov
cmp
and
inc
call
xchg
adc
out
push
xchg
imull
inc
mov
ret
mov
mov
xor
mov
or
scas
cltd
cmp
scas
enter
mov
dec
test
popf
mov
jmp
daa
jno
sbb
insb
jae
mov
inc
add
mov
mov
push
das
in
adc
pop
adc
xlat
push
pusha
push
mov
icebp
test
iret
mov
bound
lret
dec
stos
cmp
ret
sarl
test
insl
in
ss
mov
rcr
pop
fldl
push
out
aas
cmpsb
jae
add
je
adc
pop
mov
xor
in
popf
ret
int3
mov
rorl
mov
sub
lcall
dec
mov
fdivr
push
in
shlb
mov
faddl
mov
std
lahf
xor
cmp
xchg
jno
pop
mov
sbb
and
in
ret
inc
cld
push
pop
out
xchg
into
js
das
mov
sub
std
bound
jmp
stos
push
push
pusha
mov
cltd
push
sarb
fsubr
lds
movsl
je
pusha
add
push
adcl
je
in
js
jae
dec
dec
jle
jmp
pop
pop
pusha
push
rclb
and
dec
pop
repnz
mov
inc
addr16
gs
loop
pop
aad
ror
adc
pop
adc
cmc
repnz
lea
lret
cld
repnz
adc
std
ret
stos
lahf
sub
dec
adc
leave
incb
imul
mov
mov
cmpsl
mov
dec
cmpsb
lock
dec
jp
fdivs
push
aas
xchg
adc
aas
jecxz
jns
or
cltd
sti
sub
cmp
jmp
call
add
scas
inc
andb
add
nop
cmpsl
movsl
das
mov
inc
or
xor
cltd
pop
xchg
cld
out
test
data16
dec
xor
int
jbe
and
sbb
mov
rol
xor
sti
push
iret
inc
xor
lock
pop
add
clc
cwtl
call
inc
ror
push
mov
pusha
push
in
xchg
xchg
jae
cmp
or
call
nop
dec
int
sbb
dec
xchg
fwait
cmp
cmp
xor
test
xlat
sub
sbbb
dec
dec
addr16
jns
int3
jae
inc
lods
rclb
sbb
fwait
mov
sub
xchg
push
mov
insl
adc
lret
fnsave
loop
inc
xor
adc
inc
scas
xchg
pop
out
mov
cmc
fbstp
pop
pushf
in
shrb
rclb
fwait
int3
xor
jno
fistps
xchg
dec
xchg
clc
addb
mov
loope
lret
cmp
mov
mov
mov
pop
mov
inc
out
out
fnsave
pushf
jmp
loope
mov
repnz
daa
cmp
add
out
dec
mov
cmp
fwait
mov
lahf
jmp
xor
dec
mov
push
das
xor
ljmp
push
push
xchg
call
jp
arpl
outsl
jge
sti
dec
dec
push
fwait
test
mov
fldl
dec
js
movsl
rorl
pop
stc
cmp
pusha
xchg
fs
pop
outsl
push
cltd
jbe
sub
mov
ljmp
rcrl
fiadds
iret
inc
dec
sub
fists
push
jno
xchg
popf
push
mov
xlat
imul
vsqrtps
pop
sub
mov
add
push
lcall
lds
or
jbe
inc
ds
xchg
mov
push
inc
cmp
pop
dec
xchg
push
xor
adc
sub
add
ss
mov
bound
clc
in
fidivrs
jl
xchg
inc
out
fmuls
or
jle
mov
sti
or
mov
sbb
dec
enter
ljmp
addb
pusha
mov
andb
daa
leave
fsub
push
je
push
popf
imul
xlat
cmp
shl
loop
inc
mov
mov
and
dec
pop
stc
sbb
xchg
pop
jb
pop
add
or
inc
pushf
aas
push
jnp
mov
push
xor
jmp
aam
gs
push
pop
dec
ret
pusha
mov
pop
jecxz
xchg
cmp
aam
movaps
iret
mov
lahf
insb
loope
lret
xor
inc
xchg
popa
notb
cli
sub
mov
lcall
test
xor
sbb
je
xor
popa
mov
adc
pop
sub
add
mov
nop
jl
cs
sbb
cld
fcmovbe
addl
mov
adc
add
clc
mov
and
iret
cmp
pop
mov
insb
mov
pop
and
call
add
jle
xor
mov
add
xchg
dec
adc
or
push
bswap
and
fistpll
out
rolb
ret
xor
rorb
mov
sub
sbb
sbb
xor
out
jbe
sbb
xor
sbb
sbb
mov
adc
addr16
dec
int3
mov
push
clc
gs
sbb
dec
notb
fdiv
insb
test
xor
adc
insl
mov
and
lret
sub
or
bound
out
push
call
repnz
push
jno
cmc
mov
jno
mov
sar
inc
adc
scas
add
mov
push
mov
push
push
pop
loopne
lret
mov
or
ret
push
jmp
nop
mov
push
xchg
cmp
sarl
bound
mov
jae
and
add
xor
xor
lret
mov
mov
push
leave
daa
mov
scas
andb
stc
xchg
cmp
or
out
shr
movb
lret
xor
insb
fmuls
jo
test
push
sbb
arpl
rcrl
mov
add
imul
cltd
cmpsb
fmuls
sub
dec
sub
lds
fs
imul
pop
loope
mov
std
xor
data16
xchg
jle
unpckhps
xchg
fildl
es
adc
xor
fcmove
and
lea
aas
icebp
dec
xor
mov
adc
cmpsb
jno
jae
insl
adc
cld
std
jmp
repnz
mov
notl
daa
mov
lock
cwtl
lcall
and
ljmp
rclb
popa
cmp
xorl
pop
or
aaa
jbe
push
lret
cmpsl
fld
in
int3
jno
sahf
sbb
push
push
jo
dec
out
ja
pop
insb
mov
xchg
roll
mov
loope
and
popf
jl
sbb
or
inc
and
call
add
inc
push
stos
adc
fnsave
sub
leave
jae
xlat
idiv
or
mov
test
push
mov
push
stos
divb
sbb
pop
or
pop
pop
pop
sbb
cmp
fistl
pop
bound
cmp
adc
ds
aas
insl
push
int
push
dec
out
jnp
xor
or
fldcw
jmp
daa
pop
in
pop
dec
enter
enter
sbb
aad
sbb
test
test
iret
xlat
inc
pop
dec
movsb
pop
loope
jmp
imul
or
js
out
sbb
dec
lret
test
and
push
stos
mov
stc
inc
xor
scas
loope
adc
ja
daa
ret
or
xchg
xor
inc
dec
ret
mov
sbb
loop
mov
sbb
fldenv
jmp
mov
cmp
jg
stc
sbb
test
imul
mov
pop
ds
and
sub
sbb
inc
xor
push
mov
test
jecxz
mov
in
mov
push
mov
cltd
daa
cltd
pop
clc
add
cmp
xor
mov
add
gs
icebp
inc
mov
pop
jo
xchg
jno
mov
push
push
mov
test
aas
cmpsl
shl
jecxz
sbb
mov
roll
popf
sub
imulb
xchg
test
cltd
fdivrl
sbb
rcrl
popa
push
cmp
stc
test
push
scas
inc
stc
cmp
test
dec
jmp
or
aam
xchg
push
xor
add
mov
add
push
mov
mov
cwtl
ficoms
xchg
mov
rolb
adc
xor
out
jmp
call
fcoml
mov
add
pop
xor
icebp
pop
out
insb
insb
into
fcmove
cli
push
cltd
enter
push
dec
stc
sbb
jo
push
les
insb
push
cmp
pop
in
loope
in
fs
xor
lcall
pop
popa
or
pop
jl
inc
fimuls
inc
cli
push
nop
fnsave
fwait
jne
mov
pop
dec
jmp
jmp
sbb
mov
sbb
push
and
push
sbb
pop
adc
inc
mov
into
adc
jl
cmp
leave
imul
fstpl
mov
rcll
out
or
sbb
mov
popa
jbe
adc
ret
std
addb
mov
jge
loope
rcrl
mov
dec
mov
lods
mov
add
or
jnp
xor
xchg
clc
notb
or
push
mov
mov
mov
cmp
loope
arpl
adc
mov
cmpsb
jb
push
sti
xchg
jae
cmp
in
fldt
jb
cli
call
imul
lods
shrl
insl
jnp
addr16
cmpb
adc
sub
dec
xchg
xchg
mov
icebp
out
stos
adc
iret
xchg
mov
xchg
dec
call
mov
stc
push
mov
ret
adc
popa
or
pop
and
xchg
cmp
jl
mov
adc
mov
add
add
in
in
push
fwait
into
lea
in
jae
pushf
scas
loop
addr16
cmp
xchg
sub
jno
pop
add
xchg
ljmp
aam
push
fwait
or
test
jp
lret
pop
arpl
fidivl
adc
loope
hlt
aam
mov
push
dec
cli
xchg
andl
cmpsb
ja
jle
into
fists
inc
and
shl
stos
and
push
jbe
fiaddl
imul
ret
mov
lock
xor
sub
roll
mov
sbb
mov
dec
or
cmp
clc
or
ret
dec
xchg
sub
je
or
fs
mov
rclb
fucomi
mov
sbb
cwtl
xor
aas
sbb
push
push
xor
in
jnp
pushf
flds
fimull
push
in
cmc
lcall
mov
mov
fsubl
inc
mov
mov
xor
jmp
inc
pop
or
js
adc
dec
jae
sbb
js
subl
jmp
lcall
ds
imul
cltd
sahf
cs
fs
push
test
jo
enter
cmp
jmp
cmp
pop
inc
icebp
aaa
inc
out
inc
and
push
push
push
insl
xchg
xchg
push
inc
mov
sbb
push
adc
js
inc
mov
inc
arpl
jecxz
cmc
les
bound
leave
or
ss
inc
fwait
cli
in
das
xchg
or
inc
mov
and
lds
pop
js
out
test
xor
gs
enter
lods
add
sbb
dec
jae
in
jp
pop
sub
cmp
in
push
fildll
add
divb
dec
icebp
inc
lret
jge
or
push
repz
stos
jae
jne
in
loopne
in
incb
int
shl
into
dec
mov
mov
adc
jnp
shl
xchg
jb
xlat
mov
inc
and
jb
in
xor
cld
push
aaa
sub
sub
sbb
idiv
out
test
andb
subl
dec
cli
leave
ss
into
inc
fwait
xchg
dec
aad
loop
ja
lock
cwtl
mov
cmc
jne
js
and
das
and
shl
add
sub
jnp
pushf
test
shlb
ficomps
add
sahf
inc
sub
js
out
adc
jae
or
gs
mov
popa
jle
hlt
fnstcw
fs
jbe
adc
sbb
inc
repz
or
loop
insb
dec
jp
shr
add
test
dec
ds
mov
mov
pop
and
scas
ret
mov
fnstenv
push
stos
bound
xor
inc
fdivrl
cltd
mov
jge
sbb
icebp
xor
pushf
mov
out
std
test
or
in
inc
jp
paddb
shl
out
aad
jno
ss
or
push
or
jmp
iret
jle
push
pop
dec
aad
mov
sbb
lock
xlat
jbe
pop
ljmp
and
jns
mov
jp
subb
shll
movsb
mov
and
and
cs
pop
xchg
mov
jb
pop
mov
dec
xor
mov
and
in
xchg
sub
ret
ljmp
sub
cld
shlb
cld
daa
fsts
mov
fnsave
test
jo
addl
adc
cmpsb
cmpsb
mov
jmp
push
jnp
sbb
stc
mov
cmp
movsb
sub
add
push
leave
push
lret
mov
push
jl
mov
xor
jbe
add
push
pop
shlb
rol
scas
lret
repz
xor
pop
fstps
or
pop
aas
mov
sbb
sahf
lea
mov
or
jmp
dec
xor
out
idiv
in
pop
dec
bound
mov
fs
inc
sti
mov
push
xchg
or
and
ret
mov
xchg
stos
or
iret
mov
int3
lods
jl
testb
mov
aaa
into
and
fwait
inc
test
dec
push
inc
xchg
jns
lret
add
push
int3
int
lcall
iret
in
aaa
mov
mov
pop
or
sarb
outsb
scas
mov
jns
add
repnz
xchg
jl
jp
mov
pop
mov
mov
sahf
out
rorb
push
lods
cmp
aaa
adc
nop
xchg
jo
pop
cld
jo
out
jae
and
xor
jno
add
test
or
rcl
jns
in
stos
add
mov
testl
mov
out
mov
lahf
mov
pop
add
cli
and
pop
mov
jb
jno
lcall
adc
mov
es
adc
int
lahf
loop
lcall
pop
addr16
sbb
push
nop
or
sbb
jne
jp
mov
dec
inc
repnz
gs
pcmpeqw
and
shrl
out
ret
arpl
icebp
ja
inc
movsl
sub
adc
cmp
adc
add
mov
cmp
test
push
test
xor
pop
lret
aas
jl
int3
mov
jg
scas
inc
dec
sub
fldln2
jnp
ss
cmp
cmc
pushf
dec
cmp
mov
sar
xor
maxps
and
jle
les
lcall
out
ja
cmp
test
jmp
sub
call
xorb
xchg
out
mov
sbb
mov
out
jmp
add
gs
dec
xor
inc
mov
xor
lea
or
ret
into
adc
mov
ficoml
jns
and
cmp
xor
pop
and
lret
sub
insl
mov
pop
sub
and
add
mov
adc
xorb
dec
nop
lret
sub
push
pop
mov
adc
jecxz
jb
push
lcall
f2xm1
rorl
jno
push
inc
xchg
push
gs
imul
cld
jno
in
push
push
push
pop
iret
xchg
push
adc
inc
mov
jo
lods
inc
subl
jnp
push
into
pop
pop
add
jl
hlt
mov
inc
mov
dec
mov
and
cmp
and
or
add
fstps
or
inc
push
mov
dec
mov
dec
pushf
sbb
cmp
cmp
test
push
push
movsb
mov
dec
scas
mov
pop
mov
ja
ret
call
es
cmp
rcrl
mov
nop
ret
push
jmp
mov
lock
jno
mov
sahf
pop
mov
mov
insl
data16
nop
sub
iret
mov
adc
mov
hlt
mov
out
dec
jmp
jecxz
cmp
mov
popf
xorl
jae
push
out
nop
pushf
xor
xor
pop
mov
cmp
daa
aas
sbb
mov
push
in
aaa
fnsave
mov
pop
repnz
jo
adc
shr
mov
push
add
dec
jp
xor
sub
imul
cmpsb
xor
repz
inc
scas
sahf
out
ljmp
leave
dec
push
clc
js
rcll
pop
test
pop
inc
mov
push
imul
mov
out
lds
push
movsb
push
mov
je
arpl
test
adc
aaa
divb
dec
mov
shrb
lahf
xor
nop
dec
xorl
xchg
test
push
repz
lds
rorl
in
leave
aad
or
ds
mov
jp
add
les
sbb
jbe
push
in
sbbb
shrb
mov
cmc
jne
cltd
dec
mov
xchg
ljmp
std
dec
jno
lods
and
adc
jmp
and
or
in
sub
inc
jp
movsl
jnp
iret
fwait
and
pop
pop
into
mov
and
sbb
inc
jbe
aaa
scas
ret
popa
sub
cld
mov
sti
cmp
out
or
loop
push
enter
es
insl
loop
push
inc
dec
aas
outsl
jg
in
fwait
mov
cmc
outsb
repz
cmp
nop
ret
leave
add
cmp
mov
mov
mov
pop
mov
hlt
adc
lret
mov
mov
shll
fmull
inc
xchg
and
pop
lds
xchg
push
outsl
je
push
clc
or
push
xchg
in
and
or
jo
insb
out
jp
int3
dec
fcompl
sub
stos
out
sbb
gs
adc
jle
pop
iret
pusha
inc
test
add
mov
out
in
shlb
cmpsb
and
ret
sbb
pop
leave
ret
test
sub
and
cmpsl
stos
adc
int3
mov
cs
push
lcall
ss
fmuls
insl
std
inc
fucomi
pop
arpl
shlb
dec
cmpsb
insl
mov
int3
lds
outsb
jmp
add
lea
xor
inc
js
adc
push
pop
std
notb
sarl
clc
jmp
dec
push
lods
lret
clc
jo
in
int
mov
cmp
add
outsb
lds
push
retw
jle
negl
dec
fsubp
out
rcr
sbb
mov
sbb
testl
add
xor
shrl
add
enter
push
cmp
jecxz
test
push
inc
test
clc
cmpsb
mov
and
loope
push
xorb
rcl
mov
shr
dec
stc
lea
sub
mov
pop
inc
fs
jb
outsb
sub
iret
lahf
shrb
in
call
adc
stos
mov
popl
and
mov
sbb
loop
insl
mov
jb
fdivl
jg
dec
mov
sarl
sarb
or
std
sub
adc
enter
pusha
mov
mov
xchg
sti
jnp
into
sub
jbe
lret
movsl
sbb
sub
mov
aaa
fcomps
int
imul
add
add
xchg
cmp
ljmp
stos
cltd
out
dec
pop
mov
add
test
lcall
ret
das
dec
cmpsb
pop
mov
add
icebp
cmp
in
aaa
sarl
mov
out
and
pop
sub
xchg
jl
xlat
test
xor
mov
loop
sbb
push
jg
gs
leave
sarb
pop
lea
jmp
xor
push
fisttpl
popf
arpl
dec
push
cli
in
fdivrs
out
mov
cmp
push
out
cmp
stc
mov
xlat
fidivrs
testl
jne
jecxz
mov
popf
sub
sub
cmp
cld
jns
mov
hlt
fwait
mov
addr16
xchg
xchg
push
shll
cmpb
jo
mov
fstl
out
adc
int3
xorb
adcl
sub
ja
push
cmp
insl
icebp
add
iret
xchg
mov
popf
mov
push
pop
fucomi
iret
flds
ror
mov
pop
jae
xchg
xor
jmp
inc
dec
sbb
scas
testb
cmp
aas
pop
int3
adc
mov
popf
mov
adc
rorl
sub
xchg
add
inc
mov
cwtl
stos
loop
sbb
mov
cmp
jl
cmp
xchg
adc
jle
inc
cmp
adc
test
or
cmp
faddl
xor
les
pop
dec
xchg
xchg
push
dec
or
inc
ljmp
mov
lock
mov
adc
cmc
and
lods
arpl
ret
or
or
xchg
test
or
inc
cld
neg
pop
xor
fs
dec
fcoml
fidivrs
xchg
push
mov
cmp
jnp
xchg
adc
sub
or
pop
loop
push
and
mov
dec
sub
xchg
mov
inc
mov
inc
mov
insb
jns
je
cmpsl
cmp
dec
mov
cmpsb
mov
inc
test
push
les
push
enter
out
dec
push
test
inc
add
push
inc
test
stos
sbb
push
mov
daa
sbb
hlt
cld
cmc
loopne
sub
mov
adc
add
push
xchg
lock
sbb
dec
add
sbb
or
in
pop
inc
xchg
jge
popf
fs
mov
and
xchg
nop
movsl
push
jo
add
lcall
notb
aaa
cmc
into
stc
pop
pop
jp
mov
fcmovbe
insl
dec
jp
cmp
jno
je
push
jge
pop
pusha
pop
inc
test
jo
int3
xchg
jbe
lcall
inc
out
cltd
pop
loopne
loopne
inc
adc
mov
sub
outsb
jo
dec
push
out
cli
cmp
aam
sub
xchg
lahf
inc
jmp
sbb
dec
das
aam
int3
cmc
adc
sub
dec
je
xlat
jl
adc
mov
jne
sbb
lods
andb
jmp
pushf
or
inc
mov
jmp
xchg
arpl
test
inc
incl
sub
push
or
insl
divb
ds
mov
out
adc
idivb
or
iret
in
inc
dec
out
call
test
push
inc
cmp
jno
xor
leave
mov
cli
push
cmp
addl
sbb
dec
xor
stos
out
pop
inc
xchg
pop
stos
mov
xlat
mov
add
xchg
pop
cmp
add
iret
sahf
les
dec
dec
mov
push
jg
lcall
ret
scas
mov
mov
pop
jge
cmp
scas
sbb
xor
xchg
xchg
dec
sbb
ret
popa
xor
push
test
add
cs
cmpsl
imul
push
fstp
pushf
test
mov
cli
mov
cmpsb
inc
dec
movsl
jmp
lea
cld
jl
cmc
outsl
add
xchg
stos
xor
inc
inc
daa
cmp
out
fwait
iret
and
lods
out
lahf
sub
jle
jne
repnz
fwait
mov
xor
out
push
bnd
repnz
or
mov
pop
sbb
popf
cld
ret
push
or
sub
imulb
aas
cltd
cwtl
mov
xchg
sbb
dec
dec
lock
xor
lcall
or
and
fstpl
add
pop
push
sbb
aas
std
add
loope
adc
int
sub
int3
mulb
out
mov
push
pop
adc
xchg
add
rolb
adc
in
lret
push
push
xchg
push
push
clc
adc
jmp
repz
repz
stos
xchg
ja
dec
fsubs
sarb
cmpsb
push
loope
cmp
lret
mov
pop
push
xor
arpl
sbb
testb
in
add
fldenv
insl
and
and
lods
fisttpl
pop
rolb
aaa
enter
ftst
pusha
xchg
subl
mov
push
lahf
int3
ficompl
jecxz
aad
or
neg
lods
jno
jle
adcb
flds
sub
xor
mov
aam
inc
jecxz
int3
mov
mov
cld
dec
mov
dec
shll
or
dec
in
inc
xlat
and
pop
shll
pop
mov
les
jo
popf
sub
pop
out
adc
insb
or
ds
dec
and
fpatan
pop
inc
inc
ss
or
xlat
jns
push
sbb
xchg
pop
mov
xor
sbb
cmp
sub
xor
stos
lret
jb
jp
jae
outsl
xchg
icebp
mov
inc
inc
arpl
inc
add
loop
mov
and
fnstsw
nop
sub
and
adc
lret
clc
xchg
cmp
cli
iret
stos
decl
add
mov
push
inc
aaa
or
jns
scas
cmp
loopne
pop
xor
lods
in
in
insl
push
lock
ret
sub
xchg
sahf
mov
dec
insb
cmp
cmp
inc
mov
adc
xor
mov
scas
cmp
mov
mov
das
shlb
sub
inc
mov
cld
pop
or
mov
loope
mov
xor
fdivrp
out
out
mov
push
lcall
lods
mov
mov
dec
fildl
fcomps
mov
mov
enter
push
scas
mov
push
adcb
inc
push
fimull
mov
mov
jge
xor
mov
pop
daa
shll
pushf
mov
lret
insl
fcoms
mov
jg
jno
jne
add
cmp
jge
cwtl
xor
mov
shl
and
lret
pushf
pop
call
xchg
or
inc
dec
xor
or
jmp
jbe
les
adcb
mov
mov
daa
insl
lods
stos
pop
and
scas
xor
jo
pop
or
cmp
add
jmp
sbb
add
mov
icebp
mov
in
lds
aas
imul
icebp
mov
dec
and
dec
xor
mov
dec
mov
call
arpl
cmp
arpl
jnp
xchg
cmpsb
test
pushf
push
mov
jmp
loope
jg
pop
add
pop
or
pop
push
pop
test
push
xchg
adc
add
hlt
and
imulb
and
adc
pop
insl
or
je
or
into
insb
or
cmp
add
sub
xor
inc
mov
ljmp
pop
ffreep
jo
jp
mov
pusha
lds
enter
cwtl
or
dec
aaa
xchg
imul
jo
dec
sub
and
enter
jbe
addr16
loope
movsb
lods
arpl
mov
dec
je
outsb
or
mov
xor
or
lahf
test
test
jns
in
arpl
jg
or
in
inc
xlat
cmovno
les
push
mov
lcall
xor
cmp
jg
mov
repnz
fdivs
mov
sti
xchg
movsb
jnp
ret
dec
adc
push
ljmp
scas
push
push
add
cmc
push
pop
or
push
in
sbb
cmp
adcb
lds
inc
nop
mov
dec
or
or
icebp
xor
std
jo
xor
adc
push
mov
mov
pop
in
or
xor
inc
nop
xchg
lds
out
adc
out
std
outsb
out
rclb
jl
es
in
ja
xchg
mov
adc
adc
mov
shll
push
fs
mov
adc
lds
mov
mov
fdivrs
popf
sub
insl
mov
daa
and
out
pop
fdivl
je
fldcw
and
cmp
pusha
ljmp
push
test
enter
out
js
inc
jle
iret
pop
adc
sub
or
xor
pop
lret
shrb
out
cmc
popf
iret
ret
insb
std
add
sarb
inc
aad
mov
mov
in
fstl
stc
mov
lds
fisubrl
pop
sub
mov
xor
hlt
jae
adc
aam
pop
inc
jg
and
or
sbb
andl
outsl
mov
hlt
jo
cmc
sti
push
je
jb
jo
xor
sub
sub
ror
imul
jns
adc
add
dec
pop
pminub
push
lock
mov
dec
jae
movsb
jae
int3
push
sahf
push
mov
adc
mov
subb
outsb
repnz
mov
aaa
lea
fs
mov
jecxz
cmp
adc
arpl
xchg
out
or
jo
das
or
mov
inc
adc
or
xor
xchg
push
outsb
ret
xchg
jae
in
or
sbb
rcrl
and
pop
xchg
shll
mov
out
jbe
add
mov
sub
jnp
xor
push
pop
cmp
sub
addr16
scas
outsl
imul
xlat
dec
imul
push
mov
dec
mov
xchg
jns
inc
adc
in
adc
rorb
ret
sahf
out
push
push
sub
leave
pop
xor
jno
inc
sbb
mov
inc
popa
dec
ljmp
lcall
jbe
add
bound
int3
jb
xchg
ret
das
aas
cmovb
out
pop
add
in
adc
insl
faddl
mov
dec
cmp
fmul
out
ror
fistl
xorb
dec
jne
mov
mov
and
mov
call
push
mov
jo
inc
popa
and
hlt
cld
lahf
addr16
outsb
aam
sbb
mov
cmpsl
adc
rorb
mov
add
mov
dec
imul
dec
dec
shrl
fwait
icebp
dec
scas
std
push
adc
push
test
push
out
inc
adc
out
sbb
xchg
lret
or
jecxz
out
inc
in
add
and
lcall
divl
adc
pop
sysenter
test
cmp
dec
cmp
ret
shll
rolb
mov
test
js
jo
xor
push
loopne
stos
ljmp
jbe
push
mov
mov
std
enter
leave
movsb
pop
xlat
jae
sub
scas
xor
aam
add
test
jle
dec
int
xor
dec
cmp
cmc
scas
jb
sbb
cwtl
adc
data16
in
and
push
push
leave
xor
xor
and
pandn
or
sbb
cmp
sub
cmp
gs
outsl
adc
sbb
out
out
ret
xchg
les
inc
mov
mov
jns
mov
lea
pop
fadd
adc
fldt
gs
outsb
fildll
jle
xchg
aad
mov
aas
xchg
daa
cmc
out
jne
subl
add
lea
ret
or
call
dec
loope
and
mov
fwait
mov
insb
jmp
push
mov
addr16
loopne
mov
cmp
cwtl
mov
push
sub
mov
test
inc
cs
jl
repnz
sti
and
lret
jns
fdivrs
mov
test
aad
add
mov
and
cld
pop
bound
je
addb
scas
xchg
add
jl
mov
pop
or
mov
dec
test
lahf
xor
scas
lods
xor
in
mov
mov
or
push
gs
shll
xorl
sbbl
and
inc
aas
xor
movsb
inc
or
xorl
push
sub
pop
jge
sbb
cmp
inc
inc
push
mov
inc
mov
pop
cli
mov
repz
mov
iret
push
jg
ret
add
fidivl
sub
xchg
inc
out
lret
or
addr16
scas
xchg
stc
adcb
out
xchg
xor
inc
or
shlb
dec
in
sbb
fs
push
and
mov
jmp
dec
and
push
mov
or
inc
lds
push
nop
jg
cmovae
xchg
fdivl
pop
popa
xor
aam
mov
rorb
test
or
test
fptan
data16
int3
lahf
push
and
mov
add
jno
jge
mov
test
mov
enter
push
into
jb
sbb
push
aas
std
sub
popa
mov
dec
sbb
ja
xchg
scas
push
mov
fisubrs
and
mov
or
mov
mov
enter
fsubl
les
jnp
stc
popa
sbb
jno
xchg
add
cmpsb
aad
xor
pop
daa
mov
andb
mov
pop
mov
mov
loopne
jmp
aad
inc
lds
int3
ljmp
pusha
dec
cmpsb
or
ret
aam
fucom
in
imul
mov
movsb
and
test
or
jo
sbb
loop
jmp
sbb
movsb
mov
addl
aas
add
sahf
cmp
or
add
movb
mov
inc
mov
icebp
fidivrs
xor
pop
sarl
jae
pushf
movsb
mov
mov
mov
fnclex
test
mov
in
cld
push
mov
add
mov
fsubl
rorl
and
movsl
add
sahf
addr16
ja
jge
inc
fwait
mov
push
xchg
add
pop
scas
cmp
popf
aaa
addr16
les
jne
jmp
add
jge
mov
dec
cmp
ljmp
push
mov
mov
mov
cltd
sub
loopne
mov
inc
test
jno
sbb
fbstp
xchg
sbb
rorl
inc
dec
movsb
outsl
ds
aas
jnp
cmp
and
pop
icebp
inc
pop
mov
push
pop
orb
xor
add
cs
aas
stos
cmp
fadd
rcl
in
or
int3
jmp
outsb
push
flds
mov
xchg
movsb
dec
enter
sahf
data16
jbe
aaa
addr16
callw
scas
pop
jecxz
push
stc
aaa
and
aam
or
mov
add
mov
mov
movsb
dec
sbb
mov
mov
outsl
std
addr16
sbb
repz
adc
repnz
fidivrs
mov
lret
dec
jmp
xchg
cmpsl
mov
aad
push
loope
repnz
add
mov
fists
test
insl
jbe
aaa
push
aam
ficompl
es
xor
sub
or
mov
sub
bnd
xchg
or
aad
xchg
fmuls
inc
adc
in
outsl
pusha
addr16
es
jmp
mov
fisubrs
call
adc
jns
add
pop
pop
loopne
loopne
add
test
fidivrs
jno
pop
sti
aad
loop
mov
outsb
push
mov
in
stc
pop
and
out
mov
loope
pop
loop
mov
clc
popa
dec
insl
ja
mov
pop
outsb
add
jo
inc
ficoms
push
aad
movsl
jp
jmp
out
xor
sbb
sbb
jnp
dec
sbb
add
pop
lcall
adc
push
dec
jo
int3
inc
xor
cltd
bound
addr16
insb
sub
in
lock
mov
dec
xor
push
hlt
mov
push
int3
shll
or
sub
scas
cwtl
fsts
out
push
inc
cmp
sbb
pop
cs
or
push
repz
mov
fsts
or
cmp
movsl
mov
out
mov
ljmp
xchg
add
push
sub
inc
fcoml
lcall
jmp
xorb
div
repz
mov
add
pop
test
ljmp
mov
aas
sub
jge
dec
js
std
push
cmc
push
sbb
add
xchg
mov
jge
jno
pop
xchg
mov
inc
cltd
sahf
pop
jbe
lret
push
xchg
daa
xchg
ret
add
jo
cmpsl
mov
add
cli
shrb
inc
mov
lock
enter
xlat
stc
cmp
push
push
sysenter
jmp
adc
adc
pop
mov
lcall
into
bound
cmp
int3
sub
sub
or
outsb
int3
lods
fadds
pop
pop
adc
mov
push
sti
jmp
mov
cmpsl
bound
addr16
cmp
sti
cld
insl
and
pop
jl,pn
scas
push
rclb
or
addr16
cltd
mov
ret
jnp
jmp
jle
xchg
cli
xchg
aas
dec
mov
mov
jns
negb
sbb
inc
jg
mov
loope
imul
std
test
sbb
insl
into
sbb
pop
scas
js
movsb
inc
cmp
inc
or
and
or
adc
les
push
mov
test
mov
fwait
ret
idivl
call
pop
cmp
sub
scas
add
xor
xor
sub
adc
inc
adc
xchg
jecxz
xchg
push
fsubrs
scas
shll
shll
mov
call
rcrb
jo
sbb
adc
shrb
mov
jmp
push
adc
adc
dec
mov
mov
push
inc
xorl
adc
fnsave
cmp
flds
dec
arpl
jnp
cmp
lods
into
xchg
xor
push
pop
and
clc
jb
or
jmp
es
sub
ja,pt
sub
fnsave
out
mov
lods
stos
xchg
push
and
mov
les
jne
adcb
int
add
cmpps
inc
sub
adc
dec
xchg
cwtl
dec
enter
std
dec
cltd
stos
cltd
and
dec
xor
nop
cmpsb
pop
xor
aam
test
xor
aas
jmp
fdivp
lcall
or
push
sarb
mov
add
lcall
data16
xchg
mov
mov
jmp
or
andl
cmp
push
test
xchg
inc
mov
dec
mov
pop
loopne
movsl
mov
jp
gs
or
jmp
push
jmp
adc
cmc
mov
out
lret
cwtl
dec
add
cmovs
std
mov
and
daa
out
add
sarl
in
cltd
adc
sbb
xlat
jo
loopne
pushf
lock
mov
lahf
cltd
mov
lock
or
shrl
and
add
lret
fidivrl
xchg
fstp
mov
fwait
adc
subl
lods
fwait
and
ror
jne
mov
dec
cmp
dec
cmp
adc
push
loopne
cmp
divl
xchg
loop
movsb
loope
push
pop
nop
mov
sbb
sti
mov
je
orl
mov
shll
push
out
fldl
cmp
mov
jg
into
testl
in
enter
push
lea
or
jno
mov
stos
fimuls
or
sbb
mov
sub
pop
adc
cltd
stos
xchg
jecxz
test
inc
jnp
and
inc
and
sti
mov
mov
aam
iret
mov
fwait
movsb
adc
out
and
pop
mov
aam
popf
jle
jbe
insl
dec
add
in
sub
orb
loope
mov
dec
in
add
mov
in
adc
xor
mov
mov
jmp
rclb
test
mov
les
popf
xchg
pop
mov
cmp
sub
jno
mov
cmp
push
std
adc
bound
xor
in
pop
and
mov
xor
sub
sbb
mov
loop
jmp
ja
clc
fwait
push
ret
jns
ljmp
cmp
aam
testb
cs
jl
ja
cltd
adc
mov
outsb
add
mov
inc
sub
loopne
mov
and
jnp
rcrb
les
dec
jecxz
mov
enter
pop
lret
mov
cwtl
out
aaa
mov
cmpsb
jle
movsb
dec
outsl
jnp
push
mov
add
inc
jg
xchg
sti
mov
adc
imul
inc
push
std
add
subb
mov
adc
aas
fstl
mov
ljmp
mov
lret
mov
adc
xor
fdivp
inc
cmpsl
xchg
pop
xchg
adc
and
test
dec
mov
popf
ljmp
adc
daa
adc
adc
out
bound
and
das
outsb
test
mov
mov
out
stos
gs
xchg
shrl
mov
int
pop
push
and
xchg
add
sub
loop
movsb
popf
ja
data16
pop
jecxz
rcll
dec
movsb
rorl
jno
rcr
sub
or
lods
loop
test
repnz
pop
mov
pop
pinsrw
mov
arpl
add
jmp
jns
inc
mov
mov
sub
xchg
icebp
and
das
push
mov
sbb
and
loope
add
push
test
movsb
cwtl
adc
fcoms
adc
inc
mov
jg
mov
jge
mov
adc
cmp
cwtl
adc
cld
mov
push
jbe
repz
lods
mov
or
sti
daa
loop
xchg
cltd
sub
testb
mov
sub
lret
gs
xchg
dec
jp
in
mov
lret
dec
inc
and
or
push
inc
sub
jg
and
es
addr16
insb
push
lcall
repnz
ja
cmp
std
jbe
add
test
push
arpl
mov
pop
pop
jnp
jp
out
test
sti
mov
dec
test
je
loop
xor
push
cmp
pop
dec
in
ret
mov
sbb
enter
pushf
movsb
mov
pop
add
movsb
and
xchg
lcall
push
popa
or
mov
enter
xor
out
dec
adc
add
ja
mov
adc
int3
mov
call
sub
mov
and
outsl
movsb
clc
cmp
notb
outsl
mov
and
cmp
dec
pushl
push
scas
cwtl
iret
pop
xchg
sar
inc
stos
pop
cmpsb
mov
int
fdivrl
jnp
fimuls
adc
add
lcall
dec
cmp
or
ljmp
push
dec
repnz
jae
mov
dec
cmp
fs
xor
xchg
adc
add
int
andb
jo
ret
cmp
cli
mov
mov
lods
fmuls
in
push
push
jp
dec
xor
dec
in
aam
add
pop
push
sbb
pop
pop
sbb
icebp
sbb
xchg
xchg
sub
cli
hlt
inc
sub
jecxz
xor
adc
rorb
add
jns
call
rorl
aam
add
adc
cltd
push
clc
neg
push
mov
jge
mov
lcall
jo
scas
ds
jecxz
and
mov
xor
int
push
je
mov
imul
ffreep
push
out
jnp
adc
pushf
bound
jle
jge
mov
jns
cmc
add
jns
mov
mov
aaa
pop
and
pusha
call
jb
push
cld
inc
mov
clc
sbb
xchg
xchg
repz
jmp
and
rcrl
insb
pusha
pop
jo
imul
int
dec
in
mov
arpl
mov
pop
or
push
insb
test
jmp
decb
mov
dec
mov
and
dec
add
pushf
test
add
mov
push
movsl
push
jle
mov
inc
cmp
movsl
cmpsl
lea
scas
mov
xor
pop
sarb
cmc
cmp
test
lahf
push
outsl
addr16
add
and
or
push
mov
stos
inc
aas
loopne
je
imul
jb
add
xchg
ror
push
lret
mov
lods
dec
mov
adc
mov
out
pop
movsb
pushl
stc
and
and
or
out
test
out
jge
jae
mov
int
cmp
and
inc
pop
push
sub
fbld
je
enter
scas
loop
jmp
pop
sub
sahf
xor
and
jl
roll
pop
mov
mov
movzwl
inc
lcall
xchg
pop
sbb
mov
jns
cwtl
dec
sete
into
dec
je
insl
adc
nop
scas
pop
sbb
std
and
frstpm(287
dec
ffree
lods
out
gs
pop
test
lret
add
add
jg
mov
in
lret
push
scas
mov
push
push
ret
jle
popf
shrl
jmp
outsb
mov
adc
mov
inc
jo
sub
xchg
mov
ficomps
sub
lret
imul
imul
mov
lods
cmp
xchg
aaa
mov
ret
add
adc
jmp
jbe
jns
sti
dec
mov
fisttps
lock
lods
test
jae
push
pop
jecxz
nop
ljmp
gs
push
notb
push
cmp
imul
sub
outsb
add
out
lcall
xor
scas
cmpsl
mov
pushf
or
icebp
mov
call
xchg
decb
subb
int3
or
push
loopne
xor
dec
mov
lcall
inc
insl
insl
xchg
scas
xchg
mov
sub
inc
cmp
ss
enter
xchg
shll
loopne
mov
sti
movsb
inc
mov
cmp
jne
mov
xchg
fisubrs
inc
rclb
push
add
movsl
mov
aam
cmc
ds
lods
mov
pop
dec
inc
pop
rorb
in
out
aad
and
lcall
mov
dec
gs
sbb
and
dec
aas
add
add
icebp
addb
xchg
in
cmp
pop
fadds
loop
fcoml
adc
pop
mov
int3
das
xchg
loop
fcmovnu
pop
sub
xor
pop
add
fists
mov
lret
lock
inc
inc
repz
mov
cmp
adc
jnp
imul
popa
dec
adc
sti
jne
mov
mov
jno
popa
xor
xor
mov
ss
mov
jmp
js
aad
outsb
xor
push
or
fisubl
int3
xchg
aaa
mov
or
js
orb
inc
lods
dec
xchg
mov
or
rorl
push
xor
cmp
je
or
aas
inc
mov
xor
sbb
repz
and
or
or
shlb
int
sti
mov
add
fs
int3
jmp
push
fwait
mov
js
sarl
pop
mov
sar
sub
pop
out
or
mov
inc
cld
and
or
ret
cmc
sub
push
fdivrs
pop
fsub
adc
inc
icebp
nop
add
cltd
xchg
mov
inc
add
mov
fimull
js
sub
aad
imul
xor
inc
cmp
adc
xor
out
fsts
repz
xor
loope
adc
es
mov
test
fs
aaa
pop
sbb
js
les
push
sbbl
les
roll
xlat
test
into
int3
push
jo
in
mov
sbb
jle
adc
out
inc
dec
arpl
fcomps
into
loopne
add
xchg
hlt
add
sbb
push
mov
sub
shlb
test
pop
xchg
std
js
mov
push
dec
js
out
pop
idivl
cmpsb
inc
adc
pop
adc
fsubrs
cld
xchg
dec
stc
sub
jl
jecxz
push
shl
mov
std
xor
clc
cltd
xchg
xchg
fstps
xor
xchg
push
hlt
or
push
mov
push
mov
xchg
xchg
adc
sub
in
mov
fmull
xor
xchg
mov
lahf
cmp
jbe
fs
inc
xlat
pop
mov
cmpsb
xlat
push
xor
pusha
insl
lock
sbb
xchg
or
dec
inc
mov
xchg
adc
push
cmp
jne
mov
push
push
das
lret
mov
out
cmp
xchg
mov
push
fs
mov
mov
ds
mov
imul
sub
or
push
inc
pop
mov
adc
ret
push
test
enter
sub
inc
bound
xor
sbb
mov
das
xor
inc
mov
push
cs
ss
jle
nop
fcompl
pop
ret
dec
sub
test
xchg
stos
push
clc
lock
icebp
cmpsb
std
mov
pop
cmp
mov
das
mov
mov
jns
cmc
loopne,pt
sub
out
add
dec
jmp
int
mov
int
sub
leave
fiadds
add
mov
jo
movsb
testl
out
push
stos
arpl
ds
inc
ret
xchg
sbb
adc
adc
int3
or
mov
mov
mov
sti
sub
mov
pop
mov
cmp
push
fwait
sub
mov
shl
aad
xchg
imul
pop
xor
inc
cmc
inc
jnp
push
movsl
xor
negb
add
xor
cmc
mov
inc
mov
sti
push
mov
add
xor
test
fstps
mov
push
add
mov
push
or
in
pop
push
test
int3
xchg
pusha
hlt
push
pop
cmp
dec
pusha
jmp
push
cmp
movsl
xchg
sbbb
adc
xorb
int3
call
pop
mov
cmp
sub
lock
cli
repz
mov
jbe
push
jg,pt
inc
mov
lds
jnp
mov
outsl
lret
jl
fs
pop
jno
xchg
ret
mov
mov
fucom
frstor
subb
add
lret
mov
mov
dec
jne
cmp
cmp
pusha
mov
push
stos
lret
in
jne
dec
in
sbb
iret
sti
pop
addr16
imul
xrelease
jle
push
add
cmpsl
mov
or
movq
cmpsb
adc
repnz
cltd
and
loopne
scas
mulb
movsl
movl
sti
incl
add
jbe
movsl
mov
lock
cmpsl
mov
mov
adcl
lret
sahf
test
push
pushf
pop
out
sub
xchg
leave
add
aas
xchg
call
or
push
dec
shl
mov
ret
repz
xor
inc
aas
mulb
push
pusha
pusha
jmp
insb
xor
or
icebp
mov
sbb
cmp
sbb
sub
or
inc
ljmp
push
pusha
jne,pt
add
pop
jae
loope
and
es
mov
and
jo
xchg
push
fucomip
cwtl
call
push
sbb
orb
loopne
lods
add
dec
push
jbe
cmc
std
mov
int
cmp
xchg
mov
sub
jl
lock
xchg
xchg
shlb
data16
and
daa
add
xor
mov
rcr
push
sub
push
sbb
out
addr16
js
push
loop
mov
mov
adc
jo
sbb
leave
dec
and
shrb
lock
jnp
fmuls
outsl
and
xchg
pop
jb
or
imul
sysexit
or
lcall
hlt
in
push
add
movsl
test
aaa
dec
sub
cmpsb
gs
pop
popa
mov
or
mov
out
shrb
and
enter
ret
mov
mov
xchg
dec
dec
fwait
push
popa
dec
lret
jge
into
sub
inc
ss
mov
mov
push
loop
add
xchg
ljmp
ret
mov
lods
enter
jmp
daa
mov
jns
movsl
int3
xchg
add
insl
inc
inc
pop
nop
in
sub
xorb
xchg
push
mov
dec
sbb
pop
add
and
insl
mov
inc
jp
lock
pop
movsb
pop
inc
aam
xor
insl
push
loop
mov
mov
mov
lods
fbld
dec
jbe
cmpb
adc
mov
jle
cmpsl
mov
dec
and
fstps
ja
cmp
es
inc
xchg
es
ss
mov
int3
add
fnsave
call
je
sbb
mov
xchg
xchg
cmp
hlt
or
sbb
outsb
mov
jp
cli
scas
call
xchg
mov
aaa
mov
mov
mov
popf
cs
lret
add
adc
test
xchg
inc
fwait
hlt
adc
dec
sub
stos
mov
dec
dec
xchg
orb
loop
test
or
pop
in
shlb
lahf
push
sbb
gs
ret
jne
lret
outsl
icebp
lds
xchg
fdivl
je
xchg
jecxz
mov
jmp
lea
mov
out
pop
cmpsl
rcll
clc
outsb
or
jno
jno
adc
mov
jg
sbb
hlt
and
loop
lods
bound
stos
lods
or
xchg
sbb
add
cmp
sti
mov
mov
and
enter
negl
into
jl
leave
dec
xchg
xchg
dec
dec
dec
pushf
push
hlt
push
xor
aam
xlat
mov
push
mov
gs
pop
adc
jb
lods
xor
mov
ret
inc
not
push
popa
shll
add
movsl
fnstcw
test
xor
pushf
test
cli
mov
hlt
rep
out
dec
sahf
inc
push
push
sub
int
cs
jnp
sbb
test
jb
push
rcr
pop
pushf
push
int3
fwait
int3
outsl
cli
pushf
sub
fdivrl
mov
inc
jmp
adc
mov
xor
xor
push
subl
outsb
shl
sbb
cwtl
data16
jns
adc
cmp
push
shl
mov
push
hlt
dec
bsr
jns
mov
dec
fucomip
icebp
mov
xor
jmp
xchg
and
push
mov
unpckhps
repnz
dec
add
add
fwait
push
loopne
outsl
ds
ss
lcall
mov
pandn
mov
or
add
mov
enter
and
hlt
fsubrl
sub
das
addr16
call
fildll
std
adc
inc
jno
movsb
bound
fcoml
mov
mov
mov
xor
jp
cli
jb
inc
rolb
pop
jecxz
mov
popa
test
sub
leave
fs
into
adc
clc
lret
inc
enter
cmpsl
pop
lock
test
push
lds
stos
inc
jmp
lahf
xor
xchg
filds
es
mov
sub
or
stc
push
mov
mov
add
call
sub
cs
imul
ss
out
mov
add
cmp
lcall
imul
xchg
push
loopne
cwtl
ljmp
lods
rclb
jle
inc
xor
and
sub
jg
movsl
test
fnsave
mov
testb
and
cmp
adc
or
xchg
in
fildll
pop
pop
sahf
pop
push
popa
gs
sub
cmpsl
sub
mov
int3
and
xchg
push
testb
andl
mov
xor
push
imul
repnz
cmp
ljmp
test
sub
mov
pop
mov
cmpsb
rcll
jbe
scas
ds
xor
mull
shrb
and
push
aaa
push
pop
mov
movsb
xchg
mov
fnstenv
js
aam
ds
sub
loopne
mov
pop
lret
inc
cmc
adc
int
cmp
decl
and
push
and
out
inc
sahf
xchg
mov
scas
out
movsl
jno
push
call
jle
push
adc
test
cli
rorb
lret
call
ret
call
xchg
mov
add
ficoms
cmp
pop
mov
aas
mov
adc
ss
movsb
nop
sub
inc
and
xchg
imul
pop
add
ljmp
jmp
mov
pop
sbb
lock
ljmp
mov
push
and
add
mov
or
add
scas
test
sahf
lods
insl
inc
xor
mov
mov
mov
pavgb
inc
lea
cmp
lock
shl
cmpsl
movsb
sub
cmpsl
xchg
fidivrs
loopne
movsl
add
or
loopne
mov
mov
cmc
leave
xor
sbb
jae
cltd
xor
cmp
sub
out
mov
pop
adc
push
xchg
test
sbb
sbb
inc
mov
mov
enter
mov
and
daa
add
xchg
enter
add
push
mov
dec
out
lock
lea
adc
in
inc
inc
shrl
mov
test
popa
adc
mov
inc
xchg
xor
ss
xor
sub
scas
adc
add
loope
imul
cld
fiadds
cmc
xor
inc
inc
jns
mov
pop
inc
daa
xchg
inc
xor
stos
dec
stc
push
in
adc
in
fsubrs
mov
in
ret
das
sub
push
inc
adc
lds
and
hlt
rcrb
cmpsb
mov
sub
jb
das
xor
jecxz
mov
sbb
test
enter
mov
das
inc
or
jb
add
mov
dec
fidivs
dec
repz
inc
jbe
ja
jg
mov
jmp
xor
mov
mov
test
in
and
les
bound
xor
add
imul
sbb
xchg
mov
fcmove
notb
lods
pop
fs
or
shl
xchg
adc
dec
or
sub
xor
scas
test
lods
pop
mov
cmp
lods
push
push
lods
pop
orb
enter
lcall
fisttpll
xchg
inc
adc
mov
adc
shll
lods
arpl
movsb
rclb
loope
pop
ret
jnp
push
mov
mov
push
sub
insb
xor
pop
pop
mov
add
add
loope
adc
xor
mov
inc
pop
add
in
xor
cwtl
pop
movsl
cmp
and
xor
imul
pop
cmpsb
xchg
mov
jb
mov
mov
pop
or
adc
lea
rclb
movsb
add
add
mov
push
gs
insl
out
stos
out
pop
nopl
mov
aaa
jp
mov
es
mov
test
sub
lds
xchg
sub
pop
push
pusha
inc
mov
dec
sar
movsb
call
lods
push
pop
add
cmp
adc
shrb
stc
inc
mov
mov
sbb
jg
mov
outsl
hlt
lods
mov
push
jmp
je
lahf
cmp
push
stos
and
adc
mov
jnp
pop
scas
or
mov
aaa
loope
pop
sahf
mov
out
cmp
inc
push
adc
pop
cs
adc
fcmovu
pop
pop
icebp
mov
leave
lock
sub
popf
loope
rorb
push
mov
test
and
je
pop
mov
shr
xchg
das
daa
adc
inc
push
add
shrb
call
jne
push
sbb
add
dec
adc
lea
lea
jns
dec
mov
in
mov
aas
shll
cld
mov
mov
cld
leave
cmpsl
or
or
mov
sbb
imul
sub
jne,pn
popa
dec
aas
xor
add
add
pusha
mov
in
lcall
xchg
push
add
jmp
jmp
hlt
inc
cmpb
mov
add
fidivl
rcr
xchg
jmp
data16
sub
dec
fwait
mov
cmpsb
insl
scas
inc
imul
adc
sahf
ror
or
mov
gs
adc
ss
cmp
in
fistps
out
sub
push
jae
push
insl
and
scas
inc
xchg
xor
dec
xchg
imul
cli
mov
mov
outsb
or
sbb
scas
in
fisubrs
xchg
inc
pop
ljmp
jno
add
scas
dec
jbe
jbe
pop
cld
movsb
bound
mov
and
xchg
sub
mov
ss
jge
and
mov
testl
or
outsb
xchg
in
xor
call
das
cmp
mov
pop
leave
fisubs
imul
ss
mov
jbe
push
mov
loop
test
je
mov
add
iret
test
lock
fdivrl
imulb
shlb
ja
stc
mov
dec
jecxz
jcxz
sub
adc
xor
icebp
pusha
stos
bound
sbb
cmp
xchg
les
add
or
dec
fcoml
mov
cmpsb
shrl
shlb
push
popf
das
xchg
or
add
jle
lret
lahf
das
and
xchg
cmpsl
jge
jno
stos
jmp
inc
or
lods
sub
or
and
jmp
fwait
stos
test
and
mov
inc
aas
iret
hlt
into
mov
cmpsb
cld
scas
out
aad
lods
push
and
push
shlb
add
loop
add
sub
into
movsl
cmp
in
in
sbb
mov
pop
mov
fwait
cmp
mov
sbb
sti
adc
fadds
int3
outsb
testl
jg
in
xchg
pop
sub
adcb
xchg
jmp
std
pusha
push
cld
xor
stos
test
dec
push
mov
mov
and
jne
mov
rolb
mov
or
jecxz
and
lods
out
fwait
in
or
pusha
jp
popf
ja
jnp
and
iret
add
call
adc
popa
mov
add
test
int3
test
shl
sub
xor
sbb
inc
push
sub
inc
pop
inc
out
mov
xchg
add
pop
mov
xchg
cmp
sbb
sbb
jg
push
repz
outsb
add
and
mov
stc
popf
js
popa
adc
out
jge
jb
mov
inc
cmp
cmp
dec
rclb
jp
or
mov
subb
fsubr
add
mov
and
mov
addr16
jp
into
inc
xchg
cmp
insb
mov
les
jo
cmpsb
pop
cmpsb
add
inc
inc
pop
pop
pop
imul
ret
rcr
mov
xchg
mov
or
dec
mov
mov
cmp
insb
pusha
add
xchg
dec
push
pop
push
cmp
push
xchg
pop
pop
inc
nop
xchg
movsb
cmp
rol
test
iret
or
fiadds
push
pushf
or
aas
jne
fadd
aam
fnsave
mov
mov
ret
test
jae,pn
cmp
mov
push
and
and
fsubl
dec
mov
lods
sbb
sahf
xchg
fnstsw
rcr
or
jns
fbstp
xlat
ret
push
ret
lret
ljmp
xchg
les
jge
stos
into
xor
cmp
jg
rcrl
xchg
push
adc
inc
or
push
cmp
add
and
adc
dec
shl
cmpsl
jp
xor
mov
sbb
and
xchg
flds
cld
inc
add
dec
cli
fsubs
and
imul
fcoml
dec
xor
jo
dec
out
aaa
jns
lahf
jp
dec
jmp
test
jmp
inc
mov
into
mov
and
test
xlat
mov
ret
pslld
push
cmp
add
out
stc
pop
pop
sbb
int
pop
das
int
clc
add
cs
sti
call
mov
push
popa
add
int3
push
xor
psraw
stos
clc
in
bound
stc
mov
lods
lock
int3
lret
mov
xlat
sarb
clc
sti
stos
jb
insl
les
mov
aaa
adc
and
and
stos
inc
inc
stos
xchg
push
fstps
jg
ss
or
push
jmp
cs
das
mov
inc
popa
repz
lea
lcall
adc
sbbl
jo
xlat
mov
adc
xlat
adc
addb
enter
or
and
jae
xchg
mov
out
pushf
cmp
jno
lahf
pushf
pop
aas
lds
sub
mov
fstpt
and
cmp
loope
mov
sbb
stc
scas
push
push
pop
sub
sub
mov
mov
js
clc
jae
imul
into
push
xor
adc
xchg
adcb
sub
and
or
repz
xor
in
xchg
cmp
sbb
fimull
subps
rcll
rcll
mov
xor
mov
mov
or
xor
add
int3
jnp
cmp
fldl
sub
hlt
push
cltd
and
push
jge
lea
xchg
push
addr16
xor
rcrb
inc
pusha
sbb
dec
insb
push
jle
stos
or
and
ljmp
insb
leave
imul
lds
lods
mov
ss
cltd
sarb
add
fdivrl
es
out
inc
popf
sub
mov
sub
dec
cmpsl
mov
push
rclb
xor
adc
xor
add
cmp
dec
into
mov
push
lahf
loope
inc
mov
pusha
addr16
xchg
je
out
jo,pn
jbe
iret
out
dec
sahf
mov
testb
and
adc
scas
movsl
dec
mov
enter
or
xor
stos
or
testl
cmp
xor
fstps
mov
aas
fimuls
mov
dec
mov
or
pushf
cmpsl
cmc
imul
aas
lcall
bound
sub
fimuls
pop
and
mov
pop
or
aaa
es
push
xchg
mov
fsub
push
mov
push
push
popa
popa
aas
into
or
push
aam
cmp
xchg
mov
inc
jnp
fcompl
adc
push
out
outsb
dec
insb
into
push
test
mov
lds
fistps
mov
cmpsl
jle
fistps
jge
mov
scas
pop
cmp
adc
pusha
in
jo
sub
push
pop
mov
orb
arpl
dec
sub
sub
aas
cmpl
imul
sbb
rolb
jb
cmp
dec
gs
in
popa
add
xchg
push
mov
sbb
int
and
mov
fdivl
jb
pop
pop
leave
ficoms
jbe
in
scas
jae
inc
push
inc
adc
add
mov
sahf
arpl
cld
test
add
mov
pop
add
mov
test
imul
mov
and
xchg
mov
das
rcr
pushf
jmp
test
sbb
jo
mov
mov
insl
cmp
stos
inc
xorl
push
in
dec
sahf
je
mov
xlat
fcoml
rorl
pop
or
imull
into
leave
shlb
data16
jno
push
test
pop
fsub
lea
inc
out
push
in
push
dec
mov
xor
push
or
jmp
cld
int
mov
push
mov
xor
dec
popf
xchg
leave
fdiv
sbb
mov
clc
fnstcw
repnz
mov
mov
es
cmp
dec
in
ret
pop
xchg
scas
dec
scas
sahf
add
out
cmp
and
aaa
xor
cmp
mov
cmpsl
mov
dec
or
daa
bound
inc
cmpl
xor
push
fisubrs
inc
bound
dec
sub
push
push
cmpb
push
sbbb
inc
pushf
or
jbe
cs
cmpsb
jl
mov
and
mov
xor
sub
mov
in
add
lret
js
les
jmp
mov
pop
dec
mov
or
call
inc
dec
cmp
pop
fistpll
or
cld
in
sahf
ret
push
dec
paddsb
out
addr16
cli
push
movsl
sbb
nop
es
xchg
cmp
and
rcrb
loope
repz
mov
or
mov
pop
push
pop
popa
lds
lret
xlat
pusha
push
fwait
jo
cmp
pushf
rcrl
xor
jae
dec
out
out
fsubr
iret
andl
fwait
xchg
ljmp
ret
fmuls
xchg
cmp
mov
jne
mov
sbb
mov
adc
adc
shrb
and
add
rol
fldl2e
js
jbe
jns
jle
xchg
xor
out
mov
lret
ljmp
pop
or
xchg
daa
fisubrs
pop
jns
sbb
pop
and
cmp
out
adc
outsl
fsubr
fisubrs
jg
add
idivb
xor
xor
cltd
inc
jbe
lds
and
neg
ret
xchg
mov
pop
imul
add
cmp
aaa
fsubrs
mov
push
and
ss
les
ja
cld
mov
push
jl
dec
mov
lret
or
mov
add
js
movl
and
inc
lret
sub
imul
arpl
repnz
gs
and
adc
or
cld
jb
mov
hlt
push
ds
leave
scas
lods
add
adc
sahf
mov
popa
mov
mov
mov
in
incl
cmp
jmp
in
test
cmc
daa
outsl
adc
mov
and
repz
or
mov
repz
in
test
adc
jnp
movsl
cmpsl
in
imul
xchg
movlps
adc
xchg
xorb
jns
lock
outsl
xchg
pop
pop
out
xor
jno
xchg
mov
jle
xchg
mov
cmp
sub
push
adc
pushf
cmp
scas
dec
call
mov
push
inc
sbbb
pop
or
add
mov
mov
fstps
movsl
mov
xor
fists
sahf
mov
mov
dec
insb
decb
insb
xor
in
hlt
inc
xchg
pusha
clc
fisubrl
pop
movsb
mov
inc
mov
cli
adc
mov
enter
popf
add
lods
mov
jecxz
xor
sbb
push
pop
lea
popa
ljmp
xchg
jo
rorl
push
jbe
cmp
push
es
cmp
fwait
cli
mov
sahf
jns
pop
aam
pusha
sbbl
je
mov
repnz
inc
lcall
jne
loope
mov
mov
push
pop
fnsetpm(287
dec
loope
lcall
dec
pusha
sbb
daa
stc
jnp
sahf
push
setne
xor
xchg
lret
in
adc
mov
cmp
xor
xlat
loop
fwait
nop
ret
icebp
popa
pusha
das
mov
fmuls
mov
jnp
add
xchg
add
insl
int
mov
dec
cmc
dec
les
xchg
sbb
adc
aam
jno
adc
adc
inc
xchg
cli
push
rcrb
je
push
out
mov
xchg
loopne
pop
xor
aas
adc
in
lods
mov
dec
hlt
jne
jbe
fwait
mov
int3
mov
cmpsl
stos
pushl
pop
scas
push
cwtl
mov
mov
mov
fsubr
mov
jo
xor
push
xchg
out
sbb
and
stc
jo
repz
dec
cmp
aaa
mov
ret
add
in
inc
push
cmc
lahf
subb
sub
rcll
fsubs
repnz
scas
daa
xchg
adc
repnz
push
or
mov
lret
imul
xchg
repnz
in
jae
movsb
mov
shrl
popf
mov
dec
sbb
out
xchg
mov
push
lods
push
ss
loop
fcomps
sbb
mov
sub
cmpsl
repnz
loop
mov
add
cwtl
push
jne
mov
aaa
ljmp
arpl
sub
cmc
iret
test
nop
mov
mov
jae
call
mov
mov
inc
pop
xor
mov
mov
dec
jbe
in
outsl
push
jg
negl
adc
insb
push
cmpsb
jno
and
je
jae
sbb
iret
pop
adc
pusha
jp
pop
lea
xor
imul
rcll
cltd
pop
repz
push
pop
push
idivl
jmp
xchg
push
pushl
mov
inc
sahf
push
mov
aam
jae
dec
dec
out
es
loopne
push
xchg
int
jecxz
inc
cmp
push
mov
add
add
adc
in
sub
addr16
lret
mov
and
xchg
fs
stos
sbb
mov
mov
out
mov
popa
add
xchg
mov
rolb
lds
pop
jne
cmc
rcll
movsl
ret
popa
jno
sahf
stos
leave
or
loopne
mov
std
lods
sbb
aas
jmp
mov
xor
mov
ret
lea
mov
add
mov
or
dec
and
cmc
sub
push
pop
mov
mov
lret
aad
pusha
and
bound
fwait
push
mov
clc
ja
cmp
lock
inc
dec
ja
pop
mov
fimull
fcom
out
inc
iret
push
and
hlt
push
pop
push
arpl
push
scas
in
repz
add
push
int
andb
xlat
stos
aad
xlat
call
push
ret
sbb
lea
dec
leave
lock
inc
push
lods
pop
jne
mov
ljmp
mov
dec
push
cmp
xlat
pop
xor
mov
and
stos
cmp
and
xchg
xchg
pop
cld
les
or
out
push
jo
add
push
adc
pop
cli
daa
paddsb
das
jne
jo
xor
pop
adc
dec
in
push
sbb
xor
xor
push
jno
pop
fcmove
out
jl
sarb
enter
ret
mov
mov
sbb
pop
dec
xor
jl
adc
popl
js
repz
push
lret
jmp
mov
inc
dec
mov
aad
aaa
cmp
push
fldl
add
int3
cmp
or
cwtl
scas
cmpsb
xor
or
dec
sub
notl
jg
out
pop
sbb
sub
test
scas
lods
jg
or
push
repnz
popf
gs
dec
insl
add
js
stos
jp
mov
inc
dec
sub
lds
loop
dec
rclb
loopne
inc
cmp
movsl
outsl
cmpsl
daa
stos
mov
arpl
stos
aas
out
jns
pop
lret
lea
xorb
cmp
mov
cmp
daa
inc
sbb
scas
and
loopne
ret
imulb
push
test
sub
fiadds
rorb
movsb
cmpsl
stos
addr16
pop
insl
jl
sbb
movsl
mov
fdivs
jmp
dec
mov
inc
inc
loopne
sbb
test
pop
cmc
push
loope
push
out
adc
mov
sti
stos
out
sarb
pop
push
xchg
mov
call
inc
push
into
fsubrs
or
lods
int
xlat
jp
xchg
mov
enter
add
gs
nop
popf
pushf
insb
xchg
movsl
and
mov
sbb
arpl
xchg
leave
pop
bound
bound
adc
stos
xlat
jmp
inc
lods
add
add
xor
mov
aam
cltd
jmp
ret
sub
and
mov
dec
gs
into
fldl
cmp
jmp
arpl
adcl
mov
aas
xor
mov
orb
jae
test
inc
add
dec
ficoml
jmp
fidivs
push
test
sahf
mov
xor
inc
inc
lret
inc
fstl
addl
mov
mov
sbbb
lret
and
cmpl
mov
mov
xlat
inc
xchg
adc
lcall
adc
pop
jbe
stos
imul
pop
shl
aas
jmp
or
push
imul
jmp
mulb
rcl
into
insb
test
xchg
leave
das
fucomi
jp
xchg
loope
jl
jp
mov
mov
push
mov
cmp
pop
and
jns
and
nop
push
pop
mov
sbb
lea
cmp
push
dec
mov
sub
push
scas
or
shlb
jno
popa
lea
nop
out
sub
stc
sub
sub
popf
ljmp
push
and
and
scas
mov
jnp
mov
nop
add
xchg
xchg
mov
nop
lret
dec
orl
cmp
out
adc
ss
popf
fbstp
pop
mov
movb
adc
xchg
mov
or
jnp
shll
sahf
enter
stos
pop
das
mov
adc
and
pop
rcrb
shll
fs
mov
es
shll
lcallw
cmp
dec
paddd
ds
ljmp
arpl
mov
pop
sbb
popa
jo
and
pop
and
repz
mov
ljmp
repz
ja
xchg
push
sar
and
mov
rorl
adc
pop
mov
mov
stos
xlat
jmp
adc
push
xor
and
aam
leave
sti
rorb
lahf
jecxz
jbe
push
mov
imul
dec
mov
sub
fmuls
inc
sub
jecxz
incl
jecxz
add
cli
repnz
out
shlb
push
xor
inc
xchg
ss
ds
loopne
cmpb
sbb
stc
adc
push
mov
xorl
test
cmpsl
push
jnp
ja
jns
mov
leave
xchg
aas
inc
pop
mov
adc
mulb
jp
adc
test
iret
jo
cmp
loopne
idiv
repz
pop
ret
xlat
mov
mov
les
adc
sahf
clc
xchg
jmp
in
or
cmpsb
imul
xorl
and
mov
pop
jl
xor
shrb
mov
frstor
insl
xchg
jmp
and
jns
jno
dec
adc
inc
mov
cmp
jp
adc
mov
das
or
cmp
push
jle
fcoml
leave
fbstp
fwait
mov
mov
pop
dec
outsb
rolb
push
aad
jmp
adc
xor
mov
push
mov
sbb
sub
inc
cltd
inc
ficomps
jp
in
mov
mov
pop
sbb
cmp
add
repnz
ficoml
cmp
pop
loop
mov
inc
into
daa
xor
xchg
xchg
je
jb
cs
ja
cld
int
lcall
mov
into
jno
push
cmpsb
cs
fnsave
lcall
loop
in
sub
pop
xchg
lcall
in
xchg
mull
or
test
mov
out
clc
leave
mov
cmp
adc
shrb
sub
push
and
xchg
imul
push
sbb
push
or
into
lods
sbb
push
xor
xor
push
jge
or
lret
lret
adc
and
sub
or
xor
js
and
or
aam
inc
mov
movsl
jmp
add
in
jmp
ret
pop
hlt
dec
das
jbe
lcall
mov
xor
mov
std
mov
sbb
xor
xchg
cs
adcb
dec
inc
jecxz
add
sbb
fsubs
cli
push
je
ficomps
xor
inc
scas
inc
hlt
jo
sarl
mov
movsl
jno
icebp
rclb
lds
fisubs
xchg
icebp
mov
mov
rcll
push
lret
shll
sbb
loopne
pop
test
mov
lahf
xor
jae
adc
sbb
cmp
pop
push
mov
push
mov
and
and
ss
in
das
pop
pop
or
std
shll
push
mov
pop
add
mov
les
add
or
int3
jns
imul
mov
frstor
aas
jp
mov
push
mov
imul
mov
jmp
out
xchg
add
push
in
inc
push
daa
push
mov
mov
push
xor
push
sub
rclb
lods
mov
inc
lcall
lea
inc
test
aam
or
sub
mov
test
popa
sbb
mov
mov
mov
lods
push
das
aam
xor
mov
xchg
inc
aas
aaa
push
or
fidivrl
lahf
push
pop
pop
mov
arpl
mov
xor
xor
in
inc
sub
jg
sub
lahf
add
and
test
dec
es
inc
fdivrl
cmpsl
adc
and
hlt
mov
jo
mov
inc
dec
loop
fcomp
jg
sbbb
cld
dec
in
inc
or
test
mov
rolb
daa
dec
and
in
mov
add
xchg
dec
pop
inc
xchg
xchg
aad
cmp
push
sarl
stc
xchg
xchg
or
mov
rcr
mov
fcompl
lea
aad
clc
test
aam
mov
into
jnp
pushl
pop
lcall
lret
and
test
enter
fstps
cli
shll
jns
mov
idivb
xchg
fdivl
in
mov
inc
mov
xor
cs
cld
mov
ss
in
fcmovnb
jnp
imul
mov
enter
mov
sbb
mov
or
lcall
fmuls
dec
mov
xor
mov
inc
popf
scas
sbb
jno
addr16
das
lea
push
sbb
fstpt
cmpsl
xor
dec
adc
sub
or
cmp
inc
fdivr
div
jno
int
repz
aad
mov
hlt
ds
and
push
inc
adc
xor
adc
pop
sub
ret
pop
test
rol
inc
pop
movsb
aas
jg
xchg
mov
cmp
sub
inc
and
popf
pop
xor
mov
mov
push
cli
pop
sub
add
ror
push
adc
in
fdivrl
dec
lea
adc
cmp
cmp
scas
mov
mov
sub
xchg
movsb
sbb
jg
cmc
mov
test
jle
cmpsb
mov
scas
lock
dec
mov
sbb
leave
jmp
mov
dec
jmp
int
gs
xchg
xchg
sbb
sbb
dec
jle
mov
mov
das
popa
test
nop
ficoml
xchg
imul
inc
je
mov
add
push
lock
insb
sub
es
mov
mov
inc
push
sbb
das
cmp
lea
pusha
xor
sbb
aad
fsubrs
sti
sub
cmp
dec
cli
pop
test
stc
int3
repz
std
leave
mov
cmpsb
mov
shlb
adc
mov
cmp
pop
shrl
add
rcrb
mov
inc
mov
sbb
outsb
pop
dec
stc
jecxz
mov
adc
cli
xchg
dec
xchg
or
add
inc
shll
push
in
dec
mov
mov
out
cmp
add
lods
test
jp
mov
aas
dec
xor
jns
and
pop
cmc
ret
adc
inc
icebp
push
add
loope
jns
adc
enter
dec
nop
call
lea
popa
rcl
aaa
push
xchg
mov
lods
adc
push
nop
mov
repz
sbb
repz
and
fistl
mov
outsl
pop
cmp
les
push
sarl
mov
cmp
cwtl
cltd
das
jbe
mov
test
and
push
out
lcall
sub
pop
add
aas
leave
pop
sbb
pop
add
mov
and
dec
xor
cltd
mov
sahf
cmp
std
pop
push
push
mov
push
pop
aaa
leave
push
mov
push
dec
in
imul
dec
adc
cmp
pop
out
data16
roll
loop
jb
enter
loop
roll
mov
test
xchg
cmp
push
inc
vmovupd
das
call
in
into
jno
xorb
popf
shl
push
sbb
jne
jno
pop
sbb
push
push
movb
mov
aad
inc
addb
outsl
and
jne
xchg
inc
add
icebp
xchg
jle
xchg
icebp
test
pop
call
and
push
mov
mov
or
fwait
or
test
scas
sbb
push
xchg
fcmovne
mov
sbb
dec
stos
mov
or
call
push
sub
cs
or
int3
fisubrl
negl
lret
xlat
lods
push
pop
cld
mov
lcall
lods
mov
add
out
sbb
cwtl
bound
jb
loopne
das
cmp
nop
ss
fisubs
xlat
std
sbb
adc
fsubl
xchg
inc
cmp
xchg
aam
shlb
and
je
in
mov
inc
out
popf
push
push
xchg
inc
call
sbb
sub
sub
loopne
xchg
ljmp
shlb
cmpsl
jb
adc
dec
es
add
lods
and
insl
js
in
cmc
and
int3
popf
aas
mov
scas
test
jecxz
lds
cmp
fwait
std
cld
xchg
xor
into
outsl
jmp
jae
push
sahf
mov
cmpsl
fcmovbe
jp
daa
fwait
cmpsb
inc
mov
pop
mov
pop
fisttpll
add
arpl
sub
jmp
pop
movsb
jmp
daa
cs
bswap
jne
movsb
js
shrb
pop
mov
int3
andl
or
rorb
shrl
sarb
xorb
fcompl
add
jl
mov
add
lods
jecxz
ficoms
test
daa
inc
test
nop
lods
xchg
ja
push
fdivrl
add
dec
sub
cmp
mov
jns
add
jmp
mov
mov
mov
loopne
dec
xorb
fwait
je
dec
pop
and
xchg
movsl
outsl
or
scas
sub
jae
jne
cmpsl
push
push
cmpsb
push
movsb
inc
add
pusha
cmp
gs
xchg
or
ds
xor
stc
jne
adc
outsl
loop
movsb
lock
inc
jns
dec
repz
or
adc
cmc
enter
repz
outsl
push
sbb
into
in
rolb
sub
int3
pushf
sub
mov
ja
fcmovb
pop
pop
xor
inc
add
jo
inc
cmp
popa
pop
mov
cltd
sbb
and
rorb
sub
sub
cmpl
mov
inc
cs
icebp
or
or
scas
mov
lock
repnz
fmull
cli
pop
les
in
push
inc
dec
mov
jge
add
mov
movsl
movl
popl
aam
test
lds
mov
loope
mov
scas
andl
rclb
stos
dec
pop
xchg
idivb
aam
rcrl
mov
push
push
test
jecxz
inc
and
cmpb
xor
enter
adc
imul
bound
xchg
mov
aaa
stc
out
sarb
adc
inc
adc
int
pop
push
mov
aad
cmpsb
inc
add
lock
and
adc
push
push
pop
lret
adcb
xorb
rclb
and
and
add
mov
test
adc
lock
dec
adc
push
jo
xor
pop
fs
adc
xchg
cmp
leave
inc
into
stos
jl
rorb
mov
dec
or
cmc
mov
add
mov
sti
repz
push
cmp
out
xchg
cmp
sbb
ret
mov
cld
xor
adc
mov
push
jo
sub
or
mov
jecxz
leave
adc
mov
cmp
cmp
decl
sub
jge
adc
mov
insb
arpl
xchg
add
xchg
ss
jmp
movsb
mov
and
xor
pop
xchg
xchg
stos
mov
arpl
jle
push
push
jo
xchg
or
sbb
xor
sbb
es
xchg
push
in
subl
imul
dec
leave
clc
mov
cmp
xor
or
cmpsb
jns
jbe
movsb
pop
repz
jnp
ljmp
mov
mov
mov
inc
bound
in
and
jns
imul
mov
cmc
and
xchg
jmp
and
pop
mov
loope
xchg
pop
jb
dec
mov
mov
dec
ret
adc
fcompl
xor
call
out
jo
or
loope
enter
jmp
jns
fnstcw
fs
call
movsl
push
adc
gs
push
adc
jmp
push
jae
fisttpl
push
jmp
loope
xor
cmpsb
push
sub
sbb
das
xchg
fdivl
jg
lret
push
out
or
mov
lret
push
lret
jbe
pop
mov
lcall
loopne
lahf
jnp
cmp
mov
cwtl
adc
mov
and
insb
test
push
insb
jae
cmp
push
and
dec
xor
outsb
xchg
mov
push
or
mov
es
jbe
rcrb
add
or
test
shlb
inc
pusha
dec
fcoml
fdiv
fnstenv
es
sbb
fstp
dec
fcoms
mov
inc
inc
xor
and
scas
and
arpl
push
daa
outsl
mov
inc
iret
jecxz
cmpsb
mov
loopne
aad
sti
or
mov
sbb
cmp
pop
sub
adc
dec
stos
sbb
mov
movsl
pushf
sbb
fistl
or
das
repnz
out
sub
adc
dec
mov
aam
cltd
rorl
in
sub
xchg
mov
xor
mov
push
in
int3
fstps
lret
arpl
int
xor
inc
lcall
mov
pushf
pop
inc
arpl
jne
cmp
and
cmpsb
js
cmp
adc
fs
cmpsl
aad
jecxz
ret
pushw
shrb
out
xchg
sub
ja
rol
mov
imul
cmp
cs
scas
jns
jle
cmp
popa
and
add
negl
inc
into
jns
pop
push
cmp
mov
dec
add
adc
dec
cltd
mov
xchg
repz
jge
push
jg
xchg
sub
ret
xchg
sub
pop
inc
enter
inc
arpl
sub
test
out
jecxz
ds
in
leave
cmp
das
inc
add
sbb
xchg
jl
enter
xor
jecxz
out
lahf
data16
int3
inc
push
fwait
mov
xor
inc
mov
sbb
loope
mov
cmp
mov
fwait
lcall
cmp
cmp
sub
push
inc
cmp
xchg
aas
lret
movsb
xchg
pop
sbb
jne
out
test
mov
inc
jne
pusha
in
jl
std
inc
push
xor
xchg
adc
sbb
xorl
stc
push
int
inc
jl
or
mov
loopne
pusha
addb
push
lock
loop
adc
je
mov
xchg
ret
dec
add
and
das
imul
shlb
out
loope
inc
inc
pop
push
repz
inc
mov
jmp
cwtl
out
fidivrl
pusha
add
insl
jg
pop
in
and
rclb
lret
std
jno
xchg
push
cmpsb
xchg
pusha
fldl
testl
loope
jbe
das
lock
push
lds
adc
inc
adc
aad
ja
xor
mov
sub
sbb
je
jp
mov
jmp
clc
push
mov
pop
imul
ja
lods
jp
cmpsl
lods
and
xchg
stos
jns
stos
adc
inc
dec
xchg
pop
loopne
push
push
loop
xor
adc
push
sbb
stc
dec
sub
lods
mov
mov
push
cli
popf
mov
inc
xor
pop
fbstp
mov
notl
fwait
push
sti
pop
lock
nop
lods
lahf
xlat
shrl
lods
pop
aaa
pop
and
ljmp
mov
fcomp
ss
out
ret
lea
xchg
jecxz
adc
imul
mov
mov
or
clc
cmp
xchg
lret
pop
decb
sbb
inc
movsb
lea
in
lcall
lods
inc
movsb
inc
xchg
push
cmp
mov
dec
arpl
cmp
add
and
or
jp
in
in
mov
movsl
ret
push
es
inc
xchg
jmp
lret
js
mov
call
pop
cmp
pop
pop
sbb
add
and
jae
dec
fwait
testl
or
mov
lret
ficomps
jno
push
jmp
mov
mov
xchg
test
push
adc
dec
xchg
je
and
enter
testl
cmc
ror
jno
ss
in
adc
mov
xor
stos
pop
stos
int
bnd
and
mov
jo
int
jmp
aas
jne
lock
bound
pushf
sbb
outsb
xor
sub
cwtl
dec
xor
mov
fmuls
and
movsl
mov
pop
je
pop
ja
or
pop
enter
cmpsl
notb
daa
lds
cmc
sub
add
jecxz
adc
fidivs
sti
mov
movsl
or
fldenv
lret
and
ss
jno
in
sub
jo
shl
gs
or
xchg
aaa
add
jecxz
push
repnz
push
inc
xchg
rcll
std
stos
push
push
or
pop
pop
push
inc
push
cmp
dec
push
xor
mov
cmp
movsb
sbb
xor
adc
jae
pusha
jbe
outsb
rorb
clc
jns
dec
jnp
sbb
repz
jb
inc
out
xchg
fsts
push
sbb
push
stos
push
dec
jae
insb
out
jno
jg
fsubl
xchg
add
dec
mov
ss
leave
add
ret
arpl
jg
orb
ret
jmp
dec
or
std
std
sbb
or
mov
loope
sbbl
pusha
dec
mov
add
sbb
test
push
aad
inc
movsl
enter
bound
add
mov
or
mov
lds
leave
test
outsl
fstps
push
dec
mov
xor
add
mov
jnp
push
jecxz
mov
or
iret
add
mov
cmpsl
ret
pop
and
andb
out
ds
gs
xabort
test
cmp
dec
aam
or
in
daa
mov
jne
ja
mov
jle
jne
xchg
mov
lcall
into
push
fsubp
test
lock
xlat
bound
stc
xchg
stc
cmp
or
lods
cmp
inc
shl
out
out
sbb
push
stos
sub
xchg
ljmp
mov
dec
push
mov
jge
jg
aas
movsl
jno
xor
adc
stc
int3
iret
jb
or
in
push
mov
push
mov
pop
stos
fmull
cli
call
xchg
ret
dec
and
in
mov
ret
fld
dec
lahf
xchg
fildll
push
cmpsb
or
sbb
jbe
outsl
call
sub
or
cli
notl
cltd
jae
aas
or
mov
into
push
sahf
cmp
add
xchg
adc
push
aam
lea
lea
pop
js
jne
mov
adc
push
add
aam
sbb
hlt
push
inc
push
xor
dec
xor
sbb
mov
shll
sub
mov
push
addr16
gs
mov
cwtl
lret
iret
in
mov
cmpsb
sbb
dec
sbb
jns
adc
shl
dec
inc
sub
cmp
mov
in
popa
mov
add
pop
mov
inc
cmp
mov
and
push
stos
and
cs
mov
mov
ja
mov
in
jge
movsb
jg
mov
jp
xchg
or
aas
je
aaa
sahf
pop
repnz
test
sbb
jge
cs
mov
and
loop
xchg
mov
cmc
pushf
inc
jne
jo
inc
adc
iret
push
das
or
shll
jl
inc
mov
add
mov
xor
outsb
push
cmp
add
testl
lock
mov
add
mov
lret
mov
mov
jnp
cmpsb
ss
insl
mov
popa
sub
cltd
adc
mov
imul
sbbl
mov
popa
mov
dec
test
pop
sbb
dec
movsl
ss
dec
adc
push
shrb
cmp
fldenv
dec
push
lods
push
inc
stos
fldcw
inc
or
and
jne
fucomp
xchg
scas
stos
mov
jb
ss
stos
xchg
addr16
sub
ret
in
dec
jg
test
pusha
ds
sbb
fdivl
dec
movsl
pop
sahf
mov
std
out
cmp
pop
dec
jg
pop
lahf
cmp
clc
mov
add
es
jmp
mov
sbb
lret
sbb
mov
ja
mov
lahf
icebp
jo
add
mov
clc
lock
scas
fwait
adc
sbb
add
jae
mov
sti
outsb
jp
enter
stc
add
xchg
add
or
mov
leave
add
inc
movsb
push
enter
sbb
aam
and
dec
lcall
filds
fdivs
sub
mov
iret
mov
addr16
mov
das
xchg
mov
sbb
pop
aas
mov
cs
inc
pop
insb
loope
outsb
gs
cmp
les
aam
loop
arpl
ljmp
fisubl
jo
fcompl
cmp
push
dec
inc
outsb
inc
push
jne
mov
cmp
dec
adc
and
jnp
pop
call
or
test
jne
mov
mov
fdiv
fisttps
add
push
push
mov
xchg
test
mov
icebp
rclb
mov
cmp
lret
inc
cmpsl
sbb
sub
stos
sahf
adc
xchg
push
xchg
mov
jb
mov
mov
repz
add
fnsave
jns
mov
sbb
mov
ljmp
pop
push
cmp
nop
jnp
xchg
sub
xchg
loop
int3
repz
pop
jmp
testb
arpl
cltd
fcmovnbe
push
sbbl
pushf
cmp
push
adc
adc
xor
sub
mov
sbb
popa
xchg
inc
in
sub
std
imul
imul
sbb
out
mov
mov
movsb
icebp
outsb
jnp
pop
sbb
subb
cmp
cmpsl
fistpll
or
mov
rcrb
repz
mov
sti
adc
adc
outsl
cmp
xchg
insb
pop
ja
aam
sbb
pusha
add
scas
cwtl
xor
pusha
mov
add
dec
enter
fldt
test
iret
add
fimull
inc
inc
or
cwtl
pop
dec
mov
jle
rcl
dec
cmpsb
clc
lods
testl
inc
outsl
fs
sub
xchg
cmp
loop
and
inc
ss
cmp
ljmp
outsb
cli
xchg
repnz
hlt
bound
sub
inc
cmp
aam
fstps
mov
jne
jmp
adc
in
rclb
and
jbe
icebp
ret
mov
cmc
mov
das
mov
fcmovu
xor
loopne
imul
pop
arpl
sub
mov
fisubl
sarb
add
jl
pop
pop
shlb
mov
mov
xchg
inc
das
icebp
pop
mov
cld
sub
or
push
push
test
jl
pop
and
std
stc
repnz
enter
mov
jg
int
jbe
mov
or
xor
sbb
rcrl
sub
mov
or
cvtps2pd
mov
mov
ds
lea
pop
iret
pop
subl
in
subl
mov
sub
ffreep
fistps
pause
add
xor
dec
incb
imul
and
mov
adc
adc
mov
mov
add
inc
pop
ss
fstpt
pusha
jmp
addl
dec
insl
dec
inc
call
out
sbb
pop
push
stc
scas
xchg
add
mov
adc
enter
ror
orl
jge
vpavgw
arpl
cmp
fcmove
out
or
mov
jge
jl
cs
cmp
push
in
and
out
out
cmpsb
sbb
mov
in
jg
dec
and
inc
push
cwtl
or
mov
pushaw
stos
inc
push
shrl
pop
push
or
xchg
test
icebp
inc
jg
lcall
ds
clc
mov
sbb
cmpsl
ja
push
loop
cmpb
push
outsb
pop
cs
stc
outsb
jno
xchg
dec
addr16
cmp
add
jbe
cld
and
test
mov
es
fs
ret
push
lcall
pop
cltd
fbld
sub
push
lds
loope
push
inc
rcl
pop
xchg
and
sahf
out
and
je
mov
adc
das
aam
push
adc
scas
cmp
outsl
xchg
xchg
pop
mov
addr16
ret
push
push
test
repnz
adc
aam
mov
add
shlb
sub
xchg
bound
jl
pop
bound
add
jo
dec
inc
xchg
xor
xchg
and
pop
xchg
in
ljmp
lock
mov
insl
inc
daa
test
and
cmpb
cmp
out
ret
or
adc
aam
jp
add
jle
leave
rcl
mov
mov
test
push
addr16
stos
cmp
in
jg
sti
enter
add
inc
outsb
mov
mov
pop
dec
jae
out
cmp
ljmp
mov
push
or
sbb
pop
std
mov
stos
xchg
inc
mov
adc
lock
xor
lret
pop
xor
pop
sahf
xchg
mov
fdivrp
add
add
lods
mov
shrb
jbe
push
push
mov
mov
inc
fsubrs
push
jno
or
mov
jg
pop
jge
ja
ficoms
jle
data16
movsl
sbb
xor
or
and
and
mov
outsb
js
xchg
xchg
sahf
cmp
adc
dec
in
add
cmpl
xchg
sbbb
mov
jnp
daa
imul
hlt
sub
pusha
sahf
sbb
cmp
cmp
lock
pop
fistl
cmpsb
aaa
jle
dec
ja
call
or
pop
arpl
or
out
scas
inc
loope
les
and
daa
rcl
mov
cwtl
sub
jmp
jp
dec
stc
repz
inc
clc
sub
out
mov
mov
sbb
cwtl
cmpsl
inc
inc
in
mov
fists
or
rorl
xchg
cltd
jmp
aaa
sbb
subb
mov
fadds
pop
mov
out
icebp
and
push
cs
cmpsl
mov
sti
test
orb
les
out
cltd
cmp
jo
int3
outsl
pminsw
xor
addl
sub
loop
shll
and
lea
cmp
repnz
negb
popf
mov
cwtl
mov
mov
push
push
or
push
in
int3
sub
sub
sub
push
lahf
mov
mov
pop
xor
loope
xchg
popa
sub
cld
mov
mov
bound
push
jno
jl
and
inc
and
movsb
sbb
iret
mov
int3
in
pop
cwtl
ret
nop
mov
dec
pop
jnp
mov
fmulp
in
and
insl
pop
pop
leave
xchg
dec
iret
enter
xchg
push
lret
outsl
xchg
jge
xor
mov
sbb
out
sbb
pop
xchg
dec
mov
aad
mov
cmp
clc
cmc
mov
sbb
pop
enter
push
sbb
es
iret
jo
xchg
addr16
mov
out
mov
inc
cmc
jge
jne
mov
cmp
clc
inc
rclb
lods
lcall
outsb
sbb
push
in
dec
iret
fs
mov
and
rcll
dec
xor
inc
icebp
test
and
dec
jecxz
aaa
xchg
lock
lcall
inc
pop
lds
shlb
insl
aas
cltd
mov
dec
rcrl
mov
lea
mov
and
ljmp
jp
add
xor
sub
movsb
in
mov
xchg
insb
dec
mov
push
and
arpl
out
xchg
jbe
inc
sahf
fistpll
push
int3
xor
clc
jns
lcall
sbbb
jne
test
gs
sarb
push
and
push
add
loop
imul
dec
lahf
aaa
jae
in
movsb
inc
xor
and
xchg
pop
ds
add
cmc
mov
sub
sub
push
je
sbb
lret
lahf
je
mov
fsubl
cmpsb
cwtl
ljmp
aad
or
ficompl
outsl
xor
jl
ficompl
push
push
lock
jecxz
or
test
mov
fistps
je
int3
xchg
sub
scas
aaa
jge
inc
mov
lret
mov
add
mulps
and
aam
mov
mov
icebp
repnz
stos
mov
pop
negl
mov
ja
in
and
cwtl
aas
fdivl
fsubrs
addr16
and
xchg
movsl
add
flds
mov
inc
xor
mov
mov
and
sti
negl
lret
inc
mov
and
dec
test
ret
mov
mov
sarb
lock
lods
dec
sub
in
and
and
add
cwtl
pop
sub
iret
insl
cmp
mov
rcrl
fsts
jg
andb
adc
and
aad
and
xor
mov
in
int
mov
setle
mov
sbb
movsb
dec
mov
mov
xor
stos
loop
pop
pop
popa
aad
dec
daa
or
sbb
in
in
movsb
cmp
add
cmp
arpl
xchg
subb
into
dec
and
loope
push
int
and
ljmp
push
fs
stos
xchg
cmpb
in
lret
insb
cli
push
ficoms
cmp
sub
or
mov
stc
or
push
insb
mov
out
jp
ret
ffree
add
nop
pushf
inc
loopne
ss
xor
bound
push
aas
lret
ljmp
ljmp
inc
mov
mov
mov
aas
mov
pop
imul
rorl
lods
or
ds
bound
repz
pop
outsb
leave
cmp
cmpl
rcrl
mov
sbb
cmp
popf
pop
and
mov
mov
stos
in
imul
or
fsubs
ljmp
and
xchg
test
xlat
js
rcll
enter
stc
inc
add
jmp
xchg
mov
xchg
dec
and
imul
mov
jge
jbe
ds
popa
jmp
sbb
lock
jg
lds
pop
call
fldenv
xchg
sub
pop
insb
inc
popa
fcmovnb
jg
pop
js
cmpb
sbb
sub
jno
pop
out
in
push
outsb
scas
testl
mov
jmp
bound
cwtl
adc
das
sbb
gs
cmpsb
xchg
pop
xor
repnz
mov
repnz
in
cltd
jb
mov
lods
cmp
mov
add
adc
mov
jp
loope
sbb
cmpsl
loop
or
popa
or
jl
xchg
pop
imul
xor
push
ds
loope
fucomi
daa
lds
push
enter
test
push
jmp
cmp
cmp
xor
mov
jg
inc
mov
push
and
std
xor
loopne
xor
outsl
je
cmp
push
int
insl
push
jns
push
movsb
mov
mov
cld
sub
outsl
call
iret
pop
mov
xchg
jno
inc
jmp
repnz
or
nop
sub
js
mov
into
or
es
scas
pop
mov
loope
sbb
lods
lret
leave
rorb
les
and
inc
push
sbb
insb
testl
stos
out
cli
dec
push
mov
fnstenv
xor
es
jnp
notl
or
inc
or
sub
lds
adc
ja
xlat
cmp
push
int3
std
js
popf
aaa
dec
mov
sbb
or
or
jle
mov
xor
add
ret
adc
fnsave
imul
push
add
push
out
insl
push
mov
addr16
jno
aas
fwait
movsb
xchg
ljmp
mov
and
aad
jg
push
mov
pop
orl
push
inc
mov
cmp
mov
mov
dec
daa
outsb
cmc
sbb
popf
je
inc
lods
sub
mov
sbb
cli
sub
ja
add
sub
cwtl
sbb
movsl
cmp
int
add
shll
push
aaa
sub
sbb
xchg
cmp
data16
jb
leave
mov
roll
pusha
mov
pop
xchg
mov
in
cltd
inc
fldenv
stc
mov
rcr
cmp
push
xchg
push
push
adc
jle
mov
lock
daa
or
ja
fxtract
push
dec
jae
pop
dec
imul
xchg
mov
jnp
pushf
ret
nopl
adc
data16
hlt
adc
lret
mov
cld
js
ret
lock
call
xor
mov
stos
sbb
jns
adc
inc
bound
mov
sub
sbb
in
or
hlt
fidivl
shll
sbb
or
cmp
fld
and
xor
xor
push
loop
push
cmp
cmp
icebp
loop
mov
xchg
mov
cmp
dec
sbb
xchg
mov
mov
insl
cltd
inc
inc
pop
mov
faddl
pop
xor
test
ja
xor
cmp
jle
sbb
inc
push
movsb
add
jecxz
int
mov
fs
xor
xchg
mov
fnstcw
mov
idivl
jmp
mov
pop
pop
fsubrs
push
mov
js
fcmovnu
mov
shrl
loope
or
add
jmp
inc
lahf
aas
das
rol
lods
jns
xchg
sub
pop
mov
push
inc
lret
std
mov
dec
cwtl
insl
in
mov
mov
fwait
and
jbe
sbb
scas
sub
jle
pop
cmc
inc
pop
fwait
xor
test
faddl
and
and
mov
cs
or
fwait
int3
add
inc
sub
mov
adc
push
mov
lea
push
into
mov
xchg
clc
mov
mov
pop
cmp
in
repz
in
jmp
repnz
or
loope
insb
out
dec
outsb
mov
dec
sahf
jg
icebp
xor
push
int3
dec
lods
sub
loopne
inc
pop
ja
pusha
int
addr16
and
repnz
sub
addb
jae
rcrl
adc
xchg
test
out
xor
loopne
ss
dec
shrl
or
mov
sahf
sub
inc
cs
push
dec
outsb
pop
mov
mov
rcr
or
cmpsl
lret
fwait
pop
xchg
ficompl
pop
adc
xor
scas
ja
inc
cli
dec
inc
sahf
test
ja
ljmp
xorb
xor
in
and
ljmp
lods
pop
imul
add
fiadds
add
imul
sub
dec
xor
mov
inc
adc
sbb
sbb
push
xchg
imul
xchg
outsb
wrmsr
mov
sub
and
fwait
mov
negl
push
sbb
pushf
cli
int
lock
mov
pop
mov
repz
jb
dec
repnz
ficoms
mov
adc
loop
xchg
add
add
jns
insb
ss
in
or
cmc
shr
jp
test
cld
add
imul
iret
xchg
loopne
movsl
scas
push
rcr
mov
mov
arpl
sub
or
imul
mov
mov
add
xor
sahf
or
ljmp
cmp
xor
cmp
mov
or
push
or
sub
orb
lret
or
inc
xorb
push
out
fadd
sub
imul
in
mov
shll
jb
and
or
cmp
cmp
sbb
mov
pop
loop
imul
adc
lahf
adc
arpl
in
fwait
jne
imul
cmp
xor
mov
mov
jae
sub
xchg
mov
pop
mov
or
or
cmp
arpl
ljmp
mov
divb
mov
sbb
add
push
pop
insb
je
mov
lahf
jmp
shrb
jne
mov
pushf
cmc
jb
or
dec
pop
sub
push
ffree
sub
or
mov
ds
cld
ja
or
pop
ja
push
adc
icebp
mov
aaa
icebp
lea
clc
jmp
mov
sub
dec
jp
adc
jle
ds
mov
insl
adc
and
cmpsl
xor
in
inc
push
into
rcll
enter
add
pusha
jmp
jle
fwait
cmp
test
incb
inc
inc
xchg
jbe
jmp
out
and
mov
jmp
lret
xlat
dec
sar
or
mov
mov
stos
ret
lret
fisttpll
inc
sub
pop
inc
inc
mov
or
jg
add
loopne
aad
push
repz
subb
orl
ret
and
sbb
rorb
jo
insl
rorl
jnp
jmp
out
pop
mov
cmp
xor
jecxz
lods
mov
cmp
mov
shrb
out
jg
cmp
jecxz
add
movsb
pop
pop
icebp
insb
sub
inc
lret
icebp
fwait
mov
or
mov
dec
jmp
push
stc
daa
jle
jno
std
cmp
mov
sbb
je
mov
or
lahf
insb
popf
bound
stos
add
shl
iret
add
pop
lods
jbe
xor
adc
xchg
in
pop
out
mov
push
fistps
adc
outsl
push
pop
sti
dec
sbb
mov
sbb
dec
lds
js
inc
mov
mov
mov
push
call
sbb
rolb
mov
shrb
clc
imull
adc
rcll
shll
mov
rorb
xlat
outsb
inc
inc
movsb
movsl
scas
loopne
inc
popa
aas
xchg
sahf
jno
cmp
and
subl
inc
lods
xlat
outsb
jecxz
into
stc
ficomps
in
mov
mov
pop
dec
cmp
xor
sub
xchg
je
fucomip
jecxz
mov
jo
mov
jp
or
and
outsl
jbe
adc
mov
out
insb
ret
adc
ret
push
and
adc
outsb
mov
out
jmp
sbb
cs
sahf
add
push
inc
lock
ss
lods
jecxz
mov
xchg
imul
dec
adc
sbb
lds
mov
data16
cli
lcall
into
mov
into
ja
sbb
or
xchg
cmp
jecxz
sti
test
push
and
into
imul
add
fsubl
lods
or
sbb
out
pop
adc
inc
ficompl
sub
push
js
push
ret
pop
jmp
jle
sub
lods
dec
mov
retw
pop
push
and
test
xchg
or
divl
and
mov
or
adc
jmp
dec
dec
rcrb
shrb
lret
out
mov
inc
lcall
mov
out
lret
mov
shr
xchg
in
loope
mov
cmp
imul
inc
sbb
nop
in
pusha
negl
xorl
mov
mov
lds
in
push
cld
aam
mov
jecxz
out
or
cmp
sti
or
cs
stos
imul
pushf
or
pop
ficoms
in
je
out
push
and
fistps
xchg
sub
xchg
xor
push
inc
leave
insb
fcoms
faddp
dec
ret
stos
jg
data16
push
inc
jp
cmp
mov
fildl
sbb
inc
outsl
in
gs
xchg
ljmp
mov
or
enter
shlb
imul
adc
mov
dec
xchg
mov
jecxz
divb
sahf
mov
test
arpl
xor
loop
stos
rolb
arpl
arpl
sub
sub
cwtl
repz
dec
jbe
mov
sbb
subl
cltd
dec
pop
insl
jae
fwait
lods
arpl
lret
xor
xchg
loop
mov
and
xchg
adc
push
in
shld
lods
pop
fcoml
xor
popa
test
pop
jb
cmp
or
lock
inc
mov
pop
ja
fwait
adc
jge
pop
jnp
lret
jbe
mov
xor
jl
cmc
mov
fs
fcomps
jo
rolb
fsub
movsl
sbb
jb
hlt
add
popa
sub
fcmovnu
loopne
faddl
in
jne
dec
inc
pop
push
cmpsl
daa
movsb
and
ss
mov
imul
adc
xchg
out
mov
repnz
xor
mov
jl
sahf
xchg
xlat
seto
out
out
mov
xchg
mov
mov
cmpsl
testb
clc
cmp
mov
inc
ret
sub
push
aam
in
clc
scas
dec
test
pop
dec
push
sbbl
jge
aad
cmp
jmp
push
or
ja
gs
jnp
pop
xor
pusha
test
aam
cmpsl
pusha
ljmp
loopne
cmp
mov
jle
push
push
xchg
mov
jle
out
mov
adc
leave
int3
add
negb
sub
int
mov
or
lods
popa
inc
mov
mov
fmulp
or
ss
push
xor
dec
outsb
and
mov
movsl
pop
sub
inc
iret
outsl
add
pop
inc
mov
cltd
outsb
inc
and
mov
sbb
sub
popa
xor
xchg
xor
jmp
jns
lcall
push
cmp
push
ret
xlat
or
cmp
aas
mov
push
jns
jnp
mov
jne
sub
fwait
sahf
out
mov
loop
inc
jecxz
xchg
shrl
out
jne
insb
adc
pop
lds
pushf
pop
add
bound
mov
mov
sbb
shrl
das
stos
in
mov
sbb
push
daa
sbb
cltd
and
mov
roll
shl
push
cld
divb
shrb
ss
mov
sub
dec
outsl
pop
mov
lock
xchg
repnz
or
iret
std
pop
loope
jbe
aaa
insl
xchg
mov
in
dec
fmull
sub
push
jg
xor
subl
mov
fst
push
and
sub
cmc
daa
add
popf
jmp
into
or
je
mov
int
pop
lret
test
sbb
push
loope
push
jecxz
ss
das
inc
cmpl
sbb
shl
push
sub
insb
mov
adc
gs
cwtl
push
mov
out
rclb
xchg
cltd
fisubl
and
fcmovnbe
sbb
dec
sahf
push
pop
fdivrs
test
mov
adc
mov
sti
mov
xchg
pop
inc
jp
test
es
jb
mov
pop
fwait
adc
repnz
mov
mov
jmp
icebp
dec
cmpsb
addl
daa
or
sub
push
movsl
pop
aam
mov
cmp
jmp
movsb
or
xchg
pop
mov
dec
pushf
add
stos
sbb
out
inc
dec
hlt
xlat
pop
xchg
cmp
sub
sbbl
and
xchg
jae
mov
adc
popf
dec
std
mov
gs
push
cltd
jp
loop
jg
rorl
xchg
das
fldenv
popa
cmp
inc
jp
xchg
pop
ss
sub
neg
lea
scas
add
mov
insl
imul
movsl
test
xchg
je
jmp
outsb
xchg
out
in
push
sub
dec
aad
jbe
addr16
mov
je
sbb
pop
and
jp
push
and
arpl
or
test
jle
or
mov
pop
je
scas
fsubl
xchg
test
push
push
repnz
add
das
mov
or
adc
jnp
pop
jmp
sbb
pop
mov
jg
push
adc
ss
or
loope
das
fidivrl
pop
aaa
cli
xchg
sbb
repnz
inc
or
inc
mov
push
imul
inc
sahf
movsb
addl
mov
or
lea
popf
faddl
or
outsb
adcb
pop
ffree
imulb
repnz
out
xchg
mov
test
sub
paddq
push
out
dec
inc
addr16
not
testb
cmp
fadds
cmp
push
inc
ret
pop
mov
out
cmp
xor
pop
into
std
dec
out
jmp
stos
int3
sbb
nop
int3
inc
mov
jae
loope
loop
sbb
push
mov
add
inc
cmp
mov
push
pop
test
fstps
add
ds
xchg
adc
fisubrl
xchg
adc
lods
inc
rcr
lea
testb
cwtl
and
test
or
shlb
jl
xor
pop
aaa
cmp
dec
mov
inc
push
cltd
ljmp
lds
cmp
mov
xchg
jge
imul
mulb
adc
int3
sbb
in
mov
fiaddl
pop
jmp
ss
test
cwtl
push
pop
mov
pusha
or
push
out
aaa
je
ss
test
mov
stc
jae
jge
adc
pusha
push
mov
sub
dec
jge
mov
out
test
adc
test
pop
fstpt
imul
lret
inc
decl
and
imul
mov
xor
pop
mov
in
insl
inc
test
pop
pop
out
dec
and
fs
fwait
orb
push
shrl
insb
push
pop
inc
mov
adc
mov
outsb
cwtl
inc
fistl
mov
divl
lods
lods
les
test
mull
jl
and
mov
inc
cmp
xchg
iret
icebp
cmp
lods
arpl
sub
add
mov
mov
push
jmp
and
aam
dec
or
aaa
dec
sub
loopne
adc
xorl
aas
dec
sub
sbb
das
outsl
xchg
and
push
mov
jg
push
icebp
sub
aam
lea
jge
imul
mov
mov
loope
xlat
arpl
je
dec
cli
adc
loopne
addr16
nop
dec
cmpsb
cmp
int3
xorb
test
xchg
mov
nop
int3
inc
push
loopne
leave
xor
jbe
sahf
jmp
inc
fimuls
jge
cmp
mov
int
mov
bound
sub
dec
daa
rep
loop
inc
xchg
popa
push
cmpsb
cltd
fistpl
inc
cmp
sub
push
and
or
mov
xsha256
cmpsb
adc
jp
cmpsb
movsl
mov
vpand
adc
xorb
xchg
ds
cmp
fstl
cld
xchg
dec
test
push
add
lods
stc
mulb
cmp
adc
lea
xchg
pop
lret
int3
insb
jp
sti
ret
pop
bound
test
aaa
fcoms
or
push
add
jnp
inc
inc
out
popa
icebp
or
xchg
rcrl
in
insl
add
cmp
cmpsb
add
xor
jb
push
scas
out
loop
mov
sub
jb
mov
adc
sub
sub
push
mov
cmc
rcrb
push
adc
push
nop
or
sbb
mov
push
xor
test
mov
mov
xor
push
fists
and
aad
add
fmuls
and
sbb
mov
pop
out
jo
shlb
movsl
push
pop
xchg
test
rcl
jmp
jp
fdivrs
xchg
cmp
scas
enter
fisttpl
pop
push
mov
push
mov
nop
mov
pop
repz
je
sub
enter
or
jmp
fisubl
fwait
repz
xchg
arpl
fs
push
repnz
add
adcb
stc
push
movsl
stos
add
repz
pop
add
addl
and
push
icebp
pop
cmpsb
icebp
jecxz
into
xchg
dec
xchg
jo
pop
aam
addr16
das
mov
sub
in
xchg
push
jb
js
or
mov
popf
lds
fdivrs
push
jno
push
sbb
jae
pop
dec
dec
aam
sbb
ret
inc
outsl
inc
and
mov
fcomi
aad
mov
mov
push
jmp
mul
adc
dec
jno
test
adc
jecxz
push
push
jae
int3
and
fisubrl
icebp
mov
mov
and
fwait
push
add
movsl
and
sar
jp
xor
sarb
xchg
gs
mov
cli
adc
ljmp
adc
cmp
push
ds
aas
and
inc
pop
pop
add
aaa
rol
in
popf
push
and
loop
mov
out
fisubrl
call
xor
xor
push
in
out
lea
push
in
lret
and
jbe
cltd
xor
jl
sub
xchg
cmc
movsl
push
out
push
ret
xor
mov
jbe
sub
push
bnd
not
iret
outsl
das
shlb
or
inc
cli
outsb
jbe
or
add
fcom
cmc
jle
test
lds
xor
loopne
jmp
loop
aaa
cmp
rorl
sbbl
scas
pop
popa
mov
mov
inc
inc
push
sbb
ja
inc
repnz
loope
addl
jnp
daa
into
and
cwtl
mov
ficomps
cmp
ja
shlb
jle,pt
dec
mov
inc
push
inc
and
sub
cmc
pop
push
out
int3
dec
repz
jp
icebp
loope
sub
xor
jbe
stc
push
cmp
add
mov
loopne
cmc
call
push
nop
or
or
push
insl
xor
in
dec
dec
cs
adc
xchg
leave
in
push
insb
cmc
mov
lahf
mov
jp
pop
shlb
sbb
adc
sbb
mov
scas
jbe
aad
or
or
fdivr
lret
jl
cmp
lock
subl
jmp
popf
pop
std
pop
fwait
in
adc
outsb
jns
fucom
sbbb
mov
imul
push
or
adc
or
jno
xor
or
jmp
push
mov
fidivrl
cmc
rol
fcmovu
add
idivl
jge
pop
xchg
aaa
cmp
mov
ljmp
mov
lea
mov
pop
sub
cmpl
pop
in
imul
xor
fistpl
push
es
ss
clc
cmp
fistl
xor
enter
dec
mov
push
fwait
jg
sub
mov
int3
cmpsl
imul
cmpsl
cmp
fwait
rorl
inc
xchg
fiaddl
ss
jnp
push
cmp
out
jg
sbb
test
xchg
leave
sti
les
jns
das
test
mov
fwait
icebp
cmp
dec
popf
pop
xchg
lock
xor
xor
subb
dec
les
pop
cmpsb
sub
cli
sub
push
adc
sub
movsb
mov
jp
negl
int
out
pop
add
pop
jp
mov
int3
pop
add
lahf
mov
test
jne
outsb
dec
iret
jmp
xchg
push
cmp
jge
mov
fsubs
scas
dec
arpl
mov
lods
jmp
fisttps
lcall
and
andb
pop
outsb
cmp
inc
pop
fsubrp
fistpll
popa
out
jnp
mov
inc
ss
adc
pop
fimull
rorl
xchg
add
or
lret
outsb
sbb
cmp
lods
repnz
or
into
stc
cmp
cmp
loope
push
je
mov
dec
cmpsb
hlt
push
mov
mov
mov
and
dec
mov
add
mov
fcompl
fcoml
or
dec
outsb
test
insb
scas
dec
jno
call
xor
jae
push
jle
sahf
xchg
inc
mov
jmp
mov
pop
push
mov
nop
cmpsb
push
jmp
sahf
inc
jno
imul
insb
cli
outsb
mov
sbb
movsl
cld
gs
shll
popa
mov
inc
jg
clc
shrb
pop
lret
xchg
mov
push
or
xor
gs
cmp
sub
jne
xchg
inc
jnp
cmp
out
test
add
sub
xor
mov
add
ds
shll
pusha
outsb
jnp
call
mov
push
outsb
enter
dec
js
inc
rorb
jbe
ja
add
push
lcall
mov
loope
mov
mov
add
mov
cmp
rol
mov
sub
push
adc
and
std
jno
hlt
xor
mov
call
enter
fs
sbb
dec
sti
xchg
movsl
out
jno
cmp
daa
ds
ljmp
lods
xor
sub
inc
adcl
dec
adc
inc
dec
mov
lret
push
lahf
inc
pop
fwait
scas
xor
or
push
lds
push
push
movsb
loope
mov
jmp
mov
and
inc
pop
out
aad
and
ljmp
daa
shrb
test
pusha
je
lods
stos
push
out
mov
cmp
mov
sub
inc
push
pop
js
icebp
jb
mov
mov
fbld
mov
mov
int3
or
movsb
arpl
push
cld
inc
sub
cli
push
and
je
gs
mov
sbb
into
xchg
jne
push
les
push
fwait
js
and
push
sbb
test
push
push
int3
push
adc
bound
lods
xor
inc
pop
mov
cmp
inc
cltd
fwait
add
xchg
add
xchg
or
cmp
aaa
rcr
xor
xor
cmp
je
mov
roll
ljmp
test
push
mov
cltd
mov
call
xor
ss
pushf
aam
xchg
sbb
mov
dec
sub
sub
mov
xchg
push
add
sub
adc
hlt
and
mov
lret
je
cmpsl
shll
in
popf
push
or
cs
aad
stos
sbb
movsb
jg
mov
push
add
jge
push
subb
dec
pop
movsl
rcll
rorl
add
sbb
lods
push
daa
xchg
jo
inc
imul
xor
pop
sbb
mov
test
or
fs
add
je
xchg
cmc
push
int3
insb
out
stos
scas
sar
cmp
mov
pusha
rcl
imul
pushf
jb
mov
imul
inc
gs
push
mov
add
movl
bnd
loop
aad
push
fstpt
lret
pop
and
jnp
ljmp
scas
mov
sub
ret
mov
jo
adc
sub
push
xor
inc
clc
add
repnz
cli
pop
cmp
out
popa
or
cmpsb
in
imul
sbb
fstps
aad
inc
ret
xchg
jb
inc
call
jge
jno
push
and
sbb
mov
dec
ret
cmp
dec
xchg
iret
fistps
scas
bound
xorl
fstl
mov
dec
add
pusha
xor
in
cmp
fneni(8087
out
outsl
mov
in
mov
sub
pop
xchg
imul
inc
mov
mov
sbb
mov
imul
jle
sarl
outsb
fs
aam
sbb
mov
shll
and
sbb
mov
jecxz
enter
cs
push
mov
xchg
cs
sbb
inc
fistl
xor
mov
mov
test
cli
add
xchg
loop
adc
sbb
push
lods
xor
adc
outsl
dec
sub
iret
iret
inc
ret
sbb
fcmovnbe
push
lret
and
jle
add
add
jo
int
mov
or
inc
sub
pop
sub
outsl
in
fbstp
xchg
mov
push
sbb
sbb
fstp
or
sub
xor
cmpb
es
fisubs
cmp
sbb
sbb
and
fmull
data16
pop
fnstsw
cmp
push
jg
push
imul
insl
push
add
ret
push
fs
pusha
push
int3
loope
pop
test
pop
fistl
pop
sbb
mov
xchg
add
push
xchg
push
push
cmp
cmp
jg
mov
push
sbb
jg
mov
cmp
mov
movsb
pusha
pop
mov
add
pop
pop
cmp
pop
cmpsl
lahf
pop
adc
mov
jg
jo
push
jl
dec
sbb
inc
dec
pop
lods
aam
or
test
xlat
jecxz
cmp
popf
dec
jns
notb
sbb
or
daa
sbb
xor
pop
xchg
ja
loop
in
cmp
insb
dec
cltd
ret
cli
xchg
fldt
fldln2
lret
xchg
lea
ret
mov
pushf
test
iret
ret
cmp
insw
mov
mov
or
sbb
pop
sub
lods
insl
out
fadds
popa
shrb
or
icebp
stos
cmc
or
setle
pop
fnstcw
cmp
sub
aad
or
xchg
clc
lock
lcall
les
lods
cmp
add
fcmovnu
add
fwait
ror
pop
leave
push
fs
cmc
jne
out
push
xor
imul
test
daa
cmpsb
pushf
sbb
adc
pop
xor
ljmp
shll
cmp
enter
lahf
or
or
scas
xor
cmp
jns
fmull
lds
lods
mov
stos
lret
movsb
xor
pop
aas
sbb
fstps
ret
add
aam
dec
jnp
lea
or
je
inc
mov
std
loopne
iret
loope
mov
jns
adc
test
mov
xchg
mov
push
outsl
and
fsubl
pop
jb
dec
xchg
cmp
jbe
add
dec
ror
scas
test
push
aas
das
push
in
xchg
pop
sub
or
sbb
fmull
mov
add
out
or
mov
adc
mov
xchg
jnp
int
rcll
js
fwait
mov
xchg
dec
mov
andl
je
in
pop
in
out
test
bswap
inc
in
mov
push
stos
push
jbe
mov
adc
in
in
dec
cmpsb
hlt
add
imul
das
cmpsb
nop
sub
mov
mov
enter
push
pusha
loop
adc
mov
xchg
sub
inc
fldpi
mov
jo
lods
mov
or
jg
mov
jge
popa
xor
add
add
sub
push
mov
mov
sub
xchg
and
jno
pusha
rcrb
mov
sub
hlt
in
sbb
jmp
enter
adc
dec
les
popf
cltd
cltd
adc
adc
inc
cmp
clc
bound
pop
push
dec
in
adc
inc
insb
push
xchg
lea
mov
jmp
outsb
lret
stos
sbb
and
adc
xchg
lret
das
push
ret
mov
sbb
cmp
or
je
imul
cmpsb
add
test
xor
ljmp
popa
mov
ret
and
scas
rorb
shrl
divl
enter
divl
inc
mov
xchg
shrb
rcrl
fisttps
das
jmp
loope
out
jge
lcall
dec
and
je
popf
sbb
or
pop
jb
xlat
sbb
jae
fnsave
fwait
jns
pop
jbe
ss
aaa
shrb
cmp
jo
jnp
xchg
pop
or
movsl
xchg
rolb
jo
mov
pop
rolb
lahf
jmp
jge
pop
jb
pop
addb
xlat
outsl
push
mov
sub
jnp
notl
gs
ljmp
ljmp
mov
or
fwait
nop
mov
aas
movsl
add
fsubrs
jecxz
enter
fwait
ds
sub
push
jg
loopne
push
cmp
jbe
icebp
out
iret
insl
cs
sbb
lahf
mov
lock
lret
or
cltd
inc
push
cmpsl
lret
adc
vpsllq
rolb
mov
ljmp
fcmovbe
mov
addb
test
jge
push
mov
fimull
inc
jmp
hlt
stos
aad
jl
cmp
mov
mov
inc
mov
and
add
push
mov
mov
sbb
add
movb
xor
adc
lea
mov
les
ljmp
repz
sub
push
and
ret
std
rcrl
test
mov
arpl
dec
sbb
pop
or
in
mov
push
cmpsb
repnz
testl
enter
mov
pop
js
movsb
movsb
fimull
insl
popa
les
adc
cmp
scas
xchg
push
ds
cmp
pop
bound
addr16
mov
xchg
and
mov
sub
sbb
fsubl
mov
push
pop
mov
xor
lods
pop
and
iret
in
jmp
rol
mov
scas
fxch
and
mov
xchg
lock
cwtl
iret
pop
xor
lcall
push
or
jae
fs
frstor
fcomp
pusha
push
stos
mov
mov
pop
xor
sub
outsb
inc
es
lods
mov
arpl
sub
scas
es
bound
xor
adc
jb
mull
xor
pop
nop
arpl
lret
push
xor
and
add
leave
and
dec
js
jnp
aad
adc
sbb
ljmp
stos
lock
loopne
lea
xchg
mov
sbb
je
jno
mov
jmp
or
jne
adc
mov
out
dec
mov
dec
inc
and
sub
and
mov
push
repnz
mov
add
mov
lods
popf
int
enter
and
mov
push
dec
rcrb
inc
mov
inc
cld
mov
test
jl
int3
mov
push
hlt
sub
or
or
out
outsb
lret
movsb
pop
mov
mov
sti
stos
push
add
pop
mov
xor
adc
inc
outsb
mov
add
add
jecxz
and
aaa
add
jl
repz
inc
mov
mov
pop
js
add
roll
nop
aam
dec
std
jge
xor
out
xchg
pop
mov
cmp
mov
arpl
xor
jae
aad
das
pushf
imul
sub
jp
jecxz
xor
fstpl
mov
into
lret
or
aad
jne
cmp
insl
fmull
mov
xor
inc
sub
enter
mov
not
cmc
push
stos
sub
xlat
iret
bound
aaa
imull
lret
jbe
inc
outsb
idiv
mov
pop
push
mov
push
mov
bound
sub
cmp
push
jl
out
mov
lcall
push
cs
out
jecxz
push
xchg
fidivrs
fsts
clc
sbb
addr16
ljmp
xor
sbb
and
arpl
dec
and
jns
testb
pop
mov
push
pushf
ss
and
cmp
or
jno
lock
cmp
push
sbb
jne
into
stos
mov
ja
add
fidivl
dec
jl
or
pop
fs
mov
aam
mov
mov
data16
std
mov
mov
and
sub
test
stos
xchg
xchg
jg
xor
cmpsb
xchg
and
adc
cmp
or
and
mov
mov
ret
pop
mov
add
pop
fsubs
push
push
mov
js
nop
push
lds
je
sub
aas
dec
loop
mov
mov
cli
dec
and
add
sub
push
inc
inc
rcrb
mov
pop
ficompl
daa
pop
xor
sub
mov
out
sub
hlt
adc
xorl
iret
cmp
imul
jg
add
test
sbb
in
push
push
jge
movsb
and
sarb
xor
jmp
jb
or
sub
add
loop
lcall
jmp
mov
mov
sbb
add
roll
and
ret
lcall
loop
mov
sbb
push
push
subl
mov
cs
ret
fisttpl
rcrb
add
insl
icebp
sub
gs
insl
or
and
leave
jge
and
ret
push
out
pop
stos
mov
into
mov
and
jns
xor
lahf
mov
sub
mov
sahf
jo
loope
ja
scas
jmp
jne
cld
jg
inc
jo
jge
or
mov
cwtl
test
sbb
sbb
sub
enter
inc
fcoms
sub
pusha
mov
cwtl
dec
add
adc
das
es
dec
cmp
or
adc
out
in
and
jl
movsl
adc
dec
in
xchg
dec
cld
inc
sbb
adc
out
js
xchg
ret
pusha
add
adc
loopew
inc
fs
push
sbb
inc
mov
nop
xor
mov
ret
in
popa
or
pop
lods
push
pop
sub
stos
movsl
add
stos
cmp
adc
add
inc
cmpl
insl
ljmp
mov
push
insl
aam
mov
lods
jl
pop
cmp
fmulp
pop
dec
hlt
adcl
xchg
mov
adc
clc
dec
mov
std
sub
and
fdivs
nop
or
scas
mov
shrb
shll
rol
ja
add
shl
sub
rcl
sahf
pop
fdivrl
test
lret
push
push
push
mov
sbb
add
sub
loopne
xor
dec
js
sub
dec
out
leave
enter
into
popf
jmp
sbbb
add
orl
dec
icebp
in
nop
sbb
fimuls
adc
pop
nop
pushf
push
lds
cmpb
aaa
jbe
js
add
inc
insb
sub
ljmp
fucomi
lcall
das
jns
ficoml
bound
iret
add
jecxz
push
stos
sub
mov
adc
in
repz
int
push
jno
sbbb
in
inc
or
push
hlt
gs
in
jnp
xchg
ret
xor
add
cld
out
and
mov
push
push
adc
mov
mov
push
pop
jle
js
dec
adc
pop
shlb
outsl
jns
stc
xchg
and
push
out
ljmp
insb
jb
xor
test
mov
jae
inc
in
sbb
sub
jne
cwtl
jb
shll
loop
xor
mov
test
arpl
mov
xchg
cld
cmpl
out
movsl
lock
push
sub
jmp
push
mov
insb
adc
or
fmull
sbb
push
cmp
fnsave
in
mov
xchg
clc
mov
or
pop
xlat
fcomps
movsl
mov
adc
add
stos
xlat
adc
cmp
sbb
lret
push
dec
sbb
jmp
xor
sub
scas
fidivl
in
dec
cmovl
fisttpll
stos
inc
sub
jae
inc
sub
pushf
jae
mov
jne
xchg
mov
sbb
es
out
ja
ror
push
xchg
sub
fucomip
and
add
aas
add
test
outsb
int3
scas
aad
dec
aas
and
sar
and
mov
cltd
ss
jl
stos
lds
fucomip
sub
xor
cmp
inc
mov
sbbb
not
loop
and
lret
sub
jg
mov
movsb
lods
and
sub
sbb
mov
mov
xchg
add
das
mov
nop/reserved
mov
pop
int3
push
out
and
push
mov
dec
dec
les
cmp
movsb
repnz
test
pusha
ljmp
pop
dec
dec
mov
mov
repnz
xchg
repz
hlt
das
xor
sub
std
sub
cmp
arpl
inc
and
imul
adc
out
aad
sub
int
push
insl
ret
jne
lcall
mulb
add
cmp
jb
sbb
push
pop
add
testl
out
mov
push
shrb
leave
and
int3
pop
or
insl
repz
mov
jo
cmovb
xchg
mov
and
hlt
mov
das
add
repz
daa
jbe
or
mov
inc
xor
lcall
icebp
icebp
mov
sub
addl
lahf
orl
cmp
mov
outsl
stc
shrl
call
inc
pop
addr16
pushf
int3
xchg
mov
lcall
rol
adc
data16
imul
negl
std
cmp
sbb
cmp
mov
xlat
bnd
jns
int
sbb
and
scas
adc
jp
and
pop
inc
push
pop
push
out
sbb
push
lods
ret
sub
in
imul
pusha
scas
in
stc
jbe
test
loop
xlat
xchg
mov
insb
mov
leave
dec
add
and
imul
or
cli
mov
leave
stos
stos
in
or
shrl
jno
cs
or
mov
repz
sbb
popa
jle
dec
xchg
imul
add
data16
lret
xchg
xor
shlb
mov
or
roll
or
lcall
sub
add
fstpt
push
rol
out
decb
nop
stc
insl
pusha
sbb
insb
stc
or
add
jl
inc
mov
out
test
pop
movq
xchg
lret
mov
in
pop
scas
loopne
roll
xchg
shl
loop
lds
mov
ljmp
mov
in
mov
xor
jbe
into
scas
lret
push
enter
out
cmp
sti
dec
jbe
sub
jae
arpl
repnz
mov
mov
xchg
das
cld
adc
cmp
adc
lock
pop
sub
scas
loopne
jnp
add
lods
hlt
cmp
imull
loope
lcall
nop
mov
cmp
pop
testl
notb
imul
or
mov
out
fildl
cmpb
pushf
sub
xchg
mov
push
popa
push
or
jp
outsl
in
call
mov
xchg
push
push
loopne
movsb
mov
clc
inc
xchg
cmp
add
mov
dec
jae
push
fiaddl
sbb
mov
pop
push
and
inc
push
sbb
or
xchg
cltd
in
loopne
iret
ret
cmp
and
mov
xchg
inc
jecxz
lahf
push
fsubl
or
fnstenv
or
es
enter
shlb
xor
push
push
mov
mov
imul
mov
stos
stos
and
jo
xchg
sbb
mov
mov
and
adc
push
aaa
outsl
fwait
dec
lcall
xor
jge
sub
stos
mov
lcall
inc
cmp
fidivrs
xchg
jbe
lods
mov
and
jge
inc
pop
aam
into
or
outsl
dec
pushf
fwait
lods
or
scas
test
cmc
xor
lret
mov
xchg
mov
mov
mov
movsl
mov
test
pop
outsl
adc
mov
ret
lods
int3
and
or
out
inc
xor
xorps
fdiv
inc
gs
jmp
lea
xchg
test
enter
gs
pop
stos
stc
hlt
add
fdiv
add
rorl
fsubrl
pushw
and
call
ljmp
repnz
fwait
dec
adc
sti
dec
pushf
fcmovu
dec
ljmp
and
les
mov
addr16
fs
mov
in
imul
or
mov
add
xchg
fcoms
xchg
scas
or
les
jg
repnz
sbb
inc
or
pop
xor
mov
fmull
sahf
push
add
popf
cmp
cmp
pop
mov
xor
pusha
dec
and
inc
sub
inc
cs
mov
shrl
cmp
sub
movsl
dec
and
pop
mov
add
dec
and
pop
jmp
mov
push
adc
jg
add
pop
mov
in
push
adc
xor
out
sub
pushf
leave
sbb
sub
push
in
or
dec
dec
aaa
cmp
mov
pop
inc
jo
pop
push
rolb
fstps
or
fmulp
lock
popf
inc
mov
dec
and
xchg
gs
inc
fisttps
xchg
mov
loop
mov
push
cld
rol
add
pop
jnp
movsb
mov
scas
and
cwtl
push
push
mov
int3
icebp
incb
test
mov
outsl
lods
imul
mov
adc
insb
sub
jmp
scas
xor
aaa
dec
mov
sti
pop
imul
insb
xor
inc
jo
xchg
jecxz
int3
sbb
fldcw
mov
enter
cs
lcall
fs
or
repz
mov
cli
inc
in
xchg
xor
pop
fnsave
pop
add
das
sub
cli
aam
or
add
or
lock
rcrl
icebp
lock
movsl
xorb
push
add
dec
sbbl
pop
cmp
mov
mov
pop
mov
movsb
pushw
adc
dec
cs
push
push
push
out
mulb
stos
jb
dec
lods
sahf
mov
adc
or
add
mov
mov
call
mov
stc
cwtl
push
stos
xchg
in
mov
test
mov
or
cli
sbbb
inc
test
add
ja
push
into
adc
dec
adc
jle
lret
es
lcall
and
mov
stos
sbb
inc
dec
cmpsl
cld
mov
scas
cmc
mov
push
mov
idivb
mov
xor
faddl
fs
pop
inc
or
xchg
ds
mov
adc
icebp
aam
std
mov
xchg
mov
dec
arpl
test
jle
fisubl
pop
repnz
sbb
cmpb
idiv
jg
cmp
xchg
int
inc
cltd
push
adc
aam
cmp
mov
loop
stos
into
inc
cltd
daa
into
dec
sar
push
lcall
push
mov
insb
jo
ret
sbb
imul
fs
mov
pop
and
sub
xor
addb
push
push
bound
sti
movsb
stos
imul
mov
sub
mov
dec
pop
adc
aas
fcmovb
inc
aad
xor
paddw
push
and
adc
ja
add
lahf
out
jne
data16
inc
cmp
xchg
jmp
lock
inc
mov
push
push
push
sub
scas
shlb
jmp
add
in
adc
xchg
or
in
test
das
sub
sahf
add
call
mov
aas
mov
test
fstl
aam
stos
jbe
jg
pop
jns
pop
scas
pusha
mov
jl
mov
jecxz
in
movsb
and
lods
sbb
mov
sbb
cli
imul
xchg
push
out
in
xor
cmpsl
jns
adc
test
mov
dec
pop
xlat
pop
pop
and
push
lds
push
pop
cmpsl
ret
movb
rolb
cltd
int
mov
loop
out
jb,pn
in
movsl
in
jl
adc
test
adc
xchg
lea
hlt
jmp
enter
sbbl
dec
fstpl
add
sahf
movsb
es
insl
es
dec
test
cwtl
pop
test
pusha
sbb
mov
aaa
xchg
ja
xchg
mov
jnp
mov
mov
mov
mov
add
pop
popa
inc
adc
jge
sarb
jns
pop
clc
or
outsl
mov
and
cmp
push
mov
pop
pop
and
or
mov
jge
pop
imul
bound
lahf
push
jb
aaa
push
lret
andb
pop
and
xchg
notb
mov
mov
pop
out
jg
pop
cmp
daa
mov
push
add
dec
jge
or
and
xchg
scas
test
mov
es
nop
out
cmpsb
jmp
insb
mov
adc
gs
pop
rclb
sbb
push
mov
cmc
mov
and
dec
and
ja
jno
ffreep
push
sbb
push
mov
les
jmp
andl
fists
test
sbb
into
push
mov
mov
xchg
inc
xchg
dec
mov
loopne
js
ljmp
fwait
jno
sbb
lea
cs
clc
push
aam
cld
call
es
and
shlb
and
inc
push
shrb
and
xchg
adc
pop
frstor
xor
xchg
pushf
mov
pop
pop
scas
in
or
jns
cmpsb
mov
insl
mov
fldt
cmp
pop
roll
xchg
sti
adc
pop
jae
xchg
sahf
cmp
mov
enter
cmp
mov
mov
push
cwtl
shll
ror
bound
add
add
and
sbb
pop
lods
loope
aas
mov
aam
push
cmp
pop
mov
les
stos
sbb
addr16
std
inc
mov
not
lds
insl
je
enter
aas
lods
inc
cld
xor
clc
enter
pusha
insb
dec
loop
pop
mov
bound
test
push
cmc
add
xor
cmp
xchg
test
ror
loope
pop
xchg
je
add
pusha
sub
das
mov
xchg
mov
cli
pop
mov
inc
xlat
mov
add
aam
pop
mov
cltd
jmp
add
leave
aam
popf
jbe
les
imul
movsw
push
ja
mov
bound
pop
dec
xor
movsl
out
sbb
sub
inc
push
ljmp
xchg
sub
icebp
xor
icebp
pop
outsl
or
push
mov
push
jmp
js
inc
cmp
mov
adc
sarl
push
pop
xorl
dec
test
inc
add
xchg
std
push
imul
sub
outsl
xor
mov
cld
cmp
das
cmp
dec
push
push
addr16
or
cmpsb
xchg
out
mov
stos
jmp
adc
dec
pop
out
xor
aam
xor
cmp
in
jo
repz
sub
arpl
and
and
adc
pop
out
inc
pop
inc
nop
add
je
adc
negl
sbb
cmp
mov
bnd
sbb
mov
rorb
std
jl
and
insl
or
cli
pusha
xchg
clc
test
std
aaa
lret
fbld
fcmovu
cvtdq2ps
add
in
in
mov
and
inc
es
pop
das
pop
clc
inc
mov
shlb
pop
stos
xor
mov
cmpsl
jmp
jo
pop
and
xchg
int
mov
dec
stos
jo
rol
or
sbb
mov
jge
out
or
sub
movsb
and
or
add
xchg
mov
pushl
popfw
fsubr
iret
add
jns
xchg
in
shll
pop
rolb
xchg
add
andl
cmpsb
stc
inc
stos
data16
adcl
test
jle
idivb
sbb
pop
sahf
sub
xor
leave
mov
decl
add
jl
insl
sti
les
sbb
outsl
mov
int
subb
rol
jge
ds
sub
or
or
jp
lahf
iret
xor
push
inc
jle
int3
cmpsl
cmpsl
faddl
pop
imul
lods
bound
data16
and
xchg
fsubs
mov
push
loop
mov
cmp
jecxz
and
sbb
jp
mov
mov
dec
fnstenv
sbb
jp
mov
push
jnp
jnp,pt
xor
addr16
or
data16
jle
cmp
loopne
cli
inc
nop
insl
ss
pop
divb
fsubs
movsl
sub
mov
clc
lret
jns
jle
and
rcrb
and
add
add
int
cmpsl
pop
push
mov
ljmp
pop
pushf
movl
imul
dec
add
add
mov
mov
call
inc
loope
fdivs
push
fdivs
and
sbb
cmp
xchg
jns
push
fwait
enter
scas
mov
adc
insl
mov
dec
mov
scas
xchg
jmp
popf
or
in
aam
sbb
cmp
mulb
mov
cmpsb
outsb
bound
lret
adc
aad
xchg
adc
xor
dec
je
adc
lcall
sbb
int
mov
push
dec
ds
cmpb
sbbb
xor
cld
dec
cmpb
jnp
sbb
clc
mov
cli
and
arpl
xchg
dec
pop
add
mov
dec
mov
ret
mov
push
hlt
push
fimull
in
in
dec
dec
xchg
xor
push
cltd
mov
gs
pusha
jb
or
jmp
pop
adc
fs
movsl
sbb
movsb
dec
push
xor
stc
inc
mov
mov
ret
dec
adc
dec
inc
jns
xchg
sbb
outsl
into
in
mov
xchg
xor
les
loopne
lcall
inc
add
aam
int3
mov
add
lods
repnz
iret
mov
or
xor
fidivl
lret
add
icebp
pushf
test
mov
xor
dec
call
sbb
pop
in
xlat
jmp
test
add
bound
popa
mov
xchg
jno
mov
mov
pop
out
cli
leave
fnsave
daa
pop
jg
gs
inc
stc
adc
les
adc
int
stc
xchg
fisubrs
adc
addr16
das
loopne
lahf
mov
dec
hlt
mov
mov
push
mov
scas
pushf
xor
stos
mov
jp
repz
fs
pop
jmp
push
add
adc
dec
sbb
add
out
lahf
inc
cmpsb
push
fmull
mov
pushf
push
jl
push
fildll
add
mov
aas
das
adc
mov
and
je
lods
xchg
out
inc
cmp
lea
sbb
cld
and
adc
inc
js
push
xlat
xchg
loopne
js
cmpsb
addr16
jne
in
add
mov
arpl
and
push
xor
pop
mov
adc
iret
dec
out
stos
and
xor
adc
and
and
and
into
xlat
cmp
std
test
jg
pop
push
pop
jecxz
pushf
xor
scas
sub
iret
sbb
push
push
lret
aaa
int3
cmp
lahf
push
cltd
or
jo
xchg
cmpsb
sbb
test
sbb
out
xorb
xchg
ss
repz
mov
adc
mov
jmp
mov
das
jb
cmp
pop
mov
jmp
cld
mov
stos
push
mov
fcomp
inc
dec
fldl
sub
pop
fnstcw
add
pop
cmp
lock
xchg
movsl
mov
filds
jle
mov
out
daa
fimuls
clc
and
mov
add
movsb
hlt
adc
cmp
pop
fwait
pop
fisttps
jbe
repz
pop
cwtl
repz
out
ror
in
mov
and
adc
into
pop
xchg
inc
mov
adc
hlt
cmpsl
imul
in
cmp
sbb
int3
addr16
pop
jp
and
cld
data16
mov
mov
and
add
lea
les
enter
loop
cli
jmp
and
mov
outsb
mov
shl
jne
gs
lret
xchg
inc
lret
es
iret
mov
nop
adc
fidivs
fwait
sar
fistpll
push
pop
out
jne
test
mov
mov
pop
mov
cmpsb
loope
mov
movsl
jmp
mov
inc
in
xor
adc
testb
ror
js
fwait
xchg
lcall
inc
sbb
scas
arpl
mul
inc
mov
adc
and
bndldx
call
cmp
out
push
leave
xor
loop
movsb
cwtl
cmpsb
adc
mov
cmp
jne
push
xchg
js
xlat
popa
mov
int
push
sub
jl
cmp
push
popa
fld
jecxz
sub
or
out
aad
std
xchg
mov
mov
or
cmpsb
inc
pop
adc
movsl
outsb
jno
lret
aam
xchg
adc
jmp
xor
push
test
pop
inc
cmc
dec
and
add
pop
push
decb
icebp
xchg
enter
xor
into
mov
push
lea
in
mov
cmpsb
sbb
stos
mov
sub
mov
mov
cwtl
pop
out
jb
dec
sbb
and
push
adc
and
repz
out
pushf
into
xchg
xor
pmaddwd
dec
cld
push
out
xor
lcall
cmp
push
push
cs
jl
cmp
cmpsl
jp
jmp
or
fildl
xor
cmp
mov
cs
jp
inc
out
shll
negl
dec
adc
test
add
mov
cmp
mov
ja
call
mov
xor
inc
xor
and
xor
or
addl
loop
push
ds
dec
test
cmp
int3
inc
mov
push
adc
mov
fiadds
cmp
push
cld
inc
movsl
pop
fistpl
pop
test
mov
sti
mulb
fistl
inc
cmpsl
and
or
rcll
push
and
dec
pop
scas
adc
aam
dec
out
stos
mov
rclb
sub
cs
dec
out
fidivs
idivb
hlt
arpl
iret
jmp
ja
popa
in
or
jno
jmp
fs
dec
or
std
loop
jo
xchg
fsubl
stc
movsl
mov
rclb
push
push
mov
mov
pushf
mov
cmpsl
addr16
outsl
fadds
sbb
fisttps
push
nop
cltd
mov
leave
or
fdivp
stos
gs
sti
or
xchg
ds
out
xor
pop
stc
cmp
lret
outsb
fyl2xp1
aam
mov
sbb
nop
lret
cmpsl
dec
js
push
repnz
inc
adc
add
mov
stos
lods
mov
inc
pushf
mov
stos
or
xor
bnd
icebp
out
push
inc
jmp
mov
pop
cli
insb
jns
popa
in
jle
or
add
adc
rorl
add
cmp
mov
cmp
into
lahf
aaa
aad
pop
adc
and
add
add
add
sahf
push
into
fisubl
mov
fildll
pop
cli
mov
cli
push
fisubrl
add
xchg
ret
js
fwait
jmp
dec
sbb
push
push
arpl
jne
mov
in
in
das
or
pop
notl
insl
fiaddl
push
fstpl
lret
push
xchg
fiadds
int
pushf
dec
xchg
mov
dec
pop
loopne
fimull
dec
inc
jo
xchg
adc
pop
test
rcr
ret
aas
fnstenv
cmp
mov
mov
mov
adc
pop
inc
aas
lret
adc
ljmp
repz
push
scas
loop
mov
pop
inc
sbb
adc
mov
push
push
daa
add
xchg
mov
negb
movsb
outsl
sbb
push
stc
cs
jecxz
mov
push
adc
loopne
fdivrl
cmp
jle
push
dec
lret
out
jg
sub
test
mov
xchg
and
cmp
ret
adc
fbstp
jl
mov
not
andb
into
xchg
mov
cmp
clc
test
movsl
inc
scas
imul
scas
cmp
cli
jl
xchg
cmp
loop
jmp
outsb
stos
sbb
repnz
cmp
inc
cli
daa
shl
or
into
or
pop
hlt
sub
cld
fnsave
pop
or
or
and
jle
jmp
pop
in
inc
sub
xor
in
lock
mov
xchg
mov
cmpsb
shl
faddl
jnp
ret
jmp
cmpsl
cs
insl
aas
or
sub
mov
int
dec
lea
fwait
sbbb
pusha
pop
stos
cmp
stos
cmp
insl
xor
orl
cmp
arpl
cmp
pop
push
adc
dec
push
cwtl
sbb
sub
adc
adc
ljmp
adc
arpl
dec
adc
xchg
adc
aad
lret
imul
outsl
movsb
imul
jmp
in
lds
xlat
xchg
jo
pop
pop
xchg
mov
fnstcw
repz
xor
inc
inc
sub
cmpsb
lods
sbb
or
xchg
and
mov
mov
divl
outsl
pop
pop
scas
jbe
dec
fstps
sahf
outsl
jp
and
in
fmuls
push
dec
mov
add
fldenv
sub
sub
stos
stos
test
jns
push
shll
jle
dec
pop
rclb
mov
lea
movsb
loopne,pt
fistpll
fdivp
add
loope
mov
mov
add
xor
inc
sbbl
adc
imul
push
fst
sub
dec
jns
daa
lret
insl
addr16
sbb
or
int
mov
loope
add
scas
call
and
mov
popf
push
and
or
icebp
data16
test
jg
inc
xor
stos
mov
fcompl
and
mov
stos
push
ret
popa
add
scas
xchg
sbb
xor
pop
adc
test
in
std
call
add
push
inc
sbb
in
popf
stc
push
xchg
cmp
and
or
xchg
jge
adc
inc
cwtl
mov
subb
test
repnz
sahf
dec
dec
and
mov
test
aad
sahf
data16
push
int3
rcrl
or
push
or
xchg
iret
push
xchg
adc
es
shrl
cmpsb
xchg
test
xchg
and
cmpsl
inc
dec
inc
shlb
insb
call
test
inc
jle
imul
mov
mov
xchg
or
call
fwait
push
cmpsl
pop
push
and
cmp
jmp
xchg
xchg
cli
xchg
adc
test
stc
jno
dec
clc
xor
add
lods
mov
lret
dec
xchg
addr16
fs
fwait
outsb
js
inc
clc
repnz
fwait
push
cmpb
fnstenv
fadds
dec
pop
std
int3
lret
xorb
in
aad
push
movsl
jne
xchg
rolb
imul
xor
decl
dec
dec
inc
push
sub
sub
jge
jg
mov
bound
lds
shrl
js
mov
mov
data16
cltd
adc
rcrb
or
adc
push
pop
stos
pop
push
push
dec
sub
stos
and
aam
dec
ds
pop
lahf
incb
xchg
hlt
ret
hlt
jecxz
stos
rorb
fcompl
xchg
mov
jp
loopne
jno
in
dec
push
sub
fucomi
lcall
and
xchg
loopne
pop
lock
ljmp
std
rclb
frstor
scas
daa
loope
adc
mov
or
ret
push
leave
sahf
xchg
shlb
cmc
push
aas
jno,pt
mov
mov
js
mov
cmc
adc
inc
ljmp
mov
mov
pop
jp
adc
sahf
and
ds
fs
enter
sbb
cmp
inc
push
xlat
out
adc
repnz
je
mov
add
push
xor
fimuls
inc
xor
scas
aam
push
nop
cli
xor
loopne
leave
pop
andl
jge
push
inc
mov
int3
daa
into
pop
addr16
outsb
jg
inc
mov
mov
lcall
mov
shlb
dec
mov
clc
jp
cltd
arpl
inc
ljmp
push
adc
movsb
rolb
inc
pop
and
roll
fbld
fidivrl
jp
xchg
inc
add
imul
aad
pop
dec
sbb
push
std
sub
pop
jge,pn
sbb
idivb
jp
das
inc
aas
popa
jmp
daa
dec
imul
cltd
cmp
and
mov
jns
in
aad
pop
jns
into
rcll
xor
mov
nop
mov
lock
xchg
outsl
or
mov
aaa
xchg
cmc
hlt
push
mov
outsb
fisubrl
pop
cmp
lret
jmp
enter
cmpsl
imul
mov
icebp
jbe
and
in
or
push
cs
shl
popa
arpl
xchg
js
and
mov
mov
sbb
scas
xor
xchg
je
sbb
cmp
add
fsubl
sub
pop
scas
fcmovnb
aaa
mov
sbb
or
sub
sub
xchg
cs
aaa
jecxz
aaa
ljmp
sub
jl
adc
pop
xchg
rcr
popa
cld
and
mov
sub
imul
ret
xchg
test
popf
pop
sbbl
sub
mov
lahf
jnp
dec
mov
orb
xor
pushf
pop
push
inc
jge
aaa
ljmp
inc
mov
jg
xchg
insl
outsb
popf
dec
les
out
jae
xchg
fistpl
arpl
rcrl
jbe
sub
push
sub
ret
xchg
jnp
mov
xlat
xchg
mov
adc
sbb
mov
sub
movsl
jne
rcr
jmp
mov
mov
inc
loop
xor
push
mov
push
push
pop
cmp
add
xor
and
sahf
xor
jecxz
loopne
inc
sub
mov
in
stos
sub
js
out
stos
ret
ret
and
dec
push
xchg
xorb
inc
jo
daa
cmp
inc
sbb
and
incl
loop
xor
stos
mov
icebp
push
daa
xor
scas
pcmpeqd
out
jno
montmul
cmpsb
xorl
cmc
mov
stos
mov
addr16
out
outsl
popa
fisttpll
test
repnz
add
lds
ss
mov
mov
xchg
jle
out
or
xor
pusha
pushl
and
idivl
leave
test
fwait
jmp
test
mov
or
hlt
jae
xchg
push
out
test
pop
aad
and
imul
pop
push
lds
sbb
jp
dec
inc
loopne
push
jne
popa
ja
or
lods
mov
ja
adc
jae
dec
cmc
sbb
mov
in
mov
out
jp
je
jnp
test
rcll
xor
stos
fcmovnb
push
mov
jne
or
cmp
push
in
push
cmc
mov
mov
in
movsb
push
aas
cmp
and
xchg
shl
cwtl
lods
or
imul
cmp
xor
cmp
out
es
xchg
pop
sub
in
cmp
cmp
sbb
sar
add
fisttpll
cli
push
mov
dec
xchg
or
jbe
cltd
imul
fisubrs
rclb
idivl
mov
inc
push
sub
btc
imul
fsub
xchg
mov
movsb
jae
pop
jmp
sub
ret
xor
faddl
or
xor
addr16
sub
push
cltd
bound
xor
rcr
in
cld
lahf
xlat
fisttpl
int
jle
mov
sbbl
test
insl
mov
inc
repnz
rclb
or
cmpsl
mov
push
cmpsl
aam
dec
ds
loopne
test
xchg
cmp
rcr
hlt
mov
jne
jns
sbb
mov
fmull
mov
cmp
scas
and
ret
fcmovnu
xor
sbb
inc
jle
fadds
roll
mov
repz
aam
cmpb
or
pop
les
repnz
dec
jp
ljmp
sub
in
loop
inc
lret
iret
adc
rcl
jae
cs
sbb
icebp
jge
int
sbb
ss
add
es
movsl
lods
mov
faddl
dec
lods
rcrb
mov
dec
mov
mov
inc
mov
adc
sbb
mov
cmpsl
leave
fcompl
testb
decl
sub
xor
stos
inc
mov
jo
mov
stc
lods
add
sbb
out
hlt
mov
call
pusha
pop
xor
xchg
das
jp
jmp
fwait
sub
dec
iret
jle
data16
aam
out
pop
arpl
cmp
sbb
sub
gs
cmp
call
add
out
icebp
mov
push
int3
idivl
mov
sbb
jp
and
fstl
jno
int
mov
jns
push
add
mov
pop
or
cmc
pusha
cvtps2pi
stc
leave
andb
add
stos
xor
ds
xchg
mov
xchg
push
mov
sub
int3
scas
scas
lcall
into
cmpsb
mov
iret
out
jbe
jmp
fnsave
inc
and
movsb
nop
fwait
xchg
scas
dec
aas
lds
in
loop
pop
mov
mov
aam
cmpsl
jle
cs
mov
dec
in
shr
lret
das
push
inc
inc
pop
sbb
jb
inc
loopne
int3
mov
sub
dec
pushf
mov
adc
and
shll
scas
and
lret
icebp
jl
add
aaa
loop
rcrb
pcmpgtw
shlb
pop
jecxz
fsts
dec
push
dec
mov
dec
add
mov
jecxz
incl
std
jns
pop
pop
testb
sub
sub
es
sub
mov
add
xchg
subb
fistpl
dec
add
fimull
imul
sub
ret
jns
out
pushf
xor
test
es
jbe
mov
pop
inc
mov
leave
pop
sub
push
enter
sbbb
push
add
sbb
jne
cmp
xchg
inc
scas
cwtl
in
mov
mov
dec
or
push
xor
fisttpl
outsb
push
lret
ja
sub
push
xor
sub
mov
inc
xor
lahf
cmp
cmp
jmp
mov
add
mov
call
mov
rcrb
je
push
mov
sysenter
fistl
daa
mov
lret
loopne
in
and
ljmp
mov
int3
inc
mov
cmp
pop
xor
sbb
mov
jnp
xor
int
daa
mov
sbb
jg
shl
cs
inc
push
xchg
fs
imul
dec
aad
aam
xor
sbb
add
sbb
std
loope
fstl
bound
push
cmp
cli
lahf
xor
add
shrl
mov
in
mov
lea
fs
or
push
cmc
jno
ljmp
xchg
dec
jle
daa
stc
dec
xor
bound
rolb
add
jge
and
mov
dec
push
push
decb
fildl
aam
cmp
fwait
icebp
gs
hlt
jle
sbb
cwtl
add
fisttpl
adc
in
fstenv
lret
adc
test
hlt
cmp
in
push
pop
sub
mov
lock
inc
sbb
xchg
jmp
pushf
xor
pop
or
cltd
sti
int
pop
icebp
and
mov
cs
push
stos
stos
cmpsb
loope
pushf
cmp
std
jae
jnp
das
jo
jo
mov
test
and
mov
xchg
push
call
xchg
sarl
jo
and
mov
xor
fs
or
inc
xchg
mov
test
imul
xor
out
lea
add
cmpsb
mov
ror
enter
data16
js
aas
out
rol
adc
in
mov
fisubl
lds
push
cmpb
jae
imul
loop
push
imul
dec
movsb
or
sub
icebp
mov
pop
xor
add
ds
movsl
and
mov
xchg
jle
inc
scas
mov
push
dec
mov
cmpsl
or
push
aam
repnz
xchg
push
sub
jge
xor
inc
cli
ret
or
cmpsl
cmp
push
mov
push
inc
pop
jo
pop
xchg
call
repz
scas
arpl
les
repz
jg
add
ds
sarb
fisubs
rorl
cld
cmp
jmp
into
scas
xchg
sbb
xchg
imul
sub
cmp
sub
jne
add
inc
pop
jne
aas
je
insb
and
push
scas
shlb
add
mov
les
mov
in
push
ret
add
and
xchg
in
shl
xchg
out
jno
jbe
push
lods
mov
inc
push
dec
cmp
aas
bound
dec
adc
scas
inc
sub
int3
sbb
dec
sbbb
jnp
addr16
hlt
fbstp
pushf
addr16
push
shrl
loopne
in
jnp
bound
adc
rclb
in
sarb
fisttpl
sahf
pop
xchg
sub
lcall
sti
loope
adc
pusha
push
ss
orb
ss
or
and
mov
push
xchg
xor
cmp
mov
lret
sbb
js
mov
mov
and
das
movsb
scas
or
outsl
inc
imul
icebp
sub
sahf
cmpsl
push
mov
sbb
dec
fidivl
outsl
enter
push
fstpl
jne
icebp
jb
sbb
jno
jae
cmp
insb
in
mov
jno
xchg
test
mov
mov
jecxz
adc
push
xchg
sub
push
jne
push
leave
inc
imul
into
dec
lea
pop
loopne
lret
dec
add
mov
clc
jl
mov
sub
lret
inc
inc
and
rcr
cmpsb
pushf
cmp
and
incb
sub
jo
mov
ljmp
rorb
sbb
out
push
stos
cld
gs
jg
sub
mov
lock
inc
xorl
push
fimull
stc
sbb
push
pop
shl
aam
imul
add
and
addl
sbb
push
inc
daa
push
adc
jmp
jb
push
xchg
jno
or
clc
sbb
push
mov
sub
and
xor
and
xchg
sbbl
xor
popf
jg
arpl
and
shlb
iret
mov
xor
out
iret
out
pop
dec
lock
sbb
stos
dec
push
fs
ficoml
outsb
dec
jb
popf
and
clc
in
cltd
lcall
cmpsl
mov
std
push
xor
ja
out
mov
mov
loop
pusha
push
aaa
int
imul
or
repz
push
sbb
mov
mov
or
xlat
aaa
sub
mov
dec
mov
js
sbb
mov
mov
lods
sbb
cmp
inc
adc
cmp
sub
inc
jne
sub
insl
dec
in
cli
jp
fs
sbb
mov
push
jns
pop
push
lods
adc
xor
sahf
jmp
das
jo
in
adc
add
jnp
mov
sub
sub
sbb
mov
dec
sahf
int
mov
sbb
cs
dec
inc
add
fidivl
mov
cmp
mov
stos
loopne
rolb
mov
pop
int
rcr
xchg
sub
outsb
je
dec
notb
popf
gs
mov
imul
dec
popa
mov
mov
lds
imul
ror
jns
jmp
pop
pusha
cmp
sbb
cmp
mov
out
mov
lret
lods
pop
jnp
xor
xor
shrl
loope
enter
xchg
adc
imul
insb
add
xchg
fldenv
sub
or
insb
ja
jo
dec
xlat
and
int
orps
imulb
mul
test
cmp
mov
and
iret
pmaddwd
imul
xor
jg
add
adc
stos
data16
cs
push
lret
leave
cmpsb
insb
sti
push
xchg
mov
sub
push
and
jb
out
fwait
jg
dec
fucomi
movsb
sbb
test
mov
ret
mov
int3
decb
pop
inc
fdivrs
outsl
mov
fdivl
jae
repnz
pop
outsb
push
fnsetpm(287
out
lods
je
mov
adc
rorl
pop
adcl
dec
mov
sub
xchg
addr16
mov
push
add
and
add
repz
lods
push
xor
add
addr16
mull
daa
filds
roll
cltd
sbb
xor
add
xchg
lcall
xchg
shl
adc
mov
xor
mov
std
jb
pop
cltd
mov
xor
dec
inc
xchg
mov
inc
into
popf
loopne
push
mov
mov
pop
pop
push
repz
ja
cli
icebp
xlat
test
xlat
loop
xlat
xor
sub
into
mov
rcrb
test
jo
out
test
ret
mov
repz
and
jns
jg
mov
fldcw
adc
sbb
inc
inc
mov
or
out
lret
in
gs
mov
je
xchg
jecxz
sbb
xchg
movsl
mov
movsb
lods
push
and
xor
or
into
mov
mov
jno
cli
pop
xorl
push
outsb
scas
and
mov
cli
rcr
inc
movsl
push
fs
mov
icebp
fstpl
lahf
mov
in
lods
dec
cmp
loope
outsl
xor
add
insb
int3
stos
mov
pop
ficoml
mov
shlb
shll
xchg
scas
xchg
add
mov
lds
mov
xchg
xor
inc
lahf
dec
pop
shrl
inc
push
xor
xor
jne
cmpl
xchg
iret
jge
dec
pop
dec
jns
fwait
dec
mov
fwait
popa
sbbl
nop
jne
hlt
jbe
mov
enter
sbb
adc
roll
push
arpl
stc
imul
stos
test
scas
inc
shll
cmp
arpl
aam
out
outsb
out
out
fsubr
inc
jecxz
cltd
xchg
dec
repz
cs
imul
inc
ljmp
mov
int3
adc
push
push
sahf
mov
jl
mov
in
scas
mov
repnz
out
aam
hlt
jb
aad
push
cmp
movsb
rcrb
inc
push
test
ret
test
cmpsb
lods
inc
test
push
setbe
in
cltd
lods
mov
pop
and
fxch
sbb
ja
adc
pop
in
pop
imul
stos
test
add
xchg
aas
push
xor
pop
cmp
test
fimull
adc
xchg
xorl
daa
adc
adc
xor
adc
sar
xor
and
in
ret
mov
loopne
insl
xchg
fmul
je
sub
test
pop
cmpsl
fbstp
and
mov
xchg
in
fsubrp
bound
pop
cmp
loopne
js
sub
popa
int3
insb
outsb
push
xchg
imul
push
mov
xlat
and
pop
test
pop
lahf
push
pusha
push
or
pop
fmull
test
mov
inc
mov
rcpps
ret
pop
push
pop
mov
push
loopne
dec
or
mov
test
mov
in
jns
in
mov
mov
jge
ljmp
dec
enter
fs
inc
pmulhuw
xor
cltd
out
int
movsl
iret
xor
mov
sarb
push
into
in
sub
pop
fists
lods
sub
mov
into
mov
add
aam
jmp
push
addb
sbb
push
jb
jle
in
pop
aaa
stos
in
cltd
push
and
push
insb
jle
sbb
lds
and
stos
add
inc
mov
lds
dec
cmpsb
aas
jl
in
fbld
ljmp
lretw
into
pop
js
arpl
fdivrl
in
sub
inc
sbb
lcall
xchg
andl
adc
cld
sbb
je
es
stos
mov
jbe
xchg
pusha
xor
shlb
out
roll
scas
insb
pop
xchg
push
pop
decl
jno
push
out
xchg
std
cmp
mov
jbe
jnp
push
xchg
mov
mov
xor
subb
in
cs
sub
fbld
notl
add
addl
xor
mov
push
cmp
stc
sbb
insl
lds
ret
or
and
lock
dec
or
shrl
push
daa
aad
mov
es
lahf
jae
test
shl
shrb
cltd
ja
cmpsl
or
daa
cmp
rcrb
and
sbb
loope
or
xchg
sub
xchg
mov
pusha
les
sub
push
push
inc
jno
mov
jle
lods
pop
push
cmp
mov
pop
stos
pop
bound
add
pop
into
and
push
xchg
push
loopne
mov
out
outsl
fidivl
mov
lods
scas
mov
and
imul
call
xchg
push
stc
dec
xchg
push
aad
adc
mov
and
pop
ss
mov
pop
aaa
sbb
adc
arpl
pop
mov
ret
push
mov
pop
xchg
inc
add
sbb
adc
add
in
rorb
xor
or
mov
sbb
sub
arpl
pop
dec
fldcw
stos
jae
out
stos
aad
pop
hlt
sub
jge,pt
ss
dec
cmp
jae
insl
psubusw
les
inc
mov
push
out
add
push
flds
cmp
ficoml
aam
sub
gs
jno
pop
mov
aad
in
ret
push
mov
add
jno
xchg
cmp
cltd
imul
imul
subb
std
aas
scas
into
leave
jge
std
fwait
pop
icebp
cmp
in
xchg
jmp
je
inc
dec
cmp
push
stos
gs
cmpsl
sarl
aam
add
test
inc
iret
pop
insl
xor
dec
xchg
pushf
lods
jb
lahf
sub
fwait
sub
fiadds
mov
inc
fcmovu
daa
stos
scas
add
outsb
push
push
fisubl
enter
addb
je
push
inc
cmp
out
mov
cmc
mov
dec
fisubrl
and
cld
ret
enter
repz
lret
mov
dec
out
inc
les
mov
inc
sahf
dec
stos
decl
or
mov
shll
mov
mov
int
pop
hlt
xor
mov
cs
xor
pop
and
cmpsb
and
ljmp
mov
jl
jns
and
pop
mov
mov
gs
jmp
dec
dec
pop
fsubr
lods
mov
pushf
cmp
mov
mov
lcall
and
in
xchg
mov
jle
ret
fisubrl
push
outsl
push
pop
mov
or
dec
repnz
pop
cmpsb
pop
adc
mov
add
sahf
or
fldl
pop
mov
sub
pop
outsl
leave
cmp
aas
andb
xlat
inc
mov
inc
xor
pop
mov
sbb
daa
adc
stc
incl
and
sbb
cwtl
lock
mov
xor
fdivp
xchg
sub
test
insb
or
and
inc
lea
rorl
out
add
adc
mov
popa
mov
leave
cmp
inc
hlt
int3
xlat
inc
jle
xchg
xchg
out
mov
inc
jo
and
inc
lahf
push
adc
adc
mov
imul
jecxz
cmp
aas
push
sbb
loope
xchg
in
sbb
or
pop
cmp
and
push
lock
jmp
js
in
lahf
sahf
daa
cs
inc
sub
stc
push
xor
push
dec
imul
or
js
or
int3
push
push
in
lods
push
in
movsb
lcall
adc
or
adc
jbe
ds
adc
inc
adc
sbb
fidivrl
mov
mov
xor
or
icebp
std
icebp
arpl
daa
dec
push
cmp
mov
mov
das
add
out
mov
mov
adc
das
and
add
cmp
shll
rorb
test
cmp
push
pop
dec
inc
dec
in
lods
imul
shlb
scas
shl
int3
fcoml
nop
add
into
pop
cmpsl
inc
pushf
lahf
cmp
xchg
and
pop
sub
mov
iret
ror
fstp
inc
jl
cmp
leave
jbe
push
pop
jp
scas
cmp
or
in
sti
fwait
jns
inc
or
jne
cmp
and
aad
movsl
dec
icebp
push
cmp
and
lahf
xor
lods
or
dec
lahf
mov
sub
jo
pop
cs
mov
clc
dec
jnp
jns
xor
xor
divl
mov
ret
scas
adc
out
mov
inc
push
mov
inc
clc
iret
push
pop
bound
jmp
jnp
push
lahf
xchg
call
jge
inc
lods
xor
movsl
and
and
imul
mov
cli
mov
and
mov
add
xchg
mov
js
and
mov
xchg
pop
mov
cmp
ss
push
gs
adc
jle
cmp
cwtl
and
jl
mov
pop
pushf
es
sub
lea
inc
aam
stos
pushf
xchg
pop
popf
inc
cmp
movsl
dec
and
mov
mov
das
std
sahf
lods
cmp
jmp
sub
mov
mov
dec
push
insl
xchg
push
mov
pop
or
imul
sub
pop
cmpb
mov
mov
jp
stc
movsb
leave
or
imull
rclb
out
xchg
movb
cld
mov
xchg
and
fucom
mov
shlb
sub
repz
stc
call
in
cmpsb
lea
pop
sub
leave
pop
push
call
or
sub
cmp
out
xchg
cmp
pop
sbb
jo
adc
enter
mov
or
fbld
jae
sahf
pop
add
in
push
leave
ret
addr16
inc
movsl
repnz
stc
pop
mov
xchg
cli
scas
inc
or
xchg
fisttps
mov
or
mov
test
aaa
sbb
aad
out
inc
or
dec
nop
fistl
ljmp
add
std
push
mov
xchg
ficoms
mov
js
out
ljmp
sub
iret
jle
cmp
dec
cli
pop
fistps
mov
ficoml
cld
pop
cmp
lods
mov
aaa
jb
loope
in
mov
imul
push
xor
decb
repnz
aam
cmpsl
dec
and
dec
adc
jmp
fstl
lret
inc
adc
pop
std
xchg
jbe
push
mov
outsl
xchg
scas
inc
push
cmp
xchg
sub
enter
test
jmp
sub
cmpsl
dec
jbe
enter
jnp
push
shll
adc
test
insb
mov
les
insl
cmp
repnz
lds
lods
cwtl
xchg
mov
aad
bound
mov
shrb
pop
ret
and
aam
xchg
mov
jo
outsl
cmpsl
mov
xchg
jbe
mov
sub
pop
xchg
les
jmp
xor
or
mov
xor
inc
add
stos
lahf
and
dec
mov
sub
loopne
mov
adc
add
push
ret
jle
popa
cwtl
rorl
inc
inc
out
add
shll
jl,pn
cmc
fsubrl
push
shlb
dec
fincstp
mov
adc
sbb
mov
add
out
xchg
mov
pushf
fwait
inc
popf
movsl
cmp
xchg
and
hlt
mov
or
add
shl
inc
in
mov
push
inc
sbb
and
mov
dec
xchg
cs
in
or
into
cmp
seta
rcrb
dec
cltd
jns
mov
sti
dec
test
push
cli
lods
inc
nop
add
or
test
xor
cli
dec
cmp
divl
push
mov
pop
mov
and
sahf
jnp
add
or
fnstsw
mov
ret
xor
adc
hlt
jno
icebp
notl
push
mov
sub
add
stos
push
cmpsl
xor
jo
mov
xor
je
lods
dec
mov
xchg
aam
sbb
pop
in
xchg
dec
mov
sbb
mov
iret
xor
sbb
mov
add
cwtl
cmp
add
cs
ret
test
jge
hlt
jb
cwtl
inc
mov
test
lea
fnstcw
jno
loop
es
jae
lds
lret
pushf
cltd
pop
xchg
pop
pop
adc
push
push
or
jmp
out
loopne
aad
daa
mov
push
cld
sub
outsl
rclb
fmulp
test
xchg
iret
lock
ljmp
mov
mov
fildll
frstor
loop
and
fstpl
lods
pushf
inc
and
out
ja
bnd
cmc
adc
sbbl
mov
into
aas
adc
fidivrs
mov
in
pusha
xor
inc
mov
jg
shr
jns
cmpsl
shll
repz
jl
jmp
xor
insl
jg
cmpsb
jae
cmp
mov
cmpsb
cli
sub
add
dec
push
xor
dec
jne
pushf
inc
in
les
out
mov
hlt
call
add
loop
insb
in
sbb
popf
stos
rcrl
mov
repz
jl
leave
cltd
cli
cmp
pop
mov
shrb
das
aas
push
xchg
loope
es
je
fistps
mov
outsl
jae
test
jecxz
push
lods
adc
lods
dec
push
or
ret
mov
mov
mov
je,pn
mov
cmc
daa
mov
lds
imul
cmpsb
leave
pop
adc
and
dec
fiadds
insb
mov
cmc
push
pusha
mov
sub
out
cwtl
popf
add
mov
int
lock
mov
add
cmc
fcompl
nop
sbb
bound
lea
sbb
hlt
xchg
inc
addb
sbb
sbb
jecxz
cmp
idivl
inc
jno
fsubl
xor
sti
and
cmp
push
xchg
into
dec
mov
add
cmp
inc
jecxz
sub
loop
test
rolb
dec
fistpll
add
loopne
test
xchg
push
jp
std
adc
xor
add
jl
mov
lcall
xor
inc
push
cli
jecxz
gs
adc
cmp
test
mov
scas
mov
int3
sub
mov
addb
cmpsl
mov
inc
jle
mov
mov
out
test
pop
int3
arpl
std
ljmp
loope
sub
bound
pop
stos
outsl
int
push
in
xor
add
ret
subb
bound
pop
xor
cmpsl
push
jmp
test
mov
lods
ss
xchg
cwtl
imul
lea
add
fdivrs
mov
jnp
fistpll
xor
aas
into
mov
stc
fisttpll
jge
lds
push
testb
stos
and
add
cmovns
mov
test
adc
sub
adc
xchg
jne
push
icebp
push
jb
xor
enter
lret
cld
sub
pop
jle
jmp
stos
adc
fbstp
pop
outsl
icebp
ficomps
lods
or
xchg
and
push
fiaddl
test
ret
push
cmp
pop
in
mov
out
mov
mov
mov
rcr
rolb
jae
mov
adc
jle
jle,pt
add
sbb
mov
out
stc
sbbl
popf
mov
sti
mov
push
arpl
push
call
pop
xor
divl
inc
sub
cwtl
add
jbe
and
loop
vsqrtsd
scas
hlt
stos
xor
mov
push
sub
popa
andb
inc
mov
mov
dec
sub
dec
int3
push
ds
andb
cltd
add
sub
jo
outsl
sub
fs
call
sub
or
data16
ss
fwait
int3
pop
pusha
shl
jae
pop
jg
sbb
inc
or
out
cmc
outsl
jmp
add
cli
shll
stos
ja
cmpsb
subb
xor
or
xor
ljmp
insl
cmp
pushf
or
adc
bnd
jo
lcall
push
fsubs
sub
in
add
mov
ret
pop
fsincos
gs
add
roll
testb
in
xchg
mov
ja
pop
lock
std
xchg
push
lret
imulb
jmp
xchg
xchg
push
jecxz
lods
cwtl
mov
ja
int
popa
arpl
out
pop
push
dec
push
fildll
adc
lock
cli
out
mov
mov
pushf
pop
in
pop
aaa
push
xchg
gs
rcrl
mov
ja
mov
dec
sub
fidivs
fdivp
mov
mov
fld
or
xchg
xchg
enter
pop
or
push
in
bound
in
inc
sti
cmc
adc
daa
jb
mov
bound
push
xchg
adc
or
arpl
sub
mov
mov
add
in
push
loopne
es
add
mov
insb
shrl
rcrl
mov
jno
loope
arpl
push
mov
mul
xor
aas
sub
adc
xor
insl
push
dec
dec
sarb
dec
or
adc
inc
mov
and
mov
out
lcall
cmpsb
cltd
pop
dec
add
scas
cmp
testb
push
pusha
dec
dec
pushf
inc
jecxz
push
push
imul
or
adc
lret
test
pop
add
push
loope
out
cs
jmp
and
test
test
push
in
jne
rorb
shrl
push
xchg
nop
icebp
or
aaa
dec
sarl
insl
out
mov
cwtl
jns,pt
or
ljmp
push
mov
cmp
add
cmp
push
jbe
or
shrl
out
adc
xorb
pop
and
enter
xchg
jbe
mov
cltd
cs
xchg
jne
and
roll
xchg
dec
cwtl
aas
xchg
sahf
lods
sbb
pop
dec
repz
add
fcoms
xrelease
aad
lcall
mov
cltd
inc
fnstenv
fwait
imul
testb
xchg
jg
leave
lea
bound
mov
xchg
sub
daa
sbb
mov
sub
mov
xor
push
pop
pop
mov
adc
into
mov
pop
push
outsb
mov
pop
lret
cmpsb
addr16
xor
shlb
dec
popa
xchg
xchg
mov
mov
dec
dec
sbb
das
xchg
push
add
test
icebp
sbb
dec
and
lret
jno
add
call
je
sub
and
fsubrl
outsb
mov
jp
push
movsl
je
xor
enter
or
movsb
mov
dec
ret
jb
mov
mov
lea
mov
aas
xchg
shrb
adc
xlat
jp
mov
jbe
dec
push
in
lret
std
lds
add
xchg
push
aad
jmp
es
and
mov
inc
cltd
leave
sbb
xor
orl
inc
lret
ror
inc
aam
aam
fldenv
or
cwtl
pusha
mov
dec
movsb
jle
lcall
jns
add
iret
and
cmp
ds
push
sbb
test
add
mov
push
cltd
inc
in
dec
ljmp
lds
fisttpl
sbb
mov
into
cmp
pop
orl
push
push
or
lea
mov
rolb
ja
shl
xlat
in
rcll
and
push
mov
fidivrl
dec
adc
fmuls
mov
mov
sub
mov
mov
xchg
fidivl
insb
ljmp
lods
enter
xlat
insb
pusha
xor
int
adc
int
rcr
fiaddl
faddp
in
adc
mov
xchg
jbe
cmp
out
mov
cmpsb
pop
fdivrl
je
das
cmp
in
sub
cs
push
js
pop
push
rclb
pop
mov
push
cmp
loop
push
adc
movsb
or
xchg
pop
popa
stos
xchg
aam
mov
mov
fs
daa
jnp
xchg
or
pop
xchg
divl
jae
movsb
call
fdivr
and
xlat
jl
and
inc
sbb
mov
ds
fdiv
push
in
iret
mov
sbb
es
repnz
dec
push
cwtl
pop
arpl
stos
and
stc
mov
ja
cld
inc
enter
inc
stos
arpl
pop
mov
subl
and
andb
push
add
in
iret
mov
jo
mov
in
cmp
adc
jae
aam
add
cmc
mov
stos
cmp
sbb
xor
shll
mov
aas
jl
jo
sbb
test
xorl
frstor
pop
adc
sbb
inc
xor
mov
push
jo
lahf
push
or
aas
lods
pusha
push
or
pusha
repnz
xchg
adc
nop
pop
daa
in
push
sbb
aam
scas
jl
pop
jecxz
mov
pop
cltd
outsl
int3
repz
ss
sbb
imul
cs
fs
out
dec
pop
xchg
mov
aad
movsb
clc
test
mov
push
adc
fs
or
aaa
xchg
stc
xchg
inc
fmuls
fwait
movsb
pop
xchg
jl
xchg
daa
sub
cmp
mov
adc
pop
or
adc
shrb
sti
imul
int
outsb
iret
dec
sbb
cmpsb
mov
pop
and
out
sub
mov
lcall
mov
outsb
and
negl
in
or
mov
jae
stos
out
loop
sti
inc
sahf
sarl
fdivrs
pop
add
cs
aas
cmc
cld
adc
push
test
push
lcall
gs
xchg
stos
mov
jp
ss
pop
loop
out
repnz
in
jno
shll
push
mov
js
lret
push
popa
xchg
sub
sbb
mov
iret
movsl
jl
data16
daa
cltd
imul
stc
mov
fisubrl
push
jmp
ds
mov
push
jl
mov
cmp
lcall
stos
mov
jl
cs
mov
push
lods
pop
and
mov
mov
data16
clc
xchg
or
insb
mov
xchg
hlt
es
inc
xchg
nop
mov
push
adc
adc
cli
sbb
mov
jne
shl
je
or
mov
sbb
pop
jge
sub
cmp
popf
jge
fisubs
or
fwait
push
lods
mov
push
xor
into
sub
dec
iret
adc
adc
in
mov
mov
mov
out
xchg
popa
ret
push
loope
movsb
pop
cmp
add
inc
fsts
mov
outsl
jle
xor
push
push
ja
into
sbb
xor
add
cmc
pop
int3
jmp
sbb
sarl
mov
icebp
scas
pop
xrstors
in
cld
popf
push
cli
out
xchg
mov
ret
jl
pop
out
imul
ljmp
iret
pusha
scas
stos
xlat
jns
sub
cmp
rclb
mul
ret
data16
std
out
push
lret
pop
xor
test
dec
pop
ljmp
out
lret
add
ret
movsl
mov
inc
jo
add
or
or
xchg
lods
jle
dec
xor
add
mov
out
cmp
sysenter
unpcklps
and
jmp
insb
dec
or
sbb
mov
in
test
data16
jne
popa
repnz
movsb
pop
and
jmp
push
jne
jno
pop
ret
dec
inc
aad
incl
jnp
jecxz
adc
push
nop
into
cli
std
or
pop
xor
mov
imul
jge
imull
push
push
icebp
lcall
mov
mov
fcomip
arpl
test
mov
inc
or
ds
out
int
pop
cmp
cld
test
dec
outsl
inc
cmp
sub
out
xchg
and
xchg
adc
rcrl
icebp
jmp
or
pop
or
mov
cmpsl
mov
or
xchg
cmp
mov
mov
fistl
mov
dec
stc
add
loop
iret
jae
test
sub
inc
push
sub
pusha
mov
xchg
stos
inc
cmp
out
mov
lret
ret
bound
pusha
push
ret
gs
inc
push
pop
sub
jle
inc
xchg
dec
adc
sbb
jnp
je
mov
addl
pop
xor
jbe
adc
cltd
stos
movsb
adc
inc
adc
jbe
push
or
inc
xchg
xchg
add
xchg
jb
cmp
and
and
push
lret
adc
add
push
mov
nop
mov
adc
inc
xchg
mov
or
daa
in
xchg
lods
adc
xchg
push
mov
push
xchg
and
cmp
sub
ljmp
sub
pop
pop
dec
xchg
mov
loopne,pn
fsubrs
xor
mov
fsts
repnz
mov
jns
cmp
jmp
pop
add
cwtl
scas
enter
adc
jae
in
andb
sub
cmp
rclb
push
cwtl
xchg
lods
arpl
push
aas
cmp
cwtl
je
inc
orl
int3
push
sbb
inc
in
outsl
push
xchg
gs
mov
sbb
adc
dec
dec
in
data16
push
xlat
and
sub
xchg
cmpsl
iret
xchg
fdivp
repz
pop
and
nop
sub
mov
cmp
das
outsl
and
bound
sbb
inc
mov
loope
insb
adc
jbe
filds
sbb
repnz
cwtl
mov
mov
gs
cmp
aam
sbb
pop
inc
shll
adcb
and
dec
mov
lret
fcomps
dec
lea
mov
int
pop
notb
mov
and
outsl
in
std
dec
push
adc
test
mov
repz
mov
jns
push
movsl
ret
cli
fucom
and
hlt
outsb
mov
loop
push
jl
movntq
xorb
out
fs
pusha
and
adc
and
xor
jge
pop
push
pop
cmpsb
in
inc
pop
pop
push
pop
icebp
inc
inc
data16
and
rcrb
or
jmp
outsb
lods
je
jle
or
lret
lahf
movl
or
xchg
or
cmp
xor
xor
fsubrl
sub
pop
ficoml
mov
icebp
cmpsl
mov
icebp
add
mov
scas
insl
mov
pop
daa
out
cwtl
jne
xorb
rclb
inc
and
pushf
pop
and
cmp
xchg
push
fcmovnbe
jbe
fucom
jnp
loop
imul
inc
push
jb
pop
adc
js
fsubs
cmp
or
pop
in
jb
and
movsb
and
jg
js
fstpl
cltd
xor
js
mov
cmpb
and
ret
jo
mov
lahf
clc
nop
sti
loope
movsb
test
popf
rcll
mov
bound
fdiv
lea
icebp
xor
pop
in
jnp
or
sub
lea
dec
das
xchg
popa
ret
in
and
aaa
ret
mov
xchg
dec
shrb
xchg
or
aam
pop
cli
xchg
add
scas
popa
pop
les
hlt
inc
fcmovnu
jp
mov
sub
in
bound
inc
icebp
mov
pop
push
jns
mov
fiaddl
jp
dec
push
lds
mov
add
sbb
adc
les
addb
mov
sbb
addb
add
je
out
inc
int3
inc
mov
mov
mov
in
xchg
jecxz
xor
ljmp
fldcw
sbb
sub
and
rcrl
xor
inc
or
lret
out
mov
pop
inc
and
add
xchg
pop
jg
cld
inc
lret
cs
mov
fstpt
add
insb
adc
xchg
cmp
inc
int
sub
sbb
popa
dec
fcmovnu
test
push
adc
mov
dec
and
cmp
push
popf
push
or
stc
outsb
xchg
pop
mov
xchg
sub
xor
cwtl
add
cmp
xchg
adc
pop
arpl
mov
push
jg
das
dec
int3
insb
jno
testb
mov
ja
fistpll
popl
xchg
adc
push
nop
lods
dec
clc
xor
dec
sub
loopne
les
sbb
ret
sub
popf
sub
sbb
mov
out
std
inc
mov
imul
add
inc
xor
xor
cmp
cmp
push
fisubrl
pop
fdivrs
mov
jecxz
adc
lret
shlb
fwait
shlb
iret
iret
mov
mov
pushf
fdivr
and
jecxz
add
mov
mov
and
fcmovnb
orb
and
push
outsl
clc
xrstor
jmp
pop
cmp
fisubl
lea
jb
dec
adc
dec
mov
jl
std
cmp
sub
fsubrl
in
ficoms
mov
xchg
hlt
scas
or
cmp
out
xchg
jle
sahf
mull
inc
ja
push
lea
mov
xchg
xor
lret
pop
scas
into
inc
xchg
push
lret
sub
mov
and
mov
aaa
jns
sbb
adc
push
pop
jecxz
inc
ret
je
iret
mov
sarb
xchg
push
shr
sbb
fmuls
fistl
add
imul
aad
je
cmovp
pop
ss
rclb
nop
pushf
inc
testb
or
pop
cmp
adc
mov
sub
imul
sahf
std
std
push
fwait
push
dec
and
insl
pusha
lock
mov
rcr
sub
shlb
xlat
sub
js
mov
neg
cmp
faddl
adc
mov
or
xchg
jbe
inc
rolb
dec
mov
adc
jnp
repnz
imul
fs
mov
loope
popa
scas
push
jp
insb
insl
mov
lahf
call
adc
jge
mov
or
inc
add
movsb
out
nop
mov
inc
dec
dec
sub
loope
mov
test
rcll
xor
pop
jp
sub
mov
mov
xchg
pop
adc
cs
fwait
xchg
stc
mov
mov
pop
arpl
in
cs
xchg
pusha
jp
das
or
mov
adc
mov
lahf
mov
or
cmp
and
fwait
rorl
xor
push
mov
xor
and
sahf
inc
sub
cmpsl
jl
xchg
dec
push
lea
lahf
sub
push
cmpsb
mov
and
sahf
push
ficompl
std
fsts
sti
aam
dec
inc
lret
pop
sub
mov
clc
fldl2t
mov
cmp
or
out
xchg
fdivrs
roll
cmpsl
cmp
mov
sbb
pop
sbb
inc
jle
jno
sub
adc
out
cmpsb
mov
inc
pop
mov
push
pusha
pop
xchg
mov
jbe
dec
inc
jnp
sbb
and
xor
dec
lahf
testb
insl
cwtl
inc
ds
xchg
push
lret
pop
test
jecxz
pushf
and
pusha
out
sub
xchg
sbb
hlt
pop
je
and
inc
pusha
ret
leave
xchg
lods
lods
jbe
and
xchg
mov
fsubl
xchg
in
sub
pop
dec
stc
shr
jbe
int3
pop
int3
add
add
pop
inc
es
and
shrb
mov
push
in
xor
dec
xchg
neg
sbb
std
push
mov
jecxz
ret
inc
unpckhps
repnz
out
lret
and
fwait
cli
lahf
fadd
push
mov
scas
je
dec
jo
inc
or
mov
test
pop
xlat
cmpsl
xchg
cltd
mov
xor
mov
cltd
test
ret
inc
pushf
aad
sbb
enter
inc
sbb
aaa
in
test
das
xchg
mov
push
cmp
ljmp
add
sbbb
jp
cmp
inc
mov
mov
and
xchg
leave
out
inc
push
lea
sbb
dec
push
xchg
xor
pop
lcall
daa
loope
hlt
mov
jle
shll
imul
in
push
add
in
loopne
pop
inc
into
pop
dec
sarl
adc
inc
mov
pusha
mov
stc
gs
addr16
xchg
ljmp
dec
movsb
and
push
hlt
pop
jecxz
mov
push
mov
push
lret
jmp
aaa
arpl
fcomi
cmp
jb
shrl
arpl
push
push
stos
popa
jns
shrl
and
call
inc
jg
sti
je
out
in
scas
jge
into
lret
and
inc
test
jl
ret
or
mov
sahf
xor
pop
dec
scas
nop
adc
mov
or
and
mov
or
movsl
ds
or
xchg
xor
or
inc
inc
xor
sbb
lods
inc
mov
lret
cmp
jp
int3
add
aad
jmp
pop
ljmp
jmp
jmp
push
ret
leave
mov
iret
insb
insb
xor
sub
jge
iret
fisubrs
push
rcrl
and
mov
push
add
imul
or
pop
mov
or
push
shrl
es
out
in
das
icebp
pop
xchg
scas
adc
bswap
xchg
fsubs
or
xchg
add
psubw
mov
dec
addr16
pop
gs
mov
cmp
fsubrl
adc
jg
shlb
outsl
dec
dec
fisubrs
or
icebp
addb
into
mov
pusha
pop
into
fidivrl
dec
test
pusha
xor
or
ds
stos
stc
clc
xchg
sar
pop
add
sbb
jmp
jb
jns
popf
addl
and
sub
enter
xchg
lods
test
add
dec
ljmp
cs
add
sub
jno
in
and
iret
cmp
into
cld
push
pop
pop
in
fldenv
arpl
sahf
jecxz
lock
mov
leave
dec
add
subb
mov
out
bound
mov
jp
lcall
daa
sbb
addr16
mov
push
push
sub
cmp
xor
jmp
pop
xchg
gs
es
shlb
clc
mov
mov
loope
in
mov
and
mov
sub
and
sub
lds
mov
pop
loope
xlat
fadds
adc
repz
add
in
addr16
mov
dec
hlt
pop
push
and
sbb
fcoml
jmp
mov
push
add
in
jb
or
push
outsl
ljmp
push
int
iret
lret
andl
push
sbb
sbb
ficoml
lods
loop
push
adc
movl
fst
push
push
inc
icebp
mov
shl
pop
lock
xor
adc
subl
pop
mov
subb
out
mov
push
cmp
loopne
cmp
xchg
das
dec
add
xor
push
testl
xor
shll
andb
xchg
enter
sbb
add
sub
mov
dec
leave
nop
sbbb
mov
icebp
xor
and
mov
mov
pop
mov
mov
add
adc
dec
imul
ficomps
dec
outsb
jge
dec
lds
push
iret
imul
xor
mov
loop
mov
add
cmp
jnp
xchg
sarl
cmp
lret
in
xchg
sub
pop
sti
mov
jecxz
rorl
iret
insl
ljmp
movsb
mov
imull
dec
lods
push
xor
adc
pop
data16
mov
mov
mov
cld
add
int
mov
sub
in
mov
add
stc
sub
mov
pop
mov
mov
xor
loope
adc
jge
push
jne
aas
push
pushfw
mov
sub
xchg
ret
jecxz
roll
xchg
test
xchg
push
fwait
or
lods
fwait
pop
les
sub
mov
pop
jbe
dec
inc
loope
lods
lcall
lds
loope
inc
add
lods
fwait
pop
lds
clc
std
inc
shll
cmc
push
out
jecxz
das
in
les
add
xor
decb
jl
negl
mov
leave
pop
xchg
jae
lods
push
out
mov
xlat
idiv
or
js
pushl
shll
into
daa
jns
cmpsb
mov
mov
mov
pop
into
add
aaa
stos
mov
leave
mov
test
outsl
xchg
loop
or
repz
sbb
aas
fists
jg
call
arpl
sahf
add
loope
dec
loop
sub
dec
pop
mov
addb
rol
cmpsb
pushf
pop
ja
je
jl
out
push
or
in
fstpt
adc
je
notl
into
into
or
aad
andb
mov
stos
push
shrb
fldcw
add
inc
imul
into
xchg
fsts
xchg
pop
sbb
inc
and
lods
add
fld
in
insl
add
jle
mov
xor
aaa
arpl
jmp
insb
push
add
inc
add
sbb
lea
out
jns
push
push
outsb
fcomip
add
dec
gs
lock
push
mull
mov
adc
cmpb
jle
sub
mov
pop
fistps
test
shll
out
outsl
sbb
std
push
mov
gs
popf
mov
ja
ret
adc
leave
and
divl
lret
sbb
mov
fidivrs
int
mov
push
scas
pop
fsubl
enter
inc
push
inc
push
fiaddl
fs
hlt
aas
jo
sub
xor
xor
out
push
mov
movl
mov
movsl
push
pushf
and
push
test
leave
pusha
push
jl
and
arpl
inc
dec
pop
leave
mov
je
repnz
jmp
dec
cld
lods
push
push
lret
sbb
sbb
add
mov
push
jae
dec
xor
inc
push
arpl
sub
adc
fbld
mov
cmp
xchg
pop
test
jle
cld
pop
push
jecxz
daa
jae
idiv
loopne
jg
pop
cmc
fiadds
icebp
mov
xor
and
cmp
and
dec
js
scas
icebp
mov
rolb
cmp
mov
fistps
xor
dec
sbb
sarb
xchg
dec
mov
aas
pop
dec
mov
xchg
adc
sbb
stos
pop
cmc
cmc
xor
insl
inc
sbb
test
jb
in
xchg
frndint
jae
xlat
stc
or
and
lcall
jne
jmp
decb
dec
inc
sbb
adc
inc
adc
dec
in
shl
jns
xchg
out
jo
cmp
mov
xchg
arpl
decb
repnz
xchg
jno
xchg
xor
jl
jle
xor
jns
getsec
push
les
dec
sahf
mov
popa
fwait
imull
shll
scas
fimuls
cld
push
mov
pushw
mov
out
int
inc
dec
xor
xor
mov
popf
iret
push
mov
mov
mov
aad
sub
andb
in
jmp
push
inc
pop
push
xchg
cmpsb
xchg
inc
pop
inc
push
cltd
add
daa
mov
adc
into
jno
stos
sbb
add
js
mull
or
addb
push
ss
aas
ds
and
fimull
dec
adc
rclb
out
or
aas
sub
dec
hlt
rcrl
fidivrs
inc
in
ret
xchg
dec
mov
dec
lahf
pop
loope
pop
out
mov
cmp
mov
std
arpl
repnz
scas
lock
or
pushf
sub
or
shlb
sbb
sub
mov
xor
and
xor
scas
and
mov
adc
add
pop
jge
cmpsl
sahf
jbe
sub
inc
dec
push
push
mov
imul
mov
or
dec
sub
aaa
adc
push
jo
cmpsl
adc
rcll
in
cmpsl
popf
jle
imul
push
loope
push
sbb
pop
sub
je
aad
dec
sbb
or
scas
data16
aaa
cmp
lods
mov
inc
inc
nop
mov
mov
in
and
mov
jbe
dec
outsl
addr16
push
push
cs
out
enter
jo
call
in
pop
xchg
or
js
ja
mov
sbb
aas
xchg
add
lcall
mov
mov
call
sbbl
rolb
js
pop
mov
in
loope
dec
push
xor
lret
add
push
push
roll
dec
dec
in
pushfw
mov
std
mov
pop
xor
dec
pop
jne
inc
daa
dec
fiadds
push
ret
adc
inc
add
lret
aad
jne
test
aam
and
adc
inc
add
push
xchg
mov
jmp
mov
aaa
cli
pop
repnz
jnp
bound
scas
or
or
dec
dec
cld
jnp
push
cmc
test
mov
cmp
push
mov
push
push
add
dec
in
pop
or
lcall
or
dec
cvtps2pi
cmp
and
or
push
in
insb
in
aad
adc
dec
outsl
cmp
mov
jp
pop
cs
subl
mov
cs
push
lock
loope
adc
cltd
xor
sub
lds
mov
in
std
enter
add
test
cmp
in
inc
push
lcall
movsl
and
std
jnp
push
dec
sahf
pop
stc
adc
lds
inc
scas
in
rorl
in
fcomps
or
mov
je
xor
sti
cmp
lret
aam
test
or
in
imul
inc
push
movsb
push
int
jg
sub
push
xchg
pusha
dec
dec
ret
scas
mov
clc
mov
lcall
cmp
lret
cli
jp
dec
addr16
sbb
daa
ljmp
push
test
mov
and
mov
adc
std
mov
cmp
scas
mov
push
cwtl
shll
test
mov
cmpl
sub
jnp
mov
jbe
subb
jb
sbbb
jns
cwtl
pop
movsl
std
and
mov
xchg
jnp
jbe
inc
call
ja
adc
mov
push
adc
ds
ficompl
mov
into
das
ss
pop
cmc
das
jg
sbb
xor
imul
push
mov
orl
push
xor
xchg
push
gs
cmpsb
outsb
repnz
pop
push
cltd
mov
lret
xchg
stc
mov
sub
mov
callw
push
repz
rorb
in
xor
mov
add
jns
iret
cwtl
jns
leave
adc
push
orb
mov
aam
jbe
add
pop
xor
jmp
mov
jle
mov
movhps
stc
mov
pop
lods
fwait
xor
lds
mov
pop
lret
ss
inc
outsb
push
sub
push
fdivrs
xor
jecxz
scas
call
push
jae
enter
popa
or
ljmp
jl
xchg
mov
jae
pusha
jg
cmpb
xchg
pusha
icebp
int3
and
ss
ljmp
orb
lods
xchg
cltd
stc
adc
nop
dec
sarb
ss
push
fbstp
lcall
mov
mov
xchg
cmp
dec
adc
push
nop
inc
repnz
sub
shl
fsub
mov
dec
jp
mov
push
cmp
bound
xor
cli
inc
rol
das
push
outsl
lock
cmp
xor
cmp
lds
jp
test
sbb
jmp
movsl
retw
movsl
jnp
inc
xchg
ss
xchg
or
dec
ja
push
stos
data16
jo
stos
in
or
jcxz
mov
mov
xchg
test
and
pop
push
call
dec
dec
mov
push
repnz
pop
das
hlt
leave
mov
mov
pusha
jp
popf
mov
sbb
xor
movsw
xor
lret
adc
sti
or
loop
pop
jb
jno
pop
nop
rcrl
fs
xor
mov
lret
cli
jno
rep
inc
stos
add
pop
in
scas
jne
fwait
sbb
leave
in
nop
lret
ja
leave
jle
inc
negb
mov
jae
ljmp
xchg
dec
fidivrs
sub
pop
mov
jbe
sbb
cmp
ror
mov
scas
aam
cmpsl
rcrl
ljmp
jb
add
xor
cmp
sbb
mov
inc
jne
sti
icebp
movb
lret
pop
scas
or
mov
ds
jmp
dec
dec
pop
fmuls
rol
dec
scas
push
fxtract
cmpsb
adc
dec
aam
sti
shr
je
pop
jl
xchg
ficompl
pop
fisubs
mov
stc
add
icebp
sbb
cmp
sub
jecxz
jae
aaa
mov
mov
stc
or
jle
in
mov
mov
cmpsb
jl
lock
push
or
push
xchg
pop
repnz
decl
rolb
push
test
ss
and
cmpsl
in
cmc
pop
push
nop
leave
popf
or
add
jg
insl
insl
adc
sbb
orb
inc
mov
pop
sti
rep
jmp
push
sub
mov
or
es
sbb
mov
adc
jno
mov
cmp
mov
cmc
cld
or
mov
and
inc
aas
and
adc
add
push
and
imul
sbb
aaa
ret
and
inc
and
mov
int3
rol
cmp
popf
test
sbb
mov
mov
inc
subb
das
mov
push
cmc
push
fldl
mov
mov
and
scas
mov
mov
xchg
mov
pop
jne
xchg
fstps
mov
mov
popf
rcrb
and
rcrb
jmp
jle
rol
mov
fsts
out
shlb
mov
dec
xor
push
outsl
jo
inc
cld
push
push
push
xchg
adc
shrb
mov
enter
in
cmp
or
and
pop
pop
out
and
enter
jl
push
lret
clc
push
mov
mov
cmp
dec
pop
adc
xchg
mov
js
test
fisttps
fistl
jmp
test
push
insl
ja
dec
lret
jnp
push
cmpsl
inc
outsb
push
pop
sbb
push
inc
jl
ljmp
ret
sbb
mov
in
das
mov
or
xor
inc
mov
or
in
cltd
shlb
or
jne
leave
add
shll
xorb
push
sarb
shll
popa
lock
les
and
cmp
mov
xor
fnstenv
movsl
imul
in
and
mov
xor
cmp
adcb
icebp
push
in
arpl
mov
xor
addl
cs
push
loop
stos
in
xor
and
lods
rolb
out
es
arpl
xchg
out
sbb
imul
das
jae
dec
pop
icebp
push
jl
mov
repz
daa
mov
or
mov
inc
pop
cmpsl
add
out
popf
loope
addr16
in
ret
fsubrl
ret
dec
leave
rcr
nop
jae
imul
orl
mov
mov
aas
sarb
movsb
pop
ja
xchg
imul
sub
push
loop
push
sbb
xchg
ds
in
dec
sahf
nop
movsl
sbb
fstps
arpl
push
mov
pushf
xor
jmp
mov
sahf
std
or
push
testb
add
push
sub
add
dec
scas
push
aad
out
fs
adc
jnp
in
mov
mov
adc
and
add
arpl
sub
loop
mov
sbb
mov
fs
xchg
adcl
arpl
xlat
hlt
scas
cmp
stos
pushf
dec
jle
adc
aam
xchg
mov
pop
xchg
pop
sahf
sahf
jo
divb
lret
xchg
cli
stos
testb
adc
rclb
idivb
pushf
cmp
out
out
sahf
cmpl
cs
push
and
and
movsl
sti
andl
jae
xchg
xor
repnz
push
jne
jnp
or
lret
mov
xlat
stos
sub
orb
add
sti
cld
mov
push
mov
cmp
addr16
mov
pop
pop
pop
rorb
cwtl
cmp
xor
jo
pop
jnp
int
sbb
sahf
and
pop
mov
inc
testl
test
fnstcw
sti
and
cmc
xchg
nop
inc
xlat
mov
push
sub
sbb
fidivl
adc
loopne
daa
les
faddl
out
push
and
cmp
pop
mov
mov
inc
les
andl
cmp
xchg
loope
sub
out
sti
push
pop
cmp
mov
or
inc
xor
add
out
shrb
mov
out
dec
pop
hlt
push
hlt
and
call
push
mov
arpl
mov
les
test
cltd
jae
pop
cmp
in
mov
mov
or
cltd
jg
push
mov
aas
pusha
clc
shrl
rclb
jns
stos
mov
inc
test
cld
mov
fnsave
jns
imul
cltd
push
mov
out
popf
dec
call
out
fcomps
mov
addr16
ds
mov
pop
insb
lret
out
adc
xor
popa
xor
scas
push
mov
mov
jae
push
out
fadd
sbb
movsl
lods
push
fnsave
xor
std
pop
adc
cwtl
push
mov
jl
fnstcw
test
addl
sbb
lods
into
sbb
lods
xchg
fdivs
cld
add
inc
popa
jg
clc
movsb
sbb
leave
sub
clc
sysexit
mov
sar
push
pop
jge
rorl
icebp
xchg
push
sarl
pop
cmpsb
fisubs
insl
movsb
push
daa
jns
jne
repnz
xchg
sub
shrl
stc
cmc
cmp
or
cltd
sub
pop
enter
ret
jo
clc
scas
lds
adc
or
or
rolb
pop
mov
adc
xor
cmpsb
aaa
fistpll
dec
mov
dec
mov
fnstcw
jg
sub
jp
lds
in
out
adc
add
add
das
bound
mov
rcr
xorl
sub
outsb
pop
adc
call
adc
fcmovbe
jp
inc
mov
push
cmp
pop
jne
or
mov
int3
dec
pop
sub
jne
push
cmpsb
xchg
push
out
std
cmpl
mov
lods
jmp
aaa
dec
ficomps
mov
shl
xchg
mov
outsb
dec
pop
sahf
je
out
or
icebp
dec
je
add
lret
scas
jge
outsl
scas
fs
xchg
std
or
aaa
fucomi
xor
push
pop
or
das
popf
xchg
fcomip
lcall
inc
stos
xor
mov
mov
fidivrs
loop
mov
adc
xorl
sbb
fdivrs
jl
inc
add
xchg
adc
into
mov
aad
fwait
lds
push
cli
inc
inc
or
cmpsl
or
inc
in
test
pop
outsl
push
mov
cltd
sub
xlat
sbb
dec
sub
cmp
dec
pop
cmpsb
sarl
adc
pop
std
push
vpmacswd
inc
dec
repnz
cmp
mov
rcll
subl
mov
inc
dec
loopne
push
mov
jbe
jbe
jnp
cmp
insl
mov
cwtl
adc
pop
xor
scas
leave
ret
mov
mov
out
mov
andb
and
jne
pop
divb
sarb
jae
jg
xlat
cltd
xor
hlt
outsl
aas
sbb
jb
cmp
lcall
repz
enter
mov
repnz
sahf
cmc
mov
jecxz
into
mov
adc
sbb
and
lds
inc
andb
and
cmp
sub
jnp
push
repnz
in
out
sarl
pushf
les
fnstenv
int3
pop
mov
adc
in
aam
int3
lds
outsb
subl
lcall
xor
push
mov
pop
xchg
lea
push
add
push
lods
mov
jmp
mov
lcall
mov
int3
mov
bound
or
rcl
mov
or
pop
sti
xor
mov
aas
insl
inc
dec
addr16
adc
jg
scas
push
xor
and
inc
push
ret
fbstp
stc
adc
jno
lods
pop
xchg
inc
fnstsw
adc
stos
mov
mov
cld
jp
cmpsb
out
sub
jne
lock
rcrl
dec
cmp
adc
out
push
inc
xor
loop
xchg
popf
mov
pop
and
mov
lahf
arpl
loop
push
dec
imul
fidivs
lret
inc
adc
call
cmpsl
iret
pop
fsts
or
push
test
add
imul
add
mov
pop
jns,pn
mov
scas
xchg
inc
stos
adc
fildl
and
xchg
mov
sub
push
imul
mov
shlb
adc
popf
sbb
imul
push
ret
je
ja
xor
adc
push
or
decb
iret
inc
test
cli
xor
inc
add
out
xchg
mov
addl
adc
add
cmp
test
adcl
lods
sub
stos
rol
push
outsl
and
lcall
push
loopne
pop
add
cs
decl
fstps
xchg
ljmp
inc
push
or
mov
and
ljmp
inc
cmp
iret
outsl
push
sub
mov
stos
xchg
loop
mov
loop
xchg
enter
fistpl
std
out
push
test
outsl
js
in
out
sbb
dec
cli
data16
js
scas
add
xor
push
mov
mov
cmc
inc
add
push
sti
sub
jp
dec
add
push
faddl
in
test
pop
jo
call
add
lahf
fadd
jecxz
fs
mov
pop
pop
hlt
test
cli
cltd
cwtl
mov
xor
repnz
sub
ljmp
add
add
fwait
shrb
movsb
sub
xchg
add
in
cmp
aad
or
pop
and
mov
pushf
jnp
cltd
mov
add
fadds
lret
out
mov
cmp
jb
in
dec
mov
in
xor
test
fs
lock
inc
repz
mov
ss
lahf
sbb
or
adc
dec
or
fisttpll
xor
test
cmp
sti
icebp
shll
and
imul
std
lods
dec
adc
test
int3
jo
pop
and
mov
jl
test
iret
pop
int3
negl
jge
jge
mov
xor
mov
pop
adc
cltd
jo
ja
mov
xchg
fst
jmp
jb
outsb
pop
xchg
pop
scas
mov
shrl
cs
cmp
mulb
into
mov
xchg
nop
mov
test
das
sahf
leave
sbb
mov
mov
cmp
lea
adc
addr16
dec
repnz
out
imull
cmp
dec
test
loope
gs
mov
or
jo
test
pop
dec
in
xchg
popa
testl
add
sahf
xchg
cmp
jge
dec
jno
cld
and
lret
test
int3
dec
xlat
xchg
jns
xor
or
mov
movsb
pop
enter
jecxz
addb
repz
out
jne
inc
xor
lods
pop
repnz
nop
dec
dec
push
icebp
push
outsb
jns
and
shrb
sub
inc
mov
add
push
test
adc
sub
and
ds
js
sarl
fisubs
imul
mov
out
lock
mov
sub
lds
shrb
loope
pop
dec
push
mov
ljmp
cmp
push
std
mov
cmpl
adc
imul
cmp
add
loope
leave
fs
inc
jbe
mov
mov
in
xor
xor
dec
dec
dec
not
mov
xchg
daa
clc
adc
outsl
push
pop
jmp
ds
in
das
clc
push
js
in
jge
pop
jle
lahf
jbe
sbb
jecxz
hlt
sbb
mov
push
jb
andb
sub
movsl
es
and
testl
cmp
int3
mov
pop
jecxz
mov
mov
loop
notb
mov
andl
stos
push
pop
add
mov
outsb
rcrb
je
jb
cltd
sbb
add
sub
jns
ss
push
mov
test
lea
cmc
ss
inc
pop
mov
xor
push
loopne
dec
sti
daa
daa
rcll
mov
pusha
mov
mov
push
out
dec
insb
lock
add
mov
mov
xchg
rorl
popa
inc
aaa
stos
lret
rcrl
push
lds
adc
popa
or
jnp
sahf
das
ss
xchg
dec
sarl
ljmp
push
mov
enter
push
incb
out
pop
sbbb
push
out
js
lcall
mov
or
popa
cmc
dec
pop
addl
cmp
jecxz
icebp
sub
bound
jp
xchg
fstpt
inc
sti
xor
inc
pop
movsb
sbb
xor
and
mov
cmpsl
imul
inc
dec
xor
lds
data16
aad
dec
or
out
push
iret
sbb
push
lods
aad
inc
lods
je
lret
add
test
pop
sbb
sarb
cmc
inc
xchg
int3
mov
data16
popf
dec
xor
pushf
cmp
data16
aam
mov
pusha
pop
pop
dec
pop
mov
in
inc
dec
or
rclb
cltd
and
inc
fstpl
pop
inc
push
jns
inc
shlb
adc
adc
mov
out
push
pop
cmpsl
lods
cmp
push
cwtl
lcall
aas
xor
pop
sub
sbb
pusha
jecxz
add
fadds
ror
in
mov
in
mov
scas
xor
call
push
mov
push
ds
mov
push
scas
scas
ficoms
fs
das
push
jecxz
addl
inc
in
ss
stos
rcr
inc
stos
test
push
addr16
fucomip
push
adc
out
mov
ret
andb
xchg
popf
adc
sbb
add
mov
ret
dec
xchg
popf
xor
scas
jg
sub
adc
insl
test
fiaddl
xchg
mov
test
cmc
mov
insb
pop
jmp
lods
cmp
adc
scas
cmp
sbb
icebp
mov
mov
into
mov
jge
cmp
hlt
das
and
xor
xchg
sub
dec
push
xchg
push
cli
mov
mov
mov
and
jae
or
push
sub
sti
cmpsl
mov
mov
sbb
into
sbb
sub
out
ret
sbb
dec
shlb
xchg
sub
push
xlat
cmpb
xchg
movsb
subl
andb
pop
aaa
repz
jecxz
jmp
ret
in
mov
inc
pop
push
jecxz
rcll
adc
adcl
add
insl
fst
into
in
cmc
push
scas
inc
inc
mov
sbb
test
jmp
cmp
adc
jbe
es
jne
and
in
push
jg
add
dec
xor
jg
aaa
adc
sbb
mov
fiadds
dec
jle
call
mov
xor
rol
mov
cmpsl
imul
adcb
rcr
inc
sbb
jge
pop
mov
ret
fistpll
lods
filds
cmc
sub
test
arpl
into
in
scas
pushf
jnp
arpl
xchg
mov
pop
adcb
pop
ret
fsts
mov
lock
test
add
repnz
je
out
loopne
sbb
movsl
mov
pop
inc
loop
xchg
adc
fdivl
mov
out
mov
inc
sub
test
dec
sahf
add
imul
cmp
jle
jno
test
mov
fsubrl
repnz
movsl
adc
mov
hlt
jno
int
fsts
dec
movsl
pop
cmpsl
mov
call
ljmp
cmpsb
cmp
scas
jno
pop
dec
mov
pop
pushf
in
insb
pushf
clc
xchg
pop
fistpll
mov
and
aad
insl
ds
inc
push
out
ret
stos
sbb
mov
mov
mov
mov
add
inc
push
mov
aas
mov
popa
loop
xchg
add
mov
jg
mov
jecxz
std
rcrb
popa
es
and
outsb
lret
cmc
sahf
pusha
xor
and
cli
cmp
ret
movsl
sub
push
dec
or
iret
push
xchg
pop
mov
jmp
vpmaxsw
shlb
dec
leave
pop
xor
add
pop
ss
mov
scas
shl
stos
inc
xchg
cmp
mov
adc
cmp
test
fcoms
add
inc
cmpsl
ja
jle
call
cltd
out
xlat
push
jp
flds
js
push
mov
bound
lret
inc
push
and
jnp
cs
out
jg
mov
gs
cmc
mov
cltd
mov
lea
dec
mov
lahf
loop
mov
xor
inc
movsb
mov
stc
add
adc
mov
push
cmp
lods
subl
les
sti
cmp
inc
adc
out
mov
test
ss
das
fcomi
push
fwait
es
pop
scas
or
inc
in
pop
inc
decl
jne
xor
jno,pn
and
xchg
test
scas
addr16
add
sbb
push
loopne
aas
enter
inc
pop
cmpsl
pop
inc
nop
loope
dec
outsb
jg
push
dec
jge
ffreep
imul
mov
sub
jns
out
sahf
mov
rorl
ja
mov
stos
add
ljmp
dec
sbb
cmp
imul
repz
aad
shrl
outsb
sub
mov
clc
cltd
jl
fisubrl
pop
dec
xchg
clc
and
jbe
pop
pushf
testl
and
adc
aad
or
fidivs
pusha
cmp
arpl
xchg
inc
mov
sbb
ja
sbb
ret
adc
inc
push
inc
test
xchg
cwtl
push
pop
fcoml
loopne
ret
jbe
or
arpl
add
imul
inc
mov
dec
mov
cmp
push
or
in
mov
arpl
in
push
sbb
int3
fyl2x
jg
mov
adcb
inc
cmp
aas
out
inc
into
lds
mov
mov
pusha
ret
andl
jo
jne
adc
rcrl
and
dec
xchg
lret
mov
lock
ja
sbb
mulb
jns
ret
lahf
es
push
mov
sti
jns
shrb
ret
popf
dec
gs
out
adc
testb
lock
movsl
ljmp
or
jle
mov
aaa
fmuls
and
mov
sbb
insb
jge
sbb
iret
xlat
shll
jae
cmc
push
jle
notb
mov
aaa
sti
xchg
je
or
int
push
std
cli
and
idivb
test
add
scas
pop
mov
ljmp
mov
les
xchg
sub
bound
push
jg
sbb
lret
cmpsb
test
mov
mov
sbb
ret
mov
fbld
js
push
jb
cmpsb
xchg
jecxz
aaa
mov
or
je
mov
imul
jp
enter
lret
or
iret
gs
push
push
scas
fisttps
pusha
jae
xor
lock
add
inc
mov
cmpsl
insb
cmpsl
cmp
call
ja
sbb
mov
aas
or
sbb
dec
idivb
in
pop
je
scas
lock
mov
in
addr16
push
out
dec
in
push
jb
push
cmp
lahf
jle
add
pop
mov
lret
test
cmpsb
cmp
je
lds
in
add
cli
movsl
adc
mov
bsf
scas
leave
add
imull
and
shlb
xor
or
pop
lods
aad
and
shrb
divl
imul
call
push
sar
xor
test
or
jmp
int3
push
or
mov
xor
jns
stos
sbb
adc
cli
mov
mov
mov
or
mov
mov
xchg
in
xchg
nop
jne
dec
fistpl
fwait
repz
mov
sub
mov
cmp
push
hlt
into
sub
xor
orl
lret
lcall
inc
addr16
repz
addr16
fbld
insb
add
or
repz
test
sbb
fwait
xor
inc
movsb
pop
push
jae
mov
inc
sbb
mov
stos
int3
cld
loop
jp
loope
test
inc
repnz
inc
add
test
lahf
push
dec
jmp
rorb
xorl
sbb
mull
ret
mov
cmp
cli
jbe
sti
mov
faddp
pop
ret
out
push
mov
inc
pop
sub
or
insb
jle
imul
out
add
faddp
dec
bound
cmp
ds
mov
inc
add
pop
mov
lret
outsl
inc
fdivp
mov
test
adc
sub
ds
repz
inc
dec
out
and
fwait
mov
pop
stos
leave
push
daa
and
jno
mov
stos
push
adc
std
pop
pop
iret
fwait
cmp
mov
sub
sub
xlat
jb
mov
bound
shl
and
mov
and
ds
ret
xchg
addr16
jl
mov
cltd
lret
jne
and
outsb
ja
pushf
out
ja
or
cmp
insb
leave
loop
mov
push
in
mov
pop
adc
sub
push
lret
ds
rcll
aam
dec
jp
mov
mov
or
leave
jle
or
into
negl
dec
adc
and
fisubrl
adc
pop
jp
arpl
fdivl
cmpsl
mov
stc
pop
rolb
clc
mov
inc
push
nop
daa
dec
xor
cmp
mov
decb
jae
icebp
cltd
addr16
dec
jl
les
dec
mov
test
aad
jne
pusha
pop
insl
or
iret
lret
cmp
xchg
or
pop
pusha
mov
or
xchg
iret
shll
adc
adc
outsl
rorb
or
ljmpw
pop
jmp
lock
adc
into
xchg
jmp
rclb
mov
shl
xor
push
sbb
shrb
xchg
jmp
mov
das
flds
jge
mov
push
cwtl
push
xchg
scas
out
imul
das
jbe
rcrl
or
gs
inc
loopne
xchg
jmp
mov
adc
sub
out
jmp
insl
ljmp
out
sub
lds
adc
insb
insb
les
and
lods
mov
xchg
xchg
stos
add
ja
clc
rcrl
push
sbb
jg
hlt
into
push
fisubrl
mov
dec
and
ret
inc
outsb
insl
inc
mov
les
push
es
jnp
das
pusha
ja
jns
cmpsb
repnz
or
out
mov
sub
push
xchg
ret
pushl
push
fwait
jno
test
sbb
mov
jae
adc
or
popa
sbb
fsubrl
xor
and
mov
in
fisubrs
out
loopne
sbb
shl
or
rcr
rcll
fcomps
push
adc
mov
mov
cmp
jne
cmpl
repz
push
pop
es
paddsb
adc
mov
dec
xchg
std
hlt
jne
xor
add
test
iret
jb
js
cmp
jnp
lods
fmul
shrb
mov
jmp
daa
push
mov
add
fnstsw
adc
sbb
test
shrl
xchg
cltd
std
sbb
sbb
test
dec
adcl
or
insb
or
mov
xor
dec
lds
xchg
ficoms
pop
outsb
jmp
imul
pushf
popa
das
and
insl
pop
movsb
ret
pop
outsb
sub
adcl
iret
nop
cmp
ret
push
xor
js
mull
adc
xor
sbb
jae
int
dec
in
push
xchg
mov
scas
and
into
inc
mov
jbe
rcl
xchg
shr
int3
xor
push
test
sahf
inc
xchg
lods
test
lretw
in
xor
dec
fsts
stos
cmp
js
fsubr
push
mov
add
or
popa
popf
lods
les
sub
insl
nop
xchg
int
xor
fisttpll
dec
ss
jp
andb
xchg
jmp
pop
mov
popa
cli
loop
push
dec
jl
sbbb
pushf
arpl
xchg
stc
pop
mov
or
fwait
push
lret
mov
aaa
fidivrl
aaa
lahf
repnz
das
dec
sub
aas
jne
arpl
movsb
sub
fadd
es
loopne
aas
or
mov
rclb
clc
dec
push
add
hlt
mov
bound
jp
jl
and
test
mov
outsb
sub
dec
outsl
or
subps
pop
mov
pop
test
jp
pushf
imul
mov
pop
shll
dec
or
jae
jmp
cltd
mov
mov
cmp
shlb
lods
push
stc
pop
lcall
shll
and
outsb
mov
sub
pop
sbb
mov
pop
mov
add
push
ret
pop
xchg
dec
push
data16
clc
sbb
or
inc
adc
xchg
cmp
or
pop
test
adc
dec
xchg
stos
pop
out
test
scas
and
inc
stos
out
jnp
out
and
mov
sbb
addr16
xchg
cmc
loope
mov
push
movsl
test
jmp
dec
mov
fdivrs
dec
push
pop
lods
shrb
push
mov
xlat
sub
mov
push
xor
and
repz
mov
scas
mov
sahf
nop
pop
lea
pop
test
shrb
daa
mov
mov
jne
add
dec
out
fld
incb
sahf
dec
addr16
mov
lea
pusha
jle
loope
jge
adc
insb
sbb
outsl
les
mov
es
movsb
loopne
or
sub
jp
inc
loopne
pop
sahf
jge
pop
xor
outsl
add
xor
sahf
lods
stos
jl
popa
push
mov
pop
push
das
jmp
aam
lcall
mov
inc
enter
mov
adc
adc
jge
iret
mov
int
out
mov
adc
xchg
ljmp
jg
pop
lds
popl
mov
aaa
xchg
pop
dec
daa
fsubs
push
cltd
mov
icebp
aam
insl
add
arpl
shrl
and
mul
pop
aam
int3
or
lods
pusha
jo
pop
dec
adc
jb
push
and
add
dec
push
clc
sub
inc
in
mov
sarb
inc
jl
pop
imul
jg
insl
push
dec
sub
enter
ret
mov
insl
insb
sub
dec
iret
pop
sub
push
jg
mov
sti
jns
cmp
imul
mov
xor
test
leave
sbb
jno
pop
out
inc
movl
popa
fildl
cmc
inc
mov
daa
mov
cmpsb
mov
movsl
mov
or
mov
pop
lea
dec
jp
add
and
movsb
scas
add
fisubs
inc
add
mov
xchg
in
and
xor
push
ljmp
adc
outsl
xchg
pop
jmp
xchg
test
jp
xchg
sahf
inc
out
push
mov
xchg
bound
lods
stc
ret
ret
icebp
sbb
cltd
jo
subb
inc
xchg
inc
sbb
push
or
or
adc
pop
pop
or
push
and
mov
push
push
cmp
fiadds
scas
pop
inc
pushf
fnstcw
jae
push
test
aad
push
push
test
outsl
loop
out
adc
fidivs
mov
loopne
inc
mov
sbb
xchg
cmp
mov
or
mov
xor
ljmp
icebp
jge
jge
adcb
jnp
sbbb
push
mov
jl
pushf
adc
inc
fbstp
cmp
lret
aad
imul
push
stc
or
sub
stc
xchg
in
or
adc
pusha
inc
inc
or
ror
loope
lcall
xchg
cmpsl
cmp
lret
pushf
sbb
inc
jmp
xchg
pushw
sahf
jno
sarl
jg
mov
ret
add
pop
pop
lods
in
test
inc
xlat
pop
lock
cltd
test
mov
mov
lret
aad
lsl
jno
xchg
or
adc
out
or
jp
sub
push
pmuludq
pushf
imul
pop
clc
pop
call
pop
sti
jo
inc
fidivrl
add
mov
mov
in
int3
jns
xor
mov
dec
lods
jbe
insl
jg
rol
data16
inc
push
lods
pop
pop
cli
call
test
ja
sub
popa
add
jo
fstps
xchg
mov
sbb
or
mov
xor
sub
or
inc
ficoml
lock
das
jb
sbb
lods
cli
push
es
mov
add
icebp
and
add
push
cmp
pushw
sbb
fisttpl
in
sbb
loop
xchg
jno
icebp
out
insl
inc
cmp
adc
out
pop
and
test
jmp
inc
sub
push
clc
xchg
dec
add
mov
lods
jl
shlb
and
mov
inc
cmp
call
adc
pop
jg
xchg
jle
shll
and
xchg
mov
aaa
inc
pop
subb
lret
out
mov
out
mov
cmp
sub
rclb
mov
xorb
lret
enter
idivl
enter
add
outsb
cmpsb
aas
rcrl
divb
fstps
lret
sbb
cmp
jnp
adc
add
mov
das
mov
xchg
int3
movsb
or
in
fs
pop
cmp
hlt
scas
dec
aad
jg
jecxz
fst
mov
xor
xor
out
push
in
adcb
loopne
icebp
mov
test
push
sub
jge
nop
jg
imul
mov
and
aaa
scas
mull
pop
cmpl
mov
jp
jnp
rcll
mov
cwtl
inc
fcoml
mov
lret
cltd
inc
push
fisubl
pop
cwtl
lret
fstpt
or
and
push
jg
dec
clc
dec
pop
dec
cmp
stos
shlb
push
les
push
add
rcll
and
out
imul
cli
jnp
lods
inc
xchg
cmp
into
jle
in
ss
dec
or
ja
push
lds
xchg
or
xchg
out
les
lahf
ret
sub
aaa
cmp
js
sub
xchg
push
push
and
jle
mov
sub
sbb
repz
and
push
lods
push
test
je
jnp
push
add
pop
adc
ror
shll
and
stos
jo
push
mov
divl
or
jnp
push
decl
jbe
ds
ss
pop
jl
pop
inc
into
sbb
jno
push
mov
lock
repz
gs
adc
ljmp
hlt
repnz
insb
or
int
and
push
outsb
outsl
ret
push
pop
cwtl
mov
sub
pusha
repz
adc
stos
rorb
ljmp
jecxz
les
lock
ror
adc
dec
icebp
imul
cli
ret
fldenv
jno
test
repz
adc
ds
inc
jge
jno
xchg
xor
push
dec
xor
push
cs
adc
shlb
pop
in
pusha
imul
pushf
cs
test
sarl
adc
xor
lret
cmpsl
stos
scas
inc
imul
nop
mov
cmp
mov
or
push
jl
sarl
stc
pop
and
dec
mov
test
dec
pop
jge
mov
dec
mov
vpmulhw
adc
and
in
pop
clc
arpl
sub
cmpl
mov
imul
inc
dec
mov
cmpsl
or
fidivrl
add
test
lcall
pop
push
jae
sbb
jmp
pop
push
push
cmpsb
xchg
cmp
add
jb
test
mov
into
aas
sub
adc
inc
mov
fbstp
xchg
pop
mov
mov
xchg
addb
loop
push
fwait
and
mov
mov
stc
ja
arpl
sbb
dec
mov
push
mov
out
and
inc
icebp
xlat
call
addr16
mov
scas
ja,pn
ja
out
xchg
shrl
ficomps
cld
popf
push
dec
sbb
sub
push
aam
mov
scas
or
lea
xor
rol
loop
push
xchg
cmp
adc
insl
mov
shlb
dec
xchg
data16
or
sti
push
cmpsb
sub
ds
mov
mov
jne
cli
ljmp
lods
imul
imul
mov
ret
mov
mov
push
js
arpl
sbb
mov
push
cmpsl
scas
les
icebp
lock
nop
dec
fidivrl
inc
pop
aam
cwtl
mov
jmp
add
stc
pop
push
mov
aaa
adc
subb
xor
lds
xor
xchg
test
lahf
pop
sbb
push
jmp
xchg
lret
and
fnsave
sub
or
shlb
cmp
mov
jb
movsl
ds
cmp
sbb
in
adcl
cmp
add
adc
cmc
call
repz
pop
lcall
fmull
mov
sub
inc
mov
and
inc
mov
mov
add
lsl
jo
popa
cmp
mov
in
and
andb
inc
dec
inc
jg
sub
jle
add
mov
scas
pop
loopne
and
bnd
cwtl
xchg
rcrl
fisubrl
xor
subb
loope
ss
adc
pop
add
jno
push
xchg
stc
repz
shrb
adc
pop
cmpsb
dec
push
xchg
sub
push
mov
pop
inc
lcall
xchg
pop
cli
mov
jmp
jg
cld
shrb
xchg
ret
bound
jecxz
in
add
or
pop
aam
mov
rcll
pop
xchg
jae
adc
lret
sbb
loope
pop
add
mov
loopne
push
test
subl
jno
pop
mov
out
lds
movsb
push
xchg
cmc
iret
or
mov
pop
jnp
out
cs
iret
push
jb
mov
jl
or
sbb
pop
adc
mov
sbb
push
mov
push
mov
add
xor
xchg
mov
scas
and
in
xor
mov
mov
bound
push
sbb
or
inc
out
incb
mov
cltd
lock
ljmp
xchg
ficoms
xchg
call
sti
mov
mov
test
cwtl
shrb
les
imul
sbb
mov
cmp
sahf
into
les
lret
add
xchg
jp
dec
push
fsubl
in
sub
lds
movsb
jg
or
filds
cmp
and
je
fisttps
cmc
pop
push
adcl
dec
or
and
cmpsl
jecxz
sub
fmul
add
clc
mov
lret
fbstp
rcrb
inc
call
fisttps
cmp
enter
lcall
xchg
sar
mov
pushf
sbb
pusha
lock
pop
inc
cmp
xchg
test
int3
pop
push
and
xor
sub
cmp
or
mov
fwait
pusha
mov
and
and
pusha
aas
mov
hlt
dec
fsubs
mov
push
add
mov
add
mov
adc
inc
xchg
adc
mov
cmpsb
movsb
mov
adc
adc
bound
push
inc
cmpl
fimuls
adc
sub
xchg
stos
xor
mov
and
jns
cmp
mov
xchg
ret
cmp
insb
stos
popa
push
adc
mov
sbb
std
fwait
repnz
xchg
cld
jg
pop
sub
sarl
mov
pop
pushf
scas
mov
jbe
mov
out
ljmp
sbb
jp
add
add
adc
mov
xor
cmp
xor
test
das
mov
inc
mov
add
mov
push
sarl
fnstsw
mov
bound
sbb
adc
shll
add
icebp
inc
ja,pn
insl
and
fimuls
pop
fists
mov
pushf
and
jns
aas
outsb
adc
data16
sbb
insl
xor
jae
push
and
push
push
std
mov
in
push
jno
sub
sbb
fldln2
cmp
adc
xor
jbe
or
in
shlb
fistpl
adc
fcmovnu
fnstsw
bound
arpl
leave
cs
fwait
jmp
icebp
push
cmp
icebp
inc
mov
loope
adc
jbe
and
jae
stos
add
imul
dec
mov
mov
pop
cs
cmpsl
shl
arpl
inc
jns
inc
std
adc
shl
movsb
aam
inc
cli
add
icebp
out
nopl
dec
je
xor
imulb
mov
mov
jge
jae
sahf
and
movsb
data16
cmp
lds
sar
jnp
movsb
loop
mov
sti
imul
xchg
das
and
dec
pusha
sar
mov
dec
mov
test
lret
add
sti
insb
xor
stos
mov
push
mov
testl
xchg
sub
push
repz
imul
and
in
dec
das
lcall
xchg
xchg
inc
pop
lret
repnz
fs
mov
outsb
pop
gs
inc
push
in
and
jmp
or
mov
jp
jno
dec
xchg
mov
inc
or
mov
jecxz
dec
pop
daa
lock
out
test
ja
pop
push
lea
mov
add
loope
xor
ljmp
dec
pop
dec
ja
xchg
rorb
cmp
push
jno
je
xchg
pusha
imul
pop
int
push
pop
into
lret
mov
mov
add
pop
pusha
adc
int3
bound
and
push
insb
imul
add
cmp
out
adc
xchg
inc
cwtl
pop
mov
movsl
test
iret
in
aas
sbb
insb
dec
add
faddp
push
jno
xor
adc
flds
mov
xchg
sbb
xchg
test
in
lods
adc
enter
or
lds
cltd
inc
outsl
loopne
add
popf
adc
push
lock
stos
lahf
adc
fimuls
into
mov
mov
xor
xor
xchg
repz
inc
jg
sbb
fucom
cltd
push
dec
cmp
stc
pop
sbb
ss
add
popf
dec
daa
addr16
mov
inc
dec
cmp
sub
xchg
stc
push
addr16
jge
pop
jle
pop
lcall
cmc
push
jecxz
ds
mov
outsb
mov
pop
jg
push
cld
enter
mov
mov
sbb
mov
xor
or
sub
nop
sarl
or
and
repz
dec
je
sub
fsubr
inc
out
pop
adc
enter
pop
cmpsl
inc
pop
add
imul
sbb
jge
pop
jnp
pushl
or
mov
into
xor
dec
pushf
inc
out
leave
jno
mov
stos
pop
jne
ja
mov
adc
rclb
into
pop
dec
mov
mov
mull
rolb
ds
mov
sub
mov
lods
push
in
insl
rcrb
addb
leave
test
pop
rclb
push
enter
into
mov
sub
xchg
xchg
jbe
xlat
lds
jae
je
aaa
arpl
fsub
js
ja
cmc
xchg
popa
cwtl
inc
out
sbb
push
xchg
mov
icebp
popf
lds
fstl
push
adc
mov
inc
clc
pop
roll
mov
xor
mov
loop
xchg
in
cmpsl
xor
push
jle
jbe
add
outsb
movsl
loope
test
dec
clc
das
adc
leave
xchg
add
fcmovnbe
roll
add
mov
sti
push
pop
inc
mov
insb
dec
mov
es
sbbb
rolb
xchg
or
push
jge
loope
daa
mov
add
andl
negb
outsb
mov
push
scas
int
insl
pop
jae
pop
clc
pop
push
add
sub
movsl
or
and
jbe
lahf
out
lods
xchg
clc
sbb
and
push
in
xchg
ljmp
mov
push
js
negb
pop
add
mov
push
sbb
dec
aas
rcrb
xchg
inc
js
aas
es
mov
mov
subl
sbb
xor
sub
cmpsb
adc
add
and
jp
repz
mov
rolb
sti
cmp
pusha
mov
aas
or
int3
ds
sbb
xor
or
sbb
lcall
sbb
loope
out
in
mov
arpl
sbb
lods
add
fistpl
xor
inc
add
push
fcoms
je
pop
mov
sarb
dec
dec
push
fsubrl
mov
shlb
push
popa
shll
pop
shl
fisttpll
mov
or
sub
fwait
cmp
aas
mov
in
sbb
addb
xchg
xor
xchg
test
adc
fidivrs
fisubrl
sarb
xlat
pop
cmp
pop
filds
insb
jae
xor
inc
sbb
add
jno
fdivr
ljmp
bound
sbb
cmp
push
sbb
test
or
xor
nop
jp
push
mov
sub
in
mov
testb
xor
xor
mov
push
push
inc
adc
ficoml
sbb
repz
scas
cmpsb
pop
into
adc
loop
in
xor
and
je
sbb
popf
aaa
pop
xchg
mov
or
mov
add
xchg
mov
cli
out
push
mov
stos
rcrb
add
adc
lods
add
iret
and
and
clc
scas
cmp
hlt
jecxz
fwait
or
mov
push
ret
and
mov
aas
out
jge
lock
adc
xchg
sub
mov
arpl
cmc
rcll
adc
call
int
mov
push
loopne
jecxz
movsl
adc
ss
and
int3
xlat
sbb
stos
lret
rol
dec
xorl
pop
push
out
jge
rcll
and
das
or
int3
into
mov
adc
lods
push
cwtl
incl
jbe
lock
popa
inc
xchg
cmp
xor
adc
dec
leave
sub
dec
push
sarb
notb
daa
cmc
dec
lods
out
lar
jmp
cmpl
push
aam
pop
mov
or
shlb
pop
mov
sub
in
push
add
adc
add
dec
movsl
repz
aas
push
mov
jno
stos
dec
jmp
outsl
test
add
pop
add
int3
jns
cltd
or
xchg
popa
popf
test
push
inc
inc
mov
das
stos
aas
shrl
lds
out
imul
adc
and
inc
pop
xchg
out
je
icebp
jns
xchg
je
out
int
lcall
adc
push
pop
in
and
jmp
cmp
cmp
fs
pop
inc
push
sbb
cwtl
mov
scas
push
fldcw
adc
sbbl
int3
aad
ret
sahf
xor
test
jno
xor
iret
clc
add
push
imul
mov
stc
iret
dec
sub
sarb
push
mov
dec
cli
loop
pop
jle
mov
xor
jb
mov
je
dec
mov
jnp
aam
mov
lcall
imul
aad
in
dec
mov
fs
push
push
lock
xchg
out
ret
sbb
out
mov
xchg
sarb
push
nop
daa
loopne
sbbl
jno
add
push
popf
lahf
and
sub
shlb
insb
int
pop
push
jge
mov
mov
hlt
int3
movsb
pop
std
pop
leave
ljmp
lret
mov
ljmp
cmp
pop
inc
shlb
push
xchg
sbb
mov
adc
lahf
or
sub
clc
fsts
jbe
out
mov
dec
mov
pop
loop
jo
iret
or
jne
into
jl
in
int3
xchg
jnp
mov
lods
aad
popf
sbb
pcmpeqd
daa
sub
test
and
pop
inc
out
jl
call
test
mov
pop
xor
lods
push
aaa
stos
ds
es
dec
add
jb
testl
icebp
aaa
push
enter
std
insb
dec
pop
pop
push
xchg
inc
and
test
dec
fs
mov
in
fcmovne
lock
rcr
hlt
das
cwtl
les
pop
popa
leave
loope
mov
pushf
repnz
mov
in
dec
or
push
ret
add
test
iret
jp
push
lea
adc
lds
jecxz
push
sbb
push
adc
push
or
add
pop
xor
add
add
lahf
jae
adc
inc
jmp
inc
pop
dec
pop
xor
push
sbb
adc
stos
push
sarl
mov
hlt
or
push
push
ds
add
add
or
test
lahf
loope
pop
shrl
xlat
mov
nop
sti
clc
inc
popa
inc
sub
pop
outsb
jnp
int3
and
fidivs
and
inc
push
jge
lock
pop
insl
clc
std
xor
cmpsb
popa
cmc
xlat
xor
adc
ja
fwait
dec
add
and
jno
mov
stc
pop
repz
mov
je
mov
test
dec
dec
xor
popf
mov
mov
lahf
add
adc
push
mov
ret
jo
jae
jne
jns
inc
test
inc
sub
add
cld
dec
or
pushf
pop
jo
inc
mov
pop
popa
adc
xchg
mov
push
mov
pop
xchg
lock
and
mov
das
adc
lret
das
fwait
mov
add
sbbb
jl
shl
gs
inc
dec
cmp
imul
add
jns
cmc
jno
fsubrl
ficomps
in
lods
jns
nop
testl
mov
stc
dec
and
add
mov
test
jne
aaa
gs
std
add
adc
adc
ficoms
add
or
addr16
into
cld
dec
pop
cltd
xor
scas
pop
push
in
cmp
into
ret
xchg
mov
push
mov
ret
pop
cmpsb
imul
push
pop
sub
mov
aam
js
xchg
sbb
cwtl
xor
add
sbb
hlt
movsb
cwtl
lods
fists
add
inc
sub
movsb
outsl
mov
lea
inc
insb
mov
fnstcw
jnp
add
repz
stos
sahf
xchg
push
ja
sub
repz
popa
das
clc
sub
add
insb
jne
mov
insl
adc
pop
add
jmp
jne
xchg
repnz
lods
orl
and
cmpsl
je
or
lahf
sarb
push
das
mov
and
lcall
mov
sbb
xchg
das
test
inc
mov
fmull
inc
jno
jno
les
lcall
lea
outsl
xchg
pop
mov
test
fwait
xchg
mov
cmp
and
or
mov
outsl
aas
std
ss
loop
sbb
scas
mov
jne
xchg
cmpsl
sbb
shlb
xchg
inc
or
xchg
jg
loop
out
or
mov
cmp
mov
xchg
js
clc
push
xchg
adc
fidivrs
loopne
ljmp
xor
ja
pop
in
lret
push
add
or
jbe
mov
out
jg
sub
jne
in
xor
adc
adc
xchg
mov
movsl
cmpsl
push
lock
cmp
add
rorl
out
sbb
xchg
adc
jp
sbb
or
push
es
sub
adc
imul
gs
push
or
add
jno
sub
mov
lcall
mov
xor
and
and
pop
mov
aas
movsb
shrb
jle
fbstp
test
loopne
dec
out
clc
arpl
outsb
es
loop
add
fs
push
nop
push
fisubrl
aad
pop
dec
inc
mov
fidivs
sti
inc
and
or
ja
jg
and
xchg
sbb
push
xchg
dec
out
mov
push
movsb
inc
cmp
xchg
mov
enter
mov
add
xchg
dec
mov
xchg
or
dec
sub
stos
push
sub
outsl
aas
push
adc
mov
pop
pop
push
add
test
cmp
jno
cmp
aad
sub
jo
push
rorl
stc
rorb
jne
shll
inc
push
imull
mov
pop
popa
adc
rolb
maskmovq
idivl
pusha
and
push
lret
daa
sub
test
leave
int
repnz
push
lret
or
pop
pop
mov
xor
clc
nop
dec
dec
or
shll
pop
fcoms
pop
sub
imul
daa
bound
gs
gs
sbb
mov
cli
icebp
inc
call
fisubrl
push
mov
add
adc
mov
addr16
pop
fsts
aaa
orl
xchg
hlt
adc
fdivrs
inc
repz
insl
jge
mov
jle
jmp
pop
dec
mov
xchg
outsl
out
scas
adc
and
inc
xchg
into
mov
in
push
out
fimuls
mov
pop
rcrb
add
or
pop
sbb
out
sar
cld
xchg
or
jae
add
pop
jp
mov
xor
xchg
mov
testl
and
iret
dec
pop
inc
shlb
stos
push
ss
and
push
adc
int3
adc
mov
or
push
push
jno
out
pop
or
ret
inc
inc
and
cmc
jge
frstor
or
xchg
inc
lret
xchg
or
aaa
push
ficompl
push
inc
add
sub
push
xchg
jbe
sub
shr
scas
stos
fildl
xor
mov
push
imul
xor
and
xorl
les
sbb
mov
lds
ss
inc
std
lret
lock
xchg
xchg
int3
fcmovne
pop
das
bound
enter
imul
adc
outsl
shrb
test
pop
xchg
mov
inc
fidivrs
dec
mov
call
andb
lods
add
scas
pop
pop
gs
shll
and
aas
lret
inc
les
cltd
jle
push
sub
xor
scas
popf
sub
cltd
push
stos
sbb
jg
aam
mov
lock
pop
add
mov
rol
jg
inc
xchg
les
add
or
dec
ss
dec
push
aaa
dec
pop
mov
aas
sub
add
push
xor
pushf
mov
daa
insl
fs
insb
bnd
clc
aad
pop
or
push
dec
mov
jns
popf
adc
test
lds
sahf
mov
cld
mov
jbe
add
stos
lcall
xchg
pop
inc
mov
loop
js
push
sub
repnz
sub
adc
arpl
mov
jnp
mov
sar
test
rcll
scas
mov
pusha
pop
scas
add
dec
mov
sub
adc
shlb
mov
pusha
push
inc
pop
xchg
and
xchg
fnstenv
aas
xor
jecxz
fwait
jmp
out
dec
xchg
mov
and
pop
arpl
sbb
aaa
cmp
xor
push
fdivrl
arpl
out
pusha
sub
dec
pop
mov
hlt
jns
sbb
or
jge
dec
cmp
jnp
sti
mov
outsb
sbbb
add
jns
loope
insb
insl
xchg
mov
ja
push
js
adcl
or
jns
pop
inc
repnz
or
pop
std
das
inc
pop
pushf
sub
iret
fs
xchg
and
push
lds
mov
shl
cld
push
icebp
fucom
mov
stc
xchg
jp
ja
in
shlb
aaa
movsl
xchg
xchg
mov
push
popf
jae
aam
adc
test
out
lret
in
in
pop
mov
xchg
xchg
cltd
mov
dec
xchg
or
and
bound
xorl
jo
stos
xlat
aad
ss
mov
ljmp
pop
mov
cmp
test
mov
xor
imull
cmpsb
mov
adc
call
mov
or
cs
pop
cmp
out
loope,pt
loopne
mov
mov
insl
jbe
adc
inc
icebp
push
dec
mov
push
push
sbb
fdivr
shr
imul
jecxz
cs
mov
imul
mov
adc
fidivrl
adc
mov
das
clc
cs
jae
xlat
xchg
inc
aam
pop
sub
fmuls
mov
pusha
lcall
mov
push
push
ss
in
jne
mov
clc
push
jnp
in
jp
mov
popf
ja
push
push
test
lods
cmp
repnz
mov
addr16
popf
pop
and
in
jecxz
das
es
inc
ror
imul
push
mov
jne
mov
sub
mov
adc
test
mov
pop
outsb
xchg
cmp
test
sbb
jmp
lods
loopne
roll
je
out
add
jp
addr16
test
repz
test
jb
cmp
adc
inc
sub
sti
ror
sbb
and
lods
repz
imul
in
mov
mov
adc
fidivl
icebp
movsb
add
xorl
addr16
adc
jns
xchg
mov
ficoml
fs
ja
mov
leave
pop
js
jne
cmpsb
lahf
int
sahf
mov
jge
in
mov
stos
mov
inc
in
loope
sahf
cmc
xchg
jno
mov
sub
add
je
inc
imul
lcall
mov
sti
mov
inc
sbb
clc
jl
hlt
loopne
mov
insb
sub
test
pop
out
xorl
nop
stos
pop
lahf
enter
sahf
xor
mov
add
bound
lods
mul
push
jae
jle
adc
in
cmp
daa
cmp
sti
xor
cmpsb
xor
xchg
les
xchg
mov
out
fildll
sbb
mov
daa
icebp
push
cmp
stc
inc
pop
or
sub
daa
or
rolb
and
mov
fiaddl
cmc
xchg
adc
push
cmpsb
cmp
imul
sti
movsb
imul
dec
stos
lcall
mov
xor
xchg
xor
sub
stos
cwtl
fiadds
aaa
sub
aad
nop
loope
out
jnp
jp
jbe
hlt
pusha
adc
leave
sbb
gs
mov
outsb
test
repnz
adc
sub
push
or
icebp
jnp
sti
push
repz
sbb
repnz
bound
jmp
pop
sahf
adc
orb
fwait
pushf
push
lods
cmpsl
sub
push
jae
imul
in
inc
pop
sbb
adc
push
loope
inc
xor
adc
adc
xchg
lods
ja
mov
hlt
pop
bound
xchg
shl
dec
ret
clc
test
in
movsb
mov
pop
lods
mov
out
push
mov
mov
pushf
pushf
cmp
lods
dec
xchg
push
and
and
aam
bound
popf
mov
push
js
sarb
mov
mov
scas
jns
dec
dec
inc
push
testl
or
jge
ret
xor
dec
into
push
outsl
cmpsl
test
outsb
mov
lcall
pop
insb
test
mov
push
sbb
mov
das
pop
insb
jecxz
jb
adc
arpl
pop
mov
push
or
mov
dec
mov
dec
nop
es
enter
pop
mov
out
loope
loope
adc
popf
mov
aam
push
or
mov
sub
pop
sbb
mov
punpcklwd
repz
cmpsl
jp
movsl
mov
jne
jb
daa
add
gs
cmp
mov
lret
sub
sbb
add
pop
mov
sbb
lds
inc
push
daa
jmp
pop
ret
ljmp
imul
push
ficoml
sub
cmp
lcall
xchg
cmp
sub
mov
leave
add
and
and
adc
adc
mov
or
mov
push
mov
sbb
mov
mov
aas
mov
xchg
test
in
cmp
cld
insb
jmp
mov
lret
adc
sti
push
pop
and
inc
pop
cmp
xlat
movsb
add
dec
add
fistl
cmp
mov
into
mov
and
sub
call
into
pop
orb
mov
icebp
or
add
popf
fdivrs
mov
sub
test
or
push
mov
not
ja
rcl
cs
jae
and
and
xchg
xor
rcll
cwtl
mov
call
or
rcrl
filds
xor
loope
adc
xor
imul
jl
or
not
xor
ljmp
rcrb
cmpl
mov
sub
cs
divl
or
sbb
je
stc
cltd
and
pop
jg
scas
scas
enter
and
int
std
push
sub
mov
sbb
and
repz
addb
mov
dec
pop
cli
fs
sub
clc
cmp
lods
push
pop
scas
mov
mov
aam
lods
fisubrl
xchg
arpl
mov
lock
xchg
subb
inc
sub
sahf
xor
xchg
fwait
rolb
add
shll
loope
jle
out
mov
push
mov
test
notb
roll
inc
xor
jmp
pop
or
or
push
testb
push
repnz
stos
imul
cmp
xchg
push
in
pop
in
inc
mov
mov
sbb
xor
shl
or
rcll
out
in
stos
pop
rolb
hlt
sbb
dec
out
and
pop
push
mov
cmp
mov
inc
test
or
repz
cmpsb
jle
iret
loopne
dec
jecxz,pt
xchg
insl
rorb
mov
out
jb
jbe
xor
cltd
sar
mov
jo
jo
push
arpl
stos
xchg
jge
lea
push
adc
and
xchg
xor
xchg
cmp
rcrl
repnz
clc
sbb
add
cmp
clc
sbb
push
push
sbb
mov
or
or
push
mov
inc
and
and
inc
or
sahf
insb
push
fmull
jle
sub
add
push
popf
frstor
pop
dec
lds
loopne
sbb
xchg
push
adc
daa
out
xor
vpaddw
or
mov
pop
mov
sbb
mov
and
push
mov
jg,pn
ljmp
les
push
test
push
rcrb
test
xchg
fld
jle
leave
adc
ret
jmp
ds
shll
loopne
adc
arpl
hlt
ss
mov
jne
mov
stos
rcr
lcall
dec
scas
cmpsl
sub
das
mov
test
push
stos
scas
mov
das
sbb
sti
mov
push
mov
loopne
daa
inc
mov
adc
lods
mov
cli
in
mov
add
mov
mov
push
pusha
jmp
or
jns
dec
xor
push
inc
mov
or
hlt
aad
cmp
jne
mov
test
adc
ret
ret
dec
push
xor
cmp
push
lods
push
ror
adc
shrb
imulb
fisubl
test
rorb
pop
push
das
out
sbb
int
mov
mov
cmp
cs
add
jno
ds
pop
dec
adc
pop
popf
mov
cmp
mov
sbb
lea
test
mov
add
inc
sbbl
add
sbb
insl
add
and
push
test
cmpsb
scas
fisttpll
sahf
push
or
mov
xor
pop
idivl
out
ret
sub
and
push
xor
dec
cmp
push
fadd
cmp
in
xchg
pop
scas
inc
jge
lcall
cmp
aam
sbb
aam
frstor
ljmp
es
sbbl
cmp
sub
nop
ret
call
pop
aaa
inc
sti
loop
mov
dec
fisubs
mov
sub
call
xlat
rcrl
ret
sahf
lcall
push
outsl
es
negl
push
mov
jno
lcall
imul
repnz
std
in
in
cmovp
out
dec
fcmovne
fisttpl
xchg
in
ret
inc
int3
insl
xchg
add
push
pop
sbb
sahf
pop
test
fldenv
pusha
inc
sub
adc
roll
fbld
mov
adc
sahf
cmp
test
lock
js
sub
scas
cmp
andl
mov
sbb
sbb
and
cli
sbb
scas
repnz
cmp
mov
dec
pop
mov
xor
incl
adc
inc
mov
testb
pop
in
cmp
cmp
dec
idivb
outsb
shlb
xor
lret
out
mov
int3
ret
xchg
mov
push
xchg
cmp
sub
inc
push
pop
mov
jb,pn
or
and
pop
cmc
aaa
pushf
cmp
inc
pop
pop
pop
fstps
jle
test
int3
pop
fisubrs
or
stos
mov
cmc
xlat
xchg
mov
push
test
jecxz
cli
loope
cmc
dec
jne
scas
pop
mov
sub
fwait
mov
out
adc
mov
icebp
je
jge
mov
sub
imul
add
outsl
mov
ds
mov
cmp
fs
nop
jb
movsl
push
sub
fs
lds
inc
jle
ja
add
into
sbb
shlb
pop
push
test
fdiv
mov
mov
scas
xor
sub
int
inc
push
inc
mov
outsb
adc
adc
pop
jecxz
rorb
lret
ja
xorb
dec
js
sbb
repnz
popa
mov
scas
fwait
test
es
jne
into
jecxz
iret
nop
jecxz
jns
lock
mov
xchg
sub
mov
cmpsb
push
jnp
sti
inc
fs
shll
mov
mov
test
mov
pushf
pusha
addb
cmc
dec
loop
lcall
ret
cmp
stos
jmp
add
stc
insb
inc
insb
mov
lods
inc
fcomps
push
push
imul
and
inc
lds
inc
jnp
testb
mov
push
rol
call
mov
fildl
jno
dec
push
add
popa
mov
repnz
mov
adcl
mov
hlt
sahf
dec
mov
push
push
mov
or
cmp
mov
xlat
push
cld
lods
lret
push
and
insl
fxam
lret
sbb
dec
jnp
sbb
sbb
mov
sbb
mov
bound
or
js
sbb
fcmovb
shrb
mov
scas
outsb
lods
pop
aas
or
mov
push
inc
xor
sub
cwtl
and
xlat
pop
jl
outsb
lds
adc
mov
adc
lds
imul
dec
adcl
jg
jae
xchg
fst
in
xchg
xor
xor
xchg
push
cltd
jns
ss
std
sbb
aas
dec
xlat
leave
jge
lahf
cmpsl
push
imul
jle
xchg
jg
add
stos
pop
xor
inc
or
jecxz
mov
pop
in
xchg
sbb
add
test
mov
add
loopne
and
inc
outsb
mov
cltd
loopne
shll
shl
add
lret
out
pop
pop
pop
stos
jnp
mov
dec
bound
pop
pop
sbb
push
cli
nop
push
dec
outsl
sbb
xor
dec
push
pusha
lcall
ds
and
mul
fisttpll
add
cld
shll
imul
movsb
in
xchg
outsl
dec
outsb
push
out
in
sar
clc
ret
xchg
sub
push
cmc
fnstsw
mov
add
fisubrs
push
mov
adc
pop
sti
cmp
sub
nop
mov
jnp
push
je
fsubr
fs
sbb
vpcmpeqb
orb
shl
mov
cwtl
popf
paddw
mov
cmc
fwait
imul
imul
cmp
sub
jb
sub
fcomp
cmp
or
popl
or
popl
sbb
stos
mov
jb
das
aam
mov
xor
pop
cmp
aas
mov
imulb
mov
test
scas
popa
pusha
jle
sahf
ljmp
daa
pop
mov
xor
das
pop
lds
cmp
hlt
or
push
data16
xchg
mov
and
repz
scas
adc
or
add
les
sbbb
sbb
cwtl
lret
cmp
inc
movsb
in
sti
jbe
add
mov
inc
addr16
fbld
jae
int3
movsb
jg
repz
daa
lret
mov
pop
stc
jbe
cltd
mov
jnp
inc
or
push
in
xor
sbb
iret
jecxz
jb
pop
cmp
dec
mov
dec
out
fcomip
ja
lods
inc
pop
gs
and
dec
push
test
xorl
adc
sbb
jmp
test
cmpsl
inc
lret
xchg
leave
fildl
jns
sbb
mov
insb
mov
mov
lds
cmp
stc
mov
cli
fsts
cmp
sub
aaa
mov
sub
pushf
and
or
fiaddl
mov
imul
in
jo
stos
jo
xor
dec
scas
mov
addl
mov
dec
in
faddl
mov
into
bound
es
jle
xor
mov
dec
or
movsb
fadd
lret
shrl
divb
pop
je
inc
fstps
lea
inc
sub
pop
lods
dec
cld
aad
stos
mov
in
mov
cmp
dec
loopne
jae
test
ret
cs
xor
sahf
xchg
jmp
xchg
int
adc
push
cmp
dec
sub
lods
in
push
and
push
int
cmp
pop
mov
mov
in
jbe
cvttps2pi
pop
cmc
inc
push
orb
fs
mov
std
xchg
rorl
test
sub
jmp
xor
test
pop
mov
fwait
mov
mov
arpl
sub
inc
mov
xor
mov
add
lret
popf
add
in
frstpm(287
pushf
and
mov
aad
lock
andb
test
out
ss
icebp
pusha
or
dec
adc
jno
jmp
sarb
cmp
pop
or
pop
fs
mov
mov
out
call
sbb
adc
aas
lcall
loope
pushf
int
stc
fwait
sub
push
xchg
sbb
jnp
jb
sbb
imul
stos
shll
jge
cmp
clc
nop
jl
bound
or
mov
sbb
decb
mov
sti
inc
xchg
mov
inc
mov
or
or
outsl
call
pop
sbb
or
mov
xchg
test
sbb
mov
push
cmp
xlat
mov
ds
cli
bound
or
xchg
insl
push
inc
add
add
jg
rcl
mov
int
sub
pop
jmp
movsl
push
stos
sbb
pop
dec
jne
add
fisubs
stc
mov
lcallw
pushf
sti
cli
inc
pop
cmp
lods
lret
in
imul
lcall
call
pop
test
sti
jmp
adc
mov
mov
or
test
mov
mov
mov
outsl
or
cltd
mov
lods
mov
or
pop
sbb
pop
data16
push
and
sti
test
fdivl
jge
ja
inc
popa
pop
mov
and
in
js
sbb
test
rorl
enter
daa
fsubrs
jne
pop
push
mov
ret
jnp
test
cwtl
loopne
xchg
mov
aas
sbb
dec
loopne
fucomi
pop
stc
mov
fnstcw
test
fcompl
jl
ficomps
addr16
mov
out
ja
dec
stos
mov
fldt
call
and
cmc
call
call
hlt
pop
pushf
ss
pop
pop
ja
cli
aad
or
movsl
pop
adc
test
cmpsl
cld
loop
rcrb
rorb
mov
push
push
loopne
sti
jg
mov
cmp
pusha
popf
dec
sahf
stos
lods
daa
ljmp
in
push
mov
sahf
stc
add
es
jmp
pop
sub
ja
lods
xchg
push
inc
cld
pop
push
xor
outsb
loope
rcrb
addb
cld
mov
pop
dec
mov
mov
mov
mov
fdivrs
fstpt
mov
popa
jne
aaa
jns
mov
psllw
pop
loopne
jp
adc
mov
sub
pop
mov
ret
push
cmp
or
clc
fiadds
adc
xor
stc
sti
adc
sbb
inc
fdivs
icebp
mov
inc
loope
mov
aaa
dec
lods
stos
mov
cld
loop
sbb
and
xchg
leave
mov
jp
arpl
outsb
xchg
jle
or
push
cmp
mov
inc
sub
in
cmp
lret
fcomi
mov
inc
pop
cmp
repz
out
pop
dec
mov
aad
mov
mov
int
mov
addr16
inc
xchg
mov
jl
int3
je
mov
jnp
movsb
jg
push
shr
movsb
inc
ficomps
imul
push
add
xchg
xor
loopne
sarb
imul
mov
ficomps
fs
je
sub
in
iret
xchg
xor
idivb
cld
subb
cmp
movsl
push
hlt
imul
cmpsl
out
into
jge
lret
addr16
inc
test
inc
es
sbb
daa
dec
mov
cmp
push
xorb
stos
in
lret
xchg
pop
push
popf
and
add
rorb
nop
cmpsb
dec
iret
cmpsb
in
int
repnz
xor
popa
xor
pop
fidivl
imul
cltd
mov
call
orl
push
cmp
fistps
cmpsl
jg
xchg
clc
test
xor
imul
addr16
or
cmc
mov
mov
loope
mov
lret
mov
add
and
inc
xor
stc
iret
push
scas
mov
mov
xchg
popf
cmp
cmp
insl
cs
inc
loop
sbb
or
negl
out
gs
in
in
popa
ljmp
pop
sub
das
adc
pop
pusha
shrl
mov
adc
daa
jmp
int3
test
shlb
mov
cmp
push
push
into
and
sub
xor
add
xchg
es
test
insb
out
sub
inc
inc
sti
icebp
sbb
lret
push
cli
in
inc
pop
push
cmc
test
imul
push
and
xlat
out
jnp
ss
cmp
cmp
xchg
sub
fwait
push
sti
xchg
fxtract
jb
and
ss
cli
pop
lcall
sbbb
push
gs
popa
cli
bsf
cmpsb
add
fwait
pop
outsb
mov
jbe
xor
fldl
inc
dec
cmpsb
mov
lret
popa
das
fisttps
pop
shr
pushl
hlt
rcl
imul
roll
sbb
xchg
outsb
mov
adc
mov
inc
std
nop
lret
fdivs
mov
scas
loop
rcl
and
out
test
xchg
aaa
sbb
scas
sub
xorb
shll
fstpt
test
imul
hlt
insb
adc
inc
jno
pop
cmp
nop
out
repnz
shl
jns
mov
shrl
xor
jl
sti
add
je
dec
jp
cwtl
sub
es
in
inc
push
lahf
hlt
cmpsb
inc
cs
lcall
add
xchg
xorb
jp
stos
in
std
cmc
xor
mov
mov
fcmovnb
inc
push
lods
clc
es
or
jg
jo
jnp
mov
jmp
adc
cwtl
scas
xor
xchg
scas
sub
adc
push
adc
enter
lea
rclb
xchg
aam
cmp
jmp
test
pop
dec
test
lret
icebp
insb
sbb
test
clc
push
sub
xchg
push
pop
jno
fidivrs
sar
jne
jo
xchg
inc
push
or
fcomi
mov
test
div
mov
jge,pt
add
call
pop
xor
lods
push
mov
jae
jne
pop
cmpsb
scas
pop
jl
mov
ljmp
fidivrl
mov
insb
fwait
dec
pop
lods
sub
jns
cmp
mov
leave
sub
or
ret
leave
arpl
test
stos
xor
jge
in
cwtl
inc
dec
pop
xchg
fsubs
inc
cld
std
inc
fimull
in
and
aaa
in
ret
mov
ljmp
mov
push
xor
into
sbb
insl
aad
push
xchg
sub
or
out
xchg
sbb
pop
xor
or
add
fildll
frstor
out
xchg
call
inc
lock
ret
int3
scas
jnp
loope
cmp
mov
repnz
ja
mov
mov
lods
mov
in
lret
and
jae
cltd
repnz
aas
lods
adcl
or
repz
adc
bnd
cmp
das
addr16
clc
movsb
jl
lods
es
push
sub
sahf
push
and
test
mov
mov
rcrl
loop
mov
xchg
hlt
cs
mov
xor
enter
bound
int
add
int3
outsl
xchg
bound
mov
daa
pushf
fnsave
int
lret
in
push
mov
cs
popa
movsb
lock
mov
cwtl
adc
and
xchg
push
cmp
push
shl
movsl
jp
testl
lea
lret
lea
scas
fmull
cld
daa
sub
fsubp
or
inc
dec
inc
icebp
dec
and
lret
out
cld
test
bsr
adc
enter
and
mov
pop
jns
into
xchg
inc
or
cmp
test
push
shlb
sub
xchg
inc
mov
loop
loope
aad
mov
adc
leave
or
cmp
mov
pop
andb
mov
dec
stos
push
insb
xchg
push
mov
adc
pushf
loope
sahf
cltd
pop
mov
cmc
pop
fdivrl
dec
cltd
stc
sbb
dec
jb
jo
cmp
cmp
or
mov
mov
xchg
xchg
pop
js
mov
pop
popa
aaa
punpckhdq
xchg
xchg
jno
bound
cltd
mov
out
jno
iret
addr16
or
test
mov
scas
scas
fistl
out
pop
testl
imul
stos
pop
icebp
ja
adc
cmp
cmpsl
lret
adc
data16
cli
mov
sbb
sbb
lret
out
imul
cmp
xchg
rorb
lret
out
mov
repnz
vminsd
es
insb
add
add
push
cmp
leave
and
pop
push
adc
clc
pushf
dec
into
out
ret
int
jbe
adc
adc
iret
lcall
mov
push
stc
lret
xor
pusha
ret
xchg
call
lahf
insl
sub
icebp
jne
mov
xchg
xor
pop
call
lret
test
xchg
jb
sbb
stos
das
pop
bound
sahf
nop
fadd
xor
test
jl
aaa
movsl
int
nop
scas
repz
inc
mov
inc
sbb
and
xchg
mov
mov
aas
daa
inc
jecxz
xchg
jbe
in
xor
pop
jnp
push
push
jge
rclb
fwait
jo
xor
add
into
mov
xchg
pop
jbe
adc
js
mov
jns
pslld
sbb
pusha
add
fiaddl
push
dec
inc
inc
lahf
or
push
mov
inc
testl
push
aad
push
cmpsl
jbe
test
fprem
shlb
popa
insl
adc
or
jle
sub
push
add
cmp
add
sbb
jge
dec
dec
lods
shlb
xor
stc
cwtl
insb
in
sub
jg
mov
cmp
jecxz
pop
test
enter
add
pop
mov
sbb
xlat
lret
loope
dec
and
into
xchg
pop
stos
loopne
xchg
sub
adc
insb
jno
ficompl
mov
icebp
leave
jmp
adc
cld
fs
cmp
mov
push
or
xchg
stos
inc
test
cvtps2pd
sub
inc
repnz
popa
lcall
sub
sarb
or
jp
pop
leave
pop
enter
jg
push
sub
outsb
inc
sbb
jb
push
inc
add
loope
cld
adc
lods
inc
ret
jo
insb
mov
mov
push
das
bound
cmp
aas
add
sti
jns
das
push
inc
mov
repz
cli
cmp
and
out
inc
ds
mov
dec
xchg
icebp
pop
add
jg
jp
inc
je
mov
js
mov
push
xchg
jns
mov
dec
pop
cwtl
shll
inc
add
shl
cmp
ret
cmc
pop
stc
inc
imul
dec
inc
mov
das
jae
insb
mov
fnstsw
jge
sub
jl
and
mov
sbb
push
pop
sub
clc
jmp
mov
test
loopne
add
daa
pop
sbb
mov
jg
and
out
fmulp
fimull
mov
aas
jb
fld
xchg
sub
rolb
dec
cmp
cmp
ja
addr16
enter
dec
fdivrs
and
push
or
in
dec
sarl
arpl
fwait
ds
hlt
xchg
shll
push
mov
add
cmp
pop
dec
mov
pop
mov
sarl
sbb
ss
in
push
inc
pop
stos
not
lock
mov
lods
movsl
sub
mov
add
movsl
xor
into
sbb
shrb
stos
sarb
jnp
xchg
cmpsl
lea
lret
lret
mov
dec
jmp
fldcw
and
in
int3
push
dec
xchg
push
shl
xor
xor
mov
jl
je
fcoms
pop
push
mov
sbb
sub
in
out
xor
mov
sbb
mov
cmc
or
jle
lahf
adc
ja
mov
sbb
int
cmp
gs
out
sub
repnz
les
mov
outsl
jnp
pop
in
or
ds
jp
pusha
mov
jle
inc
enter
sbb
mov
in
jp
ror
sti
test
sahf
dec
fdivrl
xor
insl
lahf
dec
mov
fldl
mov
int3
or
sub
mov
popf
gs
pop
pop
fistpl
arpl
cmp
loopne
fcmovnb
test
nop
pop
mov
jecxz
push
aaa
stos
jo
fsts
adc
movsl
and
shlb
and
xchg
sbb
adc
stos
push
xor
mov
xacquire
cmp
enter
pop
divl
cld
cwtl
mov
adc
andl
fists
stos
and
xchg
xorl
mov
push
fdivs
int
sbb
out
sub
dec
mov
fwait
hlt
jns
fsubrl
jb
ss
ja
loop
cmc
pop
int3
in
fnstenv
movsl
push
mov
dec
loop
pop
mov
aas
fisubrs
and
push
adc
sub
ret
test
popf
mov
lahf
aas
out
jnp
inc
out
sub
sbb
cvtps2pd
fldl
pop
inc
out
cmp
sbb
les
mov
mov
insl
imul
xchg
push
add
int3
hlt
xchg
gs
imul
fs
xor
fisubrs
pop
dec
pop
je
cli
dec
jmp
shlb
or
cmp
ljmp
mov
scas
pop
sbb
lret
push
inc
js
mull
mov
loope
jge
stc
mov
mov
jns
cld
pop
int
cmp
roll
shlb
sbb
cmp
sahf
lods
xor
and
cmc
ss
scas
aad
jbe
cld
daa
cwtl
mov
push
leave
addb
ret
cmc
adc
ja
fisttpl
clc
jmp
jns
mov
test
fs
loop
xchg
or
in
push
jecxz
pop
lahf
lea
pop
jae
mov
adc
shll
dec
je
xor
mov
lret
sub
cmpsl
lods
and
push
divb
xchg
pop
mov
push
xchg
dec
mov
mov
mov
or
and
add
mov
jmp
ds
adc
aaa
je
les
pop
push
add
ja
pop
mov
jno
jb
push
adc
cmc
daa
fisttpll
inc
lds
sbbl
lret
mov
mov
in
leave
test
cmp
mov
xchg
fldcw
push
insl
xchg
inc
adc
inc
in
call
xor
and
int3
lret
cmc
mov
cmp
shr
out
cli
dec
icebp
jg
outsl
icebp
js
shl
mov
cwtl
stos
iret
mov
mov
pop
ficoms
add
test
xchg
ret
mov
and
shll
cltd
pop
fildll
xor
in
cmp
std
dec
push
inc
sub
mov
push
mov
and
bound
lret
ljmp
insl
fstps
or
das
mov
int
test
in
adc
out
dec
dec
sar
rolb
dec
adc
les
lds
fistl
bound
aaa
sbb
cmp
shlb
fsubrl
ficoml
pop
or
mov
xchg
repnz
outsb
inc
mov
pop
pop
lahf
imul
add
cmpsl
dec
sbb
sub
inc
leave
pop
mov
in
in
lahf
pop
ljmp
insb
jns
xchg
cmc
cmp
aad
in
and
sarb
pop
sub
inc
sub
ds
out
mov
mov
arpl
fcomp
and
mov
inc
test
mov
sub
cltd
insl
addr16
fwait
rol
adc
rcl
adc
mov
adc
mov
jl
pop
dec
insl
mov
push
xor
call
dec
jae
es
test
dec
or
outsb
jle
repz
iretw
cmovo
cmpsb
mov
jae
sarb
xor
insb
loop
and
cmp
test
cmpsb
shr
popf
fmuls
jl
push
lcall
sbb
rcll
jmp
and
stc
push
aad
or
cmpsl
mov
xchg
popa
shl
cmpsb
xor
sbb
inc
jl
mov
inc
pop
mov
test
push
lods
push
add
sub
xor
jmp
mov
mov
dec
jg
out
mov
xchg
push
xchg
aam
xchg
jmp
sbb
push
jbe
mov
push
jo
pop
and
imul
inc
push
icebp
mov
arpl
jo
push
cli
sbb
imul
call
inc
leave
push
out
jl
lcall
rorl
xor
shrl
loop
jno
xor
lahf
testb
fstpl
add
and
dec
sub
cmp
pop
aas
lods
sarb
lcall
test
jle
mov
gs
cmc
stos
insl
cld
cmp
jbe
lds
cld
pop
sub
or
jbe
jle
jmp
and
ja
jbe
push
mov
xor
bound
pop
or
and
push
inc
loope
xchg
dec
cld
jne
lods
xlat
cwtl
inc
sbb
mov
sahf
mul
adc
lds
sbb
cwtl
dec
imull
std
shrb
xorb
enter
mov
inc
pop
hlt
ss
mov
mov
shrl
int3
fstpt
mov
leave
andb
lret
and
cmp
stos
mov
loopne
pop
inc
pop
xor
inc
enter
sub
xor
iret
dec
es
adcb
inc
pop
pusha
and
mov
xchg
mov
lret
mov
outsb
dec
rorl
inc
mov
incb
sahf
rclb
jp
inc
jge
loopne
out
jg
pop
out
ficoms
mov
bound
ret
fiaddl
pop
and
ss
and
sub
aam
xor
ret
cmp
shlb
aam
testb
mov
aad
enter
push
sub
test
les
sbb
mov
adc
jle
addb
dec
in
jle
popf
and
xor
xor
xchg
fsubs
pop
push
iret
push
addb
sbb
ret
inc
mov
sbb
jno
sub
out
cmp
fwait
mov
cmp
dec
add
adc
add
cmp
add
popl
mov
sahf
mov
mov
addl
jmp
mov
sahf
add
inc
stos
lods
xor
adc
bound
popf
push
or
push
jae
cmp
or
dec
test
lret
mov
pop
and
nop
xor
dec
aam
xorb
pop
jb
sub
cltd
cmp
mov
mov
sbb
push
mov
ds
mov
sbb
push
adc
iret
aas
and
in
ficomps
pop
repnz
cltd
stc
cmp
pop
pop
sub
lret
into
stos
stos
add
outsl
cmpsb
sbb
clc
je
sbb
and
inc
int3
imul
sarl
xchg
push
shlb
ss
scas
aaa
xor
and
jmp
lret
ja
sti
addr16
inc
xchg
shlb
fsubr
neg
sub
jne
push
cwtl
mov
sbb
push
testb
ljmp
subb
dec
rcl
pop
cmp
pushf
sbb
ret
bound
rolb
mov
lret
xchg
xchg
sbb
icebp
jle
lods
pop
scas
pop
shrb
stc
outsl
dec
cmp
shrb
repz
mov
xorb
xchg
xchg
cld
nop
and
aas
sub
fdivrl
mov
sbb
inc
mov
mov
adc
int3
push
sub
pop
mov
push
sarl
fnop
mov
xor
pop
pop
and
jg
xchg
jb
adc
test
mov
jp
lods
fsubrl
xchg
jno
mov
shll
inc
jge
inc
test
dec
dec
lods
dec
ret
roll
movsl
movsb
rcr
inc
pop
lods
cmp
outsb
push
test
cmpsb
notl
mov
or
mov
std
push
aas
and
sbb
and
out
lea
mov
jg
nop
ss
imul
or
loope
cli
and
cmc
xchg
pushf
outsl
mov
bound
adc
mov
pop
or
stc
sub
fs
xor
push
mov
or
push
xchg
xchg
jo
test
inc
xchg
pusha
insb
sti
xorl
fstl
or
pop
mov
andb
cld
inc
push
rcrl
pop
mov
bound
jmp
lret
pop
mov
fsubl
jbe
shlb
bound
push
adc
out
stos
cld
xor
xor
mov
and
scas
out
push
aad
stos
jae
insb
fsubr
lds
cmp
jmp
mov
int3
xor
xchg
sbb
in
mov
push
das
data16
inc
sbb
push
repnz
push
mov
push
stos
cli
pop
cltd
stos
pop
ret
jle
push
loop
jnp
cld
bsf
mov
mov
push
sub
xchg
sub
lcall
dec
popf
rorb
jmp
mov
aaa
dec
jle
add
and
push
loop
jbe
loope
push
loop
cwtl
push
mov
rcrb
int
lock
imul
jmp
jae
sub
frstor
mov
mov
and
add
pop
sbb
fsts
scas
out
ja
sub
pop
gs
inc
mov
or
les
pop
and
popa
xor
fadds
and
sub
dec
sub
mov
jb
lea
fisubs
xlat
rorl
sub
pop
jno
or
lods
push
les
rcr
mov
push
stos
icebp
push
mov
cltd
or
out
ja
pop
cmp
sbb
cmp
mov
mov
add
lretw
mov
stos
dec
jae
mov
mov
mov
leave
dec
jbe
adc
int
aam
mov
fstpt
shl
mov
sbb
shll
jno
add
sub
repnz
lock
cwtl
shrl
std
addr16
ret
jp
mov
push
leave
jb
mov
or
popf
and
jae
add
jbe
cmc
xchg
jge
xor
jmp
pop
jbe
pop
mov
sbb
inc
subb
cmp
je
js
mov
cs
and
loope
push
jp
xor
mov
out
or
fadd
popf
mov
aaa
add
test
push
gs
mov
cs
test
sbb
ret
and
xor
xor
imul
std
cmp
inc
enter
stc
or
pop
mov
out
sub
jle
adc
bswap
jecxz
mov
mov
xchg
mov
or
cmc
mov
pop
sbb
shr
mov
xchg
daa
orb
adc
adc
into
ljmp
sti
movsl
inc
jp
jecxz
add
int
pushf
inc
int
prefetcht0
cmp
cmp
bound
pusha
push
inc
push
fsubl
inc
xchg
and
fadds
push
lds
into
cmpsb
cmp
clc
shlb
int
cld
je
pop
jg
mov
out
adc
or
xchg
xor
call
jmp
and
adc
xor
popa
jae
mov
fdivrp
data16
leave
ljmp
adc
adc
shlb
inc
lahf
mov
and
cltd
mov
dec
ret
dec
pop
cmp
scas
imul
daa
add
stc
xchg
or
cmp
out
test
clc
dec
xor
jb
test
xchg
xchg
pop
fwait
xor
mov
push
sub
mov
movsb
pop
and
mov
jno
sub
dec
pop
xchg
inc
cmp
sbb
in
push
pop
scas
jo
clc
rcl
sub
fldcw
and
mov
ljmp
addr16
push
xchg
xchg
pop
or
inc
pop
sub
mov
sbb
pop
sbb
cltd
xchg
stc
daa
xchg
adc
adc
int3
enter
sar
jg
in
sub
test
pop
xchg
mov
inc
inc
add
sub
mov
lock
or
jno
lcall
aas
notb
das
lcall
cmp
cmc
jge
xor
imul
jmp
fdivrs
fiadds
mov
sub
icebp
je
lret
test
mov
and
popf
dec
loopne
or
sub
cli
adc
mov
fwait
je
icebp
cmpsl
filds
pop
cmc
rcr
cmp
pop
add
daa
icebp
xor
jbe
imul
push
ljmp
out
push
adc
push
icebp
jo
nop
xor
clc
pop
test
jecxz
rorl
lcall
pop
add
lock
adc
pop
in
aaa
ja
jne
outsl
mov
or
jecxz
fcom
stos
inc
push
rcll
std
icebp
mov
mov
std
repnz
add
cmpsl
jb
pop
pop
enter
js
sub
imul
push
pushf
lret
xchg
jg
iret
sbb
jmp
fildl
subb
add
imul
int3
imul
mov
addr16
outsl
xchg
cmpl
dec
sub
add
enter
jp
out
lea
xchg
or
cld
jg
imulb
pusha
or
sub
fnstcw
xchg
int
scas
inc
into
repz
jge
or
fdivrs
imul
mov
mov
add
and
sahf
and
adc
ljmp
dec
jne
out
pushl
sbb
movb
lods
mov
and
mov
dec
lahf
stos
xchg
test
sbb
jmp
je
cmp
outsl
test
cmp
movsb
icebp
or
dec
shl
shlb
inc
mov
xchg
mov
daa
jg
inc
mov
sbbl
sub
mov
jno
shrb
xor
jg
xorl
xlat
mov
jle
movsb
dec
daa
fwait
jl
adc
sti
cs
lcall
xor
and
test
stos
dec
mov
jmp
fldl
stc
mov
cmp
sub
div
daa
rclb
out
sarb
adc
push
mov
ljmp
leave
push
fnsave
pop
sub
aad
rcll
das
sbb
jns
cmp
sub
mov
jae
aas
movsl
rcll
or
bound
push
sub
cmp
pusha
xchg
or
jae
aaa
ds
xor
loopne
or
or
bound
adc
adc
or
fnsave
cmp
pop
test
js
cmp
cld
aaa
jl
lcall
push
jo
data16
jg
call
or
sub
mov
nop
ss
int
lret
jb
stc
mov
xchg
mov
adc
push
mov
inc
rolb
movsb
push
call
pop
insl
aaa
inc
cld
aaa
pop
dec
cmp
adc
stos
push
fcoml
mov
xlat
in
xchg
jbe
add
rcr
mov
mov
or
inc
xor
test
inc
and
int
push
mov
sarb
pop
mov
push
mov
xchg
pop
leave
mov
xor
inc
or
xor
movsb
jp
repnz
jnp
dec
ds
repz
stos
inc
js
xchg
mov
jg
adc
lahf
shlb
leave
fcmovbe
in
js
add
dec
cmpsl
push
mov
pop
pusha
cmc
insl
mov
lds
and
dec
push
mov
lcall
push
xor
incb
sti
ds
rorl
dec
cmp
shl
mov
inc
xor
sbb
in
cmc
lcall
shr
shll
or
xchg
jmp
jnp
add
push
addb
jno
lods
insl
adc
fldenv
lock
jecxz
sbb
shlb
pop
aad
mov
icebp
js
in
mov
repnz
sub
cs
aas
mov
dec
into
loopne
mov
stos
testl
and
mov
dec
scas
sbb
aad
jle
inc
adcb
test
push
or
ss
imul
in
sti
out
aad
push
repz
lcall
data16
ds
cmpsl
gs
jecxz
imul
fimull
mov
fisubs
test
lret
xor
in
mov
mov
js
ljmp
sarb
out
xchg
sbb
cs
or
call
mov
inc
test
jb
xchg
rcl
lret
pop
mov
add
sbb
in
loop
out
imul
xor
xor
jo
cli
push
pop
sub
insb
pop
cmp
imul
push
jae
inc
stos
mov
fisubrl
mov
and
fwait
jp
cmp
mov
fadds
mul
jno
adc
inc
in
jne
push
cmpsb
dec
sbb
jge
insb
outsb
insb
popf
pop
push
xor
sub
test
ss
fdivl
iret
ret
and
mov
outsl
mov
ss
mov
cld
ret
adc
fsub
sbb
repz
mov
inc
inc
or
js
out
jae
imul
pop
fwait
mov
shlb
decl
fs
lock
ret
in
sti
lret
jne
inc
add
das
pop
cmp
inc
cli
jb
out
jmp
push
cltd
addr16
pop
dec
out
sub
scas
xor
mov
call
xchg
pop
mov
repz
cli
jnp
in
pop
push
mov
mov
mov
icebp
push
icebp
rolw
cmc
dec
adc
mov
pushf
sbb
test
xchg
test
fwait
push
inc
into
rcll
into
add
or
out
stc
sarb
shrb
and
jl
dec
push
cmc
pop
cmp
mov
jl
loop
icebp
inc
daa
fildl
sbb
mov
fs
inc
sti
je
ret
in
sbb
add
sbb
in
imul
outsl
out
enter
sub
push
ror
or
add
mov
cld
and
js
pop
out
sbb
xchg
mov
pop
xchg
push
mov
cmpsl
xlat
ret
add
sub
cmp
movsl
add
sahf
mov
test
pop
test
sbb
push
and
popa
sahf
repnz
pop
pop
jp
cmp
add
push
cs
jmp
inc
cmp
mov
movsl
test
out
add
xchg
xor
cmp
mov
xchg
xchg
mov
gs
ja
sbb
push
ret
xor
xchg
xlat
push
loop
and
ficoms
add
sub
mov
pop
fistps
cmp
ret
jp
jle
mov
cmp
in
mov
sub
mov
jp
and
loope
mov
test
pop
fmull
pop
or
push
loopne
pop
stc
shlb
fs
mov
xchg
mov
sti
les
mov
nop
movl
fcompl
jns
stos
enter
in
pop
std
cmpsl
sub
sbb
mov
pushf
sarl
enter
ret
cmp
stc
jmp
pop
loop
jg
lock
test
gs
jnp
test
sub
fnstsw
push
je
cwtl
shll
in
stc
mov
fisubrs
daa
punpckhwd
push
pop
in
inc
or
jl
mov
arpl
xchg
jp
dec
pop
xor
mov
xchg
jne
repnz
xchg
jle
cwtl
dec
lods
inc
mov
or
inc
lret
mov
inc
sbb
inc
jmp
pop
into
repnz
outsl
adc
les
mov
stos
dec
xorb
fsts
shr
jb
adc
out
sarb
mov
out
cltd
mov
push
lods
imul
adc
cs
mov
jo
out
outsl
lods
imul
xchg
mov
sahf
inc
mov
and
cmpsb
shll
icebp
imulb
shl
xchg
push
pop
out
dec
mov
int3
mov
arpl
mov
scas
xor
iret
jno
mov
dec
nop
add
clc
or
out
pusha
add
arpl
cmp
iret
or
or
and
push
fbld
jmp
mov
ret
mov
sbb
rorl
lds
ja
fnsave
cmp
pop
or
mov
jle
loop
in
mov
jg
mov
push
adc
data16
inc
gs
jge
add
loopne
adc
std
inc
rorb
fs
mov
jecxz
mov
mov
mov
insl
cmpsl
rorb
mov
mov
dec
cmpsl
mov
pop
in
add
or
jno
popf
je
out
addl
mov
stos
outsb
repnz
xchg
repnz
popa
stos
inc
dec
int
jp
cmovno
xchg
and
jbe
jmp
sti
enter
cmpsb
shl
sbb
mov
xchg
iret
es
xor
or
pshufw
sahf
rclb
xchg
mov
xchg
inc
jp
mov
dec
inc
outsb
into
mov
xor
nop
incl
loope
dec
mov
popf
sar
push
lea
fsub
andl
lret
into
add
and
lret
inc
sbbl
jae
sbb
into
xchg
mov
pop
adc
xor
xchg
mov
mov
popf
inc
call
pop
into
int3
mov
dec
adc
add
mov
cmpsl
loop
outsb
jbe
jae
sub
pop
mov
push
lahf
arpl
pop
out
push
in
lds
jl
and
sti
js
popf
dec
push
sbb
movsb
xor
int
popf
int
mov
sub
dec
pop
or
fstl
adc
jecxz
enter
movsl
adc
inc
pusha
cmp
popf
push
jo
lods
jecxz
jge
adc
sub
or
lahf
lea
inc
jge
jne
out
jb
mov
pop
into
sbb
adc
mov
pop
inc
out
push
nop
mov
and
pop
fimull
jmp
mov
push
std
adc
mov
inc
mov
hlt
xor
lahf
imul
ret
and
les
shl
gs
or
mov
js
pop
pusha
sti
ljmp
adc
push
pop
dec
adc
pushf
mov
dec
fcmovb
or
pop
xchg
or
cmp
shrb
aaa
iret
lock
pop
push
push
mov
xor
inc
roll
pop
in
rcl
add
test
aad
jnp
mov
xor
ret
stos
repz
sahf
test
popf
ret
xchg
add
insl
aad
mov
in
jae
ljmp
jo
shlb
xor
les
out
cmp
inc
test
or
jb
in
lods
cmp
fidivl
push
mov
xlat
or
ljmp
sub
cmc
out
mov
cmp
jl
psubusb
test
addb
jo
stos
xchg
xlat
mov
push
mov
jle
std
or
inc
sbb
cmp
hlt
mov
push
test
sbb
push
or
push
push
call
jne
stos
cs
out
push
inc
sahf
rcrl
add
fsubl
fstp
lods
xchg
and
mov
push
cli
and
iret
mov
add
cmp
push
or
mov
push
cs
mov
mov
scas
ficoml
aam
imul
adcb
mov
mov
jns
incb
in
std
fprem
xadd
jecxz
ret
mov
faddl
insl
aam
and
int3
hlt
scas
xchg
pop
call
and
insl
or
sub
xlat
aaa
and
and
mov
pop
jge
stos
mov
sbbl
lea
pop
inc
inc
iret
dec
mov
xchg
js
or
ficoml
fs
sbb
hlt
scas
ret
pop
out
and
cmp
insl
mov
pusha
adc
leave
aas
imul
ret
aam
popf
loopne
repz
dec
call
scas
mov
and
stc
mov
test
sbb
pop
dec
les
mov
iret
hlt
dec
dec
std
aam
fsubr
je
xchg
out
arpl
into
incl
fsubs
push
cmp
adc
sbb
inc
jl
jmp
pusha
das
cltd
movsl
sbb
hlt
mov
clc
sub
aad
mov
lcall
lds
adc
or
or
insb
mov
sub
push
or
into
loop
jmp
aad
into
mov
les
leave
shll
jge
xchg
jns
xor
cmp
in
push
lock
clc
sbb
loope
xor
leave
add
ss
cwtl
test
add
shrb
popa
or
pop
mov
lret
clc
ljmp
jmp
sahf
sub
mov
cmp
hlt
cmp
xor
jmp
adc
push
loopne
and
pop
push
push
cmp
mov
xchg
inc
cmp
lock
imul
les
and
in
mov
lea
cmp
add
xchg
scas
fistpl
dec
insl
mov
pop
jl
aas
fidivl
xchg
enter
mov
jge
mov
out
sbb
test
mov
insl
in
in
xor
mov
mov
dec
push
aaa
jecxz
mov
pushf
push
iret
xchg
jmp
mov
push
adc
push
cltd
cmp
hlt
jge
push
add
sub
addb
mov
mov
xchg
mov
lock
xor
incl
add
mov
pop
mov
lret
out
pop
pusha
lods
rolb
inc
lds
aas
movb
in
push
mov
xchg
stc
insl
call
sub
jae
cmpsl
inc
outsl
ja
pop
dec
movsl
sahf
sub
idivl
mov
dec
loopne
xchg
pop
sub
inc
rcrb
add
loop
mov
clc
int3
mov
mov
scas
daa
ret
mov
xorw
or
lods
cld
mov
outsl
out
or
gs
xor
jge
jecxz
add
lret
clc
les
movsb
mov
mov
jmp
xchg
sti
mov
push
pop
inc
addl
adc
push
push
jle
cld
xchg
std
adc
jb
xlat
sub
jae
lret
mov
loopne
xchg
cmp
imul
rcr
jno
stos
imul
mov
ret
jle
adc
push
pop
hlt
push
sbb
gs
mov
push
shlb
xlat
inc
adc
cmpsb
scas
jo
repz
mov
or
dec
mov
sbb
testl
cmp
adc
cld
sbb
fsubrl
xor
icebp
inc
inc
sbb
adc
shlb
jno
dec
into
lret
rclb
or
jl
sbb
xchg
jnp
dec
jbe
imul
lock
pop
daa
stc
pop
fmuls
aad
jmp
inc
and
mov
adc
mov
stos
mov
adc
aaa
cmp
cld
xor
cs
fcom
aaa
pop
scas
in
mov
std
ficoml
jg
push
dec
aam
outsb
mov
add
ficomps
into
cltd
lahf
test
fidivrs
lret
jmp
ret
fstl
repz
enter
movsl
sbb
add
jne
shll
je
ss
scas
fcompl
imul
cmp
in
or
daa
dec
ja
negl
and
aaa
or
push
imul
mov
sbb
xchg
popa
inc
and
loopne
jg
pop
pop
imul
es
or
sbb
jbe
adc
arpl
or
adc
xchg
mov
xor
push
jbe
dec
adc
js
inc
xchg
xchg
mov
adc
insl
lret
ja
mov
push
dec
in
inc
lret
es
mov
mov
scas
and
mov
daa
jnp
adc
jl
cmp
test
int3
fs
inc
sbb
xor
test
mov
movsl
stos
cmp
lea
iret
loope
mov
int3
int
adcl
in
push
sub
xlat
jnp
icebp
jno
dec
rcrl
mull
popf
test
jmp
cltd
xchg
mov
cs
loopne
mov
push
push
jne
sbb
out
sbbl
idivb
mov
loopne
in
xor
fimuls
sub
xchg
sarl
jl
dec
xor
and
mov
sub
fnstenv
out
xchg
test
mov
ret
in
das
repz
pop
push
pop
or
out
jg
int
fistpll
or
pop
int
mov
lock
mov
dec
add
cmovs
rcrl
cmpsb
cltd
lods
jp
movsb
sbb
mov
mov
fimull
fs
xor
popa
cmp
call
nop
xlat
fisttpll
and
jg
pop
outsb
xchg
push
test
xor
mov
xor
xchg
xchg
cmp
push
add
outsl
pop
pop
loopne
popf
xchg
inc
jmp
shl
cmp
sahf
ljmp
js
xchg
in
xchg
shll
mov
mov
or
out
cmp
push
jmp
mov
jb
mov
or
or
jecxz
movsl
test
mov
sub
ja
dec
repz
cld
and
lret
addr16
sbb
push
ljmp
shrl
inc
push
jbe
dec
cmp
add
aas
cmpb
sbb
into
rcll
or
lock
movsl
add
cmpsb
and
and
xchg
mov
and
lret
pop
int
cmp
inc
cmp
aam
sbbb
repnz
loope
cmp
mov
jae
rcl
out
mov
jae
xchg
add
out
mov
pop
jns
ret
mov
inc
lret
ljmp
xchg
pop
icebp
jp
outsl
xor
mov
roll
mov
mov
push
mov
push
aas
xchg
mov
sub
jne
and
inc
not
outsb
adc
xchg
stos
mov
js
jbe
xchg
jp
or
das
or
clc
xor
jbe
call
mov
andl
js
pop
mov
stc
cmp
fwait
sbb
mov
bound
jmp
jb
das
sub
aas
push
push
xorl
pop
cmp
add
mov
std
jns
hlt
std
mov
jno
xor
dec
xor
cs
and
mov
dec
ja
xor
add
adc
pop
aaa
shl
sub
add
inc
push
adc
adc
and
jb,pt
mov
mov
pop
push
arpl
sbb
mov
lret
and
xor
out
mov
cmpsl
lret
and
jp
scas
xor
sbb
sbb
jb
sub
push
pusha
stos
pusha
sahf
mov
negl
lret
fldt
push
cmp
arpl
mov
cmp
dec
fst
mov
cli
pop
dec
jno
jae
es
imull
shll
in
sbb
jo
fsts
mov
mov
arpl
ja
adc
sbb
mov
jl
push
je
stc
mov
dec
push
or
aaa
sub
sbb
shll
push
das
push
inc
and
sub
pop
mov
movsl
sbb
xchg
add
xchg
and
popf
mov
push
push
bound
xlat
sbb
hlt
push
arpl
cs
mov
daa
dec
inc
push
or
cmp
stos
xchg
or
lret
inc
mov
scas
fisubrs
nop
mov
sbb
dec
xchg
loopne
pop
or
jmp
aam
iret
das
adc
nop
push
pop
sub
pop
je
xor
inc
mov
adcb
sbb
push
int3
xor
js
mov
fmuls
int3
je
inc
popa
and
jge
aad
cmc
ficoms
into
rcll
arpl
movsl
mov
leave
adc
jp
add
lds
rcll
push
xor
sbb
lret
lds
imul
scas
or
les
jbe
pop
push
test
sub
fisttpl
mov
mov
scas
inc
pop
adc
jg
and
psubsb
adc
sbb
scas
aas
repz
push
xchg
jmp
xor
fldt
fmul
ret
scas
xchg
pop
stos
xlat
push
sbb
sub
mov
or
pop
jp
cwtl
cmpsl
mov
repnz
lods
mov
sub
mov
aas
jmp
xchg
adc
adc
lret
add
fistpll
inc
repz
out
cltd
movsb
sub
sub
mov
cmp
rcr
icebp
loope
mov
stos
inc
sbb
pusha
out
ffreep
add
jmp
pop
repnz
push
clc
pop
int
adc
push
xor
out
push
in
cmpsb
dec
mov
sub
push
sub
jno
stc
adc
imul
push
sbb
pop
in
ja
xor
pop
adc
sub
js
mov
cmp
mov
repnz
movsl
xlat
jmp
loope
test
lods
sub
dec
test
pop
dec
sub
or
arpl
push
inc
fwait
and
mov
ja
mov
sbb
lret
mov
inc
push
mov
inc
inc
adc
call
lock
bswap
fs
mov
stos
and
push
imul
jl
lcall
insl
dec
cs
fadd
cs
sub
mov
ljmp
and
lea
push
inc
out
iret
push
sub
imulb
lahf
push
xchg
int3
inc
dec
jl
mov
sahf
bound
pop
jge
cmpsl
or
mov
sbbl
cmp
cli
mov
sub
scas
shrl
push
out
test
mov
test
lea
out
es
push
arpl
insl
add
insb
arpl
mov
push
icebp
sar
rcl
popf
and
cmc
pop
inc
sub
fs
cmp
sbb
push
mull
roll
xchg
lret
inc
xlat
movsl
sub
gs
jo
jmp
lods
mov
pop
pop
lea
loopne
sbb
push
pop
and
fstpt
lods
negl
notl
dec
clc
xchg
es
lcall
inc
jle
loope
dec
adc
test
sbb
aas
add
scas
mov
clc
shlb
addr16
sbbb
inc
insb
inc
lcall
add
mov
pushf
jp
std
dec
pushf
xor
and
test
cmpsb
jle
adc
adc
rolb
pop
out
adc
mov
rorb
mov
rcrb
push
xor
dec
xchg
lods
shll
mov
push
add
ljmp
sub
bound
cmp
lods
lea
ss
movb
decl
cmp
mov
sub
xchg
js
inc
jne
adcl
xlat
imul
jmp
mov
adc
push
xchg
dec
shrb
stos
xor
lret
cli
imul
inc
cli
dec
jae
in
xchg
cmp
andb
mov
and
dec
push
fdivrp
imul
jbe
call
aad
push
addb
mov
shlb
sbb
aad
fnstenv
pop
xchg
repz
fadds
jmp
fcomps
or
mov
idivb
fsubrs
icebp
dec
scas
sub
sub
xchg
add
mov
fmuls
in
adc
clc
push
jae
xorb
movsl
enter
add
jns
add
testl
jb
push
lret
rcr
inc
in
scas
jae
imul
mov
add
jp
sbb
xor
xor
das
pop
pop
dec
xchg
gs
mov
and
popl
jmp
push
ret
and
xor
pusha
and
dec
or
push
imul
subl
sub
shl
movsb
data16
aas
lea
dec
clc
add
mov
pusha
push
push
mov
sub
adc
add
out
out
scas
adc
loope
cltd
or
fldcw
dec
daa
loope
leave
dec
scas
jae
int3
adc
push
cmc
fisttpl
xor
stc
jl
out
xchg
aaa
call
inc
add
xor
inc
pop
jmp
fisttpl
pop
xor
insb
push
lods
movsb
sub
gs
adc
pushf
fs
mov
popa
jle
into
dec
mov
ret
repz
or
pop
and
mov
mov
add
xchg
inc
mov
cmpsb
jne
mov
loope
rcrb
and
mov
adc
lds
cltd
in
out
cli
outsb
xor
call
imul
insb
adc
test
out
push
lret
pop
xchg
out
or
mov
pop
push
cmp
in
inc
loope
xchg
call
fs
adc
ror
fldenv
push
pop
inc
popa
mov
repnz
xchg
call
gs
jg
pop
pop
ljmp
js
push
mov
pop
sarl
sbb
dec
aam
iret
xchg
repnz
xchg
and
cmp
arpl
adc
sti
jns
xorl
sar
sub
sbb
xchg
and
insl
pop
jne
pop
pop
xor
and
sub
xchg
scas
stos
fwait
mov
xor
pop
loop
xchg
add
and
jb
rcrl
pop
lods
mov
sub
fwait
clc
cmp
arpl
and
pop
arpl
pop
lcall
incl
ss
jne
adc
jb
andl
mov
adcl
cmp
aaa
fld
mov
xchg
nop
setno
add
in
jbe
sub
cmp
aaa
jp
enter
add
sbb
jg
cmpb
push
mov
aas
test
add
test
dec
cmpsb
jg
inc
push
dec
icebp
enter
dec
les
fldl2t
push
sahf
xchg
jecxz
push
in
or
cmpsb
push
jmp
arpl
push
pop
pop
dec
jp
repz
arpl
mov
popa
fs
adc
stos
negl
fsubp
test
adc
inc
cmp
cmp
jmp
push
aad
enter
jb
jnp
jl
pop
dec
out
jecxz
mov
shrb
das
es
aad
jg
clc
sahf
mov
addr16
sbb
mov
fdiv
mov
mov
push
pop
jbe
sarl
loope
mov
scas
cmp
push
mov
xor
call
popf
call
insb
test
mov
or
mov
inc
pop
test
adc
jne
das
pop
xorb
lds
xorb
sti
cmp
lock
cs
inc
push
inc
xlat
jle
or
jb
add
pop
mov
mov
push
pop
inc
fs
cmpb
and
or
les
sub
sbb
inc
fwait
bound
sbb
shrb
out
mov
lods
and
arpl
mov
subps
xor
jae
xor
sbb
inc
outsl
scas
arpl
or
sbb
into
imul
jbe
push
iret
test
sbb
push
pop
push
cli
shlb
pop
outsl
out
mov
jb
pop
push
outsl
imul
repz
hlt
xchg
or
out
mov
mov
lahf
popf
sub
adc
scas
fdivrp
xchg
pop
mov
popa
stos
mov
inc
adc
push
lea
data16
jns
xchg
push
sahf
movsl
mov
ss
aas
insl
mov
scas
push
out
arpl
and
iret
xchg
sbb
imul
loopne
fs
out
pop
scas
sub
inc
std
xchg
sahf
aad
pop
hlt
push
push
sub
clc
push
cmpsl
xchg
fdivs
lock
shrl
inc
insl
ds
stos
and
rclb
add
jle
push
and
ret
jns
jmp
and
cmp
out
cmp
jb
sub
test
ret
cwtl
push
mov
pop
lods
clc
sub
aad
into
or
es
dec
push
lods
mov
sub
adc
push
inc
dec
in
inc
icebp
inc
data16
cmp
cmp
add
or
sti
pop
addb
inc
mov
pop
mov
mov
pop
add
fnsave
mov
cmp
jmp
mov
insl
test
push
loope
scas
aad
add
mov
js
lcall
ja
pop
add
mov
pextrw
add
dec
or
scas
cmp
gs
inc
xchg
lcall
mov
insb
iret
aad
mov
mov
popf
jns
add
mov
mov
mov
pop
fdivrl
aas
inc
shr
cli
xor
ljmp
adc
jb
sbb
daa
sub
jecxz
fwait
orb
shlb
cmp
imul
sbb
mov
cwtl
jmp
mov
cs
outsl
fcmovnb
lock
shlb
rcrl
and
jge
sub
or
jno
sbb
rolb
xchg
sub
out
pop
scas
mov
push
insb
hlt
pop
bound
sar
dec
push
insl
iret
ret
imul
push
idiv
dec
and
bound
add
push
push
hlt
fwait
fwait
mov
mov
dec
addl
fidivrs
push
scas
sbb
and
sarl
pop
mov
cmpsw
inc
arpl
xchg
mov
mov
aam
mov
mov
shrl
dec
data16
cmp
pop
stc
pop
push
and
int
pusha
dec
icebp
les
sbb
sub
test
jae
adc
aaa
mov
or
std
mov
lret
push
xor
jno
fmul
xor
ja
ret
test
insb
aam
addr16
outsb
fwait
sbb
std
mov
movsb
into
push
stos
aad
lcall
add
inc
lock
lods
testb
sahf
sub
jmp
mov
inc
cld
and
test
scas
cmp
add
mov
adc
scas
arpl
mov
adc
rolb
shll
sub
push
scas
push
ficoml
lcall
jmp
xchg
sub
iret
lcall
sub
adc
xor
ja
ljmp
sub
aaa
push
adc
mov
jp
and
dec
dec
pop
outsl
shrl
or
sub
dec
out
stos
into
icebp
xchg
pusha
add
ljmp
adcb
inc
nop
test
push
xchg
je
ds
inc
nop/reserved
inc
ja
push
cmp
ret
sbb
cltd
lock
mov
int
adc
mov
movsl
icebp
adc
in
ret
lahf
gs
sbb
pop
pop
adc
fidivl
test
pusha
sub
pop
pusha
sahf
mov
iret
popa
cli
or
mov
sub
imul
lret
mov
and
pusha
fstps
xor
xor
or
jecxz
add
ret
gs
xchg
mov
les
push
or
mov
jp
insl
push
xchg
js
inc
xchg
aas
aad
notl
outsl
mov
in
andb
mov
scas
sub
dec
pop
daa
mov
jno
testb
popa
inc
cmpb
lods
icebp
out
push
cwtl
ret
jg
cmp
stos
dec
pop
cs
adc
pop
ret
dec
sub
xchg
imul
or
sbb
or
in
and
test
mov
not
fimull
lcall
dec
cli
into
fstl
lahf
rorl
cwtl
cli
ljmp
ret
sarb
cmp
enter
roll
push
jecxz
loope
mov
mov
cli
push
mov
je
or
pop
into
cmp
xor
dec
cmpsl
dec
cmp
out
and
out
cmpsb
sbb
push
xchg
stos
mov
hlt
add
jecxz
xchg
and
jg
ret
adc
mov
mov
xchg
cmp
add
xor
cmpl
icebp
cmp
add
repz
mov
sbb
mov
pusha
fisttps
adc
mov
or
mov
jp
cs
inc
mov
fs
outsb
xor
enter
or
xchg
pushf
xchg
mov
add
je
dec
mov
cwtl
jbe
or
orl
cli
add
xchg
and
sub
push
shl
jae
cmp
jp
aad
in
test
inc
test
add
mov
pop
ja
mov
stos
js
pop
popa
push
jmp
mov
aas
add
mov
out
outsl
push
aas
sub
xchg
out
imull
aas
rcr
jb
iret
hlt
dec
std
sbb
stos
push
repz
jbe
dec
movsb
mov
jg
test
inc
outsl
add
in
fs
lret
sahf
xchg
movsl
in
imulb
sub
inc
lahf
pop
out
jne
ss
cwtl
mov
arpl
outsb
cmc
dec
fisubrl
or
pop
inc
or
mov
jg
xor
inc
inc
sbb
xor
fdivrs
xchg
and
add
pop
aam
adc
jecxz
push
fadd
jns
push
stos
ss
cltd
dec
push
sbb
jl
mov
repz
push
mov
xor
fidivrl
dec
dec
xchg
iret
or
ds
dec
insb
xor
mov
jp
fmuls
jb
jp
lods
xchg
inc
and
nop
xchg
jns
inc
mov
xchg
cli
out
add
pushl
popa
mov
cltd
adc
pushf
xor
cmp
sub
hlt
cmp
ja
loope
pop
jecxz
shrb
imul
bound
mov
mov
pop
or
lods
mov
nop
push
lret
xor
pop
pushf
popf
sahf
cmpsl
decl
std
push
sbb
mov
aam
adc
dec
xor
aam
and
out
aaa
sub
jns
stc
jb
dec
mov
xor
ljmp
mov
jb
or
add
add
mov
cld
adc
ja
and
jae
jno
gs
loope
xchg
xchg
mov
mov
sbb
mov
out
stc
pop
and
repz
sbb
lcall
js
iret
iret
out
cs
push
xchg
dec
mov
push
jl
add
cmc
add
mov
mov
add
jne,pn
xlat
xor
pop
mov
ja
xor
sbb
inc
mov
jmp
outsb
inc
scas
xorb
pop
jae
adc
daa
fiadds
aas
adc
mov
jb
clc
sub
in
push
loope
pop
clc
aad
ja
sbb
movsb
mov
ja
test
filds
subb
test
mov
fisubrs
jae
popf
push
leave
sbb
popa
cld
push
mov
stos
in
jns
call
popa
mov
stos
mov
imul
leave
xchg
push
xor
xor
negb
shr
mov
adc
aam
loop
stos
jo
repnz
and
add
in
mov
mov
jnp
cmp
fdivrl
adc
xchg
pop
popf
jne
cmp
mov
imul
lock
pop
or
out
adc
or
sbb
pop
jg
fcompl
into
dec
sub
std
es
popf
xor
int
in
lods
inc
mov
dec
cmp
xchg
mov
push
repnz
lahf
push
outsl
shrb
enter
jp
mov
cmp
mov
add
mov
adc
int
jge
repz
jb
sub
lret
dec
rolb
in
in
jns
lcall
mov
pop
cld
ret
adc
mov
leave
repnz
xchg
insb
inc
loope
or
leave
inc
int3
mov
ffreep
inc
dec
cli
cld
test
divb
dec
pop
fistps
in
jecxz
push
inc
lcall
pop
inc
jo
inc
pop
subl
not
push
adc
jl
sbb
pop
scas
jno
and
xchg
sarl
add
stos
mov
mov
pusha
pop
cltd
add
scas
fs
test
mov
in
leave
js
or
push
xor
pop
push
dec
cmp
fstpt
out
xor
pop
jnp
test
cmp
xor
mov
sarl
iret
xchg
xor
adc
add
jnp
and
inc
jle
mov
mov
test
test
jne
mov
add
mov
aas
arpl
sub
pop
add
pop
mov
mov
xchg
and
in
cmpsb
jp
std
addr16
adc
pop
fnsave
xlat
stc
xor
aam
xchg
stc
shlb
in
lea
ljmp
or
stc
out
insl
push
ja
scas
adc
pop
cmp
insl
icebp
pop
shlb
sbb
jmp
lcall
mov
movsl
repnz
cli
jecxz
int
out
sub
xor
aas
enter
mov
outsb
sahf
push
jae
mov
outsl
mov
xor
xchg
or
ffree
aas
int
cmp
mov
loopne
pusha
imul
pusha
ds
push
push
xchg
jle
loop
push
outsb
xchg
mov
roll
cmc
aad
mov
mov
popf
insb
test
inc
das
fldcw
in
js
mov
dec
aam
xor
fidivs
movsl
push
lods
es
pushf
inc
or
icebp
adc
adc
lret
mov
repz
call
dec
xchg
ljmp
mov
xchg
jbe
lods
cmpsl
repz
dec
mov
nop
icebp
lods
shlb
arpl
pop
hlt
fdivp
das
in
ror
add
adc
sub
pop
in
leave
mov
xchg
test
scas
or
sub
xor
repz
or
cmc
jbe
ja
aaa
mov
adc
test
test
push
lods
inc
adc
iret
ss
dec
push
ss
xor
xor
inc
jl
je
scas
stos
jg
and
cmpsb
outsl
sbb
gs
or
fldenv
fwait
add
pop
xor
or
push
xlat
repnz
or
cmpsb
or
in
pushf
dec
mov
pop
nop
pop
adc
fs
push
faddl
test
mov
icebp
addb
push
sub
push
cmp
clc
sbb
movsb
fs
std
mov
gs
pop
mov
adc
mov
xor
sbb
xchg
cwtl
mov
cld
mov
pushf
aam
cltd
or
lods
fldl
sub
sub
xor
lock
cwtl
lods
pop
out
aam
jb
mov
jb
cmp
rclb
pusha
in
cwtl
ret
adc
outsl
fimull
add
mov
pop
mov
add
jl
cmp
xchg
sbbl
in
add
push
cli
lods
xor
cmpsl
cmpsb
sub
mov
addr16
or
mov
pop
loopne
in
lret
pop
dec
and
adc
add
fsubl
sub
das
outsl
xchg
dec
add
arpl
icebp
bound
push
xor
push
mov
sub
mov
pop
movsb
mov
cmp
fisubrl
and
push
in
sar
ret
inc
mov
rclb
sbbb
movl
sbb
pop
add
add
fstl
insl
mov
jmp
ds
iret
push
mov
mov
in
aad
test
pop
sbb
lcall
stos
shlb
inc
mov
sub
lret
push
inc
sbb
insl
test
mov
lahf
sbb
jb
addl
fimull
mov
pop
push
and
mov
je
inc
nop
sbb
out
dec
sub
xchg
or
pop
mov
addr16
movl
das
cld
lds
sahf
out
xor
and
pusha
and
test
push
xor
mov
sbb
pop
icebp
sti
repz
pop
mov
enter
outsb
xor
sbb
cmp
dec
fisttpll
sub
out
jecxz
xor
in
mov
jae
fiadds
sub
jae
cmp
cmpsb
sahf
push
xor
scas
sar
xchg
cmpsl
data16
js
lock
cmp
push
pop
pushf
pop
sub
pop
loopne
dec
test
testb
je
cmp
jbe
sub
into
insl
sti
cs
push
outsb
xchg
push
sahf
call
xor
lock
shr
push
jbe
daa
div
dec
call
out
sub
dec
inc
sub
mov
repnz
insl
fisubl
or
call
imul
dec
divl
call
mov
into
inc
cltd
xchg
xor
and
std
xor
jne
mov
push
dec
out
nop
loop
jle
sbb
add
cmc
gs
pop
push
add
sub
das
leave
out
jl
pop
and
jmp
int
xor
sbb
cmp
movsb
or
test
aaa
data16
mov
mov
jb
adcl
push
shl
je
int
test
inc
push
jnp
stos
sbb
jmp
pop
cwtl
test
int
stc
popa
icebp
stos
movsb
mov
fs
xchg
jae
lret
xor
push
imul
ljmp
arpl
and
int3
sti
jecxz
jb
adc
in
lock
sub
push
in
mov
sbb
pop
mov
subb
lcall
inc
shll
imull
out
in
cmp
out
xchg
mov
mov
xchg
xor
add
pop
mov
imull
jmp
lret
mov
or
or
mov
insb
sahf
jnp
inc
mov
add
shll
das
xchg
in
cmp
fildll
inc
cld
sub
repnz
or
movsl
pop
mov
mov
or
paddq
test
movsb
jge
mov
mov
sti
adc
add
in
cmpsb
stc
call
test
les
sbb
cwtl
outsl
daa
popf
push
xchg
adc
mov
fwait
mov
bound
cmp
stos
enter
scas
movsb
das
repnz
or
inc
jne
push
sbb
jge
xor
or
mov
adc
fisubrs
mov
insb
rcrl
add
jno
push
add
add
nop
inc
lret
lods
xorl
sar
pop
icebp
push
fcom
xchg
inc
xor
mov
outsl
xor
imul
add
push
sbb
mov
cltd
arpl
jg
in
repnz
lahf
xor
xlat
mov
int3
jp
xchg
jnp
or
mov
mov
mov
mov
push
lcall
mov
insb
push
jmp
xchg
mov
mov
lret
js
mov
pop
out
mov
repnz
adc
and
in
push
mov
fdivrs
jbe
les
mov
mov
push
xchg
in
pop
and
data16
mov
xor
test
aas
add
hlt
out
sbb
stc
into
dec
dec
push
lea
shrb
rcl
hlt
push
jo
mov
pop
add
mov
scas
pop
sbb
jp
outsl
arpl
cli
cmp
movsl
adc
and
mov
scas
decb
mulb
mov
jo
cmp
lods
cltd
inc
cli
push
clc
or
jnp
xchg
aaa
aaa
leave
adc
xorb
xchg
movsl
ret
add
arpl
cli
xor
or
sbb
sbb
mov
mov
jle
shlb
in
add
jmp
push
rcll
fsubs
inc
nop
sub
jbe
and
pop
jae
push
and
in
in
clc
iret
cmp
mov
shll
pop
jmp
mov
outsl
out
in
mov
jo
jge
cs
aas
push
mov
cmpsb
lret
mov
or
mov
mov
call
nop
outsb
notb
add
jne
push
popl
repz
clc
jge
loope
fimuls
inc
aaa
fstps
xchg
in
dec
pop
stc
xlat
mov
bound
lock
notb
test
cwtl
cld
jo
push
or
outsb
rol
sbb
xchg
lock
xor
data16
add
arpl
sub
sbb
test
xchg
ja
cli
mov
daa
sbb
push
mov
jle
pop
cmp
rorl
mov
mov
std
push
gs
inc
cmc
int
sub
inc
fucom
pushf
popf
lods
setb
addl
and
and
loope
dec
js
push
out
cmpsb
xchg
ljmp
mov
dec
sbb
fstl
frstor
jae
cmp
push
filds
popa
adc
ja
mov
jle
sarl
push
add
xchg
movb
das
into
jbe
xchg
shll
mov
sub
cmp
add
pushf
mov
cwtl
outsb
xor
sbb
enter
dec
add
in
mov
xchg
es
add
add
int
sbb
mov
loope
add
dec
data16
pop
dec
xor
sbb
xchg
mov
rorl
outsb
xor
std
cmp
sub
fwait
adc
mov
sub
xchg
sbb
lock
fildl
push
fwait
jecxz
mov
or
sbb
inc
inc
mov
jge
pop
sub
pop
aaa
xchg
push
lahf
cmp
inc
out
js
in
cmp
insb
dec
cmpsl
push
inc
js
cmpsb
call
mov
pop
mov
les
push
shll
jae
inc
push
mov
mov
dec
sahf
insb
test
insl
cmp
call
cmp
pop
or
add
mov
mov
rcl
mov
fsts
popa
mov
scas
mov
push
ja
loope
xchg
dec
dec
addr16
mov
xchg
and
mov
sbb
push
aaa
flds
bnd
and
mov
out
lods
fnstcw
cmp
mov
or
inc
stos
pop
imul
xor
scas
pop
sbbl
data16
stos
aam
xchg
xchg
xchg
and
dec
imul
push
adc
mov
mov
icebp
push
das
sub
jl
pushf
push
push
icebp
shl
test
mov
cltd
loopne
aas
pusha
popa
sub
lret
push
and
shrl
add
push
cs
mov
adc
dec
repnz
loope
cs
pop
stos
dec
clc
lods
pop
sbb
pusha
and
loop
jp
xchg
or
sahf
bound
xor
cmc
mov
pop
xchg
mov
xchg
testb
stos
sub
lods
cwtl
shr
jge
mov
iret
pop
mov
lret
clc
gs
not
enter
mulb
and
aas
notb
popa
lock
iret
icebp
iret
popf
stos
pop
aad
mov
pop
lret
cmp
js
pop
mov
rcrb
cmp
ja
cmc
jbe
cmp
add
loopne
out
ljmp
pop
jns
push
addl
add
inc
push
sub
xchg
xchg
mov
mov
inc
jb
test
repnz
cmp
scas
lret
jno
and
inc
push
ret
jle
popa
mov
das
mov
imul
xor
imul
mov
shrb
jno
or
pop
popf
push
popa
sti
xlat
push
repz
inc
nop
out
cmp
movsl
clc
dec
imul
xor
enter
xchg
sub
xor
push
sub
or
popa
jecxz
sbb
andl
enter
movsl
stc
xor
sub
cmpsb
outsl
mov
pop
add
sbb
push
mov
sub
cld
lods
mov
jne
add
data16
scas
dec
mov
scas
in
cltd
sub
and
cltd
pop
out
repz
cmpsl
sub
pop
push
es
or
mov
in
in
cltd
ret
pop
out
push
push
ja
mov
ds
mov
movq
pop
fwait
leave
mov
xchg
jae
cli
idivb
fsub
ds
add
notb
push
dec
mov
jns
pop
pop
lret
xor
nop
ret
loopne
mov
push
int
mov
inc
cmp
mov
out
scas
mov
mov
mov
mov
sbb
pop
add
pop
sbb
shlb
sub
inc
inc
mov
ds
fucomip
sbb
jo
ds
mov
push
push
loopne
cmp
adc
hlt
jge
and
xor
mov
add
int
shlb
mov
andb
xor
loopne
dec
jb
stc
js
or
in
pop
test
test
lds
call
aas
pop
adc
dec
outsl
xchg
cli
jle
out
movsb
movsb
jo
popf
jnp
je
jns
sbb
movsl
lea
jmp
cltd
dec
cwtl
enter
in
iret
int3
ficoml
sbb
sbb
mov
dec
sub
cmpsl
fiaddl
xchg
fldenv
ljmp
int3
sbb
or
aam
popa
dec
dec
sub
dec
stc
push
jmp
int
nop
sahf
out
and
das
cs
ja
add
xor
jl
xchg
adc
dec
sub
xchg
call
cmpb
into
add
mov
iret
cmovb
cs
lcall
inc
pop
adc
test
and
lds
sub
mov
adc
fiaddl
cwtl
sub
pusha
loop
test
data16
sub
dec
pop
popf
mov
outsl
lods
xchg
ret
or
mov
mov
movsl
xchg
pushl
scas
popa
je
sub
adc
test
fldenv
adc
xchg
cld
dec
data16
test
cmp
loop
or
add
add
and
mov
xchg
cmp
fnstsw
xchg
lcall
jl
sub
punpckhwd
xlat
lods
jne
je
inc
push
add
movsl
xchg
mov
cmpsl
xchg
and
push
dec
jecxz
outsb
fwait
xchg
and
icebp
push
xlat
mov
nop
js
lods
mov
pop
or
hlt
loopne
xor
jp
notl
aaa
sbb
inc
cwtl
lock
mov
les
dec
cli
mov
popa
cs
loop
ja
cmp
js
mov
repz
shr
les
fcoml
lret
aas
movsl
and
into
popa
jb
rclb
aaa
call
add
rcrb
mov
cmp
xchg
xlat
jne
mov
imul
cwtl
std
dec
inc
hlt
push
xor
nop
sub
rorb
and
aas
and
jmp
pushf
jecxz
mov
push
or
cld
out
xchg
jge
into
dec
or
pushf
jl
repnz
push
out
push
es
aas
inc
add
data16
mov
xchg
pop
pop
out
or
dec
xchg
into
push
push
inc
mov
push
adc
cmp
jne
aam
icebp
xchg
sbb
mov
fdivl
clc
pop
jne
aaa
lock
lea
or
sub
add
movsb
into
xchg
xchg
sub
test
xchg
lods
mov
andl
push
lea
mov
int3
sbb
dec
and
sahf
and
daa
lock
cmpl
fdivrl
xchg
cld
icebp
ja
push
pop
outsb
sub
cmp
int
clc
jecxz
xchg
pop
cwtl
ret
push
mov
jl
aad
pop
fildl
lds
mov
xorb
lea
mov
dec
call
out
mov
cltd
cmp
xor
mov
in
sbb
lret
adc
call
arpl
jbe
or
add
loopne
fstps
clc
sub
jl
testl
insb
lret
jg
or
xchg
sbb
and
arpl
cmp
jnp
cltd
cmpsl
pop
pop
insl
jno
lret
add
pop
fwait
sub
fldcw
and
mov
adc
insl
nop
mov
mov
cmp
test
out
lret
and
fs
mov
lea
loopne
fnstenv
add
xor
mov
inc
and
cli
inc
jb
cmp
xchg
jmp
in
xor
lahf
sbb
cli
call
lcall
aaa
ror
push
call
xlat
push
jmp
xor
cmpsl
negb
fisubrl
fsubr
repnz
fwait
ja
std
sbb
mov
loope
fildll
addr16
in
cmp
sbb
jne
ss
sbb
loopne
rcrb
push
cmp
inc
mov
dec
mov
scas
rolb
pop
jno
test
icebp
aas
rcrb
mov
faddp
movzwl
outsb
cmpsb
out
adc
sti
sub
xor
push
loop
add
push
push
adc
ds
jp
clc
decl
es
fdivr
je
sbb
add
inc
cmp
add
pop
xchg
xchg
repnz
lret
inc
test
stos
ret
test
push
fadd
pop
dec
xchg
in
vmovsd
xchg
hlt
lret
enter
dec
rcr
push
add
jae
dec
push
sti
inc
mov
orl
lods
xor
or
iret
xor
cmpsb
imul
mov
push
lods
xchg
out
shlb
jae
outsb
stos
mov
jecxz
inc
aas
out
aam
fwait
xorl
lahf
jnp
scas
pushf
fisttpl
sub
mov
pop
movsb
and
gs
inc
pop
inc
push
push
aas
inc
xchg
push
ljmp
iret
xorl
leave
loopne
idivb
cmp
jp
loop
popa
sbb
out
lahf
sbb
sbb
sbb
mov
in
cmpb
icebp
int3
push
icebp
xor
xchg
adc
in
dec
jecxz
in
push
es
mov
mov
cmpsl
out
mov
add
mov
add
mov
insb
sbb
mov
push
pop
xchg
xchg
in
adc
mov
push
divl
push
aam
arpl
inc
inc
mov
jmp
sub
in
jb
add
add
lock
cltd
repnz
js
fsubrl
gs
mov
out
fs
out
pop
dec
cli
loopne
push
popf
sti
push
mov
popf
pop
movsl
in
pop
mov
add
sti
int3
shrb
adc
lret
imul
adc
fcmove
sub
cmp
std
dec
orb
push
push
sub
inc
outsl
test
xor
call
add
sub
out
inc
push
xchg
sub
push
imul
stos
arpl
test
iret
sbb
mov
push
add
sarl
mov
jns
inc
cli
outsb
push
popf
test
imul
int3
sahf
movsb
icebp
int
js
clc
js
mov
cmpsl
lahf
cli
cmp
popf
scas
jnp
lret
mov
mov
orb
add
mov
pop
ljmp
mov
mov
mov
fnstsw
lret
sub
inc
ja
sub
sbb
lods
adc
sbb
cmpsl
add
orb
icebp
movsl
sbb
mov
jmp
add
movsb
shll
mov
rolb
push
xchg
into
gs
loope
loop
lcall
jne
lods
jo
mov
fistl
xor
sbb
or
dec
mov
out
xor
and
mov
fwait
out
mov
ds
mov
inc
ror
addr16
xchg
les
mov
pop
or
pushf
cmc
scas
sbb
or
mull
cmp
and
pop
inc
inc
mov
xor
out
bound
adc
ret
hlt
aad
add
mov
out
addr16
aas
in
ljmp
cmp
sbb
sbb
sub
incl
stos
sbb
pushf
xor
mov
cmp
lock
leave
cmp
pop
and
movsl
sub
fisubrl
rclb
dec
ss
inc
pop
movsb
lock
test
adc
mov
push
dec
xchg
inc
xlat
call
adc
ret
shl
mov
aas
out
mov
sub
pusha
or
push
iret
aas
push
jmp
xor
push
xor
mov
or
ret
dec
lret
aas
pop
ret
mov
xchg
push
stc
adc
add
std
push
push
enter
roll
jno
add
mov
push
push
lock
jns
and
test
ds
cmpsb
push
popf
add
ror
inc
or
jae
add
add
loop
push
ds
pop
popf
out
data16
rorb
out
pop
fidivrs
push
rep
pop
rolb
inc
data16
jbe
cmc
jmp
and
dec
push
jbe
and
in
adc
pop
mov
mov
mov
push
jle
inc
test
lahf
jle
hlt
aas
out
pop
mov
mov
out
mov
ficoms
int3
xchg
sbb
bound
fucom
test
sbb
jb
fmull
inc
ret
mov
inc
enter
movsb
pop
testb
shl
jg
loop
cmp
dec
push
shrl
xor
push
pop
cmp
rolb
lock
ss
cmp
and
lret
test
inc
or
lds
loope
push
ja
sbb
dec
adc
mov
mov
out
cli
aad
rclb
mov
xchg
sub
sbb
inc
bound
sbb
cmp
cmp
mov
sub
movsb
push
cld
push
push
insb
fistl
mov
cmp
jmp
cli
es
mov
push
pop
lds
call
push
scas
cmpsb
adc
jmp
pop
jmp
pop
lea
inc
mov
cmp
pop
mov
mov
imul
push
pop
inc
jbe
ljmp
cld
push
lret
push
jne
aad
popa
std
adc
ret
push
insl
dec
data16
test
push
int3
mov
xor
push
sahf
xchg
fcoms
mov
sub
jmp
mov
inc
pop
imul
lahf
out
addr16
xchg
xchg
xchg
adc
hlt
mov
pop
xchg
aad
clc
xor
outsl
fucom
stos
push
push
pop
mov
mov
add
mov
mov
dec
cmp
xor
icebp
xor
in
push
sbb
pusha
scas
test
sbb
fmull
movsl
inc
test
push
shrl
mov
aad
push
mov
inc
adc
es
in
pop
cld
in
lods
fldcw
lahf
sub
aad
dec
shr
mov
push
adc
add
dec
mov
pushf
sub
jns
mov
fwait
xchg
notl
cmc
push
ret
xchg
stos
fldenv
daa
push
es
push
xchg
ret
add
ss
sub
cmp
fidivs
or
sti
je
cmp
js
inc
gs
jmp
inc
sahf
push
inc
cmp
data16
or
jno
mov
lods
jle
adcl
shlb
mov
pop
movsl
stos
mov
mov
cli
out
in
xchg
xchg
push
sbb
cli
xchg
push
ss
outsl
test
outsb
or
out
dec
pusha
pop
out
push
neg
push
fidivrl
xchg
test
enter
hlt
in
out
sub
roll
movsl
inc
fstl
mov
xchg
add
inc
sahf
mov
fdivs
popa
inc
dec
pusha
sti
mov
jns
pop
sarl
shr
rol
sti
loopne
adc
cmc
gs
mov
daa
insb
push
popf
in
inc
fs
cmp
cmp
stc
xchg
pop
vpsrlq
icebp
xchg
mov
jo
push
movsl
mov
iret
jno
dec
subb
cld
fsubrl
inc
pop
or
dec
dec
aad
lahf
sub
or
shlb
fs
inc
and
pop
loope
sbb
mov
es
push
xor
jnp
lock
out
sarl
bsr
insb
mov
lock
test
vhaddps
cmpsl
xchg
aad
addr16
push
xchg
sbb
lods
mov
outsl
jns
test
mov
arpl
test
test
mov
cltd
push
lret
inc
mov
aaa
push
push
loopne
pushl
push
mov
dec
aaa
sahf
scas
pop
xor
dec
sbb
gs
xchg
cmpl
cmpb
mov
stc
or
mov
xor
xchg
es
fisttpll
sbb
ja
xlat
jle
test
loopne
out
jle
sbb
movsb
xchg
add
test
movsl
sbb
cmp
popa
mov
ds
scas
mov
scas
icebp
mov
test
insb
cld
jecxz
movsb
rcll
adc
dec
xchg
lods
mov
enter
fsubp
jp
lahf
add
pop
and
data16
push
shll
nop
sarl
leave
jl
push
mov
out
std
inc
stos
cmpsl
dec
lea
jle
push
outsl
test
add
notl
inc
aam
arpl
jb
pop
add
lret
shll
sub
std
sahf
test
ret
in
pushf
xlat
outsb
or
and
sub
xchg
pusha
or
ficoms
mov
int
pop
mov
adc
cli
mov
test
lods
outsb
cmp
mov
das
jecxz
push
sti
or
cmpsl
adc
lcall
ja
xchg
sub
ret
stc
push
negl
adc
lods
jnp
popa
lahf
imul
add
je
sub
data16
out
outsb
jne
inc
dec
aam
lock
movsb
xchg
js
imul
not
mov
push
leave
sbb
xor
xlat
xor
xchg
sub
mov
ljmp
movsl
outsl
sbbb
mov
je
fwait
leave
stos
jbe
hlt
or
push
and
inc
imul
mov
call
adc
add
fisttpll
lods
sbb
cmp
repz
das
ss
lea
cmp
stc
sub
mov
xor
rcr
test
ficoms
adc
and
popf
or
xchg
enter
imul
add
push
cmp
jecxz
xchg
xchg
pop
xlat
loop
dec
mov
mov
mov
outsl
cltd
std
shll
inc
lret
sbb
push
or
ja
xor
imul
fstl
sahf
jae
xchg
pop
das
cmc
popf
mov
push
mov
push
call
add
jbe
fs
cmpsl
inc
cmpsb
push
sti
xchg
jp
mov
add
cmp
call
inc
aas
pop
inc
push
mov
sub
xchg
lret
adcb
ret
fadds
insb
pop
xchg
push
ds
idivb
cmp
es
lret
mov
cmp
ror
xlat
and
adc
xchg
int
je
scas
mov
jb
ljmp
scas
sub
ds
pop
or
jbe
cmpl
mov
xchg
ja
xchg
cmpsl
lret
movsb
adc
sbb
arpl
hlt
call
inc
xchg
cltd
insb
fldl
cmp
or
dec
movsl
add
or
fsub
lea
inc
add
cmpsb
mov
inc
mov
jb
ja
scas
pop
inc
cmp
inc
mov
add
xor
cmpsl
ds
shlb
aaa
push
daa
mov
sahf
pop
mov
lret
xchg
mov
and
bound
jns
cmp
pop
std
mov
adc
push
cld
jb
xchg
jp
adc
jns
xchg
popa
mov
out
lock
xchg
out
and
rcr
loope
mov
pop
cmp
shl
inc
je
inc
add
insl
jle
push
mov
push
cmp
push
cmp
sbb
leave
sbb
mov
int
inc
mov
sbb
push
lds
aaa
adc
or
pop
cmp
out
ret
int
testl
loope
fxch
popa
mov
jno
jp
or
sub
fsubp
pop
orb
push
push
icebp
mov
cmp
sub
test
mov
xor
xor
scas
pop
pop
ss
repnz
xchg
xor
sbb
lock
dec
test
or
fbstp
dec
mov
mov
and
mov
adc
insb
or
lea
imul
mov
hlt
mov
add
inc
shlb
mov
mulb
xchg
inc
aad
mov
sub
cli
das
jno
in
inc
sti
jne
jns
sbb
push
jl
ror
sub
subb
or
or
pushf
pop
pop
int
rclb
shl
hlt
scas
add
jmp
shrl
xor
add
fs
das
movlps
adc
sub
test
xchg
imull
outsl
popf
lock
hlt
ljmp
mov
xchg
stc
out
sahf
hlt
fisubs
push
es
push
xchg
mov
push
mov
adc
rcrl
push
loope
leave
sub
rcrl
fisubrl
mov
nop
int
gs
jge
cwtl
jbe
mov
hlt
push
das
mov
push
mov
mov
mov
sub
jmp
sahf
iret
aam
push
gs
scas
push
cld
push
cwtl
in
jge
push
sbb
push
mov
push
call
cmp
mov
add
pusha
cmp
mov
push
xlat
mov
jle
fucomip
orl
ljmp
bound
test
cli
dec
sub
dec
mov
fs
popf
ja
clc
push
mov
int
mov
mov
shl
sub
notb
std
aaa
call
sbb
cmp
imul
test
mov
out
cmp
and
pop
cmp
or
clc
imul
js
cli
mov
bound
push
movsl
les
mov
repz
pop
cmp
mov
les
cwtl
push
inc
rorb
sbb
rclb
or
and
movsb
mov
mov
enter
movsb
xor
cld
cld
test
addr16
jbe
nop
test
sti
xchg
or
mov
jo
or
jp
and
decl
adc
jo
gs
fisubrs
and
sahf
sarl
dec
stos
movsl
sbb
or
shlb
pop
inc
adc
push
cmp
fcoms
orb
ss
rclb
sub
lcall
cmc
dec
shlb
popf
jb
fmull
xchg
cmpsb
xor
mov
imul
pop
jg
in
repz
inc
leave
repz
push
or
std
mov
fnstsw
mov
outsb
add
mov
inc
jge
xchg
xchg
and
shl
adcb
push
push
enter
cmpsl
and
jae
mov
repnz
mov
mov
and
aam
arpl
aas
jg
fidivrs
cmpsb
add
data16
adc
cld
mov
push
ret
inc
cmc
mov
inc
ja
std
sub
mov
sahf
and
or
in
sub
mov
push
pushf
pop
jo
out
js
aaa
jecxz
lcall
xchg
dec
mov
scas
stc
leave
xchg
cmpsb
pop
xchg
ret
xor
outsl
push
push
clc
cmp
sbb
loope
testl
dec
mov
jg
mov
ds
jecxz
cmp
or
lret
inc
int3
lods
cmp
clc
mov
test
ss
dec
stos
call
push
inc
mov
jo
adc
pop
push
imul
in
test
pop
mov
insl
repz
movsb
adc
mov
js
fwait
sub
inc
jge
and
xchg
mov
dec
movsb
shll
push
rcr
out
pop
jb
mov
nop
ss
dec
or
add
xchg
jle
movsl
fisttpll
push
cld
cmp
daa
and
and
push
xchg
push
sbb
mov
lret
mov
sbb
mov
mov
es
movsl
or
subl
jecxz
adc
arpl
divb
inc
cmp
lods
xor
jne
test
movntq
fisubrl
sub
inc
popa
aas
out
scas
or
pop
bound
and
leave
ret
sbb
pop
ficoms
pop
dec
jbe
sbbl
dec
push
push
sbb
hlt
pop
adc
bound
mov
inc
push
dec
jmp
in
bswap
pop
cmpsb
lret
sub
popa
mov
xchg
pop
adc
inc
sahf
lret
inc
xor
mov
shll
mov
or
fisttps
sti
or
int
jl
bound
fists
out
jbe
fbstp
mov
sahf
pop
xchg
cmp
dec
inc
stc
jbe
test
stc
and
mov
enter
iret
cmp
jae
ret
stos
movsb
dec
mov
filds
xor
jno
push
lods
ss
adc
es
arpl
sbb
leave
shrl
pop
jbe
or
shll
bound
pop
fs
pop
clc
push
xchg
fwait
or
sbb
jbe
scas
inc
es
xchg
push
pop
nop
adc
dec
leave
aam
xchg
or
and
adc
shr
aad
rorl
call
cld
mov
jg
dec
ficompl
call
jne
xchg
fldenv
xor
mov
subb
and
sub
push
loop
repz
std
insb
in
add
adc
pusha
push
add
sbb
in
pop
mov
jle
or
lods
cs
add
lock
frstor
fisubrs
or
mov
insb
push
mov
stc
add
jns
mov
divb
pop
inc
fwait
fnstcw
aas
in
rolb
sub
call
ss
or
push
and
fnstcw
cmp
aaa
mov
fdivrs
jnp
or
pop
cld
xchg
push
push
icebp
and
fsubrp
or
pop
jmp
test
or
or
and
nop
ss
iret
pop
and
push
xor
push
enter
cltd
stos
out
sub
xor
adc
xchg
insb
std
outsl
into
adc
fwait
inc
or
cltd
push
iret
es
lea
mov
sarb
add
ret
adc
mov
xchg
xor
jb
xchg
mov
mov
rclb
sub
lock
inc
add
in
add
in
sbb
jnp
pusha
adc
push
push
in
test
xchg
adc
test
shr
jl
inc
add
fcoms
in
mov
cmp
sub
inc
rep
pop
mov
hlt
push
xchg
pop
rcll
arpl
jo
aas
sub
fstpt
mov
mov
xchg
test
lods
cli
dec
rcl
xchg
sbb
xchg
push
mov
scas
rclb
xchg
xor
adc
xorl
arpl
fildll
xchg
jns
adc
xchg
or
push
and
shrl
adc
cmovge
movsb
sbb
cli
sub
aas
mov
rcrl
sar
notb
pop
nop
imul
mov
jae
fidivrl
xchg
inc
pop
pop
mov
xchg
jg
test
sub
das
push
and
imul
or
out
dec
sbbb
jno
and
push
pop
add
dec
adc
fwait
adcb
movsb
test
mov
mov
test
jp
scas
lret
sub
sbb
clc
dec
adc
mov
mov
dec
in
inc
int3
imulb
adc
not
ss
test
dec
push
xor
sbb
and
out
mov
test
jg
mov
cmpsb
or
push
and
out
mov
loope
adc
cltd
outsb
sub
fdivl
push
rcll
sub
outsb
nop
mov
cmp
lea
cltd
cmp
pop
inc
xchg
enter
ss
lcall
cmp
in
push
pop
or
pop
push
adcl
adc
dec
imul
stc
lods
xchg
sbb
push
xchg
out
add
push
jge
rcrb
push
aas
std
dec
mov
icebp
aad
mov
pop
sbb
outsl
add
adc
jns
movsb
xor
cld
pcmpeqw
sbb
inc
popf
lahf
inc
test
mov
call
hlt
sahf
cmp
push
cmp
scas
orl
lea
mov
popf
mov
xchg
das
mov
inc
xchg
inc
mulb
sub
pop
jb
filds
loop,pn
and
cmp
add
jecxz
inc
mov
sbb
mov
scas
pushf
sbb
mov
daa
rorl
in
adc
sub
clc
popf
les
insb
sub
fstpt
lcall
shr
add
or
int3
stc
mov
dec
data16
add
pusha
out
push
notb
lret
pop
jg
clc
cmp
push
sbb
dec
add
outsb
inc
inc
mov
cltd
call
call
mov
jne
outsl
mov
aam
and
cli
pop
push
sbb
js
icebp
insl
loope
aas
and
nop
mov
outsb
or
test
add
outsb
sbb
aam
and
fcomip
mov
divl
jne
lds
or
sub
imul
mov
or
ja
fimuls
sub
sahf
add
cmp
les
add
inc
out
mov
minps
fnsave
cmpsb
fwait
inc
sub
sbb
cltd
gs
inc
popf
fstps
aam
lods
xor
scas
lds
outsb
dec
popa
rolb
xchg
gs
ljmp
shl
cs
cltd
pop
xchg
mov
xchg
fidivrl
adc
push
rorb
sbb
dec
xchg
mov
lea
out
dec
xor
jg
xchg
push
movsl
loopne
sub
fucomp
xor
push
movzbl
adcb
push
nop
fisubl
or
call
mov
ljmp
and
dec
daa
repnz
popa
xchg
push
add
cmp
push
xchg
mov
cli
nop
insl
cwtl
jg
lods
sbb
sbb
xor
mov
dec
sub
mov
mov
bound
adc
pop
xchg
test
adc
shlb
fiaddl
int
sbb
dec
cmp
dec
inc
std
mov
mov
mov
int3
ss
mov
xor
sub
mov
das
cmp
insl
dec
inc
push
cltd
adc
outsl
push
cli
cltd
hlt
or
fisubl
popf
fs
ljmp
sbb
adc
call
adc
call
xchg
dec
mov
mov
rclb
or
js
insl
iret
add
pusha
and
cltd
mov
sbb
inc
ret
stos
push
inc
fnsave
movsb
push
jle
popa
jb
cmp
cwtl
insl
xor
loope
loopnew
cmp
sbb
adc
lock
adc
mov
adc
fsubrs
mov
xchg
imul
jl
or
mov
ffree
shlb
lods
xor
xchg
add
dec
fldcw
iret
cmpsl
or
and
insl
aam
outsl
dec
imul
fisttpll
mov
and
jecxz
jo
notl
int
mov
lock
dec
inc
aad
and
or
test
mov
jno
stos
xchg
loopne
mov
es
xor
inc
enter
push
rorl
pusha
int
xchg
cmp
in
sbb
mov
ret
adc
mov
inc
add
or
loopne
mov
fwait
insl
sbb
or
jae
inc
push
int3
jns
add
lret
out
or
lods
pop
icebp
adc
cli
scas
mov
fldt
push
pop
aam
cmp
sarb
push
jno
dec
rclb
jmp
mov
lret
add
dec
imul
daa
add
push
lret
out
fwait
xchg
jmp
sbb
jmp
mov
push
xchg
cmpl
popf
sub
inc
cmp
insb
jb
pop
pop
aam
cld
test
add
adc
std
out
dec
push
out
mov
and
jbe
ret
mov
test
insl
fisubrs
pop
test
fucomi
sub
cmp
into
cli
popa
mov
adc
cmp
pop
mov
insb
cmp
and
mov
and
imul
lock
jmp
mull
lods
xor
mov
fildll
stos
add
cmpsl
in
jns
insl
xlat
stos
dec
push
inc
dec
jnp
pop
mov
add
xor
push
inc
dec
xor
push
and
imulb
jo
call
fwait
sub
add
inc
stos
pop
cmc
sbb
aad
popa
loope,pn
push
inc
sub
addb
sub
sbb
ds
cmpsl
mov
sti
add
js
mov
fisttpll
fnstenv
mov
fsubrs
xchg
aad
sub
mov
in
mov
jo
sub
jns
rcr
push
mov
movnti
arpl
dec
adc
and
xor
mov
repnz
sbb
cmpsl
repz
sub
mov
push
jge
inc
adc
fscale
sahf
mov
pop
add
inc
test
mov
jne
repnz
adc
je
mov
in
lea
fidivrl
imul
xor
stos
test
out
jle
insb
cmp
cmp
and
adc
dec
push
mov
mov
jnp
sub
rorl
xor
xlat
and
jae
js
inc
or
pop
xor
cmp
loop
mov
dec
dec
dec
addr16
lods
pusha
testl
outsb
aad
dec
pop
scas
and
adc
adc
out
adc
pop
push
imul
mov
jg
jmp
stc
aas
xor
jne
dec
jge
inc
enter
xchg
addr16
clc
mov
adc
je
mov
rol
out
push
aas
iret
iret
into
rcll
cmpsl
rcll
scas
lcall
mov
add
adc
sub
or
and
inc
stc
clc
and
mov
cmp
sbb
mov
ja
mov
cmp
out
cmp
loope
loope
in
jne
ret
lret
insb
inc
inc
aam
mov
lahf
inc
push
dec
fldcw
mov
stos
ljmp
fistpll
jns
mov
cmp
mov
lods
push
adc
push
jno
mov
cmpsl
sbb
mov
cwtl
hlt
sub
pop
dec
adc
mov
outsl
dec
dec
xor
stc
lcall
enter
addl
arpl
xor
bound
push
ficoml
pop
push
pop
cmp
xchg
adc
in
sbb
icebp
fdivl
in
mov
jo
cmpsb
mov
inc
imul
push
mov
aad
loop
or
movsl
sbb
mov
loop
mov
dec
hlt
and
std
push
jle
sbbl
pop
sti
fildll
sbb
aam
loope
out
mov
js
sub
and
loopne
fxtract
adc
rcl
sbb
je
dec
push
sub
hlt
adc
jae
out
xchg
lds
dec
mov
out
push
stos
lret
and
pushf
jg
outsb
xor
ljmp
sbb
les
jg
adc
xor
jp
and
pop
ds
test
sub
push
cs
ud0
or
pop
push
jnp
and
or
xchg
and
pop
cmp
push
scas
push
inc
push
ja
fnstenv
cltd
xchg
inc
and
pushf
or
xlat
test
cmp
sbb
xchg
adc
out
test
imul
push
cmpsl
or
out
cmpsl
mov
stos
inc
add
repnz
mov
dec
cmpsl
xchg
dec
dec
popa
fimull
rorl
jle
mov
pop
pop
flds
jmp
aam
push
adc
mull
mov
movsl
pop
inc
and
clc
xchg
xchg
lock
push
mov
insl
and
std
sub
pop
xor
scas
dec
imul
in
pop
cmp
inc
mov
imul
mov
xor
inc
imul
loope
sahf
inc
in
sbb
fldcw
push
xchg
ds
mov
cli
pop
popf
outsb
jl
lret
sub
cmp
jo
stos
add
pop
mov
outsb
jle
sbb
sub
or
sbb
push
out
mov
test
dec
enter
in
lret
mov
mov
or
mov
in
gs
pop
ss
mov
jp
sub
roll
xor
add
or
je
push
add
xor
adc
sbb
push
mov
adc
sbb
push
push
jg
mov
add
add
mov
sub
repnz
mov
push
jle
adc
mov
adc
movsl
loope
add
mov
mov
jmp
xchg
rolb
sub
das
pop
mov
cltd
push
out
mov
mov
jo
ret
pop
jnp
push
mov
in
call
mov
pop
nop
jp
rcll
lret
cli
pop
fidivrl
xor
xlat
loopne
adc
out
sub
mov
aad
sub
out
push
inc
xlat
aam
stos
aad
mov
or
jae
adc
stos
js
stos
cmp
cli
mov
pop
inc
sub
pusha
cmp
repz
data16
sbb
xchg
ljmp
fdivl
leave
mov
push
test
xor
push
adc
outsl
sub
dec
iret
sbb
gs
mov
stos
mov
out
stc
aaa
push
jp
mov
pop
fdivs
cmp
popl
mov
movsl
xchg
mov
stos
test
pop
jb
pop
mov
loop
andb
cmc
cmp
sub
ja
mov
push
gs
lret
xchg
and
mov
xchg
mov
ret
mov
xchg
sub
ja
xchg
xchg
in
push
push
xor
addr16
movsl
movhps
stos
or
pop
mov
movsl
push
bound
outsl
loope
test
and
sbb
outsl
xchg
sbb
outsw
xchg
repnz
in
dec
cmc
nop
mov
cmp
jns
es
cmc
adc
lea
or
push
in
sub
pop
pop
ja
fstpl
sub
cld
repnz
cmp
mov
xor
les
lds
xor
out
or
cltd
movsl
movsb
adc
div
sti
outsl
push
mov
mov
fcomip
ret
push
sbb
sub
rorl
fbstp
mov
jmp
adc
jecxz
mov
xchg
fisubrl
pop
subl
mov
inc
test
jp
pop
adc
jb
sub
pop
inc
push
jl
in
movl
icebp
push
fistpll
in
cwtl
sbb
shlb
xchg
rcrl
or
push
push
arpl
pop
sub
push
mov
ficompl
aam
lret
xlat
subl
shll
inc
call
lcall
or
mov
jl
jg
inc
insb
inc
lret
dec
jge
jg
ja
dec
loope
rorl
imul
cmp
sar
xor
push
inc
mov
call
or
sub
iret
and
dec
inc
xchg
push
pushf
pop
xchg
jle
mov
and
inc
out
dec
jbe
adc
push
pop
mov
out
jb
fsubs
jnp
cwtl
or
test
sahf
pusha
lahf
push
mov
adc
inc
dec
jmp
pop
and
orb
scas
jmp
mov
jb
push
enter
adc
push
mov
test
test
or
bound
mov
adc
jg
inc
jb
push
push
ret
gs
adc
cmp
test
fwait
ja
push
aad
pop
xchg
jno
and
ret
jbe
sub
push
incl
test
mov
adc
mov
mov
mov
sbb
dec
dec
mov
sti
lret
lods
or
xchg
push
sbb
adc
push
inc
fs
lret
add
ret
jg
dec
movsl
mov
ret
pop
jle
gs
out
push
sahf
jecxz
adc
mov
push
cmpsb
test
inc
mov
ja
cmp
stos
leave
pop
cmpsl
mov
loope
cmc
in
cld
xchg
leave
and
fwait
add
loopne
sbb
imul
fwait
pusha
int3
push
adc
std
outsl
imul
das
inc
adc
ror
fs
push
adc
push
imul
mov
scas
popf
mov
xchg
jecxz
repnz
pop
pop
das
cmpsb
shll
iret
lea
mov
pop
rcr
outsb
nop
or
lds
sbb
loope
push
outsb
cmp
xchg
mov
or
lret
movsl
adcb
push
stos
cmpsb
loop
mov
enter
push
xchg
sbb
dec
daa
mov
stc
jmp
ds
push
xor
jmp
ja
inc
cli
mov
xor
add
test
into
lahf
sbbb
mov
or
out
adc
pop
leave
sub
je
adc
mov
test
dec
mov
pop
or
js
add
inc
test
adc
push
cmp
movsl
idivl
push
sbb
push
mov
xor
jg
repnz
in
outsb
sub
pop
cwtl
sbb
popf
loopne
mov
xor
adc
xor
les
jne
movsl
lods
inc
loope
add
out
cltd
arpl
mov
xchg
xor
dec
aad
pop
add
gs
int3
sarl
or
cmp
xchg
iret
push
mov
pusha
mov
fsubrl
test
xor
pop
mov
repnz
jg
ja
xor
jne
stos
mov
pop
lock
mov
hlt
scas
sbb
in
arpl
ret
imull
sbb
push
sbb
xlat
jecxz
shrb
cmpb
sub
pslld
mov
fstp
dec
adc
lods
fst
icebp
xchg
push
and
in
sbbl
aaa
in
enter
in
push
fmul
pusha
xchg
pusha
fs
jecxz
adc
adc
mov
ja
jnp
and
cs
mov
and
std
and
cmp
jns
test
jle
jge
adc
outsl
sbb
xor
mov
sarb
shlb
push
gs
pop
adc
ret
scas
xor
pushf
mov
test
push
or
hlt
xchg
xor
and
cli
insb
ret
jns
or
mov
insl
or
cli
cmpsl
jmp
iret
jb
sbb
dec
adc
sbb
test
cmpsl
xor
jbe
sub
mov
das
push
jge
lcall
mov
adc
pop
dec
std
loop
mov
inc
outsb
inc
loopne
push
cmp
push
ja
sbb
push
mov
pop
lock
mov
call
rorb
out
xchg
mov
or
xchg
stos
daa
jg
mov
adc
lds
es
push
cwtl
mov
push
lods
cld
sbb
xchg
stos
pop
xor
jns
fcoms
cltd
jle
call
andb
ret
add
ret
push
idivb
dec
cmp
and
jecxz
jno
ljmp
pop
mov
adc
add
mov
pop
scas
pop
add
sbb
scas
loopne
mov
in
adc
jge
test
lods
pop
gs
lcall
sub
or
push
in
test
subb
aam
jg
xor
jge
pop
enter
bound
push
cli
movsl
movsl
fwait
inc
jg
lods
xor
insb
jmp
inc
xchg
leave
jl
jbe
shll
loope
mov
ss
cmp
das
xchg
in
aam
pop
sub
adc
xorl
inc
mov
aaa
adc
mov
xor
xchg
cmp
inc
mov
xor
xchg
mov
pop
mov
rcrb
mov
mulb
call
jb
into
push
xlat
adc
xchg
jecxz
arpl
lcall
leave
xchg
lds
daa
and
sub
mov
push
loopne
mov
add
mov
loopne
cmp
or
es
out
xor
pop
nop
enter
sub
dec
adc
push
mov
adc
cmp
push
out
mov
sbb
movsb
inc
mov
test
imul
hlt
mov
pop
pop
pop
inc
sbb
sar
or
out
or
stos
shr
cs
hlt
dec
leave
daa
or
test
sbb
sti
push
mov
and
out
mov
xor
inc
lea
imul
test
popa
std
mov
sub
and
pop
js
xchg
push
sbb
imul
inc
jb
popa
cld
push
xor
cmc
jmp
in
scas
lds
push
jge
cmp
cmp
mov
ljmp
js
adc
pusha
lods
add
xor
and
mov
lcall
sbb
inc
pop
outsl
enter
mov
into
pushl
and
xor
ror
das
mov
test
mull
iret
in
lret
jno
mov
xor
xchg
mov
clc
mov
jno
rorl
xchg
sbb
std
dec
add
add
add
pop
mov
mov
or
iret
daa
ds
les
xchg
dec
cmp
pop
arpl
scas
sbb
fadds
add
ret
out
enter
test
jl
xchg
cmpsb
cmp
imulb
add
test
inc
or
daa
xor
scas
shll
xchg
stos
repz
adc
pop
mov
pop
aaa
pop
test
js
mov
cld
repnz
adc
mov
jnp
fmull
test
repnz
push
mov
pusha
mov
lret
rolb
pop
mov
ljmp
nop
out
daa
pop
hlt
pop
push
leave
rcll
xchg
or
pushf
mov
jb
adc
pop
enter
aaa
sbb
xchg
ror
cmp
sti
or
jl
or
mov
ss
lcall
inc
loopne
add
mov
add
sbb
or
inc
adc
pop
fmuls
repnz
js
push
jns
repz
mov
adc
arpl
push
mov
sbb
addr16
cmp
scas
mov
jno
sbb
out
cld
adc
jno
mov
cmpl
cmp
or
pop
test
add
int
xor
xchg
jecxz
xchg
leave
and
sbb
in
decb
daa
xor
mov
push
cli
lcall
rcl
cltd
lods
mov
dec
out
or
test
pop
cmpsb
jmp
cltd
subb
jmp
call
and
xchg
jns
mov
loop
and
rolb
into
and
or
data16
jg
xchg
cmp
inc
and
mov
push
lret
je
or
xchg
les
cmp
add
jno
inc
push
dec
jnp
jg
fnstsw
mov
sbb
es
aad
icebp
and
jo
push
xchg
in
jbe
push
insb
test
xor
andb
stos
mov
cli
fsubl
mov
push
das
int
popa
clc
mov
mov
adc
leave
call
cmp
into
push
mov
cwtd
aam
and
jb
cmpsb
ljmp
loope
cli
push
xchg
leave
and
hlt
push
pop
insl
push
sub
outsl
pop
mov
mov
mov
inc
jo
aam
xor
frstor
mov
push
mov
push
outsb
jo
lret
cmpl
cmp
cli
int
push
sub
pop
jle
add
repnz
inc
rcrl
xor
sub
xchg
loope
sub
mov
incb
push
lds
sub
xchg
push
push
push
jae
dec
add
sbb
or
mov
out
add
jno
add
jbe
mov
int
in
sarb
pop
loope
scas
test
push
xor
test
int
inc
add
popf
and
mov
adc
pusha
orb
into
and
push
sbb
scas
push
lret
jmp
fwait
inc
cs
test
popf
ss
gs
mov
mov
mov
shrb
pop
push
inc
scas
fldcw
mov
aad
cld
xorps
mov
nop
xchg
dec
stos
cltd
addr16
add
orps
scas
xor
test
jmp
xorl
or
xlat
repnz
je
rolb
sarb
andb
mov
in
mov
add
pcmpgtw
jb
cli
cmp
dec
movsl
shlb
outsb
fistl
push
pushf
fsubrs
test
scas
in
cmp
mov
test
data16
fdivl
push
sub
mov
cmp
add
sub
jl
adc
dec
data16
mov
or
mov
pusha
call
inc
iret
mov
shlb
jp
lahf
jns
adc
lahf
in
jbe
fsts
sahf
cmp
stos
sub
outsl
adc
clc
adc
lds
push
jge
push
cmp
mov
jne
push
or
test
jmp
cmpsb
jl
pop
leave
add
xor
push
mov
mov
push
fstp
cld
xchg
xchg
inc
loope
sti
sbbl
dec
pop
fsub
in
popf
fidivrs
sbb
push
movsb
movsb
jne
dec
mov
push
and
mov
std
inc
xchg
xorl
sbb
mov
pop
fbstp
xor
jnp
push
push
mov
xchg
lcall
adcl
les
jle
fnstsw
cmpsb
jg
aam
lret
mov
lcall
jg
pop
pop
xchg
cmp
lret
push
push
pop
and
pusha
es
adc
cs
and
cmpsl
test
lret
cmp
test
inc
pop
out
loopne
inc
adc
lret
push
in
xchg
and
mov
mov
xor
cld
out
inc
jp
fdivr
sbb
stos
jecxz
lock
push
sub
and
icebp
or
fists
rolb
adc
lahf
inc
fistpl
cmc
dec
and
ret
insb
les
jmp
in
outsl
pop
lret
les
insb
cmp
sbb
mov
push
sub
lods
out
jl
jge
push
pushf
xor
in
lea
imul
fsubrs
cld
sub
push
popf
sbb
or
ds
xor
xor
push
sbb
dec
adc
loop
dec
data16
testb
push
jl
icebp
cmp
aaa
cmp
jecxz
jle
mov
bound
enter
push
movsl
mov
xor
or
cld
cmp
inc
arpl
icebp
mov
mov
addl
test
lret
inc
out
ret
stc
cmp
sbb
repz
shrl
subl
mov
or
ret
out
pop
mov
in
mov
scas
mov
dec
popf
adc
sti
push
pushf
imul
dec
out
push
enter
pop
dec
and
ret
into
or
add
inc
add
cwtl
mov
and
sahf
sbb
mov
push
sbb
inc
cmp
sahf
mov
jg
push
pop
jle
sbb
jo
fbstp
jl
xor
mov
test
lock
sbb
loopne
xchg
push
inc
imul
sub
fldenv
dec
sub
int
or
ret
add
leave
mov
std
dec
jecxz
mov
push
add
std
rorb
jne
dec
sbb
into
mov
cli
mov
outsb
es
mov
outsb
in
scas
sti
xor
pop
sbb
mov
sti
das
or
cmp
cmp
and
pushf
pop
lds
inc
inc
add
xlat
outsb
sbb
mov
sbb
add
cltd
mov
xchg
aas
insb
pavgb
cltd
stc
lods
sahf
js
out
subl
loop
xchg
lret
add
mov
rcrb
jmp
lock
insb
cmp
pop
cs
jnp
fst
push
arpl
pushf
jle
lea
jp
mov
pop
hlt
pop
sbb
sarl
int
ja
sbb
cmpsb
nop
fbld
ret
jno
sarb
sub
sbb
imul
fs
sub
push
leave
sbbb
loope
mov
shll
mov
and
data16
mov
adc
ret
or
aaa
mov
mov
adc
rorl
push
mov
repz
shll
imul
sub
cmpb
adc
cmp
mov
push
popf
jns
pop
xchg
or
or
cmp
into
mov
or
xorb
cwtl
sbb
cmpb
or
add
jb
sub
jp
sub
pop
gs
cld
mov
cmp
sub
mov
mov
mov
pop
cld
jp
clc
arpl
outsb
mov
xor
lret
int
fst
mov
mov
rorl
or
xor
sarb
jecxz
cmova
lret
les
xchg
jns
mov
outsl
pop
dec
push
scas
lds
pop
fdivrs
popf
in
in
add
cmp
add
push
imul
cmp
xchg
adc
mov
icebp
movsl
call
clc
loopne
jns
push
loop
setno
cltd
add
and
mov
mov
pop
adc
cli
cmp
mov
jl
lods
mov
inc
adc
les
add
rorl
push
sub
jp
pushf
out
lret
adc
jle
inc
pop
sbb
cli
xor
lahf
and
js
test
mov
popa
xchg
stos
adc
xor
fidivl
xchg
fldenv
insl
clc
iret
aas
mov
fldcw
lret
xchg
inc
xchg
xchg
hlt
dec
xor
xchg
cwtl
jmp
push
popf
xchg
cmp
sbb
mov
stc
sahf
flds
shl
pop
dec
mov
ss
sbb
jne
push
loope
mov
dec
jae
pop
or
fnsave
int
addb
mov
mov
mov
mov
mov
in
inc
std
pop
push
dec
jecxz
sub
lahf
fisubrl
jl
shlb
aaa
mov
sahf
scas
outsb
and
sbbb
sahf
cmpsl
and
adc
ljmp
mov
sahf
xor
cmp
fists
popa
xlat
jbe
inc
mov
fdivs
cmp
push
insb
daa
cmp
push
dec
mov
xchg
stc
pop
push
add
fsubrl
pusha
fldcw
push
push
cli
and
lock
dec
out
adc
and
xchg
mov
dec
sub
notl
leave
push
movl
movsl
roll
jns
lret
adc
out
add
inc
fmull
lock
popa
push
inc
outsl
sbb
aaa
adc
sbb
and
adc
outsb
clc
dec
and
popa
in
rol
cmp
pop
sti
or
cmp
addr16
or
push
orl
sbb
iret
adc
pop
pop
imul
mov
into
inc
jg
jnp
int
sbb
push
pop
scas
dec
jp
add
fstl
or
pop
movsl
test
adc
repnz
js
mov
jmp
add
mov
loope
cmp
sti
sbb
es
xor
arpl
sbb
push
andb
movsl
lods
sbb
sub
shr
in
cmpxchg
cmp
rcl
add
mov
stos
pushf
jno
out
test
pusha
push
mov
jno
adc
push
cltd
fwait
in
xlat
inc
mov
enter
mov
ret
or
jb
adc
xor
or
rorl
dec
aas
mov
aas
mov
jl
sbb
push
outsl
and
gs
mov
cmc
je
fwait
push
lret
pop
leave
dec
fwait
gs
push
cmp
cltd
mov
adc
lock
add
ljmp
stos
or
jle
xchg
jae
xor
lods
stc
mov
xchg
cmp
mov
sbb
cltd
adc
push
jge
pop
sbb
pop
in
in
inc
xchg
int
push
rorl
fcomi
cmp
mov
inc
cli
add
cmp
cmp
cmpsb
cltd
in
aas
xchg
cmp
xlat
lea
mov
lods
dec
mov
filds
test
cmpb
inc
adc
and
rcrb
loopne
push
mov
push
loope
or
jg
mov
cmp
imul
cmpsb
pop
and
mov
and
les
movsl
or
mov
clc
loopne
mov
mov
shrb
or
pop
sbb
pop
repz
push
jle
sbb
les
pop
add
pushf
adc
sti
xlat
icebp
and
in
aas
rcrb
ret
sub
rcrb
popa
push
enter
mov
ljmp
inc
mov
outsl
mov
outsl
xlat
xchg
mov
fdivrs
sahf
mov
sbb
lahf
push
les
xchg
push
pop
xlat
stos
xchg
lods
ljmp
sbb
dec
mov
pusha
sbb
adc
inc
lcall
insb
div
aad
lret
mov
in
pusha
mov
pop
imul
iret
pop
rclb
mov
gs
xor
cltd
negb
js
xor
popf
mov
nop
outsl
stos
addr16
dec
mov
or
and
insb
fdivs
in
hlt
negb
andl
jno
cmpsl
lret
or
cwtl
xor
cmpsb
divb
clc
stos
pop
or
push
adc
cmc
add
inc
mov
and
int3
pop
cmp
std
in
fldenv
pop
xchg
xlat
cli
imul
xor
mov
xchg
mov
mov
add
lahf
sbb
dec
pop
xchg
scas
test
add
fdivrl
mov
cmp
push
imul
xchg
mov
loop
jo
ret
repz
and
ljmp
adc
push
cmpsb
mov
mov
pop
fs
fisttpl
lock
add
jge
push
inc
addl
cltd
test
dec
test
std
cmpsb
dec
mov
sub
inc
dec
es
dec
push
jb
mov
fdivrs
out
cmp
ret
mov
cs
ljmp
mov
cmp
pop
iret
xchg
adc
bound
inc
idivb
sbb
jne
cmc
and
lcall
cmpsb
xor
jnp
test
push
jmp
add
cmp
or
sbb
les
jge
ds
inc
jg
sahf
inc
loope
repnz
nop
mov
dec
test
in
xchg
inc
shr
stos
call
call
pop
push
push
mov
dec
sbb
cmpsl
test
lea
jae
jns
adc
js
fidivs
jb
push
fists
movl
lock
pop
fsubs
inc
test
inc
cmpsb
enter
mov
testb
repz
data16
popl
adc
push
mov
aam
cli
sbb
ret
enter
sbb
jne
xchg
or
pop
rcll
push
lods
inc
loopne
icebp
sbb
je
out
aad
test
xchg
mov
cmpsb
mov
dec
xor
dec
and
cmpsb
nop
adc
scas
mov
mov
dec
test
push
mov
mov
pop
out
enter
pop
mov
push
sub
lcall
jp
push
push
or
mov
mov
push
pop
pop
inc
daa
cmc
jnp
testb
fdivrs
sar
sahf
xchg
stos
dec
lods
xchg
fnstsw
add
rclb
clc
movsl
add
int
cmp
jmp
or
lea
in
jp
leave
cmp
loope
inc
rcrb
aas
push
dec
mov
insl
stc
cmp
push
jl
lea
sub
push
mov
xchg
add
push
inc
or
out
xor
jle
fnstcw
pop
int3
scas
sub
int3
push
lods
add
xor
adc
mov
dec
xchg
call
addl
pusha
lahf
pop
mov
cmp
pushf
inc
sub
push
mov
mov
pop
adcl
and
inc
adc
xor
lds
fbld
mov
pop
mov
xor
lahf
push
in
call
es
push
push
mov
pop
mov
jo
lds
xchg
mov
cmc
xchg
aaa
arpl
rol
mov
popf
sub
add
es
pop
jecxz
in
dec
sbb
ljmp
jnp
adc
arpl
push
jne
jo
adc
sar
enter
js
mov
mov
mov
or
push
repnz
sbb
inc
jae
pop
repz
bnd
xor
cmp
pop
arpl
and
mov
outsb
mov
mov
addb
out
gs
cmpb
mov
inc
in
cmpsb
adc
sub
shrb
enter
sub
jae
daa
ja
jno
jo
mov
inc
sbb
mov
mov
in
xchg
stos
inc
sbb
mov
jns
push
mov
sbb
add
push
data16
sub
dec
outsl
testb
icebp
adc
or
mov
popa
inc
aaa
mov
sub
xchg
mov
js
mov
xor
ja
out
push
xchg
mov
mull
jecxz
aad
movsw
push
int3
frstor
jge
sbb
les
in
mov
mov
shl
adc
inc
lcall
inc
mov
popf
inc
popa
sub
call
jp
lea
or
xor
imul
test
push
xor
or
mov
jmp
lcall
clc
mov
adc
inc
lods
push
movsb
jnp
stc
mov
mov
mov
movsb
in
in
jne
dec
xchg
mov
movb
rorb
cmc
pop
pop
js
xchg
mov
fistpll
sbb
xor
mov
lea
sbb
int3
xchg
xchg
shl
xchg
inc
movsl
out
pop
mov
push
and
xlat
push
cli
add
mov
gs
mov
pop
negl
in
and
es
repnz
daa
dec
cli
sti
jl
or
sub
pusha
mov
mov
inc
data16
xor
adc
jo
imul
imul
xchg
enter
inc
mov
int
push
push
cmp
cs
push
scas
push
sti
loopne
dec
pop
out
fs
adc
cmp
or
xorl
ret
cld
sti
mov
mov
inc
push
pop
sub
fwait
int3
daa
add
call
sbb
pop
cmp
bsr
mov
dec
cld
adc
mov
add
rcr
int3
enter
ja
pusha
sbb
add
outsl
mov
popa
cli
dec
call
inc
scas
ficompl
jmp
mov
lods
mov
or
xor
dec
cmpsb
mov
test
in
mov
out
xchg
fldenv
sbb
xlat
loope
jmp
add
mov
or
cmp
mov
xor
mov
xchg
dec
fildl
mov
pop
lret
sbb
inc
ret
cmpsl
js
dec
jg
mov
xor
call
lds
push
stos
fsubs
inc
aam
in
repz
adc
pop
adc
adc
std
mov
sarb
cmpsb
sarl
hlt
add
jle
xlat
inc
jl
mov
and
hlt
test
out
cmpsb
pop
stos
fnstenv
sbb
scas
mov
hlt
push
push
sar
popaw
lcall
xlat
and
repnz
imul
fdivrp
push
xor
cld
iret
repnz
sti
idiv
xchg
add
mov
mov
push
xor
mov
mov
movsb
xor
jle
movl
cmp
addr16
leave
adc
mov
call
ds
das
jle
add
out
cmpsl
pusha
push
inc
mov
insb
rcrb
push
fsubp
lods
cmpb
xchg
movsl
adc
cmpsb
stos
popf
popf
cmp
xchg
push
mov
or
jge
aad
mov
rorl
jns
jecxz
mov
lds
lahf
out
pusha
stc
jnp
cmp
mov
fwait
into
mov
cmp
ret
or
lock
sub
popa
sarb
or
dec
fdivrl
mov
or
xchg
cmp
mov
xchg
ss
movsb
cmp
mov
dec
test
xor
call
rclb
sub
push
mov
sbb
es
xlat
add
scas
adc
xchg
sbb
cltd
stos
sbb
xchg
sub
push
mov
inc
iret
das
pusha
jmp
outsl
and
jecxz
mul
rorl
sub
add
pop
jno
ja
add
jp
decl
movsb
inc
mov
lahf
js
sbb
arpl
add
addr16
jae
sbb
test
inc
mov
enter
lcall
pop
shrl
inc
pushf
lock
push
mov
jle
inc
and
xchg
outsl
push
rorl
cs
pop
imull
gs
ss
pop
xchg
adc
xor
sbb
bound
mov
dec
mull
faddl
hlt
andb
mov
lock
sub
push
lcall
xchg
bound
add
mov
sub
out
mov
lret
idivl
shll
push
jmp
cmp
lcall
mov
push
mov
jno
les
outsb
mov
mov
dec
mov
dec
popf
cli
ret
pop
fcmovne
mov
pop
inc
mov
popa
pusha
loop
xlat
and
mov
popa
sahf
insl
pushl
test
jnp
jnp
rdmsr
fwait
arpl
cmpsb
push
into
cmp
sbb
mov
inc
and
mov
adc
push
mov
cmp
sub
imulb
lahf
das
push
ficoml
dec
filds
rolb
mov
pop
jae
pop
in
leave
cld
ja
adc
jmp
divb
clc
add
push
fnstcw
pop
leave
nop
popf
adc
adc
or
or
test
dec
cmpsl
xchg
pop
imul
loope
incl
push
xor
sbb
push
xor
cli
mov
shlb
js
cld
repz
inc
int3
pop
stc
xchg
scas
test
je
hlt
and
dec
fstpl
add
sbb
in
stos
inc
and
rclb
or
adc
jns
push
mov
sbb
pop
cltd
sahf
out
pop
xor
popa
dec
stos
and
add
dec
fidivrl
jno
mov
lcall
sbb
daa
mov
mov
test
pop
jne
xchg
pop
mov
xor
mov
icebp
xor
cld
rcrl
push
pop
jno
bound
mov
push
stos
pop
call
nopl
test
push
xor
sub
dec
or
std
sbb
mov
dec
xor
jp
out
pop
repz
outsl
rorl
adc
out
lret
pop
icebp
scas
enter
push
fidivrs
out
mov
lret
and
jg
lock
js
pop
out
sbb
sbb
dec
out
dec
ret
push
xor
lcall
mov
dec
xor
notl
and
fcmovne
pop
adc
jmp
rorb
cld
dec
mov
xor
dec
jl
mov
mov
faddl
add
out
sbb
lcall
scas
shll
xchg
dec
pop
and
xchg
mov
adc
and
dec
fldenv
js
std
mov
jb
inc
addr16
rcrb
or
imul
cmc
nop
mov
sarb
ss
sub
lods
mov
imul
dec
idiv
cmp
test
int3
mov
mov
pop
cmp
and
daa
mov
jns
nop
xchg
ds
adc
cld
fsubrs
jg
loopne
sub
addr16
icebp
pop
iret
shll
lret
inc
cmp
outsl
loope
and
jle
pop
aad
fwait
sbb
cwtl
pop
add
and
ss
ja
mov
fcompl
out
aas
ljmp
lds
fldlg2
sub
jl
dec
fisttpll
pand
addr16
push
add
mov
mov
pop
ret
in
jg
imul
int3
sti
push
mov
xlat
pop
mov
fdivp
xlat
sub
aad
std
xor
and
jno
cmpsb
jno
imul
mov
inc
fwait
dec
xor
andl
pop
mov
into
xchg
xchg
loop
cmp
mov
lods
jmp
fsts
aas
pusha
es
mov
mov
ja
push
add
in
xchg
lahf
rorl
pop
aaa
xlat
inc
and
lret
stc
xorl
or
mov
shl
jno
fcompl
mov
out
ret
add
pop
sahf
clc
mov
out
add
pop
mov
pop
pop
fwait
mov
test
mov
mov
mov
pop
std
fcom
cltd
xchg
mov
mov
mov
push
push
inc
fwait
scas
mov
xchg
mov
aad
mov
dec
or
push
or
xor
mov
shll
lods
xor
jne
mov
pop
jle
add
fdivl
rclb
lahf
or
popa
sbb
xchg
orps
push
ljmp
cmpsb
jp
test
mov
push
gs
jns
jg
dec
mov
pop
push
push
push
cmpb
iret
jmp
cmpsb
ja
sub
leave
popf
xlat
and
cmp
rorl
xor
scas
mov
add
mov
gs
cmp
adc
add
enter
mov
and
sub
loope
nop
mov
data16
mov
mov
push
push
mov
adc
jecxz
adc
pop
mov
cmpsl
jb
adc
outsb
call
movsb
lds
pop
dec
pushl
in
loop
mov
aad
ret
ret
sub
cmp
add
jmp
push
jb
add
sbb
ljmp
loop
ljmp
js
add
cli
xchg
repnz
mov
jbe
lock
sbb
setae
mov
push
jecxz
mov
in
mov
push
out
inc
imull
xor
outsl
ss
pop
mov
mull
mov
xlat
in
ds
int3
imul
ss
sahf
aas
or
in
vpperm
adcb
mov
jno
shr
xor
lret
xchg
dec
dec
fisubrs
cmpsl
repz
jp
pop
ret
inc
inc
shr
jg
stos
xor
push
lods
inc
fisttpll
mov
lea
pop
or
sub
outsl
xchg
scas
xchg
roll
cli
jb
pop
icebp
orb
xchg
into
test
push
or
sub
mov
jae
lret
gs
jp
jle
xor
mulb
jno
mov
call
cmp
and
adc
int
push
and
rol
cwtl
add
xchg
outsl
jns
aam
push
pop
int3
cld
and
fmuls
jp
popf
jle
push
sub
call
mov
add
inc
adc
push
adc
int
mov
shl
push
jne
mov
sti
dec
push
jb
shrb
and
cmc
cltd
hlt
jp
cmp
sbb
mov
sub
push
je
sbb
out
cld
pop
ret
loop
dec
inc
lret
lds
fisubrl
add
jae
lcall
aam
fisttpl
push
jae
mov
int
push
aas
jg
xor
mov
xor
xlat
jle
cmp
xchg
cmpsl
ficoml
sbb
movsl
cmp
push
jg
xor
mov
mov
test
cmc
xor
lock
dec
sar
cmp
push
enter
cmpl
cwtl
mov
push
xor
sbb
scas
stos
rorb
cmp
mov
cmc
push
push
lds
movsl
cmp
gs
out
sbb
outsl
mov
out
sbbl
jne
js
add
or
cmpsl
pop
xchg
mov
aad
push
xor
push
inc
out
mov
push
xor
and
in
lret
adc
mov
scas
bound
aas
insl
lods
push
and
pop
fs
fcmovu
mov
fwait
repz
or
mov
ja
add
mov
movsb
sbb
mov
imul
fdivrs
loop
xchg
xchg
inc
add
ficoms
mov
mov
add
lret
int3
imul
xchg
push
icebp
cmpsb
fildll
fldt
movl
fldenv
and
inc
jne
dec
pop
cmp
xor
xchg
clc
lods
push
dec
ds
and
popf
mov
nop
insb
jl
lret
sbb
and
popa
fnstenv
ds
scas
push
push
or
ret
mov
mov
cwtl
dec
lret
rorb
insb
and
mov
loopne
cmpsb
shll
inc
arpl
xchg
test
mov
push
pop
mov
aaa
jbe
add
cmp
sbb
outsl
addb
dec
xor
les
js
inc
xlat
lock
leave
inc
das
fisubl
imulb
loop
dec
out
dec
outsb
hlt
adc
push
push
and
rorb
push
jmp
test
mov
mov
dec
cmp
cwtl
or
scas
cmp
add
shl
sahf
fcmovnb
sti
and
push
cli
adcl
rorb
loopne
mov
ja
rolb
icebp
sbbb
nop
in
mov
out
icebp
lods
xchg
scas
xor
inc
test
mov
ljmp
ds
cmp
xor
sahf
push
jae
adc
lea
xabort
push
cli
inc
cmp
mov
fcoms
inc
sbb
cmp
mov
icebp
pop
nop
test
mov
xchg
mov
pop
loope
lcall
aaa
jo
jnp
add
pop
sub
aad
dec
and
jns
pop
mov
mov
mov
mov
nop
dec
jl
fbstp
test
fstps
out
test
push
and
xchg
insl
fcomps
mov
das
xchg
push
neg
test
clc
cmpsb
inc
mov
add
pop
jo
fstpl
adc
cmp
jl
pop
mov
dec
cmpb
into
cs
imul
mov
testl
js
inc
lcall
movsl
iret
data16
inc
decl
out
mov
icebp
xchg
fcomps
xchg
mov
dec
or
lret
mov
scas
sbb
bswap
shl
or
fstpt
out
xchg
neg
pop
xchg
xor
cmp
loope
ds
inc
mov
gs
stc
mov
sub
dec
dec
push
cmp
xchg
push
or
gs
clc
xchg
mov
dec
pop
mov
xchg
rolb
jnp
xchg
add
xlat
inc
push
cmp
sarb
out
add
sbb
push
shll
mov
mov
pop
repnz
scas
jnp
mov
xchg
xchg
shll
ret
cli
inc
cmp
and
fmuls
mov
mov
cld
inc
daa
adc
inc
out
and
xchg
aas
out
sbbb
leave
insb
push
xchg
roll
dec
inc
nop
ja
mov
ret
mov
and
sti
dec
pop
ja
stc
dec
repnz
push
xor
adc
stos
mul
test
cmpsl
jecxz
mov
sahf
push
jge
daa
pop
sbbl
mov
imul
lahf
mov
stc
std
or
and
pop
rol
dec
nop
fdivrl
out
sbb
xor
cli
xor
aad
or
cmp
data16
repz
bnd
mov
into
dec
and
imul
adc
mov
shrl
mov
int3
mov
xchg
xor
push
push
imul
into
mov
add
jle
jle
test
or
out
xchg
nop
mov
lahf
inc
cmp
cmp
xlat
cltd
lret
sub
xor
dec
fwait
xchg
jl
xor
mov
add
fsubr
out
xor
mov
mov
mov
out
push
jae
imul
adc
daa
cli
xlat
jb
adc
mov
xlat
stos
cwtl
pop
sbb
cmc
lahf
aam
or
sti
fwait
iret
push
mov
cmpsb
testl
negl
jmp
mov
cltd
push
dec
repnz
sbb
adc
or
jg
dec
jb
mov
mull
nop
ss
data16
fwait
pop
pop
arpl
not
repz
jne
arpl
sbb
out
and
into
pusha
mov
sub
adc
jae
cmp
adc
or
lea
jno
mov
popa
lods
xor
mov
mov
iret
int
mov
sub
stos
xor
cmpsb
mov
adc
mov
add
mov
inc
inc
js
push
or
pusha
aam
cmp
xchg
bound
jns
lret
or
cmp
sbb
addr16
ficoml
dec
xor
adc
xor
cmpsl
gs
jo
mov
adc
sahf
dec
adc
aas
sbb
push
cmc
and
cmp
fistpl
push
dec
insb
or
xchg
cld
or
sarb
imulb
pop
clc
cld
js
pop
popa
sarl
cmpsb
aas
into
add
ljmp
cwtl
inc
sbb
popf
das
add
push
mov
pop
mov
sbb
scas
call
vmovlps
jp
call
pop
and
cmp
dec
enter
lret
push
push
cmp
add
inc
add
es
cmp
xor
popf
push
cmc
or
lret
bound
ret
jl
repnz
push
test
xchg
int
test
in
add
cmc
cmp
xor
fadds
clc
and
dec
cmp
push
mov
pop
fdivp
add
adc
daa
ds
insb
mov
js
aam
divl
insb
dec
adc
into
xchg
cmp
ljmp
xchg
icebp
and
inc
imul
movsl
cwtl
push
pop
add
push
mov
mov
sub
add
sub
mov
xor
mul
pop
pop
dec
sarl
push
shll
mov
out
push
nop
insl
push
xor
pusha
cmpsb
lods
cmp
sbb
mov
imul
dec
mov
mov
fcoms
rcrl
imul
jo
popf
jl
inc
mov
mov
xor
sub
add
jp
xlat
stos
cmpsb
or
or
popa
iret
rcrb
in
jbe
adc
fistps
push
mov
xchg
dec
cmp
and
jo
gs
jne
jae
out
notl
lret
movsb
inc
mov
dec
mov
scas
pop
and
daa
movsl
jne
cmc
dec
mov
pusha
cli
cs
adc
xchg
clc
jmp
mov
jbe
les
fbstp
pop
fbld
push
aad
scas
mov
aad
jae
dec
cmp
and
int3
add
push
fwait
aam
out
loope
call
adc
mov
mov
xchg
shld
pop
add
icebp
arpl
sti
mov
hlt
cmp
fs
bound
xor
out
popf
int
test
xchg
scas
fldenv
andb
mov
filds
shrb
jbe
push
ficomps
or
pop
inc
jmp
stos
outsb
inc
dec
mov
jb
add
or
sbb
mov
pop
or
xor
lods
or
stos
mov
cld
es
sbb
sub
mov
insl
pop
subl
dec
jo
adc
sbb
pop
push
sbb
jbe
outsb
push
loope
push
mov
clc
mov
xchg
jp
or
mov
shll
js
xchg
pushf
cwtl
and
lds
icebp
into
adc
mov
xor
and
out
add
jge
inc
sub
sahf
shlb
jne
mov
cmp
in
in
bnd
sahf
and
loop
adc
jno
lahf
dec
enter
push
dec
nop
addr16
in
lcall
sub
sub
pusha
js
pop
push
jg
push
es
movsl
push
fistl
out
xchg
mov
int
icebp
jmp
mov
arpl
xchg
push
inc
xchg
jp
loope
or
dec
aam
sbb
or
negb
adc
inc
popf
aam
movaps
push
cld
jno
popf
and
mov
pop
ret
out
and
pop
outsl
test
mov
daa
mov
jg
cmpsb
push
pop
nop
fisubrl
xchg
fidivrl
and
cmp
add
movsb
cwtl
lret
mov
sbb
or
adc
sub
xor
call
push
ss
dec
dec
push
push
and
insl
sub
in
and
dec
sub
stos
and
xor
sarb
dec
dec
mov
mov
test
fcomip
cmp
sub
loope
out
and
call
mov
mov
enter
and
popf
lret
pop
adc
sbb
int
out
daa
subb
jmp
push
dec
dec
ret
testl
pop
add
pop
push
iret
adc
sarb
mov
aas
dec
push
lret
lock
aam
xchg
cli
push
xor
jne
adc
dec
std
push
int
sbb
push
out
mov
insl
pop
enter
dec
rcrb
fisubrs
lock
mov
jae
mov
sbb
rcl
bnd
inc
add
sahf
iret
not
dec
add
sub
push
xor
mov
sub
scas
rorb
cld
leave
int3
pop
ljmp
mov
inc
sarl
out
fidivrl
cwtl
insb
scas
jns
ret
add
lahf
xor
and
sub
addr16
insl
inc
fdivrs
add
sub
loopne
jae
jbe
movsl
jae
incl
lods
or
cs
int3
data16
movsb
inc
cli
aad
loopne
stos
fistps
icebp
cmp
and
rolb
cli
pop
sbb
fcmovne
gs
aas
notl
scas
xorl
add
call
in
jg
push
les
or
mov
xor
jae
js
jnp
addr16
adc
int
push
jmp
cmc
adc
xchg
xor
dec
test
imul
or
sti
call
xor
or
mov
push
ficomps
mov
ret
aam
cmp
in
pop
xchg
sub
cltd
jmp
mov
jmp
pop
nop
scas
fsubr
pop
out
repnz
cwtl
mov
icebp
mov
data16
in
ret
bnd
or
pop
mov
or
scas
push
mov
mov
aaa
addr16
or
pop
jecxz
loopne
inc
sbb
test
mov
jb
pop
pop
aas
notb
or
iret
std
ficomps
jns
jno
mov
push
mov
adc
fwait
add
xor
mov
inc
sub
sbb
out
xor
rcl
push
pop
fisubl
pop
mov
xchg
push
call
lods
test
dec
sbb
pop
or
sub
faddl
arpl
lods
push
inc
testl
sub
gs
mov
insl
mov
adc
push
in
movsb
add
stos
fcmove
int
inc
mov
jle
cmp
hlt
adc
push
lcall
inc
and
mov
sbb
jmp
insl
pop
mov
mov
mov
cmp
or
push
pop
mov
cmpsb
aas
jp
stos
mov
aam
jecxz
aas
add
outsl
aaa
pop
mov
inc
in
test
shlb
fwait
popa
adc
int3
into
mov
xorb
and
ret
mov
adc
mov
andl
adc
xchg
addr16
aas
pop
sbb
inc
cmp
push
nop
lahf
xor
mov
mov
mov
mov
and
xchg
scas
pop
or
sbb
pushf
gs
inc
stos
fs
ja
xchg
stos
add
pop
xchg
aad
mov
push
leave
push
lea
into
mov
roll
outsb
sti
inc
pop
ss
fisubrl
mov
mov
lds
add
xlat
mov
push
adc
dec
push
sbb
xor
and
rol
in
fstpl
xchg
loope
outsl
aaa
mov
mov
cmpsl
loope
xorl
xlat
das
cwtl
xchg
inc
lret
jmp
jbe
pop
mov
mov
gs
popl
lods
mov
dec
ret
mov
icebp
pop
fs
mov
mov
fisubs
sahf
loop
sub
lret
les
call
and
add
jecxz
in
sti
mov
xor
push
push
stc
lcall
ja
stos
xor
mov
popa
pop
xchg
jae
cld
outsl
inc
xchg
mov
ljmp
dec
sub
adc
clc
inc
xlat
test
push
inc
aam
inc
adc
mov
cmpl
jmp
rcrb
sub
cmp
and
loop
mov
daa
cmpsl
inc
jo
add
insb
imul
outsl
repnz
and
xchg
mov
pop
or
jnp
and
add
iret
pop
jbe
xor
in
mov
es
push
inc
cmp
or
pop
mov
notb
mov
std
rorb
add
cmp
sar
push
jp
xchg
mov
cmpsb
scas
jl
dec
mov
repz
push
fistpll
xor
std
insb
cmpsb
clc
add
insb
in
push
insb
in
mov
sbbl
pop
shll
jae
js
jmp
push
leave
je
movsb
rcl
xor
test
dec
push
mov
lahf
out
push
into
lock
lods
nop
and
fbld
dec
rolb
jns
ja
clc
push
jp
pop
aam
out
push
mov
jne
push
out
and
pusha
xchg
jnp
xor
cmp
subl
arpl
imul
js
rorb
loope
add
add
cmp
pop
sahf
sub
and
mov
dec
adc
popf
dec
inc
xchg
in
int3
xor
adc
pushf
lcall
cmp
std
imul
inc
xchg
sbb
push
push
outsl
push
xchg
fdivrp
push
fiadds
ljmp
adc
pusha
push
outsb
push
sti
and
addr16
popa
xchg
fimuls
cmc
jnp
icebp
jg
rcll
jge
inc
mov
xor
mov
daa
or
shl
fucomp
movsb
sbb
add
vmovq
or
pop
sbb
jp
into
mov
js
mov
inc
sub
cld
sub
imul
sub
mov
stos
jnp
pop
push
lcall
test
insb
xor
nop
xchg
in
mov
xchg
lcall
sbb
shl
or
or
and
icebp
pop
jecxz
scas
sti
add
cmpsl
mov
inc
dec
add
icebp
push
xchg
fdivl
popa
or
fdivs
jne
test
mov
andb
loope
das
add
das
xor
iret
mov
mov
mov
outsb
jo
pop
dec
pushf
xchg
aam
into
aam
push
test
int
cltd
scas
aaa
in
jmp
icebp
mov
divl
cmp
cltd
jg
ljmp
add
dec
dec
cwtl
mov
jecxz
ret
ret
xchg
daa
fcompl
cwtl
add
inc
cs
pop
cmc
xchg
test
adc
mov
cwtl
loopne
push
les
test
sub
aaa
mov
adc
sbb
sbb
cwtl
sub
mov
lret
inc
push
xor
jl
mov
repnz
in
stos
sbb
rcrb
lret
mov
sbb
insb
adc
ljmp
mov
sbb
loope
cmp
arpl
gs
int3
xchg
ljmp
rcr
aam
sbb
or
pop
mov
add
push
and
fcmovnbe
jns
js
or
xor
in
cmp
xor
test
loop
jnp
aas
jmp
xchg
out
xchg
cli
clc
add
aas
push
or
ja
push
push
adc
jbe
add
out
push
xchg
loop
add
mov
push
icebp
in
stc
jle
test
dec
and
and
fs
movsl
test
cmpsl
xchg
pushf
mov
repnz
mov
or
pop
bound
mov
insl
sub
movsl
vaddss
clc
adc
jp
and
loopne
adc
pop
xor
add
pop
lods
es
das
cmpsb
jle
xchg
fsubs
xor
mov
cli
mov
sbb
cwtl
fiaddl
cwtl
inc
dec
or
test
loope
push
mov
or
dec
and
and
andb
mov
push
pop
movsl
fs
mov
sub
xor
lods
addr16
lock
jb
testb
idiv
inc
sbb
cmpsb
test
movsl
mov
push
cs
cmc
cmpb
dec
mov
push
sti
js
in
je
jecxz
add
cmc
lret
shlb
pop
mov
stc
xlat
aad
or
dec
loop
test
and
out
pop
movsb
push
mov
push
mov
xlat
test
push
mov
pop
sbb
test
dec
push
cmp
aam
xor
adc
push
ret
lcall
jl
push
insl
and
andb
roll
call
movsl
pop
adc
push
xchg
push
movsl
sbb
cld
insb
in
int
icebp
cmp
ret
movsl
test
sbb
sbb
test
push
shll
mov
pushf
cmpsb
arpl
inc
mov
adc
ljmp
mov
lock
test
pop
jb
in
repz
push
jns
sbb
cli
cltd
add
sbb
push
cmp
cld
push
addb
lock
mov
jg
sub
pop
ds
test
lcall
jecxz
dec
imul
and
lret
fs
je
icebp
stos
jl
movsb
sub
popa
gs
cmpsb
ja
pop
insl
daa
nop
shr
fldl
test
test
stos
push
addr16
test
pop
cmpsb
mov
mov
xchg
pop
inc
shll
and
xor
xor
mov
ja
push
xor
rcrl
rep
or
or
int3
or
mov
sub
inc
sti
stos
inc
icebp
push
push
int3
adc
mov
pop
test
push
dec
movsl
call
cmp
daa
jae
and
fidivrl
adc
push
enter
jmp
popf
out
add
mov
pop
push
jle
scas
jge
and
dec
add
dec
mov
fildl
sub
sbb
jecxz
or
mov
fs
xor
lahf
or
cmp
mov
jle
push
in
js
leave
jmp
xor
pop
xchg
mov
lahf
es
xchg
adc
fsubrs
mov
je
fistl
movsb
lods
mov
dec
push
push
je
xchg
pop
xchg
je
addb
push
adc
jne
imul
in
iret
mov
aad
int3
xorb
sbb
mov
or
cs
or
inc
dec
pop
sub
xor
adc
cld
sub
jle
inc
imul
mov
push
fisttps
pop
leave
xchg
pusha
mov
mulb
das
inc
mov
add
insl
jmp
call
sbb
packuswb
dec
das
ret
or
and
adc
into
aas
imul
gs
lret
int3
mov
fs
and
pop
or
push
int3
iret
into
mov
mov
pop
and
test
pop
sti
pushf
xor
pop
cmpsl
jne
cwtl
dec
adc
aad
fdiv
movsb
repz
repz
stc
cli
cld
loop
jb
dec
jg
mov
push
adc
out
jo
lahf
cmc
or
popa
daa
jle
out
stc
pop
into
int
sti
mov
icebp
and
lds
sub
xor
fistps
xchg
cmp
leave
push
js
lock
js
fprem1
arpl
rcrl
test
sbb
mov
push
loope
adc
dec
lret
pop
mov
mov
mov
mov
cmp
and
xorl
mov
icebp
cmp
stos
loop
fdivrl
inc
push
aad
mov
ja
adc
aas
add
out
pop
in
jge
xchg
movsl
clc
push
leave
dec
jmp
jno
imul
push
adc
cs
fs
cli
fstp
lret
sarb
loope
and
pop
lds
sbb
inc
lret
sub
nop
mov
fwait
and
fimuls
mov
repnz
outsb
insl
sbb
mov
out
mov
lcall
fdivp
popf
inc
jne
mov
mov
lds
xor
or
xor
cld
xorl
rep
cwtl
nop
int
rorl
pop
jle
shlb
stc
mov
mov
jo
mov
and
subl
dec
mov
sub
daa
xchg
scas
xchg
cmp
push
mov
cmpl
aas
ret
pop
iret
or
in
xchg
mov
pop
mov
fcompl
cmp
test
cld
xor
add
out
iret
pop
and
pop
cwtl
std
fists
and
jb
jb
xor
lcall
and
movsb
jno
stos
push
adcb
jmp
fcompl
xchg
arpl
sbb
lods
cmp
jno
push
fidivl
inc
xchg
out
insb
fs
sbb
scas
loop
mov
call
mov
cmpsl
lds
pop
fs
stc
psrld
es
push
sub
imul
and
loop
sbb
jp
jg
jne
daa
stos
push
icebp
rclb
or
jb
mov
or
cmp
mov
out
lahf
xor
ret
aad
pop
push
mov
xchg
dec
jo
call
add
cs
idivb
js
shrl
mov
fimuls
shrb
or
mov
mov
cltd
mov
lods
mov
insl
mov
pop
cmp
sub
mov
dec
movsb
lods
movsb
mov
pop
push
stos
inc
ficoms
aaa
mov
or
pop
adc
outsb
pop
inc
pop
cmp
mov
add
push
subl
sub
popf
daa
movsl
add
pop
mov
or
insl
jno
mov
or
or
mov
or
push
xor
lods
jmp
xchg
cmp
mov
insb
shl
test
sub
add
loope
mov
add
and
or
rcrb
fsubrs
pop
mov
jo
pop
jmp
movsb
jl
lea
sub
pop
popa
and
cltd
sub
pop
sub
flds
pop
dec
out
pop
or
xor
in
pop
inc
xor
xor
mov
xor
das
sub
push
dec
cmp
cmp
push
loope
rolb
jno
rolb
jns
or
jns
mov
xchg
cmp
pop
mov
or
xchg
push
mov
mov
xor
lret
sahf
movsb
pop
jl
push
shll
in
add
outsl
mov
sbb
add
mov
push
xchg
sbb
mov
adc
out
loopne
ret
shr
jne
mov
call
add
push
xor
add
sub
test
jns
or
pop
ret
pop
jp
mov
movsb
fidivrl
lahf
cmp
xor
mov
orb
out
mov
mov
outsl
inc
and
movl
xchg
pop
call
cmc
jo
in
fcomps
lods
or
ds
testb
adc
dec
pusha
push
and
sub
xlat
outsl
aaa
add
dec
sbb
aam
inc
xchg
fsts
mov
aas
add
mov
push
pop
mov
xchg
xchg
mov
jle
lods
jnp
sub
inc
in
pop
bound
and
jns
dec
mov
je
sarb
arpl
rcr
sub
jmp
out
cmp
test
pop
mov
xchg
adc
adc
mov
pop
xchg
mov
je
xchg
xchg
xchg
jmp
ret
jl
and
mov
xchg
xchg
or
sub
push
xor
fwait
sahf
push
sbb
outsb
das
sbb
into
insl
push
adc
add
shrl
int
dec
sbb
pop
xchg
mov
xchg
add
dec
xchg
add
mov
inc
mov
inc
cwtl
mov
jmp
jno
sub
stc
cli
lahf
test
or
sbb
fdivl
pop
adc
mov
xor
xor
cmp
lcall
push
mov
in
fidivs
or
movsb
cmpsb
cmp
fcmove
int
daa
sbb
sar
jns
test
adc
daa
mov
cmpsl
fsts
cltd
dec
and
sub
aas
das
hlt
sbb
or
jle
push
or
in
mov
das
addr16
push
ret
mov
idivl
mov
xchg
inc
fs
int
jp
ja
ret
jmp
sub
sti
and
inc
cwtl
mov
repz
pushf
popa
adc
push
shlb
sub
or
cli
mov
cmp
outsl
int
xchg
lods
mov
pop
in
int
or
or
jne
or
andb
push
or
cmp
ja
inc
mov
xor
push
out
test
jb
xor
insb
fbstp
imul
in
fiadds
in
rolb
mov
xchg
aad
xchg
sbb
testb
iret
mov
into
aas
mov
push
lret
dec
bound
jb
jecxz
rcr
mov
scas
cmpsl
scas
dec
fs
or
or
rcll
mov
iret
mov
rcrl
xor
xchg
xor
test
xor
sbbb
inc
dec
cmpsl
adc
ljmp
mov
lods
ret
dec
mov
mov
rclb
hlt
xchg
addb
gs
and
adc
pushf
imul
iret
adc
mov
mov
popa
insb
clc
push
nop
ljmp
mov
jnp
or
js
lahf
cld
push
jbe
xorb
dec
mov
cltd
scas
inc
adc
rolb
sbb
or
jl
out
add
rorl
mov
and
or
cmp
pop
lea
lret
jae
call
cmp
iret
mov
mov
cltd
push
or
les
das
faddl
mov
jg
in
or
add
cmp
in
mov
pop
scas
leave
sbbb
loop
mov
out
dec
sub
aas
popf
dec
mov
and
andb
decl
sbb
fstl
xor
cmp
hlt
and
mov
lods
pop
lds
lret
ret
cmpl
fsubrl
jo
fsts
push
cmpsb
scas
xchg
jo
sbb
pop
mov
adc
inc
adc
bound
enter
inc
and
jecxz
xchg
inc
lea
call
jecxz
mov
inc
clc
ds
into
fildll
lcall
outsb
xchg
test
or
mov
mov
push
sub
repnz
ja
addr16
push
clc
dec
orb
adc
ret
out
lahf
outsb
and
inc
mov
rcrl
mov
fstpl
test
dec
lock
insl
push
or
sub
icebp
push
ja
push
rorl
shlb
mov
mov
dec
hlt
aas
movsl
and
or
push
mov
popa
adc
lods
rorl
inc
adc
jg
leave
sub
leave
push
data16
imul
push
or
aaa
push
cmpsl
and
or
rclb
cltd
repnz
push
push
addr16
outsb
push
aas
pop
adc
loope
mov
jne
imul
lret
dec
jnp
mov
add
and
test
dec
fisttps
and
stc
in
inc
call
xchg
inc
aad
sub
jle
daa
xchg
roll
movsl
dec
sbb
addr16
inc
or
fwait
jecxz
or
bound
push
mov
lret
add
push
xor
movsl
iret
insl
xor
pop
rorl
pushf
enter
cmpsl
sahf
fstpt
adc
pop
mov
aas
cli
lods
xchg
sbb
cmp
jl
xchg
xchg
js
add
add
add
iret
jns
orb
xchg
psraw
out
loopne
mov
loope
xor
and
add
sarl
mov
xor
xchg
cmpsl
aam
push
loopne
jmp
lods
testb
dec
hlt
mov
test
pop
repz
jg
ljmp
ror
les
mov
sti
sahf
out
roll
outsl
mov
xor
xchg
data16
adc
mov
je
das
jae
mov
lea
movsb
xor
pop
mov
ljmp
sbb
lds
jle
mov
mov
mov
and
bound
outsb
das
fwait
or
jp
out
jae
sub
lock
mov
lock
add
pop
or
sbb
test
push
insl
dec
mov
pushl
lods
loope
jns
mov
aam
push
fwait
idivb
stc
and
arpl
sub
and
add
aad
cld
popa
seta
or
rep
dec
jbe
rol
or
subb
dec
sub
push
mov
mov
shll
mov
repz
xchg
fsts
sub
nop
xchg
sbb
sti
fldl
mov
je
imul
shll
xchg
add
fwait
xor
jne
xor
repnz
stc
mov
mov
out
mov
inc
fistpll
adc
xor
adc
push
pop
fsubl
sbb
test
mov
mov
lret
push
mov
mov
jae
into
idivb
cmp
lahf
add
int
jge
cld
or
jmp
lds
pop
xchg
das
and
jo
cmp
dec
hlt
sub
out
scas
bound
adc
je
sbb
stos
btl
aad
popa
scas
lret
cmp
lret
xchg
shl
jb
push
lods
pop
popf
mov
mov
sbb
pop
test
lcall
fldenv
xor
xchg
hlt
pop
mov
dec
cmp
xchg
cli
dec
jmp
loop
repnz
gs
repnz
outsb
js
inc
xor
push
gs
loopne
xor
es
add
addr16
nop
push
push
push
insb
idiv
sbb
pusha
mov
mov
cltd
into
jae
xchg
inc
in
ret
or
sti
xor
dec
iret
add
cs
sti
mov
inc
push
fildll
jle
pusha
mov
push
and
lea
hlt
push
fs
sbb
movsl
cld
ja
clc
xchg
dec
mov
clc
lea
push
jne
aas
cmp
lcall
jmp
loop
into
punpckldq
or
jo
test
js
pop
orb
ds
mov
pop
out
add
movsb
pusha
xchg
jp
and
jns
push
cmp
decl
pop
inc
aaa
pop
arpl
test
dec
lods
fsubrs
xor
mov
sbb
movsb
test
adc
mull
jno
jp
sbb
lcall
cmc
repnz
out
stos
shr
jp
inc
pop
mov
add
cmp
sub
jecxz
addr16
ret
pop
lods
inc
shlb
and
jns
imul
inc
lahf
jnp
cmp
das
rcrl
or
pop
int
cmpsb
push
inc
jnp
lds
cmc
or
sbb
mov
add
repz
pop
shl
sbb
pop
xor
test
insb
stc
ja
pushf
cmpsb
dec
push
xlat
pusha
pushf
push
addr16
pusha
dec
sub
insb
push
mov
sahf
mov
xchg
jle
dec
sub
xor
pop
enter
addr16
stos
sarb
mov
cmpsl
sbbb
push
hlt
dec
cli
pop
test
jmp
scas
out
mov
adc
leave
adc
andb
xlat
pop
pushf
addb
fs
rcr
fs
xor
aad
ret
xor
cwtl
dec
roll
jecxz
in
push
sbb
fisubl
xor
movsl
push
mov
addr16
lret
pop
call
and
dec
cmp
sbbb
jnp
pushf
push
negl
clc
mov
mov
repz
lea
xor
je
in
fs
outsb
aam
push
mov
adc
and
ljmp
or
xlat
pop
bound
xchg
jns
cmpsb
add
inc
orb
or
xor
add
or
adc
popf
fwait
inc
or
arpl
dec
dec
call
mov
leave
push
lret
lret
sbb
repz
xchg
mov
push
xchg
sub
mov
jne
push
inc
call
hlt
push
push
mov
mov
or
popf
pop
jnp
js
xorb
movsl
out
sahf
jp
push
imulb
adc
pop
mov
pop
fsubrl
sub
and
cli
mov
xchg
shr
add
mov
cltd
sti
cmp
push
mov
add
or
sub
mov
push
jle
pop
leave
or
mov
xchg
mov
sub
adc
outsl
enter
pop
pop
test
push
jecxz
in
aam
add
inc
fldenv
inc
les
xorb
mov
or
subl
pop
cmpsl
scas
jmp
dec
out
sbb
push
clc
pop
mov
xor
push
lds
pop
stc
mov
dec
movsl
cwtl
ror
daa
mov
out
jg
aas
push
inc
cmp
sbb
sahf
sub
mov
inc
stos
mov
leave
fs
pop
and
dec
push
push
adc
loopne
pop
in
lahf
scas
enter
and
sub
push
aad
mov
cmp
push
fnstsw
inc
and
imul
sub
push
adc
dec
je,pt
lock
lcall
push
cwtl
add
xlat
push
dec
je
mov
ret
add
lods
pop
or
adc
mov
sub
aam
inc
cmp
cmp
jmp
stos
mov
ja
inc
dec
mov
cs
mov
jnp
ja
shl
jne
out
jle
int
loopne
ret
dec
lock
add
xlat
shll
mov
adc
stos
mov
lods
add
or
inc
push
xorps
test
adc
stc
xor
out
mov
dec
jmp
dec
nop
push
cmp
cmpsl
in
and
jno
ret
les
sbb
fidivs
jg
insb
bound
add
sbb
mov
jge
mov
and
lea
inc
mov
jns
mov
mov
xor
cmpsb
cmc
cmp
mov
sbb
cmc
push
les
dec
lods
dec
outsl
sbb
sbb
or
orl
push
pop
dec
imul
jl
scas
fwait
dec
outsb
jl
mov
les
mov
mov
std
gs
inc
outsb
mov
mov
push
arpl
xchg
aaa
clc
and
int
ficomps
hlt
sub
js
roll
mov
dec
or
xor
jae
pushf
mov
popa
cmp
and
je
roll
jo
push
jge
jge
mov
inc
mov
movsb
cmc
pop
dec
inc
fwait
mov
dec
xchg
push
scas
lods
adc
or
mov
std
jne
call
jae
push
out
cld
mov
adcb
repz
jle
nop
push
xor
mov
inc
xchg
pop
xor
aad
cmc
pop
fs
notl
push
and
mov
sub
out
fmuls
push
ds
test
add
jno
jbe
xchg
xchg
popa
or
adc
add
dec
adc
and
xor
cmp
sub
inc
out
fcmovb
sbb
ds
int3
mov
mov
lret
movsb
out
sti
imul
pop
repnz
mov
mov
adc
in
sub
xlat
mov
stos
popa
arpl
es
nop
jno
pop
pop
sub
pop
sub
sbb
jg
xorl
or
call
mov
sub
xchg
mov
mov
xor
mov
add
mov
popa
aas
jbe
jne
sub
fs
jle
mov
rolb
and
adc
push
push
mov
in
into
jb
inc
rcll
mov
adc
dec
cltd
jb
outsb
adc
divb
mov
xchg
push
mov
movsl
sub
inc
xchg
aaa
test
lret
mov
lcall
adc
fcoml
ds
xor
adcb
lds
int3
xchg
mov
fdivl
enter
dec
int
shll
adc
and
aaa
pop
pop
pop
and
aam
pop
push
cld
sti
cmp
push
or
rcll
pop
decb
out
pop
mov
adc
mov
adc
and
pop
pop
add
or
outsb
mov
movsb
push
lea
stc
cmp
mov
xor
fcmove
mov
pusha
cmp
in
in
add
test
dec
dec
mov
test
ret
subb
jmp
shr
mov
ss
test
and
inc
inc
repz
movsl
popf
sbb
hlt
or
add
shll
jl
clc
fdivs
pop
push
xchg
pusha
pop
push
mov
dec
lock
jecxz
pop
dec
mov
cmc
ja
addl
sahf
pop
push
pusha
lods
popa
jno
push
mov
or
mov
clc
jg
stc
sbb
stos
xor
xchg
add
dec
test
dec
mov
cli
fs
add
scas
inc
je
icebp
sbb
loopne
xor
pop
into
mov
xchg
mov
js
inc
les
testb
pop
loopne
add
mov
mov
js
out
add
popf
and
inc
aaa
or
jle
adc
shrb
iret
daa
mov
mov
imull
or
and
pop
xchg
inc
xor
mov
iret
js
cmpsl
mov
enter
daa
test
fsubrl
mov
mov
ss
cmpsl
rolb
lods
inc
jle
push
push
cmp
lods
data16
negb
call
nop
xor
cmc
cmc
mov
out
sbb
outsl
arpl
sub
adc
sbb
push
add
outsb
adc
jle
cmp
nop
sub
daa
push
enter
cmp
sbb
sbb
in
and
fstpl
inc
cli
cltd
cmp
je
ljmp
scas
xchg
scas
sbb
ss
sbb
mov
stc
add
and
sti
sub
js
std
loop
les
loope
test
and
bound
pop
push
mov
and
push
loope
mov
gs
ret
mov
jo
and
inc
jge
test
jns
push
pop
and
jnp
or
pop
push
jne
pop
sub
ret
out
out
scas
nop
xor
push
inc
divl
dec
sbb
ffree
cld
inc
xchg
ss
mov
or
push
int
push
adc
js
xlat
jl
mov
repz
xchg
cli
pop
fcomps
inc
enter
into
sbb
call
push
cmp
cmp
cmp
out
cs
loopne
sub
push
lods
mov
cmpsl
or
add
subb
xor
dec
aam
cmp
sub
scas
adcb
int3
xlat
sub
dec
mov
inc
cld
lock
aaa
fs
addr16
jmp
insl
insb
lock
imul
scas
aad
pop
push
repz
xorl
cli
inc
test
in
adc
xchg
pusha
adcl
insl
xor
mov
hlt
or
sub
rcrl
repz
jns
repnz
and
mov
jb
and
dec
push
clc
jmp
push
add
rcr
push
xchg
aas
in
dec
pop
add
sarl
jge
xchg
test
lret
sti
jmp
mov
cs
sbb
fstl
and
test
dec
lret
cmp
cld
stos
mov
push
lret
push
xlat
cmp
or
rorb
out
es
jmp
or
dec
dec
add
adc
dec
jmp
xchg
iret
mov
push
adc
std
loop
sbb
test
xchg
sub
pop
and
cmpsb
shl
sub
mov
fbstp
int3
adc
clc
arpl
popf
sub
sahf
xchg
pop
fs
stos
outsl
cmc
push
inc
jmp
shll
sub
jno
dec
lcall
inc
push
inc
lret
ljmp
pop
pop
mov
bound
mov
cmpb
mov
into
int
pop
cmc
hlt
pop
cmp
mov
adc
mov
push
leave
mov
pop
push
add
pop
ja
xor
jge
lea
mov
cmpsl
cmp
push
push
dec
stos
sbb
dec
pop
adc
mov
ds
cmp
cmc
mov
lods
repnz
dec
pop
call
sbb
fwait
or
testl
jge
inc
push
aaa
xor
loope
js
les
aas
pop
sbb
leave
dec
in
bound
or
push
nop
lahf
lcall
jae
xor
nop
xchg
jnp
icebp
xchg
fldt
jecxz
xchg
daa
movsl
lcall
mov
sub
iret
mov
adc
push
xchg
xchg
dec
jg
xor
lcall
es
insl
lods
in
xlat
pop
stos
and
mov
mov
sbb
test
out
aad
fwait
inc
add
movsb
mov
jle
mov
lea
lods
cmpsb
and
and
test
mov
stc
mov
cmp
repz
and
or
rorb
ret
pop
mov
jae
sahf
xor
cwtl
outsb
ffree
inc
push
adc
orb
sub
clc
add
lret
ret
or
xchg
fimuls
sahf
dec
lock
adc
frstor
pop
test
dec
mov
adc
jno
fstpt
mov
lods
jnp
xor
jo
xchg
aam
call
sbb
lds
cltd
lea
jg
subb
push
stos
enter
xchg
pop
adc
adc
cwtl
test
add
pushf
cmc
or
lret
fcoml
dec
lods
xlat
lret
cmp
leavew
lea
sbb
pop
shlb
pusha
sarb
xor
push
and
dec
pop
adc
mov
mov
sbb
gs
lret
mov
push
xchg
adc
nop
js
ljmp
push
xor
inc
ljmp
sahf
or
stos
push
lahf
jb
shll
adcb
mov
or
and
sub
lea
rcll
mov
stc
jle
stc
mov
aaa
loope
ss
sub
and
add
daa
add
inc
cli
inc
lea
pop
test
lds
inc
stos
aad
in
test
jo
daa
adc
aad
xchg
and
adc
pop
sub
xchg
rcll
fisubrs
push
mov
and
jg
negb
dec
iret
cmp
jne
stos
js
call
mov
sub
sbb
fdivl
scas
lret
mov
adc
dec
cmp
add
loope
adc
adc
jmp
or
cmpsl
xchg
xchg
shlb
mov
cmpsl
fldt
mov
je
shlb
add
xor
in
movsl
rorb
jbe
sub
into
fbstp
push
jp
xor
clc
cld
push
rcr
sahf
jb
jl
out
cltd
mov
repnz
dec
xor
popf
and
imul
mov
lods
daa
add
fstps
pop
sti
push
jne
lds
dec
dec
std
add
in
xchg
sub
sub
shll
fidivl
andl
loop
test
test
rorl
enter
xor
pop
insl
cwtl
sub
in
fmuls
dec
sub
faddl
int3
push
mov
xchg
nop
cmp
adc
push
pushf
inc
dec
cmp
iret
dec
inc
out
xor
daa
xchg
out
insl
scas
xlat
into
popa
je
mov
out
mov
push
lea
mov
adc
out
push
jns
je
iret
mov
mov
test
enter
cmpsb
inc
scas
add
cs
mov
add
pop
enter
or
outsb
pusha
sahf
cmpsb
bound
clc
dec
icebp
mov
push
pop
mov
lds
inc
pop
cmp
mov
sbb
aam
int3
jl
xchg
mov
cmpsl
divl
jae
repz
in
scas
hlt
xor
mov
push
imul
sub
sbb
fmul
push
mov
bound
inc
test
in
aaa
into
ja
inc
sbb
pusha
add
mov
xor
fsubrs
ret
cwtl
xchg
adc
subl
sub
jl
insl
ret
stos
out
lock
les
into
mov
cwtl
aas
sbb
movsl
mov
sub
sbb
leave
insb
cwtl
push
and
imul
pop
popf
jg
repnz
cs
xchg
js
push
ficomps
sbb
cmc
cs
xor
sbb
jns
int
fsubrs
pop
jmp
movsl
out
xchg
inc
fistpll
mov
in
in
mov
test
mov
mov
arpl
pusha
or
add
inc
inc
cld
adc
pop
insl
push
dec
int3
pop
mov
push
stc
mov
push
leave
xor
add
adc
cs
dec
and
push
ljmp
dec
fiadds
js
jle
dec
shlb
inc
fisubrs
or
adc
mov
mov
xchg
aam
cmp
sub
sub
out
out
cmp
sbb
cmpsb
cmp
lret
push
and
mov
pusha
jmp
cmp
pop
testb
or
jg
or
sahf
mov
sub
sub
dec
aas
stos
ljmp
jno
jmp
cmpsl
data16
das
push
mov
hlt
cmp
inc
clc
addr16
cmp
add
mov
stos
xchg
imul
sahf
enter
shrb
mov
popa
sub
lods
sarl
mov
pusha
dec
xchg
jb
dec
cmp
arpl
and
insl
sarl
jecxz
push
pusha
pop
mov
sub
inc
pushf
jg
aam
ja
sub
aam
inc
jl
push
sub
cmp
mov
mov
je
out
sub
out
and
cmp
mov
and
pop
sbb
arpl
imul
push
sub
insb
repnz
cmpsl
mov
pop
mov
scas
cs
mov
mov
push
bound
pusha
pop
out
std
cmp
jae
mov
stos
cmp
clc
jns
mov
call
xchg
pop
add
orl
sub
into
xor
test
jbe
int
pop
mov
imul
lea
sbb
and
loopne
cmpsl
push
dec
mov
test
xor
mov
mov
dec
jmp
xchg
sub
push
adc
lods
push
rorl
mov
rorb
mov
stos
test
xchg
outsb
mov
out
pop
inc
mov
xor
adc
leave
ja
or
xchg
lea
nop
rclb
push
mov
dec
and
hlt
adc
sbb
cmp
xchg
dec
push
mov
movsb
adc
pmovmskb
in
rcll
popf
dec
jbe
repz
loop
rcll
cmp
xor
ljmp
mov
lods
pop
push
les
dec
pusha
jbe
adcb
bound
inc
addl
cmp
or
jp
pushf
xchg
mov
pop
insb
insl
call
mov
push
jecxz
dec
jo
add
lods
sub
sbb
or
mov
mov
mov
fldenv
jo
xchg
jp
push
addr16
mov
mov
mov
hlt
jno
popf
loopne
mov
xor
mov
mov
aas
mov
dec
xchg
add
mov
mov
mov
cmp
xor
bound
lahf
std
or
fstl
dec
mov
jecxz
stc
xlat
nop
test
pushf
pop
mov
dec
stos
int
outsb
cli
mov
xchg
scas
mov
leave
xor
insb
outsl
mov
inc
cmpsl
ret
in
pop
imul
cltd
push
and
leave
icebp
movsl
jl
je
mov
dec
es
ds
adc
aaa
add
int
ud2
jg
int
arpl
pop
push
dec
sbb
sbb
bound
outsl
inc
repnz
xchg
add
sub
stos
push
and
lock
push
jae
or
mov
je
fnstcw
andl
pop
mull
loope
push
xchg
sbb
sub
leave
inc
push
adc
sarl
xchg
sbb
leave
repz
out
mov
aam
mov
sahf
outsl
gs
pop
and
pop
cli
jp
fistl
faddl
movsl
out
push
add
jbe
xlat
adc
jl
xchg
cld
sbb
xorb
lods
jecxz
mov
out
lods
cli
push
or
and
fld
es
cmpl
lret
je
add
and
das
cmp
lods
mov
test
pop
fidivs
outsb
loop
sbb
inc
gs
or
sub
and
jle
sub
xlat
repnz
rol
push
das
clc
cmp
enter
leave
cli
ds
jp
aam
inc
jge
ss
repnz
xchg
jle
rorb
int
xchg
sbb
sub
fiadds
mov
add
out
leave
orl
mov
ds
jg
cld
sub
lods
enter
inc
push
push
or
dec
call
and
jl
in
mov
clc
fisubrl
sti
mov
jecxz
lock
and
std
nop
add
jmp
lods
repnz
inc
shll
or
mov
inc
add
shll
dec
cmp
rcrl
ljmp
dec
outsb
icebp
lock
mov
push
push
cmp
imul
mov
xor
jae
out
jbe
mov
jns
into
das
outsl
movsb
mov
push
clc
mov
jns
test
mov
loop
repz
stos
ret
test
xchg
fwait
or
call
sarb
int3
cmp
and
scas
cmp
aas
mov
dec
scas
leavew
jnp
mov
leave
data16
les
cmp
pop
ds
cmp
jecxz
ja
jle
cltd
mov
aad
fs
fiadds
negl
inc
test
xchg
int
dec
or
inc
mov
add
pop
xchg
push
sbb
pop
pop
insb
popl
call
aam
les
xchg
jecxz
nop
fcomps
out
mov
loope
ss
adc
push
ficoml
into
sti
adc
jecxz,pt
xchg
mov
pop
pop
ds
mov
loop
lods
shll
fmuls
dec
aad
adc
cmp
mov
cmpsb
sub
js
add
in
pop
in
mov
and
sbb
mov
mov
mov
in
mov
pop
popa
mov
hlt
dec
mov
popf
xchg
xchg
mov
xchg
sub
cmp
pop
inc
clc
adc
mov
cltd
out
lods
jne
stc
xchg
xor
stos
mov
push
fwait
aad
or
mov
stc
push
mov
enter
outsl
mov
gs
lods
mov
loop
lds
sarl
data16
mov
cwtl
icebp
cmp
sbb
std
xchg
mov
bound
bound
mov
mov
sbb
es
inc
outsl
mov
xchg
adc
inc
mov
popa
inc
aad
xor
inc
mov
fists
push
fisttpl
inc
andl
adc
mov
add
adc
shl
pop
imul
dec
adc
dec
loopne
xor
dec
shlb
and
inc
ret
xchg
stc
dec
xchg
mov
jae
outsl
adc
push
fs
dec
ja
jp
add
sti
xchg
inc
pop
inc
rcrb
aam
leave
shlb
adc
dec
jp
adc
mov
xor
cwtl
fmul
aam
dec
pop
xor
pop
shr
aad
bound
in
sbbb
gs
adc
ret
outsl
cmpsl
jmp
frstor
jo
dec
jnp
cli
xor
iret
stos
mov
inc
inc
mov
lds
pop
cmpsl
or
f2xm1
mov
cwtl
out
popa
pop
push
adc
mov
sub
push
pop
or
dec
sbb
cmp
daa
mov
jo
imul
pop
bound
sar
mov
sbb
pop
insl
mov
add
in
fs
jecxz
mov
add
lahf
addr16
lret
mov
sbb
xchg
push
daa
jae
cltd
and
testl
out
jne
dec
es
dec
pop
jnp
push
jbe,pt
push
sbb
cs
popf
mov
inc
in
stos
jl
lock
fistpl
repnz
push
adcl
add
lahf
ja
mov
xor
fstl
fisubrl
mov
cmp
push
or
sub
xchg
jb
es
push
inc
stos
push
sub
add
out
xchg
mov
int
aas
mov
cmp
leave
inc
xorl
lock
les
out
adcb
mov
add
enter
and
jmp
xchg
mov
mov
mov
xor
mov
test
mov
mov
sub
or
mov
inc
aaa
insl
push
push
inc
bt
mov
aad
push
ret
push
mov
push
sti
arpl
dec
mov
adc
adc
fdivl
inc
cvtps2pd
add
or
mul
xlat
lds
pop
movsl
ret
cld
mov
xlat
fnsave
test
int
inc
scas
std
pushf
insb
pop
xchg
insl
cmc
in
or
cmp
mov
adcb
inc
test
xor
inc
insb
enter
pop
mov
lahf
fisubrl
ljmp
jle
mov
lret
rcll
push
lods
mov
icebp
mov
lds
lret
xchg
mov
and
xchg
push
shr
es
in
and
inc
jns
add
xchg
sub
mov
push
repz
jge
mov
cmp
cwtl
popa
pusha
test
hlt
and
dec
inc
push
into
in
decl
aas
bound
jecxz
pop
mov
add
pushf
pop
lea
cmp
arpl
jnp
lods
and
jnp
out
cmp
in
fcoml
rcr
pop
pop
cwtl
mov
leave
or
movsb
push
push
insb
and
cld
lret
add
mov
aas
stos
mov
inc
stc
or
mov
pusha
cwtl
fsubs
and
pop
test
jge
xchg
ss
pop
mov
mov
sub
push
enter
cmp
insb
das
arpl
lds
insb
xor
push
repnz
inc
gs
mov
sub
push
in
mov
and
mulb
outsb
mov
enter
pop
arpl
popa
mov
jmp
xor
mov
jmp
sbb
mov
cltd
mov
add
mov
jb
fmulp
jns,pt
ss
fcmovbe
gs
call
push
xchg
inc
push
clc
or
inc
xchg
add
stos
scas
adc
in
dec
push
pushf
int3
mulb
dec
mov
xchg
push
jp
jecxz
inc
shrl
xor
popf
aam
ds
cld
inc
lods
mov
jg
cmpb
das
test
adc
add
cmp
mov
and
pop
fldcw
pop
mov
inc
jo
sti
lds
mov
jl
leave
lahf
cmpsl
mov
leave
test
fs
mov
in
mov
jne
pop
cmp
jmp
jp
in
call
adc
cli
lds
cltd
xchg
fildll
outsb
outsb
dec
pop
jo
aaa
jae
adc
outsl
dec
mov
ret
cmp
sahf
sub
xchg
popl
rcpps
test
jbe
jg
call
aas
aad
stc
mov
dec
rcr
in
cmpsb
pop
push
loopne
pop
call
jmp
cli
mov
and
sub
scas
popf
ficompl
movsl
mov
jg
adc
cld
ret
inc
loopne
pop
fldt
dec
jp
cmc
and
shlb
or
in
ficompl
jecxz
inc
test
mov
orb
repnz
jg
std
int
inc
hlt
mov
add
push
stc
xchg
xchg
xchg
cmp
cmp
pop
mov
imul
or
icebp
mov
test
hlt
pop
out
mov
xchg
mov
repz
and
pushf
out
inc
pop
faddl
pop
cmpsl
push
or
pop
dec
lods
jno
mov
pop
push
or
popf
cmpsl
scas
add
jae
push
fidivl
shrb
out
pop
sbb
inc
enter
imul
je
jmp
rol
sbb
lahf
in
or
and
xor
xor
shlb
push
in
loop
xchg
rcrb
xor
mov
out
stc
test
push
and
sbb
scas
in
andb
adc
adcb
outsl
pop
xlat
jmp
jmp
mov
in
pop
rorb
xchg
cmp
stos
jo
pop
addl
pushf
jns
loopne
rolb
add
cmp
mov
in
loopne
pusha
test
loopne
mov
test
adc
imul
insb
and
pop
fisubrl
mov
mov
mov
add
cmp
sub
mov
push
clc
and
mov
shlb
movsb
shl
or
out
sbb
fnstenv
lods
cltd
inc
dec
sub
inc
lahf
mov
aad
or
adcb
in
xor
iret
mov
into
and
mov
pop
xchg
outsl
or
outsb
mov
jecxz
mov
hlt
pop
xor
jmp
addr16
ret
sbb
jge
xchg
xor
xchg
enter
ret
add
cmp
lcall
sbb
add
cmpsb
mov
cmpsb
out
dec
lcall
gs
mov
push
dec
push
outsb
inc
and
std
push
and
imul
or
loopne
mov
mov
pop
push
frstor
xor
subb
jecxz
jecxz
dec
jmp
fwait
enter
nop
fists
inc
lret
andb
je
rcll
test
xchg
sub
das
loop
or
ret
pusha
data16
pop
sbb
add
mov
lcall
mov
inc
mov
pushf
and
loopne
xor
pop
fdecstp
rcl
xchg
and
repnz
or
mov
xchg
xchg
mov
rcrb
loope
into
mov
in
popf
testl
sarb
adc
mov
xchg
outsb
lahf
sub
push
xchg
pop
xchg
mov
pop
lcall
loopne
test
jns
inc
test
gs
add
std
ret
jl
xchg
xlat
xchg
out
inc
xor
cmpsl
mov
into
inc
jg
xchg
xchg
add
lea
jno
mov
cmp
pop
iret
leave
test
outsl
mov
stos
mov
pop
jp
sahf
addr16
inc
jge
push
imul
inc
dec
sub
ret
repnz
mov
jns
push
repnz
jle
mov
mov
push
cmp
fbstp
dec
or
repz
cld
in
pushf
loop
xchg
test
fsubrp
mov
lret
push
xchg
jns
xchg
movsb
hlt
mov
add
scas
and
ljmp
push
pusha
dec
movsl
rcl
rcrl
jmp
roll
jecxz
rcrb
dec
nop
rorb
jmp
ljmp
adc
xor
mov
sarl
imul
or
into
mov
sti
shrb
lods
out
movsl
js
sbb
icebp
std
and
mov
gs
add
int3
mov
out
sbbb
dec
mov
out
push
sahf
ljmp
cltd
out
fisubl
jl
push
inc
insb
adc
add
mov
ljmp
faddl
lret
incl
xchg
rcll
dec
jmp
fimull
icebp
popa
aad
fiaddl
mov
mov
add
mov
dec
ret
xchg
adc
js
stos
or
ret
inc
fsts
fimuls
xchg
scas
js
push
xchg
dec
sbb
stos
fildl
loopne
lret
test
lret
push
adc
and
or
aad
mov
jno
insb
inc
adc
pop
pop
lahf
or
xorb
roll
mov
ret
fildll
scas
cld
adc
aas
fwait
out
jecxz
push
test
lods
mov
fcompl
xlat
orb
fdivrl
sub
jae
mov
jno
sbb
dec
out
inc
sahf
mov
mov
test
scas
adc
cltd
popa
lds
addb
js
xor
imul
xor
add
enter
sub
cmp
mov
sbb
outsb
pop
fstl
repz
adc
xor
sbb
test
loopne
sbb
pop
stc
mov
je
mov
jmp
sbb
or
adc
mov
push
movsl
mov
sub
pop
out
aad
xchg
xchg
popa
inc
clc
lcall
or
lret
and
xor
lods
repz
cmpl
stc
xor
add
roll
lcall
cmp
adc
jecxz
mov
pop
xor
inc
test
js
mov
js
ret
call
cli
mov
decl
inc
push
arpl
stos
insl
out
xor
cwtl
xor
ljmp
stos
adc
mov
aaa
stos
sbb
push
jne
cmp
pop
test
nop
cltd
je
icebp
add
mov
cmp
stos
outsl
lds
stos
lret
enter
cmp
xor
push
insb
or
enter
pop
mov
mov
rorb
mov
sbb
mov
add
inc
in
pop
mov
arpl
stos
mov
fildll
or
sub
out
cs
push
mov
stos
testb
loop
scas
sbb
xchg
setae
push
mov
lret
test
lock
loopne
mov
inc
out
jmp
sbb
xor
mov
lret
jle
pop
add
sbbl
mov
add
sub
xor
and
loopne
int
xchg
dec
cmp
jmp
imul
push
sbb
frstor
push
jnp
or
inc
imulb
bswap
sarb
jnp
in
outsl
xchg
jbe
fidivrs
sar
cmpl
add
xchg
add
call
popf
cmp
inc
nop
mov
lea
cmp
sbb
cltd
iret
dec
adc
cmpsl
frstor
scas
sub
jmp
push
mov
fdivrl
adc
cmp
inc
ret
clc
pop
xchg
mov
stc
ret
lea
movl
xor
jnp
mov
iret
pop
xor
or
xchg
xorb
rorb
movsb
pop
mov
test
push
mov
loope
xor
rclb
sub
daa
cmp
inc
xchg
fistpll
xchg
repz
out
lock
mov
into
or
fstl
bound
mov
jecxz
push
movsl
mov
xchg
fadds
adc
aaa
movsb
mov
clc
cltd
push
aaa
mov
iret
scas
mov
std
in
cmpb
adc
arpl
push
dec
testl
hlt
push
mov
cmp
xchg
mov
cli
ja
stos
sub
mov
sub
sub
test
and
loopne
insb
iret
sub
xorb
repnz
shll
xor
mov
fldenv
add
fisubrl
loopne
pop
rcl
inc
popa
jne
inc
pop
add
mov
dec
inc
jecxz
push
sub
adc
std
notl
shll
hlt
mov
push
adc
cs
cltd
mov
pop
push
or
vpextrw
lds
push
cmp
adc
lods
jecxz
cli
inc
sbb
inc
or
adcl
lea
mov
adc
stos
fucomip
or
xor
cwtl
cmp
pop
push
adc
subl
leave
push
cs
dec
adc
popf
clc
testb
sbb
dec
xchg
test
xor
xchg
push
push
imull
idivb
lock
xchg
jne
push
ja
cmc
jno
lahf
mov
dec
ja
sbb
dec
cmc
xchg
add
xchg
int
cs
sub
scas
mov
cmp
inc
insl
push
cmpsl
lods
mov
sarl
in
or
cmp
scas
xchg
pop
mov
xchg
dec
stos
mov
insb
lret
repz
ret
sbb
out
mov
rol
mov
push
std
out
dec
mov
jo
mov
cmpsb
rorl
sbbl
mov
xor
cld
popf
mov
push
fdivrl
mov
sarl
mov
loop
cmp
mov
xchg
cmp
jne
jns
xchg
mov
push
mov
inc
jmp
enter
mov
fcomps
push
jo
jo
push
pop
loop
mov
and
arpl
jg
and
inc
add
arpl
add
enter
repnz
mov
iret
xchg
xor
mov
jns
out
lahf
xor
nop
and
sub
jno
or
sub
pop
in
in
or
loop
jmp
xchg
dec
pop
inc
cmp
dec
decb
push
das
jg
jo
movl
insl
push
xchg
inc
popf
dec
dec
into
or
dec
dec
outsb
adc
ret
lret
mov
icebp
pusha
ljmp
adc
cmp
pop
add
sub
pop
in
insl
jg
push
xor
xor
je
fcmovbe
cmp
cmp
scas
or
push
cmp
mov
icebp
cltd
das
sti
jle
loopne
out
mov
push
scas
ret
stos
dec
rcrl
stc
icebp
std
loopne
out
js
loop
push
test
add
mov
or
decb
test
or
aaa
adc
es
les
pop
lock
push
jle
push
mov
out
push
push
call
enter
inc
out
int3
shrb
shll
test
rcll
inc
jmp
sub
cmpb
in
jno
cmp
incb
sbb
shl
fs
jae
in
pop
pop
add
jnp
xchg
aad
fisttps
sahf
mov
xor
sbb
and
push
jno
ja
outsb
int
and
add
fwait
mov
loop
and
stc
sub
push
add
aam
stc
or
cltd
mov
jmp
inc
ficompl
or
inc
xlat
rcr
xchg
cld
cmp
cmp
mov
xlat
mov
or
mov
out
pop
pop
fnsave
add
push
es
shlb
jge
mov
jmp
adc
xchg
scas
cmp
push
inc
leave
or
sub
sbb
shll
xor
fstpl
mov
cmp
jo
or
dec
inc
push
negb
mov
pop
mov
int3
xchg
or
lret
lahf
fcoms
push
ret
cmp
pop
adc
in
jmp
nop
stc
mov
outsl
xchg
cmc
and
sub
cmp
cmpsb
mov
movsl
les
stc
pop
lret
dec
xchg
movb
add
and
inc
push
and
ret
cwtl
jge
dec
mov
stos
pop
add
aad
lods
jns
imul
jno
push
mov
lea
pop
imul
xlat
addb
pushf
in
push
ret
mov
mov
xchg
lret
jbe
and
rorl
adc
cmp
sbb
add
iret
lock
call
pushl
pop
pushf
sub
cmp
inc
pop
mov
icebp
mov
out
pop
dec
lods
popa
push
push
xor
dec
or
dec
push
mov
mov
inc
or
inc
xor
cmp
mov
jnp
frstor
jecxz
mov
cltd
orb
mov
lret
aas
push
cmp
addl
cmp
mov
test
popa
scas
sbb
cmp
pop
sub
in
int3
sahf
mulb
repnz
mov
jle
aas
xchg
inc
popa
lock
in
cs
dec
mov
and
push
mov
mov
pop
xor
sub
call
aas
mov
sbb
in
xor
add
mov
push
lods
xor
mov
lds
dec
bound
sub
pop
nop
test
mov
jnp
adc
or
ljmp
dec
push
dec
and
mov
sub
fdivrl
inc
xchg
and
out
stc
xchg
xor
inc
inc
fs
ret
popf
shr
mov
fwait
int3
jp
mov
dec
mov
add
xchg
out
pop
add
cmp
ror
icebp
roll
repnz
dec
lcall
dec
ljmp
xor
fisubl
test
test
cmc
jl
je
cli
mov
sub
addl
psrlw
push
shll
mov
lahf
and
mov
xor
sbb
add
std
cld
and
sahf
aad
cmp
pop
cmp
pop
test
add
or
mov
out
test
and
inc
out
jns
inc
add
and
dec
sbb
jne
add
sbb
or
mov
clc
adc
mov
imull
stc
aam
cmpsb
inc
mov
out
sub
lcall
movsb
and
xor
pop
fistl
jnp
cs
out
repz
push
gs
fistps
lret
repnz
aam
popa
jb
repnz
loop
push
mov
fsubrl
iret
out
jnp
inc
fstpl
mov
stos
lds
lret
jb
mov
xchg
xchg
clc
cli
jnp
mov
mov
cld
aaa
test
sub
mov
mov
fisubrs
jb
cmp
inc
xchg
popa
cmp
push
xchg
daa
jmp
out
je
shll
cmp
push
outsl
test
cli
in
sbb
subb
stos
aaa
in
jae
cmpsb
mov
es
nop
xchg
sbb
fcom
xchg
xchg
pusha
sbb
pushf
inc
pushf
test
cmc
jae
fldl
inc
push
or
mov
sbb
ret
imul
in
into
sbb
icebp
les
sub
shll
rep
movsb
mov
sub
sbb
cs
mov
pop
cmp
jp
xorb
jo
pop
cmp
ss
das
add
mov
cmp
inc
cmp
mov
fcompl
std
mov
xor
or
pop
popf
mov
dec
cli
adc
mov
mov
cmpsb
stc
mov
mov
cltd
jge
add
sar
stos
fstpl
pop
fisubs
dec
sbb
cmpsb
fnsave
imul
cwtl
rorl
fstl
push
ja
mov
out
out
jecxz
sbb
fldcw
lock
hlt
sbb
cwtl
xchg
mov
xor
xchg
push
incl
dec
test
imul
sub
adc
mov
adc
les
add
jp
and
jb
mov
dec
imul
cltd
addr16
xchg
xchg
mov
cmp
out
and
sub
lret
xchg
mov
std
ljmp
and
push
jl
out
faddp
lret
and
inc
bound
pop
ds
inc
push
mov
jp
jg
jae
mov
or
dec
xchg
xchg
push
sub
mov
xchg
mov
push
mov
sbb
cmp
mov
popa
mov
repz
enter
out
imul
cld
add
js
sub
cld
insb
aad
nop
fstpt
pop
int
dec
jno
loopne
sbb
jp
push
cwtl
dec
dec
jae
rorb
mov
inc
push
into
mov
jl
repnz
xchg
lock
push
fdivs
or
loop
divb
cmp
push
add
cli
jno
int
xchg
xchg
dec
xor
mov
stos
mov
popf
xor
inc
mov
dec
add
pop
xchg
add
jne
pop
pop
repnz
aas
and
notb
xor
cmc
enter
rcrl
mov
mov
xor
add
shl
repz
loope
iret
and
in
or
add
fldl
rorl
clc
pop
into
mov
mov
or
inc
pop
sbb
xor
in
sti
adc
inc
jp
dec
jp
stc
dec
aas
cltd
call
enter
dec
daa
xor
mov
mov
popf
icebp
cld
cmp
inc
out
dec
cmp
xchg
popf
push
add
mov
xor
pop
pop
popf
push
sub
test
xlat
lods
jae
jge
xchg
xor
nop
lods
lods
sbb
in
lods
xor
popf
or
int
ljmp
or
mov
popl
cmp
xchg
clc
xchg
dec
mov
cmc
mov
clc
andl
fisttps
sbbb
sub
push
inc
push
pop
dec
dec
jmp
repnz
je
stos
pop
mov
ja
or
pusha
dec
mov
lcall
push
cmp
test
jne
xchg
sbb
cmc
mov
pop
andb
lea
or
xor
push
push
pushf
out
loope
imul
mov
sbb
or
xchg
or
lods
addr16
int
imul
addr16
add
rorl
sbb
pop
adc
push
movsb
adc
inc
cmp
jp
nop
int
push
icebp
and
jb
movsb
or
out
cld
test
jmp
testl
rcl
lahf
inc
dec
scas
arpl
icebp
lea
loop
js
and
data16
mov
cmp
or
push
mov
mov
xchg
loope
add
stos
jae
imul
test
test
mov
loop
stc
jmp
rolb
sbb
fnstcw
fnstenv
out
cmpb
and
cwtl
dec
push
xchg
xchg
je
xor
xor
into
jp
dec
dec
pushf
fsubrl
ret
cmp
mov
lret
xchg
fdivrl
call
gs
or
xchg
sahf
jp
stos
mov
or
adc
cmp
pushf
in
hlt
mov
out
mov
int
xor
mov
addb
inc
sahf
cmp
mov
cmp
imul
push
lahf
pop
lcall
push
adc
lock
adc
mov
movl
fadd
bound
loop
xchg
sub
jg
sub
in
clc
mov
jmp
addr16
das
fwait
and
xchg
lea
mov
js
mov
push
and
jle
push
dec
pop
fadds
test
jl
imul
mov
mov
sub
mov
into
fstps
push
xchg
int
addr16
xchg
jmp
sbb
push
or
and
imul
call
sahf
or
movsb
ret
sub
data16
xchg
mull
xchg
mov
stc
xlat
inc
mov
mov
adc
pop
stos
mov
mov
out
aas
pop
cmp
dec
mov
or
jecxz
nop
dec
push
rcll
pop
outsl
mov
std
sub
pop
jmp
dec
mov
loop
outsb
jo
and
mov
fs
out
or
dec
fiaddl
xor
push
and
push
push
loopne
mov
bound
mov
jno
push
xor
sub
outsl
mov
cmp
jge
and
pop
subl
jmp
jne
rcll
fisubl
lcall
cmp
rcrb
dec
int3
call
or
dec
push
pop
js
jbe
sub
mov
add
push
cmp
bound
add
lret
xor
hlt
adc
cmp
add
lret
mov
push
adc
inc
or
fcomip
fwait
and
push
push
cs
pop
sbb
push
add
cmp
sti
sti
fyl2x
call
mov
sub
ret
test
les
lock
jne
in
loop
mov
ja
fdivrs
mov
xchg
lret
mov
pop
or
pop
xor
mov
cld
push
mov
int3
jmp
es
pop
sub
jp
pop
jge
inc
cmc
dec
adcb
movl
xorl
sbb
notl
mov
test
enter
jge,pn
lret
lock
rorl
mov
int3
mov
inc
fldenv
jge
dec
xlat
inc
jg
int3
lods
in
iret
out
leave
es
mov
ljmp
sti
icebp
and
or
mov
dec
and
js
inc
loope
push
addr16
jne
ljmp
test
mov
or
jne
fisubs
and
adc
add
mov
pop
and
add
cmpsb
test
scas
cltd
or
mov
add
outsb
inc
and
xchg
out
jp
nop
jnp
in
test
inc
push
js
ret
inc
shl
jnp
ds
xor
xchg
jg
fimuls
imul
jg
push
adcl
jle
lret
dec
gs
mov
gs
jno
cmpsl
cmpb
sti
xchg
sarl
cmp
mov
xchg
xchg
cmc
in
mov
test
rcrl
or
aaa
loop
jo
das
loope
pop
lock
lods
addb
ljmp
mov
lods
inc
iret
adc
leave
inc
pop
fwait
icebp
cld
jne
inc
fsts
xor
cmp
mov
mov
fstps
jo
jl
insl
add
jo
outsl
add
das
aad
push
and
lcall
sbb
jmp
cmpsl
mov
js
inc
sbb
icebp
xchg
les
imul
sbb
xlat
lea
aam
int3
mov
and
repnz
sub
dec
push
sarb
push
int
std
sarl
or
xchg
int3
sbb
mov
sahf
addl
aaa
ds
out
mov
mov
xor
sbb
in
mov
inc
inc
popf
xchg
sbb
pop
insl
xchg
int3
cli
or
mov
lret
andb
pusha
mov
inc
fcmovne
int
mov
outsl
cmp
and
aam
test
inc
mov
in
adc
cmc
jg
mov
fmull
mov
mov
sti
pop
das
out
rcrb
xor
int
dec
stos
data16
add
rcrl
push
stos
push
daa
xchg
inc
imul
cmp
or
hlt
push
inc
in
jle
add
arpl
push
in
pop
in
mov
push
fwait
in
xchg
fcomp
adc
subb
mov
movsl
mov
loop
int
add
cmc
shlb
xor
in
imul
int3
cmpsb
mov
loope
cvtdq2ps
call
inc
cmp
lret
xchg
mov
add
aam
int3
cmc
insl
xchg
push
push
aas
in
repz
std
sbbl
out
negl
xchg
pop
add
fwait
inc
test
sbb
xchg
mov
mov
imul
jns
and
dec
add
mov
sub
cmp
inc
shll
mov
aad
test
xchg
jp
xchg
inc
in
pop
aad
mov
xorl
inc
out
out
call
call
and
loop
inc
and
mov
cltd
or
in
cmpsl
inc
mov
ficomps
push
daa
mov
cwtl
cltd
testb
nop
insb
xor
xchg
andl
push
hlt
dec
push
or
stc
jle
hlt
into
mov
lods
mov
inc
fnstsw
cmpsl
jae
or
mov
or
push
inc
and
into
pop
insl
mov
xchg
mov
aas
mov
ret
xchg
pop
xchg
lahf
adc
mov
lret
dec
leave
add
das
or
push
cwtl
sbb
dec
add
xor
daa
inc
test
lret
cmp
sti
or
ja
jo
ss
push
xchg
test
cmp
lea
loope
mov
scas
cmp
push
cld
repnz
mov
push
aam
push
pushf
or
movsl
push
mov
rolb
and
push
rcr
iret
dec
xchg
or
mov
in
int
movsb
repz
insb
iret
pop
push
mov
mov
daa
and
pusha
xchg
cld
and
mov
movsb
out
mov
adc
pop
and
cmc
xchg
popf
inc
test
repnz
lea
pop
je
pop
pushf
mov
sub
scas
out
jns
fistpll
and
and
inc
push
and
cmp
cli
scas
jo
rcrb
sub
aam
leave
hlt
aas
add
imul
cmp
push
loopne
mov
sbb
mov
adcl
das
fmull
leave
js
insb
cmp
in
xchg
cmp
daa
outsb
das
lods
xchg
pop
xchg
sub
dec
pop
add
pusha
imul
clc
cmp
aaa
rcll
lcall
mov
push
ss
mov
mull
lret
cli
lods
scas
test
push
mov
into
rcll
mov
mov
inc
out
stos
mov
aam
ret
dec
xor
enter
mov
xchg
and
xor
lea
mov
jmp
sbb
pop
xchg
test
je
sub
xchg
jno
lods
push
adc
rcrl
out
and
push
push
imul
xor
inc
pop
popf
sub
lea
enter
int
sbb
pop
sub
mov
sub
minps
jns
scas
fstl
cmpsb
and
inc
or
adc
lea
ljmp
sub
mov
int3
icebp
hlt
cmp
std
cmp
in
jne
lea
mov
fwait
push
mov
push
imul
sti
lds
fdivrs
push
cmp
or
sbb
add
cmpsb
das
push
and
adc
pop
test
mov
into
push
pop
mov
sbb
cmc
rcll
sarl
ljmp
aam
xor
out
test
aaa
fadds
repnz
out
jne
pop
ljmp
cwtl
push
pusha
int3
cmp
jp
fldenv
std
fcmovnu
bound
inc
pop
and
cmp
sbb
mov
cli
repz
mov
iret
fcoms
fimull
sbb
enter
stc
inc
pop
loopne
mov
xchg
dec
lods
lea
leave
test
sub
test
jno
jb
pop
push
jmp
xchg
jno
movsl
mov
mov
imul
pushf
cmpsl
imul
ljmp
add
outsb
mov
adc
cmp
decb
xchg
in
pop
cli
mov
shl
into
mov
gs
xchg
sub
xor
push
xor
mov
int3
sbb
roll
sahf
lods
test
daa
in
jb
and
and
fwait
xchg
sub
icebp
pop
negl
ds
cmc
push
cmp
cmp
aad
dec
pop
repz
xchg
std
ret
push
les
divl
das
movsb
leave
movb
dec
mov
and
xchg
adc
rcrl
pusha
movsl
mov
adcl
ja
and
arpl
cli
adc
jbe
dec
inc
or
inc
lcall
mov
jg
test
mov
frstor
mov
sti
stos
mov
xlat
lahf
std
jo
lock
jae
mov
cmp
adc
adc
aam
imul
pushf
sahf
jge
in
pop
rolb
clc
test
xor
loop
les
adc
cmp
fdivrl
mov
mov
std
dec
jmp
inc
xchg
mov
out
rcrl
dec
cmpsb
lock
daa
mov
push
pop
aad
sbb
sbb
dec
pop
mov
mov
jge
lea
mov
movsb
rcr
mov
shlb
jg
fstl
out
cmpsb
daa
dec
xchg
addr16
shrl
arpl
out
jp
ja
add
imul
movsl
loopne
jp
cmp
push
mov
sbb
addl
ljmp
xchg
pop
xor
dec
and
mov
adc
pop
movsb
gs
insb
push
push
ficomps
dec
sub
mov
push
sbb
jge
out
jp
popa
xchg
and
pop
sub
mov
test
pop
setbe
mov
insb
imul
jne
mov
iretw
and
enter
test
shll
cmpb
shrl
cli
fwait
push
pop
arpl
jo
sub
stc
mulb
fstps
xchg
repz
push
mov
pop
sub
into
sahf
push
jmp
lea
iret
xor
xor
jmp
mov
inc
push
out
out
pop
mov
inc
pop
cmpsl
test
out
or
cmpsb
sub
and
icebp
xchg
xlat
push
stos
gs
add
mov
movsb
icebp
push
mov
hlt
fidivrs
inc
xlat
aaa
sbb
mov
jmp
jno
jns
bound
lock
imul
pop
or
int3
clc
pop
pushf
test
fcom
jne
jo
push
mull
sar
push
mov
pop
mov
ss
fdivrs
out
ljmp
push
je
call
sbb
nop
ret
cmp
add
sub
mov
sub
sbb
jbe
cmp
shl
add
out
shll
aam
call
movsb
cs
sbbl
jmp
mov
dec
push
andb
scas
out
loope
add
sarb
adc
aas
sub
xchg
pusha
push
xchg
push
ror
push
cli
jl
rolb
jb
cmp
insb
pop
fcmovnb
cmp
repz
dec
pop
out
adc
bound
or
mov
aas
shl
inc
mov
dec
imul
mov
jl
jle
adc
mov
lret
pop
sub
in
andb
adc
and
nop
pop
or
testl
cmp
scas
adc
mov
sbb
movsb
mov
inc
bound
test
lods
notb
je
pop
testl
es
sahf
in
das
mov
push
mov
gs
jb
inc
sbb
addr16
mov
push
imul
inc
in
leave
push
aas
popf
mov
sbb
jl
std
call
loope
cmpsb
sub
jns
cli
dec
adc
data16
lcall
data16
and
add
adc
jg
in
ja
sbb
mov
xchg
inc
sbb
pop
jmp
out
loopne
enter
and
or
push
test
pop
rcll
sbb
shl
imulb
les
scas
jmp
jle
mov
dec
lahf
addr16
pop
add
jae
mov
into
into
lret
in
jo
aas
stos
cmp
popl
cld
jecxz
insl
mov
inc
sub
jle
xor
fadds
cli
rcrl
pop
fucomp
push
mov
pushl
xor
outsl
mov
mov
sbbb
push
mov
in
xchg
test
mov
mov
pop
test
sbb
rorl
inc
mov
adc
jle
cli
inc
pop
and
subl
push
mov
adc
dec
jo
fincstp
fisttps
cmpsb
je
fimuls
sbb
sahf
aas
pusha
stos
int3
dec
andl
mov
or
or
mov
dec
adc
inc
pop
into
pop
adc
mov
or
gs
stos
add
popf
stos
test
adc
pop
in
arpl
lret
mov
sub
outsb
or
push
icebp
jne
test
in
mov
xchg
jb
cmpsl
or
inc
scas
push
add
and
push
mov
dec
repnz
inc
sbb
fidivrs
sbbb
iret
dec
jecxz
dec
cmp
aad
push
jnp
cli
sysexit
mov
imul
xchg
cld
test
inc
stc
adc
arpl
lret
mov
xor
dec
testb
xor
mov
je
idivb
mov
jns
jp
fiaddl
inc
cmp
repz
xor
fwait
jge
or
jb
mov
cltd
call
addr16
mov
sbb
xchg
inc
mov
dec
clc
mov
mov
jl
mov
int3
arpl
fcoml
mov
add
in
jb
cmp
fadds
push
adc
fidivs
pop
rcrb
sbbl
orl
das
fcmovb
loopne
lret
xchg
push
jge
mov
lock
aaa
add
repz
inc
push
fistpll
mov
enter
stc
dec
mov
add
push
aad
stos
jno
cmp
scas
mov
xor
push
or
or
orl
fisubs
dec
ja
jg
fldcw
outsb
scas
inc
sbb
mov
call
mov
and
xchg
adc
mov
out
adc
mov
cs
sbb
or
pop
ja
aaa
xor
popf
jne
push
lods
call
xlat
and
lret
jp
mov
sub
add
xchg
jg
xchg
sub
adc
cli
xchg
stc
sbb
lds
adc
pop
cmp
xor
xlat
aam
idiv
pusha
stos
test
inc
mov
xchg
dec
adc
add
xchg
ret
push
or
dec
lea
fcomip
dec
push
and
push
ror
xchg
shr
rcrb
xlat
add
popf
les
pushf
in
addl
test
ds
outsb
enter
cmp
nopl
arpl
andb
add
gs
cmpsl
adc
stos
pushf
pop
clc
cld
jle
dec
test
add
dec
data16
scas
jge
dec
or
movsl
ja
cmp
pushf
jne
getsec
outsb
xchg
das
mov
nop
lret
add
sub
xor
movsb
dec
loop
test
jns,pt
or
outsb
push
fisubs
xor
xor
roll
aad
xchg
sahf
sub
sub
and
addr16
pop
bound
nop
cltd
sub
jb
adc
mov
push
mov
pop
or
mov
xor
push
pop
pop
mov
out
mov
xchg
xchg
int3
or
sbb
jb
mov
stos
jnp
shrl
cmp
leave
out
lea
aas
jbe
fwait
clc
lea
jo
or
xchg
inc
shl
jge
shll
jp
push
nop
jmp
push
mov
mov
dec
jb
test
adc
rcrl
mov
bound
inc
imul
mov
jl
out
shlb
cmp
xor
pop
sub
fdivs
inc
out
or
test
pop
push
or
mov
daa
es
arpl
cmp
sub
int
sub
loopne
sti
mov
push
fdiv
fucomip
sbb
pop
pusha
mov
mov
pop
jp
jnp
mov
int
std
jmp
dec
pop
or
mov
scas
xchg
call
imul
out
sahf
enter
pop
flds
pusha
pop
ja
gs
je
leave
in
lods
sti
xchg
mov
test
push
loope
and
push
stos
inc
dec
data16
addr16
add
and
test
dec
faddp
shl
pop
pop
cmp
je
pop
scas
inc
mov
call
sbb
xchg
sbb
fs
outsl
jl
cmp
int
fidivl
fsubrp
imul
pop
loop
test
les
pop
daa
loopne
jns
out
outsb
cmp
lods
sub
dec
loopne
dec
shl
push
test
mov
daa
inc
push
popf
xchg
fcomps
imul
inc
or
push
xchg
add
rcll
mov
mov
int3
ret
test
cld
out
mov
mov
or
push
loop
rcll
out
and
cmc
lea
pmuludq
cmp
cmp
fiadds
mov
sbb
stc
decb
hlt
or
sbb
jge
imul
lret
js
and
sbb
psubusw
popa
js
test
pop
test
in
inc
pop
pop
inc
mov
xchg
or
outsl
sti
iret
ret
andb
add
inc
lods
leave
ljmp
loop
adc
mov
xchg
xchg
pop
dec
rcrl
jp
jl
daa
ds
in
or
and
loope
cmp
xchg
mov
xchg
add
inc
mov
fs
out
lods
mov
xchg
aas
xor
test
xlat
cmpsb
aaa
loope
jbe
or
leave
adc
adc
jmp
inc
popf
inc
fildll
cmc
les
neg
push
loop
jns
push
roll
add
cmpsb
pop
mov
push
and
arpl
mov
cld
xor
outsb
mov
adc
test
mov
push
insl
pop
adc
sbb
in
jecxz
sbb
fistl
push
push
xor
rcr
hlt
ret
sbb
fistpll
data16
adc
loopne
xor
fisttpll
jge
pop
push
shlb
pushf
in
mov
ss
stos
add
dec
cmp
test
popf
adc
int3
popf
fmull
arpl
add
mov
xchg
scas
aad
mov
inc
push
mov
clc
jns
jle
push
int3
mov
insb
pop
loop
or
repz
xchg
aam
xorb
int
insb
sbb
xchg
lock
xor
sub
add
arpl
jg
inc
sbb
rol
sbb
pop
jne
push
push
into
sub
mov
add
mov
dec
notb
lods
mov
jecxz
out
imul
mov
test
pop
add
stos
adc
loope
or
cmp
je
into
jmp
xchg
test
mov
jae
in
loopne
icebp
cmc
jnp
and
pop
call
add
clc
jae
or
mov
pop
jg
negl
push
lret
add
and
dec
nop
sub
pop
mov
daa
mov
jp
inc
popa
and
or
xchg
jmp
repnz
mov
pop
xchg
data16
notb
add
loopne
out
jmp
outsl
shl
cmpsl
mov
mul
push
shlb
and
dec
das
bound
repnz
cmpsb
mov
test
or
out
mov
sub
adc
lds
test
mov
xor
and
clc
cs
inc
lods
sbb
cmp
or
push
dec
inc
ret
jmp
movsl
lret
push
and
sbb
test
or
shr
scas
or
shr
xchg
vmulps
loope
mov
in
sbb
inc
dec
out
shl
nop
jl
std
adc
mov
out
lcall
test
into
rorl
xchg
and
dec
fs
xor
push
fcoml
mov
rorl
and
adc
cmpb
pop
faddl
into
mov
out
cmp
ja
les
pop
add
test
sbb
dec
lods
adc
cmpsb
or
dec
sbb
testl
imull
push
pop
mov
inc
ja
cld
adc
sbb
mov
cwtl
fistpll
test
xchg
in
daa
push
ror
cmp
xor
push
faddl
mov
mov
push
in
popf
lahf
mov
jbe
xchg
subl
repz
pop
inc
sub
arpl
sbb
push
cs
inc
pop
das
lds
push
inc
xchg
jno
or
aad
mov
inc
call
into
loopne
xor
sahf
daa
lods
xchg
sub
cmpsb
or
xor
sti
subb
dec
sub
insb
sub
dec
stos
lods
fcmovb
xchg
test
test
or
orl
lea
js
xor
out
mov
push
data16
sub
sahf
mov
sub
or
es
push
jl
pop
js
scas
aam
inc
add
dec
cmp
push
push
mov
push
pop
xor
mov
mov
jp
cmp
cmpsl
popl
std
stos
sbb
pop
addr16
in
jne
dec
xor
and
push
jp
outsl
fwait
stos
loope
or
and
pop
dec
mov
test
xchg
push
add
push
mov
aas
out
enter
stc
dec
add
jmp
push
in
fsub
xchg
or
leave
cmp
mov
lods
leave
xor
lcall
cmp
mov
daa
pop
ja
add
cmpsl
inc
mov
xlat
xlat
push
in
add
inc
xchg
ret
repnz
sbb
push
xchg
loop
bound
dec
repz
push
sbb
dec
out
leave
push
outsb
in
aad
icebp
fnstsw
dec
mov
dec
mov
mov
mov
dec
dec
out
loopne
sbb
mov
aaa
xchg
dec
pop
push
or
push
and
or
in
cmp
or
ret
mov
enter
jmp
mov
push
adc
xchg
in
in
dec
lea
addr16
rcrl
ror
push
adcb
in
lret
xor
push
test
mov
sub
jmp
dec
es
stc
ljmp
stc
mov
test
pusha
stos
mov
adc
sahf
scas
movsl
cmp
repnz
out
xlat
lods
push
scas
or
jecxz
out
cli
push
call
jmp
cmp
jnp
movsb
lods
and
pop
mov
pop
ficoml
clc
es
call
mulb
int3
jbe
pushf
inc
push
daa
xor
xor
mov
jecxz
lret
in
cmp
imul
jecxz
sti
and
lods
mov
ja
jmp
jae
pop
fcomps
outsl
mov
fildl
mov
stos
sti
adc
add
xchg
add
mov
int
or
cmp
xor
xchg
shll
mov
clc
aaa
mov
fcoms
inc
xchg
aad
push
add
lahf
xor
pop
jmp
xchg
mov
push
mov
add
and
mov
pop
pop
xor
jb
sbb
mov
int3
outsb
adc
cmp
mov
dec
jg
pop
jne
rcll
mov
or
push
mov
mov
pusha
adc
push
xor
cmp
cmp
insl
fnstenv
adc
inc
daa
inc
fwait
xchg
mov
sbb
test
mov
pop
insb
cmpsb
mov
imul
adc
pop
leave
fcoms
dec
je
ds
xchg
mov
rcl
mov
jle
stos
ficomps
lods
popf
pop
inc
lock
sub
dec
cmpsl
dec
sub
jnp
jnp
cmp
sbb
inc
jne
sbb
sub
loopne
aas
vphsubdq
push
cmp
xchg
adc
or
and
aaa
aas
xchg
sahf
imulb
out
leave
cld
fsubl
jo
les
jge
mov
mov
lds
inc
mov
inc
cmpl
fisubrl
mov
daa
loopne
rclb
adc
and
out
pop
stc
or
mov
cmp
icebp
mov
pushf
sbb
and
iret
push
mov
faddl
adc
imul
inc
out
in
and
sbb
cmp
sub
lcallw
sub
lret
cs
push
fsubl
notl
scas
pop
fs
out
pop
dec
lahf
divb
inc
int3
push
jnp
imul
push
and
popf
dec
push
inc
or
cmp
cmp
movsl
jmp
pop
mov
addb
sub
cli
js
inc
addr16
xchg
js
je
fnsave
cli
xor
adc
jl
daa
xor
jno
orb
inc
aam
imul
loope
xchg
xchg
cmc
xor
mov
test
dec
pop
sahf
mov
popa
mov
pop
dec
into
out
jge
push
add
or
mov
addr16
in
push
clc
scas
sbb
add
inc
nop
out
sbb
outsl
mov
jg
push
xor
aaa
push
incl
sbb
jno
shrb
inc
sbb
and
outsb
push
jns
sub
ja
lahf
dec
adc
and
int3
pmovmskb
aas
push
lea
pop
and
sbb
push
jb
clc
call
push
sbb
std
cmp
nop
shll
js
popa
ljmp
int
outsb
adc
lods
xchg
aad
mov
scas
mov
lretw
in
lret
inc
test
xchg
mov
clc
loop
or
andb
inc
push
int3
mov
filds
xchg
cmpsl
leave
jae
add
mov
push
cmc
pop
mov
mov
stc
int3
sbb
lods
mov
lock
push
dec
mov
push
mov
lret
rorb
jp
mov
dec
lret
lret
jg
dec
hlt
enter
ljmp
fistpl
insb
rorb
aad
sar
or
jmp
aam
add
inc
inc
sbb
cli
inc
mov
dec
pop
nop
iret
and
sub
add
mov
fsubl
mul
stos
addl
stos
outsl
xor
xchg
jb
push
aam
cmp
dec
adc
cmp
adc
iret
xlat
stos
mov
or
popa
push
and
dec
addr16
add
scas
leave
add
adc
test
adc
jg
adc
jmp
adc
jl
xor
sbb
pop
and
scas
sub
cmp
fldl
jbe
div
xchg
xchg
push
rcrb
addb
stos
add
mov
imul
jns
cmp
sbb
sbb
scas
mov
aaa
jae
jecxz
aad
icebp
daa
mov
orb
pushf
call
cmp
dec
sub
or
es
sub
je
inc
mov
push
loop
cmpl
fwait
test
enter
xchg
or
and
and
jecxz
leave
jnp
ficomps
int
cmp
loope
cli
adc
push
aad
push
mov
adc
mov
mov
mov
mov
xchg
jbe,pt
xlat
das
nop
jecxz
cmp
xor
add
jns
xchg
insb
jae
ja
xchg
mov
mov
jae
ss
pop
movsb
jbe
fdivp
daa
push
dec
jle
lds
inc
std
pusha
leave
dec
jnp
adc
fwait
mov
adc
push
int3
pop
sbb
and
es
push
pop
cs
dec
add
jmp
push
xor
nop
xbegin
aad
adc
mov
or
jle
out
xor
or
orl
rorb
push
ret
out
jp
pop
ljmp
sbb
pop
mov
fs
xor
cmpb
lret
adc
sub
xlat
adcl
mov
lock
out
or
das
xlat
roll
pop
pop
pop
aaa
push
iret
push
cwtl
dec
mov
andl
cmp
fadds
stos
scas
xchg
mull
mov
movsl
add
data16
push
mov
std
dec
incl
mov
cmp
pop
sub
arpl
mov
enter
sbb
pop
push
dec
pop
lock
ret
xor
mov
negb
jb
in
push
fildl
js
pop
loope
jns
add
pop
les
mov
es
mov
push
jge
loope
cmp
gs
out
jo
cmpsb
in
dec
mov
jbe
jge
jbe
jmp
xchg
faddl
out
stos
jae
mov
int
push
push
xchg
stos
mov
test
xchg
jp
jno
call
pop
push
push
je
mov
mov
or
pop
adc
rorl
scas
mov
fsubrs
mov
jno
or
ret
movsl
push
jnp
mov
loope
and
rcrl
mov
testb
les
mov
push
add
js
movsl
dec
mov
sbb
lret
addr16
adc
icebp
sbb
jecxz
add
cld
sbb
ja
sbb
mov
xchg
add
fimull
in
dec
or
pop
pop
adc
repnz
and
testl
inc
mov
bound
mov
or
xchg
test
jg
push
jmp
push
mov
dec
jg
xchg
pop
push
repz
call
fmull
mov
out
cmp
arpl
scas
push
sub
add
nop
lds
mov
dec
ja
jo
gs
fildl
push
fnstsw
lock
pop
pop
cmp
mov
das
inc
mov
mov
push
cmp
dec
outsl
arpl
add
xor
mov
add
outsb
imul
mov
scas
in
inc
roll
aam
ds
or
out
rcl
push
ret
aam
fs
adc
ficoml
jecxz
xor
mov
and
jecxz
aas
xchg
inc
cmp
adc
enter
push
cwtl
enter
fcomp
jo
cld
mov
out
mov
push
lods
cld
cmp
out
cmp
add
adc
insb
add
or
xchg
mov
mov
xchg
jae
outsb
ja
int
repz
lods
pushl
andb
push
xor
add
stc
inc
loope
push
push
data16
cmp
orl
out
pusha
pusha
jge
cmpsl
stc
ret
and
cmp
pushf
shll
mov
add
loope
xor
adc
in
sbb
sub
jbe
movsl
inc
inc
push
sysexit
or
adc
popa
cwtl
mov
push
ljmp
dec
cmp
adc
loopne
ljmp
push
sbb
jmp
lds
sub
arpl
jno
sub
adc
cmc
imul
mov
lea
rorb
out
and
js
xchg
jge
xor
cs
sbb
xor
imul
xor
sar
mov
cld
sbb
negb
pop
aaa
mov
adc
inc
push
outsb
and
cmp
aam
xor
jne
fmuls
pop
xor
stc
nop
iret
jmp
dec
mov
lock
adc
sub
sahf
lea
cmp
je
jae
adc
iret
adc
cld
idivb
cld
inc
dec
sbb
test
inc
jo
and
sbb
or
add
adc
pushf
jp
mov
adc
xchg
or
xor
cmpl
scas
cmpsb
jle
mov
outsb
adc
mov
mov
sub
xchg
loopne
andl
loopne
mov
cmpsb
jge
popa
sahf
and
xchg
rcl
cmp
in
outsb
dec
and
cmc
xchg
or
push
xchg
movsb
insb
push
xor
bound
insl
jle
aaa
ja
cmp
setg
adc
clc
aad
lods
cli
xchg
jb
push
sub
and
mov
stc
testl
or
jmp
sbb
sub
and
jne
xor
jmp
mov
jo
add
aaa
xchg
sbb
add
in
push
cmp
xor
jae
in
pop
xchg
fisubrl
mov
adc
into
mov
push
testb
in
test
sub
mov
cmc
mov
or
or
jg
inc
cld
push
push
or
push
aaa
xchg
movsl
loopne
xchg
test
dec
jmp
inc
setge
jns
popa
mov
add
cltd
ror
shll
movsl
sti
inc
jge
push
adc
mov
enter
jp
jbe
jecxz
popf
and
loop
sahf
sbb
jmp
fcoml
roll
sbb
lds
out
cld
test
movsb
shr
xlat
in
repz
loopne
pusha
jno
sbb
cld
loope
sbbb
testl
jecxz
in
adc
inc
sub
add
mov
sti
push
pop
xchg
leave
xchg
cmp
sbb
ror
xchg
cmpsl
sbb
xchg
outsb
xor
imul
aam
ds
mov
and
sub
aad
mov
rcrb
bound
insl
add
sti
out
jmp
stos
mov
push
adc
push
dec
in
lret
mov
enter
loop
cltd
push
push
push
clc
mov
pop
pop
xchg
mov
sub
mov
xchg
sub
cmpsl
iret
fistpll
movsb
cmp
sub
dec
jmp
inc
movzbl
test
mov
inc
loope
jb
enter
dec
mov
inc
xchg
fcomp
and
call
daa
xor
imul
inc
push
lcall
mov
pop
les
jbe
inc
sub
jecxz
clc
cmp
sahf
inc
lods
mov
roll
dec
add
pause
push
mov
hlt
cltd
and
lahf
xor
lds
sbb
sub
ds
or
lds
fsts
push
add
fcoms
push
xchg
jb
lods
aad
dec
and
push
cmp
push
pop
xchg
mov
lods
dec
out
rorl
xor
ret
in
outsl
sbb
sti
or
fimuls
push
xchg
je
loope
ljmp
mov
mov
and
push
call
mov
xlat
pop
sub
pushf
inc
mov
rcl
sti
mov
cld
arpl
and
xchg
jge
movsl
test
sbb
pop
push
cmp
dec
rclb
imul
fdivl
movsb
inc
movsl
mov
sbb
mov
jl
mov
sub
pop
push
jnp
js
aad
inc
mov
ret
sbb
ficomps
cli
adc
bound
xlat
sahf
xchg
test
jns
aaa
stos
dec
and
popf
adc
xlat
and
lahf
sub
cli
xchg
adc
rcrb
inc
fsubl
cmp
sbb
and
ds
daa
lods
aas
mov
jbe
rol
pushf
adc
pop
mov
repz
jns
adc
imul
notl
lcall
and
and
lods
sbb
mov
cs
cmpsl
jne
scas
xorb
icebp
inc
ss
cmp
or
cmp
fisubrl
jns
loope
enter
mov
iret
adc
aas
cmpsb
jecxz
movsb
stos
sub
ljmp
lcall
stos
icebp
inc
and
xchg
mov
xchg
ss
jnp
scas
inc
loopne
out
pop
adc
cmp
ds
and
div
sahf
or
js
add
adc
mov
ljmp
push
cmp
sbb
mov
cmp
filds
dec
gs
adc
or
les
adc
mov
in
dec
cwtl
insb
xchg
cmp
inc
dec
std
cli
mov
mov
jecxz
mov
push
negb
scas
cmp
insb
outsw
cmp
push
les
inc
and
cmp
jecxz
lea
stos
dec
xchg
push
bound
ljmp
and
repnz
xchg
ret
pop
hlt
arpl
inc
and
lahf
lods
test
mov
pop
clc
ljmp
cmp
fwait
lahf
mov
pusha
push
lret
cli
pop
imul
sbb
jbe
jl
stos
xchg
jle
fwait
popf
or
mov
sub
add
push
aas
call
ss
xor
and
mov
jecxz
es
shrl
imul
test
pop
pop
in
outsl
push
cs
xor
adc
xchg
and
mov
xchg
cmp
or
fnstenv
ret
lods
mov
dec
fdivrp
add
repz
addr16
jmp
pusha
cli
scas
pop
mov
outsl
shll
push
aam
or
mov
stos
inc
cwtl
stos
test
shlb
sti
and
cmpsl
std
mov
lea
cmp
outsl
popa
jg
xchg
ret
push
out
mov
cwtl
daa
loopne
dec
pop
xor
mov
call
sub
pusha
mov
mov
xor
jbe
pop
xchg
mov
popf
jl
stc
ret
pop
aad
imul
xchg
dec
xchg
lret
adc
ret
push
daa
mov
cmp
ss
aam
add
push
fisubl
cmp
in
mov
mov
call
and
pop
mov
test
sarb
mov
jne
push
push
xchg
addr16
dec
push
mov
xchg
popa
add
lea
cmp
mov
stos
mov
stc
out
or
dec
nop
dec
cmc
mov
inc
jns
stos
inc
leave
repz
mov
mov
jecxz
scas
push
mov
xchg
cmp
ljmp
dec
je
xorl
xchg
repz
sbb
jbe
or
mov
cmp
lret
aaa
pop
push
or
mov
stos
sub
and
int3
pop
out
mov
in
dec
adc
loope
or
mov
adc
out
or
jbe
ljmp
outsb
xor
xchg
adc
decb
les
mov
xor
lock
lret
out
sbb
bound
pusha
push
ljmp
sti
std
jb
negb
popf
sub
sub
sahf
mov
mov
jno
in
sahf
push
cmpl
pushf
das
stc
add
jae
jle
push
cmc
mov
aaa
and
std
xchg
cmp
mov
sbb
and
sbbl
and
inc
lock
insl
shld
dec
mov
mov
inc
int
xchg
jecxz
and
sbb
loopne
push
std
adc
pop
cld
pop
pop
enter
aam
popa
scas
daa
jle
adc
mov
cmp
or
in
and
ja
lea
lods
repz
sbb
lods
ss
scas
fldt
jle
rcl
sub
out
push
pop
cmp
push
cmp
add
jl
mov
jge
lds
pop
dec
lock
int
andb
xor
add
pop
arpl
scas
fimuls
push
lahf
stc
in
cmp
aaa
sbb
movsl
mov
aad
test
test
mov
shll
ja
flds
xchg
pushf
cld
loop
cmpsl
and
test
cwtl
mov
jge
and
cmpsl
sub
in
push
bound
imul
jg
xor
xor
sub
mov
push
cmp
add
pop
xchg
fidivs
xor
outsb
xchg
inc
pushf
iret
mov
add
adc
or
sar
in
xor
out
dec
or
loopne
divl
and
test
pop
enter
test
loopne
jecxz
and
xchg
mov
dec
sbb
xchg
aaa
inc
scas
or
jns
clc
lods
sbb
hlt
cmp
push
addr16
sub
test
and
mov
mov
test
subb
fwait
lock
push
and
mov
imulb
push
push
add
or
xor
dec
or
add
popa
enter
out
or
jae
inc
mov
add
bound
sub
pop
movsl
fs
insb
xor
sarl
xor
fcoml
sub
stos
adc
cmc
out
push
ret
jbe
jb
test
mov
fmuls
mov
in
xor
push
adc
sar
mov
mov
inc
arpl
pop
mov
rclb
push
xchg
fwait
clc
fnstsw
sysexit
mov
xlat
inc
mov
leave
movsb
mov
pop
and
push
mov
test
lds
iret
xor
popa
imul
clc
inc
mov
mov
int
adc
mov
call
dec
js
pop
xorb
dec
sub
fimull
xchg
inc
aam
inc
ret
add
fisubs
scas
mov
xlat
in
mov
mov
cmpsl
mov
in
out
xor
rcrl
cmc
jl
mov
push
xchg
test
dec
repz
fnsave
jmp
mov
addr16
sub
cmpsb
pop
or
arpl
inc
in
test
lods
xor
and
scas
add
rcrl
mov
call
sahf
add
fcoml
lahf
test
ret
test
sub
push
jp
cmpsl
pop
adc
dec
mov
inc
cmp
stos
inc
xor
mov
aas
leave
sbb
inc
sub
inc
jg
mov
sub
or
inc
call
js
jae
hlt
jge
lea
mov
sub
pop
cmp
rolb
cmp
nop
out
je
std
sub
in
jg
out
mov
cmp
jnp
scas
jle
popf
es
mul
pusha
sbb
sbb
int
mov
sahf
mov
mov
stos
out
mov
sbb
insb
dec
jb
insl
sub
rcr
cmp
or
call
xchg
jp
ds
and
pop
push
or
dec
inc
xchg
cmp
mov
jle
and
scas
xchg
mov
stos
leave
mov
push
in
shrl
and
mov
jno
pop
test
dec
add
mov
cmpsb
out
dec
jmp
cmp
dec
dec
and
jmp
sbb
adc
movsl
dec
mov
mov
mov
xchg
push
out
mov
scas
out
push
std
shlb
lcall
repnz
pop
and
or
dec
mov
and
and
dec
xor
bnd
dec
push
js
pop
mov
out
mov
add
mov
lods
in
mov
dec
push
cs
decb
loopne
sbb
sub
fwait
or
outsl
dec
es
mov
xchg
pop
in
xchg
add
mov
jmp
adc
jae
in
mov
sbb
or
cmc
popf
mov
int
and
inc
inc
xor
sti
sub
or
or
sahf
rolb
aaa
jne
mov
dec
mov
or
shrl
in
mov
mov
or
and
test
in
or
das
fstl
or
dec
out
and
sahf
ficomps
in
stos
js
test
test
leave
dec
movsl
push
hlt
and
pop
or
push
adc
jbe
jnp
xor
sbbb
int3
inc
aas
cmc
cltd
inc
xorb
aaa
dec
leave
popa
and
fnstcw
pusha
mov
cmc
sub
mov
outsb
imul
add
shlb
cli
in
jmp
aaa
loope
int3
mov
daa
lret
sub
push
clc
inc
sbb
pop
insb
mov
and
dec
adc
xchg
sub
xchg
or
stos
mov
scas
out
pop
inc
mov
xor
sub
ret
in
les
or
pop
mov
push
inc
in
lret
sbb
out
sahf
scas
mov
push
sarl
pop
out
mov
hlt
xor
negl
push
jge
sti
dec
mov
sahf
sub
mov
dec
insb
sahf
cmp
repnz
scas
pusha
pop
push
inc
mov
cwtl
inc
pop
cmp
popa
push
jne
mov
data16
mov
mov
or
stos
cmpsb
xor
popa
movsb
cmp
cli
clc
nop
add
lret
out
cwtl
mov
test
jbe
mov
gs
cmpb
ljmp
dec
loop
mov
jo
sbb
leave
jo
addr16
popf
stos
cmpsb
xchg
mov
repnz
mov
adc
jmp
mov
movsl
or
inc
addr16
mov
lock
cmp
cmp
jno
adcb
lret
inc
icebp
loop
dec
mov
lods
jo
mov
push
in
pop
cmp
hlt
in
call
and
sbb
pop
lods
inc
sbbb
ret
cmc
pop
data16
rorb
leave
lods
dec
lret
ljmp
jae
fsubrp
ja
push
lods
ja
mov
lcall
add
jae
stos
mov
pushf
jne
xchg
jp
xor
mov
pop
fcmovne
push
fisttpl
stos
int3
dec
je
in
xor
mov
cmpsl
jp
test
insb
out
xor
ret
adc
add
mov
outsl
xchg
fcomi
push
xor
repz
ss
pop
xor
je
std
lcall
repz
fdivl
aas
push
inc
cmc
mov
andl
popa
dec
into
adc
jno
out
dec
loop
xchg
fldt
fcompl
xor
int
sti
pushf
mov
mov
ror
stc
dec
add
mov
rcrb
int
and
cld
arpl
jmp
push
das
mov
mov
xor
or
adc
aas
sbb
inc
add
or
cli
rcrb
sarl
inc
xchg
and
xchg
adc
cmp
push
movsb
push
js
vandps
cmp
pop
mov
jno
ja
addr16
cwtl
mov
inc
xor
nop
jp
iret
fs
out
and
cwtl
inc
mov
lret
mov
pop
aam
adc
inc
enter
add
fistl
push
sbb
movsb
sbb
fists
mov
xor
cmc
outsb
inc
test
shrb
mov
and
lahf
sub
add
lret
test
scas
mov
sbb
push
stos
mov
ja
adc
loope
das
popl
lret
lcall
sbb
leave
pop
cmp
jge
loopne
adc
loope
mov
cmpsl
lods
sub
pop
and
loope
push
cld
repz
mov
pop
sahf
push
push
loopne
push
popf
lock
sbb
fs
jmp
mov
or
ret
insb
pop
data16
sub
inc
inc
cmpsb
push
shlb
mov
das
xchg
xchg
das
scas
call
dec
mov
enter
pop
enter
push
divb
not
mov
les
mov
xchg
popa
cmpl
xchg
sub
and
loope
fnsave
pop
ret
das
lock
inc
cmp
cmc
aas
push
aaa
scas
or
jbe
mov
mov
in
shlb
mov
rcrl
sarb
push
addr16
mov
mov
clc
mov
out
sbb
adc
sub
dec
sbb
cmpsb
mov
add
jle
outsl
andb
fnstcw
in
jnp
push
push
testb
add
test
popf
sub
adc
stos
push
test
inc
rcl
stc
icebp
mov
xorb
ret
jbe
sbb
ret
jl
xchg
enter
insl
enter
inc
cltd
out
fwait
loopne
and
rcr
bswap
outsb
cwtl
repz
push
insl
test
shrb
ss
push
lds
hlt
hlt
aaa
das
lahf
mov
pop
mov
popf
add
mov
pop
mov
push
sub
cmp
lret
repz
xchg
cmp
sbb
inc
cmp
sbb
sbb
add
adc
aad
cmpsl
dec
cli
les
std
divb
sbb
fs
iret
xchg
pushf
mov
mov
jns
stos
jle
mov
ret
dec
dec
cmp
xchg
xor
jne
dec
or
jne
shlb
std
sbb
adc
ss
gs
cmp
mov
aam
mov
xlat
jecxz
out
loopne
push
stos
or
mov
in
sub
xor
fistpll
std
mov
lds
add
push
adc
cmc
add
pop
mov
test
ss
fnstenv
jne
adcb
jbe
jge
movsb
ja
inc
in
cmp
add
sar
and
out
test
out
and
jnp
lahf
mov
sub
mov
dec
sbb
xor
sub
test
loope
cli
xlat
dec
or
js
dec
sub
pop
or
fnstcw
mov
sbb
mov
xchg
cmc
aam
cmp
sar
xchg
in
inc
mov
cltd
lock
dec
cmc
add
pusha
push
arpl
sub
inc
cmpsl
push
and
jl
fists
into
xchg
lahf
or
test
shll
and
fildll
aad
sahf
inc
jno
pop
sub
loopne
jno
jmp
mov
stc
xor
xor
lret
xor
pop
mov
xor
jle
popf
mov
cmp
stc
arpl
add
mov
push
popa
push
inc
ret
out
push
fdivrp
and
dec
push
push
add
push
test
jl
sub
aam
dec
stc
cs
int
sbb
xorl
push
fnstenv
int
ds
or
cmp
and
pop
inc
cmp
mov
mov
mov
and
add
xchg
push
cltd
push
int3
inc
add
xor
mov
iret
ja
lret
in
pushl
repnz
movlps
lret
push
clc
repnz
jo
test
mov
sbb
in
push
fsubr
mov
and
pop
ja
xor
test
je
jns
mov
adc
xor
push
cwtl
mov
sub
adc
xor
and
mov
cmp
fildl
mov
pushf
cmc
cmpsl
sub
pop
out
sbb
sbb
cwtl
out
cwtl
mov
xchg
ret
lahf
inc
adc
mov
dec
and
pop
orl
sbb
sar
jge
dec
push
pusha
xor
push
pop
xor
inc
int
test
lcall
mov
int
imul
cmp
fisubl
andb
push
mov
int
push
pusha
cwtl
cmp
fisubl
fdivl
lods
in
leave
and
dec
cmpb
test
enter
inc
mov
lods
addb
out
mov
hlt
inc
inc
mov
jmp
push
insb
subb
inc
mov
mov
pushw
mov
mov
or
lahf
ret
xchg
mov
adc
xchg
shl
xchg
cld
add
mov
mov
push
into
cmp
pop
clc
and
imul
loop
jge
js
xor
mov
jo
add
popf
cmp
loope
ds
mov
add
bound
sub
cmp
adc
inc
push
and
popf
enter
jle
mov
or
add
mov
push
jg
sbb
rcrb
ret
fsubs
cmpsl
cmp
je
insl
nop
xchg
jae
iret
lcall
lods
inc
lock
cmp
imul
js
xchg
sub
idiv
sbb
fisttpll
sbb
adc
mov
jp
or
idivl
push
add
jae
mov
mov
pop
fxch
dec
xlat
fucomp
xbegin
cmp
pop
loop
rcr
xor
cmp
cmp
negb
lds
aas
out
insl
add
dec
mov
mov
add
mov
dec
cmc
sub
imul
cwtl
test
aam
cwtl
inc
xor
and
incb
out
enter
cmp
cs
rorb
xchg
scas
cmp
jmp
adc
push
fldcw
js
fwait
add
jns
sbb
jbe
jecxz
mov
mov
out
dec
jne
mov
or
push
dec
rcll
push
push
iret
bound
std
in
push
leave
jmpw
repz
mov
scas
pop
movsb
jb
outsb
call
out
mov
popa
insl
aad
daa
mov
jae
dec
dec
daa
pop
push
cltd
dec
fdivrs
enter
ss
sub
mov
fcoms
jmp
ja
xor
ja
rcrb
cmp
mov
jns
rcrb
xlat
repnz
push
cmp
jbe
addr16
les
sarb
ficoms
leave
aaa
sbb
in
mov
mov
or
adc
imul
adc
inc
pop
rcll
xor
faddl
dec
or
cwtl
sbb
testb
jne
adc
or
rolb
in
sbb
sub
pop
cmp
je
lods
lcall
pusha
add
add
shll
lds
pusha
push
addl
fs
pusha
jns
push
mov
cli
fistl
xlat
jecxz
sub
test
push
xor
daa
push
inc
push
daa
pop
bound
dec
inc
and
dec
fwait
repnz
mov
mov
loope
inc
leave
and
daa
inc
cmp
push
mov
push
jnp
stos
shlb
push
xchg
aad
enter
mov
subb
adc
movsl
outsb
mov
adc
push
mov
outsb
xchg
sbb
fsts
popf
or
in
push
pop
add
cmpsl
cmp
mov
sbb
adcl
popa
test
add
daa
sub
mov
push
roll
fisttps
int
test
adc
fbld
adc
dec
sub
inc
cmp
mov
adc
xchg
mov
adc
inc
or
imul
mov
pop
mov
cmc
pop
dec
dec
jge
scas
lret
jnp
pop
jnp
ds
out
inc
mov
push
loop
outsb
mov
rcrl
inc
inc
lods
push
mov
iret
sbb
dec
sti
cmc
sbb
fs
mov
iret
xor
scas
mov
enter
pop
pop
cmp
mov
lret
subb
lods
mov
mov
fsubrl
jl
xor
add
sub
arpl
shrl
inc
xchg
mov
repz
lods
fucomi
test
and
cmpsb
les
lock
pop
ror
xchg
mov
push
rcll
cmc
dec
dec
xchg
or
and
outsl
sub
inc
mov
mov
mov
loope
mov
lret
in
mov
movsl
inc
gs
je
movsb
adc
dec
outsb
dec
adc
adc
inc
aad
inc
and
cmp
cmp
add
xchg
xchg
jne
jmp
fcoms
sbb
adc
in
mov
add
dec
lahf
lahf
fs
repnz
sbb
sarl
cmp
scas
or
insb
js
pop
enter
mov
clc
lahf
sbb
push
repnz
xor
aad
ja
push
push
enter
cs
aad
into
inc
jecxz
mov
lea
int
and
push
cmpsl
or
test
sub
js
adc
daa
and
daa
rolb
xchg
inc
xchg
sub
fmull
push
mov
cli
mov
nopl
outsl
fbstp
movsb
andnps
test
nop
pop
xchg
loop
int3
js
out
push
fimull
sahf
sbb
das
lods
mov
shl
inc
inc
mov
dec
xchg
or
cli
pop
in
inc
imul
xlat
mov
js
decl
into
mov
test
lods
inc
and
pop
add
in
adc
mov
call
push
outsl
imul
fwait
bound
lods
stos
xchg
pusha
out
fsub
repnz
sub
test
insb
leave
or
test
jmp
jne
cmpsb
dec
push
cmp
sahf
push
dec
or
push
inc
sbb
ja
jg
ret
mov
and
aas
int3
adc
push
and
mov
xchg
dec
sbb
or
fistps
xor
cmp
add
rcrl
add
das
sub
daa
scas
loopne
je
xor
cmp
mov
push
sub
sarb
imul
idiv
ret
lods
cmc
fnstcw
ds
std
xchg
inc
test
adc
pop
mov
sub
xchg
insb
lock
in
lea
sbb
inc
bound
adc
hlt
cmpsb
pop
lea
xlat
rorb
pop
add
pushf
add
mov
lock
jb
sbb
sbb
daa
mov
pop
fs
mov
push
and
lret
dec
mov
xchg
mov
jle
sbb
pop
push
lea
inc
sub
int
jbe
scas
push
xor
cld
mov
jb
data16
int3
adc
sbb
subl
and
lret
sbb
inc
fidivrl
fnstcw
mov
inc
xchg
jo
sbb
jg
inc
xchg
lods
addr16
out
mov
test
lds
je
stos
aad
lcall
ja
test
stc
inc
dec
adcb
clc
pop
cmp
xchg
mov
jae
add
aam
mov
mov
xor
std
push
pop
insl
adc
addr16
and
jmp
sbbl
and
shrb
sub
test
mov
lret
ret
clc
sbb
push
addl
push
hlt
cmp
movsl
lret
rcr
sub
sahf
sub
lea
fimuls
pop
sbb
fs
mov
xor
pop
sbb
add
into
sahf
test
jno
adc
add
lock
popf
xchg
sub
test
push
fsts
fsubrs
cmp
xor
les
cltd
insl
mov
pushf
enter
pop
iret
hlt
jo
je
movl
inc
inc
sbb
pop
jno
mov
xchg
lret
pop
ljmp
mov
mov
movsb
mov
pop
mull
mov
jecxz
insl
push
xchg
gs
adc
xchg
jmp
sub
inc
cwtl
out
pop
xor
pushf
adc
mov
mov
xor
xchg
mov
mov
mov
jno
sub
xor
js
add
inc
push
ficoms
mov
xchg
fisttps
js
enter
jb
push
xorl
into
cs
jecxz
stos
negb
pop
xor
movsb
xchg
jbe
gs
ljmp
call
xchg
lret
adc
aam
mov
cmp
bnd
test
sub
in
int
adc
jo
lahf
sahf
mov
and
and
cmp
and
inc
scas
mov
mov
int3
ljmp
shlb
out
and
stos
cltd
mov
cmpsb
inc
fsubrl
push
xchg
cmp
push
ss
cmpsb
mov
jl
subl
jns
dec
mov
orb
push
out
mov
pop
add
mov
stos
cli
mov
push
es
push
sbb
sub
icebp
icebp
pop
jmp
pop
lods
jl
shl
jle
jle
das
and
movsb
fwait
mov
pop
pop
scas
add
in
cli
dec
mov
aam
inc
pop
mov
cmp
shr
dec
mov
daa
push
mov
aaa
icebp
fimull
cmp
xchg
mov
cltd
or
pop
pusha
mov
push
jae
addr16
pop
jns
shrb
dec
iret
dec
insl
cmp
int3
or
push
out
inc
ret
adc
cmp
repz
or
sub
imul
jge
xlat
int3
dec
fidivrs
mov
sbb
sti
dec
fildll
push
jne
inc
mulb
aam
shl
ja
dec
cmpl
sub
mov
xchg
mov
adc
sbb
popa
sbb
lods
mov
daa
int
test
in
mov
dec
rclb
sbb
test
cs
inc
adc
loopne
sbb
mov
lret
in
sbb
enter
jp
pop
cmp
add
xor
clc
movsb
xor
dec
dec
add
cmp
sub
dec
notl
sbb
fnstenv
xchg
flds
or
cmp
xchg
inc
pop
jp
das
cmp
xchg
cmpsb
and
loope
inc
nop
lds
fs
sbb
test
inc
cmpsb
jmp
add
sbb
cmpsl
daa
jae
popf
pop
or
popf
mov
and
daa
xor
add
pop
iret
jnp
leave
cmpsb
loopne
sub
jne
movsl
mov
cmp
lods
mov
je
xchg
cli
xor
mov
mov
in
mov
xor
mov
clc
jmp
add
lea
test
aaa
ljmp
into
fsubr
ds
lahf
ss
es
std
inc
push
xchg
std
mov
lods
mov
ss
lds
mov
fldl
jg
loop
sub
jl
shlb
repz
lea
pop
jecxz
hlt
test
out
shll
or
shrl
push
dec
and
into
jle
mov
jge
and
push
adc
movsb
rclb
cmpsl
rcrl
cmp
pusha
cmp
fldt
sbbb
add
adc
daa
adc
add
cmp
xchg
ret
inc
cmpl
pop
mov
push
nop
into
dec
pop
pop
dec
sub
lock
dec
cs
ret
cmp
aad
dec
lods
cltd
inc
outsb
les
enter
dec
pop
scas
pop
lcall
ficoml
or
or
pop
dec
aaa
je
sub
xchg
cmpsb
inc
imul
fdivrl
cmpsb
xchg
cli
cmp
adc
ds
sub
inc
iret
ss
lahf
xchg
push
test
inc
or
fildll
push
xchg
or
dec
mov
dec
fs
fcmovb
out
test
jge
into
cmpsb
cld
jne
dec
jns
jne
mov
imul
iret
push
mov
mov
pop
movsb
cmp
inc
aas
lods
or
outsl
mov
sbb
push
les
popa
sub
jne
xor
and
cmp
sahf
jecxz
ljmp
shll
cmp
insb
mov
jo
scas
cmp
or
addb
jno
popf
fistps
in
mov
mov
icebp
mov
inc
mov
dec
idivb
subb
mov
loop
xchg
adc
add
xchg
jo
test
in
cmp
mov
jmp
rolb
fs
leave
xchg
sahf
xchg
repnz
inc
sbb
push
sbb
cmp
out
mov
inc
cwtl
arpl
push
lds
jnp
scas
fcomip
fldt
and
andb
jnp
bswap
lret
cmpsl
xor
ljmp
fiaddl
jo
mov
lcall
dec
rcrb
data16
sub
fldt
test
into
add
adc
stc
test
and
and
movsb
mov
fcompl
mov
mov
adc
pop
xchg
arpl
pop
push
out
push
mov
cmp
pop
insb
mov
ss
mov
in
xchg
fwait
movl
repz
adcl
dec
pop
mov
sub
dec
int3
cld
hlt
and
lahf
mov
mov
sbb
push
cmp
test
sbb
pop
aam
xchg
pop
sub
aas
xor
mov
jb
andb
out
push
push
xor
fidivrl
sbb
adc
xor
rcrl
into
out
stc
push
mov
fcompl
mov
xchg
lahf
cld
push
insb
sbbl
sbb
pop
in
and
fisubl
mov
add
not
mov
pop
les
mov
test
mov
sub
test
xchg
cmp
subl
mov
mov
mov
orb
pop
cmp
mov
xor
push
dec
in
add
pop
dec
inc
call
mov
jmp
add
decl
and
jp
add
adc
popf
mov
cmp
lds
mov
inc
push
loope
add
sub
popf
xor
push
inc
pop
ret
les
mov
daa
jecxz
lret
push
outsb
inc
xchg
push
ret
mov
cmpsb
gs
mov
xor
sbb
inc
mov
in
stc
sti
mov
incl
pop
dec
mov
stc
nop
dec
incb
jns
mov
outsl
and
adc
or
stos
xchg
loope
push
lock
cmp
fdiv
push
jae
push
inc
cmc
cmp
cmc
add
scas
adc
popa
mov
inc
insb
lods
xchg
cld
repnz
int
cmpsl
inc
stos
aad
and
aam
inc
or
sub
outsb
adc
add
mov
data16
test
dec
push
mov
mov
mov
fildl
mov
cld
lret
into
adc
mov
rolb
lret
sbb
jg
jo
icebp
push
push
pop
mov
xchg
mov
xchg
pop
cmp
fdivp
enter
mov
push
lret
pusha
and
shll
push
lock
fidivs
dec
cmp
and
cld
or
pop
jle
mov
add
adc
jb
dec
push
push
inc
loop
mov
mov
inc
xor
push
das
fidivrl
jno
ljmp
push
insl
dec
push
cmpl
pop
dec
adc
push
and
ss
mull
add
iret
mov
dec
cmc
mov
sbb
sbb
push
lods
stos
jmp
sbb
aad
add
cltd
mov
sbb
push
inc
ljmp
lcall
sbb
and
test
push
insl
inc
mov
cmpsb
inc
orb
je
jl
push
mov
imul
cltd
jno
sub
xor
or
add
ret
mov
out
or
adc
adc
sbb
pop
xor
pop
movsl
push
pop
mov
adc
xlat
adc
add
push
pop
pop
das
fistpll
adc
sub
adc
xor
inc
push
mov
push
iret
in
es
mov
add
icebp
inc
test
pop
les
jp
je
pop
xchg
sbb
cltd
icebp
mov
cmp
rclb
icebp
rcll
aaa
fwait
pushf
cmp
mov
popw
adc
stc
xchg
or
mov
inc
je
pop
dec
xor
mov
sbb
jnp
push
cmp
xchg
xor
or
movsb
lea
adc
ljmp
out
jnp
or
dec
push
inc
mov
push
je
js
outsl
xor
adc
lock
iret
fidivrs
sub
push
adc
pop
call
mov
faddl
dec
aas
add
xlat
lret
pop
std
mov
inc
lret
xor
mov
xor
lcall
add
popa
inc
jge
outsl
pop
pop
test
into
jmp
gs
lods
mov
dec
inc
jp
int3
add
xor
cmp
fidivrl
mov
push
xor
jp
cmp
test
xchg
sar
test
mov
and
jbe
mov
lret
mov
loope
and
mov
add
mov
cmp
icebp
insb
inc
cltd
fwait
mov
insb
bound
push
pop
test
imul
sbb
aad
pop
and
mov
subb
jle
inc
adc
stos
idiv
cmp
iret
les
inc
add
aas
add
mov
or
orl
dec
mov
xor
inc
cld
movsb
rclb
mov
cli
xchg
mov
mov
push
inc
adc
stos
adc
cld
imulb
pusha
addb
ficomps
inc
jne
and
push
in
rcll
imul
addr16
daa
stos
jle
lcall
fistl
nop
sbb
add
sahf
or
out
jns
dec
xor
pop
jns
adc
sub
fst
mov
cmp
pop
repnz
cmp
sub
jae
xor
inc
idiv
push
fsub
push
das
pop
xchg
jnp
fistpll
push
cmp
shlb
cmpsb
das
les
and
gs
jecxz
insb
xchg
test
xor
and
dec
push
andb
mov
jp
inc
lods
xchg
inc
inc
mov
xchg
ret
or
repnz
inc
sbb
push
add
pushf
scas
inc
fnstenv
mov
in
add
jae
xor
lret
cli
jg
jmp
cwtl
scas
mov
outsl
xchg
in
out
adc
or
andl
aaa
fs
in
cmp
dec
mov
loop
call
jp
mov
xchg
xchg
in
push
mov
mov
mov
push
sbb
lock
out
dec
sbb
int3
data16
arpl
push
sbb
pop
jae
adc
sbb
rcll
nop
sbb
mov
jnp
fbstp
mov
jae
int3
sbb
mov
pop
imul
inc
leave
divl
adc
shll
jp
lcall
add
in
into
daa
aam
mov
lock
clc
test
ret
nop
notb
xchg
pushf
nop
jge
bound
push
xchg
xor
addl
xor
add
and
pop
jmp
push
gs
cmc
ds
int3
fcoml
add
movsl
scas
ja
mov
aaa
fwait
lock
sub
xor
aas
pusha
int
adc
mov
popa
imul
das
xchg
sarl
bound
mov
loope
sub
cmp
adcb
fnstcw
cmp
ret
ljmp
mov
lea
cli
xchg
out
sbb
hlt
les
ss
pop
aad
sub
cs
stos
orl
push
dec
xor
sub
and
jle
add
pop
stos
subb
lcall
out
fldcw
nop
or
and
incb
imul
push
lahf
fidivl
jmp
nop
xchg
mov
lea
add
arpl
and
sub
enter
fdivrs
pop
jo
or
je
scas
adc
lret
dec
je
rclb
dec
js
mov
mov
dec
pop
mov
jne
fs
jns
shlb
push
sbb
ficoml
pop
pop
out
xchg
stos
and
test
cmp
cmpsl
or
mov
xchg
add
pusha
scas
aad
insl
or
test
dec
sub
inc
leave
vmovss
sub
ds
cli
adc
inc
movsl
mov
pop
cltd
mov
lock
push
xchg
aad
or
mov
mov
inc
movsb
ret
xor
sbb
mov
pop
adc
pop
call
adc
rcrb
lahf
and
sahf
add
xlat
xlat
popl
lahf
jne
sarb
mov
jmp
adc
mov
lods
sub
inc
out
gs
repz
je
sub
fsubrs
xor
inc
lcall
inc
mov
mov
xchg
push
sbb
popa
sub
loop
dec
pop
sbb
lahf
xor
adc
fistl
xchg
les
loopne
push
push
xor
into
loope
push
jbe
jno
outsb
or
cmp
std
sub
inc
jmp
push
lock
fstps
inc
dec
jle
shl
mov
shll
xchg
inc
or
dec
adc
xchg
push
popf
mov
data16
call
in
insb
inc
mov
out
stos
or
jl
hlt
aam
inc
mov
popa
mov
lret
sti
jmp
gs
xchg
pushf
movsb
icebp
cmpsl
and
cmp
incl
push
fistps
xchg
adc
push
andl
inc
icebp
xchg
or
push
insl
or
mov
cmp
mov
ljmp
mov
jmp
push
pop
popf
cmp
fstl
or
mov
aas
icebp
mov
sahf
divb
push
leave
call
ret
push
pop
int
mov
enter
divl
mov
jbe
data16
sub
pop
loope
imulb
pop
push
cli
gs
aas
pop
insb
ljmp
out
in
aaa
hlt
loop
clc
lods
dec
mov
gs
mov
mov
mov
jne
adc
xchg
in
pop
push
cld
ja
cwtl
adc
lods
divb
ljmp
in
push
cli
cmp
push
mov
movsl
cwtl
std
aad
cmp
int3
fcomi
fadds
call
add
daa
mov
stc
and
repnz
inc
and
lret
inc
push
xchg
invd
imul
adc
jb
fistpll
mov
adc
cs
cmp
mov
sbb
inc
fstpl
pop
pop
test
mov
mov
imul
cmpsb
mov
lods
and
xchg
outsl
lods
out
pop
ret
sbbb
pop
fisttpl
add
test
stos
das
in
rorl
loopne
push
add
test
fists
cs
xchg
sub
push
xor
push
in
adc
hlt
insb
jp
aas
xor
cs
and
inc
dec
sti
ret
xchg
and
push
cmp
das
or
std
bound
stos
dec
jmp
movsl
and
ds
add
jl
pop
mov
and
jo
ja
pop
lods
cmp
xchg
push
lea
ljmp
sti
dec
ljmp
fidivrs
subl
xor
sahf
pop
and
dec
int
pop
inc
mov
add
inc
sub
loope
into
movsb
in
xor
xchg
outsb
sar
sbb
push
dec
push
dec
push
mov
mov
ret
push
and
sti
jb
and
test
sbb
mov
loop
scas
stos
hlt
xor
out
push
inc
aas
sbb
popa
adc
in
lahf
bound
or
xchg
out
imull
mov
imul
mov
push
pop
jns
fiaddl
clc
xchg
leave
lods
or
adc
push
or
dec
stos
lds
mov
sahf
shll
mov
adc
aaa
jecxz
cld
ljmp
pushf
or
in
lock
sub
inc
shr
fstl
out
imul
fdivrp
mov
jbe
daa
out
pop
push
out
mov
cmpsl
adc
jne
and
add
push
or
pop
insl
push
scas
hlt
mov
scas
cmp
add
aad
xchg
repnz
xor
bound
jne
push
outsl
push
aad
jns
out
lods
iret
xchg
adc
sti
inc
jo
loop
in
ja
mov
stos
pop
xchg
xchg
pop
mov
insb
imul
cli
adc
lods
mov
or
out
xchg
xor
xchg
and
icebp
lods
add
jecxz
mul
xor
sarl
mov
pop
sub
and
dec
jbe
inc
jecxz
add
pushl
add
xlat
int3
loope,pn
aam
scas
cmp
rorl
jne
pushf
incb
jg
pop
lret
loop
adc
xchg
and
xchg
mov
imul
sub
fstl
mov
movsl
xchg
lock
sub
push
jl
add
adc
jne
orl
pop
jno
pop
add
movsl
fcompl
mov
xchg
or
lcall
ret
mov
rolb
push
mov
jo
fwait
jecxz
loope
mov
aas
bound
pop
or
lcall
sbb
adc
test
jge
je
scas
mov
fsubl
mov
add
rorl
lahf
fisttps
loope
ss
adcb
scas
inc
cmp
push
dec
das
lods
sti
jns
inc
xchg
popa
pop
xor
pop
and
enter
mov
and
or
aad
cwtl
popf
sbb
and
js
pop
push
dec
imul
lods
arpl
in
fisubl
xchg
out
aaa
icebp
ret
test
fs
stos
jns
cmpsb
inc
cmp
lcall
mov
jno
sti
int
mov
inc
clc
cmp
xchg
in
pop
sahf
jnp
shl
lods
test
aas
shl
pop
out
dec
add
mov
pusha
outsl
mov
fildll
cs
aam
icebp
xor
test
lea
or
mov
fsubrl
push
lea
xor
adc
adc
lods
sbb
out
sahf
add
and
jmp
dec
divb
jge
dec
pop
test
add
lahf
dec
into
push
adc
cli
lods
adc
xor
sub
adc
mov
mov
mov
aad
test
push
icebp
adc
xor
loop
and
xor
push
lcall
movsl
imul
mov
mov
gs
imul
sub
xor
sub
pop
or
sbb
pop
sbb
or
pop
cli
adc
add
jle
dec
push
icebp
imul
push
imul
lret
add
cmp
movsl
pop
in
in
icebp
out
lahf
mov
inc
xchg
sti
add
and
cwtl
add
add
jmp
xor
pushf
push
pop
pop
mov
out
fldt
dec
lods
add
mov
lahf
rcl
add
ja
lret
cmpl
push
mov
or
decb
hlt
mov
sub
in
out
leave
stos
jbe
shlb
fadd
jnp
movsl
inc
xor
push
mov
mov
fisttpl
pop
adc
mov
fcmovu
push
in
cwtl
loopne
xorl
movl
mov
mov
int3
mov
cmp
mov
mov
sbb
loop
fdivs
test
ljmp
pop
adc
dec
xchg
pop
xor
les
dec
cmpsl
inc
cmpsl
pop
ret
ds
leave
push
dec
mov
sarb
outsb
and
dec
jecxz
aam
push
push
hlt
xchg
aas
lea
orl
repnz
dec
stc
sbb
mov
mov
add
xor
enter
fcomip
dec
mov
mov
aaa
sbb
scas
sbb
arpl
mov
iret
jg
adc
inc
aad
mov
mov
dec
lcall
mov
int
jo
xchg
jmp
jnp
cmp
scas
push
lcall
jge
cmp
cmp
int3
arpl
dec
mov
fimull
in
nop
das
or
xchg
cld
jb
adc
icebp
inc
sbb
mov
mov
ror
cmpl
add
test
ja
insl
add
jmp
adc
sub
lret
dec
xchg
xchg
cmp
jp
push
cmpb
mov
cli
pop
mov
xor
or
mov
subl
or
mov
popa
jmp
sub
push
cmp
push
push
cs
jecxz
ds
scas
push
mov
mov
shlb
mov
imul
cld
lret
push
lea
push
fcmovbe
pushf
dec
daa
xor
test
jo
and
in
inc
cmp
push
xchg
sub
cmc
xor
sub
push
adc
jmp
add
adc
cmpsl
mov
cwtl
or
xor
daa
push
mov
sub
pop
mov
in
leave
jae
popa
pop
mov
scas
loopne
notb
enter
in
js
add
ljmp
stos
int
mov
push
xchg
lods
fisttpll
xchg
mov
scas
sbb
fidivs
in
jae
ret
cmpsb
xor
daa
insb
ror
dec
adc
movsl
sbb
enter
mov
into
jmp
out
inc
cmpsb
inc
xor
xor
xchg
mov
push
mov
mov
xor
pop
popf
or
push
mov
sub
mov
mov
dec
dec
into
inc
or
lret
out
push
lea
loopne
dec
cmp
pop
ljmp
dec
pushf
xchg
sbb
into
sub
sub
sbb
jl
rcr
push
lds
rorb
mov
cld
std
mov
jb
sbb
popa
mov
jl
push
dec
cmpb
mov
mov
testl
push
fs
inc
loop
lods
jb
jb
add
int3
mov
pop
push
xor
nop
jge
mov
xor
cmpsb
lret
fnsave
mov
dec
xchg
inc
adc
mov
add
mov
inc
pop
mov
sbb
xor
loop
inc
fisttpll
sbb
sub
into
push
cmpb
lock
mov
mov
sarl
cmc
xchg
mov
ljmp
mov
fucomip
dec
vmwrite
addr16
fwait
loop
stos
gs
outsb
xor
ljmp
cli
fsubs
adc
popa
xchg
xchg
or
inc
es
xlat
xchg
xchg
pop
push
mov
adc
lahf
iret
pop
enter
rclb
add
negl
stc
stos
pop
push
ljmp
rolb
cmp
pop
sti
and
xor
mov
insb
sbb
xlat
les
bnd
aaa
sub
ret
stos
xlat
or
cmpsb
pop
pop
sbb
sub
adc
cmp
adc
jecxz
jge
push
push
mov
mov
lcall
pop
push
test
mov
push
hlt
mov
xlat
inc
add
hlt
fnstsw
icebp
arpl
imul
repz
inc
test
pop
lcall
js
mov
ret
pop
fidivrs
jo
ret
add
aad
mov
lret
mov
repz
sbb
fcmovbe
or
fnstsw
pop
testb
adc
ja
rol
repnz
mov
mov
jbe
test
xchg
add
mov
ret
nop
shrl
mov
sub
sub
mov
adc
push
adc
fimull
xlat
mov
fistpl
jno
leave
cmp
je
addb
sbb
push
xlat
in
push
jp
pop
loop
lahf
test
outsl
shrl
and
fsub
insl
cmc
adc
jne
out
inc
pop
js
adcl
shll
cwtl
sub
jo
aas
cmp
pop
sub
xchg
cmc
cmp
xchg
push
and
sub
push
ja
sub
movsb
call
testl
cmp
and
scas
mov
jl
mov
enter
inc
push
inc
sarb
adc
dec
adc
test
and
fs
test
and
inc
arpl
stc
jo
lock
notb
jns
jne,pn
or
cs
jmp
mov
popf
es
inc
pop
mov
xor
testb
sub
pop
xlat
jb
stc
inc
pop
sbb
lcall
sahf
or
push
sarl
sbbl
push
dec
and
inc
mov
movsb
mov
hlt
xchg
std
into
cmc
and
stos
inc
cmp
add
shll
in
jp
mov
add
and
push
les
test
xchg
adc
xchg
or
pop
lea
fs
lahf
ror
sarl
xchg
test
xchg
xchg
ljmp
fisubrs
cs
adc
or
lcall
add
fsubrl
xchg
inc
add
cmp
push
lret
lret
ret
xchg
icebp
xchg
cmp
cwtl
pushf
mov
or
out
push
pop
neg
js
jg
jp
loope
ret
fs
inc
shlb
mov
imul
cmpsl
mov
cmp
push
lret
in
lcall
pop
lock
je
es
add
test
lds
out
sub
fbld
pop
push
mov
je
in
enter
fnstcw
test
dec
xor
mov
imul
inc
jecxz
or
push
mov
ss
push
xor
push
pop
cmp
add
or
pushf
movsb
je
fstl
test
jp
pop
mov
sub
jae
jg
mov
addr16
dec
sbb
mov
xchg
and
cmpb
sub
adc
fisttpll
xchg
xchg
aas
ds
insb
sbbb
inc
ret
es
enter
dec
xchg
test
dec
xor
pusha
loop
pop
add
inc
push
dec
clc
rorb
dec
jl
lahf
xlat
and
mov
sub
sub
xchg
mov
imul
aas
or
xor
fld
dec
das
push
rorb
test
push
sarb
hlt
mov
or
sar
and
loope
sub
cmp
mov
test
in
jg
inc
ret
push
js
addr16
sub
cmc
inc
pop
sbb
sub
test
in
das
arpl
push
pop
and
push
or
es
mov
jge
xor
jne
xor
gs
pop
lcall
and
and
xchg
ja
fmul
in
push
lahf
out
or
sbb
sti
je
sbb
je
bound
daa
jmp
sahf
test
pushf
cmp
lds
pop
cwtl
jle
mov
in
add
roll
jns
xor
aad
shll
sub
jae
sbb
dec
in
xchg
stc
mov
das
push
jge
and
jmp
mov
je
jbe
mov
testl
loope
sbb
jne
mov
loopne
imul
test
fsubrp
jnp
movsb
or
push
mov
inc
mov
gs
pushf
push
inc
mov
lahf
addr16
push
scas
mov
cmpb
imul
dec
ja
ret
adc
adc
xor
out
pop
or
and
out
outsb
arpl
lret
lods
and
lret
or
sbb
fcomip
jmp
jp
pop
cmp
pop
mov
cmpsl
stc
nop
push
and
inc
mov
repz
pushf
imul
xor
and
xlat
pop
jp
idivb
jbe
xor
xchg
mov
inc
lahf
push
push
xchg
inc
inc
jnp
xchg
addr16
xlat
or
fiadds
leave
fcoms
aas
xor
cld
test
push
out
sbb
adc
mov
push
shrl
mov
mov
in
lret
gs
adc
dec
dec
mov
dec
jecxz
jmp
push
iret
jmp
pop
add
pushf
sbb
aas
test
lret
nop
in
rolb
pop
scas
out
sbb
sub
and
xchg
sbb
push
cmp
add
mulb
aaa
adc
fs
inc
xchg
adc
or
nop
ret
gs
xchg
push
vminps
cmpsb
push
sub
mull
dec
test
jge
fnstsw
lret
sub
ds
dec
sbb
or
aad
pop
push
int
leave
jge
ss
push
or
fcom
in
inc
inc
push
mov
push
dec
and
mov
mov
outsb
mov
movb
bound
mov
mov
jbe
sti
inc
xchg
testb
cmp
jg
outsb
sub
rcrb
add
gs
push
in
aam
in
dec
jno
push
mov
ljmp
and
fistps
lret
or
in
sub
and
mov
sti
pop
rcrl
fwait
xchg
in
mov
mov
and
lock
mov
xor
push
ds
lock
add
lret
sub
popf
and
and
push
add
or
xchg
mov
cmp
and
mov
mov
sbb
inc
out
sbb
pop
cltd
lods
sbb
adc
mov
shll
pop
sub
pop
sub
ds
dec
mov
inc
mov
pop
iret
jb
loope
test
xchg
cwtl
test
add
push
sti
icebp
adc
sub
xor
daa
daa
mov
shll
sub
sti
or
sbb
or
mov
ret
inc
lock
lods
andb
push
paddusb
lret
cld
mov
push
rolb
outsb
iret
push
add
lret
sub
fadds
mov
and
imul
aaa
cld
sub
lret
cmp
jo
inc
rorl
ror
and
sahf
mov
or
push
cmp
adc
fwait
js
arpl
addb
jl
dec
mov
xchg
fisubrs
and
or
fidivl
sbb
cmp
mov
enter
test
popf
add
or
mov
rcrl
hlt
sub
sbb
fucom
clc
push
lods
clc
lds
cmpsb
push
addr16
das
outsb
push
mov
fdivrl
push
fsubl
inc
icebp
rol
jns
rorb
sarl
lods
push
xor
fs
push
sbb
adc
mov
adc
pop
nop
jnp
add
addb
and
inc
xor
in
leave
aad
pusha
aam
xorl
and
xor
fucomi
hlt
into
jle
pop
mov
push
negb
arpl
stos
jecxz
mov
dec
insl
rorb
push
mov
xor
mov
movsb
in
add
test
addb
mov
int
iretw
or
cmp
ret
and
in
in
dec
cld
inc
jne
aam
mov
add
or
add
dec
xchg
loopne
pop
and
test
addr16
shll
aad
add
cmpsl
mov
cmpsl
dec
loop
pusha
call
daa
xlat
push
pop
push
xor
push
negb
das
rcrl
jbe
xor
lea
dec
mov
push
mov
mov
outsb
repz
stos
inc
pushf
push
gs
rol
sub
sub
aam
xchg
pop
cmp
push
xor
or
orb
jbe
adc
pushf
dec
dec
dec
scas
loopne
jmp
popa
shll
test
cmp
sbb
mov
pop
push
adc
divl
pop
mov
xchg
mov
shrl
aas
jo
mov
enter
jnp
dec
push
mov
jo
es
out
jno
mov
call
add
popf
adc
clc
test
xor
jle
shlb
shll
dec
mov
jmp
mov
xor
dec
or
jno
in
push
mov
xchg
adc
sub
cmc
push
scas
jle
mov
cmp
sub
xor
push
jecxz
scas
dec
cwtl
sti
clc
sub
cmp
jns
jnp
mov
xchg
sub
rol
out
or
es
mov
sbb
repnz
in
mov
push
lods
and
adc
in
push
push
fcompl
mov
dec
jne
jb
sbb
scas
pop
xchg
cmp
testl
out
push
push
outsb
movzwl
in
adc
mov
adc
cwtl
push
push
pop
xor
cmp
mov
mov
dec
mov
shrl
cmp
decl
mov
scas
call
inc
leave
shll
dec
sbb
xchg
lahf
add
int3
jb
rorl
jl
popa
adc
pop
jge
mov
sub
inc
js
popa
ret
mov
dec
sbb
pushf
push
mov
or
addl
cmovle
pop
inc
jecxz
mov
aam
loop
sub
mov
addr16
stc
imulb
out
cltd
xor
fstpl
movsl
je
mov
leave
scas
dec
jg
cmp
test
aaa
mov
jno
test
loope,pt
mov
lcall
pop
fcmovb
dec
mov
inc
fmull
xchg
and
pop
ss
pusha
and
push
mov
pop
and
mov
jge
push
mov
jno
into
add
cmp
outsb
cltd
lods
add
call
in
aad
push
jl
call
mov
in
stc
xchg
adc
mov
std
clc
and
mov
inc
outsb
mov
mov
fisttpll
pop
lea
xlat
push
gs
sub
dec
cmp
nop
pop
push
data16
scas
sub
js
nop
lock
nop
push
jp
cmp
and
sbb
pop
std
cmpsb
test
mov
aaa
and
loop
arpl
pop
das
insb
fwait
cs
insb
aaa
push
clc
mov
mov
jg
leave
xchg
and
outsl
or
faddl
or
aaa
push
imul
dec
sbb
fs
ret
xor
or
ds
icebp
cmp
cmp
jecxz
push
mov
or
and
mov
shrb
mov
movsb
jl
ljmp
cmpsl
ror
lcall
push
mov
push
call
cmp
int
jno
repnz
cmpsb
adc
pop
cld
test
push
mov
test
dec
adcl
xchg
ss
add
aas
and
mov
and
push
or
cld
out
stc
inc
pop
dec
popl
xchg
sbb
adc
add
sbb
mov
mov
xchg
repz
es
clc
jecxz
mov
pop
outsl
test
sub
jge
adc
test
mov
add
fidivs
outsb
cwtl
xchg
or
cmp
int3
stc
ljmp
es
mov
xchg
fdivrs
or
sub
sbb
push
jmp
repnz
jb
int
pushl
into
cmc
dec
mov
mov
cmp
xor
xor
jle
xor
pop
or
inc
or
fs
mov
mov
sub
jl
js
popf
adc
test
sbb
xlat
sbb
lret
pushf
aaa
push
cmpsl
fldt
xor
cmc
lock
jg
iret
fwait
pop
addps
ja
mov
sbb
dec
jnp
out
rolb
mov
push
repnz
and
vmwrite
fwait
dec
and
xor
mov
mov
and
movsl
pushf
mov
das
jmp
adc
sbb
fsubrl
dec
aas
imul
aas
pop
jbe
repnz
out
lea
loop
insb
adc
out
ret
out
or
or
hlt
enter
fwait
pop
hlt
in
cltd
ss
mov
addb
jl
dec
in
pop
repz
sbb
repz
mov
pop
mov
je
es
out
popf
gs
adc
dec
lcall
add
ja
mov
fsubr
pop
pop
sbb
movsl
ds
jmp
ss
sti
test
push
pop
sub
cld
setns
lret
jl
fdivrs
pop
inc
outsb
xor
movsb
div
xchg
jg
sbb
cld
pop
repz
leave
data16
dec
jae
or
int
or
ljmp
adc
cmp
inc
and
sub
mov
iret
add
and
daa
jno
js
lea
inc
mov
fcom
add
stos
loope
repnz
cs
mov
pop
frstor
sub
cwtl
js
push
dec
idiv
loopne,pt
arpl
pop
sahf
lret
stc
nop
jmp
repz
mov
lahf
xchg
sub
add
mov
stc
push
mov
loope
scas
lret
mov
inc
mov
xchg
jnp
cmp
push
cmp
jge
or
push
jbe
push
mov
mov
or
jne
and
rclb
mov
lds
fwait
xor
loopne
inc
inc
and
and
faddp
lahf
insl
jmp
leave
lret
cli
stos
dec
fsubl
pop
popf
test
out
and
fisubrs
jbe
clc
lea
cld
sub
jno
dec
sub
dec
push
sbb
xchg
rcll
push
inc
sbb
sbb
xor
mov
lock
xchg
mov
inc
jg
add
mov
or
test
loop
or
and
dec
adc
out
std
jo
dec
shl
int3
imul
rcll
fwait
xchg
fbstp
sub
sub
subl
cwtl
cmp
loopne
sub
add
mov
mov
std
jle
sub
fimuls
fstl
fs
push
loopne
inc
jb
jne
lock
daa
leave
inc
test
fmul
sbb
popa
push
addb
daa
cmpb
das
inc
into
xchg
outsb
jle
fwait
cltd
lods
add
mov
mov
inc
testl
inc
dec
inc
loope
call
ljmp
pop
bound
out
dec
stos
pop
xchg
or
jp
loope
xor
xchg
xor
rorb
pushf
stos
repnz
movb
repnz
inc
mov
adc
aam
sub
sub
stos
addr16
daa
mov
xor
mov
aas
sub
lods
ss
mov
mov
test
lahf
push
mov
fucomip
cmpsb
mov
in
test
cld
inc
fdivr
adc
jbe
push
mov
icebp
or
fcmove
pop
daa
inc
insl
clc
lods
fsubl
iret
pop
sub
push
imulb
pop
ficoms
imul
xor
and
lds
les
lds
arpl
and
les
and
lea
and
nop
ret
loopne
cmp
push
in
ljmp
sbb
fldenv
xlat
bound
aaa
iret
dec
adc
jmp
cs
and
test
addr16
sub
fwait
xchg
jnp
add
dec
sbb
movb
add
dec
imulb
cld
arpl
repz
xchg
idivb
neg
cmpsb
roll
jecxz
stc
push
dec
push
les
lods
lods
inc
pop
out
cmp
movsl
dec
loop
or
mov
lea
fs
dec
mov
xchg
sbb
push
adc
cld
jns
xchg
or
in
or
imul
jae
mov
adc
dec
test
or
dec
leave
pop
movsb
loope
push
cmp
sbb
lret
mov
mov
mov
xchg
jmp
scas
rorl
inc
das
adc
mov
sub
add
sub
sbb
arpl
les
and
dec
xchg
add
dec
jae
jne
and
pusha
xchg
dec
cmp
pop
pop
jo
mov
push
jg
ss
dec
cwtl
mov
jp
or
fs
inc
sub
cmp
pop
movsb
jb
dec
mov
sub
stc
pushf
mov
lea
xor
hlt
rcr
jmp
xchg
mov
sub
pop
add
aad
xor
push
cs
mov
into
pop
mov
aad
add
enter
sahf
scas
or
addr16
jmp
lahf
lret
jns
rcll
cli
sbb
test
shll
mov
jnp
xchg
xor
xor
push
cmc
mov
mov
or
mov
aad
lahf
xchg
pop
mov
les
jns
jo
sub
popa
xor
pop
dec
pop
setle
push
mov
in
mov
cmp
and
rorl
rclb
mov
xchg
daa
in
shlb
aas
push
sub
push
out
lret
jge
jbe
jp
push
test
test
cmp
lret
icebp
add
fdivrs
push
pop
fisubrs
adcb
andb
flds
or
repz
mov
push
add
mov
das
xor
mov
cmpsl
inc
adc
aam
sbb
cli
mov
pusha
iret
and
cli
xchg
ror
xchg
data16
ss
lods
repnz
test
or
xchg
push
sbb
push
mov
repz
subl
sub
lods
lahf
cli
aas
cmpsl
push
addr16
pop
push
stos
add
test
mov
orb
popf
xor
adc
sbb
jl
xor
jmp
gs
mov
pop
std
or
push
fxch
mov
cmc
jnp
adc
je
inc
xchg
fisttps
gs
pop
int3
out
inc
negl
lret
add
fbstp
dec
jae
lds
mov
push
mov
jecxz
aad
fstpl
inc
sbb
inc
out
repz
loope
movsb
and
xchg
int3
das
sar
ja
lock
out
aas
insl
mov
test
repz
xlat
pop
in
add
xchg
inc
cmovb
sbb
shll
cltd
jno
and
outsl
jno
and
leave
mov
xchg
faddl
xchg
pop
std
push
dec
xchg
push
ret
xor
and
ljmp
mov
movsl
int
aas
out
mov
call
push
mov
push
inc
or
sbb
push
sub
mov
adc
imul
xor
sahf
stc
xchg
mov
mov
jno
inc
xor
shl
je
fnstcw
sbb
inc
leave
or
cld
lret
cwtl
out
daa
add
adc
xchg
or
jbe
mov
dec
scas
mov
loope
mov
sbbb
movsl
repnz
push
inc
pop
mov
cmp
insb
shlb
orb
imul
ds
mov
jp
xor
jo
hlt
lods
loopne
in
mul
adc
fs
fldcw
fsubs
adc
xchg
mov
cmp
jno
mov
sub
mov
jb
add
and
test
call
idivb
xor
in
test
movsb
pushl
pop
fstpl
cmp
cmp
shl
insb
xor
cmpsb
mov
xchg
bound
dec
mov
arpl
inc
adc
test
fs
push
insl
dec
mov
xor
fdivl
dec
push
adcb
test
int3
or
sub
jg
ret
jle
xchg
xchg
ss
jns
xchg
aaa
xchg
or
popa
sbb
daa
mov
loope
adc
fdivrp
and
jnp
push
push
jnp
in
push
sti
iret
mov
mov
jecxz
or
sub
inc
ror
call
xchg
repz
or
addr16
lahf
nop
jo
and
mov
pop
fstps
lock
enter
ret
xchg
addr16
stos
test
loope
fidivrs
push
sub
dec
dec
into
add
mov
filds
divb
pop
out
cmpsb
jmp
inc
cmp
xlat
mov
push
inc
jmp
je
jbe
push
daa
sbb
push
jge
sub
aas
mov
push
xor
div
xor
movsl
shrl
arpl
mov
and
ret
inc
mov
inc
ds
and
jge
lock
aaa
lea
push
imul
insl
sub
mov
test
mov
push
xchg
sti
xor
lds
adc
pop
inc
aaa
mov
push
daa
add
push
cmp
xorb
sbb
jns
cmpb
test
add
pusha
adc
fs
xchg
int
jg
in
cmpsl
mov
pop
inc
mov
call
sbb
add
lahf
jo
mov
mov
or
mov
jbe
fcoml
sub
mov
fdiv
xor
jle
fistpl
xorb
packuswb
mov
fs
repnz
cmp
lcall
inc
cmp
pop
mov
jnp
loope
stc
scas
xchg
lahf
fsubl
xchg
mov
push
mov
xchg
lcall
xchg
inc
pop
mov
push
pushl
mov
cmp
jo
data16
je
mov
mov
mov
add
mulb
lcall
aad
mov
inc
fs
cmp
pop
mov
movsb
fildl
inc
adc
jo
inc
dec
xor
icebp
lahf
insl
or
stc
jbe
inc
subl
mov
push
xor
icebp
rcrb
push
pop
stc
mov
loopne
in
mov
test
mov
test
iret
adc
inc
frstor
arpl
sbb
sahf
add
insb
inc
cs
leave
pop
sbb
imull
idivl
mov
xchg
insb
aam
fisttps
add
cmp
jno
add
add
inc
enter
ret
andl
add
pop
pop
and
push
lods
repz
in
sbb
mov
insl
aad
push
test
and
jno
clc
sbb
popf
lahf
lods
xlat
jp
ror
mov
add
lods
mov
mov
mov
adc
pop
cmp
push
pusha
jp
cwtl
inc
jbe
das
jg
sbb
out
mov
jne
jo
ss
loopne
cmp
mov
or
mov
icebp
adc
pop
fs
pusha
xchg
mov
mov
insl
mov
push
inc
jo
mov
imul
jmp
rcrl
daa
sbb
or
in
sbb
pushf
sbbl
dec
nop
insl
dec
xor
loope
fiadds
lds
jg
add
daa
dec
sahf
mov
sbb
add
xchg
jne
ficoms
xchg
xlat
lcall
xchg
in
std
iret
scas
mov
mov
push
sub
jno
and
call
je,pt
mov
pop
mov
into
pop
es
into
add
xor
sub
push
test
sarl
aaa
fimull
testl
lods
loop
jge
loope
loopne
add
cwtl
push
and
xlat
cs
shrl
xchg
arpl
mov
stos
add
aam
ljmp
rorb
add
insb
int
cmp
dec
jge
sbb
shl
bnd
dec
js
faddl
sti
xchg
stc
notb
mov
sub
mov
cmp
mov
loope
push
cmpb
add
push
pop
lds
adc
mov
out
lock
push
mov
and
scas
push
cmp
add
jns
add
and
dec
lret
xchg
inc
loop
adc
push
mov
sub
enter
push
insb
add
jb
dec
mov
jne
mov
mov
xor
jnp
stc
inc
push
ror
xor
cwtl
push
ds
inc
xchg
jge
xor
mov
lret
mov
lea
add
inc
mov
sub
fwait
xchg
icebp
push
dec
lods
out
ljmp
stc
mov
loop
rclb
sbb
jl
or
stos
mov
scas
jns
xlat
cs
dec
aad
adc
jmp
jae
ja
jo
lock
xor
testb
stc
rcrb
xchg
es
push
in
cmc
and
sub
push
push
in
sub
fs
shll
pop
aaa
and
xorl
pop
xor
jmp
add
fnstenv
call
aad
mov
aaa
outsb
or
test
jns
mov
iret
out
push
int3
or
and
loop
iret
fstps
aad
mov
cmp
push
out
std
out
pop
imul
xchg
jmp
daa
fs
sti
dec
jnp
pop
push
cmp
addr16
aad
movsb
xor
sub
or
out
add
dec
mov
neg
data16
cmp
mov
addr16
sbb
jne
xchg
pop
movl
into
out
sub
aas
jae
jne
push
sub
mov
or
test
shlb
mov
mov
xlat
add
ss
ret
sahf
fcmovbe
add
leave
mov
or
repz
xchg
loop
xchg
xor
inc
das
push
add
xchg
mov
lods
jbe
dec
call
cmp
jecxz
call
stos
js
out
pop
les
rolb
aad
enter
dec
jp
pop
pop
jecxz
mov
mov
aas
xorl
mov
aam
push
or
frstor
xchg
ss
mov
dec
pop
call
jno
and
xorb
mov
sub
mov
pop
arpl
orb
loope
pop
add
jmp
inc
xor
mov
jb
ret
jae
imul
iret
and
sub
pop
or
in
adc
and
daa
jge
sarb
pop
insl
ret
xchg
jb
pop
pop
jne
add
inc
jbe
rolb
xchg
test
test
dec
loope
xchg
fisubs
out
push
cmpsl
push
faddl
stos
sub
stos
lock
inc
cmp
fists
xchg
lods
adc
scas
or
mov
jo
mov
cmpsl
fs
sbb
shlb
cmp
mov
xchg
popa
xor
movsb
cmp
int
daa
bnd
cmp
xchg
mov
sbb
int
shll
orl
fldz
dec
cmp
repz
call
fnstcw
lret
jmp
in
jae
les
xchg
mov
pop
jbe
jmp
into
in
imul
jmp
hlt
enter
jmp
xor
adc
cmpsl
pop
popf
dec
stos
dec
out
mov
xchg
inc
xor
jg
data16
add
arpl
adc
lahf
mov
jns
xor
mov
push
adc
sahf
sub
ja
hlt
repz
pop
lods
cmp
mov
cmc
and
sub
sbb
mov
dec
sbb
int
adc
dec
enter
jb
adc
xchg
fwait
mov
ror
call
sbb
shlb
aad
aam
xchg
in
push
jnp
jo
adc
mov
adc
dec
stos
fsubr
fdivrs
out
and
sbb
dec
xor
es
insb
call
mov
loope
dec
pop
aad
dec
insb
xor
int3
stos
outsl
xchg
pop
xchg
jg
mov
jb
add
sub
xchg
hlt
ror
std
loop
jo
sti
mull
out
sbb
dec
push
xchg
pop
xorb
jns
subl
mov
jo
lods
ret
push
xor
pop
mov
add
add
sub
loope
mov
cmpsl
ret
mov
movsl
add
call
pop
jb
mov
pop
rorb
xchg
into
pop
nop
outsl
movsb
loopne
cmp
jg
add
sahf
scas
adc
fldcw
outsb
pop
mov
das
jo
cs
cld
das
ss
inc
aaa
mov
jae
push
cmc
xchg
sub
xor
push
test
decl
adc
fbstp
arpl
dec
push
sbb
mov
pop
daa
xchg
shll
dec
roll
push
sahf
sbb
in
popa
ja
das
cltd
xchg
jg
cmpsl
mov
inc
idiv
mov
filds
clc
cmpsl
data16
clc
hlt
cmp
dec
add
and
cmp
rolb
outsl
cmpsl
xchg
inc
pushf
mov
dec
pushf
inc
repnz
mov
movsb
fimuls
leave
dec
and
lock
int
inc
xchg
add
lcall
inc
adc
loope
aad
lds
jb
adc
adc
dec
add
outsl
mov
lret
mov
pop
mov
adc
inc
jae
imul
hlt
cmp
xchg
pop
mov
sarl
movsl
aam
xchg
aas
fwait
mov
test
jle
lock
stos
mov
out
pop
movsl
lahf
xor
pop
xchg
add
icebp
xchg
idivl
imul
sbb
xchg
mov
flds
push
repnz
mov
scas
imul
xor
xor
add
psubw
jne
leave
test
adc
cs
dec
out
sub
dec
push
push
mov
lds
jle
pop
xor
cmp
cli
push
dec
xchg
fwait
lahf
bound
push
mov
cltd
mov
mov
sahf
jmp
fdivl
inc
cmpsl
hlt
outsl
je
pop
adc
jg
mov
and
rcll
add
mov
fidivrl
stos
movsl
push
jns
cmpsb
push
lods
mov
fists
inc
rcrb
adc
mov
out
dec
mov
inc
adc
inc
dec
mov
in
xchg
mov
adc
adc
insb
inc
imul
cmpsl
mov
xchg
xor
add
jecxz
pop
xchg
sub
xlat
inc
sbb
scas
pop
cmp
sbb
add
out
dec
jp
sub
out
pop
dec
in
mov
shll
call
pop
lret
arpl
popf
mov
sub
or
xor
enter
jg
cmovs
dec
int3
cmc
mov
jno
test
or
cltd
mov
xchg
push
loope
aas
clc
rorb
das
nop
mov
stos
and
sub
cmpsl
and
cld
and
lods
or
ds
sub
sub
or
ljmp
or
cmp
xchg
and
xorb
mov
fldl
push
xlat
clc
jne
inc
xchg
xor
mov
scas
adcl
mov
xchg
pop
mov
jle
dec
stos
xor
test
mov
fs
ja
push
push
mov
out
adc
push
cmp
xchg
mov
call
jae
pop
mov
lods
repnz
lds
jge
icebp
xchg
jbe
sbb
out
in
cmp
repz
adc
and
mov
push
mov
clc
into
mov
shl
fstl
mov
xor
loope
test
ss
mov
aas
aaa
int
jno
fistpl
cmpsb
push
ret
or
xchg
aam
mov
push
cmpsl
dec
call
mov
int
dec
sub
pop
fs
jno
or
jle
add
sub
dec
movsl
popf
call
test
addr16
in
popf
sbb
jno
arpl
mov
icebp
fwait
inc
fdivrp
sub
add
inc
inc
fwait
mov
inc
cmp
cmp
dec
pop
push
test
pop
jno
adc
jl
pop
jmp
cmpl
sbb
into
mov
push
shlb
leave
jb
dec
test
and
jno
mov
idivl
pop
sbb
jo
mov
xor
pusha
jg
sub
jl
or
sti
fists
div
mov
pop
mov
xchg
mov
loopne
fsts
jle
std
cmpsl
scas
add
mov
and
lahf
dec
loopne
inc
es
aaa
mov
ja
mov
pop
iret
movsl
fadds
aam
ss
scas
sub
into
jne
mov
rorb
mov
cmc
jb
xor
testb
xor
pushf
xlat
jbe
icebp
mov
mov
and
sub
pop
insl
stos
movsb
ds
cmp
add
fsubs
mov
shrb
rcll
ds
jg
lds
xor
jl
stos
push
xchg
bound
shll
das
repz
mov
jo
jo
ja
mov
stos
fucom
or
idivb
scas
out
sub
pop
loopne
icebp
sbb
push
fld1
mov
sub
js
sub
mov
mov
cli
mov
xchg
dec
cmc
add
jg
outsl
int3
cmp
mov
mov
dec
push
and
lds
dec
hlt
bound
pop
xor
insl
cwtl
pop
xor
xchg
ret
fisubs
daa
mov
mov
jle
loopne
in
std
cmp
mov
xchg
je
cmpsb
xlat
pop
push
mov
fstps
inc
add
addb
lds
outsl
aas
and
movsb
inc
mov
push
jne
add
out
xor
mov
shlb
fld
sub
pop
or
or
add
dec
inc
push
int
inc
test
xchg
xor
mov
mov
push
xchg
xchg
jb
in
imul
insl
sub
out
jl
xchg
ja
push
lcall
jg
push
push
and
mov
mov
mov
les
cltd
push
xchg
in
xorb
ljmp
adc
and
inc
jae
inc
fistps
dec
push
es
pop
xor
cltd
repz
pop
es
daa
lcall
int3
fisubs
sbb
js
mov
xchg
xchg
xchg
xor
scas
cld
and
outsl
ja
xchg
ret
repnz
xorb
jp
movsl
imul
out
or
test
adc
pop
shl
jecxz
popa
test
inc
pop
fadd
cli
jbe
xlat
mov
inc
sub
push
xorb
js
pop
mov
bound
in
lret
sbb
lret
inc
push
sbb
iret
lods
int
xchg
xchg
ljmp
and
jb
jle
sbb
inc
lods
ret
and
xor
adc
fcmove
dec
sub
test
sub
insl
dec
cmp
push
loopne
mov
mov
into
or
mov
fidivs
push
xchg
lret
outsl
add
xchg
sub
call
pop
cli
imul
or
jp
gs
adc
iret
cmp
test
inc
imul
fnstsw
xor
xchg
fidivrl
mov
mov
out
and
enter
dec
jno
pop
sbb
hlt
inc
ret
ja
mov
mov
or
fmull
lods
fadd
leave
jno
mov
lds
in
push
adc
movsb
clc
pushf
mov
lods
jl
imul
jp
sbb
push
mov
cmp
popf
mov
push
ja
dec
xchg
and
stos
repnz
sbb
inc
sbb
outsl
xchg
test
push
mov
push
repz
std
inc
mov
dec
push
mov
popa
mov
lods
imul
jno
loop
cli
in
jb
dec
imul
xchg
dec
inc
cmpsl
xlat
mov
and
inc
ljmp
sbb
pushf
add
sti
pusha
jne
push
mov
jnp
push
in
sbb
fisubrs
adc
or
xor
fnstcw
daa
out
push
cmpsl
jo
pop
xchg
pushl
and
and
jp
add
clc
pop
push
mov
sti
movsl
jnp
or
jb
repz
pop
mov
loopne
stos
add
stos
lret
je
fdivr
cmp
lods
lahf
adc
int
rcll
shrl
jbe
push
scas
mov
jle
lods
dec
xor
mov
push
xchg
mov
scas
lea
cmp
xor
inc
out
push
mov
jb
jg
aas
mov
movb
jmp
pop
xchg
repz
lods
xchg
push
aad
inc
mov
rclb
xor
xchg
clc
lods
scas
or
incl
call
cs
sarl
cmpsb
std
loope
aaa
pop
or
icebp
xor
jne
mov
jle
xchg
jns
stos
mov
adc
in
push
jae
ror
jp
arpl
mov
mov
filds
xor
jns
add
jb
rclb
pop
mov
inc
push
scas
dec
into
xchg
test
roll
aad
lret
jb
add
unpckhps
lea
ds
push
pop
xchg
das
loopne
aad
push
in
jl
negl
loope
mov
fcompl
pop
in
inc
scas
add
adc
jge
daa
hlt
dec
cmpsl
inc
xchg
push
icebp
aad
push
stos
dec
int
mov
mov
mov
ja
testl
xor
pop
rcrb
sbb
cmp
enter
imul
push
pop
and
popa
fisubl
mov
and
add
ja
aad
mov
out
stos
outsl
jmpw
mov
fcomip
mov
pop
mov
mov
sub
push
xchg
int
mov
pop
fwait
lds
jb
pop
pop
inc
insl
mov
stc
shl
shlb
pop
out
lret
mov
in
sahf
inc
in
pop
leave
adc
cmp
aaa
push
fstpt
bound
sub
popf
mov
movsb
addr16
testl
jbe
les
inc
arpl
fldenv
and
xchg
sub
jns
sub
mov
je
dec
sarb
in
cmp
cmp
mov
insl
imul
in
imul
rorl
cwtl
test
cmp
lea
pop
aaa
inc
jg
xchg
jno
imul
mov
or
loopne
ror
xor
inc
cmp
add
leave
cs
leave
lret
pop
xchg
pop
push
repnz
and
dec
mov
std
pop
jne
mov
std
aam
mov
js
lret
movsb
add
out
ljmp
pop
sahf
and
sahf
aaa
or
cmp
das
mov
bound
fcomps
test
movsl
lds
mov
nop
jmp
js
push
shl
aaa
mov
notl
mov
and
andb
xlat
mov
pop
jmp
cwtl
aad
lods
and
sub
inc
xor
arpl
push
arpl
mov
cmpsb
jae
xchg
fldenv
aad
mov
xor
call
jo
ss
pusha
loope
mov
ret
sub
pop
xor
or
sub
js
add
add
mov
in
cmp
into
loope
pop
push
shll
cmp
loope
clc
sti
insb
jo
jp
jae
mov
sbb
loop
ficoml
push
and
sahf
jb
add
mov
out
in
mov
iret
test
mov
je
shr
fs
mov
fs
faddp
mov
push
jl
test
jno
into
js
push
xor
jns
mov
cmp
add
adc
add
data16
mov
mov
sub
bound
fistps
xchg
insl
out
cmc
out
je
inc
or
xchg
and
inc
cmp
pop
lods
xor
into
xchg
lahf
inc
fdivrs
push
scas
inc
arpl
xchg
xor
mov
jbe
push
sarl
or
sub
jmp
ds
ret
mov
pusha
js
jmp
dec
sub
inc
shll
mov
mov
or
jb
jle
dec
add
xor
jl
push
or
lods
repnz
jecxz
imul
or
iret
xchg
repz
daa
int3
bound
pop
dec
xchg
scas
imul
xchg
cmpsl
movsb
popf
jp
dec
mov
lods
cmp
lods
xor
xor
mov
fildll
jne
inc
mov
push
mov
in
neg
rorl
in
arpl
popa
in
and
std
movsb
in
mov
int
dec
cmp
repz
xor
icebp
fisttpll
and
pop
cltd
push
push
aas
insb
dec
sub
cmp
push
adc
cmp
inc
jp
push
lret
paddusb
cmp
mov
adc
icebp
push
scas
sub
cmp
dec
pop
adc
lods
fnstcw
cmpsl
cld
sub
mov
out
outsb
lahf
dec
mov
mov
enter
mov
sub
adc
push
mov
inc
pop
or
jle
add
adc
enter
ret
test
fucomi
bound
mov
enter
pushaw
jmp
scas
lock
xor
and
add
aaa
in
pop
xchg
fldt
xor
and
jle
push
shrb
xchg
cmp
lea
sub
daa
xchg
fmul
mov
inc
mov
mov
fsubs
inc
dec
cmp
jb
mov
jg
mov
push
inc
sub
js
test
hlt
jle
lds
lods
or
dec
fldenv
repnz
xor
lcall
nop
pop
jo
mov
xor
jecxz
mov
pop
test
es
bound
inc
sbbb
cmp
push
cmpsl
out
xchg
sti
xor
add
ja
cwtl
mov
mov
and
negl
imull
dec
mov
clc
dec
movsl
push
test
pop
jl
mov
sti
stc
stc
mov
cmp
cmp
leave
jecxz
xor
add
cmpsl
cmp
rcrb
mov
jnp
cwtl
adc
cmpsb
lahf
enter
inc
sbb
les
sbb
fs
daa
inc
out
out
pop
lds
push
add
dec
mov
js
jne
aam
jbe
mov
mov
add
scas
fcompl
push
dec
push
sbb
and
cs
mov
lods
push
cli
fs
aad
adc
and
pushf
loopne
cmp
fbld
xchg
pop
std
divl
pop
adc
rcr
neg
mov
stc
clc
and
leave
add
lret
xchg
test
outsb
inc
notb
lret
mov
or
mov
frstor
xchg
jle
push
sbb
sti
and
shlb
std
jb
mov
mov
jo,pt
and
mov
sbb
subb
sti
mov
js
ret
sti
icebp
xchg
cwtl
into
mov
dec
js
loope
sub
imul
in
out
push
jns
sub
fdivs
repnz
push
rclb
lds
std
add
add
mov
repz
stos
data16
cmp
ret
cmp
cltd
or
push
or
lcall
rorb
jo
fld
inc
aad
xchg
stc
pop
push
push
pop
icebp
dec
mov
xor
pop
mov
inc
push
rclb
shll
mov
inc
push
xchg
test
addb
push
lock
aam
jae
push
rclb
push
inc
cld
push
adc
fbstp
stc
aas
inc
push
movsb
push
fisttps
mov
dec
jbe
int3
data16
push
test
push
aas
mov
mov
sti
addr16
cmp
jb
leave
mov
inc
or
dec
xchg
mov
jb
lahf
inc
jns
test
pop
lahf
sbb
fnstsw
sbb
scas
mov
and
mov
xchg
inc
jle
push
or
loop
mov
shll
add
pop
xchg
ficompl
sti
addr16
mov
pop
fistl
sub
cld
pushf
cmpb
and
in
xchg
jb
xor
insl
xor
mov
shll
add
inc
test
loope
iret
sub
xor
daa
les
xchg
decl
icebp
movsb
xchg
inc
xlat
clc
fisubs
and
fdivp
xchg
das
mov
mov
inc
shlb
jecxz
ds
or
clc
and
andl
sbb
push
mov
outsb
cmp
sbb
int
jae
xor
mov
push
icebp
rcr
cmp
outsb
into
dec
and
lods
js
push
xor
xor
adc
imul
in
insb
mov
mov
out
loopne
xchg
cmpsb
sub
out
and
stos
pop
or
mov
loopne
es
mov
jmp
xor
push
pop
and
add
push
mov
mov
xor
test
adc
shlb
mov
in
xor
cmc
and
inc
das
add
lods
pop
xor
mov
popa
hlt
pop
push
sub
rcll
jl
cltd
sub
xor
cwtl
js
jge
pushf
rcr
jge
out
mov
pusha
jmp
test
subb
and
inc
inc
jno
mov
or
decl
cmc
and
in
movsl
dec
fwait
testl
arpl
push
mov
addb
repz
xchg
dec
fwait
jp
sbb
pop
push
sub
cmc
mov
ds
mov
dec
cmpsl
and
cmp
leave
or
add
repz
mov
sti
fstps
mov
out
loopne
loop
push
sbb
outsb
pop
sbb
insl
and
movsl
push
popa
xor
or
roll
push
mov
cmpsl
fistps
xchg
jnp
xor
in
ret
cmp
lods
sqrtps
inc
ds
mov
movsb
mov
cmpsb
xchg
or
repz
arpl
dec
mov
or
and
lahf
pop
sub
mov
gs
inc
inc
pop
test
cld
dec
loopne
xchg
call
loop
outsb
or
lret
lods
mov
idiv
or
push
xor
repnz
cs
popf
aaa
jecxz
mov
or
xchg
cmpsl
pop
imul
addb
sbb
out
push
mov
imul
stc
xchg
add
xchg
add
test
pop
pop
outsl
xor
loope
adc
adc
mov
out
adc
xor
pop
cmc
pop
into
lahf
xor
sub
hlt
cltd
int
iret
mov
sbb
mov
and
addr16
jg
lock
or
cs
and
mov
stos
out
jg
nop
ja
mov
sbb
lcall
push
add
and
pusha
mov
inc
xchg
out
fisubrl
in
popa
je
jae
imul
xchg
jns
xchg
and
fimuls
and
inc
in
mov
push
sbb
les
or
push
test
add
in
cmpsb
push
addl
mov
lea
adc
jo
enter
mov
in
icebp
ss
test
sbb
aam
rcrl
cs
sbb
fistpll
push
cltd
dec
dec
dec
mov
cs
outsl
das
and
xchg
sub
or
stos
sub
lcall
shll
jp
les
aam
loopne
stos
arpl
inc
mov
pop
int
in
dec
jle
xchg
adc
add
iret
stos
enter
xchg
pop
mov
fistps
mov
mov
es
das
or
sti
mov
xchg
mov
lods
jns
cwtl
sub
push
fistpl
pop
pop
adc
test
jmp
aad
test
pop
dec
mov
rcrb
lcall
scas
dec
mov
sbb
stc
jge
fwait
add
mov
dec
cmp
xchg
cltd
int
dec
cmp
mov
jle
enter
dec
add
lds
mov
cmc
mov
cmp
into
cwtl
mov
cli
push
mov
out
aad
pushf
lcall
arpl
push
into
cld
mov
mov
jmp
outsb
imul
test
stc
dec
ror
sub
in
ret
es
pop
dec
in
das
cmc
mov
in
mov
fstpl
mov
jbe
out
int3
adc
push
mov
jg,pn
sti
clc
xor
mov
mov
pop
inc
jle
mov
mov
fmul
pop
add
outsl
repnz
lods
lea
int
shll
adcb
lock
pop
or
cmp
adc
mov
mov
jmp
mull
lods
push
mov
lahf
inc
push
aaa
std
mov
cwtl
data16
arpl
push
mov
aas
icebp
mov
jle
mov
movl
and
push
outsb
ljmp
cs
cmp
dec
mov
mov
movsl
imul
pop
into
aad
xchg
sub
addl
xor
movsb
imul
fmuls
lock
imul
and
push
xchg
sbb
mov
paddd
lds
xchg
push
lock
adc
sahf
test
push
out
pop
sub
sub
mov
or
loop
imul
cltd
mov
insl
mov
sub
and
push
pop
in
xor
in
lods
icebp
es
pop
dec
add
cwtl
stos
jle
test
sbbb
lret
not
xor
fldenv
sub
ret
add
daa
mov
dec
add
cmp
loopne
sbb
rol
stos
iret
gs
jbe
mov
or
lds
ljmp
mov
pop
sbb
scas
or
adcb
sahf
sbb
daa
lfs
and
mov
sub
iret
mov
xchg
sbb
cli
adcb
aaa
int
xor
jbe
sti
sub
mov
mov
leave
fisubrs
shll
lcall
xchg
push
mov
stos
add
das
push
int3
jl
aaa
push
jbe
mov
xor
std
xor
ret
outsl
dec
daa
mov
xchg
push
test
iret
adc
in
and
inc
mov
push
cmpl
mov
das
sub
cwtl
scas
or
and
lret
lods
stos
push
push
jno
xchg
pop
in
cmc
mov
sbb
cmpsl
lahf
mov
sub
mov
mov
test
xor
push
dec
sbb
cmp
inc
loopne
jle
add
pop
in
pop
jle
push
pushf
mov
mov
push
sub
xchg
and
mov
pop
and
xchg
push
xchg
ljmp
jb
clc
push
cmp
popf
or
fwait
push
jns
cmc
jmp
or
xchg
mov
or
adc
add
js
jl
dec
cli
cmp
sub
pop
jae
mov
and
in
js
or
add
mov
and
in
hlt
fldl
out
xor
lahf
mov
int3
cmc
pop
std
or
iret
mov
inc
sub
jae
andl
ret
inc
sahf
pop
js
rol
cmc
daa
jns
dec
and
push
adcl
dec
insl
push
xchg
js
pop
pop
scas
les
je
pop
pop
test
pop
movsb
loope
scas
outsb
adc
xor
in
test
insl
and
jl,pn
insb
or
or
mov
das
adc
mov
mov
xor
add
jb
lock
pop
repnz
stos
sub
or
cld
jnp
push
and
outsb
sbb
icebp
jb
dec
mov
movsb
outsb
pop
stos
aam
sub
add
dec
popf
testl
lds
lds
pop
sahf
jmp
jl
sub
test
gs
pusha
or
jl
loopne
cmp
jb
in
pop
jb
scas
aaa
xor
inc
adc
xchg
je
or
insl
in
fsub
xor
add
xlat
push
sub
pop
scas
out
and
sti
push
mov
or
inc
addr16
hlt
inc
inc
jb
mov
jo
test
push
push
testb
push
xorl
xchg
stos
test
cmp
test
jnp
cmpsb
fs
pop
movb
test
adc
inc
pusha
fwait
push
arpl
or
mov
jb
push
leave
int3
add
pusha
xchg
lcall
lds
push
sub
sub
mov
mov
mov
adc
and
and
call
je
cmp
mov
mov
popf
sbbb
jbe
loopne
adc
dec
or
and
mov
lds
inc
lea
dec
push
jl
cmp
mov
inc
fsubl
inc
mov
or
and
and
mov
push
inc
pop
das
add
sti
sub
mov
in
sbb
std
push
das
mov
jb
fs
jg
inc
dec
inc
mov
sbb
jnp
inc
xchg
inc
ret
sbb
movsb
fiaddl
fwait
mov
lds
cmp
call
pusha
in
enter
pop
or
lock
xchg
mov
xchg
xor
ret
mov
test
mov
rorb
das
hlt
add
lods
jl
bound
in
pop
push
out
insb
mov
inc
sub
std
lret
arpl
arpl
and
dec
lahf
or
jp
mov
shll
fdivl
insb
ret
xor
es
sti
test
xor
out
sbb
inc
jle
jg
ret
xchg
arpl
stos
push
fstpt
dec
subl
out
xchg
ljmp
test
sub
xchg
jp
mov
fldt
add
sbb
lds
hlt
je
cmpsb
or
mov
add
inc
test
dec
loop,pn
xchg
dec
jl
dec
xlat
shlb
dec
push
cmp
adc
movsl
fs
push
imul
pop
sbb
mov
push
dec
out
inc
rolb
fbstp
lcall
dec
xlat
xchg
push
sub
fbld
add
sbb
daa
cmp
add
pop
scas
mov
mov
fistps
jbe
jae
cmp
popf
push
and
dec
jnp,pt
cmc
xor
adc
and
test
out
or
aad
popa
stos
faddl
jns
mov
inc
cs
fstpl
xchg
pop
fsubs
jne
pop
pop
into
xchg
or
add
out
push
es
pop
je
pusha
leave
pop
daa
shll
inc
push
movsl
xchg
inc
adc
test
mov
sub
xor
xchg
xchg
je
call
lock
mov
sbb
not
out
ja
pop
pushf
add
xchg
jno
push
test
mov
ret
or
movsb
mov
lahf
int
mov
test
jb
sbb
std
test
mov
add
cmp
shr
inc
and
pop
lds
into
jb
mov
sbb
frstor
rorl
sbb
dec
mov
aas
fneni(8087
adc
int
and
mov
loop
gs
aam
sbb
mov
xchg
dec
fidivrs
sahf
lods
icebp
test
xor
test
mov
rcr
mov
mov
shll
fiadds
sahf
divl
pop
js
pop
xor
rcr
xor
in
aas
xchg
call
lcall
and
add
iret
push
imul
or
imul
xlat
xchg
es
daa
in
mov
jne
nop
sbb
mov
or
rol
maxps
inc
aaa
adc
fnstcw
xor
in
and
lret
mov
jno
or
ret
push
jns
or
mov
sbb
xor
add
lret
add
cmp
adc
dec
addr16
shll
loopne
lds
mov
cmp
cmp
dec
inc
outsb
movb
jb
in
insb
pop
or
mov
inc
lock
mov
pop
pop
aad
mov
ja
addr16
sub
mov
push
sbb
push
popf
outsl
and
jg
or
inc
dec
popf
je
mov
push
push
mov
cs
inc
inc
inc
iret
adc
sbb
mov
subl
xor
pop
iret
dec
mov
add
xor
xchg
roll
xchg
mov
inc
or
and
cmp
jl
xchg
jmp
xchg
ds
fnstsw
cmp
stos
sub
ja
jmp
insb
push
fdivl
sub
sbb
inc
imul
mov
mov
sbb
data16
adc
mov
scas
popa
cmp
cmp
sahf
fsubr
xor
ds
cmpsb
sub
hlt
ss
icebp
jmp
cltd
jne
hlt
mov
inc
inc
mov
jle
dec
fnsave
xchg
jae
lods
popa
add
push
push
sub
enter
repnz
xchg
dec
pop
sbb
hlt
pushf
push
push
adc
dec
cmpsb
mov
cmp
daa
xor
loopne
cmp
ret
cmp
adc
es
cmp
iret
lret
filds
cmp
jo
adc
sbb
jno
ja
rol
sti
aad
cmpsl
mov
sti
lods
push
mov
jl
and
test
lret
pop
sbb
dec
pop
push
js
iret
push
mov
je
icebp
jmp
shll
lea
leave
sub
sbb
mov
push
xchg
xchg
nop
sbb
dec
and
loope
outsb
cwtl
sbb
in
in
in
push
shrb
adc
push
pusha
adc
mov
fistl
or
fadds
aas
andl
lret
inc
addl
repz
add
inc
and
popa
mov
pop
push
lcall
test
pop
xchg
rcrb
push
push
dec
test
and
outsl
cmp
sbb
mov
loop
rcr
int
adc
stos
enter
mov
and
out
cmpsb
jne
outsb
cld
pop
jmp
dec
mov
ffree
jge
xor
mov
jp
pop
sub
adc
lahf
push
and
and
daa
out
cmp
pushf
lret
mov
or
das
in
movsb
gs
insb
sbb
inc
enter
and
lcall
in
addb
dec
cli
mov
pop
ds
incl
addr16
cmpsb
fidivs
and
xchg
and
push
sbb
lret
cmp
out
mull
cwtl
out
sbb
xor
add
pop
cld
dec
fimuls
xlat
and
fdivl
mov
ret
jb
or
shlb
push
mov
xchg
bound
rcll
jb
out
lea
ret
adc
and
loop
fwait
and
jno
repz
cltd
sbbw
outsb
shr
pop
daa
in
dec
dec
fs
je
add
mov
outsl
inc
dec
adc
cmp
adc
jo
add
pushf
push
popa
cmp
mov
popa
in
jle
mov
mov
test
loop
or
mov
out
fistl
subl
mov
sbb
mov
mov
jns
pop
fwait
and
xor
arpl
sbb
push
imul
nop
sub
pop
stc
add
pop
sbb
adc
shr
into
add
insl
pop
dec
sahf
add
pusha
sub
adc
or
mov
inc
out
push
popa
inc
into
scas
icebp
add
imul
cltd
add
inc
pusha
enter
xchg
cli
lods
insl
xchg
sub
fwait
and
inc
jmp
or
sub
aad
or
int3
jp
push
es
les
mov
mov
in
mov
in
dec
subl
dec
mov
push
mov
or
mov
movsb
inc
xchg
loop
cwtl
pop
add
dec
outsl
lock
mov
jl
inc
pop
dec
sti
adc
cmp
and
in
push
daa
loopne
add
test
mov
leave
push
lock
out
mov
pop
adc
adc
ds
test
jne
xchg
sbb
sar
leave
jo
mov
inc
xor
in
xchg
pop
cmp
pop
movsb
iret
lea
xchg
sbb
xlat
push
hlt
or
fstl
daa
jns
add
pushf
roll
push
dec
add
cmp
xchg
lret
mov
pop
frstor
int3
cld
call
xchg
rcll
mov
or
int3
call
jl
testl
add
cmp
js
mov
mov
pop
or
ss
and
xor
call
xchg
or
je
in
adc
or
sbb
pop
clc
ss
bnd
insl
test
fdivp
adc
daa
fbld
dec
dec
rclb
sti
dec
mov
test
ja
ds
mov
sub
notb
sbb
iret
sbb
je
jb
gs
in
mov
inc
push
and
xchg
subb
adc
loopne
movsl
dec
sub
lock
inc
sbb
andb
sub
movsb
mov
jl
mov
mov
push
xchg
pop
or
fs
test
sti
cmp
and
dec
popa
test
inc
shr
jg
dec
add
imul
push
and
das
idivb
loopne
fwait
sbb
sub
movsb
mov
mov
pop
jmp
clc
add
push
in
xchg
cmp
outsb
mov
dec
test
shll
test
xchg
in
and
cmpsl
in
ss
push
mov
or
mov
push
push
fildl
in
push
xchg
out
orl
data16
stos
neg
or
or
clc
mov
cmpsb
or
pusha
inc
loope
ds
sub
frstpm(287
add
outsb
inc
sbb
or
outsb
popa
mov
xchg
testl
mov
xor
test
mov
data16
fucomi
push
or
fnstcw
ret
push
xchg
leave
das
push
inc
and
in
jo
test
aam
lds
jmp
jp
jle
mov
mov
xchg
and
xor
cmp
cmp
lock
lods
cmp
or
int3
mov
jo
hlt
mov
xchg
aas
insb
xchg
dec
push
mov
les
das
sbb
call
lods
andb
push
ljmp
cmp
add
push
jae
mov
rorb
gs
cmp
pop
aas
dec
inc
mov
inc
mov
add
mov
stos
rolb
leave
scas
mov
push
adc
icebp
or
in
movsb
lods
stos
xor
jp
mov
xchg
jbe
fldt
inc
out
popf
and
push
ss
jmp
jnp
add
pop
sub
jne
mov
xchg
imul
cmp
je
xor
and
inc
rol
add
scas
add
leave
dec
or
pop
testb
std
adc
outsb
cmp
xchg
sub
mov
dec
sub
jne
loopne
or
aad
daa
shlb
mov
push
repz
std
ja
dec
out
push
popf
lods
aas
pop
xor
fstl
imul
sarb
dec
cmp
sub
dec
push
xor
nop
xor
jbe
mov
test
push
and
adcl
daa
push
data16
roll
fdiv
dec
sbb
jne
shl
ds
cmp
es
test
or
aas
roll
jns
xchg
int
call
xchg
test
inc
jecxz
xchg
and
das
movsb
push
fstps
mov
js
pop
push
lods
imul
sub
inc
sbb
mov
jecxz
call
cmpsl
xchg
in
test
repz
adc
sub
test
dec
jb
sbb
dec
mov
and
enter
push
loope
push
cmp
cmp
orl
and
xchg
stos
mov
dec
jno
es
pop
fdivl
enter
mov
int
push
aam
jmp
push
and
jp
add
in
xchg
jle
fisubrs
fwait
mov
dec
push
xor
clc
mov
sbb
push
mov
bound
repz
adc
add
xchg
stos
push
push
sub
mov
outsl
push
fildll
fiaddl
mov
pop
addr16
jae
mov
lods
outsl
loope
mov
testl
pushf
arpl
push
cmc
popf
push
insb
popa
dec
mov
mov
stos
fcoml
xchg
movsb
mov
out
cs
mov
scas
mov
mov
pop
sbb
roll
stos
mov
out
ss
ficompl
pop
inc
lret
or
xlat
pop
push
jg
push
ds
mov
or
pop
popf
inc
inc
mov
xor
loop
es
int3
sub
test
sub
cmc
test
push
fcoml
sbb
nop
hlt
dec
fmul
add
lods
and
add
xor
push
xchg
divl
push
mov
jecxz
add
sbb
pop
stos
dec
lcall
data16
inc
ficoms
push
outsb
pop
pop
out
sbb
xchg
in
mov
vfmsub213ps
jb
mov
je
cmp
fldenv
pop
adc
lods
adc
sub
repnz
ds
mov
inc
inc
aaa
push
repnz
jo
mov
adc
nop
gs
cltd
int3
xor
lret
sar
in
imul
rorb
and
or
and
pop
pop
dec
add
sub
addl
add
pusha
add
pushaw
vpsadbw
add
test
or
dec
cmp
popa
adc
les
cmp
add
clc
mov
sbb
or
and
fcoms
gs
or
popa
pop
mov
out
ret
xchg
inc
fldl
iret
cltd
push
scas
rclb
fistps
jae
das
or
mov
push
imul
push
mov
push
push
mov
icebp
aam
sbb
or
fwait
mov
jmp
sub
lods
jbe
xchg
mov
push
ror
sti
or
lret
push
dec
jle
stos
ficoms
loope
pop
fdiv
lods
js
dec
jecxz
push
insb
fldt
fmul
xchg
push
sbb
lret
jmp
jge
test
addl
dec
fildll
or
sbbb
lods
std
popa
lods
or
aaa
es
lea
mov
fs
adc
push
mov
adc
cmp
test
addl
cmc
scas
into
push
push
mov
imul
xor
cld
aam
push
repz
sub
or
adc
cmpsl
xchg
stos
jo
stos
movsl
scas
das
pop
rcll
xchg
xor
leave
mov
jl,pt
addr16
or
dec
jo
lds
outsb
mov
adc
xchg
push
mov
or
dec
aas
inc
mov
xor
loope
jns
loop
dec
fldcw
or
sbb
mov
add
inc
xor
jge
jae
stos
xchg
sub
stc
stos
dec
fldz
lock
pop
push
aas
sbb
vmovsldup
clc
sub
popf
cmp
loop
pop
push
mov
or
sub
cmp
mov
dec
inc
dec
in
dec
sbb
fs
mov
add
push
sti
stos
adc
popa
lods
xchg
add
mov
std
popf
cmp
dec
leave
xchg
in
sbb
push
pushf
mov
lcall
sub
xchg
in
scas
js
push
mov
and
push
hlt
test
lds
sub
iret
js
pop
je
idivl
sahf
test
or
ret
rorl
inc
call
pop
outsb
das
test
cmp
ret
xlat
lahf
das
sub
sahf
xchg
test
mov
sahf
rclb
sti
pop
adc
push
fldl
fadds
and
sbb
xchg
fists
xor
rcll
pop
arpl
repz
xchg
jae
xor
scas
fistpll
add
das
cmp
mov
mov
test
dec
insb
icebp
jp
lock
aaa
add
mov
or
ftst
lea
sbb
pop
xor
out
jnp
xchg
repz
add
in
inc
cmp
or
lret
test
sub
dec
or
int3
cmp
push
aad
and
lds
adc
cmc
test
cld
and
rolb
or
jns
push
add
jecxz
sub
inc
push
dec
dec
dec
sub
push
pop
xchg
pop
shll
jno
negl
or
dec
xor
mov
pop
hlt
shlb
add
dec
mov
lcall
jmp
mov
cmp
cmp
push
jge
ljmp
dec
hlt
pop
jnp
sbb
jp
aam
insb
push
movsb
fldt
pop
pop
inc
repnz
aaa
stc
pop
adcl
std
mov
adc
add
jle
pop
jae
sbb
cmc
lods
jmp
sbbb
dec
mov
fbld
push
push
outsl
or
xor
imull
sub
jb
jo
push
and
adc
fstpl
mov
inc
mov
mov
shll
adc
in
imul
outsl
mov
aad
aam
fidivrl
push
out
loop
jg
std
out
mov
dec
daa
add
aas
insl
sub
push
sub
jae
push
inc
pop
popa
gs
pop
mov
and
iret
cli
jb
adc
xchg
adc
sbb
hlt
xchg
jle
or
scas
pop
or
xor
imul
xor
push
mov
mov
sbb
sbb
sbb
sbb
push
mov
daa
jno
cmp
out
adc
mov
dec
je
or
fldenv
das
cs
stos
call
stos
or
dec
andb
lea
bound
adc
sti
sbb
int
or
aaa
adc
ret
jl
pusha
cmpsb
pop
push
movl
jmp
ds
call
push
inc
fcompl
xchg
add
push
in
mov
push
xchg
jmp
aas
mov
daa
or
out
xchg
loop
sbb
or
pop
sahf
sub
jp
sbb
int3
out
lret
sbb
push
outsb
je
add
lods
xchg
lret
les
aas
dec
and
jbe
add
les
lahf
sbb
loope
imul
leave
xor
cli
xchg
xchg
mov
nop
mov
mov
xchg
inc
pop
iret
adc
jns
inc
inc
out
lods
mov
shlb
inc
notb
mov
sub
inc
das
mov
in
push
mov
mov
shrl
ds
dec
add
and
cmpsl
mov
mov
dec
in
sahf
adcb
sbb
ljmp
add
sbb
xchg
out
in
sub
dec
lock
out
mov
lret
jno
mov
xchg
cmp
sahf
xchg
in
mov
sub
jne
fidivs
mov
scas
ret
mov
mov
cmp
pop
int
cmpsl
xor
jne
push
aaa
sub
lahf
jo
xor
lock
rcr
push
cmp
dec
sti
mov
inc
test
sub
out
push
add
add
or
std
xchg
mov
rolb
push
outsl
shlb
push
adc
or
and
jmp
pop
mov
mov
je
test
in
jae
or
mov
mov
sub
xchg
stos
dec
shrl
or
mov
cmp
jne
andb
mov
mov
sub
rorb
dec
dec
xchg
mov
push
dec
sub
inc
push
repz
stos
out
mov
bound
mov
mov
nop
gs
pop
add
loopne
push
and
mov
add
gs
xrelease
jbe
arpl
gs
add
dec
popa
jecxz
mov
in
cmp
int
or
iret
adc
push
or
cmp
in
lock
vhsubpd
push
rclb
repnz
fisubs
xor
out
out
xchg
add
push
adc
outsl
cmp
icebp
adcl
dec
mov
dec
mov
rcl
ret
pop
pop
cmp
test
jne
mov
push
add
pop
test
push
fcoml
push
push
pop
cmc
push
lock
pop
repz
or
sub
filds
cwtl
lods
adc
pop
inc
test
das
xchg
clc
jmp
mov
xor
lret
sbb
xchg
fimull
in
cmp
xor
jo
pop
stc
ljmp
aam
mov
xchg
mov
aam
mov
in
dec
mov
icebp
mov
in
cmp
gs
rorb
or
mov
adc
dec
pop
int3
and
xchg
lret
mov
add
mov
push
mov
ss
jo
popf
mov
mov
dec
sub
in
xor
mov
jle
mov
xchg
xchg
sub
push
add
aaa
mov
adc
test
add
lret
mov
mov
push
xchg
test
jno
adc
movsb
xchg
testl
xorl
pop
leave
inc
mov
pushw
arpl
mov
add
lahf
xor
adc
nop
aaa
cmp
out
popf
notb
mov
push
gs
rolw
jle
scas
ds
les
dec
jne
out
scas
sahf
jb
xchg
pop
adc
jmp
push
js
xchg
and
or
lock
sub
inc
stos
pop
arpl
test
push
pop
xlat
shlb
shlb
cmp
bound
jne
and
inc
xor
pop
and
mov
or
clc
fidivl
and
aaa
dec
iret
mov
dec
fnstsw
pop
xor
lret
dec
cmpsl
add
ljmp
adc
cmpsb
lret
sub
push
out
sbb
xchg
push
and
fcoml
daa
sbb
push
outsl
xor
push
sub
test
jmp
cmpl
xor
pop
cld
cmp
push
cmp
xor
cmpsb
cmp
mov
lcall
clc
mov
ret
es
pushf
push
xchg
or
sbb
in
mov
xor
xchg
andb
push
stc
ficoml
push
js
dec
inc
clc
dec
jno
icebp
push
addr16
sub
arpl
adc
shll
sarb
push
sbb
mov
sbb
or
cltd
sub
add
adc
bound
test
aaa
movsl
je
out
iret
mov
fldl
and
subb
pushf
xor
inc
pop
xor
mov
test
cmp
inc
in
push
or
push
cmpsl
push
push
mov
mov
pop
mov
and
adcl
rolb
out
sarl
enter
mov
push
aam
roll
mov
incb
or
add
inc
pop
add
xor
cmp
mov
jnp
jb
imul
lods
std
lods
inc
cs
ds
add
mov
mov
popf
adc
and
popa
mov
inc
jl
pop
mov
ljmp
call
pop
lret
inc
add
xchg
jae
rclb
mov
das
sub
mov
mov
push
ret
cwtl
bound
ljmp
mov
adc
mov
ds
and
and
xor
fstps
insl
scas
nop
mov
lock
push
insb
imul
and
fists
pop
add
pop
and
in
sbb
jbe
fmul
imul
inc
cmpsb
mov
test
in
flds
add
sbb
add
cltd
addr16
lcall
or
sub
shll
add
aaa
mov
xlat
jl
add
mov
lea
loop
pop
stos
mov
fildl
push
int3
dec
lfs
xor
pop
dec
sub
icebp
jae
movsb
pop
cs
sbb
mov
inc
mov
push
scas
leave
cld
sbb
mov
xchg
mov
adc
or
mov
lcall
dec
addr16
addr16
cmpsl
sbb
pop
sub
mov
loope
xchg
mov
mov
lock
push
mov
mov
in
cmp
loope
ja
adc
xchg
xchg
mov
subb
outsb
jp
xor
stos
cmpsb
out
ja
mov
je
and
mov
push
push
adc
sub
aas
fistl
sub
push
test
cmp
and
xchg
fwait
addr16
xchg
adc
js
pop
adc
mov
fnstsw
xchg
pop
adc
sbb
xchg
mov
dec
pop
jp
sub
push
inc
inc
pushf
shlb
data16
jecxz
or
pushf
subl
clc
iret
xor
jge
shl
mov
mov
cmpsl
jae
mov
sub
scas
inc
out
jne
sbb
sbb
sarb
aas
or
sahf
das
scas
mov
or
mov
ficoml
ret
dec
ss
mov
shlb
sahf
mov
pminub
dec
pop
cwtl
xchg
xor
xor
xchg
inc
cmc
in
std
push
ds
incl
cltd
lods
jmp
mov
hlt
out
lds
fldl
out
into
int3
push
mov
and
je
jmp
imul
call
push
sub
inc
mov
sub
cmp
shl
mov
dec
lea
adc
add
adc
fimull
scas
movsl
dec
es
cltd
mov
inc
pop
xchg
mov
mov
mov
lcall
in
stos
stc
mov
mov
xchg
mov
setge
loop
stos
ds
adc
and
sbbb
xchg
orl
dec
jmp
mov
negb
or
pop
fimuls
into
pop
std
xor
push
mov
out
sub
dec
jo
mov
test
je
xor
cmp
xchg
lea
lock
out
loop
push
rorb
call
repz
jge
loopne
dec
xchg
sub
fimuls
push
mov
imul
inc
cli
sub
mov
add
mov
inc
dec
movsb
sub
adc
call
scas
lret
mov
and
xor
int3
xlat
jae
mov
rcrl
loope
sti
outsb
lds
lock
fmuls
lret
je
aas
sbb
fisttps
add
and
in
popa
mov
insb
pop
je
mov
test
and
lds
rcr
pop
jg
mov
ja
movsl
sub
loope
das
and
lahf
ret
movl
push
lds
mov
sub
push
shr
mov
cld
mov
cmp
loope
loope
jo
dec
ret
xor
push
stos
xchg
fistps
xor
xor
mov
sbb
adc
mov
pushf
dec
in
fcompl
je
mov
mov
ds
and
pop
fwait
mov
lock
in
pop
mov
jb
mov
mov
dec
sbb
stos
or
scas
add
idivl
jo
push
xchg
mul
cmp
insl
dec
rcrl
js
push
jae
ret
mov
test
dec
in
ret
cmp
and
aaa
sti
inc
icebp
jmp
lock
mov
xchg
hlt
dec
out
push
push
mov
leave
add
jmp
das
push
push
mov
pop
mov
ret
rolb
insl
je
iret
outsb
sbb
movsb
pop
insb
pop
push
insb
imul
aam
sub
ret
sti
mov
out
pushl
in
out
lret
aad
call
mov
xchg
xchg
cwtl
repnz
testb
jbe
adc
pop
clc
out
addr16
std
pop
test
add
add
push
push
dec
iret
mov
mov
gs
or
xor
dec
dec
scas
ds
paddb
fwait
mov
dec
out
sub
jb
out
adcl
shr
xor
les
adc
imul
stos
add
aad
mov
or
push
sar
xchg
pop
cld
adc
sub
sarl
loope
sub
imul
mov
stc
inc
pop
push
inc
push
cwtl
xlat
ljmp
into
aad
test
aad
xlat
outsl
add
jmp
jbe
and
aaa
mov
pushf
rcll
or
xchg
or
cld
mov
fstps
mov
adc
shr
in
fisubs
sub
mov
xchg
adc
sbb
add
cmp
jmp
sbb
loope
sub
mov
cwtl
cmpsb
inc
ljmp
aad
cmpsb
sub
pop
cmpsl
inc
or
mov
jns
aam
lret
pop
addb
in
call
sbb
pop
pop
mov
xchg
rol
jle
popf
shlb
xlat
js
or
cmp
mov
call
insl
icebp
xlat
sub
mov
outsl
adc
jecxz
push
shlb
ds
fsubrs
sbb
mov
mov
inc
pop
and
lret
dec
mov
sbb
mov
ret
aam
mov
stc
and
test
add
cmp
push
and
xchg
inc
stos
imul
add
mov
mov
or
or
fdivrs
or
mov
sbb
mov
sbb
pop
lds
or
jge
sti
mov
lods
mov
pop
push
jae,pt
aaa
test
out
das
iret
scas
cli
sbb
and
xor
ffreep
sbb
xchg
sub
mov
adc
popa
sti
push
movsl
sbb
and
jecxz
mov
jae
mov
cmpb
mov
cmp
scas
push
mov
push
sar
lods
shlb
ja
dec
daa
fisttps
aam
subb
sub
shll
in
add
ficomps
pushf
rcl
shrl
mov
lret
inc
aad
mov
test
insl
add
mov
lret
das
sub
scas
movsl
in
mov
inc
inc
sbb
xchg
push
mov
ret
fimull
into
or
and
roll
jo
adc
adc
mov
dec
iret
aad
lds
pop
sbb
pop
pop
adcb
adc
imul
cli
not
add
ja
jle
ret
mov
stc
jg
paddb
or
addr16
icebp
mov
jae
xchg
imul
mov
cs
push
imul
cli
je
inc
push
inc
imul
dec
lock
addr16
sbb
out
jno
out
pusha
fwait
jmp
movsl
jle
stos
jg
into
jmp
jno
popf
in
out
hlt
icebp
or
and
lods
xor
xchg
mov
imul
dec
dec
movsl
outsb
insb
push
push
inc
push
stos
adc
shlb
int3
jg
xchg
int3
sti
xlat
jmp
sbb
in
arpl
nop
xchg
dec
lcall
pop
cmp
aaa
call
pushl
push
pop
sbb
cmp
scas
dec
inc
and
cltd
jl
xor
xchg
add
or
mov
stc
loopne
mov
je
mov
dec
jb
stc
push
and
adc
popf
ss
xchg
aad
ret
in
cmp
int3
cs
pop
inc
call
jb
or
je
cmp
pop
in
mov
add
mov
test
mov
dec
les
fbld
mov
in
adc
add
sarb
mov
movsl
fstps
mov
xchg
loope
shll
xor
sub
push
xchg
ds
lock
dec
jno
std
data16
stos
jp
and
cmp
add
pop
sbb
adc
push
sbb
incb
sbb
js
adc
sub
stos
cmp
mov
lods
cmpsl
idiv
mov
pop
push
mov
faddl
cli
mov
sbb
rcrb
cld
inc
icebp
nop
mov
imul
push
dec
scas
xor
aad
push
or
shlb
push
dec
adc
dec
or
dec
test
sub
jo
xchg
insb
pop
xchg
sbb
xor
and
mov
inc
adc
rcrb
mov
sti
dec
aad
lds
aad
inc
test
fildll
and
clc
xor
xchg
ret
jp
cmpsl
cs
mov
movsl
aam
pop
mov
icebp
mov
sub
xchg
movsl
mov
idivb
or
jge
popf
gs
cmp
jb
mov
cmpsb
mov
in
cmp
adc
fwait
nop
loopne
out
mov
arpl
fs
mulps
stos
iret
not
int3
sbbl
ds
lock
lcall
in
hlt
neg
imul
xchg
adc
cs
jmp
mov
mov
push
sub
ret
add
imul
mov
pop
cmp
in
in
leave
ss
movsb
xor
xchg
add
ja
xchg
aaa
xor
mov
ret
add
adc
mov
pop
scas
pushf
cld
dec
test
or
mov
cmp
mov
cltd
fldcw
aas
push
cmp
sub
cwtl
mov
push
pusha
or
push
cli
add
ret
cltd
ljmp
cmpsb
sahf
mov
add
ja
xchg
fimuls
push
xchg
std
add
data16
sti
fnstcw
jecxz
xor
adc
cmp
jecxz
push
push
adc
pop
pop
incl
cwtl
loop
pusha
daa
push
mov
sub
pop
mov
add
ljmp
pop
pop
sar
mov
daa
cli
fistps
dec
xor
add
mov
add
inc
adc
insl
movsl
jnp,pt
mov
add
mov
and
pop
imul
pop
xchg
minps
push
xchg
rol
mov
insl
mov
sub
iret
clc
lds
lahf
fistpl
ljmp
dec
enter
clc
push
cmp
into
cmpsb
push
addr16
aaa
add
xchg
lret
mov
cltd
sub
in
fistps
adcb
in
call
xor
lods
sahf
adc
lods
xchg
push
mov
aaa
and
xchg
add
inc
imull
inc
jmp
jno
mov
xchg
xor
bound
dec
inc
jno
cmp
mov
mov
sbb
xchg
inc
xchg
test
dec
mov
adc
add
mov
fisttps
dec
push
fucomp
jmp
pop
sbb
hlt
idivb
cld
push
imul
and
imul
xor
std
inc
call
mov
pop
sub
jns
gs
xchg
shrl
dec
mov
mov
outsb
mov
mov
jmp
enter
pop
xor
movsl
push
add
add
cmpsb
insl
jbe
hlt
mov
xor
fisubrl
xchg
sub
mov
push
iret
push
subb
fistl
pop
into
and
out
sub
jmp
mov
xchg
mov
insb
jg
outsl
ror
mov
inc
mov
cmc
jnp
imul
mov
aas
sahf
repnz
pusha
jg
adc
mov
insl
push
sbb
imul
xchg
pop
pop
cmc
lods
cmp
xor
xchg
fidivrl
jmp
ljmp
sbb
pop
pop
inc
xor
test
lcall
mov
push
into
cmc
call
xorb
add
mov
addr16
push
call
adc
mov
scas
push
jge
push
sbb
rcl
mov
popf
shll
pop
rol
das
jp
adc
daa
xchg
adc
sahf
arpl
lods
push
xor
push
stos
aaa
pushf
std
or
stos
mov
fiadds
mov
popf
inc
ds
mov
push
lock
mov
sub
push
sub
inc
and
jp
mov
jecxz
stc
fucom
aad
push
add
sbb
push
jbe
add
sub
xchg
jne
add
push
mov
aaa
or
lock
lods
repnz
or
sub
inc
mov
add
into
out
or
xor
dec
dec
xor
adc
lods
push
push
popf
adc
xchg
popa
fcomps
fstps
mul
lock
cmp
pusha
lods
inc
ret
jle
psubusb
outsl
push
add
test
mov
pop
outsl
mov
lret
pop
mov
popa
cmp
ret
push
add
out
push
inc
rcrb
push
push
mov
ds
jns
das
inc
mov
lret
loope
xor
ja
lds
aaa
rol
xchg
scas
inc
enter
and
push
xor
dec
sub
mov
dec
repnz
sub
lods
mov
adc
add
lods
leave
or
or
mov
sub
jne
add
dec
sbb
mov
add
out
test
and
jg
mov
std
push
jle
jl
test
lret
xor
pop
loope
pop
ss
shll
dec
sub
jmp
adc
test
jnp
pop
push
adc
js
mov
imul
push
pop
pop
push
lock
cmp
ret
and
outsb
sbb
cmp
aad
sar
mov
pop
fistl
cwtl
jp
ret
xchg
and
xchg
ror
pop
sbb
xchg
pop
in
mov
jno
xchg
jne
repz
sbb
inc
push
stos
call
arpl
push
mov
push
push
call
imul
popa
ss
ljmp
sbb
dec
test
scas
sub
scas
into
xor
or
mov
cmc
dec
jl
sbb
sub
dec
sub
movb
insl
mov
repz
inc
dec
add
bound
fstl
inc
pop
fsubs
inc
jmp
xor
js
fwait
out
dec
js
fs
mov
dec
mov
mov
loope
add
sbb
adc
mov
pusha
mov
daa
and
push
fisttpll
lcall
xor
pusha
out
mov
add
lcall
pop
adc
add
mov
out
clc
out
jae
xchg
sbb
push
fcmovb
cmpsb
inc
push
rorb
lcall
shr
dec
ljmp
jecxz
sub
es
out
cld
or
sub
movsb
mov
je
jge
mov
push
or
pop
jno
push
repz
js
sarb
aad
stos
pop
nop
aam
sub
mov
or
jns
mov
popf
push
jmp
cmp
ret
push
inc
xchg
ds
jl
push
fisubrl
or
xchg
mov
jno
repz
shrl
mov
loopne
in
pop
inc
cli
rolb
cmp
jb
pop
push
or
movsb
add
mov
sahf
imul
cli
cmp
or
inc
xchg
xor
int
inc
ret
lret
xor
push
push
iret
movsb
out
push
pop
pushf
xor
shl
xchg
push
pop
das
frstor
popf
int
pop
push
add
or
sahf
cmp
int3
and
lret
push
fidivrs
jnp
mov
call
cmpl
jge
push
fdivrl
add
mov
sti
movsb
ret
inc
xchg
rolb
js
add
mov
jno
out
int3
je
faddl
ja
inc
pop
xchg
pop
movsb
push
or
adcb
xchg
jle
mov
jge
js
push
fwait
sbb
dec
mov
movsb
add
xor
out
dec
sar
jno
xor
repnz
enter
pop
jo
cmp
daa
push
and
mov
mov
xor
ss
nop
pusha
fisubrl
in
ret
es
push
push
push
stos
fs
add
cmp
hlt
or
pop
repz
dec
jo
insl
movsb
out
push
sub
lods
cmp
in
or
push
xor
test
sub
mov
lods
cmp
popw
js
xchg
jmp
lea
sti
mov
mov
adc
gs
cmp
dec
lahf
imull
adc
push
mov
dec
scas
popa
dec
movsl
mov
push
xor
mov
cld
insl
fs
popf
and
dec
popa
or
cld
mov
dec
call
push
mov
std
push
push
data16
aas
mov
pop
outsb
addr16
mov
outsl
lea
and
mov
pushf
push
in
xlat
pop
mov
lea
mov
mov
pop
test
fsubs
mov
dec
jae
iret
xchg
fisttpll
popa
or
jge
repnz
lahf
and
adc
add
dec
push
xchg
adc
sbb
push
rcrb
cmp
pop
xor
lcall
mov
mov
adc
cltd
mov
hlt
sub
sbb
outsb
jp
sbb
xorb
std
xor
and
out
loopne
mov
das
mov
mov
mov
or
es
cmpsb
adc
popa
pusha
sbb
push
aad
cld
movsl
jmp
repnz
sbb
dec
mov
fwait
loopne
fdiv
fldcw
insl
jne
push
xchg
divb
clc
gs
sti
adc
push
arpl
adc
sbb
lods
adcb
jle
cmpsl
and
add
fldcw
insb
addr16
shrb
adc
nop
mov
mov
jno
test
aam
or
inc
cmc
in
out
mov
xlat
pop
push
aaa
roll
mov
jo
lret
jno
rclb
scas
pushw
jg
cltd
push
dec
pop
sbb
shrb
dec
out
mov
aad
shrl
xchg
insl
cltd
push
jns
test
roll
flds
cmp
test
repz
dec
pop
jg
xor
outsl
pop
cmp
push
in
jae
lret
loope
std
jle
inc
adc
loope
les
fcomps
stos
jl
push
scas
xchg
stc
xchg
ljmp
mov
ds
adc
js
pop
pop
shl
sbb
mov
jns
lahf
ja
sbbb
daa
adc
mov
mov
mov
cmpsl
sbb
leave
jb
orl
inc
pop
movsb
pop
insb
mov
out
inc
and
std
js
pop
mov
into
push
dec
sti
addr16
scas
dec
cmp
cmp
stc
sub
mov
mov
out
mov
dec
mov
cld
mov
cmpl
jp
xchg
fisubrs
mov
mov
xor
cmp
mov
sub
movups
jl
insl
mov
insb
xor
pusha
and
mov
inc
test
push
call
jnp
pop
ljmp
jl
sbb
mov
pop
push
sahf
xchg
mov
outsl
jl
scas
out
mov
lcall
mov
bnd
push
xlat
sub
pop
jp
xor
sti
jl
pop
mov
or
es
adc
idiv
fucomp
vcvtdq2ps
scas
xchg
repz
jne
sbb
in
mov
aas
pop
mov
pop
mov
inc
sbb
jge
in
inc
dec
mov
loope
leave
push
adc
jno
mov
xchg
lret
paddb
enter
loope
test
mov
aas
popf
iret
lret
shlb
mov
pop
pop
xchg
mov
xchg
or
cmp
cmp
push
in
sbb
adc
cmp
imul
pop
add
pop
sti
cmp
aas
mov
push
push
add
mov
lahf
and
jmp
pop
jecxz
fmulp
adc
and
mov
mov
and
fisttpl
shrl
idivb
pop
adc
add
in
or
lods
fisubrs
hlt
sbb
aam
push
pop
xchg
cmpsb
pop
pop
insb
int3
adc
aas
leave
mov
mov
aad
and
dec
pop
inc
cmp
out
ja
adc
in
mov
add
push
negb
sub
mov
xchg
add
add
push
pop
lret
add
mov
sbb
dec
lcall
mov
sbb
sub
jl
xchg
adc
outsb
mov
inc
ja
adc
jmp
in
adc
xchg
mov
mov
fdivp
pop
xchg
jbe
fwait
adc
cwtl
inc
jo
dec
sub
cltd
repnz
lods
dec
in
je
jecxz
xor
jmp
shlb
sub
jle
inc
rcrb
popf
add
clc
push
loopne
mov
dec
ret
aam
addr16
adc
int
mov
push
xchg
inc
cld
jo
loopne
xchg
xchg
sub
mov
mov
outsb
leave
pushf
fcomps
cmp
popf
pop
xchg
push
jne
cmp
push
fs
sub
mov
mov
in
inc
scas
pop
xchg
sti
xor
jne
clc
in
aad
push
mov
stos
out
pop
fbstp
rorl
mov
pop
cmp
clc
push
xor
lods
cmpsb
js
scas
mov
mov
ficoml
ljmp
and
iret
in
arpl
ja
sbb
push
out
xchg
add
dec
pop
inc
inc
nop
mov
sub
out
popa
sahf
sbb
push
adc
clc
int3
mov
imul
fidivs
jmp
xor
pushl
pop
jp
in
sub
aaa
leave
cmp
mov
lret
mov
insl
xchg
sbb
adc
rorb
test
and
stc
stc
pop
inc
adc
or
hlt
jno
jne
xor
inc
or
imul
and
sub
jg
sub
test
lret
push
pop
inc
je
fcmovnbe
push
mov
jecxz
in
dec
mov
sahf
or
push
movsl
cmp
cmp
leave
xor
mov
pop
jbe
jne
mov
sub
les
ret
inc
ss
js
imul
mov
imul
mov
mov
punpckldq
mov
call
imul
xlat
repnz
dec
rcl
mov
inc
lea
pop
mov
das
cs
jnp
mov
inc
and
push
lods
and
push
jle
push
add
lods
lcall
inc
sarl
aaa
jns
sub
mov
jl
jb
jecxz
push
lcall
data16
mov
jp
int
add
icebp
aaa
mov
divl
cli
jbe
jno
jae
dec
pop
or
xor
enter
mov
jns
adc
push
sbb
stc
outsb
mov
rol
or
mov
mov
cwtl
sti
lods
cwtl
in
arpl
adc
mov
jbe
ja
lock
adc
xor
lock
pop
xor
xlat
fnstsw
mov
les
idivb
out
fisubrs
cmp
xor
cli
icebp
inc
push
sub
or
jnp
cmp
inc
inc
shrb
dec
loop
push
cmpsb
lahf
ficomps
jecxz
jo
icebp
loopne
and
and
mov
jmp
pop
xchg
add
and
testl
mov
mov
popf
or
or
sahf
js
dec
sub
inc
lock
out
scas
fmull
inc
jl
mov
ficomps
fs
mov
xchg
mov
pusha
dec
call
add
ja
dec
fcoms
cmc
sbb
imul
mov
inc
stc
dec
std
enter
aad
in
cmc
scas
pop
std
test
mov
xchg
adc
and
sbb
push
pop
stos
inc
sbb
pop
fwait
inc
cmp
in
test
mov
jmp
pop
xor
jmp
xor
dec
mov
and
in
bound
sbb
movsb
xlat
dec
les
jle
ds
mov
inc
stc
sbb
pop
mov
pop
jae
out
into
sbb
mov
dec
dec
inc
push
push
mov
xor
mov
test
add
test
add
pop
lock
fwait
mov
mov
outsl
or
xchg
cwtl
fildl
popa
jmp
adc
sbb
orl
lret
lcall
mov
lret
jb
fsubl
push
mov
jns
incb
jb
test
js
push
out
add
scas
adc
loop
inc
pushf
jg
xor
xor
test
cmp
popf
lods
push
push
mov
dec
mov
jp
push
loopne
xchg
scas
fistps
rorb
jl
test
call
mov
in
pop
mov
xlat
pop
test
adc
int3
cmpsb
push
push
sbb
std
inc
aam
inc
or
sub
jo
enter
jl
gs
inc
push
stos
mov
cmpsb
xor
in
xor
inc
mov
add
dec
popf
repnz
dec
mov
hlt
inc
stos
sub
rcrl
push
movsl
pop
xorb
and
adc
dec
jo
int
or
stos
dec
add
scas
xchg
stos
std
push
push
sti
xchg
push
sbb
and
les
mov
xchg
fcompl
xchg
xor
mov
mov
jmp
inc
jae
mov
lods
sbb
dec
mov
out
scas
hlt
mov
fwait
jecxz
popa
notl
pop
xchg
xchg
xor
sti
dec
pushf
sbb
ja
cld
clc
jbe
xor
inc
and
std
pop
add
jg
fwait
sbb
ficoms
cmp
or
sub
int
mov
sahf
into
lret
push
pop
roll
pop
adc
xchg
inc
lock
data16
pop
sub
mov
xchg
adc
je
adc
jbe
mov
add
or
stos
push
pop
adc
lock
addr16
and
mov
dec
mov
dec
lret
xchg
adc
enter
xchg
xchg
lcall
sbb
stos
adc
mov
push
adc
sbb
sti
xlat
mov
xor
pop
pop
fs
ds
pop
xchg
cltd
sbb
mov
dec
and
push
pop
cs
sbb
stc
sub
cltd
aam
loopne
jle
sub
lods
sub
test
dec
sub
out
stos
mov
sub
mov
jo
scas
cmp
dec
mov
jne
cmp
sarl
outsl
in
and
in
cmp
shlb
mov
sbb
sbb
xor
mov
pop
js
xchg
adc
in
fucomp
setle
and
add
and
cmp
test
or
jg
cmp
inc
in
aad
mov
in
loope
movsb
pop
mov
sahf
xor
insb
inc
push
out
cwtl
cmpsl
ret
fsts
bound
xchg
out
add
and
mov
sub
jne
xchg
cmc
sub
std
aas
je
pop
lods
xchg
test
pop
or
mov
popl
arpl
popf
cmc
cmp
xchg
data16
pop
icebp
fistps
test
nop
mov
pushf
sbb
mov
jge
in
hlt
out
xor
mov
cmc
fwait
sbb
or
mov
test
pop
sub
mov
or
xchg
xor
pop
ror
lea
aaa
mov
sbb
jg
dec
jae
xchg
add
fwait
test
sbb
jg
leave
shl
lret
xor
add
xchg
int
inc
pop
sbb
mov
dec
sub
mov
mov
mov
add
mov
or
leave
aas
lret
mov
popa
ds
js
xor
dec
std
sbb
xchg
repnz
mov
xchg
dec
stos
fiadds
pop
sbb
xchg
jns
dec
bound
add
mov
push
mov
fdivrl
lods
sub
les
test
sub
das
sbb
popa
test
push
imul
lock
lods
addr16
pop
scas
pop
jmp
jns
cs
add
ret
out
shll
cli
pop
lods
adc
insl
out
jne,pt
dec
bound
push
rcrb
popa
mov
add
push
lret
inc
pop
add
in
mov
jecxz
add
sub
test
cmp
xlat
and
dec
sahf
pop
cmp
push
add
enter
or
sbb
cmp
data16
jbe
fwait
test
cwtl
rcrl
sub
xchg
imul
test
xlat
scas
add
sub
or
fidivs
inc
lret
lahf
inc
shlb
dec
jbe
out
inc
or
into
pop
testl
or
mov
inc
xchg
cli
movsl
xor
inc
xor
stos
out
pop
shr
lcall
call
cmp
push
xor
mov
addr16
mov
mov
and
dec
cmc
or
int3
lahf
pop
cmpsl
out
ja
adc
push
mov
in
inc
xchg
int3
out
mov
fcmovnu
and
xchg
mov
sbb
bound
add
sbb
sbb
mov
xor
xchg
aas
mov
mov
cmp
jnp
cmp
lea
jno
fildll
rcrb
sub
lahf
js
test
jb
popa
mov
push
or
cmc
jmp
mov
jns
imul
je
xchg
or
ss
insl
sbb
push
mov
sahf
inc
xchg
push
nop
insb
pop
sbb
jge
jmp
mov
mov
sbb
in
arpl
mov
jmp
in
push
jg
int
icebp
jns
jg
das
setne
mov
cmp
mov
mov
add
lock
add
pop
xchg
mov
leave
das
cmp
pop
adc
mov
xor
pop
inc
cs
js
cmp
scas
rep
call
xor
movsl
sbb
dec
std
pop
rcll
jo
push
or
pop
dec
repz
push
test
pop
or
cmp
push
loope
mov
fbstp
xchg
or
push
add
xchg
mov
jle
stos
test
mull
jno
mov
sahf
sti
adc
imul
fsubs
push
test
cmp
push
loope
adc
mul
repz
je
xlat
lds
and
mov
imul
sub
pop
hlt
jge
lods
or
push
data16
rcl
adc
lcall
push
mov
mov
cmp
shlb
xor
psadbw
pop
xchg
dec
das
addb
xchg
imul
cmp
sub
test
push
pop
scas
and
iret
adc
nop
popa
jno
mov
insl
adc
into
fwait
push
and
pop
jle
xor
mov
das
pusha
cli
sub
push
leave
xlat
repnz
out
inc
mov
js
mov
movsb
repz
aam
in
imul
push
mov
sub
insb
push
xor
cmp
popa
xor
fs
call
fwait
shrl
sbb
ret
je
push
in
cwtl
aas
pop
shlb
inc
xchg
pop
inc
imull
sbb
pop
dec
es
mov
add
imul
jne
pop
icebp
dec
lret
fsubl
adc
test
mov
xchg
pop
and
mov
mov
push
inc
rclw
xchg
jmp
movsl
fcompl
aad
or
vmwrite
testl
pop
ds
cli
xchg
dec
shrl
fstl
popa
test
lret
push
test
xchg
sub
sub
pop
pop
mov
mov
popa
xchg
dec
in
lock
xchg
pop
movsb
mov
cmp
sbb
pop
dec
jp
pop
mov
ficoml
mov
jnp
jb
mov
leave
push
sub
adcl
mov
xor
dec
in
xor
inc
ja
cmp
mov
or
push
je
lea
dec
lcall
jo
jo
cs
jne
test
in
jg
dec
mov
xor
pop
jle
jge
pop
pop
xchg
dec
add
ret
adc
ss
or
mov
ja
repz
pushf
shrl
cmpsl
sbb
or
sti
sbb
inc
hlt
aaa
incl
lock
mov
jg
xchg
cmpsb
sbb
adc
add
sub
lock
adc
rclb
cld
and
mov
mov
test
cwtl
sbb
data16
rorl
add
aas
push
aas
push
and
inc
pop
and
lds
ljmp
cltd
and
xchg
or
mov
out
leave
leave
leave
nop
fxch
jnp
imul
add
lods
mov
je
pop
test
fwait
jl
lahf
addl
lret
in
push
test
sbb
sbb
or
xchg
std
sub
je
sub
inc
lahf
test
pushf
or
std
add
mov
and
sarl
sub
mov
mov
and
sbb
and
mov
pop
pop
push
into
jmp
pop
iret
mov
fwait
add
das
mov
std
xchg
or
cmp
or
push
jmp
jb
mov
mov
pop
movsb
int3
loope
add
aad
stos
xor
mov
fldl
jmp
out
in
jge
cmpsb
lea
aam
imul
jbe
mov
cmp
outsl
add
out
repnz
addr16
push
mov
mov
data16
jo
inc
leave
decb
idiv
imull
xlat
subb
add
fsubp
dec
dec
adc
lret
or
icebp
adc
sub
inc
adc
push
sub
sbb
or
dec
and
jae
and
shlb
lret
push
ljmp
dec
inc
popf
or
cmc
imul
add
in
mov
adc
clc
xlat
fwait
divb
ljmp
xchg
adc
pop
fistl
xor
add
jecxz
mov
sub
movsl
loop
cmpsb
mov
pop
jecxz
mov
inc
inc
nop
mov
movsl
xchg
fs
xchg
push
inc
pop
jb
mov
aad
mov
lahf
pop
loope
pop
fcmove
xchg
mov
pop
mov
enter
mov
pusha
mov
dec
sbb
cmp
mov
adc
test
cmpsl
add
mov
mov
repz
cwtl
ret
jmp
int
lods
shrb
jb
test
xchg
cmp
out
jo
cli
jno
lock
rcll
xchg
cmp
fmuls
adc
add
xchg
punpcklbw
insl
sub
jbe
push
pop
loop
mov
fsubrl
mov
dec
test
sub
cmp
jecxz
enter
pop
xchg
xorl
lcall
and
int3
out
imul
daa
fcoml
fs
shll
mov
dec
sub
int
repnz
test
sti
mov
leave
jb
push
into
rcrb
sbb
push
mov
pop
push
cmp
add
inc
ffreep
je
jae
pusha
sub
cwtl
mov
jo
inc
aas
xchg
mov
sbb
popl
ret
ret
aad
cmp
cmp
mov
test
das
mov
adc
nop
pop
movsl
sbb
divl
das
mov
mov
shll
xor
jmp
clc
add
shll
xor
dec
scas
es
shrb
or
pop
inc
scas
xchg
mov
xchg
daa
scas
cmp
push
push
mov
mov
repnz
xchg
int3
pop
push
cwtl
stc
sti
es
sbb
imul
repnz
loopne
xor
jmp
jno
lods
ljmp
jae
mov
aaa
int3
das
lret
in
inc
sub
test
orb
repz
lcall
es
cld
xor
shr
lock
divps
sub
rorl
cld
test
and
dec
shr
pop
sbb
fsubs
inc
aad
cmpsb
je
in
mov
jmp
sbb
mov
scas
sub
or
outsb
xor
mov
popa
aam
scas
ret
mov
push
mov
xchg
inc
in
out
mov
mov
push
fnstenv
xor
test
cli
sti
mov
cmpsb
mov
cli
jns,pn
fwait
xor
jg
pop
inc
xchg
or
xor
sub
fsubl
and
mov
mov
sbb
pop
pop
ja
shrl
jmp
xor
and
push
pop
cmp
pop
mov
jmp
pop
into
inc
adc
clc
mov
sub
cmp
rcl
bound
in
lahf
int
and
lock
pop
inc
cmp
fcoml
dec
ret
lret
mov
das
jae
xchg
jae
cmp
in
sbb
out
dec
xchg
or
push
mov
decl
pop
or
insl
jbe
rorb
ljmp
sbb
dec
aam
addr16
mov
idiv
pop
mov
jl
test
inc
or
jecxz
imull
fistpll
mov
gs
jmp
sti
and
and
das
into
frstpm(287
add
sbb
xchg
sbb
mov
add
or
loopne
inc
pop
nop
or
or
dec
shr
loopne
jmp
lahf
jmp
lock
arpl
adc
rcll
mov
mov
add
mov
fidivrs
adc
dec
xor
mov
repz
lods
mov
add
or
or
pop
stc
mov
fidivs
mov
mov
stc
push
scas
clc
push
std
movsl
mov
in
sub
insl
sub
push
inc
mov
cwtl
ret
dec
gs
negl
xchg
andb
lea
test
int
or
pop
xchg
mov
out
jno
in
dec
sub
fwait
cmp
imul
ja
in
inc
push
dec
enter
iret
dec
mov
fcoms
sbb
scas
gs
movsl
xchg
pop
daa
test
xchg
dec
add
xchg
cmpl
jb
cmp
addr16
loop
pop
stos
cmp
std
adc
cmp
sbb
fsubrp
xchg
daa
or
jge
push
arpl
jne
mov
push
in
ret
test
dec
or
lcall
adc
mov
lcall
push
dec
and
and
popf
mov
ret
aad
mov
xor
or
mov
jo
mov
shlb
pushf
pop
mov
jle
jmp
or
push
or
hlt
xor
dec
adc
dec
out
mov
out
add
adc
daa
imul
sub
pop
push
or
arpl
push
mov
ja
test
test
cmpsb
in
mov
adc
lcall
inc
xchg
into
imul
mov
adc
sbb
inc
xchg
cs
das
pushf
xchg
jo
cmp
lea
dec
jmp
push
jne
insl
mov
mov
pop
rcr
mov
sahf
and
mov
xlat
loope
xchg
adc
pop
inc
add
xor
sbb
out
mov
dec
inc
jmp
mov
out
outsl
sbb
ret
hlt
pop
inc
and
adc
cmpsb
sbb
arpl
insl
cmp
add
xchg
adc
add
xchg
sub
sti
and
push
dec
push
lds
push
cwtl
int3
shlb
dec
xchg
sub
dec
sysexit
push
xlat
push
inc
pop
sahf
xchg
aaa
xor
and
xchg
push
out
jle
stc
jo,pt
add
mov
insl
push
dec
cmpsl
push
sbb
sub
mov
push
xchg
jecxz
aaa
add
mov
rcll
adc
ljmp
jmp
cld
push
ds
pop
mov
inc
mov
or
dec
mov
js
test
mov
enter
xor
nop
shll
pop
sbb
pop
popf
fcompl
push
mov
mov
ds
and
jb
lds
pop
cld
aam
clc
fidivrl
sub
push
cltd
mov
xchg
mov
or
sahf
inc
jge
inc
cld
loop
popa
pop
popf
out
pop
out
mov
mov
adc
insl
bound
jno
adc
xchg
dec
out
fwait
insl
pushf
mov
pusha
add
je
and
jnp
xor
in
inc
push
sbb
std
inc
mov
daa
xchg
cmp
pop
in
lods
into
cmp
je
arpl
jbe
mov
lret
pusha
rorb
xlat
gs
sub
and
and
leave
fistps
sub
lcall
enter
and
mov
xor
push
push
jp
rorb
jbe
ret
jbe
cmpsl
lock
dec
fwait
nop
inc
inc
inc
sarl
pop
push
ret
shrl
or
stos
pop
mov
mov
int
ljmp
dec
pop
pushf
push
lahf
loopne
mov
mov
push
sbb
ss
mov
sbb
mov
dec
repz
ficoms
std
imul
adc
push
bound
cmpsb
xchg
add
cld
mov
pop
and
shll
enter
xchg
sbb
mov
add
pop
js
jnp
packsswb
int
aaa
cs
clc
jmp
into
repnz
push
lcall
sbb
mov
mov
xor
inc
addr16
pop
fstpl
imull
mov
push
or
sbb
mov
adc
add
jnp
jg
mov
and
pop
mov
ds
mov
cmp
mov
aad
cld
fbstp
cmp
mull
clc
loopne
lods
xor
js
insb
mov
push
and
sti
and
pop
es
adc
cli
into
je
testb
outsl
sub
or
push
je
icebp
mov
jg
test
xor
push
adc
mov
sti
js
sbb
cmp
mov
xlat
aam
push
add
mov
fists
int3
and
xchg
sub
pslld
mov
pop
scas
sahf
ficomps
xchg
test
test
inc
jb
jno
fstl
xchg
push
inc
xor
stc
xorl
loop
mov
and
sub
fildll
or
dec
pop
sbb
dec
imul
push
ss
test
xor
imul
cmc
loopne
or
cwtl
arpl
test
lcall
dec
montmul
cmpsb
inc
insb
fs
lods
pushf
es
push
mov
and
add
pop
push
ljmp
aam
push
movsl
fcomip
xlat
push
mov
pop
jo
or
push
or
ljmp
xor
inc
aam
lret
addb
cmp
stos
dec
xchg
pop
psrlq
insb
jecxz
add
sub
pop
lcall
cmp
xchg
data16
adc
cmp
out
add
lret
sbb
cmpsl
aad
mov
js
addb
loop
aaa
adc
dec
fldt
pop
rolb
or
out
outsb
loope
lds
repz
pop
aas
out
outsl
sbb
jmp
mov
leave
adc
xchg
dec
dec
insl
and
inc
pushf
inc
adc
test
pop
loop
pop
jge
testl
xorb
mov
js
mov
mov
cli
sbb
add
and
mov
cmp
mov
sub
aas
test
adc
xchg
data16
sbb
inc
mov
mov
inc
lcall
push
fmull
iret
push
cmovbe
and
and
lds
dec
in
clc
imul
je
add
cmp
out
in
jno
push
or
popa
cmp
cld
inc
pop
in
ficompl
out
shlb
stos
jl
and
cmpsb
cmpsb
shl
pop
cli
mov
mov
and
outsb
cli
mov
xor
cmp
loopne
pop
add
mov
inc
cmp
scas
mulb
fcmovu
mov
shl
in
push
and
mov
lcall
mov
loopne
push
sti
mov
loopne
mov
pop
call
xchg
or
rolb
push
ja
jbe
sbb
hlt
mov
test
aam
mov
cwtl
stos
xor
dec
es
cmp
xor
lock
adc
inc
add
xor
lds
xor
int
push
bound
push
add
dec
inc
or
mov
push
push
xor
popa
sub
rclb
inc
mov
ffree
xor
subb
adc
inc
pop
sti
icebp
scas
or
lock
pop
jb
push
and
notb
dec
and
push
pop
pushf
cli
add
lcall
xorl
je
mov
sub
movsb
pop
push
out
adc
sub
fwait
sbb
int3
jmp
fcomip
pop
and
xchg
or
fs
and
or
mul
add
scas
sbb
nop
rcll
sub
int
int3
pop
in
fidivl
inc
insb
sbb
test
into
jb
jle
xlat
test
jge
push
test
xchg
daa
aad
cmp
pushf
push
cmp
jo
stos
stc
repnz
mov
rorb
ljmp
sbb
outsl
sbb
xchg
and
rol
mov
lcall
and
clc
sub
out
jo
sbb
gs
push
cld
shll
test
mov
mov
cmpsl
and
adc
filds
mov
pop
cmp
cmp
xor
mov
pushf
jle
call
inc
inc
jo
in
xor
adc
cmp
fcmovnb
loop
fs
mov
xor
shrl
loop
mov
rolb
sub
cmp
push
cli
fs
dec
out
push
sbb
pop
xor
xor
cltd
sbb
out
lds
pop
loope,pn
adc
jge
dec
int
adc
cltd
dec
lcall
lret
in
test
or
adc
push
cltd
fninit
mov
sarl
pop
mov
ret
sarl
push
into
and
ret
int3
cld
pop
inc
fistpll
and
daa
stos
push
roll
push
adcb
push
in
addl
enter
add
out
dec
int3
jbe
fwait
mov
mov
int3
mov
and
cmpsb
out
adc
fwait
inc
addb
add
or
enter
mov
out
cwtl
mov
in
mov
stc
and
inc
cmp
add
repz
mov
mov
jg
sub
dec
adc
lock
mov
int3
outsl
mov
push
dec
jg
aam
mov
cmp
add
scas
iret
mov
stos
xchg
addr16
rep
inc
sahf
push
ja
pop
add
out
push
out
movsl
dec
xchg
or
sub
stos
pop
or
dec
mov
mov
or
jb
inc
mov
push
outsl
push
add
xchg
je
push
and
cmp
xchg
mov
insb
cmp
nop
mov
xchg
push
dec
in
dec
jno
mov
cwtl
mov
inc
mov
ret
jnp
push
dec
adc
pushf
jmp
imul
ficoml
sbb
push
pop
idiv
inc
add
sti
mov
sbb
iret
lret
cwtl
movsl
jecxz
jmp
jns
jae
test
and
mov
jne
xchg
xchg
adc
stc
in
sub
and
push
sbb
int3
lock
inc
and
xchg
in
and
cmp
xor
jae
mov
or
clc
mov
xchg
pop
push
test
ja
cltd
dec
stc
xchg
mov
mov
pop
popa
imul
mov
ljmp
dec
pop
cmp
adc
xor
das
loope
daa
cs
mov
jns
cmp
loope
sub
xchg
dec
cmpsl
sub
in
xchg
les
popa
inc
xor
popf
out
sbb
inc
jp
mov
into
in
leave
ljmp
inc
adc
inc
cs
jb
xor
mov
fcoms
dec
or
mov
dec
lods
scas
aas
mov
xor
jnp
mov
xchg
pop
mov
pop
fs
push
popa
pop
cltd
jnp
pop
fs
add
xor
mov
in
jo
fsts
lea
insb
ret
mov
addr16
cs
inc
pushl
add
out
dec
cmp
enter
icebp
push
loope
pop
inc
push
sbb
jae
jo
xchg
xchg
push
out
clc
ficompl
cwtl
fidivrl
xchg
adc
fimuls
jl
test
or
xchg
iret
clc
push
outsb
xor
inc
mov
orb
xor
mov
lret
and
roll
dec
popa
arpl
mov
and
sbb
or
imul
mov
sti
pop
xor
and
pop
xlat
sbb
int
jo
jge
inc
shll
mov
imul
aas
push
aad
arpl
hlt
xchg
mov
int
addl
sbb
clc
je
push
push
cld
out
rcrl
mov
and
lds
mov
int
shr
cs
mov
rcrl
out
mov
pop
and
mov
cmpl
xchg
sarb
add
adc
xorb
lods
sub
lahf
push
mov
jns
mov
cmp
sti
add
clc
xchg
fimuls
dec
lods
dec
test
mov
js
ss
imul
cmpsl
mov
into
ljmp
enter
jne
lea
adc
or
mov
mov
sbb
sub
dec
push
cs
aam
dec
and
fnstsw
sbb
mov
sub
sbbl
iret
cld
bound
jge
sub
and
ja
mov
addr16
xor
lods
push
fucomip
cmp
nop
push
push
cmpsb
std
adc
mov
sahf
sbb
scas
xchg
sub
in
pop
xorb
sub
inc
std
shll
roll
inc
andl
jge
xchg
mov
not
adc
sub
imul
enter
aas
mov
inc
imul
and
cwtl
push
inc
test
xor
out
daa
fwait
test
stc
mov
jge
lock
push
jno
in
jecxz
imul
pop
das
adc
inc
cmp
popa
push
xor
testb
cmp
jg
push
bound
shlb
adc
ret
imul
scas
stc
or
add
packssdw
sbb
jnp
cs
sub
mov
xlat
and
out
mov
shlb
cmpsl
out
pop
std
ret
dec
clc
lock
mov
icebp
mov
sbbb
xchg
aad
out
push
shrl
cmpsb
stc
sbb
jne
add
fstpl
inc
jmp
stos
cvttps2pi
repz
scas
push
mov
pop
popa
gs
add
aad
push
dec
sbb
movsl
sahf
pop
or
ljmp
pop
cld
and
xor
xor
loop
sub
lcall
jecxz
and
push
aas
je
aas
mov
mov
mov
or
fiadds
jo
dec
or
gs
insb
popf
repz
rorb
pop
int
add
adc
push
pop
pop
sbb
dec
je
push
mov
sub
adc
sarb
ficoms
mov
push
push
test
or
sahf
test
cmp
jb
dec
dec
addb
aaa
jg
popf
out
out
fnsave
aam
repz
jmp
shlb
inc
push
imul
lahf
int
xor
pop
mov
cmp
fistpl
cmc
pop
in
sub
inc
fisubrs
mov
cmpsb
push
in
sub
or
gs
adc
sub
mov
sub
das
mov
mov
pop
stc
cmpsl
test
cmp
fwait
popa
adc
pop
arpl
xor
mov
mov
mov
call
dec
aam
les
pop
inc
shlb
push
bound
shll
xlat
popf
adc
pop
jae
movsl
test
jg
or
enter
sub
testb
pop
adc
mov
sbb
addr16
int
jbe
in
sub
xchg
pusha
das
xchg
jmp
and
ret
push
dec
add
lods
stos
cltd
and
repnz
loopne
and
mov
cli
sbb
add
add
jbe
js
shll
dec
and
scas
fdivl
aad
pop
mul
aad
pusha
rcll
test
clc
cmp
int3
dec
ss
cmp
bound
insl
stos
fildll
jg
push
sub
pushl
ljmp
addr16
pusha
sbb
xor
ja
add
pop
int
xor
das
call
sub
jp
xor
xchg
incb
lret
imul
mov
lods
stos
add
mov
pop
xor
stc
addr16
fdivrs
inc
sti
call
mov
orb
aaa
sbb
dec
mov
xchg
sarl
sbb
xchg
or
cmpsl
xchg
aaa
cs
xchg
push
jo
inc
jo
xorl
or
fldl
loope
sbb
dec
push
call
xor
sti
ljmp
push
sub
sti
jl
adcl
loop
cli
mov
adc
out
cmpsb
inc
xor
push
mov
lods
adc
xor
ret
jbe
test
xchg
add
aam
pusha
lcall
rorl
cmpsb
mov
cwtl
xchg
cs
stc
pop
test
cs
loopne
daa
mov
cmp
mov
shl
push
daa
dec
out
es
cmpsb
mov
repz
ret
push
leave
fisubrl
adc
jecxz
test
xchg
mov
in
clc
xchg
pop
loope
xchg
xor
dec
jp
sub
dec
inc
xchg
dec
mov
xchg
std
xor
icebp
pop
cmc
arpl
mov
pop
cld
andb
push
scas
pop
js
xchg
xchg
enter
cmc
fdivrs
mov
xor
stos
outsl
and
or
mov
ljmp
xor
test
aam
xor
cltd
mov
dec
lods
out
dec
jg
loopne
xchg
loope
adc
sbb
jle
insb
popa
push
call
leave
xor
add
out
pop
mov
das
ljmp
dec
xor
pop
dec
jge
xor
ja
loope
mov
test
jmpw
xchg
mov
dec
xlat
pop
and
jno
mov
dec
mov
mov
and
or
mov
sub
adc
in
stos
cwtl
enter
xchg
jbe
dec
cwtl
adc
test
in
es
jnp
andnps
jbe
ret
mov
cwtl
adc
and
jae
push
push
pop
dec
sarl
mov
ret
pop
push
add
lret
test
cmc
add
xchg
mov
inc
ljmp
lcall
jno
pop
xlat
add
jge
jle
mov
in
inc
rol
xor
jg
sbb
sub
mov
sbb
test
push
mov
fwait
cmp
sbb
push
sti
int3
xor
pushf
js
xor
xor
cltd
sub
adc
mov
lock
aam
fcmovbe
popa
push
mov
cmpsb
jnp
fwait
sbb
imul
inc
xchg
jae
mov
sbb
stos
fisubl
scas
xchg
movsl
leave
incb
push
jns
rol
cmc
push
fsub
movsb
mov
jmp
subb
sti
aam
push
pop
adc
cmpsl
push
jle
pop
insl
jmp
inc
xor
jg
xchg
loop
adc
lea
xor
sub
shll
pushf
test
scas
and
sar
pop
sbb
jp
loop
dec
mov
inc
add
movsb
jno
iret
or
aad
sub
enter
pusha
shll
and
and
lods
test
jle
idivb
into
or
pop
outsl
fwait
popl
jle
lea
lcall
lahf
fidivrl
or
sarb
add
in
mov
pop
push
push
cmp
movsb
push
std
out
pushf
push
pop
cmp
scas
xlat
mov
imul
or
sub
xor
aad
daa
mov
mov
and
and
jl
sbb
sbb
xchg
jmp
push
xchg
inc
fisubrl
sbb
arpl
in
cmp
xor
stos
arpl
mov
scas
mov
mov
sub
int
test
add
in
fldenv
into
mov
test
sub
std
mov
add
dec
jae
pushf
popf
out
cmp
inc
mov
dec
push
insl
xchg
adc
xchg
outsl
dec
sbb
sbbl
fldcw
mov
in
cmp
aas
or
pusha
imul
and
lods
mov
fnstsw
mov
imul
test
inc
adc
cli
jne
lock
jns,pn
pop
arpl
mov
roll
mov
loop
outsb
jne
popa
mov
lahf
scas
adc
sbb
inc
adc
scas
mov
idivl
shll
fs
dec
cwtl
cmp
sub
or
push
jmp
movsb
nop
mov
leave
loope
movsl
subb
mov
cmp
test
mov
cmp
rolb
cmpsl
lcall
outsl
jmp
inc
cmp
xor
repz
or
ss
jge
imul
ss
push
push
mov
lock
jae
xor
mov
inc
or
cs
push
es
lea
inc
sbb
dec
scas
mov
dec
jge
jle
mov
mov
pop
aas
pop
pop
and
sbb
dec
and
mov
inc
lock
loopne
push
cs
mov
adc
std
aam
mov
in
or
push
and
or
jae
mov
scas
in
movsb
mov
xchg
call
scas
xchg
push
xchg
sub
fwait
pop
add
jbe
and
adc
push
aas
and
stos
int
loope
and
mov
pop
adc
sbbb
int3
cmp
out
ret
xor
push
or
jno
dec
push
aam
enter
push
mov
mov
popa
xchg
mov
aam
ficoms
push
loop
stos
inc
dec
les
aaa
subps
imul
jg
stc
xchg
imul
divl
aad
mov
xor
daa
rorb
aas
pop
dec
jns
rorb
aam
xor
mov
jmp
les
and
fstpt
add
add
inc
fwait
nop
dec
and
mov
xchg
or
sarl
daa
adc
decb
cmpsb
out
sbb
fsubrl
sbb
push
jne
ljmp
es
inc
jo
or
ret
popf
push
lock
mov
dec
mov
mov
cmp
je
sbb
sahf
lret
adc
sahf
mov
int
mov
add
xchg
out
jecxz
jmp
lea
cwtl
rcrl
cmp
leave
xchg
addr16
and
mov
and
xchg
jo
scas
gs
loopne
insl
shrl
adc
mov
je
fildll
test
jne
pop
and
cmp
pushf
pushf
pop
xor
fs
and
mov
pushf
incb
jmp
mov
pcmpeqb
sahf
cwtl
sub
mov
mov
jnp
xor
sub
movsl
out
psubq
pop
insl
lds
sahf
ret
jne
aam
xorw
dec
in
jb
pop
lret
pop
rclb
adc
add
mov
xor
pop
dec
jnp
aaa
xor
sbb
aam
fsubr
loop
sbb
cmp
rol
cmp
call
movsb
daa
sbb
or
arpl
notb
jp
inc
arpl
mov
xorl
or
loopne
mov
add
daa
lahf
mov
xchg
sti
lea
sahf
or
fistpll
les
push
lods
cmp
shrb
sbb
xor
out
mov
mov
sbb
sub
clc
scas
mov
clc
dec
hlt
dec
mov
dec
rcll
inc
gs
push
add
sarl
in
in
mov
icebp
add
test
jge
fsub
sub
pop
gs
pusha
es
mov
mov
ror
scas
pop
dec
in
lret
hlt
cltd
js
adc
cwtl
sbb
push
hlt
int3
pop
push
mov
or
xor
dec
sbb
cld
mov
iret
jbe
or
ret
and
leave
sub
fst
mov
leave
and
shrl
incl
adc
lea
fs
insb
push
jne
insb
std
add
outsl
push
sub
outsb
iret
scas
push
sub
add
sbb
out
ficoms
mov
adcb
dec
push
cltd
cmpsb
cli
addr16
mov
shll
dec
iret
btl
bound
xchg
adc
sbb
mov
repz
mov
repnz
scas
pop
test
cmc
dec
xor
movsb
sbb
aam
jmp
ret
lods
jecxz
addr16
jbe
xchg
cli
stos
mov
test
cmpsb
xchg
adc
stos
sbb
roll
push
cmc
mov
jae
in
or
mov
jl
mov
out
dec
hlt
fucomp
ja
icebp
out
jnp
int
pop
lret
clc
sub
inc
aam
fs
cmp
addr16
mov
ja
xchg
in
mov
mov
dec
pushf
data16
sbb
mov
mov
cmpsl
mov
lock
nop
movsl
or
lret
ja
cli
cmpsl
adc
test
imull
lahf
push
mov
lret
cmp
jno
cmp
nop
cmp
mov
push
inc
push
mov
cli
cmp
inc
mov
jnp
mov
fs
xor
roll
das
fstps
stc
mov
push
dec
out
js
add
push
stos
push
mov
stos
leave
pop
arpl
add
fwait
jg
cmpsb
sub
xor
sahf
sbb
jae
sbb
dec
and
adc
lds
lret
daa
mov
xchg
jae
nop
or
pop
cmp
mov
or
push
xlat
ss
and
and
cs
scas
lds
sbb
ds
jle
lods
add
adc
lea
inc
adc
and
cmc
test
jne
push
xchg
push
and
cmp
jb
jae
pusha
sub
cmp
out
cmp
lods
dec
dec
cld
sub
xor
sub
jae
mov
test
and
shll
leave
mov
into
ljmp
sarb
mov
xchg
out
push
pop
les
xchg
cmp
loop
aam
xchg
rolb
ja
mov
inc
sub
push
xchg
ja
ficomps
pop
fucomi
cld
dec
mov
xor
rcll
clc
xor
lcall
and
outsb
mov
into
or
dec
push
test
aas
clc
leave
sahf
sbb
xlat
adc
jbe
cmpsb
js
xchg
lock
nop
jb
repnz
push
cltd
mov
inc
loope
pop
stos
push
mov
inc
sbb
push
mov
jne
ss
pop
and
cmpsb
popa
in
adc
sub
sub
pop
sti
jo
int3
test
mov
jae
testb
lahf
icebp
cli
jns
push
lret
and
subl
fbld
inc
fisubl
dec
pop
stos
jne
es
loop
jae
jo
out
cltd
call
adc
in
cmp
dec
pop
lret
arpl
inc
cmp
sub
loope
mov
adc
adc
sti
subl
jp
std
int
lret
mov
jl
imul
lcall
xchg
xchg
push
sbb
pop
fisubrl
push
rclb
outsb
shrl
data16
sub
out
mov
arpl
jo
mov
inc
mov
push
push
dec
or
cmpsb
sbb
aam
xchg
or
popa
mov
verr
adc
mov
arpl
mov
xchg
jecxz
jb
inc
fldt
jmp
mov
pop
div
pop
xor
sbb
push
push
pop
xchg
cmp
mov
xor
sub
aam
rcll
sbb
mov
leave
imul
jbe
ja
cwtl
push
call
clc
out
clc
inc
xor
inc
pop
mulb
jae
push
and
push
and
repz
insb
in
movsl
mov
nop
outsl
add
jg
int3
insl
push
outsl
xlat
data16
out
mov
test
shlb
cmpsl
add
pushf
test
inc
jmp
push
xor
dec
push
and
mov
xchg
and
sbb
es
push
mov
add
popl
fildl
xchg
or
pop
sbb
fwait
xchg
dec
push
aam
xor
jbe
loop
mov
cmpsb
pop
dec
or
jns
dec
xchg
rcl
adc
push
xchg
lahf
xor
cmc
lahf
mov
pop
pop
and
pop
dec
sub
xchg
dec
lcall
fidivrs
push
push
loopne
cld
es
loop
int
iret
dec
jg
jno
stos
inc
and
mov
rcll
lock
out
int
sub
xlat
push
push
bound
ret
push
sahf
add
adc
pusha
jae
jns
clc
sbb
arpl
popf
push
fmuls
fldt
aam
mov
mov
xchg
and
pop
fstpl
sub
push
xor
out
mov
mov
fisttpll
jle
es
in
ret
fidivl
mov
mov
shrb
fidivrs
sbb
hlt
ffreep
add
cmp
pop
icebp
push
out
ret
aas
ljmp
sbb
rolb
or
lret
fadds
pop
xlat
jg
outsl
inc
and
jp
lods
lea
xor
scas
adc
adc
dec
sti
jecxz
sbb
movsl
movsl
jb
nop
push
push
in
sbb
sub
lods
xor
sbb
jbe
dec
mov
inc
jg
popa
xchg
jmp
outsl
mov
and
rep
bound
fiadds
js
xor
cli
push
add
or
sub
pop
push
inc
outsb
pop
adc
stc
jb
nop
pop
loop
scas
jo
std
sub
xchg
jge
ret
shlb
fdivrl
inc
pop
push
pop
adc
xchg
jne
clc
dec
movsl
lods
xor
lods
aad
mov
sbb
cmpsl
repz
mov
and
aam
or
das
mov
mov
call
adc
stc
in
jo
xor
lea
andl
mov
sub
sub
push
xor
or
inc
mov
cvtps2pi
pop
jbe
scas
sub
hlt
aam
mov
cmpsl
pop
pushf
adc
add
fwait
push
sbb
pop
pop
icebp
pop
sbb
dec
cmp
lret
adc
sbb
out
jae
testb
js
iret
sbb
not
sbb
lds
repz
mov
push
inc
sbb
in
xchg
adc
add
jmp
fidivrl
imul
xchg
orb
jae
jecxz
push
aam
mov
adc
pop
cmp
mov
xchg
ljmp
daa
dec
ficoml
sub
movb
outsl
xchg
dec
jg
jnp
push
fmulp
imulb
xchg
adc
xor
sub
cmp
add
stos
dec
inc
push
or
pop
pop
mov
mov
adc
test
test
dec
daa
and
lods
sub
les
xchg
arpl
xor
test
cmp
test
into
rolb
dec
push
dec
mov
xchg
out
cmpsl
jne
xor
loopne
pop
push
inc
and
dec
ret
or
pop
push
adc
pop
mov
lods
stos
pop
xchg
jmp
inc
xchg
cli
xchg
xlat
neg
pushf
fimull
pushf
lret
xchg
or
lock
scas
ds
mov
shll
mov
aas
loopne
std
sub
clc
fisubs
mov
cmpsb
lods
call
movsb
jbe
mov
mov
xchg
les
sub
jmp
bswap
loopne
hlt
js
clc
scas
aaa
inc
cli
add
cmp
adc
sbb
mov
jmp
mov
lods
dec
mov
and
inc
iret
cs
inc
imul
dec
std
daa
jp
cmp
lret
ret
mov
jns
lods
dec
jae
mov
cld
cmovg
cmp
scas
shlb
or
outsb
mov
out
add
insl
push
xchg
and
pop
arpl
sbb
add
int3
mov
push
cmp
daa
lret
cmp
mov
arpl
js
movsl
addr16
push
popa
sub
in
repnz
test
and
mov
and
roll
xor
fsubrl
cmp
stc
lods
data16
fcomi
xor
rcrb
enter
xor
xchg
and
cmc
in
push
icebp
pusha
fistpl
and
mov
ret
in
jp
cmp
and
mov
jb
push
call
inc
and
mov
push
fiaddl
fsubrl
nop
cwtl
sub
pop
fwait
push
sub
jae
push
aad
rorl
mov
cmp
call
inc
adcb
dec
mov
aam
out
inc
subb
or
adc
and
enter
mov
or
mov
out
int3
push
push
outsl
cltd
adc
int
cmpsl
loopne
cli
mov
jp
xchg
push
xchg
pop
test
dec
dec
dec
stos
pop
out
cmp
pop
mov
or
xchg
xor
jmp
mov
lods
xchg
pop
push
mov
in
xchg
out
shl
icebp
ljmp
and
je
sbb
aas
mov
daa
lret
adc
aas
mov
ror
mov
jg
mov
jecxz
dec
int3
pop
cld
cli
into
xchg
add
test
clc
inc
cmpsl
jb
sub
and
mov
jo
adc
mov
dec
out
subb
gs
inc
popf
jnp
loopne
pop
stc
cmpsl
fidivrs
pop
into
in
cmp
pop
xchg
mov
loope
and
jmp
cmp
mov
cmpsb
mov
cli
lret
sbb
or
imul
jbe
js
jge
sub
or
lret
push
rcr
and
add
mov
inc
rcrl
inc
dec
mov
xchg
pop
daa
mov
mov
out
inc
fadds
xor
mov
push
xchg
or
inc
add
pusha
aaa
enter
mov
pop
shl
bound
mov
cmc
js
int3
outsb
jle
inc
jge
pop
call
push
xchg
inc
cmc
push
add
xchg
add
inc
pop
xchg
and
sbb
popa
sarb
mov
sar
mov
rcll
jo
addl
and
pop
xchg
fwait
lret
xchg
jbe
inc
dec
mov
loopne
shlb
scas
imul
jg
jmp
insb
std
push
fidivs
or
into
loop
sub
sub
stos
lods
adc
ljmp
loope
loop
aas
mov
lds
xchg
adc
out
add
push
sbb
fwait
adc
mov
movsb
mov
scas
sub
leave
jae
aas
enter
jle
clc
fadds
push
dec
movsb
mov
add
int
movsb
loop
iret
sub
call
dec
movsb
push
lahf
dec
test
insb
xor
sti
cmc
int
fwait
sahf
fsubp
out
mov
fldl
sub
xchg
aam
sar
imul
aam
out
xor
mov
xchg
outsb
shl
push
push
mov
adc
lods
pop
mov
lock
or
imul
clc
add
aaa
push
rorl
xor
int
cmp
adc
stc
xor
adc
lret
adc
mov
mov
inc
push
inc
lahf
outsl
push
fstpt
stc
sbb
cmpsl
jnp
ss
int3
mov
jns
xor
add
mov
sub
gs
jecxz
xor
addl
out
scas
test
mov
and
call
or
je
mov
jbe
ss
inc
repz
hlt
loope
mov
es
out
or
ja
ret
cmp
repnz
rcrl
and
and
sahf
out
pop
nop
stos
jbe
inc
das
insl
jne
push
loopne
ds
sbb
jge
mov
pop
cmp
sbb
mov
push
lea
hlt
stc
and
shlb
sub
or
mov
mov
push
fmull
js
lret
out
clc
jae
or
xchg
xchg
fnstcw
mov
into
daa
pop
call
jo
cmc
pop
and
pusha
xchg
movsl
mov
add
jnp
sbb
das
out
lcall
in
mov
jmp
or
loop
bound
je
or
loope
mov
es
lea
lea
push
std
popa
js
and
aas
ret
xchg
push
pushf
outsl
outsl
mov
data16
and
xchg
lea
xchg
stos
lret
das
aas
xchg
inc
icebp
int3
ret
es
add
lcall
xor
in
mov
fs
movsb
lods
xor
pop
xor
out
out
pop
loopne
ficompl
test
in
les
test
mov
mov
jp
scas
jg
mov
fs
jb
mov
sbb
std
mov
mov
mov
xor
and
lcall
mov
inc
lret
fists
jecxz
adc
rcl
ja
iret
daa
int
cs
cmp
xchg
mov
push
in
jle
lret
add
cld
mov
fstl
popa
out
fdivl
fbld
adc
mov
sub
push
sbb
pop
cli
cmovno
pop
push
out
movsl
xor
push
cmp
je
ds
xor
out
xor
jbe
dec
jne
loop
das
out
imul
adc
xorl
add
xchg
inc
push
ds
lods
pop
inc
mov
xchg
ret
int
arpl
mov
scas
or
dec
icebp
jmp
popa
sub
test
mov
cwtl
or
jmp
mov
aad
dec
adc
outsl
cmp
fisttpl
xor
orb
lods
push
mov
xchg
adc
jmp
mov
add
push
repz
xchg
dec
add
in
add
mov
pusha
and
cmp
mov
js
pop
push
or
jmp
and
fsts
aas
mov
jno
adc
sub
add
push
incb
or
and
cmpsb
mov
lock
adc
push
jle
mov
push
std
bound
and
push
dec
pop
fdivl
sub
xor
sub
scas
pop
int
cmpsl
sbb
arpl
and
outsl
aam
icebp
jl
mov
insl
out
xchg
je
or
lock
scas
lahf
in
mov
loop
sub
cmp
inc
dec
mov
popl
mov
push
push
loop
jnp
mov
fs
add
dec
mov
fbld
mov
mov
hlt
mov
hlt
sub
mov
js
data16
mov
fcomps
mov
mov
add
jno
lock
lods
jno
std
lret
cmp
cmc
cmc
xor
sarb
sbb
ret
inc
push
es
ljmp
jmp
mov
lods
and
out
and
push
xchg
push
cltd
or
jbe
or
and
out
lcall
test
insb
adc
adc
pop
push
or
imul
ret
xor
mov
inc
je
in
dec
cltd
cmp
fmull
je
add
pop
sub
and
jmp
and
xchg
lods
popf
xorl
sti
out
popf
or
xchg
add
lds
jne
test
or
sub
dec
ds
inc
dec
or
sbb
outsl
les
add
xlat
xchg
or
inc
out
lret
int
cltd
pop
ret
mov
test
mov
mov
scas
xor
mov
adc
xchg
roll
cwtl
push
mov
xor
mov
sahf
xchg
mov
xchg
mov
xchg
es
pop
test
inc
sti
push
shr
push
mov
pop
sub
mov
cmp
rorb
leave
add
out
inc
push
mov
inc
push
ficomps
mov
xor
push
sahf
aam
xchg
cwtl
daa
jne
pop
mov
imul
ds
outsl
xchg
pushf
dec
fiaddl
pop
or
inc
roll
cmpl
int3
dec
imul
inc
inc
shll
mov
orl
jno
fs
cmp
jns
pop
fxam
in
and
push
mov
lock
sarb
sbb
push
mov
sub
scas
ss
add
adc
inc
sub
lea
sahf
hlt
pop
ds
pop
mov
inc
mov
pop
stc
mov
push
xlat
aam
and
or
enter
out
dec
popf
jae
addr16
test
inc
dec
lea
push
pop
or
fildl
addr16
stos
xchg
imul
dec
mov
sub
inc
or
fs
mov
aad
lahf
push
mov
sub
cmp
jmp
lret
pop
mov
das
lods
sbb
jp
dec
cli
ljmp
push
mov
xor
or
adc
loopne
sbb
push
sub
mov
add
mov
inc
push
add
mov
sub
xchg
mov
xchg
mov
scas
out
pushf
js
fwait
push
mov
or
stos
in
cli
push
test
push
decl
push
and
mov
or
pop
fs
insl
cmpsl
push
andl
cmc
xchg
je
rcll
mov
push
movsl
jge
shl
mov
push
xor
or
or
push
or
xchg
mov
jno
aas
fs
insb
jmp
mov
fidivl
push
mov
xor
rorl
lret
mov
shll
mov
mov
add
fcoml
sbb
bound
lret
push
or
fwait
enter
in
stos
add
sbb
pop
sarl
test
sbb
inc
fdivl
mov
mov
rcr
int3
add
inc
rolb
pushf
outsl
cmpsb
mov
push
inc
xlat
fcoms
lsl
gs
mov
sub
push
rorb
cmpsb
lock
out
faddl
fxch
and
cmp
xchg
jns
lret
pop
mov
pushf
std
and
lods
call
lret
jb
lea
nop
loope
xchg
push
inc
cmc
popf
xchg
mov
mov
sbb
xor
push
or
cmpsb
mov
mov
outsl
sub
xchg
inc
sbb
mov
xchg
ror
mov
adcl
adc
xchg
sub
in
push
and
push
adc
sub
pop
aaa
add
jmp
ret
sbb
dec
ficompl
fstp
and
inc
std
dec
fcoms
pushw
jg
testl
mov
mov
sti
popf
push
and
subl
mov
mov
mov
sub
mov
int
aaa
in
sub
scas
add
cld
dec
pushf
dec
in
jecxz
aas
std
jmp
mov
xchg
or
sub
push
jge,pn
test
loope
push
inc
in
push
mov
dec
sbb
cli
pop
in
sbb
shrl
popf
es
nop
lea
xchg
scas
nop
in
and
ret
scas
lcall
out
xlat
adc
push
aas
fisubs
in
daa
jns
neg
and
popa
pushf
gs
xchg
daa
push
fs
xor
mov
loop
mov
or
or
in
andb
dec
adc
sbb
andb
cmp
call
imul
in
jge
imul
xchg
push
sbb
mov
inc
mov
jne
lcall
cs
push
sub
arpl
mov
add
add
daa
imul
dec
pop
ret
and
jl
outsb
dec
out
jl
xchg
pop
test
pop
pop
subl
out
sahf
pop
and
cmc
imul
dec
out
out
or
loop
push
push
sub
gs
xor
lret
fisubl
dec
cltd
dec
out
enter
sbb
mov
sbb
mov
add
outsl
cmp
mov
lcall
insl
insb
lret
xchg
loopne
mov
push
mov
sbb
cltd
cmp
fisttps
inc
adc
lods
xorb
cmp
push
popl
pop
js
lods
out
sbb
cmc
jge
stc
or
int
or
stos
xchg
pop
and
xchg
loopne
lea
dec
imul
or
in
xchg
xchg
int
out
and
jne
test
adc
xchg
mov
pop
hlt
ljmp
lea
cmpsl
clc
dec
mov
xchg
clc
jns
into
push
dec
fnstcw
mov
outsb
mov
int
scas
fistl
andl
daa
pop
shrb
mov
dec
sbbb
pop
outsl
jno
cli
mov
int
rol
test
xor
stc
lods
mov
mov
mov
xchg
push
scas
addr16
xor
adc
dec
and
fadd
loop
fnstsw
cmpsb
cmp
js
cmp
movsl
js
xor
pop
test
xlat
in
mov
xor
mov
xor
sahf
pop
shll
fadds
outsl
jae
insl
iret
test
bswap
mov
push
mov
iret
mov
leave
lods
cmp
call
loop
inc
mov
arpl
push
adc
sti
jb
and
inc
aas
cmpsb
dec
inc
sbb
lret
int
sbb
roll
jecxz
push
pop
fmull
shlb
mov
add
jo
xchg
lods
jg
push
mov
sbb
add
mov
clc
sbb
xchg
in
scas
jecxz
filds
rcrb
xor
scas
and
add
jbe
pushf
hlt
nop
xchg
rcrb
and
mov
in
adc
call
mov
int
mov
or
mov
pop
jp
lcall
and
mov
outsl
rorl
cmpsl
ret
jle
or
jmp
or
adc
out
out
movsb
mov
mov
sbb
fldl
aaa
and
mov
inc
fcompl
int3
bound
or
xchg
push
flds
lods
aam
mov
mov
fwait
les
sbb
and
data16
loopne
dec
mov
inc
roll
jge
push
fldcw
mov
mov
in
inc
fs
jmp
les
xorb
or
xchg
in
or
arpl
jae
cmp
cmp
iret
test
adc
mov
out
mov
adc
into
xchg
sub
and
test
hlt
pop
orl
inc
sub
and
mov
add
add
ljmp
sbb
into
inc
lahf
sbb
add
mov
adc
jecxz
popa
mov
cld
ss
cmpsl
in
xor
andb
lcall
and
arpl
mov
mov
in
pop
lahf
sbb
lock
call
jb
das
mov
rcr
daa
pop
xor
or
pop
push
mov
sbb
cmp
lret
sbb
mov
incb
xor
and
les
dec
mov
lods
lock
ffreep
fsubrl
mov
mov
call
repz
jne
mov
pop
dec
sahf
pop
in
in
loopne
mov
xlat
inc
or
dec
push
mov
mov
adc
cmpsb
cwtl
cmp
pop
mov
into
dec
adc
inc
arpl
jb
scas
mov
dec
push
jle
cmpsb
push
movsb
add
push
and
insl
cmp
cmp
test
inc
pop
ljmp
nop
out
enter
cmpsb
push
testl
out
inc
sub
mov
push
cmp
in
call
lea
pusha
pushf
and
pop
in
add
add
cmp
mov
ja
push
std
test
data16
sar
jns
inc
mov
cmpl
and
sbb
mov
aad
push
lea
mov
js
xchg
or
out
testl
xchg
mov
add
sbb
test
or
cwtl
and
pop
mov
cs
rcrl
pop
pop
arpl
test
jge
cmp
pop
popa
push
sbb
dec
aam
and
cmc
sub
or
in
sarl
dec
or
bound
mov
xor
clc
daa
push
pusha
sub
stc
inc
and
fsubr
jo
sbb
push
mov
test
ret
aam
dec
cmpsl
out
jg
ret
jecxz
test
xchg
out
ret
xchg
xchg
push
lods
fisubs
jmp
adc
out
movsb
mov
movsb
sahf
cmp
xlat
cmpsl
cmc
and
or
adc
leave
lods
outsl
and
std
ljmp
push
sbb
je
call
sub
cs
inc
sbb
xor
xchg
ja
into
jae
daa
das
in
lock
lock
sti
inc
lods
lret
test
mov
mov
xor
lock
adc
and
mov
adc
fnsave
cmp
jns
jl
loopne
ds
xchg
aaa
add
mov
scas
cmp
jg
fdivrs
pop
les
or
ret
insb
or
or
push
mov
popa
jle
jp
cmp
push
xchg
mov
or
and
and
adc
movsl
movsl
outsb
arpl
jp
hlt
dec
push
push
mov
push
ret
lcall
cmpb
inc
notl
mov
loope
pushf
and
add
xor
popa
lods
lcall
testb
fcompp
scas
test
pop
xchg
cwtl
inc
aam
scas
ljmp
leave
stos
imul
outsb
jbe
imul
in
leave
cs
xchg
popl
or
imul
fdivrs
cltd
jecxz
or
test
xchg
or
jl
jb
cmc
mov
dec
sbb
and
inc
push
loop
mov
jp
ret
xchg
push
bound
cmc
xlat
dec
pop
jae
int
mov
jno
test
insl
ret
xchg
sbb
and
sub
jl
arpl
cs
std
jge
sub
stos
pop
lahf
rolb
mov
sahf
adc
lahf
imul
js
int3
adc
push
sub
icebp
pop
and
rcll
test
xor
aam
and
je
mov
cmp
jle
jo
cmp
lahf
xor
mov
cmp
mov
add
out
add
dec
push
pop
mov
popf
imul
fimull
mov
jl
sbb
lds
jl
fstps
movsl
mov
add
push
mov
inc
lahf
mov
test
cli
sub
fistpll
movb
lret
cli
orl
sub
enter
ret
pop
psubusb
sbb
out
in
jb
pop
mov
inc
mov
xchg
pop
dec
add
arpl
adc
test
flds
jns
lret
aas
jb
mov
scas
popf
jnp
adc
std
ret
pop
out
aaa
out
cld
mov
sbb
mov
pop
fnstenv
mov
cmp
inc
mov
mov
push
incb
test
fwait
add
aad
jl
imul
dec
sub
arpl
pop
jae
arpl
imul
dec
sub
or
jge
std
mov
mov
ja
fldpi
cmc
add
mov
movsb
repnz
sbb
add
mov
mov
popa
jae
mov
les
fnsave
jmp
pop
popa
bound
or
cld
sbb
repnz
push
jo
aad
in
ja
jge
push
ds
mov
movsb
shll
push
xor
xchg
icebp
mov
std
idivl
leave
mov
das
jnp
repz
or
out
pop
mov
mov
mulb
sub
adc
mov
xor
shl
inc
rcrl
push
loop
dec
add
push
fsub
rcl
push
push
lahf
xor
lods
jno
mov
sub
mov
iret
dec
or
add
or
mov
daa
inc
cmovg
fstp
mov
or
aaa
and
lret
push
mov
lret
add
lods
jo
mov
cmp
sub
cld
cmc
and
arpl
adc
loop
pop
ja
iret
mov
popa
ret
sbb
mov
jg
sub
add
pushl
mov
and
dec
fcoms
sub
out
lret
add
cmp
stos
gs
mov
inc
mov
sub
leave
dec
inc
jo
enter
and
sub
clc
pop
mov
cmpsl
orl
mov
mov
aam
ds
jno
push
jb
pusha
mov
pusha
scas
ljmp
dec
and
mov
aad
insl
movsb
xchg
add
sti
xor
test
lods
inc
xchg
in
xor
push
in
movsb
pusha
daa
adc
lret
fcoml
mov
xorl
ja
adc
add
ret
jle
loopne
stc
mov
rolw
ljmp
xchg
mov
add
cwtl
push
jecxz
jl
shll
push
faddl
mov
lods
pop
ja
inc
xchg
and
hlt
pop
dec
and
movsb
and
loopne
mov
cmp
pushf
out
fmuls
pop
icebp
inc
xor
ds
incl
lea
push
aam
cs
leave
mov
mov
xor
push
xchg
cmc
test
adc
ljmp
pushf
cmp
jnp
sbb
out
inc
dec
std
jo
inc
and
push
mov
jbe
and
xrelease
mov
and
or
xchg
dec
sbb
dec
sub
out
dec
or
xchg
dec
pop
sarl
rorb
scas
insb
mov
leave
and
push
js
dec
stos
arpl
mov
lret
stc
pop
je
sub
cmpxchg
inc
push
cmp
xchg
xor
push
lret
out
add
and
test
jmp
xchg
ret
in
jae
out
push
mov
mov
pop
fcomp
sbb
push
push
cwtl
push
jmp
in
or
inc
fstps
xchg
aaa
mov
dec
jg
jo
outsb
push
push
xchg
xor
push
cmp
pop
or
jbe
pop
cmp
mov
xchg
lret
faddl
and
cmp
aam
sub
jb
cmp
lods
lret
inc
sahf
add
push
inc
push
jp
dec
ret
push
mov
fcoml
push
repnz
lods
std
cmp
xchg
add
hlt
jg
fs
cli
out
fldcw
sub
cwtl
cli
jp
pushf
adc
jp
add
imul
lods
sub
fs
int3
imul
das
int3
fsub
adc
xchg
xchg
push
fists
int3
dec
inc
shll
mov
jmp
in
fwait
push
push
jg
jge
ljmp
adc
sub
fisttpl
mov
push
call
and
xchg
fdivs
je
jg
xlat
scas
imul
push
xchg
mul
mov
fwait
push
insb
fstpl
scas
push
pop
icebp
jno
nop
loope
call
xchg
push
out
mov
add
add
jg
setnp
mov
xor
outsl
xor
adc
jne
push
push
sub
test
ja
scas
pop
daa
pop
pop
ss
jno
rorb
arpl
dec
fs
movsb
sub
in
lods
mov
lret
sarl
into
mov
fucom
ss
xor
mov
ljmp
sub
out
mov
loop
push
fists
ss
xchg
or
fisttpl
inc
shl
popa
outsl
xchg
pushf
sub
xor
mov
cs
xor
repz
mov
dec
hlt
adc
lret
scas
adc
orl
insl
lret
push
call
das
add
es
push
inc
pop
sti
mov
pop
pop
dec
pop
int3
xchg
loope
addr16
or
mov
push
ficoml
jl
jl
lcall
sub
lahf
and
idivl
jns
testb
push
outsb
push
mov
dec
mov
xor
pop
loop
push
popf
jns
in
leave
arpl
xor
rclb
std
jo
pop
xor
jp
in
jb
aad
icebp
pop
mov
xchg
sbb
adcl
loope
sbbb
and
cmp
add
cwtl
dec
ffree
sbb
adc
inc
sbb
aas
xor
pop
loopne
pop
jnp
push
cld
loopne
xchg
jp
enter
mov
or
in
sub
push
add
andl
mov
pop
mov
popa
adc
std
mov
xchg
push
xor
jae
jge
jmp
loope
mov
loopne
loope
cld
into
push
inc
adc
mov
nop
aad
pop
fs
push
dec
outsb
orb
push
lds
pusha
pop
pop
pop
enter
mov
sbb
lods
and
xchg
jae
push
movsl
pop
and
setg
mov
out
popf
lods
adc
adc
lods
rclb
inc
and
ret
in
data16
aaa
xlat
jb
inc
and
dec
pop
cmp
in
xor
jmp
push
test
popf
cmp
or
fisttpll
lret
lretw
mov
fcmove
jmp
cmpsb
push
in
inc
cmp
jo
cmp
jne
imul
fdivs
adc
jb
adc
mov
sub
or
icebp
sbb
jo
mov
cli
ffree
call
cld
icebp
lds
std
cmc
or
and
subl
lods
movsb
lods
enter
bound
rclb
shr
cmp
jne
mov
cmc
sbbb
sti
nop
xchg
push
in
adc
mov
inc
and
lods
jecxz
or
adc
and
nop
xchg
stc
dec
addr16
and
lock
pusha
loop
pushf
pop
cld
out
push
jp,pn
ret
fsubs
ljmp
push
cmpsl
stc
lcall
mov
add
add
pop
cmpsl
mov
jb
mov
cmp
mov
xor
cmp
pop
popa
push
and
pop
imul
out
pop
or
ss
mov
flds
sarl
mov
int3
stc
lods
jge
xchg
shrl
push
loope
and
ret
test
mov
pushf
mov
xchg
jo
fstpl
scas
xchg
mov
out
out
fisubrs
lahf
or
sahf
jl
cmp
push
push
add
lcall
testl
jo
push
xchg
inc
cmpsb
push
or
ficompl
xchg
or
xlat
pusha
jnp
imul
mov
addb
data16
inc
push
loop
xchg
xchg
hlt
faddl
xor
rcl
leave
mov
repnz
es
dec
testl
mov
mov
adc
rcrl
cld
sub
aam
scas
xchg
mov
in
aam
mov
or
fldl
dec
push
ret
adc
add
pmaxsw
sub
jle
or
je
fnstenv
scas
add
jg
sbb
pop
jne
lcall
mov
mov
xchg
cmp
dec
int
mov
sahf
jg
mull
test
sti
std
test
test
sub
imul
scas
push
xor
int
push
cmp
mov
stos
cmc
fninit
xchg
clc
aaa
inc
pusha
push
scas
shrl
dec
add
pop
inc
jmp
jo
pop
jmp
orl
int
test
stos
dec
push
pop
pushf
xor
sub
xabort
ljmp
test
adcl
int
fwait
cmp
aad
jl
ficoml
lods
pop
and
arpl
test
xor
pop
add
mov
xor
lahf
mov
sub
out
cwtl
cmp
jecxz
sahf
ret
adc
add
lods
or
jnp
push
daa
jp
into
dec
out
xchg
pushf
xchg
cmp
ret
rol
sub
adc
test
cwtl
bound
adc
inc
push
add
arpl
xchg
scas
ds
rorb
jb
sbb
mov
inc
adc
stos
or
inc
jbe
cld
rcl
mov
test
fsubs
jge
adc
cmp
mov
test
movsl
mov
sub
xchg
cs
pop
cmpsb
mov
std
pop
or
xchg
or
cli
cmp
xor
xlat
shlb
fisubrl
mov
dec
shll
out
frstor
outsb
nop
mov
dec
fildll
inc
pusha
mov
dec
jno
dec
loop
inc
xchg
popa
jb
repnz
cs
add
adc
pop
mov
cli
jns
pop
dec
mov
push
jmp
pop
mov
decl
ljmp
jp
ljmp
sub
xchg
inc
xor
sbb
sub
dec
icebp
xchg
test
push
xchg
mov
jmp
mov
ljmp
inc
jmp
adcb
xor
xchg
outsb
adc
in
or
ret
mov
decl
pop
push
jl
xor
pop
jp
ja
jmp
lcall
dec
and
pop
shrl
adc
cld
lods
sbb
sbb
push
out
cmpsl
mov
sbb
xchg
jns
pop
int3
loopne
add
jg
ret
cmp
mov
sti
jne
out
mov
fcoms
pusha
dec
mov
sub
inc
movsl
sti
sub
ljmp
call
cmp
fucomi
lock
cwtl
mov
push
mov
adc
jne
cmpsb
fldcw
pop
cmp
rorl
js
insb
or
sub
add
mov
mov
pop
jb
adcb
ror
int3
jge
out
inc
mov
movsl
outsl
push
push
jb
out
scas
mov
repz
dec
dec
sti
or
ds
and
push
pusha
nop
pop
push
cli
mov
or
add
loop
in
test
mov
lds
sub
jns
adc
into
pop
insl
xchg
notl
dec
add
cmc
dec
cltd
jp
inc
cs
inc
add
movsl
repz
adc
xchg
jns
nop
xor
in
fs
clc
mov
jbe
xor
das
xlat
or
insb
ret
inc
sbb
mov
pop
push
mov
push
cmp
scas
addr16
add
test
sub
fistps
int3
cltd
loopne
mov
xchg
pop
hlt
aam
pop
repz
push
pop
ficoml
js
out
push
add
cmpsb
pop
loopne
shrl
inc
das
rorb
inc
lods
std
sti
push
mov
out
ret
pop
mov
call
jne
shll
shrl
outsb
out
dec
dec
fcom
dec
shlb
les
add
inc
jle
ret
clc
xchg
movsl
sbbl
xchg
aam
sbb
pop
aad
lret
pop
cmpb
adc
cmp
fnsave
or
cmpsl
das
jp
aaa
cli
out
scas
int3
mov
sub
mov
pop
push
xchg
iret
mov
loop
dec
dec
daa
arpl
lret
or
popf
fldenv
or
push
test
dec
orl
adc
stos
add
enter
loope
push
sub
mov
sahf
mov
sub
add
cmp
xchg
xlat
sahf
lcall
dec
xor
jnp
incb
xchg
or
pushl
xlat
insb
sbb
jg
in
sti
jg
imull
cmpsb
out
cmpsl
cmpl
cmp
push
in
ret
imul
out
xchg
loop
fists
cltd
jle
adc
mov
sub
mov
decb
push
sbb
out
cli
xchg
jb
out
or
cld
xchg
aaa
add
ja
mov
test
push
pop
lds
fidivs
call
cmp
pushf
pushl
movsb
lahf
push
lea
sahf
popa
test
inc
add
cltd
pusha
mov
mov
int
pop
mov
cmp
popf
push
je
xchg
mov
ret
pop
aam
ljmp
jb
jns
ljmp
popa
mov
adc
xchg
jb
ds
icebp
dec
sbb
imull
fsubrp
in
loope
dec
leave
and
sub
push
in
inc
loope
adc
push
mov
hlt
xor
je
mov
mov
push
push
lret
mov
scas
pop
stos
std
xchg
adc
aad
movsb
fs
ret
adc
inc
xchg
mov
pop
push
stc
test
popa
aas
mov
and
sbb
cs
add
xchg
jo
xor
orb
mov
lock
lahf
roll
xchg
xchg
pop
pop
xchg
test
jae
push
leave
js
pusha
push
sti
xorl
gs
mov
insl
mov
push
xchg
push
lods
pop
loopne
notl
pop
stos
push
add
xor
pushf
add
push
sub
and
pop
xorb
pushf
push
hlt
loope
rorl
out
call
jg
icebp
into
lods
push
cmpsl
mov
ret
outsl
arpl
xchg
iret
inc
jle
test
int3
mov
insb
dec
outsb
lahf
jmp
xchg
mov
jmp
jne
fcomps
add
pop
xchg
les
cld
mov
aas
sub
inc
andb
mov
out
and
jnp
outsl
fisubrs
mov
int
stc
in
leave
push
outsl
lock
xor
jae
adc
xchg
hlt
cmp
and
mov
dec
jb
mov
insb
ss
lret
clc
lock
jns
xchg
mov
mov
cmp
sarb
repnz
shll
fiadds
push
mov
test
lahf
mov
popa
addr16
arpl
inc
stos
pop
xchg
imul
arpl
lea
and
pop
test
add
mov
movsb
icebp
daa
in
push
imul
ljmp
ret
xor
dec
pop
repz
std
xlat
push
mov
mov
addl
sub
pusha
ret
pop
mov
mov
das
idiv
xchg
js
gs
cmp
rcll
stc
lret
ss
loop
xchg
pop
nop
out
xchg
shlb
pop
adc
pop
jp
imul
xor
inc
adc
es
jp
push
aam
add
jecxz
clc
dec
xchg
outsb
jmp
sti
iret
inc
popf
adc
pop
mov
arpl
lret
cmpsb
xorb
adc
xlat
pop
stc
ret
sbb
cmc
cltd
xchg
add
stos
or
xchg
push
mov
js
stc
add
outsl
and
nop
mov
push
pop
pop
arpl
cwtl
std
jns
inc
cmp
xchg
dec
lods
fidivl
pop
lock
adc
lock
or
test
cmc
xchg
xchg
outsl
loope
sbb
cmpsb
sub
lahf
stos
out
out
clc
and
inc
movsl
sub
adc
push
pusha
xchg
lret
out
mov
jne
aad
stos
pusha
inc
mov
rolb
fs
ja
mov
add
out
ljmp
fisubs
jo
jmp
mov
aaa
sub
jl
pop
std
push
xchg
repnz
mov
add
inc
mov
xchg
xor
popf
movsl
mov
xor
outsb
lock
pusha
stc
add
jge
repz
xor
push
out
shr
fistpl
lea
insb
aas
insb
sbb
cltd
adc
pop
gs
lret
mov
out
and
xchg
movsl
lret
shr
adc
aam
mov
cmc
pop
dec
xor
xor
shrl
clc
xor
and
jg
jbe
test
xor
int3
lods
xchg
fs
lret
cld
aas
dec
xorl
xchg
outsb
test
add
daa
bound
rorl
xchg
in
fldl
scas
mov
ja
movsl
lods
dec
pop
lret
jp
call
mov
jecxz
and
ja
sub
test
imul
ja
mov
pop
inc
push
jo
in
inc
inc
in
clc
mov
lret
insb
scas
shl
or
add
dec
iret
hlt
xor
cmp
movsl
aas
call
jns
xor
es
scas
lcall
jl
mov
cmpsb
push
jmp
call
sbb
outsb
xchg
dec
sbb
dec
insl
out
dec
aaa
mov
push
push
stos
dec
in
xchg
cld
lahf
pop
adc
call
inc
inc
xchg
mov
inc
into
or
mov
test
enter
iret
shlb
cmp
mov
ds
pop
mov
xchg
scas
or
jae
fwait
adc
lahf
mulb
and
negl
sbb
fcom
aam
stos
dec
fstpl
into
lret
and
inc
or
inc
fidivrs
mov
in
or
sub
inc
cmp
mov
stos
cmp
mov
ret
popf
jb
in
mov
mov
setno
mov
nop
dec
cmp
lret
pop
subb
dec
jns
icebp
lock
ja
xorb
mov
out
jns
sub
adc
pop
sbb
ja
seta
dec
pop
mov
mov
xor
sahf
call
ss
cmpl
jne
inc
sbb
and
std
push
hlt
cmp
dec
push
xchg
int
inc
fimull
inc
cld
aas
cmp
push
sub
cmp
mov
adc
jp
add
sar
xor
add
lahf
jge
cmp
les
add
push
into
lcall
movsb
pop
inc
pop
or
push
adc
mov
mov
add
xchg
mov
ret
xor
aaa
and
cld
imul
leave
mov
xchg
jecxz
fmuls
stc
mov
inc
int3
dec
push
inc
outsb
dec
leave
lret
jl
dec
mov
mov
and
lret
pop
sar
pop
push
ja
and
in
sub
imul
ret
sbb
bound
and
jnp
mov
cli
xlat
popf
and
xor
ret
jne
push
jo
sbb
fisttpll
enter
dec
movsl
inc
lods
bnd
popaw
push
sbb
outsb
fs
sub
inc
enter
cld
xor
std
adc
xchg
lds
sbb
dec
xchg
dec
pop
out
adc
jne
sbb
popa
sbb
and
inc
neg
jge
inc
cltd
jae
push
jns
ljmp
bound
scas
loop
mov
das
or
adc
repnz
xchg
ficompl
mov
cmp
or
mov
adc
test
stos
shll
mov
dec
cmpsb
add
pop
and
or
add
out
add
fdivs
jo
jo
pop
jne
rcr
sub
dec
mov
or
sub
add
inc
cmp
push
add
xor
lock
push
lds
stc
mov
adc
jmp
adc
fmull
xor
sti
xchg
pop
mov
cmp
mov
dec
je
push
sahf
sub
inc
int
jmp
rorb
dec
add
dec
aad
in
les
add
aaa
ds
push
loopne
jmp
mov
xor
mov
mov
lds
mov
sbb
fucomi
sbb
cmp
pop
lds
jge
aaa
and
insl
ss
or
stc
fsubp
cltd
jecxz
lret
cmc
adc
sti
gs
and
or
jg
cltd
and
pop
std
bnd
sti
and
mov
pop
mov
mov
ficoms
and
das
or
xchg
and
test
pop
pop
mov
leave
mov
fs
stos
sbb
std
mov
daa
sbb
stos
sarb
jno
push
out
movsl
push
dec
adc
mov
xchg
std
and
and
aad
dec
push
repnz
mov
das
pop
imul
test
call
push
dec
xchg
and
negl
fidivs
jg
ds
mov
fldl
and
sbb
dec
out
popa
sub
stos
mov
pop
and
mov
ret
xchg
addr16
or
cwtl
mov
fcoms
push
add
and
out
fildl
lods
inc
in
xor
loopne
jp
sub
lcall
and
pop
insb
bound
pop
adc
xor
mov
js
xlat
sar
and
das
fisubrs
xor
shll
push
and
cmovb
fldl
and
or
lcall
push
sbb
xchg
je
fwait
push
xchg
pop
jecxz
sub
push
xor
sbbl
bound
add
fs
repnz
or
gs
mov
add
mov
push
jns
nop
pop
xchg
popa
mov
and
out
leave
repz
add
jb
jbe
mov
movnti
jbe
mov
dec
adc
ja
or
std
sbb
ss
mov
addb
enter
adcl
jno
and
pop
sub
jp
pop
in
push
adc
add
cli
lods
lcall
cltd
daa
hlt
jo
aad
fwait
outsb
test
rcrl
lds
cmpsl
clc
or
lahf
sarb
in
adc
sbb
fisubs
sbb
jmp
and
lock
push
cli
clc
jns
ret
imul
enter
inc
mov
vmovsd
lock
fstpl
imul
jbe
movsb
int
cmp
negb
daa
repnz
pushf
sahf
mov
popa
inc
imul
test
lods
inc
out
pop
cmc
test
test
xor
scas
pushf
dec
mov
mov
stos
jl
jb
or
add
gs
gs
push
and
mov
pop
rcl
fimull
jbe
jge
addr16
and
daa
add
dec
loopne
aad
outsb
push
sbb
popf
push
sti
addb
sub
add
movsb
cmpsb
inc
dec
orl
cli
mov
inc
mov
outsl
dec
push
shrl
stos
xchg
aas
adc
cli
cltd
loope
in
pop
jne
fistps
in
cmp
pop
inc
dec
icebp
repnz
cmp
add
jle
and
push
cmp
mov
jne
pushl
int
xchg
insl
mull
inc
movsl
loop
add
mov
sub
dec
mov
cmp
js
js
pusha
cli
cmpsl
sub
jmp
xor
adc
pop
and
lcall
and
ret
cwtl
mov
or
popa
pop
cltd
arpl
lret
leave
sti
inc
mov
adc
or
movsl
sarb
insl
lahf
dec
sub
loop
fwait
cwtl
ret
xchg
add
ljmp
sbb
js
dec
fidivrl
clc
stos
push
cmp
or
insb
bound
ja
imul
in
addr16
push
loop
dec
adc
pop
push
xchg
push
call
cmp
mov
push
movsb
jmp
rcr
fstp
ret
cmpsb
test
ds
cld
mov
inc
arpl
enter
jae
xor
inc
pop
and
mov
mov
into
dec
push
lods
add
sar
js
and
loop
sti
clc
sbb
shrb
fisubrl
mov
or
and
sbb
stos
shlb
mov
mov
test
cltd
lret
aad
mov
mov
stos
dec
dec
gs
into
xchg
inc
mov
jb
xor
push
in
mov
mov
testl
orl
push
cmp
adc
add
adc
out
fwait
jbe
xchg
inc
add
xor
mov
imul
insl
pop
adc
jne
xchg
iret
aad
dec
adc
ss
sbbb
pop
push
ja
insb
adc
mov
xchg
or
shlb
into
push
xor
or
aas
mov
mov
adc
xor
inc
push
xchg
mov
xchg
fs
nop
dec
pop
jg
inc
sbb
fnstsw
pop
aas
clc
movsb
icebp
fwait
inc
xchg
sbb
lea
movsb
jmp
or
sub
jp
dec
adc
add
add
lods
loopne
push
out
cmp
add
inc
lcall
inc
aad
add
clc
or
adc
in
sub
shld
out
into
jmp
xchg
mov
inc
adc
test
inc
inc
jl
fucom
fmul
popa
hlt
dec
sbb
mov
push
pop
test
xchg
add
sbb
xchg
xchg
enter
iret
test
lea
pop
inc
out
shlb
lock
jne
mov
push
xchg
into
mov
mov
out
das
sub
negb
dec
or
ud2
sub
cmp
jnp,pn
mov
movsb
fdivl
out
ds
cmp
mov
adcb
add
mov
js
mov
sahf
mov
push
and
mov
pop
xor
leave
sbb
fbstp
lds
aaa
popa
movsb
nop
and
or
fisubrl
jb,pn
sbb
mov
scas
out
xlat
in
mov
xchg
enter
xchg
ret
xor
lahf
dec
lret
and
pop
scas
jg
aad
aas
push
pop
mov
pop
aaa
and
inc
push
loop
cltd
es
lods
push
sbbb
cmp
pop
cmpsl
test
lods
fldt
xor
test
mov
lods
lods
out
pop
xorl
cmpsb
inc
sbb
cmpsb
jbe
shlb
in
xor
xor
int
xchg
lea
dec
adc
into
sub
push
mov
push
pop
iret
push
mov
and
sub
push
inc
andl
test
cmp
inc
jecxz
lahf
xchg
jb
add
cmp
sbb
xchg
in
push
cltd
rorb
insb
pop
jae
roll
pushf
push
lods
fdivl
inc
filds
inc
mov
in
cmp
in
inc
add
add
cmp
mov
fimull
jne
jmp
cwtl
in
add
testb
sub
popa
lret
test
and
cmp
outsb
js
pop
adc
or
xor
shll
pop
ror
push
cmc
push
arpl
mov
mov
js
aas
les
sbb
std
jne
je
repz
mov
repnz
gs
push
mov
add
pop
enter
cmp
mov
outsl
imul
adcl
movsl
out
test
push
arpl
nop
cmc
mov
test
movsb
xor
iret
pop
push
js
push
loope
fxch
pop
test
loope
andl
sbb
sbb
inc
add
rcrl
lahf
sbb
cmpsb
mov
cmpsl
lods
jmp
mov
pop
cmp
scas
insb
int
and
lods
int3
adc
iret
xor
sub
leave
cmc
push
jg
inc
dec
cmpsl
jo
sbb
sub
out
xchg
mov
inc
jbe
hlt
fbld
xchg
out
pop
aaa
or
adc
mov
and
xchg
jno
arpl
into
ljmp
or
xor
pop
sbb
or
mov
pop
fistps
jnp
leave
push
addl
pop
or
cmp
jge
inc
or
outsl
imul
shrb
pusha
mov
cli
cltd
rorl
enter
aas
mov
jb
adcb
jge
add
aaa
clc
in
shlb
add
pusha
mov
int
mov
push
or
mov
cltd
sbb
xchg
subl
js
loope
pop
pop
add
rcrb
ja
aas
or
or
xchg
iret
lret
gs
inc
and
je
test
xlat
dec
pop
dec
sub
add
jge
pop
mov
sub
clc
cltd
adc
dec
or
and
push
prefetch
out
adc
xor
aas
sbb
jle
sbb
dec
iret
push
pop
dec
test
jmp
push
xor
lods
ja
jge
adc
fidivs
int
mov
lods
aam
or
jecxz
mov
sysret
mov
loopne
in
mov
push
xlat
arpl
call
adc
cs
sub
dec
sub
jne
push
push
movsb
xor
test
andb
inc
test
xlat
or
lahf
fwait
dec
sbb
dec
pop
lea
and
pop
or
push
push
popa
into
cli
push
jecxz
movsl
daa
sub
inc
std
mov
repnz
scas
shrl
fwait
orb
clc
ljmp
sbb
mov
lret
das
lods
sub
mov
pop
lods
loopne
sub
cmp
iret
push
mov
lret
clc
jecxz
cli
ljmp
push
push
popa
in
add
xchg
dec
xchg
mov
add
stc
pushf
jg
bound
or
imul
mov
dec
leave
lock
add
ret
iret
xor
jo
enter
cmp
repnz
gs
xor
inc
pop
movsl
fcoms
test
sahf
mov
int3
cli
push
mov
jg
sbb
add
inc
scas
psllw
sbb
jecxz
pop
lret
inc
mov
push
rorb
inc
leave
mov
std
lret
mov
jge
mov
xchg
sub
inc
ljmp
mov
and
jmp
adc
adc
inc
pop
push
imul
es
adc
aaa
mov
notl
stc
bound
mov
lret
xchg
ja
test
mov
es
in
mov
leave
cltd
imul
xchg
outsl
adc
in
dec
fdivrs
fcompl
push
enter
iret
fwait
mov
insl
dec
dec
sarl
hlt
daa
enter
out
adc
and
mov
cmp
cmp
push
cmp
inc
inc
and
push
test
sbb
inc
xorl
mov
lret
aad
out
fmull
icebp
scas
nop
nop
pop
fildl
lret
testl
add
mov
jge
adc
xchg
pop
pop
mov
push
pushf
push
add
mov
mov
sub
in
int3
pop
out
cld
push
gs
pop
addr16
in
jecxz
push
cmovg
fcompl
pop
das
push
mov
add
ss
outsb
mov
xchg
aad
jecxz
hlt
inc
and
cli
add
mov
xchg
rcrb
xchg
aam
stos
mov
outsl
sarl
clc
cmp
fisttpll
mov
push
xchg
mov
call
inc
push
ret
aas
add
xor
mov
gs
sub
mov
pop
clc
sub
pop
lcall
jno
aam
lds
ret
xor
int
rol
popa
jmp
jg
cmp
loop
pusha
fnsave
xor
sub
mov
pop
cld
call
aad
push
jecxz
test
jns
mov
popf
jmp
sbb
fsubrl
mov
inc
mov
mov
mov
mov
stc
daa
mov
addr16
loopne
frstor
cmp
cwtl
sbb
mov
cmpb
fistl
fs
dec
push
jg
pop
ss
sbb
imul
sbb
cmp
cs
push
jge
hlt
vpaddb
std
insl
lret
push
adcb
lods
out
pop
lds
rcr
movzbl
and
loope
ljmp
xor
xchg
lock
mov
lea
notb
and
movsb
add
stos
sub
xchg
or
sahf
mov
lcall
enter
xlat
jo
stc
imul
aaa
sbb
faddp
inc
es
cmp
out
movsb
fildll
movb
xchg
mov
push
pop
xchg
stos
add
mov
xchg
hlt
ret
sbb
mov
pop
int
fcmove
xchg
cli
aas
lods
out
xor
clc
aas
aad
jnp
sbb
enter
cmpsl
insb
rcr
and
mov
or
aas
enter
sub
js
sbb
jle
idivl
or
pusha
lahf
bound
ja
sub
shlb
test
or
push
insb
sbb
aas
cmp
dec
stos
inc
xor
jae
scas
insl
jne
or
adc
in
int3
fdivrp
lret
fdivl
xor
xor
or
xor
ret
cwtl
outsb
sbb
cmp
loop
adc
hlt
lret
jle
cmp
xchg
push
jmp
inc
cli
push
mov
in
sub
insb
mov
repnz
mov
subl
lcall
int
pop
adc
bound
getsec
xor
loope
add
negl
xorb
mov
imul
jae
outsb
push
push
sbb
icebp
sahf
add
adc
sbb
mov
sub
jge
imul
repz
orb
sbb
arpl
pop
jmp
loop
mov
lret
jp
pop
pushf
xor
leave
or
jl
cmpsb
cmp
imul
sub
adc
or
lret
dec
and
mov
mov
aad
jle
pop
jmp
and
and
pushf
push
cld
jecxz
ljmp
lods
sbb
jae
cmc
cmpsl
and
jg
loop
mov
sbb
sbbb
jmp
sbb
mov
mov
test
pop
lahf
jne
test
rolb
ror
test
outsb
std
ja
and
mov
mov
aas
insl
popf
and
push
add
aam
insb
jge
jp
flds
ljmp
adc
dec
jnp
in
inc
xchg
sub
jne
inc
xchg
and
jge
push
icebp
inc
lods
pop
sub
inc
adc
xlat
in
dec
cmpl
test
inc
jle
aad
pop
jne
std
mov
or
sbb
mov
mov
xchg
addr16
out
jo
in
mov
out
xchg
dec
jle
pop
fdivp
add
negl
das
cwtl
adc
sbb
in
mov
into
js
cmp
and
sbb
orl
sbb
or
adc
pop
lods
fstps
or
stc
mov
cmp
jae
outsb
sbb
mov
rcll
test
insb
shl
hlt
xor
popa
sbbl
repnz
lods
jmp
add
pop
outsl
mov
cs
je
aam
add
das
dec
gs
fsubs
add
ret
sbb
loop
aad
inc
sbb
pop
sarl
adc
in
imul
mov
mov
mov
adc
or
pop
mov
cmpsl
add
xchg
sbb
bnd
pusha
and
scas
test
sbb
fcomi
out
aam
pushf
xor
bnd
mov
push
xchg
xor
sbb
lret
bound
fwait
lock
jno
pop
insb
out
pop
ss
inc
mov
es
scas
mov
pop
pop
sbb
cmpsb
pop
and
sahf
jb
fistl
jl
xor
or
add
test
mov
dec
flds
mov
fdivrl
imul
in
cmp
inc
cmpsl
lret
test
and
mov
adc
arpl
mov
xchg
jns
push
rclb
je
out
enter
cmp
ljmp
xchg
jno
push
mov
mov
inc
lcall
jae
pop
in
inc
adc
out
imul
pop
xchg
movsb
mov
notb
sbb
add
jl
xorl
pusha
icebp
inc
cs
lods
push
lods
or
repz
xchg
scas
mov
cmpsl
out
pop
mov
adc
popa
fs
shrb
popl
movsl
dec
shlb
push
cmp
bound
out
enter
in
mov
sbb
add
mov
ret
shrb
sub
mov
ljmp
cmpsl
int
dec
dec
add
sbb
adc
fcmovnbe
push
call
sub
daa
xor
imul
xchg
aaa
pop
add
fwait
pop
push
mov
rcl
fnstsw
lock
sbb
sbb
pop
push
mov
jmp
popa
or
adc
cltd
cwtl
push
in
cmp
add
sti
aad
shlb
icebp
or
outsl
call
jecxz
xchg
sarl
cmpsl
es
lret
gs
jp
mov
daa
or
cmp
cli
cmp
mov
dec
out
popa
add
sbb
mov
in
jno
mov
and
mov
ficoms
or
aaa
xchg
rcrl
and
push
push
pop
push
in
inc
mov
aad
xlat
shlb
cmp
sub
mov
mov
movsb
sub
jno
fnstcw
push
adc
out
movsl
incl
icebp
sbb
pop
push
cmc
bound
out
dec
pop
jo
fwait
inc
mov
jns
xor
push
loope
pop
enter
push
mov
or
lock
stos
push
push
jns
mov
or
in
notb
push
pop
adc
cld
push
lds
cmpl
call
sarl
or
sahf
shl
aad
pushf
fwait
pop
repz
inc
inc
add
mov
shl
stc
adc
mov
popf
sbb
imul
outsb
std
inc
ds
pop
xor
out
pop
repnz
mov
test
mull
pop
pushf
sbb
dec
jmp
push
mov
into
pop
push
jecxz
mov
imul
mov
not
pop
lret
scas
mov
shl
dec
jp
push
fcoml
add
mov
or
cli
bound
pusha
fs
nop
sbb
or
dec
repnz
into
mov
add
mov
jle
pop
outsb
repz
mov
jno
lret
mov
and
pop
add
pushf
inc
in
add
icebp
sbb
mov
shlb
lret
movsb
push
insb
mov
xchg
adc
add
adc
out
jne
mov
jnp
clc
movsl
and
icebp
sub
mov
addr16
in
cmp
lret
dec
push
roll
mov
scas
je
jns
and
testl
sbb
mov
cli
mov
xlat
mov
fldt
dec
mov
clc
ss
lea
xchg
pusha
fmul
clc
xchg
add
cli
icebp
les
ljmp
cmp
adc
xor
sti
sbb
cli
iret
fstpl
cmc
sbb
or
xor
movsb
sub
pop
hlt
leave
adc
jge
sahf
call
jae
fnstcw
xchg
push
pop
adc
cmc
push
push
sbb
jo
jb
xor
sub
mov
push
data16
dec
xor
xchg
flds
inc
out
int
fldt
lods
outsb
cwtl
aam
mov
imul
andw
push
je
push
std
mov
mov
into
js
sbb
bnd
rclb
sbb
test
sbb
sub
mov
insl
inc
clc
in
sti
out
aas
pop
jg
out
lret
shrb
enter
or
dec
ds
jl
and
fldl
in
lods
sub
bnd
jl
gs
shr
jne
insb
nop
test
in
lea
dec
push
adc
jge
xlat
imul
in
lret
push
xor
pop
inc
sub
daa
and
jp
icebp
lds
jecxz
icebp
repz
fsubrs
lret
xchg
mov
stos
cmp
add
sub
mov
sbb
cwtl
shlb
adc
add
ret
push
xor
in
inc
rcr
cli
jecxz
add
bound
mov
aam
clc
cmp
fmuls
push
and
jae
rorb
in
xor
xchg
push
push
lahf
sub
jo
mov
push
in
ja
inc
dec
sar
adcb
popw
sbb
sysenter
add
xchg
xor
repz
xor
idivb
xchg
mov
loop
testl
and
sbb
mov
dec
jo
testl
mov
mov
lcall
xchg
xor
adc
ret
pop
or
mov
and
test
inc
popf
mov
push
cwtl
pop
and
dec
arpl
in
xor
lods
imul
loop
sbb
das
push
cmp
ret
pop
fwait
sub
aas
insb
icebp
add
jge
popf
cmpb
lods
add
notb
stos
out
inc
inc
sbb
and
pop
es
xchg
test
cmpsb
sbb
or
es
rol
js
sub
and
popa
je
pop
fidivl
cltd
inc
ds
aas
test
jg
cmpb
cmp
fsubr
scas
popf
aam
push
xorb
mov
into
or
jnp
test
push
dec
inc
jp
jmp
jmp
dec
inc
xchg
cltd
stc
in
out
add
int
mov
int3
fwait
mov
jnp
mov
mov
pop
dec
pop
pop
rcll
cmc
ja
pmaxsw
cli
dec
cltd
adc
pop
repz
jecxz
lods
mov
mov
idiv
dec
xchg
outsb
imul
sub
push
popa
cmp
mov
dec
jo
iret
das
aad
repnz
cmp
test
jnp
cltd
mov
pop
arpl
scas
jnp
mov
sub
pusha
sbb
push
fimull
shl
cwtl
dec
jns
dec
iret
dec
and
or
pop
movsb
data16
cmp
push
mov
sti
mov
enter
sarb
mov
aaa
push
fmuls
rorl
sbb
scas
aad
pop
add
icebp
push
xor
fsts
cmc
push
or
or
xchg
jne
dec
pushf
movsl
insl
or
pop
call
and
dec
mov
in
lock
jb
pop
enter
ds
std
sbb
mov
or
sar
pop
dec
adc
int3
cmp
stc
mov
test
int
jg
fs
test
push
inc
dec
add
mov
push
pop
test
jne
cltd
nop
ds
jbe
jo
icebp
cmpsb
mov
dec
dec
test
and
xchg
fs
or
dec
jne
xor
adc
sub
negl
or
xchg
loope
arpl
lahf
xor
cmpsb
rcrl
inc
adc
daa
xchg
jmp
or
jmp
flds
mov
mov
minps
or
sub
push
push
insb
inc
in
jbe
pusha
mov
out
xchg
and
pop
mov
xchg
jge
mov
repz
cwtl
or
sub
fcomip
stc
add
iret
jne
sub
pop
sub
loopne
stc
xor
xor
add
scas
inc
mov
add
jmp
xor
pop
stc
mov
cwtl
and
mov
xchg
inc
and
loop
cld
xor
mov
add
inc
sub
cmp
cmp
push
int3
ret
mov
in
jp
push
cmp
inc
rorb
inc
push
mov
jp
loopne
aam
adc
mov
push
dec
sbb
lcall
push
sub
xor
push
add
mov
imulb
xchg
addb
cltd
leave
lret
out
cmp
scas
xchg
gs
in
dec
jmp
lahf
into
sub
lods
pop
mov
shrb
fisubrl
mov
sub
push
enter
mov
push
test
mov
and
inc
pop
clc
fcompl
cmp
mov
xchg
test
inc
pushf
fcmovnbe
adc
add
dec
pop
push
test
daa
push
fsubr
pop
sar
arpl
push
sub
xchg
cmp
push
scas
push
xor
stc
cwtl
pop
mov
and
sti
lods
cltd
inc
jl
add
rorl
or
jge
lea
xchg
xor
push
test
mov
lods
lcall
xchg
leave
mov
sub
mov
xor
mov
xchg
out
ret
sbb
popa
sti
inc
adc
test
test
add
orl
add
lods
scas
inc
pop
mov
or
in
shll
stos
dec
mov
xadd
jl
fstl
adc
sub
cmp
test
scas
call
andb
and
push
or
push
cs
aas
popf
adc
xor
jge
daa
or
jmp
and
inc
add
push
into
test
add
pushf
int
or
mov
jne
jmp
cwtl
sbb
jno
jecxz
mov
pushf
mov
or
or
imul
in
jo
imulb
push
fstpl
add
mov
pop
push
sbb
or
mov
loopne
mov
repnz
mov
scas
mov
aam
pop
mov
cli
sub
stos
adc
outsb
jne
add
push
aad
out
mov
or
out
jno
and
aas
shlb
push
mov
fcomip
shll
out
imul
adc
adc
movsb
push
or
into
mov
sub
jae
add
mov
das
push
cmc
jns
sbb
test
jp
jecxz
dec
testb
cld
or
leave
sub
xor
das
dec
mov
pop
lock
or
or
mov
daa
test
movsb
jl
cld
mov
mov
scas
scas
dec
pop
xorb
jns
iret
out
mov
dec
pop
cld
es
es
insb
aad
in
xor
fwait
add
shll
or
dec
sbb
dec
shrb
data16
pop
xchg
stos
pusha
mov
mov
sub
add
pop
pop
jne
test
flds
cmpsb
insb
mov
xor
mov
dec
xor
jae
mov
test
pop
xchg
sub
pop
adc
dec
imul
mov
addr16
or
testb
mov
add
cmpl
mov
pushf
repz
xchg
pushf
aaa
dec
xor
push
loopne
sub
adcl
and
lods
imul
stc
jno
sub
xchg
jp
aaa
adc
stc
pop
fldenvs
pop
mov
loope
mov
inc
jae
loope
out
cmp
loope
jg
jg
fcmovnu
jno,pn
js
cwtl
push
outsb
dec
jbe
add
xchg
sub
aas
xchg
loop
std
das
aas
cli
sub
clc
pop
xchg
test
lahf
les
aad
fidivl
ja
int
mov
pop
and
ret
shrl
scas
lods
pushf
and
ret
fucom
in
sbb
push
lds
das
fwait
push
rclb
add
aam
mov
shlb
jl
adcl
or
inc
rorl
jb
shll
pop
mov
xor
outsb
rolb
outsb
test
pop
lret
sub
dec
fucomp
in
mov
and
cld
out
int
fldenv
xchg
push
jns
pop
sbb
xchg
pop
dec
and
sub
xor
iret
jg
jmp
pop
lea
jecxz
cmc
arpl
mov
xchg
sbb
loopne
mov
or
add
xor
cmp
sbb
nop
jae
cmpb
pop
mov
push
aas
not
dec
or
pop
enter
addb
jl
jno
popf
jg
test
mov
or
sbb
xor
inc
dec
int3
ds
outsl
jl
fdivl
xchg
pop
jb
and
inc
sbbb
std
lret
push
and
or
pushf
icebp
adc
insl
add
or
pop
stc
push
stos
imul
inc
pop
shll
xchg
or
pop
das
add
out
outsb
or
mov
ret
xor
mov
mov
cmp
mov
mov
daa
das
add
push
jno
pop
xchg
mov
mov
xor
adc
cs
lds
or
inc
leave
sub
add
std
xchg
pop
enter
sub
rcrb
loop
das
xchg
shlb
mov
insl
adc
mov
pop
inc
test
lret
dec
or
or
push
mov
sbb
aas
cmpsb
popf
xchg
jb
dec
shll
pusha
jmp
lods
jnp
sbb
out
popa
and
scas
shrb
push
fisubrl
push
and
outsl
gs
jae
xorl
pop
adc
push
or
loop
sbb
orl
fcomp
jmp
lds
pop
mov
pop
adcb
lcall
mov
xor
mov
orps
adc
dec
cmp
jp
into
xchg
dec
leave
mov
sub
out
shrb
mov
cmp
test
fs
inc
in
cmp
fsts
sub
dec
out
mov
daa
adc
fsubl
xchg
test
push
cmp
inc
pop
clc
stos
les
inc
aad
pop
popa
enter
sub
cmpsb
repnz
xor
push
push
in
fisttps
ficompl
rclb
dec
rep
movsl
cld
jge
cmp
add
pop
daa
jp
sub
pusha
fdivrs
jle
push
or
fdivs
mov
inc
sarb
rolb
jg
ret
pop
lods
mov
xor
ret
xchg
popl
jmp
in
adc
ret
sub
mov
movsb
shrl
xchg
int3
pop
pop
loopne
sbb
addr16
dec
mov
out
inc
dec
mov
pop
mov
adc
rorb
jl
adc
out
pop
movsl
or
mov
mov
dec
push
lret
xlat
pop
std
xor
push
cmp
jae
cmpsl
fs
push
cltd
jns
push
mov
inc
stos
fwait
sub
mov
mov
xchg
das
xchg
sub
leave
icebp
xchg
imul
sbb
call
and
in
in
call
out
mov
stos
xchg
mov
push
cmp
xor
lret
adc
jle
call
and
stc
dec
pop
ss
push
ffree
sub
sahf
jae
and
call
cltd
mov
mov
shr
mov
fnsave
cmp
incb
popf
movsl
repnz
xchg
dec
mov
add
xchg
lods
pop
lods
mov
sbbb
out
lds
movl
das
loope
dec
sti
dec
in
aad
xchg
push
out
js
pop
jg
jo
mov
cmp
sub
mov
por
sub
mov
push
mov
mov
add
andb
out
loope
add
outsb
dec
xor
fcomip
in
data16
stc
cwtl
cs
mov
dec
adc
enter
xchg
outsb
jle
mov
daa
jbe
scas
sub
jl
pop
push
mov
cli
bound
fildl
lods
dec
cmp
pop
jb
nop
pop
add
inc
push
ret
dec
push
and
arpl
mov
fimull
lea
push
lods
out
std
push
and
mov
xor
push
add
in
fldenv
or
fdivrl
je
in
cmp
jnp
push
jnp
rcrl
or
pop
pop
fmulp
mov
xchg
lcall
ret
fdivrs
popa
daa
cmp
shrl
mov
pop
ret
dec
pop
cmc
dec
outsb
iret
lea
jno
out
cld
data16
lret
cmpsl
mov
test
pop
cwtl
incl
movsl
cmpsl
push
push
inc
ljmp
mov
shrb
stos
fimull
inc
mov
inc
mov
lret
pop
sbbw
fwait
outsb
call
adc
mov
dec
dec
pop
aam
and
jmp
fnstsw
or
xor
add
out
lea
and
jae
movsl
sarl
ffree
jnp
out
out
fadds
cmc
out
sub
pop
push
pop
adc
jbe
and
fcoml
push
neg
js
subb
push
cld
or
test
sti
push
inc
push
jnp
shr
xchg
dec
mov
popa
addr16
add
dec
ja
push
and
dec
xor
lock
dec
xchg
mov
xchg
insb
jg
mov
fisubl
fnstcw
and
xor
test
push
aas
xchg
ljmp
adc
arpl
sub
sbb
or
adc
inc
in
test
xchg
test
sbb
leave
cmpsb
sub
ficompl
jle
push
jecxz
jbe
js
out
fnstcw
or
xchg
push
insl
pop
subb
jl
pop
orl
xchg
fcoms
fdivrl
jno
fdivrs
js
dec
scas
test
repz
and
xchg
aas
cmp
push
xor
pop
mov
pop
or
push
frstor
dec
or
mov
aaa
cltd
outsb
fwait
in
xchg
in
int3
rol
rorl
push
jnp
adc
sub
sti
pop
mov
jnp
cmpsl
or
jp
cld
popa
xor
ret
inc
repz
shrl
xchg
push
jle
xchg
pusha
or
test
mov
mov
xor
lea
xchg
add
js
test
sbb
call
test
sub
mov
sbb
arpl
ror
push
fmuls
enter
and
xor
je
adcb
fcoml
pusha
mov
and
jae
mov
xchg
shlb
into
cmp
add
pop
mov
inc
fcom
mov
shrl
ret
outsl
xchg
lret
jne
push
mov
cmpsl
push
add
sahf
xlat
mov
or
arpl
sub
cmpsl
lret
add
sbb
lcall
cmp
in
nop
mov
push
cmp
push
ficoms
dec
mov
popa
push
cld
psubsw
xorb
test
mov
xor
int
adc
jno
les
xchg
add
mov
addl
hlt
leave
lea
test
mov
or
mov
mov
movb
fwait
jp
mov
sbb
daa
or
aam
adc
lock
sub
cli
mov
xchg
mov
outsb
insb
inc
pop
icebp
adc
mov
sahf
dec
fs
loope
cmp
sbb
stc
jge
push
fiaddl
or
or
imul
mov
sub
mov
lods
pop
dec
sbb
movsl
es
xchg
push
cld
lock
push
loope
jmp
inc
pop
rcll
jnp
lcall
int
and
ljmp
mov
or
outsb
adc
fcompl
or
xor
push
adc
inc
xchg
push
aam
push
ds
jl
movsb
xor
cmpsb
mov
je
jae
shll
cmp
dec
pop
push
ret
fnstcw
push
fistps
int3
cld
test
into
cmpsb
test
pop
mov
add
push
outsl
cli
in
in
inc
movsb
loopne
pop
xchg
or
mov
cmp
loopne
push
test
cli
cmp
ds
push
sbb
pop
pop
test
aaa
fcmovbe
sbb
inc
jmp
fldenv
sbb
cmp
loop
test
lahf
roll
xchg
push
xchg
sub
jne
mov
jno
cmp
adc
dec
cmpsl
sbb
or
mov
jae
pop
daa
mov
ror
test
and
ficoms
pop
add
inc
xchg
sbb
mov
push
aad
clc
jl
lods
fsubl
lds
in
jg
pop
aas
enter
sub
pop
test
cltd
sbb
hlt
or
cmp
lock
jae
jno
pop
stos
cmp
dec
xor
movl
mov
loop
push
or
inc
pusha
sbb
push
or
lods
inc
and
mov
inc
adc
or
xchg
sub
xor
imulb
jb
ljmp
xchg
and
decb
jmp
cmp
ljmp
ljmp
adc
mov
cmc
call
jbe
or
imul
filds
fstl
cmp
push
jmp
pop
pushf
cmp
and
popa
pop
out
aaa
sbb
gs
data16
out
xchg
mov
push
xchg
dec
or
cmpsb
pop
mov
jb
xchg
cltd
inc
dec
pushf
das
mov
push
mov
outsl
pop
fnstcw
scas
imul
test
into
int3
dec
and
mov
mov
and
cwtl
or
pusha
dec
sub
cmp
popf
mov
and
xchg
or
sub
cmp
xchg
lods
cmp
inc
imul
rcll
pop
arpl
aam
outsb
and
sbb
mov
insb
cmpsb
inc
lahf
loop
jl
ja
insl
mov
outsl
xor
mov
negl
pop
pop
ficoms
jo
jg
mov
test
leave
mov
out
js
fwait
lret
lcall
call
sub
xchg
xor
cmp
daa
fmull
pop
int3
fs
jbe
adc
imul
sbb
scas
arpl
jmp
push
cwtl
jecxz
adc
sbb
inc
xor
xor
out
adc
jmp
push
mov
je
arpl
jae
test
mov
jmp
stc
mov
das
loopne
dec
jle
cli
sub
dec
pop
ret
inc
or
mov
dec
dec
sbbb
or
andb
imul
jg
inc
aas
data16
mov
fiaddl
push
mov
cld
iret
in
fldl
in
fisttpll
adc
mov
add
and
cs
pop
pop
roll
jecxz
out
lcall
and
aam
push
fnstsw
xchg
mov
std
inc
into
cmpsl
push
cli
cmp
dec
test
push
jmp
push
xchg
and
popf
ret
or
inc
or
sub
and
sbb
mov
push
cmpsl
or
les
add
dec
movsl
inc
xchg
xor
mov
into
lods
ja
outsl
popa
pop
xchg
inc
pop
mov
sbb
gs
cli
fwait
jg
jns
xchg
hlt
mov
pushf
jns
dec
mov
inc
mov
comiss
aas
pusha
leave
pop
adc
xor
in
dec
pop
not
mov
and
lods
imul
cld
pop
xchg
pusha
xor
ja
lret
lods
aas
mov
ljmp
mov
sub
jae
cli
js
ffreep
mov
mov
loopne
test
lods
adc
lods
int3
cmp
xlat
lret
bound
push
sbb
pop
sti
inc
or
mov
adc
ds
xchg
leave
iret
mov
cmpl
loopne
and
insb
mov
lock
push
stc
lcall
push
dec
enter
in
cli
pop
outsl
leave
jle
adc
ja
bswap
scas
jg
dec
mov
adc
xchg
adc
imul
jnp
sbb
and
sahf
mov
fcoml
inc
add
ljmp
push
cltd
movsb
push
dec
fsubp
mov
sub
in
jmp
or
and
dec
sbb
cltd
jge
sbb
data16
ja
inc
sbb
testl
clc
pusha
sub
aaa
stos
call
xchg
imul
dec
out
pusha
aam
das
insb
les
test
int3
loop
in
iret
push
pop
into
loopne
in
pop
stos
lods
les
pop
jmp
cmpsl
mov
jecxz
inc
dec
mov
frstor
psrld
test
je
mov
int
pop
cmp
sub
out
std
sbb
sti
subl
cmpsb
jmp
in
cmp
imul
loop
dec
sbbb
cmp
fmull
inc
fcompl
imul
mov
data16
jge
repnz
fsubs
mov
ficompl
jae
xchg
fwait
mov
fildl
mov
or
cmp
in
xchg
loopne
mov
ret
dec
mov
mov
cli
or
enter
mov
lahf
clc
mov
mov
popa
fisubrl
js
lock
and
cmp
mov
xor
test
adc
push
push
in
addr16
stos
pusha
xor
jnp
subb
leave
imul
sub
fistpl
jb
adc
pop
and
pop
orb
sub
ret
xlat
inc
cli
ret
popa
or
mov
iret
jns
dec
mov
out
mov
inc
or
dec
sub
dec
jns
fists
arpl
jae
dec
mov
repz
pop
cld
sub
movaps
cmpsb
add
fcmovnbe
popa
push
outsl
les
dec
xor
rcll
inc
xor
and
jae
add
xchg
cld
inc
fsubs
fistps
xchg
fdivrl
pop
js
pop
scas
in
mov
subl
ds
xchg
clc
cwtl
in
fidivs
jg
push
adc
in
xchg
lea
scas
insl
sub
js
insb
stos
mov
into
lcall
pusha
insb
loope
je
cmp
adc
sub
mov
jl
test
lahf
jmp
jae
mov
add
repnz
add
not
inc
cli
fmulp
mov
pop
mov
adc
arpl
jns
aam
push
inc
inc
jmp
js
clc
jl
das
imulb
xchg
notb
dec
adc
daa
push
lcall
jbe
xchg
ljmp
fsubr
cmp
mov
xchg
fildll
jg
xchg
lods
cmp
ficomps
repz
fists
rcrb
mov
lcall
xor
pop
sti
xor
xchg
out
adc
data16
xchg
jb
inc
mov
or
sub
jmp
sub
lods
bound
jg
and
call
fisubs
dec
sub
xorb
and
sti
sbbb
fnstenv
ret
add
dec
addr16
sub
push
add
xor
push
mov
jge
inc
sub
jae
sbb
aaa
jmp
movsl
inc
imul
repz
mov
lds
or
jl
aas
pop
push
cld
mov
xor
lret
dec
jmp
ljmp
or
xlat
xchg
test
movsl
push
lock
sbb
and
mov
push
inc
outsb
mov
cs
leave
in
adc
push
out
jmp
push
inc
push
pop
xchg
pop
repz
stos
add
jmp
ss
add
scas
js
fldl
aas
mov
sbb
fadds
mov
pop
sub
lahf
shll
js
call
shll
lahf
jo
jp
ss
movsb
pop
xchg
js
add
mov
adc
jno
push
int
in
adc
scas
sbb
jle
inc
aam
push
cmpsb
pop
scas
inc
ret
cmc
cmpsb
fwait
stc
js
cli
setnp
mov
xor
adc
mov
int3
jo
jnp,pt
pop
stos
jae
sbbl
jge
jb
sub
rcll
in
adc
stos
in
rcr
hlt
xchg
mov
jmp
sbb
xorb
fstpt
shll
xchg
arpl
leave
in
jge
xchg
cmpsb
repnz
adc
and
fiadds
and
jmp
xor
je
xor
mov
mov
mov
fbstp
push
xrelease
cmpsl
adc
sbb
mov
in
jmp
sub
push
adc
or
mov
movsb
in
clc
mov
cltd
add
sbb
adc
out
sub
xchg
xor
fxch
sbb
mov
cmp
ret
int3
pop
xchg
stos
loope
lock
subb
into
push
cmp
dec
inc
mov
test
dec
sub
cmp
cmc
cmp
aaa
sbb
call
das
sub
aas
mov
xor
aas
and
out
js
mov
xor
int3
mov
popa
dec
xor
jle
xchg
mov
pop
adcl
xchg
push
add
jecxz
lock
sub
push
adc
mov
lcall
roll
xchg
dec
jge
and
mov
daa
call
xchg
or
test
fs
out
mov
aam
loopne
bound
faddl
xchg
dec
jo
test
test
dec
add
or
mov
jl
lret
mov
cmp
jg
inc
adc
add
push
pop
fstl
popa
mov
mov
test
cmp
inc
xchg
and
imul
jae
test
xchg
jbe
add
lock
sbb
stc
jne
cli
call
inc
sbb
in
mul
push
popa
dec
pop
cmpl
mov
repnz
mov
fs
sub
scas
push
jae
mov
adc
outsl
xor
clc
movsl
mov
pop
cmp
xchg
cwtl
cmp
jb
repz
push
xor
xchg
jmp
fs
jp
mov
mov
dec
or
andl
jmp
cmpsb
ljmp
movsl
fld
jne
pop
lea
pushf
roll
jl
lods
aam
ret
aaa
or
jne
dec
cmp
outsl
mov
sar
stos
sub
subb
adc
inc
pushf
add
inc
sub
test
and
pop
ret
sub
sub
push
push
mov
push
es
outsl
add
push
popa
xor
mov
bnd
hlt
push
adc
out
push
outsb
js
mov
mov
ret
mov
mov
in
or
push
testb
fisttpl
ljmp
xor
outsb
test
xor
bnd
pop
mov
pop
mov
fsubs
jmp
das
push
cmp
mov
xchg
mov
lods
xchg
mov
jmp
adc
mov
mov
adc
test
push
mov
stos
into
repz
cmp
aaa
push
nop
xchg
mov
jl
xchg
and
ret
pop
push
add
or
push
sbbb
lret
adc
inc
imul
mov
nop
and
cmp
adc
cmp
aam
push
xchg
sahf
fwait
mov
xor
and
adc
cld
data16
addl
fs
test
adc
push
pushf
adc
jb
sbbl
inc
mov
je
sbb
int
int3
mov
scas
dec
push
loop
ret
ja
js
mov
push
shll
pop
adc
jl
stos
sbb
xor
xchg
add
aas
dec
aam
inc
popf
rcll
outsl
shr
hlt
xor
imul
mov
push
sub
movsb
lcall
add
fadds
push
sub
jne
sbb
loopne
mov
iret
or
sub
pop
jle
sbb
push
shll
fwait
lea
sahf
jbe
dec
in
nop
push
mov
push
push
and
xor
or
adc
dec
ja
dec
add
adc
push
xchg
test
loope
sti
ja
adc
add
in
cli
push
fildll
push
xor
ljmp
mov
movsb
js
dec
dec
xor
cmp
rcrb
pop
mov
push
sbb
gs
sahf
movsb
popf
clc
out
inc
xor
adc
sub
sti
int
nop
xchg
mov
sbb
addl
fs
cli
mov
dec
sub
cmpsb
inc
push
arpl
xor
adc
sub
cmp
clc
xchg
and
out
and
or
mov
sub
leave
imul
sub
cmp
inc
jb
leave
clc
push
cmp
pop
mov
iret
shll
xchg
out
inc
cmp
bound
cli
pop
insb
insb
mov
pusha
aas
out
cmpsb
inc
scas
or
adc
addr16
scas
shll
xchg
loope
cmp
sbb
pop
jns
repz
cmp
fdivrl
mov
hlt
pop
cmpsl
pusha
daa
faddl
mov
pushf
and
adc
lea
cmpsb
push
adc
jno
push
jnp
cs
in
mov
xor
jae
imul
jnp
fwait
add
xor
lret
pop
stos
rcr
lcall
mov
or
mov
sbb
jno
cli
and
loopne
sbb
add
jmp
push
in
xchg
push
test
lock
data16
pop
nop
lcall
inc
dec
sbb
testl
loopne
mov
push
push
test
mov
mov
cmp
hlt
nop
mov
push
outsl
pop
dec
adc
fwait
and
call
and
jnp
frstor
push
and
repz
testb
sbb
mov
dec
sar
shrb
or
inc
mov
stos
pop
lret
loope
movsb
hlt
enter
out
into
mov
push
lret
dec
adc
sub
out
push
mov
sbb
cmc
push
scas
lea
mov
push
and
sbb
fdivp
pop
std
je
mov
mov
fbld
repnz
xchg
test
jo
jmp
orl
inc
cmp
add
xchg
lahf
fdivl
fs
mov
cmpsb
idiv
add
insb
testl
mov
pop
push
xlat
mov
cmp
leave
xchg
adc
dec
lods
stc
adc
push
mov
or
sbb
inc
push
repnz
mov
popf
cmp
or
xor
xchg
es
std
xchg
pop
mov
dec
adc
in
inc
into
ljmp
jge
mov
and
and
mov
fucom
mov
mov
arpl
scas
adc
je
in
out
pusha
cli
pop
dec
out
cmp
pop
adc
sbb
jo
rol
cmovne
jge
or
cmc
xchg
cmp
pop
and
in
or
shll
jle
pop
ljmp
inc
xchg
fcoml
std
jo
or
lahf
dec
mov
cmpb
fidivrs
push
xchg
lock
es
icebp
mov
stos
popf
and
lcall
adc
inc
or
insl
clc
jge
cmpsb
mov
stc
sbb
insl
inc
mov
pushf
shll
dec
outsl
jo
sbb
cwtl
ret
mov
and
mov
lods
xor
sbb
mov
adc
xchg
xchg
jno
jbe
push
movb
repnz
ficoml
cmpsb
aas
jno
mov
es
lcall
mov
push
int3
cmp
dec
cmp
bound
mov
ds
inc
push
jle
mov
mov
xchg
test
imul
fucomip
hlt
add
shr
int3
xor
loopne
fstl
repz
test
sub
xor
xorb
add
xor
jb
idivl
inc
ljmp
pop
addr16
outsb
pop
push
dec
xchg
test
xchg
inc
les
bound
fdivrs
push
xor
rep
mov
in
mov
out
pop
dec
shll
fwait
mov
hlt
xchg
jns
es
movsb
test
add
cmc
test
stos
jbe
lods
or
outsb
lahf
pop
mov
push
loope
xchg
mov
addb
mov
lret
dec
sub
inc
cs
jno
shll
pop
xor
int
lock
into
fwait
adc
jl
jg
sbb
sbb
mov
adc
aam
xchg
sub
lods
cltd
rolb
js
nop
stos
pop
ja
pushf
lahf
add
pop
in
aad
sbb
pop
roll
adc
mov
dec
sub
stos
cmp
pop
jnp
dec
adc
jg
adc
fsubrs
xor
ret
add
inc
sub
mov
popa
nop
aam
and
jbe
ret
sub
fwait
lds
je,pt
xchg
dec
push
pop
dec
in
enter
cmc
icebp
sbb
push
pop
push
insl
add
popa
icebp
adc
and
scas
call
dec
popa
adc
ret
les
inc
mov
ja
bound
or
insl
lds
mov
sub
ret
loope
test
sbb
ljmp
xor
cld
or
dec
pop
inc
adc
pop
sub
pop
das
cmp
lret
mov
stc
push
push
rolb
arpl
sbb
in
es
cmp
dec
or
pop
sbb
aam
scas
outsl
jbe
mov
pand
loop
or
lods
popf
sbb
inc
leave
into
sub
xor
aad
add
cmp
dec
sbb
push
ja
daa
popf
mov
sub
cmp
xor
inc
pusha
and
pop
mov
fildll
xchg
shrb
cltd
inc
xchg
sub
add
fnsave
fiadds
vmovlps
div
push
sub
ret
xor
cs
jbe
call
jae
xchg
js
sbb
in
je
sbb
sarb
gs
add
xchg
jg
test
mov
mov
inc
lods
repnz
jle
nop
lds
hlt
test
cmp
jecxz
fidivrs
pop
mov
lods
pusha
push
pusha
mov
sahf
jl
mov
ss
fbld
in
cmp
aam
jg
imul
ficompl
pop
add
cmpsl
je
mul
xor
inc
mov
dec
in
stos
pop
jg
aam
inc
daa
cmpsb
rcr
mov
jge
ret
jno
mov
mov
repnz
ds
test
mov
cmp
enter
lock
or
or
jl
les
pop
and
dec
neg
loope
sbb
pop
ror
sub
cmp
enter
ljmp
jle
adc
inc
dec
and
mov
inc
loope
push
insb
add
sub
add
sbb
out
xchg
movsl
ret
push
and
xchg
or
jge
pop
jmp
data16
lahf
repz
xchg
jmp
sbb
xlat
cmp
and
hlt
add
mov
sub
pop
aaa
sbb
add
mov
cltd
xor
pop
dec
mov
and
ja
loop
cmp
dec
cld
dec
rolb
pop
add
fwait
imul
cltd
and
lcall
or
xor
push
rclb
or
leave
stos
mov
scas
sbb
lea
adc
les
div
pushw
mov
aam
data16
jo
test
fidivrs
push
dec
adc
loope
dec
mov
cltd
lods
xchg
sub
fsubl
stos
xchg
std
decb
mov
ljmp
in
jecxz
and
outsb
cmpsb
mov
jnp
mov
stos
inc
or
mov
jecxz
psllw
sbb
cmp
stos
mov
js
jo
xor
mov
push
push
push
sub
cmp
xchg
out
push
adc
outsl
add
lods
ljmp
in
xor
or
nop
rorb
aad
push
es
xchg
push
insl
jb
in
xchg
mov
dec
mov
cmp
inc
pop
aad
xorb
add
pop
jb
push
push
jecxz
insl
push
adc
dec
mov
mov
jnp
sbb
add
push
test
and
xchg
and
scas
mov
dec
cld
es
xchg
jl
mov
jnp
lds
scas
pop
push
cmpsl
js
jae
push
mov
push
xchg
jmp
std
lock
mov
mov
and
aaa
pop
or
mov
sarl
push
mov
jnp
fcmovne
out
orb
jmp
es
cmpsl
xchg
and
mov
mov
add
add
push
push
daa
daa
test
add
xorb
xor
inc
data16
push
int3
jmp
popa
stc
dec
aas
es
push
sub
insl
aaa
or
popa
in
rolb
sub
lds
fwait
imul
pop
cmp
in
ljmp
add
fwait
sahf
inc
jmp
rolb
out
movsl
mov
pop
xchg
inc
xor
lret
sub
das
aas
fs
and
call
sti
jae
xchg
jns
adc
cmpsl
fildl
sub
pop
add
jg
jl
popf
shld
mov
jge
mov
inc
xlat
mov
in
sbb
repnz
shlb
mov
sub
jns
mov
inc
loope
mov
lods
sbb
aad
enter
shll
aad
nop
out
mov
fdivs
adc
xchg
sub
dec
fdivs
inc
xchg
push
fisttpl
nop
int
testb
subl
mov
outsb
xchg
mov
popf
int3
aas
ret
in
jge
pop
sub
cwtl
mov
loope
cmp
aad
xchg
orb
movsb
dec
scas
aam
loope
sbb
push
insl
dec
les
ljmp
xchg
adc
jo
arpl
lahf
cwtl
scas
mov
jb
and
pop
daa
das
jmp
dec
adc
inc
movsb
lock
mov
mov
ss
dec
xchg
aam
xor
test
fsubr
inc
cmpsl
or
mov
jl
dec
xchg
pop
mov
aad
sbb
pop
cmp
or
lea
mov
fadds
dec
sub
dec
mov
icebp
xchg
rorb
lods
mov
dec
test
add
sbb
mov
arpl
pop
mov
lea
push
mov
sahf
add
add
push
movsb
ja
fs
test
scas
daa
ret
add
jno
xor
aam
aad
mov
adcl
xor
testl
dec
movsb
idiv
mov
inc
bnd
pop
movsb
jns
addb
nop
movsl
jne
inc
dec
dec
push
adc
inc
mov
arpl
insb
pop
adc
in
xchg
push
sahf
rcrb
lds
pop
adc
lret
or
sub
lret
hlt
aas
hlt
iret
jp
fxtract
pop
in
data16
ret
mov
divl
in
enter
stos
cmp
xchg
and
out
ret
xchg
pop
mov
sahf
jp
xchg
mov
outsl
popl
push
mul
stos
repz
hlt
pop
dec
push
jne
fld
xchg
xchg
adc
push
dec
lock
imul
mov
xlat
or
mov
loopne
xchg
scas
pushl
movsl
cmp
mov
cli
and
dec
out
cmp
ret
loopne
das
cmp
mov
mov
movsl
or
inc
and
testb
inc
mov
fldl2t
clc
ficoms
xor
xchg
jge
das
sbb
pop
cli
ror
sub
fucomi
adc
sub
out
sbb
sahf
inc
stc
xor
xor
ja
fwait
cmp
pop
mov
mov
pusha
cmp
pushf
cmp
aas
sub
rcl
push
addr16
int
xchg
sbb
bound
sbb
mov
jmp
add
xchg
cmp
orl
mov
inc
push
add
push
jmp
inc
and
es
fnsave
dec
cwtl
leave
rcrl
adc
enter
aaa
or
lcall
cs
or
sahf
jp
mov
add
inc
int
mov
rcrb
loope
add
repz
stos
mov
int
aaa
push
dec
mov
pop
lods
push
mov
xchg
cmp
xlat
test
mov
xchg
cmp
ret
pop
pop
mov
jno
and
xchg
and
push
sub
rol
scas
jne
and
inc
mov
jmp
mov
sub
mov
cmc
push
jo
movsl
icebp
cmpl
mov
fdivr
gs
push
lods
lcall
test
sbb
cmpsl
stos
shrl
and
jmp
mov
push
sbb
sti
frstor
mov
imul
mov
adc
popf
fs
or
sbb
fisttpl
das
pop
jg
in
out
lods
daa
roll
mov
outsb
ja
adc
cld
fisubrl
push
sbb
fsubs
mov
repz
sbb
movl
outsb
push
pop
outsl
or
cmp
push
xchg
sahf
inc
test
lret
daa
xor
xchg
jge
xchg
mov
mov
and
push
insl
clc
mov
mov
jecxz
outsl
adc
lahf
mov
in
mov
cmpsb
scas
mov
push
loopne
popf
xchg
cld
mov
push
imul
hlt
or
sahf
rcr
popa
mov
mov
ja
test
or
and
sub
out
jl
or
jecxz
int
mulb
mov
pop
loopne
cmp
es
fmul
sub
or
and
fimull
xor
outsl
lods
push
push
pop
into
add
shl
push
int3
sub
cmp
mov
adc
aaa
loope
lock
sub
jge
jb
add
mov
lea
test
inc
stos
jae
sub
sub
out
xchg
lods
mov
sub
cli
imul
inc
pmulhuw
loopne
cmp
cmc
push
dec
outsl
pop
adc
sbb
es
xchg
cwtl
mov
push
inc
pop
mov
mov
jecxz
jle
cld
lcall
out
ficoms
jb
mov
adc
test
lods
jge
mov
mov
inc
add
fnstenv
es
lock
inc
stos
stos
cltd
xchg
movsb
push
fwait
add
rorl
enter
cmp
popa
mov
sarl
sbb
adc
sub
int
popf
push
mov
mov
adc
shrl
call
and
ret
push
inc
inc
into
adc
mov
vmulpd
clc
sti
add
popf
rcrb
inc
sbbb
int
cltd
cmc
loop
pop
mov
ret
mov
int3
xor
test
ret
xchg
stos
mov
mov
cmc
adc
mov
push
fistl
fsubrp
jbe
cs
xlat
lods
js
ja
jmp
orb
xor
pop
rcrl
mov
pusha
scas
mov
cld
popf
jge
pop
push
arpl
mov
cltd
ja
jp
mov
repnz
test
sub
pop
push
sub
out
sub
mov
adc
stos
adc
mov
and
fwait
xchg
scas
xchg
ficoml
popf
jno
arpl
xchg
call
in
xor
decl
es
xchg
popa
les
cmp
adc
imul
ret
lea
and
scas
pop
sahf
bound
cmpb
loopne
mov
pop
std
hlt
dec
mov
and
mov
push
lret
push
adc
les
leave
sub
xchg
es
fimull
leave
testl
xor
jae
pop
xor
xchg
sbbb
add
and
icebp
test
adc
or
inc
inc
add
xchg
push
jnp
bnd
or
movl
xchg
jns
in
test
xchg
xor
fs
fcoms
enter
or
xor
call
adc
jbe
cltd
call
push
cmp
popa
sar
pop
cs
cmp
fimull
mov
out
dec
push
test
into
loope
sub
dec
fwait
call
in
fstpt
push
sbb
mov
xchg
lea
out
mov
and
xor
adc
sub
jle
cmpsb
ret
cwtl
fildl
lcall
mov
push
icebp
cmpsb
mov
or
pop
pop
ret
mov
cmpsb
rol
repnz
push
push
rcr
insl
xchg
adc
mov
mov
ss
push
mov
scas
jl
mov
sbb
gs
in
mov
mov
or
aaa
add
pop
je
fnsave
mov
mov
mov
xor
rcrb
push
stos
jno
pop
or
and
iret
jae
push
les
dec
inc
push
mov
enter
add
jnp
in
fsubr
stos
jno
xor
hlt
sbb
iret
call
scas
mov
bound
and
popa
imul
push
and
adc
jnp
test
jmp
stos
mov
aad
cmpsl
mov
fpatan
or
hlt
stos
ret
sarl
mov
adc
inc
movsl
stos
in
fnstsw
cmpsl
aas
insl
mov
subb
popa
out
fbld
cs
xchg
cmp
test
in
lds
mov
mov
and
call
or
mov
push
fnstcw
pop
push
fstpt
mov
cmp
fwait
sbb
mov
jo
jo
fwait
movsb
fisttpll
inc
xchg
ja
jge
es
pop
hlt
inc
leave
ret
das
lcall
testb
gs
loop
aad
hlt
sbb
out
mov
mov
xor
or
xor
inc
decb
sbb
xlat
sub
shr
jo
movb
push
pusha
dec
xchg
mov
shlb
mov
movsb
dec
cmc
cmc
dec
xor
jmp
jae
and
mov
pop
jbe
lock
mov
cmp
mov
ss
pop
push
mov
imul
jp
inc
cmp
in
adc
xchg
mov
add
popa
cmpsl
sub
sub
iret
jnp
mov
jle
fnstsw
test
sbb
cmp
in
jns
push
lahf
push
push
mov
int
fcmove
push
add
int3
inc
dec
and
outsb
dec
shrb
popa
ficompl
inc
lret
pop
lret
jl
scas
xor
les
xchg
scas
and
jle
xor
cmp
mov
in
gs
xchg
shlb
js
and
inc
orb
ja
scas
aam
jg
and
sub
jnp
sbb
sbb
hlt
pop
or
repnz
jne
loope
out
pop
shl
or
decl
adcl
lods
jo
ds
cmp
mov
fimuls
pop
stos
outsl
es
adc
les
cltd
adcb
push
add
mov
cmp
addr16
add
cmpsb
in
iret
jl
push
jge
xchg
and
test
into
icebp
jo
insl
cmp
gs
repnz
hlt
scas
mov
lds
loopne
mov
sti
add
mov
pusha
push
dec
xchg
repnz
jb
in
pop
shrb
mov
sub
shlb
and
loopne
mov
mov
sti
mov
and
in
arpl
adc
or
inc
add
push
xchg
cmp
adc
aam
test
adc
cmp
pop
sub
std
mov
inc
mov
and
ret
jmp
push
sub
out
and
xchg
xchg
aaa
ja
popa
jmp
cvtps2pd
shlb
mov
pop
xchg
fisttpl
lcall
jecxz
addl
movsb
inc
inc
fcmovb
inc
or
mov
lret
cmpsb
xchg
fwait
xor
rep
cli
stos
aad
lods
out
sbb
adc
cld
popa
jb
das
ljmp
and
daa
insl
lahf
rol
out
and
or
mov
dec
sub
adc
out
insb
ss
or
insl
mov
dec
inc
jo
fs
fildll
repz
xchg
lods
push
add
iret
call
cld
stos
dec
mov
jmp
dec
adc
rcr
repnz
enter
dec
cmp
rcr
clc
and
out
jecxz
push
pop
mov
and
call
movsb
pushf
mov
out
hlt
xchg
test
sbb
popa
int3
and
push
jae
aas
icebp
movsb
leave
add
mov
mov
in
inc
ret
inc
sub
repz
xchg
adc
ffree
mov
cmp
js
movsl
dec
adc
cld
call
jb
add
add
sti
add
bound
addr16
fiadds
pusha
bound
push
mov
inc
pop
and
addr16
sahf
and
iret
xor
cmp
push
push
sub
cmp
sub
or
negb
decl
and
or
ss
and
or
testb
adc
add
jmp
stc
push
aas
aad
loope
test
aaa
mov
xor
fildl
cmp
insl
movsb
xchg
jl
jp
jns
cmpsb
mov
xchg
imul
push
les
std
rol
xchg
mov
xchg
sub
xchg
cmp
pmulhw
ficoml
mov
mov
add
imul
mov
int3
sbb
dec
jb
outsb
popa
sbb
mov
fisttpl
add
ds
and
je
mov
mov
dec
jmp
mov
hlt
lock
push
xchg
or
mov
loope
pop
cltd
sbbl
sbb
fcoms
xchg
shlb
inc
adc
cmp
sub
inc
push
push
ljmp
adcl
push
faddl
pop
xor
out
loop
xor
jae
push
mov
adc
inc
stos
les
jge
xor
scas
pop
mov
enter
and
test
fidivl
or
pop
xchg
and
cwtl
das
mov
sahf
inc
cmp
subb
or
andb
mov
inc
fwait
adc
adc
sub
sbb
and
xor
inc
loope
pop
sbb
pusha
xchg
mov
subb
outsw
and
jno
pop
pop
ret
scas
sub
lret
and
xlat
jmp
aaa
lcall
test
mov
test
and
and
jnp
jmp
mov
push
dec
ret
fdivl
push
add
xchg
stos
ja
pop
mov
push
cltd
cltd
lcall
js
inc
push
iret
dec
test
popf
mov
pusha
stos
stos
push
inc
push
or
movsb
insl
and
nop
repz
adc
pop
ja
dec
iret
imul
subl
movsl
test
out
outsb
push
cld
add
scas
mov
rcr
std
mov
sbb
hlt
xchg
mov
mov
inc
push
std
in
call
inc
pop
in
test
lcall
push
add
in
adc
movb
mov
adc
sbb
hlt
cli
cmp
mov
mov
imul
mov
jle
dec
xchg
mov
add
jne
outsl
sub
or
lret
cmp
and
mov
mov
aam
pop
adc
dec
xor
jle
mov
jae
stc
cmpb
push
mov
add
jne
pop
in
sub
sbb
pop
shrb
fsub
insb
andb
mov
leavew
fucomip
mov
sti
pop
pop
sbb
pop
pop
xor
fimuls
xchg
adc
pop
call
int
repnz
jne
xor
out
outsl
mov
test
dec
dec
and
and
loopne
xor
ficoml
enter
push
inc
aad
jns
jo
fisubrs
bound
inc
movsb
ds
inc
stc
mov
mov
mov
into
mov
ret
pop
xor
mov
in
clc
pop
add
sub
add
xchg
push
mov
faddp
dec
adc
pop
xchg
in
cmpsb
mov
push
jge
cld
inc
xchg
cmp
or
jae
test
adc
adc
mov
push
cld
sbb
lock
and
les
xor
pushf
rcl
sahf
sti
jge
stos
add
push
mov
xorl
je
adc
inc
hlt
xchg
sahf
sub
js
das
mov
pop
outsl
xlat
lcall
jmp
cs
push
xchg
ja
mov
dec
loop
popa
adc
pop
lret
std
ss
sbb
ret
pop
clc
lea
jae
cmp
inc
jb
addb
jp
addb
cmpsl
adc
loope
aam
pushw
outsl
pop
ret
fnsave
and
add
gs
ljmp
test
icebp
dec
mov
jnp
icebp
xchg
lret
cli
sub
xchg
sub
call
mov
jns
jnp
pop
xor
dec
les
mov
push
mov
sti
inc
bound
imul
add
out
push
aas
pop
std
aaa
mov
sbb
test
xchg
push
sbb
push
jmp
cmp
insb
hlt
jmp
xchg
add
jmp
add
mov
fcomps
bound
nop
cmp
inc
sbb
dec
loopne
bswap
and
jmp
add
and
and
add
sbb
gs
lcall
jnp
dec
xor
pop
inc
popa
out
inc
data16
dec
dec
pop
xchg
and
mov
cmpsl
inc
xor
fistpl
push
or
or
xchg
xlat
repz
shrl
mov
dec
stos
sbb
pusha
sbb
add
or
cli
and
sub
repnz
aad
fists
dec
in
sub
out
pusha
xchg
jae
les
mov
hlt
push
xor
add
mov
pop
pop
rcr
jmp
sbb
push
lods
setno
push
jb
mov
and
lea
pushf
lds
lret
jnp
sub
xchg
les
sub
imul
or
xchg
test
add
sbb
sbb
adc
fbld
mov
test
mov
pop
movl
shll
xlat
ror
lahf
std
cmpsl
lcall
loopne
jae
or
pop
jp,pt
lea
jno
out
sbb
sbb
inc
test
mov
inc
dec
xor
mov
neg
not
sbb
add
mov
imul
xchg
sub
js
pop
nop
jno
sub
enter
subb
xchg
fidivl
aas
mov
out
imul
mov
in
xchg
shlb
mov
mov
lds
xchg
pop
daa
or
adc
nop
xchg
pop
sub
addl
mov
stc
xor
pop
jle
sahf
add
outsl
push
test
mov
in
outsb
cmp
jmp
aaa
pop
call
imul
push
lods
xchg
dec
inc
mov
in
or
daa
and
add
adc
aas
jae
out
fwait
ja
fnstcw
sarb
xor
xor
xchg
ljmp
jle
mov
xchg
or
pop
xor
inc
xor
pop
int3
bound
mov
ljmp
add
cmpb
lods
jno
cmpsl
pop
jns
pusha
sarb
inc
cli
test
or
dec
inc
mov
jmp
sbb
imul
xchg
push
rcrb
clc
xchg
in
inc
push
ljmp
and
push
movsl
push
sbb
aaa
scas
div
pop
imul
fcomp
push
or
cmp
mov
popl
adc
scas
inc
and
rorb
adc
pop
lods
adc
fsts
data16
and
sbb
fs
push
jmp
dec
sub
loop
pusha
lods
orl
xor
test
cmp
ret
test
cmp
cmp
negb
ja
mov
dec
dec
ds
dec
xor
xchg
add
test
popl
jmp
iret
mov
push
mov
sbb
in
or
cmp
insb
fmuls
or
fsubrl
insb
xchg
jnp
and
je
rep
inc
je
leave
adc
fcmovbe
scas
sarl
mov
in
cli
push
push
pop
insb
mov
test
nop
push
mov
pop
mov
push
les
adc
inc
fidivs
insl
cmpsb
adc
push
sbb
sub
or
mov
ret
sub
jle
add
je
out
out
mov
fldcw
jne
sub
mov
pop
insl
xchg
add
lret
push
add
fistpl
daa
insb
mov
jecxz
xchg
insl
cmp
mov
bnd
jbe
repnz
lcall
and
dec
adc
dec
or
sub
sbb
lcall
rcrl
stos
mov
mov
dec
xchg
xor
dec
jecxz
rolb
pop
popf
jge
mov
cmpb
xchg
push
jle
jmp
in
push
shll
or
int3
arpl
lods
pop
sub
dec
dec
out
call
nop
push
in
stos
pop
jp
xchg
sub
mov
push
stos
std
and
popf
insb
scas
sub
jns
mov
std
jnp
cs
jns
adc
sarb
lds
rcll
cli
adcl
dec
inc
mov
int3
adc
pop
aaa
in
test
xchg
jbe
aad
or
inc
rorb
pusha
cmp
dec
jecxz
jo
shll
or
sub
pushf
sub
pop
rclb
fdivr
stos
pushf
mov
std
insb
dec
inc
ret
int3
mov
inc
push
pop
lcall
das
dec
xchg
or
pop
pop
dec
insb
mov
push
sbb
subb
clc
cmp
rcl
jne
inc
sbb
dec
pop
sub
rcrb
push
jae
xchg
adc
clc
lret
dec
lcall
sbb
jbe
pop
jae
jae
xchg
pop
insl
mov
rol
adc
neg
mov
jnp
cmp
adc
sarl
jge
sbb
pop
pop
lock
rolb
cmp
je
cmp
push
loop
mov
xor
fdivrp
dec
ret
mov
jmp
call
mov
pop
xor
cltd
and
push
push
lret
mov
xchg
add
nop
add
vmwrite
testl
out
xor
addr16
and
adc
xlat
pop
lods
xor
sub
bound
add
dec
mov
inc
sbbl
pushf
out
test
leave
int
insb
mov
in
sar
int
in
jnp
mov
push
add
nop
scas
loopne
adc
jnp
add
mov
aas
adcl
sub
xor
lret
push
sbb
xor
or
cs
dec
mov
cmp
out
jge
test
xor
adc
xor
inc
cmp
imul
in
push
ss
mov
aad
fidivl
ret
jb
test
fmuls
popf
cmpsb
and
loope
inc
mov
dec
shll
mov
das
xchg
xchg
mov
cmp
out
in
in
mull
xor
push
cmp
or
jp
les
or
fsubr
pop
fxch
xchg
outsl
xchg
mulb
push
push
push
clc
loope
mov
fiadds
push
sub
fisttpl
mov
dec
das
loopne
lea
aad
sbb
add
and
xchg
xchg
push
data16
lock
loope
or
mov
lahf
pushl
lods
arpl
and
fdivrs
sbb
push
icebp
ljmp
sbb
xchg
jno
or
aaa
pushf
pop
xchg
addr16
jbe
pop
insl
roll
dec
pinsrw
insl
sti
fnstcw
out
nop
or
ds
out
and
xor
je
fstpt
sub
push
push
int
mov
and
pop
in
adc
ret
xor
xchg
sbb
andl
pop
or
jl
lcall
inc
je
adc
jg
sbb
xlat
loope
push
scas
movsl
call
mov
pop
fnsave
addl
jno,pt
in
jg
neg
dec
adc
push
ljmp
hlt
mov
inc
jo
dec
fidivl
pop
lods
es
adc
data16
xor
mov
push
rcl
cld
push
leave
lret
adc
subps
fimull
shlb
and
int
movsb
in
sub
subb
lea
or
daa
inc
mov
imul
cs
or
out
mov
pop
testb
sbb
inc
idivb
xlat
dec
adc
fwait
jb
jmp
int
jb
inc
fdiv
int3
std
xor
mov
mov
in
repnz
jmp
mov
cmc
sub
ror
adc
addr16
scas
cmp
pushf
imul
test
inc
mov
loopne
xor
rcrl
rcll
add
or
inc
sub
mov
sbb
test
and
test
xchg
inc
vmovq
sti
ret
xchg
xchg
lock
push
test
aam
hlt
mov
scas
icebp
aaa
std
stos
inc
inc
out
pusha
jo
mov
mov
lahf
mov
cwtl
in
imull
sbb
sbb
inc
cmp
pop
mov
xchg
mov
shrb
es
add
add
addl
adc
mov
mov
lahf
lods
lock
icebp
das
add
add
popl
mov
cmp
jne
or
mov
mov
shlb
sar
and
mov
pop
inc
dec
xchg
mov
dec
inc
sbb
into
dec
dec
jecxz
add
cmp
sub
lock
jp
or
cmp
in
cltd
movsb
inc
push
test
xchg
lds
ds
mov
jno
test
jmp
push
pop
sbb
mov
sbb
fstpt
out
add
xchg
lret
xchg
push
mov
add
inc
jge
add
daa
cmp
mov
jno
cli
loope
js
push
mov
dec
das
mov
lods
pop
in
jg
add
push
mov
fcmovnu
ljmp
stc
inc
in
addr16
nopl
add
mov
aam
fmul
pop
xchg
xor
pop
clc
dec
adc
or
fidivrl
push
push
cmp
cli
stc
int3
inc
dec
lock
or
pop
outsl
push
inc
insb
adc
or
push
mov
mov
loopne
test
test
lods
ss
out
test
jg
in
sbb
stos
sbb
shrl
sbb
fisubl
cli
cmpb
fdivl
nop
ret
mov
bound
pop
int3
dec
outsb
hlt
sbb
rolb
or
inc
imul
xor
sub
sahf
in
adc
dec
sarl
pusha
mov
cmc
mov
pusha
pop
jge
stos
xorl
and
dec
add
aad
xor
xor
bound
xor
xor
lret
push
mov
inc
imul
lret
scas
mov
push
movsb
mov
xchg
push
out
push
mov
bound
mov
outsl
push
and
sarb
xor
imul
pop
pushl
dec
dec
add
movsl
mul
outsb
dec
pusha
xchg
movsl
jp
test
jp
xchg
lods
into
mov
xrelease
loop
ret
push
in
ss
ja
pusha
jae
enter
cld
dec
jg
pop
mov
cmp
pushf
jbe
cld
aad
nop
popf
in
push
xchg
mov
adc
out
pusha
jnp
aas
or
and
ret
in
cmpsb
xchg
popa
fwait
mov
push
mov
xlat
shrb
or
and
rcrb
int
jns
scas
ror
jecxz
cltd
mov
repz
call
insb
pusha
cltd
frstor
mov
pop
pop
cmp
lds
subb
ret
jle
test
cmp
push
shll
mov
xchg
xchg
or
ror
cmp
push
sbb
inc
xor
mov
pop
jae
xchg
daa
or
cmp
out
sub
aaa
sbb
mov
fs
cmpsl
push
sub
mov
xchg
cltd
push
ret
orl
push
movl
in
or
adc
sub
ds
cmp
jbe
cmp
jnp
shlb
cmovl
pop
push
and
jbe
add
pop
sub
das
in
add
jg
aaa
je
xor
iret
jp
lods
rcll
test
inc
inc
adc
sbb
ja
mov
push
cmc
sbb
mov
or
cmp
jp
shlb
aam
inc
fadd
repnz
insl
lds
in
hlt
rcrb
xor
sbb
fdiv
call
gs
jecxz
test
adc
mov
mov
fimull
daa
mov
push
mov
out
sti
lock
xor
cmpsb
jmp
mov
cmp
and
js
call
push
xchg
lcall
insb
jge
icebp
and
aam
cmpb
scas
cmp
add
push
mov
lea
sbb
or
pushf
ds
xchg
daa
and
and
pop
push
pop
stc
xor
fists
pop
push
mov
dec
in
dec
sub
aam
in
xchg
and
stc
subl
pop
in
mov
push
pop
ds
nop
inc
shl
mov
sbb
cli
or
cltd
mov
fwait
pushf
fistpll
mov
pop
mov
cmp
scas
xchg
je
sub
push
add
lds
inc
sbb
dec
push
and
xchg
scas
rcl
pop
lret
adc
adc
xchg
pop
lods
push
pop
jl
pop
mov
mov
pop
dec
push
popf
xor
ja
lret
push
fiadds
imul
sbb
repnz
fmull
mov
jae
loope
les
inc
add
jg
mov
insl
clc
loop
jns
sbb
arpl
xchg
xchg
mov
sbb
sbb
add
mov
out
mov
lahf
enter
nop
lahf
jae
jbe
cmp
ljmp
push
aas
es
mov
call
rolb
test
jne
push
nop
test
or
xor
xor
mov
icebp
add
repnz
inc
into
fists
xchg
ss
or
ds
pop
sbb
out
sbb
jl
into
das
lret
rcrb
inc
stc
xchg
popa
xor
adc
add
loope
mov
mov
rclb
cli
repnz
shrb
sbb
int3
xchg
lea
inc
pop
fs
xchg
sub
push
addr16
scas
outsw
inc
cmp
dec
hlt
cmp
stos
xchg
xchg
dec
mov
cmpsb
loop
test
cmpsl
in
mov
xor
mov
cmp
mov
aam
pop
jg
lea
fsubrl
outsb
mov
insb
inc
pop
or
imul
adc
dec
add
mov
out
daa
fisubrs
stos
inc
stos
out
lock
xor
and
add
call
sti
xor
xor
cmpsl
inc
inc
mov
adc
lock
ret
sub
daa
xlat
stc
dec
push
cltd
arpl
out
xchg
cld
popa
inc
or
adc
loopne
cmp
ss
jnp
hlt
mov
stc
mov
nop
push
aas
sbb
lods
repz
mov
mov
out
jmp
idivl
popa
jle
cmp
hlt
push
lods
xor
out
test
ret
lret
fsubr
rcl
jno
insb
loope
mov
pop
mov
lea
test
icebp
push
dec
mov
jno
es
cltd
notb
data16
data16
mov
push
iret
stos
mov
or
xchg
and
cmp
push
and
cmp
cmpsb
sub
mov
inc
add
add
jns
pop
xchg
pop
ljmp
push
ret
jl
addr16
sub
into
jg
jbe
rcr
and
or
mov
das
adc
addr16
mov
repnz
addr16
xor
xchg
xchg
les
mov
cmp
xor
insl
flds
fwait
xor
or
push
loope
aad
sbb
lds
lea
pusha
ds
xor
mov
dec
push
dec
mov
xchg
ja
dec
inc
stos
inc
add
xrelease
sahf
xlat
js
xchg
stc
mov
rcr
mov
shrb
popa
sahf
iret
lods
std
and
inc
js
loop
pcmpgtb
sahf
pop
imul
dec
std
mov
movsl
or
pop
mov
mulb
xchg
aas
sarb
shll
je
ja
xchg
aaa
cltd
test
or
lahf
pusha
add
push
mov
push
lahf
cmc
in
outsl
data16
call
int
xor
or
shll
fs
push
mov
lcall
xchg
les
add
or
out
xchg
cld
mov
mov
add
fnstsw
jns
adc
in
dec
or
je
xor
xchg
aaa
jge
or
es
sahf
cmp
repz
js
loope
or
push
add
mov
push
jle
and
pop
scas
xchg
pop
into
push
lds
mov
aas
shrl
test
add
add
leave
sbb
outsl
lock
lds
cmp
aam
sbb
shrb
bound
mov
xchg
mov
rolb
add
push
test
adc
sbb
dec
mov
or
inc
xor
mov
cmp
dec
nop
or
dec
std
and
shrb
pop
es
adc
cmp
aas
mov
aas
mov
pop
lds
call
mov
xchg
sub
outsl
xor
subb
or
insl
icebp
icebp
xor
pop
xchg
in
or
negl
xchg
cli
test
jge
add
push
xchg
sub
or
stc
cmpsl
fdivrl
shll
in
mov
xchg
ds
xor
add
lahf
incb
mov
jecxz
test
insb
lret
andb
repnz
loopne
pusha
and
mov
mov
inc
popf
mov
or
pop
cli
imul
test
mov
in
or
idiv
loop
out
xor
fmull
dec
adcl
nop
iret
sbb
xor
aas
mov
addr16
inc
fimuls
in
mov
pushf
xor
test
pop
xchg
dec
and
dec
mov
outsl
fiaddl
std
call
mov
fldl
push
in
pop
jp
cs
cltd
outsb
mov
xorl
loope
cmp
gs
push
imul
add
mov
lret
push
mov
sub
decb
xchg
ret
mov
xchg
xchg
shll
or
sbb
dec
js
dec
push
xchg
pushf
int3
and
in
and
push
out
aam
daa
inc
jns
leave
jle
dec
fsts
test
inc
leave
inc
or
push
movsb
loop
stos
push
mov
inc
or
xchg
into
lahf
xchg
cmpsl
or
jle
mov
pop
jmp
aam
sub
testl
pop
sub
shlb
mov
jnp
sarb
stos
inc
lds
and
ds
push
add
push
aaa
int3
test
xor
add
jnp
ss
rcrl
aaa
dec
lock
push
xor
gs
clc
scas
cmp
jmp
pop
std
sbb
lock
aam
test
incb
scas
jl
in
jbe
rorl
sbb
shll
loopne
xchg
push
pusha
sarl
xor
outsl
pop
das
and
cmc
out
sbb
sbb
fldt
jl
mov
dec
ror
push
aas
sbbb
mov
push
mov
shrl
ret
xor
sub
repz
lock
push
aas
mov
call
enter
mov
dec
mov
cmpsl
adc
mov
inc
sub
mov
mov
divb
scas
cld
jbe
sub
cmp
shl
mov
mov
jl
sbb
ret
jb
xchg
mov
fadd
and
loope
rorb
mov
aaa
shlb
push
es
and
cmp
push
add
pop
push
lock
or
lret
loop
add
mov
imul
xor
mov
push
add
cs
lods
aaa
scas
xor
cmp
cmpsl
lds
in
or
mov
push
fxtract
mov
fmuls
cmp
cmp
sub
xchg
adc
push
imul
fisubrl
das
test
pop
insb
jns
dec
lret
jg
push
add
fimull
dec
loope
add
leave
mov
insb
pop
lock
insb
cwtl
xchg
jle
push
push
ficomps
mov
mov
mov
shrl
xlat
xchg
jne
pop
add
daa
shl
int3
outsb
shrb
roll
imul
sbb
jae
repnz
stc
push
rorb
mov
xorb
les
leave
sahf
fistps
pop
js
push
lock
popa
mov
pop
je
movsb
adc
lcall
loop
repz
add
push
outsl
xchg
enter
mov
flds
arpl
inc
insl
mov
lock
or
lcall
rcrb
push
scas
rcr
dec
hlt
sub
popf
lea
pop
decb
jo
sub
pop
enter
in
test
xor
and
push
jmp
repz
dec
sbbb
hlt
push
mov
mov
lea
jns
stos
test
mov
jecxz
in
xchg
gs
repnz
lret
sub
lods
shll
pop
lahf
pop
cltd
pop
sti
cmpsb
repnz
repz
aas
push
int3
repnz
rcll
aaa
sub
and
sbb
jge
sti
cld
cld
stc
stc
dec
lods
push
jmp
rorl
xor
sahf
stos
ja
mov
pop
mov
fwait
mov
push
push
inc
jns
js
xchg
pusha
sub
add
xchg
scas
xor
gs
sahf
mov
popf
lods
and
inc
pop
ja
fildll
inc
mov
test
aaa
xchg
mov
inc
mov
outsb
fs
dec
imul
test
cmp
mov
pop
lahf
xor
mov
mov
push
inc
dec
pop
das
adc
cwtl
sub
cmp
icebp
cltd
sbb
lea
in
xchg
sbb
shl
lahf
ror
lea
movsl
ficoms
xor
mov
es
pop
inc
bound
adc
xchg
mov
ss
mov
jne
out
lock
enter
jl
rcr
sub
repnz
pop
sbb
mov
scas
pop
test
in
jno
mov
stc
cmc
push
icebp
das
or
lock
cmp
xchg
cmp
jg
sub
dec
push
movsb
dec
sbb
outsl
sahf
ret
or
xor
pushf
mov
cli
sub
fistpl
dec
incl
aaa
cmp
jmp
out
orl
and
flds
inc
mov
mov
es
out
aad
fnstenv
sbb
loopne
and
xchg
cltd
adc
mov
icebp
repnz
scas
les
repnz
jg
outsb
movsl
aaa
add
mov
inc
cmp
mov
lcall
fidivrl
inc
xor
out
sarl
pop
and
sti
xchg
pusha
mov
insb
icebp
dec
sub
mov
pop
pop
inc
dec
push
pop
push
sub
jmp
jge
cmpsl
sbb
fcoml
loopne
sbbl
mov
add
sub
adc
ds
mov
shll
mov
push
mov
arpl
sbb
stos
adc
cmpsb
insb
inc
push
popf
insl
aam
pop
out
mov
or
add
test
and
lods
dec
in
ds
pop
jne
push
xchg
push
addl
into
out
movsl
sub
ljmp
add
or
test
adc
ja
pop
add
test
or
sahf
jno
and
stc
xchg
push
xor
mov
mov
pop
jb
pop
jle
fidivrl
or
mov
sub
std
sbb
pop
call
enter
cmpsl
fwait
xchg
inc
or
dec
mov
roll
jecxz
out
mov
inc
xchg
push
push
xor
pop
inc
cmpsb
mov
sbb
es
sarb
xor
xchg
inc
pushf
or
mov
dec
clc
sbb
outsl
xchg
jge
lcall
imull
repz
pop
mov
cltd
cmp
mov
push
cmpsl
ret
ds
jmp
sub
lods
cltd
jno
pop
mov
push
js
ss
in
insb
inc
pop
jno
cltd
sub
arpl
lret
add
fidivrl
or
cmpsl
sbb
xchg
and
and
arpl
and
pop
sub
jnp
in
push
xchg
inc
int3
fidivs
popa
pop
pop
rcrl
jle
mov
in
mov
lcall
je
mov
push
int
xor
pop
cwtl
hlt
imul
stc
jp
inc
repz
lds
insb
sub
fmuls
push
mov
in
jmp
xchg
fstpt
arpl
sub
sti
shlb
pop
jno
lea
pop
jmp
adc
movsl
xchg
adc
pushf
cmp
or
jb
push
mov
fists
adc
iret
push
repz
pop
enter
adc
and
arpl
orl
pushf
insb
pusha
mov
sbb
ja
lret
and
mov
lcall
ret
jo
mov
mov
outsl
ja
pop
in
sarb
mov
stos
ss
xor
ljmp
outsb
mov
add
cwtl
call
mov
fdivl
insl
subl
and
jmp
and
and
xchg
and
sub
xchg
mov
push
push
sub
stos
mov
mov
xchg
cli
mov
in
push
and
jp
shl
loopne
mov
or
mov
push
cmpsb
outsl
test
aaa
aaa
mov
sub
out
cwtl
std
mov
in
sub
cmp
clc
rorl
cld
pop
sub
push
sahf
repnz
loope
aam
xchg
dec
mov
jecxz
andb
xchg
or
incl
daa
mov
dec
gs
dec
push
enter
popa
iret
repnz
lods
add
pop
xor
xlat
xor
ja
mov
cltd
adc
icebp
push
popf
push
in
mov
dec
mov
inc
shlb
pop
mov
fmull
pusha
add
pop
andb
ret
sbb
fwait
and
rcll
jbe
push
mov
addb
clc
or
je
xor
pop
xchg
mov
icebp
dec
in
and
add
cwtl
xor
adc
jl
cmc
jb
mov
add
in
outsb
lods
sti
mov
fwait
in
sub
or
push
mov
add
xchg
arpl
int3
int3
mov
nop
clc
enter
imul
adc
in
push
mov
jmp
fs
xchg
cmp
dec
add
jo
and
sbb
mov
cmp
xchg
jns
mov
xchg
jecxz
aas
daa
adc
movsl
push
les
xlat
mov
mov
adc
mov
rorl
mov
cmpl
es
das
fiaddl
test
fistps
lahf
fsubl
inc
mov
loop
cmp
shrb
in
pop
mov
pop
addl
push
cmc
cmpsl
insb
and
jo
xor
mov
enter
sub
loope
loope
jae
lret
xor
ss
test
or
iret
xchg
jge
popa
dec
ficoms
jb
push
push
dec
lock
mov
mov
mov
xchg
bound
xchg
xchg
shll
or
add
mov
dec
fwait
push
push
mov
mov
movsb
aam
jecxz
cmp
out
xor
add
xchg
stos
mov
sbb
fld
pushf
adc
scas
push
mov
xorl
or
push
xchg
mov
mov
mov
ret
xor
js
cmpsw
pop
inc
subb
adc
push
pop
jbe
add
cmp
push
jae
push
gs
mov
xchg
cmp
setl
pop
xchg
pop
test
mov
test
fnop
movsb
fisubrs
imul
mov
imul
adc
xchg
mov
loopne
mov
or
xchg
push
pop
outsb
insl
sahf
popf
xchg
arpl
mov
push
pop
and
mov
lock
xor
and
pop
aaa
out
in
cmp
fiaddl
loop
ss
out
aas
scas
clc
mov
and
or
mov
jnp
scas
inc
cli
loop
mov
aas
decb
loopne
mov
bound
push
jbe
daa
adc
daa
hlt
ret
fs
pop
adc
add
or
ljmp
popa
repnz
push
jne
iret
inc
out
aam
sub
dec
add
mov
push
xor
mov
ret
xchg
test
xchg
stos
pop
jle
ret
pop
xor
mov
push
mov
xor
mov
cmpsb
mov
jns
outsl
and
inc
mov
jno
lret
pop
cmc
lods
mov
jmp
lcall
lods
jns
and
aas
inc
push
push
je
rcrl
subl
fcomps
jae
fucomi
ss
icebp
ja
out
xchg
out
gs
and
mov
lea
outsb
xchg
pop
aaa
push
add
jecxz
ss
cmp
mov
pop
dec
xchg
push
jae
cmp
pop
out
neg
xchg
mov
jmp
push
mov
push
sub
push
sub
mov
mov
sbb
mov
push
jmp
xchg
xchg
pop
xor
mov
add
cli
out
test
add
mov
and
xchg
sbb
shlb
in
mov
loope
add
dec
jmp
inc
das
ret
dec
adc
ficompl
les
push
mov
push
xor
mov
movsl
dec
xor
pop
test
iret
dec
mov
cmp
dec
fimuls
xor
and
push
push
je
rorl
insl
and
out
sub
enter
nop
mov
inc
fcomps
call
xchg
subb
ret
insl
xor
repz
shrb
hlt
dec
mov
std
adc
stc
add
xchg
cmc
push
and
xorb
lret
ss
sbb
sbb
popf
add
add
lret
daa
inc
rolb
push
sub
test
movsb
add
jge
adc
ret
mov
xchg
mov
sti
fwait
enter
jbe
push
lcall
arpl
sbb
pop
aam
pushf
xchg
dec
cmpsb
jle
mov
sub
mov
mov
fnsave
insb
sub
imul
addr16
adc
jne
icebp
mov
lods
dec
mov
cmp
loop
cltd
mov
mov
mov
jo
and
pop
ljmp
cld
adc
arpl
sub
inc
nop
mov
lea
and
sub
dec
rclb
arpl
pusha
lret
inc
je
sbb
inc
clc
mov
sub
aam
fdivp
outsb
mov
imul
test
mov
jg
mov
cld
pop
inc
mov
mov
push
data16
jmp
mov
les
cmp
fs
mov
aas
cmp
mov
push
adc
dec
mov
mov
arpl
and
cmovge
xchg
add
scas
movsb
push
repz
stos
or
push
das
cld
pushf
adc
inc
idiv
jp
sarb
icebp
cmp
xor
stos
push
in
or
rorb
daa
xor
inc
in
stos
mov
mov
sbb
jne
xchg
inc
icebp
insb
xor
jle
adc
jbe
mov
push
movsl
xchg
into
test
scas
cmpsb
xor
adc
cmpsb
loopew
mov
stos
push
loop
test
add
shrb
pusha
sbb
adc
cmp
scas
insb
movsl
addb
test
test
lods
lods
cmp
and
jo
dec
push
dec
inc
shl
jae
pushf
push
arpl
sbb
push
jge
dec
inc
cmp
hlt
mov
or
pop
nop
and
xchg
add
xor
std
test
je
xor
mov
fidivs
je
cli
jg
lds
mov
ret
cwtl
push
out
push
enter
mov
sbb
arpl
jae
or
mov
daa
sahf
or
insb
jmp
inc
sarl
add
or
pop
ja
ss
clc
rol
pop
mov
addr16
dec
shll
and
popf
or
push
lea
je
loopne
loopne
popf
aas
pop
push
and
dec
nop
sub
push
add
mov
xchg
js
rcrl
sub
icebp
xchg
ss
xchg
fldcw
push
jnp
mov
shlb
test
sub
mov
cmp
fs
push
lret
repz
adc
mov
jmp
push
jno
xlat
je
int
dec
and
in
xchg
pop
mov
jge
in
pop
mov
psllw
loopne
cmp
ljmp
outsb
xor
jno
jl
movd
sbbl
ds
stos
out
push
push
sub
ss
scas
dec
mov
xchg
sub
mov
psubusw
mulb
push
notb
sbb
rclb
or
mov
mov
aaa
pop
adc
cmp
cli
lods
sar
cld
repnz
inc
test
dec
push
add
popa
xor
in
popa
fcoml
pop
dec
movsl
repz
lds
mov
pop
clc
enter
inc
add
or
inc
inc
lds
inc
iret
xchg
jg
push
sti
popa
dec
popf
cmp
test
inc
adc
leave
call
cld
cwtl
nop
push
add
js
sub
pop
mov
frstor
sub
jmp
pop
mov
xchg
pop
jbe
dec
cmp
adc
dec
and
ret
jo
cli
dec
rclb
add
bound
mov
cmp
push
test
lods
enter
or
fistpl
push
add
cmp
lods
push
addr16
insl
mov
aas
mov
mov
or
arpl
lahf
dec
out
cmpsb
adc
les
bound
or
cli
sbb
adcb
test
and
hlt
mov
mov
lods
cltd
xchg
shlb
insb
cmp
pop
loop
adc
int3
xchg
jmp
xor
call
lret
cmp
imul
pop
push
clc
stos
and
mov
jne
pop
lock
sbb
out
cmpsb
sbb
mov
jl
mov
lds
out
movb
mov
cmpsb
add
pshufw
pop
pop
int
test
stos
jns
ja
mov
stc
int
ljmp
in
cld
pop
out
xor
jno
int
testl
push
mov
jns
adc
pop
inc
sti
push
and
shl
inc
packuswb
movsl
nop
ret
in
fs
adc
dec
push
mov
cmp
pop
cwtl
xor
ss
cmp
inc
popa
dec
dec
push
in
in
cwtl
sub
imul
pop
sbb
mov
push
arpl
and
sbb
out
inc
xor
sub
xor
jbe
jecxz
cmp
ds
push
loope
movsb
sbbb
pop
add
and
mov
adc
or
adc
jnp
mov
sub
mov
inc
out
jg
push
cli
es
mov
adc
bound
dec
and
pop
lock
orl
or
iret
repnz
out
idivb
pop
fsubrs
inc
sub
jp
mov
mov
out
int3
add
push
mov
outsl
bound
aad
jge
cmp
es
push
and
push
pop
push
pop
or
mov
mov
loopne
lret
rorl
xchg
lods
cmp
cmpsl
popa
fs
xchg
fwait
cltd
jecxz
and
mov
mov
xchg
dec
out
lea
jg
xchg
or
leave
cmp
push
insl
adc
jl
test
clc
popf
pushf
ja
rorb
push
fimull
and
into
jne
mov
mov
cmp
push
inc
jbe
xchg
addr16
movsb
push
xor
sbb
dec
out
fcomi
dec
cmp
push
fdivr
pushf
push
mov
ja
std
mov
fistl
jle
add
cmp
orb
mov
add
aaa
jnp
and
or
cmc
movsl
lds
gs
inc
mov
jo
dec
movsl
fstpt
and
push
jl
test
sbb
xchg
in
xor
repz
loope
int3
cmpsb
jg
pop
fs
daa
scas
mov
aam
pop
ret
hlt
lock
decl
movb
and
test
lock
mov
popf
flds
adc
xchg
add
sbb
add
push
into
or
aas
insl
js
aam
imul
addr16
outsb
out
addr16
push
xchg
fsubs
sahf
cmpsl
out
jns
jge
lock
jp
jo
xchg
lcall
xchg
sbb
push
inc
mov
std
jnp
les
push
push
das
push
cmp
jne
scas
repz
loope
movsl
jp
mov
fimuls
mov
pusha
dec
adc
adc
mov
xchg
fs
mov
es
aas
loope
dec
fs
jo
nop
xchg
aas
hlt
dec
xchg
shlb
movsl
fisttps
in
or
sub
and
push
xor
inc
movsl
fbld
ret
or
mov
sub
add
stos
nop
push
inc
loop
jnp
test
les
jb
gs
or
or
cli
out
or
xor
lock
mov
inc
scas
repz
sti
int
notb
enterw
shlb
dec
xchg
dec
int3
sahf
hlt
add
xlat
add
insl
jecxz
xlat
push
xlat
dec
pop
sbb
pop
scas
test
int3
fstpl
lock
ljmp
sub
loop
pop
int3
dec
addr16
jge
mov
insl
mov
daa
shll
popf
cmp
out
sbb
imul
lods
add
push
test
and
mov
sbb
notb
lret
pop
sti
inc
or
and
shlb
sbb
pop
pop
mov
imul
sti
mov
mov
push
lds
sub
scas
in
mov
mov
lcall
sahf
pop
mov
inc
inc
mov
mov
push
fptan
push
cmp
xlat
pop
loope
mulb
jns
xchg
call
mov
jo
iret
repz
cwtl
shl
push
jo
je
dec
pushf
repnz
iret
add
pushf
outsl
xchg
ret
push
adc
cmpsl
xlat
add
pop
arpl
pop
daa
pushf
imul
jle
or
imul
push
push
outsb
add
cmp
in
int3
ret
lock
inc
sub
test
cmc
dec
std
dec
xor
sahf
lahf
jle
adc
mov
je
jo
xlat
orl
leave
inc
adc
cmc
cmp
push
cwtl
sub
add
shrd
cmpsb
or
xlat
xchg
jo
std
or
mov
lcall
push
sbb
cld
sub
sub
cmp
pop
sub
mov
or
mul
popf
or
adc
or
insb
jg
mov
mov
test
xor
push
inc
sbb
jp
dec
in
dec
push
pop
ss
mov
mov
aaa
dec
and
add
sbb
ja
ss
shlb
push
add
jl
test
lock
push
das
pop
fstps
movd
stos
adc
rcrl
xchg
mov
add
out
mov
test
mov
outsb
shlb
aaa
rcrl
inc
popa
ds
mov
ss
inc
sbb
push
cmp
push
in
gs
push
mov
inc
cli
int
loope
repnz
mov
out
sarl
clc
xchg
cmove
aas
and
mov
push
push
xor
dec
cmpsl
pushf
sbb
cmp
adc
jg
mov
push
lods
xor
mov
fistl
push
xor
xor
push
shrl
push
dec
mov
pushf
idivb
iret
in
cwtl
adc
pop
rcr
xchg
sub
loop
sub
add
jne
sbb
xchg
mov
pop
add
dec
or
xor
push
inc
push
cli
iret
pop
scas
push
sub
pusha
mov
subb
out
push
popa
adc
lea
and
xor
mov
push
adc
stos
dec
mov
dec
push
int
add
rol
xor
mov
or
pop
repz
jecxz
arpl
dec
inc
cld
dec
mov
jo
call
aas
stos
lods
in
in
xor
inc
push
aad
orb
jl
adc
ljmp
jle
inc
shrl
cmp
and
call
stos
mov
push
inc
inc
cmp
out
adc
je
sub
adc
fsubr
cmpsl
insl
loop
test
mov
cld
inc
push
mov
dec
sbb
jno
dec
ds
into
call
jno
rolb
jge
leave
pop
add
dec
or
rol
scas
push
movsb
push
add
stc
testb
or
fsts
and
mov
stos
dec
adc
out
inc
aam
jecxz
pop
jnp
xchg
lea
mov
sbb
fisttpl
stc
cmp
jb
sbbl
mov
out
je
mov
sbb
jnp
pop
sub
into
mov
icebp
lret
filds
adc
sub
fcomps
fildl
notl
jle
xor
fldt
xor
bound
xchg
cmp
jle
in
js
lcall
mov
fidivs
mov
in
in
loop
xchg
push
push
pop
fmull
das
inc
adc
xchg
pop
push
jns
fisttps
daa
mov
scas
data16
push
dec
out
aad
xor
lods
dec
sub
mov
push
mov
and
mov
andl
je
lcall
push
dec
sub
int
or
xchg
mov
and
jns
imul
inc
dec
shll
popf
push
test
dec
lret
outsb
js
jecxz
dec
mov
cmpb
lea
push
dec
fs
adc
jnp
push
shll
inc
cmp
adcl
decb
push
clc
sub
test
dec
add
aad
iret
movsb
mov
fstpl
or
sbb
jmp
imul
cmp
es
call
xchg
push
sub
rcll
loop
pop
stos
les
jnp
int3
lods
mov
mov
repz
adc
loope
movsb
aas
mov
popa
mov
jnp
imul
in
or
add
fildll
filds
incl
xchg
xor
jp
pushl
movsl
popf
or
add
enter
mov
mov
test
lods
dec
inc
inc
insb
hlt
dec
mov
push
push
xor
mov
cs
fldenv
sahf
or
lds
lret
or
cmpb
adc
idivb
in
aad
dec
and
movb
inc
stc
xor
add
scas
cmp
jns
dec
inc
xor
mov
inc
jle
cmp
mov
outsb
sti
nop
and
leave
clc
int
xor
test
stos
insb
xchg
or
ds
movsb
movsl
push
push
lcall
popf
pop
jb
lods
int3
and
in
pop
insb
sbb
pop
push
jecxz
mov
outsl
testb
xlat
push
add
cld
jns
fnstenv
imul
dec
ja
or
push
into
movsl
gs
stc
xor
into
aas
xchg
mov
add
movsl
frstor
lea
adc
or
ss
xor
ja
test
pop
add
and
and
stos
push
repnz
jno
push
push
fimuls
pop
imul
mov
in
jmp
sbb
dec
xor
dec
lock
push
add
sub
jb
lods
mov
fcomps
jb
out
add
pusha
arpl
or
das
cmc
mov
adc
and
sti
mov
les
jge
orb
repnz
and
adc
je
out
lret
jo
jle
test
or
imulb
in
mov
cmp
mov
mov
lods
xchg
inc
inc
aad
xor
int3
mov
mov
inc
sahf
pop
pop
cmp
pop
xchg
rcrb
dec
mov
dec
mov
jecxz
adc
xchg
ret
sahf
andl
xor
js
inc
add
out
pusha
push
push
pop
jo
pop
pop
jle
nop
add
pop
push
xchg
mov
lds
or
nop
mov
push
xchg
je
adc
push
mov
ljmp
in
and
andb
inc
cmp
lcall
push
add
adc
into
int3
adc
sbb
mov
push
out
data16
lods
and
into
les
or
xchg
jne
in
ds
sbb
ss
outsb
mov
outsb
jbe
xor
pop
mov
xchg
outsb
movsl
adc
hlt
fs
mov
add
js
xchg
ret
idivb
and
inc
es
fwait
out
sub
pop
cmp
mov
mov
and
jns
sahf
pop
pop
cmp
enter
ja
mov
mov
sti
mov
nop
lds
test
popl
push
insb
add
ds
push
mov
and
mov
mov
add
xor
popf
imul
fmuls
jle
fists
ret
outsb
and
xchg
ja
sub
push
bound
notl
test
aaa
xlat
mov
loop
sbb
push
clc
adc
and
fisttps
repz
cs
dec
fs
sti
sub
mov
es
fs
hlt
jmp
dec
jp
xor
cmp
pop
mov
std
mov
mov
js
mov
sbb
clc
orb
loop
daa
push
iret
jle
rcl
cmpsb
xchg
rcll
rclb
xor
jmp
fistps
popa
pop
cs
dec
scas
mov
pop
ror
xchg
mov
int
das
xor
adc
icebp
inc
js
and
js
mov
std
mov
pusha
cwtl
aas
dec
jno
aas
out
xchg
stc
call
gs
ficomps
jae
imul
sahf
cmp
dec
movsb
xlat
mov
stos
xchg
mov
scas
mov
inc
or
dec
leave
mov
cmp
loop
adc
fimuls
arpl
movsb
movsl
rorb
mov
movsl
mov
sub
xchg
dec
xchg
aad
lahf
and
std
arpl
repz
repz
bound
int3
inc
movsb
fdivl
xor
xor
adc
hlt
jbe
push
xchg
sbb
pop
dec
das
push
stos
dec
imul
add
fs
orl
dec
or
jg
arpl
xchg
out
xchg
mov
je
cmp
das
lcall
mov
mov
loop
in
gs
cltd
aas
mov
pop
imul
and
mov
lods
movsl
sbb
pop
adc
int3
mov
jns
pop
inc
add
xor
mov
or
stos
faddl
adc
add
or
push
roll
sarb
jo
decl
xchg
mov
pushf
jae
mov
rcrb
call
inc
push
cmc
cmp
shlb
or
dec
sbbb
insl
ret
subps
repz
jecxz
std
fisubrl
pop
inc
cwtl
push
lret
js
jmp
imul
adc
dec
popa
mov
sbbb
adcb
test
out
adc
pop
add
lret
addr16
call
nop
sahf
lock
push
popf
xchg
pop
add
shrl
lods
stos
scas
xorl
cmpsl
sub
xchg
cmp
rorl
pop
sbb
mov
mov
in
or
sub
add
out
mov
ret
jle
push
testl
push
jge
adc
lret
push
lods
xchg
mov
cmc
mov
cwtl
xor
xchg
insb
out
jo
aas
inc
push
fdivr
sub
jb
outsb
out
ja
sub
push
adc
mov
loop,pt
xchg
mov
sbb
jp
je
int3
iret
adc
push
sub
mov
add
jmp
sarl
lods
jmp
and
add
jno
push
es
imul
inc
int3
sbb
imul
sub
sldt
push
and
mov
mov
sti
jns
ja
mov
bound
in
cs
aad
fldpi
cmpsb
mov
dec
sub
mov
push
stc
fstp
sbb
xchg
xlat
or
push
pop
rcll
ds
lcall
sub
ja
pop
imul
cltd
in
sbb
pusha
fisubl
cmp
add
cld
in
mulb
mov
std
shll
push
stc
mov
adc
repnz
jb
pop
adc
out
cmc
sahf
or
imull
xor
xchg
pushf
sub
lahf
mov
adc
call
sbb
cwtl
dec
cwtl
mov
mov
and
arpl
push
clc
les
xlat
pop
dec
jle
mov
nop
mov
xor
hlt
pusha
push
insl
push
and
jge
mov
and
sbb
cmp
test
cmc
inc
notl
adc
and
cld
mul
jo
mov
pusha
mull
enter
movsl
cmp
popa
inc
mov
and
mov
cmpsb
sbb
adc
mov
mov
xchg
push
lahf
jne
add
aaa
popf
shr
outsb
add
fildl
xchg
or
cli
lock
testb
arpl
out
or
repnz
push
cmpsb
in
jo
subl
fidivs
or
cmp
sbb
stos
leave
cmp
adc
xchg
dec
pop
hlt
mov
test
fcomip
cmp
mov
shlb
sub
jge
testb
lcall
push
jg
jo
repnz
rcr
cmp
pop
stos
fs
xchg
push
test
popf
jmp
stc
sub
jmp
dec
rcll
sti
or
or
or
lret
in
cltd
jns
pop
sbb
dec
jmp
aad
fmul
push
sbb
das
js
push
jbe
inc
in
or
lcall
inc
nop
lock
mov
xchg
cmpsb
push
jg
mov
loop
and
movsl
loopne
xor
int3
aam
xor
mov
xor
std
pop
imul
dec
mov
jno
or
inc
xchg
pop
arpl
sub
jae
push
xor
lcall
cmc
mov
test
push
cmc
out
inc
or
lds
mov
shlb
mov
out
and
lods
xor
fcmovb
mov
dec
push
cwtl
dec
aad
sti
adc
inc
leave
cli
xchg
add
dec
mov
mov
popa
cmpsl
xor
pop
rcll
sti
das
int
mov
inc
std
mov
popf
cltd
sub
pop
shrb
and
inc
popa
sub
push
out
mov
push
sbb
stos
std
out
mov
mov
sbb
add
clc
jo
cmp
sar
or
ds
sub
push
gs
mov
ret
scas
add
fadds
mov
dec
int3
stc
fists
xlat
shll
mov
xchg
xor
negb
ljmp
push
movsl
mov
xchg
pop
rclb
pop
or
jecxz
mov
sbb
mov
test
int
xchg
cmp
sbb
xchg
sub
mov
cs
aam
out
outsb
cmc
les
mov
lahf
out
push
mov
push
cwtl
push
inc
loope
lcall
or
stos
add
push
dec
sahf
inc
dec
mov
jbe
aam
dec
jbe
push
push
push
pop
out
xor
std
in
cmc
and
ficompl
rcll
and
cmp
in
or
addb
lret
insb
inc
hlt
pop
xchg
xlat
mov
pop
jecxz
mov
jmp
mov
gs
out
or
movsb
mov
wrmsr
cmp
and
mov
imull
test
add
xchg
mov
scas
mov
daa
icebp
jne
stos
test
jb
jle
dec
sub
sbb
fdivrp
loopne
mov
or
push
xchg
jns
popf
push
pop
stc
xor
scas
mov
adc
add
into
dec
out
jp
shrb
dec
cli
inc
xor
das
xlat
or
mov
rcrb
repz
xchg
and
mov
mov
mov
push
popf
adc
aaa
addr16
fistps
data16
pop
adc
pop
insl
pop
outsb
pushf
dec
ljmp
adc
lods
or
inc
data16
push
mov
dec
hlt
rcrl
mov
adc
outsl
outsl
dec
or
add
jns
jae
xlat
jl
mov
dec
sbb
mov
ljmp
adc
test
dec
testl
push
xlat
dec
sbb
movsl
inc
ja
xor
in
push
loopne
dec
mov
ss
loopne
or
jbe
pop
mov
inc
arpl
sub
adc
add
mov
fwait
dec
int
push
scas
push
dec
push
je
int
mov
test
cmp
add
cmpl
and
inc
inc
mov
dec
jl
push
aas
inc
xchg
les
mov
movhps
push
jge
daa
ja
addr16
mov
mov
xor
mov
sbb
shlb
xlat
adc
fs
mov
push
repz
pop
int
sbb
push
int
push
dec
movsb
inc
push
out
mov
aad
test
gs
add
cmp
jmp
mov
mov
add
sub
xchg
pop
ja
push
dec
fisubs
ja
jbe
jb
pop
iret
push
into
inc
and
in
lock
adc
dec
inc
cmpsb
inc
lds
inc
mov
mov
jo
sarl
inc
ret
jbe
repnz
jb
testb
mov
imul
sbb
pop
mov
repz
jle
push
data16
cli
sub
adc
xchg
xor
mov
push
sar
outsb
mov
subb
inc
ret
and
cmpb
repnz
xchg
into
or
sub
jecxz
aad
sbb
scas
shl
jns
subb
inc
pop
les
testb
stos
lahf
je
add
mov
jmp
out
fwait
inc
dec
popa
mov
jg
rcrl
cmp
or
stos
aad
add
and
sbb
and
fs
mov
sarl
jecxz
es
stc
sti
push
cmc
ror
push
sbb
cld
repz
mov
sub
jbe
xchg
mov
cmp
lcall
sbb
fdivrl
cmpsb
cltd
xchg
repnz
inc
push
xor
test
rolb
push
pushf
andl
fsubrs
xchg
sub
cwtl
or
iret
imul
js
sub
in
xchg
jmp
and
pop
dec
out
aam
loopne
nop
dec
jo
and
cmp
pop
insb
insb
pop
cmpsb
imul
inc
mov
jecxz
xchg
jecxz
add
sbb
mov
pop
icebp
notl
xchg
pop
dec
insl
xchg
and
shr
dec
pusha
mov
push
mov
mov
fst
sbb
sub
in
lahf
sti
lcall
or
or
enter
pop
rcr
cmp
cmp
call
test
cmp
sbb
ret
lds
dec
xchg
dec
cld
or
fcmovb
mov
xchg
pop
cli
xchg
sbb
mov
lret
rcrb
divb
icebp
hlt
aaa
add
mov
fwait
and
mov
cmp
pop
insl
mov
out
add
and
outsl
dec
mov
mov
and
stos
popl
es
jg
and
out
in
xchg
loopne
mov
mov
pop
fcompl
ret
sbb
sbb
loop
icebp
inc
std
fs
and
push
shr
js,pt
into
and
pop
dec
push
mov
xor
cmp
cwtl
testl
mov
adc
inc
aad
add
aad
mov
lret
sbb
enter
loope
or
fadd
mov
aas
mov
addl
sub
sbb
fmull
adc
xchg
pop
push
mov
shll
xor
cmpsl
lods
shr
adc
fbstp
fcomps
sbb
sub
mov
inc
out
aad
push
mov
hlt
add
popf
rclb
lds
dec
aas
mov
incb
dec
jmp
or
xor
add
sahf
maxps
xchg
lea
rolb
pusha
pushf
loopne
leavew
pop
jae
nop
loop
xchg
aad
pop
pop
cmp
push
fs
aaa
mov
cli
mov
int3
sbb
cwtl
sbb
aam
add
push
xchg
push
cmp
rcrl
ljmp
fcoml
adcl
pop
movsb
mov
add
xchg
mov
mov
gs
lods
jge
mov
xchg
mov
and
mov
test
dec
sbbl
jecxz
add
les
pop
jbe
inc
lock
dec
mov
bound
xchg
cwtl
mov
lods
add
mov
popa
and
mov
add
pop
mov
or
call
adc
jmp
sahf
mov
sbb
adc
lock
xchg
jle
sub
out
pop
cltd
jmp
sarl
mov
xchg
mov
fildl
in
lcall
mov
in
adc
notb
ret
ja
lds
mov
daa
xor
mov
mov
push
push
lea
cli
fldt
and
in
xchg
addr16
xchg
push
pop
mov
xor
sbb
dec
dec
pop
mov
aas
pop
fmul
lods
nop
sbb
push
jnp
xor
ret
ja,pt
jno
ret
cmp
fists
inc
loope
inc
or
and
cmp
gs
in
out
fs
xchg
mov
jl
stos
insl
jg
push
fidivrs
xchg
push
daa
lcall
sub
cmp
lea
popa
dec
lods
test
enter
mov
test
xor
and
or
mov
je
movd
add
aam
or
fidivl
je
push
push
fsubrp
into
popa
call
test
sbb
cmpsb
dec
es
sahf
xchg
filds
fcoml
rorb
out
push
inc
icebp
popf
jl
stc
xchg
push
lcall
pop
in
pop
pop
mov
rcl
in
cld
orl
and
out
push
in
inc
ret
xor
popf
mov
jecxz
nop
xchg
lahf
shr
fists
loope
xor
push
inc
lods
jnp
shll
test
adc
sbb
adc
sahf
or
in
and
insl
cmp
dec
pop
popa
dec
mov
adc
popf
sbb
dec
out
sti
popa
and
je
rol
lahf
mov
and
mov
popf
fwait
push
sbb
jb
lret
cld
push
add
xor
mov
cmp
out
jmp
out
xchg
ror
cwtl
jbe
ret
fs
inc
mov
pushf
scas
xchg
mov
popa
arpl
je
lret
call
inc
sbb
mov
inc
xor
push
aas
pusha
je
pop
in
adc
pop
sbb
lds
fcomp
xor
dec
leave
push
mull
mov
dec
mov
pop
sti
push
jg
outsb
ja
fwait
scas
cltd
lss
test
mov
pop
push
sti
scas
xchg
sbb
mov
sub
add
and
xor
fimuls
aam
pop
cmpsl
xchg
and
idivb
adc
jnp
das
mov
das
int3
ret
incb
cld
insb
loope
das
push
adc
and
inc
jno
mov
loopne
idivl
movl
adc
push
andb
fisttpl
mov
sub
sbb
adc
aam
mov
pop
adc
nop
dec
and
mov
fwait
lds
jge
test
jb
pop
push
pop
sarl
add
xchg
push
push
lret
in
push
xor
sbb
leave
ja
out
out
xlat
rcrl
pop
ret
pop
pop
or
popa
and
or
mov
mov
fcompl
mov
cwtl
push
xor
cmp
icebp
dec
mov
leave
stos
jbe
jno
inc
or
ja
pop
sbb
xor
inc
or
rcl
aaa
pushf
sahf
leave
sbb
dec
lods
ljmp
lock
mov
and
outsb
mov
movsl
adc
inc
xor
lret
adc
jno
push
es
xchg
in
push
loop
xchg
stos
jbe
and
xor
shlb
clc
out
bound
ret
mov
test
mov
add
mov
push
daa
push
lds
out
add
jl
mov
test
sub
les
adc
jo
lret
xor
mov
mov
lret
adc
add
add
mov
loop
jle
aad
xor
push
std
loop
add
lahf
cmp
pop
cwtl
mov
shlb
in
or
fisttpl
fnstsw
sub
or
inc
popa
insb
aam
jecxz
push
cmpsl
bound
mov
je
and
int
add
ss
repnz
mov
cmp
outsb
jmp
stc
ret
jp
pop
xor
mov
cmp
test
push
mov
sbbl
inc
aaa
cmp
xor
dec
popa
mov
xlat
cmp
test
or
sbb
jge
int3
fiadds
les
fidivl
test
jle
pop
mov
icebp
out
in
mov
out
insb
or
xchg
lods
pushf
cmp
sbb
aad
aaa
or
inc
xchg
arpl
fs
cmpsb
mov
mov
jmp
or
cmp
movsb
repz
inc
cmp
bound
and
sahf
pop
nop
and
je
cld
movsl
cmp
movsb
push
shll
out
scas
lods
imul
sarb
push
lods
aam
hlt
std
cmp
mov
sub
xchg
into
add
xchg
adc
mov
fdivl
jno
sub
or
push
mov
jl
push
scas
pop
aas
xlat
dec
sbb
out
imul
jne
int
neg
shr
fnstsw
cs
add
pop
xchg
scas
into
popf
jecxz
inc
and
aam
dec
lret
jmp
xchg
aad
mov
clc
cmp
pushf
scas
bound
test
inc
lret
mov
lcall
hlt
clc
fwait
pop
das
iret
loop
roll
lds
stos
icebp
mov
lcall
in
out
pop
inc
sbb
xchg
cs
pop
pop
in
xlat
js
movsl
xor
in
out
jge
pop
dec
jbe
mov
repz
jae
or
xchg
sub
loopne
dec
nop
andb
fmuls
cmp
movsb
adc
xor
push
les
sbb
aas
xchg
ficoms
lods
mov
jge
iret
sbb
push
scas
or
inc
aas
jns
int
ret
popf
pop
cmp
push
in
in
add
stc
sbb
arpl
adc
ffreep
int3
pop
pop
loope
xchg
sbb
or
fdiv
in
sub
cli
and
add
or
xchg
push
mov
in
adc
mov
hlt
imul
and
sbb
xor
ret
lcall
xor
js
test
mov
fstpt
jge
iret
out
lods
addr16
xor
adc
cmpsb
jo
std
xchg
lods
jbe
push
and
xchg
insl
inc
ljmp
scas
or
imul
jae
cltd
cmp
add
loop
xchg
add
dec
cmp
ss
scas
xor
int
loop
mov
xor
adc
jne
scas
cli
fcom
test
xor
fdiv
xchg
pop
popf
mov
pushf
leave
lret
and
sbb
loope
push
std
and
xor
xchg
repnz
cmc
loop
mov
xchg
sub
in
mov
ror
repz
and
mov
cld
lret
mov
inc
jno
movsl
inc
notl
repnz
movl
cwtl
dec
es
jecxz
dec
inc
add
lret
movsb
dec
cmp
ja
and
dec
pop
stos
insl
movsl
outsl
mov
push
outsb
adc
cli
cmp
ja
mov
in
inc
lret
cld
cwtl
push
adc
push
ja
lods
inc
jp
lret
addl
pop
xor
mov
adcl
jae
xlat
sub
out
lret
mov
sub
add
or
sub
les
leave
lret
mov
out
jns
hlt
adc
flds
cmpsb
fldt
sub
in
mov
sbb
mov
ficompl
sub
test
jl
pop
xlat
decb
and
addr16
jbe
shll
sbb
mov
pop
pop
sbbl
in
rorl
jae
mov
mov
sbb
aam
lods
lret
mov
out
xlat
in
dec
or
lcall
add
inc
cli
mov
add
mov
inc
xchg
in
or
sub
sbb
cmc
loopne
ss
in
lcall
dec
popa
mov
add
cli
test
out
lods
xor
jecxz
bound
xlat
push
pop
xor
mov
clc
xchg
mov
lods
fsubrs
mov
in
or
inc
pop
iret
dec
mov
aaa
addr16
and
dec
pop
or
in
out
inc
jnp
aaa
inc
ret
xor
jae
mov
cli
popf
or
les
mov
sub
outsb
int
add
mov
inc
lahf
lock
scas
lods
pop
imul
ja
addr16
fsubs
in
stos
jl
mov
inc
jecxz
test
repz
out
xlat
sahf
ja
rclb
jno
cmp
in
test
pop
pop
xor
sbb
sbb
mov
pusha
sbb
sbbl
pop
mov
cmp
sti
ja
imul
fcompl
icebp
xchg
js
push
inc
js
push
mov
outsl
add
xor
adc
add
jae
loopne
adc
jge
pusha
ds
in
mov
ret
addb
int
addr16
mov
push
int3
mov
cmc
and
pop
inc
xchg
int3
xor
loope
mov
ret
mov
in
mov
movl
lds
inc
push
xor
push
test
add
inc
das
pop
xchg
in
int
xor
incl
test
push
adc
pop
inc
outsb
and
fdivs
incl
in
mov
cmp
adc
lahf
push
sahf
cmp
test
stos
push
push
jle
sbb
daa
fbstp
aad
ret
fsubs
rcl
mov
imul
ds
lcall
fsts
or
sub
lods
ret
mov
outsl
arpl
pop
filds
loopne
sub
xchg
add
mov
sahf
lret
and
mov
sbb
mov
lods
pop
outsl
sbb
xor
cmp
fmull
fadd
arpl
movsl
sub
inc
ds
dec
out
push
jmp
pop
mov
ljmp
mov
mul
xchg
insb
int3
sub
pop
mov
ja
cmpsb
inc
xchg
arpl
inc
loopne
addl
adc
and
dec
sbb
xor
jns
inc
adc
jb
pop
lods
xchg
mov
mov
and
negb
daa
push
add
push
in
push
stos
stos
pop
out
pop
push
xchg
sbb
add
ret
adc
fs
ret
lret
mov
lods
pop
pop
jle
insb
and
stos
dec
pop
and
cmp
fnstsw
andl
mov
cmpsb
cmp
test
and
shlb
mov
jp
jecxz
aas
outsl
mov
adc
or
lcall
mov
orl
dec
mov
movsb
adc
idivb
fists
inc
std
pop
test
bnd
ja
test
adc
sahf
dec
std
and
mov
dec
jp
xor
or
cmc
aaa
mov
sbb
inc
or
cmp
in
dec
ret
addb
inc
lret
aad
push
dec
test
cmp
mov
fisubs
stc
xor
xlat
ja
jl
add
cltd
popf
mov
js
mov
xor
xchg
sub
adc
pop
or
xchg
ja
inc
fdivs
int
pop
rcll
or
jg
js
xlat
xchg
xor
push
jecxz
sahf
cmc
mov
cmp
jle
mov
out
sbb
daa
xor
add
daa
imul
aam
jge
jno
es
fwait
je
leave
mov
mov
mov
adc
nop
pop
jg
xor
jo
and
andnps
in
add
aad
push
mov
xor
push
pop
popa
incb
pushf
cs
inc
popa
das
dec
or
cmpsb
scas
cmpsb
jmp
mov
aam
cwtl
iret
mov
mov
add
jo
mov
in
sub
adc
xor
scas
loop
jle
mov
fcmovu
add
push
sti
cs
add
cmp
lock
cld
seta
mov
sti
test
cmp
repnz
add
popa
rcrb
fwait
push
add
add
js
mov
mov
dec
mov
out
xchg
fwait
cmp
xchg
inc
out
pop
and
sti
and
pop
test
pop
xchg
xchg
ret
hlt
mov
mov
dec
lret
out
and
inc
sbb
or
mov
pop
mov
fdivs
xchg
xchg
ss
add
in
sbb
in
inc
loope
dec
dec
xor
fisubs
mulb
add
ds
ror
dec
lret
mov
or
jo
mov
rcrb
push
push
add
dec
push
jo
sub
pop
inc
flds
ds
cmpsl
les
outsb
and
mov
jbe
jecxz
lahf
pop
fmul
inc
out
inc
fcmovb
movsb
push
movsb
and
ds
mov
lcall
push
or
test
pop
mov
add
mov
repz
out
mov
out
int3
lret
sub
push
inc
imul
lcall
xor
repnz
fiaddl
cmp
cmp
fildl
dec
or
jo
les
xchg
inc
xchg
clc
fstpt
or
ds
out
push
ja
daa
popa
or
shll
sub
ficoml
repnz
xchg
jl
or
xchg
cmpsb
mov
push
lods
out
sbb
cmp
and
pop
add
xor
out
addl
push
xchg
test
aas
push
adc
stc
les
je
sti
and
xor
mov
xor
stc
insl
sbb
and
inc
lret
or
pushf
cmp
mov
out
lahf
test
jae
push
push
add
rcll
int
adcb
and
push
cmp
jnp
outsl
jge
sub
hlt
mov
add
jg
xchg
dec
test
out
popf
lds
enter
mov
pop
andl
push
mov
dec
or
fmulp
clc
cmp
fimull
out
adc
mov
aam
sbb
and
lret
imul
cmpsl
or
sbb
test
out
inc
insb
pop
les
std
dec
addr16
cmp
and
or
mov
shr
shll
testl
push
pop
mov
je
aad
mov
out
cld
and
gs
and
pop
and
dec
inc
lret
pushl
mov
int3
lcall
jg
jmp
mov
test
pop
xchg
cmp
nop
lcall
or
add
mov
bound
cmp
mov
jmp
icebp
movsb
inc
andl
jbe
lret
and
ljmp
or
cmpb
sbb
jge
jge
push
push
into
in
fs
sub
enter
mov
repnz
inc
ret
or
push
pop
mov
mov
push
in
xchg
fcmovnbe
jp
mov
movsl
cld
cmc
add
movb
cmp
movsb
addb
xchg
hlt
fnstsw
imul
pop
dec
pop
sbb
lcall
pop
mov
jl
lods
dec
lock
dec
pusha
or
fldt
cmpsl
cmp
mov
jg
sbb
jl
jl
shlb
addr16
mov
sub
fsubl
jne
add
push
jns
movsb
adc
negl
fisttpll
jo
stc
test
nop
xchg
in
aam
dec
lds
jmp
in
inc
push
xchg
pop
or
adc
into
push
movsl
adc
mov
mov
aad
aam
pop
inc
cmpsl
adc
and
jge
lods
push
ja
inc
arpl
sti
outsl
int3
xchg
add
add
mov
orl
sar
ficompl
pop
pop
in
mov
fs
addr16
icebp
or
sub
mulb
pop
ss
mov
gs
jne
push
pop
mov
xchg
outsb
aam
sbb
mov
jnp
test
xor
ror
repz
cmpsl
jne
jmp
mov
je
in
sub
jne
or
push
scas
popa
xchg
mov
cmc
xor
jge
insl
ja
or
mov
fiadds
int3
dec
dec
jns
icebp
loop
adc
dec
fisubs
xor
test
push
popf
mov
aam
add
pop
addr16
jb
mov
add
repz
push
adc
mov
shr
repz
push
in
jbe
sub
movsb
sbbb
stos
cwtl
jo
adc
mov
pusha
mov
gs
pop
insb
cmpsb
dec
and
cs
repz
jp
out
pop
mov
xchg
ljmp
ljmp
or
sub
add
sub
or
cld
dec
mov
jb,pt
push
js
sar
into
xchg
cltd
in
jne
add
js
inc
add
jns
sub
push
ja
xchg
mov
xor
mov
dec
mov
inc
adc
sbb
cmp
jne
pusha
in
jne
cld
mov
push
xchg
jge
dec
into
xchg
inc
jge
sub
add
add
ljmp
mov
ss
fistpll
fistps
scas
movlhps
jnp
popf
in
imul
mov
cmp
rclb
fwait
pusha
cmpsl
and
mov
ficomps
xor
mov
pusha
sbb
push
out
mov
pusha
jb
stos
push
out
test
test
imul
push
fdivs
or
outsl
mov
adc
icebp
mov
cmp
fwait
fwait
int
insl
and
cltd
inc
movsl
jge
sahf
pop
mov
adc
call
sahf
or
shl
daa
add
stc
jae
popf
push
stc
lea
int
mov
in
rorb
mov
adcb
nop
jne
imul
xchg
dec
and
add
or
pop
add
or
inc
lcall
out
roll
loopne
lret
imul
xchg
fistl
push
xor
mov
repnz
stc
add
inc
mov
scas
xchg
shlb
es
pop
sti
lock
mov
ja
sbb
and
aam
cs
cmp
icebp
or
adc
and
jge
dec
pop
movl
loope
ja
mov
shl
ds
sbbl
sti
and
push
adc
flds
cs
hlt
sti
enter
mov
lcall
icebp
in
faddl
mov
push
sti
jb
mov
add
test
fsubrp
sub
sahf
fs
dec
movsb
push
lods
idivb
int3
lret
cld
in
dec
js
mov
repnz
cmc
pop
or
loopne
sbb
out
pop
cld
or
mov
adc
std
pop
sub
jl
jo
jmp
std
enter
mov
js
test
mov
sbb
ss
fs
leave
sbb
outsl
inc
sub
mov
mov
cmc
adc
jo
mov
mov
xchg
push
or
loopne
scas
int3
push
mov
mov
push
in
js
mov
add
push
mov
jmp
inc
scas
sar
mov
fwait
bound
inc
mov
repz
push
shll
pop
out
adcb
pop
jp
mov
out
loop
mov
mov
test
ret
ja
jg
push
dec
jno
inc
cmp
mov
push
mov
stos
popf
add
mov
mov
es
or
inc
jg
push
jbe
fcom
xor
arpl
adc
push
xor
icebp
enter
mov
and
or
or
lahf
outsb
cmp
movhps
push
push
add
mov
cmp
dec
in
rorb
shl
repnz
sub
adc
xor
push
cmc
mov
mov
jecxz
ljmp
cwtl
push
movsl
sub
add
jecxz
push
aas
fxch
aas
movsl
aad
lret
xlat
dec
andnps
imul
int3
clc
cwtl
jo
or
sub
cmp
inc
and
lods
mov
and
sbb
pop
mov
lods
js
sub
xchg
jmp
dec
pusha
cmpsl
fyl2x
jo
and
inc
aaa
notl
inc
inc
pop
ds
orb
mov
icebp
dec
xor
out
paddw
mov
cmp
imul
fwait
mov
insl
rcrb
popf
xchg
movsb
mov
sbb
lods
inc
shll
mov
push
push
fisttpll
inc
mov
or
lret
repnz
dec
shr
std
cmp
jmp
decb
pop
mov
xchg
cwtl
cld
and
hlt
in
cmpsb
into
mov
lds
pop
mov
js
cmpsb
xor
outsl
lock
scas
xchg
jle
jmp
mov
xchg
push
add
or
sbb
xor
pop
mov
sbb
inc
es
push
mov
pop
and
jo
shll
aad
xchg
add
mov
ret
loopne
pop
add
outsl
loopne
xchg
jo
or
lock
xchg
iret
shll
pop
mov
cltd
sub
xor
fadds
push
add
pop
push
adc
adc
lods
cmpsl
insl
mov
xchg
cs
cld
xchg
push
fs
popf
rolb
push
xor
mov
stos
mov
hlt
jcxz
fs
fwait
insl
in
jbe
jmp
or
adc
mov
push
stos
loope
stos
mov
jg
xor
lcall
inc
sub
pop
cmpsl
test
push
popa
shl
int3
mov
or
mov
rcl
cmp
push
xchg
xchg
mov
push
ret
inc
jg
xchg
mov
sti
sub
adc
dec
or
aad
ljmp
sub
xor
in
mov
ret
fnstsw
test
or
cld
xlat
xchg
clc
in
outsb
xorl
icebp
xchg
cmp
sub
mov
mov
xchg
inc
mov
push
fwait
cmp
es
pop
movb
add
mov
ds
les
in
add
repnz
aad
sti
leave
sti
ret
jno
in
dec
test
add
daa
dec
add
mov
push
and
sbb
mov
int3
std
and
call
xchg
call
push
cmp
mov
addb
dec
add
cli
push
into
popf
fs
bound
xchg
scas
cmp
lods
jbe
mov
mov
push
push
sub
xorl
mov
xchg
xchg
dec
jbe
ret
xchg
dec
dec
cmpsl
xchg
mov
cwtl
cli
xchg
imul
and
push
add
dec
outsb
fildll
cmp
daa
pop
jl
pop
out
sbb
xchg
stos
lods
mov
sub
and
adc
pop
adc
pop
jl
cmp
inc
orl
jae
push
mov
or
mov
inc
sub
jo
lods
mov
mov
xchg
mov
data16
test
cmp
cs
mov
sub
mov
mov
xor
fisubrl
test
xor
and
out
sbb
cld
and
repnz
inc
adc
flds
jg
and
mov
pop
sub
aas
pop
cmpsb
add
push
lea
xchg
outsl
xchg
jb
mov
inc
adc
xchg
push
lods
or
and
out
inc
lcall
popf
mov
mov
jg
mov
mov
mov
mov
std
inc
icebp
jo
jo
jmp
in
adc
push
jnp
push
fisubl
jo
sbb
insb
test
ljmp
cwtl
imul
xor
or
aas
mov
loop
scas
ljmp
jmp
outsl
cmp
fs
or
mov
test
rcrl
icebp
pop
test
pop
stos
push
sbb
xchg
sbb
pop
mov
inc
and
cmp
pop
pop
clc
lret
hlt
push
xor
out
jno
cld
dec
ret
cmp
repz
push
sub
push
popa
lahf
orl
cmp
dec
adc
mov
lock
mov
push
push
mov
arpl
jge
stos
test
push
lods
inc
push
xor
push
popa
mov
imul
push
cmp
loope
in
iret
cmp
dec
ret
outsb
inc
push
dec
or
daa
sub
call
aaa
mov
sarl
lahf
sahf
dec
cmp
bound
mov
mulb
orb
mov
mov
add
cmp
adc
inc
xlat
imul
in
or
dec
cmp
adc
adc
and
mov
push
outsl
cmc
inc
sbb
test
add
ficomps
aas
xchg
push
cmpb
cmp
rcll
imul
jge
xchg
push
rcl
dec
shrb
pop
andl
cltd
test
and
inc
data16
dec
rcrl
les
loope
jle
jp
sbb
arpl
jbe
add
adc
and
adc
rcl
mov
dec
push
pop
rolb
mov
out
pop
and
scas
jmp
cltd
scas
cmc
inc
xor
shll
inc
scas
push
imul
fisttpl
test
inc
mov
gs
xor
push
mov
std
cmp
aas
jnp
cwtl
movsl
test
in
pusha
lods
add
cmpsl
push
adc
call
into
mov
orb
push
push
mov
mov
push
scas
ror
sub
repnz
and
add
decl
lock
sub
add
loope
sbb
inc
jne
lods
add
imul
lea
inc
jg
mov
mov
out
js
ret
roll
pop
adc
mov
mov
dec
int3
dec
or
pop
jg
lds
xor
xchg
bound
sbb
jg
sahf
cwtl
jl
mov
mov
pop
add
data16
ss
push
imul
ret
icebp
shr
jbe
jmp
subb
add
jmp
pop
inc
das
popf
sbb
cwtl
mov
test
add
test
cmp
mov
sub
add
mov
sbb
ficoms
or
in
inc
or
lea
mull
xor
mull
aam
lock
stos
mov
in
mov
mov
push
sbb
inc
jb
and
mov
dec
mov
pop
lods
testb
mov
mov
xchg
test
scas
pop
bound
mov
xor
mov
andl
imul
jp
in
aam
jbe
scas
xor
dec
jp
adc
or
dec
pop
outsb
cmovb
in
mov
cmp
fcmovnbe
sbb
push
cmc
xchg
mov
inc
repnz
mov
ret
jge
dec
mov
sub
cs
outsb
mov
shlb
mov
jb
cltd
sti
adc
dec
ss
sbb
lahf
dec
inc
and
sbb
popf
in
repnz
and
xor
scas
push
loope
xlat
fs
sbb
mov
pop
inc
add
mov
pop
sbb
iret
jnp
mov
dec
sub
cmp
inc
outsb
mov
ret
xor
pop
fnstsw
loopne
adc
in
mov
cmpsl
or
cmp
add
insl
cs
or
flds
mov
xchg
and
addr16
out
xchg
fdivr
jno
int
xor
sahf
mov
push
and
int
es
outsb
mov
scas
or
popf
push
xchg
add
mov
lret
hlt
sahf
subl
xor
cmp
dec
or
fcoml
push
inc
int
add
insl
fistl
dec
leave
or
mov
lock
out
push
pop
cs
test
sub
rcll
arpl
bound
jae
xor
leave
loop
adc
andl
movsl
call
jns
fidivl
aaa
mov
out
push
xor
jno
sbb
jmp
lods
pop
ret
scas
xchg
loopne
fdivl
pop
stc
xchg
add
out
dec
add
pop
test
inc
mov
sub
xlat
jb
and
sub
mov
mov
add
pusha
outsb
mov
adc
jo
mov
sahf
cli
nop
xlat
add
xchg
addb
shrl
add
lock
leave
push
dec
inc
inc
xchg
sub
add
inc
iret
cmp
outsb
pop
dec
fisubs
sti
or
mov
mov
je
sub
fsts
call
adc
sbb
in
cmpl
subb
icebp
inc
andb
and
out
jp
std
std
inc
and
jl
mov
stos
add
popf
mov
divl
cmp
lods
adc
lock
dec
imul
or
stos
jnp
fucomi
out
movsb
cmp
cmp
mov
in
fisubl
xchg
fidivl
push
mov
push
into
sahf
adc
nop
out
sbb
cld
scas
ret
dec
jmp
stos
mov
shlb
das
mov
push
mov
cs
or
mov
insb
rol
jmp
lcall
xor
push
stos
mov
cmp
jl
inc
mov
scas
mov
cmp
jno
push
mov
xor
xchg
aaa
loope
jne
lock
ljmp
add
push
add
imul
fnstsw
xchg
rorb
add
leave
pop
test
fdiv
jno
ss
jo
jne
mull
mov
stos
test
mov
ss
and
push
jbe
push
add
ss
pop
sahf
testb
pop
xchg
int3
cmpsl
push
push
jp
bound
xchg
sbb
stos
rcr
mov
xchg
adc
xor
fsubrs
bound
add
jmp
inc
out
xor
push
daa
jp
and
adc
dec
sub
xor
mov
ja
push
lahf
test
cli
inc
hlt
xchg
lret
ficoms
mov
fsubl
push
sbb
xor
aas
leavew
aaa
mov
notb
sbb
mov
push
dec
xchg
out
cmpsl
roll
in
mov
cmp
movsb
cmp
push
pop
aaa
mov
sbb
xchg
adcl
popf
pop
or
cltd
rol
mov
pushf
cmp
and
outsl
lahf
popf
and
sar
inc
aad
push
js
xor
lret
mov
test
sub
out
pop
xchg
lds
cmp
out
push
fadd
cmpsl
inc
or
mov
leave
inc
scas
push
push
imul
inc
sbb
fdivl
mov
loopne
jbe
push
movl
iret
popa
stos
lret
stos
xchg
xchg
jo
jecxz
sub
dec
xor
int
clc
xchg
mov
or
out
mov
cmpsb
and
bound
loope
jmp
xor
in
dec
movsb
in
scas
xchg
mov
pop
cmpsl
call
stos
mov
bound
inc
pop
fdiv
inc
fwait
adc
add
dec
incl
inc
adc
xchg
fwait
mov
in
outsl
jne
sbb
sbb
adc
pop
mov
or
jbe
xchg
or
fildl
cmc
mov
pop
or
dec
and
inc
mov
or
push
mov
imul
or
jnp
mov
push
mov
sti
repz
enter
int
out
scas
in
outsl
mov
out
mov
outsb
lahf
fs
and
adc
leave
cmp
cld
inc
or
lret
cmp
jl
cmp
adc
js
pusha
pop
jle
out
ret
mov
cs
sbb
pop
cli
xor
aaa
mov
leave
fstl
insb
mov
cwtl
push
arpl
push
adc
push
jp
daa
mov
js
push
mov
cli
loopne
lea
xchg
out
les
sbb
str
mov
rcll
lret
imul
stos
imul
dec
out
inc
lock
cmp
repnz
or
xorb
lcall
push
fsts
or
lds
mov
das
arpl
xor
dec
add
adc
inc
and
inc
adc
loope
daa
dec
dec
sti
nop
sbb
loopne
mov
jmp
fildl
imul
pop
sub
ljmp
ljmp
sahf
adcb
roll
pop
aaa
mov
sahf
nop
jle
mov
outsb
icebp
fimull
inc
xchg
mov
punpckhdq
and
push
push
adc
aas
push
cmc
adc
stos
xor
lea
xchg
or
aas
add
stc
loopne
ror
inc
scas
jmp
fidivrl
push
mov
int3
mov
adcb
cmp
adc
insb
pop
rol
movsl
xor
fsubrs
or
pop
push
inc
cltd
paddw
xchg
std
aam
mov
mov
adc
adc
inc
popf
fwait
mov
rcll
xor
faddl
dec
js
sbb
jns
adc
cmp
add
bound
mov
call
imul
cwtl
dec
stos
mov
mov
movsb
cmpsb
loop
addb
push
xchg
adc
push
adcb
pop
dec
lret
add
inc
es
adc
in
clc
nop
rolb
sbb
lods
movsl
mov
outsb
mov
sub
xor
test
mov
fldt
pop
jb
xchg
cmp
sub
push
adc
xor
sbb
fsubrl
subb
jl
inc
mov
and
cmp
jp
push
ja
cmc
cmpsb
jno
fidivl
popf
add
cmp
fs
fbstp
scas
push
xorb
mov
mov
or
cltd
lahf
push
xchg
push
rcrl
mov
adcl
mov
sahf
push
imul
rcrb
test
lods
lcall
mov
cmpsl
sbb
dec
movsl
outsb
cmpsl
ret
sbb
sub
sbb
add
and
adc
sbb
fwait
hlt
imul
rorl
daa
jl
ret
ss
aaa
mov
scas
mov
andb
in
popa
jecxz
ljmp
and
xor
dec
mov
push
out
jae
jno
jg
daa
or
int
sbb
mov
ret
cmp
lock
xchg
adc
sub
and
fs
fcmovnbe
imul
push
not
sbb
sub
pusha
push
mov
mov
push
and
es
gs
ret
js
adc
xlat
rclb
push
ss
xor
scas
hlt
lock
ljmp
push
stc
xchg
lds
and
cwtl
jnp
outsl
jbe
clc
cmpsb
and
or
fstl
sbb
aas
inc
jge
movsl
sbb
mov
pop
fisubrl
jle
je
mov
in
or
inc
popa
jb
cmp
test
jbe
ficoml
iret
and
stos
clc
stc
push
push
lret
xchg
push
nop
je
mov
inc
adc
std
cmc
push
sbb
fstps
push
pop
pop
fsubp
daa
rcll
js
or
cmp
call
lock
xchg
pop
cmp
mov
call
iret
mov
xor
pop
movsl
and
stc
jp
mov
fs
mov
mov
push
add
inc
in
out
dec
shll
cmp
lods
mull
imul
aas
mov
icebp
dec
xchg
in
out
xor
xchg
fidivrl
repnz
xchg
stc
mov
add
jecxz
lds
scas
and
pop
jnp
add
inc
or
mov
mov
ds
outsb
ljmp
or
arpl
lods
clc
ss
cmp
pop
jo
mov
pop
and
push
popa
xor
push
xchg
leave
leave
jbe
movsl
mov
and
add
mov
cltd
pop
pop
inc
enter
pop
fdivr
pop
cmp
cmp
lret
scas
inc
add
movsl
fcompl
jl
sbb
fnstcw
jge
and
icebp
hlt
lods
mov
int3
sbb
rol
inc
inc
jbe
pushf
mov
cli
sub
bound
mov
mov
jge
fiaddl
mov
jmp
lods
push
push
enter
mov
in
jnp
lahf
adc
out
mov
adc
push
jp
inc
fsubrs
sub
push
daa
push
ljmp
or
push
cmp
rcll
cwtl
insb
fcmovbe
add
fstpl
insl
sbb
jmp
inc
and
inc
js
inc
out
data16
add
or
outsl
stos
cmp
aaa
nop
sbb
arpl
sbb
out
cmp
shrl
lret
dec
pop
loop
xor
ror
xlat
mov
xor
idiv
or
mov
mov
stc
and
and
fwait
les
pop
int
sahf
jp
cld
ja
xor
fisubl
out
pop
scas
mov
in
add
lret
hlt
dec
pop
jg
jae
mov
cmp
xor
mov
in
add
ffreep
xor
loop
arpl
in
jge
mov
int
or
mov
mov
insb
push
outsb
xchg
mov
ret
std
xchg
adc
and
int
pop
sbb
jnp
jae
mov
mov
xor
add
pop
xor
sbb
cmp
repz
jl
mov
lds
cltd
leave
xorb
or
or
adcl
scas
pop
sbb
into
in
std
mov
cltd
push
mov
lods
cmp
lods
decl
fmul
fildll
out
scas
xchg
ja
lds
xor
out
loopne
sub
out
xchg
cmp
mov
cltd
test
dec
dec
xchg
pop
lods
mov
cld
and
lret
aaa
loope
mov
mov
pop
rcr
mov
fcoml
mov
call
dec
fisttpll
cwtl
flds
mov
fldenv
sbb
popa
xor
lcall
out
jb
pop
push
push
shl
inc
or
rcl
cmc
add
and
jg
enter
lock
jle
mov
fptan
repnz
sub
pop
jle,pt
cli
push
xor
xor
add
and
insb
or
inc
loope
stc
hlt
lret
mulb
ret
add
aam
aam
dec
xor
pinsrw
push
and
mov
jle
mov
ss
xchg
aaa
imul
out
faddl
in
jp
xchg
sbb
mov
adc
mov
mov
fisttpl
mov
and
mov
adc
out
xlat
rcrb
mov
icebp
lods
add
push
add
outsb
ja
fmulp
jl
jmp
stos
stc
and
or
xchg
fistps
pop
cwtl
les
cmp
mov
ficompl
pop
adc
les
test
dec
add
xchg
pop
lret
mov
adc
cmp
push
loop
ja
out
aaa
add
lea
push
in
neg
dec
jbe
sbb
ljmp
pop
int
mov
pop
in
ret
add
jg
aad
xchg
loopne
out
in
subl
jae
paddw
xchg
cli
test
inc
aam
or
sbb
std
xor
leave
fs
lea
in
mov
push
xor
mov
mov
adc
pop
in
or
pxor
out
shll
daa
add
nop
ds
jno
or
xchg
cmpsb
inc
pop
pop
jo
arpl
adc
xchg
xchg
fisttps
push
cmp
rcrl
dec
xor
in
dec
lods
adc
iret
iret
movsl
int
mov
mov
mov
movsb
adc
xor
rclb
xor
int
leave
dec
lret
push
mov
cmc
mov
sbb
adc
jb
mov
test
pop
jbe
dec
and
cmp
ljmp
xor
dec
add
lahf
ret
sub
sbb
and
scas
dec
scas
adc
aam
cmpsl
int
push
repnz
dec
adc
movsb
pop
mov
clc
in
iret
inc
xchg
mov
pop
fnsave
fcmovb
iret
sahf
push
or
ljmp
dec
dec
sbb
sub
push
mov
sub
mov
dec
pushf
or
test
test
outsl
int3
nop
imul
lcall
cs
mov
xchg
insb
sarb
pusha
div
and
inc
push
gs
cmc
add
loopne
push
xchg
stos
xchg
sti
in
sahf
stos
push
pop
mov
rolb
jg
mov
cli
adc
cltd
test
fadds
sarl
push
xchg
cmp
sub
scas
jb
dec
int
inc
test
fisubl
ja
xor
push
xor
fsubl
lods
mov
dec
mov
jl
inc
mov
stc
jp
pushf
ljmp
arpl
or
cld
adc
sarl
pop
shll
pop
dec
test
add
aaa
jmp
lret
mov
movsl
addr16
or
jb
lock
mov
icebp
inc
arpl
or
lahf
jnp
loop
jle
pushf
popa
mov
and
testl
mov
mov
adc
int3
cmp
jno
bound
xor
sub
leave
lods
decb
repnz
mov
pop
sub
and
bsf
pop
mov
aad
insl
cmpsb
je
push
jnp
stos
clc
lcall
jb
xchg
addr16
inc
dec
jp
pop
dec
jmp
out
daa
pop
and
shll
jnp
stc
pop
js
cmp
cmp
sti
ja
mov
adc
jmp
push
sbb
scas
fstl
cwtl
mov
mov
xchg
mov
xor
push
jae
or
fidivrl
pop
mov
std
pop
mov
fidivrl
mov
adc
stos
cmp
jno
addr16
iret
popf
idivl
stc
imul
jne
cld
jp
scas
sub
ljmp
adc
loope
into
push
adc
dec
push
xor
and
adc
js
dec
imul
jmp
jno
cmp
test
pop
mov
imul
cwtl
xor
hlt
fcmovnu
adc
xchg
shll
loop
cmc
imul
xchg
outsl
mov
jmp
repz
lock
sbb
mov
sti
sub
pushf
pop
mov
ds
movsl
emms
mov
xor
in
shrb
mov
xlat
imul
xchg
sbb
xchg
mov
fwait
pop
cmp
xor
or
jnp
es
mov
out
int
shlb
dec
fsincos
loop
mov
cltd
lds
mov
adc
sub
add
mov
inc
mov
ret
mov
jp
inc
push
fidivs
pushf
dec
add
cmpsb
pop
cmp
push
inc
jb
nop
dec
rorb
fwait
pop
fldcw
nop
fs
and
xor
sbb
icebp
or
loopne
mov
aad
outsb
cmc
mov
js
sahf
xchg
ret
shlb
or
dec
mov
out
inc
xor
mov
in
enter
cwtl
test
xchg
or
imul
das
mov
icebp
sbb
fists
pop
outsl
movsb
in
sub
push
pop
adc
pop
sbb
nop
pushf
out
cli
push
jno
jo
adc
imul
shlb
jmp
sbb
icebp
jmp
mov
mov
movsl
mov
mov
cmpsl
xor
and
mov
fisubs
xchg
ljmp
in
scas
sbb
inc
ret
jmp
jle
repnz
xchg
and
mov
mov
adc
jno
hlt
fwait
xchg
mov
pop
je
scas
mov
fcompl
pop
mov
repnz
enter
push
inc
push
and
xor
stos
mov
ja
xchg
mov
jp
pusha
pushf
popf
les
xor
int3
push
inc
int
mov
add
clc
xlat
cwtl
add
inc
repz
mov
xor
add
or
sahf
pop
sahf
sarl
aad
rcl
add
icebp
xchg
clc
push
add
adc
xor
loopne
cmp
xchg
outsl
mov
clc
hlt
clc
lcall
sbb
or
repnz
jns
roll
jg
nop
hlt
adc
mov
jns
sbb
fucomi
in
js
and
out
icebp
mov
pop
call
out
adc
or
and
out
xchg
cs
repnz
lods
dec
mov
int
imul
popa
rcll
mov
repz
jg
pop
cmp
out
jecxz
es
add
insl
ds
and
pusha
test
cmpsl
sbb
dec
fnstenv
mov
xor
xchg
push
fisttps
insb
cld
ljmp
adc
test
fs
mov
xchg
or
flds
jns
daa
push
fcmovne
push
mov
adc
daa
xor
mov
pop
rcl
inc
call
mov
push
mov
dec
icebp
jne
mov
jl
rclb
mov
lret
jmp
cmp
nop
test
push
push
shll
in
jo
mov
outsb
inc
add
inc
ljmpw
cmp
jno
dec
int
hlt
mov
xchg
bound
adc
aad
jge
fdivrs
add
mov
and
mov
push
jne
sbb
dec
fcoms
mov
adcl
lahf
mov
test
insl
adc
fnsave
adc
stos
orb
jle
mov
inc
xchg
ja
pop
mov
xor
stos
repz
orl
scas
pop
mov
add
dec
add
imul
cmpsl
das
sar
jle
stos
gs
outsl
addr16
in
fsubp
idivl
jo
sbb
cmp
mov
mov
mov
enter
lods
incl
sbb
in
mov
rclb
lds
insl
mov
out
pop
out
mov
sbb
imul
repnz
mov
inc
cmp
scas
cld
sbb
adc
sbb
imul
lods
sarl
push
pop
jl
pop
sub
mov
rcrl
adc
fldt
mov
xor
mov
push
test
mov
rcr
lret
dec
pop
mov
dec
xchg
in
mov
sbb
jo
jp
xor
sub
inc
dec
push
cmp
mov
sbb
pop
loope
jno
or
cmpb
xor
mov
das
repz
pop
je
push
cmpsb
pop
jmp
mov
add
lcall
cld
dec
out
mov
cvttps2pi
mov
fcompl
lcall
xor
aad
inc
xor
shll
lcall
sub
out
jge
jecxz
aas
cmp
add
mov
xchg
push
outsb
xchg
push
jl
mov
jecxz
mov
insl
repz
and
xlat
pop
out
dec
xor
icebp
dec
xor
push
adc
mov
sbb
int
pop
xor
adc
aas
dec
pop
in
cmc
out
imul
movsb
pop
mov
cltd
cmp
cmp
or
cmpsl
sub
loop
cld
push
sarl
pop
test
call
dec
sbb
lret
xchg
jle
sahf
movsb
xchg
inc
pop
mov
aam
aaa
mov
push
adc
lret
jmp
or
shlb
sbb
dec
dec
stc
js
pusha
or
mov
bound
ret
out
push
mov
imul
dec
inc
lods
out
leave
mov
nop
pop
ret
gs
mov
ss
popa
sbb
rorb
jp
movsl
lds
aad
out
inc
ffree
push
xchg
imul
sub
push
add
lods
jno,pn
scas
inc
mov
dec
mov
notb
sub
leave
jmp
ljmp
jae
mov
jmp
dec
or
das
mov
pop
cld
jnp
mov
jne
aad
rcrb
dec
inc
rcrb
pop
push
pushl
dec
sahf
cmp
std
bound
push
and
fwait
imul
xor
out
es
mov
pusha
or
popa
out
add
push
fidivrl
jmp
divl
mov
adcb
decl
xor
adc
aad
dec
adc
jle
mov
fucomip
jno
mov
js
stc
cli
mov
adc
xchg
ds
shll
inc
rcl
imul
movsb
bound
es
mov
push
idivl
xchg
lods
ret
in
mov
mov
cmp
or
jg
inc
add
push
fwait
es
mov
cs
lock
pop
and
sti
loope
in
add
pusha
push
out
lret
call
xchg
out
xor
mov
icebp
repz
outsb
rclb
or
mov
cmp
clc
push
lret
mov
inc
js
inc
stc
bound
push
push
stos
or
mov
xor
dec
popf
sti
loop
cmc
jp
lahf
sti
xorl
add
xchg
sbb
or
cmp
cwtl
daa
repz
xor
test
mov
in
jnp
or
adc
inc
lods
or
adc
lods
sti
xchg
push
lods
ret
add
and
or
rcll
and
pop
stos
inc
adc
dec
in
scas
ja
out
jns
clc
fsubl
fldl
mov
adc
pop
shll
in
mov
repnz
test
jge
sbb
notb
cmp
lods
xchg
dec
jp
push
mov
sbbl
or
cmp
jae
ljmp
xor
xchg
sti
xchg
and
mov
add
aas
pop
bound
mov
fisttps
cli
push
repz
push
mov
repnz
pop
test
mov
or
lcall
pop
aad
and
inc
xchg
sbb
into
clc
loop
push
mov
loope
cmp
cmp
jmp
imulb
into
stc
mov
mov
xchg
out
adc
test
popf
inc
push
adc
daa
push
xchg
mov
outsl
push
in
call
mov
repz
fwait
dec
faddl
cmp
mov
fdivs
jl
cmp
das
dec
jp
testb
das
cmpsl
ror
pop
add
or
jle
lock
je
divl
int3
mov
loope
push
insl
xor
sbbl
out
sarl
add
out
in
dec
mov
mulb
scas
jmp
dec
stos
mov
sub
hlt
or
andb
in
add
imulb
nop
into
mov
push
or
arpl
push
mov
hlt
iret
addr16
push
in
dec
jge
je
mov
pusha
cld
mov
int
enter
insl
shl
lcall
movsl
and
fstl
fwait
rclb
jbe
frstor
jae
pop
push
and
pop
inc
outsl
dec
movsl
jmp
sub
dec
or
push
test
roll
lret
inc
push
out
in
xor
mov
and
sub
sub
inc
lock
les
inc
cli
loope
repz
movsl
out
jecxz
lcall
xor
call
xor
jp
xor
push
jnp
les
dec
mov
pop
push
xchg
aad
aas
push
or
mov
and
aad
cmp
push
cmpsl
movsb
add
and
cli
loop
in
mov
dec
rorl
xor
push
fdivrs
xchg
cmpsb
clc
sub
jle
loop
loopne
pop
enter
mov
das
jne
daa
aaa
and
sub
and
adcl
and
fabs
cmp
andl
adc
sub
xchg
inc
push
repnz
in
add
mov
stc
xchg
lret
icebp
push
data16
pop
out
lcall
divb
in
or
int3
mov
dec
pop
pop
into
pusha
and
add
cmc
jecxz
test
cmp
adc
in
pop
push
stos
fmulp
in
mov
subb
jp
cmp
or
mulb
jle
or
test
sub
push
jge
jle
and
push
xor
scas
push
ret
dec
shr
mov
dec
sbb
inc
pop
mov
push
push
dec
test
cltd
inc
mov
js
or
int
pusha
fisttpll
cmp
jb
scas
push
cmc
jp
mov
stos
jecxz
adc
outsb
sbb
cmp
out
sbb
push
push
dec
mov
subl
testl
scas
inc
mov
rol
les
adc
inc
jno
arpl
stos
imulb
adc
nop
lds
cmp
insl
jge
sbbb
rcrl
pop
stos
stos
mov
fbstp
mov
adc
adc
xchg
inc
outsl
jmp
push
and
popa
jmp
fstps
outsb
cmp
shlb
inc
add
push
pop
arpl
or
call
orl
dec
sub
lods
or
outsl
pop
mov
imull
xor
mov
stos
mov
leave
push
push
mov
push
xor
divb
ss
add
mov
jnp
sbb
pop
ficoms
pmullw
xchg
adc
into
cli
jl
xor
hlt
test
pop
push
roll
push
jecxz
pop
lcall
mov
adc
lret
lods
add
imul
pop
xchg
int
pop
add
or
lahf
mov
lret
sbb
and
add
or
jno
cmp
int
cltd
and
pusha
jmp
je
fiadds
outsb
movsb
int
mov
xchg
and
add
add
cmpsb
adc
jl
sbb
cmp
push
and
std
imull
adc
or
es
mov
inc
stc
mov
jmp
and
outsb
mov
mov
aaa
adc
out
xchg
dec
or
sub
fst
mov
js
xor
int3
xchg
sbb
add
inc
imul
stos
sbb
cmp
xor
popa
cmc
lods
sub
dec
dec
adcl
or
and
jl
sub
lock
insb
mov
aas
lds
mov
in
inc
xchg
cli
inc
jp
sbb
pop
dec
mov
es
orl
and
sub
ds
dec
outsb
push
iret
idivl
popf
jmp
mov
shlb
sti
or
cmp
push
cmp
ja
cmp
clc
jbe
rcrb
icebp
frstor
adc
pop
jne
adc
xchg
inc
push
or
mov
fwait
adc
pop
inc
sbb
daa
test
sbb
pop
pop
outsl
push
sub
icebp
mov
push
pop
cli
inc
test
aas
shll
and
dec
inc
sbb
inc
or
scas
mov
pop
std
sahf
rolb
inc
push
mov
ljmp
call
xchg
inc
jns
cmc
icebp
push
cmp
push
fadds
out
gs
dec
dec
retw
cmp
inc
pusha
loop
inc
mov
stos
divb
scas
mov
and
jecxz
ret
outsb
push
push
fisubs
sbb
loopne
push
outsb
push
and
push
insl
cmpl
lret
jp
add
sti
ljmp
movd
scas
mov
or
fcmovb
pusha
xorl
fstpl
pop
push
mov
outsl
jg
cmpsl
jge
pop
xchg
jb
xchg
clc
pop
push
popa
inc
sbb
sbb
sub
or
ror
dec
push
outsb
inc
xchg
cmp
fcompl
imull
push
test
arpl
enter
pop
pop
pop
inc
xchg
rorl
push
pop
xor
xchg
addr16
std
test
aas
or
xor
rcll
pop
stos
in
imul
lods
or
sbb
fcoml
or
or
xchg
xor
push
loop
or
push
cmp
xchg
add
jae
enter
test
mov
adc
jo
xor
or
jle
inc
push
loopne
out
loope
addl
and
inc
ret
or
mov
out
sbb
loope
adc
mov
outsl
sub
dec
mov
sarb
jno
iret
xor
sbb
out
insl
lret
jnp
sbb
lock
adc
test
lods
xlat
mov
movsl
pop
dec
xchg
aas
mov
push
or
jge
or
jmp
adc
call
out
enter
lds
sbb
pop
jno
sub
or
int
leave
xlat
enter
aaa
sti
js
push
and
add
jecxz
imul
xchg
xchg
sbbb
and
cmp
jne
xchg
aad
stos
fistpll
add
mov
jbe,pt
cmp
int
inc
jne
cmp
insb
dec
mov
sahf
push
in
scas
sbb
or
push
mov
movsb
push
mov
mov
or
mov
mov
call
xor
bound
sbb
in
add
xchg
sbbl
test
mov
and
cmp
cs
insl
mov
mov
and
lods
lods
mov
push
test
mov
cmp
cld
cmc
mov
ficompl
and
pop
mov
sbb
mov
nop
mov
repnz
mov
out
mov
bound
mov
fcmovnbe
and
xor
gs
scas
xchg
adc
push
lds
not
or
rorb
sbb
push
mov
ss
scas
or
js
nop
xchg
sbb
pop
std
and
mov
mov
ss
adc
dec
std
pop
repnz
mov
insb
adc
inc
lock
inc
sub
jl
stc
inc
pushf
push
cmp
jo
clc
mov
pop
mov
xchg
xor
fcmovnb
imul
push
dec
adc
sub
pop
pop
rcll
mov
dec
mov
cld
pop
cmpsb
mov
cmp
shr
cwtl
mov
cmp
add
cmp
stc
xchg
jg
je
jge
mov
fcoms
scas
fldl
stc
std
cltd
jle
aaa
pop
call
adc
mov
mov
jge
ret
loop
mov
xchg
push
fcmovnu
sbb
test
adc
or
nop
xor
cmp
cli
or
mov
movsb
mov
push
in
test
rol
jae
push
jmp
jo
mov
push
mov
daa
or
test
push
ljmp
xlat
xchg
mov
xchg
mov
jnp
or
pop
lea
std
cwtl
xor
xchg
adc
fwait
add
dec
fsubr
mov
jge
lcall
lods
or
les
or
lds
and
pop
dec
data16
jb
jle
mov
pop
divb
pop
lods
add
cmpb
push
pushf
cmp
and
pushf
les
aad
mov
or
and
test
iret
sbb
cs
mulb
xlat
or
xor
ljmp
mov
adc
inc
in
cs
push
lds
adc
jmp
add
xchg
in
sahf
icebp
or
push
aam
divl
movsl
fdiv
lret
cmp
popf
rcrl
inc
xchg
psubsw
jb
loop
sub
stos
inc
fs
in
push
mov
mov
xor
and
sarl
std
dec
cmp
mov
dec
outsl
lret
pop
cmp
inc
icebp
mov
dec
push
hlt
adc
lock
mov
into
mov
adc
sti
xor
rcll
clc
mov
pop
jp
int
xchg
mov
adc
inc
cmpsl
pop
enter
dec
mov
frstor
fcompl
fcmovnbe
fisubrl
adcb
lods
mov
ds
scas
test
cld
cmpsb
lds
ficoms
sub
test
jnp
dec
push
outsb
sub
mov
fidivs
cmpsl
popa
or
sbb
inc
mov
cli
push
mov
and
imulb
movsl
sbb
pop
sti
sahf
sahf
mov
mov
ficoms
mov
bound
shll
insl
mov
out
mov
xchg
cmovae
call
rorl
leave
mov
cmp
pop
pop
ret
shl
icebp
into
fs
pop
cmpb
in
mov
fstpl
cwtl
scas
sti
sbb
sub
aad
dec
outsb
or
outsb
movsb
mov
inc
xlat
repz
cmc
pushf
outsl
pushf
or
les
sub
xor
stos
xlat
gs
loope
cmp
mov
fdivs
imul
dec
adc
hlt
gs
sbbb
sbb
int
and
pop
stos
or
in
imul
repz
dec
xchg
push
jns
sub
pop
mov
enter
dec
lds
in
je
inc
in
xchg
js
cmp
xor
push
imul
int
fcoms
sub
dec
xor
inc
xchg
xchg
pushf
adc
sub
movsb
mov
xchg
sub
push
pop
lods
dec
ret
test
out
push
jns
xor
lcall
mov
lods
sbb
add
movsb
aam
gs
aam
das
and
inc
jle
das
adc
sbbl
push
ret
jbe
arpl
mov
fcmovne
sub
out
adc
ret
push
pop
in
fbstp
mov
mov
out
cmp
cmp
pusha
xor
xchg
cwtl
jne
out
mov
mov
sahf
call
sbb
dec
sub
push
in
jo
mov
cwtl
or
xor
out
inc
or
adc
in
cwtl
mov
push
inc
xor
dec
pop
mov
mov
nop
sbb
lea
push
sub
into
mov
cmovs
ds
mov
shll
xchg
out
popl
lods
sub
xchg
arpl
xchg
cltd
inc
xchg
popf
sbbb
out
fwait
call
push
test
adc
imul
int
xchg
jle
cmp
mov
nop
mov
arpl
sub
xchg
fisttps
out
fisttpll
xor
aad
pop
add
xchg
jg
sbb
mov
cli
fidivl
mov
dec
dec
sti
iret
xchg
and
adc
adc
push
fistpll
cmp
lock
cmc
sti
inc
and
cmp
pushf
mov
lods
mov
adc
andb
dec
faddl
sub
adcl
leave
adc
sub
adc
add
or
js
hlt
adc
mov
mov
es
fistl
ret
leave
jae
das
icebp
std
xor
pop
test
incb
lock
lods
add
fists
in
sub
in
in
call
les
rolb
pop
and
mov
pop
push
call
push
fstpl
dec
popf
xchg
xor
mov
xor
mov
jo
jns
mov
pop
mov
daa
cmpsl
aad
mov
push
pushf
rol
adc
push
jle
jmpw
and
mov
popa
loopne
stos
aad
in
mov
mul
add
add
sub
push
push
dec
cld
movb
ret
xor
daa
shr
sub
add
and
xlat
xorl
dec
sbbb
jmp
mov
cmp
push
aad
scas
fistps
call
and
lcall
jne
sub
insl
xchg
dec
mov
mov
mov
fdivrs
inc
xchg
rolb
jp
stc
dec
rep
jge
iret
popa
shrl
popa
or
add
push
loopne
sbb
cmpsb
out
insl
pop
xchg
push
aaa
push
cmp
popa
mov
rolb
in
cmp
out
out
mull
out
push
cld
adc
push
xor
sub
sti
push
repnz
sub
cld
jmp
mov
cmp
aas
orl
lock
jns
into
sti
sub
and
out
push
xor
jmp
orl
push
xchg
int
dec
mov
and
in
jle
icebp
arpl
js
sub
in
mov
shl
insb
cmp
out
faddl
pusha
enter
and
jbe
xchg
rorl
inc
add
dec
cmp
mov
outsb
xor
mov
jno
dec
loopne
into
inc
out
jle
dec
daa
cmp
hlt
call
push
jge
repnz
or
das
sahf
adc
add
fisttpll
test
int
add
push
and
push
inc
shll
rolb
leave
mov
push
in
inc
int
and
pop
dec
in
pop
sub
imul
add
cwtl
xor
test
das
push
inc
push
dec
aad
je
mov
mov
add
ja
jo
pop
out
inc
in
push
mov
xchg
mov
xchg
jno
cltd
repz
movsl
cmp
adc
mov
inc
outsb
jae
dec
cmpl
popf
cmp
into
sub
lea
sub
rcl
push
lods
pop
cmp
pop
repnz
repnz
in
xor
int3
or
xor
rcrb
mov
jmp
lret
orl
fisubs
mov
ds
sub
xor
mov
xor
clc
push
daa
push
je
mov
cmp
es
cmc
out
push
loope
movl
cld
fimull
ss
push
lds
sarl
sbb
cmc
mov
and
insb
mov
fidivrl
lods
xchg
or
xorl
adc
xchg
hlt
icebp
insl
lea
iret
aaa
clc
jecxz
adc
imul
mov
push
stos
push
fidivs
xor
out
mov
push
xchg
xchg
pop
out
inc
popa
xor
sub
pop
gs
push
insl
xchg
jmp
lea
andb
sbb
loop
lods
add
idiv
push
sahf
dec
push
inc
adc
cmp
jno
out
xor
mov
test
rorl
rcr
xchg
dec
and
scas
stc
out
xor
ficompl
adc
pop
mov
orb
adc
inc
jae
pop
or
and
push
mov
mov
sub
xchg
loop
mov
mov
testb
rep
lds
xchg
subb
not
mov
and
dec
xchg
shlb
ds
lahf
dec
notl
mov
out
lds
push
cltd
jp
popa
fwait
mov
mov
stc
fiaddl
int3
shlb
jns
jl
cwtl
cltd
inc
sti
xor
in
in
fldenv
pop
repz
dec
push
cmpb
mov
fldcw
add
mov
mov
jnp
ljmp
push
xor
hlt
inc
mov
mov
inc
pop
cmc
in
push
pop
fistpll
inc
pop
dec
mull
dec
add
adc
cmc
add
int
daa
sub
inc
addr16
dec
jns
mov
inc
sub
sub
or
arpl
dec
cmc
shlb
inc
add
loop
icebp
cmp
fcoms
cmp
cmp
test
sbbl
das
sub
pusha
test
fwait
mov
dec
pusha
test
icebp
loope
or
sahf
jb
xchg
adc
mov
lock
outsb
loop
popf
sahf
sti
mov
lea
mov
jbe
ljmp
mov
add
cwtl
shrb
adc
cmp
cmp
and
inc
cmp
pop
enter
std
pop
sbb
sbb
push
imul
fisubrs
sub
rorl
fstpl
ss
jnp
mov
lds
dec
shll
stos
dec
cltd
outsb
fisttps
or
out
inc
and
ret
out
ljmp
loope
sbb
aad
addb
adc
push
in
in
sti
movsb
push
bound
ret
cmp
xchg
ds
insl
stos
insl
xor
js
push
dec
cmp
mov
xlat
cmc
mov
or
aaa
gs
fimull
ret
mov
shll
cmp
test
scas
mov
fisubl
jg
aam
or
sub
adc
aaa
pop
test
xor
and
pop
add
outsb
movsb
sbb
cmpsl
pop
fwait
repnz
pop
stos
xor
jp
cmp
enter
call
int3
out
jle
cmp
cmp
lret
mov
and
push
mov
lods
mov
out
jle
pushf
into
sub
scas
gs
inc
push
cltd
xlat
fs
cltd
scas
mov
syscall
popf
mov
jo
aas
add
or
mov
mov
add
in
addb
dec
pop
sahf
sbb
adcl
mov
enter
xlat
out
imul
test
in
jl
xchg
pop
ja
std
out
mov
jge
jg
inc
pop
movsl
scas
push
sub
xor
inc
and
dec
add
sub
adc
sbb
les
adc
movsb
mov
out
out
scas
lods
sbbb
jmp
mov
adc
and
sbb
dec
jmp
xchg
xor
fidivl
ja
outsb
call
ret
enter
xor
cmp
mov
jl
ret
jge
rorl
mov
mov
mov
sbb
rcr
stos
jp
xchg
pushf
sbb
push
stc
jl
mov
pop
and
push
mov
loop
mov
xor
xor
push
pop
xchg
notl
push
movb
aad
jb
jmp
mov
push
push
out
shlb
icebp
pusha
push
aam
orl
cmc
icebp
sbb
in
lods
lds
cmp
push
add
popa
and
add
inc
sbb
movsl
cmp
nop
cmp
jbe
jmp
stos
outsl
jno
test
loop
out
sbb
fldl
insb
cmp
cltd
inc
data16
mov
or
fwait
mov
fcmovu
jecxz
xorl
idivl
xchg
notl
aaa
clc
xchg
and
fs
addl
cmp
and
repz
bound
jae
dec
clc
lds
psrld
cmp
test
mov
roll
push
pusha
inc
cmc
fmull
or
pop
add
es
jmp
notb
popa
sbbl
adc
insl
ds
push
push
or
pusha
xchg
xchg
add
add
bound
cmp
sbb
outsb
imul
xchg
stos
notb
push
jne
test
mov
aam
mov
stos
push
mov
xchg
rorb
inc
fdivl
and
push
and
xchg
loope
jnp
pop
aas
lds
jnp
cmp
test
dec
inc
rcrl
pop
and
sbb
dec
test
sti
mov
in
in
stos
test
inc
aaa
adc
imul
cld
jo
mull
pop
sbb
in
xor
xor
mov
push
mov
clc
sbb
loope
clc
mov
jl
sub
jecxz
pop
cmp
pop
dec
dec
cmpsb
jb
jo
and
fidivl
adcl
hlt
mov
push
adc
in
out
cmp
xor
mov
insb
mov
cltd
sub
xor
data16
addb
adc
popa
sbb
div
ficomps
call
jmp
not
inc
push
jecxz
jp
mov
in
cmp
cli
or
or
inc
xchg
jecxz
mov
pop
fsubl
insb
pop
jno
iret
lods
scas
xchg
cmp
cld
lcall
scas
cmp
fadd
pop
inc
inc
cld
inc
mov
fldt
push
cltd
sbb
sub
push
insb
stos
nop
pop
test
dec
jb
jp
push
aam
ret
jbe
cmp
cwtl
je
add
pop
loop
in
push
in
pop
jo
fdivl
pop
bound
and
fcmovnb
pop
test
insb
iret
sbb
stos
xor
jns
lret
inc
test
xchg
push
daa
dec
xchg
mov
xchg
push
int
imul
cmpsl
push
cs
add
lods
lret
stos
pop
mov
mov
inc
es
subw
sub
mov
xchg
stos
out
insl
fisttpl
movsl
pop
lds
clc
in
std
and
xchg
test
aam
loope
lret
dec
and
add
or
cmpsl
mov
inc
cld
jo
decl
push
add
stc
mov
sbb
push
pop
incb
mov
pushf
lds
lods
mov
cmp
testb
je
xchg
shll
sub
nop
fisttpl
out
std
xor
test
jb
inc
lahf
movl
add
shrb
push
aas
rol
jo
xorb
daa
scas
shrl
mov
sbb
out
pusha
or
fwait
iret
mov
in
insb
mov
xchg
cltd
adc
cli
outsb
in
inc
add
mov
sbb
dec
cmp
or
xchg
mov
jno
mov
xchg
push
push
cmp
inc
mov
dec
cli
mov
lret
fstps
or
jg
hlt
es
xor
lods
sbb
js
mov
test
jno
pop
xor
sub
fiadds
in
out
push
mov
and
mov
dec
rorl
mov
dec
imul
test
or
jb
mov
sbb
aas
dec
arpl
mov
jg
mov
inc
push
adc
in
ret
sbbb
es
xchg
or
jmp
leave
adc
xchg
inc
fwait
push
iret
pop
movsl
mov
out
pop
bnd
xlat
out
in
jne
pop
push
call
bnd
inc
mov
mov
xor
cmp
xchg
and
xor
incl
cltd
pop
and
inc
jl
cmp
fucomi
test
fldt
arpl
pusha
in
lcall
daa
xchg
jecxz
push
loope
inc
mov
aad
inc
sbb
pop
adcb
in
jge
cmpb
push
sbb
sahf
pop
call
dec
cmpsl
loopne
lods
cmpsb
ja
inc
pushw
jge,pt
stos
sarl
outsl
pop
adc
mov
sbb
xor
push
mov
pop
dec
cmc
cmc
pop
int3
pop
cli
enter
add
cwtl
je
cmp
adc
enter
iret
shr
mov
and
lcall
xor
test
lcall
jp
mov
jae
adc
sti
add
cwtl
xor
leave
xor
mov
imul
jl
add
inc
fcomip
cmp
pop
outsb
stos
dec
cld
cmp
rcl
test
add
push
scas
and
in
xor
pop
inc
mov
inc
sub
cli
xor
inc
xlat
jg
cmpsl
aam
out
push
sbb
and
out
inc
push
test
mov
mov
cmpb
gs
add
in
repnz
xor
ffree
push
fidivrl
shlb
mov
inc
mov
js
in
xchg
std
test
aad
cmp
inc
mov
pop
cmp
repz
xor
xchg
push
mov
icebp
testb
scas
inc
je
loop
cs
adc
fstpt
adc
rorb
xchg
insb
push
sarb
inc
sbb
out
stos
pop
jns
daa
sub
mov
out
jns
lahf
pop
cmpsl
fidivrs
mov
mov
and
out
mov
xchg
mov
loopne
lahf
jle
fisttpll
repz
es
lret
xor
cmpsb
adc
pushf
movsb
sbb
xor
pusha
cs
jo
fcmovnb
dec
fildll
inc
push
nop
jo
in
inc
xchg
pop
add
dec
xchg
adc
out
fucomip
add
and
ljmp
mov
dec
pop
add
shrl
cs
fdivs
xlat
jne
sbb
cmp
cld
push
push
inc
jg
lds
popf
hlt
sub
orl
hlt
pop
or
mov
lock
xlat
xchg
xchg
and
test
iret
jl
xchg
daa
jge
lds
lods
or
push
mov
pop
and
shr
outsl
adcb
les
andl
insb
fistpl
rcrb
out
xchg
mov
popf
mov
in
leave
or
xor
insl
out
jnp
push
add
sarl
ret
aaa
add
mov
cli
cmp
test
xchg
cmp
sub
mov
mov
bound
and
sbb
ss
in
mov
lea
aas
scas
imul
mov
sbb
inc
mov
add
shll
mov
pop
push
into
out
je
push
icebp
ret
nop
sarl
iret
ficompl
xchg
add
loope
les
inc
test
sub
inc
scas
int
jae
jmp
jae
stos
pop
inc
jmp
add
push
rcrb
push
push
sub
xor
pop
xchg
in
psrad
test
pop
je
das
fs
jo
push
divb
paddsw
cmp
fcmovbe
test
call
fwait
mov
test
pop
and
mov
adc
xchg
stos
imul
sahf
movsb
ret
jae
fcomps
ficompl
inc
pop
sub
push
jnp
negb
xchg
repnz
jb
fs
mov
sub
loope
test
cltd
shll
loopne
loop
xor
xchg
stc
inc
pop
outsb
pop
pop
pop
mov
imul
inc
inc
fmull
pop
push
sbb
sub
test
push
push
jo
sub
xchg
add
aaa
out
std
mov
aaa
mov
mov
push
cmpsb
mov
cs
fmuls
sub
mov
jge
les
xchg
loopne
or
mov
insl
xchg
mov
aam
stos
out
adc
outsl
movsl
nopl
test
push
pop
and
ja
adc
xor
and
inc
mov
push
jns
mov
xor
and
sbb
int
push
xlat
inc
mov
mov
dec
cmp
sbb
sub
dec
push
ss
das
pop
and
lods
das
fadd
cmp
sbb
xchg
pop
das
lahf
push
popl
pop
lea
clc
pop
sub
out
cmpsl
mov
jb
lods
xchg
cmpsl
mov
pusha
fdivr
cld
xor
aas
out
mov
dec
daa
aad
mov
lods
pop
lahf
pop
inc
lcall
scas
or
jp
lcall
aaa
cmpl
fs
mov
orb
adc
pop
ret
es
enter
and
sub
jae
cli
jle
stc
dec
mov
and
fs
into
mov
xchg
outsb
pop
push
cmc
hlt
xchg
in
loop
jbe
into
bound
ljmp
lods
xor
sti
mov
xor
jnp
test
pusha
and
cmpsb
xor
sar
fisubrs
popf
pop
xchg
test
mov
out
jae
cld
fnstcw
out
push
mov
lcall
jg
adc
fcomp
xchg
mov
push
fs
mov
aaa
sub
fsubrs
outsl
lods
mov
inc
leave
fbld
mov
dec
jge
outsl
push
lock
xor
adc
mov
test
dec
inc
cmp
xor
repnz
xchg
xor
ret
mov
mov
or
arpl
lock
out
mov
mov
and
pusha
arpl
xor
enter
pop
fildl
loop
dec
adc
subb
mov
push
aad
mov
sbbb
sti
nop
push
xor
or
and
pop
fmull
mov
sub
imul
sbb
arpl
cmp
sbb
inc
jecxz
das
arpl
lcall
sbb
push
pusha
pop
pop
or
lds
call
aad
data16
xor
popf
into
ret
xor
inc
xchg
fistl
lock
dec
mov
shrb
sub
dec
outsb
sbb
xchg
dec
inc
mov
push
sub
and
jp
mov
dec
jl
adc
rcll
incb
xorl
sarl
loop
push
xor
lcall
push
into
mov
and
xor
stos
jmp
loope
sbb
sub
arpl
fisttpl
addr16
popf
test
cmp
mov
push
adc
shrb
sbb
into
mov
mov
out
pushf
lret
popf
sub
xchg
sbb
and
call
jp
inc
fbld
inc
out
int3
int
or
insl
insl
lret
lods
aas
sub
aas
cs
jne
and
jb
insl
es
mov
jge
ljmp
add
push
les
inc
jecxz
mov
dec
add
insl
and
and
mov
into
out
gs
orl
lcall
imul
cmpsl
imull
test
cwtl
int3
mov
xchg
enter
inc
orl
lods
dec
inc
fdiv
outsl
add
add
insb
jg
test
jecxz
inc
aas
sarl
mov
sub
in
mov
inc
lret
out
dec
in
mov
in
fcompl
test
es
flds
ljmp
stos
sbb
xor
js
dec
fildl
sbb
andl
mov
inc
mov
mov
mov
jbe
lret
adc
add
and
inc
or
add
or
or
scas
push
scas
sbb
insl
mov
push
in
subl
and
push
loope
dec
fs
int
idivl
nop
or
cwtl
mov
incl
cmp
jecxz
adc
adc
imul
cmp
fdiv
addr16
mov
lock
pop
psubb
add
push
fadds
sarb
mov
add
push
lods
cs
pushf
popf
imul
in
or
sbbb
jno
insb
cmp
lods
leave
sub
movsl
imul
nop
adc
or
mov
sub
xor
jns
jo
popa
dec
loopne
rorb
push
lds
es
push
aad
pop
and
lret
mov
cmp
imul
test
mov
sub
mov
ljmp
sub
fcomps
mov
test
or
mov
pop
dec
fs
test
dec
leave
aam
push
mov
xchg
popa
push
cmpsb
cmp
pop
push
loopne
adc
clc
imul
and
or
inc
or
inc
pusha
sahf
test
clc
mov
repz
daa
or
lds
and
dec
pop
mov
and
jp
mov
call
mov
inc
cmp
sbb
or
xchg
and
xchg
jge
gs
leave
push
mov
hlt
leave
je
or
lea
cmp
mov
dec
push
gs
lds
pop
jo
mov
mov
dec
xchg
loope
sub
in
ja
test
dec
fistpll
int
pop
jecxz
shrb
xchg
jae
jae
xchg
push
or
mov
xchg
jle
lcall
add
lret
movhps
movsl
addr16
sbb
add
fcomip
pop
mov
adc
or
xor
and
or
cmp
cmpsl
outsl
pop
dec
lods
pop
adc
clc
inc
or
cmpsb
hlt
pop
dec
outsl
clc
movb
push
mov
fdivr
call
cltd
xor
push
jnp
mov
xor
xchg
and
test
sti
mov
out
lcall
gs
fistpll
sbb
gs
insb
enter
aaa
adc
mov
dec
mov
adcb
add
mov
in
push
xchg
mov
dec
aad
pop
addr16
out
mov
addl
mov
outsl
sbb
pop
mull
aad
das
jbe
mov
fwait
movsb
ret
add
fwait
bound
dec
cli
fstpl
cmp
or
dec
bound
sub
xlat
insb
mov
jg
loop
sbb
add
sub
mov
pop
mov
hlt
std
and
test
xchg
enter
data16
out
int3
mov
ja
pop
rcl
xor
lcall
sbb
and
rorl
mov
bound
sub
mov
push
nop
jbe
pusha
jl
pop
adc
inc
fidivl
js
inc
dec
shr
sub
lret
shl
pop
inc
adc
std
jg
push
lock
pop
pop
out
mov
lret
push
mov
dec
mov
adc
cwtl
xor
mov
xchg
add
mov
cwtl
inc
ror
js
and
jb
pop
insl
pop
mov
xchg
push
pop
mov
test
int3
in
fldcw
xchg
fmull
cmp
mov
mov
xor
jge
push
mov
int3
sbb
xor
or
push
inc
mov
jnp
pop
std
add
mov
dec
fiaddl
cltd
inc
iret
push
ljmp
lret
inc
ljmp
cld
mov
xchg
imul
cmp
mov
clc
jmp
sahf
lret
sbb
add
outsl
sbb
jno
push
adc
lock
sub
sahf
das
dec
test
pop
xchg
decb
rclb
dec
xor
push
mov
insl
mov
bound
add
rcll
push
sbb
lds
jl
outsb
or
or
imul
and
sbb
subl
lods
ficomps
fisubrs
js
loope
and
sub
inc
ss
dec
cld
stos
arpl
ficoms
push
fsubrs
lods
mov
dec
mov
adc
out
mov
loope
insb
sbb
fidivrs
push
push
aas
push
lock
inc
js
and
idivb
sub
dec
jb
andl
push
imul
add
add
mov
les
outsb
or
jmp
xchg
loopne
loop
dec
sub
std
jmp
cmp
mov
sbb
pusha
shll
fdivs
call
mov
mov
test
and
das
call
xchg
shl
pop
dec
or
pop
dec
sti
xchg
mov
mov
jg
push
shr
fsubrp
addr16
rclb
scas
adc
in
add
pop
call
push
jmp
pop
fdivrs
mov
xchg
pop
addr16
inc
cmpsl
push
add
dec
sub
or
inc
jae
insl
scas
dec
dec
push
lret
sar
fisubl
xlat
out
mov
out
jns
sbb
jo
cmpsl
scas
popa
xor
adc
xlat
xchg
jge
movsl
xor
rclb
push
cs
out
in
jg
pop
stc
fdivr
jmp
mov
jecxz
std
aas
loop
push
imul
pop
inc
xchg
into
mov
inc
add
sbb
inc
in
lret
lret
mov
int3
mov
mov
stc
jmp
std
loopne
cmpsb
lods
cmp
mov
scas
pop
out
xchg
and
stos
sub
daa
xor
mov
movsl
dec
in
push
cmp
dec
cmp
jmp
lretw
jge
pop
jge
push
push
fdivp
mov
or
mov
xor
push
out
rorb
rcll
fidivrl
sub
mov
mov
adc
mov
sub
inc
or
push
push
xor
xor
sbb
adc
and
mov
cmp
lret
andl
xchg
push
sub
imul
cmp
imul
lds
ret
sbb
fsubrs
mov
sub
imull
fists
jecxz
dec
and
and
mov
shlb
test
bound
int
or
ds
push
iret
mov
orb
push
or
mov
pop
aad
xchg
pop
push
sbb
push
sbb
inc
mov
int3
aas
jno
or
cmp
sbb
arpl
jbe
push
mov
dec
cmp
movb
inc
xor
data16
lret
cmpsb
sub
mov
pushf
and
xchg
xor
in
add
iret
insb
inc
pop
jbe
and
jo
ljmp
stos
call
mov
xchg
lea
sahf
insl
rorl
mov
mov
pusha
rcr
xchg
test
add
inc
outsl
and
int
cltd
adc
out
ja
mov
jg
xchg
lods
or
test
sub
mov
out
scas
mov
popf
lret
bound
hlt
adc
and
aas
dec
sahf
xlat
sahf
fstpt
popa
out
insb
jne
fidivrl
ror
or
add
add
mulb
gs
mov
in
and
mov
lds
dec
mov
dec
jo
lret
jle
lock
and
out
sub
mov
dec
sub
or
out
les
lods
mov
icebp
mov
enter
mov
adc
cmpsb
aad
int3
add
xchg
stos
call
es
push
std
xchg
hlt
xchg
outsl
aad
cltd
cld
mov
mov
ja
mov
lcall
in
sbb
mov
test
cwtl
lds
mov
fnstcw
mov
neg
dec
and
dec
and
sbb
xor
dec
sub
into
and
shrl
mov
lret
sbb
cmp
jnp
stos
lods
fildll
add
inc
sbb
fcompl
imull
lds
sub
lcall
test
or
aas
mov
in
aam
cmc
jno
cmp
push
scas
xor
mov
sbb
cwtl
inc
cld
push
in
sahf
out
lret
dec
inc
jmp
mov
jb
jnp
sahf
inc
mov
ja
push
cld
jne
push
and
idivb
popf
into
jecxz
les
andb
push
aad
mov
jge
pop
jno
jb
in
stos
push
jbe
xor
lret
sub
pop
repnz
fwait
xor
into
fs
dec
dec
mov
sbbb
pop
mov
xchg
decl
mov
fwait
xlat
xor
mov
sub
mov
adc
sub
les
loop
ja
les
jle
sbb
hlt
incb
bound
mov
dec
inc
sbb
add
mov
mov
out
cmp
sbb
fisubl
jae
xchg
pusha
push
push
testl
adc
lret
in
push
mov
mov
sbb
or
repz
stos
cmp
out
jno
stc
inc
cmp
pop
sbb
xlat
pop
test
mov
lods
sbb
lods
pop
sbb
out
mov
sbb
aam
call
cwtl
push
mov
pop
mov
jecxz
mov
divl
mov
inc
inc
shll
mov
add
jno
in
orl
rorb
or
add
jbe
xchg
dec
pop
cmp
pop
inc
les
jecxz
lods
sub
ljmp
jno
inc
imul
push
adc
and
test
idiv
je
or
sbbl
repz
aaa
out
jmp
stos
loop
push
addr16
lock
push
les
jnp
jno
out
repz
push
movsl
cmp
lea
adc
mov
push
inc
stos
daa
out
mov
mov
push
and
mov
push
mov
mov
inc
cli
mov
adc
push
jne
xor
xchg
insb
outsl
fs
pushf
and
das
divb
movsl
aas
mov
loopne
push
addr16
pusha
xor
shlb
xchg
mov
pop
jp
jmp
push
cld
out
adc
aad
cmp
adc
test
adc
xor
jl
outsl
cmp
loope
inc
mov
cwtl
bound
dec
sbb
pusha
inc
and
adc
imul
outsl
ss
movl
pushf
lahf
out
ljmp
and
push
gs
sarl
xor
mov
inc
mov
nop
mov
mov
adc
mov
lods
lea
xchg
shrb
adc
xchg
push
movsl
dec
mov
adc
mov
jns
adc
loope
pop
in
insl
fcmove
xor
cltd
inc
cld
movl
imul
mov
mov
adc
ja
in
jecxz
fiadds
inc
cld
dec
nop
int
mov
cmp
test
mov
cmp
loopne
cmpsl
inc
insl
sub
std
xor
pop
push
out
jle
and
add
pop
mov
out
cmpsl
jo
push
adc
mov
pop
fstl
test
adc
inc
push
mov
test
xchg
or
fisubl
push
out
es
pop
rorl
mov
mov
lock
push
vshufps
adc
iret
or
nop
mov
jp
cmp
sysenter
sub
jb
cmp
inc
in
fsubrs
sub
mov
ljmp
imul
pop
cmp
es
push
fnsave
daa
add
fwait
outsl
push
daa
push
push
orl
mov
cwtl
sbb
and
fs
mov
push
ljmp
mov
xor
inc
lds
call
or
cmpsl
arpl
inc
adc
sbb
and
leave
xchg
or
inc
push
pop
xchg
lret
sub
int3
stos
iret
xor
inc
xchg
imul
mov
outsl
mov
mov
lahf
mov
xchg
repz
insl
int
push
sbb
mov
fimull
mov
and
jp
daa
or
pmaddwd
hlt
cmpsb
adc
mov
pop
js
fsubrs
addr16
int
inc
stos
lret
fprem
fstpt
fildl
pusha
clc
aas
add
fidivl
cmp
cltd
repz
fldenv
and
repz
stc
aas
scas
lods
or
fnop
push
lahf
jns
stc
fnstsw
jnp
and
mov
push
adc
pop
jae
pop
xor
mov
mov
cmp
mov
out
in
lock
pop
sub
out
cli
add
and
sti
pop
pushf
push
bound
leave
pop
jne
lcall
jle
jae
cwtl
ja
xor
push
mov
jne
es
fldcw
push
lock
jge
or
pop
mov
out
mov
add
or
sahf
pusha
aam
mov
xchg
mov
sbb
sbb
sbb
sub
and
adc
arpl
mov
or
mov
sahf
scas
fld
test
sub
or
jecxz
repz
xchg
test
lcall
fwait
rorl
cs
push
mov
aas
push
pop
out
out
cli
popf
and
jle
ja
out
popa
jmp
ja
fdivrs
pushf
aad
ret
pop
xor
pop
pop
push
jno
pop
sti
adc
loope
js
aaa
xor
es
xor
adcb
push
inc
nop
iret
mov
cmp
and
and
cmc
dec
rcr
ret
lods
loop
daa
ss
mov
dec
or
xor
add
test
loopne
das
scas
adc
adc
push
jle
push
sub
ljmp
xchg
jns
lret
xor
push
loope
jp
mov
cltd
mov
shll
sti
fwait
mov
gs
clc
fcomp
sub
movsb
outsb
lods
or
jle
push
xor
xor
cmp
imul
xor
add
cmp
out
daa
scas
popa
movsb
inc
subb
and
and
xchg
pop
test
mov
push
mov
icebp
repz
shll
adc
xor
mov
adc
dec
mov
cld
ljmp
sbb
jns
mov
jbe
mov
je
ret
sbb
rcl
sahf
sub
imul
repnz
test
dec
dec
cmp
out
pop
out
inc
mov
movsb
or
sbb
mov
pushf
loope
fisubrl
sahf
mov
cwtl
mov
lock
movsb
add
inc
ret
mov
xor
ret
mov
and
clc
sub
sub
cltd
add
insb
adc
xchg
cli
jge
xor
lods
arpl
add
inc
lds
add
mov
jb
pop
pop
insb
mov
adc
pop
mov
mov
lret
repz
inc
or
mov
fwait
jo
js
cwtl
pusha
call
sahf
cld
ret
push
push
sarb
mov
cmp
inc
repz
enter
divb
cli
mov
clc
fbld
imul
loopne
insl
js
push
add
repnz
outsl
scas
sti
leave
jbe
test
fimull
inc
adc
push
mov
inc
mov
xchg
push
dec
inc
cltd
mul
push
sub
fwait
jle
rolb
or
lods
lcall
rorb
int3
xchg
mov
pusha
inc
es
jne
icebp
inc
cmpb
out
leave
loop
mov
push
test
mov
popl
fucom
imul
roll
xor
jl
adc
scas
mov
or
adc
mov
sub
out
mov
fistpl
cmp
sti
lods
push
lahf
pop
or
lods
into
rcrl
mov
or
mov
jnp
cmc
dec
ljmp
push
scas
subb
data16
insl
pop
leave
addr16
aas
pop
test
mov
jecxz
pop
mov
nop
inc
pop
push
addl
imul
add
xchg
pop
push
outsb
dec
fcoml
dec
xor
rcl
mov
int
push
jmp
sti
imul
mov
scas
or
sti
sub
push
mov
mov
dec
jg
dec
stos
mov
loop
cltd
mov
jnp
ficompl
mov
rcrl
cmp
in
inc
mov
add
inc
stc
les
fs
adcl
cmp
add
sub
aam
in
sub
scas
inc
cmp
in
inc
cmp
arpl
add
dec
inc
in
mov
dec
es
sahf
inc
das
pop
xor
and
xor
imul
out
pmulhw
xor
lcall
ret
push
lea
out
dec
cmp
push
dec
icebp
and
shlb
shl
aad
iret
xor
jns
data16
mov
sub
insb
and
mov
test
lods
jno
mov
push
lahf
popf
cmc
jge
push
inc
add
mov
xor
cmc
sbb
push
jbe
bound
mov
pop
push
inc
mov
loope
dec
push
leave
js
mov
insl
orl
mov
mov
lds
jmp
fsubrl
aas
push
push
sarl
adc
sbb
xchg
lahf
adc
out
fldt
fwait
lods
test
mov
les
mov
addl
lods
popf
into
adc
sub
sub
pop
movsl
lds
and
dec
enter
enter
dec
jge
xorl
jge
xchg
shrl
sarb
mov
cmp
nop
push
xchg
mov
inc
movsl
inc
jl,pn
insb
fcmove
add
xchg
icebp
pop
fisubl
xchg
inc
adc
insb
cmp
sbb
push
sbb
pop
test
das
outsl
jecxz
test
or
dec
add
enter
push
xor
pop
ficomps
enter
mov
aas
pop
out
cld
xlat
fwait
jle
shll
mov
repnz
adc
cltd
aad
adc
add
adc
xlat
mov
mov
inc
jecxz
inc
jb
dec
dec
push
call
add
push
mov
shrl
jecxz
xor
dec
mov
outsb
sbb
ja
xchg
dec
loop
jp
xchg
imul
in
fisttpl
mov
or
rclb
lods
cltd
out
pop
in
out
lods
jp
lret
shrl
xchg
cmpsb
outsb
cmc
sub
scas
in
gs
add
scas
in
repz
ret
je
aad
pop
lods
jp
xchg
and
inc
jnp
mov
jl
fcmovnb
mov
jl
imul
sub
arpl
fcoml
or
xor
cmp
mov
push
es
dec
pop
mov
pop
aas
or
and
ret
mov
jb
xor
or
sbb
addr16
jecxz
mov
push
jmp
push
js
inc
sub
std
mov
sub
les
pop
outsb
les
mov
clc
jg
lret
mov
add
ss
pop
lea
pop
pop
stc
fs
movsl
fmull
test
fmul
mov
pushf
dec
mov
inc
cmpsb
or
mov
fnstcw
jecxz
std
in
mov
jne
cs
sub
fildl
xor
in
cmp
adc
adc
dec
jle
int
pop
out
fstl
cwtl
mov
movsl
das
jl
xlat
bnd
jge
loope
es
sub
mov
xor
xchg
mov
outsl
stos
test
rolb
movsl
adc
sbb
mov
or
mov
sbb
or
test
jne
and
adc
mov
lods
inc
fisubrl
sbb
je
cmp
fiaddl
lcall
sub
ficoms
repz
mov
xchg
push
rcrl
jno
mov
outsb
dec
lods
jg
xchg
mov
movsl
mov
lds
cmp
adc
std
call
fiadds
mov
or
cmpl
xor
mov
out
ret
int3
inc
cmpsl
pop
fwait
pop
mov
pop
into
aad
mov
fdivs
mov
stos
test
mov
mov
push
loopne
lahf
add
icebp
or
stc
pop
sbb
fstps
xor
lcall
arpl
scas
outsl
jnp
imul
std
outsl
data16
insl
out
dec
mov
xor
jb
das
fidivs
sub
lret
mov
xor
out
int3
aas
loopne
dec
std
xchg
jg
test
sub
mov
outsl
and
les
fdivs
inc
test
dec
xchg
popa
dec
pop
dec
dec
mov
pushl
mov
cld
subl
lock
xchg
test
repnz
fstps
hlt
les
arpl
movsb
push
cmp
sbb
insb
mov
mov
mov
mov
lods
test
push
jle
xor
jmp
scas
mov
mov
lea
lods
jge
inc
roll
fdivrs
push
sbb
and
mov
dec
cwtl
insl
aas
pop
ficompl
shlb
sbb
loope
adc
imul
adcb
dec
icebp
out
sub
outsb
mov
xor
insl
clc
inc
faddp
cmpb
xlat
xor
xlat
inc
or
in
rorb
and
jmp
mov
ja
ret
mov
xor
in
insl
ficompl
xor
ja
call
mov
sbb
cmpsb
mov
cmc
mov
inc
xchg
jbe
arpl
inc
jmp
cwtl
push
adc
rclb
cmpsl
mov
and
fsubl
stc
push
mov
shlb
es
repz
out
mov
fcoms
es
addr16
xorl
push
cwtl
out
dec
or
jmp
enter
into
mov
mov
xchg
sub
jecxz
add
sti
pop
sub
movsl
je
xchg
outsb
push
test
push
push
cli
dec
cwtl
addr16
test
and
jle
xorb
sub
add
and
dec
mov
pop
cmp
jne
lock
sbb
lock
xor
clc
adc
mov
or
mov
jbe
adc
jecxz
pop
adc
cltd
in
sbb
jbe
inc
push
jns
lcall
mov
or
or
sub
fimull
call
mov
icebp
push
ds
jmp
mov
popa
stos
inc
lcall
fwait
jae
stos
adc
inc
aaa
lret
in
sbb
add
rorl
mov
and
inc
inc
sub
jmp
add
out
pop
imulb
into
sbbl
xor
dec
testb
xchg
jmp
adc
mov
inc
dec
fnsave
jl
popa
mov
stc
inc
cli
lods
in
fwait
sbb
lds
jne
pusha
jo
loop
mov
push
mov
fs
mov
outsl
shll
mov
popa
sub
mov
cmpsl
add
in
pop
push
jg
xor
ret
xor
testl
push
or
out
mov
jne
aas
add
sbb
scas
cmpsl
sbb
lcall
scas
je
int
lret
mov
int3
je
jecxz
xor
cwtl
out
pop
loope
jo
lods
inc
scas
repz
rolb
mov
loope
ja
xchg
lahf
cli
clc
into
or
xchg
and
xchg
leave
lea
insl
or
loope
jmp
jle
xchg
inc
push
sahf
xchg
lods
pop
sbb
xchg
fs
mov
cmp
mov
mov
push
dec
dec
dec
mov
cltd
push
movsl
mov
nop
xchg
lahf
sbb
popf
sbb
push
mov
and
popf
jl
scas
pop
mov
xchg
in
ja
sub
ja
fsubr
loopne
xor
imul
push
cs
mov
fistl
fadds
inc
pop
out
mov
ja
scas
mov
mov
dec
push
xchg
shll
and
pop
stos
and
xor
and
cmpsl
xchg
inc
pop
mov
lds
push
xchg
jle
xchg
rcll
sub
pop
in
fcomi
lret
push
xor
sbb
inc
cld
and
xchg
cmp
nop
cmp
mov
add
or
push
imul
cmp
push
out
pop
int3
inc
add
or
ret
lcall
sub
dec
and
cli
jge
ret
mov
cmpsl
push
add
push
mov
lods
lock
push
fsubl
mov
mov
xor
mov
call
out
insb
xor
shll
daa
mov
sti
cmp
enter
popl
sbb
icebp
icebp
aad
and
add
mov
fisttpll
inc
test
dec
inc
inc
js
cwtl
popa
pop
ficompl
repnz
das
sahf
sbb
mov
fistps
loop
sub
cmovbe
aam
aad
cmp
std
sbb
dec
pop
or
shll
and
aaa
mov
lods
mov
push
add
js
or
idivb
sahf
or
pop
imul
roll
add
mov
sub
imul
pop
lret
inc
adc
mov
or
nop
pop
cmc
jno
add
pop
test
mov
jp
cmp
mov
std
iret
arpl
shll
jns,pn
push
mov
xor
mov
mov
jbe
dec
out
sbb
pop
cs
lods
dec
mov
xchg
ja
sbb
lock
push
dec
or
sbb
movsb
cmp
xor
in
adc
xor
mov
insl
mov
popa
cmp
popa
cmpsb
and
dec
into
inc
push
into
lret
cmpsb
mov
and
int3
inc
push
popf
add
adc
aad
dec
icebp
sahf
test
orb
in
je
push
popa
cmp
notb
fs
movsb
mov
pop
cmc
push
inc
or
adc
cmc
jb
icebp
mov
pop
jae
fisubrl
cwtl
divb
scas
pusha
mov
mov
inc
insb
sub
nop
pop
aad
mov
pop
sub
fbld
jne
mov
aam
aad
push
mov
divl
addb
int3
pop
call
mov
or
repnz
es
addr16
lds
sub
xchg
sbb
imul
dec
jg
arpl
ja
or
pop
aam
outsl
dec
psubd
push
aad
imul
cmp
mov
leave
scas
dec
xchg
pop
repnz
mov
push
mov
adc
cltd
outsl
inc
lret
add
xchg
test
shll
shr
mov
cmpsl
xchg
push
mov
mov
in
icebp
repnz
movsb
and
push
addr16
cwtl
fstpt
popa
push
sbb
iret
xlat
lret
or
lret
mov
add
push
sbb
adc
and
cwtl
jbe
int
enter
adc
test
mov
xor
lods
add
jns
pop
adc
in
call
sub
mov
das
scas
int
popf
psadbw
jo
sbb
jmp
nop
sahf
sbb
nop
push
jmp
decl
adc
scas
popf
aam
cmp
cld
out
std
outsb
idivb
pop
or
cmp
stc
imul
mov
out
xor
inc
sar
jns
mov
lcall
clc
addr16
mov
sub
mov
aam
ds
fxam
fsubrl
sub
xchg
mov
adc
mov
les
mov
cmc
in
push
or
cmpsl
jp
fldenv
sub
pop
out
stos
push
jb
mov
xchg
pop
jbe
stc
sub
mov
inc
hlt
arpl
cmp
das
loope
jbe
mov
adcl
lea
addr16
int3
jo
nop
pushf
fists
push
dec
sbb
vpshufd
or
and
mov
test
push
mov
mov
rol
jno
mov
clc
pop
hlt
push
aad
mov
es
push
js
mov
fsubrs
call
das
std
cmp
out
nop
scas
jbe
bound
add
mov
out
adc
xor
sub
xchg
pusha
cmp
push
inc
mov
cmpsl
cmp
or
xor
cmp
inc
cltd
mov
xor
aas
jmp
movsl
mov
aam
pop
cli
fsub
jge
test
mov
in
mov
xor
dec
xchg
inc
sti
popf
and
into
pop
pop
xchg
jp
js
dec
test
movsb
jge
xchg
xor
push
pop
mov
mov
ljmp
dec
sbb
je
inc
xchg
orb
xchg
mov
xchg
lock
mov
bound
and
dec
dec
or
mov
cmp
popa
sub
sub
cwtl
sub
push
in
mov
shrl
sbb
fisubs
movb
inc
jne
fisttps
inc
repnz
sbb
jecxz
sub
repnz
test
rcl
sarb
stos
int3
sbb
mov
mov
adcb
cli
aas
mov
enter
addr16
push
mov
lock
xchg
mov
mov
sub
push
sub
fs
lea
xchg
lcall
sbb
pop
fdivrs
xchg
bnd
aam
add
fisubrs
testb
data16
jae
jl,pn
push
movsl
sti
test
jno
stos
fnsave
pop
jge
or
cld
xchg
mov
add
loope
data16
xor
xchg
and
add
std
int
pusha
fyl2xp1
or
lods
push
pushf
push
das
bound
dec
push
rorb
lret
leave
loope
mov
out
aam
daa
testl
dec
or
into
cmp
jb
sbb
addr16
sub
or
pop
xchg
adc
lret
rcrb
sub
in
push
mov
cltd
outsl
cmp
arpl
pop
js
pop
pop
pusha
jae
ja
xchg
jmp
xor
push
mov
cli
jbe
pop
xchg
scas
rclb
add
stos
cmp
pop
push
call
sbb
dec
mov
push
das
js
test
sub
lahf
pusha
and
xchg
dec
add
jne
xor
rcrl
dec
js
mov
adc
cmp
sub
xchg
pmulhuw
push
inc
out
or
mov
dec
adc
cmpsl
iret
out
dec
mov
insb
movsb
cmp
sub
notl
in
xchg
and
inc
sbb
jb
or
inc
push
mov
sti
cmp
aaa
mov
fisttpl
inc
adc
pop
jns
ret
shll
das
mov
sarb
out
xchg
mov
insl
add
mov
mov
mov
push
push
out
ret
test
icebp
mov
aas
lods
mov
je
push
outsb
jecxz
inc
insl
mov
push
jno
or
cld
or
insb
inc
adc
mov
lret
push
out
xor
in
adc
jge
dec
mov
int
das
mov
add
mov
lods
jo
int3
cmp
jp
pop
cld
xlat
imul
add
cs
lcall
cmp
mov
dec
cmp
ret
lds
shll
cwtl
cwtl
dec
mov
cmp
loopne
cwtl
popa
lcall
add
adc
test
cmp
outsl
adc
xor
xor
or
push
jmp
jnp
sbb
inc
negb
mov
pop
dec
lret
mov
cmp
vcvtsd2si
pop
sbb
movsl
jecxz
sub
iret
or
cmp
movaps
sbb
lcall
pushaw
mov
pop
insb
mov
stos
mov
aas
dec
xchg
lcall
xchg
mov
mov
shll
mov
pusha
mov
and
push
push
push
test
cmp
xor
imul
arpl
shlb
adc
aas
imul
jg
int3
cmp
push
mov
and
fcomps
leave
adc
cmovae
dec
test
cmp
in
mov
push
dec
neg
rclb
leave
sbb
adc
mov
addr16
and
sub
in
inc
insl
int3
or
pop
pop
movsb
pop
fwait
jl
adc
xor
jmp
js
sbbb
xchg
xchg
pop
adc
lock
out
aam
and
loope
lods
xorb
jecxz
enter
arpl
pop
xor
push
cld
adc
push
nop
cld
arpl
mov
stc
inc
inc
movsb
aad
fdivp
xor
xchg
rcrb
lods
xlat
xchg
pop
les
mov
stos
nop
sbb
fiaddl
inc
fs
pop
jnp
inc
jo
sub
mov
shl
xchg
ljmp
stos
test
xor
mov
lods
mov
pop
daa
jecxz
mov
fisttps
mov
popf
mov
jne
cmpsl
lahf
aas
mov
xor
mov
adc
pop
mov
ja,pn
adc
and
and
dec
int3
push
xor
sub
fdiv
dec
cmp
scas
adc
jne
imulb
or
bnd
push
lds
pop
loop
lock
mov
push
mov
push
add
xchg
and
xor
add
fmull
icebp
lahf
sbb
cmc
add
jg
outsl
loopne
mov
mov
sbb
jmp
mov
mov
jp
add
push
sbb
or
push
lret
pop
inc
data16
loop
icebp
push
dec
jmp
fidivl
mov
mov
scas
ja
mov
aam
into
push
cmp
inc
add
repz
pop
fists
xor
add
dec
push
dec
notb
test
dec
ss
insb
xor
mov
xchg
add
loop
movsb
mov
hlt
cmp
jge
sbb
lcall
sub
or
daa
dec
jae
dec
filds
mov
mov
xor
or
inc
and
jle
sbbl
and
cs
imull
stos
add
mov
xlat
scas
lods
lds
push
ja
jno
mov
push
pop
inc
mov
pop
pop
js
out
ss
push
fwait
call
jno
push
stc
inc
xchg
adc
imul
mov
insl
or
push
fcmovbe
push
inc
test
and
push
xchg
aad
or
ljmp
jle
adc
mov
insl
stos
cltd
in
mov
xchg
pop
pop
mov
int3
outsb
pushf
adc
repz
mov
in
cmp
inc
jb
sub
jg
mov
aas
mov
sbb
cmp
aas
test
cmp
cwtl
fs
pop
dec
movsl
sbb
fcompl
cmp
in
ret
jmp
test
mov
out
push
mov
enter
dec
push
push
out
test
and
mov
rcl
push
rolb
scas
sbb
sbb
rorl
ds
les
xchg
outsl
sub
jge
stos
cmp
rclb
cmp
xor
popf
test
xchg
jbe
shlb
sub
jmp
fcoml
or
ds
mov
sahf
in
and
scas
cwtl
out
jg
xchg
push
bound
sahf
out
xor
push
pusha
bound
sahf
and
mov
imul
adc
lahf
repnz
cmp
movsb
inc
pop
sti
outsb
iret
cmpl
mov
push
sbb
imul
push
adc
cmpsb
addr16
push
aad
or
shl
xor
sti
mov
pop
dec
lcall
cld
hlt
dec
dec
in
jne
movsb
test
push
xchg
or
cmpsl
cmpsl
sbb
sub
sahf
push
jecxz
or
xor
pop
fnsave
lcall
pop
repz
test
add
sbb
nop
inc
fadd
lahf
in
mov
sbb
mov
insl
xchg
mov
shlb
mov
in
outsl
cmp
arpl
pop
xor
insb
mov
aas
mov
or
add
loope
or
inc
fsubp
mov
sbb
popf
int3
sbb
sub
fstp
aad
mov
pop
ret
dec
adc
push
popa
add
push
xchg
outsl
or
mov
inc
test
lds
stc
lret
enter
cltd
lds
int3
fnstsw
jecxz
xchg
js
sbb
fs
imull
push
inc
pushf
icebp
daa
add
dec
or
xchg
test
mov
iret
cmc
ja
push
mov
dec
fdivrl
cmovle
repnz
shlb
jecxz
ret
loopew
pop
inc
push
mov
push
pop
mov
fld
scas
aaa
mov
inc
bnd
add
push
adc
in
lahf
pop
lock
movsb
jge
adc
fnstcw
mov
xchg
les
cmp
loopne
stos
leave
aas
out
enter
xchg
loop
call
add
jp
faddp
cmpsl
add
sti
add
lea
stos
sbb
leave
stos
popl
loopne
xor
lahf
mov
mov
inc
fnsave
lods
fldenv
pop
dec
call
daa
sbb
bound
push
add
add
lret
add
repnz
lds
out
jle
mov
pop
jo
iret
adc
pop
aam
fs
cli
daa
sbb
lock
xor
mov
mov
outsl
push
and
popf
sub
punpckhbw
push
mov
cwtl
xlat
push
sub
or
push
inc
push
pop
mov
clc
sub
push
movsb
pop
lock
clc
cmp
rcrl
dec
lea
adc
fmul
and
pop
mov
xor
mov
dec
xor
fsubrl
rorl
mov
add
je
call
cwtl
repz
gs
pushl
xor
cmp
mov
pop
cmc
iret
aad
std
int
out
lea
or
rorl
dec
imul
xchg
lcall
adc
xchg
adc
xchg
lods
cmp
lods
ja
rcll
loop
xor
mov
mov
in
pop
add
fdivp
and
jg
xchg
dec
cmpb
adc
xchg
mov
mov
test
adc
jle
adc
rorb
xor
setb
jae
ljmp
pop
cmp
adc
movsl
push
add
movsb
sbb
xchg
xlat
and
enter
dec
adc
mov
roll
scas
lcall
fldt
nop
pop
cmp
dec
dec
adc
out
rclb
imul
sbb
fs
push
icebp
sbb
in
jle
lds
or
add
pushf
cmpsb
jns
mov
sbb
xchg
jno
pop
mov
push
hlt
pop
outsb
jp
adc
mov
cmp
test
arpl
rep
cmp
push
lret
sbb
dec
cmc
jle
mov
jmp
mov
loop
jg
testl
jmp
stos
testl
add
sbb
bswap
ret
pop
adc
daa
mov
sub
addl
test
pop
push
test
std
movsb
mov
iret
and
icebp
or
cmp
push
imul
popa
push
iret
in
je
dec
pop
mov
iret
rcrl
cmpsb
iret
aam
loope
test
inc
js
fscale
daa
add
fidivl
jle
inc
insl
out
aad
mov
push
and
icebp
jge
cmp
ljmp
push
std
cmp
outsb
dec
call
cmp
popf
test
daa
outsb
push
jbe
out
fdivrs
xor
loopne
int
lea
ret
add
sbb
and
pop
out
daa
pop
daa
mov
dec
pop
neg
nop
pop
pop
jmp
push
rcr
cmpsl
adc
mov
mov
int
add
iret
std
lock
adc
xor
or
fcoms
xor
pop
addl
jg
fcomp
or
push
jo
ret
call
mov
imull
sub
pushf
mov
shll
xchg
popf
fcomip
arpl
dec
inc
pop
loop
pop
outsl
div
add
or
xchg
push
sbb
dec
mov
jne
push
mov
cltd
sti
mov
add
pop
popf
sbb
push
inc
pop
insb
dec
sub
adc
fcoml
js
sarl
aas
fildl
jecxz
add
jae
insb
je
sub
and
aam
repz
pop
cmp
cmpsb
and
cs
mov
movsb
or
sub
je
xchg
lods
cmp
mov
and
xchg
pop
gs
aam
jnp
xor
out
mov
out
pop
and
test
hlt
fwait
add
lods
je
ljmp
add
sahf
xchg
mov
scas
xchg
adc
mov
fstpl
and
mov
out
and
xchg
push
cmp
pop
push
cmpps
or
lret
std
mov
cmp
ljmp
shrb
pop
and
mov
arpl
pop
ucomiss
sbb
ret
xchg
xchg
insl
ficoms
int
out
and
stmxcsr
push
sbb
loopne
lock
and
xchg
mov
and
mov
test
add
xchg
mov
loope
or
sub
mov
dec
lds
cmp
je
scas
or
add
insl
dec
ds
fdivs
add
push
aas
lahf
jo
aas
das
ds
push
adc
test
jno
xlat
xchg
add
xor
jmp
pop
dec
xchg
ljmp
fwait
ja
cmpsb
add
frstor
outsb
push
sub
jae
inc
xchg
push
insl
cmp
jne
jno
idivb
mov
lcall
dec
push
jmp
das
mov
ret
adc
and
outsb
imul
jecxz
scas
js
loopne
cmp
xorl
jns
mov
jnp
insb
adc
push
clc
popa
dec
pop
lret
arpl
aad
fiadds
or
jmp
std
xchg
aaa
push
ret
xchg
and
mov
xorl
pop
mov
aaa
arpl
cmp
pop
packsswb
enter
ret
mov
jp
push
mov
and
inc
adc
test
into
movsb
pop
jg
sbb
jb
jmp
popf
stos
ss
xor
cmp
in
shr
mov
mov
xor
adc
push
pushf
sub
mov
mov
repnz
jp
cmc
jmp
or
clc
mov
roll
pop
mov
mov
hlt
repnz
fs
mov
dec
mov
mov
fs
popl
sub
or
je
fwait
prefetch
jno
cmp
sbb
cmp
daa
push
lock
inc
aaa
cmp
enter
xchg
push
push
push
cmp
pop
ljmp
loope
adc
or
pop
mov
sbb
outsl
cmp
subb
cmp
addr16
or
enter
jl
iret
sbb
adc
add
aam
or
or
and
call
cmp
ja
xchg
and
xor
add
lea
ds
nop
sahf
adc
sbb
lea
dec
pop
lret
xor
out
cmp
sbb
movb
xchg
add
adc
jecxz
xor
push
test
test
outsl
adc
icebp
cltd
and
xchg
cmp
or
lahf
jno
in
xchg
pop
jl
arpl
adc
loopne
or
rcll
fistpl
jne
lcall
shr
int3
jg
xlat
jp
lods
mov
shlb
scas
repz
shll
sbb
icebp
test
adc
mov
inc
fidivl
mov
popf
push
add
xchg
inc
or
test
add
loope
test
sub
lret
sub
push
push
dec
imul
dec
fiadds
testl
aam
mov
mov
sbb
andl
mov
jl
and
inc
cmp
sbb
mov
pop
cmp
add
and
sub
add
cmpb
mov
mov
push
shll
cmpsb
lahf
clc
movsl
imul
cli
movsb
insl
orl
scas
jns
outsb
int
negb
mov
dec
add
in
mov
rcrl
push
sub
add
pop
fldcw
dec
jne
sbb
adc
sub
jle
mov
ds
popf
mov
push
and
lods
push
fdivrl
and
mov
hlt
aas
jo
nop
xchg
adc
sub
je
imul
enter
cmpsl
push
fcmovnbe
iret
int3
andl
daa
xor
popa
jne
iret
shrb
jne
mov
xchg
mov
xchg
movsb
jge
push
rcll
les
ds
adc
imul
in
ljmp
xchg
or
mov
inc
pusha
pop
shl
cmp
fsub
inc
lods
cmp
xchg
pop
shr
add
popf
popa
fmull
or
jl
popa
mov
ja,pt
dec
inc
in
movsl
pop
adcl
repz
jge
inc
popf
mov
fbld
push
sub
push
addl
pusha
decb
push
pop
inc
lods
adc
push
mov
sub
fsubr
mov
fisubrl
hlt
pop
negb
fs
mov
fisubl
rcr
movsb
mov
sbbl
pop
popf
bnd
fisttpl
sbb
jns
scas
push
pusha
or
int3
mov
adc
mov
sti
dec
jmp
ds
mov
fsubrs
jo
shlb
cmp
enter
push
sbb
pop
push
mov
jb
pop
std
in
call
or
push
mov
loopne
jmp
fistpll
jg
xchg
faddl
jp
aam
dec
push
dec
outsl
sahf
aad
mov
in
jns
addr16
icebp
test
ret
cmc
jge
inc
js
mov
mov
mov
sar
mov
push
stc
dec
jge
jp
inc
fldenv
out
mov
cli
repnz
adc
fldcw
ficoml
mov
cmp
ret
adc
test
popa
or
dec
inc
or
fistpl
add
jb
xchg
fs
cmc
cli
pop
test
inc
cwtl
mov
xor
lods
fisubs
ret
scas
push
repz
and
lcall
stos
sbb
sbb
cmp
and
dec
stos
xor
cmpsb
ret
out
pop
je
jmp
push
repz
mov
loop
cwtl
loopne
negl
into
sub
divl
jecxz
mov
ret
add
xorl
outsb
or
cwtl
mov
lahf
test
mov
cltd
out
sbb
push
lea
dec
jl
cwtl
sbb
pop
lds
sbb
aad
push
js
lods
popa
shr
cmp
xor
jmp
movl
ret
movsb
pop
dec
and
push
in
push
arpl
inc
fdivs
jl
ss
xor
mov
mov
jae
in
lods
dec
cmp
ret
clc
ret
mov
xor
js
push
and
cwtl
ret
outsl
add
leave
lahf
cli
xor
shlb
in
cmp
mov
cwtl
xchg
rcl
rcrb
test
fmul
inc
xchg
add
imul
adc
inc
loop
popf
fisttpll
or
cmpsl
ds
std
mov
adc
add
cmpsl
xchg
jno
pop
punpcklbw
xchg
add
mov
fisttps
xchg
push
popa
xlat
pop
or
insl
and
divl
jg
jne
jbe
mov
inc
jne
sbb
insl
xorb
rorl
sub
insb
or
je
push
movsb
enter
inc
outsb
push
scas
fnstsw
jge
sub
leave
inc
jno
stos
lods
push
pop
ljmp
jmp
in
jge
and
lcall
out
mov
pop
gs
shl
mov
scas
pop
dec
jge
pop
ss
cmp
leave
nop
out
les
sub
into
cmc
and
ret
std
inc
sub
in
subb
fdiv
cmpsl
sub
jmp
ret
mov
arpl
movsb
loope
mov
nop
sbb
inc
lahf
sbb
adc
int3
xor
out
addl
cmp
ljmp
add
pop
cld
xor
sahf
mov
dec
jp
sub
xchg
adc
ja
pushl
fistl
push
addl
push
add
pop
inc
sbb
pop
jp
insb
andl
jo
stos
jno
adc
xor
add
mov
cmp
imul
or
jg
push
jmp
sub
insl
call
jge
aam
jns
lock
lea
jno
call
imul
pop
insl
adc
or
and
das
pop
and
add
fistl
dec
push
aaa
je
subb
sub
shl
or
out
outsb
jbe
popa
outsl
fcomps
add
fwait
jae
mov
test
std
push
pop
inc
test
insl
aad
iret
inc
out
jmp
test
loope
iret
mov
xchg
push
cwtl
das
bound
daa
pop
or
xor
or
mov
push
and
push
jl
push
push
xchg
xchg
add
inc
push
xor
imul
jle,pn
push
stos
jo
add
or
out
mov
mov
cmpsb
jl
adc
stc
lret
test
stos
mov
and
cmp
dec
cmpsb
ljmp
adc
in
pop
pop
sub
pop
pop
mov
xor
in
xchg
mov
cmpsb
add
sbb
or
xchg
lahf
mov
lcall
dec
jle
mulb
mov
pushf
pop
mov
mov
cmp
pushf
cmp
push
xor
dec
cmp
rolb
mov
cli
leave
cld
mov
push
sub
cmp
hlt
ret
lahf
imul
mov
js
imul
cmp
lods
fwait
cmc
orl
xor
stos
sbb
outsb
sbb
xchg
xor
cmp
jb
test
inc
adc
sbb
dec
stos
loope
dec
repz
jns
pop
dec
cmp
push
or
push
and
cmpsl
outsb
jmp
pop
jle
add
fsub
adcl
sbb
dec
cmp
test
daa
mov
xor
loope
mov
jle
cwtl
mov
frstor
icebp
sahf
cmpsl
fmul
push
mov
xor
movsl
xorb
and
loop
push
mov
jle
xchg
jb
negl
xor
lahf
push
add
ret
das
bound
cmp
xor
movsb
xchg
and
add
mov
xchg
sarl
mov
lods
mov
ret
pusha
push
pushf
repnz
add
repz
sbb
xor
int
std
out
jp
or
cs
push
into
loopne
sarb
xor
cmpsl
mov
inc
hlt
or
lock
gs
xlat
in
out
fistpl
mov
dec
xchg
ljmp
mov
shrb
sbb
push
dec
aam
pop
fwait
or
mov
cmp
or
sbb
into
xchg
popf
pop
sbb
inc
cli
lods
cmc
les
lret
push
cmpsl
fsubrl
iret
shll
aad
pop
cmpsb
cwtl
add
sub
fwait
orb
lret
addr16
mov
xor
adc
movsl
cmpsl
ds
rorb
inc
xchg
shr
fisubrl
ss
in
adc
fidivs
adc
lret
leave
out
pushf
aas
or
pop
cwtl
push
pop
jnp
fs
pop
ja
sbb
cmp
cmp
lret
mov
or
sub
cmp
sub
cs
imul
add
lock
adc
add
mov
cmp
dec
jmp
jne
xor
addr16
cmc
pop
push
iret
sub
and
cmp
xchg
mov
inc
ret
sbb
loop
lods
cmpsb
imul
xchg
mov
mov
pushf
je
data16
loop
addr16
mov
inc
mov
loop
push
fdivr
pusha
mov
jmp
sub
pop
lret
mov
popa
dec
mov
fwait
lods
push
and
std
imul
sub
jnp
fisubrl
icebp
aad
xchg
add
lods
popf
jge
out
adc
and
pop
out
cmpsb
push
add
xchg
shll
out
rcrb
out
les
repz
pop
stos
push
jno
dec
cmp
push
scas
out
or
scas
movsb
dec
cmp
leave
pop
cmp
mov
insl
mov
stos
repz
or
add
mov
or
ja,pt
dec
in
mov
mov
ret
aad
pop
test
cmp
push
or
cmpsb
mov
loope
movsb
push
lret
or
xchg
inc
pop
and
xchg
adc
shlb
mov
rclb
pushl
adc
cmp
das
scas
fwait
lds
cwtl
jle
pusha
xchg
mov
popa
jl
and
pop
xorb
inc
mov
sub
cwtl
popa
mov
ret
lcall
add
inc
or
jbe
pop
jmp
cmp
inc
scas
andl
lret
mov
cmp
shrb
addr16
aas
ds
mov
jae
icebp
lret
dec
daa
mov
xor
adc
inc
enter
push
out
add
lidtl
xchg
inc
das
outsl
js
call
xchg
js
cmp
cmpsb
scas
ljmp
add
repz
push
sub
test
fcmovbe
inc
fldt
adc
pop
in
mov
pop
ds
xor
jge
mov
mov
test
std
imul
loopne
adc
fxch
insl
loopne
orl
jns
out
aaa
add
into
sahf
fisubs
xor
int
push
dec
mov
jno
pusha
insl
fisttpll
sub
repz
loop
mov
test
ja
dec
push
stos
bnd
loopnew
pop
inc
jecxz
mov
in
sbb
push
jne
test
dec
adc
bound
push
pop
pushf
push
add
fcmovb
dec
scas
xor
fs
fbstp
jno
jge
in
push
xchg
mov
or
cwtl
stc
adc
incb
inc
and
mov
aas
out
into
mov
fists
out
cs
inc
cmpl
xlat
fldcw
xchg
cld
mov
xorb
jnp
mov
push
stos
add
jno
sbb
imul
ret
jnp
pop
insw
cmp
sub
mov
call
dec
das
lea
jb
jle
jg
mov
fistpll
ret
mov
or
iret
adc
push
lods
adc
pop
loop
outsl
sbb
xlat
cltd
add
pop
rcrb
xchg
add
jle,pt
xor
dec
sub
sbb
pop
inc
mov
mov
sti
jb
dec
int3
jmp
mov
mov
inc
jb
testb
push
sbb
punpcklwd
repz
xor
pushf
pop
and
mov
pop
jae
inc
test
loop
or
test
xor
cmp
lcall
mov
push
xor
fidivrl
in
sbbb
and
movsb
mov
mov
nop
xor
mov
pop
cmpsb
insl
or
loop
cmc
mov
fnsave
inc
adc
icebp
lret
inc
dec
dec
cmp
dec
cmpsl
and
and
jb
je
add
xchg
cld
lods
mov
or
inc
cmp
lods
mov
cmpsl
lret
int
adc
mov
cld
mov
aam
xchg
adc
pop
loope
out
xchg
xor
aaa
filds
cmpsb
xchg
jmp
insb
pusha
stos
sub
inc
sarb
clc
xchg
hlt
adc
sub
pop
test
std
jbe
sub
or
push
or
or
xchg
push
fwait
add
sbb
add
in
repnz
mov
out
dec
in
sbb
push
fisubl
jbe
xor
adc
cmp
mov
inc
cmp
shlb
xchg
add
mov
push
mov
clc
and
outsl
cmp
std
mov
adc
xchg
icebp
popf
fmul
mov
xchg
sti
loopne
mov
ss
std
decl
or
stos
pop
push
xchg
test
cwtl
jnp
into
jns
mov
push
mov
cmpsl
xlat
jle
fstpl
rclb
jge
push
rorb
scas
in
test
adc
stos
in
mov
aad
je
bound
cs
fcoms
cmp
fstl
dec
jmp
imul
int
add
aaa
lahf
push
shlb
popa
cmp
jg
shll
pop
clc
add
adc
mov
inc
jecxz
popf
mov
mov
out
jb
jae
lds
aad
add
ss
mov
idivl
jge
data16
xlat
or
ds
test
mov
mov
hlt
faddl
mov
scas
cmpsl
xchg
jne
lret
or
test
int3
dec
dec
sbb
push
cmp
add
add
in
sub
daa
in
adc
hlt
mov
jo
xchg
out
int3
sbb
repnz
roll
adc
adcl
lds
mov
mov
and
xchg
or
push
pop
push
jp
mov
mov
jo
or
xor
jb,pn
add
lods
cwtl
daa
std
fnstenv
mov
mov
xchg
enter
pop
js
inc
adc
sti
loopne
mov
in
je
mov
xchg
cmp
stos
out
mov
push
push
push
popf
inc
mov
popf
repnz
add
cli
mov
xor
outsl
or
jg
out
mov
cmp
iret
sub
cld
aas
lahf
cwtl
xchg
push
leave
xchg
daa
out
lret
inc
pop
clc
arpl
int
sub
push
hlt
cmp
lock
cmp
sarb
cwtl
push
loope
pop
xchg
cltd
bnd
ss
orl
push
movsb
out
or
sub
adc
inc
cmp
sbb
mov
jge
mov
mov
dec
pop
into
sbb
out
lret
add
ss
add
and
sbb
pop
jmp
gs
insb
xchg
mov
cmp
lret
les
stc
subl
hlt
lcall
call
inc
mov
dec
bound
lcall
add
stc
cmp
or
lea
jb
pushf
or
jecxz
mov
ja
sub
cwtl
dec
sahf
mov
imul
cs
sbb
cltd
jae
fwait
mov
dec
ret
mov
cmpsl
add
imul
cs
lea
repnz
sti
stc
xchg
fnstenv
pop
loop
push
xor
pop
out
out
ret
add
idivl
sbb
sbb
mov
adc
cmp
xchg
je
das
fldcw
cs
bswap
mov
adc
jecxz
xorb
test
xchg
push
push
pop
adc
daa
mov
data16
dec
loopne
lahf
push
inc
outsb
sub
loope
loopne
dec
hlt
jne
sbb
and
dec
fimull
mov
stos
and
enter
jmp
pop
and
xor
mov
lret
pop
popa
popf
push
mov
out
popa
popf
cmp
xlat
lods
sub
mov
lods
mov
add
add
pop
adcl
call
insb
es
outsl
push
inc
mov
pop
mov
add
movsl
call
fisubl
jge
fs
lahf
jns
loopne
in
sbb
imul
inc
fmulp
push
fs
call
mov
mov
pop
xlat
lods
adc
pop
icebp
cli
adc
cltd
imul
mov
mov
test
jbe
pop
pop
addb
sbb
or
test
inc
cmp
movb
nop
and
sahf
adc
cmp
std
pop
push
sbb
nop
cmp
clc
jbe
mov
fwait
call
jb
jecxz
add
mov
repnz
mov
jmp
push
insb
jge
lods
jnp
push
cmp
out
cmp
xchg
repz
sub
addl
cmp
fwait
lcall
pop
dec
mov
jnp
iret
add
mov
shll
ljmp
cld
push
mov
xor
and
xor
out
cmp
cltd
add
popa
jecxz
pusha
mov
push
mov
nop
cltd
out
xchg
mov
fcompl
int
or
call
mov
in
push
imul
xor
daa
cmpsb
js
lock
push
sar
jb
mov
add
mov
cmp
sub
stos
hlt
mov
inc
jo
sbb
bound
imul
cli
xor
dec
mov
or
and
jb
rol
sbb
imul
jg
loop
inc
pop
sub
int3
push
xlat
jecxz
push
dec
add
pop
test
icebp
test
jb
push
add
inc
cmp
cmp
popf
jne
jle
pop
cwtl
cmp
add
adc
stos
lret
xor
out
roll
fisubs
cmp
mov
mov
ljmp
dec
stos
xor
fsubs
add
sahf
mov
sub
or
mov
lods
lahf
xchg
mov
daa
call
shrl
adc
repz
jg
xchg
test
or
mov
adc
xor
ret
sbb
stos
and
insl
enter
mov
jne
push
enter
outsb
jbe
aad
rorl
mov
mov
jg
fcmovnu
out
hlt
out
sub
mov
jl
clc
inc
or
push
daa
jl
test
bound
call
xchg
notb
adc
add
push
mov
mov
out
std
je
outsl
push
sbb
icebp
mov
and
loope
jb
sbb
and
movsl
mov
scas
or
inc
lds
insb
imul
sub
pop
dec
jle
out
sub
outsb
push
push
push
andl
loopne
dec
and
mov
mov
es
movsl
mov
leave
nop
mov
cmp
inc
cmp
ds
ret
dec
imul
mov
ss
lods
pop
xor
jb
add
mov
xlat
cmp
push
test
dec
add
mov
ficoml
dec
xchg
pop
lock
in
xchg
cmp
pop
adc
gs
cmp
add
not
and
popa
ds
sub
les
loop
roll
inc
xlat
xchg
pop
divl
jb
add
mov
mov
call
mov
mov
imul
inc
out
in
loop
jg
adc
xchg
or
je
in
in
ret
popf
adc
pop
push
or
fs
clc
insb
test
into
push
leave
jmp
pusha
test
sti
test
sbb
mov
mov
cwtl
inc
and
daa
sub
inc
cmp
inc
dec
rolb
rcl
pop
xchg
mov
lods
adc
loope
jle
rorb
mov
push
xchg
lret
andl
mov
stos
fldenv
dec
movsb
sbb
aas
jg
mov
xchg
data16
inc
stos
lock
adc
jle
cmp
cmp
xchg
pop
mov
imull
into
dec
add
popf
outsb
and
out
push
dec
int
ret
clc
cmpsb
xor
mov
sub
psubq
stos
dec
dec
das
jbe
rcll
xlat
xor
adc
orb
mov
lds
sbb
add
pop
faddl
mov
fdivs
cmp
dec
stos
mov
dec
dec
int3
jo
pop
add
ret
and
xchg
xor
xchg
mov
dec
add
out
aas
cmpsb
xchg
or
xor
jb
insl
or
sbb
mov
cmp
sbb
pop
stos
cmp
das
aam
in
push
mov
jmp
mov
xchg
lods
and
add
mov
cmp
mov
loopne
cmp
std
inc
dec
insb
cwtl
inc
xorl
rcrl
sub
hlt
filds
pusha
push
and
mov
push
pop
sahf
pop
xchg
js
psraw
xor
mov
or
fs
and
add
loopne
sahf
adc
cmpsl
push
add
mov
jo
aas
mov
adc
and
iret
popf
jo
ret
add
les
adc
lea
inc
pushf
mov
in
repnz
cmp
test
jg
push
xor
loop
adc
push
shr
push
dec
mov
xchg
sub
lock
insl
cmc
add
popa
push
in
mov
or
and
lds
inc
mov
lahf
sub
adc
mov
loopne
adc
inc
xchg
mov
xchg
inc
lcall
out
rcrb
pop
je
lock
flds
test
ficoml
xchg
push
mov
out
add
cmp
add
addr16
jb
xchg
xchg
jle
mov
testl
jl
test
fisubrs
shlb
jge
sbb
pop
jp
sub
ja
sbb
fisttpll
in
jnp
ret
mov
fisubrs
movsl
loope
jl
mov
roll
push
xchg
adc
clc
jnp
dec
daa
fs
mov
and
aaa
cmp
inc
mov
sbb
pop
add
jns
clc
aad
jo
cmp
mov
mov
push
mov
lods
xchg
sbb
cli
jns,pt
jno
or
arpl
or
aad
andb
mov
fs
inc
or
xchg
dec
jle
aad
aam
mov
sub
dec
pop
ret
loope
in
lahf
adc
outsl
mov
jp
in
popf
shlb
xchg
add
add
mov
dec
sub
or
and
fiadds
js
xlat
loope
das
insl
add
test
testb
fimull
dec
dec
push
bound
jmp
test
jno
aaa
ds
push
mov
fldenv
in
jge
test
outsl
dec
stos
insl
add
dec
in
repnz
mov
sbb
std
adc
push
stos
add
xor
sbb
lahf
cmp
leave
pop
ljmp
mov
or
enter
lods
pop
in
sub
scas
adc
in
cmp
pop
std
and
sbb
xor
sub
ss
add
int
lods
mov
adc
leave
dec
or
xor
nop
push
out
ret
jmp
lret
stos
shll
inc
xchg
hlt
push
repnz
cmp
pop
lods
lods
icebp
ret
push
mov
or
sbb
mov
fists
lods
js
mov
adc
es
xchg
mov
stos
aaa
and
adc
lahf
repnz
or
imul
lret
adc
mov
loop
pushf
cmp
jno
out
out
and
sbb
mov
out
fnstsw
xor
adc
jo
fsub
sbb
loop
test
cmp
scas
out
sbb
rcrb
testl
or
cmp
loopne
mov
pop
or
adc
adc
or
orb
pop
stc
cli
js
sbb
imul
subl
data16
out
pop
data16
sbb
rorl
call
mov
mov
clc
lret
nop
pusha
call
cld
aad
pop
xchg
fldcw
jmp
ret
movsl
je
xchg
ret
out
test
jl
mov
push
pop
aam
sbb
pop
mov
ss
out
bswap
shr
loope
adc
pushf
pop
fmul
daa
pop
adc
icebp
sarb
mov
xchg
push
xchg
and
jo
hlt
or
jbe
cmp
data16
clc
pusha
mov
insb
sbb
cmpsb
stc
ss
add
xor
mov
incl
sub
fiadds
dec
push
inc
in
cmc
and
pop
mov
pusha
punpcklwd
rcl
ljmp
jo
aam
pusha
pop
jb
lock
and
and
int
mov
xchg
adc
push
jne
stos
xchg
movsb
or
mov
jo
daa
es
push
pop
mov
aam
or
pop
adc
inc
nop
xor
sbb
pop
jnp
out
mov
popa
cmc
in
adc
shll
je
push
xchg
jbe
popa
jno
pop
jno
shlb
xchg
ja
cwtl
xchg
add
mov
fldl
subps
add
xchg
test
mov
xchg
mov
inc
or
xchg
cli
mov
mov
mov
lock
xor
xlat
bound
inc
push
stos
ja
adc
cmc
inc
sbb
adc
push
pop
mov
sbb
or
jnp
iret
test
mov
sub
outsl
test
dec
aas
addl
jae
rorb
pop
xchg
dec
insl
or
sub
mov
fcom
sbb
xchg
sub
mov
in
out
cmp
pop
adc
es
ds
pop
nop
repnz
fwait
repnz
sub
mov
mov
pop
pop
test
nopl
lock
imul
sbb
out
mov
pop
into
xor
add
sub
push
lahf
mov
cmp
dec
ret
enter
adc
mov
cltd
stc
sub
lods
negb
and
aam
fcmovnbe
push
mov
out
loope
fidivs
vmovmskps
ljmp
cwtl
ljmp
sarb
mov
scas
push
incb
test
pop
or
inc
push
mov
pop
cmp
mov
mov
fwait
sub
dec
mov
sbb
ret
cld
cmp
and
sbb
adc
cld
mov
and
push
inc
pop
xchg
mov
test
std
stos
sbb
jg
add
imul
imul
mov
popa
popl
xor
dec
scas
dec
lcall
je
ljmp
mov
mov
xchg
fsubs
jae
pop
adc
adc
add
push
inc
mov
add
movsb
pop
lds
pop
movsl
mov
stc
test
cmpsl
sub
pop
das
or
cmp
shll
in
inc
repnz
outsb
stos
push
cmp
inc
fsubr
sbb
jmp
inc
xor
push
xchg
int3
cmpsl
pusha
icebp
cli
jl
mov
and
xchg
mov
dec
xchg
and
in
add
and
sbb
insl
cmp
push
int3
adc
add
ja,pn
jg
cmp
adc
jns
mov
fsubl
mov
cltd
pushf
shl
fistpll
movsl
outsb
iret
push
pop
xlat
pop
add
cmc
push
xlat
sbbl
jns
test
or
jmp
mov
xor
pop
push
xorb
xlat
out
and
mov
mov
xchg
dec
pop
mov
dec
dec
outsb
lcall
jo
xchg
xor
or
ds
into
outsb
pop
fisubrs
push
sbb
jle
or
xor
mov
repnz
mov
pop
sarb
popf
push
repz
enter
sbb
push
ljmp
mov
push
jno
jae
xchg
add
xchg
pop
sarl
jg
fdiv
ss
mov
xchg
xchg
mov
sub
sub
imul
cmp
push
xchg
mov
adc
add
inc
and
adc
aam
push
aad
ficoms
xor
sbbl
sub
push
ljmp
or
and
or
sarl
stc
mov
cld
jmp
aaa
pushf
incl
adc
dec
xchg
ds
adc
adc
ja
stos
dec
adc
fildl
pop
pop
sub
js
orl
rorb
outsb
xor
fwait
jbe
test
lret
lret
test
arpl
in
add
fwait
adc
cli
mov
clc
bound
out
stos
arpl
push
int
cwtl
mov
jbe
push
sbb
xchg
roll
mov
xchg
loop
outsb
push
pop
je
pushf
push
sbb
dec
push
inc
sub
in
sbb
push
dec
sub
push
fistl
scas
push
xchg
mov
pop
call
mov
outsb
jge
dec
mov
jg
adc
pop
lcall
std
or
mov
push
movb
push
dec
push
out
mov
sub
pop
sub
insl
ja
je
push
gs
and
sarb
leave
mov
out
and
lds
mov
lret
sti
xchg
popf
lods
xchg
mov
xor
shlb
sbb
cmp
clc
leave
leave
stos
cltd
movsl
push
mov
lods
out
mov
sti
push
cmpsb
bnd
xor
xor
mov
mov
mov
mov
adc
or
push
int
pop
and
mov
scas
pushf
inc
sahf
sub
fs
lds
ficoml
cmpsl
and
loop
pop
adc
mov
dec
ds
leave
push
es
outsb
fsubrs
fnstenv
stos
jo
add
mov
cli
jbe
push
jge
rcrl
arpl
or
push
daa
xlat
mov
cli
aas
dec
ror
dec
out
insl
call
lcall
mov
inc
movsl
mov
jnp
ja
cmp
mov
call
call
mov
lea
js
mov
mov
aam
lretw
xchg
cmp
out
jp
push
ficompl
dec
fnstsw
xor
mov
imul
lock
ljmp
jp
mov
out
clc
loopne
pop
sahf
add
outsb
mov
push
mov
adc
imul
ror
popf
pop
mov
push
ret
pop
sub
or
add
je
cwtl
xchg
mov
sub
sub
pop
loope
cmc
lcall
xchg
dec
mov
xrstor
fstps
cmp
aam
ret
shlb
aaa
push
gs
out
mov
out
push
fucomp
sarl
mov
or
lahf
pcmpgtd
push
cltd
mov
out
dec
ds
loope
call
lods
add
fs
ror
imul
pop
jb
sbb
pop
add
inc
sbb
inc
into
out
mov
ss
dec
int
dec
xlat
adc
out
test
cli
jl
adc
jo
jae
mov
mov
cs
cwtl
repz
cmp
shl
mov
jg
repz
mov
nop
out
insb
xchg
loopne
cmp
aaa
mov
test
pop
sub
inc
call
mov
xchg
iret
hlt
inc
add
lds
push
or
test
xchg
xorb
jp
stc
imul
cmp
ja
outsb
cmp
xchg
in
int3
mov
dec
pop
push
loop
xor
xor
inc
fmuls
insl
fistpll
fs
jne
addr16
xlat
cmp
sarb
dec
mov
mov
in
cmp
sbb
notl
stc
sbb
xchg
scas
int
scas
jnp
mov
and
fcmovnbe
inc
jmp
je
inc
pop
sarl
repnz
xchg
dec
push
incl
mov
and
and
outsl
arpl
pop
xor
mov
negl
xor
ds
icebp
push
data16
aam
mov
mov
sub
aam
ss
pop
sub
inc
mov
enter
cmp
push
mov
bound
mov
mov
ficompl
jl
or
cmp
outsl
std
inc
out
push
inc
adc
cmp
lcall
std
fnstcw
sbb
lret
dec
ret
dec
cmp
mov
out
add
fidivs
dec
pavgb
insb
pop
xor
dec
sbb
mov
loopne
enter
test
data16
sub
mov
lret
xor
loopne
sub
sub
test
mov
int3
jle
pop
mov
sub
jle
mov
push
jae
outsl
sub
push
xchg
lods
lods
dec
out
mov
push
mov
add
xchg
or
idivb
pop
lea
xlat
ljmp
gs
dec
jg
adc
mov
mov
rcll
jp
ret
in
out
ret
testb
xchg
inc
shll
loopne
xchg
out
push
sub
jbe
lar
mov
xchg
aam
pop
cmpsl
stos
popf
xor
add
mov
lea
fldenv
popf
adc
push
clc
sub
loopne
jl
out
xlat
push
and
inc
fwait
stos
xchg
gs
test
outsl
sahf
aam
movsb
push
nop
pop
push
fcoms
fcmovne
notb
xchg
aad
sbb
lret
ljmp
mov
enter
xchg
adc
iret
jne
inc
pop
xchg
cld
sbb
inc
rcll
mov
mov
push
rorb
mov
and
ret
fists
pop
fnsave
or
pop
mov
xchg
jp
pop
xchg
adcb
into
jl
sbbl
jbe
sbb
mov
jae
lds
les
sbb
outsl
test
shl
rcll
dec
push
imul
jae
jg
pop
stc
out
mov
push
std
jge
mov
dec
cwtl
mov
pop
and
dec
cmp
out
outsl
sbb
ss
es
mov
aam
in
icebp
sbb
cmpsl
pop
lods
jae
and
xchg
je
pop
push
pop
mov
imul
push
imul
ds
mov
insb
mov
jne
fists
mov
or
aas
mov
repnz
popf
jmp
mov
negl
addr16
call
roll
jne
lds
pop
pop
cld
push
pusha
xor
adcl
dec
jo
scas
test
mov
sbb
pop
out
pop
aam
fsubr
jno
aad
and
into
cmp
push
ljmp
cltd
jle
cli
int3
cwtl
outsb
stos
push
mov
aas
push
mull
jecxz
adc
cmp
or
xchg
gs
in
jne
inc
sbb
pop
aas
ret
inc
rol
popa
test
movsb
stos
jne
enter
sbb
call
inc
pop
ds
lods
adc
mov
mov
push
xlat
mov
xchg
sbb
das
aas
lcall
or
jp
cmpsl
and
addb
das
and
sub
sub
orl
ror
test
push
rorb
cli
jle
add
jmp
mov
sbb
je
mov
cmp
jne
in
cs
pop
push
or
sbb
or
mov
lret
dec
push
xlat
test
std
adc
jnp
mov
push
push
jmp
push
dec
pushf
jnp
stos
push
out
fdivrs
mov
inc
dec
daa
dec
movsl
dec
mov
out
xor
cmpsb
hlt
inc
out
pusha
adc
cmc
nop
addb
iret
xor
loopne
fimuls
testb
ret
push
pop
test
enter
lcall
rorl
andb
outsl
out
sub
inc
test
xor
mov
scas
repnz
or
insb
jb
xor
stos
mov
jp
jnp
sahf
aam
pushw
stc
push
stos
insb
dec
out
push
mov
outsw
pop
addr16
stos
gs
pusha
fisubs
xor
mov
cmp
std
testl
jb
mov
jmp
fsubr
movsb
add
inc
clc
cmp
adc
repz
and
mov
mov
sbb
fistps
add
mov
std
xor
nop
outsb
lds
icebp
cmp
xchg
fsubl
into
loop
fisubs
dec
jecxz
push
pop
xchg
sahf
ss
and
fwait
sbbb
inc
sub
add
pusha
ljmp
pop
jp
inc
inc
js
xchg
std
xchg
test
gs
inc
clc
xor
push
mov
inc
inc
jo
mov
jl
ret
arpl
aaa
or
pop
lea
xchg
push
vcvttpd2dqy
gs
int
sbb
test
sti
mov
je
jne
popa
mov
inc
or
adc
xchg
push
inc
pop
mov
ss
add
jge
sbb
adc
in
xorl
or
mov
dec
fmuls
add
test
int
cmp
fcmovu
xor
cmp
mov
dec
insl
and
outsl
lods
pop
mov
pusha
mov
popf
insl
cmp
adc
lea
bound
imul
sbbb
adc
sub
jb
jno
sbb
mov
imul
popf
mov
jo
push
pop
and
mov
fsubl
out
dec
xchg
jg
push
pop
ja
imul
pusha
xchg
pop
push
pop
inc
mov
stos
pop
jnp
inc
push
xchg
sub
sub
adc
mov
shr
imul
movsb
sub
fwait
and
jge
fs
inc
out
sti
fiaddl
lahf
mov
sbb
nop
loope
mov
je
ja
adc
lahf
dec
cltd
rcrb
push
imul
sbb
leave
mov
cli
xor
lcall
jnp
aad
dec
inc
and
lock
xor
jmp
ja
pop
mov
ja
incl
pop
xor
xor
add
fidivrs
lret
mov
pop
ds
xchg
addr16
aas
xchg
loop
and
test
push
popa
sbb
cmp
push
inc
xchg
test
jle
inc
movsl
jno
mov
cmp
mov
sub
mov
sub
push
ja
or
inc
test
pop
xor
xor
adc
popf
dec
cmp
je
in
aam
rcll
jl
mov
sti
dec
in
imul
into
pop
adc
outsb
aad
sbb
mov
pop
fwait
imulb
jg
cmp
cmp
push
sti
dec
jae
pop
xchg
das
xor
xchg
out
or
cmp
lret
in
xchg
test
stc
cld
aas
adc
or
dec
adc
fucom
cmove
or
iret
ret
add
push
mov
lret
mov
inc
rcrb
jmp
leave
jp
add
push
dec
movsb
cmp
ljmp
jmp
imul
pop
mov
mov
pop
cmp
pop
jno
ds
negb
out
scas
dec
add
arpl
sarb
insl
mov
test
pop
adc
dec
fnsave
bound
fs
fnstcw
mov
jbe
pop
arpl
lcall
rorb
enter
add
push
insl
rcl
std
adc
fnstenv
bound
cmpsl
and
inc
setg
sar
push
xor
inc
daa
test
lock
add
out
mov
mov
movsl
sub
pop
repnz
cmp
mov
push
jae
arpl
cmp
cld
fwait
or
aam
xor
imul
leave
ss
mov
dec
jb
mov
outsl
fnsave
popf
jae
imul
pusha
or
add
mov
jae
inc
cmp
xchg
push
pop
mov
inc
push
leave
adc
xor
add
sub
dec
out
jnp
push
das
xchg
inc
das
mov
cli
jl
jecxz
popa
pop
lods
mov
out
fs
ds
scas
adc
dec
pop
and
fidivrs
lods
mov
loop
jg
mov
lahf
std
cltd
sub
sbb
xor
arpl
scas
stos
inc
sbb
nop
cmp
cmp
mov
mov
insb
mov
add
orb
push
inc
jo
stos
adc
dec
subb
mov
sub
add
dec
ljmp
int3
lret
ret
das
lahf
dec
nop
mov
inc
dec
cltd
cltd
repnz
movsl
or
jb
in
cmp
in
inc
ret
ja
insb
pop
lcall
pop
in
es
in
aam
icebp
decl
enter
filds
dec
pop
push
push
adc
xchg
mov
sar
and
pushf
addr16
mov
push
mov
scas
sbb
dec
shlb
dec
orl
cmp
push
xchg
adc
or
jle
jo
dec
and
push
fisubrs
jmp
cmp
or
push
popa
sub
pop
push
add
int3
sahf
cmpsl
into
dec
inc
pop
push
out
inc
pop
imul
xchg
cli
xchg
jo
jg
pusha
mov
sbbl
dec
xchg
adc
leave
pop
mov
mov
push
xchg
loope
and
add
adc
jle
xorps
push
inc
test
call
mov
orb
orb
lret
mov
mov
fcomps
cmpsl
push
xor
leave
mov
inc
adcl
out
jle
retw
mov
xchg
jge
and
jns
push
cld
ja
iret
test
mov
rol
int
pop
jnp
jae
xchg
inc
test
lcall
scas
fidivrl
ja
mov
pop
jl
mov
outsb
or
int
lods
test
add
jp
inc
mov
aad
scas
ficoms
adc
jno
movsl
push
cli
pop
jae
or
cltd
lahf
push
lret
push
mov
pop
push
cmp
daa
lods
dec
call
sarb
xor
sub
lea
dec
fstps
shll
fwait
neg
repz
sub
aaa
and
sub
jp
pop
mov
imulb
outsl
push
pop
inc
mov
inc
xchg
jno
stos
xor
sub
lods
cmp
push
mov
xchg
test
mov
sbb
roll
pop
and
scas
push
scas
dec
mov
xchg
pushw
pusha
cld
mov
pop
std
adc
pop
and
mov
mov
mov
shrl
cli
cltd
jno
mov
inc
xor
inc
aas
hlt
mov
push
and
xchg
pop
ja
test
sbb
mov
stos
add
xor
xchg
roll
dec
cmp
dec
addr16
mov
int
jl
imul
scas
inc
aaa
outsl
lods
leave
xchg
fadds
jle
adc
sbb
cmpsb
jle
nop
fnstsw
ficoms
inc
ja
mov
xchg
clc
scas
lods
dec
mov
push
push
mov
xchg
mov
lds
fidivl
das
mov
and
jecxz
sbb
rolb
into
pop
xchg
inc
jge
sub
fucomp
mov
shlb
das
xor
mov
inc
sub
push
call
es
add
inc
xchg
sub
movsl
adc
repnz
sub
pop
and
enter
incl
push
les
div
insl
in
mov
daa
inc
fbld
cmpsl
fmull
int
outsl
es
cmc
loopne
lea
movsb
jl
xor
adc
jns
aas
stos
fprem1
jne
push
pushl
fcmovnu
jp
mov
rcr
jmp
jnp
mov
xorl
jno
in
pushf
jnp
push
fs
add
loop
std
cmc
inc
fldcw
lret
inc
jmp
stc
cmp
das
push
ror
scas
cmp
into
jne
mov
adc
testb
adc
dec
mov
dec
jp
lret
pop
sbb
mov
sub
mov
push
cmp
push
xchg
je
cld
cmp
dec
and
in
sbb
dec
out
xchg
addr16
inc
or
inc
mov
rcll
jecxz
test
lods
add
stos
repnz
in
xchg
movb
scas
jbe
lds
pop
hlt
add
cmp
inc
jnp
inc
fnstcw
inc
insl
int3
and
lcall
pop
bound
pop
lret
or
inc
adc
daa
xchg
inc
repnz
sub
and
mov
jb
dec
jmp
xor
inc
inc
fidivs
cli
inc
int3
lret
dec
jmp
pop
lods
lds
cmp
data16
sbb
pusha
lea
xchg
dec
addl
ss
or
mov
cmp
hlt
xchg
sbb
pop
pcmpeqw
fdivrl
into
mov
stos
sbb
hlt
add
adc
out
or
dec
xchg
mov
dec
and
jge
jle
out
insb
addr16
jmp
ret
sbb
sbb
test
xor
cmp
jmp
mov
dec
adc
sbb
push
icebp
sti
mov
jle
jmp
adc
and
rcll
test
mov
push
xor
push
push
lods
sarb
test
out
push
jmp
xor
rorb
aam
mov
sub
movsb
mov
mov
pop
dec
ja
sub
outsl
sub
jae
push
dec
rcll
int
lds
cwtl
xchg
mov
add
das
daa
xor
jno
lahf
test
les
in
xor
mov
lds
pop
mov
aad
inc
cmp
inc
mov
hlt
and
push
mov
imul
cmp
jl
out
push
xchg
push
sub
dec
das
test
mov
sahf
xchg
pop
fmuls
sbb
outsl
dec
bound
js
push
jl
pusha
cmp
out
jns
fimull
add
and
or
test
mov
mov
ret
rorl
sub
inc
push
push
loopne
xor
outsb
adc
inc
xchg
pop
cmp
and
cwtl
sbbb
mov
insb
mov
pop
mov
jo
data16
jae
std
pop
int3
inc
out
jb
in
and
lea
inc
push
pop
incb
or
xor
inc
sub
sarl
push
mov
cmp
test
bound
inc
inc
add
jbe
cld
xchg
bound
inc
or
cmpsb
and
dec
fldenv
xchg
in
add
push
mov
divb
icebp
or
cmp
inc
sahf
adc
push
jnp
pop
into
mov
cmpsb
dec
fisttps
shlb
mov
dec
mov
insb
sti
insb
cwtl
push
stos
out
mov
scas
cmp
xchg
and
cwtl
fimuls
adc
xchg
sti
mov
push
inc
pop
imul
shrb
nop
movhps
dec
arpl
cmp
dec
cld
sub
test
outsb
std
fs
adc
inc
test
cwtl
inc
mov
imul
push
aas
fldenv
mov
cmc
add
inc
das
test
pushf
stc
fisubrs
orl
jnp
inc
push
outsl
inc
sbb
std
out
gs
inc
dec
stos
push
push
das
scas
xor
dec
or
enter
and
int
aas
fdivs
cmpsl
add
inc
push
ja
imul
loope
hlt
sbb
jbe
push
push
andb
jno
or
movsl
mulb
and
mov
clc
push
imul
xchg
xchg
inc
lods
pop
mov
pop
pop
adc
push
in
lods
bound
test
js
push
jp
sbb
jl
xchg
pop
out
sub
adc
mov
out
adc
add
mov
daa
push
sbb
lock
iret
cmovnp
cmp
push
in
test
cmp
mov
fstl
aaa
adc
adc
mov
outsb
shll
cmovae
fisubs
add
scas
icebp
shl
outsl
pop
fdivrs
cli
aad
xor
mov
subb
mul
xchg
fildl
mov
mov
add
lret
jne
int
push
repz
push
or
sub
pop
sub
mov
sub
and
mulb
xchg
jmp
xchg
stos
mov
out
jns
or
pushf
stos
dec
test
addb
mov
out
les
insb
es
xor
mov
aad
jno
push
sbb
lcall
push
sarl
push
jp
imul
call
mov
insb
shlb
dec
loope
jecxz
shll
popa
or
mov
dec
fldcw
inc
bound
inc
jo
add
lea
nop
sarl
mov
pop
mov
data16
outsb
mov
and
cwtl
mov
pushf
scas
xor
adc
adc
dec
mov
jbe
add
lret
incl
add
bound
icebp
data16
lods
mov
imul
jle
cmp
push
cmp
imul
cmp
shll
cmpsl
jb
mov
mov
cmp
jns
loope
jbe
arpl
or
fistpll
insb
clc
das
xor
mov
lods
lods
rclb
call
mov
mov
cmp
decl
xchg
add
out
mov
stc
icebp
xor
mov
and
ljmp
js
pop
or
gs
push
jge
adc
ljmp
insl
mov
mov
xor
clc
xchg
leave
movsb
add
cmp
js
push
mov
mov
and
jns
push
addb
jmp
xchg
and
xor
hlt
dec
mov
mov
std
out
pop
das
andb
xchg
aam
xor
jge
dec
imul
xor
dec
pop
pop
cmc
and
fcompl
xchg
cmp
xchg
dec
mov
dec
icebp
and
adc
in
mov
iret
arpl
arpl
adc
mov
dec
cli
mov
cmp
fwait
scas
xchg
out
mov
fnstenv
ret
fdivl
inc
push
imul
ret
shr
cmp
aad
cmp
popa
frstor
dec
cmp
or
mov
mov
jns
and
jnp
adc
dec
dec
inc
mov
cs
loope
into
or
movsl
mov
pushf
repnz
es
pop
dec
pop
inc
sub
jne
cwtl
shlb
repnz
and
adc
dec
out
lret
cli
adcl
mov
out
mov
stos
push
out
and
mov
xor
int
xor
popa
or
push
mov
jns
jo
ds
inc
and
cld
fmuls
push
shl
rol
js
jae
js
mov
mov
jne
mov
adc
out
cmp
inc
outsb
loopne
ljmp
lcall
ret
jnp
scas
xchg
addr16
test
xor
mov
into
and
and
adc
or
out
mov
aaa
pop
rcl
jmp
pop
scas
enter
adc
sub
dec
inc
testb
loope
das
sbb
push
mov
mov
dec
jno
and
jae
bound
adc
pop
jl
in
lcall
pop
mov
pushf
sub
rclb
xor
inc
pushf
or
out
das
adc
lret
xchg
lods
mov
imul
xchg
and
mov
push
sbb
push
dec
push
xor
scas
push
cmpb
sbb
test
jg
stos
sub
xchg
daa
lahf
idivl
mov
les
icebp
hlt
fptan
xor
push
lahf
pop
jmp
sub
sub
and
mov
sub
es
int
mov
test
or
das
and
pop
adc
mov
jecxz
xchg
in
or
and
cmp
pop
lock
push
jl
pop
icebp
adc
xor
jo
movl
mov
mov
jmp
scas
mov
jmp
or
negb
cmp
push
jno
cmpsl
movsw
aas
loope
insb
scas
jg
nop
pop
adc
and
jo
or
outsb
bound
mov
sbb
adc
arpl
imul
loope
cwtl
lret
mov
insl
and
js
insl
xlat
sbb
outsb
cmp
frstor
push
cmpsb
inc
xchg
out
test
dec
sub
xor
shll
aam
out
or
fdivrp
push
push
sbb
add
sar
pop
js
fcmovne
mov
push
jo
sbb
xchg
stc
sub
dec
adc
and
imul
cwtl
insb
lahf
in
pop
notl
jno
jbe
bound
insb
push
mov
lock
leave
mov
xchg
orl
fidivrs
arpl
pop
pop
inc
mov
fwait
aam
and
or
aam
fmull
repnz
inc
xchg
pop
fprem1
or
jb
cmp
xor
mov
xlat
pop
push
pop
cli
das
je
hlt
push
movsb
xor
scas
lcall
xchg
popf
fisubl
mov
cld
shll
out
or
xlat
shll
xchg
icebp
jo
call
add
mov
jbe
jae
inc
pop
inc
in
and
add
inc
filds
mov
in
fidivl
mov
fs
xchg
insl
sub
fidivs
aad
pop
mov
js
lcall
adc
add
adc
out
mov
loopne
loop
filds
fwait
xchg
jp
iret
ljmp
dec
add
xlat
stos
ret
xchg
orb
mov
negl
jg
pop
cmp
movsb
cmp
xor
xor
hlt
ds
lods
xchg
aad
ret
dec
xor
add
fwait
mov
dec
mov
push
dec
mov
rclb
xor
and
sbbb
mov
adc
push
cltd
cmp
mov
xor
mov
aas
aad
and
xor
cwtl
jle
sub
int
jno
test
and
int
ja
jmp
pop
inc
cmp
adc
scas
fldt
adc
lcall
stos
mov
or
seto
cli
sbb
or
pop
inc
jb
flds
es
inc
rorb
out
lods
int3
iret
push
jmp
sbb
ret
mov
push
std
or
clc
jle
inc
pop
call
aaa
in
scas
sti
cmc
xor
pop
or
xchg
es
xor
sbb
out
mov
pushf
jbe
push
push
in
mov
pushf
cmp
insl
je
imul
sbb
cmpsb
xchg
hlt
sub
out
sbb
popa
cmp
data16
cmpsb
or
sbb
in
or
and
sbb
and
mov
xchg
mov
das
and
or
int3
push
xor
cmp
push
add
jl
popf
mov
stos
and
mov
out
jmp
mov
cs
and
xor
push
aam
push
xor
repnz
add
dec
out
in
sbb
cwtl
mov
dec
inc
or
and
shr
pushf
rclb
xchg
sub
adc
pop
ja
mov
lock
pop
and
roll
pop
mov
mov
xor
mov
loop
push
out
jne
mov
jne
mov
cmp
fsts
pop
pusha
data16
mov
inc
test
test
dec
test
push
call
dec
int3
ja
dec
jb
imul
cmp
xor
jo
push
mov
loope
pop
cld
leave
ss
adc
pop
fcmovb
pop
and
jecxz
and
int
loope
je
into
popf
or
cld
test
pushf
test
push
dec
jns
adc
dec
gs
or
in
mov
dec
jp
sbb
and
jmp
aaa
fsubs
xchg
jle
call
jmp
incb
div
test
daa
jae
adc
dec
ja
arpl
aad
scas
cmp
mov
pop
shrb
jb
mov
scas
mov
or
add
sub
in
icebp
push
jmp
popf
rcrl
stos
mov
clc
adc
inc
dec
lock
jb
stos
xor
loopw
mov
sti
jecxz
cli
mov
jl
jl
sbb
xchg
xchg
shl
jae
aaa
dec
lea
popl
jne
sbb
shl
sbb
div
jno
adc
mov
loop
add
ljmp
bound
jmp
scas
adc
orl
add
imul
aam
in
mov
push
xchg
roll
dec
inc
out
std
and
loop
push
orb
lds
cmp
ss
adc
and
jo
cld
std
push
xlat
aaa
aas
jle
jl
stos
lods
mov
and
push
or
repnz
adc
jb
mov
std
cli
insl
jge
insb
hlt
pop
out
aam
into
int
mov
jne
aam
sbb
fidivrl
jge
enter
add
mov
sbb
call
call
popa
jg
adc
or
lcallw
add
dec
mov
rorb
pop
outsb
scas
mov
ret
xchg
push
mov
insb
les
pop
jnp
cmpb
enter
stc
xor
mov
mov
test
loope
lds
jne
xchg
inc
sbb
int
bound
xchg
cmp
gs
xchg
out
add
jo
test
adc
lahf
adc
fwait
loopne
out
insl
pop
and
mov
push
dec
adc
push
fldl
cmp
popf
fldln2
ret
push
insl
xchg
lods
xor
ljmp
adc
fistl
jecxz
push
and
je
outsl
ss
sbb
xchg
fs
xor
push
ds
daa
or
add
lods
aas
test
push
or
ror
stos
mov
mov
mov
in
cmp
push
out
jo
jne
in
sbb
jp
stc
jae
scas
fldenv
clc
jno
mov
xchg
repnz
shll
xchg
cltd
jl
xor
pushl
mov
bound
test
pop
and
push
aas
pop
or
xlat
loope
ror
fwait
dec
add
in
xchg
insl
mov
out
cmpsb
mov
je
lods
cltd
jo
mov
test
das
and
jae
push
mov
dec
mov
xchg
push
mov
or
gs
pop
lahf
cmp
in
jge
inc
fcoms
pop
sub
loopne
dec
movsb
fstl
lcall
lods
lcall
aas
sub
cmp
js
pop
or
sti
pop
jle
out
xor
ss
ljmp
pusha
pusha
sub
daa
add
mov
mov
adc
ficomps
lods
xorl
xor
inc
mov
or
and
dec
push
stos
xlat
lahf
push
xor
push
or
mov
push
iret
jns
mov
cmp
test
shr
mov
pop
adc
jae
adc
sbb
fwait
mov
ficoml
sub
clc
push
jb
pop
test
je
mov
xchg
test
arpl
adc
jo
dec
jl
push
cmp
fbstp
pop
orl
in
sbb
mov
das
mov
mov
lods
sub
mov
fsubs
popf
xor
nop
push
mov
jnp
or
sbb
daa
inc
sub
ljmp
sub
nop
mov
mov
pop
das
js
insb
cmp
mov
push
aad
ret
jp
cltd
push
and
sub
jle
push
mov
jl
cltd
pshufw
cmp
lcall
pushf
jmp
xor
fdivrl
ss
pop
adc
add
mov
inc
sbb
adc
clc
and
inc
sarb
inc
das
ss
lods
std
movsl
mov
mov
dec
rcr
pop
xchg
or
xor
and
lods
push
in
xchg
lods
aad
int
popa
imul
cmp
fstpl
aas
pop
pop
mov
xchg
pusha
pop
cs
and
movsl
add
dec
xchg
cmp
inc
mov
or
out
xchg
in
js
jle
movsl
add
mov
ret
into
push
out
and
push
lods
or
cmc
cmp
ds
jmp
ljmp
dec
fcoml
mov
mov
pop
sbb
inc
fwait
pop
lcall
mov
add
mov
xchg
dec
and
or
das
daa
add
rcr
ds
cmpsb
outsb
insl
mov
stos
cli
mov
mov
dec
lock
bound
aas
stos
fdivrp
mov
pushf
cmpsl
ss
test
aaa
popa
pop
or
dec
cli
push
push
mov
adc
mov
lret
push
jnp
mov
mov
mov
inc
shr
inc
inc
mov
mov
sub
jae
jne
mov
inc
pop
daa
pop
cmp
lock
fiaddl
cmp
std
jb
fnstenv
gs
jle
and
lret
std
cs
cmp
or
jb
dec
cmp
arpl
cmp
mov
xorl
add
pop
xor
adc
fstpt
popa
xchg
es
and
mov
ss
adc
int3
dec
std
pop
fadds
fnstenv
fistpll
lret
sub
inc
adc
shrb
ficoms
stos
aam
movsb
lcall
fisttpll
add
pop
xor
into
movsw
mov
adc
pop
insb
mov
and
push
inc
inc
lds
pop
test
push
pop
scas
sarl
imul
lret
pop
fmuls
daa
push
jne
jmp
lcall
push
cmpsb
mov
inc
lea
in
int
push
fwait
insl
idiv
out
pop
mov
mov
jne
xchg
adc
cmp
cmp
test
push
lfs
pop
mov
or
add
push
xchg
sub
movsl
mov
aaa
and
mov
mov
int
je
mov
cltd
lock
dec
xor
idivb
addr16
and
dec
pusha
push
dec
pop
jg
and
and
or
xor
add
sub
sub
into
push
ret
adc
xor
mov
popf
fdivrs
sbb
popa
jge
int
fistps
inc
sti
les
cli
fiadds
sbb
out
negl
int3
sub
sbb
cmp
outsb
push
push
sbb
cli
jge
sbb
sti
loop
or
insb
xor
xchg
mov
inc
pop
mov
or
or
xorb
cmp
pop
cmp
insb
out
mov
insl
cmp
aas
jbe
sbb
jb
sub
dec
imul
out
outsl
idivl
loopne
push
mov
callw
fcomip
xrelease
fcomps
jecxz
or
cmpsl
sahf
cmp
psrlw
test
sub
aam
sti
push
shrl
jl
lea
mov
fistpll
pop
jecxz
lea
scas
stc
and
testb
cmp
pop
divb
es
mov
mov
push
in
and
scas
fdiv
xchg
xor
popa
sub
adc
cmpl
addb
imul
cli
push
ret
push
in
lahf
jns
out
jmp
xlat
and
movsl
inc
mov
dec
sbb
js
or
ja
sub
bound
jno
into
and
cmpsl
mov
push
pop
aam
data16
cmp
dec
popa
mov
mov
cmpsl
add
mov
lods
out
pop
orb
pushf
mov
scas
cmp
in
xchg
lcall
dec
pop
cltd
mov
cmp
in
inc
mov
cmpsb
add
xor
repnz
fmull
inc
jl
xchg
lret
push
lock
fistpll
cmp
adc
test
push
out
andb
into
shrb
addl
adc
jecxz
fmull
inc
xor
ds
inc
out
push
jae
dec
movsl
out
cmpsl
test
xchg
add
jno
or
repnz
inc
pop
jo
pop
ret
pusha
arpl
xor
push
adc
xor
push
pusha
sub
lahf
xor
push
adc
ror
xor
sub
sub
test
ljmp
outsb
cld
fidivrs
mov
shl
daa
repz
xor
inc
lds
cmp
mov
cs
xor
and
mov
xor
mov
into
cmp
in
mov
scas
in
push
sbb
ja
cmp
mov
jle
lods
lods
insl
notl
imul
jl
mov
xlat
out
insl
scas
insl
sbb
sti
dec
ja
mov
push
iret
in
cmp
push
imul
cmc
push
xor
fbstp
cld
in
pop
fistps
adc
xor
mov
xor
into
sahf
incl
sbb
adc
xor
cmpl
jg
mov
cli
jmp
inc
cli
mov
or
xor
adc
add
adc
cmc
pop
push
sbb
mov
and
nop
inc
ljmp
rorl
lret
daa
out
repz
pop
ljmp
gs
sub
add
jb
js
stos
push
sub
pop
std
lret
into
gs
faddl
cld
sbb
or
pusha
andb
repnz
arpl
pop
adc
pushf
ficoms
xchg
movsl
orl
lret
adc
mov
xor
insl
in
fmuls
push
test
add
lahf
out
test
in
adc
outsl
fdivs
cli
je
pop
in
in
sub
push
jb
jecxz
jns
cmc
bound
out
push
xchg
and
clc
ret
add
and
test
aad
xor
push
mov
fwait
mov
js
arpl
mov
dec
push
or
mov
out
outsl
fs
fnsave
adc
mov
push
hlt
cltd
rorl
out
push
arpl
push
adc
mov
pop
mov
aam
adc
dec
outsl
xlat
mov
arpl
inc
lahf
mov
mov
mov
dec
or
mov
mov
and
or
inc
jno
sub
lret
adc
cmp
mov
js
stos
jnp
cmp
call
xor
daa
mov
popf
cli
jbe
das
sti
push
inc
clc
sbbb
scas
sbb
cmp
in
add
fiadds
mov
sub
and
xor
mov
sub
std
and
ljmp
scas
and
adc
mov
jb
sub
shl
loop
and
mov
sti
jmp
adc
xchg
adc
int3
inc
add
icebp
xchg
aad
outsl
aad
lea
enter
mov
orl
inc
xchg
insl
push
sub
shl
std
adcb
inc
pop
cmp
xor
gs
and
addr16
add
jmp
leave
jne
sub
cmp
jo
rcll
cmp
aam
aad
or
sbb
jae
fsubrl
decb
stos
clc
mov
stos
push
push
jmp
inc
mov
rep
lock
sbb
or
adc
sub
shrb
es
popf
push
loopne
insb
sbb
xchg
or
popf
add
cmp
xchg
shlb
cmp
xchg
faddl
jno
push
cld
mov
and
ret
dec
frstor
push
xchg
popa
shlb
les
out
push
lods
add
dec
ret
sbb
movsl
xor
xchg
pop
mov
pushf
adc
cltd
push
fucomi
cwtl
lret
loopne
push
in
push
cwtl
pop
mull
dec
xchg
mov
repz
and
ret
fsubrl
mov
clc
int
mov
mov
out
mov
dec
jmp
add
lds
dec
dec
cmp
cmpsb
call
das
int
or
shl
add
in
or
jae
in
and
sahf
or
cltd
mov
cld
mov
dec
in
ljmp
dec
sarb
pop
or
or
clc
stos
das
lods
jmp
dec
ret
sub
or
mov
xlat
add
int
daa
clc
aam
ds
das
aad
outsb
sbb
adc
jecxz
iret
rcr
jno
push
fisttpll
daa
inc
xchg
aaa
insb
andb
mov
pop
adc
add
mov
mov
sub
mov
ror
sbb
push
rcr
xor
lock
scas
push
pop
xor
ficoms
ret
sub
lret
lahf
jbe
inc
push
shll
xchg
xor
jne
inc
ljmp
call
xor
and
sub
mov
cld
lods
fstp
mov
ds
rol
mov
std
pushf
sbb
fwait
xchg
mov
in
or
cli
sbbl
mov
pop
mov
inc
mov
mov
cmpsl
push
shl
push
movsl
jp
add
stos
jl
add
aad
movsl
aaa
scas
ds
mov
scas
dec
add
mov
mov
cld
rcll
aam
sbb
inc
lock
mull
fistps
cmp
add
push
xchg
js
sbb
out
call
rcl
xor
js
jle
andb
push
mov
adc
push
push
mov
xorb
cmp
loope
and
aam
mov
pop
in
aas
xor
jecxz
lcall
orl
adc
ljmp
out
div
fs
xchg
outsb
loope
mov
repnz
jnp
mov
pop
aaa
test
xchg
test
mov
jl,pt
sbb
movsb
and
imul
xlat
fadds
leave
xchg
dec
mov
push
jb
adc
add
mov
mov
outsl
test
pop
mov
xor
inc
push
aam
insb
stos
imul
push
mov
out
in
mov
jno
mov
xlat
ljmp
out
sarl
lahf
push
imul
add
push
in
rolb
or
push
xchg
inc
sub
loopne
test
add
mov
fimull
movsl
xlat
cmp
mov
jp
dec
sbb
adc
in
js
pop
test
pop
jae
ljmp
sbb
inc
dec
mov
hlt
outsb
sub
sbb
clc
mov
push
ss
test
lahf
pop
cmp
push
mov
mov
dec
lock
loop
mov
scas
cmp
jno
xchg
clc
sub
gs
sub
stc
push
repz
dec
outsb
xor
xor
je
mov
lock
ds
subb
lret
pushw
push
rclb
xchg
fdivrs
xchg
cmp
insb
ret
fstps
jb
mov
rorl
rcrb
sub
cmp
pusha
popa
jle
je
and
adc
pop
inc
or
pop
jnp
out
cli
sarb
push
cltd
xchg
js
pusha
into
pop
loope
jge
loop
jg
pushf
add
pop
lret
pop
daa
push
in
imul
loopne
pop
pusha
daa
lahf
andb
out
je
pop
cmp
dec
dec
mov
mov
nop
mov
fs
fstpt
cli
in
pop
dec
mov
les
adcb
gs
sbb
inc
sub
bswap
sti
dec
dec
sbb
aas
adc
xchg
ror
cld
inc
jbe
repz
xchg
repz
push
js
and
jmp
and
or
fucomp
xlat
dec
cmp
jb
cmpsb
cmp
xor
or
outsb
insl
rcrb
push
mov
jb
cmpsl
xchg
int
sbb
xor
push
ss
divb
pop
into
filds
mov
mov
jne
adc
sub
mov
mov
cmp
scas
mov
ja
lret
push
push
cmp
in
fildll
out
shlb
std
out
lods
push
clc
dec
seto
inc
lock
popa
sbb
call
adc
cld
jb
push
mov
ljmp
mov
ret
cltd
in
add
add
outsb
add
cmp
jnp
adc
push
add
push
std
les
mov
cmp
mov
fldl
sub
imul
inc
mov
or
push
ds
mov
pop
sub
and
movsl
jae
jle
add
pop
add
cmpsl
pop
stos
enter
ljmp
ljmp
jle
inc
lods
push
jle
push
jge
shr
mov
aad
stc
cmp
dec
and
fdivrl
repnz
or
scas
pop
cmpsl
outsl
out
jecxz
inc
sub
jnp
or
jns
test
xchg
dec
cmp
dec
in
addr16
inc
outsl
cmp
mov
push
mov
mov
enter
xchg
cmp
mov
scas
mov
sarb
or
dec
pop
in
jg
xchg
fbld
bound
mov
add
jae
dec
xor
sub
fwait
cwtl
and
fsubl
mov
decl
adc
enter
out
enter
fsubs
dec
inc
adc
aad
int3
scas
test
mov
popa
pop
jmp
mov
fwait
jle
push
jb
xor
xchg
ljmp
fcoms
and
cmovs
pop
dec
movsb
daa
dec
repz
lds
push
insb
add
xor
jno
lds
lods
aaa
ljmp
fistl
mov
dec
bnd
sbb
ret
test
shll
jmp
inc
into
imul
xlat
inc
xor
insb
mov
cmp
xchg
test
cli
pop
and
cli
sbb
jle
into
clc
mov
sub
xchg
mov
movsb
scas
cmpsl
or
out
xor
sbb
rcrb
jmp
outsl
mov
jecxz
xchg
add
mov
xchg
insl
hlt
push
inc
arpl
xchg
jae
and
and
add
outsb
aas
push
insb
rol
imul
mov
adc
xchg
xor
pop
mov
aaa
cs
and
iret
add
and
push
jnp
fwait
pop
sbb
xchg
lods
in
mov
dec
jle
xchg
out
nop
sahf
neg
dec
xchg
sbb
xlat
add
sbb
ja
inc
mov
pushf
pop
push
pop
ja
or
scas
jne
shl
out
in
mov
rol
fstl
aad
mov
push
sahf
add
jecxz
inc
je
cmp
in
xchg
repz
fimull
in
sub
hlt
adc
cmpsl
xchg
push
fwait
dec
imul
dec
mov
sub
cltd
jle
mov
jne
add
inc
mov
inc
pusha
lds
repz
test
sbb
add
cs
outsl
pop
push
pusha
cmp
aam
xchg
sub
jb
inc
aaa
sbbb
cmp
stc
sbb
xor
dec
lds
xor
jb
push
stc
ds
fdivl
jecxz
jp
mov
and
inc
or
mov
outsl
lret
pop
xlat
xor
int3
data16
je
bound
mov
jnp
or
sbb
dec
shll
in
inc
out
jmp
mov
cmp
lock
pushf
push
stos
aam
xchg
mov
popf
shlb
cli
imul
push
xchg
nop
call
mov
push
jp
mov
lods
cmpsl
mov
mov
std
stc
int
or
stos
out
add
sbb
test
sub
mov
or
sub
or
jge
lods
pushf
adc
in
dec
cmp
add
add
mov
xor
or
scas
pop
std
sbb
lcall
int3
or
mov
add
mov
jmp
jb
aad
int
add
sub
xor
dec
mov
pop
cli
movsb
enter
sar
int
cwtl
fldl
cmp
sub
scas
xchg
stc
pop
aaa
adc
fs
mov
mov
notb
push
xchg
mov
xchg
rol
mov
mov
push
push
fs
or
add
daa
pop
push
jo
push
ret
xchg
out
or
xlat
xchg
cmp
adc
into
xchg
ja
movsl
fildl
mov
loopne
scas
pop
dec
dec
insb
cmp
push
push
repz
rcl
cmp
push
pop
push
cli
cmp
insb
cmp
in
sub
jp
xchg
mov
lret
mov
lods
das
jnp
pushf
push
dec
ss
mov
cmp
icebp
leave
push
in
fldt
fisubrl
adc
int3
cmp
rcrb
sbb
gs
cs
sub
cmp
aas
ret
sbb
iret
lds
xor
jl
lea
mov
aad
and
out
push
mov
stc
pop
jnp
or
repz
dec
sbb
dec
imull
jns
stos
insl
add
xor
pop
sub
out
jbe
xor
lock
add
lock
icebp
cltd
shl
push
rcr
loop
add
lods
dec
fimull
xlat
cmp
js
or
xor
ret
or
pop
int
pop
add
mov
scas
push
cmp
in
pop
mov
mov
mov
cli
inc
xor
adc
xchg
jnp
jne
pop
push
push
and
daa
in
push
push
xlat
jbe
or
push
mov
jns
dec
pop
test
loopne
loop
addr16
cmp
jnp
addb
jns
mov
xchg
fadds
cli
pop
add
shufps
shll
mov
repnz
stos
sub
push
outsb
sti
mov
dec
shll
xor
adc
scas
adc
xchg
stc
pop
jmp
loop
pop
pop
cmp
sbb
jg,pn
adc
shrl
jmp
popf
lods
and
add
xor
lock
or
imulb
aad
adc
inc
mov
and
sahf
outsb
lds
pop
push
out
pop
dec
lcall
inc
xchg
rcr
push
inc
aad
xchg
cmc
mov
mov
push
daa
adc
inc
imul
push
jp
pop
adc
jnp
or
push
daa
push
gs
sbb
rcrb
sub
cmpsl
out
push
jl
test
pop
mov
push
fcompl
ror
fldt
test
cmc
stc
add
es
dec
bt
addr16
xchg
int3
or
cs
lods
push
scas
jb
push
jg
ljmp
inc
xor
xchg
dec
fucomip
push
bsf
ret
push
test
jmp
or
pop
mov
inc
sbb
mov
negl
test
add
mov
lods
pop
pop
dec
sbb
in
leave
cmc
push
or
icebp
and
jns
adcl
js
stos
cmpl
sub
int3
mov
push
lds
or
and
pop
push
mov
fildll
push
cmp
mov
xchg
stc
jl
adc
xchg
pop
cmp
pop
insb
xchg
movsl
mov
fld
mov
ja
xchg
inc
pop
or
nop
lret
push
movsb
sbb
aam
fisubs
lcall
int
daa
push
loope
adc
fisubl
adc
push
jg
and
sub
scas
sub
jge
jl
sbb
scas
mov
icebp
pop
in
es
dec
dec
cli
jne
push
sub
jle
cmp
hlt
test
iret
add
data16
push
and
ret
lahf
pop
movsl
in
cmc
inc
mov
jecxz
pop
lcall
roll
and
pop
ds
sub
cmc
mov
jae
sarb
inc
or
loop
or
jge
test
mov
push
mov
pop
mov
jo
idivl
cmp
in
push
push
dec
je
jmp
push
popa
loop
call
jge
aad
lods
rclb
cwtl
push
scas
jle
dec
stc
loop
mov
stos
mov
dec
movsb
rclb
xchg
adc
scas
jae
out
inc
test
mov
or
sbb
fsubl
shr
xor
scas
push
lret
xchg
fistpl
jl
cmpsb
mov
fs
cmp
ds
cmc
ljmp
test
ret
xchg
cmpsb
inc
mov
adc
fistl
xor
fsubs
inc
ret
and
mov
jbe
into
lret
sysenter
rol
les
lods
iret
ss
into
jb
mov
leave
stos
add
xchg
roll
push
dec
mov
jle
pusha
hlt
push
ja
in
lea
sbb
add
popf
dec
dec
lcall
ret
lret
fdivl
in
dec
xor
add
inc
and
jns
push
jle
test
and
sub
xor
outsb
sub
out
je
sbb
mov
jecxz
stc
pop
dec
shrb
shrl
data16
or
inc
mov
xchg
sahf
fadds
fsubs
push
mov
ret
in
stos
inc
int
push
dec
outsl
jmp
insl
fisubrs
mov
inc
outsb
aas
rorl
je
aam
add
pop
pushf
mov
aas
xor
adcb
pop
insl
in
fistpl
mov
pop
xor
mov
popa
pop
mov
jo
stc
inc
adc
inc
mov
scas
mov
and
cmpb
or
or
ret
and
add
jmp
arpl
mov
pop
and
xchg
test
pop
js
mov
imull
dec
push
mov
aas
push
mov
imulb
aas
and
ds
inc
enter
inc
jmp
out
mov
hlt
subb
push
xchg
jle
xor
ret
je
sarl
sub
loop
les
mov
sbb
cmpsl
scas
xor
mov
xchg
jbe
ss
lods
jns
mov
jne
orb
push
lahf
mov
in
inc
push
clc
fimull
rclb
lds
sub
sarl
aad
cmpsb
xlat
xor
push
xchg
or
loope
pop
scas
cltd
xor
aas
je
xor
popa
mov
sbb
insb
loopne
jne
sarl
pop
xchg
xchg
js
jnp
mov
push
hlt
jne
jmp
in
test
loopne
pop
push
pop
dec
mov
push
or
pop
xor
lods
push
insb
xchg
push
xor
sbb
nop
cmp
cmp
aam
stos
subl
fisttpll
inc
pop
mov
dec
jp
adc
sbb
adc
jns
int3
pusha
test
inc
pop
shlb
mov
inc
mov
xchg
sbb
cld
cmp
inc
lock
mov
shlb
cmc
mov
and
mov
std
mov
xor
mov
or
fstpl
cmpsl
mov
fnstcw
cltd
or
shrb
mov
pop
mov
sbbb
mov
arpl
jp
xor
outsl
sbb
ss
lock
addr16
je
xlat
int
xchg
mov
das
adc
iret
insl
xchg
fildl
daa
sti
xchg
adc
jnp
pop
inc
lods
int
sub
test
mov
imul
orb
jl
pop
mov
ds
loop
ss
or
out
jno
addr16
dec
lea
mov
imul
popa
sti
jb
scas
cmp
outsb
mov
cmpb
std
icebp
adc
jbe
pop
xor
popa
sbb
packsswb
or
sub
mov
xchg
bound
sub
cmp
flds
into
xor
and
and
add
ret
es
sti
add
xor
cmp
sub
into
xor
in
icebp
adc
jno
outsl
jnp
ss
add
out
mov
fsubrp
ficoms
dec
or
jb
stos
scas
out
lea
shrb
mov
sub
movsb
sbb
sti
test
inc
mov
jmp
lock
and
addr16
stos
inc
pop
sar
mov
or
repz
or
int3
sbb
push
iret
loopne
cmp
pusha
das
xlat
jmp
repz
pop
sbb
pop
mov
mov
sbb
and
add
dec
outsb
pop
int
xor
push
cmp
ds
sbb
push
mov
pop
inc
xor
dec
lods
enter
daa
retw
jae
pusha
addl
lock
add
mov
push
out
fildl
sbb
inc
jb
push
inc
ljmp
scas
test
rcll
sub
xchg
call
insb
adc
add
testb
lret
pop
jp
cmp
xchg
dec
xor
outsl
cwtl
mov
inc
cmp
jnp
xchg
sub
sub
das
imul
or
clc
pop
outsb
std
add
cmpsb
lret
cli
dec
ds
xchg
sub
je
out
adc
jbe
stos
out
std
stos
insb
stc
insb
sbb
test
sbb
scas
movsl
clc
ds
andb
mov
lods
pop
dec
loop
ds
lahf
pop
pop
inc
xlat
inc
mov
and
mov
xchg
push
xchg
ja
and
in
gs
adc
mov
mov
clc
and
imul
js
fmull
jae
inc
mov
sbb
les
mov
sarl
cld
push
jae
adc
pusha
test
mov
mov
lretw
pushf
xchg
orl
pop
xor
dec
inc
in
movsb
jg
and
mov
fsubr
push
dec
leave
pop
mov
jne
or
lahf
rolb
sahf
pop
mov
divl
mov
sub
mov
mov
jg
insl
xchg
hlt
fwait
dec
mov
outsl
xor
nop
arpl
cwtl
xor
and
popa
jno
jb
xlat
bound
xlat
iret
mov
push
lcall
je
aaa
mov
push
mov
jle
into
push
test
int3
sub
nop
and
mov
aas
fwait
mov
jns
jno
xchg
fcoms
fisttpll
or
sbb
loopne
ror
dec
sti
sbb
push
hlt
cmpsb
aaa
xchg
icebp
js
mov
sbb
or
aad
add
repz
mov
jno
fwait
jp,pn
cmc
mov
pop
into
repz
xchg
push
dec
data16
dec
cmpsb
aas
cmpsb
ds
dec
cwtl
dec
fwait
sbb
popa
out
in
xor
in
movb
and
cmp
jecxz
push
fcomps
jge
mov
popa
ja
arpl
stc
clc
mov
xlat
and
push
pop
xchg
insb
aad
loop
inc
ret
addr16
fsubl
bound
out
fcoml
mov
int
jp
push
adc
jge
jb
rcrb
nop
jns
mov
and
xchg
cwtl
cmp
xor
leave
or
and
insl
jle
and
xor
xor
ds
scas
shr
pop
test
add
pop
ja
gs
jnp
dec
inc
sub
dec
lcall
adc
ds
add
jg
push
mov
pushf
aas
xchg
pusha
fsubrp
rcr
mov
fnstcw
push
mov
push
aaa
jge
inc
mov
test
xchg
mov
pop
or
stc
mov
aad
lods
sbbb
sub
fsubr
jle
inc
shl
fmuls
push
push
lahf
pushf
mov
ficoms
insb
clc
mov
ret
bound
inc
pop
dec
call
or
sti
and
les
dec
add
sahf
cmp
xchg
mov
loopne
adc
pop
faddl
call
int3
and
sbb
adc
mov
subl
cmp
movsl
mov
cmp
jmp
push
es
sub
push
xchg
cmp
test
outsl
sub
sub
ja
adc
outsb
pop
push
lea
ret
mov
lret
push
repnz
out
fstpt
js
aas
mov
lea
pop
sbb
mov
sub
sti
mov
clc
mov
clts
push
mov
cld
in
add
sahf
loope
sub
aaa
repnz
mov
imul
cmpsl
pushf
mov
cmc
jg
mov
jl
jp
inc
movsl
mov
mov
push
fcoms
data16
mov
jle
je
xor
data16
sbb
cmp
lahf
dec
sbb
dec
enter
cmp
inc
mov
icebp
push
cwtl
cmc
gs
cmp
xchg
jp
ret
mov
leave
pusha
push
adc
jo
mov
imul
gs
add
jns
cs
in
out
jne
xchg
mov
xor
divb
cmp
popf
jnp
fmull
xchg
dec
xchg
mov
jne
push
mov
stos
inc
jg
movsb
loopne
stos
add
cltd
push
add
stos
test
cmp
rcrb
shlb
ljmp
mov
xchg
loop
push
popf
in
cmpsb
jae
sub
or
sbb
mov
mov
cmc
jno
sub
mov
cmp
cmp
fwait
stos
jmp
xor
jnp
dec
adc
sbb
sub
jg
lods
movsb
sub
push
xchg
enter
in
mov
in
dec
stos
iret
inc
scas
test
pop
filds
jl
out
sti
cmc
dec
int
or
jmp
test
push
mov
call
lods
adc
inc
push
stos
ds
xlat
repnz
push
push
lret
in
fistpll
add
into
out
sub
fwait
mov
and
ret
mov
out
test
mov
push
sub
leave
sbb
movsb
cmp
jp
jg
and
scas
sarl
xor
rclb
jmp
adcl
popf
in
daa
inc
rcl
inc
int3
inc
cwtl
mov
sbb
mov
inc
lods
or
and
add
movsl
stc
mov
push
sbb
in
cltd
inc
js
xchg
sub
aas
pushf
shrb
std
push
pop
sub
mov
addr16
xchg
fwait
loop
push
les
push
pop
das
pop
insb
inc
lods
dec
daa
out
outsl
mov
push
mov
cmp
sub
cmpsl
add
jg
out
jbe
jl
nop
call
jno
jb
call
insb
and
push
mov
fcmove
and
sub
fisubrs
out
pop
xor
test
adc
shrb
or
jns
xor
mov
ror
data16
in
negl
aad
insl
aas
mov
and
stos
incl
lcall
pop
xor
orl
adc
or
fisubrl
sub
imul
outsl
int3
dec
addr16
aam
sbb
pop
fwait
pop
push
push
mov
pop
push
pop
int
lret
pop
inc
sahf
xchg
inc
sti
iret
mov
or
fs
mov
xor
hlt
mov
inc
das
int3
daa
mov
push
aam
push
popf
pusha
jp
pop
sbb
and
sub
lds
jne
dec
jbe
call
loop
aad
mov
popa
xor
scas
ficompl
bound
sub
xchg
cmovne
xor
inc
loope
inc
xchg
out
mov
mov
out
inc
ss
aam
std
dec
test
or
stos
add
hlt
outsb
xor
mov
scas
rcrb
xchg
in
and
out
mov
adc
jecxz,pn
or
je
push
jb
jo
sub
adc
shlb
adc
call
vandnps
fsubr
and
movsl
or
xchg
sbb
out
repnz
cmc
jecxz
xchg
sub
out
test
and
jb
or
mov
pop
adcl
jle
int
fldl
addb
out
xchg
pop
jnp
and
lds
add
pop
in
lods
sahf
cmpsl
pop
and
out
loopne
shrb
add
out
fcomps
int
es
mov
mov
lret
js
dec
repnz
loope
mov
push
gs
js
push
cmpsl
push
sbb
imulb
test
lods
rcll
idiv
and
adc
sub
mov
fistps
xchg
loop
jne
out
xchg
xlat
daa
push
orb
jne
push
mov
or
ds
pop
jne
cli
leave
pop
xchg
sub
pop
jno
nop
lret
rorb
or
mov
jae
add
mov
imulb
cli
jnp
and
repnz
cmp
jg
xchg
add
mov
pop
mov
fcoms
in
mov
dec
jecxz
pop
mov
dec
ss
lret
jge
xchg
pop
hlt
push
push
mov
jb
leave
xor
xor
and
jo
cmpsb
adcb
sub
scas
mov
test
cltd
sbb
inc
lods
sbb
pop
xchg
push
cmp
pop
xor
dec
add
shl
adc
sbb
shl
adc
outsl
dec
and
dec
repnz
push
dec
mov
cli
idiv
pop
das
mov
bound
pushf
or
xor
pop
movsl
cmpsb
cmp
sub
roll
cmp
andb
gs
scas
aaa
add
stc
push
aas
and
sbb
popa
pusha
pop
cmpsl
inc
sbb
and
push
sbb
xchg
and
pop
cmpl
push
push
xchg
jbe
xchg
mov
jl
sbb
mov
rcr
imul
lods
inc
mov
insb
imull
cld
repz
cmp
pop
int
fmuls
mov
aas
in
dec
mov
int
dec
testl
mov
or
inc
je
mov
call
xor
pop
adc
stos
push
push
mov
adc
mov
enter
adc
and
pop
add
add
aam
or
sub
test
icebp
mov
fcmove
add
test
jae
sti
dec
test
sub
push
mov
sub
cld
jecxz
ret
ficomps
cltd
loop
test
or
or
sbb
sbb
enter
das
repz
mov
cmp
iret
inc
test
pop
xor
jmp
mov
adc
xor
push
nop
sti
jo
rorl
mov
fidivrs
or
pop
ljmp
sub
dec
push
push
imul
add
in
jle
ja
sahf
lret
xchg
add
push
adc
mov
xchg
pop
aas
pop
rcrb
fldlg2
insl
mov
push
testb
shll
dec
sbbl
jl
push
add
mov
lods
les
mov
jb
xchg
and
sbb
adc
jle
mov
xchg
loope
inc
sbb
jmp
and
int3
repz
mov
jnp
ja
adc
cmpsb
out
adc
dec
mov
dec
loop
outsl
out
jecxz
and
mov
dec
subb
pop
cmp
sbb
insb
or
push
push
xor
xor
ja
xchg
adc
inc
and
sub
cmp
dec
jb
cmp
or
mov
pop
xlat
shlb
adc
cwtl
jle
cs
repz
push
lcall
popf
retw
adc
push
in
stc
or
xorl
iret
jge
es
mov
sub
cld
imul
imul
fstpl
arpl
mov
ljmp
popf
insb
data16
xor
sar
movsb
xchg
sti
or
mov
ret
jo
jb
mov
in
xorb
int3
arpl
lret
call
aam
cmp
mov
pop
push
dec
cwtl
outsb
fsubr
push
xor
and
addl
js
xchg
repz
jmp
cmp
je
jmp
add
cwtl
xor
xor
jle
jbe
and
test
dec
pop
mov
test
cld
leave
mov
cld
dec
in
dec
loop
ret
rclb
jne
stc
jnp
sbb
inc
mov
out
mov
jne
imull
stos
sub
aaa
dec
pop
or
push
adc
cmp
out
outsb
xlat
xchg
or
nop
es
imul
mov
lahf
testb
push
in
in
rcll
jnp
push
cli
push
xor
loopne
dec
push
icebp
xor
es
or
les
cmpsl
ss
push
push
pop
daa
mov
cmp
add
push
movsl
cmova
xor
ljmp
add
rsqrtps
inc
or
insl
mov
cmpsb
scas
pusha
mov
mov
jno
sbb
lock
imul
negl
push
xor
jne
gs
or
mov
sbb
lcall
xchg
jecxz
enter
jle
jo
pop
jns
iret
pop
jae
cwtl
rcrl
mov
dec
sbbl
push
aaa
mov
mov
insl
ja
dec
cmp
in
dec
mov
mov
push
gs
sbb
mov
xor
pop
add
gs
in
orb
pop
dec
sub
int3
rol
scas
pop
mov
inc
rol
test
push
cmc
outsl
or
add
xchg
and
fdivp
mov
mov
call
sbb
std
pop
cmp
jecxz
dec
push
pop
jp
les
ret
lods
inc
sub
in
test
jo
rorl
cmp
inc
fldcw
jo
or
fbld
hlt
lahf
jnp
out
aaa
mov
mov
insb
scas
stos
lcall
scas
das
xorb
jg
and
in
add
or
push
jecxz
daa
mov
xor
pop
imul
sub
stc
push
mov
fidivrs
mov
pushf
sahf
out
mov
insl
pop
jbe
pop
fsubrl
or
mov
mov
into
je
gs
push
leave
popl
lcall
in
outsl
xchg
scas
jo
rcr
add
push
repnz
jp
push
pop
and
idivb
mov
lahf
pop
push
mov
xchg
call
orl
push
jecxz
pop
jp
in
and
cmp
sahf
cmp
sub
movsb
mov
dec
xchg
movsb
sub
mov
fnstcw
loopne
mov
idiv
push
add
xchg
pop
loopne
jb
and
ficomps
xchg
mov
aad
negl
jecxz
sub
fstpt
push
jbe
fidivrs
jb
add
jns
in
xor
push
hlt
mov
mov
pop
xor
mov
js
dec
cmp
pop
pop
or
xlat
push
and
movsb
jmp
pusha
out
scas
add
xor
mov
and
orb
or
cmpsl
push
loopne
repz
out
dec
adc
hlt
bound
jne
repnz
cmp
cmp
pop
dec
pop
movsb
test
ja
or
lods
jne
out
xchg
and
sbb
push
and
fdiv
inc
xchg
and
cmc
fcomps
out
sbb
dec
mov
mov
rclb
ss
pushf
push
and
in
xchg
nop
and
jbe
xor
pop
lahf
orl
push
jp
loopne
outsl
adc
add
adc
ret
mov
push
repnz
sub
scas
ret
pop
add
push
adc
mov
and
pop
les
lock
fisttpll
sub
xchg
add
rorb
adc
inc
arpl
inc
or
and
push
mov
mov
sbb
mov
sub
cli
xchg
je
push
lahf
dec
mov
add
insb
pmaxub
dec
cmpl
lret
cmp
inc
loopne
in
shll
add
lret
cmp
dec
mov
pop
push
fcompl
nop
stos
sub
and
sub
inc
xor
rorl
ja
cwtl
negb
je
call
test
xor
inc
jne
call
sbb
test
cmpsb
or
in
sub
dec
subb
out
mov
cltd
gs
das
repnz
pop
mov
popa
imull
and
jg
inc
lods
cs
pusha
into
ret
adc
pusha
or
mov
rcrb
jb
mov
cmpb
push
sbb
or
pop
arpl
repz
adc
dec
lcall
ret
imul
popa
mov
lock
and
jg
int3
xchg
sbb
mov
jae
popf
add
movups
pushf
and
and
aas
xor
cmp
jo
js
lahf
mov
fstpt
je
push
push
inc
adc
hlt
shlb
les
movsl
insb
stc
and
mov
add
adc
add
imul
rcrb
sahf
mov
xor
mov
bound
das
lods
in
dec
xor
in
jmp
add
fidivs
xor
and
jbe
mov
sbb
daa
sbb
mov
jle
pop
rol
lret
mov
out
add
data16
cmpb
jno
inc
scas
repnz
ja
jno
test
push
push
aam
mov
mov
negb
into
add
inc
fcmovbe
in
ss
pop
sti
xor
pop
xchg
cmpsl
adc
gs
arpl
push
sbb
push
adc
mov
loope
sbb
pop
and
mov
ja
jle
xchg
ret
cli
inc
sub
xchg
inc
mov
stos
and
cli
xchg
sbb
fs
pop
dec
xchg
sti
push
xchg
ret
out
and
imul
out
lcall
js
sbb
adc
add
cmp
into
rorl
jbe
lret
divb
inc
in
push
in
pushf
jo
test
loopne
inc
hlt
orb
push
jle
mov
inc
ljmp
jne
sahf
movsb
xchg
cmp
and
jle
pop
xor
lea
sub
cmp
rcl
pop
cld
and
mov
ljmp
fdivrp
aaa
adc
data16
loop
add
repz
into
stc
cmp
arpl
movsb
xchg
inc
push
mov
cmpsb
ljmp
push
loope
faddl
mov
jecxz
push
jnp
shlb
mov
mov
sahf
jmp
fistpll
and
mov
adc
xchg
sub
and
sbb
add
pusha
fdivl
push
or
popa
mov
mov
imul
popa
sbb
mov
fwait
fwait
lcall
out
add
jne
aad
mov
xor
out
std
push
outsl
jbe
aad
lea
shll
push
push
shlb
mov
lcall
fld
mov
inc
outsb
jo
mov
or
fdivrl
lock
int
xor
mov
inc
sbb
das
mov
movsb
xchg
sbb
ss
adc
test
pop
pop
shl
popf
jbe
add
mov
and
icebp
shll
add
dec
in
movsb
test
addr16
adc
in
and
out
fs
or
lock
ret
mov
shl
in
lret
mov
or
or
pop
cmp
pop
rol
adc
adc
in
aaa
xchg
pop
int
orl
pop
ficoms
cs
rorl
inc
sub
sbb
out
adc
es
fadds
mov
cmp
imul
mov
jmp
pop
jmp
jbe,pn
int3
arpl
jno
repz
and
leave
adc
adc
jae
mov
mov
mov
lahf
es
insl
dec
and
test
jecxz
in
jge
shrl
into
enter
jecxz
mov
repnz
xor
cmp
mov
or
addr16
arpl
xor
adcb
mov
ret
movl
add
fnstenv
outsb
jle
loope
cld
sub
push
testl
mov
push
push
mov
mov
dec
pop
dec
adc
mov
jl
or
sub
mov
jl
lcall
dec
ja
push
fsubr
pop
xchg
adc
mov
ja
testl
les
outsb
imul
stos
scas
outsb
mov
jg
add
shlb
sub
aaa
testl
add
push
sub
inc
in
movsl
or
xchg
pop
xor
rolb
shl
pop
in
sti
mov
mov
xchg
stc
dec
ds
pop
dec
fpatan
push
xchg
sbbb
sarb
aad
dec
fistpl
js
push
push
push
sti
stos
test
call
pop
mov
mov
arpl
rolb
or
scas
or
inc
fwait
lcall
pop
fsub
stos
inc
push
movsb
fcoms
mov
jmp
xchg
cmp
fdivrl
gs
or
in
insb
scas
hlt
dec
sub
fdivr
xchg
inc
or
fiadds
xor
out
mov
jg
xchg
mov
sar
push
cmp
stc
dec
imul
repz
lea
cmp
xchg
loope
pop
repz
rolb
sbb
mov
mov
sbb
xchg
cmp
test
xchg
fs
jne
sub
and
cmpb
add
cmc
push
mov
dec
inc
fwait
adc
mov
insl
es
and
in
mov
push
pop
mov
ja
pop
pusha
fmull
in
pop
push
dec
inc
xchg
push
xor
mov
mov
jl
pushf
aaa
or
shrb
dec
sub
outsl
push
pop
push
xchg
mov
xor
pop
dec
inc
movsl
call
or
lcall
mov
sbb
dec
mov
jmp
sub
cmp
lahf
aas
sbbb
cmp
and
jae
fdivl
adc
mov
adc
shlb
mov
aam
cmpsl
and
stc
js,pn
lods
in
push
out
icebp
lods
jne
inc
xchg
push
out
sahf
out
ja
mov
dec
andl
sub
inc
pop
sub
pavgb
add
fisttps
daa
push
and
loope
cmp
nop
test
adcl
mov
xchg
mov
sbb
xor
test
insb
xor
jl
shr
stos
insl
in
xchg
sub
or
push
and
xor
lret
mov
pusha
ror
stos
nop
dec
pop
lea
sbb
cmp
xor
lea
pop
and
mov
mov
ficomps
pop
stos
sbb
jmp
mov
cmpsl
or
and
pop
cmp
ljmp
fs
adc
dec
xor
loopne
adc
and
movsb
lret
sub
dec
pop
loope
xor
mov
mov
ficoml
adcl
out
inc
enter
in
xchg
lods
outsl
dec
les
mov
int
inc
outsl
xor
mov
test
imul
mov
cli
negb
cld
sbb
into
inc
adc
xor
les
int
imul
lret
test
jb
jl
mov
mov
clc
sbb
mov
or
arpl
push
fs
dec
pop
xor
pop
jp
fcomps
xchg
add
lcall
rcll
sbb
les
mov
jns
or
cmpsb
jg
mov
pop
je
push
sub
mov
pusha
call
jl
enter
inc
ss
and
push
lock
movl
out
iret
pop
insl
ja
pop
adc
sbbl
push
xchg
aam
sti
cs
push
add
ret
mov
jge
xor
inc
push
cld
dec
pop
jno
inc
jl
adc
into
lods
cmovb
add
xchg
test
daa
loope
mov
push
xchg
out
in
rclb
mov
cmp
cmpsl
mov
daa
loope
outsl
mov
inc
and
mov
fcoml
cld
ret
adc
test
and
insb
out
scas
aas
out
xchg
aad
mov
jnp
fdivs
xchg
lret
adc
imul
mov
and
dec
nop
sub
gs
cmp
out
jo
xor
xchg
ja
inc
add
rcll
cmpb
nop
jecxz
clc
or
xchg
in
in
cli
rcrb
insl
icebp
mov
cmp
adc
bound
test
mov
pop
loop
mov
das
in
sbb
out
xorl
xchg
pop
mov
scas
pop
stos
rcll
mov
and
call
pushf
fidivl
xlat
jbe
outsl
loope
test
out
inc
sahf
mov
jb
movsb
push
mov
sub
and
outsb
sub
push
stos
pushf
stos
imull
mov
cmpsb
cmp
mov
mov
movsb
iret
int3
jno
out
cmpsb
std
pop
mov
movsb
sub
adcb
outsb
and
pop
pop
test
mov
aam
push
aaa
shl
adc
rcrb
xchg
cld
xchg
mov
js
xchg
xlat
mulb
mov
popa
xchg
mov
aad
jbe
ret
sbb
pop
cmp
pusha
or
dec
jge
lods
inc
jl
jg
pop
sbb
leave
rol
in
xchg
inc
clc
int
pop
cmpl
data16
fisubs
push
xchg
and
pop
mov
sahf
jne
jle
add
jnp
pop
cmp
mov
shr
and
insb
movsl
lds
jae
lret
push
cmp
jae
cmp
fisttpl
mov
dec
stc
add
mov
jecxz
movsl
stos
jmp
mov
mov
repz
ret
lahf
inc
xor
or
push
sti
pop
sub
inc
mov
mov
xor
rcrl
push
mov
scas
adc
les
xor
out
in
into
or
mov
add
xchg
mov
test
inc
ds
aam
lcall
and
pop
sar
adc
mov
mov
aas
sub
arpl
movsb
jnp
rolb
dec
xchg
dec
call
push
inc
cmp
mov
jle
fldt
cmp
push
in
sbb
jb
shrl
jecxz
je
out
add
leave
push
mov
in
enter
lar
mov
add
lods
test
cli
inc
loopne
or
fisubs
aas
icebp
ficomps
mov
sarl
dec
xchg
jne
add
jmp
mov
xchg
add
andb
das
mov
fwait
cmc
inc
mov
and
loop
or
xor
jl
sbb
mov
into
mov
or
jo
xorb
xchg
inc
cmpsb
cmpsl
fdivrs
or
dec
clc
mov
jmp
add
cwtl
mov
ljmp
scas
enter
xchg
sub
clc
mov
sub
cld
and
jle
imul
jmp
inc
xchg
jg
sarl
loopne
and
xor
add
mov
sub
movsb
mov
das
jmp
dec
mov
cld
push
push
popa
in
int3
and
clc
addb
inc
arpl
fs
dec
jp
cmp
fdivr
mov
movsl
insl
scas
jne
pop
mov
push
push
inc
inc
xor
push
cltd
int3
lret
jl
icebp
out
adc
xchg
push
shlb
lret
xchg
std
cli
cmp
mov
test
mov
aam
outsl
mov
mov
cmp
shl
cmp
repnz
sahf
arpl
adc
outsb
out
frstor
inc
dec
inc
add
or
cmp
or
cmp
push
ds
jge
push
cmp
and
mov
fmuls
and
sbb
mov
jg
xor
cwtl
fcomps
inc
movsb
adc
jle
push
xchg
or
xlat
cld
sahf
mov
adc
imul
push
adc
out
ss
adcb
pop
and
inc
xor
sahf
out
jno
repnz
stos
mov
jl
in
popf
repnz
pop
sbb
jae
loop
imul
hlt
stos
in
and
jne
mov
jb
ljmp
jmp
lahf
sbb
rcr
inc
xchg
movsb
xor
push
xchg
lret
jg
xlat
pop
out
lea
and
mov
xchg
cli
leave
push
and
in
mov
leave
push
icebp
adc
pop
outsl
dec
mov
sub
pusha
push
movb
movsb
and
cmp
fcoml
add
add
and
js
xchg
or
sub
repz
inc
fisttpll
push
inc
fsubr
in
jne
aas
testl
mov
loopne
or
pop
fld
cmpsb
int
mov
and
dec
cmc
mov
sub
lods
pop
pop
mov
jb
add
mov
jmp
or
addr16
jae
push
hlt
push
ds
nop
cmpsb
or
in
mov
xor
fistpll
dec
mov
popf
cmp
out
movsl
push
les
adc
lods
sbb
fdivrl
cmp
mov
push
dec
sbb
xchg
sbb
jb
cltd
xchg
enter
jbe
xchg
addl
bound
inc
scas
and
js
adc
lcall
jae
cld
or
adc
or
xor
push
xor
jno
jnp
mov
xchg
inc
cmp
shr
pop
add
and
movsb
mov
inc
test
sti
lods
add
sub
cmp
jns
push
adc
pusha
push
and
out
into
mov
mov
xor
inc
mov
jl
xchg
xchg
mov
pop
pop
les
lret
insl
call
imul
js
adc
adc
lcall
call
jno
cwtl
mov
pop
outsb
fidivrs
stc
cltd
mov
and
inc
jp
inc
fistl
std
push
out
mov
mov
jle
or
and
mov
push
cmc
out
mov
cmp
mov
ret
outsb
cmpsb
nop
sub
mov
aas
into
test
ljmp
scas
and
fistl
test
insl
rclb
cmpsl
cmp
xchg
insb
into
lods
das
mov
sub
jp
jmp
pop
je
mov
and
repz
daa
inc
push
nop
testb
jnp
loope
aam
dec
or
push
lahf
dec
dec
andl
mov
aad
jbe
test
movsl
stos
xor
dec
leave
sub
mov
or
push
insl
push
icebp
jmp
pop
mov
ret
les
sbb
push
adc
cmpsb
cmc
orb
pop
push
popa
add
clc
cmp
aas
orb
clc
push
ds
adc
sbb
jmp
pop
les
inc
mov
stos
outsb
sub
mov
jge
xlat
fldt
push
roll
jne
mov
test
dec
mov
popf
cld
fdivrs
sub
and
dec
pop
xchg
test
jmp
ficomps
hlt
lahf
ljmp
xchg
std
in
js
mov
pushf
test
rol
mov
popf
mov
ror
cmp
aam
push
mov
div
popf
jnp
cmc
xchg
cmpsb
cmpb
in
cs
rcr
insb
sub
inc
sbb
repnz
jnp
xchg
and
cli
fdivr
pop
mov
or
cmp
mov
push
mov
inc
outsb
insb
daa
ret
pop
sbb
pop
jmp
ds
test
jo
mov
cmp
loope
insb
xchg
aaa
in
push
pop
jno
mov
xchg
imul
fsub
and
ss
jecxz
or
andl
fsubrs
cs
and
sbb
xchg
fdivr
pop
outsb
xchg
and
push
or
dec
in
pop
addr16
sbb
lahf
insb
mov
jnp
ljmp
out
lods
js
scas
cli
dec
ficomps
push
sbb
outsl
mov
test
dec
repz
jnp
push
mov
xchg
lahf
int
jb
mov
mov
dec
mov
cmp
push
jp
fisubl
sub
jns
or
scas
ds
ljmp
mov
out
xchg
cmpb
inc
sub
aam
fwait
shll
repz
enter
mov
sub
bound
dec
imulb
and
jne
mov
add
out
adc
adc
xchg
das
fs
push
push
and
inc
call
cmpsb
push
dec
in
aad
dec
mov
les
push
fildll
loop
out
lea
mov
push
enter
xorb
mov
xor
jp
inc
or
adc
cmp
cmp
movsb
clc
push
mov
mov
fwait
push
popa
pusha
inc
js
adc
jbe
mov
into
xor
push
call
xchg
jl
outsl
push
or
pop
or
sub
lahf
mov
jg
stos
mulb
insl
imul
lahf
or
add
dec
adc
adc
stc
mov
mov
inc
enter
pop
pop
leave
and
xor
sti
xchg
cmpb
xchg
dec
jl
mov
das
mov
gs
xor
sub
sarl
cli
lret
add
std
lcall
jae
arpl
pusha
scas
push
cli
leave
in
xor
pushf
jle
cmp
cltd
inc
fidivrl
aaa
mov
mov
ret
insb
imul
inc
jo
popf
les
loopw
cmc
fnstenv
cmp
jb
cmp
xor
cmp
xor
in
cwtl
loope
xor
cld
pop
pop
jne
or
imul
mov
mov
aam
mov
jle
mov
lret
fmuls
add
push
push
jmp
mov
adc
movsb
jg,pt
repz
jl
mov
mov
jb
daa
inc
clc
mov
or
fs
mov
sbb
sbb
or
adc
cmc
push
pusha
dec
push
add
jecxz
add
fistps
rorl
jl
std
test
mov
rcrl
repnz
fiaddl
in
push
push
xchg
clc
orl
xchg
iret
out
inc
push
shll
sbb
fisttpl
dec
and
mov
xor
inc
push
movsl
icebp
dec
xor
adc
push
pop
jae
subb
scas
fidivs
enter
inc
add
repz
lret
into
cmp
arpl
in
aas
fsts
setno
cmpsb
inc
mov
lea
sahf
movsb
loop
add
ds
dec
inc
int
lock
sub
or
xor
xchg
shrb
lods
das
cltd
iret
adc
xchg
addb
adc
jl
xchg
shlb
adc
cld
mov
ud2
inc
dec
mov
jle
mov
repz
insl
pop
jbe
dec
sbb
push
jno
fidivrs
pop
pop
sbb
cmpsb
adc
xor
cmpsb
push
mov
or
lods
jno
mov
pop
stos
push
gs
jae
pop
push
add
adc
adc
shlb
push
adc
jmp
out
or
testl
rcll
mov
dec
fldt
pop
sbb
sbb
and
mov
push
repz
or
cmp
cwtl
lea
jnp
mov
cli
sub
cmpl
and
jbe
mov
out
lret
ljmp
ja
sbb
and
cmp
sbb
pop
cmp
insb
cld
flds
test
pop
popa
mov
daa
xor
inc
push
jbe
scas
add
hlt
test
mov
mov
ffree
jge
lea
pop
dec
sbb
adc
test
insl
pop
ja
xchg
notb
and
push
rorb
fadd
pop
decl
rorb
ss
mov
push
mov
mov
xchg
mov
mov
mov
scas
loop
sbb
mov
shl
mov
fwait
notl
pop
fcoms
pop
imul
mov
mov
mov
scas
sub
pop
cmp
pop
or
pop
mov
mov
mov
stc
jecxz
js
movsb
aad
cmpsb
das
jnp
orl
or
je
insl
shlb
xor
filds
cli
out
mov
sub
mov
shlb
cld
insb
bound
cmp
adc
iret
in
cltd
mov
test
inc
gs
add
sbb
pop
int
jno
sub
lret
xor
xor
xor
ds
stos
lods
inc
dec
cmc
pop
ret
add
ja
out
out
mov
int3
jno
clc
cld
mov
jle
pop
shlb
ret
xchg
sub
lea
or
js
out
add
or
loop
jp
xor
in
fwait
dec
lock
lods
hlt
push
mov
imul
cmp
enter
push
pop
jno
mov
rcll
loopne
mov
jae
xlat
xor
xchg
out
push
in
loope
mov
negb
xchg
out
jne
mov
push
outsl
adc
fimuls
dec
test
incl
cli
push
aad
daa
dec
outsb
gs
aas
xchg
add
popa
mov
pop
pushf
sti
sbb
pusha
bnd
push
lret
fmuls
shr
or
mov
jmp
int
jp
mov
pop
and
cmp
add
xchg
push
shl
pop
xchg
je
cld
xchg
mov
fmul
cwtl
cli
inc
xor
cmpsb
inc
add
pop
and
ljmp
int3
jne
std
test
adc
in
mov
popa
call
iret
inc
xor
cmc
mov
ds
or
rorb
fdivrs
jp
leave
pushf
fcmovu
incl
sbb
dec
lds
jbe
rorl
addr16
push
jb
ljmp
lods
fildll
cltd
push
les
xor
jge
test
dec
xchg
mov
ja
sub
call
popa
subl
jl
push
mov
cmp
dec
stos
shl
and
cmp
jmp
fdivrl
dec
es
pusha
xor
mov
pop
subb
sub
pop
icebp
icebp
pop
jb
sbb
inc
lea
test
xorl
cmpsb
pop
movsb
push
shl
stos
outsb
es
dec
sbb
stc
push
push
inc
ja
fwait
xor
jmp
add
in
mov
and
dec
test
push
dec
jmp
dec
jl
movsb
es
pop
icebp
mov
mov
int
into
fbstp
test
ss
inc
add
fsubs
push
aaa
mov
mov
data16
in
cwtl
xor
pushf
shll
dec
stos
js
xor
cmp
ljmp
imul
mov
dec
xchg
push
mov
xchg
les
shll
std
dec
pushf
popa
jae
and
xchg
and
jno
add
sbb
fldln2
das
mov
cs
xchg
dec
or
adc
xlat
mov
jae
cmc
shrb
push
dec
cs
cmp
sti
jnp
xchg
jbe
adc
shr
dec
stc
or
mov
adc
pop
cwtl
mov
jae
gs
inc
iret
xchg
lret
xchg
sarb
je
push
popa
cli
mov
xchg
sti
jg
mov
xchg
rcrl
cmp
add
lods
movsb
pop
push
xchg
rcl
fucom
sub
jno
and
hlt
push
in
popa
ja
dec
xchg
dec
fs
lods
in
and
fdivrs
in
and
jle
xchg
lret
mov
fnstenv
dec
repz
out
dec
push
xchg
or
movsb
cmp
cltd
in
xchg
pop
push
sub
inc
jg
in
rolb
jmp
dec
and
push
les
pop
jmp
sub
jbe
aad
hlt
xchg
sub
repz
cmp
mov
sahf
loope
outsl
mov
clc
adc
gs
scas
mul
ret
sub
pusha
dec
add
or
sbb
mov
and
sarb
or
xchg
pop
mov
mov
lret
test
aaa
sbb
dec
xchg
jecxz
xchg
clc
mov
xchg
push
jno
jno
mov
pop
mov
shll
outsl
cmp
mov
jbe
std
ret
cmp
or
sbbb
xchg
jno
and
adc
xchg
icebp
test
or
add
and
cmpsl
out
sbb
mov
or
dec
mov
daa
jle
test
outsl
dec
add
cmpsl
push
lods
loopne
inc
imul
js
dec
jecxz
push
sbb
add
cwtl
xchg
xchg
inc
imul
rcll
or
dec
movsl
pop
mov
cli
jae
jl
data16
in
lods
sbb
dec
scas
jae,pt
cmp
mov
mov
cmpsb
mov
mov
test
fmulp
testl
sub
and
jg
pushf
pop
ret
cmp
inc
cmp
sub
jle
pop
jnp
js
lcall
sub
xor
fldl
xor
es
repnz
adc
insl
subb
fdivrp
icebp
es
sahf
fwait
jae
mov
mov
dec
jp
sarb
gs
lcall
push
sub
out
lods
mov
jae
test
sti
sbb
lahf
andb
std
sbb
js
imul
shr
out
shll
sub
jg
jle
cmp
sbb
fldz
sbb
in
mov
ret
push
xor
lds
lahf
adc
enter
mov
and
dec
push
jecxz
ja
sbb
aad
bound
mov
dec
sub
xchg
push
adc
fimuls
loope
cwtl
sub
ret
notb
ds
andb
push
out
stos
sub
pop
mov
sbb
loopne
xor
xchg
popa
rcrb
sbb
mov
loopne
shr
lock
fs
sbb
imul
sbb
xchg
or
shlb
inc
loop
xor
push
pop
sbb
pop
jmp
cmpb
mov
int3
pushf
in
cs
popa
mov
jecxz
int3
sbb
push
popf
adc
xchg
dec
addr16
inc
neg
out
test
pop
lret
ret
lret
insb
rorb
inc
enter
jbe
cli
sub
rcl
fwait
xor
mov
and
xor
cmp
icebp
pop
mov
dec
xor
lods
movsl
aaa
xor
adc
mov
jmp
dec
pop
mov
js
and
cmp
outsb
jle
and
lahf
push
pop
sti
daa
loopne
xchg
xlat
mov
popa
sub
dec
pop
fidivrs
xor
ret
pop
and
filds
inc
xor
jbe
cmc
push
mov
pop
les
and
out
fsubp
mov
cs
pop
xor
add
cmp
and
lret
mov
loope
or
cmpsb
test
outsl
icebp
xchg
push
mov
outsl
cld
lods
fistps
fnstsw
cmc
adc
xchg
adc
add
insb
fcomi
push
rorl
mov
xlat
mov
add
andl
or
dec
jae
inc
outsl
pop
add
shrl
cmpsb
repnz
jb
cmpsl
fnstcw
mov
mov
ficoms
ljmp
dec
fcoms
repz
gs
rorb
aas
xlat
mov
hlt
movsb
xlat
in
int
dec
iret
xchg
cmpsl
cmpsl
push
cmp
int
mov
cmp
pop
and
or
ret
mov
xchg
hlt
jge
and
fs
jnp
pop
stc
jp
push
and
out
mov
or
xchg
add
mov
xchg
fisttpll
fidivrl
xchg
xor
mov
and
inc
hlt
and
sbb
jae
ja
shlb
aam
sbb
inc
popa
arpl
dec
cmpsl
jmp
fs
ffree
out
inc
inc
mov
or
std
cmp
clc
xor
test
shlb
cmp
sub
fcoms
in
sbb
outsb
shl
dec
push
add
and
aad
pop
cwtl
test
push
mov
je
push
xor
scas
mov
cmp
aad
mov
adc
mov
xchg
loop
xchg
fcmovnbe
repz
out
out
call
loop
pop
sub
dec
mov
stc
pop
and
mov
sahf
sbb
pop
sub
cs
pop
xor
mov
add
jmp
hlt
or
cwtl
lock
pop
icebp
push
inc
stc
lods
sub
mov
add
inc
int
fcmovnb
mov
insb
inc
or
mov
dec
sti
jp
fldt
and
mov
mov
adc
or
out
adc
xchg
scas
sbb
sbb
iret
fsub
pop
lahf
repnz
xchg
pusha
fs
lret
adc
int3
insb
je
inc
jp
pop
shr
andl
lret
or
ret
dec
faddl
clc
lds
sub
adc
mov
dec
cmpsl
inc
inc
or
cmp
and
add
test
jle
pop
xor
rcll
fsub
xor
nop
mov
mov
std
aaa
loope
mov
xor
lcall
sbb
xor
xchg
pop
aam
cmpsl
notb
sbb
fs
outsl
popa
mov
lods
std
shlb
jp
mov
xor
mov
icebp
cwtl
in
ret
inc
cmp
fstps
sub
movsl
sbbb
daa
dec
out
int3
mov
pop
or
cmp
xor
rcr
roll
adc
mov
or
mov
repz
ficoml
mov
or
push
dec
aad
cmp
sub
arpl
pop
cld
add
pop
call
test
jge
lock
out
hlt
cwtl
jae
scas
into
mov
imull
or
add
bound
lcall
inc
gs
adc
rorb
xor
sub
ss
inc
push
jg
add
loope
movsl
outsb
in
jmp
ljmp
jne
mov
rorb
push
cwtl
jnp
lods
and
jp
clc
clc
or
test
or
push
pop
xor
cmpsl
xchg
fwait
push
testb
adc
test
pop
push
insb
add
push
dec
pop
sbb
rorl
in
dec
sbb
xor
mov
push
int
repnz
mov
pusha
add
ja
xor
xor
add
and
jb
mov
push
xor
in
leave
jg
movsl
lcall
inc
ret
les
ficompl
mov
ljmp
dec
ret
mov
insb
out
imul
and
out
fnsave
mov
sub
mov
stos
lret
cmp
stos
or
iret
jbe
aam
cmp
stos
push
or
sbb
inc
xchg
bound
mov
mov
sub
or
mov
icebp
rol
lds
mov
lock
loope
adc
or
das
xor
outsb
js
sub
fildll
arpl
test
and
or
xor
pop
cwtl
jmp
and
popf
xor
sub
mov
adc
push
mov
xor
out
mov
movsb
das
mov
mov
cmp
cli
stos
inc
gs
xchg
jne
xor
or
mov
popf
and
and
iret
bound
ja
std
es
test
push
outsb
sbb
repz
add
cwtl
ljmp
add
movl
sub
mov
int3
fiadds
out
or
or
adc
fwait
shll
push
pusha
mov
pop
jne
inc
fadd
jle
cld
xor
ret
rcl
cwtl
jbe
adc
xchg
push
daa
inc
mov
cmp
xor
push
lods
mov
sahf
mov
test
sbb
cmp
and
mov
xchg
call
daa
lcall
ja
adc
lock
into
test
lea
shll
in
movsl
imul
sbb
ss
adc
pop
cmpsl
pop
xchg
gs
xor
mov
pop
xchg
nop
outsl
xchg
out
ffree
out
out
cmp
in
pop
pushf
adcl
mov
aam
mov
xchg
mov
adc
dec
shll
insl
dec
out
xchg
cmp
dec
xchg
and
stos
fiaddl
or
pop
xchg
leave
xchg
or
dec
push
lods
aaa
fs
mov
add
push
cmp
or
xchg
loop
inc
or
ja
cmp
push
push
mov
pop
or
shl
fisubrl
fisubs
insb
mov
xchg
jae
push
loopne
inc
imul
popl
lret
pop
clc
jns
or
add
xchg
enter
and
imul
fisubs
js
outsl
aas
pop
or
and
jmp
lcall
mov
paddsb
vandps
or
loopne
dec
fsubrl
adc
xchg
sbb
mov
push
stc
pop
data16
jae
loop
arpl
inc
movsb
jmp
loop
sbb
outsl
shlb
and
dec
dec
push
addr16
sub
ficomps
in
mov
xor
pop
push
call
add
or
cld
repz
stos
and
into
je
push
and
xor
push
rorb
loop
pop
lcall
movsb
mov
pop
test
mov
xor
loope
mov
or
xor
mov
dec
insl
in
cltd
cli
lods
das
xchg
and
and
xchg
stc
imul
addb
inc
jnp
js
add
inc
cwtl
orb
lret
aas
sub
cmpsl
dec
mov
arpl
sti
lcall
or
sbb
sbb
add
and
and
sahf
pusha
dec
lods
outsb
ret
push
lods
and
test
sub
push
insb
jge
dec
jle
add
inc
jbe
push
mov
sub
aam
fcomp
sub
jmp
mov
cmp
sub
mov
push
imul
inc
loope
pop
fcoml
loope
lds
bound
push
leave
add
rcrl
pushf
rorl
test
inc
pop
cmpsb
xchg
inc
das
dec
stc
dec
test
enter
inc
cmp
dec
dec
repnz
pop
push
push
mov
addl
mov
xchg
lcall
jmp
add
gs
cld
aas
lock
and
fnstcw
mov
dec
repz
std
enter
int
cltd
push
cmpsl
sbb
das
in
mov
sub
neg
jbe
sahf
and
ficoms
es
and
inc
xchg
lods
mov
call
inc
imull
mov
mov
sbb
mov
xor
add
test
decl
data16
jg
stos
sub
mov
jne
sub
fsubs
pop
in
stos
ss
lret
cs
pop
add
out
call
lcall
subb
mov
add
repz
jno
mov
cmp
cmp
imul
xor
push
lret
xchg
in
or
movsb
xor
cmp
dec
mov
cmp
stos
mov
xor
xchg
cli
jp
shll
mov
push
or
ja
or
xor
mov
dec
xchg
xlat
pop
enter
push
out
mov
andl
mov
lock
push
icebp
test
mov
fnstsw
cs
aaa
pop
mov
lods
push
int3
shrb
repz
repnz
xchg
lcall
push
mov
sub
movsl
sbb
fmull
insl
sub
lods
jno
aad
ss
jle
xor
repz
repz
dec
and
jl
add
std
fisubrs
outsb
jge
adc
call
push
ret
stos
push
adc
pop
flds
ret
or
add
jg
rclb
aam
jns
aas
adc
in
xlat
xchg
push
addb
std
flds
fdivs
dec
xorb
test
push
in
xor
sub
aam
iret
loopne
ljmp
je
cmpsb
pop
xlat
mov
enter
sbb
pop
jbe
xchg
ja
cld
sub
aas
pop
and
push
lret
test
shll
fdivs
fnstcw
or
or
pop
inc
cvtpi2ps
sub
mov
lret
fidivrl
dec
sarb
int3
lret
sbb
cmpsb
jge
xchg
xor
insl
gs
aaa
xor
addr16
stos
frstor
push
leave
in
pop
mov
xor
sub
jne
add
mov
pop
cmpsl
lds
push
inc
loopne
add
je
andb
nop
das
popa
xor
sbb
lods
ret
pop
fldcw
xchg
xor
cmp
push
ss
ficompl
lock
arpl
push
insb
test
pop
lretw
or
outsb
fldt
imul
jecxz
cmpl
ret
pushf
in
aaa
mov
inc
ja
mov
pop
pop
repz
and
daa
int
xlat
dec
xor
sub
and
in
mov
imul
adc
xchg
cwtl
pop
lea
aad
out
sub
incb
push
subl
das
jno
js
cwtl
xchg
les
adc
adc
add
cmp
rclb
add
pop
xor
sbb
add
push
mov
mov
or
rclb
inc
popa
pop
test
dec
mov
sub
rol
sbb
cwtl
mov
movsl
sbb
xor
stos
lret
xchg
out
inc
std
enter
pop
pop
add
xchg
or
xor
inc
jno
pop
sub
cmp
out
push
popa
pop
enter
jge
add
loop
mov
mov
test
out
scas
fisubl
xor
les
and
sub
addr16
lods
jmp
or
inc
mov
add
out
add
call
jbe
sub
pop
adc
jae
or
xchg
fwait
test
je
test
enter
movsb
mov
adc
aaa
jmp
inc
add
ret
ja
pop
imul
mov
add
cmp
push
loope
sti
add
fmulp
lds
push
std
jnp
in
push
ss
push
es
cmp
roll
lea
movsl
sti
test
mov
ficomps
in
pop
sbb
test
jle
adc
out
jne
add
sti
lods
push
pop
pop
mov
adc
sbb
cmp
mov
pop
loopne
ds
jns
movsl
sub
xchg
cltd
pop
mov
cld
adc
dec
or
ljmp
sahf
xor
mov
dec
dec
pop
call
xor
fidivrs
aad
inc
data16
outsl
ljmp
cmpsb
aad
ret
repz
into
mov
sarb
mov
sbb
push
orl
je
cmp
shll
jmp
adc
mov
in
bound
ja
ficompl
xor
mov
add
and
out
or
lea
ljmp
ljmp
in
push
cltd
xchg
jle
xor
xor
adc
dec
fadds
fstpt
cs
xor
push
imul
fisubs
sbb
int3
stc
orl
stc
and
addr16
or
add
arpl
pop
jmp
mov
mov
sbb
arpl
lds
sbb
pop
add
xor
jo
xor
jne
out
jo
les
dec
push
outsb
pop
inc
fdivrs
lret
cmp
mov
hlt
dec
jge
xor
xor
ss
cmp
or
cltd
push
pop
in
mov
fcompl
repnz
add
fs
stos
cmpsl
mov
jge
adc
xchg
sub
lcall
in
mov
or
mov
sbb
cltd
loope
add
fstl
jle
and
out
and
inc
cmp
xchg
and
icebp
dec
inc
sbb
pop
arpl
mov
push
ss
cmpsb
stos
xchg
pop
mov
jecxz
mov
push
lock
dec
push
push
sbb
pmulhw
xchg
sahf
insb
jb
push
sbb
scas
xchg
and
xchg
dec
push
xor
lcall
andb
sub
lahf
ret
push
sbb
in
and
cmp
movsl
mov
ss
mov
pop
stc
loop
inc
mov
stos
test
xor
xor
adc
jne
aad
sub
fstpl
sbb
mov
ret
jns
xchg
addr16
mov
cmpsb
ja
jbe
mov
xchg
cmp
mov
jp
negb
fwait
rorl
jno
push
adc
out
rcrl
fwait
mov
pusha
test
jecxz
push
int3
ds
xor
lcall
adcb
and
sarb
cmp
inc
das
mov
jb
in
fisubl
inc
lahf
push
outsb
iret
test
sbb
cmp
pop
pop
push
leave
mov
adc
je
clc
pop
les
ljmp
aas
fadd
mov
shrl
jge
addl
bts
frstor
lea
xor
xchg
lea
std
mov
leave
cmp
xor
aas
loop
sahf
jnp
ja
stos
adc
dec
lods
pop
xchg
pop
xchg
andps
insl
jne
dec
dec
in
pusha
fimull
adc
jmp
mov
sti
lret
jae
loope
sti
test
dec
mov
pushf
mov
pop
int
lret
repnz
inc
pop
fwait
sub
jb
sub
mov
xchg
pop
xchg
xchg
je
inc
into
mov
jg
xchg
and
pop
xor
pop
dec
xchg
ret
arpl
cs
out
lea
pop
add
mov
pushf
inc
imul
pop
shll
cmpsb
fidivl
mov
enter
popl
sub
dec
jle
and
sbb
inc
lods
mov
mov
jns
ret
cmc
xchg
ja
mov
jg
add
hlt
cmp
out
jge
pop
imul
mov
inc
or
lret
and
mov
add
sarl
add
outsl
in
int
imul
lret
les
mov
push
clc
shll
and
sub
fimull
push
mov
dec
adc
or
pop
xchg
pop
and
push
mov
sub
jge
ds
mov
hlt
bound
mov
sbb
repz
int
cmc
dec
mov
out
push
mov
or
and
mov
faddl
mov
in
cltd
sbb
sub
mov
icebp
jnp
cltd
rcll
jg
aad
fisubl
test
or
push
sbb
adc
xchg
fs
imul
in
fiadds
jp
pushf
out
and
dec
xchg
mov
jns
mov
test
jae
push
andb
dec
repnz
outsb
negb
jns
inc
pop
insl
pop
push
test
jge
xchg
mov
sub
nop
cs
das
cs
pop
inc
or
push
or
and
mov
aaa
mov
sub
mov
push
aam
jbe
repnz
mov
jne
fildll
hlt
dec
movsl
aam
int
dec
cmp
mov
fbld
daa
adc
les
sub
add
xchg
roll
loop
imul
nop
scas
mov
ficomps
cmp
jbe
lahf
and
imul
jle
je
repnz
jecxz
adc
pop
xchg
bound
push
lock
mov
inc
test
mov
orb
inc
adc
jge
add
hlt
push
push
or
addr16
cmpsl
jmp
sub
mov
out
pop
cmpsb
test
pop
cmp
sbb
aam
sbb
aas
pop
sub
into
decl
imul
adc
gs
in
ret
hlt
imul
pop
pop
daa
inc
adc
or
mov
fidivrl
hlt
into
bound
sbb
and
pop
cmpl
lret
je
fcmove
mov
bound
aam
test
inc
push
gs
stos
pop
daa
aas
xchg
ja
repnz
ljmp
jmp
or
cli
mov
mov
push
ljmp
jne
lock
das
jbe
inc
fisttps
outsl
dec
inc
test
adc
jmp
mulb
mov
cmc
adc
cld
sbb
loope
pusha
jp
or
fcomps
and
popf
jb
aam
add
adc
clc
mov
adc
and
mov
data16
hlt
push
arpl
jne
bound
push
lahf
ss
shll
cmpb
mov
jge
lods
and
add
ljmp
pop
sbb
aam
xchg
xor
xchg
iret
movsb
enter
je
adc
xor
and
out
fcmovnb
or
xchg
fdivrs
test
and
test
mov
push
xchg
mov
sbb
xchg
jl
int
dec
xchg
shll
push
add
push
adcl
in
fisubl
jg
jno
add
add
andl
fdivrp
lods
out
fwait
or
imul
mov
add
push
nop
mov
sti
outsl
ds
mov
cmpl
fildl
aaa
scas
fwait
shll
pop
imul
pop
push
fadds
cmp
ret
popf
int3
push
mov
xor
add
adc
data16
imul
enter
out
jg
pop
sbb
fucomi
cmp
add
les
sub
fdiv
xchg
or
insb
cmp
mov
rdpmc
pusha
roll
sub
mov
sub
mov
jp
inc
sbb
cmp
push
clc
cld
std
xor
mov
jbe
icebp
xchg
cmpsl
repz
fdivl
hlt
movsl
and
sbb
sti
push
sahf
mov
sub
insl
imul
mov
popa
mov
lods
cld
dec
push
mov
or
stos
sbb
push
inc
sub
sbb
xchg
scas
jno
aas
or
lods
mov
jb
stos
daa
jo
aas
add
xchg
pushf
dec
jle
push
or
repz
out
rolb
stos
add
inc
cmpsl
repnz
sub
xchg
cmp
nop
and
rorl
push
xchg
inc
repz
subl
jle
gs
negb
and
cmp
dec
aaa
adc
cmp
sub
ret
negb
sahf
and
popf
or
mov
outsb
les
or
and
pop
decl
jae
es
lahf
aad
xchg
scas
mov
pop
push
clc
jl
push
lcall
push
jnp
push
out
insb
in
aam
aaa
scas
mov
jmp
mov
and
ljmp
mov
mov
ret
push
pushf
mov
mov
in
jl
mov
mov
pop
fldcw
clc
cli
dec
fwait
test
pop
test
pusha
pop
and
notl
negl
xor
sub
pushf
push
jle
xchg
jb
xor
mov
subl
lock
fsubrl
fsubrs
adc
jnp
jno
pop
push
scas
dec
jl
outsb
xchg
lcall
mov
pop
dec
cmp
sub
mov
das
and
xchg
lds
add
data16
pusha
and
das
add
ljmp
pop
fcompl
fwait
sub
mov
pusha
jae
pushf
xchg
iret
add
mov
test
adc
push
inc
dec
and
idivl
mov
int
fcomip
loopne
js
adc
mov
movb
scas
mov
cld
adc
aad
testb
jg
cmc
jg
xchg
addb
push
jl
mov
pop
frstor
cmp
mov
mov
adc
push
cmp
loope
sub
insb
sbb
test
in
mov
adc
enter
repnz
mov
mov
in
xchg
pop
mov
nop
cmp
cs
mov
jnp
adc
and
pushf
aaa
xchg
mov
outsl
inc
in
nop
and
repnz
cltd
shlb
lret
sub
test
mov
stos
jns
imul
mov
je
adc
pop
push
pusha
push
inc
in
xor
hlt
cmc
out
mov
mov
cmp
cltd
jmp
les
jmp
jecxz
jle
xor
cmp
mov
cmp
popa
xchg
lds
cwtl
shr
inc
xor
icebp
insl
sub
pusha
push
dec
hlt
enter
aam
mov
into
cmp
divb
out
xchg
cltd
push
std
lock
push
and
adc
addr16
mov
push
lcall
push
push
cs
rorl
mov
std
pop
dec
push
jne
aam
mov
cmp
mov
addr16
or
das
fidivrs
out
xor
add
inc
pop
imul
xchg
pop
aad
sbb
pop
ficompl
frstor
dec
js
in
test
out
nop
push
cmp
mov
stos
outsl
das
pop
push
popf
cmp
lahf
sbb
cmp
aam
jl
or
push
fidivrs
dec
or
ljmp
sbb
xchg
inc
jp
dec
aaa
sub
leave
or
fildll
in
jl
mul
adc
imul
mov
mov
iret
mov
push
xchg
shlb
adc
xor
scas
scas
xor
push
add
dec
and
jnp
dec
testb
push
mov
mov
push
or
pop
push
je
cmove
mov
call
mov
pop
push
fidivl
inc
and
jne
adc
jno
sub
hlt
rorl
xchg
shl
xchg
mov
fnsave
rorb
aad
aad
jecxz
mov
in
mov
js
fmuls
xchg
mov
xchg
stos
push
adc
lahf
push
movsb
ret
lock
lods
or
lcall
leave
sub
jle
movsl
jmp
cltd
add
paddsw
xchg
lea
popl
mov
cmpsb
and
lahf
nop
sbb
andb
int3
pop
push
xchg
aas
cld
insb
movsb
stc
or
cwtl
lds
fbld
push
aas
leave
mov
cld
inc
mov
add
xor
xchg
sub
mov
mov
lea
mov
into
or
add
pop
xchg
in
jmp
xchg
push
cwtl
and
add
mov
std
and
movsl
add
mov
jle
adc
dec
cwtl
shl
sub
mov
pop
sti
fisubrs
imul
sub
push
cmpl
mov
fidivs
inc
sub
in
ljmp
stos
push
outsb
adc
mov
movsb
mov
mov
mov
sub
pop
cmp
lods
jg
arpl
popa
or
fstl
mov
sub
imul
hlt
imul
add
ss
ss
out
xchg
aaa
inc
push
loop
xchg
fwait
mov
inc
fsubrs
xchg
or
xchg
mov
loop
pop
lahf
sbb
add
psubb
jp
mov
jnp
pop
adc
test
xchg
mov
push
scas
loop
dec
and
pop
jmp
mov
popa
jno,pt
imul
jge
or
or
xchg
mov
xchg
ret
cmpsb
xchg
imull
xor
push
scas
outsl
push
fisubrs
jecxz
sbb
in
aad
enter
sub
es
xor
pop
ja
popf
cld
in
adc
push
jno
jo
ret
repnz
jp
or
inc
push
mov
sub
mov
jmp
or
add
aam
inc
push
scas
in
clc
xor
js
mov
loop
lahf
hlt
xchg
negl
mov
mov
inc
mov
and
dec
sbb
insb
sub
scas
xchg
inc
push
mov
lods
in
or
xor
or
sbb
cwtl
dec
movsl
out
or
dec
lds
shlb
lock
or
xchg
scas
inc
lcall
clc
mov
inc
aas
insl
pop
rcl
push
hlt
sub
pop
sbb
cltd
jbe
loopne
mov
sbb
add
sbb
cld
ficompl
les
mov
ljmp
mov
xchg
es
add
pop
mov
inc
imul
lock
les
sbb
int
mov
fiaddl
ror
cmc
std
xchg
sarl
outsl
and
rcrl
aas
testl
pop
xor
cs
fiadds
xchg
fisubs
sub
pop
shll
cmc
inc
neg
jle
mov
add
lods
sbb
rcll
mov
sbb
mov
lock
xchg
in
dec
orb
cmp
int3
stc
cwtl
mov
stos
pop
mov
iret
or
jne
out
into
test
dec
es
lret
xlat
fldt
mov
mov
test
loop
ljmp
mov
repnz
test
add
pushf
mov
inc
hlt
cmp
mov
push
gs
call
dec
bound
fwait
pop
subl
test
dec
push
inc
mov
movsl
or
into
lcall
jle
pop
rolb
lea
jae
inc
insb
jp
aaa
outsl
insl
adc
jle
out
dec
icebp
or
out
rorb
mov
js
shll
fisttpll
cmc
leave
add
imul
cwtl
out
add
xlat
es
adc
pop
push
add
mov
jnp
sub
inc
ret
scas
pop
and
frstor
inc
cmp
mov
adc
xor
fnstsw
movsl
push
jnp
inc
inc
sbb
pop
dec
testb
loope
ficomps
sbb
push
xchg
jbe
inc
add
xor
mov
lahf
mov
cltd
iret
sub
jae
int3
xchg
cli
push
adc
dec
sbb
mov
in
jne
inc
arpl
and
jnp
movsb
data16
inc
in
dec
imul
push
aas
inc
mov
sahf
fstps
das
daa
js
ret
push
out
je
xor
jge
lcall
and
out
pop
mov
popa
ret
jp
fwait
pop
sub
repz
aad
mov
push
in
lock
orl
dec
int3
and
mov
dec
sti
mov
movsl
dec
sub
jns
loope
push
push
sbb
shl
stos
and
sub
das
es
xchg
in
dec
repz
rcrl
xor
and
sub
lds
adc
das
cmp
hlt
cmc
cmp
adc
jmp
or
pop
pop
sub
test
push
test
pop
mov
adc
push
pop
ret
jo
push
mov
inc
and
test
call
jle
jnp
adc
and
movsl
xchg
xchg
scas
or
into
testl
adc
lock
sahf
sbb
inc
push
das
pushf
rol
pop
scas
pop
mov
cmc
aad
lret
jg
nop
push
or
ljmp
pop
scas
nop
rcrl
and
jns
adc
mov
mov
scas
scas
mov
dec
cmp
in
int
pop
addb
xchg
inc
cmp
and
push
push
mov
mov
movsb
out
push
mov
pop
xchg
pusha
pop
out
adc
xchg
cli
mov
inc
ja
mov
rorb
loope
and
fcoml
dec
mov
mov
and
dec
loope
mov
xchg
fbstp
sbb
cmp
pushf
icebp
dec
out
push
loopne
test
jmp
cmpb
lcall
adc
jo
sbb
popf
xor
outsb
inc
cltd
or
pushf
jae
dec
cmpsb
popa
push
adc
subb
cmovbe
pop
mov
imul
sbb
sub
pop
inc
xchg
aam
push
stos
cmp
and
lods
mov
pop
fcom
std
push
sbbl
adc
push
adcb
lret
lcall
pop
or
fwait
pop
arpl
pop
imul
cli
cmpsl
pop
xor
add
sbb
in
call
inc
adc
jae
leave
ds
repz
shl
xor
test
dec
push
and
inc
xor
popf
mov
inc
test
ljmp
pop
xchg
dec
jne
push
jnp
vmovlps
mov
pop
inc
xor
movsb
push
xchg
aad
icebp
loopne
or
pop
fsubrl
pop
shll
cli
jns
xchg
xlat
mov
ss
hlt
fwait
push
cmp
js
cmpsb
inc
fadds
loope
mov
add
test
mov
pop
push
shll
loopne
jae
inc
pusha
jbe
shlb
sub
mov
call
fwait
popf
aaa
or
add
and
dec
lcall
mov
std
imul
imul
lcall
xchg
sbb
add
out
and
sub
das
or
bnd
pop
stos
test
insl
cmp
clc
call
adc
scas
movsl
inc
mov
xchg
in
push
notb
adc
or
jle
popa
inc
repz
addb
ss
gs
xlat
and
je
push
cltd
mov
jecxz
xchg
push
imulb
mov
or
and
dec
pushf
sub
outsl
sub
push
mov
fwait
cs
mov
aas
aam
jp
sbb
adc
cmpsb
test
loop
shl
adcb
dec
cld
outsb
scas
sbb
mov
mov
jno
addr16
pop
sub
stc
dec
lock
mov
dec
fistps
fbstp
int
push
outsl
pusha
cld
into
fs
mov
add
mov
push
xor
mov
add
pop
stc
pop
fsubrs
vmovntps
mov
outsl
mov
inc
xor
adc
lods
xorl
cmpl
or
loopne
and
popa
and
iret
aas
cld
push
or
pushf
jae
mov
lods
data16
jno
inc
jns
pop
aaa
arpl
xchg
mov
in
xor
ret
xchg
or
subl
xlat
paddb
xor
sbb
xchg
cmp
sarl
push
pushl
cmp
lcall
cmp
mov
dec
in
push
xor
sbb
nop
sbbb
pop
loope
push
pop
mov
loop
sub
mov
pop
xorl
in
mov
sub
cmp
je
mov
stos
fists
loop
dec
xor
test
mov
xchg
dec
jl
mov
pop
sti
xchg
cmc
sbb
je
inc
jno
push
adc
xor
mov
xor
andb
adc
clc
and
jns
jp
lahf
and
adc
and
in
adc
rcrl
jmp
dec
push
mov
pop
add
fimull
lret
xchg
scas
adc
mov
cmpsb
pop
push
inc
mov
sbb
pop
repz
pop
es
repz
test
arpl
pop
mov
call
ret
dec
and
mov
add
icebp
jno
inc
push
popa
xlat
pop
incl
ss
adc
add
pushf
cltd
mov
test
movsb
sub
xchg
mov
shlb
push
sub
cmp
sub
ds
cld
push
aam
mov
xor
pop
es
andl
std
jmp
mov
loopne
and
mov
dec
mov
ds
mov
adc
pop
mov
push
nop
mov
xchg
cmp
inc
mov
mov
imul
mov
push
imul
cmp
dec
xor
or
inc
add
xchg
dec
imul
jg
stos
sub
cmp
push
push
imul
push
mov
or
mov
pop
mov
jg
das
mulb
arpl
fs
incb
into
or
cmc
cmc
lcall
stos
sbb
pop
pop
aaa
pop
pop
divl
jb
mov
push
dec
add
adc
inc
into
xchg
sub
xchg
scas
rorb
lea
push
pop
pop
sbb
dec
mov
shrl
push
mov
scas
out
ja
add
push
pop
jbe
mov
pop
cmp
sub
es
fldcw
flds
fwait
or
out
push
jnp
lret
in
mov
xchg
bound
jnp
dec
andb
or
push
or
in
leave
jge
cmc
push
sti
add
xor
cmp
scas
fwait
sbb
xor
sbb
arpl
pusha
jp
push
pop
sub
bound
ljmp
les
clc
sahf
push
leave
jbe
cs
jmp
popf
adc
mov
adc
movsl
enterw
push
lea
cmp
je
icebp
imul
xor
ja
mov
idivl
pop
cld
jae
or
add
mov
xchg
push
sti
push
xchg
fiadds
insb
mov
call
jge
fdivl
pop
fwait
rcr
cmp
adc
repz
hlt
sbb
xor
in
xlat
xor
adc
inc
std
jno
xchg
sub
lods
pushf
rol
jge
std
lock
push
xor
cmc
xchg
cmp
inc
shl
loopne
stos
lahf
mov
jmp
repz
roll
push
sbb
ror
cmc
jle
aad
xchg
stos
push
push
jg
daa
push
inc
pop
shll
loop
cmpsl
cmpsb
mov
aad
and
jne
into
mov
sti
fdivrl
sarb
pop
dec
mov
cs
insl
sbb
sub
mov
jecxz
mov
stos
mov
push
pop
std
mov
inc
pop
sbb
push
mov
ret
push
mov
lret
jns
in
add
jmp
arpl
cmp
adc
push
or
nop
ljmp
dec
cmp
imull
pop
and
ffree
jne
mov
jnp
js
xchg
ret
dec
or
dec
add
cmp
jno
jge
test
mov
mov
test
push
mov
adc
xchg
nop
pop
ret
leave
and
push
addr16
mov
sub
mov
das
fists
pop
cmpl
dec
popf
mov
push
xchg
pushf
loopne
mov
jmp
sub
arpl
cmpb
mov
aam
lcall
pop
sub
and
cwtl
gs
push
pop
add
xor
adc
mov
inc
xchg
je
cmp
pop
clc
mov
imul
mov
add
insl
sar
andl
iret
les
int3
xchg
fdivrs
and
repnz
adc
mov
mov
dec
imul
pop
push
jb
inc
imul
pop
adc
pop
loope
cmp
sahf
pop
sub
jle
jp
cmpsb
cmp
add
scas
jo
movsb
es
push
pusha
js
pop
lahf
sbb
ss
mov
mov
sti
aam
loopne
test
lret
fisubrl
popa
add
pop
add
sub
jecxz
ss
pop
pusha
sahf
xchg
mov
and
insl
out
gs
pop
je
lea
pxor
test
insl
mov
xor
out
push
aas
fists
ror
pop
jbe
cs
pop
sub
xchg
out
jl
outsb
loope
cmp
ret
mov
loope
loope
test
inc
stos
jb
popf
pop
movsl
inc
negb
ljmp
popa
jp
or
data16
mov
xchg
pop
jb
jne
jne
xor
jae
pop
ds
not
cmp
imul
cwtl
add
pop
rorb
jecxz
vmovaps
or
testb
popf
jns
ret
loop
aaa
mov
test
addr16
xor
call
enter
pop
loop
ficoml
xor
xor
lods
mov
jo
sub
mov
daa
aas
xor
shlb
out
jne
ret
test
xchg
mov
in
pop
add
mov
out
jge
filds
fstpl
movsb
mov
jl
into
cmp
sbb
push
loope
sti
addl
test
rolb
adc
imul
sbb
xchg
in
in
push
repz
imul
loope
shrl
or
popf
js
jle
or
xchg
popf
fdivp
push
pop
std
ret
and
popa
dec
inc
lcall
xchg
pop
ja
iret
loopne
push
or
sahf
mov
push
addb
sub
mov
aad
pop
mov
jmp
testl
mov
or
xor
xchg
fdivrs
push
push
jmp
pop
into
into
rorb
cmc
sub
mov
push
icebp
xchg
jmp
ret
je
sbb
sbb
jnp
pop
das
ja
mov
movsl
test
xor
insb
lods
in
shrb
int
mov
or
cmp
cmp
cmp
test
mov
mov
leave
paddb
enter
sti
ja
ja
xchg
and
je
pop
push
enter
sbb
mov
pop
adc
mov
out
dec
mov
pop
jae
orl
pop
and
cld
add
xchg
rcl
loop
and
mov
cmp
cld
add
cs
cmpsb
aad
mov
cmp
and
insl
pop
xchg
jne
push
aaa
jo
nop
popf
aaa
cmpsb
out
sub
jnp
dec
add
cmp
sbb
decb
in
lahf
lock
aad
out
mov
cld
xchg
mov
stos
dec
mov
fstpl
mov
xchg
movsb
cmp
int
dec
gs
pop
mov
mull
je
push
xchg
sbbl
pop
cmp
loope
or
repz
ja
lods
popf
cli
jl
sub
in
cmp
lods
into
mov
xchg
cwtl
mov
adc
add
inc
andl
and
push
and
das
arpl
fimull
lahf
mov
inc
fidivrs
stos
mov
shlb
hlt
or
jmp
fwait
sub
out
xchg
mov
xchg
jl
add
jg
mov
pusha
add
lods
andl
inc
adc
sbbl
out
mov
jnp
ficompl
mov
in
pop
and
icebp
lods
mov
jae
lret
lret
fwait
push
push
imul
pop
jge
jge
pop
mov
addr16
cmp
jns
nop
in
aas
aas
popf
jne
int
orb
or
xchg
ror
js
inc
lea
lcall
pop
dec
loope
out
mov
jmp
insl
mov
adc
xchg
lahf
jecxz
jae
insl
mov
fidivrs
or
xchg
clc
fists
loop
fcmovu
xor
mov
in
mov
out
add
mov
pop
xor
jp
jae
pusha
in
iret
das
lret
rcrl
lods
lcall
stos
adc
or
mov
xor
xor
pop
dec
bound
ss
jo
sbb
loope
or
cmpsl
dec
lahf
xchg
fs
enter
mov
pop
pop
shlb
or
inc
inc
jle
cmp
xchg
push
pushaw
repz
xor
shl
jge
shll
cmp
stos
outsl
add
repnz
fdivrl
adc
ffree
push
inc
and
and
fwait
xchg
or
or
in
xorl
mov
push
pop
adc
and
aad
int
jb
in
xlat
scas
sub
cmp
push
dec
sbb
mov
cmp
xchg
mov
cwtl
nop
lock
mov
mov
inc
daa
lahf
loop
fnstcw
outsl
mov
nop
shlb
push
dec
cmc
stos
cmp
jb
sub
jb
lds
js
lret
ret
int3
jmp
adc
adc
popa
test
add
loope
mov
add
mov
xchg
mov
sahf
testb
jecxz
mov
lock
rolb
movsb
outsb
push
lock
sahf
repnz
xchg
mov
mov
mov
and
bound
movb
ss
divl
and
and
into
popa
lds
cmp
mov
or
and
popl
mov
in
xchg
mov
pop
das
and
dec
pop
dec
jae
push
insl
adc
mov
rcr
lret
cmp
outsl
es
cmp
push
nop
or
push
popa
inc
push
and
dec
hlt
ffreep
sbb
ret
mov
jp
in
xchg
cld
sbb
dec
mov
shlb
jne
add
das
negl
inc
mov
aaa
mov
xlat
push
enter
pop
bound
xor
jns
xor
cwtl
cmp
cmpsb
inc
or
outsb
jl
fs
pop
mov
aad
mov
xor
push
dec
mov
mov
fimull
adc
xchg
sbb
sbb
testl
bound
jns
mov
cmc
add
pop
xchg
mov
or
push
push
or
xor
jmp
arpl
adc
mull
cmp
jns
push
movsb
and
jns
lds
aad
mov
dec
or
dec
push
dec
test
add
adc
adc
sbb
shll
sti
out
mov
sahf
sahf
rol
insl
out
push
out
test
mov
xor
push
pop
repnz
ljmp
xor
aad
xchg
out
ret
lret
push
push
cmpsb
mov
outsl
sub
cmp
stos
jmp
xchg
imul
rcrb
idivb
movsb
jno
rolb
or
xchg
push
cmp
xchg
or
repnz
add
mov
andl
popa
leave
mov
adc
adc
jge
aas
das
pop
movsl
xor
sub
dec
dec
or
ret
mov
fbstp
aas
cmp
sarl
mov
imul
add
insl
jmp
adc
pop
push
jecxz
pop
xchg
mov
das
shlb
xchg
push
push
push
and
add
mov
pop
idivb
or
into
inc
je
jle
push
sub
scas
movsl
inc
sahf
jmp
pop
cmp
add
cwtl
cmp
aad
xor
sub
sbb
mov
cmp
shlb
xlat
mov
mov
iret
jbe
leave
fcmove
adcb
pop
icebp
cmc
pop
cmp
push
and
or
ror
sub
ret
add
nop
xchg
fcomip
xor
inc
pop
sub
shll
aad
xchg
push
xchg
stos
xor
jl
fnstenv
xor
imul
mov
shl
scas
and
xor
add
adc
push
sbb
dec
sub
rcll
mov
sub
cmp
cmp
cmp
popa
mov
outsb
pandn
inc
ret
aaa
mov
int3
pusha
out
adc
inc
aaa
mov
mov
push
sahf
and
xchg
dec
jl
jge
push
dec
push
leave
pop
sbb
push
xchg
mov
outsl
dec
aaa
ljmp
inc
push
fs
repz
ret
fiaddl
xchg
nop
cwtl
mov
pop
sbb
jge
mov
lods
ss
and
stos
cmpsl
outsb
add
outsl
inc
in
mov
ja
lret
mov
popa
adc
in
pop
cld
scas
dec
and
push
ret
mov
cwtl
mov
mov
push
jecxz
pop
imul
idiv
test
or
push
pop
rol
cmp
push
cmp
test
pop
jnp
aas
cmp
stos
adc
jg
pop
rcrl
movsb
mov
movsl
int
in
popa
dec
icebp
push
test
iret
stos
nop
outsb
scas
in
jne
repnz
in
and
and
sbb
push
out
aas
sub
pop
jbe
movsb
bnd
mov
jo
loopne
cmp
adc
push
ds
testb
mov
loope
nop
inc
inc
dec
xchg
sarb
call
add
add
cmc
cmc
inc
inc
clc
cmc
lret
mov
into
cld
test
ret
loop
mov
in
xchg
inc
dec
out
js
test
fidivrs
push
ljmp
dec
jge
inc
push
shlb
mov
aad
xchg
shlb
and
filds
outsb
iret
lret
out
push
andl
add
inc
add
popl
jae
sbb
es
and
fcom
shlb
cmp
out
push
cmpsb
cltd
add
loop
xor
std
and
inc
into
aas
jns
in
daa
lcall
cmc
bts
add
add
ret
xchg
in
mov
pop
arpl
lds
push
pop
and
adc
add
jge
das
cli
or
icebp
fcompl
jbe
leave
and
inc
loop,pn
fwait
sarl
in
mov
pop
aad
sub
aaa
or
pop
cld
enter
neg
adc
dec
rcrl
jns
int3
shlb
or
push
imul
mov
out
cmpsl
sub
movsl
sub
xor
xor
mov
and
push
sbb
js
and
dec
inc
pop
push
fnsave
out
sbb
lret
pop
pushf
sbb
and
movsl
sub
adc
xchg
fs
jmp
cmp
fsubs
push
les
jl
jg
adc
stc
loop
insb
and
xor
aas
cmc
sbb
fbld
xchg
and
xor
pop
loop
mov
dec
jne
loope
int
aam
fbld
fidivs
mov
xor
cmc
ret
sub
and
stos
adc
movsb
xor
test
lea
jno
bound
xor
inc
std
push
wrmsr
das
iret
mov
jge
xor
adc
iret
sar
jge
sbb
adc
cmp
std
push
push
mov
cmp
pop
mov
or
jo
addr16
ret
push
ret
ret
pop
addr16
test
xchg
shlb
jle
movsb
cmp
pop
sub
addr16
and
sub
rcll
subb
mov
dec
pusha
sbb
mov
xchg
cmp
fwait
add
lahf
std
jecxz
movsl
push
xchg
loope
pop
or
testb
movsl
dec
in
dec
sbb
scas
ja
inc
ret
cli
orl
push
jl
push
jge
mov
out
gs
cs
cmpb
inc
xchg
mov
sub
int3
movsb
ljmp
shrb
aad
stos
push
jp
scas
pusha
xchg
push
lock
test
xor
fcompp
inc
sahf
scas
xchg
cltd
cmpsl
and
mov
push
ljmp
xchg
push
jbe
pop
in
cmp
into
pop
subl
stos
out
scas
sub
pop
sub
inc
in
add
das
xchg
sti
ficomps
lock
dec
nop
cli
sbb
shrl
and
call
cltd
add
adc
mov
ss
aad
inc
cs
sahf
add
jg
in
lcall
mov
dec
sub
cmp
xor
stos
jmp
sub
or
adc
es
push
inc
lret
out
in
inc
mov
jl
xchg
lea
pop
js
sub
mov
int3
and
insl
cli
jbe
sub
and
mov
and
inc
jl
jae
xchg
lock
and
xchg
aad
scas
jl
stos
jg
shlb
test
dec
std
push
ja
sarl
sti
add
outsl
sub
dec
imul
out
or
mov
fadds
pushf
jbe
xchg
mov
xlat
jne
es
arpl
mov
sbb
jmp
xor
pop
xchg
and
cmp
loope
pop
loopne
push
movsb
mov
xor
in
push
xchg
faddp
adc
jnp
stos
mov
subl
xchg
call
cmp
sub
imul
inc
mov
lret
inc
insl
or
xor
insl
fildll
mov
roll
fisttpl
aaa
fadd
clc
mov
inc
lahf
sub
cmp
mov
mov
mov
popa
int
in
jno
add
push
and
clc
sbb
push
sub
inc
pop
frstor
and
fwait
jmp
push
add
sbb
inc
cmp
push
mov
aaa
dec
aam
xor
stc
or
int3
dec
imul
icebp
cld
xor
pusha
sbb
testb
cwtl
jmp
jecxz
lret
sbb
shlb
push
jcxz
test
jle
xchg
cmp
push
and
mov
popf
mov
jle
test
dec
add
lods
lock
xchg
outsb
shrl
cmp
cmc
pusha
mov
sarl
sub
sub
push
push
repz
or
mov
mov
cltd
and
adc
mov
int
mov
jmp
in
nop
push
in
add
jmp
pushf
ret
push
clc
push
push
jg
mov
pushf
lcall
lret
pop
add
je
in
scas
jle
sbb
cmp
inc
movsl
add
bound
sub
fisttps
xor
sub
ret
inc
jno
rcll
in
out
imul
mov
mov
shll
pop
xor
pushl
xchg
jl
or
or
sub
cmpsb
pop
ret
in
in
subb
mov
leave
lcall
pop
mov
imul
cwtl
in
mov
dec
filds
fisttps
dec
fcoml
rclb
and
ljmp
imul
jl
xchg
push
inc
test
dec
iret
test
fsubr
push
out
stos
ds
or
fwait
mov
adc
inc
jle
sub
lss
push
rcr
mov
xchg
add
ss
repnz
pop
xchg
push
cmc
add
rep
sub
mov
push
and
pop
xor
test
push
sti
lea
dec
mov
int3
insl
pop
xchg
add
inc
pop
jl
sbb
loope
sti
sub
fcomi
sub
mov
pop
mull
addr16
imul
add
fsubrs
dec
in
push
add
dec
xlat
cmpl
int3
stc
cmpsl
sarb
mov
and
push
insl
insl
cmp
fdivs
mov
sarb
mov
adc
sub
cmpsl
std
addr16
mov
inc
into
shlb
sub
mov
adc
dec
gs
jno
jnp
shlb
mov
pop
cwtl
inc
jbe
in
sbb
ret
aam
inc
push
add
pop
add
add
mov
or
mov
insl
mov
int
or
loop
jo
xor
or
and
mov
dec
push
test
es
in
push
inc
jmp
cmp
sub
jns
scas
cmp
lea
cld
inc
popf
lcall
out
and
clc
cli
cmc
push
fisubrl
mov
insl
or
cmc
inc
inc
mov
jb
in
orb
vpmacssdqh
pop
mov
cli
mov
pop
sub
push
inc
jge
or
inc
cwtl
ja
cmc
sbb
cltd
das
lds
dec
add
fdivl
jecxz
mov
dec
stc
or
jae
xchg
nop
aam
daa
adc
cmp
cld
int
stos
adc
lock
outsl
scas
adc
out
out
push
jg
push
fists
int3
lock
cmc
push
popa
test
xor
add
cli
adc
sub
dec
or
addr16
leave
lods
mov
or
mov
mov
lahf
push
andl
pop
add
outsb
xchg
mov
xchg
mov
jle
jg
pop
add
shrb
inc
inc
frstor
ret
sbb
jbe
in
test
push
std
mov
xchg
loop
xchg
fistl
ret
lret
lahf
js
ds
jp
xorl
ret
xor
ja
push
dec
xor
jecxz
add
rcl
adc
add
pop
cmp
stos
pop
mov
cmp
clc
xorb
adc
adc
cmpsb
fmul
and
lods
pushf
xchg
sub
mov
mov
push
shl
imul
ret
jle
or
dec
ffreep
aad
sub
add
mov
xlat
js
ss
aad
xor
or
insl
add
sbb
xchg
jns
call
jl
dec
daa
pop
enter
and
iret
inc
frstor
jno
or
push
in
mov
push
cmpsb
push
push
enter
sub
mov
mov
inc
pop
push
sub
lahf
inc
call
push
mov
add
mov
xchg
fwait
push
add
push
pop
push
add
ds
leave
aam
dec
shrb
push
shlb
pop
sbb
dec
mov
out
aam
mov
push
mov
lods
dec
mov
mov
sub
incb
dec
push
sbb
sbbb
fmulp
mov
mov
adcb
cmp
pop
mov
push
mov
adc
icebp
jns
rolb
jl
xor
and
outsl
out
pop
nop
push
mov
and
push
mov
ret
lock
push
xchg
push
popa
mov
ret
mov
mov
xchg
dec
lahf
or
pop
xchg
scas
pop
test
lahf
addr16
mov
push
dec
nop
out
cmp
push
es
outsb
test
sbb
cmp
loope
cmp
out
mov
cwtl
fcomps
dec
cmp
sub
xchg
add
in
in
mov
faddl
xchg
rol
sub
dec
push
insl
ss
and
popa
dec
pop
test
lds
dec
jmp
adc
jecxz
mov
test
or
loop
jo
ja
jle
out
cli
mov
and
add
cmp
mov
xor
mov
notl
dec
ss
loop
loope
adc
xchg
nop
addr16
push
ret
or
sub
pop
xchg
into
pop
cmp
or
adc
fwait
mov
sub
pusha
bound
push
pop
sub
mov
jg
cmp
cmp
jmp
push
push
sbb
xlat
test
nop
xchg
jecxz
push
loopne
xor
scas
mov
mov
and
adc
imul
add
aam
mov
loope
and
jbe
test
sub
sub
cmp
and
in
add
add
arpl
push
cwtl
inc
xor
out
les
mov
xchg
dec
sbb
xor
sbb
jae
jbe
sbb
xchg
sbb
dec
aad
pusha
and
dec
pop
pop
mov
repnz
push
je
mov
imul
inc
jne
push
push
jg
xor
daa
cmpsl
jne
popa
cs
and
test
jae
sub
jl
mov
jecxz
push
cltd
loopne
movsb
or
and
xchg
push
lods
sbb
clc
mov
ret
xor
dec
adc
dec
xchg
in
out
cwtl
clc
jmp
dec
adc
push
inc
push
dec
or
aas
dec
dec
rcrl
push
lods
inc
sub
int3
pushf
pop
xchg
pop
push
into
imul
lds
dec
sub
es
inc
sbb
orl
dec
adc
xor
adc
out
jb
fwait
cwtl
jmp
fnstenv
in
pop
mov
and
pusha
adc
adc
leave
stos
xchg
cmpsb
fdiv
inc
dec
in
mov
lods
test
jns
inc
cmpsb
mov
jo
sbb
jae
ja
mov
mov
stc
dec
mov
xchg
mov
adc
jae
addl
jo
arpl
ficoml
xchg
sub
ss
out
sub
std
test
pusha
dec
lds
xor
hlt
pop
cltd
dec
mov
and
pop
cmp
ja
movsb
mov
aaa
rcrb
pusha
add
mov
mov
xor
adc
push
fnsave
xor
sbbb
pushl
sub
lret
hlt
insl
xor
jo
repnz
sub
into
lea
popa
sbb
jmp
cwtl
lahf
xor
fwait
mov
mov
xchg
jnp
out
sub
lock
cmp
cmpsl
insb
sbb
add
xchg
jg
mov
aas
mov
xchg
pop
dec
or
or
arpl
pop
inc
or
cmpl
add
cmp
push
dec
adc
sbb
fld
pop
mov
mov
xor
xlat
shrl
popa
adcl
xchg
je
and
ja
in
xlat
sbb
pop
inc
mov
outsb
inc
fmuls
ret
pusha
shr
movsb
iretw
ret
pop
hlt
ljmp
or
clc
mov
xor
sbb
cmp
mov
test
and
dec
into
stc
nop
add
cmpsb
loope
push
cmp
mov
pusha
mov
xor
out
cmp
js
and
jmp
or
inc
or
xchg
mov
sub
iret
xor
inc
in
push
sub
jp
mov
mov
jne
ror
bound
lods
scas
dec
sub
push
cmc
pop
push
jnp
mov
adc
aas
sbb
mov
fisttpll
shrb
lret
andb
fst
aas
push
dec
je
cmp
mull
in
fsubrs
dec
lea
nop
jns
pop
flds
dec
pop
adc
push
xchg
insl
ljmp
movsl
jne
out
in
jl
push
inc
sahf
adc
cmpsl
jnp
adc
cmc
xchg
jbe
pop
cmp
clc
adc
push
xor
scas
pop
test
mov
movsl
jbe
xor
or
sar
fs
or
aas
divb
aas
jp
aam
mov
test
mov
pop
cmpsl
xor
shrb
cmpsl
xchg
jmp
aas
cmp
jle
inc
adc
into
adc
xor
cmpsl
test
pop
pop
inc
lods
ficompl
pop
sbb
lock
xor
or
lcall
jp
xor
pop
fildl
pop
cmp
movsb
movsb
mov
adc
mov
test
xor
mov
mov
divl
xor
adc
and
inc
adc
nop
int
fwait
arpl
mov
shll
pop
int3
dec
imul
and
or
or
test
stos
mov
loop
sbb
xor
inc
sahf
imul
adc
mov
push
mov
sbb
out
mov
cwtl
adc
sub
sub
stos
subb
mov
lcall
cld
pop
imul
fcomp
pop
out
outsl
lock
mov
cmc
add
outsb
ret
mov
in
dec
add
jno
push
test
ds
jle
insb
lcall
sbb
add
mov
mov
out
or
orl
rorb
negl
sti
fdivr
or
mov
sub
xlat
sbb
stc
pusha
xor
addr16
mov
repz
adc
pop
movsl
stos
jns
jge
lcall
insb
dec
jns
ficomps
rcll
out
jp
in
adc
test
cld
fimuls
ret
mov
lock
addr16
inc
inc
cmp
or
push
sbb
ljmp
jnp
cmpsb
addr16
pop
lret
pushf
pop
xor
imul
cmp
sbb
out
pop
sbb
cmp
sarb
stc
add
and
inc
push
movsl
jae
imul
mov
movsl
rorb
fdivl
mov
sbb
ljmp
shrb
push
out
mov
jp
dec
rcr
out
pop
jg
int
push
inc
iret
pushf
inc
out
cs
fldcw
adc
adc
lock
leave
fisttpl
les
cwtl
in
mov
pop
jge
fdivl
and
leave
push
lret
mov
stos
sbb
xchg
cld
sub
xor
in
mov
sbb
testl
mov
cwtl
mov
lods
je
jg
mov
imul
push
cmp
inc
pushf
sbbl
stos
insl
fisubrs
sbb
loope
outsb
test
cmpl
pop
cmp
push
les
in
inc
stos
xchg
xor
push
jge
rorl
ds
lcall
enter
std
xchg
mov
mov
adc
lahf
mov
or
jns
lods
jae
push
and
and
xchg
inc
adc
stos
pushf
andb
xchg
cs
outsb
scas
sbb
aas
inc
pop
fdiv
lret
enter
pop
imul
and
inc
in
jle
in
mov
inc
jl
pop
adc
nop
and
cmpsb
mov
lock
jmp
mov
jb
imul
cmpsb
insb
fsubrl
xchg
aas
loope
jo
jl
addr16
in
or
or
loop
jecxz
dec
jp
fmuls
psubsw
nop
adc
rcrb
sub
inc
jmp
int
mov
jle
cmp
fcoms
push
inc
or
fwait
popf
fisubrl
std
fiadds
add
test
jmp
out
out
inc
in
mov
jns
push
and
or
dec
mov
sub
fs
ljmp
push
sub
sbb
imul
adc
outsb
inc
jmp
inc
pop
stos
pushf
iret
xchg
push
hlt
aad
mov
ret
test
out
popa
repnz
mov
je
xchg
clc
sbb
pop
adc
push
pop
scas
sti
jnp
xlat
stc
sti
and
dec
jb
xchg
in
dec
xorl
sbb
jmp
inc
pop
add
pushf
loopne
or
bswap
fiaddl
push
mov
test
cmp
push
loop
mov
faddl
cmp
mov
dec
xchg
or
inc
repnz
pop
cs
pop
jg
stos
cmp
clc
xchg
inc
lock
aaa
cmpsl
repz
movsb
mov
leave
outsl
out
jo
lahf
pushf
test
jg
js
test
jecxz
mov
sub
xchg
sub
sbb
fstp
sbb
sbb
mov
dec
add
inc
and
prefetch
pop
jp
test
stc
popa
or
jg
mov
pop
mov
fldl
pop
gs
lret
aas
adc
jl
push
push
dec
cmp
ja
pop
inc
pop
stos
das
push
or
pop
loope
popa
xchg
je
movaps
cmp
sbbb
lcall
adc
xchg
sbb
fmull
stos
iret
pop
fcoml
iret
cmpsl
inc
aas
aas
xchg
sub
push
cmc
test
push
jg
xor
lds
push
mov
pushf
adcb
xchg
xchg
and
aas
xor
mov
fwait
mov
xchg
pop
mov
mov
scas
fdivs
rcrl
call
out
adc
fs
ss
pop
push
pop
mov
sub
sbbl
movsb
xor
fistpll
mov
xchg
ret
shll
ret
lret
roll
mov
lea
test
ljmp
aas
mov
adc
add
ss
pop
or
mov
adc
insb
mov
cmp
push
fists
add
mov
jp
movsl
outsb
std
mov
fcomi
sub
test
ljmp
addr16
jbe
mov
int
popa
pop
xchg
xor
sbb
adc
scas
jge
popf
mov
inc
pop
ss
sub
pop
rorl
pop
loopne
test
test
and
lea
and
xchg
and
dec
iret
xchg
sbb
cmp
mov
stc
jge
sahf
ret
enter
dec
ret
into
mov
jno
sar
pop
pop
cltd
add
out
mov
js
jns
outsl
push
push
inc
mov
lds
dec
xchg
hlt
add
pop
or
test
or
jno
addr16
sub
xor
fs
adc
inc
inc
int3
lahf
fisttps
push
xor
lret
jns
pop
xlat
mov
nop
push
mov
xchg
mov
xchg
and
mov
cs
call
dec
faddl
cmpsl
fadds
std
push
dec
ret
scas
and
ret
fsubrs
dec
addl
sub
sbb
add
sub
add
push
add
xor
bound
sbb
aam
cmpsb
fiaddl
or
in
inc
jo
xorb
sbb
pushf
sar
pop
in
cs
sti
sbb
xchg
dec
mov
lods
xchg
mov
inc
dec
sarb
lods
jbe
mov
into
mov
repnz
jmp
sub
gs
mov
fadds
lock
std
mov
and
lea
insl
out
pop
shl
mov
loopne
dec
addr16
mov
sar
pop
shlb
pop
jmp
lret
mov
xchg
push
stc
cmpsb
aad
jbe
mov
mov
fldenv
xchg
xchg
dec
jae
insl
jge
mov
sbb
mov
rol
adc
push
adc
xchg
shlb
pop
xchg
sub
pop
push
add
jle
push
daa
testl
call
fistps
aaa
dec
push
mov
jmp
nop
data16
xor
mov
lods
xchg
xlat
add
xor
dec
mov
xchg
jecxz
xchg
xchg
and
test
cmp
out
mov
test
mov
mov
mov
ja
jb
lcall
push
mov
insl
lea
les
fstpt
lret
jae
cmpl
scas
inc
mov
xchg
jl
ss
test
aaa
mov
mov
jne
loope
scas
mov
jle
icebp
and
or
cmp
pop
fdivs
cli
and
sahf
sbb
cmc
adc
mov
sbb
repnz
xor
mov
aam
pusha
gs
in
addr16
mov
cmp
sahf
and
sahf
fs
or
jb
mov
jo
movsb
leave
pusha
inc
xor
mov
push
cli
pop
or
sti
xchg
ja
call
cmp
mov
test
xchg
pop
inc
push
test
inc
cmp
cmp
and
data16
xor
int3
mov
insb
sahf
mov
jge
fldl
leave
inc
mov
push
scas
xor
pushf
scas
push
daa
cmpl
pusha
push
ret
cwtl
xchg
inc
movsl
push
mov
fs
cltd
xchg
bound
repz
paddusw
insb
xchg
xorl
push
js
adc
popf
jbe
popa
test
push
push
cmpsl
adc
xor
dec
xchg
int3
es
mov
add
sarl
aas
add
jmp
das
push
fiadds
jecxz
filds
test
jo
or
aam
jno
sub
stos
test
pop
mov
mov
push
add
push
out
pop
lea
jnp
push
rclb
cmp
jg
outsl
inc
jmp
lcall
shlb
test
pushl
sub
cmp
cltd
pop
cmpsl
xchg
inc
and
mov
mov
aas
aas
movsl
xor
jle
pop
sub
push
cmp
mov
lcall
mov
sub
add
dec
mov
sub
jle
lcall
fildll
jle
cmpsb
dec
arpl
mov
leave
pop
negb
push
mov
add
test
sbb
nop
imul
repz
lahf
sub
es
int
fcmovne
push
call
shl
iret
mov
scas
addr16
pop
stos
xchg
loope
pop
hlt
inc
inc
sbb
add
mov
mov
push
call
mov
popa
rolb
mov
cli
dec
push
in
push
xor
jg
jge
and
cli
push
sub
int
and
mov
or
inc
neg
fdivrs
add
hlt
repnz
mov
mov
mov
lcall
out
sub
lock
das
sub
enter
pop
lds
aaa
cmp
inc
int
or
xchg
push
sub
movsl
cmpsl
inc
jl
cmp
xchg
or
fdivrs
insb
lods
xor
pop
sbb
mov
ret
sub
imul
and
outsb
adc
cli
mov
mov
push
dec
push
dec
and
pop
xorl
sub
push
rolb
decl
icebp
push
inc
js
aaa
pop
cmp
jmp
mov
and
mov
jbe
adc
jp
andl
loop
mov
and
clc
xchg
xor
mov
addr16
insl
inc
lods
sbb
pushf
xor
ljmp
lock
out
cmp
stc
or
push
mov
mov
movsl
popf
sbb
xor
out
ja
push
jae
mov
push
add
iret
in
fs
and
sbb
int
jl
push
loope
and
and
mov
les
inc
xor
sbb
pop
sbb
sbb
push
std
jbe
leave
dec
push
repnz
mov
push
cmp
add
sbb
and
jae
push
sysret
add
pop
cs
test
cmp
std
xchg
mov
sbb
addr16
mov
and
push
cld
mov
mov
add
xchg
pop
es
jmp
rcll
outsl
inc
pushf
sti
shll
push
ret
jg
and
and
and
sub
pop
dec
outsb
fidivrs
loope
xchg
and
cmp
call
inc
negl
popf
push
and
dec
cmpsb
jae
aam
jns
and
mov
and
stc
loope
leave
adc
shr
lock
mov
cmp
pop
repnz
pop
sbb
sub
stos
push
lods
int
movsb
jo
add
gs
sub
dec
push
pop
or
out
mov
xchg
sarb
sbb
fmull
add
popf
dec
es
mov
lods
mov
push
jge
sub
jge
xchg
aas
and
movsl
push
ret
aam
repnz
sbb
popf
mov
test
daa
leave
mov
push
repz
scas
rorl
inc
push
stos
jbe
xchg
and
int
xchg
add
add
sub
test
pop
faddl
jmp
out
mov
mov
incl
daa
bnd
mov
jl
jmp
lds
push
jb
fisubs
sub
mov
cmp
or
cmpsb
loope
aas
xchg
sahf
jno
pop
movsl
jo
inc
mov
inc
popf
cmp
loop
pop
pop
lret
shrb
icebp
add
xchg
dec
push
pushf
ja
inc
movsb
add
cmpsb
arpl
add
cmp
push
jb
mov
aas
mov
dec
fnsave
pop
subb
popl
movsl
cmp
xchg
or
push
xorl
fldl
pop
mov
lock
jnp
jno
je
xlat
sbb
into
test
push
push
xor
jbe
inc
push
sbb
ss
insb
scas
lret
inc
jecxz
in
mov
xor
inc
push
divl
jmp
cmc
adc
jge
gs
xchg
push
or
cmpsb
dec
cmp
scas
incl
mov
cmp
mov
jge
repz
pop
jne
sub
into
out
xchg
adc
fucomip
ret
push
adc
aaa
mov
push
lret
clc
int
push
out
mov
pop
imul
jnp
gs
fs
ds
jmp
inc
je
popa
jle
into
sub
int3
push
inc
gs
adc
ja
jb
or
je
aaa
pop
jne
sbbl
or
adc
mov
pusha
and
mov
incb
cmpsl
add
je
lret
lret
dec
js
mov
xor
jecxz
cltd
das
sub
cmp
and
loope
sub
mov
insb
add
mov
mov
out
fstl
aas
xorb
dec
mov
nop
scas
aad
ror
rol
mov
sarl
ss
mov
jo
outsl
mov
jge
xorb
mov
cs
add
ds
icebp
adc
cmp
xor
dec
daa
push
mov
xorb
fcomp
mov
pop
test
inc
mov
fisubs
and
in
adc
xor
pop
push
out
xor
sbb
and
sub
iret
pushf
movb
scas
add
mov
cltd
mov
adc
sbb
testb
mov
ss
inc
dec
dec
loopne
jo
jl,pn
mov
push
test
movsl
xor
push
into
fwait
in
or
sub
jmp
push
xchg
pop
sahf
enter
cli
sarb
jl
loope
clc
aad
push
imul
jo
dec
cmc
repz
mov
shlb
out
js
addb
iret
in
cmp
cmp
mov
scas
pop
jae
or
into
mov
jmp
mov
insb
sbb
les
inc
xchg
mov
aam
ret
jl
inc
fildl
or
fs
sahf
inc
mov
movsb
movsb
pushf
std
out
mov
pop
movsb
jmp
rorl
adc
cli
xchg
inc
fistpll
clc
jb
in
mov
orl
js
shlb
push
or
jl
jae
pop
das
pop
jp
pop
xchg
test
pop
push
sahf
scas
jns
inc
dec
loop
test
jbe
fadds
inc
and
mov
mov
jnp
xor
out
cmp
xor
leave
iret
xor
arpl
orb
aaa
sbb
int3
push
loop
mov
jg
enter
loop
shll
rcl
std
lods
cmp
fildll
or
js
aas
ret
in
and
dec
mulb
mov
pop
test
sbb
cmp
pop
cli
imul
mov
push
mov
mov
gs
arpl
cltd
dec
pop
rcl
shrb
push
mov
dec
hlt
xorl
inc
mov
lret
xor
movsb
in
jp
lcall
fcmovne
push
repz
popf
ret
vmread
out
fisttps
lahf
xor
loopne
jl
lret
test
push
nop
xchg
daa
loop
cmp
push
insb
and
not
pop
jnp
andl
add
jnp
loopne
mov
out
ss
adc
push
arpl
adc
arpl
scas
in
ss
xor
mov
cld
sarl
mov
sbb
or
and
adc
jmp
les
fs
out
inc
fs
popf
inc
pop
fwait
adc
jne
xchg
test
out
mov
mov
cld
jnp
mov
jg
jo
add
out
aad
fucom
mov
imul
inc
mov
test
stos
lahf
and
jle
mov
jg
loopne
fcoml
xchg
lock
xor
fdivrl
dec
push
push
jnp
ret
icebp
shrb
rclb
inc
mov
push
repnz
outsb
popf
loop
stos
rcrl
push
add
bound
pop
dec
or
jno
js
push
icebp
popa
js,pn
js
and
lea
mov
sub
dec
xchg
push
jecxz
add
fwait
repz
add
xlat
stc
cmpsb
into
push
ds
lds
fisubrs
lcall
clc
dec
jecxz
imul
lahf
aad
xor
cmovbe
pop
sarl
pushf
call
mov
sahf
dec
pop
xor
dec
jb
out
pop
fiadds
inc
pop
lret
cmc
loope
cli
and
adc
cmc
sub
cli
loopne
cwtl
sbbb
dec
and
xor
and
push
mov
cmp
lea
stos
dec
mov
ret
int
jp
xor
pop
popf
lret
push
lret
inc
cmp
lret
or
fmull
xor
cmpsl
xor
roll
push
cmc
and
dec
inc
or
sar
stc
push
jp
aad
or
mov
in
pop
repnz
or
sub
test
and
aad
push
adc
xchg
add
push
mov
ja
mov
ljmp
cli
sbb
in
test
xchg
popf
cmp
mov
add
sarl
es
shl
and
mov
fwait
jecxz
sahf
into
fnsave
rcrb
mov
adc
mov
mov
imul
cltd
xchg
negb
mov
push
rcrb
daa
pop
sub
jle
push
movsb
jg
push
std
out
adc
mov
add
scas
or
add
movsl
xor
sarl
cmpsb
mov
sti
mov
jb
scas
mov
fwait
add
push
lods
mov
inc
pop
data16
ds
jl
lds
enter
insb
xor
jmp
rolb
push
add
sahf
jl
test
cmp
arpl
fs
xchg
lods
arpl
lret
call
imul
stos
test
inc
call
sub
xchg
insb
mov
shlb
dec
jmp
in
adc
scas
aam
mov
mov
xchg
adc
mov
jo
fcmove
mov
jg
hlt
inc
int3
dec
in
and
inc
cmpsl
mulb
mov
mov
mov
mov
or
iret
ds
mov
jmp
xchg
popf
in
and
test
cmp
push
xchg
iret
push
stc
jno
xlat
adc
daa
ja
imul
adc
std
lds
cmp
xchg
jp
mov
loopne
mov
testl
or
jle
in
or
clts
lahf
jns
sbbb
pushf
rclb
lahf
cmc
outsl
jecxz
out
cmp
xor
mov
in
daa
xor
cli
xchg
lds
out
loopne
pop
push
jle
xor
mov
mov
pop
mov
cmp
adc
adc
aas
xor
iret
pop
pop
out
mov
and
pushf
out
xchg
push
xor
scas
lcall
dec
fs
hlt
sti
jmp
cli
in
outsb
popf
dec
into
push
out
dec
int3
adc
test
lret
sub
psubsb
popf
xchg
mov
fimull
out
jno
xor
inc
pop
mov
popl
ja
lds
adc
fs
pop
adc
xor
sar
pop
arpl
popf
or
rclb
mov
js
fiadds
add
das
mov
push
cmpsl
adc
sub
popa
rcrb
lret
push
sbb
dec
mov
cmc
in
repnz
push
cs
std
sbb
dec
les
add
sub
lahf
cwtl
mov
xor
test
fstpt
sti
popf
outsb
adc
ret
test
dec
out
rolb
inc
add
xchg
mov
cmc
pop
or
pop
out
jnp
sbb
mov
jns
arpl
push
idivb
stc
xchg
in
cmp
dec
mov
xchg
sub
push
fmuls
mov
ss
bound
shld
adc
sahf
or
sbb
sbb
cwtl
and
jns
cmp
dec
xchg
insb
in
sub
out
xchg
dec
jmp
std
rcr
jg
push
pop
daa
jae
lods
je
in
sub
cmc
packuswb
push
mov
movsb
pop
lahf
das
in
mov
mov
addr16
jmp
dec
idivl
sbb
std
jge
mov
mov
repnz
rep
dec
in
int
push
add
dec
mov
mov
iret
scas
jno
rcll
call
mov
sbb
jne
mov
aad
pop
jle
ret
jp
ljmp
push
pop
shll
mov
gs
add
cmp
push
cmp
out
inc
inc
in
nop
ja
lcall
ret
jecxz
incb
mov
mov
or
cmpsl
lcall
and
mov
cmpsb
in
push
jno
shll
jae
bound
imul
dec
mov
inc
ds
push
in
add
fmuls
xchg
pop
xchg
sub
xchg
dec
xchg
dec
sbb
inc
fadds
out
lcall
cmp
jno
popf
adc
cmp
inc
popa
nop
mov
add
jae
mov
ret
mov
shrb
jbe
mov
loop
test
inc
in
jns
outsl
mov
int3
test
adc
mov
mov
push
xlat
sub
jecxz
ret
cmp
pop
ljmp
movaps
scas
ss
and
inc
cli
lds
clc
adc
call
jmp
test
dec
imul
mov
popa
inc
mov
inc
mov
mov
ja
imul
call
sbb
xor
mov
in
push
lock
fs
fwait
mov
inc
pop
push
xchg
and
jne
dec
add
cmpsl
and
out
addr16
adc
pop
fildll
dec
jmp
fisttpll
mov
test
popa
cmpsb
inc
xchg
mov
inc
inc
add
clc
lahf
jne
inc
adc
mov
je
int
adc
jo
and
addr16
xchg
mov
push
fldl
shl
fldl
pushf
nop
sub
lock
or
js
das
cmp
adc
rclb
fstpt
adc
out
movl
xchg
mov
inc
mov
inc
int
cmp
xor
mov
push
adc
or
shll
fildll
cmp
jecxz
insl
jbe
cmp
sub
fcompl
out
pop
test
lcall
cmpsl
or
mov
sarl
loop
or
rolb
sub
push
mov
test
andb
sub
stos
mov
and
inc
cwtl
jge
stc
pop
arpl
aas
fadd
dec
fisubs
pop
dec
sub
mov
pop
int3
xor
sbb
dec
ljmp
push
mov
adc
mov
dec
pop
cmp
add
dec
jne
xlat
dec
ljmp
int3
pop
dec
sub
sbb
mov
outsb
xchg
lods
xchg
in
sub
dec
jle
dec
and
sbb
scas
repnz
jle
das
inc
add
dec
xor
mov
nop
xor
push
mov
fldl
jo
dec
inc
bound
xchg
push
adc
test
sbb
mov
loop
inc
sahf
dec
in
ret
add
mov
test
ss
mov
mov
imul
out
cld
test
or
aaa
adc
sbb
cmp
xlat
mov
pop
out
out
out
jp
jle
sbb
mov
mov
adc
cvtps2pi
lahf
cmp
xchg
cmc
mov
gs
cmc
addr16
xchg
jae
int3
mov
gs
add
inc
and
add
shrl
sbb
sahf
loopne
jbe
pop
push
add
scas
pop
pop
and
and
mov
cmp
scas
in
fnsave
dec
pop
je
dec
push
mov
inc
int
push
and
insb
in
fmuls
mov
mov
add
cs
sub
xchg
and
xor
pop
pop
jbe
addr16
and
pushf
rorl
int
cmpsl
stos
in
add
mov
pop
push
dec
sub
pop
rorb
xchg
es
mov
mov
loopne
lock
xor
push
roll
inc
repnz
sub
jge
test
lods
push
pop
lret
cmp
push
jmp
inc
pop
adc
sti
or
shll
jmp
and
test
xchg
cmp
lock
jnp
xor
lea
cmp
iret
push
pushf
pop
dec
sub
sub
js
test
sbb
cli
or
nop
les
cmp
pop
add
mov
cmp
cmp
test
or
jg
pop
in
stc
test
pop
lds
mov
pushf
mov
jecxz
or
xor
repz
inc
jecxz
andb
jnp
inc
stc
subb
xor
les
inc
outsl
add
mov
push
into
or
pushf
add
sti
pusha
cltd
xor
and
xchg
in
jb
std
loopne
push
inc
mov
stos
push
mov
imul
xchg
mov
cmp
fsubrs
cs
add
mov
negl
add
out
movsl
pop
push
mov
jp
leave
rorb
aam
test
test
pop
int
sbb
shlb
das
adc
sbb
push
cvttps2pi
pop
call
or
int
addb
jnp
ds
aas
popa
lds
push
adc
pop
rolb
es
mov
popa
gs
rorl
mov
jbe
call
push
jge
sub
push
sbb
cmp
into
call
lahf
adc
mov
js
sub
and
add
std
xchg
or
mov
push
sbb
ljmp
mov
sub
notb
cmpsb
sbb
sub
mov
outsl
jb
lahf
ds
push
out
cld
jmp
or
xchg
push
or
pop
imul
inc
leave
push
test
lods
sub
lret
or
fcmovbe
imul
jecxz
sub
fs
add
out
icebp
mov
loopne
lcall
cmovne
out
shlb
std
and
xchg
sub
pop
dec
push
add
xchg
jns
pop
and
add
jb
push
cmp
mov
adc
sbb
mov
movsl
ficoml
or
enter
adc
cmc
lea
adc
mov
inc
mov
and
cs
pop
stc
rorb
or
in
fcoml
fwait
cmp
mov
call
rol
ret
in
repnz
movsl
sti
push
inc
cs
shl
adcb
fsub
mov
repz
ljmp
leave
lods
sub
xor
arpl
mov
jno
ficomps
adcl
add
or
testl
pop
scas
lahf
fidivrs
testb
push
in
sahf
sbb
xor
pushf
inc
jle
fstpl
jecxz
int3
or
xorb
mov
dec
aas
cmp
mov
out
fnstsw
mov
jno
icebp
add
out
xchg
mov
inc
scas
dec
fs
enter
stos
pop
pop
push
outsb
cmc
in
xchg
lods
test
mov
xor
out
xor
jmp
fisttpll
mov
jecxz
pushf
data16
push
test
jno
ja
nop
or
inc
jmp
sub
mov
mov
push
fabs
xchg
push
sbb
inc
xlat
shl
lds
or
fmuls
cli
cld
mov
frstor
hlt
sub
push
xor
movsl
adc
pusha
dec
mov
nop
lds
sub
leave
xchg
pop
mov
lock
lret
jae
scas
sbb
das
outsl
and
dec
scas
jnp
nop
movsb
push
jecxz
jp
inc
fldl2e
jecxz
push
and
mov
pop
cmp
pop
and
mov
icebp
in
pop
push
iret
in
xchg
mov
jbe
je
cmpsb
adc
movsb
aaa
xor
imul
add
call
xor
xor
xor
std
fsubrl
addr16
je
push
xlat
push
sbb
rcll
ret
jg
in
push
dec
orl
xor
stos
mov
jmp
aam
lcall
ss
inc
das
icebp
sbb
cmpsb
cmpsb
aas
call
jbe
insl
mov
mov
push
and
iret
ja
push
aad
ljmp
inc
ljmp
add
lds
int
inc
adc
daa
bound
mov
out
push
dec
jnp
xchg
ficomps
repnz
lret
jmp
insb
arpl
stos
int
test
test
testb
xor
pop
push
mov
shl
decb
jno
xor
inc
ss
jae
bound
push
pop
aad
dec
js
repz
lret
cmp
lret
shll
xchg
fs
mov
pusha
out
xor
push
or
inc
fstl
sbb
std
ds
pop
rorb
mov
xchg
cmp
cs
cwtl
ja
adc
sbb
sub
push
or
shrl
or
insb
leave
mov
cmp
das
dec
jmp
in
xor
je
filds
push
jg
stos
pushl
xchg
test
mov
lods
xor
mov
jns
cli
dec
out
cmp
dec
xor
cmp
enter
cwtl
lcall
dec
and
jp
sub
jg
jae
js
sbb
nop
pop
mov
repnz
mov
loop
xchg
fwait
xchg
enter
loop
cmpsl
movsb
and
sub
pop
loopne
stos
push
xchg
push
movd
js
lods
jmp
add
cmpsl
nop
sbb
mov
in
and
sti
dec
lcall
ret
sbb
sub
outsb
adc
sub
or
aad
inc
fs
insl
pop
mov
xchg
imul
outsl
push
out
testb
lcall
js
and
shrl
dec
sahf
pushf
cmp
mov
rcrb
inc
sarl
stc
adc
or
mov
and
push
fdivp
pop
sub
or
jecxz
inc
aaa
sbbl
fs
clc
jb
xchg
sub
je
adc
mov
sarl
sbb
cmpsl
mov
cmp
push
xor
cmp
out
ds
jle
ds
cwtl
and
pushf
cmpsl
inc
mov
dec
gs
adc
fisubs
mov
dec
xor
adc
push
sahf
xor
fists
inc
sub
mov
sar
or
outsb
xor
cmp
dec
mov
movb
insl
fwait
jns
lret
test
mov
ds
sub
or
sahf
push
push
insl
push
inc
push
mov
je
xchg
pop
inc
popf
test
call
mov
and
fstps
jge
cltd
cmpl
push
shlb
test
push
mov
pop
ljmp
add
ret
pop
into
add
inc
cmpsl
and
notl
ds
ret
cmpsl
push
inc
stc
cmp
in
mov
dec
xor
ja
in
adc
fbld
xor
scas
add
and
cmp
leave
sub
mov
mov
xlat
mov
and
adc
adc
or
cmpsb
lea
inc
insl
xchg
sub
push
xchg
push
clc
test
jmp
lea
fwait
adc
push
add
mov
inc
stos
movsl
shrb
out
orl
imul
push
popa
int3
rolb
icebp
repnz
sub
xchg
dec
sub
rol
inc
pop
scas
popa
sbbl
xchg
int
ficompl
and
jae
hlt
pushf
sub
cli
add
frstor
or
or
pop
lea
je
les
pop
xchg
or
xor
in
push
jge
out
icebp
xchg
jecxz
push
or
out
scas
push
adc
addl
inc
ds
xor
sub
filds
paddusw
xor
jle
in
dec
sbb
lea
xor
push
repz
dec
fwait
push
adcb
inc
ds
inc
int3
cwtl
mov
dec
iret
xlat
xorb
xor
dec
hlt
xchg
adc
les
test
fsubrs
pop
ljmp
out
ds
mov
xchg
add
mov
cmp
mov
getsec
dec
dec
jmp
jnp
pusha
arpl
sbb
cmp
jmp
push
fwait
js
std
inc
mov
cwtl
fcoml
rorb
data16
jno,pn
push
clc
jmp
lret
scas
push
fsts
jl
and
test
sti
sbb
cmp
mov
mov
leave
sbb
iret
gs
pushf
add
cli
iret
push
les
dec
jns
sub
pop
add
in
aad
pop
ljmp
repz
push
mov
or
xchg
loopne
xor
ja
xchg
popf
mov
mov
push
mov
scas
ss
mov
inc
cmc
xlat
mov
stos
sbb
push
lds
ja
arpl
adc
fbstp
cmc
xor
je
or
popa
pusha
mov
test
push
std
movsb
jge
xchg
into
stos
and
mov
jl
pop
inc
xor
lods
push
cmpl
inc
icebp
lcall
std
mov
xchg
cltd
mov
cwtl
mov
or
lea
pop
fsubrl
sbb
mov
lahf
sar
pop
leave
ffreep
push
mov
pusha
int3
in
xor
sub
shrl
pop
fldl
sbb
out
or
or
int
rorb
push
jl
inc
jmp
fldcw
inc
stos
dec
orb
nop
mov
addr16
cwtl
repz
mov
ja
pop
push
negl
test
dec
repnz
lods
cmc
leave
data16
push
cli
mov
lret
sti
ja
add
pop
fmull
sbb
dec
push
js
sbb
xlat
mov
flds
mov
mov
std
shrl
and
cwtl
dec
es
je
inc
ret
leave
ret
sbb
scas
add
xchg
out
pop
xchg
mov
mull
out
out
sti
sbb
sbb
mov
mov
inc
inc
into
out
dec
inc
mov
addr16
cltd
imul
sbb
mov
lahf
call
push
mov
imul
sub
mov
sbb
adc
jmp
cli
test
in
pop
jmp
shl
das
push
jmp
jp
push
out
ret
into
cmp
add
push
add
inc
cmp
xor
pop
sub
daa
dec
in
add
xchg
pusha
in
mov
push
dec
mov
mov
imul
lods
sub
fwait
sbb
lea
les
sub
cmp
xor
stos
mov
popf
push
stos
mov
dec
jne
xchg
ffree
or
jl
pop
ja
fcomi
ss
or
dec
mov
imul
xchg
sbb
cs
test
push
add
push
sub
lret
xchg
mov
and
leave
fdivrl
stos
imul
cs
aam
mov
sub
pushf
inc
jmp
pop
ljmp
xlat
push
pop
in
stos
sub
adc
jg
push
xor
sbb
iret
je
and
mov
pxor
xchg
fisttpll
mov
int3
outsl
dec
dec
inc
hlt
nop
and
inc
imul
cmpb
ja
int
cs
cmp
dec
daa
add
mov
cmp
cmpl
cmpl
xchg
jbe
insl
jle
rcrb
xchg
cmp
lds
loop
cltd
in
inc
cmpb
pop
sub
test
cmp
pusha
pop
loopne
push
mov
lods
cmpb
jecxz
sti
dec
cld
push
cmpsl
jne
ljmp
mov
iret
dec
sbbb
neg
out
inc
jmp
cmp
push
pop
sub
mov
fwait
mov
sar
push
sbb
out
aam
jo
fs
sbb
and
mov
inc
or
xchg
jb
push
mov
push
aaa
pop
ja
jne
xor
inc
pop
pop
push
daa
imul
inc
clc
xchg
sbb
sti
xor
scas
mov
dec
xchg
das
imul
test
loop
les
pop
popf
push
call
sbbb
sub
sbb
sub
jmp
jle
cmp
insb
mov
aaa
push
cmc
mov
lahf
push
addl
outsl
push
add
inc
jo
dec
and
ja
xlat
scas
push
adcb
fistl
lods
or
inc
mov
or
lods
out
push
ja
mov
icebp
dec
xchg
adc
ljmp
dec
int3
mov
cmc
adc
mov
mov
movsl
add
push
rorb
nop
cli
inc
sub
in
ret
add
test
aad
push
push
in
out
ljmp
cld
mov
push
jo
mov
cltd
sbb
mov
ret
jle
rclb
push
cli
out
lret
pop
sub
das
shlb
sub
and
js
rcrl
in
adc
aam
pop
int
add
xor
push
add
lods
shl
les
dec
les
rcll
cmpsl
cld
lods
inc
cltd
jp
mov
sti
int
imul
pop
inc
mov
cmpl
cli
roll
jecxz
adc
xorb
adc
add
dec
outsb
aaa
imul
adc
xchg
adcb
mov
aad
mov
jnp
fdivs
push
cmp
or
loop
imul
call
mov
pop
out
xchg
movsl
ds
jns
cmp
cmp
pop
aas
mov
jle
push
dec
push
push
add
inc
sti
pop
loop
in
dec
mov
scas
pop
outsl
inc
shrb
jbe
cwtl
cmpps
jl
cmp
cs
roll
mov
pop
cmp
dec
xchg
cmp
outsb
nop
lret
push
fistpll
test
pop
xor
jbe
jnp
fidivrl
aas
aas
arpl
push
jae
leave
push
xlat
insl
inc
out
es
cmpsl
inc
test
jg
xor
int3
fcomip
ds
fdivs
push
lea
fdivl
jmp
fmulp
jg
aaa
xchg
or
movsb
cmp
pop
imul
dec
iret
adc
jo
cld
ficoml
stc
and
in
sbb
add
jmp
push
jg
int
iret
sub
push
xor
pop
dec
xor
sbb
das
jno
sub
mov
jl
push
nop
cmc
add
stos
and
jbe
and
jne
out
sub
mov
pop
or
dec
fwait
pop
mov
push
int
sbb
and
ret
push
mov
add
mov
inc
xor
out
xlat
pop
fst
icebp
jo
push
addr16
lcall
shrl
mov
dec
data16
insl
jge
mov
cltd
cwtl
pop
xlat
mov
icebp
outsb
das
lods
push
add
ljmp
aad
inc
popa
scas
sub
mov
inc
xor
call
jns
cld
mov
cwtl
rcrb
dec
aaa
mov
xchg
xor
aam
sbb
aam
xchg
sbb
adc
sbb
jp
push
divl
pop
pop
js
ljmp
add
sub
sbb
pop
enter
dec
xchg
push
in
fistpl
dec
into
lds
lahf
add
fwait
adc
sub
into
adc
call
or
jo
ret
ljmp
std
sub
enter
mov
sub
push
and
leave
inc
icebp
inc
stos
mov
xchg
adc
dec
push
inc
jno
mov
or
into
movsb
fwait
jne
lea
pop
mov
cs
xor
nop
xor
stos
dec
fistpl
lock
outsb
out
or
pop
les
mov
inc
mov
jmp
insl
jecxz
es
repz
pop
enter
scas
mov
daa
mov
jge
out
and
mov
dec
push
mov
leave
pop
mov
or
test
stc
out
dec
and
pop
mov
into
cltd
push
jo
or
pop
push
leave
sbb
roll
popf
es
aam
daa
mov
adc
mov
test
pop
loop
movsb
push
cltd
push
stos
stos
push
orb
call
mov
xchg
xor
arpl
mov
push
sbb
and
dec
add
xchg
mov
iret
mov
xlat
or
pop
sbb
enter
mov
xor
sti
cwtl
in
inc
pop
movsb
xchg
stos
es
lea
dec
mov
pop
or
fimuls
test
test
sti
in
mov
xor
lods
lret
popf
cs
add
push
call
jbe
cmpsl
out
and
or
and
ds
lret
sbb
daa
or
sub
pop
das
jb
ds
hlt
xchg
addr16
iret
cwtl
inc
sub
push
cmp
mov
dec
xchg
les
js
cwtl
mov
in
aas
dec
lret
scas
add
cmpsb
ss
and
jecxz
xchg
mov
cmp
push
inc
xchg
or
cli
push
sub
xor
shlb
outsb
mov
sbbb
fisubrl
xchg
jb
jmp
loopne
cwtl
push
or
das
ret
pop
jb
out
js
imul
mov
inc
jnp
pop
cs
andl
mov
adc
ja
or
push
sub
mov
int3
out
iret
ss
fs
inc
inc
mov
fadds
xor
and
add
out
adcb
stc
lods
jae
sarb
mov
and
xchg
add
xor
lret
inc
push
test
pushf
ret
fbld
rcrb
xor
mov
icebp
popa
push
stos
add
xchg
sbb
movsl
adc
mov
or
and
dec
or
nop
jg
cmp
rcrl
fdiv
lds
mov
out
fcomps
les
jb
inc
lods
rcrl
cltd
js
ljmp
or
xorl
call
push
mov
pop
jns
or
shrb
stos
pop
ret
imull
sbb
out
lock
sbb
pop
lods
getsec
mov
lcall
lock
imul
outsb
push
mov
dec
push
mov
data16
test
mov
dec
sub
and
jae
jnp
push
mov
in
scas
mov
hlt
jbe
jp
repnz
test
push
add
call
dec
mov
call
lds
rcr
shlb
sbb
roll
sbb
cld
add
add
pop
out
bound
scas
cmp
jno
in
sahf
test
in
sbbb
pusha
int3
mov
sub
cltd
test
cld
push
stc
pop
movb
sbb
das
scas
ljmp
inc
outsb
adc
push
arpl
mov
arpl
dec
adc
pusha
push
test
insb
add
push
adc
cld
xchg
adc
cmp
fbstp
popa
in
dec
test
xor
or
cs
shll
jne
sub
push
test
sbb
adc
and
pushf
test
scas
aaa
dec
xor
roll
xchg
es
jns
stos
loopne
jno
das
inc
jno
sbb
bound
xchg
mov
add
inc
js
sahf
and
and
outsl
push
fsts
addb
xor
leave
add
inc
jmp
pop
and
mov
xor
aam
xor
clc
xchg
mov
fcmovb
sub
jle
mov
lea
insb
cmp
dec
pop
xor
adc
les
in
xchg
push
sbb
mov
mov
or
shll
and
mov
lahf
adc
roll
mov
int
add
fiaddl
dec
adc
lret
xchg
packsswb
lcall
inc
bound
js
xor
lret
ja
repz
jp
popf
push
cmc
decl
mov
jb
xchg
and
clc
repnz
in
cld
sbb
add
test
inc
sbb
jmp
repnz
cmp
mov
jb
pop
or
mov
sub
xor
mov
lock
int
dec
aaa
lret
cltd
jne
rcrb
jmp
sbb
out
lods
lds
mov
inc
mov
push
jne
adc
imul
jmp
cmp
iret
cmp
stos
nop
mov
dec
jecxz
enter
dec
stc
test
inc
or
mov
cmpsb
mov
push
loopne
mov
sub
insb
mov
int3
add
jle
mov
mov
lods
bnd
out
and
sbb
mov
pop
jb
lret
orl
cwtl
in
shlb
pusha
lock
insl
sub
xchg
int
pop
mov
fiaddl
pop
add
sub
int3
mov
pop
xchg
jp
sahf
xor
mov
xor
shrl
aas
sbb
xorb
out
inc
fmull
fstpl
mov
pop
out
push
out
push
dec
cli
dec
cmpsb
xor
cmp
js
cld
pop
loope
push
aas
sbb
mov
mov
xchg
fidivs
push
jo
popa
push
ds
and
xchg
cltd
mov
add
loopne
xchg
xlat
testb
outsb
ret
add
sub
mov
jno
mov
push
mov
jbe
in
imul
les
pop
ss
jecxz
sti
in
cmpsl
movsl
les
sarl
cmpsl
cwtl
lahf
popf
adcb
xchg
rolb
jle
ret
xchg
aas
mov
or
repnz
push
insb
sbb
add
js
push
push
in
pop
test
scas
test
mov
sbb
mov
add
dec
aas
mov
sub
imul
push
lret
into
xor
js
pusha
or
sub
lods
nop
mov
daa
mov
and
sti
pop
or
mov
notb
outsl
inc
sub
jb
int3
pop
out
dec
hlt
shr
stos
in
mov
xchg
mov
test
pop
add
push
pop
sub
jp
ret
or
lock
les
arpl
mov
out
insw
and
idivl
stos
out
mov
rorl
push
mov
cwtl
test
cmpsl
lds
lret
jl
mov
stc
xchg
stos
testl
jne
push
cmp
pop
jmp
inc
fidivrs
lock
xor
sbb
jg
jl
in
mov
dec
loop
sbb
and
in
jmp
das
cmpsb
cwtl
xchg
jmp
adc
pop
ds
mov
sub
int
scas
outsl
push
cmp
pop
or
outsb
scas
ret
mov
lahf
inc
dec
test
jecxz
mov
mov
mov
inc
add
out
fsubr
pusha
addl
enter
roll
test
in
shrl
test
xor
stc
or
inc
push
mov
lea
adc
xor
and
gs
mov
adc
or
loopne
cmc
lret
stc
add
or
ret
out
pop
dec
das
xchg
inc
sbb
xor
jb
sub
mov
jge
cwtl
push
inc
addr16
out
in
push
inc
and
pop
mov
and
add
cltd
jbe
jae
lahf
or
jle
mov
outsl
sbb
out
iret
jae
fisubs
lret
jns
lret
mov
enter
xor
xor
pop
rorl
jp
mov
and
push
popf
sub
js
xchg
mov
dec
sbb
mov
mov
pop
or
jl
test
js
sub
std
dec
imul
test
and
push
ljmp
jbe
cmpsb
int
add
mov
xor
dec
mov
mov
popf
mov
mov
and
sub
cmpsb
daa
pusha
push
pop
jg
jno
out
outsb
jnp
xchg
outsb
fwait
and
rcll
icebp
xchg
cld
out
int
testl
out
adc
call
enter
xchg
push
sbb
setae
inc
int
adcl
fwait
je
lds
insl
lods
stos
fucomi
mov
popa
icebp
adc
mov
push
jmp
and
push
scas
xor
daa
sub
pop
cmpsb
lea
push
and
into
pop
ret
sub
shll
add
push
jb
int3
push
mov
dec
test
cmp
es
xchg
inc
adc
mov
sti
jo
sti
sbb
sbb
push
bound
inc
xor
and
fnstsw
pop
aad
mov
dec
lret
push
fdivrp
out
dec
push
enter
sbb
sub
add
mov
push
or
sbb
int3
mov
test
lret
sub
pop
call
or
pop
ljmp
push
daa
jle
inc
test
in
aam
mov
outsl
xchg
stos
cmp
nop
inc
rcll
pop
and
or
mov
iret
pop
mov
xchg
popa
xchg
pop
jmp
jle
dec
inc
sti
mov
cwtl
mov
cmp
stos
bound
mov
mov
sbb
in
xchg
enter
enter
and
cmp
mov
xchg
inc
xor
xor
lret
std
nop
push
dec
xchg
mov
sub
cmp
je
out
aaa
push
test
inc
add
sbb
stos
add
add
push
cltd
fiaddl
jne
add
repz
imul
xchg
or
mov
pop
es
pop
cmpl
push
in
out
pop
adc
or
loope
pusha
cmp
in
es
test
push
mov
outsl
cmp
fildll
add
fmull
push
jns
or
push
shrl
push
es
cmc
outsb
or
loope,pn
mov
xor
push
dec
pop
and
pop
xor
popf
lds
or
dec
aad
pop
dec
ds
shll
push
outsb
lea
pop
fldenv
fs
pop
adc
push
jne
dec
ljmp
inc
out
inc
push
shlb
inc
nopl
jge
sbb
xor
jecxz
movb
lret
lret
push
cli
fildl
lds
push
fnstsw
fcomps
inc
outsb
pushf
push
inc
jae
fwait
or
inc
ret
mov
testb
xchg
xchg
mov
cmp
inc
sbb
mov
jp
mov
loopne
stc
inc
sti
sub
pushf
je
xchg
xchg
adc
pushf
ret
fdivrl
in
lods
or
mov
jmp
bound
pop
sub
stc
sbb
orps
outsl
lcall
jp
or
xlat
jnp
popf
dec
rcll
inc
out
inc
push
gs
shll
mov
push
ret
and
sub
mov
sub
xor
pop
pop
loopne
incl
leave
dec
scas
pushf
push
mov
cli
scas
and
push
add
lods
mov
or
aad
sarb
dec
inc
add
xchg
push
mov
lock
aam
jp
mov
das
push
dec
or
dec
lock
mov
scas
sub
mov
sub
inc
loope
scas
jmp
aam
push
lods
mov
mov
dec
out
shr
xchg
out
sub
pusha
cs
cwtl
popf
leave
mulb
xor
and
sub
repnz
cmp
jns
arpl
jl
pop
ljmp
fcoms
xchg
cmpsb
loop
aaa
cmp
sub
mov
lahf
mov
stos
aaa
inc
xor
loopne
cmp
pushl
mov
dec
cwtl
fisubs
xor
adc
lock
bound
pushf
lcall
lret
pop
jbe
in
arpl
stc
cltd
out
lock
lods
xor
ret
data16
mov
jnp
xchg
pop
xor
ficoml
mov
daa
test
sub
ds
sub
push
scas
inc
push
jno
adc
adc
ljmp
out
rorb
mov
or
outsb
xor
xchg
jecxz
mov
sbb
adc
daa
hlt
push
adc
mov
dec
stos
pop
icebp
loopne
sbb
outsb
sahf
iret
sbb
scas
flds
arpl
ret
insb
sbb
inc
fstpt
mov
rcrb
sbb
mov
in
fsubr
aad
pop
jg
xchg
jns
cmp
jne
imull
xchg
pop
sub
jns
out
and
fsubl
push
pop
popf
xchg
out
mov
xchg
fwait
cmp
pop
addl
push
add
lds
filds
mov
pop
xor
mov
clc
push
xchg
and
inc
xlat
repz
sbb
sahf
gs
xor
dec
stos
mov
jmp
sahf
test
push
shrl
outsl
and
fadds
test
lcall
mov
cvtps2pd
adc
in
fs
fwait
mov
mov
leave
aad
pop
jl
lcall
aaa
inc
sbb
rolb
fcomip
ja
xchg
ds
out
push
push
repnz
jno
xchg
fadd
sub
add
push
push
inc
and
mov
and
jg
cmpb
mull
xlat
mov
jl
push
adcl
adc
into
repnz
scas
out
mov
in
jnp
test
jmp
sbb
cli
lahf
orb
xchg
lret
cmp
fildll
jns
mov
test
imul
sbb
pop
dec
and
xchg
ja
movsl
inc
push
mov
jle
test
mov
push
mov
jae
mov
push
jb
xlat
test
outsb
cld
pop
arpl
ret
out
ss
cld
mov
xor
test
addl
xor
lods
cld
lea
sbb
jge
sub
mov
test
inc
hlt
dec
out
shrl
lcall
lahf
aad
jg
push
jle
pushf
in
or
inc
jno
fdivr
mov
push
jns
sbb
xlat
mov
xchg
dec
sbb
test
enter
lods
push
fwait
in
add
daa
mov
push
or
xor
loopw
jae
pop
xor
loop
push
leave
mov
cld
mov
addl
mov
rolb
stc
fiaddl
xchg
mov
or
jae
jmp
cmp
out
sub
or
orl
or
fcomip
mov
aad
sub
mov
inc
enter
mov
insb
popl
das
ja
bound
pop
jmp
mov
jns
enter
popa
std
mov
sbb
hlt
ret
cli
add
push
mov
jmp
rolb
pusha
and
push
cwtl
cltd
lret
int
repnz
dec
imulb
imulb
push
mov
loope
sub
cmp
pop
push
mov
out
std
sub
fcomps
insb
pop
cmc
cwtl
jmp
adc
push
mov
sub
repnz
loope
and
and
inc
emms
mov
lret
jnp
lods
mov
xor
negb
inc
inc
fsubl
push
ss
jge
or
cmp
jo
mull
int3
fstpl
jp,pn
mov
jecxz
data16
cmp
in
pop
addr16
fstpl
sub
sbb
fbld
mov
jmp
mov
inc
scas
test
mov
int
mov
xchg
mov
mov
lahf
popf
pop
das
das
imul
jno
add
lea
push
js
gs
cmpsb
sti
mov
shll
add
lret
push
dec
les
inc
rorl
in
leave
dec
aad
in
stos
add
cwtl
pop
dec
cld
cmp
or
mov
sub
fsub
push
lret
jnp
loopne
imul
sbb
icebp
out
sahf
sbb
jg
dec
call
outsl
addr16
mov
sbb
push
jecxz
stos
mov
stc
dec
dec
imull
mov
out
bound
negb
inc
ljmp
cmpsb
popf
div
mov
push
pop
push
clc
mov
loopne
std
mov
mov
shr
cld
mov
cmp
sub
div
popf
icebp
sbb
cmp
mov
push
scas
xchg
repz
gs
pop
inc
pop
sbb
xor
shr
add
cld
push
loop
jb
inc
js
fwait
sahf
jnp
ljmp
ljmp
sti
jg
ret
shll
push
jns
pop
xor
daa
lret
and
js
fmuls
xor
pop
inc
adc
mov
xchg
insb
or
cs
ja
mov
and
mov
mov
sub
add
inc
subb
test
dec
hlt
adc
in
iret
andl
fildl
and
cmp
nop
fwait
push
aas
arpl
adc
nop
in
out
imul
repz
pop
adc
jge
imull
adc
add
divl
mov
push
xor
add
lea
mov
mov
cs
xchg
pop
and
inc
mov
pop
mov
bound
fstl
outsl
lods
fisubrl
xor
mov
inc
pop
insl
fdivl
movsb
jl
adc
fldenv
xchg
es
cmc
sbb
sub
mov
insb
popl
mov
dec
dec
lods
or
clc
in
sub
pop
ret
or
shrb
lahf
sbb
aad
mov
sub
mov
imul
xlat
in
pusha
jns
jbe
pop
lea
xchg
pop
fistps
popa
push
inc
add
mov
mov
cmp
insb
out
mov
ja
out
inc
jg
dec
and
dec
add
fiaddl
adc
sbb
out
test
push
mov
enter
paddb
mov
ljmp
jns
movsl
dec
mov
dec
pop
fdivrs
jnp
push
fwait
push
lcall
sbb
iret
in
jp
sbb
in
sub
and
push
stos
jl
push
push
and
sbb
mov
fistpl
pop
fildl
xlat
ret
jbe
js
push
lds
outsl
test
dec
mov
xor
pushf
lahf
sahf
and
pop
xor
add
mov
mov
mov
mov
inc
arpl
mov
pop
std
push
mov
cmpsl
into
sub
mov
arpl
or
repnz
push
das
out
lcall
clc
stc
pop
and
push
mov
pop
cmpsb
mov
sbb
push
inc
sahf
das
adc
dec
sbb
es
jne
xor
enter
inc
dec
in
jnp
rclb
in
or
or
movsb
pusha
sub
jo
add
xor
mull
mov
mov
icebp
daa
sahf
or
inc
call
in
movsl
pop
movsl
nop
pop
push
fcmovnu
mov
or
mov
dec
add
stos
int
popa
pushf
ljmp
sbb
add
std
inc
sub
roll
inc
inc
sbb
fs
jge
imul
pusha
mov
dec
xchg
frstor
sbb
pop
loop
and
imul
jbe
imulb
andl
xor
rcrb
or
inc
data16
xor
loop
std
rorb
jecxz
and
fcompl
movsl
sbb
sbb
cmp
push
into
lret
frstor
pop
mov
and
lds
sti
lods
loopne
push
or
jp
inc
cld
es
or
dec
test
cmp
push
cmp
dec
jecxz
int3
inc
cwtl
mov
in
dec
sbb
xor
dec
mov
pop
ficoml
jecxz
jae
lahf
mov
sub
push
nop
and
and
sub
xchg
xorl
ror
out
dec
adc
adc
add
jo
icebp
mov
inc
dec
in
or
lods
hlt
rcl
adcb
cmp
xchg
mov
imulb
pop
xor
sbb
je
hlt
and
xor
pop
ds
lds
push
test
cmp
cmp
ret
nop
stos
je
clc
mov
jl
cmp
push
mov
cli
cmp
jo
pop
adc
jae
mov
cltd
xchg
mov
movsb
mov
cmp
negb
out
and
mov
enter
imul
jo
xchg
lock
push
dec
push
and
mov
cs
jbe
pop
or
jge
fnsave
push
aaa
push
test
pop
xchg
aas
lea
lret
pusha
mov
ss
add
pop
inc
sbb
stos
sub
push
adc
lret
lock
pop
ret
xchg
sbb
nop
lods
mov
jp
fwait
repz
aad
pop
sbb
cmp
pop
lock
mov
leave
leave
repz
stc
test
xchg
mov
std
in
cld
or
mov
subl
stos
leave
imul
iret
mov
call
sbb
jmp
mov
stos
lods
in
push
add
cmpb
inc
loope
decb
test
sub
sub
dec
test
pop
jge
xchg
mov
push
int
hlt
xchg
pop
cs
cwtl
mov
imul
push
or
inc
mov
fs
popa
lock
push
shlb
into
loope
xchg
jb
int
push
lods
dec
ljmp
cli
sti
mov
outsl
push
negb
data16
fwait
out
ret
jnp
mov
not
in
in
lret
imul
mov
xchg
add
nop
sbb
xor
enter
fisttpll
sbb
adc
imul
mov
dec
xchg
test
in
cmc
inc
dec
aad
ja
adcb
idiv
and
imul
cmpsb
pop
mov
xchg
and
rclb
mov
mov
sbb
jg
stc
cmc
lods
out
pop
iret
shrl
push
dec
mov
jbe
pop
xchg
filds
sti
cmp
xchg
mov
xor
mov
mov
out
xchg
and
pop
out
sbbl
std
xchg
fidivrs
dec
imul
jns
orl
out
mulb
repz
mov
jecxz
xor
xchg
lods
mov
add
stc
enter
test
jmp
and
jo
jmp
pop
inc
in
adc
fsubl
mov
addb
fsubl
pop
out
dec
gs
divl
xor
inc
test
mov
outsl
and
leave
push
fcmovnbe
sbb
push
xchg
sub
addr16
mov
mov
sbb
or
out
lock
or
xor
imul
jbe
pop
pop
fldcw
jg
pop
addl
jbe
or
mov
mov
mov
pslld
xchg
mov
or
imul
leave
jp
sbb
inc
pop
fisttpll
ds
pop
lea
pusha
mov
mov
lret
jno
es
mov
sbb
xchg
test
or
jbe
push
mov
dec
or
mov
and
nop
ljmp
sarb
xchg
mov
xchg
lock
aaa
push
dec
ss
xor
ds
mov
cmc
xor
inc
fdivrs
push
jmp
sub
pusha
mov
mov
or
hlt
pop
push
mov
inc
fildl
cmpsl
mov
adc
push
cld
xchg
mov
loop
sbb
jge
test
data16
add
std
aam
in
fs
cmp
insl
dec
mov
jecxz
movsb
stc
and
movsl
xor
je
cmp
sbb
jmp
shl
lahf
test
mov
add
cmp
jo
imul
ljmp
popf
cmp
sub
mov
iret
jne
mov
cmpsb
lods
mov
xchg
push
pushf
pop
pop
fucomip
mov
push
test
jmp
jns
sbb
jl
clc
xor
dec
jbe
icebp
adc
inc
pushf
in
in
pushf
push
jmp
mov
leave
int3
cmpsl
sti
je
mov
jl
jg
arpl
xchg
sub
roll
nop
data16
adc
pop
roll
in
mov
adc
fsubrl
xchg
movsl
dec
xchg
mov
test
mov
xor
mov
xlat
pop
inc
scas
mov
cmp
jl
sbb
add
mov
mov
pop
add
lods
cmp
insb
loope
outsl
sub
jle
pop
in
adc
sub
adc
les
fisubrs
out
mov
add
mov
pop
pop
scas
adc
jb
pop
xchg
pusha
decl
imulb
or
dec
sbbb
out
in
std
ss
out
movsl
push
sbb
fwait
ss
push
jg
movsl
insl
mov
jne
in
les
mov
adc
int3
aaa
orl
rorl
aas
lret
out
or
jne
aam
roll
popa
inc
jg
addr16
aad
call
mov
jno
xchg
push
ds
sbb
shl
movsb
test
fcmovbe
icebp
xchg
push
xor
je
lahf
subb
push
jecxz
mov
sub
inc
loopne
and
jg
xor
mov
push
inc
sarb
xor
int3
jb
repz
testl
and
les
les
mov
sub
sub
push
mov
or
xchg
pop
dec
ds
out
pop
cmc
mov
fists
shlb
je
adc
popa
jmp
sub
mov
inc
cld
in
iret
push
movsb
and
inc
imul
mov
movsl
adc
shr
xor
sub
test
mov
popa
mov
push
orb
push
pop
pop
fnsave
es
push
adc
mov
push
lcall
jb
dec
movsb
jp
mov
test
sub
push
mov
dec
outsl
repz
fdivr
imulb
icebp
sub
inc
adc
xor
into
arpl
mov
lods
jge
sub
push
mov
and
cli
test
mov
push
push
dec
sbb
movsb
hlt
mov
and
iret
push
mov
inc
mov
mov
lods
push
stos
push
nop
cmp
imul
inc
jne
pushf
and
pop
cmp
sahf
cmpsb
bound
out
xor
sti
jp
mov
js
xor
sbb
sbb
sbb
jp
in
test
pop
or
popa
sbb
adc
orb
mov
inc
subb
xchg
and
xchg
bswap
xchg
into
pop
shlb
cmpsb
mov
imul
movsb
sbb
cmp
mov
xlat
scas
xor
add
inc
mov
jmp
push
mov
xor
iret
pushf
lret
out
and
out
frstor
out
jbe
xchg
cmp
je
add
xlat
test
xchg
sti
mov
psubsw
cltd
mov
rcl
repz
push
xchg
loopne
add
ret
adc
rolb
cmp
stos
adc
hlt
pushf
and
jbe
shll
dec
and
inc
mov
dec
int
mov
nop
imul
inc
outsb
cwtl
into
dec
jg
or
mov
int3
sub
inc
lods
data16
and
or
mov
aaa
xchg
lds
jg
push
fwait
shl
insb
bound
nop
and
fdiv
fisttpll
mov
mov
repz
addr16
push
jecxz
cli
mov
aad
jo
hlt
hlt
dec
inc
loope
loop
rcr
mov
divl
dec
xlat
out
push
fistpll
repz
sbb
or
negb
jno
mov
mov
pop
imul
loop
xor
lahf
stos
mov
sbb
sbb
sub
cmp
jne
adc
cmpsb
mov
clc
inc
xchg
mov
jge
or
iret
mov
shll
daa
das
lret
fsubs
repz
lcall
push
call
int
into
pop
incl
aad
pop
pop
ljmp
sbb
sbb
mov
pop
stos
clc
mov
cmp
cmp
pop
popa
and
loop
cmp
push
sti
jmp
pusha
dec
xor
andl
orl
adc
mov
fidivrl
aad
cmc
rcrb
mov
lcall
inc
jae
mov
std
loop
xchg
mov
mov
in
cli
subl
shl
adc
rcrl
inc
xor
rcrb
pop
adc
loope
lock
mov
pop
pop
mov
in
movb
pop
mov
pop
dec
fnstcw
fsts
das
popa
mov
inc
push
es
sub
push
loop
or
test
adc
ljmp
sub
clc
testb
incb
pusha
xchg
std
adc
kmovw
lcall
rolb
clc
lods
jae,pn
jl
sub
in
inc
xlat
pop
cmc
xchg
push
dec
sbb
pusha
arpl
xorl
insb
inc
add
jae
push
ss
imulb
js
in
imul
or
mov
stc
add
std
push
push
repz
xchg
fdivp
icebp
pusha
clc
data16
movsb
mov
add
hlt
adc
dec
push
sbb
mov
sub
es
mov
sub
sub
aas
fs
adc
mov
aas
pop
cmp
xchg
imul
add
call
aaa
repnz
or
sarl
cwtl
mov
dec
bound
sbb
xchg
mov
test
clc
jl
cmp
imul
jno
sub
xchg
cld
pop
cmpsl
scas
and
sar
jne
mov
rol
or
stos
mov
in
pop
xchg
jo
push
ss
repnz
repz
pop
and
jb
jp
inc
push
sub
rcll
sub
loop
cmpsb
mov
mov
pushf
mov
sub
push
movsb
popf
loope
adc
mov
pop
arpl
sar
mov
int3
pop
ds
addr16
cmp
in
jb
jae
popa
prefetchw
inc
mov
movsb
enter
js
sti
push
lods
xor
scas
pop
mov
dec
into
jbe
repz
sbb
sbbl
pop
cmp
hlt
out
shrl
hlt
mov
fmuls
lods
cmp
cmpsb
ret
das
fnstcw
sub
xor
test
pop
xchg
and
xchg
jle
jl
stos
leave
dec
dec
gs
mov
jge
addr16
mov
xor
or
xchg
xchg
cmp
ss
stos
pusha
xchg
mov
adc
dec
dec
push
jnp
push
ja
pop
cltd
mov
loopne
out
jg
pop
pop
inc
inc
ja
test
or
xor
push
and
push
mov
pop
mov
cmc
repnz
sbbb
int
sahf
outsl
nop
cmpsb
jb
sbb
mov
and
add
and
pop
dec
dec
aaa
and
pop
xchg
ret
xchg
fists
call
rcrb
push
jl
jnp
xchg
ljmp
jo
js
sub
inc
scas
mov
addr16
test
push
js
fs
sbb
popa
mov
inc
cmpl
cmc
mulb
cmpsl
sub
mov
jg
dec
sar
cmp
fsubrs
pop
mov
aas
imul
popa
jmp
gs
out
fxch
test
inc
in
not
test
push
icebp
adc
jecxz
cmp
lcall
test
sub
sahf
mov
xor
fisubrs
fdivl
cmp
jl
push
mov
sti
mov
mov
xor
bound
enter
in
adc
dec
push
or
lcall
pop
mov
jns
and
jae
aam
fisubl
dec
sti
mov
rorl
adc
cltd
push
cmp
test
fsubrl
decl
aam
enter
mov
or
cli
dec
jl
add
pop
xor
sbb
dec
insb
ljmpw
std
lret
in
divb
push
dec
leave
push
dec
test
pop
and
ss
ret
push
psraw
sbb
mov
sub
adc
sbb
daa
in
ret
rorl
es
in
in
ror
fidivs
call
sub
outsb
cmp
fistps
outsl
jo
in
sbb
sub
push
or
lods
sub
xor
sbb
lock
mov
push
out
lock
inc
xchg
adc
scas
xchg
lods
inc
test
dec
jle
mov
lret
test
cmp
test
xor
dec
arpl
aaa
jo
or
pusha
sub
les
cli
lods
xchg
push
dec
xor
ret
push
scas
push
out
mov
lods
ja
in
nop
mov
xchg
hlt
fcmovnb
aaa
popl
rol
fninit
and
mov
dec
in
insb
add
sbb
ds
pop
pop
loope
dec
bound
loope
xor
sbbb
popa
mov
adcl
fimuls
jle
push
int3
jnp
loope
fsubrl
cmp
aaa
rcl
cmpl
cmp
sub
push
scas
or
jecxz
andb
ja
add
jb
pop
jp
outsl
add
sbb
sbb
bound
in
imul
stc
dec
mov
idivl
dec
das
xchg
mov
sti
rcrl
insb
pop
mov
pop
xlat
lds
into
add
pop
repz
mov
dec
enter
stos
xchg
cmpsl
jle
push
mov
dec
adc
push
xchg
mov
ljmp
mov
movsl
leave
ficoms
cli
lret
lahf
jp
inc
sub
cli
pop
movsb
inc
xchg
nop
mov
pushl
mov
push
lds
mov
mov
das
outsl
cmp
lock
or
sbb
mov
dec
clc
lods
hlt
out
mov
div
push
jne
aaa
aas
jl
inc
mov
int3
test
ret
cmp
push
or
jp
cld
scas
adc
test
rcrb
test
dec
mov
jae
and
pop
int
repnz
sbb
shr
test
movsl
notb
sbb
jae
sub
lret
adc
jmp
pop
dec
cmp
std
cmpsb
mov
sbb
xchg
inc
out
out
cld
sbb
xchg
adc
fwait
jo
aam
aad
mov
cmp
lret
pop
sub
jo
addr16
std
jbe
movsl
mov
inc
imul
mov
cmp
fistpl
cmp
mov
test
jo
push
xlat
lret
stos
iret
sbb
push
xor
mov
inc
jecxz
mov
sub
xlat
xchg
popf
in
xchg
adc
xchg
push
arpl
loope
punpcklbw
jno
pop
fildll
add
jbe
push
cmp
jns
aas
sarb
test
cmp
vandnpd
es
mov
pop
stc
push
data16
stos
push
hlt
imul
adc
xor
in
cmpl
int
add
and
sub
popa
mov
std
push
or
adc
sti
cs
and
jl
jle
movsb
outsl
and
jg
mov
insb
inc
sti
push
das
mov
fiaddl
or
cli
cld
or
rclb
sti
popa
lods
jle
std
aaa
pushf
xor
inc
push
mov
es
xlat
arpl
fsubr
inc
mov
aas
cmpsb
fcmovu
cltd
sub
mov
test
rorl
add
mov
sub
sti
cmp
ds
sub
mov
cmp
xchg
into
pop
sub
rolb
xor
fs
ret
aad
fistps
jecxz
mov
add
rcr
rcl
stos
daa
loop
inc
aad
push
insl
mov
enter
call
xlat
jbe
insl
lret
push
jne
mov
cmp
jnp
dec
xor
fimull
pop
stos
aaa
mov
xchg
sub
lock
std
mov
cmp
sahf
and
xchg
mov
push
movsl
cli
popl
int
imulb
dec
shll
mov
mov
dec
data16
mov
in
das
add
mov
sbb
fsubrl
arpl
mov
mov
stos
mov
ret
rol
sahf
je
arpl
mov
ret
push
jae
xor
jp
loop
outsb
mov
cmp
test
aaa
fimull
fs
leave
and
ret
mov
mov
mov
cli
and
call
jecxz
adc
fmull
push
test
mov
in
shl
jge
out
pop
sub
testl
pop
sub
pusha
sbb
or
int
push
mull
divb
movsb
sub
dec
jno
xchg
pop
mov
bound
mov
stc
cmp
jp
imul
jmp
mov
mov
sbb
test
rolb
mov
jge
push
pop
cltd
cli
mov
test
dec
or
or
mov
mov
jp
mov
and
clc
mov
and
push
jbe
fldl
xchg
pusha
sahf
inc
notb
dec
xor
scas
int
out
or
and
in
fldl
inc
adc
ljmp
jns
dec
fistpl
lods
jp
pop
add
dec
pop
adc
rcll
dec
or
xchg
pop
popa
int
lcall
xchg
loope
out
mov
cmc
aaa
inc
das
cmc
fistpll
fisttps
and
adc
mov
in
push
push
sarl
enter
xchg
test
outsl
gs
mov
push
mov
ja
test
push
insb
add
ja
ret
fiaddl
xor
in
xchg
in
icebp
pusha
xchg
testl
pop
fs
aas
adc
push
aad
xchg
dec
jno
rcl
mov
test
jmp
cli
push
push
xor
cmp
and
xchg
pop
repnz
movsl
fistl
jmp
pop
loop
push
adc
pop
popf
test
push
adc
mov
cmc
movsb
sti
int3
or
sahf
andl
cwtl
xlat
xchg
pop
push
movsl
jae
xor
addl
adc
pop
arpl
insl
xor
push
inc
push
cmp
in
cld
jbe
inc
jg
mov
xor
pop
ds
mov
stc
add
adc
aam
dec
lcall
int
or
loop
movsl
add
stos
mov
aam
orl
stos
mov
xlat
inc
decl
xchg
dec
lcall
inc
mov
test
pop
insb
jae
sbb
and
fucomi
jne
pusha
mov
ret
icebp
add
xor
mov
push
add
adc
sbb
ret
call
mov
xchg
js
jg
das
push
and
lods
mov
fdivrl
stos
nop
jo
repnz
adc
xor
mov
dec
cmp
cmp
mov
imul
push
shl
mov
jb
or
test
pushl
js
neg
sub
clc
pop
and
pop
enter
pop
gs
loop
lret
loope
or
enter
jns
adc
js
fidivrs
or
stos
or
js
imul
popl
ret
hlt
pop
or
mov
dec
cli
xchg
hlt
fidivrl
push
aam
dec
je
loop
dec
xchg
enter
cs
jg
inc
addr16
jo
adc
into
push
and
lcall
adcb
test
cmpsl
mov
in
add
cmpsl
outsb
pop
jno,pn
mov
pop
test
inc
in
cs
push
add
xchg
push
out
adc
cli
xchg
hlt
add
xchg
icebp
popa
dec
push
add
scas
push
sbb
push
jnp
push
sub
xchg
sarl
aad
popa
mov
aam
pushf
shrl
test
sti
mov
aad
adc
clc
faddl
add
jb
jno
shl
fwait
mov
add
jne
mov
ds
pushf
inc
cmp
mov
cs
and
pop
sub
out
icebp
ljmp
inc
adc
add
adc
or
sub
or
jns
cmp
cli
ret
es
push
add
jg
xor
lret
cmpsb
daa
and
popl
popf
aaa
jnp
sbb
flds
lods
push
push
out
xchg
loop
mov
std
icebp
cli
and
push
aaa
add
push
leave
mov
imul
ret
int3
inc
loopne
and
xor
mov
adc
leave
mov
pop
ss
adc
fmul
dec
data16
insb
subb
fldenv
or
xchg
fsubrs
popf
clc
sub
nop
mov
cs
clc
xchg
push
addl
push
xchg
pop
cwtl
mov
out
xchg
iret
ds
popa
xchg
fwait
adc
push
mov
mov
aaa
in
sub
notb
lret
pop
cwtl
fimuls
pop
xchg
and
ljmp
push
pop
outsl
in
nop
sub
adc
dec
inc
ficompl
xor
add
les
pop
jns
mov
mov
xchg
push
add
shl
push
ficomps
int
dec
dec
xor
bound
test
fidivrs
out
lds
lock
pop
pop
shrl
test
rorb
xor
lcall
sbb
adc
sbb
add
inc
push
xchg
leave
rorl
jb
xchg
enter
imul
inc
or
into
inc
adc
xor
int3
shll
pushf
lock
jp
movsl
inc
out
sbb
and
enter
pop
push
dec
xor
pop
loope
mov
xchg
ds
jge
test
rorl
mov
add
adc
jae
daa
fdivl
add
lds
ljmp
xchg
mov
push
test
pop
outsb
push
sbb
test
iret
mov
popa
ret
mov
fidivs
leave
nop
lahf
stc
ret
fdivrs
lods
xor
adcl
cmc
ret
push
aaa
orb
popf
jg
mov
fs
add
dec
fxtract
mov
in
dec
push
nop
or
mov
addl
xor
lcall
fnstenv
sub
mov
or
mov
stos
movsb
jns
loope
pushf
jl
push
mov
add
cmp
sarb
push
lock
cli
xchg
xchg
lcall
or
mov
mov
or
cld
xor
shll
inc
sub
sub
ret
dec
negl
mov
aad
jae
jb
gs
fwait
xor
jl
fadd
inc
mov
lret
mov
adc
lahf
sti
jnp
pushf
jecxz
push
dec
aaa
daa
iret
sub
cli
faddl
cmp
mov
les
jge
xchg
xchg
loopne
arpl
xchg
aam
mov
cmp
icebp
adc
add
adcl
shll
orl
sbb
fisttps
inc
push
ret
sbb
mov
aas
js
andl
adc
mov
pop
stc
sarb
dec
mov
add
cmc
xor
push
out
clc
outsb
shl
out
clc
adc
addb
add
sarl
sahf
daa
dec
jmp
adc
stc
or
pop
fnstcw
mov
div
loop
jne
mov
imul
fstl
imul
pop
jge
arpl
push
stos
aad
sub
mov
scas
xchg
mov
sbb
adc
ret
out
mov
test
leave
pop
mov
mov
mov
pop
test
pop
pop
xchg
and
adc
push
and
pop
popf
outsb
xchg
test
xor
push
inc
repz
sub
or
add
xchg
mov
into
stos
mov
das
data16
or
pusha
mov
sbb
fdiv
push
lret
mov
lcall
xchg
jae
push
mov
xchg
sbb
and
stos
mov
data16
outsl
push
fsts
test
jns
fldcw
cmp
fs
data16
rcr
lret
sbb
cwtl
iret
aad
out
fwait
mov
fadds
nop
dec
mov
js
pop
mov
mov
out
inc
push
cmp
mov
popa
stos
ja
adc
xlat
mov
mov
fistps
int3
sbb
push
ret
jne
inc
mov
fbld
pushf
push
xor
jp
addr16
push
lret
jmp
nop
jg
stos
aaa
in
inc
mov
add
data16
pusha
int
xlat
test
xchg
xchg
mov
pushf
std
cmpsb
in
inc
orl
mov
mov
adc
xchg
inc
or
insb
sbb
add
clc
popa
aad
adc
pop
gs
mov
sbb
aad
popf
addr16
mov
xchg
inc
push
add
and
lods
dec
rclb
js
dec
cld
cmc
jbe
dec
cli
mov
inc
cmp
shrl
ret
xor
mov
inc
jmp
ds
inc
push
fidivl
dec
mov
loop
out
xchg
mov
xor
dec
pop
je
pop
clc
call
push
fwait
shrl
mov
bound
push
add
mov
ror
sub
insl
push
mov
jecxz
aam
mov
mov
hlt
cmp
je
xchg
inc
or
mov
sub
pop
in
icebp
loop
movsl
mov
cld
stc
sbb
imull
imul
dec
inc
bound
pop
out
sub
and
out
adc
mov
insl
push
adc
mov
cmp
add
lea
pop
and
cmp
repz
and
jb
loop
push
enter
dec
dec
arpl
xchg
aad
roll
lret
adc
setp
cmp
adc
adc
mov
jae
inc
xor
xchg
neg
nop
jb
out
mov
jp
pop
enter
jecxz
cmpsl
sub
hlt
jo
jp
inc
lcall
inc
jne
loope
or
rcrl
idivb
xor
aas
scas
rorb
fadds
push
adc
shll
and
xor
int
adc
mov
dec
xchg
pop
cmp
outsl
inc
push
inc
push
icebp
cld
mov
xchg
unpcklps
stc
pop
mov
sbb
pop
xchg
divl
mov
adc
xchg
add
aam
mov
adc
mov
cli
and
push
stos
push
and
push
adc
add
icebp
sub
mov
movsl
xor
call
movsl
cld
stos
aam
push
test
cmp
addl
das
arpl
fmuls
inc
cmpsl
jmp
jp
lret
or
int3
stos
mov
pop
lahf
lods
dec
ret
divl
mov
js
faddl
inc
and
and
stc
cmpsl
sbb
ss
les
mov
stc
aaa
out
dec
push
hlt
sti
shrb
dec
xor
adc
dec
sbb
push
enter
xchg
test
pop
xchg
xchg
cs
mov
call
jno
xchg
movsb
xchg
les
lahf
mov
mov
inc
sub
xchg
add
daa
cli
shrl
mov
pop
je
sub
mov
cmc
add
movsl
or
sbb
jo
test
cmp
mov
sbb
inc
adc
ss
test
xor
in
jg
adc
xor
push
inc
jns
adcb
sahf
stos
cmp
add
inc
pop
and
rcr
pushf
loopne
or
int
jmp
les
popf
lret
mov
or
and
and
or
xor
int3
dec
jno
movsb
jns
fucomi
jmp
mov
inc
adc
fstpt
adc
std
sub
adc
jns
nop
lcall
in
rcll
ffreep
push
lods
cmpl
neg
cli
add
lcall
xor
aas
mov
jmp
into
sub
lock
repz
adc
sbb
mov
cmp
xor
push
scas
addr16
dec
pop
cmc
gs
mov
shrb
sahf
aam
push
mov
xchg
sub
shlb
adc
inc
std
loop
testb
mov
popa
inc
mov
dec
pop
clc
mov
push
mov
leave
cmp
jl
mov
in
xchg
or
imul
push
and
dec
mov
inc
jno
shlb
aad
or
clc
fisubs
adc
or
jl
jb
clc
mov
or
test
mov
adc
jnp
adc
out
aas
inc
int3
out
lcall
repnz
outsb
mov
pop
dec
or
loopne
mov
adc
fsubp
out
mov
subl
xor
xchg
fwait
jp
std
jg
or
cmp
test
adc
dec
cmp
adc
jbe
movsb
mov
jo
mov
cmp
daa
insl
cmp
dec
add
aaa
push
jnp
sbb
sub
sub
lea
lock
sub
and
mov
addl
sbb
xchg
dec
int3
mov
jns
dec
add
cmp
jle
int3
scas
bound
cmpsl
sbb
adc
jne
aam
pop
fsubl
mov
dec
mov
in
movsl
jmp
add
nop
shrb
vshufpd
ds
add
adc
insl
lret
jae
cltd
jo
inc
test
fwait
lcall
lahf
jg
mov
cmp
enter
dec
xchg
jae
jns
and
dec
and
sbb
je
and
shll
mov
fdiv
jo
mov
icebp
or
das
jne
or
sbb
sti
dec
cmc
ljmp
sub
decb
or
and
js
int3
fstp
sbb
mov
inc
pop
push
jno
stos
lods
add
mov
out
dec
cmp
int
or
std
iret
xor
out
loopne
add
imul
sarl
inc
hlt
sahf
scas
adc
lahf
js
cmp
mov
subl
mov
mov
out
add
dec
fsubl
xchg
loope
inc
out
jnp
mov
mov
mov
testl
hlt
js
sub
cmpsb
lds
adc
iret
or
lds
add
loope
js
filds
fsubs
cld
imul
mov
jbe
and
mov
cmp
cmp
adc
jae
jge
es
and
leave
cs
push
repz
dec
les
loope
in
icebp
shlb
lods
fidivs
push
mov
push
stos
inc
movsl
mov
rol
sub
dec
inc
lock
test
scas
popf
test
and
rcr
cmp
pop
lret
xlat
mov
imul
and
sbb
xchg
stc
mov
inc
mov
jg
dec
xchg
adc
xchg
xchg
repnz
jno
mov
cmp
mov
scas
jecxz
dec
push
subl
pop
divl
sub
sbb
adc
sbb
jns
iret
jno
shr
cmpsl
into
aas
mov
mov
and
jns
repnz
scas
into
ljmp
jmp
sub
das
data16
jno
inc
push
xchg
in
dec
push
ss
fcmove
inc
test
int3
cmp
jmp
je
push
adc
add
and
xchg
enter
sbb
lcall
mov
add
imul
gs
cmpsl
push
les
add
cmp
enter
push
mov
out
push
les
leave
test
outsb
xchg
ret
push
outsb
std
xor
rclb
jo
cli
inc
push
call
mov
stc
enter
cwtl
sbb
and
add
sub
lret
pop
mov
imul
push
sbb
aam
fsubl
push
add
cmc
psubusw
ret
or
lock
hlt
jns
inc
ret
clc
imul
addr16
mov
lods
sbb
out
mov
cwtl
ljmp
pop
inc
sub
inc
loop
daa
cmpsl
sahf
and
mov
mov
cltd
jecxz
mov
insb
sbb
fs
mov
push
or
pop
mov
sbb
pop
bound
subl
shrb
inc
inc
cmp
mov
mov
pop
inc
hlt
orb
in
pop
mov
pushf
mov
pop
pusha
adc
sub
cwtl
fs
xor
jo
lcall
aas
rorb
das
mov
push
bound
xchg
mov
xchg
adc
pop
sbb
movsl
sub
movsb
ret
outsb
xchg
cmp
ret
lcall
in
inc
imul
out
mov
jo
insb
in
fisubrs
mov
das
sub
xchg
and
push
mov
loopne
sti
in
js
or
dec
testl
jecxz
scas
jo
cmp
in
mov
ret
fisubs
mov
ja
and
shlb
inc
inc
aad
sub
and
call
mov
push
jp
int3
mov
pop
add
xorps
jg
sbb
cmc
stc
jb
and
xlat
out
repnz
loopne
nop
in
adc
sti
sahf
and
shrb
daa
cmpsl
xchg
pop
mov
pop
leave
jb
sbb
fs
and
and
xor
and
xchg
not
jno
xchg
ja
pop
adc
sbb
mov
ret
out
je
dec
jecxz
dec
jae
mov
out
push
in
or
lret
add
enter
sub
pushl
rolb
sti
dec
or
inc
divl
mov
das
int3
dec
push
mull
mov
xchg
das
mov
sbb
incl
xlat
icebp
outsl
dec
jecxz
lock
pop
pop
dec
arpl
notb
shll
jo
movsb
lods
repnz
std
out
icebp
mov
insb
xchg
insb
pop
out
nop
and
inc
mov
or
xor
repnz
loope
xor
sub
lds
lods
add
out
mov
lds
sbb
push
mov
loope
pop
xchg
pop
or
push
lret
cmp
sbb
push
faddl
nop
cwtl
adcl
jp
jb
pop
pop
leave
stos
daa
ds
mov
mov
fistps
and
je
or
mov
ret
dec
jge
mov
je
clc
lods
stc
out
add
inc
shll
lock
mov
inc
and
frstor
mov
in
jo
xchg
scas
outsb
xchg
imul
aaa
mov
and
pop
or
xchg
adc
test
and
aaa
mov
dec
pop
dec
scas
jo
pop
mov
cwtl
lcall
mov
aaa
jo
push
mov
xor
je
mov
or
cltd
xchg
mov
inc
adc
push
mov
ja
jmp
stos
je
add
pop
inc
mov
popf
movsl
and
das
ror
cmpsl
fs
std
mov
fidivrl
mov
mov
inc
loopne
stc
hlt
lcall
xor
mov
sub
mov
jnp
cmpsl
sub
inc
jle
xorl
pop
in
fidivrs
cmp
xchg
push
popf
and
cs
in
mov
je
sub
push
loop
pushf
or
test
insb
mov
repz
cmp
jb
popf
push
push
mov
cmp
sub
xor
inc
jp
add
jge
mov
ljmp
cmp
push
lret
cmp
cmc
fidivl
mov
mov
les
xlat
xchg
ss
add
dec
and
in
jo
ss
ret
sbbb
cmp
cwtl
cmp
in
test
iret
gs
sbb
scas
cwtl
cmpsl
loop
adc
jmp
mov
or
arpl
mov
or
fidivrl
xchg
out
xsha256
cmpsb
rorl
subb
jbe
mov
sub
les
pop
cmp
push
cs
adc
pop
and
sub
out
jecxz
push
jo
hlt
aaa
lods
out
push
out
xchg
xor
decl
aad
dec
imul
popa
test
stos
rorb
orl
dec
push
std
mov
loope
pop
push
int
dec
das
incl
aaa
mov
push
into
jno
movsb
shrl
xchg
cmpsb
xchg
pop
les
mov
lock
ja
aam
sub
pop
outsl
sub
lret
add
cli
mov
fdivr
jle
cltd
push
push
sub
addr16
mov
les
ss
faddl
mov
jo
test
call
outsl
cli
lea
in
sbb
cmpsl
dec
insb
mov
jo
jge
sub
add
loopne
data16
fwait
jle
fcmovne
add
std
ljmp
and
mov
ljmp
xchg
pop
popa
adc
ret
data16
cmp
shll
push
pop
out
or
ret
sub
mov
test
push
sub
xchg
fnsave
jbe
add
jge
jle
aad
xadd
mov
out
ret
fiadds
sbb
shlb
dec
ja
and
sub
mov
stos
shll
int
es
imul
sub
push
into
adc
xor
mov
sub
ss
fldl
dec
sbb
test
push
pop
xchg
mov
cmp
daa
je
and
push
lods
sbb
xor
push
dec
mov
cmp
rep
jb
lret
test
in
jle
insl
and
adc
ljmp
dec
jbe
mov
add
pop
add
jecxz
je
ss
push
ds
test
ret
test
inc
rolb
mov
adcl
xchg
cld
js
js
leave
jbe
out
fstl
mov
cmp
lock
test
adc
xchg
fwait
aas
stc
inc
sbb
out
test
dec
aad
xor
fcompl
in
push
dec
arpl
arpl
lods
ss
insb
repnz
das
nop
mov
jmp
push
push
cmp
sbb
mov
fidivrs
jl
xchg
sbbl
in
fwait
inc
push
mov
test
cwtl
shll
pop
adc
leave
repz
fcoms
outsl
cmpsb
xchg
insb
mov
repnz
xor
sbb
mov
fdivr
out
pop
aaa
pop
xchg
or
aas
aas
rclb
inc
shrb
pop
inc
mov
inc
loop
cmp
sub
inc
popf
sbb
out
pop
scas
add
jmp
ret
or
sar
inc
sub
inc
inc
jg
test
int3
lods
fldl
negb
popf
mov
and
pop
jl
mov
js
mov
test
add
stos
sub
adc
sbb
stc
repnz
outsb
sub
mov
jmp
dec
repnz
cmpb
cmc
cltd
inc
jo
adc
ret
mov
jge
dec
enter
iret
cltd
stos
xchg
data16
lods
stc
inc
loopne
push
jb
aas
add
in
je
cmp
into
jle
mov
sbb
xchg
imul
stc
into
sti
testb
dec
sti
stos
jae
cs
mov
jbe
xchg
enter
cs
sub
mov
stos
insl
sbb
xchg
fiadds
mov
lret
inc
out
jno
mov
pop
dec
lods
je
add
sahf
xchg
mov
rorb
das
dec
packsswb
xchg
pop
mov
lret
inc
pop
jge
mov
xor
cs
stc
and
xchg
lret
ja
pop
xchg
pop
push
outsb
mov
pop
aad
in
push
jl
cltd
lret
push
daa
xor
fmulp
jo
cmp
cmp
loope
fs
or
mov
insl
addr16
lcall
inc
add
jmp
in
les
ljmp
or
pop
or
cwtl
pop
mov
shll
lret
out
jae
cmpsl
shll
cwtl
leave
jb
insb
or
lods
or
shl
repz
scas
pop
mov
int
sub
les
ret
rolb
lods
cmc
cld
add
cmpsb
into
xchg
aas
xchg
sbb
mov
xchg
ss
push
sbb
push
mov
hlt
mov
mov
outsl
jns
jp
inc
lods
xor
jp
inc
cmp
pop
test
out
dec
fwait
jge
sub
xchg
jge,pn
cmp
push
pop
loopne
cmp
xchg
mov
dec
push
ljmp
push
and
sti
insb
shlb
dec
addb
mov
sbb
mov
push
ja
jl
push
out
jge
test
pop
jle
movsb
mov
sbb
inc
adc
and
lods
xchg
cmp
call
movsb
loop
shrb
fsubrp
jge
mov
pop
repnz
jnp
cmp
popa
icebp
jmp
stc
jge
rorl
in
fnstcw
clc
je
bound
mov
pop
cmp
std
pop
cmp
push
shll
hlt
push
mov
ret
jmp
mov
sub
mov
fxch
clc
ret
push
push
jp
mov
das
push
pop
stc
xorb
pop
sub
push
stos
fsubrs
shll
sbb
inc
mov
mov
or
cmp
mov
mov
cmova
mov
xchg
shl
test
fdivrp
loopne
addr16
push
xchg
rcrl
fs
adc
xor
hlt
add
pop
out
sub
in
int3
mov
shll
and
out
in
push
idiv
std
ja
je
je
iret
mov
cld
cmp
daa
stos
add
mov
pusha
inc
loop
test
pop
fwait
jbe
std
loope
xor
mov
js
jne
xchg
js
imul
cmp
enter
mov
xchg
cmp
pop
sub
push
aaa
dec
inc
dec
out
adc
jnp
pop
lcall
or
ret
push
mov
xchg
dec
cmp
cmp
cmpsl
fs
and
push
xchg
add
subl
mov
test
sub
aaa
jae
sbb
call
es
popa
cld
xor
inc
xchg
mov
adc
push
jae
xor
mov
mov
repnz
jno
mov
jo
dec
or
in
sarb
fldl
popf
cmpsb
mov
adc
xchg
xor
push
pop
mov
cltd
sti
outsl
inc
adc
cli
jb
cmp
or
dec
in
pushf
mov
bnd
sub
loopne
or
popa
mov
cmp
mov
cld
lds
push
not
or
insb
adc
jae
fs
jge
lods
jnp
jbe
mov
add
divl
push
arpl
stos
jecxz
inc
push
out
xor
aam
aaa
repz
cmp
xor
test
rolb
xor
sbb
and
sbb
xchg
mov
xchg
pop
popa
pop
outsb
fbstp
mov
ret
jmp
mov
adc
out
cli
repz
les
push
add
sti
into
push
pop
cmp
sub
add
sub
xchg
jmp
sbb
xchg
mov
inc
in
mov
and
cmpsl
lret
fwait
lock
sbb
test
cs
imul
push
jb
data16
jecxz
xor
addr16
hlt
mov
cmp
addb
je
xchg
pop
lea
loopne
cwtl
cld
add
or
test
jecxz
and
outsl
push
in
and
jmp
ret
cli
xchg
xor
mov
and
jg
mov
inc
sub
jp
lahf
out
push
sub
adc
mov
pop
cwtl
test
lcall
fadds
ret
jl
leave
repnz
shrl
inc
cmp
lahf
js
sub
lods
test
push
mov
in
xchg
andb
ljmp
and
mov
cmpsb
dec
and
inc
outsb
xchg
fnstsw
sub
push
stos
xor
xor
mov
in
dec
add
roll
ljmp
dec
jp
push
lcall
push
adc
pop
fwait
sub
push
out
mov
ret
push
das
pop
mov
adc
mov
js
aaa
psubw
jbe
movsl
sbb
cmp
fstpt
int3
inc
into
mov
or
or
test
inc
jge
sbb
mov
inc
add
pop
inc
dec
ss
push
cmc
mov
push
fimuls
lock
hlt
pop
jg
mov
in
shrl
lahf
ja
data16
jp
iret
and
adc
imulb
or
push
cld
test
popf
xchg
enter
xchg
sub
sub
push
aas
arpl
jl
xlat
mov
daa
pop
outsl
mov
mov
loope
dec
leave
mov
xorb
cwtl
insb
cltd
subl
inc
push
test
pusha
or
daa
pop
xor
data16
stos
dec
mov
cmpsl
loopne
mov
dec
hlt
and
or
shl
loop
sub
dec
push
add
push
sub
sbb
jle
push
push
dec
ja
xchg
xchg
pop
inc
aam
dec
mov
sub
mov
pop
jne
popf
lret
ljmp
lahf
test
cwtl
cs
ret
fstpt
xchg
xor
dec
xchg
sub
dec
lcall
jmp
out
test
mull
jmp
inc
aam
lea
and
pusha
dec
ficoml
movsl
test
subl
notb
sbb
ja
mov
ret
lock
imul
xchg
aam
lods
push
cs
jg
mov
scas
pop
pop
jl
vmovdqa
jle
push
icebp
jae
cmp
adc
test
outsl
mov
inc
test
pop
xchg
xchg
clc
aad
pusha
xchg
cmp
pop
not
add
inc
dec
movl
or
pop
sub
add
push
adcl
jge
mov
dec
cmp
add
dec
enter
push
pop
out
pop
loop
lcall
lea
xor
loope
pop
inc
or
pop
arpl
cmp
das
sub
scas
repz
mov
call
sub
aaa
scas
cmpsb
pop
mov
push
pushf
gs
fnsave
xor
pop
mov
cltd
inc
rorl
stos
adc
icebp
shl
sub
int3
popa
pop
mov
push
mov
add
and
fucomip
repnz
mov
outsb
jne
cmpsl
mov
jbe
jecxz
in
push
add
pop
inc
dec
inc
mov
cli
inc
add
push
inc
enter
pop
xchg
adcl
dec
outsb
push
mov
xchg
sub
dec
mov
xchg
jae
lahf
loopne
and
push
and
pop
xchg
test
scas
mov
push
idivb
jecxz
push
push
fidivrl
ret
popl
mov
xchg
push
leave
mov
in
icebp
sub
fidivrs
or
stos
and
lock
jg
ret
lods
mov
mov
test
aaa
and
push
dec
bound
je
mov
stos
movsb
jmp
or
mov
daa
pop
ds
scas
jl
add
mov
mov
sti
pop
je
daa
lods
hlt
mov
pop
push
icebp
mov
push
mov
test
lret
jns
cmc
call
dec
daa
xor
pusha
das
mov
test
insl
and
cmp
cmp
mov
aaa
xchg
sahf
testl
mov
xor
mov
rorl
out
adc
repz
pop
push
and
icebp
add
out
arpl
push
and
lret
fcompl
jp
mov
xor
pop
pop
adc
icebp
jb
les
aas
lahf
dec
mov
pop
mov
push
cmpb
xor
sub
xchg
inc
leave
or
mov
jnp
mov
push
or
cmp
icebp
dec
data16
jnp
dec
lock
jnp
sbb
inc
repnz
mov
nop
inc
sbb
mov
mov
pushf
xchg
push
cmp
mov
stos
addr16
ss
cmc
scas
push
ja
inc
xchg
sbb
aas
mov
imul
and
loop
cmp
fwait
shrl
clc
scas
jno
int
mov
add
push
or
mov
pop
push
lahf
xor
inc
out
mov
in
mov
out
in
pop
mov
pop
add
inc
jp
or
sbb
js
xchg
aad
sub
jbe
pop
iret
pop
je
adc
pop
cmp
in
sub
das
dec
aas
sbb
mov
idiv
inc
jns
call
out
in
push
or
subl
pusha
xor
cmpsb
xchg
loop
in
jmp
or
test
and
sub
jno
xor
in
adc
ret
or
xor
inc
sbb
mov
mov
jne
addr16
sbb
mov
or
int
jl
dec
repz
jge
outsb
xor
push
inc
pusha
jbe
adc
pop
cmp
and
dec
mov
pop
jle
mov
push
pop
fimull
sub
and
adc
not
jecxz
push
xor
push
loopne
adc
jns
mov
or
imull
sub
add
dec
xor
dec
out
push
in
loope
cmpsl
into
outsl
outsl
int3
std
shrb
insb
fidivs
data16
orl
mov
mov
mov
inc
xor
in
xor
insb
outsb
adc
test
add
push
jae
test
fdivp
lea
jo
mov
xchg
in
ret
sub
test
popa
insb
outsl
xor
je
xchg
test
sbb
sti
dec
mov
dec
dec
aas
xchg
and
add
test
add
outsl
cwtl
push
out
subl
mov
dec
fldenv
and
sbb
iret
jo
out
repz
add
pop
loop
hlt
out
xchg
dec
push
call
enter
nop
xchg
xchg
xor
sar
in
movsl
rclb
mov
leave
cld
add
imul
sbb
out
sub
mov
aam
or
aad
loop
push
ror
and
cwtl
add
imul
ljmp
xchg
daa
sub
or
dec
iret
imul
or
sbb
jle
pusha
mov
push
pop
xchg
mov
shrb
ret
push
int
and
lock
jnp
xchg
sub
and
movsl
ljmp
lahf
pop
cmc
push
test
pop
jg
or
dec
adc
mov
inc
mov
movsb
and
cmp
mov
dec
js
ficoml
out
push
cmp
cli
dec
dec
daa
pop
jno
and
adc
pop
xor
insb
add
jbe
daa
fwait
call
lcall
xchg
xlat
cmpsb
popf
ds
xchg
jl
lds
mov
pop
xchg
pop
leave
xor
cmp
call
out
push
popf
imul
dec
negl
xchg
or
imul
cmp
and
sbb
mov
mov
xchg
mov
mov
sti
mov
fiadds
pop
enter
pop
aaa
aaa
int
aaa
cli
or
int
dec
sub
and
mov
sbb
dec
cs
fdivl
pop
mov
leave
adc
dec
ds
pusha
into
jmp
jns
xchg
jns
sarl
mov
cli
sbb
dec
jge
mov
and
push
inc
xor
inc
mov
adc
mov
and
jo
mov
stc
sub
mov
rolb
data16
mov
sub
jb
imul
mov
push
xchg
rcll
into
cmc
subl
mov
and
test
daa
insb
imul
ret
jmp
sti
or
dec
lods
ds
hlt
out
sub
add
jnp
mov
mov
insb
pop
dec
les
out
jge
mov
das
ds
inc
or
mov
adc
dec
or
push
xlat
test
stos
jge
stc
mov
jbe
cmp
xchg
in
dec
jae
or
pop
shlb
push
in
dec
jmp
shlb
in
stos
je
in
cmp
dec
mov
inc
ds
imul
xor
jge
lret
mov
jne
and
int
cwtl
mov
xchg
or
dec
pop
mov
mov
pop
enter
ljmp
popa
jns
add
fsts
or
xchg
mov
xor
jns
mov
cli
pop
and
loop
jne
ja
jmp
fucomp
out
into
sbb
sbbl
cwtl
dec
mov
inc
mov
pop
mov
lods
sbb
pop
push
pop
dec
mov
icebp
lea
cmp
sub
push
arpl
lret
ja
jle
ss
xchg
xorb
or
ficoms
mov
call
adc
mov
adc
mov
leave
mov
xlat
int3
movsl
xor
mov
dec
push
mov
sub
out
loop
adc
sub
sbb
test
mov
outsl
xor
dec
loope
pop
ljmp
negl
mov
pop
mov
push
jnp
fisubl
pop
in
pop
cmpsb
out
xor
pushf
js
mov
dec
add
rcl
ljmp
mov
outsl
outsb
push
aam
sub
repnz
jecxz
xchg
mov
push
lret
xchg
add
mov
pop
les
jg
adc
sar
mov
popa
lock
cmp
pushf
xchg
ss
hlt
in
dec
pop
clc
push
push
jp
jg
or
xchg
out
imul
mov
sti
push
add
leave
cwtl
cmpsl
xorb
sbb
dec
pop
insb
je
or
xor
cmp
xor
jmp
jnp
cmpsb
push
dec
sub
test
xchg
pop
subb
shl
adc
lar
out
stos
xlat
mov
adc
sbb
dec
es
aaa
sub
inc
mov
out
adc
pop
fadds
adc
rorb
subb
jl
sub
fs
push
clc
es
dec
push
enter
sbb
pop
gs
cld
mov
cli
fcmovnu
jp
iret
mov
clc
mov
notl
mov
mov
les
je
aaa
mov
inc
bound
and
xor
shrl
arpl
and
adc
push
rcl
decb
push
sahf
cltd
adc
jge
imul
xchg
out
jno
xor
lret
dec
mov
cs
loope
int3
mulb
imul
lret
jmp
sar
call
imul
mov
out
mov
add
pop
cmpsl
xchg
outsl
inc
add
xchg
push
test
jg
xor
dec
mov
arpl
gs
pop
and
push
je
jp
add
out
test
jns
adc
call
ret
jge
scas
movsl
inc
lds
jecxz
cmpb
repz
mov
dec
cwtl
sbb
nop
std
clc
addr16
into
and
int3
sub
mov
pop
mov
or
dec
cld
stc
in
add
out
and
pop
pop
add
and
negl
ficoms
dec
or
add
imul
mov
mov
jae
into
js
mov
mov
adc
ret
cwtl
rcll
fs
notb
lret
cli
cmp
das
mov
insl
add
cmpsl
adc
sar
loopne
xor
cli
pop
adc
lret
jmp
cli
fcoms
movsl
adc
mov
sbb
cs
addr16
xor
push
outsb
in
test
lahf
mov
movsl
jae
dec
push
adc
cmp
mov
add
inc
ja
pop
iret
inc
dec
xor
repnz
adc
ficompl
imul
pop
stos
dec
das
push
mov
xor
ja
jl
dec
sbbl
xchg
or
js
faddl
insl
cmp
xchg
outsb
iret
adc
mov
adc
jge
mov
jbe
and
mov
jno
pop
mov
adcb
xchg
shlb
rorb
adc
push
xchg
inc
jle
push
mov
cmpsl
jg
push
sbb
mov
xor
ss
add
xchg
inc
push
lods
test
movsl
mov
mov
out
pop
call
std
mov
sbb
pop
in
add
negl
mov
movsb
lock
sub
mov
lret
push
fmulp
std
or
cmp
dec
jle
sbb
xchg
in
out
push
pusha
mov
inc
ljmp
cwtl
icebp
sub
cld
enter
fs
pop
mov
mov
movsl
cltd
inc
xchg
dec
pop
mov
xchg
or
sbb
sub
mov
imul
hlt
cmpsl
fs
push
fildl
stos
test
idivl
addb
rcrl
push
stc
jg
mov
or
int
add
ret
jns
sub
jns
es
cmp
jnp
sub
int
addr16
inc
es
test
mov
arpl
cmpsb
out
inc
sub
pop
fistps
xchg
out
mov
mov
cmp
dec
mov
out
sub
mov
les
xchg
pop
sub
adc
jge
dec
loope
fs
xor
pushf
xchg
scas
jl
cmc
dec
cld
adc
insb
mov
out
mov
in
inc
sar
mov
icebp
sbb
mov
inc
xchg
dec
xor
into
xchg
leave
nop
cli
movb
mov
or
push
out
mov
test
dec
push
arpl
jmp
imul
lods
lret
and
mov
and
outsl
jno
push
psrad
enter
rcrw
and
dec
push
mov
adc
inc
popa
cmpsb
call
mov
mov
sar
aaa
fsubs
jmp
inc
xchg
mov
dec
jmp
push
pop
or
jbe
dec
add
cld
sub
sub
push
push
push
jmp
sbb
imul
add
mov
sbbl
sub
push
bound
xchg
hlt
cmc
clc
stos
cmp
test
mov
arpl
outsb
inc
xchg
push
pop
mov
outsl
push
out
jb
stc
cld
es
mov
cmc
cli
mov
repz
ljmp
and
cmc
and
cmpsb
jne
and
jnp
pop
jb
dec
loopne
scas
mov
stos
lret
iret
rol
ret
loop
mov
stos
stc
mov
mov
or
loop
dec
mov
dec
in
push
scas
jns
jne
adc
sti
movsb
mov
imul
adc
xchg
mov
shll
fnstsw
sarb
and
add
test
mulb
arpl
pop
jecxz
dec
sub
xor
adc
pop
call
inc
jecxz
and
push
fcmovbe
or
add
add
dec
jb
leave
xchg
mov
call
insb
xor
pop
iret
sub
push
and
in
jnp
xor
lret
pop
ja
and
out
outsb
jecxz
std
mov
arpl
cli
dec
cmp
sub
rorl
push
sub
lods
fucomip
pop
mov
xlat
dec
loop
push
push
nop
adc
push
mov
sub
ficoml
cmpsl
inc
push
push
cmp
mov
insl
inc
push
test
fiadds
jle
cmp
adcl
cmpsl
ja
test
mov
or
imul
call
add
scas
loope
insb
popa
inc
sbb
dec
cmc
int3
mov
test
cmc
push
adc
push
or
loopne
out
sub
out
dec
pop
ret
ror
ss
scas
jo
int
aam
mov
adc
push
out
push
add
std
xchg
add
inc
sti
gs
push
xor
mov
test
mov
sbb
inc
sub
xchg
in
sbb
jle
lahf
popf
jecxz
add
imul
mov
push
mov
gs
jns
scas
add
mov
popa
mov
movsb
je
lods
data16
imul
bound
sub
xchg
aaa
xor
dec
push
dec
orl
or
cli
je
in
leave
js
aad
popa
mov
stos
sahf
sbb
enter
pop
fistl
xor
lahf
rorl
adc
adc
inc
js
mov
push
dec
ds
jmp
movb
shl
xchg
das
cwtl
adc
mov
ljmp
test
pop
push
jnp
push
bound
movsb
enter
loop
pop
sahf
push
cmp
loopne
shll
inc
xchg
cltd
dec
xchg
ljmp
inc
cmp
fst
cs
data16
js
inc
sub
cmp
pop
add
hlt
push
push
fdivl
jge
ds
xor
lret
out
inc
dec
push
xchg
mov
sub
cld
pop
out
fwait
xchg
fstpt
sbb
mov
popa
pop
leave
jne
imul
xor
imul
sbb
dec
jge
aas
repz
mov
xchg
ljmp
mov
mov
jecxz
adcl
cld
imul
aam
hlt
sbb
adc
lahf
mov
jg
sbb
cmp
dec
mov
dec
fdivrl
push
icebp
dec
and
shlb
or
xchg
imul
cli
imul
pop
iret
ret
sbb
push
adcl
sbbl
or
add
ror
mov
cs
movl
aaa
insb
sbb
mov
sub
adc
lods
mov
cltd
shlb
jmp
cmp
cmp
sbb
sahf
sub
das
jle
bound
and
in
movq
cmpsl
sub
rorb
push
adc
pop
fcmovnu
mov
cld
adc
pop
gs
stos
cltd
push
jbe
mov
sbb
or
xchg
mov
push
jo
cmp
xor
ja
loop
add
addr16
or
mov
inc
push
outsl
pop
repz
jo
js
mov
loopne
xchg
sub
push
mov
xor
jg
out
shl
sub
int
popa
or
cmp
inc
adc
mov
mov
mov
xchg
in
lret
arpl
cld
pop
push
dec
pop
jnp
lcall
xor
lds
leave
shll
stos
cmp
jno
lret
inc
ljmp
add
xchg
les
cmp
xor
fstp
mov
pop
je
icebp
ljmp
jge
ja
loope
movsl
xlat
cli
sub
call
xchg
sbb
into
shll
and
gs
mov
pop
fs
push
dec
in
xor
xchg
movq
cmpsb
pop
pop
insl
pop
outsb
data16
outsb
test
in
jg
sub
out
sbb
lods
pop
sbb
push
xchg
sub
std
jmp
pop
fsubl
hlt
dec
or
clc
sbb
insb
mov
cmpsl
xlat
mov
add
jmp
jmp
jns
in
mov
subl
imul
je
jo
jb
push
je
or
mov
add
sub
or
loopne
adc
stos
shll
adc
scas
sti
cld
stos
orb
fildl
stc
fadds
lock
or
jge
dec
insl
lds
and
xchg
pushf
xlat
js
and
aas
repz
mov
pop
or
iret
xor
add
mov
sbb
imul
add
mov
popa
sahf
out
out
shl
dec
ja
xchg
iret
add
sub
sub
sbb
out
xchg
pop
add
jno
jno
iret
mov
add
push
lahf
xchg
or
jne
dec
imul
pusha
div
mov
aas
push
add
mov
push
outsb
push
xchg
and
ds
mov
cmpsb
cmpsl
xor
xlat
dec
jg
sbbl
sbb
add
mov
and
jno
pusha
ss
mov
dec
mov
and
inc
loopne
mov
mov
subl
inc
movsb
aam
cmc
add
sub
and
or
add
or
test
adc
int3
mov
and
mov
push
out
sbb
es
inc
aas
jecxz
xlat
fwait
xchg
mov
xchg
mov
push
or
xor
add
in
push
cmp
push
and
testl
cli
xchg
fcmovnu
cmp
sbb
shl
popa
and
mov
and
lahf
push
jge
in
mov
ret
js
mov
imul
jmp
adc
mov
pop
ret
and
and
jae
inc
sbb
push
mov
cwtl
pop
jbe
lcall
dec
lea
mov
mov
add
cmpsl
mov
shll
add
and
lods
and
xor
xchg
js
fdivs
xor
mov
mov
jle
mov
or
outsl
jecxz
cmp
fs
dec
sbb
bndldx
cmp
imulb
sub
aaa
push
xchg
sbb
mov
xor
mov
xchg
mov
sub
lcall
aas
cmc
stos
lret
int
sub
adc
xchg
sarl
pop
dec
jbe
add
jnp
and
xor
fldcw
xchg
dec
stos
mov
and
xor
mov
cmc
mov
add
and
jnp
dec
cmp
jle
mov
mov
rorb
jb
dec
shrb
mov
nop
xchg
push
iret
popa
push
out
xchg
aad
cmp
push
hlt
mov
fidivrs
mov
mov
xchg
test
pop
sbb
int3
lods
mov
xchg
repz
xor
xchg
cs
jno
sti
pop
dec
mov
iret
cmpsb
faddl
push
movsb
imul
xchg
adc
dec
push
sbb
outsb
or
cmp
scas
or
pushf
insl
out
lds
cs
enter
cmc
mov
adc
ror
pop
outsl
mov
push
sbb
pop
roll
pusha
cmp
aam
push
repnz
cmpsb
jp
xlat
lcall
cltd
xchg
push
fstpl
inc
adc
pop
and
addb
jns
insl
loope
mov
pushf
pop
js
testl
std
out
clc
pop
gs
mov
lret
sbb
jb
cmp
or
pop
fsubrl
insb
cmc
lahf
xchg
call
jbe
pusha
lds
lds
add
inc
or
rolb
cmp
arpl
fwait
lahf
aad
into
testb
pop
jno
out
sbb
jno
adc
cmpsb
cmpsl
test
addr16
imul
int
lret
aas
mov
xchg
mov
fbstp
stos
imul
pusha
in
int
pop
pop
mov
inc
fcom
jns
ljmp
lods
bnd
push
icebp
mov
aam
std
adc
jmp
shlb
js
dec
fdivs
pop
clc
jl
sub
jae
arpl
cmp
jno
and
lods
lock
inc
iret
sub
sub
adc
mov
jecxz
and
mov
fisubrs
mov
lock
sbb
and
fsub
sbb
loop
int
mov
scas
call
stos
sub
stos
ja
and
out
xor
push
sub
test
add
cmpsl
in
movsb
mov
pop
push
aam
leave
cmp
mov
xor
and
add
out
je
or
dec
decl
lret
dec
orl
pop
inc
mov
push
mov
and
mov
cmp
dec
rcr
push
out
imul
insl
jo
mov
loop
sbb
rcll
ds
mov
inc
sbb
jecxz
pop
mov
inc
adc
sbb
cld
pop
pop
xchg
in
or
mov
shrl
pop
dec
loope
or
scas
lock
jecxz
jnp
xchg
bound
dec
clc
pop
ja
lret
adc
stos
pop
cmpsb
pop
in
dec
push
lock
adcb
scas
cmpb
jge
mov
mov
repnz
xor
adc
pop
sbb
sar
jbe
aaa
and
lret
mov
rorl
imul
mov
sbb
js
jne
adc
dec
cltd
rcr
push
mov
add
lea
or
shlb
pusha
fwait
push
xlat
and
popl
ret
lret
fsub
jge
fisttpll
lods
and
inc
pop
je
mov
xchg
pushf
mov
mov
xor
loopne
xor
fadd
xorb
pop
loop
add
loopne
jnp
iret
jecxz
push
fwait
xchg
mov
shlb
adc
dec
push
fdivrp
bound
pop
sub
sub
xor
imul
test
and
and
or
push
mov
inc
call
xor
dec
outsl
adc
lock
jmp
adc
dec
and
mov
lret
out
jg
shr
fcoml
dec
nop
pop
dec
and
scas
in
nop
pop
iret
pop
mov
mov
adc
jecxz
add
outsb
cmpsl
daa
lea
pop
movsl
in
xchg
jge
bound
repz
fwait
call
ror
adc
pop
dec
or
je
dec
add
jnp
xchg
rorl
xchg
mov
jno
pop
xchg
mov
sarb
imul
and
into
daa
cmp
dec
scas
pop
xor
mov
pop
jle
mov
repnz
repnz
arpl
aad
pop
mov
stc
aam
sub
stc
dec
xor
jg
dec
push
sti
dec
jne
cmp
add
push
mov
cli
jp
ret
addl
cmp
pop
sub
inc
lcall
je
shrb
enter
push
das
and
xor
ss
lock
adc
cmp
ret
addr16
mov
mov
and
push
xorb
pop
mov
sub
lock
out
out
in
jnp
pop
gs
outsb
push
rclb
push
sbb
xlat
pop
jl
ss
mov
gs
dec
xor
ret
mov
and
jnp
loopne
push
adc
pop
notb
stc
aam
cli
insl
fwait
stos
sub
and
ds
dec
pop
addr16
adc
cmp
idivb
arpl
mov
mov
sub
out
shrl
xlat
inc
mov
push
inc
and
out
push
push
int
xchg
ret
aaa
dec
add
mov
cmp
jne
push
test
fnsave
push
call
ss
or
test
lret
cwtl
clc
test
jb
fwait
outsb
mov
mov
test
cli
cmp
xor
xor
inc
ffreep
rclb
repz
xor
in
xlat
push
out
fldcw
jns
iret
movsb
int3
inc
into
dec
mov
aam
xor
jmp
lret
jecxz
lods
test
sbb
and
xchg
in
fdivrs
and
js
push
test
insl
repnz
mov
gs
hlt
in
xchg
ss
inc
psraw
les
js
jns
clc
or
fisttps
cmp
rorb
iret
testb
ffreep
push
push
lods
inc
loopne
cmp
js
xor
pop
mov
add
or
sahf
sub
lods
push
fstpt
and
fnstsw
leave
mov
jle
cli
hlt
mov
mov
inc
mov
inc
lods
add
mov
iret
dec
sti
xchg
sub
xor
loop
pop
daa
inc
aam
daa
pop
mov
sbb
pop
cld
out
int3
mov
dec
push
fistpll
and
fcoms
dec
and
iret
pop
andps
push
add
popa
dec
xchg
pop
jnp
jecxz
cmpsb
cli
hlt
pop
push
icebp
cmpsb
push
fcmovnu
outsl
decl
mov
pop
mov
fldt
add
stc
mov
int
xchg
movsb
cli
sub
cltd
dec
movl
fisubrs
sahf
jle
cmp
mul
mov
or
xor
sbb
mov
aam
jb
scas
jecxz
test
cmc
jle
repz
rcl
xor
in
stos
jae
aam
mov
pop
sbb
shrb
sub
stc
sub
les
mov
pop
leave
sti
mov
xor
decb
cltd
bound
fldcw
dec
sbb
xor
imul
shrb
insb
push
mov
cltd
cmp
sub
outsl
pop
insl
xchg
pop
lock
dec
mov
popa
inc
jp
pop
sbb
xchg
inc
test
popa
fucomip
inc
or
test
popa
popf
inc
arpl
mov
outsb
push
inc
dec
test
dec
inc
in
scas
icebp
mov
and
cmp
sbb
hlt
dec
mov
mov
mov
mov
pop
xchg
xchg
xchg
rcr
shll
call
into
cmp
fstpl
mov
sbb
jb
jne
add
shlb
add
in
fwait
add
lds
sarl
fnsave
repnz
mov
dec
push
jge
in
ffreep
mov
int
fnstcw
cmpl
push
push
jecxz
lcall
ds
xor
into
cmp
mov
push
or
loop
inc
sti
pop
jno
les
adc
jl
subb
clc
push
enter
xor
cmp
xor
or
int
imul
repnz
sahf
jecxz
sbb
mov
and
call
lea
xor
push
ret
cmp
fnclex
pop
cs
repnz
das
mov
int
pop
dec
sbb
test
mov
dec
mov
nop
ljmp
mov
in
testb
jo
pop
aas
gs
or
and
dec
adc
xor
mov
xchg
xchg
mov
addr16
pop
aas
call
push
sbb
in
iret
pop
aaa
adc
jg
or
sti
in
scas
fistpll
aad
add
insb
cmp
into
or
aaa
add
xorb
ss
adc
iret
outsl
pop
fs
std
mov
fistpl
xlat
xorb
sub
out
daa
pop
inc
es
add
cmpsl
mov
gs
pop
jle
push
test
in
adc
push
or
lret
incb
jnp
xor
jbe
xchg
cmp
popa
adc
jb
pop
outsb
rcr
or
pop
out
dec
cwtl
popa
add
ss
stos
jle
xchg
cmpl
pop
test
loop
rcll
inc
outsb
scas
fbld
push
jnp
call
stos
mov
pop
sub
or
popf
lret
dec
jmp
add
push
dec
fnstsw
pop
daa
das
lods
inc
add
sti
pop
imulb
lahf
movsb
push
dec
enter
jb
testb
inc
insb
mov
jmp
xor
push
mov
cltd
loop
sub
jl
and
add
or
jns
clc
out
adc
mov
lock
xor
enter
xor
jecxz
inc
outsl
leave
adc
ror
sbb
dec
xchg
mov
jo
lds
ljmp
repz
icebp
movsl
inc
jne
pop
or
xchg
mov
fisttpll
or
dec
xchg
ds
pop
dec
ljmp
loop
lret
xor
add
movsb
js
test
daa
jae
mov
in
setg
pop
xor
push
imul
outsl
xor
lods
push
add
ret
or
lret
mov
into
sysret
dec
add
lea
mov
loopne
insl
adc
dec
stos
pop
decl
push
mov
sti
jbe
leave
lcall
in
inc
aam
popl
jp
scas
mov
clc
repnz
jle
ds
test
jb
movsb
mov
in
pop
xor
or
cmc
cvtdq2ps
mov
fwait
pop
ljmp
aas
pop
lds
add
shll
fisubrs
decl
shlb
fisubl
enter
push
pop
mov
sub
bndldx
adc
mov
mov
xchg
mov
jge
out
jl
adc
adcl
cmp
call
sub
mov
or
push
dec
push
mov
push
jb
lds
xor
andb
and
xchg
sbb
outsb
repz
inc
mov
test
ljmp
cmp
ljmp
outsl
sub
imul
or
mov
outsl
jge
fs
adc
push
shr
mov
cs
push
add
mov
dec
repnz
push
fadds
push
pushf
xor
inc
add
clc
mov
add
mov
jbe
sbb
xchg
shrl
call
jno
adc
jns
addl
add
dec
push
imul
push
dec
fiadds
aad
mov
dec
push
lret
mov
xchg
cmp
xchg
notl
cmc
fsub
cmp
adc
mov
loope
fwait
inc
jo
lods
mov
inc
sbb
pop
pop
fistl
pop
xor
or
mov
sti
adc
insb
in
cmp
mov
out
jg
pop
and
bound
mov
inc
mov
cltd
gs
pusha
aas
and
repnz
insl
in
aas
sbb
fidivs
mov
lock
rcrl
data16
inc
into
mov
cmpsl
in
xchg
jns
mov
leave
inc
aaa
push
sarb
pop
js
cs
adc
cmp
lea
int3
mov
inc
sbb
dec
popf
daa
enter
addl
xchg
xor
test
mov
rcr
cmp
out
dec
sub
ss
cmp
mov
in
lods
ret
dec
mov
cld
or
movl
rorb
sub
ficoms
lret
imul
and
addb
daa
pop
xchg
clc
adc
sub
xor
in
or
fcoms
mov
rcrb
mov
fwait
out
xor
cmp
sti
outsb
push
sub
add
ret
addr16
sub
cmpsl
and
rol
testb
gs
call
sub
cmp
or
lods
popa
roll
push
xlat
or
stos
lea
xor
outsl
mov
add
mov
dec
xchg
fld
dec
cmp
mov
mov
outsb
sbb
inc
push
sarl
push
iret
cmp
cmp
pusha
jns
mov
xor
inc
lea
inc
loopne
in
rorb
mov
cmc
ret
je
data16
jecxz
jecxz
mov
cmpsb
sahf
jge
test
arpl
arpl
jg
dec
inc
push
fistpl
cmp
mov
adc
mov
push
imulb
sub
outsb
and
cs
mov
sbb
pop
ret
ret
or
add
das
fidivrl
xor
xor
in
cwtl
add
xor
inc
fwait
adc
dec
idiv
mov
dec
inc
mov
je
xor
fistl
fldl
pop
sbb
dec
dec
stc
aaa
mov
ljmp
sub
sbb
pop
sbb
xor
inc
cmp
fwait
repz
ljmp
xchg
fprem
sbb
pop
sbb
jo
xchg
and
jne
mov
daa
mov
cmp
xchg
pushaw
mov
adc
pop
in
addr16
rorb
int
icebp
and
mov
sarl
push
lods
add
lahf
mov
stos
out
popa
into
std
rcl
cld
add
inc
pop
pop
sti
in
test
inc
or
sarb
xor
sub
daa
push
jl
push
and
xor
test
mov
adc
mov
movsl
ficomps
mov
insb
push
mov
out
lret
gs
lret
out
pop
mov
lret
dec
aam
dec
imul
inc
mov
and
scas
insb
cmpsb
sbb
xchg
mov
cld
std
mov
cmp
iret
cmp
int
in
xor
shlb
xor
pop
ret
sub
pop
dec
stc
repz
imul
mov
inc
stos
xor
jne
jl
inc
fs
jmp
mov
movq
ljmp
jnp
cli
repnz
adc
adcl
push
inc
xor
cltd
dec
out
cmpsl
cmp
push
and
jno
add
pushf
and
loope
mov
orb
adc
cli
orl
mov
pop
lods
imulb
dec
jbe
in
icebp
dec
ljmp
fdivrl
cmp
dec
mov
mov
pop
and
inc
adc
xor
cmp
test
in
xor
ret
xor
xor
out
fsubr
jg
adc
jecxz
adc
scas
push
mov
out
mov
imul
aas
mov
stc
and
test
inc
add
inc
mov
scas
jecxz
cmpsl
dec
cs
mov
or
and
sub
ret
ss
stc
lds
das
sbb
in
mov
jge
je
out
add
fimuls
call
ja
in
sbb
jb,pt
jne
mov
bound
add
lods
loope
push
xchg
add
pop
orb
jno
jbe
adcb
and
mov
inc
mov
daa
movsb
mov
sbb
push
cs
repnz
mov
sub
std
psllq
adc
mov
and
repnz
out
das
and
xchg
lahf
sti
add
ficomps
or
push
push
lds
call
aaa
andl
mov
push
mov
repz
addl
ret
shll
jecxz
jle
dec
dec
shll
jg
bound
mov
xor
lret
dec
xor
add
scas
jns
addr16
out
ds
cmpsb
mov
mov
out
ret
outsb
stos
mov
lahf
mov
adc
xorl
movb
insl
sub
add
mov
jmp
out
adc
fcompl
out
arpl
push
sub
cmpsl
popa
dec
daa
pop
in
std
popa
pop
jmp
loopne
in
push
mov
call
fcom
mov
arpl
addr16
sahf
pop
sbb
xchg
dec
in
aaa
loopne
sub
out
sbb
test
movsb
in
inc
push
sbb
into
push
mov
and
dec
dec
fwait
dec
stos
je
outsl
mov
add
inc
sub
icebp
dec
jbe
inc
pop
and
cltd
movsb
aad
hlt
imul
mov
sub
sbb
mov
out
and
popf
mov
stos
push
and
adc
ficoml
imul
sub
pop
sahf
adc
inc
pop
fisttps
jo
dec
les
jno
fidivrl
jle
jns
lcall
int3
add
sub
cmp
ret
daa
outsb
je
cmp
adc
mov
mov
outsl
test
mov
stos
adc
lea
neg
dec
mov
shrb
test
into
pop
or
and
or
xor
jns
adc
push
push
mov
call
pop
dec
ret
xor
jle
inc
cmp
cmp
popa
sbb
lods
ja
cmpsl
dec
rclb
enter
pop
mov
cmp
scas
push
push
loope
mov
sub
loope
test
pop
test
adc
jb
mov
imul
test
sub
out
mov
push
stc
cwtl
es
mov
mov
lret
and
jbe
mov
xorl
add
dec
fcoms
out
dec
and
mov
sbb
mov
hlt
fwait
push
cmp
dec
loop
mov
xchg
jb
pushf
pushf
sub
lock
scas
icebp
es
movsb
mov
arpl
rorb
shrb
call
loop
aam
into
xor
nop
js
leave
addr16
and
popl
call
out
pop
insb
aam
push
ret
lods
loop
dec
sub
pusha
lock
das
movsb
cmp
outsb
ds
pop
nop
pop
pusha
dec
mov
push
fnsave
push
cli
mov
push
push
sbb
sub
dec
mov
loope
test
sbb
rolb
dec
out
push
pop
push
popa
aas
mov
dec
das
mov
sub
outsb
out
jmp
dec
out
push
cmp
stc
mov
pop
addr16
lock
insb
inc
dec
xchg
xorl
jg
arpl
jne
scas
in
xchg
pop
ret
cmpsb
in
mov
int3
jle
xchg
cmp
sahf
loop
fiadds
xchg
fstpl
mov
subl
mov
add
divb
outsl
sub
pop
jbe
pop
and
dec
notl
sub
mov
mov
or
divl
inc
fisttpl
ja
repnz
mov
pusha
push
decb
sbb
rcr
arpl
dec
mov
lahf
sub
mov
mov
repz
push
cmp
and
icebp
js
push
jbe
loopne
inc
dec
sub
aad
push
int
mov
fs
or
push
int3
mov
cmp
mov
adc
xor
inc
or
lods
xchg
sub
cmpsl
fldenv
out
cmc
mov
js
dec
xorb
pop
mov
jmp
lret
ror
and
cli
push
pop
xor
pop
pop
fwait
or
jne
sub
fwait
mov
ja
cmp
sub
or
push
ja
call
scas
arpl
sub
int
or
subb
lret
and
push
repz
ja
es
pusha
jo
dec
lahf
mov
gs
ds
or
fwait
or
push
inc
outsb
test
outsb
or
mov
test
cltd
jns
pop
loop
call
out
adc
and
out
ja
lea
cmp
das
mov
mov
xor
add
mov
push
cltd
or
pop
adc
jmp
out
scas
outsl
pop
sub
xchg
push
sub
sub
in
lret
sbbb
cmc
inc
pop
jb
mov
xchg
flds
in
xor
adc
mov
fstpl
pop
mov
adc
jle
icebp
push
mov
fcmovb
pop
mov
inc
and
outsb
sub
cli
push
mov
and
aam
cmp
jle
xor
cmpsl
inc
pop
cmpb
mov
mov
leave
dec
call
shl
cli
loop
jbe
jge
or
lods
push
cmp
pop
aas
in
and
dec
inc
testl
jnp
or
loop
popf
jbe
or
or
loopne
addb
mov
fld
arpl
fistl
incb
rcl
cs
jecxz
clc
pop
push
pop
cld
testb
xor
push
mov
pop
pop
inc
push
inc
push
imul
inc
imul
daa
popa
test
jae
mov
repz
push
imul
pop
sarb
scas
mov
add
in
int3
jnp
add
mov
inc
fistl
sbbl
movsb
mov
shlb
mov
das
or
ret
sbb
mov
je
fdivrp
cltd
test
xchg
add
sub
xchg
pop
cs
mov
cmp
adc
xor
add
hlt
aad
or
outsb
fisubl
mov
arpl
fcmove
pop
push
leave
and
jecxz
mov
test
mov
adc
add
stos
mov
xchg
shl
push
and
jbe
mov
xor
lea
mov
push
cltd
lahf
mov
jns
or
outsb
sbb
push
hlt
aas
or
jge
dec
dec
idivb
sub
jecxz
xchg
cmp
in
and
dec
lret
sbb
sub
and
leave
scas
xor
leave
push
lods
loop
loopne
mov
shrl
cltd
popf
cmpsl
push
jle,pn
ljmp
std
pop
lret
loope
pop
dec
icebp
jg
mov
lret
je,pn
fsubs
lahf
sbb
pop
movsl
add
lods
arpl
je
movsb
adc
lods
cmp
lea
jne
jae
mov
mov
add
sbb
and
pop
andl
or
enter
jl
push
mov
shrl
aas
in
aas
jnp
movsl
pop
push
lods
stos
out
sub
fucom
or
inc
sbb
xor
or
nop
cmpl
cmp
imul
outsb
mov
and
dec
push
ja
pop
loopne
jae
mov
jo
arpl
imul
lds
js
test
or
sub
cwtl
jae
fstl
int
jne
inc
or
xor
inc
in
adc
or
adc
aad
xor
aam
pop
and
push
ljmp
cmp
mov
sub
mulb
int3
adc
inc
xchg
imul
mov
or
jns
push
and
xchg
xchg
sbb
sub
int3
add
cmp
sbb
inc
inc
jge
mov
leave
scas
cmp
jne
add
fdivl
popf
aad
movsb
xchg
lods
cmpsb
push
dec
les
jg
xchg
adc
int3
jle
and
add
inc
sub
jne
std
xor
and
stos
repnz
dec
fs
push
and
je
mov
xchg
aam
enter
jne
ret
shll
mov
cmpsb
mov
pusha
adc
mov
dec
add
jle
inc
sub
cmp
out
es
arpl
loopne
shlb
or
stos
mov
sbb
push
mov
lret
rorl
jecxz
mov
daa
out
sub
into
sbb
in
cmpsl
push
cwtl
xchg
std
push
rcl
jecxz
out
xchg
sub
mov
dec
adcb
push
xchg
push
inc
dec
cmc
jb
push
inc
andl
icebp
and
lods
dec
pop
sbb
loop
xchg
dec
jle
xchg
das
test
xor
hlt
in
imul
jg
dec
mov
in
sbb
enter
loope
mov
in
mov
mov
ljmp
jmp
lret
stos
xor
cmc
repnz
test
bt
mov
sub
int
inc
xlat
cs
insb
mov
scas
adc
mov
pop
lret
lods
and
cmp
sub
lcall
jmp
jno
lea
pxor
movsb
sub
mov
fisubrs
push
data16
dec
popf
shlb
add
addr16
loopne
pop
lock
adc
aad
pop
leave
sub
mov
xor
jle
es
mov
xor
push
jne
push
add
stos
xchg
sahf
cld
rol
pop
incl
je
aas
lods
jecxz
pop
loopne
cmp
adc
cmp
mov
mov
xchg
jge
mov
mov
push
in
lock
nop
and
daa
mov
shll
push
jne
in
inc
fisttpl
pop
mov
stos
xchg
xor
cmpsb
bound
xchg
rep
mov
in
xor
mov
sahf
sbbb
mov
xchg
js
ret
pop
bound
call
addr16
push
repz
or
push
and
cmp
inc
pop
cmpsb
mov
push
hlt
inc
lods
cltd
out
fmuls
popf
cmp
inc
sahf
add
in
stc
lret
pop
mov
rorb
xchg
lods
cmp
sbb
das
out
sbb
jp
inc
iret
imull
xor
ret
dec
je
jecxz
sub
aas
xor
lahf
hlt
inc
ja
xor
mov
test
dec
add
inc
fimuls
sbb
jp
fs
add
jmp
lret
push
adc
mov
jae
sub
jno
dec
or
movsb
loopne
push
push
insl
shl
pop
pop
subl
pop
and
xor
mov
or
cli
jg
jmp
and
lea
imul
adc
das
movsl
push
inc
dec
cmp
pop
push
mov
cmp
mov
mov
push
lods
dec
xchg
orl
inc
xchg
fimuls
push
xchg
xchg
push
xor
or
mov
ds
adc
adc
cmp
xchg
mov
inc
push
cmp
jmp
sub
es
mov
and
pop
mov
pop
loop
sub
adc
pop
fdivrs
xor
fadd
ss
mov
std
push
test
sar
mov
popf
rclb
xchg
mov
sub
adc
les
dec
inc
scas
fdivrl
int
fisubrs
pop
loop
adc
outsl
test
fiaddl
push
push
ss
ret
call
or
push
shll
mov
ret
dec
divl
clc
or
pushf
mov
test
int
jno
cs
fs
mov
adc
jae
mov
mov
mov
andl
inc
sbb
cli
arpl
hlt
dec
movb
and
shll
mov
hlt
sbb
into
setno
dec
sub
popf
add
enter
aas
dec
sbb
fcomp
pop
xor
ss
sub
mov
loope
fisttps
test
push
xchg
sbb
push
xchg
movq
pop
fdiv
loopne
inc
or
cmpsl
lds
adc
cmp
mov
push
je
hlt
aam
daa
insl
test
mov
mov
loope
push
inc
xor
roll
rcll
scas
inc
jb
shlb
outsb
js
loopne
cs
dec
xor
mov
out
ret
inc
mov
dec
sub
xchg
jecxz
mov
pop
mov
jl
adc
rclb
cmp
xchg
pop
add
push
mov
dec
or
xchg
pop
jmp
aam
out
cmp
ljmp
fnsave
and
fcmovnbe
sub
push
shr
ss
repnz
outsb
pop
adc
adc
pusha
lods
ret
jle
lea
cmp
setp
pop
stc
sbb
mov
stc
or
dec
or
sub
sub
out
inc
rcll
xlat
mov
jmp
jns
or
mov
mov
lret
int
adc
stos
xor
cmp
push
push
repnz
mov
cmp
clc
jae
xor
jl
sub
push
push
mov
icebp
push
cltd
xor
adc
pop
mov
sub
add
data16
cmc
gs
dec
shlb
out
and
jno
jbe
mov
xchg
mov
jecxz
icebp
mov
mov
or
lahf
xor
xchg
pop
jns
push
ljmp
push
test
cmpsl
pop
push
loope
movsb
test
addr16
sub
or
pop
cmp
sahf
sub
adc
jl
fdivrs
inc
jo
inc
jbe
mov
out
ret
addb
mov
mov
or
sti
xlat
xchg
insl
xor
rclb
sar
pop
jge
cwtl
cltd
shll
add
and
leave
dec
lock
sbbb
pop
cmp
pop
sahf
pop
xchg
outsb
mov
in
mov
xchg
dec
dec
imul
aas
test
lock
mov
aas
aad
popf
lock
inc
push
rolb
pop
adc
sbb
mov
add
sbb
pop
outsb
and
scas
movsb
jg
mov
jmp
cwtl
inc
push
loop
imul
adc
mov
in
in
testl
insl
lret
out
insb
jno
and
fnstenv
xchg
or
mov
std
inc
mov
adc
jl
push
cmc
mov
out
jge
orl
lcall
adc
mov
js
jmp
in
leavew
jecxz
push
push
push
hlt
aaa
aad
andl
int3
js
xor
cmpsb
pop
sub
dec
mov
mov
push
movsl
add
mov
cs
sub
movsb
add
fimull
push
sub
lea
pop
decb
jae
movsb
mov
add
jne
nop
in
cld
lock
mov
faddl
shrl
and
sbb
leave
negb
pushf
pushf
cmp
cs
jns
mull
sbb
cmp
mov
pop
aad
fxch
or
sahf
dec
cwtl
sbb
adc
ljmp
or
pop
insl
mov
xor
sub
scas
xchg
jns
jo
loopne
push
js
mov
bound
xor
and
lahf
mov
and
gs
shlb
test
add
inc
jno
inc
jge
mov
out
xlat
inc
scas
mov
enterw
out
lcall
enter
pop
addr16
inc
adc
sub
or
xorl
in
adc
adc
test
xor
or
cmp
and
lods
shll
or
pop
clc
inc
jmp
or
rorb
ret
add
xor
out
xchg
sub
enter
jb
cmpsl
xor
inc
add
cmc
cmp
and
aas
push
mov
or
adc
call
add
sahf
loope
scas
mov
pop
fisttpl
sbb
pusha
in
lock
or
xchg
movsl
aaa
xchg
mov
sub
lcall
mov
lahf
mov
adc
add
mov
mov
adcl
cmpsb
sbb
xor
xchg
cmpsl
das
mov
fwait
dec
mov
xor
mov
xor
ss
out
mov
push
adc
dec
leave
pop
mov
fsts
pop
add
test
push
testb
inc
dec
mov
xchg
jo
inc
sbb
sub
sub
dec
adc
jno
push
xchg
ss
or
mov
or
mov
jbe
sbb
pop
mov
xchg
inc
fdivrl
cmpsb
push
adc
rolb
inc
xor
mov
stc
xlat
jmp
xlat
test
shr
push
hlt
jns
je
fidivs
mov
lcall
popa
or
ficomps
push
subb
cwtl
fidivrs
dec
in
sbbb
roll
cmp
in
push
and
leave
push
jge
xchg
cmp
stos
loop
jmp
jp
sub
cmp
cwtl
or
sub
xor
dec
rcrl
lods
sbb
dec
lods
cli
mov
push
xor
les
dec
sbb
sub
push
ljmp
mov
adc
xchg
arpl
sbb
mov
icebp
sahf
push
push
ljmp
fisubrs
mov
jae
sbb
push
sub
ds
mov
lcall
mov
pop
out
clc
cmp
and
push
sbb
jecxz
xor
and
inc
fsub
push
int
jmp
adc
push
scas
or
sub
push
mov
fistpll
sub
cmp
adc
xchg
xchg
add
ret
test
mov
add
lea
push
xchg
and
or
mov
movb
in
pop
std
push
pop
fdivs
std
fwait
push
mov
or
xchg
push
cmc
sub
push
or
popf
and
jl
adc
mov
call
f2xm1
adc
shll
fs
mov
inc
fmuls
adc
jae
sbb
daa
lret
out
jns
inc
adc
sub
scas
inc
adc
inc
jecxz
mov
push
mov
sub
add
mov
mov
mov
inc
das
pop
lods
popa
stos
sub
or
mov
sbb
fcmovnu
js
pop
stc
imul
lods
pusha
insb
lods
loop
lret
adc
in
decl
adc
push
ficompl
sub
add
mov
arpl
jle
mov
or
pop
pop
or
dec
test
dec
and
rcrl
push
sub
arpl
mov
jbe
sub
push
scas
adc
push
mov
xchg
daa
fcoms
fprem
out
je
jg
jo
aaa
sub
js
lahf
jp
push
dec
clc
pushf
jne
jbe
loope
in
xor
lahf
int
rol
aam
pop
lock
inc
pop
fnstsw
or
ror
notb
push
mov
push
lret
add
xchg
add
lods
mov
lock
push
xchg
cmpsb
mov
mov
in
push
jg
sub
mov
clc
subb
or
and
in
out
int3
jl
dec
inc
fwait
push
lods
loope
mov
mov
adc
pop
xor
push
cld
test
sarl
lret
cmp
mov
loop
cmp
test
jbe,pn
mov
mov
repnz
divl
and
cli
dec
and
push
hlt
mov
mov
pop
arpl
sub
cmp
cld
and
int3
setbe
adc
push
jg
outsb
out
mov
or
lcall
daa
ss
lea
test
push
or
loope
outsb
aad
outsl
sbb
iret
enter
idiv
mov
cmp
ret
pop
cmpsb
adc
push
add
fcmovne
xlat
mov
add
cmp
xorl
scas
aas
mov
or
mov
inc
in
nop
push
pop
movsl
ficoml
aad
cmp
fisttpl
enter
mov
jo
sbb
fiadds
add
outsb
mov
into
add
mov
imul
push
outsl
pop
xchg
push
sub
xor
in
pop
add
push
push
or
shr
pusha
mov
test
mov
test
xor
scas
xor
xchg
jmp
sbb
fs
mov
adc
dec
inc
mov
ss
jne
mov
test
pop
adc
cmpb
test
fbld
loope
stos
daa
push
mov
or
testl
pop
pop
push
insb
mov
aas
sub
push
scas
pop
rolb
inc
sub
adc
jmp
fstpl
pop
out
pop
and
add
outsl
cmp
scas
stc
insb
sub
imul
rcll
nop
cmpsb
cmpsb
sahf
js
jl
mov
push
inc
pop
jo
pushf
lret
dec
imul
hlt
lds
scas
mov
push
imul
mov
not
cli
pop
mov
adc
roll
xchg
jo
pop
test
jnp
ds
ljmp
dec
lret
mov
inc
or
cmp
jns
fcmovbe
mov
sti
pop
pop
aam
jb
adc
filds
icebp
mov
jmp
out
in
push
mov
push
add
sub
jl
cmp
mov
cld
dec
pop
je
ret
mov
push
inc
adc
cwtl
bound
test
stos
sub
out
pop
mov
test
and
rolb
sub
xor
adc
pop
outsw
lcall
and
andl
in
bound
pop
add
xor
sbbb
test
xchg
inc
jbe
dec
push
imul
test
aas
mov
stos
sti
sub
push
push
jo
mov
loop
in
scas
add
orb
subl
clc
mov
inc
mov
dec
cmp
int
xor
cmp
jae
inc
mov
xor
out
dec
add
lods
cmpb
setne
test
dec
pop
popa
fstl
aad
imul
daa
add
pusha
dec
pop
mov
icebp
lods
insl
mov
mov
lcall
jmp
in
xor
enter
pop
push
out
rcll
lcall
jp
sahf
or
cmp
mov
enter
pushf
fnsave
mov
sarb
xor
arpl
push
xchg
sbb
mov
sub
add
ss
push
mov
sbb
cmpsl
testb
sbb
and
mov
pop
and
out
adc
fwait
sbb
push
ficoms
ret
adc
dec
out
popa
cmp
cmpsl
icebp
jl
insl
xchg
mov
xorl
and
aaa
xchg
lock
push
andb
orl
xlat
add
xchg
inc
in
push
mov
xor
out
adc
pop
add
cmp
jl
inc
lahf
jecxz
xor
jge
xor
xchg
es
out
pop
xlat
data16
cmp
adc
std
test
inc
mov
loopne
pushf
fidivs
and
js
ficomps
mov
rcll
int3
mov
inc
lret
test
pop
sahf
cmp
push
lcall
adcb
dec
xor
test
fstl
enter
or
roll
xchg
nop
or
mov
pushf
mov
inc
lods
sub
jmp
push
adc
cld
push
lcall
push
aam
and
out
fisubrs
push
stos
andb
jge
push
add
cmp
lahf
and
insb
mov
stos
push
fnstsw
cmc
mov
lret
xlat
mov
fs
popf
mov
lock
jo
xchg
stos
clc
int3
sahf
mov
in
xorl
inc
jecxz
or
ljmp
insl
rolb
loope
xor
jp
add
test
jg
repz
pop
mov
fs
pop
ret
out
fwait
xor
jecxz
pop
arpl
sbb
push
loop
mov
enter
pop
addr16
pop
in
jbe
cld
xchg
cmpsb
cmc
or
in
int
push
and
cmp
push
test
xchg
and
mov
inc
nop
nop
popa
or
mov
mov
and
mov
hlt
and
xchg
test
mov
rcrb
fmull
xlat
mov
mov
push
fisttpll
push
dec
sub
cmp
add
andb
leave
ret
and
js
out
icebp
xchg
mov
scas
mov
out
int
sbb
xchg
cld
mov
nop
and
pop
inc
scas
jbe
sti
imul
push
or
mov
popa
jae
mov
and
jl
in
das
mov
push
xchg
fwait
add
or
cmp
js
into
adc
iret
out
sub
pop
in
mov
lahf
inc
ret
test
ficomps
xor
out
mov
xor
push
push
cmpsl
jg
or
inc
or
ljmp
adc
loope
mov
lret
mov
mov
sub
cltd
cmc
rcrb
stos
xchg
test
repnz
fdivp
es
cmp
jg
mov
sar
fwait
jl
mov
lods
cld
aaa
xor
repz
cmp
lret
loop
sbb
mov
pop
lret
mov
not
cli
mov
add
mov
or
xchg
call
adc
dec
inc
or
sbb
jp
enter
push
pop
rcrl
into
dec
sbb
and
and
mov
fcmovnb
in
xchg
jne
stos
jmp
nop
jae
arpl
hlt
outsb
mov
cmp
mov
xchg
adc
ljmp
mov
enter
mov
push
xchg
fs
jmp
adc
jnp
ret
iret
adc
shlb
dec
loopne
fistpll
outsl
xor
sub
mov
mov
sub
movsl
push
icebp
mov
insl
inc
xchg
in
jno
aam
outsb
push
dec
adc
adc
fldenv
sbb
adc
fiaddl
and
test
dec
ret
popa
mov
xchg
sbb
cmp
in
sti
pop
sahf
adc
adc
insl
push
cmpsb
and
cmp
jmp
xchg
push
dec
dec
push
cmp
std
ret
jl
pop
jg
inc
lds
popa
push
xchg
ljmp
push
adc
cmp
jmp
xor
jae
lods
and
dec
dec
jmp
pop
testl
out
shr
notl
inc
out
inc
add
out
test
mov
sub
sbb
jb
sti
dec
div
adc
fwait
decb
cld
int
mov
sub
mov
or
movsl
mov
xchg
bound
ds
sub
in
loopne
enter
cmp
pop
cs
js
pop
fcomp
bound
or
add
nop
sub
roll
dec
addb
push
dec
add
mov
fidivrl
mov
or
ja
push
mov
jp
clc
mov
cmpsl
stos
pop
xchg
mov
cmp
push
fwait
xor
test
pushf
xchg
rcrb
pop
mov
mov
fwait
cmp
jae
data16
int3
and
pop
int
jmp
or
inc
out
or
sbb
mov
lcall
dec
xor
insl
sbb
sti
sti
daa
bound
jb
repz
out
push
sub
fcomp
cmp
daa
xchg
adc
pop
xor
xchg
lahf
int3
mov
test
mov
jecxz
mov
inc
mov
mov
cli
pop
xchg
push
dec
test
cmpsl
nop
xchg
mov
out
and
jmp
xor
or
mov
jno
ds
xor
outsb
cld
inc
xor
test
xchg
jge
ja
jmp
pop
sub
adc
inc
out
lock
ret
inc
xor
lods
nop
dec
pop
out
mov
sti
jmp
adc
fisubrs
in
iret
mov
push
mov
add
adc
jbe
call
xchg
adc
pop
add
inc
movl
ret
movsl
xor
aad
pop
jmp
loopne
dec
sysenter
pop
xchg
stc
inc
dec
jecxz
nop
and
subb
push
int
in
or
xor
outsb
ror
shrl
push
arpl
jle
push
or
mov
and
jmp
or
push
push
aad
add
add
push
aas
fs
cmp
push
cli
push
outsl
cmp
loope
xor
and
test
lods
sahf
scas
inc
xor
icebp
adc
je
test
dec
add
inc
mov
scas
call
imul
stos
sbb
xchg
pop
cld
cli
rcr
sbb
jb
sub
test
and
bound
enter
jnp
or
push
xchg
mov
flds
jle
xchg
cwtl
aas
jg
xchg
loope
lcall
adc
hlt
or
int3
xchg
push
push
hlt
imul
lea
mov
mov
sbb
aas
jge
cmp
arpl
pop
mov
jg
adcb
icebp
shlb
aas
adc
push
lret
inc
cltd
cmp
js
jae
mulb
mov
push
xor
sub
mov
test
pop
or
loope
adc
rcrl
xor
aas
rol
rcll
pop
mov
pop
push
and
movsl
push
out
cmc
into
inc
lock
popa
add
adc
or
icebp
or
sbbl
outsl
xchg
mov
or
mov
movsl
mov
fsubrs
mov
arpl
sub
mov
inc
sbb
pop
leave
pop
push
jns
je
rcrb
jmp
or
idivl
push
pop
pop
push
mov
xchg
sti
lods
xor
pop
or
cmc
mov
dec
lods
shlb
mov
push
add
add
mov
data16
enter
xchg
jg
lahf
lock
test
shll
jmp
stos
mov
sbb
cmp
ljmp
jns
jp
xchg
adc
std
pop
inc
add
repz
loop
mov
es
ljmp
pop
sarl
mov
aam
adc
push
subb
or
mov
or
pop
sub
jae
sub
push
inc
out
and
mov
fwait
sahf
jbe
popa
insb
sarl
mov
pusha
test
std
rorb
mov
push
xor
push
sbb
jge,pt
cmc
ljmp
mov
inc
or
adc
out
cmp
jl
mov
inc
push
lock
outsb
add
adc
dec
xchg
add
lret
hlt
inc
out
push
lahf
lcall
ss
xchg
sbb
popf
xchg
cmpsb
movsb
mov
pop
jp
and
mov
and
in
cmp
mov
push
ss
adc
mov
sub
pushf
mov
mov
loop
jl
mov
cmpsl
xor
or
jb
mov
in
clc
mov
aas
push
stc
ss
xor
aaa
mov
lahf
fstl
push
jl
fisubl
popf
hlt
mov
repnz
sbb
and
movsl
fsubrl
lret
jle
jns
nop
negb
lcall
fsubrl
mov
mov
pop
mov
insl
adc
push
mov
adc
or
scas
cmp
ret
mov
mov
push
jae
jg
dec
mov
sub
add
divb
adc
test
adc
ss
ret
add
add
lods
lods
cld
loopne
inc
push
mulb
test
mov
testb
scas
sub
mov
or
xor
inc
andb
cmp
jmp
jl
cmp
pop
loope
insb
cli
jge
int3
popa
adc
je
rclb
sbbl
sbb
adc
popf
bound
add
xor
cltd
call
sahf
incl
mov
add
add
negb
ja
movsl
daa
insl
lods
xchg
in
lret
icebp
push
scas
repnz
negb
lods
cmc
inc
adc
inc
mov
pop
cltd
xor
fldt
or
or
adc
jle
repnz
es
push
push
lock
lret
jnp
mov
outsl
outsb
adc
inc
jl
aad
or
sbb
dec
dec
jmp
rol
dec
mov
fnstenv
js
adc
imul
enter
xor
lock
leave
inc
std
push
cmp
in
clc
frstor
dec
pop
or
arpl
mov
fwait
jmp
or
mov
int3
inc
and
test
cmpsl
hlt
js
jle
cmpsl
addb
ss
sbbl
fucomip
pop
addr16
dec
jl
pop
fstpt
add
inc
dec
mov
stos
sbb
push
popa
add
push
sbb
ds
loopne
xor
push
aas
inc
in
mov
mov
dec
sahf
daa
ja
xchg
cmc
ret
mov
aad
outsl
fwait
or
pushf
daa
jl
pop
sbb
arpl
out
mov
imull
add
in
sub
xchg
mov
adc
ss
movsb
sarb
mov
dec
jl
mov
cltd
nop
adc
sub
lcall
push
mov
mov
insb
xor
rol
insb
or
cmpsb
push
fadds
fsts
xchg
loopne
icebp
data16
mov
mov
mov
int3
sar
lods
or
outsb
or
test
add
mov
dec
mov
faddl
push
roll
or
cld
in
stos
and
pop
decl
sub
add
in
and
ss
ret
sub
test
push
and
inc
adc
mov
cld
mov
ret
mov
cmc
popf
scas
adc
dec
mov
int
pop
scas
pavgw
push
mov
test
add
mov
in
mov
push
pop
xor
nop
mov
fs
and
and
lahf
iret
cwtl
in
aaa
shlb
fisttpl
push
mov
stc
ret
jmp
out
popa
push
inc
ret
test
in
lahf
sbb
xchg
les
push
test
int
int3
pop
and
push
cmp
pushf
xor
cld
adc
lea
std
cwtl
add
andps
jmp
adc
add
addr16
sub
mov
test
test
pop
mov
mov
test
popf
xor
mov
push
sub
outsb
out
lahf
pop
orl
lret
scas
cwtl
test
int
xchg
stos
lahf
fs
popa
test
xchg
daa
sbb
mov
stos
adc
mov
lahf
fldz
in
sbb
xchg
int3
stc
mov
xchg
inc
mov
push
lods
dec
mov
inc
repnz
mov
outsb
xchg
loop
mov
stc
cmp
lds
sbb
lahf
les
test
add
ret
std
hlt
add
pop
push
and
dec
xchg
imul
mov
out
mov
ja
cmpsl
imulb
cli
mov
notb
lret
sti
shrb
add
and
push
stos
cwtl
addb
loop
dec
inc
call
push
jbe
xchg
into
cmp
int3
xchg
xchg
stc
inc
sub
ds
gs
ret
push
sub
sub
or
cmp
and
stc
cmp
cmp
mov
pop
popa
push
mov
cmp
pop
fisubl
sub
mov
in
inc
push
mov
lret
cmp
add
cmpsl
inc
loopne
pop
lahf
push
fidivrl
dec
ja
sbb
out
lods
test
fildll
jns
aas
sub
pop
cltd
test
out
data16
mov
push
ss
xor
cmp
mov
xor
mov
and
sbb
inc
cmp
js
inc
xchg
repnz
loop
push
jne
sbb
push
pop
add
xchg
inc
iret
cwtl
or
cmpsl
sbb
es
cli
addb
das
mov
pushf
jbe
mov
and
sub
movsb
xor
adc
cmpsl
jae
dec
ja
aaa
jb
in
lds
jp
mov
dec
movsb
icebp
adc
inc
pop
jge
in
in
pusha
icebp
or
leavew
xchg
fwait
mov
icebp
cmp
pop
mov
fisttpl
or
out
mov
insl
cmpsb
stos
jle
sub
addr16
data16
add
push
dec
icebp
sbb
sar
mov
adc
sbb
adc
push
dec
pop
test
mov
sub
mov
not
dec
loope
push
insl
inc
push
mov
or
push
mov
adc
daa
stos
or
mov
cltd
add
mov
cmpsl
mov
enter
push
arpl
jne
mov
shll
out
fsts
mov
shrb
push
stc
cmp
jns
aad
dec
inc
inc
inc
mov
cmpsb
andb
cmp
cwtl
jmp
lds
les
in
inc
scas
pop
lods
ror
jmp
int3
mov
outsl
adc
sub
in
enter
subl
sbb
inc
ret
jno
pop
jbe
jmp
push
mov
xchg
sbb
or
mov
addr16
or
jae
mov
mov
stos
xchg
xor
fisubrl
cmp
mov
mov
fisubrs
stos
in
xchg
xchg
imul
out
adc
testl
xor
sub
sbb
loopne
in
adc
add
and
adc
xchg
pop
insb
fs
shlb
jg
inc
pop
iret
bound
lret
mov
sbb
mov
nop
adc
test
pop
gs
dec
scas
jg
add
ja
jno
clc
inc
data16
sbb
or
int3
insl
cmp
xorb
push
test
repz
xor
loop
pop
lret
sub
sbb
daa
cmp
out
sbb
insl
cmp
sahf
aaa
cmp
cltd
pop
cmpsl
and
hlt
outsl
sahf
ret
fdivs
mov
inc
je
xchg
imul
int
push
push
inc
mov
cwtl
mov
push
les
lods
jnp
cmc
mov
pop
cmpsb
fimull
jae
jnp
test
out
movsl
jnp
je
jbe
js
popa
stc
inc
addr16
dec
pop
and
dec
push
mov
jns
ret
ret
add
das
mov
outsl
mov
inc
dec
iret
or
in
in
fucom
inc
les
cmp
lahf
nop
push
xchg
cmp
subl
jmp
add
inc
xchg
lds
scas
outsb
mov
test
rcrb
ret
fsubs
xorl
pop
push
fbstp
cltd
mov
test
or
mov
scas
pop
or
call
call
inc
pop
ja
test
dec
cltd
test
bound
mov
scas
lock
icebp
js
push
movsl
iret
cmpl
lods
inc
ja
add
adc
sbb
push
pop
dec
bound
pop
jmp
mov
iret
mov
sahf
push
adc
mov
dec
lcall
roll
sub
cmp
enter
push
mov
push
xor
fsubr
xor
xlat
ret
ss
dec
mov
dec
mov
dec
mov
jecxz
mov
out
sub
mov
faddl
xor
lahf
jge,pn
int3
xor
vpinsrw
int
les
jno
insl
std
imul
pusha
jae
add
adc
sbb
xor
gs
mov
int
adc
scas
shll
pop
sti
xchg
int3
jb
mov
int
pop
dec
xchg
mov
pop
imull
test
insb
inc
in
icebp
mov
loop
mov
cmpsb
sahf
xor
add
sub
sar
jl
movsl
and
stc
les
sti
idivb
fsts
xchg
jae
mov
add
sub
andnps
lods
dec
sbb
lret
jae
adc
repnz
add
repz
jo
fiadds
aas
mov
xchg
xchg
lods
jmp
jno
cmpsb
inc
cmp
inc
dec
les
mov
cmp
add
mov
addr16
adc
push
xor
das
pop
in
jne
mov
xchg
das
xchg
or
xchg
dec
inc
xor
je
insb
cmp
testb
jg
into
xchg
cmc
pop
jae
pop
add
cmpsl
arpl
jge
mov
sub
andl
lods
xor
xor
sbb
stc
push
dec
out
mov
decb
xor
aad
add
push
jmp
orl
dec
into
and
inc
add
mov
in
sbb
xor
fwait
adcl
dec
fidivs
sub
dec
xchg
push
dec
cwtl
mov
and
popa
inc
mov
arpl
or
inc
lahf
orb
cli
stc
sti
outsb
fstps
and
lret
into
lods
repz
sbb
pop
in
out
sub
mov
sub
ja
out
fnstsw
in
pushf
push
add
incl
lock
and
xlat
movsl
xchg
nop
xlat
cmpsb
push
daa
cltd
xlat
cld
std
and
mov
jle
mov
add
ljmp
popf
in
call
cmpsb
jmp
popa
jnp
test
in
add
sbb
pop
pop
cs
xchg
daa
pop
push
prefetch
add
fwait
aam
mov
xchg
push
ds
xchg
daa
jl
ss
cmp
mov
mov
add
push
cmp
sub
mov
cli
imulw
push
dec
xlat
mov
cs
div
popf
lea
dec
and
orw
push
add
inc
lret
addr16
sbb
loope
rcl
jp
and
add
call
dec
mov
pushf
add
dec
pop
jge
test
rcl
insl
out
aas
outsl
add
mov
adc
std
bound
insl
sbb
pop
jge
aam
cmp
mov
ret
les
push
mov
stc
mov
push
ja
cmp
fs
daa
jb
int3
lret
or
jecxz
adc
jnp
xor
cmpsl
adc
sub
popa
and
xor
daa
hlt
mov
xchg
pop
push
fidivrs
jae
add
rolb
stos
push
push
jp
das
insb
cli
int
add
mov
sti
sub
in
mov
or
cmp
or
jge
pop
push
inc
cmp
and
adc
cmp
xor
fs
leave
fidivs
sub
and
testl
cld
pop
sbb
xchg
pop
out
rorl
icebp
in
leave
cltd
dec
and
je
cmp
cltd
daa
and
test
aad
ret
ljmp
cmp
xchg
cmc
arpl
adc
shll
insl
cmp
clc
pusha
imul
mov
adc
cmp
dec
jb
arpl
mov
sub
xor
movsb
xlat
jns
xchg
out
adc
lret
in
mov
xchg
lcall
lahf
cmp
sbb
test
lret
test
push
cmpsl
mov
sbb
movsb
or
or
ja
cld
and
jle
dec
outsl
sub
iret
lds
cmpsl
lcall
rclb
sbb
stos
fdivrs
xchg
mov
pop
mov
shll
xchg
int
adc
xor
lret
ret
push
sub
dec
mov
xor
lahf
out
jmp
ljmp
fabs
test
mov
clc
icebp
push
inc
adc
dec
shll
lahf
mov
push
in
inc
adc
pop
and
push
cmp
fs
jmp
push
dec
ljmp
ljmp
and
in
jmp
int3
clc
je
xor
ret
sarl
xor
sub
lods
add
fldt
mov
inc
fdivs
mov
or
xor
jle
or
adc
fnstenv
cmc
cmp
pusha
lcall
ja
inc
out
push
movsb
add
insb
ds
or
add
mov
dec
shll
add
mov
addr16
in
jmp
int3
inc
add
daa
adc
push
cltd
jne
mov
jg
jp
in
jmp
js
push
adc
lock
bound
pop
cmp
test
fdivrl
adcl
pop
stc
xchg
jg
out
cmpsb
push
inc
daa
repnz
pop
nop
pop
mov
mov
mov
mov
mov
enter
xor
ljmp
mov
insb
xor
rorl
mov
inc
xchg
aam
or
xor
les
or
mov
lcall
and
jl
data16
ljmp
inc
xchg
stos
dec
cmpsl
pop
mov
pop
inc
sarb
sub
aam
jns
mov
movsl
cmc
lret
cmp
aaa
cld
pop
out
xchg
cli
lds
mov
inc
in
mov
clc
cmpsb
and
and
pop
outsb
faddl
xchg
mulb
mov
adc
fildll
pop
shlb
sbb
mul
dec
cltd
cmpsl
int
in
mov
nop
jmp
or
pusha
ljmp
mov
call
bound
test
lock
mov
mov
leave
adc
add
cmpl
cmc
daa
mov
xor
jnp
mov
or
stos
cmp
cli
loope
xor
test
jmp
rolb
fisttpll
cmp
ficoms
add
test
sub
push
das
mov
sbb
add
jb
movq
iret
rorl
mov
gs
pop
test
mov
inc
mulb
sarb
cmp
in
cli
sbb
jg
mov
hlt
mov
mov
pop
inc
cmp
repz
inc
loop
rorl
ss
jmp
sbb
jae
push
pop
mov
bnd
sbb
fstpl
or
cmpsl
arpl
dec
adc
adc
xchg
pop
jge
inc
or
pop
mov
push
mov
fisubs
shrb
mov
cmp
ds
xchg
adc
add
mov
jg
leave
mov
es
pop
and
cmp
imull
sbb
pop
sbb
add
mov
sbb
mov
fwait
or
pushf
call
xchg
mov
sbb
cmp
xor
or
pop
sub
out
int3
mov
lret
dec
mov
int3
test
xchg
outsb
incb
mov
and
adc
loop
mov
mov
insb
push
push
lret
imul
fdivrp
lods
push
bound
mov
dec
sbb
adc
popa
add
push
and
movsb
mov
xor
or
sbb
push
std
fdivl
roll
aad
or
mov
out
out
xchg
and
test
xchg
lea
add
lods
jbe
lret
dec
call
sbb
and
fwait
test
add
icebp
inc
push
loope
movsb
sahf
scas
xchg
js
pop
add
dec
cltd
pop
cmp
cld
sahf
xchg
or
pop
mov
inc
xchg
or
test
mov
inc
ss
sub
inc
cmc
lea
pop
xchg
sub
fldt
add
js
mov
imul
jmp
mov
pop
xchg
loop
mov
test
push
push
push
and
push
lds
aam
jmp
or
mov
pop
xorb
pop
lahf
insl
inc
xor
jns
subb
jle
adc
and
aam
add
adc
pop
arpl
sub
mov
movsl
and
mov
xor
jmp
sti
pop
rcrb
sbb
mov
push
ret
and
mov
lock
fnop
into
mov
ss
sahf
aam
mov
jmp
xlat
data16
push
xchg
out
repnz
test
mov
inc
inc
test
dec
lret
push
jmp
xchg
or
std
test
mov
xor
or
outsl
fnstsw
cmc
push
std
mov
pop
dec
lret
mov
pusha
jp
add
sahf
pop
mov
in
inc
sti
lahf
lcall
dec
sbb
jp
adc
push
add
jecxz
xor
pop
imul
or
mov
and
mov
in
dec
xchg
adc
jnp
pop
das
ja
pop
xor
push
ss
test
test
adcb
icebp
xor
mov
outsb
add
sub
pop
jb
push
in
addr16
jg
decl
lret
xor
adc
xor
and
push
add
jge
sbb
into
js
or
lea
out
and
imul
mov
pop
ss
shlb
out
es
and
xlat
mov
jbe
pop
out
inc
push
int
and
loopne
mov
jmp
in
pop
push
ror
mov
jbe
data16
lock
jb
mov
xchg
outsl
iret
movsl
lahf
push
jg
in
or
sbb
ret
sbb
sbb
or
scas
fadds
and
sbb
sbb
xor
xor
shlb
out
xor
jge
inc
sub
pop
inc
out
sub
fwait
scas
xlat
cmp
je
in
rcll
jp
shlb
xchg
xchg
mov
dec
cmc
pusha
adc
movsb
lods
xor
js
iret
shll
es
cmpsb
and
imul
cmp
mov
jae
sub
add
aas
bound
inc
mov
call
adc
idivl
mov
movsl
cwtl
mov
sub
out
xchg
mov
into
and
dec
icebp
pandn
hlt
xor
ror
push
sbb
dec
add
mov
mov
push
pop
cltd
outsl
out
out
xor
out
insb
lret
lret
fldz
cmc
js
xchg
mov
incb
ljmp
lock
and
movsl
ja
dec
push
mov
fimull
cld
jb
sbb
push
push
sbb
rol
mov
shlb
sbb
inc
fstl
add
push
aas
jns
xchg
jb
stos
cs
xor
dec
sub
cmp
fildl
fabs
lahf
sub
js
and
pop
out
inc
cmp
mov
js
nop
adc
lret
aas
aaa
sub
es
nop
xor
movsb
push
mov
ja
lea
adc
fnsave
in
mov
das
mov
cltd
nop
shll
addl
xchg
pop
or
stos
stos
push
lcall
mov
mov
add
iret
and
dec
ljmp
sbb
jge
movsb
ss
lea
sub
mov
fstl
sbb
cmpsb
add
push
jno
add
fistpll
dec
into
lcall
fwait
pop
and
xchg
mov
push
jns
push
cmp
xchg
lahf
add
adc
jecxz
andl
mov
cltd
mov
adc
gs
pop
iret
les
cmp
in
xchg
mov
sti
jmp
daa
lret
cmpsl
mov
repnz
sahf
jnp
xlat
add
insb
or
std
mov
push
mov
dec
rcl
xchg
fimuls
and
pop
repnz
push
adc
mov
sub
jnp
popa
ret
cmc
cltd
stos
nop
mov
jg
or
subb
inc
xchg
loope
xor
pusha
mov
sti
push
xchg
pusha
pushf
jnp
cltd
ja
inc
into
inc
dec
cmp
orb
dec
movsb
pop
shll
jno
mov
mov
mov
in
mov
jns
mov
pop
addl
repz
loop
shr
sbb
repz
loop
push
xlat
loopne
mov
xor
lods
dec
adc
adc
sub
shl
push
mov
pop
aas
cmpb
sbb
ss
push
lds
scas
repnz
push
jae
or
mov
fsubrp
xchg
sub
xchg
push
rorb
and
mov
or
mov
mov
and
nop
leave
mov
push
mov
dec
sub
imul
cld
in
imul
daa
stos
push
mov
sub
clc
arpl
shrb
xor
pop
cmpxchg8b
lret
in
repz
fisubl
nop
push
adc
cmpsl
mov
xor
mov
sarb
add
bound
pop
stos
inc
and
xchg
and
sub
ds
out
jns
jge
mov
xchg
xor
jl
aam
pop
cmp
sub
loop
mov
sub
mov
nop
push
mov
popf
repnz
pop
cmp
sub
imul
dec
adc
xchg
pusha
inc
mov
xchg
cmp
or
pop
in
push
ret
sbb
call
mov
fnstenv
fildll
mov
jae
aam
or
push
and
sti
int
daa
xchg
jae
mov
pushf
mov
jbe
mov
stos
lahf
and
lods
inc
les
in
out
stos
cmpsb
sarb
push
mov
jmp
lds
jl
movsb
xor
dec
pop
mov
add
mov
jle
cld
or
fld
test
mov
imul
je
sahf
mov
mov
out
test
sub
in
jg
notb
jmp
inc
cmp
lods
das
js
adc
mov
mov
jg
outsl
in
cmp
inc
pop
das
lods
out
into
popf
push
insb
popa
mov
icebp
push
sub
fs
xor
adc
push
mov
xlat
rcl
sub
cld
pop
scas
xor
jle
jmp
mov
or
test
shrb
add
xchg
or
pushf
test
addr16
pop
inc
lods
sbb
pushf
sbb
jecxz
cmp
dec
pop
roll
and
je
jecxz
lds
add
push
je
pusha
adc
repz
pop
mov
mov
int3
sbb
sbb
addl
add
divl
jg
xchg
jae
adcb
cmpsb
mov
data16
cmp
inc
enter
pop
xlat
push
jp
popa
dec
add
jmp
xor
xor
push
xchg
in
mov
xor
sahf
inc
icebp
je
mov
jle
int3
lret
and
sbb
neg
sub
sbb
xchg
and
push
mov
jno
dec
mov
xor
jmp
xor
jo
shll
lods
xor
push
add
adc
test
lahf
in
in
popf
iret
and
xor
dec
inc
pop
std
xchg
push
fstpt
jno
aam
push
mov
sub
add
fs
cmp
out
push
mov
in
mov
ds
hlt
cmp
addr16
fwait
add
adc
cmp
divb
sbb
in
push
icebp
sub
sti
or
in
fiadds
or
and
push
addb
lcall
inc
add
sti
cmc
push
call
xchg
jnp
insl
xlat
lahf
adc
test
adc
stos
test
mov
jp
hlt
inc
sbbb
in
icebp
dec
mov
fsubs
outsb
call
add
inc
sbbl
pushf
leave
dec
imul
cltd
movsb
push
inc
sbb
das
mov
sbb
aam
cwtl
mov
cmp
push
test
repz
arpl
jno
xor
push
int3
and
cld
enter
outsb
jnp
cmp
cs
repnz
cwtl
int3
pop
jp
mov
xchg
push
sahf
pop
add
jp
pop
jecxz
add
adc
scas
mov
int3
sti
push
cmp
aad
adc
push
pusha
lods
pop
inc
insl
sbbl
dec
push
dec
push
dec
fidivrs
rclb
jno
es
cmp
push
mov
cs
shl
and
popf
lret
or
int
cmp
push
testb
icebp
push
jmp
adc
adc
sbb
loopne
outsb
stc
and
gs
stos
cltd
mov
cli
sub
push
shrl
sahf
in
repnz
out
inc
and
rorl
sbb
fcomps
or
out
test
dec
sti
lret
pop
xor
add
mov
cmp
outsl
ljmp
jg
fcmovnbe
lods
icebp
imul
imul
push
loopne
mov
scas
lods
sbb
mov
dec
outsb
decl
mov
into
pop
inc
xchg
xor
dec
jle
imul
aad
ljmp
or
out
inc
xor
mov
mov
es
mov
inc
add
jb
imulb
or
dec
roll
les
adc
loopne
into
adc
icebp
sub
and
pop
add
pop
mov
test
sbb
or
fbstp
lock
movsl
in
pusha
sub
mov
push
ret
mov
sub
lret
pop
cli
into
lret
mov
rol
cmpsb
mov
fwait
inc
mov
jnp
or
fdivrs
clc
fwait
xchg
icebp
pop
sub
scas
jecxz
mov
mov
sub
cs
mov
xchg
je
repnz
pop
mov
push
test
rcr
or
xchg
push
es
sbb
enter
push
add
push
orl
inc
pop
mov
and
sbb
lods
repnz
pop
dec
enter
sub
mov
test
punpckhbw
inc
cmpb
xor
mov
cmp
das
fimuls
mov
dec
sbb
cmpsl
sbb
sub
mov
inc
ret
sub
nop
pop
lods
cld
or
xchg
xor
outsb
sub
jle
shl
xchg
lods
pop
fldl
and
add
sub
pushf
ja
mov
mov
mov
fcomps
pushl
lcall
jne
xor
loope
jl
test
test
mov
push
loopne
pop
jae
mov
sbb
cmpsl
xchg
loop
fcmovnb
sbb
xchg
pushl
cmc
or
cmc
push
jae
inc
icebp
int3
push
cmp
inc
and
and
or
xlat
inc
stc
mov
ljmp
and
mov
jmp
cld
lock
mov
xchg
add
fbstp
push
clc
pop
in
mov
pusha
push
dec
pop
pop
push
mov
sub
or
cli
inc
lsl
jge
adc
stos
icebp
outsb
movsl
imul
ds
pop
push
dec
cmp
mov
xor
mov
jne
or
jo
les
lahf
outsb
pushf
xor
out
sub
out
ja
dec
ja
sub
sbb
cmp
in
xchg
mov
imul
imul
mov
icebp
and
add
je
pmaddwd
xchg
and
add
rcll
test
xchg
insb
iret
scas
rcr
push
and
push
pop
cmp
mov
jle
and
add
mov
pop
iret
mov
jbe
stc
pop
frstor
repz
jbe
inc
and
icebp
sub
test
or
adc
cwtl
mov
mov
aad
flds
out
push
lods
or
in
lds
and
cmp
test
pushf
add
mov
dec
in
jno
mov
into
rclb
pop
jmp
mov
fwait
in
xchg
imul
adc
sbb
sub
ss
mov
adc
or
enter
lock
rcrl
notb
push
rclb
jae
pop
xchg
lcall
sub
clc
push
xor
pushf
out
fdivp
xor
adc
lret
lahf
mov
fistpl
into
inc
js
lahf
lahf
aam
pop
std
ja
lods
xor
pop
pop
jae
jecxz
cmp
add
cmp
pop
mov
and
adc
dec
push
mov
xor
sbb
outsb
aaa
or
inc
ds
xchg
cmp
fs
xchg
ss
xor
nop
stc
pop
test
jg
xchg
ficomps
dec
mov
sub
xchg
enter
mov
or
les
cmp
shrb
lods
es
xchg
add
addr16
mov
mov
ret
sbb
mov
and
sahf
inc
enter
inc
xor
hlt
lret
lcall
call
scas
sbbl
mov
lods
jp
cmp
jge
les
ficoms
pop
cltd
outsl
and
loope
daa
lret
das
rclb
sub
adc
fs
sbb
push
out
sbb
inc
mov
loopne
push
and
jmp
adcl
add
ds
jnp
lret
and
mov
scas
xor
or
and
out
mov
outsl
fdivl
dec
push
rcll
xor
pop
fisubs
in
mov
xor
or
fcomps
int3
xchg
shr
or
or
sub
jnp
add
out
aaa
jnp
dec
out
repz
jp
in
movsl
jne
mov
xchg
int3
jo
fcmovb
ret
packuswb
adc
pop
mov
adc
int3
in
sarl
cmp
lods
cmp
movsl
pop
sub
cld
push
mov
aaa
iret
mov
adc
push
xor
and
push
outsb
das
dec
les
jg
xchg
fdivrs
cmp
add
ret
xchg
cmpsb
add
xchg
gs
pop
inc
imul
xor
std
sbb
js
add
ret
xchg
shrb
xor
and
adc
dec
inc
dec
jp
inc
shlb
dec
sbb
dec
int
ror
xchg
test
shl
call
mov
xchg
lcall
lret
push
sbb
repnz
movsb
scas
xor
dec
jmp
adc
adc
call
sti
add
movb
in
rcr
cmp
dec
push
dec
adc
xchg
inc
pop
das
xlat
sbb
pop
xchg
in
pop
pushf
inc
roll
imul
out
out
ffree
mov
mov
and
sub
fildll
dec
jecxz
xorb
repnz
inc
pop
int3
in
js
imul
fs
test
insb
push
test
adc
es
dec
xchg
dec
sbb
lcall
mov
popa
xor
andb
lret
pop
mov
xor
ljmp
hlt
repz
lods
jns
xchg
ud2
and
dec
adc
mull
call
and
push
jle
xor
xchg
mov
pop
mov
xchg
add
xchg
mov
enter
nop
lcall
adc
push
jns
xor
fstpl
xlat
mov
orb
cmp
addl
pop
xor
inc
inc
jle
clc
sbb
jmp
rolb
mov
scas
jnp
push
cs
lds
mov
ds
dec
add
jnp
lahf
cmp
in
pusha
dec
xor
dec
dec
shll
or
fdivrl
cli
xchg
jnp
dec
mov
dec
and
push
add
or
jnp
jge
insb
add
adc
cmp
jno
loope
cld
mov
xchg
inc
aas
lret
sub
or
fimull
lock
mov
push
dec
inc
adc
fsts
cs
adc
daa
jmp
int
mov
cmc
dec
int
dec
fiaddl
aam
xor
xor
pop
call
xchg
push
sub
xchg
aas
call
sub
push
push
in
sub
jo
push
lock
fildl
inc
ss
or
pop
and
xor
pop
fbld
inc
add
rclb
sti
jmp
js
lock
shlb
ss
sbb
jge
cltd
mov
in
test
dec
lahf
push
xchg
mov
jb
jg
std
lcall
les
iret
data16
cld
jle
push
xor
bound
out
ss
sbb
mov
icebp
clc
add
es
fildl
pusha
inc
pop
mov
xlat
adc
mov
mov
cltd
in
mov
lahf
dec
mov
lods
ret
std
aad
or
into
test
pop
xor
sti
adc
test
push
push
pusha
mov
jo
scas
pop
push
fwait
xlat
and
xorb
pop
and
cmpsb
lock
into
jno
xor
imul
pop
xchg
roll
dec
scas
xor
lahf
js
add
push
movsl
lods
or
mov
insb
push
popa
jae
loop
scas
cmp
fisttpl
jecxz
pop
adc
fmull
sbb
jl
mov
pushf
popf
cwtl
lods
cs
add
mov
push
mov
int
das
prefetch
push
test
icebp
in
out
cmp
jl
jne
sbb
mov
or
mov
sub
out
jl
mov
cmp
imul
dec
sti
lahf
cmc
push
inc
adc
test
mov
mov
popf
add
stc
mov
or
cmpb
popa
cmpsl
les
loope
add
xor
js
sbb
lahf
pop
ja
sub
hlt
arpl
imul
je
mov
dec
mov
and
mov
jle
pop
sub
test
es
loope
mov
cmp
loope
les
mov
mov
in
ja
pop
int3
cmpsl
adc
adc
sahf
lods
test
ljmp
add
fstpl
cli
mov
add
mov
jae
data16
pop
fsubr
push
inc
fbld
lods
lcall
xchg
xchg
pop
fsubrs
push
push
add
jnp
mov
pop
push
daa
aas
loop
in
stc
push
in
dec
fisttpl
push
pop
test
sbb
sti
out
lret
mov
jne
cmp
push
lret
lret
sub
adc
adc
sub
lds
lea
mov
fxch
arpl
jno
mov
scas
push
insb
or
aaa
mov
sbb
sbb
jle
jae
jns
out
pop
pushf
adc
push
sbb
inc
in
adc
sbb
add
subb
sahf
dec
xorb
shl
sbb
movl
dec
sbb
xchg
pop
or
lds
stos
xchg
sbb
lock
pop
dec
mov
ja
mov
push
adc
xchg
fadd
inc
dec
xchg
dec
test
dec
and
cmp
xor
repz
dec
add
dec
jbe
in
add
stos
sub
je
inc
call
pop
push
sbb
cs
ss
mov
ds
sub
lret
incb
pop
inc
je
mov
pop
mov
jne
sbb
cwtl
fwait
lahf
stos
xchg
lahf
dec
popl
aad
dec
imul
sbb
pop
bound
and
ror
xchg
hlt
dec
scas
rclb
adc
pushf
jg
and
pop
inc
push
pushf
in
inc
mov
outsb
in
mov
pop
outsl
scas
mov
adc
fadd
cli
jb
mov
ret
xor
sub
dec
and
lea
mov
fabs
out
pop
bound
stos
push
mov
push
fidivrs
shrl
cmpsb
and
add
xchg
ja
sti
stos
cmp
lret
movsb
xorb
sbb
icebp
adc
mov
stos
mov
xor
push
jns
jb
sbb
mov
ret
xchg
loopne
jbe
add
mov
daa
pop
dec
xlat
iret
loope
loop
push
push
stc
ljmp
lret
sub
pushl
stc
inc
das
rcl
es
xchg
mov
jl
pop
mov
testl
cmp
pushf
and
xchg
mov
out
sbb
push
rcrl
push
test
mov
stos
or
popa
out
into
nop
adc
jp
push
iret
xchg
mov
cmp
xchg
mov
daa
test
cmp
mov
fisttpll
lea
add
push
and
mov
pop
xchg
lods
ds
out
push
pop
inc
mov
cmpsl
lret
enter
insb
insw
mov
add
scas
pushf
out
lret
mov
pusha
ljmp
sub
call
test
pop
cmp
cli
fstl
pusha
mov
mov
xor
lahf
in
cmp
aad
or
push
or
aam
jge
aam
cmp
or
xor
lods
xchg
pop
gs
mov
mov
jmp
or
xor
adc
inc
std
sbb
xor
dec
pop
stos
xchg
lock
adc
clc
fdivs
mov
sahf
js
call
add
pop
add
rolb
inc
jo
and
fwait
push
jle
aas
gs
xchg
daa
mov
add
and
lods
add
mov
inc
scas
popa
pop
and
lock
gs
shll
stos
push
mov
xor
mov
loope
stc
pop
push
fstl
push
push
adc
je
cs
fwait
mov
fbld
mov
and
inc
cltd
out
sub
rcr
enter
inc
dec
aam
lods
fidivrl
stos
scas
fidivl
outsl
xchg
cmpsl
sbb
push
imull
ljmp
leave
fildl
jecxz
add
les
jo
lods
push
cmp
push
push
mov
jecxz
xchg
cmpsb
xor
shlb
push
mov
xchg
lret
cltd
jmp
push
inc
push
dec
pushf
sub
cmpsb
call
jmp
mov
outsl
aaa
shlb
pop
es
out
fdivrp
lcall
int
out
outsb
das
dec
cli
fcoms
mov
andb
xchg
nop
test
pop
xchg
jo
mov
shl
pop
sbb
pop
xor
jae
or
and
sbb
xor
jmp
jne
loope
jp
imul
pop
loop
xlat
and
out
dec
gs
inc
pop
test
push
outsl
leave
dec
xor
mov
push
outsl
push
or
sbb
cmp
in
stc
rcll
dec
xchg
jb
mov
icebp
test
ret
outsb
xchg
xor
and
jns
addr16
mov
sbb
push
dec
shrl
sub
xchg
push
repnz
add
nop
mov
adc
iret
int
sbb
jnp
and
popl
sub
mov
imul
std
sbb
popa
ljmp
fcoms
pop
mov
out
pop
and
sti
mov
and
lea
aad
negb
das
arpl
imul
or
lret
jb
mov
adc
add
les
mov
xchg
sbb
add
xor
mov
decb
jl
dec
call
testl
jae
cmpsb
sub
lea
mov
push
and
and
stos
or
jae
iret
cmp
dec
adc
xchg
aas
negl
sub
jle
int3
ds
mov
aaa
sbb
fisubs
pop
push
xchg
loopne
shl
dec
cs
ret
fwait
inc
push
nop
loop
xor
jmp
dec
movsl
fs
int
shlb
filds
es
mov
jb
xor
loopne
outsb
stos
xchg
inc
sbb
pop
mov
cmp
jno
dec
xchg
andb
pop
mov
and
scas
xor
shl
cmpsb
mov
call
mov
jmp
pop
pop
mov
shl
xchg
xchg
push
sub
dec
sub
or
pop
popl
cmpsb
adc
dec
enter
lea
icebp
sahf
xor
cmc
lret
pop
loopne
gs
jne
jno
orl
dec
mov
inc
xor
repz
fnstcw
jmp
jp
ljmp
pusha
testb
jg
sub
fidivl
cmp
pusha
xchg
outsb
and
mov
mov
lcall
movsl
addr16
or
jne
mov
pop
in
fldl
and
imul
jmp
or
aam
xor
test
jmp
inc
jg
cmc
fldl
and
pop
idiv
inc
out
loope
movsl
and
push
outsl
add
loopne
clc
jecxz
adc
inc
int3
sub
ljmp
sbb
dec
cmc
adc
and
dec
add
pop
jo
mov
push
cmp
fwait
lods
xchg
push
iret
xchg
and
pusha
sti
adc
vcvtps2dq
enter
pop
movsb
pop
cmc
push
mov
push
sbb
and
or
push
jbe
jg
mov
call
test
ss
aaa
mov
or
push
mov
mov
pop
fldt
bswap
push
decb
cmp
adc
adc
adc
mov
out
shlb
cmpsb
push
mulps
mov
and
fisttpll
pop
inc
jle
cbtw
fwait
into
push
push
js
in
xor
fadds
rep
inc
in
sti
std
inc
test
or
js
sub
jo
lea
insl
inc
pop
mov
and
and
sbb
pusha
push
mov
and
into
mov
pop
iret
imul
stc
repz
or
jnp
push
aaa
rclb
test
popf
arpl
sti
test
cltd
xor
mov
or
fnstcw
pop
ja
mov
mov
inc
hlt
mov
sti
mov
int3
sub
imul
cmp
inc
inc
adc
or
xchg
sub
int
fbstp
ret
or
xchg
sbb
or
inc
pushf
pop
xor
leave
pop
mov
cmp
mov
jl
shr
aas
cltd
arpl
aam
cld
movl
aaa
aad
test
ret
push
idivb
mov
ljmp
int
xor
push
std
mov
add
test
sub
in
and
paddb
sub
or
lods
lods
fmuls
mov
inc
xchg
pop
and
xchg
out
mov
imul
jno
jle
test
mov
ficomps
inc
into
mov
sub
push
ja
insb
xor
and
adc
out
jge
sarb
scas
sub
les
out
xchg
xchg
dec
sbb
xchg
mov
xor
es
pushf
inc
pushf
inc
out
jae
mov
push
rorb
out
cmpl
daa
jl
or
lds
gs
xchg
mov
aam
mov
je
xchg
mov
xchg
stc
inc
fs
leave
out
add
mov
ljmp
jge
cmp
dec
loop
addr16
push
les
inc
mov
data16
xchg
push
adc
in
rep
addr16
or
jno
pusha
movsb
sbb
add
in
jbe
mov
mov
and
or
sti
adc
sbb
cld
ss
mov
into
imul
call
jecxz
sarb
test
stos
adc
jecxz
scas
daa
insl
je
cmp
pushf
push
jno
test
movsb
adc
arpl
popf
push
stc
lock
xchg
mov
jo
lods
dec
push
mov
scas
xor
popa
inc
imul
js
shrb
xchg
push
cmp
call
shll
daa
cmpsb
stos
adc
fnstenv
mov
dec
jnp
inc
cmc
xor
in
jle
push
ljmp
or
cmp
imul
mov
aam
lcall
jnp
dec
and
in
daa
xchg
inc
subl
push
in
in
push
or
pop
cli
add
xchg
inc
or
dec
cmpsl
fsubrl
das
iret
pop
mov
fidivl
mov
ret
call
bound
mov
sahf
mov
idivl
pusha
aas
cmp
test
stos
push
aad
and
out
lods
or
sbb
ja
into
lock
je
and
sub
movsb
jbe
insb
jo
sbb
daa
jns
cltd
push
xchg
sbb
ret
mov
filds
mov
inc
clc
xor
jbe
dec
mov
test
cwtl
movsl
int
imul
add
fldenv
data16
std
sbbl
xor
and
xchg
sub
loop
pusha
imul
pop
js
cmp
notb
or
ljmp
inc
sbb
popa
adc
cmpsl
aaa
lahf
cmp
mov
aaa
movsl
push
sbb
xor
test
push
mov
stos
fnsave
daa
aad
dec
and
jmp
push
ret
les
ficoml
add
sbbb
xchg
mov
push
mov
adc
inc
test
loope
repz
fs
insb
into
sub
jo
lret
cmpsl
sbb
dec
stos
cltd
mov
mov
xchg
inc
lea
pop
dec
cmp
sbb
push
ljmp
xchg
loope
pop
fbstp
fcmovb
aam
jl
jb
jno
mov
insl
pop
pop
pusha
lods
cmp
call
inc
cld
sbb
mov
pop
stos
lahf
xchg
mov
leave
pop
incb
adc
fsubp
add
lods
mov
xor
inc
ja
js
inc
xor
mov
pop
pop
pop
fnsave
fsubs
inc
pop
mov
sahf
add
int3
test
into
mov
pop
das
ss
test
sbb
ror
cli
fnstsw
xchg
call
sbb
cli
out
pop
popf
aaa
mov
and
aad
pusha
cli
rcrb
pop
xchg
xlat
aam
add
mov
fmull
call
cmpsb
ret
dec
cli
cmp
xchg
insl
dec
jo
push
jmp
shrb
mov
inc
sub
call
fimuls
sub
fsub
test
testl
xchg
lods
adc
pop
jae
fnstsw
or
shlb
rol
cwtl
xchg
ret
cld
sub
incl
fcmovne
mov
cmp
dec
mov
mov
jg
stos
sbb
xchg
imulb
or
ret
cltd
add
sti
pop
jp
sub
or
inc
jecxz
aas
cmp
sub
into
sbb
ficompl
das
dec
in
ja
dec
cltd
lea
jecxz
out
fimull
gs
inc
and
push
mov
ja
scas
sbb
push
adc
mov
mov
imul
xchg
scas
or
xchg
shlb
pop
xor
mov
lds
lret
cmpsl
xor
shll
cs
mov
in
jo
loop
stos
inc
mov
jbe
icebp
sbb
loope
jl
sbb
mov
mov
int3
xchg
shlb
les
rorl
je
lock
xchg
or
testb
mov
nop
pop
mov
jno
lret
jle
test
fsubrs
repz
rol
and
xor
cwtl
int3
std
iret
jnp
mov
shrl
mov
out
bound
aas
mov
pop
lret
pop
xchg
push
icebp
ja
cmp
pop
xchg
fstps
into
das
movsl
xor
fwait
sahf
mov
and
pop
or
add
pop
mov
mov
test
and
movsb
rolb
sti
mov
inc
imul
mov
arpl
xlat
jg
sbb
dec
adc
lret
mov
in
test
dec
jnp
dec
mov
or
fsubrp
push
adc
sbb
punpckhdq
arpl
icebp
call
mov
subb
jns
mov
fcompl
mov
push
cmp
cltd
icebp
aam
xor
lret
or
mov
ret
cmc
dec
inc
scas
shll
and
push
mov
jp
xchg
leave
inc
iret
pop
in
push
inc
cmc
jae
daa
cmp
mov
mov
mov
out
mov
addr16
mov
in
xor
leave
push
lcall
jne
adc
test
xor
stos
push
scas
jmp
js
int3
fisubl
out
sahf
in
mov
in
lret
nop
stos
movsb
pop
or
lret
adc
hlt
mov
jbe
sbb
push
inc
adcb
lret
and
das
arpl
sbb
push
jnp
popf
inc
push
cmp
hlt
pop
popf
ds
adcl
mov
push
ficoml
xchg
sbb
push
clc
test
jle
das
mov
push
dec
and
sbb
ljmp
lahf
jae
sbb
push
or
and
mov
in
out
xorb
jno
and
stos
test
outsb
lods
sbb
iret
inc
sahf
xor
push
push
js
and
and
call
dec
sahf
mov
lahf
jmp
push
lret
inc
outsl
pop
out
aas
in
pop
pop
add
rcll
sub
pop
call
adc
aam
cld
iret
hlt
inc
or
lods
fs
jns
scas
or
mov
loop
loop
cmpsl
iret
andl
and
bnd
inc
orb
rorl
lock
ror
add
pop
in
inc
add
loop
gs
pop
push
cltd
and
push
in
int3
dec
jmp
jnp
or
shrl
shlb
icebp
dec
fisttps
maxps
jmp
rol
lds
xchg
or
and
jmp
and
xchg
repnz
inc
lods
xchg
mov
mov
cmp
stos
ror
push
es
ljmp
adc
out
mov
lods
addr16
popa
insl
fiaddl
mov
xlat
add
lods
fidivs
jle
mov
push
xlat
pop
movsl
mov
ja
push
xchg
imul
xchg
lods
shrl
cmp
sti
cmc
pusha
push
loop
lret
add
cmc
mov
negl
add
lock
inc
ja
into
xacquire
xchg
call
pushf
jge
push
mov
mov
inc
cmp
xlat
dec
push
jge
jbe
outsl
jecxz
adc
clc
fs
cmc
aad
mov
nop
inc
inc
push
mov
or
aas
sbb
fmulp
jmp
push
out
jmp
sub
adc
sahf
in
inc
ja
xor
mov
adcb
adc
stos
ljmp
cmp
dec
movsb
mov
mov
out
je
arpl
movsb
pop
xchg
dec
scas
push
ja
and
cmp
adcl
or
cld
xor
loopne
rorl
or
push
push
push
int
scas
xchg
inc
repz
mulps
lret
mov
lret
mov
fimull
push
ficoms
mov
ljmp
rcrl
pop
mov
add
jbe
inc
xor
push
in
jmp
add
sarb
icebp
mov
jno
xor
mov
adc
lret
sbb
js
mov
sahf
mov
adc
stc
sub
cmp
aam
xor
sbb
gs
pusha
adc
pusha
clc
inc
into
dec
sbb
mov
cld
ffreep
push
loope
jne
imul
xor
push
inc
out
jae
pop
fists
xchg
push
adc
dec
nop
sbb
add
push
inc
js
xchg
push
out
cmp
addr16
xor
pop
mov
cli
jne
add
xor
aaa
push
jno
mov
add
clc
insb
fstps
mov
mov
jnp
dec
fisttpll
or
mov
mov
imul
sub
jmp
mov
sbb
xchg
mov
pop
pushf
out
testb
jo
sbb
lret
jecxz
pop
lea
mov
add
test
insl
adc
je
or
sbb
pusha
cld
mov
clc
in
jbe
jl
fs
push
lcall
insl
xor
push
in
out
xor
test
sub
add
std
adc
mov
test
call
jb
mov
xchg
mov
dec
pop
push
inc
and
push
sub
sub
pusha
leave
fdecstp
shl
ja
jp
popf
lahf
negl
adc
inc
vpperm
or
dec
and
push
inc
adc
cli
stc
xchg
inc
stc
dec
lret
pop
js
notl
je
dec
or
lret
test
adc
test
cmp
sbb
and
mov
mov
mov
shl
pop
push
in
cwtl
jb
popa
and
xchg
jo
clc
or
jge
mov
in
xchg
mov
push
pop
pop
cmp
mov
test
or
push
mov
cmp
repnz
sbb
or
idiv
sbb
test
cmpb
imul
fnsave
mov
pop
iret
pop
sbb
pop
out
jmp
adc
mov
movsl
test
cltd
cwtl
roll
test
xor
inc
adc
jae
lret
xor
inc
sbb
out
out
mov
sbb
sbb
fisubrs
xor
and
sbb
ss
int
mov
mov
lock
lock
into
push
pusha
mov
push
jo
xchg
cmp
inc
out
popf
in
add
push
push
push
jg
lahf
xor
dec
pop
sbb
adc
mull
pop
or
jbe
adc
pop
jne
sub
or
mov
pop
in
imul
stc
jmp
pop
stc
push
lahf
movsb
mov
lds
dec
mov
mov
xchg
jmp
mov
cmp
cmpsb
das
xlat
js
out
mov
pop
mov
loope
pop
xor
gs
nop
cmp
mov
pop
or
mov
or
daa
ds
sbb
pop
adc
frstor
mov
dec
out
jecxz
sbb
popf
sub
dec
fwait
xor
sub
jbe
cli
les
icebp
sub
out
pushf
add
push
dec
sahf
movsb
xor
xor
je
cmpsl
lcall
ficoms
pop
int3
ds
sub
andl
xchg
sbb
pop
add
jnp
aas
pop
or
lret
mov
inc
lcall
pop
mov
cs
sti
cmp
lahf
fcompl
push
std
adc
test
jb
iret
insb
xchg
test
es
hlt
jns
dec
pop
mov
insb
insb
jmp
lahf
pop
cmpsl
pop
nopl
dec
push
and
mov
jg
scas
xchg
popa
gs
or
outsl
and
call
faddl
js
mov
testb
mov
je
xchg
jnp
mov
sub
jae
inc
insb
mov
loopne
pushf
dec
push
shrb
rcr
leave
dec
sbb
andl
aad
into
jo
xchg
sti
mov
push
aad
stos
add
cltd
loopne
hlt
sub
sbb
mov
and
imul
imul
fstpt
mov
add
cmp
mov
jne
xor
fldenv
mov
aaa
sahf
rcrb
out
push
jbe
cmpsl
loopne
testb
test
decb
sbb
mov
fs
mov
icebp
inc
push
mov
cld
lfs
mov
imul
jg
xchg
mov
mov
inc
mov
add
sub
rol
or
pop
pop
mov
aad
pop
syscall
add
dec
push
mov
pop
cmpb
js
in
aas
aam
cwtl
sbb
cmp
sarb
push
in
adc
add
mov
mov
add
fdivrs
fwait
mov
je
sub
xchg
xchg
and
adc
lods
scas
pop
jae
push
mov
lahf
and
push
jle
lretw
aaa
mov
dec
in
xor
dec
popa
mov
cmpsl
js
xchg
call
sbb
adc
imul
adc
mov
movsl
mov
or
aad
mov
mov
scas
inc
xchg
ljmp
xchg
add
mov
mov
out
push
enter
push
xor
pop
in
cmp
imul
cltd
aaa
sti
push
push
imul
or
push
mov
adc
adc
mov
test
jecxz
push
xor
mov
in
inc
cmpsb
xor
addl
fcomp
xchg
loopne
repnz
cwtl
rcrl
pop
dec
jmp
les
mov
popf
out
movsb
int3
addb
leave
or
jmp
enter
scas
bound
les
sar
ret
ss
mov
out
cltd
fsubrs
mov
repz
mov
ffree
sti
int3
pop
in
daa
arpl
frstor
add
jle
lds
pop
or
mov
ja
das
shr
lcall
sub
icebp
jmp
loop
cmpsb
jb
and
jmp
pop
xchg
call
xchg
stos
scas
es
cli
mov
cmc
xchg
adc
inc
adc
shll
ficompl
nop
sbb
mov
mov
cwtl
inc
loope
fs
xchg
jo
imul
inc
addb
pop
iret
sti
mov
pop
inc
xchg
sub
mov
pop
fcmovne
xchg
outsb
lret
sahf
or
decb
and
push
ret
xor
cmp
rorb
push
add
jo
mov
test
mov
pop
pop
pop
fs
jae
jne
xchg
xor
mov
dec
xchg
enter
add
inc
rolb
lret
pushf
movsb
rol
dec
out
movsl
and
pop
ret
scas
or
xchg
lcall
int
adc
enter
hlt
xor
cmp
in
aas
lea
incb
daa
mov
mov
dec
sub
enter
mov
adc
aad
pusha
push
push
addr16
rolb
mov
fwait
mov
dec
out
mov
or
jo
pushf
xchg
push
push
sbb
scas
inc
aas
aad
xchg
xchg
int
test
push
aaa
jecxz
jg
push
pop
mov
adc
xor
push
push
in
js
enter
sub
pop
pop
add
xlat
add
mov
in
add
xchg
insl
jl
adcb
push
ljmp
push
jp
mov
sub
sbb
add
out
sahf
pop
pushf
cmp
jle
les
repz
insb
movsl
repz
push
adc
pusha
pop
adc
add
add
cwtl
sahf
push
add
push
sub
or
lea
xchg
xchg
iret
movsl
xchg
fwait
test
mov
jns
fs
in
inc
and
lret
inc
stos
mov
and
insb
cmpsb
aaa
insl
inc
and
mov
adc
pop
jbe
in
out
sub
js
and
mov
jl
sub
sub
out
loopne
js
ljmp
nop
ja,pn
add
mov
lret
scas
lods
xchg
push
and
xchg
and
push
add
add
cmp
and
movsb
push
xchg
fldcw
add
mov
je
mov
push
inc
mov
and
ja
mov
jmp
pop
int3
push
dec
mov
pop
fdivrs
sub
push
jge
adc
sub
data16
enter
or
cmpsb
push
fidivrs
imul
cwtl
sub
and
jge
push
ss
inc
xchg
clc
mov
fldcw
jge
mov
push
push
fiadds
fucomi
cmp
and
inc
lret
push
dec
add
pop
push
stos
mov
xor
adc
jle
jge
test
push
adc
inc
pop
inc
push
cld
jbe
idivl
push
loope
test
push
jns
sti
xor
ljmp
mov
cmp
cli
xor
pop
test
fldenv
or
sahf
cmp
push
scas
xchg
push
or
repz
dec
movsb
movsl
dec
jne
jge
loope
mov
dec
cmpsl
shrb
pop
leave
cmp
shl
popf
cmp
push
inc
mov
or
push
or
popa
dec
cmp
mov
and
movsb
jmp
mov
adc
mov
faddl
clc
xor
cmp
mov
loope
mov
fs
adc
ljmp
aam
bnd
stc
xchg
pop
jmp
popa
dec
das
fmul
adc
inc
cmp
cmpb
mov
sbbl
les
out
xchg
sbb
outsl
jae
stos
xchg
xor
es
push
or
sub
loope
xlat
mov
add
pop
mov
adc
xchg
xchg
out
mov
sbb
dec
add
mov
jecxz
pop
bound
mov
cmpsb
outsl
push
mov
cmc
ss
xor
gs
popa
das
cmp
adc
std
movsl
lods
jne
ds
scas
jmp
push
adc
inc
inc
lods
mov
pop
push
enter
cmpsl
push
rorl
mov
sub
cmp
add
test
lock
arpl
push
adc
and
mov
xchg
lret
sub
cmp
fmull
scas
cmp
inc
test
icebp
xor
mov
inc
sarl
into
pop
insb
push
add
nop
cs
in
pushf
mov
push
scas
push
pushf
push
popf
cmc
sbb
jb
inc
in
hlt
stos
bsr
pop
xor
xchg
add
xor
lret
fnstcw
pop
inc
sub
mov
ds
ret
popa
cltd
inc
ljmp
mov
xchg
add
push
pop
push
xchg
nop
adc
movsb
outsl
sti
icebp
xchg
ss
js
and
push
adc
punpckhbw
dec
adc
prefetch
push
inc
dec
fs
lcall
ds
or
data16
mov
inc
push
gs
outsl
pop
or
fstpl
jge
divb
pop
push
mov
lock
lret
jl
mov
shll
add
inc
stos
cld
les
mov
xchg
lahf
push
orps
cs
js
xor
inc
outsb
mov
adcb
inc
loope
inc
adcl
in
or
jg
gs
cld
mov
jo
dec
jae
sbb
mov
mov
or
lods
mov
pop
cltd
mov
add
popa
mov
adc
outsl
dec
popf
movsl
addr16
cs
insl
popa
pushf
ljmp
mov
inc
lds
into
mov
xor
imul
ret
lea
popf
sub
in
in
stc
add
mov
fmuls
bnd
pop
inc
cli
movsl
repnz
sub
sub
adc
or
push
sub
int
aam
testb
sbb
cmpsb
push
in
lea
sbb
cwtl
stos
rcll
push
jo
pop
and
mov
aas
int
repnz
jecxz
jg
inc
mov
sub
rol
cwtl
sbb
and
lea
jecxz
mov
push
call
repnz
popa
repz
dec
and
outsb
xlat
and
mov
add
roll
mov
out
fs
or
loope
fcompl
int
adc
orb
jle
cltd
and
mov
jg
dec
inc
mov
pushf
xlat
dec
and
add
call
add
jno
pop
jae
in
scas
push
lret
push
popa
dec
mov
push
daa
dec
add
push
or
rorl
adc
cmp
notb
cmpsl
stos
ret
test
sub
inc
adc
adc
lret
adc
sbb
stc
and
cmp
lock
cmpsb
jb
mov
push
xor
xchg
movsl
dec
sbbl
lods
jae
arpl
xchg
mov
test
ljmp
inc
repz
adc
jo
adc
pop
sbb
push
add
jle
cs
sub
aam
scas
aas
cmpsb
mov
xor
arpl
xchg
sbb
push
cld
movsl
and
mov
mov
call
jne
stos
xchg
mov
nop
cli
nop
sbb
in
das
int
xchg
ja
stc
push
cmp
nopl
scas
fldcw
xor
add
out
nop
cli
xchg
adc
sbb
shll
pop
cld
and
pop
pop
xor
add
inc
loopne
fwait
les
aaa
test
fidivl
xchg
cmp
mov
icebp
loop
xchg
mov
dec
xor
in
mov
lds
cld
pop
js
movsb
sbbb
orl
jle
shl
cli
jnp
test
int3
imul
ss
mov
ret
jne
dec
inc
dec
js
and
xchg
out
add
lret
arpl
psubsw
mov
push
sub
outsb
lret
imul
stc
sbb
in
das
lcall
outsl
add
sahf
and
mov
mov
scas
cmpsl
loop
out
in
jp
mov
inc
push
into
decb
ds
sbb
ljmp
add
out
jbe
pop
or
or
or
addr16
repz
jne
mov
xchg
popa
ljmp
xor
rorl
mov
sub
xchg
xor
sub
stos
scas
repnz
test
fnstsw
out
xor
sub
jmp
test
shll
lods
rolb
mov
nop
imul
aaa
sbb
add
arpl
test
and
cltd
ret
popl
bound
xchg
ret
arpl
cwtl
sbb
or
into
orb
out
into
pop
lret
mov
push
bound
inc
test
aas
in
popf
cmp
adc
mov
mov
adc
lcall
jne
adc
les
out
lret
inc
push
push
cmc
xor
frstor
ljmp
add
aaa
pop
push
cltd
jns
sahf
scas
into
pop
push
sub
add
xor
or
xchg
xorb
cmc
sbbl
adcb
jns
test
push
or
cld
dec
insb
push
imul
lahf
or
xchg
lea
push
ds
xor
push
call
aam
and
test
aad
mov
out
loope
cld
popf
stc
ret
mov
sbb
inc
adcb
push
fsts
loope
scas
jae
scas
or
pop
mov
lret
xchg
pop
cmpl
sub
and
pop
popa
orb
icebp
andb
js
fsubrl
and
push
into
sbb
dec
xor
testb
loopne
test
xchg
rolb
insl
popa
mov
cld
mov
dec
dec
jmp
or
xchg
stos
out
xchg
dec
sub
pop
inc
cmp
mov
imul
sti
loope
pop
aam
mov
sti
push
repz
pop
rolb
outsb
mov
loope
ds
insl
inc
push
call
mov
stc
mov
dec
fs
push
sbb
mov
lcall
and
cmc
sbb
aas
xchg
sahf
pop
sbb
mov
mov
rolb
add
or
or
sub
das
out
sbb
hlt
adc
gs
loope
xchg
push
insl
mov
sahf
jbe
pop
xor
inc
movsl
mov
cmp
push
stos
hlt
fstpt
and
cmp
sub
in
adc
bound
in
cmpl
cltd
pusha
sarb
mov
test
jnp
xchg
mov
mov
in
cld
stos
inc
xchg
addr16
fidivl
inc
push
xchg
popf
mov
cmp
aaa
lahf
pop
insl
or
pop
shr
dec
sub
mov
sub
aas
lea
push
xchg
dec
inc
xchg
int
lds
cs
push
shll
xchg
mov
pop
out
xchg
mov
add
or
ret
and
mov
ret
pop
popa
mov
clc
test
mov
ret
ds
in
mov
test
scas
inc
arpl
imulb
dec
std
mov
lock
mov
aas
push
in
mov
push
sub
jbe
subl
push
and
pop
and
mov
mov
xchg
xor
add
push
adc
sub
lods
sahf
mov
and
jecxz
add
sarl
daa
imul
cmp
loopne
jmp
push
testb
dec
pop
push
pop
testb
fwait
cwtl
add
inc
or
paddd
shll
jmp
mov
leave
testl
rcll
sbb
ss
test
push
add
sub
fidivs
mov
inc
in
insl
fidivrs
xchg
out
loope
sub
mov
andb
add
cmp
fs
bswap
dec
shl
mov
test
rcll
divb
push
pop
aam
imul
addl
popf
push
arpl
ljmp
leave
mov
mov
das
mov
test
xor
sbb
add
xor
add
call
out
and
sub
pop
mov
jb
ds
ljmp
mov
pop
dec
stc
ret
outsl
rol
sahf
push
movsb
xchg
mulb
mov
aam
mov
in
pop
push
out
dec
mov
mov
add
lcall
pop
shll
dec
jle
lds
mov
ja
pop
lea
stc
pushf
pop
push
dec
and
mov
dec
or
cmp
or
pop
popf
sub
ja
push
rolb
xchg
push
push
ret
fs
mov
mov
jae
xor
lea
movb
cwtl
push
iret
lahf
into
inc
pop
dec
mov
in
sarl
outsb
sti
pop
ds
iret
ljmp
rcrl
add
aas
mov
adc
ror
xorl
push
std
insl
adc
scas
out
push
mov
outsb
out
call
sbb
and
out
gs
dec
pop
adc
pop
ss
les
pop
cmp
add
test
mov
mov
pop
mov
leave
outsb
leave
out
ss
mov
lea
cs
ret
in
insb
pop
gs
sbb
push
mov
sbb
leave
daa
jnp
or
cmp
dec
aad
fs
fisubl
sub
aad
lret
adc
mov
cmpsb
mov
shrb
jno
or
cmpsb
in
mov
push
outsl
test
adc
xor
adc
repnz
fnstcw
xchg
dec
in
mov
jge
in
sbb
xlat
std
xchg
movsb
jb
dec
mov
mov
insl
add
leave
movsb
push
inc
push
test
mov
mov
cld
ds
movsb
jne
sub
repnz
repz
push
xchg
dec
ja
dec
xchg
adc
push
xchg
ds
mov
jne
jl
pop
jae
sti
and
xor
movsb
sbb
xchg
test
add
enter
inc
mov
add
fisttpll
inc
popf
and
loop
je
add
xor
inc
adc
pop
pop
sub
mov
pop
pop
mov
jo
loopne
out
sbbl
jg
stos
jns
and
lcall
push
push
outsb
jne
xor
in
ret
decl
cld
mov
jle
rclb
push
adc
inc
shrl
push
inc
pushf
pop
xchg
xorl
gs
xchg
push
push
jl
repz
mov
sub
jo
movsb
inc
mov
push
cli
pushf
jmp
push
inc
jno
or
mov
cmpsb
imul
mov
lods
and
jb
jecxz
mov
test
fcmove
fxch
pop
cltd
lock
mov
gs
sub
aad
ljmp
adc
test
jne
xor
popf
mov
insl
frstor
jmp
push
mull
xor
xor
mov
cmpsl
int3
ja
xor
add
adc
ret
xor
pop
rcrb
into
out
adc
sub
dec
int3
ljmp
mov
mov
jb
data16
push
fwait
dec
out
ficoml
adc
jg
xchg
scas
sub
sub
xchg
add
cltd
loopne
add
or
insb
test
mov
adc
outsl
pop
mov
xchg
xchg
or
js
xchg
xchg
test
mov
scas
jg
add
aas
fcom
push
fs
clc
mov
push
outsl
mov
inc
bnd
test
xor
je
std
mov
js
or
xchg
or
jns
and
push
add
je
test
sub
pusha
dec
cmp
fwait
pop
or
xor
scas
xchg
insb
jg
adc
cmpsl
jge
outsb
mov
and
shr
inc
arpl
inc
mov
dec
mov
orb
sarl
rclb
mov
or
loopne
jno
mov
push
test
mov
mov
mov
arpl
stos
movsl
ds
sbb
into
push
loopne
es
inc
ret
int3
pop
fimull
mov
and
cmp
pop
pop
push
jge
mov
aad
ss
in
dec
fiaddl
sub
xchg
pop
fisubrl
adc
in
or
cmpl
jae
mov
clc
add
das
lods
xchg
std
lahf
sar
xorb
push
jb
frstpm(287
jmp
jp
pop
mov
adc
dec
outsl
jmp
mov
dec
push
popf
add
add
pop
pop
orl
inc
nop
je
not
push
icebp
lods
pop
ficoms
outsl
and
mov
stos
test
push
xchg
jg
add
jns
mov
and
mov
xchg
sub
inc
mov
mov
loop
lret
scas
adc
mov
gs
sbb
pop
bound
xchg
dec
jne
sbb
cmpsl
aad
mov
fdivs
dec
sub
ss
jns
add
mov
fdiv
mov
pop
mov
jb
cld
cmpsb
pop
adc
mov
out
and
imul
stc
sub
movsl
jb
pop
lret
inc
jl
mov
ljmp
ds
mov
mov
and
push
fsubrs
mov
cld
inc
loopne
or
mov
pop
xchg
pop
inc
mov
pop
mov
push
push
addr16
xchg
cmpsl
or
decb
fcomip
adcb
adc
xchg
stos
cwtl
dec
lods
rorl
dec
fimuls
insb
stc
testl
and
mov
int
sahf
lcall
and
fwait
mov
aas
stos
xor
ret
sbb
arpl
fldcw
cwtl
scas
sub
lret
cmp
js
sbb
movsb
or
pop
mov
popa
shll
inc
pop
cli
push
mull
rorb
daa
push
xchg
pushf
shll
sub
xlat
aas
shl
fmul
je
ljmp
lret
lret
dec
dec
lds
or
clc
or
pop
cli
pop
sbb
xchg
fnsave
xchg
push
mov
shrb
aam
xchg
mov
sbb
mov
jl
loop
lret
out
mov
mov
push
ljmp
pop
popf
xchg
das
sub
ret
shrb
fisttpl
jb
mov
and
gs
push
arpl
ret
cmpsl
clc
jg
pop
es
sbb
mov
mov
jg
xchg
push
jnp
sub
cltd
shlb
inc
stos
mov
ret
ds
jle
leave
mov
or
sub
pop
jns
mov
mov
xor
xor
popa
cli
insl
int3
adc
decb
add
cmp
ret
add
sbb
jmp
mov
mov
mov
sbb
repnz
bound
sbb
or
adc
push
jno
or
das
movsl
lret
mov
xor
mov
inc
fisubrl
cwtl
dec
inc
or
jp
mov
dec
mov
aaa
aad
push
adc
in
mov
lcall
add
push
xchg
test
add
sub
ret
xor
cmpsl
sub
adc
iret
stos
jmp
mov
je
add
inc
pop
stos
mov
ffreep
cmp
xchg
dec
pop
mov
in
cmp
movb
push
scas
fldt
mov
ficoms
jmp
xchg
outsb
push
jbe
or
add
mov
lods
push
mov
stos
jno
and
aas
data16
insl
aas
repnz
scas
pop
pop
aad
jnp
stos
aaa
push
dec
iret
and
repnz
push
out
pop
cmp
aad
in
shrl
stc
movsl
aaa
cmp
std
push
mov
pop
mov
or
jmp
mov
mov
push
mov
and
add
push
mov
add
out
add
mov
fcmovnbe
or
xchg
sub
negl
jo
cmovs
mov
fidivl
fdivrs
jnp
sbb
xor
outsb
xchg
mov
daa
fldt
push
test
into
inc
add
mov
jle
mov
mov
pop
das
testl
cwtl
push
pop
xchg
inc
jnp
loopne
das
push
int3
in
fsts
xchg
sbb
out
mov
pop
notl
xchg
cmpsl
fs
sbb
das
pop
xchg
jne
push
inc
cmc
ret
test
sbbl
test
sub
add
sbb
push
out
push
sub
test
daa
fisubrl
cmp
fwait
or
rcll
jae
scas
fstpt
mov
clc
dec
jbe
andb
mov
xor
mov
and
lcall
fists
jle
shlb
cmp
push
dec
lods
sub
xchg
insb
or
lods
xchg
pop
hlt
push
into
mov
xor
les
in
movhps
sarb
loop
cmp
scas
lds
adc
in
and
jnp
shll
adc
jo
pop
arpl
std
push
jl
or
shll
cmpsl
out
xorl
pop
shl
mov
cmc
inc
jno
repz
adc
jo
or
jne
loop
xchg
inc
push
sbb
and
xchg
ljmp
push
mov
outsl
lret
ss
mov
push
cmp
sarl
mov
movsb
fadds
jns
add
lret
pusha
ljmp
call
jmp
es
push
xor
aaa
call
or
loope
inc
rorb
mov
rcl
lods
mov
adc
cmp
arpl
adc
xor
jmp
cmp
sub
add
lahf
dec
push
jne
out
dec
adc
and
xchg
jmp
ljmp
cmp
and
sub
and
sti
push
cmpsl
or
mov
jb
push
rcr
pusha
mov
lcall
test
lret
scas
mov
arpl
rcll
icebp
outsb
lret
out
xchg
and
loop
iret
mov
andl
outsb
mov
stos
js
out
fnstenv
pop
bound
icebp
insb
push
mov
adc
imull
fnstcw
xlat
adc
adc
sub
mov
and
hlt
insb
push
ds
nop
outsl
push
int
in
loop
es
int3
push
inc
add
cmpsb
inc
xchg
inc
lahf
sbb
movsb
das
adc
outsl
mov
fdivs
mov
outsl
loop
dec
mov
xlat
mov
cmp
test
jmp
fisubs
in
inc
insl
mov
mov
ja
rcr
je
out
xlat
rorl
mov
shll
sbb
mov
clc
add
mov
stos
cltd
cmp
inc
mov
fucomp
pop
or
mov
dec
mov
pop
xchg
pushf
test
arpl
fsub
je
or
bt
xchg
cld
in
rol
dec
lcall
or
sarb
ljmp
cmpl
cmp
ja
gs
inc
repz
sti
mov
mov
insl
mov
fmul
push
repz
cltd
rcrb
movsb
fisubs
lret
pushf
pop
jne
dec
jb
in
or
lcall
mov
pop
mov
outsl
je
push
jne
mov
dec
xor
jge
in
mov
xchg
ret
adc
mov
scas
loopne
inc
xor
mov
rcl
fistl
inc
testl
or
push
pop
jne
cmp
push
push
jb
out
or
stos
mov
pusha
mov
push
sti
fwait
mov
in
bound
insb
notl
push
fwait
add
inc
into
dec
mov
ds
adc
fbld
divl
ficoml
adc
jmp
pushf
and
inc
add
lret
cmpsl
neg
out
sbb
lea
shll
push
adcl
xchg
mov
jp
mov
push
filds
ljmp
fsubrl
leave
movsb
repz
add
push
mov
je
rorl
fidivrs
or
sbbl
xchg
repz
daa
clc
xchg
iret
lret
outsb
fstps
cmpsl
repnz
icebp
mov
rcr
cmp
loope
cmp
add
or
rcr
dec
pop
es
insl
shll
jae
popa
popf
fdivrs
in
les
lret
aaa
sti
fildl
aaa
pop
or
or
fidivl
sub
stos
xchg
imul
push
sbb
xchg
cs
mov
mov
mov
pop
sahf
jns
push
ja
inc
int3
mov
inc
add
mov
push
lods
inc
pop
sub
sbb
sub
mov
or
imul
jbe
cmc
mov
inc
add
adc
jecxz
mov
push
xchg
add
jbe
pop
mov
mov
jbe
cmpsl
lock
pop
popf
push
aad
popf
cmp
cmp
xchg
mov
or
repz
add
out
xchg
push
or
push
or
sub
mov
dec
dec
fcmovne
dec
out
dec
and
sahf
neg
aas
push
repnz
dec
pinsrw
adcb
cs
push
add
cmp
das
sti
inc
or
mov
shlb
dec
mov
ret
int3
in
bound
outsb
mov
jl
pop
cwtl
repnz
cmpps
rcrb
cmp
cmp
sbb
pusha
inc
pcmpgtd
outsb
hlt
incb
shrl
and
scas
clc
adc
inc
mov
push
xchg
repz
mov
mov
rorb
dec
scas
or
xchg
cmpsb
loopne
gs
xor
sbb
adc
popa
nop
adc
mov
loope
cmc
cmpsb
sbb
add
ror
pop
mov
shlb
cmp
cwtl
cltd
test
jno
mov
jge
and
sbb
push
xor
sbb
pop
cld
test
out
xor
dec
fmuls
sbb
clc
lcall
sub
cmp
jne
xchg
inc
lea
mov
mov
imul
iret
test
jne
sbbl
insb
jl
add
inc
mov
sahf
and
call
out
or
ror
rclb
repnz
jg
in
add
mov
rcll
lods
add
add
aad
mov
or
jl
sub
dec
add
push
out
shr
ds
sbb
mov
ror
cld
aam
xchg
xchg
jo
scas
aaa
cmc
hlt
inc
inc
add
cli
gs
dec
sahf
es
xchg
or
xchg
pop
lock
adc
xchg
cs
push
push
sub
xchg
pop
cwtl
dec
imull
rcrb
stos
addr16
fucomi
ret
dec
push
pop
dec
adc
negb
pop
push
mov
repz
mov
inc
mov
pop
adc
out
inc
scas
sub
pop
test
lahf
xchg
lds
cmp
jo
jle
stc
daa
ljmp
lods
arpl
aaa
sub
insl
movb
in
cmpsb
jp
test
mov
fnstsw
inc
cwtl
sarb
and
push
lock
jle
mov
in
ret
fstp
pop
dec
sub
insb
sbb
fcmovb
jo
pop
test
insb
scas
nop
adc
sbb
jno
mov
pop
or
add
xor
xchg
cmp
lock
jb
insb
cs
iret
mov
mov
pop
dec
dec
mull
movsb
imul
shr
rorb
mov
xchg
cld
ret
ss
jmp
mov
mov
in
sbb
jl
or
mov
push
mul
scas
mov
fsub
xchg
jl
stc
mov
fmull
or
push
and
dec
iret
or
pop
mov
jecxz
push
insl
add
mov
cmp
scas
add
cmp
out
es
aas
and
pop
lds
icebp
cs
je
mov
inc
and
mov
xorb
dec
cmp
aad
inc
lods
xchg
jg
xor
dec
fsubl
mov
xchg
mov
scas
mov
sbb
leave
out
xchg
lods
pop
jmp
sbb
insl
loop
sub
sub
sbb
dec
loop
inc
loope
imul
mov
outsb
fsubrl
nop
cld
xchg
cs
ss
shll
mov
xchg
cmp
sub
and
add
mov
xchg
js,pn
cmp
leave
mov
jbe
mov
cmp
idivb
inc
cld
inc
push
cmp
jno
dec
iret
hlt
in
stos
cmp
ds
add
sub
dec
jne
shlb
push
popa
sbbl
mov
and
xor
xor
mov
pushf
inc
cmpl
jo
mov
xchg
xchg
or
pslld
sbb
hlt
mov
mov
mov
out
insl
stos
pop
test
sub
push
inc
out
stc
orl
jno
cmp
inc
xchg
pop
jb
push
pop
jo
pop
gs
pop
add
out
imul
hlt
popf
lret
and
xlat
mov
filds
pop
add
sbb
jl
in
inc
mov
jge
or
imul
rcrl
xlat
sarl
cmpsl
xor
adc
mov
pop
mov
mov
inc
jge
mov
and
cmpsl
aas
push
push
mov
sysenter
cmp
les
inc
scas
or
inc
mov
pop
inc
data16
jne
fldenv
inc
in
or
push
inc
arpl
negl
sti
pusha
in
jne
in
std
mov
dec
enter
test
lahf
cs
and
add
sub
mov
pop
jae
les
sub
int3
rorl
and
add
jle
cmp
xor
pop
sub
inc
adc
scas
push
fsubr
hlt
inc
enter
test
sbb
insb
stos
push
adc
repz
mov
mov
cld
xor
sub
ja
add
or
pop
sti
xor
mov
shll
sbb
or
lods
sub
pop
sti
scas
popw
lods
dec
mov
lahf
mov
cltd
jge
xor
add
lcall
push
mov
jmp
aad
mov
cmp
rorb
lcall
fiadds
push
pop
cmp
add
pusha
push
insl
bound
leave
das
sub
inc
cmp
jo
sbb
lret
jp
fiaddl
cmp
and
clc
mov
sbb
push
pushf
pop
pop
mov
mov
shll
mov
loopne
jmp
inc
pop
out
sub
add
xor
out
insb
inc
jmp
adc
and
jmp
popa
xchg
mov
xchg
adc
rorb
inc
negb
inc
add
add
int3
jecxz
push
fisubl
mov
into
bound
mov
sbb
inc
adc
sub
add
xchg
push
aaa
and
push
ret
out
roll
out
and
js
pop
jae
xor
in
mov
and
and
orb
jecxz
lock
out
mov
pop
int3
push
cmp
lods
mov
mov
push
pop
cmp
xchg
nop
push
mov
xor
jmp
pop
mov
mov
inc
mov
push
int
push
push
subb
mov
cld
loop
lea
lods
xchg
das
and
inc
mov
lods
pusha
push
push
mov
jle
jbe
movsb
sub
push
test
or
ds
mov
push
andl
dec
xchg
jne
leave
es
movsl
adc
push
fucom
inc
and
dec
rcrl
add
fnstenv
mov
cmp
sub
pop
pusha
dec
out
repz
xor
test
bound
adc
shl
dec
mov
jae
ja
jae
inc
enter
mov
repnz
pop
jb,pn
das
test
ja
std
loop
mov
cmp
in
cs
ljmp
mov
mov
sbb
mov
aad
out
mov
aam
pushf
xlat
insb
lock
inc
or
rorl
push
push
pushf
sbb
push
jle
pop
int3
scas
sub
vminsd
aad
adc
xor
push
lret
cld
addr16
bound
cmp
bound
jle
xchg
std
push
stc
xor
fdivs
mov
out
test
iret
pop
sub
and
insl
addr16
in
push
sbb
dec
shll
or
jp
lods
out
mov
jne
sbb
and
pusha
mov
cmc
sbb
filds
lret
push
fldenv
mov
xor
sbb
xor
mov
mov
hlt
push
fildll
add
gs
xchg
lds
ds
sbb
arpl
inc
mov
adc
mov
pop
inc
aam
sub
jo
xor
lods
jb
inc
sbb
mov
push
add
test
dec
xor
cltd
dec
push
fsts
mov
xor
test
mov
addb
jle
dec
xchg
mov
insb
pop
cwtl
pop
fwait
sahf
rclw
and
outsb
xorb
fisttps
int
jecxz
je
sub
xchg
inc
xchg
dec
fxch
lret
andl
cmp
cmpsb
mov
nop
shl
cmp
push
push
stos
rorb
or
clc
data16
arpl
sti
outsb
rcr
xor
sub
ss
inc
dec
push
mov
insb
enter
pop
into
inc
out
inc
or
push
xor
xchg
fsubrl
mov
imul
ss
xor
xchg
out
push
jno
sti
pop
jo
popa
cmc
push
iret
les
addr16
lds
jbe
call
int
jno
notl
mov
in
sub
roll
dec
lret
inc
jns
bound
fbstp
lahf
loope
movsl
subl
push
scas
in
push
lcall
cli
jge
jbe
or
jecxz
mov
push
sbb
sub
stos
jae
cmp
or
xchg
out
ljmp
aad
jmp
adc
test
pop
mov
inc
mov
test
insl
loop
dec
mov
xor
push
push
mov
push
rorb
rcrb
or
mov
stc
jbe,pt
mov
cmp
mov
sbb
aam
mov
sahf
xchg
or
insl
ds
clc
je
ja
movsb
jp
pop
jg
das
lret
lret
cmp
and
clc
dec
add
adc
sbb
lea
in
lret
insl
fnsave
fldz
insl
mov
fdivl
lret
mov
pop
sub
cmp
jmp
and
xchg
pop
dec
leave
ss
dec
cmp
das
rcll
jg
sub
outsb
inc
add
or
push
dec
insb
or
jne
repnz
mov
dec
sti
add
je
push
and
xchg
sub
mov
sahf
mov
jg
outsb
or
sahf
scas
xchg
ret
dec
leave
push
aas
enter
outsb
xor
stos
pop
sarl
fs
mov
gs
stos
pop
lret
dec
scas
add
push
loopne
fdiv
stos
addb
mov
in
and
icebp
test
mov
xor
divl
sbb
aam
pop
std
iret
ljmp
gs
les
nop
cmp
sbb
repz
xor
cltd
mov
outsb
imul
cli
insb
adc
xlat
dec
aad
mov
inc
jecxz
push
dec
fidivrl
push
loope
fwait
sub
test
sub
shlb
adc
stos
movsb
cli
push
sbb
loope
xor
jg
pop
push
cmp
inc
cmp
xor
scas
adcl
pop
and
ficompl
sbb
cmp
and
mov
dec
loope
popf
repnz
ja
js
out
scas
popa
mov
pop
push
popf
int
lds
aam
jge
shrl
mov
cmpl
mov
cmp
sbb
test
sub
or
out
out
out
lock
pop
test
sbb
inc
in
flds
mov
or
sub
push
and
std
jg
sti
pushf
orb
jmp
or
mov
xchg
xor
insl
sub
cmpsl
sbb
test
xor
mov
pop
pop
cmp
lods
popf
jmp
sbb
mov
adc
mov
sub
test
jmp
ljmp
mov
sub
loopne
ret
rcll
hlt
ja
push
mov
mov
mov
mov
mov
movsb
push
out
pop
daa
fndisi(8087
add
lret
sub
xchg
test
icebp
push
insl
in
mov
cmp
push
dec
cmp
adc
push
cli
or
outsl
lret
pop
inc
aas
add
xchg
loope
xlat
movsb
add
stc
jae
imul
addr16
sub
movsl
cmpsl
lret
dec
adc
test
das
adc
orl
movsb
out
or
cld
hlt
orl
sbb
mov
push
adc
lcall
aad
cmp
popa
sbb
les
lds
ja
aad
mov
das
pop
mov
pop
jmp
repz
sub
cwtl
and
mov
sti
xorb
sbb
test
jb
leave
pop
stc
fsubrl
pop
imul
pop
add
cmp
push
sub
out
in
cmp
into
fwait
imul
dec
adc
cltd
out
xchg
sub
insl
andb
push
mov
bound
call
mov
mov
fiadds
add
sbb
loop
test
stos
push
nop
or
int
push
int3
lahf
ret
cmpsb
jbe
adc
fistpl
dec
cmpsl
dec
push
in
jnp
clc
movsb
adc
mov
flds
push
jg
adc
sarb
cmp
mov
mov
mov
lea
xor
jne
lcall
mov
cwtl
xchg
inc
pop
jecxz
and
cmp
ss
dec
inc
repnz
sti
js
in
ljmp
outsb
scas
mulb
and
daa
rorl
add
ds
push
jp
popf
out
inc
cld
inc
sbbl
inc
ret
fimuls
lds
repz
test
add
dec
adc
jb
push
cmp
out
daa
js
or
getsec
orb
mov
mov
sti
dec
fstps
cmp
ss
pop
ret
add
dec
ja
test
cmp
mov
and
stos
cld
scas
jg
jp
cltd
mov
movsl
inc
xchg
lods
mov
jmp
adc
shrb
and
push
jecxz
xchg
mov
and
cmp
adc
shrl
fwait
lods
inc
mov
repz
cmp
fwait
jp
cmpsb
push
add
daa
jb
mov
mov
sub
push
das
sub
test
ljmp
imulb
xlat
cmc
mov
std
orb
fidivs
inc
mov
dec
mov
dec
aaa
stc
add
cmp
push
cmp
xchg
xor
mov
lods
adc
jp
loop
popf
test
fisttpl
out
pop
jnp
fdivrl
xorl
test
jmp
add
or
aas
xchg
push
cmp
push
mov
jae
mov
lds
pop
mov
and
xchg
je
lcall
cmp
xchg
dec
fs
push
lods
addr16
cmp
inc
jne
jp
xor
push
or
or
idivb
in
xlat
lret
cmpsb
ljmp
adcb
jg
xchg
adc
xchg
cmp
mov
jne,pt
out
out
cmc
int3
mov
lret
mov
js
cld
xor
scas
sbb
mov
push
cwtl
fmull
dec
sub
push
sbb
out
pop
inc
clc
aaa
ficoml
xchg
negb
rcrb
aas
xlat
inc
mov
mov
inc
or
push
mov
js
rcrl
xchg
pop
nop
pop
or
cmp
insb
cwtl
jo
mov
lahf
pop
out
jp
imul
xchg
insl
cmpsl
int3
cmp
call
scas
push
mov
push
inc
mov
nop
pop
clc
rorl
inc
rcl
addr16
fisubs
sti
dec
nop
aam
nop
aad
add
imul
movsb
push
int3
inc
sbb
cmpsb
push
jge
jmp
sbb
data16
rol
mov
sti
idivl
std
dec
jno
push
mov
and
pop
dec
xor
ret
addl
pop
mov
out
mov
sbb
cmp
dec
loop
call
fldt
mov
adc
xchg
subb
inc
pop
adc
add
cmp
pop
pop
or
addr16
fldenv
je
fnsetpm(287
addr16
and
and
sub
sbb
ds
hlt
into
mov
fs
daa
je
movsl
int
fstp
pop
aas
enter
add
fs
add
xor
and
push
mov
mov
rolb
push
dec
add
push
add
cld
mov
adc
pusha
jle
xchg
cwtl
hlt
inc
call
or
cmp
xchg
jne
mov
insl
cmp
cmp
cmc
aam
inc
jo
pop
movsl
out
imul
sub
dec
test
and
push
out
call
and
push
ror
popf
jae
stc
paddq
mov
mov
sub
and
sbb
xchg
xor
rorl
and
add
inc
cld
adc
sbb
jg
dec
icebp
push
movsb
push
pop
fdivrs
rorl
insl
aam
cmp
sub
ds
in
sbb
mov
adc
sarl
mov
mov
mov
pop
mov
clc
xchg
add
dec
sahf
dec
dec
xor
xchg
jns
mov
imul
in
scas
in
inc
jg
sbb
fdivr
push
fmul
jo
sbb
fistpl
mov
xor
dec
pop
inc
icebp
pop
das
lretw
fs
loope
lods
jo
cmp
sub
fiaddl
dec
repnz
mov
int
ss
pop
adc
scas
hlt
add
xlat
dec
aam
pop
dec
mov
js
shlb
xchg
jae
int
cwtl
in
cmc
jg
add
adc
fsubrs
int3
call
xor
js
ffree
into
or
push
mov
pop
int
sbb
jae
aad
mov
lret
jno
fsubr
mov
in
test
mov
data16
inc
xchg
inc
imul
icebp
popa
out
mov
aaa
insb
mov
push
dec
stos
dec
jmp
inc
ret
sbb
movsb
sti
pop
fsubr
sub
dec
gs
lahf
insl
and
pop
jnp
jp
out
inc
fs
imul
xchg
mov
cmp
mov
clc
mov
fwait
sbb
movsb
cmp
js
movsb
int
jb
lret
mov
or
fidivrs
fisttpl
jg
and
sbb
mov
sbb
jecxz
cmp
jne
xchg
cs
and
and
lahf
popa
mov
pop
sbb
fidivl
jnp
cmp
aam
xchg
testb
and
ret
push
shl
add
pushf
and
int3
in
adc
pop
push
inc
cmp
cmpsb
inc
popa
adc
jbe
pop
fnstenv
xor
mov
fstps
addl
jb
push
xchg
push
cltd
daa
mov
aas
ljmp
cmp
fdivp
fld
pop
scas
adc
shrb
jmp
mov
mov
jmp
push
cmpb
test
insl
mov
sub
fdivl
mov
out
iret
pop
pop
add
sub
ficoms
jnp
mov
push
out
in
pop
push
cmp
andl
icebp
loopne
mov
or
jmp
push
addr16
imul
push
ret
cmp
ljmp
pop
mov
and
scas
lret
push
pop
call
adc
fs
fistps
stos
or
dec
jl
cld
out
gs
jl
movsb
mov
mov
or
and
lds
into
jecxz
cmpsb
cmp
sub
int
test
sbb
xchg
and
icebp
aas
inc
or
sti
lret
movsb
shlb
dec
jp
popf
out
dec
jo
mov
loope
stos
cld
or
daa
xor
pop
shl
inc
push
inc
push
movsl
jb
outsb
in
leave
out
repz
movsl
inc
sub
push
mov
roll
xor
imul
js
stos
testb
dec
jb
mov
push
popa
xor
inc
rolb
mov
add
push
cmp
and
jle
push
xchg
xlat
repz
shrl
outsb
mov
push
add
jmp
mov
insb
fs
outsl
mov
popl
xchg
mov
sbb
cmp
xchg
pop
jbe
jo
not
mov
jle
outsb
and
out
lahf
jb
dec
lahf
inc
stos
push
leave
push
adc
bound
les
jae
stos
in
rcr
adc
out
jb
xchg
xor
and
sub
adc
mov
fadds
mov
test
sbb
pop
mov
es
push
int
jbe
add
pop
icebp
out
fadds
rcrb
or
sbbl
loopne
inc
mov
into
scas
sub
lods
pop
cs
mulb
mov
sub
cmc
cmp
cs
es
lods
mov
push
arpl
jns
or
imull
push
imul
dec
lcall
sub
pop
call
jb
in
das
add
jge,pn
xor
sbb
mov
fs
mov
mov
ds
icebp
cli
ret
popf
rorl
mov
pop
jle
mov
aaa
mov
in
imul
sub
sarl
jns
jb
mov
adc
sbb
test
aas
xor
into
fimull
jbe
inc
jle
mov
insl
inc
repz
sbb
sub
addr16
aas
pop
roll
jmp
enter
fs
loope
or
sahf
and
outsb
add
adc
jae
lock
orb
dec
imulb
fsubrl
and
cmp
adcl
mov
out
sbb
filds
xor
add
adc
and
hlt
out
push
sub
lods
mov
stos
sti
dec
fcompl
and
dec
inc
aad
bound
movsb
adc
jae
fmul
jmp
add
lahf
or
mov
sbb
pop
outsb
insl
add
jae
neg
add
dec
jno
notb
repz
jae
cmp
add
cmpsb
mov
jecxz
dec
push
sbb
jb
push
pop
fidivl
push
cmp
cmp
stc
cmp
gs
adc
cmp
or
adc
push
or
lods
xchg
add
sahf
push
sbb
lds
mov
fldenv
dec
mov
jecxz
ss
inc
add
lea
out
add
dec
cmova
and
jge
stos
mov
fwait
int3
jg
jmp
inc
cmp
popf
cmpsb
sbb
add
aas
sub
xor
ret
dec
fstl
cmc
scas
jl
mov
movb
add
pop
push
add
adc
sub
in
sub
and
and
insb
add
push
shlb
xlat
aad
jbe
loopne
sub
imulb
ret
inc
or
test
sbb
jb
fbstp
pop
scas
fcomps
mov
cwtl
xchg
addb
popa
mov
pop
pop
in
loope
dec
mov
mov
mov
cmp
jmp
insb
ljmp
nop
mov
fisubl
test
push
adc
nop
lcall
jne
mov
jle
sub
movsl
sahf
pop
mov
xchg
inc
sbb
or
adc
add
jmp
jp
insl
and
daa
dec
or
cltd
fnstenv
dec
int
ja
jno
in
push
push
xchg
inc
jecxz
jnp
cld
push
push
testl
add
adc
lahf
mov
inc
cmp
jecxz
push
adcb
negb
repz
ret
jmp
push
inc
dec
pop
push
aam
rcl
pop
mov
insb
in
jno
notl
nop
out
push
lahf
xor
xor
jnp
lea
scas
mov
add
js
dec
rcrb
int3
cmp
add
leave
std
daa
xchg
cmc
mov
push
push
pop
mov
sahf
cmp
xchg
lods
push
cmp
mov
in
pop
sub
mov
mov
dec
jg
sbb
stos
rorb
and
ror
jecxz
adc
pushf
sbb
ja
shlb
test
addr16
fcmovne
cmc
push
xor
mov
lahf
fsts
stc
push
jge
ljmp
bound
fnstenv
in
les
inc
lret
cmpsl
roll
movsl
fcmovnu
out
hlt
mov
test
add
dec
cmp
mov
lock
lret
inc
addl
insb
movsb
sub
inc
pop
loop
dec
mov
fmuls
push
and
dec
dec
div
sub
out
fidivs
shll
popa
lea
sub
and
jge
and
push
push
dec
outsb
push
lcall
icebp
pop
imul
dec
clc
shl
push
mov
je
ss
mov
push
cld
xor
push
popf
aad
mov
fidivrl
mov
push
jecxz
xorl
bound
imul
dec
lahf
pop
push
sbb
sub
into
aas
out
stos
inc
jecxz
xor
aam
mov
jbe
roll
lock
xchg
mov
pusha
leave
loope
dec
rcr
mov
mov
lods
fwait
mov
jns
sbb
cmp
ljmp
jae
les
mov
mov
gs
cmp
inc
pushf
test
sub
int
notl
nop
lret
dec
ret
scas
mov
add
int
mov
xor
or
mov
push
xchg
dec
jge
call
lods
adc
fwait
sbb
aad
loopne
dec
test
pop
pop
cs
lods
add
xchg
loop
push
jb
test
lds
mov
mov
or
cs
add
das
mov
and
push
lock
cltd
push
sub
sub
xchg
sbbl
inc
sarl
push
add
pushf
cmp
arpl
sub
pop
aaa
or
in
lret
pusha
sub
and
in
jns
fstps
mov
add
sahf
stos
loop
xor
js
sbb
mov
fwait
mov
push
mov
xchg
es
aaa
stos
and
daa
push
pop
lock
sub
dec
add
imul
ret
add
fcmovne
add
xlat
mov
out
or
pop
data16
jle
sub
xchg
cwtl
xor
lods
sbb
fucom
ret
mov
mov
pop
stc
fld
rorb
inc
mov
sbb
jb
int3
push
fcomps
dec
jecxz
das
or
adc
cmp
jne
lcall
imul
dec
cmp
aaa
fisubrs
mov
inc
cwtl
subb
pop
adc
icebp
clc
fnsave
push
mov
out
pusha
add
xor
cmp
or
xchg
xor
lods
out
cmp
sbb
clc
test
and
clc
adc
mov
xor
mov
dec
fcoms
push
mov
cmpsb
jmp
fdivrp
mulb
andl
sub
aaa
push
call
and
loop
adc
cld
jecxz
es
inc
add
cmp
mov
data16
cmp
mov
test
xchg
jmp
mov
jbe
fbld
xchg
xor
xchg
rol
movsl
xor
cmp
inc
push
loop
jno
pop
cs
xor
cs
aam
mov
out
xchg
popf
movsb
pushf
inc
outsl
pop
bound
xchg
jmp
iret
add
in
nop
stos
adc
arpl
mov
dec
fisubrs
cmpsl
and
mov
pop
cltd
stos
inc
xor
and
xchg
xchg
adc
inc
xchg
adc
jo
popf
adc
xchg
outsb
hlt
imul
sahf
sbb
pop
fidivrs
push
gs
fadd
div
push
mov
push
sbb
mov
scas
mov
inc
cmp
out
and
pop
push
inc
into
imul
sbb
out
cmp
push
xchg
daa
popf
jg
inc
enter
fisttps
mov
rorb
jns
xor
jle
lret
xchg
pusha
pop
sbb
push
sar
and
cmc
xchg
mov
test
push
iret
lods
xchg
imul
aad
mov
les
add
mov
rclb
xor
or
dec
leave
and
data16
adc
pop
sbb
jl
push
arpl
in
dec
inc
fisubrs
aaa
fsubp
or
pop
rol
inc
icebp
fst
in
mov
push
inc
shrl
mov
pop
addr16
ja
sti
mov
js
ret
or
cmp
scas
stos
ds
icebp
push
sbb
push
insl
or
push
leave
xchg
pop
xchg
orl
xorb
jns
into
cwtl
push
xchg
enter
adc
push
pushf
mov
jae
cmp
xchg
lods
stos
mov
jle
push
lahf
mov
mov
test
xorl
lret
adc
sbb
movsb
dec
xchg
mov
stos
mov
cltd
out
sbb
jae
movsl
pop
push
adc
pop
fstpt
repnz
xor
xchg
ss
jnp
dec
and
push
dec
jae
or
cmpl
cmp
inc
divl
in
int
lret
and
aas
pop
dec
insl
ljmp
jl
and
or
mov
lcall
es
jno
push
cmpsb
inc
shlw
fwait
cmp
fprem1
in
add
fldt
inc
movsl
cmpl
xchg
xor
add
and
jns
jl
int3
push
push
popa
dec
mov
dec
xsavec
adc
dec
sub
xchg
push
clc
cmpsl
outsb
jmp
mov
lods
inc
call
jg
mov
int3
lea
loopne
lea
lods
out
adc
push
mov
cltd
jge,pn
push
push
add
or
xor
cmpsl
cmc
xor
pop
dec
ficompl
cmc
loope
cwtl
js
shrl
stos
int
mov
push
sahf
xor
and
sub
jae
push
push
and
inc
jno
adc
int3
jge
out
push
out
sbb
dec
dec
mov
pop
sbbl
mov
out
cmpb
xchg
sub
xrelease
xor
outsl
xchg
iret
mov
fists
cmp
bound
sbb
les
push
lock
add
add
xor
ret
xchg
lock
out
inc
stos
inc
test
pop
pop
fiadds
mov
jbe
pop
sti
rol
and
xchg
push
xor
sub
mov
pop
xor
shrb
pop
mov
push
mov
mov
mov
dec
jg
jmp
sub
mov
cmpb
push
mov
jmp
push
push
loop
mov
frstor
hlt
dec
mov
xchg
les
pusha
stos
jp
cli
adcb
pop
jne
push
mov
adc
jb
pop
or
in
addl
pushf
sub
orb
sub
and
cmp
enter
cmpsl
inc
jge
icebp
sbb
outsb
push
outsl
jae
inc
and
push
lret
adc
lea
dec
in
leave
or
leave
add
cmpsb
sub
cld
aas
add
xchg
mov
mov
cmp
xor
sub
int
sub
push
push
or
jae
ljmp
cmp
fisttpl
inc
sahf
jo
leave
loopne
insl
and
inc
out
inc
mov
mov
add
add
call
ret
push
rorl
cmpsb
je
cs
dec
mov
arpl
xor
jge
mov
ret
fisttpll
sub
inc
push
ja
shrb
mov
adc
xor
scas
dec
mov
int
xlat
jae
fwait
outsb
jmp
xchg
xor
dec
xor
cltd
cmp
dec
inc
movsl
out
cmp
aaa
and
mov
pop
bound
roll
add
ret
outsl
pop
adc
dec
push
or
sub
repz
add
mov
out
int3
mov
pusha
pushf
addr16
adc
jmp
les
wrmsr
repnz
adc
dec
push
inc
pop
push
pop
aaa
cs
mov
popf
jb,pn
lock
lds
pop
fstl
mov
mov
mov
lret
into
movsb
push
sub
dec
jg
cmp
inc
ficomps
fmul
je
jp
mov
pop
test
xor
icebp
dec
xor
add
mov
xchg
mov
je
out
xor
icebp
mov
jmp
dec
popf
int3
fsubl
bound
outsb
inc
lcall
scas
inc
cmpb
int
dec
arpl
call
lods
add
popf
mov
les
imul
scas
mov
daa
test
incl
popl
inc
ljmp
xor
pop
in
shrb
dec
mov
push
stc
mov
mov
inc
test
mov
push
mov
in
test
gs
sbb
push
dec
aam
sbb
xchg
push
mov
ret
aas
pop
mov
add
push
mov
mov
xchg
pop
lret
rcrb
cmp
cmp
imul
sub
inc
ret
or
mov
inc
imul
mov
mov
lock
mov
or
out
mov
xchg
aas
add
mov
xor
aad
inc
jbe
xor
inc
jns
filds
repz
mulb
fstl
mov
mull
add
insb
in
pop
aas
daa
mov
jmp
mov
dec
mov
rcrl
in
sub
fwait
push
cmpsb
add
dec
inc
pop
mov
ffree
or
pop
fbstp
cmpsl
push
repz
or
daa
outsb
pushf
adc
cmpsl
test
jns
insl
arpl
ljmp
inc
dec
pop
add
and
xor
out
or
push
rorl
mov
mov
and
inc
add
icebp
sbb
push
insb
jnp
mov
pop
lret
xchg
test
ja
shlb
ja
or
jmp
movsl
xchg
outsl
repz
les
jae
fimuls
xchg
xor
stos
push
scas
xchg
mul
cmp
shlb
push
jle
addb
mov
adc
mov
mov
push
cltd
cmp
lods
mov
out
jns
inc
shll
dec
jnp
ja
je
ss
cmp
xor
push
sbb
adc
add
xor
call
stos
push
iret
cmpb
push
jnp
pop
jnp
shll
push
pop
sbb
stos
cmp
fs
adc
fstl
out
xor
sub
sbb
imul
out
mov
lds
pop
jbe
pop
out
addr16
repnz
movsb
fs
mov
cmp
mov
push
dec
adc
push
jl
fadds
hlt
dec
or
clc
popf
stos
push
mov
pop
dec
mov
adc
xchg
stos
cmp
dec
sub
fdivrs
jns
push
inc
jns
xlat
pop
into
ds
js
lock
add
or
inc
hlt
test
sbb
and
xor
mull
inc
pop
and
sbb
dec
cli
sub
xchg
cmpsb
ss
cld
and
sub
or
sub
inc
xchg
bound
iret
and
jl
test
push
loope
das
xor
pop
scas
stos
add
test
orb
rcrb
repnz
jae
push
inc
cwtl
data16
cs
mov
dec
cmc
push
inc
or
jle
movsb
or
jge
frstor
and
in
cmpsl
xchg
and
jg
fistpl
and
pop
xlat
add
or
pop
ja
add
fmull
mov
std
rclb
pop
hlt
ljmp
pushf
jg
stos
pop
inc
gs
testl
adc
in
pop
push
ret
mov
xchg
sub
jne
in
negl
cltd
xor
div
insb
jecxz
test
inc
pop
aam
jmp
lcall
or
xchg
adc
daa
stos
dec
cmpb
and
push
push
pop
or
xchg
xchg
lods
push
jb
adc
or
dec
loopne
lods
push
push
and
xchg
sahf
push
mov
add
xor
xlat
jg
out
or
pop
ds
aaa
mov
pusha
adc
xchg
lret
in
fcomip
pop
scas
sub
push
dec
sub
ret
movb
popf
mov
aam
test
jp
stos
sbb
add
jb
mov
mov
pusha
push
jb
sbb
les
mov
push
pushf
lock
cmp
push
les
jmp
cwtl
add
ss
jmp
jge
sbb
out
lret
dec
imul
inc
insb
jl
mov
xchg
jmp
push
xchg
xchg
test
rcr
mov
sbb
mov
lret
cld
and
lock
pop
cltd
pusha
jp
rcrl
insb
add
mov
xor
lods
push
jb
sub
sbb
and
ds
rorl
xor
test
fwait
pop
roll
daa
inc
push
ljmp
xor
cmc
scas
sub
in
xor
ljmp
shl
dec
sbb
xor
mov
icebp
dec
int3
repnz
fistpl
jp
outsb
mov
cmp
jae
lds
fwait
das
mov
jne
adcb
adc
in
mov
in
fidivs
or
lods
test
sbb
insb
out
fnstcw
loope
mov
pop
jno
add
clc
lcall
cmp
cltd
loope
bound
stc
js
test
nop
je
icebp
clc
xor
jbe
cld
jl
inc
test
incb
bnd
ja
out
icebp
xor
push
jg
mov
sub
arpl
mov
inc
int
and
adc
xchg
inc
imul
cmp
mov
jns
mov
jnp
dec
iret
mov
cmp
jno
jo
dec
jnp
lea
rol
into
icebp
jno
add
test
in
and
sbb
xchg
or
push
jae
in
imul
sub
popf
mov
or
lods
scas
jg
mov
cmp
mov
sub
mov
dec
shll
dec
pop
je
pop
lret
cmp
jg
add
popa
cmp
jecxz
movsl
subl
mov
outsb
lahf
adc
cmp
push
push
sti
mov
mov
cli
xchg
iret
shr
adc
cmp
mov
stos
lahf
mov
jae
jbe
in
sbb
mov
fidivrl
dec
ds
iret
sub
jne
call
xchg
cmc
lcall
push
out
xchg
test
inc
imulb
xor
and
shlb
pushf
or
pop
mov
pop
ds
push
push
scas
add
in
shl
jb
mov
lret
mov
jno
stc
inc
les
roll
sbb
call
fwait
outsb
loope
jns
test
push
out
adc
and
aad
repnz
and
test
int
in
outsl
add
add
popa
xchg
in
jne
aas
pop
pusha
or
loop
sahf
call
inc
cmp
out
push
out
call
push
mov
idivb
cmp
sbb
out
insb
in
and
sub
cmp
jns
mov
sbb
lock
daa
xchg
fcmovnbe
fnsave
int3
push
sbb
sti
and
and
sbb
les
cld
test
jg
mov
sarb
push
sub
gs
lods
scas
enter
lods
xchg
mov
fnstsw
sti
shrb
fucomip
inc
mov
test
subb
sbb
rol
push
or
add
cld
push
add
fdivs
push
out
xor
test
sub
xor
cli
cmc
pop
out
inc
jbe
cli
fistps
hlt
or
lock
adc
xor
dec
testl
in
or
cmp
out
lods
sub
mov
push
sub
mul
mov
icebp
mov
ja
xchg
ds
dec
aam
jne
mov
int
mov
lret
mov
inc
test
lret
mov
jecxz
mov
xchg
repnz
adc
dec
jne
fcmovnu
lahf
xor
lds
or
mov
sub
je
mov
sub
inc
xlat
inc
sbb
ror
and
mov
movsl
inc
mov
ss
mov
leave
fimull
in
mov
inc
daa
shll
adc
leave
or
jle
loop
lods
dec
int
sti
xchg
xchg
xor
lods
movsb
jb
adc
jno
negb
das
cmpl
addr16
or
add
mov
addb
inc
sbb
test
push
ds
and
mov
aas
mov
sbb
mov
out
sbbb
inc
outsl
sbb
ss
cmp
sar
clc
imull
or
xchg
sbb
pop
mov
int3
bnd
inc
xchg
xor
sahf
or
jp
scas
push
push
leave
in
dec
push
imul
and
repz
mov
sub
cmp
dec
inc
cmc
add
iret
jge
cmp
lcall
mov
shr
mov
jnp
sub
divb
addb
test
pop
mov
mov
inc
arpl
test
out
or
fwait
nop
movsl
adc
and
sub
push
popf
mov
xchg
xor
fsubl
stos
or
gs
sti
arpl
fnstsw
dec
ffreep
mov
pop
dec
mov
out
xchg
gs
push
cmp
into
addr16
jp
adcl
ss
repnz
sub
std
jmp
inc
ret
sbb
mov
mov
repnz
sub
xlat
icebp
push
pop
sbb
push
mov
addr16
sbb
lock
xchg
imul
add
fcoms
pop
out
sub
xlat
sub
pop
es
sub
mov
mov
aaa
sbb
cmp
push
jle
fwait
adc
and
movsb
fdivrs
sbb
adc
mov
jle
fsts
pop
jmp
push
addr16
mov
and
inc
sbb
int
std
push
xchg
scas
sbb
adc
inc
sbb
in
and
mov
mov
push
test
ret
std
mov
imul
mov
dec
jp
cmpsb
or
xchg
mov
sbb
pop
pop
popf
mov
xor
mov
ret
les
dec
sub
jnp
int3
xor
dec
int3
jns
sub
test
lret
push
das
loop
dec
loop
push
mov
js
or
inc
repz
mov
xchg
lds
out
mov
sbb
in
push
or
icebp
rcrl
cs
and
inc
inc
push
into
xchg
roll
out
repnz
inc
xor
inc
test
pop
push
cmpsb
ret
fnstsw
jecxz
mov
movsb
inc
outsb
xchg
xor
outsb
mov
pop
scas
imul
add
sbb
test
out
iret
sub
aad
nop
sub
lahf
sbb
cli
push
test
adc
andl
sbb
mov
hlt
inc
and
sub
jl
adc
adc
out
sbb
xlat
sub
mov
adc
in
test
xchg
jno
adc
dec
nop
dec
gs
pop
repnz
ja
xor
fdivr
jle
rolb
sub
inc
out
icebp
les
adc
dec
push
xor
and
pop
es
sub
out
stc
xor
jge
incb
repz
mov
push
cmp
add
mov
shrb
jmp
pop
loopne
jmp
lock
call
cmc
or
loopne
rolb
xchg
scas
out
loope
adcb
popf
jmp
push
xchg
ficomps
fbld
bound
and
enter
rcrb
cmp
mov
push
fwait
cmp
pop
pop
adc
add
fidivrs
dec
inc
cwtl
into
mov
out
pop
sub
or
and
jo
jno
push
xlat
xor
lret
test
inc
xor
aas
sub
ret
loop
xor
movsb
push
mov
xchg
hlt
testl
inc
or
adc
sub
or
xorl
jno,pn
mov
pop
stc
cmpsl
out
cltd
movsl
lods
in
sbb
sub
lods
int3
mov
mov
adc
sub
je
jmp
outsb
inc
stos
jns
es
add
loope
out
repz
mov
aam
jbe
jle
nop
rcrb
inc
movsl
inc
out
cmpsl
shr
or
push
adc
dec
mov
xor
jb
adc
cmp
jecxz
int
cltd
fsubr
scas
outsl
xor
sub
add
xchg
xchg
mov
pop
int3
outsl
pop
push
js
movsl
sbb
add
mov
adc
loope
mov
push
push
lods
lahf
push
jbe
ss
ljmp
xchg
test
insb
xor
addl
sti
fisubrl
push
inc
addr16
sbb
adc
sub
dec
add
push
pop
pop
das
stos
jp
outsb
movsb
push
les
je
cmpsb
adc
shll
cmp
cltd
jb
jno
jns
mov
cld
pushf
pop
insw
sahf
jo
xchg
push
inc
das
lock
lds
push
rcll
adc
int
in
cltd
mov
rolb
adc
jecxz
xchg
fxch
enter
push
lret
scas
sbb
call
mov
sarb
jmp
loop
insl
retw
in
add
aaa
sti
jae
mov
cmpsl
mov
xor
rcrb
inc
inc
fcompl
leave
insl
xchg
jno
push
xchg
pop
shll
outsl
int3
sti
cmp
push
add
call
adc
xchg
jo
in
jae
stos
sbb
push
lea
add
int3
bound
imul
sahf
pop
add
js
mov
loopne
mov
andl
loopne
cmp
icebp
jmp
data16
leave
or
pop
inc
bound
push
adc
int
jp
fidivrl
aam
mov
gs
stc
imul
mov
cmp
cmc
xlat
jl
or
sub
cmpsb
aaa
and
adc
test
sbb
sbb
pop
insb
adc
outsb
xchg
inc
lret
inc
fs
orb
and
xchg
stc
mov
xlat
data16
f2xm1
pop
dec
mov
jae
data16
rorl
movsl
outsb
push
dec
out
jge
fyl2xp1
pop
inc
pop
dec
pop
xor
mov
mov
push
and
xor
fmulp
ja
dec
sub
xor
add
xchg
pop
dec
pop
push
mov
cmp
push
cwtl
das
xchg
xchg
ds
jle
pop
pop
fidivl
mov
stc
pusha
mov
jb
es
xchg
pop
testl
insl
out
sub
inc
jmp
stc
jge
sbb
cmp
mov
push
push
xor
cmp
shlb
sbb
outsb
kandb
lcall
in
out
xchg
negb
dec
xchg
leave
push
lds
xchg
sub
sub
dec
mov
add
pusha
pushf
xor
out
xchg
mov
sub
jecxz
cmp
and
add
iret
clc
out
leave
sbb
scas
filds
or
jmp
aaa
stos
ss
cmp
jae
jns
cmp
inc
loopne
enter
lret
jmp
xchg
or
adc
cwtl
std
inc
pop
repnz
sbb
aad
rcl
lret
cmc
std
out
sahf
pushf
pusha
mov
lods
aas
int3
mov
mov
enter
iret
push
fnsave
and
or
push
push
xchg
adc
in
jecxz
sub
stos
push
sbb
pop
cmc
xor
addr16
das
movsl
xchg
sbbl
popf
xchg
mov
and
test
inc
add
jg
js
in
jmp
adcb
cmp
lahf
mov
gs
loope
outsl
scas
addl
push
cltd
jae
pop
loopne
push
leave
jmp
imul
repnz
or
jecxz
test
xchg
adc
xor
mov
and
sbb
aam
fldl
data16
push
clc
mov
mov
hlt
loopne
inc
xor
mov
jnp
leave
or
mov
pushf
ret
cs
loopne
lahf
jmp
push
jne
les
lds
ret
add
sbb
and
dec
push
mov
mov
lcall
idivl
scas
jb
push
mov
or
loope
fstpt
or
pusha
mov
inc
out
push
adc
into
js
sarl
cmpsl
mov
clc
aas
jo
inc
fildll
xchg
in
into
jecxz
lods
cmp
rcl
cltd
ret
mov
ljmp
push
outsl
test
mov
push
ret
push
mov
sub
mov
sarl
inc
adc
aas
sub
iret
mov
and
adc
stos
sub
adc
stos
aam
fstps
loop
insb
cmp
mov
ss
loop
push
pushf
push
push
cmp
mov
xchg
pop
pop
jo
cmp
sarb
shlb
mov
dec
test
xor
out
loope
and
mov
mov
pop
popa
aad
inc
pop
pop
outsl
cli
sahf
cwtl
imul
insl
cmc
jbe
std
mov
loope
mov
xor
rol
inc
adc
stos
jbe
push
andl
and
test
mov
jae
je
mov
out
fdivs
rcrb
xchg
je
sub
sbb
cmc
push
mov
mov
xlat
adc
sbb
sub
and
dec
rolb
mov
out
shlb
lahf
pop
xchg
xor
adc
xor
or
mov
cmp
jbe
pop
lret
xor
jb
cltd
sbb
jae
testl
scas
cmp
jecxz
inc
push
push
or
fidivrl
inc
xchg
aas
scas
mov
lds
frstor
test
push
ficoms
xlat
push
xchg
xlat
push
jb
or
mov
clc
sub
xchg
add
xlat
xlat
cmp
mov
fidivs
imul
out
jb
sub
mov
mov
jae
jns
cltd
push
addr16
jb
cmp
enter
xchg
or
sbb
inc
push
inc
sbb
xchg
xchg
or
pop
fcomps
sar
jns
push
push
sbb
cmp
mov
cld
push
sti
xorl
lret
ret
scas
lods
in
push
inc
push
rcrl
xchg
xlat
mov
lret
push
and
push
pop
push
test
mov
aad
dec
sub
jbe
mov
addb
out
xchg
mov
dec
cmp
push
and
jne
inc
ljmp
xchg
push
sub
xorb
cmpsl
fidivrl
leave
inc
jb
inc
in
xor
lock
call
pop
testl
pop
sub
and
les
lahf
push
sbb
lret
imul
dec
dec
es
lidtl
aas
mov
jg
std
es
xor
pushf
xlat
jne
out
jno
adc
test
dec
imul
jecxz
add
push
rcll
xchg
popf
sbb
pusha
sahf
push
lret
pop
scas
pushf
repz
ficoms
lcall
mov
sbbb
cmp
repnz
xchg
fs
or
ret
jmp
sub
stc
inc
adcl
aaa
xor
pop
xacquire
aad
addr16
cmpsl
mov
xchg
int3
sbb
push
pop
enter
or
stos
test
out
sbb
jae
imul
jno
xchg
cmpsb
cld
sbb
jg
xor
dec
and
test
dec
jnp
lds
out
rcrl
dec
mov
imul
mov
jle
popf
sbbl
xor
or
push
sub
movsb
adc
cwtl
stos
sahf
push
out
mov
or
in
sbb
dec
cmp
data16
push
cmp
pop
aaa
gs
cli
stos
mov
fwait
js
sub
icebp
hlt
bound
xor
jmp
mov
push
testb
add
and
jo
or
fidivs
mov
lcall
inc
test
jp
aas
outsl
push
in
call
push
cmpsl
leave
jmp
sbb
lret
push
inc
or
sbb
jns
shlb
pop
mov
in
mov
inc
rclb
in
push
inc
add
sub
push
push
pop
in
jb
jns
lea
add
dec
jne
push
rorb
hlt
mov
test
adc
or
mov
mov
pusha
inc
in
sbb
lret
loope
push
inc
lods
pop
pop
pcmpeqb
or
pop
rorl
cmp
lods
imul
inc
push
push
mov
pusha
add
data16
lock
inc
lea
or
in
lret
movsl
ljmp
or
xlat
lret
pop
ror
cmovl
aad
movsb
push
idivb
nop
adc
mov
add
mov
ret
jge
cmp
inc
xlat
arpl
dec
test
mov
pop
dec
bound
jb
divl
pop
cmp
outsb
std
mov
jmp
leave
cmpsl
pop
es
lea
xchg
out
test
mov
adc
test
dec
aad
jg
addr16
imul
push
jl
fcomp
inc
sbb
xchg
xor
imul
inc
loope
sbb
int
pop
stos
add
cmp
push
cmp
mov
cmpsl
icebp
mov
orb
push
dec
jge
repz
jae
dec
xchg
cmpsl
add
or
mov
cmp
in
insl
jno
cmp
psubusb
pop
je
push
fisubl
add
cmp
mull
jl
into
or
into
xchg
aam
pop
movd
xchg
dec
cwtl
and
sbb
out
add
or
repnz
andb
arpl
popa
mov
pop
mov
frstor
mov
dec
ljmp
mov
sti
and
imul
fisttpll
sub
mov
stc
fdivl
push
jge
or
inc
jl
xchg
pushf
lcall
out
dec
xor
iret
jecxz
sahf
or
pop
int3
mov
pop
dec
pop
cltd
mov
dec
add
jne
add
push
add
inc
fbld
js
cmp
and
sub
jae
mov
int
add
ja
mov
and
or
vmovapd
inc
push
and
in
sbb
adc
lret
and
add
clc
rolb
sbb
or
adc
stos
repz
loop
and
mov
scas
enter
sbbb
ret
repz
jo
and
cmp
sub
xchg
fldcw
mov
ja
jnp
mov
outsb
lods
loopne
imul
pop
lret
jbe
lret
xchg
cmc
dec
outsl
lcall
jns
cs
imul
arpl
imul
sbb
push
sahf
and
jnp
out
mov
rorl
add
pop
lret
xchg
sbb
mov
outsl
xor
mov
insl
cmpsb
ds
out
mov
sbb
add
or
pop
adc
mov
lahf
movl
iret
pop
sbb
aaa
outsb
outsb
mov
popf
push
shll
ja
push
xchg
ret
fisttpl
loopne
in
cmp
add
cli
pushf
cmp
inc
subb
inc
std
dec
fs
fs
daa
pop
add
sub
push
and
jno
loop
outsl
fnstsw
fimuls
jae
dec
add
adc
jo
and
pop
xorb
nop
mov
cmp
leave
daa
insl
push
filds
jp
jecxz
jo
in
test
or
push
imull
outsl
mov
xchg
mov
sbb
cs
dec
fsubs
mov
fwait
aam
dec
test
xchg
idivl
sbb
dec
bound
daa
add
mov
test
or
das
insb
lds
dec
cmp
pop
insb
dec
sub
cld
loop
pop
jno
js
sub
jl
int3
pop
lods
add
sub
aam
movsl
pop
dec
repnz
les
ds
mov
in
inc
xor
inc
fucomip
push
insb
lret
and
rcll
cmpsb
neg
inc
push
inc
lret
mov
shl
or
and
popf
add
xor
lea
xorb
je
orps
test
sbb
xchg
adc
xchg
inc
inc
push
mov
fisubl
adc
stc
lods
cmc
movaps
scas
test
xor
mov
dec
das
mov
sbbb
dec
out
ret
test
imulb
jg
sub
fidivrs
insl
adc
mov
fcompl
adc
jb
ret
cmp
repnz
aaa
lds
js
sbb
dec
mov
dec
fimull
lods
cli
faddp
loop
inc
jnp
inc
jne
mov
orb
jp
dec
xchg
out
push
out
sub
roll
xchg
and
pop
cmp
xchg
popf
fsubr
adc
lods
push
sbb
rorb
data16
or
and
fiadds
xor
adc
sub
mov
dec
jmp
add
ror
fwait
or
pop
out
jmp
in
cmp
lods
fldt
iret
or
xor
gs
dec
dec
jae
pop
dec
jo
mov
in
clc
jg
mov
icebp
loope
dec
mov
fimuls
push
lcall
test
and
lds
call
mov
fisubl
push
hlt
out
xorl
scas
das
lret
add
int
mov
mov
push
or
and
test
push
nop
xchg
xlat
inc
jl
cs
insl
xor
and
inc
ja
shlb
imul
loop
stos
mov
mov
sbb
sub
cltd
xchg
outsb
sbb
in
mov
data16
arpl
dec
ljmp
test
dec
leave
fimuls
jns
push
ss
and
jne
sbbl
jno
or
pop
xchg
movsb
cld
iret
xchg
sbb
pusha
mov
sbb
or
rcrb
bnd
push
mov
test
into
sbbb
xchg
sub
mov
sarl
mov
repz
lds
sbb
shrl
adc
and
dec
or
add
stos
xchg
lcall
imul
aas
adc
ret
xchg
stos
loopne
bound
fwait
outsl
into
adc
fwait
arpl
or
ljmp
and
push
mov
inc
cmp
testl
fadds
adc
mov
fistpl
ljmp
sahf
jmp
xchg
pop
dec
es
pop
in
mov
js
les
mov
jmp
mov
cmp
mov
and
dec
xor
cld
sub
bound
mov
cmp
aam
stc
stos
mov
adc
ds
fwait
jg
dec
sub
cs
movsb
pop
mov
imul
pop
push
fnstcw
icebp
xchg
leave
pushf
mov
mov
xchg
shlb
xchg
push
xchg
cmp
mov
fimuls
cld
test
ja
push
out
push
push
push
scas
add
dec
fcoml
jmp
mov
adcl
mov
or
pop
and
cmp
or
dec
imul
sub
xor
mov
mov
lret
pushf
inc
xchg
adc
xchg
xchg
pop
adc
out
mov
mov
ja
push
jb
dec
xor
movsl
ja
movsb
scas
jno
cmpsl
push
inc
mov
in
cmpsb
and
bound
sbb
lea
cltd
lods
adc
mov
ret
and
mov
add
adc
insl
loope
pop
es
addr16
call
mov
ds
xor
lret
xchg
aam
sti
rorl
test
sbb
js
bound
clc
cld
imul
cltd
fs
and
imul
dec
in
adc
push
js
adc
push
inc
mov
imul
jge
test
out
repnz
imul
and
lods
mov
dec
and
std
nop
inc
push
and
fnstsw
fstps
pop
in
adc
dec
cltd
inc
mov
icebp
shlb
sub
pop
dec
gs
inc
inc
jo
mov
repnz
dec
sub
xchg
js
adc
leave
sub
icebp
dec
mov
pop
test
inc
mov
movsl
rcll
mov
shr
cmp
sub
loop
jne
js
mov
xlat
rorl
aaa
pop
xchg
ret
mov
mov
rorl
cmp
mov
aam
roll
cmp
mov
jb
mov
inc
ret
inc
out
xor
leave
add
jl
and
rcr
xchg
xor
fistps
icebp
fs
or
and
fstps
ror
adc
sub
push
inc
pop
pop
fsubs
inc
jg
stc
imulb
pop
jle
push
test
inc
imul
jmp
push
mov
mov
fmul
push
sti
xchg
js
jge
out
pop
adc
mov
in
scas
ja
ss
iret
mov
addr16
push
push
addr16
dec
cmpsb
imul
lahf
rcrb
push
and
sub
sub
enter
outsl
loopne
call
xor
jmp
aam
cmp
lea
sbb
jbe
in
mov
in
jbe
sbb
or
xchg
std
jbe
sti
adc
cmp
aam
sub
mov
nopl
adc
std
int
dec
test
xor
sub
push
mov
dec
adc
iret
out
jnp
out
jne
sahf
add
mov
pop
scas
pop
sub
and
bswap
rclb
add
pop
in
sahf
xchg
mov
fcomp
dec
adc
faddl
add
push
insl
sub
mov
adc
xlat
xor
fisubl
stos
dec
jmp
push
stos
mov
pop
orb
mov
mov
mov
cwtl
or
cmp
jmp
scas
xchg
sti
insb
ficoml
es
imul
add
inc
test
ja
jae
push
dec
adc
and
xchg
arpl
xor
cwtl
mov
stos
imul
scas
sub
jns
enter
inc
adc
pop
loopne
jns
je
mov
pop
push
push
mov
mov
and
sub
ds
shlb
int
mov
pop
sahf
mov
inc
mov
gs
dec
rcl
dec
ss
outsb
imull
xor
xor
add
adc
dec
scas
test
pop
mov
xchg
cwtl
xlat
cmp
lods
dec
mov
sub
stos
jo
mov
dec
stos
mov
fisttpll
aad
rolb
push
ret
addb
shl
ja
jp
lods
dec
test
mov
pushaw
jns
xlat
dec
mov
out
add
adc
sub
xchg
jl
outsl
or
mov
cmpsl
loopne
filds
leave
jp
ds
xor
std
mov
inc
outsb
loopne
push
fldenv
inc
call
cmpsl
fistpll
popf
jo
sbb
addb
jbe
imull
cmp
xchg
xor
push
imul
shrl
mov
jno
out
enter
ljmp
lahf
repz
jl
xor
or
adc
pushf
or
mov
xlat
mov
mov
jmp
enter
fdivs
sub
push
inc
mov
shl
or
pop
adc
gs
cltd
addl
pusha
nop
jb
lods
push
rclb
or
lret
out
ror
loopne
lret
and
jge
mov
aas
push
testb
push
jl
pop
movsb
jge
fstpt
stos
ret
jo
xchg
sub
adc
pop
cwtl
enter
jmp
sbb
outsl
cld
mov
mov
dec
sbb
sbbl
cmpsb
add
pop
xchg
add
mov
mov
mov
jns
leave
mov
cmp
jmp
lcall
adc
and
xchg
cmp
fstps
pop
dec
add
add
iret
jge
popa
dec
nop
push
push
scas
jno
sahf
add
jmp
daa
test
pushf
jb
xor
jmp
or
fisubrs
ror
mov
dec
sbb
clc
push
sbb
out
ds
icebp
or
lret
mov
sub
mov
push
jecxz
add
aas
pusha
ljmp
sub
sbb
ret
out
mov
lea
jmp
insb
cmpsl
adc
lea
push
rorl
add
push
aam
jp
sahf
mov
mov
xchg
push
outsb
call
sbb
mov
xchg
pop
add
push
xchg
adc
mov
and
jne
inc
fcmovb
movsb
repnz
cwtl
movsl
push
push
jo
sbb
aaa
xorl
jo
roll
fstp
scas
mov
adc
data16
jae
and
sbb
pop
js
leave
xor
dec
jno
sbb
aam
mov
cs
adc
sub
pushf
xchg
inc
inc
xchg
jp
ss
adc
sbb
jp
movsb
cmpl
sarb
jp
dec
scas
push
sti
and
push
jae
pop
mov
popf
ret
cmp
or
in
push
dec
mov
xor
dec
sbb
xchg
push
cld
in
sub
mov
adc
sub
push
js
inc
sbb
mov
dec
jl
inc
subb
in
jge
les
lea
cmp
pop
pusha
mov
cmp
pop
dec
adc
fwait
jno
xchg
sbb
arpl
pop
xchg
mov
xchg
jmp
cwtl
lods
cmp
sbb
icebp
imul
sbb
pop
pop
sub
sbb
clc
mov
xor
xchg
pop
fst
push
sti
enter
cmp
ds
in
cmpsl
in
data16
popf
outsb
xor
jl
xor
xchg
push
imul
sarl
sbb
fs
insl
aam
xchg
xor
or
sub
pop
lahf
vandnps
pop
mov
sahf
ss
adc
mov
std
cmc
in
js
xor
test
je
lods
add
rcr
in
xor
pusha
lock
inc
pop
sub
xchg
inc
jg
out
das
mov
sub
xchg
or
mov
cmp
testl
lock
pusha
outsb
fcmovb
nop
mov
mov
in
inc
les
leave
cmpl
jne
pop
mov
pop
mov
pop
imul
repnz
or
dec
sub
outsb
test
inc
js
arpl
jg
dec
rclb
aaa
ficompl
pop
iret
data16
push
fmull
aas
xchg
cwtl
xchg
xchg
shrb
mov
ret
data16
dec
inc
out
loope
xchg
push
in
gs
dec
ficoms
or
jbe
push
or
jmp
movsl
push
push
in
xorb
mov
cmp
mov
sbb
xchg
in
outsl
mov
pop
inc
dec
int
outsb
xlat
jl
add
mov
addr16
pop
lret
ret
or
push
lds
fstpl
loope
cwtl
cmp
mov
sub
xor
and
add
mov
add
fiaddl
and
hlt
pop
imul
mov
test
sahf
and
cld
mov
or
dec
and
xor
xor
dec
adc
push
jns
in
mov
jle
inc
pop
mov
sbb
pusha
call
sarl
repz
popf
xchg
daa
subl
and
fsubr
push
outsb
arpl
hlt
call
adc
mov
push
and
int3
mov
aam
sti
jne
push
aaa
pop
rclb
dec
lds
mov
sbb
lods
inc
imul
std
idiv
push
mov
stos
fnstcw
push
add
imul
pusha
add
add
mov
mov
fnsave
push
shll
xor
sti
add
jno
or
push
push
popl
xchg
bound
sarb
sub
lret
in
repnz
insl
lcall
push
in
fcoml
or
push
ss
jp
scas
fiadds
or
inc
xchg
xor
ja
daa
or
loopne
mov
insb
hlt
call
test
or
push
leave
and
adc
arpl
les
dec
inc
divl
cmp
or
sbb
dec
test
xchg
inc
and
dec
loop
push
inc
in
push
mov
adc
push
push
outsl
enter
sub
sub
lret
and
push
fidivs
pop
out
cltd
les
inc
push
cmpl
xchg
adc
dec
pop
jge
dec
pop
jae
in
test
stos
repnz
lods
mov
or
mov
call
xchg
xchg
mov
out
lds
cmp
in
pop
or
cs
pop
push
and
ret
cli
enter
add
ljmp
push
mov
sti
push
xchg
push
sbb
mov
insb
adc
cmpsl
inc
cwtl
data16
out
pop
adc
push
sub
and
out
ss
faddl
mov
fdivs
pop
push
stos
add
test
mov
sub
or
push
mov
es
cwtl
shlb
pop
js
mov
and
adc
movsb
icebp
pop
bnd
mov
dec
mov
imul
orb
sahf
jg
psrad
or
movsb
shl
inc
jl
sti
mov
mov
js
xchg
mov
cltd
adc
xchg
jnp
inc
dec
out
xchg
js
lods
pusha
and
out
imul
arpl
mov
mov
aaa
push
lahf
lret
mov
add
pop
ja
inc
mov
in
inc
test
add
lret
push
andl
pop
rclb
std
dec
add
xchg
rclb
jbe
xorb
jb
xchg
jle
mov
push
pop
pusha
jge
stc
sub
add
inc
inc
push
sbb
xor
xchg
icebp
das
inc
not
mov
xchg
inc
jae
test
mov
pop
es
and
mov
or
sti
rcll
dec
imull
leave
sub
mov
std
add
dec
add
icebp
xor
and
or
cwtl
ret
adc
sub
fmul
jnp
movsb
sbb
fs
jmp
dec
pop
mov
pop
stos
mov
xchg
xchg
jl
mov
inc
test
jmp
mov
add
add
filds
aaa
mov
pushf
mov
fidivl
leave
popa
pop
dec
call
inc
mov
push
sahf
mov
ficoml
sti
pusha
jl
cmp
inc
gs
push
adc
inc
fistl
or
add
stos
ds
pop
out
jmp
mov
jo
in
sub
popa
outsb
imul
and
mov
scas
mov
test
pusha
cmp
addl
sbb
fwait
and
mov
lock
mov
add
jmp
imul
jg
xchg
jecxz
inc
mov
dec
pop
mov
outsl
rolb
sti
and
push
lea
adc
cwtl
sbb
addl
dec
aad
sub
mov
inc
cmp
lret
es
mov
or
out
daa
fwait
std
jmp
cmp
stos
inc
push
sbb
jmp
and
mov
fwait
ret
or
sbb
push
mov
in
inc
pop
ja
test
adc
mov
lcall
xor
add
xlat
sub
or
fs
push
and
pop
outsb
in
arpl
jp
gs
inc
cmpsl
add
imul
pop
orb
pushf
sbb
int
cmp
push
mov
jl
jl
jle
pop
mov
out
add
repnz
inc
push
xor
arpl
pusha
cmp
jae
jb
shll
and
jo
je
in
jnp
inc
push
xchg
inc
rcl
repnz
into
pop
stc
test
pop
add
cwtl
lea
lock
xchg
mov
arpl
add
mov
in
std
mov
push
enter
negb
sbb
or
fsubrl
shll
imul
clc
mov
dec
cmc
mov
shrl
inc
and
and
dec
sahf
adc
test
dec
fidivrl
addr16
out
push
mov
test
mov
in
or
xlat
mov
and
repz
std
mov
std
xor
out
clc
imul
jns
cli
adc
icebp
sub
xor
jo
lcall
pop
push
xchg
ja
leave
jb
mov
xor
cmp
jns
test
rorb
nop
mov
sbb
aam
icebp
and
push
adc
pop
mov
mov
mov
and
in
inc
stos
outsb
sbb
xorl
sub
jno
aaa
or
das
xchg
push
mov
and
fs
inc
sbb
cmp
btc
xor
inc
popf
adc
lock
mov
mov
xor
mov
addr16
mov
cmp
in
aad
push
xchg
sbb
dec
fdiv
lahf
xchg
out
lret
pop
in
xchg
sub
dec
push
jge
lods
scas
or
push
lahf
push
lret
or
adc
adc
jl
inc
jle
sub
hlt
es
testb
cmp
mov
jo
jnp
aas
mov
fcomip
or
push
stc
adc
pop
lea
xchg
inc
xchg
and
aad
and
mov
sub
inc
sub
lret
fmull
mov
out
int3
sahf
mov
pop
and
cs
dec
stc
push
in
mov
mov
scas
dec
and
fidivl
push
sub
dec
xchg
mov
inc
popa
in
insb
clc
lds
dec
movb
test
testl
loopne
xor
jle
shll
mov
dec
cmc
cmpsl
xor
lds
sbb
add
jns
das
icebp
loopne
and
shll
jp
repz
leave
push
mov
orb
jnp
push
cld
lahf
pop
cmp
or
adc
dec
bound
scas
sub
pop
inc
ja
bound
iret
cmpl
ss
scas
inc
inc
push
push
adc
or
or
mov
push
dec
pminsw
rclb
xor
shlb
aam
jae,pn
xchg
mov
mov
movsl
pop
mov
ds
adc
jle
out
cs
fwait
andb
push
out
push
push
cmp
lods
lds
mov
aaa
cmp
add
jb
sbb
lret
fists
cmp
insb
jnp
ds
lock
call
adc
ljmp
call
dec
imul
mov
pop
push
jno
cmp
shl
xor
sub
pop
xchg
cmp
sarl
mov
pop
and
xlat
lret
mov
xchg
out
std
pop
push
bound
outsb
mov
sbb
mov
pop
mov
cld
fcomi
enter
inc
int3
and
aas
mov
adc
subb
test
jne
imul
movl
std
cld
rcll
pop
sub
adc
cs
fstps
lods
cmp
stos
xor
xchg
inc
in
sub
cmpsb
sub
insb
jbe
and
jecxz
jns
push
push
xor
pop
mov
cmp
mov
mov
add
insb
ret
mov
push
inc
pop
dec
or
stos
rorl
mov
hlt
test
test
lds
cmp
divb
addr16
xchg
mov
daa
out
loope
pop
cmp
getsec
push
xor
adc
faddp
repnz
xchg
test
rolb
pusha
faddl
add
adc
sarb
push
ja
jne
clc
scas
inc
mov
xchg
or
out
cltd
jge
inc
js
dec
jl
inc
sahf
dec
shlb
arpl
inc
decb
jne
or
adc
rcll
loope
in
nop
mov
cmp
js
mov
inc
sbb
sbb
sbb
jg
xor
mov
add
add
jmp
stos
adc
fsubrl
lds
cmc
sub
lret
mov
outsb
pop
call
nop
xlat
sbb
xchg
inc
mov
ret
xor
ds
call
sbb
ja
inc
aad
push
mov
aad
add
inc
rol
mov
push
jge
mov
dec
pusha
or
shr
test
dec
lahf
shll
adc
inc
add
mov
fistpll
mov
jmp
dec
sbb
mov
push
inc
leave
xchg
leave
xchg
pop
lcall
int3
stos
add
fs
jbe
adc
xchg
lret
jp
push
mov
jg
xchg
adc
sub
in
ja
stc
pop
fdivr
push
in
je
ss
movsl
adc
and
jo
mov
mov
xor
xchg
mov
repz
inc
mov
sbb
jl
mov
stc
cmpsb
decb
mov
xor
test
pop
movsl
mov
fbstp
jg
xor
push
jge
pop
pop
inc
mov
cmp
pop
mov
push
int3
mov
mov
es
scas
inc
clc
movsb
dec
jge
mov
rolb
test
push
mov
fstps
dec
addr16
cli
lahf
xchg
xor
push
mov
enter
pop
test
sti
ret
ret
ja
push
loopne
pop
stc
in
pop
je
pop
mov
aaa
loopne
and
dec
popf
jle
mov
test
nop
and
jge
iret
stc
and
mov
data16
jo
insb
adc
push
mov
fnstsw
fisubrs
sahf
aam
pop
pusha
cmc
xor
imul
add
stos
popa
cmc
nop
shlb
adc
leave
cmpsl
mov
or
push
cs
dec
loope
cli
stos
daa
movsb
enter
bnd
adc
shl
and
adc
xor
sbb
push
dec
dec
and
fcomps
or
loopne
push
cwtl
ljmp
push
mov
pop
adcl
popa
sbb
push
iret
daa
mov
xor
outsb
dec
imul
clc
xor
lds
sub
jge
sarb
add
ret
pop
cmp
addb
pop
cmp
out
fmuls
test
dec
and
aam
jae
push
add
fucom
daa
mov
adc
sub
out
shl
in
enter
add
mov
xor
mov
xlat
add
add
pop
fsubrl
xor
mov
mov
fidivs
jno
lahf
ficompl
cwtl
into
test
or
push
lods
sub
out
sub
mov
cmp
fcomps
inc
cld
cmc
jno
jge
pusha
mov
mov
in
jno
xchg
xchg
mov
xorb
or
js
dec
xor
mov
sarl
jae
jmp
ds
or
add
lret
push
in
leave
pop
test
mov
loop
outsl
mov
xchg
sbb
sbb
push
subb
push
cltd
ficoml
push
sbb
pop
or
push
fists
adc
outsl
cmp
cs
stos
scas
inc
jae
jl
jns
lods
pop
inc
xor
xchg
orb
jne
cs
push
push
sarb
push
or
ret
ljmp
pop
test
xchg
call
inc
divb
addr16
and
inc
imul
mov
lds
add
ret
push
inc
sbb
dec
mov
call
dec
sub
add
pop
mov
sbb
bound
or
xchg
and
jmp
and
or
ds
call
mov
pop
rclb
xor
repz
dec
mov
mov
inc
negl
pop
mov
mov
mov
xor
int3
push
add
insb
xor
jl
and
outsl
adc
pop
loopew
push
fistl
xchg
out
xor
inc
add
jge
or
loop
dec
lods
test
cmp
push
sarb
or
mov
inc
rclb
imul
dec
pop
imul
rdpmc
in
subb
sub
jo
xlat
fbstp
inc
inc
push
shlb
fnstcw
push
mov
or
lods
dec
mov
sub
mov
push
dec
push
lock
pop
mov
and
scas
dec
repnz
xchg
mov
inc
lahf
sub
pop
inc
mov
vmwrite
cmp
loope
loopne
dec
jnp
inc
inc
pop
mov
mov
mov
and
ljmp
into
js
addr16
and
out
xor
call
inc
push
jno
jmp
test
mov
fsts
in
bnd
push
sub
cmp
lock
leave
scas
push
cmpsl
icebp
jge
jg
mov
cs
jg
sbb
mov
das
pop
adc
data16
and
mov
cmpl
push
ss
cmp
sub
mov
nop
out
scas
mov
mov
daa
mov
insl
sbb
xor
dec
pop
xor
cmp
adc
dec
sbb
jno
ret
imul
push
rorb
test
addb
frstor
inc
cmc
jg
in
cmpsb
cltd
pop
sahf
int
push
ud1
das
and
rcrb
ja
cmpsb
sbb
rcll
int
mov
adc
mov
add
rcll
lret
in
add
mov
pop
sbb
push
pop
ja
xor
push
cmc
iret
stmxcsr
jmp
push
inc
mov
pop
mov
stos
pop
or
xor
add
mov
loopne
jg
adc
test
mov
dec
fbstp
mov
ret
ret
sub
xchg
popf
sbb
clc
pop
jmp
je
xlat
dec
inc
ja
dec
stos
adc
cmc
fwait
sub
stos
fcomps
outsb
xchg
loopne
mov
mov
add
sbb
or
imul
jge
hlt
pop
and
xchg
pop
jmp
cli
push
ss
dec
fdivs
dec
scas
mov
xor
sti
cmp
sub
push
repnz
pop
inc
cmc
ja
fstps
cmp
xchg
pop
or
mov
push
lds
iret
mov
push
dec
push
or
sbb
outsb
inc
test
cmp
mov
int3
xor
pop
outsl
xchg
xchg
clc
hlt
mov
push
inc
lahf
xchg
push
xchg
and
inc
lret
orb
in
mov
divl
mov
cmpsl
or
push
nop
mov
outsl
movsl
not
adc
jnp
and
inc
scas
and
pop
mov
fsts
shlb
arpl
js
jns
mov
sub
fst
jmp
addr16
lods
push
jl
dec
and
sbb
sbb
cmp
movsl
pop
popa
movsb
push
insl
jge
or
xor
stos
add
enter
cmp
jle
inc
sti
jle
out
cmpsb
rorb
dec
lcall
cmp
imul
sbb
pushf
neg
mov
shl
mov
mov
mov
leave
addr16
or
sbb
mov
jbe
jle
xor
cmp
imul
jbe
out
fwait
mov
sqrtps
cli
loopne
pusha
popa
xchg
sub
pop
sbb
dec
xchg
xchg
lret
bound
xchg
and
add
fsubl
into
ret
pop
in
xor
scas
movhlps
jmp
pushf
adc
addr16
sbb
adc
inc
inc
adc
push
add
test
push
xchg
inc
sbb
aaa
lcall
movsb
sbb
sbb
int3
movsb
out
test
sti
cmp
inc
mov
inc
push
lods
mov
into
lods
in
outsb
adc
jb
jmp
xor
or
mov
es
sub
xor
ffree
mov
ds
cs
adc
lea
push
sub
fldcw
sub
mov
sbb
mov
mov
add
in
add
arpl
mov
mov
xchg
out
add
fwait
xchg
sub
adc
jle
jb
ret
int
mov
jl
add
push
arpl
jb
pop
sbb
push
loop
push
cmpsl
dec
xor
out
cld
push
xchg
aam
aad
mov
aaa
mov
push
daa
sbb
dec
pop
mov
imul
or
fisubrs
mov
inc
pusha
and
loopne
lret
dec
mov
fwait
cmp
cli
in
les
push
in
and
sub
popa
mov
bound
fldcw
insb
cmp
add
insb
enter
fisttps
push
fcoml
push
jmp
mov
sub
outsb
jg
out
adc
ficoms
inc
jns
xchg
and
shufps
imul
shll
repnz
jle
mov
imul
pusha
adc
rorl
aad
bnd
testl
sub
call
or
dec
lds
adc
std
sarl
lods
pushf
push
ret
aam
sub
pop
frstor
xorb
dec
inc
jecxz
enter
pushf
mull
popf
les
jmp
bound
adc
add
jge
loopne
xchg
jo
push
ja
jb
test
stc
lcall
xlat
cli
xor
int3
mov
mov
inc
mov
aas
insb
stc
jl
or
push
push
mov
mov
sub
loop
mov
cmc
loopne
out
pop
pop
shll
mov
insl
popf
movsb
repz
pop
loopne
sub
test
subb
inc
sub
sbb
pop
lea
aas
fs
mov
mov
pop
jmp
ret
in
xchg
and
mov
mov
ret
jg
push
mov
addr16
and
shrb
rcrl
dec
mov
xchg
push
fisubrs
fwait
jbe
and
push
icebp
mov
push
pop
push
mov
ret
loop
adc
mov
jmp
or
andl
mov
and
pop
gs
fsts
push
shrl
ds
pop
mov
aam
out
push
sub
into
inc
add
es
stc
addr16
dec
xchg
sub
sub
sub
das
sbb
sbb
or
addr16
aas
out
sbb
pop
xchg
jge
test
xor
jae
xchg
xchg
jp
frstor
nop
frstor
adc
out
mov
ds
hlt
pop
es
push
call
loop
fdivrl
sbb
xchg
std
iret
pop
adc
xchg
cmp
loopne
add
xchg
add
xor
jae
push
sbb
pushf
fisubl
xchg
add
cmpb
lea
cmp
xchg
mov
pushf
enter
adc
adc
call
or
inc
mov
lock
nop
fdivrl
xchg
rcl
out
nop
mov
cli
push
cltd
xchg
pop
lds
int3
xchg
xlat
lcall
mov
clc
leave
rcrb
push
mov
pop
movsb
jmp
xor
push
out
mov
inc
xor
imul
mov
lret
mov
pusha
and
jo
push
xor
and
imul
push
sbb
lds
mov
outsb
lea
adc
pop
mov
shl
dec
xorl
pushf
pop
or
aam
xchg
inc
dec
pusha
mov
or
enter
pop
rcrl
fdivrs
sub
addr16
mov
sub
aad
fimull
xchg
cmp
jge
mov
push
push
bound
push
iret
es
inc
loopne
sbb
sbb
mov
sti
jno
push
popa
fcoml
cld
mov
icebp
ret
xor
and
call
xchg
cmp
gs
mov
je
scas
in
pusha
mov
dec
arpl
sbb
pop
sub
ret
sbb
repz
dec
inc
mov
in
sub
add
xchg
clc
test
jp
jg
inc
adc
add
mov
fs
pop
in
xor
dec
pop
adc
cmc
push
arpl
sbb
cmp
decl
mov
jp
and
cmp
adc
iret
scas
mov
and
inc
xor
shrl
pop
insb
orl
out
cmp
xchg
jb
mov
jp
repz
ja
js
mov
pop
test
inc
ljmp
loop
add
mov
cmc
or
shl
ret
or
dec
cld
mov
in
ss
mov
mov
xchg
shl
loopne
push
orb
stos
and
hlt
std
aam
mov
adc
pop
xor
jecxz
sbb
subl
add
movsl
filds
mov
in
add
pop
pop
mov
pop
aas
in
pushf
fisttpl
sbb
adc
rclb
ret
dec
icebp
pop
jns
add
les
push
xlat
add
ja
fsincos
inc
cwtl
cmp
repz
xchg
cmc
in
cmp
push
pop
pop
leave
push
mov
jb
push
mov
mov
push
mov
and
insb
jbe
pop
leave
out
xor
cmp
enter
inc
imul
test
sti
mov
fst
ret
in
test
std
jno
pop
lahf
divb
fcoml
or
dec
sbb
jmp
loope
xchg
enter
jl
data16
add
xor
stos
outsb
xor
das
xchg
imull
add
cld
jb
adc
adc
in
xor
pop
out
inc
pushf
and
imul
negl
cmp
mov
jecxz
movsl
and
pop
imul
fwait
adc
movsl
xchg
mov
mov
scas
or
sub
scas
lahf
sub
or
hlt
add
lods
inc
or
fists
insb
std
movsl
cmp
sub
bound
iret
ficomps
aaa
pop
jp
jo
fstl
sbb
jg
pop
cli
dec
mov
icebp
pop
sbb
jmp
bound
mov
inc
out
ljmp
iret
mov
or
data16
cmc
push
test
data16
test
fabs
leave
push
or
lock
pushf
push
pop
popf
xor
mov
loopne
xor
lods
push
movsb
xchg
push
dec
mov
nop
mov
testb
pop
inc
test
cmp
enter
jge
cltd
int
sbb
das
jnp
cmp
stc
inc
ret
sub
clc
sub
arpl
out
add
pop
mov
outsb
cmpl
cmpsb
int3
sub
shll
jge
sbb
inc
jbe
stos
popa
imul
jl
lock
dec
add
adc
ss
stos
dec
sub
xchg
jp,pt
adc
or
pop
add
es
nop
inc
cli
cmp
sub
movsl
pushf
test
push
xchg
jne
fcoms
dec
je
ljmp
in
in
ficoms
jp
mov
mov
dec
or
lret
pop
cmpl
or
dec
jo
ficomps
jmp
std
mov
xor
les
push
out
push
sahf
xlat
add
inc
xlat
cmpsb
arpl
xor
fwait
iret
arpl
cwtl
push
mov
popa
sbb
xor
and
gs
adc
aaa
jge
shll
in
data16
test
call
rcl
loop
out
and
pop
mov
dec
les
scas
push
mov
fwait
dec
imul
test
nop
mov
inc
xchg
lods
push
cmp
aas
push
pushf
adc
xchg
xor
in
clc
mov
jmp
mov
mov
jns
loope
in
mov
push
xchg
sub
mov
sbb
and
mov
aad
xchg
lret
add
push
lods
mov
icebp
push
mov
fisubrl
pop
sub
inc
clc
pop
pop
lcall
mov
sbb
add
sub
pusha
dec
popa
lahf
sbb
pop
pop
lcall
mov
pop
fisttpl
stc
jp
aam
mov
das
pushl
out
cmp
mov
std
cs
dec
mov
jns
popa
inc
adc
and
and
sbb
das
push
add
testl
inc
xchg
mov
xchg
and
add
xchg
jnp
test
loope
lods
in
add
testl
inc
push
cmpsb
ret
jmp
mov
jo
inc
test
mov
popf
ret
jg
xor
scas
out
int
mov
add
clc
push
mov
repz
push
repz
dec
stos
fcmovne
sub
out
test
fstpt
pop
sbb
insl
mov
fildll
test
sub
add
in
inc
leave
mov
dec
decb
aad
insl
sarl
xchg
out
add
pop
out
sti
xchg
in
and
cmp
in
cmpb
mov
ljmp
xor
ss
fs
sarb
clc
gs
test
sbb
pop
fistpll
add
rcl
xchg
mov
mov
scas
jmp
mov
insl
mov
mov
cmova
ret
stc
testb
lods
popf
push
imul
jp
icebp
imulb
xor
bound
pusha
inc
adc
xchg
sbb
mov
mov
inc
mov
inc
fnstsw
mov
xor
stos
xor
xor
push
xor
add
inc
jle
xor
pop
mov
add
out
sub
hlt
mov
ljmp
mov
mov
test
lods
mov
bound
mov
jo
out
pop
mov
pop
mov
das
or
addr16
sbb
or
cmp
jg
addr16
mov
pushf
and
jb
pop
xchg
jbe
mov
fsubs
or
int3
dec
pop
add
jge
sub
outsl
in
mull
fbstp
out
sub
pop
lcall
inc
sarl
ret
enter
hlt
sub
push
repz
enter
mov
adc
mov
sub
adc
pop
pushf
sbb
enter
shlb
sub
popf
mov
cltd
xchg
addr16
fwait
stos
push
or
xchg
push
imul
es
lret
insl
pop
jmp
insb
fstps
cs
ficoms
push
rcll
ljmp
mov
mov
sbb
gs
inc
cmpsb
inc
jge
and
outsb
add
test
push
or
clc
int3
cld
sbb
pop
pop
cmpsb
js
push
pusha
sarl
jno
mov
xchg
imul
mov
mov
loopne
mov
push
movsl
ljmp
or
nop
xchg
cli
mov
mov
push
sti
add
pop
lret
aad
arpl
in
pop
stos
xchg
mov
shrl
push
insl
je
popf
cmp
push
xchg
adc
push
int
cmpsl
lock
mov
jb
xchg
sbb
roll
outsb
dec
dec
daa
arpl
push
sub
xlat
repz
inc
je
fwait
mov
mov
out
fnsave
aad
mov
sarl
ret
jns
jo
push
pop
inc
daa
push
and
int
inc
hlt
mov
and
sbb
ret
pop
mov
pop
mov
inc
cltd
sbb
out
and
inc
insl
pop
ret
add
cmp
pop
cmpsb
cmpsb
int
rcrl
cld
icebp
aaa
je
lcall
lods
push
fdivs
and
addr16
iret
cs
push
stc
add
in
cmc
jmp
fld
nopl
inc
add
xor
mov
mov
sub
xchg
in
dec
push
lods
cmpsl
push
adc
push
aad
mov
cmpsb
ljmp
add
sub
mov
fisubrl
mov
lods
sub
inc
mov
fwait
inc
mull
add
and
ror
push
shll
loop
cmp
ret
jg
test
inc
jmp
mov
xlat
shlb
push
sub
fcmovu
pushf
dec
roll
test
dec
es
mov
mov
mov
xchg
fnstenv
jne
cmp
mov
gs
lds
pop
mov
call
sub
jmp
jbe
orl
int
clc
pop
out
add
cs
cltd
push
cmp
inc
mov
adc
jl
mov
pusha
xchg
or
scas
lret
notb
hlt
lcall
loopne
inc
xor
dec
mov
cwtl
popf
mov
or
or
aam
mov
xchg
lea
arpl
out
movsl
push
dec
sbb
and
xchg
or
mov
movsb
scas
push
sbb
lret
fwait
cs
lahf
arpl
fs
inc
xor
lds
jae
addl
mov
jae
cmpsb
mov
cld
aas
sahf
push
sub
idivb
into
loope
hlt
and
lea
sub
push
shl
dec
mov
xlat
ds
and
cwtl
push
jle
xchg
mov
mov
push
cmp
out
icebp
xor
jg
setno
clc
sahf
mov
sub
add
sub
mov
movsl
inc
loop
add
fsubs
mov
xlat
dec
mov
or
xchg
xor
mov
or
gs
push
mov
ljmp
lock
and
inc
fs
sti
ret
jp
pop
negb
sub
and
addr16
jmp
lret
aaa
dec
add
dec
aas
mov
add
out
xor
cmp
sahf
insl
mov
into
mov
ds
dec
imul
clc
mov
fisubrl
loop
and
data16
pop
test
jo
lcall
fwait
in
inc
mov
imul
jae
push
pop
xchg
and
in
lret
add
int3
sbb
lea
aad
shrb
xor
sbb
sbb
xor
sub
jg
push
pop
push
call
pop
inc
inc
add
imul
pop
stc
adc
cmc
lahf
dec
ljmp
or
xchg
les
or
mov
in
lahf
outsb
or
mov
adc
jne
dec
push
movsl
in
les
adc
inc
sub
xor
xchg
mov
jae
sub
adc
cmp
mov
dec
dec
dec
icebp
gs
divl
sti
sub
inc
cmp
cld
popf
nop
xchg
sbb
xchg
lea
sub
add
cmpsl
sbb
pmullw
pop
pop
pop
rcr
inc
jo
xor
test
stos
mov
int
test
lods
push
aaa
pop
bswap
cs
and
js
dec
fistpl
in
pushf
lock
adc
inc
cmp
cld
repz
rol
push
sar
mov
push
sahf
stos
clc
cmp
push
enter
pop
ret
faddl
xor
inc
push
jle
insl
les
mov
xchg
lcall
fistps
fisubrl
xor
xor
jns
dec
popa
jbe
lahf
dec
out
jecxz,pt
jg
imul
pushf
and
std
and
sti
mov
aas
jmp
mov
push
stos
cmpsl
loopne
xor
js
push
sub
insb
adc
mov
clc
repnz
lods
scas
cmc
xor
dec
mov
inc
xchg
test
xchg
dec
mov
xchg
mov
push
test
sbb
sub
dec
std
jno
or
pop
pop
mov
mov
neg
mov
loope
inc
cmpsb
std
negb
outsb
rolb
cli
daa
inc
jmp
mov
fsts
test
aas
mov
xchg
lds
sbb
imul
lret
push
mov
out
scas
cmp
sub
aad
and
xor
ret
adc
daa
cmp
inc
sub
fdivrl
push
jl
cs
jecxz
push
add
je
decb
add
jne
out
mov
cmp
ret
fbld
leave
adc
xor
sub
xor
push
shlb
hlt
lods
sub
mov
in
cs
cmpb
adc
adc
or
push
sub
daa
sub
cmp
jae
push
roll
sub
push
jns
push
sub
std
not
dec
aad
mov
push
sub
cmp
mov
sub
mov
inc
jecxz
out
ja
xchg
out
sub
cmp
xchg
dec
adc
lock
sbb
insl
insb
popf
hlt
in
mov
xchg
out
insb
fiadds
pop
jmp
fcoms
pushf
pop
sub
mov
rclb
mov
xchg
nop
imul
jns
lods
push
sti
xchg
outsb
xor
out
push
repnz
dec
lds
pusha
daa
cmp
lret
cld
addr16
je
inc
outsb
js
adc
sbb
nop
cltd
sub
imul
pop
jnp
cmp
push
jge
testl
sbb
pop
xchg
sti
nop
cmpsb
nop
imul
pop
xor
decb
jmp
int3
mov
adc
xchg
pop
out
pop
add
xlat
rorb
dec
pop
adc
out
movsb
fnstcw
cmpsb
or
jmp
popf
push
test
push
es
stc
sub
mov
fsubrs
cmpl
loopne
loop
aad
clc
hlt
inc
ret
cli
mov
movsb
iret
jns
out
mov
ret
sub
inc
sahf
cwtl
jge
xor
movsb
lret
inc
adc
cmpsb
xchg
mov
fs
or
sub
pop
inc
cld
mov
mov
addr16
rorl
les
jno
enter
cmp
ljmp
shrl
mov
inc
lods
bound
shll
cmp
adc
dec
push
push
pop
and
cwtl
xor
mov
aaa
sbb
xchg
stos
in
jl
mov
jae
lret
or
rorl
mov
pushf
ret
and
lret
sbb
fs
xor
cwtl
outsl
mov
mov
xchg
iret
enter
push
rcr
mov
and
test
dec
xor
out
js
sub
jb
sbb
or
out
mov
insb
sbb
cmpb
inc
adc
js
loop
in
pop
jbe
bound
xchg
test
mov
xchg
imulb
mul
xor
sub
dec
fdivr
cmp
call
ja
test
jo
or
xor
mov
adc
pop
loope
inc
dec
adc
inc
imul
decb
mov
mov
movhps
push
das
cmpl
loop
outsb
shl
out
pop
sahf
sub
jle
jns
mov
imul
shlb
bound
or
xchg
dec
mov
push
fisubrs
outsl
sti
ret
imul
out
inc
mov
mov
jg
dec
out
xor
xor
cmp
test
imul
push
pop
pop
xor
inc
mov
cmpsb
or
imul
ret
adc
out
inc
jmp
lahf
mov
movsl
dec
mov
fwait
dec
and
jmp
xor
vunpcklps
add
orl
sarb
outsb
add
mov
mull
dec
add
repz
shr
pushf
sbb
and
ret
data16
or
xor
nop
ret
sti
add
inc
mov
jle
mov
mov
popf
dec
xlat
frstor
xchg
mov
js
or
xchg
pusha
test
mov
fcomps
inc
or
ja
fistl
in
pop
mov
push
cmpsb
test
mov
aam
pop
mov
mov
ret
adc
xor
jbe
les
lcall
vxorps
mov
sbb
aad
arpl
add
in
mov
adcl
aaa
aam
cmpsl
incb
adc
push
dec
pop
movsb
imul
ret
out
mov
xchg
sbb
insb
mov
sub
sbb
xchg
fiadds
lea
push
loope
mov
int3
cmpsb
xor
xor
into
out
pop
sbb
and
sbb
sbb
xor
ret
nop
movl
movsb
dec
push
mov
or
cltd
lock
icebp
out
outsl
sub
test
das
xchg
mov
fdiv
cltd
jo
mov
loopne
int
in
ds
xor
mov
fs
xchg
shll
scas
xchg
xor
aam
mov
cmp
sub
lds
mov
fcoms
iret
popw
jno
sub
test
xor
aad
loopne
jg
dec
fsts
aaa
xor
pop
sbb
cmc
cmp
cli
and
jae
leave
in
and
inc
cmp
xchg
mov
outsl
lock
or
xor
push
movsb
sub
or
xchg
xchg
outsl
cmp
mov
sub
mov
in
in
sbb
xchg
sbb
repz
inc
jb
pushw
cmc
dec
jo
mov
into
mov
das
ja
stos
jmp
adc
cmpsb
and
inc
mov
adc
and
xor
mov
push
sbb
es
shrl
shll
inc
enter
rorb
inc
insl
mov
sub
cmp
mov
and
push
inc
shrb
outsl
loope
jns
mov
xor
jge
adc
mov
hlt
xlat
repz
sbb
mov
dec
cmp
inc
push
push
push
mov
jbe
mov
xchg
inc
stos
pop
mov
sbb
sub
mov
dec
lods
xor
lea
jo
ret
cltd
xchg
sbb
je
cmp
lcall
loope
sub
jge
cwtl
js
add
dec
stc
and
ffree
cmp
or
out
push
scas
mov
and
xchg
loopne
rcrb
cmpsl
iret
ficomps
incb
pop
mov
pusha
aad
aas
ret
imul
fs
data16
cmpsb
mov
gs
push
out
mov
pop
orl
es
add
les
cwtl
test
sub
xor
in
mov
gs
cltd
xchg
pop
jne
hlt
mov
add
pop
into
inc
cmp
loopne
adc
sub
or
jl
and
loop
jae
dec
xlat
mov
mov
shl
in
mov
mov
adc
sbb
mov
cs
lcall
div
in
mov
jecxz
ljmp
xor
jle
jge
push
in
push
push
sti
icebp
dec
fsubl
or
iret
or
pop
xchg
add
enter
insl
add
sbb
fbld
or
sbbb
imul
xchg
pop
in
leave
add
xchg
add
outsb
ret
sbb
repnz
mov
int
scas
aas
xchg
mov
cmp
stos
outsb
xor
cmp
loop
shlb
push
xor
movsb
pop
add
cmp
xor
add
cmp
mov
pop
lret
xchg
cmp
lret
stos
shr
sahf
xor
adc
push
cmp
xorb
cld
sub
sub
jns
and
pusha
jns
pop
ljmp
mov
adc
cld
add
and
mov
sub
pushf
pop
in
mov
mov
or
dec
sbb
inc
mov
mov
dec
or
sti
xchg
inc
mov
in
jae
xor
jne
jp
sbb
call
test
inc
lcall
pop
and
xchg
fadd
leave
idivb
addr16
out
int
and
lods
mov
xor
xchg
shll
push
mov
jbe
xor
sar
hlt
xor
push
mov
in
xor
and
xlat
xor
mov
mov
cmc
fld
movsb
xor
and
push
call
repnz
bound
xor
xor
sub
out
xchg
dec
adc
sahf
jmp
push
dec
xchg
pop
hlt
cmc
push
pop
push
iret
jmp
decl
adc
daa
xchg
out
arpl
test
add
xchg
lds
in
adc
push
hlt
mov
outsb
ret
insb
jge
inc
push
out
lea
ficompl
cmp
jl
jbe
jae
fninit
mov
aad
mov
push
mov
xor
test
pop
push
cmp
cmp
gs
push
sub
mov
ret
push
mov
int
pop
and
dec
add
popa
icebp
insl
ljmp
xor
lock
in
je
dec
orl
inc
dec
pop
lcall
xor
mov
push
or
or
lea
popa
mov
sbb
push
mov
aad
inc
add
test
inc
push
jle
daa
cltd
xchg
popa
icebp
cmp
xor
popf
sbb
cmc
lcall
pop
sbb
rclb
push
pop
pop
jecxz
sub
jnp
cmp
or
shrl
dec
add
fbld
cltd
ret
pop
insl
mov
mov
jo
mov
push
push
sub
mov
jnp
stc
fimuls
adc
xchg
mov
cmp
into
hlt
push
xorl
inc
bound
cli
add
push
xlat
mov
mov
xchg
mov
ljmp
ds
push
adc
dec
jnp
push
ret
cltd
mov
cmp
pop
xchg
cs
mov
out
sub
outsb
sub
jg
inc
fs
pop
xchg
cmp
popf
mov
push
bound
mov
lret
jp
mov
dec
pop
cmp
xchg
jnp
cmpl
sub
iret
scas
je
pop
add
rol
sub
xchg
cs
addr16
dec
fisttpl
lods
add
in
mov
sub
leave
add
xchg
or
mov
mov
sub
sub
js
jle
push
jmp
mov
cld
jl
jno
xchg
hlt
movsb
adc
sub
shlb
dec
mov
aaa
adc
cmpsl
cmp
push
cltd
mov
aad
mov
pop
stos
mov
stos
dec
imull
dec
jp
mov
mov
push
cwtl
sti
xor
loopne
sbb
aas
cmp
jmp
imul
push
sub
aad
fildll
je
push
sub
addr16
push
cmpsb
pop
fistl
and
xor
scas
sbb
cmp
ja
fisubrl
inc
adc
pop
jmp
or
out
lea
out
orl
xchg
lahf
fidivl
or
mov
sbb
adc
dec
jmp
subl
jnp
shlb
cmc
out
cltd
fisttps
sbb
repz
out
fwait
add
mov
adc
xor
pop
daa
loop
adc
outsb
dec
iret
dec
push
mov
xchg
mov
or
fnsave
push
pop
xchg
mov
or
loopne
int
in
enter
movsb
or
xchg
adc
clc
fldl
lahf
jmp
inc
mov
and
sbb
jo
inc
gs
decb
fistpl
fistpll
bound
outsl
pop
in
ss
fisttpll
pop
leave
leave
js
lods
xchg
sti
aaa
mov
lods
sbb
jbe
mov
mov
test
jg
push
iret
mov
push
mov
mov
jmp
orl
sbb
inc
incl
or
lock
cld
xor
cld
cmpsb
dec
inc
mov
lret
pop
loopne
fsubl
lods
sbb
xor
in
mov
jl
jp
push
sbb
mov
xchg
mov
xor
outsl
stos
xorl
cmp
fmull
cld
xchg
daa
pop
dec
lods
mov
or
mov
cmpsl
xchg
and
adc
push
inc
mov
sub
pop
hlt
movsl
lods
repz
mov
mov
jp
imul
rcll
inc
test
cmp
cltd
and
aas
pop
repnz
in
xor
dec
das
sahf
push
mov
adc
outsb
jmp
call
sub
jbe
lcall
in
in
mov
insb
cld
sbb
inc
stos
test
movsb
ljmp
jne
inc
leave
insb
int3
or
arpl
leave
pusha
ficoml
in
scas
jnp
mov
dec
enter
jb
pusha
imul
and
lds
jecxz
jmp
ljmp
push
aas
in
cmp
pop
jl
outsl
dec
lret
daa
cmp
adc
xor
xchg
push
cli
sti
std
nop
adc
add
mov
inc
ja
sbb
xor
lock
cwtl
pushf
sbb
mov
push
insb
xchg
xor
pop
aam
add
xchg
add
pop
mov
mov
add
test
push
mov
cmpsl
mov
cmpb
rorl
pop
out
insb
aad
orl
xchg
scas
jmp
jo
xor
cmp
divl
shl
xchg
inc
pop
call
pop
fimull
mov
rorb
int3
gs
dec
dec
dec
loopne
outsb
mov
enter
mov
and
jmp
jnp
stc
xor
sbb
jl
jge
scas
pop
cli
xor
or
andb
movsl
das
sarl
mov
lcall
and
pop
leave
in
sarl
xor
push
inc
mov
ljmp
popa
imul
sub
mov
insl
pushf
pushf
test
cmp
lahf
nop
adc
add
rcll
lea
nop
filds
fisttpl
shll
mov
mov
jmp
cmc
jno
and
and
leave
dec
out
jmp
push
dec
cmpsb
lods
enter
xchg
std
fimuls
adc
aam
scas
jbe
mov
pushf
sbb
and
jle
push
push
xchg
mov
imul
sub
pop
mulb
les
lahf
cmp
dec
push
mov
test
lret
leave
cmc
mov
mov
and
or
test
push
out
insl
mov
mov
data16
jg
lea
add
mov
mov
cmp
out
mull
lret
movsb
stc
inc
sub
mov
or
pop
es
jmp
pop
xor
and
and
aad
roll
mov
xchg
sbb
dec
pop
sarl
mov
les
push
add
lret
and
pop
xlat
or
xchg
jae
in
push
inc
add
or
mov
cmp
lds
mov
xchg
outsb
and
mov
cmpsl
cmp
mov
or
jle
daa
movsl
inc
or
push
in
ret
out
bound
mov
mov
mov
outsb
sbb
jnp
push
dec
mov
int3
jno
mov
add
decl
sbb
pop
xchg
push
cltd
out
and
paddsb
sarb
sbb
or
jae
add
xlat
call
in
stos
iret
pop
inc
or
movsl
loop
mov
sub
icebp
dec
sub
lcall
mov
sub
mov
aas
jb
adc
inc
sub
add
xor
inc
call
mov
mov
lret
bound
pop
mov
ret
push
add
cwtl
call
push
je
dec
mov
mov
mov
aas
cmp
pushf
cmc
repnz
iret
or
inc
cmpsl
or
xchg
push
xchg
loopne
in
scas
outsb
loope
jb
xor
mov
or
lock
add
jl
shl
stos
dec
pop
sahf
push
jae
jnp
push
outsl
mov
push
jmp
sbb
jno
and
sub
inc
xchg
fsubl
add
add
outsl
dec
inc
test
andl
jl
loop
gs
adc
fdivrl
aas
xchg
mov
lds
repz
xchg
jg
int3
push
adcb
insl
push
mov
insl
inc
ret
and
pop
divl
daa
mov
cmp
jbe
dec
out
test
xor
or
push
adc
lahf
pop
jae
aam
out
or
stos
push
pop
shll
and
mov
sbb
les
aam
mov
adcl
aaa
ds
pop
shl
and
xor
xchg
invd
push
adc
dec
push
push
rolb
sahf
mov
xchg
mov
adc
shrb
das
cmc
ficoml
adc
and
in
xor
ret
mov
sub
mov
sbb
push
js
push
sub
cmpsb
pop
cs
sub
jae
push
adc
pop
fnstcw
ret
or
xchg
outsl
cwtl
outsl
in
rcrb
hlt
mov
push
fcoml
mov
jo
mov
inc
nop
incb
cmp
mov
pop
xchg
mov
pop
xchg
pop
das
nop
hlt
adc
xor
int3
xchg
fcoml
and
pop
xchg
aas
pop
xchg
push
push
int
mov
mov
rcl
sahf
dec
bound
mov
mov
dec
mov
inc
inc
sbb
or
outsb
lods
or
leave
mov
pop
mov
lahf
iret
adc
insl
out
loop
test
sub
arpl
sub
test
xor
sbb
dec
add
das
lods
popa
jl,pn
inc
fs
aam
icebp
dec
sub
cmp
out
adc
in
ret
addr16
xchg
pop
xchg
jb
loope
push
lods
lock
mov
sbb
inc
and
jmp
popa
negb
arpl
mov
rcrb
fs
cmp
inc
lea
or
fidivs
adc
outsb
repz
out
xor
xor
inc
scas
xorb
ljmp
fisubrs
imul
popa
mov
mov
sub
scas
xchg
inc
mov
ss
push
fs
ror
sbb
sub
dec
loop
stos
sbb
stc
push
mov
std
cwtl
mov
inc
jmp
movsl
int
dec
leave
insl
mov
lds
add
xor
mov
xchg
push
repz
call
hlt
dec
dec
insl
test
lods
mov
mov
mov
hlt
lock
push
push
mov
loopne
xchg
push
xlat
stc
int
push
inc
or
cmp
fwait
mov
mov
testl
cmpsb
dec
pop
and
nop
movsb
je
fs
outsb
lahf
lahf
xchg
sti
inc
das
xor
inc
pop
mov
popa
pop
push
subb
add
mov
cwtl
push
push
or
dec
loope
inc
pop
cli
iret
popf
xchg
sti
xor
fimull
out
cmp
rcrl
jl
mov
test
call
cmp
adc
xchg
sbb
daa
adc
add
fstpt
jo
arpl
popf
xor
mov
insb
dec
ficoml
std
and
jne
fisubl
dec
jle
mov
cwtl
stc
sub
movsb
or
inc
and
divl
push
ss
in
bound
sub
aaa
lret
inc
xchg
pop
cmp
ficompl
ja
xor
dec
sub
cmp
je
aaa
sbb
push
and
lret
mov
lods
xlat
jae
es
adc
arpl
xor
sbb
xor
divb
inc
inc
lods
insb
mov
xchg
insl
and
add
hlt
lds
enter
call
pushf
pop
je
out
mov
and
ret
adc
in
jg
hlt
outsl
mov
out
clc
int3
mov
xor
push
push
jp
mov
je
mov
push
imul
cmp
or
add
fs
or
fcomps
add
cmpsl
insb
jmp
popa
ss
dec
pop
mov
cmp
pop
int3
ficoms
aam
mov
mov
mov
push
int3
and
mull
movsl
mov
push
lods
test
pusha
shlb
xlat
mov
mov
sbb
push
iret
sub
adc
mov
push
testl
mov
js
cli
xchg
jp
int3
mov
int
inc
push
repz
lea
std
les
popf
inc
stos
int3
pop
jne
push
xor
pushf
jne
lds
pop
iret
out
xchg
mov
adc
shlb
push
mov
daa
test
into
negl
push
jge
adc
push
cs
rcrb
jl
xchg
mov
fcmovu
push
call
mov
pop
push
arpl
dec
cmpsb
push
nop
pop
mov
imul
dec
mov
xor
dec
mov
push
push
mov
ret
pop
cs
pop
pop
jae
and
std
xchg
lods
insb
decb
sub
add
shll
fldenv
xchg
cmp
xlat
inc
and
ja
push
loopne
xchg
cmp
outsl
jg
dec
push
rcll
pop
js
mov
jg
or
pop
mov
adcb
push
add
cmp
push
cmp
inc
cmpl
les
mov
pop
lret
std
xchg
pop
push
push
dec
or
mov
arpl
aaa
shrb
leave
cmp
xchg
scas
xchg
sahf
and
lcall
arpl
xchg
mov
test
pusha
jecxz
jle
fstps
sub
mov
call
popf
mov
int
movsl
ret
pushf
leave
cmpsl
pop
sub
sbb
outsl
mov
movsb
or
insb
mov
movsl
ret
jne
idivl
rorl
nopl
cmp
push
inc
xchg
fildll
imul
jmp
dec
push
outsb
iret
stc
in
cmp
js
xchg
jge
adc
std
test
lods
fsincos
sub
fisubs
mov
add
or
imul
cltd
sbb
sbb
pushf
xchg
xchg
incl
xor
mov
movsb
jbe
int
xchg
dec
xchg
in
int3
and
mov
xchg
xorl
and
mov
out
inc
sbb
adc
mov
lcall
and
ja
enter
sahf
lcall
cwtl
movsl
subb
dec
out
xchg
nop
mov
dec
jle
jns
ss
popa
fadds
ljmp
pop
pop
fmuls
inc
pop
mulb
push
pusha
push
mov
cmp
daa
popa
pop
mov
jns
xorl
push
repnz
xor
xor
cmp
dec
pop
jg
ret
insb
jg
mov
jmp
jbe
in
sbb
sub
roll
adc
fucomi
je
dec
cmp
addl
and
mov
sbb
es
test
ret
nop
lcall
lea
jae
add
or
shlb
fidivs
shrl
add
lret
pop
call
out
ss
dec
stos
popa
pop
fdivrs
sbb
sbb
in
in
pop
stos
das
in
movsb
fisttpll
sbb
or
mov
popf
iret
fcmovnb
outsb
push
in
mov
pop
push
sub
test
gs
stos
arpl
out
push
loopne
mov
mov
sbb
pushf
ficomps
jg
and
subl
add
jbe
xor
mov
dec
pop
and
adc
cli
das
cmp
outsl
std
insl
sub
dec
mov
jg
ffree
xchg
and
lcall
pop
test
mov
fcompl
stc
jns
push
pop
jae
cli
lds
jnp
ret
fs
into
jno
cmp
and
std
xor
outsb
or
inc
mov
outsb
push
xor
insl
jo
call
mov
ret
mov
mov
jp
dec
pop
adc
push
ja
test
jecxz
adc
stos
lods
loopne
fwait
or
in
sbbb
clc
sbb
adc
sub
insl
sahf
ret
mov
scas
mov
xor
push
aam
mov
imul
jmp
outsb
enter
jge
out
neg
xchg
xor
mov
sar
iret
cmpsl
in
pop
movsb
or
ds
je
sbb
aaa
movsb
adc
mov
pop
push
xor
inc
jg
mov
adc
movsb
ss
shlb
xor
sbb
jg
insl
sti
lahf
push
into
fmuls
xor
lods
jae
or
dec
test
xchg
mov
cmp
pop
insl
je
fcoms
or
leave
orl
adc
fimull
or
aas
sbb
fs
pusha
out
in
test
jp
add
sbb
mov
je
add
inc
outsl
jg
mov
jle
repz
mov
fs
or
stos
and
xchg
xchg
or
mov
arpl
imul
adc
inc
mov
xor
pushl
ljmp
cmpb
lds
hlt
dec
mov
enter
pusha
mov
xchg
fcomps
imul
jno
jmp
xor
adc
cmp
mov
leave
or
xor
ds
mov
jmp
xchg
or
out
and
fsubl
bound
and
add
rolb
pop
add
mov
daa
and
or
filds
nop
cmp
lds
scas
sbb
out
pop
mov
out
mov
test
inc
outsl
movsl
jmp
in
pop
imul
js
adc
out
jge
pop
cmp
movsl
fsts
inc
rclb
pop
roll
push
popf
jmp
mov
or
mov
xchg
fwait
ret
push
gs
jl
sub
xchg
push
popf
jmp
cmp
xor
scas
loope
sahf
in
imul
adc
adc
out
mov
jne
cmpsl
jl
pop
es
stc
shrb
in
sbb
ret
aad
sbb
xor
sbb
mov
stos
inc
movsl
xlat
lahf
lret
fsubs
scas
adc
into
mov
gs
xchg
inc
push
out
std
cs
daa
rorb
fwait
mov
es
add
inc
push
scas
mov
test
jmp
sbb
or
jns
or
adcb
mov
sahf
fwait
stos
xchg
xor
test
bound
ret
jne
jnp
arpl
popa
fwait
push
sub
add
cmp
push
jl
lods
cltd
mov
sahf
push
and
pop
mov
ret
and
jmp
fdiv
hlt
fistl
bound
in
mov
stc
and
mov
push
push
fs
pop
arpl
cmpl
cmc
jnp
sti
cmp
jecxz
sub
daa
enter
mov
mov
mov
push
in
gs
cmp
add
out
loop
les
or
out
jae
into
lds
lods
lea
jbe
xchg
or
aaa
jae
arpl
dec
fadds
in
mov
inc
pop
push
call
sbb
leave
js
pop
dec
cmp
or
lahf
je
fstpl
insb
int3
gs
testb
loop
inc
ret
xor
cs
mov
out
xor
enter
pop
lret
mov
cmp
sbb
out
into
leave
cli
fnstsw
push
pop
mov
cmp
mov
sarl
adc
in
mov
pop
shrb
cmp
rep
adc
loope
icebp
loop
outsl
or
dec
movsb
and
pop
rcrb
lcall
pop
cmp
dec
sub
ljmp
inc
movsl
jge
add
arpl
leave
test
xor
fs
inc
mov
inc
mov
inc
push
xor
xlat
std
fistl
inc
and
add
test
cwtl
sahf
sbb
addr16
jg
xchg
imul
xchg
jecxz
or
dec
pop
mov
mov
or
xor
lods
pop
or
jmp
insl
call
xor
pop
jp
fwait
imul
lock
addr16
fnstcw
jne
test
data16
insl
mov
fs
push
pop
in
stos
addr16
pop
in
inc
test
sbb
adc
hlt
add
test
movsl
mov
cmp
outsb
cli
cmc
jnp
call
iret
movsb
fsubs
pop
or
inc
or
cmp
imul
daa
xor
inc
and
jp
inc
je
movsb
pop
xchg
mov
loop
clc
mov
fcoms
mov
push
push
sub
imul
aas
aam
out
xlat
es
jo
mov
cmpsb
nop
dec
mov
sti
fcoms
or
adc
repz
ljmp
test
popa
add
mov
aam
repz
cli
stc
daa
and
std
lea
scas
sbb
dec
loopne
jb
fwait
cmpsb
testb
jecxz
cld
adc
mov
insb
sub
jne
dec
call
mov
mov
ret
ja
shrl
dec
sarb
xchg
adc
cmpsb
fwait
sbb
loop
adc
xchg
cmp
or
cltd
cmc
cli
enter
push
jae
adc
mov
jecxz
xchg
mov
cmp
sbb
rcrb
movsb
xor
dec
and
cmpsl
data16
cmp
or
jno
xchg
aam
out
les
mov
cmpb
pushf
ret
stos
aaa
mov
insb
pop
push
test
push
idivl
mov
xchg
push
push
mov
orl
mov
pop
outsb
sub
jg
into
outsb
cltd
insl
mov
dec
fsts
out
sub
jo
adc
scas
or
mov
inc
ds
in
mov
cmp
leave
dec
out
or
pushf
push
sub
cwtl
push
dec
mov
out
mov
setns
stc
cmp
cmp
pop
lock
adc
insl
sub
and
fistpl
andb
je
xor
test
js
js
jg
ja
data16
fisttpll
addr16
subb
fimull
inc
imul
dec
sub
hlt
and
add
inc
aaa
stos
loopne
push
scas
scas
repz
sub
mov
pop
push
pop
inc
xchg
push
inc
mov
in
jbe
jae
fwait
rcrb
imul
xor
and
repnz
test
pusha
test
lds
out
jg
add
imul
or
cltd
inc
cmp
and
cmc
das
int3
xchg
popa
dec
cmp
inc
rolb
mov
sbb
pop
sbb
ret
sahf
adc
leave
mov
int
cmp
dec
inc
fdivrs
jmp
stc
in
add
mov
mov
pop
into
pop
pop
pop
in
mov
pop
dec
repz
fs
outsl
inc
cmc
dec
or
xchg
popf
ret
out
xor
pop
xor
cmp
jbe
repz
lods
sub
add
sub
xor
mov
inc
xchg
loope
jecxz
sbb
dec
aas
xor
lock
lds
rcrb
sbb
push
sub
sarl
jno
sub
jecxz
movsl
pop
daa
mov
dec
mov
push
mov
mov
mov
mov
jl
and
mov
xor
adc
setle
adc
xchg
cwtl
or
xchg
lods
mov
icebp
jmp
or
jb
dec
js
mov
jge
dec
pop
jecxz
cld
or
aas
add
push
rcrb
loope
jns
mov
mov
scas
into
xor
data16
xor
aad
xor
mov
arpl
ret
cmp
enter
mov
mov
sahf
mov
jbe
call
cmc
sbb
ljmp
shrb
sti
iret
aaa
sti
cltd
and
push
sub
es
divb
mov
jle
cld
xor
mov
sar
fwait
jns
mov
jns
cltd
push
loope
das
or
add
sub
pushf
iret
cld
sub
aam
pusha
insl
dec
mov
cli
jo
sbb
push
lods
jo
fs
je
mov
push
or
adc
cmp
xor
or
je
push
mov
mov
test
push
aas
icebp
xchg
pop
push
sbb
dec
push
cs
les
imul
sti
pop
insl
mulb
push
mov
or
popa
sbb
leave
inc
pusha
in
ret
les
add
mov
lahf
cmp
xchg
std
dec
jge
mov
loop
in
fstpt
cmpsl
pop
pop
push
xchg
fs
jbe
jg
cmp
push
mov
mov
iret
mov
add
sti
es
jg
pop
jnp
sahf
fildll
jae
popf
mov
adc
scas
rol
mov
ja
sbb
fstp
test
aas
fisttpl
jmp
cmp
je
xchg
jp
mov
mov
adc
sbb
mov
sarl
add
mov
in
xchg
cmp
jb
cld
lea
popf
mov
push
mov
fildll
xchg
hlt
in
sbb
call
iret
sbb
dec
jmp
jmp
lcall
mov
imul
mov
and
pop
adc
imul
pop
das
orb
jns
es
movsb
mov
jecxz
xor
jl
scas
mov
cmp
into
lock
mov
and
fs
iret
adc
xlat
sbb
cmp
ds
xchg
cmp
shrb
push
inc
arpl
imul
push
push
dec
call
loopne
lods
hlt
pushf
mov
inc
outsl
test
push
jbe
dec
js
xchg
add
sbb
mov
aad
jecxz
shrl
inc
xor
ljmp
js
mov
das
or
mov
imul
mov
mov
jge
fldt
data16
icebp
or
and
mov
jb
hlt
sbb
jbe
cmp
mov
mov
aam
repnz
roll
lods
pop
lock
adc
insl
imul
push
push
lret
es
cmpsb
pop
mov
sti
in
push
xchg
xor
xor
cmp
sub
jl
repz
jbe
movsb
outsl
inc
dec
jae
jge
push
xchg
inc
mov
add
clc
pushf
cmpsb
lods
addb
adc
loop
repz
fadds
repnz
imul
movsl
jne
sahf
in
xchg
popf
add
lea
rorl
jmp
jae
mov
and
adc
imul
dec
fs
and
xor
popa
mov
push
sbb
mov
cmp
cmp
sub
lds
add
loope
cmpsl
and
mov
adc
rclb
mov
jnp
inc
shrl
pop
adc
ja
jns
jns
sub
sbb
inc
cmp
xchg
xor
cmc
add
les
repz
testl
dec
pop
daa
repz
add
repz
gs
adc
and
pop
pusha
out
mov
cmpsb
jl
xchg
and
rclb
bound
mov
push
xchg
mov
aad
int
lcall
dec
shlb
pop
out
push
pusha
mov
ja
lds
xchg
dec
hlt
sahf
cmpsl
cltd
sti
fcmovu
js
mov
lret
fldt
add
add
mov
mov
mov
xchg
imul
sti
imul
and
mov
mov
jne
xchg
adc
pop
push
test
push
mov
ret
mov
scas
aad
rolb
je
push
imul
fisubl
mov
push
mov
lods
insl
mov
and
xchg
mov
stc
and
adc
xchg
ret
mov
jmp
jne
daa
rcrb
lcall
cli
and
int3
jmp
das
js
push
pop
mov
push
pop
movsl
aam
andb
icebp
mov
iret
jno
add
xor
mov
imul
mov
sub
lret
popa
xlat
pop
and
add
cmp
outsl
in
sub
fidivs
dec
jle
add
test
inc
hlt
js
or
mov
sbb
xchg
or
decb
lea
inc
xor
fnstsw
sahf
leave
lea
pop
xor
ror
mov
pop
out
mov
or
sub
lds
push
lods
lds
xor
cmp
inc
andb
mov
loopne
inc
adc
mov
pop
cltd
pop
icebp
or
rcrb
pop
arpl
shl
inc
cmp
das
loop
ficoms
mov
in
mov
movsl
outsl
jnp
dec
lods
popa
sub
in
push
roll
bound
jp
push
jns
mov
add
jno
lcall
xchg
daa
and
pop
out
dec
dec
int
push
cltd
negb
mov
mov
push
fs
add
and
mov
gs
add
add
jmp
or
xchg
pushf
inc
sti
scas
movsb
xchg
and
xchg
mov
mov
xor
mov
jg
mov
sub
push
int
jno
ud1
lret
mov
adc
add
push
and
mov
imul
fiadds
pushf
sbb
ds
std
mov
and
loope
repnz
mov
cmpsl
inc
push
mov
add
adcl
les
loop
rorb
cmp
neg
andb
jge
call
cli
cli
jnp
out
insb
pop
ret
push
push
cmp
test
stos
in
ljmp
fisttps
ds
mov
stos
jb
loopne
dec
mov
pop
cmp
aad
pop
mov
fwait
inc
movsl
cmp
fxtract
push
dec
pop
jmp
jl
addr16
adc
push
xor
jns
cmpsb
mov
xchg
mov
adc
in
ljmp
pop
inc
jle
cmp
scas
mov
adc
or
repnz
jecxz
or
mov
xlat
popa
repz
and
mov
sbb
ret
fsubrs
pop
repz
cmp
pop
daa
popl
sbb
and
sarl
mov
xchg
mov
push
aam
arpl
adc
sub
mov
add
jg
inc
jle
dec
jmp
sub
in
dec
lcall
lret
or
push
xchg
scas
inc
pop
xchg
cwtl
iret
sti
es
dec
cmp
xchg
push
lahf
adc
mov
xor
bound
arpl
push
out
repz
and
int3
jp
sbb
daa
outsb
add
hlt
scas
rcrl
xor
jb
pusha
fldt
adc
shlb
jmp
mov
ret
enter
mov
pop
out
hlt
mov
cwtl
fidivl
jno
lock
clc
in
jge
dec
sti
jo
mov
add
or
xchg
int3
scas
data16
cs
or
rorl
pushf
loope
mov
lods
test
test
pop
test
loop
loop
push
push
mov
xor
xlat
inc
fnstenv
jge
adc
xchg
dec
jmp
ds
pushf
xchg
jmp
arpl
imul
mov
loop
xor
cmp
sub
cltd
cmp
mov
sbb
jbe
call
fucomp
movsb
pop
dec
push
insb
int3
dec
ljmp
ja
gs
jecxz
arpl
adc
pop
cltd
push
ret
leave
mov
dec
adc
sub
adcl
mov
jl
add
mov
push
push
lock
adc
repnz
mov
push
cli
out
repnz
pop
pop
movsl
push
call
test
dec
imul
dec
mov
and
sahf
and
jno
gs
lds
pop
daa
roll
mov
rep
subl
dec
stc
fucomi
jecxz
push
mov
loop
test
xchg
les
dec
stos
xor
notb
lret
lcall
xchg
push
mov
xchg
dec
pop
jb
repz
or
scas
movsl
rcr
addr16
iret
and
rcrl
daa
xor
in
dec
mov
fildl
jl
shll
inc
sbb
les
or
imul
iret
inc
jbe
rol
test
stos
xchg
leave
mov
cmp
xchg
pop
imul
adc
xchg
decl
aas
bound
int3
sub
imul
mov
ljmp
and
imul
push
or
adc
push
push
stc
test
fcomps
sbb
mov
push
and
lea
insb
xor
in
sbbb
add
inc
inc
cld
pop
in
and
out
mov
xor
int
push
adc
cmc
push
xchg
sub
sbb
dec
test
fnstcw
and
scas
inc
mov
das
lcall
shlb
adc
mov
stos
lock
fiadds
int3
sti
xchg
sbb
push
dec
inc
call
push
mov
add
push
nop
popa
shl
stos
inc
mov
add
cwtl
shrl
outsl
jge
mov
repz
fcmove
mov
or
push
push
stos
aas
inc
cmp
or
lret
cltd
in
shlb
rorb
in
dec
mov
fistl
mov
mov
movsl
int3
ffreep
dec
jp
fwait
scas
dec
out
fimull
jg
subb
out
cmp
stc
push
in
xlat
mov
out
jnp
inc
sub
dec
and
fildl
xlat
dec
rorl
repnz
dec
mov
cmp
inc
lret
pop
xor
xlat
fildl
adc
loop
bound
push
dec
mov
daa
ds
imul
mov
xchg
jecxz
pop
add
ja
rclb
pusha
orps
lods
mov
push
fcmove
fcoms
gs
cli
lock
mov
insl
push
add
sbb
inc
movsb
stc
fbstp
fcomi
inc
popa
je
pop
mov
cld
add
std
cmpl
pusha
ja
das
aad
inc
jg
mov
add
inc
xchg
dec
push
and
inc
dec
dec
jge
cmp
mov
and
mov
or
repz
dec
fsubs
scas
aas
call
test
pop
sub
lret
sub
inc
inc
fists
xor
xchg
jb
and
dec
pop
sbb
mov
test
popf
fwait
hlt
repz
inc
inc
test
imul
shrb
inc
and
dec
mov
sti
fsubl
jb
lods
popa
arpl
mov
fmull
out
cld
int3
inc
icebp
repnz
sti
jnp
add
inc
cmpsl
add
notb
jne
xor
popw
and
loope
js
mov
popa
adc
push
jmp
clc
xor
xchg
ja
push
add
and
mov
je
outsb
pop
enter
jbe
fsubl
sbb
mov
je
stos
leave
jo
and
iret
and
sub
pushf
mov
arpl
hlt
adc
adc
mov
dec
loop
xchg
inc
mov
push
lods
rorl
xor
repnz
test
cmpsl
mov
scas
jmp
sbb
jge
jmp
mov
xchg
sbb
jecxz
xor
and
cmpsl
xor
addl
filds
xchg
sbb
fistl
and
add
jp
jb
pop
faddl
pop
mov
mov
sub
xchg
aad
loopne
in
fadds
loop
jecxz
shl
mov
aas
push
clc
nop
lret
mov
pop
jbe
push
or
incb
loopne
sub
mov
inc
mov
ret
xchg
inc
adc
sbb
daa
loop
cmp
xchg
popa
jmp
adc
pusha
mov
cwtl
and
mov
lock
mov
orb
xchg
mov
xlat
or
pop
shrl
mov
mov
xchg
pop
sbb
sub
cmp
mov
jnp
pop
cmp
xor
and
mov
inc
mov
loopne
jge
sub
xchg
repnz
or
sub
jmp
push
push
std
lock
in
ds
mov
mov
fcmovb
pop
xor
jg
bound
pusha
dec
lcall
das
dec
loope
insl
and
push
mov
cltd
mov
cmc
push
and
pop
jg
adc
bound
in
orps
sub
jne
in
sub
mov
dec
in
inc
push
je
daa
int3
or
leave
fdivs
outsl
inc
add
std
aad
xor
push
scas
sbb
or
in
pop
mov
cmp
cmovle
jnp
test
test
dec
dec
mov
adc
ss
adc
jnp
sub
insl
daa
add
shlb
mov
stos
leave
cmp
sar
stos
subl
or
lods
adc
jmp
mov
mov
inc
hlt
movsl
shrl
ret
sub
inc
insb
aas
xor
lea
inc
daa
add
push
insb
ja
fnstcw
jns
fists
sti
aaa
addl
lock
inc
dec
mov
cmp
jbe,pt
pusha
or
jnp
jns
jg
add
fwait
dec
js
scas
cmpsl
push
xlat
popf
in
inc
add
stc
jno
test
and
xor
mov
iret
jge
sub
lret
push
mov
add
mov
mov
frstor
movsl
cmp
dec
js
mov
cmp
cmp
cld
inc
adcl
andb
rcrb
xor
pop
jae
adc
je
cmpsl
push
and
dec
test
cmpsb
test
stos
ror
popf
popa
fstl
or
inc
jecxz
adc
ret
push
lods
inc
test
in
mov
fmul
mov
push
and
fidivrl
es
jo
enter
lcall
push
inc
addr16
add
imul
jp
data16
sti
insl
xchg
sub
cwtl
lret
push
cmp
mov
sub
filds
std
cmc
aam
js
pop
cmp
fwait
dec
jge
cmp
inc
popl
sahf
das
es
jp
mov
mov
sub
dec
lods
stos
ret
sbb
pusha
repz
mov
push
push
test
mov
dec
inc
rol
je
ds
int
dec
xor
ljmp
cltd
in
fwait
add
jl
imul
jmp
iret
push
sub
xor
mov
inc
cmp
leave
outsl
xchg
or
mov
jno
adc
sbb
cmc
sub
or
pop
or
fimuls
iret
std
and
orl
es
add
sub
loopne
cmp
or
lods
subb
sbb
push
and
loop
hlt
in
repz
mov
sbb
xchg
xor
sub
frstpm(287
test
pop
mov
cmp
mov
jmp
bound
pop
pop
pop
fimull
sbb
mov
mov
push
push
ss
lods
cmp
or
add
and
jg
fcmovbe
sbb
out
xchg
push
xchg
mov
pop
mov
clc
lods
je
repnz
push
mov
and
push
insl
lods
mov
push
dec
dec
out
imul
xchg
jmp
push
push
xchg
adc
cli
mov
shll
jge
mov
rcll
jecxz
pop
bnd
fwait
sarb
out
je
mov
into
and
aam
mov
sbb
pop
cmp
cmc
xor
jb
mov
mov
call
mov
cmp
adcl
out
cmp
jno
shrl
xchg
cli
push
inc
hlt
or
lods
ja
out
push
shl
push
std
ret
pop
push
xchg
outsl
sub
lock
stc
ja
mov
sbb
inc
sub
or
mov
or
lock
mov
and
or
adc
push
cwtl
or
mov
adc
shl
push
push
inc
fwait
mov
xchg
icebp
push
roll
push
mov
lock
jnp
mov
cmp
lods
pop
ds
adc
xchg
sbb
push
lcall
jle
stos
jmp
aam
fwait
test
add
je
dec
push
dec
sbb
movsl
dec
orl
pop
movsb
je
mulb
dec
call
pop
movsb
bound
xchg
add
test
pop
cmp
into
shl
in
push
mov
cli
sub
imul
xor
ficoms
and
adc
inc
aam
push
mov
dec
dec
pop
mov
mov
mov
gs
lret
idivb
inc
jecxz
lahf
divb
dec
xchg
dec
movsb
aam
pop
inc
std
rcrb
test
mov
in
sub
movsb
andb
cli
mov
sub
dec
jg
cltd
shrl
xor
iret
cmp
sub
stos
dec
mov
jecxz
test
in
and
cmp
push
repnz
dec
mov
out
testl
mov
add
pop
mov
outsb
jmp
mov
sub
idivl
cli
mov
dec
out
cmpsl
imul
sbb
sbb
scas
mov
mov
inc
mov
mov
push
mov
aas
jne
or
mov
push
stc
int
xor
dec
cmp
ds
push
add
loope
add
pop
mov
jb
stos
inc
and
sbb
xor
fld
jo
or
test
inc
xchg
call
jbe
xchg
jecxz
outsb
addr16
cmpsl
insl
add
bound
lcall
mov
arpl
bound
pop
mov
shlb
cmc
cmpsb
inc
rcrb
icebp
push
xchg
aam
daa
cltd
repz
loope
cmp
sub
das
xor
add
add
stos
xchg
aaa
sub
stc
fstl
orl
pushf
lahf
or
xor
test
adc
ss
lret
dec
addr16
push
shrl
test
shrl
out
addr16
test
jg
dec
pop
sar
mov
push
pop
sti
mov
insl
push
lea
inc
scas
imul
or
ljmp
nop
lods
out
imul
sub
pop
rolb
sti
aas
pop
sbb
push
sub
ret
lea
jl
test
and
cmpw
mov
std
or
mov
push
in
fisttpll
in
xchg
pushf
push
sqrtps
xor
fisubrl
shlb
xchg
aam
cmpsb
pop
pop
in
mov
xor
mov
jne
xor
fs
mov
mov
mov
imul
sbb
aam
adc
movsl
and
lret
lret
mov
xchg
popf
fsubs
mov
xor
and
jno
sbb
in
es
adc
and
ja
call
mov
and
addr16
scas
dec
and
ds
cmp
sub
fnsave
mov
out
mul
sub
mov
fstpl
push
mov
outsl
cmp
sbb
add
cmc
jge
pop
xor
push
leave
sub
int3
adc
jbe
fisubl
pop
jno
ret
icebp
nop
cmp
add
inc
or
mov
cmp
lods
push
pop
mov
jno
xor
jae
dec
jg
or
adc
ret
or
popf
shll
mov
adc
mov
cmpsl
cs
pop
mov
fdivrs
out
jo
outsb
mov
mov
fdivrl
insb
cmp
mov
lods
rol
mov
xchg
rolb
es
and
mov
push
mov
arpl
adc
push
add
push
push
insl
adc
cli
jg
xchg
insb
mov
inc
add
nop
ret
lahf
sbb
fiadds
push
lods
scas
cmp
add
aam
push
xchg
out
les
movl
pop
and
sbb
ffreep
subl
out
das
push
outsb
sub
xor
adc
or
jp
int3
cmp
jp
insl
push
adcl
inc
jg
es
dec
pushf
leave
add
mov
jne
add
gs
jle
xor
gs
xor
mov
and
jbe
mov
pop
sarb
into
pop
data16
mov
mov
pop
jp
icebp
pop
lods
add
adc
dec
jns
cmpsl
xchg
cltd
into
push
pop
and
sar
push
in
and
cmp
dec
ss
pop
in
add
sbb
scas
mov
aam
enter
mov
inc
repz
pop
inc
mov
clc
cmpsb
fildl
jno
xchg
add
inc
sarl
test
stos
subb
pop
mov
cmp
in
sbb
leave
xlat
push
sbb
mov
pop
or
movsb
scas
bnd
mov
jle
mov
sbb
push
dec
xchg
sahf
push
sbb
dec
dec
fcmovnbe
and
cld
fldenv
in
fnstcw
std
int3
das
sub
pop
das
jp
loope
cltd
fdivl
mov
adc
in
sbb
jecxz
insb
mov
or
movsl
cmpsb
movsb
jb
clc
aam
fs
adc
aas
sub
push
pop
cld
sub
push
shr
jp
out
clc
cs
das
cmp
out
lds
sahf
lock
arpl
dec
movaps
cmp
movsb
ljmp
scas
xchg
movsl
adc
inc
inc
imul
faddl
push
push
adc
adc
cmpsb
movsb
inc
add
inc
jp
sbbb
sbb
nop
loopne
add
mov
lahf
sarl
inc
dec
roll
cmp
cmp
cmpsl
dec
pop
imul
xrelease
out
mov
dec
inc
pop
aam
pop
fbstp
mov
shll
test
push
fwait
fs
rorl
fildll
push
and
mov
lds
dec
adc
in
ret
mov
fwait
xchg
lahf
out
mov
pop
or
pop
call
jp
or
sbb
insl
xor
inc
dec
popl
push
add
fidivrl
sub
shr
bound
xchg
in
fs
rorb
ds
ret
shlb
xor
push
mov
dec
cmp
push
cli
jno
js
and
jo
sub
mov
mov
jle
pop
mov
xchg
sahf
fidivs
dec
addl
cld
jae
mov
sbb
mov
and
sbb
and
inc
sbb
popa
mov
test
flds
test
rcrl
xor
andb
addr16
outsb
jmp
inc
jno
push
xchg
lea
xchg
add
inc
loopne
out
adc
imul
adc
fnstcw
mov
sbb
call
dec
into
pop
adc
pop
fnstcw
into
cmp
or
jnp
popa
xor
shlb
cmp
hlt
je
jbe
ret
push
xor
out
cwtl
push
and
sub
loope
js
sti
push
xor
cmp
std
mov
push
xchg
xor
cmp
dec
mov
jb
cs
repnz
std
cmp
pop
jae
mov
xchg
bound
in
sbb
je
inc
adc
loopne
pusha
into
fmuls
sarl
sarb
cmp
les
and
jge
repnz
mov
mov
xor
in
imul
bound
mov
inc
aam
ja
arpl
and
iret
mov
jb
push
iret
lcall
sub
les
mov
and
jo
mov
add
iret
sahf
sbb
add
divl
imul
sbb
and
mov
or
pop
daa
ss
jns
stos
lahf
lds
pop
adc
gs
push
adc
bound
subb
add
xlat
mov
cwtl
mov
cmpsl
inc
sbb
scas
invd
ss
fisubrl
iret
pop
mov
ja
jnp
xor
adc
adc
movl
ljmp
mov
into
jp
push
inc
ljmp
movsl
push
lahf
xchg
sub
mov
sbb
out
aas
push
xor
jmp
lahf
pop
jo
pop
xchg
aam
rcrl
lea
out
sbb
add
add
dec
fcos
mov
push
sbb
pop
mov
js
pop
data16
mov
aad
jbe
mov
ds
sub
cli
inc
push
mov
add
mov
mov
sub
mov
test
out
notl
insb
sbb
inc
cmc
sub
aam
inc
sub
mov
cmp
lret
mov
in
sahf
lahf
call
rorb
sti
cs
nop
or
test
mov
sbb
iret
xchg
sub
sbb
imul
pop
fsubp
dec
daa
mov
adc
jnp
mov
push
jp
xor
or
inc
pop
pop
add
sub
ficompl
outsb
aaa
inc
mov
insb
add
pop
push
mov
and
in
stc
insl
xor
xor
or
loop
pop
cmp
cmp
mov
insb
negb
in
cli
mov
cmpsl
adc
addr16
sub
rclb
cmp
pop
push
dec
cmp
hlt
loopne
push
das
pop
ljmp
cltd
jb
test
add
mov
adc
sbb
test
loopne
fisttpl
stc
fsubp
imul
add
push
mov
cs
lods
sbb
sarb
add
js
sub
push
sub
fsubrl
cmp
pop
xchg
leave
pop
push
lds
call
or
mov
nop
lea
push
sbb
or
or
out
add
in
sti
dec
repz
loop
scas
dec
jp
xor
jl
mov
mov
mov
and
insl
and
xchg
cmp
mov
jl
mov
xor
je
or
jle
push
shll
inc
mov
jns
jmp
ffreep
js
stc
mov
fstl
xor
popa
inc
sub
pop
repnz
push
aas
scas
mov
xor
cltd
ja
mov
lret
push
lds
enter
adc
loop
mov
sub
sbb
mov
je
dec
fsubrs
push
xlat
out
sahf
ret
mov
das
out
bnd
inc
mov
mov
cmp
es
fists
add
shl
xchg
pop
ret
mov
movsl
dec
mov
subl
pop
jle
sbb
out
jmp
ret
cmc
mov
ficoml
dec
xchg
dec
push
div
jg
std
push
xor
push
scas
sbb
or
mov
out
xchg
jno
cmp
adc
sti
push
mov
push
enter
cmpsl
jne
test
lods
out
in
ret
lahf
cmp
push
dec
sbb
arpl
xor
and
mov
data16
mov
pop
mov
pop
fcmovbe
iret
imulb
mov
dec
stc
divl
leave
orb
fisubl
add
insb
mulb
iret
xchg
mov
dec
daa
inc
int
inc
sbb
int
mov
dec
aas
push
cmp
pop
out
mov
jb
mov
dec
outsl
sbb
pop
out
dec
xchg
mov
ljmp
mov
leave
push
pop
adc
psllq
insl
mov
lret
jae
adc
jbe
in
ja
mov
orl
push
jmp
cmp
jae
loopne
enter
add
stc
adc
mov
push
insb
jecxz
xchg
push
mov
add
je
lods
outsb
xlat
pop
sbb
dec
popa
pop
adc
push
inc
push
lret
btr
pop
mov
dec
jp
sar
inc
xor
xchg
adc
repz
xor
pop
ret
int3
adc
cld
inc
cmp
dec
cmp
mov
jmp
or
mov
test
cmpsb
sub
jbe
sub
pop
sub
fidivrl
push
xor
or
xor
jmp
gs
test
inc
mov
xor
and
popf
cwtl
imul
inc
jle
push
test
lcall
sti
mov
xor
mov
imul
jnp
push
cld
orl
mov
or
hlt
fidivrl
push
dec
out
lcall
mov
push
out
dec
adc
out
out
shr
mov
jmp
iret
add
mov
push
cwtl
and
xchg
stos
test
cmp
jns
sbb
xchg
mov
lahf
out
mov
repz
or
sti
call
mov
add
stc
or
push
mov
add
popa
inc
arpl
orl
mov
lods
and
push
insb
nop
jb
imul
adc
cli
sbb
inc
clc
inc
fucomi
push
pushf
in
xor
imul
jns
mov
inc
fdivr
test
das
add
and
jns
out
push
mov
pop
test
or
push
dec
xlat
cmp
pop
rcrl
jne
hlt
dec
sbb
lods
or
adc
inc
stc
xchg
pop
jne
flds
ss
ja
xchg
into
cmp
inc
out
cmp
sbb
sbb
scas
or
ljmp
insb
enter
add
ret
mov
pop
out
into
mov
addb
mov
mov
sub
cmp
shrb
xor
loopne
rolb
xor
push
xchg
cmpsb
cmp
mov
xchg
leave
pop
std
cmpsb
or
inc
inc
dec
and
or
sub
dec
movsb
adc
push
stc
iret
js
pop
pop
push
scas
jns
inc
sub
sub
fldenv
sub
aaa
mov
dec
and
shlb
cmpsl
sbb
cmp
sub
es
and
imul
jecxz
ljmp
test
pop
lahf
cmpsl
mov
enter
mov
or
insl
add
xor
cmc
jno
xor
das
pop
pop
outsl
pop
test
jo
cmpsl
fmuls
mov
jl
pop
cld
insl
cmc
test
or
test
jle
jg
xor
push
push
mov
ljmp
add
jp
dec
into
inc
inc
sarl
cmp
cmpl
mov
fimuls
xor
push
jle
jno
mov
jns
mov
xor
inc
xor
or
or
cld
cmp
sbb
jmp
pushf
sub
sbbl
jg
xchg
ror
mov
js
pop
dec
add
push
inc
fwait
mov
dec
lret
xor
mov
inc
sub
in
ret
xchg
mov
addr16
call
and
add
mov
sbb
mov
push
or
xchg
fs
push
xor
mov
mov
loopne
scas
and
xorl
jne
cwtl
mov
or
mov
das
aas
mov
aaa
ds
popa
sub
gs
in
mov
out
sbbl
sub
scas
loopne
mov
shlb
test
loop
out
rolb
imul
je
repz
icebp
jle
or
movb
icebp
add
lods
aad
mov
cmpsb
mov
xchg
pop
xchg
and
leave
push
loope
cli
mov
jmp
and
xchg
test
mov
pop
push
outsb
lods
idivb
test
lahf
push
cmpb
pusha
gs
cmp
jmpw
lahf
lock
les
lret
pop
test
mov
mov
jne
xor
nop
std
xchg
ljmp
in
fcmovb
aam
pop
sbb
mov
jnp
mov
inc
xor
push
test
fsubl
call
adc
lahf
test
sub
fs
sbb
test
adc
push
popf
xchg
popa
insb
or
and
call
cli
cmp
leave
adc
into
cmp
add
loopne
cmp
xadd
push
cmpsb
adc
and
cmp
stc
pop
pop
int
lods
sub
adc
outsb
mov
bound
pop
dec
jl
js
bound
add
pop
cwtl
fs
pop
cvtps2pi
jmp
stc
cmp
cltd
loop
jecxz
dec
cli
and
or
das
sub
aad
movsl
loopne
in
sub
push
mov
cwtl
test
mov
sbb
xchg
xor
aad
adc
jmp
pop
rcrb
je
push
mov
shr
dec
push
cmp
lods
mov
pop
fstl
bound
sub
add
jle
jp
sub
shll
inc
xor
push
adc
sub
lcall
xor
aad
jmp
addr16
pop
jo
pop
sbb
xchg
xor
fistpl
jo
test
lahf
push
icebp
lock
push
lahf
data16
sbb
ds
scas
cmp
push
add
pop
add
faddl
out
test
pusha
jno
adc
xchg
mov
enter
test
int
jno
aas
xor
mov
xor
in
or
adc
sub
cld
mov
test
test
adc
jecxz
inc
movsl
ret
rolb
and
sbbl
mov
ja
ret
mov
gs
and
sub
das
lods
sbb
push
pop
dec
dec
pop
imul
sti
xor
call
push
dec
fnsave
out
mov
add
fs
negl
subb
and
out
dec
in
cmp
cmpsb
pop
xchg
push
js
jo
rcr
mov
jmp
xchg
shrl
add
int3
xchg
push
sbb
ja
ret
stc
mov
pop
add
lock
push
fstpt
iret
dec
add
xor
xchg
dec
in
mov
sub
mov
movsl
int
mov
scas
out
insb
cs
push
popa
cli
mov
fistps
lods
lds
mov
jns
jbe
adc
hlt
daa
bound
and
mov
shrd
mov
sub
push
mov
xlat
stos
mov
xchg
add
ficoml
jo
fnstsw
mov
xchg
pop
dec
mov
arpl
push
cwtl
mov
je
fsub
jmp
dec
pop
cmpl
sahf
sub
cmp
call
adc
std
and
pop
out
ds
inc
lahf
pushf
leave
mov
mov
and
or
pop
xchg
mov
ret
or
add
fildl
outsb
dec
push
sub
cmpsl
pop
gs
push
shrb
xor
rcl
mov
cmpsb
out
mov
cmpsb
aas
mov
popf
push
xlat
hlt
push
stos
xchg
lock
push
xchg
mov
pop
test
jbe
cmp
in
std
jg
cmp
adc
int3
mov
scas
aaa
movsl
fnstsw
jmp
xor
or
fs
jge
mov
mov
xchg
jp
jl
adc
lock
inc
sub
push
scas
cmp
sub
pushf
mov
es
or
outsb
call
mov
sbb
aad
imul
inc
push
out
aam
cmpsb
adc
cs
sbb
data16
push
test
fildl
sarb
popa
rorb
imul
ret
fdivrl
in
jmp
test
aas
pop
cmp
dec
sbb
fisttpll
push
into
cmp
jns
mov
sbb
pop
adc
int
sub
mov
pusha
adc
jmp
jbe
push
dec
push
in
sub
xchg
mov
adc
loope
into
push
sbb
or
sbb
push
aad
in
lcall
enter
sub
or
mov
ja
loopne
mov
ja
or
pushf
in
outsb
lea
mov
add
jp
inc
test
xchg
and
pop
push
xchg
inc
ljmp
push
or
xchg
jecxz
mov
ds
cmp
into
xor
jb
imul
mov
push
inc
cmpsl
push
xlat
popf
push
imul
hlt
xchg
mov
dec
rorb
lock
xor
sbb
into
xchg
push
push
orb
test
fldt
jecxz
mov
out
push
pop
shlb
aas
mov
gs
jnp
mov
xchg
adc
das
add
mov
cwtl
lret
push
ret
xchg
mov
adc
scas
outsb
push
pushf
mov
or
jle
push
or
xor
mov
std
or
add
stos
mov
push
sahf
cmp
dec
ds
aam
les
out
and
and
or
js
mov
pusha
lods
inc
dec
stos
sub
aaa
push
out
fsubrs
out
jge
mov
and
call
inc
aas
in
add
fisubs
fisubs
push
pop
sub
jg
jp
bound
sbb
xor
ds
mov
mov
jecxz
repz
dec
xchg
mov
cmp
fldl
mov
pop
les
jge
aad
xchg
jecxz
mov
mov
in
jecxz
pop
rolb
lcall
pop
cld
dec
fdivrs
aaa
pop
xor
das
flds
mov
dec
adc
stos
fwait
aaa
cmpsl
fsubrp
or
pop
push
repz
xchg
adc
or
xchg
movsb
clc
push
lret
ja
jnp
lock
or
cmp
fldl
sub
xor
sub
lret
icebp
popa
test
gs
insb
mov
jecxz
enter
pop
adc
jno
fsubrs
push
or
inc
fwait
aaa
sahf
loopne
sbb
lods
sahf
aad
sub
cmp
dec
ret
mov
inc
push
sti
out
cmpsb
sub
or
dec
mov
cld
sbb
dec
in
lds
rcrb
sahf
int
push
sahf
jne
negl
ljmp
inc
gs
pop
mov
sub
mov
nop
push
cltd
mov
pop
fiaddl
add
shrl
dec
jbe
fstl
inc
and
add
filds
dec
jo
mov
shrl
jno
lcall
test
cmp
sub
jns
and
jge
dec
adc
popa
cmp
aam
lahf
mov
cmp
cwtl
and
mov
lea
inc
fcmovne
mov
pop
test
scas
sti
pop
pop
lods
insl
mov
mov
bound
es
inc
pushaw
test
pusha
push
icebp
movsl
mov
sbb
pop
loop
push
fnstenv
je
push
arpl
sub
imul
mov
imul
xchg
dec
sbb
inc
pop
xchg
mov
jne
cmpsb
push
adc
mov
fdivl
cmpsb
mov
aaa
cmp
dec
cld
das
lahf
mov
ret
sbb
movl
inc
out
mov
dec
enter
mov
loope
or
insl
insb
into
xchg
orb
cmpsl
pop
sahf
sti
shrl
sub
fcompl
dec
clc
pop
xorb
jne
je
js
leave
xchg
out
ret
pop
dec
dec
add
jae
add
jb
scas
lcall
add
cmc
popa
mov
in
faddl
cmp
jns
dec
fwait
addr16
sub
xor
cmp
jns
jl
mov
adc
mov
stos
dec
shll
sub
mov
mov
push
fcmovu
pop
addr16
cmp
jle
jns
cmp
loope
loope
aaa
in
das
int
lcall
pop
dec
int3
outsb
ficompl
inc
sahf
shrb
sub
lods
je
push
mov
in
add
push
repz
pop
fs
xchg
sti
movsl
push
xlat
add
mov
jmp
jae
popf
jnp
ljmp
cmc
dec
push
or
xor
je
mov
xchg
imul
or
add
rcr
push
clc
dec
rorl
cwtl
je
dec
or
shr
test
mov
clc
adc
cmp
push
xor
xor
and
cmp
sub
dec
in
mov
out
ret
ret
aas
dec
roll
aad
insl
pop
xchg
call
inc
pop
mov
pop
mov
cmp
add
dec
or
call
imul
xor
sub
out
fidivrs
push
or
ffree
rcl
scas
add
cmp
push
push
out
dec
je
std
jmp
sub
fldenv
add
push
inc
cmpsb
fwait
xchg
test
lods
pop
or
xlat
sbb
fldenv
mov
ficompl
lods
push
pop
divb
movsb
add
mov
es
jnp
dec
aaa
xor
inc
out
mov
pop
cmp
xlat
cli
ficompl
mov
rolb
push
in
in
xor
mov
sbb
enter
dec
push
sarb
dec
mov
test
xchg
xchg
clc
mov
stc
aad
ret
push
js
movsb
push
push
inc
je
mov
jnp
dec
xchg
aad
icebp
xchg
inc
cmp
aam
xchg
adc
jmp
repnz
repz
dec
xor
push
in
mov
mov
popf
push
push
mov
or
pop
sub
xor
loop
dec
dec
das
fildl
inc
aas
pop
dec
dec
ret
mov
jb
stos
xchg
or
mov
imulb
movsb
call
inc
int3
lods
data16
push
pop
jmp
add
inc
jle
icebp
int3
hlt
mov
mov
push
cld
repnz
xlat
and
lods
xchg
push
cmp
or
iret
out
jb
push
pop
mul
push
dec
xchg
fstl
fldenv
or
sbb
jb
push
jbe
incl
cmp
in
mov
sbb
mov
outsl
mov
adc
flds
cmpsb
andl
dec
lea
out
mov
adc
mov
sbb
sub
add
aas
cmpsl
sti
cmpsb
jl
out
loop
bound
lret
sbb
and
in
sahf
jnp
scas
pop
movsb
mov
movsb
cwtl
fisttpl
inc
insb
xchg
cmp
mov
mov
or
ja
xor
mov
in
bound
adc
into
jnp
int3
imul
add
rcll
add
adc
or
and
add
gs
adc
xchg
imul
mov
dec
cwtl
les
dec
fdivs
sub
shlb
mov
aas
jae
xor
out
jo
mov
or
mov
mov
sub
repz
data16
inc
dec
rorl
xchg
push
lahf
xchg
cltd
mov
sbb
jnp
jo
add
adc
mov
pop
dec
out
bound
xchg
jnp
jmp
adc
and
leave
popf
dec
pop
sub
mov
jae
dec
inc
sbb
sahf
mov
pop
push
scas
dec
fwait
or
lcall
idivb
mov
lods
dec
cmpsl
es
push
add
std
ss
mov
pop
jge
inc
jnp
shll
add
pop
push
repz
adc
inc
jae
mov
out
ret
nop
or
int3
sarl
jg
ret
dec
test
and
pop
ja
test
dec
cmc
jmp
pushf
jbe
movsl
cwtl
fcoms
add
jle
shll
mov
sub
and
dec
dec
cmp
out
jmp
sbbl
cmp
test
or
ljmp
cmpsl
push
dec
sarb
call
mov
cmc
clc
mov
push
adcb
xor
aaa
rorl
pushw
xor
clc
popl
je
enter
sbb
adc
fsubl
pop
xchg
stc
cmpsl
and
stos
inc
jb
insl
stos
adc
and
mov
pusha
pop
scas
jge
movsl
fists
add
fwait
mov
call
or
jo
cmp
and
cmp
mov
and
aas
ret
mov
out
inc
js
clc
jecxz
test
fdivrl
pop
sbb
lods
neg
jp
sarl
cmp
mov
out
sbb
inc
daa
pop
stos
decl
mov
mov
inc
inc
cli
mov
pop
push
or
rcrl
imul
cmp
test
loope
std
imul
sub
push
ljmp
int3
fidivrl
das
jge
fdivr
pop
shrd
movsl
xor
bound
test
fsubp
sbb
mov
outsb
xor
cmp
cs
xchg
imul
xorb
push
shll
xchg
pop
scas
lods
sub
adc
pop
push
in
pop
add
xchg
hlt
es
dec
movb
fistps
pop
dec
push
jnp
scas
xor
cltd
dec
mov
rcll
lcall
bound
lret
int3
inc
cmp
inc
cmp
jae
mov
or
add
fsubrs
inc
push
rorb
and
mov
push
sub
xor
jae
lock
or
ds
call
loopne
clc
rcrb
mov
mov
mov
add
lret
filds
lcall
sbb
aad
icebp
jp
movsb
stos
mov
out
loopne
sbb
fwait
lods
mov
pop
cmp
cmp
jge
jmp
pop
mov
adc
jmp
xor
xor
test
movsl
xchg
sahf
in
inc
add
inc
and
jge
int3
cmp
dec
pop
les
mov
xchg
dec
mov
int3
add
std
cmpl
icebp
popf
test
jg
clc
fisubl
pop
out
mov
test
inc
and
pop
mov
xchg
mov
insl
sub
xchg
pop
insb
pushf
mov
or
or
into
cs
sarl
cmp
mov
jp
sbb
pop
xor
mov
xor
sbb
ja
sbb
pop
pop
dec
fbstp
lcall
rorb
lret
movsl
sub
pop
pop
dec
lret
sbb
fimull
sbb
mov
in
movl
xchg
adc
pop
add
pop
xchg
and
or
inc
mov
and
fisubs
xchg
pop
mov
sub
out
aas
inc
in
xor
shlb
or
jno
outsb
cmp
in
daa
sub
ss
adc
icebp
or
jnp
shll
mov
or
mov
ljmp
fdivl
mov
jle
cmpsb
ds
dec
frstor
cmp
test
ja
iret
and
rclb
inc
ret
dec
sti
gs
adc
aas
iret
jmp
pop
sbb
shrl
outsb
adc
mov
add
xor
ss
sub
sbb
jle
sub
sbb
jno
dec
fucomip
loopne
std
test
push
mov
jns
and
mov
or
int
push
cmpsb
out
pop
lcall
dec
sub
adc
in
int
inc
lds
mov
jbe
jae
pop
pop
mov
fimuls
xor
sarb
xchg
inc
mov
adc
fsubrl
fisttpll
js
and
enter
inc
adc
dec
movsl
rolb
xor
and
xchg
pushf
loopne
stos
xchg
test
iret
ficoms
pop
push
into
sub
shlb
in
les
mov
jp
sahf
mov
sbb
cmp
sbb
fucom
mov
popa
add
stos
movsb
or
fbld
test
and
mov
xorb
pop
cmc
push
xchg
les
pop
in
shrb
mov
jb
inc
iret
mov
adc
push
mov
xadd
outsb
cwtl
ds
jno
dec
fmul
js
dec
sbb
push
sbb
sbb
aaa
sbb
push
dec
lcall
push
dec
jmp
mov
mov
ja
enter
lea
movsb
inc
cmp
sub
or
mov
pop
inc
pop
out
mov
fsubs
push
xchg
call
clc
int
sub
aaa
mov
dec
ljmp
pop
pop
mov
dec
or
inc
push
stc
gs
jle
ret
stc
stc
iret
dec
pop
pop
mov
jecxz
and
add
jno
mov
aas
push
dec
mov
mov
mov
push
adc
call
or
xchg
xor
add
sbb
psubsb
mov
sub
or
lea
bound
xchg
lcall
dec
ds
xor
and
cmp
repnz
pop
popf
push
or
push
mov
scas
jp
pop
jmp
cmp
enter
xchg
sbb
sub
adc
cmpsl
stos
xchg
fadds
push
sub
fidivrs
fimuls
xor
mov
addr16
mov
cmc
xchg
lcall
add
int3
add
xorl
imul
push
gs
inc
jmp
or
mov
cmc
add
pop
lock
mov
into
inc
sar
mov
es
push
xchg
push
cmp
add
dec
in
lahf
or
mov
call
mov
or
inc
mov
ljmp
sub
dec
fldlg2
cs
imul
sti
adc
push
rcr
test
int
mov
iret
out
jno
mov
sti
ret
push
inc
jo
sub
inc
aas
lods
push
cmp
nop
push
scas
call
in
cmp
pop
sbb
nop
or
ds
xor
aaa
dec
repnz
mov
xor
mov
insl
push
adc
loop
test
nopl
inc
adc
mov
mov
cmpl
mov
les
xor
jns
je
push
scas
jecxz
fidivl
sbb
stc
pop
cmp
stos
xor
mov
mov
fwait
pop
cmovb
popa
aaa
lret
cmc
shrb
mov
mov
sub
shrb
mov
add
les
lcall
lcall
and
notb
push
push
pop
adc
sub
mov
mov
loop
ror
stc
and
in
mov
aas
add
pusha
and
out
call
mov
or
cmp
movsl
cmp
mov
mov
add
fisubs
int3
add
sub
cmp
push
cltd
cltd
xor
xor
mov
out
xlat
xchg
cmp
es
adc
add
adc
out
sub
pushl
cltd
jle
stos
fcmovnb
out
sbb
inc
xchg
movsb
leave
cmp
jne
out
jmp
imul
xchg
ja
sub
mov
add
gs
in
addl
xor
lds
mov
cld
scas
mov
or
scas
es
les
or
or
push
lods
xor
xchg
mov
scas
fadd
int3
sbb
enter
fstpl
lods
sti
js
das
mov
test
xchg
fs
lea
test
and
sbb
inc
dec
jnp
sub
mov
push
jno
or
ret
push
rol
cwtl
fistps
mov
lock
pop
cwtl
push
loop
xchg
lcall
sbb
fnstcw
shrb
icebp
mov
arpl
fistl
mov
xchg
sub
inc
outsb
add
sahf
jb
in
mov
sti
pop
shrl
in
jp
jle
sahf
push
out
loop
mov
scas
ror
in
sbb
pop
sbb
les
pop
push
rclb
mov
mov
cwtl
icebp
in
mov
ffreep
sub
push
mov
icebp
mov
sti
cmpsb
pop
add
inc
xor
fwait
inc
add
xor
jo
jo
xchg
adc
mull
mov
xchg
mov
in
js
ss
flds
add
or
push
orb
mov
ja
mov
mov
jge
and
cwtl
popa
popf
add
in
mov
and
jle
jmp
insl
dec
cli
cld
cmpsl
cltd
scas
push
int3
lea
mov
sbb
mov
mov
outsl
in
mov
enter
mov
mov
test
sbb
xor
jae
inc
lock
pop
mov
iret
loop
fneni(8087
ds
mov
leave
movsl
jle
out
scas
mov
mov
mov
cltd
in
xlat
in
inc
dec
jmp
jecxz
ror
aam
ja
mov
ljmp
loope
fcomi
mov
ja
in
adc
das
pop
sbb
rorl
lods
jmp
cwtl
fsts
add
dec
movsb
cmp
cmp
lcall
jge
rep
clc
push
je
shr
jb
pop
cmpsl
cmp
jae
dec
in
mov
push
mov
shr
mov
xchg
sbb
jg
shll
hlt
dec
sub
outsl
xor
inc
pop
call
inc
xchg
fs
jmp
loop
lods
sub
xchg
frstor
push
mov
lcall
push
shlb
push
pop
and
dec
xor
or
ret
test
mov
pop
mov
sbb
jge
sbb
xchg
aaa
add
inc
adc
out
xchg
mov
fwait
sub
jecxz
jne
xor
les
push
add
push
sub
ja
cmp
gs
leave
pop
data16
dec
inc
add
dec
test
mov
test
sub
xchg
fld
add
jg
popl
cmpsb
inc
adc
jno
stos
or
lret
mov
iret
sbb
mov
sub
mov
mov
stc
xchg
addl
jnp
ljmp
filds
add
sbb
mov
cmp
sub
xor
les
filds
fsts
jle
enter
stc
outsl
clc
ficompl
leave
lock
mov
aas
mov
rcll
sub
lds
mov
sarl
xchg
jmp
sub
jno
rcr
loope
inc
adc
xchg
inc
jecxz
lods
xlat
add
outsb
fwait
jns
sub
or
jmp
inc
fldcw
xor
mov
repz
mov
test
jecxz
dec
pop
mov
sti
cld
sub
mov
out
nop
xor
fs
test
or
pop
aaa
mov
repz
inc
das
push
lret
movsb
cmp
jo
and
cmp
pushf
lcall
ficoml
pop
mov
xlat
je
add
xor
je
xlat
push
xlat
adc
dec
mov
daa
or
and
dec
jns
add
pusha
popa
jecxz
jno
and
notb
pop
cmp
dec
mov
iret
mov
lods
mov
sbb
ret
cltd
int
arpl
out
push
xchg
cld
and
pop
jbe
int
push
adc
jp
mov
jge
outsb
cmp
punpcklwd
les
lods
or
inc
mov
mov
mov
repnz
loopne
ja
lret
addb
jne
or
mov
insl
push
ret
add
pop
ljmp
jmp
mov
out
js
push
inc
jl
adc
insl
cmp
les
xor
add
sub
adcb
add
jne
cmp
iret
popa
sub
sub
pop
bound
pop
inc
notb
sub
ret
lahf
mov
fists
data16
push
xchg
stos
in
jp
cltd
xchg
lret
ficoms
loope
push
dec
shl
jmp
sub
loop
imul
hlt
dec
lds
mov
or
mov
xor
pop
daa
mov
cmpsb
inc
lahf
ret
jl
xor
lds
jae
lods
jnp
or
sub
shl
jo
js
cmpsl
cwtl
andl
out
and
fs
adc
add
notb
mov
pop
jg
mov
push
cwtl
push
leave
outsb
ret
push
xor
lea
test
int3
add
xchg
flds
push
popa
pop
test
rcll
jg
pushf
jmp
pop
push
or
adc
stos
dec
pop
fdiv
sbbl
and
pop
arpl
call
test
mov
cwtl
xchg
xchg
out
insl
enter
xchg
in
inc
jne
stos
lock
xchg
bound
insl
mov
jnp
mov
aad
or
adc
xchg
xchg
out
adc
sbb
jp
fsubr
jl
xchg
fbld
lret
icebp
inc
test
cmp
dec
mov
inc
add
fidivrs
jbe
scas
pop
cmp
xchg
pop
adc
lds
mov
xor
out
xor
cmp
data16
adc
dec
mov
and
fcmove
shlb
push
add
sti
repz
mov
mov
or
mov
movsl
insb
jmp
cmp
sbb
inc
dec
pop
loope
push
packuswb
aad
data16
push
cmp
fbld
jmp
jns
insl
insl
fwait
aas
cmp
in
cmp
icebp
bound
cmp
pop
mov
ret
pop
mov
push
repz
push
test
out
xchg
mov
lods
in
dec
sub
inc
dec
sti
sub
in
sub
adc
in
mov
cmpsl
cmp
push
mov
xor
xor
data16
in
mov
loop
pop
xor
into
insl
call
ja
jp
push
jle
lea
es
mov
jge
add
pushf
incl
pushf
inc
xor
jle
mov
push
push
jmp
cmp
mov
inc
mov
repz
and
mov
cmp
push
jge
sub
bound
sbb
jo
mov
add
jbe
adc
jne
nop
mov
pop
cmp
mov
jl
mov
and
xchg
sarl
mov
cs
inc
pop
ss
cmp
shrb
roll
xor
pop
shrb
mov
sahf
pop
mov
jae
movsl
test
or
test
sti
pop
push
cmp
sub
add
pop
cltd
xlat
mov
outsl
out
push
fsts
xor
mov
mov
mov
sbb
popf
mov
jg
push
fnstenv
pushf
test
aas
cld
inc
lcall
cld
mov
popa
cmp
xlat
sub
xchg
mov
and
sbb
popa
cmp
sbb
out
cmpsl
out
adc
mov
cmp
or
pcmpgtb
jbe
and
leave
adc
mov
test
xor
or
adc
mov
inc
mov
mov
mov
pop
in
sti
pop
xchg
sbb
inc
push
cld
cld
sbb
push
cs
xor
loope
aas
add
sub
fidivrl
insl
cwtl
xchg
adc
jp
aad
sti
xor
fcomp
or
adc
test
inc
int
pop
cmc
lods
or
jecxz
push
repnz
mov
leave
push
jns
xlat
fimull
or
fsubrs
jbe
iret
cmpsb
mov
mov
push
int3
xchg
pop
sbb
pop
sub
mov
cmp
cmc
orb
inc
xor
movsl
jno
fs
mov
negl
push
push
or
mov
pusha
push
in
dec
inc
fst
and
fucomp
mov
jo
inc
xchg
push
dec
daa
jmp
jecxz
sub
cmp
jl
stc
sbb
add
mov
data16
les
lret
add
sub
test
jae
push
cs
in
adc
mov
mov
sbb
sbb
and
dec
mov
xor
xchg
shr
inc
inc
int3
pop
push
mov
add
xor
int3
arpl
sbb
adc
cmpsl
ds
inc
out
sub
fs
and
pop
xor
pusha
push
or
inc
pop
push
jecxz
insl
push
das
push
ljmp
mov
lret
push
cmpsl
lahf
addr16
dec
out
or
or
inc
adc
repz
lret
iret
or
fildll
out
subb
xor
push
push
pop
divb
pop
into
inc
and
pop
fcom
out
ret
adc
push
or
insb
mov
jnp
cmp
jno
mov
dec
fs
idivl
pushf
stc
and
xchg
mov
pop
rcr
rcrb
inc
inc
mov
jl
ljmp
cltd
imul
push
ds
aam
mov
fnstenv
lods
icebp
je
dec
cmpsb
daa
sub
popa
aam
nop
mov
loop
out
and
xchg
nop
fcmovnb
aaa
out
das
cmp
inc
inc
mov
jle
push
sbb
lcall
xchg
sbb
mov
push
test
jge
fmul
scas
scas
ss
pop
inc
jb
and
loop
sbbb
popf
add
mov
leave
fmuls
add
in
cmp
dec
mov
dec
jo
or
sub
shll
rolb
add
data16
mov
sbb
les
popa
lods
sarb
subb
leave
add
je
paddusw
xlat
xchg
test
mov
in
adc
out
orb
jmp
cmp
and
pop
aas
mov
mov
and
aam
pusha
cmpsb
loopne
mov
cmc
cli
in
stos
pop
cmc
jbe
lcall
cwtl
out
jl
pop
ss
ss
aad
push
xchg
fists
mov
lahf
stc
pop
sbb
out
shr
or
push
mov
and
std
cmp
dec
xchg
stos
and
jae
cmp
aas
popa
mov
push
push
loop
and
lds
sbb
inc
clc
addr16
pop
gs
int
cmp
ficoml
xchg
int3
xchg
mov
mov
mov
add
add
jle
lea
mov
adc
in
pop
inc
clc
inc
or
adc
outsb
pop
inc
idivl
pusha
mov
dec
sub
and
jge
loop
hlt
mov
daa
adc
psubd
js
not
outsl
mov
movsl
jmp
xorl
stos
push
lods
xor
ja
sahf
mov
push
ja
fidivl
hlt
push
sbb
push
xchg
outsl
mov
imul
leave
and
mov
mov
sbb
adc
push
sbb
int3
mov
repz
and
sti
fs
cli
xlat
push
mov
test
cli
es
and
popl
aad
cld
mov
in
mov
xchg
sbbb
xor
mov
mov
sbb
ljmp
jo
ret
xchg
hlt
lret
push
jns
inc
fstps
std
inc
cmp
or
push
dec
mov
dec
adcb
mov
or
mov
out
mov
mov
lods
jb
and
sbb
xor
int3
imul
jb
jnp
lret
lahf
lret
test
xchg
js
aas
adc
fisttpll
out
mov
cltd
test
sub
gs
dec
popf
sbb
mov
repz
cli
out
andb
aam
add
lcall
xor
mov
inc
mov
sbb
xchg
xchg
inc
add
out
scas
gs
push
fiaddl
repz
in
sub
bound
insb
js
lcall
in
or
mov
enter
mov
push
test
es
aam
jp
adc
xor
mov
mov
or
pop
xchg
jno
mov
lods
es
leave
push
xchg
loopne
fcmovnb
std
gs
mov
xor
lods
out
in
mov
pop
test
or
lock
outsb
dec
pop
int3
jno
fcmovnu
mov
sub
inc
push
aas
dec
jne
mov
add
loop
dec
test
pop
arpl
adc
jnp
xchg
sbb
imul
adcb
mov
pop
insb
movsb
loope
mov
push
mov
dec
and
loope
pop
enter
and
mov
daa
lcall
lock
inc
sub
push
lea
jle
adc
andb
push
call
cltd
cmp
jg
aam
push
xchg
std
mov
inc
mov
ljmp
or
lret
jecxz
xor
div
sti
sahf
sbb
fwait
lock
adc
xchg
dec
jge
aas
dec
cwtl
icebp
jge
sub
pop
leave
add
push
push
ret
decl
mov
mov
mov
sbb
mov
mov
loopne
hlt
insl
xor
rorb
out
and
inc
sbb
jae
adc
mov
sub
pusha
inc
imul
repnz
lcall
out
xlat
push
sub
jno
in
or
sbb
js
mov
mov
ljmp
imul
xchg
lods
sub
xchg
mov
adc
or
adc
xchg
add
dec
dec
mov
xor
and
push
xchg
js
xlat
add
cmp
pop
aam
inc
in
and
pop
cmpsb
mov
fdivl
xchg
popa
lods
cmp
fmul
sub
andl
inc
cmp
xchg
addr16
nop
das
mov
fistl
xchg
push
adc
adc
sub
insb
push
shrb
mov
and
lods
popf
scas
clc
mov
mov
icebp
sti
in
inc
cltd
pop
cmpsl
inc
or
pop
je
add
mov
sub
aaa
mov
mov
idiv
daa
mov
sbb
add
ljmp
ficoml
lds
sbb
lcall
mov
and
push
adc
ljmp
xor
rorl
jle
cmp
sbb
leave
adc
add
imul
push
cs
stos
inc
in
les
movsb
push
cmp
leave
mov
addr16
in
rcll
popa
and
push
mov
aam
fwait
or
aaa
pop
inc
jecxz
lret
pop
fmul
sbb
sbb
lds
nop
mov
lahf
test
into
adc
pusha
xchg
mov
jg
jl
cmp
pop
cwtl
loope
or
test
mov
test
push
jbe
pop
pop
sub
or
dec
sub
clc
arpl
pop
pop
pop
add
jae
std
ret
daa
fdiv
add
mov
icebp
aam
repz
mov
jo
mov
mov
sbb
xchg
cs
lcall
lods
sub
mov
imul
cmpl
into
xor
fwait
mov
xlat
inc
in
inc
fsubs
jns
loopne
mov
in
orb
inc
add
aad
push
adc
and
aaa
jmp
cmc
hlt
xlat
mov
outsb
les
shll
scas
or
inc
push
pop
ds
pop
jne
xchg
or
cmp
jno
cmp
or
shrb
mov
adc
test
test
push
sub
jecxz
int3
dec
xor
lock
ret
push
rorb
pop
inc
mov
mov
or
lods
pop
cmp
push
sbb
ficompl
push
clc
pop
jne
divl
mov
notb
mov
cs
push
sbb
xchg
fwait
test
lock
adc
sub
mov
push
jmp
shl
lea
andl
inc
or
out
ss
pop
sbb
int
mov
mov
in
jb
sahf
inc
ds
imul
int
je
inc
xchg
cmp
iret
xchg
sbb
mov
pusha
inc
mov
mov
cmpsl
jns
push
pusha
stos
cmp
hlt
and
es
mov
or
cmp
push
pusha
or
bound
xor
adc
adc
fs
lods
pop
ja
je
shlb
adc
sti
stos
push
lods
sub
push
mov
in
inc
icebp
dec
push
xchg
ds
nop
mov
sub
rcll
push
dec
nop
xchg
mov
mov
cli
push
cmp
jecxz
adc
into
int3
insl
adc
pop
sbb
inc
cwtl
aam
adc
ljmp
dec
push
int3
pop
mov
add
jp
adc
mov
add
cwtl
cmpsb
insl
sub
fsub
and
scas
rcrl
rol
jbe
jne
pusha
add
fcomip
testl
movsb
xrelease
add
fwait
sbb
cli
push
aam
ret
mov
jmp
clc
xchg
or
shr
xchg
pop
xor
daa
push
or
lret
sbb
inc
and
out
inc
test
test
aas
ljmp
ds
ret
fcoms
jmp
sub
mov
add
out
mov
adc
jp
call
in
mov
xchg
loope
or
jb
cmpsl
jge
cwtl
inc
and
sbb
cmp
fsubrs
add
out
loope
aaa
mov
jbe
xor
sub
and
imul
or
xchg
sarb
negb
dec
xor
sarl
adc
aam
pop
xor
stos
ret
mov
addb
mov
xchg
loope
nop
adc
dec
mov
je
es
xchg
jno
popa
jae
add
sahf
inc
pop
sub
and
jecxz
insl
test
jge
test
cmp
mov
xchg
inc
mov
xor
popa
mov
and
xchg
dec
and
in
dec
jg
jge
adc
ja
pop
mov
in
dec
xor
stos
imul
xor
stos
pushf
sbb
outsb
enter
dec
mov
sub
icebp
adc
movsb
xchg
in
sahf
test
addr16
orb
jne
inc
dec
push
pop
out
arpl
pusha
mov
jae
in
popa
mov
inc
test
addl
mov
cmp
pop
jecxz
repnz
sti
cwtl
mov
leave
cmp
xlat
sub
or
sahf
jge
cmpsl
cmc
push
pop
test
dec
and
es
dec
push
push
in
insl
adc
jne
call
aaa
xlat
fiadds
std
sbb
adc
sti
pop
jns
jb
movb
iret
into
xchg
and
xchg
jae
and
dec
mov
loop
and
and
test
mov
xchg
movsl
or
leave
rorb
inc
testb
outsl
add
cmp
sub
lahf
fldcw
inc
xchg
and
mov
jno
out
stos
cwtl
mov
ja
leave
jmp
arpl
in
daa
cmp
sub
test
lods
out
mov
inc
rcll
add
dec
jecxz
cli
xchg
push
int3
jmp
mov
mov
mov
cmc
mov
or
mov
mov
and
xor
sbb
sub
add
mov
push
call
push
call
das
lea
stos
mov
in
scas
pop
cmp
ficompl
mov
mov
jecxz
sti
push
push
adc
out
ss
and
gs
xchg
dec
dec
cmc
dec
loop
jnp
or
mov
inc
in
mov
mov
stos
fwait
pop
jae
sub
inc
das
sarl
sub
jmp
push
in
push
movsb
mov
cmp
xchg
insl
sbb
les
jo
fxch
insl
movsb
sub
pop
pop
xor
bound
mov
rorl
and
lahf
aaa
call
rclb
push
push
das
hlt
sbb
add
es
insl
loop
xor
jbe
lret
movsb
push
dec
mov
mov
dec
fs
pusha
pushf
mov
stos
jle
test
jl
cltd
aas
pusha
mov
mov
sahf
and
cmovge
jecxz
jl
das
and
pop
sub
out
icebp
iret
loop
aad
repnz
lds
push
pop
call
mov
xchg
stc
sti
in
mov
and
sarl
dec
pop
xchg
lds
jl
stc
sti
xor
jle
pop
mov
mov
call
and
mov
or
nop
pop
lret
cmc
adc
push
pop
lock
stos
mov
cs
jg
arpl
in
in
mov
push
push
push
dec
ficompl
outsb
repnz
popf
adc
mov
popl
es
sub
inc
imul
mov
jns
jb
sbb
mov
sbb
dec
imul
out
push
cmpsl
inc
leave
dec
push
inc
lods
inc
cmp
xlat
pop
mov
cmp
jne
ljmp
jb
leave
adc
and
lock
adc
sti
add
dec
pop
jo
ret
lods
or
rcl
jns
gs
push
jns
mov
adc
cmp
mov
xlat
jbe
into
fisubl
stos
fdivs
cmc
lods
jp
jecxz
aas
incl
mov
in
pop
sub
cmc
xchg
jae
test
test
ds
mov
inc
fimull
mov
and
and
imul
hlt
ljmp
xchg
cmp
stc
inc
pop
outsb
stos
pushf
xorl
aaa
popl
ret
fldlg2
push
xchg
fs
repz
pop
cmp
mov
jg
pop
and
shl
dec
mov
or
add
jo
fcoml
xchg
xlat
push
in
mov
mov
mov
adc
clc
jge
jl
dec
mov
jle
loopne
sbbb
mov
test
ds
inc
or
push
mov
jne
test
push
test
pop
add
fdivl
les
mov
fstpt
or
xchg
inc
mov
or
dec
cmp
mov
test
fs
add
or
dec
xchg
pop
and
jne
jmp
fmuls
inc
pop
cmp
pop
inc
lods
add
mov
xor
jbe
lcall
cmp
or
jg
pop
ja
push
mov
fldt
xor
add
hlt
movsl
cmp
cs
rclb
cltd
push
pop
movsb
andb
js
mov
push
notl
in
add
iret
call
push
adcb
adc
xchg
pop
mov
data16
mov
push
inc
sahf
aaa
xchg
mov
sub
add
inc
das
mov
xor
mov
cmp
xlat
repnz
sub
jns
jle
inc
dec
mov
icebp
imul
add
jne
cmp
mov
clc
mov
ljmp
mov
insl
inc
ljmp
cltd
sbb
in
sbb
movb
imul
or
push
dec
shl
shll
aas
inc
fcoms
out
test
insl
test
fs
add
cmc
mov
iret
lcall
cmpsb
loop
sbbl
pusha
push
pop
lret
inc
int
mov
sti
dec
sbb
popa
cli
pop
fwait
jbe
fsubrl
stos
sahf
pop
xlat
mov
or
faddl
ds
out
or
std
and
mov
cmp
mov
add
int3
sarb
sub
xchg
out
shll
cli
lods
lods
or
mov
test
sub
mov
pop
or
imul
out
clc
dec
sahf
push
mov
add
mov
sbbb
jge
sbb
jns
call
pop
call
mov
cmp
daa
out
jg
leave
aaa
push
out
jecxz
jns,pn
pop
sbb
xchg
iret
ret
mov
inc
or
pushf
ret
cmp
mov
jns,pt
in
adc
xor
fisttpl
push
nop
mov
mov
addr16
testl
pop
pop
cmpsb
in
in
stc
insl
jae
cli
cmp
mov
push
aam
mov
or
std
out
negb
cs
pop
outsb
jnp
push
lret
sub
les
cltd
rdmsr
sub
imul
ror
jl
sub
mov
xor
sbb
and
xor
in
push
shl
mov
adc
mov
xor
jp
dec
pop
leave
nop
loop
stc
orl
in
daa
les
rclb
jmp
adc
push
hlt
scas
ficompl
ja
fwait
in
psubusb
inc
dec
fldl2e
repz
mov
ds
shrl
mov
pop
mov
rolb
or
out
out
mov
pop
pop
sbb
imul
std
cmpsb
mov
sub
xor
pusha
daa
dec
and
and
dec
sub
cmp
stos
andl
jnp
jp
lock
mov
cmp
cmp
push
mov
dec
rcl
inc
fadd
nop
xor
out
jecxz
enter
adc
add
xor
add
scas
cmp
or
int
xor
jb
call
mov
jnp
dec
test
ret
cmp
mov
dec
add
jge
add
pop
push
sub
aam
cld
adc
xor
cmpsb
ret
cmp
mov
mov
and
lcall
aad
outsb
inc
and
sub
in
lret
push
ljmp
test
cwtl
pusha
mov
repnz
and
and
scas
cld
in
pop
cmp
xchg
inc
pop
stc
mov
cmp
lahf
inc
jecxz
mov
out
arpl
push
lods
push
lahf
add
mov
repnz
push
pop
xlat
call
or
lods
add
in
sub
aad
dec
inc
add
aas
adc
mov
mov
sbb
jecxz
push
jne
cli
inc
push
adc
dec
aad
ljmp
mov
gs
aad
xor
rcl
aas
test
out
or
sbb
lahf
outsl
push
inc
adcb
btr
cmp
aad
sub
fistpl
inc
cmc
popf
dec
rclb
jg
pusha
cltd
jle
xlat
mov
in
mov
xor
repnz
lods
pushf
push
mov
roll
and
imul
test
jg
subb
cmp
xor
push
in
sub
xchg
push
inc
cld
mov
mov
push
shrb
jno
fimull
aam
arpl
mov
sahf
jno
lods
cmp
pop
push
add
cli
push
out
mov
xchg
push
add
repz
je
fisubrl
mov
lret
aam
scas
pop
mov
lcall
mov
popf
adc
in
ljmp
pop
hlt
out
pop
jo
inc
inc
ficoms
fiaddl
mov
movsl
xchg
add
xchg
push
xor
negb
dec
pop
notb
dec
push
lret
cmp
es
mov
pusha
mov
sbb
outsb
es
cmc
loope
xor
arpl
and
xor
sbbb
out
ja
or
test
dec
push
in
push
cmc
sahf
push
jg
mov
inc
test
lea
repnz
ja
addr16
popf
addl
jmp
les
dec
xchg
decl
dec
scas
test
jp
sahf
jle
lods
in
mov
xchg
fwait
lea
movsl
push
dec
pop
lds
inc
cmpsl
mov
xchg
xchg
dec
add
sub
add
pop
inc
jmp
push
pop
mov
in
inc
into
xchg
push
pop
pop
pop
mov
out
shl
jns
xchg
mov
pop
adc
inc
shl
xor
push
mov
cmpl
add
xchg
sbb
inc
divb
scas
mov
data16
sbb
gs
in
loopne
int
and
push
jl
xchg
push
fs
aam
lret
ss
jb
in
add
ljmp
clc
sbb
cmp
rcll
adc
dec
js
mov
xor
jmp
mov
push
fldt
sti
mov
sub
mov
imul
gs
or
clc
push
out
cmp
aaa
stos
repz
sbb
add
mov
pusha
rorb
stos
push
aaa
int
in
scas
rol
cmpsb
loop
and
inc
push
adc
fdiv
ret
mov
in
pop
pop
pop
and
and
cmpsl
mov
jae
movsb
in
or
mov
mov
sbb
push
xlat
mov
adcb
testl
push
outsb
call
out
add
out
dec
and
mov
cmp
inc
jp
jb
sbb
es
faddl
dec
pop
pop
out
mov
xor
imul
stos
fldl
mov
xchg
mov
jo
fidivrl
pop
outsb
pop
es
pop
rcr
es
jl
cli
jbe
pop
inc
sarb
les
jb
push
outsb
aam
jno
fdivrs
mull
xor
fsts
loopne
out
and
outsb
js
stos
push
call
orl
sarb
fiadds
pop
jb
dec
imul
out
outsl
push
dec
ret
add
test
out
push
lahf
filds
xor
mov
xlat
cltd
imul
out
mov
mov
sub
inc
int
mov
lods
imul
fsubrp
ret
push
dec
mov
outsl
or
adc
pusha
mov
cli
sub
ja
popf
add
cmp
in
lods
adc
xchg
pop
jl
dec
push
xchg
lods
ret
adc
jno
lret
push
arpl
stos
mov
mov
test
xor
mov
add
jo
or
aam
cmp
xor
in
out
jne
fstl
or
sahf
aas
push
mov
jo
pop
popf
adc
xchg
and
out
andb
insl
inc
jmp
xor
nop
jbe
sbb
cmpsl
inc
dec
push
int3
test
js
gs
nop
mov
jns
test
pop
pop
inc
and
mov
outsl
jb
rcll
inc
pop
enter
ds
adc
ds
movsl
test
and
jl
xor
mov
addl
lahf
dec
or
xor
imul
cwtl
call
flds
jge
pop
cmp
push
into
ret
out
pop
fidivs
mov
mov
mov
fisubrl
xor
xchg
cmpsl
mov
add
stos
repz
ror
mov
sub
cmpsl
mov
adc
imul
mov
inc
jg
addr16
xor
rolb
imul
fwait
cmp
in
inc
scas
shl
dec
or
int
and
int3
mov
das
or
icebp
ss
cmp
into
mov
mov
and
add
sub
xor
cwtl
push
rorl
sub
mov
icebp
dec
xor
xchg
mov
imull
add
cmp
pop
sbb
jp
jne
cmp
xor
push
sub
in
divb
sub
cmc
pop
jno
dec
sti
pop
cld
add
sbb
mov
imul
sti
and
jecxz
fildll
ljmp
loopne
dec
xor
sbb
inc
cwtl
in
adcb
or
dec
push
cltd
andl
dec
jle
ret
push
mov
pop
mov
push
icebp
pop
mov
jp
scas
mov
mov
push
mov
push
aad
and
or
iret
pop
out
add
pop
fdivrs
insb
js
xchg
pop
outsb
insl
sbb
adc
fstps
aaa
xchg
je
sub
int
jns
sbb
inc
sbb
addr16
dec
imul
cmp
inc
pop
les
sbb
cltd
pop
add
xchg
bound
jno
cwtl
clc
add
iret
mov
hlt
mov
xchg
xchg
pop
mov
xor
and
xchg
lret
sub
sahf
dec
push
inc
lcall
outsb
pop
and
scas
add
test
xchg
in
sarb
icebp
dec
lahf
dec
mov
mov
imul
sub
lahf
cmpsl
lds
es
imul
jmp
inc
and
std
mov
pop
sub
or
dec
repz
mov
orl
inc
bound
xchg
or
jbe
xor
cwtl
icebp
dec
push
mov
pop
jl
pop
cwtl
imul
and
mov
es
inc
incl
inc
rclb
jo
push
aaa
push
push
repz
outsl
dec
inc
outsl
and
jnp
lret
fbld
mov
cli
sbb
push
xchg
mov
xchg
sbb
testl
addr16
test
cwtl
mov
cli
or
shlb
sbb
jo
ret
sub
jge
pop
fs
jecxz
in
jb
push
or
mov
out
into
hlt
jne
sbbb
out
adc
rorb
sbb
shlb
clc
adc
cmp
mov
push
les
add
lret
and
pushf
movsb
mov
xchg
cwtl
test
jle
jge
xchg
xor
cmp
bound
and
xchg
scas
fistps
and
rorl
scas
cwtl
or
dec
dec
and
and
and
ljmp
test
mov
out
push
sahf
cltd
das
sbb
jnp
aad
mov
adc
push
in
test
popf
imul
sbbl
inc
push
jnp
addr16
mov
jne
inc
outsb
xor
les
or
leave
fwait
dec
mov
insb
xchg
xor
stos
inc
fcomps
insl
es
daa
or
cmp
iret
outsb
push
jb
jmp
pop
push
mov
cmp
jmp
popa
jbe
fimull
mov
fldt
inc
inc
test
ss
xchg
mov
and
or
mov
testl
icebp
sub
shlb
ret
popf
and
cmp
xchg
pop
ret
rol
aas
aaa
gs
ja
inc
ljmp
ret
xor
dec
mov
inc
add
out
test
out
in
dec
call
jns
jmp
push
xlat
fstpt
sarl
pushf
sbb
cs
adc
in
test
clc
xchg
addr16
pop
testl
andl
jno
sti
sub
pop
sub
mov
scas
push
aam
push
scas
outsl
pop
in
push
push
hlt
out
leave
cmp
cwtl
or
adc
push
and
pusha
sahf
popa
movsb
sub
push
mov
fcomps
lods
dec
dec
pop
adc
in
and
cmp
out
jmp
inc
rorl
mov
call
icebp
call
adc
leave
xor
fwait
daa
mov
stc
loopne
xchg
out
xchg
clc
and
cmp
mov
xchg
clc
lahf
rorl
in
xor
mull
out
dec
cmp
mov
enter
cmpsb
in
lret
jp
pushf
inc
lret
fcoms
js
je
xchg
repz
push
xchg
or
lret
mov
cmp
push
aas
gs
jae
push
or
xchg
fdivs
enter
push
push
cmpsl
adcb
out
int
int
aaa
insl
ss
add
sbb
into
xor
outsb
and
enter
sahf
ret
outsb
mov
cmpsl
add
push
or
pop
dec
scas
adc
test
push
xlat
mov
in
cmp
jne
xlat
sti
mov
insb
inc
repz
pop
shll
fstpl
scas
push
pop
jae
mov
pop
mov
test
jns
jmp
addr16
bnd
xor
cmpb
dec
sub
dec
loope
adc
push
mov
push
dec
xor
mov
repz
ret
push
xchg
aad
lea
pop
dec
int3
jge
out
push
xchg
adc
data16
push
mov
cmp
xor
mov
xor
add
aas
mov
pop
push
mov
xor
jns
cs
rcrl
arpl
arpl
inc
shll
xor
insl
xor
cwtl
lea
in
inc
lds
sub
int
cli
outsl
sub
cmpsl
mov
in
push
stos
leave
mov
inc
les
adc
adc
rorb
cmc
xor
xchg
fsubp
jnp
mov
mov
mov
shll
or
add
dec
push
call
dec
push
cwtl
fisttps
and
out
rclb
jl
or
cld
loopne
adc
jo
insl
sub
mov
inc
sbb
lods
xchg
ficompl
xchg
aam
enter
cmpsl
sarl
fcoml
or
add
in
fcomps
sbbb
mov
in
cmpb
fiaddl
stos
lods
mov
sbb
push
jne
cmp
ud0
mov
clc
add
icebp
dec
adc
mov
decl
and
adc
sub
dec
jns
mov
aam
xor
enter
repnz
stos
iret
adc
jmp
mov
push
insb
out
sbb
les
add
pop
cmpsl
xor
mov
aaa
jmp
sbb
test
xchg
mov
jbe
js
jl
mov
pop
ret
xor
mov
push
xchg
mov
enter
imul
sub
in
and
les
dec
lods
hlt
decl
out
mov
jmp
int3
lods
xor
adcb
jg
jns
fisubrl
std
sbb
and
mov
mov
xor
sub
adc
push
out
fiaddl
pop
sub
and
pop
and
dec
add
imul
sbb
sarb
movsl
pop
in
stos
lret
test
xor
jle
aam
mov
add
test
into
xchg
dec
popa
pushl
pop
dec
jge
das
jbe
imull
es
ss
stc
mov
dec
push
andb
fisubs
mov
popl
fbld
cmp
shll
pop
or
and
pushf
push
cmp
shlb
into
imul
or
lods
popa
mov
adc
cmpsl
lds
cli
in
xchg
cmpsl
mov
ljmp
sub
inc
adc
jb
push
jns
movsb
pop
inc
negl
lds
add
ja
dec
lea
sbb
movsl
int
jge
jl
mov
bound
jo
cld
cmpsl
and
sbbl
jp
andl
movl
nop
adc
or
mov
sbb
pushf
jmp
mov
pusha
test
mov
daa
and
push
loop
andb
lods
cmp
mov
xor
mov
loop
mov
mov
adc
scas
xor
adcb
cmp
adc
and
sbb
addb
les
mov
and
sbb
add
stc
and
pop
fnsave
cmp
sbb
cmp
mov
pop
sarl
inc
inc
pusha
clc
xor
insl
out
mov
pop
jp
into
and
mov
jae
dec
cmp
or
subl
dec
mov
or
xor
movsl
mov
lds
insb
popf
cmpsb
lret
add
cmp
and
push
or
xor
and
jae
xchg
jmp
leave
pop
int
aad
ret
lea
inc
jg
jnp
adc
pop
rolb
andb
in
cwtl
aad
cmp
enter
xor
xchg
mov
aas
in
in
ss
sar
pop
gs
rcll
cmp
mov
and
add
subl
test
xchg
lret
int3
pop
scas
push
cmp
push
xor
cli
fistpl
ret
test
and
xchg
stc
inc
pop
rcll
and
xlat
fisubrs
add
and
mov
loope
ret
addr16
or
daa
sarl
and
out
mov
mov
movsl
cwtl
outsl
scas
imul
or
push
xchg
and
roll
stos
push
xchg
test
dec
imul
and
adc
leave
lods
test
adc
inc
std
stos
jae
push
es
adc
add
gs
jae
xchg
mov
divl
lods
ja
mov
xchg
jne
add
btc
out
insl
clc
shlb
cmp
loop
lods
inc
gs
pop
push
and
or
fildll
and
pop
adc
stos
nop
test
pop
pop
inc
mov
fildll
ror
xor
fidivl
push
push
mov
xchg
pusha
pop
sub
adc
or
data16
scas
mov
inc
out
mov
jg
inc
mov
inc
dec
xchg
pop
es
jecxz
jg
aas
fbld
gs
xchg
jge
dec
pop
cmp
inc
ds
data16
negb
lods
mov
adc
mov
push
xor
add
ja
sub
pop
es
insl
das
mov
push
cmc
sbb
mov
push
mov
fdivr
dec
push
mov
je
out
idiv
call
pop
stos
inc
and
shlb
mov
sti
lret
adc
mov
add
pop
xchg
sbb
cmpsb
add
daa
push
arpl
dec
fdivrs
test
cld
inc
or
ficoms
cmp
sub
ret
cmp
nop
outsl
test
mov
call
dec
cmp
push
pushf
push
enter
add
into
dec
sbb
aaa
dec
cmpl
mov
push
inc
mov
jns
adc
pop
inc
xor
addl
cltd
packssdw
xchg
dec
enter
jae,pn
addr16
mov
mov
sti
mov
push
cld
leave
mov
sbb
xor
sbb
ljmp
jmp
push
data16
test
add
sub
dec
mov
shrd
lret
loope
mov
jg
flds
ds
jnp
sub
clc
lahf
daa
mov
cmp
jge
adc
cmp
mov
push
int
mov
dec
sub
mov
pop
push
cmp
cwtl
lods
xor
aad
out
push
out
stos
sub
push
sahf
je
dec
les
iret
je
out
mov
inc
push
fcomi
hlt
stc
inc
cwtl
add
push
jge
add
sbb
add
mov
das
in
icebp
cmp
repnz
ret
or
add
jne
or
or
adc
mov
adc
and
mov
mov
jb
std
into
outsl
push
sbb
inc
push
pop
push
xchg
mov
jg
lods
sbb
lock
fsubrl
mov
sub
stos
and
loop
inc
repz
imul
lods
mov
idivb
out
pop
jmp
push
fwait
adc
pop
mov
push
dec
into
dec
xor
fldln2
ret
push
mov
adc
bnd
int
push
shll
aam
cli
cmp
stos
scas
scas
jp
lret
xor
mov
mov
mov
stos
xchg
xchg
in
push
fcmovnu
in
nop
das
data16
jne
movb
loop
mov
rcl
jmp
outsl
out
mov
pop
scas
mov
fs
mov
and
pop
mov
push
adc
movq
cmpsb
sahf
xor
out
adc
mov
rcr
xlat
nop
test
pop
int3
ljmp
xlat
ljmp
test
bound
cmpsb
xchg
fucom
and
inc
insb
or
mov
lret
xchg
iret
push
add
daa
ffreep
push
je
fldenv
fmull
mov
cmpsl
and
and
cwtl
fcoml
jp
and
enter
jle
or
mov
push
cmp
push
js
jns
xchg
sub
lret
pop
imul
stos
mov
stc
mov
sbb
loop
fists
outsb
hlt
pop
mov
ret
jne
sbb
xchg
out
lods
mov
daa
mov
scas
gs
shlb
push
je
lods
mov
jo
mov
clc
ret
push
movsb
cmp
push
mov
lcall
ja
clc
mov
add
and
pusha
in
mov
das
in
lods
sub
inc
ret
inc
ret
in
and
xchg
add
ss
add
mov
pusha
cmp
fs
shlb
call
out
xor
add
stc
lods
push
outsb
pop
cmp
es
mov
test
cmp
xor
mov
push
xchg
test
outsb
inc
ja
mov
dec
mov
inc
cmp
dec
pop
outsb
pop
pop
popf
cmpsb
popf
call
ja
adc
lds
jp
in
ds
int3
xchg
fdivl
test
js
mov
mov
lods
test
push
dec
dec
les
push
pusha
jle
movsl
sub
loopne
idivl
iret
cmp
mov
ljmp
adc
mov
fsubp
int
mov
adc
mov
xor
push
ja
inc
adc
scas
loope
pop
popa
mov
mov
std
fcom
sbb
push
aam
dec
push
fwait
xchg
cmp
inc
outsb
sbb
mov
ret
in
divb
sub
jbe
lcall
jmp
inc
shll
pop
pop
dec
add
fisttpl
inc
and
adc
clc
pop
orb
sub
add
daa
int3
int3
sub
push
push
pop
sub
add
and
pusha
push
lods
dec
pusha
or
dec
mov
inc
inc
mov
cmpl
mov
sti
mov
pop
mov
sbb
cmpsb
and
mov
or
insb
lds
pop
push
mov
jp
aaa
push
add
or
fstps
in
and
fidivl
outsl
mov
cli
insb
adc
xor
mov
je
push
dec
add
inc
fwait
lds
xchg
rol
push
mov
xchg
mov
xor
movsl
jmp
mov
lahf
jno
lret
fsub
push
pop
pop
loopne
insb
mov
into
and
mov
addb
xorl
dec
fwait
mov
cmpsb
push
and
mov
mov
enter
jno
dec
cmp
inc
test
call
jb
lret
fsubrs
cmp
icebp
mov
xor
pop
mov
and
cli
xor
jne
or
pop
and
xchg
jle
sahf
test
add
and
cmp
fdivrl
jge
pop
bound
inc
sub
cmp
shrl
pop
sarl
sbb
jl
cmpsb
sbb
or
xor
jle
movsl
shl
push
ficompl
adc
mov
rorl
mov
or
sarb
and
pop
jmp
and
pop
mul
xchg
pusha
insb
cmp
mov
daa
loope
mov
dec
ljmp
dec
xor
fs
adc
fisubs
mul
imul
leave
mov
and
cli
sbb
rcpps
adc
rol
insb
lahf
mov
push
mov
lcall
lret
push
scas
stos
push
popf
repz
dec
mov
and
sbb
cmp
or
mov
dec
mov
in
xlat
cmpsb
dec
push
xchg
mov
xor
inc
into
inc
int3
sub
and
mov
popa
add
in
aam
mov
push
pop
jnp
and
xchg
push
push
fidivs
hlt
mov
sub
jne
jnp
inc
mov
sbb
adc
daa
lods
loopne
mov
add
std
mov
jnp
sbb
ret
fistpl
sbb
pop
cld
popf
jo
push
lcall
jl
or
inc
addr16
mov
outsl
sbb
andb
ret
pop
js
pop
add
out
jp
add
or
ja
mov
xchg
ss
lods
daa
scas
pop
mov
pop
sbb
jg
repz
xor
stc
add
add
aam
and
js
and
or
popl
fs
fildl
inc
rcrl
cmp
mov
mov
mov
ror
jno
cmp
push
das
adc
mov
cltd
push
insb
mov
jl
mov
pusha
shrl
test
ljmp
cmpsb
jmp
add
mov
ds
imul
adc
ljmp
adc
bnd
xor
mov
into
insl
into
mov
mov
pop
sub
imul
inc
sub
ds
inc
scas
pop
jecxz
mov
mov
sti
cmpsb
gs
jb
pop
das
std
out
push
jne
xor
adcb
jg
jne
cld
out
mov
pop
push
testb
xor
pop
rorl
iret
fcoml
xchg
outsl
mov
jb
pop
jmp
cli
je
inc
into
mov
push
aaa
cmp
fisubrs
mov
xchg
scas
adc
mov
and
fs
mov
sti
cmc
stos
gs
jl
pop
icebp
fldt
es
das
add
aas
cmp
js
mov
scas
add
rcrb
lret
dec
lcall
sub
xchg
loopne
xchg
int
fwait
mov
mov
mov
pop
popf
pop
jecxz
hlt
sub
test
icebp
mov
and
int3
fbstp
dec
pop
mov
jno
sub
sub
int3
movsl
mov
jnp
icebp
pop
mov
in
pushf
mov
add
ror
ffreep
mov
int
aas
imul
mov
fdivrs
outsl
sar
and
insb
dec
jle
rcll
insl
xchg
push
and
and
out
xor
inc
mov
sarl
out
jno
test
pop
mov
jg
or
dec
mov
mov
xchg
adc
add
mov
xorl
pusha
aam
mov
mov
es
adc
mov
xor
and
lock
mov
adc
xor
in
dec
bound
sbb
xor
fucomp
fcoms
mov
and
pop
fnsave
shlb
push
dec
scas
filds
xchg
mov
mov
jb
mov
cmp
sbbb
aaa
inc
mov
paddq
or
lahf
int
stc
les
adc
mov
dec
mov
push
rolb
popf
mov
xchg
adc
cwtl
push
lahf
mov
inc
xor
push
inc
xchg
out
inc
push
jge
das
fisttpl
and
ja
mov
cltd
fidivl
cltd
inc
mov
jbe
or
fs
aad
pop
cli
out
add
jg
pop
aaa
in
sarl
push
pop
xlat
cs
and
sbb
jmp
test
cmp
dec
sbb
pop
aam
inc
ds
fists
outsb
cs
push
std
nop
xor
cmp
xchg
mov
adc
dec
in
out
icebp
mov
scas
addb
mov
xor
inc
mov
adcb
add
adc
jbe
add
dec
add
sub
aaa
push
or
jno
xor
xchg
imul
sub
into
pop
pop
pop
and
jnp
leave
aas
lret
std
and
or
push
sub
mov
push
inc
mov
inc
test
cld
add
pop
imul
lea
fdivrs
imul
cmpsb
jb
shrb
pop
movsl
xchg
pop
icebp
arpl
cmp
mov
sub
aam
out
in
outsl
mov
add
fstl
jp
addr16
pop
or
mov
outsl
mov
js
rcr
loop
pop
loopne
pop
or
inc
adc
lds
rdpmc
test
popf
jo
fildl
fisttpll
bound
test
lahf
scas
push
shll
lret
jb
loopne
mov
push
out
add
jg
popa
xchg
sbb
loop
pop
loopne
fisubl
push
test
ret
sbb
adc
ret
push
mov
aad
test
scas
adc
mov
roll
mov
push
cmpsl
data16
fbstp
loope
mov
jp
ds
lds
test
adc
push
mov
jl
mov
mov
push
mov
lea
stos
lret
cmp
jecxz
test
push
pop
mov
jecxz
xchg
and
push
xchg
clc
out
das
push
xchg
std
push
sbb
add
add
add
dec
cmp
and
and
xor
add
insb
dec
push
jecxz
sbb
cmp
icebp
orl
sarb
xor
xlat
cmp
mov
inc
mov
aas
loop
xchg
sub
popa
pop
push
cmpsl
call
adc
adc
iret
sbb
adc
pop
daa
aaa
stos
jns
sbb
ljmp
xor
dec
ja
nop
xor
mov
and
push
sub
mov
in
iret
sub
xor
cmp
or
inc
pop
scas
rolb
int3
out
jne
push
inc
jl
jo
cmc
push
addr16
pop
in
or
in
and
dec
fsubl
xchg
lods
rolb
or
xchg
cmp
fs
mov
xor
xchg
enter
mov
clc
sti
sbb
jbe
mov
jne
test
add
jbe
lret
jnp
ret
push
aaa
fcoms
sub
rol
inc
insl
ret
dec
in
xchg
pusha
adc
enter
cmp
mov
andb
adc
int
pop
in
cltd
rol
jg
mov
shll
sub
xchg
ret
lods
pop
xor
scas
mov
neg
adc
pop
and
and
in
sub
xor
sbb
rcrl
inc
addb
mov
fmull
and
mov
inc
or
mov
push
dec
add
push
inc
xor
jae
and
pop
dec
inc
pusha
fldenv
cmc
jmp
or
inc
daa
in
lcall
movsl
fstpl
cmp
push
enter
cltd
pop
sti
jmp
stc
xchg
lock
dec
sbb
fbld
jge
jge
mov
lock
jo
cmp
mov
xor
jbe
imul
adc
and
or
push
pusha
icebp
out
fmuls
or
add
scas
mov
inc
aam
sbb
and
adc
fwait
ss
test
lods
aaa
xor
mov
cmpsb
pushf
call
out
push
lret
std
jle
jo
pop
sahf
sub
push
adc
xor
les
push
mov
add
popa
mov
shlb
shrl
loop
sbb
cmpsb
test
outsb
inc
sub
fwait
pop
and
fsubr
sahf
pushf
jnp
and
cmp
icebp
sbbl
inc
out
aaa
add
mov
fcmovnbe
sub
sub
pop
jg
jp
jmp
adc
cmpsl
std
addr16
xlat
mov
jg
mov
dec
cmp
xor
and
pusha
adcb
arpl
or
jo
pop
dec
inc
imul
notb
mov
popa
inc
sbb
mov
pop
cmc
notl
pop
xor
punpckhdq
stos
xchg
xchg
stos
sarl
pop
stos
mov
pushf
stos
mov
mov
mov
lods
pop
lea
cmp
in
jae
rcl
xchg
out
sub
mov
loope
add
xor
insl
scas
jb
sub
orb
xchg
mov
jno
xchg
or
inc
lret
fildll
lods
and
cmp
jbe
mov
stc
out
xchg
das
mov
movsb
ja
push
jge
and
push
gs
adc
insl
movsb
push
adc
xchg
lock
mov
mov
fadds
sub
subb
mov
xchg
popfw
cld
push
mov
btc
test
ja
pop
lds
cmp
mov
xchg
int3
xor
mov
out
cmp
popf
pop
test
mov
mov
xchg
test
pop
ds
mov
mov
cmc
cmp
fcmovnb
aad
adc
mov
pop
arpl
data16
adcl
lahf
or
and
roll
aas
call
repnz
test
aaa
scas
and
cs
mov
ficoms
std
add
stc
xchg
std
jbe
aas
xchg
hlt
in
or
cwtl
jns
iret
mov
sbb
int3
std
insl
add
filds
sub
out
lret
or
pop
je
xchg
mov
xchg
or
jmp
and
out
pusha
push
sbb
inc
jns
ljmp
jns
cmc
out
adc
xor
push
sub
pop
push
pop
cmpsl
lret
mov
inc
aam
pop
pop
mov
out
xchg
mov
cmpsb
mov
inc
out
movsb
add
cli
roll
gs
sbb
data16
sbb
push
sbb
push
cmp
pop
xor
ds
fstps
jecxz
add
push
in
push
pop
fildl
and
scas
dec
or
inc
inc
sbb
aaa
in
pop
sbb
leave
and
imul
mov
mov
mov
loop
rcll
pop
notb
loop
inc
sbb
insb
cmpsb
sbb
mov
push
add
cmp
pop
inc
pop
fxrstor
xchg
xor
mov
sbb
or
push
sarb
loop
fsub
lret
jae
mov
rolb
xchg
ficompl
imul
xorb
sbb
push
lret
icebp
or
or
fsubl
push
stos
in
mov
fistps
sti
adc
fwait
lods
lock
push
mov
lret
mov
push
xchg
inc
mov
addr16
and
call
flds
rol
aas
and
jbe
rolb
daa
cmp
mov
mov
ror
pop
or
out
ds
jecxz
inc
lret
negb
inc
sbb
mov
ret
std
ss
das
dec
xor
dec
lock
lds
test
sarb
sbb
xchg
mov
lret
inc
mov
dec
cmp
in
cmc
sbb
into
outsl
jl
mov
or
insb
cmpsl
or
and
orl
xor
push
adc
mov
pop
jb
and
xor
std
jb
cltd
out
push
dec
xchg
mov
mov
xchg
push
aas
faddp
xchg
mov
add
nop
movsb
gs
aam
mov
push
mov
hlt
data16
test
mov
pop
fisttps
sub
fwait
jae
jg
mov
xchg
inc
mov
fstl
xchg
sbb
shrb
mov
fisubs
ja
add
lds
mov
mov
sub
in
xor
rcr
push
inc
frstor
push
mov
cmp
dec
call
push
xor
cmc
fs
cmpsb
dec
sub
dec
push
insl
out
testb
in
sbb
cmp
push
dec
and
cmc
and
scas
icebp
enter
loope
dec
iret
mov
xchg
xor
pop
incl
stos
jo
jl
or
jo
mov
pushf
adc
jns
mov
outsb
xor
out
int3
cs
mov
xchg
roll
push
and
sti
stc
cmpsl
jbe
test
rcrb
lcall
dec
pop
fcoml
test
or
rcr
lret
sub
and
mov
sub
add
es
stc
clc
repz
es
cs
sub
cmp
enter
ja
jl
popa
push
leave
xchg
imul
mov
mov
stos
inc
inc
cltd
jae
shlb
adc
outsl
cmp
xor
push
fs
ja
test
pushf
mov
inc
xor
cmpsb
mov
daa
xchg
add
lret
mov
ds
sahf
xor
sbb
or
adc
outsb
repnz
icebp
mov
or
mov
push
inc
mov
add
jnp
lds
jae
xchg
in
outsl
or
mov
call
inc
sub
xchg
cmp
pop
std
lret
popa
mov
clc
cmp
hlt
sub
pop
nop
and
adcb
push
push
shl
sahf
add
fisubrl
idivl
clc
fistps
dec
pop
cmp
rcl
stos
cmp
lret
push
in
push
mov
daa
sub
das
test
clc
les
cmp
arpl
pop
push
cmpsl
xor
fdecstp
push
sub
fsubl
add
pushf
jae
iret
es
inc
insl
ss
pop
les
adc
or
dec
aad
lds
stos
cld
mov
add
popf
xor
test
popa
arpl
adc
lret
push
enter
jno
jnp
jge
stos
ljmp
sbb
sbb
add
out
mov
or
shlb
cwtl
adcb
jmp
xlat
adc
arpl
notb
cli
int3
fwait
je,pt
sbb
pop
mov
inc
inc
mov
sub
cmpb
jb
mov
rorb
iret
dec
inc
stos
pop
sub
leave
jp,pn
or
ja
imul
lock
insb
sbb
prefetch
dec
repnz
movsl
jnp
loope
rcrl
push
jns
fcomip
xlat
data16
dec
stos
les
stc
seta
hlt
sub
pushf
jge
xchg
xlat
pop
out
cli
fstpl
sub
out
ljmp
bound
repnz
in
es
add
imul
push
and
lahf
movsl
inc
bound
add
outsb
dec
or
jecxz
xchg
lea
mov
je
push
mov
lods
push
xor
shlb
mov
add
scas
add
test
leave
sbb
xchg
das
scas
repz
mov
cmc
or
dec
mov
sbb
xchg
nop
adc
xchg
out
xor
lahf
int
jle
das
sbb
fdivs
scas
cmp
rorl
and
jge
mov
pop
inc
rorb
shll
sub
or
mov
wrmsr
mov
jns
push
xchg
inc
js
jge
ja
lcall
inc
sub
mov
mov
fsts
xchg
or
insb
adc
dec
cmc
and
js
push
xlat
cmp
mov
inc
pop
adc
aaa
xor
xor
mov
shlb
sub
int3
stos
and
scas
in
mov
jnp
xchg
test
xchg
jbe
jl
int3
hlt
xchg
int3
fistps
outsl
jl
notb
jno
jno
fisubrl
and
cmp
mov
in
xor
sub
into
mov
fs
cmp
push
icebp
adc
add
inc
lret
fldenv
sbb
or
dec
sub
cmp
divb
lods
mov
adc
aaa
adc
fisttps
fldl
inc
pop
xchg
mulb
push
dec
pop
inc
aaa
test
jle
and
inc
not
cs
pop
push
pop
inc
xor
into
inc
jecxz
pop
cmpsb
imul
fs
lret
stos
jnp
fadds
movsb
loope
enter
and
or
inc
pop
les
stos
fadd
stc
cmp
push
push
test
les
es
pop
xchg
mov
or
inc
mov
ret
adc
data16
outsb
dec
mulb
xor
enter
shrl
lea
scas
in
xor
mov
loop
and
mov
sbb
enter
fcoml
ret
mov
or
push
adc
mov
xor
cmc
mov
jno
or
xchg
daa
lcall
scas
test
rcll
mov
ss
and
mov
jbe
cmp
shll
mov
insb
push
nop
les
sub
pop
insb
inc
sub
data16
pop
xchg
dec
ljmp
jg
popf
out
pop
movsl
push
dec
jmp
out
dec
cmpsb
pop
subl
adc
insb
sub
xor
mov
mov
sbb
jmp
pop
mov
dec
sub
nop
jnp
or
and
push
jecxz
pop
jmp
sub
xorl
xlat
fwait
cs
dec
fdivs
and
aad
loop
pop
add
jge
xchg
sbb
push
mov
in
bound
and
std
push
addb
mov
nop
and
adc
sarb
mov
leave
push
test
fidivrl
add
dec
into
aas
aaa
sbb
test
mov
clc
repz
rol
icebp
popf
xor
push
mov
data16
push
mov
sub
cmp
mov
adc
sub
movsb
and
das
cmp
push
je
jecxz
aam
lock
fists
scas
outsb
or
push
pushf
pop
mov
mov
cmpsb
pop
xlat
jle
lods
iret
or
inc
shrw
lock
mov
movsl
aaa
rorb
lret
pop
ds
push
fcmove
in
test
pop
push
push
insb
sub
push
or
and
test
ss
push
pop
insl
mov
in
leave
push
and
and
adc
push
sbb
cmpsb
aam
and
xor
fists
getsec
jnp
andb
outsb
xchg
adc
xor
push
scas
and
push
bound
in
rolb
repnz
icebp
jmp
mov
daa
mov
inc
push
push
test
scas
ds
mov
mov
cmp
loope
and
in
icebp
jl
push
inc
das
cmpsb
cltd
imul
xchg
aas
mov
stos
lret
push
push
mov
pop
jmp
inc
dec
fwait
ljmp
stos
sbb
addr16
ja
rorl
push
mov
dec
mov
cmc
jae
clc
cmpsb
xchg
push
push
pop
out
mov
movsl
js
sub
cmp
pop
shl
nop
jmp
gs
mov
in
scas
mov
fcoms
push
inc
data16
cmovl
loop
sub
dec
gs
push
dec
inc
mov
lods
mov
sub
outsl
or
sbbb
sti
pop
adc
dec
arpl
outsl
nop
push
popf
jecxz
inc
stc
xor
and
mov
ja
dec
jle
aaa
test
sbb
pop
xlat
sub
cli
jg
scas
mov
scas
out
das
jne
xchg
pusha
nop
adc
ja
das
inc
fisttps
stos
lret
mov
jbe
cmp
in
fcmovne
sub
jecxz
pushf
maskmovq
notl
je
fiadds
sbb
or
lcall
and
sbb
push
sbb
aaa
lret
bound
cmpsb
decl
outsb
or
xlat
xchg
xlat
shrl
pop
mov
icebp
int
push
call
xchg
loopne
pop
xchg
int
subb
push
dec
mov
pop
or
pop
shrl
std
je
inc
push
aaa
sub
int
lds
dec
cmpsl
das
jecxz
adc
repnz
or
imul
mov
cmpsb
insb
ret
into
xorl
lcall
aas
fsubrl
mov
cmpsb
mov
ljmp
xlat
gs
ret
rcrl
dec
sbb
add
aam
xchg
aad
repz
stc
aas
loope
in
pop
jle
sahf
incl
ljmp
pop
mov
int
mov
pop
or
adc
dec
arpl
outsb
fdivrl
pop
add
xor
scas
xor
aas
cmpsb
sarl
imul
or
les
imul
pop
shl
jae
fisubrl
push
and
push
add
push
push
adc
mov
gs
xlat
hlt
sbb
int
rcrb
and
jmp
jne
or
push
cli
sbb
inc
push
fildll
adc
movsl
hlt
sbb
shrb
xchg
loop
aaa
and
cmpsl
in
sub
add
xor
inc
xchg
movsl
xchg
loope
repz
cmp
movsl
cmp
mov
in
xor
push
stos
das
leave
cmp
inc
mov
mov
aad
mov
cltd
frstor
ja
inc
xor
std
loope
inc
dec
ficomps
hlt
mov
xchg
nop
jmp
cld
add
pop
les
in
dec
hlt
inc
leave
sarb
test
cmpsl
pop
mov
jle
xor
cmpsb
mov
loop
cmp
into
add
jp
add
fldt
mov
jecxz
jnp
shr
popf
cld
push
faddp
jl
subl
adc
xor
test
push
push
ljmp
pop
call
xlat
sarb
pop
xchg
test
test
mov
ret
jne
fistpl
pop
mov
xchg
mov
into
imull
mov
or
scas
mov
xor
out
shrb
imul
es
cmp
jmp
mov
push
test
sub
push
subl
sti
mov
test
cmp
rorl
bound
pop
aam
jns
stc
mov
movsb
add
ret
pop
ficoms
inc
adc
decl
aas
push
inc
xorb
imul
outsb
xchg
int3
adc
sbb
dec
outsl
add
int3
es
jp
sti
dec
mov
adc
mov
dec
and
mov
inc
jl
ds
cmc
cmp
lods
std
mov
jo
outsb
mov
xchg
add
xor
and
scas
inc
jp
push
xor
cmc
mov
push
arpl
test
dec
test
idivb
dec
cmpsl
imul
mov
sbb
inc
addr16
adc
fstl
into
jp
jbe
insb
or
cmp
icebp
and
stos
lea
and
adc
adc
nop
jns
jno
shll
fildl
jns
insl
mov
out
and
pop
xchg
push
stos
in
xor
add
sub
insb
pop
out
shrl
pop
jns
sbb
jg
imul
dec
pop
and
fldcw
lcall
pusha
leave
mov
inc
test
adc
in
cmpsb
repnz
aas
xor
test
jae
fs
sub
mov
pop
xlat
dec
gs
push
clc
sbb
nop
ja
xor
mov
lods
arpl
push
inc
js
jle
jb
sbb
addb
pop
fcmovu
xor
shlb
mov
sbb
jne
jmp
sub
andl
std
cmp
clc
test
movsb
adc
cmp
inc
addr16
xor
sahf
lea
addr16
cltd
movsb
popa
lods
cmp
fnstsw
cmpsl
dec
iret
aaa
aam
enter
std
rcrb
push
push
stos
and
ss
sbb
and
push
iret
hlt
xchg
mov
jg
fstpt
bound
jae
rsqrtps
pop
shrl
ja
clc
aaa
nop
movl
mov
sbb
sbb
pop
cmp
sub
xchg
mov
shl
dec
cmpps
mov
dec
xor
std
mov
fistpll
xchg
mov
inc
fisttps
aad
lods
pavgw
pop
dec
mov
mov
test
les
mov
dec
stos
sbb
lods
shrl
push
incb
ss
mov
sahf
mov
pop
test
xchg
or
xor
inc
pushf
and
movsl
push
scas
stos
jae
pop
dec
lahf
lcall
test
in
stos
sbbb
test
push
repnz
test
jge
filds
outsl
jo
sarl
loopne
fists
enter
dec
ret
mov
lret
inc
mov
outsl
mov
loope
push
lods
data16
xor
punpcklwd
outsb
addr16
fucomp
testl
pop
dec
add
movsl
lret
ss
sub
adc
ss
sub
in
js
lea
adc
enter
jle
sub
inc
push
dec
fldl
cltd
lcall
das
pop
push
or
sbb
arpl
xor
pop
stos
or
rorl
mov
ja
add
xor
push
add
xchg
jns
pop
mov
mov
inc
aaa
stc
dec
lock
mov
jmp
xchg
and
or
sbb
out
loop
int3
mov
mov
aad
xor
adcl
fdivrl
lcall
stos
arpl
dec
in
lods
cwtl
cmp
cwtl
rol
sbb
movhps
mov
push
sub
mov
push
ret
xor
or
cmpsl
xchg
jnp
add
push
dec
mov
pusha
out
aaa
sub
adc
add
mov
cmpsb
ss
mov
mov
mov
in
and
movsl
mov
adc
push
int3
inc
lret
inc
bound
inc
add
xchg
sub
xor
dec
lods
js
cltd
cmp
ja
lea
aad
imul
adc
xchg
sbb
mov
repnz
mov
jge
stos
push
cld
jp
test
sub
push
shrl
mov
jo
push
add
cmp
call
bound
and
dec
ret
push
mov
xor
imul
int
push
rorl
fiaddl
dec
sub
or
sbb
test
ss
addl
ss
adc
inc
sbb
adc
sbb
rcll
daa
negb
mov
push
sub
aam
cmpsb
arpl
std
or
iret
or
mov
imul
sub
leave
fbld
loopne
clc
mov
ret
xor
stos
stc
xchg
aam
ret
mov
adc
movsb
test
push
lahf
mov
inc
repnz
adcb
test
fucomi
in
arpl
mov
inc
lock
pop
mov
ret
push
xor
push
stos
push
dec
or
adc
test
cmp
mov
pushf
add
jl
das
stos
roll
or
cmp
mov
xor
inc
cmpsb
into
out
xchg
test
mov
jb
cmp
negl
jo
aad
cmp
dec
mov
mulb
sahf
jl
pop
lcall
pop
xor
and
jb
into
sub
pop
das
rclb
test
out
ret
mov
imul
xchg
cli
cld
test
lret
repnz
aad
or
cs
push
jl
in
xchg
mov
adc
push
jo
leave
sub
push
mov
cmovo
push
sbb
cwtl
dec
dec
int3
jb
pop
fnstenv
fisubrs
jbe
cmpsl
jns
ds
dec
dec
cmp
pushf
dec
jge
sarl
xor
add
into
incl
cmpsl
inc
icebp
daa
xchg
lds
test
adc
pop
out
pushf
jl
and
lds
push
arpl
inc
popa
pop
out
daa
mov
push
dec
xor
ret
fbstp
je
subl
and
cmp
lcall
add
ss
fwait
call
pop
mov
loopne
out
leave
cmp
mov
mov
cmc
or
insb
loope
xchg
andb
jo
jg
push
cld
xchg
push
mov
das
mov
dec
into
iret
ss
sbb
lock
pop
in
add
sbb
arpl
insl
pusha
fdivl
xor
jne
bound
mov
lock
mov
icebp
lea
in
gs
or
jns
xchg
fwait
pop
cwtl
sbb
scas
and
lcall
xchg
sub
jne
in
inc
shll
or
aaa
fsubrs
cmp
incl
cmpsb
gs
fiadds
and
addr16
ret
mov
dec
mov
inc
sub
cwtl
xchg
xlat
mov
aam
dec
lock
push
or
test
fidivrs
dec
sbb
cs
arpl
mov
add
mov
enter
or
jecxz
or
xchg
out
push
dec
mov
inc
xchg
pop
inc
fbstp
fcomps
push
push
iret
adc
pop
aas
mov
pop
inc
jge
and
jmp
pop
sbb
jns
jns
cmp
cld
push
pop
mov
lods
inc
pop
hlt
idivb
push
and
lea
or
dec
mov
sbbl
imul
leave
repnz
aaa
popa
cli
adc
mov
sbbb
orl
or
popf
sub
orl
in
jo
nop
xchg
fstpl
jne
push
imull
das
ret
and
pop
push
jge
inc
mov
pop
nop
pusha
mov
mov
pop
loopne
dec
lret
sub
sbb
arpl
dec
ret
push
lcall
fsubl
xor
xchg
lods
mov
mov
es
cmp
ss
test
data16
sarl
rclb
adc
or
mov
mov
cmpsl
jmp
inc
push
stc
mov
fs
fcompl
add
push
mov
pushf
mov
stc
sbb
sbb
nop
add
call
cltd
imul
mov
mov
lds
xlat
jb
call
test
pop
jns
xor
lahf
out
adc
jge
pand
jmp
arpl
inc
mov
push
bswap
jmp
je
ftst
pop
cmpl
in
sbb
mov
mov
ret
sbb
add
addr16
into
mov
add
xchg
andl
cmp
cli
mov
enter
jl
add
lret
imul
push
paddd
add
call
pop
sub
imul
mov
sub
mov
outsb
dec
mov
out
fadd
les
jne
stos
sbb
test
ss
pop
xchg
sbb
repz
push
sbbb
adc
xchg
or
adc
imul
loope
imul
mov
mov
xlat
mov
loopne
dec
xlat
std
mov
add
stos
or
mov
or
or
xchg
rcrb
add
je
and
rolb
jle
inc
pop
fwait
adc
dec
ss
and
mov
mov
jmp
push
dec
pop
dec
push
loope
mov
xor
xorb
or
xchg
sub
mov
xor
jns
push
daa
imul
repnz
fsubr
jae
int3
ret
lret
sbb
lods
iret
pusha
aaa
js
dec
repnz
stos
add
insl
and
mov
out
ss
cmp
xor
cmp
hlt
stos
inc
cmp
mov
clc
sbb
lret
clc
shrb
pop
and
pop
aad
mov
and
insb
ror
mov
leave
cwtl
xchg
in
insb
jp
xor
hlt
loop
jmp
xor
outsl
mov
pop
shl
hlt
scas
fistpll
adc
bound
lret
mov
jae
aam
repnz
cmp
inc
inc
scas
mov
popa
inc
addl
sbb
cmpsl
cli
xchg
mov
sbb
adcl
adc
ret
insb
inc
mov
xchg
xor
ret
jge
inc
incb
stos
jo
mov
pop
push
inc
fwait
test
adc
dec
jl
xchg
fiadds
jae
dec
jne
lock
mov
outsb
pop
or
jnp
cwtl
imul
xor
decb
jno
mov
cltd
xorb
or
inc
sub
fmuls
in
icebp
sahf
inc
pop
jo
pop
lds
jae
pop
rclb
hlt
mov
shr
pop
xor
and
dec
test
mov
outsb
push
cli
hlt
add
outsl
incl
divb
test
out
stos
es
mov
mov
inc
es
aam
mov
inc
lea
adc
dec
xchg
add
negb
inc
out
leave
js
mov
int3
fucom
popa
cmpsl
in
sbb
insl
icebp
push
bound
fsubrl
mov
loopne
addr16
clc
and
and
add
jo
imul
or
ret
sbb
fstpt
jge
sti
cmp
mov
xchg
pop
dec
xorl
push
push
repz
dec
adc
mov
clc
lods
and
jb
or
inc
and
loop
inc
and
cmp
test
dec
jmp
les
cmp
add
into
and
outsb
jecxz
inc
jge
sarw
cmp
xchg
es
mov
dec
dec
push
lds
pusha
rcrb
cmp
dec
push
subb
enter
lret
and
aaa
test
iret
xlat
pop
mov
popf
mov
dec
fidivl
mov
cmp
dec
push
packsswb
mov
in
outsb
faddl
sbb
lods
aaa
ss
xor
fs
inc
scas
aam
std
jle
stc
add
mov
mov
addr16
leave
pusha
lret
cmp
adc
xchg
aaa
inc
mov
outsl
cmp
xor
pop
push
sbb
mov
cmpsl
mull
push
inc
mov
in
xchg
xor
lods
jge
in
loope
iret
bound
dec
lahf
and
fucomip
fimull
mov
js
mov
addb
cmp
pop
xchg
andnps
das
iret
hlt
xchg
repnz
push
scas
jae
sub
mov
into
aas
insb
in
xor
in
in
sbb
insl
push
jle
push
decb
push
push
jmp
jb
cs
pop
pushf
imul
rorl
jno
push
es
sbb
jno
xchg
test
stc
call
arpl
pop
lret
pop
lea
inc
sbb
ficoms
test
jle
jo
in
data16
divb
push
sbb
stc
popf
mov
pop
pop
jne
fdivr
out
ret
push
gs
xor
stos
mov
out
or
push
in
lcall
mov
mov
jge
sub
icebp
pusha
sub
jnp
movsl
leave
mov
add
dec
nop
andl
dec
loope
pop
aad
loopne
test
mov
or
ret
arpl
imul
add
movsb
mov
cmova
ja
add
adc
pusha
add
xchg
mov
xor
push
sbb
outsl
jae
xor
cmpsl
movsl
std
aad
push
cmpsl
push
inc
fiadds
mov
movsl
and
pushf
jnp
in
jo
cld
cmpsb
pop
jg
fwait
pop
sub
xchg
mov
mov
aad
mov
push
rcl
int3
es
lds
loop
jbe
je
ja
imul
push
inc
pop
fdivl
cmp
jge
jle
popf
sub
loopne
sbb
and
ret
clc
cmpsl
dec
out
jne
and
hlt
nop
in
aad
push
xchg
incl
inc
test
or
xchg
sbb
jnp
test
loop
fs
cltd
cltd
xor
or
pop
stc
scas
xor
or
or
mov
mov
cmc
enter
dec
xor
push
and
rcl
lods
ljmp
mulb
pop
aaa
neg
mov
adc
movsl
nop
add
popf
test
lcall
push
or
push
and
cs
dec
mov
rorb
loope
mov
shll
lcall
jns
mov
sbb
xchg
int
out
scas
cmp
andl
or
push
dec
lret
push
xchg
ljmp
mov
xchg
lock
push
stc
xchg
fwait
jg
push
shrb
adc
adc
sbb
and
xchg
cmp
addr16
mov
sub
notl
in
adcl
inc
jp
dec
pop
popf
cmp
loopne
jmp
xchg
mov
and
push
gs
xchg
loop
popf
push
mov
outsl
aad
xor
mov
xchg
jns
movsl
js
loop
mov
dec
inc
pop
xor
jle
mov
out
inc
mov
imul
mov
ss
inc
jp
sbb
cmpl
and
mov
test
rclb
and
test
pusha
dec
inc
cmp
pop
hlt
cmp
fdiv
push
sub
dec
iret
jmp
pop
negl
jbe
out
mov
in
imul
adc
nop
sbb
inc
scas
in
insl
dec
es
aad
in
add
dec
xlat
repnz
add
test
stos
aad
movsb
or
leave
add
frstor
popa
or
xchg
movsb
fs
dec
jb
lcall
in
mov
in
test
mov
mov
stos
xor
jae
xor
cmp
mov
adc
outsl
and
jbe
fcomi
cmpsl
jle
xor
xchg
xchg
inc
jg
gs
addr16
repnz
add
push
lahf
out
pop
pop
rorb
std
inc
jne
ja
pushf
into
xchg
rcrb
shrb
mov
inc
out
fwait
push
mov
jp
pop
pop
test
sahf
xor
cmpsl
dec
fwait
xchg
xor
shrb
push
push
dec
leave
mov
sub
xchg
fsubrl
js
add
outsb
cmp
fidivrs
lcall
out
push
int
notl
leave
fld
add
repnz
pop
adc
jle
sub
or
loop
push
lret
aam
adc
adc
lret
daa
or
icebp
sub
test
or
fsubl
stos
daa
mov
psraw
sub
inc
iret
jno
mov
jb
adc
les
pop
aad
mov
sbb
loop
dec
and
addr16
xor
lea
xchg
jnp
sbb
cmp
and
jb
xchg
add
jne
std
or
push
jmp
sbb
push
fsub
dec
pushf
lods
fadd
int3
jne
xchg
dec
add
mov
push
pop
popf
push
ja
nop
repz
xor
mov
adc
pop
lea
aad
adc
je
inc
xor
adc
in
sbb
outsb
ja
xchg
dec
in
xor
sbb
add
mov
sub
xchg
insb
int
pop
call
mov
cmp
ficoms
movsb
dec
pushl
hlt
int
push
mov
jbe
dec
punpckldq
daa
push
add
sub
in
shr
movsl
mov
cmp
testl
jmp
xor
addb
cmpxchg
stos
dec
jns
test
pop
in
out
aad
xor
and
sbb
jge
inc
rorl
push
lods
mov
cmpsb
jo
xor
mov
push
cmp
in
ret
call
test
pop
sbb
pop
int3
out
iret
ljmp
mov
and
les
mov
push
xchg
inc
or
aad
jae
pop
jge
lds
xchg
mov
cltd
pop
mov
xchg
mov
dec
in
and
xor
adc
ss
jnp
insl
sub
jg
mov
ds
fs
pop
mov
mov
sub
fadds
ret
lcall
out
cmpsb
sbb
jb
add
test
call
xchg
sub
xor
pushf
sub
cwtl
jg
dec
shr
fistpl
mov
mov
insl
cmp
pop
cmp
add
cmp
cmp
cmpsb
xchg
xchg
incl
xchg
add
pop
jp,pn
mov
fstl
mov
cmp
adc
orb
jmp
insl
jb
add
and
or
sub
ss
stc
pop
dec
inc
pop
jle
cmp
push
mov
mov
mov
mov
xor
jb
aaa
inc
lods
in
fwait
das
scas
xor
addr16
loopne
push
xor
xor
pop
dec
xor
mov
jmp
lcall
pop
xchg
add
xchg
adc
repnz
dec
add
push
rcr
lods
xchg
in
sbb
lods
or
sbb
push
add
dec
pop
jo
xchg
xor
cmpsb
sbb
cmpb
rsqrtps
jge
jo
lret
adc
pusha
movsl
imul
pop
add
cmp
shrb
push
mov
push
adc
xlat
movsb
shlb
xchg
xchg
mov
mov
add
lret
pop
inc
mov
mov
add
sbb
cmpsl
push
ret
xor
bound
and
jno
mov
or
pusha
aam
das
mov
dec
inc
mov
xor
call
xchg
pop
and
add
cmp
cltd
add
add
cld
mov
je
cmp
out
es
movsl
and
sub
std
push
xor
add
adc
scas
mov
mov
jae
outsl
jbe
sub
ljmp
ret
cmpsl
movsb
cld
sub
jo
test
xor
mov
clc
jbe
int3
jl
xchg
inc
xchg
pop
mov
pop
mov
inc
mov
add
sub
push
imul
imul
out
pop
jmp
and
dec
jno
pop
es
push
ds
add
rol
test
sub
inc
pop
js
mov
in
or
pop
mov
into
mov
add
ss
repz
popf
shlb
movsl
mov
ret
test
mov
int
in
repnz
test
inc
in
push
cltd
repnz
call
loope
cmp
sar
add
cmp
push
xorl
dec
fsubrp
test
lods
sarb
scas
test
and
xchg
les
and
mov
sbb
popw
jl
cwtl
shlb
mov
clc
aas
add
stos
cltd
and
cmp
movsb
mov
cmp
or
rorb
push
insl
adc
insb
fiadds
mov
mov
push
sub
inc
mov
dec
cltd
add
jns
cld
daa
in
loope
mov
mov
dec
int3
js
mov
or
cli
jnp
ss
nop
sub
sbb
cmc
add
sub
adc
divl
in
pop
insb
inc
ss
fstl
mov
por
sbb
popf
pop
pop
bnd
mov
jne
push
push
xchg
or
test
sti
or
inc
jbe
jp
add
enter
xchg
xchg
data16
xchg
fidivrs
test
int3
lret
inc
or
push
push
imul
jge
lock
ss
inc
stos
cmp
jns
jp
mov
jmp
push
jp
test
add
jmp
jp
jmp
jno
and
adc
loopne
iret
loopne
or
hlt
dec
push
sub
adc
lcall
cltd
or
jbe
daa
jnp
pop
jge
mov
sub
push
inc
insb
mov
or
push
addr16
out
mov
mov
inc
or
int3
decl
add
add
push
insl
mov
mov
out
sbb
fdivr
inc
dec
and
int
mov
jp
or
leave
lods
push
jb
out
stos
sbb
and
mov
pop
dec
lods
cmpsl
ds
add
leave
ficoml
jb
insb
and
movsb
aam
xchg
int
adc
je
jae
pop
mov
and
out
add
sbb
out
pop
arpl
pop
stos
inc
push
test
dec
out
cmpsb
nop
pop
pop
push
push
std
pop
pop
push
pop
lret
jb
jno
dec
sub
nop
push
aas
adc
add
lock
scas
push
data16
sarb
inc
xchg
out
inc
mov
jmp
xchg
lret
sarl
int
xor
cwtl
push
fsubl
lcall
call
daa
pop
push
xchg
data16
xlat
jl
das
rcrb
ljmp
dec
adc
fbld
in
and
iret
push
cs
out
fcoml
es
shll
out
push
neg
bsf
adc
je
xchg
adc
add
xchg
lods
inc
test
push
test
jae
adc
rcl
mov
inc
bound
push
test
xor
out
clc
je
jecxz
imul
inc
out
adc
cld
aam
xor
fs
jbe
xor
es
aam
sub
outsl
pop
imul
imul
mov
mov
loop
cltd
or
loop
shlb
mov
xchg
les
mov
or
or
cmp
fdivrp
outsl
add
aaa
test
pop
jmp
xor
fdivrl
xor
repnz
mov
test
and
jge
leave
popa
push
daa
lds
push
out
mull
ja
shrl
and
sub
addr16
js
jno
dec
test
inc
pop
fnstcw
adc
int
and
mov
fists
in
stos
dec
push
push
jmp
add
jge
sbb
je
jmp
or
jecxz
mov
or
jmp
pop
mov
xchg
inc
loopne
shlb
aad
push
xchg
lret
in
mov
xchg
mov
out
in
dec
ror
outsl
stos
pcmpeqd
sbb
popf
clc
xor
pop
add
or
or
hlt
mov
popf
mov
inc
outsl
or
and
shll
mov
cs
cmc
dec
mov
scas
dec
cmpsl
insb
jo
insl
and
int3
cmp
cmp
arpl
mov
mov
jbe
in
fstl
xchg
faddl
xchg
and
jo
jae
ljmp
dec
push
add
push
cmp
add
and
imul
mov
push
ja
ds
clc
mov
out
sub
mov
fcoml
jns
hlt
dec
adc
out
jno
push
mov
xor
ret
mov
rol
scas
mov
mov
xor
pop
mov
xchg
test
or
mov
or
push
pop
fbld
cmp
rolb
outsl
lods
pop
lods
xor
mov
xchg
jl
xchg
cmp
ret
out
dec
incb
and
insb
les
jmp
ds
push
lcall
cmp
jmp
jns
mov
sub
arpl
jae
pop
bound
xor
test
xlat
cmp
lock
push
int3
std
sub
imulb
cs
stos
int3
out
and
pop
add
pop
mov
adc
mov
mov
aam
dec
test
or
dec
inc
int
dec
es
divb
fimull
rorb
decl
fstps
inc
out
pop
cmpsb
outsl
aam
cmp
mov
xchg
mov
std
sub
loope
mov
mov
std
in
jns
lds
mov
daa
aaa
inc
and
mov
shlb
add
ljmp
out
xchg
in
mov
mov
fistpll
and
xchg
cmpsb
repnz
and
or
lds
jp
cmp
rorb
outsl
daa
sub
sbb
mov
rcll
out
shrb
dec
in
out
jge
pop
fnstcw
and
jae
jae
mov
dec
xor
mov
inc
add
cs
call
jmp
cltd
cmc
pop
ljmp
mov
xchg
leave
inc
jno
inc
inc
aam
add
or
adc
fidivrl
cld
push
loop
sbb
pop
adc
pop
lcall
ss
sbb
adc
shlb
sbb
mov
jle
adc
sbb
pop
and
pop
push
sub
imul
notb
ja
fsubl
sub
adc
aas
push
xor
push
leave
push
push
inc
xchg
ds
clc
xor
mov
imul
pop
inc
repnz
fwait
dec
push
jnp
jae
xor
sub
stos
aad
pop
dec
mov
inc
and
adc
in
shl
ljmp
cmpsb
push
push
icebp
push
xor
into
cmp
jmp
mov
sub
hlt
loopne
or
adc
xchg
xchg
add
inc
sbb
or
ds
fbstp
cmp
fsubrl
imul
ret
jg
scas
lods
push
mov
and
mov
push
test
nop
and
notb
dec
mov
test
mov
jns
jmp
and
jb
icebp
aad
stc
dec
fistps
in
movsb
or
mov
fcmovnbe
sub
pop
std
das
and
jmp
stc
xor
mov
movsl
mov
adc
add
lock
popa
inc
cltd
jno
pop
lods
cmp
pop
test
rolb
lea
add
cmp
push
add
jne
pop
xchg
or
push
out
cmpl
pop
and
jo
sbb
jle
pop
mov
push
call
mov
push
push
cmc
xor
addr16
mov
outsb
lods
and
ds
stc
out
xchg
into
mov
lea
hlt
imul
je
rcll
sbb
dec
in
push
jns
rolb
jmp
clc
inc
jo
pop
lods
ret
clc
adc
push
jne
inc
mov
push
fwait
std
mov
in
int3
out
lss
stc
add
clc
mov
rcl
jle
jne
bound
aad
shlb
data16
inc
lods
and
cmp
outsl
aam
sbb
add
loop
push
ficoms
ljmp
imul
fucomi
inc
sar
rcl
hlt
pop
inc
xchg
data16
hlt
sahf
or
push
push
inc
adc
iret
outsl
cmovnp
lods
xchg
jne
mov
dec
aaa
popf
outsl
or
cmp
bound
pop
mov
adc
xchg
outsb
jge
lea
test
jae
lret
add
std
std
repz
into
dec
xchg
sbb
lock
aas
xlat
pop
xor
es
push
lahf
nop
sub
out
outsb
xchg
ljmp
pop
rol
dec
cld
adc
lods
or
and
sahf
cli
sbb
rolb
mov
fldt
jle
icebp
fldt
dec
mov
mov
jmp
inc
imul
jge
shll
jo
mov
dec
mov
sbb
inc
xchg
add
addr16
jae
xor
ret
or
pop
loope
and
mov
xor
sub
aaa
into
push
fsubrs
push
cmp
hlt
sti
add
roll
dec
in
push
and
inc
push
dec
gs
stc
xchg
pusha
mov
mov
add
mov
imul
loop
pop
mov
push
fcmovnbe
dec
sbb
push
xorl
xchg
cmpsb
jg
mov
xchg
clc
xor
fidivrs
repnz
aad
cmc
outsb
or
pop
rclb
nop
lcall
push
pop
inc
inc
jg
pop
imul
insb
push
sub
jle
xor
push
pop
pop
pop
add
dec
add
pop
sbb
lret
push
rolb
pop
cmp
jp
ret
mov
cmpsl
scas
loopne
testl
mov
lods
or
frstor
in
inc
scas
sub
push
sti
out
jne
jecxz
pop
ret
pop
xchg
fucomi
notb
or
loop
inc
mov
and
xor
xor
test
rorl
or
push
es
xlat
xor
in
sub
fmuls
dec
popa
ljmp
ret
out
test
xchg
xchg
pop
rcr
jecxz
inc
and
fists
scas
int
adc
jp
les
fstps
mov
ljmp
mov
mov
stos
lock
xor
pop
pop
dec
sbb
lea
push
push
mov
jne
mov
dec
sahf
imul
lea
stc
in
out
aaa
jbe
shr
dec
adc
mov
xchg
pop
inc
jle
add
inc
sbb
lock
mov
inc
jmp
test
mov
inc
das
mov
cmp
rolb
fcmovne
jge
cmp
test
fbld
aaa
lock
dec
inc
and
xchg
iret
mov
xor
cld
xorl
xchg
fcompl
lods
std
cmc
push
xor
mov
lret
lretw
or
sub
aaa
ja
xchg
adc
jp
dec
add
js
sahf
jp
cld
loop
test
jb
cmp
sbb
popa
movsl
inc
out
mov
daa
popa
js
aad
into
int3
push
jae
or
loop
or
adc
adcb
mov
out
nopl
mov
hlt
jl
arpl
pusha
jecxz
jne
cld
pushf
ds
loopne
pop
pusha
mov
hlt
adc
cmp
sbb
lods
cmp
xchg
loop
mov
mov
xchg
add
fmull
jne
clc
push
stos
clc
shrb
mov
pop
roll
mov
dec
cmp
xor
or
cmp
lahf
jmp
insb
jl
add
mov
stos
imul
int3
sarb
scas
push
stc
cmpsl
repnz
jecxz
lret
test
pop
mov
shll
insb
push
mov
pop
sti
xor
pop
leave
notl
loop
ret
adc
dec
mov
das
stos
mov
or
mov
push
and
add
ss
int3
mov
lcall
pop
faddl
push
xchg
iret
push
fs
jmp
adc
fld
cli
xchg
cli
insb
dec
mov
out
or
dec
ds
in
lahf
inc
cld
pop
mov
in
aaa
pop
or
mov
add
imul
out
in
or
mov
jbe
sub
adc
cmp
mov
adc
push
cli
mov
mov
inc
and
andb
jae
add
psllw
mov
inc
daa
imul
xor
cmp
psrlq
xlat
jle
sbb
xchg
cmpsl
inc
imul
fldcw
jecxz
jmp
dec
xchg
xchg
add
mull
sub
cmp
jbe
push
ss
dec
inc
push
in
stos
mov
jno
popf
mov
je
pop
adc
adc
aaa
arpl
xchg
push
cld
jecxz
icebp
or
mov
std
inc
or
mov
or
sub
mov
test
mov
pop
xor
sti
or
arpl
add
cmp
dec
shl
xchg
lds
xchg
imul
pop
ror
rcr
je
cmp
ds
cmp
sub
int
mov
pop
push
pushf
pop
adc
fildl
paddb
fcompl
jnp
jl
push
and
jl
pop
jecxz
pop
cmp
sbb
jbe
dec
sti
test
notb
mov
push
mov
jle
aaa
or
imul
pop
scas
inc
mov
out
push
fdivp
lret
fwait
mov
mov
push
adc
hlt
xchg
jle
ret
fsubr
int
leave
ret
dec
and
nop
inc
mov
add
in
add
pop
iret
popf
inc
out
daa
movsl
dec
insb
cmp
pop
repz
xor
sbb
adc
pop
pop
push
xchg
add
cmp
sub
mov
mov
inc
and
mov
cli
mov
jo
sbb
jo
insl
dec
leave
dec
rcrl
lahf
shll
notb
repnz
and
add
adc
pushf
jg
jo
leave
xor
mov
mov
pop
scas
lods
and
fdiv
and
pop
xchg
push
std
cmp
in
sbb
imul
xor
fisubl
pop
test
out
push
decl
pop
push
jnp
adc
jne
mov
mulb
adc
xchg
cltd
cwtl
aad
gs
push
in
or
int
enter
pop
lret
cltd
mov
test
cs
and
push
je
inc
shrb
or
and
ljmp
les
mov
adc
push
aad
xchg
xchg
stos
mov
aam
loopne
imul
sub
jge
push
or
inc
inc
push
aas
inc
push
test
aad
cmp
test
xor
xor
stos
js
into
or
jecxz
bound
scas
test
sub
sbb
push
sbb
int
inc
je
cmp
sahf
movsb
jle
sti
pop
pop
ret
sbbl
push
pop
aaa
loope
enter
xchg
shll
add
movsl
or
jmp
mov
sub
cli
inc
mov
jmp
mov
jl
mov
add
adc
and
outsl
fidivrl
frstor
aam
inc
mov
push
pop
mov
scas
pop
inc
shr
xchg
pushf
incl
cmp
dec
jl
xor
inc
pop
ds
outsb
outsb
cmpsb
push
and
sbb
add
inc
shl
and
stos
xor
sub
incb
imul
das
mov
cwtl
fwait
inc
jecxz
dec
lods
sbbb
xchg
jb
in
pusha
aad
dec
data16
out
or
cs
push
aaa
sti
dec
pop
cmp
ret
ja
push
push
inc
inc
adc
stos
mov
inc
xor
in
sti
in
ja
mov
stc
xor
or
mov
dec
mov
cmc
movsb
mov
xchg
aas
lcall
imul
pop
das
jno
into
lcall
dec
filds
insb
fiaddl
cmp
filds
addb
adc
dec
jl
add
lock
popf
xchg
iret
test
xor
lahf
xor
mov
add
mov
das
jnp
scas
inc
sbb
adc
jns
add
adc
orl
sbb
jb
jecxz
ffreep
ja
pop
xor
mov
sarb
in
lret
lcall
and
xchg
inc
das
adc
dec
gs
xor
aaa
mov
loop
repz
push
xchg
mov
pop
scas
insl
add
test
test
mov
loop
cmpl
sub
jp
push
in
and
push
lea
incb
sti
jle
adc
popf
insb
popf
lock
add
and
xchg
in
pop
fsubs
or
setns
mov
ficoms
add
cmpb
dec
aad
lret
ret
aas
sbb
adc
mov
inc
cmp
xlat
nop
clc
daa
inc
dec
repnz
enter
cld
or
jecxz
sbbb
cmp
out
mov
lcall
xor
test
test
mov
xchg
inc
fsubrs
jne
jbe
push
sbb
testl
out
mov
addr16
jno
jmp
lock
xchg
mov
xor
and
push
xor
push
adc
and
jno
jl
movsl
mov
push
mov
dec
jmp
mov
mov
pop
jb
cmc
ret
loop
mov
jbe
sub
jo
jle
iret
testb
or
sbb
mov
jnp
mov
jns
stc
cmp
fdivrl
push
pop
xor
daa
fs
mov
jge
cmp
in
mov
push
cmovg
and
pop
adc
insb
imul
lahf
sbb
xor
subb
and
cmp
lahf
mov
jge
add
in
mov
sbb
out
mov
or
rolb
and
imul
xchg
clc
jecxz
rolb
filds
repz
scas
inc
jge
addr16
dec
push
je
jns
pop
test
xchg
inc
imul
idivb
out
clc
shrb
rorl
pop
mov
ds
adc
cmp
popf
xchg
lcall
unpcklps
xor
xor
jmp
cli
into
jbe
leave
inc
in
daa
pusha
xlat
lock
insl
lret
pop
add
jb
xchg
adc
stc
pop
in
mov
loopne
je
imul
push
popa
mov
push
and
sarb
in
mov
mov
mov
mov
scas
mov
cltd
rorb
inc
scas
lcall
inc
cmpsl
pop
addl
ljmp
jecxz
xchg
cmp
test
lock
or
data16
or
pop
scas
mov
ret
xor
enter
mov
adc
sbb
cmp
repz
ss
push
adc
xchg
sub
xchg
cmpsb
in
test
adc
push
aad
gs
cltd
mov
out
insl
sti
sub
arpl
out
mov
in
cmp
jnp
aaa
or
call
test
push
pop
mov
add
es
lret
test
pinsrw
jbe
push
lret
xor
dec
shrl
icebp
out
in
leave
xchg
xor
loope
dec
xor
fbld
sbb
xor
jg
jle
add
add
sub
mov
incl
jl
cmp
push
rcl
and
mov
cmp
mov
or
ds
loope
test
mov
jecxz
inc
push
jle
jnp
ds
subb
push
inc
add
inc
inc
sub
fsubp
int
adc
pop
add
jb
movsb
pushf
inc
jmp
and
fcomp
jb
std
xor
xchg
adc
or
pop
mov
int
dec
and
mov
jnp
push
mov
push
mov
pop
mov
mov
jge
insb
pop
sti
movsb
cmp
mov
pop
jp
push
movsb
in
xor
pop
fdivrs
fwait
shll
clc
movsb
nop
mov
fadd
push
lahf
inc
jno
testl
sub
xor
jns
mov
sbb
scas
mov
xor
dec
mov
std
loopne
mov
xchg
push
sbb
dec
frstor
sub
adc
and
and
pusha
sti
inc
leave
cmp
pop
je
add
pop
cmp
push
pop
or
xchg
ret
adc
rorl
sbb
mov
jmp
rcrl
push
add
sub
or
rcrb
int
bound
sahf
cwtl
jb
stos
in
call
pusha
out
jae
call
and
cmpsb
scas
xchg
cmovp
push
pop
mov
scas
adc
mov
in
or
scas
xchg
rep
inc
cltd
in
aaa
shl
shlb
jmp
xor
bound
mov
out
sbb
lea
pop
dec
jmp
push
cmc
xor
cmp
jns
mov
sar
dec
push
addb
and
ja
mov
mov
xchg
jecxz
jb
mov
cltd
test
xlat
test
sti
jnp
sub
fs
sub
inc
sub
ret
decb
cli
jbe
outsl
shll
add
dec
cld
insl
add
paddusw
imul
sub
fcoml
xchg
lea
add
mov
mov
mov
popa
xchg
dec
mov
cli
dec
cs
adc
adc
adc
arpl
mov
mov
xchg
push
out
lahf
push
aad
jae
push
inc
inc
lock
xchg
pop
addr16
in
dec
cmpb
imul
sbb
stc
icebp
or
inc
jecxz
ficoms
cmp
xchg
inc
gs
js
pop
jmp
xor
xor
popa
or
or
es
jbe
sbb
roll
aas
add
mov
into
and
pop
mov
cs
lds
mov
popf
subl
or
inc
pop
adc
xor
fstpt
shll
add
add
sub
loopne
mov
and
or
mov
pop
pop
cmp
into
xor
mov
sbb
push
xchg
add
int
add
lret
and
jns
nop
aam
cmp
icebp
cmp
subl
adc
in
pop
movb
sub
cmp
jle
push
std
cmp
xlat
outsl
divl
mov
and
xor
mov
loopne
out
rdmsr
pop
in
es
xchg
es
fldl
ss
insb
aad
sbb
mov
rol
addr16
addr16
pusha
test
jbe
xor
sub
pop
adc
fsubs
mov
loope
push
jae
notb
sbb
cmpsl
loop
and
or
mov
in
dec
loopne
mov
inc
push
bound
jle
sarl
clc
add
int3
repz
lods
inc
push
movsl
jnp
jne
push
lret
fcmovnb
leave
or
sub
lret
mov
xchg
push
xor
or
push
adc
adc
add
sub
stos
inc
sub
or
xor
leave
lcall
cltd
pop
mov
into
stos
cmp
insb
mov
imul
aam
push
lret
lcall
xchg
outsl
dec
pop
mov
outsl
or
inc
jmp
mov
sub
sub
jae
mov
sbb
cmpsb
cs
nop
mov
cmpsl
mov
add
ljmp
test
mov
push
scas
aas
sub
icebp
mov
rcrb
xor
sbb
jb
imul
imul
mov
pop
mov
and
aam
xchg
add
sti
sti
jbe
les
add
dec
mov
push
push
test
pop
sbb
test
cli
rclb
aas
inc
movl
lds
jecxz
ficoml
mov
insl
popa
adcl
roll
outsl
mov
call
xchg
mov
test
adc
cmpsl
and
add
loopne
imull
xchg
and
xor
cmp
push
push
cwtl
lret
jbe
sbb
mov
mov
test
popl
or
cltd
test
pusha
push
push
repnz
fnsave
scas
enter
scas
pop
bt
mov
mov
push
aam
xor
ja
aas
and
jnp
pop
mov
mov
xor
push
xchg
jbe
lahf
into
lret
mov
cmpl
xor
xchg
fbld
lcall
imul
out
pop
decl
test
loop
fidivl
cmpsb
test
enter
cld
mov
data16
xchg
insl
and
imul
sbb
jnp
idivb
xchg
push
out
ds
push
pop
mov
mov
stos
adc
icebp
clc
adc
xchg
lods
daa
xor
pcmpeqd
jmp
add
daa
cwtl
dec
xchg
addr16
stos
or
insl
push
data16
add
iret
pop
lods
push
sti
push
fmul
push
add
fisttpl
mov
pop
outsl
movsb
push
scas
jno
jae
subl
pop
negl
js
in
ds
push
outsl
cli
or
pmaxub
pop
push
decb
and
add
xlat
jle
adc
lahf
out
push
adc
js
popa
or
jnp
or
lock
addb
out
pop
xchg
cld
dec
aam
stos
xchg
frstor
mov
stos
sbb
push
insb
imul
jne
insl
lret
imul
cmp
shlb
mov
pop
push
insl
mov
sarl
pop
mov
jle
iret
sbb
or
int
mov
and
pop
mov
mov
pop
mov
push
shll
inc
inc
or
ficoml
out
cmp
add
lret
xchg
cmp
call
pushf
cmp
aam
inc
jg
jnp
rcl
ret
push
shr
mov
repnz
dec
mov
adc
mov
xchg
gs
addl
fdivrs
xor
mov
push
add
call
shl
fidivs
in
dec
mov
jno
jp
lahf
sbb
sbb
ja
jecxz
cmpsb
pop
stos
pop
mulb
stc
adc
mov
pusha
inc
cmp
jl
or
mov
mov
out
shll
push
lahf
test
pop
ret
in
xor
sbb
pop
or
fstps
sti
mov
mov
pop
mov
mov
push
push
test
out
pop
push
xor
into
or
bt
mov
inc
psllq
sub
dec
movsb
jns
or
cwtl
dec
in
vmovupd
daa
scas
dec
das
add
lcall
sub
sahf
mov
mov
mov
sbb
in
push
or
call
not
jl
repz
push
subl
jne
pop
mov
add
xchg
xchg
adc
mov
jne
filds
sbb
push
fs
and
xchg
sub
mov
sub
js
jge
mov
xchg
aas
jp
sbb
pop
inc
mov
pusha
or
mov
push
cmp
xchg
and
fidivl
jo
ret
pop
sti
sub
pop
stos
hlt
jl
incb
pop
mov
mov
cmpsb
sbb
es
lahf
xchg
sub
jo
xor
jnp
xchg
add
mov
sub
push
aad
lods
cmp
push
jecxz
fxch
dec
inc
fnstenv
or
mov
scas
pop
fcompl
std
outsl
scas
fsub
add
xchg
insb
inc
jbe
push
imul
jg
cltd
bts
das
data16
movl
loope
insl
in
inc
stos
iret
out
jb
xlat
inc
push
jmp
ss
or
cmp
and
gs
cmc
adc
jmp
sub
xchg
ror
add
sub
movsb
lods
sub
aaa
call
pop
pop
scas
jmp
ljmp
jge
mov
pop
jae
ljmp
cmc
les
aas
fildl
int
sub
int3
test
xchg
push
js
in
and
inc
push
std
aad
into
es
scas
cwtl
fwait
cmp
dec
xor
and
idivb
jne
sub
stos
lods
mov
js
mov
xor
stos
adcl
sbb
cld
cmp
out
mov
icebp
into
insl
inc
cmpsl
add
sahf
scas
pushf
pop
movsb
aam
lahf
pop
fisttps
subl
mov
aaa
cmp
idivb
mull
adcb
pop
xchg
push
xchg
pusha
loop
push
inc
fcompp
xor
aam
mov
ss
mov
push
das
movsb
divl
out
in
call
rcrb
mov
and
add
pop
fs
mov
lret
pop
test
ss
sbb
sbb
ror
imul
lret
add
inc
mov
xchg
test
pop
xor
mov
xchg
inc
jge
push
ret
int3
dec
jmp
cmpsl
jnp
lret
add
xchg
mov
mov
loopne
jne
and
push
jmp
mov
popa
add
mov
xor
in
mov
pop
add
push
lds
push
jb
fwait
mov
out
inc
rcl
int
test
aam
push
aam
loop
cmp
dec
xor
in
xchg
push
dec
les
and
movsb
or
sub
orb
shlb
fsts
dec
popa
sbb
ret
and
iret
xchg
int
sub
rep
out
and
loope
clc
xor
repz
xchg
sti
imul
mulb
in
sub
mov
jmp
nop
add
cmp
push
sub
cmpsb
fdivrl
jno
arpl
fimull
xlat
popa
xchg
das
inc
aas
xchg
movsb
sti
push
fiadds
jl
pushf
decb
jae
outsb
adc
gs
mov
test
push
adc
sub
imulb
cmp
mov
sub
nop
xchg
mov
push
inc
andl
shrb
xchg
fiaddl
mov
int
imul
ja
addr16
dec
adc
pop
push
jge
popa
fdivs
out
pop
inc
das
cmpsl
les
and
dec
or
ss
and
in
scas
push
mov
inc
jmp
test
add
xor
mov
mov
jmp
mov
mov
lock
popa
fucomp
repnz
mulb
sub
js
xchg
movsl
push
subl
mov
fstps
cwtl
gs
ror
nop
adcb
sub
imul
cmp
xlat
adc
push
iret
ffree
jbe
push
jmp
add
adc
lahf
pushw
rcrb
ret
xor
loope
imul
in
cmp
sub
adc
fistps
sbbl
inc
dec
fnclex
pusha
andb
test
lods
int3
mov
packuswb
xchg
cltd
es
jmp
iret
or
push
hlt
cmp
in
lahf
enter
ljmp
shll
sti
cmpsb
and
jnp
imull
cmp
inc
rcrl
out
pusha
push
push
stos
pusha
pop
mov
jecxz
stc
hlt
je
jecxz
mov
adc
xchg
mov
jp
push
lock
xchg
and
jle
or
sub
and
das
cld
pop
repnz
sbb
jo
mov
dec
dec
in
xchg
fstl
push
push
inc
lods
pop
mov
rol
cltd
sti
mov
call
adc
jnp
shl
arpl
mov
ljmp
cmpl
filds
in
cs
pop
sub
and
sti
movsb
in
fwait
pop
sbb
movsb
daa
push
mov
out
or
pushf
lea
fwait
and
jle
and
jbe
pushf
adc
sub
and
outsl
mov
shll
jecxz
fidivl
sbb
loope
sbb
pop
dec
dec
cmp
les
adc
insl
fs
sti
mov
cmpsl
and
out
jl
daa
lods
push
sub
adc
lahf
pop
jmp
cmp
dec
push
enter
adc
aam
add
push
add
mov
shr
xchg
mov
and
or
daa
addb
mov
test
notl
daa
dec
xchg
sub
fs
pop
sub
or
cmp
imul
daa
push
aas
sbb
ja
cmp
push
sti
cmp
push
pmaxub
insb
add
mov
js
mov
sub
sbb
out
dec
jno
mov
rolb
test
lock
inc
lock
lods
xor
fstpt
out
icebp
lcall
xor
mov
mov
scas
pop
out
test
cmc
pop
sub
or
xchg
push
mov
push
fnstsw
lods
adc
and
ficomps
repnz
adc
jno
das
outsl
mov
or
lock
inc
pop
in
jae
decl
inc
mov
and
into
or
sub
loop
fnstenv
in
add
mov
ficoml
xor
fisubrs
mov
adc
int3
inc
or
inc
adc
add
or
clc
dec
fidivrs
loop
clc
cli
jbe
das
in
loop
cmc
pop
incb
iret
shrb
ret
fildl
mov
dec
xchg
xor
outsl
out
sub
dec
pop
xor
dec
xor
insb
push
cmp
cmc
sbb
pop
rol
sbb
fs
ret
repnz
lock
adc
sbb
xchg
sbb
insl
xor
in
ljmp
movsb
xor
sbb
mov
jo
popf
repnz
xchg
mov
pop
cmp
xor
sub
fs
or
and
repnz
mov
mov
call
out
push
dec
adc
testb
sub
pop
xor
pop
mov
insb
je
xchg
sub
stos
aam
and
lret
mov
sub
lea
pop
lods
mov
dec
testb
inc
or
lds
xor
pop
ret
lcall
mov
lahf
fwait
mov
mov
dec
add
jbe
or
mov
fnstsw
add
inc
jae
add
mov
inc
dec
and
pop
daa
adc
rorl
sbb
sahf
lcall
pop
cli
enter
xor
sbb
add
pop
xchg
dec
adc
into
fistpll
xor
mov
mov
mov
and
pop
rsqrtps
mov
lods
in
mov
cmp
loop
cmp
push
dec
mov
and
mov
nop
pop
adc
add
adc
negl
dec
push
nop
adc
jmp
push
cs
iret
jno
cwtl
fdivr
bound
mov
xchg
pop
xchg
add
mov
insw
xchg
sub
cmp
out
int
cmpsb
dec
in
inc
fs
in
push
mov
flds
rcll
add
stos
mov
push
rolb
and
out
inc
mov
rorl
push
push
aad
jno
push
cmpsl
stc
inc
dec
es
test
or
rcll
ficompl
cli
or
inc
mov
jle
test
jno
inc
and
fstpt
dec
js
call
adc
ds
ljmp
jmp
cmpsl
int3
push
clc
data16
lcall
jb
pop
xchg
ret
in
or
adc
mov
rclb
imull
or
fwait
je
cmp
xchg
imul
movsb
jno
mov
jmp
loopne
aaa
int
push
or
xchg
out
cmp
les
cmp
mov
loope
jne
mov
stos
push
xchg
inc
xchg
lods
sub
push
mov
sahf
fidivrs
sub
fnstenv
loop
xor
test
jbe
inc
roll
imul
mov
shl
subl
int3
xchg
sbb
mov
rorb
mov
cmp
imul
lock
or
adc
sbb
clc
and
imul
pop
jae
sbb
inc
sbb
hlt
pop
dec
pop
pop
gs
aad
ljmp
xchg
inc
in
xchg
scas
lahf
bound
lcall
push
ja
cli
iret
imul
test
rcr
sahf
in
jecxz
add
mov
ss
mov
push
mov
cmp
xor
cld
xchg
jns
sbb
mov
and
out
jmp
push
out
rorl
pop
mov
leave
fidivl
xor
jno
jmp
add
in
push
jo
lock
or
mov
cmp
sahf
sahf
xor
xor
pop
dec
jp
jecxz
xchg
adc
xor
xchg
xor
or
mov
call
divb
in
insb
clc
add
shl
adc
cmovp
pop
es
lods
repnz
pop
call
jmp
add
or
xchg
aad
test
push
mov
out
movsl
xchg
xor
rcrl
fnstsw
jle
xchg
mov
out
scas
scas
rcrb
push
cmpsb
add
sub
xchg
inc
mov
out
scas
sbb
fnsave
stos
mov
test
push
mov
jg
cmpsl
jecxz
mov
fstl
insb
mov
shrl
aas
xchg
jmp
icebp
cmp
ss
push
xor
jmp
mull
adc
mov
imul
movsb
cmpsb
push
cmp
addr16
in
int
stos
adc
push
inc
jmp
cwtl
mov
inc
sbb
in
push
clc
pop
dec
lcall
jle
iret
int
pop
cmp
jle
jbe
js
int3
pop
mov
fisubl
loopne
fidivl
xchg
xchg
jns
movsb
imul
jb
orb
rcl
jecxz
popa
dec
repz
push
mov
loop
xor
mov
dec
jg
jge
xchg
mov
xor
arpl
dec
fs
adc
pushf
fldenv
add
out
inc
sub
push
mov
cmp
lea
mov
stc
push
mov
insb
fisubl
repnz
sti
lock
mov
sub
pop
inc
mov
test
lret
push
fstpt
sub
inc
fisttpll
lock
add
cwtl
xchg
jbe
int
ss
sbb
mov
pop
ljmp
jo
movsb
lret
cmp
xchg
pop
jp
je
icebp
test
adc
daa
dec
aaa
dec
in
add
add
je
xchg
ss
arpl
cltd
adc
enter
dec
push
adc
pop
pop
cmp
pop
sub
cmp
subb
mov
imul
dec
scas
les
dec
mov
jmp
xchg
mov
cltd
shlb
fs
fbld
das
les
mov
lcall
in
xchg
sub
test
mov
lds
mov
gs
fcmovnbe
lret
jp
sbb
jmp
rcll
lds
xor
fcomip
mov
push
dec
dec
iret
stc
loopne
fistpl
ds
pop
rclw
mov
dec
repnz
sub
inc
cmpsl
lds
stc
jns
add
sub
add
or
ljmp
orl
jbe
mov
mov
cmc
jb
inc
ljmp
lods
dec
fistl
outsl
out
xchg
adc
sbb
push
fwait
dec
clc
fs
rorl
scas
shl
std
inc
shlb
mov
jb
aas
hlt
insb
leave
mov
push
in
dec
or
and
ds
dec
or
je
push
in
movsl
aam
lds
das
mov
push
mov
dec
sti
add
es
rcll
test
subl
add
imul
cmp
xlat
jg
sbb
xchg
addb
jl
dec
je
scas
cwtl
int3
jb
push
flds
loope
jmp
and
cld
jnp
xor
ret
aam
lock
mov
xchg
fstpl
ss
mov
dec
xchg
push
popa
or
es
inc
inc
push
js
lods
fcomip
fsubrs
sub
and
xlat
xor
cmp
sar
ficoms
outsl
mov
sbbl
mov
sbb
sub
cmp
sti
arpl
adc
in
outsb
cmp
add
icebp
sbb
mov
cld
pop
leave
lahf
fucomip
adc
pop
cmp
inc
push
add
loop
mov
mov
nop
xchg
or
ljmp
xorb
icebp
jbe
imul
fs
jecxz
mov
cmp
scas
pop
fadds
lret
adc
jno
fstpl
mov
int
add
fdivrl
lea
add
add
xlat
sarb
or
lret
mov
mov
add
mov
push
jecxz
push
mov
adc
adc
fisttpll
ss
gs
sar
loope
xor
jecxz
sbb
fidivrl
leave
mov
and
cmp
inc
sub
jle
in
inc
les
aas
std
jge
xchg
das
cli
jbe
repnz
mov
and
lds
push
fmul
pop
scas
test
in
enter
pop
ss
cs
push
push
pop
ja
outsl
pushf
repz
outsl
mov
sub
movsb
daa
mov
popa
ret
or
inc
aaa
leave
cmp
insb
daa
jge
fs
fdivrl
popa
mov
daa
mov
mov
std
jb
test
mov
lods
cmp
dec
into
bound
jg
push
fwait
ljmp
cmp
mov
orl
daa
cmp
into
add
ljmp
cmc
xor
jo
stc
sub
push
loope
sar
sti
pop
in
push
in
daa
push
jecxz
lea
sahf
mov
mov
imul
inc
repnz
mov
push
or
stc
imul
jg
testl
cmp
push
sub
arpl
cmp
xchg
cli
les
fisubs
stc
sub
jecxz
clc
jne
scas
fisubrl
mov
and
decl
cmp
mov
dec
call
or
xor
inc
mov
pop
sub
mov
lock
xorb
cmp
mov
fxch
aad
xchg
lahf
mov
test
cmp
mov
addr16
test
sbb
mov
data16
dec
mov
mov
add
cmpsb
scas
xorb
push
aad
in
dec
rcrb
mov
cltd
xor
scas
andb
sbb
test
jnp
jecxz
push
loop
jb
jge
mov
and
out
test
pop
inc
push
xor
popa
rcrb
out
jne
iret
cmp
adc
jae
sub
das
aam
xchg
ljmp
sub
enter
pop
pop
fistpll
js
insl
fisubl
inc
repnz
and
outsl
add
lods
mov
gs
sub
mov
cmovb
test
fisubl
bound
les
xchg
gs
testl
test
addr16
into
push
adc
lods
mov
pop
dec
push
and
mov
push
out
jp
shl
movsl
push
test
jmp
and
push
sar
sub
nop
fldenv
mov
jp
sub
jp
lods
pop
dec
shrl
mov
push
bound
in
outsb
add
int
es
mov
iret
pop
sti
mov
jge
cmp
es
sub
std
orl
enter
inc
jmp
jb
movsl
cmp
fdivr
push
pop
inc
mov
add
pop
xchg
nop
pop
cmp
mov
pop
mov
push
jle
mov
xchg
or
push
lret
repnz
fildl
call
cmp
add
mov
stc
mov
fsubrl
mov
ss
cmc
in
out
pusha
mov
movb
rclb
and
dec
or
and
mov
or
xchg
cmp
mov
and
test
push
add
mov
pushf
pop
mov
inc
movsl
inc
in
push
jp
pop
clc
dec
or
pop
xchg
scas
or
or
es
cmc
inc
cmpsb
pop
push
out
jae
hlt
adc
fs
movsb
push
addr16
adc
scas
ret
push
sub
cltd
outsb
rcr
pop
das
int
adc
push
sbb
push
les
fscale
aad
pusha
lahf
insb
pop
jns
jns
adc
pop
cmp
icebp
cmp
xchg
cmp
and
cmp
insb
sub
jle
mov
lret
dec
adc
mov
lret
and
push
jl
cli
sbb
xchg
orl
inc
stc
test
xor
ja
stos
pop
cli
dec
xchg
cmp
lahf
mov
push
shl
inc
pop
jp
jno
push
lds
sbb
push
pop
arpl
add
fiadds
add
xchg
stc
jmp
cmp
push
or
fldl
ret
xchg
mov
push
jecxz
mov
sub
jge
stos
jmp
es
test
push
ss
into
lods
lods
mov
jae
push
hlt
lret
jns
das
inc
pop
insb
lods
movsb
test
cmp
loopne
ja
fwait
andb
cmpsb
sarb
cmpsb
out
stos
and
into
js
or
repnz
dec
add
dec
mov
mov
ss
fldt
pop
scas
inc
imul
lahf
cld
mov
iret
mov
pop
lret
inc
dec
pop
cmp
jle
pop
mov
das
sub
jp
sbb
cmp
pop
popa
or
in
sbb
push
mov
add
push
ret
cmpsb
inc
loop
ds
inc
call
arpl
out
pusha
or
into
adc
fisttpl
mov
in
rcrl
xor
scas
les
and
loopne
and
outsb
mov
mov
fidivrl
sbb
pop
jb
mov
jge
sahf
dec
xchg
movsb
mov
fs
jle
add
xchg
and
mov
or
mov
fcomp
lods
je
rsm
adc
lret
jl
out
jmp
mov
insl
cmp
push
dec
and
push
test
pop
lods
insb
pop
pop
jecxz
icebp
mov
popa
and
inc
daa
pushf
pop
adc
push
inc
adc
clc
in
enter
adc
lret
inc
enter
pop
and
and
mov
outsl
out
sub
aam
imul
push
cmpsl
adc
jo
push
mov
pushl
pop
dec
dec
or
and
sbb
aas
mov
ja
pop
pop
push
cmp
or
mov
xchg
jbe
lock
bound
in
jno
sbb
dec
aad
mov
or
dec
ret
std
scas
outsl
outsb
sub
jmp
dec
inc
fs
push
insb
pop
pop
or
and
bound
outsb
sub
test
mov
fs
cmp
push
stos
shl
dec
add
mov
bnd
gs
es
fwait
xor
xor
mov
and
fisubrs
out
jae
insl
add
mov
dec
fs
inc
sbb
pop
std
adc
adc
pop
jo,pt
or
es
dec
mov
test
aam
into
pop
mov
orb
jmp
pop
fcmovu
sub
mov
jecxz
testl
pop
notl
jg
pop
xchg
xchg
stc
cmpsl
cmpsl
flds
jno
fistpl
dec
push
xlat
xchg
pop
mov
push
jmp
lods
ror
mov
imul
or
inc
fmuls
arpl
cli
mov
test
dec
mov
mov
push
mov
shlb
adc
inc
ss
sub
cmp
add
mov
data16
push
push
into
push
sbb
je
sub
jbe
push
int3
adc
jbe
sbb
or
sbb
xchg
xor
push
or
jbe
std
and
dec
push
dec
inc
mov
ljmp
push
pop
push
push
mov
and
sub
cmpsb
xor
jmp
mov
mov
aad
pop
jbe
mov
inc
push
cmp
or
lahf
xchg
enter
test
or
dec
push
or
jbe
cmp
hlt
inc
call
nop
pop
push
inc
jecxz
add
adc
fdivs
in
xor
push
outsl
cli
push
adc
mov
pop
fsubl
sbb
cltd
fcoms
ljmp
je
sahf
mov
imul
sbb
sbb
xchg
pop
stos
cld
push
leave
add
add
add
sbb
pop
lahf
jl
fimuls
jo
pop
movsl
lods
cld
sbb
repnz
sub
push
jg
push
mov
cli
pop
adc
bound
pop
xchg
fs
repz
aad
int
mov
insb
pop
pop
cmc
push
mov
dec
push
or
leave
imul
cmp
mov
data16
adc
dec
fwait
hlt
jae
mov
int
bound
insl
xchg
mov
repz
push
sti
das
mov
mov
mov
sbb
lret
pop
mov
xor
cmp
xor
outsb
loope,pn
stos
out
ret
fsubs
xor
cmp
sbb
xchg
test
lods
jae
inc
xor
in
out
or
pop
enter
or
adc
ss
mov
mov
insb
dec
lret
or
mov
jecxz
cmp
inc
fstps
testl
push
stos
adc
iret
push
add
in
icebp
cmp
ret
ja
dec
stos
lods
add
arpl
push
sti
sub
sub
test
out
scas
sbb
pushf
popa
inc
xchg
dec
in
jmp
jne
inc
xorb
push
mov
or
mov
fwait
je
out
dec
mov
mov
test
leave
jns
jb
fs
repnz
loop
rcll
js
std
sub
inc
orb
les
push
idivb
jns
dec
int3
outsb
cmp
js
iret
loopne
cli
out
push
xchg
fists
insl
and
lock
xchg
cld
sbb
jle
cwtl
in
test
mov
rolb
adc
sbb
xor
jbe
lretw
or
in
int
xchg
mov
jl
xchg
cmp
mov
jle
cmpsb
test
cmp
jo
mov
dec
mov
subb
push
cmpsb
out
fidivrl
frstor
nop
push
jnp
into
insb
cli
cmp
nop
lea
xor
sub
sbb
sbb
pusha
stc
inc
insl
hlt
mov
cmpsb
jne
mov
push
int
jae
xchg
fsubs
xchg
xor
cmp
and
dec
push
jbe
aad
xchg
adc
out
ja
notb
mov
sub
out
mov
lret
jle
icebp
push
jecxz
test
in
push
lret
in
mov
repnz
dec
out
nop
jae
rclb
sti
rorb
pop
pop
xchg
mov
mov
mov
aam
enter
mov
int3
ss
cmc
test
cmp
add
adc
pop
divw
fs
pop
loopne
repnz
bound
add
xchg
sub
fidivrl
test
loop
cmp
cmpsb
push
das
add
popf
jae
int3
pop
fs
scas
mov
sbb
aas
jecxz
repz
inc
fwait
in
stos
fdivrs
sub
lret
xor
test
xor
out
dec
lds
jns
clc
jp
loop
cmp
pop
cmp
sbbl
sub
hlt
ds
lods
faddl
sbb
js
in
mov
jbe
adc
fildl
push
xchg
data16
xor
push
idivb
jne
fnstenv
cmp
xor
add
adc
xor
mov
or
fisubl
cmp
inc
popa
push
add
cmp
xchg
inc
dec
adc
cmpsb
add
or
inc
dec
push
pop
jl
mov
cli
mov
sarb
xchg
or
cmp
lcall
and
popf
jne
int3
cmc
inc
jbe
jno
xor
cltd
adc
mov
mov
jns
cmpl
jl
jecxz
mov
test
or
lahf
dec
test
dec
and
or
and
in
mov
loop
scas
xlat
sti
inc
fiaddl
jle
not
sbb
xor
out
aas
adc
xor
adc
sbb
push
fstpt
push
sub
lret
xchg
xchg
mov
inc
add
mov
xor
pop
mov
scas
dec
adc
outsb
jb
lret
ds
inc
cs
push
enter
dec
ljmp
cli
dec
das
std
dec
stos
sub
test
int3
lods
dec
cmp
or
lods
xchg
jge
cmp
arpl
push
cltd
jp
nop
lods
push
and
es
sub
hlt
movsb
leave
mov
push
dec
stc
mov
das
sub
repz
or
clc
int3
int3
pop
sbb
jge
push
sub
test
addb
jo
add
cmp
jmp
nop
lret
sub
adc
or
adc
pop
cmc
nop
or
jns
and
cmp
lods
pushf
rolb
mov
add
hlt
jg
loope
jmp
fbstp
fisubl
pop
xor
je
insl
inc
pop
inc
cli
test
sbb
scas
inc
incb
push
out
mov
aaa
movsl
mov
icebp
cmp
les
add
xor
jno
xor
mov
sub
jmp
test
push
jb
fisttpll
push
add
jne
mov
add
mov
ljmp
and
xor
xor
xchg
repz
inc
cmp
jmp
mov
and
dec
mov
push
and
iret
pop
idivb
aam
cltd
xor
repz
movsb
pop
jmp
and
pusha
pop
pop
mov
jl
lods
dec
insl
cmp
cmovbe
popf
add
cmp
or
dec
int3
lcall
jae,pn
inc
out
lods
xchg
mov
inc
inc
jle
repz
ljmp
and
test
fistpl
sbb
mov
loop
mov
xchg
js
xchg
inc
outsl
mull
mov
and
dec
mov
out
sub
jge
inc
push
dec
sub
pusha
jle
jne
and
cltd
mov
ja
in
int
mov
lods
into
jo
jmp
or
pop
lock
fisttps
cmp
ret
mov
mov
addr16
jecxz
jo
dec
xchg
mov
jno
jno
or
pop
jo
jae
push
xor
pop
subb
inc
aad
inc
cmp
sti
ret
movsb
int
in
sbb
cltd
test
movl
in
sbb
jns
mov
or
pop
mov
dec
sbb
into
mov
sbb
pusha
in
pop
in
add
out
cwtl
mov
cmp
fiaddl
add
bound
mov
push
je
cli
jne
aam
cli
lods
mov
mov
inc
fidivl
fnstsw
sahf
scas
sahf
jg
jecxz
xor
hlt
add
adc
push
cmp
lock
add
popf
std
sbb
loopne
xor
sub
fmuls
add
and
jp,pn
imul
cld
dec
cmp
fwait
xor
ficomps
and
pushl
repnz
sub
inc
and
or
add
xor
or
fmull
mov
dec
mov
scas
cmc
add
add
insl
xchg
add
jecxz
gs
sbbl
cmp
test
mov
pop
lret
cmpsb
and
mov
ljmp
sbb
es
call
loop
push
inc
int3
divb
movsb
mov
mov
inc
pop
pop
cmp
sub
adc
dec
cltd
pusha
out
loopne
pop
jp
repz
fldenv
inc
stos
hlt
xchg
and
inc
mov
lcall
int3
neg
jecxz
stc
rclb
sub
xchg
dec
js
xchg
cmp
lret
lds
ds
insb
push
lea
mov
sub
xlat
dec
add
jb
cltd
pop
ja
add
scas
or
dec
std
lock
test
jl
insb
xchg
push
push
dec
or
fistpl
addl
mov
adc
inc
mov
jle
add
cmp
leave
das
mov
shll
xor
mov
fisubrl
fwait
divb
test
jno
lods
cld
out
cmpsb
ljmp
mov
mov
and
in
pop
pop
sbb
cmp
jb
ss
fwait
mov
lahf
mov
xchg
xchg
pop
push
mov
and
pop
js
dec
cmp
jle
lods
xchg
pusha
adc
shl
push
xchg
test
push
push
mov
lock
mov
push
movsl
mov
jo
cld
mov
inc
pop
mov
addr16
adc
out
mov
popf
jl
jbe
mov
push
cmp
or
cs
xor
mov
mov
imul
int3
xchg
dec
dec
enter
cltd
repz
cmc
add
push
adc
pop
mov
push
adc
xchg
cmp
stos
arpl
scas
sub
rcrb
packsswb
push
fmull
or
push
insb
int3
pop
daa
dec
pop
sahf
ret
in
fstp
jnp
mov
mov
out
dec
bound
ret
outsl
int
pop
in
test
lcall
xchg
or
lret
inc
jae
mov
and
movsb
xchg
fisubl
pop
pop
mov
adc
clc
enter
es
sbb
xchg
fnstcw
cwtl
cmpsl
test
iret
xchg
fs
hlt
sub
jmp
fnstsw
jno
test
frstor
push
gs
int3
pop
dec
in
lock
inc
mov
in
stos
mull
nop
inc
lea
adc
dec
ss
and
add
or
repz
in
adc
mov
xor
test
xchg
aam
das
jge
inc
or
xor
and
lods
jmp
pop
mov
add
into
sbbb
daa
into
jmp
pop
mov
shlb
aaa
and
add
lock
mov
pop
cli
push
enter
sub
aaa
sub
dec
in
repz
icebp
mov
lahf
cmp
or
mov
outsl
push
or
stos
outsb
push
andl
mov
cs
mov
ds
cli
mov
pushf
pushf
outsl
mov
push
push
ds
push
loopne
add
xor
repz
jbe
mov
in
xchg
cmpsb
adc
popf
lods
mov
popf
cltd
mov
push
lahf
push
add
mov
mov
mov
or
jge
adc
repz
pop
add
xchg
stos
push
test
pop
mov
aam
push
inc
cmp
scas
push
xlat
movsb
ret
inc
mov
pusha
cmp
jne
hlt
into
and
call
test
es
mov
out
pop
call
xchg
xchg
pop
cs
add
subl
or
inc
inc
ret
pop
fwait
add
iret
pop
push
dec
loope
loope
mov
add
clc
or
movsb
xor
lahf
insl
adc
lret
daa
and
outsl
int
cmp
push
mov
lea
dec
mov
mov
mov
xchg
scas
outsb
pop
inc
jmp
sbbl
cmp
cmpsb
in
xlat
cmc
dec
xor
mov
mov
insl
pop
jnp
ljmp
mov
add
or
ss
loop
inc
rcr
cmp
ror
xchg
xchg
mov
mov
pop
jae
add
int
and
rcrl
xorl
popf
iret
rcl
lcall
in
pop
inc
cmp
iret
rorb
lahf
mov
sbb
aas
jne
xor
loop
xor
cltd
popa
sub
push
into
xor
jg
in
mov
rclb
jo
pop
add
popf
xor
loop
leave
xchg
lahf
fistps
push
movsl
hlt
notl
xor
aad
add
inc
cmp
xchg
dec
lret
sub
dec
mov
fdivrs
aam
cmpsb
mov
or
mov
dec
xchg
cmpsl
xchg
mov
inc
mov
xchg
jle
icebp
daa
pop
add
ljmp
xchg
iret
test
xor
movl
xchg
pushf
mov
pop
loopne
aad
in
dec
push
cltd
xchg
jo
mov
pop
in
and
and
adc
inc
dec
dec
cs
inc
lods
das
mov
mov
cltd
mov
mov
mov
lock
xchg
insb
mov
pop
jnp
mov
test
dec
dec
test
cltd
pop
xchg
fnstsw
pop
push
cmpsb
sub
loop
imul
jbe
adcb
stc
mov
in
pushl
lret
xor
rorb
clc
int
jns
sub
adc
mov
cmp
sbb
lret
shr
dec
inc
xor
xchg
inc
jmp
ret
outsb
xchg
scas
cmpsl
daa
add
xchg
push
add
scas
insb
subb
cmp
push
in
xor
push
jp
inc
and
scas
gs
sbb
inc
fdivl
outsb
movsl
inc
inc
push
lods
dec
mov
cmp
js
cmpb
inc
xor
xor
push
xor
test
or
insl
sub
js
loopne
and
or
xchg
icebp
frstor
mov
sbb
out
pop
and
xchg
pusha
push
pop
negb
sub
sub
fs
jecxz
nop
and
sbb
sbb
cltd
int3
xchg
mov
lds
fs
pop
push
xor
and
sub
aas
and
mov
and
lods
dec
cmp
lods
lret
aad
mov
test
ror
fldenv
jecxz
dec
xchg
sbb
stc
jge
test
lahf
data16
mov
test
dec
mov
jge
adc
loope
loope
lret
pop
mov
out
dec
pop
pop
lahf
cmp
sub
push
gs
scas
inc
clc
sbb
inc
cmc
adc
sbb
dec
inc
into
and
fistps
inc
jb
push
push
shll
fsubs
mov
dec
sub
inc
push
clc
test
clc
sbb
and
pop
out
je
fidivrl
in
cmp
or
scas
or
mov
inc
xchg
push
xlat
jo
add
mov
aaa
inc
lret
xorb
jl
jnp
fidivs
mov
push
jbe
popl
jg
test
sbb
lcall
dec
xchg
dec
jno
insl
xchg
ds
lds
mov
lret
jne
or
fdivs
add
adc
cmp
cltd
pop
clc
xchg
sub
mov
out
imul
push
loope
sbb
in
xchg
stos
jp
and
adc
lret
xor
adc
in
xchg
stos
xchg
mov
aad
pop
loope
icebp
lea
push
out
mov
pop
push
adc
push
es
test
pop
pop
mov
and
sub
call
mov
pop
jo
dec
push
jp
pop
sub
mov
jns
jno
repz
inc
fists
iret
popf
xor
dec
pushf
daa
in
into
in
js
dec
cltd
fmul
xchg
repz
repz
test
fstpt
dec
cmp
repz
das
ljmp
les
das
push
in
insl
add
sub
into
pop
aam
imul
xchg
mov
loopne
rorl
or
dec
and
jno
subb
sub
mov
and
lea
mov
test
xor
fcmovnbe
cmp
das
loope
rcrb
sbb
dec
out
cmp
xlat
pop
cmp
dec
xchg
loopne
pushf
add
test
push
push
je
xor
pop
daa
out
int
jmp
mov
daa
mov
repz
hlt
mov
jl
rorl
loop
jge
or
cmp
into
cmp
cmp
fsubp
mov
xorb
add
adc
movsb
xor
and
sbb
lea
push
into
cmp
mov
and
mov
push
into
push
mov
push
adc
pop
push
or
leave
out
test
push
fcoml
rcrb
mulb
sbb
mov
push
dec
test
cld
or
xchg
xchg
mov
or
or
jo
cltd
sub
and
out
sub
sbbl
dec
inc
jne
clc
jmp
mov
outsl
xchg
pop
lock
and
xchg
push
mov
jbe
sbbb
push
iret
sbb
xor
rcrb
movsb
pop
pop
aas
scas
rcrb
std
bound
lahf
and
cmpsb
inc
xchg
rclb
mov
add
out
and
lcall
add
cmp
lret
push
adc
jb
scas
lcall
repnz
jecxz
sarb
mov
jbe
je
mov
out
loopne
bswap
ss
mov
ja
xchg
jge
pop
inc
hlt
jo
mov
xchg
out
scas
cmc
adc
xor
pop
cmp
xor
scas
or
adc
incb
push
gs
cmpl
mov
jg
sub
frstor
mov
loopne
fildl
sbb
out
jbe
jmp
shlb
inc
pop
sub
inc
call
cmp
xor
lcall
pop
arpl
mov
repz
add
mov
call
inc
adc
lods
jmp
inc
cmp
adc
mov
inc
cld
bound
ja
test
push
mov
jo
call
lods
add
dec
mov
dec
lahf
aaa
add
and
xchg
stc
iret
aad
dec
dec
gs
fimuls
inc
dec
movsb
loopne
mov
add
in
lods
and
sub
or
mov
mov
stos
daa
stos
lds
dec
fstps
push
leave
and
int
sub
je
inc
xchg
roll
outsl
mov
loope
and
push
push
pop
movsl
xlat
popa
xchg
and
imul
lea
jmp
es
inc
or
call
mov
inc
inc
fldt
int
inc
push
cmp
ja
mov
adc
mov
mov
movsl
inc
lods
lret
and
xor
out
dec
sub
sti
in
push
js
insb
jbe
jmp
cmp
mov
sti
rcrb
cs
xchg
xor
sarb
push
fsts
xor
mov
pop
fsubrl
cmp
pop
aad
mov
xchg
imul
pop
or
cltd
dec
scas
mov
push
inc
stos
fdivrs
ficomps
add
inc
inc
in
xor
adc
std
push
xor
or
sub
jmp
dec
adc
sbb
in
push
popa
rcll
add
iret
dec
and
xchg
movsb
jb
mov
inc
dec
sub
in
lahf
insb
and
jecxz
mov
cmc
push
xchg
out
add
cli
mov
aas
jp
xlat
sub
sbb
mov
pop
xor
inc
sti
es
cmc
lock
mov
lcall
mov
sub
stc
pop
jp
addr16
dec
cli
cmpl
call
jbe
icebp
std
popf
aas
pusha
mov
add
test
lds
cmpl
es
lret
stos
cmp
jb
adc
dec
das
sub
push
rclb
mov
faddp
enter
mov
mov
aas
imul
add
lret
push
test
cmc
icebp
bound
inc
dec
mov
mov
es
loopne
or
jne
popf
xchg
rclb
rcr
dec
inc
cltd
push
or
pop
lret
dec
ljmp
xor
repnz
insb
repnz
mov
push
int3
mov
sbb
in
and
in
es
and
push
cmp
jge
popl
or
and
ficoml
loopne
rorl
loope
cli
shr
mov
stc
lcall
cmc
push
aad
sbb
mov
mov
pop
bound
mov
adc
pop
dec
fldenv
fdivrp
inc
xor
push
and
push
xchg
jbe
insb
in
or
sti
mov
leave
in
jo
fs
sbb
sub
lock
shrb
sub
push
mov
imul
pop
adc
jno
sub
xchg
pop
pop
xchg
pop
dec
bound
xchg
insl
mov
mov
push
jae
push
mov
sub
cmp
imul
pop
repz
cmc
adc
jecxz
and
push
and
test
stos
insl
jmp
repnz
call
sub
jg
xchg
sub
fisttpll
stos
sti
imul
mov
pop
jecxz
scas
repnz
lahf
out
cmp
jae
int3
imul
add
pusha
jo
icebp
jno
sbb
pop
repz
aaa
and
xchg
xor
std
sub
pop
in
outsl
push
pop
cmpsl
xchg
fs
fidivl
dec
test
dec
in
sbbb
xchg
add
jge
xlat
out
in
in
cltd
mov
addb
or
hlt
fsubp
out
jge
ret
push
sar
push
lock
lods
shll
push
dec
fistpl
sbb
cld
mov
dec
xor
out
test
mov
sub
inc
in
aas
mov
inc
ss
stc
in
fsubr
test
sub
mov
cld
and
pop
insb
mov
fwait
inc
adc
mov
int3
fcoml
jbe
xor
loop
pop
mov
out
pop
mov
sti
mov
hlt
ret
ficoml
sar
pop
inc
sarl
xchg
push
mov
xor
les
fdivl
inc
inc
fiadds
fbld
add
stos
mov
js
imul
stos
pusha
or
subb
pop
in
jg
xchg
sub
xchg
mov
bnd
test
cmpsb
in
clc
fidivrl
outsb
dec
dec
push
sti
inc
xchg
jne
adc
push
xchg
loop
out
mov
adc
daa
mov
jg
clc
test
addb
fdivp
mov
xchg
lea
xor
adc
cmpsb
dec
ja
lcall
sti
xorl
xchg
negl
pop
cwtl
mov
push
test
mov
pop
cmc
inc
ret
xlat
scas
mov
adc
push
pop
hlt
movsl
fdivrs
mov
ret
cmp
idivl
pop
jno
icebp
cld
mov
push
les
or
cmpsb
sbb
lods
jmp
jbe,pt
mov
sbb
ffree
inc
fstpt
out
xchg
imul
mov
xchg
add
mov
push
mov
push
sub
cmp
and
cld
mov
or
pop
jbe
stos
push
inc
cmp
xchg
and
xchg
hlt
mov
and
fwait
xchg
notb
mov
pushf
icebp
push
xlat
test
xchg
fsubrs
test
movl
pop
stc
xchg
mov
lock
and
push
cld
decb
mov
xchg
dec
int3
add
popa
data16
xchg
loope
cs
rclb
cmp
fdivr
mov
mov
push
inc
ret
sbb
inc
xchg
mov
mov
aas
popf
cmp
sbb
sbb
xchg
lea
iret
inc
pop
pop
cmp
stc
test
cmp
cld
js
and
cltd
jb
xor
in
clc
sub
mov
out
pop
cmp
andl
push
mov
jp
mov
mov
pop
xchg
push
cli
adc
or
imul
push
add
movsl
repz
pop
xchg
sub
push
fwait
sbb
cmpsl
xor
or
clc
lret
jge
pushf
push
lret
sarb
dec
add
inc
stc
mov
jae
xor
mov
add
sbb
or
fldt
inc
cmp
jbe
loope
mov
subb
enter
inc
mov
icebp
push
dec
addr16
sbb
adc
outsb
jne
scas
out
movsl
pop
mov
push
push
add
xchg
sbb
mov
push
pop
xor
rcll
mov
enter
sbb
mov
jge
add
test
xchg
shrl
mov
inc
sti
int3
xchg
jne
imul
xchg
cmp
pop
outsl
or
xor
in
cltd
packsswb
and
push
in
xchg
sbb
xor
outsb
xor
or
push
sub
mov
jg
and
cmpsl
adc
or
mov
xor
mov
add
mov
ss
test
lods
xlat
push
add
adc
cmp
aas
scas
movnti
sbb
jp
mov
xor
mov
lret
test
js
mov
or
std
jnp
cld
add
inc
scas
adc
in
addr16
sub
out
lods
mov
xchg
cmp
xor
xor
rolb
add
repnz
sbb
mov
or
in
mov
xor
and
dec
loope
pushf
inc
cmp
dec
or
add
sbb
rcrb
addr16
pop
xchg
and
xor
mov
stc
arpl
mov
test
fld
ljmp
pop
cmp
test
xor
inc
scas
xlat
nop
test
sub
arpl
sub
clc
imul
pop
mov
enter
loop
lods
jecxz
popf
addr16
sub
sbb
flds
cmp
pop
out
sbb
out
push
cmp
fmulp
nop
imul
adc
repz
es
arpl
inc
xor
jp
xchg
fwait
pop
lret
sbb
adc
sub
xchg
cld
xchg
adcl
lock
adc
imul
cld
sub
ficoml
les
repz
test
sub
roll
xchg
cwtl
push
sbb
mov
xor
xchg
add
ds
js
lret
les
push
xor
das
out
in
mov
ror
inc
push
ret
or
pop
mov
sti
adc
lods
fwait
mov
dec
enter
fsubl
inc
sbb
xchg
mov
add
mov
stos
sub
xchg
dec
jo
and
sub
sub
mov
cltd
mov
or
pop
inc
add
fbstp
call
in
add
mov
fld
mov
sub
push
popf
and
fwait
dec
stc
sub
inc
push
fsubl
jno
sub
outsl
jl
mov
test
out
xor
les
push
xchg
repz
ds
adc
mov
jae
inc
lcall
loopne
ret
inc
fs
addr16
jge
fucom
test
mov
mov
lds
lods
arpl
adc
pop
insl
mov
fbld
movsl
fadd
ret
arpl
fcmovnb
fimuls
dec
int3
rorl
fdivr
stos
jp
push
pop
shr
pop
dec
mov
and
sub
jo
into
jb
sub
pop
push
pop
cmpsb
stos
jno
sbb
loope
scas
pop
xchg
push
cld
int
inc
and
fwait
mov
push
pop
ret
imull
and
jne
sbb
lock
insl
out
mov
inc
mov
mov
and
loopne
lods
imul
int
daa
and
outsl
jl
mov
inc
js
push
xor
mov
xchg
dec
rclb
scas
std
ss
ja
lds
movsb
sbbl
ja
xchg
aam
mov
mov
adc
or
jl
and
fs
mov
js
mov
sub
add
fs
push
lods
out
loope
pop
add
fwait
mov
xchg
jp
xchg
jle
push
das
mov
inc
mov
aad
stc
int
mov
jnp
or
ret
gs
jl
xchg
add
mov
shrb
ds
pop
sub
and
in
mov
dec
fildll
or
scas
mov
xchg
ja
shr
and
mov
push
push
sahf
add
push
and
sub
gs
mov
adc
cmp
mov
push
inc
jg
mov
dec
xor
pushl
js
inc
mov
aas
push
mov
das
rclb
mov
push
leave
movsl
call
dec
cmpsb
subb
or
xchg
in
mov
cmp
mov
jb
fs
or
pop
cmc
push
push
sarl
outsb
push
rolb
pop
ret
fstl
idivl
inc
bound
loop
ss
push
adc
movsl
xchg
dec
dec
mov
test
arpl
mov
jbe
cmpsl
sbb
mov
jbe
xchg
data16
fiadds
or
xchg
push
xchg
xor
pop
jmp
lock
push
push
xor
mov
outsb
jmp
push
or
lods
inc
sti
es
aas
shl
out
shl
sub
es
dec
sub
mov
cltd
icebp
lods
push
mov
daa
loop
push
mov
adc
cmpsb
cli
adcl
aam
sbb
shrb
pusha
fsub
sub
and
push
push
loop
and
add
test
mov
xchg
or
enter
pop
push
pop
pop
bound
and
mov
adc
data16
outsl
jl
dec
aam
arpl
shlb
out
call
shlb
mov
or
push
push
mov
int3
sub
pusha
mov
xchg
fs
dec
adcl
int3
pop
dec
sbb
or
mov
hlt
mov
and
jmp
enter
fdivp
mov
mov
mov
loopne
dec
dec
stc
dec
cltd
shll
lock
inc
pop
mov
rcll
xor
jbe
xchg
and
int3
vcvtps2dq
icebp
aad
fiadds
jmp
mov
jmp
and
adc
jp
les
mov
pop
leave
xchg
mov
pop
sub
shlb
mov
call
lea
mov
in
es
cltd
outsb
test
ret
mov
adc
lret
mov
mov
aaa
xchg
orl
sbb
push
inc
pop
lcall
call
and
nop
dec
inc
dec
outsl
aam
inc
cmpsb
and
lret
fimull
sub
arpl
push
imul
lcall
sbb
fsqrt
push
movsl
std
push
aaa
bound
shll
test
bound
js
fldenv
arpl
jle
jne
mov
pop
xchg
iret
int3
sub
rcr
mov
daa
stc
xchg
std
popa
mov
pop
pop
int3
movsl
sbb
and
xchg
mov
enter
jnp
ret
in
mov
push
imul
nop
push
sbb
push
rcrl
data16
mov
sub
or
and
sub
rep
std
jno
ret
mov
sub
xchg
mov
mov
sbb
bound
rorl
xchg
cvtpi2ps
pop
out
push
mov
loopne
negb
outsb
push
mov
ret
into
pop
jp
ds
mov
in
cmpsl
jb
cltd
imull
xor
or
push
dec
out
push
fnstsw
push
cmp
dec
ljmp
jo
inc
pop
ljmp
push
add
inc
jno
jae
loopne
imul
int3
fnstcw
dec
mov
cmp
dec
aaa
push
xor
repz
pop
repnz
outsb
movsl
push
add
dec
cs
sahf
xchg
cmp
cmp
in
fbld
inc
sbb
jg
ss
dec
dec
add
pop
xchg
scas
inc
aam
sbb
movsl
and
stos
pop
loopne
sub
sub
or
push
push
and
xor
out
mov
jae
dec
std
mov
stc
das
mov
das
adc
and
fdivl
incl
or
imul
stos
sub
jecxz
xorl
mov
imul
jae
cld
ds
pop
jno
into
cmpsl
cmc
jmp
leave
clc
mov
or
ret
dec
jmp
adc
in
add
adc
and
js
push
adc
sbb
fnstsw
push
int
xor
push
xor
xor
push
sbb
xor
mov
cld
inc
leave
xchg
xor
jmp
inc
orl
loopne
and
stos
pop
jl
inc
rcr
lret
pop
repz
lret
sub
into
pop
push
push
jnp
repnz
jnp
popfw
mov
ljmp
mov
stc
int3
out
sti
xor
jp
push
xor
daa
lds
xchg
imul
xor
stc
cmc
rcll
mov
nop
inc
lods
test
repnz
push
inc
mov
repnz
fsts
test
xor
sub
cmp
xchg
push
push
jno
xor
pop
push
inc
or
dec
int
das
sub
jg
aaa
scas
lahf
mov
jae
or
out
push
cmpsl
jae
bound
xorl
cs
rcll
int
pop
jbe
cmpsl
jno
xor
mov
xlat
and
mov
jg
repnz
cmpsl
jg
in
dec
in
lcall
jo
pop
stos
sub
jne
loopne
pop
lds
jge
loope
test
xchg
jge
xor
xor
xor
ret
das
test
jnp
shl
xchg
in
imul
jmp
jecxz
sub
sbb
xor
sbb
inc
xor
lock
cmpsb
shl
test
loop
sub
mov
jl
negl
mov
ret
push
push
jo
and
mov
pusha
lahf
ds
test
insl
push
call
sub
mov
adc
xchg
cmp
inc
push
das
adc
xchg
mov
adc
push
mov
add
sub
dec
and
or
inc
loope
lock
jo
sub
add
repz
push
or
cmpsl
or
ret
inc
inc
sbb
out
xchg
stc
rcr
loopne
xlat
subb
lea
jmp
loopne
test
cmpsb
sahf
aaa
inc
xchg
bnd
and
and
mov
in
jbe
and
and
lret
movsb
jge,pn
mov
subl
mov
inc
addb
or
mov
pop
dec
lods
lods
dec
ffree
cmp
sahf
movsb
xchg
imul
ret
ja
pop
push
cmp
cmp
movsl
and
mov
sahf
jecxz
addr16
xor
lea
xchg
int3
js
nop
push
ffreep
pop
push
xchg
shrl
popl
inc
lret
es
out
inc
js
cmp
or
in
xchg
shl
cmp
sub
mov
jns
push
xchg
std
cld
scas
jnp
jp
cwtl
inc
fs
movsl
idivb
sahf
fsubrs
out
cmc
fsubrl
cwtl
add
aaa
lgs
jmp
shr
hlt
insb
mov
jbe
mov
push
jae
popa
rcll
mov
sbb
lea
test
adc
sub
mov
mov
inc
lret
aaa
arpl
inc
repnz
pop
fisttpl
data16
ja
xchg
les
shl
add
pop
add
xchg
mov
mov
sub
push
pop
in
dec
sub
xor
mov
mov
cld
push
pop
push
addr16
mov
and
mov
xchg
dec
clc
jae
or
add
gs
jb
sbb
fidivl
cmp
lcall
outsl
xor
fnsave
cvtdq2ps
bound
xchg
data16
push
out
out
mov
popf
stc
push
jle
mov
mov
and
or
out
adc
cmp
add
popf
js
iret
inc
xchg
push
stc
dec
frstor
lcall
sti
sarl
das
and
sarl
repnz
fwait
loope
ds
and
inc
dec
rclb
daa
xor
and
in
mov
lcall
je
nop
scas
inc
xchg
lcall
fiaddl
sub
add
test
pushf
push
cwtl
xchg
in
cmpsb
ret
fildl
cmp
jl
jb
clc
sbb
adc
mov
pop
test
lods
dec
in
or
inc
xchg
or
sub
sbb
cmpsl
cli
pushf
inc
inc
sbb
lods
mov
mov
out
daa
push
cmp
inc
push
sarl
repz
mov
push
jp
popf
mov
push
push
push
iret
in
xorb
adc
ror
cmp
sub
push
inc
ja
jmp
in
inc
sub
lods
mov
in
iret
xor
and
fbld
stc
data16
jnp
cli
scas
pop
das
rclb
es
cltd
ret
inc
mov
repnz
inc
dec
ss
out
and
hlt
lret
fisubs
cld
es
or
mov
lret
sub
inc
push
xchg
xchg
repz
outsb
cld
movsb
mov
or
jbe
mov
popa
repz
scas
sbb
mov
xchg
out
fisttpll
jg
push
adc
mov
inc
call
leave
je
inc
fnstcw
cmp
jecxz
dec
cmp
mov
shl
lret
lods
aas
push
adc
lcall
dec
pop
sub
jno
sub
fs
mov
push
mov
mov
xchg
mov
push
mov
rorl
pop
add
pop
mov
dec
pop
cmpsl
int
mov
stos
jmp
loop
mov
inc
in
jecxz
push
dec
cmp
pop
movb
roll
cmp
xor
xchg
and
sub
push
push
xchg
aas
cmp
xor
je
mov
pusha
xor
add
mov
sub
cltd
in
dec
inc
in
mov
fbld
inc
lock
fisttps
stc
shll
call
push
jbe
popa
shr
lret
stc
xor
or
call
imulb
add
mov
or
clc
xlat
jbe
dec
scas
xor
inc
mov
movsb
lahf
gs
popf
shrb
xchg
inc
push
adc
sub
add
push
cwtl
xchg
test
xchg
int
lahf
sub
or
mov
push
inc
in
jbe
add
stos
mov
sub
out
xchg
sub
mov
inc
sub
scas
pop
in
jae
inc
scas
ja
sub
push
lea
imul
fimull
sarl
lcall
daa
sbb
mov
fistl
mov
pop
add
mov
shl
or
xor
adc
lcall
imul
xor
popa
pop
xchg
pop
fldt
and
outsb
movsl
clc
pop
jbe
jl
pop
js
inc
mov
jb
push
ds
faddp
stos
popa
push
stos
jnp
cmc
jmp
xchg
cmp
sarl
cmp
mov
fistps
insb
adc
jnp
call
mov
sub
movsb
movsbl
pop
and
jo
sbb
xchg
or
sbb
nop
and
mulb
mov
push
test
ds
cmp
jmp
leave
mov
aad
cmpsb
scas
inc
push
icebp
and
outsl
inc
frstor
pop
insb
cmpsl
out
and
bnd
jne
loopne
and
subb
std
bound
sub
outsl
fdivl
lret
cmpsl
stc
jne
loop
pop
xchg
sbb
xchg
in
out
negb
fildll
test
sub
aaa
mov
loope
xchg
sarl
das
popf
movsl
mov
jle
sub
aam
lret
repz
outsb
fs
mov
fcompl
dec
sbb
pop
xor
push
dec
dec
add
pop
and
mov
jl
imul
sbb
cmp
sbb
cld
or
mov
push
mov
hlt
mov
add
outsb
in
xchg
adc
mov
mov
in
cmp
aaa
mov
test
notb
ss
pop
pfrcp
adc
shl
cmp
cwtl
adc
and
push
addr16
inc
inc
arpl
fsubrl
rol
scas
pop
popa
mov
movsb
sahf
mov
adc
outsb
mov
and
fstl
push
out
and
dec
cmp
pop
sarb
lahf
or
outsl
push
gs
cld
mov
mov
push
or
in
pop
push
imul
aaa
outsl
pusha
dec
enter
dec
inc
scas
jnp
daa
dec
out
xor
add
call
ret
cmc
gs
scas
leave
roll
out
push
or
mov
push
sub
xor
icebp
cmp
lret
mov
push
test
fwait
lods
xor
lea
xor
fsub
pop
add
jl
push
mov
pop
dec
popa
in
aas
dec
test
jg
and
xlat
out
jl
lret
filds
lock
loopne
jnp
jge
outsb
fisttps
es
jnp
xchg
jnp
stos
cmp
xchg
pop
xor
leave
insb
fists
mov
fcoml
jl
in
sti
in
xlat
mov
and
mov
ret
mov
setle
mov
mov
cmp
push
leave
sub
or
imul
mov
sti
and
popa
jge
dec
pop
jmp
in
inc
roll
sti
imul
adc
mov
rcr
and
in
jp
dec
outsl
decb
and
pop
dec
das
jecxz
cmp
lcall
pop
inc
dec
stos
mov
mov
insb
jo
push
je
jne
jl
addb
insl
shll
push
jmp
rcrb
adc
fwait
mov
std
adcb
enter
inc
pop
mov
out
jmp
lret
mov
loopne
xchg
imul
mov
jae
jg
test
das
popa
push
xor
pop
xchg
adc
mov
and
mov
jae
pop
mov
jbe
push
mov
imul
enter
int
ftst
jns
sbb
pop
lock
fxch
sbb
adc
cwtl
lods
repz
stc
daa
jns
in
mov
imul
shll
push
fdiv
pushf
push
mov
in
lret
cs
adc
idivb
adc
inc
or
pop
lock
mov
jne
mov
nop
outsl
mov
enter
pop
std
mov
jns
test
mov
jl
pop
pop
lcall
jne
aam
addps
dec
ja
xchg
or
in
fidivrl
inc
mov
push
pop
daa
push
stc
icebp
sbb
push
and
lods
mov
mov
fwait
jmp
push
int
inc
hlt
dec
imul
pop
in
ja
imul
and
mov
pushf
adc
leave
add
sub
call
pop
push
cwtl
sahf
sti
imulb
sub
cli
scas
inc
mov
stos
xchg
incb
popa
ret
out
push
test
fcompl
jecxz
in
sbb
inc
rcrb
jns
rcl
roll
mov
out
mov
sti
fistps
jnp
jno
push
dec
repnz
nop
lods
push
bnd
loopne
stos
xor
fstl
cmc
sti
rclb
cmp
xor
push
lcall
div
sbb
rcr
pop
xlat
outsl
cli
sbb
mov
inc
or
je
mov
lcall
adcl
dec
xorb
add
cmp
jo,pn
add
sub
inc
ror
test
xor
add
mov
std
dec
lret
divl
aas
movsl
adc
jle
or
push
mov
add
das
mov
notl
out
inc
inc
push
insb
lcall
lret
sbb
or
pop
lea
fwait
adc
out
add
mov
push
or
and
add
repz
ljmp
mov
xchg
in
mov
jl
mov
outsl
mov
cli
das
ret
movsb
addb
inc
das
cmp
shl
adc
test
imul
xchg
sub
jp
mov
sbb
aaa
js
add
jle
mov
outsb
push
test
popa
pop
out
jb
jmp
lcall
pop
leave
scas
xlat
push
sbb
outsl
and
js
push
rcll
mov
aas
mov
or
jl
sbbb
fbld
push
push
cmp
fdivs
pop
je
into
sub
mov
xor
add
ss
std
loop
xor
cmp
in
xor
push
jge
push
mov
xor
dec
mov
mov
jae
test
pop
stc
sbb
in
xchg
cld
sub
mov
push
add
xlat
xlat
neg
imul
mov
iret
cli
sbb
add
arpl
bound
stc
push
ljmp
cmpl
pop
cs
mov
and
lahf
push
dec
lock
adc
mov
lea
icebp
mov
test
and
or
fdivl
xchg
addb
das
enter
or
jmp
scas
subb
loop
cltd
add
xchg
seta
xor
jne
mov
fucomip
inc
pop
lea
xchg
loopne
subb
test
lock
sub
mov
ljmp
cld
sbb
icebp
add
ret
rcrb
adc
mov
fldl
nop
mov
testl
popa
lret
dec
ficomps
push
fwait
aaa
xor
dec
lret
mov
insb
into
mov
std
pop
ds
jg
mov
pop
and
sti
pop
dec
add
add
push
jae
in
call
add
testb
pop
lds
cmp
stc
dec
scas
movsb
insb
xor
xlat
cwtl
stc
lret
pop
pop
pop
in
in
mov
nop
inc
divb
addr16
shrl
jno
jne
xlat
and
inc
cmp
mov
fstpl
sbb
push
ljmp
out
inc
xchg
pop
lea
adc
sbb
aad
jecxz
dec
or
cltd
mov
jle
pop
mov
push
mov
and
nop
in
jns
jge
movsl
insl
xor
pop
push
sbb
inc
scas
std
push
mov
pop
cli
dec
jbe
mov
pop
xchg
fadd
sbbl
ds
mov
dec
leave
or
cmc
jns
cmp
mov
adc
jg
das
jl
roll
test
icebp
test
pop
outsl
adcb
push
sbb
dec
addr16
push
and
xchg
lahf
xchg
sbb
xchg
push
mov
scas
mov
sub
cld
jl
fildl
lods
imul
cmc
xchg
lret
xchg
xor
repz
cmp
jnp
cltd
push
mov
mov
cmp
mov
cld
ja
scas
add
pop
jns
dec
loopne
mov
je
push
push
dec
pop
icebp
inc
out
pushf
mov
ds
and
iret
outsb
testb
mov
daa
idivb
push
mov
inc
mov
sub
inc
sbb
cmp
jp
cs
or
push
mov
mulb
jno
mov
adc
mov
je
mov
push
adc
stos
aad
cwtl
int3
inc
ja
or
ljmp
mov
add
into
pop
jmp
dec
je
cltd
lds
add
rcll
test
xchg
mov
inc
push
ret
aas
push
je
es
inc
xor
ljmp
imul
sbb
or
mov
scas
xor
aas
push
hlt
sbb
leave
mov
int
xchg
inc
jmp
jbe
inc
arpl
stc
pop
scas
ds
jp
std
xor
and
jg
and
testb
aam
jg
sub
pop
fcompl
shl
lret
adc
cltd
lahf
aad
aaa
subl
das
mov
rclb
sub
cmp
sbb
jne
test
push
lcall
mov
sbbl
les
insb
inc
in
push
out
pop
add
rcrb
xor
mov
mov
jnp
xor
mov
pop
mov
je
jbe
mov
add
push
inc
dec
ret
push
dec
xchg
adc
add
shll
test
clc
xchg
movsb
lahf
pop
adc
add
inc
push
pop
in
ja
fldcw
mov
out
ret
ret
or
xchg
or
out
out
sbbl
pop
adc
push
arpl
subl
dec
les
std
jmp
pop
scas
adc
sahf
js
xchg
cmpsb
or
or
aaa
and
aad
out
cmp
dec
add
and
icebp
sbb
leave
aaa
loopne
cs
mov
push
dec
mov
mov
and
sbb
shlb
mov
scas
mov
daa
sti
dec
push
pop
and
or
jp
fcmovu
pop
adc
mov
sub
jbe
scas
dec
lcall
mov
aaa
int
pop
dec
mov
loop
aad
add
adc
and
les
addr16
push
cmp
loope
fidivs
cmp
pusha
bound
sub
pop
push
insl
movsl
mov
shlb
arpl
or
sbb
mov
jecxz
leave
sub
fprem
push
cmp
cmp
clc
cltd
les
test
incl
or
mov
enter
pop
nop
ljmp
mov
add
lret
sub
pusha
inc
outsb
mov
cmp
rcr
add
testb
lods
xchg
mov
fwait
je
or
fwait
adc
out
imul
adc
ljmp
out
lahf
xor
push
mov
aas
mov
or
jae
movb
xor
imul
dec
cmc
xchg
movsl
in
lds
mov
pop
mov
imul
dec
sub
sub
cwtl
cld
and
hlt
clc
test
or
add
data16
jge
testl
xchg
shlb
sbb
pusha
inc
mov
movsl
mov
lods
or
or
pop
push
mov
bound
sarl
insb
pop
inc
nop
sbbl
push
inc
nop
add
adc
mov
mov
cmp
sub
ret
loope
mov
xchg
ja
ljmp
mov
leave
fsubl
divl
add
movsl
enter
enter
mov
cmpsl
mov
outsl
jle
imul
sbb
jge
jle
adc
xchg
dec
jge
lods
dec
iret
sbb
int
mov
scas
xchg
or
and
mov
stos
loope
jno
cmpl
std
rorb
jmp
jmp
lahf
cmp
lahf
sub
jne
rcr
pop
mov
inc
js
or
dec
xchg
jae
sbb
mov
fistps
adc
icebp
mov
dec
fs
cmp
movsb
repnz
notb
xor
mov
xchg
xchg
sbb
dec
idivl
mov
sub
rolb
into
rclb
mov
cmp
loop
pop
mov
mov
addr16
mov
jbe
scas
mov
loopne
cli
lret
fs
pop
clc
and
faddl
adc
jge
out
mov
es
adc
je
cld
repz
iret
push
jo
adc
add
inc
sbb
xchg
rorb
push
inc
adc
mov
cmpsl
int
push
pop
clc
push
imul
pop
mov
nopl
pop
xor
sbb
mov
push
cmp
mov
pop
adc
dec
data16
pop
jmp
mov
xchg
into
pop
xor
add
jmp
jmp
fcomps
fsubl
out
inc
xchg
insb
push
cmp
dec
sub
xor
cmp
mov
loope
les
jmp
pop
lock
and
repz
inc
mov
es
les
push
jecxz
insl
rorl
push
push
mov
or
test
push
mov
mov
pop
mov
das
pop
bound
jnp
cld
inc
filds
mov
bound
fidivl
push
iret
cmp
ror
cmp
push
sbbb
xor
mov
push
mov
loope
rcr
add
shrl
or
cmc
dec
xchg
push
push
inc
outsl
mov
xchg
jae
add
xor
sbb
pop
hlt
scas
dec
pusha
ret
scas
xchg
je
out
and
dec
cli
into
cmp
mov
out
cmp
adc
lcall
mov
addr16
jns
shll
jge
insl
mov
sub
lock
push
xchg
aas
or
xchg
adc
ret
cmp
mov
xor
les
icebp
iret
mov
mov
dec
addr16
vcvtpd2psx
sub
or
inc
mov
inc
repz
test
das
sbb
xchg
xor
jno
cmp
mov
adc
sbb
jno
mov
jae
cltd
loop
or
das
cmpsb
sbb
mov
outsb
ds
ss
sbb
xchg
shl
push
int
cs
adc
ret
addr16
clc
mov
add
lock
add
mov
jp
jbe
inc
sbb
push
test
xchg
sbb
addr16
stos
jle
je
jl
xchg
data16
mov
in
mov
inc
mov
push
out
sbb
fiadds
adc
sub
out
xchg
sarb
lcall
outsb
push
outsl
inc
sub
xor
lds
jbe
mov
xchg
jbe
out
sub
pop
cmp
das
pop
add
ror
xchg
push
or
mov
ret
jge
push
fs
insl
xchg
pop
mov
data16
daa
lea
or
mov
mov
pushl
xor
cli
lret
mov
xchg
ret
cld
mov
xchg
xor
cmpsb
pop
mov
fsubs
jbe
ds
ficoml
aaa
cmp
bound
insb
js
addb
sbb
dec
cltd
leave
pop
push
xor
push
xor
inc
es
in
scas
lods
sbb
mov
pop
lock
cld
jno
fs
jl
lock
mov
popf
xchg
int
retw
es
add
enter
je
scas
xlat
push
fstps
outsl
push
pop
out
and
mov
dec
pusha
and
and
cmpsl
cmp
jg
cmc
das
loop
shrd
add
adc
lock
and
data16
fdivrs
push
xchg
dec
fstpt
movmskps
jnp
mov
dec
lret
lea
inc
sbbb
rcrl
jns
fdivl
jmp
jmp
pop
ss
mov
cmp
into
sbb
lds
cmp
xchg
inc
push
push
rcrb
inc
lret
mov
xchg
pop
outsl
ret
data16
pushf
mov
cld
gs
adc
xchg
mov
rol
jl
inc
lds
add
aas
adc
mov
cmp
aas
imul
xor
fdivr
add
inc
out
outsb
or
dec
ret
icebp
and
cmp
mov
fstpl
cmpl
dec
shl
mov
dec
jo
xor
jae
lret
scas
pop
push
and
adc
or
add
mov
push
mov
pop
mov
test
filds
test
je
dec
sub
jp
cmp
push
or
or
or
dec
jb
lret
mov
add
arpl
fcomps
cmp
fistl
add
aaa
inc
sub
push
cs
out
les
js
mov
mov
les
les
in
imul
stc
imull
mov
data16
pop
or
jmp
jge
dec
insb
out
shll
inc
popf
inc
push
scas
mov
clc
mov
lods
gs
and
pop
sbb
jne
dec
sub
ds
ret
cs
or
lahf
adc
dec
nop
cli
in
or
sub
int
cli
test
aam
xor
loope
ret
jp
sub
adc
clc
sub
mov
pop
mov
jne
popa
cmp
scas
out
add
mov
or
xlat
inc
lods
xor
test
xchg
add
clc
inc
mov
andb
mov
roll
xchg
xor
xchg
mov
loopne
out
andl
pop
ja
pop
hlt
leave
xor
mov
int
test
dec
mov
ds
imulb
popl
pop
mov
mov
mov
test
leave
gs
mov
pop
shlb
outsb
clc
pop
inc
lock
xchg
dec
sbb
jo
or
jp
dec
mov
cmp
bound
loopne
or
fisubrs
dec
jmp
inc
dec
push
mov
mov
cld
inc
scas
andb
sbb
ret
push
fs
out
sbbb
fwait
cmpsb
fs
and
cld
dec
push
rol
add
sub
imul
pop
test
scas
pop
jo
dec
push
jne
push
push
test
add
inc
xchg
cmp
imul
ret
mov
push
push
popa
aaa
mov
scas
and
xchg
xlat
ds
push
fisubrl
ss
std
cld
cmpsb
add
ds
gs
mov
fisttps
movsl
pop
cld
pop
jno
loop
test
mov
js
pop
xor
pop
hlt
or
sahf
scas
jbe
adc
cmp
push
stos
xchg
sub
inc
mov
mov
into
out
xor
xchg
inc
jle
testb
mov
rol
popa
xchg
sub
xor
mov
cmpsb
arpl
popf
cltd
imul
mov
jl
mov
cmp
jb
movsl
sbb
in
clc
lock
xor
out
aam
lret
cmpl
jge
xlat
adc
negl
sarb
sbb
pop
cmpsl
jnp
mov
fsubl
push
int
ficoms
pop
into
mov
filds
ja
daa
jge
sbb
xchg
cmp
mov
jmp
push
inc
push
cmp
mov
inc
or
stc
imul
in
mov
pop
in
mov
jns
xlat
adc
adc
dec
daa
jae
adc
mov
sahf
and
jb
in
xchg
sub
jp
and
movsb
inc
ja
or
pop
shrb
adc
or
test
movsl
push
sbb
push
jae
cmp
cwtl
add
fldl
push
jp
and
dec
pop
xor
add
repz
jp
jae
cli
adc
mov
push
mov
cmp
out
mov
clc
rcr
add
lcall
js
mov
aaa
jecxz
dec
out
test
aad
bound
mov
sbb
add
gs
jne
mov
adc
dec
sub
and
cli
lret
clc
repnz
mov
adc
and
jb
pop
scas
das
test
dec
mov
hlt
ds
scas
mov
mov
xchg
jge
xor
and
push
xlat
mov
cld
mov
shl
push
mov
jp
loop
insl
pop
and
jecxz
pop
rcl
movb
hlt
xchg
add
sbb
jo
test
into
cwtl
add
fsubrs
adc
jmp
ret
sub
mov
test
push
stc
lods
aad
ret
daa
xchg
push
push
xchg
push
dec
sbb
xchg
and
repz
stc
mov
movsl
pop
fstpt
out
cmp
sahf
mov
push
addr16
cwtl
mov
lods
lret
adc
xor
pop
and
sahf
dec
jp
test
mov
pop
mov
mov
insl
adc
in
adc
dec
xor
jmp
in
pop
outsl
arpl
add
pop
nop
xchg
add
mov
outsb
out
dec
adc
xor
mov
cmpsb
xchg
push
stos
fadds
mov
add
shl
lahf
mov
jge
stc
enter
mov
inc
pushf
loope
hlt
cmp
mov
mov
sbb
and
and
xchg
ret
in
repz
fs
mov
mov
sbb
and
push
pop
lods
js
pop
pop
dec
mov
es
xchg
or
mov
in
cmp
popa
xchg
pop
mov
pop
fimuls
sub
adc
aad
and
inc
andl
call
sub
xor
sbb
sub
ja
rcll
mov
mov
jbe
or
add
inc
loopne
xchg
mov
sarl
push
jne
dec
lds
jmp
fbstp
pop
ds
hlt
inc
das
subl
hlt
xor
data16
mov
cltd
bound
rcll
popa
cmp
out
fisubs
shlb
cmp
dec
dec
or
dec
sti
dec
xor
lds
sbb
inc
push
xchg
movsl
pop
mov
mov
test
add
clc
fisttps
or
dec
lods
xchg
out
mov
into
sbb
incb
inc
loop
int
je
ret
xlat
das
and
mov
push
dec
in
inc
pop
loop
push
mov
repz
cs
dec
cmp
fsts
andb
jno
dec
sub
arpl
push
lret
add
pop
mov
in
sahf
mov
std
mov
jae
shlb
inc
mov
lods
mov
imul
loope
and
or
imul
add
ja
dec
test
cmp
add
jno
jmp
out
or
or
out
xor
dec
push
or
shl
mov
mov
sub
sbb
jns
cmp
mov
lods
cmp
je
in
lahf
jns
bound
xchg
add
jb
and
stos
mov
push
xlat
repz
test
mov
cmp
or
popa
inc
and
inc
div
sbb
or
mov
pop
xchg
adcl
test
ret
or
pop
adc
jb
mov
sbb
mov
loopne
jmp
orb
sar
pop
jge
jl
xchg
movsl
scas
sbb
and
xor
andl
movsl
mov
ret
sbb
cld
mov
nop
lods
push
arpl
data16
leave
pop
sarb
clc
mov
stos
lret
js
pop
pop
pop
andb
mov
iret
inc
xor
shrl
mov
mov
testb
sbb
mov
ret
mov
xchg
mov
int3
andl
pop
lcall
outsl
sbb
mov
push
dec
pop
call
loope
mov
cli
outsb
outsb
hlt
loope
fisubrs
stos
sub
pop
bound
cmpsl
push
cwtl
lock
mov
pushf
loopne
fldcw
shr
test
inc
mov
outsl
push
mov
push
push
dec
fs
xchg
xchg
leave
inc
iret
mov
mov
ret
daa
dec
and
je
jne
arpl
js
mov
lods
push
or
sbb
repz
in
mov
xor
loop
cwtl
xor
incb
shlb
push
dec
cmp
orb
js
jne
and
pop
push
dec
jns
imull
mov
inc
push
xchg
addl
push
jnp
ja
lahf
mov
bound
sbb
dec
loope
cwtl
and
xchg
mov
push
rorl
adc
loop
push
shlb
push
mov
inc
es
fsubrl
push
lahf
push
test
push
xchg
or
xchg
fldl
icebp
or
push
inc
fsubrl
pop
sbb
or
mov
mov
or
xchg
popa
rcrl
jl
test
ret
stos
fnstenv
ret
mov
push
stc
xor
and
into
add
divb
pop
cs
fsubs
repz
rorb
out
ds
cmpsb
pusha
xor
or
ret
or
cmp
sub
in
xchg
imul
loop
xchg
xor
add
sub
test
ret
test
jb
xor
cmpb
xchg
inc
test
push
imul
addb
sub
sbb
stos
mov
movsl
div
mov
mov
lahf
shlb
sahf
insl
cmp
inc
jmp
test
mov
mov
xor
xor
xor
mov
pop
add
cltd
pop
lods
add
ret
pusha
jo
iret
adc
test
mov
add
int3
inc
push
movsl
iret
andl
rcr
push
mov
push
xchg
das
imul
and
ja
sarl
xchg
mov
add
xchg
inc
jmp
neg
pusha
ljmp
enter
ljmp
sbb
fildll
adc
sbb
push
jb
and
sbb
aas
insb
outsl
mov
je
test
cld
dec
push
cmc
dec
ret
add
xor
lock
sub
inc
pop
clc
sbb
into
ljmp
push
lea
iret
std
pusha
lahf
inc
xchg
stos
sbb
sti
inc
add
adc
fsubrs
fdivr
int
test
dec
repz
mov
mov
out
mov
pop
dec
dec
push
icebp
mov
sub
jg
popa
cltd
mov
or
dec
cmp
lahf
inc
test
pop
push
cmp
das
jo
mov
ds
mov
or
cld
jne
and
js
push
xor
lret
test
subb
shll
sbb
bound
push
mov
fwait
push
push
scas
mov
push
in
jb
aaa
loopne
bound
outsb
or
pop
dec
pop
mov
das
jmp
push
repnz
dec
out
loopne
lods
and
filds
psubusw
fnstenv
das
push
jp
jg
mov
testl
dec
xor
aad
cmp
mov
pop
lcall
xor
push
nop
push
and
js
out
dec
std
shrl
sbb
sarb
pop
mov
lods
add
in
xor
sub
aas
dec
or
test
xchg
xor
sbb
push
mov
mov
or
pop
inc
inc
pushf
sahf
notb
imul
out
outsl
arpl
cld
add
aas
xor
jg
jbe
mov
stos
xchg
repz
mov
out
and
xchg
cld
jecxz
int3
xor
je
mov
mov
insl
aad
jb
dec
fsubs
dec
mov
or
inc
pop
jb
scas
inc
or
or
sahf
jle
dec
scas
inc
nop
mov
scas
adcb
mull
xlat
clc
insl
inc
xchg
dec
inc
adc
test
fadds
fcomp
rcl
rcrl
jg
jns
mov
xchg
mov
xchg
jno
jmp
inc
mov
rep
ss
push
psrlq
insb
cmp
cmpl
cmp
sbb
adc
out
push
ja
in
rcr
sbb
add
mov
and
push
rcl
fistl
aas
nop
mov
andb
scas
add
daa
pop
or
pop
ss
repnz
cmp
jle
hlt
pop
mov
add
or
mov
in
movsb
mov
inc
or
repz
or
pushf
sbb
cmp
xchg
sti
out
pop
inc
push
icebp
jb
scas
out
xchg
ja
out
jle
std
insl
cli
jb
or
xchg
scas
rcll
ret
mov
xchg
idivl
pusha
push
mov
lcall
sbb
int
movsl
stos
nop
add
faddp
lods
xor
les
adc
sub
mov
gs
jp
add
adc
add
and
fisttpll
imul
enter
dec
lahf
fsub
pushf
xor
shlb
mov
fnsave
ficomps
cmp
fs
add
xchg
xor
repz
aas
inc
mov
xchg
push
lret
imul
leave
inc
mov
adc
nop
mov
dec
and
inc
cmpsb
xor
jb
cmp
roll
mov
mov
pushf
fmuls
pop
cmp
test
add
inc
testb
inc
or
jne
fcompl
jp
xor
jmp
movsl
adc
dec
inc
cmp
cmp
loope
mov
mov
fadd
mov
jmp
dec
jnp
and
in
and
xbegin
jge
and
int
loop
jo
icebp
jp
icebp
arpl
or
cmp
sbb
and
cmp
sbb
and
leave
xchg
lea
mov
daa
in
addr16
gs
mov
movsb
iret
lcall
cmp
cmpsb
cli
mov
jno
xor
cmp
loope
adc
mov
test
int3
negl
add
xor
clc
testb
pushw
fcompl
cmp
xchg
int3
mov
mov
mov
and
add
aad
add
lock
pop
std
imul
adc
mov
and
out
pop
les
scas
inc
sub
sbb
push
jo
push
xchg
inc
cld
aad
imul
movsb
sti
outsl
aad
push
xor
movsl
mov
xchg
or
imul
jno
stos
cmp
stos
mov
out
imul
pop
fsubs
mov
hlt
outsl
inc
lret
ljmp
jmp
sub
sbb
sbb
sub
sub
mov
in
test
fcompl
int
pop
aaa
xchg
int3
mov
dec
lods
loop
inc
xchg
dec
xor
jns
pop
add
lret
xor
fisubrl
mov
xchg
xor
movsl
mov
out
loop
stos
push
pop
sub
aam
push
adc
in
mov
stc
fwait
mov
xor
xor
add
xchg
int3
sarl
inc
adc
std
adc
fadds
cmp
sub
mov
roll
stos
dec
mov
mov
mov
ficoml
push
imul
mov
fcoms
idiv
cmp
push
adc
cs
loopne
mov
cs
xor
dec
mov
push
mov
add
xchg
bound
mov
lahf
mov
adc
test
jne
out
xchg
inc
adc
push
inc
fidivrs
clc
loop
inc
jae
sbb
adc
lret
sahf
into
xlat
cli
lret
insl
jmp
sbb
or
lcall
loopne
lret
mov
jge
pop
sub
mov
sbb
fcmove
cmpsl
sahf
fidivl
int3
push
jmp
aad
negb
cmp
and
fnstenv
adc
dec
or
cmp
fdivr
add
jo
inc
lret
adc
and
mov
sahf
out
iret
ficomps
adc
and
das
subl
out
mov
cwtl
cwtl
mov
dec
xchg
jecxz
dec
and
and
call
pop
dec
mov
fdivr
lods
test
xor
mov
rolb
xor
into
mov
es
fistpl
xchg
pop
sbb
mov
inc
rcrl
inc
or
aas
in
xchg
inc
dec
fiaddl
mov
stos
jp
add
sahf
aam
dec
out
popa
push
cmpsb
test
sahf
xorps
ret
mov
pop
add
in
cmp
cmc
stc
mov
aam
pusha
sbb
pop
jp
out
add
mov
cmpsl
mov
jmp
inc
pop
sbb
dec
aaa
mov
cli
aam
addr16
adc
or
fsubl
mov
in
mov
imul
mov
adc
inc
mov
sub
xchg
cli
xchg
in
mov
adc
add
aas
jge
push
testb
loope
fldcw
xor
xchg
inc
fidivs
hlt
xchg
dec
ja
hlt
sub
pop
outsl
sti
dec
mov
ds
push
dec
test
das
in
lahf
pop
or
std
into
ss
mov
sarl
xchg
aad
and
jns
push
cli
insl
mov
jae
aad
cltd
xchg
bound
clc
scas
loop
jae
adc
pop
xor
push
les
xsaves
dec
sbb
fdiv
loope
rcr
add
mov
shr
and
shll
push
icebp
pop
js
mov
xchg
or
lock
adc
test
arpl
jbe
sbb
inc
lods
std
push
loope
add
test
pop
cmp
jb
pop
in
mov
loope
push
adc
sbb
xor
mov
cmp
das
mov
xchg
lds
daa
xchg
roll
es
ret
push
cmp
mov
dec
mov
mov
cwtl
lds
mov
and
cmpsb
std
jns
insl
in
lahf
clc
sub
insl
sub
jns
dec
mov
lock
or
ret
jg
lods
xor
ret
adc
xchg
pop
fidivrs
cmp
adc
bound
mov
inc
cli
lock
or
stos
mov
repz
cmpsl
sbb
fcmovbe
stos
mov
sub
adc
ret
sbb
xor
ror
lcall
sbb
dec
lcall
insb
setb
xchg
or
cmp
sbb
jns
out
sti
imul
sub
lret
inc
imul
mov
or
jle
cwtl
repz
movsb
push
or
inc
aaa
mov
xchg
in
repnz
and
xchg
ret
leave
les
enter
or
daa
cld
loop
inc
testl
pop
or
mov
scas
and
add
adc
mov
pop
and
fs
pop
push
int3
pusha
jb
enter
add
repnz
fs
adc
adc
fld
mov
jge
xor
push
into
repz
incl
scas
lods
cmp
adc
inc
sub
or
mov
incl
mov
or
push
int
inc
cli
out
int
rcrl
fisttps
jno
ja
es
or
mov
or
je
adcb
mov
dec
sbb
scas
ljmp
fdivl
push
push
insb
bound
mov
or
and
mov
popf
and
mov
repz
popf
jnp
sub
mov
mov
xchg
sub
fstps
sub
andb
stc
xor
cli
imul
iret
inc
or
scas
mov
xchg
pop
popa
xor
push
mov
mov
mov
xchg
inc
push
xchg
outsl
dec
pop
ss
ss
mov
or
push
insl
scas
jecxz
mov
jnp
loop
repnz
filds
into
rorb
sbb
stc
sbb
inc
cmpsb
das
out
adc
inc
cmp
sbb
push
mov
scas
cmp
and
nop
push
fidivs
cli
fcomps
out
ljmp
adc
push
lock
push
and
imul
mov
cmp
sub
adc
mov
cmp
popf
and
xor
dec
push
sbb
mulb
lock
adc
rcll
xlat
push
movsl
bound
shll
adc
stc
jb
movsb
xor
ljmp
pop
dec
mov
jg
jns
sahf
mov
or
or
cmp
fisubs
hlt
mov
sbb
push
outsb
mov
in
jmp
adc
in
stos
leave
loop
icebp
mov
rclb
pop
push
fwait
cmp
jp
iret
mov
lock
mov
incb
mov
cmp
in
je
andl
jle
pop
leave
xchg
cmp
xchg
sbb
iret
lahf
imul
dec
sub
das
ret
jne
aam
push
lret
xor
into
dec
push
shlb
add
decl
bound
or
orl
pop
imul
bound
xlat
je
jnp
xchg
add
in
and
fmull
inc
adc
jno
and
add
lds
and
and
andl
jo
lods
mov
inc
pop
inc
notl
movsl
mov
inc
add
aad
imul
loop
push
push
outsb
adc
xlat
mov
movsl
std
mov
popf
cltd
xlat
icebp
into
adc
xchg
xor
mov
aaa
aas
mov
dec
mov
repnz
lds
inc
aaa
aam
pop
xchg
xor
mov
add
daa
imul
cmp
pop
sbb
int
sbb
jnp
and
cmpsb
addr16
sub
cmp
xchg
rcrl
je
push
scas
dec
jne
fisubs
fs
nop
xchg
mov
sub
or
das
mov
andl
mov
fsts
mov
cmpsl
or
sbb
leave
mov
push
pop
xchg
xchg
data16
jb
adc
imul
jne
inc
sbb
call
sbb
push
imul
adc
rorl
inc
xchg
sub
dec
roll
lcall
or
test
jbe
xor
scas
mov
rolb
cmp
push
cmp
xor
in
repz
js
inc
out
xor
push
xchg
add
adc
pusha
push
inc
mov
mov
mov
jb
pop
adc
pusha
movsb
fs
mov
cs
fdivrl
scas
in
pop
ljmp
jb
jo
push
in
ds
jae
pop
xchg
outsl
dec
lds
int3
rcr
jbe
sti
pop
adc
mov
jmp
xchg
loop
mov
push
jle
cmpsb
fstp
push
mov
int3
je
add
call
cmp
ror
outsb
jno
xor
mov
loopne
push
rcrl
clc
xchg
mov
xchg
lods
rcrb
fisttpl
sub
sub
jb
loop
sbb
jg
arpl
xchg
fstl
mov
subb
cmp
andl
or
pop
push
cmc
xchg
enter
jne
sub
lds
rcr
shl
push
iret
adc
jae
rol
repnz
rol
push
sbb
push
or
mov
dec
pushf
leave
test
mov
mov
ret
push
add
push
dec
insl
movsb
in
rorl
and
adc
push
ret
sbb
out
jae
enter
cli
jb
fs
mov
add
ds
mov
sbb
mov
sbb
dec
outsl
xor
in
test
mov
push
inc
shlb
sub
cmc
xor
sub
jle
call
and
mov
sub
jge
std
ds
test
sahf
jmp
lret
cltd
push
pop
int3
lret
mov
sub
cmpsb
xchg
inc
add
sahf
in
repz
xorl
test
fsub
and
imul
gs
mulb
iret
jmp
xchg
es
shr
mov
add
int
and
es
cmp
in
fisttpl
enter
jne
jbe
cmp
push
lret
xor
pushf
mov
mov
lock
repz
sahf
mov
popa
sub
add
xor
and
sub
cld
push
xor
je
or
push
addr16
out
das
sub
mov
fstpt
test
pop
fdivl
jl
test
lods
inc
dec
insb
fsts
cmc
fildll
and
outsl
add
push
dec
lods
push
cs
sti
addr16
sub
jo
xchg
push
arpl
out
pushf
xlat
int3
jl
and
lcall
and
xor
stos
push
jbe
push
in
stos
sbb
aas
cmc
xchg
xor
scas
cwtl
sbb
in
adc
lcall
inc
movsb
lods
push
dec
in
in
jno
std
cmp
adc
cmp
fldcw
loop
cmc
xor
pop
xor
xchg
int3
scas
sarl
pushl
or
int
mov
and
jns
push
xchg
xor
or
jg
push
inc
popa
mov
cli
jo
call
daa
cltd
mov
sti
enter
fmuls
mov
xchg
rcrl
outsl
lret
xchg
pop
mov
popf
sub
mov
sti
or
in
out
pop
pop
sti
inc
sub
or
fsts
ret
cmp
lea
mov
xor
cmp
sarl
cvtps2pi
or
jecxz
push
xor
adc
mov
loope
mov
pop
push
aaa
fbld
jecxz
js
cmp
sbb
mov
call
xor
in
push
daa
xchg
jp
mov
test
shlb
jns
jp
push
mov
mov
pop
shrl
jmp
pop
mov
fdiv
mov
mov
std
jne
or
mov
addl
sbb
add
dec
mov
mov
jbe
repz
mov
adc
mov
lock
addr16
xor
sub
sbbl
les
stc
sub
pop
push
movsl
xor
cltd
push
imul
cmp
push
fcmovu
jnp
std
mov
mov
fistpl
das
or
test
dec
fmul
addr16
repz
inc
shlb
jno
push
sub
ror
frstor
je
imul
pop
push
dec
or
mov
mov
xchg
outsb
nop
outsl
popa
ret
pop
les
add
sarl
aam
jecxz
adc
or
repnz
mov
mov
rcrl
hlt
mov
sub
jbe
mov
pushl
mov
mov
mov
jecxz
xchg
mov
inc
sub
fisubrs
pusha
jecxz
movsl
popf
adcb
mov
movsb
cltd
and
sub
or
jmp
inc
jae
cli
test
jns
cmp
xorl
jbe
xchg
or
cmp
cwtl
and
arpl
dec
jno
mov
push
lret
pop
cmpsl
fsubs
fisubs
aam
dec
out
mov
pop
shlb
out
imul
push
aaa
gs
sub
notb
mov
dec
jnp
icebp
add
clc
mov
sub
push
addb
adc
cmp
sub
jno
imull
cmpsb
sbb
dec
fbld
add
sbb
lcall
in
mov
pop
jne
inc
mov
push
cmpsw
movsb
push
notl
int3
cwtl
subb
ds
ret
mull
lcall
cmc
lods
inc
ljmp
hlt
gs
push
pop
and
cmc
cmp
push
outsb
jb
mov
push
cmc
stc
in
xchg
mov
das
ret
imul
out
mov
lret
fidivl
cmp
jns
mov
rcrl
cmc
dec
mov
push
aad
lods
test
jecxz
pop
pop
loop
push
adcb
mov
addr16
mov
sbb
insb
add
or
movsl
sub
enter
dec
aas
cmp
cmp
jg
sub
rcrb
fwait
and
push
lcall
pop
mov
cmp
or
lock
sub
and
dec
mov
jge
dec
je
fxch
jmp
push
fimull
xor
data16
mov
stc
nop
test
cmp
out
sub
xchg
pusha
lods
dec
arpl
sbb
in
pop
push
scas
inc
jle
sbb
std
test
push
fmulp
sub
cltd
test
nop
sti
sbb
or
xor
iret
movl
outsl
mov
enter
cmp
iret
xor
les
mov
ret
mov
inc
aad
repnz
adc
xchg
in
loope
daa
lods
sub
sub
cmc
inc
stos
shlw
mov
out
mov
orb
lret
mov
xchg
sub
mov
in
in
in
cld
inc
add
inc
push
adc
test
les
mov
outsb
adc
mov
dec
mov
mov
test
cmp
xor
sub
mov
aas
sbb
sbb
dec
xor
jne
dec
mov
leave
inc
imul
push
mul
flds
jp
aaa
sbb
jbe
push
pop
nop
aad
subl
test
div
xchg
bound
loope
pop
push
pop
out
xor
stos
fcmovb
mov
cltd
leave
mov
cmp
outsl
add
sub
js
divl
inc
jg
xchg
mov
ror
xor
mov
fiaddl
or
aad
aad
push
add
add
jg
scas
cmp
sub
shll
push
inc
jle
jle
push
sbb
ds
mov
lahf
adc
rcr
push
push
lret
ljmp
out
fists
in
scas
cmpsl
sbb
pop
clc
xchg
clc
nop
push
inc
pop
cmc
jnp
aaa
and
movsl
xchg
pop
pop
sbb
out
lret
fnstcw
insb
adc
sub
mov
or
call
cmpb
cmpb
cld
rolb
jno
cmpb
test
xchg
andl
outsl
cmp
sub
les
repz
sbb
adc
ret
jge
mov
xchg
add
mov
xor
out
or
std
into
xorl
insb
repz
enter
ss
jae
outsl
and
pusha
lds
movsb
jl
sbb
xlat
out
push
mov
cmpsb
cmpsb
dec
jnp
rolb
pusha
fildl
push
pop
jmp
popf
daa
aaa
sub
fstpt
cmc
int
adc
cmpsb
dec
cmpsb
adc
outsl
jbe
jns
sbb
fstpl
push
push
and
mov
add
pop
sub
outsl
loope
and
xchg
es
and
outsl
test
les
xchg
fadds
popf
ds
inc
or
mov
xor
xor
cmp
int3
mov
lahf
cld
jl
je
gs
out
sbb
xor
fildll
push
mov
push
push
push
scas
pop
add
pop
inc
loopne
add
sbb
decl
les
sub
add
sbb
sbb
ror
mov
pop
movsl
les
jle
dec
sbb
sbb
rorw
sub
les
push
fsts
fisubrs
jo
mov
dec
pop
mov
insl
jmp
into
popl
in
fs
neg
decl
mov
sbb
jns
subb
sbb
or
jo
cmp
sub
cld
mov
add
push
cmp
mov
mov
dec
mov
push
sub
aas
and
das
push
inc
sub
jns
lods
mov
mov
aas
jne
or
in
inc
sbb
adc
sub
ret
stos
inc
mov
je
cli
test
adc
xor
stos
fstps
popa
scas
push
mov
mov
push
pop
scas
cs
or
test
and
sbb
ds
cmpsl
sbb
mov
ljmp
xchg
cmp
jmp
int3
push
xor
xor
mov
push
cld
sbb
clc
testb
fs
dec
push
cmp
bound
fiadds
sub
inc
lret
dec
cmpsb
sahf
repz
mov
xor
jns
push
aam
xchg
sub
xor
test
sub
jb
addr16
sub
fs
repz
out
mov
sbb
xchg
nop
sahf
in
jge
lahf
arpl
outsb
lds
mov
sub
adc
cmpsb
out
repnz
cmp
cmpsb
adc
mov
dec
int3
dec
and
gs
xchg
pop
sub
je
jp
in
sbb
adc
jecxz
jnp
sti
pusha
mov
sti
xchg
dec
ret
std
cltd
add
lds
outsb
xchg
lods
sbb
fs
mov
jnp
jmp
movsl
cmpsb
xchg
jle
mov
scas
adc
aam
stos
jo,pn
jb
adc
cmpsb
sub
pushf
ds
jge
push
andb
fsubrl
inc
mov
mov
cmp
jecxz
insl
sbb
dec
ret
aad
adc
dec
xor
daa
push
fld
xchg
pusha
fwait
es
data16
dec
stos
mov
add
push
sub
scas
mov
xor
filds
std
in
test
jns
pop
xor
push
rcr
movsb
fcomps
mov
es
push
std
push
cmpb
addr16
mov
inc
data16
hlt
mov
push
xchg
xor
cwtl
out
dec
mov
test
sub
dec
pop
aas
inc
lret
movsb
shr
or
test
loopne
push
jg
adc
pop
mov
icebp
mov
imul
sub
sub
sahf
lds
mov
cmp
aad
outsb
cmp
mov
mov
sub
dec
js
pop
or
insb
aam
inc
sub
xor
sti
mov
inc
dec
lock
jo
cmp
or
inc
call
gs
mov
lret
sub
notb
dec
pop
int3
jge
or
inc
cmp
loop
dec
cltd
shl
cwtl
int3
ficomps
pop
cmpsl
xchg
push
aad
sbb
adc
loop
xor
jns
cmp
xor
fcom
cmpsb
out
add
hlt
xchg
pop
insl
cli
jns
sbb
insl
xor
push
aaa
fwait
add
or
mov
sarb
fldl
arpl
sbb
rcrb
je
movsb
sub
mov
jno
mov
ja
pop
out
dec
out
xchg
out
shlb
repz
test
mov
inc
insb
imul
add
cld
push
jno
inc
dec
negl
addr16
imul
mov
inc
mov
mov
decl
fbld
push
gs
add
int
leave
insl
les
xchg
ja
mov
cmp
fstl
mov
xor
outsl
test
sahf
xor
imul
adc
mov
fisttpl
inc
mov
add
pop
push
add
hlt
cmp
aad
mov
enter
and
adc
jb
xor
stos
mov
xor
mov
add
inc
pushf
cld
lahf
xorl
pop
mov
cmp
fbstp
je
lretw
dec
pop
lock
outsl
in
cmp
in
adc
sub
negb
hlt
imul
aad
dec
fwait
adc
push
repz
cmp
movsl
xor
cld
inc
lcall
sub
or
mov
out
pop
pop
add
mov
mov
sbb
insb
xchg
jl
out
scas
xor
mov
pop
pop
xchg
cmp
push
std
fcoms
mov
decl
push
in
inc
enter
jns
loope
cltd
shll
rorl
mov
js
rcl
shlb
sahf
jp
divb
lahf
push
push
sbb
adc
add
clc
aas
jmp
sbb
sub
out
nop
faddp
ret
fdivrs
jle
lea
xorb
lock
ds
adc
mov
stos
sub
and
les
sarb
inc
and
sti
jns
push
es
pop
lea
push
sub
mov
in
fldt
push
adc
fldl2t
enter
ret
sti
add
aas
jge
sbb
xor
add
jmp
fimuls
push
cmp
popf
popa
loopne
sbb
lods
jo
mov
pop
shll
add
dec
jne
iret
pop
icebp
inc
cld
ds
cmp
push
mov
xchg
imul
add
ret
xchg
jo
jo
xlat
xchg
ret
inc
dec
not
add
in
xchg
dec
test
gs
mov
repz
adc
scas
adc
test
mov
imul
or
inc
pop
cmp
cmp
inc
movups
sbbl
shrb
mov
mov
incl
cmp
nop
mov
clc
insl
out
mov
sbb
adc
cmpsl
push
fsubs
mov
mov
jp
enter
rorl
xor
push
daa
pop
push
insb
je,pt
les
inc
icebp
lret
and
push
xor
jae
shll
and
mov
xchg
in
push
add
pop
inc
fcoml
fcmove
lods
rcrb
mov
imull
pop
xlat
push
in
sub
test
add
jl
sahf
ja
cwtl
movsl
xor
mov
or
enter
cwtl
sub
mov
jbe
dec
xchg
mov
jbe
mov
int
adc
into
es
adc
sub
pop
lea
test
dec
cmp
aas
stc
sub
loop
push
mov
dec
loope
fdivrl
add
out
push
xchg
xlat
aas
sub
push
out
sbb
jno
lea
sbb
fst
dec
xor
testl
neg
push
mul
js
fldcw
cwtl
test
adc
pusha
sbb
lahf
sahf
sbbb
lcall
dec
gs
out
jbe
xchg
mov
ret
xorb
and
lods
cmp
fistpl
inc
mov
stos
pop
push
jbe
xchg
inc
or
sarl
cltd
out
popa
mov
mov
push
sahf
out
cmp
add
adcb
mov
lahf
inc
pop
xchg
xchg
inc
mov
jecxz
stos
jae
inc
cmp
adc
addr16
cli
insb
sub
out
cmp
mov
shlb
clc
cld
xchg
je
test
sbb
inc
lcall
mov
ds
test
push
push
cwtl
shl
test
std
xlat
ds
lock
bound
test
das
push
inc
pop
xchg
fidivrl
pop
or
cs
insl
and
xor
sub
daa
cwtl
inc
rcrl
mov
jmp
and
int
inc
mov
jmp
fsts
sbb
cmp
je
inc
inc
fidivs
push
mov
in
cmp
repnz
push
fdivrl
and
pop
xor
push
sbb
dec
outsb
xor
cli
insb
adc
das
pop
xor
iret
clc
outsl
call
xor
dec
jne
loope
mul
ds
cwtl
cs
idiv
icebp
pop
rcll
xor
paddb
into
xorl
popf
aas
test
or
inc
ja
mov
pop
shlb
pushf
cmp
xchg
imul
insl
shl
cli
mov
adc
inc
cli
adc
js
icebp
rorb
pop
mov
cwtl
pop
and
mov
cmp
pop
add
xor
or
outsb
xor
jo
push
mov
xchg
jb
push
test
out
sbb
aaa
icebp
faddl
sbb
sub
sbb
xchg
cmpb
dec
iret
scas
push
or
ljmp
jge
push
inc
xor
pop
stos
mov
cmpsl
jl
popf
cli
inc
mov
addl
sub
movsb
cld
mov
inc
push
xorb
inc
icebp
lds
nop
fisttpll
or
insl
xchg
addl
jns
sub
idivl
lock
and
fisttpll
insb
cmp
xchg
adc
cmpsb
dec
adc
push
lock
clc
adc
cmpsb
cmovge
out
sar
jno
inc
push
cmpsl
outsb
fdivr
iret
popa
cwtl
add
out
mov
out
leave
xor
insb
pop
sbb
cmp
and
adc
pop
jmp
ret
fists
inc
je
ja
inc
sbb
add
and
inc
pop
scas
sbb
inc
adc
xor
mov
adcl
mov
cmp
sub
test
xor
adc
ja
push
push
lret
push
std
add
adc
sub
repnz
mov
sbb
xchg
mov
popf
jbe
push
test
fwait
dec
out
or
mov
add
fmulp
popf
xor
dec
add
sbb
or
and
and
add
jb
or
inc
jmp
sbb
push
and
jg
mov
or
dec
cmpsb
add
scas
cmpsb
les
ret
xor
mov
pop
cmpsb
test
inc
jnp
rol
out
push
sbb
mov
xlat
mov
xchg
cmp
xor
mov
in
mov
or
dec
or
cmp
scas
sub
or
insb
test
or
jno
in
btr
daa
inc
add
fdivl
jg
xorl
sbb
aas
dec
scas
rcrl
or
mov
pop
sub
adc
fcomps
push
or
or
mov
out
in
jge
lock
cmp
lods
jnp
sbb
insb
cmp
jns
dec
xchg
cs
inc
dec
sbb
adc
rol
rcrl
sbb
sbb
pop
outsb
movsl
and
repnz
sub
aad
in
push
push
cmp
push
ret
adc
addr16
jge
jns
into
and
jae
push
ja
lret
mov
jno
push
adc
cwtl
imul
push
fwait
adc
dec
inc
mov
loope
sub
push
gs
test
cmc
test
test
ss
loop
push
daa
inc
jp
popf
not
mov
sbb
adc
sahf
insb
push
cmp
cld
out
sub
inc
faddl
or
rcrb
test
cmpb
mov
add
jb
mov
loopne
ljmp
clc
push
jg
adc
inc
in
and
mov
mov
cmp
aam
or
fdivrl
push
pushf
jl
nop
sub
dec
push
cmpsb
push
ret
daa
jbe
aas
or
push
mov
push
ret
cltd
into
aaa
jb
jns
mov
jns
xor
rcl
mov
adc
in
orl
dec
daa
mov
loop
jo
push
sbbb
jo
dec
insl
add
loopne
fisttpll
push
sbb
outsl
pop
sub
push
fisubrl
jno
cld
xor
xchg
push
pop
cwtl
cmc
mov
lds
mov
mov
mov
push
lea
sbb
xor
test
add
fsub
lret
rcll
or
fcomps
push
cmc
dec
pop
mov
sub
loope
call
insl
dec
vmwrite
les
test
sarl
lcall
xor
lret
pop
sbb
stc
jg
arpl
or
js
mov
inc
jg
fdiv
jnp
aas
jnp
sbb
pusha
lods
clc
lds
int
push
mov
movsb
sub
jmp
into
std
je
mov
addr16
lahf
shll
push
jl
ljmp
pop
jb
lret
inc
inc
lahf
fiaddl
shlb
mov
fcomps
int
inc
jno
cmp
push
xchg
decb
pop
repnz
mov
dec
xchg
repz
push
jp
ror
jmp
jecxz
lods
es
dec
int3
jnp
mov
in
mov
lock
sbb
aaa
mov
xlat
lods
jmp
push
xchg
cli
fistl
add
dec
adc
std
push
sub
sbb
outsb
cs
imul
adc
lock
mov
shrl
jnp
sbb
xor
adc
jae
pop
xor
push
subb
push
inc
int
or
icebp
xchg
test
arpl
fwait
loope
or
or
popa
inc
push
sbb
jae
adcl
popf
add
mov
hlt
aam
mov
sbb
sti
sar
cmp
call
lds
add
push
pop
cmp
imul
xchg
mov
xor
sar
int3
popa
shlb
and
not
rclb
cmp
stos
ret
loopne
dec
or
pushl
add
dec
fwait
add
mov
inc
sbb
pop
cmp
jmp
push
and
cmpsb
out
aas
and
push
in
and
pop
test
jnp
push
xchg
inc
rcll
xchg
push
cmp
dec
mov
or
test
jmp
cmp
sahf
push
arpl
xor
inc
stos
cwtl
mov
dec
lock
in
pusha
cld
imul
lock
adc
pop
data16
gs
lret
mov
ss
sbb
lods
add
in
add
sub
mov
inc
push
insb
jno
jne
xchg
decl
stos
rcr
out
inc
mov
mov
pushf
out
lret
rcrb
and
xor
decl
mov
mov
xchg
aaa
jae
icebp
sbb
nop
cmp
or
sbb
push
aaa
xor
hlt
pop
ret
in
stos
mov
push
ja
dec
mov
inc
insl
jbe
or
sahf
aam
hlt
xchg
fiaddl
insl
dec
popf
sbb
dec
ds
pop
push
dec
ja
fldcw
in
sub
or
gs
mov
add
hlt
mov
call
push
adc
je
addr16
add
scas
rolb
mov
pusha
test
out
test
inc
inc
ss
testb
mov
int3
mov
divb
and
adc
je
incl
cmpsl
rorb
cltd
mov
xchg
sub
jo
sbb
rcrb
push
push
hlt
jae
inc
ja
xchg
jg
xchg
fdiv
jae
mov
push
test
jp
test
xor
push
sti
popf
in
mov
xchg
std
add
and
mov
jno
bound
dec
xor
dec
cltd
mov
mov
pop
aam
cld
mov
xchg
out
movsb
fcompl
sbb
and
add
cwtl
in
shrb
and
vmread
push
out
test
das
sbb
push
insb
mov
sbb
sub
fcomi
dec
fidivs
mov
sub
inc
or
es
jmp
mov
mov
mov
arpl
sub
fwait
shr
sub
data16
xchg
and
push
mov
inc
add
addb
dec
mov
out
add
add
xor
cmp
push
jbe
popa
or
mov
in
cltd
sbb
or
or
pop
cmp
or
int3
int
sub
push
in
inc
inc
jnp
shrl
fdivs
insl
mov
jbe
pop
dec
push
pushf
xchg
cli
push
out
add
lds
test
ret
cltd
sbb
sbb
sahf
mov
in
scas
les
xor
addr16
xor
scas
mov
push
icebp
aam
inc
mov
mov
and
dec
xchg
pop
pushf
ficompl
lret
xchg
sti
mov
push
fldcw
jl
enter
mov
cmp
lahf
mov
jnp
lcall
incb
lock
push
pop
test
mov
subl
pop
std
int3
or
cltd
xor
cli
or
xchg
mov
cmp
jne
xchg
add
into
inc
shl
rorl
dec
or
cmc
pop
dec
int3
mov
in
mov
stos
in
pop
mov
sar
push
push
imul
loope
out
dec
dec
arpl
mov
inc
cmpsb
das
roll
out
xor
sub
arpl
stos
fwait
inc
xchg
add
add
movsb
imul
xchg
test
or
adc
les
dec
xchg
pop
push
xor
xor
in
in
sub
popf
push
adc
and
xchg
aas
mov
xchg
iret
repz
inc
sarb
outsl
enter
cmp
std
ret
or
push
mov
mov
aaa
cs
movsl
push
sub
xor
sti
adc
incb
sub
mov
stos
or
mov
lea
xchg
call
stc
sub
test
movsb
mov
xor
sbb
hlt
mov
dec
cmp
scas
mov
mov
mov
xchg
lret
movsb
xor
add
mov
jge
jnp
lds
frstor
sti
orl
arpl
les
stos
int
mov
inc
jo
xor
sub
out
ljmp
sbb
pop
sbb
xchg
lods
movsb
lahf
lea
xchg
mov
lea
pop
sti
iret
dec
push
notl
jge
scas
dec
cmpsl
pop
popa
lods
inc
jae
push
hlt
adc
in
in
shll
in
leave
push
xor
xlat
test
xor
movsb
mov
mov
ret
mov
pop
pushf
xchg
mov
xor
jnp
or
lods
fsts
sbb
cmpsl
dec
shrb
bnd
mov
cs
pop
lcall
inc
decl
push
push
xlat
sahf
jmp
mov
xlat
mov
loope
popa
jle
test
sub
xor
pop
ss
nop
or
lahf
mov
insb
icebp
enter
xor
or
imul
lods
xchg
push
adc
les
loop
and
mov
scas
loope
or
pushf
test
imul
sti
and
xchg
dec
cs
insl
dec
mov
mov
psllq
arpl
dec
daa
stos
adc
push
adc
aam
fsts
pop
push
cmp
out
sub
push
or
bound
mov
jp
push
repz
ret
dec
aaa
sti
ljmp
jg
or
lahf
pop
arpl
and
cmpsl
add
in
xchg
fisttps
aad
shrb
pop
inc
cmpsl
xchg
int
jne
mov
and
jl
lds
mov
es
dec
pop
fwait
mov
cmp
push
es
imul
add
dec
mov
push
stos
call
dec
dec
cmp
inc
jae
adc
xchg
cmc
pop
lret
inc
leave
and
fwait
lock
cmp
push
adc
mov
or
mov
jecxz
cmp
sub
pop
sahf
pop
movsl
sbb
mov
push
inc
out
xchg
call
std
pop
inc
inc
xchg
mov
xor
or
lock
push
push
gs
push
xchg
mov
mov
lods
arpl
stc
inc
and
int3
sbb
int
xor
fcoms
and
ja
push
mov
fs
pop
mov
mov
ret
mov
jo
movsl
and
adc
mov
test
jg
adc
xor
sbb
sarl
mov
mov
repnz
cmpsl
inc
call
lret
xchg
outsb
push
adc
xlat
rorl
xor
shll
inc
repz
psubsw
and
fldl
xcrypt-ofb
cmpsl
push
call
pop
jne
inc
jge
insb
push
mov
pop
mov
ss
or
sub
sti
inc
fdivl
cmp
mov
ret
jae
xor
and
test
push
push
lods
ss
lret
adc
test
rorb
stos
mov
ret
inc
jge
dec
push
xor
aas
lods
pop
xchg
dec
scas
scas
jl
into
jg
cmp
jmp
jb
iret
jl
sub
ret
rcrl
shl
test
or
xor
push
aam
lret
in
inc
lcall
fstps
xchg
mov
sti
rorb
daa
add
pop
adc
scas
aad
jbe
sub
and
and
xor
jnp
call
popf
xchg
jbe
in
clc
and
ja
mov
mov
insl
icebp
stos
loopne,pn
arpl
sarb
in
pusha
sbb
jle
mov
repnz
xchg
inc
mov
not
push
cmpsb
es
stos
fistpll
adc
call
comiss
dec
push
cmp
jle
or
maskmovq
negl
jge
xor
addr16
ljmp
testl
imul
xchg
mov
test
cmp
fcom
sub
pushf
cli
shlb
dec
adcb
jbe
out
add
scas
scas
xchg
cld
lret
aam
aas
stc
fs
std
inc
mov
call
mov
and
stos
leave
dec
push
mov
pop
imul
mov
stc
das
adc
and
cld
xchg
sub
push
es
or
push
fwait
out
pop
idivb
push
repnz
xor
push
dec
add
mov
jne
push
or
repz
adc
sarl
push
in
loop
mov
lock
jae
loope
in
or
popa
add
call
mov
add
icebp
mov
cmp
mov
jp
jnp
mov
cmp
sub
xorb
enter
std
cmp
sub
sbb
fucomi
cmpsl
adc
pop
enter
push
adc
mov
div
xchg
jo
ds
xor
adc
pop
lods
lcall
movsb
insl
sbb
and
insl
pop
or
or
dec
movsl
out
mov
shll
stc
popf
cmpsl
cltd
arpl
jae
les
insl
addb
sub
dec
push
inc
mov
mov
outsl
mov
xor
jno
data16
dec
cmp
test
in
add
sub
lret
mov
dec
dec
jp
push
xor
and
out
dec
das
das
dec
jae
jle
icebp
mov
shl
add
lret
mov
clc
mov
in
cwtl
mov
adcl
lret
push
push
cmp
adc
mov
add
cmpsb
xor
js
loope
je
imul
addr16
cwtl
stos
mov
jle
testb
jp
xlat
in
std
lods
jo
adc
cmc
inc
ds
pop
adc
mov
and
sti
repz
pop
dec
pop
sar
xor
shll
aad
icebp
or
outsb
xchg
sbb
add
ror
stos
xchg
outsl
pop
inc
push
cmp
js
insb
jae
or
ret
mov
mov
mov
jae
scas
movsl
inc
dec
xchg
add
add
rorb
pusha
cltd
or
fnstsw
add
and
fnstenv
mov
dec
mov
mov
push
nop
or
imul
mov
pop
cld
hlt
mov
inc
lea
xchg
or
sub
mov
xor
movsl
inc
filds
mov
add
adc
pop
push
lcall
das
cmp
mov
sub
fsubrp
or
cs
dec
pusha
cwtl
xor
jg
jne
xchg
les
stc
add
imul
inc
push
cld
push
mov
cmp
fistps
mov
xor
cwtl
xor
push
ljmp
xor
outsl
lahf
or
jecxz
es
mov
test
ljmp
mov
cmpsl
dec
lods
imul
addr16
cwtl
jo
adc
push
sarl
sbb
outsl
push
sbb
jg
scas
sti
mov
inc
ja
mov
mov
fcomi
mov
mov
call
in
sbb
bound
and
xor
add
cmc
pushf
push
movl
push
jecxz
sbb
imull
dec
pop
gs
cmp
aad
and
inc
iret
aaa
push
cmc
insb
notl
gs
mov
cltd
pop
xchg
jl
adc
gs
cltd
lcall
ss
stos
cld
je
in
sbb
add
pop
pop
das
mov
dec
mov
mov
in
outsl
pop
int3
xor
mov
icebp
sahf
mov
xchg
dec
push
lretw
mov
inc
adc
dec
mov
push
and
push
es
sbb
jae
add
mov
cmp
push
loopne
adc
pop
mov
cli
lcall
add
cwtl
ficompl
jo
lods
js
mov
jle
nop
pushf
jge
mov
sbb
dec
movsl
rcr
repz
sub
jnp
add
ss
repz
pusha
repz
lcall
aad
push
add
pop
pop
into
sahf
stc
icebp
jbe
clc
cltd
push
push
jne
shl
daa
mov
enter
loopnew
xlat
mov
add
mov
movsl
add
movsb
sub
pop
jbe
pop
outsb
mov
and
inc
cmp
jle
stos
pop
test
int
nop
addr16
out
mov
lock
xchg
push
out
loope
out
pop
js
lods
stc
sub
in
in
mov
mov
pop
add
mov
mov
mov
ret
inc
loop
sub
adc
xor
icebp
loope
add
aas
data16
ret
dec
mov
int3
pop
push
popf
outsb
mov
pusha
sbb
lods
int3
ja
xchg
shl
nop
push
jecxz
jns
lcall
jmp
sub
loop
lea
call
mov
fsubl
cli
fs
cmp
and
aaa
push
jg
and
enter
iret
xlat
cmp
aas
add
lods
xchg
outsb
into
mov
add
inc
jo
addr16
dec
xchg
jnp
idivl
push
sbb
fcompl
test
outsl
movsb
add
mov
movsl
cmc
adc
mov
mov
mov
jle
hlt
adc
out
cmp
jne
mov
fisubrl
std
sub
xchg
cmp
xlat
dec
andb
insl
mov
js
cmp
sub
dec
push
xor
add
inc
ljmp
mov
jmp
cmp
stos
add
icebp
sub
movsl
cld
xlat
adc
arpl
cmp
fcmove
pop
add
pop
aam
mov
xchg
outsl
xchg
inc
lcall
add
jno
nop
arpl
in
adc
sbb
or
sbb
or
dec
cmc
mov
stos
aas
in
cmp
and
lahf
andb
test
add
or
sub
mov
add
movsb
pop
and
pop
mov
jecxz
popa
inc
cmp
test
inc
mulb
out
push
cltd
cmp
mov
jge
outsl
jl
jle
lcall
adc
dec
outsb
push
adc
inc
cmp
xchg
out
mov
mov
sbb
cmp
push
pop
dec
lods
xlat
lock
or
icebp
lcall
sub
mov
jbe
xor
gs
push
or
mov
lods
xlat
ss
push
out
decl
mov
push
mov
adc
jns
in
add
rcrl
or
xchg
jb
int
iret
ret
mov
sbb
mov
or
and
xor
or
cld
xor
mov
repnz
push
int3
mov
mov
push
mov
sbb
cmp
ret
data16
push
dec
lcall
mov
cmpb
cmpsl
or
jne
adc
mov
popf
icebp
dec
fisubl
fcos
mov
pushf
sub
cwtl
sarl
pusha
imul
add
aas
xchg
jno
cwtl
lods
cwtl
and
out
test
int
pop
jmp
hlt
push
cs
pop
ret
test
xchg
stos
repz
loop
or
arpl
test
lock
push
mov
ret
es
sarl
mov
sbb
ret
add
mov
adc
sbb
fcomps
repnz
aas
in
adc
iret
enter
in
cmc
js
sbb
push
inc
xor
sbb
in
in
sub
push
lahf
test
xchg
negl
jne
int
cmovg
test
scas
adc
or
lock
in
loop
jae
orl
mov
mov
inc
pusha
stos
stc
lcall
inc
mov
jg
hlt
imul
daa
loopne
nop
int3
push
dec
pop
in
push
insl
sbb
fiaddl
add
imul
push
hlt
push
and
xchg
mov
pop
ds
push
in
cmpsl
cmc
adc
push
lock
lahf
cwtl
cwtl
nop
aam
xchg
sbb
sub
xor
fwait
lret
int
mov
inc
ja
cmpsl
sbb
aam
cmpsb
lds
int
scas
fdivrs
ljmp
out
out
and
rcl
sub
add
mov
adc
mov
mov
movsl
cmpsl
cmpsl
sbb
lods
adc
mov
cmpsb
mov
out
inc
mov
pop
call
cmpl
fisubl
inc
insb
repnz
xor
dec
cmp
lret
mov
test
mov
fisubl
push
ljmp
pop
mov
cmc
mov
sbbl
xchg
out
xor
test
jle
cmp
insb
and
cld
insl
push
dec
lds
mov
fidivs
icebp
test
cmp
aaa
movsl
aam
jmp
pop
pop
es
cmp
sbb
sbb
addr16
cmp
mov
les
push
and
push
add
add
fsubr
fldl
dec
sub
dec
ret
or
dec
sbb
rorl
xor
mov
adc
ljmp
ret
add
adc
xchg
fwait
push
pop
mov
cli
mov
outsb
idivl
jmp
mov
ja
clc
xor
lea
pop
test
inc
dec
scas
push
lahf
add
mov
xchg
sbb
insb
int3
inc
cmpsb
sub
jp
mov
or
pop
lahf
mov
into
test
inc
pop
sbb
mov
xchg
xchg
pop
push
push
push
xchg
jns
addl
ret
mov
rcll
mov
movsb
adc
lret
movsb
xlat
sub
shlb
or
jge
xor
pop
xor
fadds
test
mov
cwtl
sbb
fdivl
jmp
pop
sub
pop
or
js
out
aad
xor
and
inc
mov
shlb
dec
xor
sahf
into
jmp
out
rol
loope
imull
jne
xor
gs
adc
mov
inc
push
jmp
xchg
push
pop
movsl
adc
imul
fcmove
push
rorb
cli
sub
js
leave
or
ret
iret
push
fs
inc
icebp
xor
fwait
std
add
jbe
and
test
hlt
loop
adc
shlb
mov
fstps
push
jecxz
and
and
xchg
adc
mov
das
ja
jle
or
push
dec
inc
test
inc
scas
sbb
fnstsw
out
ss
adc
mov
stc
inc
mov
mov
inc
fisubl
pop
cli
mov
shlb
sub
shrl
xor
and
fs
nop
cmp
or
xor
add
int3
pop
aaa
divb
mov
stc
sub
das
mov
stos
shlb
and
add
leave
xchg
lret
xorl
xor
push
fcmovnbe
cmp
sahf
add
mov
jmp
daa
sarl
adc
dec
jno
mov
test
cmp
aaa
aam
les
fs
sbb
jmp
xor
pushf
cltd
inc
add
lds
into
mov
test
push
jnp
push
imul
aam
sbb
mov
lret
stos
daa
pop
add
iret
es
sar
icebp
pop
adc
adc
stc
mov
in
xor
scas
add
ds
pop
adc
push
jnp
dec
std
push
shll
sub
xchg
lock
xlat
mov
cmp
rcrb
outsb
push
stos
or
push
mov
jl
push
lods
sub
loope
retw
js
repnz
bound
mov
stos
push
testb
add
movsb
jp
or
xchg
sahf
mov
inc
repnz
jge
cmp
out
fists
int3
lahf
xchg
and
lea
dec
inc
cs
add
adc
xchg
xorb
sbb
test
xchg
jb
ss
lcall
imul
jg
lahf
dec
adc
mov
dec
ret
inc
outsl
jmp
cmpsb
or
mov
hlt
mov
lret
js
insl
jne
xchg
inc
pop
mov
mov
clc
adcb
dec
addl
sub
sbb
xchg
xchg
jns
xlat
inc
sub
fdivrp
fistps
out
jno
imulb
cmpsl
push
fcomi
daa
and
scas
push
mov
sub
lret
or
stos
mov
fldt
out
push
iret
or
insl
adc
mov
cmp
shll
mov
cmp
xlat
fsubrl
orb
les
sbb
lcall
movsb
addb
or
jne
cmc
adcb
enter
repz
mov
push
cwtl
sbb
lea
cld
or
in
ljmp
xlat
test
in
jb
les
pop
dec
xor
sarl
jmp
xchg
out
cmp
inc
push
out
and
mov
pop
xor
jecxz
sub
jb
inc
rclb
js
sbb
pop
mov
jmp
outsl
push
pop
dec
cld
call
mov
inc
rol
dec
das
cmp
pop
popf
dec
push
aam
mov
repz
sbb
popf
fsubs
mov
or
push
adc
fsub
rol
enter
and
lds
pop
lods
repnz
flds
sbb
xor
dec
jnp
dec
jae,pt
les
mov
cmpsl
mov
fdivl
push
pop
inc
les
je
out
rolb
jp
xchg
ret
sub
insl
mov
loopew
loope
mov
pmaxsw
jbe
pop
loopne
xlat
aaa
sahf
data16
dec
cltd
push
test
mov
mov
sub
bound
or
mov
or
add
out
paddw
mov
sbb
fwait
ds
mov
stc
into
in
push
sahf
cmp
dec
insl
mov
or
xchg
fcomps
pop
push
push
inc
hlt
pop
add
js
cmp
iret
jae
roll
xchg
fadd
jns
xchg
stos
push
push
inc
xchg
shr
notb
pop
rcr
inc
xor
mov
sarb
mov
or
mov
cmp
sbb
push
sahf
ret
out
popf
sti
in
cmp
out
sub
daa
rorb
jbe
fwait
mov
ret
fstpt
cltd
xchg
test
xlat
movsl
pushf
add
pusha
ds
cmp
inc
mov
stc
int
inc
dec
out
cld
lea
add
stc
fisubl
or
cmp
xchg
movsl
adc
andb
push
adc
xor
and
push
mov
sbb
or
into
bound
fisubl
dec
cmpsl
ljmp
xchg
inc
into
fsubl
hlt
cmp
sbb
pusha
out
or
mov
test
push
dec
int
xor
mov
andb
jmp
test
cld
cmp
lds
nop
out
iret
call
leave
fwait
push
mov
mov
pop
lahf
mov
and
adc
mov
add
nop
into
repz
mov
inc
dec
testb
jo
push
inc
out
popf
rcll
mov
add
aad
mov
sti
adc
mov
adc
mov
inc
jle
mov
push
mov
cmp
out
scas
mov
inc
int3
repnz
fmuls
clc
or
mov
push
arpl
popf
scas
mov
fisttpll
xor
popa
pop
cmp
adc
add
cwtl
idivl
and
movsb
xor
jecxz
sbb
mov
in
outsb
lds
push
inc
mov
call
xchg
cmp
into
ja
es
mov
xchg
cmc
pop
cmp
cmp
aad
mov
aam
in
sahf
xchg
and
pushf
push
nop
add
in
and
leave
adc
sub
lods
lret
mov
hlt
sbb
or
shrl
ret
scas
adc
add
icebp
imul
into
xchg
xor
sub
cmp
in
ret
in
push
jmp
pusha
loop
and
push
lahf
xor
or
icebp
jne
jo
jns
or
cmp
dec
les
aad
ffreep
mov
ret
ds
lret
xor
pop
or
data16
jle
add
adc
negb
mov
pop
jp
ret
push
cmp
xor
pushf
jp
mov
repz
dec
ret
sahf
xor
pop
adc
jnp
xchg
out
xchg
divb
outsl
out
clc
lret
pop
add
and
ret
xlat
inc
and
repz
cmp
and
iret
fidivs
lea
jo
sub
shll
adc
subl
fldt
lahf
mov
stc
in
repz
loopne
inc
enter
jae
addl
add
jp
sub
xorl
mov
mov
lock
sub
jne
pop
gs
gs
jl
mov
jo
notl
sub
out
movsb
hlt
mov
pop
push
pop
dec
in
xor
insb
or
push
adc
inc
ds
inc
int
pop
ret
ds
jle
mov
xchg
jne
fdivrs
enter
fisttpll
enter
es
jo
jbe
stos
cmpsl
aas
inc
sub
aas
jo
push
inc
pop
jl
jns
jmp
ffreep
cmp
ljmp
mov
xchg
inc
fcmovbe
adc
xchg
mull
mov
fbld
sub
lret
pop
xchg
mov
xchg
lret
dec
nop
cwtl
mov
mov
out
icebp
or
pop
aaa
mov
idivb
testl
xor
rolb
pop
and
in
fiaddl
in
sbb
sbb
mov
xorl
pop
popa
pop
jbe
xchg
fstl
out
dec
sbb
pushf
aas
icebp
jmp
xor
mov
xchg
orl
jo
insb
mov
es
fmuls
xor
pusha
test
add
jl
dec
jp
addr16
cmp
jle
out
sti
imul
add
push
inc
mov
popa
call
jle
mov
xor
cmp
mov
xchg
adc
xchg
test
or
cld
shlb
xorl
mov
xor
test
pop
ds
popa
dec
cmp
scas
pop
adc
mov
fdivl
popf
xlat
std
decl
adc
push
aas
outsb
fimuls
or
jb
in
jl
sbb
add
mov
lret
fldt
xor
fcmovu
stos
jb
loope
mov
dec
mov
sub
mov
shlb
or
cmp
loop
add
mov
cli
inc
mov
xchg
adc
mov
aad
xchg
enter
xchg
jns
sbb
test
shll
adc
fucompp
add
shlb
mov
mov
add
cld
std
add
add
push
mov
pop
outsl
cmp
in
in
nop
dec
mov
enter
aaa
ja
cltd
jp
fildl
movsb
jb
out
or
lcall
sub
pop
mov
mov
addb
rcl
and
pop
loope
popf
cltd
mulb
mov
sub
mov
sub
lds
test
mov
lcall
inc
push
push
jbe
mov
mov
pop
imul
cmpb
xchg
pop
popf
dec
or
sub
dec
std
and
aaa
lds
mov
and
fists
dec
push
in
sbb
cltd
sti
and
cld
mov
das
mov
mov
test
mov
cmp
ljmp
dec
jmp
jg
loopne
xchg
and
aaa
lea
and
decb
push
add
xor
adc
fcompl
add
out
orl
pop
dec
mov
xor
add
xor
cltd
adc
mov
testb
mov
sbb
mov
xor
incb
xchg
pop
push
jnp
decl
das
jp
push
jne
xor
bound
in
outsb
enter
daa
cltd
cmp
and
std
jns
imul
or
sbb
mov
ja
insl
jne
push
push
jp
insb
or
shlb
shll
in
adc
insb
jg
movsl
jmp
sub
arpl
push
mov
aam
fldcw
push
int3
sarl
push
push
in
cmp
xor
dec
jnp
in
lcall
mov
fldenv
add
mov
in
add
fidivrl
cmpsb
xchg
mov
mov
shll
sub
mov
and
jae
insl
mov
sti
and
test
pop
aam
fldl
push
inc
adcl
xor
mov
aaa
iret
stc
dec
jbe
leave
pop
clc
push
add
arpl
and
sub
pusha
sbb
fiadds
insl
inc
pop
cltd
inc
lea
push
lret
inc
adc
mov
testb
icebp
int3
cmp
in
cld
fcmovnb
push
or
jecxz
jo
mov
andl
sub
stos
and
nop
push
or
popa
lods
mov
adc
mov
and
cmp
aam
sub
bound
mov
loope
or
fadds
mov
sahf
push
loopne
dec
mov
inc
in
push
or
jbe
jo
inc
frstor
xor
int
in
enter
lcall
jbe
fsubrl
insl
adc
cwtl
call
xchg
mov
scas
cs
andb
fildl
mov
test
and
jnp
push
subl
in
dec
sbb
pop
iret
mov
jae
cmp
gs
mov
add
repnz
sbb
inc
loop
mov
mov
or
xor
xorl
cmpsl
sbb
ds
pop
outsb
pop
mov
add
jno
rclb
and
imul
ret
out
outsb
xchg
mov
jmp
test
inc
movsb
cs
cmp
enter
lcall
add
inc
mov
xchg
ret
jns
sbb
fnstcw
addr16
lcall
push
stos
sub
fdivs
mov
xchg
std
sahf
sub
or
mov
rcr
fnstenv
std
push
add
in
xchg
popa
mov
outsl
cmc
dec
addr16
in
ljmp
test
xor
add
ja
cmp
cmp
jno
sarl
adc
jle
stos
daa
in
xor
pop
dec
jl
ss
fldcw
inc
out
insl
imul
dec
icebp
inc
cmpsb
mov
rcll
scas
and
fninit
mov
xlat
pop
or
pop
gs
sub
aad
or
and
adc
pushf
and
outsl
lahf
insl
adc
push
cmp
mov
xchg
pop
mov
call
fs
int
push
daa
pop
mov
andb
in
or
mov
fsubr
sahf
mov
sub
mov
sub
pop
arpl
ljmp
jp
enter
or
cmp
in
outsl
adcl
loopne
and
fwait
lds
shrb
adc
xchg
push
lds
xlat
mov
imul
push
cmp
loop
jge
pop
pop
mov
jg
shr
pop
mov
mov
sbb
lds
addb
dec
push
sub
or
dec
inc
cmc
filds
jecxz
add
xor
pop
and
xchg
jge
lods
aas
decl
adc
dec
pop
int3
out
mov
sbb
daa
mov
loopne
xlat
in
and
dec
pop
and
les
pop
xlat
stos
jmp
andb
xchg
mov
cmp
negb
push
lret
lock
add
ljmp
sti
sbb
mov
hlt
mov
dec
hlt
outsb
lods
push
imul
movsb
xchg
inc
aam
mov
xorl
aam
or
lods
sbb
push
mov
mov
or
adc
adc
inc
cli
xchg
jb
jge
sbb
lods
ret
in
aam
jnp
sbb
push
scas
and
jp
mov
push
mov
enter
add
mov
jmp
js
nop
cmpsl
cmp
fcoms
cmp
inc
xchg
sbb
dec
pop
dec
insl
sub
or
mov
push
imul
push
call
mov
fsts
or
push
iret
nop
xlat
testb
in
sbb
sbb
lcall
dec
outsb
je
or
sar
adc
cltd
mov
les
das
mov
inc
leave
adc
inc
nop
mov
loopne
and
push
iret
lahf
js
xchg
push
aad
push
push
xchg
jo
aam
les
pop
lds
outsb
lret
mov
mov
xchg
jns
cmp
dec
lods
fistpl
push
sub
repnz
ljmp
neg
addr16
push
or
dec
inc
dec
cmc
push
imul
jl
push
ds
loop
xchg
scas
mov
dec
les
nop
cmp
add
dec
sub
popa
fsub
imul
cmp
mov
xor
popf
in
stc
cmpsl
mov
jecxz
ds
mov
outsb
aad
aaa
cmpsb
lahf
cmpsb
jle
insl
sbb
or
ficomps
or
shlb
dec
jno
in
or
push
jg
scas
mov
xchg
adc
mov
pop
mov
push
int
cmp
sub
clc
xchg
and
and
cmp
cmp
andb
jb
ds
clc
movsl
jb
rcl
jl
mov
pop
stc
mov
xchg
push
outsb
push
or
bound
int
into
inc
push
cli
cmc
or
xchg
int3
add
in
fiadds
fisttps
jnp
jmp
fstl
nop
jge
testb
xchg
sahf
aad
ds
mov
and
stc
ds
mov
add
mov
loope
dec
in
insl
cmpsl
xor
push
mov
jo
test
loope
jecxz
scas
xchg
ja,pn
and
test
out
dec
orb
stc
cmp
xchg
xchg
push
scas
stos
cld
outsb
xchg
hlt
mov
sub
in
adc
fcoml
mov
ljmp
loope
out
aas
jle
and
cmp
xchg
dec
jl
mov
negl
jo
jno
scas
and
lds
dec
pop
mov
mov
or
cmp
lret
adc
mov
sbb
sbb
xor
test
mov
cmp
mov
mov
xchg
addl
lcall
in
cmp
mov
je
das
jns
cwtl
or
ljmp
xchg
push
inc
les
push
lret
xchg
stos
fsubrl
fists
mov
loop
lods
sub
lret
int3
mov
divb
adc
dec
and
xchg
or
cmp
lods
push
add
sbbb
sub
ficoml
xlat
cmc
imul
pop
aas
jb
lret
je
popl
sbb
jmp
or
fwait
stos
mov
sub
mov
mov
sub
lcall
mov
mov
fistpll
jae
cs
iret
pop
adcb
pushl
clc
out
jno
dec
cmpsl
adc
xor
into
outsb
bound
mov
cli
jp
std
pop
push
cmp
ficoms
pop
fwait
loop
addb
sbb
cmpsb
test
orl
dec
jns
out
xor
push
clc
das
out
orl
outsb
loope
jl
das
mov
mov
inc
dec
in
nop
and
lods
mov
movsl
icebp
call
ret
adc
or
push
xchg
dec
mov
push
jne
sar
loope
push
add
sbb
add
jmp
push
rclb
dec
mov
inc
aas
cmpsl
mov
add
cmp
mov
enter
in
sub
out
cmp
xchg
jge
sahf
and
ficompl
pop
out
inc
popf
xor
inc
adc
das
popa
fldenv
iret
mov
adc
xchg
sub
inc
lcall
lret
test
stos
clc
out
mov
fldl2e
sbbl
clc
or
xchg
in
popa
repz
aad
sub
call
fwait
vpmaddwd
cmp
insl
sub
cld
sub
push
fstpl
pop
jle
aad
jae
cmp
dec
loope
lret
adc
dec
dec
je
iret
icebp
or
imul
lock
xchg
and
fnstsw
mov
xchg
fisubrs
stos
popf
inc
xchg
jno
pop
lea
repz
fisttpll
mov
push
mov
or
push
gs
call
pop
cmpsl
adc
dec
adc
add
outsb
scas
sti
sbb
fisttps
in
std
lret
jle
shrl
jns
es
jmp
mov
push
je
cld
cmp
repnz
sbb
sub
sbb
jge
lods
rolb
mov
outsb
call
scas
shll
and
shrb
jns
mov
sub
jnp
in
xlat
mov
fwait
out
imul
lahf
dec
dec
das
pop
call
xchg
fdivrs
aaa
mov
mov
andl
push
repz
outsl
push
jnp
mov
imul
test
dec
pop
push
aad
movsl
arpl
in
sub
dec
divl
push
test
push
fcmovnb
pop
mov
cmc
sbb
cmp
mov
push
cmp
add
sub
lahf
adc
mov
pop
xor
xor
stc
push
ja
scas
cld
jae
add
jmp
inc
or
push
stos
lods
ja
or
dec
arpl
loop
push
jp
lea
popf
add
adc
xchg
push
js
push
enter
data16
and
sbb
lods
insl
sahf
xchg
lcall
and
jnp
xchg
lcall
xchg
mov
xchg
lock
jmp
push
cld
xor
mov
repnz
pop
push
pop
popf
jmp
and
mov
sub
add
pop
add
imull
jb
sub
gs
into
shl
xor
repz
mov
jno
adc
imul
inc
pushf
es
cwtl
sub
adc
loopne
in
stc
sbb
sub
xchg
sub
test
pop
and
mov
pop
mov
push
dec
xor
mov
pop
sub
push
rcrb
and
and
cmp
lea
popa
nop
test
js
in
mov
lahf
adc
out
inc
mov
dec
inc
out
jp
xchg
je
mov
arpl
sbb
pop
sbb
inc
pushf
lret
cmp
and
dec
and
mov
jnp
scas
jecxz
nop
push
int
mov
test
dec
jmp
jg
out
and
push
loop
ficoms
fldcw
out
sbb
cmp
std
mov
add
scas
add
les
repnz
fsubp
stc
cmc
movsl
sbb
mov
arpl
pop
filds
jl
mov
lret
jbe
aas
bnd
jecxz
push
mov
mov
test
pushf
data16
sub
aaa
xlat
mov
push
pop
push
js
cmpl
jl
scas
push
in
mov
repnz
cltd
jno
rolb
popf
push
jns
sub
jns
in
pop
addb
mov
xchg
std
sub
out
bnd
int
js
sub
jno,pn
inc
cmc
cmp
or
std
jns
mov
xor
add
cwtl
or
xchg
and
ret
and
out
jno
jp
scas
dec
gs
iret
ficoml
cmp
push
sbb
sahf
repnz
fisttps
arpl
repz
pop
js
sub
lods
sarb
test
and
lods
in
pop
inc
xlat
imul
add
xchg
dec
xor
adc
clc
adc
in
test
dec
imul
repnz
mov
lret
mov
push
insl
test
or
movsl
push
cmp
fldcw
in
cltd
aas
push
xor
gs
mov
mov
xor
and
dec
dec
sbb
sbb
jnp
xchg
xchg
fnstsw
push
cmp
pop
add
insb
jge
or
ljmp
jge
roll
pop
xchg
pop
mov
fisubs
sbb
cltd
mov
mov
sub
sbb
movsb
bound
jle
notl
cli
and
mov
arpl
ficoml
adc
mov
xchg
or
loope
xchg
in
lahf
adc
xor
pop
mov
lwpval
fsubs
dec
lods
jbe
fadd
mov
subl
add
jp
jl
call
adc
adc
mov
cltd
lock
test
dec
into
into
notl
xor
aaa
mov
sti
jb
push
adc
adc
clc
jecxz
jl
cmp
subl
fwait
pop
adc
cmp
xor
xchg
cmpsl
lea
sbb
jns
push
iret
pop
lock
and
jo
xchg
bound
arpl
jp,pn
xor
mov
mov
movsb
xchg
repz
xor
adc
fidivl
mov
test
clc
jno
xor
xchg
adc
ret
movsb
sbb
mov
push
test
mov
sti
pop
mov
xor
inc
insl
repnz
cmp
pop
subl
mov
scas
xor
xchg
imul
aad
and
jns
jle
ja
xchg
pop
outsb
adc
jns
out
xor
xor
xchg
lahf
scas
cmp
cmc
cmp
sbb
enter
test
sbb
stc
sub
in
adc
cli
push
add
sbb
imul
int
dec
sti
pop
xchg
in
outsl
cmp
push
push
call
cmpsb
icebp
test
mov
and
push
pusha
sub
outsb
bound
leave
cli
test
jge
rcrl
adc
test
or
test
xchg
rorb
jo
lret
cwtl
sbb
xchg
arpl
je
aad
loope
jne
cmp
add
daa
hlt
pop
jle
out
test
insb
mov
sub
push
jae
sbb
mov
testl
lods
sub
pop
or
xorl
mov
outsb
cmp
mov
mov
cs
jne
jnp
jge
mov
sub
mov
out
xor
jnp
mov
push
loope
inc
or
push
or
scas
insl
dec
and
clc
lods
push
mov
mov
imul
add
lahf
jbe
push
leave
xchg
fs
daa
les
and
inc
pop
add
jae
stos
dec
icebp
xchg
inc
cmpl
inc
push
outsb
icebp
adc
jl
adc
mov
outsb
dec
loop
jo
jmp
stc
cli
and
jecxz
add
das
mov
dec
fistpll
nop
jae
std
repnz
clc
in
sbb
jge
push
or
scas
in
dec
aaa
cmp
sahf
call
nop
pop
pop
push
sub
flds
leave
les
push
leave
push
xchg
pop
sub
inc
js
cmp
or
in
gs
cmp
or
cmp
in
ret
aad
xlat
hlt
aaa
shll
loope
fwait
mov
icebp
fs
sti
and
loopne
mov
push
push
sub
xor
push
mov
cmp
sub
popw
mov
push
imul
cmc
dec
sti
inc
push
mov
jmp
les
outsb
jmp
aaa
into
daa
jp
cmp
adc
int
into
mov
in
xchg
sbb
jbe
enter
jns
inc
sti
push
mov
inc
leave
xchg
repz
insl
push
pop
mov
icebp
stc
sub
pop
mov
lea
push
dec
leave
movsb
leave
or
lods
loopne
lock
mov
adc
mov
jp
ja
in
push
jecxz
fsts
push
push
dec
fnstenv
adc
sti
mov
adc
mov
jg
aam
sbb
fdivrs
fsubrp
mov
add
dec
fsub
sub
test
loope
cmpsl
in
aaa
iret
mov
adc
inc
mov
rcrl
push
and
sbb
stc
gs
mov
sbb
arpl
scas
ja
push
adc
cmp
andb
push
xor
insl
lret
cmpsl
mov
ss
lret
arpl
sbb
loope
pop
movsb
add
sub
pop
inc
inc
dec
lock
pop
or
in
pop
enter
dec
jecxz
test
inc
lods
repnz
shrl
push
cmc
fildll
mov
lret
jmp
lds
aaa
xchg
scas
push
mov
mov
mov
mov
mov
jne
scas
ds
inc
fstp
test
mov
pushf
cmpl
and
push
and
sbb
jne
push
sub
ds
dec
orb
movsb
sub
int
out
mov
and
out
in
mov
outsl
in
shll
sbbl
popa
into
int
shll
pop
stos
xor
push
ja
add
sub
popa
addb
and
ss
or
xor
jns
xor
lods
or
repnz
call
out
lods
and
data16
or
xchg
mov
mov
push
and
adc
mov
mov
mov
mov
mov
test
test
pop
test
cld
sub
hlt
shll
xor
das
std
shll
jecxz
rcll
mov
rorb
adc
sbb
mov
sbb
jb
jmp
mov
jae
cmpsb
ja
pop
pop
imul
jmp
icebp
loope
pushl
mov
xor
add
and
out
pop
stos
fucomip
test
lret
orb
xor
in
or
iret
fistpl
enter
jbe
inc
pusha
addb
lods
cmpsl
cltd
lret
pop
jle
pop
pop
insl
loopne
push
inc
cli
mov
sbb
adc
jmp
push
arpl
clc
add
call
clc
addr16
roll
int
call
adc
aam
sbb
scas
ja
test
jns
rcrl
mov
repz
bound
leave
inc
shll
pop
leave
sti
xor
outsb
fwait
icebp
and
leave
mov
ret
dec
mov
in
out
call
out
into
lds
hlt
ss
mov
push
test
pop
dec
add
xchg
mov
mov
dec
mov
jge
out
xor
lret
mov
outsb
outsb
pop
dec
and
ss
or
mov
je
xor
jo
sub
imul
sub
insl
or
mov
xor
dec
mov
mov
and
mov
inc
ja
fwait
lret
js
pop
jbe
mov
mov
test
or
cs
push
and
mov
xchg
xchg
xchg
or
fucomp
and
lea
jg
mov
fcmove
and
pop
aas
pop
rorl
repz
das
dec
fcoml
cltd
inc
jbe
popf
gs
cmp
sbb
ljmp
mov
stos
and
lcall
leave
cmpsb
lea
insl
into
mov
ret
filds
mov
fs
push
mov
add
xor
inc
aas
int
mov
sbb
popf
mov
and
fistps
cmp
movsl
jne
rorb
push
lods
cmp
dec
fidivl
xor
out
stc
shll
loope
or
pop
add
fstpt
or
inc
stos
xchg
jecxz
cmp
leave
jo
ret
scas
jge
aas
sbb
lods
sub
ror
xor
cmp
js
dec
jp
xor
cwtl
push
rcrb
xchg
xor
das
and
xchg
movsb
jmp
aas
add
movb
out
shll
mov
mov
bound
jbe
stos
sbb
shlb
or
push
pop
fsts
jnp
repz
fisttps
jge
sub
adc
jl
popf
js
inc
shrl
push
cmp
sbb
jecxz
iret
and
sahf
push
sbb
lods
inc
vprotb
rorb
cmp
xchg
sarl
jne
mov
cmp
push
or
mov
mov
dec
xchg
scas
aaa
inc
andb
jb
adc
jnp
aam
pop
repnz
ljmp
imul
cmp
pop
pop
jbe
inc
inc
es
pop
xchg
mov
or
xchg
add
cwtl
fnstcw
fsubrs
bswap
lds
lret
sbb
push
jno
mov
scas
xlat
xor
xorl
movsl
imul
or
adc
sbb
add
adc
or
pop
fdivrs
das
int3
or
inc
or
pop
je
enter
std
adc
add
mov
arpl
idivl
cmp
add
mov
sbb
mov
mov
outsb
dec
outsl
cmp
int
mov
push
or
xor
adc
je
jnp
andb
icebp
jne
dec
dec
rcrl
or
sub
mov
or
pusha
ds
addb
out
aaa
jmp
inc
lret
mov
stc
xchg
inc
mov
loop
and
pop
cmpsl
popf
mov
jb
sbb
popf
inc
push
jmp
mov
cmp
repz
divl
adc
push
in
repnz
shl
mov
push
push
inc
inc
pop
sbb
call
jnp
movl
clc
cmp
ds
or
mov
mov
sbb
cmp
push
inc
xchg
push
mov
cmp
mov
repnz
int3
ljmp
dec
iret
cmpsl
mov
lock
cmp
sti
inc
mov
pop
fnstsw
cmpb
js
mov
jmp
mov
jno
xchg
adc
jne
divb
int
xor
cld
mov
xor
in
mov
repz
push
mov
stos
loope
repz
mov
xlat
imul
je
js
inc
stos
adc
mov
mov
lret
xchg
test
or
fs
hlt
adc
shlb
fbld
add
lods
or
repnz
sbb
mov
aaa
je
jmp
mov
fstps
fs
addb
andb
dec
sub
and
pushf
sub
fs
sbb
fwait
lcall
mov
add
cld
or
mov
jmp
cmpsl
and
ret
and
int3
jno
pop
fnstsw
pop
mov
icebp
adc
sti
push
lret
xchg
pop
cltd
push
lcall
cltd
mov
not
fisubl
adc
fwait
mov
rorl
dec
add
sub
je
data16
loop
hlt
jno
xchg
ljmp
jno
push
hlt
mov
fstpl
pusha
dec
or
shrb
sahf
xchg
fiaddl
ljmp
scas
ljmp
loope
icebp
mov
aaa
stos
lock
fnstenv
sub
jge
lcall
mov
inc
add
fs
iret
lods
jnp
sti
sbb
lcall
add
cmpl
mull
jo
adc
popf
pop
test
xor
lods
cwtl
call
sahf
cli
sbb
add
and
ret
add
ljmp
jecxz
cmpsb
push
outsb
cmp
adc
sub
adc
test
jne
pop
mov
loope
cld
lcall
mov
nop
cmp
insb
dec
cmpsl
dec
sub
mov
inc
imul
sbbl
mov
stc
popf
pop
and
ljmp
js
and
jge
adc
aas
ds
rolb
ja
sub
cmp
int3
int3
fldl
mov
sahf
stc
xchg
mov
push
inc
xor
test
sbb
pop
rolb
outsl
lods
dec
hlt
mov
dec
adc
push
adc
lock
movsl
push
pop
xor
rorl
imul
pop
fcoms
lods
mov
push
inc
xchg
js
mov
ds
mov
out
jmp
jbe
push
addr16
repz
add
push
loope
fnsave
pusha
imul
aas
and
and
dec
xor
iret
lds
ret
test
and
push
inc
cmp
pop
mov
dec
jge
or
mov
xchg
mov
loopne
or
je
or
arpl
add
xor
pop
xor
idivl
add
and
out
fs
lcall
adc
insl
fiadds
loope
ss
std
adc
sub
pop
sbb
inc
pop
sbb
shl
mov
dec
xor
incl
jp
jle
cs
jnp
in
mov
call
xchg
insb
rorb
mov
lcall
xchg
mov
xchg
lock
mov
push
mov
icebp
clc
dec
or
lods
repnz
ja
lret
pop
or
insl
stos
jle
mov
int
mov
push
lock
sbb
sbb
lahf
cld
addb
outsb
xor
iret
idivl
and
add
cmp
dec
or
inc
mov
imul
inc
in
mov
outsb
xor
push
push
imul
or
lods
jecxz
jp
lods
adc
xor
lea
fs
dec
cmp
add
dec
xchg
mov
icebp
dec
xchg
les
pop
mov
xlat
inc
cmp
and
stc
add
fiaddl
pop
lahf
push
xor
and
mov
test
lret
fisttps
xchg
push
ljmp
sub
nop
loop
jo
jne
push
xchg
es
shr
inc
fmuls
add
out
rclb
jecxz
leave
icebp
cmp
daa
leave
push
inc
std
jb
inc
jne
or
jmp
adc
lock
cwtl
rclb
inc
pushf
pushf
fs
ja
add
pop
push
shrb
rcll
cltd
outsl
add
pop
mov
xchg
jle
xchg
push
js
stos
push
mov
or
cmp
fiaddl
int
mov
lds
jnp
sub
xor
dec
imul
xchg
xlat
ret
ret
jb
jns
sahf
in
jo
mov
cmpsb
lods
insl
jp
ds
inc
sahf
add
cwtl
movd
test
and
fmuls
lcall
call
shlb
jp
rorl
es
pop
mov
iretw
mov
imul
adc
dec
in
xchg
xor
sbb
cmpl
or
clc
gs
fxam
jb
sahf
push
fwait
jne
cld
or
fdiv
popa
and
divl
lods
mov
inc
jp
popf
ficoms
outsb
ret
lahf
repz
int
movsb
outsb
cmc
xchg
dec
and
outsb
xchg
scas
inc
add
daa
dec
adc
xchg
sarl
cltd
mov
popf
sti
std
repz
push
mov
jecxz
pop
insl
push
push
scas
xor
mov
sub
jmp
ret
pop
inc
lods
fimull
mov
int
aas
es
popf
das
lret
fsubrs
jp
push
ss
sarb
aad
xchg
mov
dec
fnstcw
insb
sbb
iret
and
inc
fwait
xor
add
popf
and
insl
pop
push
mov
xchg
sub
xchg
and
and
xorb
lcall
in
cld
xchg
into
mov
out
mov
adc
push
jns
subb
pop
push
into
les
push
and
mov
mov
add
xchg
gs
js
jmp
xor
or
mov
xchg
and
mov
sub
xchg
push
cltd
sub
int3
gs
pop
sahf
xchg
cmp
in
cmpsl
dec
push
push
bound
aam
mov
in
push
sbb
cmovb
jns
dec
xchg
sub
pop
pop
cmpsb
push
pop
dec
movsl
arpl
add
es
xchg
mov
xlat
adc
aad
mov
loopne
inc
pop
and
rol
mov
sarl
out
and
pusha
xchg
jge
testb
cmp
stos
dec
cs
inc
push
mov
mov
push
pop
pop
cmp
xchg
jmp
mov
dec
daa
or
xchg
shlb
lcall
mov
lods
insb
repz
dec
pop
xchg
mov
sub
je
pop
pop
lret
pop
subb
lret
stos
pusha
clts
xchg
insl
das
lret
and
cli
mov
mov
wbinvd
sbb
movsl
std
dec
or
or
fcoms
lock
pop
add
xchg
mov
push
mov
sbb
pop
adc
lods
lahf
sub
mov
ja
mov
fs
mov
std
movsl
data16
imul
cmp
xchg
sbb
neg
mov
ja,pn
xchg
stc
pop
xchg
push
xlat
in
in
push
push
loop
and
pop
inc
cwtl
add
daa
push
dec
pop
jnp
dec
jle
jnp
data16
setns
adc
inc
sub
push
lret
inc
test
adc
arpl
inc
clc
rorb
inc
add
cmp
sbb
xor
movsb
repz
lods
fiaddl
pop
or
inc
jp
dec
mov
cwtl
add
inc
inc
mov
sahf
fildll
push
ljmp
lret
rcl
notb
push
aad
or
add
and
or
sub
aam
or
fwait
push
mov
shlb
adc
movsb
jns
lods
insb
pop
mov
ja
lods
decl
test
je
push
adc
push
rcrl
or
mov
stos
and
mov
sahf
jl
out
dec
or
and
push
push
push
jge
movsb
cli
shlb
or
adc
les
pop
xor
test
adc
push
mov
push
cs
cmp
rcrl
lea
cld
jge
in
cli
insb
mov
or
aas
inc
lahf
xor
add
jecxz
xlat
dec
lods
mov
daa
or
fnstcw
sub
mov
lret
sbb
add
mov
sub
ds
xchg
int
cwtl
push
mov
add
fimuls
ljmp
adc
pushf
sbb
jb
add
inc
out
dec
push
daa
inc
mov
mov
sub
or
std
inc
fs
fmul
cld
fwait
insb
test
push
jno
dec
mov
imulb
mov
mov
mov
into
xchg
adc
ljmp
test
aam
sbb
iret
icebp
sar
sti
int
dec
addr16
notl
inc
in
mov
dec
mov
jnp
inc
popf
jg
out
aas
pop
push
and
orl
sbb
cmc
jnp
fidivl
scas
mov
stc
lahf
and
loopne
into
lock
cmp
lahf
mov
dec
push
pop
adc
rorb
add
loope
js
testl
cmp
sbb
daa
pop
sub
push
out
xor
lods
jnp
cmp
test
test
mov
loopne
ljmp
mov
lcall
mov
mov
mov
das
fs
outsb
pop
sbb
ficomps
cltd
jmp
clc
xor
or
ret
out
mov
or
gs
sbb
shll
addr16
mov
and
insl
jae
cmp
inc
inc
mov
fcomi
mov
insl
cs
test
pop
push
aaa
test
jno
dec
mov
xchg
jb
arpl
jb
cmp
ficoml
mov
ror
scas
hlt
test
outsb
add
sub
lods
in
lods
scas
test
or
and
adc
push
mov
dec
popf
aaa
bound
rcrb
add
in
sub
outsl
sti
ret
pop
enter
sub
push
xor
dec
jle
mov
xor
pop
mov
and
and
aaa
shrb
in
aaa
add
sti
test
xor
xchg
shll
pusha
and
test
stos
cmp
cmp
and
cmc
mov
test
cmp
xlat
nop
push
xlat
dec
adc
sub
or
cmpsl
sbb
in
pushf
fistps
mov
jmp
gs
std
mov
pushfw
dec
inc
test
and
xchg
mov
daa
pop
fsub
test
or
cli
lret
bnd
fcmove
cmp
mov
jecxz
pop
loope
ja
xor
pop
sbb
sub
pop
xchg
sub
sbb
int
and
scas
test
loopne
test
sub
add
inc
fisubrl
pop
idivb
sahf
stc
push
jns
data16
xor
pop
cwtl
add
in
xchg
xchg
inc
adc
sahf
jmp
fldcw
dec
or
lcall
dec
icebp
in
mov
adc
push
push
cli
pop
call
mov
push
out
fsub
pop
stos
add
xlat
out
dec
movsb
adc
lret
xor
add
mov
dec
dec
idivl
repnz
sbb
xchg
pop
pop
icebp
sub
cli
in
mov
lock
jne
xor
dec
iret
addl
mov
stos
mov
lea
imul
out
sbb
jp
xchg
call
addr16
sub
leave
mov
scas
fsubr
adc
bound
push
and
inc
mov
adc
add
loopne
lahf
jg
jae
fisttpll
dec
in
mov
xor
test
insl
xchg
push
in
xor
add
lret
cmp
and
sub
clc
sbb
test
lock
lahf
imul
fstpl
inc
iret
add
push
mov
sub
les
jae
pushf
aaa
fbld
bound
xor
sahf
add
arpl
cmp
pop
cmpl
lahf
les
cmpsl
repnz
mov
dec
mov
cmc
rclb
pop
shll
sub
jae
xchg
and
sbb
testl
js
test
push
cmp
mov
xchg
dec
cmp
add
xchg
xlat
push
add
xlat
add
mov
mov
icebp
lcall
push
mov
lret
fisttps
test
mov
or
shll
sbb
xor
data16
dec
mov
movsb
xchg
je
dec
sti
dec
stos
loopne
in
fisubs
leave
pop
sbb
insb
add
sub
jne
outsb
ss
idivb
or
or
popa
adc
add
mov
cmpsl
dec
mov
inc
div
enter
push
or
shr
xchg
inc
jmp
mov
and
jp
out
sbb
and
xorl
mov
fildl
mov
sarl
out
xchg
pusha
push
repz
mov
cmove
pusha
pop
jl
jmp
loop
adc
adc
addr16
popf
mov
fincstp
cld
dec
mull
shl
ret
mov
and
arpl
test
test
xor
ja
xchg
sub
stc
cli
inc
and
push
push
adc
sahf
push
cmp
fdivr
pop
pusha
out
popf
inc
jle
add
add
xchg
or
stos
rol
int
daa
int3
push
fnstsw
outsb
add
cltd
shlb
jp
gs
push
pop
out
mov
push
int3
sti
jle
cmpsl
push
mov
and
or
mov
fstp
jmp
je
mov
and
mov
push
aam
xor
mov
lret
lcall
dec
push
push
call
and
jmp
insl
lods
push
out
sahf
popa
popf
mov
test
jp
cmc
push
adc
push
ficoms
lret
mov
imul
sub
fpatan
sti
fmull
aaa
xor
or
dec
mov
cmp
cmp
xor
ret
shl
inc
js
xchg
imul
mov
jge
mov
sbb
push
xor
xlat
pop
subb
xor
dec
push
leave
nop
das
outsb
inc
cltd
mov
or
cmp
nop
add
dec
repz
mov
repnz
bnd
mov
sbb
stc
mov
call
and
orb
in
ds
xorb
push
int3
rolb
jl
inc
leave
test
sbb
inc
lret
add
pop
jecxz
mov
cmp
mov
cmc
xor
fildll
xchg
fsubs
notb
cmp
sahf
pop
inc
adc
pop
jge
outsb
out
nop
in
imul
sahf
shlb
add
jnp
les
add
push
and
pushf
out
jl
mov
loope
cmp
and
cwtl
xor
pop
fiaddl
xor
inc
sti
mov
clc
mov
sbb
pusha
add
out
lret
pop
jl
out
cwtl
lahf
push
and
ds
push
xor
inc
nop
add
bound
sbb
xchg
popf
pop
mov
ds
pushf
jo
cmpsl
cmp
in
sbb
shll
iret
shlb
xor
inc
andb
mov
cmp
das
repz
movsb
ss
out
add
pushf
jnp
inc
aas
je
pop
into
and
push
out
cwtl
fcomi
push
int3
sbb
bswap
mov
sbb
xchg
movsb
xorl
stos
aaa
shlb
xchg
xchg
sub
scas
lahf
sub
mov
cwtl
inc
inc
rcll
mov
cmp
cmp
mov
push
pushf
ljmp
cmp
scas
jl
pusha
rorb
jecxz
pop
and
or
lcall
pushf
cmp
inc
xchg
outsl
aaa
outsb
loop
lock
rcrl
fsubrl
jbe
outsb
or
push
jmp
add
sub
aad
mov
movsb
or
ret
stos
inc
sub
cmp
pop
in
std
int
dec
arpl
mov
jno
xor
in
and
lcall
inc
xchg
addr16
pop
xchg
mov
loopne
mov
ja
mov
jnp
mov
jmp
mov
scas
daa
cli
cmp
out
jae
in
test
std
or
clc
scas
push
mov
int
add
outsl
xchg
jns
mov
fistpll
inc
fwait
mov
adc
pop
sbb
aas
mov
mov
test
sbb
inc
xlat
in
mov
mov
rol
xchg
adc
mov
popf
stos
cltd
xchg
xor
ret
mov
mov
jno
nop
enter
rcll
repnz
ljmp
loop
pop
cmc
or
imul
into
xchg
mov
mov
fildl
mov
loop
aas
lds
and
icebp
insl
notl
add
cmc
adc
jp
into
aaa
sbb
mov
push
xchg
movsl
addr16
fnstenv
fwait
outsb
jl
int
pop
add
jmp
mov
cwtl
lahf
xor
lods
imul
popa
add
dec
in
xor
xchg
dec
mov
in
out
push
cli
divb
test
aad
daa
jge
mov
ljmp
and
sti
rcl
cltd
in
movsl
xchg
js
pop
test
jne
add
mov
ds
stos
and
and
arpl
icebp
fistpll
fwait
imul
xorb
mov
loop
cmp
in
lds
add
popa
xor
inc
cld
aaa
int3
sti
popl
jb
mov
xlat
ja
rol
add
cli
jge
pop
aas
outsl
es
mov
sarb
pop
xchg
jns
adc
mov
imul
or
lods
leave
call
rcl
gs
pusha
cmpsl
inc
shrb
out
je
stos
and
or
mov
push
loop
outsl
shll
and
mov
movsl
lods
test
lds
vmovddup
or
int3
fmull
and
lds
pop
add
push
cmovg
mov
push
cld
scas
mov
bound
aad
sbb
dec
jnp
adc
divps
test
je
mov
jnp
mov
iret
clc
fidivs
insb
xorb
call
movsb
out
jmp
pop
inc
xor
std
test
pop
inc
fs
daa
push
jbe
cmp
jbe
cli
jmp
add
add
out
imulb
pop
imul
pop
jne
push
fwait
sub
cmpsb
push
sbb
jb
in
lcall
adc
xchg
adc
mov
loope
pop
mov
push
das
sub
ljmp
mov
aaa
mov
pop
and
ret
pop
xor
inc
test
arpl
roll
leave
pop
dec
mov
and
imul
mov
jae
xchg
sbb
inc
or
out
lods
pop
sti
cs
pop
or
imull
inc
js
int3
popf
jo
pop
rcr
ret
aam
push
lock
add
sub
mov
ss
repz
pop
pushf
or
ds
pop
or
sub
mov
out
sbb
cwtl
rorb
mov
and
scas
or
shlb
mov
pop
aas
pop
leave
ss
inc
add
mov
nop
jb
add
addb
cmp
mov
popa
add
testb
scas
lret
roll
in
leave
xchg
mov
adc
jne
sbb
mov
ret
repnz
pop
mov
sti
push
in
mov
dec
inc
fidivrl
scas
cmp
outsb
cmpsl
mov
jbe
shrl
aaa
cmpsl
iret
mov
rcl
adc
loopne
leave
pop
or
cltd
lods
testb
dec
subl
mov
sahf
nop
daa
leave
sbb
add
mov
mov
xlat
int
pushf
popf
cwtl
push
mov
dec
xor
cltd
sbb
sahf
mov
loop
pop
or
addb
lock
aaa
mov
insl
push
xchg
cli
out
rcrl
xor
pop
sbb
and
jle
pusha
jg
push
pop
push
mov
xchg
or
sub
jne
pop
cmpsb
clc
xor
xchg
orb
dec
mov
xchg
roll
aas
leave
test
push
adc
loope
aam
mov
iret
rcll
aas
inc
out
jg
aaa
test
cmp
pusha
std
jg
scas
and
inc
adc
pop
adc
jo
cwtl
mov
or
test
stos
loopne
sub
mov
xchg
insb
call
ds
dec
fsts
int3
dec
loop
movsb
loopne
flds
ja
push
adc
and
ds
push
test
mov
in
push
add
xlat
outsb
push
aad
incl
xor
cmpsb
and
pop
xor
cmpsb
sbb
add
mov
popa
jecxz
les
jp
and
aam
ja
ficomps
push
cmpsb
push
sti
call
sub
xor
and
leave
leave
cmp
mov
mov
mov
push
sbb
xchg
cli
arpl
in
fisubrs
outsb
pushl
push
fldl2e
ret
inc
add
jo
jge
pop
mov
sub
fmull
jae
insl
add
push
mov
push
mov
jmp
insl
int
loop
adc
adc
push
imul
mov
adc
dec
push
bound
movsl
adc
mov
in
jae
mov
pusha
add
adc
adc
repz
mov
mov
jmp
jbe
xorb
push
call
cwtl
mov
fnstcw
fists
inc
mov
mov
iret
gs
sub
lea
jge
xchg
mov
aam
pop
inc
pop
jns
sub
pushf
testl
inc
cmp
hlt
mov
dec
mov
cmp
mov
cltd
loope
mov
sub
test
push
jns
cmp
mov
jg
pop
in
sahf
jae
ret
test
mov
inc
fsubrp
xor
pop
or
xchg
bound
add
aaa
lahf
push
inc
in
clc
dec
sub
repz
mov
out
fwait
sbb
je
cmp
pop
arpl
push
jo
xchg
jmp
rcrb
cmp
inc
sub
xchg
fs
sub
jg
ljmp
in
std
mov
pop
jb
jae
ficompl
in
mov
sbb
and
fistpll
lret
div
fisubl
mov
or
popa
adc
xchg
mov
mov
or
push
bound
subl
fcoml
je
call
imul
roll
out
adc
arpl
testl
sbb
xchg
addr16
mov
dec
aaa
mov
xor
ss
rorl
adc
adc
stc
jl
add
push
adc
into
mov
xor
scas
jl
inc
test
add
add
fbld
mov
add
lods
push
and
fstpt
mov
rorl
cmpsl
inc
popa
dec
mov
or
test
ljmp
mov
nop
sub
mov
adc
xchg
in
enter
mov
jmp
xchg
test
ljmp
xor
test
adc
sbb
mov
dec
leave
orl
out
mov
std
or
add
mov
push
ljmp
imul
push
loope
cmpsb
repnz
cmp
dec
adc
or
rcl
mov
sbb
mov
mov
xor
jp
pop
sub
mov
push
sub
shll
pop
mov
cmp
ret
push
in
cmp
or
push
dec
pop
cmpsl
mov
dec
jns
dec
inc
xor
sahf
stos
lahf
push
clc
imul
into
filds
push
fsubs
sbb
sbbl
cmpsb
aas
jnp
addr16
fstpl
add
aas
push
and
iret
add
ret
sub
ret
jnp
shll
into
xchg
inc
es
inc
sub
mov
repnz
fcomi
inc
xor
repnz
outsl
pusha
adc
add
in
inc
push
insl
cwtl
bound
es
lret
inc
pushf
mov
jb
clc
mov
fs
les
movsl
fyl2xp1
dec
fbstp
inc
pop
mov
dec
subl
push
xchg
lock
dec
imul
sbb
inc
je
into
xchg
into
ror
jbe
and
pop
int
shlb
xlat
outsb
jle
cs
dec
call
aad
sub
lea
fistpll
pop
bnd
outsl
cmp
inc
jecxz
lds
ret
pop
out
lahf
jecxz
imul
dec
shrl
lret
xor
dec
jp
imul
roll
xor
ror
fiadds
adc
sub
jecxz
fisubs
lock
add
stc
sar
add
out
jnp
xchg
push
int
jl
hlt
cmp
aas
add
inc
lret
jl
and
mov
mov
push
pushl
pushf
stos
jne
pop
leave
add
sub
cmp
xchg
out
mov
or
pusha
adc
int
popa
popf
shl
das
jo
push
or
mov
sbb
pop
cmpsl
lahf
sub
dec
fwait
ss
cmc
fistl
mov
ds
enter
pmulhw
test
xchg
pop
ret
aas
js
mov
push
dec
rorb
in
lahf
jl
pop
mov
dec
fsubrs
les
add
sub
out
mov
sub
mov
fnsave
mov
adc
or
dec
cmp
or
add
cmp
add
sbb
fdivrs
mov
mov
sbb
repz
insb
in
mov
sbb
push
xlat
or
xor
mov
add
xor
mov
popf
pop
push
nop
cmp
pop
repz
lahf
push
and
aad
je
jbe
nop
xor
ljmp
cld
imul
push
mov
fsqrt
inc
or
loope
scas
pop
add
xchg
jne
pop
outsb
fbstp
nop
cmp
repnz
cld
test
inc
arpl
cltd
movsl
sub
push
loope
into
or
aam
mov
sarl
mov
jge
mov
out
adc
mov
xchg
orl
jb
hlt
cld
push
popf
jne
fidivl
xor
add
xor
movsb
aas
xorl
clc
dec
addr16
pop
sub
mov
jp
in
mov
ds
sub
insb
ss
insl
dec
dec
cmp
dec
jno
lret
add
push
adc
dec
push
xchg
icebp
xor
aaa
pop
into
jl
popf
jecxz
xchg
dec
das
pop
add
cmpsb
arpl
sub
jle
pop
sub
aad
inc
mov
adc
xchg
push
test
rorl
add
fld
stc
xchg
ljmp
movsb
adc
mov
aad
inc
push
shl
jne
pop
dec
mov
fwait
mov
pop
in
pop
and
int3
mov
and
movups
adc
xchg
push
out
xchg
lret
jecxz
mov
adc
inc
je
inc
lods
cmp
dec
sub
hlt
xchg
cmp
adc
aad
jae
push
scas
imul
test
mov
dec
out
lock
cmp
and
out
add
xor
jo
in
jne
xor
mov
pop
aam
mov
lds
push
inc
icebp
push
xor
insb
lock
lcall
int3
xlat
push
idivb
mov
adc
sbb
xor
ljmp
push
movsl
fs
out
jbe
pop
dec
shrl
jae
daa
jo
leave
mov
xor
mov
aad
cmpsb
jmp
mov
adc
rorl
fmul
mov
cwtl
and
pop
xor
popf
mov
movsl
in
dec
fsubrp
pop
or
push
pusha
xor
aaa
add
fisttpl
pushf
lcall
or
cs
je
sub
lds
inc
push
pop
push
inc
pop
sub
std
mov
cmc
mov
fdiv
xor
fwait
pop
mov
imul
mov
lret
fcmovu
push
out
pop
inc
cmp
jp
ds
lea
pop
dec
bound
mov
mov
or
push
mov
lret
femms
and
pop
jnp
mov
js
int3
and
addr16
mov
dec
jae
mov
xor
xchg
lahf
sub
stos
adc
hlt
in
pop
in
push
scas
inc
lea
daa
ljmp
sub
in
or
and
add
je
lea
jmp
enter
mov
mov
leave
movsb
shlb
and
xor
cmp
sti
jnp
mov
lret
sarb
mov
lcall
out
sets
inc
repz
shl
add
cld
lock
imul
pop
jno
arpl
cmpsl
enter
inc
cmpsl
shrb
les
repnz
scas
push
sbb
push
test
ljmp
test
add
fndisi(8087
pop
mov
jno
mov
inc
xchg
push
subb
cmc
add
lods
leave
cmp
mov
jecxz
cmpsl
pop
insl
dec
add
out
aad
cwtl
push
inc
mov
pop
dec
or
add
xchg
sbb
outsb
out
or
jp
ds
add
insb
mov
mov
add
rcrl
cld
inc
xchg
jnp
fs
mov
pop
sbb
cmp
imul
inc
movsb
mov
fs
xchg
aas
mov
loope
xor
loope
ljmp
lcall
add
lahf
fidivrs
shlb
gs
xor
imul
sub
dec
dec
loopne
pop
int3
xor
scas
mov
inc
mov
mov
sbb
sbb
cs
iret
jl
push
repnz
test
jecxz
dec
imul
pusha
js
call
ret
xchg
cmp
outsb
xor
addb
add
lahf
ja
imul
jo
dec
ficompl
lods
mov
mov
pop
inc
cld
jo
test
jg
jecxz
inc
pop
fildll
in
jo
stos
dec
fs
mov
push
mov
lock
js
int
enter
lds
jb
add
jmp
aas
movsl
cmp
pop
rorl
mov
mov
das
outsl
int3
fildll
mov
jne
gs
mov
dec
jne
movsb
inc
push
jae
xor
or
jae
push
xchg
mov
adc
mov
call
leave
jbe
shll
mov
out
aas
jl
outsb
mov
scas
jg
nop
ss
bound
xorl
mov
sub
mov
out
filds
repnz
push
and
sbb
leave
mov
push
mov
pop
pop
test
cmpsl
xchg
rclb
andl
pop
xchg
pop
jecxz
std
inc
fwait
mov
leave
insb
push
scas
das
sbb
or
int
add
push
shrl
loope
sahf
rclb
add
cli
imul
add
cmp
push
inc
insb
iret
divl
push
jmp
pusha
mov
mulb
xchg
adc
dec
xadd
xor
test
scas
and
or
push
and
dec
adc
xchg
adc
iret
push
movsl
shrl
pop
inc
out
inc
mov
add
sbb
jno
fstl
fnstcw
std
cmp
rcr
sub
fwait
xchg
xor
adc
sub
xor
loop
mov
int3
push
dec
les
gs
pusha
mov
test
adc
sbb
dec
insl
jnp
je
sbb
out
cld
jg
jmp
push
lcall
sarb
sub
lret
cmp
push
push
cwtl
ljmp
arpl
fwait
sub
lods
adc
jae
xor
icebp
push
mov
cmpsb
sub
dec
pusha
push
pop
cmp
ret
shlb
mov
lcall
dec
daa
sbb
shrd
add
inc
add
xchg
je
xor
les
jmp
mov
mov
fcom
dec
push
mov
rorl
jmp
inc
mov
adc
das
shll
in
add
fwait
pushf
adc
mov
imul
in
dec
lea
jecxz
pop
rcrl
cs
sahf
fisubrs
arpl
mov
pop
shr
cltd
jecxz
popa
aas
aas
enter
mov
movsb
sbb
jmp
adc
xor
lea
and
xor
in
popa
cld
out
adc
mov
ss
cmp
xchg
adc
lcall
cmp
mov
dec
hlt
lods
cmc
arpl
roll
outsl
inc
out
and
xor
mov
xchg
xchg
cmp
je
and
test
cmp
cmp
xor
mov
or
pop
push
add
fists
dec
pop
pop
lods
push
push
xorl
inc
jg
ret
lret
push
xchg
jmp
fcompl
into
add
lea
mov
mov
jp
mov
jmp
shrl
xor
adc
gs
jp
imulb
ror
cmp
push
rolb
call
xor
pop
pop
aad
lea
rol
inc
aam
int3
daa
inc
pop
push
pop
lods
leave
pop
shl
mov
xor
lods
pop
dec
bound
sbb
and
in
or
roll
sbb
mov
aam
jecxz
sub
push
push
pop
pop
push
add
sbb
mov
sub
enter
mov
shl
sbb
sub
test
push
scas
xor
sub
mov
cmp
mov
dec
fcoml
mov
or
cltd
mov
call
pop
sbb
in
xlat
pushf
mov
jne
jne
cmp
pop
negb
mov
mov
mov
pop
jno
ljmp
push
jbe
jmp
cmc
mov
sbb
and
add
inc
push
out
xor
cmp
mov
scas
push
insb
inc
dec
sahf
popf
sahf
clc
sarb
in
dec
mov
repz
shlb
jg
and
add
cmp
xlat
dec
stos
mov
xchg
sbb
or
les
inc
adc
add
cli
aam
dec
inc
add
imul
inc
data16
inc
aas
adc
mov
push
xchg
pop
xchg
sub
aaa
clc
fcmovb
fwait
mov
bound
mov
and
shlb
push
jl
arpl
mov
fimuls
fidivl
sub
ja
call
push
xor
ret
roll
test
mov
pop
xor
jmp
mov
jne
mov
ja
je
addr16
or
mov
xchg
clc
pop
leave
ljmp
out
jo
test
leave
mov
xchg
insl
loop
sbb
mov
rolb
repnz
mov
pop
test
stc
pop
aam
mov
lret
test
rol
stos
add
adc
lret
inc
inc
xchg
push
or
repz
lcall
cmp
and
aad
and
rclb
push
cld
jb
inc
lods
push
jg
mov
sub
and
mov
cmp
xor
negb
cmp
iret
ds
pushf
nop
sub
xor
mov
movsl
test
sarb
jle
inc
push
push
insb
decl
movsb
cmpb
xchg
ljmpw
inc
movsl
subl
add
mov
pop
push
push
fistpl
xchg
dec
dec
and
cmp
mov
jbe
pop
mov
sti
flds
mov
in
adc
cmp
pop
jb
pop
lret
push
shrl
lret
test
add
cmpsb
mov
sbb
adc
xchg
mov
sbb
mov
sarb
std
mov
push
mov
jecxz
dec
add
sbbb
scas
insb
xlat
cmpsb
sbb
and
call
cmp
and
andl
xchg
loopne
xchg
push
mov
repz
lods
movb
cmpsl
and
ss
jno
mov
dec
mov
addr16
jl
mov
adc
and
mov
lret
push
mov
ja
lcall
sahf
aas
inc
sti
add
pop
mov
aaa
or
mov
and
cmp
mov
sbb
pop
nop
or
fdivs
inc
fs
inc
mov
xchg
mov
cmpsl
add
push
fwait
pop
pop
stc
jae
movsb
push
add
ds
pop
push
dec
loope
inc
sti
xchg
add
inc
push
xchg
adc
les
push
out
negb
dec
ds
pushf
scas
addr16
xor
push
repz
xor
fdivrs
mov
mov
cltd
mov
jle
dec
mov
sbb
lods
cmp
outsl
mov
test
push
pop
cmp
dec
jno
xchg
and
mov
inc
pop
jb
imul
sbb
mov
outsb
test
pop
xor
mov
mov
pop
xlat
xchg
cmp
mov
or
inc
add
adc
jge
jno
ret
fsubl
sahf
dec
fisubrs
xchg
subl
clc
and
mov
jp
insb
mov
notl
mov
mov
push
cmp
cmp
mov
add
cmp
stc
jecxz
adc
sbb
sub
loopne
dec
pop
jbe
leave
popa
fwait
push
mov
out
out
shrb
xchg
aad
data16
jnp
sub
fs
fs
loopne
push
adc
out
jb
dec
fsubrl
push
mov
daa
push
push
mov
xlat
mov
cmpsl
leave
outsb
push
inc
aam
rolb
test
mov
pop
pop
jge
dec
or
jns
or
adc
pop
in
negb
inc
pop
fmull
push
les
dec
stc
mov
rcll
aam
mov
mov
stos
cmc
xchg
data16
cmc
pop
xor
xchg
push
cmp
cmp
sub
pop
sbb
and
fnstenv
push
xlat
lds
pop
sahf
inc
or
mov
mov
jne
and
les
add
cwtl
mov
mov
outsl
addr16
out
mov
std
pop
xchg
xor
fidivs
sbb
inc
push
mov
dec
jbe
aad
mov
adc
fwait
stos
mov
pop
push
inc
push
xlat
adc
mov
xor
je
enter
in
inc
aad
rcll
xchg
xlat
cmp
lret
jbe
lret
jge
push
in
lahf
cs
jecxz
cmpsl
lea
arpl
adc
clc
imul
cld
cltd
add
dec
fcoms
jns
xchg
adc
test
andl
pop
mov
roll
mov
cmc
lahf
cmpsl
cmp
fistl
xor
xor
lods
lcall
inc
mov
sbb
pop
jb
push
neg
jo
pop
scas
push
stos
mov
sbb
data16
adc
hlt
std
jb
jno
addr16
or
jno
mov
adc
lretw
xor
sub
ret
jge
mov
and
push
hlt
push
lds
xor
les
xchg
inc
into
push
push
jbe
cld
lods
xchg
dec
imull
add
popa
aam
stos
les
and
loop
fistpl
push
xor
push
pop
pop
jg
movsl
mov
repz
push
int3
mov
mov
lods
jb
fisubl
out
aaa
cmp
pop
sub
xchg
cli
add
adcl
xchg
xchg
jl
dec
daa
pop
or
idivb
xchg
pusha
and
clc
push
fstpt
jno
push
adc
es
xchg
jecxz
pop
inc
pushf
xlat
aas
fcomps
pushf
mov
xlat
and
mov
aas
mov
pop
jl
loop
shrb
maskmovq
notl
cld
cltd
add
mov
inc
clc
aas
xchg
and
add
and
js
ljmp
jecxz
leave
filds
add
cmp
jns
addb
sub
out
mov
ja
lcall
pop
add
sub
or
inc
xlat
cld
push
or
sub
mov
sbb
inc
push
test
adc
xor
xchg
movsb
stos
add
test
dec
in
push
insb
dec
je
stc
mov
pop
cmc
push
ror
out
aam
mov
fs
sarb
mov
mov
mov
jne
sbb
loopne
mov
test
mov
lds
xchg
scas
sti
dec
addl
xchg
jmp
xor
imull
mov
ja
bound
leave
out
jmp
xchg
ror
sbb
in
push
mov
add
mov
rcll
xor
gs
or
into
inc
test
pop
sub
dec
sub
jp
loope
jns
in
imul
fs
cmc
mov
lahf
adc
bnd
out
adc
popa
mov
pop
ds
xorl
lret
aas
sahf
testl
orb
fisttpll
aad
pop
out
dec
stos
arpl
stc
fsubrl
nop
mov
stc
jmp
inc
sbb
lock
xchg
sbbb
cwtl
fdivs
sbb
adc
rcr
outsl
or
push
sbb
push
aaa
orb
and
add
shl
dec
lods
mov
cmc
lahf
mov
pop
orb
sbb
add
jo
shlb
shl
adc
or
movsb
fistps
add
or
adc
pop
test
jns
pop
sub
jp
and
ret
leave
ljmp
inc
adc
xchg
jg
ja
pop
fisttpl
jo
mov
add
insl
aam
and
mov
xorb
imul
fcmovnb
sub
xchg
mov
and
ds
dec
pushf
enter
mov
ss
dec
sbb
fwait
sub
les
enter
push
jle
push
leave
test
leave
int
or
sub
int
adc
mov
xchg
icebp
cs
popa
int
inc
ja
mov
addr16
dec
cmp
int
mov
inc
lods
inc
xchg
lret
and
push
mov
adc
mov
pop
jp
es
aam
test
imulb
cmpsl
daa
xchg
mov
mov
js
fcoms
sub
pop
cmp
popf
imul
imul
lock
mov
sub
repz
cmp
ret
scas
cwtl
clc
fwait
push
push
cmc
jns
fcoms
and
add
inc
fs
roll
mov
push
inc
fistps
dec
out
mov
sbb
lret
xor
pop
lods
mov
lret
rcll
sbbb
jge
sub
rolb
sub
sbbb
stos
stos
daa
aaa
push
sti
dec
cmp
pushf
mov
push
aaa
test
imul
pop
movsl
mov
orl
push
bound
sarb
mov
bound
ljmp
aad
inc
dec
jg
popa
jle
testb
mov
imul
insb
lock
rcr
xchg
or
rclb
sti
mov
enter
inc
xor
sahf
addr16
mov
fiadds
mov
pop
lret
sbb
push
jge
mov
sub
xchg
iret
cwtl
in
sbb
sti
cmp
mov
enter
inc
sub
into
ret
cltd
int3
jns
enter
loope
adc
xchg
lock
cltd
cmp
mov
push
mov
in
mov
sbb
and
mov
loop
sub
fs
pop
cltd
in
outsb
add
pop
loope
stos
pop
lret
sub
sarb
adc
xor
stos
mov
jbe
cmp
lods
sub
sub
mov
mov
and
cld
cmp
jecxz
or
imul
cmp
cltd
sbb
and
mov
push
outsl
push
or
and
test
lds
aam
out
sbb
popf
aad
divb
push
mov
in
incl
inc
fsubrs
adc
loop
inc
lods
inc
pop
lods
out
inc
int
jo
cmp
ficoms
divl
int3
cli
popf
xor
add
jecxz
ja
scas
jbe
inc
jbe
test
aaa
shl
loopne
loope
or
cmovb
test
xchg
sub
sbb
mov
fwait
sti
mov
cmp
les
int3
xchg
call
or
pushf
into
xchg
shl
cmp
xor
in
fimull
push
mov
leave
aas
dec
repnz
repnz
cmp
movsl
das
movl
popf
mov
imul
dec
mov
xor
cs
negl
inc
mov
lcall
loope
mov
sbb
jb
cld
adc
xor
dec
pusha
fldt
dec
xor
mov
into
es
and
mov
dec
pop
addl
in
lods
imul
mov
pop
icebp
mov
mov
mov
push
icebp
push
jge
push
popf
lods
mov
dec
movsb
movhps
ret
dec
int
and
xchg
decb
push
ret
cltd
pusha
inc
out
sarl
pop
mov
lock
call
ret
or
not
push
xchg
mov
xchg
sbb
rcll
lret
adc
inc
mov
shll
in
xchg
ds
repz
jge
movsl
adc
adc
dec
rolb
mov
cwtl
push
stos
insl
xor
or
xor
fisubrl
inc
dec
sbb
scas
sub
iret
pop
push
adc
lea
or
pop
dec
dec
dec
mov
inc
cmp
pop
lods
adc
addl
cmpsb
add
inc
jl
push
stos
fcmovu
orb
mov
lret
and
cmp
movsl
pop
sbb
jmp
cltd
call
xlat
sub
movsl
pop
ss
test
loope
push
cltd
adc
xor
and
xor
push
cmp
and
pop
les
mov
scas
fwait
outsb
fdiv
scas
jg
je
adc
std
daa
test
lods
arpl
cmpsb
das
cs
push
lcall
xor
lods
lahf
dec
out
adc
mov
scas
icebp
out
or
pop
pop
xchg
int
push
loope
stos
mov
xchg
add
int3
jns
jecxz
jns
cmp
sub
mov
call
inc
dec
iret
xor
cmpneqps
jecxz
jae
aad
sarl
loopne
dec
in
sar
push
daa
or
test
xchg
mov
sarl
add
adc
inc
adc
adc
stos
inc
repz
sbb
aad
cwtl
push
adc
fs
sub
dec
inc
cld
nop
sub
dec
push
je
negb
insl
mov
mov
jg
icebp
incb
insb
sub
rorb
adcl
mov
pop
pop
repnz
fsts
test
les
mov
pop
js
repz
leave
icebp
out
mov
je
jmp
push
subl
add
mov
in
arpl
xchg
mov
fsubrs
ljmp
dec
jl
or
outsb
xlat
or
and
lea
mov
dec
inc
mov
push
jmp
xchg
lahf
mov
jg
add
and
xor
mov
stos
xor
cmp
dec
mov
cwtl
pop
mov
repz
loop
hlt
inc
mov
or
dec
mov
mov
dec
scas
fs
test
xchg
mov
mov
pop
ds
fsubr
data16
push
bound
push
xor
push
nop
dec
xchg
std
icebp
mov
adcl
addr16
js
xchg
adc
dec
xorl
sub
fisubl
adc
inc
push
add
scas
inc
mov
repz
dec
dec
fstl
pop
inc
movsb
jne
outsb
js
sub
or
lods
in
shlb
xchg
mov
dec
leave
les
movq
dec
lret
xlat
pop
js
mov
xchg
js
adc
setle
cmp
shrb
lock
xor
lods
mov
push
jo
cwtl
push
popa
sbb
jnp
jne
stc
mov
push
pop
mov
enter
pop
fcoml
pop
loop
mov
enter
std
imul
sub
divb
icebp
mov
cmova
sub
mov
xchg
hlt
std
stc
les
cld
lea
and
xchg
sti
mov
cmpsl
adcb
in
stc
jne
mov
xchg
movsl
mov
in
jmp
inc
and
fsubl
push
rorb
lea
jno
loop
in
pop
pop
iret
cmpsb
repnz
rorl
xchg
fiaddl
pop
and
in
sub
jns
div
sub
jp
push
test
pusha
push
pop
jbe
imul
mov
cmp
jg
cltd
cwtl
pushf
test
jp
sbb
pop
pop
and
sbb
imul
pop
xchg
add
lret
mov
jg
orb
mov
xchg
ret
pop
aaa
cmp
pop
adc
test
andb
lds
push
xorl
iret
test
jae
sub
jns
pop
sbb
or
jo
sahf
fisubs
aaa
popa
adc
cltd
testl
cs
jns
cmp
repnz
hlt
notl
or
xlat
lret
loopne
mov
or
sub
lret
xchg
sub
rcr
mov
or
daa
es
mov
shrl
push
int
cmpsb
mov
or
int
xlat
lods
mov
sub
addr16
in
cmp
inc
jp
dec
jmp
scas
xor
andb
dec
cmp
lods
or
cltd
jbe
fwait
rcrb
les
add
jmp
bound
xchg
xor
cli
cs
in
cmpsb
jo
xor
frstor
clc
sbb
mov
shrb
inc
sbb
rclb
fs
dec
ds
icebp
add
xor
and
das
iret
sub
xchg
sti
rorl
sbb
add
xchg
mov
ss
push
pusha
sub
cmp
lret
pop
mov
mov
dec
adc
andl
js
and
test
xchg
pop
push
pop
xlat
addr16
cmp
push
mov
add
inc
shlb
test
ds
adc
loopne
lds
jmp
push
jle
scas
bound
xchg
imull
inc
or
iret
out
jmp
jb
out
and
push
icebp
fnstsw
xchg
adc
dec
mov
jne
push
ss
fwait
mov
ja
dec
push
stos
fnstenv
dec
sti
shll
push
fldl
aas
adc
adc
push
mov
lret
mov
ds
adcl
xorl
testl
add
hlt
xor
fdivrs
int
sbb
jge
fidivrs
inc
jbe
mov
stc
into
cmp
rcrl
ret
sub
call
in
inc
dec
mov
adc
add
add
jecxz
ss
inc
mov
stos
pop
mov
out
pop
scas
stos
add
ljmp
mov
lea
add
mov
inc
bnd
test
das
push
inc
sub
add
pop
bound
sbb
lods
sbb
mov
das
rcrb
xor
mov
fwait
dec
and
cltd
ret
adc
lods
scas
jle
daa
and
lret
scas
js
call
cltd
mov
mov
sub
std
sbbb
shl
lret
gs
repnz
jb
xchg
xchg
decb
nop
in
xchg
add
sbb
xor
imul
push
cmpsl
pop
ljmp
jg
push
ds
cmp
xor
pushf
mov
scas
jb
or
lret
push
testb
cmpsl
fmull
xchg
repz
sbb
cmpsb
push
adc
shl
jle
test
xor
pushf
sbbb
mov
std
sub
lock
into
leave
decb
aam
sbb
dec
pop
pop
cld
adc
add
inc
dec
ja
or
test
push
inc
push
xchg
shlb
sti
or
or
pop
and
jae
clc
stos
jb
into
mov
mov
std
leave
pop
xlat
in
dec
mov
xor
cld
push
inc
sbb
das
cmp
sub
rcl
add
repnz
lods
jg
fidivrs
mov
push
inc
pop
dec
pusha
addr16
sbb
xchg
dec
lret
jb
inc
push
sub
or
or
das
mov
outsl
push
je
dec
push
mov
xor
fcompl
pop
outsl
inc
dec
lcall
push
fisttpll
push
cmp
repz
cmp
aad
add
imul
flds
or
or
push
jp
mov
adc
xchg
xlat
adc
xchg
insb
jno
psadbw
inc
rcrb
bnd
sub
iret
sbb
mov
jo
test
mov
dec
gs
popa
and
ja
mov
fdivrl
fdivl
push
dec
scas
cmpxchg
dec
pop
cs
repnz
mov
int3
mov
mov
pop
iret
mov
push
aas
push
push
jb
movsl
fwait
push
iret
dec
gs
lcall
inc
mov
cmp
push
jle
add
stc
movsb
pop
pop
sbb
cwtl
mov
sbb
push
shrb
cmp
jmp
cltd
lahf
movsl
jecxz
jb
add
mov
icebp
out
jns
in
divl
xchg
nop
sub
movq
inc
jnp
imul
add
arpl
lret
inc
mov
cmp
int3
lods
in
pop
int
adc
add
push
adc
pop
sub
mov
es
adc
je
push
dec
call
pop
mov
jnp
adc
outsl
imul
mov
add
cmpsl
and
mov
mov
lock
std
push
mov
jecxz
mov
mov
loop
out
test
push
jns
push
cmc
xor
xchg
mov
fwait
jecxz
ljmp
lahf
pop
mov
std
pop
mov
int
hlt
push
adc
mov
dec
lds
ljmp
in
daa
lahf
js
mov
and
lret
cmpl
mov
mov
test
mov
xor
lds
ret
or
hlt
lahf
adc
mov
mov
dec
imul
outsb
mov
les
xchg
dec
hlt
std
adc
jne
cmp
cmp
repz
test
repz
adc
movsl
push
or
mov
xor
push
dec
fdiv
xor
mov
les
and
jl
dec
sti
xchg
iret
roll
lock
incl
cltd
jne
mov
scas
sub
loop
mov
mov
in
in
or
movsl
cmp
arpl
mov
pop
fsts
loope
lods
sub
imul
sbb
fsts
push
xchg
rcll
jb
les
lret
inc
dec
mov
inc
out
mov
pop
stc
jmp
xchg
lcall
mov
push
jae
insb
ja
dec
mov
loopne
inc
ljmp
cmpsb
aaa
add
jb
ror
jne
pop
test
sub
lret
aas
mov
add
add
sbb
aam
inc
sbb
popa
adc
or
inc
fwait
dec
pop
cmpsl
pop
cwtl
cmp
sub
mov
js
out
lahf
jl
inc
rol
jb
lods
xchg
scas
outsb
xchg
andb
and
stc
ss
popa
rcrl
jne
gs
and
in
pop
xchg
pop
adc
jno
out
xchg
cli
adc
bound
adc
dec
pop
mov
out
cltd
mov
lcall
mov
push
icebp
jb
add
jo
add
shlb
mov
mov
ficompl
repnz
imul
sub
push
repnz
mov
push
lock
jb
push
sbb
ret
xchg
sbb
push
mov
dec
imul
es
xchg
sarb
push
lea
enter
xor
inc
aaa
inc
mov
or
cmp
andl
aaa
arpl
mov
pop
outsb
das
fidivl
outsl
fstpl
jbe
inc
int
fldcw
sub
mov
sbb
adc
pop
das
pop
mov
aam
fidivs
into
lock
popa
incb
sub
loop
jmp
icebp
pop
hlt
pop
scas
jecxz
jle
mov
enter
cmp
js
jge
outsb
jl
sub
addl
dec
sbb
xchg
outsl
mov
adc
xchg
add
or
mov
and
aas
sbb
test
mov
ljmp
lock
push
test
mov
xchg
btrl
mov
jns
adc
dec
pop
out
mov
cmp
loopne
decl
or
rcrb
and
insl
mov
cmp
jmp
lret
cli
imul
inc
mov
mov
test
push
clc
jmp
ljmp
adc
and
inc
stc
hlt
or
adc
fwait
aam
xchg
dec
and
popf
cmpsb
mov
add
loop
jl
xchg
jp
pop
xchg
dec
pop
sahf
fldenv
xor
stc
or
mov
jle
jmp
mov
ja
pop
negl
or
fsubl
stos
cmp
call
dec
mov
cmp
into
pop
repz
adc
push
test
imull
out
test
add
inc
sbb
cmp
mov
jge
push
or
inc
in
call
and
dec
test
jp
mov
adc
xor
ja
out
dec
das
lds
gs
loop
and
testb
xchg
lcall
rcll
mov
aam
pop
cmp
rorl
sub
push
pop
cmp
mov
mov
insb
cmp
pop
ja
and
or
and
jb
pop
mov
adc
ret
lods
int3
cld
mov
lods
cmc
loope
mov
ret
mov
inc
ja
sbb
lret
imul
into
fwait
cmpsb
aas
sub
leave
stos
into
out
push
cmpb
cmc
inc
xchg
jmp
fstpt
xor
mov
dec
push
cmpsl
lcall
inc
pop
push
pop
inc
out
mov
mov
loop
repnz
sub
jle
dec
flds
jnp
loopne
add
mov
mov
lods
in
adc
mov
dec
test
inc
arpl
jge
in
scas
popa
loope
iret
mov
outsl
inc
cmp
popf
das
xor
mov
es
ret
enter
loopne
pop
push
js
adc
jne
imul
les
sub
mov
adc
pop
daa
xchg
push
push
lock
mov
sarb
sbb
sar
lret
mov
cmpsb
aaa
mov
iret
add
cltd
mov
lret
fbstp
lock
rorl
mov
repz
mov
arpl
shll
scas
pop
nop
bound
test
inc
push
mov
pop
gs
jns
fcomi
mov
pop
dec
mov
mov
bnd
xchg
add
xor
scas
insb
dec
sub
pushf
inc
int3
cmpsl
ja
into
jmp
jns
ret
add
fwait
sub
xchg
xchg
xchg
push
stos
add
or
addr16
lret
sub
pop
sbb
adcb
aas
ret
aad
inc
cmpsb
js
or
jo,pn
cltd
pop
inc
adc
dec
pop
lret
lcall
jl
in
pop
adc
push
loope
fwait
push
inc
hlt
jl
cltd
rcl
gs
jmp
xor
push
lods
shlb
loope
mov
sub
lret
negl
and
mov
nop
and
sahf
jge
sub
aad
lods
sti
or
push
cs
mov
outsb
in
push
imul
out
xchg
push
inc
mov
add
scas
mov
push
call
test
jns
jnp
add
fxch
les
xchg
and
jmp
cmpsb
sbb
movsb
mov
stc
aas
add
lret
ljmp
popf
and
jl
and
leave
mov
lods
popf
and
cmp
daa
ret
xor
fldcw
ret
mov
mov
and
in
and
fldl
adc
popa
push
sbb
sub
ret
dec
das
dec
mov
dec
in
add
or
lret
dec
mov
mov
aad
sbb
jne
or
daa
mov
push
pop
add
jae
out
inc
pop
je
inc
sub
data16
jmp
fdivl
push
leave
sub
and
or
sub
lret
hlt
mov
or
sbb
adc
adc
mov
enter
in
pop
sub
adc
xor
leave
roll
add
xor
adc
imul
jno
sub
sbb
dec
inc
cli
mov
dec
flds
jbe
sbb
or
aas
push
mov
xchg
test
js
psrld
cmpsb
das
xchg
dec
xchg
mov
out
loopne
loop
sub
pop
dec
je
loop
inc
push
cmpl
dec
repnz
adc
inc
sbb
scas
lock
jl
sub
add
fcomip
fists
inc
ret
pop
lds
out
ret
sahf
insl
or
lcall
imul
xchg
inc
les
push
pop
lret
adc
addb
jge
pusha
bound
outsb
negl
mov
es
inc
xor
inc
orl
pusha
and
jg
cmpsb
xor
mov
mov
icebp
bound
ret
cli
pop
dec
ljmp
push
xchg
sbb
dec
data16
mov
mov
xlat
lods
mov
imul
stos
pop
loop
outsl
es
pop
ret
mov
in
xacquire
mov
cli
lcall
pop
leave
imul
mov
sub
pop
dec
iret
xlat
shlb
dec
pop
ret
cmp
fmull
sub
and
add
xor
push
divb
int3
push
mov
xor
fiaddl
std
push
cld
push
movsl
and
lds
jecxz
incb
inc
insl
mov
sub
mov
dec
cs
maskmovq
testl
sahf
push
dec
and
ja
inc
push
cmp
xchg
cli
dec
pop
ret
push
enter
lds
int3
pop
repnz
pushf
pop
roll
push
vmulps
mov
mov
out
push
inc
rcll
jg
jb
insb
in
push
pop
aam
mov
cs
inc
add
imul
jb
cmp
push
lea
or
push
aaa
push
aaa
aas
scas
imul
gs
dec
jne
out
jge
scas
adc
insb
out
or
jmp
cmp
out
mov
out
xor
mov
mov
sub
cmp
inc
inc
fldl
jno
leave
aaa
in
and
cmc
push
insl
int
ret
and
xlat
pop
je
aas
xchg
dec
cld
sbb
mov
pop
in
movsl
inc
xchg
mov
arpl
lods
daa
movsb
scas
mov
addr16
cmpsl
inc
pop
cmp
inc
jns
mov
add
lret
loop
imul
mov
movsl
stos
repnz
xchg
cltd
add
aam
mov
adc
mov
cmp
stc
clc
push
xchg
sahf
fs
push
mov
add
mov
xchg
pop
inc
enter
shr
mov
mov
push
xchg
fs
outsb
mov
mov
push
rcll
push
sbb
push
data16
sub
dec
cmpsl
mov
notb
hlt
ss
stos
dec
es
push
icebp
hlt
push
sarl
mov
xor
push
inc
push
sub
and
daa
leave
icebp
mov
lock
outsl
xchg
mov
cmpsb
sbb
add
sarl
xorl
outsb
popf
jnp
cmp
lock
int
aas
movzbl
jbe
idiv
sub
xchg
add
js
jb
dec
cmp
mov
and
xchg
push
shl
call
mov
sti
mov
ret
lods
loop
fimull
aaa
jp
int3
add
jo,pt
bound
fstps
push
sub
lods
cmp
imul
mov
out
out
dec
into
mov
pop
ss
lret
dec
sarb
daa
cli
inc
sub
out
jle
std
xchg
lret
fldt
mov
sbb
lock
cmpsb
or
mov
fisubrl
mov
mov
scas
leave
rorl
jb
nop
andnps
mov
testb
jb
push
add
scas
shrb
pop
aas
int3
mov
loopne
xchg
das
mov
das
movsb
and
mov
or
xor
imul
xor
into
inc
fnstsw
jo
mov
pop
lret
cmp
mov
adc
test
cmpsb
into
cmpl
add
pop
push
stos
mov
ja
cmp
inc
pop
and
dec
sti
lea
ret
out
adc
cltd
insl
sbb
push
ret
and
stos
lods
xor
fbld
push
mov
adc
movlps
xor
pop
mov
push
cltd
push
divb
mov
inc
test
test
xor
andl
mov
sub
pop
push
dec
rcll
or
mov
insl
mov
pushf
push
and
push
mov
add
ds
jmp
nop
or
or
data16
jne
xlat
push
pop
es
outsb
xor
jo
push
push
jns
and
pusha
mov
shrl
shll
aas
mov
xor
mov
testl
gs
icebp
sbb
push
xor
mov
fs
adc
fcomps
or
mov
les
mov
xlat
push
adcl
pusha
mov
cmp
xor
jl
pop
std
mov
push
inc
stos
cmp
inc
jns
adc
jo
push
mov
or
add
adc
push
jno
enter
mov
mov
sahf
or
cmpsb
arpl
mov
xchg
push
and
mov
xchg
movsl
inc
push
push
cltd
jae
pop
mov
dec
sbbl
add
xchg
jb
ret
pop
sbb
fsub
aam
mov
sbb
push
fidivrs
mov
mov
push
hlt
mov
jne
popa
mov
mov
adc
lret
cmpsb
adc
dec
push
jecxz
inc
scas
sub
inc
mov
pop
fucomip
fistpll
dec
xchg
out
mov
add
daa
stos
jae,pn
jmp
dec
movsb
fsubrs
scas
loopne
pushf
add
dec
pusha
dec
push
or
adc
xor
jne
fsubrl
cmp
out
out
das
add
or
adc
add
imul
mov
mov
adc
pushf
test
gs
inc
mov
jbe
dec
sbb
hlt
loope
sbb
jecxz
mov
call
inc
fimull
xlat
dec
xchg
les
sbb
xorb
loop
sti
out
add
jp
cmpsl
pusha
popf
rcrb
imul
jle
xor
ja
mov
clc
mov
call
fcompl
ljmp
fsubrs
add
or
cmp
xchg
sub
cmp
fldz
cld
adc
inc
scas
mov
ja
aaa
fwait
ret
in
xchg
in
stos
inc
xchg
scas
test
inc
jmp
and
ss
loopne
dec
stc
movsb
out
scas
mov
outsb
ret
mov
test
aam
and
dec
std
push
cmp
adc
mov
enter
or
push
adc
xor
ds
jecxz
or
and
movsl
and
insl
xchg
and
push
mov
jne
dec
and
imul
js
outsb
cmpsl
int3
jnp
jp
dec
jne
lea
push
xchg
lea
cwtl
popf
jecxz
es
and
ja
xor
dec
int3
cmpsl
jmp
addr16
mov
push
insb
sub
or
sti
inc
out
adc
jno
pop
mov
mov
jo
in
jg
mov
test
jmp
push
jle
bound
insb
sub
cmp
jle
leave
fsubrl
fstpt
mov
shll
fadds
sbb
cltd
dec
dec
clc
mov
cli
subl
iret
and
or
or
pop
cmpsb
inc
imul
les
sub
jb
adc
sbb
test
hlt
sbbb
adc
xor
jp
push
mov
bound
and
out
adc
adc
mov
aaa
push
fcomi
repz
push
dec
out
sahf
push
mov
mov
int3
jo
sub
leave
adc
cmpsl
xor
js
sbb
xchg
fcomp
int
lods
lcall
adc
and
bsf
pop
sub
out
cs
pop
sarl
ret
cli
mov
jne
std
adc
cmp
push
jne
rclb
sbb
mov
mov
cmp
sbbb
mov
in
or
stc
arpl
mov
lods
cmp
add
scas
int
push
xchg
jge
subl
outsb
xor
dec
inc
ja
sbb
pop
loope
or
mov
scas
pop
adc
mov
cmp
fdivrp
xlat
mov
inc
xor
mov
jmp
or
fs
push
push
std
xchg
adc
jnp
push
dec
fadd
mov
sub
sbb
lahf
sbb
repz
lods
mov
ret
add
dec
ss
push
call
inc
inc
xor
cli
push
rcll
test
icebp
pop
sahf
popa
int
lret
xchg
in
xor
mov
and
mov
inc
sbb
cmp
dec
test
xor
jl
xorb
pushf
fistpll
ja
lds
cwtl
jno
jb
push
push
push
mov
mov
stos
daa
imul
mov
lahf
nop
loope
shlb
movsb
cli
jns
fmull
cmp
mov
add
push
inc
inc
arpl
pop
shrb
mov
sub
push
in
pop
fisubs
jmp
push
rorl
or
ds
dec
jae
outsl
sti
sub
cmp
xchg
push
xchg
inc
pop
ljmp
dec
bound
std
fldenv
lret
fsubp
mov
and
jle
mov
cmp
xchg
jmp
repz
scas
xchg
mov
je
jl
scas
maskmovq
negl
push
test
inc
dec
xchg
test
push
aas
dec
add
imul
ss
shll
pop
pop
push
ljmp
lcall
pop
push
insl
dec
mov
jo
mov
push
mov
jmp
sbb
xor
sub
sarl
popf
daa
dec
mov
out
stos
sarl
call
lock
mov
pop
pop
mov
cli
sub
pusha
mov
mov
iret
cmp
mov
call
test
cmp
pop
not
test
push
push
or
pop
aad
inc
pop
xor
inc
sub
test
int
les
fisttpl
mov
mov
cmp
shr
mov
mov
cld
cmp
xchg
ljmp
or
hlt
add
pop
es
in
push
arpl
inc
lods
pop
or
mov
add
jge
cltd
imul
clc
jp
sbb
mov
push
cmpxchg
lahf
xor
pop
push
pop
or
outsb
adc
stos
pop
call
push
imul
mov
fnstenv
pusha
cs
ret
lods
pop
sbb
push
adc
xor
popf
js
inc
sub
rep
test
xchg
jl
pop
or
adc
rorb
cmp
inc
xor
dec
and
jno
lret
cs
push
movsl
mov
lods
sub
mov
xchg
test
xchg
ficoms
loopne
faddl
mov
lea
push
pusha
scas
jecxz
or
mov
fistpll
and
rcr
out
out
pop
stos
mov
adc
dec
cltd
cld
aaa
pop
int3
lahf
out
mov
pop
mov
mov
cld
insb
jl
push
jno
popf
mov
testb
and
pop
out
out
stos
les
ja
outsl
pop
and
inc
fistpl
insb
or
xchg
cmc
adc
sub
test
movsb
xchg
mov
sti
push
push
xchg
adcb
inc
adc
jne
mov
mov
sbbb
pop
push
xor
test
or
cmp
sub
push
cltd
mov
sub
pop
adc
mov
pop
xor
fcmove
outsb
in
pop
or
jns
dec
xor
daa
mov
mov
scas
xchg
enter
add
jle
mov
fucomp
fs
je
sbb
inc
pusha
cmpsl
cli
nop
push
dec
lock
add
jnp
popa
mov
pop
in
cmc
jg,pn
pop
push
outsl
into
ficompl
lds
cmpsl
sahf
or
sub
out
call
push
into
or
inc
shl
lret
shr
int
cltd
jne
test
and
psubw
mov
shrb
jne
and
test
test
aas
sbb
mov
xchg
addr16
sahf
pop
test
cmp
mov
sbb
lea
out
test
adc
sub
incb
push
enter
mov
sbb
xchg
scas
sbb
loop
cli
shr
pop
lret
mov
add
pop
mov
lea
lcall
fcoms
inc
out
push
test
dec
adc
in
push
imul
pop
ret
scas
add
cld
mov
pop
je
xchg
sbb
fldcw
and
mov
inc
xchg
sbb
hlt
sbb
push
sub
sbb
mov
mov
xchg
or
jnp
push
mov
pop
mov
out
jae
or
jge
fwait
ds
mov
mov
xchg
xchg
dec
fmuls
cmp
arpl
xchg
pop
xchg
push
adc
and
mov
mov
sbb
inc
push
pop
jg
or
repz
outsl
lahf
jl
mov
fdivrl
add
ljmp
push
xchg
sbb
xchg
roll
bnd
xor
mov
je
or
mov
bound
xchg
pop
notb
cmp
dec
adc
cmpl
push
jb
jne
frndint
in
pop
jecxz
push
icebp
popa
shlb
push
sti
and
cmp
xlat
lock
mov
xor
aaa
movsl
imulb
cmp
arpl
outsb
insb
je
loop
addr16
pop
lea
jns
jl
mov
sbbb
ret
lret
push
mov
mov
in
pop
popf
sub
cmc
dec
adc
sub
push
stc
jle
test
adc
test
bound
loopne
scas
divl
pop
aaa
jecxz
mov
inc
dec
cmp
and
scas
fs
adc
pop
cmc
sbb
pop
faddl
sti
neg
cmpsb
or
dec
jns
mov
je
icebp
test
add
ret
mov
roll
loope
mov
mov
loopne
dec
addb
cmp
cmp
mov
outsb
adc
inc
push
mov
push
enter
add
sarl
daa
mov
loop
rcll
movsl
and
fsubrl
fwait
push
rcrb
mov
das
lcall
out
push
dec
scas
xlat
mov
pop
xchg
mov
xorl
mov
mov
xor
in
mov
out
jae
mov
sub
xchg
jnp
jl
xchg
vcvtsd2si
popf
cmpsb
rcr
sub
pop
int3
jae
mov
jge
and
mov
imul
xchg
jae
sbb
mov
xchg
pop
xor
ds
push
ljmp
jnp
or
in
je
sbb
mov
aas
xchg
test
mov
in
jne
movsl
test
loope
inc
adc
test
in
dec
insl
add
push
push
pop
arpl
fcmovnu
jns
in
lret
adc
xchg
inc
shl
and
xchg
aam
orb
popf
xchg
andl
insl
sbb
dec
mov
scas
cld
popa
jle
inc
jge
test
inc
mov
xchg
mov
and
add
xchg
mov
xor
or
jmp
jge
out
mov
xchg
test
and
add
in
xchg
and
sti
cld
test
mov
push
pop
fwait
sti
jle
adc
loopne
mov
mov
fdivs
daa
adc
mov
int3
jnp
adc
stos
add
test
and
and
decb
dec
jns
xchg
bound
das
fs
out
adc
add
stos
fiaddl
xchg
jle
lcall
xchg
and
cmc
jns
std
sbb
fsubs
jl
push
iret
pop
nop
sub
daa
leave
pop
cmp
lcall
mov
cs
mov
dec
sub
or
lcall
jne
dec
cmp
mov
cmp
outsl
sbb
xchg
jbe
cmp
adcl
and
and
into
popf
sbb
inc
call
cmp
mov
mov
sbb
idivl
sub
push
mov
fs
push
push
stos
mov
push
sahf
in
adc
paddsw
dec
imul
fcoms
cwtl
adc
scas
xor
sbb
dec
cmpl
lods
push
stos
scas
push
push
cmp
aam
mov
or
test
imulb
loop
popa
cwtl
jbe
fstp
out
ret
cmp
cmp
and
dec
add
mov
int
fs
cmpsl
mov
inc
repz
fildll
fimuls
rorb
dec
lock
enter
sbb
push
cmp
in
ror
test
in
xchg
mov
outsb
push
push
push
and
loopne
sub
pop
mov
xrstor
pop
addl
iret
mov
add
inc
repnz
jns
xchg
fstpl
dec
lods
sbb
fistl
mov
inc
fs
jo
jo
mov
pushf
ds
sbb
lock
mull
cmp
decl
rorl
leave
and
in
adcl
lods
sbb
push
jp
cmpl
insb
sbb
cli
stc
mov
cmc
jo
out
pop
jge
xorl
in
xchg
jge
rcrl
mov
push
shl
xlat
lea
es
sarb
jbe
arpl
repnz
jg
dec
pusha
dec
jle
cmc
cld
pushf
pop
lahf
and
pop
daa
shrl
mov
lret
mov
xchg
or
popf
lcall
mull
fsubrl
sbb
jo,pt
mov
in
cmp
mov
call
jnp
pmaxub
and
inc
cmp
sub
fisttpll
inc
nop
sbbl
or
in
cmp
push
sub
hlt
or
cwtl
sub
pop
or
sbb
sbb
pop
xchg
inc
mov
outsb
hlt
ds
dec
push
xor
popa
out
sub
push
mov
add
out
test
test
jb
xchg
xor
jo
mov
sti
lahf
pushf
or
jnp
mov
push
andb
inc
mov
sar
or
lock
jb
mov
xchg
rcrl
dec
xchg
bound
jmp
xor
pusha
enter
stos
outsl
lock
icebp
cld
aad
mov
cmpsl
sbb
in
aas
mov
pop
mov
hlt
das
mov
imul
nop
in
push
mov
and
pop
out
mov
and
jns
pop
sbb
xor
sbb
sbb
lea
mov
lock
iret
xor
bound
in
test
xchg
ja
jae
adc
imull
pop
adc
jb
add
jp
mov
inc
sub
sbb
xor
aad
sbb
jnp
inc
mov
add
sub
je
inc
shrl
aaa
sahf
gs
es
add
push
lcall
and
fmuls
push
pushf
dec
js
popa
adc
fs
jp
daa
lock
pusha
inc
jecxz
mov
dec
dec
cmpsl
js
jne
cli
in
insl
incl
push
xchg
sbb
or
test
pusha
into
mov
decl
mov
ds
cmp
sub
inc
xor
stos
cltd
aaa
push
scas
mov
pop
mov
in
js
into
and
shll
ret
jp
sbb
sub
mov
mov
jno
icebp
imul
adc
dec
xor
test
into
aaa
sbb
xchg
das
or
shll
lods
push
aas
inc
jge
xchg
inc
push
clc
addb
jle
out
out
pop
movsl
and
enter
push
sub
jbe
cmp
lds
push
or
jne
pop
jmp
gs
mov
jle
test
fwait
mov
mov
out
nop
push
and
popf
bound
stos
lahf
loop
imul
ret
das
std
jmp
popf
push
xor
mov
fcmovbe
pop
jle
cmpsl
loope
inc
aad
sti
enter
xor
push
pop
push
popf
imul
loopne
sti
push
in
pusha
mov
xchg
lods
mov
fadds
push
sbb
pop
xchg
push
xchg
cmpl
cmp
push
mov
push
fidivrl
mov
xor
mov
shlb
inc
loopne
xchg
ja
dec
insl
mov
xchg
sub
aas
push
xchg
xchg
daa
in
test
push
das
and
test
insb
and
and
xor
cmp
jp
notl
push
mov
ja
cmc
aad
adc
nop
lods
test
clc
movsb
or
cwtl
out
xchg
pop
adc
adc
push
bound
inc
and
jge
imul
dec
paddsb
lods
push
sarl
ja
adc
pop
push
cltd
mov
dec
test
in
in
loop
jl
cltd
hlt
mov
cs
jecxz
mov
and
cmp
push
mov
cmc
inc
movsl
les
mov
sub
adc
loop
imul
xchg
stos
jno
or
jno
xlat
or
jp
clc
pop
pusha
cmp
leave
ss
out
dec
out
outsl
push
xor
call
dec
les
lds
pop
mov
insl
push
mov
cmp
adc
lods
in
addr16
lahf
or
nop
mov
xchg
mov
loopne
cmp
xor
jb
sbb
cmc
mov
les
and
leave
nop
lahf
mov
outsb
imul
icebp
les
fistps
imul
mov
mov
dec
das
pop
stos
das
jno
pop
loopne
sub
icebp
inc
jecxz
pop
fiadds
mov
dec
cmpsl
inc
mov
enter
jo
or
pushf
in
out
or
push
iret
cli
push
je
sbb
and
test
fidivl
xor
sbb
push
cmp
mull
dec
xor
jl
in
mov
xor
xchg
mov
ljmp
sbb
push
xchg
movsb
adc
bound
shr
push
stc
xchg
jae
jbe
ljmp
pop
jne
stos
andb
adc
jo
or
push
sti
popa
out
adc
push
push
ret
clc
sbb
adc
adc
loopne
insb
movsl
fs
inc
pop
push
push
jae
mov
mov
clc
mov
add
mov
test
jnp
dec
xchg
int3
push
fistps
rcll
push
xchg
mov
insb
addr16
pop
in
cmp
jg
leave
push
outsb
icebp
push
cs
sarb
rolb
in
enter
mov
mov
enter
lods
das
outsl
movsl
pop
pushf
ret
ret
repnz
add
int3
cmc
cmpsl
mov
call
xor
in
mov
fstpt
xorb
pop
and
stos
test
push
add
aam
loopne
lret
jg
jo
inc
in
pop
lods
push
xchg
cmpsb
mov
inc
out
or
and
sahf
negl
out
stc
es
aam
xor
insl
bound
adc
dec
pop
lahf
mov
clc
xor
in
pop
into
stos
aad
nop
mov
mov
add
push
shrb
call
fcomip
jmp
lcall
pop
xor
cmp
push
or
fistpll
loopne
pushaw
out
mov
cmp
xor
daa
int
inc
sub
jns
sbb
push
gs
lea
push
mov
addl
iret
xor
xchg
fld
lea
xchg
out
ja
or
dec
scas
pop
sub
inc
in
stos
add
sbb
sub
sbb
orb
ja
add
aam
test
mov
pop
mov
push
lock
inc
mov
out
sbb
and
dec
xor
jge
movsb
shrl
cmp
fistpl
cmc
pop
xor
or
xchg
icebp
test
lds
cmc
mov
imul
pop
mov
mov
shll
test
inc
imulb
push
or
roll
mov
mov
pop
imul
push
loopne
sub
inc
mov
stos
movsb
mov
in
push
fmull
inc
int
mov
int
fwait
data16
inc
testb
in
mov
pop
insb
push
inc
jae
mov
lahf
jno
js
sub
clc
cmp
js
data16
imul
lret
push
sbb
and
mov
sub
mov
lds
idivl
or
adc
lret
mov
mov
mov
xor
adc
inc
pop
test
fcoml
add
call
sbb
mov
loopne
or
test
dec
cs
pop
adc
and
cmp
inc
push
flds
sub
rcrb
push
pop
out
shlb
jle
fimull
jl
dec
inc
mov
stos
mulb
push
es
es
nop
mull
lcall
mov
cwtl
fwait
inc
mov
pusha
push
das
mov
jl
push
arpl
xor
cmp
jle
mov
or
pop
pushf
xchg
pusha
sbb
dec
leave
cltd
and
clc
pop
push
push
xlat
rol
movsl
pop
loop
and
push
popf
pop
orb
or
add
test
xlat
in
sti
adc
and
aaa
mov
and
xchg
scas
jnp
cmp
add
adc
add
jecxz
push
pop
inc
mov
push
fnsave
out
stos
icebp
mov
jb
das
mov
es
mov
andnps
push
sti
test
and
rolb
ficomps
in
sub
push
fs
pushf
push
jns
ret
cltd
fwait
ret
inc
call
test
jae
adc
inc
out
xor
add
cs
dec
add
lds
pop
stos
cli
mov
in
bound
sbb
imul
mov
stos
sahf
and
movsb
sbbb
adc
dec
in
xorb
fcoms
add
lret
cli
pop
jb
mov
sub
lret
popa
mov
xchg
xor
sub
xor
lahf
inc
jne
fwait
call
enter
inc
subl
add
cmpsb
out
loope
mov
and
xchg
push
clc
pop
icebp
fsubrl
pop
inc
push
mov
inc
in
stos
inc
or
fwait
je
fs
dec
daa
sbb
pop
pop
mov
mov
sbb
data16
negb
jo
jbe
sbbb
sub
inc
jp
ret
add
mov
adc
adcl
fwait
mov
mov
popa
int3
pop
scas
pusha
mov
in
popf
pop
jp
mov
arpl
sbb
cmpsb
movsb
dec
mov
out
addr16
sti
fistps
div
leave
nop
xor
rcrl
inc
cmpsl
cmp
inc
sub
gs
mov
adc
imul
push
inc
pop
vcvtss2sd
inc
or
aas
test
push
in
ja
je
cwtl
repnz
jmp
cmp
test
test
loop
or
mov
pop
xlat
ljmp
dec
test
xorl
dec
neg
clc
sbb
add
dec
cwtl
lret
add
ljmp
daa
add
jp
push
jg
mov
insb
fadds
cmp
int
and
shlb
in
push
cmpsl
adc
mov
jl
inc
loope
or
fildl
jnp
loopne
js
xor
test
pop
and
into
jp
push
push
ret
repz
dec
sahf
inc
aas
pushf
data16
stos
loope
jo
js
inc
es
xchg
or
mov
arpl
dec
or
jmp
movsb
push
xor
mov
push
jae
out
pusha
pop
inc
inc
mov
cmpsb
xchg
or
pushf
imul
fisttpll
jp
add
dec
pop
dec
orb
jo
mov
and
loop
std
ljmp
cmpsl
out
mov
ss
mov
pop
leave
adc
dec
jne
xchg
lcallw
insl
shll
or
ret
test
nop
testb
fwait
add
mov
xchg
xor
pusha
push
push
pusha
out
cmp
enter
das
adc
xchg
cmpsl
movsw
js
pop
ror
adc
in
je
loop
pop
repnz
cs
and
outsl
out
adc
dec
and
jp
nop
xchg
and
xchg
xorb
adc
inc
push
sbb
jmp
imul
in
cmp
adc
lret
popf
pop
push
push
cli
pop
sbb
lahf
or
imul
add
rep
sub
enter
out
js
bound
xchg
xchg
dec
fs
divl
push
sbb
dec
dec
int
dec
mov
push
stos
cli
dec
das
jge
inc
std
jns
jmp
test
aam
inc
pop
sub
dec
jb
adc
sub
adc
lods
mov
into
xchg
dec
jns
dec
jle
out
pop
gs
xchg
hlt
pop
xchg
lcall
mov
add
ret
loope
mov
lret
xor
xor
ds
xchg
imul
lds
enter
adc
daa
jmp
movsb
dec
cmp
push
enter
iret
add
ficompl
popf
aaa
pushf
lea
jo
rol
mov
mulb
aad
cmp
bound
push
jae
xchg
mov
fstps
sbb
xchg
add
fstps
test
inc
sub
lds
cli
addr16
aam
cmp
lret
mov
std
fsubrs
ja
testl
sbb
mov
pop
std
sub
fmul
mov
xchg
add
sahf
pop
mov
sbb
xor
lahf
xor
sbb
xchg
pop
dec
xchg
and
insl
sbb
inc
jbe
shr
fdivrp
cmp
inc
out
clc
adc
loope
jb
loope
fnsave
nop
pop
jb
outsb
push
lahf
ja
cltd
lcall
aaa
dec
lret
mov
ljmp
or
and
inc
in
js
cwtl
or
lahf
sbb
sbb
je
incl
lods
fdivrs
pop
into
imul
add
dec
xor
mov
inc
mov
fwait
mov
shrb
popa
cmp
pop
lods
ret
mov
mov
pop
jno
push
jo
mov
push
push
fs
pop
mov
inc
pop
mov
add
into
popf
adcb
mov
and
repnz
neg
sbbl
scas
jae
addr16
add
and
lahf
sub
std
mov
xlat
in
jmp
push
outsb
test
pop
cmp
insl
sub
jge
jno
shll
mov
repnz
neg
or
scas
and
fidivrl
jno
movsb
loop
push
dec
imul
loopne
fs
mov
rorb
push
repz
push
jecxz
rclb
lret
or
jno
aaa
rcrb
push
aad
dec
or
mov
dec
jg
fnsave
mov
xlat
push
push
or
push
cltd
mov
fcoms
mov
mov
rol
jp
icebp
adc
int3
add
cmp
or
ja
push
int
jne
cmc
daa
cmp
push
xchg
jp
or
iret
cmp
mov
and
push
sub
mov
mov
insb
mov
mov
outsb
add
cmc
lds
stos
in
repnz
pop
es
jne
push
test
loope
lods
cmp
loope
stc
hlt
mov
lock
pop
arpl
or
add
push
mov
lds
adc
cli
sti
xor
rol
out
leave
mov
fwait
aad
lds
insb
shlb
loopne
jns
sbb
lahf
fwait
lcall
arpl
or
cmp
jb
mov
movb
in
sbb
je
mov
mov
fsubrl
test
jmp
lahf
pop
sub
add
ljmp
ss
or
push
and
sub
cli
lods
dec
ljmp
movb
sbb
popf
inc
mov
test
or
jne
jnp
std
inc
test
cs
mov
cli
dec
aad
adc
mov
push
or
inc
adc
nop
rcr
add
and
and
pop
roll
push
push
sbb
fldt
cmp
jmp
inc
pop
pusha
test
pop
mov
js
xlat
aaa
arpl
popf
insb
jnp
sub
add
xlat
fimuls
les
sub
push
arpl
clc
stos
sub
add
xor
and
or
iret
mov
pop
push
inc
mov
mov
mov
cmpb
fcmovnbe
insl
pop
out
mov
mov
sub
cwtl
cmpsl
sub
hlt
iret
lret
mov
sub
pop
xor
mov
call
scas
out
rcr
pop
push
hlt
push
adc
ret
jp
mov
sarl
and
mov
jae
or
lret
adc
push
sbbb
sbbl
sub
pop
dec
xchg
aam
dec
cmp
out
pop
pusha
or
sbb
gs
inc
xchg
pop
xorb
adc
lahf
jp
fisubrl
shlb
pushf
test
je
mov
aas
mov
shll
arpl
xchg
fcmovnu
inc
repz
hlt
add
ret
es
xor
mov
fstl
xchg
movl
mov
sub
repnz
mov
add
sub
popf
cli
xchg
dec
stos
push
mov
sub
sbb
jp
mov
repnz
xchg
cmp
nop
mov
push
adc
jno
pop
and
adc
ret
sub
fcmovnu
cmp
insb
sti
pop
mov
lods
xlat
sahf
mov
into
popf
xor
jle
out
cs
roll
dec
sahf
test
mov
roll
hlt
pop
add
jg
loop
rcrl
mov
jno
jl
push
mov
pop
and
into
stos
dec
mov
jae
in
clc
mov
nop
push
das
test
pop
and
lods
inc
sbb
mov
xor
rcr
add
mov
fwait
stos
jge
push
repz
and
sbb
pop
jo
cwtl
mov
sbb
cmp
dec
jnp
dec
push
fs
int
aas
jge
sbb
into
push
leave
sbb
cmp
cli
push
xchg
lcall
sub
mov
bound
and
jo
sbb
daa
fnstenv
mov
add
sub
cmpsb
test
movsb
lea
lahf
faddl
shll
mov
imul
int3
jecxz
aas
idivb
push
je
cmp
popa
push
push
imul
xchg
adc
cs
sub
mov
insl
adc
test
and
test
cmp
enter
inc
xor
cmp
cli
decl
mov
push
fbstp
mov
or
jns
imul
or
cld
jmp
cmp
cmpsl
jmp
push
mov
pop
bnd
call
sub
in
mov
push
or
jb
int3
lret
test
cmp
loop
das
lods
repnz
push
stos
int
ja
and
dec
push
fldl
enter
iret
xor
gs
add
sbb
sbb
cmpb
push
popf
mov
xor
pop
outsl
ret
outsb
mov
lds
jmp
negb
stos
xor
mov
jp
sbb
jle
mov
pop
sub
xorb
cmpsb
enter
mov
dec
rcrl
mov
addr16
or
lahf
sub
xlat
js
cltd
mov
es
sarl
or
sub
int
lods
inc
loope
popf
aas
test
loop
in
jno
cmpsb
std
mov
in
mov
movsb
xlat
popf
cld
jns
xchg
stc
xor
lret
sahf
rcrb
int
fld
inc
cmp
lret
push
out
lock
push
cmc
outsb
mov
add
pushf
inc
in
nop
jmp
jae
cmp
and
fs
stos
push
and
lret
and
int3
imul
icebp
mov
xchg
push
xlat
cld
mov
jecxz
shlb
push
mov
dec
fmull
notb
xchg
cmc
aam
pop
rcr
inc
lahf
add
push
jge
or
repz
pop
rcr
pusha
mov
in
jmp
sub
sbb
mov
inc
mov
out
call
push
movsb
cmc
push
rol
icebp
push
or
push
jae
dec
out
push
out
mov
jne
das
cmp
das
sub
adc
js
sbb
xchg
jge
jmp
imul
fldenv
test
jns
cmp
movsl
incb
and
ds
lret
sbb
pop
aam
gs
inc
xchg
cmpsl
arpl
mov
push
inc
and
or
dec
xchg
ss
mov
add
mov
add
xor
sub
mov
or
mov
out
sahf
negb
xor
push
addb
mov
push
movl
pop
xchg
mov
int
ja
xor
sti
push
out
imul
cld
testb
mov
in
filds
orl
sub
xorb
arpl
into
bound
and
or
clc
cmp
sahf
push
pop
loop
pusha
iret
push
addr16
lock
icebp
iret
cltd
inc
pusha
inc
sub
outsl
adc
jne
push
inc
insl
ret
mov
cmc
in
ja
inc
test
add
mov
clc
push
lcall
mov
add
push
mov
and
rclb
adc
std
inc
jne
xchg
add
lea
xlat
xor
dec
inc
pop
add
adc
xorl
cld
decl
push
sub
pop
push
inc
in
dec
dec
fs
js
movsl
mov
and
mov
push
mov
addl
addb
int
xchg
jno
cmp
jo
or
add
push
cwtl
or
or
xchg
idivb
cmp
out
sub
andl
daa
outsb
in
cmpsb
test
pop
mov
jp
ror
mov
mov
test
cld
mov
xor
out
add
push
incb
or
lahf
dec
push
adc
sbb
mov
and
inc
push
or
rcr
inc
dec
into
jge
dec
int3
jns
pop
dec
xchg
fistpl
xor
adc
loop
push
mov
jno
xor
pushf
daa
imul
and
or
sbb
int3
xchg
add
dec
out
xchg
in
cmp
add
arpl
mov
xchg
lret
sbb
add
loopne
jl
xor
jmp
pop
pop
iret
jne
mov
mov
sub
mov
arpl
out
out
jecxz
and
arpl
cmp
ss
adc
pushf
fcomps
jl
inc
insl
data16
mov
xlat
pop
jl
push
jno
arpl
mov
xchg
xchg
int
enter
add
inc
xchg
nop
loope
mov
jle
iret
pop
movsb
clc
push
divl
adc
xor
cmpl
and
pop
nop
mov
add
lock
and
mov
jae
aaa
xlat
push
jl
into
mov
mov
std
or
hlt
mov
shr
add
ss
in
imul
inc
xchg
mov
ds
insb
fidivrl
jl
inc
xchg
setl
pop
adc
aad
fdiv
cmpl
stos
mov
dec
sbb
cltd
cmpb
adc
aam
gs
mov
push
cltd
cmpsl
jecxz
xor
std
pusha
adc
cmp
int3
push
jo
popf
adc
mov
rorl
sti
in
gs
mov
and
mov
icebp
inc
cmp
mov
push
mov
jo
mov
das
sub
fcoml
nop
jp
adc
and
jmp
add
sti
xchg
ljmp
out
jno
inc
fbstp
push
rorl
fisubrs
test
fstl
or
mov
shlb
icebp
adc
add
mov
pusha
xchg
mov
xor
outsl
jmp
push
and
pop
push
ds
mov
rcll
mov
xchg
js
cli
dec
xchg
fcmovne
fldt
not
aam
jns
sbb
popa
sbb
jnp
inc
sbb
dec
in
lds
arpl
hlt
decl
imul
jbe
and
sub
sbb
mov
adc
and
add
lock
or
mov
es
bound
inc
shl
dec
inc
mov
pop
push
push
sti
test
sbb
aas
mov
adc
add
das
adc
lret
in
es
dec
or
xor
ljmp
inc
fcompl
pop
shll
sbb
sbb
enter
loop
jmp
sbb
and
int
test
or
es
cmp
dec
mov
lret
adc
adc
sub
lds
loope
lahf
mov
sub
scas
cli
cwtl
popf
add
pop
ds
mov
mov
adc
push
jecxz
iret
faddl
sete
dec
adc
pusha
ret
add
pop
push
sbb
sti
hlt
fs
adcl
pop
das
sub
add
loop
stc
shrl
jne
and
adc
clc
inc
testb
mov
pop
pusha
stos
data16
cmp
popa
dec
negl
add
imul
clc
xlat
or
mov
rorl
mov
lods
dec
adc
xlat
cmpsb
pop
pop
test
or
imul
jo
or
fistps
add
dec
cmp
and
sub
or
jno
dec
out
sub
imul
adc
mov
or
push
jecxz
mov
shrb
push
mov
jno
jmp
ret
cmp
sub
es
bnd
fwait
or
xchg
fiadds
lock
mov
mov
add
fisubrs
sahf
fidivrs
or
lods
push
and
sub
ljmp
pop
jecxz
sub
mov
jecxz
movsl
push
xchg
les
and
fucomi
ja
testl
dec
lahf
jb
outsl
ljmp
cmpsl
in
push
inc
sub
pushf
or
adc
in
jp
fistps
mov
mov
xchg
push
sub
pop
cmp
adc
loop
pop
and
push
pop
pop
pop
dec
stc
mov
shll
les
add
mov
clc
icebp
mov
lret
cmp
aam
mov
imul
in
cmp
scas
push
leave
test
int3
xchg
rcrb
int3
jmp
mov
jg
ret
ss
lret
sbb
sarl
ja
xor
nop
les
pop
in
test
addr16
roll
adc
enter
jae
dec
mov
push
movsb
xlat
mov
adc
push
loopne
sarl
add
mov
data16
int3
add
pop
pop
bound
jl
stc
pushf
fcoml
mov
push
jnp
mov
and
iret
xchg
cmc
sahf
dec
mov
cltd
xor
mov
int3
pushf
pop
cmp
das
pop
addr16
cli
mov
ffree
sbb
in
shrb
aad
push
xlat
lds
ficomps
mov
mov
add
ret
je
sarb
imul
dec
test
cmpsb
mov
fs
fnstcw
adc
lahf
mov
rol
sbb
clc
mov
shll
fs
push
sub
lods
push
lods
rorb
add
mov
sahf
ljmp
push
cld
sti
lock
sbb
jb
push
inc
dec
insl
into
fnstsw
adc
sbb
xor
cmp
cltd
pop
sub
sbb
int3
nop
mov
pop
xor
data16
test
push
mov
sub
jb
scas
or
mov
mov
jl
xor
push
ljmp
lret
mov
mov
call
popf
mov
and
or
lods
lods
inc
movsl
call
or
pop
push
adc
sub
andl
mov
cli
subb
and
jp
icebp
lds
pop
mov
imulb
jae
mov
fcmovbe
test
push
out
xor
std
test
loope
xor
int
push
test
shlb
jecxz
cmpsl
mov
mov
dec
mov
test
test
cmp
shlb
fucomp
sbb
pop
hlt
mov
mov
mov
scas
mov
vpsubusb
mov
or
out
mov
aad
pop
push
or
push
mov
mov
pusha
and
mov
jg
mov
mov
inc
lret
maskmovq
imull
roll
cmp
call
aaa
scas
fdivl
cmpb
movsb
out
pop
xchg
ljmp
rolb
and
call
repnz
insl
icebp
mov
and
iret
xchg
ss
xchg
xor
adc
xor
cmp
lods
std
inc
pushl
jo
pop
xchg
call
xor
jbe
popa
mov
mov
mov
xchg
and
imul
pop
push
js
repnz
mov
repnz
lods
shll
cmc
jno
in
mov
add
popf
push
jmp
xlat
cmp
sarl
scas
icebp
lret
mov
lods
or
pushf
test
aas
repz
push
js
push
inc
add
lret
cmp
mov
inc
enter
push
push
ss
add
adc
scas
inc
insb
xor
pop
test
cmp
and
jg
mov
pusha
orl
flds
mov
cltd
je
add
outsl
dec
clc
test
cltd
adc
inc
sbb
jno
adc
cli
and
and
mov
xchg
sub
xor
mov
outsl
sbb
insl
lods
xchg
inc
or
adc
in
sbb
mov
xchg
dec
loope
scas
adc
fwait
xor
mov
cli
mov
lret
dec
adc
inc
lret
fs
sub
cltd
testb
jnp
pop
xor
js
mov
jo
stos
xchg
out
adc
dec
fstl
or
cmpsb
inc
mov
pop
imul
ficoml
cmp
pop
lock
lret
jo
add
jo
fsts
ja
xchg
ja
xor
icebp
xchg
jecxz
out
cmp
sbb
xchg
scas
jb
sub
push
cmpsb
add
lahf
inc
loop
repnz
xchg
xor
out
push
jbe
add
sahf
lcall
out
ljmp
into
ret
inc
fiadds
sub
inc
arpl
add
fiadds
insb
subb
push
daa
sbbl
cld
stos
pop
jg
mov
outsb
push
xchg
pusha
mov
orb
mov
das
push
das
pop
bound
add
xchg
xlat
xor
and
add
in
mov
ds
jge
jne
inc
fnstenv
sbb
xchg
dec
fistps
pop
neg
nop
lcall
push
std
ret
xchg
inc
inc
dec
cs
dec
les
dec
dec
cltd
mov
mov
pushf
jo
in
rcl
xor
sub
mov
aaa
xchg
ret
lcall
adc
sbb
lret
repz
push
mov
loopne
xchg
sti
pop
xor
subl
mov
mov
jge
pop
fs
out
andl
imul
xchg
jbe
dec
sahf
inc
dec
aas
dec
cld
mov
push
or
pop
mov
xchg
roll
pop
std
push
enter
ror
movb
and
mov
fnstcw
or
sub
xor
movsl
jae
sub
xchg
mov
dec
or
pushf
dec
enter
xor
fcoml
push
sbb
mov
pop
xor
lds
add
pop
ret
pop
int3
or
loopw
rcrb
in
xor
aad
mov
dec
xor
jno
xchg
xor
and
xchg
movsl
sub
mov
push
dec
pop
mov
data16
mov
cmpsl
sti
fldl
add
scas
mov
movsb
inc
lcall
inc
call
rcrl
lahf
cltd
mov
scas
mov
testl
sbb
je
or
jne
pop
or
xlat
lahf
dec
mov
fadd
sbbl
mov
mov
pop
imul
pop
xor
inc
aaa
jae
mov
sti
sub
pop
dec
mov
adc
xorl
imul
fisttps
add
outsl
push
sbb
sub
mov
jnp
jp
jno
call
rcrb
icebp
jne
xchg
ret
jo
mov
pop
mov
adc
fs
add
stos
call
xor
lods
loope
std
push
adc
or
mov
add
ljmp
cli
imul
stc
js
mov
or
loopne
cmp
sahf
sub
int
loope
pop
inc
shll
out
sbb
cmp
imul
lret
sarb
sbb
enter
insl
lret
fwait
mov
pop
in
cmp
movsb
lods
int3
dec
stos
add
lahf
mov
loop
mov
icebp
mov
dec
stos
and
push
lcall
test
sahf
jmp
push
jb
pop
loope
pop
rorl
sub
jns
sub
dec
mov
imul
icebp
or
jg
or
adc
push
pop
adc
push
int3
out
mov
adc
sbb
rorl
loope
mov
or
cmc
jecxz
mov
pop
dec
jge
or
add
popf
dec
mov
in
icebp
jno
daa
or
lahf
lock
aas
in
jns
mov
sub
adcl
je
cltd
aam
dec
jns
loope
ds
mov
jge
dec
lcall
lock
xchg
das
jge
fisubrl
or
stos
mov
jge
jge
pop
icebp
out
push
mov
inc
scas
cli
and
cmp
ds
xlat
es
mov
xchg
lods
lods
jp
or
nop
cmpsb
das
aam
pop
sbbb
imul
fsubr
push
aad
in
mov
mov
jp
xor
mov
push
movsb
stos
xor
xchg
mov
pusha
dec
pop
or
dec
mov
mov
jnp
lods
push
test
sarl
pop
jge
dec
lret
sar
cmp
mov
sbb
inc
loopne
xchg
jle
cmp
in
ljmp
xlat
jle
add
pop
in
lret
shlw
es
orb
fs
push
pop
insb
add
ret
test
in
imul
xor
fisttps
cld
add
negb
out
aad
outsl
jno
push
dec
xorb
sub
insb
insl
add
and
cli
or
pop
jecxz
mov
xchg
imul
ss
cmp
push
inc
fimuls
gs
outsl
out
or
in
mov
jmp
sbb
ds
adc
scas
mov
add
imul
loope
test
hlt
mov
jmp
lret
jmp
pop
push
ret
aas
jl
incb
mov
rolb
jl
cmpsl
jle
push
mov
inc
mov
fadd
push
divl
js
insl
aaa
aas
test
mov
cs
mov
jns
add
and
aam
int3
gs
mov
xchg
xchg
out
repz
rcrb
xchg
loope
xlat
mov
adc
repnz
add
xchg
jge
clc
outsb
jecxz
in
jmp
push
or
call
bound
lds
and
ret
pop
cli
or
sbb
sub
imul
dec
iret
cltd
out
mov
sbb
daa
mov
loopne
test
adc
pop
dec
nop
lea
dec
mov
flds
or
mov
loop
mov
mov
push
daa
pushf
push
outsb
es
sub
shlb
fsubl
leave
xchg
subb
xchg
mov
testl
jge
insb
sub
cmovns
push
rcll
and
lret
insb
imul
stc
and
out
cmpb
jmp
push
adc
and
push
jo
or
repz
loope
sbb
nop
dec
gs
xor
sbb
or
popa
cmpsl
lret
jb
lock
cmpb
mov
cs
mov
int
mov
scas
cmpsb
add
jmp
ja
outsb
pusha
cltd
pop
mov
mov
outsb
fdivrl
dec
or
rcl
arpl
adc
sbb
test
dec
fisttpl
push
xchg
xor
xor
daa
cwtl
jmp
mov
lds
mov
jl
xchg
sbb
mov
jo
shlb
xchg
or
das
fildll
mov
jo
jae
hlt
stos
mov
cli
xchg
lea
test
and
adc
jae
sbb
pop
fisttpll
int3
push
mov
test
pusha
fnstcw
filds
cmp
xor
stos
data16
leave
adc
and
or
fwait
mov
mov
mov
jns
xchg
fdivrp
ja
outsb
inc
push
add
test
sbb
dec
mov
ja
adc
sbb
test
mov
jp
sub
inc
lret
jmp
fnsave
inc
sbb
sbb
fldl
push
jno
fdivs
sbb
sub
xor
test
mov
pop
rorl
shlb
cmpsl
xchg
or
push
xor
test
adc
cmpsb
adc
repnz
insl
mov
and
push
sub
sub
mov
std
jg
add
leave
lock
rclb
mov
add
idivl
jmp
add
sub
or
fistpl
cmp
iret
add
dec
mov
leave
stos
cs
testb
dec
mov
or
pop
sti
aam
sub
xor
out
pop
lahf
cltd
inc
loope
xchg
outsl
int3
fmuls
in
add
imul
testb
mov
inc
insb
inc
imul
mov
add
sub
jge
fmuls
jge
jle
inc
rcrb
lcall
cmp
mov
aad
sbb
sbb
jecxz
mov
inc
push
push
xchg
in
dec
loop
cwtl
pop
test
lods
dec
into
imul
cmp
mov
aas
test
xchg
lret
imul
fidivl
fisubrl
mov
sub
loopne
mov
loope
ret
shll
dec
test
xchg
inc
int3
mov
cmpsl
loopne
sahf
shl
xor
mov
inc
pop
in
sub
int3
lock
lret
outsl
dec
inc
jnp
cmc
rorl
fcomp
cld
loope
adc
lret
mov
adc
fsubrs
daa
int3
cmp
dec
repz
cmp
orb
ret
repnz
xchg
arpl
xchg
pop
imul
jge
cmp
aas
mov
sahf
add
daa
xorb
xor
jmp
lock
arpl
sub
push
es
jne
sbb
das
fucomp
lea
in
lods
push
js
sub
sub
mov
outsl
xlat
mov
and
or
cmp
jecxz
adc
xor
mov
test
fldl
test
xchg
int
in
mov
mov
pop
pusha
fimull
bts
repz
out
jnp
cli
push
testl
fldcw
push
inc
jno
sub
mov
popa
jo
scas
out
push
repz
outsb
lock
and
loope
inc
xor
sub
pop
sbb
xor
movsb
dec
mov
xor
sub
mov
pop
lcall
push
mov
pop
xor
sub
xchg
popl
push
or
lret
jl
jp
in
and
es
push
mov
cmp
adc
imulb
mov
sbb
lret
push
les
lods
lea
clc
ja
mov
xchg
or
clc
popf
rolb
in
pop
adc
dec
fistps
mov
aaa
push
inc
lock
adcb
scas
pusha
test
arpl
jae
xchg
jo
neg
loope
pop
or
xchg
movsb
mov
cwtl
andb
xchg
push
insl
cmp
adc
push
pop
insb
xor
inc
pop
sbb
mov
mov
mov
mov
stos
mov
mov
sbb
insb
mov
xor
pop
aad
dec
aas
jno
bound
cmpsb
adc
add
inc
sbb
adc
or
dec
pop
push
dec
lcall
sub
push
call
add
incb
push
pop
and
lds
andl
das
lds
push
add
mov
dec
aas
int
rcrb
lock
and
mov
in
xor
fisubl
push
push
rcrb
lock
inc
ret
loop
adc
or
sbb
xlat
mov
ret
insl
or
jle
fs
xor
mov
mov
push
mov
call
ret
test
incb
insl
sbb
mov
cmp
int3
loop
cmpsl
mov
or
and
outsl
testb
popa
cltd
lock
fsts
mov
add
jmp
mov
push
cmp
dec
imul
mov
xor
popf
shlb
cld
shl
outsb
aaa
dec
out
mov
jo
pop
sub
adc
fcoml
push
sub
push
cltd
mov
pop
rcl
add
add
jmp
fnstsw
rorb
mov
mov
inc
sahf
rol
inc
mov
xchg
inc
jne
adc
adc
divb
fwait
mov
xchg
leave
lret
out
sub
test
out
stc
pop
adc
lahf
jb
push
xlat
pop
xchg
push
jne
js
sub
inc
dec
mov
aas
imul
xchg
arpl
fistpl
enter
mov
mov
cmpsb
add
inc
xchg
jmp
xchg
mov
call
daa
loopne
pop
mov
pop
lret
std
mov
enter
in
push
adc
sub
pop
xor
xchg
mov
mov
mov
xor
jb
sti
fdivrs
mov
lcall
add
pushf
cmp
cmp
jmp
addb
pop
and
adc
sbb
xchg
dec
cmp
or
inc
add
pop
wrmsr
div
negl
xor
mov
sub
xor
inc
push
xor
xor
js
fs
mov
popf
mov
mov
stos
dec
mov
roll
push
fsubrl
out
mov
mov
mov
push
add
dec
adc
pop
dec
mov
pushf
mov
cwtl
pop
addr16
mov
shll
or
fsubl
jnp
movsb
in
popf
cmpsb
call
fistps
test
jl
call
jns
lret
loopne
mov
in
push
repnz
cmp
rcrl
inc
test
or
or
lret
sbb
adc
adc
lods
aaa
push
ret
test
xchg
test
xchg
cmp
les
lods
sub
jl
xchg
mov
fsub
jo
outsl
xor
jno
adc
test
mov
push
push
push
inc
es
popa
mov
shrb
jp
mov
mov
mov
push
aam
inc
pusha
aam
push
sub
inc
cmp
pop
pusha
mov
mov
jmp
jbe
shl
cwtl
mov
or
clc
test
imul
je
fs
pop
negl
sarl
sbb
fwait
and
pusha
iret
stc
movsb
cmp
into
mov
cmp
out
mov
pop
imul
lcall
cmpsb
adc
lret
loopne
sub
xor
sti
xor
jo
push
mov
jl
or
add
push
inc
lds
jno,pt
leave
test
data16
mov
sub
dec
add
scas
outsl
outsb
sub
pop
mov
pusha
xor
fsts
mov
out
add
push
int3
xor
test
ret
add
popa
sub
fs
push
dec
add
popl
imul
hlt
xlat
insl
pop
mov
sbb
ljmp
loope
push
lea
out
leave
int3
pop
mov
lret
lock
insb
pop
xor
repnz
cld
mov
ret
in
cmp
gs
lods
sub
sub
lret
repnz
push
xchg
loop
test
mov
vfmsubadd213pd
cmp
pop
outsl
das
push
test
and
sbb
stos
pop
mov
cmpsl
adc
testb
or
je
gs
das
inc
pop
sub
sub
shll
inc
cwtl
out
shlb
out
jle
aaa
jmp
sbb
sub
test
push
or
out
xchg
jp
je
stos
inc
gs
repnz
cld
or
inc
and
shlb
insb
lret
shl
and
out
dec
mov
stos
cld
or
and
pop
loop
movsl
inc
les
jo
mov
xor
sub
jnp
ja
aad
test
je
ss
cmpsl
outsb
shr
mov
loope
push
movsb
xchg
mov
cmp
mov
cmp
push
inc
jbe
mov
mov
sub
mov
js
add
fcmovbe
dec
and
out
xlat
pop
lcall
insl
outsl
dec
hlt
test
pop
das
sbb
cmpsb
push
sbb
mov
jb,pt
dec
or
add
enter
push
or
sbb
mov
int3
jo
test
sbb
sbbl
mov
mov
std
or
test
lahf
sub
es
push
mov
ljmp
leave
pop
mov
add
or
fs
add
scas
xchg
sbb
push
ja
stos
vandps
and
mov
xchg
xchg
mov
test
cmp
dec
jle
movsl
pop
outsb
push
push
filds
push
pop
mov
cmp
add
mov
dec
xchg
ljmp
stc
test
xchg
push
cmp
adc
notl
xchg
daa
fnstsw
popf
jae
mov
and
xor
mov
pop
xchg
aad
int
sbb
cmp
mov
and
gs
sub
stc
movb
push
push
sub
into
inc
xchg
aad
fcomps
gs
and
inc
dec
sahf
and
rcl
mov
loope
push
mov
sub
sbb
xor
mov
push
jo
xlat
fs
pop
mov
push
and
test
cmp
cmpsb
shlb
cmp
inc
dec
loope
sbb
mov
push
insb
cmpsb
jnp
dec
test
push
es
mov
jl
fisttpl
adc
mov
xlat
push
das
ljmp
repz
cmp
mov
mov
mov
mov
rol
pop
leave
clc
loopne
fcmove
mov
test
mov
int
jbe
jecxz
and
sbb
xchg
push
clc
push
add
jae
stos
cmp
movsb
mov
dec
out
loope
and
ficoms
pop
jae
mov
pushf
mov
test
cmp
mov
xchg
adc
fs
mov
and
icebp
orl
mov
cwtl
adc
pop
icebp
shrb
rorb
ffree
std
push
bswap
bound
ljmp
andb
mov
xchg
and
lods
mov
sbb
sbb
ret
push
jp
das
inc
fistpl
mov
pop
lods
rcrb
je
mov
pushf
mov
out
ja
sub
push
daa
pop
mov
inc
lret
pop
in
and
in
test
inc
add
mov
fs
loope
dec
aam
pop
out
ds
rolb
push
inc
les
mov
fisttpl
out
mov
stos
lret
adc
lods
mov
sar
pop
enter
adc
shl
mov
pushf
stos
cli
ljmp
dec
popf
mov
dec
shr
shr
push
lahf
cmp
push
into
inc
scas
cmpsl
outsl
jmp
or
pop
fldl
mov
ds
into
mov
popf
mov
dec
mov
mov
hlt
sbb
sub
repnz
adc
je
leave
xchg
or
mov
add
mov
inc
inc
addr16
in
or
push
or
ljmp
mov
push
cld
xchg
or
pop
xchg
push
mov
xor
mov
and
xchg
mov
pop
out
sbb
mov
push
and
or
or
or
and
adc
hlt
sahf
add
push
sbb
inc
lods
add
sbbb
mov
lret
jl
std
mov
adc
mov
push
xchg
add
mov
popf
mov
cld
rcrb
bnd
je
xor
mov
scas
cmp
insb
jp
push
stc
test
or
and
or
xor
das
dec
jg
push
fwait
sub
in
pop
in
mov
xchg
outsb
aas
pop
sub
mov
jge
movb
dec
mov
sbb
sub
or
js
cmpsl
add
sbb
cltd
nop
scas
xor
inc
jo
lcall
in
movsl
pop
dec
mov
jle
or
cmpsl
test
pop
adc
jo
mov
xchg
jp
mov
push
xor
cmp
mov
sbb
stos
inc
mov
xor
sti
add
mov
xchg
or
faddl
mov
loop
cmc
xor
mov
pop
cmp
cmc
jmp
in
ss
test
inc
mov
lahf
stc
dec
push
test
mov
jne
push
xchg
inc
inc
test
ss
push
jmp
dec
jo
cmp
jno
mov
lahf
aas
adc
xor
push
sbb
es
mov
mov
pop
arpl
test
pop
roll
inc
in
test
cmpsb
add
jle
xchg
mov
clc
aas
push
mov
mov
cmpsl
pop
sbb
mov
push
je
dec
fwait
dec
push
es
jmp
sbb
mov
jns
sbb
mov
add
jg
mov
cli
sbb
clc
add
dec
inc
push
cli
stc
or
cli
cld
and
xchg
push
xorb
fsub
pop
jle
mov
cltd
mov
jnp
test
adc
rcll
dec
sbb
out
inc
das
fcoml
into
mov
fs
fstl
enter
mov
lcall
in
jge
sub
adc
or
mov
mov
jp
mov
mov
push
out
int
inc
lahf
aam
enter
aam
ss
rcr
sahf
lock
fcoms
insl
loop
xchg
fucomp
lods
xchg
jb
sbbb
push
cld
leave
movsb
in
rcrb
mov
inc
ds
int3
repz
xor
xchg
jmp
scas
jnp
movsb
mov
mov
fdivp
rcl
jns
lahf
cmp
loopne
xchg
push
inc
push
leave
mov
loopne
and
rcl
mov
mov
hlt
jns
hlt
dec
cmp
xchg
push
mov
push
imul
cmp
sub
scas
jmp
popf
pop
ret
popa
gs
stos
cmpsl
std
movsl
push
fiadds
mov
fsubl
mov
lods
fisttpll
push
or
xor
stc
xchg
jne
pop
jmp
in
idiv
or
fmull
dec
jmp
stos
mov
js
sbb
mov
push
jnp
pop
cmpb
adc
mov
fldcw
or
ror
pop
or
and
sub
cmp
stos
fwait
ja
repnz
lods
adc
adc
push
mov
push
addr16
push
cmpsb
add
mov
orb
cltd
js
pop
xchg
xchg
and
pop
outsl
or
aam
sahf
xor
test
call
dec
aaa
loopne
pop
hlt
in
jns
and
jno
dec
push
push
cmp
xor
xchg
data16
ljmp
xor
inc
add
in
cs
cltd
or
outsb
pop
xor
jecxz
cmc
mov
mov
sahf
lret
mov
mov
sub
mov
pop
xchg
lock
jae
adc
rcll
add
mov
sub
xorb
ficoms
adc
lock
dec
mov
out
xchg
scas
je
fildl
das
imul
lret
ja
adc
imul
ljmp
mov
or
push
fsubrl
lea
cmpsb
mov
ret
aaa
cmp
sbb
in
nop
mov
jo
dec
jno
xchg
mov
in
jmp
jbe
out
les
mov
dec
cmp
pop
movsl
or
lret
xorl
cmp
mov
lods
dec
lods
pop
push
stc
insb
xchg
loop
out
lods
fidivrl
cmp
xlat
aad
fadd
clc
dec
or
sarl
push
je
pop
js
int3
mov
mov
mov
pop
repz
lcall
lea
lret
loopne
ret
pop
jb
xchg
cmp
and
pop
iret
sub
imul
scas
divb
pusha
ds
sub
mov
mov
test
inc
cli
int
cli
sti
test
lds
mov
xchg
pop
inc
frstor
in
push
jo
daa
mull
call
shll
cwtl
cli
add
fistl
cwtl
test
mov
out
jns,pn
and
int
cmc
sub
imul
and
roll
dec
cmp
sbb
ret
cltd
xorb
push
push
mov
xor
dec
xor
nop
imul
notb
arpl
mov
stos
arpl
lds
jo
push
jle
out
or
cmpsl
push
pusha
mov
pop
dec
mov
xchg
mov
loope
pop
pop
fs
cmpsl
xor
int
dec
inc
pop
xchg
and
cmp
movups
jo
adc
jne
xor
fmull
lods
lret
lea
mov
daa
cmp
mov
cmc
pop
xor
jae
aad
push
fistl
imul
adc
int3
idivl
stos
push
inc
push
sub
sbb
cmp
repz
dec
rcll
cmpsb
jno
sub
repnz
mov
or
clc
adc
mov
push
add
mov
xor
adc
cmc
dec
sbb
jl
aam
sub
bnd
pop
add
aas
dec
mov
mov
ret
loopne
in
inc
push
push
cwtl
lret
pusha
sbb
add
mov
int3
cmp
push
and
rcrl
stos
dec
mov
sahf
adc
test
xor
dec
bound
pop
xor
mov
or
data16
pop
aas
movsl
inc
pcmpeqb
mov
fdiv
jne
js
mov
loopne
and
ret
imul
inc
das
shll
outsb
mov
mov
jmpw
pop
adc
xor
add
cwtl
int3
add
mov
xor
inc
cltd
xchg
sbbb
mov
loopne
movsl
mov
pushf
push
xchg
pop
sbb
jmp
mov
inc
dec
pushf
mov
aam
ljmp
call
jbe
icebp
sbb
bound
out
xor
cmc
add
pop
mov
mov
jb
ds
jmp
pop
icebp
pop
jno
add
push
cmp
push
add
jecxz
stos
js
pop
jbe
les
xor
insb
pop
aad
adcl
testl
and
dec
pop
push
jmp
mov
out
push
xchg
sti
movsb
lea
jno
add
iret
leave
cli
insl
addb
je
ds
mov
adc
inc
jno
pop
xchg
push
inc
jns
sub
out
daa
cmp
xchg
jecxz
loop
push
push
punpcklbw
into
icebp
loop
jmp
cmp
sahf
aaa
test
sub
mov
movsl
add
pop
push
leave
sub
bound
sbb
js
je
outsl
gs
out
jmp
jmp
repnz
push
or
jg
mov
aaa
ret
mov
dec
icebp
and
cli
dec
es
ds
add
pop
mov
jns
push
push
mov
mov
andl
aas
jb
jle
dec
lea
push
popa
xchg
cmp
add
ss
xchg
and
aas
popa
xor
add
add
pop
es
lds
stc
push
pop
or
and
inc
sbb
test
test
jb
outsl
xchg
inc
push
xor
sub
test
sub
into
sub
fcmovb
xchg
add
iret
aaa
mulps
cmp
push
sti
out
pop
mov
mov
arpl
ss
lods
jo
and
cmp
jb
std
or
loope
outsb
dec
loope
jl
sbb
test
inc
pop
insb
cwtl
push
stos
dec
movsl
sbbl
fadd
fwait
dec
add
xchg
mov
adc
adc
or
pop
add
ffreep
daa
test
push
and
and
and
pop
inc
sbb
jecxz
int
fstpt
das
addl
popfw
pop
scas
fucomp
add
test
and
data16
dec
push
rcrl
inc
adc
fnstcw
aad
int
push
xchg
setae
mov
mov
insl
push
mov
ret
fnstenv
nop
xor
lahf
movsl
mov
in
mov
add
xor
arpl
repnz
push
mov
xchg
fdiv
gs
cli
dec
cmp
mov
mov
cmp
subl
fdiv
leave
push
aas
out
push
jb
sahf
mov
dec
out
outsl
and
mov
repnz
in
roll
and
scas
jns
ds
leave
mov
aas
daa
push
sbb
push
sbb
cmp
inc
mov
std
inc
call
popa
out
test
test
and
sub
mov
cmp
jbe
xlat
mov
popf
insb
push
push
insb
loope
stos
xor
or
cltd
in
lret
sub
mov
sub
jne
pop
xor
xchg
cmp
loope
sub
xchg
push
popa
imul
sub
nop
movups
lods
lahf
insb
sub
iret
xchg
jo
push
mov
in
fstps
xor
mov
nop
cmpb
add
pop
aam
ret
sbb
lods
or
push
stos
les
and
push
jecxz
dec
enter
in
add
imul
loop
xchg
and
pop
cmpsl
out
sbb
ret
lahf
ret
leave
iret
pop
cli
jbe
inc
cld
divl
aas
in
cli
fsubr
ret
gs
ljmp
mov
push
and
push
fs
sbb
movsl
push
push
push
jne
sub
jnp
arpl
test
jmp
nop
adc
mov
lret
sbb
pushf
mov
push
adc
inc
fdivl
cli
mov
adc
pushf
sbb
mov
orl
pusha
adc
fmuls
sub
ss
ret
lods
xchg
adc
insb
pop
sub
aad
subb
ficompl
xlat
out
cmpsb
mov
and
xlat
scas
push
xor
dec
push
inc
push
cmp
ja
lcall
cmpsb
call
jae
cld
xor
int
out
sub
inc
mov
pop
std
sahf
or
mov
and
dec
xor
xor
xchg
jg
imul
pop
sahf
and
cmp
sbb
pushf
addr16
outsb
push
int3
dec
imul
and
pop
aam
shlb
fbstp
push
insb
movsl
fisubrl
sahf
lods
aam
rcll
mov
mov
xchg
and
sub
out
xchg
fadds
lods
mov
mov
mov
filds
lahf
fistpll
test
mov
mov
mov
imul
loop
mov
push
sub
cltd
clc
dec
sub
push
jge
jmp
jmp
mov
test
and
in
jne
je
out
push
lcall
lea
dec
xor
loopne
cmpsb
lds
sbb
mov
daa
pop
call
xor
adc
movsb
sti
sahf
jns
insl
fldcw
gs
movsl
or
nop
push
aaa
mov
clc
pop
aad
mov
cwtl
cmp
mov
mov
mov
cmp
ss
loope
mov
mov
push
inc
pop
pop
jno
jns
or
jecxz
add
daa
push
pushf
in
repnz
adc
push
sbb
ja
jo
ret
jp
pop
imul
add
add
lcall
out
or
fists
stos
arpl
or
fldl
jp
jno
cmp
adc
cs
cli
test
jecxz
ja
and
inc
xchg
mov
mov
mov
and
aaa
fistpl
inc
mov
lock
in
add
inc
cwtl
mov
cltd
ljmp
push
push
sub
inc
xlat
cmp
push
lahf
sbb
andl
shlb
or
push
cmpsb
data16
sbb
cmp
mov
andb
mov
sub
push
mov
xlat
xor
daa
or
xor
push
popa
push
lods
loopne
or
cs
ja
dec
jmp
sbb
adc
cmp
data16
mov
add
int
jne
ljmp
mov
mov
call
mov
sarl
inc
ret
or
data16
rcl
dec
ficomps
daa
add
xchg
fwait
adc
aaa
add
pop
enter
sbb
xor
xchg
inc
pop
mov
lahf
fiadds
cmp
push
jecxz
aam
xchg
in
outsb
dec
bound
stos
in
mov
sub
pop
mov
fisttpll
call
das
inc
or
sbb
scas
fisubrl
or
push
out
dec
or
xor
push
out
xchg
push
jns
mov
rcll
jb
pop
cmp
aas
jae
sub
cmpsl
sbb
ficomps
out
icebp
dec
ds
mov
fmul
shlb
sbb
jle
dec
es
mov
add
shlb
or
sbbw
dec
nop
into
sub
xlat
mov
pushf
xchg
sbb
mov
adc
push
dec
sbb
jg
xchg
cld
and
clc
and
std
aas
je
inc
pusha
data16
push
repnz
insb
test
pop
cmp
mov
movsl
push
insl
lret
mull
jb
pop
ds
repz
stos
cld
fdivrp
cmp
mov
shl
scas
mov
push
lcall
pop
jae
mov
scas
mov
xchg
add
xchg
jg
jecxz
leave
pop
pop
bound
das
push
sub
mov
arpl
mov
aas
in
jne
fadds
out
test
adcl
imul
gs
add
imul
jmp
xchg
in
pop
jle
cmp
loope
int3
cmc
ret
and
jne
out
mov
push
pop
ds
addr16
je
jge
xlat
add
test
adc
sub
mov
lds
sbb
bound
popf
aaa
std
scas
inc
push
lret
leave
xchg
cmc
jecxz
dec
cwtl
jne
sub
xchg
pop
icebp
call
pusha
pop
aaa
bound
push
mov
pop
jb
leave
repz
inc
loope
or
popa
sbb
adc
mov
loope
push
cmc
arpl
inc
inc
mov
imul
and
and
push
jl
or
mov
int
cmpsl
mov
and
pop
les
cmpsb
in
cmpsl
sbb
sbb
jmp
daa
loop
push
add
sbb
mov
repnz
mov
jecxz
or
icebp
test
and
adc
ljmp
movsl
xchg
mov
cmp
insb
je
fsubrl
cmpsl
mov
mov
rorl
ret
jnp
cmp
sahf
fsubr
aam
dec
addr16
mov
push
mov
inc
scas
cli
xor
push
mov
and
mov
push
jnp
cld
ret
and
mov
inc
pop
mov
mov
leave
pop
sub
sbb
inc
cltd
push
sub
or
repnz
popa
lods
cs
push
arpl
pop
xchg
je
xchg
jl
data16
jae
jmp
or
lcall
stos
repnz
mov
test
xchg
ficomps
repnz
mov
and
sub
aam
fisubs
iret
cmpsb
in
pop
scas
lret
pop
out
dec
add
add
add
pop
xchg
mov
mov
outsl
mov
mov
fcompl
add
add
sbb
adc
sub
das
mov
pop
mov
mov
fwait
mov
stos
fisubl
repnz
int
and
mov
push
imul
jne
movd
dec
cmp
repnz
mov
loop
xor
jge
mov
loopne,pn
ds
jp
jbe
bound
push
push
xchg
shll
sub
test
ljmp
scas
jno
cmc
out
xor
fadds
dec
and
jp
sbb
scas
out
mov
xor
sbbb
jle
push
inc
push
icebp
in
aad
mov
xorl
dec
sub
in
es
pavgw
mov
imul
bound
sar
sahf
arpl
adc
pop
push
mov
in
mov
push
pop
aad
jmp
jb
push
ja
sbb
daa
out
jb
dec
mov
outsl
jmp
cmp
aam
inc
sub
jle
shrb
push
adc
dec
cmc
sbb
gs
scas
inc
repz
rcrl
aad
movnti
std
sub
adc
stos
cmp
outsl
jmp
push
scas
xor
ss
cs
jle
xchg
adc
out
jbe
lcall
mov
shlb
xor
cmp
add
sbb
aad
add
faddl
cmp
jae
popa
pop
push
insl
cmc
xor
add
xchg
stc
push
mov
ljmp
lret
popa
lahf
insl
fs
dec
xchg
push
lea
jae
xchg
dec
and
cld
lcall
fildl
xchg
mov
out
loop
xchg
adc
popaw
stc
test
repnz
push
jmp
dec
cmp
insl
lret
mov
movb
ret
insl
cmpsb
loop
add
and
push
xchg
sbb
icebp
adc
ljmp
in
add
mov
in
mov
fbld
xor
scas
push
sub
dec
xchg
inc
cmc
mov
nop
pop
call
and
lds
xchg
adc
push
stos
pop
xchg
jg
in
lret
add
sbb
mov
pusha
iret
push
pop
inc
pop
lret
test
lahf
jmp
xor
repnz
inc
in
mov
xor
aas
jno
pusha
and
push
mov
loope
orl
aad
popa
pop
pop
push
mov
xor
sub
inc
pop
inc
pop
xchg
jp
add
pop
add
push
xor
call
insl
pushf
pop
frstor
pop
in
sbb
popf
sbb
push
orl
sti
addl
in
mov
xchg
les
jne
sub
out
or
into
clc
mov
dec
cmp
pop
cmp
fnsave
aad
mov
mov
loopne
lret
adc
fwait
pop
aaa
xlat
mov
xchg
das
das
and
cltd
xlat
and
jle
inc
cli
pop
sarl
pcmpgtw
out
popf
mov
mov
movsl
xor
repz
insl
stos
mov
cmp
ror
cmp
push
aam
mov
pop
fimuls
insl
jne
pop
or
cmpsl
cld
pop
jg
adc
aam
jge
jne
cmp
sbb
xchg
imul
jmp
jle
mov
inc
jg
cwtl
or
repnz
imul
cmpsb
push
mov
xchg
inc
xor
insb
mov
fwait
mov
mov
add
xchg
push
push
or
push
xchg
pushf
and
mov
cld
sub
sbb
int3
xchg
adc
push
push
scas
cld
ja
mov
aas
cmp
or
iret
ljmp
pcmpeqd
sub
add
data16
mov
and
inc
pop
mov
mov
mov
mov
cmp
repz
sub
sub
rcrb
adc
dec
clc
xor
test
xchg
push
dec
test
xor
cmp
loopne
sub
xor
and
movsb
fwait
jge
pop
ficomps
pushf
mov
pop
mov
stos
sbb
push
aad
or
mov
xchg
inc
mov
push
pop
cwtl
ret
mov
cwtl
fcmovnu
dec
pop
into
xor
mov
mov
lods
push
sbb
pop
fstcw
leave
jecxz
jle
lds
fsts
inc
cld
add
cmp
sarb
and
es
mov
dec
iret
mov
pushf
mov
icebp
jle
push
test
test
add
div
jae
pop
loop
sub
outsb
mov
jo
repz
jnp
and
aad
mov
pop
cmp
inc
mov
ret
fs
dec
and
push
sub
dec
into
nop
repnz
mov
leave
cwtl
lret
out
fs
aad
test
mov
adc
dec
or
sbb
shr
es
addr16
ffree
lods
inc
fwait
test
push
sarb
or
loope
jae
sbb
movsb
push
into
add
add
hlt
les
scas
xor
jmp
rorb
or
ljmp
mov
fs
leave
push
aas
add
cli
mov
jbe
add
mov
cmp
sub
xchg
xchg
lret
sbb
loopne
outsb
sub
clc
push
or
jge
js
in
daa
add
xor
addl
je
cld
mov
mov
add
add
std
and
adc
divb
std
fiadds
mov
mov
mov
lods
bound
stos
jne
lea
outsl
cmpsl
or
shl
out
lock
cmp
mov
xchg
pop
push
les
push
sbb
mov
out
lock
fstpt
loop
out
sub
adc
rcrl
or
lods
jnp
xchg
pushf
ds
mov
pop
outsb
icebp
jl
push
aaa
dec
inc
aad
ror
inc
cmp
adc
cli
call
inc
jp
dec
cmp
fildll
xor
inc
int
sbb
fists
xor
sub
les
push
je
lock
dec
and
xchg
push
inc
push
sub
out
xor
int3
mov
pop
movsl
lret
outsl
leave
and
mov
test
in
mov
mov
and
push
idivl
jb
shrl
out
add
inc
outsb
mov
mov
rorb
sbb
mov
cmc
sbb
mov
inc
push
push
adc
mov
out
rclb
jecxz
and
in
jmp
into
fwait
and
mov
rcr
mov
lods
imul
aam
and
xchg
mov
mov
push
mov
mov
in
add
or
int3
pop
shr
xchg
xlat
test
pushf
push
out
ss
mov
lock
and
arpl
and
cmc
sbb
sbb
insl
dec
aaa
and
push
mov
add
inc
and
fs
dec
fsts
jnp
push
aad
aam
jg
xchg
ja
push
inc
aad
push
mov
cmpsl
imul
addl
mov
jnp
out
mov
jg
daa
mov
pusha
js
xor
mov
ret
xchg
mov
push
daa
cmp
xor
ja
dec
push
mov
or
add
and
loope
into
mov
xor
hlt
inc
mov
jnp
idivl
out
xor
pop
hlt
cltd
leave
jmp
dec
and
mov
sbb
cmp
inc
subb
pushf
testb
push
icebp
dec
adc
mov
ds
adcl
jmp
sub
add
fwait
jo
rorl
mov
mov
and
and
subb
ret
mov
movb
es
inc
shll
lods
and
jns
sub
pop
adc
push
stos
les
xor
ret
icebp
pop
xchg
aam
movb
jnp
nop
je
movsb
adc
jl
mov
dec
mov
dec
pop
xorl
xchg
mov
jp
lods
aaa
mov
aas
adc
filds
and
pop
hlt
dec
mov
cltd
test
dec
sbb
flds
adc
call
inc
adc
cmpsb
stos
or
dec
sub
dec
dec
aam
ret
pop
xchg
out
mov
pop
jb
aam
mov
mov
aad
jnp
cmpsb
in
lret
popa
mov
insb
and
les
cli
or
cmpsb
push
mov
add
out
pop
sbb
add
arpl
adc
xor
enter
je
xor
and
movsb
movsb
fimull
rol
sbb
dec
fs
mov
ret
add
out
jns
inc
pop
xchg
sbbb
xchg
push
or
frstor
es
imul
dec
inc
adc
pop
and
sahf
sub
shll
mov
cmp
mov
in
dec
pop
vmwrite
dec
out
jecxz
dec
addb
outsl
adc
mov
insb
mov
dec
cmp
scas
out
stos
push
loop
mov
cmp
pop
sahf
push
gs
xchg
jmp
and
cmc
push
loope
stc
xor
cltd
sub
mov
dec
cld
lea
jp
pop
rolb
cmpsb
out
movsb
leave
jg
lods
inc
lret
nop
sbb
std
pusha
clc
or
push
jp
and
mul
inc
jg
or
iret
add
add
stos
add
push
adc
adc
popf
outsb
into
in
hlt
mov
cmp
in
repnz
cwtl
ljmp
call
ret
pop
sahf
mov
sti
jl
pop
mov
cmp
jo
stos
or
push
cmp
repnz
push
add
ficoms
dec
stos
cmp
xor
xor
cmp
mov
in
xchg
loopne
cli
sbb
mov
rol
sub
push
loop
loope
mov
sar
dec
lret
cmc
sbb
mov
lods
pop
gs
and
dec
icebp
ret
insb
push
sbb
in
and
lcall
fmuls
insb
push
cli
jge
pop
sbb
adcl
das
mov
nop
add
stos
inc
addr16
inc
jge
jae
popa
orl
pop
and
mov
rcrb
inc
xor
sbb
adc
fldenv
inc
jp
dec
dec
dec
mov
sub
stos
sbbl
mov
rolb
mov
popf
decl
movsl
sbb
aas
mov
push
xor
scas
xchg
stc
test
fstpt
mov
jp
loop,pn
test
dec
and
xor
insb
xchg
and
mov
pmaxsw
sub
repz
push
popa
cmp
hlt
gs
pop
inc
sbb
sub
add
pop
lret
or
xchg
mov
gs
mov
mov
rolb
jecxz
xor
pop
and
and
in
mov
in
push
outsb
leave
add
scas
sub
push
inc
sbb
xorl
jne
cmp
stos
sbb
roll
mov
or
pop
mov
cmpsw
cmc
or
pop
fnstenv
xchg
sub
push
add
push
arpl
popf
adc
cld
and
adc
mov
mov
add
leave
sub
movsb
sbb
push
push
pusha
and
jae
popf
or
adc
push
mov
aas
pop
adc
sub
pop
movsl
sbb
push
inc
cwtl
out
fwait
es
cmp
cmc
or
cmpl
and
mov
insl
cwtl
sub
add
pushf
and
jp
int
orl
mov
leave
repnz
cmp
mov
sub
inc
adc
pusha
xor
mov
jp
clc
insl
jno
test
pop
out
test
pop
fstpt
mov
cmc
inc
je
xor
je
mov
dec
pop
sbb
xchg
mov
lret
push
adc
lods
shr
mov
pop
loop
fdivp
shlb
repnz
xchg
mov
roll
add
js
cwtl
pushf
ja
push
push
push
in
pop
cmp
xchg
ss
out
je
out
lcall
pushf
jle
das
dec
or
inc
xchg
xlat
lock
jo
int
dec
and
gs
fstps
roll
cmc
out
jge
into
inc
and
rolb
fsubp
mov
bound
outsb
pop
cmp
pop
ss
hlt
bound
mov
fcompl
xchg
fcomi
aaa
fistpll
mov
xlat
pop
add
inc
andl
xchg
or
and
imul
fldenv
shlb
push
or
insb
fidivs
notb
xor
or
jb
push
xor
test
sbb
cs
clc
test
push
rcll
push
add
mov
adc
scas
sub
test
mov
fiadds
loopne
insl
loope
test
mov
cltd
jbe
mov
cmp
je
sub
mov
inc
out
data16
or
pop
mov
lret
inc
orb
cmpsl
cmp
out
roll
cmp
lret
add
mov
sbb
jnp
push
push
cmpsl
call
lea
inc
jmp
sbb
cmp
mov
jge
sbb
leave
int3
popa
test
loopne
fwait
fiadds
les
in
fs
fs
mov
add
lock
or
or
or
pop
push
and
sub
inc
jge
orl
jg
repz
add
jp
and
push
lahf
out
mov
mov
hlt
orl
mov
inc
push
push
mov
fistl
dec
inc
lcall
outsl
adc
clc
out
jmp
xor
arpl
mov
int
enter
fs
mov
dec
mov
movl
pop
and
push
dec
push
lahf
int
dec
dec
cmp
mov
push
adc
push
dec
lock
pop
test
xor
mov
sti
xchg
xor
lds
push
lea
cmpsb
cmp
or
xchg
cmp
outsl
stc
outsb
out
rcrl
sar
pop
movsb
inc
sbb
sub
imul
int
inc
test
std
or
pop
jno
imulb
in
add
dec
pop
xchg
jne
mov
movsl
ds
lods
iret
jno
push
push
mov
pushf
xor
inc
stos
cmp
movsl
cld
sti
icebp
jb
pop
push
cltd
and
outsl
mov
adc
push
mov
das
jle
nop
aas
push
jno
roll
sub
xor
mov
xchg
push
inc
scas
mov
in
imul
and
leave
hlt
add
jg
mov
mov
fwait
bound
xor
decb
and
jg
lds
ljmp
xchg
gs
outsb
inc
pusha
xchg
pop
leave
arpl
sbb
xchg
dec
fwait
int
jmp
xchg
xor
shr
movsb
sub
inc
popf
sbb
loopne
xchg
out
push
jmp
adc
aas
movsb
enter
hlt
adc
scas
sub
jns
dec
mov
sbb
or
sub
fwait
cmp
adc
call
jb
cwtl
mov
in
fsts
or
dec
and
cltd
stc
neg
gs
adc
addb
and
mov
or
scas
aam
jp
mov
stos
addr16
scas
mov
dec
xlat
adcb
mov
sbb
lods
stos
cmc
cwtl
outsb
call
xchg
and
movsl
mov
cmpl
outsb
int3
adcl
scas
nop
add
cmp
jno
push
scas
pop
je
into
add
in
cld
rcr
lods
adc
inc
add
call
xchg
adc
xlat
ss
pop
pop
in
jne
xor
inc
inc
lds
xchg
push
inc
and
pop
int3
adc
cmp
fistps
and
lret
sub
adc
sti
clc
cmp
out
or
pop
std
or
xor
ds
adc
dec
mov
daa
sti
pop
mov
push
rolb
cmp
mov
daa
push
loope
pushf
jecxz
scas
outsb
adc
cmp
repnz
sub
pop
jl
popa
stos
loope
lods
sub
ret
sbb
in
rcr
mov
ds
sbb
negb
int3
fcomi
or
or
enter
aaa
cld
push
ljmp
cmp
jbe
out
jmp
add
shr
out
insl
and
lods
jns
mov
fdivrs
fdivs
pop
mov
and
inc
sub
jg
adc
repnz
rorb
dec
sbbl
je
mov
xlat
arpl
int
add
aas
lea
xor
jl
leave
adcl
addr16
push
or
sub
sbb
xor
pusha
or
lahf
jl
push
or
pop
jbe
fwait
sub
mov
leave
sub
pusha
aad
add
and
jns
inc
je
push
dec
pusha
cmc
sahf
sub
jno
cmp
enter
cmpsb
dec
jns
dec
movsb
cmp
lods
jmp
or
xchg
stos
sarl
jnp
or
jmp
jecxz
pop
or
stos
int
rclb
and
shl
sbb
sub
push
sub
call
rcrb
shll
rolb
and
out
inc
jb
ret
mov
xchg
dec
inc
cmpsb
mov
in
xchg
in
sbb
push
imul
push
cmpsb
in
or
ljmp
fnsave
test
xchg
or
xorl
stc
decb
pushf
mov
inc
mov
push
std
repz
pop
fwait
xchg
jle
mov
xor
ret
je
outsl
in
xchg
fidivrs
sar
sbb
push
xor
xchg
adc
repz
lds
idivb
cld
push
cmp
pop
imul
test
cmpsb
cmc
and
xor
jecxz
and
loopne
xchg
xor
imul
daa
insb
mov
cld
cli
inc
fs
outsl
push
ds
cwtl
loopne
out
mov
popf
rolb
dec
mov
mov
stc
daa
mov
cmp
push
les
clc
test
xchg
jmp
daa
dec
inc
cmc
push
int3
lods
neg
cs
cli
sti
lcall
pop
mov
loope
rcll
sub
mov
ds
lcall
or
and
sbb
dec
or
movsb
hlt
adc
nop
xor
test
out
frstor
mov
or
mov
add
adc
in
mov
and
lock
jne
adc
popf
add
sbbl
lcall
les
cmp
sub
add
test
push
and
inc
cmp
jae
leave
test
dec
pop
orl
inc
sub
mov
dec
stos
insl
pop
rcll
push
inc
fildl
imul
fcmovnb
in
cmp
mov
pop
mov
xchg
andb
rsqrtps
int3
jg
ljmp
loope
mov
rclb
int
repz
ds
push
dec
outsl
pop
inc
or
rcll
and
rorb
xchg
mov
mov
daa
dec
roll
das
aaa
push
dec
push
lahf
fistl
testl
das
loope
pop
sub
cli
sub
sub
xchg
mov
lret
cmpsl
setg
sub
cmpsl
pop
adc
dec
cwtl
cs
pop
aas
decl
xchg
jl
out
imul
cli
movsl
and
cmp
add
into
in
mov
lds
add
movsb
fcmovbe
push
xor
ds
xchg
pop
adc
sub
pop
enter
xchg
insl
push
or
aaa
pop
fmull
pop
inc
call
scas
cmp
xchg
lret
mov
add
push
push
push
test
imul
dec
stos
sti
mov
xor
sub
pop
sarl
jne
or
and
lcall
push
jmp
dec
inc
sub
fadds
xchg
sub
mov
sub
jnp
push
and
mov
das
add
xchg
push
mov
push
adc
inc
push
add
ljmp
xor
outsl
xchg
sbbb
xor
xor
pusha
out
lods
adc
add
cmp
mov
daa
stc
push
xlat
or
stos
mov
adc
jge
push
bound
and
adc
adc
add
jo
add
fistpl
rcrb
shl
js
out
sbb
sbb
fistps
addr16
imul
pop
mov
aas
push
bound
xchg
mov
inc
imul
and
stc
jbe
adc
je
dec
mov
adcb
int3
dec
clc
mov
aam
je
das
pop
pop
and
orl
mov
dec
cld
dec
push
xor
jnp
sahf
lcall
stos
xor
orb
adc
cmp
loope
stos
sub
jg
insl
jb
adc
mov
enter
fs
mov
aam
pop
roll
add
shl
sbb
inc
push
jae
call
mov
repz
push
aam
popf
add
enter
jne
mov
pop
je
clc
pop
call
pop
not
jmp
out
or
outsb
cmc
mov
das
ss
and
push
sarb
ss
adc
fimull
inc
repz
xchg
add
test
xchg
shrb
mov
shl
in
out
or
sub
inc
fstps
call
cmpsl
movsl
bswap
cmp
ret
xor
inc
cmp
push
adc
mulb
stc
mov
mov
nop
adc
pop
in
push
test
jb
adc
pop
dec
into
sub
rcll
jns
loopne
test
popf
lods
mov
adc
pushf
xlat
stos
push
aad
jge
mov
cs
jle
call
jbe
pusha
mov
xchg
pop
hlt
and
add
adc
xorb
and
sub
shll
cli
call
xchg
in
add
call
outsb
mov
outsl
pushf
dec
inc
addr16
imul
push
out
nop
je
mov
loop
in
or
rcrb
out
cmpsl
xchg
push
sub
xor
mov
inc
mov
push
xor
movsb
jo
int3
aam
pop
add
xor
iret
adc
pushf
lds
sbb
orb
cmpsb
jnp
jnp
outsl
test
push
aaa
ret
lods
add
add
cmp
ficompl
pop
lahf
add
aad
pop
out
cmp
cld
movups
iret
testb
fiadds
mov
das
xor
lods
aaa
cltd
clc
push
mov
xchg
mov
xchg
movsl
es
mov
cmp
mov
cmp
stc
fsub
fwait
jmp
iret
inc
cmp
xchg
add
and
mov
sbb
aas
push
in
sbb
fcomps
mov
mov
clc
or
mov
xchg
pop
leave
lods
into
jg
inc
jo
dec
jo
jp
add
adc
ror
sub
hlt
mov
mov
inc
aam
rcrl
or
arpl
cmp
and
push
mov
xor
xchg
aam
sbb
cmc
lahf
mov
movsb
loop
pop
mov
add
push
pop
outsl
pop
stos
imul
out
out
push
push
mov
mov
insl
cld
loop
xor
fsubl
jae
sarb
mov
lea
mov
xlat
hlt
push
jl
xor
addr16
push
mov
insb
out
push
add
adc
lret
mov
fidivl
insl
mov
in
sysexit
adc
adc
icebp
aam
mov
cli
push
pushl
cmp
sahf
push
insl
clc
push
into
xchg
pop
or
add
jmp
jo
movsl
or
cmc
xor
mov
or
int
mov
cmp
dec
push
aaa
inc
mov
cmc
pop
ds
lahf
arpl
push
lock
js
jg
ror
imul
mov
sbb
and
push
jl
jp
and
cmpsb
jmp
imul
enter
push
adc
push
xor
inc
xor
jl
lcall
call
test
adc
lahf
jnp
cltd
pop
lods
bound
sub
in
mov
jle
xchg
pop
sysexit
pop
xor
inc
push
cwtl
adc
ret
sub
pop
data16
inc
pop
push
adcl
dec
push
ljmp
push
adc
push
inc
pop
mov
ret
hlt
or
cmpsl
mov
cmc
push
test
adc
and
inc
out
insb
in
out
xchg
lea
mov
jle
test
aaa
ret
cmp
insl
pushf
or
sub
xchg
jbe
mov
inc
xchg
pop
and
hlt
push
lahf
inc
mov
mov
or
comiss
jg
add
outsl
pop
std
cmp
sbb
rorl
test
dec
outsb
push
push
arpl
imul
ja
mov
mov
cmp
xor
aad
sbb
push
inc
lods
mov
xor
sahf
jns,pt
and
bsf
stc
scas
xchg
xor
jno
mov
cwtl
pop
jbe
dec
loope
cmp
and
imul
mov
jecxz
jg
mov
scas
mov
popa
sbb
mov
mov
inc
sub
cmp
mov
dec
jle
scas
adc
fisubl
fcomi
aad
dec
push
iret
lods
fimuls
xchg
in
pop
cltd
cmp
out
scas
mov
data16
dec
xchg
adc
out
icebp
pop
xorl
fdivrs
cmpl
clc
mov
mov
mov
mov
ret
mov
pop
mov
xchg
pop
adc
rcr
sub
andl
sbbl
mov
push
or
jb
mov
out
flds
movsb
inc
push
lcall
es
fldenv
pop
mov
in
je
mov
call
fistpll
mov
sub
iret
and
addr16
push
imul
mov
lret
arpl
and
scas
xlat
movsb
jg
adc
adc
daa
adc
push
dec
in
mov
add
mov
pop
xchg
jmp
pop
mov
test
jne
cmp
repnz
pop
ds
jne
cmpsb
xchg
mov
xor
add
in
test
sub
xor
push
inc
lods
lret
push
mov
xchg
sbb
dec
and
add
mov
jmp
icebp
cs
jnp
jns
loope
in
xchg
in
addr16
pop
push
xchg
stc
xor
rcl
insb
fistl
negb
mov
sbb
test
push
jo
xor
imul
xchg
test
mov
mov
testb
sub
xchg
jae
mov
inc
lcall
mov
lock
in
mov
test
orl
dec
jnp
push
fimull
mov
repz
mov
ret
shlb
and
test
mov
stos
jno
add
xchg
out
dec
icebp
iret
pop
dec
push
push
or
insb
sbbl
and
dec
inc
adc
sbb
sbb
fs
jno
xchg
dec
mov
fisubl
push
sti
adc
pshufw
fldcw
icebp
scas
jae
mov
dec
hlt
mov
mov
andb
mov
jno
xor
imul
pop
lock
cmp
inc
stos
add
pop
cmc
stc
das
ds
xor
dec
lcall
cli
negl
sbb
cld
fadd
mov
push
push
test
jno
outsl
pop
mov
adc
cmp
push
iret
cmpsl
in
jp
cmp
shlb
adc
cmp
and
repz
inc
test
cmp
adc
dec
sub
adc
pop
mov
jo
inc
mov
out
pop
jmp
pop
lds
scas
test
mov
or
inc
dec
jo
das
lcall
mov
and
clc
or
gs
pop
mov
gs
jns
add
and
loopne
jg
ljmp
add
xor
mov
or
mov
mov
hlt
push
xchg
mov
lret
cmp
jbe
mov
jl
flds
insl
jmp
sbb
gs
push
mov
aam
loope
fs
push
subb
lods
pop
add
arpl
lods
outsl
pop
stos
cmc
add
mov
enter
shl
aas
lea
ficoml
sub
mov
in
imul
arpl
es
mov
out
pop
jae
ljmp
and
sarl
sbb
cmpsb
ret
sbb
sbb
test
pop
or
dec
fdivrs
clc
fildll
jmp
loope
inc
or
out
push
repz
clc
add
test
fldt
shll
fcoms
fisubs
sbb
sub
mov
fwait
das
push
cwtl
cmp
jmp
iret
loop
pushf
pop
in
int
lcall
mov
aad
add
lock
mov
dec
pop
and
ljmp
adc
and
iret
jae
and
ljmp
icebp
aad
addb
push
push
es
ror
pusha
pop
std
sahf
loope
shlb
leave
sbb
lcall
add
cld
push
dec
sub
mov
neg
imul
dec
iret
adc
dec
int3
sub
in
jge
mov
nop
daa
pop
xor
fcoml
out
dec
cmpsb
sbb
mov
ds
mov
adc
insl
inc
shrl
sub
push
addl
mov
sar
div
pop
lea
add
jmp
pop
loop
out
cmc
fisttpll
xorb
inc
or
ds
lcall
and
popf
xlat
out
xor
hlt
fstpt
cmp
loop
lock
arpl
dec
ret
fsubs
adc
or
loope
sbb
push
adc
hlt
jp
xor
mov
sub
jmp
sub
scas
lock
cli
cld
popf
sub
popa
aaa
adc
test
int
sti
sbb
push
push
adc
cmpl
jecxz
shrb
mov
jecxz
loop
stc
push
inc
jns
loopne
sub
cwtl
pop
add
cmpl
cli
or
jge
or
add
push
dec
sbb
jns
imull
insb
loope
cmp
and
aam
test
push
insl
xor
or
inc
push
sbb
cmp
test
sti
das
jb
inc
xchg
sahf
ja
push
and
mov
lods
pop
push
aad
adc
sbb
cmp
lods
add
aas
pushl
adc
pop
push
pushf
orl
pop
mov
leave
sbb
inc
daa
jg
fildll
lods
add
sub
xor
cwtl
fiaddl
pop
fsubrl
or
pop
imul
inc
jl
mov
inc
lods
adc
or
jne
add
jno
in
sbb
fsubrp
xlat
jecxz
repz
adc
cmc
xchg
pop
xchg
xchg
jp
add
test
movsb
add
aad
addl
dec
mov
fldt
dec
cmp
in
pop
or
mov
push
test
dec
in
dec
mov
jmp
out
ret
iret
mov
sbb
sub
and
loope
sahf
mov
mov
sub
add
xor
lods
mov
leave
hlt
dec
jmp
jns
jmp
data16
pop
sbb
mov
xor
je
and
inc
in
adc
push
repnz
pop
adc
loope
and
stos
addr16
std
cmp
cmp
out
cld
sbb
push
rorb
imul
add
pop
loopne
jae
cs
mov
xor
mov
js
fmul
xor
jge
imul
xor
xlat
pusha
xor
sbb
mov
inc
ljmp
out
mov
mov
xor
push
xchg
sahf
xchg
push
ds
push
in
push
add
pop
pop
push
pop
mov
mov
adc
cmpsb
sub
jge
cmc
ret
and
mov
test
cli
shll
out
xchg
ds
leave
mov
movsl
fcoms
xchg
ret
mov
loope
xlat
adc
leave
or
lcall
out
mov
imul
xchg
xchg
inc
pusha
pop
pop
hlt
push
jnp
pushl
jo
daa
mov
dec
scas
rcrb
sbb
lds
andb
fs
jp
fsubl
sub
stos
add
inc
int3
icebp
or
xlat
ds
inc
mov
xor
dec
mov
aaa
cmp
cltd
jg
adc
sbb
push
sub
stc
lds
push
dec
push
mov
repnz
out
cmpsb
int3
je
push
adcb
roll
stos
inc
push
lret
shll
dec
divl
daa
push
repz
mov
sub
outsl
jno
arpl
push
pop
movsb
inc
test
leave
push
mov
adc
jle
pop
mov
xchg
in
idivb
mov
pusha
mov
mov
jnp
addb
std
test
push
lret
cld
inc
cld
add
test
mov
mov
sub
nop
gs
add
push
sub
push
outsl
out
add
xor
aad
lods
mov
aam
loop
push
pushl
rolb
add
adc
clc
dec
mov
add
push
add
push
leave
add
jecxz
andl
adc
push
fwait
outsl
sub
js
das
test
lcall
scas
hlt
pop
jmp
jge
mov
js
cmp
pusha
cmpsl
int3
mov
fs
xor
sbb
cld
jmp
cmp
jmp
shlb
cmp
and
jo
add
cmp
incb
pusha
sub
pop
dec
hlt
mov
std
mov
xchg
cmpsl
clc
dec
mov
into
and
pop
mov
jno
in
xor
mov
adc
loope
out
or
adc
dec
xor
cltd
cmp
push
lock
in
sahf
test
cmp
aaa
sub
scas
xchg
rol
lods
inc
push
pop
pop
push
fisubl
gs
hlt
mov
cmc
pusha
push
gs
cmp
mov
mov
nop
inc
pop
std
xchg
int
lret
in
push
or
imul
aaa
mov
sbb
fstpt
adc
arpl
loope
jo
lea
stos
mov
nop
dec
adc
adc
sti
out
pop
shrl
add
out
fisubl
and
das
sbb
inc
dec
mov
xchg
and
jo
xor
xor
cmp
call
jp
sti
xor
icebp
cmpsb
cltd
arpl
and
loopne
add
and
xchg
jmp
idivl
adc
in
dec
fdivrs
add
and
aas
out
mov
pop
jo
push
sub
sbb
fcmovnbe
xor
out
mov
ror
dec
add
jge
push
pop
mov
test
dec
jne
movhps
test
push
mov
jge
jb
andb
lods
addr16
cmp
jmp
fsubrs
cmp
jae
and
mov
adc
jecxz
jg
push
cld
sbb
fmull
dec
lods
bound
add
dec
xor
dec
out
addr16
lret
jns
add
fisubl
sarb
dec
pushf
leave
fdivl
adc
mov
mov
add
push
addr16
push
fwait
clc
jmp
dec
scas
fcom
bound
sub
mov
scas
das
loope
loop
cmp
data16
cmp
bound
xchg
push
pusha
xchg
rcrb
ret
adc
push
addr16
xor
jno
fstpl
pop
lea
std
ja
sbb
or
cs
mov
and
arpl
inc
mov
ss
ja
pop
imul
sbb
adc
fsts
aaa
cmp
clc
sahf
sbb
and
orb
fbstp
repnz
mov
sub
roll
sub
outsl
jo
jge
inc
sub
lods
cld
xor
dec
sbb
das
sub
jbe
jne
shr
test
cmp
hlt
out
aas
das
shrb
inc
mov
popf
ds
and
insl
das
nop
mov
jg
mov
lret
pushf
fnsave
aam
push
rolb
ret
push
add
or
inc
inc
push
jbe
ljmp
jae
jge
pop
shlb
insl
pusha
mov
inc
xor
mov
push
jbe
das
xor
push
or
mov
xchg
mov
dec
mov
mov
lret
sub
fsubrl
or
cltd
aam
roll
dec
xchg
scas
inc
lea
lock
clc
pop
inc
mov
fldt
ret
and
jecxz
sbbb
aaa
inc
cmp
aam
xor
ja
call
ja
jne
sarl
popf
jmp
ror
pop
jmp
je
popa
cld
sbb
insl
sbb
daa
xor
fcomip
stos
fadds
jecxz
jbe
add
adc
jnp
in
mov
mov
xchg
jb
xorb
mov
fistpl
jo
jle
fimull
and
jg
orl
icebp
and
sbb
loopne
inc
mov
inc
lret
xchg
jmp
and
mov
or
arpl
outsb
add
xchg
jae
or
xchg
jmp
jle
xor
imul
pop
test
popl
mov
inc
inc
xor
inc
sbb
push
fiadds
and
pusha
push
pop
cmp
cmp
out
mov
pop
mov
mov
loopne
xchg
xor
insl
orl
xor
jb
fs
loope
jo
gs
flds
test
fisttpl
pop
and
and
sub
xchg
sbb
cli
xchg
dec
mov
sbb
sub
mov
into
test
push
popa
mov
test
xchg
jns
inc
inc
add
sbb
rcrb
mov
into
lods
push
xchg
mov
mov
int3
mov
lret
mov
sub
dec
push
jbe
popf
aaa
mov
pushw
mov
clc
dec
mov
jg
dec
inc
inc
jae
jge
int
mov
pop
xor
daa
xor
add
test
out
outsl
popa
or
test
pop
mov
or
cli
mov
xchg
sti
cmovge
mov
fmull
leave
jb
arpl
dec
int
shl
imul
in
lahf
int3
js
mov
or
inc
hlt
xchg
inc
test
insl
and
and
push
dec
mov
inc
or
cmp
jmp
and
repnz
push
shrb
imul
adc
sub
mov
gs
cmp
push
add
jge
mov
es
pop
or
adc
or
ds
or
or
clc
mov
lret
push
out
push
mov
push
sub
in
ljmp
aad
xchg
cmc
imul
inc
mov
out
mov
pop
jl
mov
or
adcb
bound
jb
dec
and
jns
scas
int
insl
fiaddl
or
sbb
sub
cmp
mov
add
mov
mov
aaa
pop
sbb
sub
jae
sub
jl
loop
sar
stos
jbe
cmp
test
test
mov
popf
pop
add
xchg
pop
stos
xor
mov
mov
sub
mov
dec
arpl
mov
arpl
fcmovbe
cmp
push
dec
push
test
pop
pop
push
mov
pminub
sbb
adc
or
ret
and
and
scas
xchg
jnp
dec
cmpsl
pushf
jae
push
push
push
fwait
rclb
sub
mov
ret
add
int
or
pop
mov
js
jmp
and
popf
dec
pop
lret
jg
outsb
push
jbe
test
fmull
and
fcoms
inc
gs
mov
in
or
xor
sahf
loopne
mov
loop
sti
mov
mov
js
xchg
fsubp
sub
sub
lahf
mov
mov
dec
push
push
push
sahf
xchg
cld
iret
test
test
inc
sub
sub
cmp
add
mov
dec
subl
jmp
cmovle
pushf
ret
inc
xchg
pop
dec
dec
shl
mov
xor
jb
in
fisttps
fidivrs
or
pop
cmp
inc
int3
jne
mov
sti
dec
pop
dec
mov
xchg
sti
mov
ljmp
test
adc
xor
arpl
push
sub
aam
add
repz
jge
mov
fistl
adc
ljmp
inc
sbb
not
rolb
xchg
sub
cmp
test
dec
in
arpl
popf
movb
popa
les
adc
call
mov
or
xchg
ret
jmp
adc
and
add
mov
adc
loope
ds
inc
add
mov
xor
das
stc
lods
popf
lret
and
ja
dec
mov
stc
and
test
loopne
or
adc
and
mov
lods
cmp
cmp
push
inc
xchg
mov
jbe
nop
test
cwtl
roll
mov
or
cli
jnp
hlt
insb
push
inc
lret
imul
ljmp
mov
sbb
mov
fnstenv
xor
fs
imul
add
fcomp
adc
imul
xchg
or
stos
jnp
jg
xchg
add
push
and
ljmp
xchg
push
rcrb
sub
pushf
ret
mov
xor
mov
pop
add
xchg
cmpsl
or
xor
dec
je
icebp
push
pop
mov
pop
adc
add
leave
negl
addr16
mov
movsl
enter
dec
pop
add
xchg
and
nop
xorb
or
mov
fcmove
or
fnstcw
jg
xor
daa
push
mov
sbb
fistl
mov
cli
push
hlt
cli
shl
mov
ljmp
stos
cmp
aad
loopne
pop
pop
push
test
repnz
xchg
je
in
fcomp
das
mov
mov
add
pop
imul
jl
mov
addr16
and
pushf
fstpl
mov
cld
cwtl
leave
jno
test
ss
pop
fs
jl
fstl
pop
repnz
je
xor
jb
lcall
add
shrl
dec
ja
les
cld
cmp
in
popa
xchg
test
xor
icebp
jp
arpl
lock
movsl
sbb
repnz
fisubl
sub
in
jmp
xchg
mov
mov
outsl
testl
hlt
inc
jmp
loopne
sub
js
cltd
cmpsl
in
pusha
in
std
rorb
and
pop
cmc
or
push
clc
sub
stos
push
add
jb
or
pop
pushf
jl
pop
or
test
int3
cmp
jp
xchg
pop
mov
push
pusha
cmp
and
addr16
cmp
nop
pop
pop
loope
mov
push
jmp
dec
xchg
mov
xchg
xor
addb
nop
xchg
ss
cmpsb
pop
xor
push
js
push
pop
das
out
adc
mov
ret
adc
mov
mov
push
test
sbb
rol
sbb
or
int
jge
jg
mov
sbb
inc
xchg
dec
outsb
ret
xor
daa
cmp
add
sub
cmpl
addb
xor
repnz
jo
stos
int3
ret
push
repz
and
ss
push
sbb
cltd
cli
dec
pusha
push
leave
xchg
mov
movsb
pop
inc
sub
sbb
mov
pop
and
fidivs
in
lahf
les
dec
jl
cmpl
fildll
test
xchg
out
inc
iret
data16
push
inc
pcmpeqb
adc
mov
jns
sbb
fs
inc
out
cmpsb
xchg
lcall
hlt
add
rorb
stc
mov
shr
ja
out
inc
shl
dec
in
jmp
sub
clc
test
inc
scas
push
sbb
inc
es
adc
outsl
push
ret
jmp
sub
ret
jns
fidivs
es
ret
outsb
je
inc
clc
or
push
mov
movsb
mov
mov
je
fisubs
sub
xor
lcallw
mov
adc
std
insl
inc
jno
inc
cmp
xchg
mov
inc
jl
lcall
out
fbld
pop
ret
in
scas
in
ja
jg
pop
pusha
lret
or
cmp
mov
in
fmull
xchg
cli
cmp
sub
and
jns
or
cmc
sub
push
mov
cvtps2pi
and
push
leave
insl
jecxz
scas
mov
lret
enter
mov
and
push
mov
andl
std
cmpsb
jecxz
aaa
xchg
movb
pop
adc
pop
lods
lock
and
mov
pusha
aaa
shll
cmp
xor
push
pushw
push
fadd
push
out
test
std
add
xor
repnz
sbb
sbb
popa
scas
sbb
ror
fstpl
insl
inc
xchg
sub
loop
js
xchg
or
add
int
leave
xchg
test
in
mov
in
test
or
mov
bswap
sub
cmpsb
lcall
cltd
mov
jnp
and
xlat
es
xor
dec
hlt
inc
in
popf
iret
jnp
cmp
in
push
ret
xchg
es
cmp
mov
pop
fstl
jo
adc
pusha
cmp
inc
push
add
sarl
mov
sahf
idiv
aad
idivb
fdivp
xchg
leave
stos
lds
sub
sbbb
pop
aas
jp
sub
sub
adc
ret
push
sub
bound
mov
sub
mov
leave
mov
out
cmp
fidivl
mov
inc
stos
xchg
hlt
inc
test
pop
adc
hlt
cmc
es
sub
jmp
sub
rcll
lret
add
test
lret
xor
inc
stos
repz
in
jg
pop
repnz
dec
mov
sar
jno
cld
roll
fdivrl
es
sub
lea
test
int3
repnz
xor
sub
xor
mov
push
mov
jl
inc
mov
and
xchg
add
jle
xchg
dec
sbb
adc
inc
mov
sbb
xchg
sbb
push
fcomip
sbb
jae
daa
mov
jb
popa
jo
aam
adc
and
inc
xchg
leave
test
and
pop
jmp
add
dec
cmc
ret
out
out
imull
mov
icebp
addb
pop
inc
out
test
mov
add
mov
push
ja
inc
and
sub
jb
inc
faddl
aam
or
pop
in
cmpsl
imul
xor
and
inc
add
lahf
lcall
pop
xchg
lahf
test
pop
adc
outsb
ss
adc
jne
inc
mov
jle
sub
aam
arpl
push
js
jno
movsl
rcl
outsl
lret
sbb
int3
jb
gs
mov
loopne
mov
dec
or
test
mov
cwtl
pushf
cmp
movsb
cmp
pop
jae
mov
bnd
sbb
aas
adc
push
and
iret
inc
jecxz
bound
pusha
or
sbb
xor
add
mov
jnp
cmp
pop
in
shl
mov
inc
mov
xlat
jbe
mov
cli
and
popf
enter
add
dec
cli
mov
repz
inc
loop
pop
sbb
and
outsl
and
mov
inc
mov
push
dec
lea
xchg
dec
sub
rorl
sti
int3
pop
jb
jl
adc
sub
stc
ljmp
pop
mov
scas
outsl
and
mov
xorb
jo
or
mov
or
adc
daa
das
inc
pop
mov
andl
or
out
pop
sub
add
push
mov
lods
push
sbb
jne
ds
into
out
lds
cmp
sbb
push
and
jl
push
jo
jne
pop
push
cs
movsl
pop
jno
xchg
jae
adc
dec
in
mov
stc
xchg
xchg
cwtl
mov
lods
dec
movsb
das
fcompl
sbbb
int3
pop
cmp
pop
mov
mov
in
aam
mov
outsl
out
and
xor
or
mov
mov
fucomp
mov
jg
dec
add
js
cmp
nop
lret
adc
inc
repnz
jns
out
lcall
popa
push
and
push
push
sbb
and
add
jg
pop
lods
sub
cld
and
adc
add
lcall
push
sub
mov
imul
loop
insb
xchg
sti
arpl
test
xchg
sbb
bswap
pop
inc
aad
popa
xchg
dec
fstpl
das
dec
add
lahf
out
jns
push
inc
aam
pushf
cmpsl
sti
in
in
sbb
mov
jbe
test
lcall
sub
int3
stc
and
mov
daa
xchg
test
sbb
out
xlat
and
shll
lea
xchg
sbb
ss
dec
lahf
and
mov
mov
imul
xchg
outsb
repz
fisubl
rolb
jl
cmpsl
dec
jne
jae
cwtl
mov
mov
push
das
scas
sub
push
or
subb
jnp
ljmp
insb
mov
fistpll
push
int3
jne
shll
jnp
mov
cltd
or
fwait
aaa
jno
push
push
push
sbb
js
adc
roll
ret
cwtl
je
dec
ret
neg
lock
adc
test
test
fxam
or
sbb
hlt
sbb
jbe
or
sbb
fs
outsb
out
and
addr16
adc
jmp
stos
mov
stos
cmp
movsb
fadds
dec
sbb
sbb
imul
leave
fwait
cmp
pop
and
pop
jecxz
xor
push
mov
mov
sbb
ds
mov
outsl
and
decl
in
into
jl
js
inc
clc
loope
xor
dec
aaa
jnp
je
mov
cmpsb
ss
mov
int
push
leave
xor
popa
aas
push
movaps
and
cmp
cwtl
sbb
inc
dec
add
adc
outsb
mov
dec
adc
notb
popa
and
jecxz
andl
idivb
rclb
mov
clc
dec
movl
shrb
cmp
sub
push
insl
int
inc
ffree
insl
rcrl
push
adc
xchg
pushf
and
push
fistpl
mov
inc
xchg
pop
mov
lret
pop
and
iret
in
jl
aas
push
inc
lret
sti
pop
xor
lret
dec
mov
outsl
inc
fsubrl
aad
ret
pop
andl
cli
xchg
lods
sbb
adc
sub
decb
mov
and
mov
rolb
clc
jo
int3
xor
push
cld
lahf
into
stos
cmpsb
movsl
ss
or
sti
insb
mov
fidivrl
xor
push
aas
dec
ret
out
xchg
dec
xor
addr16
push
test
dec
xchg
adc
jno
pop
or
push
test
sub
scas
sbbl
pop
stos
outsl
cmp
rolb
shr
sahf
dec
and
gs
lret
lret
xor
jl
cmp
pop
es
sbb
aad
imul
popf
fadds
xchg
pop
lret
int
mov
dec
xchg
add
or
mov
js
cmpsl
and
dec
push
cmpsb
and
daa
xor
cmp
jg
ss
adc
mov
cmp
imul
bound
ljmp
fldl
mov
popa
pop
mov
xor
pop
mov
out
push
add
mov
in
and
outsl
adc
mov
test
arpl
or
and
mov
mov
add
pop
andl
cmp
icebp
js
mov
adc
cmp
orl
add
dec
mov
ds
shrl
leave
and
iret
popa
stos
jo
loopne
aam
inc
mov
mov
test
cmp
add
aad
jmp
dec
loope
sub
stc
hlt
mov
lods
nop
pop
movsb
mov
mov
pop
add
decb
ret
in
nop
shlb
cltd
mov
cmc
jge
push
ret
and
push
pop
sbbb
pop
stos
in
pop
add
mov
stos
push
mov
pop
aaa
sbb
icebp
nop
stos
test
xor
xchg
sub
je
movsl
mov
pop
cmc
xchg
adc
test
mov
fadds
jg
dec
stc
test
push
dec
xchg
jne
dec
shr
arpl
sarb
push
pop
pop
pop
dec
push
ljmp
pop
aas
sub
sub
mov
iret
inc
sub
sub
ds
or
scas
cwtl
loope
xor
js
lds
faddl
pusha
lock
lods
xchg
daa
jl
add
push
lods
push
scas
lock
adc
pop
in
and
and
dec
out
js
or
sarb
jns
ficomps
sub
pusha
cmp
cmp
in
dec
rol
aam
enter
or
xchg
sahf
mov
repz
cmp
and
out
mov
pop
fxtract
popf
xor
sarl
out
cmp
lock
negb
js
cmp
jmp
fidivl
mov
fidivrs
rclb
sub
push
cs
rolb
sti
jo
movl
fistl
add
push
mov
testb
test
icebp
adc
push
dec
mov
jge
mov
ret
mov
inc
hlt
test
jge
mov
xchg
mov
sub
push
out
rorb
popf
push
fildl
inc
mov
lahf
cmc
push
out
pusha
pop
cli
mov
call
add
pop
xchg
cltd
out
notb
fwait
into
fdiv
jbe
or
out
xor
and
mov
push
mov
dec
add
add
mov
inc
mov
xchg
mov
aam
xchg
fsubrp
sub
xchg
pop
xchg
inc
xchg
mov
adc
add
dec
and
mov
cltd
jle
add
ret
add
das
pop
push
adc
mov
into
or
sub
loope
mov
mov
repnz
leave
lds
sbb
daa
push
aam
loopne
xor
xor
daa
lock
je
mov
daa
fisttpl
add
xchg
enter
ds
xchg
push
jecxz
in
mov
xor
fdivrs
jmp
add
and
push
and
cmp
jmp
and
fistps
into
je
inc
movsl
dec
dec
mov
or
mov
mov
not
add
pop
mov
roll
or
sub
pop
add
loope
and
ja
cwtl
pusha
cwtl
inc
orl
std
push
int
cs
ljmp
jnp
cmp
test
push
inc
ss
adc
loope
divb
push
decl
push
scas
bnd
xchg
jb
xchg
rorb
aas
ss
xchg
cwtl
popf
fmul
push
jb
xchg
test
adc
mov
std
les
pop
add
test
jmp
jno
mov
cmpsb
orps
fcmovne
mov
inc
dec
or
mov
mov
or
adc
inc
xor
xor
cwtl
and
sbb
js
adc
mov
shll
inc
mov
xlat
mov
enter
stos
mov
jne
xlat
js
pop
notb
fwait
mov
je
setbe
popa
leave
fists
hlt
mov
add
sbb
push
lods
xchg
mov
popf
lock
xchg
mov
incl
arpl
add
lret
inc
inc
push
rcrb
outsl
stc
add
notl
jecxz
pusha
pushf
dec
adc
pop
rcr
jl
movsb
mov
dec
incb
sub
in
test
imul
adc
iret
and
pop
pop
subb
mov
stos
out
mov
ja
icebp
and
push
add
pop
int3
stos
sbbb
sarb
mov
out
lahf
and
pusha
fcomps
xchg
aaa
dec
or
scas
mov
aaa
push
int3
out
das
cltd
push
data16
js
in
jle
push
shll
inc
jbe
ss
push
sti
movsb
inc
das
cltd
and
sbb
shl
lret
repz
jmp
insb
test
add
or
mov
pop
inc
aad
ljmp
add
inc
sbb
jae
fcompl
sar
jnp
icebp
dec
in
aas
cmp
mov
es
mov
jno
les
decb
jge
mov
ret
or
inc
enter
punpckhbw
adc
jp
cmp
ss
sub
pushf
cmc
cmp
dec
mov
sub
cli
cwtl
mov
xor
enter
and
fcomip
push
lcall
inc
movsl
fistps
add
mov
dec
repnz
nop
test
data16
mov
push
stos
pop
and
es
nop
pop
and
jns
mov
sarb
out
stc
daa
ljmp
adc
mov
fxtract
pushf
sbb
xor
ja
xchg
pushf
lret
mov
xor
mov
cwtl
xchg
and
push
pop
mov
nop
jle
jb
cld
mov
push
aad
icebp
adc
sub
fdivrp
lahf
movsb
ja
jmp
or
stos
rcll
pop
into
scas
out
inc
icebp
mov
mov
jo
push
cmpsl
push
pop
insb
inc
mov
pusha
pop
mov
inc
int3
outsl
adc
std
mov
clc
and
leave
aad
sahf
jns
aad
mov
es
jno
cmp
adcb
outsl
arpl
add
add
push
xchg
iret
repnz
scas
sbb
iret
push
aaa
dec
xlat
sahf
dec
adc
add
into
inc
pusha
mov
xchg
adc
hlt
xchg
push
push
push
imul
pop
jne
or
jmp
ja
dec
arpl
xor
inc
pop
jnp
or
test
mov
cs
std
testl
inc
mov
xchg
push
xchg
cmpsb
pop
pusha
aas
xor
aam
sub
jmp
push
mov
push
aam
addr16
movsl
test
push
cld
test
mov
fwait
enter
dec
sub
adc
xchg
mov
jmp
push
sti
xor
dec
inc
insb
lretw
aaa
stos
insl
cwtl
xchg
stos
js
out
loop
sahf
add
jp
mov
enter
outsl
stc
or
stos
cltd
jmp
fimuls
xchg
push
jl
lods
cmpsl
mov
xchg
cmp
nop
jg
and
mov
stos
std
les
push
in
shll
add
xchg
loopne
jl
mov
xchg
jecxz
cmpl
sub
cmpsb
ljmp
pop
xchg
dec
mov
fxch
rcll
push
cli
xchg
adc
into
push
das
in
inc
mov
or
jle
dec
dec
xlat
jecxz
mov
lods
stc
insb
cmp
xchg
fcomi
cld
mov
ret
je
imul
out
jno
sbb
jno
ficompl
jnp
sub
mov
xchg
test
test
dec
inc
jmp
popf
clc
mov
int
loopne
js
clc
push
fstpl
adc
out
stos
cmpb
push
mov
xor
das
xchg
mov
and
cmp
cmp
sahf
dec
or
out
mov
imul
jl
int3
or
cmpsb
mov
add
ret
mov
adc
jecxz
jb
and
add
sbb
adc
std
push
jmp
js
adc
shr
pop
mov
ret
inc
inc
popa
pop
mov
setno
cld
out
pusha
jo
in
iret
add
adc
mov
jo
cmpsb
mov
pop
jb
dec
dec
flds
and
cwtl
lret
std
popf
pop
pop
rclb
sbb
or
push
cmpb
call
clc
mov
sbb
xchg
mov
and
and
jae
lds
or
mov
outsl
fucomp
lahf
js
in
clc
fidivrl
ret
dec
stos
push
movsb
dec
adc
xor
push
out
push
daa
pop
inc
adc
xchg
pop
loop
lods
mov
mov
jns
and
inc
insl
mov
add
cld
add
fucomip
mov
push
loop
pushf
push
mov
jl
mov
dec
push
sub
mov
xor
inc
jmp
add
jno
aas
jo
pop
xor
adc
lods
xchg
xlat
cmp
in
inc
std
ret
cmpsb
loope
stos
sub
or
or
xor
inc
push
sti
outsl
push
inc
lods
cmp
test
sub
repnz
ds
adc
into
orb
push
ljmp
ds
push
jp
fidivrl
jb
jbe
xor
fnsave
call
or
int3
sbb
pop
mov
jbe
jno
jnp
lret
push
out
push
cmp
int
xor
aaa
scas
test
jb
insl
push
pop
sbb
lret
repnz
fnsave
push
imul
jecxz
hlt
cmpl
push
mov
icebp
mov
fdivl
jp
pop
xor
inc
mov
or
mov
lcall
xchg
shrl
pop
pop
dec
loope
das
arpl
rorb
push
jge
or
mov
std
push
mov
sub
popa
xchg
inc
call
jns
ret
arpl
jecxz
popa
push
jmp
in
pop
add
lret
sub
ljmp
test
dec
jg
scas
sub
sub
in
sub
mov
mov
xlat
adc
shlb
and
cmpsl
or
mov
roll
xchg
xchg
add
and
gs
jnp
xchg
ja
mov
and
xor
imul
pmaxub
adc
ss
int3
filds
repz
or
nop
daa
add
or
cmpsb
and
shlb
dec
bound
lretw
popa
pop
sub
fbld
and
adc
loopne
int
mov
loope
push
call
adc
mov
mov
mov
add
and
leave
jmp
lock
lcall
or
xchg
stc
lret
jecxz
mov
or
mov
add
sbb
lock
dec
mov
pop
jle
jge
cmp
sub
xchg
lret
dec
out
imul
adc
lcall
inc
add
mov
loop
mov
xor
out
mov
fs
or
orl
nop
outsl
cmp
mov
repz
aaa
cmp
shrb
mov
pop
or
pop
jnp
lods
push
push
test
xchg
insb
and
iret
fdivrs
pop
cmp
jno
push
ret
mov
xlat
int
push
daa
in
adc
pop
filds
repnz
adc
sub
daa
stos
loop
jns
rcrl
push
pop
push
lcall
aad
stos
scas
cmp
pusha
sbb
jg
push
negb
cmp
pop
cs
xchg
push
xor
or
inc
inc
jge
ret
xor
or
sub
mov
mov
pusha
nop
scas
inc
sub
dec
fsubrl
pushf
rolb
lahf
mov
repz
lret
add
pop
inc
sub
or
js
shlb
pop
push
pusha
jno
jg
and
mov
fdivrl
jp
mov
jge
push
lods
sahf
fmull
loope
dec
push
or
sbb
sbb
into
outsb
insb
leave
sti
test
xchg
into
shlb
test
and
jecxz
cwtl
mov
push
sub
xchg
jne
insb
fwait
cmp
in
in
jne
mov
es
arpl
add
ficomps
mov
xchg
adc
jno
scas
mov
and
fidivrl
xor
popf
sbb
sbb
iret
pop
adc
movsl
push
push
in
test
cwtl
out
test
fwait
sbb
lods
pop
fadds
fldl
xor
stos
cwtl
pmulhuw
nop
push
lahf
jle
mov
jbe
mov
mov
or
in
cld
repz
out
fwait
push
jbe
jno
mov
mov
es
add
xchg
test
imul
notl
int3
push
pop
push
hlt
and
xchg
jnp
aad
add
jmp
movsl
dec
mov
adc
pushf
cld
popa
jecxz
shrb
or
ss
std
stc
jmp
pushf
jne
cltd
test
decl
pushf
pusha
and
cld
icebp
mov
mov
dec
mov
sbbb
jbe
pop
sbb
sbb
scas
into
icebp
fisubs
mov
xchg
xchg
adc
fistl
mov
mulb
dec
pop
xlat
cmp
adc
fisttpl
dec
lds
in
lock
adc
cmp
repnz
jg
insl
jns
xor
jge
push
lds
mov
std
and
ss
xchg
dec
test
fst
jnp
enter
in
push
rcrl
daa
ss
dec
sbb
push
fsubrs
ret
je
mov
cmpsl
into
jp
ret
mov
xor
pop
aam
aam
mov
insb
cwtl
dec
cmp
cmp
ret
scas
push
daa
and
pusha
jns
dec
xchg
inc
popf
scas
hlt
incl
or
je
push
xor
ja,pn
aas
push
jge
mov
jnp
push
in
mov
stos
jp
inc
out
cmp
in
fsubr
lods
xor
sub
lcall
fs
jge
sub
push
xor
popf
jl
pop
xlat
push
shlb
lock
out
js
lods
ja
mov
sbb
cltd
xchg
or
test
pop
test
adc
pusha
das
cmp
jle
addr16
outsb
cmp
or
adc
add
jbe
push
fs
pushl
pop
or
jbe
mov
xchg
int3
aaa
subl
pop
mov
mov
dec
lret
fidivrl
pop
mov
cmp
mov
xchg
in
dec
aaa
mov
bnd
call
xchg
fcomip
insb
mov
out
hlt
mov
push
movb
xor
inc
addr16
mov
jne
push
daa
sbb
loopne
jae
out
push
add
sbb
mov
arpl
push
xchg
aad
xor
pusha
xor
xchg
jge
movhps
aad
pop
stos
test
adcl
mov
int3
rcll
adc
push
sbb
in
out
pop
test
jnp
inc
xchg
sub
xor
adc
adc
dec
lret
cs
cmp
xor
mov
mov
stc
cmc
stos
loope
ret
shl
in
add
push
icebp
aas
jl
sbb
inc
int3
fbld
aam
test
je
test
insb
loopne
inc
pop
sti
cld
popa
stos
push
leave
loop
lahf
insb
pushf
fxch
push
repnz
mov
cmp
and
sbb
pop
push
or
clc
xor
cmpsl
mov
cmp
fidivl
decl
pop
je
mov
fscale
mov
popa
mov
sub
cmp
and
and
aaa
dec
cmp
sbb
jp
add
sbb
std
bound
pop
sub
js
or
lahf
pop
hlt
outsl
mov
in
movsl
inc
fidivl
cmp
rorb
mov
data16
xchg
sbb
pop
in
loope
int3
adc
jb
cmp
enter
movsl
mov
shll
leave
cs
pushw
add
push
lcall
insb
out
jmp
ret
adc
lret
pop
add
mov
es
sbb
roll
repz
pop
push
xchg
loop
out
out
mov
rorb
movsl
pushf
arpl
sub
lods
insb
lock
sbbl
xor
into
stos
jbe
movb
cli
add
xor
mov
fdivrs
adc
lds
out
pushf
mov
scas
aaa
add
add
xchg
pop
frstor
shll
pop
xchg
or
mov
mov
scas
ficoml
lds
hlt
mov
sub
movsb
daa
jg
ficomps
mov
and
lock
nop
test
sub
mov
mov
adc
pop
stos
jo
subl
pop
and
int3
popf
cmp
push
jnp
js
scas
popa
or
cmp
xchg
pop
mov
cmpsb
adc
mov
cmp
push
int3
pop
mov
adc
outsl
mov
mov
adc
pop
ja
popf
jne
mov
cli
ja
and
test
xor
lods
push
das
push
mov
addb
pop
aad
pop
sbb
inc
xlat
push
mov
scas
xor
sbb
mov
negl
nop
xor
dec
mov
mov
inc
adc
push
lret
cmp
jg
mov
orb
mov
inc
arpl
jo
pushf
push
sub
sbb
bound
push
insl
inc
cld
sbb
ds
xchg
push
add
xor
subb
xchg
call
fwait
cmp
stc
xor
leave
dec
cld
mov
xor
add
mov
out
inc
adc
gs
mov
mov
jns
out
enter
inc
ljmp
cmp
fistpll
inc
and
gs
mov
push
rclb
lea
cmp
mulb
mov
sub
mov
imul
cmp
lahf
pop
sub
nop
stc
aad
es
insl
in
std
fwait
jns
mov
inc
xor
fsts
fadds
addr16
out
aaa
cwtl
push
cmp
stos
or
xlat
andb
rcl
push
xor
and
adc
inc
fnstcw
mov
orb
and
outsb
orb
enter
pop
pop
mov
pusha
leavew
insl
ja
into
stos
mov
out
dec
dec
add
mov
imul
sub
nop
inc
popa
or
add
inc
pop
pop
iret
jmp
rcll
jp
movsl
arpl
or
mov
clc
call
mov
and
dec
pop
mov
pop
mov
sti
jb
cmpsl
jl
fisubl
inc
aaa
pushf
daa
xchg
cmp
ret
sbb
daa
lahf
xchg
mov
arpl
in
loopne
cltd
in
pop
mov
jmp
mov
mov
push
leave
sbb
or
jmp
sub
test
add
mov
outsb
fcomp
hlt
push
pop
dec
aam
push
lret
test
jbe
jge
jnp
lret
repz
mov
inc
dec
jnp
aad
fucom
bt
sbb
nop
lods
stos
xchg
jp
push
lock
mov
nop
retw
push
adc
fists
add
enter
in
xchg
jp
loopne
movsb
daa
rorl
mov
jae
xchg
gs
nop
hlt
ljmp
popa
jb
jp
cmpl
enter
dec
lcall
cmp
popf
gs
xchg
rclb
mov
mov
fstpt
arpl
test
shlb
add
call
pop
jbe
addl
cli
gs
lret
or
lahf
test
jno
cltd
mov
mov
sbb
mov
ret
push
test
xor
adcb
or
sbb
out
lret
stos
mov
mov
fidivs
into
out
mov
push
mov
inc
popa
das
std
loopne
test
arpl
mov
xchg
or
pop
rolb
js
cmp
xchg
cltd
aas
pop
fst
cli
sub
dec
and
push
aad
adc
dec
mov
fstpl
pop
pop
add
jecxz
fadd
dec
fmuls
jge
int3
xor
fnstenv
or
bound
pop
jl
fnsave
std
pop
into
out
mov
daa
inc
and
xchg
adc
sbb
js
dec
mov
out
add
pop
mov
aas
les
push
fs
push
nop
mov
or
cmc
push
nop
mov
out
push
jmp
data16
frstor
push
jae
decb
icebp
push
sub
inc
negb
xor
and
mov
out
stos
cmp
shrl
inc
mov
xchg
or
gs
xor
mov
xor
lods
mov
jo
ljmp
jp
push
or
fcomps
and
fst
shl
cld
sub
test
lock
xor
sbb
les
scas
jnp
and
mov
xor
ret
pop
mov
sub
bound
jg
and
sub
loope
inc
push
push
outsb
inc
add
testl
mov
mull
popf
push
or
push
adc
xlat
xor
pop
in
jge
cli
sbbb
loopne
xchg
ja
out
jecxz
dec
cltd
in
repz
movsb
pop
movl
mov
cmc
mov
daa
pmaddwd
dec
movsb
aaa
rol
scas
jae
add
jp
dec
add
hlt
lret
mov
nop
sti
popf
mov
fstpt
push
xor
out
or
mov
xchg
jb
sbb
sub
inc
andl
mov
jp
pusha
lret
inc
call
sub
jg
dec
outsl
jmp
mov
xor
dec
cmp
cwtl
adc
jo
lret
repnz
add
rolb
jp
sbb
rcrl
adc
ret
lcall
pop
xchg
pop
dec
popf
push
xor
dec
bound
imulb
ja
and
bound
push
fldl
lods
jmp
inc
sub
push
imul
mov
out
mov
mov
sbb
push
or
xchg
frstor
ftst
xor
arpl
inc
out
cmpsb
clc
inc
mov
cltd
hlt
jne
arpl
in
out
ds
aas
inc
in
mov
lods
nop
and
inc
ret
xchg
pop
mov
or
cmp
push
loopne
mov
dec
mov
ret
clc
xchg
push
sub
mov
lahf
add
adc
imul
sbb
dec
xor
out
int3
les
pusha
inc
sub
and
cs
movsb
or
mov
xchg
mov
divl
repz
rorb
mov
addb
das
leave
gs
pop
mov
outsb
and
bound
pop
cmpsl
arpl
out
and
push
lock
aaa
push
loopne
xor
pop
arpl
imul
fs
rcrb
sbb
rcrl
inc
sbb
push
aas
stos
stos
xor
mov
sbb
dec
aam
filds
ficoms
fmuls
pop
push
aas
sub
push
cmp
push
jge
xchg
cmc
lret
aad
add
pop
cld
jle
inc
xor
cmpsl
mov
inc
shlb
jb
mov
punpckldq
push
in
outsl
mov
stc
jge
push
pop
pop
cmp
sti
jbe
adc
es
fnsave
nop
lock
test
mov
cmp
lahf
xor
outsb
je
out
add
xchg
cmpb
mov
pop
xchg
and
jb
mov
adc
xor
bound
loope
push
xchg
rol
mov
or
xchg
xchg
cmp
jns
mov
jb
xchg
sbb
popa
jl
sbb
inc
nop
js
push
cli
xor
fstpl
sahf
mov
jo
inc
jge
xchg
fidivs
and
in
xchg
xchg
xor
sbb
jae
stc
xor
addl
xchg
enter
pop
xor
fimull
js
inc
or
fwait
and
push
popa
movsl
cltd
ds
scas
call
fisubl
mov
xchg
push
inc
mov
movsl
inc
inc
dec
outsb
and
out
in
lock
xlat
mov
lods
sahf
pop
jp,pt
xor
movsl
cmp
adc
mov
enter
add
fisubl
sub
mov
scas
mov
in
test
mov
lods
jp
xchg
inc
daa
cmp
pop
repnz
jbe
pop
int3
fwait
mov
fwait
push
inc
inc
mov
cmpsb
add
or
mov
jo
popf
stos
adc
cli
add
add
xor
mov
pop
fwait
dec
mov
dec
inc
movsb
and
ds
xchg
xor
pop
pop
mov
inc
imul
andb
add
inc
cmp
adcb
xchg
sub
jno
pop
pop
add
shl
sbb
and
mov
out
test
hlt
lods
std
cmpsb
and
jl
mov
push
inc
stos
add
scas
mov
cwtl
test
call
test
cmp
stos
out
fiaddl
js
cmp
daa
imul
xchg
idivb
push
in
fmull
repnz
push
sbb
and
push
cld
xor
bound
popa
movsl
leave
pop
shrl
jns
fldlg2
lods
xchg
mov
inc
hlt
inc
test
lds
inc
rol
inc
pushf
jg
fsts
stc
iret
push
hlt
jp
fsubrs
or
in
js
cli
inc
in
push
lods
rolb
sub
stc
loopne
push
adc
jbe
test
mov
xchg
or
icebp
fsts
pop
enter
lcall
sbb
jl
les
inc
inc
clc
cmp
sub
xor
and
cmp
cmp
mov
insb
out
xchg
push
repz
push
push
jp
inc
gs
test
fldl
stos
stc
fwait
call
cltd
push
mov
mov
shlb
xchg
les
inc
jecxz
movl
and
hlt
adc
subl
cmp
fldt
adc
mov
xchg
movsb
scas
sub
mov
pop
rcll
pop
mov
jl
mov
insb
ja
lcall
dec
push
xchg
imul
xor
mov
push
out
loop
xor
mov
imul
in
imull
pop
sub
mov
aad
stos
cmp
xor
add
jp
pop
add
mov
and
pop
xor
ret
scas
shl
inc
hlt
pop
dec
fisttpl
stos
das
fildll
out
into
jns
and
jno
pusha
and
mov
xchg
fcmove
call
test
cli
pop
pusha
mov
std
testl
cld
xchg
and
lret
test
jecxz
rol
lret
mov
add
lea
pop
sub
pop
pop
sbb
sub
mov
cmp
inc
or
pusha
and
mov
pop
std
pusha
in
inc
bsf
mov
xchg
push
gs
cld
in
mov
or
sbb
fcomps
dec
jbe
mov
fwait
in
mov
popa
or
jno
mov
pop
pop
adc
xchg
nop
inc
pop
cltd
std
pop
xchg
not
and
xor
mov
lret
xchg
jmp
std
xor
scas
aaa
cli
sbb
mov
nop
lds
jecxz
push
insb
inc
dec
lods
cmp
cmpsb
stos
inc
mov
out
cmpsl
push
lods
jl
xchg
out
lret
clc
mov
bound
test
sbb
xchg
imul
ret
lcall
iret
dec
sbb
cmp
adc
je
pusha
sub
jbe
int
adc
jmp
inc
arpl
sahf
mov
mov
imul
jecxz
adc
dec
jge
int
sbb
mov
aas
mov
dec
fcoml
xchg
push
setg
xchg
es
cmp
and
push
pop
inc
mov
in
mov
xor
jmp
cmp
push
lods
loopne
mov
ficomps
ss
inc
les
outsb
xchg
loopne
and
xchg
shrb
jmp
xor
cmp
fdivrp
push
incb
push
stos
mov
in
daa
lds
cmc
rcl
leave
xchg
ja
negb
inc
xor
ss
psubd
add
mov
ret
mov
daa
std
stc
mov
push
inc
add
sbb
mov
stc
push
sub
stc
ljmp
mov
sbb
dec
test
ljmp
imul
adc
clc
push
pop
je
aas
fcompl
push
repz
jo
adc
les
je
xorb
and
cmp
dec
stc
push
sahf
shll
in
or
jbe
xor
sbb
aam
aas
ficomps
xchg
out
outsl
jp
jns
decb
mov
sub
test
sarb
dec
movl
push
addl
sub
sbb
das
mov
cmc
stos
in
mov
pop
fwait
dec
cmp
je
cmpsb
xor
fld
cmp
test
lret
xor
aad
test
aaa
ja
data16
dec
cmpb
push
push
js
rolb
pop
dec
aaa
pop
pop
mov
int
ds
dec
xchg
cmp
push
mov
loope
push
outsb
mov
outsb
fisubrs
lock
icebp
movsb
push
out
out
push
sub
fbld
in
xchg
aad
jge
mov
leave
lods
push
out
cmp
mov
jmp
int3
pop
or
mov
mov
inc
pop
inc
xor
adc
jge
inc
or
dec
daa
or
les
arpl
andl
mov
jb
xor
add
imul
into
sbb
mov
mov
push
gs
mov
lds
jno
leave
and
pop
aam
movsb
and
xor
mov
ret
cltd
gs
jecxz
xor
jno
mov
inc
and
mov
cltd
pop
imull
loope
sub
cltd
sbb
jge
push
daa
push
daa
fwait
add
inc
arpl
xor
addb
aad
pop
cmp
clc
push
push
push
outsb
xor
dec
imul
testl
cmpsl
pusha
adc
mov
shlb
mov
aam
lock
inc
and
cltd
lahf
call
sti
fbstp
inc
jbe
jae
fstpl
adc
or
fwait
or
or
xchg
subl
inc
pop
adc
movaps
repz
sbb
inc
xor
sbb
sub
mov
jb
insb
mov
ds
xchg
mov
or
scas
popf
xor
jno
jl
idiv
pop
shrb
jecxz
in
add
jno
adc
rorb
mov
nop
adc
sbb
adc
popa
mov
in
dec
pushf
cmc
jb
jecxz
sbb
pushf
add
test
fsubrp
jo
mov
in
pop
pop
push
lds
and
sbb
sub
or
popa
adc
ljmp
add
pop
lods
and
lods
adc
ss
or
mov
cltd
mov
and
push
sbb
in
in
and
and
mov
mov
popa
push
push
pop
xchg
xor
inc
sahf
jo
dec
addl
jo
sbb
mov
dec
inc
mov
and
shll
jp
push
add
out
xor
dec
mov
scas
dec
jns
lcall
roll
inc
mov
push
shl
dec
dec
sti
or
pop
stos
ds
addr16
mov
and
inc
stos
jge
mov
mov
mov
inc
fmull
repnz
sbb
xchg
lea
and
test
daa
stos
adc
movsb
fisubl
sahf
out
roll
pop
mov
cmp
movsb
jb
loop
adc
scas
shrb
add
ljmp
into
push
ret
movsl
gs
bound
aas
es
out
pop
jecxz
ja
jne
and
aas
pop
mov
out
inc
mov
mov
fisttpl
aas
add
loop
je
mov
cwtl
movsb
and
push
lock
inc
push
icebp
sbb
pop
sbb
jns
mov
cmp
mov
cmp
fldcw
push
mov
mov
aad
daa
xchg
and
mov
lds
mov
cmp
bnd
cmc
icebp
xor
call
xor
test
and
aam
loope
mov
mov
pop
mulb
lock
pop
pop
ja
mov
or
push
push
clc
jo
sbb
test
loopne
inc
jb
into
inc
cmpsl
mov
xor
ds
mov
mov
sub
in
pop
repnz
stc
sub
jno
push
loop
lret
fwait
dec
lods
pop
sarl
fildl
jl
push
lret
mov
push
and
loope
dec
or
pop
ret
push
mov
loope
fs
cmp
cmpsl
xor
mov
aaa
xorl
lahf
mov
inc
add
cmp
xchg
adc
xchg
fldcw
cmp
mov
cwtl
mov
movl
cs
dec
insl
and
adc
and
out
cltd
adc
inc
inc
add
push
adc
sbb
mov
pusha
mov
je
dec
jecxz
xchg
mov
out
dec
cmp
jmp
testb
jnp
cwtl
push
mov
ljmp
gs
dec
mov
or
pop
mov
enter
mov
shlb
push
call
mov
dec
in
aam
cmpl
or
cmp
xchg
out
aam
shrl
ss
dec
xlat
sub
test
cmp
sahf
test
jle
or
xor
jae
scas
dec
xchg
push
pop
adc
shl
aaa
xlat
rol
les
mov
lods
cwtl
sbb
sbb
fs
int
add
add
jno
gs
mov
jecxz
jnp
ss
sbb
jae
sub
out
mov
lock
and
cmc
lds
scas
fstl
and
cmp
in
sbb
test
stos
sahf
mov
ja
xchg
push
fs
and
adc
test
fstp
and
in
cmp
push
adcl
shrl
mov
fsubr
std
pusha
jno
rol
xchg
int
jbe
xchg
add
arpl
pushf
in
in
inc
mov
push
jbe
shlb
fsubrs
stos
stos
out
and
xchg
enter
ret
sti
dec
push
fstl
mov
test
stos
repnz
insb
shll
cmpsl
xchg
mov
jg
mov
std
xor
sub
cmp
cmpb
fdivrl
pop
sbb
subl
jbe
add
cltd
sub
and
repnz
cld
les
shll
push
mov
pop
das
push
push
or
je
push
pop
lret
mov
es
adc
inc
mov
or
outsl
dec
sbb
imul
mov
sbb
stc
xor
jmp
js
lock
out
mov
std
ljmp
popl
xor
or
aaa
dec
xchg
mov
xor
mov
test
push
out
loope
dec
mov
xor
lods
ss
sub
pop
jnp
gs
int
cld
dec
icebp
out
dec
lret
mov
sahf
push
int
stos
ficompl
popa
mulb
cmpl
je
xchg
in
push
push
stc
and
add
or
push
pop
jae
test
arpl
fwait
jg
popa
jnp
loop
popf
test
addr16
scas
test
cmp
add
sbb
movsl
adc
add
jae
xor
mov
add
xor
xor
mov
fisttpl
push
jmp
push
push
mov
rdtsc
xchg
mov
fs
clc
pop
mov
inc
dec
pop
sub
add
or
nop
leave
lock
rcll
lea
dec
cmp
xchg
jle
xchg
jg
dec
cmc
cli
aad
xchg
lret
call
imul
xchg
dec
in
mov
dec
repnz
or
jbe
outsb
cwtl
fsubl
push
mov
sbb
jne
sub
out
into
sub
mov
out
jae
fsubs
sahf
push
jp
out
negl
leave
out
addr16
pop
xchg
cmp
into
js
sbb
imul
dec
in
pop
imul
out
mov
test
or
xchg
inc
xlat
adc
iret
aam
mov
aaa
std
out
sbb
add
fmull
test
aas
aaa
fistpl
mov
push
stos
mov
push
adc
ds
pop
sbb
dec
push
xor
mov
pop
flds
ror
addr16
push
jae
sub
inc
push
or
push
inc
sub
fwait
arpl
inc
cld
leave
jne
in
mull
cltd
insl
lods
dec
out
sub
in
jp
inc
mov
je
int3
ret
mov
xchg
ret
jg,pn
shrl
inc
mov
je
jl
das
std
mov
jb
lahf
push
loop
cmpsb
mov
cmp
xchg
enter
ss
mov
fdivrl
int
mov
xlat
mov
enter
mov
out
sbb
lods
into
int
test
pop
add
outsb
enter
arpl
jmp
xlat
loope
mov
xor
mov
mov
xor
pop
test
push
sub
out
out
mov
jno
sub
mov
insb
sarl
pop
aaa
lock
mov
mov
lret
in
int
dec
push
mov
jg
cwtl
pop
add
jmp
sbb
inc
nop
lret
mov
jbe
cltd
push
jmp
xrelease
leave
jle
jb
cmp
jb
jno
iret
sbb
pop
mov
jmp
xor
inc
sti
in
add
sub
mov
add
or
ja
mov
pop
jno
add
movsl
cmp
inc
xor
push
jno
push
test
leave
and
jno
mov
sbb
jg
les
out
push
sbb
nop
sbb
sahf
ss
test
xor
sbb
push
insl
pop
imul
js
xchg
and
push
sti
and
fs
cli
push
xor
push
imul
fidivs
icebp
mov
aad
jge
bound
dec
sub
scas
pop
or
jl
inc
sahf
ret
sahf
imul
not
inc
and
push
jne
sbb
test
imul
jge
mov
sbb
mov
or
dec
aad
sub
lods
sbb
mov
std
xchg
scas
leave
cmpsb
sub
sbb
loop
sub
mov
in
rorl
jg
insl
aam
divb
std
xchg
cmpsl
scas
xchg
push
test
xchg
mov
ss
push
ja
int3
cmp
in
mov
movsl
xchg
movsb
jp
sti
repz
movsb
clc
mov
dec
pop
mov
pop
mov
daa
movd
ret
mov
xchg
xchg
inc
rclb
in
push
daa
jbe
jecxz
xlat
stos
xchg
pop
ret
sbb
and
ja
ss
and
cwtl
insb
adc
xor
in
jmp
sbb
jne
sub
adc
sbb
fimuls
das
ljmp
sbb
mov
lcall
inc
call
ret
adc
andl
popa
or
call
jnp
sbb
adc
inc
dec
loopne
in
jmp
ret
ja
xchg
daa
mov
mov
nop
dec
pop
stc
inc
shl
lea
xchg
dec
sahf
dec
mov
data16
pop
insb
push
pop
stc
xchg
cli
lcall
mov
inc
mov
pusha
and
pusha
scas
mov
push
jne
sahf
sub
sub
clc
repnz
push
add
leave
xor
popa
imul
push
pop
imul
bnd
out
adc
dec
loopne
into
popf
rcll
fistl
jle
adc
and
outsl
fld1
push
cltd
popf
xorl
jp
dec
inc
punpckhbw
xor
notl
cwtl
je
hlt
movsl
decb
rcll
sbb
outsl
arpl
or
stc
xchg
adc
lds
rorl
jecxz
jo
clc
xchg
int
mov
out
pand
daa
mov
and
test
into
cs
adc
test
cli
mov
sbb
push
cmp
scas
pop
inc
inc
pop
push
test
fdivr
scas
lea
into
fists
popa
mov
fldl
push
mov
xor
jns
lret
aam
mov
je
sub
push
out
push
mov
ljmp
sbb
mov
jmp
sub
aaa
fwait
mov
lahf
dec
xor
push
mov
mov
mov
in
in
in
imul
sahf
add
or
mov
sbb
test
lods
mov
cmp
clc
shrl
nop
mov
cmp
out
movsl
add
fsubrl
test
sub
addr16
pop
or
add
enter
jg
pusha
ficomps
cmp
mov
pop
push
or
xchg
pop
push
cmp
ljmp
outsb
push
jp
jb
mov
enter
adc
sbb
xchg
fadd
sub
xor
pop
xor
gs
ss
push
leave
iret
and
push
cli
call
xchg
mov
mov
arpl
mov
push
orb
push
icebp
mov
adc
add
into
loop
fucomi
or
xchg
mov
sarb
cwtl
sbb
and
jl
push
cmpsl
fidivl
cltd
adc
addr16
mov
xlat
test
jp
mov
test
sub
lods
mov
add
sbb
movsb
jno
ja
xlat
dec
and
sarb
rol
cmp
mov
pop
jno
xlat
sub
sarb
dec
call
xor
mov
call
jnp
iret
imul
movsl
stos
cwtl
mov
lock
js
rclb
js
xlat
lcall
imul
icebp
pop
xor
sbb
pusha
pop
pop
pop
xchg
repz
sub
scas
mov
dec
in
std
jl
pop
inc
mov
jbe
es
enter
mov
jecxz
rolb
hlt
dec
mov
dec
aaa
lods
pop
repz
mov
fnstenv
sbb
fwait
rolb
xchg
ficompl
inc
push
xchg
mov
cmpsb
cmpsl
fwait
mov
pushf
imul
sub
mull
sbb
aam
nop
push
aaa
int
pop
mov
sub
xchg
and
adc
push
xchg
fimull
je
add
adc
stos
add
cmp
outsb
ds
inc
jge
push
mov
dec
pop
sbb
push
into
push
add
cmp
push
mov
out
and
outsb
shl
sti
mov
lods
dec
in
into
ljmp
jbe
popa
out
sbb
aas
mov
sbb
ficompl
and
lret
xor
dec
xchg
arpl
cmp
mov
sbb
addr16
add
inc
aam
negb
incb
pop
jo
aam
jl
jbe
outsb
cmp
add
push
pusha
push
stos
jge
fiaddl
nop
jbe
mov
popf
mov
sbb
jb
add
mov
lahf
sub
adc
dec
jne
jo
hlt
and
dec
in
xor
pop
orl
scas
mov
inc
cmpsl
out
xchg
cli
sub
cwtl
dec
jnp
mov
and
lea
push
arpl
mov
fldenv
ret
imul
jge
daa
cmp
or
orl
lock
or
das
ljmp
pop
sub
adc
fwait
dec
xchg
loopne
add
loop
fidivrl
pop
lds
cmp
es
dec
mov
bound
xchg
sub
insl
sti
and
xchg
scas
test
xor
ja
out
inc
outsb
and
jne
ficompl
sub
jge
dec
lret
imul
pushf
leave
shll
test
adc
outsb
jg
sub
rorb
xchg
mov
mov
sub
gs
int
les
pop
adc
push
jb
mov
dec
lret
cmp
insb
lods
into
mov
cmp
xchg
cld
jmp
xor
jecxz
cmp
or
push
and
push
leave
int
lds
xor
faddl
dec
xchg
and
inc
xchg
push
lret
and
repz
inc
mov
cmp
leave
xchg
mov
adc
and
xchg
mov
xchg
xlat
cs
sbb
sub
lods
test
or
aam
leave
je
sub
in
daa
cltd
inc
and
sbb
xchg
ss
inc
loop
dec
adc
jp
sub
sbb
xchg
movsb
sub
and
test
fistl
inc
jae
xor
out
xchg
cmp
jno
mov
lret
les
push
xchg
les
inc
push
or
jb
push
inc
xor
push
mov
call
lods
test
dec
mov
repnz
cli
mov
aad
cmp
pop
xor
mov
jmp
xchg
mov
aas
dec
pop
loopne
add
mov
dec
fsubr
inc
iret
sub
sub
dec
add
dec
out
es
fistpl
cmp
idivb
mov
mov
notl
push
mulb
aad
int3
cltd
and
mov
in
hlt
xor
pop
jge
in
xor
ja
faddl
pop
cs
out
je
xchg
rclb
mov
and
fsubrl
test
inc
mov
pop
jo
adc
fwait
or
aaa
jns
in
lods
mov
push
inc
aam
inc
xchg
pusha
in
imul
sbb
or
inc
test
or
pop
jo
mov
repnz
enter
outsb
std
pop
call
inc
mov
movsb
cs
sahf
and
xor
mov
mov
push
or
jo
sub
lods
jo
dec
jg
xorb
and
add
jb
add
add
mov
lds
orl
je
sbb
xchg
sub
fs
rcl
fsub
xchg
fmul
inc
es
dec
pushl
dec
loop
aam
cmp
xchg
test
xchg
aas
inc
lock
push
aam
shlb
jg
jg
scas
ror
int
mov
xchg
mov
fs
jo
xor
dec
and
jle
inc
lock
jge
js
mov
xor
mov
adc
jb
adc
jg
push
and
insb
cmp
dec
cmp
outsb
xlat
sub
sti
mov
cmp
imul
sub
orl
loopne
andb
ret
mov
outsl
notl
flds
repnz
cmpl
adc
cmpsl
hlt
mov
ret
in
fldl
outsb
sub
cmp
nop
mov
js
scas
fstps
and
lock
ja
push
push
mov
mov
aas
test
and
jg
ja
dec
mov
enter
push
sbb
xlat
pop
dec
add
lret
jecxz
rep
ror
jnp
pushf
orb
icebp
xchg
adc
jbe
jo
jge
mov
dec
shrb
jp
lods
mov
imul
add
outsb
repz
in
xchg
or
add
jne
out
icebp
aam
inc
cmpsl
pop
mov
adc
xchg
stos
fwait
lock
sti
loopne
fstps
cmp
sahf
enter
into
pop
psllw
xor
mov
lret
std
cmc
fnsave
andb
and
sbb
sub
mov
fisubrl
push
push
not
out
jb
adc
sahf
pop
jl
jl
add
iret
lods
sbb
daa
mov
sahf
les
dec
cmc
mov
jmp
orb
dec
xor
xor
sbb
mov
cld
mov
xor
mov
push
sbb
add
nop
jmp
cwtl
sbb
mov
je
mov
lahf
mov
lcall
cwtl
insb
hlt
jb
arpl
mov
test
movsl
or
les
into
and
call
ficomps
gs
inc
call
push
test
push
cmp
xchg
push
add
aas
inc
add
incl
lahf
test
cltd
dec
mov
push
cmp
xchg
popf
cs
lea
pop
adc
push
pop
mov
das
dec
fsubl
dec
fisttps
lret
outsb
insb
mov
jae
pop
cltd
mov
pop
push
and
sbb
sar
sbb
imul
sahf
add
jp
popa
lods
mov
or
push
mov
subb
jns
cmp
xchg
push
outsl
xchg
in
adc
push
cmpl
mov
popf
mov
xchg
dec
ret
adc
ds
and
ret
mov
es
js
into
rorb
sti
lods
push
popf
sub
jle
lods
dec
cmp
movsb
daa
ds
imul
clc
lret
std
lods
mov
cmp
sub
ja
fadds
jae
lahf
cmpb
pusha
cs
dec
lea
jl
inc
xchg
inc
outsl
add
aam
aas
adc
scas
in
push
jl
stos
outsb
push
jb
or
push
lods
adc
push
std
add
xchg
icebp
hlt
pop
lods
jns
popa
push
mov
lock
iret
cmp
cld
pop
hlt
cmp
push
bound
loopne
daa
cltd
push
or
lods
pop
sbb
push
jo
xchg
fidivl
pusha
data16
mov
mov
aam
pop
sbb
mov
or
mov
stos
jne
push
push
xchg
int3
cwtl
add
jo
mov
jmp
rcrb
rclb
add
test
fldcw
jbe
cltd
pop
movsl
ror
and
add
inc
mov
out
popf
mov
pop
inc
scas
clc
fnsave
test
ds
jnp
out
rclb
and
push
bound
cltd
ja
rolw
sub
subb
mov
push
imul
and
stos
call
mov
pop
es
jmp
dec
add
cmp
fdivr
inc
lret
xchg
xor
into
push
push
push
jge
adc
lahf
xor
es
leave
lock
testb
popl
icebp
cwtl
out
mov
roll
mov
into
mov
dec
scas
decb
inc
daa
cmpsl
jae
cmpl
xchg
pop
jl
sub
cmp
in
inc
adcb
mov
pop
test
and
add
or
out
dec
out
rol
sub
movsl
mov
ret
cmp
xchg
cmp
daa
rcrl
adc
mov
and
xchg
clc
je
dec
mov
frstor
insb
aam
stos
std
or
add
mov
aaa
shr
daa
hlt
or
insb
sahf
das
test
mov
ficoml
je
mov
in
mov
test
push
mov
add
sbb
mov
out
or
es
xchg
jg
push
xchg
daa
and
push
xchg
popf
rorb
sub
push
cmpb
ss
insb
lahf
sbb
scas
pop
fwait
lcall
nop
mov
and
je
sbb
jmp
sbb
pushf
mov
mov
cmpsb
or
cltd
scas
xor
push
das
pop
mov
mov
lcall
lret
scas
jp
push
jne
test
lret
lret
test
or
stc
out
pop
mov
cld
pop
test
inc
cmpsb
cmp
mov
and
sbb
xchg
pop
xor
and
pop
push
mov
sbb
jmp
subl
push
hlt
out
out
movsl
dec
sub
xlat
aad
xchg
stc
gs
pushf
adc
lcall
je
mov
and
inc
and
and
inc
inc
fstpl
or
in
es
in
fsubs
mov
int
and
mov
mov
test
insl
and
add
cmpsl
sbb
aaa
in
pop
push
mov
mov
push
jge
and
subb
arpl
sub
out
cld
lahf
mov
or
popf
les
movsl
mov
mov
cs
inc
popf
aas
outsl
arpl
sub
mov
push
iret
pusha
push
popa
sub
scas
add
aas
in
cmpsl
loopne
je
lods
or
jns
insl
ljmp
lock
in
fcomps
aam
out
jns
mov
sbb
sbb
inc
in
test
inc
lret
imul
xor
pop
cmpsl
loope
incl
arpl
inc
les
adc
sti
bound
cmp
movsb
xchg
pop
pop
stc
popf
in
imul
test
ds
add
xchg
sbb
mov
mov
pusha
inc
je
xchg
mov
adc
push
xor
lcall
aaa
leave
push
dec
das
gs
dec
pop
fidivrs
jge
xor
mov
lock
or
mov
mov
inc
jno
xchg
pop
leave
adc
imul
mov
movsb
inc
fldl
fistps
int3
fimull
or
rcr
add
jo
out
sbb
adc
aaa
jo
repnz
add
enter
sub
jle
fisubrs
and
xor
mov
dec
push
dec
pop
xchg
dec
dec
test
adc
insb
inc
repnz
fcomps
dec
push
insb
dec
xor
hlt
aad
sbb
cmpsw
inc
pop
leave
xchg
ret
push
pusha
sub
or
aas
adc
xlat
jb
iret
xchg
push
xor
fnstcw
add
mov
jle
jbe
sbb
stc
pop
fs
in
mov
add
push
movsb
pop
aad
cli
ljmp
ficomps
fs
scas
jecxz
push
aad
out
insl
adc
and
jp
push
enter
fistpll
add
nop
scas
sub
and
mov
push
or
push
xor
add
add
adc
lock
mov
sbb
mov
cmc
in
ficoml
bound
xchg
cmc
fnop
mov
mov
xor
fcompl
cmpsb
push
hlt
dec
add
pop
adc
dec
addr16
dec
xchg
mov
subl
push
dec
sbb
jae
sbb
xchg
sti
jns
xchg
inc
lret
pop
jo
inc
nop
sti
out
mov
jb
aam
cwtl
daa
jbe
aam
dec
dec
xor
xlat
test
adc
push
xor
popf
les
in
cld
inc
and
xchg
push
mov
mov
outsl
xor
enter
cmp
sub
lret
adc
mov
aas
mov
stos
iret
dec
sbb
add
daa
in
ret
rolb
cmpl
mov
nop
cmpsl
lods
mov
in
fldenv
ss
pusha
fdivl
push
inc
xchg
clc
aas
mov
bound
subb
jbe
cmp
sbb
adc
adc
jnp
gs
cld
out
test
out
loopne
sysret
inc
push
push
xor
mov
push
sbb
out
add
sbb
stc
idivl
cmp
sub
stos
cs
add
jo
les
cmpsl
fisubrs
clc
ds
aad
imul
sub
inc
not
adc
negl
ja
test
out
pushf
int
xchg
adc
xchg
shrb
inc
add
xchg
xchg
scas
pop
enter
clc
sub
push
fdivs
das
add
and
xor
pop
sbb
xor
fadds
dec
mov
pop
das
or
jmp
popf
mov
mov
sub
fnsave
mov
mov
pop
jbe
lea
mov
repnz
xor
stos
mov
testb
sbb
enter
sbb
mov
sub
bound
jns
sub
pop
pop
jae
scas
jg
dec
or
or
cmp
mov
les
sub
mov
lods
lea
xor
lahf
sub
add
mov
mov
jno
in
int3
jbe
and
testb
pop
lret
mov
pop
stos
cmc
push
outsb
outsl
pop
movsl
xor
fwait
or
mov
mov
jge
mov
xor
aas
xchg
das
stos
iret
and
vmovmskps
fadds
int3
pop
add
enter
out
adc
mov
call
mov
sar
mov
jge
add
mov
inc
mov
setp
fcoml
roll
add
inc
stc
notl
jnp
or
faddp
outsw
sti
call
cmp
or
pusha
cltd
popa
into
sbb
xchg
inc
xchg
add
call
insb
lock
xchg
cmpsl
xchg
pop
sarl
icebp
pop
dec
mov
xor
mov
cs
mov
pop
shll
push
inc
mov
movsb
push
sub
arpl
jno
push
sbbb
mov
subl
cli
mov
sub
mov
int3
add
aaa
stos
movsb
outsl
xchg
pop
xchg
cmpsb
in
cmp
popf
fmul
cmpsb
andb
xchg
pusha
outsb
inc
mov
mov
pop
test
out
es
in
outsl
fsubrl
cli
lea
pop
add
sbb
ss
movsl
arpl
mov
cli
in
mov
push
test
mov
movsb
cs
data16
mov
test
cld
jle
aas
les
int3
out
lret
xor
mov
loope
and
push
hlt
and
ret
xchg
lahf
mov
cmp
test
loope
sbb
dec
stos
and
subl
ret
dec
adc
pop
std
mov
cmc
dec
or
add
popa
fdivrp
mov
orl
sub
and
mov
insb
xor
push
pop
pop
fmull
adc
shlb
iret
shrb
fwait
pushf
sub
in
pop
xchg
push
push
lcall
aad
push
stc
out
aaa
jle
in
outsb
aad
jae
pusha
aas
lods
or
ret
cmp
xchg
inc
arpl
xchg
aaa
jbe
fwait
into
sub
xchg
lds
mov
popf
out
clc
loopne
adc
fcompp
inc
into
aam
test
fdivr
popf
cwtl
test
mov
sbb
stos
or
mov
orb
mov
mov
lock
push
lret
dec
gs
push
and
popf
cld
daa
ficoml
lret
int3
or
jnp
jbe
or
scas
fcmovnbe
test
push
or
adc
out
mov
pop
sub
out
sub
pop
aad
es
pop
repnz
nop
fwait
mov
stc
mov
cwtl
jl
int
mov
jle
and
bound
mov
or
push
sbb
loop
jg
movsl
mov
in
outsl
xchg
iret
xorb
xchg
or
jecxz
push
test
fdivs
push
or
pushf
cmp
test
adc
in
mov
dec
push
or
jl
or
das
adc
mov
add
lock
data16
jns
lods
in
cmp
push
in
pop
pop
jo
jnp
or
gs
xchg
test
insb
test
push
mov
pop
or
and
dec
out
cld
insl
test
push
pop
test
call
into
sbb
imul
pop
or
push
jle
jb
xor
add
mov
mov
imul
jmp
sbb
xchg
sbb
push
leave
jp
lods
mov
mov
cli
mov
das
push
inc
and
push
cmpsb
xor
imul
pop
push
push
nop
dec
jne
js
fdivl
sbb
xor
mov
pop
xchg
cmp
loope
pop
mov
gs
dec
cs
push
xchg
hlt
or
adc
dec
and
jle
icebp
jle
mov
jge
dec
xor
jo
sub
pop
cmp
lods
hlt
mov
adc
or
add
shl
push
test
or
lea
sub
sbb
dec
stos
xchg
xchg
scas
imul
lods
sahf
xchg
fidivrs
arpl
jl
int
xlat
adc
or
xchg
sub
mov
dec
add
sub
mov
inc
and
roll
lock
out
pop
push
mov
pop
ja
mov
cmp
out
cli
xchg
cmp
xchg
pop
scas
jp,pn
xchg
jnp
hlt
lahf
pop
icebp
mov
or
add
addr16
mov
adc
jp
lcall
pushf
sti
addr16
lods
out
aad
adc
jmp
cmp
pop
shrb
movsl
inc
pop
repz
fnstcw
fstpt
sti
mov
mov
xor
cwtl
cld
xor
iret
adc
push
negl
add
cli
cli
xchg
cmpsb
jb
sti
xor
pop
outsb
les
dec
jne
lcall
adc
lahf
rcrb
fistpl
mov
xchg
shlb
pop
pop
inc
mov
sbb
insb
stc
rcrl
push
jo
jne
xor
idiv
leave
in
mov
mov
sbb
mov
xchg
lret
sub
in
adcb
das
or
iret
pusha
sub
ret
into
xor
push
push
add
enter
leave
jmp
jmp
stos
aam
mov
push
ja
add
and
mov
inc
add
jge
repnz
imul
mov
cwtl
mov
or
mov
mov
stos
andb
movsb
insl
mov
enter
test
icebp
cmp
cmpsb
mov
jno
jnp
or
xchg
rorb
adc
out
inc
push
scas
enter
rcrl
cmp
jbe
jg
push
lret
inc
inc
test
sbb
pop
xchg
push
stos
sub
mov
adc
sbb
mov
push
mov
cmpsb
fldcw
addb
call
mov
out
mov
push
mov
lea
xor
push
adc
mov
inc
faddp
popf
ss
ds
bound
in
push
lahf
lret
into
xor
lea
fst
push
in
push
jbe
push
negb
mov
cmc
in
mov
stc
xchg
out
sbb
push
pusha
push
mov
mov
in
negl
adc
mov
pusha
stc
imul
cmp
shr
dec
in
jae
mov
cld
mov
aaa
mov
lds
mov
std
jg
mov
mov
int3
add
add
inc
jg
xchg
loop
push
cli
mov
xchg
lods
mov
ljmp
stos
cltd
xor
xor
cmpsb
push
cmp
fdivr
cmp
fisubl
pop
in
adc
sbbl
mov
shlb
mov
xchg
mov
das
aad
lret
outsl
sub
cmp
hlt
rcrl
pop
iret
stos
fimuls
aad
test
xchg
push
stc
add
mov
lock
pushf
jb
dec
mov
iret
loopne
sub
sbb
mov
rclb
fnstenv
mov
push
inc
fistpll
xor
movb
test
mov
out
push
xchg
dec
and
mov
rclb
adc
stos
lea
cmpsl
dec
scas
aam
xchg
imul
das
cmp
cmp
dec
adc
or
dec
out
mov
jle
lods
xor
ljmp
inc
fdivs
inc
shlb
cmpl
mov
insb
or
jns
lods
lock
cmp
add
push
lods
mov
and
and
jl
sarb
push
adc
cld
xor
jno
lret
call
inc
adc
aam
in
add
mov
jp
xchg
push
in
fsub
fcmovnu
xor
inc
jmp
in
aaa
sti
push
je
dec
inc
jne
call
mov
jbe
mov
popa
push
xchg
stos
out
pop
js
ficoml
shr
pusha
add
xchg
jne
cmp
fmuls
push
faddl
repnz
sbb
sahf
and
je
cmp
inc
mov
int3
or
sub
sub
mov
sbb
mov
cmpsl
mov
sub
cmp
mov
sbb
inc
inc
fisubl
jnp
mov
mov
push
mov
and
or
out
and
fs
push
in
lods
jbe
jae
xor
sub
mov
out
fwait
jae
push
jo
roll
adc
inc
mov
inc
adc
cld
mov
add
je
cwtl
iret
jno
dec
push
in
aaa
insl
outsb
sub
push
lret
js
or
cs
dec
jne
lods
mov
pop
cwtl
cs
call
and
stos
pop
loop
add
add
push
aas
push
pop
lahf
outsb
fs
push
add
jns
out
push
and
insb
int
ficoml
nop
adc
fldl
jb
mov
cmpsb
sub
test
outsb
sar
nop
fldl
sub
xor
or
es
inc
jle
sbb
cmpsl
iret
out
es
sbb
cmpl
cld
and
or
ljmp
inc
in
cmp
sti
dec
nop
pop
mov
jnp
pop
test
fsubrl
imul
rcrb
cmpsl
and
pop
out
push
incb
mov
jp
adc
sbb
sbb
test
iret
mov
dec
inc
pop
inc
cmpsb
push
mov
orl
mov
setns
test
out
in
stc
inc
mov
or
pop
jns
xor
or
jle
data16
inc
and
gs
fistpll
js
gs
mov
popa
jo
mov
lock
movsl
cmc
add
stc
aam
filds
mov
adc
into
pop
lods
idivl
cmp
stos
std
pop
mov
lret
aam
mov
and
les
imul
dec
inc
rcrb
inc
add
jne
jnp
mov
xor
in
insb
jnp
pop
stos
lods
inc
fwait
jle
loope
mov
movsb
loop
mov
lcall
icebp
add
fildl
in
jmp
aas
mov
cmp
dec
mov
mov
cmp
ret
fucomip
add
loopne
pop
idivb
enter
jne
mov
mov
iret
cmp
push
sarl
mov
push
push
shl
or
das
and
data16
test
pop
cltd
fldenv
leave
cmp
aaa
in
add
push
test
imul
aad
sub
sub
xor
and
cltd
xor
loop
sbbl
fdivrl
outsl
jne
in
xchg
push
mov
stc
xor
pushf
xor
inc
or
sub
inc
push
mov
pop
add
lret
or
sbb
mov
jns
sub
inc
jno
mov
jns
shrl
cmp
clc
jle
xorl
movsb
pop
enter
cmp
pop
faddl
aad
mov
sti
outsl
xchg
notb
or
je
adc
je
mov
adc
cmpsb
pushf
cld
dec
mov
lahf
mov
and
jmp
inc
aas
jo
inc
mov
xchg
scas
repnz
movsl
imul
adcl
hlt
popa
sub
pushf
jae
into
lods
pop
xor
aad
dec
lods
and
fistps
sbb
and
popf
sub
lcall
pop
cli
outsl
pop
adc
fucomi
mov
mov
push
cmc
sub
xchg
mov
bound
ja
inc
cmp
sub
sub
cwtl
inc
ljmp
aam
xchg
mov
in
icebp
testl
push
ret
int3
or
push
xchg
fs
loope
push
push
mov
fwait
mov
mov
aam
mov
sti
lods
dec
dec
arpl
xchg
dec
mov
xor
es
loopne
xchg
nop
push
xor
jecxz
into
sbb
in
sbb
dec
mov
inc
cmp
adcl
popa
rcrb
jnp
jbe
jo
push
add
faddp
scas
dec
mov
jb
lret
jmp
es
rcll
imul
pop
imul
imul
out
jno
mov
dec
or
add
jb
dec
sbb
cmp
addr16
fwait
jge
xor
iret
push
ja
dec
pop
clc
add
mov
cmp
sub
sub
fisttps
mov
jp
jno
jmp
aas
add
sti
add
push
ret
subb
pop
cld
jecxz
enter
add
adc
movsb
rorb
rorl
jns
in
dec
fwait
subl
nop
xor
stc
add
jno
push
dec
adc
inc
pusha
arpl
mulb
addr16
insl
push
pop
mov
mov
out
sub
int
lahf
mov
mov
cs
mov
fs
outsl
pop
pop
int
xchg
scas
test
and
inc
dec
pop
push
das
push
fiadds
fs
mov
ds
movsl
sbb
jg
jp
mov
xlat
sbb
test
hlt
cmp
xlat
sub
fstps
notl
dec
push
cmp
mov
adc
mov
fistpll
xorl
add
add
out
cmp
mov
sub
push
roll
xchg
in
or
stc
sbb
mov
sub
sub
mov
ficompl
jnp
lret
in
mov
pop
jmp
movsl
mov
sarb
cmp
loopne
mov
loopne
cltd
dec
int
loope
and
sbb
xchg
out
adc
pop
inc
dec
push
clc
and
pop
sbb
xor
jl
xor
loope
add
sbb
call
dec
push
mov
and
dec
mov
fldt
outsb
gs
jg
sarl
sub
fldenv
fcoml
cli
popf
mov
pusha
add
jle
cli
sub
xchg
jp
push
or
fiadds
insb
inc
push
pushf
push
and
jle
add
push
inc
xor
int3
orps
stos
in
sbbb
cltd
cmp
jae
push
xor
mov
mov
orb
sbb
cmp
dec
icebp
ljmp
cmc
mov
mov
pop
lods
xor
jecxz
jnp
dec
stos
leave
scas
sub
pop
test
out
cmp
mov
jecxz
sub
cmp
es
or
push
jle
and
jecxz
mov
push
dec
xchg
mov
test
push
pop
test
fidivl
mov
and
mov
ja
and
fdivrs
mov
fnstsw
dec
cmpsb
scas
cltd
aaa
jno
les
iret
dec
lods
cmc
cmp
fimull
mov
mov
xchg
or
mov
jae
imul
and
das
das
inc
test
enter
mov
pop
icebp
xor
xchg
out
sbb
add
and
sbb
pusha
leave
cmpsb
je
pop
and
jb
adc
cmp
lock
cmp
sbb
xchg
outsb
bound
xchg
scas
xchg
out
data16
out
xchg
daa
enter
movsl
mov
dec
and
pusha
ds
xchg
pop
addr16
adc
fstl
dec
and
add
rcr
rcrl
movsb
xor
sbb
call
icebp
fistl
ja
imul
mov
rcr
mov
push
sahf
lds
pushf
sub
push
jge
rolb
out
mov
xchg
sbb
das
frstor
pop
repnz
cmp
test
and
jle
xchg
pop
push
je
mov
ja
jnp
add
push
adc
sarl
mov
icebp
fsts
adc
das
insb
pop
and
inc
int3
outsb
inc
pop
ljmp
out
inc
enter
jp
add
es
jp
xor
icebp
clc
rolb
jb
xchg
lret
mov
xchg
in
mov
std
lcall
imul
iret
test
push
aam
dec
sbb
xchg
fwait
mov
mov
sahf
movsb
nop
popa
scas
inc
outsb
inc
es
xchg
dec
popf
sbb
lods
mov
or
stos
and
cmp
push
push
scas
rcrl
or
loope
mov
cmp
ds
sbb
es
in
ljmp
arpl
or
xor
sub
lret
fcmovnb
sub
int
lahf
pop
iret
addb
out
dec
xchg
hlt
mov
push
jmp
sarb
mov
insl
push
or
adc
pop
ss
enter
jns
xor
mov
scas
cmp
xor
mov
andb
jbe
negb
or
xor
mov
adc
daa
jae
mov
cmpsb
fildll
sti
push
xchg
pop
scas
ja
scas
jae
xor
xchg
fcompl
call
mov
fldt
stos
xchg
mov
add
adc
sub
iret
xchg
dec
rolb
cmp
dec
pop
cmp
dec
push
insl
mov
fidivs
gs
mov
adc
mov
scas
add
mov
in
popa
clc
mov
inc
mov
mov
ds
mov
cmp
in
mov
inc
push
jl
out
push
in
pop
push
jge
outsb
es
push
orb
adc
bound
pop
pop
push
sar
mov
repnz
cli
adcb
lcall
cmpsl
in
gs
sbb
xchg
int
ret
and
jge
jo
cmp
clc
push
daa
mov
mov
ss
cmp
inc
xchg
daa
sub
dec
int3
pop
lods
mov
sub
xchg
jecxz
cmp
push
popa
mov
add
int3
ret
jmp
cmpsl
and
dec
sarl
pop
cld
pop
decb
push
sarl
popa
in
loopne
int
jb
xchg
pop
lret
fldt
outsb
loope
jbe
xchg
xchg
mov
inc
xor
xor
sarb
js
push
jecxz,pt
pusha
das
mov
jmp
cli
sti
mov
ljmp
es
test
sub
in
pop
imul
adc
dec
cmpsb
mov
push
inc
mov
testl
sbb
push
inc
inc
mov
mov
scas
scas
pop
test
test
out
cmc
mull
pop
int
sbb
add
js
cmp
mulb
mov
sbbb
cmp
jo
jae
fdivl
rorb
fstpl
mov
inc
and
cmp
sbb
cmp
sahf
ja
mov
fwait
adc
mov
inc
mov
sub
push
xor
jecxz
in
pop
dec
dec
sub
or
adc
inc
xchg
test
outsl
mov
cwtl
loope
mov
inc
dec
insl
mov
and
outsl
movsl
dec
dec
jbe
es
dec
cli
jmp
mov
scas
push
cmc
adc
pop
stc
stos
inc
adc
out
pop
jne
dec
mov
cwtl
sbb
lret
sub
cwtl
call
sbb
sub
xorl
loope
rcl
push
mov
jl
sub
sub
sbb
test
mov
mov
leave
jne
cmpl
out
cmc
or
ljmp
pop
es
enter
and
nop
stc
mov
pop
mov
mov
push
stc
lods
inc
movsb
lret
push
in
cmp
inc
cmpsl
lods
ds
pop
into
dec
ds
loop
add
dec
jbe
pop
dec
push
inc
adc
jle
inc
adc
inc
push
push
push
or
dec
rolb
lea
push
insb
fistpll
pop
pop
lret
cmp
ds
pop
xor
xlat
push
pop
xchg
jge
movsl
adcb
xlat
iret
cmp
lret
jb
iret
psubd
repnz
je
test
aad
stos
shrb
jns
pcmpgtb
dec
imul
pop
clc
sbb
popa
cli
arpl
fdivrs
out
pop
cmp
shlb
inc
mov
mov
inc
icebp
jnp
je
ret
push
ficoml
data16
cmp
push
sub
inc
out
fsts
mov
and
jns
pop
in
repz
push
cs
leave
fildll
pop
xor
inc
test
mov
bswap
xorb
imul
lea
or
pop
add
xchg
aaa
or
fsubr
enter
enter
repz
pop
cmp
xor
push
mov
lea
nop
lcall
mov
cld
pushf
push
jp
pavgb
mov
inc
aad
arpl
jne
fs
mov
and
xchg
cmp
and
add
cmpsl
loopne
pusha
popf
push
inc
and
fidivrs
ljmp
pusha
mov
enter
cmpsl
ficoms
popf
movsb
pop
aam
imul
adc
push
xor
scas
stos
sub
mov
inc
cs
jno
clc
cmp
jge
jecxz
test
inc
aam
dec
add
aam
pop
fdivrl
sbb
push
push
fsubp
mov
rorl
rcrl
fbstp
xlat
and
cmp
ret
xor
push
jne
mov
xchg
dec
mov
push
jno
js
fs
xchg
xchg
sahf
lods
pushf
jmp
fisubs
push
test
out
mov
mov
ljmp
xchg
iret
pop
mov
mov
push
rorb
addr16
insb
popf
jno
adc
es
shlb
or
loop
jge
jp
ret
and
clc
pop
pop
xor
stos
insl
add
insb
mov
cmc
push
or
add
add
mov
jb
inc
inc
cmp
notl
subb
rcr
lret
push
mov
pop
cld
sbb
pop
cmp
les
inc
in
bound
or
jmp
cmp
sarb
and
push
testb
movsb
out
xor
dec
les
nop
test
mov
push
push
nop
enter
nop
cmp
popa
and
mov
inc
jne
adcl
mov
mov
repz
adc
push
mov
jbe
loope
roll
out
je
inc
pop
dec
inc
outsb
adc
pop
fisttpl
xchg
sub
repz
jg
ret
mov
sbb
add
xor
aas
inc
mov
xchg
stos
in
sub
popf
or
xchg
je
adc
gs
pushf
cmp
in
mov
lds
out
lea
pop
shrb
jnp
mov
insl
arpl
popa
push
lahf
lahf
insb
scas
fld
out
cs
cli
inc
ret
cwtl
jmp
cmp
cli
sbb
sub
jl
rcr
mov
add
and
das
inc
and
dec
adc
xor
add
subl
sbb
pop
lahf
aad
scas
scas
inc
imul
sub
into
hlt
xor
loopne
addr16
aas
imul
xor
push
into
jo
jo
popa
pop
cmp
xor
sub
sbb
mov
dec
inc
cmp
pushf
xchg
pop
cmp
xor
sub
xor
test
sbb
push
jle
test
aas
adc
jnp
mov
xchg
xlat
outsb
push
cmc
leave
xchg
mov
xchg
into
cmp
jnp
cmpsl
sti
into
js
cmp
lock
adc
stos
out
cmp
add
in
fnsave
cmp
dec
mov
sbb
lahf
iret
mov
and
repnz
loop
fcomps
xchg
sub
push
xor
xchg
test
adc
pop
inc
cwtl
cmpsl
stc
insb
cmpsl
fstpt
xlat
pop
outsl
xchg
fadd
lock
push
sub
jo
mov
pushf
push
and
cmp
out
adc
lret
jg
fisubrs
lods
or
adc
or
sub
lahf
cmc
sub
mov
mov
sbb
bound
repnz
cwtl
repz
mov
mov
jp
mov
or
mov
pop
jmp
mov
add
sub
pop
gs
shrb
lds
mov
popa
mov
hlt
xchg
dec
jns
mov
ds
mov
dec
lea
dec
inc
ret
into
data16
cmp
ljmp
fcomp
inc
sbb
fwait
jge
sub
sub
popl
clc
lret
gs
pop
lock
into
mov
xlat
mov
or
out
jno
push
mov
call
lods
push
iret
fwait
inc
nop
pop
mov
add
and
testb
xor
call
daa
xlat
jbe
sarb
mov
sbb
iret
jl
mov
inc
popf
lock
call
pusha
mov
lods
sbb
jmp
inc
adc
imul
sub
mov
hlt
std
popa
sbb
bound
pop
loope
insb
mov
and
repz
jnp
sub
stos
cli
lds
outsl
push
call
sbb
bound
out
pop
xor
adc
xchg
inc
cmp
je
jnp
shrb
xchg
adc
popa
ss
push
ja
xor
mov
popf
fidivs
push
int3
cwtl
jo
dec
popf
xchg
scas
fcomip
lock
mov
push
and
sub
popf
rcrl
sub
and
jl
add
outsb
dec
stos
add
mov
ss
jbe
scas
das
mov
mov
mov
mov
push
cmpsl
cmovs
loope
jb
cmp
test
xchg
clc
stos
sub
repnz
leave
pushf
jne
xor
sbbb
test
pop
aas
subb
out
mov
gs
stos
das
je
xor
nop
lret
rorl
scas
mov
outsl
pusha
jne
fwait
ja
or
xchg
rep
ret
je
push
cltd
push
sub
dec
in
and
push
enter
popf
lret
or
sbb
sbb
in
sbb
mov
repz
sbb
movsb
xchg
mov
inc
cmp
scas
movsl
bsf
push
mov
jb
inc
mov
adc
inc
mov
stc
jl
inc
dec
out
stos
mov
jecxz
lcall
mov
cmpsl
mov
pop
mov
mov
mov
and
test
mov
ljmp
rcl
jl
xchg
out
dec
arpl
fimuls
xchg
cs
stc
xor
pop
mov
pop
pop
xadd
inc
test
jle
das
and
xor
dec
je
mov
sub
push
mov
sub
notb
subb
jne
sbb
outsb
sbb
jmp
xchg
mov
jae
jb
cltd
js
pop
inc
pop
movsb
dec
popa
jle
adc
sub
push
inc
mov
cmp
in
lcall
mov
ret
mov
lahf
fisttps
ja
cltd
lock
fucomip
jg
icebp
mov
adc
lahf
lds
and
test
outsb
pop
mov
stos
clc
lahf
jg
sahf
pushf
mov
mov
fbstp
das
jae
sahf
or
rorl
rorb
ljmp
popa
push
mov
mov
ss
xlat
jne
aam
xchg
scas
xor
jbe
xchg
out
push
or
sub
in
mov
mov
push
test
sbb
imul
mov
mov
out
popa
jmp
jl
in
aam
add
inc
cmc
das
jne
mov
cmpsb
adc
xor
or
sub
repz
jge
fsubl
mov
shrl
ss
into
into
pop
leave
cltd
adc
int
mov
aam
mov
out
lret
mov
loope
pop
xchg
xchg
mov
sub
data16
sarb
push
clc
cld
fs
popa
rol
push
jno
lods
inc
pop
adc
push
orb
jp
and
cmp
push
subl
dec
mov
fs
xchg
shrb
mov
pop
jno
mov
push
iret
cwtd
ret
repnz
mov
scas
xor
push
jmp
adc
adc
popa
ss
adc
mov
sahf
jno
cmpsl
dec
mov
fidivs
or
ffreep
add
pop
jle
mov
lds
mov
dec
mov
lret
inc
pop
xchg
dec
cltd
ret
je
mov
push
stc
loope
pop
cmp
push
and
out
les
xchg
out
dec
or
mov
psadbw
mov
or
cmp
mov
int
and
or
sub
test
add
arpl
or
das
jecxz
shl
sbb
pusha
push
mov
lahf
in
cli
lea
mov
pusha
push
loope
enter
roll
fdivrl
jp
imul
xor
mov
ja
loopne
cwtl
xchg
cmp
insl
xchg
subl
into
sub
popa
sbbl
mov
in
xor
jns
sub
mov
ljmp
xorl
dec
lods
jmp
pop
fs
bound
sti
je
or
aaa
sahf
jge
cmp
bound
mov
cli
rcrb
pop
xor
out
push
ret
push
out
call
dec
add
sub
add
inc
fiaddl
or
mov
cld
jl
mov
sub
test
and
pop
cmp
mov
ljmp
sbb
sub
sbb
push
xor
xlat
out
xchg
cmp
dec
daa
hlt
pop
into
push
fucomp
ret
cmp
push
push
cmp
aam
test
jp
addr16
mov
loope
jge
imul
fcmovu
push
fwait
mov
mov
hlt
popf
mov
jb
in
pop
mov
stc
je
fidivs
jnp
add
andl
mov
aas
ficompl
and
loopne
jns
daa
pop
hlt
xor
dec
mov
push
pop
mul
adc
jbe
inc
cli
and
cli
data16
mov
out
and
xchg
inc
ja
or
in
push
sbb
ja
jo
dec
fbld
jge
js
out
lret
aaa
push
mov
xor
and
pop
xor
add
push
pop
stc
or
mov
jnp
mov
in
and
data16
xor
jbe
out
dec
jae
test
mov
dec
pop
cmp
pushf
mov
out
sbb
adc
fisubs
pop
sub
pop
aam
cmp
popf
mov
sti
cmc
xor
js
fisttpll
mov
pop
push
repnz
std
into
mov
add
in
mov
std
sbbl
loop
or
xchg
push
cs
mov
in
xchg
push
stos
add
or
loopne
mov
les
in
cli
cmp
bnd
xchg
hlt
inc
shlb
enter
sub
icebp
int
adc
push
xor
cmp
ds
ret
ljmp
jno
cmp
lods
sub
rcrb
pop
mov
xor
rolb
jo
popf
mov
dec
dec
jmp
mov
xlat
mov
xchg
pop
and
push
enter
orb
and
in
mov
lock
adc
int
ret
fs
in
sub
pop
ret
or
jne
pushf
test
scas
pop
xor
mov
pop
fldpi
outsl
scas
sbb
sbb
xor
movsl
inc
test
cmpsl
out
jo
and
das
imul
addl
dec
int3
mov
lds
xor
push
inc
jo
sub
mov
and
pop
add
movsb
dec
lahf
repnz
sbb
sbbb
insl
push
pop
cmc
push
aam
leave
inc
in
rcll
cld
add
loope
jbe
xor
inc
in
fwait
out
mov
les
push
dec
pop
insl
mov
cmc
lahf
mov
mov
and
mov
out
mov
mov
jge
arpl
mov
and
aas
mov
movsb
aam
sahf
pop
add
paddw
xor
sti
loop
mov
test
jb
ja
out
cs
pop
mov
clc
inc
pushf
and
pop
xor
sub
iret
nop
dec
jne
pop
insl
push
cs
xor
fildl
add
jp
mov
cmp
add
or
sbb
pop
cltd
sub
cmp
or
repz
pop
pusha
xlat
lea
adc
scas
divb
pop
xchg
dec
mov
pop
enter
push
arpl
xor
test
outsl
orl
lods
arpl
and
or
jp
mov
imul
mov
sbb
add
je
nop
sub
bound
negl
dec
inc
push
or
pushf
mov
sub
movsb
lea
lret
in
pop
cmc
xor
pop
pop
ret
mov
xchg
pop
sahf
aad
and
adc
mov
das
cli
test
cmpsl
int
and
dec
lock
jo
imul
icebp
push
outsb
sbb
gs
data16
mov
aaa
pusha
fstl
es
fistpll
in
mov
xchg
in
dec
jge
push
pop
pop
dec
sahf
test
les
pop
lods
lock
out
ret
add
jg
cmp
sub
jmp
jle
jle
bound
ret
pop
mov
push
jno
jl
dec
inc
push
jp
loope
pop
rcrb
inc
call
fsubrs
sahf
mov
fidivrs
mov
sbb
and
push
jns
dec
pop
push
insb
sbb
adc
pop
jae
ret
xor
cmp
rcrb
push
inc
icebp
lea
and
add
mov
cwtl
mov
ret
xchg
push
addr16
bound
cwtl
mov
out
lret
mov
or
push
adc
lods
add
cmp
cmc
push
mov
lds
mov
jecxz
cmpsb
mov
sbb
iret
mov
xor
pop
xlat
sub
scas
call
sbb
or
pusha
in
fiaddl
push
rol
sbb
mov
mov
dec
je
or
test
es
andb
add
xor
pop
sti
adc
scas
or
pop
and
and
lock
fidivs
jl
int
xchg
xor
and
mov
aaa
vpsubw
jns
lcall
loope
mov
in
mov
mov
cli
cmp
mov
dec
gs
mov
fsubs
dec
shrd
ret
adcb
jge
sbb
cwtl
mov
outsl
bound
mov
cmove
xor
in
adc
mov
movsl
mov
movsb
mov
scas
mov
sbb
rclb
rorb
fsub
fs
mov
mov
fwait
in
mov
fnstsw
cmpb
sbb
push
mov
xor
stc
push
bound
test
ret
push
mov
adc
mov
cwtl
je
xchg
icebp
aaa
mov
push
inc
push
pusha
and
loopne
jno
xchg
jnp
fldenv
mov
add
jnp
arpl
aad
std
or
sbb
lcall
push
cmp
push
leave
call
int3
incb
or
clc
dec
mov
push
xchg
xchg
ret
lret
sub
in
push
test
data16
in
mov
cltd
cwtl
cltd
push
xor
and
and
int3
and
jp
insl
sti
sbbb
dec
adc
sub
sbb
jle
in
pop
cmp
dec
stc
sar
clc
pop
push
pop
fwait
pop
rclb
inc
fstl
ret
aaa
test
jge
data16
repnz
jne
mov
jne
movl
push
xabort
into
mov
in
mov
cmp
mov
cwtl
adc
or
sbbl
out
jo
test
test
cmpsb
dec
and
loope
arpl
or
jmp
jp
lods
lods
lea
xchg
add
subb
int
rolb
ret
leave
adc
sbbl
mov
aam
adc
sbb
pop
xor
cwtl
clc
ljmp
pop
pop
cltd
mov
cltd
test
nop
aas
mov
or
xchg
sbb
fcom
push
cmpsb
mov
decb
push
in
inc
mov
mov
loop
jo
out
aas
lock
out
int3
pop
fs
push
int
ds
jbe
or
insl
sbb
mov
pop
decb
sahf
pop
call
add
mov
movsl
cld
inc
pop
mov
repz
ss
xor
rcrb
test
imul
rorb
fistl
sub
jecxz
mov
aam
enter
xchg
cmp
dec
icebp
test
popf
out
pop
sub
movsb
repz
popl
add
sub
cmovle
fdivrs
mov
lret
es
sub
xchg
mov
xchg
jne
xchg
stos
pusha
push
inc
sbb
and
mov
shlb
lods
les
rcll
incl
sub
cld
dec
and
fisubs
test
inc
push
out
jmp
xor
lret
mov
adc
mov
and
scas
rol
and
icebp
xchg
adc
int3
std
pop
mov
imul
xchg
js
mov
push
insl
xchg
xor
lret
or
mov
scas
push
mov
std
mov
mov
push
pusha
inc
int3
push
or
rol
pop
push
call
mov
aad
fistl
cmpsb
pop
inc
or
std
dec
mov
add
aad
lds
mov
jbe
clc
and
xor
out
lea
fcomps
cmpsb
arpl
lods
loope
xor
mov
and
cmpsb
das
enter
mov
add
mov
sti
mov
and
mov
fbstp
daa
pop
cmp
jl
inc
or
push
lea
fnstcw
lahf
mov
xor
or
out
xchg
mov
and
or
inc
sub
mov
sub
mov
outsl
dec
imul
pop
push
jle
ret
push
push
pop
ret
enter
and
pop
fstpl
jae
scas
mov
fwait
in
andl
stos
mov
fiadds
cmpsl
cmp
ret
lods
outsb
cs
loope
and
xor
xorb
xor
push
cs
xchg
jno
push
cmp
imul
jno
loopne
cltd
fiaddl
mov
js
mov
pusha
adc
or
pop
les
lret
test
outsb
les
jmp
sar
adc
imul
sbb
ljmp
sub
stos
jo
push
out
mov
mov
cmp
nop
fimull
loop
mov
xchg
ss
push
or
lods
dec
pop
xor
jnp
jle
sbb
jb
fdivrp
mov
jmp
imulb
popa
in
mov
mov
pop
mov
out
push
imul
or
idivb
int
mov
sbb
sbb
push
push
movsb
xor
jbe
jge
sbb
iret
rorl
ja
mov
jo
lret
fiadds
cmp
dec
sar
pop
mov
lea
and
or
mov
mov
mov
mov
shrl
aam
addb
dec
insl
ret
out
mov
mov
dec
or
mov
or
push
dec
stos
in
ja
push
inc
fisubrs
out
popa
repnz
adc
cmp
stos
cmp
clc
into
repnz
movb
lahf
adcb
scas
sti
cld
xchg
scas
add
loopne
fbld
xorl
adc
mov
sub
aaa
xor
and
pop
ja
xor
xor
cmp
fldcw
or
xlat
pushf
nop
pop
cld
pop
dec
in
add
lret
aam
hlt
xchg
add
in
and
fsubrl
shll
cmp
shlb
sub
cmp
nop
sbb
xor
loope
and
dec
fiadds
and
in
in
outsl
iret
popa
xchg
inc
pushf
pop
in
pop
insl
andl
inc
pop
push
ds
and
xor
lods
scas
test
xchg
jno
mov
popf
mov
cmp
pop
lds
stos
pop
adc
orl
mov
mov
rolb
in
jns
jg
add
mov
mov
inc
cld
inc
adc
mov
or
pop
popf
std
hlt
push
insb
or
dec
or
mov
lcall
adc
and
mov
add
adc
ljmp
or
movl
jecxz
into
clc
jecxz
push
pop
add
inc
xchg
mov
pusha
lods
test
dec
mov
cmp
inc
outsb
mul
sbbb
cmp
orl
ja
push
pop
cmp
cmpl
daa
xor
cli
xor
adc
and
fldenv
gs
mov
jb
dec
sbb
das
ficoml
lahf
loop
data16
out
andb
xchg
jae
cltd
inc
and
or
push
push
push
pop
hlt
jbe
into
cltd
shll
scas
pop
loop
jns
mov
adc
or
pop
outsl
xorl
ret
add
inc
pop
mov
mov
cld
xor
and
nop
jmp
xor
cmp
fists
jp
repz
xor
mov
xchg
add
sub
or
pushf
pop
cli
popf
repnz
icebp
sahf
in
icebp
arpl
adc
push
sahf
push
arpl
negb
adc
jne
and
xor
mov
add
aad
insl
sti
aad
jne
mov
enter
dec
nop
cmp
sub
je
push
mov
out
aas
sahf
jno
out
mov
or
pop
mov
stos
shr
call
mov
movsb
fucom
adc
imull
push
mov
cmpsb
shll
mov
pop
jge
movsb
sub
pop
push
or
sbbl
std
pop
mov
cli
testb
push
sub
movsb
and
sbb
arpl
aad
cs
mov
xchg
aaa
lock
sahf
insl
iret
loop
shlb
imul
cmp
pushf
and
lods
std
pop
bound
insl
fisubrs
ljmp
les
sub
or
lock
lcall
movsl
popa
jb
data16
adc
cli
fdivr
jb
jae
ljmp
dec
push
adc
leave
pop
mov
lods
dec
jne
cmp
dec
jbe
out
jl
and
imul
inc
xor
add
movl
dec
outsb
scas
mov
mov
push
add
add
ljmp
inc
loope
cmpb
and
js
mov
cmp
jecxz
mov
jle
pop
leave
das
dec
jl
add
mov
pop
leave
in
test
mov
xchg
movsl
ljmp
or
fwait
dec
in
lahf
mov
mov
inc
push
sahf
lods
loop
jne
loope
ret
mov
cmp
xchg
sti
std
out
xchg
and
jno
dec
jmp
jo
sub
das
fcmovb
sbb
jno
xor
mov
sbb
xor
test
xchg
jge
or
hlt
pop
fdecstp
mov
mov
adcb
jp
pusha
add
adc
dec
sbb
inc
xchg
stos
mov
enter
mov
arpl
inc
aas
ljmp
je
sub
mov
mov
pop
or
andl
shll
jecxz
jl
fstpt
mov
or
mov
cmp
sub
fldenv
outsl
stos
cmp
dec
and
push
mov
cltd
and
insl
mov
aam
std
jle
test
inc
pop
cmc
jns
out
cli
and
gs
movsb
sarl
mov
cmc
arpl
je
mov
sahf
cmp
mov
dec
in
mov
jns
push
sub
sub
push
sub
push
fstpt
ss
pop
in
loopne
xor
adc
daa
adc
fstpl
cmc
mov
jno
aad
jno
mov
sti
lret
in
jns
mov
sub
in
cmpsb
mov
mov
add
repnz
mov
bound
or
dec
aad
ljmp
pop
stc
testl
xor
call
rorb
sub
lods
cltd
pop
fwait
add
fsubrs
std
push
push
sbb
or
xchg
sbb
jmp
cmp
sbb
mov
inc
notb
ja
cmpsb
out
push
jmp
push
aaa
fcmovne
sub
pop
sbb
jne
fnsave
inc
inc
xchg
inc
mov
ret
add
ret
jnp
repnz
pop
ret
dec
stos
inc
repz
and
hlt
add
and
dec
adc
mov
inc
or
fisubrs
xchg
shrb
scas
mov
jae
pop
stc
cltd
or
jb
imul
sahf
and
mov
pop
int
rcrl
cmp
frstor
daa
mov
adc
pop
xchg
xor
cmpsb
popl
test
xlat
js
movsb
or
imul
test
nop
mov
jnp
cmp
mov
ja
scas
pop
push
lcall
movb
movsb
mov
jle
or
jg
maskmovq
imull
stos
lret
in
data16
ja
sbb
inc
sahf
lret
test
jl
fdivrl
aaa
jg
xor
mov
cmp
xchg
in
mov
enter
cmp
jle
xlat
pop
jg
push
pushf
fwait
mov
add
movsl
inc
xchg
lods
sbb
push
mov
jno
xor
jb
loop
shr
call
mov
gs
idiv
call
gs
push
pop
xchg
das
xor
std
and
das
dec
add
dec
adc
dec
pop
sti
out
shlb
sti
addr16
sbbl
data16
push
sub
or
push
in
outsb
pop
pop
orb
push
or
dec
push
insb
mov
leave
mov
xchg
mov
cmp
scas
jmp
into
adc
dec
mov
lret
push
jae
sub
rorb
lahf
pop
and
dec
push
cmp
es
cmp
scas
into
aas
push
cmp
add
jae
stos
xchg
shlb
mov
pcmpgtd
mov
jns
lret
inc
mov
mov
sbb
cmp
clc
inc
popf
mov
mov
lret
xchg
adc
adc
sbb
push
out
pop
out
scas
jge
push
mov
lds
sub
insl
fldl
ret
cmpl
mov
loop
lock
aas
mov
push
xor
stc
jo
jae
dec
mov
scas
bound
mov
cwtl
sub
dec
jmp
or
std
jge
test
pop
sbb
xchg
dec
call
sub
icebp
xor
push
orl
aas
mov
inc
int
adc
sub
xorl
push
push
adc
mov
test
sarb
add
dec
mov
cmp
jmp
shrl
fiaddl
mov
xchg
pop
je
lcall
push
mov
cmp
lret
xchg
shll
imul
add
pop
xchg
pusha
aaa
mov
enter
fcmovne
mov
adc
pop
fptan
mov
imulb
popa
adc
and
lods
mov
iret
push
ds
mov
iret
int
addr16
pop
inc
xor
mov
adc
je
mov
lds
bound
fadd
jmp
add
dec
clc
xorb
cmp
divb
cmpsl
dec
inc
jne
icebp
dec
into
loopne
fcos
lds
and
mov
in
lds
repnz
xlat
mov
jb
data16
divb
push
or
test
mov
arpl
mov
jnp
cmpsb
mov
or
and
setl
repz
inc
xlat
push
push
jnp
cmp
cltd
test
lods
jle
aas
jl
test
aaa
shl
cmp
test
aaa
push
mov
mov
and
mov
dec
data16
into
ret
cld
jp
dec
xchg
fisubs
inc
push
xor
jecxz
inc
rolb
or
mov
fcom
push
inc
test
stos
mov
cli
mov
push
push
cld
shll
lock
mov
push
xchg
shl
adc
vmovapd
mov
inc
nop
test
inc
xor
sbb
test
rclb
xchg
mov
jb
scas
jb
sarl
xchg
lret
jg
push
aad
testl
in
sub
adc
mov
aaa
das
push
stos
mov
mov
cmp
pop
push
in
pop
mov
lock
daa
push
xchg
jnp
aas
sub
popa
js
ret
push
ljmp
sub
ds
mov
stos
xchg
leave
scas
cmpps
in
xchg
pop
movsb
insl
sub
aaa
xchg
dec
jno
sarb
jg
sbb
jp
sub
sbb
nop
movsb
rorl
xchg
popf
dec
and
das
jge
leave
cmpsb
pop
pop
dec
test
jae
jbe
sarl
pop
dec
mov
subb
repnz
mov
shlb
xor
mov
pop
sbb
jo
push
mov
dec
leave
aad
jecxz
push
push
repz
xor
cltd
mov
dec
push
loop
jmp
int3
or
and
pop
push
icebp
push
mov
inc
push
andl
test
add
test
xor
and
fdivrs
std
or
outsl
ucomiss
pop
jp
xchg
out
adc
shrb
add
lea
xchg
jb
mov
xchg
sbb
fidivs
in
dec
add
xor
push
pop
lret
mov
mov
hlt
fmuls
mov
mov
mov
ud0
jmp
cmp
inc
cltd
popa
and
sbb
test
loop
jg
mov
ficoms
dec
jl
inc
pop
mov
pop
add
aam
push
pop
lea
testl
dec
sbb
mov
call
mov
adc
push
xor
and
adc
lcall
push
pop
mov
jg
add
cmp
dec
jge
in
fdivs
loopne
inc
loope
les
or
pop
cmpsl
mov
aad
lea
mov
inc
clts
ljmp
ss
lret
lock
dec
repz
aam
mov
inc
into
jmp
sub
js
std
ficompl
orb
and
test
aad
insl
adc
add
hlt
mov
pop
arpl
int
ds
pop
dec
rolb
cs
aaa
sti
loope
fwait
dec
sub
hlt
xchg
aaa
gs
leave
pop
push
pop
out
js
sub
pop
hlt
in
mov
lret
les
mov
xchg
movsb
xor
in
ds
ss
and
sub
push
mov
aad
mov
mov
aad
or
add
ds
cmpsb
call
sub
fcmovnbe
daa
repnz
xchg
pushf
call
gs
add
aaa
add
jge
or
pop
ljmp
mov
mov
xor
push
dec
inc
je
idivl
inc
jg
addl
cmp
push
mov
mov
imul
sbb
andl
push
mov
lock
lods
push
mov
mov
jno
outsb
fs
mov
or
in
jp
aam
sub
dec
mov
fcoml
aas
into
jle
mov
test
pop
stos
xlat
xchg
outsb
mov
daa
stos
movsl
imul
cwtl
in
aad
push
xchg
fabs
imul
mov
cltd
aaa
and
adc
outsb
pushf
test
sub
cmp
inc
mov
loop
jnp
bndldx
mov
lds
add
xchg
sub
jbe
cmpsb
popa
aas
add
adc
ja
push
and
out
and
test
mov
lds
cmpsl
mov
addr16
sti
xchg
jmp
lods
repnz
jge
pusha
je
push
push
xchg
pop
inc
in
xchg
shlb
roll
mov
xor
out
xchg
mov
push
mov
dec
mov
sub
mov
pop
add
daa
xchg
movsb
shll
mov
jmp
sbb
ficomps
into
lret
ljmp
js
call
push
dec
outsb
cmp
pop
sbb
inc
jb
xchg
lcall
push
adc
aad
hlt
add
iret
mov
jno
xor
mov
dec
mov
cld
mov
inc
int
and
add
push
inc
jo
in
inc
dec
adc
test
clc
fbld
sbb
and
push
xorl
cmp
pop
ljmp
fstpt
add
mov
ljmp
inc
aam
arpl
scas
sub
cld
sbb
push
sahf
xchg
in
jae
jnp
icebp
leave
dec
out
pop
cmp
jne
cld
aam
push
sub
fstpt
cmp
rcr
inc
adc
sub
xchg
jns
push
cmp
dec
cmp
push
es
xor
idivl
inc
push
stos
mov
pop
fistps
add
mov
imul
ljmp
lea
adcb
and
out
inc
xchg
fwait
cmpsl
lahf
pop
adc
push
push
dec
dec
xchg
cmp
and
hlt
out
inc
bound
xchg
call
and
or
sub
repnz
mov
mov
notb
jae
mov
mov
cld
cwtl
loopne
fcomi
leave
das
aam
outsl
jb
test
jb
stos
mov
cmp
sbb
popf
ja
sub
jecxz
adc
dec
sarl
xchg
daa
cmp
push
imul
shll
or
repnz
testl
icebp
loop
fiaddl
pop
test
sahf
sub
dec
push
xchg
outsl
xor
aam
pop
ljmp
xchg
jecxz
out
jbe
out
fdivrl
loope
fnsave
daa
cmp
les
shll
lock
sbb
lea
xchg
enter
mov
lret
push
negl
adc
push
xor
mov
xor
pop
push
pushl
lret
sub
jno
cmc
mov
unpckhps
xor
jnp
adc
mov
into
clc
aaa
sub
fwait
incb
pop
adcl
mov
lea
test
jb
cs
lods
mov
jmp
xchg
mov
mov
and
fbstp
sub
mov
aam
sbb
loope
inc
jl
mov
xchg
lret
fistpl
dec
sbb
push
jle
stos
xchg
fildl
cmp
test
insl
test
xchg
pop
out
and
iret
mov
mov
testl
lret
aam
sbb
aad
cmc
js
cmpsl
pop
cmp
mov
mov
mov
cmp
mov
lds
fimull
and
js
inc
cwtl
fisubrs
outsl
cmc
pop
inc
shll
sbb
subl
nop
mov
test
mov
sbb
jns
and
sbb
hlt
or
cld
iret
and
shrb
pop
hlt
xor
sti
mov
iret
cmp
into
sar
cmpsb
xchg
push
stos
aaa
aam
xor
xchg
push
adcl
mov
mov
pushf
dec
adc
xlat
in
or
sbb
and
lret
rolb
or
xchg
jmp
mov
pop
pop
xchg
fadd
and
ljmp
aaa
test
daa
pop
sarb
adc
andl
jb
dec
jns,pt
jl
adc
into
pop
outsb
les
jle
dec
xor
pop
ss
ja
enter
cmc
test
pop
arpl
cli
call
mov
mov
dec
arpl
add
mov
in
pop
mov
stos
adc
outsb
push
nop
call
cmp
in
rcrb
jbe
xorb
add
inc
xor
sub
sbb
div
test
mov
adc
mov
jnp
or
xor
into
negl
subl
sahf
dec
imul
mov
xor
fistps
or
imul
cmp
ds
outsl
iret
je
pop
xchg
aaa
xor
cs
sbb
mov
bound
push
sbbb
mov
jge
cmp
rclb
jp
sbb
ret
mov
in
int
push
xor
adc
push
bt
repnz
roll
sub
and
push
adc
pushf
idivl
sub
scas
adc
xor
outsl
inc
imull
andb
pop
pop
jp
sbb
xchg
fistl
dec
arpl
dec
jae
mov
adc
sub
pop
test
fcoml
push
fsubs
je
in
stos
mov
popa
lahf
vmovss
pop
cwtl
sti
fwait
sbb
inc
mov
dec
jae
push
push
or
cs
es
push
xchg
ds
mov
inc
fldenv
cmp
dec
cmp
bound
arpl
or
stos
dec
clc
ja
push
mov
or
jge
loopne
mov
adc
pop
fdivl
jno
sub
pop
and
push
inc
mov
cwtl
mov
pop
push
enter
in
push
adc
bound
adc
xchg
mov
daa
sbb
iret
push
test
jp
cmp
cmp
into
pushf
out
stc
xor
enter
aas
in
cwtl
mov
std
mov
inc
pusha
xchg
adc
fwait
sbb
fstpl
jecxz
push
inc
push
inc
pushl
loop
cmp
popa
xchg
and
je
inc
int3
push
ljmp
jl
scas
cmp
adc
sub
dec
imul
cld
jp
adc
dec
repnz
cmpsl
fnstsw
mov
scas
test
mov
dec
adc
mov
sub
enter
cmp
dec
mov
incb
push
jae
mov
repnz
dec
and
pop
sbbb
rcrl
and
icebp
jne
mov
mov
pop
sbb
ljmp
fnstcw
insb
xor
jle
sbb
push
mov
out
mov
imul
pop
inc
pop
jno
clc
shl
mov
jne
outsl
das
cmpsb
push
ja
and
icebp
mov
nop
dec
iret
sbb
jle
fiadds
xlat
pop
idivl
push
or
lods
loopne
in
jno
daa
ljmp
add
adc
sub
push
jmp
and
pop
cmp
sub
enter
push
loope
and
shrl
jmp
inc
mov
pop
cld
pop
fisubl
adc
xlat
cmpsl
orb
int
test
ds
es
jle
movntps
clc
in
or
es
shll
test
lret
xchg
add
xchg
jge
insl
cmp
cmp
into
mov
test
add
outsb
xchg
lods
enter
pop
cmp
push
cmp
scas
and
std
adc
jmp
cs
add
repnz
js
sahf
xchg
adc
stos
push
lock
test
or
pop
jmp
sbb
imul
xchg
ja
in
pusha
push
pop
hlt
fsubrl
inc
jo
sbbl
test
mov
fiadds
pop
pop
lahf
cwtl
out
fcompl
ds
imul
sarl
push
testl
js
fwait
ret
adc
jecxz
loopne
adc
gs
popa
scas
push
dec
inc
fistpll
adc
sub
movsl
es
stos
lods
or
jp
in
bound
mov
mov
push
je
or
and
out
adc
inc
pusha
mov
std
pop
sbb
adc
jge
pop
divb
loopne
mov
out
fistpll
testl
mov
jne
or
mov
orb
sub
push
adcl
in
sbb
or
dec
daa
or
inc
inc
mov
lret
out
addr16
outsl
inc
test
mov
mov
das
shrl
in
sahf
or
push
and
and
je
test
xchg
sbbb
sbb
fsub
aas
shll
push
mov
decl
dec
push
test
enter
inc
stc
ljmp
cli
xlat
sbb
lds
dec
icebp
out
into
cmc
outsb
xchg
fistl
jmp
rclb
jmp
pop
sbb
mov
xchg
leave
xchg
inc
mov
rorb
add
stos
jbe
jne
cltd
ds
and
out
push
mov
sub
push
push
xor
or
xor
and
lret
adc
scas
rolb
movsl
adc
sbb
sti
iret
bound
loop
mov
popa
add
cmpsb
fiaddl
cmp
lods
jno
sub
repz
add
sub
jnp
lea
shl
ja
push
sarb
push
es
mov
sbb
mov
scas
xchg
sub
adc
ss
sub
push
cmpsb
leave
inc
sub
cmp
push
dec
cmpsb
inc
add
jo
fmul
cmc
les
out
insl
ret
lock
cwtl
jg
ffreep
imul
push
add
xlat
mov
sahf
pop
adc
test
scas
xchg
inc
nop
outsb
gs
or
push
adc
sbbl
jl
jmp
mov
mov
xchg
or
mov
addr16
cld
xchg
movsb
inc
xor
jne
int3
fs
idivl
and
pop
aam
jle
mov
sbb
int3
stc
adc
dec
jmp
sar
xchg
push
xor
outsl
sarl
xchg
cmp
push
gs
push
sub
cmpsl
negl
xchg
imulb
push
mov
lods
shlb
cltd
rcl
xorb
mov
and
arpl
cmc
dec
out
addr16
mov
js
shl
loope
popf
int3
jae
movsb
out
add
ficoms
pop
dec
xchg
shll
and
mov
pushf
loop
mov
bound
xchg
push
or
fcomps
xor
pop
mov
cmpl
push
sbb
lahf
inc
mov
cld
mov
rol
or
loop
arpl
dec
js
adc
movsb
adc
shll
sarl
clc
roll
pop
pushf
mov
adcl
add
jmp
fnstenv
lods
dec
shrl
xchg
test
sti
adc
or
mov
jb
nop
cwtl
push
inc
stc
mov
inc
enter
pop
js
xor
xor
mulb
add
aam
sbb
or
mov
sub
lahf
xchg
lahf
loopne
jg
sbb
in
fdivs
jge
loope
xor
adc
cmp
xor
in
and
add
sub
bound
mov
data16
push
stos
fdivrs
gs
test
ror
mov
in
add
pop
ss
xor
push
popl
sub
roll
movsl
enter
addr16
push
xor
aaa
fdivl
repnz
push
sbb
pusha
or
mov
shrl
add
mov
out
add
pushl
pop
ret
push
dec
mov
sub
mov
sbb
pop
clc
xor
cmp
add
sub
pop
push
loopne
shlb
or
shll
pop
sbb
and
xor
aad
je
sbb
pop
cmp
adc
or
xchg
xchg
push
mov
jmp
aaa
nop
jb
lods
fstps
jno
shlb
fisttpl
add
out
inc
lds
inc
dec
inc
pop
mov
lret
xchg
inc
cmc
outsb
mov
or
mov
jg
jb
sub
mov
test
inc
into
mov
loopne
ss
jo
push
xor
lds
jle
or
notl
call
and
lea
hlt
pop
push
cmp
lret
fisubrl
pop
ss
mov
jns
mov
push
lods
pop
inc
es
fwait
mov
xchg
sahf
jbe
or
or
int3
insl
jnp
sub
and
jmp
or
or
and
lods
xor
scas
into
out
pop
cmpsb
out
fistl
pushf
jne
stos
dec
sub
rol
in
das
dec
int
ljmp
sbb
jno
inc
jle
pop
cmp
add
loopne
xchg
scas
inc
lods
mov
scas
ljmp
mov
or
adc
dec
lret
jge
dec
push
ja
sub
sub
or
dec
in
lods
push
imul
jl
int3
mov
inc
fwait
sbb
repz
ss
jp
je
leave
fwait
inc
xor
outsb
xorl
mov
orl
mov
sbb
push
je
rcrl
adc
jbe
test
das
pop
mov
mov
dec
or
dec
sahf
jecxz
loopne
cmpsw
js
or
into
flds
inc
fstpl
ret
mov
lock
pop
daa
loope
inc
sub
sarb
mov
jnp
hlt
fsubs
and
loope
fs
jo
and
dec
test
rolb
les
ret
cld
cmp
stos
test
sub
jo
lds
add
mov
jg
mov
out
jecxz
in
dec
sahf
popf
sahf
xchg
add
movsb
movsl
cmp
cwtl
test
out
push
into
xchg
lea
int
repz
push
inc
cli
cmp
mov
sbb
ja
cmpsl
mov
test
sub
in
imul
icebp
xchg
dec
cmp
rcl
adc
aad
js
dec
dec
mov
and
push
push
scas
mov
mov
in
testb
xchg
sahf
cwtl
jno
mov
pop
lret
sub
ljmp
cmp
sbb
mov
xchg
cmp
and
mov
sub
jg
sbb
adc
loop
in
jecxz
xchg
stos
popf
add
jecxz
mov
mov
dec
xchg
xor
adc
pushl
fbstp
cli
mov
add
lods
mov
inc
fsts
xor
mov
push
cmpsl
mov
mov
mov
fildl
inc
pop
adc
ret
rcrb
mov
lret
xchg
andl
sub
sbb
jnp
inc
ret
mov
int
cmpb
adc
push
out
push
ljmp
scas
rolb
scas
sub
scas
and
push
sub
cmp
sbb
jns
lret
test
negb
jecxz
jp
jge
dec
sub
in
test
lret
lock
cwtl
stos
js
mov
add
cmp
or
and
orl
fmull
inc
jns
cwtl
div
jp
adc
scas
dec
sub
sbb
inc
inc
lret
mov
js
aaa
pop
mov
arpl
cmp
push
jae
mov
ret
push
pop
call
das
imul
adc
popl
rcll
and
fdivrs
mov
xchg
mov
jb
test
iret
movsl
dec
je
push
pop
xor
or
and
lahf
xchg
sbb
mov
inc
imul
mov
in
xchg
mov
push
ss
sbb
jp
and
jnp
push
pusha
xor
sbb
mov
xchg
dec
mov
clc
sti
sbb
mov
xor
xor
pop
stos
std
cli
pop
ffreep
and
pop
jae
and
adcb
add
xchg
cltd
in
cmp
mov
add
lods
insl
adcl
add
popa
ss
adc
lahf
cmpsl
dec
dec
imul
sbb
bound
getsec
mov
adc
pop
out
pop
or
or
mov
and
mov
inc
xor
xor
dec
nop
outsb
fs
data16
in
or
xchg
scas
dec
add
cli
fnsave
sub
xlat
add
adc
cmp
and
adcb
rcll
lea
mov
mov
sbb
pop
mov
fcompp
aas
inc
faddl
inc
jbe
mov
daa
jno
xchg
jnp
fs
sub
xor
or
fildll
mov
sahf
or
jae
xor
inc
jle
jl
addr16
lods
mov
test
xchg
js
sarl
lds
cmp
jb
add
push
ljmp
jo
movsl
cli
icebp
test
add
sbb
les
or
insb
mov
pop
movsl
inc
in
lock
pop
fildll
aad
gs
jmp
fwait
jbe
cmp
fisubs
jmp
outsb
push
mov
adc
call
bound
jns
fidivs
xchg
mov
and
aaa
jae
mov
push
inc
pop
aas
pop
pusha
pop
scas
mov
nop
xchg
xor
sbb
movsb
xchg
stc
fwait
adc
hlt
fmull
fstps
imul
mov
mov
pop
in
ret
push
sub
dec
dec
sti
ror
and
or
xlat
outsl
add
cmp
jmp
mov
cmpsb
sub
mov
or
es
mov
add
popa
cmpl
jge
mov
mov
pop
and
iret
sbb
or
cmp
mov
mov
mov
in
and
stos
fnsave
inc
je
jp
gs
rcl
sub
mov
inc
jae
adc
mov
mov
rcl
fsts
or
and
or
mov
in
loope
sub
sti
push
pop
add
daa
hlt
cltd
xor
lods
aaa
addr16
subb
add
push
adc
sub
lret
ficomps
add
lret
push
or
xchg
cmp
loopne
cmc
arpl
js
into
jne
lods
mov
stos
clc
lea
call
hlt
mov
loop
test
jge
and
addr16
aad
call
push
dec
dec
push
testb
iret
lcall
fwait
add
cmpl
inc
jae
add
js
popf
push
out
lret
in
pop
sub
mov
adc
cmpsl
in
sub
cmp
push
add
loopne
data16
je
ror
mov
into
xchg
lcall
and
adc
punpcklwd
pop
and
xor
dec
insl
in
cmpsb
hlt
push
sub
push
cmp
mov
mov
mov
sub
cltd
push
enter
ret
insl
mov
and
repz
lds
fnsave
push
jbe
test
lret
pop
cmp
inc
xor
xor
cmpsl
xchg
mov
push
call
in
inc
mov
pop
xor
iret
bound
cmp
and
cltd
lahf
orb
lret
or
aad
push
xor
stos
xor
addr16
pop
push
cmp
sbb
nop
in
repnz
pop
jbe
xor
or
aaa
in
dec
rcll
xor
daa
inc
or
pop
lods
cmp
mov
jb
fdivrl
and
rorl
jle
ds
das
dec
sub
call
int3
sub
inc
insl
lret
push
push
lcall
lea
repnz
imul
push
lret
sub
push
lret
push
ret
test
push
jmp
mov
adc
in
das
jo
mov
inc
push
shll
xor
in
push
push
fistl
notl
cmc
inc
jecxz
xor
mov
sbb
stc
movsl
xor
repnz
and
push
xlat
insb
imul
fs
in
xor
push
sub
xor
push
adc
adc
jns
xor
ds
mov
dec
dec
inc
fdivl
iret
das
mov
sub
xchg
fsubrs
or
lahf
jns
aam
stos
fucom
adc
and
and
adc
in
mov
dec
mov
jnp
sarb
inc
lahf
add
test
cmp
mov
cmpl
add
jnp
dec
jbe
insl
xlat
lods
loopne
lret
lock
sub
aaa
into
xchg
push
mov
dec
ds
iret
push
jne
out
mov
fstps
push
and
in
shrl
pop
cwtl
cmp
cmp
jmp
mov
test
in
leave
and
jg
jo
psubusw
xor
add
mov
sub
dec
rcrl
inc
jno
cmp
pop
dec
jno
xchg
cli
rol
mov
mov
pop
xor
cmp
mov
dec
daa
and
cld
mov
cwtl
mov
jle
mov
dec
in
mov
ret
stos
or
or
inc
popa
pusha
stos
out
inc
inc
div
addr16
cmp
and
stc
ljmp
mov
and
pushf
dec
test
ss
pop
xchg
push
push
pusha
imul
jle
dec
push
mov
mov
test
cmpsb
jge
and
ret
lcall
jnp
and
scas
cmpsb
xchg
into
and
xor
lods
xchg
out
cwtl
sub
pop
arpl
or
lahf
xchg
or
fistpl
push
daa
pop
fldl
lret
xor
mov
xor
push
mov
add
pop
add
push
jmp
mov
jae,pt
or
cmpsl
add
pusha
xchg
add
testl
scas
daa
icebp
mov
push
mov
xchg
sub
cld
ret
and
arpl
lock
cmp
push
pop
jo
es
fidivs
neg
shlb
jbe
dec
outsb
imul
pop
or
shrb
xchg
scas
push
nop
ds
push
jbe
and
mov
sub
mov
xor
popf
or
cmp
fisubrs
mov
cmp
jmp
in
adc
sub
les
cmpsb
dec
bound
inc
cmp
xchg
fwait
pop
mov
bnd
movsb
xor
shll
lds
mov
mov
xor
xchg
lods
jge
push
inc
or
repnz
sahf
stc
mov
fidivrs
jne
shlb
pop
dec
cmpsl
mov
js
mov
cltd
mov
fcmovu
xchg
loope
pop
pop
dec
dec
ret
hlt
lret
or
mov
sahf
test
andl
std
mov
mov
mov
shlb
pop
add
cltd
mov
out
mov
pop
pop
mov
push
test
push
add
les
xchg
or
std
adcb
pop
sbb
es
loope
push
jecxz
mov
xchg
inc
adc
stos
sub
cmp
mov
std
in
mov
rorl
fsts
mov
add
adc
leave
cmp
aaa
and
and
sub
repz
stos
shrl
adc
push
mov
andl
lret
aad
testl
sbb
rclb
arpl
jle
or
lcall
ds
jg
les
jne
movsb
or
cmc
aaa
lock
push
xchg
pop
and
mov
push
testl
or
xor
xor
push
push
or
jns
fidivrs
push
and
sbb
push
push
dec
ret
sbb
cmp
sbb
inc
sub
mov
ja
test
mov
and
push
mov
xor
mov
push
add
adc
inc
test
sti
cltd
jbe
subl
movsl
xchg
jbe
loopne
cmp
sub
xchg
lret
push
arpl
in
mov
adc
mov
dec
push
in
push
loope
dec
data16
stc
xchg
insl
pushf
push
jno
push
adc
cmp
pop
jbe
es
xchg
test
mov
add
out
rorb
mull
gs
in
aam
jmp
in
push
xor
push
setnp
add
mov
jp
pop
xchg
aas
andl
xchg
mov
cvttps2pi
xor
int
inc
pusha
lret
mov
mov
adc
hlt
ja
out
outsl
loop
add
das
xchg
sar
repz
jecxz
sub
into
stos
pop
add
cmp
xor
loope
lcall
scas
in
cld
shlb
bnd
and
dec
jb
push
nopl
jb
loope
add
mov
int
sbbl
enter
push
sbb
sbb
enter
call
cltd
xor
add
push
mov
stos
sbb
mov
cmp
orl
lahf
pop
ss
adc
or
dec
mulb
cmp
and
pop
movl
jp
xor
aaa
scas
xlat
out
pop
pushf
inc
pop
jecxz
and
and
jns
cld
and
fimull
or
add
movsl
cmpsb
xlat
sti
repz
rol
cltd
repnz
and
js
fidivrs
sar
pusha
rcr
nop
xchg
mov
add
lods
mov
rorb
pop
push
gs
into
cmc
mov
dec
or
ret
out
fsubs
stc
and
in
mov
and
jle
inc
xchg
sbb
xchg
iret
jmp
or
je
sbb
xchg
mov
cwtl
call
xor
mov
int3
jge
pop
daa
cmp
out
ja
adc
pop
jmp
mov
ja
xchg
cld
mov
dec
mov
cmp
ss
push
aam
xor
mov
inc
sarl
fwait
stc
inc
movsl
dec
orb
shl
mov
jne
in
mov
es
lock
std
lea
rorl
pushf
add
movsb
cmp
mov
adc
daa
stc
inc
xchg
inc
out
xor
int
shlb
add
mov
or
nop
push
cmp
push
data16
mov
cwtl
cmpsl
xchg
sahf
pop
fs
insl
pop
jp
movsl
enter
pop
stc
mov
out
orl
mov
fstl
shll
mov
negb
fildll
fs
ljmp
ret
mov
ret
aaa
xor
add
or
popa
jl
scas
pop
mov
jne
jne
repnz
mov
inc
jae
xlat
or
aas
lods
andb
xchg
add
push
sysenter
rcrb
test
dec
xor
das
push
iret
mov
or
adc
mov
xchg
lret
sub
or
addr16
andb
inc
fnsetpm(287
pushf
or
push
push
das
js
inc
into
jno
jo
leave
mov
add
sbb
outsb
mov
aas
or
js
js
icebp
out
inc
sub
sbb
addl
dec
sbb
repnz
push
cwtl
inc
xchg
test
test
jo
sub
ja
add
xor
in
jno
mov
pop
and
pusha
movsl
mov
dec
les
stc
mov
orl
fs
insl
in
mov
data16
insb
outsb
popf
dec
test
out
cmp
gs
push
pop
push
aas
xchg
ljmp
outsb
mov
popf
adc
push
sbb
xor
mov
lods
sub
or
aas
cltd
ja
ret
cli
dec
add
add
movsl
sub
rorb
mov
mov
lods
scas
jecxz
xchg
sub
dec
add
mov
inc
mov
aam
ds
jmp
lods
incb
push
jp
push
lret
or
push
je
leave
aad
aam
fstpl
jge
cs
xor
adc
cmpsb
jmp
bound
bound
push
mov
mov
cmpsl
xor
into
sub
mov
out
jecxz
jg
inc
ja
jae
ret
pop
cmp
or
mov
xchg
std
and
xlat
dec
xor
mov
addr16
dec
cmp
xor
in
jl
sbb
xchg
inc
jecxz
and
and
and
xor
jo
sub
lahf
movsb
out
cmp
jbe
xchg
fldenv
sub
fnsave
movsb
ret
or
mov
lods
and
cwtl
pop
pop
cmp
dec
pop
popf
cmp
lods
and
mov
es
mov
mov
imul
std
subb
inc
dec
sti
push
mov
insb
dec
cltd
call
push
jle
js
and
pop
imull
inc
adc
pusha
data16
test
xchg
inc
adc
push
int
jno
add
cmp
outsb
fxch
jge
rol
js
icebp
dec
ret
nop
adc
sbb
sub
in
popf
or
or
xor
dec
pop
xor
in
add
mov
out
jae
aam
xchg
ffreep
rcrl
xor
xchg
clc
or
mov
mov
xchg
stc
insl
icebp
inc
mov
rcr
cmp
sub
dec
mov
pop
sub
adc
xor
push
mov
shll
push
xchg
les
out
bound
jg
lock
mov
add
pop
jae
jmp
mov
jl
pop
push
int3
pop
out
mov
outsb
insb
xchg
pop
pusha
ja
dec
add
inc
scas
imulb
jnp
or
das
mov
fs
jle
push
cs
imul
in
and
mov
out
mov
pop
dec
xchg
xchg
push
outsb
push
mov
lret
or
loope
insb
divb
cwtl
jg
lahf
cmpsl
mov
aad
lock
mov
push
inc
lds
jne
inc
movsl
or
add
out
sub
in
leave
lea
sbb
movsb
out
clc
outsl
sbb
xchg
xchg
jno
mov
inc
mov
iret
xchg
mov
mov
sub
adc
js
cld
pop
les
mov
mov
shrl
cmp
rcrb
jle
mov
inc
repz
sbb
pusha
cmpsb
adc
shlb
mov
pop
pop
xor
outsl
test
mov
imul
addb
dec
sub
je
xor
dec
fwait
push
jg
adc
pop
add
xchg
inc
cmp
sub
test
lds
pop
mov
inc
mov
push
ret
rolb
inc
call
xor
adc
lret
lea
repz
jle
sub
mov
flds
icebp
mov
jge
aas
mov
sbb
ja
xchg
mov
jecxz
ret
aad
orl
mov
pop
xchg
cmp
call
outsb
xchg
xchg
das
push
sbb
cmc
es
jae
mov
and
cmp
rcll
or
mov
fs
inc
jl
repz
pop
frstor
mov
mov
lock
ret
pop
jecxz
mov
adc
enter
xlat
push
add
jb
cmp
xchg
add
out
movl
fldl
cmp
add
ret
xchg
in
scas
nop
adc
loop
mov
add
int
cld
cmpsb
jle
je
mov
stc
cmpsl
mov
bound
or
mov
and
xchg
add
lods
rcl
sbb
mov
and
cli
adc
daa
popl
iret
push
pop
sbb
in
cmp
push
rol
and
movsl
insl
mov
fwait
outsl
les
push
adc
je
imul
mov
push
cmp
push
mov
in
loop
pushf
pop
movsb
out
stos
mov
sbb
test
fidivs
shlb
mov
xlat
cmp
and
xchg
push
cmpsb
or
dec
pop
and
mov
ja
cmp
addb
mov
cwtl
stc
jmp
in
xor
insl
push
add
lock
leave
or
cmpsl
pop
jp
stos
setle
xchg
aad
adcl
mov
jge
dec
mov
and
clc
mov
shrl
push
sbb
xor
clc
adc
mov
jle
mov
das
pop
inc
jg
popf
pop
xchg
jbe
dec
dec
or
mov
popf
rol
addl
inc
out
insl
inc
fiadds
and
push
sbbb
cli
sahf
cltd
pop
push
in
dec
mov
test
rol
add
jbe
fiadds
cld
cmp
cmp
mov
sub
imulb
push
clc
lcall
sahf
lahf
dec
mov
inc
xchg
jns
add
pop
lods
aad
movsl
pop
pop
cs
pop
mull
xchg
sarl
or
in
sbbb
fdivrl
shrl
mov
xor
push
imul
or
arpl
pop
scas
inc
stc
iret
lods
add
pop
out
lahf
gs
or
dec
jae
pop
std
push
rcrb
dec
cmp
sub
adc
nop
push
cli
mov
icebp
add
fcom
sbb
and
xchg
out
sbb
push
lcall
repz
dec
pop
jecxz
dec
xchg
dec
aas
pushf
sarl
push
dec
aam
push
inc
jl
ljmp
mov
xor
push
std
mov
in
dec
std
repnz
xchg
cltd
cmp
mov
out
fimuls
sbb
xor
xchg
shll
xor
push
jae
clc
test
mov
aaa
cli
in
cmp
sub
xor
data16
sub
sbbl
pop
aam
cli
push
pop
popa
ss
jns
cli
xchg
sti
arpl
xor
int3
or
aaa
ljmp
imul
or
outsb
loope
mov
jmp
pusha
xor
pop
sbb
andl
push
and
das
mov
sub
and
mov
call
dec
pusha
or
mov
sbb
pusha
pop
dec
daa
cmp
pop
adc
sub
cli
cmpb
xor
ficomps
sbb
shlb
fists
xchg
xor
push
push
es
pop
mov
jnp
jle
popf
pop
mulb
xchg
shlb
pop
inc
ror
mov
adc
mov
xor
sbb
cmpsl
xchg
or
cli
pusha
pop
fistl
cmp
les
dec
push
cmc
fnstcw
pop
or
leave
xchg
pop
cld
pop
stc
sub
adc
rcrb
inc
mov
outsb
push
popf
addb
repnz
push
fistpl
jecxz
mov
pop
pusha
xor
scas
out
out
pop
pop
sbb
mov
sbb
lds
dec
sbb
mov
mov
sub
and
divl
sbb
jge
push
adc
ja
adc
lret
insb
jp
fidivs
push
jnp
pop
xlat
enter
sti
jo
cmp
mov
subl
push
ja
bound
pop
sub
dec
push
mov
or
sub
cltd
jb
nop
fmull
les
pop
enter
and
mov
adc
push
xor
xchg
jecxz
in
xor
or
pop
jo
movups
jo
and
or
add
in
aaa
fisubs
sub
sbb
cmp
test
sub
mov
pop
popf
cmpsl
out
icebp
stos
push
out
inc
mov
sub
scas
leave
inc
mov
std
xchg
es
xlat
jo
mov
jb
mov
dec
scas
mov
pop
imul
dec
out
mov
add
cmpsl
outsl
out
pushf
cwtl
push
pop
push
sub
outsb
leave
or
pop
mov
or
fbstp
and
fmull
subb
adc
adc
jmp
pop
add
pop
and
or
leave
mov
xor
repnz
mov
mov
mov
dec
mov
subb
dec
jg
add
xor
pop
mov
mov
daa
cld
push
sbb
and
nop
xchg
push
and
inc
test
mov
stos
cmp
in
jne
lods
lea
cmc
mov
mov
adc
xchg
dec
or
push
inc
mov
gs
js
xor
in
out
and
sub
int
jne
and
in
mov
mov
pop
repz
jns
gs
xchg
mov
mov
cmp
fsubl
fwait
mov
shll
cmp
insb
movsl
imull
xor
mov
in
jp
dec
add
iret
aad
test
jle
call
fdivl
fistpl
int3
int3
loopne
cmp
inc
jle
sub
lods
push
out
mov
xchg
pusha
lods
mov
loop
add
shll
cltd
cs
xchg
xorb
push
and
jnp
xchg
call
cmp
out
lret
in
mov
adc
je
adc
mov
out
mov
mov
xchg
fstps
cmp
sarl
inc
lea
int
fsubp
cmp
push
push
mov
jecxz
or
lahf
and
lds
jo
popf
xchg
push
gs
inc
iret
inc
mov
mov
sti
aad
xlat
lret
sbb
adc
in
xchg
push
stos
cli
inc
fldl
test
xchg
and
cld
stos
push
jle
push
push
sub
xor
cmp
push
adc
mov
mov
bound
dec
shll
outsb
bound
popa
jnp
test
in
orb
pop
sbb
or
xor
pop
lea
push
mov
cmc
xchg
jns
aad
mov
jle
mov
or
jp
cmp
adc
jbe
xchg
inc
movsl
cli
dec
test
sbb
push
cld
in
xlat
pushf
adc
adc
pop
mov
inc
dec
push
cmp
fildl
sbb
xchg
cwtl
popf
push
lcall
push
xchg
mov
rcrl
outsl
add
add
sarb
mov
fistl
pop
in
push
into
and
sub
dec
xor
xchg
in
jo,pn
add
pop
daa
jo
add
loopne
iret
mov
push
push
xchg
outsb
shll
fs
cmc
in
mov
jecxz
clc
sub
or
inc
sarl
jbe
push
mov
jl
std
xchg
mov
addb
pop
xchg
mov
cld
cs
stos
stos
leave
xor
in
aam
clc
loopne
mov
scas
out
pop
es
lret
cmpsl
and
shrb
and
xchg
insb
mov
adc
or
arpl
jecxz
xor
jmp
int
addr16
les
push
jle
sub
xchg
jge
notb
xchg
and
lock
subb
fs
add
jecxz
sbb
mov
pop
add
add
adc
and
mov
in
repnz
sub
fnstsw
scas
xor
hlt
jle
andl
fnstenv
ficomps
sbb
mov
inc
inc
decl
test
mov
and
in
push
fbstp
aaa
mov
mov
stos
pop
fs
push
std
sub
mov
ficomps
mov
or
lcall
iret
gs
lret
das
xchg
mov
xor
insb
and
hlt
popf
pop
popa
insb
mov
stos
dec
or
jmp
adc
jge
mov
mov
sbb
jne
mov
repz
shll
jecxz
insl
ss
xchg
pop
add
push
mov
sti
pop
jno
push
or
mov
cmp
jge
ljmp
jns
sbb
push
xor
scas
dec
push
test
lcall
clc
stos
pop
inc
lods
or
cwtl
xchg
into
mov
lods
dec
and
loope
pop
ret
test
psubb
loopne
adc
xor
in
pop
jo
lods
and
mov
adc
sbbl
jo
mov
addr16
cmp
movsl
cmc
xor
addb
or
movb
fisttpll
jle
imul
sarl
xor
xchg
fsubs
lret
sub
adc
fwait
aad
sahf
fnsave
push
jo
aaa
sahf
fadds
enter
xchg
jge
arpl
push
aam
jae
jno
popf
and
and
sbb
sub
push
mov
xor
cwtl
dec
in
xor
ficoml
sub
mov
cli
loopne
ljmp
shll
enter
sub
mov
mov
pop
and
xlat
lea
in
push
data16
enter
mov
ja
mov
in
xchg
fnstcw
leave
push
rorb
dec
xchg
mov
mov
popa
js
scas
rol
sbb
int
pop
push
std
push
pop
cmp
push
sbb
mov
or
push
pop
jl
js
mov
mov
xchg
imul
icebp
incb
lret
nop
ljmp
xchg
or
ss
jne
xchg
inc
fcompl
roll
mov
into
and
lods
pop
push
in
hlt
mov
imul
shrl
cmp
sbb
mov
jo
xchg
rorb
mov
cmp
dec
ficoml
enter
mov
sarb
mov
jmp
ja
cwtl
mul
pop
in
scas
push
jge
pop
ljmp
ret
mov
mov
add
scas
aam
data16
out
or
test
loopne
push
sbb
mov
popf
push
fs
add
and
or
enter
cmp
fsubs
sahf
dec
fadds
jns
or
aad
mov
popf
mov
mov
xchg
in
mov
jnp
jecxz
adc
mov
sarl
cmp
hlt
jecxz
adc
inc
mov
sbb
mov
movsl
sbb
xchg
sub
pop
test
mov
jle
and
sub
jns
inc
ss
fisubs
bound
dec
push
cmc
pop
inc
xchg
stos
push
push
inc
xchg
push
test
cld
loopne
dec
invd
xor
and
int
js
add
adcb
nop
mov
out
aas
adcb
lahf
adc
int3
in
pop
insb
lret
in
jl
jecxz
shlb
cmpsb
pop
ss
dec
adc
add
push
test
jnp
iret
mov
lea
imul
mov
adc
sarb
inc
stos
imul
mov
flds
ficoms
shrl
mov
jl
push
sbb
ret
sbb
je
paddq
pop
dec
sbb
addb
daa
sub
ret
fsubrs
iret
ret
ret
ss
lds
int3
add
mov
cmp
xchg
ljmp
add
lods
jns
pop
cmp
mov
or
push
cmpsb
pop
mov
or
jmp
incl
inc
popf
dec
enter
xchg
pop
ljmpw
jb
adc
mov
mov
inc
scas
daa
jns
adcl
jmp
dec
xlat
into
insl
outsl
xchg
inc
or
mov
jge
shr
xchg
pop
mov
add
in
lahf
outsl
inc
mov
pop
int
mov
fimull
mov
push
mov
sahf
popf
aaa
adc
enter
rcrl
jne
out
fcomps
mov
mulb
je
mov
rcr
je
outsl
mov
std
lret
mov
mov
jmp
mov
dec
or
mov
xlat
movsb
pop
inc
lea
or
sbb
sbb
mov
lea
cmp
data16
sbb
mov
push
mov
xchg
aaa
dec
scas
ret
mov
dec
ja
and
xlat
mov
inc
mov
jmp
xchg
xor
repz
push
mov
xchg
mov
push
out
outsb
jb
xchg
and
mov
adc
je
mov
stos
mov
lock
mov
and
adc
mov
dec
add
mov
push
mov
lock
notl
fwait
dec
dec
lahf
inc
pop
addr16
sub
cmp
jp
xchg
ret
jmp
das
dec
into
fbld
ret
lods
and
jge
ds
fcomps
add
stc
jmp
cwtl
add
dec
cld
jge
mov
dec
mov
mov
cmpsb
adc
pushf
cli
shlb
push
xchg
enter
and
out
mov
lcall
mov
dec
jecxz
mov
cmpsl
jae
aad
mov
lahf
test
sub
cli
ds
mov
sbb
repz
dec
orl
ret
xchg
leave
pop
sbbl
or
pop
xor
jge
xchg
sub
or
enter
stos
mov
les
sbb
out
les
out
aad
addr16
lret
cli
mov
decb
xchg
loope
sbb
cmp
cmpsl
mov
mov
popf
test
dec
bound
leave
fiaddl
jecxz
cmc
rcl
dec
movsl
xchg
jae
mov
iret
div
mov
into
clc
mov
leave
adc
lods
xor
inc
in
mov
fstp
out
mov
push
inc
add
stos
or
mov
into
inc
mov
fstpl
inc
cmp
hlt
or
push
stos
pop
sub
xor
cmpsb
das
push
es
add
and
mull
push
dec
xor
movsb
stos
test
sbb
and
add
adc
fisubl
aaa
cmpsb
inc
cmp
ja
xchg
mull
std
dec
movsl
imul
or
adc
dec
cmp
ficompl
test
cmc
pop
loope
dec
sar
adc
out
bound
js
dec
out
xchg
jae
std
jae
mov
sbb
das
jns
mov
dec
stc
rorb
scas
dec
mov
fs
incl
std
adc
lret
cmp
mov
int
sub
shlb
mov
adc
cmpsb
rcrb
wrmsr
adc
outsb
or
into
rcl
fnstsw
movsl
out
leave
lods
or
pop
xchg
cli
std
mul
or
xchg
lock
and
push
scas
fcomip
int3
adc
jecxz
inc
jo
test
xchg
sub
jb
mov
repnz
inc
xor
arpl
sbb
dec
jb
out
adc
xor
movsb
or
pop
adc
push
sbb
ljmp
mov
call
fsts
pop
ja
lds
jl
out
sbb
je
sub
fcompl
pop
xor
xchg
mov
push
jp
sbb
jge
pushf
sbb
inc
or
jmp
cmp
test
mov
clc
mov
cmp
ss
jp
push
sti
mov
in
mov
adc
add
push
pushf
aam
cmovo
mov
leave
xor
lcall
add
inc
jae
push
stos
lret
and
mov
push
fisubs
mov
sbb
push
repnz
mov
fnsave
push
mov
loop
push
push
inc
scas
sahf
sub
sbb
arpl
rcrb
adc
push
cwtl
lret
rol
fneni(8087
lea
shlb
xchg
mov
into
aaa
ds
jmp
fimull
ss
es
push
jo
fwait
jmp
es
data16
sub
jmp
fcmovnu
aas
sbb
push
inc
outsl
negb
cmp
sarb
or
out
es
sub
xor
xor
push
cmpl
call
xchg
fcomps
bound
jle
push
add
aas
sbbl
push
mov
out
mov
mov
push
mov
pop
imul
outsb
jnp
mov
mov
movsb
inc
fldt
push
mov
dec
sbbb
xchg
in
jbe
sub
mov
repz
adcl
add
stc
loop
xchg
sub
sbb
mov
gs
adc
jg
loop
or
push
and
mov
leave
cmp
inc
cmp
adc
cmp
sarb
inc
arpl
or
fidivs
mov
mov
test
aam
fsubrl
arpl
pusha
ds
lret
sahf
insb
sbb
lret
sub
pusha
fldl
push
das
dec
testl
or
movsb
sbb
xchg
out
mov
mov
adcb
stos
cmp
jle
mov
sbb
int
mov
jno
mov
lret
into
push
pop
jecxz
aas
sub
sbb
stos
fmul
sub
xor
notl
mov
cmpsb
sti
adc
adc
lock
das
pop
push
lds
push
lods
lds
cmp
mov
sub
outsl
or
mov
in
add
inc
inc
ret
pop
mov
std
in
jecxz
test
fwait
in
mov
int3
in
loope
or
sbb
dec
in
popa
jle
loopne
gs
repnz
sub
sbb
dec
jmp
mov
icebp
sub
jge
mov
mov
icebp
rorl
xor
cmpsl
fs
inc
imul
xor
out
rcr
nop
aam
jae
bound
xorb
dec
arpl
push
in
fsubrl
rclb
pusha
mov
mov
adc
adc
sub
ss
lahf
xor
cmpsl
cmpsb
lret
mov
mov
lcall
loopne
or
adc
loopne
add
imul
add
push
pop
cltd
pop
pop
push
fs
ret
leave
jmp
cmp
mov
es
fs
mov
jno
mov
push
fisttpl
ret
inc
imul
sub
jb
je
test
enter
sub
cwtl
repnz
cmp
xchg
pusha
scas
adcb
mov
out
std
int3
mov
lods
pop
pop
int3
not
ss
mov
outsl
cmpsl
lea
jecxz
pusha
sbb
adc
push
and
add
mov
je
icebp
adc
test
pusha
ss
sti
adc
or
das
inc
fbld
mov
outsl
xchg
inc
adc
pop
adcb
pop
jno
test
cwtl
fmull
push
mov
sbb
pop
addr16
jl
aad
and
lcall
adc
cld
dec
mov
es
lods
fsubrl
mov
mov
loop
leave
xchg
inc
cli
leave
ss
addr16
das
and
in
in
mov
sub
push
inc
in
sbbl
mov
sbb
xor
insl
or
xor
dec
push
test
mov
mov
sub
inc
test
pushf
sub
lahf
xchg
in
rcrl
lahf
xchg
and
inc
out
inc
mov
lret
sub
jg
mov
js
es
jb
dec
mov
cmpxchg
addr16
inc
mov
jo
inc
dec
cmc
pushf
or
pop
shl
mov
dec
negb
mov
xor
sub
das
jb
stos
xor
mov
sti
or
and
xchg
dec
sub
popa
dec
mov
rolb
cmp
outsl
inc
cld
out
xchg
sub
mov
or
cmp
mov
test
sti
ds
mov
outsb
mov
inc
push
inc
pop
xchg
cmp
jnp
ret
movsl
cmpsb
out
push
mov
aaa
mov
mov
fs
mov
fisubl
inc
jo
jl
ss
cmpsb
pop
xchg
dec
test
sar
aaa
repz
push
daa
mov
cmp
xchg
aaa
lret
xchg
sbb
pop
leave
jbe
pop
xor
fimull
jbe
insl
dec
xchg
jns
xchg
test
mov
lock
lock
add
jo
pop
mov
push
add
in
jne
sub
mov
inc
add
mov
adc
popf
push
pop
int
test
mov
or
in
repz
dec
jo
fidivs
jmp
popa
lcall
mov
cmp
cld
orl
fadd
jns
adc
jns
or
sub
fnstcw
je
cmpsl
fwait
hlt
and
lcall
stos
nop
shl
rcl
sti
push
push
lods
dec
pop
in
cli
sahf
xorl
inc
hlt
mov
inc
jge
sarb
inc
sub
xor
dec
and
stos
cmp
jo
bound
jg
sar
in
push
sbb
mov
and
push
js
mov
rcrb
insl
cwtl
xor
es
sbb
shrl
loopne
fwait
jecxz
push
jb
xor
pusha
popf
pop
pop
or
sbb
adc
out
push
enter
movb
lahf
std
cltd
pop
rclb
pushf
ja
and
jb
shl
cmp
push
xchg
jno
xchg
out
sbb
and
into
push
insl
lret
jno
sbb
test
cs
out
sti
fs
popa
xor
ds
and
gs
addb
mov
lcall
pusha
ds
out
jmp
lods
mov
insl
cs
jo
push
fwait
mov
out
pop
pop
cmp
addr16
movsl
xchg
divl
stos
sub
mov
dec
add
subb
repz
int
and
push
lds
dec
pop
dec
or
testl
sub
pop
lock
addb
test
mov
mov
ljmp
enter
mov
xorl
mov
repz
push
test
pop
xchg
jnp
push
movsl
pcmpgtd
jbe
divb
stc
enter
mov
jnp
mov
push
aaa
pop
ds
bound
shll
icebp
nop
gs
dec
cld
cwtl
push
mov
xchg
push
sarl
fpatan
stos
sbb
add
jmp
add
mov
sbb
flds
repz
fistps
outsb
jae
cmpsb
fstpl
ficoml
aad
hlt
inc
mov
ret
cmpsl
cmp
xchg
ljmp
push
bnd
sub
or
mov
xor
mov
dec
int3
xor
mov
cmpxchg
int
test
movsb
fs
xor
and
jnp
aad
fwait
outsl
sub
jle
outsb
outsb
jl
lret
xchg
sbb
leave
add
mov
lds
jo
inc
sub
mov
mov
xchg
pop
adc
cmpsb
xor
sahf
cmp
push
aas
mov
add
loop
jno
rorl
ret
cwtl
mov
xor
sbb
push
ljmp
mov
in
fs
inc
xchg
into
imul
and
fadd
bound
cs
mov
adc
stos
lret
mov
cmpsl
mov
or
cld
gs
aad
jae
call
mov
les
xor
dec
fistpll
dec
mov
lods
mov
addr16
lock
les
nop
push
inc
shll
fsubl
loopne
push
xor
insl
hlt
test
mov
jne
cmpsl
rcrl
out
add
cmpsb
xchg
adc
movsb
sbb
lahf
aad
cs
xchg
leave
mov
addb
fwait
in
out
jbe
xor
icebp
add
jo
testb
bound
mov
pop
push
aas
jo
and
xor
add
push
dec
in
pushf
mov
adc
pop
test
push
mov
pop
xor
insl
fistl
inc
push
push
cwtl
icebp
aad
push
inc
shlb
in
mov
fidivs
mov
pop
int3
jmp
ljmp
in
and
aaa
pop
mov
mov
pushf
mov
stc
rcr
lods
and
mov
jnp
out
adc
jecxz
sahf
stos
fnstenv
jl
dec
scas
outsl
jne
icebp
push
dec
cmp
cmp
loope
mov
xchg
xchg
push
icebp
pusha
aad
cmp
mov
and
dec
xor
xlat
xchg
je
fmuls
add
jg
push
and
mov
sub
stc
xchg
mov
pop
jle
out
jecxz
ja
pushf
jecxz
js
in
sub
imul
cmp
test
adc
fcmovnu
in
stc
cmp
and
inc
adc
inc
mov
rcr
mov
mov
clc
pop
inc
or
mov
imull
pop
addl
in
idivb
add
adc
pop
fdivr
test
mov
cmpsb
mov
cmc
jne
outsl
int
pop
arpl
addr16
lea
pop
repnz
cmp
lcall
fwait
jle
xchg
and
pop
cs
clc
out
push
mov
aam
pop
xchg
fbstp
jb
in
cwtl
xchg
cmc
mov
or
push
cmpsb
jge
mov
sub
test
inc
inc
add
enter
stos
ljmp
in
cmp
adc
push
pop
fsubl
xchg
aad
sub
sub
aad
inc
jb
mov
mov
aaa
out
fistl
mov
mov
ret
jns
xchg
xchg
in
sbb
lret
xchg
ficoms
pop
les
adc
adc
cmpsb
call
dec
addr16
or
jg
in
scas
lcall
pop
xchg
mov
test
ljmp
inc
mov
ja
orl
inc
int
push
push
push
pop
in
pop
and
orl
repz
dec
xor
pusha
mov
out
into
mov
jbe
jbe
push
sarl
xchg
fmulp
pop
sbb
in
in
arpl
in
int
call
dec
test
mov
mov
outsl
xchg
jg
adc
test
cmp
int3
das
fwait
fs
aaa
in
cli
xchg
push
lea
mov
inc
pusha
int
out
dec
addl
cli
jp
gs
cltd
xchg
fimull
mov
divl
es
fcom
ljmp
loopne
int3
pop
das
cmovb
insl
mov
add
pusha
faddl
push
and
push
je
in
jo
cmp
sbb
jg
scas
cmpsb
jae
in
xchg
call
mov
rcrb
push
push
test
loopne
push
test
idiv
or
scas
in
mov
adc
clc
iret
nop
sar
mov
mov
leave
pop
leave
stc
inc
and
sarb
mov
jno
into
sti
stc
sub
and
mov
int
fidivl
and
pop
and
mov
loop
out
iret
add
push
ja
xchg
mov
icebp
jecxz
outsb
sahf
int3
and
scas
in
cmp
jb
imull
imul
and
rclb
int3
test
aad
div
xchg
jecxz
call
cmpsl
arpl
bound
sbb
pushf
add
and
push
inc
in
push
fistl
cltd
dec
rol
mov
icebp
repz
cmp
mov
add
ljmp
jg
jg
insb
jg
xchg
mov
cmp
test
and
jne
inc
subb
movsb
xor
lods
stc
fmull
cmc
icebp
loopne
movsb
sbb
in
in
roll
cmpsl
or
notl
pop
xlat
lock
sbb
ljmp
addr16
lock
pop
and
push
mov
and
jns
js
inc
fisubl
mov
xchg
mov
in
mov
xchg
out
push
push
or
ljmp
jbe
outsb
call
hlt
xchg
lret
cmp
aam
inc
jo
sbb
into
pop
adc
mov
xor
rolb
in
sub
mov
rcr
shlb
inc
push
icebp
xchg
jbe
and
lcall
pusha
inc
xor
divb
loope
mov
mov
xchg
sti
mov
inc
cli
dec
insl
shlb
aas
mov
scas
push
push
ja
arpl
ss
sti
jae
test
subb
inc
ret
insb
movsb
daa
add
xchg
mov
loop
shlb
rolb
mov
aas
in
sbb
sub
xor
jnp
or
dec
cmp
add
add
sbb
frstpm(287
xor
xor
mov
dec
cmp
adc
loope
mov
add
lock
out
sbb
repnz
jmp
pop
push
or
mov
cmp
scas
sub
push
out
mov
lods
or
push
sbb
ret
mov
insb
push
xlat
or
pusha
push
clc
mov
cli
dec
push
popf
test
sub
shrl
and
jmp
aam
mov
cmpsb
or
cmp
jl
dec
xorb
xor
push
andb
outsl
loopne
div
orb
mov
xchg
adc
stos
lock
outsb
pop
mov
imul
lock
and
cmp
fstl
pop
repnz
mov
shlb
mov
aad
or
inc
sahf
nop
stos
repnz
in
mov
mov
pop
xor
pop
mov
mov
pop
push
test
call
xor
aas
rclb
or
aad
mov
insl
xor
loope
push
mov
pop
outsb
dec
jle
lret
subl
loope
sbb
mov
sbb
out
xchg
ss
mov
dec
outsb
push
lods
jae
lock
bound
push
xor
pop
or
loopne
ficomps
xor
dec
mov
mov
cmp
loopne
jnp
xchg
pop
loopne
cmpsb
or
stos
in
fnstsw
imul
dec
pop
call
dec
push
testb
inc
into
icebp
cli
sti
movsb
hlt
clc
movsb
sub
mov
fisubs
jmp
mov
xor
jmp
adc
int
cli
lea
mov
pop
dec
mov
xor
inc
and
in
mov
sub
xor
data16
jp
push
jmp
in
icebp
cli
cmp
andb
stc
lock
xchg
loop
and
cmpsb
or
add
xor
jb
mov
jbe
pop
movsl
xor
push
cli
jle
lret
js
mov
in
in
mov
shrl
cs
or
sbb
pop
andb
fnstsw
xor
xor
into
mov
in
dec
inc
in
push
inc
sahf
lahf
push
lcall
test
scas
push
jne
out
jbe
jge
pop
xchg
jno
scas
popaw
lcall
dec
loop
adc
test
nop
ljmp
sbb
xor
mov
pop
fnstenv
lret
cmpsb
add
fistl
jl
dec
imul
icebp
scas
lret
mov
subb
xor
or
sub
cmpsb
and
dec
xchg
mov
adc
ret
mov
pushf
inc
imul
bnd
out
sbb
subb
fwait
or
js
xor
cwtl
or
insb
push
fisttpl
add
mov
sbb
xchg
push
test
mov
sub
cmc
and
or
ljmp
in
out
mul
push
mov
rol
sub
into
nop
repz
in
cmp
inc
mov
test
inc
lods
fwait
outsb
fldl
sbb
dec
test
mov
dec
sbb
adc
jle
loopne
cltd
pop
cmp
mov
or
test
xchg
and
jp
nop
aas
jnp
pop
xchg
shrl
jno
xchg
pushf
outsb
repnz
das
dec
lret
movsl
pop
jecxz
xchg
and
or
or
push
cmp
fdivrs
cmpsl
fs
mov
sbb
push
getsec
sbb
add
scas
cmp
inc
add
pushf
rcll
lds
pop
aas
jbe
fcomps
jbe
adc
dec
bound
jns
dec
and
cmpsb
fstpl
imul
pop
sbb
add
jae
or
jns
mov
stos
mov
lret
in
push
jp
add
mov
mov
das
pop
scas
dec
xchg
stc
pop
cmp
push
inc
int
flds
sti
inc
or
test
mov
ret
or
mov
mov
dec
inc
mov
ret
mov
pop
push
jge
pop
sbb
fsubl
loope
repz
movsl
xchg
scas
leave
push
filds
in
xor
scas
push
push
cmp
xchg
fwait
dec
jbe
ret
cmp
xor
jp
xor
std
sub
mov
rcll
mov
xchg
jecxz
outsl
mov
mov
sub
or
jg,pn
aam
xorl
shlb
insb
call
mov
jmp
mov
aaa
inc
inc
jg
pop
xchg
jmp
push
cld
aaa
mov
mov
or
push
sub
jae
jne
mov
sub
cli
cld
mov
lcall
sbb
mov
mov
sub
mov
sub
cmp
scas
mov
xlat
or
outsl
pop
imul
pop
jb
cli
mov
push
into
jbe
xor
lret
inc
inc
xor
add
les
ret
xor
cmpsb
sbb
mov
adc
mov
or
idivb
jo
into
je
out
push
outsl
push
mov
stc
jne
fmuls
xor
dec
lods
or
mov
cli
lods
push
pop
mov
test
add
jo
push
jns
pop
push
xchg
andl
mov
mov
popa
test
mov
mov
push
cli
repz
dec
rolb
sub
rcrl
mov
pop
movsl
test
cmp
xor
lcall
in
or
dec
pop
sub
cmp
push
adc
mov
push
popf
mov
mov
nop
cwtl
cmpl
inc
mov
adc
jae
cli
xchg
push
push
lods
sbb
imulb
pusha
stos
data16
mov
fwait
or
pusha
mov
repnz
lock
nop
fnstcw
in
stos
jne
add
cmp
pop
push
shr
dec
dec
lea
jnp
div
dec
mov
cmp
sbb
ds
lahf
mov
dec
dec
pop
int3
stos
jbe
insl
mov
cmp
jmp
xchg
add
push
movsb
stos
push
mov
test
frstor
into
lret
mov
jp
pop
sahf
les
jge
sarl
test
cmpsb
leave
roll
jno
scas
dec
in
mov
sti
imul
sub
add
sub
jge
mov
pop
test
loopne
in
fimuls
push
mov
es
mov
lcall
pop
movsl
xchg
mov
aam
xorl
cli
mov
shrl
in
mov
shlb
imul
outsb
outsb
inc
mov
data16
call
pop
lcall
fldt
pusha
jl
addr16
adc
add
mov
adc
ret
shlb
add
cmp
rcll
aas
sub
xor
inc
scas
fdivrl
jns
xchg
hlt
or
push
rcrl
inc
and
sub
mov
mov
inc
enter
ja
mov
sbb
and
stc
mov
aam
push
lods
stc
shlb
fs
divl
cmp
adc
jno,pt
arpl
and
fldt
mov
pop
test
test
sub
cltd
add
nop
lods
jecxz
popa
rol
xor
mov
stos
or
jne
aaa
in
fisubrl
stos
cld
shll
push
xor
popa
les
dec
loope
jg
insb
dec
lret
dec
cmp
push
jbe
cld
jnp
lsl
push
mov
or
scas
xchg
in
or
xchg
test
push
mov
fwait
xchg
inc
cmp
sub
sbb
int3
push
jg
adc
mov
mov
lret
xchg
fisttps
insb
fiadds
lret
mov
xor
aad
ss
hlt
data16
test
xchg
test
stos
and
lret
sub
mov
into
iret
inc
inc
leave
and
loop
and
sarb
inc
mov
mov
and
in
in
sbb
xchg
xchg
cld
or
sar
insb
cwtl
xchg
int
iret
movsb
and
inc
fwait
repz
aaa
xlat
mov
xor
jb
and
jns
or
xchg
mov
test
or
jae
push
sub
lret
aad
adc
cld
popf
sub
sub
xor
sub
xor
into
sbb
movsl
cmp
cmpsb
ror
push
mov
int3
mov
shll
je
jecxz
push
stc
sbb
out
push
movsl
sbb
mov
dec
mov
out
enter
sub
outsl
pop
xor
xchg
inc
cmpl
pop
push
gs
sbb
ljmp
and
imul
jae
or
nop
inc
or
jl
mov
nop
pop
xor
or
and
fs
scas
mov
das
mov
sbb
arpl
notb
and
dec
js
and
loope
xchg
pusha
insb
inc
or
mov
mov
ss
in
xchg
outsb
jmp
sar
jg
ds
repnz
fists
inc
rcll
mov
leave
pop
sub
enter
into
cmp
js
mov
mov
in
into
push
mov
pop
xchg
cmp
out
add
mull
ffreep
stc
cmp
cmp
inc
roll
pop
scas
cmp
xchg
add
xor
xchg
push
orb
addr16
loop
mov
mov
push
rclb
js
dec
and
or
into
test
sarl
outsl
or
cmp
mov
sub
jnp
lcall
notb
dec
mov
push
rolb
sbb
mov
test
or
std
add
out
icebp
mov
sub
dec
dec
adc
cmpsb
or
shlb
into
rorb
and
pusha
test
and
xlat
aas
push
mov
add
aam
cmp
sub
or
pop
adc
sbb
inc
cmp
ret
xor
sub
negl
and
pop
in
loopne
jge
mov
xor
test
add
mov
dec
into
push
inc
jg
or
das
xchg
orl
fstl
pop
daa
dec
jo
lods
iret
out
and
add
sbb
xchg
cmpsb
mov
dec
sub
mov
cli
cmpsl
std
xchg
inc
popf
and
dec
or
inc
clc
xlat
or
sbb
mov
adc
jo
xor
insl
nop
inc
jae
or
sbb
jmp
sub
ds
test
je
inc
pop
dec
pop
lods
pop
xlat
xor
and
cmp
xor
dec
adc
pop
or
mov
std
mov
out
negl
and
inc
movsb
dec
adc
cmpsb
in
mov
inc
mov
inc
clc
popa
add
clc
push
inc
pop
push
xchg
jb
pop
push
lods
imull
mov
sbb
roll
daa
mov
dec
fnstsw
jne
scas
lds
mov
xlat
rolb
pop
xor
pop
mov
xor
sub
jmp
jecxz
pop
mov
rcrl
bound
push
pop
jns
mov
adc
lea
imul
cmpsl
mov
xchg
mov
rol
clc
mov
les
jne
push
sbb
sbb
sub
cli
pop
das
mov
inc
mov
mov
inc
repnz
push
push
pushf
jle
mov
sub
and
dec
dec
andl
aaa
mov
daa
in
dec
mov
cwtl
adc
movsb
idiv
test
adc
inc
in
cmp
adc
adc
test
xchg
push
mov
fisubrl
ss
lret
je
dec
xchg
mov
loop
out
int
in
mov
xchg
int3
in
out
inc
mov
jae
arpl
in
pop
xor
ret
ljmp
or
jo
test
scas
sub
xchg
in
pop
outsl
popf
sub
movsl
pop
fsubrs
jne
jg
mov
fcmovnu
pop
imul
imul
mulb
sbb
mov
jmp
jbe
out
jbe
mov
or
xchg
jl
movsb
icebp
xor
fisttpl
shr
out
int3
lahf
cmpsl
movsb
dec
je
or
div
mov
outsb
pop
out
sbb
push
mov
and
shrb
mov
cbtw
jmp
mov
jl
adc
sub
lds
adc
xchg
ds
rcrl
jp
mov
cmp
sbb
cld
popf
push
addr16
pop
cmpl
jmp
sbb
rol
fcom
out
jns
sbb
sbb
lret
or
pop
rcll
mov
xchg
adc
mov
shr
lea
xor
out
repz
rcrb
mov
aad
adc
push
push
lods
or
pop
inc
inc
aam
jecxz
into
int3
gs
pusha
dec
jnp
jmp
cmp
cwtl
push
xchg
test
jmp
or
pop
adc
lret
inc
fsts
int3
loop
jb
out
dec
mov
jne
fwait
shll
pusha
push
sub
cmc
sub
xchg
xlat
inc
popa
gs
testb
fcomps
data16
adc
and
jb
scas
cmp
cmp
xchg
loopne
in
incl
lcall
inc
test
gs
enter
lcall
stos
pop
xchg
aad
sbb
mov
xchg
lret
imul
inc
addr16
sti
push
inc
inc
sbb
mov
testl
pop
gs
andb
jle
xchg
fdivrl
push
cmp
aaa
jo
and
movsl
jnp
lds
mov
add
rorb
enter
fstps
mov
ret
daa
jp
cmc
inc
jno
clc
call
pop
cmp
cmc
jge
pop
loope
es
movsb
and
pop
jl
icebp
ret
mov
jo
loop
ja
mov
push
repz
sub
pinsrw
xlat
andb
pop
mov
out
stc
jae
add
xchg
mov
jne
adc
cld
mov
mov
mov
adc
and
dec
and
push
add
pop
xchg
cltd
cli
jns
test
repnz
dec
in
mov
test
loope
jns
inc
popa
es
aad
add
cld
cmpb
add
lds
movl
into
push
int3
notb
sbb
inc
push
into
fld
push
mov
dec
pop
out
lcall
in
dec
sbb
rolb
mov
adc
push
sub
xor
adc
inc
enter
dec
movsl
cmc
xor
xchg
jl
cwtl
cmc
hlt
inc
adc
fnsave
lds
loop
jno
sarl
lds
ja
adcl
sbb
mov
fildl
inc
hlt
cmp
rolb
dec
aad
push
mov
int3
shlb
iret
push
and
and
push
fucomp
inc
pmaxsw
stos
out
inc
int3
xorb
test
ficomps
lock
push
mov
jo
jecxz
jge
jmp
pop
xchg
movl
rcrl
adc
movsb
gs
inc
add
aad
shll
cmp
mov
ljmp
lds
xorb
jg
dec
xchg
fsubs
or
push
bound
popa
mov
call
testb
rorb
in
out
jmp
pop
lret
sti
or
lods
scas
pop
add
dec
insb
fcompl
or
out
pop
leave
pop
push
inc
jno
push
push
xor
aas
push
stc
es
in
rolb
scas
push
divl
xor
cmp
xor
or
scas
fwait
and
inc
dec
mov
ret
adc
imul
shll
jns
xor
ret
cmp
cs
dec
aaa
std
ficomps
das
or
insl
cmp
mov
lods
aaa
fildll
push
jl
lods
jbe
mov
add
xchg
mov
jo
cmp
dec
or
cwtl
jbe
fucomi
pusha
inc
pusha
cmp
gs
aam
dec
test
clc
das
xchg
cmpsl
add
cmp
cmp
adc
inc
dec
daa
push
mov
cmp
sub
movups
jecxz
js
dec
inc
ds
imul
imul
mov
das
mov
stc
test
xchg
cmp
aas
test
idivb
sbb
rclb
mov
dec
mov
or
push
dec
sub
mov
xchg
repz
and
repz
push
cld
dec
jge
int3
pop
add
cmp
rolb
mulb
test
sbb
mov
pop
jge
pop
int
hlt
out
pop
push
mov
insb
js
mov
lds
sbb
xor
es
fisttps
jecxz
test
cs
push
lods
sarl
int3
push
push
add
in
out
bound
lds
dec
mov
cmp
jnp
aam
leave
movsb
shlb
ss
aas
imul
or
xchg
inc
cli
pop
int
pop
addr16
mov
pop
icebp
sbb
cmp
sub
xor
jle
sbb
inc
dec
gs
in
cmp
in
jns
insl
mov
push
imul
or
aam
cmpsl
mov
std
lahf
xlat
sarl
jnp
ss
push
fsin
push
adc
push
shlb
pop
cmp
pusha
lcall
mov
xchg
xchg
movsb
xorb
outsl
dec
mov
cmp
or
std
into
xchg
adc
popa
shll
sbb
sahf
inc
push
mov
xor
mov
lret
adc
ret
mov
pop
lods
mov
lds
sbb
mov
jge
movsb
sub
mov
mov
int3
ss
in
sbb
pop
nop
dec
jecxz
sub
push
stc
cmovb
mov
inc
mov
sub
mov
push
jl
mov
inc
push
sbb
mov
or
fsubs
xchg
mul
or
jns
cmp
sbb
mov
cmp
mov
fdiv
push
xchg
mov
lea
jg
pop
shl
pop
ds
test
lret
xor
xor
pop
jl
nop
jge
mov
add
mov
inc
push
mov
fcomps
js
in
and
aas
outsl
push
lods
xchg
hlt
sarl
loop
and
dec
inc
data16
pop
rol
nop
daa
es
into
pop
outsb
loopne
sub
inc
out
push
inc
lods
mov
inc
in
adcb
outsl
xchg
lea
es
rolb
mov
jmp
mov
mov
sub
cmp
popf
bnd
movsl
fldl
lock
mov
int3
mov
dec
pop
imul
mov
and
inc
nop
test
sbb
xchg
imul
push
sbb
es
sti
jl
mov
mov
aam
pop
ret
mov
add
add
test
xor
dec
das
jl
fs
mov
mov
push
int3
add
insl
std
push
adc
sbbb
lret
hlt
jmp
lea
sti
mov
mov
leave
lret
mov
xor
ja
mov
scas
jg
mov
fstp
loopne
loope
popa
or
mov
mov
inc
mov
aam
mov
xchg
mov
imul
pop
lret
cmp
push
aam
jp
outsl
or
inc
jo
icebp
aam
call
adc
mov
push
mov
repnz
push
cmp
xor
sub
mov
cmp
scas
divl
jns
aas
or
stos
imul
lahf
adc
xchg
pop
dec
sub
pop
fs
cmpl
jnp
rolb
orl
mov
iret
jo
test
movsl
stos
inc
int3
ret
shlb
pusha
pop
push
pop
inc
and
push
sub
mov
sbb
aas
movsl
lret
ret
stc
cld
mov
and
lahf
mov
sub
mov
stc
mov
inc
mov
imul
dec
cmc
jp
std
aam
insb
int3
fldcw
mov
loope
stos
jl
scas
mov
lock
sbb
and
out
jle
xor
lods
sub
enter
fwait
sub
pop
mov
out
fildl
leave
ja
mov
cmp
mov
push
cmp
push
js
std
adc
sbb
mov
sbb
xchg
or
into
test
sbb
dec
jne
jnp
inc
push
int3
mov
mov
and
or
es
ja
ja
mov
std
adc
add
hlt
and
inc
cld
fucomi
ret
sbb
or
movsl
adc
lods
scas
fdivl
sub
jnp
das
pusha
mov
or
sub
into
ret
ljmp
and
sbb
jecxz
mov
push
lret
stos
inc
flds
or
test
mov
mov
data16
fnstenv
dec
shrl
ret
inc
inc
enter
fcoms
add
lret
and
and
fnstsw
test
mov
xchg
out
dec
pushf
cs
daa
leave
in
cltd
dec
lods
sarb
rorl
and
fcoml
sub
test
pop
negb
push
fdivs
lret
cmp
add
cmp
pop
std
out
sbb
push
or
lret
imul
add
xor
mov
leave
sbb
cli
dec
inc
mov
cmp
pop
lcall
in
push
xchg
stos
les
jbe
mov
inc
out
and
or
mov
push
dec
mov
das
jne,pn
popf
stos
xor
dec
jp
mov
mov
jae
pusha
cmp
xor
mov
mov
cmp
cmp
add
imul
loopne
adc
mov
lods
inc
ljmp
mov
xchg
jge
sbb
repnz
cmp
add
dec
cmpl
shll
jmp
pop
lcall
dec
mov
mov
or
push
mov
adc
cs
jle
insl
add
inc
dec
movsl
lea
add
clc
mov
jecxz
in
daa
mov
add
cli
mov
addb
push
add
add
jmp
mov
adc
cmpsl
jmp
int3
mov
lock
pop
pop
jmp
mov
xor
dec
call
test
repnz
xchg
js
jo
into
adcl
cmp
dec
cmp
out
cmp
adc
out
xlat
outsl
dec
sub
lret
mov
cmp
loope
jmp
scas
pop
pop
inc
out
lret
sub
push
pop
stc
bound
push
add
imul
xchg
inc
mov
in
fdivp
testl
jp
std
rcrb
sbb
rcrl
ja
bound
adc
jno
repz
and
and
sub
pop
xor
ljmp
pop
mov
cmp
sub
imul
cwtl
xor
lea
xchg
mov
inc
sub
test
push
cs
xchg
and
and
rorl
ret
mov
add
hlt
test
or
xor
jmp
mov
hlt
out
lds
sti
iret
test
mov
sbb
cmpb
cld
int
cmp
or
jle
fdivrp
push
dec
popf
dec
cmp
and
push
cwtl
les
lock
xor
cmp
stos
dec
cmp
add
sub
cmp
xor
rcl
stos
fstpt
sarb
and
lods
or
add
lret
pop
mov
sub
cmp
ljmp
mov
icebp
in
movsb
xchg
push
mov
or
cli
xor
flds
out
mov
testl
and
jle
add
sbb
push
cmp
mov
mov
mov
ljmp
pop
ja
insl
inc
in
or
movsl
mov
cmp
fisubs
clc
dec
out
fldcw
mov
repz
xchg
push
jl
or
jp
push
div
xor
pop
push
inc
pop
int3
insl
add
and
je
xlat
movsb
fcoms
int
cwtl
idivl
fdivs
int3
mov
add
sub
fidivrl
lret
push
sbb
cs
fsubl
movq
hlt
out
arpl
add
lret
xchg
hlt
push
mov
mov
dec
jb
cmpb
sub
add
into
andb
fcom
jnp
test
dec
pop
push
add
mov
or
jbe
push
cmp
cs
sbb
dec
xchg
insl
aad
or
cmp
and
aaa
xchg
mov
stc
pop
mov
lods
xlat
fimuls
cmp
inc
into
xor
stc
cli
xlat
arpl
aaa
sbb
or
enter
ficoms
adc
mov
adc
pop
xor
out
cltd
fdivl
lahf
xor
loope
lods
add
jne
mov
outsl
pop
xchg
sti
jo
imul
mov
sub
movsl
xchg
jmp
orb
inc
je
out
stos
jnp
lret
jmp
pushf
push
lahf
push
jle
cld
fdivl
push
mov
pop
mov
inc
push
stos
inc
add
fsubrs
lds
mov
or
sub
push
push
cmp
aas
dec
imul
pop
pop
loope
dec
xchg
pop
out
lret
lods
in
daa
dec
dec
std
ret
jns
sbbl
xchg
in
add
jmp
imul
cli
stos
rcrb
adc
mov
nop
dec
jne
and
pop
jns
sbb
add
pusha
stos
sbb
pop
loop
popa
add
cmc
jg
and
add
pop
sbb
insb
cmp
iret
fs
orb
push
jmp
pop
test
mov
jae
mov
mov
fs
adc
movsb
xchg
lahf
inc
cwtl
pop
push
mov
inc
inc
sbb
sub
sub
jl
pop
add
enter
adc
mov
sbb
dec
fistpll
push
icebp
adc
dec
cwtl
cmp
loope
lret
mov
ds
inc
int3
adc
jge
push
addr16
push
push
push
popf
cld
jmp
adc
jne
xchg
inc
xchg
popf
jns
inc
jne
lods
lods
sbb
jo
xor
or
jp
mov
testl
mov
mov
push
push
jno
divb
jbe
sub
popf
mov
cld
fs
xlat
or
loope
lcall
push
fs
push
push
cwtl
test
repz
movsl
push
pop
mov
sti
insl
fdivrl
stos
div
xchg
xor
jmp
insb
inc
lods
cmpsl
adc
sub
sti
jl
aaa
dec
fisubl
cmc
lcall
xor
mov
mov
pop
add
lods
add
jmp
push
mov
jg
test
mov
insb
xor
ret
andl
in
sbb
cmp
jg
cmovae
adc
loop
sub
gs
pop
push
insb
xchg
fidivrl
andb
and
sbb
sbb
add
jnp
setns
pop
dec
or
and
data16
ss
fistps
int
mov
fimuls
fsub
pop
inc
mov
push
jo
test
jp
movsb
cli
int3
and
dec
xchg
jae
movsb
sub
into
rorl
push
stos
xor
or
push
cmp
cmc
icebp
data16
jnp
shr
les
push
btcl
aaa
mov
inc
pop
xor
je
mov
xor
push
imul
pop
xchg
and
mov
fmuls
jo
cmp
in
mov
das
jl
cltd
and
fs
imulb
cmp
jl
inc
mov
outsb
jl
lret
pop
pop
jne
std
sub
inc
add
cwtl
test
pop
mov
es
pop
jl
sahf
add
loopne
ror
push
mov
std
lock
cmpsb
ljmp
pop
sbb
inc
aad
cmp
push
call
test
int
insb
jl
aas
sub
jl
dec
stc
push
adc
mov
and
cmp
xorl
sub
mov
dec
clc
xchg
aad
mov
jne
xor
test
push
sbb
insl
ret
sti
xchg
inc
mov
shll
lods
lret
inc
push
xor
test
push
call
scas
and
outsl
xor
xor
insb
add
cmp
and
cld
out
or
sbb
addr16
into
fildl
jle
lcall
cmp
or
repnz
or
jnp
xor
repnz
or
sub
xchg
out
mov
enter
pushf
pop
loopne
or
cmp
cli
pop
adc
pop
push
stc
cmp
push
fistps
cltd
dec
cli
jecxz
mov
sar
jp
xchg
inc
cmpsb
pop
pushf
lret
clc
fwait
dec
int
sub
rorb
jbe
mov
pop
push
xor
mov
call
mov
shlb
mov
push
and
xchg
ja
cmpb
mov
or
shrb
cmp
ret
cmovl
sbb
aas
and
inc
ret
lret
test
pop
dec
or
xor
lret
es
scas
sahf
mov
out
adc
add
out
dec
xchg
dec
aas
lret
xchg
aam
fnsave
out
stos
and
cld
push
lea
mov
popf
fnstcw
or
add
jne
sbb
and
stos
sub
mov
pop
xor
mov
insl
cmp
mov
int3
inc
or
adc
xchg
adcb
mov
in
sub
sahf
ds
popf
cwtl
out
out
or
call
cmp
test
sub
insb
pop
out
icebp
fs
mov
lods
dec
xor
xor
cmc
into
xchg
ret
int
or
call
iret
jae
insb
insb
and
xor
out
subl
pop
lods
fsubl
push
or
aam
push
pop
xor
out
mov
roll
jl
xchg
addl
mov
data16
cld
jmp
or
adc
testb
add
pop
mov
pop
xchg
adc
rcrl
into
in
xor
into
mov
mov
xchg
cmp
mov
inc
ss
jne
outsb
cmp
ss
imul
add
ja
sbb
cmpsl
xchg
cmpsl
cmp
mov
dec
dec
movsl
cld
add
test
rcrb
std
mov
cmp
mov
mov
pop
cmpb
call
cmp
jo
mov
pop
cmp
mov
xor
rcr
xor
movsb
loop
push
adc
pushf
xor
xchg
cli
cmpsb
or
inc
push
out
cli
lret
out
aas
pop
sbb
iret
xor
rcll
inc
jg
inc
xchg
cmp
out
test
dec
shrl
bnd
into
xor
imul
mov
mov
rsm
and
and
arpl
mov
dec
mov
dec
outsl
mov
xor
jo
cli
orb
mov
xchg
adc
mov
sarl
fs
push
jmp
and
adc
popf
jecxz
out
xchg
adc
and
mov
pusha
aad
das
mov
lcall
xchg
mov
rcrl
xchg
sbb
or
aam
cmpsb
or
arpl
adc
fdivrs
adc
mov
or
push
out
mov
jp
fcompl
adc
test
pushf
paddq
lahf
cli
sbb
popa
ret
xor
cs
dec
push
in
mov
dec
mov
int3
dec
icebp
mov
das
pop
dec
sbb
out
js
and
push
cmc
mov
enter
add
sbb
lea
sbb
sub
movb
pop
lods
adc
stos
sbb
jl
pop
mov
popa
cli
std
inc
jge
aam
insl
lcall
pop
ret
es
cmc
cmpsl
out
subb
movsl
movzwl
rcrb
andl
cld
or
lea
les
jnp
paddusb
xchg
push
mov
mov
mov
inc
adc
mov
xor
pushf
test
cmp
lock
loope
int
outsl
pop
insl
adc
xchg
mov
mov
xchg
mov
xchg
xlat
xchg
int
arpl
sti
sbb
or
into
jno
int
mov
lahf
ljmp
dec
lret
push
aaa
out
orb
inc
out
mov
dec
add
xor
ss
mov
sti
and
repnz
sahf
dec
cmp
testl
push
add
jns
push
push
dec
daa
lret
inc
out
insb
dec
xor
mov
scas
mov
fbstp
and
or
call
ret
fmul
and
or
sub
daa
lret
sub
stc
inc
pop
dec
dec
mov
lret
mov
add
sarb
inc
add
or
adc
xchg
iret
movsl
sub
xchg
xchg
and
aas
push
dec
mov
js
push
aam
adcb
lea
mov
dec
mov
pop
xor
nop
fwait
dec
and
lcall
mov
pop
inc
jo
pop
xor
out
pop
jns
xchg
pusha
mov
inc
lods
push
in
jge
jle
mov
lret
push
int3
inc
pop
in
dec
mov
mov
mov
shl
mov
pop
repnz
nop
stos
setge
cmpsb
pop
cmp
xchg
unpckhps
sbb
jae
in
jns
mov
out
loope
lods
mov
mov
mov
jae
lahf
enter
adcl
dec
loope
inc
jl
mov
sbb
mov
mov
addr16
leave
dec
mov
jmp
movsb
mov
and
mov
mov
aad
outsb
adc
int
jnp
in
jmp
inc
popa
cmc
lods
pop
scas
sbb
push
push
sbb
sub
add
mov
sub
in
lea
cwtl
or
xchg
mov
lret
inc
push
pop
jp
cs
das
jne
incl
jp
mov
aam
fucomip
shr
dec
dec
fcoml
loop
test
fadds
gs
rorl
sub
adc
in
lret
mov
mov
xchg
xchg
cltd
push
add
mov
movsb
dec
sarl
mov
addb
movsb
out
sbb
mov
fdivrp
cmp
mov
loopne
adc
stos
test
jecxz
stos
pop
insb
xor
and
jb
insb
push
add
sub
lret
mov
mov
icebp
test
mov
lret
mov
jno
jb
push
stc
jg
adc
popa
jecxz
jnp
scas
mov
xor
sub
gs
popf
sub
cltd
stc
inc
and
mov
leave
jae
addb
subl
fsubs
addr16
ret
push
std
ss
inc
bound
jp
dec
movsb
test
es
mov
or
xchg
cmpsb
and
pop
jmp
xor
push
push
rorl
jg
sbb
mov
mov
sub
sub
nop
lret
and
inc
and
cltd
xor
and
and
inc
adc
adc
pop
mov
push
loope
mov
inc
popa
sahf
adc
cmp
adc
cmpl
mov
and
xchg
xor
or
mov
mov
sub
lds
jbe
jnp
xor
sbb
movsl
or
add
rcrl
adc
hlt
out
push
dec
mov
sti
xchg
push
cmp
dec
les
add
cmc
ds
add
cli
cmp
stc
lahf
mov
and
cmp
test
xor
sbb
rcll
in
fisttpl
stos
sahf
cmp
jne
jb
addr16
inc
int
add
fcmovnb
push
in
lret
push
popf
or
sbb
mov
lahf
loopne
mov
jnp
aas
dec
stos
insl
int3
xchg
stc
dec
imul
scas
stos
mov
pop
in
cmp
imul
dec
jmp
bound
aas
push
mov
mov
dec
adc
xor
push
mov
mov
and
mov
mov
jne
pop
in
mov
jge
test
rcr
and
push
add
mov
enter
jbe
fwait
push
dec
and
add
push
pcmpgtd
cmp
sbb
inc
arpl
enter
call
out
mov
push
fcomps
sahf
int3
cmp
lock
addr16
push
jle
arpl
sti
sahf
and
scas
clc
dec
mov
xchg
inc
inc
mov
test
push
div
rclb
or
ljmp
and
cmpsb
or
jl
lods
movsb
and
sti
adc
mov
ljmp
mov
pop
fldt
data16
lret
sub
pop
mov
jae
mov
dec
mov
out
test
sbb
movsl
mov
mov
addr16
and
test
lods
cld
fsubr
mov
out
pop
nop
pop
mov
cli
xor
push
inc
add
and
push
ljmp
mov
iret
cmc
std
js
in
into
mov
std
adc
mov
lods
neg
xor
push
and
jb
dec
pop
push
iret
xchg
pop
mov
cmp
addr16
mov
mov
mov
add
xor
push
jne
or
adc
push
icebp
push
in
int3
not
add
lret
jbe
sbb
ds
mov
sub
jae
push
lcall
sub
mov
sbb
fisttps
jne
stos
imul
in
icebp
sbb
sub
or
ret
aaa
cmp
clc
cvtdq2ps
aas
mov
cmp
gs
ret
cmp
into
pop
and
dec
cmp
fnstsw
sub
stos
in
cs
xchg
mov
stos
pop
mov
sub
call
and
mov
jecxz
sbb
repz
es
cmc
out
xor
xchg
mov
and
mov
and
dec
fisttpll
dec
push
xchg
push
xchg
sbb
inc
xchg
out
sbb
jae
jnp
sbb
hlt
ret
mov
pop
xchg
and
lret
sbb
out
mov
pop
sub
mov
stos
and
outsl
dec
ss
mov
cmp
mov
cmp
jecxz
stos
jge
in
aas
jno
cmp
divps
into
adc
ret
mov
call
das
fsubrl
sbb
pushf
lods
adcl
adc
jecxz
popa
jb
mov
ja
push
arpl
sub
push
repnz
sub
mov
xchg
mov
xor
js
js
test
sbb
into
push
insl
mov
fsub
sub
adc
scas
mov
cmp
push
fildll
out
loopne
push
jmp
mov
rorb
repnz
cmc
iret
push
cmpsb
mov
shlb
inc
pushf
mov
inc
push
cmp
repz
fmuls
inc
adc
xorb
fdivrl
idiv
push
add
mov
mov
push
inc
fucom
pop
leave
xlat
in
inc
fcmovnb
enter
negl
and
mov
ja
inc
arpl
jge
aam
and
iret
cmpsb
and
mov
inc
cld
mov
or
pop
mov
ss
xchg
push
stc
and
stos
test
into
xor
mov
orl
ds
hlt
pop
lcall
loop
outsl
inc
add
fdivr
and
leave
mov
rcl
or
movaps
adc
mov
sub
fwait
cld
mov
adc
out
rorl
xchg
pop
mov
inc
cmp
stc
dec
sub
adcb
mov
test
add
mov
inc
sahf
mov
pop
pop
pusha
sbb
xor
cmp
es
mov
leave
sub
lods
sub
sbb
mov
das
sub
push
arpl
xchg
lods
mov
in
jno
adc
fsubl
dec
mov
hlt
shlb
xchg
subb
leave
sbb
mov
lcall
inc
ja
enter
fdivl
sub
jle
addl
fwait
inc
movsb
icebp
xlat
test
pop
and
pop
inc
inc
dec
pop
push
loop
cmpsb
rcrb
add
shlb
lods
inc
fstpt
ljmp
orl
xchg
ds
loope
xor
fxch
loop
fdivrs
test
cmp
add
in
ljmp
jl
loope
xchg
scas
xor
ja
pop
fcomp
mov
jg
decb
cld
pop
cltd
xchg
loope
add
fidivl
xor
push
outsb
mov
mov
push
stc
adc
mov
bound
lret
fldenv
inc
inc
pop
sbb
jle
insl
and
mov
dec
pusha
jnp
lock
aas
jns
into
mov
add
cmpsb
pop
adc
jecxz
fistps
sub
mov
shll
pop
pushf
xor
pop
fidivl
arpl
push
mov
mov
add
das
js
fdivrl
pop
outsl
push
aad
mov
outsb
add
mov
push
fdiv
insl
mov
popa
mov
jmp
mov
mov
popa
inc
adc
into
inc
adcl
shlb
jmp
dec
push
fsubr
adc
and
or
test
push
sbb
and
mov
cwtl
lret
mov
into
cmp
aad
sbb
fsubs
jg
or
outsl
stos
xor
push
and
pusha
adcb
add
sahf
inc
in
ja
and
dec
inc
push
movsb
inc
xlat
int3
stos
orb
sub
or
int
pop
cs
out
outsl
loope
adc
lret
fnstcw
xchg
and
lock
jmp
lcall
dec
jle
fsubrl
out
cmp
jp
pop
dec
adc
nop
jmp
stos
cmpsb
and
and
or
mov
push
xor
fucomip
push
or
fdiv
outsb
scas
in
pop
pusha
inc
or
clc
test
stos
or
fistpl
jmp
xor
cmp
xchg
or
add
icebp
lcall
xchg
data16
sbb
dec
xchg
sbb
and
pop
xor
xor
cmp
adc
mov
pmaxub
add
out
arpl
cmp
jae
xchg
pop
fiaddl
mov
or
sub
xchg
test
ret
pop
aas
or
stos
insb
aam
xlat
dec
stc
pop
sbb
xbegin
mov
cmpsb
cmc
xchg
ret
mov
mov
mov
jb
cld
and
dec
xor
pushl
sbbl
cltd
sub
leave
sub
sbb
jl
jo
inc
and
aam
pop
mov
lods
mov
inc
lea
jge
enter
les
mov
test
in
cmp
add
sbb
inc
cmp
xchg
fdivrl
pop
fmuls
movsl
lcall
dec
sub
aam
cmpsl
xchg
sub
das
stos
push
ljmp
xchg
jg,pn
orl
imul
stos
mov
jg
add
leave
push
comiss
inc
push
cmp
pop
mov
mov
mov
repnz
mov
cs
lock
cmpb
adc
into
mov
iret
push
xor
clc
sub
cltd
pop
mov
fcompl
pop
cs
dec
scas
test
and
jo
adc
in
out
sub
imull
xor
mov
lock
mov
cmp
nop
jnp
fnstenv
push
leave
pushf
or
sbb
lea
adc
repnz
xchg
jb
cltd
ret
scas
and
xor
push
fadd
fistl
xor
push
movb
rcrl
loop
ret
scas
push
add
cmp
das
adc
arpl
out
in
stc
adc
sub
xchg
lock
and
push
mov
nop
mov
sbb
or
xchg
and
filds
fstp
push
cmpsb
sbb
scas
pop
sbb
push
push
inc
cmp
ljmp
pop
push
mov
mov
in
push
cmp
rcll
lds
cmp
sti
pop
sub
fsubs
sbb
mov
sbb
cmc
or
pop
fwait
xor
cmp
sbb
add
test
les
addr16
add
dec
sahf
and
lret
bound
jmp
sahf
jae
pop
cld
ficomps
sbb
popf
xor
adc
jmp
xchg
leave
mov
js
test
dec
dec
ficoms
aam
sbb
sub
aaa
dec
xchg
adc
clc
sub
push
cmp
push
inc
test
aad
xchg
jb
and
sbb
mov
test
fld
mov
test
subb
inc
aad
scas
cltd
test
jb
sbb
and
ds
xor
test
jne
test
clc
mov
inc
pop
and
and
push
ds
dec
sarb
mov
sbb
jbe
fbstp
js
subl
outsb
movsl
pop
pop
shlb
aas
movb
add
mov
ficompl
mov
mov
cs
imul
divl
pop
outsl
stos
xchg
cmp
jp
mov
adc
in
or
xlat
pop
insb
fistpl
sub
out
es
ljmp
dec
test
adc
rcll
mov
cmp
inc
xlat
adc
test
cltd
push
dec
xor
ret
js
push
shlb
add
sub
sub
sbb
add
mov
xchg
cmove
aas
rcrl
repz
scas
out
scas
add
pop
push
addr16
aaa
xchg
js
cld
gs
xor
sahf
pushf
or
adc
push
adc
lret
into
shll
scas
sbb
push
pop
mov
push
push
dec
mov
xor
and
pop
mov
insl
push
decb
cltd
insb
mov
jecxz
pop
scas
cmp
and
pop
dec
inc
scas
pop
mov
jo
test
lret
rcrl
int
mov
cli
orb
lret
xlat
popf
fsubrp
dec
pop
pop
xor
cmp
mov
mov
mov
adc
bnd
cmp
nopl
and
ja
pop
int3
cmpsb
inc
scas
push
das
xchg
rorl
movsl
add
inc
mov
rcll
xor
jp
xor
daa
inc
out
nop
hlt
xor
or
xchg
and
sbb
cld
sti
push
dec
loope
in
sti
sub
popa
push
push
inc
fwait
lret
ficoms
andb
push
dec
jne
mov
cwtl
mov
mov
movsb
dec
sbbl
mov
aaa
loopne
mov
lcall
out
add
pop
fs
inc
ja
or
push
cmc
or
loop
pushf
std
cmpsb
dec
jns
push
and
inc
sub
sbb
inc
rorl
cltd
pop
mov
int
in
daa
fsts
cmpsb
cmp
jne
in
sbbb
or
add
cmp
test
arpl
xor
fildl
push
fistpll
mov
repnz
add
insb
xchg
scas
cmp
cmp
test
shl
or
aam
test
in
sub
push
test
sarl
sar
xchg
push
inc
inc
push
fistpl
test
mov
fcomps
scas
loop
adcb
dec
sbb
call
add
adc
fwait
sbb
fs
push
jb
sub
loope
scas
and
test
enter
cmp
dec
aas
pop
scas
dec
ret
imul
cmp
fidivs
scas
adc
mov
orb
cltd
lock
rcrb
orb
lea
stos
mov
push
cmp
mov
push
xor
fiadds
aad
cmp
sahf
jge
loop
push
xchg
arpl
mov
jae
out
aad
test
cwtl
xor
addr16
sub
adc
push
mov
stos
cmpsl
sbb
sub
mov
loope
lahf
stos
out
sbb
js,pt
loope
sbb
ret
xchg
pop
repz
dec
rcr
mov
fwait
xchg
hlt
cmp
aad
xchg
cmp
sub
adc
mov
xchg
sub
and
outsl
mov
mov
in
push
icebp
ljmp
xchg
or
inc
cs
unpckhps
xchg
push
and
mov
lea
jae
lock
cmp
xor
data16
xchg
aad
adc
ret
mov
int
dec
fisttpl
roll
sahf
lea
sbb
mov
fmull
pop
push
negl
push
les
xor
adc
mov
test
add
push
mov
add
ss
in
aam
cs
ss
push
sbb
in
push
inc
adcl
pop
fucomp
lret
add
mov
push
aam
add
xchg
push
add
mov
fucomp
or
aam
inc
or
cmp
daa
lods
or
adc
and
sub
mov
movsb
push
add
popf
lea
xor
push
fcoms
xchg
popf
sbb
repnz
dec
jle
pushf
shll
or
sbb
dec
add
and
mov
jb
dec
enter
inc
out
jae
mov
sbb
mov
iret
lods
mov
mov
inc
out
dec
dec
negl
in
shll
pop
lds
jne
cltd
jne
cmpb
clc
jmp
jmp
call
sub
fldl
les
mov
rolb
in
repnz
mov
cli
fidivrs
inc
xchg
push
das
jge
sub
lock
cs
jp
lret
mov
outsl
fwait
dec
imull
in
stos
push
insl
rcl
dec
rcrl
outsl
pop
sbb
lahf
daa
in
ret
int
ja
ljmp
push
aad
into
mov
test
pop
jne
jecxz
into
scas
cmp
stos
jne
and
jl
ss
testl
mov
mov
push
sub
or
loopne
inc
je
xor
aaa
sub
test
jl
or
push
jae
jecxz
lock
repnz
scas
test
cwtl
dec
mov
xchg
loope
adc
in
jg
dec
sbb
pop
dec
aam
sub
shlb
xor
int3
shll
ds
sub
xchg
pop
sbb
jle
aam
sbbb
adc
aam
inc
ss
daa
loop
je
push
push
mov
in
sahf
adc
lcall
xchg
mov
mov
lcall
pop
jmp
cmp
pop
addb
pop
enter
push
pop
aad
mov
es
sub
popa
aaa
push
sbb
adc
adc
xor
into
jl
mov
dec
push
pop
cwtl
jno
fcmovnb
mov
xor
out
add
bound
outsb
inc
outsl
repz
or
mov
lea
mov
stc
mov
inc
clc
dec
aam
fbld
cld
in
inc
sbb
push
sub
fs
add
sti
stc
cmp
bound
sbb
dec
lds
imul
add
jae
add
push
push
loop
push
mov
push
in
jnp
mov
negl
dec
in
aam
in
mov
push
mov
pop
sbb
mov
push
pop
in
xchg
mov
add
xchg
loope
ret
mov
xchg
sub
mov
jnp
insb
add
push
lret
cmp
es
repnz
in
or
mov
rol
imul
mov
jmp
fisubrs
ja
cltd
fcoml
xchg
lret
add
push
pop
jae
jb
jb
jl
xor
xlat
pop
mov
sbb
fsubr
cmp
cmpsb
mov
jp
fsubrs
mov
add
imul
insb
dec
push
rcrl
clc
mov
and
lret
pop
idivb
mov
fiaddl
jl
pop
and
je
nop
negb
xor
in
add
and
lods
cld
xchg
cmpsl
mov
xchg
rclb
sbb
js
adc
inc
das
sbb
jle
push
mov
loope
push
cmp
inc
and
loopne
cld
mov
popa
jge
sarl
sti
shll
or
inc
test
cmp
stos
xchg
nop
inc
mov
jle
pop
push
lods
xor
pop
das
mov
push
das
loope
jp
adc
shll
mov
pop
rcrb
dec
fcoml
imul
ss
rcr
push
push
pop
xor
pop
xchg
or
loop
jle
xor
scas
pushf
cmp
fidivs
push
dec
cmpsl
xchg
push
adc
popa
mov
and
js
std
adc
jmp
sub
mov
sahf
cmp
pop
mov
test
loope
xor
mov
aam
inc
or
jecxz
data16
sub
jb
int
fwait
push
mov
out
add
sbb
imul
popf
cmp
sahf
push
inc
xchg
mov
add
out
sarb
mov
pop
into
test
insl
and
pop
add
call
xchg
push
xchg
mov
xchg
sbb
jnp
push
and
iret
or
aas
and
out
sahf
pshufw
pop
cwtl
cmp
mov
sarb
loopne
sti
shlb
mov
nop
out
and
push
sahf
leave
insl
mov
inc
les
shr
inc
xchg
mov
leave
mov
arpl
jp
mov
loopne
jp
sbb
inc
push
add
cltd
dec
add
sahf
xor
push
pop
inc
mov
mov
mov
aad
mov
jle
jo
cmc
pop
adc
inc
rdseed
aaa
pop
sti
pop
pop
hlt
idivb
insl
lret
xchg
fwait
sub
pop
bound
lret
push
sbb
push
dec
mov
adcl
test
xor
cld
jae
sahf
mov
mov
leave
mov
add
xchg
insb
jnp
xchg
out
out
in
shll
shll
cmp
mov
in
ror
sbb
movsl
arpl
jo
xchg
pop
and
dec
and
lea
cli
cli
and
ss
std
imul
sbb
imul
loop
fidivrl
cltd
dec
negb
lret
stc
clc
rorb
xor
popa
pop
jne
adc
dec
ljmp
xor
and
andl
stc
movb
adc
outsb
icebp
cli
or
xchg
jae
in
and
cmp
cld
lds
shrb
js
ret
fbstp
ds
insl
pop
fists
push
dec
mov
lds
jmp
shrb
sbb
cmp
adc
sbb
loopne
add
cltd
ljmp
leave
stc
subb
hlt
push
add
shrb
push
push
lods
mov
mov
xor
cmpsl
jns
mov
xor
cmpsl
lock
filds
xor
shlb
pop
or
ss
dec
and
pop
jbe
add
adc
in
fnstsw
mov
repz
add
or
sbb
cmp
lret
movsl
daa
jnp
mov
or
ret
dec
adc
and
cmp
or
mov
jp
or
push
cmc
or
inc
in
mov
push
test
adc
jne
adc
movsl
cwtl
adc
pop
lods
test
jg
pop
lcall
push
enter
cld
ficoml
and
add
lea
fnstcw
ss
clc
xchg
jp,pn
lcall
xchg
adc
dec
pop
jno
frstor
stc
inc
inc
push
jbe
loopne
lds
loope
jbe
gs
addl
xor
das
jmp
frstor
add
enter
outsb
pop
fbld
jp
jge
mov
lahf
aaa
jg
push
fstpl
fldenv
add
fstl
lods
or
pop
jecxz
cmp
add
movsb
in
push
fiadds
jg
mov
and
cld
pop
lret
pushf
mov
popf
pop
inc
jbe,pn
pushf
mov
out
cmp
pusha
mov
lods
and
icebp
fisubrs
adc
pop
movsl
stos
and
lahf
mov
dec
movsb
rcr
aam
lea
test
mov
popf
popa
jo
rorb
cmpsl
out
lock
sbb
add
cs
js
mov
and
mov
outsb
add
mov
xchg
in
cwtl
lahf
cmp
pop
inc
in
jmp
fs
pop
dec
sarl
scas
std
xor
jecxz
or
data16
lret
lahf
aad
ret
push
les
pop
or
mov
notb
mov
push
sbbb
mulb
outsl
ret
jge
sar
into
aaa
imul
stc
mov
aas
aad
mov
test
and
rolb
out
push
mov
jmp
jle
inc
into
push
daa
shrb
dec
stos
push
sub
decb
jns
mov
cmp
scas
add
jge
cmp
pop
xchg
pop
scas
or
sbb
lret
nop
add
cmpsb
cmpsl
and
xchg
adc
pop
loop
stos
imul
pushf
add
adc
lods
andb
push
std
fisubl
jp
ret
push
mov
pop
cmpsb
or
pushf
ljmp
dec
push
ss
mov
xchg
bound
jno
mov
out
scas
xor
in
pop
jb
popl
int
jno
test
andb
inc
jg
out
cld
mov
xor
and
and
pop
jle
push
idiv
sbb
inc
ror
and
xlat
loopne
dec
ss
jmp
clc
loopne
mov
test
push
in
test
pop
and
loope
jae
push
xor
pop
or
shll
clc
out
in
pop
arpl
stos
jmp
enter
mov
std
xchg
push
lcall
addb
inc
sub
jp
mov
rclb
addr16
and
arpl
mov
out
int3
rcr
popf
sbb
mov
in
repz
ret
jo
insb
pop
mov
or
jno
add
jmp
pop
jecxz
adc
xor
jmp
mov
mov
pop
push
jno
pop
xchg
jo
push
xorb
lret
test
cltd
aam
mov
fsts
adc
sub
push
or
shll
adc
mov
or
daa
push
mov
addr16
mov
mov
xor
jns
test
icebp
inc
rolb
movsb
inc
push
xorb
inc
js
jle
pop
cld
dec
or
and
or
pop
push
gs
pop
sahf
cmp
adc
mov
jmp
and
ret
fucom
iret
pop
and
push
inc
lea
jno
daa
dec
add
stos
xchg
fists
loop
aaa
jnp
mov
inc
insl
mov
adc
mov
xchg
jmp
adc
and
dec
mov
cmp
inc
add
mov
stos
lret
xor
sub
push
pop
add
xchg
iret
ret
and
sub
movb
cltd
fisubrl
jae
xchg
inc
mov
mov
sti
int
xor
xchg
add
mov
xchg
adc
mov
pop
adc
xor
and
sub
inc
sbb
sub
push
jns
insb
mov
jp
fsubr
jmp
loop
lret
ret
cmpsl
dec
mov
pop
cli
imul
xchg
mov
das
imul
push
dec
adc
push
pop
mov
fildll
fisubrs
imul
push
aas
xchg
adc
imul
add
sbb
push
adc
in
xor
lahf
cmpsl
fs
inc
jg
lock
sbb
add
imul
leave
lea
in
repz
shll
xchg
out
fcoms
clc
cmp
mov
push
sub
lods
pushf
mov
aaa
lods
mull
add
icebp
rclb
adc
xchg
outsb
aas
scas
clc
sbb
mov
stos
mov
fstpt
lcall
dec
fistl
sbb
pop
xchg
jecxz
cmp
stos
mov
call
inc
dec
subl
outsl
or
in
mov
xchg
xchg
test
fstl
lods
scas
jne
mov
mov
cmp
inc
ret
mov
sti
jnp
xchg
fidivs
xchg
stos
aas
call
push
adc
xor
mov
push
or
jne
mov
orl
dec
ss
pop
test
stos
push
imulb
cs
cmp
shll
in
out
out
xor
aas
mov
dec
or
xor
out
jg
mov
arpl
or
or
add
in
sbb
jge
mov
xchg
adc
inc
and
adc
cmp
insb
pop
invd
jp
pop
fstps
popf
out
cmp
scas
or
test
pop
hlt
out
jmp
cmp
nop
ret
or
cli
shlb
pop
xchg
into
movsb
sbb
leave
jle
faddl
dec
xor
xchg
jmp
xor
push
push
pusha
sbb
adc
xor
sub
or
in
enter
and
repnz
ss
xchg
aam
aam
imul
std
sbb
jae
out
aaa
push
push
mov
shlb
fs
mov
cmp
repz
pop
dec
mov
mull
or
mov
stos
fnstsw
xchg
push
daa
shl
dec
dec
cmp
and
dec
cmp
jge
cmp
mov
xchg
push
mov
clc
fisubrl
call
ret
cmp
rcl
flds
test
inc
divl
int3
sarb
loopne
xchg
fsincos
ret
ss
rcll
inc
mov
and
pop
fcoms
stc
lods
in
leave
pop
add
mov
popa
call
and
shlb
and
fwait
btcl
cmp
hlt
loopne
lea
inc
sbb
push
out
dec
clc
inc
mov
ljmp
ss
adc
add
xor
mov
data16
popa
repnz
and
jle
jno
jmp
mov
rorl
ret
imul
push
dec
cmp
movsl
or
and
pop
repnz
xor
rorl
ds
sub
sbb
push
call
and
iret
jb
dec
jns
mov
cmp
movsl
movsb
pop
push
pushaw
out
cld
xchg
sub
je
ds
mov
mov
adc
jo
mov
mov
xor
mov
scas
in
sbb
stc
data16
imul
xchg
repz
rorb
dec
adc
je
arpl
dec
cmp
mov
mov
lea
imul
iret
enter
push
nop
pop
xlat
ret
clc
mov
mov
jb
pop
push
push
cli
fsub
dec
sti
pop
pop
shr
jp
mov
xchg
lahf
dec
push
dec
xchg
flds
dec
sub
sbb
jno
mov
pop
sbb
pop
push
ljmp
pop
dec
test
daa
or
pop
push
adc
adc
filds
shll
jp
daa
jmp
sti
int3
mov
push
sub
fisubl
inc
pop
popa
mov
mov
mov
mov
pop
and
movsl
arpl
inc
xor
in
movsl
mov
push
inc
inc
cmc
xchg
in
enter
cmpsl
popf
add
mov
sbb
xor
dec
mov
enter
les
cmp
xchg
dec
adcl
mov
int3
cmp
or
mov
mov
push
das
push
and
jb
leave
loop
jmp
mov
sahf
shll
inc
pusha
cmp
popf
jl
jbe
mov
mov
addr16
add
ljmp
roll
fadds
or
jmp
inc
mov
scas
push
call
cmp
imul
xchg
pop
pop
iret
adcl
pop
sbbb
fsubs
pop
jns
xchg
call
dec
sbb
mov
in
out
cltd
xlat
repnz
pop
add
shlb
add
jmp
je
jns
mov
test
sti
sub
push
jmp
sbb
fcompl
ficoml
repz
xchg
into
sti
insb
dec
into
cmp
into
xchg
lret
xchg
cmp
push
in
xchg
stos
test
xor
jecxz
push
adc
jno
mov
icebp
dec
mov
pushf
jne
pop
mov
lret
test
mov
ret
jle
mov
stos
shlb
ret
jb
lea
dec
and
cmpsl
dec
dec
sbb
scas
jbe
pop
push
mov
mov
dec
and
adcb
push
pop
inc
fcompl
pop
aad
jo
popa
pusha
stos
mov
jmp
inc
and
lods
ret
sti
xchg
lods
mov
mov
mov
inc
dec
push
jno
pop
cmp
les
ljmp
shlb
cmp
sbb
cmpsl
sub
pop
jbe
dec
jbe
test
push
scas
dec
sub
pop
in
stos
dec
test
jno
or
sbb
test
inc
sbb
push
bound
test
xlat
push
ja
inc
je
mov
std
xchg
sbb
xor
xchg
fs
dec
test
or
cmp
push
psraw
mov
hlt
dec
xor
fs
daa
cmpsl
mov
sbb
imul
insb
pop
out
lods
leave
mov
inc
sahf
add
jmp
rol
mov
mov
cmp
xchg
push
out
inc
loope
imulb
bnd
repz
or
jae
and
xchg
jns
push
mov
xor
ja
adc
in
outsb
lea
sarl
aaa
mov
scas
ss
scas
cmpsb
andl
rcrb
mov
sti
lcall
cmp
inc
push
dec
fwait
jmp
fs
and
sub
fstps
xchg
fld
pop
test
mov
adc
inc
jae
mov
pop
xor
add
adc
xor
push
jno
test
push
sub
ds
pop
xchg
cmp
sbb
inc
fcompl
mov
xor
mov
out
and
in
dec
push
xor
cmp
dec
xchg
adc
sbb
mov
sub
pop
mov
mov
add
pop
mov
cmp
sub
xchg
xor
jg
push
pusha
ret
or
in
dec
mov
sbb
lahf
mov
clc
adc
xchg
lock
pop
mov
xchg
loopne
xchg
xor
xor
mov
cmpsb
fcmovnu
add
rolb
push
imul
int3
daa
sub
fidivrs
outsl
andl
hlt
add
mov
sarl
xlat
int
add
pusha
hlt
sub
add
pop
pop
repnz
sub
mov
stos
cld
push
dec
and
sbb
jge
inc
and
inc
cmp
ds
cltd
fwait
mov
mov
pushf
dec
rolb
add
and
int
subb
hlt
pop
inc
push
das
mov
arpl
cmp
cmp
xor
or
dec
sbb
dec
shl
fistl
xor
xchg
into
or
lret
ljmp
push
jo
lea
inc
dec
jg
dec
mov
scas
dec
inc
cmp
fisubs
adc
mov
jg
enter
xchg
xchg
nop
out
daa
mov
push
cwtl
fiaddl
jp
and
pop
jl
arpl
and
dec
jns
xchg
dec
cmp
inc
add
push
fwait
sahf
sub
fcomi
sar
in
xchg
shr
mov
or
pop
dec
out
in
sub
fcmovbe
mov
sbb
or
popa
cs
mov
sub
leave
mov
inc
sbb
lret
push
sbb
jo
dec
xor
adc
jo
cwtl
mov
jp
cmpsl
jbe
leave
test
nop
fwait
pop
popa
push
movsb
sbbl
mov
insl
push
mov
or
xor
pop
scas
pop
popf
into
cmpsb
inc
mov
mov
out
mov
data16
lock
insb
in
imul
in
in
lret
fmuls
ljmp
xlat
xchg
xorl
ljmp
xor
push
fimull
addr16
inc
pop
pop
imul
fcoml
fwait
push
xchg
bound
jp
mov
sbb
lret
adcl
lcall
jbe
add
fisttpl
mov
ror
dec
xlat
addr16
xchg
pop
outsb
jns
jp
pop
or
lcall
jp
mov
push
dec
out
ret
mov
jno
into
dec
add
adc
cld
mov
dec
xor
pop
fwait
or
push
mov
subl
xchg
inc
stos
hlt
jbe
push
lock
mov
int3
dec
or
sub
xchg
int3
jg
mov
mov
xchg
xor
fcmovne
sub
repnz
xor
ret
xchg
in
stc
ds
outsl
xor
xor
pop
enter
icebp
sub
arpl
or
cmc
xlat
jnp
lret
push
arpl
jne
add
clc
mov
inc
cmpl
mov
mov
rolb
fisubs
inc
dec
inc
add
sub
cmp
jge
daa
out
fidivrl
mov
fimuls
jl
xor
popf
out
mov
jo
inc
adc
sbb
inc
les
lea
int
dec
fcmove
hlt
test
nop
sub
mov
adc
or
nop
pop
cmpsb
clc
sarb
fisubrs
pop
loope
push
cld
pop
and
loope
pop
jne
test
mov
mov
push
adc
cli
dec
ljmp
and
mov
jb
xor
imul
stos
shrl
push
dec
adc
push
or
shrb
addr16
stc
fwait
mov
mov
sbb
out
lret
jecxz
jmp
or
xchg
jne
pop
jnp
leave
insb
mov
addr16
mov
xlat
sbb
int3
out
movsl
adc
insb
adc
aas
sarl
adc
inc
lds
daa
xor
dec
mov
jns
stc
inc
daa
mov
ret
arpl
lods
dec
mov
sub
stos
imul
outsl
mov
ds
sbb
leave
fdivrs
vmwrite
jp
fmuls
xor
iret
call
pop
dec
push
out
gs
mulb
scas
xorb
adc
or
dec
sarl
mov
cmp
outsb
mov
mov
sub
fisubl
xor
dec
rolb
nop
dec
cmp
adc
fadd
push
sub
pop
mov
sbb
or
jb
cs
iret
jne
dec
jecxz
mov
mov
cmpl
dec
xchg
jl
mov
inc
xchg
leave
inc
sbbb
inc
jl
xchg
fisubs
cmp
jmp
mov
sub
mov
imulb
jo
pop
mov
jne
cmp
jecxz
cmpsl
add
or
jb
es
mov
arpl
aad
mov
dec
xchg
push
call
call
add
shlb
ror
inc
idiv
push
fdivs
fldcw
in
nop
cmc
fidivrs
data16
inc
ret
xlat
adc
cld
mov
inc
lahf
mov
decb
mov
cmpsl
and
push
sarb
aaa
cmp
pusha
cs
rcll
pop
mov
rcrb
push
cwtl
movsl
dec
movsl
cmp
stos
out
mov
push
into
mov
mov
rclb
push
inc
mov
jl
fs
mov
outsl
scas
punpcklwd
dec
das
mov
jno
out
add
or
add
test
inc
loope
adc
int
pop
sbbl
repz
popa
or
call
mov
xchg
sbb
pop
jns
int
int3
mov
movsb
aad
pop
push
jae
stos
bound
lea
fidivrs
loopne
test
mov
andl
sub
scas
aam
xor
fwait
rolb
cmp
pop
rdmsr
sub
adc
leave
int
or
rolb
sub
push
loope
adc
rorl
js
pop
xchg
sbb
mov
movsl
inc
outsb
pop
scas
dec
adc
fbstp
xchg
fcomps
and
in
or
and
and
dec
dec
lea
lods
dec
stos
mov
out
and
in
push
adc
movsb
es
mov
and
mov
repz
add
xchg
ret
sub
jo
fdivs
mov
imul
xchg
es
cmpsb
dec
add
xchg
enter
pop
sub
sub
or
xchg
adc
mov
sub
push
inc
insl
sub
mov
sub
add
or
fldenv
push
stos
outsb
ret
test
pop
paddb
xchg
scas
xor
rolb
clc
rcl
je
mov
insb
jo
jb
dec
cmp
test
mov
ficomps
inc
cwtl
test
ds
fsubrl
aaa
mov
nop
jo
xlat
inc
clc
sahf
sbb
hlt
jns
push
jo
push
cmp
mov
pushf
cwtl
push
call
roll
sbb
pusha
sbb
push
aad
xor
and
xor
shrl
mov
in
sahf
ror
dec
arpl
sbb
xchg
clc
mov
pop
lret
fs
jo
jmp
int3
pop
jnp
jge
adc
in
add
add
and
mov
dec
pop
adc
lods
inc
jno
mov
mov
cltd
push
imul
mov
pop
mov
rcl
in
inc
add
mov
cltd
mov
mov
aad
lahf
mov
mov
lock
sub
xchg
shlb
xchg
sbbl
push
cmp
lret
xor
sti
cmpsb
or
cmp
mov
adc
pushf
pop
test
jae
cmp
pushf
push
mov
movsb
lock
push
push
test
sbb
mov
jnp
mov
daa
loopne
or
pop
pop
or
inc
jne
jg
adc
cwtl
les
cmpsl
sbb
pop
sahf
popw
cmc
ja
push
cwtl
dec
insl
test
nop
dec
ja
and
shlb
lds
in
je
pop
pop
pop
loop
loop
push
and
movsl
scas
cli
inc
xor
je
push
jb
mov
add
into
pop
cmp
orb
push
cwtl
ljmp
pop
push
sub
cwtl
cmp
andl
fidivl
dec
push
pop
adc
adc
jl
outsb
mov
cmp
adc
mov
jno
sbb
aas
add
dec
cli
or
sbb
adc
mov
fwait
sahf
xchg
adc
pop
mov
push
pop
xchg
sbb
jnp
hlt
sub
ret
and
sbb
stos
adc
push
cwtl
dec
mov
cmp
mov
aas
xlat
stos
sbb
xchg
insb
push
adc
iret
adc
fwait
or
sub
mov
cltd
int
shrb
rcrb
lock
push
cltd
push
xchg
mov
lret
pop
xchg
lcall
sbb
lahf
ja
insb
or
jbe
pop
xchg
xchg
in
test
xchg
fsubr
fisubl
xlat
mov
add
loop
cmpsb
sbb
inc
popf
xchg
or
pop
addb
rol
bound
lods
pop
adc
lock
xor
jmp
mov
fwait
stos
data16
sub
enter
ss
int3
pop
xchg
and
cltd
sub
movsl
cmpsb
dec
std
add
lea
call
les
pushf
cmpb
or
sbb
das
lcall
inc
cs
loop
jns
pop
scas
lret
jecxz
jl
mov
inc
fiadds
mov
pusha
cltd
outsb
adc
repz
andb
push
mov
push
add
cmpsb
adc
sub
fwait
xlat
fwait
dec
or
loopne
leave
sub
fiaddl
push
out
je
dec
fbld
test
lods
jo
inc
stos
imul
outsl
push
js
dec
jecxz
mov
cmpsl
in
movsl
sbb
stc
icebp
add
pop
xlat
inc
inc
add
popf
roll
ret
push
out
das
lock
pop
mov
inc
int
dec
lcall
es
and
jmp
mov
fstps
xchg
mov
pop
fsubrs
jmp
sbb
xor
repnz
mov
fucomi
jo
sbb
adc
aas
xchg
out
inc
dec
fistpll
sbb
jl
sub
sub
pop
fists
rorb
add
fimull
push
sbb
mov
cmp
fs
sbb
mov
inc
jno
jnp
aaa
es
cmp
in
repnz
jne
push
xor
push
dec
push
repz
std
pop
rol
pop
mov
push
ljmp
jbe
cmpsl
dec
in
jg
adc
fisttpll
or
cmpsl
pop
loopne
cmp
adc
outsl
loop
imul
call
mov
mov
mov
fs
sahf
cld
pop
dec
and
fsubrl
into
adcb
xor
or
dec
mov
push
cmp
stos
lds
xchg
mov
fistpll
fdivs
jle
movsb
and
out
mov
call
adc
adc
and
mov
mov
push
out
push
mov
xlat
fs
repnz
sub
add
mov
lods
orb
mov
insb
lock
xor
les
push
sbb
xor
jb
int
mov
pop
aad
xchg
pusha
push
dec
insl
cs
jo
inc
popa
in
dec
popa
rorl
jecxz
pop
mov
cwtl
aam
mul
add
addb
or
inc
fnstcw
adc
add
leave
dec
cmpb
jle
pop
xchg
movsb
inc
cmpsl
and
fldcw
adc
add
push
lahf
jne
add
ss
in
xchg
mov
and
jo
push
push
jge
xor
adc
cmpsb
mov
dec
daa
xor
iret
mov
sbbb
jmp
inc
lea
out
or
mov
dec
mov
inc
jp
xchg
iret
cmp
push
jbe
inc
in
mov
mov
lret
arpl
sbb
inc
data16
inc
aam
sub
xor
mov
mov
or
mov
out
loop
cmp
shll
adc
jle
in
andl
js
xchg
int
dec
in
mov
sub
clc
fldt
fistps
dec
lret
push
into
add
adc
fsubr
inc
ljmp
stc
jno
lcall
pop
xor
dec
or
popl
mov
cwtl
and
fistl
adc
mov
jo
dec
inc
imul
insl
sahf
icebp
cltd
fisttpl
sub
dec
add
pop
and
sub
mov
inc
out
test
sbb
aam
jmp
jge
flds
xor
orl
jbe
fisubs
lds
in
sbb
mov
jbe
push
fdivp
stos
fs
ljmp
xlat
cwtl
sub
ret
push
lahf
js
cmc
rolb
jmp
arpl
push
jb
jns
stc
addr16
int3
out
adc
xchg
in
outsl
loopne
push
stos
add
fnsave
add
gs
push
filds
lret
cli
cmp
imul
jge
push
mov
xchg
in
push
out
and
dec
pop
bndldx
jmp
pop
jmp
test
mov
lods
mov
xor
clc
push
lods
test
jae
mov
addr16
sbb
pop
pop
pusha
add
scas
push
sbb
sbbb
xor
sub
sbb
and
xchg
adc
lods
adc
jne
jb
mov
jge
pusha
add
icebp
add
lock
xchg
outsb
out
rorl
and
mov
mov
push
dec
xchg
and
shll
mov
fistps
scas
jmp
ds
lods
sub
test
push
add
pop
ret
pop
insb
mov
inc
adc
mull
xchg
lods
mov
fcoml
xchg
pop
dec
out
sbb
xchg
call
dec
js
insb
mov
hlt
inc
push
fs
push
cli
in
cmpsl
pop
lret
pop
pop
stc
fistpll
sahf
cwtl
inc
aad
xchg
mov
push
cmpl
pop
sub
jb
test
sub
mov
add
jns
sub
xchg
faddl
push
pop
push
push
xchg
adc
inc
aad
dec
aad
push
jmp
or
scas
push
inc
jecxz
fwait
pop
cmp
xor
ret
addr16
jge
outsb
mov
fwait
insl
lods
push
jae
sub
cltd
fnstcw
mov
push
out
mov
adc
mov
xchg
mov
inc
decb
mov
ljmp
and
add
push
adc
cmp
adcl
hlt
mov
jae
pop
dec
jne
xchg
cmp
imul
mov
popf
or
outsl
cli
mov
sub
out
sbbl
adc
shr
popa
inc
push
and
mov
fisubs
loop
cltd
push
jo
mov
xor
into
mov
push
sbb
out
icebp
or
fsts
cmpsl
das
xchg
xchg
jge
dec
ret
dec
sbbb
pop
rolb
cmp
jns
push
and
sbbl
mov
cmpsb
push
fldcw
call
cmpsl
or
sub
xchg
add
dec
jle
dec
cwtl
ja
ljmp
sbb
bound
xor
mov
mov
pusha
repz
fimull
mov
in
inc
xchg
xchg
or
loop
inc
imul
xorb
mov
pop
dec
mov
test
in
sti
or
rolb
cmpsl
inc
mov
xor
dec
adc
hlt
push
test
popf
cmp
mov
push
xor
shr
xchg
and
dec
sbb
jp
jbe
lahf
or
mov
lahf
pop
addr16
repnz
fadds
daa
in
pop
xor
add
aas
inc
push
adcb
icebp
rcrl
lea
dec
in
enter
decl
in
mov
daa
aad
fistl
cmp
popf
mov
repnz
movsl
xor
insb
cli
es
fcomps
clc
clc
push
les
mov
test
orl
outsl
nop
fadd
xchg
ds
lods
add
or
adc
dec
jo
fcmovbe
mov
adc
dec
adc
leave
sub
mov
flds
push
mov
pop
aad
and
test
fidivl
jno
pusha
sbb
mov
lret
and
and
leave
xchg
test
lods
imul
adc
pop
or
ficompl
jnp
jg
lahf
xchg
xor
or
jecxz
mov
push
jae
or
xor
scas
or
adc
mov
dec
fs
sbb
or
in
and
and
xchg
aam
icebp
out
cwtl
mov
push
add
and
jle
repz
sbb
cltd
andl
cmpsl
test
aam
testb
sahf
les
movsl
sarl
sbb
ret
inc
or
jne
add
push
xchg
pop
popf
xchg
jge
sahf
imul
sbb
hlt
sub
xor
mov
shr
call
mov
inc
or
idiv
adc
js
jmp
popf
leave
imul
pop
or
push
call
mov
or
pop
testl
neg
cmp
lahf
popa
pop
jle
rcrl
mov
pop
mov
jo
lds
imul
movsl
imul
dec
push
lods
ret
lods
int
jp
mov
cwtl
insl
mov
sub
cmp
pop
push
dec
inc
adc
push
aaa
jg
mov
cmp
fsubrl
cs
add
or
mov
cli
adc
icebp
loop
std
dec
test
xor
aas
xchg
mov
sub
pushf
xchg
negl
icebp
loope
test
dec
lret
xlat
mov
cmp
xchg
sbb
scas
sbb
into
insb
and
or
sub
insl
sub
cld
push
inc
incl
cmp
scas
and
test
sbb
repnz
jecxz
push
das
aam
loop
cld
mov
dec
mov
out
jmp
sbb
xchg
lock
test
jns
mov
inc
cs
sub
jecxz
mov
insb
adc
pusha
in
sub
sti
shl
jl
rolb
pop
mov
test
addr16
lcall
and
mov
push
xor
push
xchg
aad
xlat
add
and
adc
inc
int3
mov
ljmp
loop
push
xor
sbb
mov
push
cmpsl
andb
insl
xor
jno
mov
xor
mov
js
movb
pushf
sub
mov
pushf
repz
mov
bound
mov
stos
cwtl
dec
sbb
pop
imul
movsb
sbb
lds
push
pop
arpl
shrl
pop
xor
out
xchg
fnstcw
dec
xchg
mov
or
and
or
jns
mov
ret
inc
push
pop
out
in
sbb
sub
cmp
icebp
fmul
mov
shlb
es
push
arpl
arpl
sarl
iret
repz
hlt
repz
inc
cld
rcl
push
aas
jle
sbb
addr16
cmpsl
mov
sahf
insl
jo
dec
xor
popa
or
shll
lock
test
mov
addr16
mov
test
fmull
dec
push
add
add
push
jae,pn
sbb
jae
or
dec
loopne
inc
jae
jmp
xor
sbbl
fistl
sahf
aam
mov
inc
fs
bnd
cld
xchg
sub
and
das
outsl
or
mov
test
jl
sbbb
xchg
sub
rcll
jmp
sub
and
push
stc
mov
xchg
inc
mov
fcoml
subl
pushf
sbb
dec
push
ret
xchg
push
cltd
pop
out
js
mov
dec
movb
sbb
mov
lret
insl
ret
push
jno
pop
xor
test
mov
in
fcmovnu
loopne
pusha
stos
jle
aad
sbb
aad
scas
movsb
loop
int
sub
aas
lods
inc
mov
je
repnz
pop
loopne
jo
jnp
fsubrl
lcall
jecxz
jge
sti
push
dec
pop
int
idivb
jns
mov
imull
ficomps
mov
jecxz
in
sarl
mov
leave
add
test
dec
addr16
in
movsl
and
cli
mov
sbb
add
mov
cwtl
fsubs
sub
cld
xchg
cmpsb
and
sbb
push
into
add
ljmp
xchg
insl
pop
adc
ret
addb
jl
push
jno
dec
add
pop
sti
repz
jb
jae
sbb
push
mov
adc
jae
hlt
nop
inc
mov
xlat
mov
mov
mov
sub
cmp
add
dec
insb
jge
mov
aas
add
and
dec
das
call
push
scas
cs
mov
inc
pop
jl
popa
call
adc
outsb
inc
call
int3
xchg
mov
push
inc
pop
adc
sbb
aas
movsb
repnz
scas
or
pop
pop
lcall
out
cmpsl
pop
dec
outsb
ret
mov
pop
push
outsb
sbb
or
out
lds
ficomps
ja
inc
jno
adc
jmp
loop
inc
call
mov
sbb
lret
fs
fs
xchg
outsl
gs
das
jnp
imul
je
push
fnsave
shll
xor
cmpsl
loop
xchg
ss
imul
test
jecxz
test
test
fisttpl
lcall
stos
lods
aaa
adc
shrl
mov
outsb
and
sbb
add
pop
mov
aam
dec
mov
sub
shlb
rolb
cwtl
testb
dec
int
imul
inc
adc
add
mov
mov
jecxz
shrb
imul
icebp
pop
sub
mov
sub
dec
lea
push
lods
insl
dec
sbb
loop
mov
sti
adc
sub
std
gs
int3
sbb
in
dec
mov
sub
in
mov
fldenv
xchg
mov
mov
adc
lcall
xchg
sbb
imul
js
cmp
nop
jae
dec
mov
aad
andps
dec
xchg
cmp
sbb
stos
push
mov
divb
cwtl
jge
ja
jne
fmull
sti
mov
insb
fbld
lea
aas
out
sub
imul
mov
aaa
mov
add
inc
add
mov
xor
fists
insl
cmc
sub
mov
mov
out
incl
adc
lods
aas
jl
jg
dec
out
int3
mov
push
jo
ret
stc
in
arpl
dec
pop
or
inc
jnp
test
sbbb
aas
in
add
jge
imul
std
or
cltd
inc
testb
push
sbb
cltd
add
cmp
mov
xchg
inc
jecxz
mov
sub
std
dec
adc
rclb
movsl
jne
fwait
dec
xchg
jecxz
repz
add
loope
xchg
test
lods
mov
loopne
jae
mov
mov
fcoms
test
xorl
or
mov
mov
nop
or
fldenv
mov
arpl
ret
add
stos
jg
jmp
rcll
pop
data16
cmp
mov
sbb
mov
pop
inc
imul
aam
cs
pop
push
xchg
sbb
pop
push
mov
out
sbbb
out
mov
data16
jmp
sbb
xor
ret
push
arpl
push
mov
and
js
jmp
inc
mov
dec
stos
out
adc
and
jb
mov
push
inc
popa
int3
add
cmp
xchg
and
rcr
test
sahf
rcll
std
aas
int3
cmp
pushf
inc
mov
stos
push
insb
fsts
pusha
push
dec
repz
mov
push
sub
adc
jbe
sbb
sub
xchg
popf
popa
adc
cmpsl
cmp
pop
push
int
mov
inc
or
sti
pusha
push
and
add
lods
sbb
cmp
or
cli
xor
fsubrl
psubsb
scas
xchg
sbb
or
pusha
jo
and
xor
in
or
cmp
ja
lcall
sbb
push
mov
push
xchg
jbe
and
and
movsl
cmpl
mov
pop
call
push
push
push
aaa
mov
mov
jae
stc
dec
repz
stos
push
cmp
jno
sub
dec
enter
daa
mov
ret
jmp
adc
xor
gs
adc
push
fnstsw
les
mov
sub
jle
lods
mov
or
sbb
fsubrl
dec
shrb
test
xchg
xchg
pop
jl
xchg
fcompl
jbe
test
loope
push
mov
jle
fimull
stc
sahf
ret
push
bound
dec
icebp
jb
cmpsl
xchg
imul
movsb
popf
iret
mov
out
test
popa
jle
jg
rep
insb
es
pop
push
imul
jnp
and
pop
outsl
lock
outsb
mov
imul
addr16
or
push
lret
aas
mov
clc
pop
scas
push
pop
ja
cs
mov
sub
mov
cltd
jns
jno
sbb
xchg
sahf
sub
pop
jmp
daa
sbb
subl
shrl
leave
push
and
inc
sbb
lods
cli
pop
or
loop
outsl
gs
imul
jmp
dec
lds
adc
ja
mov
or
mov
xchg
lret
les
imul
xchg
out
movsb
or
pop
pop
pop
cmpsb
rcl
into
cmp
test
std
or
iret
and
rolb
mov
jnp
in
rsqrtps
push
fisubrl
and
fimull
mov
adc
popa
pop
insl
movsl
jne
clc
dec
and
std
push
dec
pop
mov
sub
scas
cmp
fisubrl
lods
iret
dec
push
enter
cmpsl
xor
lods
repz
pop
inc
pop
mov
rcll
js
lahf
daa
xor
adc
pop
ljmp
xchg
js
xchg
adc
mov
repz
stos
lods
xchg
and
and
fwait
adc
stos
jbe
pop
inc
pop
call
xchg
pop
mov
jl
push
mov
jg
jmp
push
xchg
inc
push
pop
xor
test
mov
lods
adcb
mov
or
filds
and
cmpsb
xor
repz
lock
ret
sub
into
movsb
adc
in
imul
or
addb
scas
shll
or
or
sub
in
ja
std
out
inc
xchg
test
push
sub
sbb
mov
imul
pop
ret
pop
push
push
int3
es
das
pop
jnp
mov
dec
icebp
rol
imull
push
cli
lea
lods
inc
gs
cmpsb
popa
scas
inc
and
jle
or
out
fsubs
and
jp
fdivl
adc
mov
xor
into
icebp
pop
sbb
cmp
pop
inc
fcmovnbe
fistpl
mov
xchg
lea
xchg
inc
or
test
inc
inc
fcmovu
jne
sub
cmpsb
mov
cmp
xor
sbb
xor
cld
push
popa
dec
loopne
sub
and
cmp
fsubr
inc
fildl
push
and
xchg
mov
inc
inc
insb
rcrl
add
je
adc
mov
imul
test
in
and
in
dec
or
je
cmpsl
cltd
mov
call
in
or
not
fstpl
iret
cmp
xchg
xchg
xchg
and
loop
xchg
mov
inc
je
repz
xor
pusha
lods
movsb
inc
inc
es
mov
mov
dec
adc
in
inc
jns
mov
lret
lods
jno
adc
mov
adc
stos
in
pop
push
int
pop
mov
xor
or
popf
xchg
mov
add
or
call
add
movb
pop
rcll
outsl
int3
dec
gs
aas
call
sbb
aaa
pusha
cmc
mov
cmp
insl
cmp
push
into
inc
sbb
dec
pop
bound
dec
pop
jg
insl
cmp
les
daa
inc
int
loope
sti
pop
sbb
loope
repz
popa
push
pop
sub
or
pushl
pop
inc
pop
sub
popf
push
in
add
pop
divb
mov
push
cmp
mov
out
pop
mov
cmp
push
inc
inc
lods
lret
mov
les
jno
outsb
jne
jnp
stc
xchg
mov
dec
ret
lds
insl
or
stos
in
sub
sub
adc
add
sahf
cli
std
psubsb
inc
js
mov
xor
adc
pop
lds
dec
fimuls
stc
stc
push
cmp
gs
insb
pop
outsb
mov
dec
mov
outsl
push
ja
dec
dec
cltd
cld
sub
std
xor
cmp
sbbl
xchg
jge
mov
jp
clc
mov
sub
les
fdiv
icebp
jbe
fsts
in
shr
cld
push
iret
pop
sbb
sbb
lods
pusha
push
sbb
addb
xor
sub
pop
cmp
lahf
insl
aaa
add
scas
scas
lods
das
fcompl
out
dec
jns
leave
cmc
aas
lock
jno
ret
sbb
push
and
push
and
insb
xor
lds
dec
sbb
out
das
pop
pop
popf
dec
pop
xor
mov
jge
jnp
mov
cmp
lods
pushf
xor
sub
cmp
pusha
into
push
iret
movsl
mov
imul
jp
clc
jl
in
cmp
imul
incb
and
in
andl
in
cld
pop
repz
pushf
ds
add
cmp
or
hlt
cmpsl
cli
fcmovnu
cld
adc
insb
addr16
cmp
sti
sbb
mov
cmp
pushf
fcmovu
mov
sub
pop
ljmp
xchg
cld
and
stc
js
ljmp
or
mov
push
jecxz
mov
jecxz
jp
xchg
xor
pop
mov
sub
lods
dec
outsb
dec
push
cmp
mov
push
sbb
mul
arpl
jno
mov
sarl
sub
in
xchg
cmp
es
loope
xor
sub
repz
pop
addr16
push
jge
fcoms
scas
hlt
add
add
xchg
pop
addb
shll
sub
outsl
popa
pop
shr
inc
jnp
mov
inc
scas
test
and
jmp
int
sub
and
adcl
mov
dec
mov
call
ret
nop
js
call
les
loop
addr16
imul
adc
lock
rorl
push
dec
dec
bnd
aad
inc
xchg
sub
sub
mov
pop
mov
adc
sbb
bnd
cmpsl
sub
cmp
mov
lods
clc
insb
sub
cltd
mov
and
cwtl
mov
sbb
inc
mov
subl
jns
fiaddl
or
and
xor
jb
adcb
add
xor
xchg
push
insb
xchg
cwtl
inc
sarb
add
push
pop
pop
xor
sahf
sarb
xchg
add
jecxz
rcr
aam
mov
mov
std
ss
lods
or
adc
aam
fidivrs
inc
sbb
xchg
jmp
pop
mov
leave
loope
cli
dec
xor
mov
fwait
and
jecxz
inc
sbb
and
call
lret
in
ret
hlt
mov
inc
popa
fisttpl
mov
hlt
sub
xchg
out
xor
push
rcrl
dec
dec
sbb
jae
cmp
xchg
xchg
sub
out
and
add
push
in
xchg
sub
rorb
jb
mov
cld
and
cwtl
andl
insb
es
lea
cmpsl
cs
je
das
push
test
pop
stc
sbb
or
push
push
jecxz
repz
out
imul
sti
push
dec
clc
outsl
fimull
aas
and
movq
cltd
jns
pop
lods
mov
mov
xchg
jle
xchg
jne
cmp
imulb
sub
test
jbe
loopne
jnp
jecxz
insl
dec
sbb
negb
cmp
mov
aaa
fimuls
rcrl
lds
test
jl
sbb
push
movsb
ret
mov
dec
mov
and
in
fwait
popf
out
and
call
xor
adc
xchg
adc
push
icebp
jno
cmp
lahf
arpl
fmuls
xchg
sbb
test
outsl
jp
pop
in
push
add
lock
jl
mov
xchg
in
sbb
rcrl
cmp
stc
xchg
out
adc
js
aad
xchg
ror
shll
jge
out
call
shlb
sub
mul
xor
dec
outsb
cmc
mov
xor
jnp
jnp
xchg
int3
fstps
push
jl
add
sub
popf
ret
sti
sub
pop
dec
add
add
lods
mov
in
dec
ret
mov
std
test
into
pusha
lahf
call
pop
movsb
imul
cltd
iret
jo
inc
add
lea
inc
inc
int
dec
ljmp
mov
es
push
aam
add
imul
fdivrl
ja
add
insb
push
push
movsb
dec
mov
scas
mov
in
or
xchg
push
mov
sub
inc
fmul
push
insl
sti
pop
jo
fldt
xor
int
and
loopne
mov
subb
mov
out
cmpsb
imul
adc
mov
mov
out
repnz
ljmp
jnp
push
pop
dec
pop
and
jp
enter
scas
mov
adc
in
addr16
dec
gs
out
mov
and
loopne
and
es
dec
add
sti
aam
scas
nop
or
mov
dec
push
pop
mov
ds
inc
data16
mov
pushf
dec
mov
add
push
jo
adc
int3
xchg
push
add
mov
pop
push
les
adc
mov
movsl
xor
or
lea
mov
js
inc
xor
sbb
cltd
inc
pop
lea
cmp
cmc
aad
cmp
jo
cmp
pop
scas
sbb
iret
sarl
xor
loopne
pop
je
xchg
into
jb
fistl
std
adc
mov
loopne
sti
leave
in
adc
pop
cmc
and
loopne
enter
mov
mov
aas
orl
xchg
jmp
mov
xorl
jl
fiadds
sbb
push
out
cmp
sbb
mov
imull
jle
mov
lds
cmp
mov
sahf
in
inc
jmp
push
repz
lea
arpl
jns
add
push
sbb
sub
outsl
mov
add
and
and
xchg
rcrl
push
lret
adc
sub
mov
push
pushf
adc
and
push
push
mov
inc
jg
pop
inc
add
ja
jle
xchg
mov
rcl
in
popf
aaa
lods
jp
xor
lret
mov
sub
popf
sub
mov
add
test
dec
movsb
inc
mov
pushf
and
push
pop
jge
cltd
cmc
sbb
hlt
lods
inc
fsubrs
xor
xchg
in
inc
ss
bound
mov
dec
xchg
test
or
sbb
cmpsl
cld
jnp
mov
sub
bound
or
sub
aas
jmp
out
lds
mov
mov
sar
aas
dec
out
dec
fsubrl
lds
in
mov
sbb
sbb
mov
mov
int
cltd
mov
fcomps
inc
or
jnp
inc
cli
jmp
shl
mov
xor
xchg
cmp
xor
sbb
pushf
pop
clc
int3
fstpl
sbb
dec
cmpsb
cmp
hlt
negl
jecxz
popa
sub
addr16
mov
mov
sub
lea
xchg
and
cld
loopne
sub
nop
insl
xchg
repnz
icebp
sbb
rol
out
xchg
sbb
inc
jmp
testb
int
mov
pop
mov
mov
in
xchg
test
ret
mov
jg
mov
shrl
sub
ret
fidivrs
mov
mov
jecxz
repnz
lahf
sarb
mov
mov
pop
ljmp
leave
aam
mov
setnp
sbbl
mov
jmp
in
jbe
pop
add
or
push
fstp
and
icebp
jno
popa
jecxz
pop
into
fadds
jne
les
lods
sbbb
call
aam
cmpsb
outsl
jne
xor
dec
ret
pushf
or
pop
ret
ljmp
ret
aaa
dec
mov
sbb
scas
jecxz
fwait
inc
add
loope
sbb
add
or
test
movsb
lret
sbb
pushl
or
mov
daa
jae
movsl
leave
pop
setns
mov
mov
inc
xor
iret
shr
leave
lea
or
das
idivl
push
mov
mov
add
jmp
mov
aam
das
fisttpll
popf
push
mov
sbb
cmp
jle
popf
je
sbb
addr16
addl
mov
fldcw
sbb
mov
jbe
popa
push
aaa
sbb
sub
push
mov
adc
or
enter
std
popa
fwait
shll
lcall
dec
xchg
and
fisttps
je
aam
out
sub
inc
into
fwait
xor
and
pop
xor
hlt
cmpsb
and
movsl
imul
dec
inc
ds
neg
inc
cmp
push
jb
jp
mov
test
dec
das
testl
fs
push
pop
jge
adc
imul
push
and
and
cld
lret
ret
mov
push
aad
push
adc
xchg
push
test
inc
jne
add
ffreep
shll
fcompl
ljmp
mov
test
or
ss
pop
imul
jno
je
mov
mov
in
xor
mov
into
mov
and
add
pop
cld
or
jne
and
jl
pop
mov
push
jno
pop
ds
sets
jo
push
and
adc
dec
dec
and
ss
xchg
push
jno
jmp
add
jp
push
imul
test
out
xor
mov
test
stos
add
or
cmp
rdmsr
fprem1
mov
repz
ret
inc
sub
adc
xor
jmp
fistpl
inc
cwtl
mov
pop
pop
das
subb
out
mov
xchg
in
fdivrl
sub
mov
fdivrl
mov
sub
mov
jecxz
pushf
mov
sub
jl
jne
jecxz
cmp
pop
pushf
repnz
dec
push
jle
loopne
adc
daa
in
push
pop
jns
inc
cmp
mov
add
inc
pop
int3
jb
mov
jno
jb
push
mov
mov
push
pusha
pop
aad
inc
out
inc
inc
and
cli
adc
icebp
popa
xchg
mov
aaa
outsl
mov
in
test
int
adc
loope
add
pop
jle
pop
xor
cmpsl
or
stos
cwtl
pop
imul
inc
mov
std
ret
dec
adc
pop
icebp
pop
jbe
fsubl
cmpsb
fmull
stos
es
sub
pop
ds
loopne
dec
pushf
ret
fnsetpm(287
dec
int
mov
inc
cmpsb
or
mov
lret
sub
aam
pop
dec
push
fsts
daa
ja
imul
pusha
into
mov
xor
inc
cmp
notl
gs
stos
and
ljmp
shll
int
nop
mov
jmp
insb
push
fdivr
shrb
cmp
and
lret
hlt
dec
test
jl
xchg
xchg
testb
fidivrl
sbb
ret
jnp
in
dec
outsl
jecxz
sarb
ret
mov
aas
inc
push
pushl
inc
idivl
cmp
int
into
insb
cmp
pop
popf
dec
xchg
into
mov
andl
jecxz
push
hlt
aam
lret
dec
jmp
adc
out
jg
mov
std
or
mov
add
push
sub
lea
lea
mov
imul
fdivrl
dec
cmp
push
outsl
mov
mov
dec
mov
shl
movsb
ror
add
addr16
cmp
and
js
loope
scas
loopne
mov
push
imul
xor
and
aas
cmp
xchg
or
sbb
jne
xor
mov
jne
iret
scas
pop
pop
je
out
push
lods
sub
jbe
xchg
lcall
stos
adc
sub
jl
push
cli
dec
scas
mov
jmp
jecxz
push
push
enter
mov
fimull
js
and
popa
jbe,pt
push
fistpl
adc
cld
inc
pop
push
xor
inc
in
xchg
popa
jmp
into
cltd
stos
mov
decl
push
fcoms
ret
ret
push
jp
aad
jnp
inc
fistl
ja
or
aam
sub
sub
int
mov
add
add
scas
rorb
loope
xchg
movsb
or
mov
aad
clc
mov
adc
in
push
pop
iret
scas
mov
cs
in
mov
adc
xchg
jge
lock
movsb
lret
dec
out
cmc
jge
mov
mov
enter
push
xlat
mov
mov
fmuls
push
pop
arpl
fs
fnstsw
adc
stos
jnp
iret
pop
mov
mov
push
sbb
int3
dec
xchg
inc
cld
push
mov
loop
scas
not
mov
outsl
or
mov
push
stc
push
pushf
xchg
inc
jae
fistpll
mov
or
push
loop
cmp
lcall
movsb
cmp
div
sbb
jg
adc
data16
xchg
shrl
xor
mov
sbb
testl
inc
lcall
and
rcrb
xchg
negb
and
add
call
dec
pop
xlat
push
cmp
xchg
xor
jl
pcmpgtd
nop
in
mov
xchg
mov
mov
test
gs
mov
loop
inc
fimull
js
daa
dec
jnp
sbb
ficompl
loop
fxch
rclb
arpl
xchg
mov
mov
pop
ret
inc
in
mov
daa
lea
xor
cld
arpl
dec
icebp
sub
ret
sub
sbb
add
mov
repz
and
mov
xchg
ja
add
flds
jne
sbb
jp
stos
sub
inc
addr16
movsl
cmc
outsb
out
push
loop
imul
daa
mov
int3
sub
mov
notb
cmp
gs
sbb
pop
jge
mov
dec
or
adc
popf
repnz
push
cmp
popa
fisttps
bound
push
shll
fldl
xlat
pushl
and
mov
push
sub
push
cli
pop
mov
mov
adc
cmp
adc
fnstenv
mov
das
aaa
fsts
mov
pop
sarb
sub
ss
in
stos
addb
fdivr
sub
push
addr16
jp
lea
sahf
mov
loopne
xor
in
jno
or
push
dec
ret
dec
push
or
ret
adc
ficompl
cli
leave
leave
jae
push
push
shll
cltd
out
push
lret
push
stos
es
cmc
cmp
jp
pop
fldt
bound
cmp
xchg
cli
mov
push
repnz
inc
cmp
rclb
xor
nop
lods
loopne
pop
and
fdivrl
pop
inc
jmp
leave
enter
xchg
or
push
push
aad
std
jecxz
xor
push
mov
stos
mov
and
loop
ret
pop
xadd
test
xor
mov
mov
jp
push
lock
push
test
add
mov
iret
jge
fwait
ret
mov
push
enter
pminsw
inc
jns
and
mov
push
int3
ror
cwtl
fistpl
lods
xchg
xchg
and
xor
ficoml
in
xchg
ficoms
sbb
or
fdiv
xchg
outsb
insb
and
xchg
aas
rolb
jg
pusha
xor
xor
idiv
lret
lcall
cld
mov
adc
xor
push
out
mov
xchg
lret
add
ret
shr
lcall
pop
scas
mov
popa
inc
pop
nop
stos
loope
out
movsl
fildl
jecxz
adcb
cld
notb
add
mov
icebp
pop
push
daa
xchg
cmpsl
pop
adc
and
xor
mov
and
sub
outsb
mov
mov
mov
inc
scas
dec
orl
repnz
mov
jl
frstor
pop
cmp
pop
push
xor
lcall
js
mov
jo
pop
cmpsl
in
hlt
rol
dec
cld
call
sbb
fcoml
arpl
stos
ror
push
daa
shlb
add
or
sub
loope
fnsave
adc
xor
decl
hlt
fdivrl
arpl
movb
push
mov
jnp
fwait
scas
pop
dec
pushf
ret
repnz
xchg
popa
icebp
shlb
inc
movsl
ret
pop
push
inc
loope
aas
mov
cmpb
mov
and
lahf
jbe
js
push
or
pop
mov
mov
jne
inc
outsb
jno
outsl
pop
jbe
decb
sarl
test
jbe
sbb
push
inc
cmp
call
cmp
push
dec
dec
out
mov
jae
pop
cld
andl
push
inc
mov
xor
or
and
outsl
add
cwtl
scas
insl
and
sub
dec
leave
or
std
push
in
push
mov
mov
adc
aas
jno
xor
jne
xor
mov
loope
pop
mov
mov
bound
mov
pop
mov
lods
lock
mov
xor
outsb
lahf
and
xlat
xlat
loop
cmp
das
xor
xchg
ss
clc
icebp
lods
or
jp
cmp
mov
mov
xlat
xor
dec
inc
bound
sbbb
push
push
dec
adc
rcr
mov
push
pop
addr16
js
stos
call
sbb
cmpsb
rcrb
les
ljmp
jl
jns
daa
fildl
arpl
pusha
popf
xchg
sub
loopne
or
movsl
xchg
leave
cmp
ja
imul
inc
popl
xchg
int
insl
mov
push
cmp
stos
or
int3
jle
sbb
je
dec
call
xchg
cmp
jle
popf
aas
pop
cmp
mov
or
ds
rcrl
inc
sbbb
arpl
call
aad
mov
test
mov
cwtl
ljmp
push
or
add
out
jecxz
add
dec
pop
shrb
xor
inc
mov
pop
std
test
ss
jbe
rcrb
push
xchg
jge
dec
and
mov
cmp
cmp
adc
fs
icebp
cmp
idiv
jbe
in
cwtl
fsubl
scas
imul
push
mov
mov
arpl
test
jnp
scas
scas
cmp
or
jg
mov
push
sub
jge
jle
testl
xlat
imul
scas
rclb
adc
cmc
push
imul
sbb
rol
lcall
aad
mov
mov
mov
out
test
ss
nop
and
ss
xchg
in
insl
mov
into
sbb
rorl
test
mov
das
into
je
mov
inc
aas
icebp
mov
mov
fdivrs
stos
lret
cmpb
adcb
test
xor
enter
fnsave
xor
fs
xchg
insl
fs
jg
pop
adc
movsl
fsts
outsb
mov
sub
movsl
mov
enter
mov
xchg
cltd
or
call
ljmp
jmp
mov
lock
add
cmc
mov
xor
add
ret
mov
aas
lea
das
ret
jl
add
je
test
xchg
loopne
scas
ja
inc
mov
outsl
pop
mov
mov
fistl
popa
pop
icebp
adc
pop
fldt
cltd
jno
mov
push
iret
mov
cs
int3
push
inc
call
jmp
push
jl
sbb
outsb
dec
jns
push
push
sub
out
aas
lds
sahf
ficoms
cmc
add
push
push
mov
inc
into
fistpll
dec
mov
mov
mov
ret
movsl
pop
cmc
mov
imul
inc
lret
int
dec
mov
and
xor
dec
push
fsub
dec
fidivrs
cli
mov
xlat
push
push
adc
cli
int
adc
jnp
sbb
ret
rclb
sub
xchg
test
mov
mov
stc
ret
mov
xor
push
pop
in
inc
adc
xchg
repz
lods
inc
orb
xchg
movsl
adc
arpl
aas
mov
mov
dec
sbb
nop
pop
cld
outsb
sbb
and
pop
inc
dec
xchg
hlt
hlt
jo
les
xor
xchg
mov
call
popf
or
test
add
mov
ror
sbb
jns
ret
imul
mov
in
add
stos
inc
adc
popa
cmc
mov
lods
push
lock
or
or
cmp
add
jp
mov
or
rolb
xor
and
orb
pushf
cmpsl
push
stos
movsb
popa
stc
push
mov
adc
mov
pop
inc
les
testb
hlt
xchg
jge
cltd
inc
je
mov
test
mov
out
jmp
jl
dec
decb
inc
dec
ret
std
sar
adc
pushf
scas
fimull
cmp
test
and
stos
push
pop
jmp
lea
mov
xchg
popf
or
loope
push
in
subl
fwait
mov
mov
sarl
adc
cmp
mov
pop
jb
ficoml
test
test
out
or
imulb
lret
jae
dec
test
sbbl
mov
loopne
inc
ljmp
and
xlat
popf
xchg
lahf
cmp
aad
lcall
jmp
jmp
lretw
insb
lret
stc
int
addr16
add
lods
sbb
aam
clc
aad
mov
inc
fwait
adc
fildl
enter
out
int3
shlb
and
xor
pop
mov
das
inc
pushf
ss
fimull
sub
sbb
xor
iret
icebp
pusha
call
adc
test
js
cmp
sbb
mov
and
aaa
mov
lods
fwait
stos
adc
mov
mov
inc
test
push
popa
add
and
fxch
clc
in
orl
movsl
add
gs
dec
inc
inc
inc
cltd
push
sbb
push
mov
sbb
cmp
in
bound
cmpsl
pop
mov
and
mov
and
sbb
rcl
mov
cmpsl
jp
xor
lods
arpl
jne
dec
pop
push
mov
mul
out
mov
add
xor
fwait
xlat
inc
or
or
jo
push
jmp
jns
lods
and
pop
adc
aad
ret
adc
sub
loopne
xor
scas
sub
adc
cld
cmp
ds
jp
jg
inc
loopne
mov
cmc
dec
int
dec
je
in
data16
sbb
sub
push
in
sub
jmp
fsub
dec
fs
push
jns
imul
jnp
xchg
xor
xor
jg
out
sbb
xchg
dec
je
mov
dec
xor
out
out
adc
lret
dec
dec
inc
idivl
pop
xor
in
dec
lds
cmp
xchg
in
popa
inc
jae
fiaddl
dec
mov
lret
hlt
and
mov
je
pop
jo
lods
or
rcrl
pop
in
sbbb
push
in
pop
jne
aaa
dec
jae
icebp
and
imul
adc
and
paddusb
xchg
pusha
lds
test
int3
push
jg
int
lods
pushf
add
sbb
mov
les
and
jbe
fwait
call
iret
ret
std
cs
mov
xchg
and
cmp
and
adc
xchg
ret
xchg
arpl
mov
xchg
cmp
ja
xchg
shrl
and
or
fwait
jns
ret
cmp
stc
lods
das
adc
or
inc
rol
jbe
cmp
aas
mov
call
insl
jb
nop
push
mov
ss
mov
cltd
and
repnz
xchg
outsb
fucomip
inc
sub
rcrb
or
mov
push
xchg
movsb
push
loop
sbb
add
or
mov
cli
mov
dec
mov
push
xchg
jb
dec
inc
or
cmpl
rorl
xchg
adc
int
imul
les
pop
sbb
les
enter
callw
mov
and
shlb
das
dec
cmp
pop
xor
arpl
and
xor
pop
mov
xlat
or
loop
mov
sub
add
roll
sbb
push
mov
inc
mov
scas
dec
or
aam
imul
mov
sbb
fs
pop
stc
adc
mov
inc
lods
pop
mov
test
mov
inc
jne
int
ret
in
mov
dec
or
mov
insl
cmp
dec
aad
bound
test
rcrl
shll
out
pop
sbb
gs
loop
pop
fsts
loope
xchg
xlat
clc
mov
aas
add
loope
ds
shlb
jo
or
test
push
pop
shrl
dec
mov
mov
loop
scas
movsb
test
pushl
insb
push
xlat
or
or
daa
add
lods
shrl
ret
mov
push
sub
cmc
int3
scas
rcrb
fisubrs
in
inc
push
aam
pop
add
jp
mov
xchg
mov
iret
inc
adc
pop
or
pop
jb
mov
adc
js
dec
xor
js
das
bound
inc
pusha
repnz
sub
mov
jo
dec
call
lds
or
not
jg
lods
sub
into
sub
clc
aas
pop
and
std
test
outsl
jg
inc
addr16
push
xor
cld
fidivrs
xchg
fs
out
pop
jne
push
pop
lret
and
push
adc
push
add
cli
jae
xchg
mov
jbe
xchg
xchg
xor
addr16
xchg
dec
pop
pop
das
sub
jecxz
sub
lods
push
mov
fisttpl
xor
sub
dec
inc
sbb
lds
fnstenv
cltd
stc
scas
mov
or
nop
xchg
roll
mov
sub
ja
ret
lods
cs
xor
fbld
icebp
call
push
ficoml
inc
daa
jge
insb
or
pushaw
sub
int3
lret
and
mov
cmpsb
shlb
leave
push
push
lahf
mov
ja
ja
in
mov
mov
loop
aam
or
sub
push
notb
add
adc
rcrl
xchg
and
jle
sub
mov
jmp
outsl
add
aaa
rcrl
push
mov
rolb
movsl
sub
notb
pop
mov
int3
dec
add
sub
aaa
in
jne
pop
ret
push
xor
lret
inc
mov
ret
sub
mov
cmp
xor
insb
pop
loop
pop
push
outsl
pusha
jb
mov
arpl
call
dec
push
push
test
andl
or
imul
pop
fildl
mov
or
ret
ds
inc
sbb
hlt
in
inc
push
xor
xor
push
data16
xchg
das
lret
push
insl
pop
movsl
lds
js
shl
or
xor
cmp
shlb
dec
sti
adc
inc
mov
orl
out
ds
sub
mov
cmpl
lods
out
movsb
xchg
mov
dec
movsb
cli
mov
adc
xchg
shlb
mov
out
sbb
xchg
call
and
adc
sbb
addr16
adc
push
jmp
sbb
ds
and
ja
les
or
aad
repnz
rcll
repz
jle
ja
notb
mov
add
fst
aas
daa
push
or
mov
mov
fidivs
dec
push
pop
loopne
pop
sub
push
cmp
je
rcll
lahf
xchg
push
jle
jp
sub
cmp
ret
sbb
loopne
shll
xchg
pop
jbe
mov
dec
aaa
and
jl
pop
lret
or
jbe
std
fmul
xor
popf
orl
loope
lahf
pop
mov
roll
into
add
adc
sbb
adc
pushf
inc
jecxz
into
ss
int3
fsts
or
cmpsb
dec
adc
insl
or
mov
lahf
in
xchg
sub
push
inc
lods
fistpll
xor
inc
cs
repz
push
jle
cltd
movsl
sarl
out
jae
aas
out
xchg
sub
frstor
mov
movsb
xor
cmp
mov
test
cmc
call
lret
dec
xor
iret
adc
xchg
sahf
fisubs
add
push
adc
inc
dec
dec
mov
mov
aad
sub
into
adc
das
jge
xchg
hlt
popf
pop
cmp
sub
test
and
bound
sahf
push
out
xor
ss
inc
pop
std
sarb
inc
mov
addr16
xor
xchg
bound
orb
dec
cmpsb
sbb
dec
xorb
mov
js
cltd
icebp
ss
mov
adc
sub
xchg
jne
call
repz
cmc
aam
loop
cs
call
add
inc
push
mov
push
icebp
sbb
jg
push
jge
mov
jb
cli
dec
cmp
and
xchg
sahf
xchg
cli
sub
lcall
cmp
out
adcb
ljmp
jno
jns
push
mov
shrb
inc
inc
mov
jle
jl
cvtpi2ps
imull
mov
in
or
lahf
or
kmovb
popf
push
ljmp
xor
sarl
inc
and
inc
push
call
jno
sbbl
cmp
mov
cld
pop
in
mov
pop
in
into
push
mov
and
outsl
scas
ja
sbb
daa
push
stos
shl
mov
lods
sub
or
xor
add
push
mov
aas
fisttpl
je
xchg
push
dec
inc
jmp
fsubs
add
sahf
pop
enter
std
lock
add
pop
pop
xchg
adc
es
mov
xchg
test
fwait
xchg
int
ljmp
in
xchg
and
mov
loop
dec
fcoms
fdiv
andb
sbb
mov
add
test
add
test
lcall
cmp
xchg
outsl
mov
ds
adc
push
jo
pop
inc
sub
xchg
push
mov
fnstsw
jle
inc
daa
imulb
shlb
inc
jb
pop
push
leave
ret
jo
adc
leave
aam
aam
fistps
sbb
jecxz
repz
test
pusha
roll
gs
mov
hlt
add
sub
lea
push
pop
push
sub
lcall
add
movsb
ds
bswap
in
sbb
ret
jns
and
pop
push
push
lahf
or
inc
notl
jg
cmpsl
or
jne
or
mov
sub
jbe
jp
xchg
inc
cs
aaa
push
sbb
enter
xor
cmp
scas
pop
jecxz
repnz
cmp
pop
mov
lods
xor
loope
leave
sbb
test
mov
test
in
mov
fistpl
ja
inc
push
popa
ret
jns
add
ss
sub
inc
ds
push
sbb
jno
push
adcl
sbb
push
in
fstpt
outsl
ja
lahf
aad
pushf
mov
movsb
mov
jne
pop
je
mov
push
xchg
rolb
push
leave
push
arpl
mov
lea
iret
dec
xchg
mov
xor
out
and
sbb
xor
es
push
or
cld
cmp
stc
ficomps
loope
xor
or
or
mov
bound
xchg
scas
cli
and
sub
cmp
mov
and
lret
dec
mov
lret
pop
mov
jl
pusha
shl
aam
cmp
xchg
cmc
scas
fs
leave
cmpsl
adc
test
icebp
fdiv
stos
insb
cmpsl
cmc
incb
out
fisubrl
leave
rcl
imul
push
or
lods
int
cld
pop
mov
sbb
mov
adc
aad
pop
in
push
lmsw
push
push
stc
push
fiadds
inc
popf
xchg
rcll
adc
xchg
xchg
ljmp
sub
mov
fdivl
push
bound
popa
out
cltd
mov
lahf
mov
cmp
mov
es
outsl
push
or
insl
jbe
cmp
jle
popf
adc
rcrl
mov
xchg
mov
pop
pop
mov
inc
jge
loopne
ja
xchg
cs
add
or
adc
dec
idiv
mov
call
dec
inc
mov
dec
dec
xchg
mov
das
out
imul
pop
mov
jecxz
ret
cli
scas
push
pop
adc
shll
outsl
adc
ss
jmp
int3
insb
or
movsb
testb
pop
ret
cmpsl
add
xor
sub
in
rcl
shll
sbb
jl
insb
flds
cltd
mov
pop
and
mov
jmp
inc
jg
add
lret
pop
jb
fldz
sub
fsubs
dec
xchg
add
cmpsb
cmpsl
push
cmp
jns
xor
out
lret
jns
ja
mov
fdivl
adc
push
out
push
aam
push
ret
outsb
mov
fisubrs
popa
lret
lahf
mov
xchg
std
lahf
pop
mov
xor
insb
cmpsl
sbb
in
or
lret
addl
movsl
in
popf
js
push
outsb
scas
jl
or
fisubl
xlat
xor
das
lret
push
smsw
mov
mov
popa
jns
sarl
mov
jno
push
lds
jbe
mov
in
xchg
gs
hlt
lret
aam
xchg
test
mov
mov
sti
or
popa
mov
mov
sbb
jmp
xor
test
adcb
loopne
repz
loop
add
addr16
pusha
cmp
lcall
lock
fisubrs
jno
cmpsb
mov
mov
dec
dec
in
sbb
popa
adc
ja
out
ss
jae
push
add
fldcw
mov
loopne
testl
mov
je
call
cs
or
add
in
aam
cmp
sbb
xchg
fadd
sbb
or
add
lret
dec
push
insl
adc
sub
mov
cs
es
inc
sub
xchg
mov
gs
scas
xor
jg
xchg
scas
inc
and
jmp
fwait
sbb
jge
lds
add
or
xchg
out
mov
scas
movsb
cs
push
or
mov
dec
nop
push
cwtl
xor
int3
fwait
sub
enter
sbb
cmp
nop
sub
cmpsl
in
cmp
mov
pop
sbb
fwait
divb
xchg
cmp
xchg
dec
scas
and
pop
imul
adc
test
jns
cmpsb
push
adc
testl
aas
mov
test
lea
pop
sti
add
ret
and
jp
jle
adc
jl
pop
cmp
int
push
jg
and
into
add
adc
inc
and
xor
push
inc
dec
mov
sbb
cli
sub
stos
ret
adc
inc
xor
shr
out
repz
mov
jne
push
stos
xchg
pop
pop
insl
push
push
in
popl
cmpsb
adc
or
test
ss
and
xchg
aad
dec
dec
jno
push
popa
pop
adc
xchg
sahf
in
jl
sbb
jo
pop
scas
add
out
add
icebp
pop
loop
push
xchg
mov
mov
cs
add
jg
fistps
cmp
push
xchg
ret
mov
xor
adc
xchg
lahf
inc
in
and
xchg
jmp
aas
jmp
repz
ljmp
mov
out
mov
ljmp
push
or
mov
leave
mov
sbb
inc
pop
outsl
dec
pop
mov
fld
and
dec
dec
arpl
cmp
mov
test
orb
adc
mov
sbb
and
in
cmpsb
xchg
inc
sbb
mov
sbb
ffreep
adc
inc
lods
dec
sbb
mov
outsl
psllq
sbb
popf
ds
push
sbb
icebp
loopne
cmp
bound
or
xor
jg
push
jno
out
insb
and
jg
adc
adc
push
pusha
pop
test
dec
stos
mov
inc
jle
testb
sub
cmp
push
mov
into
pop
insb
adc
inc
and
xchg
sbbb
lods
mov
sbb
sbb
nop
sti
ss
mov
xor
sti
and
cmp
popa
mov
out
ret
cmpsl
jno
scas
xchg
nop
nop
rorl
testl
ret
popf
mov
push
ds
fwait
cltd
jge
add
imul
push
fiadds
icebp
mov
dec
data16
ret
insl
popa
dec
xor
push
outsl
shrb
jp
dec
mov
aaa
inc
xchg
data16
ret
xchg
pop
inc
pop
pop
push
dec
adc
mov
sahf
mov
incb
mov
cmp
add
xor
pushf
aas
aad
jno
add
aaa
addr16
stos
shrb
inc
out
add
xor
push
addr16
call
or
mov
lods
sahf
and
jo
xorb
xchg
pop
or
xchg
push
cs
mov
pop
sarl
mov
mov
mov
pop
dec
xor
int
xchg
push
mov
mov
insb
push
pushf
fwait
sub
xchg
pop
xchg
das
stc
xchg
pop
loop
adc
xchg
ss
imul
mov
push
mov
fdiv
push
push
call
push
imul
pop
inc
cmpsb
cmpsl
cmc
adc
lock
enter
loopne
cld
data16
push
frndint
incl
sub
jne
mov
sbb
mov
mov
xlat
lret
loop
inc
and
mov
sbb
and
adc
out
fdivl
jo
outsb
test
fiadds
push
stc
aam
pop
mov
cmc
cmpsb
pushf
aaa
dec
xchg
icebp
or
pop
xor
push
adc
popl
and
mov
aad
sbb
jo
dec
jbe
mov
xor
push
divl
push
pop
push
or
in
addb
je
loop
sti
lcallw
jne
data16
inc
push
xchg
lock
mov
pop
add
loopne
lret
or
imul
loop
jle
mov
dec
enter
push
sbb
jle
in
sub
sub
negb
dec
or
lds
xlat
inc
imul
bt
std
pop
shll
testb
dec
xor
mov
push
push
inc
push
push
add
into
inc
int3
mov
inc
enter
pop
fucomip
mov
mov
bound
xchg
push
mov
or
pop
insl
addr16
lods
and
mov
lcall
push
cmc
das
icebp
xchg
test
push
add
stos
lods
pusha
xor
testb
loope
movsb
lcall
lods
sub
lds
jecxz
cli
and
mov
pop
jg
and
pop
loop
out
ds
mov
mov
mov
sub
clc
jp
xchg
dec
stc
push
jecxz
xor
ljmp
jmp
insb
jno
ret
lods
mov
ret
sub
mov
cmp
testl
pop
aam
arpl
cmp
add
and
out
or
or
mov
je
pop
jl
adc
push
js
mov
adc
cmpl
and
fsubrl
sbb
mov
fmul
arpl
sbb
outsl
sbb
les
dec
cmp
cltd
xor
stos
or
dec
lods
push
jmp
jo
xchg
rcl
lret
xor
mov
inc
push
adc
popf
cld
sahf
pop
inc
ret
xchg
sub
add
scas
sub
pop
popa
jbe
leave
addr16
mov
sbb
pop
mov
pusha
inc
inc
repz
inc
fstpl
sahf
les
das
inc
loopne
shll
cmp
rcll
daa
jp
pop
lea
ret
sub
add
leave
push
sbb
sub
fdivs
out
imull
xor
mov
and
or
into
push
mov
lcall
mov
xor
sub
fcomps
int
subb
imul
jp
lods
or
inc
pop
mov
mov
xchg
inc
addr16
lret
fisubrs
mov
lock
icebp
adc
jecxz
shll
cli
fadd
ret
negl
sbb
jb
adc
icebp
pop
xor
ffree
scas
push
sbb
mov
es
int3
inc
shlb
out
cmp
rol
stos
pushf
sbb
push
xchg
stos
ja
cmp
xor
cmpsb
dec
js
push
out
imul
shlb
and
cmp
mov
mull
inc
cwtl
sub
rorb
int
dec
dec
add
fwait
aam
dec
das
jge
pop
push
mov
mov
dec
jae
ja
cmpsl
icebp
inc
icebp
dec
cli
orl
or
notl
mov
lret
adc
or
xchg
inc
xchg
aas
dec
mov
mov
and
cmpsb
scas
fs
sbbl
sbb
inc
pop
scas
lahf
mov
and
adc
pushf
push
xlat
adc
call
pop
xchg
inc
hlt
fcompl
xor
sahf
pusha
jno
je
cmp
mov
or
cmpsb
dec
inc
sahf
out
outsb
inc
pop
pop
es
fs
jne
iret
stos
xchg
sub
cmp
and
dec
inc
es
lcall
sub
mov
pop
sbb
out
and
xor
leave
in
js
jb
sbb
andps
aam
ja
dec
insb
mov
pop
xchg
or
dec
out
enter
sbb
cs
cmp
xchg
mov
xor
lret
es
outsb
out
mov
xchg
xorl
jle
lea
fsubrp
or
fcmovnu
inc
popf
jmp
mov
mov
aam
lret
popa
jns
jb
sub
adc
and
iret
or
leave
xor
js
sub
mov
dec
outsl
sbb
stc
fdivrp
inc
dec
aad
xchg
imul
sub
sub
sarb
lahf
stos
push
sti
mov
dec
inc
pop
call
mov
cmp
cli
lea
xchg
and
mov
xchg
popf
xlat
pop
fmul
add
adc
mov
fsubs
jns
les
or
call
sub
ja
in
fcoml
push
sahf
cmc
dec
sti
stc
sbb
and
ja
lcall
packssdw
cmpsb
pop
jmp
or
sub
fnstsw
dec
sarb
or
pop
ss
in
js
pop
xchg
call
daa
loopne
ficoml
ljmp
cmp
pop
cmp
dec
hlt
xor
fisubl
adc
mov
daa
pop
cmp
test
cld
dec
mov
lahf
lods
fsubl
wrmsr
pop
pusha
shll
dec
jge
ljmp
aam
aas
cmp
fdivrs
xor
je
les
mov
sarl
cmp
and
inc
inc
push
adc
add
pop
and
push
cld
test
add
mov
fdivrs
xchg
adc
cmp
stos
fadds
test
dec
and
outsb
push
push
add
aas
xlat
lods
hlt
xor
les
or
push
data16
mov
cmp
push
nop
sub
js
sub
insb
loopne
push
dec
sahf
mov
in
sub
outsb
mov
fimull
jp
shrb
stos
lods
push
sub
add
inc
or
enter
ljmp
enter
xchg
cs
out
clc
add
cmpsl
xor
xor
xor
add
add
jno
xlat
addr16
and
xor
adc
inc
or
mov
mov
test
mov
cmpb
inc
arpl
jns
mov
and
sbb
mov
int3
stos
cltd
ja
and
sub
xor
jl
popa
in
mov
mov
inc
daa
jae
and
adc
arpl
loop
jl
in
out
sti
es
and
mov
dec
push
in
and
pop
cmp
sbb
repnz
stc
dec
adcl
bound
xchg
roll
in
pop
outsl
mov
push
out
int
xor
ljmp
filds
mov
dec
js
mov
mov
mov
mov
xchg
push
ret
ds
testb
inc
arpl
cltd
inc
sub
jecxz
das
dec
into
push
xchg
stos
cmp
adc
and
in
push
imul
lea
inc
das
jae
mov
fneni(8087
cmp
inc
or
sub
es
dec
das
jnp
cli
arpl
pop
jmp
int3
fldt
xor
mov
xchg
pop
push
shrl
sub
pusha
dec
xor
adc
outsb
mov
cli
decl
enter
dec
jl
jmp
adc
push
pop
outsb
jbe
fistl
sbb
cmp
int3
xchg
dec
xor
pushf
jns
mov
sbb
mov
add
out
xor
ret
xchg
sub
sbb
lods
aad
inc
inc
or
ret
jne
cli
stos
or
mov
push
jns
aas
fadds
fiadds
lea
sub
inc
jmp
fsubs
mov
pushf
inc
rcrl
addb
push
orl
xor
imul
loopne
adc
jne,pt
push
mov
mov
je
pop
and
pop
outsb
lods
fadd
pop
add
es
lods
push
int3
dec
xchg
push
stos
ja
sbbl
enter
cli
sbb
ret
out
fisttpl
inc
or
imul
lds
dec
clc
aam
loopne
jg
push
dec
push
sub
cmpsl
fsts
or
fistpll
mov
call
rorb
xchg
mov
add
and
xor
mov
xchg
or
xor
mov
xor
and
cmc
test
aam
pop
imul
lahf
lahf
xorl
xchg
sub
xlat
pop
push
sahf
or
xchg
or
dec
in
sbb
cs
push
push
pop
lods
shll
aaa
jno
add
and
jecxz
outsb
les
push
neg
jp
mov
mov
push
data16
push
cmp
xor
insb
mov
das
ret
xchg
fst
xor
test
sub
mov
jmp
movsb
pop
je
add
xlat
test
dec
fwait
ret
inc
pop
jnp
lods
outsb
loopne
cmpb
mov
stos
negl
test
mov
scas
jmp
aaa
dec
jp
push
aam
inc
sub
daa
cmc
add
lods
imul
jg
es
out
sbb
mov
jecxz
fcmovnbe
mov
push
xor
or
cwtl
dec
mov
addb
adc
mov
ds
inc
test
pushf
lock
inc
sar
lods
in
es
push
stos
sub
push
ret
or
das
das
mov
and
pop
push
dec
icebp
hlt
fidivs
fsubp
fimull
sbb
imul
cld
cmp
fsubl
bound
jns
push
lret
outsb
and
jmp
into
pushf
cmp
add
mov
push
dec
daa
hlt
xchg
cmp
xchg
negb
in
sbb
test
int3
jnp
add
test
pushf
sub
pop
push
ss
xchg
lahf
xchg
and
cmp
mov
ss
mov
out
push
cmp
and
sar
add
pop
or
mov
out
or
mov
popa
mov
mov
jl
sbb
mov
iret
sub
lcall
popa
add
mov
test
xor
test
test
mov
stos
imul
sub
xchg
mov
push
push
mov
cmc
sub
mov
pop
jle
loopne
adc
cmp
sbb
daa
mov
mov
nop
mov
out
jns
push
dec
aam
shl
jbe
test
or
data16
mov
jecxz
leave
shlb
ds
xor
insb
jmp
jb
fistl
dec
addr16
hlt
mov
cmpsl
push
inc
and
push
jnp
pop
xor
pop
cmp
xchg
stos
push
jle
sub
xchg
aas
leave
or
in
out
call
adc
inc
ffreep
aad
insl
inc
and
leave
pop
rcr
push
shr
cmpsl
orl
ljmp
xchg
lods
and
pop
mov
xchg
xor
stos
xor
test
cmp
je
insb
mov
pop
int
les
out
ss
cld
mov
cmpsb
scas
dec
stc
xor
jns
das
inc
cmp
or
mov
mov
xor
add
jge
pop
add
sub
popa
fisttpll
test
add
jge
adc
cs
xor
scas
mov
push
sub
push
pop
loope
jno
pop
and
pushf
inc
dec
mull
push
jnp
popf
aad
mov
ds
mov
sbb
mov
daa
sbb
jg
int3
adc
int
sub
inc
xchg
stos
add
or
sbb
sar
xchg
int
addr16
test
in
sbb
push
push
aad
dec
xchg
mov
cs
outsb
jg
bound
jne
xchg
or
mov
xchg
mov
loopne
jno
push
pop
lret
adc
jecxz
jmp
dec
outsl
jge
dec
clc
pop
mov
pop
sarl
inc
xchg
xor
popl
and
and
push
mov
and
test
or
shrl
mov
out
pop
fistpl
jg
push
mov
sbb
jmp
jecxz
cld
or
mov
jb
adc
sub
out
add
movb
cmp
fs
add
pop
stos
push
pusha
cld
imul
shlb
lea
in
cld
cltd
mov
mov
orb
ret
fsubrl
push
jmp
sub
inc
cwtl
lea
std
int3
pop
jo
addr16
mov
movsl
es
cs
pushf
loope
jmp
test
push
dec
dec
mov
push
push
inc
jbe
cmp
push
in
dec
bound
popf
xor
enter
rcrl
shlb
sbb
jns
icebp
call
sub
xor
jp
xor
jns
pop
adc
xchg
or
sub
pop
setns
add
sbb
mov
je,pt
mov
push
cli
adc
in
mov
dec
popf
xor
xor
pop
pop
andb
mov
dec
mov
dec
add
stos
pop
jl
lods
mov
cmpsl
icebp
adc
repnz
add
adc
mov
ss
in
jmp
push
xor
xchg
cmp
xor
dec
push
sarl
in
repz
inc
rclb
daa
in
lock
jle
mov
xchg
popf
xor
push
lcall
into
sbb
cld
cmp
xchg
adcl
cmp
call
clc
std
sarl
mov
xchg
test
pmaxub
cmpsb
idivl
idiv
inc
adc
outsl
das
mov
or
cmp
add
test
push
and
mov
lods
lahf
ret
sub
outsb
je
push
jmp
adc
mov
push
jbe
sub
add
xor
pop
adc
xor
sahf
cmp
lock
fiadds
add
pop
in
cmp
adc
mov
push
mov
pop
pop
fwait
imul
je
fcoms
push
imul
ret
sarl
push
xchg
test
push
xchg
mov
dec
enter
lret
inc
adc
jmp
sbb
rol
sub
sub
lcall
push
sub
pop
mov
addr16
out
adc
pop
add
push
mov
rclb
call
push
inc
js
dec
jae
pop
pop
jge
outsb
jb
nop
or
add
filds
mov
jge
dec
fs
xorb
out
cltd
dec
fnstenv
movsb
lea
dec
lock
jae
sahf
fidivs
xchg
xchg
lods
mov
cmc
call
xchg
mov
sbbl
scas
and
out
dec
dec
mov
mov
stos
es
outsl
mov
gs
xor
adc
fwait
mov
pop
test
push
or
cs
scas
addr16
push
sbb
dec
xor
clc
das
xor
xor
imul
jns
push
sbb
ja
lahf
add
xor
mov
loop
cli
or
sbb
movsb
mov
test
mov
or
or
das
daa
mov
and
mov
cmc
pop
jnp
cmpsl
mov
inc
cwtl
out
aad
les
add
jg
imul
arpl
mov
out
cmp
add
divb
sarb
or
cmp
adc
sub
add
pop
cli
sbb
xor
xor
cltd
pusha
das
loopne
add
pop
shr
ret
js
mov
sub
das
inc
mov
insb
loop
jns
movsb
leave
fwait
sbb
sbb
xchg
lods
pop
mov
push
out
pop
mov
scas
in
xor
cmpsl
adc
lods
int
or
fistpll
pop
ss
testl
pop
stos
movsb
pop
lods
pop
xor
and
lods
in
lea
cld
xor
mov
loope
stos
jg
jl
out
mov
pop
dec
cmp
pop
es
pusha
fdivrs
loop
int
mov
mov
xchg
or
stc
xchg
pusha
jl
stos
pop
mov
inc
pop
iret
daa
mov
lret
daa
lcall
dec
jb
out
sahf
add
dec
xor
or
push
loope
ret
in
jo
ljmp
mov
jbe
das
imul
mov
hlt
lea
and
jle
jg
jb
cmc
rcrb
xor
inc
popf
ds
lods
adc
xor
xor
popf
dec
out
lods
cmpsb
hlt
cmp
adc
pop
stos
fldl
fmull
call
rcr
hlt
insl
shr
lods
dec
dec
jns
movsb
mov
and
imul
dec
ja
les
adcl
loope
mov
xor
dec
jae
call
loope
fcomi
out
and
stc
icebp
inc
and
out
mov
popf
push
jae
jg
mov
cmp
adc
or
cld
adc
xchg
xchg
xorl
lret
mov
jae
das
mov
aam
lea
roll
jnp
push
push
arpl
add
lahf
call
dec
dec
fists
decl
and
mov
inc
and
pop
add
add
int3
pushf
add
cmp
adc
out
pop
mov
int3
ret
ret
jecxz
sbb
add
mov
stc
and
aas
mov
popf
cmp
rorl
sahf
ljmp
popa
stc
xor
rcrb
and
inc
mov
nop
decb
mov
and
xchg
arpl
fldl
pop
push
fwait
xor
pop
add
stos
dec
lret
jo
sub
icebp
push
pop
xor
nop
dec
ficompl
inc
jp
cltd
cmpsb
and
jl
push
fwait
movsl
cmc
jecxz
test
rcl
enter
lds
js
leave
loopne
ds
push
or
aam
cmp
push
mov
cmp
bound
aaa
jbe
inc
repz
mov
sbb
sbb
imul
out
daa
jo
sbb
pop
scas
jnp
iret
test
add
mov
daa
push
filds
bnd
xor
movsl
repz
sbbl
adc
mov
imul
sbb
xchg
jno
enter
aam
sbb
enter
lea
jecxz
pop
pop
sbb
or
push
ret
jl
fmul
pop
sub
xor
dec
mov
insb
pop
mov
or
ss
inc
mov
lods
punpckhdq
ss
repz
cmp
push
stc
rcrl
sbb
jecxz
mov
jnp
push
pop
sub
dec
rep
je
cmp
hlt
push
mov
mov
push
gs
addr16
test
test
loopne
mov
inc
test
add
mov
jp
aas
mov
xor
outsb
jle
or
mov
cmp
bound
pop
fldl
cmpsl
adc
in
shrl
cld
ljmp
sub
and
xor
out
stos
adc
addr16
daa
les
mov
prefetchw
or
out
jg
fildll
dec
jle
inc
jbe
push
lahf
and
push
inc
loope
loop
mov
outsb
shrl
movsl
inc
inc
roll
cli
mov
mov
fwait
cli
icebp
and
shrb
dec
in
cli
fisttpll
fisttpll
sbb
lahf
mov
test
inc
adc
and
lcall
cmpsl
test
aam
shll
outsb
aas
fimuls
cmp
cmp
lret
xchg
or
aas
and
frstor
push
cmp
pop
sub
in
mov
inc
neg
sub
fnsave
push
lret
addr16
sub
test
cmp
jmp
jmp
leave
dec
sub
out
pop
push
cmpsl
add
lock
or
out
cwtl
movsb
pop
cmpsb
jge
pushf
lds
xchg
xchg
loope
xchg
jl
lea
xchg
sbb
add
dec
getsec
dec
ds
pop
lds
ja
mov
frstor
push
sbb
stos
mov
push
pop
add
xchg
fdivrp
xlat
ds
aad
outsb
arpl
sbb
mov
pop
pop
mov
and
mov
xor
hlt
or
add
test
sub
shr
shll
xor
push
nop
fcmovbe
out
push
sbb
scas
in
push
testb
adc
jns
or
inc
adc
es
loope
cld
cmp
jno
int
rolb
in
int
rcll
mov
xchg
xchg
fisttpll
xor
pop
mov
lret
or
dec
inc
iret
pop
stos
jl
hlt
setle
push
fwait
push
js
fiaddl
sbb
out
int
cmc
stos
int3
movsb
inc
xchg
pop
dec
lret
sbb
std
sahf
repnz
push
mov
addl
gs
loope
daa
jnp
cwtl
pop
mov
out
xchg
int
cmpsb
aas
xor
shr
call
and
mov
dec
or
arpl
xchg
insb
aad
sub
pop
stos
mov
cltd
pop
icebp
sub
cmp
arpl
mov
sbb
inc
mov
cmp
lret
ja
lea
xchg
or
mov
jg
jmp
or
popa
and
jb
sar
mov
jle
xchg
adc
mov
add
jns
xlat
loope
popf
scas
aad
pop
sbb
dec
dec
pop
adc
cmp
or
xchg
ret
lahf
shr
cs
fucomi
add
pop
mov
mov
fs
push
cwtl
loop
jb
xchg
or
pop
mov
cmp
or
jmp
and
das
cmp
sub
mov
push
stos
fs
or
shlb
inc
jno
data16
xor
mov
sar
call
popf
inc
cwtl
outsl
movsb
mov
jge
xchg
cmp
pop
xchg
or
cmpsb
movsl
mov
add
cwtl
out
std
or
pop
add
xchg
in
jnp
push
fdivs
or
sbb
cmpsl
arpl
and
xchg
sbb
jecxz
into
xchg
daa
add
testl
div
pop
jl
jbe
pop
and
cmp
jp
rcll
adc
std
sub
push
js
cli
sub
adc
int
lods
call
mov
xor
test
out
imul
push
and
hlt
rcll
cmp
jno
in
stos
mov
js
mov
imul
outsl
or
mov
jmp
addb
frstor
scas
int3
scas
push
or
xor
pop
mov
jno
testl
js
shll
pop
or
dec
xchg
loope
jns
aaa
stc
pop
movsb
je
cmp
mov
nop
cmpb
mov
sarl
xchg
cmp
cltd
push
push
cwtl
aas
and
mov
xchg
adc
mov
pushf
imul
into
cmp
data16
shlb
mov
and
adc
push
aaa
imul
inc
lds
sub
mov
inc
insb
jb
and
or
shlb
es
mov
repnz
rcl
jp
sbb
adc
inc
rcrl
mov
in
gs
lret
xchg
mull
mov
divl
mov
xor
inc
mov
loop
mov
sub
add
dec
das
test
out
cmp
cld
mov
mov
push
jge
stc
mov
int3
add
adc
mov
mov
inc
popf
and
push
nop
pop
xchg
ficompl
sub
mov
jbe
hlt
enter
dec
jae
jnp
push
or
lods
lock
cmp
pop
dec
shlb
fnsave
xor
xchg
jge
push
adc
xor
cli
inc
arpl
xor
fsubrs
imul
shrl
hlt
jnp
pop
pop
mov
cwtl
imul
rorb
sub
gs
ja
mov
jae
push
enter
sub
repnz
mov
jne
repnz
push
pop
mov
mov
mov
testl
punpcklwd
add
out
push
das
inc
mov
out
push
inc
jb
adcb
sti
in
fnstenv
scas
xchg
sysenter
sti
push
sbb
sub
shlb
mov
movsb
jle
or
mov
int3
shrl
adc
gs
test
nop
andb
fdivs
xor
or
mov
jl
fadds
stc
mov
sub
cld
jg
sahf
adc
xchg
cmp
in
rclb
pop
test
mov
mov
pop
lock
push
outsb
insb
aam
xchg
clc
cmpsl
pop
das
inc
das
add
add
pop
inc
push
and
jle
sub
adc
dec
push
add
lret
push
xor
mov
or
stos
lcall
dec
inc
f2xm1
in
out
mov
cmpb
mov
shrl
and
sub
jp
pusha
data16
xchg
sahf
sbb
mov
xchg
xchg
faddl
mov
mov
mov
fwait
pop
mov
idivb
jno
outsb
xchg
mov
orb
push
punpcklwd
add
inc
xor
mov
loopne
ljmp
ss
out
in
mov
mov
fdivl
jp
or
xor
cwtl
icebp
dec
loop
test
pop
or
stos
mov
mov
add
pop
xor
mov
pop
gs
mov
mov
sub
add
xchg
sbb
pusha
test
lret
stos
cld
lods
daa
mov
push
ss
jp
cmpb
push
fidivl
daa
or
mov
mov
scas
push
sti
mov
les
add
clc
repnz
or
dec
mov
push
subb
mov
adc
mov
aaa
insb
aas
cmp
sbb
clc
lret
fsubs
lods
into
ss
mov
lds
xchg
add
or
sbb
notl
ret
mov
xor
push
scas
gs
cmp
dec
mov
enter
cmp
jnp
mov
sub
lahf
loope
push
addb
or
adc
or
scas
xchg
aad
jg
sbbb
push
sub
movsl
cmp
outsl
test
ret
scas
scas
dec
dec
dec
out
pushf
scas
nop
jmp
xor
and
lea
xchg
adc
push
movq
roll
push
dec
lret
jns
addr16
clc
xor
mov
icebp
ret
push
dec
int
shrb
sub
pop
fmul
ss
ja
cmp
pusha
inc
and
add
fidivrs
scas
xchg
inc
cmpsl
das
test
out
xor
push
mov
xchg
mov
dec
and
jmp
cltd
pop
and
sbb
add
xlat
cltd
push
dec
mov
ffree
sub
push
push
push
mov
test
mov
jns
das
ljmp
xor
sbb
adc
scas
lock
int
mov
cmpsl
aaa
and
ret
fsubs
pop
leave
sbb
add
cmc
ljmp
lret
icebp
cmp
stos
int
fstpt
mov
mov
mov
cmovns
les
mov
mov
into
lcall
cmp
mov
mov
inc
fldt
les
fcoml
ds
bound
dec
mov
push
sar
mov
arpl
sti
jno
bnd
pop
out
es
sbb
cmp
rcr
leave
stos
fmuls
add
lds
outsb
repnz
sbb
sub
outsl
bt
pop
jmp
jecxz
gs
mov
mov
mov
dec
push
cli
mov
stos
insb
add
sbb
mov
adc
mov
into
mov
sbb
cmp
mov
cld
sbb
outsl
data16
jg
pop
in
jnp
pop
sub
in
out
sahf
test
movsb
mov
jae
mov
test
add
lret
mov
decb
test
and
leave
sub
or
xor
cli
jp
test
popf
mov
loope
jmp
dec
push
pop
lods
xchg
bound
and
mov
inc
stos
stos
inc
xor
lds
mov
out
inc
cwtl
imul
pop
mov
in
jb
js
pop
mov
lods
inc
inc
inc
imull
xor
pop
mov
jp
insl
sub
ficoms
pop
stos
jae
mov
data16
push
cmp
ss
xchg
movsb
dec
repnz
lea
inc
push
push
setne
aam
mov
out
test
les
dec
enter
cltd
test
or
es
push
ds
lahf
inc
lret
faddl
lret
lods
scas
sbb
ja
sbb
cmpsl
testl
gs
fisubs
cld
lcall
dec
cmpsl
test
push
jae
push
icebp
das
dec
pusha
ret
mov
or
ret
pop
in
inc
cmp
mov
shrl
dec
dec
js
sub
sub
arpl
jbe
xorb
shl
out
std
lcall
popf
imul
testb
das
mov
pop
pusha
popf
insl
cmp
cmpsl
mov
sub
jne
mov
js
xor
inc
xor
iret
movsl
push
lahf
dec
mov
pop
stos
mov
out
mov
popf
arpl
fs
imul
fnstsw
cmp
cmp
cli
sub
cmp
rcrb
insl
add
mov
sub
mov
insl
jle
xlat
scas
mov
icebp
pop
push
xor
outsl
xor
lret
xchg
xchg
mov
dec
sbbb
shlb
cmp
stos
mov
inc
mov
pop
cmp
shr
nop
popa
decl
popl
imul
push
add
sarl
push
xchg
inc
mov
jne
insb
mov
js
mov
icebp
mov
jne
push
adc
vmovaps
iret
mov
pop
jge
pop
inc
jmp
and
xchg
int3
jecxz
adc
sub
sub
add
lahf
scas
push
call
cmp
std
cli
inc
in
add
int
stc
cmp
cmp
pop
dec
xor
jle
xchg
xchg
mov
aam
stos
jo
push
dec
mov
inc
pop
aas
nop
out
adc
lods
pop
movsb
add
and
lods
call
hlt
mov
xchg
xor
incl
cmp
cmp
lcall
dec
aad
in
in
loop
ljmp
xchg
xor
xor
mov
or
add
mov
in
out
xchg
mov
pop
jp
cmp
stc
scas
and
add
rclb
fsubl
insb
pusha
hlt
hlt
in
in
data16
adc
jmp
scas
imul
lret
jne
adc
andl
inc
dec
int
cltd
mov
jbe
ds
push
repnz
mov
add
dec
jmp
mov
pop
outsl
and
dec
mov
mov
add
fcomi
andb
mov
cmp
pop
pop
push
ret
and
mov
push
cltd
adc
jae
ljmp
ret
leave
gs
jno
ret
imul
push
mov
pusha
test
inc
cmp
in
mov
jns
jnp
in
jge
mov
pop
loopne
push
popa
call
add
lahf
outsb
add
test
fimull
js
push
in
icebp
fnstcw
mov
mov
ret
out
mov
push
pop
in
outsb
jo
and
add
aam
adc
lahf
lock
jns
or
fsubs
mov
inc
jnp
leave
mov
mov
xchg
mov
sbb
fwait
xchg
idivb
stos
daa
push
daa
aaa
fsubrl
addl
ret
lds
decl
repz
rcl
das
push
popa
enter
dec
xchg
pop
push
test
xor
shr
jae
pop
sub
mov
gs
pushf
xor
pop
iret
xor
inc
es
mov
loop
adcl
mov
daa
daa
sti
mull
push
or
jecxz,pn
inc
movsl
enter
inc
add
fists
stc
xlat
lret
nop
mov
sub
push
pop
dec
xlat
xchg
inc
sarb
sbb
repnz
add
or
sbb
jmp
ret
movsl
rclb
imul
gs
insb
lds
sbb
inc
mov
or
or
cmc
jle
addr16
dec
dec
cmp
add
add
scas
mov
sub
mov
loope
mov
loop
ss
cltd
test
cmp
sub
fistpll
xchg
pushf
inc
adc
fadd
add
dec
enter
leave
into
jns
loope
ret
cmp
push
sbb
xor
scas
std
cltd
mov
add
call
jg
jb
addr16
lcall
inc
fiaddl
mov
adc
fsubrp
mov
sub
and
cli
mov
xor
cmp
sahf
mov
push
or
ja
fsub
mov
sbb
es
mov
push
and
push
mov
jecxz
or
or
add
sbb
push
imul
lds
stc
dec
aad
jle
sbb
fbstp
addr16
push
cs
js
insb
cmpsb
call
push
sub
or
nop
push
andl
in
xor
loope
push
lds
dec
sub
jp
mull
adc
and
adc
cltd
mov
mov
cmpsb
movsb
dec
out
push
aam
cmp
ret
push
and
jmp
and
pop
in
inc
icebp
fimuls
push
in
push
out
push
adc
daa
test
xchg
in
lock
or
loop
pop
sub
pop
jb
adc
add
iret
daa
clc
sub
cltd
sahf
cld
xorl
stc
movsl
pop
shlb
in
add
cmp
and
add
pop
out
addl
xor
sub
pushf
xchg
adc
rep
pop
dec
pop
push
push
and
es
pop
adc
mov
idivl
mov
aam
test
jo
repnz
push
lea
cwtl
mull
dec
enter
or
sti
cwtl
mov
js
mov
icebp
push
sbbb
jno
push
jecxz
push
out
stos
loopne
stc
cmpl
stos
add
into
add
fnstcw
or
aaa
sbb
aaa
mov
fisubrl
inc
or
mov
sbb
add
in
adc
mov
popa
cltd
inc
lret
jmp
mov
and
or
fldl
scas
ljmp
mov
mov
rclb
adc
xchg
dec
arpl
xchg
cmpsl
bound
and
mov
cmp
into
scas
outsl
mov
xor
pop
push
cmovg
mov
stc
test
mov
or
das
mov
adc
inc
mov
shl
rolb
iret
idivb
inc
dec
dec
les
cmpsl
ljmp
sub
fsubl
xor
test
xor
jo
or
and
pop
jnp
pop
paddb
mov
call
jne
adc
idivb
popf
push
movsb
test
cmp
xchg
or
jno
push
mov
or
test
movsl
sbb
pop
add
add
xchg
cmp
inc
sbb
mov
test
adc
mov
mov
jg
add
jbe
and
into
call
and
lcall
inc
insl
inc
mov
rorb
call
sub
in
and
mov
pop
dec
lahf
push
mov
repnz
add
cmpsb
sbb
mov
shr
add
inc
push
adc
or
int3
dec
or
movsb
mov
mov
outsb
ficoml
mov
xor
gs
in
jb
adc
imul
dec
mov
test
push
cmp
adc
in
and
imul
das
inc
loopne
xchg
pop
sub
sub
xchg
aad
sub
andb
cmpsb
mov
div
sub
or
push
sar
dec
stos
rcrl
push
mov
inc
je
les
push
pop
add
ds
jnp
fidivs
mov
mov
sub
cmp
out
adc
jne
shll
dec
test
cld
push
or
popa
and
mov
push
dec
out
sbb
sbb
jg
jo
cmp
pop
es
pusha
dec
adc
popa
shrl
mov
outsl
xlat
jo
cmc
mov
mov
dec
enter
hlt
es
jne
mov
sub
cmpb
out
ja
jmp
sub
rolb
mov
pop
or
inc
mov
or
push
test
xchg
inc
ljmp
inc
mov
cmp
lods
gs
push
sub
pop
fisubrs
dec
xlat
push
push
lcall
cwtl
xchg
dec
addr16
stos
push
mov
sbb
mov
loopne
add
fsubrs
mov
add
es
loop
pushf
push
inc
push
out
sbb
or
and
xchg
jmp
sbb
movsl
mov
punpckldq
push
enter
cmp
mov
bound
dec
out
or
scas
stc
xchg
sub
push
es
sbb
dec
push
lods
fwait
cli
push
int
mov
xchg
rcrb
lcall
sbb
pop
jne
jbe
into
pushf
fwait
sub
fcoml
icebp
daa
cmp
std
test
and
push
pop
rcr
mov
call
jl
iret
fnstenv
nop
stos
xorl
jae
pop
push
mov
fidivs
xor
lahf
mov
xor
sahf
cmpsl
and
sub
test
xchg
cwtl
mov
xchg
repnz
jne
sbb
push
cwtl
dec
cwtl
std
fsubrs
and
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
xchg
sahf
sub
popf
lret
jnp
test
repnz
dec
pop
les
mov
shlb
int3
aas
rcll
cwtl
cmp
push
mov
orl
jbe
pusha
roll
gs
idivl
pop
adc
leave
mov
push
jecxz
or
push
jecxz
fwait
ja
pop
push
int
inc
aaa
out
jbe
jno
mov
adc
ss
adc
in
jg
stos
mov
jns
dec
or
pandn
sbb
mov
inc
and
enter
xchg
sti
mov
je
mov
jecxz
lods
loop
and
andb
mov
adc
jae
inc
xchg
popa
icebp
or
xorb
insb
and
in
ficoms
lods
shr
pop
jb
jl
adc
xor
xchg
insb
xorl
inc
xchg
mov
jns
sbb
in
aad
cmpsb
cltd
push
jmp
jge
push
aas
jno
repnz
fistpll
into
cwtl
mov
lods
pop
xchg
inc
dec
mov
ljmp
arpl
xchg
insb
jb
lret
iret
das
leave
sbb
imul
push
adc
push
xchg
push
sbb
rorl
sbb
filds
sbb
ret
cltd
mov
mov
fmull
inc
add
dec
or
pop
add
insl
fs
out
gs
adc
or
repnz
mov
sbb
cwtl
mov
pop
je
ss
sbb
sti
scas
mov
ret
data16
clc
data16
or
jmp
xor
sbb
adc
out
mov
pop
mov
add
cmpsb
stos
jmp
testl
mov
mov
popf
mov
pusha
jns
mov
andl
mov
jo
cmp
or
jecxz
movsl
cmpsb
mov
xor
push
negl
cs
push
pop
stos
xchg
ret
mov
hlt
int3
mov
push
push
int3
jecxz
aam
fistl
push
mov
sub
dec
sbb
mov
xorps
ret
fcmovu
mov
cltd
and
or
mov
inc
sahf
mov
sbb
lds
push
fiadds
sti
repnz
jae
push
sar
into
jl
and
loopne
ret
repnz
je
xchg
jae
pop
ds
incl
andl
scas
xchg
fnstenv
cmp
daa
subl
and
mov
imul
and
in
or
or
loopne
mov
mov
daa
repz
jle
negl
addr16
push
mov
outsl
lret
lret
out
addl
test
adc
call
and
push
lods
popf
add
mov
lcall
aas
orl
cmp
je
lcall
jle
shll
hlt
dec
xchg
or
mov
jl
lahf
xlat
shlb
mov
jne
cld
cmp
mov
shr
jmp
xor
adc
popl
sub
push
jnp
daa
repz
ret
add
sub
push
pop
cmp
pop
es
insl
mov
push
push
js
daa
push
lea
pop
jle
incl
ret
int
ja
jecxz
aaa
out
sbb
stos
scas
and
mov
bound
pop
mov
aas
call
lds
repz
mov
adc
adc
rcl
jge
xchg
jb
or
jle
pop
es
inc
dec
scas
stos
bound
aam
ds
ss
sub
jbe
pop
aam
fucomi
adc
outsl
or
sub
das
xor
movsb
mov
and
jecxz
xor
lods
hlt
inc
rcrb
adc
and
xor
adc
cmpsl
cltd
incl
adc
inc
std
or
xchg
in
mov
xor
arpl
mov
test
and
push
jp
rolb
or
pop
adc
cwtl
mov
or
sub
push
in
mov
add
shll
or
sbb
fdivrl
cmpsb
fs
lret
pop
inc
adc
sub
fwait
push
call
insl
subl
lcall
mov
lcall
loop
sub
je
sub
sbb
pop
hlt
cmp
jno
jmp
test
jp
fcom
rclb
push
sub
das
inc
insb
dec
xchg
sti
mov
mov
js
stc
jecxz
jg
mov
xchg
sahf
sbb
jl
test
mov
loop
fisttpll
mov
push
pushl
in
push
mov
mov
outsl
imul
jns
jo
dec
sbbl
in
fs
add
mov
cmp
test
lahf
gs
xor
rorb
inc
int3
shlb
fisubrl
arpl
cmp
mov
jbe
nop
inc
int3
bound
call
movsb
pop
cmp
movsb
stos
fildl
dec
mov
inc
lret
les
imul
stc
or
push
cmpl
push
popa
leave
mov
push
mov
call
leave
cmp
stos
es
mov
lods
rep
push
movsl
outsb
das
inc
xchg
lret
inc
test
mov
inc
rep
xorl
es
daa
in
or
repz
ja
js
addr16
sub
rcrl
jp
mov
cwtl
xchg
xor
mov
test
je
fdivrs
push
cwtl
xchg
ja
mov
push
movsb
sbb
fwait
adc
jmp
jp
xlat
fisttpl
cmp
movb
xchg
jp
addl
xchg
mov
lret
fmull
dec
or
or
add
arpl
push
push
sbb
sbb
push
mov
decl
cwtl
fs
inc
add
nop
jbe
sti
push
leave
icebp
cmpsl
cmp
or
lock
mov
dec
cmp
and
sarl
sti
jns
leave
jo
lahf
jle
aas
loopne
das
cmp
jg
xchg
xor
add
hlt
jbe
dec
add
mov
sub
lret
mov
les
sbb
fwait
xchg
icebp
cmpsl
or
pushf
xchg
fmull
shl
push
aad
mov
and
add
cmp
shlb
popa
aas
fists
pusha
daa
insl
xchg
adc
lret
mov
pusha
inc
sub
lret
loop
ret
mov
loopne
jge
or
jae
and
jno
mov
cmp
rclb
popl
imul
dec
pop
xchg
pop
int
pop
aad
insl
fs
push
nop
cmpsb
lret
inc
mov
in
int3
cmpsl
pop
sub
hlt
popl
push
mul
lret
mov
lods
shlb
adc
inc
push
sub
cmp
clc
lcall
inc
pop
cmpl
fmul
movsb
mov
pop
push
aas
js
lea
fisubs
pop
out
dec
push
data16
icebp
dec
fs
nop
dec
mov
sub
lea
call
int
xor
sbb
sti
or
pop
sbbl
jmp
mov
mov
sbbb
test
fisubrl
dec
xor
in
mov
fs
dec
loope
xor
adc
sarl
aad
insb
adc
les
inc
pushf
xchg
pop
fiadds
push
aas
sub
jge
data16
jp
sbb
movsb
fmuls
int
movsb
pop
inc
cmpb
jbe
xlat
lods
jp
fs
clc
lock
and
mov
jg
je
insl
scas
adc
jne
stos
iret
out
jo
xchg
jno
imul
mov
pop
or
fsubs
and
pop
push
xlat
fcom
out
mov
mov
dec
fimuls
mov
nop
xchg
stos
dec
mov
cld
dec
sbb
mov
into
lods
outsl
or
xor
shll
popf
add
xchg
adc
arpl
sbb
cmp
inc
movsw
shlb
dec
in
movsb
lahf
ss
iret
mov
lcall
xor
popf
add
pop
popa
movsb
outsl
xchg
adc
add
fcomps
lds
fldln2
or
pop
test
mov
mov
in
sbb
scas
or
jp
out
lahf
push
dec
jne
stos
xchg
rcrl
mov
mov
ficomps
clc
jecxz
dec
out
inc
cli
and
add
sub
scas
addr16
pusha
xor
sub
flds
decl
hlt
jl
mov
lea
hlt
je
leave
bound
jl
pop
inc
jmp
sahf
test
pop
xor
pushf
stos
push
jl
xchg
fadd
add
and
mov
daa
jl
lods
mov
fs
push
scas
and
into
scas
or
sbbb
das
cs
in
loopne
xchg
push
pusha
adcl
movsl
add
mov
mov
pop
and
dec
dec
lds
push
push
arpl
adc
hlt
pop
mov
rcll
outsb
jae
test
inc
adc
push
and
or
pusha
mov
rcrb
mov
xchg
in
fs
js
sub
xchg
repnz
and
fsubp
xchg
sub
and
out
sbb
mov
faddp
push
mov
jnp
iret
or
fucomi
mov
sbb
ror
push
das
xchg
imul
bound
icebp
push
and
cwtl
dec
mov
imul
jb
loope
push
stc
call
sbb
mov
dec
idiv
sti
lret
jns,pt
mov
jl
jecxz
test
adc
cli
repnz
pop
xchg
or
mov
in
cmp
imul
xchg
inc
mov
inc
mov
ljmp
fwait
rcrl
icebp
aad
or
lea
enter
test
or
inc
ret
mov
into
scas
pushf
jo
xor
jbe
mov
fwait
push
enter
scas
add
movsb
jle
mov
jo
xabort
je
jmp
xchg
hlt
push
sub
cmpsl
lcall
xor
sub
mov
sbb
and
lcall
push
popf
or
repz
andb
les
std
sbb
sbb
adc
js
cltd
and
xor
mov
jg
lds
stos
out
fcomps
popf
jbe
xchg
push
ss
push
cmc
ljmp
cmp
lcall
cmp
jmp
repnz
sub
xor
pop
movsb
lods
test
push
xchg
sarl
into
xchg
pxor
jmp
enter
add
fcomi
test
insl
dec
adc
jp
lds
icebp
sbb
ret
push
test
xchg
rcll
lock
les
inc
imul
mov
fldt
inc
aaa
aaa
scas
cmp
gs
outsb
xchg
mov
insb
cmp
adc
jmp
pop
das
mov
imul
int
mov
loopne
mov
inc
fdivr
mov
cmp
and
pop
repnz
sub
inc
pop
roll
mov
jmp
mov
cs
mov
sub
sbb
cmpsb
aaa
addl
fnstsw
aam
je
and
adc
dec
jno
loope
lea
push
lahf
sbb
mov
jp
cmp
lahf
cs
mov
lock
adc
in
sbb
mov
leave
pop
cmpsl
or
jo
mov
iret
fldenv
cmpsl
and
bound
xlat
ret
cld
mov
cmp
jge
xor
insl
xchg
push
ss
adc
insl
pop
js
rorl
or
cmp
mov
inc
add
icebp
jg
inc
jmp
xor
adc
mov
mov
inc
xchg
mov
daa
jno
xchg
and
fstpt
cmc
imul
ret
push
lods
mov
pop
mov
mov
push
push
cmp
inc
or
das
push
mov
cmpsb
mov
add
inc
les
cmp
adc
ja
xor
dec
push
test
mov
fdivp
mov
sbb
movsl
cs
push
adc
clc
mov
inc
sti
rcrb
mov
fnstsw
adc
add
dec
pop
insb
pop
ss
mov
jae
mov
sbbb
out
not
mov
jl
pop
or
mov
rorb
addr16
in
or
mov
adc
jle
pop
movsb
and
dec
push
cmp
cmp
cmp
jecxz
push
mov
adc
daa
mov
pop
lods
fisttpl
mov
subb
leave
mov
ja
cmp
imul
nop
clc
adc
in
adc
das
popa
shl
push
push
jno
mov
add
aad
test
jmp
rolb
pop
fbstp
aaa
pop
sub
jns,pn
aad
dec
int
jno
cmp
cmp
fcoml
movsl
dec
ss
xor
leave
rcr
xchg
mov
xchg
dec
jns
dec
push
pop
xchg
aad
aaa
jecxz
mov
pushf
shl
xor
or
xlat
fcoms
js
mov
je
inc
add
jp
loop
lcall
cmp
sub
mov
movntps
and
out
nop
sbb
or
fisubs
leave
xor
js
jno
sub
cmp
push
dec
mov
add
sti
mov
sbbl
mov
pushf
mov
mov
mov
cmpsl
sbb
jge
dec
in
lods
fisttpll
sub
inc
jmp
movsb
mov
push
jae
pop
dec
out
pop
and
mov
xorl
or
sarl
mov
and
mov
call
sub
mov
inc
sbb
mov
dec
shll
ja
xchg
in
aam
imul
call
pop
insl
dec
pop
in
pop
ja
mov
cmp
and
rclb
popf
cmc
cmp
push
jecxz
pop
mov
xchg
dec
nop
ret
lods
mov
jnp
pusha
pusha
loopne
mov
xchg
hlt
inc
outsb
xor
pop
add
pop
and
dec
jb
cli
sub
jbe,pn
fucomp
pushf
bound
xchg
shlb
xlat
xchg
jb
mov
xchg
mov
loop
outsb
inc
push
inc
scas
cli
push
inc
pop
pop
rcrl
leave
lret
imul
aas
out
popa
fwait
dec
and
call
pop
fldcw
cmp
fstpl
add
jg
sub
add
push
xor
orl
std
fldl
call
xor
and
cmp
loopne
jne
jp
out
jo
fstpl
dec
xor
in
ds
loop
or
adc
in
xchg
out
adc
sbb
push
aad
xor
pushf
lret
es
push
lfs
stc
adc
out
xor
add
jb
sbb
nop
cmpsl
inc
jae
cmp
bound
and
and
ret
jecxz
fwait
test
loopne
test
adc
sti
mov
scas
adc
aam
imul
mov
mov
loop
insl
mov
fildl
shl
xor
mov
test
loopne
pop
inc
cltd
mov
push
test
adc
imul
imul
mov
ret
fwait
xor
mov
inc
in
pop
sti
lahf
and
mov
aad
push
scas
clc
sbb
les
sbb
mov
xchg
cmp
jge
out
pop
xchg
sahf
push
inc
insb
or
test
ret
xchg
js
lods
sarl
mov
sbb
cmp
dec
xor
add
ficompl
jle
pusha
and
mov
mov
dec
and
push
hlt
test
or
push
test
cmp
mov
jmp
popa
jge
outsb
lret
sbb
mov
lods
xchg
test
push
rorb
push
xchg
leave
xor
adc
mov
lret
movsb
int3
rol
pop
jae
pop
pop
and
mov
xchg
push
xchg
mov
hlt
testb
add
mov
add
in
loope
jb
js
mov
push
adc
aam
stos
xlat
jge
add
inc
subb
sub
jp
lock
and
enter
sarl
ss
adc
std
jecxz
fsts
hlt
or
or
xchg
xchg
inc
fstpt
mov
xor
out
sub
pop
mov
lods
and
add
sti
iret
pusha
movsl
scas
add
and
mov
nop
sub
xchg
insl
gs
lahf
mov
loopne
mov
out
adc
shl
mov
je
test
mov
mov
mov
and
int
and
and
jg
jmp
enter
inc
sahf
stos
lods
pop
push
xchg
mov
sahf
add
fstps
es
test
pop
fdiv
aad
dec
mov
vpunpckhwd
xchg
dec
mov
mov
jge
pop
out
rcll
sti
pop
inc
sbbb
add
dec
xlat
inc
pop
mov
dec
xor
call
ds
mov
push
enter
nop
mov
loop
adc
or
and
daa
pop
inc
pop
psubsb
mov
aaa
outsb
jb
adc
dec
dec
stos
movsb
jmp
dec
gs
mov
adc
cmpsl
cld
insb
sbb
xchg
mov
pop
pusha
mov
and
mov
das
int
push
xor
inc
mov
push
nop
xchg
and
lods
mov
and
mov
addb
addl
mov
sbb
outsb
pop
divb
adc
popf
dec
mov
int3
dec
xor
inc
mov
pop
adc
push
mov
cs
out
push
push
test
loop
fiadds
or
cmp
das
jecxz
lahf
xor
lock
xor
adc
fldl
mov
test
fmull
test
enter
lcall
or
xchg
or
inc
leave
pop
sub
xchg
and
jmp
or
rcll
popa
add
jge
adc
repz
pop
xchg
outsb
push
cmp
xchg
je
push
popf
mov
mov
jl
mov
mov
jmp
sbb
add
shl
sbb
movsl
add
sbb
pop
call
mov
cmpsl
mov
sahf
mov
mov
adc
xor
dec
fsubs
scas
mov
push
das
push
mov
xor
xor
jb
loope
sub
jp
mov
xlat
xchg
mov
inc
pop
cwtl
cmp
pop
insl
les
loope
jg
imul
stos
pop
xor
ds
insl
je
mov
imul
mov
rorl
sahf
mov
fnstenv
mov
ffree
xchg
scas
jbe
jp
test
mov
int3
sbb
add
les
xor
xchg
mov
repz
or
push
cmpsl
or
push
sti
push
lcall
pop
cmp
scas
inc
stc
dec
push
sub
clc
enter
call
adc
sbb
xchg
xchg
outsb
xchg
outsl
es
notb
cmp
jae
sub
cwtl
mov
jg
popa
push
mov
scas
insl
jns
test
daa
pop
mov
mov
sub
pop
dec
cli
xchg
mov
xchg
shlb
dec
cmp
inc
testl
insb
add
add
int3
or
push
add
mov
inc
add
fldl2t
dec
aam
xchg
jecxz
rorb
jns
dec
push
cltd
sbb
or
inc
jp
push
scas
mov
mov
movl
lahf
pop
ds
testb
mov
xchg
sarl
sbb
imul
hlt
scas
int
std
fndisi(8087
das
cltd
in
das
out
das
sbb
aad
aam
sub
les
cltd
negl
and
addb
cmpsb
scas
mov
mov
jbe
xor
jmp
sbb
push
pop
push
mov
cmp
test
bound
jge
enter
or
clc
popa
iret
add
add
in
cmp
mov
orl
in
mov
outsb
jns
nop
dec
mov
cmp
push
enter
call
leave
ret
cmp
loop
je
xor
scas
sub
ret
mov
add
lcall
sbb
pop
push
jbe
mov
addr16
pop
pop
nop
repnz
aad
jg
cld
pop
test
mull
dec
icebp
xor
jb
xchg
dec
mov
push
mov
mov
movsb
push
sbb
ret
scas
and
cltd
popf
mov
adc
add
cmp
xchg
xchg
pop
movsb
vaddss
arpl
cmp
push
sub
xor
push
insb
out
into
mov
push
cmpsb
jecxz
pop
and
and
jnp
orl
and
xchg
xor
es
or
in
mov
das
jle
aas
test
mov
push
je
sub
inc
mov
sti
pop
js
out
pop
push
stc
and
adc
and
jmp
push
pop
das
jo
cmp
pop
aas
pushf
add
jb
pop
cld
jo
fistl
pop
inc
mov
add
in
hlt
mov
cmp
data16
out
mov
adc
insb
dec
std
sub
mov
gs
stc
rorb
xchg
mov
jp
fs
or
jbe
ljmp
ja
or
flds
cmc
popf
lock
outsl
ret
repz
mov
js
scas
pop
pop
lods
xor
sub
mov
push
push
out
fcomps
enter
mov
or
fldl
fnstenv
mov
ss
lret
addr16
ret
xorl
shrl
adc
cmpsl
cld
jo
popa
cmpb
xchg
in
sarb
add
pop
mov
dec
lods
ret
or
leave
nop
cmpsl
pop
mov
mov
pop
cmp
jge
xchg
xchg
jo
into
mov
stos
add
aas
fnstenv
push
xor
int
xchg
lea
ja
into
popa
sahf
push
adc
or
xchg
xchg
mov
rcll
lds
jge
xchg
sub
loopne
jne
in
lcall
addb
sarl
gs
jp
inc
test
add
pushf
or
push
and
test
push
ja
and
out
inc
out
decb
or
mov
dec
pop
icebp
shlb
mov
jo
stos
xchg
xor
lcall
inc
les
mov
addr16
sub
call
cmp
or
imul
ds
jp
ret
xchg
push
stos
dec
inc
repnz
nop
scas
dec
stos
int3
or
sbb
jg
int3
xchg
loope
inc
aad
in
inc
sahf
push
cltd
daa
pop
mov
ret
xor
pop
push
ret
shll
xchg
loop
xchg
jne
jp
sub
xlat
cmpsb
push
push
pusha
jle
insb
xchg
sub
dec
aam
pop
xor
push
loope
inc
or
dec
pop
add
or
repnz
lds
cld
xor
pop
popa
sbbl
mov
std
cltd
xchg
ss
inc
xlat
cmc
icebp
leave
dec
cmc
std
cmp
dec
test
daa
cmp
lret
inc
inc
rorb
dec
stos
jge
xchg
hlt
divl
std
xor
pop
xor
shlb
bound
cld
adc
jg
cli
and
xchg
pop
gs
mov
mov
mov
adc
in
mov
or
xrelease
cs
add
xor
movsl
xchg
mov
mov
dec
inc
cs
or
pop
sahf
pop
outsb
aaa
mov
insl
push
nop
mov
or
lods
xchg
jno
inc
jbe
dec
mov
incl
sbbb
ljmp
imul
mov
ret
lods
mov
add
out
sahf
data16
and
stos
cld
dec
shrb
je
sbbl
aaa
inc
mov
adc
jl
orb
xchg
xchg
adc
mov
mov
add
cmpsl
cs
test
push
mov
lcall
pusha
shll
aad
sti
loopne
jecxz
inc
jp
int
xlat
clc
lea
icebp
or
push
and
jmp
jne
and
mov
ret
cltd
sbb
sti
cwtl
scas
movsb
cmp
popf
shll
fisubrs
daa
mov
mov
sbb
hlt
dec
mov
and
mov
inc
loope
or
xchg
fisttps
pop
test
movsb
dec
imul
pop
inc
and
jle
dec
jo
pushf
ud1
enter
add
mov
into
push
mov
nop
and
fldln2
andl
push
mov
adc
pop
mov
fldlg2
push
mov
mov
xchg
jg
dec
cmp
int
dec
pop
hlt
inc
into
mov
push
out
stos
mov
cmp
push
test
mov
adc
js
ret
pop
sub
and
adc
mov
dec
push
adc
inc
inc
lods
xor
add
fisubrs
mov
outsb
xor
arpl
rcr
das
xor
add
mov
inc
sahf
xor
jbe
and
clc
data16
sub
std
push
scas
mov
sar
dec
jnp
stos
push
jno
mov
fninit
shlb
push
add
sub
or
fdivs
iret
clc
sub
push
scas
push
ret
pusha
adc
sbb
lahf
sbb
and
mov
sahf
sahf
in
fs
mov
cmp
push
xlat
mov
add
cmc
aas
push
and
pop
popa
jbe
fucomi
lcall
and
sub
push
es
jge
mov
cs
insb
dec
lods
je
or
mov
cmpb
mov
xor
and
lods
in
mov
idivl
in
data16
jecxz
aaa
outsl
lods
test
test
cwtl
je
mov
pop
enter
lock
sub
hlt
and
loope
jns
or
stos
dec
enter
int
lret
popa
popa
insb
add
int
ja
jne
push
lods
pop
lcall
test
iret
imul
adc
xchg
cmp
xchg
lds
les
loope
mov
cmc
rclb
sbbb
and
cmp
pop
pop
sar
pop
repz
daa
mov
mov
xor
xchg
inc
push
das
fisubl
lods
mov
sub
xchg
push
cmpsl
add
or
xor
movsl
xchg
icebp
outsb
xchg
popf
shrb
xchg
push
and
pushf
das
test
icebp
or
stos
dec
xchg
lock
aaa
cwtl
adc
jns
xor
imul
rorl
mov
cmp
dec
es
sbb
jle
into
hlt
xorl
in
pop
push
mov
mov
into
pop
movsw
jle
push
inc
leave
adc
push
or
push
pop
pop
pop
lahf
mov
mov
out
sarb
push
cmp
lods
mov
dec
inc
out
jge
fsubr
iret
ret
test
out
jae
outsb
pop
jecxz
sbb
fildll
movsb
outsb
or
mov
xchg
xchg
xor
idivl
out
pop
incb
das
inc
adc
int
xchg
in
popf
subl
or
dec
daa
xchg
daa
popf
cld
cmpsb
pop
test
mov
ljmp
mov
mov
cs
int3
in
push
mov
stos
push
pop
pusha
mov
xorb
loope
lret
pop
ret
fwait
sub
jge
xor
jge
mov
xchg
mov
xchg
lidtl
sub
xor
inc
adc
pop
loopne
dec
mov
xchg
fidivs
or
dec
mov
fidivs
mov
lret
cmp
mov
xor
sarb
and
sub
inc
or
and
aas
adc
push
out
push
inc
xchg
xchg
arpl
scas
ljmp
adc
fstpl
pusha
jae
jle
into
jmp
ret
lods
cmc
push
cmpsb
push
jns
mov
test
das
out
pop
aad
leave
mov
and
mov
adc
add
iret
pop
mov
test
xchg
or
cmp
xchg
fstpt
pop
mov
jl
pop
pop
add
in
fndisi(8087
stos
popf
inc
pusha
mov
xchg
adc
pop
xor
mov
outsl
imul
sbb
aaa
pusha
mov
sbb
mov
stos
mov
push
pop
je
and
inc
cmpsb
test
hlt
and
push
cmp
scas
nop
pop
sub
popf
adc
mov
stos
inc
mov
mov
outsl
mov
jmp
jge
cwtl
movsb
mov
call
test
add
mov
das
adc
sbbl
mov
leave
inc
je
insb
add
testb
loope
inc
xor
lock
pop
mov
decl
inc
hlt
out
faddl
movsb
stos
repz
repz
push
or
jns
pop
jp
aaa
int3
push
push
aaa
enter
repnz
pop
mov
mov
fimuls
subl
bound
test
cmp
xor
push
aad
test
ret
pop
xchg
cmpsl
sbb
push
fisttpll
scas
or
adc
mov
loop
or
inc
hlt
jle
xor
in
push
repnz
sbb
popf
push
inc
mov
fbld
repnz
jb
sub
dec
or
scas
mov
jne
les
pop
lds
adc
mov
add
jge
test
shrl
push
mov
sti
ljmp
and
nop
test
mov
jecxz
cmp
test
pop
push
out
jbe
out
ret
out
je
stc
movsb
shrb
jae
xor
push
orb
out
or
xchg
das
pop
xor
mov
mov
test
je
push
fnstenv
mov
outsb
fstps
mov
cli
adc
push
insl
pop
inc
push
inc
stc
pop
jnp
scas
xchg
cmp
xchg
pop
out
fimuls
add
jne
push
or
fisttps
cmp
inc
xor
sub
push
movsb
jge
fsubs
push
xchg
xor
stc
psrld
jmp
inc
inc
sbb
adc
inc
movsb
xchg
ljmp
push
outsb
xchg
xchg
dec
and
mov
xor
jmp
rcll
aad
out
push
add
fldt
push
aas
cs
stc
sahf
xchg
jp
adc
adc
xor
icebp
push
jno
pop
jne
aas
pushf
jl
add
dec
mov
jmp
push
dec
pop
outsb
xchg
das
lret
xchg
dec
pop
cs
test
push
loope
cltd
enter
add
cs
rcrb
pop
push
ss
lret
dec
sub
xor
xchg
lods
xchg
imul
push
jp
or
push
call
icebp
mov
push
fsubs
push
cmp
cld
sbb
fcmovbe
aaa
dec
and
xchg
clc
addb
push
sbb
pop
fcoml
add
xchg
jmp
sbb
sahf
pop
addr16
jb
xor
push
lret
mov
xlat
mov
push
xchg
mov
push
cmp
or
or
cmpsl
mov
inc
push
cltd
repnz
dec
push
call
push
mov
movsl
cmp
je
jmp
repz
dec
adc
aad
ja
ljmp
out
jae
sahf
dec
xor
mov
mov
ja
jecxz
mov
scas
push
hlt
jbe
in
cmp
test
pop
insb
subl
dec
lods
xor
and
adc
pop
xchg
in
jb
inc
cli
aam
aam
daa
je
out
outsl
mov
mov
insl
inc
test
xor
test
cmp
dec
jns
stos
imulb
cld
pop
ds
push
jp
hlt
jnp
daa
frstor
sahf
sbb
inc
cmp
mov
lock
aam
mov
dec
add
inc
cmp
test
inc
jnp
cli
pop
push
stc
in
cmp
adc
adc
dec
cli
lret
jmp
jg
out
mov
mov
andb
and
mov
cli
sahf
popa
push
add
sub
push
mov
push
mov
shrb
mov
ror
xor
sbb
inc
xchg
sbb
pushf
loopne
adc
sar
adc
and
pop
sub
jmp
shll
nop
and
mov
xor
test
dec
inc
lods
dec
stos
outsb
sub
addr16
mov
xor
mov
js
and
lret
in
insl
jne
popf
stos
sbb
jge
sbb
mov
xlat
cmp
pop
sub
dec
dec
cld
lock
int3
adc
fnsave
mov
imul
pop
icebp
test
add
cmp
daa
dec
gs
and
mov
mov
dec
mov
movsb
jo
lret
adc
jo
ret
mov
or
jmp
jo
popl
push
adc
dec
cli
inc
hlt
in
rorl
push
push
sbb
mov
cmp
cmp
divl
call
lds
jp
adc
and
dec
mov
cltd
add
sub
test
test
mov
divl
jg
test
xchg
mov
cs
jp
jne
sbb
xchg
test
loop
jp
jno
cmp
ds
and
dec
popf
add
imul
xchg
sub
inc
xlat
das
jle
imul
adc
sub
mov
xchg
inc
insl
xchg
adc
cmp
cltd
inc
cltd
int
cmp
lods
adcb
movsl
int
sub
adc
xchg
std
rcll
lods
nop
inc
aaa
or
scas
xchg
fistpl
push
out
test
xchg
pop
in
ja
xchg
pop
jae
mov
mov
sub
out
inc
xor
add
lods
push
das
push
sti
orl
pop
dec
fucomip
enter
in
mov
ds
jmp
push
in
aam
test
lock
or
cli
mov
int
cli
and
test
imulb
insb
xchg
decb
sbb
jne
vphaddbq
mov
scas
jo
jne
add
out
pop
or
aas
shrb
xchg
lock
sub
dec
add
ficompl
sbb
fwait
xlat
cmp
cmp
mov
xor
pop
lea
or
jno
jg
nop
xchg
xchg
lret
lret
and
mov
push
inc
decl
add
scas
faddl
pop
cltd
lods
xor
repz
cmp
adc
outsb
mov
sub
and
jb
lret
pop
xchg
ja
xchg
movsl
push
jno
mov
cli
jbe
jo
std
js
adc
int3
push
pop
sbb
dec
fnstsw
adcl
inc
outsl
dec
std
in
cmc
addr16
divb
lret
mov
pop
fildl
ljmp
jo
dec
mov
std
jge
mov
add
inc
push
hlt
push
aam
test
lea
enter
outsb
imul
fs
aad
add
rorb
adc
pop
int
arpl
imul
mov
fwait
dec
dec
mov
and
xchg
dec
popf
sbb
pop
push
inc
xchg
test
repz
lea
jne
stos
push
or
mov
dec
or
faddp
and
fiadds
es
inc
testb
mov
movsl
and
nop
mov
push
jns
and
jge
sub
mov
int
sbb
and
dec
sbb
faddl
mov
add
jb
mov
sahf
or
popf
xchg
imul
int
das
loopne
stos
in
adc
jp
adc
fs
cmpsl
xlat
xchg
mov
pop
mov
cmp
addl
ljmp
xchg
arpl
and
jb
cs
sub
xchg
in
and
add
jmp
sub
ret
sub
movsb
shrl
bound
lods
mov
sbb
lahf
xchg
xor
sub
stc
cmp
out
pop
cmp
pop
roll
lahf
mov
je
arpl
inc
leave
cmp
cmp
dec
dec
jecxz
aam
stc
lock
mov
mov
insb
jne
imul
std
inc
popf
xchg
ret
movsb
sarb
pop
mov
jl
push
mov
cmp
cmc
or
xor
xor
xchg
jo
jnp
push
xchg
push
adc
jae
add
mov
loop
mov
push
or
out
mov
into
pop
fadd
mov
iret
nop
push
push
xor
mov
subb
pushf
cmpsl
dec
int
jne
xor
pop
scas
or
fwait
cs
jb
dec
cs
icebp
jp
jnp
push
dec
sahf
mov
cld
aaa
push
ds
sbb
rcr
in
mov
mov
mov
int
jmp
or
repz
sahf
sbbb
dec
jg
cld
gs
dec
dec
inc
lcall
lret
js
fcmovnb
aaa
shl
cmp
fimull
in
fs
out
add
dec
jb
cmp
test
cld
test
mov
inc
add
aaa
jns
sub
xchg
in
or
es
movsb
aaa
inc
test
shld
pop
jo
dec
loope
jnp
or
pop
sbb
test
sbb
xor
or
and
sub
xchg
hlt
int
dec
inc
and
mov
int
cmp
mov
push
repnz
inc
push
dec
cltd
pop
add
add
sub
insb
out
adc
cld
cmpsl
xchg
push
nop
imul
mov
adc
loopne
repnz
mov
pop
sti
pop
sub
dec
push
iret
mov
add
leave
mov
pop
test
jge
xchg
adc
inc
mov
cmpsb
out
pop
fldenv
jno
leave
push
cli
daa
or
mov
aas
cmp
cmp
mov
or
adc
xor
adc
or
out
xor
arpl
aas
es
sahf
push
clc
mov
outsl
into
test
dec
dec
lods
xchg
add
std
push
adc
pushl
push
loopne
out
sub
adc
jo
loop
and
inc
mov
mov
or
cmp
sub
std
ds
jae
pusha
adc
mov
insl
adc
mov
xchg
sbb
jno
xor
in
outsl
mov
sbb
xlat
shrl
xchg
and
jle
and
dec
push
cmpsl
mov
cwtl
pop
call
aad
sbb
cmpsl
jne
cs
and
fsub
adc
add
add
xchg
add
inc
xchg
add
xchg
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
mov
add
