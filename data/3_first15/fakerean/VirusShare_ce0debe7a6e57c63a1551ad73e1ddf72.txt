sub
sub
jmp
lea
cmpl
je
movzbl
mov
shl
mov
subl
add
add
movzbl
add
mov
mov
shl
mov
add
mov
sub
and
shr
movzwl
add
mov
mov
mov
shr
movzbl
add
cmp
jbe
jmp
nop
push
cmc
push
adc
xorb
xchg
xorl
adc
xorl
inc
test
adc
test
adc
test
adc
xchg
adc
push
adc
xchg
adc
mov
adc
mov
adc
push
adc
push
adc
adc
push
adc
in
push
adc
in
push
adc
out
push
adc
out
push
adc
out
push
adc
adc
aaa
adc
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
push
mov
cmpl
je
cmpl
je
sub
push
mov
cmp
jae
sub
cmp
jbe
mov
mov
mov
add
push
sub
push
push
call
add
sub
jne
add
mov
mov
cmp
je
mov
cmp
jae
add
mov
pop
pop
pop
xor
pop
ret
mov
mov
shl
movl
movl
mov
jmp
mov
mov
mov
shl
mov
push
push
push
call
add
test
mov
jne
jmp
mov
mov
push
sub
push
push
call
mov
add
pop
mov
movl
pop
pop
xor
pop
ret
mov
mov
push
sub
push
push
call
mov
add
pop
mov
mov
pop
pop
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
sub
cmp
push
mov
mov
push
lea
jb
lea
mov
mov
lea
push
push
mov
call
mov
add
test
je
cmp
jne
mov
mov
sub
test
mov
je
mov
push
mov
call
add
cmp
mov
jne
lea
push
call
mov
add
cmp
jne
xor
pop
pop
pop
ret
mov
cmp
jne
jmp
xor
jmp
push
mov
cmpl
jne
cmpb
jne
lea
xor
call
push
movb
call
test
js
mov
test
je
call
test
js
mov
mov
mov
mov
push
call
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
push
sub
push
push
push
mov
xor
xor
push
lea
mov
mov
mov
test
je
mov
test
je
xor
mov
xor
mov
mov
mov
cmp
jne
cmp
je
push
mov
push
push
call
mov
mov
xor
cmp
jne
mov
mov
cmp
je
lea
mov
or
lock
dec
je
movl
mov
mov
mov
pop
pop
pop
pop
mov
pop
ret
cmp
ja
jmp
cmp
je
mov
mov
sub
mov
cmp
jae
lea
mov
test
je
mov
push
mov
add
push
push
call
add
mov
add
mov
mov
xor
mov
cmp
jb
mov
mov
cmp
je
call
jmp
lea
jmp
mov
jle
cmp
mov
cmp
popf
adc
adc
cld
push
adc
in
mov
call
test
js
push
pushl
mov
pushl
mov
pushl
mov
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
cmpl
je
xor
pop
ret
cmpl
push
push
push
lea
je
mov
mov
cmpb
je
mov
push
mov
call
mov
mov
push
push
mov
push
call
test
js
mov
mov
mov
add
push
push
call
test
js
xor
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
mov
test
je
xor
cmp
je
mov
mov
cmp
jne
xor
pop
pop
add
ret
mov
push
mov
push
push
lea
push
push
push
push
push
lea
mov
call
test
js
mov
cmp
je
cmp
je
xor
mov
movl
lea
cmp
je
mov
cmp
jge
mov
mov
mov
cmp
mov
jne
cmp
mov
mov
jne
add
cmp
jge
cmp
jle
sub
mov
mov
js
lea
mov
sub
cmp
mov
mov
jge
lea
mov
mov
cmp
jl
push
call
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
addl
mov
addl
mov
jmp
lea
call
mov
cmp
jne
xor
pop
pop
pop
pop
add
ret
lea
call
mov
cmp
je
testl
je
push
call
add
pop
pop
pop
xor
pop
add
ret
push
mov
push
push
xor
cmp
je
cmp
je
push
push
mov
lea
mov
test
je
pushl
mov
xor
inc
mov
shl
lea
push
push
pushl
pushl
pushl
push
call
inc
add
cmp
jl
mov
pop
pop
pop
leave
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
cmp
je
cmp
je
cmp
push
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
mov
push
call
xor
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
movl
xor
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
mov
test
je
test
push
push
je
sar
add
mov
lea
or
mov
pop
mov
pop
pop
pop
ret
mov
test
mov
je
call
cmpl
jne
mov
or
mov
addl
mov
add
lea
pop
or
mov
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
push
mov
mov
call
test
jne
add
mov
cmpb
je
mov
mov
mov
cmpb
je
mov
mov
mov
mov
add
add
add
mov
movzbl
add
add
xor
sub
je
sub
jne
mov
add
add
mov
mov
sub
mov
pop
pop
mov
pop
add
ret
int3
int3
int3
sub
push
mov
push
mov
push
push
mov
mov
add
call
cmp
jne
movl
mov
xor
test
mov
jne
mov
cmpb
mov
je
mov
lea
push
lea
push
push
call
testl
jne
cmpl
je
mov
movl
mov
call
mov
mov
xor
xor
cmp
je
lea
test
je
mov
mov
mov
add
add
cmp
jne
mov
mov
mov
mov
call
mov
lea
call
test
jne
mov
mov
cmpb
mov
jne
mov
cmpb
je
mov
mov
cmpl
je
mov
add
mov
mov
cmpb
jne
mov
mov
mov
mov
call
cmp
jne
xor
xor
lea
cmpl
je
mov
mov
mov
push
lea
push
call
mov
mov
mov
add
mov
add
cmp
jne
mov
mov
mov
add
add
add
mov
sub
mov
mov
sub
mov
mov
sub
mov
pop
sub
pop
sub
pop
mov
mov
pop
add
ret
mov
push
lea
mov
call
mov
mov
lea
push
mov
mov
push
lea
call
cmpl
je
mov
mov
cmpb
je
mov
test
jne
mov
add
mov
mov
lea
mov
cmp
je
mov
test
je
movl
mov
lea
push
push
push
call
add
cmpl
je
test
je
mov
add
mov
mov
jmp
mov
mov
push
lea
mov
call
mov
mov
jmp
pushl
mov
pushl
mov
pushl
mov
push
call
ret
push
mov
push
push
push
mov
mov
call
test
jne
andl
lea
push
lea
push
push
push
pushl
mov
call
add
mov
xor
mov
test
jne
mov
push
pushl
pushl
pushl
push
pushl
pushl
call
add
test
pop
jne
xor
inc
leave
ret
push
pushl
call
test
pop
pop
je
mov
jmp
push
mov
sub
andl
push
mov
push
push
mov
movzbl
push
pushl
and
pushl
lea
push
xor
call
mov
pushl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
call
mov
andl
andl
mov
mov
lea
call
mov
lea
mov
mov
call
andl
test
je
movl
mov
mov
push
call
push
lea
push
lea
push
push
lea
push
pushl
push
call
mov
add
test
je
mov
test
je
testb
mov
je
mov
mov
mov
cmp
jne
mov
mov
lea
call
xor
mov
call
mov
lea
call
mov
test
je
mov
mov
mov
mov
test
je
lea
call
andl
andl
lea
call
lea
call
lea
call
mov
pop
pop
pop
leave
ret
xor
jmp
push
mov
sub
cmpw
jne
push
mov
mov
push
lea
push
push
call
cmpl
je
push
mov
cmpl
mov
mov
je
orl
lea
push
mov
call
push
mov
call
push
call
mov
pop
mov
call
mov
test
jne
pop
pop
leave
ret
push
mov
push
push
push
push
push
mov
push
call
mov
test
je
push
call
pop
movl
cmpl
je
push
call
test
pop
je
mov
andl
mov
mov
mov
mov
mov
movl
mov
mov
mov
push
call
test
je
mov
push
call
mov
mov
push
push
push
call
mov
mov
push
call
test
je
cmpl
je
push
call
pop
mov
pop
pop
pop
leave
ret
xor
jmp
push
mov
and
push
mov
addl
push
js
mov
mov
or
test
je
xor
pop
mov
pop
ret
mov
cmp
mov
jne
test
mov
jne
cmpb
je
test
jne
mov
push
push
mov
call
movb
xor
pop
mov
pop
ret
mov
call
xor
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
lea
mov
mov
call
test
jne
mov
mov
lea
push
push
mov
call
test
js
mov
lea
push
mov
call
mov
mov
mov
push
pushl
push
push
mov
call
test
mov
js
call
cmpl
jne
mov
mov
call
mov
mov
mov
mov
mov
imul
imul
lea
call
mov
push
push
push
call
flds
mov
push
fstps
call
flds
mov
push
fstps
call
xor
cmp
jne
pushl
mov
mov
lea
mov
mov
call
lea
xor
cmp
jne
push
call
cmp
pop
je
movl
mov
mov
mov
mov
cmp
je
mov
mov
mov
call
push
lea
mov
call
lea
push
push
call
mov
test
jne
pushl
andl
mov
lea
call
mov
mov
mov
push
push
call
test
jne
lea
mov
test
mov
jne
push
call
test
pop
je
movl
andl
andl
test
je
mov
mov
mov
call
mov
test
je
mov
mov
push
pushl
call
cmpl
jne
xor
cmp
jne
lea
call
lea
call
lea
call
mov
pop
pop
pop
leave
ret
xor
jmp
mov
test
jne
mov
mov
pushl
mov
push
call
ret
mov
jmp
push
mov
push
push
mov
push
call
xor
push
mov
lea
mov
call
mov
cmp
je
mov
push
mov
lea
mov
call
mov
mov
mov
lea
mov
call
lea
call
mov
pop
leave
ret
mov
mov
mov
push
mov
mov
mov
add
mov
xor
pop
ret
int3
mov
mov
testb
mov
je
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
shr
not
and
mov
testb
jne
xor
mov
testb
jne
mov
mov
mov
shr
and
mov
ret
push
mov
lea
pop
jmp
xor
mov
mov
shr
and
mov
ret
push
mov
cmp
je
push
mov
mov
xor
cmp
ja
pop
pop
ret
push
mov
push
test
mov
jne
cmpl
push
jne
xor
lea
call
mov
pop
leave
ret
mov
push
call
jmp
mov
push
lea
call
mov
lea
push
push
call
cmpl
je
jmp
push
mov
mov
sub
call
test
jne
mov
mov
call
leave
ret
push
mov
mov
mov
call
test
mov
je
mov
push
push
xor
call
cmp
je
push
lea
mov
call
lea
lea
mov
push
push
call
pushl
mov
lea
mov
call
mov
cmp
jne
lea
call
lea
call
pop
lea
call
pop
jmp
push
mov
sub
mov
xor
mov
push
mov
push
lea
mov
xor
cmp
push
mov
jne
xor
cmp
mov
jg
mov
test
je
mov
push
push
call
mov
andl
lea
lea
push
lea
movb
mov
movl
call
call
push
push
push
call
mov
test
je
testl
jne
push
mov
call
lea
call
mov
mov
pop
pop
xor
pop
call
leave
ret
mov
jmp
mov
mov
mov
call
mov
lea
call
mov
test
je
mov
push
call
incl
cmp
jl
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
mov
push
mov
lea
mov
mov
lea
push
and
or
lea
push
push
movl
mov
call
mov
mov
add
cmp
jne
mov
xor
cmp
mov
movl
mov
ja
push
push
push
lea
mov
mov
mov
push
call
mov
cmp
je
testl
je
lea
cmp
jne
mov
pop
pop
pop
mov
pop
ret
lea
sub
mov
mov
push
mov
mov
sub
mov
call
cmpl
je
mov
mov
mov
mov
push
push
push
push
call
mov
mov
mov
push
push
mov
call
test
js
mov
mov
mov
push
call
mov
xor
test
jbe
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
mov
push
push
mov
test
push
push
mov
je
cmpb
je
mov
cmpl
mov
jge
push
mov
call
add
lea
mov
movl
call
test
je
xor
mov
test
jne
test
jne
test
jne
mov
xor
push
xor
mov
mov
call
add
cmp
jne
push
lea
push
push
mov
call
mov
mov
add
mov
mov
push
lea
lea
mov
call
test
je
mov
test
je
testb
mov
mov
jne
cmp
je
call
push
push
push
push
call
mov
cmp
ja
mov
cmpl
jge
mov
test
je
lea
push
call
add
mov
cmpl
jne
mov
mov
push
call
add
test
je
mov
mov
mov
push
push
push
mov
call
lea
push
call
add
test
je
mov
mov
pop
pop
pop
pop
xor
call
add
ret
cmpl
jne
cmpl
jne
cmpl
jne
lea
push
push
call
add
test
je
cmpl
jae
mov
mov
add
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmpl
mov
jne
mov
mov
mov
call
test
mov
js
mov
jmp
cmpl
je
jmp
push
lea
sub
push
push
push
mov
xor
push
call
test
je
mov
pushl
lea
call
mov
cmp
pop
mov
je
mov
xor
lea
mov
inc
push
mov
mov
mov
push
call
test
js
cmpl
je
mov
andl
lea
push
mov
mov
mov
push
call
test
js
lea
mov
lea
mov
lea
mov
lea
mov
lea
xor
push
lea
push
movl
movl
mov
mov
mov
mov
mov
mov
call
lea
mov
mov
lea
push
lea
push
mov
movl
movl
mov
call
mov
pop
pop
lea
push
push
call
testb
jne
testb
jne
testb
je
mov
add
push
call
test
pop
jne
push
call
pop
testb
jne
testb
jne
mov
mov
lea
push
push
call
cmpl
je
pushl
call
cmp
pop
je
mov
push
push
push
mov
call
test
je
mov
movw
pushl
mov
push
call
pop
pop
testb
je
mov
add
push
call
test
pop
jne
push
call
pop
testb
je
mov
add
push
call
test
pop
jne
push
call
pop
xor
lea
call
mov
pop
pop
pop
add
leave
ret
mov
push
push
call
jmp
testb
je
jmp
int3
int3
int3
int3
int3
mov
test
push
push
je
mov
mov
mov
cmp
je
mov
add
test
jne
mov
pop
movl
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
pushl
mov
pushl
call
neg
pop
sbb
pop
inc
ret
mov
decl
mov
je
ret
movl
push
movl
call
pop
xor
jmp
push
mov
push
xor
push
push
mov
mov
push
lea
pop
mov
movl
call
test
pop
je
cmpl
jne
pop
pop
mov
pop
ret
call
mov
jmp
pushl
mov
pushl
call
mov
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
and
mov
sub
push
push
push
call
cmpb
jne
mov
mov
test
mov
jne
mov
mov
mov
lea
not
and
lea
cmp
ja
mov
xor
cmp
je
cmp
mov
movl
mov
mov
mov
mov
mov
je
mov
mov
mov
mov
mov
mov
push
push
lea
push
mov
call
mov
mov
mov
mov
movl
mov
mov
mov
call
pop
pop
pop
mov
pop
ret
push
lea
push
call
add
mov
jmp
push
push
mov
mov
test
jne
mov
push
push
call
test
je
test
je
mov
push
call
pop
pop
ret
mov
mov
test
je
mov
mov
cmp
jae
mov
test
je
pushl
mov
pushl
push
call
ret
mov
jmp
xor
jmp
push
mov
call
testb
je
push
call
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
xor
push
call
test
je
mov
mov
cmp
mov
je
lea
push
push
push
add
push
call
mov
mov
mov
and
jne
cmp
jne
pushl
lea
call
cmp
jne
lea
push
pushl
call
test
pop
pop
jne
cmp
je
pushl
call
cmp
pop
je
mov
mov
call
push
mov
lea
mov
call
mov
cmp
je
push
lea
mov
call
mov
lea
push
push
call
test
jne
pushl
mov
lea
mov
call
mov
cmp
je
pushl
lea
call
lea
call
lea
call
lea
call
xor
lea
call
mov
pop
pop
pop
leave
ret
push
mov
push
pushl
call
test
pop
je
push
pushl
call
andl
pop
push
mov
lea
call
mov
lea
call
mov
pop
leave
ret
xor
leave
ret
push
mov
sub
lea
cmpl
push
je
mov
mov
mov
xor
pop
leave
ret
push
mov
push
pushl
mov
call
pop
mov
lea
call
mov
mov
pushl
mov
push
call
test
pop
pop
pop
pop
jne
pushl
pushl
call
mov
pop
pop
jmp
push
mov
test
je
mov
push
mov
call
test
jne
mov
push
mov
call
test
jne
mov
mov
call
test
je
mov
pop
ret
mov
jmp
xor
pop
ret
push
push
push
mov
test
je
mov
mov
call
test
je
mov
call
mov
test
je
mov
mov
call
cmp
jb
mov
test
mov
jne
test
jne
pop
pop
pop
ret
pushl
call
pop
mov
call
mov
mov
jmp
push
mov
and
sub
push
mov
mov
mov
mov
push
xor
cmp
push
mov
je
mov
push
call
pushl
lea
push
mov
mov
mov
mov
push
lea
movb
call
mov
test
je
mov
push
pushl
lea
push
push
call
mov
call
mov
mov
mov
mov
mov
push
push
push
push
call
lea
call
pop
pop
xor
pop
mov
pop
ret
push
mov
push
push
push
mov
mov
call
test
jne
andl
lea
push
lea
push
pushl
mov
push
pushl
call
add
mov
xor
mov
test
jne
pushl
mov
pushl
pushl
pushl
push
pushl
pushl
call
add
test
pop
jne
xor
inc
leave
ret
push
lea
call
lea
call
lea
call
push
push
lea
mov
mov
push
push
call
mov
cmp
je
testl
je
add
cmp
jne
mov
test
pop
jne
mov
test
jne
mov
test
jne
lea
call
lea
call
lea
call
lea
call
lea
call
mov
jmp
push
mov
push
push
push
push
mov
call
test
je
andl
push
mov
mov
add
cmp
je
xor
mov
cmp
mov
je
mov
push
push
mov
push
mov
call
test
je
mov
mov
mov
mov
mov
inc
cmp
jne
pop
cmpl
jbe
mov
mov
cmpb
je
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
mov
cmpl
push
push
jle
cmpl
jle
mov
mov
mov
mov
mov
mov
push
lea
mov
mov
movl
call
mov
mov
lea
push
call
mov
mov
mov
add
call
mov
mov
mov
push
mov
call
test
je
mov
mov
mov
mov
call
mov
mov
mov
mov
call
fstpl
mov
fildl
mov
mov
push
fidivl
mov
fstpl
call
fstpl
mov
add
call
test
je
mov
mov
mov
jmp
mov
mov
cmp
je
movzwl
test
je
movswl
call
movzwl
cmp
jne
lea
push
lea
push
mov
push
mov
call
add
test
je
fildl
mov
mov
push
fidivl
mov
push
fstpl
call
fld1
fsts
add
fcomps
fnstsw
test
jnp
lea
flds
mov
fstps
sub
lea
fmuls
lea
fstpl
fldl
fstpl
fldl
fstpl
fldl
fstpl
push
mov
call
mov
mov
mov
mov
mov
add
mov
mov
push
lea
mov
mov
call
mov
mov
mov
test
jne
test
je
mov
mov
push
call
add
test
mov
jne
cmpl
jle
cmpl
jle
mov
lea
call
test
je
xor
lea
call
mov
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
test
jne
mov
mov
mov
lea
mov
cmp
push
lea
jne
test
jne
xor
test
jne
mov
mov
and
or
jne
xor
test
mov
jne
xor
pop
pop
ret
mov
mov
mov
mov
pop
pop
ret
mov
jmp
push
mov
mov
mov
push
push
mov
push
add
mov
push
xor
mov
mov
call
test
jne
cmp
je
push
call
cmp
pop
je
mov
orl
mov
pushl
mov
call
pushl
mov
push
mov
call
pop
pop
pop
pop
ret
push
mov
push
cmpb
jne
mov
test
movb
jbe
dec
mov
mov
push
lea
mov
push
mov
mov
mov
cmp
jb
mov
test
je
pushl
mov
dec
mov
call
jmp
push
mov
call
mov
pop
mov
movb
pop
leave
ret
movl
jmp
add
call
test
je
push
push
mov
push
lea
push
mov
call
test
je
push
push
push
mov
call
test
jne
cmp
je
call
movl
xor
inc
pop
ret
xor
pop
ret
int3
int3
push
mov
and
sub
push
push
push
push
mov
call
add
test
je
mov
mov
push
push
call
mov
test
mov
je
addl
lea
testb
jne
push
lea
push
call
test
je
andb
cmpl
je
mov
push
lea
push
movl
movl
movl
call
orb
cmp
jne
cmpl
je
mov
cmpl
jne
mov
call
test
je
push
mov
mov
call
test
je
mov
call
test
je
push
call
test
je
cmpl
jne
cmp
je
orb
push
call
test
je
cmpl
jne
cmpw
jne
mov
cmpl
jne
mov
movl
mov
add
mov
test
je
mov
add
push
call
add
test
jne
push
call
add
test
je
addl
cmpl
je
mov
pop
pop
pop
mov
pop
ret
test
jne
mov
test
je
push
lea
call
cmp
je
lea
push
push
mov
call
add
test
je
push
push
lea
push
mov
call
test
mov
jne
lea
push
xor
call
test
je
push
mov
mov
call
test
jne
cmp
jne
push
push
push
mov
call
test
je
mov
push
lea
mov
call
test
jne
jmp
mov
call
test
jne
jmp
mov
call
jmp
push
push
lea
push
mov
call
push
push
lea
push
mov
mov
call
cmpl
jne
push
push
push
mov
mov
call
test
jne
cmp
je
push
mov
mov
call
test
je
mov
jmp
lea
cmp
ja
movzbl
jmp
nop
sbb
push
pop
adc
cmp
add
add
add
int3
int3
int3
push
mov
push
call
test
je
cmpl
jne
mov
cmp
jne
mov
pop
ret
orb
xor
pop
ret
push
mov
sub
push
mov
mov
mov
lea
push
call
mov
test
mov
je
andl
push
push
push
mov
lea
call
mov
test
je
andl
mov
mov
lea
lea
mov
add
call
push
push
call
xor
cmp
jne
lea
mov
lea
call
push
call
test
pop
js
mov
pushl
mov
push
call
mov
cmp
mov
mov
je
mov
push
call
mov
cmp
je
cmp
jne
pushl
lea
push
call
lea
call
xor
lea
call
lea
call
pop
mov
pop
pop
leave
ret
mov
call
cmp
je
mov
push
mov
call
jmp
push
mov
mov
cmpl
push
mov
push
jge
push
call
test
pop
je
mov
andl
test
movl
mov
je
mov
push
call
test
mov
mov
mov
mov
mov
jne
test
mov
je
mov
push
call
cmpl
je
mov
push
pushl
add
mov
push
call
mov
lea
call
mov
pop
pop
pop
ret
mov
push
call
jmp
add
jmp
mov
call
mov
ret
pushl
call
pushl
mov
push
call
ret
push
mov
sub
push
push
push
lea
call
lea
call
xor
xor
mov
mov
test
jle
xor
mov
or
push
push
mov
lea
push
call
test
je
inc
inc
cmp
jle
test
je
mov
xor
push
inc
call
test
jne
mov
call
test
je
cmp
jg
cmpl
jg
jne
lea
push
lea
push
call
mov
mov
dec
jne
cmp
jne
lea
lea
call
cmpl
jne
lea
lea
call
cmpl
jne
lea
lea
call
mov
dec
jne
cmp
jne
lea
lea
call
cmpl
jne
lea
lea
call
cmpl
jne
lea
lea
call
mov
mov
add
movl
sub
mov
movl
mov
mov
lea
lea
push
mov
call
test
je
mov
mov
mov
add
cmp
je
cmpl
jne
mov
call
mov
mov
shr
lea
xor
mov
and
inc
shl
or
add
decl
jne
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
xor
inc
pop
pop
pop
leave
ret
mov
jmp
cmpl
je
cmpl
je
cmpl
jmp
dec
je
dec
jne
jmp
dec
je
dec
jne
jmp
push
mov
and
sub
mov
xor
mov
mov
push
push
mov
push
mov
andl
test
jne
mov
pop
pop
pop
xor
xor
call
mov
pop
ret
mov
mov
push
push
call
test
pop
pop
mov
jne
push
call
pop
andl
lea
mov
mov
push
mov
lea
movl
movl
movb
call
mov
mov
mov
mov
lea
push
mov
mov
movl
call
dec
neg
sbb
inc
mov
je
mov
test
jne
cmpl
mov
je
testb
movl
jne
testb
je
jmp
lea
call
lea
call
jmp
push
mov
sub
mov
push
push
xor
cmp
mov
je
lea
push
push
push
add
push
call
mov
and
jne
cmp
jne
pushl
lea
call
cmp
je
lea
push
mov
lea
movl
movl
mov
mov
mov
call
test
jne
pushl
lea
call
mov
cmp
je
mov
pushl
mov
pushl
push
call
mov
mov
push
pushl
pushl
push
call
lea
call
lea
call
pop
xor
pop
leave
ret
mov
mov
mov
test
je
mov
call
test
je
pushl
mov
push
push
call
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
mov
test
push
push
je
mov
mov
mov
cmp
je
mov
add
test
jne
mov
pop
movl
mov
pop
ret
push
mov
movl
movl
cmpl
je
push
lea
push
call
pushl
call
pop
pop
lea
movl
call
testb
je
push
call
pop
mov
pop
ret
push
mov
sub
push
push
mov
mov
cmp
jne
mov
cmp
jne
mov
cmp
jmp
mov
mov
dec
mov
shl
add
add
call
test
jne
test
ja
mov
test
ja
mov
test
ja
mov
call
neg
sbb
and
add
pop
pop
leave
ret
mov
mov
mov
shl
mov
sub
lea
lea
mov
sub
sub
cmp
jne
decl
mov
mov
lea
mov
call
test
je
cmpl
jbe
jmp
mov
lea
push
mov
or
lock
dec
jne
lea
test
movl
je
push
push
lea
movl
movl
call
mov
test
mov
mov
je
lea
push
call
test
pop
je
mov
test
je
push
call
test
pop
je
push
call
pop
pop
pop
xor
pop
ret
push
call
pop
jmp
push
mov
push
push
pushl
xor
mov
lea
mov
call
cmp
je
testb
push
mov
je
mov
mov
push
push
push
pushl
push
call
pop
lea
call
xor
pop
leave
ret
push
mov
testb
je
push
push
push
pushl
pushl
push
lea
push
call
mov
add
cmpb
je
xor
push
inc
call
mov
test
je
mov
test
jbe
mov
mov
push
call
mov
pop
pop
pop
ret
xor
jmp
xor
jmp
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
mov
test
push
mov
je
mov
mov
push
call
mov
test
mov
je
mov
push
mov
call
mov
test
mov
je
mov
mov
push
call
mov
cmpl
mov
je
mov
cmpl
je
cmpl
push
mov
je
cmpl
je
push
call
add
test
je
mov
mov
call
test
mov
je
add
mov
mov
mov
mov
add
push
push
push
call
mov
mov
mov
mov
add
xor
test
je
cmp
je
lea
cmp
je
mov
mov
cmp
jne
jmp
mov
mov
add
mov
test
mov
jne
test
je
add
mov
test
mov
je
addl
cmpl
je
cmp
je
cmpl
jne
mov
mov
cmp
jge
cmpl
jne
movl
mov
cmp
jge
cmpl
je
mov
mov
xor
mov
mov
call
test
mov
jne
mov
mov
mov
mov
mov
mov
test
je
lea
cmpl
je
cmpl
je
cmpl
jne
mov
call
mov
push
call
mov
mov
mov
addl
cmpl
je
test
je
mov
mov
push
call
test
je
mov
mov
push
call
lea
call
pop
pop
pop
xor
pop
add
ret
push
call
add
test
je
mov
call
mov
mov
test
mov
je
add
mov
test
mov
jne
test
mov
je
add
mov
test
mov
jne
add
mov
test
mov
je
call
jmp
xor
jmp
push
mov
push
lea
push
mov
call
test
je
pop
pop
ret
andl
mov
push
mov
call
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
mov
push
mov
mov
push
mov
xor
cmp
push
mov
mov
lea
push
mov
mov
mov
mov
movl
movl
mov
mov
je
mov
call
lea
push
lea
push
mov
movl
call
add
push
lea
call
lea
push
lea
mov
mov
call
mov
mov
add
cmp
je
mov
lea
push
push
push
lea
push
push
mov
call
mov
lea
call
mov
test
jne
test
jne
test
js
cmp
mov
lea
mov
mov
mov
mov
movl
movl
mov
mov
je
mov
mov
call
mov
lea
push
lea
mov
push
mov
call
add
push
lea
call
lea
push
lea
mov
mov
call
mov
mov
add
cmp
je
mov
lea
push
mov
push
push
lea
push
push
mov
call
mov
lea
call
mov
test
jne
test
jne
test
js
mov
lea
push
mov
mov
mov
push
push
call
cmp
je
mov
mov
xor
cmp
mov
je
mov
mov
call
push
mov
lea
call
mov
cmp
mov
je
mov
mov
mov
mov
mov
push
lea
push
push
mov
call
mov
push
push
push
push
xor
call
add
test
js
cmpw
jne
mov
mov
push
push
push
call
mov
lea
mov
mov
mov
add
lea
mov
movl
movl
mov
mov
push
push
mov
call
push
mov
call
test
je
mov
lea
push
push
call
mov
add
test
je
mov
add
push
call
add
test
je
lea
call
mov
cmp
je
mov
mov
push
call
mov
cmp
je
mov
mov
push
call
mov
mov
pop
pop
pop
pop
xor
call
add
ret
mov
add
push
mov
call
add
test
jne
mov
push
call
add
jmp
mov
add
call
mov
jmp
push
mov
push
andl
push
push
push
lea
mov
call
mov
pushl
mov
push
lea
call
cmpl
pop
pop
jne
xor
lea
call
pop
mov
pop
leave
ret
push
pushl
call
pop
call
mov
cmp
jb
push
push
push
pushl
mov
call
pushl
xor
add
adc
mov
mov
call
pop
mov
pop
ret
mov
test
je
mov
mov
mov
mov
mov
xor
ret
push
mov
sub
mov
andl
push
push
mov
lea
call
mov
test
je
mov
lea
push
lea
push
call
test
js
mov
test
je
mov
test
je
mov
mov
mov
mov
mov
mov
lea
call
pop
leave
ret
mov
push
mov
lea
call
mov
mov
push
add
push
push
call
and
neg
sbb
and
pop
ret
push
mov
push
push
push
lea
cmpl
movl
movl
jne
lea
call
mov
call
lea
call
pop
leave
ret
sub
push
mov
mov
push
push
push
xor
or
mov
lea
jne
mov
mov
lea
push
add
push
lea
movl
movl
mov
call
mov
test
jne
test
jne
mov
push
lea
call
mov
cmp
je
push
push
lea
mov
push
lea
movl
movl
mov
movl
mov
call
mov
mov
push
lea
push
push
call
mov
mov
test
jne
test
jne
mov
test
jne
test
jne
test
js
mov
mov
mov
mov
push
push
mov
lea
movl
mov
mov
mov
mov
push
push
call
mov
mov
test
jne
test
jne
test
js
mov
mov
push
mov
push
lea
movl
mov
mov
mov
push
push
mov
call
mov
mov
test
jne
test
jne
test
js
mov
mov
push
lea
movl
mov
mov
mov
push
push
mov
call
mov
mov
test
jne
test
jne
test
js
mov
mov
push
mov
push
lea
movl
movl
mov
mov
push
push
mov
call
mov
mov
test
jne
test
jne
test
js
mov
test
mov
je
mov
push
mov
call
mov
mov
mov
push
call
test
js
mov
push
push
push
push
call
mov
test
je
mov
mov
push
call
lea
call
lea
call
xor
pop
pop
pop
pop
add
ret
push
mov
and
sub
push
push
push
xor
push
lea
mov
call
lea
mov
call
mov
pushl
neg
lea
sbb
call
mov
cmp
mov
je
mov
lea
push
push
push
lea
push
push
call
mov
lea
call
test
js
movzwl
test
je
push
lea
mov
call
lea
mov
call
mov
pushl
neg
lea
sbb
call
mov
cmp
je
mov
lea
push
push
push
lea
push
push
call
mov
lea
call
test
js
pushl
pushl
call
cmp
jne
lea
call
mov
cmp
jne
xor
lea
call
pop
mov
pop
pop
mov
pop
ret
mov
movl
xor
ret
int3
int3
int3
int3
push
mov
lea
mov
or
lock
dec
jne
movl
movl
movl
mov
test
movl
jne
push
push
mov
lea
push
mov
add
lea
lea
cmp
jne
push
push
push
push
mov
call
mov
cmp
mov
jne
mov
test
mov
jne
test
jne
mov
test
jne
mov
test
jne
push
call
add
pop
pop
xor
pop
pop
ret
push
mov
push
pushl
andl
mov
lea
call
pushl
andl
mov
lea
call
cmpl
je
mov
test
je
pushl
mov
call
mov
mov
lea
call
lea
call
xor
leave
ret
jmp
int3
push
mov
and
sub
push
push
push
mov
mov
test
je
mov
mov
mov
mov
xor
and
or
mov
mov
jne
mov
and
xor
or
je
mov
mov
mov
push
mov
call
test
jne
mov
mov
mov
xor
mov
mov
cmp
mov
mov
mov
mov
jne
mov
cmp
mov
mov
je
mov
mov
push
push
lea
push
push
push
call
mov
cmp
jne
mov
andl
pop
pop
pop
mov
pop
ret
mov
mov
mov
push
add
push
mov
call
test
je
jmp
mov
cmp
je
mov
call
test
je
mov
mov
push
mov
call
mov
and
add
or
je
cmpl
jne
mov
call
test
jne
mov
mov
mov
mov
mov
movl
movl
movl
push
call
add
jmp
mov
and
or
je
mov
xor
jmp
int3
push
mov
push
mov
mov
mov
push
mov
sub
test
jne
mov
mov
mov
add
push
push
push
call
add
mov
mov
add
push
push
lea
push
call
add
pop
pop
pop
ret
mov
mov
cmp
mov
lea
ja
mov
test
jne
mov
mov
cmp
mov
lea
ja
xor
ret
mov
jmp
push
mov
mov
test
jne
mov
mov
mov
mov
add
pop
ret
push
mov
push
mov
mov
mov
lea
push
push
call
test
js
mov
mov
cmp
jge
inc
mov
cmp
jge
xor
pop
pop
ret
mov
jmp
mov
mov
cmp
jae
mov
push
mov
test
je
mov
push
call
mov
pop
ret
push
mov
push
mov
mov
mov
lea
push
push
call
test
js
mov
test
jl
cmp
jge
mov
mov
push
push
call
mov
mov
xor
pop
pop
ret
push
mov
push
mov
mov
mov
lea
push
push
call
test
js
mov
test
jl
cmp
jge
xor
inc
pop
pop
ret
xor
jmp
push
mov
mov
test
jbe
mov
dec
mov
lea
cmpl
je
mov
mov
push
call
mov
mov
andl
mov
test
jne
xor
pop
ret
orl
orl
ret
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
cmpl
push
push
push
je
mov
push
movl
call
mov
add
cmpl
lea
jne
push
lea
call
mov
push
call
mov
mov
lea
lea
lea
add
cmp
jb
mov
lea
lea
lea
cmp
jne
push
push
push
lea
push
mov
call
mov
cmp
jne
pop
pop
pop
pop
add
ret
mov
jmp
lea
mov
mov
call
add
cmp
jb
mov
jmp
lea
mov
lea
mov
test
mov
jne
test
jne
mov
test
mov
jne
test
jne
mov
test
mov
je
lea
push
mov
call
add
test
je
add
add
cmp
mov
jne
jmp
push
mov
lea
call
lea
call
lea
call
testb
movl
movl
je
push
call
pop
mov
pop
ret
push
mov
lea
xor
call
lea
xor
call
lea
xor
call
xor
pop
ret
mov
push
push
mov
movl
movl
movl
cmpl
jge
mov
test
jne
mov
test
je
push
call
test
pop
je
andl
mov
test
jne
mov
test
jne
mov
test
mov
jne
test
jne
lea
call
mov
test
mov
jne
test
jne
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
pop
pop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
mov
push
mov
push
push
mov
cmp
jge
xor
cmp
jne
testb
jne
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
movb
mov
mov
mov
movb
cmpb
jne
cmpb
jne
mov
mov
lea
push
push
mov
call
test
js
mov
lea
push
mov
push
push
call
add
test
jne
lea
mov
mov
mov
push
push
mov
call
cmp
jne
lea
push
mov
call
call
push
push
push
push
call
orl
mov
mov
test
jne
test
jne
testb
jne
push
lea
movl
call
mov
mov
lea
push
call
add
cmpl
je
push
call
add
test
je
mov
call
mov
test
je
mov
mov
push
call
mov
test
lea
mov
jne
cmpl
je
mov
and
jne
test
jne
push
mov
call
push
lea
movl
call
mov
mov
call
mov
lea
push
lea
push
movzbl
push
push
mov
shr
and
push
mov
push
lea
push
push
mov
push
push
call
test
js
mov
mov
add
test
movl
jne
push
push
push
push
push
push
push
call
add
lea
mov
call
lea
call
mov
test
jne
test
jne
mov
test
jne
test
jne
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
testb
je
jmp
int3
int3
int3
int3
sub
mov
xor
mov
mov
push
mov
push
push
mov
mov
mov
mov
mov
mov
xor
cmp
mov
mov
je
cmp
jne
movl
xor
test
js
mov
mov
push
lea
lea
movl
movl
mov
mov
mov
call
cmp
je
push
lea
push
lea
push
mov
mov
movl
movl
mov
mov
call
xor
jmp
mov
jmp
lea
movzwl
push
call
add
test
jne
cmp
jae
mov
nop
movzwl
cmp
je
cmp
je
cmp
je
cmp
je
add
cmp
jb
lea
mov
xor
mov
mov
sub
mov
lea
lea
mov
movl
movl
mov
call
add
push
mov
mov
mov
call
test
jne
mov
cmpw
je
mov
push
mov
call
add
xor
push
lea
mov
call
lea
lea
push
push
mov
mov
movl
movl
mov
movb
call
push
push
push
lea
push
lea
push
call
mov
mov
add
test
jne
test
jne
test
js
mov
cmp
je
cmp
je
mov
mov
push
push
push
mov
call
lea
call
mov
test
jne
test
jne
nop
mov
xor
jmp
lea
nop
mov
cmp
jb
mov
push
mov
lea
mov
call
lea
call
lea
push
mov
mov
call
mov
mov
mov
mov
push
push
mov
push
push
mov
push
push
push
call
test
js
cmp
je
mov
cmp
je
push
mov
lea
mov
call
mov
cmp
jne
cmp
lea
jne
mov
push
mov
call
mov
push
lea
mov
call
lea
call
cmp
lea
je
lea
call
mov
test
je
mov
add
push
call
add
test
je
lea
call
xor
pop
mov
pop
pop
pop
xor
call
add
ret
push
mov
push
push
push
mov
push
lea
cmpl
movl
je
mov
test
je
mov
mov
lea
mov
push
push
push
call
add
cmpl
movl
je
push
call
pop
mov
test
jne
testb
je
push
call
pop
pop
mov
pop
leave
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
cmp
je
cmp
je
test
push
je
cmp
je
cmp
je
cmp
je
xor
mov
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
xor
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
je
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
int3
int3
int3
int3
mov
test
push
push
je
mov
mov
mov
cmp
je
mov
add
test
jne
mov
pop
movl
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
push
mov
sub
mov
xor
mov
mov
push
push
mov
mov
push
mov
mov
xor
lea
push
lea
lea
mov
movl
movl
mov
mov
mov
call
mov
test
jne
mov
pushl
mov
push
call
test
mov
jne
push
lea
mov
call
pushl
lea
call
test
pop
mov
je
pushl
call
mov
pop
mov
mov
mov
lea
call
lea
call
mov
pop
mov
pop
xor
pop
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
or
push
push
push
lea
push
lea
push
call
add
test
mov
jne
push
call
cmp
pop
je
pushl
mov
mov
mov
call
mov
mov
xor
mov
cmp
je
lea
call
mov
pushl
mov
push
call
test
mov
jne
lea
call
pushl
pushl
call
pop
pop
push
push
call
mov
add
add
add
lods
mov
lret
xchg
movsb
pop
add
add
mov
jnp
mov
add
add
ret
mov
stos
pusha
pop
xchg
pop
mov
clc
add
mov
cmc
mov
out
addl
mov
add
jle
in
add
add
sub
push
mov
add
push
push
push
push
call
add
int3
add
jle
jno
add
jle
add
add
add
add
mov
add
add
mov
scas
add
add
add
loopne
add
add
add
add
les
mov
jbe
add
mov
rolb
testl
popl
push
push
call
mov
sti
stos
mov
mov
enter
jl
jmp
add
push
add
lahf
add
add
testl
add
add
add
shlb
add
add
sub
pop
push
push
push
push
push
lea
push
call
fadds
addr16
icebp
add
push
add
loop
xchg
imul
in
add
lods
loop
pushf
add
lods
pop
rcr
pop
xchg
add
std
lods
cld
jmp
shll
scas
add
hlt
jmp
xchg
lea
add
sub
pop
push
push
push
lea
push
lea
push
push
call
add
pushf
add
in
aam
ljmp
mov
out
add
add
hlt
jbe
add
add
mov
mov
in
in
pop
push
push
push
push
push
push
push
push
push
call
jb
popf
loopne
rolb
push
add
mov
pop
add
testl
test
sub
jle
sarb
add
rcll
add
fisttpll
add
add
popa
rolb
imul
add
add
add
add
add
rorb
lcall
das
add
add
push
push
push
push
push
lea
push
push
push
call
int3
push
add
roll
data16
push
test
add
std
pop
cld
loopne
add
add
mov
add
push
mov
addl
hlt
mov
add
mov
mov
hlt
sub
pop
push
push
push
push
lea
push
push
push
call
add
insb
add
mov
add
testb
mov
add
cmpsl
add
add
jno
add
push
xchg
loop
je
push
mov
add
lods
pop
mov
push
add
add
call
add
jmp
push
push
push
push
lea
push
push
push
push
push
lea
push
call
mov
out
pop
imul
mov
add
xchg
imul
aam
push
add
movsl
add
add
mov
add
jo
add
cmc
arpl
add
fldl
call
pop
ret
push
push
push
push
push
call
pop
xchg
fwait
add
imul
mov
add
int3
jae
mov
leave
lret
push
add
add
pop
add
lds
push
mov
pop
mov
enter
add
in
in
pop
mov
mov
push
push
push
lea
push
lea
push
call
imul
add
shlb
add
add
add
roll
mov
sahf
jle
lea
push
add
movsl
mov
testb
pop
sub
pop
add
push
push
push
push
call
roll
jnp
xchg
stc
mov
mov
rolb
add
int
roll
add
add
addb
fistl
add
add
vrcpps
add
pop
mov
mov
add
les
arpl
fisubl
mov
push
xchg
add
pop
add
in
lock
lcall
ret
add
add
push
push
push
push
call
stc
xchg
lret
shll
jmp
add
lock
mov
push
push
cmc
add
add
add
int3
out
add
add
insb
add
lds
add
pushf
add
jbe
mov
in
lock
add
push
push
lea
push
push
lea
push
push
push
lea
push
push
call
push
add
mov
fidivl
bound
add
add
mov
mov
mov
add
icebp
add
add
js
add
arpl
insb
mov
jmp
mov
jmp
add
clc
sub
pop
mov
push
push
push
lea
push
push
lea
push
push
push
call
data16
add
jo
bnd
add
add
mov
lds
push
add
mov
addb
xlat
scas
imul
pushf
test
add
imul
lods
sti
xlat
ljmp
movb
jl
in
add
jns
out
out
add
sub
pop
xor
push
push
push
push
push
push
push
push
push
call
mov
mov
jmp
in
add
add
pop
aad
cwtl
add
js
ret
add
add
lret
sahf
add
xchg
jge
test
add
mov
cli
add
mulb
fdivr
lcall
les
fidivrs
mov
push
push
pop
add
add
ror
sub
pop
add
pop
push
push
lea
push
lea
push
lea
push
push
push
lea
push
push
push
call
pop
add
add
cli
add
mov
test
out
filds
xchg
xchg
add
add
lods
movsb
roll
rolb
popa
sub
pop
pushl
call
push
push
call
add
fisubl
test
jecxz
add
add
xchg
lods
add
lret
add
xchg
mov
pop
add
mov
jbe
mov
nop
mov
aam
je
push
xchg
cmpsb
mov
mov
out
int3
sti
pop
push
add
imul
out
lahf
jb
sub
pop
mov
push
push
push
push
push
push
call
add
add
test
imul
add
in
in
xchg
mov
add
add
pop
pop
loop
addb
push
insb
ficomps
mov
add
add
call
insb
add
aad
add
sub
pop
movl
push
push
push
push
push
push
lea
push
lea
push
push
push
call
add
mov
add
add
jns
add
mov
mov
push
mov
add
in
test
add
shl
add
mov
in
fcomps
inc
call
lea
push
call
add
pop
iret
cwtl
add
popf
roll
add
add
jecxz
add
add
add
xorb
add
add
loop
add
xchg
add
out
add
cltd
push
add
pop
roll
add
sub
pop
push
push
lea
push
push
push
lea
push
lea
push
call
add
mov
insb
in
add
add
lahf
enter
fstpt
hlt
jp
add
add
add
cmpsb
nop
jae
jae
xlat
pop
popf
gs
fidivl
in
sub
pop
pushl
push
push
push
lea
push
call
add
jae
add
add
push
mov
mov
std
add
jbe
push
add
xchg
faddl
pop
jbe
mov
add
push
fdivl
add
data16
add
pop
add
add
aam
xchg
add
pop
sub
pop
pushl
push
push
push
push
lea
push
push
lea
push
call
lcall
in
insb
pushf
push
add
pop
add
imul
mov
add
add
push
add
add
pop
cwtl
shr
add
add
sbb
test
std
add
in
push
add
add
add
xchg
push
pusha
sub
pop
call
push
push
lea
push
push
push
call
add
stos
xchg
movsb
push
add
aad
add
add
pushf
filds
add
popl
add
mov
filds
add
add
add
fdivrp
pop
add
jl
add
pop
fildl
loop
mov
add
test
in
in
lcall
jne
pushl
push
push
lea
push
push
call
add
jo
pop
add
pusha
mov
add
enter
aam
add
mov
jecxz
mov
roll
add
sub
pop
call
push
push
push
or
not
add
sub
add
ror
sub
inc
ror
xor
inc
pop
dec
pop
push
lea
push
push
push
lea
push
lea
push
push
push
call
mov
flds
jmp
mov
add
out
push
add
add
cwtl
lcall
add
test
leave
imul
add
add
mov
ja
add
add
push
loope
mov
xchg
add
sub
pop
pushl
push
push
push
push
push
push
push
push
lea
push
call
add
cmpb
mov
out
mov
in
add
jp
gs
add
add
jo
rolb
add
lea
popa
jbe
sub
pop
call
push
push
push
inc
shl
lea
push
or
not
add
shl
sub
add
sub
ror
pop
shl
rol
shl
pop
push
push
push
push
push
call
push
out
sahf
mov
mov
mov
add
mov
add
sti
add
pusha
add
jmp
jp
add
add
mov
jae
push
test
jnp
leave
int3
add
fiaddl
add
lcall
push
push
push
call
movsl
test
mov
pop
jmp
test
add
add
xchg
jne
mov
mov
test
movsl
mov
test
movl
mov
loop
mov
lcall
pop
push
push
push
push
push
push
push
push
push
lea
push
push
call
nop
add
popa
add
jbe
pop
lock
add
ret
repnz
lods
movsb
popa
add
jae
add
rorb
push
push
lea
push
lea
push
call
pop
pop
jae
jle
cwtl
add
add
in
pop
in
pop
loopne
test
pop
add
jae
add
arpl
push
test
add
add
add
cmpsb
std
fldenv
call
push
push
push
call
add
pop
add
pusha
jecxz
nop
ljmp
mov
mov
add
test
rolb
pop
repnz
mov
clc
lcall
push
push
push
push
push
lea
push
push
push
lea
push
call
xlat
add
sbbl
sahf
jnp
xlat
mov
jmp
add
add
xchg
add
add
xchg
jno
iret
push
add
push
inc
std
mov
lds
faddl
mov
imul
add
push
add
add
in
fdivr
lcall
pop
hlt
add
push
push
push
push
push
push
push
push
lea
push
call
add
add
mov
scas
add
add
add
repnz
mov
add
incb
jl
shl
addl
in
xchg
add
ja
jb
add
mov
bound
add
shll
xchg
fstpt
xchg
add
add
ret
add
add
push
push
push
push
push
lea
push
push
push
push
call
mov
xlat
cli
mov
add
add
mov
add
mov
test
push
add
add
outsl
xchg
std
aam
add
lcall
xchg
fimuls
add
jne
lcall
popa
leave
fildl
add
jmp
lret
lds
out
add
lcall
ret
dec
dec
add
push
lea
push
lea
push
call
add
out
add
add
in
pop
lret
stos
jmp
mov
leave
ja
pop
add
out
ror
add
stc
add
mov
out
rclb
ret
adcl
add
lcall
xor
or
cmpsl
call
push
add
pop
mov
test
jne
in
push
add
add
pop
add
pop
ret
add
xor
push
push
push
push
push
push
call
jmp
jb
add
out
jge
mov
in
loopne
test
mov
mov
add
out
mov
add
fldl
popa
pop
mov
add
add
nop
add
lea
mov
outsl
jp
add
add
lds
sub
pop
add
push
push
push
call
jno
rorl
repnz
add
ljmp
dec
mov
add
add
test
xchg
add
mov
shrl
add
add
add
add
add
push
push
push
push
push
call
outsl
add
mov
jbe
movsb
add
cmc
add
add
mov
add
fwait
outsl
mov
lret
lods
add
add
add
fcmovnb
add
add
push
in
add
mov
jae
add
add
push
add
push
jmp
xchg
add
add
jbe
add
lcall
push
push
push
push
push
push
push
push
call
push
add
add
mov
jne
add
add
stos
add
mov
repnz
notb
ljmp
xchg
sub
pop
mov
push
push
push
push
push
push
push
push
call
add
leave
add
add
shll
stos
icebp
add
mov
push
test
add
mov
loop
add
add
in
lcall
add
push
push
push
lea
push
lea
push
push
push
call
lock
fwait
add
add
add
aad
scas
add
add
fidivs
shrb
add
add
xchg
add
sub
pop
add
push
push
push
push
push
push
push
lea
push
push
lea
push
call
add
mov
cld
test
mov
pop
loope
jle
add
add
xchg
add
add
addl
add
pop
push
push
lea
push
lea
push
push
push
push
push
call
add
test
mov
add
add
movb
mov
add
add
add
imul
add
add
pop
add
sar
mov
pusha
sahf
lds
add
out
scas
add
add
data16
mov
add
lcall
dec
add
icebp
cmp
out
jp
dec
dec
push
push
push
call
xlat
push
mov
add
add
scas
imul
loope
add
add
add
add
cltd
test
jne
cwtl
add
cmc
add
push
aam
jb
outsl
add
add
pop
mov
mov
lcall
push
lea
push
push
push
lea
push
lea
push
call
std
add
add
in
imul
add
add
lret
pop
add
scas
add
cmpsl
addl
mov
jl
sti
add
pop
xchg
jno
add
popa
mov
mov
add
in
call
mov
push
push
lea
push
push
lea
push
push
push
push
push
push
call
add
jb
push
add
test
add
mov
iret
add
add
add
add
iret
add
rolb
outsl
pop
add
rolb
nop
add
add
mov
nop
addl
fs
pop
add
push
add
fiadds
add
fnsave
add
add
add
jle
sub
pop
xor
push
push
push
push
push
push
push
push
call
add
lret
add
movb
mov
nop
fldl
icebp
fsubr
add
add
lds
popf
hlt
mov
add
add
cld
loop
std
push
arpl
mov
stc
push
mov
jo
jmp
add
jmp
add
mov
add
aad
add
lcall
les
add
push
push
push
call
into
lock
add
jo
add
lret
pop
add
pusha
mov
sahf
pop
loope
add
sti
mov
pop
add
xchg
add
sahf
scas
incb
add
add
jns
lea
add
fucomp
std
aad
add
push
add
mov
hlt
lcall
enter
add
push
mov
mov
push
call
pop
mov
mov
add
add
int3
addb
xchg
mov
xlat
aam
add
add
jae
mov
jb
push
mov
fisubs
test
push
lea
push
push
push
lea
push
lea
push
push
push
call
add
addb
pop
add
add
add
lahf
add
mov
pop
xchg
jge
add
add
mov
mov
jo
fwait
add
lock
andb
lcall
movsb
push
push
push
lea
push
push
lea
push
push
push
call
notl
in
out
add
clc
add
lcall
test
mov
jno
mov
fldl
cltd
fdivl
add
movb
mov
add
sub
pop
pop
push
lea
push
push
push
push
call
xchg
xorl
add
add
pop
fst
add
add
addb
push
movsl
add
xlat
mov
loop
ljmp
cmpsl
out
loope
mov
popf
lahf
add
fdiv
pusha
add
in
mov
pop
test
push
filds
pop
hlt
add
push
push
push
push
push
lea
push
push
lea
push
call
xchg
mov
xlat
in
repnz
add
fcomp
jae
add
jns
push
cwtl
add
add
add
xorl
jl
hlt
add
hlt
mov
mov
cli
xlat
fld
sub
pop
add
push
sub
ror
pop
add
push
push
push
push
lea
push
call
add
int
add
mov
add
adc
add
test
insb
add
add
sti
push
add
fs
add
test
add
add
pusha
add
add
jle
in
in
pop
mov
push
push
push
call
pop
mov
add
add
jbe
fcom
fildl
stos
pop
int3
add
mov
jmp
pusha
cmpsl
orb
mov
xchg
mov
jbe
bound
add
jne
add
lcall
add
push
push
call
fisubrl
mov
xchg
test
add
add
mov
pop
xchg
add
fisubrs
stc
sarb
leave
add
add
cmpsl
pop
add
in
add
lcall
les
push
push
push
call
xchg
xchg
add
imul
xlat
mov
sarb
leave
pop
fsubrs
add
out
add
mull
add
bound
mull
roll
add
add
add
popf
xchg
add
imulb
sub
pop
mov
push
push
push
push
push
call
add
add
insb
imul
imul
mov
add
cli
add
add
shl
out
lock
add
iret
test
mov
add
add
add
roll
add
add
jb
add
add
add
xchg
outsl
insb
in
add
pop
popf
sub
pop
xor
push
lea
push
push
push
push
call
xchg
mov
stos
pop
test
add
add
add
push
arpl
add
mov
loopne
add
add
add
scas
mov
arpl
add
add
pushf
add
add
sub
pop
add
push
lea
xor
inc
dec
pop
mov
push
push
push
push
push
push
push
lea
push
push
call
in
add
mov
pop
jbe
flds
divb
jb
add
cwtl
add
push
in
lods
add
add
xchg
bound
jge
mov
push
add
add
mov
sub
pop
xor
push
push
push
push
push
push
call
add
add
add
nop
add
hlt
add
mov
pop
mov
add
add
lret
popa
into
xchg
in
add
faddl
les
ror
pop
add
push
add
shr
not
xor
pop
add
push
push
push
push
call
mov
outsl
jb
fstpt
mov
add
add
enter
cwtl
movb
add
add
pop
popf
push
lea
cmpsl
add
add
add
int3
add
add
jmp
add
lcall
fsubrs
call
into
or
out
add
add
add
testb
and
shl
pop
inc
shr
pop
push
inc
pop
pushl
push
push
call
mov
in
fcmovnb
pop
leave
cwtl
mov
xchg
add
loope
mov
call
add
add
add
scas
jno
jmp
xchg
scas
test
fcoms
add
add
in
add
lods
mov
hlt
cmc
pusha
mov
mov
lea
faddl
jge
mov
ret
add
xchg
sub
pop
call
push
push
lea
push
call
loope
pop
xchg
pop
pop
les
xchg
jo
xchg
push
icebp
add
out
add
ja
arpl
filds
add
jo
add
scas
add
mov
filds
xchg
add
jle
movsb
arpl
add
add
sub
pop
push
push
push
add
sub
push
push
pop
add
lea
sub
pop
dec
shr
dec
pop
push
lea
push
push
push
push
call
pop
push
add
in
xchg
jns
add
pushf
add
add
mov
add
push
jle
pop
add
ljmp
in
in
pop
push
push
push
lea
push
push
lea
push
lea
push
push
call
addr16
popl
lock
cwtl
add
enter
loope
bound
in
into
pop
cmpsl
fadds
add
add
add
push
add
jle
jmp
iret
popl
add
rclb
dec
jl
push
call
add
add
add
jae
add
popf
add
mov
mov
shlb
mov
add
add
pop
fisubrl
xchg
add
push
add
out
add
movsl
rcrb
add
pop
mov
mov
add
addb
pop
mov
push
add
pop
push
push
push
push
lea
push
lea
push
push
lea
push
push
lea
push
call
out
jnp
add
jge
add
aad
add
jbe
lods
pop
repnz
add
je
fsubp
addr16
sti
mov
int3
mov
enter
mov
fstl
add
push
push
not
rol
dec
pop
mov
push
sub
shr
shr
lea
pop
add
push
push
push
call
fdivrs
add
add
sarl
mov
add
cmc
jbe
add
add
add
jle
push
add
repnz
cmc
into
js
fiaddl
add
mov
outsl
mov
imul
add
out
fdivr
cli
add
repnz
in
add
in
hlt
pop
add
push
push
push
call
orl
add
add
add
lret
outsl
lods
xchg
enter
hlt
movsb
jae
add
cwtl
sar
sti
pushf
insb
add
mov
push
adcl
jge
aam
push
add
sub
pop
add
push
lea
dec
xor
pop
mov
xor
push
push
push
push
lea
push
push
push
push
lea
push
call
int
stc
in
fst
sti
add
mov
add
add
jmp
vpaddsw
add
add
adc
icebp
data16
add
cld
mov
add
add
lret
int
jno
repnz
mov
hlt
push
add
sub
pop
add
push
push
push
lea
push
lea
push
push
push
push
lea
push
push
call
fldcw
fwait
add
enter
push
mov
outsl
add
add
add
add
jns
push
into
sti
add
add
cwtl
add
add
mov
add
pop
cld
xchg
mov
pushf
xchg
add
push
jo
add
loope
add
loopne
pop
movb
ror
add
inc
adc
lock
jno
sub
xor
pop
add
push
push
push
call
enter
fwait
test
jmp
xchg
jecxz
pop
mov
add
add
shll
mov
add
stos
add
loopne
roll
arpl
lcall
push
add
pop
mov
push
push
lea
push
push
push
push
lea
push
push
push
push
push
call
add
out
add
add
orl
mov
add
shlb
push
call
mov
pop
jne
cld
add
scas
add
rolb
or
push
push
push
call
outsl
aam
in
fiaddl
xchg
add
add
add
mov
rclb
push
mov
add
hlt
add
mov
pop
mov
add
add
add
cltd
js
add
add
test
stos
push
mov
push
test
add
loope
add
test
sub
pop
add
push
push
push
lea
push
push
push
push
push
call
mov
stos
loope
push
add
ficomps
addl
add
xorb
movsl
jns
imulb
int3
arpl
filds
shrl
adcl
insb
xchg
stos
add
fstl
mov
add
aam
sub
pop
rep
push
push
push
push
lea
push
call
mov
add
movb
hlt
add
lcall
aad
mov
test
scas
pop
add
add
notl
imul
cltd
add
addl
mov
add
popl
mov
add
push
add
sahf
xchg
add
xor
add
add
in
in
lcall
dec
and
icebp
cmp
push
dec
or
push
lea
push
call
add
add
loope
mov
ljmp
mov
scas
add
hlt
rolb
mov
add
pop
mov
out
add
add
push
jmp
sub
pop
or
je
push
lea
push
push
lea
push
push
push
lea
push
lea
push
call
pop
fildll
add
cli
push
add
les
add
je
mov
aad
ja
fninit
lds
int3
jmp
arpl
push
add
ljmp
imul
add
sub
pop
mov
push
push
push
push
push
push
push
call
jb
pop
xchg
fildl
add
arpl
add
int
fiaddl
add
mov
enter
add
test
fsubrs
fldl
add
cwtl
ja
add
add
fs
rolb
addb
add
add
add
add
mov
rcrl
call
push
lea
push
call
fs
movsl
mov
mov
imul
mov
add
mov
js
add
fcmovnb
mov
enter
add
add
add
sub
pop
add
push
rol
pop
mov
xor
push
sub
xor
not
lea
pop
add
push
sub
inc
pop
add
push
push
lea
ror
ror
rol
pop
mov
push
push
push
push
push
call
stos
scas
push
add
loop
add
aad
testb
add
add
ret
jmp
in
mov
add
addr16
mov
add
add
fnstcw
pusha
mov
mov
add
add
out
push
sub
pop
xor
push
lea
push
lea
push
push
push
call
add
xchg
add
sahf
mov
icebp
xchg
add
push
add
cli
add
out
loopne
bnd
add
in
xchg
add
add
add
fwait
imul
repnz
add
ret
in
pop
add
push
push
call
rcl
leave
lds
mov
hlt
xchg
jae
outsl
add
add
js
repnz
push
jl
add
add
add
xchg
call
add
mov
fimull
rol
add
out
sub
pop
add
pop
push
pop
rep
push
push
push
push
lea
push
push
push
push
push
lea
push
call
xchg
add
add
add
lods
mov
mov
add
add
add
popa
aam
jl
add
testb
ja
add
fwait
xchg
mov
loop
fnsetpm(287
gs
mov
mov
xor
push
push
lea
push
push
push
push
lea
push
push
call
cli
add
mov
repnz
call
loopne
add
jo
lcall
stos
je
add
out
add
mov
xlat
add
mov
in
add
mov
add
xchg
jle
rolb
add
add
out
xlat
fsubs
loopne
lcall
leave
je
mov
push
push
push
push
push
call
cwtl
add
faddl
int3
xchg
add
cli
mul
push
jne
in
add
out
add
lock
jecxz
mov
pop
roll
outsl
push
sub
pop
add
push
lea
push
lea
push
lea
push
lea
push
call
out
push
jo
add
add
add
add
fwait
push
iret
mov
je
mov
jp
shlb
add
add
into
repnz
add
add
add
xchg
jo
xchg
mov
add
add
andl
push
add
add
sub
pop
add
push
push
push
push
push
push
call
flds
mov
add
lcall
add
mov
mov
xchg
add
pushf
push
subb
add
call
testb
add
mov
int3
push
add
iret
xchg
pop
add
mov
lods
add
add
js
add
test
call
rep
push
push
push
push
lea
push
push
push
call
out
add
mov
outsl
xlat
movb
add
mov
cmpsl
ret
andl
into
ret
add
orl
test
add
pop
cwtl
mov
mov
add
mov
add
add
call
add
jle
sub
pop
pop
push
push
xor
push
and
add
lea
inc
sub
add
pop
shl
ror
shl
pop
push
push
push
push
push
call
add
add
add
push
add
push
xchg
add
cli
mov
roll
add
test
add
xchg
xchg
movsl
cli
cltd
add
outsl
add
push
add
push
into
add
add
repnz
add
sahf
xchg
lock
add
movsl
rcr
push
fldl
push
inc
lea
inc
shr
pop
mov
push
not
pop
mov
push
push
push
lea
push
push
push
push
push
push
call
lods
hlt
add
add
mov
add
add
push
add
add
add
test
lock
push
popf
test
cltd
mov
insb
mov
add
sub
pop
mov
jmp
push
xor
sub
sub
pop
push
push
lea
push
push
push
push
push
call
mov
add
out
test
xchg
add
arpl
push
vphsubdq
ljmp
test
add
add
int
xchg
add
add
add
mul
add
add
testl
mov
mov
lcall
in
push
not
shr
pop
add
push
push
push
call
imul
fmull
scas
mov
stos
add
push
aam
cld
add
add
mov
ljmp
loopne
jo
add
mov
add
add
testb
in
hlt
pop
push
push
dec
shr
pop
push
push
sub
pop
push
push
add
add
pop
push
mov
push
push
push
call
add
mov
add
lods
lret
add
add
icebp
mov
xchg
add
mov
xlat
pop
bound
add
add
lcall
push
push
push
push
lea
push
push
lea
push
push
push
call
cmc
add
cld
add
push
roll
rolb
add
add
fcoms
add
add
add
add
add
add
add
pop
add
add
add
add
jne
mov
add
xchg
test
push
stc
call
pop
pop
push
add
inc
pop
pop
push
push
call
test
push
cltd
add
fiadds
add
mov
jge
sahf
mov
in
add
cmc
movb
add
out
lock
jns
xchg
out
in
add
add
lcall
push
push
push
call
mov
cmp
fwait
in
add
insb
add
shlb
add
out
gs
lea
add
add
mov
xchg
sahf
add
push
pusha
sub
pop
leave
push
push
lea
push
push
push
push
lea
push
push
lea
push
lea
push
call
add
jno
push
pop
jae
cwtl
mov
int3
add
add
add
add
pushf
jne
add
data16
test
xchg
add
add
add
mov
movb
add
lcall
or
push
push
lea
push
call
add
add
add
repnz
lea
incb
add
add
jns
add
add
fdivr
add
jbe
add
add
mov
push
mov
push
push
push
lea
push
push
push
push
lea
push
push
call
add
add
mov
pusha
mov
cmpsb
js
mov
add
add
test
mov
mov
push
cld
xchg
loopne
add
or
mov
scas
test
push
add
pop
add
mov
push
add
lcall
clc
push
push
push
call
lock
fnstsw
pop
add
add
mov
in
add
add
add
fiaddl
lret
mov
mov
fmull
mov
sarl
nop
add
hlt
add
jbe
sub
pop
push
push
push
lea
shr
shr
sub
pop
push
movl
push
lea
push
lea
push
call
add
lock
jbe
loopne
add
call
cmpsl
add
add
ficoml
mov
add
jae
push
push
popf
add
out
push
fisubl
mov
jb
in
lcall
jge
leave
add
add
xchg
out
in
hlt
lcall
inc
clc
call
into
inc
rol
add
add
pop
test
je
mov
push
push
push
call
add
push
add
add
add
mov
add
test
fs
cmc
add
add
add
mov
pop
jl
jb
js
lcall
add
add
mov
add
mov
jmp
ja
xchg
mov
pop
push
sahf
leave
les
call
lcall
push
add
pop
pop
pop
push
xor
ror
rol
pop
pop
push
rol
not
not
pop
leave
push
push
push
push
call
aad
out
xchg
add
fsubl
test
add
rcll
mov
andb
aam
insb
add
xchg
add
push
add
in
add
jge
iret
ret
add
add
add
mov
add
add
icebp
mov
add
mov
add
add
call
in
lock
lcall
add
push
ror
inc
dec
pop
push
push
push
push
call
add
lret
pusha
mov
mov
add
mov
add
add
push
add
jmp
add
add
stc
add
add
in
push
not
add
shl
pop
add
push
push
push
lea
push
lea
push
call
add
int3
lahf
fiaddl
xchg
popl
mov
add
icebp
mov
pop
scas
mov
add
in
imul
in
pop
push
push
lea
pop
push
push
inc
inc
pop
push
push
add
sub
dec
pop
push
testl
push
shr
xor
sub
pop
addl
push
push
push
push
push
push
push
push
push
call
arpl
cwtl
add
fs
aam
add
push
add
add
mov
add
add
add
jmp
addr16
add
add
cld
add
add
ror
int
aam
pop
add
add
add
shll
test
divl
mov
aad
add
add
add
sub
pop
call
push
push
lea
push
push
push
lea
push
push
push
push
push
call
flds
sahf
popf
add
add
into
lock
add
stc
cld
mov
out
cmpsl
add
add
jne
lods
movb
add
mov
add
jb
scas
xchg
add
lcall
inc
cld
push
xor
rol
sub
dec
pop
pushl
push
push
push
push
push
push
push
push
push
call
add
in
mov
mov
in
add
mov
add
fiaddl
add
mov
fbstp
add
add
push
jp
jns
add
fsts
add
sub
pop
push
push
push
push
push
push
push
call
enter
add
add
xchg
mulb
add
mov
add
add
jecxz
fwait
mov
add
add
call
push
push
shl
ror
pop
call
push
push
call
add
push
lods
add
add
add
mov
jecxz
aam
add
in
add
add
in
out
add
aam
add
xlat
test
addr16
xchg
roll
add
add
add
add
leave
sahf
add
add
jns
sub
pop
cmpl
jne
push
shr
inc
add
pop
pop
push
lea
push
lea
push
lea
push
push
call
test
roll
add
add
lea
jnp
popa
lods
add
roll
mov
jns
fwait
repnz
neg
scas
add
add
add
mov
sub
pop
pop
push
lea
push
lea
push
push
push
lea
push
push
push
lea
push
push
call
add
add
mov
hlt
add
js
loopne
in
add
add
jb
jns
iret
in
popa
pop
test
fwait
push
jo
mov
in
fdivr
lcall
push
xor
dec
pop
pop
leave
push
push
push
push
lea
push
push
push
push
push
call
add
add
push
loopne
xlat
pop
int3
mov
add
fisubs
push
add
add
pop
imul
sub
pop
ret
push
lea
inc
pop
push
push
shr
pop
mov
push
push
push
push
push
lea
push
lea
push
lea
push
call
xchg
add
cld
xchg
addr16
ffreep
fldcw
add
add
add
add
loop
add
sti
imul
xlat
add
xlat
jp
imul
faddl
bound
cld
push
lea
push
push
push
lea
push
lea
push
push
call
mov
add
add
cmpl
add
add
add
add
add
add
add
add
add
pop
add
imul
stc
arpl
push
ficompl
jbe
add
cld
add
mov
in
in
lcall
push
lea
push
push
call
pusha
fisubrl
mov
add
lret
add
cmpsb
cmpsb
test
add
add
bound
lods
mov
ljmp
jnp
xchg
shll
scas
jl
andb
add
fwait
add
push
fsubs
sub
pop
push
push
push
lea
push
push
call
pusha
xchg
add
add
pop
add
add
jnp
outsl
add
add
add
out
xchg
add
enter
add
xchg
icebp
in
add
lahf
xchg
roll
lcall
push
shr
pop
push
movl
push
rol
not
add
pop
push
push
lea
push
push
push
push
push
lea
push
push
push
call
push
mov
roll
add
sahf
jge
test
add
add
add
push
xchg
mov
add
imul
std
cmc
jp
mov
add
push
add
fldl
lahf
shlb
lcall
xor
call
out
call
jp
push
clc
pop
push
push
inc
xor
ror
xor
pop
call
push
lea
push
lea
push
call
pusha
add
roll
add
add
mov
xchg
mov
add
lcall
jecxz
add
add
add
cmc
imul
add
clc
add
mov
add
add
add
std
add
add
aam
addr16
iret
lret
clc
mov
add
add
jnp
in
hlt
lcall
insl
cld
add
test
call
int
pop
pop
push
xor
shr
pop
pop
pop
push
lea
ror
xor
pop
pop
leave
push
add
pop
ret
push
ror
dec
add
pop
push
push
inc
pop
mov
push
lea
push
push
push
push
lea
push
call
clc
hlt
pop
add
mov
add
jmp
cli
std
in
fiaddl
aam
ret
mov
mov
mov
fwait
add
mov
popf
xchg
data16
testb
int3
add
lcall
cld
push
push
inc
add
pop
push
push
push
push
push
call
add
cli
cmpsb
clc
shlb
add
ret
jl
enter
jns
add
push
mov
mov
add
fmulp
add
push
add
stos
add
add
xchg
lea
push
xchg
add
in
hlt
lcall
mov
push
sub
shl
pop
lea
sub
push
push
push
push
push
push
lea
push
lea
push
push
call
jo
add
orb
test
add
mov
xchg
call
lcall
mov
add
jl
add
aam
add
mov
fs
sub
pop
mov
push
lea
push
call
fcomip
add
arpl
xchg
mov
fs
fldl
add
test
pop
lods
add
add
loope
insb
sti
in
fiadds
add
jb
aam
nop
mov
imul
add
aam
add
clc
mov
jbe
add
add
sub
pop
shr
add
push
not
shl
rol
pop
mov
push
push
push
push
lea
push
push
push
call
add
mov
out
push
sahf
add
add
add
int
add
add
add
test
add
gs
aad
mov
in
in
mov
push
push
push
call
imul
loope
add
add
add
sahf
add
cld
mov
xchg
arpl
mov
cltd
push
leave
sub
pop
add
push
add
ror
not
pop
add
push
ror
sub
xor
pop
mov
push
inc
pop
mov
push
pop
cmp
jne
push
push
lea
push
call
add
jge
faddl
xchg
xchg
jb
xchg
lea
incb
mov
std
add
lods
mov
add
xchg
loop
iret
stos
mov
add
test
hlt
pop
cmp
jne
mov
push
inc
sub
xor
pop
movl
push
ror
add
pop
jmp
push
push
push
push
lea
push
push
push
push
push
push
call
scas
outsl
add
add
lahf
add
add
rolb
add
incb
orb
add
andl
int
fs
adcb
add
jae
xchg
add
add
cmpsb
in
call
mov
ljmp
add
add
add
add
add
inc
cld
mov
push
shl
pop
sub
jne
push
shl
pop
mov
push
shr
sub
sub
pop
movl
push
lea
push
push
call
add
add
pop
into
add
hlt
jp
add
in
add
add
lea
push
in
add
mov
hlt
lcall
fimull
add
push
sbb
lea
push
lea
push
lea
push
lea
push
push
lea
push
lea
push
call
push
add
popf
mov
add
xchg
notb
add
cmp
pop
xchg
add
add
add
je
add
neg
add
ljmp
cld
push
lea
push
push
lea
push
push
push
call
int3
add
push
add
pop
out
testl
xchg
lea
stc
mov
jl
lahf
stc
jae
mov
xchg
stc
fnstenv
add
nop
mov
add
push
push
call
xchg
xchg
pop
add
cmc
add
jp
add
mov
add
add
add
enter
add
add
add
pushf
mov
xchg
data16
add
xchg
orb
imul
add
add
movl
jecxz
sub
add
cmp
jne
push
lea
dec
dec
sub
pop
mov
push
sub
ror
shr
sub
pop
movl
push
pop
jmp
push
push
push
push
push
push
call
add
jno
loopne
mov
add
cmp
testl
jb
fcmove
rcrl
add
add
mov
adcb
lods
loope
add
add
mov
push
push
push
push
push
push
push
push
push
call
add
pop
add
mov
mov
fcompl
add
jo
xchg
std
add
add
stc
jne
mov
cwtl
pop
pop
mov
add
pop
cld
add
push
cmpb
aam
add
std
xchg
int3
test
push
sahf
repnz
out
push
lret
mov
sub
pop
cmpw
jne
push
push
push
call
mov
bound
mov
add
add
stos
mov
add
add
jne
lahf
shll
test
add
lea
mov
outsl
add
data16
mov
add
test
add
movsb
lock
lcall
inc
adc
out
pop
add
pop
movl
jmp
push
inc
pop
pushl
push
lea
push
lea
push
push
push
push
call
add
add
pop
cmpsl
mov
movsl
add
insb
in
in
ljmp
pop
jns
add
xchg
add
add
lock
jl
add
stc
fs
pop
pop
mov
push
push
lea
push
push
call
xchg
insb
leave
add
test
jecxz
add
js
add
add
add
add
in
push
cltd
jne
cmpb
rclb
xchg
in
js
mov
add
stc
scas
scas
xchg
cmpsl
pop
pusha
add
scas
pop
add
lcall
add
roll
push
loopne
add
add
mov
mov
add
xchg
pusha
sub
pop
mov
push
lea
push
push
push
push
push
call
xchg
add
icebp
add
add
pop
add
shrl
add
fbstp
shll
fistps
ficompl
add
adcb
in
call
mov
push
push
rol
lea
push
push
pop
add
shl
sub
pop
not
ror
sub
add
pop
push
push
push
push
push
lea
push
push
call
add
add
jbe
leave
jecxz
add
mov
ljmp
pop
call
jecxz
add
add
aad
jle
add
imul
loop
cmc
mov
add
add
cmc
add
add
add
add
add
mov
out
mov
mov
lcall
call
push
rol
inc
pop
cmpl
je
push
push
sub
push
or
inc
add
sub
sub
shr
lea
shr
shr
pop
sub
rol
pop
push
shl
pop
push
push
push
push
lea
push
push
push
push
lea
push
push
call
add
in
shl
add
add
mov
add
jecxz
add
cmpsb
into
andl
lcall
add
add
jbe
jge
add
stos
add
add
pop
push
push
lret
fadds
push
arpl
lcall
int3
das
add
push
push
push
push
push
push
push
lea
push
lea
push
lea
push
call
add
add
mov
pop
mov
aam
add
add
mov
mov
mov
jnp
add
cmpsb
add
cltd
add
add
add
add
mov
add
shlb
sti
xchg
mov
in
jno
addb
add
cld
mov
flds
add
lods
enter
stc
sub
pop
cmpl
je
push
push
shr
inc
push
sub
add
xor
inc
sub
inc
ror
dec
pop
pop
push
sub
sub
add
pop
push
push
lea
push
call
mov
in
add
pop
add
add
jle
bound
xchg
je
mov
add
cld
out
mov
xchg
add
filds
lcall
mov
add
cmpl
je
push
push
shr
add
push
or
inc
add
sub
lea
sub
sub
rol
sub
pop
sub
inc
sub
pop
push
sub
add
sub
pop
push
push
add
shr
not
xor
pop
call
cmpl
je
push
push
rol
push
or
inc
add
sub
shr
pop
sub
rol
add
add
pop
push
push
push
lea
push
lea
push
lea
push
push
lea
push
push
push
call
add
add
ret
add
push
push
test
ret
in
add
add
out
add
add
add
add
add
add
movl
push
mov
add
add
sub
pop
push
call
push
lea
not
pop
cmpl
je
push
push
rol
dec
add
push
xor
add
add
sub
shl
pop
xor
sub
lea
pop
push
ror
ror
pop
push
push
inc
shr
sub
sub
pop
call
cmpl
je
push
push
ror
push
push
pop
add
rol
shr
add
sub
xor
pop
shl
inc
rol
rol
pop
push
add
sub
add
ror
pop
push
push
push
lea
push
push
call
add
mov
in
int3
lods
loopne
cmc
add
add
mov
pusha
push
push
lcall
xchg
popl
icebp
add
std
in
loopne
add
call
cwtl
add
sub
pop
call
cmpl
je
push
push
xor
shr
rol
inc
push
xor
add
sub
pop
add
pop
push
push
push
push
call
popa
jnp
add
ja
je
add
xlat
jne
add
mov
sti
push
add
add
add
mov
add
push
push
push
push
push
push
call
mov
mov
add
movsb
mov
mov
add
mov
enter
addl
gs
add
mov
cmpsb
cli
xchg
cmc
mov
add
cwtl
test
lock
xlat
xchg
add
add
test
mov
imul
call
cmpl
je
push
push
inc
dec
push
or
inc
add
sub
pop
xor
not
not
ror
pop
push
not
pop
push
push
lea
push
push
lea
push
lea
push
push
push
push
call
add
pop
add
xchg
xlat
add
testl
lods
jmp
push
fidivs
add
add
scas
add
filds
and
fiaddl
lods
ret
fs
add
rcl
lods
mov
add
xchg
add
mov
add
add
addl
mov
hlt
add
add
add
lcall
adc
add
cmpl
je
push
push
sub
push
or
not
add
add
inc
lea
sub
shl
pop
add
add
pop
push
sub
add
pop
push
push
push
lea
push
push
push
call
add
add
js
add
pop
test
mov
add
mov
add
mov
rolb
lea
add
imul
subl
aam
add
add
lock
rcrl
jns
sti
add
fwait
add
add
testl
jecxz
les
xchg
add
inc
sub
add
xor
test
pop
sbb
leave
cli
not
push
or
not
add
shl
xor
shl
not
sub
rol
rol
lea
not
pop
sub
add
pop
push
sub
shl
inc
xor
pop
push
push
add
inc
pop
call
push
push
call
mov
mov
add
pop
jne
add
push
add
add
into
add
add
lods
in
leave
cltd
imul
add
mov
stc
lds
add
addl
xlat
sbb
icebp
add
js
xor
ret
test
add
add
cmp
ja
sub
xor
xor
sub
push
sub
add
shl
sub
inc
add
pop
not
rol
pop
push
inc
xor
dec
pop
push
push
inc
sub
ror
pop
call
push
push
push
push
call
add
add
jmp
imul
in
mov
popa
pop
jne
adc
jnp
push
add
enter
xchg
mov
add
mov
add
mov
cltd
nop
roll
lcall
js
jmp
les
je
push
push
push
or
inc
add
xor
sub
not
sub
shl
rol
pop
dec
pop
push
lea
ror
pop
push
push
shl
pop
call
push
sub
sub
pop
cmpl
jne
mov
push
lea
pop
movl
push
push
push
call
cli
jbe
imul
gs
arpl
lock
mov
sbbl
ret
pop
jp
add
add
lcall
pop
add
add
pop
xor
push
pop
pop
push
lea
not
add
pop
pop
pop
push
push
call
add
in
mov
add
lods
out
xchg
lret
add
add
call
add
add
in
jle
testb
add
add
leave
shl
add
jno
stos
add
cwtl
fdivl
xchg
xchg
add
push
pop
add
mov
add
add
mov
pop
pop
push
push
push
push
push
lea
push
push
push
lea
push
push
call
add
add
add
imul
add
add
mov
add
in
add
out
fildl
mov
in
movsl
jns
in
fdivr
lcall
push
push
push
push
push
push
push
push
lea
push
push
call
test
jmp
filds
enter
aad
add
sahf
int
jge
loopne
mov
xchg
add
loopne
lahf
add
addr16
pop
jmp
fwait
pushf
mov
add
add
ret
push
add
pop
ret
push
add
not
shr
dec
pop
push
mov
push
rol
add
inc
add
pop
add
cmpl
jne
push
push
rol
push
push
pop
add
shl
inc
sub
ror
pop
sub
pop
push
lea
push
lea
push
call
add
pop
pop
add
mov
mov
repnz
jge
add
bound
add
mov
lods
fdiv
fiaddl
xchg
add
add
add
vpcmpeqb
pushl
push
add
pop
call
push
lea
pop
push
call
push
shr
shr
pop
jmp
cmpl
jne
push
shl
dec
pop
mov
push
lea
dec
xor
pop
call
push
ror
pop
ret
jmp
push
push
push
push
push
push
push
lea
push
call
add
add
add
loop
mov
test
jns
pop
loop
iret
add
bound
jno
popl
loop
add
add
andl
negb
add
xchg
add
add
loop
add
rolb
movl
loope
add
loopne
in
loopne
lcall
jge
add
test
add
add
js
xlat
push
lea
add
xor
push
xor
add
sub
sub
rol
dec
dec
xor
pop
lea
not
pop
push
push
push
call
js
add
mov
add
jns
add
add
loopne
addl
add
add
addr16
clc
add
add
mov
cld
add
add
insb
addb
add
add
add
add
xchg
les
add
sub
pop
pushl
push
push
push
push
push
push
push
push
lea
push
call
add
add
arpl
jecxz
mov
mov
fcoml
addr16
mov
std
test
jnp
add
popf
fcompl
add
cmc
out
sbbb
lcall
jp
add
push
push
push
lea
push
lea
push
push
lea
push
push
push
call
scas
add
xchg
lods
int3
add
mov
mov
fnstcw
fwait
pop
xchg
js
xchg
mov
add
add
test
add
rcrb
add
add
out
test
lods
add
cli
mov
sub
pop
call
push
push
push
push
call
in
test
mov
push
add
in
addr16
lds
popf
add
loopne
insb
add
std
sahf
add
movb
pop
add
add
add
js
iret
repnz
mov
cmpsl
cmc
add
add
stc
mov
loope
mov
rcr
add
mov
push
mov
sub
pop
jmp
cmpl
je
push
lea
push
call
lret
mov
add
xchg
jl
add
jle
mov
jecxz
mov
imul
add
add
cld
test
add
lock
add
add
imull
add
push
push
stc
add
add
add
les
mov
in
clc
pop
cmpl
jne
push
push
push
push
push
push
push
push
push
call
add
hlt
add
aam
add
addr16
mov
pop
add
add
fst
mov
add
add
add
int
lods
imul
rcrl
bound
test
lcall
add
add
push
inc
pop
mov
push
push
push
push
push
lea
push
push
lea
push
push
push
call
out
add
addb
lock
add
cmc
mov
mov
fnstenv
cli
add
add
mov
add
mov
add
xchg
add
aad
shl
mov
mov
cltd
jmp
mov
add
add
in
fdivr
lcall
call
push
push
ror
shr
push
sub
add
shr
lea
dec
lea
sub
not
ror
pop
xor
pop
push
push
push
lea
push
lea
push
push
push
call
sub
xchg
data16
push
arpl
add
add
add
push
push
sti
outsl
push
add
add
loopne
mov
test
add
cld
imul
add
add
add
lcall
jne
push
shl
shr
shr
pop
call
push
lea
sub
dec
xor
pop
call
push
push
lea
push
push
pop
add
sub
rol
sub
lea
add
rol
pop
shr
pop
push
push
push
push
push
push
push
push
push
push
call
xlat
pop
add
mov
loope
ljmp
hlt
push
add
nop
test
add
add
rolb
add
cltd
movsb
sub
pop
pushl
push
ror
inc
pop
call
push
not
pop
call
push
push
lea
add
push
push
pop
add
xor
sub
dec
pop
shl
pop
push
push
push
push
push
call
adcb
mov
add
lret
lods
addl
je
into
push
add
pop
subb
stos
add
sub
pop
pushl
push
lea
push
lea
push
push
call
add
test
add
add
leave
int
fwait
addb
add
add
add
rolb
gs
bnd
add
add
loop
testb
add
add
mov
loope
in
lock
lcall
and
add
push
push
push
push
lea
push
call
andb
add
add
ja
mov
push
mov
jge
out
add
add
add
jmp
lods
add
add
add
add
add
add
ror
add
add
xchg
popf
mov
lcall
shrb
add
push
add
sub
xor
push
xor
add
sub
add
xor
sub
xor
pop
ror
pop
push
rol
not
pop
pushl
push
push
push
push
lea
push
call
mov
std
push
pop
test
icebp
int
cmpsl
add
nop
jnp
mov
lret
add
stos
add
mov
in
pop
call
push
not
ror
pop
call
push
push
shl
push
xor
add
inc
sub
lea
inc
xor
pop
inc
pop
push
shl
sub
pop
pushl
call
push
push
push
lea
push
push
push
push
call
ret
add
lods
adcl
mov
add
add
test
jb
add
push
ret
xchg
push
fildl
cltd
add
jne
std
faddl
sarb
nop
xchg
fldl
add
add
add
mov
ja
jmp
pop
aam
jb
in
in
call
push
push
lea
push
sub
add
add
add
lea
sub
xor
lea
pop
add
inc
pop
push
inc
sub
dec
pop
pushl
call
push
lea
push
push
call
add
add
mov
cli
mov
lret
fwait
stos
mov
mov
sti
push
add
add
add
test
in
hlt
lcall
shrb
cmp
shl
push
or
not
add
sub
sub
sub
lea
xor
not
pop
shr
shl
dec
add
pop
push
push
push
push
push
call
mov
lds
stc
add
cld
add
roll
fcmovne
add
incb
add
fstpt
aam
lret
add
shlb
mov
leave
add
add
sub
pop
pushl
call
push
push
lea
push
push
push
lea
push
lea
push
call
fistps
add
into
mov
add
cmpsl
enter
add
add
xchg
add
jne
repnz
add
cmpsl
data16
add
sub
pop
call
push
push
shr
not
add
push
push
pop
add
shl
sub
sub
sub
add
rol
pop
lea
pop
push
push
push
push
lea
push
lea
push
call
push
add
add
add
add
push
test
jb
pop
add
add
add
add
cltd
fistl
adcl
nop
mov
pop
mov
add
aam
testb
movsb
imul
mov
add
add
jns
ficomps
call
push
push
lea
push
call
add
add
ljmp
push
int
cwtl
fldl
push
add
mov
scas
add
add
push
add
cmp
add
push
call
movsb
jge
jno
lods
mov
add
out
push
mov
divb
add
add
rolb
xchg
hlt
popa
add
hlt
je
nop
mov
add
mov
add
jp
add
mov
add
stc
iret
mov
mov
out
push
xchg
sub
pop
call
push
push
shr
lea
dec
push
or
not
add
sub
ror
ror
pop
rol
sub
shr
pop
push
dec
rol
xor
pop
pushl
push
shl
lea
shr
add
pop
call
push
xor
pop
call
push
push
sub
push
xor
add
xor
not
dec
sub
xor
not
pop
sub
inc
shl
pop
push
lea
sub
not
pop
pushl
push
push
lea
push
lea
push
call
push
add
xchg
addr16
fwait
add
jmp
add
ja
test
std
add
lods
ret
aad
xlat
bound
in
add
roll
imul
push
add
mov
clc
jge
push
add
sub
pop
call
lea
push
push
push
lea
push
lea
push
call
pop
pop
jl
jge
mov
lret
mov
aad
pop
notl
jmp
add
add
arpl
add
push
push
lea
pop
call
push
push
add
shr
sub
push
or
inc
add
dec
xor
sub
not
sub
not
shr
pop
add
xor
pop
push
push
push
push
push
push
lea
push
call
shr
sahf
test
popa
add
out
add
scas
add
add
mov
lret
fstl
pop
lods
mov
pop
add
add
add
pop
leave
hlt
pop
push
nop
add
add
pop
out
shl
shlb
sub
pop
pushl
push
lea
push
push
push
call
add
add
push
jne
std
push
lcall
scas
add
add
flds
test
add
stc
loop
add
pop
xchg
loope
test
add
mov
inc
add
pop
call
push
push
rol
push
xor
add
sub
sub
add
add
inc
pop
sub
add
sub
pop
push
rol
sub
dec
not
pop
pushl
push
pop
call
call
push
push
xor
sub
push
and
add
ror
ror
shr
sub
not
inc
add
pop
pop
push
push
lea
push
lea
push
lea
push
lea
push
call
add
mov
div
add
mov
mov
addr16
add
int
add
pop
movsb
add
int3
fs
in
add
add
lea
pop
add
add
movsb
shl
add
ficomps
lcall
jne
push
push
push
push
call
popf
add
add
mov
push
scas
aad
push
add
add
lcall
add
fadds
xchg
push
push
add
add
xchg
lock
cmpsb
mov
add
stc
jge
icebp
xchg
add
roll
add
cmpsl
add
shll
repnz
out
sub
pop
call
call
push
push
shl
inc
lea
push
and
add
dec
rol
sub
sub
shr
lea
rol
pop
add
dec
shr
shl
pop
push
push
push
push
push
call
lock
fdivrp
push
add
add
push
les
movsb
add
mov
cltd
push
aam
mov
ja
jb
out
scas
add
add
out
add
jns
add
jae
add
add
sub
pop
pushl
push
push
call
xchg
cld
add
movsl
cltd
add
filds
xchg
clc
std
add
icebp
into
fiaddl
add
add
pop
add
divb
pop
xchg
bound
xchg
add
push
add
in
cmc
ret
lretw
xchg
xchg
roll
xchg
test
test
mov
repnz
push
insb
je
sub
pop
call
push
push
dec
sub
push
sub
add
dec
sub
lea
not
pop
sub
not
add
pop
push
push
not
dec
push
xor
add
shl
sub
xor
sub
dec
pop
dec
sub
xor
pop
push
rol
not
add
pop
call
pop
push
lea
push
push
push
push
push
call
add
add
add
rolb
mov
into
add
mov
in
add
add
add
add
jl
mov
add
js
fldl
in
add
popa
add
sub
pop
dec
jne
push
shr
pop
call
push
push
call
add
faddl
add
icebp
add
cltd
bound
roll
in
mov
jmp
pop
pop
in
mov
ficoms
fs
add
add
int
push
dec
shr
pop
lea
push
push
xor
sub
inc
push
push
pop
add
dec
sub
sub
sub
pop
shl
sub
pop
push
inc
xor
pop
pushl
push
lea
push
push
push
push
push
call
pop
icebp
int3
test
push
mov
insb
add
add
add
xchg
add
lret
add
add
jmp
ljmp
lcall
mov
xor
sub
shr
add
pop
push
push
push
push
lea
push
push
push
push
call
cmpl
add
imul
add
add
stos
add
cmpl
cltd
add
imul
ret
imul
pop
fcoml
pop
cwtl
rolb
add
pop
pusha
add
sub
pop
call
push
push
shr
inc
push
push
pop
add
dec
shl
inc
sub
sub
pop
shr
rol
pop
push
lea
push
lea
push
call
enter
clc
cli
pusha
jb
add
enter
mov
out
add
add
lcall
rclb
add
jbe
out
lea
je
jae
mov
div
sti
add
mov
sub
pop
pushl
push
rol
pop
call
call
push
dec
rol
ror
pop
mov
push
add
inc
rol
pop
lea
push
push
add
push
and
add
dec
sub
sub
sub
ror
shr
lea
pop
inc
pop
push
add
pop
pushl
push
add
add
pop
call
lea
push
shl
pop
push
push
push
push
lea
push
push
push
push
push
lea
push
push
call
int3
add
xlat
xchg
add
add
add
mov
add
loope
add
jl
test
add
add
fiaddl
enter
popl
add
lea
push
lea
push
push
push
push
push
push
call
add
add
add
add
mov
add
xchg
loope
add
fmuls
add
mov
arpl
add
push
add
push
add
in
add
pop
add
add
out
ffreep
fcompl
hlt
lcall
test
in
fdivr
lcall
add
add
inc
pop
pushl
push
push
rol
push
and
add
ror
shl
sub
inc
lea
rol
pop
shl
inc
pop
push
add
inc
add
pop
push
push
not
sub
inc
rol
pop
call
push
push
sub
not
push
and
add
inc
rol
sub
sub
pop
xor
lea
pop
push
shl
shr
pop
pushl
push
add
rol
pop
call
push
push
push
push
push
push
lea
push
push
push
call
add
roll
add
add
mov
add
add
enter
add
pop
mov
mov
iret
fadds
add
mov
add
stos
add
outsl
ret
add
mov
jo
in
loopne
call
push
push
shr
ror
push
sub
add
add
shl
sub
sub
sub
pop
lea
dec
rol
pop
push
xor
inc
shr
dec
pop
pushl
push
sub
sub
pop
call
push
shl
pop
call
pushl
push
shr
lea
pop
mov
push
dec
lea
add
pop
jmp
push
push
sub
add
push
or
not
add
not
sub
rol
sub
inc
dec
pop
dec
pop
push
rol
rol
pop
pushl
push
lea
push
push
lea
push
lea
push
lea
push
push
lea
push
call
add
lret
out
rclb
add
push
add
flds
add
add
out
lock
cmc
lahf
add
add
nop
push
scas
lods
add
xchg
lret
add
add
add
jp
out
push
test
gs
add
pusha
xchg
xchg
jo
push
icebp
mov
add
hlt
addl
lcall
push
adc
add
shrb
vaddsubps
ret
add
ret
not
ror
pop
call
push
push
rol
push
and
add
sub
sub
pop
not
shr
sub
pop
push
push
push
push
push
lea
push
push
lea
push
call
stc
add
filds
add
add
into
add
out
imul
add
add
cmpsl
add
test
add
add
popf
jno
roll
add
mov
mov
nop
testb
add
add
loopne
pushl
call
push
shr
lea
pop
push
push
add
shl
pop
call
leave
push
pop
add
push
inc
dec
pop
pop
push
lea
pop
pop
push
push
lea
push
push
lea
push
push
push
call
add
mov
push
add
add
lahf
clc
ja
out
call
jmp
mov
pop
pop
test
add
fwait
mov
in
cwtl
add
mov
imul
mov
add
add
fildl
in
add
sub
pop
pop
xor
push
push
call
add
xchg
add
insb
add
add
xchg
fstl
xchg
rolb
add
add
add
lret
out
cmc
popa
scas
sti
add
fiadds
add
add
mov
add
mov
lcall
push
push
call
add
add
bound
jb
xchg
mov
addb
add
leave
hlt
add
lcall
or
push
push
push
lea
push
push
lea
push
push
lea
push
lea
push
push
call
xchg
iret
push
add
mov
add
push
xor
hlt
mov
in
hlt
clc
pop
add
push
mov
jnp
roll
out
mov
in
add
mov
add
fdivr
lcall
push
dec
rol
rol
pop
ret
push
lea
push
push
push
push
lea
push
call
stos
pop
cld
push
lret
arpl
fiadds
jns
cmc
add
pop
scas
pop
add
add
add
add
xchg
add
out
jno
add
add
mov
lahf
lods
add
sahf
mov
sub
pop
push
mov
push
pop
cmpl
jne
push
push
push
call
iret
rol
add
lret
test
add
add
scas
add
mov
in
add
add
fwait
popf
xchg
xchg
in
out
add
add
add
jmp
out
outsl
mov
arpl
aam
loopne
add
add
xchg
mov
pop
jl
add
add
inc
and
push
push
push
push
call
add
sahf
add
add
add
int3
add
add
add
add
add
enter
add
cltd
add
add
add
sarl
aam
add
leave
aad
sub
pop
jmp
mov
push
shl
add
rol
pop
and
push
inc
add
pop
xor
push
xor
sub
pop
xor
push
lea
push
push
call
rolb
xchg
add
lds
add
push
lretw
add
in
add
mov
add
je
scas
push
push
mov
in
hlt
pop
add
push
push
push
push
push
push
push
push
lea
push
push
call
lret
fiadds
popf
add
repnz
push
add
add
jle
add
add
mov
add
add
add
lret
ror
pop
test
jecxz
add
lret
scas
add
jle
add
add
in
test
mov
lods
sub
pop
xor
push
push
lea
push
push
lea
push
lea
push
push
push
push
call
loopne
fstpt
push
outsl
roll
mov
outsl
out
aam
hlt
xchg
mov
lcall
add
fdivr
lcall
sub
push
push
push
push
call
adcb
add
int3
je
jl
add
call
lds
add
add
mov
iret
aad
add
push
lock
mov
scas
add
mov
add
clc
imul
add
add
iret
arpl
pop
add
ja
add
sub
push
lea
push
lea
push
call
add
testl
add
xchg
add
add
shr
mov
cltd
iret
loopne
add
add
add
into
test
fcomp
pop
enter
lock
add
push
loopne
ret
mov
shlb
pop
mov
in
hlt
lcall
xor
pop
sub
cmp
jne
push
sub
rol
pop
mov
push
push
push
push
call
add
int3
pop
add
add
add
add
add
lods
fsubl
add
test
add
mov
pop
lds
xchg
push
mov
mov
jnp
add
add
addl
push
add
add
add
add
in
lock
lcall
dec
cmp
push
push
lea
push
call
push
add
mov
add
jae
add
mov
push
cwtl
add
clc
add
add
loope
in
mov
add
add
fwait
int
pusha
faddl
cmpsb
add
sarl
add
pop
sub
mov
push
push
push
push
push
call
xchg
lret
add
jno
scas
mov
add
add
jb
add
pop
mov
lds
jne
add
add
mov
enter
add
add
jecxz
sub
pop
shr
push
sub
shr
xor
pop
add
push
rol
sub
not
pop
sub
push
dec
pop
pushl
push
ror
pop
pop
push
not
pop
shr
push
lea
push
lea
push
push
lea
push
push
lea
push
lea
push
call
add
add
idivb
add
add
push
push
add
xchg
test
add
add
cmpsb
sub
pop
and
push
lea
push
push
call
jns
add
add
in
add
data16
cmc
out
add
push
add
hlt
rorl
push
cwtl
cltd
cli
mov
jno
push
lods
add
add
add
movsb
push
out
mov
shr
test
jae
push
add
add
add
mov
mov
pop
sub
push
shr
add
not
pop
cmp
jne
push
pop
leave
push
ror
pop
ret
push
push
sub
sub
add
lea
pop
mov
push
push
push
call
cmc
movsl
scas
adcb
jns
add
add
add
xchg
data16
fsubs
movsl
push
leave
cli
call
aad
add
test
add
cmc
mov
jns
cltd
pop
add
mov
loop
add
ficoml
lcall
cld
push
push
lea
add
pop
push
push
push
lea
push
push
push
lea
push
push
lea
push
call
aad
add
movl
mov
xchg
add
mov
int3
add
mov
js
add
fwait
add
mov
add
jae
sti
xchg
add
ficomps
rolb
test
add
fs
hlt
pusha
pop
add
jns
loopne
lods
aam
push
insb
repnz
add
les
sub
pop
push
push
push
xor
pop
push
mov
push
shr
pop
lea
push
push
push
push
push
push
lea
push
push
push
push
call
add
mov
add
add
add
lret
hlt
hlt
mov
leave
loop
les
add
jae
add
add
pop
sub
push
lea
inc
shl
add
pop
mov
push
lea
push
push
push
call
ret
add
test
fdivrl
call
add
jl
add
push
push
add
xchg
add
jecxz
scas
mov
shlb
add
add
push
les
popa
xlat
sub
pop
shr
add
push
push
lea
push
push
push
push
push
push
call
clc
push
add
push
mov
add
jne
add
int3
js
jb
fldcw
data16
mov
add
jo
add
cmc
int3
mov
lods
call
adcb
test
lcall
fwait
addb
add
decb
or
clc
shr
pop
add
push
lea
push
push
lea
push
push
call
jno
xchg
add
mov
or
add
add
in
mov
scas
add
jp
out
ja
add
stos
mov
add
add
fidivl
fldl
pop
mov
add
cmc
add
out
add
scas
push
add
enter
in
lcall
jnp
push
not
not
xor
pop
add
xor
push
push
push
lea
push
push
push
lea
push
push
push
call
add
mov
add
add
add
xchg
add
lret
sti
add
out
mov
mov
mov
mov
imul
data16
enter
pop
xchg
add
add
je
jae
movb
push
lahf
add
add
push
cld
add
add
jl
add
mov
push
dec
shr
ror
not
pop
and
rol
push
sub
add
pop
rol
push
push
push
push
lea
push
push
push
call
add
arpl
add
mov
fildl
add
sahf
ret
jp
add
scas
push
add
push
rolb
icebp
aam
shrl
jnp
jo
in
in
lcall
add
add
add
pop
cmpb
jne
push
xor
sub
pop
add
push
lea
push
call
add
add
add
add
mov
jecxz
mov
add
loop
mov
add
add
mov
xchg
add
add
add
add
je
in
add
les
stos
add
add
clc
lcall
inc
or
test
ret
adc
push
push
push
lea
push
lea
push
lea
push
call
xchg
cltd
mov
out
add
movsl
push
add
add
loop
add
add
ja
addb
add
and
jl
add
mov
add
jnp
add
test
rclb
daa
shr
add
pop
pop
push
push
lea
push
lea
push
push
push
push
push
push
push
call
jp
add
jge
add
imul
jl
popl
add
add
out
pop
mov
add
loope
ret
sti
repnz
ja
add
xchg
pusha
movsb
mov
popf
std
loope
loop
sti
pop
add
xchg
add
pusha
sub
pop
pop
push
not
shr
sub
pop
pop
pop
push
push
push
call
loop
add
repnz
mov
sahf
loop
lock
loopne
add
int3
in
test
mov
add
gs
lods
add
add
lods
popa
pop
imul
jle
in
hlt
pop
pop
push
push
call
shll
nop
add
les
add
add
std
into
ret
cmpsl
add
add
jbe
add
add
scas
add
add
sub
pop
leave
push
inc
rol
sub
pop
ret
mov
push
push
push
call
add
add
add
push
cld
push
add
push
movb
pop
pop
jnp
add
testb
jns
cwtl
add
sub
pop
add
push
pop
mov
push
add
rol
ror
xor
pop
push
push
push
lea
push
push
push
push
lea
push
call
popa
add
add
mov
add
jo
mov
popa
popa
xchg
mov
lcall
pop
add
cmpsl
add
fldl
lcall
and
xlat
dec
add
sub
pop
pop
push
ror
pop
call
push
push
lea
push
push
push
lea
push
lea
push
push
push
lea
push
push
call
xchg
mov
jmp
clc
add
roll
sahf
jmp
test
outsl
addr16
rcl
jns
lcall
cwtl
add
out
add
clc
push
andl
add
lds
xchg
xchg
add
lods
add
rcr
add
call
add
imul
add
jl
add
fcomip
call
inc
shl
mov
call
add
jbe
imul
mov
xchg
in
jl
hlt
push
add
mov
mov
pushf
add
fsubrl
xchg
lock
fcmovnbe
mov
sbb
add
cwtl
add
lcall
xor
push
lea
push
push
push
call
ljmp
popa
add
out
add
add
jp
lret
xlat
add
test
jmp
jl
add
add
aad
push
pop
pop
pushf
mov
push
add
add
lret
push
add
add
add
add
add
add
mov
movsb
mov
add
pop
push
lea
push
call
add
add
mov
add
mov
add
out
pop
mov
in
test
mov
jmp
mov
rcr
cld
jae
add
pop
add
jnp
add
out
out
add
add
clc
pop
pop
push
push
lea
push
push
lea
push
push
lea
push
push
push
push
call
mov
xchg
roll
rorl
add
add
add
add
icebp
clc
add
shrb
sub
pop
pop
push
push
lea
push
call
add
pop
add
jle
xchg
sahf
scas
jbe
ffree
mov
movsb
pushf
push
out
add
lds
mov
in
leave
lret
add
add
add
add
stos
sub
pop
pop
push
lea
pop
leave
push
push
call
mov
xchg
call
je
int3
add
add
jmp
mov
lret
add
pop
add
jp
add
out
into
sub
pop
ret
push
push
push
lea
push
push
lea
push
call
outsl
add
in
add
xchg
add
add
add
sarl
jecxz
add
add
mov
add
sub
pop
push
mov
push
push
push
call
fwait
add
add
add
jo
jl
popa
add
add
test
mov
aad
gs
fwait
add
add
add
in
hlt
lcall
hlt
push
push
call
jbe
test
mov
out
testl
imull
add
iret
add
add
loop
ja
add
test
add
add
sahf
rcr
outsl
push
add
add
push
add
insb
add
lahf
loop
mov
add
sub
pop
push
push
push
push
push
lea
push
push
push
push
call
xchg
xchg
scas
popl
mov
add
add
enter
add
iret
mov
push
jns
mov
xchg
lret
out
pop
add
sbbb
sti
add
ja
jne
add
mov
lcall
mov
add
idiv
add
add
sub
pop
push
push
push
push
push
push
push
push
push
call
xchg
jae
add
sarl
shr
outsl
mov
push
jmp
shll
add
add
jbe
rolb
cld
add
js
add
jmp
shll
imul
mov
add
add
xchg
add
add
add
add
xchg
jl
sahf
add
add
sub
pop
push
push
push
push
lea
push
push
push
call
enter
add
cltd
leave
push
add
imul
add
leave
add
movsb
add
add
leave
mov
in
in
pop
mov
push
lea
push
push
push
lea
push
lea
push
push
push
call
fsubr
mov
pop
sar
add
in
add
push
fcoms
je
add
add
jle
add
mov
add
xchg
mov
add
test
arpl
xchg
add
xchg
mov
lret
add
add
xchg
pop
xchg
add
int3
add
icebp
add
add
in
add
lret
add
in
loopne
lcall
push
not
add
pop
pop
push
rol
pop
lea
push
push
push
push
push
push
push
call
pop
mov
mov
push
jne
mov
mov
icebp
add
add
push
mov
jo
je
mov
roll
mov
cwtl
ljmp
rclb
shl
in
add
movl
push
in
lcall
ljmp
pop
mov
push
xor
shr
pop
shr
add
push
lea
push
push
push
call
add
in
mov
add
jmp
add
pop
in
movl
test
add
popf
enter
add
add
mov
push
jge
fldl
mov
add
add
mov
cmc
push
scas
add
mov
add
movsl
cmpsl
sub
pop
mov
push
push
lea
push
push
push
push
push
push
push
call
add
add
repnz
add
add
lahf
lea
ljmp
mov
cltd
loopne
xchg
add
outsl
add
imul
add
jecxz
ja
pop
cmpsb
lock
add
ja
add
sub
pop
add
push
push
lea
push
push
push
push
lea
push
push
push
call
gs
mov
into
add
add
add
add
jecxz
mov
push
lods
movsl
pop
rcr
add
rcr
jb
xorb
jae
popl
push
rol
pop
mov
push
sub
shr
add
dec
pop
add
push
shr
sub
shr
pop
xor
push
sub
not
shr
pop
lea
mov
push
push
push
push
call
stc
stc
pop
add
mov
int3
add
popl
push
pop
add
jmp
cmpb
fadds
test
mov
add
addb
imul
add
push
add
fadds
xchg
push
in
in
lock
add
xor
push
push
lea
push
push
push
lea
push
lea
push
push
push
call
jp
lods
mov
add
mov
add
loope
cld
int
mov
mov
add
add
ret
add
std
scas
out
add
add
aad
add
stos
mov
cli
xchg
icebp
sub
pop
rol
nop
push
sub
rol
dec
add
pop
nop
push
shr
pop
xor
push
inc
pop
nop
push
push
push
call
mov
jno
roll
icebp
add
adcb
fldl
mov
nop
out
pop
cmpsb
add
jmp
add
cli
add
add
add
add
mov
add
arpl
mov
add
add
lds
hlt
lcall
inc
push
sub
pop
nop
push
lea
push
lea
push
call
add
mov
add
add
pop
add
stos
add
in
mov
test
xchg
mov
jmp
xlat
add
add
xchg
add
push
faddl
mov
scas
pop
add
outsl
mov
les
jae
fdivs
scas
add
cmpb
jne
push
push
push
push
push
call
pop
rcll
lret
add
out
jp
popf
add
add
add
add
add
add
mov
ja
add
add
mov
add
xchg
repnz
add
fiaddl
add
lret
xchg
mov
cltd
mov
add
lcall
add
out
mov
xchg
sub
pop
add
push
push
push
push
push
lea
push
call
mov
add
mov
jl
mov
ljmp
jp
jl
lea
imul
fildl
add
rolb
ja
lret
push
mov
lea
add
mov
add
push
sub
pop
nop
push
ror
pop
cmp
je
push
push
push
push
push
push
push
call
out
add
add
movsb
push
add
jp
jo
xchg
add
add
add
add
mov
add
add
add
js
lea
popf
jb
mov
in
add
sub
add
pop
add
add
pop
mov
jnp
add
mov
sub
pop
nop
nop
push
add
pop
inc
nop
push
lea
sub
pop
nop
push
push
lea
push
push
push
push
lea
push
push
call
add
idivl
mov
mov
add
arpl
jne
lahf
cld
movsb
add
mov
stos
addb
lahf
add
rcl
sti
add
pop
mov
movb
pop
add
repnz
add
add
movsl
icebp
mov
add
add
jb
add
nop
pusha
add
in
loopne
lcall
jne
jb
push
push
push
push
push
push
call
add
repnz
into
add
test
ljmp
mov
mov
sar
add
add
rolb
jb
add
add
pop
mov
xchg
add
add
int3
add
pop
xorb
clc
pusha
cmpsb
cli
lret
stos
out
add
in
call
shr
shr
shr
sub
pop
jmp
push
push
lea
push
push
push
lea
push
lea
push
lea
push
push
push
call
mov
mov
pop
add
jns
fsubrs
sub
add
add
mov
add
add
add
add
mov
aad
mov
in
add
add
mov
push
push
call
fildl
jecxz
mov
push
mov
scas
rolb
test
add
push
add
add
fucomip
fdivrl
sahf
loopne
jle
into
in
cmpb
jl
les
add
pop
popl
add
jo
mov
jnp
fsubs
add
add
add
fucom
addb
pop
add
push
sub
lea
pop
movzwl
mov
push
dec
dec
inc
not
pop
add
push
sub
ror
shr
pop
mov
push
push
lea
push
push
push
push
call
add
pop
add
add
imulb
jae
add
push
nop
loop
arpl
add
addb
in
icebp
fstpt
imul
in
add
xchg
mov
jnp
insb
add
out
clc
push
push
mov
add
add
mov
add
cmpb
in
call
xor
push
push
lea
push
push
push
lea
push
push
push
call
jbe
jp
add
movsl
out
add
add
in
loop
add
imul
aad
popa
roll
add
in
mov
push
shr
cli
jl
lcall
ja
add
add
sub
pop
xor
shl
push
push
push
push
push
call
mov
add
cmpsb
add
movsb
in
leave
mov
add
push
add
add
push
jnp
mov
imul
add
add
push
sub
pop
xor
push
inc
xor
pop
shl
push
add
pop
xor
shl
push
push
push
push
lea
push
push
lea
push
push
push
call
pop
pop
cli
add
add
add
lods
add
add
cld
fnstcw
add
add
imul
add
add
movsl
je
gs
jbe
fiadds
dec
add
add
fwait
add
fdivr
lcall
or
mov
push
xor
shr
pop
add
push
shr
rol
pop
pop
push
shl
pop
pop
push
push
push
lea
push
call
push
mov
div
add
add
jne
loope
icebp
cmpb
add
add
enter
add
mov
in
lock
pop
push
add
pop
pop
leave
push
push
call
add
xchg
jne
addr16
mov
ret
jb
add
in
add
out
rolb
add
outsl
add
int
add
leave
in
clc
addr16
mov
popf
movsl
mov
mov
in
add
add
testb
jo
add
fwait
testl
mulb
jmp
sub
pop
ret
push
push
push
lea
push
push
push
push
push
push
push
push
call
add
mov
add
xlat
rorl
mov
iret
add
leave
jno
add
add
add
add
popl
cmpsl
scas
push
jge
in
fdivr
lcall
in
push
push
dec
inc
pop
push
push
push
push
push
lea
push
call
add
add
jl
push
add
sahf
add
addb
imul
ljmp
add
jns
enter
test
gs
stos
push
push
push
xchg
add
shll
add
test
scas
in
push
pop
add
nop
mov
int3
mov
enter
sub
pop
push
push
push
pop
mov
push
lea
shl
sub
pop
mov
mov
push
push
lea
push
push
push
push
push
lea
push
call
xchg
add
popa
popa
add
iret
icebp
add
push
pop
push
testl
push
xchg
stos
push
pop
mov
mov
fldenv
add
in
fldl
nop
mov
imul
add
add
bound
add
add
push
add
rcrb
add
lret
jne
in
loopne
test
je
push
push
push
push
push
push
call
add
iret
jbe
add
add
fcoml
add
add
mov
add
jmp
push
add
add
testb
sub
pop
mov
push
lea
push
call
out
ja
mov
ret
add
jae
add
cld
fisttpll
mov
add
mov
jmp
add
push
test
mov
add
mov
clc
lcall
testb
inc
add
add
push
push
push
push
push
push
call
jp
add
mov
ljmp
add
fstpl
fs
add
add
add
roll
push
add
sub
pop
mov
mov
push
sub
pop
mov
push
push
push
push
push
push
push
push
push
call
pop
insb
add
xchg
jb
jmp
xchg
add
lret
add
add
pop
add
add
jo
out
call
fcompl
push
lea
push
push
lea
push
push
push
push
push
push
push
call
add
testl
pop
add
popl
mov
scas
add
mov
mov
jmp
shlb
push
movb
int
iret
add
add
mov
add
add
stc
add
mov
fcomps
rorb
test
add
test
je
push
xor
pop
mov
push
pop
inc
cmp
je
push
rol
shr
pop
test
jne
push
inc
inc
shl
pop
xor
push
inc
inc
shl
pop
pop
pop
push
shr
not
pop
pop
pop
push
pop
leave
ret
push
sub
pop
mov
push
push
push
push
push
push
push
push
push
call
pop
nop
mov
add
je
add
push
add
add
xchg
add
add
add
sub
pop
inc
cmp
jne
push
push
lea
push
lea
push
call
mov
cltd
pop
pop
fstpl
cltd
mov
add
add
add
sahf
add
add
jge
add
lods
push
add
sarl
add
mov
push
add
add
mov
add
xchg
jp
pusha
ja
add
lcall
sub
pop
lea
mov
push
lea
push
lea
push
push
push
push
call
add
add
sbb
std
mov
sahf
add
mov
add
add
les
add
xchg
add
add
add
xlat
add
add
adcl
jecxz
pop
js
in
call
test
je
push
push
push
push
push
push
push
push
call
mov
add
repnz
add
in
jnp
add
out
add
push
popa
add
xchg
add
fnstenv
enter
add
xchg
add
lahf
imul
xchg
mov
gs
mov
jnp
adcb
cli
sub
pop
mov
push
ror
sub
add
pop
add
push
push
lea
push
lea
push
push
lea
push
push
call
jo
add
mov
add
cli
stos
addl
add
addb
add
popf
add
push
add
add
mov
add
add
add
loopne
test
shl
pop
mov
push
lea
xor
lea
rol
pop
test
je
mov
push
rol
inc
sub
add
pop
add
push
push
push
push
lea
push
push
push
call
xchg
mov
loope
push
xchg
fwait
add
js
out
add
stos
mov
mov
mov
mov
stos
add
jle
fiadds
jbe
pop
add
add
fcoms
add
add
sub
pop
cmp
je
jmp
push
sub
shr
rol
pop
xor
push
push
push
lea
push
lea
push
push
push
push
lea
push
lea
push
call
add
mov
in
add
arpl
add
add
mov
add
mov
add
add
in
fdivr
lcall
pop
push
inc
pop
pop
push
inc
add
dec
not
pop
pop
push
ror
dec
shr
pop
leave
push
shl
pop
ret
push
sub
pop
lea
push
push
push
push
push
push
push
call
in
sbb
xchg
scas
push
mov
push
leave
insb
cmp
add
mov
push
add
add
xchg
shlb
flds
add
iret
cli
in
mov
movsl
pop
add
lcall
push
sub
sub
sub
pop
pop
pop
push
push
push
call
add
jp
in
xchg
jl
jae
loop
add
fs
aam
in
hlt
lcall
add
add
lea
data16
push
data16
fnstsw
mov
rclb
lock
add
lcall
leave
push
push
push
push
push
push
call
xchg
xchg
add
add
push
add
add
add
test
out
arpl
add
mov
roll
add
bnd
mov
mov
lods
add
outsl
mov
imul
jmp
flds
in
add
filds
lcall
in
call
ret
push
push
lea
push
lea
push
push
push
push
call
add
add
fstpl
movsb
fnsave
xchg
add
mov
in
adcl
icebp
fildl
add
je
rclb
out
add
jns
rol
lret
in
in
mov
push
shr
inc
add
inc
pop
pop
push
inc
pop
pop
pop
push
inc
sub
ror
pop
pop
push
shr
inc
pop
leave
push
ror
dec
pop
ret
cmp
mov
inc
lret
mov
into
mov
ror
mov
mov
mov
hlt
lret
add
mov
xchg
lret
or
inc
push
enter
add
cmpl
inc
scas
and
xor
repnz
xor
push
mov
pop
shlb
cmp
test
sub
fs
mov
icebp
inc
xchg
jns
jb
xchg
imul
mov
jge
add
in
cmp
insl
scas
xchg
jg
mov
pop
push
fstl
or
jae
outsb
fsubrp
or
lahf
jno
lods
xorb
ljmp
shlb
in
jne
inc
cltd
push
mov
roll
in
mov
outsb
sbb
lock
lcall
cmovo
sbb
mov
push
jge
daa
lods
test
out
repnz
mov
push
mov
sbb
iret
clc
hlt
xchg
cmp
and
psrld
rol
lock
cwtl
sbb
inc
shl
jmp
push
push
into
bound
cmp
or
fisttpl
and
dec
dec
xchg
sub
nop
aas
fwait
mov
xor
pop
pop
movsl
or
sbb
ljmp
jecxz
test
inc
xor
mov
out
mov
xor
pop
push
cmpsb
cmp
and
push
cmp
mov
jne
and
mov
cmp
mov
xchg
xorb
jno
push
jne
jnp
inc
add
aad
das
in
adc
xchg
ret
mov
movb
pop
insb
or
std
clc
mov
push
movsb
push
sub
aad
shlb
stos
fisttps
fisttps
or
push
jl
push
dec
sub
or
aaa
xchg
pop
into
lods
test
dec
dec
xor
pop
jne
popa
adc
leave
call
rcrl
xchg
add
mov
or
push
ficomps
jbe
sbb
adc
les
mov
inc
dec
xchg
scas
pop
mov
sub
into
xchg
mov
adc
sub
and
adc
add
xchg
cli
test
push
fstsw
cmc
hlt
int
hlt
ss
jb
lods
mov
add
es
hlt
jnp
mov
lcall
test
movsb
adc
fsubs
xor
jle
inc
jbe
jp
sbb
testl
sbb
jne
leave
hlt
mov
stc
jmp
cmc
push
sub
loope
jecxz
int
orl
out
scas
filds
push
sbb
idivl
add
dec
adc
sub
loopne
ds
mov
ret
pushaw
hlt
lods
xor
xor
nop
pop
push
sbb
pop
rcrb
inc
cmc
mov
arpl
xchg
les
adc
pop
sbb
adc
mov
ljmp
int
fsubrs
jae
mulb
fcmovnbe
or
xor
dec
push
lahf
jae,pn
shrb
insb
mov
cmp
inc
imul
jae
mov
mov
mov
sbb
cmp
cmpsl
scas
jge
fisubl
arpl
pop
das
test
push
out
push
lock
cli
and
pop
sbb
rcll
sub
dec
jle
pop
popf
sbb
or
inc
iret
pop
sahf
mov
push
push
mov
wbinvd
aam
mov
shrb
push
test
das
nop
sbb
lret
push
pusha
dec
pop
out
pop
xor
mov
insl
jle
out
fisttps
sub
bound
or
fmuls
pop
fdiv
lret
aas
mov
mov
lcall
jmp
ret
je
mov
xor
aas
sbb
push
mov
lea
ljmp
jl
pop
lahf
cld
mov
mov
jmp
jecxz
mov
test
aaa
adc
notb
mov
outsl
and
pop
push
cli
mov
enter
aaa
int3
push
fidivrl
test
leave
in
in
adc
inc
and
jge
adc
addl
pop
inc
mov
jbe
xlat
movsb
mov
repz
xor
push
mov
rcrb
dec
xlat
scas
sbb
divl
lock
xor
pop
xchg
cs
add
pop
inc
pop
pop
es
dec
xlat
bound
je
mov
outsb
bound
repz
into
shlb
dec
arpl
popf
ds
jnp
fs
xor
cmp
sahf
pop
in
inc
pusha
mov
pop
nop
or
fst
pop
mov
or
or
lahf
push
push
stc
or
jle
dec
mov
bound
nop
xlat
push
pop
cmp
xor
xchg
rcr
mov
mov
xor
fs
fisubs
popf
xlat
shrl
enter
inc
imul
mov
push
jmp
jne
mov
jg
test
sbbl
push
fwait
mov
das
adc
pusha
jo
xchg
adc
cmp
jnp
push
cmp
mov
pop
ficoml
jp
movsl
ss
jmp
and
mov
bound
mov
mov
sbb
test
cmp
out
inc
jnp
out
stc
icebp
out
dec
cmpsl
outsb
sub
out
xor
dec
out
test
out
add
xchg
sahf
cmp
mov
push
xchg
sub
out
lret
jns
mov
jno
xchg
xchg
add
cmp
xchg
jmp
push
ret
shlb
inc
test
xchg
ljmp
sub
adc
mov
icebp
scas
enter
xchg
sub
flds
in
out
pop
sub
int
cmpsb
jne
mov
mov
mov
filds
xchg
cmp
mov
sbb
sbb
mov
movsb
leave
shlb
hlt
fstpt
pop
into
mov
aad
inc
mov
out
leave
pop
int3
mov
imul
movsl
xchg
rcll
cmp
out
insl
fstpl
stos
xchg
ficompl
xor
cli
sub
inc
pop
shll
push
rcrl
stos
mov
cmpsb
adcb
cmc
xchg
repnz
jmp
les
lret
jb
pop
aad
stos
pop
jne
nop
xchg
int
xor
jp
inc
jo
pop
fcoml
inc
mov
clc
sbb
cmp
faddl
add
repz
scas
adc
imul
inc
cltd
sub
fsubl
movsb
mov
jmp
inc
mov
pop
jp
xor
push
push
mov
int3
add
mov
dec
nop
mov
mov
loopne
pop
adc
mov
addb
xor
mov
ljmp
test
mov
jb,pn
lods
mov
arpl
insl
outsb
pop
sbb
or
je
je
jbe
and
insl
inc
or
dec
xor
in
cli
dec
hlt
lcall
pusha
or
mov
in
clc
imul
outsb
insl
xor
in
bound
or
stos
addr16
mov
jmp
pushf
adc
movsl
adc
fs
adc
lret
xchg
std
xor
icebp
in
xchg
rcrl
cs
dec
adcb
mov
mov
dec
or
mov
add
mulb
jb
xlat
sbb
sbb
mov
inc
dec
jb
nop
cld
mov
xchg
hlt
movsb
in
movl
cmp
push
mov
sub
sub
nop
add
bound
mov
outsl
sahf
ss
push
loope
idivl
lds
inc
mov
fs
es
cmp
aam
popa
or
xor
dec
ljmp
stc
pop
pop
stc
dec
jp
pop
lret
sbb
rcrb
mov
xor
shlb
mov
jae
in
adc
daa
pop
push
ja
lds
in
sub
cld
mov
xchg
stos
sub
hlt
ljmp
out
push
fisttps
in
xlat
lock
lds
imul
shlb
push
notl
lret
push
lds
ds
add
enter
sbb
sbb
repnz
into
in
loope
jae
mov
jns
ret
pop
mov
lret
jmp
add
pop
jmp
push
sub
mov
aaa
cmp
cmp
inc
dec
in
sbb
jae
mov
pop
sbb
push
test
cmp
test
outsb
add
rorb
inc
inc
jne
jns
push
cld
push
add
loope
lds
and
pop
adc
jne
jp
add
aaa
xchg
lahf
cmp
jnp
arpl
int3
jp
inc
pop
mov
ficompl
inc
aaa
inc
fstps
cmc
and
insl
jb
mov
popa
dec
mov
add
inc
mov
pop
pushf
and
mov
jns
jp
jecxz
out
adc
popa
enter
insl
dec
mov
add
sub
mov
out
pop
xchg
lods
insl
mov
and
std
arpl
movsl
mov
sub
mov
aaa
fbld
lcall
or
lret
iret
test
jge
adc
mov
fsubrl
jae
hlt
sbb
outsb
xchg
fstps
hlt
push
push
arpl
xchg
push
xor
inc
ljmp
jnp
les
push
push
add
cmpl
out
jg
shll
xchg
sub
or
xchg
or
ljmp
out
inc
push
sub
adc
cmp
sbb
cwtl
adc
pop
fadds
inc
movsl
popf
mov
mov
and
test
sub
inc
jb
call
aad
in
jo
dec
mov
rorb
xchg
and
cmpsw
xor
lods
mov
mov
or
fwait
test
frstor
outsl
or
aad
xchg
mov
inc
sbb
pop
mov
mov
jmp
xchg
mov
cmpsb
mov
push
cwtl
mov
sub
movsb
ss
scas
test
pop
add
arpl
mov
bound
mov
lods
jge
adc
inc
sbb
adc
pop
xor
jns
popf
push
xor
fbstp
movsb
pop
inc
push
loope
jmp
add
in
fbld
fcompl
popf
xor
sbb
test
cmpsl
sbb
dec
dec
jns
xor
xchg
xchg
push
ljmp
cltd
and
ficompl
popl
call
and
test
mov
mov
xchg
aam
jle
lock
aam
fmull
push
out
sbb
test
ds
rorb
out
xor
and
aad
imul
jb
pop
or
lds
mov
mov
iret
push
imul
int3
in
xor
pusha
hlt
ljmp
xchg
gs
movsl
popw
je
scas
add
aas
sbbb
and
push
cmpsl
hlt
sahf
jl
xorb
xlat
jl
js
mov
cmp
insl
push
ss
outsb
push
movsl
pop
xchg
popf
into
and
push
push
jl
call
xchg
cltd
cld
lods
lcall
loopne
xorl
hlt
mov
ficompl
push
adc
inc
mov
out
add
xor
loop
lret
lock
mov
push
push
loopne
insb
imul
mulb
aaa
xchg
pop
jb
pop
and
cmpsb
xlat
scas
jo
push
or
bound
jl
movsb
frstor
add
push
adc
or
pusha
mov
test
xchg
mov
dec
jmp
pop
xchg
js
xor
dec
dec
adc
outsb
sahf
les
inc
pop
lds
inc
jb
popf
adc
ret
hlt
xor
pop
insb
sbb
or
in
push
cmp
gs
jl
mov
sar
jb
push
cmp
cmc
sub
cmc
lods
sbb
dec
cli
push
mov
xor
gs
dec
cmp
jge
ljmp
or
xor
lret
int3
test
cmp
outsb
lods
mov
inc
inc
sbb
inc
inc
movsl
xlat
es
dec
nop
mov
lods
imul
repz
or
pop
fwait
insl
add
lret
sbb
inc
loope
pusha
test
int
and
jns
es
mov
and
lahf
movsl
xchg
scas
lods
pop
subl
jmp
cmp
mov
add
mov
xor
xor
mov
inc
jge
jne
ds
les
enter
aaa
out
jl
cld
mov
outsl
call
mov
sub
cld
rclb
fptan
test
daa
cmovs
pop
ss
jecxz
xor
loopne
mov
sbb
push
bnd
xchg
lea
stos
popf
int3
mov
movsb
out
sub
adc
add
arpl
and
into
ds
and
daa
dec
dec
or
xchg
fstp
bnd
adc
inc
mov
aas
jg
mov
imul
lcall
sarb
or
xor
jnp
imul
sub
mov
xor
mov
jmp
roll
movl
aam
mov
mov
pop
jg
jg
pop
xor
rcll
and
rclb
inc
mov
mov
mov
dec
jbe
xor
sub
mov
mov
push
cli
out
mov
xchg
and
sub
out
loope
and
in
pop
push
cmp
aad
sbb
jmp
add
or
cmp
cmp
xchg
push
add
loope
lahf
jo
pop
dec
cmpsl
std
rcl
add
insl
and
pop
int
cltd
cmp
pop
es
aam
add
mov
daa
or
ja
ss
or
iret
ret
adc
das
in
psubq
sbb
inc
sub
adc
xchg
pushf
mov
xor
inc
inc
pop
or
sub
push
jb
lahf
movsl
or
fidivrl
fdivr
std
sahf
push
stos
test
cld
fcom
rcrl
lcall
xor
test
pushf
mov
push
js
push
mov
xor
stos
jo
push
and
adc
sub
insl
jo
mov
test
or
xchg
imul
sub
cld
mov
add
adc
jbe
shrl
xchg
data16
rol
in
testb
test
adc
jno
fadd
xor
add
jnp
sub
daa
test
jne
fwait
scas
pop
inc
xor
cwtl
jge
lods
test
sbb
das
and
xor
push
movsb
mov
mov
mov
fsts
pushf
mov
mov
inc
addr16
clc
into
inc
sub
xor
mov
pop
aad
ss
imul
adc
ret
add
xchg
movsl
mov
pop
mov
fsubrl
icebp
or
or
lock
push
cmc
inc
mov
jg
mov
addb
adc
rolb
dec
out
add
push
ss
and
pop
add
ficoml
xchg
rcr
push
push
dec
outsl
adc
pop
mov
add
mov
pusha
jmp
pushf
imul
push
push
inc
jno
push
xchg
cmc
in
mov
ror
sbb
cmp
fdivrl
pop
xchg
jle
fnstcw
jno
outsl
shr
xor
pop
ljmp
stos
pop
test
mov
cmp
push
movsl
inc
add
pop
jg
out
pop
and
into
ja
inc
mov
in
pop
or
es
rcrb
jo
call
or
rorb
mov
cltd
cmp
clc
inc
clc
cmc
cmpsl
call
xchg
mov
mov
mov
and
fldt
aaa
out
les
adc
mov
sub
sbbl
out
sahf
mov
xor
in
jno
das
sub
into
sbb
jg
and
loopne
sub
cwtl
mov
mov
dec
mov
dec
push
addr16
in
mov
sbb
mov
jmp
push
mov
icebp
in
jp
dec
lock
add
xor
inc
or
sbbb
jo
repz
popf
inc
ja
fnstcw
push
incl
shr
sub
cld
sub
dec
and
daa
imul
dec
nop
cmp
scas
xor
push
jle
and
sub
imul
or
mov
test
rol
push
pop
stos
iret
cmp
inc
push
out
mov
pop
js
sbb
cmpsb
xchg
inc
mov
add
out
lods
xchg
enter
xor
loope
push
and
jl
insb
sbbb
mov
inc
jle
jmp
leave
pop
mov
sbb
and
mov
fdivr
out
xchg
cmp
fldenv
or
jmp
jne
or
cmpsl
inc
and
inc
cmc
pusha
mov
push
and
scas
adc
inc
hlt
pop
loope
sbb
xor
rclb
inc
stos
loop
mov
loopne
into
pushf
outsl
inc
arpl
inc
loopne
mov
icebp
push
xchg
jo
pop
sbb
inc
or
push
icebp
or
js
pop
in
shrb
xchg
cmc
push
fidivrs
mov
pop
add
notb
ret
mov
les
jae
pop
in
nop
fcoml
and
pop
jnp
fidivrs
cli
sarb
out
jb
stos
leave
lcall
jecxz
test
repz
add
jne
xchg
dec
xchg
mov
jle
in
sub
pop
repz
andb
les
jns
jg
lret
mov
lret
adc
es
jecxz
xor
xchg
xlat
push
and
in
mov
mov
sub
out
ss
int3
cmp
push
push
movsb
push
xor
pop
dec
push
call
test
xor
add
jo
es
push
cmp
sub
test
popa
jg
aaa
jl
mov
adc
orb
push
test
adc
sbb
hlt
mov
cmp
js
dec
adc
xchg
add
es
dec
iret
xor
push
mov
out
out
jge
stc
sub
mov
jnp
shlb
std
jl
andl
and
fwait
sahf
call
push
push
adcl
pushf
sbb
stc
int3
lret
jns,pn
fisubl
push
fidivl
inc
inc
adc
test
or
jo
rcrb
push
fidivl
fwait
in
mov
cmpsl
xchg
cs
in
outsl
dec
mov
bound
ret
dec
add
sbb
push
jne
das
gs
ret
adc
adc
lods
lods
mov
insl
push
ds
push
and
popf
fidivl
rcr
test
adc
outsl
push
fsubrs
cmpb
repnz
hlt
pop
pop
mov
xor
jmp
dec
xchg
lret
adc
outsb
jl
das
sbb
push
js
or
mov
jmp
adcl
call
lods
mov
icebp
xchg
jge
repz
xchg
or
scas
adc
add
pop
cld
mov
in
pop
xchg
mov
cmc
or
fcmove
fdivrp
push
loopne
scas
enter
fildll
mov
cmp
mov
jecxz
mov
cmp
adc
daa
xor
pop
jmp
xchg
push
lcall
xchg
push
push
mov
cli
cmp
dec
idivb
jnp
and
mov
push
jle
stos
fstpl
cli
mov
jnp
faddl
inc
sbb
jbe
outsl
out
mov
jmp
sbb
lea
or
stc
loop
mov
cmc
push
push
sub
aas
jno
xchg
cs
rcl
pop
cmp
mov
push
xchg
dec
out
inc
xor
xchg
sub
movsb
push
push
dec
or
pop
xor
not
out
mul
xchg
inc
call
xchg
imul
ds
cwtl
push
rorl
lcall
mov
xor
jbe
jno
jp
sbb
sub
sub
outsl
xchg
out
mov
icebp
fadds
data16
loop
jge
mov
gs
jnp
mov
mov
aam
popf
mov
loope
shll
loop
popf
pop
adc
dec
out
and
sbbb
xchg
xchg
jle
jbe
aas
scas
out
std
xchg
mov
pop
push
dec
cmp
xchg
mov
adc
inc
jl
ret
testl
sbb
popa
arpl
mov
adc
adc
jl
push
aas
xor
xchg
sub
dec
or
lock
and
sbb
lret
dec
add
or
mov
inc
mov
pushf
inc
add
pop
xor
inc
cmpb
ja
hlt
or
mov
push
push
ds
addl
xchg
add
dec
jmp
fidivrs
fxch
andl
orl
enter
cwtl
add
or
ja
stc
cmp
cmp
pop
lcall
xchg
popf
or
addr16
sub
sub
xor
mov
fs
cltd
fadd
clc
cmp
mov
fs
add
leave
lock
add
leave
jp
mov
out
jo
xlat
es
aad
mov
add
jae
sub
outsl
aam
mov
cmp
jno
pop
mov
lds
jmp
push
hlt
and
jecxz
mov
xchg
mov
insl
lret
or
repz
mov
sub
sbb
pop
ss
mov
aaa
push
adc
popa
sbb
ret
xchg
and
out
sbb
std
sub
mov
dec
pop
xchg
dec
sub
push
pusha
mov
pop
iret
push
aad
or
repz
sbb
repz
iret
xchg
test
and
int3
in
pop
lods
push
cmc
cmpl
pop
out
xlat
les
aam
cmp
movsl
xor
sub
xor
nop
jg
loope
scas
and
cmpsl
cld
sub
andb
mov
mov
lret
ficoml
jg
sbb
nop
ds
xor
sub
scas
mov
adc
sti
lock
push
jne
icebp
leave
fdivs
mov
test
and
and
sub
int3
mov
shl
inc
js
fcomi
clc
lea
xchg
or
mull
jl
cmpsl
jbe
fsubrs
inc
pop
jbe,pt
pushf
int3
clc
popf
xor
and
sub
por
test
notl
mov
mov
js
xchg
add
sub
xlat
lret
jl
aaa
sbb
cld
or
cwtl
or
inc
imul
pop
xorb
scas
adc
cmp
and
xor
push
push
push
adc
incb
sar
mov
mov
jle
push
sti
mov
sbb
movl
mov
lods
test
movsb
lods
addr16
stos
repz
lods
adc
aad
xor
jl
jns
or
les
dec
mov
ss
mov
dec
stos
cltd
jmp
ss
in
in
scas
arpl
fcoms
insl
xchg
pop
pop
ret
sbb
leave
mov
dec
test
into
pushf
sub
or
fs
call
jne
das
sbb
pop
js
mov
push
leave
aam
sahf
fidivrl
je
lahf
push
pop
cmp
adcb
repz
xor
xchg
out
and
sub
xchg
pop
lods
sbbl
dec
fs
sub
dec
sub
in
pushf
leave
mov
mov
cmp
jo
sbb
xchg
lods
or
leave
rcll
cmpsl
or
repnz
inc
inc
test
sub
std
cmpsl
mov
mov
xchg
cmp
xchg
shlb
inc
sub
xchg
ds
daa
aad
hlt
ret
cmpsb
jecxz
fimull
mov
mulb
adc
xchg
sbb
cld
mov
into
fdivs
mov
addl
cmc
enter
ret
xor
stos
mov
scas
dec
mov
lahf
dec
jb
adc
jmp
test
xchg
rclb
mov
jle
inc
mov
pop
fmull
sahf
xor
mov
mov
test
bound
mov
bound
push
mov
mov
jge
jnp
xor
insl
jmp
xor
adcb
sub
psrad
and
mov
int3
dec
loop
push
jae
bound
xor
dec
stc
jp
test
int3
pop
dec
andl
mull
xchg
xchg
cmp
mov
dec
cld
and
push
gs
out
call
xchg
pop
jp
dec
or
loop
or
jnp
sbb
lret
mov
repz
inc
push
inc
sub
outsl
cld
jecxz
fsubr
outsb
clc
popl
cmp
es
sbbb
pusha
pop
xchg
push
jg
clc
xchg
gs
mov
ljmp
push
mov
mov
movsb
les
mov
cmp
jns
mov
test
mov
out
jecxz
jns
jno
and
inc
je
add
std
daa
pop
and
ret
mov
aas
or
les
mov
cmp
out
sbb
xor
sbb
jmp
mov
or
insl
stos
mov
sysenter
clc
stos
in
sbbb
in
jle
sbb
mov
jmp
aad
mov
int
dec
test
xchg
inc
mov
sbb
jno
rol
xchg
dec
pop
sub
insb
sbb
iret
lds
inc
fisubrs
mov
lahf
or
push
lds
adc
mov
stos
jo
mov
cmpsb
rcll
out
rcrb
insb
inc
shlb
add
xchg
xchg
xchg
loop
das
dec
pop
scas
fldt
int3
popa
adc
fs
jmp
stos
jno
fs
aas
stos
fadds
fdivrl
cmp
mov
jge
and
gs
test
cmpsb
pop
nop
movsl
mov
sbb
pop
cmp
inc
push
lds
insl
ja
xchg
sahf
push
mov
das
push
mov
nop
or
aaa
or
xlat
in
dec
test
pop
dec
jae
je
add
cmp
test
movsl
pushf
lock
xor
std
push
push
push
push
sbb
shrl
xor
push
jns
lods
popa
push
mov
cmpsb
and
imul
mov
lods
enter
mov
std
shlb
shrb
lfs
and
push
inc
xchg
dec
sti
cmc
adc
jbe
adc
lret
xchg
call
enter
loopne
add
lcall
ret
push
es
scas
js
cmp
loopne
or
sub
xor
xor
stc
iret
loopne
dec
and
and
push
inc
mov
rcr
and
dec
orb
adc
inc
outsb
jno
cli
mov
lcall
loop
mov
punpckhbw
scas
sbb
ja
sub
notl
sti
std
push
dec
jne
cmpsb
aaa
neg
sub
lods
add
test
jg
incl
movsb
adc
dec
xor
shr
sub
pop
mov
lock
dec
cmp
sub
loopne
fcmovu
sar
movsl
or
out
aas
adc
test
jl
sbbl
add
sbbl
mov
xchg
test
test
lret
or
aad
fistl
push
cwtl
or
mov
push
xchg
lods
adc
pop
sbb
cmp
std
movsl
fldl2e
stc
call
outsb
xchg
mov
cmp
dec
in
add
pop
ret
push
pop
hlt
dec
js
push
mov
sub
pushl
outsb
pop
dec
mov
mov
push
mov
ret
jl
fildll
and
push
pop
aam
arpl
push
cmp
in
xlat
mov
inc
or
sub
jbe
xor
add
in
dec
mov
sbb
mov
mov
decl
push
pushf
pop
lret
and
mov
sbb
ds
repz
sbb
js
mov
or
jge
sbb
jmp
jle
adc
adc
inc
cltd
mov
cs
mov
mov
and
sbb
jno
mov
mov
push
pop
test
adc
test
jb,pn
movsb
pushf
pop
mov
xchg
sub
and
ret
fistl
add
or
sbb
sbb
push
cmp
cld
cmpb
inc
sahf
mov
sub
in
xor
mov
lret
jge
cmpb
rclb
add
jl
pushf
mov
cmp
bound
or
lret
pushf
out
jge
sub
cld
mov
jmp
sub
xor
pop
roll
xchg
lcall
pop
mov
dec
icebp
insl
loop
xor
mov
mov
scas
sbb
or
cmp
test
jle
faddl
hlt
and
fstps
lea
fidivrs
cmp
mov
mov
or
push
dec
sub
das
or
adc
scas
bnd
mov
jnp
xlat
aaa
jle
inc
scas
insb
lock
pop
dec
pop
dec
stc
orl
push
call
ljmp
mov
rclb
mov
loop
sbbb
or
dec
jns
push
adc
mov
inc
ljmp
mov
xchg
lds
int
adc
lret
fidivl
lock
lahf
cmp
bound
xor
in
xlat
mov
dec
pop
or
xchg
loopne
adc
lds
mov
shll
mov
jns
or
insl
xorb
push
pop
movl
or
dec
lds
mov
dec
jl
bound
loope
pushf
pushf
rorb
mov
mov
scas
pop
sub
addl
icebp
xchg
push
push
jmp
push
sub
pop
cmc
loope
inc
push
stos
push
test
hlt
mov
jle
pop
daa
das
ret
xchg
testb
xchg
lea
add
dec
popf
pop
dec
movsl
mov
inc
pop
or
push
movsb
adc
jl
push
mov
cmp
jle
or
inc
inc
scas
movsb
sub
sahf
jbe
outsl
cld
push
and
movsb
push
stos
mov
mov
call
arpl
and
jno
sbb
lock
jno
lods
or
mov
fimuls
stos
cmp
dec
dec
sub
xor
and
cwtl
mov
popa
push
pop
dec
test
xchg
out
clc
gs
addr16
rolb
pop
sub
ret
int
shr
test
sub
ror
test
sahf
inc
add
jo
std
mov
push
pop
popf
int
push
aas
cs
pop
ja
mov
aam
dec
rclb
mov
shl
test
shlb
aam
xor
imul
loopne
les
les
mov
leave
jp
jb
or
adc
cmp
and
mov
sub
pop
movsb
fcoms
cmpsb
popa
and
cli
filds
dec
aam
mov
sub
jne
sub
aam
pop
or
jge
add
and
lods
mov
dec
inc
outsl
mov
lock
adc
rcll
jne
imul
movsb
stos
jbe
jb
mov
xor
push
mov
mov
movsl
imul
jmp
lret
mov
xlat
js
popf
mov
pop
xchg
and
enter
mov
pop
popf
jge
cmp
dec
jne
das
in
pop
ret
mov
imul
mov
jl
jle
pop
lret
cmp
pop
pop
jbe
and
gs
idiv
inc
out
jbe
iret
std
add
repz
mov
repnz
ss
ss
rol
call
daa
xor
pop
lret
push
ret
outsl
sbb
jb
pop
aam
xchg
xor
push
out
cli
rcrb
push
fsubrl
mov
popf
or
in
mov
insl
push
push
rorl
mov
inc
xor
jl
sahf
xchg
pop
sti
outsb
or
ret
inc
mov
cmp
loope
mov
jmp
je
mov
sti
int
xor
dec
scas
pop
push
dec
out
loopne
into
cmp
gs
xchg
adc
or
fbld
mov
repz
add
rcr
hlt
cmpsl
fs
jg
rorl
clc
inc
add
nop
filds
jb
stc
mov
popf
out
rcll
mov
sahf
xor
jno
in
dec
sbb
lret
cmp
push
vpcmpeqb
jmp
repz
insb
out
pop
in
xchg
nop
pop
insl
dec
push
movsb
test
mov
inc
ret
sub
or
cld
movsb
lods
into
mov
les
fsts
inc
movsl
ja
sub
cmp
movsb
fcomp
push
cmp
movsb
xchg
add
int3
lods
pop
mov
or
nop
movsl
insb
pop
adc
add
testl
jae
add
fiadds
in
mov
cmp
xchg
xor
ds
repz
loopne
jbe
mov
add
pop
lahf
pop
test
daa
fidivrl
shll
sti
adc
cld
stos
lock
adc
pop
mov
mov
lret
dec
inc
in
push
fbstp
or
mov
movsb
out
cmpsl
add
pop
cmp
adc
sub
lock
mov
add
call
jmp
adc
stos
sarl
dec
fs
and
xchg
loope
repnz
ljmp
add
xchg
jmp
ret
push
or
and
fs
xor
push
jmp
or
ss
sbb
mov
fsubrs
pop
pop
cli
xchg
xlat
push
push
and
repz
lock
sbb
mov
jno
fbld
xor
add
imul
ds
sub
notb
lock
lods
adc
mov
and
out
lret
orl
int3
dec
popa
mov
pushl
ja
or
sbb
test
lret
insl
lea
jbe
cmp
push
mov
inc
iret
jno
sub
in
int3
push
test
xchg
test
add
cld
mov
clc
xchg
jns
adcl
cmp
adcb
jne
jnp
fisttps
xor
add
cmp
adc
xchg
test
and
push
inc
xor
jle
pushl
in
aad
sub
mov
daa
ds
mov
fiadds
lret
das
xor
mov
daa
or
aaa
dec
nop
push
insb
rcll
cmp
fisttps
insb
dec
pop
out
sbb
lds
or
add
int3
xchg
and
add
xor
xor
lret
jp
in
cmp
xchg
fcom
pop
aad
cmpb
mov
jne
in
jp
dec
xchg
jg
ret
mov
push
out
xchg
or
pop
movsl
dec
inc
jmp
out
xor
dec
mov
cmp
aaa
ficompl
lock
out
pop
sub
fimuls
or
ret
sub
int3
inc
or
push
mov
shl
jmp
loope
aad
neg
aaa
mov
sub
nop
or
arpl
or
addr16
rorb
inc
mov
lds
ret
loope
fsub
loop
fisttpll
and
xor
add
in
loop
lds
std
std
jns
cmp
mov
mov
ljmp
lahf
mov
jae
in
jle
xchg
lret
add
xor
fists
mov
rorb
enter
push
ret
loope
mov
lahf
adc
push
stos
sbb
and
cli
loope
sbb
stos
jg
inc
sub
or
mov
dec
popf
call
add
jecxz
addr16
cltd
scas
dec
inc
je
mov
push
cmp
popa
push
mov
push
push
adc
lcall
iret
cli
pop
jl
fidivrl
stos
subb
jae
test
mov
icebp
cmp
and
sbb
sbb
inc
xor
push
adc
andl
jne
xor
jno
aam
mov
add
xchg
push
data16
xor
cmpsb
jecxz
dec
mov
cmp
mov
xchg
mov
adcl
xchg
cmp
or
loop
scas
cltd
clc
push
das
xor
dec
test
push
fbstp
lock
mov
fildl
sarl
xlat
or
mov
test
pop
shrb
cmp
dec
call
jp
je
lods
jmp
xchg
sbb
rcl
shl
push
les
xor
lods
push
lea
iret
adc
popf
imul
mov
jecxz
ljmp
cmpsl
cmpb
test
adc
rclb
fsubp
mov
shr
rcll
clc
sub
pop
jno
add
cmc
fsubrs
dec
popf
xchg
jl
pop
dec
and
mov
push
dec
aas
pop
pushf
loop
hlt
pop
repnz
cmp
sbb
iret
cmp
bound
pop
mov
aam
pop
dec
fcmovb
dec
insl
mov
push
adcb
jb
lret
mov
mov
sub
dec
idivb
loope
fmull
orl
lcall
lahf
shlb
pop
clc
subb
push
push
xlat
insb
pushf
pop
fmuls
into
cmpsl
je
mov
aaa
shrb
mov
fldcw
pop
xor
cmp
sbb
in
adc
test
push
cwtl
jge
ror
mov
jns
arpl
jmp
out
push
aad
add
out
cmp
push
pop
dec
push
loope
and
and
sahf
pop
xchg
and
sbb
fsubl
xchg
jge
stos
adc
decl
push
lahf
or
movsl
push
and
and
hlt
mov
dec
mov
xor
add
fildl
mov
cld
movsl
inc
stos
xorb
mov
popa
sub
and
pushf
pop
stc
movb
rcrb
add
and
jae
xlat
lods
inc
out
jnp
popa
and
cmp
nop
mov
sbb
push
sub
mov
lcall
cmpsl
aam
fldenv
roll
xchg
enter
mov
mov
mov
pop
inc
rclb
xor
pop
cwtl
ror
adc
or
movsb
in
lods
testl
push
ret
xor
int
add
push
das
or
cld
add
clc
sbb
and
jb
std
add
sub
outsl
pop
xchg
and
dec
aaa
test
push
xor
cli
xchg
xchg
gs
mulb
dec
and
aad
jae
mov
cmpsb
jb
sub
inc
sub
popa
push
mov
xor
iret
insl
test
fsubs
aas
into
repnz
inc
sti
lock
jno
cwtl
add
mov
push
xchg
mov
in
jecxz
in
paddusb
pushf
cmovl
imul
jle
std
fisubrl
outsb
add
outsb
aad
pop
push
xor
shlb
push
lret
cmp
shl
xchg
push
sub
loop
cwtl
xchg
fdivs
dec
cmpsb
add
pop
loopne
fs
xor
sub
bound
or
xchg
lret
fnstcw
xor
fidivrs
push
hlt
xchg
mov
cli
sub
test
sub
scas
das
fidivs
shl
outsb
loop
jl
mov
aas
xor
lods
les
or
and
jns
popa
and
push
or
fwait
adc
bnd
addl
pop
lahf
jo
jg
xchg
sbb
ljmp
xchg
xlat
es
dec
jmp
push
out
mov
cmp
pop
adc
cmp
cmpsb
mov
push
insl
push
scas
fs
sbbb
mov
mov
dec
lcall
lahf
pusha
int
push
mov
cmp
xchg
xchg
lahf
cmpsb
jp
fisubrl
push
mulb
out
shr
xchg
mov
push
push
jecxz
decl
jo
lods
inc
inc
mull
int3
dec
inc
jne
add
test
cmp
inc
dec
ja
out
sub
sub
neg
pusha
xor
jo
mov
inc
xor
outsl
scas
loop
cmc
pop
push
testb
xor
daa
imul
xchg
pop
add
xchg
mov
jmp
iret
sub
push
scas
mov
push
sarb
mov
cmp
mov
mov
fdivrs
bound
add
xor
or
in
mov
and
es
out
aad
movsb
fwait
adc
cld
lcall
movsb
fisttpl
fldcw
mov
stc
ds
sbb
stc
cmp
mov
cmp
inc
xor
aas
aam
outsl
ret
addl
outsl
out
mov
dec
inc
or
enter
adc
xor
cs
mov
out
iret
test
in
rorb
lahf
shl
lock
sub
test
xchg
xchg
push
adc
sbb
cld
into
test
pop
adc
sub
cs
mov
cs
cmp
fistpll
inc
rcll
sub
mull
out
push
jno
and
pop
pop
dec
das
stos
and
xchg
sub
imul
mov
cmpl
dec
in
loop
cmp
rcrl
jge
xchg
scas
mov
test
xlat
insb
cmpsl
bound
sbb
test
sbb
fsubr
cmpsl
into
and
adc
enter
push
ret
sti
jecxz
and
mov
xchg
hlt
sbb
cmpsl
cwtl
push
jmp
mov
pop
xchg
orb
fwait
adc
xchg
movsb
add
jge
mov
bound
push
dec
xchg
push
dec
dec
xchg
adc
sbb
xor
xor
jo
mov
testl
nop
int3
xchg
test
pandn
ljmp
jp
je
mov
sub
lods
cmpsl
mov
jp
repz
sbb
adc
js
sub
stc
icebp
movsl
ret
nop
jecxz
popa
mov
sbb
push
xor
cmc
ljmp
mov
mov
push
mov
jae
or
pop
jg
iret
add
pop
orl
mov
xchg
or
sub
test
sbb
jbe
mov
xchg
push
dec
xchg
push
ss
popl
mov
mov
dec
mov
adc
ds
xor
std
stos
and
pusha
repz
clc
push
cmp
adc
push
dec
gs
pop
icebp
lret
jae
jb
stc
cli
out
mov
in
ds
jno
sbb
xor
scas
dec
cwtl
cmp
inc
and
xor
insb
xor
add
ret
and
dec
ljmp
mov
bound
inc
rcrl
cli
addb
xchg
inc
and
inc
stos
bound
dec
push
adc
or
movsl
lahf
out
flds
sub
mov
popf
inc
and
outsl
fs
sbb
fwait
xchg
test
jg
test
loope
and
push
stc
cmp
insl
add
das
add
sub
inc
test
dec
sbbl
das
outsb
shll
xchg
sti
cs
aad
jno
mov
sbbl
push
repnz
xchg
in
fadd
cmpsl
cwtl
pop
hlt
add
mov
ret
lahf
mov
int3
add
dec
fcmove
xchg
add
sbb
aam
xlat
shrl
out
jecxz
dec
xchg
fiaddl
xchg
cmp
jl
in
in
shrl
adc
push
outsb
mov
add
pop
fwait
pop
add
outsb
shrb
mov
xchg
cmp
int3
cmpsl
xor
lret
mov
push
dec
mov
scas
sub
test
push
inc
out
sbb
insl
sub
push
out
lock
mov
mov
add
sbb
js
jbe
inc
and
sub
pop
push
jg
pop
inc
mov
outsl
cld
pop
jae
jmp
push
sub
fistps
fisubs
repnz
mov
push
lret
pop
jbe
repnz
sbbb
fdivrs
push
adc
add
int3
mov
loop
mov
sbb
sar
mov
and
fisubs
lods
sahf
fcmovnu
aad
test
dec
fcmovnb
cmp
shll
inc
sbb
pop
add
insb
cltd
nop
pop
xor
popa
pushf
or
push
imul
pop
jecxz
cwtl
loope
in
ja
xchg
mov
inc
cli
inc
dec
lcall
cmp
cltd
mov
xchg
in
or
dec
movsb
loop
and
ljmp
inc
dec
push
leave
sub
stos
mov
cmpsl
sti
js
xor
adc
je
in
sbb
int
cmp
xor
in
pop
rcl
sub
xchg
sub
ror
ds
dec
adc
fidivrl
jne
scas
sub
sub
cwtl
sbb
mov
cmpsb
xchg
pop
fmulp
lods
jbe
icebp
inc
pop
scas
mov
fadd
std
or
mov
xchg
or
mov
xlat
call
push
aas
jle
jbe
gs
int
pop
insl
cmp
xor
cmp
xchg
cmp
pop
js
mov
jmp
mov
lret
leave
aam
push
rcll
jo
in
popf
stos
pushf
cmpl
pusha
cltd
jnp
cmp
and
sub
jne
mov
mov
push
mov
out
aam
icebp
push
cmp
sub
push
repnz
xchg
mov
notb
sub
xchg
or
xchg
push
imull
inc
inc
testb
adc
jo
fnstsw
out
lods
orl
fwait
mov
cmp
lds
repz
notl
lods
lea
jbe
pop
jns
inc
sbb
sbb
pop
ficomps
pop
int
stc
cs
lods
arpl
adc
std
inc
cmpsb
aaa
mov
mov
jns
cld
push
push
add
xchg
mov
fldenv
movsl
add
mov
fstps
lahf
dec
xchg
cli
insl
inc
iret
adc
add
jg
mov
push
es
shlb
jno
push
loopne
and
int
out
fcoms
mov
add
push
mov
cltd
inc
cltd
jle
inc
dec
into
stc
adc
das
jo
adc
xchg
mov
xchg
cmp
xor
sub
stos
push
out
dec
test
push
add
inc
in
out
push
addr16
gs
mov
lods
out
daa
daa
int3
mov
dec
insb
jo
lret
push
mov
xchg
nop
leave
or
aam
aam
jg
les
add
mov
jl
mov
imul
adc
sarl
add
sub
dec
sub
cmp
or
pop
rolb
flds
xor
jno
shld
iret
pop
fs
sbb
insb
aaa
cwtl
ds
aas
out
mov
xchg
mov
pop
rcrb
orl
inc
nop
sub
bswap
pop
lock
and
hlt
cmp
das
ret
stos
push
adc
xor
push
scas
xor
sbb
inc
testl
xchg
sbb
fdiv
or
push
addl
inc
dec
mov
xchg
jmp
mov
push
movsl
xor
or
shlb
jbe
je
pushf
test
or
andb
mov
cmp
leave
ja
cmp
arpl
cmp
xor
aaa
movsb
inc
gs
aas
dec
and
adc
push
iret
nop
in
insl
adc
pop
hlt
add
pushf
inc
fistpl
fldcw
in
loop
sub
movsb
add
and
notl
into
out
rclb
leave
repz
cs
cmp
inc
pop
jmp
push
fcompl
or
sub
rcr
dec
mov
cmp
and
xor
shl
adc
push
pop
mov
insb
sarl
daa
ret
insl
mov
pop
add
lcall
push
dec
outsb
out
test
sbb
mov
xchg
mov
ret
arpl
loope
gs
or
sub
lcall
xchg
inc
mov
sub
bswap
roll
notb
pushf
ss
mov
mov
ficompl
mov
mov
push
inc
mov
dec
push
les
imul
test
jne
cltd
sti
jp
aas
data16
rol
pop
scas
adc
mov
jmp
sbb
xchg
mov
push
push
mov
xor
adc
aas
sbb
mov
popfw
roll
lret
in
xor
add
filds
lock
loopne
rorl
inc
fsubrp
jnp
mov
jmp
stos
dec
xor
arpl
or
pop
xor
mov
in
mov
test
push
xor
push
js
mov
stos
mov
mov
jl
or
sbb
mov
xlat
push
mov
loopne
mov
inc
and
dec
and
push
out
push
sbb
arpl
push
lock
shll
xchg
out
sub
xor
mov
aam
das
into
ja
inc
stos
push
pop
dec
dec
dec
lds
mov
stos
pop
push
cmp
pop
pop
call
loope
outsb
inc
or
dec
int3
jecxz
repz
xchg
xor
add
push
imul
in
psrlq
mov
mov
inc
mov
xor
les
pop
or
and
inc
divl
js
in
arpl
adcl
push
jle
pop
push
iretw
stos
inc
fidivrl
mov
push
sarb
out
xchg
push
aaa
sbb
mov
cmp
adc
pop
push
xor
inc
cmp
cmc
xchg
xchg
lcall
imul
add
lods
js
cmc
enter
cmp
xor
daa
mov
push
mov
shlb
inc
negl
int
jg
fldt
lret
cmpsb
stos
jnp
cwtl
lcall
out
mov
pop
inc
daa
insb
sub
iret
decb
add
pusha
or
push
mov
in
xchg
mov
sbb
pusha
mov
incl
sbb
ss
inc
in
fmull
int3
daa
pop
mov
mov
jnp
subb
out
jl
inc
mov
stos
outsl
jp
add
test
xchg
test
sbb
paddusw
test
js
jl
push
mov
or
xor
lret
pusha
xchg
mov
jno
imul
push
sti
adc
mulb
mov
jo
arpl
repz
or
push
cmp
fs
jbe
pop
hlt
add
sub
inc
or
scas
lret
or
inc
mov
inc
scas
bound
cmp
mov
mov
cmp
jge
fistl
mov
push
adc
push
jb
aas
cmpsl
es
insb
xlat
jmp
fcmove
mov
cld
jae
call
les
mov
jmp
lods
mov
cmp
sbb
pop
push
inc
adc
push
adc
ss
xchg
flds
push
dec
daa
fimull
mov
sbb
jecxz
adc
add
add
in
mov
xor
mov
xchg
fidivl
addr16
jbe
push
ljmp
sarb
lods
push
sbb
sar
and
fld
fstl
sub
insb
mov
mov
cmpsb
xor
test
adcl
mov
jno
jo
call
add
ljmp
adc
mov
mov
pop
in
jbe
stos
inc
xor
mov
mov
sbb
roll
sti
jne
mov
roll
add
ret
add
and
roll
cmpsb
pop
lods
inc
lock
insb
mov
repnz
adc
add
inc
sbb
push
rcrl
rcr
lret
cltd
push
mov
js
fisubrs
jl
addr16
daa
in
into
mov
jnp
adc
imull
ja
and
lock
jae
xor
ret
mov
push
sub
cmpsl
xor
cli
push
test
enter
mov
ret
mov
adc
xor
cmp
mov
xchg
adc
popa
mov
in
cmp
rol
pop
pop
xchg
out
add
pop
inc
dec
jp
dec
xor
pop
aas
sub
jno
mov
cld
bound
cmp
lds
lret
push
jmp
dec
fsubrl
stos
xchg
adc
addl
sub
daa
es
nop
loope
mov
pop
and
ljmp
cmp
or
aad
pop
mov
mov
jp
jne
subb
and
dec
and
repnz
mov
sbb
dec
cwtl
cs
push
out
dec
and
sbb
or
loop
xor
fildl
cltd
prefetcht0
push
jbe
leave
mul
test
into
add
mov
push
test
sbbl
aam
outsb
xlat
fisubrs
cmc
fisubl
cmp
push
cmpsl
inc
fstl
jno
adc
cmp
pushf
ret
xchg
subb
pop
sahf
cmp
test
or
fidivl
push
and
gs
bound
jmp
cs
cmp
push
push
jge
push
sbb
add
fxch
and
add
jno
cmpsl
data16
test
xor
ret
push
xchg
mov
pop
lret
sub
fnstcw
inc
popf
lods
jns
push
or
lahf
sbbb
cwtl
and
inc
pop
aas
sbb
cld
jecxz
roll
in
in
jmp
dec
int
es
in
pop
enter
data16
stc
dec
cmp
cmp
negb
dec
mov
and
inc
cltd
add
pop
or
sub
in
or
sbb
xchg
test
les
xchg
inc
pop
loopne
add
daa
in
lret
and
push
mov
mov
push
cmp
add
gs
iret
pop
aas
jae
xchg
ret
sbb
leave
scas
hlt
lock
cmpsb
cltd
mov
or
insb
pop
call
sub
cmpsl
or
cmp
add
dec
ds
xor
hlt
mov
pop
dec
jge
dec
inc
inc
cld
inc
repnz
pop
sbb
ror
test
rol
fnstsw
mov
lods
mov
ds
sbb
repz
js
gs
fsubl
add
sbb
dec
aaa
lods
xchg
arpl
lret
js
and
aad
gs
and
fldcw
lock
xchg
pop
imul
mov
push
fisubs
lahf
mov
push
rol
cmp
jnp
dec
cmpsl
mov
test
loope
inc
popa
sahf
fsubl
jl
xchg
push
or
add
mov
and
cwtl
lea
jbe
adc
sti
push
dec
lea
cmp
or
mov
fdivs
stos
xor
mov
cltd
push
out
inc
pusha
cmp
arpl
test
out
movsb
dec
mov
gs
pop
aam
pop
push
int
inc
xor
imul
jmp
cmp
je
adc
daa
push
daa
test
pop
ja
cwtl
adc
insl
jecxz
arpl
xchg
cmp
inc
mov
loopne
scas
call
xchg
jo
div
in
adc
xchg
cmp
je
or
sarl
jp
imul
pop
inc
jmp
pop
push
push
xor
mov
sbb
lods
rorl
push
imul
or
shlb
fsubs
ret
mov
cmpsb
push
dec
lahf
inc
test
ljmp
mov
jae
idivb
sbb
or
idiv
jo
sbb
in
xor
loopne
bound
sbb
aas
push
fildl
dec
and
mov
into
cwtl
notb
popf
inc
mov
aam
leave
cmp
andl
leave
shll
jns
sub
loopne
enter
das
inc
and
jno
mov
test
and
jmp
mov
add
inc
mov
push
ljmp
xor
push
jecxz
icebp
sbb
nop
sub
stos
rclb
leave
xor
and
les
mov
fisttpl
push
pop
mov
mov
aas
sarb
js
das
xchg
int3
in
movsb
scas
cmp
das
in
jecxz
xor
les
sti
xchg
mov
je
and
mov
cwtl
je
sti
push
fcmovnb
fwait
cmp
shlb
inc
dec
push
sbb
pop
add
pop
dec
push
add
inc
inc
outsb
adc
ret
scas
ds
mov
adc
scas
cltd
sti
fcoml
lcall
aaa
fs
ljmp
push
sar
test
fisttpl
cmp
mov
push
and
adc
sbb
jl
aas
sub
lcall
pop
lds
jecxz
out
mov
inc
in
mov
push
lahf
push
lahf
cmc
fcmovne
lcall
mov
xchg
nop
imul
mov
fcmovbe
jmp
fstpt
sbb
mov
or
daa
add
sti
cld
rcrb
iret
sbb
repnz
push
fsts
inc
loopne
ffreep
mov
dec
push
pop
outsb
std
or
lret
mov
inc
mov
cld
xor
mov
xorb
sbb
xor
lods
jecxz
fstpl
cs
add
xor
xchg
cmpsb
jecxz
push
xchg
mov
xor
sub
or
xor
adc
sbb
std
mov
cmp
mov
jl
shrb
mov
shrl
rcl
mov
insb
xchg
inc
dec
pop
lock
cmp
jp
sbb
js
sub
cmp
rcll
sbb
std
js
mov
sub
and
mov
mov
inc
sbb
clc
outsb
dec
outsl
subb
dec
ds
call
add
lahf
mov
insb
mov
mov
cmc
adc
lret
push
mov
jo
xchg
jecxz
cmp
xchg
nop
fs
xchg
jo
xchg
xlat
mov
mov
push
int
test
jnp
cmp
loop
ss
jbe
lret
xor
outsl
lea
mov
pop
mov
cmpsl
pop
dec
dec
mov
lret
insl
repz
or
cltd
ret
or
xor
xchg
ror
inc
and
jno
enter
jns
daa
mov
sub
xor
fistpll
add
incl
jae
in
sbb
test
sbb
xor
xor
or
mov
lcall
bswap
xor
sbb
iret
pop
mov
call
and
inc
repnz
dec
les
cli
mov
iret
jle
add
xchg
fidivs
add
fidivl
mov
dec
inc
call
xchg
sub
aam
leave
movsb
adc
and
cltd
lret
push
out
shrb
mov
and
jge
jl
aas
mov
pusha
lods
movb
xor
andb
pusha
xchg
xchg
stc
push
leave
adc
xchg
push
mov
or
leave
push
cmc
shlb
dec
cli
and
push
xor
andl
jo
test
push
jmp
mov
jo
pop
imul
inc
aam
int
jb
mov
pop
cli
das
sbb
jae
jmp
adc
repnz
mov
std
pop
cmpsb
mov
xchg
xchg
clc
xchg
or
xlat
sub
push
jge
loopne
jg
push
mov
inc
mov
jae
jne
dec
mov
inc
push
test
mov
sbb
xor
or
sbb
pop
cmp
les
cmc
push
enter
inc
test
sub
rcrl
mov
add
jle
popa
or
mov
mov
subl
mov
xlat
movsl
rcrl
jecxz
mov
orl
mov
jmp
ret
sbb
cmp
mov
xchg
cmp
add
cld
bound
andb
addl
loopne
ficompl
stos
mov
ja
xchg
nop
out
scas
xchg
lods
mov
clc
push
adc
jno
leave
and
jecxz
mov
addr16
pop
icebp
jmp
mov
repnz
ret
adc
inc
fildll
rolb
add
pusha
push
mov
aaa
ds
ret
clc
add
scas
fcomip
iret
adc
test
test
adcl
in
or
mov
mov
insb
ficompl
lods
xor
xlat
xchg
movsb
and
inc
or
or
mov
pop
adc
insl
add
lret
inc
mov
gs
adc
cli
es
adc
fmuls
in
xchg
lret
jle
mov
cmpb
push
jb
and
pop
or
add
int
adc
aad
mov
fcomip
dec
xchg
and
int
mov
jecxz
xchg
pop
test
mov
dec
add
cmpsl
fs
insb
adc
push
add
mov
mov
fisubrs
test
push
and
lahf
sar
and
dec
or
inc
scas
push
out
adc
cmp
dec
mov
lcall
enter
ficompl
repz
outsl
loopne
imul
pop
inc
mov
loopne
ja
stos
call
jmp
sbb
jae
jmp
fs
sbb
lret
adc
popa
loop
mov
outsl
jbe
mov
cmpsl
les
iret
inc
jg
xor
push
clc
jno
les
pop
aas
xlat
push
xor
dec
sahf
into
lcall
andl
xchg
test
mov
pop
lds
aaa
jne
pop
test
jnp
fdivr
pop
xor
xchg
xchg
stos
fldl
cld
push
test
mov
mov
xchg
sbb
test
add
adc
les
and
lcall
ret
loopne
add
jecxz
mov
sub
sbb
int3
xor
pop
mov
test
fldcw
out
xchg
and
into
repnz
mov
cmp
rcrl
in
xchg
pop
mov
push
pop
jo
cmp
sbb
mov
test
adc
and
imulb
pop
push
jp
xor
pop
push
sbb
and
jae
push
adc
mov
or
in
adc
out
nop
cmpsb
idivl
xchg
push
cmc
dec
lods
pushf
jg
bndldx
shll
out
scas
jl
repnz
ljmp
out
ret
gs
adc
repz
mov
xchg
test
mov
mov
rclb
jg
aas
mov
cmc
pop
xlat
push
and
inc
jecxz
sbb
mov
mov
fnstsw
mov
insb
and
xchg
sub
add
push
push
leave
cld
sbb
les
out
adc
in
stc
push
mov
out
mov
lock
sahf
jbe
call
add
add
push
mov
xor
or
inc
or
mov
test
out
test
sub
dec
or
int
jge
inc
mov
sub
fsubrs
fsts
mov
fildll
inc
fisttps
addl
arpl
aam
into
mov
or
pusha
mov
in
xorb
jg
xor
ss
shr
in
push
jp
ret
jbe
and
push
loopne
pop
xchg
dec
shl
lahf
sbb
dec
fbstp
pop
mov
pop
push
mov
inc
xchg
lret
je
lahf
mov
fists
adc
clc
cmp
dec
fcompp
imul
outsl
cmp
jae
add
popa
es
jbe
pushf
mov
add
pop
mov
and
dec
mov
aas
lods
sti
jne
push
add
cmp
xor
inc
in
gs
lds
mov
cwtl
fwait
adc
mov
popa
xor
sarb
push
mov
sub
add
sahf
js
std
jmp
push
roll
jnp
xchg
sub
mov
je
mov
push
xor
test
pushf
cmpl
mov
loopne
dec
mov
dec
fldl
fstpt
push
cmp
test
stos
xchg
sub
hlt
aam
jle
cmp
fidivl
in
nop
ljmp
rcpps
mov
fs
mov
jns
push
and
pop
ljmp
pop
es
loopne
jl
inc
cmc
andl
into
xchg
cltd
daa
loopne
std
sub
pop
pop
push
repz
mov
dec
pop
in
mov
sub
push
mov
pop
mov
push
xor
or
sub
jnp
jecxz
push
add
daa
mov
push
imul
shll
ror
xor
in
scas
and
xor
push
lret
cmp
sar
mull
sub
push
and
in
mov
iret
push
sub
ret
mov
repz
mov
fldt
mov
cmp
movb
mov
sbb
lret
es
mov
mov
xor
adc
push
xchg
movsb
outsl
into
outsb
adc
dec
movsb
xchg
mov
pop
sbb
loop
sbb
lahf
lea
dec
dec
push
inc
push
or
adc
push
iret
cmp
jl
daa
mov
fisttpll
aad
sahf
xchg
sub
mov
push
icebp
mov
outsb
mov
mov
jae
adc
jle
mov
push
pop
jb
cmpsl
dec
das
daa
jmp
jne
cli
mov
cmp
sub
xor
lcall
ss
das
and
rorl
pusha
jo
xchg
mov
jecxz
xor
daa
pushl
or
fistps
shrl
aaa
adc
cmp
push
jns
adc
inc
ds
sub
mov
cltd
test
adc
inc
or
cltd
push
adcb
hlt
out
mov
or
cltd
imul
imul
sub
add
cmp
lea
cmp
jge
lret
xchg
pusha
jl
jge
ja
pushf
mov
xchg
shrb
inc
scas
iret
push
xor
int
rcrl
push
mov
push
jmp
xor
popa
inc
testl
xchg
ret
xor
popa
sub
shlb
xchg
jo
and
icebp
jne
js
imul
and
test
int3
sahf
sbb
xchg
mov
push
or
dec
inc
xchg
popf
jae
in
arpl
ja
loop
cwtl
call
sub
jnp
ret
aam
push
xchg
ljmp
sub
inc
jbe
aaa
bnd
pop
pop
ret
jo
mov
and
and
imul
fists
mov
xchg
adc
jecxz
push
imul
pop
cmp
sub
push
sub
jne
testl
push
mov
mov
sub
adc
test
mov
pop
pop
gs
in
leave
inc
scas
imul
and
popa
mov
repnz
jmp
push
add
les
mov
xchg
dec
pop
adc
xchg
nop
popl
pop
adc
cmpsb
sbb
cld
scas
mov
int
nop
jne
xor
test
ljmp
mov
bound
icebp
mov
imul
push
sahf
rorl
test
cli
js
push
add
stos
xchg
pusha
and
loope
cld
das
or
fsub
adc
shrl
sbb
fiadds
push
mov
cmp
pop
sub
cs
pop
clc
sub
inc
jl
out
xacquire
jmp
xchg
mov
xchg
loopne
hlt
or
adc
clc
int
fwait
mov
cmp
cltd
pushf
xchg
xchg
jb
loopne
lock
xchg
mov
pop
pop
add
jno
cwtl
call
mov
mov
sub
call
sub
dec
fs
fmul
shl
cmp
ja
push
cmp
fdiv
push
mov
fcomps
out
cmpsl
pop
mov
movsb
lret
cmpsl
pop
pop
push
iret
dec
jge
sbb
rolb
inc
or
inc
jmp
jle
mov
popf
mov
inc
popf
mov
jne
push
mov
ds
jle
cmp
pop
pop
lcall
sub
popf
out
stos
rclb
lods
cli
dec
push
out
cltd
fdivr
in
orl
test
and
movsb
inc
sub
jg
les
jle
fsubs
adc
pusha
aam
sbb
sbb
xor
aam
push
js
into
data16
ret
hlt
fbld
sub
push
out
xchg
inc
xchg
xchg
testb
popf
mov
das
ficoms
stos
icebp
mov
cmp
add
iret
fsin
ss
xor
out
je
ss
loop
les
rclb
push
int
lods
test
imul
pusha
cmp
push
fists
cmp
and
jecxz
add
movsl
adc
and
xchg
stc
js
push
aas
iret
clc
outsb
push
or
mov
jl
dec
and
mov
addr16
mov
scas
pusha
xchg
pop
ljmp
or
xor
sub
or
jmp
cmp
adc
faddl
xlat
cltd
sti
lods
push
mov
je
xchg
es
ret
inc
sub
outsl
repz
xor
test
fldl
loop
ja
iret
in
xchg
sbb
pusha
mov
fists
pop
rorb
cli
fildll
dec
mov
aas
lcall
mov
push
dec
mov
movsb
icebp
mov
fucomi
cld
jbe
push
or
out
fsubrp
cmp
adc
jo
push
div
lods
push
std
inc
addr16
adc
addb
jnp
cs
jecxz
mov
rorb
add
lret
sub
int3
stos
fstpt
sub
push
adc
fimull
incl
or
mov
aas
out
and
cltd
lcall
outsb
mov
lods
lods
xchg
lret
pop
pop
cli
test
arpl
cltd
dec
pusha
popl
sub
icebp
push
popa
pop
cmp
jl
pop
test
sbb
pop
sub
ja
adc
addr16
ja
and
xlat
std
loope
jnp
xor
in
add
das
push
mov
outsb
add
push
or
push
and
fs
xlat
das
ljmp
insb
mov
and
mov
in
fstpl
movsb
mov
jb
adcb
xchg
inc
neg
mov
xchg
jecxz
lods
andl
add
or
pop
jbe
icebp
inc
mov
cwtl
mov
cmc
push
dec
mov
inc
out
out
xor
pop
insb
addr16
dec
in
ljmp
pop
je
inc
gs
imul
xchg
mov
push
add
push
mov
je
pop
addb
dec
push
push
lods
inc
leave
mov
push
out
sbb
leave
dec
xor
dec
jae
mov
pushf
icebp
push
cmpsl
std
adc
adc
rcrl
push
jmp
cltd
mov
jns
pushf
nop
jbe
mov
js
addb
add
pop
or
cmp
insl
stos
xchg
jl
cmp
dec
xlat
sbb
lcall
inc
imul
aam
inc
push
fcoml
cmp
arpl
mov
mov
and
or
mov
aam
sbb
arpl
pop
pop
inc
loopne
insl
pop
shlb
mov
dec
andl
mov
mov
xchg
mov
xor
loop
pop
and
ret
inc
cmp
xor
dec
fwait
xchg
lea
cmpb
fs
cmp
icebp
and
jns
repz
imul
adc
mull
inc
xor
cli
test
test
mov
push
mov
test
loop
gs
mov
push
je
xchg
fs
mov
sbb
xor
test
adc
inc
jp
jbe
dec
jne
test
out
je
ret
in
arpl
lret
and
cmpsl
stc
mov
fidivl
or
movsl
and
lcall
pop
imul
shrl
hlt
push
cmp
cmp
popf
jns
xchg
pop
and
inc
or
inc
pop
loopne
jno
loop
ud2
adc
add
inc
ljmp
mov
stos
iret
dec
sub
sub
jp
jo
push
js
sbb
inc
outsl
push
outsb
sub
out
out
sbb
lods
jmp
cmp
nop
pop
inc
stos
pop
mov
cs
mov
test
mov
and
test
and
adc
into
ficompl
xchg
dec
or
adc
mov
sub
jb
mov
add
imul
jb
fnstcw
push
inc
popa
fidivl
cltd
lahf
incl
jnp
sub
out
jae
cmc
adc
sahf
xlat
xchg
mov
xchg
enter
sbb
push
pop
in
pop
mov
arpl
popf
jl
fdivl
jmp
rcrb
test
jle
int3
adc
push
dec
sbb
in
test
mov
add
add
dec
fs
add
cmp
xor
push
inc
sub
cmp
mov
rcll
xchg
dec
aad
aad
xorb
sar
mov
gs
mov
adc
lock
add
aas
mov
xor
scas
sbb
inc
pop
mov
loope
fdivr
cld
sub
add
mov
xchg
push
out
dec
adc
pop
cmp
and
add
pop
and
aam
mov
mov
mov
adc
mov
add
sub
enter
or
jo
pop
adc
inc
ret
leave
jns
in
in
sbb
out
push
xchg
mov
jnp
dec
cmp
xchg
xor
call
sub
in
jns
add
mov
mov
out
pop
and
mov
pusha
and
shlb
mov
addr16
push
sub
xlat
xchg
inc
arpl
cli
push
push
ss
xor
ret
aas
jo
cmp
lds
hlt
mov
arpl
inc
push
repz
xchg
outsl
mov
mov
pop
push
jmp
loope
aas
jp
ljmp
stos
popf
ja
shrb
mov
xor
add
fstpl
pusha
add
stos
insl
lahf
jbe
cltd
arpl
stos
cmpsl
add
pop
sub
push
test
adc
or
inc
pop
xor
loope
mov
jne
mov
sbb
mov
divb
cmpsb
and
dec
xor
push
aad
pop
filds
dec
into
add
shlb
mov
pop
js
repz
pop
push
pop
shll
or
in
mov
xchg
mov
lea
xchg
insb
rorl
or
push
clc
std
in
scas
jl
sub
mov
xchg
lock
xchg
xchg
es
cmpsl
adc
cmp
iret
das
stc
aas
push
shrl
outsl
test
mov
mov
jb
into
push
leave
mov
out
push
mov
lds
out
push
xchg
cmp
orb
cmp
mov
push
lahf
es
fcmovne
jnp
push
inc
mov
xchg
and
mov
lods
stc
enter
repnz
bound
aas
div
mov
and
mov
inc
and
xchg
sbb
in
dec
adc
int3
push
cmpsl
sub
subl
add
fisttps
or
into
add
sub
cltd
sub
cmp
jnp
lahf
testb
or
sbb
fs
imull
inc
sbb
das
adc
notb
push
mov
clc
mov
shlb
sub
ja
xor
push
xchg
dec
bound
lret
pop
js
mov
mov
xchg
mov
fdivl
fwait
jbe
xchg
sahf
cwtl
pop
out
clc
lahf
addb
dec
xchg
pop
sarb
rcr
popf
and
pusha
fisttps
rolb
mov
add
mov
fwait
jnp
data16
test
outsb
sbbl
lret
int
test
jb
sub
ror
add
ljmp
adc
or
fimull
mov
jbe
xor
xor
push
mov
add
xlat
addr16
cmpb
xchg
daa
in
daa
js
dec
leave
pop
lret
push
stos
ja
xor
inc
jmp
rcl
push
mov
sub
std
inc
inc
mov
std
xor
ds
sub
cld
pop
xor
les
push
test
loop,pt
lods
pop
inc
push
cmp
in
lret
loope
cmp
stc
pop
fstpl
rcrl
dec
int3
mov
das
xor
insl
lods
push
cmp
push
xor
and
push
cmp
mov
stos
push
jp
lcall
lods
rclb
fadd
inc
popa
sbb
sbb
inc
add
arpl
dec
daa
jne
mov
into
into
shl
imul
pop
scas
mov
ja
lods
fisttpll
jl
fimuls
in
xchg
in
rolb
dec
adc
cltd
or
rcrl
mov
rcll
shrl
pop
sbbl
mov
pop
adc
and
aad
stc
sub
inc
inc
fs
xlat
ret
add
int
loope
push
fwait
rolb
rolb
mov
inc
ret
neg
fwait
dec
jg
add
sbb
mov
pop
sub
cmp
out
lahf
stc
dec
dec
sbb
dec
dec
ret
sub
mov
xchg
pop
out
bound
orb
dec
imul
loopne,pt
cmpl
stc
jp
xor
sbb
int3
pop
cmp
push
sub
lret
dec
mov
lahf
mov
xor
movsb
lea
and
push
mov
xchg
mov
mov
push
jp
mov
lea
push
mov
es
xchg
iret
or
data16
rorb
pop
dec
insl
inc
mov
inc
lods
mov
mov
fs
pop
jb
push
aad
inc
cli
xor
test
mov
dec
mov
sti
mov
ror
pop
repnz
push
or
imul
mov
jns
add
adc
call
mov
cmp
inc
nop
add
push
mov
xchg
aaa
adc
rorb
mov
mov
mov
jo
mov
addr16
xor
std
int
rclb
aam
sub
stc
mov
outsl
test
data16
xor
gs
mov
dec
outsl
lahf
pusha
sub
add
sub
add
aaa
aaa
icebp
mov
mov
movsl
fwait
sbb
sbb
or
jb
shll
jb
push
mov
sub
push
and
cmc
sub
pop
daa
insl
mov
test
fstp
mov
ljmp
mov
rorl
adc
or
data16
sbb
pop
and
mov
mov
push
mov
orb
xorl
stc
mov
jno
inc
test
int3
xchg
js
subb
xor
cli
lock
gs
push
aaa
popa
jbe
xchg
adc
pop
mull
addl
add
addl
lods
fwait
push
mov
repz
add
sub
sarb
inc
inc
push
sub
outsb
stos
push
scas
dec
jae
bound
mov
repnz
inc
pop
mov
mov
and
sub
push
andb
mov
cmc
addl
jle
mov
div
add
jae
inc
sub
jle,pn
mov
cmp
stc
sahf
js
fdivrs
mov
aaa
out
jo
and
cmp
jns
lds
mov
sbb
adc
inc
aad
mov
sbb
sbb
xor
sbb
test
pop
lea
push
lds
and
call
cmpsl
mov
cmp
cmp
fwait
shl
push
lock
fidivl
push
jecxz
mov
inc
mov
dec
lret
fistpll
xchg
inc
rorb
fimuls
pop
xlat
aad
lods
push
jnp
mov
in
inc
dec
sbb
out
inc
cli
outsb
in
push
push
push
xchg
xchg
repz
aad
xor
mov
dec
sbb
sub
xchg
xor
cmp
add
mov
xchg
sbb
out
push
inc
mov
mov
hlt
iret
stc
push
popa
sub
cmp
dec
sbb
cmpb
ret
pusha
cltd
addr16
sahf
push
ljmp
sti
adc
mov
inc
and
arpl
andl
or
mov
fbstp
or
das
xchg
lcall
dec
dec
movsl
and
jg
adc
push
and
cmp
scas
inc
xchg
jbe
inc
test
ret
xor
cmp
push
or
jo
xchg
cmc
or
push
movsb
cmp
gs
lods
mov
dec
ficoml
ss
clc
xchg
movsb
pop
mov
enter
sahf
mov
mov
cmp
lds
addr16
insb
cmp
stos
or
aam
ja
lahf
lods
ret
or
xchg
push
dec
out
jno
lods
add
mov
and
pop
mov
mov
jbe
in
cmc
loope
fcmovnu
mov
adc
jne
dec
mov
in
xchg
inc
test
jne
pop
das
mov
lock
jo
sub
int3
movb
xor
test
or
xchg
shll
push
jl
pop
or
or
ror
add
iret
lret
ljmp
or
arpl
push
rcl
and
dec
push
inc
jae
test
lods
inc
push
mov
js
rorl
sub
stos
push
loope
and
add
outsl
pop
in
enter
sub
adc
loope
inc
lods
pop
adc
sub
xlat
push
and
sarl
add
sbb
lds
sub
pop
lds
lds
inc
std
std
adc
cld
mov
sahf
xorb
pop
out
movsl
sub
outsl
sahf
fmuls
js
mov
lods
popf
mov
cmp
or
shlb
mov
loope
in
fisubs
pop
xchg
sbb
xchg
jb
or
fwait
lret
inc
lock
outsl
inc
pop
adc
stos
scas
and
mov
lea
nop
lcall
adc
das
pop
cli
xor
add
xlat
fisttps
jge
sub
dec
pop
sbb
in
insl
mov
add
jae
clc
cltd
adc
popf
pop
push
lret
xchg
scas
sub
xchg
lods
push
hlt
es
jp
in
and
push
adc
fcompl
stos
dec
mov
test
inc
cli
lock
rcrb
pop
mov
or
mov
mov
loopne
push
addr16
mov
aad
xor
push
test
xchg
mull
pop
cmpsb
xchg
pop
lods
mov
hlt
into
jae
testb
fucom
xchg
xor
push
sub
hlt
daa
and
pushf
movsl
test
or
lock
sbb
mov
hlt
lea
xor
sbb
fwait
jae
sbb
inc
lret
pop
add
popf
sbb
or
ret
jnp
dec
xlat
roll
test
mov
xchg
mov
inc
mov
jns
enter
ds
and
push
sub
mov
testl
cli
mov
fwait
or
jecxz
cwtl
vpaddusb
sub
pop
aad
dec
pop
and
stc
cmp
xchg
sbb
add
mov
int3
fcmovb
cmpsb
jnp
add
mulb
into
inc
dec
imull
mov
mov
dec
dec
popa
je
cmp
pop
repnz
push
add
sub
mov
test
cmpsb
mov
je
lahf
adc
push
dec
stos
pop
stos
movsl
mov
jge
jmp
mov
call
and
leave
pop
mov
les
sbb
in
adc
dec
xchg
sbb
ret
test
xchg
jmp
jne
mov
add
pop
push
fstpt
xor
push
aam
jbe
js
cmp
ljmp
cli
fisubs
fldenv
sub
mov
or
ja
test
inc
movsl
in
popf
mov
dec
data16
pop
aaa
je
out
push
cwtl
dec
inc
ret
xchg
add
add
xchg
std
fwait
lret
xchg
sti
das
insl
or
jp
pop
mov
out
sbb
and
sbb
testb
hlt
inc
pop
jns
test
xor
sub
push
repz
cmp
pop
add
ja
jge
sbb
cmp
mov
mov
test
jb
cbtw
out
pop
je
stos
imul
mov
movb
sub
mov
jbe
rcrl
imul
inc
mov
jnp
push
popa
js
sub
sbb
ret
mov
ja
filds
fadds
jecxz
je
xchg
mov
dec
fwait
subl
mov
pop
xchg
xor
rolb
subb
add
fs
push
into
xor
lock
mov
and
push
jb
mov
andl
test
push
fnstcw
outsb
dec
cmc
adc
imul
aaa
sub
jb
fstps
pop
aas
movsl
dec
mov
out
cmp
ljmp
mov
es
in
add
lock
dec
mov
les
xor
nop
inc
gs
insl
pop
fdiv
mov
xchg
xchg
xor
adc
in
jp
cmp
push
push
mov
jle
in
mov
or
orb
ss
sbb
loop
sub
and
sarl
push
nop
in
cld
jmp
roll
mov
and
pushaw
xchg
and
insb
cli
in
add
shll
cld
imul
aaa
sbb
sub
repnz
jo
mov
jg
sub
pusha
aad
repnz
or
lahf
rclb
popf
jb
adc
sbb
sbb
std
xor
xchg
loop
les
mov
cs
sarb
mov
mov
insb
xor
repnz
je
fildl
xchg
loope
ret
ret
cmc
out
mov
push
add
mov
push
mov
jnp
fwait
aas
jmp
sbb
leave
ja
jg
clc
lock
xor
jbe
fdivp
mov
orl
adc
xor
mov
dec
out
push
lahf
cmpsb
adc
mov
xchg
and
jae
mov
pop
pop
dec
ds
and
ljmp
aam
or
loop
cltd
pop
sub
and
enter
faddl
dec
leave
sahf
jecxz
popf
arpl
jl
test
push
push
sub
xchg
nop
in
int3
lret
loope
test
jno
fidivl
ds
mov
shll
jmp
dec
sub
rcl
aad
mov
stos
mov
pusha
fisubl
ds
xor
cmp
stos
in
stc
and
dec
xchg
jno
cmc
dec
mov
lds
mov
pop
sbbl
lods
and
insb
lock
or
xor
dec
lcall
sbb
jo
push
mov
sti
and
sti
dec
push
jmp
lret
or
sbb
pop
stc
sbbl
cwtl
rorb
push
ja
mov
pop
cld
shl
jns
enter
test
cmp
mov
call
cltd
mov
mov
mov
lock
sbb
fiadds
jae
cld
lret
int3
dec
xor
cmpsl
nop
mov
pop
xor
sbb
cli
xchg
sarl
lods
mov
adc
push
push
push
pop
pop
jl
je
pusha
adc
adc
dec
dec
mov
and
sbb
jo
test
xor
cmc
adc
cmp
or
mov
adcb
adc
cmp
push
xchg
mov
cmp
and
loop
sub
mov
fcomip
push
das
and
push
mov
out
add
cmp
push
jge
sbb
dec
outsl
je
dec
inc
mov
mov
xorb
xor
cmp
xor
xchg
jbe
enter
test
inc
cmp
or
stos
and
sbbl
mov
xchg
mov
mov
aas
and
mov
addr16
push
xlat
cmp
aas
sub
or
xchg
inc
cmp
or
add
incl
cmc
jmp
push
or
int3
iret
and
fidivl
stos
mov
cmp
enter
orl
insb
outsl
xor
mov
cmp
sub
pop
sarl
mov
xchg
or
mov
inc
add
int3
mov
fsubrp
pop
mov
mov
jns
lahf
sub
mov
or
or
jae
push
stos
cltd
mov
mov
scas
mov
push
inc
add
fdivl
int3
pop
into
inc
in
push
ljmp
call
shr
aam
push
repz
imul
test
jbe
dec
push
push
or
insl
cmc
inc
popa
cmp
lret
ror
icebp
jmp
cli
in
cmpsb
push
daa
inc
or
lods
lahf
or
sbb
cmpsb
push
or
adc
jg
cmp
sbb
sbb
jb
pusha
cmp
or
adc
xchg
add
repnz
imul
fadds
push
cmp
add
add
ficoms
or
das
cmpsl
inc
jl
push
add
sahf
cmp
and
pop
repz
mov
dec
sub
cmc
sarl
xchg
mov
mov
add
adc
enter
add
jp
stos
outsb
fwait
aas
and
dec
xchg
inc
pop
out
or
testb
inc
push
nop
icebp
rcrb
pop
mov
xor
enter
cmpsl
lods
add
jnp
dec
jo
pop
inc
jno
adc
xchg
add
shld
mov
or
push
or
fs
sti
xchg
add
or
fstpt
push
or
cld
mov
hlt
inc
call
push
pop
clc
outsb
mov
scas
sub
mov
xlat
pop
xor
cld
sbb
arpl
fdivrs
and
pop
outsl
lods
push
dec
push
mov
ret
xchg
mov
xor
mov
sbb
shll
inc
xor
sub
lods
inc
mov
cwtl
popf
sub
and
fs
inc
xor
and
dec
inc
add
inc
repz
loop
out
or
hlt
jno
inc
sbb
sarb
and
push
push
rcrl
inc
inc
xchg
je
mov
mov
iret
lea
cmp
jns
test
incb
xchg
sub
push
sub
test
xor
cmpsl
sahf
cs
popa
in
mov
push
inc
aad
std
mov
out
in
xchg
adc
mov
push
fs
jecxz
inc
idivb
aas
std
mov
fcomi
lods
xchg
xor
xchg
push
adc
aas
pop
or
cld
and
popf
enter
aaa
outsl
xchg
aaa
pop
fs
out
jb
data16
push
lds
out
jge
mov
xchg
pop
xchg
cmpsl
or
cmpsl
lods
push
pop
fdivl
xchg
adc
pop
call
xlat
and
int
flds
fwait
int
stos
xor
lcall
mov
and
imul
or
cmp
lcall
cli
ljmp
and
aam
cli
adcl
cmpb
sbb
push
std
jb
or
es
fisubrs
pop
bound
jb
pusha
xor
cmp
nop
out
cmp
mov
adc
fwait
jae
jb
inc
xor
inc
jmp
fcoms
jle
xchg
mov
jo
cmpsb
gs
scas
sub
daa
fidivrl
sub
pop
ret
and
in
dec
mov
jno
mov
insb
and
hlt
pop
test
sub
dec
jg
cs
jbe
dec
pop
xlat
aas
dec
jg
cmc
and
jnp
idiv
push
test
mulb
cmp
sarl
inc
adc
rolb
outsb
mov
ret
or
mov
push
addr16
insb
mov
mov
dec
mul
jbe
cs
and
pop
sbb
ljmp
fidivrl
negl
inc
dec
mov
sub
aad
mov
outsl
inc
enter
cld
pop
leave
pop
mov
test
out
popf
std
pop
sbb
inc
xor
push
pushw
and
mov
out
aam
jns
jns
mov
cli
dec
adc
orl
mov
mov
sub
test
and
jbe
enter
gs
leave
push
rorl
sahf
sbb
fcmovnu
inc
xlat
cmp
mov
xchg
jns
sub
icebp
jmp
xchg
shl
movb
mov
mov
dec
rclb
aad
cs
insl
and
cs
cs
fstps
ret
nop
mov
mov
inc
pop
mov
rcl
lods
cld
dec
lds
cld
jle
mov
cmp
or
cmpsb
test
and
scas
xchg
stos
mov
or
test
test
mov
mov
shl
daa
call
ret
stos
push
pop
push
push
mov
cmp
clc
nopl
push
xor
enter
das
subl
sarb
les
push
and
stc
adc
repnz
mov
jo
sbb
dec
out
mov
push
jge
gs
pop
add
mov
cmp
jmp
push
adc
xchg
xchg
mov
leave
pushf
std
cmp
cld
lock
pop
lret
jecxz
jle
lret
aas
cltd
xor
push
inc
stc
sub
dec
fstps
xchg
cs
es
and
and
jmp
aas
mov
mov
push
inc
clc
jle
out
jg
inc
dec
push
int
push
int
sub
cltd
dec
mov
daa
rol
push
xor
fs
and
rcrl
pop
xchg
adc
inc
add
dec
pushf
mov
sub
in
sub
ret
sbb
cmp
icebp
daa
lahf
jecxz
popf
adc
fdivrp
popa
jmp
divb
js
xchg
adc
inc
fimull
mov
pop
negb
scas
cmp
mov
in
lahf
add
ret
and
pop
in
push
pop
mov
xor
in
fdivrs
daa
test
mov
push
sbb
add
cmc
xchg
loopne
jg
mov
pop
in
pop
pusha
inc
or
cmp
mov
sbb
mov
jbe
int3
add
adc
ss
call
enter
nop
inc
stos
data16
mov
mov
mov
mov
inc
mov
jb
es
pop
jmp
sahf
jp
inc
ret
pop
and
out
loope
cs
lret
xor
mov
es
jp
inc
jmp
outsb
loope
dec
ss
sub
adc
xor
lret
mov
mov
pushf
out
jl
jl
outsl
test
ljmp
test
push
mov
in
or
mov
sbb
dec
sbb
in
cmp
repnz
outsl
jbe
inc
sahf
sbb
inc
mov
fwait
mov
aaa
pusha
loopne
push
arpl
push
and
xor
movsb
fcmovnu
jg
fsub
popa
mov
inc
and
inc
jmp
xor
out
ljmp
bound
push
mov
hlt
fisubrl
insl
pop
xor
sbb
jl
lcall
xor
pop
xor
pop
jno
enter
adc
mov
cmp
cmc
adc
inc
enter
in
clc
dec
dec
jae
sub
test
inc
fcmovbe
mov
rcrb
lret
or
test
scas
insb
aam
xchg
arpl
fwait
ss
and
dec
mov
scas
adc
jg
pop
cmp
jl
sub
lahf
jns
dec
jl
cmp
ss
fmuls
mov
mov
pop
mov
jno
pusha
out
mov
sbb
repz
jge
cwtl
flds
mov
add
mov
push
add
jl
in
push
cmp
and
stos
push
add
insl
mov
pop
inc
idivl
dec
xor
dec
mov
xchg
and
fimuls
shrl
in
cli
lahf
inc
cmpsb
pop
mov
sub
and
ret
int3
jo
int
arpl
roll
pop
mov
and
imulb
ss
repz
jg
roll
or
out
cltd
xor
outsl
cmc
mov
add
sbb
xchg
aam
test
addb
mov
jbe
pop
pop
sbb
inc
ja
lahf
jmp
ret
jnp
mov
jbe
sub
dec
cmpsl
push
sbb
fwait
daa
jnp
sbb
dec
xchg
mov
out
out
lahf
clc
sbb
sbb
jo
push
call
mov
cmpsl
xor
pop
repz
popf
xchg
inc
mov
jnp
pushf
sahf
ret
mov
pop
jg
mov
dec
fst
mov
fcompl
inc
dec
aam
jns
loope
mov
mov
fmul
pop
mov
insl
repz
insl
lahf
cmp
jmp
enter
cs
add
in
cs
lcall
jmp
shrl
test
mov
jno
dec
cmp
cmp
loop
push
push
shll
movsl
repnz
sti
dec
xor
mov
pop
testb
cltd
dec
sbb
inc
scas
cmp
hlt
xchg
sub
cmpsb
out
popf
fldcw
xchg
scas
pushf
cmp
add
jbe
sbb
jb
xchg
adc
push
lods
lods
adc
aad
mov
repz
push
ds
into
lret
pop
add
cli
or
jae
imul
loope
lock
lret
jae
push
loop
jae
jmp
out
stos
push
out
int
mov
and
xlat
and
xchg
ficoms
inc
cmp
fld
mov
inc
shr
mov
pop
imul
fucomip
sbbb
sbb
dec
mov
push
shrb
jnp
cmpsl
insl
cld
mov
add
cmpb
mov
pop
push
jmp
or
loope
dec
mov
push
data16
dec
pop
mov
dec
mov
push
movsb
sbb
icebp
pop
fst
push
rclb
test
cld
xchg
test
xchg
inc
mov
push
fidivl
push
pop
leave
insb
pop
mov
loopne
mov
push
mov
sbb
hlt
rcll
xor
orl
mov
aam
std
leave
sub
fimuls
mov
dec
sbb
in
mov
push
inc
test
inc
push
jecxz
daa
dec
push
mov
xor
inc
jle
cmc
paddusw
int
pop
mov
jo
xchg
xchg
jns
xchg
divl
mov
or
xchg
or
cmpsb
jg
fwait
cmp
pop
fcoml
sbbl
push
nop
xor
and
ret
push
jp
inc
lea
js
sahf
adc
sbb
cmp
test
xchg
aaa
adcb
mov
movsb
test
ljmp
nop
mov
adc
in
dec
jb
xchg
push
dec
sub
and
rcr
ja
ja
or
cmp
and
js
das
adc
xor
pop
adc
stos
or
imul
xchg
pop
and
ret
adc
subl
jmp
inc
jge
cli
xchg
fildl
aad
test
cmp
arpl
and
push
dec
loop
aam
in
repz
adc
inc
jmp
lods
ljmp
xchg
push
scas
scas
pop
repz
pop
jnp
cmp
pop
xor
sti
movsl
xchg
jg
push
sub
fstpt
ds
sbb
dec
bound
xchg
js
popf
addl
hlt
cmp
sub
mov
fisubrl
fisubs
imul
and
movsb
xlat
jg
cli
sbb
outsl
loop
test
js
loope
push
xchg
ret
lods
cmpsb
and
push
in
int
mov
dec
adc
lret
jae
adc
add
scas
inc
mov
es
sub
lods
mov
iret
cmpb
mov
test
shll
push
mov
aam
pop
or
negb
nop
mov
cmpsb
xor
and
adc
in
inc
dec
popa
jp
push
mov
jns
mov
xor
add
pop
enter
adc
bound
jle
pushf
fsubl
les
cmc
lret
jnp
jnp
hlt
ret
movsb
dec
mov
jmp
add
mov
test
push
xchg
loope
insl
ss
andl
xor
iret
pcmpgtd
and
pop
test
repz
xor
cmp
iret
mov
loopne
jecxz
sub
push
sti
cmp
sti
mov
imul
outsl
cwtl
fdivr
test
inc
sarl
pop
add
repnz
cltd
push
add
nop
pop
cmpsl
jae
mov
mov
aas
mov
and
mov
enter
adc
sbb
outsb
xor
cmpsl
jge
in
hlt
dec
push
xchg
mov
cmpsb
xchg
movsb
xor
mov
dec
and
xchg
in
cmpsl
push
jl
cmc
ljmp
outsl
sbb
ds
scas
xchg
shlb
lcall
adc
mov
jge
push
iret
mov
push
scas
in
test
loope
adc
jg
and
repnz
mov
cmp
shlb
out
xchg
jmp
sub
adc
ret
dec
loopne
push
inc
jmp
cmpsl
aaa
test
ret
add
imul
dec
xchg
mov
xchg
sarb
xchg
ja
fwait
mov
add
sbb
and
jp
and
dec
cmpsb
dec
stos
es
add
inc
jp
jae
and
push
lds
test
inc
sub
mov
pop
shlb
aam
dec
sub
std
gs
cmp
dec
dec
movsl
dec
sub
sub
lock
push
shrb
or
jae
cs
lahf
outsl
cmpsb
jmp
movsb
xor
imul
loop
adc
enter
sub
pushf
enter
pop
jl
orl
xor
addb
cmpsl
aas
adc
ret
data16
rcl
sarb
ret
mov
inc
jbe
insb
shll
and
sarb
hlt
sbb
pop
add
in
dec
aad
xor
mov
xor
pop
xchg
filds
pop
push
adcb
ret
popf
repz
inc
jno
mov
ds
mov
jmp
and
call
std
dec
in
and
xor
lea
push
shlb
xor
xchg
cmp
inc
cmp
imul
rcrl
shrb
mov
lahf
add
jae
mov
cmp
xchg
mov
xchg
lock
test
inc
sbb
int
push
dec
cld
pusha
jno
or
push
in
idivl
sub
pop
xorl
loope
repnz
test
mov
push
add
xchg
add
cmp
add
lods
mov
int
jns
insl
shlb
dec
or
dec
jg
jb
lods
icebp
in
mov
pop
mov
mov
mov
test
pop
push
std
inc
mov
add
cmpsb
inc
in
lcall
test
lret
fcoms
imul
jno
jl
mov
in
dec
push
lods
mov
jo
xchg
fchs
sub
clc
add
xchg
mov
push
sub
inc
dec
mov
ds
xor
call
bound
jbe
dec
cltd
fnstcw
and
fiaddl
subl
rolb
loop
rcr
mov
sbb
outsl
inc
push
cmp
in
test
cmp
idivl
or
fdivl
sbb
mov
mov
mov
lods
push
ss
in
xchg
arpl
movsb
aam
xor
jo
test
js
sbb
sub
push
push
mov
pop
test
jns
movsl
sub
mov
fmulp
xchg
mov
mov
ficoms
push
push
mov
cmp
lock
sti
cmp
mov
lds
clc
xchg
inc
clc
pop
pop
pop
mov
fsubrp
cmp
ficompl
dec
xchg
add
gs
dec
xchg
jns
fbstp
or
ret
dec
jno
mov
jg
mov
mov
adc
jge
gs
daa
ret
dec
sub
mov
cmc
jne
mov
enter
aad
aaa
mov
sbb
mov
fimull
fmull
mov
push
in
aas
adc
out
mov
xchg
test
out
roll
push
jne
je
inc
sub
gs
imulb
test
addr16
cmp
out
cltd
mov
imul
fisubrl
xor
and
aam
aas
jmp
mov
cmpsl
dec
cmp
and
and
mov
lods
mov
rclb
pop
pop
lret
xor
mov
cmpsl
lods
scas
ljmp
ret
in
mov
das
jle
push
mov
ret
push
mov
and
mov
or
push
push
fidivrl
mov
mov
jg
dec
xor
js
insl
mov
add
xor
mov
dec
enter
mov
jp
lock
fsts
fimuls
addr16
pusha
pop
ret
mov
inc
sub
lret
out
mov
repnz
mov
mov
dec
sti
add
push
pop
mov
pushl
mov
addr16
cmp
pop
and
pop
xor
ljmp
imul
iret
mov
sub
sbb
or
out
rorb
leave
sub
imul
sbb
push
xor
or
movsb
idivl
jno
sbb
mov
dec
mov
lods
xchg
or
dec
leave
adc
xor
xchg
push
cmp
mov
mov
shlb
je
movsl
sub
pop
stos
jne
mov
aaa
js
cmp
es
imul
and
shl
ljmp
dec
lock
in
ss
add
scas
jbe
push
notb
shrl
and
clc
mov
push
inc
cmp
ds
dec
insl
dec
and
pop
adc
fs
inc
and
call
out
xor
adc
outsb
lea
addb
add
je
mov
pop
cmp
lcall
inc
repz
addl
push
sahf
xchg
mov
fstpt
push
dec
pop
ficompl
and
jnp
fmull
data16
adc
sahf
jae
ret
lods
sti
fldlg2
xchg
pop
push
dec
xor
jmp
fldl
push
jno
imulb
cmpsl
mov
mov
sub
or
stos
pop
mov
fisttps
push
stos
jae
push
jb
mov
std
loope
jb
fiaddl
cli
lcall
cmp
popa
sbb
or
shll
cmp
xor
cs
push
aas
nop
jno
fs
jmp
inc
stos
cmp
xor
xor
push
test
fxch
out
push
inc
push
jg
push
addr16
cli
mov
imul
xor
or
addr16
adc
mov
inc
mov
xor
lahf
add
inc
mov
mov
xchg
stos
inc
arpl
xor
pop
out
lods
test
test
jb
mov
push
dec
jns
cwtl
lcall
xor
mov
dec
mov
jg
push
push
vmovapd
xorl
mov
sub
ja
cmpsb
sbb
sbb
add
sbb
stc
cmpsl
cmpsb
sub
int3
sub
mov
mov
or
pop
xor
ja
jp
push
jl
xlat
xor
push
push
in
add
fcoml
mov
xchg
fcoms
lea
mov
lret
popa
inc
jmp
cmp
stos
aam
outsb
cli
jnp
subb
and
fnsave
cmp
sub
repnz
cmp
out
nop
xchg
and
shl
popa
mov
add
scas
mov
sub
aam
push
pushf
in
sub
jecxz
jg
add
je
mul
nop
int3
rcll
subb
arpl
pop
mov
subl
mov
or
jl
mov
pushl
lods
mov
xchg
xor
pushf
jmp
xor
mov
sbb
fsubl
mov
xor
push
cmp
mov
ja
or
pusha
xchg
add
test
push
jmp
mov
outsb
and
pop
xchg
ja
cmp
shll
pusha
inc
or
daa
out
lock
adc
mov
xchg
mov
push
pop
rcr
repnz
pop
dec
push
dec
adc
out
lods
fsts
call
or
sbb
mov
dec
mov
in
and
mov
pop
add
xchg
cli
insl
dec
xor
cmp
loope
mov
sti
aaa
push
mov
xchg
out
inc
cmp
jne
cwtl
mov
out
or
call
mov
or
lret
xchg
addl
insl
inc
cmp
pop
loopne
sbb
or
fcom
xchg
lcall
jecxz
cmc
rolb
clc
mov
push
pop
scas
jmp
pop
movsb
push
mov
arpl
push
test
or
and
push
sbb
dec
adc
sbb
aam
add
lret
loopne
fsubl
mov
push
and
push
xlat
push
cmpsb
repnz
ds
and
sub
dec
cmp
pushf
xorb
loope
lcall
lock
mov
nop
pop
je
cmp
imulb
aaa
arpl
inc
xchg
mov
xchg
pop
adc
ja
into
and
jnp
aas
and
arpl
sub
sub
les
in
cmp
sbb
mov
dec
sbb
and
adc
jb
sbb
mov
mov
fidivrs
imul
ud2
push
jl
and
aad
scas
push
push
out
and
pop
push
cwtl
xchg
xchg
sbb
mov
insl
xchg
cltd
push
mov
sbb
call
or
lock
inc
std
test
fdivrp
nop
dec
sub
jnp
js
outsb
xor
rorb
sbb
lock
shll
ss
cmp
sub
inc
xchg
push
xorl
les
mov
pop
adc
or
ljmp
fcompl
xchg
push
pusha
pop
mov
arpl
sub
push
aam
mov
fisubrs
cs
dec
leave
dec
xchg
add
lods
popa
cmp
xlat
movsl
iret
fdiv
mov
push
mov
lea
cwtl
pushf
xchg
adc
in
pop
sbb
jne
dec
xchg
popf
sti
lret
xor
cmpsb
or
mov
cmp
std
sub
and
mov
test
jge
pop
leave
lods
and
xchg
jle
xchg
aad
int3
imul
or
sbb
mov
pop
mov
add
sahf
subl
sub
mov
sbb
daa
dec
pop
push
sbb
and
std
pushf
mov
in
dec
mov
iret
xchg
cmp
inc
push
jge
jmp
in
es
adc
mov
aad
lret
aam
imul
sbb
cs
add
rcrb
xor
sbb
test
out
jp
adc
xor
add
adc
loopne
in
cld
xchg
call
mov
sbb
and
and
push
insl
or
xchg
sub
push
test
inc
push
jg
rorl
mov
jb
push
mov
int3
stc
aas
shl
xchg
setnp
xor
xchg
xor
ret
or
mov
cltd
adc
addw
jge
into
or
xchg
dec
xor
pop
and
ss
mov
mov
add
ljmp
fbstp
pop
cmp
sbb
xchg
and
pop
pop
inc
sub
xor
jmp
int3
add
inc
inc
jns
xchg
ret
mov
cmpsl
std
and
cmp
inc
jnp
leave
nop
jbe
ljmp
mov
stos
jg
xchg
bound
cld
mov
jmp
je
mov
loop
mov
push
mov
int
sub
sbb
mov
mov
mov
and
into
scas
les
mov
inc
jbe
sub
sub
push
rorb
mov
in
mov
shrl
int3
ret
jmp
in
pushf
shr
scas
or
call
jmp
mov
xlat
sbb
adc
add
push
fs
sarb
jmp
cmc
jmp
lret
jge
loopne
mov
push
or
add
insb
pusha
aas
push
repz
adc
jge
sbb
add
fidivrs
cmp
pop
push
dec
mov
ftst
jo
sbb
sti
add
add
sti
ja
in
scas
and
fdivl
mov
mov
xor
xlat
mov
push
mov
sbb
hlt
mov
pop
mov
xlat
ljmp
mov
mov
mov
push
mov
mov
jge
imul
xlat
ret
pop
mov
std
xchg
dec
mov
sbb
mov
mov
movsl
insb
scas
mov
out
bound
insl
sbb
test
pop
xor
and
cmp
and
mov
call
and
push
and
ljmp
xor
js
add
dec
das
insl
mov
daa
out
sarb
jl
cmp
sbb
add
pop
outsb
call
call
js
and
stos
out
pop
or
ljmp
mov
pop
idivl
cmp
daa
imul
arpl
jle
pop
daa
push
or
pop
test
mov
lds
stos
dec
out
adc
mov
subb
sahf
test
ret
lret
mov
xor
adc
mov
sub
jno
dec
and
sub
inc
cmp
cmpsl
in
inc
daa
sbb
div
negl
mov
out
sub
lret
int3
dec
push
test
aas
out
mov
jno
push
add
jne
shlb
sub
scas
stos
xchg
pusha
jmp
cld
sarb
cmp
dec
gs
rcrl
and
dec
cmpsb
shl
xchg
imul
pop
cmp
jmp
mov
cli
ljmp
repnz
lock
incl
or
jae
les
addl
mov
lods
fisubl
inc
out
jb
xchg
mov
push
mov
loop
cmc
jb
pop
enter
push
cmp
jmp
pop
rcrl
adc
fbstp
loopne
xor
fistps
add
fidivrs
add
jp
or
mov
mov
fstl
movsb
outsl
mov
loop
in
xchg
dec
mov
mov
cmpsl
vcvtpd2dqy
mov
push
scas
clc
xchg
sub
dec
pop
clc
push
jl
ds
ret
jne
les
or
jp
js
jbe
lcall
adc
lea
jg
loopne
jae
aas
mov
inc
mov
sarl
daa
pop
mov
ja
stos
add
xchg
lret
mov
rclb
ret
jecxz
stos
inc
inc
dec
adc
loop
sbb
mov
int
repz
sub
mov
adc
mov
rcrb
push
add
sub
xor
and
mov
xchg
int3
lds
mov
mov
shl
mov
push
lds
sbb
repz
call
arpl
ds
nop
js
xor
pusha
sub
sti
sbb
xor
out
or
jae
pop
dec
lahf
rorb
sub
and
cs
mov
mov
ljmp
jno
mov
in
xor
pop
in
cmp
sub
mov
mov
mov
adc
push
push
ljmp
pop
jno
cld
inc
xorb
cmc
and
in
pop
mov
es
cmp
and
mov
arpl
fdiv
ljmp
adc
ret
jb
mov
fdivrl
sub
push
test
xchg
test
cmc
es
cmp
cwtl
addr16
dec
rcll
nop
lret
inc
stos
or
fs
xor
cmpsl
inc
jg
adc
pop
lock
jo
decb
adc
xor
push
popa
call
scas
mov
inc
mov
ror
mov
mov
mov
faddl
push
mov
mov
xorb
and
cmpsb
adc
in
mov
push
dec
mov
testl
xlat
pop
aas
stos
or
pop
pop
mov
dec
imul
xchg
xchg
xor
pop
pushf
sub
scas
cmpsl
jae
in
push
mov
jno
stc
cmp
into
fbstp
sti
jp
jmp
jge
ret
int
ljmp
stos
mov
stc
and
dec
and
sahf
shrb
out
pop
bound
push
testb
xchg
in
adc
cmpsb
ds
add
adc
or
js
lods
sahf
jae
pop
out
and
mov
pop
or
xchg
sahf
ss
inc
js
ljmp
pop
out
xlat
xor
dec
rcrb
sbb
dec
bound
aam
inc
xchg
in
dec
dec
dec
rclb
int
leave
xor
mov
arpl
stos
in
sti
and
sbb
hlt
adc
mov
loopne
mov
cmc
mov
les
add
and
lock
cwtl
movsl
push
pop
sub
dec
push
lods
out
pop
sbb
loop
test
sti
push
out
test
xchg
adc
insb
ret
pop
adc
fists
push
cltd
lahf
mov
adc
inc
fdiv
mov
icebp
mov
leave
mov
sbb
bound
sti
push
jmp
inc
mov
pop
sahf
mov
shl
mov
fsubp
fstpl
lods
mov
icebp
pop
sbb
test
dec
jl
jns
bound
adc
push
pop
out
into
push
cmp
cmp
mov
add
xlat
popa
pop
ss
fwait
pop
popf
push
xor
mov
lds
shll
test
inc
push
icebp
jae
mov
fsubrp
pop
fnstcw
adc
pop
mov
jg
cmc
push
cwtl
inc
imul
daa
arpl
sahf
in
jmp
jecxz
jmp
mov
jecxz
decb
cmp
cld
inc
adc
dec
xchg
pop
mov
mov
add
int
jge
inc
cmpsb
clc
sbb
aas
pop
into
xchg
push
insl
ljmp
lret
push
cmp
mov
and
insl
das
pop
repnz
jo
xor
dec
stos
push
mov
cs
pop
loop
addr16
mov
mov
adcl
push
push
clc
adc
inc
inc
add
sub
ret
sbb
outsb
xor
pushf
fstpl
cwtl
imul
xor
cmp
dec
mov
stos
lods
jg
mov
stos
cmp
jp
add
call
push
dec
jg
sub
pop
pop
jae
mov
movsl
pusha
add
adc
dec
dec
nop
outsb
loope
push
imul
leave
data16
call
int
std
sbb
enter
xchg
sbb
es
arpl
fsubp
movsb
gs
out
inc
or
mov
das
mov
movsl
pop
jns
in
cld
or
aas
imul
push
and
shr
mov
addr16
in
lods
outsb
inc
xor
jecxz
bound
jo
inc
mov
movsl
mov
push
add
xor
or
xor
pop
sub
lea
adc
lods
pop
jns
push
sbb
jmp
inc
aad
cs
dec
xchg
inc
aas
popf
push
add
cli
xchg
add
add
inc
cmp
and
xchg
repz
xor
jg
xor
out
insb
add
jo
lods
jmp
mov
int3
loop
xor
stos
fisttpll
in
jnp
pop
pop
cmp
sub
addps
cmpsl
mov
adc
fstpt
mov
lahf
sbb
subb
sub
mov
div
mov
cmp
fdivl
fwait
jmp
push
jecxz
lret
sarl
push
cmp
inc
mov
jae
mov
pop
xchg
ljmp
xor
jbe
mov
mov
adc
clc
mov
dec
jmp
ja
div
stos
sub
imul
mov
inc
xchg
sti
and
jecxz
pop
dec
sti
inc
adcb
mov
sahf
shlb
arpl
add
dec
imul
addr16
push
sbbl
iret
orl
out
mov
pusha
and
sbb
roll
dec
mov
lcall
movl
xor
sbb
test
adc
outsb
add
scas
cmc
test
mov
shrl
jg
imul
sub
hlt
xlat
xchg
or
and
jmp
data16
jle
and
ret
dec
std
jle
out
test
cmp
or
and
leave
dec
add
sarl
or
push
jp
pop
dec
mov
rcll
fsubs
sahf
dec
mov
pop
stos
orb
sub
jns
jmp
incb
jmp
pop
jl
inc
xor
ss
push
and
inc
jb
sub
sbb
push
test
pop
pop
add
test
fdivs
and
lods
jb
pop
loope
dec
mov
mov
fidivs
xchg
pop
popa
out
mov
mov
andl
cmpsb
mov
cld
insl
das
arpl
scas
jo
loope
push
mov
fbld
stos
in
popa
or
mov
cmp
pusha
jg
repz
insb
adc
sbb
mov
mov
push
cmpsl
int
cmp
cwtl
icebp
mov
xor
in
gs
or
call
outsb
xchg
xor
loopne
jl,pn
xchg
adc
loope
aam
gs
mov
xor
adc
mov
xchg
mov
lods
insb
les
mov
out
icebp
ss
lea
das
or
aas
pop
cmp
adc
adc
xchg
bound
mov
dec
pop
adc
mov
xor
scas
sbb
out
or
int3
dec
imul
add
xor
push
sub
and
sbb
shlb
in
xchg
xor
movsb
adc
or
jge
enter
sbb
je
in
pop
dec
or
mov
aas
int
cltd
scas
dec
jno
out
pop
adc
pop
mov
or
xchg
sub
aad
test
adc
into
inc
shll
in
jbe
aas
or
ds
dec
jmp
xor
inc
inc
jno
test
sub
hlt
test
dec
outsb
push
xchg
ss
sbb
imul
repz
stos
add
outsb
mov
fiadds
aam
test
or
lods
xor
repz
popa
stos
cmc
and
jecxz
in
aas
mov
adc
mov
inc
lods
add
je
dec
stc
rolb
insb
adc
xchg
aaa
das
arpl
sahf
aaa
jae
inc
add
sti
add
bnd
xchg
adc
mov
movsl
test
lea
push
pop
and
dec
adc
push
pop
popf
xor
xchg
sbb
mov
cmp
aas
mov
inc
pop
int3
stos
adc
vmptrst
mov
inc
add
icebp
mov
sbb
xchg
push
push
pop
xchg
xor
scas
fs
dec
dec
das
enter
shrl
inc
fidivrs
aam
jecxz
subb
pop
lods
pop
lea
push
cmp
ljmp
in
xchg
gs
sub
push
xchg
mov
adc
or
test
lds
cmpl
jae
es
mov
mov
loop
jno
cmpsb
fistps
aaa
dec
xchg
inc
mov
adc
out
xlat
rolb
mov
mov
pop
xor
push
push
mov
cmpsb
test
xor
and
sbb
mov
jle
lahf
shrb
mov
not
jbe
push
jmp
fcomps
mov
inc
jns
xor
adc
and
xchg
cmp
jne
call
adc
inc
mov
mov
in
paddb
in
mov
es
xor
mov
mov
xchg
sarb
sbb
std
iret
scas
and
mov
lahf
and
add
popf
mov
movsl
lods
jle
lods
adc
xor
out
leave
out
jl
ds
outsb
inc
sar
mov
das
jbe
subb
js
pushw
sub
sbb
lds
aaa
mov
adc
adc
call
cmp
rcll
sbbl
aad
mov
outsb
mov
daa
dec
inc
sbb
repz
cltd
xor
inc
add
sub
loopne
inc
lret
pop
hlt
inc
adc
xchg
xor
lea
int3
pushf
and
leave
mov
popa
mov
lock
incl
jnp
sarb
data16
clc
xchg
lock
jge
ret
pop
xor
mov
xlat
loope
pop
xorb
xchg
ret
shl
sbb
cltd
inc
and
mov
in
fisttpll
dec
push
test
lcall
movsl
sub
mov
imul
jl
fcoml
and
cmc
in
popf
fstp
in
mov
sarl
in
pop
leave
pusha
arpl
push
jmp
mov
loopne
mov
adc
int3
sbb
pop
pop
pushf
mov
jo
sub
sbbl
ja
es
mov
std
out
iret
sbb
loope
pop
in
addb
pop
and
sbbl
cld
xbegin
in
adc
mov
cs
pusha
push
popf
cmp
std
mov
push
out
pop
jbe
inc
aaa
bound
dec
jle
lds
fimull
jnp
lods
popf
cmp
cltd
or
push
cmp
sub
out
or
in
popf
dec
lea
jo
xchg
and
or
int
xchg
cmpsl
and
dec
pop
cmp
dec
lds
stos
sub
sbb
jge
push
test
das
push
sub
add
in
inc
stc
pushf
sahf
dec
cmp
cmpsl
adc
lret
cs
das
je
pop
sbb
scas
stos
sar
cld
jns
cmp
jnp
in
lods
push
cltd
inc
shlb
inc
popf
int
incb
jecxz
pop
mov
ljmp
subb
lods
xchg
pop
mov
xchg
jo
mov
pushf
jbe
sbb
std
lds
and
jp
mov
pusha
pop
repnz
out
mov
arpl
mov
int
lea
pop
jg
pop
insb
mov
shrl
push
call
dec
iret
jnp
jne
icebp
pop
hlt
mov
cmp
adc
adc
mov
or
pop
cmp
mov
push
sarl
cmpsl
pop
pop
imul
repz
fistpl
inc
mov
dec
mov
lahf
mov
mov
add
xor
fsubrs
gs
adc
in
xchg
adc
push
xchg
dec
add
inc
cmp
inc
or
out
dec
dec
fdivs
adcl
jo
ret
stos
add
lcall
aas
inc
inc
stos
add
fiadds
push
pushl
xchg
sub
loope
out
addb
fnstsw
mov
jae
adc
mov
cwtl
cmp
imul
ljmp
add
pop
and
fs
js
sti
mov
stos
jo
notl
mov
mov
insl
adc
mov
leave
dec
jnp
sahf
and
in
push
fidivs
push
add
add
aam
lock
cld
call
fwait
and
je
adc
or
sbb
jns
fsubp
pop
push
mov
inc
test
das
mov
ljmp
test
cmpsb
imul
push
ja
jnp
fiaddl
adc
fwait
xchg
std
out
cs
and
add
add
popf
cmp
pop
mov
add
and
loope
in
and
cmp
push
shlb
cltd
adc
cmp
loop
mov
ror
jp
push
test
xchg
sub
and
dec
add
int3
sub
sahf
mov
and
cltd
sub
es
rolb
pop
jnp
rcrl
jno
mov
xor
arpl
push
mov
mov
push
sbb
iret
cmpsb
mov
pop
call
adc
push
xlat
push
xor
add
pushf
mov
je
imul
shlb
sub
adc
or
imul
xchg
dec
add
or
push
jns
pop
jns
xor
adc
dec
test
sti
scas
sbb
mov
mov
iret
adc
popf
pusha
icebp
rcrb
sbb
scas
and
jns
or
rclb
jp
call
add
inc
xor
icebp
test
mov
add
xchg
int3
mov
push
adc
call
lret
mov
mov
insl
add
push
enter
lahf
or
imul
jle
cmp
mov
adc
enter
shlb
test
shlb
pop
sar
cwtl
int3
ljmp
mov
dec
fbld
sub
pop
sub
xchg
inc
and
mov
dec
dec
mov
mov
adc
dec
lcall
daa
rolb
imul
push
pop
aad
fstpt
cmp
lds
nop
lret
xchg
xchg
aam
add
int
add
sbb
pusha
dec
push
or
or
push
dec
mov
sub
out
xchg
imul
xchg
jo
mov
lahf
xchg
repnz
or
adc
or
jle
arpl
cmpl
xor
add
out
repnz
add
push
aam
decb
jbe
shr
dec
adc
orl
sub
data16
stc
push
mov
lret
loop
cmp
sub
imul
fidivs
sti
xchg
popf
jmp
push
adc
mov
mov
mov
testl
stc
push
outsb
imul
sub
cltd
or
mov
cmpb
mov
punpcklbw
subb
and
jo
sub
inc
cwtl
dec
rorb
stos
or
push
push
int
imul
mov
adc
push
adc
inc
bnd
hlt
jp
dec
adcl
adc
pusha
call
mov
add
jge
jmp
cmp
std
aas
inc
sub
sub
sbb
mull
shlb
cmp
gs
add
test
mov
xor
dec
add
xlat
adc
out
out
fucomi
shl
scas
jecxz
aad
mov
adc
xor
icebp
mov
addr16
aam
dec
mov
out
popa
jecxz
hlt
das
push
pop
test
insl
jl
jp
mov
jno
xchg
adc
or
fidivrs
mov
cs
loopne
repnz
jb
pop
inc
dec
pop
sub
shlb
dec
movsb
xor
in
popf
sub
xlat
aaa
jmp
and
pmaddwd
and
jp
and
das
xchg
jne
jns
sub
test
inc
daa
add
add
xchg
test
mov
cmp
and
and
xchg
inc
inc
jmp
adc
out
jmp
dec
flds
sub
push
shll
xchg
push
push
daa
sub
or
imul
dec
xor
jnp
fcompp
pop
sti
out
sub
sbb
mov
dec
mov
int
insb
adc
in
rcrl
mov
mov
pusha
push
les
mov
inc
lahf
or
xchg
push
gs
movsl
popa
cli
lds
jmp
mulb
pop
out
pop
aad
sub
xchg
push
outsl
mov
push
xor
aaa
pop
xchg
mov
dec
mov
sub
ds
sub
lcall
sbb
push
mov
gs
fucomip
incb
xchg
out
pop
sub
lret
cltd
test
scas
sar
aaa
mov
push
adc
iret
jmp
pop
add
loop
pop
pop
mov
iret
or
xorl
test
inc
mov
daa
fstpl
mov
xor
xchg
xor
fwait
popf
adc
push
outsb
jnp
sub
fmuls
and
mov
in
add
loope
push
daa
sahf
fsts
mov
cmp
xor
mov
push
mov
push
cmp
data16
or
and
pop
pop
or
lret
sub
mov
stc
jns
cmp
add
imul
mov
inc
xlat
movsb
test
test
mov
cmpsl
mov
repnz
mov
push
lcall
dec
adc
pop
sbb
iret
loop
mov
jle
popl
mov
icebp
inc
loop
movsl
mov
fwait
shrb
pop
idiv
xor
shlb
xlat
mov
lea
rorl
movsl
lock
mov
and
sbb
lods
inc
add
push
xor
pop
push
push
cmpsl
mov
cmp
cmp
popf
sub
pop
in
sbb
addr16
mov
mov
enter
shll
or
adc
idiv
imul
popa
inc
xchg
in
jae
mov
test
js
push
bound
cmc
mov
fbstp
inc
inc
and
ss
adc
jmp
fldenv
add
stos
popf
test
aaa
xor
or
addr16
jg
mov
mov
rorb
out
leave
xor
fldenv
add
idivb
push
es
ljmp
lds
ret
or
mov
adc
inc
mov
sbb
sbb
dec
pop
add
sbb
hlt
mov
pop
lea
xchg
xor
out
sbbl
call
aas
iret
inc
in
dec
mov
es
imul
sub
rorb
xor
cwtl
pop
cmp
scas
xor
cmp
js
call
add
jge
jb
mov
mov
add
cmp
adc
sub
push
mov
loopne
pusha
fwait
mov
in
stos
fnstcw
les
gs
ss
cmp
mov
loop
mov
jae
or
je
cmp
dec
fists
inc
inc
sub
sbb
pop
dec
mov
lret
lea
cmp
andb
repz
push
inc
mov
adc
jle
xchg
in
push
rcll
fbld
nop
jp
loope
xchg
sbb
sbb
lahf
xchg
mov
jnp
lods
fistl
stc
incl
sub
sahf
dec
es
mov
call
or
dec
mov
shlb
filds
mov
cmp
dec
lret
inc
jns
fldt
jmp
js
and
xchg
jmp
mov
test
in
pop
arpl
sub
stos
mov
hlt
dec
add
ret
aaa
cmp
fs
mov
cwtl
shrb
push
negl
sub
pop
popa
faddp
mov
stos
xor
loopne
fsts
test
imul
movsb
and
stc
or
add
pop
outsl
mov
pop
xchg
aas
clc
mov
jb
je
lods
or
mov
xchg
jecxz
enter
or
dec
jecxz
mov
mov
cmp
popa
lds
add
xor
loope
or
sbb
ja
std
mov
or
jno
mov
fldt
jle
cmp
or
lods
inc
mov
scas
add
add
cli
cmp
adc
scas
das
inc
lret
adc
inc
movsl
push
mov
mov
not
pop
jmp
ret
pop
out
adc
pop
mov
popf
cmp
lahf
xchg
add
sub
adc
test
mov
push
push
insl
mov
repz
in
cmp
jnp
and
in
test
movsl
in
push
and
push
inc
mov
or
nop
lea
push
mov
xor
pop
cli
mov
jg
repnz
aaa
jge,pt
mov
xchg
popa
jp
rcr
out
ljmp
je
fbld
xor
aad
push
bound
mov
mov
inc
insl
in
lahf
sbb
jmp
inc
cmp
rcrl
les
jnp
push
and
inc
in
out
sarb
sub
mov
lock
movsl
cmc
out
leave
fst
hlt
jmp
push
fsubs
dec
lea
push
mov
out
push
cmp
into
xor
sbb
pop
inc
je
mov
out
loop
aaa
sahf
data16
pop
pop
imul
aas
test
pusha
push
mov
sbb
and
pop
pop
or
bound
iret
push
hlt
cs
push
cmp
jno
inc
lods
jo
fiadds
pusha
call
fisttps
sub
shll
imul
add
call
dec
repz
mov
mov
xor
shlb
inc
ret
jge
or
push
adc
div
add
je
out
stos
sti
lahf
jo
call
mov
pop
xchg
pop
sahf
pop
ret
aas
icebp
stos
and
mov
xlat
test
filds
dec
adcb
cmp
bound
call
dec
shlb
add
je
dec
inc
fdiv
arpl
std
movsb
add
lret
cmp
sbb
cs
sbb
and
jge
mov
sar
es
mov
or
sbb
xlat
popa
mov
leave
pop
enter
add
mov
inc
filds
in
ficoms
icebp
dec
inc
push
sub
add
pop
mov
xchg
push
mov
xor
or
dec
sbb
clc
xor
insl
dec
arpl
and
lcall
js
cmpsl
mov
xchg
sub
push
lods
loope
lret
pop
inc
repz
mov
mov
add
and
pop
jp
mov
in
push
inc
jne
jne
ret
stc
repnz
adc
cmpsl
cmp
mov
jmp
or
adc
fdivs
and
cmp
adc
test
xorl
mov
push
mov
xor
xchg
pop
pop
xchg
fs
mov
pushf
loopne
mov
jle
psubsw
test
dec
les
mov
xor
insb
fwait
insl
nop
mov
mov
stc
jae
adc
jo,pt
fstp
outsb
test
in
outsb
out
lret
xlat
cmc
imul
push
push
adc
mov
and
mov
insb
neg
test
daa
ret
mov
push
push
mov
add
dec
roll
lods
pusha
fildl
adc
mov
sub
mov
jmp
cld
push
mov
lds
push
int3
outsl
enter
rcrl
ss
push
fnsetpm(287
dec
ret
mov
sbb
lahf
aaa
cmp
gs
xor
cwtl
cmpsl
inc
aam
je
jp
dec
xchg
fisubl
mov
insb
push
pop
cmpsl
push
outsb
cmc
popa
cs
jl
in
sub
mov
xchg
popa
rcll
sbb
ljmp
sub
fstps
cld
out
fists
pop
int3
and
imul
stos
js
int
inc
je
jg
aam
dec
fiadds
outsb
bound
jl
add
xchg
mov
ficompl
cmp
mov
or
mov
dec
mov
inc
loopne
adc
fimull
stos
lahf
pmaddwd
adc
pop
lods
mov
dec
insb
in
loopne
adc
dec
cmpsb
mov
inc
adcl
test
xchg
and
xchg
inc
jnp
movsl
lcall
scas
mov
sbb
add
ror
clc
cmp
dec
push
jge
dec
inc
and
mov
loope
rorb
pop
outsl
jb
pop
lods
mov
xchg
divl
pushf
inc
mov
shlb
mov
sbb
les
pop
mov
imul
push
fcom
fistpll
ja
pop
dec
clc
inc
stos
mov
daa
dec
or
sub
imul
or
mov
push
inc
and
jl
gs
js
fdiv
inc
leave
push
sub
sbb
pop
push
adc
outsb
into
pushf
cmp
mov
jle
mov
rorl
and
enter
mov
fstl
pop
arpl
inc
pusha
lea
mov
dec
hlt
pop
or
dec
lahf
push
xchg
inc
movsl
xchg
lahf
pop
inc
cmp
aas
pop
imul
push
xor
or
cmpsl
lods
jl
xchg
pop
rcrl
aam
fcmovne
test
ljmp
sbb
pop
sarb
dec
movsl
xor
aaa
sbb
cmp
out
add
sahf
or
or
stc
test
mov
lods
orb
in
dec
mov
dec
jg
xor
mov
pusha
mov
data16
adc
sub
shll
push
cmp
iret
sub
lods
mov
cmp
jmp
aam
fs
lock
mov
repz
xabort
loop
andb
int
mov
fbld
pop
ds
rorl
das
int
std
imul
push
loop
dec
out
pop
popa
push
fnstsw
cmp
adc
inc
aas
jp
sbb
subb
outsb
jmp
sbb
popa
jb
iret
cmpsl
dec
fwait
adc
push
sbb
sbb
cltd
push
flds
test
lds
cmp
sbb
or
sti
jbe
cltd
cs
mov
xlat
pop
cwtl
mov
icebp
dec
pushl
jle
pop
fld
sbb
mov
mov
popa
inc
aad
popf
jne
fcoms
sub
mov
popa
stos
out
ret
inc
and
lock
inc
inc
jb
xchg
pusha
imul
ficoml
cmp
xchg
inc
aaa
xchg
ficompl
cmp
into
dec
mov
pop
push
adc
and
xor
or
movsl
out
inc
or
xor
mov
out
enter
jno
and
repnz
xor
or
daa
stos
dec
sub
and
push
arpl
fwait
lods
cmp
ret
scas
arpl
lods
testb
pop
out
cmc
jge
push
enter
xor
aam
call
ljmp
dec
decl
xchg
inc
out
out
ds
test
lods
add
enter
push
addb
xor
adc
js
jns
jge
add
pop
cmpsl
imul
add
addr16
mov
sbb
jns
popa
ljmp
sbb
jp
in
mov
pop
mov
pop
lcall
lds
stos
push
inc
mov
and
repnz
aam
cwtl
orb
hlt
jle
lret
cmp
pop
fistps
mov
mov
cmpsb
cmp
jns
insb
data16
mov
loope
push
outsl
adc
pop
add
dec
xchg
pop
mov
xchg
sti
jns
arpl
cli
in
imul
inc
arpl
mov
pop
lods
inc
adc
xchg
mov
jecxz
cltd
fstps
es
mov
test
out
decl
rcrl
imul
dec
add
xchg
testb
hlt
pop
dec
popf
ss
jmp
cmpsl
xlat
push
aad
pop
enter
fucomp
jl
sbb
and
xchg
ljmp
and
add
add
aaa
jb
xchg
mov
adc
cmp
out
xchg
jecxz
icebp
xchg
dec
mov
cld
cmp
mov
pextrw
adc
ret
test
push
in
popa
nop
and
dec
jb
imul
sti
imul
imul
cmp
aad
imulb
mov
pop
stos
push
dec
adc
mov
push
lods
add
xor
repnz
mov
adc
dec
cmpsl
in
pop
and
adc
jo
dec
inc
lret
ret
cmpl
pop
inc
xchg
cli
shrb
ja
enter
mov
bound
sub
adc
push
inc
add
or
inc
sub
cmpsl
les
adc
gs
mov
in
push
cmp
add
adc
iret
arpl
push
sar
popf
mov
pusha
sti
pop
call
rcrb
dec
test
pop
ficompl
mov
inc
fwait
loop
shl
into
pop
or
or
sbb
in
js
mov
adc
push
lret
into
add
mull
jle
roll
mov
xor
test
in
cmp
mov
popf
mov
xchg
jns
cmp
sar
das
or
pop
pop
push
inc
jmp
and
fwait
pop
sub
cmpsb
stc
mov
stos
das
mov
push
add
or
sub
lods
add
cmp
ljmp
add
mov
decl
subl
in
add
or
fdivl
lret
jo
sahf
leave
pop
jo
sbb
data16
loop
test
fucomi
inc
dec
inc
xchg
sbb
jbe
or
mov
and
xor
dec
pop
movsb
bound
test
ja
xchg
xorb
cmp
cli
adc
xchg
mov
pop
push
das
mov
cmp
mul
or
js
ja
inc
shll
sub
lea
pop
sbb
fldt
das
add
inc
pop
xor
xchg
mov
mov
jne
push
fnstsw
inc
and
sub
push
call
add
leave
insb
aaa
dec
outsl
xchg
ljmp
xchg
lods
cmpsb
sahf
pop
lret
andl
mov
add
push
pop
outsw
inc
jle
xchg
cmc
hlt
and
aad
mov
es
cmp
out
out
cltd
cltd
sub
push
lds
mov
or
add
repnz
clc
shlb
push
jne
repz
sahf
dec
sub
cmp
fcompl
jne
push
mov
dec
pop
test
int
or
repnz
jno
loope
stos
inc
inc
dec
sbb
sub
and
mov
sub
imul
loopne
adc
mov
fdivs
imull
inc
push
out
lock
mov
ds
mov
call
pop
cmpb
pushf
push
or
adc
xchg
psubusw
fdivl
ds
in
or
ljmp
adc
movsb
cmp
jle
ret
loopne
sbb
and
jno
and
dec
jmp
daa
pushf
std
pusha
push
std
rcll
shlb
pop
add
jnp
iret
repz
add
push
enter
ret
mov
mov
insl
add
rolb
pop
outsb
cwtl
lret
nop
ja
aaa
icebp
popa
xchg
iret
and
mov
test
cltd
dec
int
cs
fs
pop
cmp
pusha
das
andl
fnstenv
in
pop
int
stc
cmpb
adc
adc
lods
cmp
jae
pop
sete
repnz
cltd
mov
repz
pop
fisubl
gs
or
mov
pop
dec
andl
inc
insl
cmp
nop
add
or
out
out
int3
stc
scas
add
ljmp
pop
int3
fwait
sahf
xor
add
lahf
repnz
loope
call
in
push
out
lods
cltd
notl
ja
out
add
sbbb
push
fwait
jo
filds
jge
xor
fdivl
shlb
mov
out
int
sahf
hlt
out
lahf
movsl
jp
bound
mov
or
aaa
imul
mov
pop
test
xor
xchg
cwtl
xchg
cld
xchg
test
pop
clc
or
nopl
fdivrs
sub
push
out
mov
sahf
xchg
rclb
jne
mov
rol
pop
push
jl
lahf
orb
in
pop
mov
xor
sub
cltd
shlb
push
jp
insl
inc
ss
ret
jnp
mov
dec
les
ds
jecxz
lret
insb
pop
in
mov
jb
test
jns
shll
outsl
je
mov
iret
cmp
rorl
sbb
loop
daa
cmpsl
popf
mov
dec
fldenv
mov
lret
loop
mov
or
jle
sub
dec
mov
cmp
out
pop
add
into
ja
mov
xor
mov
ss
pushf
out
cmpsb
mov
ss
xchg
loopne
gs
xor
push
outsb
and
out
mov
mov
fistl
xchg
iret
fidivl
or
data16
add
ror
dec
in
push
jg
les
pop
pop
dec
cwtl
sub
or
push
push
in
jns
aam
add
clc
aam
lret
push
adc
push
in
mov
out
cmp
dec
call
ss
xchg
stos
mov
dec
stc
sub
fs
mov
mov
leave
and
pop
mov
mov
ds
mov
and
mov
dec
xor
mull
xlat
sub
repz
jne
fs
incb
push
mov
ds
jae
and
mov
mov
leave
sub
jae
cmc
stos
push
push
inc
jge
cmp
cmpsl
or
and
or
out
push
stc
arpl
decl
shr
lret
loop
test
sbb
scas
stc
mov
pop
lock
ret
stos
mov
sbb
mov
jo
outsb
adc
pusha
or
iret
mov
add
mov
std
sub
pop
in
lea
movsb
jns
repnz
outsl
mov
test
sbb
out
jge
mov
mov
jmp
push
shlb
xchg
ja
sub
dec
loope
ljmp
xchg
xrstors
clc
rcrb
pop
fsub
ja
pop
jns
jge
add
mov
mov
inc
mov
mov
sub
cmpsl
rcrb
xor
push
and
jb
mov
icebp
mov
or
sarl
jnp
xchg
pop
aas
jne
cmpsb
insb
daa
xor
sub
mov
arpl
mov
sahf
int
mov
stos
mov
and
scas
xor
in
sub
test
addb
hlt
aas
bnd
sbb
stc
xor
and
mov
jecxz
or
adc
aaa
cmp
mov
jecxz
pop
inc
adc
push
fs
fiadds
cmp
rclb
add
idivb
out
stos
test
push
dec
xchg
jo
cmp
and
jne
out
mov
outsl
into
mov
call
je
adc
fsubr
aad
xor
std
data16
xor
cmc
int3
sub
cld
cmc
push
mov
pop
insl
jne
sbb
xor
sbb
add
dec
cwtl
insl
push
xor
callw
xor
testl
xchg
xchg
dec
add
jmp
mov
push
sar
push
cmp
ds
into
js
inc
jp
sbb
jno
fimull
cli
inc
pushf
mov
or
or
or
test
or
loope
fs
lods
sub
push
mov
shrl
rcr
fstl
jb,pt
dec
pop
jb
lods
stc
repnz
dec
leave
pop
and
mov
jno
mov
jle
fbstp
and
dec
lods
jnp
pop
mov
mov
movsb
outsb
inc
movb
inc
scas
in
sub
movsl
or
mov
xchg
jns
inc
cmpsb
loop
and
xor
repz
inc
loopne
pop
mov
shrl
mov
pop
nop
xchg
push
push
repnz
into
mov
lods
fwait
movsl
iret
sub
push
mov
xor
lods
ja
jmp
sbb
out
mov
sbb
sub
test
inc
rcr
lahf
xchg
insl
dec
jp
fsubrs
xor
sti
jne
and
or
push
mov
mov
imul
xorb
pop
daa
jno
ss
enter
cld
xor
sbb
xor
adc
icebp
mov
cmp
lods
xchg
cmpsb
mov
jp
enter
xchg
adc
aad
cs
cmpsb
mov
ja
ja
lods
outsb
mov
test
call
xor
mov
data16
in
and
jae
rolb
sub
adc
iret
and
push
cmp
fstl
stos
inc
mov
lock
into
dec
ds
enter
bound
sbb
cmc
addr16
mov
arpl
adc
fldcw
mov
pusha
mov
enter
dec
out
push
scas
in
and
xchg
imul
icebp
outsl
adc
mov
push
or
popf
es
out
jp
xchg
loope
je
pop
mov
push
xchg
out
pop
decl
xlat
jnp
imul
pop
lcall
fbstp
or
lret
mov
or
cmpb
imul
fbstp
test
add
mov
pusha
loopne
mov
out
incb
or
adcb
push
stos
pop
and
fidivs
inc
fcompl
sub
jg
cmp
es
and
das
bound
xchg
lea
fldl
mov
cmp
push
dec
iret
pop
mov
cmp
mov
or
mov
and
enter
push
call
jns
jnp
outsb
repnz
xor
sbb
lcall
cmp
pop
push
adc
test
inc
lock
loope
and
enter
sbb
test
jbe,pn
call
xor
or
sarb
pop
bound
lahf
sub
negb
mov
jg
faddl
add
add
pop
arpl
rcl
pop
loop
sahf
incl
movsb
add
mov
repnz
sub
dec
repz
loopne
ror
stos
dec
adc
lods
fwait
pop
cmp
fisubl
mov
addr16
fcompl
and
lret
int3
dec
mov
or
mov
mov
xor
faddp
lods
in
fnstenv
insl
das
pop
rcl
cld
pop
enter
ss
ret
enter
fisttpll
icebp
lret
mov
push
cmc
jge
xchg
test
jns
cwtl
sti
xchg
into
push
addr16
add
jno
jbe
imulb
mov
jmp
loopne
cld
jge
xor
jae
pop
and
stos
js
shl
in
lds
adc
fstps
fldenv
ret
movsb
pop
clc
enter
cmpsl
movsl
jno
leave
mov
push
cmp
jns
or
cmp
xchg
or
push
js
add
popa
or
inc
shrb
dec
aas
and
loopne
lea
or
jl
push
pop
push
sub
out
aaa
xchg
ja
fimull
mov
jae
int3
adc
movsb
cmpsb
testl
test
packssdw
test
sub
and
and
mov
add
cmp
leave
scas
or
mov
stc
testl
jnp
iret
xor
mov
test
xor
lods
and
mov
push
ds
jmp
mov
xor
pop
cmp
add
jo
jbe
sub
dec
push
mov
pop
test
out
mov
mov
sbb
jne
icebp
outsl
aam
sub
mov
ret
loop
imul
mov
ja
in
mov
mov
mov
lods
fldcw
idivb
mov
fxch
sub
lret
into
in
add
aam
nop
dec
xchg
arpl
xchg
div
loopne
xlat
and
outsb
pop
xor
inc
ljmp
out
out
enter
call
mov
cmpsl
and
and
sbb
in
sahf
lret
mov
faddl
aas
ret
dec
push
fisttps
test
mov
lea
call
sub
push
xor
cmpxchg
daa
push
movsl
dec
push
ljmp
ljmp
jae
xchg
push
mov
loop
clc
xchg
cmp
ss
and
int
jno,pn
insl
xchg
xchg
sahf
push
jo
ljmp
das
fwait
testb
jbe
add
aad
dec
or
pop
or
call
sbb
imul
bswap
stc
mov
sub
das
pop
xor
aam
mov
cmpsl
aad
sbb
scas
push
cmp
repz
add
aad
fcoml
sub
cs
adc
push
sub
dec
out
mov
lahf
cmp
fsubrl
or
mov
test
cmp
sub
inc
aad
mov
loop
sbb
fucomip
pop
push
push
int
and
outsl
lret
mov
das
lea
push
jle
lea
adc
adc
sbb
mov
outsb
mov
pop
cmp
inc
add
inc
lret
adc
adc
jl
imul
cmc
fbld
push
mov
int3
inc
call
lcall
test
dec
enter
aas
imul
mov
inc
pmaddwd
popl
gs
add
mov
in
or
xlat
stc
or
movsl
mov
sub
sub
jb
inc
jb
repnz
dec
jecxz
cmp
jne
repz
mov
ret
lock
or
cmp
pushf
lods
bound
cmp
mov
into
dec
hlt
stc
cld
rorb
loopne
jne
fs
scas
add
mov
nop
push
mov
lret
aam
ret
adc
fisubl
sub
xchg
lods
in
shlb
mov
inc
leave
test
sbb
hlt
mov
rsm
xor
add
daa
cmp
sbb
sub
and
fstps
movsb
and
xchg
xor
es
cmp
test
pushf
mov
mov
jbe
push
mov
adc
mov
lds
push
cmp
adc
xor
stos
outsl
scas
mov
sbb
les
xor
xor
lds
lret
ret
jno
mov
pusha
sbb
dec
mov
hlt
fisubl
sub
add
cli
or
xor
in
inc
arpl
testl
mov
dec
aam
mov
out
pop
jmp
pushf
sbb
pop
mov
xor
mov
outsb
or
out
xor
sarl
dec
pop
sub
leave
iret
xlat
rolb
mov
inc
mov
fidivrs
pop
sarb
clc
sbb
data16
fwait
or
scas
jb
insb
aaa
pop
mov
mov
test
cmp
and
push
push
clc
pop
jno
popf
inc
call
jl
mov
in
sahf
sbb
mov
frndint
cmp
mov
imul
outsb
xor
jmp
inc
insb
cmc
inc
outsb
add
call
sub
mov
outsl
and
mov
stos
shrl
cmp
enter
ficoml
jo
or
arpl
cmpsb
aas
or
push
int3
pop
mov
mov
js
mov
pop
imul
lea
dec
inc
ljmp
lcall
shr
mov
cmpb
arpl
xchg
or
pusha
mov
or
adc
xor
imul
cmpb
and
testl
xchg
dec
or
fsubs
pop
jl
inc
xor
pop
ret
addr16
pusha
jnp
call
pop
cs
sbb
lea
imul
xchg
clc
in
cmpsb
paddsw
addb
dec
jae
stos
pop
mov
add
xor
iret
add
mov
mov
scas
aad
sub
add
loopne
int3
cmp
or
and
sbb
and
rcrb
lahf
mov
dec
xor
xor
imul
adc
or
cltd
xchg
dec
jne
lea
xor
mov
cmp
mov
and
jecxz
inc
push
cwtl
aaa
test
imull
adc
jns
mov
fisttpl
push
aam
dec
lea
push
mov
dec
daa
call
gs
jo
jmp
mov
mov
and
xchg
das
aaa
cmp
scas
movsb
or
pop
dec
xchg
sbb
or
sbb
jge
pop
imul
mov
inc
scas
movsl
cld
aaa
push
aam
mov
jle
push
mov
sub
mov
xchg
pop
adc
pop
xor
dec
push
mov
xchg
inc
mov
mov
int
mov
jae
sub
cld
iret
mov
xchg
push
lcall
loope
or
push
jl
icebp
rcll
jecxz
cmpsb
addr16
cmc
sub
mov
popf
leave
lret
mov
repz
fistpll
or
loop
aas
fcmovnbe
loope
pop
pushf
jge
cmp
dec
xchg
out
push
xlat
pop
inc
xor
fsubrp
xchg
das
add
ret
pop
dec
and
and
jle
fimuls
dec
addr16
repz
imul
mov
in
repnz
jp
sub
sar
push
xchg
mov
dec
jmp
rol
aad
mov
hlt
add
pop
rcl
mov
ficompl
loope
ret
and
mov
into
dec
dec
cmpsl
addb
push
in
decb
scas
mov
pop
inc
pop
inc
jne
outsb
push
jg
sbb
mov
lock
mov
and
enter
les
fsubs
lret
fcomi
repz
push
lods
xor
daa
fists
jmp
adc
fisubs
mov
push
xchg
push
jl
dec
push
push
mov
ljmp
dec
popa
out
in
cli
xorl
aaa
mov
scas
mov
rcrb
or
and
mov
fsubl
movsl
sbb
subb
in
jle
repnz
ljmp
out
pushf
cmp
jns
popf
and
addb
jl
mov
xchg
mov
in
push
mov
fistps
popa
les
aad
imul
add
cmp
add
mov
xor
dec
cmp
push
or
addl
or
jg
scas
sbb
mov
out
dec
push
enter
xor
into
shrb
push
push
jl
jecxz
or
in
pop
inc
xchg
sti
negl
std
mov
movsl
insl
outsl
mov
adc
mov
push
xorl
push
cli
sbb
inc
scas
inc
icebp
pop
insb
dec
stos
je
fwait
xchg
inc
inc
lahf
mov
cs
cmp
sub
test
mov
mov
sbb
idivb
out
pop
imul
in
std
adc
jbe
loopne
call
daa
cmpsl
mov
scas
out
dec
sub
pop
jno
clc
lea
rclb
rclb
or
loope
xchg
int3
pusha
loop
push
xchg
push
inc
mov
loope
adc
test
push
ret
pop
in
pop
mov
xor
push
lcall
xchg
xor
lret
or
repz
inc
cwtl
jmp
or
icebp
rcll
pop
xchg
clc
aad
dec
ficomps
sbb
sti
sbb
adc
mov
mov
addb
mov
sub
mov
and
and
mov
fisttpll
cmp
dec
xchg
ret
push
jbe
stos
mov
sahf
jne
sub
mov
roll
shrb
xor
leave
scas
scas
sub
sub
hlt
sbb
pop
add
sysret
jmp
and
sbb
test
sbb
dec
test
push
fwait
idivb
bound
push
dec
pop
sub
mov
insl
adc
sub
sti
loope
pop
aam
sub
push
clc
out
or
mov
sbb
xchg
out
pop
xchg
add
lahf
push
inc
pop
mov
adc
mov
xlat
jbe
sahf
jp
movsb
dec
mov
cmpsb
test
mov
dec
jae
cmp
fstp
cmc
and
lret
test
cmp
push
pop
add
nopl
cmpsb
dec
cmpsl
sub
adc
out
test
jg
outsl
and
out
sbb
sbb
flds
test
xor
iret
arpl
lock
mov
sub
push
mov
push
sarl
lea
cmp
adc
fistl
lods
mov
xchg
jne
jecxz
mov
sbb
mov
ficoms
dec
pop
push
or
push
movsl
or
lods
pushl
adc
lcall
clc
sbb
icebp
mov
dec
dec
divb
cmp
cmp
push
inc
sbb
movsb
mov
pop
add
pop
pop
mov
xor
mov
dec
stos
mov
scas
sub
imul
fisttpl
cmpl
push
stos
jp
mov
outsb
sub
sbb
xor
enter
js
cmpsl
fcmovu
pop
xchg
ja
mov
mov
mov
mov
and
jl
insl
arpl
scas
es
ds
int
and
int3
push
or
mov
aaa
mov
pop
xchg
data16
xchg
in
popf
push
sub
pop
adc
data16
icebp
mov
rorb
cld
or
mov
ret
xor
ljmp
pop
lret
pop
lock
jo
jecxz
test
adc
fldt
mov
sub
mov
enter
pop
jmp
pushf
sbb
je
cmpsl
lcall
icebp
push
push
pop
es
jno
fldenv
or
jb
dec
mov
push
lock
repnz
outsb
loop
popf
dec
xor
lret
lea
data16
fdivrs
xor
in
push
xchg
adc
xchg
sub
aaa
insb
test
shl
jns
aas
inc
xchg
pop
lret
mov
mov
dec
in
call
lock
movsl
xchg
insb
sub
outsb
xor
lret
mov
sub
stos
cmp
pop
dec
addl
les
cmp
inc
aam
push
adc
lahf
push
lret
cmp
mov
rcrl
lahf
mov
lret
xor
mov
xchg
in
mov
jae
cmp
popa
jmp
jne
mov
out
dec
addr16
inc
fldt
leave
shll
mov
fnstenv
push
sub
add
sahf
cs
jecxz
aaa
jp
inc
gs
xchg
pop
fnsave
int3
xor
sbb
add
pusha
adc
out
lock
int3
loope
and
jl
sbb
xor
inc
lahf
mov
arpl
inc
pop
mov
inc
adc
rcr
ljmp
push
cmpsb
outsl
inc
mov
js
mov
loopne
sbb
test
imul
jmp
ja
adc
and
xor
scas
pop
pushf
mov
jb
pop
lcall
cmpl
sbb
stc
inc
mov
pop
hlt
leave
divb
cwtl
jb
mov
lods
mov
pop
lahf
xchg
imul
in
aad
std
loop
ret
dec
dec
sbb
orb
ljmp
mov
push
inc
cmp
or
daa
add
sub
dec
in
in
movsl
aad
lcall
movsb
lea
ret
sbb
xchg
sub
push
or
or
jl
sbb
lcall
das
rorl
into
repz
sbb
push
outsl
shll
repnz
ret
push
fisttpll
adc
rcl
fldl
lea
mov
cld
dec
xor
ljmp
mov
dec
in
cld
sahf
jecxz
in
push
outsb
sub
jp
repnz
push
jb
repnz
je
andl
mov
das
push
xor
pop
notb
fs
shlb
and
jo
sub
bound
add
fisubs
xchg
fs
imul
movsb
inc
gs
fistpll
lock
mov
cmp
pop
int
jo
jge
jp
leave
jb
or
testb
cmp
dec
inc
mov
mov
std
dec
sub
testb
cwtl
jmp
xor
cwtl
in
dec
les
fiaddl
inc
sbb
pop
mov
cs
shl
jp
test
rcrl
dec
xor
aas
inc
xor
lds
lret
jmp
pop
dec
push
cmpb
std
lods
xor
nop
js
pop
and
addb
push
loope
mov
inc
pop
and
popf
sbb
btr
mov
and
mov
jae
push
mov
push
leave
std
cmpsb
mov
mov
js
ja
bound
and
leave
jg
add
sbb
or
in
ret
adc
mov
xor
inc
popf
pushf
mov
cmp
mov
addb
dec
push
sub
rclb
inc
sbb
push
add
pop
dec
or
adc
stc
out
pushf
dec
add
nop
inc
sbb
xchg
nop
dec
pop
fcomps
loope
scas
dec
xchg
out
test
in
jge
bound
stos
jmp
mov
out
jae
xchg
xor
mov
lret
mov
add
divb
cmp
jle
mov
repz
jnp
repnz
push
daa
andb
cbtw
movsl
adc
fcoms
ljmp
bt
pop
cmp
cli
inc
ljmp
sti
cld
mov
mov
cmp
sbb
pop
adcl
subb
cmovne
or
pushf
cli
int3
xchg
imul
pop
arpl
cmp
loop
jmp
jbe
enter
adc
xor
add
lea
dec
jne
push
cmpsb
mov
mov
mov
inc
bnd
xchg
mov
inc
scas
fistpl
dec
dec
mov
stos
icebp
sub
scas
sub
ljmp
pop
scas
hlt
addb
pop
repnz
out
sti
ja
mov
loopne
pop
and
mov
fisubrs
sbb
mov
pushf
fmuls
aad
jne
repnz
in
xchg
jg
push
and
mov
adc
lock
pop
or
push
jns
or
push
push
sbb
xchg
pop
ja
push
flds
stos
inc
push
out
mov
cmp
push
xor
into
mov
inc
xchg
leave
and
mov
add
pop
fisttpl
call
repnz
mov
jne,pt
sti
mov
mov
js
fsubrs
xchg
mov
repz
seta
and
out
push
shrl
xor
fstl
mov
xchg
les
cmp
fbstp
mov
sbb
jge
sbb
add
decl
shll
outsb
xchg
fsubrs
xor
add
add
imul
dec
fs
dec
ss
pushf
xchg
lgs
and
daa
sub
jns
mov
fwait
dec
jecxz
ds
push
jl
dec
jns
sarl
push
xor
aas
cmp
mov
icebp
dec
int
jge
cmp
ljmp
ljmp
mov
js
mov
adcl
jg
sub
pop
sbb
or
or
mov
xchg
aad
out
adc
inc
sub
add
push
xor
orb
scas
xchg
adc
mov
icebp
push
scas
loopne
test
push
pusha
roll
fsubs
dec
sahf
hlt
inc
and
insl
adc
movsl
xchg
and
mov
lahf
mov
stc
inc
in
jnp
dec
inc
pop
jae
mov
jae
mov
dec
xor
add
jns
clc
mov
adc
dec
je
sbb
clc
stc
push
lea
sbb
xor
test
aam
jns
shlb
js
dec
dec
sbb
adc
movsb
clc
or
scas
ret
movsl
xchg
out
jo
mov
out
mov
mov
mov
ljmp
pop
xor
imul
insl
negl
dec
fcmovb
sub
or
push
push
pop
aas
pushf
push
inc
sbb
leave
pop
xchg
fimuls
xchg
inc
or
rcrb
pusha
cmpsb
push
mov
pop
in
inc
sub
repz
cmpps
add
jecxz
and
jno
adc
xor
test
lahf
adc
cmc
mov
scas
mov
out
push
and
or
inc
cwtl
insb
add
jno
mov
std
sub
push
cmpsb
push
xor
leave
add
jb
push
loopne
std
mov
mov
test
ficomps
adc
addl
mov
rol
mov
icebp
jo
sbb
bound
bound
xchg
lret
cli
aaa
jg
dec
jg
push
jmp
add
cmpb
sub
pop
push
aad
sbb
jmp
dec
mov
jle
fdivl
pop
ja
sub
push
jne
inc
xor
jle
push
in
je
pop
mov
cmp
mov
cmp
call
jecxz
xor
rcll
inc
inc
push
lret
jecxz
stos
inc
inc
and
adc
push
add
cmp
fcompl
test
ret
mov
fdivrs
adc
orb
mov
xchg
std
and
fimull
mov
jo
mov
push
push
out
fisubs
pop
xchg
outsb
dec
leave
ljmpw
rorl
aas
pop
xor
mov
call
orl
sbbl
mov
mov
push
cmpsb
nop
cmp
add
xchg
les
outsb
mov
xchg
outsb
adc
xchg
lock
fcomps
je
and
mov
push
mov
mov
xchg
add
inc
push
pop
nop
pop
int
mov
std
pop
aam
or
mov
in
mov
cmp
xchg
jbe
fwait
std
sub
pushf
sbb
popf
jmp
pusha
scas
xchg
adc
pop
jle
push
enter
popf
push
enter
notl
imul
fistpl
aad
repnz
je
add
or
fs
jg
xor
syscall
shll
xor
sub
jmp
orl
mov
or
rol
mov
outsl
inc
in
mov
cmpsb
insb
push
scas
insl
push
test
mov
add
push
dec
inc
and
pop
push
pop
add
fsub
rcl
mov
movsl
sub
or
mov
fwait
leave
push
call
cmpl
in
js
cltd
push
js
fisttpl
cmp
jle
add
mov
loope
aas
out
or
cmp
cmp
sbb
ljmp
lea
xchg
ficomps
pop
fsts
adc
jmp
jns
inc
fcom
xchg
inc
push
mov
sub
mov
mov
roll
mov
js
sub
sbb
push
add
lock
pop
sub
scas
jmp
and
inc
addb
xlat
and
movsb
dec
push
sti
in
rcll
jg
mov
stos
jle
cmp
add
cld
mov
pop
and
xchg
aam
xor
lret
in
xlat
negl
jb
stos
shlb
mov
shl
adcb
fnstsw
out
ss
jno
and
dec
push
xchg
mov
xor
sub
xchg
jmp
lret
ja
jnp
xor
in
mov
jle
cs
mov
shll
sub
jns
test
sub
fsubrl
cltd
idivl
pop
cwtl
mov
push
sub
cmp
sbb
pop
push
jl
test
stos
loopne
cmp
sbbl
outsb
xchg
add
fsubrl
push
inc
clc
rorb
sbb
fprem
test
in
data16
jl
jmp
fwait
lea
test
pop
xchg
push
ja
call
cli
jae
push
in
testl
xor
ja
add
and
cmpsl
xchg
mov
jecxz
cmpb
dec
call
cs
mov
and
int3
mov
lods
pop
and
dec
fiaddl
or
mov
aam
jns
mov
call
out
test
push
adc
push
imul
jb
outsb
xchg
jge
cmpl
mov
cltd
dec
std
add
and
lea
push
mov
movsb
adc
loopne
jge
xor
movsb
dec
mov
mov
adc
sub
mov
pop
cmp
dec
repz
dec
adc
sub
jg
les
mov
xor
inc
jnp
mov
jmp
push
loopne
mov
dec
andl
jge
imul
sbb
xor
jbe
pop
jle
je
vaddsubps
or
mov
xchg
push
dec
aas
mov
decb
inc
and
xor
outsl
fldl
sub
sahf
sbb
inc
lahf
mov
sub
out
stc
inc
push
lds
insb
push
mov
jne
xchg
pop
inc
pop
mov
or
push
testb
jnp
pop
push
pop
jle
std
xchg
cmc
cld
mov
movsb
out
cmpsl
cli
dec
add
iret
ljmp
mov
xchg
popf
mov
jecxz
mov
adc
mov
into
or
push
mov
cmp
sbb
ja
in
xor
addl
hlt
inc
inc
inc
outsl
dec
xchg
dec
aam
ret
gs
dec
lret
jns
mov
in
lds
inc
xor
sbb
outsl
in
ljmp
sbbl
xor
cmc
xor
test
ljmp
mov
hlt
mov
mov
shll
dec
rcll
sub
ss
sub
adc
mov
cmp
icebp
xchg
or
sub
repz
enter
push
orb
out
xchg
add
or
ret
out
push
sub
sbb
xor
repnz
adc
pop
scas
orb
xlat
xor
shlb
in
lods
or
sub
in
rolb
adc
inc
cs
dec
mov
dec
outsb
stc
sbbl
fnstsw
push
mov
mov
mov
das
dec
loope
repz
sti
and
ljmp
aad
add
add
popa
dec
or
sti
xor
xchg
mov
pop
call
fdivl
xchg
sub
stos
addr16
imul
adc
mov
sbb
mov
sub
cmp
mov
jecxz
div
xchg
adc
or
push
enter
mov
enter
push
inc
pop
into
jmp
and
adc
xchg
sbb
movsl
stos
imul
adc
test
movsl
insl
dec
es
hlt
push
int3
dec
inc
mov
lods
xor
jle
jecxz
push
cs
pop
push
enter
lret
xor
jl
cmp
and
adc
mov
shr
out
imul
sbb
xchg
fcmovu
jo
mov
addr16
pushf
mov
stos
cmp
aas
popa
inc
js
sbb
cmpsb
inc
pop
lret
cli
lahf
inc
jmp
push
add
jno
aaa
or
ja
lcall
sbb
push
dec
jl
pop
add
movsb
pop
lahf
push
faddl
clc
into
inc
popf
or
in
sub
in
jecxz
inc
jae
loopew
push
mov
in
stos
icebp
dec
js
xchg
out
jecxz
lods
sub
cmp
push
les
fsubl
add
sub
adc
push
xchg
mov
lock
lea
dec
hlt
fs
addr16
jecxz
add
and
mov
sub
arpl
xchg
add
mov
add
sbb
int3
push
cmp
and
mov
loopne
mov
mov
sbb
fisttpl
mov
jae
stos
shl
cmc
mov
push
out
ljmp
mov
clc
and
pop
dec
mov
and
mov
ss
mov
jbe
in
mov
call
lods
mov
sbb
addr16
enter
cmp
dec
lods
dec
ds
mov
mov
mov
es
call
mov
xchg
xor
pop
xchg
sbb
xchg
mov
repz
mov
mov
nop
mov
push
cs
cs
push
dec
cmp
adc
pop
mov
xchg
mov
sbb
lods
cmp
cld
dec
data16
jge
jno
imul
cmp
lea
div
inc
aad
xor
sub
je
scas
dec
xchg
incb
testl
std
sbb
aad
sbb
pop
dec
cmpsb
notl
clc
mov
js
xchg
ficomps
mov
cmp
es
add
ficoms
cwtl
test
iret
sbb
int
sarb
adc
pushf
add
popa
movsb
gs
sbb
xor
ret
rcrl
ljmp
mov
insl
nop
mov
in
clc
jp
ds
sbb
add
rcrl
xchg
mov
je
lea
xchg
mov
faddl
sbb
pusha
xchg
loope
rol
fcmovne
scas
dec
insb
mov
cmp
mov
push
jae
xchg
rorl
or
pop
jne
sub
notl
push
cmp
sahf
mov
push
scas
lcall
rclb
aad
inc
pop
cmpsb
pushf
lock
je
testl
insb
out
mov
push
aas
lret
adc
or
cmpsb
fisttpll
mov
je
shrl
mov
pusha
subb
lahf
and
add
daa
test
jno
or
jbe
out
fwait
mov
lcall
lahf
jmp
push
inc
jns
in
xlat
xor
rcr
ds
cmp
sbb
movsb
faddl
xor
mov
or
outsb
jp
push
outsb
popa
dec
or
aas
stc
aas
je
push
sub
pop
mov
mov
add
pop
dec
out
dec
fisttps
rorb
push
aaa
int3
pop
adc
xchg
cmp
mov
fcomps
inc
push
in
sbb
fwait
inc
loope
xor
sbb
mov
lret
cs
mov
mov
xor
and
xchg
jge
pusha
cmp
out
std
cwtl
xor
cmp
dec
push
cli
je
rcr
or
jno
shlb
jnp
pop
test
iret
dec
jb
out
add
movsb
jp
mov
ret
addr16
jl
ja
movsb
stos
sub
xchg
aaa
into
and
ljmp
imul
xchg
add
inc
xor
jmp
adc
pop
pop
pushf
push
xchg
testl
sbbl
pop
dec
cmp
or
frstor
push
pop
hlt
andl
dec
inc
addl
push
nop
int3
xor
lret
xchg
push
and
cmpsl
push
out
cld
in
inc
jae
sbb
into
shl
jno
xlat
fistl
fadd
xchg
push
pop
mov
gs
rcrb
adc
push
add
pop
push
jae
dec
insb
cmc
xchg
fcoml
out
add
lcall
cwtl
stos
jnp
mov
jno
pusha
lcall
jno
js
mov
xorb
or
jecxz
sti
addr16
dec
orb
dec
fs
cli
fldz
xchg
xor
sbb
fstl
add
cs
xor
xchg
test
loopne
or
add
jns
test
mov
inc
fisubrs
inc
jne
mov
hlt
int
leave
dec
adc
icebp
ss
or
pop
or
bound
mov
jl
lods
js
xchg
ds
bswap
aam
xor
pushf
les
sahf
or
test
mov
jge
mov
insl
sbb
cmp
loope
cltd
or
mov
jecxz
pop
push
sbb
andl
mov
push
inc
inc
dec
inc
arpl
sbb
cmp
aas
cwtl
out
enter
and
adc
inc
pop
pop
cmp
mov
sub
in
mov
pop
scas
mov
aad
mov
sbbl
je
cs
mov
push
orl
rolb
sarb
loop
push
loopne
adc
xor
ljmp
mov
and
inc
imul
cmp
jp
imul
add
lcall
ja
inc
sahf
cltd
jle
jnp
jnp
cwtl
fidivl
xchg
arpl
xchg
lea
icebp
inc
sub
inc
dec
add
pusha
mov
and
and
icebp
adc
test
fimull
push
ljmp
bound
pop
mov
stos
xchg
sub
ja
add
mov
mov
pop
fidivs
inc
cld
packsswb
xchg
incb
out
adc
rol
jmp
jmp
pop
mov
mov
shlb
ds
mov
cwtl
and
mov
ror
scas
fstl
inc
and
insl
xchg
fidivrl
outsl
push
jnp
cmp
cwtl
sub
frstor
pusha
lcall
adc
loopne
lods
pop
or
adc
pop
arpl
and
hlt
lods
mov
jno
push
sbb
dec
aad
sbb
mov
jnp
fcoml
icebp
sbbb
shll
mov
xlat
data16
xchg
fiaddl
sub
jbe
cmp
pop
lods
push
xchg
mov
mov
xchg
stc
movsb
rcl
mov
xorb
sub
jmp
mov
arpl
ss
mov
push
or
test
lahf
and
repnz
xchg
das
stc
fistl
mov
test
aaa
push
mov
push
pop
out
xor
idivb
jb
loopne
testl
push
mov
fistl
pop
mov
mov
or
lods
push
jmp
aam
mov
adc
cmpsl
ss
fidivs
sub
vdivss
cwtl
fmull
and
xchg
push
repz
loop
in
sub
ret
lods
sub
ret
fsubr
addl
inc
movsl
push
xchg
xor
fldl
es
jge
hlt
mov
dec
sbb
mov
fsubl
pusha
sub
xchg
push
fidivl
out
add
push
cwtl
lods
dec
loop
push
mov
test
je
push
sti
xor
xor
push
call
inc
cmpsl
daa
sbb
mov
mov
ds
pop
pop
push
lret
sbb
dec
pop
push
cmp
xchg
cs
ret
cmp
push
ret
aaa
add
jno
adc
das
xchg
mov
fildl
jb
sbb
mov
fists
mov
inc
mov
ret
shll
sub
enter
out
lock
xchg
mov
add
xor
scas
cmc
pop
pusha
xor
xchg
inc
pop
cmp
sbb
cmp
test
ja
pop
es
je
pusha
mov
push
mov
lods
shlb
or
sbb
rclb
repz
push
pop
inc
ret
mov
aaa
xchg
lods
fimuls
lods
or
inc
test
push
call
jp
loope
push
xor
jo
cmp
push
lahf
int3
bnd
shrl
and
push
add
or
insb
mov
cmp
stos
into
inc
push
sub
es
pushf
xor
add
sub
ljmp
test
dec
jmp
or
stc
jo
and
sahf
and
icebp
cld
leave
dec
push
push
add
popa
or
pop
cmp
pop
ds
mov
xchg
loop
dec
sarl
movl
dec
testl
cmpsb
xlat
xchg
pop
lods
push
cmp
stc
adc
xlat
xchg
dec
xchg
loop
cmc
mov
add
xor
sbb
mov
insl
ret
xor
sbb
ds
jecxz
xlat
loopne
cmp
push
inc
cli
cltd
mov
ds
cmp
pop
movsb
push
test
pop
lods
aad
sub
repz
out
mov
into
clc
mov
and
fdivrp
iret
xlat
ja
and
mov
add
pusha
jl
adc
xorb
lods
xchg
iret
aas
sbb
cmp
sbb
int
cmp
jno
pop
pop
jge
pop
inc
scas
mov
in
test
sbb
sahf
adc
shlb
repz
in
or
movl
les
imul
mov
push
xchg
and
cli
dec
cmp
jb
lahf
and
out
pop
fnstsw
push
pop
popa
sub
cmpsb
aaa
inc
pop
repnz
fimull
int3
sbb
call
fwait
mov
test
test
push
loop
mov
arpl
push
and
and
pop
and
adc
cmp
neg
mov
adc
mov
imul
mov
add
mov
add
add
mov
addl
fadd
jmp
aaa
aam
jnp
jmp
jl
sbb
jbe
mov
and
inc
jp
inc
lcall
movsb
adc
add
mov
aaa
mov
xchg
inc
lret
dec
addr16
repz
mov
push
or
gs
into
dec
ja
jecxz
or
fsubl
dec
push
dec
in
test
xchg
or
pop
jb
cmp
lret
fiadds
mov
push
test
out
inc
aas
imul
inc
arpl
cmp
sbb
int
test
mov
cmp
dec
lock
cld
mov
addb
jnp
rcll
xor
push
addr16
pop
mov
adc
push
mov
lcall
out
sbb
xchg
jmp
stos
in
test
push
mov
xchg
in
push
cmpsb
push
xchg
pusha
and
out
cmc
insb
mov
jae
inc
fldcw
fs
fisubrs
mov
cmp
dec
inc
lcall
decb
mov
rcll
push
addr16
sub
mov
fwait
dec
xor
xchg
outsb
xor
sbb
mov
lods
push
push
popf
mov
pop
rclb
out
out
lds
mov
add
dec
ret
dec
push
hlt
pop
int
sbb
decb
inc
mov
stc
sbb
bound
lock
or
and
out
clc
mov
push
in
dec
out
aaa
jecxz
insb
pop
sbb
lods
lock
repnz
outsb
pop
mov
fmuls
outsb
cmp
sbb
inc
insl
ljmp
cmp
xor
into
jge
jne
es
fistl
mov
xlat
push
scas
or
jo
dec
push
scas
adc
jge
mov
scas
shlb
inc
scas
sub
pop
xorl
fmul
test
mov
loop
jl,pn
or
test
loopne
out
jmp
bound
mov
fcompl
xchg
xor
bnd
ja
push
in
call
mov
mov
jmp
int3
mov
sub
pop
and
xchg
in
imul
sahf
mov
lods
mov
push
scas
dec
out
or
scas
leave
lea
push
movsl
mov
std
sbb
mov
test
icebp
mov
lret
imul
adc
loop
lret
mov
fs
and
xor
nop
mov
shl
sbb
adc
dec
decb
xchg
ficoml
or
aaa
xchg
dec
xor
or
int
cmp
and
dec
adc
jg
push
push
sbbb
mov
in
sub
mov
mov
mov
xchg
or
gs
cwtl
cs
jbe
pop
idivl
jb
ret
int
mov
or
ret
shll
ds
cmpsl
outsb
nop
popa
std
add
in
fs
xchg
xchg
inc
add
out
aam
jg
repnz
jmp
add
and
mov
insb
adc
imul
cmp
push
mov
ljmp
pop
inc
stc
orb
jge
dec
xchg
dec
jne
enter
mov
sbbb
lods
bound
daa
es
dec
mov
shll
mov
lea
int
sbb
sub
xor
sub
ds
mov
and
mov
pusha
mov
jge
js
lret
push
lods
cli
add
imul
and
push
insl
stc
cmpb
pop
nop
outsl
jge
cmpsl
pop
repz
add
xchg
mov
jo
movsl
int3
iret
sbb
mov
pushl
test
icebp
mov
aad
adc
sti
sbb
dec
jmp
pop
fistpll
cmp
cmp
sbb
jnp
dec
or
repz
xor
in
xchg
pop
adcl
loop
inc
dec
or
aas
popf
inc
adc
stos
inc
jle
outsl
int3
push
stc
mov
inc
data16
mov
mov
add
std
loopne
inc
sub
or
test
clc
jp
mov
mov
scas
xchg
xchg
add
push
out
push
sub
popa
pop
or
mov
add
repz
mov
test
clc
fstl
movsl
jo
pop
mov
int
cli
ds
dec
sahf
push
out
icebp
adc
or
ja
jns
pop
aad
jmp
decl
pusha
add
jbe
test
inc
xorb
cltd
mov
or
inc
aas
mov
mov
aam
mov
adc
adc
mov
aad
xor
cwtl
rolb
filds
outsl
sbb
sbb
mov
test
lods
mov
movaps
leave
xor
xlat
mov
movq
inc
cltd
inc
and
push
stc
adc
push
push
push
jp
clc
repnz
lock
jl
arpl
sti
ja
pop
aaa
and
out
xchg
mov
aas
xor
ret
sbb
pop
dec
mov
sti
mov
orl
xchg
insl
insl
rorb
popa
addb
xor
into
lods
xor
jb
jno
inc
mov
jl
leave
sbb
scas
push
push
lret
jnp
adc
ljmp
jge
popa
add
sub
sub
imul
sbb
int3
add
ret
js
pop
cmp
add
lret
jg
hlt
les
dec
inc
xchg
inc
jge
and
dec
ror
xchg
imul
scas
mov
inc
push
in
pop
shl
loopne
cmp
inc
adc
cwtl
ja
pop
out
insb
clc
mov
jnp
dec
mov
rcr
stc
pop
ljmp
inc
repz
bound
xor
aam
add
sbb
test
inc
mov
nop
jge
mov
sub
or
sti
sti
fistl
out
cmp
hlt
fbstp
and
mov
clc
adcl
loopne
es
add
sub
push
loope
andb
pop
in
push
jmp
pusha
dec
cmp
dec
enter
in
mov
movl
ds
jb
lods
rolb
loop
push
cltd
jne
pop
mov
es
lock
adc
mov
mov
push
lret
es
dec
push
iret
subb
jecxz
cltd
pop
addb
push
cmp
sub
insl
aad
lea
mov
pushf
pushf
xor
hlt
icebp
jmp
fcmovnbe
sbb
aas
push
imul
dec
roll
mov
pop
outsl
arpl
addr16
in
ret
out
roll
or
jne
test
cmp
mov
leave
or
push
sbb
outsl
adc
fcomps
cmp
pop
pop
mov
les
cltd
pop
jle
pop
arpl
or
es
adcl
xor
cmc
les
roll
push
mov
cmp
repz
pop
rolb
cmp
push
iret
sbb
gs
test
outsb
scas
xor
push
loop
inc
xchg
xorps
inc
or
xorb
icebp
scas
push
or
fisttps
inc
sahf
mov
xor
mov
out
rcrl
nop
bsr
rorb
aas
cmp
std
cmp
popf
aas
sub
xchg
repnz
popf
jb
dec
adc
pop
jbe
sahf
push
mov
xlat
sarl
sub
cwtl
inc
mov
ffreep
sbb
push
insl
xchg
xlat
inc
mov
cmc
in
add
jecxz
mov
xor
aas
mov
push
scas
jbe
inc
lret
aam
jg
js
ret
inc
sbb
icebp
dec
inc
nop
add
rol
pop
jb
mov
xchg
sarb
and
xlat
inc
je
and
je
jmp
jge
fcmovu
mov
aad
xor
add
jne
xchg
jns
jg
and
ja
xor
jp
mov
cmpsb
popf
xlat
iret
push
fs
xor
mov
jge
mov
idivb
pop
xor
pop
lcall
sbb
out
push
mov
into
ja
adc
in
aad
cmp
aaa
sub
ljmp
push
out
fs
cmp
and
in
adc
adc
dec
test
fs
mov
mov
mov
push
cmp
and
arpl
dec
or
test
mov
xchg
fwait
aam
outsl
fs
test
test
push
aad
jmp
aad
xor
fucomi
dec
push
xchg
adc
mov
insb
xchg
pop
jp
pop
lods
xor
sahf
dec
popf
ja
push
adc
dec
lahf
push
iret
sbb
pusha
dec
mov
add
inc
mov
pop
push
into
mov
sbb
lods
stos
cltd
mov
into
out
je
mov
or
and
cli
daa
divl
out
outsl
pop
adc
cli
xchg
pop
mov
inc
push
xchg
sub
xorb
mov
inc
lcall
pop
les
adc
sub
imulb
cwtl
lods
inc
mov
arpl
mov
ss
cmp
push
outsl
jb
xor
movsb
or
das
mov
and
dec
scas
je
pop
or
repz
xchg
je
cs
int
lret
xor
lahf
repnz
ljmp
xchg
pop
cmp
dec
adc
ja
sub
shll
fwait
push
loope
push
dec
in
sub
sub
cmp
daa
push
jle
stos
les
frstor
add
sarb
sar
out
iret
lods
cmp
icebp
or
je
daa
sub
sub
stc
lahf
jbe
ret
jb
fdivrs
or
daa
mov
dec
inc
sbb
jg
cld
popf
dec
lds
test
div
aad
add
or
aas
popa
outsl
mov
adcl
mov
pop
imul
into
dec
and
iret
pop
jecxz
out
adc
mov
pop
icebp
pop
scas
push
mov
cltd
lahf
jmp
movsl
pop
mov
dec
cmp
push
divb
mov
mov
imul
test
ja
push
shrl
dec
out
dec
add
xor
push
cmp
std
clc
xchg
or
lds
enter
inc
ljmp
cld
clc
or
xchg
outsl
movsl
movsl
pop
adc
push
pop
mov
in
mov
shlb
insl
insb
sbb
jge
mov
scas
mulb
stos
and
and
js
cmp
mov
aad
bswap
xchg
and
jb
lds
test
in
inc
jmp
int3
gs
jmp
in
and
push
xchg
ja
js
add
lods
je
cmp
mov
sbb
cmp
ret
je
lds
shlb
or
das
push
xchg
cmp
rcrl
inc
mov
push
sbb
negl
push
sahf
leave
sbb
mov
xor
mov
dec
call
push
jbe
std
repnz
outsl
push
int3
xor
jb
mov
loop
pushf
das
adc
fwait
push
xorb
mov
cmp
mov
mov
rcl
jg
pop
inc
dec
shll
lds
push
imulb
mov
xchg
out
fisubs
and
sbb
stos
and
xor
shlb
cmpsb
jl
adc
inc
sbb
dec
push
cmp
add
idivl
mov
mov
scas
daa
mov
adc
lods
push
adc
mov
cltd
data16
rcrl
adc
mov
sahf
mov
popa
loopne
push
push
outsl
push
fists
sub
add
jecxz
jbe
stos
and
int3
cmp
dec
xchg
adc
sub
xor
push
rcr
out
sub
dec
jmp
test
das
lret
test
sub
cmp
pop
call
cmp
pop
outsb
addb
lahf
mov
in
xor
addr16
add
mov
addr16
loopne
js
sub
cmpsb
jo
push
pushf
sti
fs
or
pop
mov
imul
mov
in
pop
arpl
push
out
out
daa
xchg
subb
adcl
cmpsl
outsb
jle
sbb
dec
addb
scas
fucomip
mov
mov
adc
inc
and
mov
mov
add
push
in
cltd
push
dec
mov
xchg
inc
mov
arpl
jl
test
mov
scas
push
lods
or
aam
mov
sahf
cmp
jb
sbb
out
iret
imull
sub
mov
insl
mov
mov
mov
fistpl
divl
js
mov
mov
dec
ljmp
fldt
jecxz
mov
mov
imul
lret
leave
add
sub
jp
pop
push
xchg
cld
xor
jbe
call
jle
cli
cmpsl
mov
sti
jae
scas
test
xlat
rcl
cmp
mov
out
rclb
inc
rcrl
jge
popa
and
inc
fwait
fs
mov
inc
in
sbb
mov
insl
fldt
xlat
jge
mov
loopne
lcall
mov
stos
xchg
xor
mov
jp
pop
out
int
iret
xor
mov
mov
add
dec
cmp
cld
xchg
popf
sti
fisubrl
fstl
jb
xor
dec
push
stos
cmp
insl
xor
jo
in
xlat
sub
out
mov
cmp
inc
cs
iret
dec
mov
in
mov
hlt
xchg
dec
add
mov
jp
scas
or
call
cmpl
add
inc
cmp
sbb
call
fmuls
and
mov
cmc
mov
ljmp
ficoms
mov
in
or
push
push
testb
fstpl
dec
inc
stc
sbb
push
mov
sub
imul
xorb
mov
lods
fs
push
inc
sbb
pop
loopne
mov
fwait
and
sub
push
add
cmp
mov
shll
aaa
mov
mov
xchg
xor
cld
and
imul
out
jmp
sub
xor
add
xor
fs
aaa
sti
push
push
add
jle
xchg
inc
jmp
xor
jo
pop
jle
ss
mov
add
or
cmpsb
stos
sub
xor
jg
cmp
roll
aad
pop
xchg
lret
push
ret
int3
sub
out
xor
xchg
xchg
mov
mov
sub
andb
push
push
out
adc
cmpsl
add
fdivl
pop
adc
insb
jno
out
jnp
movsl
mov
and
mov
push
ljmp
test
in
push
adc
test
dec
mov
test
jecxz
adc
jge
jno
inc
call
and
fmull
out
js
out
dec
or
jo
inc
ds
add
in
push
test
pop
adc
jns
cld
xchg
add
cmp
imul
sti
sub
mull
es
scas
aas
sahf
cmp
fisubs
mov
mov
push
jecxz
xchg
mov
jmp
sub
sub
je
in
inc
push
gs
test
les
fdivr
push
sub
loop
mov
push
lret
in
fsqrt
add
lods
stc
inc
adc
dec
cmpsl
jmp
int3
lret
xchg
mov
std
cmp
push
pusha
orb
jb
cmp
ss
cmpsb
in
push
jmp
mov
test
leave
fucom
outsb
fsubrl
cmp
adc
or
mov
into
cld
jp
int3
mov
push
lds
aaa
shlb
and
insl
add
mov
flds
loopne
mov
incb
mov
in
push
pop
outsl
in
mov
ret
cmpsb
add
fisttps
pop
and
xor
inc
pop
sbb
aas
pop
insl
push
bound
fdivs
bt
jmp
in
mov
jno
int
adc
push
sub
xlat
pusha
aad
aaa
mov
scas
popf
fbstp
xor
ljmp
out
movsl
bound
xchg
push
inc
mov
cmp
mov
mov
cmp
pop
mov
dec
mov
pusha
mov
mov
mov
cmp
dec
sbb
pop
dec
cli
es
mov
sbb
dec
cmpsb
mov
xchg
cld
imul
cwtl
test
mov
fs
mov
pusha
mov
mov
loope
popa
vaddsubpd
pusha
repnz
loop
fsubs
adcl
ds
pushf
int3
cld
cmpsl
cs
bound
jmp
jmp
mov
enter
xor
imul
add
mov
mov
inc
fstpl
mov
pop
rcrb
or
cmp
push
pop
cmp
dec
mov
jmp
cmp
in
dec
cmp
mov
in
aaa
lret
add
add
push
push
icebp
ds
shr
sbb
sti
jbe
jae
dec
dec
mov
movsb
mov
enterw
fnstcw
test
jnp
or
push
inc
nop
nop
data16
or
dec
jl
add
add
add
leave
push
mov
inc
movsb
jp
ss
ret
sbb
inc
loope
pop
jle
dec
loop
pop
ja
in
sahf
loop,pt
leave
insl
mov
std
leave
or
nop
cmp
xchg
sbb
push
xor
sbb
repnz
and
xor
mov
dec
mov
sub
xor
mov
push
xor
in
sub
je
mov
add
mov
sbb
xor
push
xor
gs
sbb
in
arpl
xchg
push
test
add
sarb
cltd
mov
push
lods
cmp
adc
xor
aas
xchg
cli
adc
xor
lret
mov
and
pop
test
adc
mov
adc
adc
xchg
sub
fildll
mov
icebp
xchg
dec
xchg
sti
std
leave
test
inc
aaa
pop
xor
aas
das
mov
jb
fcomps
push
fnstcw
push
les
jmp
sarl
es
ret
adc
mov
lcall
pushf
dec
jg
push
sub
push
pop
hlt
or
adc
push
inc
fcmove
adc
lods
divl
xlat
xor
xchg
popf
mov
mov
clc
add
cmp
and
xchg
dec
dec
push
add
dec
hlt
lods
dec
adc
and
or
adc
addl
fiadds
fincstp
sbb
xchg
push
xchg
xlat
mov
xor
ds
ljmp
push
push
adc
jmp
xchg
into
or
push
icebp
inc
jno
cmpl
dec
repz
rcrb
xor
mov
rcrl
pop
pop
fisttps
add
cmp
cwtl
shrl
jl
and
and
push
push
in
inc
inc
mov
pop
test
push
enter
jl
inc
dec
incl
in
gs
cmpxchg
aas
fstl
xor
lret
repnz
push
inc
popf
or
in
cmp
int3
pop
or
sbb
ret
and
adc
lret
test
mov
xchg
sti
pop
int
pop
mov
xchg
sti
xchg
scas
ljmp
xor
or
add
cmp
gs
aam
ja
sub
scas
pop
cmp
int3
popa
aad
sub
add
xchg
das
inc
inc
cltd
lods
mov
pusha
mov
out
loope
shrl
cmp
inc
dec
imul
lea
push
dec
inc
xchg
lahf
mov
test
mov
insl
or
and
shll
jne
cmp
daa
push
add
jecxz
cmp
ficompl
int
cltd
pop
cli
mov
test
mov
and
mov
insl
sti
in
xchg
add
add
mov
mov
mov
xor
sbb
ss
arpl
dec
push
sub
adc
dec
enter
sti
lret
ret
sub
push
jne
rorb
pop
enter
jg
mov
lods
sub
inc
call
cli
inc
testl
aas
lcall
xchg
sub
dec
pop
mov
lcall
daa
pop
pop
decb
push
imul
mov
xlat
push
sti
int
fsubrl
cmp
jo
mov
fmulp
pusha
xchg
mov
mov
sub
jp
inc
jno
fdivrl
lahf
movsl
cwtl
call
or
pushf
xor
add
mov
xchg
mov
add
lcall
mov
push
mov
dec
push
shrb
pop
mov
loop
sbb
out
sbb
data16
int3
scas
pushf
test
movd
test
lahf
xchg
add
cmpsb
and
rcll
sti
mov
sub
test
stos
cmp
sub
hlt
std
test
lret
les
sbb
sbb
rclb
nop
mov
pop
test
mov
or
das
dec
or
sub
mov
jp
inc
arpl
cmp
mov
gs
negl
add
test
mov
insl
stos
out
std
rorb
push
and
push
xchg
shlb
shrb
repnz
addr16
ror
cmp
and
imul
stos
pop
dec
lods
dec
add
test
leave
arpl
insl
pop
dec
mov
jo
sbb
pop
fisttpll
pop
lock
ja
jl
push
mov
xchg
jnp
fcoml
ja
add
fwait
add
sub
xchg
int
test
xor
or
cwtl
lods
push
cli
push
leave
sub
adc
fldt
push
xchg
rcrl
add
hlt
pop
lds
repnz
inc
fs
mov
jo
xchg
jl
jne
cmp
aad
mov
sbb
sub
cli
xor
and
sbb
inc
roll
cmp
mov
imul
dec
lods
addl
cli
lret
pop
dec
arpl
cmp
call
les
lods
movsl
pop
xchg
inc
xor
out
mov
es
iret
and
jae
imul
nop
xchg
pop
pop
push
jge
push
ret
mov
test
fidivrs
cmpsl
and
or
or
cmpsb
xchg
sbb
outsb
aad
jecxz
imul
repnz
lahf
ret
fdivl
mov
xchg
dec
daa
test
cmp
xor
mov
arpl
and
aaa
cmp
in
in
lods
and
cwtl
mov
cmp
dec
adc
cli
insl
loopne
cmp
xlat
sub
std
jmp
je
xorb
push
fwait
cltd
mov
and
cmp
call
jns
sbb
adc
xchg
fmul
sarl
and
lea
mov
sbb
mov
mov
jo
push
iret
dec
leave
mov
lods
aad
es
pusha
cmp
dec
jg
cmp
mov
test
out
addr16
ret
out
mov
imul
or
test
xor
ja
inc
dec
mov
jb
stos
sahf
fwait
xchg
ss
aam
out
iret
ja
pop
int3
fsubp
pop
pop
mov
mov
lret
test
jp
int3
out
sbb
ficoms
nop
pop
out
jo
cmp
push
mov
or
in
outsl
repnz
xchg
aaa
add
lret
outsl
sti
pushf
xchg
and
ljmp
fildll
pusha
mov
sub
sbb
push
dec
lock
sub
call
lret
jnp
inc
imul
ljmp
arpl
bound
stc
or
fsincos
cld
insl
push
test
mov
aad
in
add
or
dec
mov
stos
jns
clc
mov
cmpsl
mov
xor
adc
shrl
outsl
xor
add
pop
and
cmp
jle
movsl
outsb
js
int
aaa
in
cmp
scas
push
repnz
shlb
ficompl
orb
and
push
fs
repnz
cmp
fsubrs
mov
ret
test
adc
fnstenv
js
hlt
and
xor
mov
xorb
sbb
adc
ret
test
mov
cs
fadd
pop
out
inc
sbb
mov
icebp
es
sub
mov
cmp
push
out
lods
sarb
jae
lods
mov
xor
mov
sub
data16
std
dec
dec
mov
mov
rep
sbb
xchg
inc
std
ds
dec
mov
inc
in
ret
rclb
outsl
xchg
sbbb
jae
sbb
sub
jno
jae
sbb
sbb
fwait
and
leave
cmp
stc
cmp
and
cmpsb
fdivrs
sahf
es
movsl
mov
fwait
and
mov
test
cmp
popf
loope
iret
clc
lret
cmp
icebp
jno
sbb
or
fildl
mov
test
lods
mov
scas
inc
mov
aam
jecxz
mov
mov
cld
jb
sub
sub
pop
ss
add
cmp
test
pop
jmp
stos
jge
sbb
icebp
cmp
mov
mov
jae
in
or
stc
mov
mov
xlat
into
mov
scas
and
mulb
jne
pop
pop
leave
lods
mov
stos
push
sub
nop
sbb
test
pop
data16
aad
mov
out
ret
sarb
inc
pop
pop
or
or
inc
lods
jl
dec
iret
sarl
test
std
lea
push
stc
xchg
jp
cs
xor
inc
add
insl
dec
fdiv
cmpsb
or
cmc
daa
aas
push
ret
inc
das
push
cmc
pop
dec
sti
add
dec
test
xor
jbe
lods
dec
imul
ficoms
adc
fidivrs
fdivrl
jns
dec
pop
sbb
xlat
rcrb
dec
sub
jno
jne
sahf
cs
jo
mov
sbb
fdivrs
lds
pop
andb
out
xchg
push
add
fwait
add
inc
cmp
push
aam
sti
test
pop
inc
adc
xchg
sahf
repnz
mov
stos
xchg
lret
mov
mov
adc
scas
cs
sti
test
outsl
outsb
jns
sbbb
aam
pop
ja
popa
clc
daa
pop
jg
or
xor
test
cli
push
jl
xor
xchg
fimull
push
pop
in
push
pop
andl
or
mov
push
lret
and
arpl
cmp
xchg
ret
dec
mov
sub
pop
xor
push
sarb
sbb
leave
mov
mov
test
push
push
cld
mov
mov
dec
les
cmc
mov
sahf
xor
add
je
cltd
jnp
shr
cmp
mov
icebp
sub
in
xchg
pop
rorb
and
sub
push
push
inc
ljmp
fcmovbe
sub
shl
pop
lcall
mov
fldl
lods
inc
sub
sahf
lcall
dec
cmp
inc
xor
cld
sbb
fstps
push
or
icebp
xchg
cltd
cmc
mov
in
pop
daa
rclb
jno
push
cmpsb
jp
fisttpl
xchg
adc
and
add
sub
sub
dec
cs
dec
sbb
adc
sub
insl
lods
add
pusha
test
mov
ret
ds
ret
mov
jne
sbb
std
push
xor
adc
aaa
rol
mov
xchg
or
sbb
pop
dec
push
xor
jb
adc
int
popl
sub
mov
sbb
sub
jae
fsubrs
and
outsb
dec
xor
ss
mov
aad
out
push
jge
jge
ret
cld
push
mov
repnz
in
pop
sti
movsb
and
adcl
loope
or
and
lods
and
cmpsb
adc
test
aad
push
in
fnstenv
cmc
pop
inc
inc
sub
data16
sbb
loopne
in
das
cmc
je
mov
xor
add
cs
xlat
addl
add
loope
idivb
sbb
mov
inc
mov
mov
xchg
inc
cmpsb
lods
lcall
sbb
xchg
add
sti
cltd
xor
rorl
leave
pushf
roll
in
popf
shrb
out
mov
and
adc
sbb
neg
hlt
mov
test
dec
int3
inc
xchg
or
pop
mov
cmp
jno
les
pushf
idiv
fnsave
loop
icebp
pop
popf
lds
adc
jns
in
sbb
xchg
daa
movsb
pop
jle
ljmp
cli
xor
outsl
std
out
pop
inc
add
call
mov
imul
loop
sbb
or
neg
rcrl
test
inc
mov
aas
imul
std
mov
pop
add
arpl
sbb
aad
dec
mov
add
cmp
add
xor
xchg
mov
shlb
bnd
test
push
push
mov
push
rol
dec
xor
and
cmp
mov
fdivrl
jne
hlt
out
rclb
mull
ja
orb
adc
adc
mov
adc
sbb
roll
into
sahf
stc
dec
scas
pop
xor
or
mul
adc
mov
dec
xchg
pop
inc
rcr
fstl
aaa
pushf
sub
inc
push
push
fwait
push
lcall
lret
repnz
sbb
mov
sub
stos
test
shrb
xchg
test
outsl
mov
addr16
call
pop
mov
inc
inc
shrl
cmp
pop
popf
js
cmp
lods
or
daa
loopne
std
sub
push
loopne
add
xor
push
daa
cmp
cwtl
out
push
xchg
cmp
push
pop
xchg
dec
mov
filds
out
in
cmp
dec
clc
xor
jbe
cld
adc
push
pop
push
dec
cli
push
or
enter
mov
mov
cmp
ja
test
and
jle
dec
sub
jmp
sbb
outsl
fidivrs
ret
stos
scas
cmp
xor
adc
mov
dec
scas
pop
hlt
or
cli
sbb
pop
adcb
pop
fadds
xchg
pop
mov
inc
sbb
ret
mov
loope
pop
mov
js
xchg
adc
mov
aaa
mov
jnp
aas
fsubl
aad
mov
cwtl
push
mov
or
loope
adc
pop
pop
sub
inc
and
mov
xchg
ret
or
xchg
jb
sub
mov
or
sbb
sarl
stos
xchg
mov
outsb
pop
scas
sub
mov
rcll
xor
push
insl
jp
add
rolb
popf
out
cld
test
in
mov
rcrb
mov
dec
xchg
mov
outsb
xor
std
cmp
cli
movsl
insl
lahf
and
enter
pop
call
xchg
mov
xchg
jae
stos
fstpt
or
int
mov
inc
push
sahf
push
ja
mov
stos
mov
dec
and
adc
insb
push
mov
test
mov
add
test
jmp
push
mov
xchg
xor
test
mov
int
jmp
dec
out
pop
add
and
dec
xchg
or
sbb
inc
xchg
push
cld
mov
mov
repnz
into
lret
iret
jmp
xchg
dec
inc
push
sbb
adc
push
inc
xlat
adc
jg
add
enter
jbe
enter
jp
cmpsl
sbb
cltd
xchg
and
hlt
inc
cmp
jp
repnz
inc
enter
fnstcw
fidivs
outsl
pop
outsl
movsl
leave
pop
aad
cltd
xchg
int
test
call
dec
les
cmp
mov
pop
and
iret
push
imul
lahf
add
push
xorl
lret
dec
pop
mov
dec
nop
sub
int3
out
in
cmp
test
movb
cwtl
xchg
dec
cmp
and
imul
push
mov
scas
jns
cli
or
daa
fsts
lds
fsts
mov
pop
xchg
mov
xor
ds
test
dec
mov
repz
sub
or
inc
cmp
cmpsl
bound
shlb
es
and
push
adc
out
add
out
insb
dec
fbstp
icebp
jb
sbb
jle
jp
mov
ds
mov
pop
repz
jle
outsl
jno
adc
mov
xchg
sbb
cwtl
xor
inc
int3
xor
mov
rcll
add
adc
gs
movsb
mov
lret
and
jno
shrl
ret
repnz
shufps
cmpsb
push
int
xchg
notl
out
cmp
mov
jle
cmp
enter
cmpsb
jp
ss
inc
cmpb
jecxz
add
hlt
jmp
aad
sti
xlat
sarb
mov
jge
mov
and
daa
mov
mov
jae
cmpsb
mov
daa
fists
test
lods
addb
cmp
mov
mov
mov
pop
push
gs
mov
das
sarb
lods
inc
cwtl
addr16
jmp
and
outsb
inc
bound
add
push
les
fnstsw
popl
dec
lret
movsl
mov
fsubs
jae
jge
pop
mov
dec
and
test
push
mov
adcl
fcompl
sysexit
out
insb
mov
inc
adc
lret
xor
add
sbb
lcall
push
fidivrl
xchg
ja
mov
in
cmp
sub
xor
dec
sub
ds
ljmp
popf
je
test
add
adc
mov
mov
mov
mov
ss
pop
fldt
icebp
mov
movsb
cmpsb
repz
icebp
jo
ret
out
ror
xchg
push
xchg
mov
mov
mov
pop
stos
push
lods
out
or
shll
imul
gs
int3
jmp
lea
inc
mov
ret
mov
push
xor
iret
dec
inc
cld
sub
cmp
lods
decl
dec
cmp
mov
jb
cmpsb
or
in
dec
in
jnp
arpl
rcrl
dec
inc
pop
loop
dec
cs
scas
or
loopne
mov
loope
lock
fld1
push
sub
imul
roll
dec
dec
pop
push
cltd
pop
jbe
and
jecxz
xor
stc
mov
and
rcll
daa
sbb
clc
jmp
mov
and
and
sbb
out
andb
lret
xchg
dec
pop
ret
mov
cmpsl
and
testb
ja
incl
xchg
push
xor
xor
lds
inc
mov
sub
mov
or
push
xor
pop
and
push
jnp
and
xor
stc
and
rep
push
popa
pop
in
frstor
insl
xchg
xor
jmp
in
push
push
pop
imul
or
xlat
mov
lea
lahf
jno
jb
xchg
pop
std
ljmp
cmc
xchg
test
testl
mov
ja
fcomip
jp
and
nop
inc
lcall
repnz
sahf
jo
inc
lea
jle
dec
stc
popa
xor
or
inc
pop
push
mov
jl
jge
inc
fwait
into
cmp
pop
mov
test
xchg
ror
jbe
shrl
les
cmp
out
fdivrs
int3
push
movsb
xor
out
nop
mov
cmpsl
hlt
insb
adc
cmp
sbb
idivb
sub
pop
js
aas
pop
out
mov
adc
and
mov
pop
push
mov
xchg
outsb
jmp
adc
lret
outsl
push
sbb
stc
push
jecxz
arpl
push
and
xor
daa
inc
out
mov
dec
lods
arpl
and
adc
mov
add
jge
pop
jp
popa
mov
out
enter
adc
outsb
xor
add
pop
and
mov
jge
add
xor
test
out
mov
mov
fildl
jb
sub
fidivrs
loope
lods
outsb
sbb
and
out
into
mov
fwait
mov
mov
neg
mov
dec
cmp
into
nop
add
lret
and
mov
popa
out
out
in
sub
lds
cmpsb
jmpw
dec
popf
xchg
xor
sub
inc
push
fdivs
mov
xchg
ss
loop
inc
ret
in
leave
loop
hlt
loop
fs
sub
mov
leave
adc
bound
mov
fadd
std
cmc
push
std
jmp
pop
movsb
mov
jl
adc
pop
insb
or
pop
fs
out
lods
int
xchg
sub
pop
addr16
jb
mov
fildll
xchg
dec
stos
imul
loopne
xchg
outsb
cmp
gs
sahf
out
pop
and
data16
jb
mov
mov
lds
rol
mov
xchg
fistps
pop
mov
mov
mov
push
popa
push
xchg
call
cmovb
lret
sub
inc
aad
pop
mov
out
mov
shrl
push
shll
sub
mov
int3
hlt
mov
aad
pop
inc
loope
cmp
lock
sub
cmp
stos
sbb
sub
mov
xor
icebp
in
mov
pop
orl
fisttps
mov
fldcw
jo
mov
sbb
mov
aas
sub
lret
mov
stc
stc
mov
adc
add
push
testl
inc
fstl
xor
cs
jle
cmp
jbe
and
pop
pop
ret
jo
mov
aam
shlb
dec
jl
shlb
cli
xchg
pop
jle
mov
push
fsts
mov
cltd
push
lea
sbb
pop
sub
leave
adc
cmp
mov
mov
mov
cmpsb
out
mov
scas
xchg
movsl
push
cmp
xchg
xor
xor
pop
sbb
cmpsl
gs
out
xchg
stos
sub
lret
dec
cmp
out
and
orb
outsl
mov
test
adc
mov
iret
cs
and
xor
out
pop
mov
mov
sarl
jne
cmpb
xor
xchg
mov
mov
and
mov
movsb
iret
xchg
xor
inc
xor
test
mov
outsl
and
or
xchg
jle
jne
ljmp
or
ja
xchg
aad
es
aaa
and
ret
pop
adc
pop
movsb
sbb
mov
ljmp
cmp
enter
add
dec
data16
cltd
leave
adc
ljmp
call
dec
push
mov
mov
mov
push
out
mov
mov
jmp
xor
sub
jl
push
mov
incb
sbbb
enter
mov
les
out
fsubl
xor
jle
xchg
push
dec
xor
mov
mov
add
aas
mov
lret
fsts
add
f2xm1
cmp
pop
jecxz
jecxz
xchg
mov
scas
daa
lods
xor
jle
xor
pusha
stc
mov
cmc
bound
push
rol
mov
mov
iret
xchg
mov
scas
mov
xchg
testb
ljmp
pushf
cmp
stos
cmp
mov
nop
mov
in
mov
or
addl
and
inc
andb
jecxz
pusha
out
imul
mov
movsl
loop
out
mov
shll
mov
mov
cs
lret
es
scas
or
clts
mov
mov
pop
clc
mov
jo
add
pop
mov
test
jo
stos
int3
aam
fdivp
shll
repz
pop
dec
xchg
xchg
xchg
push
stc
scas
out
or
sbb
add
xchg
aas
jns
jne
xchg
subb
shlb
frstor
cltd
and
pop
xor
pop
lea
not
mov
shll
jle
pop
popf
in
fisttpll
cltd
xchg
xchg
das
jbe
adc
das
mov
addb
jbe
ja
push
lret
cmp
sarb
fnstcw
mov
or
addr16
push
lock
mov
int3
iret
daa
add
repnz
sahf
pop
mov
push
fisttpll
ja
push
insb
xchg
fcompl
shll
not
clc
stos
dec
int3
dec
insb
ja
fisubrs
gs
icebp
sub
lret
inc
sti
inc
jmp
jae
adc
std
repnz
mov
mov
add
or
xchg
cmp
sti
pop
and
insl
repnz
ret
data16
leave
jae,pn
pop
fwait
jo
mov
dec
loope
fwait
nop
dec
dec
lods
or
in
inc
jecxz
sti
mov
movsl
cmp
loopne
out
jns
rcl
sub
xchg
inc
or
aas
lods
sbb
and
xor
or
and
ss
mov
imull
and
mov
cmp
mov
fmuls
sbbb
sub
addr16
lcall
cmp
imul
jge
ja
bound
add
pop
scas
mov
inc
jle
daa
xchg
inc
push
or
repz
dec
or
cmp
xchg
inc
push
and
jg
jle
mov
sbb
sub
jb
in
add
aad
push
insl
mov
dec
and
ret
pop
ja
out
ss
adc
inc
repnz
pop
push
lods
add
ret
pop
push
add
cmp
clc
dec
cbtw
mov
cmpsl
out
mulb
lret
mov
pop
pop
cmc
push
push
mov
mov
mov
xchg
push
out
push
bound
in
dec
or
push
mov
bound
jl
lret
inc
jle
aad
ljmp
popa
and
mov
jge
aaa
mov
mov
addr16
inc
out
icebp
js
test
and
lcall
sti
xchg
ljmp
repz
adc
mov
mov
cltd
xor
jmp
test
adc
in
adc
add
subb
cs
iret
xor
mov
mov
popa
add
or
dec
mov
adc
push
cmpb
jno
sub
xchg
jnp
and
out
aad
add
adc
push
push
add
sbb
dec
cmpsb
loope
xor
outsl
loope
jmp
imul
icebp
mov
andb
mov
mov
sub
pop
or
dec
sub
xchg
cmpsl
in
mov
lcall
push
pop
add
push
xchg
loope
les
and
inc
mov
xor
push
fcmovnb
ret
shll
cmp
int
cwtl
adcl
pusha
push
cmc
dec
aam
lcall
sbb
mov
add
cmp
out
jb
fcmove
fisttpl
adc
stos
mull
mov
xlat
popa
push
cmp
enter
ss
mov
pusha
fcoms
cmp
push
xor
in
pop
int3
hlt
push
mov
xlat
fiadds
mov
mov
sahf
scas
mov
negb
mov
mov
pop
out
imul
adc
sysret
jbe
pop
lods
pop
xor
std
in
cmc
outsb
cmp
pop
les
inc
icebp
jno
imul
fisttpl
repnz
jns
fs
jno
in
int3
data16
mov
pop
cli
inc
mov
pop
in
outsb
cwtl
out
ret
je
sbb
mull
add
lahf
shlb
mov
mov
xor
fwait
fwait
pop
xor
sub
loop
mov
fs
in
sub
jb
xor
out
add
xor
mov
sbb
inc
xchg
or
ss
mov
repnz
jae
and
cmpsb
xor
lahf
mov
movsl
mov
ret
int
setne
xor
or
ds
repnz
rcrl
cmp
lock
je
mov
loop
xchg
inc
xchg
loopne
sahf
pop
or
pusha
stos
sub
fstpt
add
add
jae
mov
cld
cld
pop
popa
push
xchg
lret
dec
addl
sub
xchg
adc
fsubrl
dec
mov
mov
xchg
sub
icebp
mov
sub
jno
lds
fcomps
or
inc
xor
xor
sub
push
push
xchg
inc
fnstcw
mov
mov
mov
mov
mov
movl
xor
fcomps
lret
popa
inc
mov
in
jno
mov
imulb
in
out
pop
jle
jnp
push
and
test
pop
push
adc
ss
fadds
xchg
leave
pushf
mov
lcall
dec
icebp
sub
jo
mov
nop
mov
xchg
sbb
sbb
pushf
fwait
jae
popf
lcall
lock
ljmp
jno
push
dec
dec
push
mov
mov
mov
adcl
pop
fbld
imul
or
lret
push
rorl
adc
dec
add
loopne
jns
pop
movsb
sti
push
adc
sbb
cmpb
in
cmpsl
adc
xchg
scas
pop
jne
cmp
out
xor
pop
mov
lods
std
ret
inc
dec
mov
movsl
int
in
dec
push
into
test
xchg
je
frstor
sbb
fcmovne
cmp
popf
scas
pop
push
add
sub
cmp
dec
rcll
xchg
pop
add
into
lcall
sub
jbe
ret
adc
jecxz
jne
jge
cmp
sahf
jp
mov
loope
pop
psubsw
inc
ret
jo
mov
push
inc
xchg
aam
pop
cld
sub
mov
cmp
inc
sbb
subl
movsb
adc
xchg
mov
ja
cmp
xor
sub
pop
fwait
in
movsb
mov
and
movsl
inc
jmp
jmp
std
insl
aaa
push
out
sbb
stos
pop
cmp
dec
xchg
hlt
pop
test
mov
dec
sbb
inc
ror
dec
push
data16
or
push
vmovaps
add
push
sbbl
jbe
fwait
lcall
sbb
testl
jge
xchg
movsl
cmp
fldcw
sub
xchg
xor
das
sarb
lock
fucompp
arpl
aas
addr16
adc
pop
fsub
call
jno
popf
inc
in
mov
imul
fwait
lcall
mov
pop
dec
inc
dec
shrb
xchg
cld
sub
lds
std
inc
dec
in
push
cs
call
in
sbb
dec
push
dec
ret
rcl
dec
stc
jmp
and
lods
pop
adcb
orl
inc
stc
pop
in
mov
push
adc
hlt
push
lahf
push
mov
hlt
int
mov
and
sub
fs
cmpsl
pop
push
std
pop
cli
adc
faddl
cltd
test
dec
add
popa
in
add
call
xor
dec
sbb
mov
mov
mov
mov
out
sub
ret
xlat
cmp
loope,pt
lahf
add
adc
pop
ret
clc
shlb
les
idivl
fbstp
adc
ja
popf
ret
mov
mov
push
cmc
iret
test
rcll
xchg
mov
popa
outsl
sbb
jne
add
sub
lods
sarb
mov
nop
out
test
lods
loope
mov
or
sbb
xchg
fs
ds
mov
lds
xor
ret
jge
out
dec
jo
jno
mov
dec
lods
dec
pop
lock
adcl
ja
lcall
push
sub
push
or
sbb
call
in
push
xor
xor
aas
sbb
lret
cwtl
xor
sbb
mov
lods
rolb
lahf
lods
push
loope
dec
push
loop
mov
in
xchg
fstp
lock
add
ljmp
push
pushf
mov
push
add
xor
cmp
xor
mov
aad
imul
out
hlt
mov
push
mov
inc
movsl
mov
idiv
mov
jl
cmp
push
divl
sbb
enter
lods
mov
and
push
pop
cli
stos
inc
enter
inc
pop
adc
xor
xor
adc
stos
mov
aaa
lret
pop
lret
cli
incl
aam
incb
or
sub
bound
jecxz
mov
jmp
pop
push
xchg
andl
lds
dec
inc
test
imul
fdivrs
andl
cmp
orl
pop
push
jno
clc
push
xchg
sbb
cmpl
nop
aam
jg
jl
jge
mov
out
lret
ljmp
add
mov
daa
popf
mov
pop
sbb
movsl
imul
or
fwait
dec
out
xor
shlb
lea
stos
or
or
ja
xchg
dec
pop
or
cmp
stc
shll
sub
iret
pop
insl
sbb
insl
push
add
pop
cmp
ljmp
cmp
push
sub
pop
adc
push
aad
or
cwtl
pop
cmp
lds
test
pop
shll
std
and
pop
lea
int
lret
int
movsl
ja
fbstp
mov
dec
sar
adc
xchg
pop
lahf
sahf
and
adc
rcrl
sbb
mov
lcall
std
popa
sub
adc
int
mov
push
cmp
mov
push
test
loopne
insb
xchg
arpl
mov
cvtpi2ps
push
mov
jecxz
push
shl
clc
outsb
push
push
push
xor
daa
dec
cmpl
out
into
mov
pop
cmp
cltd
sub
cmp
adc
stos
int
lret
mov
sub
es
or
int3
dec
inc
out
xor
cmp
gs
lock
pop
mov
rolb
testb
or
loop
imul
ret
xchg
test
mov
ljmp
jl
cwtl
repz
xchg
xor
fstl
stc
push
sbb
loopne
imul
sub
out
fs
dec
fs
mov
out
add
xor
and
scas
aaa
xchg
outsl
in
popa
mov
mov
shrl
fstpt
xlat
mov
mov
xchg
lret
aas
jbe
cmp
cmp
jle
mov
iret
inc
mov
in
xchg
test
std
icebp
dec
icebp
mov
mov
mov
pop
outsl
cmp
shl
pop
push
call
das
xor
stos
mov
addr16
inc
pushf
push
stos
mov
call
sbb
add
fdivr
jns
in
sub
pop
add
dec
pop
sbb
gs
out
subl
fst
ds
cmpsl
ret
dec
jge
mov
call
nop
in
sub
mov
mov
fwait
cmp
in
xchg
mov
xchg
jmp
fistps
icebp
jbe
cmp
test
or
push
out
and
fidivrl
out
or
data16
push
inc
pop
out
push
loope
scas
or
adc
pop
push
xor
sbb
xor
pop
add
test
pop
scas
imul
lods
mov
repz
push
cltd
lcall
cs
or
dec
cld
mov
call
cwtl
cmp
sbb
dec
adc
cmpsl
fninit
xchg
jb
pop
pop
push
int
mov
fsubrl
mov
mov
fsubr
mov
lods
call
fdiv
dec
xchg
inc
hlt
mov
lds
sub
rorb
dec
fucom
adc
subb
in
push
sbb
int3
sub
aam
pop
ljmp
loope
xchg
ffree
out
mov
xor
push
repnz
cmp
insb
int
mov
push
scas
addb
adc
lret
std
xchg
and
icebp
sub
sbb
push
push
add
push
pop
cmp
mov
xchg
gs
loope
mov
xor
cvtps2pi
ja
inc
xor
pop
scas
sbb
pop
hlt
and
xor
jo
dec
or
jb
stos
fucomp
push
and
inc
cltd
push
and
jnp
push
cwtl
mov
sbb
out
divb
loop
nop
outsb
mov
mov
adc
ret
xchg
mov
dec
push
repz
insl
sbb
stos
insb
movsb
cwtl
mov
lcall
sub
sbb
addl
stos
and
ret
lea
cmp
mov
cmp
cwtl
cmp
pop
xchg
add
mov
js
popf
pusha
arpl
enter
cmp
iret
mov
xchg
pop
sbb
mov
jne
outsb
iret
int3
hlt
xchg
cs
and
xor
lea
stos
lods
incl
mov
nop
xor
pushf
inc
push
aaa
push
pop
data16
push
xor
ja
jecxz
push
lods
sub
repnz
fdivs
push
dec
xchg
pop
and
loop
or
xchg
jns
or
mov
int3
mov
xchg
jmp
jp
or
push
fwait
repnz
sahf
loop
addr16
lods
gs
xor
sbb
adc
aas
mov
hlt
add
int
and
dec
lahf
daa
pusha
cwtl
lahf
inc
inc
dec
popf
lea
mov
push
jbe
mov
jne
and
addr16
mov
cli
ficoml
lcall
adc
or
inc
sub
dec
cmpsl
cmp
lea
pop
and
mov
rclb
sub
data16
data16
dec
jno
push
inc
rcrl
push
loop
pop
fwait
popf
adc
icebp
cmpsb
in
sbb
mov
loopne
xchg
jl
mov
fs
das
pop
loope
lcall
jae
clc
xor
ret
push
int
pop
jecxz
sbb
jae
stos
and
pop
dec
lahf
xchg
pop
mov
adc
outsb
sbb
dec
xchg
inc
sub
or
je,pt
stc
cli
or
filds
and
inc
lock
inc
or
sbb
adc
push
mov
cs
dec
dec
cmp
cld
add
xchg
fdivrl
rol
jp
pop
repz
inc
aaa
icebp
aaa
pop
les
lahf
and
int
cmc
cmp
cld
push
jle
xchg
popa
pop
jg
mov
cmpsb
pop
and
jo
test
test
stos
subb
dec
and
pop
and
andl
rolb
push
stos
jmp
xchg
mov
lret
jge
lods
sub
fs
enter
push
pop
sub
out
mov
mov
call
stos
mov
fnstcw
mov
outsl
xchg
or
and
xor
jl
stos
jae
ret
xor
or
cld
inc
or
je
subl
sbb
adc
ror
loopne
popf
mov
cld
call
ret
bound
hlt
cltd
mov
outsb
sahf
mov
pop
inc
sub
arpl
dec
dec
xlat
imul
add
icebp
imul
fucomp
mov
rcll
dec
je
aam
cmp
inc
push
enter
repnz
mov
icebp
dec
sbb
sub
lea
lcall
mov
push
mov
mov
mov
inc
or
into
dec
stos
adc
popa
mov
fistpl
bound
lcall
pop
mov
rcrb
mov
into
cmpsl
rorl
cltd
cmp
xor
jno
cmp
loope
cld
in
push
and
mov
pop
sub
mov
in
mov
and
popf
ss
sbb
push
insb
movsb
mov
loopne
sahf
add
outsl
cmp
dec
dec
mov
dec
pop
xchg
push
pop
push
cmp
out
lahf
je
cmp
push
inc
cmovns
adc
lret
add
mov
add
cmp
push
mov
and
xor
push
lcall
mov
mov
sub
in
xchg
push
mov
push
push
fdiv
push
mov
or
sub
lods
cmp
inc
rol
inc
inc
sahf
push
jle
icebp
fldlg2
negb
dec
xchg
ja
push
in
repnz
xchg
addr16
cli
and
pop
mov
and
fsqrt
or
sub
cmpsb
mov
and
mov
cmp
add
sbb
out
adc
aaa
or
or
lods
cmp
mov
cmpsb
mov
inc
movsl
mov
mov
das
dec
fsub
std
pop
lahf
testb
cmp
test
mov
fwait
sbb
stc
sbb
add
inc
push
addl
cwtl
jge
mov
jno
nop
mov
cmp
lahf
pop
inc
test
mov
mov
icebp
and
and
sub
lret
pop
push
test
test
and
cltd
jns
arpl
dec
ss
mov
mov
lret
push
daa
push
xchg
mov
repnz
jb
movsb
int3
xchg
jo
xchg
push
test
cltd
cmc
sub
insb
test
in
lods
lret
and
cmp
icebp
imul
sub
xor
push
push
sahf
and
sti
fs
mov
ja
or
xor
lret
cmp
xchg
call
dec
dec
pop
mov
cmp
xchg
int3
fbstp
inc
inc
call
cld
push
dec
mov
add
dec
mov
lahf
or
lahf
jo
or
cmp
push
xor
push
mov
and
insb
add
inc
adc
xor
cmp
pop
add
fcomp
fwait
dec
push
data16
mov
jl
sub
xchg
incb
pop
orl
pop
out
sahf
lods
mov
mov
cmp
push
shrl
cmp
xchg
push
pop
jns
adc
daa
repnz
pop
jmp
lahf
rorl
mov
scas
cmp
jne
mov
pushf
mov
call
mov
adc
xchg
adc
jg
lds
adc
aam
fcmovb
pop
add
inc
dec
loop
aas
jle
add
pop
dec
dec
inc
xchg
add
add
and
in
dec
push
mov
iret
jg
loopne
js
inc
repnz
adc
mov
imul
into
mov
jmp
mov
aaa
cld
mov
adc
out
fdiv
shlb
add
int3
mov
fstl
pop
cs
and
nop
js
mov
xchg
sbb
fadd
pushf
mov
icebp
xor
dec
mov
dec
jmp
test
sti
jb
imul
in
lcall
lahf
mov
and
mov
sub
cwtl
dec
mov
fadds
faddl
mov
xorb
int
lods
pop
xor
andl
jo
push
in
mov
and
mov
mov
cld
aaa
fidivrl
movsl
sub
clc
pop
js
xchg
fbstp
sub
aas
negl
xor
inc
xchg
pop
rclb
pop
inc
fcmovnbe
lods
xor
scas
sub
pop
dec
xchg
out
es
pop
sub
loopne
xchg
icebp
das
add
add
insb
cmp
adc
sbb
dec
dec
inc
sbb
or
pop
cmp
or
in
into
push
fcomp
pop
ljmp
hlt
fiaddl
icebp
sub
mov
adc
push
insl
addr16
repz
rolb
lods
ds
dec
sub
ja
xor
movsb
das
shll
ja
jnp
fs
mov
lods
leave
dec
sub
fidivs
and
push
outsb
loope
fldl
fstpt
push
in
push
adc
mov
adc
xor
aad
popa
dec
in
lret
addr16
push
repnz
loopne
jecxz
int
fs
movsb
sub
fsub
sub
ret
insb
mov
stc
btr
or
out
lahf
xor
ljmp
rcrl
sub
cmp
loopne
inc
push
jp
leave
mov
cmp
lods
lahf
add
push
adcl
fwait
icebp
sub
sbb
cmp
push
push
lret
mov
lret
fstpt
push
mov
sti
cltd
jl
jbe
testb
clc
xchg
ret
mov
push
push
mov
dec
sub
addr16
sarb
fisubrl
les
push
cmp
adc
xchg
shl
iret
or
and
jge
ds
xchg
aas
fisttps
dec
loope
adc
push
inc
es
adc
add
cmp
xchg
mov
ds
mov
pop
pop
dec
pusha
and
enter
scas
add
push
mov
dec
or
jae
or
andl
push
mov
mov
jns
xchg
jmp
push
ja
inc
pop
in
int
orb
loopne
and
jle
mov
mov
jnp
popf
mov
add
inc
mov
fucomp
divl
cmc
push
xlat
mov
xor
mov
mov
lahf
jmp
dec
das
add
xadd
push
pop
outsl
and
mov
data16
xchg
fs
cmpsl
stos
mov
bound
shll
jo
jne
push
orb
roll
xchg
lea
xor
call
add
pop
lahf
arpl
rcrb
out
hlt
pop
popf
aam
jbe
fwait
dec
inc
inc
adc
fidivl
push
jo
jp
jnp
jbe
push
or
cld
push
call
xor
fildl
mov
je
aas
xchg
pop
dec
aam
add
outsb
repnz
push
ds
jne
pop
inc
cwtl
data16
fs
pop
adc
cmp
mov
into
pop
push
movsb
mov
movsb
mov
dec
sub
loope
push
mov
xor
inc
arpl
adc
dec
stc
dec
mov
lea
sahf
mov
push
or
mov
jb
call
pusha
and
lock
cmc
mov
fwait
das
push
sbb
sub
mov
in
lock
lds
dec
cmp
dec
test
mov
jmp
jb
sahf
mov
adc
or
pop
mov
es
mov
mov
repz
in
or
dec
jbe
scas
in
pop
xchg
cmp
mov
hlt
and
xor
inc
mov
inc
inc
xlat
pop
lret
adc
enter
cwtl
es
push
jne
cmp
push
sub
add
dec
movsl
pop
sbb
stos
mov
or
shll
mov
push
in
inc
mov
sarb
jl
cmp
or
mov
dec
sbb
xor
or
lods
cmc
push
fcomps
push
sarb
decb
push
lret
inc
mov
pop
jns
add
dec
push
movsl
xchg
pop
xor
mov
mov
pop
and
stc
test
mov
jns
sub
loope
inc
cmp
jp
addb
leave
nop
test
lret
mov
or
aad
addr16
xchg
add
pop
inc
movsb
out
and
je
push
xchg
shrl
mov
movsb
repz
aaa
ficomps
xorb
push
mov
stos
xor
cmp
mov
std
icebp
js
test
sub
int
sub
pushf
add
cwtl
in
or
pop
push
ret
mov
push
jbe
dec
nop
inc
or
sbb
mov
adcb
pop
push
push
xor
pop
mov
pusha
ja
aad
sbbb
ret
imul
mov
xchg
or
mov
clc
sub
out
pop
pop
sbb
mov
mov
movsl
addr16
push
decb
int
sbb
jg
cltd
fisttpll
push
testb
jb
dec
bound
dec
pop
dec
imul
and
scas
cltd
mov
imul
mov
sub
inc
insb
xor
xlat
sbb
fwait
cmp
inc
sarb
push
or
pop
out
imul
clc
int
icebp
or
add
mov
cld
setno
mov
aam
sbb
pop
lahf
mov
xlat
lods
inc
je
fsub
push
xchg
cmp
lret
loop
inc
inc
ja
pusha
cmpb
in
int
add
xchg
and
pop
pushl
jecxz
ss
jge
lret
sbb
push
mov
jne
push
pusha
dec
lcall
inc
inc
lahf
mov
ja
stos
push
push
inc
lea
cmpsl
mov
lahf
dec
loopne
mov
xor
sti
lret
test
mov
pop
gs
lahf
cwtl
xor
jmp
js
pop
insb
adc
jl
ljmp
xor
imul
pusha
xchg
popa
popa
dec
in
cmp
out
and
shll
push
in
jmp
jmp
sbb
int3
jno
adc
xchg
sti
inc
xor
mov
int
dec
decb
pop
into
into
mov
not
or
ss
fidivrl
ret
test
mov
cmpsb
popf
adc
in
cld
ficoml
xor
rcr
push
xchg
xlat
mov
or
lds
out
mov
adc
jl
stc
iret
fildl
popa
mov
pusha
loope
sarl
sub
dec
clc
inc
xor
ss
addb
mov
sub
sahf
clc
cmpl
mov
pop
gs
imul
inc
mov
jb
cmp
fdivrl
push
lods
arpl
mov
aas
jg
adc
or
pop
sbb
ds
mov
dec
out
sbb
shl
dec
cmp
adc
cmp
add
sbb
bound
std
xchg
jns
fsts
and
mov
sub
cwtl
mov
mov
ja
jo
ds
cmp
out
push
lods
repnz
out
mov
outsl
cwtl
push
inc
stos
les
inc
clc
or
out
je
aad
aad
xlat
addr16
xor
outsl
jg
lock
repz
in
adc
rorb
jbe
inc
int3
adcl
adcl
dec
xchg
mov
iret
ficompl
inc
adc
dec
imul
outsb
adc
mov
ljmp
add
adc
je
inc
xor
pop
repz
dec
cmpsl
sti
fsqrt
or
push
call
call
cmp
add
jns
fadd
jno
adc
push
rcrb
lds
mov
mov
dec
es
jge
mov
pop
and
and
out
test
andw
mov
cld
jb
movsb
push
pushw
jecxz
fbld
mov
test
dec
dec
enter
add
test
jg
arpl
addb
repnz
mov
and
and
insb
mov
mov
pop
sbb
mov
jb
sti
arpl
dec
sarb
aas
jne
jp
mov
testb
imul
cmp
xchg
sahf
rorb
sbb
sarl
pop
data16
pop
ret
mov
ret
add
ja
cmp
cli
inc
popa
pop
lods
pop
adc
sbbl
gs
push
cs
cld
lds
movsl
adc
ret
test
test
notb
and
ret
dec
popf
inc
aaa
mov
mov
cmc
xchg
push
sub
mov
jge
push
jecxz
lret
adc
mov
or
sub
adc
pop
mov
es
dec
mov
cmp
shll
sub
cmpsb
sub
out
das
into
into
sub
out
and
clc
cmp
inc
pop
jb
push
inc
dec
add
inc
push
rcl
or
das
das
pop
ret
mov
push
push
movsl
mov
push
inc
rcrl
les
and
pushf
outsl
xor
cmpsb
pop
shrl
adc
lea
xchg
insb
je
jmp
sub
pop
push
sbb
xor
xchg
add
in
pushw
push
push
sub
or
dec
sbb
stos
aaa
lock
insb
sub
popa
pop
movsl
adc
sarb
mov
lods
test
lods
mov
and
insb
out
insb
stos
sub
sbb
push
iret
repz
out
aaa
shll
les
mov
test
shlb
mov
sbb
or
rcll
pop
xor
cmp
in
jecxz
or
into
xor
out
sbb
not
xchg
aam
jl
inc
xchg
dec
in
in
xchg
pop
mov
aam
jle
cmp
sub
xchg
jge
adc
cmp
js
shll
ficoml
and
xchg
pop
stos
sub
in
test
test
out
enter
sbb
dec
and
push
lods
and
dec
push
cmp
cmpsb
test
add
sub
bswap
jmp
in
cmc
mov
mov
adc
jae
rorb
int3
jno
fucomp
scas
xchg
jns
jmp
pusha
xor
cmp
inc
mov
gs
or
in
enter
je
add
inc
lock
aaa
int3
and
jo
fcmovb
pusha
pop
or
adc
gs
xor
sub
cmp
or
add
or
and
fsubrl
ja
lock
mov
mov
mov
pop
push
daa
cmp
and
sbb
ffree
cmpsb
inc
mov
jno
mov
push
loopne
daa
mov
jp
sub
into
in
repnz
jmp
push
arpl
std
ficomps
add
sub
outsb
mov
cmp
xchg
lea
jp
std
inc
mov
or
loope
inc
call
stos
jae
dec
clc
bound
hlt
rcl
jecxz
popl
cltd
out
mov
xchg
daa
popa
jns
pushf
outsb
mov
inc
out
icebp
and
ljmp
inc
mov
push
and
movswl
out
jb
out
adc
mov
mov
mov
mov
sbb
dec
lea
jbe
jo
cwtl
jmp
inc
test
ficomps
inc
leave
push
inc
fwait
adc
loopne
dec
fisttpll
imul
mov
fiaddl
cmc
cld
push
outsb
int
dec
mov
adc
es
out
xchg
jl
lds
or
addr16
or
js
cmp
push
inc
or
lcall
aam
push
les
xor
lods
mov
xor
sub
iret
iret
out
sub
pop
ss
adc
mov
mov
mov
cmp
xor
jle
rclb
xor
cmc
jbe
lock
sub
dec
mov
cli
pop
inc
ret
xor
mov
lods
xlat
and
aad
and
in
out
and
jnp
add
cmp
push
xlat
jbe
push
pop
ret
xor
or
jns
out
out
xchg
add
add
loopne
das
fisttpll
aam
or
mov
add
dec
and
and
or
cltd
shrl
pop
je
adc
cmc
leave
jl
shlb
push
sbb
rcr
ss
mov
aaa
test
push
jb
mov
mov
loop
mov
or
in
test
imul
in
pop
jns
jle
into
push
adc
negb
cmp
nop
enter
push
sub
rclb
sub
rcrl
ret
movsb
daa
lahf
xchg
push
mov
into
clc
add
iret
addr16
push
xchg
mov
rclb
add
lahf
daa
pop
bound
imul
xchg
dec
add
je
imul
cmp
data16
jg
add
mov
or
mov
cmc
test
or
arpl
out
rol
shr
lahf
test
inc
sub
push
clc
xchg
outsb
repnz
adc
outsl
repz
mov
cli
aas
pop
cltd
or
push
pop
ljmp
icebp
int
lcall
jmp
icebp
and
xchg
jmp
jne
mov
push
fcos
xchg
inc
dec
fwait
cmp
sub
xchg
and
fstps
icebp
testl
jo
sub
jp
xor
movsl
mov
fldcw
push
cmpsb
inc
into
pop
sbb
xchg
push
loopne
cmp
push
cmpl
icebp
fwait
push
jae
enter
push
sar
and
gs
cmp
mov
push
dec
out
pop
rcll
jno
mov
jb
fs
push
xor
pop
scas
push
dec
nop
sti
cs
jb
mov
ret
pop
inc
fucomip
and
add
or
and
inc
push
xchg
data16
xor
mov
popa
sahf
inc
sub
sbbl
das
mov
xchg
jl
adcl
data16
mov
xchg
lret
mov
dec
or
pop
scas
lahf
dec
inc
in
inc
es
rcll
mov
repnz
in
repnz
mov
dec
in
out
mov
pop
mov
jle
int
les
call
cmp
sub
je
test
ljmp
xchg
addr16
int3
jge
test
and
pop
xor
sbb
and
into
sbb
ljmp
shrl
imul
or
xchg
mov
push
xchg
addb
pop
jnp
push
cmp
push
lret
repnz
pushf
out
add
lods
and
jp
dec
orb
dec
testb
mov
mov
adc
cwtl
cmp
pop
out
shrb
repnz
out
cmp
push
lods
clc
test
sub
out
jne
popf
xor
mov
and
test
pop
sbb
xchg
xchg
ficoml
daa
cmp
cmpl
mov
or
fildl
ds
imul
loopne
jl
or
and
cmp
dec
stos
dec
rorb
pop
fsubrs
mov
subb
out
es
sub
mov
ljmp
and
cmp
enter
pop
insb
sbb
xchg
inc
jg
mov
sahf
in
jbe
dec
mov
inc
add
inc
jo
lret
jle
push
jbe
enter
dec
inc
push
addr16
sub
js
xchg
jo
orl
ljmp
jp
or
fchs
adc
inc
je
jle
xor
mov
dec
std
xchg
or
aam
mov
stc
xor
in
and
bound
pop
add
addb
push
xchg
or
orb
inc
insb
lods
xchg
jo
cmp
daa
push
cmpsl
repnz
adc
call
out
inc
fwait
aad
push
adc
mov
gs
lea
xor
sahf
xchg
xor
adc
xor
and
pop
cmp
cld
or
outsl
in
popf
inc
mov
repz
xchg
mov
insb
mov
sub
out
cld
mov
rclb
jmp
xlat
mov
repnz
and
inc
hlt
call
push
pop
dec
je
mov
es
pop
out
movsb
jbe
mov
arpl
sbb
lcall
pop
gs
or
shl
add
ret
fbld
shlb
lock
xor
loop
mov
or
jmp
popa
mov
mov
inc
sub
jae
mov
mov
jnp
sbb
addr16
sub
sub
std
out
insb
mov
xchg
push
adc
add
lret
mov
xchg
mov
clc
hlt
and
push
cwtl
xor
jg
xchg
and
jnp
mov
and
sbb
clc
mov
adc
popa
sub
iret
xor
mov
mov
sbb
jmp
jns
roll
pop
dec
adc
push
dec
das
xchg
ss
xor
mov
mov
mov
add
or
lds
mov
inc
bound
xor
stos
mov
inc
push
stos
aaa
in
inc
inc
mov
test
mov
or
ficoms
ret
inc
fildll
lods
in
add
aas
xor
repnz
push
dec
lock
lea
xchg
out
ret
dec
aaa
lea
std
xor
out
pop
inc
mov
in
pusha
jo
dec
mov
mov
add
sbb
test
push
push
or
xchg
pop
push
sahf
outsb
lret
push
aas
test
xor
movsb
fistl
daa
adc
inc
push
jmp
int
dec
cmp
enter
sbbb
js
add
je
popf
jae
out
imul
mov
nop
pop
mov
xor
aad
pop
aaa
push
outsb
and
add
mov
repnz
xchg
ss
mov
cs
jbe
or
pop
adc
inc
insl
mov
jbe
adc
test
mov
popf
push
les
jb
xchg
push
dec
flds
add
or
cmp
sti
cmpsl
mov
inc
imul
jbe
dec
jne
push
jmp
stos
push
cwtl
xchg
jle
test
xchg
mov
mov
push
jg
loop
and
mov
fmuls
push
inc
xlat
imul
fadds
movsb
lock
mov
xchg
mov
jmp
inc
lock
sub
ffree
pop
addr16
leave
mov
outsl
pop
sbb
hlt
fnstsw
ljmp
push
das
mov
arpl
sbb
dec
jecxz
cmpsl
or
into
movsb
cmp
xor
xlat
outsl
fstps
mov
mov
fnstsw
sbb
scas
test
add
adc
loopne
out
popa
mov
rolb
data16
daa
inc
xor
cwtl
push
push
sbb
push
vmwrite
or
and
xchg
ja
xchg
pop
outsl
aam
push
adc
cmpsl
sar
mov
jle
pop
adc
cli
jl
dec
mov
mov
push
inc
fcoml
pop
notb
cmp
push
in
lret
dec
cwtl
aam
pop
dec
aam
xor
orl
cmpsl
inc
imul
neg
sub
cld
pop
ficomps
mov
xchg
inc
push
fadd
insb
pop
pop
or
inc
es
mov
and
push
or
neg
xchg
sub
sbb
xchg
out
sarl
lcall
aad
pop
pop
xchg
push
sub
push
movsb
mov
stc
ja
outsl
xlat
push
cmp
xor
jl
imull
rcll
aaa
ljmp
lock
mov
push
mov
push
push
popa
imul
cmp
outsb
inc
push
pop
clc
cmpsb
push
out
into
and
movsb
outsl
jae
jle
pop
inc
xchg
sub
pop
nop
add
sti
mov
mov
pop
mov
or
fstps
sub
sub
cwtl
mov
jecxz
imul
cmp
repz
jnp
bound
pcmpeqd
iret
xchg
hlt
sub
pusha
xchg
add
das
jbe
cmpsl
xchg
imul
mov
js
sub
cmp
and
inc
dec
stos
inc
mov
roll
jb
and
inc
lahf
push
fwait
orb
and
jp
mov
test
cmpsb
and
or
cmpsl
mov
jnp
loope
jae
cmp
jmp
das
xor
add
stos
ljmp
push
icebp
jmp
add
stc
lcall
inc
sub
aam
dec
dec
pop
jmp
sub
xchg
mov
aad
test
push
sbb
jecxz
jp
arpl
pop
std
shl
nop
inc
mov
dec
sbbb
roll
jg
mov
aaa
iret
lret
add
mov
aas
mov
sub
push
dec
and
loope
ljmp
and
outsb
in
test
shll
mov
jmp
mov
mov
lcall
pop
aas
leave
cmp
sbb
dec
fndisi(8087
insl
mov
xor
dec
das
stc
das
shrb
fnstsw
lcall
addr16
jno
sbb
sbb
sub
aad
out
sbb
pop
mov
inc
inc
lds
push
inc
call
pop
jns
fdivs
jne
sbb
jg
push
cmp
mov
and
mov
add
ss
ja
add
dec
into
scas
lret
inc
test
jmp
sbb
insl
lahf
inc
pop
jbe
out
mov
fisubrl
div
icebp
mov
fisubl
mov
icebp
sbb
mov
movsb
lahf
inc
or
sbb
aaa
ficoml
stos
mov
pop
out
mov
mov
mov
out
fisttpll
ret
aas
mov
mov
ljmp
shrb
jo
int
push
ja
ljmp
push
cs
pop
jecxz
scas
dec
fdivr
cwtl
dec
test
add
xor
cmp
push
or
and
in
dec
sbb
in
sbb
mov
mov
insb
mov
lahf
es
test
dec
xor
ss
je
out
sbb
xor
int3
mov
das
fyl2x
cmp
sbb
jge
jnp
add
dec
daa
ret
fstl
xchg
add
das
push
push
sbb
cmp
mov
mov
int3
xchg
xor
je
in
mul
jge
mov
outsl
xchg
stos
stc
sub
repz
jbe
cmp
xchg
mov
sub
sahf
adc
cltd
mov
icebp
push
push
mov
inc
in
adc
adc
push
push
mov
xchg
mov
mov
arpl
hlt
pmaxub
inc
jp
testb
jnp
into
rcrb
and
aad
xchg
xor
xor
mov
fs
adc
jae
pop
xor
outsl
int3
jae
shll
sub
int3
pop
and
jns
pop
addr16
jecxz
dec
xchg
aas
inc
mov
jmp
lods
fidivrl
mov
sar
fwait
jno
cmpsl
sbb
sbb
mov
pusha
xchg
cmp
sub
nop
movsb
or
xlat
mov
push
adc
adc
xor
inc
or
or
cmp
mov
mov
add
imul
mov
add
scas
in
adc
add
pushf
sub
push
negb
cmp
xchg
sbbb
in
and
mov
into
push
hlt
test
mov
mov
or
lods
push
cmpsb
adc
jb
mov
and
sti
sbb
mov
mov
mov
ret
aaa
mov
dec
mov
push
xchg
in
inc
jne
out
shlb
repz
mov
loop
add
inc
and
adc
xor
shll
pop
sar
js
in
push
aad
fadd
jmp
cmpsb
xchg
aad
add
movswl
inc
dec
inc
inc
push
pop
push
subb
stc
iret
mov
pop
push
dec
cmp
dec
pop
adc
movsb
add
jmp
inc
add
inc
shlb
fisubl
inc
or
das
sbb
or
and
xchg
cmp
or
movsb
or
add
xabort
dec
push
cmp
jl
cmp
data16
rclb
jne
mov
orb
mov
enter
int
aam
jl
das
dec
push
dec
aas
in
mov
jns
dec
mov
iret
sbb
repnz
cld
xor
mov
sarb
hlt
test
inc
fs
mov
and
loopne
test
aas
popa
sti
outsl
in
divl
dec
repz
sbb
movsl
pop
jp
sbb
repnz
dec
xchg
daa
cmc
jno
enter
in
adc
movsb
dec
mov
ret
mov
xchg
pop
mov
sbb
fistpll
and
aam
std
ja
fsubr
jge
jb
mov
test
inc
inc
mov
sbb
xorl
fwait
xchg
enter
fiadds
xchg
fcomps
pop
sti
popf
lret
mov
call
pop
push
iret
push
repnz
add
adc
popf
push
xchg
rolb
xchg
jecxz
mov
pusha
arpl
xor
xchg
push
test
pop
dec
add
push
fwait
xor
pop
inc
insb
mov
gs
add
repz
rorl
and
dec
fbstp
sbb
cs
pushf
fisttps
mov
xlat
loopne
outsb
mov
pusha
add
rorb
dec
mov
add
out
push
ret
in
into
push
mov
push
pusha
jge
loope
inc
pop
lret
sbb
test
call
imul
mov
js
lock
mov
clc
cld
push
mov
scas
out
aas
es
aam
pushl
cmpsb
les
mov
sahf
pop
inc
jg
and
fcomps
push
jmp
js
mov
imul
scas
cmpsl
ret
rcrb
fwait
push
jle
jg
fucomip
test
fimuls
xchg
jb
sbb
sbb
push
aad
mov
pop
cmp
sbb
xchg
dec
add
xchg
mov
push
test
sbb
xchg
adc
jmp
arpl
pop
ss
lock
xchg
jecxz
arpl
outsb
sbb
mov
stos
cmp
xchg
pop
icebp
or
sbb
rcr
jnp
xchg
clc
mov
cmp
shlb
test
sbb
sub
xor
loope
xchg
fbstp
mov
subl
outsl
mov
jp
lods
sub
sbb
or
dec
push
push
inc
call
cli
outsb
inc
dec
aam
jecxz
push
xchg
std
jno
dec
nop
lock
pop
movsl
insb
in
mov
andb
xchg
xchg
pop
mov
adc
or
pop
gs
iret
mov
leave
shl
pusha
pop
dec
add
idivl
in
mov
xchg
rorb
xchg
xchg
mov
shl
pop
scas
sar
dec
std
popf
xorl
scas
cmp
jp
sbb
mull
imul
movsb
dec
loop
inc
mov
je
aas
sti
dec
xchg
imul
add
int3
push
push
and
imul
push
or
mov
pop
xchg
push
mov
adc
push
inc
xchg
ret
test
jbe
nop
iret
dec
loop
mov
shlb
adc
jne
push
push
pop
lret
ljmp
xchg
call
shrb
mov
jl
lds
nop
aam
push
aas
and
mov
cli
sahf
outsb
andl
ret
test
ljmp
test
sahf
sarb
jge
clc
mov
xchg
or
fdivp
addr16
xlat
xchg
fs
pop
je
or
and
sahf
icebp
fwait
adc
jge
dec
xchg
jge
aas
loop
mov
mov
sub
pusha
aaa
negb
mov
aam
sbb
push
or
jp
pop
xchg
mov
xchg
jge
cmpsb
subb
fsubl
mov
or
es
sahf
es
in
push
mov
aad
mov
gs
mov
outsl
orb
mov
or
push
fiadds
scas
addr16
repz
call
aam
cltd
adc
cmc
js
imul
fisubrs
cs
std
stc
scas
cmc
cmp
std
push
mov
jp
pop
not
pop
pushf
bound
fistps
rcr
xchg
xchg
mov
jno
sub
scas
pop
cmpb
fldenv
pop
cld
orb
cmp
xor
or
out
adc
inc
fistpl
out
ret
in
imul
mov
rol
mov
int
xchg
mov
mov
jb
ret
or
fstpl
xchg
test
cmp
test
jo
xchg
rclb
push
pop
pop
xchg
addl
or
stos
lret
out
rorb
cmp
push
push
dec
inc
mov
cmp
mov
jae
sbb
fistpl
cmp
xor
sub
push
jno
xor
xchg
std
fbstp
mov
movsl
es
dec
into
cmp
jns
dec
push
mov
xlat
in
jmp
inc
ss
pushf
cwtl
arpl
sub
arpl
loopne
rclb
push
lods
test
push
fimull
or
jae
jnp
pop
dec
cmp
xchg
sbbb
loopne
imul
xor
jb
and
out
mov
adc
divb
fldcw
jle
stc
push
inc
mov
hlt
push
fldenv
fldlg2
lahf
dec
dec
push
bound
lods
xchg
paddd
mov
lock
cmp
jge
testl
scas
and
sbb
cmc
pusha
test
stos
sub
rcr
adcl
stos
sbb
dec
pop
pop
call
cwtl
popa
lahf
movsb
fildl
movsl
inc
test
mov
and
rcl
mov
pop
sbb
stos
or
outsl
cmpsl
fnstcw
lret
pop
inc
push
clc
adc
int
enter
jp
push
sub
in
pop
pusha
shlb
mov
mov
inc
orl
nop
dec
stos
pop
cmp
loop
jns
pushf
jmp
fdivrp
pop
or
sbb
mov
mov
push
cli
mov
aas
xor
jl
sub
xchg
jg
push
pushf
jg
mov
mov
pop
pop
ficoms
add
cmc
cwtl
dec
fistl
dec
mov
aam
push
scas
loopne
mov
movsb
or
push
add
out
xchg
cmp
fwait
xchg
incb
cmpsb
in
std
fidivs
sbb
mov
push
sub
mov
bnd
xorb
rorl
sbb
fs
add
push
popf
jmp
fdivrl
push
rcr
pushf
inc
inc
jg
sahf
sbb
mov
mov
add
xor
add
jecxz
push
cmpl
pop
ja
cs
xor
in
mov
aaa
cmpsb
cwtl
bnd
xchg
sbb
xchg
sub
cld
xor
jo
and
aam
jge
inc
or
and
pushf
cwtl
test
shll
adc
fwait
test
or
pop
aas
sti
pusha
push
aam
data16
cwtl
and
cmp
pop
into
mov
cmp
aaa
scas
stos
data16
mov
sub
dec
inc
pop
inc
mov
mov
fcmovb
jp
mov
and
inc
xchg
js
add
rcrl
fdiv
pop
sbb
mov
lcall
mov
or
pop
xchg
adc
adc
sbb
push
mov
sbb
push
add
ss
lret
mov
sbb
test
enter
stc
inc
cmp
out
cmp
nop
inc
out
sbb
push
jb
adc
sti
int3
testl
fnstcw
mov
pop
pusha
iret
inc
push
adc
mov
pop
lsl
pop
cmp
movsb
lods
mov
xchg
jl
cli
xchg
push
jl
movsl
rcll
jmp
lahf
xor
mov
aad
ficompl
cwtl
pushf
mov
cmpsl
data16
xchg
pop
sbb
jg
stc
les
mov
adc
mov
pop
sub
inc
add
push
dec
push
inc
xor
test
nop
pop
add
neg
mov
outsb
cmp
mov
push
popa
das
mov
fsubrs
dec
dec
cli
adc
shlb
int
and
movsl
ds
hlt
popa
mov
out
popf
rolb
xlat
mov
jae
mov
fbld
adc
mov
stos
jp
xor
xor
push
jb
xorb
xchg
push
repnz
inc
mov
mov
mov
mov
test
pushf
nop
sbb
out
push
cwtl
stos
xchg
jp
sbb
icebp
out
out
sahf
call
iret
and
arpl
fidivrl
js
js
fidivrl
movsb
push
adcl
adc
mov
push
pop
and
je
xchg
mov
lods
push
imul
mov
xor
jo
fs
push
mov
sub
xchg
cld
push
shrl
scas
test
mov
inc
inc
cmp
mov
sub
lods
ds
out
das
testb
adc
pop
stc
dec
idivb
push
mov
push
xlat
mov
loop
or
sbb
test
adc
shll
repz
fwait
icebp
test
ljmp
mov
imul
iret
test
jns
pop
jge
sbb
adc
sub
aam
lock
sbb
clc
cmp
ret
cmp
arpl
push
add
dec
dec
dec
mov
cmp
mov
cmp
mov
cld
mov
out
hlt
push
jns
out
std
fiadds
fsub
or
fdivl
xchg
mov
and
jecxz
inc
jbe
shrb
das
adc
and
mov
mov
or
adc
hlt
push
fstp
lds
dec
mov
xlat
push
nop
jbe
out
xchg
fsubrl
pop
mov
pop
aad
xchg
fildl
lds
add
push
xor
pop
sbb
pop
add
mov
outsb
push
fdivs
mov
push
cmp
sahf
cmp
dec
outsb
movsl
testl
xor
adc
scas
pop
inc
clc
and
cmp
jae
notb
dec
icebp
repnz
push
in
xchg
pushf
adc
adc
scas
mov
clc
out
pushf
mov
gs
xor
mov
stos
cltd
dec
iret
or
pop
mulb
je
and
test
les
into
fs
sub
push
dec
sbb
arpl
cltd
or
mov
lods
mov
mov
mov
xor
popf
xchg
pop
cmpsb
sbbl
jnp
js
out
movsb
or
cmp
icebp
or
lds
arpl
xor
adc
outsb
cmp
lods
xor
incl
xor
sbb
test
push
mov
rorl
sbb
fsts
mov
sbb
push
adc
mov
xor
push
ljmp
fadds
test
cmp
lret
push
std
outsb
jp
jnp
jecxz
xchg
or
sar
dec
sub
jbe
sbb
lds
and
sub
mov
xor
dec
mov
lea
sarl
pusha
ljmp
popf
bound
add
mov
aam
fnstenv
inc
and
repz
add
movsl
mov
cmp
jge
mov
cwtl
popw
adc
pushf
sbb
in
into
xchg
rcll
lret
iret
nop
mov
imul
divb
adc
and
inc
lds
shrb
and
xlat
sti
mov
dec
dec
fs
mov
scas
idiv
jl
cwtl
pop
call
mov
push
adc
rclb
insl
mov
or
jmp
jl,pn
popl
xchg
das
inc
movsl
adc
xchg
ss
pop
xor
sbb
pop
shll
in
les
inc
shrl
jbe
test
imul
adc
xchg
aas
imul
mov
mov
sbb
sub
dec
pop
lahf
pop
mov
add
fwait
add
and
mov
les
lret
jns
es
test
fdiv
scas
or
loop
push
vunpcklps
movsl
jecxz
loopne
xor
jb
jp
dec
and
and
ja
and
test
pop
or
mov
dec
fsts
sub
mov
fstpt
shrb
xchg
fs
adc
and
or
inc
movsb
jg
pop
or
lock
inc
mov
imul
or
sub
add
sub
fists
ss
out
jo
scas
fcoml
fcoms
cli
insb
out
mov
shlb
fs
mov
cmp
mov
outsl
pop
lock
jmp
jbe
cmc
std
fiadds
ret
shll
push
loop
sbb
mov
jo
lock
test
push
sbb
push
xor
out
pop
ds
xor
mov
jge
shr
adc
out
inc
mov
out
std
jp
mov
movsb
stc
out
sbb
aam
push
inc
fiadds
adc
and
push
mov
mov
mov
cmp
leave
inc
imul
aas
hlt
inc
fisttps
popl
into
lock
and
xchg
pop
pop
xchg
pop
push
movsb
cs
jbe
sub
aas
pop
rep
sbb
push
out
pop
ret
scas
xchg
sub
das
sbb
je
scas
ljmp
iret
xor
push
fistpl
mov
dec
mov
fcoml
out
mov
leave
xor
push
out
imul
sbb
bound
inc
outsl
loop
add
test
and
inc
pop
or
dec
add
and
and
push
sbb
jnp
xor
mov
nop
and
adc
sbb
lret
or
ud0
cmp
fwait
adc
cmp
loope
xlat
hlt
outsb
popa
mov
movsl
mov
loopne
lock
lea
mov
ret
ds
pop
mov
dec
mov
or
pop
jno
pop
mov
or
jecxz
not
ljmp
or
add
sbb
lret
push
xlat
aaa
rcll
push
stos
fisubrl
push
add
mov
in
mov
fldln2
ret
jb
movsb
into
nop
inc
adc
adc
sub
jp
shl
cmp
push
fcoml
sub
lock
inc
enter
adc
push
push
push
and
stos
sahf
test
movsl
stos
mov
daa
mov
shll
addr16
fbstp
inc
pop
or
sub
sbb
jp
add
mov
lods
lock
jne
es
subb
push
addb
jae
or
dec
xchg
fdivr
insl
nop
pop
frstor
push
adc
pop
mov
iret
jno
jns
ljmp
mov
mov
lods
dec
cmp
adc
add
dec
xchg
in
loop
inc
imulb
hlt
or
sbb
xchg
push
cmpsb
push
adc
mov
loope
sbb
sbbb
daa
fisttpl
movsl
xchg
adc
inc
xlat
loopne
jbe
xchg
pop
stos
iret
mov
adc
mov
dec
cmp
xor
mov
lock
push
and
mov
cmpsl
lcall
push
mov
adc
pop
pop
test
jne
nop
inc
rolb
iret
inc
je
dec
or
xchg
jbe
sbb
arpl
mov
stos
cmp
shlb
mov
xor
mov
push
idivl
cmp
cmpl
xlat
mov
cmp
in
push
add
dec
in
in
loop
and
pop
push
pushf
pop
push
aam
mov
mov
pop
and
xor
inc
push
lock
jmp
add
jecxz
mov
lret
leave
mov
lea
jb
popf
mov
es
or
nop
es
mov
stc
or
repnz
rcll
or
out
mov
sarb
mov
jns
bound
sahf
adc
jl
push
cmpsl
jge
push
ds
test
inc
int3
les
mov
je
inc
sbb
dec
andb
mov
cmpsb
inc
ret
xor
outsl
mov
adc
roll
arpl
les
test
lahf
ja
cld
and
push
loope
fmuls
mov
push
jg
xorb
cmpsb
push
inc
sub
dec
xorb
ret
xlat
mov
cmp
bound
movsb
data16
repnz
std
pop
jno
or
cli
iret
dec
cmp
pushl
dec
push
mov
rcrb
loope
lcall
inc
jmp
sub
mov
cmpsb
and
mov
cli
sub
cmp
xor
and
push
pusha
inc
mov
add
lret
mov
nop
jmp
ljmp
stos
int
pop
sti
sub
outsl
sbbb
push
jbe
rorl
add
into
aad
bound
shrb
sub
les
xchg
and
aam
pop
std
cld
popa
mov
xchg
mov
inc
rorb
testl
add
and
add
dec
jns
faddl
out
jno
jo
shrb
cmp
call
jle
push
pop
mov
jne
pusha
pop
xchg
cwtl
addr16
add
in
pop
cltd
icebp
pop
push
inc
adc
sub
dec
stos
mov
popf
dec
push
dec
mov
cmp
adc
and
stos
lcall
lea
cmpb
call
out
inc
movsb
jecxz
test
dec
dec
inc
lahf
pop
ds
pushf
jmp
popa
xchg
push
xchg
mov
ss
test
dec
cmpsl
cmpsb
cltd
mov
xchg
or
mov
mov
cmp
mov
sbb
push
jae
incb
sub
hlt
cmpsb
sbb
das
jnp
ljmp
repnz
push
pop
orl
lods
mov
int3
xor
and
imul
jmp
les
bound
in
out
addr16
sub
popl
shr
lods
fcoml
inc
ficompl
inc
cmp
push
lret
or
lret
cmp
cmp
inc
test
hlt
pop
aam
leave
les
call
pop
adcl
out
hlt
mov
rorl
jle
push
out
inc
je
sbb
icebp
out
add
loopne
rclb
sub
dec
push
mov
adcb
pop
mov
push
scas
mov
xchg
or
sbb
xchg
pop
jae
jp
add
enter
lcall
call
std
pop
pusha
cmp
add
jecxz
pop
push
icebp
mov
shrb
nop
loope
insl
push
lock
fbld
xchg
pop
aas
pop
adc
test
je
jne
push
in
scas
lahf
sbb
cmp
cmp
jmp
adc
ret
lahf
dec
gs
cmpsb
pusha
xchg
das
xor
ja
inc
xor
add
pop
scas
xchg
push
adc
lahf
scas
push
ret
xchg
inc
cld
jg
sbb
sbbl
dec
jp
jnp
jnp
sbb
cmp
pop
jo
es
mov
mov
pusha
xor
sbb
mov
push
dec
rcll
fsubl
popa
fidivrs
push
push
add
jmp
lret
aas
add
sub
mov
bound
ret
pop
push
dec
mov
xchg
xchg
cmpsl
mov
mov
mov
push
js
jb
add
popa
dec
inc
cs
leave
popf
adc
adc
jnp
sub
jno
inc
vmulsd
mov
mov
movsl
inc
sbb
out
pushw
cmp
push
xor
in
stos
addb
mov
fincstp
add
outsl
cmc
fdivl
jb
mov
scas
pop
scas
pop
inc
lods
adc
int3
aam
mov
sbb
pop
push
pop
sti
jb
data16
sub
jp
and
cmp
lods
out
sbb
fwait
pop
sub
mov
add
jge
cmp
cs
xchg
mov
in
out
shlb
stc
add
lock
in
mov
pop
shll
xlat
int
and
xchg
xchg
std
cmp
in
jno
mov
mov
push
scas
mov
test
xchg
fidivs
xor
in
jns
jno
and
orb
xor
mov
cmpb
js
mov
mov
xchg
push
fimuls
mov
jns
stos
test
pop
mov
cld
sbb
add
jne
inc
jg
fimull
lea
test
push
leave
into
in
cltd
lret
hlt
adcb
lods
in
je
stc
jg
cmpb
sbb
adc
pop
adc
mov
xor
das
lcall
cld
mov
and
cltd
ljmp
jle
push
test
xchg
insb
and
fwait
inc
stos
repz
fs
mov
imul
out
sub
xchg
lret
or
inc
xor
mov
mul
sahf
int3
dec
into
aas
jnp
sub
cmp
test
loopne
mov
negl
arpl
sbb
mov
ret
data16
mov
outsl
in
imul
js
and
mov
daa
xor
inc
sbb
adc
sub
jo
sti
call
ret
xchg
xor
sub
jne
xorl
pop
mov
mov
stos
test
je
add
xchg
xchg
or
js
mov
dec
aaa
lcall
in
add
ljmp
or
ljmp
cwtl
fiadds
int
inc
pop
sbb
xor
inc
in
lret
mov
xor
pusha
ja
push
int
push
mov
and
int
add
cwtl
adc
ret
sbb
shll
mov
ret
imul
inc
in
mov
shll
in
das
adc
inc
xchg
into
xchg
mov
inc
subb
ret
mov
add
in
and
sbb
adc
push
pushf
outsb
hlt
movsb
and
push
cmpsl
xchg
or
jnp
rcrl
test
lods
add
sub
cli
pop
mov
dec
cmp
loop
sbb
lahf
xchg
mov
insb
cs
adc
cli
out
pop
jns
scas
outsl
pop
xchg
mov
sbb
adc
lcall
lods
test
rcr
inc
sbb
jbe
dec
clc
ja
mov
cmp
aas
mov
dec
or
dec
insb
js
popa
insl
sub
jo
in
ds
mov
in
jb
jno
popa
fs
enter
movsl
add
pop
fistpl
sahf
js
adc
push
or
add
xchg
int3
pop
in
outsl
adc
xchg
lcall
jl
add
dec
cmp
rcrl
loope
pop
outsb
out
inc
adc
popa
aam
pop
loop
xchg
pop
jge,pt
inc
mov
in
cmpsl
dec
mov
adc
je
mov
push
je
imul
movsb
dec
xor
adc
int3
int
fnsave
fcoms
inc
loope
leave
notb
pushf
xchg
adc
aas
and
notl
xlat
or
push
daa
jns
push
jg
add
inc
ret
inc
addr16
sbb
sbb
fistpll
inc
mov
rclb
mov
xor
stos
jb
mov
repnz
pop
pop
jmp
clc
mov
jecxz
dec
mov
data16
xor
sahf
and
jmp
iret
mov
andl
xchg
jge
adc
xor
cmp
push
cmp
stc
mov
xchg
das
xchg
mov
lods
or
xchg
rorb
mov
fimull
cli
or
shll
mov
popa
push
ljmp
sbb
push
cltd
xor
jnp
add
sub
adc
cmp
mov
xor
ja
pushf
js
jg
mov
dec
lea
je
adc
jns
mov
fmuls
lock
push
aaa
pop
cs
mov
push
xor
sub
rorb
cltd
push
mov
fcomps
fldt
loop
aaa
sbb
arpl
xor
add
inc
jp
icebp
lahf
and
pop
lds
jmp
lret
flds
loopne
xchg
int
add
fmull
cmpsb
fs
or
aaa
mov
ret
ds
sub
xchg
aam
mov
movsb
fdivrp
xorl
div
out
sbb
xsaveopt
cmpl
shr
test
sub
jo
sub
add
push
sahf
pop
mov
outsl
leave
ret
push
rorl
lds
rol
nop
pop
sbb
push
sub
push
in
inc
or
cmp
fdivr
xchg
dec
inc
and
and
adc
test
jl
push
push
std
test
pusha
adc
adc
add
pushl
mov
mov
xchg
dec
sub
xchg
movsl
cmp
sarl
arpl
cmpsb
ret
arpl
mov
out
fmull
sbb
cmp
clc
dec
ss
aad
push
mov
lock
inc
in
mov
push
in
sub
cmp
push
xor
mov
or
stc
popa
inc
or
je
jmp
mov
mov
pusha
or
adc
xorb
add
pop
sub
jnp
mov
outsb
adc
cmp
repnz
adc
xchg
mov
cmpl
add
ss
xor
pop
stos
and
in
stos
mov
imul
pop
rorl
dec
and
xchg
enter
inc
test
iret
mov
js
popf
int3
fsubrs
push
nop
dec
fsub
in
mov
inc
sbb
pop
fidivrs
add
ds
sub
rsm
lock
lret
mov
hlt
movsl
jle
insl
pop
inc
test
push
mov
inc
push
lret
popf
add
or
fistl
loopne
mov
sbb
fwait
mov
insl
inc
mov
shlb
mov
cmp
mov
jb
pop
jae
push
std
cmp
loop
and
das
stos
popa
pop
fsts
js
sbb
mov
ss
int
pop
mov
cmp
xchg
mov
scas
inc
cli
mov
cs
lds
xor
pusha
in
mov
mov
push
cmp
das
cmpsb
rcl
pmullw
iret
or
insb
ljmp
jno
cld
or
mov
stos
add
mov
popa
stc
xlat
and
inc
cmp
xchg
jae
test
pop
int3
scas
pop
push
aad
int
lcall
scas
addr16
xor
imul
dec
test
push
and
lods
jb
cltd
sub
mov
xchg
movsb
xor
lret
pop
out
cmp
imul
pop
push
out
jae
lods
mov
popf
mov
mov
adc
and
jo
lahf
and
lcall
daa
add
dec
add
push
ffree
outsl
dec
ret
push
lods
mov
xor
fwait
add
ljmp
aas
sub
pop
ds
mov
sbb
stos
mov
test
imul
pause
push
aad
lds
fsubr
xor
repnz
add
push
jns
out
sub
lahf
lods
fimull
and
dec
and
scas
pop
out
xchg
pop
pop
push
idivl
mov
push
out
add
inc
idivl
jle
dec
aad
mov
pop
cs
pop
and
popf
adcb
insb
xchg
inc
xor
lods
or
fwait
inc
adc
lea
mov
sbb
xor
sahf
inc
imul
cmp
cmp
sub
cld
daa
jp
sbb
mov
cld
addr16
test
bound
pusha
push
dec
cmp
adc
mov
dec
imul
xor
push
mov
adc
xor
mov
fbstp
xor
cmp
xchg
sbb
xchg
xor
shr
das
out
push
rclb
push
pop
test
adc
fstpl
pusha
mov
adc
add
mov
insb
cwtl
shrb
fmul
or
ds
mov
sub
test
aad
add
addl
mov
jmp
jno
ljmp
aas
sbb
in
sbb
insl
arpl
js
imul
lea
ret
in
not
aad
mov
pop
dec
mov
inc
insb
cmp
std
test
aad
and
out
mov
push
dec
jae
inc
cmp
jns
cld
jmp
loop
test
fisttpl
repnz
fstl
popf
mov
mov
dec
push
pop
push
jg
idivb
outsb
out
add
jg
push
repz
sbb
or
xor
xchg
jl
cmp
cmp
lcall
mov
mov
hlt
test
and
fwait
mov
fbld
xchg
push
cmc
push
out
sahf
aam
lahf
xor
fcomp
ret
mov
pop
mov
outsb
sub
pop
lock
fsubrs
loop
xchg
push
mov
cwtl
sub
outsl
nop
test
lret
aad
rorl
mov
aam
test
js
xchg
adc
ja
xchg
dec
mov
push
rcrb
adcb
in
orl
gs
inc
rcr
outsb
js
lock
insb
lahf
add
cmp
xor
mov
loope
repnz
test
xlat
sbb
das
stc
scas
lret
pop
andl
fdivs
and
test
ja
jae
fs
fwait
repnz
loopne
jp
dec
out
repz
popa
outsl
out
cmp
sar
or
cmp
pusha
js
icebp
mov
sahf
jecxz
aaa
push
pop
xchg
repnz
imul
or
mov
sbb
jae
test
pusha
fucomp
loopne
pop
cmp
out
or
daa
and
pop
push
dec
cli
hlt
mov
js
call
adc
repz
cmpsb
mov
cmp
xchg
imul
outsb
out
mov
jl
stc
ficoms
sub
pop
sub
push
std
or
popa
pushf
inc
call
mov
mov
sahf
dec
repz
aaa
popf
imull
ficomps
and
dec
mov
push
pushf
and
push
lea
popa
stos
xchg
jbe
lcall
call
loopne
loope
cld
cmp
scas
jecxz
and
mov
pop
lds
sbb
push
cmp
scas
sahf
add
and
add
cmpsl
mov
and
ficompl
test
xor
add
shrb
dec
xchg
mov
inc
add
xchg
bound
mov
ljmp
mov
enter
dec
adc
in
imul
test
arpl
fdivr
mov
push
sti
mov
das
int
stos
or
cmp
push
inc
bound
in
imul
je
add
mov
jl
and
roll
insb
push
jbe
hlt
mov
dec
out
aad
xor
mov
stos
xchg
ljmp
cwtl
cmp
mov
dec
insb
imul
push
mov
jo
pop
mov
push
jbe
dec
shrl
pop
cwtl
adc
jle
xchg
lret
push
sti
imul
sbb
inc
adc
adc
add
sub
pop
or
bound
popf
mov
pushf
dec
dec
xor
cmpsb
xor
cmp
xor
repnz
mul
dec
scas
lds
lds
fisubrs
nop
leave
jecxz
mov
shll
push
into
inc
cmp
adc
jecxz
into
sbb
lods
push
es
fldt
mov
flds
push
inc
mov
xor
or
cmpsb
mov
pop
mov
jno
mov
dec
imul
gs
mov
leave
inc
lretw
mov
dec
outsl
cmp
ret
sub
and
jmp
mov
mov
and
ret
xchg
imul
jp
inc
ja
mov
aam
shrb
hlt
jmp
movsl
xchg
stos
jne
inc
sete
loopne
fdivrl
xor
int
sub
shl
imul
cmp
sahf
mov
and
loop
add
mov
dec
aaa
dec
push
sub
mov
sbb
sub
jno
dec
mov
mov
pop
das
xor
aam
push
fidivl
aad
pop
test
xchg
cs
insb
movsb
movsb
aad
sarl
out
pop
mov
cli
xchg
jmp
pop
jno
iret
insb
xchg
xor
loopne
idiv
ljmp
cwtl
jecxz
mov
sahf
lret
cmp
pop
andb
xor
leave
enter
xchg
sub
sarb
rorb
sahf
adc
fs
mov
adc
mov
call
aas
je
adc
test
mov
mov
mov
jae
int3
dec
or
enter
xor
les
mov
nop
int
xor
xor
inc
inc
into
mov
mov
repnz
repnz
ret
lahf
and
stc
fildll
push
ret
jge
mov
pusha
mov
dec
and
shl
js
inc
jo
addr16
call
lahf
dec
sbb
dec
int
and
inc
adc
push
enter
pop
idivl
jl
xor
sub
or
jns
push
ja
push
pop
stos
push
test
call
inc
xchg
mov
jge
lds
sub
dec
in
scas
popa
ljmp
sbb
js
fcom
adc
jbe
cwtl
xchg
nop
xchg
push
lods
shlb
pushf
cmpsb
cmp
mov
loop
aad
cmp
dec
and
cwtl
mov
repnz
fistl
icebp
cld
and
adcb
out
jp
xchg
jns
das
daa
push
repnz
outsb
nop
movsl
cwtl
pop
mov
std
test
cmp
or
flds
loope
inc
inc
leave
inc
bound
decb
and
lcall
aas
cmc
mov
xchg
pop
mov
popa
gs
push
push
jecxz
ror
mov
inc
rclb
sarl
mov
dec
fidivs
pop
mov
shll
xor
rcrb
xor
sbb
pop
scas
sub
jp
test
dec
outsl
xor
mov
and
mov
movsb
icebp
dec
cwtl
cld
mov
xor
jb
xor
sub
pushf
pop
xchg
loop
ss
dec
xlat
or
adcb
jne
jl
jmp
in
sbb
mov
and
xchg
das
pop
les
mov
inc
xor
sub
in
xor
jmp
stos
jae
rcr
jmp
fisttpll
push
mov
bound
xchg
pop
imul
enter
aam
xlat
and
jnp
push
inc
mov
and
push
inc
rol
insb
hlt
push
notl
cmc
sbb
enter
add
or
xor
je
ljmp
int
divl
mov
fldenv
xchg
or
std
and
aaa
mov
es
xchg
xlat
in
or
mov
xchg
jnp
popa
addb
icebp
mov
and
xor
mov
es
imulb
popf
mov
push
sbb
mov
jmp
or
jbe
stos
sbb
inc
ficoml
push
sbb
mov
add
dec
push
mov
jle
xchg
bound
jno
mov
cmp
das
repz
sbb
cmp
pushl
jb
lock
push
xchg
push
sub
mov
mov
adc
addr16
test
imul
inc
mov
movsl
or
std
movsb
movsl
xchg
push
mov
inc
add
jnp
icebp
sub
aam
jmp
inc
cmp
and
inc
pop
rcrb
and
fdivrs
hlt
xchg
imul
dec
cs
ds
pushf
mov
lds
in
pusha
scas
mov
pop
nop
imul
loope
pop
dec
xchg
sysret
mov
mov
mov
stc
push
rclb
and
fadd
xchg
aad
add
lods
jnp
adc
hlt
scas
das
int3
sbb
mov
inc
add
mov
lahf
inc
aas
push
or
mov
ja
dec
cmp
lcall
xchg
push
push
mov
add
mov
xchg
imul
insb
xchg
outsb
mov
test
stc
nop
jle
sub
test
xor
popf
mov
push
add
popa
xchg
mov
mov
push
popa
insb
int3
std
mov
mov
mov
sti
scas
ss
jbe
stc
insl
stos
out
or
mov
mov
shl
jo
daa
adc
shll
sbb
sbb
pusha
rcrl
das
es
lcall
fildl
xadd
pusha
sahf
cmc
sub
jle
xchg
mov
arpl
fisttpll
arpl
gs
sbb
xchg
cwtl
popf
mov
xor
jecxz
nop
aaa
xor
es
aam
xlat
jp
jmp
pop
pop
cli
fdiv
cmp
movsl
mov
mov
sbb
addr16
adcb
pop
fstl
jp
shll
push
mov
jne
push
lret
shrb
cmp
sub
cmpsb
pop
inc
or
mov
sbb
jne
inc
sbb
test
cltd
or
cmc
out
mov
xchg
mov
sub
lret
out
imull
mov
sbb
js
xor
icebp
in
int3
lods
testb
fmull
fucom
pop
push
dec
jae
cmp
mov
xchg
nop
data16
xchg
bound
jno
lret
test
mov
out
cmp
lea
mov
adc
push
jbe
hlt
cmp
xlat
sti
lds
loop
popf
lret
js
rclb
int3
pop
push
inc
sub
into
mov
inc
fwait
mov
ror
gs
and
push
test
xor
shrl
jp
and
sub
mov
mov
cmp
push
mov
cmp
jge
xor
stos
cmp
rcrl
je
xchg
jb
out
mov
repnz
pop
jns
dec
and
or
lds
call
push
push
xchg
dec
inc
or
sub
sub
mov
jmp
and
stos
sbb
jmp
cmc
rep
lock
xchg
push
lods
xor
stc
fsub
rolb
adc
mov
outsl
cmp
outsb
mov
out
bound
dec
popa
ljmp
push
test
cmpsb
mov
cmp
fists
mov
outsb
rcll
shl
adc
jns
js
inc
mov
jne
das
test
and
and
pop
jne
ja
mov
adc
in
cltd
and
sbb
push
push
push
push
xchg
fwait
jns
pop
push
sbb
mov
mov
icebp
scas
cmc
das
jg
test
insl
inc
insb
popa
mov
mov
insl
and
cmp
cmpsl
mov
inc
leave
and
jns
inc
jmp
xchg
int
mov
sahf
mov
mov
fs
xor
mov
cmp
sbb
or
xchg
hlt
imul
push
pop
add
lret
shll
xchg
fst
xchg
in
imul
inc
movsb
xchg
repz
in
ds
mov
in
pop
roll
sub
pop
mov
sbb
cmpsb
call
in
andb
mov
stos
popa
mov
pusha
dec
ds
or
pop
xchg
cmp
push
pop
iret
cmp
lods
stos
xchg
mov
cmpsl
push
xchg
icebp
test
cmp
bound
loop
clc
loop
xlat
je
cmp
add
bound
xchg
insl
mov
xchg
mov
sbb
popf
and
outsb
fdivrl
mov
push
adc
or
jae
insl
and
mov
pop
push
inc
mov
les
ljmp
push
out
rcrb
rclb
push
inc
pushfw
mov
push
push
adc
cmpsl
cmp
xor
ss
pop
ljmp
dec
rcll
cmp
stos
mov
and
xor
adc
mov
xor
in
movsl
lret
test
push
je
insl
mov
ret
repnz
sbb
jnp
ret
jecxz
into
outsb
inc
mov
push
cmpsb
fisttpl
adc
sti
inc
jno
ds
mov
fidivrs
es
adc
enter
or
mov
popa
xor
or
mov
stos
push
lods
cmpb
aas
inc
dec
int3
push
lods
daa
sub
std
scas
jmp
inc
movsb
adc
mov
scas
js
lahf
sti
adc
leave
mov
in
push
pop
mov
cld
mov
ljmp
cmpb
sub
scas
dec
jno
xchg
addr16
popa
inc
push
mov
mov
push
dec
call
bound
lock
mov
rcll
or
addr16
cmp
and
aad
enter
jp
sbb
xor
jmp
out
inc
outsb
and
insl
inc
out
das
push
lods
cli
xchg
xchg
into
pop
pusha
xor
cmpsb
mov
inc
mov
xchg
add
subb
test
jae
cmp
dec
insl
sbb
and
out
das
hlt
aas
insl
movsb
and
test
inc
outsb
push
nop
xor
mov
sub
sub
mov
inc
je
aas
pop
andb
adc
cmpl
mov
dec
test
mov
push
pushf
rorl
push
and
ljmp
inc
adc
sbb
in
sbb
sub
rcl
mov
mov
dec
insb
imul
mov
data16
leave
hlt
adc
jl
enter
sbb
mov
cs
scas
cmp
inc
xchg
icebp
mov
popa
xchg
fucomp
loope
cltd
out
lahf
xor
mov
loope
pushf
dec
xlat
jge
inc
aas
jo
in
les
mov
loop
lahf
popa
inc
dec
sbb
push
int
mov
lds
inc
test
das
jp
and
test
lahf
pusha
xor
gs
jl
add
movsl
xlat
xchg
mov
aas
mov
insb
xchg
sbb
lcall
in
pop
mov
pop
sahf
adc
and
js
push
adc
xor
movsl
sbb
xchg
mov
pop
inc
cmp
int3
loope
pop
in
pop
jl
mov
xlat
xor
jmp
in
sbb
xor
jbe
loop
xlat
cmpsl
fwait
out
repz
in
pop
xchg
pop
add
stc
test
call
mov
incl
cmp
bndstx
jl
hlt
insl
and
inc
out
or
and
mov
lret
lods
aad
aad
vaddsd
xchg
je
sar
sahf
inc
aad
xlat
add
dec
dec
xor
add
in
xchg
aas
pop
cld
xchg
or
xchg
sub
lods
sbb
push
enter
scas
arpl
loopne
cmp
inc
std
add
adc
out
out
mov
scas
enter
inc
imul
lea
push
gs
xor
xor
xlat
push
jo
es
gs
mov
int
and
js
pop
aaa
mov
stos
ret
lea
pusha
mov
inc
cmpsb
xchg
sahf
push
cld
mov
mov
cmp
cmc
adc
inc
add
ds
pop
jge
inc
popf
std
jecxz
movsl
pushf
rorl
adcb
adc
movl
jle
sub
outsb
fsubrs
jle
adc
and
mov
jnp
add
xchg
notl
xchg
xchg
jecxz
imul
pop
out
insb
ret
arpl
lret
lcall
arpl
inc
pop
test
xor
sub
cmpsb
insl
rcr
loopne
mov
sbb
adc
aaa
adc
call
lea
loop
fildll
icebp
int
es
scas
inc
lods
int
pusha
aaa
sbb
lea
jmp
mov
mov
rorb
jg
stos
xchg
cmp
ja
clc
int
dec
jno
int3
sbbl
dec
sbb
inc
inc
jo
push
and
adc
mov
cli
jg
xchg
mov
push
iret
stc
fbld
mov
pop
lret
jl
iret
xor
push
ret
leave
or
jg
test
loop
add
cmp
daa
and
stos
mov
push
xchg
pop
push
mov
dec
cltd
jbe
out
push
cmpl
jge
aad
mov
fstps
lock
cmp
je
jl
movsl
test
int3
sbb
mov
clc
and
test
sbb
push
adc
loope,pn
push
jns
xorl
or
nop
inc
mov
xchg
aaa
adc
push
mov
sar
push
jp
jmp
mov
out
sbb
adc
daa
or
and
pop
sub
jo
arpl
xor
repz
movsb
push
addr16
xchg
lret
adc
pop
jle
pop
and
je
insl
outsl
mov
jne
sbb
test
jl
hlt
add
add
repz
lods
and
jo
ja
jns
mov
and
out
inc
xor
mov
negb
add
dec
sbbb
mov
in
hlt
sbb
pop
shlb
and
pusha
cmpsb
or
or
iret
mov
into
das
pop
xchg
dec
insb
dec
int3
test
xlat
mov
push
stos
or
pop
jns
hlt
movsl
shl
shl
stos
xor
loope
pop
lock
xchg
sbb
or
xchg
jno
and
outsl
mov
jno
push
adc
fbstp
icebp
imul
outsb
mov
cmpsb
pushf
jmp
push
pop
sarl
push
cmp
cmp
pop
or
cmp
xchg
xchg
cmp
leave
stos
fcoms
sub
and
pmulhuw
sbb
popf
sbb
mov
hlt
push
jae
pop
xchg
repz
mov
aaa
push
mov
repz
pop
shlb
sti
imul
gs
insb
lds
ljmp
mov
and
ret
fistpll
fiadds
scas
dec
out
pushf
pop
pop
movsl
in
cwtl
add
xchg
xor
or
lds
or
mov
push
les
mov
out
test
negl
mov
pop
or
orl
or
into
adc
pop
das
mov
fdivl
dec
and
inc
jecxz
fs
icebp
push
pop
cmp
sub
cmp
xor
popf
int
mov
sub
push
negb
iret
pop
jle
cld
shlb
pop
xchg
jmp
pushf
and
and
dec
mov
cmp
nop
push
adc
loopne
push
add
shl
dec
mov
pop
adc
sbb
pusha
push
inc
jns
insb
inc
hlt
call
mov
cld
call
pop
aaa
lock
xor
xor
bound
je
outsb
fs
lea
lcall
pop
cmp
push
fadd
ljmp
add
mov
mov
aam
aad
stc
push
mov
mov
call
movsb
cld
mov
cmp
in
enter
cmp
mov
xor
dec
es
ds
cmpsb
cltd
popa
aas
xlat
scas
add
cmp
dec
cld
outsl
jp
and
xor
pop
adc
sbb
jne
jmp
mov
jb
loope
bound
push
insb
mov
pop
lahf
sub
pop
sbb
mov
jb
rolb
mov
mov
ja
cmc
out
inc
jmp
sbb
aad
pop
rorl
cmpsb
pop
shl
outsb
mov
adc
test
or
inc
inc
pop
inc
int3
mov
inc
xchg
adc
jbe
or
loop
xchg
mov
mov
test
cmp
popa
add
repnz
push
mov
cmp
loopne
dec
cmp
cmp
and
jne
push
sub
dec
les
jg
ss
aam
lods
loop
sub
test
rorb
mov
cmp
jle
or
or
xor
jmp
out
imul
in
jnp
xlat
stos
aaa
shl
mov
xchg
data16
into
add
xchg
pusha
fnstcw
adc
mov
push
rolb
sar
mov
xchg
out
mov
pusha
jbe
cwtl
mov
fistl
cli
sub
pop
cli
cmpb
stos
ja
sbb
les
repnz
mov
xchg
loopne
jb
jb
mov
cld
inc
or
aas
push
outsl
dec
std
push
es
push
icebp
lock
out
pop
xchg
xchg
loopne
or
adc
mov
jp
mov
jnp
push
adc
pop
push
div
les
stc
iret
cwtl
fwait
lahf
mov
push
or
mov
xchg
lea
adc
xchg
loope
pusha
and
xchg
jo
and
add
insl
scas
hlt
les
test
insl
jnp
movl
lds
clc
inc
lahf
sbb
ds
sub
cmpsl
xchg
test
push
mov
scas
lods
pop
pop
xchg
daa
sub
xor
dec
ffree
xchg
aam
and
xchg
daa
pop
jno
cmp
inc
movsl
arpl
mov
js
ret
in
or
jge
push
jae
mov
pop
aas
repnz
dec
fs
ljmp
ret
adc
out
mov
call
lds
push
mov
ljmp
xor
mov
nop
jle
testl
sub
push
push
nop
cmpsl
lcall
enter
dec
mov
popf
or
aam
mov
icebp
mov
enter
rcrl
shll
lahf
dec
stos
lock
sbb
dec
and
fwait
xor
outsb
test
aam
add
mov
xchg
push
aaa
outsb
push
mov
mov
shl
push
cmp
jecxz
xor
test
lods
mov
ficomps
xchg
cmp
xchg
sub
cli
fcoml
pop
test
pop
imul
dec
mov
scas
pop
aad
push
mov
jmp
mov
sub
jne
movsb
std
sub
lahf
or
aaa
inc
sub
or
push
insb
jmp
cmp
test
stos
jp
xchg
lea
in
push
sub
test
push
nop
test
fisttpl
sti
push
jp
fucom
sub
std
jne
or
mov
or
sub
jno
aad
push
adc
pop
nop
cmc
add
fistpll
pop
xchg
jecxz
cltd
sub
ret
push
and
add
fstp
cld
int
nop
mov
xor
shll
or
adc
xchg
lds
mov
or
adc
lret
lahf
sbb
aad
add
cmpsb
lret
cmpb
fidivs
stos
xor
xor
and
icebp
pop
aam
mov
cmp
jno
cmp
ja
ror
mov
pop
movsl
and
test
pop
lahf
dec
es
mov
xchg
lods
jp
adc
stc
outsb
adc
mov
insb
stc
or
stc
stc
mov
scas
cmpl
inc
mov
icebp
sub
xchg
test
xchg
shll
orl
aaa
jmp
mov
leave
add
iret
mov
mov
xchg
dec
movsb
xor
cmp
jmp
aam
pop
arpl
aaa
push
in
jl
sub
cmp
add
aas
loopne
mov
cld
or
cmp
and
dec
mov
cli
and
mov
out
xorb
lods
dec
test
cmp
dec
mov
dec
jg
stos
push
sub
cld
xor
icebp
xchg
dec
scas
add
mov
cwtl
dec
push
jg
pop
popf
loop
imul
inc
push
scas
test
mov
jno
sbb
lea
fwait
in
mov
gs
daa
or
outsl
sbb
push
pop
dec
push
outsb
neg
insl
dec
repz
adc
add
cmp
adc
je
dec
mov
inc
mov
cmp
in
mov
test
fwait
mov
stc
sbb
xor
scas
add
cmpsb
lcall
xor
pop
xchg
add
inc
inc
cmpsb
mov
aas
pop
jnp
inc
cmp
test
cmp
int
jge
mov
mulb
loope
std
int3
push
mov
orb
or
mov
loopne
push
scas
lock
mov
xchg
arpl
in
pop
adc
sub
scas
sub
mov
out
and
fisttps
pop
in
mov
inc
data16
sub
shl
in
popf
push
lahf
or
jmp
adc
push
in
push
iret
das
push
adc
mov
mov
pop
or
popa
mov
fwait
jp
dec
push
mov
inc
and
sarb
lods
sahf
out
or
movsl
pop
push
lret
mov
jns
cmp
push
dec
cmp
dec
out
repz
outsl
jo
addr16
and
out
jmp
pop
js
push
jnp
mov
out
dec
and
movsb
xor
outsl
shl
in
rcll
int
add
lods
mov
push
sub
aaa
adc
sbb
outsl
scas
sbb
xor
mov
or
or
xor
mov
push
lds
xchg
sbb
jb
xor
ret
adc
mov
enter
sbb
sub
push
sbb
jle
push
pop
push
add
negl
push
test
out
inc
nop
js
mov
push
push
sbb
and
outsl
stos
push
lret
jecxz
iret
addr16
ja
test
jl
into
inc
fistps
sbb
and
lahf
test
mov
negb
cmp
btr
stos
pop
sbb
sub
inc
aaa
push
adc
arpl
push
mull
mov
je
add
lock
xchg
inc
lds
jmp
push
pop
nop
sbb
rcrb
xchg
arpl
iret
and
scas
or
fistpl
add
or
subl
repnz
mov
mov
push
and
sbb
out
xchg
and
mov
fstps
mov
stos
pop
cli
filds
test
xor
mov
mov
insb
out
pop
sarl
icebp
dec
jg
fistpl
push
push
sbb
push
cmp
test
insl
repz
jmp
inc
jmp
das
and
jno
mov
mov
or
xor
pop
iret
pop
mov
xor
jge
jns
in
pop
in
cmp
inc
scas
sti
cmp
or
movsl
cld
cli
stc
ljmp
sti
shlb
ret
jecxz
test
push
repz
xor
lret
mov
sbb
xlat
adc
insb
xchg
inc
mov
cld
xchg
jns
push
movsl
and
sbb
les
adc
cltd
fdivl
cmpsb
dec
imul
shlb
fdivl
test
push
mov
iret
cmp
xchg
mov
arpl
inc
psadbw
sbb
mov
mov
xor
or
xchg
pop
cmp
adc
mov
hlt
or
test
xchg
push
mov
or
push
xor
test
popf
jbe
mov
push
sbb
push
in
jmp
mov
orl
mov
test
fnsave
push
fwait
arpl
pop
push
incl
dec
mov
dec
push
loopne
mov
sub
dec
xor
lock
fstps
sbb
mov
mov
pop
xchg
cli
gs
xor
filds
sbb
nop
outsb
leave
clc
or
lods
ss
xchg
mov
xchg
cmpsb
push
out
cmp
jo
mov
sub
scas
fdivrl
enter
add
pop
inc
pop
shrb
loop
cmp
test
inc
cmpb
pop
pop
dec
test
cmc
mov
cmp
mov
loopne
sub
ret
xchg
fnsave
pop
movsb
int
jnp
lock
push
cmpb
cli
lahf
negl
xchg
inc
int
ficoml
mov
adc
neg
add
aaa
dec
fs
loopne
pop
sbb
xor
mov
mov
xor
push
pop
xor
jmp
inc
jecxz
sub
lret
je
dec
xchg
xchg
out
repz
imul
in
jno
outsb
add
sahf
movsb
movsl
cmpsb
js
iret
mov
outsb
ficompl
lds
adc
movb
cmp
ljmp
pop
dec
mov
fbstp
jns
fdivs
dec
outsl
jge
fucomi
xor
sub
lret
and
paddusw
mov
orl
aam
lods
jae
rcll
icebp
repnz
ret
jno
jg
int3
enter
jge
mov
test
movsl
fisubs
movsb
aas
push
std
sub
jo
push
imul
push
xchg
cmc
movsl
push
push
push
lahf
es
lds
outsl
mov
std
cmp
xchg
pop
jne
test
ljmp
sub
mov
iret
inc
pop
mov
and
jge
mov
inc
cmp
sarb
bound
push
clc
pop
xor
sbb
addr16
mov
in
stc
mov
dec
out
jl
pop
pop
add
daa
test
bound
dec
push
pop
inc
xor
xor
inc
jp
adc
cmp
dec
shrb
adc
mov
mov
in
mov
adc
ficomps
int
fimull
cmp
adc
out
into
lods
push
xor
loopne
or
test
fstpl
sub
xchg
enter
leave
dec
std
sub
inc
jnp
cld
xor
jge
lods
ret
lock
cld
dec
pop
dec
push
mov
imul
push
sub
or
rcl
shll
mov
je
shrb
pop
pusha
push
aam
or
or
rolb
mov
xchg
push
out
bndldx
jno
aad
dec
aaa
lea
and
mov
test
out
dec
aas
xor
test
divb
ljmp
xorl
mov
cmpsb
sahf
xchg
mov
in
mov
icebp
cmp
orb
mov
xor
pop
nop
cmpsl
push
cmp
or
inc
call
sub
mov
or
aaa
sub
mov
pop
nop
test
inc
lret
add
arpl
cli
insb
movsb
loopne
cmpsl
inc
insl
rcr
lea
std
int3
xchg
jle
or
cmp
movsb
faddl
push
lock
dec
ss
or
cmp
outsl
lods
int3
out
insb
and
and
ror
testb
movsb
dec
ret
adc
dec
push
cmpsb
add
enter
ljmp
loope
and
lods
icebp
out
adc
lock
xor
jne
lds
pop
mov
push
cmp
or
adc
or
adc
movb
adc
loope
mov
mov
mov
popf
fidivrl
and
push
xor
jae
jae
jb
pop
or
and
int3
mov
gs
cltd
dec
xor
or
push
enter
xor
pop
js
mov
mov
gs
xchg
icebp
popf
enter
inc
pop
je
arpl
loop
inc
jo
repnz
sub
aaa
sbb
loope
hlt
int3
shlb
xchg
imul
cmp
cmp
std
je
mov
push
lock
inc
stc
icebp
aaa
sbb
repz
or
dec
jb
test
mov
mov
jecxz
es
or
sub
xchg
rcr
addr16
popf
xchg
dec
int
mov
push
repz
loop
or
mov
xchg
outsb
sbb
mov
xchg
sbb
mov
repz
xchg
out
mov
cltd
fdivs
divb
dec
mov
dec
dec
std
sbb
pop
push
stos
pop
push
mov
call
push
ficoml
jne
aad
bound
jecxz
clc
insb
rcrl
or
push
cwtl
int3
aad
xor
or
int
mov
sub
arpl
jge
inc
unpcklps
xor
pop
jmp
fistpl
add
cmp
push
repz
sub
outsb
rcll
testb
push
xor
cmp
or
cltd
lods
lret
icebp
xchg
xor
dec
xchg
fldt
jp
add
lret
push
mov
dec
mov
imul
pop
pop
cli
ret
loope
idiv
pop
dec
adc
sahf
pop
jno
ds
pop
addr16
or
popa
ds
lds
ss
pop
in
out
rcr
lds
xchg
jne
pop
cs
sbb
or
cmpsb
cmpsb
cli
mov
int3
enter
loop
sbb
pop
sbb
das
cmpsb
out
push
mov
xor
push
jmp
and
add
fistpll
mov
mov
adc
into
insl
dec
adc
fidivrl
daa
mov
pop
mov
shrb
mov
push
adc
pop
cli
cmp
repz
ja
xor
mov
ret
jp
cmc
nop
rclb
and
ret
sahf
aaa
xor
push
loopne
stos
movsb
sbb
lods
ret
mov
ror
imul
sbb
xor
out
sub
outsb
fcomps
popa
pop
fwait
xchg
lret
fwait
push
jl
or
out
fstpt
in
xor
fmuls
sub
xor
cmc
or
imul
cmpsb
jns
and
insb
mov
mov
mov
aam
les
flds
stc
or
mov
sbb
sub
mov
sbb
dec
xor
imul
arpl
add
jecxz
pop
cmp
mov
add
xor
addl
lock
sub
pop
lahf
in
sbb
cli
pop
mov
in
incl
and
push
ljmp
xor
mov
and
aam
cmp
xor
data16
and
mov
add
inc
sub
and
int3
icebp
adc
pop
xchg
mov
stc
or
cmp
test
and
rclb
xchg
test
or
or
jmp
inc
push
data16
push
push
adc
lods
bound
jb
xor
push
insl
jb
lods
ret
jnp
pusha
and
cld
push
and
popf
sbb
dec
sub
adc
sub
rolb
mov
and
movsb
xchg
jo
pop
and
cmpsb
sub
in
inc
xchg
loope
in
into
arpl
sub
call
movsl
dec
xchg
mov
pop
fnstcw
mov
sub
ret
mov
mov
addb
cmpsl
adc
nop
movsb
insl
dec
and
xchg
jno
nop
mov
sbb
jg
cwtl
fs
mov
mov
cld
repnz
sbb
or
cmpsb
dec
rolb
push
xor
leave
inc
imul
divl
lock
test
imul
int3
cmc
outsl
cmp
mov
sbb
pop
es
clc
stos
lock
xchg
clc
mov
sub
mov
pusha
jb
cmp
das
fnstsw
aad
cmp
stos
call
les
in
pop
lods
pop
cmpsl
sbb
lret
test
and
jp
xor
jo
jns
push
outsb
adc
hlt
in
pop
movsb
or
divb
imul
sub
jl
adc
sbb
xor
inc
pop
je
je
mov
cmpb
or
jae
repnz
jecxz
aad
xchg
fisubl
pop
mov
cs
out
pop
sub
inc
stc
xchg
cwtl
add
sub
push
subb
into
push
lahf
ret
outsl
dec
jle
sbb
ss
adc
jmp
push
mov
sub
mov
cmpsb
aad
test
out
sub
int3
roll
sbb
sub
pop
sub
ud0
fs
out
pop
push
ds
negb
cmp
pop
leave
mov
fistpl
fisubrs
sbb
mov
xchg
sbbl
nop
xchg
jge
mov
inc
cmc
scas
xor
leave
and
cmp
cmpsb
or
xchg
inc
mov
sub
sti
loope
insl
movsb
fs
pop
adc
pushw
aas
cld
lret
in
sub
push
mov
stc
data16
int
fnstsw
fwait
or
popa
push
imul
out
mulb
pop
icebp
add
jmp
cmp
popa
xchg
in
mov
jne
dec
pop
push
adcl
sub
scas
xor
mov
clc
mov
mov
std
or
push
add
dec
imul
pop
stc
lods
jo
and
loop
adc
jno
jae
or
outsl
mov
stos
roll
jne
jg
gs
or
mov
jo
mov
inc
cmp
popa
adc
pop
out
push
fcoml
sbb
pop
ds
xchg
je
in
mov
push
xchg
inc
into
jo
popa
pop
popf
xor
inc
dec
adc
mov
pop
cmp
negb
dec
cmp
mov
or
and
cmp
cmpsb
sbb
jne
inc
lret
popf
inc
dec
movsb
sbb
cld
test
ljmp
call
rorl
cmp
mov
in
push
push
mov
add
pop
pop
in
cmpb
pop
rorl
sbb
jb
dec
push
jo
out
adc
fdivs
xchg
lods
out
push
mov
jecxz
pushl
testb
jnp
jb
add
pop
xchg
lret
adc
mov
test
bound
jg
imul
xchg
xor
xchg
imull
sub
sub
cmc
test
dec
or
cmp
cltd
idivb
call
adc
aad
lahf
pop
dec
adc
xchg
jp
xchg
pop
ret
fdivrs
rol
scas
pushf
push
add
cmp
xchg
jle
imul
sub
adc
call
and
cmpl
adc
xor
dec
pop
gs
mov
xor
ja
push
dec
add
mov
xchg
push
out
add
in
or
sti
add
mov
adc
inc
push
xchg
mov
lds
cwtl
and
cmc
std
dec
sbb
ffree
pop
inc
push
imul
inc
add
out
daa
insb
fcmovne
fistl
sbbb
cmc
jecxz
ds
stos
sbb
sub
lret
cwtl
lods
mov
mov
in
mov
out
or
es
cmpsb
loop
pop
push
xor
push
mov
mov
adc
roll
test
inc
in
mov
pop
fxch
arpl
js
fwait
sbb
xchg
mov
jmp
add
insl
dec
bound
jecxz
ja
and
and
xor
push
imul
push
adc
sbb
pop
add
pop
fs
mov
rcrl
push
sbb
rorb
mov
dec
call
pop
std
add
lcall
ror
dec
adc
xchg
sub
add
call
in
dec
pushf
pop
inc
lcall
mov
std
nop
or
ss
add
gs
lcall
gs
add
cli
cmpsb
or
lea
repz
icebp
xchg
clc
sub
cmp
xchg
mov
pop
pop
sub
cli
aam
rcrb
pop
addr16
cmc
jl
lock
xchg
inc
push
mov
popf
subl
rolb
mov
cwtl
or
mov
cli
or
gs
sub
test
sbb
mov
aas
push
adc
jbe
add
dec
imul
imul
pop
and
adc
xor
sti
sahf
xchg
mov
shl
adc
int3
xchg
lock
fildl
mov
in
inc
js
pop
mov
xchg
jecxz
insb
xchg
jae
pop
aaa
pusha
or
lcall
mov
sub
stos
pop
push
outsl
daa
mov
mov
pop
push
mov
mov
les
std
mov
into
push
jg
mov
xor
data16
out
pushf
notl
mov
arpl
adc
xchg
sbb
stos
adc
into
nop
adc
test
pop
lea
cmp
movsl
daa
lea
jnp
dec
mov
test
fs
mov
inc
lcall
lods
into
push
and
sahf
inc
or
and
notb
pop
out
ljmp
sub
jnp
dec
pop
xchg
int3
adc
mov
lahf
jp
mov
arpl
test
comiss
inc
and
fisttpl
adc
inc
xchg
adc
fdivr
addr16
and
adcb
jecxz
ds
jbe
lock
mov
repz
and
inc
inc
sbb
sbb
push
sub
or
sub
jl
pop
lods
add
push
push
or
sbb
push
lahf
xchg
loopne
xchg
in
inc
and
call
cmc
push
add
inc
inc
or
pop
shlb
pop
mov
jno
sbb
movsl
dec
lea
cmpb
ror
jle
clc
mov
xchg
mov
repz
pop
cmp
mov
dec
movsb
or
pusha
inc
imul
dec
mov
inc
stc
in
inc
or
mov
jg
repnz
jecxz
pop
jl
and
adc
pushl
int
sbb
fldt
pop
sub
aad
inc
dec
inc
outsl
dec
fildl
jbe
ljmp
or
insl
xlat
jmp
fiadds
sar
mov
cld
mov
xor
push
push
mov
add
mov
inc
cmp
shr
sub
jmp
aam
pop
xchg
nop
xlat
divl
lock
shlb
inc
cwtl
lods
nop
dec
es
jne
pushf
push
test
jns
clc
mov
dec
lahf
fadds
fsubrs
fstpt
cmp
add
xchg
movsb
mov
mov
mov
cltd
jns
mov
repnz
sub
sub
cmp
jno
stos
push
bound
test
jge
jae
pushf
ljmp
aas
jg
inc
mov
loopne
movsl
push
xchg
and
pop
lret
add
jge
push
roll
outsb
lcall
xor
out
lahf
pop
inc
and
pop
xor
jmp
add
lret
lret
add
test
stc
fists
popa
add
push
mov
iret
imul
lahf
pop
mov
pop
push
and
xchg
shrl
jl
lods
in
inc
icebp
cs
dec
add
lock
jno
pop
xchg
push
pop
icebp
jns
cld
pop
movsl
call
pop
push
adcl
fcmovbe
les
out
fcmovb
inc
dec
sbb
js
movsl
bound
push
lods
dec
pushf
mov
xchg
add
js
or
jae
pop
and
ror
push
mov
mov
test
outsl
cmc
xchg
push
insb
sbb
or
add
xor
lods
ret
addr16
dec
adc
push
call
ja
cmp
inc
push
mov
rorb
pop
addr16
rcrb
push
cli
sub
xor
cmp
loop
pop
or
ja
push
sbb
repz
scas
scas
sahf
popf
scas
dec
or
pop
mov
or
in
scas
inc
lea
inc
mov
mov
out
jnp
dec
sahf
and
mov
or
dec
movsb
and
pop
fimull
nop
arpl
push
jbe
push
lret
push
adcb
roll
lcall
cld
add
call
punpckhdq
dec
popl
andnps
add
inc
enter
test
push
sahf
test
lret
clc
out
and
ret
jno
jle
mov
sub
cld
andl
jg
and
mov
sbb
aaa
add
ja
jecxz
movsb
push
out
repnz
outsb
add
push
bound
das
and
push
pushf
xchg
mov
mov
add
push
movsl
lods
out
jle
out
jb
cli
ret
and
mov
mov
in
stos
dec
dec
out
std
add
repnz
sbb
in
mov
sahf
test
mov
lret
in
fscale
mov
adc
ds
jb
pop
icebp
imul
fidivrs
outsb
jecxz
jge
push
mov
mov
jmp
cmp
insl
add
fmulp
xchg
xlat
and
imul
ffreep
cmp
imul
jmp
inc
scas
out
leave
sbb
mov
pop
ret
nop
clc
mulb
inc
adc
dec
cmp
xor
movsb
add
pop
cs
cltd
sbb
dec
sysenter
inc
ffree
test
or
add
in
out
ds
std
xor
bound
out
sub
insl
add
dec
loope
jmp
and
cmp
insb
stos
arpl
out
sub
mov
and
push
mov
jmp
sub
test
pop
xchg
pop
insb
imulb
cmp
fwait
shrb
pop
xor
inc
push
cld
and
loopne
test
add
sti
test
cwtl
addl
adc
push
mov
cltd
cld
or
xchg
in
or
pop
ret
mov
add
or
outsl
dec
push
xchg
sub
das
iret
mov
push
mulb
aas
push
cmp
jb
lds
lret
push
sbb
mov
or
gs
xchg
fcoml
or
lahf
add
dec
int
push
cmp
mov
ret
je
rorl
push
fidivrl
push
jnp
mov
cs
out
addr16
adc
mov
mov
xchg
rcll
pop
gs
mov
and
bound
in
popa
add
or
int3
mov
or
fmull
js
and
inc
sub
shl
out
out
ror
fwait
testl
scas
fdivl
pop
mov
mov
cmp
cmp
leave
push
int3
je
sub
ficoms
xor
xchg
add
adc
pop
mov
clc
fbld
mov
jb
out
int3
fsubr
cmpsl
push
jg
sub
in
fsubs
or
mov
xchg
cwtl
push
pop
and
or
lcall
jmp
dec
adc
and
xchg
add
iret
inc
push
adc
inc
test
sub
inc
testb
je
xchg
fstp
dec
rol
fs
daa
imul
sub
in
cli
or
daa
dec
jp
in
mov
sub
mov
ljmp
mov
aad
les
jl
cmp
cmp
lods
dec
mov
mov
dec
cli
cmp
cmp
and
xchg
mov
pop
stc
dec
popa
jns
imul
in
mov
cmpl
jb
pop
mov
das
gs
fwait
imul
push
sarl
cmp
sbb
and
dec
xlat
repnz
inc
repz
loope
jno
inc
mov
fistpl
lock
arpl
mov
daa
fnstsw
add
cmp
dec
add
cmp
movsb
mov
dec
popf
cmp
push
pop
or
or
pavgw
stc
lea
cld
lahf
fs
ffreep
nop
mov
cmp
push
aaa
mov
enter
mov
test
andl
pop
and
mov
jge
mov
xchg
inc
xor
dec
lahf
mov
or
dec
push
mov
or
scas
icebp
cmp
loop
pop
test
dec
rorb
push
shrb
loopne
loop
add
fsub
mov
inc
lds
mov
insb
adc
jp
pop
rclb
dec
sub
xorb
push
aam
sub
aam
es
inc
jbe
in
xorb
cmp
cmpl
ss
mov
dec
add
xchg
std
sbb
testl
fsubrs
aas
jp
cmp
scas
ret
inc
mov
lret
aas
push
cmpsl
mov
push
mov
mov
mov
inc
dec
fadds
test
and
mov
sbb
jge
ljmp
pop
pop
decl
sub
sahf
insl
mov
mov
push
fabs
mov
dec
mov
mov
sbb
ljmp
imul
aas
push
push
or
mov
aad
popa
jmp
jmp
sub
mov
mov
shrb
adc
repz
mov
lcall
in
je
int3
add
pop
out
and
fadds
cmp
push
jge
rcl
xor
mov
cmpsl
dec
mov
xor
xor
jmp
fcmovnbe
push
lods
or
sarl
out
adc
xchg
and
aaa
lcall
pop
inc
sbb
loope
rorl
cwtl
enter
sub
or
mov
add
inc
das
loope
roll
push
aas
cmpsl
mov
xchg
dec
inc
sub
adc
jns
sbb
call
sti
rcrb
ret
add
aaa
stc
insb
ret
stos
dec
dec
in
subl
ljmp
shrb
mov
push
mov
push
sub
sub
aad
xchg
fiaddl
ss
clc
pop
in
mov
fadds
mov
mov
mov
mov
bnd
jb
inc
aas
push
mov
sahf
dec
inc
insb
sub
xor
push
sbb
push
mov
rolb
jp
jle
clc
adc
je
mov
mov
bound
lcall
cs
cltd
pop
adc
xchg
pop
xchg
cmp
fs
aam
inc
stc
add
addr16
xchg
int
out
push
inc
dec
cmp
mov
fs
mov
mov
mov
cmpsb
jbe,pt
push
pmaxsw
jp
cmc
mov
inc
mov
outsl
out
lock
xorb
imul
in
jmp
cmc
pop
dec
mov
daa
mov
mov
jp
das
and
inc
sub
pop
mov
addb
lret
enter
jg
jne
cmpsb
cmp
or
push
push
cld
int3
pop
mov
hlt
mov
mov
push
pop
push
aas
jg
in
gs
ja
cmp
cltd
sub
xchg
mov
fwait
int
cmp
ja
cmp
fimuls
outsl
jns
inc
out
pushf
sbb
jmp
sub
ret
lock
adc
aam
xchg
jge
in
mov
les
pop
sub
cs
cmpsl
and
inc
cli
das
adc
iret
inc
lods
andb
jne
xor
repnz
andb
jns
xchg
addr16
repz
cmc
lea
outsb
dec
sbbl
and
dec
in
sbb
movsl
in
out
mov
add
not
into
sbb
or
cmpsl
das
push
adc
int
inc
repz
xor
call
aad
add
insb
movsb
insb
ss
arpl
mov
lcall
mov
push
movsl
ss
repz
xorl
jns
pop
mov
aam
jnp
push
ret
ret
lcall
test
aam
mov
movsb
sbb
rclb
ds
dec
cs
xstore-rng
cmpsl
xchg
rcrl
lret
ljmp
mov
aas
hlt
int
mov
lcall
lcall
push
jle,pn
adc
and
sbb
mov
sbbb
push
jb
adc
sbb
cmp
pop
clc
xchg
pushf
mov
aam
xor
popa
sub
push
scas
push
dec
jno
lret
popf
jmp
aad
push
scas
jne
mov
mov
xor
sub
jmp
dec
sub
loopne
pop
out
jno
sti
sbb
sbb
dec
out
xlat
xchg
fdivp
mov
mov
dec
mov
stc
cmp
in
add
decb
test
mov
int3
fwait
lret
pushf
jb
cmp
adc
mov
dec
xor
outsb
icebp
sbb
inc
adc
add
jns
jne
divl
push
imul
push
push
lods
js
call
rorb
testl
cmp
mov
adc
jmp
inc
push
xorb
sbb
loop
cld
test
and
push
pop
xchg
xchg
adc
jl
out
add
lods
xchg
out
or
fstpl
ss
pop
ja
js
movsl
movsl
mov
mull
or
dec
or
sbb
dec
sbb
ja
sbb
mov
pop
data16
leave
jo
mov
sbb
xchg
fwait
icebp
in
dec
mov
shll
push
icebp
cmp
ljmp
jb
or
jns
arpl
shll
fstl
inc
scas
jno
push
out
pop
pop
sti
cmp
or
or
pop
lcall
js
les
sub
roll
sbb
lret
jg
pop
pop
mov
push
cltd
dec
mov
fldl
or
inc
inc
sub
call
push
sub
push
add
mov
xor
lret
lock
mov
or
ds
xlat
mov
notb
aaa
in
lret
dec
xchg
and
sbb
adc
fnstcw
xchg
pop
mov
test
mov
test
dec
iret
jb
test
xchg
ss
push
xchg
dec
std
mov
cmpb
or
out
jb
mov
mov
mov
inc
mov
fdivs
test
sbb
out
push
pushf
daa
mov
notb
test
mov
mov
cmc
pop
inc
jp
mov
outsl
lret
push
push
cmp
andl
mov
xchg
and
push
xor
nop
and
fs
repnz
sub
xchg
scas
cmp
bound
adcl
jl
mov
mov
out
dec
pop
lds
or
scas
call
ret
xchg
scas
xor
dec
add
fwait
and
cwtl
mov
lret
and
or
aaa
repnz
cwtl
inc
dec
cltd
xor
inc
jl
fisttpl
mov
lret
adc
cmpsb
movsl
adc
inc
xor
pop
xor
cmp
jo
mov
int3
movsl
repnz
je
add
scas
subl
fildll
sahf
sub
insl
push
xor
jo
pop
popa
jge
scas
mov
out
scas
lret
push
xlat
or
lods
sqrtps
push
cmp
pop
xor
lock
mov
adc
js
mov
push
add
enter
ret
xchg
mov
in
into
adc
adc
mov
fadds
dec
scas
std
icebp
sub
test
add
xor
cltd
jmp
jno
out
out
nop
stos
jns
jg
mov
les
push
lea
fdivrl
push
loope,pt
aam
mov
inc
adc
xlat
push
mov
mov
xor
repnz
fsubl
es
xor
mov
out
adc
arpl
xor
mov
mov
sub
ja
loopne
jo
in
inc
idivb
xchg
dec
sbb
mov
std
dec
adc
arpl
dec
ret
cmp
hlt
fimull
fistpl
sbb
jl
push
mov
lds
pop
inc
in
adc
call
loopne
mov
stos
fs
mov
jnp
cmp
and
ljmp
mov
cli
fstpl
sbb
fidivs
imul
ss
jbe
scas
stc
ret
mov
out
cmp
inc
jge
imul
and
pushf
sahf
nop
insl
lret
repnz
jl
push
xchg
cmp
jo
mov
or
xor
push
mov
inc
inc
scas
adc
or
push
lock
imul
jmp
xchg
int
jmp
jp
insl
mov
inc
sahf
movsb
dec
call
pop
dec
cmp
xchg
or
stos
sbb
lock
bnd
jo
loop
mov
push
lret
inc
mov
mov
rolb
sbb
push
je
jecxz
adc
sbb
jecxz
adc
cmpsb
inc
mov
insb
fcomip
mov
jbe
cltd
fildl
sub
xchg
data16
sbb
sbb
sbb
inc
icebp
sbb
aaa
or
and
jo
pop
enter
push
nop
xchg
cwtl
aas
out
in
shr
jno
sahf
add
xchg
push
xchg
adc
jae
jge
and
js
mov
jg
sub
stos
push
outsb
daa
insb
faddl
rorb
pop
xchg
addl
cmp
sbb
imul
jnp
xor
xchg
clc
sti
push
jo
sub
cmp
pop
fxch
int3
adc
mov
xchg
loopne
ret
enter
add
push
push
fwait
enter
nop
or
xlat
cltd
shrb
fadd
xor
daa
aaa
movsl
mov
xchg
add
or
mov
out
lods
xor
sti
pop
mov
fwait
inc
cwtl
gs
add
and
or
es
push
pushf
sbbl
mov
ret
pop
xchg
fsubp
xchg
mov
mov
pop
out
cmc
push
jl
imul
mulb
jnp
pop
jg
dec
sub
jo
jnp
and
jno
inc
jbe
jge
fistps
mov
sbb
imul
enter
inc
mov
add
push
test
pop
cltd
mov
inc
test
in
fisubrs
decb
les
sarb
sub
mov
dec
jbe
jo
or
lea
xchg
ja
outsl
pop
gs
or
inc
inc
repz
push
cwtl
shll
xchg
xchg
xor
sub
mov
inc
stos
sbb
xchg
mov
dec
sbb
xor
inc
mov
outsl
std
jb
mov
cmp
jb
js
pop
cmc
cs
add
or
in
mov
test
jge
int3
imull
mov
push
xor
add
mov
cmpsb
enter
out
pop
hlt
sbb
stos
sub
and
cltd
popf
test
dec
icebp
mov
pop
sarb
aas
out
or
aas
dec
add
lods
test
add
xchg
xchg
iret
pop
repz
scas
mov
andps
mov
loop
push
cmp
ret
cmp
cmp
loop
jp
and
xlat
sti
cmp
pop
popa
clc
mov
xlat
add
mov
lcall
mov
inc
ds
xor
inc
flds
test
sub
mov
out
lods
mov
xor
push
xchg
adc
mov
lods
cwtl
loopne
dec
mov
neg
in
int
sub
lock
mov
jp
mov
cmp
xchg
sahf
dec
jmp
mov
daa
inc
clc
inc
mov
fstpt
mov
mov
cmc
push
and
out
sbb
shl
repnz
jge
add
fld
hlt
movsb
mov
jecxz
rolb
imul
jp
repnz
inc
addr16
or
xor
fs
mov
and
fsubr
popf
inc
stos
les
and
xchg
mov
dec
push
mov
repz
jp
jecxz
mov
adc
out
cwtl
inc
adc
push
das
mov
or
insl
cmp
dec
jbe
adc
in
or
loop
mov
ret
in
adc
adc
fstpl
insb
aaa
jle
pusha
pop
jmp
sub
testl
push
out
icebp
cs
nop
add
or
mov
xor
adc
idivl
push
loope
outsb
cli
int
pop
push
push
jae
addl
sub
in
adc
pop
xchg
mov
lcall
pushf
jb
xchg
cmpsl
xor
add
dec
gs
cmp
bound
mov
mov
aas
sbb
out
push
rclb
outsl
add
aas
in
in
enter
xchg
jl
clc
inc
ja
sahf
outsl
xchg
inc
cmp
adc
dec
and
cmpsb
mov
dec
jle
xor
pop
jb
and
in
mov
in
pop
pushf
aam
pop
pop
cmpsb
xchg
cld
lods
test
jge
hlt
sar
das
mov
cmp
sti
push
jae
call
mov
frstor
or
mov
daa
cmpb
mov
mov
insb
ret
lds
jns
mov
fists
pushf
pop
gs
insl
ljmp
arpl
mov
inc
mov
das
inc
xor
jl
addr16
add
into
xchg
ds
aaa
inc
inc
jge
je
lret
cmp
xor
das
aam
add
push
adc
aaa
ds
mov
int
js
mov
test
xor
sub
adcb
adc
test
clc
xorb
pop
das
push
loop
push
out
sub
sahf
mov
dec
divl
add
sub
stos
xor
dec
jl
fwait
xor
push
jb
jbe
addr16
adc
push
dec
call
mov
mov
mov
in
ljmp
inc
push
xchg
call
lret
stc
dec
xor
sub
pusha
popa
aad
pop
xchg
add
cmp
or
xchg
add
scas
cmp
pop
packuswb
dec
shl
orb
dec
push
mov
push
dec
fildl
rorl
mov
mov
mov
je
mov
pop
push
shlb
add
stos
mov
repz
and
ds
sub
pop
test
cmp
cmp
push
out
hlt
ds
adc
fildl
pop
inc
inc
push
pushf
jbe
mov
xchg
add
add
clc
sbb
popa
xor
xchg
cmc
and
sbb
or
fcoms
arpl
cmc
mov
in
fs
adc
push
mov
in
mov
jmp
bound
mov
pop
jns
or
movsb
mov
inc
out
xchg
lods
add
ret
mov
int3
insb
out
push
sub
outsl
dec
cmp
shrb
divl
shrb
sub
notb
call
mov
fcmove
pop
mov
xchg
pop
sahf
xor
je
sub
mov
int
dec
sbb
addl
lds
xor
push
scas
mov
pop
sarb
aaa
adc
inc
std
mov
stos
fdivrs
sbb
testb
pop
orl
frstor
stos
es
fsubrs
into
loopne
add
aas
ret
cmc
inc
jmp
jg
aaa
pop
lret
and
push
pop
outsl
andl
fbstp
jb
nop
mov
mov
pop
mov
xor
fwait
add
pop
lret
andl
ret
and
loop
mov
gs
dec
rorb
cs
xor
ja
xchg
inc
xor
enter
cmp
in
mov
jb
jbe
popf
movsb
imul
cmp
inc
fsts
fdivrl
mov
and
dec
xor
mov
loopne
inc
dec
into
fisubs
pop
repz
dec
stc
daa
dec
mov
fidivl
vmwrite
mov
push
xor
ljmp
int3
rcrb
xor
inc
je
mov
cmp
out
jnp
nop
int3
clc
in
xchg
clc
aas
ljmp
test
push
out
inc
cmc
mov
sub
sbb
lcall
xor
jno
bound
loopne
pop
jecxz
inc
testl
repnz
mov
inc
fadds
cmc
retw
mov
mov
repz
lret
aas
mov
push
adc
mov
loope
mov
jb
stos
cmp
pop
pop
fcomip
mov
cld
ljmp
lock
popf
push
ja
or
push
push
mov
sub
flds
jo
mov
dec
mov
xchg
addr16
add
in
dec
test
sub
pop
mov
push
test
mov
arpl
add
mov
pushf
sub
mov
mov
ss
xor
test
jl
add
push
mov
faddl
stc
sub
cli
xchg
sub
imul
pushf
adc
lea
mov
loop
icebp
std
pop
or
and
mov
fst
gs
std
jb
xlat
push
mov
dec
pop
cmpsb
popa
push
shlb
pop
fisttpll
insb
sub
cmpsb
pop
pop
fnstsw
jecxz
mov
push
popa
xchg
sahf
cld
adc
gs
mov
jbe
pop
pop
jmp
xchg
inc
cltd
cmpsl
adc
sub
fstps
addr16
dec
aad
xor
pop
lret
mov
hlt
loopne
inc
mov
jne,pn
or
or
cmc
pop
jl
inc
xor
mov
jbe
add
shrb
or
mov
xor
adc
sahf
out
lcall
or
jmp
fimull
sahf
cmp
cmp
cs
push
xor
pusha
lret
aas
xchg
vmovups
dec
aaa
int
movsb
hlt
movsl
cld
push
scas
orb
jno,pt
movsb
test
fstl
jmp
dec
stc
rcll
fsubrs
leave
mov
movsl
push
das
fadd
fiadds
popa
sahf
divb
xor
mov
and
xchg
pop
and
mov
pop
lea
push
roll
jle
stc
push
rolb
enter
cltd
sti
loopne
nop
xchg
xor
xor
sub
xchg
jmp
pop
lret
push
shll
scas
test
out
adc
jae
xorl
adc
addb
call
aas
add
mov
inc
call
dec
mov
fiaddl
int
orl
pop
add
js
dec
addl
mov
lahf
mov
fs
shlb
dec
ljmp
sbb
pop
cmp
sub
sub
mov
xchg
stos
sub
sub
jno
aaa
inc
jle
mov
jb
out
sub
sbb
or
sti
fidivl
cs
std
fcomps
sbb
nop
inc
adc
popf
inc
jecxz
arpl
rcrb
mov
push
stc
jnp
pop
insl
push
aam
outsb
js
push
shlb
mov
mov
addr16
in
mov
incl
leave
into
lret
push
sbb
int
push
lret
push
clc
jo
call
in
mov
push
cmp
pop
pop
not
adc
bswap
mov
jmp
js
inc
es
jp
mov
mov
fidivl
jns
scas
mov
jae
mov
lds
movsl
addr16
xor
lea
pop
push
aam
jne
std
fldcw
adc
jo
mov
jmp
add
clc
adc
add
pop
es
arpl
je
and
loopne
mov
or
inc
jl
imul
xchg
and
fnstcw
add
mov
out
repnz
je
cmpsb
inc
and
mov
add
xchg
test
mov
pop
jecxz
data16
sub
or
sar
adc
xchg
xchg
pop
out
cli
pop
jb
push
add
ss
out
jmp
pusha
aaa
or
xor
ficomps
push
ret
sub
pop
fcomps
clc
sub
aad
mov
and
mov
inc
stos
sub
mov
or
aam
loope
cmp
movsl
out
inc
aaa
add
mov
cmp
adc
cwtl
les
outsb
add
test
jmp
inc
xchg
es
jno
int3
adc
std
stos
push
inc
adc
or
lods
inc
out
xchg
das
aam
enter
and
xchg
sbb
sti
in
add
pop
test
mov
std
jle
shll
mov
xchg
mov
sahf
negl
fsubs
lcall
jo
inc
jae
inc
mov
add
je
adc
cmp
jge
mov
pop
mov
jp
xor
sub
sub
cwtl
mov
cld
and
add
lcall
cmc
jne
push
add
test
je
lcall
mov
ret
aam
jae
dec
xor
cmpsl
mov
ss
test
xchg
std
push
loop
ss
jp
insb
in
mov
dec
rcrw
mov
pop
and
or
xchg
outsb
clc
mov
shl
mov
mov
cmp
adc
sub
push
adc
jb
push
cmp
adcl
pop
mov
inc
xor
or
sbb
test
jae
jle
cwtl
xchg
out
out
or
or
pop
adc
push
dec
pusha
mov
stc
mov
xor
das
loop
hlt
or
inc
cltd
mov
imul
sbb
pushf
dec
loop
pop
sub
jle
movsb
dec
rorl
dec
fs
push
pop
add
setne
cmpsb
sbb
lret
sub
xor
loop
cli
mov
inc
push
or
jbe
hlt
sub
das
sahf
xchg
add
out
inc
jg
out
sbb
mov
push
iret
icebp
dec
jo
cmp
jnp
scas
xchg
imul
add
cld
sbb
cmp
iret
xlat
sbb
testb
lahf
dec
cmpsl
or
stos
push
adc
lods
and
addr16
and
jo
mov
arpl
inc
dec
mov
in
into
in
sub
xchg
lea
cmpsl
pop
mov
xchg
xchg
push
test
clc
popa
fsubrl
add
adc
enter
jnp
sub
sbbl
js
adc
out
call
adc
sub
test
or
lds
cli
jo
mov
pop
pop
aas
pop
ds
mov
mov
mov
cmpsl
xchg
mov
mov
inc
ret
shr
bound
pop
push
sbb
mov
dec
aas
pop
daa
push
popa
jno
cmp
push
fists
out
mov
cmp
out
sbb
pusha
jge
lods
fidivl
popf
aaa
dec
shll
mov
or
mov
sbb
jb
add
or
outsl
sbb
cwtl
jge
fs
sbb
xor
femms
mov
or
movl
insb
push
sbb
in
jb
loop
mov
or
inc
lea
mov
and
mov
adc
data16
push
cmp
test
adc
mov
dec
ss
jae
xchg
enter
out
adc
push
out
inc
shlb
and
pop
outsl
lcall
mov
xlat
add
popa
jecxz
iret
mov
fs
adc
and
popf
cs
mov
cltd
inc
cmp
xchg
cs
loop
jp
fnstcw
fs
mov
and
cld
adc
mov
or
sub
adc
int
push
std
rol
pop
imul
iret
inc
ja
inc
jns
mov
pop
ss
scas
es
xchg
pop
je
jge
add
pop
sbb
div
inc
arpl
dec
pop
mov
ja
mov
ljmp
cld
add
ds
stos
cltd
and
cmp
xchg
fucomip
clc
pop
add
mov
jmp
pop
fs
mov
stos
pop
in
loopne
pop
outsb
scas
and
mov
ljmp
jge
fcomps
dec
cmpsb
shrb
dec
add
or
dec
or
mov
cmp
test
imul
movsl
adc
mov
out
stc
and
or
and
or
insl
cmp
pop
mov
out
xchg
jb
dec
or
add
aas
rol
mov
pop
lock
lahf
cmova
fidivl
ficompl
push
aam
gs
in
cltd
mov
sarl
repnz
adc
push
aas
push
hlt
rep
test
lds
jl
test
jns
jo
fs
movsb
and
cmc
inc
out
je
scas
mov
mov
stos
cltd
into
pop
xor
in
jp
cli
xchg
test
or
jp
mov
jo
test
jbe
jns
imul
stc
scas
in
cmp
dec
pop
or
pop
push
shl
call
push
push
xchg
jp
outsl
xchg
xchg
mov
das
out
fucomp
dec
sub
outsb
mov
movsb
xchg
jl
je
xchg
pop
pop
mov
loopne
lds
fadd
loopne
mov
jp
imul
negb
imul
movsb
ljmp
rcr
shl
jo
sahf
stos
ret
push
xchg
movsl
xor
mov
cld
lods
push
push
scas
sub
push
lahf
jecxz
lea
sub
xlat
popf
mov
les
push
add
xlat
mov
dec
scas
sub
mov
mov
cli
dec
mov
xchg
xchg
sahf
movsb
rolb
shlb
dec
addr16
cmp
test
lret
fdivrl
iret
jno
jg
pop
les
test
fsts
or
out
adc
enter
sub
mov
les
dec
jo
adcl
mov
lods
xor
jg
jb
and
pop
mov
ja
dec
xchg
jg
scas
jo
push
in
ffreep
xchg
sub
push
adc
outsb
mov
movsl
call
std
xor
ja
pop
stos
aas
ljmp
xor
sbb
call
loopne
clc
outsb
adc
fimuls
rclb
in
xchg
scas
pop
xchg
add
xchg
sti
sbb
out
adc
xchg
xchg
hlt
and
andb
aam
daa
loopne
dec
inc
sub
pop
int
push
call
add
push
inc
movsb
pop
aam
fcmove
and
into
imul
dec
pushf
gs
xor
test
dec
loopne
imul
in
pop
fdivp
adc
and
mov
into
pop
pop
jbe
pop
orl
xlat
imul
jp
ret
out
push
inc
dec
dec
adc
and
cli
gs
inc
xor
insl
cmp
je
inc
xchg
push
or
int3
lcall
and
outsl
in
sbb
pushf
inc
into
or
pop
ja
imul
shl
lea
inc
inc
push
mov
mov
arpl
pop
popf
push
outsb
cmp
faddl
sbb
nop
sbb
std
push
or
stos
mov
rep
pop
enter
cmp
faddl
mov
mov
icebp
push
addr16
lcall
sbb
mov
mov
xor
cmp
dec
inc
jnp
gs
int
scas
mov
pop
cmp
outsb
in
nop
repnz
pushf
cld
jo
push
cmp
xchg
scas
pop
inc
lcall
mov
push
inc
xor
ftst
arpl
push
inc
aaa
jae
ja
pop
sub
mov
cmp
xchg
pushf
push
int3
mov
add
dec
addr16
test
leave
das
xlat
mov
out
enter
in
js
add
sub
jge
fidivrl
xchg
inc
cld
jbe
repz
cli
packuswb
and
sar
fildl
dec
jbe
mov
test
lock
js
imul
mov
into
cmpsl
jne
or
xor
cmp
mov
lods
aas
jb
lock
mov
mov
xor
lcall
insb
xor
push
jecxz
push
lcall
adc
pusha
mov
pop
inc
pop
and
js
cmp
mov
in
xor
andl
jmp
and
lcall
xor
mov
cmpsb
jmp
push
jp
bnd
inc
sub
inc
adc
jae
mov
push
shll
movsl
mov
pop
rolb
fisttpl
push
jb
mov
xor
bound
stos
clc
jmp
sbb
add
mov
push
push
pop
sbb
fnstenv
xchg
lods
push
imul
dec
fucomp
es
sar
scas
mov
ss
jl
mov
in
cli
shl
xchg
inc
sub
int
fildll
fldt
or
xchg
sub
mov
dec
inc
sbb
adc
icebp
push
mov
jns
insl
test
sbb
lahf
leave
mov
sbb
push
test
cmc
jge
aas
std
arpl
and
ljmp
adcb
movsl
btc
inc
mov
ret
mov
mov
dec
pop
add
xchg
jo
scas
rcrb
xchg
das
jl
lea
lcall
add
push
daa
pop
mov
js
clc
sub
jp
adc
mov
pusha
stos
test
jae
ds
lods
pop
les
xchg
cmpsl
cmp
push
dec
sbb
inc
push
int3
and
sbb
es
mov
stos
fisttpll
cli
inc
aam
xchg
lcall
and
push
and
and
add
mov
add
jno
adc
hlt
imul
add
jge
pop
push
insb
mov
fwait
xchg
das
mov
xchg
xorl
and
dec
lds
std
xchg
mov
and
xor
into
outsl
mov
scas
push
sar
ja
xorb
imul
sbb
sahf
jno
xor
aam
cltd
mov
inc
pop
and
cli
adc
jns
dec
pop
mov
mov
add
xor
jle
pusha
mov
outsb
xor
and
enter
sbb
mov
cli
das
and
and
adc
fdivl
xor
push
inc
dec
scas
jne
cmpsb
mov
fcomps
int3
in
imul
mov
dec
insb
sti
push
js
xor
xorb
test
inc
mov
mov
xor
mov
ret
jmp
inc
mov
jns
std
xor
repz
adc
jmp
push
mov
ja
nop
mov
cmpsb
mov
cltd
push
in
sbb
jbe
adc
push
cli
leave
pop
mov
or
jo
dec
mov
xor
xchg
mov
das
xchg
stc
rol
sbb
mov
cmp
mov
pop
jnp
or
cltd
or
mov
push
dec
dec
sbb
jmp
fwait
dec
das
cmp
lcall
test
and
outsb
push
mov
and
dec
outsl
lea
pop
add
cli
ja
mov
fs
mov
add
stos
cmpsb
arpl
movsl
mov
cli
push
int
lahf
aad
call
push
sbb
in
inc
dec
inc
data16
out
stos
push
inc
pop
mov
fisttpl
inc
inc
mov
iret
xchg
push
test
loop
mov
push
stos
inc
movsl
in
push
cwtl
mov
adc
ret
inc
jno
stos
arpl
xorl
rorb
test
mov
push
in
xchg
add
add
inc
cltd
dec
and
cmpsb
icebp
rep
mov
pop
inc
dec
sbb
jae
js
ljmp
lret
add
call
xchg
jg
int
sbb
pusha
cmpsb
cs
push
enter
xor
inc
sbb
fwait
bound
fimull
pop
add
sbb
fs
sbb
das
push
pop
stos
orb
push
lods
cld
mov
mov
sub
or
mov
mov
sbb
bound
sub
inc
lret
rcrb
daa
mov
shll
scas
inc
fucomi
dec
ss
movsl
imul
cmp
pop
sbb
ret
clc
xor
xchg
cwtl
and
sti
add
lahf
fs
fwait
lcall
scas
lods
ret
faddp
and
mov
mov
je
bound
mov
pop
pusha
mov
cwtl
xchg
cmp
lock
mov
test
insl
mov
out
add
jle
push
imulb
sub
pop
sbb
test
mov
pop
testl
mov
adc
pusha
xchg
and
jp
dec
ret
leave
mov
sbb
xchg
and
push
popa
jecxz
sahf
or
push
jns
ds
xchg
jo
lds
and
add
mov
mov
test
aam
xchg
pop
fstpt
iret
pop
dec
cmp
dec
adc
xchg
jne
mov
sbb
inc
popa
xor
leave
pushl
fwait
dec
fs
inc
mov
testl
pushl
or
mov
daa
sbbl
in
sub
fs
mov
push
clc
enter
lcall
cmp
int3
test
cmp
clc
cmpsl
in
out
inc
sbb
inc
and
mov
push
mov
fcompl
ss
push
fistpl
and
inc
shl
pushf
fldenv
jg,pn
sub
scas
inc
cmc
jge
and
sub
insl
sbb
push
sbb
test
shrl
addr16
cmpl
lea
sbb
or
repnz
xchg
mov
dec
mov
divl
lods
mov
pop
dec
jo
insb
bound
test
stos
popf
xor
push
test
aam
testb
movsl
sbb
fnstcw
mov
pop
lcall
jmp
dec
xchg
pop
lcall
mov
cmpsl
sbb
pop
pop
out
in
fistl
imul
mov
push
popf
inc
jnp
das
cs
xchg
icebp
lea
push
and
loop
lea
push
mov
sub
aaa
fs
adcl
and
jecxz
sarl
pop
sub
push
aam
mov
rorb
hlt
and
int3
stos
dec
push
popf
mov
push
fdivrl
pop
leave
cwtl
pop
outsb
popf
xchg
lahf
mov
mov
ftst
into
mov
in
inc
jl
xchg
cmp
jl
nop
push
pop
aad
mov
lds
daa
std
jae
jl
popf
adc
dec
lock
mov
mov
and
scas
popf
and
lret
arpl
pop
scas
loopne
in
push
mov
ja
xchg
stos
dec
aaa
nop
jno
xchg
in
stc
pushf
sbb
jp
mov
push
xchg
loopne
jb
ffree
sbb
mov
xor
lahf
cmp
add
adc
rclb
mov
mov
pop
and
addr16
gs
test
test
inc
push
mov
dec
push
lock
jmp
hlt
pusha
int3
push
push
jns
push
add
repnz
popf
repz
xchg
or
icebp
mov
pop
sub
push
sbb
adc
adc
cltd
xlat
aam
or
jb
negb
movsb
pushf
and
mov
clc
cmp
inc
jg
adc
xchg
ficompl
adc
faddp
add
in
xor
shll
and
dec
jmp
test
jl
es
test
mov
inc
insl
inc
cmpsb
nop
int3
xchg
push
out
mov
jg
in
adc
mov
jmp
jns
adc
popa
adc
push
add
xchg
imul
sbb
orl
les
shr
or
sbbl
or
addr16
test
pop
pop
dec
mov
fbld
mov
sbb
mov
push
into
or
mov
xlat
inc
pop
jg
cld
std
test
in
fbld
repz
punpckhwd
sub
jo
stos
push
rep
cwtl
sub
adc
loope
push
adc
mov
xlat
ret
xchg
sahf
adc
mov
mov
les
lret
jle
gs
mov
gs
fmull
jge
jp
cli
jnp
mov
outsl
inc
icebp
inc
nop
movsb
cmp
test
addl
test
das
daa
rcll
push
sub
mov
or
mov
pop
sbb
jne
adc
sub
ret
pop
int3
or
jge
ror
lods
mov
aad
sub
cltd
or
test
push
mov
cmp
mov
pusha
cmc
sub
jne
insb
xchg
and
jl
fsubrl
mov
xor
jp
dec
push
push
and
sub
outsb
inc
cmp
push
ret
dec
ret
dec
inc
icebp
loopne
sbb
adc
jp
jmp
push
inc
and
ljmp
jl
outsl
jecxz
dec
inc
rorb
ds
push
inc
pop
mov
loopne
lea
add
out
and
das
fcmove
push
add
cmova
or
popa
cs
divb
xchg
cmp
xor
sbb
or
lds
es
icebp
mov
adc
or
xchg
mov
aam
dec
scas
xchg
xor
and
call
mov
fildl
mov
jae
mov
push
cmp
cmpsb
test
lea
in
push
pop
test
push
cwtl
sub
inc
mov
mov
lods
popf
xchg
cld
cld
inc
jnp
aam
icebp
sarb
sbb
stos
int
out
sub
in
loope
and
or
mov
push
es
aam
lock
int
push
lret
xor
testl
ret
jmp
and
jmp
jg
jns
xor
pop
mov
adc
xchg
jge
ss
cmpl
mov
push
lret
dec
insl
sbb
and
fdivrs
jecxz
les
jge
insb
mov
insb
cwtl
xchg
or
shrl
sbb
addb
cmp
decb
mov
inc
cmp
rcll
jnp
pop
xchg
xor
dec
xchg
cmpsb
push
cmpxchg
cli
test
fiadds
cmp
addb
inc
arpl
jns
mov
lea
ja
shlb
pop
mov
ret
setno
cmpsb
in
mov
xchg
push
cmc
add
add
ds
push
pop
out
xchg
inc
rorb
test
int3
jns
ljmp
add
push
testl
test
icebp
test
leave
xchg
jmp
cltd
push
jge
and
les
adc
and
ljmp
mov
add
scas
lahf
repz
pushf
cmp
fwait
mov
mov
xlat
cmc
and
pusha
test
xchg
sub
lcall
pop
std
cmp
ret
dec
cmpb
call
mov
dec
jo
jnp
js
mov
adc
in
in
into
pusha
loop
dec
cmpsl
xchg
adc
sbb
jns
imul
cmpsb
test
and
xor
int3
lea
jmp
push
rorl
jbe
pop
jecxz
push
mov
stos
adc
cmpsb
inc
xchg
data16
je
movsb
call
lret
jmp
dec
setnp
loopne
adc
mov
push
sub
insb
enter
mov
cmp
mov
mov
cmp
cmpsb
xorb
lret
lds
or
movsl
lret
pop
sbb
jo
rorl
add
inc
subl
test
push
js
dec
fidivrl
xchg
scas
aas
xor
mov
das
mov
push
cmp
pop
pop
and
xchg
push
sbbl
adc
pop
data16
adc
xor
in
dec
out
mov
std
mov
xadd
loop
pop
rorl
push
test
movsb
or
loope
push
cmc
pop
xchg
stc
movsl
xchg
loopne
add
das
les
fs
scas
popf
fwait
xchg
sbb
outsb
jo
pop
push
xchg
mov
mov
test
dec
movsl
mov
xor
or
adc
js
jge
dec
mov
outsb
inc
ds
xor
ljmp
push
xchg
mov
imul
nop
enter
or
aam
js
cmpsl
xor
mov
mov
jne
movsl
sub
shll
sub
add
ja
loope
inc
and
daa
add
and
sti
and
pop
push
xchg
cs
sbb
adc
in
mov
clc
bswap
add
arpl
bound
aad
sbb
movb
push
cwtl
mov
addr16
aas
lods
lcall
enter
enter
bound
push
gs
dec
pop
jmp
jmp
inc
and
mov
insb
and
dec
in
push
jnp
loop
nop
pop
mov
mov
dec
cmp
out
fnstcw
pop
fsubs
into
lret
test
leave
jle
pop
das
ret
jne
movsb
inc
out
pop
sub
pop
mov
outsl
or
rorb
mov
pop
repnz
aas
mov
add
ds
dec
mov
adc
dec
mov
xor
jae
inc
pop
pop
fimull
in
pop
mov
mov
mov
dec
mov
sub
xchg
sbb
cmp
test
xchg
into
adc
push
xchg
xchg
and
push
add
pop
loop
mov
ds
cmpsb
movsl
inc
sbb
fmuls
mov
xor
jns
popf
scas
xor
xchg
xchg
pop
jne
mov
dec
test
xchg
rcrl
sbb
addr16
sub
roll
lahf
sub
cwtl
movsl
dec
push
ljmp
push
inc
or
inc
test
inc
mov
lods
loope
ret
scas
push
push
repz
sbb
cwtl
mov
cmp
dec
mov
bound
cmpl
pop
inc
and
and
clc
insl
mov
jg
push
mov
dec
xchg
and
inc
popa
mov
or
popf
cli
fmul
lds
call
sbb
insl
dec
shr
or
icebp
sub
pop
dec
std
push
fistpl
das
pop
aaa
xchg
cmp
mov
jmp
push
sub
test
insl
mov
aad
pop
lret
fsubs
mov
mov
les
adc
arpl
cmp
add
mov
addb
ss
gs
fwait
repz
outsl
mov
push
loope
repnz
xchg
ret
pop
mov
add
ret
addl
ss
push
cltd
std
sub
bound
jns
and
inc
fisttpl
rorb
es
sub
cmpsb
int3
xor
and
lret
je
sub
into
lods
xor
lock
pushl
jl
fcoms
mov
fcompl
movsb
push
iret
stos
test
xorb
inc
rorb
ret
add
mov
jns
mov
imul
xchg
jae
xor
and
mov
xchg
xor
hlt
lahf
mov
mov
xchg
lret
fdivrl
pop
scas
pop
mov
scas
movsb
or
push
aas
dec
push
fdivl
filds
inc
mov
mov
lahf
or
and
sbb
ds
or
ja
xor
sbb
jb
ljmp
xchg
cmp
cmp
mov
xchg
fwait
stos
cmc
lret
add
sti
or
jo
adc
dec
jle
sbb
mov
stc
adc
imul
bound
mov
inc
fwait
pop
and
mov
ficoms
into
push
lret
dec
in
dec
or
aaa
sub
and
push
in
sbb
into
gs
push
std
or
push
dec
sarl
mov
cmp
jnp
sbb
dec
out
orb
mov
pop
in
jns
push
push
xchg
insl
jg
aaa
iret
sub
pop
scas
and
fsubs
jb
mov
stos
push
pop
sti
jmp
stos
jnp
addl
jns
dec
pop
mov
mov
in
sahf
clc
shlb
cmp
mov
push
dec
int
add
out
push
repnz
cli
jb
lcall
ret
or
jae
iret
and
es
inc
movhps
jge
lds
xchg
and
or
icebp
xorl
mov
sbb
dec
or
jmp
fs
or
xchg
pop
jl
inc
jb
dec
jg
mov
add
ds
cld
sti
xchg
repz
sub
ds
popl
and
add
dec
daa
sub
cmp
jp
rcrb
add
xchg
add
test
dec
mov
aam
out
loope
pushf
xor
cwtl
push
sbb
popa
insl
bound
stc
inc
jae
jle
pusha
adc
ret
lret
jno
push
jmp
sbb
dec
out
ret
pusha
out
movsb
and
cmp
mov
ljmp
aaa
sbb
adc
mov
sti
xchg
dec
in
lds
jae
inc
jae
sub
loope
jge
and
inc
test
sbb
insb
repz
out
mov
jmp
out
pop
test
inc
in
outsl
dec
push
test
das
iret
notl
xor
mov
nop
scas
imul
sub
out
fsubrl
repz
jl
data16
mov
int3
xchg
ror
shll
enter
adc
outsl
pop
inc
sub
push
jge
addl
in
xchg
repnz
pop
mov
cmp
push
shlb
outsl
jbe
and
pushf
jne
adc
shll
enter
in
out
xor
adc
add
lcall
sub
into
jmp
inc
adc
mov
xlat
int3
loop
sub
mov
cmp
stc
mov
jae
jmp
xlat
insl
adc
dec
xor
daa
int
mov
jecxz
invd
dec
or
popa
mov
bound
stos
addr16
push
push
jecxz
push
addl
adc
ret
lock
scas
outsl
mov
fisubs
incb
stc
xchg
push
sbb
xor
dec
je
mov
mov
push
push
movsb
add
mov
dec
int3
loop
stos
in
sbb
cmp
mov
adc
imul
cltd
std
dec
pop
dec
inc
ss
ja
push
aaa
push
bound
sti
push
pusha
je
out
jmp
jb
mov
ja
adc
dec
lcall
pop
lret
pop
js
sbb
cmc
clc
inc
es
cltd
mov
addb
jp
mov
fnstenv
scas
daa
cmp
add
aaa
sub
push
inc
xor
movsb
notl
xchg
dec
imul
jae
mov
or
xor
sbb
adc
outsl
mov
sbb
jns
fmull
fbstp
pop
out
pop
push
adc
cwtl
mov
mov
xor
cmc
xchg
mov
and
stos
pop
inc
out
fdivrp
stc
xchg
fnstcw
ds
push
dec
fisttpll
jb
mov
push
ljmp
arpl
xchg
popa
scas
cmp
sub
push
push
xor
sub
cltd
lods
pshufw
test
jae
mov
push
jg
daa
mul
hlt
orl
xchg
jg
fsubr
pop
dec
data16
inc
jo
nop
sahf
push
xor
sahf
inc
repz
out
inc
pusha
int3
add
inc
in
mov
sbb
mov
pop
mov
sbb
negl
dec
dec
add
js
scas
pushf
inc
enter
into
jae
add
cmp
in
dec
lret
cltd
das
test
cs
jnp
xchg
push
lahf
inc
jp
scas
stos
mov
enter
js
fisttpl
rcll
dec
aad
aas
xchg
push
lds
add
jnp
shrl
leave
fwait
xlat
dec
jo
in
pop
and
cmp
or
aas
test
cmp
iret
outsl
imul
hlt
leave
xchg
mov
insb
fcomip
jg
push
imul
mov
sbb
mov
fs
in
xor
aam
icebp
nop
in
xor
add
scas
adc
cli
into
outsb
ljmp
mov
ficomps
jle
mov
arpl
fnstenv
xchg
lea
cwtl
leave
inc
icebp
jno
push
xor
inc
mov
mov
test
adc
js
push
pusha
mov
je
adc
lods
push
xorl
ret
fldenv
lret
xchg
mov
std
mov
icebp
and
xor
outsl
dec
imul
push
out
mov
xchg
ret
clc
sbb
push
shlb
push
aad
xchg
out
sbb
clc
scas
cmp
and
iret
adc
xchg
leave
fsubl
jb
push
loopne
adc
aad
xchg
sub
stos
leave
cmp
test
mov
pop
xor
dec
fdivrl
call
hlt
ror
push
cmp
fdivs
sbb
and
sub
add
movsb
sbb
es
in
mov
sbb
pop
mov
cmc
push
shl
lcall
loopne
imul
mov
adc
push
daa
in
xchg
loop
push
gs
ret
mov
push
pop
and
fisttpl
pop
push
push
outsb
jle
jae
dec
lods
js
pop
add
mov
dec
sti
cs
aam
cmpsb
cmpsb
cmp
push
sub
movsl
sahf
cmp
inc
loop
lret
std
clc
daa
cmpsb
clc
xchg
jle
xchg
xchg
inc
pop
les
xor
pop
clc
jne
pop
pusha
call
mov
pop
adc
mov
int
push
aam
and
mov
outsb
mov
ret
test
test
stos
xlat
dec
xor
jle
in
push
ljmp
lods
mov
jg
int3
stc
sub
ja
sbb
xlat
jl
mov
mov
sub
cwtl
jbe
movsl
or
movsb
sub
int
je
lea
mov
or
insl
sbb
pop
rcrb
xor
inc
imul
mov
cmp
sbb
cmp
push
movl
pop
push
cs
add
out
xchg
dec
ja
push
push
or
addr16
mov
xor
jb
push
les
sub
adc
cmp
ret
mov
add
xlat
test
ljmp
lret
jl
out
mov
inc
mov
sahf
loopne
cmp
std
push
add
jl
push
and
mov
mov
das
mov
pop
jmp
push
addb
xchg
cmp
cmpl
lods
ret
mov
rcr
xor
ljmp
push
inc
sbb
cld
clc
pop
pop
and
nop
outsb
lret
cli
inc
test
pop
jmp
int
insl
push
lcall
idivb
movsb
sub
mov
imul
repz
pusha
adc
xchg
mov
andl
lods
fisubrl
add
movsl
xor
xchg
addl
inc
adc
enter
adc
iret
cmp
aaa
sub
les
dec
icebp
into
or
sbb
lahf
mov
jl
dec
cmpsb
pop
mov
and
sub
dec
mov
outsb
xchg
sub
clc
xor
mov
dec
imul
push
data16
mull
inc
in
bnd
and
loope
lock
fs
dec
mov
repz
sar
mov
jl
incb
loop
inc
fdivp
cmc
pop
jb
adc
xchg
bound
adc
stos
arpl
push
mov
sbb
lea
pop
cmpsl
xchg
mov
ds
jbe
inc
dec
pushf
xchg
or
stc
es
in
add
and
out
inc
aaa
popf
shll
inc
stos
sub
les
mov
cmp
jb
mov
daa
mov
inc
and
and
mov
ret
inc
mov
das
fidivrl
jecxz
push
cmc
iret
mov
mov
inc
mov
test
pop
jbe
jle
pop
js
mov
add
rclb
js
dec
sub
clc
xchg
mov
mov
mov
sub
lock
jne
and
jnp
jae
or
sbb
sahf
in
out
dec
push
and
pop
and
leave
cwtl
mov
mov
idivb
xchg
dec
js
mov
clc
iret
fiaddl
cmp
inc
xchg
stos
pop
jnp
fstp
pop
bnd
movsl
nop
outsb
lock
adc
int
repz
fwait
xchg
cwtl
sub
mov
mov
push
mov
dec
or
aaa
dec
xor
add
rorb
test
inc
adc
mov
ret
pop
mov
xor
mov
mov
xor
clc
fwait
xor
imul
dec
pop
in
mov
add
xchg
or
pop
or
imul
mov
shr
cs
rol
cltd
into
mov
clc
pop
pop
mulb
pusha
into
jmp
scas
add
mov
inc
adc
mov
cwtl
inc
mov
in
cmp
sbb
stc
rcr
imul
sar
push
pusha
sub
or
nop
sbb
and
ljmp
or
enter
and
subb
mov
sahf
xorb
ja
mov
push
or
ja
outsl
mov
or
add
adc
sbbb
push
dec
stos
push
lret
and
xchg
push
cmp
ficomps
pcmpgtd
add
pop
sbb
sub
rol
adc
adcl
aad
pushf
iret
jnp
xchg
inc
call
and
xlat
sti
mov
sub
es
cmp
inc
mov
add
fmul
in
hlt
sbb
int3
push
pushf
mov
repnz
sbb
and
adc
in
mov
cmpsb
xchg
ds
out
les
sbb
ret
jno
aam
jge
dec
fildl
push
cmp
push
dec
sub
imulb
add
mov
cmp
pusha
add
adc
nop
and
insb
int3
movsl
mov
xorl
pusha
cmp
test
in
cmpsb
or
arpl
xchg
cli
fwait
or
sbb
jl
test
dec
add
frstor
jne
je
sahf
pop
pusha
sbb
xor
fistl
out
jae
movsb
mov
mov
jbe
adc
in
push
adc
cld
test
pop
pop
sbb
pop
ja
cmp
ret
push
pop
aad
stc
sub
fcomp
into
cwtl
xchg
cld
movsl
xor
dec
aas
and
orb
fs
cmpsb
sbb
in
push
mov
mov
aam
test
jp
pop
xlat
xchg
bnd
pop
in
out
mov
cmc
jp
dec
pop
mov
xor
int3
out
dec
subb
stos
jae
outsb
push
and
sbb
add
inc
stos
sub
adc
pop
adc
pop
test
xchg
dec
out
push
jg
mov
in
fmull
in
xchg
jp
in
mov
scas
push
inc
cmpsl
rcrl
shrl
or
inc
mov
adc
jnp
ret
mov
sbb
push
xor
mov
cmp
and
mov
arpl
mov
or
out
arpl
icebp
loope
bound
xor
sub
sub
pusha
or
sub
add
mull
mov
inc
jns
xor
jecxz
dec
idivl
and
cmp
or
xor
outsl
adc
pop
sarl
and
incb
idivb
imul
inc
add
xor
aas
test
idivl
adc
push
jns
rcll
insl
xchg
push
jecxz
loopne
loop
xlat
stos
sbb
mov
popf
les
mov
pop
and
cmp
jl
test
pop
sub
int
jle
cmp
mov
push
imul
mov
mov
pop
stc
or
xor
adc
repnz
lods
popl
adc
aam
into
pop
add
adc
pushf
rol
loopne
xchg
or
sbb
jae
repnz
inc
das
jae
mov
sub
test
popf
push
mov
push
adc
inc
push
add
lock
or
cmp
popa
pushf
mov
fwait
inc
pusha
mov
ret
scas
ret
push
mov
mov
cmp
in
lret
int
pop
jg
lock
or
stos
mov
fistpll
add
dec
mov
fs
dec
xchg
push
call
xchg
repnz
mov
mov
inc
mov
gs
inc
push
and
ret
xor
into
int3
fiadds
cmp
fldl
push
addr16
lret
push
mov
out
rorl
jl
mov
xchg
mov
pushf
jb
lock
and
clc
repz
stos
bsr
mov
or
adc
or
push
pop
adc
daa
movsb
cmp
hlt
push
jle
data16
jno
add
xchg
sbb
and
jge
jp
pop
inc
cmp
ljmp
pop
mov
dec
adc
mov
lret
pop
stos
daa
mov
add
xchg
mov
adc
add
aad
push
lahf
decb
aam
xor
cmpsb
dec
loopne
xchg
in
mov
mov
mov
in
insb
adc
aas
loopne
gs
xchg
push
pop
ja
xor
dec
stos
or
aam
or
add
inc
inc
inc
xor
xor
lret
cmp
adc
test
iret
cld
push
lds
dec
pushf
xchg
sti
and
sub
mov
outsb
push
cs
sbb
ljmp
jle
inc
cli
lret
les
in
cmp
xchg
fstpl
add
lock
iret
in
mov
dec
sub
cmp
ljmp
fidivl
xrelease
or
sub
mov
jb
adc
adc
mov
dec
pop
pushf
xor
push
adc
aad
adc
sub
xchg
sbbl
paddw
test
pop
popa
mov
mov
clc
mov
es
xchg
add
in
or
pop
arpl
test
andb
mov
pop
fwait
or
xor
ja
jle
movsb
jl
adcl
loope
lahf
dec
stos
stos
jae
xchg
aad
or
push
cltd
xor
lret
jg
push
adc
pop
test
sti
cmpsb
push
rcr
in
int3
daa
ret
push
bound
add
pop
pop
sbb
cmpl
add
jbe
cmpsl
mov
mov
scas
lret
push
shll
subl
push
ljmp
rcrb
aam
push
outsb
inc
or
add
sub
pop
clc
icebp
push
imull
add
lds
mov
or
adc
adc
cmp
xchg
lret
jle
das
shlb
adc
pushf
vpshufd
lea
sbb
dec
push
pop
sarb
sbb
mov
idivb
jp
mov
push
outsb
xor
dec
cmpsb
fmul
dec
shl
fwait
xchg
sub
scas
jp
xor
mov
idivl
movsl
push
dec
test
add
incl
test
pop
fcoml
inc
or
lret
push
xchg
fs
icebp
adc
pop
notl
sbb
fwait
cmp
outsl
loopne
mov
fistpll
shll
add
dec
sahf
sbb
fimull
dec
into
je
sbb
outsb
mov
fs
dec
pop
mov
scas
loop
fwait
test
popa
jge
xor
ljmp
je
clc
mov
loopne
lea
xchg
and
jg
imul
fidivrl
imul
dec
push
in
out
sbb
or
ljmp
push
cmpb
mov
add
inc
stos
or
fdivl
ds
nop
into
arpl
mov
cmp
or
jmp
push
xor
jne
jge
sub
cld
add
mov
int3
in
cmp
test
xchg
leave
adc
out
hlt
es
push
ds
jne
mov
mov
pop
in
outsl
fcomps
or
mov
jbe
call
sub
xchg
rcl
xchg
fists
mov
or
int3
and
or
mov
or
xchg
insb
jo
icebp
sbb
mov
mov
mov
xchg
pushf
dec
jmp
xor
push
mov
and
jmp
pop
and
cmp
testl
and
pop
jg
rcr
lock
sub
mov
sbb
cmpsb
dec
out
pop
cmpsw
xchg
mov
push
xorb
push
mov
pop
idivl
or
mov
shll
xor
aam
sbbb
icebp
jb
leave
push
fsts
inc
outsb
add
cwtl
cmp
insb
ds
mov
rolb
sbb
fs
mov
das
push
lahf
divb
andl
xlat
daa
xlat
lds
push
out
jae
fstpt
add
xchg
inc
dec
shll
bound
xchg
push
outsl
lds
ret
lea
dec
in
ret
fiaddl
mov
clc
aas
fsubs
and
inc
push
stos
add
xor
push
xchg
cwtl
pushf
jecxz
or
repz
in
add
leave
and
cmp
cmp
leave
and
data16
out
cwtl
mov
sti
push
xchg
pushf
pop
lods
jecxz
ret
icebp
movsl
out
or
inc
jle
push
pop
jge
mov
das
sub
add
xor
incb
xchg
mov
sub
push
dec
imull
push
and
and
ret
jno
fimull
mov
or
dec
out
pop
and
push
mov
gs
dec
inc
icebp
push
scas
mov
push
les
add
rolb
pop
xchg
push
dec
dec
mov
xor
xchg
mov
cmpl
repnz
pop
dec
sbb
dec
ret
jnp
or
sub
adc
dec
pop
push
dec
mov
mov
and
mov
faddl
daa
rclb
adc
xchg
jl
xchg
rorb
or
sub
sub
out
lods
push
mov
aaa
icebp
inc
pop
loope
jnp
and
or
in
insl
loope
sbb
mov
iret
sub
test
imul
inc
cmp
test
fstpl
addl
mov
add
xor
xchg
push
dec
les
mov
aad
dec
cmp
cwtl
sub
popf
ret
incb
orl
dec
lods
test
mov
addl
out
jge
jecxz
iret
push
pop
inc
mov
push
adc
icebp
jecxz
jns
leave
pop
xchg
jo
jmp
sbb
ret
jge
or
movsl
fs
stos
loopne
lock
lock
fs
inc
mov
mov
inc
lods
xor
in
popa
xchg
int
sbb
loopne
adc
or
inc
addr16
fistl
jae
lahf
and
stos
bt
sarb
ja
lahf
out
push
fdivs
and
push
jae
pop
sar
jns
mov
and
shr
sahf
jp
mov
je
leave
push
mov
dec
decb
aad
adc
jnp
adc
mov
cmp
push
sbb
jg
sub
adc
imul
aaa
mov
out
xor
sbb
pop
xchg
sbb
sub
repz
mov
stos
pop
push
mov
lret
mov
movsb
test
stc
es
mov
mov
aas
inc
sub
and
aad
iret
mov
es
xor
int3
cmc
clc
mov
test
inc
ss
enter
xchg
pop
mov
cmp
sub
push
xlat
add
shrb
test
lods
cmp
lret
lret
jo
sahf
mov
pop
fbld
add
cmpxchg
xorl
roll
dec
push
inc
push
movsb
decb
lods
mov
push
pop
mov
pop
rep
mov
push
push
pop
pop
xchg
in
aas
jb
mov
mov
dec
inc
test
and
sbb
cmp
xchg
mov
mov
sti
sub
mov
cld
jno
movsb
cmp
gs
add
test
mov
xchg
lahf
fcmovbe
pop
mov
sub
mov
repz
cmp
iret
icebp
jns
sub
call
lcall
mov
push
xchg
in
call
stc
aaa
inc
ret
adc
mov
jle
mov
fwait
outsb
icebp
decl
enter
leave
jns
lods
adc
mov
or
jg
and
popf
and
leave
jnp
test
jmp
inc
push
pop
stos
dec
xor
out
iret
subl
scas
popa
and
je
lret
sar
cmp
ret
stos
cld
mov
pusha
sbb
je
es
popf
mov
mov
xchg
arpl
jne,pt
int3
scas
and
inc
sbb
psrad
scas
das
mov
push
dec
ds
shlb
sbb
cvtdq2ps
cmp
or
jnp
jle
add
decl
jbe
repz
lret
mov
mov
pop
or
dec
clc
sub
stc
jge
cs
and
xchg
cmp
or
fwait
insl
test
sbb
push
movsb
movsl
in
loope
int3
mov
sub
lods
dec
cmp
in
inc
in
out
lods
xchg
std
xor
sbb
loope
pushf
push
cmp
mov
mov
push
pop
call
popl
enter
cmc
jae
inc
xor
inc
lcall
mov
jmp
stos
or
jbe
aas
mov
mov
and
pop
ficompl
decl
notl
fnstcw
out
insl
loop
dec
ror
adc
xchg
rcr
adc
xor
pop
out
popf
cld
lea
dec
adc
push
mov
dec
adc
pusha
rcll
ljmp
pop
xchg
stc
addr16
aam
lods
jmp
add
lret
jno
dec
jle
inc
test
xor
or
ficoml
cmp
out
cmp
sub
xchg
adc
add
shll
mulb
pop
in
mov
mov
jge
push
pop
adc
push
aad
imul
push
test
xchg
mov
or
add
insl
cmp
fwait
pusha
sbb
push
cli
out
test
jge
push
jo
inc
and
daa
mov
jae
out
pop
inc
test
cld
data16
and
mov
ljmp
repnz
aas
inc
jb
call
sbbl
out
mov
leave
cld
pop
pop
test
fs
iret
jmp
fwait
cmc
xor
sub
movswl
popa
andb
mov
out
xchg
cmpsl
pop
subb
daa
push
mov
jbe
push
nop
out
cmpsb
cmpsl
or
lahf
sbb
stc
jmp
jl
fs
sub
imull
ljmp
addl
cmc
mov
push
sub
dec
enter
sbb
inc
mov
inc
pop
rcl
dec
dec
cmp
cmp
iret
cs
call
sub
arpl
test
les
inc
adc
push
sub
movsl
arpl
imul
loopne
mov
int3
push
xor
pushl
shll
aas
aam
mov
mov
pop
pop
imul
pcmpeqw
push
inc
mov
shrb
xchg
hlt
or
inc
and
sub
push
pusha
pop
xor
xor
adc
sub
or
dec
push
je
adc
mov
mov
je
subb
xchg
cmc
lods
mov
cmp
and
push
clc
cmp
add
loop
popa
ja
mov
fs
jno
mov
outsb
adc
and
push
inc
nop
notb
mov
pop
ret
into
ss
jno
or
xor
pop
inc
push
mov
imul
xchg
sbb
stc
test
lea
pop
in
lahf
cli
sti
int
mov
repz
nop
pusha
push
popa
inc
xor
cmpsl
push
mov
pusha
repnz
jo
in
test
adc
jge
shrl
mov
mov
shl
ficoml
fsub
jp
or
scas
cmpsl
out
aad
inc
inc
ljmp
imul
jg
lds
sbb
daa
test
mov
mov
cmp
sub
call
push
fistl
fmul
jle
enter
push
popa
int3
cmp
leave
fwait
movsb
repnz
mov
add
mov
push
movsl
es
cld
mov
loopne
cmp
cmpsl
cmp
push
push
je
mov
cmc
sub
iret
mov
mov
sarl
mov
pop
xchg
sub
insl
push
cmp
and
in
push
jmp
and
cmc
sbb
je
es
mov
rolb
add
fwait
sub
sbb
add
subb
mov
xchg
mov
test
or
loope
repz
cmc
mov
ret
sub
stos
es
add
loopne
adc
mov
and
adc
sti
int
inc
test
insl
mov
xor
addr16
lret
pop
inc
aam
test
dec
cmpsl
jg
mov
rorb
mov
jb
cs
cmp
add
enter
lods
sbb
mov
xchg
dec
add
mov
push
out
arpl
jmp
insb
and
pop
push
mov
push
rclb
mov
inc
xor
and
xchg
sub
out
jae
xor
adc
jmp
adc
pop
lods
lret
movsb
mov
movsl
xchg
jecxz
gs
mov
xor
addr16
mov
cmp
xor
je
push
inc
mov
push
addl
mov
addl
xlat
pop
adc
fwait
sub
xchg
lret
mov
xchg
push
insl
sbb
loop
pop
fisttpll
fsubs
push
jbe
mov
mov
test
out
mov
dec
mov
and
sbb
call
inc
push
pop
sbb
dec
add
mov
clc
dec
aam
sbb
dec
pop
out
and
aaa
lahf
and
lods
gs
shlb
xchg
imul
clc
fiadds
inc
fwait
scas
push
ret
or
dec
stos
js
push
data16
scas
jl
pop
xchg
inc
cltd
mov
or
cmp
add
mov
inc
jmp
js
insb
mov
push
fsts
es
aas
dec
adc
sbb
add
mov
mov
nop
inc
ret
mov
sbb
repz
jnp
sbb
lods
add
in
dec
pop
rorb
mov
addr16
xchg
hlt
or
pop
inc
push
out
xor
xor
pop
sahf
mov
pop
lods
dec
sbb
nop
jmp
stos
enter
xor
jl
ljmp
mov
xor
dec
imull
repnz
sti
cmc
call
clc
test
push
insl
jge
mov
rorb
sarl
add
mov
push
iret
pop
and
mov
ljmp
loop
mull
cwtl
movsl
push
sahf
imul
mov
jp
mov
inc
mov
test
fbld
lcall
xor
mov
sbb
sub
into
jge
cmpsb
arpl
out
and
push
push
jbe
sarl
cmpsl
aas
ss
xchg
mov
xchg
mov
push
popf
rclb
movlps
in
movsl
sbb
xor
ljmp
xor
jmp
mov
jne
fsts
enter
pop
sub
outsl
xchg
push
mov
or
inc
cmp
sbb
push
pushf
enter
mov
pusha
dec
pop
or
in
cltd
jl
xorb
cmp
mov
inc
mov
rcl
test
sarb
rcll
popa
test
jae
add
jo
mov
push
insl
lahf
jb
cmp
lds
les
int
dec
hlt
loop
popa
outsb
outsb
sub
inc
mov
add
jo
jmp
and
arpl
xor
jecxz
sbb
xchg
and
inc
mov
inc
lock
cmp
cmp
pushf
mov
mov
push
xorl
jp
push
xchg
fildl
jne
inc
push
pushf
push
and
shrb
sti
sbb
xor
and
adc
jecxz
sub
cmp
xchg
js
cmpsl
push
or
pop
leave
cmpsb
mov
jb
jle
push
lea
lock
mov
xchg
mov
jge
dec
je
cmp
cmpsl
sbb
jmp
fdivrs
out
push
je
xchg
ljmp
ret
int
add
ss
jmp
pop
pop
inc
call
popf
or
subb
sbb
icebp
add
push
xor
sub
mov
shl
seta
and
in
sbb
mov
cmp
or
cmp
pop
sahf
arpl
arpl
outsl
repz
sub
pop
stos
add
or
mov
dec
xchg
cltd
imul
shlb
mov
shll
iret
push
shr
mov
fcmovb
dec
inc
fimull
mov
iret
mov
cwtl
arpl
test
shll
mov
ret
mov
mov
mov
es
dec
popa
cmp
pop
pushf
out
sbb
jo
addr16
adcb
ret
mov
xchg
mov
fcmovne
ret
mov
lds
xchg
andps
ret
cld
lret
and
in
mov
idivb
or
decl
push
fwait
jnp
lcall
fistpll
in
rcrl
pop
pop
std
jne
cmpsb
les
mov
popf
enter
xchg
or
pop
dec
adc
jmp
out
pop
popa
ds
xor
jo
inc
outsl
sahf
jno
cmp
mov
inc
shrl
test
inc
and
ja
adc
rclb
dec
pop
jge
es
pop
and
scas
push
sti
dec
jge
outsl
lcall
push
ret
xchg
lds
mov
mov
adc
call
dec
push
lret
rorl
xlat
stos
mov
xchg
fildl
mov
push
int
stos
inc
mov
test
shlb
or
push
pop
pushf
or
dec
repz
ret
out
or
sbb
outsb
aas
push
pusha
loop
insl
popa
repnz
mov
imul
outsl
xor
or
and
push
call
dec
add
or
test
aas
jle
mov
inc
mov
xchg
xchg
ret
sarl
mov
cmpsl
or
test
int3
inc
icebp
das
mov
lock
js
rclb
cltd
pop
ret
sub
fdivrs
and
xor
fmuls
inc
add
xchg
fildl
in
mov
dec
dec
jg
enter
xor
push
xchg
ss
dec
sbb
dec
dec
popf
movsl
std
fldt
mov
mov
mov
push
iret
lahf
fmuls
test
popf
in
cmp
ds
icebp
or
daa
jmp
cmpsl
pop
ret
push
lret
outsl
popf
mov
insl
lret
jg
ljmp
outsl
sub
addr16
pop
and
cmp
sub
popf
push
dec
in
lsl
out
fs
add
inc
dec
movsb
xchg
insl
inc
add
sahf
add
sbb
dec
enter
mov
mov
mov
pop
fwait
hlt
xor
xor
std
xchg
adc
add
movsl
push
fsubl
ja
sbb
das
lahf
adc
sarl
xor
jle
into
popa
mov
rcll
imul
movsl
xchg
jnp
push
insb
les
and
jmp
outsb
push
aas
stc
dec
fs
xchg
cmp
add
insb
aas
jns
push
sarl
in
dec
and
xchg
jg
lods
cs
cwtl
mov
sarl
fimull
movsl
mov
push
mov
nop
lds
negb
int
lret
cmp
dec
std
push
es
lock
push
cmpsb
pusha
xchg
jecxz
aam
xchg
cmpl
jg
adc
movsb
pusha
test
mov
daa
mov
sbb
fs
cmpsl
jb
iret
jmp
adc
push
call
inc
inc
fdivl
pop
xor
popf
push
jno
mov
mov
mov
mov
adc
adc
ss
jbe
jnp
pop
int
add
cwtl
in
xchg
sbb
add
lcallw
jmp
mov
and
in
cmpsl
movsl
aaa
jno
dec
or
jg
push
aaa
xorb
or
mov
cmp
outsb
imul
mov
imul
sub
add
sub
pop
std
stos
scas
push
stos
int
dec
cli
xchg
sbb
popa
popf
mov
out
dec
sbb
rcrl
jnp
pop
xchg
lahf
adc
scas
sub
popf
sub
sbbl
in
jb
adc
test
popf
pop
out
jnp
fisubs
lret
or
pop
xlat
ds
sbb
mov
and
fptan
push
adc
je
sub
xchg
arpl
pop
out
and
adc
cmpsl
ret
push
xor
lahf
ljmp
movsl
xchg
push
addr16
dec
xchg
mov
clc
mov
inc
and
fistpl
std
test
arpl
and
roll
jbe
repnz
nop
int
pop
negb
adc
xchg
mulb
in
jno
xchg
pop
cmp
subl
mov
xchg
adc
mov
mov
cwtl
pop
fimuls
sub
call
xchg
push
cmp
mov
jae
imul
fwait
mov
add
inc
adc
or
mov
jmp
adc
push
push
sbb
test
xchg
xor
cmp
xchg
les
xor
and
jmp
jns
std
ja
mov
mov
cld
lretw
xchg
xchg
sbb
lret
mov
aam
fcmovnbe
inc
fyl2xp1
add
stc
iret
lret
cmpsl
or
pop
out
dec
push
mov
aam
cmp
jecxz
jno
pop
je
sarl
and
inc
arpl
mov
mov
xor
xor
repz
push
js
lahf
lcall
xchg
adc
xchg
sub
es
sbb
test
mov
call
push
out
fs
dec
js
cmp
sbbb
aas
lock
push
rclb
mov
lahf
daa
inc
enter
mov
je
popf
mov
jp
neg
cmp
popa
leave
xchg
add
cld
xchg
cltd
repnz
xor
and
lret
out
scas
or
jge
mov
mov
xchg
int
jb
rep
call
addr16
test
fists
jae
cmpsl
mov
stos
mov
jne
fisubrs
xchg
mov
lea
aad
push
jns
shlb
pop
xchg
jl
cmpsl
mov
mov
push
jg
aas
xlat
inc
mov
dec
xor
push
and
add
in
pop
andb
cmp
cmc
outsb
jbe,pn
lods
ja
push
shlb
mov
mov
jle
mov
pushf
push
aad
push
add
rorb
and
inc
pushf
mov
mov
push
push
shr
sub
mov
icebp
aam
gs
inc
fidivl
add
mov
mov
xchg
jmp
cwtl
cwtl
jecxz
mov
xchg
std
lahf
push
cltd
xchg
stc
aas
or
sub
xchg
mov
xchg
jns
dec
rorl
jb
ficompl
imul
jp
pop
test
xor
mov
mov
lods
xlat
or
inc
mov
scas
dec
lock
xchg
jecxz
jp
inc
clc
stc
lods
daa
je
fsubrp
sbb
stos
push
jno
dec
xlat
dec
mov
push
add
dec
stos
mov
dec
call
pop
xchg
ja
xchg
enter
pop
push
cli
cmp
jnp
cltd
mov
lret
das
sti
dec
int3
sbb
popl
enter
rorb
cmp
mov
int
or
xchg
movsl
xor
xchg
sub
push
xchg
lods
jae
test
jno
ret
pop
stos
push
xor
inc
es
mov
fidivrl
adc
xchg
mov
sub
mov
add
outsb
pop
xchg
xchg
movsb
dec
daa
and
jmp
aam
add
iret
ffree
jns
mov
jb
outsb
mov
frstor
negl
push
push
mov
push
in
lret
dec
jno
dec
jg
nop
cmp
sub
lds
sub
bnd
jns
shrl
mov
sub
push
lds
dec
dec
dec
pop
int
decb
addr16
push
int
jmp
test
push
xor
loope
jns
pop
popa
cltd
aam
mov
ja
pop
adc
push
push
or
inc
das
jg
adc
js
das
lock
mov
fsts
fiadds
aas
pop
divb
mov
stos
movsl
movsl
cs
pop
bound
push
sahf
repz
sbb
loope
test
mov
shll
js
mov
dec
pop
cld
insb
cmc
insl
mov
insl
push
xlat
xor
cmpsb
out
js
mov
pushf
jnp
sbb
cmpsl
push
lods
mov
mov
add
sahf
pop
xor
mov
dec
sahf
sub
cmp
insl
ficoms
pop
sbb
shl
jp
cltd
pop
or
or
mov
or
jnp
pop
mov
cmp
fldl
jmp
loope
scas
sub
in
mov
fcomi
xchg
movsb
neg
cmp
jge
movsb
fsubrl
jle
cwtl
pop
sbb
int3
push
jecxz
cmp
jb
aad
clc
xchg
and
add
push
mov
adc
mov
fcmovnu
ljmp
pusha
xchg
xor
ffree
test
mov
jbe
mov
out
pushl
or
inc
or
mov
loope
gs
pop
addl
and
not
sbb
inc
cmp
leave
ret
add
jo
adc
cwtl
fsubs
cld
subl
outsb
sahf
jecxz
fidivl
pop
xchg
nop
inc
pop
in
vcvtsd2si
or
sbb
dec
mov
sub
andl
push
xor
mov
fcmovne
and
jge
cmp
stos
add
popl
sub
xorl
pop
dec
clc
push
mov
dec
dec
jns
mov
mov
out
add
inc
jo
cld
dec
shlb
lods
mov
popf
xor
jg
ret
sbb
sbb
ljmp
add
outsb
xchg
xor
lcall
push
test
mov
mov
push
xchg
imul
sub
lock
mov
mov
adc
xor
stc
or
sub
mov
adc
inc
xor
jle
bound
ss
and
add
mov
mov
dec
or
cmc
out
xchg
mov
repz
aad
jmp
push
xchg
outsl
push
fimuls
jo
mov
adc
das
jle
push
add
xor
jae
daa
lock
dec
rolb
rcll
xlat
add
jg
lahf
das
pop
xor
xchg
lods
mulb
scas
jecxz
ds
in
push
sbb
out
shr
fmuls
clc
les
cli
stos
test
dec
xor
jnp
lds
imul
ljmp
ret
clc
xor
popf
in
popa
inc
movsl
data16
in
xchg
jnp
mov
dec
dec
xorb
and
das
add
mov
cmpsl
xchg
cmp
add
loop
cs
mov
cmp
mov
into
out
fucomp
outsb
sbb
je
mov
iret
sbb
dec
adc
or
dec
mov
testb
add
movsl
sub
into
add
cmp
jle
lods
loop
leave
sahf
xor
adcl
es
lods
popa
fs
cmp
xor
out
xor
cmp
je
sbb
sahf
rolb
pop
jbe
scas
addr16
roll
sti
add
sub
rorb
fistps
sti
fldpi
lret
iret
fs
icebp
and
orb
js
sub
xlat
test
mov
push
inc
xor
fistps
or
jl
ret
push
aas
add
mov
xor
int3
idivl
call
rcll
sahf
js
pop
dec
fcomps
sar
test
cmpsb
dec
xchg
mov
in
stos
cmpl
push
pop
push
jp
cmpsb
mov
pop
out
aaa
cltd
or
lds
pushl
dec
fdivrs
jge
dec
cmp
mov
sbb
inc
lock
aas
repz
mov
inc
and
mov
xchg
bound
in
jmp
int3
in
push
ret
and
jb
testb
mov
or
in
repnz
loopne
and
scas
inc
loope
arpl
mov
in
call
ljmp
jecxz
scas
inc
es
jbe
dec
test
mov
mov
push
mov
jb
inc
fiaddl
mov
jge
je
push
xchg
push
xchg
loopnew
mov
push
ror
cld
push
insl
push
jns
pop
jae
sub
ja
mov
cld
movb
mov
add
mov
fs
sub
pop
xchg
insl
sbb
pop
test
pop
push
sti
outsb
outsb
cmp
test
and
sub
stc
insb
cltd
push
es
xchg
pusha
adc
out
arpl
addr16
das
and
lcall
inc
ret
jg
daa
stos
xorb
mov
mov
mov
jae
repnz
jg
mov
iret
dec
std
scas
or
fcomp
and
jle
inc
imul
out
vucomisd
pop
aam
mov
out
pop
ja
jb
test
lds
inc
pop
cmc
les
shll
ficompl
ret
dec
shl
loope
mov
scas
jmp
or
mov
loope
lret
call
out
or
push
jl
cmp
push
mov
out
inc
cwtl
mov
getsec
pop
fcoml
pop
xorl
clc
nop
push
xlat
pop
jge
inc
lods
adc
lods
and
inc
rcl
lcall
xor
mov
clc
fistps
mov
xchg
lods
sbb
xorb
lcall
pop
mov
je
cld
pusha
addr16
dec
cli
adc
cltd
cmp
and
in
jecxz
out
pop
div
add
inc
and
test
lods
jmp
icebp
jb
add
out
fyl2xp1
pop
sub
mov
push
loop
xor
push
sub
add
mov
out
pop
and
fmull
clc
sbb
int
xor
adc
cmc
or
push
push
cltd
sub
push
mov
cmc
fstpl
shrb
cli
in
loop
mov
sub
jle
mov
cmp
fdivrs
out
xchg
dec
push
cmpsl
setno
push
jb
add
cwtl
lods
cmp
pop
roll
jl
mov
shr
leave
out
push
xor
xchg
ds
js
xchg
dec
push
loop
cmc
test
xlat
mov
add
xor
movsb
outsb
shll
pop
sbb
mov
int3
push
or
mov
test
je
ret
repz
xchg
jecxz
push
sbb
pusha
inc
rorb
push
and
fcomip
outsb
xor
mov
iret
sub
add
daa
sub
mov
lcall
xchg
loop
outsb
sub
cmp
fstl
outsb
aad
cmp
mov
xor
xor
and
xlat
fstsw
push
jp
sub
xor
xchg
aad
jge
aad
adc
xor
push
dec
mov
xchg
lret
mov
lcall
push
add
sbb
and
mov
testl
cmp
cmp
cmp
push
inc
xor
adc
decw
sub
std
in
fstpl
and
sub
stos
mov
sbb
in
push
push
lret
fimull
xchg
call
mov
sbb
mov
xchg
les
pop
inc
shll
and
movsb
pop
mov
mov
or
fwait
push
xchg
mov
or
mov
jp
inc
dec
movsl
lret
xchg
mov
lods
and
cmpxchg
pusha
leave
dec
pop
pop
jae
cmpsl
test
push
inc
sbb
push
cmp
or
cwtl
popl
jb
jge
inc
push
fnsave
cmc
and
sbb
iret
leave
cli
lret
hlt
icebp
or
dec
shrb
mov
ds
mov
pop
xchg
repz
inc
dec
scas
add
divl
mov
mov
jmp
mov
cmc
and
fs
insb
out
pop
dec
xchg
push
add
inc
and
iret
mov
cmpsb
popa
cmp
or
lret
cmp
in
xorl
scas
leave
scas
mov
and
jns
ret
jmp
xor
add
inc
sarl
cs
out
sub
mov
pop
sub
jle
add
sub
pop
dec
push
mov
xchg
out
lret
sbb
cmp
out
popa
xor
cmpsl
mov
pop
mov
mov
fwait
jl
out
shrl
xlat
sarl
mov
icebp
push
repz
mov
leave
sti
or
std
dec
dec
sti
stos
xlat
std
mov
and
repz
dec
mov
jb
dec
ret
pop
std
and
fwait
cmc
inc
out
and
cwtl
push
enter
add
out
mov
jns
inc
mov
rcl
lcall
xchg
repz
jecxz
stos
adc
inc
fbld
mov
std
inc
dec
ss
ret
dec
pop
jae
cmpsb
repnz
ret
movsb
dec
add
push
ror
aam
push
add
icebp
adc
pop
fucompp
mov
gs
imul
jecxz
jne
data16
pop
jbe
aad
nop
rcll
fcoml
lret
popa
aaa
loop
sub
push
lods
push
call
mov
push
aas
adcb
cli
adcl
fsubrs
or
sti
xchg
das
inc
jecxz
sahf
jne
pop
dec
fbstp
and
xchg
cmp
sahf
in
fistpl
fdivrp
and
and
or
adc
jnp
punpcklwd
stos
cld
decl
mov
add
outsl
jmp
jecxz
fwait
mov
cmp
imul
rclb
clc
nop
jp
lods
xchg
sub
dec
mov
loopne
lds
push
fldcw
into
mov
pop
into
pop
es
mov
bound
dec
sbb
lret
sub
fs
in
imul
add
rclb
xor
hlt
cs
mov
fsubl
ds
mov
adc
sub
loop
testb
jge
or
cmpsl
pop
jo
xor
push
arpl
cltd
int
int
arpl
adc
jmp
int3
mov
fs
mov
push
icebp
xor
xor
rolb
mov
jno
dec
jnp
dec
and
push
in
mov
aad
pushl
in
mov
ljmp
rolb
pcmpgtd
mov
xchg
test
or
jns
sbb
add
inc
dec
popf
bnd
jae
jbe
testb
jecxz
sbbl
and
outsb
sti
stos
in
bound
enter
aas
div
aaa
adc
fcompl
out
sbb
testb
ret
imul
cmpsl
out
call
dec
into
stc
xorb
test
insl
std
cli
dec
pop
int3
hlt
dec
xor
and
or
stc
out
xorl
cmc
cmp
and
scas
mov
and
incb
daa
in
mov
jo
lcall
push
fwait
xchg
push
inc
dec
dec
adc
dec
adc
cwtl
inc
and
leave
cmp
aad
dec
in
mov
or
jns
jge
jnp
add
sub
xchg
cmc
lret
aad
call
hlt
inc
push
sub
int
xchg
int
out
lret
and
jl
cmp
aas
movsb
popf
imul
xor
in
push
and
cmpsb
aam
call
fdivp
pusha
xchg
cmc
jo
scas
add
mov
in
js
movl
dec
mov
dec
fucom
or
sahf
xor
dec
lods
mov
jge
inc
mov
imul
mov
dec
jmp
orb
sub
test
pop
je
scas
stos
insl
adc
jnp
lret
imull
mov
xchg
push
sbb
in
popa
mov
stos
test
daa
nop
sbb
sbb
fwait
std
jge
ficomps
push
mov
lock
into
dec
popf
jmp
inc
aas
or
jae
mov
xorl
inc
push
add
cld
ljmp
fldcw
rorb
addl
mov
aad
jo
pop
test
sub
dec
push
cmp
fldt
hlt
pop
jmp
mov
xchg
cmp
pop
or
add
mov
xchg
mov
aaa
ds
mov
inc
mov
leave
aaa
imul
mov
shr
insb
xor
test
inc
lcall
push
dec
jne
in
jne
xor
xorb
and
push
sub
mov
fmulp
lds
push
dec
cmpsl
data16
push
std
out
push
xor
cmp
and
inc
add
push
xor
loopne
push
enter
enter
dec
sub
mov
notb
out
xchg
cmp
cmp
inc
int3
jle
sub
cmp
inc
dec
call
sub
insb
cltd
lea
int
inc
pushf
adc
loop
add
popa
sti
xchg
sahf
mov
imul
add
fmul
mov
dec
adc
sub
adc
imul
cmp
xchg
adc
scas
mov
subb
popf
out
mov
dec
fucom
pop
ljmp
shlb
movsl
les
aas
mov
sub
ds
pop
jne
mov
mov
std
std
jns,pn
lret
lds
add
lret
cmp
loopne
jb
arpl
loop
lahf
sbb
mov
test
idivl
push
inc
xchg
bound
pushf
xor
xor
push
add
fildl
jno
movb
dec
mov
das
das
pop
adc
jmp
shrl
dec
pop
cmp
and
mov
xchg
jns
pop
mov
iret
mov
rorl
dec
mov
sub
add
rorl
roll
das
and
mov
ret
fisubrl
dec
jo
mov
pop
mov
mov
jecxz
aas
hlt
ret
cwtl
outsl
add
out
aas
sub
xchg
jae
arpl
stc
int
dec
scas
testb
in
fisubrs
inc
pop
flds
xchg
xchg
pusha
out
and
mov
out
fisubrl
scas
fs
sub
lcall
push
ljmp
add
lcall
js
stos
mov
and
test
inc
adc
in
mov
lds
jmp
arpl
fucomp
push
mov
int3
mov
arpl
out
ret
js
gs
je
mov
cmp
or
add
add
idivb
lret
popa
add
in
sbb
push
dec
adc
lahf
and
jns
mov
inc
inc
xchg
jne
mov
push
cmpsb
sbb
sub
popa
or
adc
lds
add
pop
lock
mov
or
push
jne
and
cwtl
xlat
in
sarb
jne
xchg
add
jne
dec
adc
popa
cmp
leave
push
mov
push
xor
or
push
mov
cld
mov
add
cld
dec
xchg
mov
cs
lods
into
lcall
pop
mov
test
sub
and
push
or
andl
push
int3
clc
and
jge
shr
fcoml
popf
jns
cs
test
clc
jbe
loop
jp
into
sbb
adc
mov
sub
nop
or
ja
pushf
popa
xor
insb
pusha
add
lds
call
sbb
adc
movsb
cmp
or
lods
aaa
hlt
push
adc
imul
pop
out
push
je
push
dec
test
repz
fisttps
clc
dec
pop
mov
jnp
sbb
add
in
cwtl
decl
loop
xchg
addb
xchg
adc
add
fidivs
cmp
test
and
pop
sub
xchg
mov
nop
dec
es
push
inc
lock
data16
or
daa
test
aas
and
lret
and
imul
adc
out
cmpsl
inc
dec
xor
push
adc
cmp
dec
rclb
add
mov
lret
inc
pop
adc
out
in
test
repnz
xchg
test
fdivl
jo
inc
xor
push
mov
ficompl
in
lods
std
mov
jl
dec
inc
xchg
cmp
rorb
inc
aad
mov
push
push
pop
push
fiadds
leave
xchg
push
test
mov
sub
push
xchg
loopne
mov
hlt
pop
movsl
daa
inc
aad
push
mov
jnp
cltd
shrb
sub
aad
out
jg
je
sub
imul
lcall
inc
nop
jp
das
xchg
loop
mov
lahf
xor
jecxz
sbb
dec
ja
and
loope
jp
mov
mov
test
les
outsb
lret
xor
mov
idivl
xor
std
lods
movsb
gs
push
pop
jl
xchg
subb
sbb
aad
fildll
pop
jecxz
dec
sub
fidivrl
xchg
insl
dec
push
aam
shlb
sub
jno
lret
in
sarb
das
add
and
clc
rcrb
repz
push
js
mov
jno
dec
aas
sub
jb
mov
mov
and
jbe
and
notb
or
aaa
movsl
dec
cli
in
xchg
stc
testl
insl
int3
push
cwtl
jo
and
adcb
in
mov
xchg
stc
mov
mov
outsl
icebp
mov
push
jae
adc
inc
stc
jns
lock
mov
sbb
mov
mov
lods
mov
jno
jg
mov
les
or
fldcw
add
shlb
rol
popf
loopne
cmpsb
and
pop
repz
dec
repnz
jp
adc
push
sbb
aad
dec
xor
das
enter
xchg
push
sbb
mov
sub
xor
loope
mov
sbbl
mov
popf
arpl
xor
movsl
push
ret
and
stos
dec
ror
fcmove
add
ss
les
int
rorl
fwait
fwait
popf
mov
data16
cmp
daa
or
movsl
xchg
rcr
inc
xchg
insb
lret
add
adc
int
cs
loop
test
sahf
outsl
int3
jo
mov
jae
mov
sbbl
pop
ds
leave
testl
lea
repz
loop
pusha
pop
cmp
movsb
fldt
and
pop
push
and
mov
jbe
int
pop
faddl
loop
cmp
push
hlt
pop
inc
add
jp
push
mov
clc
cli
add
scas
push
clc
cmp
xchg
clc
cmc
dec
fidivrs
xor
sub
sti
jae
cs
mov
cmpsl
test
pop
pop
xchg
lahf
mov
stos
mov
xchg
out
push
add
inc
daa
dec
movsl
mov
push
dec
jmp
mov
sbb
sarl
stc
adc
add
insb
xchg
cmp
jno
sub
out
ja
stc
jns
cltd
inc
sbb
jmp
repz
add
jge
cmp
mov
add
mov
and
icebp
cwtl
arpl
pop
stos
sbb
sub
mov
ret
mov
test
xchg
dec
xor
out
ror
push
fistl
cwtl
fldl
push
arpl
inc
pop
fildll
xchg
pop
rep
or
pop
jbe
xchg
stc
cltd
xchg
xchg
inc
jb
mov
mov
mov
sbb
or
pushf
xchg
gs
mov
pop
icebp
or
test
inc
ret
add
rorl
cmp
in
and
xor
aad
sbbb
int3
or
fisttpl
nop
mov
sti
inc
inc
pop
dec
push
repz
adc
clc
stos
jmp
mov
pop
insl
adc
mov
fisttpl
lods
add
push
pop
lahf
sti
jl
mov
sti
push
mov
cmp
inc
ret
and
cmc
cltd
inc
jne
fisttps
xchg
cld
push
rcrb
ret
arpl
jns
and
xchg
pop
jno
adc
inc
dec
in
cmc
xor
dec
call
inc
cmpsl
mov
int
add
enter
xchg
xchg
add
daa
fsubs
into
data16
add
or
cmp
mov
mov
lods
enter
push
call
scas
nop
sbb
and
pop
jle
out
pop
lcall
mov
cmpsb
mov
or
test
jb
inc
sub
dec
jns
xchg
push
insl
cmp
mov
lcall
pop
pop
mov
inc
std
and
jge
mov
xor
push
push
shr
lods
ret
xor
dec
xor
movsl
mov
cmp
push
xchg
mov
loop
xchg
into
mull
loopne
jmp
adc
shll
push
xchg
hlt
mov
inc
stos
add
add
mov
pop
jbe
out
rcr
ja
lock
or
or
sar
and
cwtl
dec
shll
repnz
xchg
fndisi(8087
push
int3
and
push
add
mov
aam
out
push
inc
call
stos
test
pop
outsl
and
mov
add
mov
add
cmp
mov
loope
mov
jne
inc
in
aaa
push
push
add
mov
dec
lock
lock
int3
insb
fnstcw
dec
ja
xchg
dec
aas
hlt
push
mov
xor
push
mov
jmp
dec
icebp
adc
out
mov
pop
cli
push
push
jns
sbb
xor
xor
jnp
cmpsb
inc
inc
sbb
sbb
jb
or
and
cld
jp
es
hlt
push
into
add
movsl
idivl
loope
roll
mov
sub
insb
jns
cmp
push
insl
mov
pop
test
inc
pop
call
pushf
jl
sbb
jnp
pop
bound
pop
ljmp
add
ret
dec
mov
fsts
xchg
mul
jnp
mov
insb
adc
loop
fidivs
das
enter
in
call
lret
xchg
mov
jbe
jmp
and
dec
jle
iret
mov
data16
or
sbb
pop
fcomps
movsb
sbb
mov
xchg
jge
xchg
outsl
fldl
jg
xchg
lcall
sbb
popa
or
shr
xor
add
ja
xor
in
fucomip
inc
pop
leave
je
aaa
or
fcmovbe
movl
jmp
inc
out
cld
lock
sahf
leave
adc
fldt
push
jmp
push
mov
lds
aas
mov
sarl
bsf
adc
inc
out
roll
shl
sbb
iret
shll
leave
lds
mov
imul
incb
loopne
dec
push
sbbl
pop
subl
mov
call
in
jbe
sub
sarb
add
mov
cmpsb
adc
data16
out
mov
sti
sbb
shl
cltd
inc
mov
outsl
push
inc
xchg
loope
divb
and
add
stc
ja
inc
aam
jne
lods
in
or
sahf
jnp
jmp
sub
xor
bound
pop
dec
mov
mov
cmc
mov
add
insb
pop
mov
fisttpl
cmpsl
sbb
pop
mov
movsl
adc
sbbl
push
push
cmp
mov
out
imul
dec
test
out
push
mov
in
imul
jnp
sbb
repnz
imul
std
pop
aas
cld
cmp
shl
adc
sub
lahf
loopne
mov
lds
xchg
sub
mov
cld
mov
cmpb
imul
jne
inc
incl
cmp
xchg
xorl
adc
xlat
or
scas
popf
orl
adc
cli
cmc
imul
out
cmpsl
jg
lock
cli
pop
xchg
push
scas
cmp
adcb
sub
mov
in
push
sarl
mov
test
cld
out
in
inc
push
pushf
dec
jno
popf
loopne
mov
mov
dec
cmpl
test
sbb
pushf
push
jmp
xor
and
and
pop
lcall
lea
outsb
lret
outsb
loopne
sbb
fildll
outsb
stc
push
int3
xchg
mov
or
dec
mov
xchg
sub
scas
push
xchg
lock
repnz
movsl
in
xchg
pop
mov
and
cwtl
pop
sub
aaa
inc
test
insl
fidivs
lahf
jp
xchg
mov
and
ret
stos
leave
and
aas
mov
ja
add
pop
imul
out
mov
pop
cmp
fldcw
adc
das
rcrl
xor
pop
mov
in
int3
cmp
jne
pop
and
xor
mov
enter
jno
fcomps
mov
mov
xor
lahf
dec
push
jo
inc
rcrb
mov
js
aaa
add
xor
adc
ret
aas
and
and
arpl
mov
ret
orl
out
popa
xlat
xchg
in
es
js
jne
int
cmc
or
jmp
pop
rcrb
cmp
dec
mov
fstpt
push
push
sbb
in
add
mov
adc
xor
and
sbb
int3
sti
push
push
or
push
jle
adc
int3
imul
xlat
or
mov
and
pop
pop
in
and
mov
neg
push
push
sarl
lds
dec
mov
pop
fs
loop
inc
add
inc
shl
cmp
addb
lds
js
loopne
mov
or
clc
and
jp
dec
rolb
mov
xchg
out
iret
or
sbb
cmp
ficompl
sahf
cmpsl
fstps
sbb
dec
cmp
sub
popa
movsb
sbb
popa
xor
sub
in
xchg
inc
aad
enter
push
adc
sub
lret
adcl
cmpsb
repz
push
movsb
xchg
xor
sbb
add
mov
xchg
xchg
fildll
dec
lahf
lcall
add
bound
outsl
imul
js
xor
mov
es
iret
cmp
xchg
mov
xchg
jl
adc
mov
outsb
sbb
nop
fidivrl
sub
cmpsl
dec
pop
jmp
inc
inc
fnstcw
mov
mov
xchg
into
pop
in
xchg
shrl
push
xchg
inc
sbb
xor
or
pop
movsbl
je
cmpsb
imulb
rcrl
out
and
fisubs
xchg
popf
repz
fcomps
xlat
mov
out
push
call
popa
aam
mov
int
xor
testb
mov
insl
jne
jb
adc
jecxz
inc
xor
inc
repnz
jge
insl
rolb
popf
adc
add
pop
xchg
stos
inc
les
mov
je
inc
sub
stc
or
data16
inc
push
call
aas
out
shrb
add
stos
in
sub
lods
int3
icebp
outsl
inc
jbe
stos
cmpsl
shlb
jmp
dec
mov
ja
lret
daa
mov
ficompl
mov
sub
leave
mov
dec
aaa
out
mov
adc
and
push
lcall
hlt
fdivrl
andb
jecxz
fwait
cmp
stc
push
mov
mov
scas
aaa
lret
pusha
adc
js
dec
cs
test
jno
inc
adc
xor
fsubrp
lods
hlt
and
ljmp
cmpb
cmpsl
inc
mov
imul
mov
call
leave
scas
lret
out
stos
jecxz
push
inc
shl
mov
lock
push
dec
xor
arpl
xor
and
cmp
xor
cmc
rol
add
jmp
mov
negb
aad
cmp
cmc
aas
jnp
mov
jg
mov
imul
mov
mov
dec
jmp
std
and
push
popf
js
das
mov
sbb
cli
push
lret
dec
jnp
adc
push
cs
jmp
dec
inc
cmp
push
add
adc
adc
pop
repz
inc
xchg
sbb
loope
push
lock
inc
sbb
or
cmpsb
push
jg
jne
aam
ljmp
hlt
or
sahf
mov
ss
sbb
pop
or
sti
jp
loop
xchg
inc
sbb
mov
xchg
jge
push
push
mov
inc
sbb
pop
jg
dec
jge
je
push
push
fwait
jbe
adc
sbb
inc
loopne
int
sarl
jae
xchg
arpl
dec
js
ja
lcall
push
popf
xor
ud1
jg
shll
insb
in
into
dec
xchg
andl
pop
inc
loopne
jnp
rclb
stc
xorl
add
push
push
jg
std
lds
mov
cmp
dec
shll
lret
push
inc
push
push
sub
or
enter
mov
mov
shlb
dec
push
sub
pop
sbb
xor
jb
iret
cltd
int3
adc
sub
jb
xor
leave
sbb
pop
cmp
push
test
jns
in
gs
or
scas
inc
pushf
aas
mov
dec
adc
lods
in
out
pop
fwait
mov
pushf
gs
lcall
cmp
pop
daa
lock
jl
xchg
adcb
fmuls
inc
fs
imul
sub
push
xor
inc
loopne
add
cmp
loop
sbb
xchg
divl
push
mov
xchg
jae
and
jle
jns
sbb
jl
insb
mov
outsb
hlt
mov
push
adc
jl
or
jno
and
push
ret
mov
aad
mov
jns
pop
call
fists
mov
pop
pop
daa
xor
xor
ja
dec
je
pushl
pop
icebp
push
cmovp
lds
fcomi
xchg
xor
clc
push
test
dec
aad
pop
sub
movsl
movaps
push
mov
pop
repnz
lock
add
outsl
sbb
divb
sbb
je
pop
pushf
lcall
repz
dec
mov
imul
stc
test
xor
pop
jae
fcmovne
icebp
call
mov
lock
inc
arpl
imul
pushf
sahf
xor
jmp
loope
xchg
sub
inc
push
push
jns
cs
and
leave
dec
pop
add
lret
push
xlat
aaa
lea
pop
push
sub
cs
movsb
jg
pop
add
jmp
pusha
sbb
xor
jp
setnp
sub
fisttps
das
xchg
loopne
xchg
or
inc
add
dec
pop
mov
stc
xor
cmpl
idiv
and
jmp
sub
push
loop
mov
mov
xor
out
in
mov
dec
sub
in
stc
add
fcmovb
test
sub
das
pop
fnstsw
insl
mov
leave
cmc
inc
sub
or
inc
jne
adc
xchg
add
rol
xor
stc
add
adc
mov
popl
add
push
stos
push
int3
pop
sbb
mov
mov
pop
pop
call
inc
addl
fstps
adc
push
cmp
xlat
cmp
aad
add
xchg
xchg
imul
cmp
xchg
dec
cmp
or
pop
jae
sub
negl
sahf
push
imul
sbb
jl
fcoms
ss
sub
jmp
cmpsb
repnz
mov
imul
std
clc
cmp
andl
inc
cmpsl
inc
jae
idivb
pop
sub
inc
add
xorl
lods
or
test
mov
js
movsl
loopne
loop,pn
popf
fmul
gs
inc
push
mov
es
mov
sbb
jg
fbld
add
popa
std
dec
jns
pop
dec
xchg
mov
sub
mov
ja
dec
mov
pop
aam
sahf
mov
jne
adc
adc
out
cmp
xlat
inc
or
adc
sti
incb
int3
lret
jecxz
and
cmp
dec
call
sub
dec
cltd
out
sbb
adc
ss
xchg
adc
jnp
pop
cld
cmc
pop
push
adc
sbb
and
pop
cmc
cmp
clc
lock
mov
adc
in
push
cmp
jbe
cld
mov
and
jp
sub
jns
cmp
xchg
push
mov
adc
pop
mov
pop
sub
loop
xor
mov
cmp
add
lret
ficoml
or
cltd
xchg
lret
fs
mov
inc
jbe
test
inc
cmpsl
ss
out
pop
fdivrl
xchg
or
inc
lock
pushf
jmp
out
pop
sbb
xor
jbe
movsb
cmpsb
pop
xchg
in
add
xchg
add
sub
xor
fstpl
fsubrs
pop
popl
jae
adc
mov
sbb
push
xchg
pop
in
dec
jg
pop
test
xorl
inc
into
pop
mov
sbb
or
mov
cmpsb
call
mov
pop
ds
cltd
xlat
arpl
push
bound
aad
adcb
cmp
mov
sub
stos
mov
dec
push
xchg
popa
jle
inc
cltd
jb
mov
adc
cli
jne
mov
out
punpcklbw
fisubrl
jle
test
and
clc
pop
push
cmc
in
jl
fiadds
sti
jg
and
jbe
rolb
out
mov
mov
nop
xlat
cmp
out
outsl
or
sti
mov
ret
popf
dec
flds
lahf
cmp
adc
sbb
mov
pop
jl
adc
push
pop
ss
sbb
das
xchg
sti
jle
cmc
cltd
test
ret
aas
cmp
mov
imul
adc
mov
lcall
push
cmpsl
outsb
adc
xor
dec
cmp
scas
mov
shlb
or
cmc
out
adc
inc
pop
jb
in
out
dec
push
inc
lock
jmp
sbb
mov
xchg
addr16
push
ret
lods
dec
jp
iret
out
xchg
jmp
sub
inc
fsubr
dec
jmp
addr16
mov
loop
int
jp
shl
add
sbb
in
xchg
aam
inc
adc
pop
insl
jl
jno
aad
popa
inc
add
in
mov
mov
mov
cmp
bsf
jae
inc
movsl
fstps
ja
cli
popf
movsl
and
enter
in
aam
pop
inc
scas
in
stos
ja
insb
cmpsl
mov
sub
add
std
repz
test
sbb
out
push
in
ret
mov
and
sbb
mov
and
ret
pop
fstpt
int
mov
loop
mov
cmp
xchg
lret
fs
add
imul
and
test
jmp
rcr
jle
mov
push
mov
xor
cs
leave
push
inc
push
fsubrl
add
adc
pop
sbb
adc
add
pusha
outsl
movsl
sbb
mov
cli
into
inc
test
and
fwait
xchg
repnz
popa
cmpsl
fdivr
adc
int3
loopne
into
add
out
jbe
andl
or
ljmp
mov
negl
and
in
inc
jb
repnz
sbb
jecxz
xor
mov
jl
repz
xor
dec
fs
ja
and
lods
cmp
mov
xor
xchg
out
mov
adcl
inc
sub
adc
jp
jnp
xchg
stos
es
and
and
sbb
in
or
lock
lock
sahf
mov
jp
ret
dec
jecxz
mov
dec
pushl
mov
mov
sub
loope
xchg
es
cmp
fs
cltd
inc
mov
sbb
aam
cmpsl
stc
cwtl
sbb
xor
sbbb
adc
shll
stos
mov
adc
or
or
loope
adc
add
inc
and
cmp
xor
add
enter
sub
iret
popf
fsubl
push
inc
sub
mov
repnz
out
imull
jle
jb
pop
mov
push
pop
fldt
xor
lahf
add
cmpb
mov
popa
testb
adc
mov
inc
idiv
pop
hlt
jae
xchg
in
adc
mov
pop
notl
out
cmp
or
cmpsl
or
lock
std
push
bound
shrl
je
lods
rep
int3
mov
inc
pop
lcall
adc
inc
test
lret
xor
push
sub
xchg
sahf
popf
push
push
mov
mov
push
xor
push
jl
sub
adc
mov
ds
sub
or
or
out
aam
cmpsl
flds
movsl
dec
inc
push
aad
mov
es
cmp
mov
cmp
test
cltd
sbb
int3
jmp
or
not
andl
sbb
or
test
pop
dec
xchg
or
dec
inc
shrl
push
out
add
jle
jmp
subb
scas
cmp
fstp
mov
xchg
js
pop
call
adc
sbb
push
aad
mov
sbb
imul
sti
cmp
cmp
adc
xor
cmpsl
xor
lods
aam
push
xchg
mov
xchg
call
je
dec
mov
pop
cmp
pushf
dec
dec
aad
mov
shll
rcrb
das
cmc
xor
cmp
mov
roll
rorl
ja
clc
and
adc
xchg
mov
aas
cld
in
int3
fdivrs
pop
cmpsl
dec
xchg
leave
aam
and
lods
pop
push
mov
xor
dec
pop
xor
dec
imul
mov
push
test
jae,pt
cmpsl
insl
ret
repnz
scas
and
test
inc
and
lahf
sub
mov
push
ret
sub
and
add
and
xchg
dec
scas
xchg
notl
int3
jecxz
mov
mov
cld
rcl
inc
stos
aaa
xchg
xchg
dec
cmp
out
cmpb
test
push
int
aad
dec
clc
pop
dec
jge
xchg
lcall
pushf
fisttps
add
jb
inc
frstor
adc
loope
loopne
jmp
dec
mov
xor
fldenv
sti
popf
and
pop
push
jno
xchg
push
sbb
xchg
clc
imul
add
clc
push
hlt
xrelease
popa
pushf
mov
sub
inc
push
enter
test
mov
add
repnz
aas
popa
lock
xchg
out
mov
mov
bnd
notl
outsb
mov
mulb
pop
jmp
or
rclb
xchg
add
rolb
jmpw
rcrb
pop
lods
aaa
inc
cmp
adc
clc
loope
mov
mov
pushf
and
in
and
jl
loop
test
adc
sub
fs
xchg
scas
dec
mov
ret
insl
stos
out
mov
sti
cmp
ret
insb
jg
jmp
sbb
es
xor
adc
mov
fs
cmp
in
jb
jnp
daa
pop
jno
popf
adc
cmp
or
rclb
clc
in
aam
int3
sbb
or
outsb
adc
sti
xor
sub
in
mov
aaa
add
inc
rorb
push
mov
pop
pop
inc
out
fmull
xchg
aas
rorb
sarb
and
rcrl
push
and
mov
sbb
daa
je
imul
sub
call
outsb
stos
push
mov
and
adc
gs
ror
add
pop
sbb
xchg
int
sub
or
pop
mov
pop
push
ret
out
xorb
pop
dec
xchg
fcoml
xor
inc
rorb
fildll
stc
imul
sahf
cwtl
or
pop
push
shlb
test
cmp
arpl
pop
xor
mov
push
arpl
mulb
xchg
sub
jnp
repz
jnp
inc
push
pop
and
fdivl
into
aam
movsb
or
dec
pushf
outsb
ljmp
and
mov
mov
sub
imul
movsl
and
dec
mov
ret
pop
mov
popf
push
mov
inc
sar
cld
cmpsl
mov
adc
jge
shl
ss
cltd
add
inc
cwtl
int
push
roll
jmp
mov
imul
cmp
dec
jg
jae
mov
insl
sbb
in
cs
xchg
sub
iret
pop
loop
jge
fbstp
fucomp
aaa
pop
addb
jg
insb
mov
outsl
jae
mov
scas
xchg
add
mov
gs
xor
lea
mov
pop
mov
repnz
xor
lods
or
cmp
xor
js
lret
clc
mov
cmp
sub
xchg
lcall
aas
push
mov
cld
push
iret
in
lods
mov
data16
movl
leave
adc
xchg
test
orb
test
xor
adc
cmp
cmp
bound
iret
out
mov
cmp
jo
cltd
and
int
call
rol
das
pop
mov
movsl
outsl
or
outsl
xchg
mov
mov
jg
push
orl
in
pop
aam
lahf
js
push
bound
sub
sub
mov
cmpb
stos
jle
push
sub
push
out
add
ljmp
add
sahf
aas
inc
scas
data16
sbb
sti
push
xor
mov
sahf
std
inc
pushl
add
inc
or
ss
daa
mov
fcoml
lahf
les
cmpsl
jne
adc
xor
imul
std
push
xchg
xchg
pop
and
sbbb
incb
bound
in
adc
shl
sbb
hlt
insb
rcrl
mov
movd
mov
inc
hlt
add
dec
sti
pushl
out
pop
mov
xchg
stos
cmpsl
mov
scas
in
aaa
jns
in
mov
jl
jmp
repnz
adc
sahf
out
cmpsb
inc
xor
sub
xor
gs
in
inc
loopne
call
sbb
shl
das
add
pop
in
lds
cmc
cmp
inc
and
xor
pop
outsl
aas
jb
subb
movsl
pusha
je
das
cmp
push
inc
imul
das
in
jns
ds
or
pop
rcr
push
add
test
out
jb
shl
push
cwtl
out
inc
int
mov
push
lock
int3
and
add
fsubrl
mov
cmp
addl
hlt
repz
adc
and
jle
push
dec
fcomp
cmc
push
or
daa
adc
inc
mov
fs
jae
das
mov
or
mov
sub
mov
clc
cmc
adc
push
sbb
fstpt
and
pop
dec
inc
xor
insb
iret
xchg
hlt
xchg
inc
xor
cmp
push
jl
jecxz
mov
cmp
push
cwtl
movsl
sbb
es
inc
xor
push
fmulp
pusha
sbb
adc
sbb
inc
lret
mov
lret
sahf
movsl
mov
das
add
shrb
xchg
xchg
xchg
xor
pop
push
mov
test
lds
mov
cmp
add
mov
outsl
aad
out
lods
mov
push
pusha
in
push
jae
test
and
insb
repz
mov
aaa
nop
loope
sahf
mov
inc
xchg
scas
iret
mov
movsb
sub
push
jmp
not
shlb
das
sahf
xchg
movsb
pop
andl
jecxz
inc
xlat
decb
je
add
xor
int
mov
rclb
sbb
mov
das
fmull
clc
jmp
gs
ja
or
stos
or
pop
lods
mov
imul
push
test
push
gs
jle
jle
cld
std
sbb
inc
fsts
mov
mov
outsl
insl
cmp
out
xor
cmpsb
fidivl
mov
sti
jbe
ret
inc
push
testl
aaa
in
xchg
lods
xchg
ja
pop
ja
xor
out
or
in
cmpsb
scas
lock
aaa
sbb
adc
lock
fld
in
mov
insb
loope
addr16
cmpsl
mov
popf
aad
lods
add
imulb
dec
dec
sahf
fstpt
mov
and
and
jmp
sub
cwtl
jns
out
lea
mov
cmp
sub
movsb
mov
fstl
daa
or
lds
cwtl
dec
jecxz
clc
pop
pop
jge
sub
cli
fsubl
pop
xor
and
push
xor
inc
xor
xchg
add
cmp
push
or
rcll
jmp
sbb
xor
jl
lret
mov
or
cmc
xchg
leave
insb
and
dec
mov
jle
movmskps
out
dec
jecxz
pop
dec
sti
mov
adc
insb
adc
xchg
scas
xor
ljmp
jmp
mov
and
cld
mov
je
leave
jmp
stc
test
mov
leave
xchg
pushl
pop
sub
adc
jmp
cmp
jb
xorl
push
jg
push
jp
jns
mov
dec
xchg
cmp
hlt
mov
mov
jb
mov
in
dec
out
or
leave
pushl
fisttpl
mov
cmc
test
and
andl
stc
mov
aad
inc
inc
sbb
push
mov
sbb
xchg
js
nop
imul
sub
sub
xchg
test
mov
loop
fs
adc
cwtl
orb
add
in
add
push
vdivsd
inc
xchg
push
xchg
and
roll
sbb
push
stc
cmp
out
sbbl
sti
ja
cmp
and
dec
not
mov
icebp
jnp
iret
or
push
fwait
or
icebp
imul
out
inc
cmpsl
fs
push
mov
test
jecxz
out
fldcw
incb
std
push
aaa
pop
pop
jbe
sbb
hlt
xchg
xchg
lahf
repnz
jp
ret
push
add
xchg
pop
inc
orl
lods
andb
xchg
cmpsl
movsl
sbb
out
mov
cmc
call
sahf
orb
add
loopne
mov
rorl
cmp
je
lret
sbb
xchg
ljmp
jecxz
push
inc
dec
sub
notl
mov
imul
jle
push
cmp
jg
cli
sub
lahf
or
and
mov
xchg
lret
inc
out
xlat
mov
xor
imul
adc
xchg
mov
in
jle
divl
cli
ret
stos
aaa
inc
mov
aam
xchg
cmpsl
jns
jmp
push
inc
pop
dec
and
arpl
and
test
push
ret
sub
ret
addr16
imul
mov
mov
dec
loope
pop
arpl
imul
dec
push
pop
mov
jmp
push
push
lea
mov
std
inc
jge
pop
lods
notl
je
xchg
scas
push
test
lret
sahf
out
inc
rolb
xchg
out
jmp
cld
leave
add
mov
xor
fidivrs
scas
lcall
neg
sahf
lea
inc
xor
aas
mov
orl
iret
pop
push
push
repz
xor
cli
xchg
mov
dec
jle
mov
jmp
in
xchg
nop
ljmp
outsb
add
jmp
sbb
jb
movsl
std
push
outsl
adc
loop
xorl
shl
scas
dec
mov
into
xchg
rclb
imul
fildl
movsl
adc
and
or
mov
loope
into
inc
push
mov
mov
mov
dec
add
ss
jne
test
xor
inc
in
mov
xchg
xchg
cmp
pusha
dec
hlt
jns
cmp
sub
sbb
pop
rcrl
sti
mov
subb
in
add
cmp
hlt
test
xchg
cwtl
dec
int3
xor
lahf
push
sahf
js
dec
adc
fwait
cmpsl
lahf
xchg
outsl
cmc
jge
cmp
xchg
dec
nop
mov
sti
add
mov
mov
push
add
ficoms
das
call
icebp
inc
idivl
or
xlat
xor
lock
loopne
ret
leave
xchg
or
xchg
in
mov
mov
xor
scas
xor
mov
mov
daa
jmp
cmp
push
rolb
push
pop
loope
ljmp
sub
ret
enter
mul
test
nop
and
sti
push
xor
jg
ja
scas
cli
ret
ret
pop
insb
in
fld
sub
mov
call
lret
xor
std
and
mov
dec
out
jb
pop
adcb
repnz
jg
sbb
fcoms
xchg
mov
stos
test
in
mov
mov
or
and
dec
sbb
or
and
mov
sahf
stos
push
cmp
clc
mov
mov
push
stc
jle
mov
or
jns
xor
pop
mov
psrlw
adc
sub
mov
popa
out
add
lret
psubb
sub
jo
stc
and
les
rcr
fwait
mov
int3
xchg
shrl
sarl
fstp
xchg
inc
and
int3
test
ljmp
mov
and
mov
add
sti
fdivs
xchg
enter
push
insb
xor
pop
mov
or
push
js
enter
lods
mov
std
push
jo
pushf
outsb
std
mov
shll
rorl
test
mov
pop
jl
push
push
pushf
push
push
or
mov
in
mov
xlat
clc
jmp
int
xor
fstl
int
popf
ficomps
ror
les
mov
pop
mov
mov
xchg
lock
pop
or
data16
test
insb
and
mov
pop
and
mov
insl
xor
xlat
outsb
inc
jae
and
inc
loopne
jmp
sub
testl
xorl
hlt
stos
adc
leave
dec
or
aad
fsubrl
cmpsb
sbb
pop
idivb
sub
pusha
add
sbb
jp
xchg
xchg
in
lock
adc
sub
sbb
jno
sbb
aas
dec
push
out
dec
mov
cmp
sub
std
andl
adc
aaa
mov
in
js
in
pop
lret
mov
imul
rorl
add
test
adc
pop
or
pushf
call
mov
cld
or
add
scas
dec
fsubrl
andb
mov
arpl
xor
adc
mov
hlt
push
orb
aad
mov
pop
and
fwait
mov
les
jnp
push
add
ja
mov
jb
sbb
xchg
or
xchg
pop
pusha
mov
mov
sub
fidivs
xlat
mov
add
in
xchg
fld
mov
test
push
cmp
scas
jl
testb
orl
stc
add
mov
cld
loope
idivl
push
push
pusha
mov
into
lret
or
mov
push
jbe
or
push
stos
pop
or
nop
ljmp
dec
push
pushf
popa
mov
pop
mov
rolb
dec
movsl
in
data16
push
aad
sbb
icebp
jecxz
cmp
aas
fisubrl
inc
unpcklps
scas
fsubs
scas
pushf
nop
fdivp
and
xor
sub
xchg
in
mov
or
lret
pop
jp
or
das
fstpt
push
outsl
andb
and
in
xchg
pop
mov
rclb
idivb
mov
xor
pop
mov
mov
cld
push
je
bnd
loop
cmp
adc
mov
fisttpl
popa
test
xor
jo
jbe,pn
cs
out
and
scas
enter
sub
dec
mov
mov
ret
les
ret
pushf
lods
stos
add
js
jge
sub
jge
and
fwait
rcrl
fldcw
dec
js
xchg
hlt
jns
fucomip
pusha
int3
and
mov
and
adc
xor
mov
mov
add
and
inc
rcrl
mov
xchg
cmp
leave
in
ja
bound
in
sbb
sbb
sub
ja
pop
or
out
ret
out
popf
sub
push
jmp
push
pop
pop
bound
push
scas
mov
cmc
aam
loopne
jp
sbb
mov
lcall
enter
xchg
mov
in
leave
je
jo
push
xchg
jns
in
xchg
cmpb
dec
lcall
pop
cs
insl
enter
stos
add
inc
cmp
or
repnz
sub
mov
lods
aam
pusha
xchg
mov
xchg
iret
mov
ftst
or
jmp
addr16
daa
and
cwtl
in
scas
roll
add
or
mov
jbe
xchg
xchg
push
or
outsb
xor
jns
daa
outsl
push
cmp
mov
pop
sti
in
mov
sbb
je
insb
shlb
rcrl
push
sub
pushl
repz
xchg
stos
sbb
mov
sbb
adc
std
dec
xchg
scas
sub
aaa
pushf
xor
dec
adc
pop
adc
in
fnstcw
inc
adcl
loop
leave
lret
sub
mov
pop
inc
push
lock
jb
xor
popl
or
and
notl
mov
jl
in
in
inc
out
rcr
call
rcl
leave
lds
or
xchg
lds
out
jp
rorl
lea
int3
leave
popa
test
jno
stos
fildl
aam
mov
fisubrl
cmp
in
fisttpl
aad
and
rol
xor
shl
lea
popf
leave
sbb
cmp
cmpsb
inc
mov
xchg
jb
xchg
add
push
mov
and
adc
sub
fwait
pinsrw
xlat
cmc
or
test
nop
in
callw
cmpsl
push
jb
pop
xchg
icebp
scas
inc
push
pop
adc
cmp
test
gs
mov
mov
xorb
bnd
and
xchg
lcall
jecxz
sbb
mov
out
sub
lods
lods
xchg
ss
xor
push
and
xchg
insb
jbe
movsb
xchg
mov
mov
aaa
mov
sbb
ret
adc
add
daa
loope
cmp
mov
lods
stc
mov
cmp
sub
push
push
test
pop
out
iret
cld
in
rcrl
mov
cmp
add
mov
dec
icebp
mov
sbb
xchg
inc
cs
add
pause
cltd
pop
aas
sub
arpl
xor
shl
decb
push
test
shll
sbb
mov
mov
nop
cmc
ljmp
out
mov
jbe
pop
lock
lcall
xchg
loope
or
call
jb
stc
xchg
and
into
nop
ds
mov
js
fisttps
filds
sbb
hlt
inc
xchg
xchg
xchg
xchg
rclb
and
pop
mov
push
cltd
cs
inc
jbe
xor
xchg
pop
loope
cmp
ljmp
adc
loop
test
push
xchg
mov
pop
sub
xchg
pop
in
mov
movl
es
adc
jne
dec
arpl
adc
cmp
cmp
incl
lea
aad
orb
fwait
clc
cmp
lock
aaa
or
mov
pop
adc
ja
pop
std
mov
fcmovu
mov
cmpsb
or
add
jp
cld
mov
inc
dec
outsb
ret
jl
xor
scas
mov
ds
repnz
inc
jo
ja,pn
and
mov
out
inc
lret
sub
adc
ss
adc
repnz
pop
push
sbb
add
aad
cli
fstl
popf
loop
push
in
pusha
repz
repnz
and
jmp
xchg
jno
fbld
cmp
cmc
mov
xchg
push
push
mov
pusha
shlb
shl
cwtl
sub
mov
dec
addl
movsl
or
cwtl
push
lcall
push
jb
sbb
popa
js
mov
xchg
dec
mov
push
mov
movsb
dec
cwtl
sub
mov
inc
pop
inc
in
pop
mov
push
push
xor
daa
mov
push
add
aam
out
dec
add
and
pop
out
push
xchg
xchg
testl
dec
sub
imull
stos
xorb
subl
cmpsb
mov
pop
sub
push
je
shll
sahf
cltd
cwtl
scas
repnz
xchg
add
out
orl
xchg
rolb
ds
push
add
test
and
adcl
or
cmpsb
mov
xchg
ja
lods
movl
das
unpcklps
insb
push
push
pop
dec
out
inc
sbb
dec
lods
lahf
outsl
sbb
lret
xorl
cs
iret
movsl
loop
adc
popa
ss
cmc
repnz
push
inc
fcoms
cld
dec
testl
aas
ja
repz
or
sub
cmpsb
sub
fwait
mov
stos
mov
push
push
jne
repz
push
roll
push
mov
in
stos
daa
mov
aam
clc
sub
mov
hlt
ss
hlt
pop
leave
jb
push
sarl
mov
sbb
xlat
out
fmuls
dec
and
call
pop
pop
sub
adc
or
jnp
xchg
out
pop
or
or
push
dec
and
lea
std
mov
xorb
sbb
fiaddl
xor
pop
cmp
cmp
jl
jno
fnsave
lahf
fs
testb
push
jmp
pop
mov
leave
ret
shl
jne
mov
scas
xor
inc
pop
cmpsb
push
inc
mov
pop
dec
dec
push
cmp
add
pop
lea
mov
sbb
pusha
lock
addr16
test
es
sub
cli
mov
mov
insb
mov
cltd
movsb
mov
fnstcw
xor
aam
jno
lret
dec
adc
jecxz
add
cmpb
mov
push
adc
loopne
cmpsb
jp
mov
test
inc
loopne
out
outsl
daa
dec
xor
lcall
pop
out
lret
aaa
shl
test
imul
add
xor
adc
subb
ret
xor
out
inc
fistpll
jge
icebp
inc
dec
pop
je
or
inc
repnz
je
push
fisttps
push
sbb
fistpl
sub
cmp
sub
lods
xchg
mov
sarl
jecxz
fbstp
inc
or
sub
iret
das
daa
cmp
lahf
adc
jae
and
dec
xchg
xchg
push
cmp
push
enter
pop
mov
arpl
cmp
mov
aad
adc
stc
out
xlat
enter
cli
inc
call
cmp
cmp
xchg
fldt
mov
pop
icebp
inc
add
flds
test
xchg
fwait
test
cwtl
sbb
call
inc
push
gs
cs
push
das
fsubl
add
stc
sbb
out
mov
int3
mov
dec
fists
sbb
lock
cli
and
mov
ficompl
pop
push
mov
je
out
jno
scas
psubsb
test
aaa
cltd
jnp
jle
and
dec
and
addr16
popa
cmp
and
popa
xor
add
jb
mov
in
or
ss
cwtl
xor
mov
push
out
add
popa
lahf
sbb
xlat
xor
sub
jo
lods
lea
cmp
mov
push
insl
sti
push
fwait
add
sahf
pop
jnp
dec
test
fistpl
mov
pop
in
test
mov
dec
iret
pop
shrl
ja
jecxz
out
push
loopne
push
jne
jnp
cltd
sub
in
cmpsb
test
inc
cmpsl
repz
xlat
sub
outsb
sub
into
sub
mov
loope
pushf
das
mov
clc
repz
pop
js
cmp
jg
test
sbb
fadds
mov
pusha
stos
and
mov
or
cmp
push
pop
pop
testl
test
int
ljmp
iret
inc
je
or
mov
mov
popa
shrl
clc
scas
or
xchg
lods
fcoml
ss
lahf
fdivs
and
data16
scas
mov
fbstp
mov
sub
jbe
add
pop
mov
jg
adc
adc
testl
lods
seta
sbb
shl
cmp
jg
sarl
aam
inc
es
xor
loopne
mov
fimull
or
in
leave
js
jle
mov
sub
xchg
pop
hlt
lods
push
cmp
ljmp
mov
jae
xchg
adc
loopne
aam
ret
cmp
pop
aaa
fsubp
or
add
out
adc
jg
in
mov
cs
sub
mov
sub
es
cmpsb
fbstp
and
fldt
or
outsb
loope
scas
cmp
push
test
hlt
movsl
mov
cs
inc
int3
fisubrl
sbb
jmp
mul
pushf
daa
insb
les
mov
jmp
test
push
scas
rcrl
dec
fs
pusha
outsb
lcall
mov
lcall
fscale
jl,pt
add
enter
push
or
ficomps
lcall
popf
mov
int3
fs
mov
mov
sub
dec
ret
ret
push
jno
add
mov
sbb
or
push
iret
je
mov
lds
dec
push
mov
jb
push
mov
xchg
jne
add
sub
das
lret
sbb
clc
into
pop
out
push
push
push
loope
inc
lcall
dec
int3
subb
out
in
dec
push
add
hlt
mov
add
mov
mov
mov
nop
stos
mov
cmc
sub
push
sarl
int
testl
jg
pusha
xlat
dec
fstpl
in
shrl
or
aad
inc
sarl
mov
dec
sbb
push
addr16
add
jle
pop
sbb
mov
lods
test
jae
sub
ds
loopne
inc
inc
dec
cli
adc
ljmp
pop
scas
pop
fs
jb
mov
mov
scas
imul
mov
or
shr
cmp
adc
or
fndisi(8087
mov
xchg
shl
das
xor
test
fidivrl
xchg
out
pop
stc
movsb
jp
adc
cmp
incb
cmp
sub
and
bound
push
lret
aam
add
and
pop
clc
cmpsb
inc
out
jp
jg
pop
xor
ret
loop
dec
pop
xor
adc
push
pop
sbb
adc
ficoml
orl
es
and
mov
push
push
or
and
pop
ret
int3
rcrb
push
dec
dec
pop
pop
fisttpl
add
xchg
push
lret
mov
inc
dec
popa
ja
jae
push
subb
mov
adc
loope,pt
xor
adcl
lods
push
popf
lahf
scas
sarb
pop
rcr
xlat
stc
xor
aaa
mov
jb
jmp
mov
push
outsb
inc
out
or
or
je
mov
mov
sbb
test
push
insl
cltd
jbe
fisubrl
int
sub
mov
pop
sub
pop
mov
cmpsl
outsl
arpl
shl
out
scas
stos
inc
mov
lods
pop
int
sbb
rorb
jg
xor
jb
add
cltd
sbb
shl
sbb
push
jmp
jge
call
stos
sbb
out
std
xor
inc
and
sbb
out
outsb
test
dec
inc
fwait
nop
jnp
jle
ret
and
xorl
gs
hlt
push
lea
push
test
mov
les
rcr
cli
fbstp
add
ljmp
fidivrs
popf
cld
inc
mov
mov
cmpsb
mov
aad
jne
mov
lods
stos
push
daa
dec
push
cmovs
mov
movsb
push
fisttps
xor
pop
or
dec
sub
pushf
or
sub
sbb
pop
push
xchg
adc
jmp
adc
data16
sub
sub
dec
ja
inc
inc
out
and
stc
add
inc
jmp
out
add
adc
inc
out
ja
pop
movsl
rdtsc
xor
mov
scas
sbb
lret
int3
xor
enter
in
shlb
or
jbe
lea
imul
mov
insb
xchg
into
shlb
add
jb
rcrb
sbb
outsl
loop
je
xor
aas
dec
leave
push
mov
xchg
inc
loope
pusha
mov
icebp
inc
lea
loopne
fldenv
fst
ret
enter
jbe
pop
jbe
lahf
pop
lahf
xchg
icebp
in
xor
aam
movsl
mov
mov
flds
mov
jecxz
lcall
test
cmpsl
imul
leave
les
fbstp
mov
pop
sbb
jnp
jae
mov
das
pop
and
dec
and
xchg
mulb
pop
out
gs
inc
sti
jb
and
jmp
or
iret
dec
cltd
rolb
jmp
ret
mov
sbb
mov
and
mov
cmc
mov
ds
cwtl
ret
sub
xchg
stos
imul
dec
in
movsl
hlt
mov
lcall
mov
loopne
fmul
clc
mov
jae
inc
inc
repnz
pop
push
jp
xchg
pop
adc
aad
lret
inc
mov
inc
stos
imul
cmpb
imul
pop
dec
mov
hlt
arpl
outsb
jecxz
std
in
or
xchg
mov
pushf
pop
outsl
lods
inc
rcrl
inc
inc
sub
xchg
add
mov
movsb
jae
push
jl
jno
int
pop
push
data16
xchg
mov
or
or
sti
cmpsb
jecxz
js
jno
push
arpl
pop
ror
push
mov
xor
sahf
adc
pop
test
push
in
sahf
inc
xor
pushf
arpl
ja
push
xchg
iret
std
test
mov
and
xor
fsubrp
fs
pop
sub
and
jb
sarl
sub
dec
cltd
xor
cmp
rclb
adc
mov
pushf
aaa
xor
aas
xor
icebp
cwtl
cmpsl
test
ret
inc
cmp
pop
jecxz
push
push
repnz
aad
sarl
pop
cmp
into
push
mull
cld
movsl
and
or
shll
mov
gs
sti
lods
icebp
lock
cmpsl
cmpl
scas
mov
inc
stc
inc
mov
ljmp
xchg
mov
lea
jb
xchg
pop
and
cmp
test
pop
dec
dec
xchg
dec
mov
sub
and
mov
and
nop
fwait
pop
test
imull
fisubs
hlt
popf
mov
and
ficomps
dec
sbb
add
dec
mov
sbb
xchg
pop
fwait
ljmp
insl
pop
push
jg
inc
loopne
cmpsb
mov
sbb
addr16
lahf
xor
or
fldl2t
data16
push
fstpl
and
xor
shlb
inc
rcr
xor
mov
iret
in
jo
jae
mov
repnz
mov
mov
or
lea
in
fidivrl
fs
push
or
mov
frstor
lret
test
xor
dec
adc
and
push
insb
jg
adc
sbb
aad
or
xchg
inc
ret
aam
daa
stos
push
pop
jle
or
repz
std
push
sbb
hlt
lods
lods
pop
repz
fsubrl
pop
mov
xor
pop
enter
xor
aas
mov
dec
fsubr
or
jnp
ficoml
fcompl
pop
jp
mov
ja
push
add
jecxz
jle
xchg
sub
out
test
push
jo
push
xor
jae
popf
in
aas
pop
jg
jmp
inc
push
in
pop
int
mov
and
stos
xchg
jb
lea
sahf
mov
and
xchg
jae
jnp
aam
inc
mov
ja
pop
mov
iret
int
cmp
or
addl
insb
and
and
push
add
cmp
in
std
sbb
icebp
push
sbb
add
pop
and
dec
sbb
ss
fstps
out
fs
jmp
out
dec
imul
jae
push
sub
fstpl
jb
add
addb
into
lock
and
data16
inc
cmp
mov
repnz
jmp
cmpsl
roll
in
push
mov
cmpsb
loop
add
mov
inc
ds
xchg
cmp
dec
sahf
xchg
pmulhuw
lods
inc
pop
add
jl
add
add
jle
fwait
jge
cmp
mov
add
test
adc
leave
dec
mov
pop
xchg
pusha
dec
pop
push
mov
or
cmpsl
lret
xchg
pop
aam
rclb
lods
test
clc
push
int
add
jne
cwtl
js
orl
sbbb
clc
sub
ret
aas
xor
js
loop
arpl
mov
dec
mov
fsts
mov
mov
push
add
pusha
cld
jg
sahf
mov
test
pop
cltd
pop
xor
xchg
mov
fsubrs
pop
je
dec
test
cmpsl
pop
inc
ret
xlat
pop
repnz
loope
xchg
or
test
dec
popa
sub
mov
cld
and
es
mov
cmpsl
int3
incl
into
adc
jae
adc
push
jb
add
pop
add
mov
add
fwait
push
outsl
jp
push
cmpsl
sbbb
lret
sahf
mov
mov
ret
repz
xchg
or
cmc
inc
push
lcall
xor
cmp
ficompl
xchg
cmp
popf
adc
mov
js
cmpsb
aas
insb
inc
xchg
xchg
push
incl
jmp
jne
testb
jae
or
xchg
cltd
push
sub
xchg
test
out
pushf
pop
movsl
xchg
mov
mov
push
jnp
dec
fst
inc
insb
dec
sbb
std
test
jo
sub
ficoml
push
jg
outsl
rcrl
add
aas
repz
mov
mov
shrb
mov
repz
imull
pop
or
adc
cmp
and
mov
test
aaa
add
pop
je
pusha
call
call
cld
lods
push
test
xor
fmull
sbb
pushf
int
cmp
movsl
fs
or
mov
pop
pop
leave
jnp
loope
push
xchg
nop
in
imul
xchg
popa
sbb
mov
int3
dec
cwtl
sub
aas
mov
test
adc
movsb
ret
aam
jmp
lods
scas
stc
xor
in
adc
mov
jnp
lods
sub
and
mov
and
lret
jl
fistpl
fidivrs
shl
cmp
fists
xor
sti
cld
inc
lods
scas
repnz
sbb
rcrb
pop
ljmp
jge
mov
cmp
push
inc
and
mov
fistl
outsl
dec
cmc
lret
sub
push
sbbl
popf
jle
jmp
ret
gs
adc
sahf
xor
mov
in
and
pushf
fisttpll
push
sbb
sub
test
leave
jbe
or
inc
in
and
ljmp
xor
lods
lret
aam
mov
insb
push
loope
xor
xchg
sub
cld
dec
pop
jns
pop
cwtl
imul
xchg
mov
xchg
push
mov
xchg
shlb
or
sbb
scas
cmp
in
push
test
lods
lods
sub
pop
ja
mov
cli
shll
sub
sub
sbb
sub
pop
adc
mov
xchg
aad
inc
add
xchg
loopne
mov
adc
fwait
ds
pop
out
xor
cmpsb
adc
pop
fistpll
push
xchg
mov
scas
pushf
adc
in
xchg
test
push
imul
cmp
int3
push
movsl
dec
pushf
icebp
test
and
xor
sub
add
pop
lods
movsl
adc
rorb
fadd
inc
mov
outsb
stos
sarl
test
jmp
imulb
mov
pushf
dec
adc
cmp
test
xchg
clc
jp
or
push
out
push
and
jbe
or
jbe,pt
dec
rorl
outsb
enter
aaa
js
popf
adc
xchg
fsubr
les
pop
fcoml
xor
insl
call
call
push
mov
and
pop
push
cmp
jle
mov
leave
push
jmp
ret
ds
push
lods
cli
lcall
or
xor
mov
in
mov
in
jp
dec
sub
push
mov
inc
or
ss
xchg
mov
in
jge
sbb
inc
loop
push
cs
dec
out
sti
fs
mov
or
and
shrb
and
in
testl
insl
mov
into
shrl
sub
xchg
jns
fistl
sahf
divps
xorl
lcall
cmpsl
jb
sub
pop
xlat
test
xor
jnp
and
xchg
xchg
cmpsb
xchg
cs
subl
pop
shll
lret
scas
pop
xchg
movsl
fimuls
leave
pop
dec
ja
sub
pop
sti
mov
data16
xchg
push
push
adc
mov
sbb
cmp
mov
popa
ja
sub
sbb
fidivs
push
sbb
call
fdivr
es
push
in
pop
jne
add
add
mov
push
fldl
pusha
dec
enter
jle
cmp
sarl
out
adc
loop
inc
xchg
sti
repnz
jbe
adc
aaa
adc
xchg
shlb
int3
aas
push
mov
mov
xlat
fistpl
add
mov
or
push
or
adc
fcomp
mov
cmp
adcl
fwait
in
in
loop
fwait
and
clc
lret
or
mov
mov
mull
mov
pusha
sub
int3
lods
lods
jg
xchg
lret
jno
adc
in
push
lahf
xor
mov
in
dec
pop
xchg
fisubs
xchg
popa
rolb
fsubs
pusha
popf
mov
in
cltd
mov
sub
daa
leave
test
jne
and
dec
sub
mov
bound
int3
jl
lcall
loope
mov
cld
aad
fsubp
pop
mov
adc
pop
cmc
xor
orb
dec
inc
pop
xor
icebp
lods
mov
sub
mov
sbb
cmp
out
popf
mov
xchg
loope
xchg
jl
ret
insb
int
test
mov
dec
jmp
faddl
fdivrl
es
jl
call
adc
mov
xor
popf
fwait
inc
mov
or
mov
pusha
inc
in
sti
jnp
mov
push
lret
mov
sti
into
or
dec
cmp
cmp
incl
mov
mov
lcall
and
cwtl
pop
add
lahf
js
xor
cmp
sub
xchg
pop
clc
jmp
repz
in
cltd
jecxz
cmpsl
push
mov
in
shll
rclb
mov
dec
push
pop
lods
jae
lret
clc
cmpsl
roll
dec
sti
stc
subl
mov
jl
lock
xchg
dec
jmp
fsub
fs
test
ljmp
pop
popa
popa
cli
orb
lock
mov
xorl
inc
or
pop
fildll
in
fbld
jne
bound
aad
inc
flds
pushf
inc
mov
iret
adc
sbb
add
xchg
cmpsl
es
mov
aad
inc
test
pop
mov
and
sub
cmp
ljmp
sub
dec
mov
mov
pop
cmp
data16
das
xor
ljmp
aaa
push
fldt
ret
repnz
pop
or
mov
lret
fdivp
jp
cld
orl
nop
mov
les
xchg
enter
cmovae
xchg
xor
mov
loopne
mov
lods
cli
lret
mov
mov
in
sub
or
cmpsb
or
call
dec
lcall
outsl
hlt
pop
dec
fcomps
jecxz
or
push
push
inc
adc
mov
inc
add
pop
je
push
ret
ss
push
dec
imul
lea
inc
test
mov
sahf
adc
add
outsl
pushf
inc
push
mov
jo
adc
insl
pop
lods
jmp
test
adc
cwtl
rol
iret
fwait
imul
jnp
scas
test
out
sbb
sub
ja
push
movsl
repz
stc
adc
shll
jns
xchg
pop
or
jg
push
mov
adc
jo
jp
sbbb
mov
fsubs
enter
bound
mov
cmpsl
jne
fwait
bound
or
js
jp
jmp
lods
frstor
sbb
testb
leave
mov
nopl
add
pop
shlb
fidivl
cmpsb
add
and
sbb
stos
std
xor
cmp
add
hlt
or
inc
arpl
movsl
add
mov
adcl
enter
dec
scas
sti
xchg
mov
iret
push
and
int
push
dec
in
in
adc
mov
pop
mov
fisttpll
test
inc
pop
mov
out
inc
lret
out
inc
pop
dec
jae
sarl
dec
jns
mov
faddl
andl
push
mov
jle
dec
dec
jbe
pop
repz
lds
out
js
lret
add
das
sbb
shrl
fwait
lea
sbb
push
faddl
leave
sub
dec
incb
jae
jno
in
test
mov
jnp
loopne
sahf
arpl
in
dec
nop
and
jg
cmp
je
mov
jno
mov
sub
and
mov
adc
loope
out
or
psrlw
mov
or
dec
call
cmpsb
sbb
jbe
inc
cmp
jge
testl
lea
mov
iret
pop
cld
jle
ss
dec
or
cmp
ljmp
je
add
sbb
loope
inc
mov
inc
sub
mov
pop
and
sub
or
xchg
dec
leave
arpl
jo
xchg
cmp
sbb
outsb
pop
lret
mov
inc
inc
std
sub
rol
xchg
mov
jp
jg
xchg
stc
sahf
aad
rcrb
mov
and
sbb
and
das
push
test
dec
roll
je
cmc
fnstcw
mov
arpl
sbb
out
cld
insl
jge
jl
add
mov
adc
xchg
pop
les
push
subb
out
cli
push
gs
and
mov
sahf
sbb
push
or
xchg
cs
add
cwtl
out
adc
xchg
xchg
insb
and
pusha
sarl
mov
lds
setle
mov
ljmp
nop
jne
pusha
sbb
aaa
inc
or
fdivl
and
dec
int3
and
pushf
test
jnp
iret
cs
mov
push
fiaddl
iret
ds
shll
jle
lods
sbb
movsb
mov
cmc
xchg
pop
aad
mov
jno
mov
dec
add
or
xor
xor
jg
mov
push
inc
push
xchg
push
dec
cmpsb
adc
push
pop
fistpll
sub
sbbl
mov
sbb
or
push
ljmp
test
or
shlb
xchg
fwait
pushf
sub
mov
jge
lret
lahf
sbb
mov
mov
ljmp
ja
je
loope
and
jg
loop
inc
das
stos
aam
das
pushf
cmp
in
pop
dec
push
pop
movsb
or
cmp
inc
data16
mov
imul
lahf
mov
fcomps
sub
mov
jo
inc
dec
xchg
std
inc
sti
imul
mov
cwtl
sbb
adc
scas
cmc
inc
sub
mov
in
push
lea
test
mov
jne
sub
sub
iret
push
shrb
out
popf
add
push
sarl
add
inc
sbb
adc
and
and
pop
xchg
lods
dec
add
dec
push
cmpsb
addl
fbstp
push
fisttpll
mov
ret
mov
xor
dec
pop
pop
pop
jecxz
mov
jae
jo
xchg
cmp
push
or
and
pop
mov
cmc
add
gs
xchg
inc
jbe
rorb
test
push
mov
aad
push
loop
insb
add
jp
ficomps
sbb
lahf
iret
popf
mov
sahf
jne
adc
xor
mov
mov
lods
rolb
rcl
cmp
mov
push
pop
mov
sub
sub
mov
popa
or
dec
stos
cmp
xor
cmpsl
xchg
incb
mov
jo
jo
int
cmp
and
outsb
mov
test
sbb
push
int3
jae
mov
ss
adc
push
into
movsb
push
scas
in
cli
xor
cs
push
test
mov
mov
aaa
or
or
add
int
das
mov
movaps
ljmp
mov
pusha
shlb
add
pop
test
mov
push
adc
and
jo
jo
pusha
push
mov
push
fcomip
xchg
sti
inc
inc
rorb
shlb
mov
dec
scas
mov
add
outsb
nop
mov
lds
or
fs
xchg
fstl
repnz
outsl
test
dec
push
mov
lods
lahf
mov
push
enter
hlt
pop
inc
stos
sti
cmp
ja
xchg
mov
insl
or
dec
pop
xor
jne
loopne
popa
mov
jno
fsubs
lock
add
adc
aad
in
cld
pop
and
or
nop
stc
adc
fisubs
shlb
mov
cmp
xor
adc
or
mov
ret
jle
fnstenv
inc
mov
pop
adc
xchg
or
notl
in
cs
test
xor
cmp
inc
mov
shrb
or
loop
movsl
insb
int3
popa
adc
xor
divb
sahf
movsl
sub
mov
test
andl
shll
movsl
push
adc
out
out
push
push
xchg
aaa
sbb
jmp
lret
or
jecxz
lret
xor
dec
pop
imul
push
loop
sub
adc
xor
les
arpl
jecxz
cmp
inc
das
cmp
into
lcall
leave
xchg
jge
out
movsb
lock
out
out
pushf
xchg
xchg
sub
ja
roll
icebp
xor
cmpsl
and
lods
bound
js
pop
pop
or
cmp
push
dec
adcl
xchg
clc
cmp
xor
sbb
outsb
sahf
divl
sub
push
push
negl
ss
xchg
pop
xor
pop
jl
pop
es
addl
sub
inc
aaa
or
push
pushw
call
dec
xchg
fwait
cmp
adc
mov
sbb
add
push
jge
sub
cmp
mov
cmp
fadds
push
lahf
add
mov
push
mov
mov
lcall
es
jmp
push
xlat
pop
and
test
lret
stos
xchg
out
cmp
dec
push
mov
pop
jbe
mov
rorl
dec
pop
mov
ja
adc
cli
xor
arpl
movsl
and
push
in
sbb
pop
inc
test
mov
adc
mov
iret
adc
dec
clc
ret
lock
adc
mov
lcall
xchg
dec
out
stos
mov
jp
test
sti
negb
bound
mov
sbb
sub
shlb
xchg
push
mov
shrb
push
in
sarb
repz
push
stos
pop
xor
repz
push
push
clc
add
mov
and
xlat
pop
cmp
les
repnz
mov
movsl
dec
push
shrb
ja
test
mov
pop
mov
add
jne
aam
mov
les
xchg
lods
jmp
ja
into
arpl
repz
fisttps
mov
cld
jae
scas
repz
popa
pop
xchg
lock
adc
dec
cs
imul
daa
or
rolb
fistl
and
xchg
sbb
adc
jns
push
sub
inc
sub
mov
das
jae
test
sbb
adc
xchg
xchg
inc
lods
fcomi
rorb
sarl
cmp
out
mov
das
cmp
push
leave
insl
rolb
les
adc
mov
cmpsl
aad
dec
sub
es
shll
push
xchg
lds
jmp
add
xchg
addr16
jnp
in
aad
mov
out
mov
bound
push
add
sti
push
insb
cmp
mov
inc
insb
and
xchg
or
fildll
test
push
pusha
add
mov
xchg
push
pushf
dec
cmp
and
push
mov
add
adc
clc
jbe
mov
jno
adc
cld
pop
outsb
scas
shrb
lea
push
sbb
adc
inc
std
mov
out
or
inc
imul
cmpsl
mov
loope
sahf
and
sub
rcll
cli
jne
jg
adc
ds
xchg
pop
sbb
addb
shrb
mov
mov
inc
jg
std
test
test
xchg
mov
pop
xor
dec
mov
mov
jno
outsb
mov
xchg
push
sbb
xor
mov
or
ljmp
add
int3
and
lock
push
mov
jne
sbb
dec
dec
adc
arpl
adc
push
filds
rcrl
cmp
lock
sub
or
cmp
adc
out
push
movsb
rcr
mov
xchg
into
or
sbb
and
pop
testl
fdiv
add
out
add
push
add
nop
push
dec
push
insb
clc
push
iret
out
jg
mov
daa
mov
neg
xchg
xchg
and
and
push
cwtl
sti
aas
pop
sub
xchg
in
xorb
mov
addr16
jae
push
popf
popa
mov
cmp
mov
cmp
or
arpl
movsb
rcll
enter
push
mov
adcl
cmc
test
xor
inc
jno
test
cmp
mov
sbb
mov
stos
cmp
subb
icebp
lods
lea
stc
lahf
jb
movsb
inc
jnp
push
xor
arpl
gs
pop
iret
loopne
jp
test
inc
pushf
push
stos
jmp
adc
jb
push
adc
mov
fldl
sub
dec
pop
rcl
xchg
xchg
lahf
lahf
fstpt
mov
inc
fistpl
scas
sti
stos
dec
inc
stos
loopne
jae
sub
fwait
push
or
dec
add
or
rcl
jmp
das
out
inc
mov
pop
adc
push
add
fldl
imul
insb
or
or
std
lods
sub
js
movsb
xor
inc
jp
push
outsb
rorb
in
inc
cs
mov
jg
push
inc
icebp
cmp
pop
xchg
xchg
mov
lods
jmp
ss
pop
inc
mov
rorl
adc
imul
les
inc
insb
movsl
xchg
adc
je
dec
daa
aas
jl
jb
jle
xchg
inc
ret
or
or
mov
dec
dec
aad
add
mov
jg
cmc
fmull
arpl
sarl
jbe
idiv
imul
pop
jno
mov
push
cmpb
faddp
inc
mov
pop
add
mov
lods
sbb
mov
inc
add
mov
cmpb
andl
in
mov
popa
jns
aas
std
into
ret
mov
cltd
push
mov
xchg
rcll
jb
lds
inc
xchg
aad
sti
jg
pushf
sub
mov
insl
mov
push
pop
dec
mov
jp
into
xchg
rorb
outsb
out
fiaddl
repnz
in
jb
and
loopne
mov
imul
aad
mov
pop
adc
mov
pop
mov
js
lds
fld
fmuls
lods
dec
pop
mov
dec
test
loope
jno
clc
jl
mov
jecxz
push
ret
outsl
lea
repnz
pop
fnstcw
push
xor
cld
mov
sbb
std
loop
push
dec
jmp
adc
cmpsl
ja
fisttps
add
jg
cmp
stos
ficoml
lret
inc
and
or
mov
mov
dec
mull
adc
mov
sahf
or
push
xor
jns
aas
outsb
in
test
xchg
test
in
fldcw
push
xor
popa
aam
addl
js
leave
inc
aaa
outsb
pop
cld
imul
sub
imul
in
sahf
stc
add
shrb
xor
xchg
inc
mov
dec
fimuls
jp
cmp
inc
or
xchg
jnp
xlat
sbb
pop
add
mov
dec
cltd
aas
sarl
xor
sub
aad
sti
outsb
mov
xchg
pop
shll
ret
flds
ret
rcrb
inc
lret
add
xor
jl
or
jecxz
dec
push
or
mov
loopne
and
jmp
xchg
lret
lods
dec
cmc
pop
repnz
gs
mov
cs
lret
imul
lds
mov
cwtl
popf
mov
test
hlt
jbe
pop
into
jae
imul
inc
mov
out
out
popa
dec
fnstenvs
nop
imul
or
inc
je
add
or
shll
xchg
sub
mov
cld
mov
mov
test
ds
aaa
aas
xchg
andb
xor
mov
mov
sahf
popa
sub
or
arpl
fisubrl
arpl
jne
ret
out
xor
fsubr
pusha
in
and
mov
mov
bound
int
mov
les
arpl
dec
mov
addr16
mov
xchg
cmp
rcl
cmp
popa
mov
test
sahf
dec
inc
adc
push
in
fstl
pop
testl
inc
arpl
add
aam
arpl
jmp
jge,pt
lcall
dec
clc
popl
mov
faddl
out
jmp
jne
movsl
or
std
test
in
in
movsb
ret
enter
in
xchg
pop
scas
add
cmp
jo
cltd
daa
push
xchg
and
cmp
rcrb
ds
sahf
cmp
cwtl
lock
fsubrl
mov
lds
inc
dec
jp
stos
pop
scas
mov
int3
or
mov
jbe
xchg
mov
cmc
mov
pop
gs
jae
divw
adc
add
lret
pop
or
sub
jb
lret
mov
add
cmpsb
rorl
subb
fidivrl
pop
jns
xor
pop
test
lcall
dec
sub
adc
xor
mov
cmp
scas
mov
ret
andb
mov
xor
shrb
pop
adc
sub
mov
mov
neg
cli
mov
or
pushf
push
and
adc
scas
out
lds
cmp
loopne
add
cld
jp
pusha
and
mov
mov
add
fnstsw
sti
sbb
hlt
and
cs
dec
push
aaa
xchg
stos
test
mov
or
loop
jmp
mov
adc
inc
mov
mov
inc
adc
mov
or
mov
mov
jp
cltd
adc
fbld
sbb
or
xor
pop
pop
xchg
out
sbb
repnz
add
repnz
int3
and
or
insb
adc
nop
pop
push
xchg
insl
mov
adc
push
cmp
sub
jmp
scas
out
pop
push
lds
dec
repnz
sub
enter
adc
arpl
pop
fdivrl
pop
not
std
mov
fstps
scas
or
lods
in
insb
outsl
mov
fdivl
outsl
test
inc
mov
scas
push
nop
stos
dec
dec
add
mov
jno
cmp
pop
popl
mov
mul
insl
fisubs
cmp
cs
cli
nop
imul
bound
pop
test
popf
ljmp
add
cmp
jae
aaa
adc
lock
jbe
shlb
adc
sbb
sbb
lds
mov
aad
daa
adc
ret
mov
mov
int3
inc
dec
mov
pop
sub
add
add
and
nop
ja
aaa
pusha
sbb
cs
xor
mov
mov
rcll
xchg
inc
or
call
shll
or
xchg
push
inc
xor
div
mov
cmp
cmp
push
test
pop
loope
in
arpl
lock
in
adc
test
bound
lcall
cwtl
mov
enter
mov
inc
xor
add
push
mov
and
lret
je
loope
jecxz
lods
push
daa
sarb
gs
push
dec
rep
dec
xor
aam
or
xchg
jp
outsb
leave
repnz
push
clc
xchg
lea
inc
sbb
aaa
jb
test
cmp
adc
adc
xor
dec
xor
xor
jg
jmp
in
sbb
jne
lcall
out
enter
pop
push
fld
or
push
dec
jmp
pop
cmc
pop
adc
dec
push
mov
repnz
shr
sbb
test
cli
push
jmp
xor
pop
cli
xor
es
insb
out
repz
or
mov
rcll
cmp
xor
ss
pop
xor
push
add
aad
sbb
les
mov
jno
sbb
inc
mul
adc
add
std
mov
push
push
pop
adc
addb
cld
loope
lret
repnz
add
loop
push
xchg
sbbl
or
dec
daa
push
adc
cmp
sbb
ret
and
xchg
adc
mov
cmc
cmp
stos
test
lret
mov
dec
or
inc
cltd
xchg
lcall
and
mov
jecxz
out
inc
pop
and
adc
push
lcall
jo
mov
dec
rorl
rclb
push
pop
xor
lret
jbe
aas
sarb
loop
push
or
sti
jl
aas
push
dec
test
nop
rcrl
es
loop
xor
inc
or
repz
fucomi
and
les
fimuls
rolb
adc
inc
in
dec
in
dec
flds
adc
jne
xchg
sub
jle
into
push
insb
les
add
add
dec
mov
and
enter
test
pop
xchg
gs
push
mov
hlt
push
scas
add
xchg
add
jg
jno
cmpsl
push
inc
fcmove
stos
cld
or
inc
inc
sub
mov
loope
pop
nop
fisubs
movsl
das
push
test
mov
lds
addr16
jge
aam
adc
xor
dec
lret
fwait
cld
ror
add
cmp
out
pop
sub
ficompl
jne
repz
jmp
int
out
push
movsb
mov
lret
xchg
aam
xor
sbb
outsl
aam
out
clc
jnp
cwtl
lock
sub
je
sar
add
je
repz
in
mov
lds
jge
cltd
bound
enter
das
jo
ja
test
jne
sub
fidivrs
adc
xchg
fcomps
fisubrl
cmpsb
cmpsb
ja
popf
mov
mov
lahf
lret
inc
in
jecxz
ret
ret
mov
scas
call
mov
mov
fildll
fdivs
imul
mov
orb
lret
jb
add
push
push
xchg
adc
xor
add
and
std
shrb
cs
jne
xor
mov
scas
mov
inc
out
jb
repnz
int
xor
push
mov
or
mov
mov
adc
xor
mov
pop
mov
pop
dec
xor
adc
adc
ds
fs
outsb
into
push
jno
out
aad
jno,pt
pop
les
mov
insb
addr16
cld
xchg
lods
or
shlb
divl
or
repnz
adc
in
lods
inc
inc
roll
push
cmpsl
dec
scas
mov
xchg
lret
inc
jb,pt
das
jecxz
xor
xchg
mov
test
stc
lea
cli
fildl
pop
test
mov
mov
jl
dec
mov
sbb
inc
aaa
movsl
fsqrt
mov
ds
pop
cmpsl
mov
add
jg
inc
mov
or
mov
jnp
ljmp
jge
ret
sbb
and
mov
push
sub
mov
cmp
data16
jp
cmovnp
int
aaa
jbe
clc
mov
pop
fs
mov
jle
je
data16
add
imul
fisubrl
aaa
inc
adc
mov
pop
test
push
sarb
xchg
lcall
sti
sub
push
pusha
xchg
sub
push
cmp
mov
fists
add
push
fbstp
lods
pop
sbb
inc
repnz
aaa
push
add
rorb
cmp
mov
mov
test
push
gs
pop
mov
mov
pusha
dec
fiaddl
push
sbb
inc
lds
mov
pop
xor
xor
in
dec
mov
imul
lock
sbb
push
xor
sub
and
shrd
gs
xchg
pop
pop
out
test
sbbb
fstpt
cs
hlt
stos
lcall
ljmp
push
xor
insb
lret
fsubs
outsb
cmp
cmpb
ret
sarl
iret
aam
mov
mov
ljmp
sbbl
mov
loopne
mov
or
out
loopne
xlat
sbb
imul
cmpsb
shlb
push
or
in
mov
jge
and
cwtl
mov
sub
std
xchg
pop
js,pn
push
mov
dec
dec
das
aas
gs
arpl
or
pop
mov
xchg
xor
adcb
stos
fldcw
inc
mov
xor
cmp
mov
push
inc
inc
sarl
fs
push
and
adcl
sub
mov
ret
stos
push
mov
jo
stos
sub
jbe
insb
mov
or
shl
ss
and
lods
stos
lret
out
dec
pop
jecxz
pushf
sbb
jl
or
mov
dec
or
or
xor
jnp
xchg
bound
push
fldt
xor
in
rorl
sbb
stos
mov
stos
adc
loopne
push
pop
jmp
xor
xor
ja
repz
cli
push
sbb
mov
xchg
push
xchg
testl
mov
or
mov
mov
push
jb
or
sahf
dec
insb
and
cmc
push
cmpsl
movsl
push
fidivrs
sti
popf
out
fmuls
ss
adc
dec
inc
mov
clc
cmp
jno
jo
mov
int3
inc
ficomps
lods
cmpsl
cli
mov
jo
xor
xor
dec
test
rcrb
jno
bound
shr
loopne
or
cmp
mov
data16
and
xor
xchg
adc
push
fnstenv
mov
or
mov
add
adc
push
mov
ret
inc
jp
cmp
push
int
pop
adc
mov
xchg
sbb
repnz
aad
jbe
mov
inc
fwait
lea
int
xor
daa
mov
pop
das
mov
xor
and
dec
xchg
fimuls
push
pop
mov
mov
sbb
mov
fsubr
mov
rol
jecxz
nop
cwtl
ret
popa
sub
pop
sbb
ljmp
mov
lods
mov
adc
test
or
and
pop
iret
enter
jecxz
pop
push
in
lods
scas
add
repz
out
and
xchg
repnz
add
mov
push
mov
pop
pusha
jl
mov
dec
sbb
and
rcl
div
je
sbb
pop
xor
cltd
movsb
dec
dec
cmp
lret
lds
jb
add
sub
inc
push
xor
push
jno
and
pusha
push
mov
jp
bound
jg
fadd
push
das
xor
jae
cmp
xor
and
pop
jne
js
test
sar
adcl
fdivrs
fcompl
ret
rorb
fs
xor
fidivrl
jmp
cmp
shrb
enter
mov
xor
test
dec
pop
jge
shrl
jnp
dec
or
inc
and
in
outsb
into
stc
shrb
nop
mov
cmp
pushf
popf
mov
xor
jo,pt
das
int3
mov
jns
in
pop
dec
clc
mov
insb
inc
ret
mov
xor
rcrb
por
push
aam
mov
stos
cmp
inc
or
test
clc
bnd
aad
add
pop
outsl
jbe
and
jmp
inc
sub
sbb
mov
cwtl
mov
or
bound
inc
jp
push
ss
cmp
inc
push
cmp
ret
or
les
jno
xor
cwtl
stos
push
ds
fimuls
jmp
in
rorb
push
shr
repnz
push
rcrb
outsb
nop
xlat
lods
mov
mul
call
add
repnz
or
dec
sbbb
in
rcrb
loopne
rcr
mov
pop
inc
jne
test
xchg
mov
pop
adc
pop
mov
incb
or
cmpsl
mov
mov
fwait
xor
mov
rcr
les
loop
fs
test
push
add
fdivrl
cmc
xlat
dec
pusha
mov
call
outsb
xchg
lds
jnp
call
mov
and
pushf
push
fcomps
cmp
jns
and
push
jle
xchg
or
jmp
xchg
xchg
mov
adc
mov
shl
mov
ja
mov
push
inc
out
mov
sub
aam
xor
xor
repz
lret
xor
mov
fcoms
or
lods
stos
test
jle
movsb
jg
push
inc
sti
adcl
lcall
mov
sbb
popf
lahf
cmpsl
addb
inc
cmp
out
jns
pop
pop
lahf
lret
rol
scas
pop
dec
lahf
pop
aas
fisttpl
xor
xor
ja
and
push
inc
ret
lods
mov
rcll
outsl
fiadds
ljmp
jnp
iret
pop
cmpsl
pop
push
inc
ror
and
iret
adc
cmp
gs
cld
mov
pop
mov
stos
fisubrs
cli
dec
adc
xlat
rcrl
sti
js
cmp
inc
std
data16
or
sbb
aad
repnz
movsl
cmp
add
jae
xchg
loop
jo
sub
outsl
fs
rclb
and
lret
addr16
dec
sar
push
pop
add
pop
pop
push
fs
sbb
nop
adc
jne
fsubrl
adc
scas
dec
rcrl
xchg
lea
stc
rorl
hlt
dec
and
add
jnp
xchg
or
testb
mov
pop
mov
mov
mov
cs
je
xor
mov
ljmp
xchg
hlt
and
dec
stos
mov
cmpsb
sbb
sbb
scas
faddp
sbb
fs
xor
aam
jno
mov
xlat
shr
sub
xchg
sub
and
mov
cmp
imul
daa
push
jge
and
xchg
out
jmp
jne
cmp
ret
nop
stc
daa
add
or
mov
inc
ljmp
sub
add
lods
das
mov
cmp
dec
xor
stos
lret
scas
insl
cmpsb
push
push
shl
aas
fsubrl
and
mov
mov
dec
cli
jge
mov
cmp
sub
cmpsb
aad
mov
mov
pusha
cmp
pop
push
pop
addr16
lods
rclb
imul
outsb
and
push
dec
arpl
sbbb
lods
push
sub
sahf
jge
or
mov
dec
fimuls
arpl
cld
mov
out
test
push
rcll
jmp
cld
or
adc
xor
fstps
lcall
scas
pop
aad
jecxz
add
int3
mov
xchg
test
sti
aad
dec
xlat
sbb
mov
repnz
out
dec
jne
in
repz
imulb
cmpl
nop
orl
xor
push
cwtl
xor
pusha
push
mov
sahf
push
fmull
mov
in
dec
or
cmp
fs
popa
mov
aas
and
aam
mov
sbb
ljmp
lds
out
loopne
lcall
push
pop
and
je
pop
pop
and
dec
inc
je
mov
push
sub
stos
add
jge
fsubrl
gs
sbb
data16
xchg
daa
cmp
cld
add
cmp
jge
mov
and
mov
aam
dec
mov
add
loopne
outsl
push
adc
add
cmp
gs
imul
mov
pop
pop
push
xchg
xlat
sarb
push
pop
in
pop
or
pop
idiv
into
and
fbld
rcll
xchg
add
jno
mov
dec
and
std
pop
aam
and
fstps
shl
sti
aam
xor
dec
mov
jae
dec
or
mov
xchg
pop
inc
jno
scas
scas
pop
push
push
pop
sub
nop
mov
iret
xchg
xor
les
mov
leave
add
mov
loope
movsl
inc
sub
push
add
push
fildll
cwtl
out
xchg
adc
sub
sar
sub
jno
daa
fimuls
test
jmp
pop
jl
jb
pop
pop
cwtl
sti
sbb
or
popa
out
pop
loopne
cmpsl
lret
negb
mov
or
lret
imul
push
idiv
cmpsl
mov
test
fiadds
cmpsl
xor
jno
mov
cmc
popa
sbb
or
xor
scas
or
push
mov
inc
jle
and
gs
xchg
mov
lret
fdivl
mov
cmp
jp
aas
pushf
scas
pop
aad
adc
add
js
add
pop
mov
pop
lahf
addr16
adc
mov
push
fsts
cld
lock
jb
std
mov
decb
pop
pop
mov
into
xchg
loopne
fisubl
std
and
dec
fbld
sarb
cltd
lret
nop
pop
jne
xchg
insl
xlat
push
mov
data16
call
stos
out
inc
int
dec
adc
inc
jne
in
loope
push
loop
shrl
pop
adc
ss
adc
cltd
test
dec
jecxz
cld
adc
jno
lods
add
stos
push
sub
dec
pop
xchg
inc
rorl
xchg
dec
mov
cwtl
scas
fmul
push
xchg
cld
pop
cmc
fdivs
lock
push
imul
mov
push
and
je
xchg
mov
repz
xchg
fwait
popf
repz
push
sbb
cmc
movb
jge
or
xchg
sub
jbe
push
enter
sub
mov
mov
mov
lret
and
pop
es
adc
inc
cmp
test
test
dec
ss
xlat
xchg
xchg
std
xchg
jle
adc
jmp
dec
pop
or
xor
push
aam
xor
xor
call
fsubl
in
aas
lods
aas
outsl
add
fucom
negb
lea
or
icebp
lods
popf
aas
mov
fstpt
ljmp
jge
xchg
push
dec
popa
lret
das
ljmp
aaa
jl
scas
pop
sub
and
push
adc
push
mov
jae
mov
ret
sar
fimull
mov
xchg
mov
nop
jl
out
int
adc
out
sahf
xor
rcr
dec
nop
mov
fwait
push
jmp
jb
cmp
fsubrs
dec
cmp
adc
xchg
out
stos
ftst
dec
sahf
and
data16
les
rep
fmull
push
mov
pop
jne
inc
lods
mov
inc
ss
bnd
adc
push
and
repnz
rclb
aaa
pop
imul
cwtl
cmp
lret
popf
and
sarb
pop
popa
cmp
rorb
or
inc
test
loopne
popa
out
pop
iret
xor
xor
or
and
push
dec
stos
ds
push
add
jp
or
or
xor
outsb
pop
and
out
cmp
bound
and
adc
xlat
mov
shll
dec
out
cmp
add
pop
mov
push
aad
push
xchg
cmp
jl
incb
dec
push
mov
inc
mov
into
mov
jecxz
pop
sub
loope
movlps
mov
pop
fdivrl
mov
inc
movsb
lock
mov
adc
jbe
sarb
iret
fsubs
push
mov
das
aad
mov
idivb
sub
rcll
add
ss
out
jnp
push
cmp
test
ret
jb
jle
add
aas
mov
inc
into
dec
mov
add
lock
insl
fmulp
rclb
push
jne
adc
fidivs
pushf
add
cmpsb
mov
out
push
mov
mov
insb
mov
adc
dec
or
data16
xchg
loop
mov
xor
cmpsb
xchg
rcll
xor
or
jp
outsl
xor
jg
jo
cmp
shrl
shl
test
fcomps
cmp
jns
bound
jmp
jno
push
xchg
ror
and
out
mov
add
dec
js
or
out
and
push
and
push
lsl
xchg
inc
and
adc
mov
lret
cltd
test
mov
mov
jae
inc
mov
xor
xor
cwtl
cmp
mov
mov
mov
je
and
adc
mov
sbb
xor
mov
loope
or
dec
int3
ja
loope
testb
aaa
sub
add
imul
sbb
lret
inc
jo
fninit
mov
nop
cli
cltd
inc
fs
cmpsl
lock
mov
adc
dec
cmpsb
and
xchg
lea
and
pop
cli
test
add
imul
ficoml
push
sub
jbe
pop
les
push
push
sub
sub
sarl
and
aas
fidivrl
cmp
sub
js
orl
cmp
test
xor
jbe
and
push
push
dec
stos
test
jp
adc
sti
les
ljmp
add
iret
lods
sbb
mov
lahf
cmpsb
pop
jp
fsts
ret
xchg
stos
adc
lock
add
push
arpl
popa
inc
dec
mov
add
aaa
jge
sbbb
lahf
pop
lret
frstor
imul
jne
mov
jb
dec
stos
jmp
jno
pushf
int
adc
xor
addr16
sahf
iret
xchg
fbld
jbe
test
psraw
ljmp
mov
xchg
jmp
xbegin
int3
or
sti
addr16
aam
push
dec
xorl
pushf
gs
push
xchg
mov
cltd
nop
mov
repnz
aaa
repnz
in
xchg
cmp
xchg
movsl
aam
fcomps
jle
cmp
data16
push
xor
int
push
mov
jecxz
fsubr
mov
mov
repnz
lds
pop
sbb
inc
pushf
push
int3
mov
sbb
inc
cmp
cmc
ret
push
sti
std
pop
lcall
in
xchg
ja
pop
mov
push
shrb
fs
mov
xchg
cmp
xor
push
sub
add
sub
fldcw
jbe
addr16
imul
dec
push
data16
rcll
aaa
sbb
leave
aaa
jo
and
iret
out
mov
or
xchg
cmp
ficoml
fwait
mov
aaa
lret
lea
jle
push
push
dec
mov
jmp
mull
frstor
sub
lahf
fs
pop
inc
mov
dec
add
out
das
clc
mov
or
fbstp
cmp
jno
nop
insb
aad
aaa
cld
out
test
lea
das
outsb
inc
lcall
sbb
add
test
pop
fsubrs
jnp
ja
adc
sbb
mov
sub
repz
fldcw
je
jge
jnp
ret
cmpsl
fs
test
cld
add
sbb
out
aaa
mov
mov
mov
emms
sbb
pop
loop
mov
add
scas
shlb
arpl
xor
and
xchg
dec
ficompl
lock
xor
cmp
mov
es
repz
into
inc
sub
dec
lds
dec
jns
push
push
mov
aad
pop
jl
lea
pop
fbld
cmp
mov
shl
imul
lods
shr
out
rcr
scas
scas
gs
mov
xlat
push
insl
add
jb
or
int3
fnstcw
xchg
xchg
mull
mov
mov
pop
pushf
and
pop
test
nop
mov
ficoml
cmp
and
pop
popa
pop
out
loop
shlb
dec
lret
jp
leave
xor
mov
pop
mov
std
insl
mov
hlt
jae
xor
add
cltd
cli
sub
call
pop
jo
sub
das
imul
sub
pusha
cmp
xchg
outsl
push
jo
das
or
sub
cmpsb
dec
ret
xchg
dec
adc
push
mov
adc
sub
inc
cmc
push
sub
pushf
sti
enter
lock
push
or
clc
outsb
xor
jecxz
mov
repz
or
ret
pop
pop
fucomi
out
inc
push
jle
inc
or
xchg
sub
push
orb
jl
mov
inc
pop
test
cmp
mov
jecxz
xchg
mov
push
stos
or
fsubp
cmp
cli
das
int3
mov
test
and
in
ret
lods
daa
xor
pop
test
es
cmp
sub
adc
sar
lcall
test
pop
std
outsl
pop
push
fwait
push
push
nop
inc
pop
jl
sbb
sub
gs
cld
lret
outsb
and
shll
in
outsl
cld
add
inc
and
cwtl
mov
dec
stos
mov
dec
ret
jne
add
adc
scas
adc
lea
xchg
xchg
jno
and
push
lret
pusha
xor
push
xor
mov
outsl
cwtl
pop
cmp
sub
adcb
call
stc
mov
pop
scas
pop
pop
pop
pop
loope
scas
pop
mov
and
iret
push
pop
and
mov
pop
aaa
mov
movsl
test
adc
sbb
push
addr16
jns
call
cs
jo
pop
xor
dec
jle
push
stc
add
inc
test
cld
and
mulb
fldl2t
sbb
xchg
jns
lret
andb
dec
add
and
jle
pop
cwtl
cmpsb
iret
sub
fcoml
add
call
in
cwtl
orl
lret
xchg
cld
fldenv
loop
icebp
dec
mov
mov
pop
fnstsw
xor
popa
adc
outsb
and
mov
mov
push
mov
xchg
adc
ljmp
daa
iret
cs
or
cmp
ljmp
xor
sbb
dec
and
clc
fucomi
in
jns
pop
fists
cmp
rorb
pop
ret
inc
jnp
cmc
loope
push
ret
push
push
or
jp
loope
pop
ret
in
std
jno
repz
pop
movsl
fsubr
loopne
out
dec
jnp
jb
mov
xchg
sub
jg
daa
loopne
rorb
and
cmp
scas
push
dec
nop
cmp
aam
test
call
xchg
dec
xchg
movsl
sbb
ss
imul
push
sbb
and
shl
inc
mov
movsb
sbb
jno
jb
lret
addr16
cmp
in
pop
mov
aam
pop
push
ficompl
dec
dec
pushf
cmp
arpl
or
scas
push
movsl
pop
popf
cli
adc
jnp
cmp
inc
leave
aam
push
jo
xor
xchg
jb
mov
xchg
sbb
pop
scas
mov
push
bound
and
cmp
mov
into
icebp
sub
mov
pop
and
adc
dec
push
pop
jbe
js
jecxz
aam
ffree
cwtl
lea
sbb
daa
mov
loopne
dec
nop
xchg
jg
fidivl
xchg
pop
lret
cld
ljmp
adc
lds
jg
mov
or
push
or
and
mov
adc
pop
scas
mov
shl
pop
push
push
xchg
pop
cmp
sbb
out
scas
mov
popf
lods
mov
cmp
adc
aad
or
pop
lahf
daa
mov
enter
dec
jae
xlat
fiaddl
pop
fstp
pop
out
adc
adc
xchg
das
int3
mov
cmpl
push
shr
push
adc
loop
inc
xor
push
movsl
sub
hlt
xchg
xlat
push
addb
adc
aas
cmpsl
cltd
movsl
outsb
push
sti
in
add
add
repz
cltd
ret
xchg
mov
out
loope
sti
push
lea
ficoms
loopne
xchg
or
pop
jne
cmp
mov
dec
push
xor
jno
mov
adc
mov
daa
sbb
ror
fwait
mov
mov
movsl
sub
mov
push
push
testb
cmp
dec
cmpsb
sub
insb
loope
aaa
rorb
call
xor
leave
xor
stos
cli
clc
lods
pop
call
fwait
sub
cli
ds
incb
movsb
mov
mov
out
cmp
sti
dec
test
test
sbb
leave
clc
shll
in
dec
js
arpl
or
xlat
je
jbe
sarb
mov
mov
mov
and
xlat
add
ljmp
stos
sbb
dec
push
sar
sbb
repnz
incb
pusha
xchg
mov
lock
jle
std
xchg
sub
out
sub
sub
sub
shr
dec
leave
jge
ljmp
mov
test
pop
xchg
aaa
jae
adcb
movsb
in
adc
or
sbb
jle
popf
xor
adc
lret
jns
in
inc
pusha
fisubl
mov
gs
rcrb
cmp
pop
in
fidivrs
stos
in
jmp
xor
shl
adc
cmove
sbb
testb
dec
mov
xor
mov
add
outsl
movsl
cmp
cmc
daa
les
and
sub
sbb
push
mov
and
in
xor
xlat
ljmp
fadds
push
cmp
add
jb
fwait
mov
es
daa
mov
mov
and
fs
inc
mov
sub
lea
xor
cmpb
scas
lret
push
and
rcll
dec
jge
mov
xchg
out
insl
enter
jg
dec
pop
dec
mov
jne
jns
jo
push
jge
jle
jno
cmp
cld
bound
inc
pop
fwait
cmp
addr16
pop
add
jbe
dec
and
js
cs
push
cmp
cmpl
sub
lock
fcoms
jne
jno
dec
data16
imul
lret
jmp
inc
jg
dec
cld
jl
pop
xor
pop
push
fmulp
insl
adc
dec
jg
fsubrs
stos
ljmp
mov
jp
nop
xchg
mov
mov
push
inc
fidivl
fninit
jmp
pop
jecxz
ja
aad
popa
sbb
adc
popa
wbinvd
and
loop
aaa
mov
pop
add
push
out
xchg
lods
daa
lods
popl
inc
and
mov
fs
aas
dec
mov
mov
mov
xchg
pop
pop
stos
ds
cs
jp
mov
sub
mov
in
test
pop
repnz
andb
aad
mov
xchg
fimull
outsb
in
ss
test
mov
push
test
adc
mov
int3
icebp
xchg
sub
sbb
dec
xor
jge
je
dec
out
mov
test
mov
movsl
mov
sti
mov
xor
mov
adc
push
into
sbb
in
fildll
jle
das
xchg
xchg
jg
mov
ljmp
pushf
mov
addr16
add
shrl
xor
fisttpll
xor
sti
lcall
idivl
ss
sub
outsl
divb
in
fwait
sbb
xchg
out
sbb
mov
dec
out
mov
xchg
jle
test
xor
or
or
daa
xchg
sti
iret
cmp
sub
jns
push
jb
jg
and
or
cmp
std
mov
lcall
pop
lds
mov
sbbl
jmp
xor
pop
pushf
or
sbb
cmpsb
jg
pop
jnp
jno
xchg
shl
xor
mov
mov
out
shll
ss
jl
bound
pop
es
jo
inc
enter
mov
push
cmpsl
sub
and
jb
movsl
xchg
inc
inc
adc
aas
pusha
jmp
xor
hlt
push
dec
mov
cmp
xchg
sbbl
lcall
adc
test
aam
push
push
pop
fimuls
mov
push
jmp
fdivl
sbb
lds
pushl
ficompl
mov
or
loop
cmp
xchg
push
and
mov
push
outsb
out
int3
pop
imul
mull
aam
out
out
cmp
rol
in
imul
pop
fnstsw
push
enter
leave
push
mov
rcrb
mov
fbld
clc
fidivl
test
popa
jl
lds
dec
mov
push
add
jns
lods
movsl
pop
push
or
jg
xlat
mov
ret
cmp
aas
nop
mov
xlat
mov
enter
lods
mov
cmp
push
sar
dec
xchg
sub
mov
dec
popa
xchg
adc
ja
ljmp
and
push
push
fisttpl
mov
dec
pop
jl
daa
ret
repz
mov
fcompl
lahf
test
pusha
adc
cmc
push
sbb
scas
xchg
add
add
push
pop
adc
xchg
in
out
inc
stc
inc
xor
xor
and
mov
cmp
lea
xchg
add
mov
push
stc
cmp
test
fwait
pop
cld
and
adc
push
xor
add
fwait
mov
fs
dec
lret
sub
nop
adc
cmp
pusha
sub
inc
dec
sub
test
test
adc
jecxz
sti
jnp
mov
inc
fucomp
pop
sbb
pop
mov
mov
inc
rcll
data16
filds
jecxz
pop
sbb
jle
pop
fimuls
or
jge
in
jecxz
ret
inc
int3
bound
inc
jne
mov
cmpsb
jnp
mov
pop
xor
push
outsb
inc
inc
movsb
cmpsb
fwait
sub
out
push
pushf
lods
test
adc
adc
fmul
out
cs
movsb
mov
xlat
stos
subb
or
nop
adc
cli
push
repz
adc
pusha
adc
or
out
mov
outsb
aas
pop
and
mov
aad
mov
sbb
and
pand
lret
rorl
ljmp
insb
xor
lods
fsubr
jae
jmp
jp
scas
fmuls
pusha
push
mov
fbld
imul
mov
and
lahf
leave
test
dec
test
sbb
loopne
insb
rolb
push
adc
push
bound
mov
mov
sub
adc
push
jge
jne
movsb
lahf
pop
mov
dec
in
out
je
and
pop
add
pop
sbb
lods
arpl
and
xorl
sahf
repz
stos
cli
mov
lahf
sbb
cmp
sbb
cwtl
push
jp
jno
cmpb
incb
cwtl
js
sarl
sub
cmp
mov
add
mov
aad
mov
es
and
pop
sub
and
and
pop
pop
inc
dec
pop
mov
xor
dec
js
test
adc
aam
loopne
xchg
push
mov
dec
and
inc
cli
pop
js
scas
adc
dec
pop
mov
fs
inc
cmp
jnp
frstor
lods
inc
xor
jno
out
in
mov
nop
ljmp
outsb
mov
jno
cmp
push
cltd
addr16
jns
ficomps
daa
ja
cmc
into
aas
popa
dec
fmull
sti
lock
lret
js
jns
mov
shl
lahf
xchg
scas
and
rorl
sbb
xlat
dec
mov
xchg
popa
dec
mov
cld
outsl
dec
mov
or
fdiv
mov
sbb
out
vmovapd
int
lock
jl
lcall
aam
bound
push
shl
push
out
push
rclb
int3
hlt
push
pop
add
shll
cs
jecxz
call
mov
test
insl
cmc
inc
mov
repz
leave
bound
jae
cmp
lcall
test
clc
mov
jp
insl
jp
cmc
xchg
pop
xlat
inc
xchg
inc
pop
push
dec
cmp
jecxz
leave
adc
lret
jg
in
hlt
outsl
scas
loopne
lea
ss
cmpsl
pushf
push
cmp
outsl
ljmp
out
test
scas
insl
sbb
mov
loop
stos
mov
std
sbb
fisttpll
mov
fcoms
andl
push
xor
test
adc
stos
mov
pop
fsub
idivl
mov
cmp
adc
test
mov
pop
je
popa
cwtl
lahf
mov
iret
call
ja
fdivs
mov
cmp
test
mov
in
mov
xor
sbb
movsl
inc
add
in
push
mov
mov
mov
out
sbb
inc
cmpsb
pop
mov
fidivs
dec
cmp
mov
ds
jnp
das
inc
aas
xor
loopne,pt
sahf
xor
jge
and
dec
jecxz
int
lea
adc
test
cwtl
shl
xor
cmp
lcall
pop
or
sbb
cmp
arpl
push
insl
loopne
mov
in
mov
fidivs
test
lock
jp
pop
mov
imull
lcall
jl
cltd
or
sub
out
push
es
test
notb
fcompl
bound
cvtps2pi
stos
fucom
outsl
inc
fstps
push
or
adc
call
stos
call
mov
icebp
mulb
ret
jecxz
sub
cwtl
push
cmp
pop
or
pop
in
xor
dec
and
sbb
js
aad
fistps
pop
pusha
xchg
inc
cld
inc
or
adc
and
adc
loopne
cmpsl
in
int
and
sub
outsb
jo
sbb
or
divb
xor
jne
push
mov
cli
fdivrs
jae
xor
lock
and
dec
mov
jne
jnp
pop
fsts
push
cmpsb
or
aam
and
pop
ret
adc
inc
adc
mov
push
xchg
xchg
add
int3
sub
push
cmpsb
arpl
loop
ds
xor
inc
in
or
std
fmull
pop
push
adc
fiadds
sub
add
jp
inc
jmp
cmpsb
cltd
repnz
sbb
sbb
cmp
jmp
popf
mov
xchg
shr
mov
pop
jne
inc
sti
out
inc
and
nop
push
push
jnp
loope
shll
out
jmp
sbb
lods
pop
outsl
test
mov
xor
ret
lea
out
fstpt
and
sub
stc
inc
adc
jmp
xor
cs
push
aam
mov
stc
stc
cmpsb
add
push
in
push
cmp
pop
jnp
shrl
roll
fcompl
aam
scas
mov
hlt
push
xchg
xor
and
fmull
subb
cmp
jge
inc
add
jb
xor
daa
lock
repnz
pop
mov
scas
das
cli
cli
cmpsb
stos
in
inc
data16
rolb
rcll
jle
sarb
fucomi
outsl
add
loopne
stos
ljmp
cmp
shrl
imul
add
sub
and
pop
scas
out
jns
dec
nop
cmp
ds
insb
in
mov
adc
cltd
sub
es
sub
jle
xchg
or
jbe
test
orl
jo
or
mul
xchg
in
lahf
jecxz
rclb
orl
nop
fsts
lret
add
test
dec
jae
mov
mov
into
bound
call
lcall
lret
js
ret
jno
xchg
leave
or
mov
fldt
daa
xchg
inc
and
mov
test
xchg
jecxz
aas
inc
dec
pop
mov
sub
fcmovu
sub
sub
into
out
sub
or
rolb
pop
mul
dec
pop
cmp
add
mov
push
xchg
in
inc
inc
sbb
or
or
scas
mov
fwait
loope
and
int
repnz
cmp
mov
movsl
mov
dec
cmp
push
xor
movsbl
lds
test
cltd
mov
xchg
jmp
out
mov
cmp
leave
sub
sti
jne
jge
bswap
xchg
andl
mov
das
inc
gs
scas
mov
push
stos
sarl
jge
xchg
pop
cmp
pop
sbb
daa
jne
cmc
cmpsb
pop
sbb
mov
into
inc
orl
mov
cmpsb
pop
aaa
push
lods
in
ret
pop
scas
popf
push
sub
inc
add
lock
les
mov
adc
out
ss
dec
pop
fwait
mov
mov
cmp
rol
stos
test
pop
mov
idiv
mov
cmp
popa
insb
jecxz
xor
add
movsl
pushf
inc
xchg
jecxz
mov
andl
ja
pop
jmp
aam
jae
cmpl
roll
inc
sub
aaa
adc
push
sbb
mov
aaa
ss
cmp
fucom
lods
xlat
call
stc
lea
or
jmp
adc
jb
fdivl
cs
icebp
int3
sarl
lock
xor
push
jo
push
fs
xchg
jl
rcrl
pusha
scas
stos
push
sub
les
inc
dec
pop
add
notl
mov
jns
or
and
xor
mov
add
xchg
jbe
sarl
std
stos
inc
jb
mov
fwait
or
data16
js
xchg
sub
push
daa
rclb
jbe
insl
pop
ja
in
clc
adc
sub
xor
das
jle
outsl
out
int
imul
lea
adc
xchg
insb
jnp
xchg
dec
es
cmp
lahf
cmp
repz
pop
shll
lret
push
test
mov
in
mov
stos
inc
or
jno
add
popa
xchg
and
push
in
repnz
dec
pushf
or
ljmp
and
ret
lahf
sub
cli
lock
and
fsubrl
sub
gs
push
into
mov
aas
jnp
adc
or
and
fists
insb
cmp
mov
js
mov
fidivrs
clc
out
fimull
popa
testl
enter
sub
cmpsl
xchg
decb
adc
les
mov
ja
icebp
jnp
in
sbb
sbbb
imul
faddl
cmovno
sub
jno
jge
push
lods
out
xchg
fists
inc
mov
add
fisttpll
jno
mov
enter
mov
xchg
insb
test
scas
scas
icebp
pop
and
repnz
andl
xchg
jb
jge
ljmp
pop
cmpsl
jb
movsb
gs
push
test
pop
sbb
push
cmpsl
jge
add
movsl
cs
pop
subb
mov
mov
daa
mov
dec
lods
xchg
ja
cmp
icebp
and
cmpsb
pop
cwtl
push
loope
fldenv
fwait
std
mov
push
push
stos
fcomp
inc
rolb
rcr
xor
cwtl
fmulp
andl
fwait
std
xchg
add
or
test
call
in
lock
lret
xor
pushf
leave
inc
sbb
mov
sub
or
loope
sbb
fs
enter
fdivrs
test
in
in
inc
xor
or
mov
js
push
fimull
mov
test
test
pop
pop
pusha
ffree
rcrl
fisubl
repz
mov
push
mov
outsb
fmull
int
sbb
clc
sarb
pop
xchg
cltd
insb
cmp
mov
or
push
outsl
test
test
ret
sub
stc
pushf
mov
mov
mov
mov
adc
imul
stos
lcall
mov
and
mov
pop
out
loopne
gs
insb
inc
xor
popf
xchg
aam
sahf
cltd
imul
pop
xchg
sbb
add
cmpsb
inc
xchg
sub
arpl
test
out
cld
popf
lea
cld
push
call
movsb
inc
int3
jecxz
outsb
fmuls
cmp
unpckhps
wrmsr
cwtl
out
mov
movsl
aas
inc
mov
scas
stos
imul
mov
lods
jge
icebp
aaa
aam
lods
repz
add
shrl
adc
xor
pop
ret
cmp
pop
jg
frndint
xchg
pop
cmpl
mov
repnz
lahf
je
push
test
out
add
ret
xor
cld
pop
push
and
mov
jmp
jmp
jecxz
inc
repnz
pop
sbb
ljmp
push
lea
jnp
lea
fwait
iret
lds
pop
lods
out
mov
lret
push
pop
loop
and
fisubs
push
arpl
fsubrl
jb
mov
fisttpl
cmpsb
cmpsl
ja
xor
shlb
add
ljmp
jbe
in
and
dec
adc
mov
popf
std
mov
push
xchg
push
hlt
pop
add
cs
in
pop
pop
xor
int3
nop
fildll
and
xchg
push
mov
pop
adc
pusha
pop
insl
xchg
into
sbb
sbb
mov
add
inc
push
pusha
das
cltd
subl
add
or
jns
rol
mov
insb
jl
lds
push
repz
xchg
xchg
mov
add
leave
inc
pop
adc
jge
mov
repnz
nop
faddp
push
into
call
mov
lock
cmp
xchg
mov
push
fwait
add
jns
jmp
shlb
fisubrs
push
pushf
cld
test
jno
and
xchg
xor
and
xchg
or
addr16
icebp
into
and
sbb
lret
add
fdivl
lock
jne
es
daa
pop
push
mov
stos
dec
dec
out
push
lret
aaa
sub
test
and
adc
stos
pusha
enter
cmp
jnp
je
movsb
daa
sub
sbb
push
jb
or
dec
fs
jbe
fs
cmp
adc
test
int3
stos
je
out
push
shrl
lret
mov
mov
test
and
mov
aam
mov
push
push
cmp
movsb
pop
sub
push
mov
xor
int
and
dec
lahf
adc
test
je
or
cmpsl
adc
sbb
cmp
jmp
xor
pushf
mov
mov
add
adc
scas
in
xchg
repz
sbb
adc
lahf
sub
es
pop
adcl
fdivs
mov
push
xor
add
out
icebp
test
out
cmp
stc
add
sbb
lahf
lahf
popf
push
arpl
fstps
jl
bound
pop
push
push
or
inc
jne
fimuls
test
inc
jne
or
test
jg
inc
jmp
cmpsb
jmp
push
pusha
jbe
and
aad
cmp
pop
mov
cmp
int
call
rcr
sub
mov
pop
xchg
int
nop
sub
cmc
icebp
shlb
les
inc
in
sbb
jne
fdivr
idivl
adc
push
adc
and
jnp
cmp
and
sti
or
movl
jg
pop
or
lret
inc
std
scas
push
and
jge
cltd
mov
and
sbb
cmp
push
es
movb
adc
into
out
insb
inc
aaa
inc
jno
dec
jl
addr16
dec
jecxz
cld
push
push
fwait
mov
lcall
pop
js
icebp
loope
aad
fcmovne
or
cli
ds
sahf
jge
xor
jbe
lods
rclb
adc
ljmp
incb
inc
push
mov
test
rolb
and
movsl
adc
adc
in
test
mov
xchg
jg
xchg
mov
js
cmp
mov
insl
add
loopne
je
hlt
shl
enter
cmpsb
inc
int
xchg
xor
xor
mov
jl
mov
sbb
outsl
outsl
cmpsb
cmpsl
push
push
movsb
pop
dec
lahf
sub
jecxz
lods
repz
and
inc
das
sub
lahf
stos
int3
cmp
fidivl
or
add
fdivrl
iret
rolb
lret
inc
ret
loop
cmpsb
sahf
sub
sbb
test
jle
xchg
cs
mov
push
dec
shrb
mov
adc
xor
pop
int
cld
pop
decb
and
lcall
pop
xlat
pop
mov
mov
into
or
jne
scas
rcll
jno
enter
inc
lret
dec
xchg
jb
sub
push
push
push
jne
cld
or
sarb
fs
xchg
addr16
jecxz
ret
mov
mov
sbb
cmp
dec
rorl
dec
and
outsl
in
mov
lret
repnz
stc
ret
dec
mov
and
andb
clc
dec
push
and
and
pop
lret
mov
inc
nop
and
adc
and
insb
xlat
outsb
adc
jno
dec
std
insb
leave
lahf
data16
push
add
mov
and
int3
sub
fiaddl
movsl
push
and
lret
test
sub
mov
mov
inc
outsb
adc
xor
inc
xchg
movsl
pop
lahf
cltd
aaa
fs
test
pop
adc
mov
mov
push
adc
mov
insl
mov
dec
jl
xchg
xchg
negl
and
xchg
sbbb
out
push
gs
leave
push
mov
push
inc
xlat
outsl
lods
shrl
pop
fs
pop
in
nop
flds
sti
fs
add
nop
sub
mov
sub
and
jecxz
sbbb
outsb
pop
jno
xor
lds
cmp
je
adc
mov
jbe
dec
adcb
mov
cmp
xchg
inc
bswap
ss
sub
mov
pop
test
hlt
xor
push
arpl
fnsave
xchg
cwtl
iret
lret
int
push
fwait
rorb
ljmp
xor
rcrb
sub
pop
sbb
testl
cltd
sti
aad
or
jns
xor
push
enter
sub
add
clc
adc
das
shl
sub
or
sbbb
sarl
dec
je
xor
adc
hlt
and
mov
jmp
push
xor
repnz
adc
fcompl
jno
xor
mov
aam
jo
into
xlat
push
or
sahf
loopne
add
push
or
xchg
inc
stc
sar
xor
sub
je
stc
hlt
int
cmp
dec
xor
jecxz
mov
inc
cwtl
jmp
inc
mov
or
shl
or
in
sub
rclb
dec
jne
in
push
std
cmp
xor
and
scas
rclb
cmpsb
movsl
inc
jbe
movsb
dec
sub
fs
nop
arpl
mov
cmp
mov
add
fmuls
mov
adc
xchg
rcr
xchg
push
mov
ds
cmp
popf
enter
and
cmp
sub
adc
mov
outsl
mov
cld
out
inc
fistpll
mov
pop
cltd
bound
dec
mov
mov
pop
inc
or
and
xchg
sub
pop
lock
cmp
xchg
rcrb
out
cs
mov
pop
cli
sbb
xor
mov
or
cmc
xchg
mov
pusha
mov
xor
sbb
sti
inc
fdivrs
xchg
lock
sub
adc
fisubl
out
mov
jmp
dec
cs
out
inc
notb
pop
les
rol
int
mov
in
sub
je
out
stc
fbstp
or
stos
rclb
mov
xchg
inc
pop
test
dec
jp
in
jle
ljmp
jno
imul
jo
popa
push
pushf
mov
cmpsl
addr16
dec
sahf
push
lea
loop
jl
addr16
iret
loop
roll
mov
mov
jno
out
fisubrs
pop
daa
xor
leave
fidivrs
pop
sub
pop
sbbb
jecxz
add
jmp
movsb
jbe
movsl
sub
jb
add
and
pop
jne
std
addr16
fistpl
dec
or
dec
xchg
xor
jmp
sbb
xor
mov
mov
outsb
mov
and
adc
sahf
fwait
xor
sarb
dec
pop
pushf
sahf
mov
shll
int3
jno
jbe
jnp
int
mov
dec
lcall
add
push
mov
lret
mov
push
mov
mov
inc
mov
pop
std
adc
rclb
aad
call
mov
sbb
and
shr
in
xor
xchg
dec
es
dec
push
xor
cmp
je
mov
xchg
mov
aaa
and
cmpsb
adc
pop
mov
sbb
aas
negb
inc
inc
xchg
loop
repz
cwtl
add
xchg
lret
xchg
movsl
mov
int3
cli
popf
push
push
fmuls
loopne
sbb
adc
xchg
cwtl
lea
pop
cmp
cmc
es
or
push
cli
pop
sahf
push
ljmp
jae
fisttps
pusha
sub
xchg
cmpsl
dec
xor
pop
jb
outsb
ret
jge
jmp
cmp
mov
ficoms
and
mov
test
or
lods
inc
and
mov
repz
mov
pop
and
jbe
fnstsw
ja
xchg
pop
scas
push
fdivrl
jmp
push
mov
xor
lea
or
jno
dec
cmpsb
je
inc
test
xchg
cs
pop
test
mov
jp
inc
or
cmp
es
sub
mov
stos
lcall
cld
std
push
nop
xchg
es
std
adc
pop
sbb
mov
push
sbbl
sbb
fiadds
gs
in
iret
rcll
sti
mov
dec
xchg
repnz
push
mov
xlat
lods
ja
outsl
in
or
in
push
stc
jne
xbegin
push
mov
int3
in
inc
shll
imul
lds
dec
test
mov
jno
mov
ficoml
fistpl
pop
insl
add
fidivrl
jae
cmp
dec
test
fstps
mov
jg
movsl
ret
js
popa
in
pop
lods
or
mov
daa
out
cmpsl
add
push
add
mov
insl
pop
shlb
adc
cltd
or
outsb
mov
dec
sub
mov
jg
ret
push
xchg
mov
push
mov
inc
aam
imull
test
push
frstor
test
test
jnp
std
pushf
add
adc
imul
out
xchg
cmp
mull
jle
in
sub
call
lcall
cmp
pushf
or
lahf
xorb
jle
xchg
xlat
aam
int
outsl
ja
mov
mov
inc
mov
cld
lock
aam
stos
sbb
es
rcrb
pop
test
cs
adc
inc
pop
lea
repz
mov
push
push
rorb
test
or
mov
stos
or
pop
int3
mov
jecxz
mov
mov
xor
xor
test
inc
inc
rcll
leave
fistl
and
bound
inc
xor
sbb
sbb
imul
dec
xor
sbb
jle
jnp
fwait
sbb
cmc
dec
std
mov
shlb
sahf
ret
jle
out
fs
scas
jge
loop
ficompl
pop
add
push
dec
push
inc
iret
shrb
push
cwtl
push
inc
lea
sub
in
loope
lcall
mov
dec
movsl
fs
out
loopne
popf
mov
icebp
xchg
push
or
pop
adc
lods
xchg
or
pop
pop
mov
mov
mov
jle
in
mov
mov
sbb
imul
push
daa
sarb
je
cltd
mov
or
inc
xorl
adc
negb
jae
in
rcll
outsl
or
push
sub
mov
jo
out
jno
xor
xchg
fstp
dec
inc
sbb
adc
inc
mov
inc
scas
xchg
jnp
outsl
dec
add
je
or
test
xlat
pop
jae
dec
pop
inc
jp
in
push
cli
dec
and
addr16
inc
sbb
mov
lea
jbe
nop
nop
lods
jne
xor
jge
fimull
xchg
lcall
cmp
add
add
js
xor
cs
jmp
mov
push
imul
push
jge
mov
and
dec
leave
shll
fstpl
pushf
cmp
mov
fistpll
or
je
negb
gs
lahf
mov
dec
cli
les
xchg
int
iret
push
push
aas
icebp
lret
xor
data16
and
jle
icebp
int3
jl
stos
mov
in
sbb
jns
and
out
lds
or
sbb
push
pop
stc
push
mov
mov
sub
shlb
insl
enter
rorb
cmp
pop
clc
jno
popa
fwait
push
dec
clc
mov
dec
in
outsl
xor
popf
inc
leave
dec
xor
test
call
movsb
cmpsb
fdivl
ss
mov
push
pop
jge
mov
mov
out
das
push
test
mov
jg,pn
push
inc
or
dec
mov
lcall
sbb
cmp
shll
sub
add
fcmovbe
xorl
enter
cmp
rorl
imul
push
pop
or
adc
lds
jge
add
pop
pop
xor
cmp
movsb
lahf
arpl
jmp
sahf
lock
lret
or
pusha
and
test
xchg
cwtl
ret
aad
insl
pop
xchg
int
sbb
imul
enter
mov
aas
call
mov
sbb
mov
iret
mov
and
arpl
std
clc
aaa
lahf
jle
hlt
fisubs
notb
xor
xchg
das
fwait
gs
adc
fstpl
add
mov
jle
dec
loope
and
pusha
aad
pop
pusha
je
mov
ja
or
aam
lods
ror
pop
or
ds
jns
cmp
in
sbb
cs
jno
outsb
push
adcl
jg
push
das
add
sti
sub
sbb
test
dec
pop
into
mov
aas
mov
fwait
xchg
loopne
mov
scas
or
ds
pop
and
test
ret
xor
add
iret
adc
data16
stc
xor
movb
and
fwait
inc
mov
dec
mov
jle
loopne
faddl
and
jo
cmp
ss
fwait
sbb
inc
test
or
pop
sub
inc
aaa
daa
hlt
xor
adc
or
or
xlat
addr16
mov
inc
and
lret
mov
add
lock
fwait
cltd
mov
movsb
xchg
push
mov
mov
cltd
xor
in
jne
sub
sub
push
mov
scas
int
les
dec
insb
aad
xlat
rorb
test
adc
pop
popf
push
push
out
xorl
sub
fistpl
leave
mov
mov
sub
or
add
lods
jbe
outsb
fbld
leave
mov
icebp
lods
inc
mov
add
out
and
hlt
in
sbb
cwtl
add
xchg
arpl
sub
push
xor
cli
dec
push
andb
jae
inc
sub
es
push
loopne
xor
mov
mov
outsb
and
in
xor
push
xchg
inc
push
andl
repnz
pusha
dec
jmp
scas
push
fists
into
js
in
repz
dec
mov
mov
dec
rclb
jb
jg
lods
mov
clc
pop
ds
leave
or
jns
xchg
xor
lds
stc
cmp
insl
jmp
xor
dec
shlb
xchg
add
and
jg
mov
sub
enter
cmpsb
push
jbe
mov
jae
jo
enter
mov
ficoms
xlat
mov
leave
scas
push
push
bound
lock
xor
or
mov
int3
push
dec
mov
es
push
ret
scas
in
lock
pop
and
dec
mov
mov
repz
sarb
jmp
fsubl
pusha
sarl
or
ds
mov
xchg
xchg
out
clc
mov
cmpsl
rcrl
xor
out
sbb
sahf
push
jecxz
sahf
js
popa
je
jge
add
xchg
sub
xchg
push
in
movsl
or
cmc
xchg
cmp
popf
dec
sbb
mov
inc
ja
test
das
icebp
mov
cs
fadds
adc
push
add
sub
sub
push
pushf
jmp
jle
push
or
pop
cmp
pop
mov
leave
or
mov
ja
andb
pop
fsubl
test
in
je
mov
mov
push
sub
in
divb
mov
lret
lods
mov
cmp
xlat
ret
ss
ljmp
jb
lods
je,pt
ret
xchg
and
cmp
fimull
pop
cmp
leave
mov
lret
and
add
fimull
in
ret
mov
mov
mov
sahf
fidivrl
scas
aaa
or
cwtl
scas
sbb
sub
cmpsb
push
xchg
cmp
mov
in
mov
ret
cmc
mov
jne
lods
shl
sahf
xlat
cmpsl
sbb
xchg
cmc
iret
mov
xor
xchg
clc
add
lret
outsl
outsl
adc
repz
add
ss
in
mov
xor
cltd
adc
pop
hlt
sbb
out
je,pn
jge
sbb
pusha
lea
test
pop
test
and
mov
iret
push
cmpsb
cwtl
sub
push
leave
out
fwait
sahf
push
adc
xor
in
add
adc
js
mov
inc
mov
add
dec
jb
int
imul
push
fdivrp
xor
not
cmpsb
adc
aam
cmpl
nop
jmp
add
dec
adc
mov
mov
std
imul
es
mov
lds
addr16
mov
add
sbb
cltd
repnz
nop
jle
mov
ror
outsl
mov
mov
arpl
jecxz
nop
and
mov
scas
sbb
mov
xor
pop
js
popf
sbb
cmp
pop
insb
incb
add
scas
pop
ljmp
scas
int3
cmp
add
push
jle
ss
test
lret
xor
mov
sbb
aad
pushw
shrb
mov
sub
int
sahf
jbe
inc
fcomp
pop
ret
repnz
movsb
bound
cltd
cwtl
push
repnz
out
lret
in
push
pop
data16
sbb
popa
jo
shrl
push
inc
loop
sub
pop
das
and
scas
mov
mov
and
add
push
adc
lret
sbb
int
sbbb
dec
in
xchg
andb
jo
and
dec
cmp
inc
rorl
insl
or
xchg
shll
cmp
and
popa
adc
lret
lahf
push
or
jo
pop
sub
cs
rcrb
jne
adc
and
iret
pop
stos
shrl
decb
jae
pop
dec
lcall
push
daa
ss
push
xchg
inc
enter
or
cmp
mov
jge
xchg
imul
out
and
lea
enter
faddl
push
mov
aam
jge
rorb
lea
ja
dec
push
mov
mov
call
sub
leave
lret
xorb
mov
movsb
lea
aam
fdivs
sub
or
fs
mulb
lahf
cltd
jg
lcall
xchg
shrb
rcl
movsb
sti
cmp
pop
fnstenv
xlat
jecxz
int3
in
or
loopne
mov
hlt
mov
pop
push
add
and
mov
xlat
les
lahf
push
fdivrs
test
pushf
mov
stos
sbb
pop
dec
xchg
xchg
xor
cld
lret
loope
shr
aam
pop
mov
xchg
std
or
sub
inc
pushf
mov
push
lahf
cli
pop
ret
int
cmp
idivb
jnp,pt
cmp
push
dec
lods
cmp
ret
imul
pop
mov
ret
pop
sbb
cmpsl
ret
cmp
pusha
bound
pop
cli
push
adc
sub
inc
sbb
xchg
pop
orl
mov
dec
ret
push
idiv
pusha
dec
jno
orb
pop
jo
and
daa
jb
xchg
jle
mov
cmp
push
aam
gs
push
popa
aaa
mov
push
es
sti
stos
dec
xchg
in
or
push
cmpsb
lahf
fsubrl
and
push
push
pop
pop
movsl
imul
sbb
pop
jnp
sbb
lahf
sbb
lods
pop
rcll
mov
push
vmwrite
ret
les
scas
shlb
mulb
pop
imul
cmp
jle
cmp
imul
inc
dec
pop
dec
adc
inc
sbb
aaa
mov
sbb
cmp
shlb
je
xchg
rorl
mov
out
loopne
pop
push
push
test
bound
repz
cmovg
sub
mov
push
cmp
test
and
outsl
cli
loope
shll
sub
jl
mov
aam
pop
lock
sbb
cmpsb
lret
push
insb
push
cmpsl
imul
mov
push
mov
nop
inc
add
add
xor
xchg
mov
xor
lret
int
sbb
lock
sub
adcl
pusha
push
dec
ja
add
sub
mov
dec
lret
lret
mov
dec
adc
xor
popf
xor
out
pop
sahf
dec
pop
rcll
call
int3
and
lods
mov
push
inc
jb
mov
sub
icebp
sub
in
adc
into
pop
daa
cmpsl
orl
pop
lea
pop
inc
dec
rorb
push
xchg
shl
xchg
cmpsb
shr
bound
ret
xor
inc
jne
adc
nop
mov
push
scas
fcompl
icebp
adc
jno
lods
add
xchg
push
mov
jmp
add
fadds
jne
lahf
mov
fwait
inc
sub
mulb
xchg
jb
pop
test
shrb
aad
je
dec
shll
out
fstpl
dec
push
push
sub
mov
insb
adc
mov
loopne
int3
jae
test
push
ret
sub
inc
pop
add
icebp
outsb
movsb
fdiv
inc
bound
or
cs
in
inc
pop
lcall
mov
xor
mov
repnz
pop
or
movsl
or
or
push
xor
cmc
push
jle
add
xor
cltd
jg
mov
daa
push
addr16
mov
sbbl
out
into
leave
jno
pop
lret
lahf
mov
nop
fists
insb
push
xchg
pusha
fmull
mov
std
xchg
dec
out
es
cltd
xchg
jmp
and
mov
sti
aam
add
aas
repnz
sahf
test
xchg
jns
into
jge
push
xchg
xchg
mov
add
jge
sub
addr16
inc
aas
movsl
outsl
mov
outsl
sub
test
mov
ret
insb
or
and
jnp
hlt
out
in
shr
mov
dec
push
pop
adc
lock
lret
cld
ret
pop
lret
push
pop
push
and
cmp
jmp
mov
ret
xchg
jb
cltd
and
pushf
adc
cmp
sti
loopne
mov
je
sbb
sub
insb
jg
mov
sbb
push
movsl
decb
jno
or
popf
sub
aas
push
mov
cmp
fisttpll
in
cmp
arpl
outsl
pop
clc
mov
sarl
jns
jb
xor
adc
dec
popf
hlt
pop
negl
pop
aaa
add
pop
daa
jle
daa
mov
into
pop
mov
movsb
fwait
int3
aas
leave
sub
sarb
and
leave
adc
andl
add
test
lcall
fdivr
inc
nop
imul
lret
xlat
je
pushf
shrb
xchg
push
or
js
jbe
out
jae
popf
shlb
popa
adc
std
dec
testl
add
arpl
mov
rorb
adc
rorl
hlt
loop
repnz
sahf
sub
add
push
push
or
adc
fadds
push
push
das
adc
fbstp
jbe
mov
jne
sbb
jmp
sbb
mov
pop
mov
pushf
cmpsb
jmp
jbe
js
scas
add
call
mov
and
movl
movsl
pop
mov
jno
jle
loope
fwait
insb
ja
rol
mov
mov
inc
push
nop
pop
imulb
cmpsb
cmp
icebp
nop
inc
movsb
pop
call
or
dec
popf
sbb
jbe
xor
mov
stos
and
clc
mov
imul
test
inc
mov
xor
or
arpl
jo
sub
dec
stc
adc
adc
lret
xchg
push
cld
inc
cmpl
lock
push
enter
stc
in
mov
cmpb
mov
popa
xor
repz
js
xor
or
divl
shl
cs
sub
int3
push
std
or
jns
test
imul
filds
xor
popa
sub
mov
xchg
cmpl
shrl
test
push
dec
add
sbb
lock
pop
sbb
lahf
xchg
gs
repnz
jne
and
pop
sbbb
or
mov
leave
dec
dec
fidivrs
and
js
dec
rcl
mov
fwait
add
sbb
repz
out
sub
je
adc
aaa
movsb
mov
mov
imul
cmpsb
sbb
lcall
jle
pop
jo
and
xlat
sub
cmp
cmp
js
iret
or
cmp
loope
dec
in
xchg
xlat
xor
out
cmp
mov
push
repnz
jl
nop
jne
inc
and
fdivrs
lds
mov
data16
mov
push
pop
xchg
insb
push
xor
add
decb
fcomps
insb
icebp
leave
dec
sbb
adc
add
in
out
push
push
fisttpll
out
ljmp
cmp
fs
into
mov
mov
popa
sbb
push
mov
jmp
jb
stos
adc
mov
ret
xchg
repnz
test
shrb
xchg
pop
pop
pop
mov
das
out
into
fwait
mov
jnp
hlt
sub
push
mov
xor
adc
dec
push
pushf
xchg
sub
dec
push
add
add
daa
mov
pop
cmc
mov
fiaddl
jbe
bound
sbb
inc
out
fwait
push
test
xlat
cwtl
fstps
push
sbb
push
out
push
mov
dec
xchg
pusha
leave
jl
add
rorl
insb
je
adc
sub
loop
mov
lods
cmp
mov
xor
mov
sbb
fdivrl
sbb
and
int
push
sahf
add
ret
push
das
inc
pushf
mov
add
jo
ljmp
inc
stos
cmp
cmpsb
ds
insl
cmc
imul
lahf
mov
mov
mov
aas
movsb
out
lcall
adcb
push
and
insl
scas
jecxz
dec
cli
mov
pop
push
inc
int3
cmp
addr16
andl
jp
xchg
stos
clc
mov
mov
sbb
mov
call
jp
xchg
cld
push
or
inc
fisubl
and
xorl
pop
dec
jl
pop
xor
xor
scas
in
push
shrl
hlt
scas
push
mov
icebp
pop
loope
xchg
sbbb
pushf
xor
ja
push
dec
mov
mov
stc
push
pop
xor
mov
in
inc
jns
xor
mov
and
jbe
mull
popf
jbe
push
pop
push
leave
jecxz
rcl
pop
inc
popf
push
pop
addr16
mov
mov
or
cmp
sbb
inc
mov
sbb
cli
fdivl
loop
cmp
xchg
outsl
ja
cmp
dec
pop
test
mov
mov
xchg
sbbl
dec
and
fucom
adc
inc
cmc
xchg
push
pop
ja
popf
jmp
shll
push
shrl
cmp
call
add
rorl
adc
dec
outsb
in
dec
cmc
sub
add
jno
sbb
inc
in
sub
hlt
mov
xchg
xchg
mov
insb
or
xor
push
push
and
push
pop
pop
push
cmp
xor
mov
cltd
popf
pop
scas
xlat
mov
es
sub
jno
je
push
mov
fwait
mov
pop
inc
cmpsb
add
out
push
lods
jmp
stc
popa
fwait
add
sbb
scas
nop
pop
cwtl
xor
fisubl
or
mov
lods
je
into
aas
xchg
xchg
in
arpl
mov
mov
rcrl
cs
sbb
pushf
mov
mull
lcall
push
inc
xchg
pop
movl
aam
fldl
xchg
cltd
insl
outsl
xchg
pop
bsf
mov
lret
rol
jne
lds
push
mov
insb
and
setbe
shrb
cmpsb
mov
lods
in
fs
xchg
fildll
clc
dec
xor
mov
cld
in
es
mov
adc
pop
mov
std
mov
cmp
jb
movsl
sbb
or
push
shr
outsb
pop
es
iret
int
rclb
repnz
lret
pop
inc
sbb
call
and
scas
or
adc
insl
lods
ja
and
add
sub
push
fs
out
inc
popf
push
lds
out
adc
mov
lret
addl
ja
xchg
mov
es
mov
pop
loope
mov
jo
in
jp
cmp
cmc
insl
rorb
push
inc
add
push
in
push
aaa
in
mov
mov
addb
adc
es
and
out
sub
add
push
adc
or
dec
inc
jle
mov
inc
cmp
cwtl
hlt
inc
mov
inc
stos
jmp
inc
cmp
fnstsw
jnp
addr16
mov
pop
adc
pop
ret
adc
stos
movsl
jnp
inc
or
fs
and
sbb
jae
out
mov
call
addb
divb
xchg
pop
pop
in
lods
ds
mov
mov
pop
test
scas
mov
out
cmc
cmp
and
inc
out
and
add
sti
das
jp
mov
popf
push
sbb
arpl
xchg
xchg
lahf
add
mov
mov
lods
mov
sbb
lock
fidivl
xor
mov
push
pop
jno
icebp
jns
psubw
add
ficompl
inc
mov
fwait
cmp
in
fcompl
add
jle
push
jae
sbb
xchg
jl
xor
adc
jno
loope
std
jo
push
lea
mov
cmc
test
adc
jnp
out
dec
int3
mov
cmp
ss
push
loope
jecxz
mov
insl
xchg
xchg
xchg
sahf
mov
add
imul
pop
mov
out
jge
scas
or
xchg
movaps
cld
out
negb
xchg
out
fwait
jae
lock
cmp
sub
movsb
in
xchg
adc
stc
xchg
cmpsl
mov
adc
cmp
mov
xchg
fisubrs
sub
mov
arpl
and
jle
sbb
sahf
into
lds
sub
addr16
mov
js
mov
ljmp
push
stos
xchg
lock
add
or
or
pushf
inc
inc
decb
cmp
jnp
jno
pop
ss
mov
movlps
jae
mov
insl
jmp
rcrb
leave
lods
insl
mov
movsl
test
movsb
je
inc
cwtl
stc
pusha
popa
adcl
push
dec
sub
and
push
cmpsb
xchg
jb
call
xor
rcl
sete
lods
pop
shl
ud2
mov
out
mov
cmp
or
inc
cmp
popa
sub
sbb
mov
pop
or
cmpsb
xchg
test
jae
iret
adc
add
adc
mov
inc
xor
add
ja
call
test
sub
mov
cmpsb
cmp
in
sbbb
out
repz
mov
xchg
pop
int
xchg
push
ss
loope
mov
xchg
add
or
popa
scas
jl
cmpl
scas
cmp
pop
or
mov
mov
movsl
repz
jecxz
pop
xor
add
push
dec
loopne
push
stos
add
notl
xchg
sbb
clc
lcall
ret
push
mov
out
pushf
sti
das
jns
dec
into
mov
push
jge
jne
mov
jle
xchg
sub
daa
in
dec
mov
aad
call
and
loope
imul
lret
dec
adc
clc
inc
mov
ret
jle
pop
ljmp
inc
push
lds
dec
mov
jns
fisubl
lea
insl
clc
push
xor
push
mov
aad
pop
cltd
scas
test
xorb
and
mov
cmp
mov
cmc
insl
inc
sub
and
mov
fwait
pop
mov
test
adc
imul
rorb
icebp
fmuls
dec
lock
sbb
sub
mov
xchg
cld
mov
sbb
adc
fimull
clc
addr16
push
xor
ja
rclb
leave
lret
cwtl
gs
aad
dec
jbe
dec
inc
lret
pop
or
pushf
fcoms
pushl
std
mov
add
js
jmp
cmp
inc
mov
jge
xor
cld
inc
cmp
ret
sbb
jns
jns
fs
nop
push
adc
ja
xor
mov
sbb
lahf
push
xchg
in
lods
xchg
add
pop
movsb
xchg
pop
enter
sub
lret
mov
or
lret
cmp
repz
or
sbb
add
lods
mov
mov
ds
xchg
adc
jmp
add
cmp
xchg
es
scas
xor
cs
push
cs
sti
outsl
in
je
mov
aad
rorb
stc
sub
das
leave
lea
out
mov
lds
inc
or
lahf
xor
sarl
pop
and
pop
mov
out
xchg
daa
adc
repnz
cmpsb
mov
out
rol
or
pop
outsl
mov
pop
out
push
pop
es
pop
loopne
ljmp
mov
push
cmp
es
and
ljmp
inc
out
and
sarb
cmp
sbb
fwait
clc
or
lret
xor
inc
mov
push
and
js
add
gs
sti
shrb
test
or
outsl
cmp
mulb
movsb
push
pop
xchg
int3
mov
and
shlb
ljmp
sbbl
jmp
lret
sub
mov
adc
lahf
sub
jns
andb
mov
jno
xor
lea
jbe
into
mov
and
ficoml
inc
sbbb
push
fildl
sbb
and
gs
jnp
scas
add
rorl
loope
jae
add
out
mov
sub
loop
imul
inc
lock
sub
sti
and
pop
add
aas
or
cmp
push
adc
add
and
fistps
iret
lea
and
std
ficompl
add
cmp
inc
push
call
test
or
mov
dec
dec
add
cwtl
cmp
jl
sbb
and
mov
adcb
push
ja
stos
out
out
mov
fstl
inc
cmp
cmp
lock
ret
fistpll
cmp
inc
shlb
pop
and
aam
xor
pop
lret
pop
fadd
into
fcomps
cmp
stos
or
push
fwait
sub
imul
sbb
sbb
cmpsb
imull
adc
js
cli
popf
adc
push
mov
inc
jmp
and
leave
ror
mov
cmpsb
mov
and
push
insl
jl
xchg
sub
mov
dec
jg
mov
push
add
add
xlat
cltd
inc
stos
xor
mov
movsb
leave
sbb
pop
stos
mov
imul
sub
xchg
or
repnz
imul
test
pop
hlt
adcb
int3
jno
mov
dec
lret
scas
aam
add
stos
dec
pop
jnp
dec
pop
test
jnp
add
int3
pusha
push
mov
outsb
add
adc
fwait
shl
jo
cmp
cld
test
outsl
and
insb
dec
pop
sahf
jne
or
out
xchg
clc
inc
dec
jne
cwtl
cltd
sub
shll
push
lods
mov
repz
hlt
cwtl
jne
std
insl
ret
jl
dec
shl
inc
push
pop
fs
lahf
mov
gs
bound
movsl
inc
aas
enter
or
lcall
lods
shlb
push
mov
mov
xlat
fldt
gs
dec
mov
enter
std
push
and
rcrl
mov
mov
cmp
jle
pusha
push
cld
out
adc
or
or
scas
sub
xor
pop
mov
lcall
outsb
jle
mov
scas
mov
or
or
dec
sbb
in
cmpsl
inc
ja
adc
pop
add
adcl
xchg
sub
cld
fdivrp
sub
mov
or
pop
int
and
sbb
add
sbb
pop
jno
js
pusha
bound
push
mov
mov
testb
xlat
out
rorb
in
in
push
pop
xor
out
ds
xor
out
cmpsl
int3
sbb
ret
decl
xchg
or
negl
cmovo
test
stos
cwtl
mov
popf
lods
pop
dec
pop
ret
jbe
xchg
fisubrs
inc
sub
ret
test
je
pop
mov
inc
loope
sbbl
jl
and
sbb
test
in
mov
cmp
enter
pushf
push
shlb
xchg
push
dec
icebp
daa
adc
xlat
in
test
popf
dec
mov
push
mov
test
lds
scas
add
data16
jae
fisubrs
sub
and
pop
and
inc
mov
dec
inc
dec
adc
add
xor
lcall
mull
jecxz
in
test
aam
lahf
add
pop
shl
inc
mov
push
scas
fisubl
jmp
mov
sub
lcall
fdivs
adcb
cwtl
cltd
daa
pop
mov
je
push
negl
test
adc
jnp
aaa
aad
icebp
xor
rorl
mull
pop
stos
adc
push
mov
iret
add
cmp
cmc
icebp
xchg
mov
out
cli
xchg
push
xor
aas
lods
adc
lcall
lds
lds
pop
pushf
push
mov
mov
adc
cmp
mul
jmp
pusha
das
mov
mov
sti
jl
shll
mov
xchg
or
jae
out
addb
jge
scas
pop
jecxz
inc
or
ds
gs
repnz
push
mov
lahf
push
loope
xchg
lahf
push
int3
add
pop
jl
fcomps
inc
ds
sahf
push
cmc
pop
cli
push
mov
orb
imul
add
test
ffreep
dec
jl
inc
mov
adc
adc
and
fsubr
cmp
add
jae
xor
push
add
jno
push
js
pop
cs
daa
in
fisttpll
bound
cwtl
icebp
outsl
or
push
sub
mov
jno
adc
sbb
mov
xchg
imul
pop
mov
testb
add
add
mov
pusha
cmp
and
pop
cmpsl
out
mov
adc
jne
or
and
aas
addb
mov
xor
sti
pop
iret
int3
inc
ja
sbb
add
push
jg
bound
movsl
lods
push
push
outsl
fldl
loop
rorl
sub
dec
push
in
js
push
mov
pop
jnp
int3
and
sbb
sbb
push
xor
mov
inc
idivb
inc
testl
sbb
mov
jnp
cmc
imul
hlt
jg
int3
inc
daa
test
pop
mov
cmpl
outsl
cltd
fwait
jbe
pop
js
jg
or
jbe
jno
sti
push
jl
cmp
loop
test
mov
loopne
adc
pop
sub
mov
push
cwtl
mov
loope
lods
aaa
mov
test
push
mov
loope
pop
fchs
sub
out
dec
mov
push
xor
pop
sti
dec
nop
cli
and
add
popf
adc
sub
sbb
sbb
sbb
jb
mov
adc
mov
orb
pop
xchg
jp
pop
sub
xchg
cmp
push
in
xchg
jno
ljmp
jp
int3
lcall
icebp
jge
mov
nop
sub
pusha
pop
nop
xchg
movsl
das
lods
repnz
pop
inc
arpl
or
fsub
push
lret
dec
xchg
sub
lahf
aad
cmp
cmp
inc
add
sti
imul
scas
push
mov
cmp
lcall
fldl
or
and
cmp
repnz
in
push
xchg
popf
mov
lods
sbb
jno
jg
adc
pop
aas
fmull
mov
mov
stc
cmp
push
push
aam
cltd
dec
outsb
add
mov
mov
xchg
cmp
sbb
movsb
push
cmp
rorb
adc
push
in
pop
stos
bound
int
cmpsb
faddl
out
and
lea
and
sub
xchg
dec
daa
aaa
dec
lret
add
sbb
add
xor
enter
sub
fildll
imul
and
cwtl
stos
sbb
insl
fildll
jp
adc
push
test
pop
jnp
enter
sub
mov
adc
shrb
fcmovne
movsl
out
out
mov
sub
cltd
test
cmp
mov
pop
jbe
sbb
adc
dec
xchg
mov
jae
jnp
mov
dec
lcall
jge
inc
inc
mov
add
sbb
sarb
sbb
ffree
scas
sbb
outsl
out
je
rcrb
jae
push
rcrb
dec
roll
cmp
push
pop
cmp
sub
sub
jecxz
push
adcb
push
lods
dec
sub
rcr
out
aam
xor
jnp
leave
jge
out
inc
lcall
sub
arpl
insl
pop
xchg
push
mov
mov
or
jnp
add
xchg
inc
insl
dec
sbb
cwtl
cmp
test
cmc
stos
mov
inc
in
dec
inc
xchg
daa
push
aas
bound
cmp
sbb
movsl
pop
jp
popf
ret
ret
fstpt
or
cmp
dec
jmp
and
lcall
iret
nop
cmp
dec
aam
add
mov
jne
push
leave
pop
sti
jmp
out
mov
pop
and
arpl
xchg
clc
dec
mov
cmpsb
loope
jae
out
push
pop
add
mov
mov
loope
mov
mov
mov
sbb
jp
lret
xchg
jmp
cwtl
out
movsb
movsb
shl
push
mov
push
sbb
outsl
pop
xchg
addr16
push
pop
cmp
hlt
or
dec
insb
dec
mov
pop
jmp
adc
popa
sbb
movsl
outsb
stos
and
xchg
add
call
test
sub
cmp
pop
cld
test
dec
loop
push
push
mov
out
aad
push
push
gs
jbe
adc
mov
ljmp
or
push
cmpb
mov
stc
pop
mov
loop
pop
and
movsl
mov
cmp
mov
inc
xor
xlat
pusha
mov
lock
enter
pop
stos
loope
movsb
cmpb
daa
push
add
out
inc
jle
sub
mov
maskmovq
xchg
add
sbb
movsl
mov
jns
jbe
in
adc
jb
cli
es
cltd
push
fdivrs
insb
out
pop
shl
mov
lods
sbb
mov
cs
add
push
out
rcl
mov
xchg
xchg
and
repnz
test
mov
adc
cli
gs
clc
lcall
loop
and
fbld
sub
and
in
cmpsb
pop
out
cmp
loop
push
adc
pusha
stos
cs
rclb
mov
dec
jbe
push
pop
cmp
bts
adc
fptan
into
pop
test
lock
fwait
das
fcoml
sbb
repnz
cmp
out
xchg
outsl
push
xor
pop
xor
cmp
outsb
fldt
mov
sub
pop
jo
stos
cmp
mov
or
lds
movsb
cmp
and
in
sub
repz
push
loope
scas
rcrl
push
dec
mov
pop
pop
cmpsl
xlat
inc
data16
outsb
adc
mov
subl
dec
cmp
bound
ds
dec
ret
call
nop
add
lahf
jmp
in
add
push
inc
jp
mov
mov
test
movsl
xlat
les
out
scas
inc
adc
ret
fs
hlt
and
loope
jmp
pop
bound
orb
aam
shrl
aas
push
adc
lcall
sti
ja
lods
into
adc
and
and
inc
inc
xlat
iret
rep
stc
xorl
mov
push
aad
clc
cmp
loopne
adc
pop
push
in
push
das
sub
mov
mov
xor
add
add
lods
popf
mov
push
push
ds
inc
inc
popw
mov
cltd
jbe
mov
jp
scas
push
ljmp
dec
cmc
mov
in
inc
cltd
cli
push
jae
daa
add
pop
movsl
in
ljmp
fadd
rcrb
roll
adc
pop
mov
aaa
lods
adc
adc
jne
xor
test
ficoms
aaa
loop
sbb
popa
pop
mov
in
insb
shl
movsb
lahf
inc
mov
lahf
stc
popa
pop
mov
shlb
shl
push
mov
fnstsw
fsts
push
xlat
pusha
imul
pop
push
cli
inc
das
fcomp
imul
inc
aas
xchg
jge
and
sub
adc
andl
frstor
popf
xor
fistl
and
fcmovnbe
jns
sbb
js
xchg
mov
xchg
out
lods
sbb
lods
mov
or
andl
mov
int
scas
xchg
mov
or
mov
pop
sub
jae
mov
jl
and
xchg
xchg
sub
adc
insb
roll
scas
fisubl
jge
mov
sub
or
call
hlt
ret
mov
inc
pop
scas
aad
mov
add
fsubrl
out
push
adc
xor
mov
hlt
push
or
mov
push
popf
ds
stc
andb
dec
fbld
jmp
dec
jge
out
cltd
xor
das
or
push
call
or
fwait
loope
sub
add
dec
and
js
aaa
inc
mov
sbb
mov
jnp
lahf
fldcw
mov
jbe
ja
loop
cmp
fisubl
ret
lds
mov
jl
sti
std
gs
add
test
fucom
in
loop
ss
jne
je
add
and
mov
pop
enter
loopne
enter
mov
and
in
fwait
inc
push
jnp
enter
test
lea
sbbb
repnz
pop
xchg
pop
outsb
pop
cwtl
mov
cltd
aad
sub
mov
leave
mov
repnz
lock
xchg
pop
arpl
push
jge
pusha
pop
rcl
roll
in
lcall
mov
in
or
outsw
or
cmp
xor
jb
sahf
xchg
jbe
out
dec
xor
mov
lret
pushf
and
pop
push
jmp
mov
imul
inc
pop
cli
inc
adc
jl
ljmp
movsl
stc
fisubrl
pop
mov
in
sub
jmp
xorl
adc
xchg
jle
je
enter
out
std
push
inc
pop
mov
jmp
mov
pop
xchg
or
dec
popf
inc
mov
fs
push
mov
testl
push
xchg
cmpsl
gs
out
mov
les
push
fldcw
fcmovnb
insb
test
loopne
lock
enter
mov
cmp
das
pop
pcmpeqb
insl
xor
dec
aam
lcall
jmp
stos
out
mov
pop
mov
cmp
imul
or
mov
icebp
test
push
popa
mov
fwait
sub
out
push
nop
add
or
mov
pop
cwtl
adc
mov
imul
rcr
jle
push
ds
jbe
mov
call
lods
or
adcb
adc
cmp
cmp
mov
push
mov
out
sub
lea
pop
or
out
mov
cmp
in
mov
cmpsl
xor
in
sbb
ss
xlat
mov
out
cmp
jge
in
test
mov
pop
fisttps
repnz
cmp
sbb
les
inc
jae
and
and
pop
cltd
fdiv
in
xchg
cmp
jl
lods
fildll
inc
adc
inc
add
mov
fisubrl
nop
lret
cmp
mov
scas
andb
movsl
adc
sub
loope
in
popf
dec
cs
testl
xchg
inc
cmp
inc
jge
hlt
stc
lods
mov
inc
inc
sbb
mov
sbb
sub
cli
and
mov
sub
push
jbe
or
cwtl
outsb
xchg
pop
and
cmp
jmp
shlb
mov
dec
ficomps
cmp
jmp
cmpsb
xor
adc
es
xor
dec
cs
or
jge
push
adcl
xchg
test
mov
pop
std
cld
outsl
cltd
push
cmp
mov
mov
add
xor
loop
cmpsb
push
test
paddw
push
test
subl
add
inc
xchg
add
xor
xchg
pop
xor
dec
cld
lds
adc
lods
dec
sarl
test
shlb
jb
xchg
push
dec
iret
push
lret
add
cmp
mov
push
dec
adc
or
shll
pop
and
lods
cmpsl
mov
sub
popa
cmp
xor
ss
test
cmpsl
push
addr16
mov
test
sti
in
mov
mov
fwait
adc
mov
mov
sbb
dec
pop
loop
jne
ret
jle
fucomip
aaa
jae
les
jg
and
sbb
xchg
and
mov
enter
cmp
in
out
xchg
jo
scas
add
imul
stos
lahf
lret
js
mov
inc
ja
pop
repnz
mov
mov
stos
enter
jge
andb
xchg
cmp
pop
orl
jno
inc
test
sarl
jmp
xchg
jmp
iretw
iret
push
jnp
lods
jmp
lock
xchg
xor
repnz
cmc
push
push
out
push
push
or
fcmove
adc
jle
addr16
jno
xor
jge
push
test
sbb
add
jbe
mov
in
xor
ss
xchg
imul
jle
shrb
sti
loopne
adc
sub
imul
lods
pop
lock
hlt
cld
cmp
test
pusha
subb
int3
mov
enter
inc
push
aaa
sub
sbbb
cwtl
sbb
testb
fnsave
shlb
enter
add
add
fwait
push
sbb
lea
or
std
pop
cmpsl
mov
or
sti
cmovb
or
sarb
inc
push
xor
sbb
cli
leave
fisubrs
or
or
sarl
popa
testl
pop
xchg
push
data16
pop
leave
rcrl
repz
mov
lcall
mulb
cmp
pop
or
std
dec
mov
pop
test
enter
fimuls
sub
and
fdiv
jnp
nop
and
jmp
orb
jp
cmp
es
inc
mov
fsubr
lea
jno
mov
pop
adc
jbe
xor
pop
addr16
aaa
in
lcall
pop
pop
cmp
notl
aad
cld
push
jnp
aas
dec
mov
inc
xlat
aas
sbb
mov
adc
jbe
push
jns
loopne
nop
pop
idivb
in
inc
xlat
arpl
addl
mov
andl
arpl
xor
add
lds
xorl
shlb
jbe
dec
inc
mov
mov
pop
pushf
mov
xchg
lahf
mov
lcall
arpl
mov
jae
paddq
mov
repnz
insl
jo
sub
xor
add
or
mov
pop
and
sub
cmp
std
lods
movsl
sub
mov
push
jno
js
cltd
or
test
mov
inc
stc
daa
cmpsl
mov
inc
insb
lock
sub
ja
cli
jno
mov
pop
mov
movsl
pop
cwtl
sbb
jae
imul
push
scas
call
jge
or
dec
dec
out
lahf
xchg
push
test
and
ror
cmc
mov
xchg
out
mov
or
pop
jae
sub
xchg
fs
mov
scas
cmp
sahf
test
and
inc
int
xor
fmull
jae
sub
pop
ret
mov
or
enter
fwait
xchg
sbb
popa
add
lds
cs
or
jle
jo
pop
sahf
gs
add
fldt
iret
adc
lods
and
xor
stc
addl
ja
sbb
sbb
xor
or
roll
out
test
mov
dec
rclb
xor
stc
pop
sti
adc
mov
imul
mov
jo
inc
fiadds
cmp
xchg
cwtl
cld
les
cmp
jle
loopne
and
ret
lret
cmp
dec
popa
inc
adc
dec
xor
inc
and
dec
add
dec
jmp
mov
cmp
pop
and
add
call
in
dec
out
int
sbb
sbb
repz
mov
mov
adc
adc
addr16
push
sbb
test
in
ds
aad
mov
pop
jbe
in
movsb
jp
fcmovnb
fistps
mov
dec
es
popa
mov
push
adc
dec
fs
sub
shlb
push
loopne
cmpsb
pop
repz
rcrb
mov
push
ret
mov
in
cmpsb
aas
xor
pop
test
cmpsl
and
xchg
out
cli
pop
push
cmp
lods
ret
test
jmp
push
loopne
outsl
add
push
jns
pop
sti
mov
loop
mov
add
cmp
rclb
mov
mov
sahf
lds
std
std
dec
sbb
cmp
shll
pop
xchg
jge
fs
int3
sub
dec
aam
mov
in
shr
clc
popa
aas
mov
mov
subb
sbb
int
xor
jp
iret
cmp
fsubrl
lret
imul
arpl
sub
xchg
es
test
pusha
movsl
or
jae
cli
jg
xchg
nop
mov
mov
mov
jle
push
dec
loope
aaa
addr16
dec
jmp
pop
movsb
pusha
test
mov
sbb
xchg
inc
push
fs
push
leave
xchg
imulb
inc
sub
les
hlt
jg
sbb
call
ficoms
mov
fcoms
outsb
xchg
aad
pusha
adc
jecxz
outsb
jbe
mov
jp
loope
push
ret
movsb
xchg
nop
loopne
sti
pop
adc
dec
jecxz
xchg
xchg
lret
dec
mov
or
in
shll
jle
dec
shl
leave
out
in
adc
and
imulb
pop
push
xor
lret
push
pop
loop
mov
insl
sub
sub
adc
sahf
pop
pop
jne
xchg
add
stos
mov
enter
adc
or
jl
in
stos
das
xchg
setl
cmp
out
sub
push
aad
sub
xchg
loopne
lahf
mov
add
xor
js
cmp
ljmp
pop
jo
test
xchg
jecxz
mov
clc
mov
lock
int
scas
adc
sub
inc
mov
cmp
sub
outsb
mov
push
mov
int
sti
add
icebp
cmp
cmp
jno
pop
push
lods
pop
sbb
sarb
outsb
leave
ret
mov
adc
das
adc
mov
pop
push
ljmp
out
fcmovnu
test
das
cmp
repnz
push
jecxz
xor
push
sbb
popa
and
sub
pop
mov
sub
mov
clc
pop
or
mov
lret
push
xor
outsb
inc
pop
or
push
inc
loop
xor
cmc
xor
loop
mov
dec
dec
popa
insl
or
push
insb
sub
xor
int3
and
mov
movsl
pop
inc
out
jno
fdivrs
adc
movsl
inc
insb
into
stc
xchg
cwtl
es
lret
adc
mov
lock
mov
fildl
or
xchg
pop
mov
add
cmp
shl
xor
jecxz
scas
popf
adc
lock
rcr
inc
sahf
pop
lcall
inc
and
xchg
orb
mov
ja
adc
or
adcb
push
dec
in
gs
popf
lock
mov
cmpsb
outsl
mov
imul
setle
sub
xchg
ret
and
jb
aad
jecxz
lds
lods
dec
stos
push
xchg
push
or
imul
or
test
sub
loope
inc
lds
mov
js
lcall
add
loopne
movsl
lock
pop
out
mov
in
fisubrl
loope
lods
mov
add
std
or
pop
cmp
adc
cmp
mov
cmp
pop
loopne
or
lcall
cmp
pop
movsb
stos
sub
fistpll
xor
dec
sbb
cmpsl
xchg
fldl
mov
stos
mov
dec
test
stos
xchg
aas
xor
jge
sub
mov
js
mov
dec
pop
lret
xchg
add
xlat
or
mov
sti
mov
incb
mov
mov
addb
pop
cmpb
pop
mov
mov
xlat
or
push
mov
test
cmp
sub
pushf
test
pop
inc
pop
mov
mov
loope
pop
out
push
test
shl
xchg
scas
aad
sbb
repz
and
jle
fldcw
mov
rcl
and
adc
add
push
sbb
lahf
mov
xchg
shll
adc
xchg
jecxz
mov
pop
sbb
push
inc
adc
icebp
inc
xchg
into
jns
inc
aam
shl
sbb
sarl
sbb
or
or
ret
sub
fwait
push
ss
sbb
lock
mov
jb
je
iret
cmp
in
push
adc
or
jmp
fwait
ds
scas
xor
iret
stos
setg
leave
mov
dec
inc
lock
rcll
add
jae
shrl
fdiv
lds
and
dec
ficompl
adc
jnp
mov
inc
jbe
mov
pop
int3
inc
es
cmpsl
lds
or
inc
mov
jle
add
pop
sbb
jp
out
push
sub
cmpl
push
sub
loop
add
into
push
arpl
scas
xor
inc
or
xchg
lea
sbb
jge
cmc
movsb
ja
mov
movsb
pusha
in
mov
xchg
dec
test
pop
dec
dec
add
cmp
mov
lods
mov
loope,pt
leave
inc
pop
pop
mov
daa
mov
xchg
test
imul
lret
xchg
cltd
ja
scas
outsb
inc
fldcw
int
jge
inc
mov
push
mov
nop
jecxz
inc
flds
pop
add
inc
jnp
ror
in
sahf
jne
jecxz
or
cwtl
mov
neg
push
shll
outsb
push
mov
fldcw
pop
inc
les
int
shl
fists
cmpsb
add
cmp
inc
test
sub
push
aam
mov
xlat
jnp
push
xor
cmp
push
dec
mov
and
inc
test
repnz
jmp
push
xlat
mov
adc
dec
aad
push
add
xlat
jno
jae
add
outsl
int3
sub
sahf
js
fstps
cmp
sbb
and
cmp
mov
jb
pop
mov
ja
mov
stos
sub
daa
inc
adc
inc
aam
and
mov
mov
inc
sub
inc
das
outsl
ss
cmp
lret
scas
ss
fs
push
sub
and
shrb
std
xchg
mov
mov
mov
pop
out
sub
mov
pop
adcb
pop
cld
push
mov
xchg
pop
jg
pop
insl
fwait
test
jecxz
int3
sbb
outsl
inc
mov
outsb
lods
add
inc
mov
mov
and
inc
mov
je
push
test
pop
lds
push
js
inc
dec
stc
jno
call
and
js
out
stos
inc
sbb
fdivrp
into
mov
test
in
jo
add
sub
mov
pop
stc
pop
mov
fsub
push
adc
mov
fidivl
hlt
mov
xchg
mov
mov
mov
les
loop
into
or
cmp
pop
adc
shrl
mov
sbb
das
jae
add
jl
xchg
push
psllq
and
loopne
mov
subb
or
inc
fcomip
mov
push
mov
stos
in
repnz
mov
fldcw
xchg
xchg
xchg
push
or
xchg
shlb
jnp
sti
xor
cmp
lock
int
sbb
sbb
lods
popa
popf
jg
cmpsb
push
ss
filds
lock
bound
adc
inc
or
addr16
cltd
cmp
rorl
mov
jnp
push
pop
jae
sbb
sbb
fwait
loopne
testl
xor
cmp
jp
or
rolb
lods
pop
les
fsts
sti
aam
sbb
jge
pop
mov
jnp
pop
adc
movsb
inc
aaa
pop
add
fsubrp
popa
shll
mov
arpl
sti
aad
adc
and
out
mov
mov
subb
leave
and
or
repnz
mov
out
mov
cmp
in
push
sub
popf
in
out
inc
xlat
sti
jp
xchg
cmpsl
enter
mov
out
mov
gs
cli
sahf
stc
sbb
mov
or
mov
loop
mov
push
mov
and
add
pop
fnstenv
popf
xor
push
inc
or
call
in
cmc
jno
add
sahf
inc
cmpb
jb
int3
cmp
xchg
jo
pop
add
loopne
ret
je
inc
stc
ret
add
or
lea
mov
adc
dec
sahf
sti
jg
push
aaa
mov
pop
mov
ss
ljmp
test
bound
pop
jne
dec
or
inc
sbb
ljmp
pop
je
push
push
addr16
mov
sbb
lcall
cld
inc
pop
xor
cmp
dec
mov
jns
icebp
cmp
mov
fidivl
cmp
inc
test
insb
int
cmc
and
fdivrl
adc
jle
int
cmp
dec
and
cmpsb
orl
pop
jmp
cld
xor
mov
cmp
outsl
jecxz
aas
out
test
push
lcall
pushf
addr16
rcrl
pop
stos
adc
scas
and
lea
ror
dec
fildl
lcall
ljmp
int
jbe
mov
lock
lock
iret
sbb
call
shrb
inc
jge
push
mov
or
sbb
subb
cld
sbb
adc
stc
xlat
sub
pmulhuw
sbb
jmp
mov
stos
shlb
outsl
jb
mov
clc
mov
push
cmp
repnz
jbe
in
and
int
xor
in
mov
das
adc
dec
xor
int3
pop
xchg
inc
push
in
sahf
sbb
cmp
test
in
adc
mov
xlat
adc
adc
lock
mov
negb
insb
pop
aam
cmp
imul
pop
xor
stc
inc
mov
inc
push
pusha
mov
adc
js
xor
xchg
ja
jo
add
mov
xor
aam
nop
dec
cltd
mov
add
dec
push
mov
sbb
ljmp
push
mov
enter
aam
in
pop
fildll
paddd
xor
icebp
pop
mov
xchg
fistl
repz
cmp
cmp
imul
lods
leave
mov
xchg
aaa
lds
test
je
cs
mov
cmpsl
cmp
test
mov
adcl
insl
out
iret
call
mov
outsl
and
or
sbb
ds
sbb
loopne
loopne
xchg
cmpsb
push
lcall
iret
push
imull
scas
cmpsb
lods
pop
cmp
ret
ds
das
out
push
push
jnp
and
inc
push
add
add
pushf
cmp
cld
mov
xchg
sbb
mov
push
dec
mov
mov
ja
fdiv
mov
int
rcr
pop
in
mov
shr
ds
nop
mov
mov
mov
enter
adc
in
std
mov
and
mov
sbb
orl
inc
push
mov
dec
sbb
stos
pop
cld
or
mov
pusha
lret
push
pop
mov
fwait
mov
outsl
dec
lret
dec
mov
clc
popf
pushf
mov
dec
cmp
imul
adc
dec
jae
cmp
fistpll
push
in
push
sub
pop
xchg
jb
pushf
or
inc
xchg
cli
out
fwait
sahf
inc
iret
arpl
aam
imul
xchg
out
repnz
decb
dec
and
call
inc
or
test
add
jno
int
sbb
cs
adc
iret
cmp
shr
xlat
pushf
sbb
das
inc
push
inc
ljmp
jg
sbb
fistps
shrl
ret
mov
inc
mov
outsl
mov
int
insb
push
shl
jmp
sbb
shrl
scas
cmp
bound
sbb
loop
adc
sti
dec
xlat
leave
pop
mov
shrl
punpckldq
mov
sbb
mov
sahf
insb
in
pusha
jbe
lock
xor
dec
push
lods
sbb
xchg
das
pop
fwait
leave
ja
int
inc
cmc
or
pop
and
jns
popf
loope
loopne
xor
call
dec
sub
out
fbld
clc
cwtl
cmp
and
loop
pop
nop
jae
jo
fistl
in
pop
dec
shll
subl
cmovb
jns
sarl
loop
xor
aam
mov
into
mov
sub
inc
lret
sub
cmp
mov
test
rol
sub
jp
pop
scas
clc
ljmp
cmp
pand
std
fs
cmpsb
adcl
dec
loop
cli
rorl
ss
imulb
daa
clc
fs
ljmp
or
xchg
sahf
rorb
sbbl
xlat
inc
test
fcoms
mov
stos
push
mov
orb
notb
add
xlat
inc
popa
repz
adc
jg
dec
sub
arpl
and
dec
loope
push
das
cmp
lret
faddl
push
mov
add
mov
arpl
cmp
dec
inc
insb
pop
push
loopne
mov
inc
call
sub
inc
jne
lret
pop
push
rolb
shl
xor
cwtl
insl
in
imul
mov
loopne
ret
push
cmp
nop
repnz
ljmp
sub
addr16
fdivr
imul
rcll
out
or
jle
xor
xchg
adc
das
push
fwait
mov
push
add
cmp
fsubl
sbb
and
sub
and
mov
iret
aad
lea
pushf
and
and
xor
out
cltd
int3
lahf
shrb
mov
in
cli
sub
add
jne
inc
out
add
dec
ja
pop
nop
ficoms
aas
xlat
cmp
mov
or
mov
sbb
gs
fmul
sbb
loopne
mov
push
pand
inc
lahf
inc
sbb
jns
jl
hlt
mov
mov
movsl
jae
and
xchg
stos
mov
or
aam
movsb
adc
inc
repnz
or
dec
jmp
inc
xchg
sbb
ret
aad
mov
bound
sub
and
mov
addr16
inc
mov
movsl
and
inc
and
and
mov
js
push
into
or
dec
xchg
lods
jmp
sub
pushf
xchg
jl
movsl
ss
push
mov
fcoms
dec
adc
sbb
push
push
xor
aas
sahf
jmp
cld
fistps
dec
out
add
out
xlat
jo
lea
popf
push
into
xor
mov
jnp
loop
mov
ljmp
aas
notl
or
or
stos
mov
into
cmp
pop
out
jge
outsb
cmp
fisttps
inc
adc
xchg
pushf
insb
aaa
mov
into
push
imul
lret
add
mov
stos
ja
adc
pop
mov
lret
adc
xor
pusha
test
pop
or
ljmp
cmp
inc
push
lock
loope
mov
xchg
sub
sar
cld
sarl
rcll
cs
loop
push
repz
mov
movsl
pop
cmp
jp
mov
stos
stc
imul
mov
ret
sti
xor
ja
add
adc
fisttpl
in
inc
jbe
inc
mov
cmc
inc
dec
testb
stos
xor
cmp
inc
add
mov
mov
fidivs
mov
test
movb
idivl
js
pop
pushf
js
jae
inc
loopne
mov
cmp
cmp
jbe
fs
mov
cmp
fs
cmp
jmp
stc
rcll
shl
in
or
xchg
stc
jbe
inc
fcomps
dec
mov
sub
scas
inc
roll
pop
popf
add
and
mov
push
mov
inc
pop
dec
insl
aam
pusha
cmp
mov
cmpl
push
rorl
add
xchg
js
cwtl
shr
jb
xchg
cmp
rep
sub
sub
mov
out
jg
insb
and
call
jl
mov
js
je
jne
sbb
lret
inc
mov
adc
cmp
dec
pop
jb
idivl
mov
sub
xchg
in
andb
add
repnz
push
dec
xchg
add
xor
jbe
bound
fsts
adc
dec
test
div
jo
test
jmp
ss
adc
or
mov
jg
or
test
cmpsl
rol
repz
mov
xchg
adc
push
out
jmp
cmp
ja
repz
xchg
movsl
xchg
adc
xchg
lcall
pop
jle
cwtl
inc
lods
sti
mov
sbb
xchg
pop
insb
dec
mov
lret
mov
sahf
rorb
mov
sub
mov
roll
shlb
and
pop
jbe
addb
jecxz
outsb
or
ficomps
inc
pop
mov
xor
mov
js
jo
jl
in
insb
lds
jo
std
int
pop
xchg
gs
lcall
fnstcw
sbb
or
push
ljmp
cmpsl
call
adc
mov
jecxz
xor
jmp
ss
rcll
cmp
jl
mov
and
roll
xchg
fld
lcall
mov
cld
insb
push
popa
jl
inc
sar
lods
in
add
bound
xchg
js
sbb
pop
push
test
or
test
lods
sub
hlt
mov
push
lds
pop
arpl
divl
xor
jno
cwtl
arpl
addl
roll
pop
xlat
pushf
add
dec
adc
jmp
popa
test
inc
ficomps
cmp
push
push
push
push
out
ljmp
jecxz
inc
mov
mov
push
es
enter
adc
popf
xchg
adc
ret
pushf
popf
sbb
in
adc
or
aaa
imul
jbe
int3
jl
xchg
jge
shr
and
pop
cmpsb
iret
mov
xchg
or
sub
hlt
cmpb
cmpsl
in
in
nop
stos
cwtl
jmp
push
sbb
sub
mov
imul
imul
fwait
popf
enter
ss
stos
xchg
enter
adc
shlb
dec
fistl
inc
imul
jle
lret
xchg
or
mov
cmp
sti
dec
pop
xchg
mov
in
adc
pop
mov
inc
sarl
sub
sub
or
test
mov
insb
adc
sarb
mov
adc
xor
mov
push
xchg
jecxz
pop
or
add
inc
addr16
fs
pop
imul
incb
sahf
dec
pop
add
ds
pop
mov
sub
ds
clc
mov
pop
sbb
fisubl
stos
adc
sub
aas
xchg
loopne
