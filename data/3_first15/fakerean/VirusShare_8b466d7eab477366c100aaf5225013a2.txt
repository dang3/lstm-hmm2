sbb
add
sbbb
out
xchg
xor
mov
mov
std
pop
cs
dec
dec
mov
sbb
cs
push
ja
in
inc
xor
ljmp
mov
daa
test
shrl
int
mov
xchg
fs
sub
cwtl
xor
jae
aaa
es
les
idivb
adc
pop
mov
mov
out
inc
adc
daa
push
das
xchg
sbb
inc
into
repnz
lea
arpl
xchg
js
add
mov
lods
adc
int
xor
movd
rorl
jmp
ds
fsubrl
jae
xchg
stos
mov
push
sub
lret
mov
stos
jns
push
int3
inc
mov
jns
push
xor
addr16
fdivr
mov
jg
lret
int
pushf
cmp
sub
in
xor
xchg
rol
fidivrl
xchg
popw
dec
addr16
adc
xchg
icebp
cmc
xchg
pop
imull
ja
nop
add
into
addr16
dec
repz
shll
fsubs
push
testl
fisubs
or
or
lahf
das
sar
add
mov
jne
out
mov
inc
sub
loope
jmp
inc
pop
or
repnz
cmp
rorl
popf
xchg
jge
fildl
mov
cltd
fucomi
jg
mov
out
cmp
jecxz
lds
cli
cs
mov
loope
mov
les
lea
cmp
mov
xchg
sub
or
sub
lods
rol
andl
jle
xor
push
add
cld
aas
add
sbb
inc
mov
push
aaa
push
rcr
leave
cmc
test
xor
adc
jbe
dec
fildll
add
out
rcrb
aas
inc
rorl
adc
cmp
xchg
or
xchg
repnz
out
cmpsl
stos
fstpt
arpl
sub
jle
mov
loopne
xor
ds
shll
or
inc
rorl
call
jle
add
pop
pop
push
cmc
icebp
ss
std
arpl
inc
popf
mov
pop
std
enter
cmp
adc
fucomip
add
push
shll
sarl
nop
cmp
shlb
popa
mov
mov
call
aad
pop
xchg
jle
jb
cli
loope
sbbb
andb
in
fwait
int
adc
and
inc
cld
ljmp
or
inc
cmp
adc
jne
lret
div
testl
test
sub
jnp
in
in
mov
and
mov
push
lcall
pop
jae
aad
jo
push
add
pop
and
add
cld
dec
rcl
cltd
cwtl
aaa
mov
dec
mov
in
sbb
mov
inc
shll
add
mov
inc
adc
in
mov
cltd
mov
bswap
cmpsl
out
insl
in
mov
pop
jecxz
xor
jg
push
cmp
jnp
cmpsl
mov
roll
in
lods
stos
dec
mov
clc
cmp
cmpsb
test
insb
sahf
ret
test
out
adc
add
das
int
adc
or
popf
mov
inc
aad
hlt
test
dec
out
inc
pop
lcall
xlat
jns
ja
pop
inc
push
loop
mov
xor
fidivs
sarb
ja
pop
sub
rcrl
add
es
fs
je
sarl
ja
mov
enter
mov
sbb
xor
cli
sbb
jl
sarl
mov
inc
js
mov
aaa
jp
xor
loopne
cltd
sub
push
xlat
les
stos
int
add
call
cmpsb
ret
adc
sub
leave
jno
jle
je
loope
dec
test
adc
repz
out
mov
or
pop
ficoml
cs
icebp
jb
and
test
xchg
adc
or
pop
leave
or
mov
jo
xor
adc
lods
jno
aam
aad
mov
inc
dec
imul
and
fucom
popf
fcmovne
sub
ss
aas
xchg
mov
mov
call
aaa
cmpb
sub
push
xchg
ficoms
xchg
shrb
lcall
adc
ret
push
and
cmpsl
jne
cmp
cmp
mov
mov
cmp
mov
xchg
mov
pushf
stos
test
mov
out
stos
cmp
dec
inc
mov
push
repnz
shl
cwtl
sarl
popa
in
pop
jecxz
insb
xchg
inc
add
xchg
mov
popf
adc
xorl
outsb
stos
xchg
out
jge
push
add
jne
mov
popa
push
pop
or
mov
iret
sub
mov
dec
lcall
sbb
lods
adc
sbb
mov
adc
int
inc
lds
xchg
cwtl
adc
fwait
pop
push
test
clc
dec
dec
inc
scas
jge
shll
add
adc
push
push
dec
lcall
add
jae
insb
hlt
test
cmp
aad
scas
je
mov
bound
xor
add
sbb
mov
push
xlat
fildl
adc
mov
in
imul
pop
fisubrs
jae
outsl
cmpsl
out
jmp
adc
sub
push
cmp
jecxz
mov
mov
xlat
fsubrs
call
lret
aad
hlt
cli
dec
pop
in
cmp
int3
sti
add
rcll
sub
adc
mov
mov
push
mov
dec
pop
das
add
push
imul
inc
jnp
adc
inc
test
adc
loope
test
and
popa
fsubs
fwait
sti
repz
push
jno
push
xor
cmp
movsb
pop
xchg
cmc
vmovdqu
repnz
dec
push
add
out
jb
cli
and
and
dec
cmpsl
rcrl
addr16
xchg
adc
or
jmp
movsb
push
bound
test
aad
mov
imul
xor
dec
sbb
nop
mov
rclb
sub
imul
loopne
out
mov
sub
sub
pusha
outsl
mov
mov
scas
arpl
arpl
fnsave
outsb
fwait
int
push
xchg
daa
fcmovbe
sahf
shl
gs
adc
mov
mov
in
jecxz
mov
clc
xor
jno
cmp
in
dec
jae
mov
mov
push
add
ss
lock
add
aad
arpl
fdivrl
call
inc
add
cwtl
mov
addr16
je
scas
xchg
movsl
int3
arpl
add
xchg
aad
jecxz
das
jns
xchg
cmp
add
mov
ljmp
inc
add
repnz
mov
mov
xlat
dec
out
jo
dec
sbb
ds
dec
pop
fucomip
sbb
ds
test
cs
scas
mov
sbbl
dec
pushf
inc
mov
shrl
adc
lahf
lcall
cwtl
mov
push
jp
pusha
jle
sub
mov
inc
aaa
into
add
les
add
test
push
fwait
daa
insl
add
pop
popa
mov
inc
mov
sbb
dec
sahf
push
jns
cmpsl
ljmp
pop
out
push
and
or
pop
jb
pop
xchg
push
mov
dec
aas
pop
int
adc
xchg
fsts
pop
sub
std
xchg
mov
cmp
mov
lods
in
fstl
jmp
bnd
jns
daa
adc
movsl
cmp
push
xor
cmp
ljmp
popf
push
jp
repz
in
xchg
fs
popf
dec
movsl
cli
add
cwtl
mov
je
out
push
cwtl
hlt
jno
push
fcoms
dec
sub
shll
xchg
cmp
outsl
inc
fdiv
xchg
or
and
mov
mov
sti
mov
pop
cwtl
xor
adc
fidivl
icebp
loopne
add
push
mov
push
arpl
or
xor
aam
or
xor
add
hlt
and
adc
push
mov
frndint
mov
mov
push
repnz
aas
sub
and
leave
jp
fcoms
ret
arpl
xor
mov
sub
lea
xor
xor
xchg
sub
push
mov
add
sbb
loope,pt
popf
jbe
stos
enter
jno
clc
xchg
sub
inc
adc
push
or
fcom
cltd
fwait
mov
jnp
xor
or
shlb
movb
out
push
inc
xor
fdivrs
popf
jmp
ret
test
cmp
arpl
push
adc
insb
push
mov
hlt
leave
imul
xchg
lea
out
mov
ret
in
out
icebp
cmc
xchg
out
push
sub
inc
xchg
nop
iret
dec
fnstsw
cld
sub
jmp
lahf
icebp
mov
sbb
dec
xchg
aaa
inc
pop
vpsubq
and
cmp
call
add
mov
stos
pop
push
sbb
mov
in
cmp
dec
ret
push
ljmp
adcb
adc
sbbl
cwtl
lahf
mov
cmpb
mov
movsl
dec
push
jp
inc
mov
pop
and
cmp
repz
daa
icebp
dec
mov
repz
sarb
bound
mov
add
pop
stos
or
push
les
cltd
lds
mov
data16
loope
std
std
stc
ret
adc
shlb
mov
dec
int3
out
sahf
fwait
mov
addl
jmp
sarb
mov
jns
xchg
mov
sub
sbb
fsqrt
das
mov
out
fcomps
cmpb
xor
or
or
jno
xchg
jmp
int3
jo
sti
data16
mov
aaa
dec
mov
sarl
push
or
pop
mov
mov
push
push
and
or
jb
in
lods
int3
daa
popa
jbe
push
xor
dec
lea
and
sbb
push
xchg
push
cs
int
and
es
and
sub
push
fisubs
push
jl
sub
xchg
insl
je
sbb
cmpsl
mov
cmpsl
inc
mov
fcoms
jns
jl
adc
scas
les
pusha
call
ja
rcl
les
lahf
mov
adc
mov
or
aaa
fstps
test
gs
xor
mov
adc
inc
adc
mov
mov
add
push
imul
sub
int
mov
pushf
adc
in
inc
jnp
jae
adc
out
ficoml
adc
loopne
hlt
inc
clc
or
dec
nop
daa
xor
push
xchg
adc
scas
stos
pushf
aaa
divb
mov
pusha
pop
nop
push
jecxz
test
movsl
cltd
popf
inc
test
addb
adc
push
shll
pop
adc
test
cmp
cmpsb
flds
addb
pusha
inc
mov
or
cwtl
adc
pop
xchg
push
jp
add
mov
mov
andl
movl
ret
adc
pop
push
movsb
xor
push
and
bound
test
iret
push
je
cmpsl
nop
cwtl
pop
ds
loop
xor
das
insb
imul
xchg
arpl
loopne
xchg
mov
add
xchg
cs
inc
dec
mov
shll
nop
aam
mov
push
sarl
cli
pop
je
mov
xchg
pop
inc
jno
sbb
cwtl
fldl2e
stos
lcall
dec
xor
mov
mov
sbb
in
cmp
and
fiadds
sub
or
inc
jno
stos
fsubrl
imul
dec
pushf
or
loopne
push
out
mov
pop
mov
rolb
cmpsl
dec
push
lcall
jno
ret
out
fstpl
stos
jno
dec
pop
negb
cs
sub
std
popa
xlat
jne
ret
mov
int3
mov
jno
mov
mov
leave
je
dec
mov
into
mov
leave
push
sbb
add
mov
fdivrs
cmp
insl
mov
push
pop
pop
mov
fs
cwtl
cli
push
xchg
xchg
test
push
fs
and
lods
cli
cmc
mov
xor
insl
fdivp
push
sti
stos
jp
inc
push
clc
sub
or
gs
push
lods
loop
inc
jbe
sahf
imul
cmc
cs
addl
pop
sub
mov
push
xor
add
xor
lret
fs
mov
loop
xlat
out
cmp
xor
mov
bound
and
cld
pop
repz
pop
xorb
mov
xrelease
enter
mov
les
in
out
mov
sbb
push
mov
dec
fcoml
arpl
cmp
xchg
pop
test
dec
xor
insb
pop
pop
mov
mov
xchg
sti
bound
std
xlat
pop
das
xor
out
lret
pop
test
push
int
jb
dec
cmp
lds
pop
lcall
aam
add
mov
insl
pop
popa
mov
inc
scas
xor
fwait
push
imul
sahf
pop
adc
sahf
ljmp
add
xchg
stc
incb
repnz
subb
mov
xchg
dec
in
sbb
leave
jl
inc
aam
jnp
and
lea
cmp
and
adc
cwtl
clc
adcb
adcb
sbb
icebp
or
jae
icebp
aad
add
pop
jge
inc
push
jge
fcoms
lcall
pop
loope
cmp
call
mov
push
out
dec
xchg
jae
cli
fisubrl
daa
scas
test
jp
lahf
stos
mov
aas
popf
inc
mov
in
les
lock
inc
jnp
lcall
repnz
inc
xchg
scas
nop
sbb
adc
out
pop
cmp
je
nop
aad
shrl
adc
sub
or
dec
loope
xchg
cmp
inc
push
dec
aaa
or
mov
pop
mov
mov
jb
cli
mov
mov
mov
lcall
cmp
dec
jp
push
jecxz
mov
push
imul
mov
xchg
inc
pushf
mov
sti
imul
sub
out
in
in
imul
cmp
sbb
pop
xchg
in
sarb
jmp
scas
dec
popa
jecxz
dec
pop
mov
push
outsb
roll
push
xlat
mov
pop
repz
adc
ret
rcrl
roll
push
sub
movhps
adc
jecxz
adc
or
outsb
push
mov
sbb
ds
jnp
ret
and
loope
shl
adc
in
mov
and
dec
add
jmp
or
pop
mov
addr16
and
push
cli
jae
jnp
cmp
xor
scas
xchg
test
js
pop
dec
mov
xor
aaa
aas
loope
xor
xorl
pop
sub
add
ficoml
push
bound
jb,pn
inc
scas
mov
sub
pop
mov
mov
fwait
mov
leave
cmp
xchg
subb
xor
inc
cs
xchg
call
cwtl
or
aam
lea
outsb
popf
add
aas
inc
subb
or
mov
xor
test
mov
add
fsubrs
mov
xchg
repz
push
es
mov
sti
sub
pop
jmp
or
jne
dec
test
lret
shrb
pop
popa
and
xchg
ror
test
cmc
push
pushf
aam
std
and
sbb
aam
int3
add
mov
iret
jmp
lret
sub
xor
sub
mov
jmp
imul
ljmp
repz
pop
xchg
or
jg
fidivrs
test
add
dec
pop
sbb
or
setl
js
cmp
sub
lea
fistps
loopne
sahf
js
fistps
cmp
es
xchg
mov
dec
mov
test
clc
cltd
mov
cltd
mov
test
addr16
ret
movsb
sbb
mov
push
sbb
jb
add
xor
pop
mov
xchg
mov
cwtl
adc
outsb
sbb
inc
leave
mov
aad
hlt
daa
dec
in
xchg
ljmp
mov
pop
scas
inc
nop
jle
jne
lahf
into
scas
or
scas
sub
adc
pop
adc
mov
das
mov
mov
icebp
std
adcl
inc
pop
xor
push
pop
mov
lds
repz
in
shrl
cld
jae
xchg
call
ja
jbe
xor
xchg
je
jp
push
xor
lcall
cli
das
aaa
imul
cs
mov
into
in
pop
lcall
fbld
ret
mov
pushf
adc
xchg
adc
or
sub
mov
mov
rolb
rorb
xchg
mov
je
cltd
inc
psubw
mov
pop
sbbb
leave
mov
sti
inc
repnz
ret
fstl
outsb
and
xchg
mov
jb
or
mov
fistps
fdivr
xor
sub
rcr
push
mov
cmp
sub
jmp
in
test
aaa
xor
insl
inc
pop
mov
push
push
jl
pop
adc
pop
lea
test
dec
push
mov
lds
repnz
mov
jns
ljmp
repz
mov
push
and
and
imul
sti
push
sahf
xchg
push
mov
ss
add
lods
mov
fnstcw
mov
or
lock
cmp
in
imul
orb
ljmp
jne,pn
icebp
in
insl
std
mov
in
rcr
xor
pushw
inc
mov
cmp
dec
out
lahf
sbb
dec
iretw
aas
fwait
mov
data16
add
subb
ret
dec
roll
clc
fdivrl
shrb
fs
enter
push
xor
call
lods
mov
adc
adc
addb
insl
out
leave
leave
dec
jae
fadds
adc
gs
rorl
repnz
jle
and
sub
lcall
bound
jp
js
imul
sub
xor
add
je
or
sbb
pop
mov
int
push
popa
pop
dec
mov
das
mov
dec
in
je
ret
pushf
roll
js
lcall
fidivrs
lret
pop
jno
test
cmp
ret
sub
fiadds
adc
push
nop
push
fnstsw
pop
loop
inc
or
adc
xchg
and
ret
mov
stc
clc
fwait
dec
dec
int3
pop
popa
int3
push
ss
ja
inc
call
into
insl
xchg
jl
ljmp
cwtl
int3
aad
cmp
in
or
adc
insl
add
insl
dec
or
pop
loope
xchg
xor
xchg
add
pop
jno
xlat
jge
mov
imul
mov
push
push
dec
mov
mov
ss
repz
push
in
rcl
pop
in
or
es
push
jo
inc
es
cmp
lods
xor
imul
jecxz
cs
lods
adc
dec
push
imul
loopne
arpl
clc
ja
jmp
lods
popf
and
add
bound
dec
adc
pushf
mov
test
jnp
mov
rolb
leave
aaa
adc
lcall
sub
out
sub
bound
mov
lret
jne
push
pop
vcvtsd2si
pop
add
push
mov
push
hlt
inc
rorb
sbb
xor
add
dec
lret
sub
test
push
xchg
dec
sbb
out
mov
aad
jge
fs
aad
sbb
push
mov
les
sub
je
cmc
lds
je
mov
nop
sbb
leave
pop
pop
inc
cmp
mov
rcll
aad
lods
mov
pop
xorb
js
sbb
js
scas
repz
ret
mov
popa
cld
mov
sbb
pop
daa
jns
xor
addl
lret
test
mov
daa
xor
push
push
cs
xchg
test
dec
and
lret
fs
stos
push
aaa
repz
stc
push
movsl
dec
movl
push
mov
dec
jno
pushf
or
cmp
movsb
loopne
push
arpl
jge
daa
fld
test
pop
out
or
mov
rcr
es
xchg
mov
xor
inc
inc
das
mov
scas
jg
jbe
cli
outsl
mov
dec
xchg
fsubrp
push
adc
pop
cwtl
dec
stc
mov
rcrb
data16
cmp
mov
idivl
in
lea
rsqrtps
jbe
jg
movsl
mov
inc
mov
addr16
fidivl
sub
sbb
add
cmpsb
mov
hlt
mov
adc
das
enter
push
dec
push
and
cmc
jae
add
repz
pop
hlt
jle
add
sbb
cmp
push
test
mov
aaa
sub
sub
cmc
xchg
les
loopne
ljmp
mov
cltd
xchg
xor
pushf
bound
mov
scas
sub
add
stos
pop
cmp
cwtl
push
cmp
fldcw
inc
xchg
adc
mov
loopne
in
jle
aad
mov
lds
pusha
enter
lock
jo
sub
or
mov
mov
jbe
push
inc
xchg
icebp
aaa
jbe
mov
cli
inc
push
data16
xor
sbb
es
arpl
jle
scas
mov
leave
pop
jge
dec
in
roll
das
add
or
xor
and
out
rorl
ret
fs
ret
cmp
xchg
jo
adc
sub
jne
cmp
jo
pop
sub
cs
outsl
popa
adc
stos
xchg
iret
xor
loop
aaa
pop
mov
and
sub
push
cmc
mov
test
pop
add
mov
scas
jae
fwait
pop
test
rcrl
mov
jg
xchg
dec
dec
push
mov
pusha
mov
out
jmp
dec
cmpl
and
push
in
sarl
in
popa
hlt
and
and
mov
push
fistpll
sub
daa
pop
iret
enter
jbe
sbb
mov
aas
out
repnz
or
and
lcall
stos
gs
adc
xchg
add
cld
notl
daa
aam
cli
iret
repnz
xlat
cmp
cli
add
pop
lea
out
scas
loope
adc
mov
rcrl
rorl
mov
fdivrl
and
fimull
push
std
cmp
xor
xlat
test
sbb
insb
stos
test
dec
xchg
in
jle
lods
push
pop
in
push
insb
push
lahf
or
in
das
and
jp
xchg
lods
add
or
cmp
pop
inc
movsb
adcl
push
xchg
push
addl
fcmovnbe
adc
jns
mov
inc
inc
dec
xchg
cli
fstpt
ret
mov
paddusb
mov
and
cmp
jp
lods
and
and
hlt
mov
jnp
fnstsw
dec
les
pop
test
inc
mov
cmp
sub
ljmp
push
mov
mov
push
sbb
mov
mov
popf
and
add
xor
xor
pop
mov
sub
lret
add
fists
jnp
mov
lret
mov
mov
or
lahf
sbb
inc
inc
lods
dec
fsubp
sub
mov
dec
test
fistl
jo
testl
jbe
addr16
decb
js
mov
cmc
and
es
jmp
lods
arpl
cmp
or
gs
insb
mov
es
es
daa
cmpsl
lret
dec
and
dec
movsb
hlt
inc
cmc
dec
mov
mov
test
std
repnz
ret
and
enter
sbb
test
lcall
addr16
arpl
fistpll
mov
imul
loope
xchg
loope
xchg
push
aad
sub
jp
inc
cli
jns
jecxz
cs
mov
sti
jnp
pop
test
sbb
lea
js
jbe
cld
jmp
out
jb
test
roll
dec
cmp
scas
mov
and
xchg
or
out
lcall
adc
lret
dec
cmp
sbb
dec
ja
nop
xchg
rorb
xchg
bound
repnz
scas
xchg
xchg
push
adc
and
in
in
pop
xor
add
lods
repz
in
fcoml
jae
xchg
fcomps
nop
cmp
rorb
test
das
mov
push
or
xchg
hlt
ficomps
xor
xor
lods
dec
mov
pop
shlb
xchg
push
inc
pop
and
mov
out
int
clc
and
push
mov
cli
mov
fsubs
mull
fcom
add
in
adc
push
push
add
pusha
ljmp
mov
jecxz
xor
sbb
jle
jge
mov
hlt
rorl
mov
xor
jo
mov
daa
dec
xchg
mov
jbe
stos
jb
cmp
in
xor
ljmp
lods
lcall
inc
aad
and
jle
dec
enter
pop
jl
lret
int3
and
popa
popa
sub
pusha
popf
add
pop
xor
cmpsl
icebp
sub
stos
pop
pop
shll
mov
lods
dec
inc
iret
adcb
or
sub
pop
popf
iret
cli
dec
jg
pusha
ret
add
sahf
mul
sbb
dec
pop
in
lret
scas
or
jnp
xor
pop
mov
mov
xor
dec
in
test
pop
sarb
cmp
mov
push
or
rol
jl
stc
adc
add
mov
cmp
mov
inc
cmp
mov
outsl
popa
daa
inc
daa
xchg
insl
mov
jnp
mov
mov
int
int
cmpsb
add
sbb
xchg
ret
js
mull
push
xor
push
mov
add
xor
ja
arpl
jecxz
ret
xor
push
pop
and
jnp
out
shll
jmp
nop
dec
cmp
int
mov
mov
aad
shrl
xor
sub
xchg
sbb
mov
adc
gs
daa
xchg
cld
mov
shl
mov
nop
iret
cmpsb
iret
mov
pop
shll
or
or
iret
mov
jp
rorb
aas
movsl
scas
repz
and
dec
gs
int3
or
arpl
pop
mov
ds
pop
and
mov
cmp
or
dec
and
jae
mov
or
xor
fildl
lea
clc
imul
in
xchg
icebp
sbb
pop
xchg
and
jmp
add
xchg
into
in
adc
push
repz
sub
adcl
cltd
xchg
adc
repnz
push
ficomps
repz
les
xchg
leave
mov
nop
out
popa
push
sarl
test
int
mov
fnstenv
addb
mov
mov
lret
pop
stos
mov
pop
mov
or
xor
std
xchg
imulb
xlat
pop
cmp
or
pop
dec
jl
and
sub
and
xor
xchg
pop
push
movsb
in
aad
adcl
data16
adc
shll
test
iret
inc
daa
stc
sub
mov
ret
inc
sbb
lods
xchg
add
pusha
mov
mul
sahf
adcb
test
xchg
imul
mov
pop
pusha
pusha
and
lea
clc
xchg
sub
dec
push
push
pop
jnp
stos
xchg
bound
cs
sub
push
pop
iret
jo
add
sub
mov
ljmp
push
lahf
out
test
xor
jp
jg
cmp
mov
mulb
imul
arpl
cmp
xor
sbb
data16
cmp
filds
fwait
out
mov
mov
and
pop
test
jge
addl
sub
adc
int
and
stc
adc
cmc
and
jns
xor
push
insb
mov
pop
sub
pop
jns
or
xchg
popa
stos
xor
cld
xchg
inc
shlb
cwtl
daa
in
inc
cwtl
pop
inc
repz
adc
rorb
mov
ljmp
sbb
loope
test
cwtl
cmp
mov
cmp
insb
cmpsl
outsl
sbb
dec
jae
imul
push
push
nop
lods
pop
adc
insb
push
xchg
add
dec
pop
jne
insb
test
outsl
and
or
xchg
das
sti
ljmp
mov
popa
xchg
test
jne
jl
fdivl
lcall
lods
jno
popa
test
mov
test
popf
popa
jno
mov
sub
bound
call
or
jns
arpl
les
test
push
das
push
adc
rorb
fldl
call
jae
sbbb
fimull
and
adcb
imul
add
mov
pop
loope
add
rcr
mov
or
fwait
or
inc
push
lods
fs
inc
sbb
jg
inc
adc
sbb
ret
pop
jns
repnz
and
lret
nop
out
stc
inc
jmp
xchg
dec
mov
and
jge
add
sub
cs
jmp
iret
adc
sbb
push
cmp
pop
cmp
imul
scas
pushf
dec
mov
lock
push
jne
mov
pop
mov
out
push
xchg
cmpsb
xor
mov
xchg
xor
das
ss
push
divb
jmp
dec
dec
ret
cmpsl
and
push
outsb
jbe
rcll
jle
pop
dec
rcl
loope
imul
ds
xor
addr16
rorl
bound
ror
mov
fisubrs
jae
mov
movsl
jb
pop
daa
js
push
xlat
push
mov
push
mov
cltd
push
aad
insb
and
test
push
enter
nop
mov
loopne
fimuls
cmp
mov
mov
out
dec
outsl
adc
xlat
push
sti
enter
cmp
mov
jbe
pop
cmp
jg
inc
cs
mov
add
fcompl
add
cmpsl
sbbb
mov
mov
popf
adc
inc
lcall
sbb
into
mov
fisubrs
out
iret
and
sub
mov
dec
xchg
int
les
xchg
mov
push
neg
xor
sbb
adc
in
scas
not
mov
fcomip
xchg
mov
flds
jno
test
push
cmp
les
clc
lret
push
sarb
pop
loop
inc
inc
or
loop
sti
mov
mov
mov
add
add
inc
jmp
insl
cmp
lret
icebp
inc
pop
idivl
lock
es
aaa
mov
add
mov
mov
or
adc
shlb
aas
jle
pop
jg
push
fcompl
sbb
jnp
xchg
fdiv
ret
movsb
pop
jo
test
add
jecxz
addl
cs
xchg
cli
cmp
adc
add
aad
push
xlat
test
gs
loop
jae
gs
push
sub
mov
push
mov
xchg
lds
sbb
adc
je
xchg
mov
pop
xchg
and
xor
dec
lods
xor
xor
cmpsb
dec
outsl
and
dec
xlat
cltd
xchg
pop
or
jne
test
add
mov
inc
jne
mov
cmp
inc
addr16
test
xchg
sub
mov
and
test
stos
ret
fdivs
fcmovb
inc
repz
in
jo
mov
lea
jle
in
movntps
push
push
add
xor
sub
jno
fistpl
dec
sbb
repz
add
loop
jbe
sti
bound
and
es
add
icebp
push
cwtl
push
popa
aam
in
pop
mov
imul
mov
adc
pop
out
pop
imul
lods
mov
pop
inc
mov
in
adc
dec
mov
aad
xchg
cmpsb
inc
pop
inc
inc
aaa
std
sub
sar
orl
loopne
lahf
xor
jno
ss
add
xor
dec
pop
ss
das
xor
cmpsb
jg
sarb
pop
add
dec
mov
lcall
mov
in
sub
mov
es
mov
lods
inc
sysret
arpl
int
dec
xor
xchg
ds
inc
inc
or
aaa
jae
iret
inc
test
loopne
adc
push
rcrl
sub
lahf
imul
lds
ret
push
in
fwait
and
enter
mov
inc
fcom
push
mov
popa
shlb
pushf
je
test
push
mov
cmpb
out
xchg
loop
popl
sbb
mov
sbb
jl
repnz
mov
aas
sbb
adcl
adc
push
mov
addb
jg
lret
push
sub
mov
int
outsl
sbbb
test
mov
inc
sbb
adc
into
lock
stc
outsb
leave
movsl
add
jno
cmp
sti
mov
lock
nop
gs
or
push
aaa
out
dec
stos
mov
mov
out
enter
and
mov
cwtl
stos
mov
sbb
lret
outsl
subb
xor
mov
pushl
inc
mov
sbb
dec
xor
call
or
mov
mov
add
fisttps
sbbb
adc
pop
out
es
ja
repz
dec
es
jge
jle
sbb
inc
xchg
push
fldenv
bound
iret
xlat
mov
mov
sbbb
leave
in
pop
mov
inc
xchg
push
add
ja
test
fs
sub
inc
lock
lcall
loope
ja
dec
je
cmp
daa
out
or
call
stos
jo
xor
push
xchg
pop
pop
mov
mov
push
ljmp
sub
dec
pop
fld1
pop
dec
sbb
push
popa
jnp
movsb
pop
fcomi
mulb
adc
or
out
emms
adc
pop
add
iret
xchg
gs
fstps
inc
mov
mov
inc
test
push
insb
cmp
xor
and
pop
inc
int
sti
mov
pop
leave
mov
cld
inc
call
ljmp
dec
hlt
movsb
in
test
ret
sti
repz
inc
mov
and
pop
jmp
scas
jns
pop
pop
push
jl
pushf
mov
pop
jmp
push
cmpsb
and
and
cmpsb
jb
xlat
mov
pop
je
sti
mov
mov
pop
jns
xor
sbb
mov
stos
test
jp
or
insb
xchg
out
xor
dec
add
je
stos
dec
loopne
lahf
out
sbb
in
outsb
out
and
mov
fsubrs
push
lret
movl
sub
lods
xor
inc
mov
mov
pop
stos
mov
mov
pop
mov
push
fldcw
das
cmp
or
jge
adcb
or
mov
lret
stos
jb
xchg
js
push
ja
arpl
cmc
xchg
pop
aaa
cmp
push
dec
inc
test
cmp
lock
mov
sahf
add
add
push
inc
loopne
cltd
xlat
test
repz
adc
mov
shr
loope
dec
cmp
xor
add
fnstcw
jno
add
loopne
movsl
stc
add
cmpsl
repz
pop
add
push
mul
xchg
mov
xor
popa
push
pop
leave
and
test
fbstp
pop
mov
call
ffree
xor
les
icebp
stos
cmp
imul
dec
mov
pop
sub
cmp
movsl
push
mov
out
in
mov
jmp
imul
pop
lods
in
out
nop
xorl
push
dec
push
ja
std
xchg
inc
xchg
or
xchg
in
jae
jnp
iret
stos
mov
mov
jne
shrl
or
pop
dec
xchg
ljmp
sub
mov
push
jmp
jecxz
add
mov
popa
pop
and
andb
addr16
jle
push
dec
sti
mov
jl
leave
sub
or
dec
or
dec
pop
cmp
pop
int
pop
rorb
fcmovne
jge
lods
mov
frstor
inc
sbb
add
mov
fldl2t
adc
lock
repnz
hlt
sbbb
movsb
testb
sub
cs
and
mov
jle
dec
loope
shrb
aad
dec
insb
cmpl
mov
inc
or
lods
push
dec
xor
lds
push
push
mov
and
add
daa
aam
sti
repz
lret
mov
sbb
jne
rcr
add
push
mov
cltd
pusha
cmp
je
jge
or
add
mov
iret
in
shrl
push
lods
in
xlat
ljmp
lods
bound
hlt
or
mov
imul
sub
test
cld
imul
pop
loope
neg
push
add
rorb
bound
push
push
aas
sub
add
push
imul
jl
or
xchg
dec
pop
je
leave
mov
mov
inc
inc
lods
adc
faddp
xchg
shr
out
sub
sbb
jno
clc
jae
adc
jl
call
or
cmp
sahf
mov
scas
lods
or
push
dec
ret
sarl
inc
pop
repnz
popa
in
subb
mov
push
shr
sub
int
daa
sahf
insb
pop
imul
push
cmp
mul
pop
iret
inc
test
pop
test
push
mov
insb
cmpsl
mov
push
and
xchg
inc
pop
test
cmp
dec
sub
add
or
pop
fnstcw
pop
pop
sub
ret
into
psraw
push
movb
sahf
das
das
sbb
or
dec
sbb
cmc
ficomps
push
call
clc
mov
mov
xchg
sub
inc
xor
dec
sub
mov
rcrl
inc
xor
jae
dec
push
push
jno
fdivl
ljmp
jno
mov
aam
addl
cmp
xchg
mov
mov
fs
imul
push
fwait
ljmp
movsl
push
jecxz
jecxz
or
hlt
xchg
mov
push
mov
out
ret
test
aas
jnp
shrb
mov
xor
bound
push
push
dec
rol
pop
xchg
fs
addr16
fs
push
out
xorl
movsl
cwtl
sti
cld
pop
das
push
fchs
movsl
js
xchg
xchg
cmpsb
add
stos
lock
fwait
mov
push
xor
mov
sub
test
pop
cli
pop
pop
lahf
lock
sbb
mov
call
lahf
mov
sub
push
hlt
lcall
mov
daa
or
fbstp
loope
mov
arpl
mov
ljmp
xchg
sbb
nop
inc
push
insl
cmp
pop
mul
or
stos
arpl
cmpsl
setb
adc
xor
cmp
pop
insl
dec
int3
xor
lret
push
cld
hlt
sub
xchg
loope
out
ss
test
shll
xchg
outsl
adc
lret
repnz
push
pop
jno
pusha
sub
xchg
sahf
rol
out
inc
popa
loopne
push
test
insl
je,pt
jl
pop
and
cmp
andl
cmc
mov
sbb
lcall
xchg
adc
cmpsb
andb
add
or
sbb
es
imul
outsb
mov
lahf
imul
mov
shrd
sub
jns
adc
gs
xor
push
fadds
xchg
cli
dec
or
push
fidivrl
daa
ds
sbb
outsb
dec
pop
inc
xchg
cwtl
addb
or
push
insb
or
mov
lea
fwait
pop
cli
pop
sbb
cs
pop
sbb
xchg
add
xchg
test
dec
leave
push
aad
mov
scas
add
xchg
shlb
jp
mov
les
das
mov
pop
push
idivl
fs
jnp
and
mov
inc
adc
pop
xchg
std
je
out
arpl
mov
ja
and
daa
mov
fists
adc
xor
pushf
or
and
mov
dec
mov
adc
das
sub
or
clc
test
ljmp
pop
pop
mov
push
loopne
shlb
ret
dec
pop
xor
mov
jnp
jns
mov
mov
das
mov
subl
mov
int3
shl
fnstenv
mov
leave
sahf
mov
scas
mov
insl
icebp
adc
pop
adc
mov
ljmp
xor
add
dec
test
xchg
cs
in
mov
inc
ljmp
cmpsl
rclb
mov
leave
push
iret
negb
outsl
sub
mov
or
dec
mov
xorl
ljmp
cmp
dec
pop
or
xor
mov
inc
sub
pop
loope
arpl
xchg
mov
jg
cmp
jbe
cli
sbb
xor
into
imul
mov
mov
mov
jmp
add
sub
xchg
in
cmp
les
mov
dec
leave
jnp
and
pop
cmp
movsl
stc
shr
adc
sub
subl
cmp
pop
adc
jnp
cwtl
rorl
popa
add
jns
cmp
mov
and
ss
outsl
in
xor
cmpsb
imul
or
test
add
ds
int
inc
and
mov
sahf
jne
or
pushf
or
sbb
cltd
imul
sahf
ljmp
shl
sub
xlat
adc
mov
pop
loop
xchg
lahf
cmc
mov
or
jb
or
fs
test
std
jnp
leave
stc
cmp
push
and
and
popa
dec
inc
xchg
push
xchg
out
xchg
jmp
inc
jl
cmpl
mov
add
rcl
arpl
xlat
nop
lret
lahf
and
mov
mov
leave
cli
jbe
inc
jle
adc
fldcw
mov
push
adc
sti
pop
cmp
mov
or
aas
push
inc
jl
and
adc
call
pop
pop
dec
ror
push
xor
loope
push
es
sub
in
adc
aaa
add
aaa
pop
fisttps
mov
lret
push
mov
lods
xchg
lcall
mov
pop
loop
xlat
aas
push
iret
cltd
mov
sarb
addr16
push
or
jne
add
push
shrb
hlt
pop
sbb
es
fisubrs
pop
add
ds
cmp
cmpsl
mov
cmp
dec
dec
aad
mov
or
lods
jge
jb
pusha
adc
pop
adc
xchg
xlat
inc
cmp
sbb
fidivs
pop
mov
cmp
mov
out
jmp
xlat
inc
add
dec
push
in
pusha
mov
mov
cmpl
aas
xchg
lods
inc
pop
loopne
sub
fwait
loop
mulb
out
sub
lahf
inc
mov
out
xchg
dec
stos
bound
loop
ret
ljmp
adcl
jl
push
in
xlat
mov
out
jle
xchg
xor
test
fs
ljmp
and
jne
les
mov
enter
lods
mov
inc
popa
stc
xchg
nop
pop
in
xor
test
push
mov
mov
mov
movsb
sbb
hlt
mov
mov
lock
xchg
or
xchg
dec
push
in
in
jg
mov
sti
sti
fdivrl
push
adc
jae
pusha
aas
inc
jge
mov
movsl
ret
fldt
rcrb
sub
jne
or
addb
adc
icebp
or
scas
aad
jg
jae
sub
jge
lret
dec
nop
mov
xchg
or
loopne
idivl
cmp
and
hlt
enter
cld
js
push
aam
mov
test
xchg
mov
movsl
jne
cmpsl
pop
out
push
lods
addb
loope
jns
imul
xor
and
in
lcall
xchg
pop
add
ret
mov
rcr
pop
push
lea
push
mov
lea
ljmp
push
rclb
test
cmp
jne
hlt
js
jb
lahf
lret
dec
cmp
loop
mov
shll
pop
shll
inc
into
mov
lds
mov
adc
aam
cmp
outsl
std
pop
push
xchg
pusha
mov
jb,pt
out
mov
mov
dec
and
aaa
cmpsb
inc
sahf
mov
and
scas
adc
ja
xor
jo
in
sbb
mov
mov
mov
xorl
cmp
sbb
rsm
dec
cmp
and
insb
add
mov
xor
dec
sub
or
add
xor
test
pop
push
mov
push
dec
jl
dec
fimuls
cmp
test
dec
add
and
jp
fstl
dec
pop
int3
pop
cld
push
pop
inc
popa
mov
int3
add
cmp
inc
stc
sub
hlt
je
scas
jge
daa
aaa
and
sbb
in
pop
hlt
mov
clc
cmp
dec
rcl
lock
push
popf
mov
insl
in
js
orb
out
add
adc
jle
adc
ljmp
or
push
rorl
pop
repz
js
xchg
push
pop
es
pop
inc
pop
dec
testb
cmp
mov
adc
xchg
or
jae
jae
mov
test
rcrl
cmp
xchg
pop
rclb
rorb
cld
lock
ja
push
add
sub
jnp
mov
xchg
mov
push
das
dec
cmpsb
mov
mov
xlat
fldenv
daa
push
movsb
cltd
jbe
out
in
cmp
flds
dec
inc
test
movsl
or
ja
out
outsb
inc
ror
cwtl
call
mov
inc
imul
lock
jo
mov
pushf
movsl
sbb
scas
mov
lret
andb
pop
enter
sub
pop
xchg
int
mov
into
xchg
ret
jnp
adc
sbb
xchg
mov
and
jecxz
les
outsl
loopne
cmp
jbe
xor
adc
adc
sbb
jl
mov
daa
jno
add
popf
push
sub
and
insl
adc
sahf
jno
mov
xchg
pop
std
je
mov
out
into
xchg
bound
inc
test
dec
mov
cmp
sbb
or
push
push
mov
repz
adc
scas
sub
js
jae
adc
sub
lods
out
stc
cli
ret
or
jp
mov
add
mov
bnd
inc
out
mov
outsl
jecxz
movsb
mov
push
dec
fwait
jg
mov
jns
fsub
ljmp
xor
xchg
xchg
hlt
sub
int
call
ficoml
pusha
mov
jbe
std
stc
mov
cmpsb
push
mov
jmp
mov
insb
mov
jmp
scas
lcall
das
aaa
pop
cmp
lds
cli
jne
movsb
push
pop
or
push
sub
sub
scas
stos
pop
jo
xchg
jb
stos
pusha
int3
mov
std
sbbl
push
stos
bound
or
clc
sti
outsl
js
jnp
xchg
int3
xor
mov
je
inc
jbe
ds
mov
jmp
lea
aad
mov
bnd
dec
mov
mov
xchg
popa
mov
and
into
mov
fs
sbb
mov
mov
lods
out
scas
cmp
pop
in
scas
ret
mov
int
mov
out
adc
fdivrl
jmp
inc
movsb
xchg
cmpsb
ljmp
movsb
adc
jne
popf
sbbl
mov
syscall
cltd
sbb
add
pop
mov
jp
jne
mov
pop
shrb
icebp
addr16
into
fldenv
sub
jmp
jl
or
jg
shr
add
adc
imul
mov
pop
adcl
sub
lahf
push
or
ljmp
shlb
loopne
scas
in
jb
mov
mov
pusha
cmp
pop
jl
inc
jg
cmp
jb
out
arpl
stos
or
pop
jle
push
inc
xchg
adc
fwait
loopne,pn
push
es
xor
xchg
mov
popf
out
dec
nop
add
je
pop
mov
loop
in
stc
mov
imul
aam
popf
fdiv
mov
outsb
sub
int
les
jae
inc
imul
jo
dec
xchg
out
popa
cmp
mov
fidivrs
out
es
adc
pop
xorb
add
pop
fisubrl
xor
lahf
jmp
and
xor
pop
inc
xor
add
int
sub
pushf
clc
mov
mov
xchg
and
inc
xchg
sbb
popf
cmp
or
int
push
or
and
lret
xchg
adc
inc
xor
cmp
adc
pop
rorl
std
clc
cmp
mov
pop
dec
cmpb
fsubrl
push
add
in
xchg
xor
jns
inc
loop
lea
sub
scas
mov
xchg
stc
mov
pop
scas
rol
mov
loope
repz
sbb
mov
insb
into
rcr
andb
add
xor
push
xor
xor
fdivrl
fwait
rorb
push
mov
mov
mov
push
pop
xchg
loope
mov
mov
flds
cmpb
scas
test
movsl
dec
push
inc
push
add
loop
sbb
arpl
pop
jle
fisttps
sub
jbe
pop
mov
cltd
mov
out
arpl
xor
bound
dec
dec
pop
rcll
popa
dec
jnp
mov
xor
rcrl
mov
jle
int
mov
movsb
loop
lret
jb
pusha
fsubr
jp
stos
stos
aad
mov
push
nop
repz
xchg
mov
dec
imul
les
inc
les
push
cmpsl
xchg
pop
push
sub
sub
jge
stos
mov
imul
mov
sub
jmp
fidivl
pop
ret
loopne
stc
inc
mov
xor
mov
add
pop
mov
mov
in
inc
mov
push
sbb
pusha
in
ss
outsl
ljmp
inc
xchg
adc
xor
sarb
jl
iret
add
pop
divb
daa
inc
or
out
jge
mov
aam
cmp
adc
adc
add
insl
xchg
or
sti
xchg
and
mov
sub
jg
mov
shrl
lret
bound
mov
arpl
mov
hlt
cmp
push
fbstp
pop
sub
scas
out
adc
and
jb
mov
leave
push
dec
je
lret
or
mov
testl
xchg
ret
jle
sbb
data16
dec
mov
cmp
jb
cmp
dec
jmp
xor
xor
idivl
sub
imul
gs
push
xor
sbb
sbb
push
or
inc
inc
popa
sahf
idiv
add
add
bound
jns
push
xlat
push
inc
inc
sub
mov
dec
cmp
or
inc
adc
mov
or
mov
xchg
sahf
add
rcrl
outsb
xchg
sahf
mov
mov
fcmovbe
inc
outsb
sbb
outsb
pop
dec
in
pop
sub
push
add
clc
pop
rcl
fisttpll
push
daa
adc
mov
pop
enter
leave
mov
sbb
test
jne
pushf
test
mov
dec
or
pop
adc
jnp
shrl
mov
and
repz
outsl
pop
or
ret
sbb
cli
add
jno
call
fildl
ret
push
xchg
fistps
test
stos
test
and
test
sbbl
ja
in
sbb
inc
mov
dec
adcb
and
sti
cmc
pop
test
repnz
out
scas
and
cld
pop
mov
mov
in
xor
xchg
loopne
repz
std
mov
into
out
or
leave
adc
xchg
lret
leave
inc
dec
pop
aaa
leave
pop
test
mov
push
cs
or
gs
mov
push
scas
inc
pop
push
in
lock
iret
sbb
dec
sarb
jp
int3
and
pop
cwtl
sarb
inc
icebp
adc
sahf
lret
lods
scas
out
in
pop
mov
bound
add
jb
out
repnz
daa
push
inc
mov
dec
movsl
lock
pop
inc
mov
out
nop
inc
mov
addb
mov
push
out
xchg
push
mov
push
mov
es
sbbb
pushf
xchg
add
test
mov
xor
jne
cmpsb
in
imul
mov
inc
aaa
movsb
xor
out
ja
test
jle
xchg
add
mov
add
cmp
movsb
adc
mov
push
or
lret
rorl
andl
ret
in
test
lods
inc
sti
inc
daa
addr16
push
xchg
lret
pop
shrb
mov
xchg
cltd
ja
test
sahf
cwtl
and
jae
int3
aas
pusha
inc
push
pushf
lcall
rcl
jne
adc
inc
shlb
andb
je
or
sub
or
rcr
pop
pop
aam
call
and
fst
dec
push
add
push
dec
enter
icebp
and
mov
scas
shl
mov
mov
in
jmp
cmp
negb
cmp
pushf
xor
cmpsb
pop
pop
aad
add
push
cmc
inc
jge
lods
inc
pop
add
and
loopne
pop
jl
jbe
fldt
pop
fnstsw
in
out
aam
mov
sti
mov
in
mulb
fidivrs
in
xor
movsl
mov
sti
lock
xlat
lret
sahf
les
jmp
inc
mov
out
repnz
pop
jp
dec
rcr
mov
and
mov
mov
mov
stc
lret
adc
cmp
xchg
imul
shll
ljmp
dec
sub
cltd
push
cmpsl
add
cld
jno
pop
and
stc
xor
pusha
add
xorps
adcl
adc
outsb
and
popa
clc
and
sti
pop
mov
out
fiadds
aad
mov
inc
and
lea
std
push
xor
outsl
adc
cmp
cld
ss
mov
inc
push
add
stos
bound
xchg
into
mov
push
outsb
aam
test
add
jbe
mov
xchg
popa
mov
out
lcall
and
cmp
das
rorl
jle
sarb
sti
sub
push
xchg
inc
movsb
es
out
icebp
fwait
jb
movsb
xchg
scas
inc
xor
fmull
pop
aad
xorb
es
jecxz
out
xorb
outsb
pop
push
outsb
je
jb
out
ret
ljmp
repz
es
cmp
sub
cli
test
sub
cmp
sbb
enter
inc
popf
imul
mov
cmpsl
push
jmp
outsl
cmp
or
mov
test
dec
sub
push
add
clc
mov
add
dec
int3
les
jne
in
lahf
mov
or
jbe
ret
sub
and
and
testl
or
xchg
sub
xchg
mov
pusha
rclb
in
push
ror
mov
sbb
sub
repz
cmp
pop
cmc
jno
mov
mov
mov
lock
lods
inc
mov
cmpsl
aad
xchg
in
sub
dec
jl
in
dec
in
ret
loopne
cmp
mov
add
daa
jg
inc
jbe
and
jg
pop
ja
cwtl
in
mov
adc
xchg
fwait
cld
test
aad
pop
mov
mov
out
mov
xor
cltd
or
push
ds
data16
pop
leavew
roll
sub
dec
pusha
ss
mov
call
mov
add
jl
sbb
popf
stos
das
roll
sbb
mov
das
cld
jg
xor
mov
xchg
push
lahf
cmpsl
jl
es
fwait
push
call
pop
cli
mov
xor
dec
cmp
not
inc
int3
cmp
ret
cs
aas
dec
adcb
pop
outsb
into
lcall
fidivrl
pop
leave
jb
aaa
jg
enter
test
jnp
pop
xchg
gs
sbb
dec
outsb
adc
out
sbb
stos
push
fwait
jnp
sbb
ds
push
hlt
pop
jmp
lcall
int3
adc
out
daa
addb
xor
dec
xchg
test
jae
xchg
xchg
es
stc
into
arpl
movsb
mov
addr16
cs
aaa
push
pop
arpl
jb
imul
xorl
loop
andb
fisubrl
sbb
mov
es
pop
lods
aaa
out
sbb
call
mov
mov
loopne
movsl
int
xor
mov
jecxz
dec
setl
dec
sub
or
jae
loopne
fwait
or
mov
and
inc
xchg
clc
pop
into
fisubs
les
xor
fwait
sub
mov
in
ds
cmp
push
ss
pusha
ret
jne
clc
incb
lret
enter
and
jno
loop
ss
inc
dec
mov
stos
or
jne
xchg
cmp
call
loope
jmp
stos
jg
sti
xor
fsubs
jecxz
cld
out
mov
jmp
sbb
mov
clc
mov
xchg
aad
les
imul
add
mov
jnp
sub
jmp
sbb
in
es
jg
and
mov
add
hlt
pop
dec
jo
jg
rorl
rcl
and
and
jae
ds
pop
pop
sub
xchg
xor
cltd
pop
data16
adc
movsb
jo
inc
xchg
mov
lret
add
popl
push
add
mov
les
push
adcl
mov
push
cmp
mov
adc
push
push
pop
mov
inc
das
lret
fdivs
mov
cmp
in
scas
inc
lret
and
cwtl
and
pop
jp
insl
stos
push
sub
mov
sub
pop
or
xchg
push
js
in
sub
out
loopne
adc
or
imul
cmp
cli
int3
fstpt
sbb
sub
push
mov
jne
xlat
andl
shll
dec
imul
add
sahf
jo
dec
add
push
sub
sbb
jl
movsl
jmp
dec
dec
cwtl
or
out
sub
xchg
mov
add
sbb
dec
ss
fwait
jno
and
add
icebp
and
mov
mov
push
cltd
jmp
sbb
int3
add
stos
lret
pop
xor
dec
or
adc
mov
or
xchg
lods
mov
iret
fcoms
ds
rorl
dec
fsubs
sysexit
mov
loope
mov
js
lcall
pop
cs
xchg
pop
dec
cs
add
adc
or
out
scas
jmp
pop
jge
and
mov
mov
pop
call
jp
test
fmull
mov
cmp
aad
dec
lock
xor
nop
push
inc
mov
cs
push
sbb
inc
ret
xchg
lret
rcll
fistpll
sbb
dec
and
je
mov
xchg
mov
ds
das
sbb
imul
hlt
cltd
jns
pop
loop
or
fisubl
push
fidivl
insb
sub
aas
das
dec
lahf
aas
add
fldt
lds
ret
imul
je
push
out
iret
xor
gs
pop
fisttpll
jle
and
adc
pop
jbe
popa
inc
fsubl
mov
outsb
sub
mov
ss
lret
pop
jecxz
aas
cmp
pmulhuw
pop
jno
jne
mov
jecxz
sbb
mov
jge
lock
sub
lods
out
cmp
neg
and
sar
dec
and
testb
cmp
in
movsb
scas
push
scas
fbstp
push
je
pop
sub
mov
sbb
mov
aad
subl
jbe
lcall
imul
mov
pop
imul
dec
stos
dec
sbb
cltd
test
mov
stos
and
and
add
lahf
xchg
das
sbb
mov
sar
push
pop
cvtdq2ps
xor
mov
jmp
ds
loop
xor
mov
xchg
or
sub
cmp
call
xor
cmp
and
or
ds
nop
pop
jecxz
push
sti
and
adc
xor
sub
xchg
imul
add
scas
in
push
rolb
xchg
jnp
out
cmc
inc
adc
insb
push
push
int3
aas
movsl
rcr
sub
jnp
sti
pop
mov
xchg
outsb
lret
xor
adcl
mov
jmp
sbb
sahf
jns,pn
movsl
adc
nop
repnz
pop
cmp
adc
filds
bound
fwait
xchg
std
jnp
test
mov
mov
movsl
insb
adc
sbb
lods
pop
ret
bnd
outsl
xchg
pop
xor
cld
jnp
out
xor
mov
rol
pop
cmp
mov
ja
dec
arpl
adc
xchg
hlt
fsubrs
out
cmp
xchg
sub
mov
scas
cmp
icebp
inc
es
push
cs
mov
in
push
addr16
mov
mov
pop
pop
clc
aad
sub
mov
mov
jle
test
cmp
inc
xor
aad
mov
xor
fisubrl
ds
pop
jno
cmpsl
scas
imul
subps
xor
lock
js
test
mov
and
and
loopne
repnz
in
xchg
jmp
mov
push
xchg
mov
les
in
jp
pop
pop
xchg
stc
push
jge
sbb
jg
mov
xor
dec
push
aaa
jge
addb
sti
mov
push
jns
mov
jg
sub
out
pop
sbb
add
cwtl
mov
nop
outsl
push
push
shl
mov
sarb
das
push
inc
fbld
addr16
or
add
pop
adc
pop
and
mov
adc
push
fs
mov
mov
jnp
insb
sbbl
inc
mov
jne
push
cwtl
add
fwait
push
dec
mov
je
fsubrs
pop
loop
testb
xlat
xchg
cmpsl
xchg
cmp
mov
mov
or
inc
cmp
rclb
ja
mov
mov
adc
jo
in
lods
pushf
mov
jecxz
jmp
fisubs
or
mov
adc
mov
dec
add
aad
daa
xchg
neg
addr16
jo
sub
or
mov
into
sbb
cwtl
loope
iret
orb
pop
xor
cmp
sub
lret
lds
push
sub
lret
sub
mov
sbb
cwtl
xchg
mov
test
mov
inc
scas
lds
sbb
int
loope
cmp
cli
jmp
sti
mov
shrb
sub
std
je
inc
push
js
sarb
rorl
inc
inc
adc
ret
jae
cwtl
fs
into
sarl
mov
mov
out
js
push
lock
cmp
std
lods
xchg
push
cltd
fdivrs
cmp
add
and
fiaddl
test
push
push
outsl
xor
test
mov
mov
scas
pop
mov
mov
into
and
lret
dec
hlt
bound
and
sahf
fcomps
xchg
sub
or
aaa
jnp
jbe
les
jge
xchg
mulb
or
pusha
mov
jmp
pusha
push
leave
xchg
xlat
lock
das
sbb
out
mov
jg
xchg
imul
inc
sub
mov
enter
and
mov
sahf
mov
add
mov
sarb
jae
lock
movb
push
icebp
imul
cmp
cli
jbe
or
das
mov
ror
rorl
cmpsb
popa
popf
cmpsl
ds
mov
into
lret
xchg
push
push
jb
sbb
jmp
add
inc
js
sub
test
stc
iret
test
sub
movsb
mov
mov
xchg
mov
or
orl
js
sbb
jecxz
test
or
cs
xchg
mov
xor
jmp
pop
push
mov
loopne
jae
test
add
adc
push
fwait
or
adc
mov
shl
push
aad
push
lock
or
or
insb
roll
pop
aam
jns
sbb
into
lods
jne
pushl
cltd
repz
pcmpgtw
mov
mov
mov
add
adc
out
stos
sbb
stc
lcall
and
cmp
xchg
fucomip
push
in
shr
mov
mov
adc
iret
push
or
and
mov
and
inc
jb
mov
scas
pop
into
sahf
and
inc
and
repnz
jge
push
jle
mov
les
mov
push
adc
bound
ds
sbb
pop
out
xor
lods
pop
inc
inc
jmp
out
inc
fistl
jl
jne
dec
adc
mov
fisubrs
jge
hlt
jno
loope
dec
xchg
xlat
pop
pusha
insl
pop
lret
mov
scas
cmp
rcrb
andl
out
popl
mov
imul
popa
or
fists
loopne
andl
cli
testl
sahf
xor
and
adcl
push
inc
dec
aas
call
mov
or
je
pop
and
nop
xor
pop
pop
stos
fst
incl
lcall
add
in
cmpsw
sahf
jmp
imul
pop
jmp
mov
loope
jecxz
outsl
jl
dec
in
ret
sbb
call
sbb
add
cmp
inc
xchg
add
out
mov
sbb
push
push
scas
stos
pop
fmulp
loopne
into
push
jbe
or
xchg
addr16
and
pop
nop
jp
ljmp
xchg
notl
scas
jae
stos
nop
cmp
out
push
push
subb
sti
mov
cs
pushf
sbb
insl
pop
xchg
lahf
push
outsl
iret
fmull
inc
sbb
push
pop
inc
mov
add
ss
ljmp
repnz
mov
and
cmpsb
xchg
add
rol
jo
cmpsb
fcom
lea
mov
lahf
jmp
lret
jo
nop
lcall
es
adc
sub
out
push
movsl
and
xchg
adc
inc
and
popa
jb
sub
ljmp
fs
pop
movsl
xchg
mov
lret
pop
fisubl
inc
subb
pop
dec
xchg
sti
push
and
and
fisttps
push
jl
fsubr
sub
gs
pusha
dec
or
fadd
mov
dec
cmpsl
in
mov
mov
or
cmp
and
jns
jmp
sarb
cli
add
lcall
in
add
push
mov
aad
icebp
xor
fwait
add
mov
scas
pop
ficompl
ja
fisubrs
mov
sbb
xor
es
mov
pushf
lret
rorb
xor
sub
inc
jno
push
pop
stc
sub
or
das
pop
push
sub
into
xor
mov
xor
pop
ljmp
adc
xchg
cld
imul
xor
loopne
lock
daa
loopne
loop
push
lcall
xchg
pushf
add
mov
sbb
sarl
daa
push
loop
pusha
leave
js
cli
out
psrlw
faddp
sahf
mov
dec
jne
xor
call
pop
jae
lret
cwtl
add
clc
movsb
sub
nop
or
lret
leave
arpl
mov
pop
daa
popa
or
mov
sub
fwait
mov
into
andb
cmp
movsl
mov
jne
inc
or
dec
sub
test
inc
pop
push
sub
xlat
clc
cmp
push
popa
or
pop
inc
fnstenv
jb,pt
and
inc
xchg
inc
lahf
pop
fisttpl
repnz
pop
out
mov
xchg
xor
pop
jnp
out
shl
fsubrs
or
lods
stos
push
lds
jnp
out
and
test
mov
enter
or
jb
test
lods
mov
stos
push
sbb
xchg
sbb
sub
mov
aad
insb
sbb
out
or
xchg
pop
sti
add
pushf
xor
and
push
mov
aam
xchg
iret
jbe
xchg
jo
faddp
enter
or
sarb
bound
and
roll
dec
xchg
push
inc
iret
test
dec
sub
imul
inc
pusha
xor
fmull
daa
fsubrl
jp
push
dec
idivl
sbb
js
mov
cli
xchg
jle
mov
jp
repnz
xchg
cltd
jno
mov
incb
int
sti
mov
aaa
cmp
loopne
mov
out
loopne
sbb
dec
dec
fdivl
push
inc
xor
cmp
lahf
leave
xchg
xor
adc
shlb
adc
mov
das
mov
stc
add
out
scas
dec
or
cmpsb
inc
fwait
out
subl
iret
mov
outsb
adc
cwtl
divb
push
mov
cwtl
xchg
sub
fsub
testb
xchg
pop
lods
cmpsb
add
in
xchg
lods
fdivs
iret
ja
fidivl
jge
dec
adc
inc
in
movsl
mov
push
fistpll
inc
es
push
in
adc
outsl
cli
pop
pop
int
movsl
mov
in
sbb
sub
add
stc
lods
xchg
cwtl
je
mov
or
pusha
popa
push
mov
lea
cmc
or
ss
pushf
or
pop
std
add
movsb
push
lcall
shl
or
xlat
or
stc
in
imul
push
cmp
jnp
dec
mov
jl
fs
lock
add
shrb
pop
jg
xchg
mov
mov
rcll
lcall
push
ret
sub
adc
jne
cmp
test
test
rorb
mov
xchg
nop
es
aas
hlt
pop
push
pop
or
popa
xchg
ljmp
or
ja
subb
push
push
icebp
aaa
jge
jae
pop
add
sbb
or
loope
mov
pop
add
outsb
cld
xchg
cmp
jne
fdiv
int3
sahf
xor
adc
mov
jge
inc
sub
jnp
cmpsl
orb
cmpsb
push
iret
adc
cmp
int3
call
cltd
ret
mov
xor
loope
out
push
mov
xchg
jnp
data16
call
jmp
mov
out
add
mov
stc
xchg
call
sub
andb
or
lods
testb
xchg
aam
push
mov
dec
lret
xor
adc
repz
inc
add
xor
pop
adc
or
push
inc
out
pop
xchg
icebp
adc
sarb
adc
pop
jo
lret
in
pop
push
push
daa
es
lret
adc
into
xchg
dec
test
jl
gs
ss
loope
leave
fwait
jl
mov
cmp
mov
xchg
cmp
cmpsb
push
cmp
jmp
xor
xchg
out
repnz
push
cld
sbb
aas
dec
icebp
or
xchg
sti
aas
fistl
adc
test
mov
in
into
jae
cmc
stos
movsl
mov
in
scas
rcll
jnp
adc
mov
adc
mov
inc
pop
jbe
icebp
fistpl
fildll
aam
lock
xchg
les
call
cmc
pop
into
jmp
push
hlt
scas
movzwl
xchg
stos
aad
sub
jae
stos
ret
call
add
add
lods
test
fwait
xchg
adc
adc
cs
cwtl
push
xor
inc
nop
push
ror
lahf
cld
aad
pusha
ffreep
arpl
xlat
pusha
inc
dec
xchg
out
iret
lds
stos
aaa
mov
xor
mov
stos
jmp
lods
mov
adc
mov
xor
out
sahf
aad
dec
loop
bound
xor
xchg
dec
loopne
jl
dec
or
scas
and
xlat
adc
cmpsl
mov
sub
inc
or
xchg
cs
loop
movsb
int
jle
cmpsl
dec
or
xchg
fs
enter
pop
jns
adc
dec
outsb
mov
repnz
ss
pop
adc
inc
ss
les
pop
arpl
imul
lcall
es
sbb
xorl
sti
sbb
cli
ja
das
pop
in
mov
fcmovnb
sub
jge,pt
out
xor
cmc
sbb
inc
nop
jge
mov
lds
sub
or
xor
xor
in
outsl
cld
or
mov
push
jmp
xchg
dec
icebp
jge
lds
dec
xor
push
or
jns
mov
mov
rcrl
aam
or
cwtl
mov
insl
or
and
insb
cli
add
mov
mov
push
std
adcb
pop
subl
call
cltd
stc
pop
dec
in
ja
bound
std
imul
jns
xor
or
roll
popaw
pop
push
in
cmp
imul
pop
loop
jl
in
nop
adc
insl
push
mov
xchg
lea
pop
xchg
gs
xor
fsubrl
scas
adc
jae
out
and
inc
sbb
push
imul
jg
mov
inc
call
lret
cmpl
lock
push
mov
adc
aad
repnz
mov
push
insb
push
add
testb
mov
mov
outsb
adc
or
mov
cld
push
jg
lret
xchg
jl
icebp
add
frstor
adc
pop
and
fs
test
push
cmp
ds
jl
movsl
shrl
scas
inc
adc
xor
scas
rclb
inc
out
int3
push
ja
lds
jnp
and
in
push
and
sahf
mov
jbe
shr
repnz
rolb
jbe
mov
pop
or
xor
dec
pop
sbb
xor
adc
xor
loopne
pushf
lods
dec
jg
scas
les
outsl
or
stc
outsb
xchg
or
push
pop
mov
sbb
incb
fsub
push
push
push
mov
mov
xchg
mov
push
addr16
lods
push
xchg
xor
pop
xchg
push
std
movsl
aad
pop
test
int
stc
fadds
cld
imulb
movsl
ljmp
cmp
fidivs
aas
movsb
lcall
repz
fcmovu
sbb
adc
mov
ds
lret
jbe
mov
loopne
imul
hlt
out
jnp
jne
movsl
adc
adc
adc
dec
decl
jmp
popa
int3
cmp
int
adc
mov
xlat
negl
daa
clc
shrb
jo
sub
dec
dec
test
sbb
sub
mov
shr
fscale
push
dec
jb
enter
ljmp
shrb
cmc
in
inc
aam
jo
jmp
sub
repnz
or
inc
mov
ss
add
xor
adc
mov
jo
sbb
adc
movsl
cli
roll
test
and
sti
stos
js
mov
ljmp
insl
neg
add
cwtl
movswl
lret
lahf
testl
int3
xchg
xchg
fstpt
test
stos
lods
pop
xchg
jle
push
inc
lret
mov
pop
mov
lahf
mov
cmp
arpl
mov
imul
xstore-rng
cmpsl
xorl
aam
stos
dec
cltd
negb
and
dec
sub
xor
and
fiaddl
xor
pushf
popf
sbb
push
repnz
pop
and
jl
fstpt
call
push
fs
fmull
rorl
dec
cmp
mov
xor
jns
and
loopne
addr16
fs
push
rol
pop
in
dec
add
ds
lahf
and
sarb
push
dec
movsb
jns
cli
fnstenv
rorl
cmpsl
shrb
ror
pop
stos
shll
pop
and
mov
dec
sub
das
cmpsl
loopne
dec
sahf
out
jb
xchg
cmp
and
xor
pop
adc
pop
out
loop
pop
aam
xchg
dec
int3
jmp
sbb
dec
stos
jnp
mov
cmp
in
xchg
sub
inc
and
adc
enter
roll
mov
popa
dec
pop
pop
mov
fcoms
cmp
daa
pop
pop
mov
mov
pop
lret
jbe
fistpll
push
aam
mov
pop
mov
push
xor
lock
lret
mov
sub
mov
call
ret
push
pusha
std
les
test
enter
popf
xor
ret
xchg
mov
daa
lods
dec
data16
add
gs
ret
inc
fwait
in
push
mov
or
das
cld
stc
fwait
pop
test
sub
insl
or
sbb
repz
pop
negl
test
clc
push
mov
stos
stos
cwtl
sub
sbb
popf
pop
mov
aam
and
dec
fsubs
mov
mov
enter
in
pop
or
inc
stc
xchg
sahf
ret
test
lea
sub
add
jno
enter
jle
insb
sub
jge
das
mov
push
jb
pop
xor
or
in
push
pop
pop
jl
enter
lret
dec
mov
mov
mov
adc
xchg
xchg
shll
sbb
aaa
lret
cmp
xchg
mov
movsb
xchg
ret
icebp
mov
jae
outsb
pop
clc
sub
cmp
pop
lcall
rcrb
or
xchg
xchg
rcl
out
inc
adc
mov
or
push
lcall
sbb
inc
loopne
dec
jl
test
inc
icebp
stc
jo
jno
jne
adc
lret
incb
adc
jmp
enter
cmc
aad
rclb
jnp
pop
jle
push
sbb
bnd
loope
xlat
rol
enter
jb
and
push
sbb
ljmp
jbe
mov
lcall
add
aas
mov
insb
ret
psllw
ret
pop
adc
xchg
mov
mov
lret
ret
loopne
ficomps
mov
bound
mov
push
inc
lds
addb
lea
xchg
rcr
call
push
cmc
sbb
clc
iret
mov
fisubrl
mov
jns
ror
sbbb
push
cmpb
ret
aaa
in
push
cmp
imul
sub
jmp
sub
mov
int3
popa
and
and
lret
cmp
leave
xchg
mov
int
mov
lret
add
fsubs
std
addb
cwtl
ja
inc
fld
inc
jbe
inc
xchg
ljmp
mov
lret
shrl
cmp
das
leave
mov
fiaddl
mov
inc
or
js
lds
mov
insl
push
push
inc
xchg
mov
jno
push
imul
out
sbb
out
mov
mov
lret
ds
sahf
push
or
push
cmp
pushf
dec
bound
cmp
iret
and
daa
lock
sub
call
dec
dec
or
pushf
ret
inc
xor
adc
sti
sbb
int3
mov
push
jecxz
imul
sbb
fcoml
push
nop
push
fstpl
inc
dec
jg
dec
fstp
mov
out
add
cmp
mov
aas
inc
cltd
cmp
xchg
lods
aas
cmp
pop
sbb
cli
fists
out
adc
mov
or
ret
mov
inc
popa
cmp
addr16
fwait
ud0
push
sbb
leave
test
inc
or
test
cltd
mov
pop
mov
and
xor
and
out
sti
xorl
xor
cmpsb
sbbl
xchg
jo
adc
mov
ss
dec
arpl
inc
mov
mov
test
cmp
por
pop
addb
mov
scas
cli
fldl
xchg
push
cmpl
ficompl
ljmp
fwait
lcall
hlt
test
popa
into
cmpsl
xchg
and
sub
cltd
mov
and
inc
xchg
repnz
shrl
out
sub
xlat
call
push
push
pop
mov
jae
stos
ds
imul
pop
mov
daa
xlat
xchg
mov
stos
xchg
adc
sbb
xchg
xchg
pop
sbb
xor
cmp
xor
ds
popa
xor
add
mov
adc
stos
imul
pop
andl
hlt
jnp
das
int3
xor
pop
lea
into
cmp
popf
rclb
outsl
xchg
mov
fidivrs
and
pop
rcrb
push
ljmp
or
out
sub
jnp
es
sti
fdivp
mov
jne
iret
lahf
inc
enter
and
cmp
fisttpll
lods
or
imul
mov
push
dec
push
rcll
test
popf
jge
ja
and
popf
inc
cmp
dec
add
testb
xchg
ret
int
cmp
and
test
pop
mov
push
leave
jle
jecxz
sbb
les
sub
mov
bound
es
jle
andl
stos
dec
testb
repz
pushf
pop
cmpl
sar
or
orb
stos
andb
and
mov
adc
xor
and
cli
lret
push
cmp
adc
cmpsb
pop
sub
scas
push
dec
sbb
add
cmp
dec
jge
out
out
cmp
insb
ja
pop
sbb
mov
mov
add
or
into
jmp
das
mov
add
jle
sbb
sbb
cmp
insb
pop
mov
push
jl
lahf
dec
dec
mulpd
in
sub
pop
adc
loope
push
jmp
outsb
cmp
mov
xor
sub
jb
fs
mov
and
inc
jbe
add
xlat
push
lret
sarl
icebp
pop
mov
mov
rcr
jl
data16
push
ret
inc
call
push
sub
insb
leave
mov
sub
jns
mov
in
and
or
das
pop
push
or
cmp
rol
and
pop
bound
sarl
jne
test
shll
aaa
mov
pop
adc
jmp
xchg
cmpl
jae
xchg
outsb
mov
mov
imul
mov
mov
and
push
and
pusha
inc
jns
das
sti
or
jae
mov
inc
jb
fdivl
jmp
aas
inc
pop
ret
or
push
mov
xor
mov
cmp
shlb
push
cld
outsb
lahf
cmp
jno
test
fld
pop
js
add
sbb
cmc
loop
addr16
inc
or
in
rcrl
or
mov
fwait
inc
push
loop
sub
out
jo,pn
sahf
aaa
out
inc
std
fstps
stos
fisttps
inc
test
xchg
pop
movsb
stos
push
xor
and
cld
jbe
mov
push
push
test
jp
and
and
fxch
jmp
or
xchg
test
mov
xchg
stos
insl
fmuls
movsb
inc
mov
cld
std
adc
aas
inc
lahf
mov
fsubl
cmc
push
mov
dec
ret
in
call
je
and
mov
or
repz
add
inc
push
pop
popa
in
stos
sbb
jb
sbb
pop
lods
xchg
pushf
mov
adc
jp
xlat
ljmp
into
stos
in
in
xor
dec
adc
mov
push
add
jb
add
xchg
dec
xchg
test
cmp
je
mov
lea
shld
mov
das
cmp
sub
pop
movsl
pop
aad
cmp
sub
subb
out
pop
fisubrl
popf
jbe
in
pop
out
adc
xor
adc
fisubl
cltd
aaa
movsb
ss
xor
repnz
sub
test
pop
lods
out
push
mov
nop
int
add
ss
jp
stos
push
cwtl
hlt
sbb
ds
mov
int
call
fnsave
add
xchg
pop
mov
or
mov
mov
cmp
int3
adc
or
pop
ljmp
out
inc
cmpsb
daa
data16
loope
in
xchg
or
mov
and
enter
fsubrl
insb
inc
pop
loope
mov
movsb
push
adc
in
das
sbb
loop
int
push
int3
outsb
outsl
sar
jmp
lds
and
dec
orl
call
lds
data16
mov
jle
icebp
repnz
push
push
loopne
add
push
in
das
cli
push
push
popf
in
pop
sbb
stos
cs
cwtl
xor
ret
adc
in
outsl
movswl
jg,pt
js
movsl
fcomp
js
cmp
mov
push
shll
ljmp
iret
push
push
addr16
sbb
mov
jg
jg
iret
lret
lret
scas
stos
fsts
sahf
daa
inc
push
jno
cmp
jge
push
push
dec
popf
xor
xlat
dec
pop
mov
push
mov
sub
repz
inc
sub
cmp
insl
xor
loop
shr
cltd
jl
jns
cld
aas
pop
outsl
rclb
sub
test
adc
adc
dec
test
and
rcr
cmc
imul
hlt
test
loopne
dec
sbbl
dec
loopne
adc
add
ret
push
shll
decb
cmpsb
sbb
lods
xor
push
popa
mov
inc
inc
xchg
jae
ret
cmp
aam
jl
insb
cmp
testb
adc
icebp
imul
into
mov
cmp
arpl
adc
xchg
jp
in
jmp
inc
arpl
cmp
pop
repnz
addr16
cwtl
repz
insl
pop
inc
and
and
scas
sub
fwait
mov
sub
pop
in
test
mov
cmp
shl
sbb
test
adc
sub
add
add
bswap
dec
push
xchg
and
mov
pop
ja
dec
lods
push
cmpsl
pop
inc
sbb
fnstenv
sub
dec
mov
jne
fmuls
mov
push
or
mov
inc
jne
mov
or
inc
jbe
addr16
xchg
pop
gs
inc
mov
out
mov
in
adc
shrl
imul
cmp
data16
imul
adc
popf
lcall
out
mov
popf
fstpl
dec
pop
push
in
sbb
fistl
push
ds
dec
adc
movsl
dec
sbb
stos
fldl
dec
fs
push
or
adc
push
shlb
mov
test
cmp
insb
inc
pop
sub
and
lods
jmp
mov
arpl
das
out
daa
and
ja
mov
mov
push
mov
inc
inc
jge
or
mov
push
scas
push
mov
dec
das
mov
or
mov
scas
sahf
xor
inc
rcrl
jmp
adc
mov
cmp
outsb
xor
dec
xchg
push
sub
mov
popf
mov
hlt
mov
lds
add
loopne
or
and
xor
jmp
mov
mov
insl
mov
cmp
or
rcrb
shll
push
aas
cmpsb
shrb
faddl
es
push
ret
pop
into
test
int3
and
push
fdivl
or
pop
lret
push
mov
repnz
stos
xlat
and
popf
push
lsl
rcrl
or
ja
jo
cmp
inc
inc
cmpsb
adc
adc
rol
push
dec
fnstsw
push
out
or
mov
dec
lods
dec
mov
push
int
lock
out
js
addl
es
ds
mov
mov
pop
cmpsl
pushf
js
add
imul
pop
repz
mov
sub
mov
push
scas
lds
add
addr16
shll
push
jmp
ds
fstps
adc
cmp
popa
mov
inc
or
in
xchg
pop
pop
insl
bound
push
push
fs
xor
xor
xchg
mov
cmp
lds
js
sti
mov
in
rcll
xor
ja
popf
xor
aad
loop
fimuls
iret
push
cs
pop
and
mov
sets
push
push
mov
jae
fdivs
mov
sub
and
sbb
push
dec
into
or
inc
std
fsqrt
aas
andl
lods
dec
mov
jne
rclb
push
mov
mov
push
outsb
adcl
add
pop
cmpsl
test
lods
orb
push
jle
push
mov
sub
or
pop
cli
push
or
pop
cltd
clc
movsb
xchg
jmp
je
mov
xor
repnz
loop
sbb
mov
xor
pop
inc
jb
mov
push
sarl
lcall
shr
ljmp
push
pop
and
repz
inc
push
add
xorl
dec
jo
and
decb
daa
ss
imul
hlt
adc
in
lret
movb
outsl
sahf
in
sub
xchg
cmp
mov
test
stos
mov
clc
jne
fbstp
pop
insl
xlat
in
sub
push
loope
cwtl
cmp
sar
lods
fldl
popa
pop
mov
and
mov
pusha
popf
cmp
bound
cmp
push
aaa
inc
jl
sbb
push
fldlg2
mov
cmp
cmp
sbb
adc
mov
filds
data16
dec
inc
jns
cld
aam
dec
test
jbe
sahf
fs
movsb
mov
xor
lahf
pop
nop
scas
outsl
sbb
inc
cmp
inc
jno
or
cwtl
jg
and
xor
push
out
fwait
dec
sub
pop
imul
mov
mov
jne
mov
insl
lods
addr16
and
mov
loopne
sbbl
xor
xchg
mov
shl
loop
xchg
pop
cs
lods
cwtl
sub
insl
ss
out
jecxz
mov
jle
les
sub
sbb
add
mov
sbb
aad
out
orb
nop
jno
rolb
jno
inc
push
sub
mov
daa
jg
or
out
fnstenv
pusha
std
dec
mov
mov
push
lret
dec
cltd
add
or
jbe
ja
sarl
out
adc
xchg
mov
stos
arpl
jbe
or
aas
sarl
cmp
sbb
and
cmp
shrb
xor
fisubrl
insb
jp
or
mov
lret
pushf
mov
pop
mov
mov
mov
dec
dec
cmp
mov
fcmovu
mov
imul
out
push
mov
and
jle
out
cmp
in
lock
aas
lods
mov
test
ljmp
mov
test
adc
iret
test
mov
mov
xor
ficoml
adcb
daa
rorl
lock
adc
or
stos
fildl
jb
cmp
mov
xchg
out
stos
out
lea
jle
sub
xor
out
xor
pop
xor
mov
push
mov
outsl
push
aad
jo
xchg
cli
mov
mov
and
inc
pop
pop
div
mov
lcall
inc
jo
sbb
jo
dec
push
sbb
test
loop
nop
lods
cmp
mov
in
das
dec
mov
decl
loopne
sub
pop
sarl
or
jnp
add
sub
out
push
xor
das
mov
sbb
mov
nop
call
lods
in
push
movaps
pushf
push
add
mov
xchg
jle
jmp
mov
jo
xor
aas
mov
shrb
insl
push
decb
stos
cs
inc
adc
jne
inc
js
fidivrs
xchg
sub
sbb
lea
xor
or
bound
push
hlt
xchg
dec
loopne
cmpl
int3
cwtl
mov
icebp
mov
js
inc
mov
pop
pushl
lcall
jne
xor
push
xchg
xchg
mov
pmulhuw
bound
adc
loope
loopne
or
mov
popf
cmp
loope
lahf
jbe
scas
out
push
adc
orl
pop
jno
rorl
in
cmp
fcom
fists
fisubrl
mov
andb
xchg
xchg
mov
mov
adc
shlb
xchg
stc
cmp
stc
stos
adc
mov
cs
in
xchg
xchg
insl
push
push
mov
mov
cmpsl
in
rol
mov
imul
fadd
xor
scas
push
mov
and
dec
es
cmp
ds
sub
shlb
cmp
in
sub
jmp
outsb
mov
sbb
jge
lret
ret
mov
jno
pop
xchg
je
clc
shrl
int3
in
jns
xor
gs
sbb
mov
or
inc
push
dec
data16
pop
call
fisubl
cmpl
nop
punpckhwd
enter
jne
adc
popa
into
push
mov
xchg
cmp
xchg
les
dec
jb
pushf
mov
and
pop
mov
jge
outsl
pop
xor
stos
ror
inc
xor
pushf
loopne
fucomip
arpl
ja
cmp
pop
xor
pop
or
fsubl
mov
je
fcompl
push
mov
popl
shrb
jbe
out
or
pushf
adc
push
push
aad
dec
mov
stos
test
mov
add
and
dec
cmpsb
mov
xlat
lret
and
xor
mov
jmp
adcl
pop
cmpsb
push
cmp
mov
mov
sbb
loop
pop
pop
adc
sar
fistpl
in
pop
cwtl
add
adc
pop
xor
pop
inc
out
insl
loop
lods
xchg
jns
loop
inc
loop
and
xor
int3
xchg
lahf
push
sub
pop
xchg
fwait
dec
les
call
fsubrl
and
push
out
push
push
lds
xchg
lahf
xor
es
mov
stc
jns
rorb
sbb
push
mov
sahf
cmpsb
dec
cmp
cmp
pushf
xchg
jns
shll
mov
mov
push
enter
loopne
ja
int
fisubs
xlat
mov
insb
scas
jg
pusha
push
loope
jge
in
movsb
lcall
xor
adc
sub
leave
sub
ja
push
xchg
adc
jecxz
push
pop
mov
mov
sbb
mov
xchg
inc
mov
cmc
xchg
pop
jle
lahf
push
neg
ss
or
mov
cmp
xor
fsubrs
arpl
js
xchg
stos
arpl
xchg
out
shrb
cmp
push
insb
imul
insl
add
xchg
mov
inc
pop
fisttpl
iret
push
push
test
rcrl
and
push
mov
jg
dec
push
pop
push
ss
imul
jne
stos
loope
je
push
inc
and
insl
push
lods
sub
mov
add
cmpsl
or
xor
and
xchg
fldt
push
cmp
fdivrs
xchg
bound
dec
negb
mov
fstpt
or
ja
mov
jne
lret
out
mov
inc
jmp
sbb
pop
sbb
ret
daa
cmp
js
or
and
std
pop
cmpl
out
std
push
push
adc
push
push
imul
inc
mov
push
pop
ret
sbb
push
lea
cmovo
movsl
adc
insl
push
sub
xchg
jae
xor
xchg
and
icebp
adc
push
in
inc
scas
enter
cli
xchg
mov
jnp
gs
inc
out
rcl
push
push
xor
into
ds
cmc
into
iret
xchg
sbb
out
cmp
bound
jns
cmc
or
sub
xor
movsl
shll
add
push
bound
add
and
pop
icebp
je
jb
int
int
cmpsl
or
add
sub
pop
daa
add
gs
jge
orl
push
enter
cwtl
fdivrl
pop
xchg
popf
jae
mov
dec
mov
fidivrs
and
pusha
cmp
push
div
dec
jmp
ss
cmp
xor
add
sbb
mov
aam
fidivrs
lea
rcll
jmp
cmp
icebp
stos
jno
mov
xor
mov
mov
movsb
cmp
icebp
jmp
sub
cmp
enter
dec
mov
loop
cli
aam
sub
cli
movsb
mov
int
iret
data16
lret
nop
add
cld
repnz
or
xchg
add
call
pop
dec
sub
push
clc
or
fs
dec
outsl
push
xor
stc
sub
inc
out
out
cmp
cmp
enter
or
and
mov
cltd
inc
or
in
aad
adc
fimuls
lods
pushf
pop
fcmovu
xchg
adc
jp
dec
pop
and
mov
int3
das
xchg
xchg
or
aad
mov
inc
adc
insb
and
aas
icebp
int3
icebp
push
xchg
lret
adc
scas
popa
mov
xor
mov
jnp
mov
push
sti
mov
aad
xchg
or
addr16
iret
mov
je
xchg
xchg
fmuls
test
mov
and
out
movsl
mov
mov
js
or
push
pushf
popf
stos
cmp
shll
and
loop
repnz
add
movsb
js
mov
cmc
ja
lock
push
or
adcl
clc
xor
xchg
enter
lods
mov
cmc
mov
adc
sbb
pop
pop
ret
xor
arpl
mov
lds
xor
sub
add
aam
dec
add
pop
mov
xchg
xchg
xor
and
pop
sbb
sub
lret
icebp
lock
outsl
mov
lahf
xor
jo
subl
mov
lods
xor
push
xchg
jmp
fstl
push
xor
ret
sub
jne
js
dec
push
pop
aad
cmp
fisubs
aaa
cwtl
enter
xchg
xchg
fcmovnb
shll
sub
adc
popf
sar
out
std
sbb
loopne
or
cmc
or
out
xchg
scas
mov
bound
sub
icebp
xor
daa
testb
lods
fisttps
and
sahf
mov
inc
inc
insb
push
jle
dec
test
cmp
popf
xlat
xor
ss
or
rcrb
or
icebp
pop
stos
js
pop
lret
pop
pop
scas
stos
int3
int3
push
fistl
cld
inc
push
popa
inc
pop
jo
icebp
dec
aam
push
dec
push
add
out
cwtl
scas
jecxz
inc
test
in
lds
repz
cwtl
adc
pop
mov
xchg
push
stos
xchg
mov
lret
nop
adc
and
shrl
stos
cs
out
jnp
insb
mov
pop
test
mov
xor
mov
inc
repz
pop
stos
push
movsb
ret
in
fwait
or
push
jmp
mov
aaa
cli
jmp
mov
ret
pop
nop
lea
pop
jg
jmp
adc
mov
lret
arpl
xor
bound
add
das
or
xchg
xor
mov
loope
out
fmuls
push
shl
mov
push
mov
jl
xchg
repnz
shrl
pusha
scas
cmp
mov
loopne
mov
mov
daa
xchg
lea
popfw
sub
imul
sbb
pop
gs
pop
or
pop
loop
jle
cmp
xor
nop
mov
dec
sbb
in
test
dec
and
mov
outsb
or
mov
sub
adc
or
and
mov
mov
in
fidivrs
mov
sbb
sbb
in
pop
dec
div
stos
xchg
jp
out
out
daa
push
mov
sub
push
aam
inc
adc
mov
lea
mov
pop
fidivl
cltd
cltd
pop
mulb
sub
aaa
fildl
jo
pop
loop
or
scas
cmpsl
xchg
mov
out
clc
ss
jo
jo
imul
sub
clc
decb
jae
mov
or
pop
fldt
push
push
add
out
jne
in
dec
inc
outsb
push
data16
inc
test
xchg
adc
int
xchg
mov
or
repnz
jge
push
popf
dec
mov
mov
mov
dec
xor
push
mov
xor
mov
test
add
push
or
mov
push
mov
mov
or
nop
repnz
pslld
std
sbb
dec
ja
es
mov
push
push
into
roll
ljmp
in
mov
test
cs
push
stos
mov
jge
inc
mov
out
xchg
inc
test
lods
pop
mov
cwtl
add
popa
cs
xchg
lods
pop
mov
call
mov
jbe
lret
mov
mov
jb
sub
pushf
repz
pop
add
or
into
loope
mov
ja
icebp
mov
mov
jl
jae
mov
ja
fucom
sbb
jo
and
xor
push
negl
or
out
les
mov
leave
xor
sub
dec
out
in
mov
xchg
adc
mov
xor
mov
xchg
sub
dec
sbb
jl
dec
xchg
adc
sbb
fisttps
sbb
inc
add
adc
shrb
xor
into
push
pop
and
sahf
xlat
push
xchg
jnp
xor
sub
int
mov
aad
sub
sbb
pop
xor
lods
adc
fsubrl
ljmp
jl
inc
test
add
jb
lea
jns
sbb
mov
dec
pop
lret
ss
mov
stos
cwtl
shlb
pop
ds
add
mov
xor
std
xchg
inc
dec
in
push
xor
movsl
loope
arpl
fmull
pop
je
jl
mov
pop
aaa
jb
sbb
mov
mov
fldenv
xor
js
add
in
lret
mov
xor
jbe
push
xchg
test
push
pop
dec
mov
sbb
sub
psrlq
inc
sbb
push
data16
dec
xchg
sbb
and
xchg
sub
jmp
leave
scas
mov
pop
repz
and
gs
push
pop
lods
iret
cmpsb
mov
push
sub
xor
int3
cmpl
sub
int
jl
sahf
leave
imul
sbb
cmp
test
cld
lock
jbe
adc
dec
mov
mov
rol
fs
lret
jno
mov
popf
gs
adc
iret
jae
imulb
insb
or
ja
xor
mov
xlat
jp
push
sub
mov
inc
adc
mov
and
mov
push
gs
lods
stc
dec
sbb
pop
popf
inc
jp
sub
add
mov
mov
fsubl
or
adc
xor
pop
xchg
adc
sti
enter
inc
add
jo
ljmp
mov
frstor
imul
pop
mov
mov
add
adc
cli
insl
addr16
dec
inc
mov
dec
xchg
lods
pop
cmpl
jo
int
out
popf
push
xchg
je
fdivl
adc
fdivl
pop
mov
int3
xchg
lcall
cmp
xchg
fldl
jmp
pop
fwait
xchg
clc
bswap
call
sub
jmp
shrl
rorl
or
ljmp
fldt
arpl
outsl
in
mov
jnp
xorl
das
push
xchg
push
push
mov
ret
loop
int3
and
pop
fistpl
xchg
dec
pop
into
lods
mov
or
aad
jecxz
dec
repnz
mov
jmp
repnz
dec
sbb
lods
fldcw
aaa
test
leave
push
xor
cmp
les
imul
aam
orb
cs
imul
hlt
bound
inc
or
pusha
dec
fstl
pop
adc
stc
push
repz
fucomip
orb
inc
ja
dec
call
inc
xchg
inc
lret
xor
in
xchg
js
xchg
push
sbb
movsb
fildll
pop
into
push
fiadds
push
pop
push
push
and
cmp
sub
popa
add
repnz
out
sbb
dec
cmpsb
scas
sub
pop
jbe
jno
adc
mov
pusha
push
pop
iret
out
insb
mov
stc
pop
dec
dec
sarb
decl
push
mov
push
cwtl
fnstenv
mov
mov
mov
sub
insl
mov
inc
addl
mov
insl
sub
out
dec
cltd
int
cmpsb
mov
es
mov
sbb
pop
pop
add
mov
sbb
sub
arpl
xor
mov
and
adc
push
lahf
jp
mov
and
lahf
push
pop
lret
loope
dec
jmp
or
mov
mov
imul
sahf
mov
adc
add
adc
xchg
add
jo
dec
and
in
sti
scas
insl
xchg
sub
adc
hlt
jmp
jg
int3
sbb
ss
outsb
lods
mov
or
xchg
cmp
insl
dec
mov
mov
add
push
clc
sbb
add
adc
xorb
or
sbb
clc
pop
xor
mov
mov
mov
add
out
fcom
push
lret
call
je
jb
fcoms
sub
ret
or
rcrb
cmpsb
mov
or
sub
adc
pop
cmp
inc
mov
sbbb
cmp
xor
xchg
xlat
lahf
cmp
mov
aad
icebp
cmpsb
icebp
add
sbb
dec
sub
mov
pop
cmpsb
fstps
gs
lahf
leave
test
inc
stos
pop
lahf
push
fnsave
into
outsb
sub
sbb
andl
mov
shlb
cmp
pop
icebp
stos
jnp
cmp
loop
xchg
xchg
ja
mov
fists
mov
ljmp
cli
adc
stc
ja
scas
mov
xlat
lds
jg
into
lea
rcrb
movsl
imul
xchg
int
out
rorl
and
aas
in
and
mov
leave
ficomps
test
ret
roll
xchg
in
or
pushf
aas
out
push
loopne
sbb
sub
es
cmp
popf
cmc
pop
test
mull
cmp
in
jns
jns
cmp
xchg
fimull
jo
sti
adc
pop
mov
bound
stc
imul
mov
cmp
push
push
jmp
add
sbb
mov
xor
jne
clc
mov
jnp
mov
xchg
lahf
xchg
xchg
mov
xchg
sub
push
mov
lods
mov
ljmp
push
push
xor
es
sbb
or
mov
into
jne
not
add
and
mov
test
sbb
mov
jbe
xchg
scas
dec
test
mov
xchg
sbb
test
add
xor
jmp
cmp
arpl
or
sti
jns
pop
jo
faddl
xor
push
lock
jecxz
adc
lahf
cmpsb
xchg
cmc
adc
test
aaa
sbb
mov
test
test
call
mov
nop
mov
sbb
sub
lea
jno
cli
loopne
gs
bound
adc
mov
mov
jp
mov
xchg
je
cmp
fwait
inc
xor
sbb
inc
or
sbb
xor
mov
cmp
aam
push
daa
and
mov
pop
jle
roll
jno
inc
loopne
sub
jmp
cmp
sub
mov
hlt
in
sbb
or
cmpsl
sub
inc
cmp
in
daa
mov
clc
out
lock
ljmp
notl
add
mov
test
push
jno
jmp
dec
jmp
jb
iret
mov
push
es
cmpsb
data16
movb
test
lret
cmp
sub
int
hlt
ret
int
int3
xor
add
nopl
jg
hlt
dec
outsb
int3
jge
mov
ror
stc
enter
int
mov
mov
test
cltd
xorl
mov
or
test
xor
adc
inc
stos
lret
mov
inc
popa
clc
mov
cld
test
aas
sub
loope
fwait
ret
adc
sbb
inc
sti
push
outsl
shll
mov
repz
loop
adc
cmp
cmovle
fidivs
rcl
lds
je
std
xor
std
xor
scas
and
mov
jns
mov
out
xchg
xchg
in
fbstp
pop
fldpi
cli
push
into
mov
xor
fisttps
fdivl
sarl
test
mov
jns
clc
add
sbb
andb
enter
mov
cmp
ja
outsb
sbb
data16
pop
insl
mov
mov
xchg
jp
dec
aas
push
adc
outsl
andl
repnz
mov
fs
sub
bound
mov
mov
and
and
lods
push
cwtl
sbb
cmp
sbb
icebp
or
xor
and
mov
scas
syscall
xor
jnp
push
ror
push
fdiv
xchg
inc
jns
cmpsl
push
mov
cmpl
fwait
jbe
ja
mov
xchg
enter
mov
out
rcr
mov
inc
jp
xor
stc
mov
dec
cld
xchg
pop
xor
mov
dec
jmp
ss
loopne
sub
decl
rcr
jl
repnz
out
push
mov
enter
fmull
insb
mov
sbb
scas
inc
or
or
mov
mov
and
xchg
out
in
repz
fcoml
repz
dec
and
stos
add
jmp
add
mov
dec
cmp
sbb
and
pop
fsubr
inc
es
cmp
lcall
fisttpll
push
cli
pop
add
add
stos
jb
add
and
cs
mov
push
dec
icebp
shlb
addr16
je
mov
and
je
jmp
loop
ret
mov
int3
insl
dec
lds
mov
and
xor
mov
push
stos
cmpsl
idivl
imul
and
ja
inc
inc
pop
movsl
or
dec
push
lock
xchg
sti
inc
lret
subl
loopne
mov
stos
mov
fdiv
adc
or
pop
xor
insl
rcrb
and
enter
xchg
repz
loope
mov
ffree
cld
push
mov
pop
mov
cmp
sti
push
xor
fcom
mov
in
aaa
mov
sbb
lahf
out
or
xchg
rcrl
cmp
scas
sub
push
pop
xlat
ret
jmp
jno
or
inc
jnp
jge
xchg
add
cmpsl
or
test
aaa
movsl
inc
mov
rcrb
xchg
add
jle
sub
filds
and
xchg
pop
sarl
or
int3
push
xor
gs
js
xchg
in
sbb
ss
jns
fidivrl
push
movsb
loopne
movsl
sub
clc
call
pushf
jp
push
dec
test
aad
outsl
dec
out
mov
popf
outsl
mov
and
lcall
in
arpl
xchg
pop
jp
add
mov
xchg
lods
mov
push
fdivrp
jns
mov
push
push
ja
and
nop
jmp
xor
push
ljmp
in
inc
mov
dec
cmp
int
jmp
lods
dec
add
pop
test
inc
std
divl
pop
jmp
out
mov
mov
mov
out
lcall
scas
fwait
lret
add
test
pop
gs
loop
mov
incb
test
loopne
gs
push
push
push
loope
xorb
cmc
mov
std
add
das
sub
push
push
mov
and
outsb
stos
rol
dec
fs
mov
jnp
or
push
add
mov
out
push
xchg
cli
daa
xor
loope
pop
inc
jo
jecxz
jb
jo
addb
xchg
int3
fst
mov
arpl
sub
jmp
subl
aas
lahf
ljmp
inc
je
divl
xchg
pop
or
mov
and
sarl
xchg
dec
insb
cs
add
dec
jecxz
out
mov
jno
xor
pop
sbb
jno
fnsave
das
cmc
jnp
int3
data16
pop
push
shrl
mov
inc
xor
popa
push
test
movsl
mov
nop
in
mov
sahf
ret
cmp
and
sub
jl
iret
inc
add
mov
aam
aaa
dec
mov
out
into
and
ss
mov
xchg
aad
or
push
push
sbb
jno
faddp
sbb
lods
stos
or
or
add
push
adc
fwait
imul
loopne
popf
inc
rcrb
testl
subl
xor
pop
int3
bound
adc
cs
xchg
sbb
or
or
mov
js
mov
and
adc
imul
jle
xchg
in
adc
lods
stos
scas
imul
sub
out
inc
sub
xchg
sub
dec
xor
popf
hlt
gs
sahf
jmp
mov
fnstenv
mov
jp
movb
sub
mov
mov
sub
iret
les
lret
aaa
and
mov
add
nop
negl
mov
sbbl
jle
mov
repz
adc
jmp
scas
mov
push
sbb
cmp
and
hlt
aam
test
xor
xchg
sbb
test
sub
xlat
add
es
pop
inc
pushf
ficompl
repnz
xor
sbb
arpl
sar
or
xor
or
jp
pop
dec
push
or
jl
fldenv
xchg
jg
stos
cmp
lea
rcl
das
test
mov
fcomip
cmp
push
cltd
mov
lds
jnp
adc
cld
jne
fwait
out
adc
std
mov
push
mov
xor
xchg
out
and
popf
sbb
pushf
push
push
mov
sbb
xchg
mov
lret
fistps
fsubrs
jno
pop
sub
mov
mov
addb
xchg
add
mov
and
lea
jnp
xor
mov
add
inc
aam
daa
int
xchg
sbb
push
pop
dec
xor
pusha
mov
ret
pop
jo
icebp
xchg
inc
pop
adc
and
dec
cwtl
and
push
imul
dec
push
add
filds
push
mov
push
mov
dec
or
int3
pop
out
mov
in
mov
xor
pop
inc
xor
jp
jne
loop
lcall
or
push
or
sarb
xor
push
ret
and
pop
je
sub
insb
jnp
sbb
push
xor
and
into
test
dec
jne
stos
jecxz
jne
push
cmp
add
add
or
filds
ja
rcll
pop
push
out
out
adc
cmpsb
xchg
ret
sarb
xor
inc
sarl
adc
jecxz
scas
andb
imul
cmpsl
pop
xlat
in
and
sub
dec
add
aam
dec
cli
dec
xchg
jno
incb
sub
cmp
mov
adc
dec
gs
dec
mov
xchg
lods
add
lret
test
jo
inc
mov
ds
aam
dec
sub
mov
xchg
add
je
fisttps
adc
inc
movsb
mov
mov
jg
inc
test
jno
mov
xor
dec
imul
sbb
mov
das
mov
or
push
lods
push
jge,pt
movsl
nop
fnsave
and
mov
test
popf
imul
jg
cmp
add
or
inc
jae
inc
jnp
mov
push
add
call
xor
adc
push
iret
adc
test
cmp
inc
aaa
aam
int
pop
incb
les
div
adc
push
jb
xor
je
ljmp
jne
in
add
inc
es
xor
data16
insl
in
sub
sbb
mov
xchg
adc
pop
mov
sbb
jbe
push
dec
rcl
sub
xor
adc
pusha
lcall
fisubl
pop
loope
push
shl
cmp
mov
ja
cmp
andb
into
mov
loop
sbb
sbb
mov
sbb
mov
sub
je
pop
mov
bound
cmpsl
mov
bound
and
int
push
mov
mov
inc
cmp
ja
dec
ds
arpl
sbb
loope
aaa
aam
inc
divl
dec
loope,pt
stos
xchg
vmovshdup
mov
jo
add
sar
jge
cmp
popa
jmp
mov
fstl
fwait
pop
and
dec
lods
incl
scas
mov
xchg
jmp
cltd
in
push
in
jbe
enter
movsl
mov
sub
or
fstpl
outsl
movsb
mov
mov
mov
aaa
xor
ja
mov
push
int
add
jnp
inc
pop
mov
fiaddl
loope
pushf
arpl
dec
rorb
dec
stc
jmp
cmpsl
sbb
xchg
negl
or
and
mov
fimuls
test
mov
xchg
dec
mov
mov
repnz
js
xchg
das
sarb
dec
stc
std
andl
popa
loopne
out
cltd
cmp
aas
mov
mov
pop
add
push
ret
push
divb
rolb
out
adc
xchg
sbb
outsb
pop
adcb
add
outsl
mov
xor
xor
jns
mov
insb
arpl
push
push
add
pushf
adc
ss
add
mov
or
cmp
sub
out
ret
insl
mov
cltd
lcall
pop
std
sti
daa
and
push
sub
dec
out
jnp
mov
repnz
insl
test
negb
in
sahf
cli
arpl
mov
in
xchg
fnstsw
adc
ja
cwtl
inc
insb
call
pop
push
sti
int3
call
popf
add
mov
js
std
mov
jg
mov
dec
xchg
jp
mov
sbb
adc
cmpsb
xor
sub
mov
setle
sub
imull
scas
and
aas
inc
mul
rolb
cmp
daa
test
sbb
sbb
xchg
jne
push
call
inc
mov
jae
xchg
push
push
pop
mov
mov
mov
std
inc
dec
dec
arpl
and
jmp
and
xor
xor
cmpsb
popf
xchg
cmp
ss
fwait
lcall
mov
mov
xchg
ljmp
test
mov
lods
xor
jb
add
je
pop
cwtl
sub
popa
pushf
fsubrs
mov
into
pop
inc
add
mov
outsl
call
mov
mov
lret
dec
dec
imul
out
js
rclb
cmc
je
test
mov
jbe
xchg
xor
divl
cs
sub
pop
shll
adc
mov
jl
pop
rcr
test
iret
scas
and
adc
xchg
push
scas
jno
enter
xor
stos
fcomi
out
pop
in
jp
in
enter
mov
ds
mov
frstor
mov
dec
js
and
pop
cmp
push
or
ss
mov
jmp
das
xchg
jle
mov
shrb
xor
push
xchg
jno
push
push
sub
lock
shll
stos
mov
ja
sub
dec
adc
es
and
imul
pop
mov
ret
jb
push
sbb
add
fildll
inc
ja
or
dec
inc
pop
mov
mov
jge
pop
aam
in
push
les
push
cmpsb
dec
imul
dec
movaps
push
cmp
sbb
sub
sbb
fldl
sarb
cmc
cli
insb
rcrb
or
pop
xchg
jae
and
mov
out
imul
inc
into
xchg
testb
cmpb
mov
xchg
and
mov
call
daa
pop
jae
outsl
push
sarb
xorl
xor
fadds
lods
mov
nop
xchg
leave
cmp
popf
movsb
cmp
xor
nop
loop
jecxz
lock
pop
fstl
cmpsl
dec
mov
push
ss
mov
test
cmp
xchg
xor
or
sbb
mov
rcr
inc
negl
mov
and
adc
jecxz
test
push
cli
orl
adc
xor
clc
imul
jmp
pop
arpl
or
xor
cmp
notl
dec
inc
clc
mov
out
pop
dec
stos
pop
sub
and
xorl
fcmovne
aaa
adc
outsl
push
loop
nop
in
mov
aas
aad
mov
movsb
fstpl
sub
sbb
movl
scas
fadds
adc
adc
jle
xchg
cmpsl
in
sahf
movsl
mov
lret
arpl
js
push
cmc
cmp
scas
dec
sbb
in
int3
adc
enter
add
fistpl
gs
cmp
mov
mov
fldenv
jl
dec
xor
pop
mov
or
jne
in
add
int
fstl
adc
push
scas
es
mov
sbbl
xchg
inc
ss
sub
fstpt
mov
cmp
shl
ljmp
cs
mov
pop
jbe
addr16
in
ficoml
or
and
mov
mov
popf
arpl
in
xlat
xchg
in
in
xchg
loop
in
leave
pop
outsb
int3
ret
dec
push
pop
fnsave
add
stc
imul
pop
add
fstpt
push
jp
aaa
orb
fwait
sbb
adc
arpl
dec
mov
dec
movups
mov
adc
push
jb
dec
mov
fisttps
jmp
lock
pop
rep
or
dec
cli
or
sbb
jb
jp
fisubrl
dec
add
sbb
adc
loop
xlat
out
inc
mov
repnz
xor
test
je
seto
imul
fidivs
mov
rcr
lock
mov
lret
insl
es
jno
push
xchg
in
push
jne
scas
jne
mov
ja
pop
lret
test
or
loop
or
xor
inc
insl
in
outsb
loope
xchg
pop
dec
push
pop
fwait
push
ret
movsb
mov
xchg
add
add
mov
adc
jnp
aam
push
scas
jno
pop
lret
cmp
sti
pop
pushf
mov
jp
sti
mov
pop
scas
xlat
sbb
js
jae
or
inc
movaps
and
ljmp
jno
fistpl
imul
negl
add
clc
inc
int
add
popa
sbb
xlat
fsubrs
add
cmpsb
sbb
sbbb
pusha
cmpl
add
add
dec
adc
mov
push
ds
fcmovnbe
inc
jmp
divb
lahf
cmpsl
gs
sbb
in
in
adcb
add
lods
mov
lret
xor
jo
mov
leave
push
xchg
adc
movsl
and
imul
add
inc
in
sub
mov
mov
popa
jne
shll
or
add
adc
rcrb
push
mov
mov
jbe
or
push
or
xchg
adc
pop
and
mov
sahf
push
or
pop
cs
int
mov
mov
sub
dec
adc
out
fwait
pushf
or
scas
lods
sbb
jns
push
pushf
imul
cmpsb
mov
in
sbb
cmp
pop
cld
adc
mov
call
jns
mov
lea
adc
test
div
nop
pop
ss
test
xor
idivl
jnp
shrb
mov
enter
cwtl
mov
lds
mov
xlat
push
dec
and
ret
in
mov
and
and
fldl
adc
push
lcall
sbb
mov
dec
lock
mov
pop
xor
stos
mov
rcrb
mov
fldt
faddl
inc
adc
bound
insl
scas
xchg
sub
loopne
dec
xorl
cmpb
int
rorl
sub
jnp
ret
lret
in
bound
pop
out
xor
lcall
mov
jg
dec
pop
mov
mov
popa
pop
jne
sub
es
repnz
push
loope
or
dec
lods
les
loope
mov
pop
out
dec
aam
jecxz
jbe
cmpl
push
test
js
in
ret
pop
push
mov
push
xlat
mov
sbb
add
jle
hlt
arpl
fwait
data16
fisubs
jns
cltd
cmp
adc
jmp
pop
jns
push
movsb
inc
add
test
add
mov
rcr
loopne
shl
daa
pop
cmp
sbb
in
aaa
iret
push
lods
mov
testl
sti
ret
int
std
adc
pushf
adc
push
repnz
fldcw
insb
jmp
shll
jp
out
adc
xchg
repz
es
les
fdivl
int3
mov
out
lahf
cltd
loope
mov
imul
stc
sbb
clc
xor
jb
aam
mov
ud1
arpl
inc
mov
loop
xchg
sub
mov
lahf
sbb
insb
imul
xchg
nop
and
push
popf
sub
mov
lcall
shl
mov
fidivl
in
xchg
cld
imul
lock
cmp
ss
data16
fmulp
inc
xchg
adc
mov
js
ja
mov
xchg
jns
int3
popf
xchg
jl
popf
xchg
cmpsb
mov
mov
scas
sbb
mov
out
addr16
xor
adc
cmp
push
cmc
pusha
mov
icebp
jne
cld
mov
cmp
cld
aam
outsw
enter
xor
out
or
jmp
int3
imulb
insb
test
push
xor
or
insl
add
ljmp
xor
rcrb
xor
stos
subl
cmp
sub
aaa
in
adc
cmc
xor
dec
mov
stc
and
mov
outsb
testb
fildl
jl
hlt
and
cmpb
lods
jecxz
test
lock
clc
push
loope
cli
ja
ret
xor
out
pop
mov
push
jae
std
mov
in
ret
js
push
push
insb
push
dec
popf
xchg
mov
je
or
cmp
push
ss
xorps
movsl
cmp
mov
xor
nop
push
adc
addr16
pop
mov
imul
outsb
rolb
cltd
mov
mov
lcall
loop
cs
add
gs
jo
mov
xchg
call
and
cmp
mov
inc
scas
rcll
xchg
mov
cmpsl
mov
rcll
dec
pop
jmp
xor
xchg
sub
imul
int
ret
xor
movsl
fdivp
iret
sti
out
xchg
dec
jns
inc
push
lds
add
push
int3
push
int
adc
cmp
data16
cmp
jbe
adc
or
sbb
jmp
negl
inc
xchg
jecxz
shlb
sub
push
add
push
xchg
sub
sahf
inc
test
in
adc
fidivrl
aam
dec
lds
sbb
sub
cmpsb
insl
push
call
jp
jne
push
adc
iret
push
sete
in
in
cld
and
jb
out
es
call
sub
cmp
lods
cmc
scas
pop
push
aam
pusha
mov
xchg
jp
ficoml
jle
mov
cmp
out
pop
jg
cwtl
sub
mov
mov
adc
es
outsb
xchg
movb
sub
mov
fs
inc
push
ret
sub
jns
sub
xchg
pop
sbb
in
leave
aaa
cltd
xchg
sbb
in
insb
sub
ret
mov
mov
pusha
je
sti
jb
leave
cmp
sbb
in
push
in
inc
mov
add
aas
repz
out
stc
inc
sbb
mov
sub
adc
mov
add
dec
sbb
negb
sti
xor
inc
and
cmp
sub
out
xor
notl
and
add
mov
xchg
push
inc
xchg
and
cmp
rorl
inc
icebp
mov
pop
adc
fnstcw
pusha
shl
ffreep
std
stos
jp
cmp
or
sbb
aam
cld
fwait
decb
mov
cmp
pop
adc
lock
movsb
xchg
inc
movsb
imul
imul
daa
pop
or
add
loop
mov
jo
aas
gs
mov
leave
xchg
jge
popl
scas
sub
xchg
clc
cmp
sarl
in
fimuls
ret
mov
xchg
add
or
inc
xchg
jmp
and
cmp
jecxz
cmp
aas
add
cmp
leave
filds
mov
cmc
cltd
fsubs
and
adc
stc
into
movl
call
inc
mulb
pop
int3
out
pop
mov
pop
dec
lahf
xlat
sub
mov
cmc
mov
aas
loopne
lods
addl
and
aam
sarl
cmpsl
rolb
mov
flds
call
xchg
sbb
xchg
sbb
fwait
sub
fisttps
mov
push
mov
jmp
lcall
ffreep
lcall
stos
sbb
rorb
sub
and
or
or
jmp
lds
mov
cmp
into
loope
and
mov
sub
push
rcr
xchg
pop
clc
push
jb
jbe
sub
stos
sub
sub
xchg
daa
les
stc
fbstp
sub
mov
int
dec
mov
xchg
xchg
cmp
adc
sahf
and
fisttps
mov
xor
xor
outsl
nop
pop
je
ret
pop
jbe
stos
les
xchg
mov
adc
push
push
cltd
xchg
pop
pop
shll
rcrl
aas
mov
xchg
cmp
repnz
imul
arpl
mov
mov
dec
cmpsl
mov
mull
push
fcoml
xor
or
fcoml
cmpsb
inc
cmp
lcall
mov
or
clc
xor
xlat
test
push
test
mov
into
push
stos
dec
call
test
cltd
int3
loopne
dec
xchg
test
cmp
push
pop
add
sub
mov
insb
andb
cmc
loop
inc
xchg
sub
hlt
test
sahf
enter
dec
adc
adc
or
push
idiv
insl
push
je
sarb
sbb
cmp
adc
mov
xorl
loop
xchg
xchg
repnz
ljmp
or
mov
test
jmp
push
lret
loope
mov
mov
xor
sbb
out
inc
fwait
insb
pop
xor
cwtl
add
xor
mov
arpl
stos
sbb
jbe
dec
mov
idivb
cmpsl
and
xchg
jmp
mov
xchg
cli
xchg
xchg
cld
std
adc
sub
jns
call
jne
adc
lcall
popf
sbb
cmpsl
or
shlb
push
dec
popa
cmp
paddb
cmp
mov
jae
cmpl
cld
call
adc
fcoml
or
or
lcall
shlb
cli
orb
xor
pop
fdivs
inc
shrl
out
jno
jno
xor
lock
movsl
cld
mov
movsl
xlat
mov
fidivrs
cmp
jb
clc
out
adcl
dec
outsl
adc
xor
test
inc
jl
inc
mov
push
cltd
sbbl
add
jo
bound
clc
fcoml
push
or
arpl
out
pop
push
stos
cmpl
ret
mov
and
push
add
jbe
dec
pop
inc
mov
inc
push
test
ret
insb
aad
sub
push
xchg
fdivs
dec
lock
ret
xor
ja
jmp
push
adc
lahf
test
lret
adc
dec
mov
mov
popf
fidivs
and
aam
mov
mov
sbb
push
dec
ja
xchg
stos
pushl
stos
adc
mov
repnz
es
xchg
lret
movsl
push
dec
or
in
cmp
cli
xchg
mov
test
fidivs
cmp
mov
add
movsl
xchg
adc
mov
dec
ds
jge
std
ss
inc
pop
and
cltd
or
xor
adc
inc
fchs
loop
outsb
add
mov
out
push
mov
rcll
pushf
or
mov
cmp
fsubrs
in
movsl
repz
jg
push
sbb
ljmp
jg
xchg
test
jbe
outsb
xchg
dec
stos
push
arpl
lahf
sbb
pop
rcrb
mov
push
lcall
lods
jnp
or
jns
pop
fs
sub
dec
mov
sbb
out
mov
mov
aam
imul
xchg
add
sbb
jb
pop
faddl
sub
jge
imul
or
adc
test
push
dec
push
pop
sbb
das
xchg
cwtl
imul
mov
mov
or
mov
mov
or
lahf
push
dec
mov
mov
xchg
cmp
pop
daa
stos
jbe
leave
add
fs
sarl
inc
addb
sub
fisttps
xchg
aad
mov
cli
jmp
mov
dec
xcrypt-ctr
cmpsl
ffreep
js
pop
and
push
cmp
inc
out
sub
mov
call
jecxz
inc
arpl
aaa
iret
adcb
call
out
xor
gs
mov
cmp
stos
hlt
in
cli
vpcmov
mov
fcompl
lods
pop
loope
xor
dec
jecxz
test
je
xchg
sub
mov
push
cld
dec
ret
cwtl
stc
inc
push
add
xchg
mov
or
mov
movzwl
mov
pop
jns
movsb
int3
les
sub
mov
fs
jnp
cltd
pop
xlat
add
icebp
pop
shlb
int
adc
stos
les
mov
inc
loopne
adc
aad
pop
jp
cltd
scas
add
mov
fists
scas
jle
dec
mov
cmp
push
aaa
push
inc
pop
xor
mov
js
mov
and
cmp
mov
and
xchg
fs
mov
rorb
outsb
inc
lahf
xchg
fisttpll
lods
sbb
pop
sti
cmp
push
push
int
outsl
fwait
jge
aas
add
repz
sbb
and
fisubrs
shll
sti
fwait
mov
test
out
jo
adc
loopne
test
cli
xchg
les
out
inc
jne
outsb
jb
test
fwait
scas
inc
push
jne
fwait
xchg
jnp
loop
push
or
out
mov
mov
testb
aam
loopne
fisttpll
xchg
lret
popf
push
jp
orl
call
push
and
aam
stos
jp
dec
rorl
rcrb
shrl
lret
pusha
mov
fmuls
cmp
lret
pop
sub
sbb
out
push
pusha
add
push
xchg
lcall
dec
loop
push
mov
test
xchg
adc
jno
add
lret
test
cmp
inc
js
lods
xor
or
popf
pusha
mov
inc
ret
cmp
sbb
adc
in
iret
push
mov
movsb
xor
sub
dec
mov
add
jo
xchg
mov
clc
cltd
pop
jo
sbb
test
mov
icebp
dec
or
pop
mov
std
lahf
mov
jp
cmp
sbbb
sub
addr16
call
push
stos
push
push
pop
ja
rep
sub
rclb
mov
std
sbb
fidivl
insl
cmp
push
add
xchg
stos
lods
imul
pop
sbb
lock
push
test
xchg
cmp
fnstenv
mov
adc
scas
xchg
sbb
or
fiaddl
mov
push
mov
cmp
mov
cwtl
pop
inc
cmp
mov
pop
jb
dec
mov
sub
xchg
cmp
or
rcrl
sub
dec
sbb
ja
dec
out
popl
jae
mov
out
xor
or
mov
xchg
push
push
add
adc
ljmp
xchg
insb
push
xorb
add
shll
fistpl
cmp
int3
or
sub
sbb
inc
adc
out
and
testl
pop
mov
gs
hlt
cmp
adc
mov
pop
jb
xchg
cs
sub
int
and
mov
inc
cmpsl
xchg
jb
push
mulb
mov
dec
mov
mov
test
jb
pop
pop
adc
pop
xchg
adc
std
xchg
cs
leave
push
pushf
pop
cs
nop
aas
out
imul
leave
mov
je
arpl
ja
inc
xchg
outsb
adc
stos
cmp
dec
aad
mov
adc
add
sbb
sub
mov
and
pop
xchg
dec
mov
xchg
sbb
pop
int
std
push
jmp
mov
nop
addr16
mov
aam
mov
lahf
imulb
dec
adc
pop
and
iret
das
sbb
aam
inc
popa
adc
dec
xor
sub
and
sbb
dec
cmpsb
aad
sub
das
call
rol
sub
jnp
jnp
stc
shlb
inc
inc
sbb
xor
cwtl
mov
xor
fwait
divl
shrb
mov
jl
cwtl
mull
arpl
clc
jle
ja
sarl
push
stos
mov
adc
and
outsl
leave
cltd
dec
sbb
fists
mov
je
push
sbb
rorb
pop
sarl
aad
mov
add
mov
test
leave
pop
xchg
lahf
out
inc
push
stc
jecxz
xchg
pop
movsb
mov
aaa
dec
pusha
push
inc
add
cld
cmp
dec
or
adc
test
loop
imul
imul
adc
daa
xor
cmp
and
adc
inc
enter
mov
hlt
repnz
mov
lret
lahf
repz
mov
cmpsl
js
test
cmp
mov
add
loop
scas
lret
mov
nop
mov
aam
loopne
fiadds
lcall
xchg
inc
outsl
fisubrl
xchg
mov
test
movsb
fcmovne
sbb
js
push
sbb
push
adc
mov
leave
cmp
pushw
inc
mov
add
aad
cmpsb
movsl
rolb
out
test
mov
stos
cmp
sbb
pop
adc
cmp
adc
jp
cmp
fldcw
add
pop
jecxz
xor
jns
imul
insb
push
push
adc
inc
je
push
test
or
shlb
in
outsl
test
fnsave
dec
daa
mov
nop
xor
movsb
inc
xchg
sub
xor
jno
pop
jmp
popa
fs
and
aaa
and
inc
negb
jp
cwtl
sub
lds
lock
aas
shll
orb
cmp
mov
mov
push
mov
push
loop
test
lock
clc
into
mov
sub
outsl
arpl
rcrb
cmp
push
hlt
inc
adc
dec
mov
inc
lods
sbbb
fwait
mov
jge
push
cmp
add
add
sahf
or
and
pop
sub
xchg
loop
add
xor
das
pop
sbb
sar
rcl
xor
and
jnp
jecxz
push
xchg
mov
jge
mov
mov
js
dec
lds
hlt
jg
lods
mov
jecxz
adc
push
jbe
mov
clc
shlb
mov
xlat
js
xor
repnz
mov
nop
sub
cmp
xchg
mov
and
iret
xchg
or
pushf
enter
mov
xor
pop
mov
dec
cwtl
ss
sub
pop
negl
cmp
jnp
iret
inc
sbb
icebp
sbb
fwait
inc
and
sub
add
leave
jae
inc
test
xor
xchg
leave
mov
inc
das
jmp
mov
inc
add
push
fcmovnbe
shlb
push
mov
pop
sbb
dec
pop
test
xor
imul
iret
mov
in
cmp
out
sub
mov
jnp
xor
stos
int3
sbb
les
fcoms
xchg
xchg
xchg
lods
sbb
adc
xchg
jg
adc
hlt
push
insb
jnp
out
inc
and
shrl
or
jge
lret
repz
dec
inc
jne
xchg
lret
loopne
orl
lock
stos
jmp
pop
idivl
add
lods
mov
cmp
je
push
push
stos
dec
inc
dec
outsb
outsl
mov
scas
sti
add
fidivrs
lods
add
inc
fmull
mov
cmp
jmp
push
ds
inc
je
push
ds
jp
sbb
aas
cld
inc
and
shll
xor
cld
andnps
shll
push
xor
mov
data16
insb
xor
xchg
and
pop
pop
push
pop
movb
fldt
mov
jge
xchg
add
addr16
lock
shll
cmp
xchg
mov
and
push
stos
ret
xchg
fdivrp
fwait
xchg
rolb
lods
jmp
push
inc
pushf
and
jnp
call
adc
in
xor
cmp
mov
mov
sets
push
ds
jg
mov
test
push
mov
dec
xorl
add
mov
inc
dec
fisttps
into
arpl
adc
test
outsl
lret
add
inc
inc
shlb
ss
scas
lret
lcall
daa
adc
mov
xchg
cmpsl
mov
pushf
pop
nop
xchg
jbe
and
addl
mov
shl
sahf
gs
ss
andl
lret
dec
push
test
movsl
xchg
jmp
jno
jl
adc
mov
jbe
test
int3
xor
jae
or
cmp
inc
les
dec
push
mov
push
mov
scas
dec
xor
mov
iret
je
ficompl
push
fnstsw
cmp
xor
scas
push
hlt
sub
or
daa
cld
push
push
adc
setge
adc
in
cmp
imul
xor
xor
mov
jno
or
xchg
jno
push
das
popa
mov
xchg
ja
lret
lret
push
cli
les
dec
pop
cmc
xor
mov
ljmp
dec
add
je
xor
fdivs
fbld
movsb
mov
insl
cwtl
mov
int
pop
adc
daa
pop
xchg
adcl
je
push
add
repnz
xor
inc
int
jmp
sarl
sub
ds
mov
dec
push
repz
adcb
dec
std
xchg
pop
lcall
lahf
mul
mov
stos
cmp
je
out
mov
fs
inc
addr16
ror
or
repz
outsb
mov
sub
mov
cmpsb
xchg
cmp
jne
sub
mov
mov
inc
les
and
data16
sub
mov
idivb
sbb
xchg
mov
mov
ljmp
int3
aaa
stos
pop
jo
testl
sbb
aaa
push
xor
loope
pop
aam
je
sbb
fcom
pusha
rorl
inc
lods
add
std
xchg
imul
adc
push
mov
idivl
xorl
andl
mov
lahf
sti
mov
data16
and
fildll
test
pop
and
out
pop
sub
leave
in
popa
jbe
jb
xor
shl
scas
push
or
mov
add
sti
fs
cltd
insb
jl
out
inc
lods
xor
adc
xor
add
dec
xor
pop
cli
xor
neg
mov
test
cmc
push
fldt
loope
push
js
push
retw
pop
xchg
jmp
mov
xchg
ret
cmp
dec
cmc
xor
in
int3
dec
and
mov
ja
in
aam
sub
xchg
and
mov
es
cmpsl
mov
ret
cld
or
dec
dec
or
lock
scas
and
and
or
add
pop
push
sahf
sub
fs
mov
xor
cwtl
sbb
sub
cmp
jmp
leave
jecxz
add
xor
sbb
cmp
jb
jg
mov
push
inc
lret
push
in
out
xchg
mov
push
push
enter
pop
sbb
dec
inc
adc
mov
test
mov
inc
jmp
xchg
pop
mov
xchg
cli
jo
fwait
mov
jle
inc
cmp
cwtl
xor
fisttpl
mov
mov
or
outsb
push
orb
mov
stc
mov
mov
outsb
call
pop
add
sbb
xchg
les
sbb
ss
pop
shr
in
and
ja
pop
and
mov
arpl
and
inc
imul
cmp
int
cmp
cld
mov
pop
lods
mov
iret
mov
mov
dec
ja
inc
pop
nop
in
inc
dec
lds
stc
nop
adc
mov
data16
mov
inc
inc
hlt
imul
push
cmp
fcomps
or
fstpl
cmpsb
call
imul
stos
inc
pushf
sub
push
scas
pop
mov
nop
push
cld
sbb
sahf
leave
lods
daa
mov
adc
mov
ret
adc
loop
inc
fistl
lret
or
loope
incb
movsl
aas
movsl
add
insb
imul
and
out
aaa
rcrl
sub
xlat
jae
rcll
out
imul
sahf
icebp
mov
aad
loope
rep
cmp
xchg
pop
aaa
push
jg
jge
inc
lret
clc
xor
cmp
cwtl
mov
sub
adc
lock
clc
push
add
cwtl
ret
adc
adc
dec
inc
add
cli
mov
adc
andl
sub
nop
loop
adc
imul
sahf
sarw
jle
jno
mov
mov
sub
inc
fisubrs
int
adc
sub
cmp
test
sahf
dec
and
sbb
test
es
cmpb
xor
stos
pop
add
xchg
adc
lret
xchg
aaa
push
pop
roll
adc
cmpsl
rorl
cmpsl
cmc
sub
sub
add
sub
mov
icebp
andl
mov
sub
and
sub
jae
jbe
and
cmp
and
adc
mov
outsl
aaa
test
add
sbb
xchg
and
push
outsl
cmpsl
jmp
movb
cli
push
arpl
cmc
cmp
aad
push
fsub
push
push
sarb
out
cltd
cmp
mov
push
xor
adcl
and
mov
jnp
inc
daa
add
add
pop
lock
adcl
rorl
out
adc
test
jmp
sbb
ss
cmp
and
mov
dec
jnp
add
dec
sub
push
pop
popa
cmp
aas
inc
xchg
jl
mov
pop
push
add
arpl
movsl
stos
inc
sub
jmp
cs
sub
int3
ljmp
xchg
pop
outsb
pop
in
fidivs
mov
ljmp
popf
outsl
adc
daa
stos
scas
mov
cmp
jg
push
pop
xor
sbb
pop
outsl
cmp
js
sbb
movsl
scas
sti
cmp
pop
xchg
mov
xor
mov
or
fisubs
inc
xor
daa
gs
dec
lock
mov
sbb
cmp
mov
rcll
in
lods
lcall
pop
pop
in
jno
push
push
xchg
cmpsl
or
cmp
stos
decb
ljmp
jmp
sbb
add
dec
pop
roll
mov
pusha
jae
xchg
push
and
sbb
sbb
adc
daa
fisttpl
ror
fstps
pop
push
pop
xor
dec
enter
imul
inc
lea
jmp
push
icebp
inc
and
insb
pop
ss
mov
pop
cmp
jns
cwtl
popf
scas
mov
lods
xor
pushf
mov
pop
inc
sahf
ret
sbb
inc
sub
mov
jae
les
jne
sbb
imul
pop
push
and
icebp
cmp
mov
ljmp
inc
pop
xchg
scas
mov
loop
test
int
push
push
bound
xor
das
mov
inc
fmuls
xchg
fcmovne
repz
or
push
std
xchg
rcrb
or
push
call
aam
cmp
fcoml
enter
xchg
insl
mov
xchg
int
imul
iret
ds
xchg
mov
mov
push
notb
sbb
ja
jecxz
xor
lret
stc
das
inc
dec
lods
stos
xchg
rol
mov
repz
and
in
jb
daa
add
cmp
std
test
in
loopne
and
and
jo
and
mov
ret
mov
rorl
int
xor
movl
out
add
int3
xor
jnp
in
rolb
js
sbb
imul
dec
mov
xchg
jl
mov
jae
mov
lods
insl
and
in
push
out
push
jnp
enter
cmp
stos
mov
dec
fidivrs
push
cmp
xchg
sbbl
in
aam
stos
and
sub
push
in
call
cmp
sti
xchg
std
rcrb
mov
push
jo
ljmp
xchg
pop
pcmpgtd
stc
popf
and
sub
xchg
cmp
xchg
ljmp
dec
flds
inc
jo
lods
mov
jecxz
pushf
das
or
aas
outsl
test
dec
push
rolb
out
pop
sub
sbb
bound
xor
fbstp
out
pushl
js
mov
dec
rorb
mov
clc
jo
jp
into
in
fadd
pop
test
scas
xorb
xchg
adc
stc
nopl
xchg
xor
cmc
lahf
inc
jle
push
jnp
ds
out
repnz
jge
or
rep
test
iret
mov
cmp
mov
inc
sub
out
xchg
scas
sub
and
push
and
into
loopne
ret
inc
push
test
in
lret
stos
das
std
push
test
das
jne
jl
sarl
and
in
lock
dec
or
mov
icebp
test
and
sbb
out
jb
adc
push
cmp
lret
aam
cltd
test
xor
jb
lods
loope
ljmp
icebp
xor
push
or
inc
addr16
add
mov
scas
cmc
dec
xor
loope
cs
mov
call
ss
aad
popa
adc
cltd
sbb
lret
dec
mov
test
and
cmp
into
mov
push
xor
jmp
or
sbb
aam
or
xor
fmull
add
sbb
fsts
rorl
aaa
pop
cmpb
roll
in
xchg
push
jmp
insb
or
add
cmp
std
push
jp
inc
pop
push
and
cltd
js
xor
nop
mov
sbb
mov
xor
out
dec
popf
fbld
xor
ja
jmp
adc
dec
push
or
push
sbb
inc
cmpsl
xchg
scas
dec
sbb
je
scas
outsl
les
mov
stos
mov
dec
xchg
pop
mov
dec
xchg
out
mov
lock
loop
inc
scas
mov
sbb
or
iret
cmp
push
pop
xchg
jp
out
call
mov
push
add
adc
mov
inc
sti
shlb
xchg
jl
clc
lods
pop
mov
xor
in
into
xchg
scas
das
int
mov
ljmp
cmpsb
int3
cs
mov
sub
into
xor
mov
sbbl
test
ret
sti
roll
outsb
aas
ret
inc
lret
inc
shr
jbe
add
adc
imul
jmp
push
pushf
sbb
fs
pop
sti
sub
ljmp
push
or
je
dec
add
and
mov
fcoms
clc
jne
lcall
loope
pop
dec
rclb
add
and
jno,pt
dec
jg
mull
pop
xor
add
popl
cld
lods
cmp
inc
xor
imul
inc
or
adc
dec
jns
adc
fcoms
fisubl
xchg
sbb
lahf
fisubrs
xor
in
adc
jecxz
pop
mov
mov
loopne
into
cli
jne
jecxz
jnp
xlat
insb
adc
and
outsl
repz
pop
aas
dec
ja
fwait
dec
add
fmuls
pop
mov
adc
out
std
js
cld
push
das
call
es
xor
mov
add
lret
jp
loop
or
in
xor
pop
inc
xchg
and
cmpsb
in
adc
clc
popa
hlt
adc
add
xor
push
add
mov
ja
popf
jnp
sbb
adc
pop
jo
cmc
sub
test
sahf
jecxz
dec
in
cwtl
or
lcall
inc
lea
aas
fisttps
je
orl
xchg
jb
jmp
sub
loop
sub
pop
repnz
adc
sub
popf
out
push
cmovg
mov
xor
pusha
ret
cmp
adc
shlb
xor
ja
inc
push
mov
dec
xorl
jne
mov
test
xor
std
rclb
push
imul
mov
dec
or
cmp
iret
je
fsubs
xchg
daa
shr
cs
jecxz
hlt
add
outsb
loope
jl
mov
jl
addr16
inc
test
ret
mov
add
pusha
fldt
mov
aaa
arpl
jg
inc
cwtl
jg
mov
mov
add
push
and
mov
jge
push
and
hlt
pop
in
add
into
pop
mov
mov
and
insl
aaa
das
xorb
jo
fmuls
addb
cld
dec
and
dec
jo
sbb
sbb
sub
shlb
pop
sbb
sub
ja
nop
repnz
dec
push
inc
push
decb
cbtw
pop
sub
pop
xchg
mov
mov
jg
mov
nop
aaa
adc
out
stos
fisubrs
iret
inc
lret
fisttpl
dec
adc
mov
cmp
imul
data16
insb
lret
mov
push
jno
push
leave
add
gs
jle
push
es
outsb
loope
adc
addr16
jle
mov
rorb
mov
out
ljmp
xor
stos
and
cmp
dec
pop
xchg
sbb
pop
mov
cmpsl
inc
pop
mov
sbb
add
pop
sub
out
xor
leave
insb
add
or
loope
mov
adc
mov
rorb
aad
mov
sahf
mov
xorb
sub
fadds
jg
adc
sub
mov
cltd
xor
mov
popa
ja
jmp
in
cmpsb
push
bnd
jo
scas
mov
add
cmpsb
xor
cmp
jmp
shr
sbb
or
es
jl
push
inc
jbe
test
dec
mov
push
outsb
arpl
cmc
adc
popf
gs
fistpl
mov
xchg
xor
fwait
mov
sbb
out
lret
je,pn
xchg
dec
jne
jo
mulps
sub
adc
xor
addb
addr16
adc
fs
lahf
shlb
sub
xor
outsb
out
ret
enter
cmpsl
pop
lahf
fwait
cmp
cmp
pop
adc
and
xchg
sbb
mov
pop
in
or
sahf
and
add
and
dec
mov
push
xor
dec
in
ss
fisubrs
jnp
cli
jb
mov
or
mov
push
sbb
and
cmpb
sbb
jl
scas
mov
movsb
out
jb
and
xchg
and
pop
call
add
lret
fcmovu
or
roll
cmp
fnstsw
shl
aas
sub
ret
pop
subl
mov
jge
cmp
xor
test
sbb
mov
jmp
inc
sbb
pop
or
inc
mov
int3
xor
xor
inc
mov
stc
shlb
xchg
cld
dec
inc
mov
insb
or
jmp
xor
adc
mov
and
dec
mov
inc
mov
mov
imul
jne
mov
or
popa
dec
ljmp
in
loop
stc
mov
xchg
xchg
and
add
lahf
stos
loope
push
push
lret
dec
roll
ret
adc
mov
add
inc
out
imul
imul
mov
mov
mov
jmp
mov
stos
inc
test
loopne
sub
mov
push
leave
shlb
adc
xchg
jmp
pop
movsl
xor
mov
sbb
gs
adc
jge
xor
sbb
or
imulb
inc
adc
push
cmp
sub
cmp
inc
mov
out
add
adc
mov
lods
rcrl
cltd
push
xor
sbb
or
cmp
mov
pusha
mov
pop
mov
fwait
push
bound
fdivp
inc
cmpsb
test
adc
xchg
mov
adc
scas
test
fisttpl
push
jge
inc
push
ja
fistpll
adc
movsb
cltd
repnz
or
or
arpl
push
xor
mov
mulb
or
jge
jno
fdivrs
mov
notb
mov
fnstenv
mov
fcoml
fstps
call
scas
das
adc
popf
mov
dec
inc
inc
aas
xchg
mov
movsb
dec
push
mov
je
push
and
push
pop
cwtl
mov
add
push
jbe
addr16
nop
pop
sbbb
xchg
lds
sahf
dec
cmp
loope
es
outsb
outsl
and
mov
cmc
mov
clc
dec
mov
stos
push
mov
ds
nop
leave
push
adc
mov
fists
sub
mov
mov
std
or
ja
and
push
aad
or
sahf
mov
pushl
jg
movsl
enter
repz
sbb
mov
insb
je
jmp
inc
test
outsl
xchg
cmp
xchg
pop
adc
rcrb
push
repz
fisubs
repnz
sub
push
adc
in
ret
push
sahf
add
mov
scas
push
jb
inc
cmp
stos
das
inc
push
std
push
sti
push
xor
enter
jg
lahf
lret
jge
sub
add
cmp
dec
outsb
xchg
xlat
cmp
mov
inc
imul
rcll
jl
popf
dec
sub
enter
dec
hlt
cmpsl
rolb
cwtl
jnp
adc
stos
pop
test
cltd
lret
pop
test
and
add
adc
jle
or
aas
push
ret
ror
cmp
add
and
loop
mov
pop
or
sarb
cwtl
mov
dec
jp
cld
aam
jo
repz
mov
stc
push
shl
sbb
sub
jbe
sub
sbb
add
call
pop
pop
sbb
subl
notb
arpl
push
stos
sbb
jno
pop
loope
xchg
jge
xchg
sub
mov
pusha
or
mov
cmp
stc
inc
jne
hlt
and
cmp
lods
jecxz
imulb
cmp
fadd
das
dec
add
aaa
or
scas
lods
sbb
dec
cltd
test
sbb
and
sbb
or
lods
or
gs
outsl
ss
dec
in
enter
inc
inc
inc
shl
push
sbb
push
fnstsw
stc
cmpsb
sbb
push
sub
lret
adc
mov
rcrb
stos
lock
das
aad
jb
mov
cmp
ss
mov
movsb
fyl2x
insb
in
lods
sub
shlb
mov
adcl
push
cmp
adc
jl
stc
add
std
loope
stos
cmp
mov
iret
cmp
aaa
xchg
clc
imul
test
in
data16
sbb
or
std
mov
rorb
in
mov
xchg
mov
ljmp
addr16
vpmacssww
das
cmp
or
or
out
ss
xchg
int3
and
jmp
fidivs
icebp
fsub
or
insb
addr16
jp
and
cmp
cmp
cs
or
aas
push
leave
add
inc
cltd
fst
rolb
dec
push
lcall
lds
cli
lods
fistpl
jg
outsb
add
and
fiadds
scas
popa
push
mov
es
repnz
inc
xchg
pop
jae
adc
xorl
or
in
insb
xchg
pop
sub
pusha
pop
rcll
mov
xor
mov
shll
push
pusha
lds
sub
outsb
mov
movsb
rorl
jns
mov
out
dec
je
mov
push
mov
mov
imul
pop
sbb
sub
pop
sarb
inc
mov
xchg
js
jno
repnz
dec
dec
inc
sbb
push
mov
sub
imul
mov
sub
lcall
and
inc
sbb
mov
push
in
int
adc
aam
add
sbb
shr
and
leave
adc
in
mov
stc
add
addb
xchg
sahf
nop
sbb
xchg
cwtl
loope
push
rep
data16
jae
cli
les
lret
cmpsb
xor
movntps
jmp
push
mov
mov
mov
mov
aaa
and
mov
in
push
mov
mov
les
iret
rol
outsb
les
add
or
ret
pop
inc
mov
lods
adc
mov
shlb
inc
shlb
mov
fists
fsubp
scas
xlat
push
repnz
mov
dec
jbe
xchg
sahf
pop
daa
dec
js
test
mov
lea
dec
inc
sub
inc
jne
add
int
pop
out
stos
rcr
or
adc
imul
aas
in
subl
leave
les
pop
jbe
cld
rcrb
or
nop
fabs
stos
sub
inc
pop
dec
rcrb
push
hlt
shrb
mov
fs
mul
hlt
jbe
pushl
and
call
pop
out
fidivrl
xchg
leave
jl
xchg
lretw
cmp
jo
and
mov
in
cld
mov
jns
out
out
dec
test
adc
lea
jbe
jp
mov
leave
sbb
mov
or
sahf
fcmovnu
and
push
push
sbb
stos
sar
mov
int3
adc
xor
dec
stc
xchg
int3
and
mov
mov
sub
movsb
mov
xor
push
test
adc
mov
push
push
sub
les
cltd
out
dec
xchg
mov
movsl
shrb
sbb
xchg
mov
test
push
movsb
std
lock
mov
push
mov
sub
push
aad
lcall
aad
test
dec
test
iret
arpl
iret
sub
sbbl
lahf
shll
fucom
push
roll
cli
or
cmp
out
stc
mov
mov
shlb
imul
test
cmpsl
call
cmp
cli
je
xor
push
insb
fisubl
pop
lret
xor
enter
das
jb
lock
pop
fadds
xchg
mov
xchg
and
adc
xchg
mov
insb
inc
es
imul
xlat
in
fcompl
stos
jbe
into
dec
xchg
jge
stos
push
mov
adc
xchg
out
mov
mov
add
push
lahf
aam
popf
idiv
stos
jl
adc
mov
jne
mov
jp
cmpb
cmp
jp
sbb
pushf
shll
push
ret
and
out
dec
js
cmc
jmp
sti
rcl
fildl
xor
inc
mov
fisttpl
int
imul
movsl
pop
shll
jl
adc
xor
sahf
push
sub
outsl
icebp
lea
adc
mov
cltd
inc
or
pop
add
ljmp
movsl
dec
orl
test
push
mov
add
sub
test
mov
cmpsb
rcrb
fsts
sub
inc
loopne
in
inc
or
sub
inc
xor
lds
addr16
lock
mov
inc
jp
stos
fisubrs
repnz
xor
sbb
stc
out
jnp
adc
mov
mov
popa
outsb
shrl
jecxz
popa
shll
adc
xor
in
xor
xchg
js
mov
cmp
lods
dec
lcall
daa
xchg
xchg
icebp
mov
setb
push
pop
cwtl
push
rorb
pop
push
gs
cwtl
pop
push
sub
mov
push
idivl
cmpsb
add
in
add
jl
cltd
stos
mov
jmp
int
test
sbb
adc
cli
jmp
mov
push
out
imul
das
cmp
aas
js
push
es
inc
jbe
ds
adc
and
or
adc
adc
dec
pop
adc
arpl
in
addl
into
sub
sbb
in
pop
mov
ret
dec
fsubrl
test
out
adc
pop
out
mov
hlt
push
mov
dec
pusha
mov
lcall
mov
imul
and
or
mov
push
mov
ja
sub
jb
arpl
sbb
and
es
in
lahf
cmp
aas
mov
jae
push
add
ss
or
mov
lcall
inc
aad
cmp
cmp
rcrl
dec
jecxz,pn
xchg
sub
in
adc
gs
xchg
dec
or
fcmovbe
or
dec
shl
pop
setbe
clc
call
scas
scas
sbb
dec
jns
sbb
gs
lods
les
mov
stos
bound
xchg
adc
inc
sbb
push
scas
test
sub
fcmovbe
dec
mov
enter
dec
in
ja
insl
xchg
fsubrs
sub
push
cs
push
xrelease
repz
cmp
cmp
jo
jno
nop
mov
lahf
in
mov
sub
ror
pop
pop
pop
mov
popa
jl
xor
pop
sbbb
iret
inc
add
mov
inc
and
bound
jg
mov
pusha
daa
pop
es
sarb
je
aam
adc
retw
fistpll
mov
fcmovnu
nop
adc
test
in
jbe
das
push
outsl
jecxz
dec
xchg
ds
roll
test
xchg
mov
test
je
push
cmp
out
out
mov
gs
mov
dec
sub
mov
lds
jmp
xchg
arpl
daa
sahf
rolb
jle
cld
fsubrs
inc
jp
xchg
addr16
mov
dec
add
inc
lret
pop
in
js
lock
sahf
cli
cmc
inc
out
shll
loopne
push
xchg
repz
subb
ljmp
xor
std
aaa
es
ss
inc
lret
nop
in
push
arpl
mov
into
and
dec
fxch
xor
push
add
xor
sub
and
iret
mov
mov
push
in
sub
jbe
or
push
mov
fstl
push
mov
jg
insl
int
mov
cmp
das
xchg
repz
mov
pushf
test
pop
cmp
xor
aaa
addr16
loop
sti
mov
xchg
xchg
and
mov
dec
mov
std
dec
add
push
dec
roll
sbb
aad
cmp
shl
inc
lods
sarb
sahf
cwtl
mov
adc
sbb
cmpsl
outsb
cltd
imul
gs
cs
rorl
jae
dec
out
das
pop
nop
sbb
movsl
test
sahf
ss
in
scas
xchg
adc
mov
cwtl
dec
and
push
mov
mov
gs
sub
mov
pop
cs
stc
imul
cli
and
scas
stos
loope
add
sbb
test
push
sbb
inc
mov
mov
xchg
mov
jo
aaa
and
adc
scas
xor
popa
arpl
inc
scas
add
call
xchg
lock
push
lods
and
inc
pop
fldt
jmp
sub
in
scas
mov
test
aam
in
aam
repnz
add
jge
addr16
dec
sahf
dec
add
lret
test
sbb
xor
push
test
cli
lods
mov
sub
and
sti
xchg
jmp
mov
add
loopne
fsubs
fwait
cmp
ficompl
cmpb
pusha
test
mov
pop
aam
fstl
enter
jl
mov
enter
mov
xor
jno
movb
pop
xchg
jnp
mov
das
sub
sbb
incb
sbb
shlb
nopl
or
jo
test
jno
dec
in
mov
mov
leave
mov
xor
or
jo
dec
sbb
bnd
cmp
and
mov
or
loope
pop
cmp
jae
ljmp
add
sarl
or
loope
je
fstps
pop
mov
lret
mov
push
subb
test
inc
push
insl
das
mov
into
cmpsl
lods
shrb
pop
mov
pop
push
xchg
pop
fwait
dec
stos
adc
lret
stos
jmp
cmp
or
nop
mov
das
fmull
sbb
pop
xchg
fisttpll
loope
js
dec
adc
jbe
adc
mov
sub
mov
lds
mov
insl
and
test
or
inc
jns
or
adc
push
out
cmp
or
adc
decb
sub
not
out
adc
dec
xor
jecxz
loopne
jp
sbb
jno
pop
je
enter
inc
ljmp
push
adc
jno
cmpsl
dec
mov
dec
push
inc
sbb
or
cmpsb
inc
das
add
mov
das
in
cmpsl
add
aam
jae
pop
enter
xchg
es
push
mov
pop
loopne
sahf
pop
mov
or
jg
xchg
adc
lahf
ret
outsb
out
fnstenv
xlat
jge
inc
jle
inc
xchg
repz
pop
sbbb
mov
iret
std
sar
mov
jle
push
jnp
aaa
stc
mov
xchg
xor
test
in
dec
mov
and
arpl
jo
je
pop
loopne
jo
mov
inc
test
pop
inc
test
subl
jbe
scas
adc
sbb
dec
out
mull
inc
sbb
cmp
jns
gs
mov
adcb
push
add
stos
lds
insb
negb
sbb
mov
inc
push
pop
xchg
pushf
pop
sbb
aam
dec
andl
mov
pop
dec
sbb
fldl
roll
or
dec
mov
mov
jmp
daa
xchg
dec
adc
jbe
add
cmp
and
lods
and
cmpl
mov
and
lret
data16
cmp
dec
cmp
call
inc
xchg
data16
add
push
cmove
inc
and
jl
cmp
jge
dec
jp
jne
add
sbb
lret
mov
mov
lds
sbb
pop
and
mov
and
pop
out
mov
mov
cmpsb
icebp
scas
sbb
dec
or
in
insb
mov
rcll
insb
add
addr16
pop
dec
xor
or
or
into
jne
scas
mov
enter
mov
mov
sub
jg
int3
shlb
testl
xchg
pop
mov
movsb
and
jo
shl
test
out
fisubs
or
or
ficompl
mov
rcrb
dec
dec
rol
mov
ficompl
mov
insl
mov
mov
xchg
xchg
push
sbb
out
jno
sahf
mov
adc
xor
cmp
xchg
inc
ret
push
jg
mov
mov
loope
iret
das
dec
inc
cmp
stos
fisubrs
jge
mov
inc
add
in
lret
mov
mov
xor
negl
in
mov
nop
and
cld
ja
inc
mov
adc
in
lods
add
mulb
pop
cmp
xchg
pop
jl
jno
rcr
loope
jl
mov
sub
push
sti
xor
es
in
sbb
add
add
mov
pop
fs
add
mov
popf
pmullw
gs
inc
pop
imul
jns
out
lahf
cmp
lahf
mov
sub
xchg
xor
stos
pop
mov
jle
jmp
out
call
add
fnstsw
aad
test
lds
xor
aaa
push
xchg
repnz
pop
scas
inc
imul
mov
out
stos
fsubp
jo
cld
mov
mov
cmp
sub
call
ret
mov
mov
cmp
mov
fcomps
cmp
movsb
xchg
add
xchg
fbstp
sbb
jle
bound
mov
push
mov
stc
and
push
lds
cmp
or
and
aad
cmp
orb
out
xchg
add
prefetcht1
push
inc
xchg
xchg
cmpsb
xor
stc
dec
jnp
leave
mov
pop
mov
daa
dec
xorb
cmp
xchg
daa
jge
cmp
in
dec
in
addl
cmp
inc
outsl
xchg
js
or
aas
pop
ret
add
jae
xor
push
push
popl
sti
inc
cli
add
mov
test
arpl
loopne
mov
and
ds
xchg
pop
mov
fdivrl
arpl
xchg
in
xchg
out
inc
sahf
setp
push
lods
mov
out
in
xchg
out
je
push
cmp
das
mov
jno
adc
lods
inc
mov
push
fcoml
or
sbb
enter
in
dec
mov
xor
fsubs
inc
jp
and
and
sub
lds
or
dec
or
das
xbegin
out
push
mov
ret
push
add
inc
xorl
lret
iret
les
cmc
cmc
mov
mov
ljmp
xorb
and
test
mov
lret
jg
sbb
call
stos
cmpsb
dec
jne
stc
ret
cs
sbb
shll
imul
sub
fcompl
xor
clc
jne
adc
inc
jae
cmp
adc
add
dec
fisubl
std
aam
dec
lret
xchg
mov
and
movsb
jb
adc
add
and
stos
xchg
out
add
lcall
ret
sbb
pop
std
push
sub
lods
or
xchg
push
push
pop
and
jmp
and
and
fsub
sbb
or
leave
out
xor
incl
add
pop
sbb
mov
jb
xchg
jl
loop
jbe
out
xchg
add
lcall
call
pop
cwtl
jge
inc
pop
repnz
adc
clc
rcll
mov
fldl
leave
sub
mov
imul
adc
out
cmp
xchg
gs
adc
insb
or
push
push
pop
sbb
and
imul
call
mov
cmc
xlat
push
add
inc
push
rclb
cwtl
and
xchg
sbb
ret
xor
xor
xor
mov
xor
sbb
cmpl
not
xor
push
mov
dec
mov
fs
ficoml
fcoms
test
add
loopne
fistl
push
mov
insb
inc
mov
push
inc
mov
cli
rorl
adc
xchg
xrelease
shlb
mov
dec
flds
call
xor
clc
in
out
inc
fldl
xor
shlb
es
or
repnz
sti
das
lods
xor
push
or
xlat
add
sbb
mov
jp
adc
ljmp
popa
enter
incb
shrl
pop
sbb
out
rol
call
out
xor
daa
push
push
xchg
xchg
inc
les
leave
cmc
xchg
decl
pop
push
fs
pop
add
in
gs
rorb
ds
push
and
dec
cmc
icebp
addr16
insl
in
in
lret
or
cmp
fnstsw
jg
movsb
call
mov
mov
into
fdivrs
pop
fcmovbe
mov
aam
cli
xchg
cmp
mov
or
pop
out
mov
push
mov
mov
cmp
sti
cmp
and
pop
nop
notb
lds
xor
jo
or
movsl
ret
xchg
and
rorl
in
rcrl
call
ret
mov
push
cmp
lcall
mov
jns
out
mov
jae
mov
gs
mov
in
shl
js
mov
mov
imul
inc
jne
pusha
call
and
mov
imul
leave
and
shrb
jl
mov
clc
adc
xlat
jnp
inc
insl
mov
lea
ja
mov
movsl
ljmp
pop
add
shlb
jbe
xor
inc
in
scas
shll
lods
add
mov
push
adc
das
int
subb
test
lods
movsb
dec
adcb
jl
xor
xchg
add
int3
lea
stos
leave
test
repz
adc
mov
add
scas
aaa
cld
push
sbb
sub
add
pop
pop
add
fucompp
icebp
mov
jl
dec
lea
xor
mov
xchg
push
aam
fs
mov
fwait
in
fisubrs
arpl
jmp
rcrl
jge
adc
lea
cmp
negb
ss
inc
imul
dec
sbb
mov
mov
cltd
inc
inc
rclb
sbb
loope
ret
out
shl
sub
xchg
sbbl
xor
test
xchg
mov
sub
xchg
xchg
push
aas
add
push
not
in
stos
popf
int3
cmp
sub
call
js
cmp
cmp
shrl
or
pop
icebp
adc
cmp
mov
lss
pop
and
cli
push
movsb
xor
pop
pop
das
sbb
xchg
jle
jp
push
inc
mov
aam
jbe
mov
enter
jg
xor
add
daa
mov
out
jbe
cmp
dec
scas
xor
into
sub
pusha
pop
and
aas
jmp
cmp
push
aas
push
popl
push
inc
xchg
dec
push
xlat
notl
mov
es
movsl
sahf
xchg
into
orl
testb
pop
adc
xlat
add
outsl
fcompl
lds
dec
xor
adcl
gs
push
fsubrs
push
cli
addr16
lods
sub
push
jl
in
movsl
pop
int3
mov
add
mov
jg
inc
mov
dec
fisttpl
xor
jp
enter
cmp
call
adc
jp
test
cmpsl
jno
mov
jge
in
lods
testl
ja
xchg
movsb
sbb
xchg
movsb
pop
cmc
push
push
push
repnz
xorl
inc
ffree
jmp
and
daa
sbb
dec
ds
ss
arpl
ret
pop
mov
pop
or
pop
or
inc
jle
push
imul
push
mov
mov
push
mov
pop
jecxz
or
add
mov
adc
popa
push
jno
jp
jnp
fsubrp
adc
aam
push
jmp
mov
push
xchg
adc
mov
mov
mov
sbb
mov
jge
mov
add
ja
fmulp
inc
jb
adc
xchg
enter
stos
in
push
xchg
and
or
jb
pop
repz
ljmp
xor
inc
ja
fistpll
rcl
cltd
jo
mov
test
loop
test
inc
sti
dec
sub
into
or
pop
jb,pn
hlt
pop
sarl
fsubs
fisubs
mov
test
dec
mov
mov
push
es
imul
imul
adc
loopne
xor
lret
fadd
jle
cmp
mov
and
lea
insl
aas
and
into
pop
or
bnd
or
xchg
jbe
loop
shl
shll
inc
mov
out
popf
adc
mov
jo
stos
push
mov
pop
sbb
repz
push
inc
push
push
adc
ffree
out
push
sbb
test
sbb
mov
adc
dec
sub
inc
fisubl
and
inc
fbld
movsb
in
mov
cs
or
movsl
push
ljmp
jo
inc
mov
int
pop
cmp
fidivs
or
bound
fsub
call
cli
jecxz
decl
mov
inc
and
mov
loop
adc
fisttpll
lret
push
leave
push
sub
gs
mov
adcl
movsb
lret
fs
jo
xchg
mov
jmp
repnz
xor
loopne
inc
sbb
out
and
mov
out
dec
fdiv
fwait
jl
sahf
les
push
pusha
aas
and
jne
xchg
and
push
and
fcomp
pop
cltd
mov
jmp
lea
push
in
jne
sbb
clc
fisttpl
or
push
inc
adc
inc
pop
pop
mov
xchg
add
jl
rcrb
rclb
pop
aas
into
scas
lcall
jae
sub
or
adc
jge
loop
mov
mov
icebp
sti
pop
jae
pop
mov
lock
gs
dec
scas
xchg
xor
jns
or
cmpsl
repnz
xor
dec
pop
cld
xor
gs
fldenv
mov
sbb
dec
jmp
xchg
stos
int
mov
loop
mov
pop
push
outsl
adc
pop
mov
pushf
ret
and
shrl
mov
add
mov
orl
fxch
jb
lea
jae
movsl
pop
repnz
lcall
jne
fdivs
jae
mov
adc
or
gs
mov
inc
mov
popf
scas
or
lahf
jne
cmp
pop
jg
test
mov
stc
popa
movsl
jmp
sub
or
stos
arpl
jne
movsb
jne
sbb
repnz
outsb
sub
lahf
adcb
push
loope
mov
scas
rcrb
outsl
pop
or
adc
pop
and
pushf
loope
push
dec
fcmovbe
ret
inc
mov
out
cli
aam
add
mov
push
aas
add
push
lock
or
mov
stos
sub
push
ljmp
icebp
mov
dec
mov
pop
out
lret
mov
sahf
ret
mov
faddl
popa
cmp
scas
jo
ss
mov
sbb
jns
push
pop
scas
adc
mov
leave
cmc
xchg
or
or
test
jp
lods
mov
inc
add
pop
mov
lret
clc
icebp
divl
ljmp
inc
mov
lret
scas
push
stos
sbb
xchg
movsb
inc
or
sahf
xor
jns
gs
pushf
add
mov
xchg
ret
outsl
inc
cmp
lea
lcall
imul
pop
jge
jge
push
jns
fwait
iret
or
add
fdivrp
add
divb
mov
aaa
popa
xor
rolb
hlt
pop
inc
mov
adc
pop
cld
mov
adc
in
sbb
adc
fbstp
xchg
loopne
cmc
jecxz
jecxz
pop
imul
cwtl
push
xchg
lahf
jmp
cmc
xchg
mull
fildll
or
sub
mov
loopne
add
das
lret
test
test
stos
daa
jne
jge
add
sbb
rcll
or
xchg
shll
xchg
mov
sub
cmp
mov
sub
or
pop
add
out
mov
mov
scas
dec
xchg
faddl
fs
push
pop
jns
rclb
icebp
push
sbb
pop
dec
cltd
out
xchg
jmp
push
mov
mov
das
pop
push
addr16
cmp
mov
jnp
adc
rolb
cld
insb
mov
sbb
lock
jge
xchg
or
je
mov
fwait
ljmp
sub
cltd
inc
and
data16
imul
sahf
loop
push
js
jb
loope
in
and
orb
mov
mov
xor
shl
movsb
push
ljmp
pop
cmp
inc
popf
cmc
push
ss
popf
mov
sub
mov
push
pop
dec
sub
mov
jns
sbb
inc
jmp
push
loop
dec
jg
in
aaa
in
out
push
lret
lcall
cmp
lods
sub
divl
fistps
stos
xor
shrb
sbb
das
push
dec
mov
cmp
and
mov
mov
cmpsb
icebp
inc
dec
xor
pop
pshufw
push
lods
notb
xchg
jnp
ds
push
adc
inc
jno
js
loop
ds
xchg
jbe
out
ss
subb
pop
cmpsl
lret
inc
cmp
adc
jl
mov
rcr
fidivs
inc
mov
lods
xor
or
rorb
jg
hlt
mull
je
and
scas
sub
jmp
stos
lods
mov
push
call
xchg
inc
mov
sbb
inc
inc
jns
daa
cmpsl
fs
lea
arpl
pop
mov
push
pop
sbb
cmp
adc
in
and
xchg
jle
xor
iret
pop
fistpll
cli
push
or
cmp
cmc
add
mov
ljmp
inc
aaa
add
mov
jae
xchg
bound
popa
clc
ljmp
or
xorl
jecxz
cli
fdivrl
xor
int3
shl
xchg
push
add
jp
out
leave
fsubs
cmpsl
add
rol
pop
adc
rcrl
pop
push
dec
pop
jmp
or
scas
jnp
push
stos
test
mov
and
dec
push
sub
outsb
xor
subb
lea
xchg
cmp
cmp
leave
cld
fidivrl
mov
add
les
or
jp
dec
jnp
lock
daa
lods
push
jb
int3
inc
and
daa
xchg
mov
push
push
popf
xorb
cltd
bound
cmp
push
xor
cli
mov
loop
sub
fcmovb
mov
lcall
jmp
xor
loope
scas
mov
orb
xchg
cltd
jns
add
in
iret
sbb
andl
fpatan
mov
outsb
mov
xlat
das
jmp
add
and
scas
push
xchg
movsl
cmpsb
pop
push
push
sub
pushaw
gs
lds
idivb
pop
out
mov
xor
test
push
sbb
cmpsl
hlt
xor
cmpsb
mov
loope
fstpl
xor
in
mov
cli
cmp
fistpll
pusha
jle
cmp
pop
in
adc
mov
out
push
and
pop
inc
mov
int
inc
cmp
sbb
mov
es
push
leave
das
ds
cmp
jae
inc
mov
lock
sbb
xchg
inc
imul
mov
mov
ret
cmp
insl
pop
cmc
mov
dec
lods
dec
das
stos
lcall
mov
test
mov
in
dec
pushl
pop
inc
incb
add
sti
insb
cmc
dec
mov
jnp
sbb
jge
data16
pop
testb
adc
cmp
cld
ja
dec
orb
pop
sbb
clc
rcrl
and
lods
outsl
movsl
xor
shll
adc
pop
mov
mov
pop
outsl
inc
pop
cmp
add
sub
aam
jp
sbbl
addb
fxch
test
lods
sbb
push
mov
inc
mov
pop
pop
pop
mull
bound
lahf
call
adc
mov
lea
xchg
loope
repz
movsl
lret
and
xchg
addr16
scas
lods
js
pop
cld
or
les
mov
repnz
mov
mov
repnz
in
scas
mov
shrl
loope
jg
rcll
cld
pop
loop
in
outsb
int
cmp
outsb
push
add
pop
fstl
or
mov
or
sbb
std
and
mov
push
xchg
xchg
divl
xchg
js
push
mov
inc
jo
mov
xor
add
dec
not
mov
dec
rorl
mov
mov
data16
mov
mov
pusha
loop
xchg
sbb
mov
cmp
adc
jp
mov
and
cmp
xor
xchg
insl
dec
inc
mov
lret
popa
outsb
stos
sbb
jns
sti
mov
loop
sbb
pop
mov
inc
in
loopne
jecxz
into
and
out
hlt
mov
pop
mov
dec
fstp
push
push
inc
in
dec
ret
mov
cmp
push
mov
pop
lds
icebp
movsb
push
jge
hlt
xor
sets
insl
push
xchg
lods
lcall
into
push
mov
in
data16
cltd
push
jp
frstor
in
dec
xlat
mov
jg
scas
dec
add
imul
xchg
pop
cld
jnp
aam
pop
sbb
cwtl
in
les
dec
aam
ss
push
sbb
inc
push
sbb
mov
shl
mov
sub
test
cmp
inc
adc
dec
cmp
cltd
ja
popf
mov
mov
insb
and
push
rcll
popa
and
sbb
sarl
icebp
sbb
push
jp
int3
and
int
sub
scas
insb
cli
in
adc
inc
push
mov
xchg
fstpt
aad
popf
dec
outsb
push
stc
shlb
inc
jne
mov
sub
adc
mov
orl
push
jmp
jge
jl
outsb
mov
cmc
cmpsb
sbb
xchg
adc
pop
cmc
add
out
sbb
iret
jo
push
inc
dec
mov
dec
jle
aad
mov
push
outsb
push
in
js
cld
imul
test
test
or
je
mov
dec
imul
sbb
cmp
clc
enter
fmull
jne
in
fxsave
lds
add
push
adc
ret
jle
push
add
ficompl
xor
mov
rcrl
shlb
cmp
add
mov
cmc
nop
ds
pop
inc
jmp
decl
scas
and
adc
rcl
xor
dec
dec
xchg
dec
sbb
and
ret
in
sbb
push
pop
pop
lea
or
adc
dec
cmp
xchg
sub
jno
or
call
mov
mov
cmpsb
ljmp
xor
popa
clc
cmpsb
ret
mov
mov
xor
xor
addr16
lods
mov
dec
dec
lds
lahf
mov
fucomp
data16
out
xchg
int
call
mov
popf
mov
cltd
mov
lea
dec
mov
mov
push
bndldx
adc
lahf
push
xor
push
hlt
dec
addr16
out
movsb
mov
jbe
sub
mov
push
or
mov
cltd
test
jo
sub
push
int3
lods
lret
sbbb
inc
mov
cli
cmc
xchg
pop
call
popa
push
adc
clc
test
clc
or
cmpsl
or
daa
xchg
xchg
push
loopne
xor
lock
sub
push
sub
ret
ffreep
add
xor
dec
out
lcall
mov
or
shr
mov
jno
fcmovb
cmp
aaa
dec
fsubl
mov
fcmovbe
out
jg
mov
mov
test
add
aaa
jae
orl
leave
push
jns
pop
cmc
mov
bound
xchg
testb
mov
cmpsb
xchg
jg
leave
shlb
fs
mov
adc
scas
pop
cmp
xchg
ret
adc
das
dec
das
out
sub
xlat
pop
sti
dec
dec
rcrb
pop
xor
pop
mov
push
sbb
push
in
and
adc
xor
xchg
mov
mov
fstps
jb
pop
dec
jae
sub
cmp
stos
arpl
scas
or
rcr
je
int3
ss
and
loop
push
je
ds
pusha
mov
dec
mov
out
popf
out
adc
inc
adc
lods
sbb
int
sub
mov
add
xchg
pop
sub
imul
xor
stos
das
out
xchg
stos
and
mov
mov
push
mov
pop
push
cmp
add
fs
rorl
bound
dec
ret
movsb
add
lods
adc
mov
das
sti
add
mov
scas
push
movl
jns
xchg
test
cmc
xchg
fldcw
mov
test
cmp
sub
push
jmp
int3
mov
cmp
test
xor
ret
inc
popf
dec
pusha
mov
popa
jno
sbb
insl
enter
cmp
mov
leave
testl
fldcw
loopne
insb
pop
in
scas
cmc
inc
inc
test
stos
cmp
adc
fs
adc
jecxz
lds
addr16
clc
cmovno
sbb
jg
mov
dec
jge
inc
addr16
jns
clc
stos
sti
ret
push
push
inc
call
mov
mov
or
repz
call
mov
scas
imul
xor
pop
stos
mov
mov
orl
sub
shll
mov
sti
lods
mov
cmpsb
cmp
lods
sbb
sti
jmp
xor
shl
sbb
jbe
mov
xlat
std
icebp
jle
les
jno
pushf
je
addb
leave
popf
mov
jno
mov
aas
lahf
inc
mov
outsl
test
sbb
aam
sbb
aad
inc
lds
sub
repz
movsl
sbb
jo
jnp
ficompl
adc
inc
std
imul
dec
test
add
scas
daa
mov
bound
mov
jb
bound
dec
ss
scas
test
cmp
gs
mov
icebp
js
mov
arpl
lods
fwait
addr16
mov
fldcw
pop
arpl
int
jb
jmp
or
into
out
in
jb
int
jp
add
inc
sti
fchs
jle
outsl
dec
fidivrs
mov
add
dec
add
mov
xor
scas
sub
cmpsb
push
iret
push
mov
push
cwtl
leave
dec
lret
into
mov
es
xor
jp
push
push
data16
push
jns
repz
dec
lods
inc
jmp
add
jmp
push
mov
inc
add
jbe
ret
adc
inc
mov
adcl
mov
xchg
daa
rcll
cld
ljmp
ljmp
mov
mov
push
and
shrl
hlt
ficoml
mov
dec
nop
movsb
shlb
adc
and
mov
cmp
in
jnp
outsl
ficomps
jne
jmp
add
addr16
stos
cmp
dec
mov
cmp
aad
std
push
sbb
inc
movsl
dec
xchg
ljmp
dec
or
or
lock
call
andb
lahf
call
popa
outsb
int3
out
sub
aam
js
dec
mov
push
js
add
movsl
mov
push
fmuls
sub
mov
shl
fs
dec
test
leave
push
cmc
not
xchg
inc
xchg
or
mov
jnp
bound
cmc
xchg
test
inc
sarb
adc
and
out
scas
movsl
and
pop
xchg
sub
popf
sub
push
mov
call
and
scas
cmpsl
mov
orl
adc
test
xchg
imul
int3
mov
pushf
xchg
outsb
inc
push
inc
xchg
adc
inc
fst
shlb
inc
cmp
rolb
jae
in
sub
cltd
jmp
xor
push
push
addr16
insl
cs
push
iret
pop
cmp
jno
cmp
xor
aam
subl
int
or
rep
xchg
subl
imul
mov
rcrl
cmpsl
out
xor
sub
fnstcw
fwait
xlat
sbb
mov
sbb
xchg
mov
movsl
push
sbb
or
jbe
sbb
in
pusha
cmpsl
repz
pop
enter
sti
int
inc
or
inc
or
mov
mov
popf
and
mov
or
inc
sub
pop
or
cmp
cmp
insb
imulb
fstl
add
cmp
insl
xchg
ljmp
dec
pop
icebp
mov
sbb
add
fs
out
mov
imul
cwtl
ds
dec
cmp
pop
add
outsl
cmpl
add
dec
loopne
aam
dec
ss
xchg
jne
pop
or
subb
inc
addr16
jo
das
jl
pop
pusha
xchg
int
mov
mov
outsl
aaa
or
cmp
sbb
dec
sbb
and
and
stos
xor
xchg
sbb
iret
xor
sub
cmpsl
or
inc
or
mov
inc
cltd
clc
mov
fiaddl
hlt
pushl
fwait
xchg
std
clc
lock
pop
loope
gs
mov
ret
hlt
jp
xchg
xchg
mov
icebp
pusha
rcll
adc
adc
adc
push
std
pop
sbb
mov
add
movsb
push
or
ds
xchg
adc
dec
jnp
cmpl
xchg
dec
add
sub
cs
gs
push
jns
adc
adc
call
imul
mov
mov
pushf
mov
push
mov
loop
shl
xchg
push
cmpsl
dec
lret
dec
cmp
pop
es
int
sbb
pusha
insb
mov
int3
orb
sub
das
and
and
dec
mov
lods
ss
inc
in
pusha
fstps
xchg
sbb
inc
aam
push
xchg
mov
push
pop
xchg
aam
mov
cld
mov
xor
sbb
jle
adc
jb
mov
rcrb
cmpsl
mov
jge
mov
cmc
pop
cmpsb
out
int
out
mov
dec
mov
mov
lret
imul
lds
rorl
pop
pop
int3
clc
xor
test
add
pop
andl
jmp
push
cmovs
jecxz
xchg
fwait
push
repnz
ja
ficoms
inc
clc
aas
add
scas
sbb
repnz
inc
mov
iret
ja
outsb
inc
xor
in
call
mov
jmp
or
ret
sahf
xchg
pop
xor
jne
adc
jp
arpl
mov
jbe
jle
mov
fisubrl
sti
pop
pop
xchg
fiadds
jnp
sbb
xchg
or
push
add
lods
sbb
fldenv
mov
fcomps
xchg
dec
push
je
cs
adc
dec
iret
and
pop
pop
and
fs
and
inc
mov
sub
mov
sub
int
xchg
xchg
pusha
loopne
int3
pop
lea
inc
or
in
icebp
filds
ss
jmp
mov
adc
clc
jmp
and
xor
and
adc
sub
inc
jmp
mov
xor
jns
xchg
cwtl
les
vcvtdq2pd
inc
pop
cmp
and
push
test
mov
mov
testl
pop
xor
pusha
loope
incl
repz
gs
orl
inc
pop
cmpsl
jmp
jl
sub
sub
lcall
and
rcrl
add
xchg
fcoms
sbb
xor
inc
mov
lds
jmp
xchg
mov
out
fldl
fisubl
jge
or
jmp
sbb
aam
lock
sub
mov
xlat
in
jl
mov
subl
icebp
adc
daa
scas
xor
xchg
decb
cmp
scas
mov
adc
mov
dec
mov
rcrb
jp
sbb
ds
push
add
loop,pt
push
lcall
mov
xor
test
nop
mov
call
imul
inc
enter
adc
mov
out
fistpll
pop
test
push
leave
add
inc
test
push
or
dec
mov
jge
mov
mov
or
or
cmp
sub
adc
ficoml
cmp
das
push
ret
ja
addr16
scas
jo
sub
fdivrl
xchg
mov
je
dec
aas
and
leave
or
out
cs
sbb
flds
enter
mov
lods
std
pop
int3
adc
dec
mov
out
pusha
cmpsl
out
out
mov
push
repz
test
mov
aas
adc
sub
jg
cld
ja
movsl
cmp
test
adc
cmp
aaa
imul
sahf
fs
add
xor
mov
data16
rcrl
sarl
add
lret
out
xor
xor
lea
test
enter
add
xor
insb
cmp
push
add
stos
add
roll
pop
cmp
mov
outsl
xchg
mov
outsl
cmc
mov
xorl
addr16
ss
inc
roll
sbb
cmp
add
incb
fnstsw
adc
sti
xchg
ficoms
call
lods
jns
xchg
imul
sbb
inc
push
ljmp
lds
int
scas
lahf
sub
adc
es
inc
or
or
lahf
push
mov
xor
jbe
lds
xchg
test
and
lret
push
dec
jo
mov
out
mov
nop
push
mov
scas
int
test
scas
testb
or
clc
outsb
lods
cvtps2pd
jmp
push
xor
dec
insl
pushf
cmp
shrb
mov
fwait
inc
mov
push
inc
mov
cld
pop
inc
in
cltd
push
divb
push
shll
fisubs
shr
test
stc
fsubr
pop
movsl
mov
add
and
enter
sbb
adc
rorb
xor
push
cmp
das
ss
fwait
sub
adc
jge
test
push
jns
mov
jne
sbb
in
pop
int
push
sbb
add
xchg
aam
outsl
jns
subps
pop
adc
les
jecxz
pop
inc
mov
dec
jno
loopne
xlat
iret
popf
dec
jne
add
push
jnp
sti
and
pop
inc
lods
aas
jne
cmpsb
inc
inc
xchg
jg
movsl
shll
cwtl
push
or
enter
jge
mov
mov
xchg
pop
lret
mov
cld
lods
pop
cli
push
pop
mov
push
fldenv
in
jecxz
adc
repz
aas
xchg
aad
popw
xchg
dec
xchg
dec
mov
les
bound
sysenter
push
insl
sub
stos
or
and
sbbl
xchg
sub
shrb
out
dec
xchg
add
sbb
cli
jns
push
mov
insb
mov
je
in
inc
or
jo
and
aad
sahf
xchg
dec
jae
pop
js
mov
jle
call
ret
mov
and
add
mov
lret
cmpl
jecxz
inc
cmp
out
jae
in
aad
jecxz
jno
sbb
lea
mov
test
and
sub
aam
stc
int3
inc
cmc
stc
int
int
jecxz
leave
or
mov
and
or
mov
enter
jecxz
xchg
out
mov
sub
cli
add
outsb
inc
inc
xor
out
add
pushf
push
mov
rcr
je
shrl
mov
xor
dec
arpl
sub
aam
cmp
jbe
inc
mov
jg
dec
loop
jo
push
mov
or
jp
mov
popf
fidivrl
mov
mov
call
xchg
stos
lahf
inc
push
in
add
or
mov
pusha
jo
fincstp
nop
jno
in
or
pushf
fdivrl
pop
mov
sahf
pop
xchg
dec
ljmp
xor
xchg
mov
or
and
loopne
cmp
js
jae
adc
pop
fdivp
outsb
fiadds
dec
mov
std
in
test
in
faddl
mov
or
mov
push
shlb
pop
mov
les
push
or
leave
mov
shrl
cltd
fcmovnbe
inc
aad
das
mov
sbb
and
stos
ljmp
or
sub
outsl
and
fisttpll
xlat
or
push
in
int3
add
inc
and
and
not
aaa
adc
xchg
inc
push
cltd
inc
jp
fucomip
cld
adc
dec
cld
add
pusha
fsubrs
add
jbe
pusha
leave
in
jmp
jns
cmp
or
int3
and
mov
add
popf
stc
xor
dec
enter
lods
lods
arpl
mov
clc
sti
cmp
out
xchg
xchg
lds
xor
sbb
ds
fstl
fsubr
mov
and
and
push
test
xor
jo
out
fsin
adc
in
out
cs
out
mov
clc
adc
movsb
ret
fsubs
aam
cmp
fidivrl
out
loop
scas
popa
test
mov
shll
adc
push
and
push
popa
xchg
ds
cmpsl
outsl
jl
push
rorl
cld
xor
adc
mov
or
ja
int3
stc
lds
sub
mov
mov
or
aas
cmp
adc
and
push
or
jecxz
push
or
xorl
mov
es
cld
inc
xor
mov
mov
rol
cmp
sub
xchg
push
adc
sub
int
xor
push
or
data16
push
pop
xchg
out
dec
pop
rcl
jnp
pop
aas
mov
mov
ret
fiaddl
popa
cmp
shlb
stos
das
lods
xchg
loop
imul
push
mov
icebp
cmpb
xchg
inc
imul
and
iret
mov
push
xchg
fmull
ja
dec
sahf
aad
lock
aam
arpl
arpl
pop
ja
mov
mov
lods
dec
add
cmp
daa
mov
bound
sub
or
sub
loop
sbb
arpl
lds
imul
dec
pusha
dec
lock
or
xchg
arpl
sahf
mov
jo
jp
mov
ror
and
dec
mov
xor
sub
push
or
in
jo
jne
hlt
stos
sar
xor
aas
pop
push
in
and
pusha
fildl
cs
mov
jnp
cwtl
xchg
push
cmp
mov
mov
out
pushf
pop
repnz
xchg
repnz
iret
mov
add
sbb
mov
push
adc
fadds
jg
push
aas
lds
push
aas
or
xor
adc
pop
jbe
xor
in
push
repz
lods
jne
xchg
cmp
int3
aad
ret
nop
dec
xor
aaa
andb
and
scas
movsl
and
cmp
mov
cld
push
fwait
push
dec
fstps
jp
lcall
jbe
mov
aas
sahf
mov
pop
jno
leave
xchg
xor
mov
sub
xor
mov
les
pop
or
into
mov
mov
enter
xchg
pushf
lahf
and
movsl
sbb
leave
fxtract
sahf
test
call
ret
aad
adc
push
mov
add
mov
mov
lock
rclb
mov
out
jns
test
mov
jne
adc
aam
bound
pushf
mov
pusha
dec
and
mov
das
push
out
loop
cmp
call
sbb
lock
lock
inc
pop
rorl
or
aam
jne
mov
ja
mov
mov
push
lods
outsb
mov
push
xchg
in
pop
and
xor
xchg
aam
sub
jl
xchg
mov
push
test
cmp
push
int
in
inc
repnz
push
or
mov
and
inc
dec
sarl
in
ljmp
repz
leave
repnz
xor
ret
dec
lret
es
cmp
push
dec
push
xchg
sbb
mov
sti
and
ds
xchg
dec
hlt
mov
les
or
mov
or
sbb
mov
into
adc
sti
push
xchg
sahf
pushf
mov
and
add
xchg
inc
test
sahf
jg
loopne
ficompl
je
add
aad
adc
push
push
push
xchg
nop
cmp
add
ret
push
mov
or
add
mov
movsl
xor
cmpb
and
repnz
push
inc
mov
leave
mov
jmp
push
loop
lcall
inc
jnp
mov
sbb
or
add
rcrl
fcmovnb
insl
cmp
insb
in
leave
adc
and
add
inc
das
sub
xor
mov
pop
dec
xchg
cmp
xlat
pusha
adc
mov
xorb
nop
inc
test
lret
mov
test
and
bound
int3
jg
lods
cmp
test
nop
stos
lods
sbb
xchg
cmp
ret
mov
add
inc
adc
mov
and
add
jg
sbb
push
gs
incl
out
ret
push
jne
ja
lods
pop
cmpb
mov
mov
pop
daa
ja
mov
sub
aam
adc
pop
cwtl
pushf
push
pop
int3
ret
or
mov
mov
cwtl
out
bound
clc
xorl
dec
pop
int3
iret
mov
mov
and
xor
rcll
bound
mov
imul
pop
cmp
ret
stc
sbb
daa
ret
lcall
cmp
les
dec
xor
add
or
out
hlt
rol
jb
std
aas
pop
fwait
out
dec
repz
pop
and
mov
inc
jbe
sbb
mov
in
adc
mov
dec
repnz
repz
jae
mov
sub
mov
xchg
or
xlat
loop
in
or
imul
xchg
push
push
lcall
mov
lahf
push
add
jmp
pop
aam
jo
xchg
cmp
and
lds
mov
add
inc
push
sub
fnstcw
fdivrl
imul
ret
pop
push
in
fnsave
mov
cltd
rcrl
jp
dec
pop
sub
dec
mov
inc
cmc
pop
mov
sub
jae
mov
push
xchg
jl
les
popf
sbb
les
orl
fisttpll
insl
out
js
sbb
lahf
add
aad
lock
std
mov
mov
jne,pn
fidivl
ljmp
mov
push
les
dec
mov
adc
push
es
mov
outsl
jb
mov
sub
popa
push
cs
and
xor
lods
hlt
bnd
dec
lds
sbb
xor
push
push
in
jnp
aad
dec
fsubrp
cmp
mov
imul
stc
pop
sbb
fcmovnbe
xor
dec
shlb
dec
sarb
cmc
inc
out
jae
jge
mov
xor
fisttpll
pop
push
sub
sub
mov
adcb
pop
xchg
dec
jb
mov
jo
stos
mov
inc
mov
push
mov
cmc
mov
lods
ljmpw
lods
mov
aas
flds
in
pop
push
or
ficoml
sub
call
lahf
xlat
pusha
repz
mov
pop
dec
dec
sub
bswap
in
xor
mov
jle
adc
sahf
lea
push
aas
mov
mov
sbb
inc
lret
jg
rorl
add
inc
aam
lret
or
inc
inc
je
ret
inc
test
cmp
xchg
push
adc
jne
shlb
test
stos
push
sarl
lds
insb
sbb
and
jns
jae
adc
enter
adc
outsl
imul
or
push
or
add
push
jmp
stc
lret
fadds
add
loope
mov
or
shl
jno
push
xchg
xchg
and
ret
xlat
filds
sub
jae
enter
filds
push
mov
daa
inc
push
mov
test
int
jg
stos
in
stos
mov
lret
in
andl
add
aam
loop
mov
xchg
or
mov
cmc
test
sbb
mov
dec
cmp
xchg
js
jge
shlb
popa
pop
psubusw
out
pusha
sbb
addr16
mov
push
lds
in
lock
add
cmpsl
in
and
push
movsl
xor
xchg
cmp
testb
sub
popf
jns
inc
std
loope
aaa
jle
ds
test
popf
les
loop
data16
inc
ja
repz
daa
cmp
mov
push
pop
push
jns
es
jb
pop
cmpsl
pop
jge
repnz
cmpsl
out
mov
test
lahf
cltd
and
lcall
jne
and
loope
repnz
add
sub
je
out
dec
sub
pop
stc
xor
js
cmpsb
lcall
dec
enter
les
mov
jg
mov
test
pop
mov
push
xor
push
lret
sti
mov
mov
fiadds
pop
movsl
sbbb
xor
test
push
or
ret
scas
xchg
hlt
xchg
in
or
aas
mov
stos
xor
push
or
bound
loopne
into
pop
inc
xchg
pop
adcl
mov
and
daa
call
lds
mov
mov
jbe
add
xchg
stos
jbe
aad
jle
cmp
ja
call
fwait
out
ret
add
mov
pop
in
mov
iret
push
movsl
and
movaps
or
pop
jb
sub
mov
adc
push
cmp
cld
sti
xchg
dec
sbb
pop
push
enter
xchg
mov
popf
push
outsl
imul
shlb
or
aad
cs
jb
adc
lock
dec
pushf
hlt
lods
rclb
pop
mov
push
and
xor
lock
mov
lods
sahf
nop
daa
addb
push
das
xor
cmpsb
mov
mov
pop
sbb
push
dec
xchg
sbb
inc
stos
stc
ret
and
mov
popf
mov
cli
ret
lods
dec
lret
out
push
addl
aas
fldcw
loop
pop
jae
jno
jg
je
mov
inc
stc
cmp
movsl
js
and
mov
mov
nop
and
mov
cmp
int3
sbb
sahf
insb
pop
nop
pop
sub
out
loope
shll
mov
aad
push
push
xor
repz
xor
or
aam
sub
imul
xchg
outsl
sbb
pop
mov
push
mov
in
fwait
push
mov
or
outsl
jp
or
clc
add
cmp
sbb
sbb
in
pop
adc
or
pop
lahf
addr16
lods
pop
popa
fs
int3
loopne
iret
and
or
call
imulb
fprem1
cmp
les
outsb
ljmp
mov
cld
jb
cld
add
cmpsl
cmp
out
orb
movsb
hlt
add
and
pop
inc
sbb
fcmovb
outsb
push
movsb
or
sub
insb
lret
push
cltd
loop
xchg
dec
test
sbb
insb
in
inc
inc
movb
nop
outsl
test
and
add
xchg
pop
stos
imul
push
leave
cmp
cltd
mov
and
lock
cwtl
lret
dec
jle
or
xchg
pop
and
shlb
mov
out
lret
push
insb
pusha
shrl
pusha
test
sub
xchg
sarl
test
in
mov
mov
cmpsl
or
insl
imul
mov
adc
mov
rcll
xchg
jmp
jno
inc
lock
mov
xor
ret
sbb
int
nop
sbb
jg
sub
cmp
outsl
in
cmp
int3
out
jnp
mov
fcmovb
adc
lret
dec
in
push
scas
mov
sub
mov
sbb
xchg
mov
xorl
rcrl
jle
jns
push
mov
pop
mov
hlt
repnz
adc
ja
and
outsl
mov
xor
push
aas
and
fs
mov
in
push
xchg
cwtl
in
in
jg
inc
mov
cli
mov
sub
mov
xor
mov
inc
outsb
inc
push
leave
icebp
testl
mul
cmp
fwait
xchg
xchg
imul
in
xor
negb
sbb
test
in
or
ja
add
ret
aas
pop
sbb
hlt
loopne
arpl
jae
add
lret
stos
mov
jno
xor
cmp
imul
sahf
notb
fdivrs
dec
pop
ret
popa
adc
ljmp
and
pushf
hlt
jmp
and
in
rol
inc
and
or
cmp
nop
push
inc
add
dec
into
pop
loop
cmp
loopne
jge
lret
mov
shlb
xchg
out
jmp
ret
mul
cld
rclb
and
push
push
or
pop
jbe
sarl
dec
cmp
xor
push
in
or
movsb
bound
test
push
pop
mov
push
xchg
outsb
jg
sarl
mov
pop
pushf
mov
jecxz
jbe
mov
push
stos
lret
outsb
pushf
ss
push
adc
jo
ret
mov
rcrb
pop
adc
mov
imul
negb
mov
and
xchg
push
and
or
arpl
mov
mov
in
je
sbb
xlat
das
movsl
loope
dec
fincstp
ss
cmp
icebp
hlt
test
or
xor
push
xchg
fsubl
sti
add
out
ja
sbbl
xlat
sbb
jle
mov
inc
mov
test
cltd
cmp
std
fimull
and
dec
ds
pusha
andl
xchg
jmp
mov
mov
or
pop
add
or
sbb
jl
lahf
enter
lods
ret
add
pop
and
sbb
jl
xchg
lret
xlat
adc
leave
and
arpl
jecxz
test
inc
push
adc
stos
ret
int
dec
push
cmpsl
dec
mov
sub
cmp
xor
das
pop
stos
mov
lret
cmp
dec
lret
push
std
fdivp
test
out
sarl
and
jmp
loopne
lods
add
fstp
xchg
or
dec
sahf
xchg
cmp
dec
or
out
cmpsb
outsl
mov
sbb
xchg
mov
mov
mov
cmpsl
test
clc
insb
fs
mov
in
daa
mov
js
aas
imul
pop
xchg
pop
push
inc
jnp
inc
sub
sahf
clc
jecxz
scas
mov
addl
loop
sbb
sbb
jecxz
repnz
jae
dec
and
pop
sbb
rol
pop
or
cs
addr16
xorb
sub
pop
dec
bound
lods
mov
popf
jmp
mov
ds
negb
das
lret
test
lret
inc
push
fsubr
xchg
pop
clc
mov
push
fmuls
or
push
mov
mov
inc
cmpl
daa
adc
mov
dec
je
and
and
sub
sbb
aas
sti
shll
push
pop
test
jl
or
popf
cmp
jg
fs
push
fcmovnb
in
loop
std
leave
xchg
add
popf
fldl
inc
rorb
cwtl
leave
push
data16
hlt
fwait
jmp
jae
fnstenv
mov
ljmp
scas
xlat
mov
js
movsl
push
or
inc
sub
dec
lods
jl
dec
addr16
out
dec
xor
add
pop
add
in
xchg
clc
shlb
shll
push
in
mov
daa
sahf
xchg
rorl
call
xor
sarl
jno
jb
push
sub
fistl
loope
clc
sub
cmc
and
mov
mov
and
mov
or
mov
cmpl
arpl
idivb
in
insb
and
stos
lret
add
lods
js
pause
mov
sbb
xor
outsl
add
fwait
mov
pop
call
push
sbb
ficoml
pop
add
sbb
lret
push
mov
pop
and
xor
sbb
xor
das
fsubrp
mov
cld
mov
fs
aas
out
jae
mov
dec
fadds
xchg
imul
xor
popf
les
adc
jo
adc
sbb
frstor
mov
out
loope
test
mov
call
dec
xor
dec
xchg
adc
jne
mov
jno
sub
mov
je
int3
mov
loope
sarb
xor
js
iret
pop
ds
sub
adc
mov
xchg
inc
movsl
xor
xor
sbb
add
test
inc
or
fs
mov
pop
loop
push
or
popf
into
cmp
in
mov
jbe
cltd
and
icebp
test
in
js
mov
jmp
mov
push
shl
fcoms
mov
push
jl
mov
dec
sbbb
sysenter
adc
mov
cli
sub
insb
dec
fmull
sbb
push
mov
inc
outsl
dec
push
inc
and
jo
clc
push
xchg
jl
negl
sbb
adc
movsl
rol
daa
dec
mov
mov
cwtl
std
stc
cmp
mov
pop
mov
je
sbb
and
dec
push
rol
jnp
psubsw
add
cmp
ret
sbbl
outsl
sbb
pop
scas
adc
xor
sbb
outsl
fs
lods
push
out
icebp
inc
push
int3
movsb
in
push
and
stos
in
push
pop
jle
outsl
and
int3
jg
mov
lds
ror
cmc
push
inc
mov
loope
mov
mov
call
aaa
aaa
addr16
repnz
in
movsl
lods
test
dec
insb
push
jnp
cmpsl
jno
jae
xor
neg
and
movd
imul
fnclex
push
lahf
in
mov
jne
scas
add
sub
fsubs
es
push
cs
mov
dec
lods
out
lret
push
mov
hlt
and
and
push
ljmp
adc
outsl
aam
and
xchg
pushl
aas
inc
dec
add
daa
and
lahf
mov
pusha
outsl
xchg
cwtl
cld
dec
mov
idivl
xchg
jo
sub
inc
jecxz
mov
cld
adc
sbb
push
cld
cmp
lds
out
sbb
add
cmp
ja
inc
pop
cs
xchg
das
fwait
out
mov
and
jmp
cmp
rcl
adc
dec
fimull
arpl
push
test
and
iret
sahf
lcall
repnz
stos
nop
push
sub
or
outsb
inc
dec
negb
repnz
jne
insb
or
adcl
and
jne
das
sub
inc
cmp
out
ss
push
sub
int
pop
push
push
pop
dec
in
in
push
jp
sti
mov
clc
inc
leave
or
jp
inc
fsubrs
lret
sub
es
enter
pop
cmc
or
jae
mov
mov
cmp
fwait
and
push
xchg
outsl
xchg
add
xor
push
jo
push
roll
inc
repz
cmpsl
out
aaa
xchg
add
fs
or
movsl
lcall
xor
xchg
ret
fisubs
jl
das
mov
mov
sbb
push
jp
pop
or
test
sub
lea
xchg
loop
sub
daa
pop
xchg
or
iret
cmc
add
inc
jo
insl
fs
inc
push
mov
push
mov
adc
enter
cmp
push
mov
ja
ficoml
add
inc
jecxz
push
adc
mov
dec
jns
rcl
popa
imul
xor
icebp
or
mov
jne
adc
imul
jp
mov
mov
bound
out
js
sti
lcallw
cmc
push
insl
fistl
sbb
cmp
ret
fcomps
fisubs
mov
daa
pop
mov
negl
rcr
pop
and
inc
cld
xchg
dec
test
nop
repnz
insl
xor
push
and
jae
pop
aad
push
outsb
push
sti
cld
and
pop
cmp
hlt
outsb
xor
mov
movsb
fld
scas
stc
cmpsb
loopne
orb
test
or
jnp
psrld
cmpsl
repz
pop
les
cmpsb
sbb
ret
call
jae
movsl
push
ljmp
mov
imul
add
pop
jecxz
jle
mov
cwtl
lds
pop
add
fsubl
cmpb
fbld
fs
mov
test
add
movsb
arpl
jl
or
sbb
les
fs
or
stos
and
bound
mov
lcall
lods
cmpsl
inc
inc
mov
das
shrb
loope
ficompl
or
mov
or
fwait
leave
mov
xchg
sbb
pop
jmp
test
lock
push
sbb
test
cmpsb
xchg
nop
gs
cmp
adc
insl
gs
les
mov
push
push
popa
add
push
mov
cmpsl
mov
sbb
add
pop
int3
cmpsl
fnstenv
pop
push
out
mov
fsubrp
scas
aaa
stc
into
ja
jle
dec
pusha
sahf
and
mov
addl
mov
jns
les
rolb
ret
leave
stos
hlt
out
lods
loop
jnp
inc
mov
push
mov
flds
ljmp
mov
add
stc
ds
jl
cli
lods
cwtl
xchg
jb
sub
aam
loop
aam
pop
xor
and
mov
mov
push
inc
rcr
test
mov
sub
jle
xchg
mov
das
and
push
repnz
sub
or
nop
inc
push
xlat
pop
push
outsb
cmpsl
mov
sub
arpl
adc
aad
sub
out
mov
mov
xlat
cli
mov
loopne
push
or
jne
mov
pop
pop
mov
je
push
shrl
pop
lods
hlt
sbb
stc
dec
push
sbb
lahf
xor
pop
or
mov
xor
mov
mov
cmpsb
xchg
adc
pop
mov
mov
pop
inc
cmpb
sbb
cmpsb
enter
inc
leave
ja
js
adc
lahf
jle
test
mov
enter
xor
xchg
xor
mov
inc
js
pop
pop
into
mov
xor
das
jp
xor
out
sub
repz
movsl
jno
ds
add
lret
rol
push
cs
sbb
add
dec
es
inc
loope
push
in
add
push
pop
xor
and
inc
sub
jo
xchg
or
sets
ret
stc
adc
push
sahf
shrl
push
mov
pop
adc
dec
test
into
xchg
dec
mov
pop
xor
xor
sub
lock
sub
mov
pop
mov
outsl
inc
cwtl
push
xchg
inc
or
sub
mov
shll
mov
in
iret
cmpsb
or
hlt
test
jnp
mov
sbb
nop
cmpsb
pusha
mov
mov
fdivl
adc
and
dec
xor
xor
xor
fs
mov
push
mov
add
enter
inc
lahf
aam
cmp
push
nop
setne
into
pop
sub
in
and
add
iret
jmp
loope
outsl
ret
adc
cmp
fwait
sbb
mov
cmp
add
test
mov
in
pop
jg
push
test
mov
rclb
and
or
mov
jecxz
and
aaa
sub
das
cld
insb
add
add
ss
enter
adc
ret
mov
mov
inc
rorl
lock
into
cmp
jnp
addr16
jmp
pusha
testb
loope
push
cli
push
inc
loop
add
lock
push
aaa
cmp
in
jo
fdiv
fiaddl
movsl
out
push
cmp
lret
sbb
cltd
jns
lret
push
lret
hlt
incl
xchg
pop
mov
cmc
jnp
gs
out
adc
in
mov
adc
mov
sahf
adc
aad
push
fisubl
xor
inc
in
cs
in
mov
push
dec
mov
xor
push
rcll
sbb
lret
jno
xor
repnz
fnstcw
test
add
das
adc
jg
subb
sbb
out
sar
mov
fdivs
jnp
sub
pop
bound
rcr
pop
xchg
into
push
pop
aas
scas
dec
fadds
gs
fdivrs
loopne
outsb
jecxz
fmull
out
mov
adc
jae
push
add
test
jle
sub
jno
jnp,pt
sub
std
gs
lea
fstpl
insl
popf
daa
pushf
pop
or
dec
inc
mov
into
pop
test
add
dec
xchg
adc
mov
and
fisttpll
sbb
add
jns
daa
out
rclb
aas
int3
inc
lock
scas
sbb
mov
jge
cli
jp
jae
or
cmp
or
stos
pop
dec
enter
add
out
insl
dec
cmc
mov
sti
sub
push
ljmp
in
or
mov
leave
mov
push
inc
mov
pop
popa
popf
xchg
pusha
push
pop
pop
sub
cmpsb
mov
out
push
fwait
inc
rcll
mov
out
dec
add
xlat
xor
rclb
fnstcw
adc
jge
mov
sub
bound
int3
fsubr
dec
cmp
sbb
xchg
pop
dec
pop
inc
sti
cmp
int
lret
cmp
push
fstl
push
faddp
or
push
out
outsb
test
fdivl
add
push
rolb
or
test
push
sub
fwait
xchg
and
and
push
push
xor
jae
push
lahf
out
bnd
test
jae
imul
leave
xor
sub
sub
jge
pop
ret
fwait
xchg
adc
mov
loop
aam
roll
cmp
scas
jno
clc
push
or
push
movsb
fisttps
daa
xchg
mov
push
cld
enter
adc
cmp
mov
out
iret
sub
cmp
loope
push
adc
mov
lcall
jp
push
ror
inc
add
or
js
test
and
pop
popa
pop
mov
lahf
loopne
iret
cmp
add
or
dec
iret
fistpll
or
fbstp
call
mov
mov
loopne
pop
filds
sbb
orl
pop
movsl
shl
jne
cmp
sbb
lods
popa
mov
sbb
lods
stos
xchg
fmuls
repnz
int3
add
add
jmp
mov
rorb
pop
mov
jmp
pop
in
out
inc
push
pop
psubsb
sbb
dec
and
xor
in
mov
or
shrd
dec
into
add
pop
cmc
push
mov
mov
jg
fs
inc
testb
xchg
test
dec
add
pop
inc
fimull
movsb
xchg
rorl
adc
aas
mov
aaa
sbb
sub
lret
jle
jb
xchg
push
and
shlb
dec
xchg
pop
mov
dec
jno
adc
lods
sbb
push
dec
cmp
adc
xchg
xchg
mov
imul
outsl
stc
outsl
or
imul
ficoms
push
insb
and
aam
shll
sbb
das
adc
inc
popa
sub
xor
cltd
xchg
out
pop
mov
mov
jno
lret
std
jl
sub
sar
loop
mov
shll
push
jo
cmpsl
mov
repz
out
int
add
pop
add
outsl
adc
call
cmp
cmc
hlt
pop
lods
fistps
stc
mov
repz
popa
in
scas
dec
xor
xchg
adc
or
push
mov
jecxz
push
mov
scas
fbstp
lcall
pusha
in
rclb
adc
ret
mov
out
into
cs
push
es
lahf
push
hlt
popl
popa
dec
add
cmp
adc
stos
aad
mov
scas
lret
xor
sbb
mov
cwtl
lea
jbe
add
out
mov
aaa
clc
std
jo
in
hlt
pop
and
sub
lods
sbb
hlt
dec
sub
push
xchg
lea
test
xchg
mov
cwtl
xor
js
dec
pop
mov
adc
mov
mov
sub
jl
popf
in
inc
lods
daa
xor
movsb
add
inc
add
daa
jns
rcl
xor
mov
mov
aaa
mov
lock
pop
loop
popa
outsb
jp
push
out
shll
nop
push
pop
mov
mov
xor
mov
xchg
jnp
insb
jne
sub
xor
dec
jo
mov
cmp
and
add
jnp
xor
jp
arpl
cmp
out
jnp
adc
lods
lock
jmp
jmp
push
idivl
pusha
mov
jae
push
xchg
xchg
mov
pusha
jmp
adc
add
xor
mov
xor
aaa
fsubrs
or
push
dec
cmp
push
xchg
repnz
xlat
sbb
fstpl
imul
pop
out
jmp
sub
das
cmc
test
xor
out
xchg
enter
aas
pop
into
xchg
cwtl
test
xor
fwait
adc
and
mov
sbb
sbb
aad
jns
lret
sarb
add
nop
xor
inc
xchg
into
sub
test
and
cmc
in
lods
mov
out
jns
dec
add
cmp
or
adc
outsl
pop
mov
stc
and
hlt
nop
cmp
jb
xchg
fbld
ds
in
gs
out
and
pop
testl
negb
inc
mov
pushl
push
shrl
pmulhw
rorb
xchg
push
sarb
je
lods
rolb
orl
mov
jae
add
mov
insl
in
rclb
adc
popf
push
rorl
les
test
sbb
sub
popa
repnz
repnz
imul
jbe
sbb
inc
push
lcall
add
daa
mov
mov
xchg
inc
test
jg
sahf
cmp
pop
shrl
int
jbe
loop
movsb
dec
pop
inc
jno
pop
mov
ljmp
and
or
rcr
inc
mov
cmp
outsl
clc
jmp
flds
imul
jb
mov
imulb
aam
xchg
repz
fsubrl
fcmovbe
aad
repnz
cmp
sbb
xchg
rorl
xchg
cmp
jae
aam
dec
mov
fsubrs
mov
mov
movq
pop
int
addb
and
test
or
outsl
aaa
mov
mov
jno
jnp
rcl
stos
cmp
push
xchg
push
cmp
aaa
fcomp
adc
movsl
sbbl
cld
adc
inc
mov
xlat
loopne
mov
or
ja
jo
rsqrtps
adc
adc
shll
adc
cmp
adc
cmp
movsl
int
enter
out
leave
gs
ja
lea
in
xchg
or
cmp
les
xor
out
push
fildll
gs
push
mov
std
xor
inc
pop
movl
in
int
jne
stos
imul
push
add
jecxz
and
push
sbb
aad
in
cwtl
add
mov
lret
jge
inc
or
inc
fcomp
mov
fdivp
shlb
xlat
mov
jecxz
or
das
jo
fisubrl
scas
daa
cs
xchg
adc
lcall
icebp
cwtl
jbe
xor
das
loopne
es
aam
mov
cmp
xchg
ficoml
fsubl
add
sbbl
in
andnps
icebp
into
pop
sbb
ja
inc
lods
xor
roll
dec
jg
movl
jp
pop
icebp
subb
arpl
adc
pop
sub
xchg
fs
xchg
int
jge
or
add
or
lcall
rcrl
fistl
dec
cmpsl
adc
sub
imul
shll
flds
out
clc
ds
xchg
jae
es
mov
push
loope
inc
bound
pusha
loop
ret
mov
rorl
and
pop
xchg
mov
push
inc
dec
loope
push
push
sub
sbb
ljmp
jbe
mov
sub
mov
ds
aas
test
jl
push
push
jp
push
push
movsb
repnz
sbb
xchg
push
fs
imul
fiaddl
xor
xchg
mov
inc
icebp
call
icebp
or
mov
test
in
and
xchg
and
and
inc
ret
je
fcmovnbe
out
xchg
pusha
loope
aad
cld
sahf
sub
adc
xchg
test
inc
nop
push
inc
mov
jae
movb
pop
insl
cmc
jle
adc
xor
mov
or
sub
xchg
enter
jno
add
in
ffreep
jne
and
or
xlat
lahf
call
fstp
inc
shr
xchg
push
adc
inc
or
mov
lods
fldz
clc
dec
push
sub
iret
lahf
ja
sbb
rorl
or
add
pusha
fldcw
imul
push
stos
scas
dec
push
dec
or
fwait
out
sbb
shll
xchg
cmp
in
leave
dec
loopne
test
sbb
xlat
mov
sbb
lds
sbb
jmp
adc
cmp
jl
outsl
outsl
lret
push
popf
xor
pop
jg
cmp
dec
xor
push
pop
xor
hlt
push
arpl
pusha
mov
sub
inc
add
sbb
xor
pop
aaa
data16
daa
es
jg
cld
adc
lret
xor
call
jl
loop
out
adc
es
inc
cmp
add
pop
flds
xchg
into
add
sbb
bound
ja
xor
ja
push
ja
push
dec
push
xchg
es
movsb
sbb
cwtl
jnp
popa
jnp
add
movsb
push
into
imul
movsb
push
and
mov
mov
cmp
add
mov
jb
stc
cmpsb
or
pop
test
cmp
enter
inc
xor
outsb
jmp
push
sub
and
inc
lcall
and
xchg
scas
cmc
mov
adc
sub
movsb
dec
sub
stc
sbb
mov
or
fildl
popf
rorl
push
rcr
in
mov
and
mov
jns
lods
cltd
push
movsl
sub
std
insl
dec
dec
jno
insb
or
dec
adc
mov
ficoms
jns
pushf
and
inc
lea
pcmpgtw
inc
cmp
clc
jecxz,pn
imul
xor
test
repnz
lret
add
ds
pop
mov
xor
add
nop
push
idiv
mov
scas
ret
mov
insl
xchg
stc
and
push
int
adc
sbb
cmpsl
xchg
test
popf
in
push
fs
adcl
dec
mov
jae
sbb
jo
or
mov
adc
test
xor
inc
jo
mov
jmp
inc
push
adc
fld
es
loopne,pn
scas
xchg
mov
sbb
aaa
jmp
je
add
mov
outsl
dec
insl
fisubrl
push
adc
or
dec
test
sbb
mov
add
in
xchg
ret
jp
sub
mov
loope
xor
les
imul
xor
mov
hlt
shl
pop
inc
xchg
aam
xorl
test
xorl
int
push
sbb
mov
and
inc
lea
gs
cmp
jp
or
pop
lret
cltd
xchg
mov
sub
and
nop
scas
or
lret
pop
lods
xor
fldt
xor
ficompl
and
fcmove
push
in
call
lcall
lcall
push
add
mov
cmp
dec
shl
jns
mov
hlt
adc
outsl
pop
and
loopne
dec
stos
mov
aad
fldl
jae
jbe
pop
add
std
pop
jne
or
scas
xchg
in
or
dec
dec
xlat
inc
leave
mov
cmp
js
and
mov
jmp
sub
jl
mov
dec
xchg
out
mov
xor
sub
adc
sub
mov
je
jno
mov
xchg
fldcw
orl
int3
cld
jl
push
mov
inc
mov
out
or
adc
insb
xor
adc
pop
jo
rsm
decb
imul
xchg
inc
push
xchg
add
inc
xchg
mov
iret
jbe
jecxz
notb
push
insl
shlb
inc
shll
or
sbb
jge
dec
sub
mov
mov
xor
adc
cld
push
pop
adc
movsl
inc
int
aaa
dec
ss
jb
mov
xchg
addl
sti
mov
jns
stc
push
into
popa
or
fsubs
std
inc
jb
adc
movsl
xchg
dec
bound
movsl
or
push
mov
ljmp
pop
push
mov
jbe
repz
sub
mov
xchg
aam
dec
cmp
add
xor
or
pop
jge
mov
mov
and
jg
notl
jnp
cmp
adc
inc
pusha
and
mov
ret
pop
call
mov
pop
pop
fidivrl
int
sub
mov
jne
repnz
fwait
cmpsb
aaa
rorl
cmp
add
add
imul
movsl
mov
inc
xchg
insb
dec
cmp
rolb
negl
sbb
out
aam
or
pop
add
fwait
xor
insb
xchg
lcall
das
popa
push
push
popf
pop
dec
ds
shr
js
jge
lcall
jmp
xor
pop
xchg
aas
aas
cmc
push
inc
adc
inc
cmp
aaa
xchg
xchg
cli
ret
inc
stos
lea
sbb
loop
sub
jb
push
sar
rolb
push
inc
sarb
jp
pop
mov
cmp
push
inc
shlb
sbb
scas
and
icebp
mov
xor
pop
xchg
xor
cmp
jmp
jns
sbb
out
icebp
pushf
test
or
sub
enter
rcrl
jle
cmpsl
cmpsl
add
mov
jae
fwait
nop
fmull
dec
stc
and
adc
aam
xor
fildll
fmull
cli
push
push
dec
pop
call
cmp
in
and
inc
dec
sub
test
cmp
pop
sub
enter
aam
push
stos
in
scas
lcall
gs
or
jmp
or
outsl
push
outsb
push
mov
call
pusha
enter
sbb
aas
and
pop
sbb
mov
add
ficoml
sub
int
leave
dec
pop
inc
frstor
jnp
int
mov
push
pop
xchg
mov
xor
jnp
fldenv
insb
test
xchg
xchg
pop
mov
stc
imull
cmc
scas
rolb
push
subl
inc
dec
cld
pushf
mov
xchg
movsb
cmp
mov
xchg
jb
out
xchg
cmpsb
sbb
mov
push
inc
jmp
rcll
mov
and
cld
shrb
jae
push
lahf
test
push
dec
pop
xlat
scas
xor
xorl
and
mov
test
incl
sbb
pushf
push
aaa
jg
push
mov
mov
inc
outsl
sbb
loop
in
fs
hlt
int
in
in
adc
mov
inc
insb
ds
dec
cs
mov
push
mov
xchg
pop
bound
push
js
xchg
gs
cmp
clc
or
sti
jecxz
gs
push
rclb
cltd
lea
dec
lcall
popf
call
jp
mov
xchg
repz
jnp
js
arpl
xlat
icebp
int
cld
cmp
cli
mov
js
push
xchg
sub
aaa
pop
int3
fdivp
xor
lahf
iret
scas
dec
fwait
mov
lods
mov
xor
cwtl
cwtl
push
aaa
sub
and
push
add
arpl
fcom
pop
or
xchg
or
ss
sahf
clc
mov
jne
mov
mov
pusha
lahf
cmpl
xchg
jle
scas
push
xor
and
xchg
fadd
jmp
dec
pop
sbb
in
mov
popf
xor
cs
xchg
add
out
dec
or
pop
incb
cld
cmp
cwtl
loope
xor
hlt
test
ds
jno
orl
aaa
xchg
xchg
xchg
addl
out
ss
push
nop
loopne
pop
sub
add
push
addb
test
lcall
shl
dec
or
mov
sub
mov
cmp
imul
xchg
sbb
int3
inc
jge
jb
jp
addr16
ljmp
mov
mov
mov
mov
into
data16
aad
pop
sbb
mov
sub
lds
clc
lcall
cmpl
sub
enter
xchg
push
aam
or
insl
les
aam
mov
pop
in
inc
lcall
xorl
sub
pop
testl
push
push
lea
and
out
adc
es
sbb
mov
dec
and
insl
mov
adc
adc
dec
roll
inc
outsl
pop
mov
pusha
flds
add
mov
push
rorb
push
or
popl
lds
mov
jns
sbb
pop
pop
jns
stc
push
push
rcll
jbe
dec
xor
push
and
in
xor
mov
fs
adc
fidivrl
inc
rcrl
sti
ret
into
mov
movsb
in
add
adcb
xchg
stos
mov
int
pop
cs
mov
in
lahf
adc
pop
int3
mulb
loope
pmaxub
rcrl
or
sub
out
mov
cmpb
ss
nop
stos
sti
cmpb
sub
add
mov
add
xchg
mul
pop
cltd
inc
mov
clc
adc
les
call
mov
ret
push
jecxz
push
lock
insl
xor
pop
sub
inc
cmp
loop
popf
sahf
pop
xchg
es
mov
add
ljmp
push
mov
jg
jl
push
and
mov
insl
mov
jne
movsb
sbb
adc
ret
mov
mov
imul
dec
mov
mov
std
orl
sbb
jno
stos
mov
mov
cltd
shll
mov
inc
iret
aam
pop
ja
add
movsl
roll
cmpsb
mov
jmp
inc
in
aas
push
ficomps
mov
jecxz
test
mov
dec
aas
pop
jb
loopne
cmc
pop
and
jle
arpl
out
int3
in
sti
mov
iret
sub
mov
mov
out
data16
push
mov
out
scas
add
dec
xchg
xor
jne
add
fisttpl
sahf
fistl
cmp
shll
or
mov
xchg
mov
pop
sbb
add
sbb
jno
cli
pop
cli
out
fdiv
xchg
mov
in
aas
loop
les
jae
cmp
pop
xchg
push
aam
dec
push
and
std
sub
ret
in
add
leave
ja
jae
push
dec
jg
xchg
push
add
clc
xor
ffree
lods
lods
add
cmp
lock
sbb
ss
dec
push
and
imul
jb
or
push
cmpb
adc
xchg
lret
mov
push
shlb
or
repz
nop
mov
rcr
pushf
les
mov
mov
aad
cmp
cmpsb
int
jns
xor
and
or
lea
adc
inc
xchg
cmp
popa
fimuls
or
cmp
pop
outsb
scas
jp
add
mov
xchg
and
jp
in
popf
and
or
fwait
int3
mov
in
add
ss
or
enter
pop
lods
or
cmp
cmp
mov
mov
jle
push
sarl
in
mov
jmp
mov
mov
aas
je
es
rorb
iret
adc
ljmp
jecxz
jp
sbb
sub
inc
push
add
xor
push
jnp
xor
pop
rcr
loopne
and
gs
add
cs
xlat
jo
dec
or
inc
pop
mov
cltd
xchg
icebp
lods
cwtl
add
shll
or
iret
xor
pop
lretw
test
cmp
hlt
inc
add
stos
outsb
rorb
push
mov
cs
leave
mov
or
lret
xor
iret
bnd
cld
jp
in
xchg
movsb
inc
inc
addl
xchg
jo
sbb
stos
and
enter
adc
rorb
jns
enter
insb
repz
mov
outsb
jle
pop
fnstenv
jno
dec
insl
adc
xor
mov
sbb
push
jge
inc
hlt
mov
jns
sbb
in
aaa
into
jmp
or
ja,pn
pop
sahf
hlt
xor
iret
nop
or
das
xor
shlb
xchg
jb
push
jge
xchg
stc
fstp
jb
shll
icebp
push
xor
inc
mov
nop
inc
dec
nop
fs
dec
mov
inc
pushf
bound
inc
addl
inc
dec
jle
aam
dec
mov
imulb
sub
lods
dec
cmp
mov
jns
lahf
inc
iret
ss
stc
mov
dec
jnp
dec
mov
sub
pop
les
fs
sub
fmull
jbe
add
mov
stos
data16
jns
pop
sbb
test
sbb
mov
lahf
cli
inc
push
lea
aad
insl
pop
sbb
bound
mov
xchg
mov
incb
bound
inc
dec
cmpsb
out
lods
sti
pop
aas
pop
mov
cmpsb
push
test
filds
mov
sarl
push
das
subl
adc
sbb
orb
mov
dec
lods
inc
insl
loope
int3
mov
add
push
xor
jge
in
cmpsb
or
out
add
jle
cmp
dec
insl
dec
dec
and
mov
addr16
movsl
mov
stc
push
and
fcoml
mov
das
test
jns
pusha
ret
mov
je
pushf
mov
xlat
adc
leave
jp
in
cmc
or
std
ret
sbb
divps
mov
jecxz
xchg
cmp
lds
lods
mov
arpl
orb
popa
enter
jns
add
sub
ss
mov
int3
aaa
ret
add
cltd
popf
fnstenv
mov
das
jns
jp
enter
pop
jg
arpl
test
cltd
lock
in
aaa
andb
mov
insl
xchg
in
adc
negb
fisttpll
adc
xchg
cmpsl
push
lea
dec
push
ret
ljmp
fsts
std
mov
pushf
pusha
push
popa
call
aam
decb
enter
repnz
mov
sbb
inc
or
movsb
inc
pushf
lahf
mov
gs
inc
out
jne
push
and
mov
push
add
das
testl
shl
adc
cltd
xor
in
lea
lea
push
lods
pop
sbb
xchg
aas
outsb
and
jb
test
xlat
out
dec
scas
sarb
jnp
cmpsb
lds
daa
andb
pop
imul
and
out
dec
insl
std
jp
sub
xchg
mov
repz
inc
xor
xor
jns
imul
jp
in
jle
pop
add
push
dec
cmp
and
inc
nop
test
imul
fistpl
xchg
inc
mov
cmp
jne
jl
cli
mov
fdivs
or
dec
int3
and
enter
and
lea
xor
orb
mov
cmp
add
repz
out
pop
sub
cltd
sbb
sbb
mov
push
push
dec
lahf
ljmp
adc
or
std
out
sbb
and
mov
movsb
jl
stos
fcmovnbe
and
dec
inc
and
sbb
rcr
jle
cli
mov
cmp
lock
mov
push
popf
dec
inc
pusha
int
rorb
sbb
jns
lods
jl
fbstp
fistpl
push
rcll
sub
lret
xorl
movsl
jg
mov
scas
dec
xchg
mov
xor
lret
shrb
pop
cmp
or
aaa
adc
arpl
sarl
outsb
mov
dec
dec
mov
aad
add
cmp
mov
jns
xchg
xor
ja
fs
nop
in
addl
daa
imul
xchg
mov
dec
cmc
and
or
mov
jns
inc
imul
imul
aad
cmpsb
lds
ja
xor
adc
sub
sar
pusha
sbb
mov
les
sub
xchg
mov
xchg
and
jo
lcall
pop
or
lea
in
js
insb
or
inc
stc
pop
push
cli
stos
lsl
std
jecxz
scas
mov
and
or
push
sub
cmpsl
jl
ja
movsb
push
mov
data16
cmp
sbb
scas
out
cli
adc
sbb
pushf
mov
iret
pop
in
xor
add
mov
nop
out
data16
std
jns
imul
fisttpll
daa
rorb
fsubrs
aas
stc
cmpsl
jb
pop
cli
sbb
incl
mov
inc
cld
dec
xor
rorb
scas
lcall
ss
mov
loope
faddl
shll
adc
cld
sub
shll
outsb
js
leave
in
dec
cwtl
cld
push
loopne
lods
lret
sub
mov
and
int
xchg
cmp
jle
cmp
arpl
daa
inc
and
dec
movsb
mov
daa
xor
mov
pushf
adc
mov
sub
outsb
fsubrs
mov
call
add
or
repz
adc
popa
and
mov
adc
and
sbb
mov
int3
xor
xchg
jle
add
ljmp
mov
sub
push
adc
notrack
sahf
outsb
push
bound
lcall
push
sbbl
jg
les
arpl
mov
and
imul
sti
ds
sub
fcom
mov
pop
test
repz
pop
cmc
in
clc
movsb
addr16
push
and
aam
cmp
mov
scas
sub
dec
push
insb
dec
in
outsb
or
add
push
lcall
inc
or
flds
xlat
aad
scas
adc
add
imulb
adc
int
cmpsl
cmp
adc
in
shrd
mov
sub
not
fwait
cmp
lcall
inc
pop
popa
mov
bound
sub
pop
xor
inc
imul
sub
inc
and
movsb
pushf
or
lcall
push
cmpsl
loope
fsubrs
lock
cmpsb
pushf
adcl
inc
repnz
sbb
push
stc
mov
sbb
dec
popa
nop
call
sub
add
in
and
push
loop
xor
mov
xor
fnsave
xor
out
xor
xor
cmpsl
aas
xor
add
idiv
push
xchg
mov
int3
push
cld
aad
jns
mov
dec
cs
andl
mov
lahf
sub
mov
push
adc
inc
cwtl
mov
push
shrl
cmp
mov
jns
enter
fsubrl
cmp
mov
dec
inc
sub
out
add
cmp
das
add
xchg
or
rcll
imul
rcll
inc
mov
jnp
push
mov
xchg
pop
push
lods
sbb
lea
pusha
dec
dec
daa
inc
fstps
pop
mov
xor
add
dec
mov
pop
xor
test
pop
aaa
ret
ja
mov
xchg
pop
arpl
mov
pushl
loope
ret
mov
popf
mov
add
insb
cmp
dec
je
sub
mov
mov
pusha
pop
push
jne
push
cmp
stc
pop
into
sahf
mov
jbe
outsl
and
jl
inc
sbb
pop
mov
mov
lahf
jbe
sti
xchg
pop
daa
mov
and
pop
ret
fistps
jnp
sahf
imul
imul
sbb
rorb
ja
bnd
inc
sub
push
xchg
mov
rclb
lods
mov
ja
aam
pop
xchg
pop
int3
in
shrl
pushw
xchg
cmp
mov
xor
or
mov
xchg
lcall
cltd
arpl
and
cwtl
in
cmp
xor
xor
imul
mov
adc
pop
xor
shll
sbb
pop
orb
stos
and
or
mov
mov
and
mov
cmp
rclb
mov
loopne
imul
jge
push
mov
nop
adc
enter
jne
insl
rcll
enter
or
out
loopne
loope
aam
inc
xchg
or
imul
xchg
xlat
das
and
jno
jmp
adc
adc
jnp
jbe
mov
mov
arpl
or
mov
mov
fcoml
iret
pop
push
scas
js
pushf
std
pop
jp
xor
jl
add
lret
jae
add
lcall
or
push
lds
and
sbb
mov
sti
pop
cld
lods
stos
popa
cmp
cwtl
icebp
fdivrl
push
adc
int
mov
stc
imul
jae
daa
outsb
or
pop
cltd
in
mov
repz
pop
push
or
lret
pop
sbb
repnz
mov
mov
jge
inc
xchg
les
dec
cld
outsb
xor
inc
xor
dec
push
lret
popf
fistps
sarb
adc
dec
lock
add
xchg
mov
dec
xor
or
xchg
inc
sbb
add
loope
js
notl
dec
sbb
mov
sub
mov
stos
and
push
sbb
lahf
inc
js
fnsetpm(287
mov
or
sub
pop
jp
push
lea
mov
icebp
js
push
leave
push
fistpll
data16
or
cmc
cmp
adc
push
pop
cwtl
aam
sahf
sbb
incb
test
xor
jbe
or
push
cmp
cmp
sarl
loop
ret
mov
sub
iret
lods
adc
int3
push
orb
fnstenv
mov
dec
mov
sub
jno
ljmp
xlat
cs
cmp
fld
adc
cmc
dec
xor
pop
mov
xchg
xchg
cmp
pop
or
bound
push
in
jnp
loopne
mov
repz
js
pop
scas
jmp
push
jne
aad
js,pn
mov
xchg
adc
nop
xchg
mov
daa
psubusw
or
push
jp
mov
lock
cmp
jno
fnstcw
add
xor
lret
ss
inc
mov
std
or
xchg
pop
rcr
jnp
lret
mov
out
jge
push
jg
xorl
push
lcall
or
dec
mov
add
lahf
idiv
xchg
ljmp
add
mov
es
orl
fnstsw
fbstp
mov
pop
ljmp
daa
inc
lea
outsb
stc
into
rolb
pop
xchg
jle
add
cld
pop
push
insl
divl
pop
xor
filds
in
fs
jne
stc
lds
or
pusha
es
sub
pop
fwait
daa
adc
aaa
repnz
push
jl
inc
jp
dec
and
das
popf
and
lods
mov
cmp
inc
arpl
cs
fwait
mov
push
add
inc
inc
or
xor
aas
xor
sahf
mulb
popa
jmp
sbb
and
sub
jo
sub
clc
mov
and
jno
mov
mov
cmpsb
pop
sti
pushl
filds
xor
lea
sarl
stc
das
add
outsb
mov
ret
jl
ljmp
jp
xchg
pop
adc
dec
adc
xchg
movsb
sbb
and
frstor
cs
and
add
pop
mov
xor
mov
adc
mov
cmp
aad
sub
sbb
sub
nop
nop
lea
arpl
push
imul
cmc
mov
adc
mov
mov
sbb
sub
sub
mov
pushf
jecxz
or
xchg
pop
cli
mov
movsb
stos
mov
in
xor
stos
xchg
iret
ret
into
pop
xorl
sbb
ret
mov
pop
int
xor
repnz
lds
clc
or
out
adc
push
in
cmp
into
andb
adc
dec
orb
xchg
iret
sub
pop
std
test
lret
mov
or
je
push
dec
aas
fs
pushf
jae
cmc
jecxz
loop
mov
das
cld
xor
ret
pop
add
jl
fdivs
das
mov
push
cmc
fwait
mov
inc
xchg
or
fs
test
xor
ss
js
inc
xchg
xchg
lret
inc
sbb
mov
sbb
into
push
sub
inc
gs
sahf
loop
dec
mov
xor
das
lock
xor
pop
xchg
push
pop
xorl
xor
imul
xchg
mov
loop
jmp
in
xchg
inc
xchg
out
sbb
or
or
cmp
mov
sahf
sbb
adc
clc
ret
push
shll
loopne
add
mov
mov
imul
mov
mov
mov
cmp
rcr
inc
or
pop
jns
dec
cmp
fcomi
jge
xor
js
mov
clc
lret
sbb
push
dec
cmpsl
sub
mov
nop
out
inc
sbb
dec
icebp
lock
dec
mov
push
mov
idiv
loop
or
mov
mov
inc
lret
pushf
xchg
sub
jno
xchg
in
mov
inc
call
mov
or
movsb
jle
xor
mov
clc
outsb
sarl
xor
imul
adc
shrb
mov
test
mov
aas
adc
mov
sub
cli
add
mov
addb
rcrl
loopne
dec
enter
jle
iret
insb
or
mov
push
jl
xor
mov
xchg
daa
inc
mov
fldenv
jmp
shlb
psrlw
dec
lea
mov
ds
mov
jmp
lds
loopne
jo
out
hlt
push
cmp
push
mov
shrl
sbb
testb
in
jp
cmc
lock
adc
mov
xor
aam
cltd
jo
int3
out
in
ja
setb
shrl
sbb
lds
in
movsl
push
jb
hlt
cltd
icebp
daa
add
cmp
sbb
fsubl
ja
pusha
mov
faddp
stos
sahf
call
and
mov
mov
jl
mov
cli
mov
stos
push
stos
mov
and
aam
js
xor
add
fwait
xor
or
fstl
stos
jp
ret
or
dec
jbe
arpl
sbb
aad
pop
loop
push
scas
jp
dec
push
leave
cmpsl
sub
push
mov
test
jp
dec
xchg
push
and
pushl
sbb
lea
cmp
stc
xchg
mov
les
gs
test
adc
outsl
pop
xchg
dec
std
dec
jmp
mov
sbb
movsl
xchg
das
xor
scas
ja
test
pop
inc
xchg
adc
pop
xor
cmpsb
xchg
in
out
mov
gs
lock
loop
scas
mov
and
hlt
insl
push
inc
xchg
nop
and
dec
mov
inc
test
jae
jae
data16
push
sbb
cmc
jo
xor
adc
leave
xor
cmpsl
pop
adc
shrb
xchg
gs
loop
mov
pop
gs
and
and
jmp
mov
imul
xchg
pop
scas
sub
rclb
mov
addr16
in
pop
mov
sahf
aam
imul
and
jbe
pop
call
mov
mov
and
imul
scas
mov
cli
or
mov
aas
ret
enter
popf
lcall
fldl
mov
loop
mov
test
sti
lret
sbb
scas
loope
pop
movsb
inc
aam
add
jmp
test
lds
or
xor
adc
add
mov
pop
mov
xchg
jmp
mov
leave
loope
jb
inc
js
push
and
stos
add
rcll
adc
clc
ret
rcll
push
ss
cmpsb
push
adcl
andb
cmp
xchg
test
sbb
add
fxch
mov
xchg
fisubrl
mov
xchg
dec
insl
dec
xor
xchg
aad
imul
mov
pop
lds
xchg
xor
add
pop
sahf
mov
jmp
xor
imul
mov
and
cmp
stos
cld
ss
xchg
cmp
adc
mov
pop
int
jo
jo
push
push
jb
popl
inc
daa
add
popf
push
push
in
or
xor
loope
mov
inc
out
sub
mov
fistl
aas
cli
test
inc
dec
and
loopne
mov
insl
in
jb
xchg
or
pop
rcrl
xor
in
sahf
and
mov
jns
cmpsb
ret
or
stc
das
sub
wbinvd
hlt
sbb
mov
into
mov
mov
push
aas
out
fisttps
sub
rcrb
mov
pop
xchg
or
movsl
insl
push
add
negb
cmc
fistpll
movsb
cmp
jnp
jp
or
js
jmp
sub
push
test
push
or
push
dec
pushf
lret
scas
out
pop
scas
xchg
mov
or
test
or
jmp
mov
fmull
add
xchg
adc
add
test
fisttpll
xor
subl
adc
inc
in
add
push
mov
jge
mov
mov
xchg
and
push
adc
dec
sbb
jp
stc
subl
repnz
dec
and
les
sub
jg
mov
mov
jl
rol
enter
aas
cmpsb
jle
out
je
adc
fnstcw
loopne
movd
xchg
imulb
lea
adc
inc
pop
shll
sub
call
hlt
add
sahf
ficompl
pop
inc
and
sti
loope
popf
mov
mov
fadd
pop
pop
data16
andb
push
loopne
andb
iret
add
add
and
bnd
outsb
in
div
out
aas
cwtl
shrb
xor
adc
xchg
repz
and
cwtl
ljmp
jbe
out
neg
testb
aad
and
bound
xchg
pusha
int
sub
movsl
pop
sub
pop
sbbl
mov
push
call
mov
jecxz
out
jne
arpl
arpl
mov
mov
pop
jle
aas
pop
push
std
mov
inc
icebp
sub
cmpl
in
inc
dec
push
dec
adc
sub
jne
es
cmp
pop
mov
xlat
and
lcall
pop
in
cwtl
fcompl
cli
stos
shrb
repnz
dec
fcoms
test
int
in
xor
dec
dec
push
dec
dec
add
out
mov
pushf
add
sbb
pop
jl
lods
sbb
test
xchg
adc
inc
push
add
dec
adc
dec
shlb
and
jne
mov
ret
pop
xor
sbb
loope
clc
mov
je
adc
sahf
add
push
lods
in
fimull
ret
xor
jo
jp
repnz
aas
clc
lret
es
pop
movb
mov
xlat
add
mov
mov
mov
repz
mov
sbb
sub
cmpsl
cld
addr16
push
xchg
mov
or
mov
shll
mov
cwtl
cmp
fstpt
pop
cld
cmpsb
xor
fildll
out
sub
in
lcall
rcrl
and
add
imul
scas
in
test
mov
fs
push
mov
mov
test
movsl
in
push
fsubl
neg
and
sub
push
test
add
xor
icebp
mov
or
popf
or
push
add
in
sub
lret
pushf
adc
jge
jns
fisubl
jbe
jmp
adc
shll
repnz
insb
pop
jle
out
lock
divl
sub
enter
pusha
lret
fcompl
sbb
xor
xchg
sbb
jg
imul
fsts
out
add
push
lds
arpl
cs
stos
pop
push
aas
nop
int
sbb
fmull
jecxz
dec
add
inc
adc
or
sbb
std
fnstenv
mov
mov
mov
cmp
dec
add
inc
std
in
leave
pop
lock
dec
lods
out
clc
aad
xchg
xor
jmp
dec
stos
gs
pop
push
movsb
mov
adc
and
int3
push
scas
add
push
sahf
mov
in
clc
or
jecxz
adc
sarl
inc
aam
mov
inc
cld
push
dec
repnz
sub
lahf
cwtl
cmpsl
cmc
fs
jmp
andl
and
dec
mov
stc
jo
repz
jmp
cltd
mov
pop
pop
ds
add
fcomps
das
cmp
sub
and
imulb
jl
push
xor
fnstsw
mov
jp
ss
mov
jo
mulb
cmp
xchg
and
sub
fldl
call
xchg
push
es
das
fstps
repnz
in
add
mov
ss
bound
ret
inc
je
dec
jmp
or
pop
dec
outsl
ja
fs
popf
mov
push
dec
jo
gs
adc
cmp
iret
frstor
or
mov
in
dec
mov
or
mov
pop
mov
sbb
popf
out
push
xor
popf
inc
cmc
mov
pusha
gs
add
jae
inc
push
add
inc
cltd
cld
test
pop
mov
movsl
cmpsl
fs
sti
gs
out
shll
nop
jmp
lods
sub
jecxz
lret
jp
insl
sub
adc
push
icebp
add
cmp
jle
in
add
xor
or
xchg
nop
incl
lods
xor
xchg
pop
ja
nop
outsb
jno
push
mov
cli
jns,pt
cmp
out
lods
xchg
jbe
iret
push
daa
push
test
lret
pusha
fs
in
rorb
pop
ret
fxch
mov
daa
je
fisubs
cmp
cmp
in
dec
cmc
out
repnz
sbb
inc
xchg
mov
mov
stc
or
push
rorl
bound
movsb
mov
leave
cwtl
xchg
insb
shlb
mov
rorl
mov
aas
inc
int3
and
fdivs
or
out
pushl
mov
push
enter
inc
cli
int
stos
push
jns
test
add
in
push
and
loop
scas
push
imul
sub
pop
push
addb
push
jge
xor
aas
add
jle
popa
cwtl
jp
cld
xchg
fidivrs
jae
and
push
push
test
js
push
shll
cli
xlat
xor
enter
dec
xchg
mov
cmpsb
iret
sub
mov
aam
negl
mov
cmpsb
imul
mov
outsb
cmp
test
daa
scas
sub
cmp
pop
rcrl
scas
shl
fistps
xchg
mov
dec
repnz
out
enter
scas
add
jp
and
mov
pop
in
mov
xlat
xchg
cmpb
xor
xchg
daa
rcrb
imul
cs
pop
cld
sbb
dec
dec
lret
inc
push
xchg
xor
movsb
add
sub
mov
lret
cmp
add
lret
imul
imul
dec
mov
pop
nop
nop
ja
sbb
or
mov
inc
mov
dec
sub
add
repz
aad
mov
mov
adc
aad
test
mov
jno
sub
int3
pop
cmp
jnp
cwtl
call
xchg
cs
inc
cmp
jg
mov
roll
sahf
ficoml
inc
sub
push
pop
or
loope
test
orl
aam
lret
movsl
and
dec
xchg
adc
inc
mov
mov
inc
std
jmp
inc
lret
mov
popa
or
sub
push
jne
jecxz
negl
lcall
sbb
cs
xor
pushf
clc
push
inc
xchg
xor
push
xchg
inc
hlt
stos
je
jecxz
jp
movsb
pop
xchg
fs
scas
lcall
jg
push
gs
loop
push
sbb
and
sar
push
sbb
mov
sarb
out
pop
cld
repz
outsl
jge
or
sbb
pop
popl
adc
mov
pop
mov
sti
ljmp
add
sub
xchg
mov
mov
shrl
jle
test
sbb
push
loopne
jnp
xor
cwtl
inc
imulb
stos
xchg
inc
dec
push
xchg
sahf
int3
sub
lods
and
pushl
mov
loopne
inc
xor
rcrb
fstp
sbb
and
faddp
imul
pop
iret
pop
xor
lret
mov
xchg
mov
fstps
out
mov
cli
mov
clc
sub
mov
mov
rorb
dec
arpl
xor
scas
jnp
xor
shrb
push
adc
inc
test
stc
push
rcrl
lods
pop
pminsw
mov
mov
fwait
mov
jo
add
xchg
cld
add
test
pusha
lds
add
lods
or
push
es
adc
test
pushf
sarl
mov
adc
mov
nop
mov
ss
jne
xchg
xor
pop
pop
outsl
loop
test
push
call
sub
pop
dec
jae
mov
outsl
add
jecxz
pop
pop
dec
iret
push
les
pushf
mov
jne
push
mov
mov
aas
add
mov
and
mov
aam
mov
ret
enter
stos
xchg
lods
pop
dec
int
pop
mov
mov
leave
xor
cmp
cwtl
sti
jae
les
mov
jnp
push
sar
pop
test
cmpsb
xchg
sbbl
push
ret
or
cmpsl
push
push
or
add
jnp
jmp
sbb
xlat
aaa
mov
rcr
add
shll
pop
jecxz
and
adc
pop
mov
jg
jmp
ret
cmp
mov
push
std
mov
rcrb
dec
inc
test
sub
lods
adc
ret
subl
pop
fs
and
mov
sti
xchg
sbb
stos
adc
jo
jge
xor
out
jb
test
aas
nop
cmp
sbb
add
aas
test
das
dec
ret
mov
cmp
inc
jns
cld
test
sahf
lahf
jno
jl
fidivrl
and
or
mov
cli
jle
cmp
mov
ret
fmuls
xchg
xchg
iret
or
push
out
xlat
mov
fs
mov
or
fstp
jle
test
into
jns
add
cld
mov
jp
xchg
sbb
leave
jecxz
outsb
push
xor
sub
jb
inc
faddl
mov
dec
stos
jo
inc
pusha
adc
and
je
add
or
mov
jle
and
ds
dec
add
lods
adc
lret
fstpl
or
mov
les
dec
push
dec
mov
shl
mov
push
sbb
lds
jne
pop
sbb
or
push
mov
loopne
mov
lcall
dec
ror
push
sar
cmpsb
popa
leave
jmp
jle
push
out
cs
mov
hlt
xchg
mov
fsub
and
xchg
lods
rcl
jnp
fildl
add
or
inc
fnsave
sub
push
orl
in
xchg
pop
fnsave
pop
xor
xchg
or
sbb
in
in
add
dec
xor
inc
ret
adc
pop
push
loopne
push
test
fists
pop
pusha
fnstcw
mov
bnd
sbb
dec
mov
mov
js
movsb
in
lret
xchg
pop
adc
cmp
mov
jp
std
imul
lods
call
cmc
xor
cmp
and
gs
add
jae
and
loopne
xchg
xchg
mov
sub
nop
pand
inc
jno
ret
mov
sub
test
mov
frstor
clc
arpl
cwtl
push
adc
jb
shlb
aas
pushf
addr16
dec
add
outsb
pop
insb
jno
xchg
aaa
rcr
fildl
stos
mov
xchg
loope
fwait
outsl
cli
imul
mov
and
movl
push
nop
dec
ds
ret
inc
shll
test
pop
leave
sub
and
add
cmp
mov
fimull
adc
inc
mov
jl
mov
in
rorb
aam
or
adc
inc
push
stos
scas
inc
xchg
aas
dec
repnz
adc
aam
add
fs
cltd
lcall
test
dec
mov
push
test
mov
jecxz
xchg
inc
add
inc
sub
loopne
push
push
bound
lahf
jns
or
xor
pop
test
adc
clc
mov
movsl
sarl
dec
insb
jo
in
add
fistps
sub
mov
int3
fs
push
cld
daa
lock
cld
dec
dec
sbb
repz
mov
dec
push
fdivrs
ds
dec
fwait
scas
add
mov
cs
jmp
jge
sarl
jecxz
xor
ja
inc
cmp
jmp
frstor
in
outsl
stc
nop
sbb
rolb
xchg
lods
mov
hlt
sub
cmp
xchg
rclw
fcoms
mov
in
ret
sub
cmpsl
shl
iret
cmp
inc
pop
xchg
adc
leave
scas
push
cltd
xchg
aam
mov
add
insb
ja
and
call
sbb
sti
ffree
mov
mov
std
jecxz
cld
mov
push
cmp
lods
and
orl
cmc
and
xor
fmuls
rcrl
pop
and
mov
jno
and
jl
xor
aad
mov
pop
xchg
jle
pop
lods
mov
jbe
push
divb
and
rol
mov
pusha
and
and
pop
pop
adcl
lods
xchg
mov
cmp
loopne
xlat
cmp
mov
jmp
sbbb
xchg
das
cmp
pop
arpl
mov
ror
mov
pop
test
jecxz
adc
sti
cwtl
dec
lret
lock
roll
sbb
loop
pop
das
push
ret
ret
inc
jp
lea
inc
and
jns
fimull
clc
pop
pop
lcall
xor
mov
mulb
jmp
mov
popa
lahf
icebp
insl
jmp
jmp
cwtl
and
insl
arpl
lahf
imul
mov
fsubrs
out
out
adcb
pop
inc
dec
inc
inc
les
fisubs
loope
push
enter
popf
push
jle
mov
or
inc
mov
fstpt
jne
cmc
aaa
lahf
cmpsb
enter
pop
in
fdivl
test
je
out
adc
fbld
sub
ljmp
adc
and
ds
cmpsl
xchg
dec
fdivs
nop
sbb
mov
popa
popa
push
cli
orb
fadds
or
fsubr
jns
jl
xlat
and
dec
mov
test
repz
shl
xchg
jb
test
jbe
sub
icebp
push
mov
jl
es
pop
xchg
sbb
mov
test
arpl
jno
mov
sub
mov
cmp
and
cli
lahf
or
test
or
lcall
call
push
js
or
inc
lahf
xor
rcl
icebp
push
lret
jo
fidivs
mov
inc
mov
popa
jbe
xor
scas
enter
mull
push
inc
adc
mov
enter
test
or
fists
push
push
popa
or
jecxz
pop
in
or
cltd
rcl
addb
mov
jns
mov
or
gs
pop
jno
andb
sub
pop
push
lods
mov
xchg
add
and
mov
popf
jl
aas
ficompl
adc
outsb
sub
pushf
frstor
add
pusha
dec
and
test
bound
and
cltd
cmpsb
les
scas
fidivrl
outsb
and
fnsave
mov
insl
sub
leave
fcomps
or
mov
bound
mov
shll
xchg
or
filds
mov
mov
aas
call
xchg
outsl
dec
fwait
push
imul
jne
std
xchg
adc
push
cmpb
adc
cmp
dec
jno
push
cmp
mov
lds
insl
adc
xchg
aaa
sbb
inc
mov
push
jge
mov
jp
mov
xor
jo
mov
adc
outsl
jne
cmp
or
shlb
shrb
test
imul
mov
roll
lret
pop
mov
in
add
pop
notb
cmp
pushf
adc
fwait
lods
out
mov
xlat
mov
mov
dec
bound
addr16
add
mov
adc
mov
sar
xor
mov
addl
in
sti
fs
jns
fisubrs
sub
inc
pop
mov
mov
xorb
pusha
cmc
ss
imul
stos
xchg
push
ja
pop
and
or
test
inc
rcll
jns
cltd
sbb
jmp
mov
xchg
test
pop
pop
inc
nop
bnd
fnstsw
mov
gs
hlt
daa
xchg
mov
inc
vminps
ret
xchg
or
ds
mov
pop
inc
popf
mov
aas
mov
jno
mov
jne
cmpsl
addr16
lcall
gs
push
testb
fstpl
xchg
stc
and
cmp
shll
ficomps
mov
inc
sti
add
sbb
gs
sti
popa
imul
inc
inc
mov
repnz
push
fstps
mov
dec
es
inc
jp
cmp
mov
rorl
xchg
cmp
shrb
inc
pop
jne
mov
xchg
inc
cld
sbb
cs
mov
sti
push
dec
add
inc
call
push
sbb
int3
mov
mov
sahf
mov
les
add
movsb
mov
push
les
fsub
mov
dec
into
iret
insl
mov
pop
ljmp
rol
mov
loope
out
arpl
mov
cmp
adc
lds
cs
shrb
lods
test
push
pop
in
adc
xchg
adc
in
jne
mov
or
sbb
push
mov
test
or
jecxz
cltd
in
cltd
into
push
in
and
mov
pop
pop
call
sub
or
mov
scas
sub
loop
dec
pop
dec
aam
fisubrs
sub
and
imul
xchg
dec
andl
aam
push
loopne
add
shll
ja
jg
fistl
mov
dec
push
mov
adcl
dec
sbb
mov
out
push
enter
stos
imul
add
outsl
pop
mov
inc
setge
popf
data16
jmp
int3
xchg
imul
mov
add
push
cwtl
jbe
jp
adcb
adc
fisttps
cwtl
jno
sub
mov
enter
and
xor
fdivrl
lods
jmp
cli
and
shrb
add
cmp
mov
jno
call
add
jecxz
sub
movsl
stc
push
mov
push
or
subb
mov
cmp
pop
lret
xor
test
inc
jb
pop
rorl
sbb
mov
sbb
in
ret
and
jl
push
mov
stos
insb
xchg
jne
add
mov
fimuls
lcall
test
inc
cmp
addr16
cmpsb
push
fs
inc
fbstp
inc
sub
pushf
in
and
repz
xchg
addl
fs
xchg
mov
sbb
dec
scas
mov
push
pop
shll
and
xor
fwait
lcall
sub
test
rcrb
sbb
mov
mov
inc
adcl
sahf
xorb
sub
mov
mov
jmp
push
inc
out
das
mov
push
out
imul
jo
fiadds
xchg
xchg
xchg
hlt
pop
loop
xor
sub
sub
xorl
adc
aad
adc
jecxz
fldcw
push
lods
and
out
xchg
or
sub
xchg
adc
cmpsb
xchg
cltd
addl
xchg
scas
push
andnps
frstor
scas
and
mov
lock
mov
scas
inc
sbb
cmpsl
scas
add
rcr
in
jne
out
test
add
mov
cmpl
mov
sti
leave
mov
std
sti
push
adc
dec
sbb
push
pop
adc
jecxz
cld
cmp
cmc
push
jle
cmp
pusha
pop
fldl
inc
stos
andb
rorb
les
aaa
pop
sub
ficoms
int
lret
and
sti
cmp
push
mov
pop
pop
aad
push
cs
mov
cmp
xor
adc
xchg
loopne
sub
out
dec
cs
sbb
sub
jae
or
mov
ret
mov
fnstenv
xor
stos
icebp
push
mov
mov
or
iret
cmc
imul
xor
add
dec
cmp
xchg
jbe
lds
test
cmp
sub
xchg
or
daa
shl
pop
jne
pop
leave
out
add
rcl
xchg
icebp
or
shr
mov
sbb
divb
xor
inc
fdivs
and
cs
hlt
cmpb
sbb
push
subb
mov
jno
xor
jae
icebp
pushf
xchg
mov
std
pop
repz
add
lret
popf
add
ljmp
cld
jne
scas
sub
cmpsb
push
repnz
scas
add
cli
jnp
mov
enter
adcl
adc
int3
das
mov
inc
mov
jmp
xor
xor
sub
loopne
lods
jo
mov
mov
xor
lock
lret
cs
jne
jbe
cmp
sbb
imul
cli
clc
repz
movsb
xchg
outsl
cwtl
addr16
in
cld
sbb
les
push
mov
push
popf
jl
xchg
enter
fsubs
scas
sti
mov
mov
sbb
and
mov
ljmp
je
mov
sub
pop
mov
movsb
repnz
aad
clc
cld
or
push
sbb
sbb
xchg
hlt
adc
daa
xchg
lcall
mov
out
shll
fucomi
or
shrd
dec
dec
sbb
inc
dec
sbb
sub
test
sbb
out
in
int
mov
icebp
in
insl
jae
lahf
cltd
dec
push
dec
inc
stc
andl
mov
incb
pop
imul
std
sub
or
jg
fstl
xor
push
sub
mov
inc
dec
sbb
push
add
cmpsl
mov
cmp
inc
lds
push
mov
mov
test
inc
push
lods
sub
sub
ret
scas
repz
movsl
icebp
jne
push
mov
cltd
push
nop
aaa
shll
vorps
lcall
outsl
inc
sub
jbe
scas
dec
aam
fwait
out
aad
outsl
or
push
fsts
pop
ljmp
lahf
loope
test
scas
dec
enter
add
fistl
xchg
movsb
rclb
xchg
fistl
fs
call
into
jle
mov
xor
push
jmp
fs
mov
mov
dec
sahf
mov
in
mov
push
lock
out
or
addr16
mov
pop
or
inc
out
or
aad
and
sub
dec
push
push
call
loop
mov
xchg
daa
or
insl
dec
ljmp
push
mov
popf
stos
test
out
scas
lods
fistl
cld
test
jne
sbb
sub
cwtl
mov
jmp
inc
imul
mov
adcl
orb
xchg
sub
jne
inc
or
cwtl
outsl
insb
jmp
adc
xchg
adc
mov
loopne
xchg
aad
movsb
mov
pop
inc
aaa
xchg
lret
adc
xchg
je
pop
adc
in
add
int3
in
repz
xor
xor
inc
dec
and
and
pop
add
sbb
decl
in
dec
adc
mov
sbb
imul
cmpsb
cmpb
jp
mov
xor
cmc
push
add
pop
xor
sub
and
lahf
cwtl
mov
in
cld
das
popf
xchg
ret
ljmp
dec
imul
outsl
outsb
add
adc
xchg
add
push
je
or
std
push
push
and
into
jb
push
dec
movsb
sbb
pop
jb
pop
cmp
cmpsb
decl
add
test
in
in
sbb
cmpsb
fwait
je
mov
adc
mov
or
and
add
test
sbb
ja
repz
xlat
push
mov
rorl
in
std
dec
push
or
imull
lahf
inc
roll
shlb
mov
xor
lret
loop
dec
lret
xchg
push
imul
repnz
imul
sub
inc
ds
popf
aaa
ret
jecxz
movsl
mov
in
push
dec
inc
add
subb
pop
std
push
xchg
inc
sti
loope
push
xchg
pusha
xlat
cltd
testb
xchg
test
gs
xchg
mov
ret
fnsave
or
push
sbb
or
dec
push
cmpsb
ljmp
mov
inc
push
lods
cmpsl
cmp
imul
jns
leave
or
sub
adc
imul
lcall
inc
into
stos
jne
ret
or
inc
jp
push
push
das
sbb
mov
lods
in
push
pop
xor
mov
pop
sub
movsl
mov
insl
xchg
or
mov
push
adc
in
xrelease
push
cmpsb
xchg
scas
sub
leave
insl
xchg
add
stc
xchg
inc
sbb
add
imul
sarl
cmp
scas
icebp
test
push
pop
clc
mov
hlt
frstor
add
sbb
sub
fimull
xchg
fsub
pop
ja
mov
push
pop
xor
aam
xchg
jmp
push
pop
and
mov
mov
imul
cltd
repnz
sahf
push
dec
mov
mov
or
lea
sbb
data16
scas
mov
outsb
lea
jno
fwait
add
add
add
test
test
jb
dec
pop
in
push
mov
test
in
movsl
push
xchg
movsb
inc
jle
jp
adc
lods
adc
inc
jb
push
inc
decb
es
rclb
int
sbb
inc
imul
outsl
insl
sub
inc
aas
lods
and
out
pop
mov
cli
jecxz
xchg
pop
xchg
aas
sub
cmpsl
addr16
jl
adc
xchg
mov
and
lcall
mov
ret
mov
stc
add
and
mov
ja
mov
dec
testl
lret
or
sbb
loop
add
filds
stos
or
fimull
cmc
es
sub
sahf
push
push
pop
dec
cmc
mov
hlt
sub
xor
test
cli
cld
out
inc
repz
test
mov
mov
out
mov
in
jle
pop
lret
inc
nop
mov
int3
cwtl
popf
adc
pushf
loop
push
inc
int3
js
aad
popf
ss
scas
repnz
int3
test
adc
xor
sub
jmp
mov
subb
testl
test
subb
push
popf
daa
cmpsb
es
std
push
faddp
aam
dec
or
jae
aaa
imul
out
add
push
into
cmovno
js
mov
xchg
xor
sub
lcall
dec
decl
sahf
movsb
negb
sbb
in
jecxz
gs
std
fidivrs
push
jo
ljmp
inc
xor
mov
or
xchg
int3
xchg
fsubr
push
mov
mov
cmp
dec
or
lahf
fs
loope
addl
cmp
push
in
dec
clc
dec
pop
adc
dec
mov
add
push
ficompl
dec
jle
mov
test
lahf
mov
sbb
adc
ja
mov
fmuls
nop
into
dec
dec
jb
iret
mov
sbb
mov
out
and
rcl
ljmp
pop
push
mov
jge
cltd
add
adc
stos
add
fmuls
jno
or
add
pop
mov
stos
pop
xchg
push
mov
je
sub
out
pop
mov
sbb
cwtl
and
sub
push
subb
pop
sarl
loop
ficomps
push
leave
popf
dec
nop
repz
cli
and
mov
orl
jno
adc
cs
pop
pop
pop
xor
pushf
cltd
ljmp
inc
xor
push
pop
inc
jae
daa
hlt
sahf
inc
jnp
call
or
movb
fildll
mov
fcompl
leave
lea
mov
xor
push
xchg
fs
in
cmp
push
push
mov
clc
testl
pop
daa
pop
cwtl
xor
ja
mov
lahf
in
push
xchg
leave
mov
fcmovnu
dec
in
xlat
inc
or
push
loop
mov
pop
jl
adc
les
jb
inc
mov
loop
sub
aad
lret
push
lods
stos
ljmp
push
popf
into
ss
mov
cmp
sti
cmp
xchg
jmp
out
pop
stos
arpl
scas
filds
les
xlat
cli
push
int3
cld
cmp
inc
xchg
sti
fnsave
xchg
cmp
mov
orb
pop
pop
sarl
inc
add
cltd
jns
repnz
sub
subb
in
in
adc
mov
add
mov
cltd
hlt
jo
pop
mov
mov
push
andb
push
push
daa
lea
and
loope
mov
data16
or
add
add
push
shrb
jmp
stc
addr16
sub
aad
shrb
fistl
pop
sarl
mov
xor
add
repnz
cmpsb
testb
jne
xor
mov
shrb
mov
push
dec
xor
xor
idivb
loope
mov
sbb
inc
dec
adc
sub
dec
stos
hlt
sbbl
pusha
sub
and
loope
mov
jo
les
push
inc
mull
loopne
cmc
stc
dec
sahf
xchg
push
test
cs
int3
lock
jg
cmp
xlat
xchg
mov
js
jae
je
enter
loope
mov
dec
jno
adc
sub
mov
jp
cmc
pop
sub
pop
xchg
sbb
fidivl
inc
gs
pop
sbb
popa
ss
lcall
sub
xchg
jp
pop
xchg
addl
xchg
insb
or
inc
xchg
jne
mov
lea
xlat
orl
cmp
lea
cmpsl
and
es
push
test
pop
pop
adc
sbb
cmp
cmp
xorl
pop
pop
vpsubusw
loopne
mov
fimuls
lea
or
xchg
f2xm1
insb
add
inc
dec
imulb
jecxz
lret
mov
dec
in
jne
dec
and
addr16
push
mov
mov
jno
mov
lea
add
mov
pop
das
or
ljmp
scas
bound
cmp
mov
out
std
dec
jne
out
jae
mov
aam
cmp
aas
test
adcb
shl
cmp
fistps
scas
add
leave
lret
adc
aaa
xchg
mov
loopne
sub
bound
add
stos
cmp
imul
cmp
scas
lahf
mov
movsl
fdivrl
nop
cmp
mov
ficoms
dec
into
cmp
mov
xor
andb
movd
sbb
xchg
imul
and
in
fisubrs
mov
or
or
test
ret
out
dec
mov
int3
das
add
and
add
in
inc
popf
daa
outsb
jno
xchg
xor
sbb
or
jecxz
inc
jg
mov
xchg
iret
std
cmp
fcoml
mov
push
ret
pop
xchg
xchg
mov
repnz
sbb
cmp
jbe
jmp
jecxz
inc
adc
and
pusha
out
jbe
add
cli
insb
sbb
dec
popf
jmp
popf
mov
xchg
xchg
cmp
jns
in
out
popf
or
rorb
call
icebp
outsb
jae
stc
sbb
stos
ja
in
dec
dec
nop
fnsetpm(287
movsb
ret
stc
pop
imul
incb
sbb
pop
sub
dec
sbb
ljmp
lcall
sbb
jnp
out
lcall
pop
jbe
outsb
gs
ror
into
scas
testb
xchg
pop
test
lea
add
jecxz
xchg
aad
out
cmp
push
pop
hlt
pop
leave
dec
or
mov
sbb
pop
das
stos
das
xor
jp
mov
jb
int
xor
and
int3
add
in
mov
mov
in
fwait
or
pop
shl
xor
lcall
sub
mov
or
clc
mov
test
push
mov
add
add
fs
sbb
repnz
imul
inc
jae
xchg
sbb
push
xchg
sub
cmpsb
pop
push
shlb
xchg
jbe
roll
shl
pusha
push
or
sub
inc
xchg
add
cli
xor
testb
xor
mov
scas
mov
adc
je
dec
mov
push
inc
add
data16
or
out
mov
inc
push
pusha
push
mov
les
mov
xorl
inc
xchg
xor
loope
pop
icebp
popa
es
cltd
mov
cmp
pop
roll
mov
fs
hlt
repnz
push
or
add
jbe
xor
pop
in
scas
cmp
imul
loope
add
insb
xor
push
sahf
jmp
test
out
jnp
loope
mov
mov
int
mov
out
inc
cltd
movsl
cwtl
in
jp
jns
sbbb
loope
cmp
lds
addr16
fucom
insb
push
fiadds
movsl
and
jg
xchg
add
add
push
jbe
inc
adc
sub
mov
cmpsl
loop
adc
fwait
or
push
inc
and
lret
xchg
addr16
and
xchg
ret
push
cmp
jae,pt
test
scas
sub
loopne
lods
and
data16
in
mov
push
sub
fwait
in
pop
rorb
mov
out
pop
adc
mov
popa
push
decl
jmp
out
add
jl
xlat
jecxz
or
push
xchg
xchg
adc
sbb
aas
lock
cmp
out
pop
push
push
adc
xchg
xor
mov
jb
aas
inc
test
mov
shrl
xchg
aam
fstpt
cld
test
add
enter
fs
ja
mov
loopne
je
cmp
push
ja
jnp
mov
jns
mov
dec
jmp
mov
int3
in
sysexit
test
sbb
hlt
jo
pop
jp
xchg
in
xchg
pop
sub
out
sbb
dec
pop
cltd
out
xchg
fwait
push
mov
fmulp
pop
call
add
mov
push
lds
nop
mov
insl
daa
xor
je
cwtl
cmc
cmpsl
iret
das
fcoml
subb
ss
and
loopne
in
push
xor
test
sub
pop
inc
imul
loop
jle
ja
scas
imul
push
inc
loopne
and
ret
or
sti
shll
mov
je
aas
loop
sub
mov
pop
fldenv
sub
pop
mov
adc
andb
sub
movsl
sarl
es
add
fcompl
jle
xor
hlt
lcall
dec
sbbl
insb
mov
gs
arpl
sub
and
xor
push
jle
stos
pop
mov
mov
pop
jnp
dec
jbe
jb
jo
cmp
lret
sahf
ds
xchg
lds
sub
pop
imul
dec
pop
mov
or
pusha
cld
outsl
dec
scas
cmp
sbb
inc
incl
vmovlps
dec
sub
xchg
or
cmp
xor
xchg
jno
int3
imul
loop
push
and
and
je
lahf
cwtl
inc
cmp
rolb
mov
pop
lods
ret
loopne
gs
sahf
mov
leave
jecxz
or
sub
push
push
pop
and
in
mov
js
shll
lcall
inc
adc
dec
flds
mov
push
adc
sbb
mov
jb
cmp
test
outsl
inc
mov
lods
push
mov
mov
xor
cli
lds
lret
sub
lock
inc
and
shr
mov
mov
jno
jmp
pushf
pop
inc
and
daa
or
call
dec
ljmp
mov
sbb
adc
jnp
jns
xchg
pop
in
stos
cmp
gs
sub
leave
push
dec
pop
lret
sub
xchg
fistl
xchg
dec
pop
jne
add
int
and
insb
inc
std
outsb
dec
enter
dec
idivl
mov
push
or
inc
mov
stos
mov
dec
xor
negl
mov
jno
lds
outsb
notl
ljmp
sub
sbb
jmp
pop
push
sub
test
pop
daa
jle
xor
test
mov
aad
push
mov
inc
in
push
mov
sub
je
jnp
push
clc
js
outsb
jmp
fsts
push
cmp
call
pop
sub
icebp
stos
pop
or
out
jno
mov
jae
iret
sub
test
pop
push
sub
sbb
mov
mov
xor
mov
dec
in
mov
in
dec
std
test
pusha
xchg
enter
ret
inc
movsl
lods
sbb
into
lret
mov
aas
roll
cmpsl
insl
shlb
and
mov
xlat
clc
mov
shrb
sbb
inc
imul
dec
dec
lods
add
push
inc
dec
xchg
or
or
int3
test
mov
orl
outsb
pop
mov
les
mov
out
adc
pop
pop
sbb
pop
int
sub
and
push
scas
inc
and
or
mov
sahf
or
js
mov
mov
lock
fcmovbe
sbb
pop
ds
stc
jge
xor
or
imul
into
cmp
or
add
leave
and
frstor
push
lret
lcall
push
sbb
outsl
rcrl
push
mov
ja
clc
mov
mov
cmp
push
or
call
jno
mov
stc
aaa
sub
and
fnstcw
mov
sub
fucomip
sbb
mov
fdiv
cld
lock
sbb
jae,pn
arpl
fmuls
outsl
mov
cltd
dec
imull
inc
cmp
adc
cmp
cmpl
stc
int3
pop
addr16
sub
jne
mov
and
das
sbb
jns
cmpsl
jecxz
movsb
fsubl
movsb
in
fwait
adc
inc
mov
mov
or
pop
test
dec
mov
ficoml
mov
cs
sti
xor
imul
cmp
lock
testl
lret
lahf
or
mov
mov
xchg
sub
leave
mov
insl
lock
adc
sbb
rolb
ljmp
movsl
es
push
add
ret
jnp
icebp
lret
sub
and
jbe
push
nop
or
scas
push
xchg
pusha
jle
cmc
xor
dec
out
pop
mov
arpl
pop
mov
xchg
div
pushf
and
add
or
pop
dec
mov
jl
and
cmpsl
pop
sbb
movsb
mov
das
cmp
ja
jbe
inc
push
shl
leave
mov
xor
dec
fcomps
stos
in
pop
xor
nop
insl
sbb
mov
mov
mov
mov
jnp
push
jns
lahf
addl
push
bound
outsl
mov
mov
push
das
mov
add
aam
add
lock
push
hlt
xchg
out
xchg
dec
stos
jl
aad
mov
mov
pop
push
arpl
fistl
rcrl
in
lods
test
adc
mov
or
sub
jns
and
jp
divl
repz
outsl
sbb
scas
lea
fmuls
repz
movsl
adc
jns
cmpsb
mov
mov
pushl
out
sub
or
cmp
es
dec
and
repnz
push
xchg
pop
cld
push
and
adc
rorb
mov
pop
stos
adc
mov
xor
sub
cmc
rcl
pushf
call
mov
push
mov
enter
stos
gs
dec
scas
push
pop
pop
sub
int3
ja
movsb
mov
or
xor
jne
test
hlt
clc
in
mov
lock
aad
jo
dec
outsb
ljmp
mov
cmp
jnp
mov
xlat
aas
movsb
cmp
lret
ja
not
stos
out
push
into
lahf
outsl
xchg
jns
push
mov
sbb
lret
cwtl
inc
rcrl
jno
adc
jg
movsl
add
jno
cmp
shrl
loope
ljmp
pop
pop
dec
pop
fdivs
inc
cmpsb
fwait
dec
and
arpl
mov
lods
sbb
xchg
xchg
and
movsl
cld
popa
jae
daa
jns
and
mov
aas
mov
and
ljmp
fidivrs
xchg
xchg
push
jecxz
jp
inc
sarl
mov
scas
cmp
into
xorl
jo
inc
mov
cmp
or
cmp
sub
loopne
sbb
ss
dec
push
lds
insl
repnz
and
xor
jb
mov
pushf
insb
int3
adcb
ss
mov
call
shl
arpl
jecxz,pt
sbb
mov
push
popf
in
and
pop
insb
arpl
fnstsw
lret
pop
inc
ret
mov
and
pop
scas
mov
jle
jle
negb
push
mov
pop
push
sbb
pop
into
push
push
sbb
je
adc
or
and
and
mov
ja
mov
dec
imul
mov
jno
in
pop
sub
verr
adc
sti
dec
fdivrl
inc
sub
fdivs
and
aas
add
mov
lds
dec
mov
cmpsb
insb
add
mov
cmp
pop
jmp
cmp
sti
push
mov
ret
add
mov
adc
aas
rcrb
outsl
mov
cmp
mov
jle
les
test
in
out
xchg
or
test
mov
cmp
int3
mov
xchg
fwait
push
scas
test
dec
mov
mov
insb
cmp
mov
pop
aaa
mov
leave
and
outsb
repz
xor
test
dec
outsb
stos
jle
cld
xchg
sti
shlb
mov
or
fstps
mov
jae
sub
jo
jbe
jb
aaa
xlat
mov
aaa
xor
aad
inc
jno
jge
ret
rorl
and
inc
fld
dec
enter
aas
jnp
in
fcmovnbe
jnp
js
push
sbb
or
mov
xchg
in
fsubs
clc
lret
jnp
sub
pop
xor
push
sti
dec
js
ret
aas
clc
icebp
xchg
mov
mov
shlb
aad
cmp
jb
test
pusha
or
adc
add
xchg
inc
sbb
xor
ja
test
push
adc
scas
fs
sbb
push
add
fndisi(8087
out
out
out
mov
cmp
aas
mov
jns
xor
jmp
pop
dec
inc
pop
adc
ror
test
add
mov
xchg
aad
jge
cmp
loop
mov
test
xor
daa
ja
fxch
or
pop
push
test
or
xchg
mov
mov
fucom
push
xor
or
xchg
xchg
enter
cmp
cmp
test
in
testl
add
xorl
xchg
mov
les
cmp
cwtl
cmpsb
fstps
cmp
movb
movsb
test
xchg
scas
outsl
push
jo
cmc
les
std
mov
test
or
and
repnz
pop
rorl
imul
imul
outsl
cld
aas
hlt
das
and
vmovntps
rcl
and
movsl
mov
inc
push
sub
jmp
fwait
imul
dec
mov
outsb
dec
rclb
push
and
stos
dec
mov
jge
int
dec
icebp
mov
pop
xor
mov
push
jl
xchg
fmul
outsl
les
into
xchg
sub
push
mov
push
push
sub
into
mov
mov
cpuid
hlt
clc
inc
fstp
adc
addr16
mov
dec
dec
data16
fmul
jp
es
cwtl
jo
mov
pop
mov
dec
sub
pop
push
pop
and
mov
rol
pop
inc
es
roll
in
fstl
outsl
repz
rcrl
int3
testb
shrl
cli
ret
mov
cli
cmp
and
in
testb
mov
push
pop
cmp
adc
cmp
gs
add
adc
or
cmpsl
dec
ljmp
and
lahf
add
xor
sub
pop
pushf
inc
out
xchg
dec
jmp
test
add
pop
frstor
adcl
aas
jle
mov
jl
dec
mov
je
dec
cmp
mov
leave
pop
mov
cs
in
sub
adc
nop
mov
movsl
call
imul
in
xchg
xchg
jae
inc
repnz
or
or
jns
sub
popf
adc
testb
cmc
xor
xchg
dec
insb
data16
hlt
add
out
outsl
inc
xchg
lock
test
dec
pop
push
mov
push
pop
adc
adc
sub
repnz
jp
in
inc
mov
shlb
xchg
leave
je
test
and
mov
inc
cmp
and
mov
push
out
fdivl
movsb
add
iret
jnp
mov
stc
je,pt
cmpl
pop
pop
jge
jne
cmpsb
sub
jmp
inc
aam
jge
mov
mov
jl
out
repnz
jle
popf
pop
std
mov
rcrb
aad
sub
data16
sbb
outsl
in
adc
push
jae
dec
sbb
and
adc
and
mov
js
push
repnz
pop
ss
mov
rorl
or
mov
adc
cmp
inc
jno
push
mov
mov
mov
jecxz
xor
cmp
cmp
mov
aas
or
sti
push
jo
repz
scas
and
jmp
int3
push
and
jnp
mov
push
sub
cmpsl
mov
jns
stos
int3
daa
add
lret
inc
mov
cmc
ljmp
xchg
rorb
mov
cltd
sub
pop
outsl
xor
lcall
ss
push
aam
fiaddl
lds
repz
cli
cmp
sub
cmpsl
mov
rolb
xchg
inc
add
xor
sbb
mov
push
sbb
testb
and
xchg
jo
sti
and
adc
mov
iret
or
stos
xlat
mov
fwait
call
aam
icebp
jmp
enter
repz
lcall
gs
mov
cltd
cwtl
mov
adc
dec
xor
ret
enter
jnp
sbb
mov
repz
mov
cs
rorl
push
iret
and
or
pop
xchg
cld
inc
aaa
mov
mov
loopne
mov
lcall
xor
jle
jmp
lret
mov
xor
nop
test
cmc
aam
mov
addr16
dec
adc
je
adc
fistpll
mov
flds
clc
popf
jb
inc
inc
pop
jge
sub
inc
sub
push
mov
or
hlt
jmp
jecxz
inc
mov
stos
add
enter
adc
mov
test
lock
xor
fs
adc
fiaddl
cltd
out
stos
movsl
dec
ljmp
dec
in
cwtl
jns
add
lods
mov
lahf
mov
and
pop
lock
or
xlat
xchg
xchg
pop
icebp
fisubl
bound
pop
push
push
inc
inc
push
int3
dec
das
jb
push
xchg
mov
es
repz
orb
cltd
add
add
add
jo
sbb
out
jge
test
int3
xchg
jp
pop
sub
add
xlat
pop
sub
testl
or
cltd
ljmp
mov
inc
add
push
pop
rcrb
adc
icebp
and
clc
mov
inc
jne
add
cli
popa
in
xchg
xor
movsl
mov
jge
test
adc
cmp
ret
addb
sub
cwtl
scas
imul
add
xchg
and
loopne
scas
jecxz
cmpsb
dec
mov
adc
stos
nop
pushf
mov
rcrb
jae
mov
ret
cmc
cmp
xor
lret
cmp
sub
sub
jecxz
fcmovu
jmp
mov
inc
mov
xor
loope
xchg
clc
fidivrl
test
adc
stos
cmpsb
push
cmp
pusha
inc
push
fdivr
push
ret
add
ss
popa
cmp
lea
xchg
leave
push
sti
cmp
int
jno
mov
dec
scas
daa
test
jae
pushf
adc
bound
test
push
andb
aam
mov
daa
add
xchg
lea
pop
sub
jo
pop
or
lret
pop
int3
std
push
xchg
sbb
or
jle
mov
cmp
mov
sub
int3
xchg
das
inc
lods
mov
das
inc
call
mov
test
xor
addr16
sahf
xchg
sub
aad
add
fidivrl
sbb
in
stos
cmp
mov
adc
dec
daa
adc
mov
mov
dec
mov
sbb
jl
push
pusha
pushl
xchg
stos
aad
push
push
mov
bound
js
call
ja
push
enter
mov
faddp
ss
stos
inc
sbb
repnz
mov
dec
cmc
je
ret
fwait
arpl
popf
sub
mov
popa
pop
cmpsb
fwait
cmp
sbb
mov
xchg
mov
mov
mov
inc
push
add
sub
xor
testb
xor
aad
leave
je
cmc
or
aas
push
std
sub
repnz
sub
fdivs
in
cld
icebp
aaa
das
adc
dec
fildl
mov
daa
lods
ja
push
lret
push
stos
or
cmp
sbb
outsb
xor
jns
inc
or
push
test
clc
cltd
enter
sbbl
and
mov
scas
lret
pusha
mov
data16
je
icebp
sbb
fwait
cmpsl
inc
jno
inc
cs
cmpsb
add
and
dec
mov
dec
cli
dec
mov
loopne
adc
mov
sbb
dec
incb
cli
xor
cmc
mov
cmp
mov
and
jge
mov
mov
sti
std
sbb
sub
in
popf
mov
jno
or
out
pop
xchg
cs
push
repz
mov
and
stos
imul
xchg
sbb
add
aas
mov
pop
inc
sub
sbb
in
arpl
dec
ret
mov
sub
loopne
shrl
mov
cmp
ret
insb
iret
imul
lds
clc
gs
shll
aad
xor
test
orl
inc
push
fisubrs
push
adc
xchg
xor
loopne
xchg
insb
lock
test
das
sbb
mov
mov
jne
jp
push
xchg
in
out
aas
and
call
scas
sahf
aas
mov
nop
xchg
or
sub
mov
hlt
mov
out
dec
pop
add
insb
lret
cs
add
shr
aam
cld
hlt
roll
test
push
jecxz
ret
enter
shrb
sbb
push
js
xor
dec
lock
add
push
sub
cmp
test
pop
or
outsb
scas
sub
outsl
popf
xor
fwait
fwait
sub
jl
mov
cmc
push
ficoml
les
aad
nop
push
ljmp
inc
push
mov
mov
mov
push
ds
fists
fstps
ret
jae
cwtl
scas
inc
lahf
arpl
sbb
push
in
sub
fwait
in
mov
or
sbb
mov
fiaddl
loopne
stc
data16
push
aam
ret
dec
outsb
mov
mov
fbld
sub
lret
int
lret
and
sub
cmpsl
push
insb
mov
clc
test
sarb
fdivs
shll
dec
mov
call
mov
lds
loope
inc
dec
mov
inc
mov
add
sub
push
mov
jl
rorl
flds
pop
pop
mov
mov
or
popf
cmp
movsl
adc
loop
lahf
sub
xchg
outsl
lcall
add
popa
cmpsl
fistpl
imul
sbb
imul
in
std
xor
arpl
xchg
mov
jmp
pop
aaa
sbb
add
dec
mov
mov
mov
push
inc
or
adc
adc
cmpsl
sahf
outsl
cli
not
xchg
ret
lahf
pop
xor
in
in
or
jge
and
out
call
loopne
cmc
std
rolb
ret
cltd
jnp
or
add
and
vandps
push
and
jnp
push
inc
mov
push
test
stos
shl
push
nop
jns
stc
clc
arpl
fists
popf
fwait
sub
xchg
cmpsb
inc
imul
mov
push
test
repz
in
adc
mul
std
lahf
push
js
dec
pop
andl
inc
add
adc
adc
pop
dec
sbb
pop
addl
aaa
inc
cltd
push
jecxz
hlt
setae
push
fwait
jno
ds
test
shlb
fs
addr16
dec
sub
ja
mov
shl
pop
in
shlb
pop
movb
hlt
cmp
in
inc
cld
ds
cltd
dec
pop
and
aas
mov
cmp
clc
mov
lods
out
dec
mov
xor
cmp
in
iret
pusha
adc
inc
jne
jl
mov
outsb
push
jecxz
sahf
or
aaa
jne
lods
push
pop
xor
pop
adc
stos
or
sbb
popf
xorl
mov
fmuls
mov
ss
lret
push
sbb
popf
out
inc
ficompl
cltd
notl
cmp
cmp
adc
insb
mov
pushf
and
push
rclb
ja
jge
cmp
push
or
push
je
pop
jns
pop
push
movsb
and
mov
cwtl
loop
pushf
pusha
push
and
movsb
stos
ds
jmp
cwtl
inc
jbe
adc
sahf
push
insb
fldenv
sbb
test
inc
and
add
popa
sbb
jbe
dec
mov
insl
insb
daa
sub
mov
cwtl
or
imul
cmc
cli
shl
loope
adc
daa
or
pop
or
mov
ret
lret
xor
rclb
test
pop
lea
sarl
jns
mov
enter
sub
mul
into
sbb
xchg
pop
mov
lea
mov
mov
pop
xchg
mov
jmp
popf
je
xchg
mov
test
pop
es
adc
fwait
pop
pop
pop
dec
or
mov
sahf
aam
mov
dec
and
outsl
in
mov
test
sbb
push
dec
jae
jle
xchg
cmpsb
loope
push
outsb
ds
arpl
test
out
test
dec
add
aaa
pop
pop
lret
je
pop
jae
xor
insb
dec
movsl
adc
add
stos
scas
add
sub
and
lret
out
or
jl
lods
test
inc
xchg
adc
fnstcw
movsb
pop
mov
into
lock
cmpl
inc
pop
aad
fstl
jge
fdivrl
mov
push
repnz
mov
lods
dec
mov
jbe
pop
pop
xor
xchg
aas
pop
and
stos
and
mov
dec
pop
jns
in
in
aad
jp
xorl
std
icebp
mov
xor
mov
add
repz
shll
incb
cmp
dec
jnp
jne
push
mov
or
jns
and
inc
adc
out
movsb
es
filds
cmp
je
pop
jae
or
pop
xchg
xchg
cmpsb
mov
inc
fimuls
or
fnstenvs
mov
and
loope
arpl
sub
ret
fmul
push
lock
das
push
pop
push
cltd
in
mov
mov
cli
movb
jae
xor
outsb
int
jle
test
pop
add
jns
out
lret
in
pop
xchg
loop
jecxz
shufps
mov
mov
pop
jmp
icebp
jno
in
mov
popa
js
jo
xchg
loope
cs
lahf
add
fstpl
cmpsb
mov
inc
aam
jb
xor
jge
add
cmpsl
jmp
xchg
cwtl
mov
mov
add
es
pop
repnz
adc
push
js
test
mov
mov
aad
mov
pop
mov
popa
inc
pop
jecxz
shll
outsw
mov
mov
cmpsb
insb
pop
cmpsl
mov
mov
test
addl
mov
jno
adc
ret
imulb
ja
push
orl
push
inc
xlat
xchg
xchg
das
push
or
sbb
popf
lahf
ret
adc
mov
and
test
jne
outsl
imul
fimull
insb
outsb
and
cmc
push
enter
push
xor
mov
outsl
jne
xchg
pop
cmp
sti
xor
insl
inc
inc
mov
inc
cmp
inc
enter
add
adc
shll
popf
lahf
mov
jne
or
out
icebp
push
lds
pusha
movsl
lods
shll
and
nop
push
push
cmpsb
out
in
test
pop
or
mov
adc
xor
pop
mov
bnd
cld
mov
out
cltd
lret
mov
pushf
cmpsl
cmp
sarb
mov
lcall
loop
xlat
repnz
add
iret
inc
lcall
add
sub
stc
mov
icebp
and
std
lahf
sbb
adc
cmp
mov
dec
fldenv
int3
cwtl
bound
movsl
sahf
inc
es
or
cmp
fidivl
imul
jecxz
test
mov
xchg
mov
les
dec
add
fs
fsub
jb
shrl
jmp
cltd
xlat
les
imul
sub
pusha
xchg
imul
adc
inc
repz
loopne
sub
inc
icebp
inc
cmp
mov
out
cmpsb
stc
or
daa
mov
or
mov
repz
xor
push
mov
int
mov
sbb
fiaddl
hlt
or
add
orl
jp
aaa
iret
xor
bound
cmp
adc
cli
push
cmc
push
mov
add
loope
mov
adc
in
lods
mov
sub
mov
les
adc
icebp
cs
sbb
xchg
fadds
movsl
push
out
popa
mov
jl
orl
out
cmp
jno
out
faddl
xor
or
imul
mov
sub
ret
je
mov
jo
out
sbb
push
stos
pop
ret
sub
fsts
lods
loopne
lds
pushw
ljmp
inc
lods
lods
xlat
ret
cmc
and
sbb
repz
fistpll
clc
xchg
popf
mov
push
int3
dec
lcall
push
push
je
stc
stc
add
stc
ret
push
jbe
jl
scas
out
sbb
ret
lods
push
sar
push
hlt
clc
jne
dec
push
fdivrs
ja
nop
lea
sbb
aas
push
cwtl
xchg
popa
cmp
lahf
pop
push
imul
mov
xor
mov
cltd
pop
xor
leave
lcall
mov
jmp
out
xchg
out
sqrtps
xchg
jno
jmp
and
mov
in
mov
xchg
sub
loop
inc
adc
das
aam
imul
add
lds
pop
imul
pusha
mov
and
ds
inc
pop
and
cmp
xor
mov
mov
cmpsb
xor
mov
insb
rorl
int3
cltd
fcompl
mov
orb
jge
xor
icebp
sbb
jns
mov
mov
roll
loope
jnp
mov
mov
ss
mov
out
data16
arpl
ds
mov
pop
imul
ret
pop
enter
addr16
push
fcomp
sbb
mov
test
cltd
mov
mov
js
dec
int3
int
mov
dec
stos
dec
mov
pop
pop
pop
and
leave
mov
sub
adc
push
loopne
jae
mov
mov
repz
xchg
cmp
mulb
inc
ja
and
push
iret
popfw
xchg
cmpsb
nop
dec
jecxz
dec
dec
outsl
outsb
pop
mov
add
divl
pusha
add
ljmp
into
repz
lods
mov
add
fisubs
xchg
push
mov
or
pop
lods
arpl
into
sub
jle
das
inc
xor
cltd
call
aas
mov
ret
pushf
int3
jge
and
cltd
sub
mov
mov
sub
into
jle
cld
and
lock
xchg
add
repnz
icebp
lea
fisttps
dec
push
rsm
mov
imull
stos
repnz
cmc
pop
mov
jbe
push
mov
adc
fcompl
in
inc
sub
mov
cmp
pop
adc
mov
rorl
lahf
insl
push
xlat
test
mov
outsl
jecxz
adc
out
daa
push
add
xchg
loope
pushf
dec
xchg
dec
mov
adc
pop
or
push
and
dec
cmpsl
dec
fidivrl
and
jae
sub
push
and
lret
shl
fs
xorl
sbb
xchg
xor
mov
cld
cmp
add
outsb
inc
bswap
xchg
adc
sbb
mul
mov
scas
test
and
fimuls
inc
xchg
mov
stos
pop
ja
fwait
mov
adc
mov
out
rorb
xchg
xchg
jae
and
push
push
loop
jp
lea
mov
ret
in
clc
ja
pop
inc
and
mov
pushw
jbe
add
fldl
pop
arpl
push
int3
mov
mov
xor
push
mov
mov
and
xchg
adc
jbe
mov
lds
mov
mov
pop
movsb
cmp
mov
lahf
push
dec
cmp
push
inc
mov
pop
dec
cmp
aad
mov
stos
ja
mov
mov
mov
jle
out
pop
mov
inc
sti
cmp
sbb
testb
jns
repz
jbe
and
fstl
adc
or
repz
and
popa
push
popa
xchg
pushf
enter
jno
pop
inc
push
test
sbb
imul
and
mov
test
and
or
bound
sbb
sbb
mov
mov
jg
add
stos
and
dec
jp
js
les
jg
adc
inc
fmuls
aaa
repz
dec
jns
pop
pop
push
rol
mov
add
cmp
rcrb
inc
mov
mov
inc
xchg
add
cmp
xor
adc
sbb
jb
inc
lret
lds
movsb
ss
add
shl
fwait
mov
sub
mov
imul
aad
mov
mov
xchg
push
pop
mov
repnz
in
mov
push
hlt
push
shr
fwait
mov
subl
jnp
in
cvtps2pi
mov
and
inc
ficomps
lods
pop
inc
int3
sahf
fbstp
frstor
jo
setge
ds
mov
lret
inc
shll
push
stos
inc
and
mov
aas
je
cwtl
mov
jl
mov
pop
jno
xlat
jecxz
iret
cmp
addr16
sub
push
pop
or
pop
push
imul
lock
mov
cmp
xchg
sub
outsb
insb
adc
js
mov
or
addr16
inc
fadds
push
enter
mov
test
ss
lds
xchg
push
mov
xchg
cwtl
pop
imul
sbb
lret
rcr
fldenv
pusha
and
cltd
popa
cmp
lds
jbe
inc
cs
jns
dec
ret
sub
inc
loope
pop
mov
daa
cmc
cmp
out
push
jno
les
mov
hlt
xchg
xorl
std
mov
pop
imul
cmc
mov
rcll
pop
daa
xor
cmp
dec
rolb
aam
mov
pop
aas
xchg
or
cli
imul
incl
cmp
faddl
test
iret
xchg
enter
xchg
jmp
push
fiaddl
nop
or
cmpsl
push
es
out
sbb
js
fdivs
pop
push
sbbl
sbb
xchg
stc
fsubrl
xchg
stos
inc
xor
mov
cltd
add
dec
lds
add
add
out
or
outsb
and
dec
mov
and
adc
mov
sub
mov
inc
fcoml
cli
es
jno
inc
jmp
inc
pop
and
jb
push
mov
cld
xchg
push
xor
popa
cs
pop
notb
lret
lahf
enter
add
mov
sub
lods
adc
in
and
movsl
sbb
nop
jb
aas
adc
push
mov
andb
mov
icebp
out
inc
xchg
imul
xor
add
loop
test
fbstp
push
repz
xchg
scas
and
xlat
popa
das
lods
in
add
cmp
movsl
das
inc
adc
sbb
dec
dec
add
and
jmp
fwait
sub
push
dec
fildll
mov
in
orl
push
mov
iret
stc
xor
sub
mov
test
lock
dec
xchg
jmp
adc
cltd
mov
and
sub
jb
pop
mov
test
pop
fisubl
adc
jle
or
xor
inc
inc
test
in
cld
std
xor
cmp
cs
push
pop
mov
mov
inc
or
test
cli
sub
adc
loopne
lock
into
lea
push
and
popa
mov
cltd
xor
cmp
pop
adc
pop
ret
sahf
fsub
popa
fst
push
push
test
add
mov
or
movsb
adc
sbb
sub
adc
add
jae
jbe
in
add
jl
push
dec
imul
shlb
jbe
push
jne
clc
xor
fstl
rolb
imul
lods
jl
sbb
ja
push
cmpsl
mov
push
jb
fdivr
fisubrs
cmp
leave
mov
pop
xchg
jmp
xchg
mov
pop
sbb
pop
mov
or
inc
mov
fdivs
add
std
jno
inc
mov
aas
xlat
sbb
iret
loope
adc
push
orl
dec
mov
xor
out
and
inc
in
mov
mov
test
test
pop
mov
add
nop
and
push
ja
fldt
cmp
aas
adc
cli
repz
repz
sbb
or
out
popf
add
sti
or
sarb
push
rolb
test
mov
pop
add
movsb
pop
outsl
sub
adc
jo
leave
push
xchg
and
lods
inc
mov
or
aam
outsb
fdivp
cmp
out
hlt
jne
mov
mov
pop
dec
inc
loope
fimull
dec
push
dec
fidivrs
adc
fisttpl
cmp
inc
push
push
jp
ss
xchg
int3
aaa
adc
in
adc
sub
test
jl
and
mov
mov
int3
and
scas
aam
cmp
pop
mov
xchg
movsl
mov
sti
pop
and
rclb
ljmp
sahf
lret
jno
mov
inc
pusha
ljmp
mov
mov
fcmove
or
insl
aam
mov
xchg
imul
xchg
js
pop
fnstcw
dec
je
in
jo
adc
push
mov
lock
adc
repnz
lea
fstpt
stos
mov
jnp
lock
pop
mov
popf
push
add
xor
scas
into
js
mov
push
lds
xchg
movsl
sub
pop
ret
push
adc
adc
xor
mov
inc
out
jb
or
rolb
nop
aad
mov
lods
and
stc
out
insb
cld
cs
jnp
adc
or
scas
inc
iret
jge
mov
jecxz
inc
pushf
pop
nop
inc
sar
out
lock
leave
lods
mov
or
es
lea
fwait
in
pop
push
xchg
sbb
dec
fistpl
pop
inc
pop
cmp
xor
insb
cmpb
test
sbb
inc
popf
mov
js
sub
pop
mov
fcoms
and
repz
lds
std
roll
mov
sub
testl
fwait
jmp
stos
xchg
jp
es
inc
mov
adc
xchg
mov
xchg
lahf
mov
xor
inc
push
ficoml
or
jnp
sbb
out
mov
push
dec
add
std
mov
in
outsl
dec
jno
push
les
cmp
testl
jb
jmp
aam
adc
mov
imul
and
les
in
cltd
lret
mov
aas
mov
insb
mov
rolb
fadds
jl
sub
push
lret
mov
into
sub
sub
adc
mov
cmp
lret
add
cmpsb
mov
push
mov
roll
mov
ja
movsb
enter
inc
cmp
xchg
neg
test
push
and
sub
addl
cmpsl
jno
popf
or
mov
cwtl
pop
cwtl
sbb
outsl
cmpsb
mov
ret
jge
and
fadds
lcall
notb
or
sbb
cmp
inc
mov
sub
cli
jno
or
xlat
pop
inc
and
scas
xchg
jmp
stc
fwait
adc
out
jl
mov
jp
jge
pop
jns
test
inc
jmp
mov
mov
xchg
adc
rorb
xor
cli
or
dec
cmpl
lcall
mov
mov
fwait
push
iret
fstpl
icebp
sub
ret
inc
add
mov
xchg
out
pop
insb
in
add
xlat
push
mov
cltd
cmp
cli
push
dec
push
cli
or
sbb
ds
sbb
lcall
cmp
fs
imul
movl
pop
and
add
lahf
dec
lea
mov
loop
jno
in
ds
xor
in
add
pusha
sbb
int
dec
loope
dec
adc
es
test
jge
inc
xor
imul
sbb
scas
xor
ljmp
cld
xchg
jmp
aas
in
data16
cmpl
xlat
mov
inc
sahf
mov
inc
sub
push
dec
jg
fcom
ds
push
div
jg
aas
dec
mov
fdivr
add
mov
repz
xor
cli
jmp
fisubs
add
rdpmc
xchg
js
mov
adc
pop
sbb
ds
lret
push
js
pop
mov
shrl
in
ja
pop
add
push
jno
lahf
push
jno
jmp
adc
and
rcr
fstps
mov
fcomps
pop
outsb
leave
mov
negl
xchg
pushf
ret
daa
adc
push
repz
cs
sbb
xor
mov
jo
pop
jecxz
and
jg
sbb
and
push
xchg
cmpsb
xchg
out
imul
jmp
decl
icebp
aas
jmp
inc
xchg
leave
mov
enter
sub
je
repz
bound
inc
xchg
nop
push
xchg
sahf
xor
jbe
movsb
shrb
addr16
or
fldcw
xlat
daa
adc
popa
lods
add
dec
pusha
lret
andb
add
mov
out
or
and
sbb
adc
mov
insb
pop
insb
xchg
cmpl
stc
xor
mov
dec
pusha
and
sarl
ret
xor
sbb
pop
pop
movsl
mov
imul
out
adc
scas
enter
fdiv
add
notl
xchg
ss
and
in
xor
cmc
cmp
int3
push
mov
xor
add
inc
xlat
lea
in
in
out
loop
jo
outsb
mov
or
pop
mov
imul
push
or
cmp
das
outsl
and
fsincos
fldt
hlt
pop
jl
add
jnp
repz
adc
faddl
jne
repnz
jnp
ret
or
add
inc
shl
sub
mov
or
pop
inc
cld
or
rorb
aam
in
jns
repnz
lahf
mov
sbb
add
push
cmp
and
js
inc
or
cmp
push
inc
or
stos
addr16
daa
or
xchg
add
addr16
sub
shl
pop
mov
or
outsl
xor
sbb
clc
in
jno
pop
aad
sbb
fmull
decb
test
leave
jmp
push
pushf
inc
je
xor
jle
stc
jo
push
into
out
fisubs
add
mov
test
pop
xchg
fld
in
or
dec
gs
lret
pop
mov
mov
jg
dec
incb
clc
inc
dec
std
mov
ds
cmpsl
int3
pop
jg
lcall
adc
rcl
call
mov
cwtl
sbb
stc
out
mov
loop
loope
jle
sbb
add
ds
xor
out
mov
mov
or
fwait
push
jno
iret
rcrb
inc
sub
es
fbstp
sbb
out
mov
jge
push
push
xor
push
xor
pop
or
xor
ds
sti
arpl
in
and
int
enter
js
imul
fidivrs
outsb
xchg
and
or
pop
dec
pop
inc
cmp
jnp
mov
inc
sbb
xchg
movsb
sahf
mov
addr16
mov
lcall
movsb
icebp
mov
arpl
xchg
and
jb
ds
dec
cli
fucompp
pop
ljmp
shll
mov
lods
sbb
pop
xorb
inc
sar
pop
fisttps
xlat
lods
lock
lods
mov
lret
xor
filds
pusha
dec
pop
dec
stos
fs
xor
loopne
cltd
cmp
dec
loope
push
pop
dec
pop
stos
push
add
add
loope
push
out
add
mov
in
lods
rcrl
aad
ds
shll
mov
daa
pop
jb
sbb
adc
sti
roll
dec
push
pop
add
divl
pop
addr16
pushf
gs
and
lods
xchg
push
popa
adc
push
lahf
pop
es
mov
test
inc
xchg
frstor
cmpsb
push
mov
inc
inc
lahf
dec
xchg
push
inc
adc
xor
and
inc
minps
aam
sarl
adc
pop
insl
pushf
jl
jae
cmp
cltd
mov
mov
test
mov
mov
jns
sub
insb
jp
push
daa
sbbl
les
xor
xor
ret
icebp
lret
push
mov
bound
pop
push
inc
mov
xchg
dec
push
mov
hlt
push
jo
ljmp
int
adc
idivb
mov
js
and
hlt
or
xor
jnp
lods
cld
stc
xor
dec
mov
cltd
insb
gs
pop
int3
shrb
xor
sbb
sub
xor
imul
jmp
cmp
fs
inc
ret
sbb
pusha
fstp
cmp
call
or
ret
je
push
mov
mov
sub
and
mov
cli
jl
jle
pop
sbb
dec
and
pop
inc
mov
lret
mov
push
mov
int3
mov
adc
sbb
inc
jno
into
cli
out
ljmp
push
mov
and
cs
mov
ret
inc
jle
jbe
and
sahf
mov
and
in
and
cmp
mov
mov
sbb
shll
ds
dec
pop
adc
lock
neg
xor
arpl
fcmovbe
or
mov
dec
mov
inc
cli
mov
loopne
fisttps
mov
cltd
cli
or
mov
jbe
outsl
mov
arpl
inc
xor
mov
mov
or
mov
push
xchg
movsl
ret
push
bound
mov
je
xor
xchg
fucom
mov
jae
pop
icebp
outsl
in
lea
mov
xchg
push
pop
lahf
mov
rolb
arpl
or
shlb
jmp
repnz
inc
stos
addr16
nop
cmp
adc
push
jge
sarl
test
in
mov
sub
dec
test
and
adc
js
call
movsl
jne
adc
ljmp
mov
and
push
call
bound
mov
pop
mov
int
pop
imul
mov
aaa
jo
inc
sub
outsl
lea
nop
mov
adc
inc
pop
iret
lock
scas
push
es
fmul
jmp
dec
mull
adc
sbb
dec
mov
jecxz
xor
pop
leave
aad
adc
mov
push
jle
insl
pop
inc
leave
jns
push
or
stc
dec
xchg
fidivl
in
add
lret
fmull
cmp
and
ret
cmp
cmpsl
pusha
jnp
fisttps
scas
inc
in
xor
inc
sbb
aam
jmp
repnz
jo
push
sbb
xchg
sbb
or
scas
push
pushf
sub
cmp
add
leave
push
fisubrs
pop
cmpsl
xchg
adc
mov
inc
pop
pop
test
fst
js
imul
arpl
out
push
icebp
and
pop
pushf
sub
push
ja
setnp
rorb
icebp
gs
lcall
fsubs
stc
out
mov
xlat
jb
push
dec
mov
adc
call
jnp
pop
loopne
lret
test
xchg
std
add
addr16
fbld
test
mov
or
jne
cmpsl
mov
xchg
lds
cs
cmp
ss
stc
mov
fwait
and
sbb
push
call
test
sarb
jb
out
sti
iret
enter
test
mov
and
push
fisubrs
pop
in
xchg
mov
inc
inc
sbb
or
xchg
std
idivl
xor
arpl
pusha
dec
push
loop
xchg
stos
jb
push
sbb
shlb
sti
sbb
adc
cmpsl
adc
xor
orl
pop
or
add
in
or
and
mov
rcl
ja
stc
mov
adc
pop
in
inc
ljmp
mov
or
iret
ja
aas
jge
ja
pop
xorb
aam
cmp
movsl
mov
clc
jge
jo
rcll
pop
xor
jecxz
mov
repz
pop
lock
pusha
and
add
and
je
mov
imul
xchg
mov
or
stos
inc
pop
jmp
xor
in
lock
test
mov
flds
fldpi
lret
repz
rol
lods
dec
int
in
stos
mov
lds
xchg
das
xor
sub
out
or
out
mov
fisubrl
sub
jmp
inc
and
xor
inc
js
xor
call
rclb
pop
sahf
adc
inc
jbe
cld
sbb
push
jbe
lcall
clc
cmp
mov
mov
xlat
push
dec
xchg
loope
mov
loope
jge
test
bound
mov
js
dec
rorb
adc
pop
xchg
xlat
xor
out
fwait
jle
cmp
ret
cmc
fisubrl
les
push
xor
dec
push
les
sbb
loopne
mov
das
arpl
mov
shlb
xor
fmulp
cwtl
stos
jl
dec
aam
vpaddsb
dec
aam
lock
jnp
cmp
push
pop
adc
insb
add
xor
test
push
cmp
mov
jge
mov
jge
lds
hlt
add
data16
cmp
or
into
in
inc
lock
pop
je
rclb
mov
jmp
les
push
insl
in
dec
repnz
out
out
fnclex
jp
loop
fistps
outsl
in
loopne
sub
aaa
ja
mov
sub
pop
je
stos
mov
rolb
sbb
std
test
repnz
test
inc
je
mov
or
and
push
xchg
inc
loope
test
jae
mov
les
in
fldenv
mov
sub
push
loopne
sub
adc
add
push
ljmp
jbe
dec
push
jbe
enter
add
xlat
sub
mov
repz
jb
pop
jb
stc
cmp
add
mov
mov
out
push
add
ljmp
popa
bnd
and
pop
or
dec
cmp
add
fisubs
inc
ftst
in
and
mov
loop
pop
leave
stos
loop
scas
dec
fcomps
mov
push
cmp
mov
and
mov
stc
or
adcl
adc
xchg
sub
jl
add
cs
in
fisttpl
rcrb
les
shl
pop
inc
dec
xchg
jecxz
loop
cmc
stos
adc
mov
shll
cmp
cmp
xchg
ss
jae
or
iret
lret
sbb
push
mov
scas
mov
enter
push
xchg
cmc
push
movl
sub
testl
cld
or
ljmp
sub
test
lcall
xchg
mov
mov
mov
jge
and
jecxz
cmc
mov
lods
mov
fstpt
pushf
inc
dec
sub
insb
and
mov
jbe
rolb
out
arpl
mov
xor
sti
lcall
xchg
or
dec
jbe
mov
jno
xchg
das
cmp
push
icebp
movsb
cmpsl
jge
call
push
and
jle
pop
jno
outsb
xlat
sbb
and
pop
push
inc
int
inc
sub
push
lret
loope
push
sahf
sbb
sbb
fbld
or
out
inc
test
movsl
sbb
cmp
mov
sbb
mov
sub
jb
cmp
imul
inc
mov
mov
aad
lods
push
repnz
shrb
into
les
stos
mov
aad
add
mov
xor
adc
jo
mov
pop
imul
ret
cmp
call
jmp
std
or
mov
arpl
scas
imul
insb
or
andb
push
jmp
fldl
mov
scas
test
inc
inc
mov
rcll
sti
push
xlat
or
stos
xor
jae
sti
fisubrs
xchg
push
xchg
pop
mov
cmpb
movsb
mov
fwait
ljmp
jl
popf
inc
sbb
cmp
imul
aam
mov
sete
popa
aam
fistl
or
inc
push
mov
pop
add
inc
arpl
into
das
leave
cmc
mov
in
sbb
iret
out
xchg
ds
fnstenv
mov
push
mov
push
sets
outsb
xor
sbb
sub
pop
fs
mov
jae
test
xchg
das
divl
cmpsb
fcomps
dec
jo
call
add
push
stos
fwait
xchg
stc
and
jmp
mov
loop
mov
mov
cwtl
rolb
fwait
popf
and
dec
outsl
sub
mov
cltd
nop
push
loop
cmp
push
subl
loop
aas
mov
push
sete
add
lea
test
lods
out
fmuls
iret
test
cltd
jne
sbb
jb
loop
data16
mov
dec
pop
repz
or
sub
aas
jb
rorl
pop
xor
lcall
es
jge
sti
scas
jae
xor
sbb
jecxz
insl
or
arpl
in
cmp
pop
stc
into
xchg
mov
call
incl
mov
xchg
in
out
loop
cmc
or
and
out
cs
int
shrb
test
fmuls
push
push
mov
push
sar
cli
inc
cmpsb
aas
std
loop
adc
inc
dec
or
subl
mov
lcall
sub
call
pop
out
scas
mov
inc
jb
mov
cmp
scas
cmc
out
pusha
rcl
loope
cs
mov
repz
hlt
dec
inc
inc
mov
push
std
sbb
sub
scas
fwait
add
les
push
sub
jg
outsl
iret
ja
clc
sbb
hlt
adc
mov
shll
addr16
cs
adc
jmp
iret
scas
in
je
cmpsl
cmp
fwait
xchg
scas
jg
xchg
cmp
cmpsb
jg
ret
cltd
jns
xchg
lock
lock
push
jnp
push
hlt
ja
movsb
loopne
cmp
mov
xor
mov
outsl
or
inc
daa
sub
push
add
and
scas
xchg
daa
lods
scas
jbe
jge
lods
dec
scas
pop
test
jecxz
nop
in
inc
jg
lcall
push
xor
ja
lcall
test
ss
push
mov
xchg
mov
cmpps
mov
or
cltd
lahf
xor
out
outsb
shl
adc
lret
inc
arpl
mov
fld
popa
adc
sbb
daa
fnstsw
xor
pop
mov
outsb
lds
push
add
dec
mov
mov
xchg
outsb
xorb
inc
lods
dec
imul
outsl
mov
inc
add
xor
pop
daa
fcmovbe
repnz
push
cmpsb
gs
mov
xchg
sbb
mov
in
cmp
stc
in
or
adc
lahf
and
sbb
mov
jge
xor
sub
push
pop
pop
fcoml
push
pop
insl
add
andl
jns
xchg
mov
aad
push
inc
jecxz
sub
movsl
lret
jge
int3
nop
or
sbbb
pushf
mov
mov
or
push
or
pop
ret
mov
rcr
sbb
movsl
sub
mov
mov
cmp
insb
mov
mov
and
jno
leave
mov
into
mov
stos
xor
pop
push
adc
push
push
xor
xor
adc
frstor
sti
push
scas
mov
pop
mov
mov
xchg
mov
xchg
out
sahf
and
rorb
xchg
xchg
lcall
add
sub
xchg
cmp
dec
xchg
or
cmp
add
and
int3
lea
test
imul
jl
hlt
lds
add
add
mov
psrlq
push
enter
xchg
out
mov
mov
loop
mov
adc
das
lods
fdivs
les
sub
bound
fs
add
xchg
pop
inc
das
and
inc
shl
les
xor
xor
addr16
mov
sub
add
outsl
xchg
mov
rol
lock
dec
cmp
insl
xchg
rclb
dec
pop
pop
or
inc
popf
pop
sbb
lcall
push
pushf
andb
jp
repz
lret
pushw
cmpsl
test
pop
dec
push
cwtl
scas
push
test
roll
jl
cli
mov
lret
aad
adc
mov
aas
cmpsl
popa
mov
mov
mov
sbb
jne
repz
movlps
lahf
push
pop
mov
enter
pop
inc
pop
popa
push
sub
ljmp
lcall
stos
pop
test
loopne
jbe
sub
cmp
and
imul
movsl
inc
fdivp
mov
inc
aad
or
fists
cmp
outsl
js
mov
aad
jmp
popf
lahf
clc
out
shrl
fbstp
movsl
mov
xlat
xor
lock
adc
loopne
pusha
mov
jmp
push
jnp
or
push
adc
push
popf
xchg
mov
jns
gs
pop
test
mov
cmc
scas
fcmovne
inc
add
sub
cmpl
mov
leave
fldcw
daa
lods
mov
jb
or
xchg
mov
inc
push
es
dec
lret
jo
int3
jnp
insl
pop
notb
imull
cs
cli
mov
insb
sub
adc
iret
sub
push
lret
cmp
jmp
xor
mov
lock
jge
fidivrl
in
cltd
xchg
dec
cs
mov
arpl
pop
inc
enter
rcrb
enter
mulb
cmp
leave
dec
inc
and
inc
inc
mov
mov
jle
negb
scas
fisubs
and
sbb
sahf
pop
lea
ret
dec
jp
adcb
sub
pushf
mov
inc
cmc
gs
lahf
dec
loope
jp
dec
fs
mov
fwait
pop
into
jne
push
mov
data16
sarb
jbe
jle
es
add
repnz
sub
sub
popf
push
lods
xchg
and
mov
mov
int
mov
cmpsl
push
pop
xor
nop
outsl
mov
and
inc
jne
pop
out
in
push
ss
lock
loope
sub
popa
xor
mov
aas
push
pop
scas
lcall
repz
sub
mov
mov
push
outsl
mov
inc
sub
jae
sbb
fistl
mov
jp
jmp
pop
in
insl
rcll
pop
aad
xlat
xchg
shl
inc
pop
mov
inc
mov
or
in
and
popf
add
mov
ud2
and
out
insl
sahf
push
hlt
jp
inc
dec
sbb
enter
les
das
push
or
cmc
scas
rcrb
add
xchg
inc
or
inc
pop
add
in
daa
imul
mov
jp
mov
test
fimuls
push
lea
fcoms
in
pusha
lds
cltd
or
mov
push
mov
lret
ret
adc
xor
fcmovnb
cmp
pop
lcall
notb
pop
stos
in
xchg
or
adc
add
fwait
mov
sbb
shl
int
movsb
lock
fdiv
add
sahf
cs
jmp
iret
shrb
push
cld
dec
push
and
or
push
insl
cwtl
lcall
insb
push
imul
adc
mov
add
lock
xchg
nop
xchg
sub
clc
dec
vsqrtsd
leave
jae
xchg
add
mov
inc
daa
pusha
xchg
filds
push
pushw
cmpsl
pusha
faddl
ss
js
mov
push
push
lds
in
mov
push
push
jecxz
adc
jnp
icebp
cmp
int
cmp
jae
out
inc
cs
sbb
push
sbb
jmp
das
cmp
inc
fldl
mov
daa
and
mov
dec
aas
sahf
ret
insb
xchg
out
fcmovb
out
cmp
adc
push
push
lds
mov
loopne
arpl
dec
std
pop
arpl
push
inc
pushf
daa
add
into
mov
pop
add
dec
icebp
cmpsl
or
mov
daa
jno
jae
pop
mov
std
pushf
sbbb
inc
add
xlat
movsl
je
push
int3
rol
jl
inc
push
je
xor
test
mov
xchg
add
or
das
adc
mov
push
mov
jecxz
and
mull
mov
pushf
jne
or
or
or
ds
out
and
inc
sbb
jne
call
aad
jp
aaa
sbb
xchg
pop
lods
fisubrs
fists
mov
inc
jmp
xchg
push
jecxz
xchg
dec
test
xor
es
pop
sbb
add
dec
out
mov
inc
dec
adc
outsl
mov
adc
mov
ret
ffree
hlt
or
xor
ja
icebp
mov
jecxz,pt
add
adc
jae
pop
dec
leave
inc
push
inc
mov
jge
mov
aaa
out
inc
clc
sbb
sbb
fidivrs
push
cwtl
jae
mov
push
mov
push
js
je
add
repnz
mov
shlb
lock
imul
cmp
mov
push
inc
mov
pusha
mov
pop
bound
push
xor
test
dec
dec
lcall
xor
jle
repnz
lea
out
call
movsl
mov
jl
in
sahf
call
jg
xor
aad
fnsave
or
mov
dec
sbb
cltd
out
ficoms
enter
fnstsw
movsl
test
scas
popa
int3
mov
dec
inc
arpl
xchg
daa
ror
loop
mov
rolb
rorb
insb
mov
or
pop
push
int3
fcoms
lret
xlat
cmpsl
mov
mov
inc
xor
mov
leave
stc
iret
repz
sbb
add
test
das
push
adc
cmpsb
out
loopne
jne
or
push
outsb
lcall
fsubr
or
push
lahf
cwtl
insb
movsb
sahf
sub
xchg
rclb
xchg
fwait
out
fneni(8087
cmc
mov
cmpl
push
mov
fsts
and
sbb
cmp
aas
jmp
push
sbb
fldenv
jno
adc
xchg
mov
dec
add
xor
dec
pop
mov
fistps
mov
lret
adc
lods
cmpsl
fs
xor
xchg
in
rcll
repnz
sarl
mov
push
insb
inc
fmul
and
adc
scas
mov
xorl
xchg
and
ret
movsl
shrb
push
mov
and
mov
lret
movsb
adc
out
adc
adc
dec
dec
mov
fs
dec
pop
xchg
lcall
inc
lcall
dec
mov
aaa
inc
outsl
mov
mov
lea
jg
pop
int3
mov
jns
xchg
rcll
repz
es
loopne
lock
push
sub
pop
lods
cmp
popf
inc
cmp
mov
out
iret
xchg
imul
sbb
cmp
fwait
test
jecxz
aas
insb
nop
out
pushf
mov
mov
lds
lds
sti
aad
gs
ds
fstps
cmpb
pop
jb
or
push
outsb
jl
inc
cmp
mov
sbb
sbb
test
and
jp
xchg
nop
sbb
and
pop
add
std
stos
or
xchg
loop
fisubl
xchg
push
imul
pop
add
decb
arpl
dec
fstps
rolb
sahf
cs
rcrb
adc
xor
jb
sub
lret
xchg
mov
lods
insb
push
in
mov
jne
add
inc
mov
insl
lock
inc
cli
ret
in
sarb
adc
loope
mov
vmread
cld
sbb
loopne
xlat
ret
icebp
insb
mov
sbb
and
orl
sbb
pop
add
pop
icebp
mov
mov
imul
ja
bound
cmp
mov
stos
int
xchg
test
scas
mov
ret
aas
lds
fcmovu
gs
std
cltd
cmp
movsl
fmull
inc
jb
stos
jae
movsb
sbb
xor
int3
xor
loopne
xchg
mov
mov
loopne
clc
std
out
enter
push
nop
imul
cltd
push
fisttpll
mov
popf
xor
jg
pushf
dec
das
xchg
push
inc
dec
jo
xlat
leave
sbb
add
int3
cmp
sahf
pop
mov
push
and
add
or
pushf
in
scas
shll
dec
enter
repnz
pop
gs
add
ficompl
xorl
mov
jne
mov
or
divl
int3
test
and
or
ss
call
arpl
xchg
test
jmp
cmp
out
rcl
jno
out
ljmp
dec
mov
cmp
in
cmc
testl
mov
inc
jl
sub
out
lret
and
and
fwait
push
jp
sbb
pop
cli
inc
test
push
adc
or
fldt
mov
sbb
bswap
pop
pop
fbld
mov
repz
sub
push
lret
sub
in
xor
xor
or
jl
dec
lds
jae
inc
fadd
es
pusha
xchg
and
cs
lea
inc
clc
das
sbb
xor
push
jg
jg
popf
stos
xchg
test
xchg
daa
hlt
out
xchg
push
std
mov
scas
movsl
test
aaa
adc
popa
lods
insb
add
inc
hlt
pop
cwtl
xchg
mov
cli
dec
fimuls
int
loopne
jno
cmp
mov
fs
leave
loop
fucomi
fcoms
jecxz
shrb
pop
pop
test
dec
xor
fistpll
xlat
loop
sub
nop
mov
jo
dec
jmp
fnstsw
pop
repnz
and
ds
out
add
cmpb
icebp
cwtl
orl
je
mov
aas
sub
arpl
enter
xor
lret
jge
out
mov
outsl
jecxz
mov
clc
mov
jmp
test
sub
mov
sub
pop
dec
adc
lods
mov
add
sarl
addr16
test
xor
jo
rolb
sbb
aas
jmp
push
xchg
daa
out
pop
cmp
frstor
jecxz
test
cmp
mov
js
push
inc
ljmp
or
ffree
shll
jne
sarl
popa
inc
in
mov
jo
outsb
cmp
cli
outsb
fwait
sbb
push
mov
push
cmp
call
cmpsl
adc
cwtl
mov
jge
shrl
dec
cmp
pop
adc
dec
and
arpl
les
stos
pop
in
ret
jno
lods
mov
xorl
mov
bound
pop
pop
std
cmp
sarb
popf
inc
xchg
xchg
pop
mov
lcall
cmp
out
insl
cmp
lahf
ja
mov
addl
add
fmulp
fs
aam
xor
stc
icebp
xor
movsb
sbb
rorb
nop
mov
ja
adc
lds
jns
stos
pop
fucomip
ret
mov
test
adc
mov
xchg
xlat
mov
xchg
add
ror
and
gs
dec
inc
mov
in
mov
push
in
xlat
idivl
cli
ficomps
dec
xor
clc
push
push
pop
sbb
ljmp
jl
push
cmpl
mov
popa
test
aam
lret
add
sbb
xchg
cs
pusha
in
movsl
push
jns
popa
movsl
mov
nop
repnz
mov
push
dec
outsb
cmpsl
popf
jecxz
add
insl
mov
cmpsl
mov
test
and
adc
xor
mov
aaa
mov
cltd
nop
mov
sbb
xor
cmpl
cmp
adc
mov
scas
addr16
negl
pop
jle
xor
stos
xchg
mulb
cmp
popf
adc
mov
jbe
dec
arpl
js
imulb
cltd
in
sbb
js
or
mov
xchg
out
sub
mov
out
shr
fstpt
push
aad
pop
mov
mov
enter
rcrb
daa
mov
mov
pop
orl
lret
test
adc
mov
clc
xchg
jno,pt
jo
ffree
push
pop
cmp
out
test
add
sbb
mov
call
ret
lret
rcrb
mov
pop
rcr
int
adc
scas
repz
dec
repz
jnp
popf
pop
stc
test
jnp
mov
les
xchg
jo
mov
push
pop
jecxz
psrlw
mov
or
inc
add
pop
lods
in
pushf
out
and
sbb
sub
iret
mov
lret
mov
jmp
in
sarb
int
push
mov
mov
sbbl
inc
iret
adc
mov
mov
xchg
xlat
pop
lds
jns
pop
arpl
cmc
jo
je
shr
mov
cmp
outsb
js
rorl
add
inc
insb
mov
scas
push
or
shlb
movsl
and
fcompp
jecxz
addr16
dec
sub
ficoml
mov
add
ficomps
lahf
pushl
pop
je
aam
adc
jno
pop
cmp
loopne
cwtl
sbb
movsl
xor
mov
mov
push
or
add
sbb
das
sbb
into
roll
inc
and
adc
lcall
sub
mov
xlat
fwait
or
sbb
dec
icebp
arpl
mov
push
adcl
pop
pop
or
jp
cmpsl
jle
mov
pushf
inc
les
daa
cmp
aas
add
dec
jecxz
sbb
int3
mov
imul
inc
xchg
fcompl
sub
jbe
inc
sub
or
enter
orb
xlat
mov
mov
jns
bound
push
int3
add
aad
subl
jne
push
xorl
mov
aam
mov
pusha
fdivs
mov
ljmp
or
ret
lods
fnstcw
mov
je
xchg
jne
dec
mov
push
roll
lret
cli
inc
iret
ficoms
inc
popf
inc
in
or
mov
mov
push
pop
hlt
int
lahf
lret
cmp
lock
in
and
popa
or
das
and
rcrb
aas
imul
ja
out
mov
jp
xor
pop
scas
cli
fwait
adc
mov
sahf
inc
dec
fisubrl
int3
stos
cmp
push
push
mov
mov
sbb
xor
jmp
fistpl
mov
cmp
cmp
sti
sub
push
mov
dec
add
hlt
push
fdivs
adc
adc
adc
ja
or
xchg
push
adc
mov
sub
cmp
mov
xor
fmul
mov
push
in
adc
movsb
scas
sbb
clc
mov
adc
mov
cmpsl
inc
arpl
repz
addb
inc
leave
pop
pop
nop
mov
sbb
sbb
dec
fstpt
stc
es
cld
adc
push
sti
push
shld
add
push
loope
stos
mov
jp
out
push
mov
fs
cmp
and
jno
loope
mov
insb
push
sbb
in
jb
mov
aad
imul
rcll
sbb
mov
arpl
mov
cmp
out
inc
cmc
dec
cmc
jp
lea
fsubp
inc
sbb
adc
popa
pop
lret
leave
inc
imul
add
mov
mov
ss
and
push
mov
jle
pop
add
ss
xor
mov
mov
jno
fstps
in
push
sub
adc
divl
rorl
mov
popf
addr16
inc
mov
rorl
mov
xchg
mov
adc
add
cmpsl
lods
mov
xor
xor
inc
jmp
test
pop
insb
scas
sub
cmpsb
jle
add
mov
cli
mov
dec
out
dec
mov
ja
addr16
inc
out
push
xchg
hlt
dec
loope
push
pop
xchg
dec
fdivr
cmpsl
mov
rorl
rorb
and
pop
pmaxub
int3
dec
cmpsl
repz
insl
mov
jne
negb
daa
inc
jb
xchg
or
xchg
inc
mov
call
cmpsb
into
movsl
sti
pop
fucomp
sbb
mov
jne
mov
mov
cmp
adc
xor
test
jbe
xor
mov
sbb
add
cld
ror
add
mov
inc
jbe
or
jmp
cmpsb
xor
sbb
cmp
add
sti
andl
pop
pushf
and
sub
mov
xchg
stos
sbb
cmp
sub
negl
sub
sub
imul
lret
popf
xchg
cld
mov
push
inc
aaa
pop
incb
push
adc
fmuls
inc
xor
out
or
mov
sbb
sbb
mov
add
mov
adc
sbb
data16
stc
adc
push
ftst
popa
cwtl
mov
xchg
mov
mov
cmp
lcall
mov
inc
push
into
fwait
je
hlt
push
mov
fcomi
jno
iret
cmpsl
mov
out
jp
xor
repnz
inc
mov
and
les
mov
movsb
lock
xor
imul
fucomip
lcall
push
push
lret
lods
filds
mov
movb
or
iret
pop
inc
dec
add
mov
pop
das
push
sarb
push
push
das
jnp
pop
addr16
nop
daa
dec
push
adc
sbbb
stc
mov
sbbl
cli
mov
popa
dec
push
jbe
add
xchg
outsl
mov
pop
cmp
mov
ret
call
fidivrl
jo
in
add
ja
or
push
stos
pusha
scas
and
call
mov
imul
inc
add
int
or
repz
out
add
imul
push
xor
shll
out
push
daa
dec
in
in
fsubrs
adc
in
in
repz
aas
mov
lea
lods
push
jns
or
mov
mov
and
int3
test
jb
inc
loopne
lret
dec
push
sbb
rolb
cs
inc
ret
or
sbb
out
mov
jns
int
scas
mov
lcall
sbb
stos
mov
mov
stc
cmp
sbb
imul
cmpsl
push
lods
ret
mov
lahf
push
xchg
xchg
sub
adc
stos
or
out
stc
mov
cmc
jge
mov
mov
jnp
pop
sbbb
jecxz
push
imul
cmp
mov
adc
in
fdivs
xor
and
push
ret
lret
mov
idivl
pop
xchg
cltd
lea
in
in
ret
and
add
inc
scas
xchg
in
jge
dec
into
call
lods
dec
popl
enter
daa
fdivrp
out
in
xchg
adc
xor
jle
xchg
sbb
scas
hlt
lea
jae
jnp
adc
in
inc
lcall
mov
stos
sub
mov
enter
les
push
clc
js
fistps
movsl
sub
inc
and
pop
push
push
mov
or
stos
jne
in
sub
cmc
mov
adc
jmp
aad
sarl
cmp
insb
mov
jge
insb
out
xchg
push
js
jae
lods
dec
sub
insl
or
into
stos
ficomps
or
in
imul
fwait
test
loope
iret
dec
fisttps
fcomps
je
or
ss
xchg
mov
or
mov
rorb
out
mov
sub
mov
jge
inc
push
cmp
test
int3
ret
lcall
pop
mov
fldcw
dec
jae
cmp
sbb
cmp
pop
sub
insb
mov
pop
lock
push
clc
push
cmp
pop
and
lods
inc
cmp
inc
jb
xchg
loope
jno
or
pop
jo
mov
sahf
mov
imul
loopne,pt
cmpsb
movsl
and
rcrl
outsb
add
dec
ret
add
adc
mov
call
adc
pop
inc
call
int3
rorb
dec
out
std
repz
stc
int3
dec
cs
popf
lea
push
hlt
adc
mov
sbbl
rcrl
icebp
stc
rcrl
movsb
inc
xchg
cmp
xchg
dec
lret
sbb
ljmp
fisttpl
jmp
int3
push
mov
movsl
ret
testb
das
mov
hlt
loopne
fisubs
sub
or
stos
pop
lds
fistpll
cltd
lcall
push
cmp
dec
dec
sbb
fisubrl
xchg
std
lds
lahf
push
push
loop
push
or
jo
mov
repz
or
sub
pop
ret
sbbl
cmpsl
xor
mov
mov
ljmp
adc
mov
lret
test
mov
mov
fwait
sbb
mov
aas
insb
test
inc
orl
mov
jbe
repnz
mov
addb
pop
fistl
and
imul
or
dec
test
and
aas
mov
loop
shrb
pop
mov
fwait
dec
and
out
dec
inc
popf
mul
xchg
sbb
and
pop
lea
add
movsl
aaa
addr16
sub
lcall
mov
sbb
scas
in
jo
dec
imul
pop
dec
mov
inc
imul
jmp
imul
dec
mov
ret
add
fstps
loop
or
fs
cmp
lcall
sbb
and
pop
mov
push
sub
outsb
push
lcall
jae
shl
mov
or
dec
lods
and
dec
mov
push
mov
mov
lahf
dec
iret
sbb
syscall
sbb
aas
movsb
lock
stc
cmp
adc
mov
dec
pop
dec
lret
add
popf
sbb
orl
sbb
mov
or
ret
pop
dec
ret
pop
xor
mov
test
into
in
lcall
lods
adc
and
sub
or
mov
cmc
out
xchg
mov
or
or
xlat
jl
outsb
pop
andl
adc
ds
call
mov
mov
jne
mov
ret
neg
or
mov
dec
pop
sub
xchg
insb
outsb
pop
dec
test
aad
scas
and
jge
cmp
push
push
in
in
push
outsl
iret
pop
mov
in
int3
xchg
in
cmpsl
jl
jnp
pop
lods
enter
fcmovb
cmpsl
mov
mov
out
orb
and
dec
dec
fsubr
out
scas
repnz
repz
pop
push
fidivrl
mov
jecxz
pop
xchg
mov
mov
jp
push
rcrb
iret
mov
sub
xor
ss
xor
cs
test
xchg
jecxz
jecxz
daa
std
sbb
jmp
stos
inc
repz
or
and
cli
fs
rcr
pop
adc
cli
dec
inc
shlb
mov
adc
mull
scas
movsb
divl
xor
rolb
mov
push
mov
movsb
out
repnz
push
repz
mov
xchg
lods
cmp
aaa
sbb
cs
pusha
int3
in
mov
rcrb
xchg
adcl
xchg
or
mov
jbe
xchg
es
inc
jmp
or
ficomps
adcl
pop
clc
xor
inc
adc
cmp
adc
out
cmp
add
hlt
pop
dec
xchg
sub
arpl
xchg
cli
das
subb
gs
mov
xchg
ja
dec
sub
xor
test
inc
in
sbb
add
into
mov
hlt
fistpll
mov
jo
jbe
sub
xchg
sbb
pop
xchg
xor
arpl
xchg
push
out
cmp
inc
inc
filds
mov
vpmaxsw
jg
or
notl
fdivs
or
push
adc
ficompl
popf
adc
sbb
and
mov
cmp
ficoms
pop
pop
out
in
push
out
sbb
jbe
ss
jae
or
aaa
out
jnp
adc
fbstp
jmp
mov
orl
mov
and
test
xchg
lods
std
or
outsl
jl
icebp
lds
mov
lea
push
xor
insb
dec
inc
lcall
or
out
push
push
xor
cmp
int3
mov
and
adc
cmpsl
sbb
bound
inc
loopne
jge
sub
inc
mov
push
cmc
mov
icebp
rcl
arpl
into
aas
adc
mov
pop
leave
fidivs
nop
push
xlat
popa
mov
jmp
pop
and
in
and
xchg
cmp
fistpll
test
mov
cmc
int
int
xor
jbe
sbb
fnstenv
mov
mov
mov
push
sub
adc
jbe
cmp
cltd
mov
jne
sub
mov
and
mov
movsl
sub
mov
pop
je
fnstsw
das
shll
sbb
push
shl
bound
js
dec
insl
js
mov
test
rclb
sarb
and
dec
mov
push
fimuls
push
ret
fidivl
jbe
adc
fildll
xor
jl
inc
adc
adc
xor
cmpsl
adc
cmp
test
pop
pop
xchg
cmp
or
cmpb
sub
xor
adc
and
fdivrl
mov
xor
sub
adc
pop
iret
test
not
daa
mov
in
jle
mov
or
lret
and
movsl
pop
mov
fdivl
into
jl
push
dec
and
mov
inc
push
inc
add
xchg
insb
and
out
mov
out
add
sbb
movsb
add
and
jnp
mov
bound
mov
sub
loope
shrb
inc
rcl
add
adc
fidivrl
stos
mov
mov
clc
int3
sub
push
cmp
xchg
pop
hlt
cmp
rcl
push
fiaddl
jns
jg
outsl
xor
es
mov
repnz
jp
xchg
les
add
in
cmp
loope
shll
xchg
or
mov
bnd
pop
inc
sarl
in
rolb
pop
sahf
fwait
mov
testl
in
pop
fcmovb
frstor
out
jbe
xor
sub
incl
xor
outsl
ja
xor
out
inc
and
stos
das
adc
cmc
sbb
mov
push
dec
mov
inc
cmp
cmp
dec
jbe,pt
inc
and
mov
mov
out
mov
jl
in
cmpsl
mov
mov
xor
jmp
lret
ja
adc
sbb
push
xchg
push
push
mov
and
aas
and
pusha
mov
sbb
ja
mov
std
pop
lret
xor
cmp
test
jge
outsb
push
shll
pop
pushf
pop
pop
xor
lods
jp
sahf
icebp
jbe
test
scas
pop
dec
lea
out
push
dec
jae
push
mov
xlat
inc
out
lock
mov
dec
into
sub
jmp
lods
push
inc
pop
stos
xchg
and
stos
cs
dec
push
push
mov
push
jno
mov
pusha
xchg
movl
aad
nopl
cmp
stc
repz
out
cmp
fcmovbe
stos
add
or
test
test
pop
lods
in
dec
fmuls
and
mov
pop
cmc
ds
in
jo
dec
jmp
sbb
scas
fstpl
pusha
jns
enter
push
push
adc
jo
repnz
adc
xor
addb
lock
xchg
add
xorb
mov
mov
and
arpl
lods
mov
sarl
pop
int
and
jae
mov
xchg
popa
sbb
add
mov
jge
hlt
jnp
popa
inc
or
inc
mov
out
les
cmp
lahf
mov
xor
jne
fwait
dec
insb
cmp
pop
and
add
sbb
jg
jo
mov
add
dec
push
stos
mov
cmpsl
mov
loopne
inc
lret
ja
add
xchg
or
or
or
xor
inc
mov
les
mov
sub
in
add
and
scas
sub
leave
int3
cs
pop
cmp
pop
out
xchg
scas
loop
pop
lcall
sbb
lahf
aad
sub
xor
and
outsb
cmp
and
jg
pop
popf
adc
or
fnstenv
pushf
dec
cmp
insb
sbb
cmpsb
cmp
imul
mov
pop
ljmp
or
out
shlb
bound
sub
sbbl
push
ljmp
dec
shr
and
inc
mov
cli
mov
popa
cmp
mov
test
sub
aaa
inc
sub
jge
and
outsb
inc
jmp
push
cmp
push
mov
pop
inc
dec
mov
or
push
in
inc
cmp
mov
movl
push
jo
jecxz
out
pusha
out
and
push
dec
mov
sub
js
sbb
shrb
sbb
test
inc
push
test
add
cld
mov
xor
cmp
leave
aas
or
mov
push
fcomi
or
imul
mov
sbb
or
push
sub
int3
jmp
and
push
in
addr16
inc
clc
popl
lret
gs
mov
lds
in
jae
mov
mov
mov
lds
cwtl
mov
lock
out
test
and
fadd
sub
aas
call
sub
fwait
cmp
sub
mov
imul
push
repz
and
out
scas
idivb
xchg
adc
lahf
loope
mov
sub
icebp
decb
push
push
and
or
inc
repnz
jmp
lret
call
pop
cmpsl
mov
rorb
push
enter
clc
xchg
jne
xchg
dec
shll
add
loop
movsb
xchg
imull
push
inc
mov
aaa
add
pop
lods
in
gs
popf
xchg
mov
leave
xchg
mov
stos
adc
xorb
dec
data16
iret
bswap
jns
mov
xchg
test
ficompl
insb
call
je
sbb
aas
movsl
adc
cmpsb
cld
std
repnz
pop
loope
rcll
popf
xor
inc
arpl
insl
push
or
or
xchg
inc
mov
fsubp
inc
add
cmp
loope
dec
jl
sub
mov
pop
or
sti
ds
cmp
push
insb
push
push
adc
or
jp
std
pop
lret
push
popf
jge
mov
xchg
jecxz
outsb
inc
fsub
mov
add
cmp
stc
jne
insb
cmc
imul
lea
mov
mov
mov
lahf
jge
mov
enter
dec
iret
xor
push
add
aam
mov
insb
dec
addr16
sub
repnz
sbb
int
mov
mov
sbb
sub
insl
popa
dec
and
les
and
sub
jno
sub
push
mov
aas
das
mov
incl
mov
stos
inc
or
dec
cmpsl
dec
sbb
sti
mov
mov
sub
data16
shll
out
aam
rolb
dec
fisttpl
xchg
xor
mov
je
adc
ljmp
cmp
in
xorl
fwait
test
bound
int3
jb
cmpsl
or
push
arpl
call
adc
icebp
stc
mov
xor
test
testb
and
push
mov
push
push
clc
jbe
jmp
dec
jg
cmp
enter
inc
testb
pop
dec
stos
dec
pop
cli
imul
pushf
mov
adc
movb
inc
lods
xchg
push
mov
repnz
loopne
mov
mov
cmc
push
inc
je
ffreep
mov
prefetchwt1
mov
outsb
jge
dec
in
orb
repz
shrb
lods
mov
test
rcrl
pushf
lock
mov
adc
call
in
cmpxchg
out
loopne
daa
sti
jne
ret
lahf
mov
loope
mov
ss
jns
loope
loopne
xchg
mov
pop
mov
inc
push
fsubs
adc
test
inc
mov
add
jno
lret
shr
sub
int
mov
inc
xor
xchg
aam
push
sarl
out
xor
and
and
cwtl
push
push
mov
sbb
ret
clc
jmp
shlb
inc
insl
pop
sub
sahf
inc
sar
or
pop
gs
jbe
push
out
mov
jmp
scas
add
hlt
xlat
shll
xchg
cs
repz
sahf
ljmp
out
or
xor
lret
int3
test
xor
xchg
stos
inc
push
inc
adc
adc
mov
cld
sub
mov
test
xchg
push
jae
push
pop
or
popa
xchg
mov
pop
arpl
in
sahf
inc
jl
pop
cmp
or
in
scas
fisttps
or
dec
sub
out
dec
jp
or
add
push
jo
xchg
fsubrs
pop
mov
mov
cld
xor
pop
inc
xchg
add
test
dec
rcrl
insb
les
iret
mov
xchg
lahf
repnz
ret
cmc
dec
xchg
add
insb
or
mov
sub
or
sti
repz
adc
in
cmpb
mov
jmp
pop
das
push
adc
push
xchg
mov
inc
lret
int3
mov
mov
inc
jl
and
mov
mov
sbb
lods
cmpsl
dec
rcrl
and
xabort
ja
es
xchg
stos
or
add
lods
and
cmpb
loope
jo,pn
push
call
xchg
js
jp
dec
mov
pop
push
sub
xor
js
mov
adc
cmpsb
fadds
sub
jmp
stos
out
mov
loop
jnp
ja
shlb
push
inc
push
movsb
mov
cs
dec
das
xor
stos
push
lods
dec
mov
mov
xor
jmp
movsl
adcb
mov
shlb
push
xchg
insl
negb
in
iret
lea
dec
or
xor
mov
jl
sbb
cs
xchg
cmpsb
pop
jecxz
and
fld
enter
xor
pusha
push
mov
fistpl
flds
gs
adc
xchg
pop
xchg
andl
sbb
and
enter
fcoms
cltd
add
out
lock
in
lods
mov
rcpps
iret
inc
rol
adc
iret
ljmp
mov
rep
mov
pop
loopne
dec
mov
inc
adc
dec
pop
or
mov
pop
std
mov
mov
cli
out
jno
xlat
stc
shlb
or
aas
test
jne
fstps
and
ss
jp
sbb
std
repnz
in
shlb
jmp
and
mov
insl
and
cmp
mov
sub
mov
pop
inc
sbb
or
lret
xchg
les
clc
aam
jo
and
or
dec
cld
es
add
jb
arpl
sbb
shlb
fs
and
fldenv
xor
popf
mulb
inc
sahf
sbb
lea
push
call
push
sub
pop
lods
je
fdivrl
xchg
outsl
ffreep
push
loop
inc
mov
cmp
fnstsw
fisttpl
jbe
loope
pop
push
mov
push
jle
mov
push
pop
rcrl
mov
shrl
xchg
dec
cmp
xchg
pop
movl
dec
pusha
xor
pop
fwait
xchg
push
lahf
push
and
bnd
pop
movsb
shlb
cwtl
aam
clc
ds
icebp
shlb
call
xbegin
subl
sbb
adc
push
dec
add
sbb
mov
mov
inc
int3
lods
out
loope
adc
data16
add
xchg
lahf
dec
stos
pop
sub
inc
loop
xchg
scas
fistpl
testl
jbe
rcl
aaa
cltd
jns
scas
cmp
call
repz
mov
and
adc
mov
lds
or
jmp
cmpsb
pop
mov
gs
insb
lcall
insb
rolb
xchg
jae
adc
lods
dec
arpl
fdivl
shlb
dec
fisttps
and
push
xchg
inc
sbb
cs
xlat
push
dec
add
in
push
push
loopne
lds
fistps
daa
jae
mov
sub
or
movsb
imul
mov
push
xor
movsb
xchg
push
pop
data16
adc
inc
mov
xacquire
pop
sbb
lcall
sbb
arpl
mov
out
stc
jnp
dec
aam
xchg
pop
fidivrl
or
cwtl
adc
push
pop
push
mov
pushf
dec
mov
dec
jnp
je
pop
fcmovnb
mov
inc
es
aas
lea
inc
test
push
test
mov
lods
mov
and
mov
push
idivl
sbb
push
hlt
popf
jne
lock
in
cli
push
push
push
sahf
insl
fstps
les
lret
into
mov
aas
and
jl
lahf
and
movsb
ds
shll
fdivr
mov
mov
mov
mov
fwait
pop
popf
idivb
jb
and
mov
orl
add
std
mov
jmp
add
test
jp
pop
sarl
iret
ret
jo
pop
jbe
mov
iret
pop
sub
ds
pop
push
cli
gs
stc
pop
xor
fldenv
jmp
lea
daa
and
pop
xchg
jnp
lcall
test
and
clc
pusha
pop
xor
dec
iret
jns
push
mov
mov
push
pop
and
insb
push
dec
dec
xlat
adc
ficoms
xchg
push
push
push
movsb
ret
add
ss
dec
shl
cmpsl
sbb
enter
shrl
mov
pop
jne
fdivrl
daa
jb
or
cmp
mov
add
lcall
inc
scas
jns
repz
stos
lea
mov
cmp
cmp
movsl
repnz
pop
insb
adc
hlt
pop
pop
push
adc
push
xchg
jp
adc
testl
fldl
lret
insl
add
jno
pop
lock
sarl
sub
mov
sbb
mov
cmp
in
das
test
int3
out
ret
cmp
mov
cs
nop
stc
ret
lods
repz
add
cld
fwait
xchg
and
fcmovnbe
pop
xchg
or
add
jbe
push
xor
jg
les
pushf
pop
mov
and
cltd
ja
mov
and
insl
push
out
and
jmp
fcos
cmc
jb
outsl
insb
sbb
jo
sub
lea
jge
repnz
and
loope
lret
xchg
or
shrl
mov
cmp
mov
fs
je
sbb
aaa
popa
push
in
aad
test
push
pop
mov
dec
sub
xor
pusha
mov
mov
adc
and
mov
mov
pop
out
pop
loop
test
dec
inc
daa
pop
adc
scas
out
sbb
mov
sarb
fwait
stos
pop
adc
sub
mov
sub
clc
cmc
lock
loop
std
adc
xchg
cli
or
insb
push
stos
dec
fwait
mov
std
mov
adc
adc
mov
cli
sahf
dec
stos
dec
movsb
pusha
gs
stos
shlb
mov
pop
out
fsubrs
xchg
jp
and
pop
xor
mov
mov
lods
push
in
cmp
mov
aas
jbe
cmp
mov
scas
fmul
xchg
xchg
xchg
fs
stos
gs
mov
mov
cmc
dec
push
push
rorl
sub
mov
jge
or
es
xchg
insb
clc
jns
cmp
rcr
movsb
fistl
mov
arpl
mov
pushf
or
dec
jecxz
and
hlt
pop
add
push
in
fildl
xchg
mulb
adc
cmp
push
mov
jmp
into
retw
fdivrp
mov
je
aaa
out
mov
jno
cmc
shl
add
into
cmpsl
push
xchg
jns
pop
ror
sub
sbb
mov
outsl
mov
sbb
lcall
addr16
sub
insb
mov
dec
imul
in
push
je
xchg
mov
pop
jnp
jle
out
aam
fwait
insb
sub
std
mov
mov
mov
and
push
inc
fists
mov
mov
mov
loope
ficomps
fildll
mov
imul
je
shrl
mov
out
xchg
inc
xchg
repz
pop
enter
sqrtps
mov
ret
popa
lock
xchg
sub
mov
daa
daa
roll
sub
fidivrs
in
cmpsb
or
adc
xchg
xorb
add
out
lret
or
add
lret
imul
adc
xor
sahf
in
in
lret
cmp
dec
hlt
jo
mov
adc
mov
xchg
pop
insb
xchg
adc
daa
int3
sti
xchg
adc
in
sbb
mov
mov
nop
push
cld
xchg
rcrb
testb
mov
repz
jmp
aam
mov
hlt
ret
adc
or
mov
fnsave
negb
mov
pop
repz
pusha
lock
pop
out
jo
popa
push
push
cmp
mov
pop
jb
mov
cmpsb
or
add
and
add
rcrl
adc
jbe
pushf
push
sub
fsubr
lock
mov
rolb
add
repz
mov
daa
push
or
mov
scas
in
ret
outsb
inc
jno
dec
jae
push
int
fimull
jbe
or
cmc
ljmp
jbe
in
icebp
cmp
gs
xor
cmp
dec
inc
sub
loopne
mov
sahf
testl
inc
pop
cmp
inc
push
push
scas
inc
out
push
cld
adc
xchg
or
int3
fwait
pop
sbb
loopne
pop
and
mov
scas
jmp
sub
pushf
icebp
adc
cmc
popf
cmpsl
inc
mov
adc
push
test
jl
lcall
inc
xchg
fisubl
dec
outsb
cmp
pop
sbb
out
inc
cs
arpl
sbb
movsl
sbb
outsb
push
stc
pop
out
push
outsl
pop
je
mov
push
inc
add
pusha
int
fidivs
neg
xorb
int3
stos
lds
emms
mov
add
out
icebp
hlt
andb
push
sub
fdivl
dec
and
dec
or
ljmp
push
into
arpl
push
sub
inc
dec
dec
rcll
sub
mov
not
push
ja
aaa
dec
xchg
or
inc
rolb
adc
aam
gs
and
arpl
js
pop
int3
jno
mov
notl
inc
mov
inc
xlat
pusha
jg
xchg
push
popa
fistps
and
jns
lcall
scas
icebp
outsl
cltd
xor
loop
cmpb
jbe
pop
rep
or
inc
cmp
arpl
lahf
popf
test
icebp
mov
cmp
mul
sbb
cmpsl
push
cmp
cmp
mov
xchg
push
std
pop
scas
and
scas
and
jge
lods
inc
iret
lods
xchg
movswl
scas
push
mov
push
inc
je
xchg
sbb
hlt
outsb
sbb
shl
mov
imul
xlat
aad
mov
add
lea
xchg
js
lock
jmp
sub
xlat
xchg
js
jmp
test
sarb
aam
call
es
not
push
xor
fidivrl
mov
jecxz
shrb
sti
int
and
sub
out
or
cs
and
xor
mov
xchg
cs
jno
mov
mov
jno
jo
rorb
mov
adc
mull
movsb
pop
in
add
sub
cmp
int
cmpsl
popa
ficompl
fimull
fidivs
das
fistl
lea
jno
loop
ret
or
fidivrl
or
sbb
mov
jle
xchg
xchg
sub
sbb
roll
jl
pop
out
mov
shlb
push
dec
mov
insb
dec
stos
data16
mov
xor
push
sti
add
xor
int
ss
loop
jne
adc
cmp
cmpsb
xchg
push
fidivs
orb
fs
jbe
jo
in
inc
cld
rorb
mov
cwtl
out
and
insb
adc
mov
idivb
cltd
scas
mov
sbb
hlt
ds
xchg
sbb
adc
xchg
adc
scas
mov
loope
fisttpl
loop
insl
iret
aam
orb
pop
out
xchg
xor
data16
mov
sbb
popf
out
inc
lods
mov
js
stc
ja
lret
cmc
jecxz
mov
fwait
mov
fbld
sub
adc
and
mov
mov
cmp
jns
inc
dec
push
sub
pop
and
sbb
xabort
push
in
xchg
aas
in
aad
or
jnp
jb
sbb
and
cmp
fwait
push
push
mov
mov
rorb
cmp
jle
into
lea
adc
add
jbe
imul
jbe
sbb
adc
into
ret
jecxz
cli
push
pop
pop
adc
pop
popa
pop
jle
orl
addb
fistps
jg
push
stc
les
ret
rorb
sub
out
stos
jg
and
int
rcr
pop
aam
gs
inc
inc
mov
bnd
test
add
mov
xchg
fisttps
mov
push
adc
clc
jns
cmpsl
mov
test
clc
rol
mov
faddl
pop
iret
pop
and
lcall
xor
sub
into
fwait
cmp
test
bound
insb
rorb
mov
sbb
hlt
mov
add
cmp
xchg
xchg
jb
popa
pop
out
test
aam
sbb
dec
subb
jl
daa
mov
jmp
test
and
lds
xor
pop
push
adc
pop
adc
movsb
push
sahf
jle
sahf
sahf
sub
mov
cmp
pop
stos
and
fadd
mov
xor
hlt
xchg
and
jns
dec
out
enter
adc
add
dec
loop
push
in
stos
dec
lret
cltd
pop
and
clc
mov
divb
clc
jle
lods
and
movsb
call
mov
lock
add
add
and
or
daa
dec
xor
push
cltd
insb
idiv
hlt
pop
nop
mov
or
insb
test
leave
cli
data16
lret
cmpsb
es
mov
inc
mov
subb
inc
cmpl
cmp
lahf
jnp
mov
adc
push
mov
mov
push
clc
push
jbe
test
xchg
pop
xchg
outsb
roll
iret
cmpsl
rolb
adc
cmp
xor
dec
pop
out
cs
cmp
jp
push
ljmp
out
inc
idivl
pop
and
cmp
and
xchg
pusha
pop
jno
push
lock
adc
cld
add
rorb
rcrb
in
les
scas
popf
cmc
inc
adc
push
ja
jge
pop
inc
mov
push
pushf
push
dec
mov
lea
xchg
fsubs
aad
sub
mov
popf
stos
pop
push
inc
fwait
or
lcall
cmp
mov
int3
idiv
fidivs
mov
mov
jnp
dec
sarl
out
fs
push
scas
in
out
xor
jbe
and
add
rcrb
imul
cmp
xor
cwtl
dec
jmp
enter
and
out
jl
stos
cmc
ss
adc
fldenv
test
mov
mov
inc
nop
fs
xchg
pushf
adc
ds
mov
push
ljmp
frstor
int3
imul
inc
push
sti
inc
push
sarl
xor
popf
dec
mov
ds
adc
mov
roll
sbb
xchg
xchg
xchg
test
idivb
data16
push
gs
pop
imul
mov
fcoml
lahf
hlt
cmp
xor
sub
xchg
jne
aad
xorl
push
nop
and
out
out
dec
mov
les
xor
cltd
out
dec
pop
push
jg
loop
andb
aad
or
xchg
mov
or
je
jecxz
sti
sti
les
imul
fists
sahf
fwait
ret
ds
pop
mov
add
aam
pop
push
ja
popf
pop
mov
cltd
mov
stc
int
add
les
mov
mov
add
or
fsubrs
data16
pop
insl
je
movl
hlt
idivb
cmp
jne
xor
jae
adc
rorb
or
and
mov
shr
inc
push
idivb
jmp
xor
pop
push
cmpsl
int3
sub
icebp
inc
xchg
xchg
inc
rcrl
imul
xchg
sbb
mov
cs
pusha
adc
cmc
dec
jle
xchg
add
inc
int3
mov
int
mov
sbb
jo
in
xor
mov
jg
xor
jle
nop
in
mov
xchg
pushf
fsubrl
in
daa
mov
out
sbb
push
mov
stos
cmp
mov
sub
cmp
leave
inc
das
dec
incl
shlb
push
int3
mov
std
adc
xor
dec
ret
xchg
mov
dec
sbb
push
cmc
mov
xor
cmp
fsubs
lahf
lss
out
leave
push
mov
push
negb
test
div
xor
in
jp
mov
cmp
or
dec
xor
or
fiadds
dec
and
sbb
pop
cli
cli
in
inc
faddl
fwait
adc
call
cs
mov
enter
xor
add
mov
jl
mov
nop
mov
psrad
aam
push
imul
test
leave
mov
nop
push
fidivrl
mov
sbb
or
pop
repz
inc
sbb
adc
loop
stc
add
inc
jns
jno
dec
cmp
mov
push
insb
out
insl
scas
push
std
or
data16
add
jne
test
adc
mov
div
or
je
sbb
pop
arpl
fisubl
fsubs
loope
ret
inc
add
xchg
pslld
xlat
adc
clc
xchg
fbld
and
push
fcoms
cmp
lds
roll
repnz
int3
psrld
jae
xor
les
add
sub
pop
dec
fcmovnbe
sub
pop
pop
int3
hlt
mov
inc
std
pop
lret
int3
push
push
das
in
dec
frstor
jae
dec
fwait
rol
mov
lea
inc
orb
dec
jl
shll
or
ja
pop
mov
popaw
loope
pop
xchg
inc
shll
ja
cmp
iret
hlt
inc
mov
and
dec
jg
adc
aaa
dec
push
icebp
call
xchg
outsl
jp
mov
ljmp
std
push
in
and
xchg
sub
in
daa
dec
data16
xchg
lock
sbb
adc
insl
xor
mov
aam
cmpsb
push
std
jb,pt
mov
loop
loop
adc
mov
popa
mov
mov
gs
cmp
jo
dec
les
std
inc
xchg
xchg
fists
mov
aaa
mov
cli
jbe
sti
inc
popa
movsl
cli
leave
xchg
movsb
mov
iret
das
jp
gs
mov
popf
adcb
shl
cmpsl
lahf
push
or
cmpsb
out
jmp
jbe
popl
xchg
adc
jne
push
pop
jnp
xor
adc
mov
sbbl
jno
test
and
shl
insl
or
xorb
xorl
add
cmpsb
imul
adc
dec
mov
and
dec
mov
dec
rcll
mov
sbb
lods
popa
stos
jmp
fld
ljmp
pop
add
adc
pop
dec
icebp
sbb
into
out
dec
outsl
jns
pusha
cmp
mov
dec
jb
and
popf
dec
jo
sahf
pop
in
inc
add
imul
dec
push
testb
dec
pop
rol
shll
and
fcompl
sub
out
add
mov
push
inc
push
ljmp
insb
bnd
addr16
aas
dec
inc
adc
fscale
inc
jl
pcmpgtw
daa
adc
sub
xchg
es
dec
sbb
push
and
sbb
lods
clc
xor
popf
pop
push
aaa
into
pop
jp
call
mov
dec
test
and
add
push
insb
cmpsb
xor
ljmp
fld
mov
mov
xchg
fwait
and
rolb
mov
in
in
sbb
xor
test
cmp
mov
subb
and
jp
outsb
ret
and
and
jno
inc
dec
fs
cmpsb
nop
push
test
cmc
mov
faddl
jl
lahf
pop
sub
inc
pop
add
xchg
xchg
mov
pop
out
cmp
cmp
xchg
out
pop
scas
add
inc
clc
aad
aaa
and
addr16
popl
mov
mov
xchg
mov
ljmp
popa
movsl
add
xchg
push
out
jno
imul
adc
and
imulb
fildll
add
mov
sahf
mov
pop
loop
movb
mov
xor
push
loop
add
push
les
int3
sub
sub
rol
mov
dec
cmp
lahf
int3
rcrl
sbb
mov
mov
fsubrl
ljmp
int
or
xor
adc
xchg
push
sbb
jo
dec
pop
inc
ret
shr
push
call
roll
mov
jle
pop
or
mov
xchg
out
adc
adc
lret
sub
insb
rclb
mov
mov
adc
mov
shrl
mov
dec
pop
gs
js
adc
sarb
aaa
arpl
or
sbb
push
sbb
adc
xchg
sahf
in
in
or
pop
movsb
sub
aam
mov
rcrl
into
dec
faddl
mov
mov
fcompl
push
cltd
fildll
cmp
std
sub
daa
aad
push
pop
sub
sti
or
cmp
lods
or
or
rcrb
fmuls
fadds
pop
push
pop
and
xor
push
clc
fidivl
dec
andb
stc
inc
sbb
pop
cmp
fbld
inc
movsb
fwait
lahf
add
bound
push
push
imul
es
lods
cmpsl
ljmp
in
loopnew
dec
fdiv
cs
std
lcall
ss
push
dec
cs
sub
sub
addl
std
fdivrs
inc
sbb
mul
in
push
popa
pop
mov
sbb
fwait
mov
sarl
xchg
lcall
jl
fistpll
sub
fcoml
xchg
mov
cmp
pushf
or
and
pushf
mov
movsb
leave
mov
adc
xor
push
xchg
adc
in
xchg
mov
fadd
stc
sbb
sti
bound
or
sbb
or
mov
idiv
ja
push
in
sub
in
sbb
and
or
mov
enter
mov
or
xchg
inc
aad
mov
sbb
jg
hlt
mov
mov
dec
mov
cmp
mov
js
out
xor
or
xchg
pop
lret
xor
adc
shlb
shrb
xchg
pop
mov
lahf
cmp
and
pop
ss
push
add
mov
repnz
adc
or
mov
rolb
mov
rorl
je
push
lods
mov
cmp
cmpsl
clc
push
lret
pop
stos
jno
mov
rcrl
pop
pop
and
adc
or
test
push
cmp
mov
es
nop
jp
dec
aas
out
mov
stos
imul
lret
jnp
sub
sub
pushf
sbb
push
movsl
xor
mov
je
ja
inc
add
dec
in
cmc
sub
jns
add
rorb
sbb
mov
in
int3
sahf
inc
push
adc
cmpl
hlt
aad
mov
and
adc
dec
xchg
sub
cli
mov
cmpb
lret
jle
hlt
fnstcw
pop
fimuls
sarb
outsl
out
ja
out
or
ja
lea
inc
jmp
cmpsb
daa
sub
jg
or
sub
xor
jnp
iret
jge
fisubrl
out
sub
sub
mov
mov
add
and
jp
pop
orl
xchg
cmp
mov
xchg
mov
out
nop
leave
adc
sub
jb
in
hlt
shll
inc
out
add
mov
mov
stos
insb
stos
sub
fstpt
lods
sub
push
push
daa
mov
adcl
add
les
xor
test
and
mov
add
int
pop
mov
adc
sbb
push
pusha
cmpsb
imul
cmpsb
push
mov
dec
or
fsubrp
outsl
push
outsb
inc
inc
out
aad
sbb
cmp
mov
xchg
mov
pop
sbb
pop
inc
and
dec
inc
imul
pop
aam
fsubs
inc
ret
fimull
mov
push
fs
notl
movsl
popf
and
dec
mov
and
sub
cmp
call
mov
sub
out
fnstcw
lods
lds
adc
push
fs
pop
lcall
pop
call
mov
cltd
int
inc
std
jl
sbb
adc
insb
dec
popa
sub
sub
repnz
movsb
out
jb
or
pop
xchg
mov
add
lret
pop
clc
outsl
mov
jb
aas
lcall
dec
xchg
pop
idivl
movsb
adc
fmulp
ret
push
cltd
dec
sub
shlb
pop
dec
push
jge
fadd
pop
cmp
dec
fiadds
repz
pop
bound
jg
adc
mov
mov
xlat
mov
or
out
stc
push
stos
push
aas
stos
xchg
jecxz,pt
arpl
pop
imul
sub
pushf
int3
sub
mov
mov
inc
mov
dec
mov
xchg
mov
mov
data16
add
sbb
scas
xchg
or
mov
sub
jbe
sbb
mov
cmp
mov
mov
mov
data16
iret
jmp
stc
ret
dec
insl
add
cld
lcall
or
loope
int3
mov
dec
jp
dec
mov
push
lahf
adc
popa
je
dec
scas
leave
push
cmc
ficoms
push
sub
mov
push
rcrl
mov
popf
push
clc
loop
mov
xchg
ret
or
adcb
lea
mov
mov
xchg
jne
xchg
lahf
leave
cwtl
dec
xchg
fnstcw
aaa
jge
inc
jae
fs
das
pop
movsb
xchg
push
out
cltd
test
dec
or
mov
mov
jbe
mov
xor
shrb
orl
xchg
adc
or
les
push
inc
ljmp
pusha
sub
movsl
push
mov
es
enter
mov
dec
sub
xchg
je
sbb
sub
jecxz
lahf
jle
lcall
ss
dec
inc
cmp
nop
fs
push
dec
sbb
outsl
hlt
mov
add
or
sbb
mov
repz
insl
fidivrs
xor
mov
inc
cmp
sbb
push
push
imul
aam
sbb
mov
cld
outsb
sti
xchg
and
mov
jns
ret
add
or
add
das
add
xchg
adc
sbb
mull
adcl
push
jno
mov
cmp
pop
lcall
sbb
ja
lret
or
das
test
stos
loop
cld
int3
jg
xchg
icebp
or
ja
sub
rcll
enter
mov
push
and
lods
inc
pop
pop
mov
leave
outsl
aas
mov
mov
mov
jp
fs
cmp
stos
xchg
out
mov
dec
rcl
mov
xlat
std
mov
stos
dec
enter
mov
je
lods
mov
adc
pushf
jo
pop
aad
or
int3
popf
pop
cwtl
stos
enter
mov
mov
dec
mov
adc
inc
xchg
dec
mov
in
and
inc
ret
jno
xor
je
push
test
dec
xchg
pop
pop
inc
jmp
pushl
fsubrl
mov
pop
xor
mov
jmp
leave
cs
and
adc
movsl
jnp
pop
mov
movsl
cmpsl
rorl
xchg
es
ret
les
test
aam
lods
and
pop
popa
sbb
adc
and
inc
jns
mov
mov
leave
out
loopne
test
pusha
imul
pop
jb
imul
das
jbe
fs
push
xor
mov
movsb
fistpl
daa
jb
xor
pop
dec
test
add
sbbl
mov
out
add
stc
inc
mov
cmpsb
in
or
mov
cld
push
inc
inc
dec
ss
orl
fisttpl
pop
sbb
test
jno
loopne
dec
mov
scas
andl
cmp
loopne
sar
jmp
lret
sbb
inc
pop
mov
fisubl
xchg
loope
sbb
outsw
cmp
cmp
ljmp
or
xor
push
add
aad
cltd
shll
adc
test
add
fdivl
mov
mov
dec
pop
popf
add
xor
mov
cli
mov
nop
lret
test
adc
pusha
mov
cmp
xchg
into
jmp
inc
or
cmp
xchg
mov
aaa
ja
mov
pushf
ds
fisubrl
dec
jo
jg
pusha
add
pushl
stos
xchg
int
sahf
loop
pop
imul
sbb
js
out
js
add
dec
inc
andb
mov
jl
dec
stos
mov
or
sub
adc
inc
loop
jmp
jns
inc
arpl
mov
inc
jo
scas
test
pop
aaa
jecxz
mov
pop
or
mov
jo
into
int3
pop
pop
mov
or
push
sub
adc
jne
test
jb
push
addr16
mov
bound
fistl
sub
mov
popf
pop
imul
stc
or
push
lea
ret
in
pop
out
gs
add
pop
mov
xchg
inc
lea
jl
in
dec
inc
test
into
sub
outsb
or
inc
fiaddl
ja
mov
nop
dec
add
loope
in
mov
mov
ret
js
inc
cmp
imul
ds
pop
xor
dec
lret
daa
cmp
out
mov
outsb
pop
push
push
push
shll
mov
or
loope
lds
pop
in
repnz
pop
pushf
lret
ljmp
sti
stos
test
pop
jp
fwait
push
shlb
push
icebp
outsb
iret
mov
xor
xchg
dec
adc
mov
stos
jne
test
or
clc
mov
push
jo
add
pop
ja
js
aaa
ror
inc
xor
ret
mov
jnp
scas
fistpl
ss
aad
ja
je
aaa
add
das
push
ds
jmp
movsb
sub
lock
jmp
aaa
add
adcl
ja
cmc
ja
or
aad
mov
loop
mov
and
xchg
push
cmp
sarl
mov
mov
mov
push
pop
sbb
lods
add
xor
jb
fidivrs
and
fwait
sti
enter
xor
out
out
ss
in
cltd
movsl
pop
inc
jmp
scas
jo
out
mov
test
shl
aad
adc
mov
ficomps
test
popa
sbb
add
imul
ret
xchg
xor
push
scas
push
cwtl
jg
push
std
push
test
in
jno
cmc
ret
clc
test
push
adc
mov
lock
insl
test
sub
je
dec
stos
sbb
cmpsb
mov
adc
push
pop
push
leavew
cmp
sbb
aam
hlt
movsl
call
xchg
in
mov
jmp
mov
fs
stos
lcall
subb
cmp
cmp
scas
incb
jg
nop
jnp
jbe
mov
cmp
lret
xor
in
and
test
pop
sub
pop
leave
push
push
fstps
lods
mov
stos
jmp
clc
push
test
mov
mov
add
mov
sbb
and
xor
mov
sub
movsl
and
and
sub
mov
mov
add
out
push
jge
or
test
lock
xchg
lea
jmp
imulb
ror
rorl
add
xchg
dec
std
cli
js
or
sarl
mov
lcall
fptan
outsb
outsl
xor
mov
xchg
aam
mov
lock
andl
xorb
outsb
fdiv
and
ja
jg
lods
in
mov
cmp
dec
adc
movsb
sarl
and
loop
cmpsl
inc
xor
fcoml
repz
push
mov
in
push
arpl
les
sub
jb
sbb
or
add
mov
je
cmpsb
inc
movsb
xchg
ret
sbb
xchg
push
les
subb
sarb
cltd
insl
xor
lret
or
gs
mov
sub
rcrb
mov
mov
adc
jae
outsb
xchg
jg
push
mov
jns
adc
and
hlt
iret
sbb
jp
mov
repz
pop
push
mov
inc
sbb
mov
js
mov
ret
jmp
xchg
mov
cmpsb
and
mov
dec
sbb
imul
gs
stc
cmp
mov
pushf
pop
sti
push
movsb
mov
loop
adc
test
fcoml
stos
cs
mov
push
or
scas
xlat
fstpl
out
mov
outsb
sub
je
jae
das
out
pop
add
mov
mov
lds
incl
in
test
jmp
cli
pop
pop
lds
cmpsl
lcall
and
cmpsb
sub
jge
adc
repnz
stos
popa
movsb
mov
inc
nop
push
push
popa
mov
mov
cltd
mov
xchg
je
mov
jne
daa
fwait
enter
test
xchg
ss
sahf
xchg
int3
xchg
fcomps
repnz
pop
test
xor
sbb
lds
sub
jmp
pop
lock
xlat
add
mov
icebp
out
adc
jge
movsb
sub
adc
cmp
dec
fcmovnu
inc
je
jle
jne
arpl
jb
and
cmc
pusha
cmp
call
or
test
ret
cltd
push
out
orl
mov
aam
and
jb
das
ss
adc
out
clc
xor
imul
fdivrp
cmp
insl
dec
nop
jl
rcll
mov
movsl
inc
jb
je
mov
lret
pop
test
lock
adc
mov
sbb
call
sub
sahf
xchg
and
test
mov
jmp
xor
ljmp
add
cmp
test
cmc
jae
mov
loop
fbstp
jmp
in
push
fs
popf
ss
rclb
sar
push
jbe
push
nop
stc
fs
lock
aaa
mov
lret
push
mov
das
mov
add
push
mov
pop
test
push
jp
idivl
jl
insb
xchg
sahf
cmc
sub
adc
or
rorb
std
xchg
push
aam
jge
inc
pop
sbb
inc
rcll
or
das
push
pop
in
repz
xor
aaa
movsl
iret
inc
dec
sub
jmp
outsl
adc
mov
dec
xchg
mov
dec
sbb
pop
lcall
sahf
int
lods
call
dec
lock
jecxz
pop
adc
pop
push
mov
mov
int
xor
jbe
mov
mov
inc
lods
pusha
lcall
push
sbb
dec
dec
pop
push
insb
fiaddl
gs
cmc
lret
js
jmp
adc
dec
repnz
movsb
sahf
cmp
mov
stos
jnp
fucom
adc
out
out
shll
sub
jae
jmp
mov
loop
jo
mov
in
movsl
mov
je
mov
nop
or
sbb
mov
pop
inc
jo
push
sbb
pushf
sbb
enter
xchg
push
inc
imul
cmc
rcrb
push
test
mov
ret
and
jb
mov
inc
pop
cli
push
insl
inc
xchg
cwtl
jae
js
xor
dec
and
orl
out
and
xchg
cmpl
aad
pop
push
ljmp
rclb
out
cli
sub
mov
and
ret
sub
add
fldl
popf
stc
pop
xchg
adc
xchg
xchg
pushf
sub
not
or
leave
out
or
mulb
shr
icebp
sub
in
in
sub
in
mov
cmpsl
xchg
lahf
sahf
mov
push
dec
pop
sbb
mov
inc
clc
push
pop
cmp
in
sbb
stc
pop
mov
outsl
test
in
cmp
mov
lods
mov
or
int3
push
cmpsb
movsl
adc
mov
enterw
mov
orb
dec
push
insl
rcll
cmp
pop
xchg
imul
cmpb
mov
dec
test
popa
sbb
jge
add
jo
mov
aam
xlat
and
fisubl
pop
fbld
jecxz
jle
data16
mov
pop
sub
fsubrl
or
shlb
subb
dec
andl
xor
push
lahf
dec
sbb
dec
psllw
imul
xchg
in
js
movsb
jmp
out
clc
dec
movsb
aas
adc
adc
dec
cmpb
push
imul
cmp
fs
hlt
sbb
mov
mov
jne
pop
dec
push
mov
loope
inc
ds
push
or
adc
sub
add
dec
adc
icebp
xchg
and
lock
xor
out
test
pop
adc
cmc
iret
incl
arpl
mov
fnstcw
mov
test
push
xor
sbb
and
mov
sub
int3
lret
iret
push
xor
fimull
mov
mov
shrl
mov
stos
or
dec
popf
jecxz
repnz
xchg
orl
insb
adc
dec
repnz
pop
shrb
add
in
push
mov
cmp
aam
xchg
notb
pop
into
fistpl
adcl
or
mov
add
mov
jle
or
mov
xor
cwtl
xchg
lcall
test
popl
aad
movsb
adc
pop
pop
data16
or
imul
jo
repnz
mov
jno
jnp
sub
sbb
das
mov
sub
repz
int
cmp
movsb
cmp
notb
hlt
inc
imul
sti
cmc
lret
lds
scas
std
jns
movsl
add
sub
es
stos
loope
out
mov
stos
loop
mov
test
gs
push
pop
jo
jo
mov
or
outsb
mov
jbe
push
cltd
push
daa
fadds
orl
jnp
cltd
mov
sub
cli
mov
mov
or
lahf
cmp
cwtl
pop
mov
cmp
imul
ja
inc
mov
pusha
pusha
in
out
subb
je
and
jle
loop
les
rorl
jno
mov
and
fisttps
inc
popf
or
adc
push
lea
movd
xor
cmpsb
adc
stc
insl
lret
xchg
jge
pop
movsl
jp
push
mov
or
inc
add
nop
test
jp
and
dec
mov
or
rcrl
hlt
xor
daa
aad
push
cmp
dec
push
iret
and
xor
ds
jae
mov
in
mov
jl
imul
pop
test
loope
pop
adc
pop
movsb
movsb
push
xchg
xor
xlat
dec
or
inc
or
jne
test
into
push
add
mov
xchg
xor
daa
xchg
mov
movsl
jecxz
ds
sub
insb
cmp
sub
mov
xlat
dec
xchg
and
jg
sub
xchg
inc
sarl
xor
mov
lds
dec
dec
adc
and
dec
outsl
call
ret
addb
xchg
stos
xchg
ret
pop
push
push
inc
leave
pusha
shll
push
insl
adc
cwtl
sbb
lock
cmp
sti
adc
inc
sbb
add
in
lods
add
cmp
in
inc
sahf
or
ja
sti
cmp
roll
pop
push
sbb
inc
aaa
mov
clc
ss
in
cld
cmp
lea
into
aas
cmp
stos
sub
andl
icebp
xchg
fwait
leave
mov
push
cmp
fbld
test
enter
test
mov
lahf
xor
xor
sbb
jno
inc
lds
jbe
add
or
pop
cmp
ror
mov
fwait
imull
jmp
pop
xchg
or
and
test
shll
pop
inc
inc
push
roll
test
scas
push
jo
add
sarl
jp
and
ljmp
pusha
pop
repnz
enter
cmpsb
mov
lods
sbb
mov
adc
and
outsb
xchg
outsl
sbb
sub
int
mov
mov
adc
adc
dec
fistpll
dec
dec
add
mov
clc
mov
rcll
xlat
xchg
push
insl
sbb
repz
xor
jl
jbe
adc
push
repz
dec
mov
scas
dec
mov
and
shl
rcll
and
std
sbb
inc
clc
jmp
lods
pop
clc
xorb
out
push
daa
pop
rorb
pop
cmp
mov
sub
mov
mov
jecxz
mov
gs
fiadds
xchg
std
or
adc
ror
out
and
mov
cld
xchg
jl
xor
cmpsb
sbb
push
std
aam
test
add
push
pop
addl
or
movsl
pop
in
lea
push
lret
outsb
in
and
mov
xlat
lock
xchg
sbb
loop
test
test
iret
inc
out
and
fwait
rolb
shll
enter
popa
dec
fld
xchg
mov
in
loop
pop
out
or
popf
sbb
sub
imul
fmulp
cmp
aam
cmpsl
or
mulb
mov
xor
pushf
mov
mov
dec
gs
pop
inc
jge
ja
push
xchg
adc
in
xchg
push
test
pop
sahf
inc
outsb
fwait
inc
sub
mov
sbb
jecxz
test
cmp
or
and
les
loop
out
int
cmc
and
dec
roll
insb
std
shrl
push
jp
and
pop
fcmovnbe
mov
adc
lcall
pop
mov
inc
lods
and
dec
pop
and
push
mov
pop
adcl
cmpsb
iret
adc
add
popa
push
and
arpl
js
clc
pusha
add
sbbl
scas
imul
mov
ljmp
push
shll
jnp
xor
je
cmp
mov
jbe
fidivrl
loope
xchg
dec
adc
and
inc
mov
jnp
xor
and
repnz
sub
sbb
or
xchg
lea
push
inc
sub
cwtd
jle
push
mov
mov
lahf
in
test
inc
es
push
lods
ret
mov
dec
sahf
mov
clc
or
daa
xchg
mov
push
xchg
sbbb
cmp
sbb
testb
dec
fcmovb
xor
mov
sub
push
cmp
sub
js
pusha
icebp
aad
and
rcr
cmp
xor
dec
push
lods
or
daa
xor
lret
xchg
jbe
push
ret
push
movsb
push
mov
xor
mov
arpl
loope
jmp
int3
jge
scas
faddl
sub
push
xor
inc
out
sub
syscall
nop
mov
out
inc
shrd
xor
sub
sub
add
imul
cmp
shrl
ret
iret
dec
outsb
push
push
dec
in
cwtl
lods
adc
mov
or
mov
pop
push
xchg
dec
dec
dec
int3
inc
pop
push
lods
mov
sbb
repz
adc
scas
sub
fistpl
push
xlat
stos
cmpsl
cmp
xchg
cmpsb
in
lea
popf
and
lea
mov
mov
or
mov
push
out
mov
sbb
add
cmp
clc
mov
cmc
in
pusha
rclb
aad
push
xchg
xor
inc
jae
es
ret
sarb
gs
lods
jbe
push
xor
and
or
out
ret
mov
les
sti
add
imul
or
popf
scas
ja
push
sahf
outsb
stos
lea
rcrl
ffree
fistpll
xor
adc
jge
xor
push
inc
dec
sub
adc
dec
inc
dec
xor
lock
cmpsl
inc
mov
aas
cmpsl
adc
cmp
pop
xor
gs
sbb
xchg
stos
sub
mov
and
psubq
push
jb
mov
mov
inc
dec
cmp
ja
add
scas
xchg
and
mov
mov
decb
xchg
sbb
add
clc
and
inc
adc
xlat
add
test
rcrl
stos
nop
popf
movsl
mov
ja
jle
push
ss
lcall
int3
sub
js
cmp
fstl
push
lret
xchg
jae
adc
mov
mov
push
leave
out
push
and
or
cld
das
cmpsl
sub
sbb
sub
insb
add
stc
mov
cltd
or
sbb
js
and
les
outsl
and
je
imul
inc
xchg
inc
cmp
std
cwtl
sub
rcll
push
lods
xor
out
scas
or
aam
xchg
xchg
out
lcall
int3
jp
mov
add
jnp
ja
fwait
rolb
inc
test
fsubrs
adc
pusha
adc
sbb
mov
xchg
rcll
xor
push
jno
movsl
sbb
in
and
negb
mov
in
inc
mov
jns
adc
jg
cmp
aad
adc
cld
add
or
repz
sub
push
mov
mov
pop
add
dec
adc
les
shl
mov
outsb
test
repz
mov
insl
jl
jo
fcom
push
shrl
ds
mov
mov
cltd
sub
out
xor
int
stos
add
cmc
test
xchg
loope
aam
mov
sub
jg
sub
inc
movsb
es
dec
cli
ret
es
mov
mov
ss
lock
sbb
inc
mov
or
insb
dec
sub
fadds
pop
shll
or
ret
sbb
xor
xchg
and
cmp
negb
jne
adc
push
cs
jo
mov
or
lds
and
insl
fdivrs
adc
xchg
es
or
notb
xor
jbe
sub
pop
cltd
rol
insb
sbb
fwait
mov
sti
fcmovnb
mov
sbb
jnp
test
sti
ret
mov
test
jbe
or
cmc
pop
outsl
in
in
ret
inc
fimull
xor
xchg
push
out
mov
sti
xchg
incb
mov
mov
jae
inc
popf
repz
hlt
jge
cli
lds
jno
imul
or
push
insb
lods
sub
adcb
and
or
mov
xor
shl
push
fsubrs
stos
mov
lods
mov
jnp
xor
dec
fldln2
cwtl
into
dec
adc
daa
mov
mov
aam
lret
test
jge
test
mov
cltd
or
insb
mov
int3
mov
outsl
jns
fs
sub
out
xchg
adc
std
test
outsl
xchg
pop
daa
out
mov
adc
aam
pop
mov
mov
push
fimuls
adc
jno
mov
mov
pop
cmp
cmpsb
imul
or
test
out
movsb
outsl
adc
or
subl
lcall
popa
sbb
popa
stos
out
popf
pop
outsl
sbb
pop
loop
int3
idivl
repnz
push
dec
aad
pop
mov
aas
out
pusha
mov
sub
push
jb
pop
xchg
xchg
dec
pop
in
repnz
adc
xlat
pop
dec
stos
jmp
sbb
loopne
jp
add
mov
or
pop
fcomps
xor
rcll
inc
insb
jg
sar
push
jl
dec
inc
sbb
sbb
inc
xchg
sbb
xchg
mov
push
dec
sar
ja
xchg
idivl
cld
adc
jmp
clc
push
xchg
lods
fistpll
sbb
icebp
jns
jge
roll
test
or
push
cmpsl
inc
pop
add
and
push
pop
sub
push
sbb
and
xchg
push
pop
xchg
popf
in
adcb
cli
add
push
bound
ds
or
sub
add
sbb
fs
mov
sub
vrsqrtss
xor
cs
bound
stos
aam
rcll
mov
mov
and
ret
xchg
pop
add
es
dec
adc
push
mov
xor
xorl
and
dec
adc
pop
and
sbb
call
dec
in
mov
xchg
mov
push
jecxz
jle
je
adc
dec
cmp
inc
cmp
and
adc
stos
add
or
in
cmp
or
gs
lahf
les
jne
test
xorl
cwtl
add
test
jno
bound
outsl
mulb
mov
jbe
leave
adc
push
jle
push
xchg
and
mov
sbb
loop
mov
lcall
adc
dec
push
inc
cmpsb
mov
stos
mov
jbe
and
mov
lret
incl
add
or
push
cli
out
popa
mov
dec
sbb
dec
rorl
in
int3
mov
loop
pop
xor
lock
and
adc
lds
jb
test
and
sbb
mov
adcl
js
jb
lds
xchg
je
push
mov
hlt
pop
and
scas
int
and
or
xchg
or
out
jecxz
lcall
adc
movsb
dec
xor
jo
dec
xor
jle
pushf
pop
mov
mov
and
dec
lahf
adc
inc
ds
icebp
mov
push
mov
push
adc
mov
inc
push
dec
adc
movsl
dec
inc
dec
repnz
ja
lret
scas
and
jmp
xor
jmp
mov
sbb
adc
lcall
adc
or
or
sbb
ds
out
push
push
lret
stc
inc
jle
imul
pusha
popa
cmp
jbe
dec
loop
nop
addl
jecxz
lea
ja
sbbb
jge
sbb
and
push
xchg
push
or
inc
in
pop
push
mov
nop
iret
push
pop
out
mov
mov
jnp
mov
sub
in
lret
inc
cmpsl
jg
mov
aad
outsb
mov
outsl
sbb
jne
nop
in
addl
test
push
movsl
hlt
data16
mov
pop
jnp
dec
les
sbb
loope
mov
pop
mov
les
mov
xlat
inc
arpl
test
jns
push
pusha
mov
rcrb
outsl
mov
popa
cmpsl
add
or
hlt
jl
out
int
or
pop
lea
push
inc
or
test
mov
out
push
mov
js
lds
enter
xor
mov
and
xchg
xchg
fwait
sti
xchg
js
and
jmp
xchg
add
out
push
and
dec
sub
xor
sbb
inc
fs
cwtl
cmp
sahf
push
rcll
fisubl
jge
inc
jnp
mov
stc
dec
sbb
scas
les
loope
adc
sbb
cmc
sbb
xchg
and
sbb
xor
and
ds
inc
outsb
stos
ja
and
orb
lods
testl
daa
fs
shrl
pop
ds
test
call
push
mov
add
lock
push
and
out
lcall
mov
data16
loope
scas
pop
out
cmpsb
cmovbe
jl
loop
mov
into
iret
jbe
stc
add
mov
pusha
push
dec
popf
arpl
rcrb
xchg
mov
outsb
mov
idiv
ret
jno
mov
bnd
sub
mov
pop
bound
insb
stc
xor
iret
push
stos
jo
enter
xchg
inc
pop
frndint
stc
cmp
mov
out
mov
sti
lahf
hlt
xor
adc
out
bound
adc
adc
push
shr
mov
mov
adc
in
push
jnp
test
mov
addr16
adc
or
ror
pop
push
data16
mov
mov
pushf
inc
xor
int
jb
dec
mov
in
jp
add
xlat
lock
aas
fwait
push
xchg
sub
mov
shr
pop
sub
push
pop
fs
sub
ret
mov
lret
add
movb
push
dec
out
pop
mov
fwait
push
mov
pavgb
faddl
cmp
sbb
pop
fsubs
pop
mov
ljmp
mov
in
push
cmp
clc
mov
int
xchg
out
lods
xchg
and
jno
rclb
cmpsb
lahf
mov
mov
or
sbb
mov
push
jmp
mov
inc
stos
add
mov
mov
leave
jecxz
and
xchg
mov
jl
sub
mov
mov
fnstcw
xchg
imul
push
out
mov
or
cmpsb
ficompl
stos
pop
fsubrl
clc
inc
sbb
add
popf
addb
std
mov
pop
xor
loopne
movsl
inc
cli
cmc
xor
xlat
aam
inc
add
mov
mov
pop
movsb
je
les
andl
sbb
and
insl
nop
mov
das
mov
imul
xchg
sbb
insb
rcl
test
inc
cwtl
call
xor
inc
leave
push
jl
jmp
lods
imul
cmpsl
cmp
adc
sub
dec
or
inc
xchg
cmp
mov
sub
repnz
aaa
xchg
adc
add
daa
jnp
pusha
jbe
cmc
mov
repz
dec
dec
sub
jmp
add
mov
mov
out
test
mov
in
mov
testl
mov
mov
or
stos
pop
test
aaa
cld
aad
ds
cmp
scas
xor
int3
testb
scas
movsl
mov
dec
test
arpl
lahf
inc
cmpsb
add
mov
adc
inc
push
inc
iret
subl
rcll
push
fstpl
fnsave
sub
jae
scas
xor
call
mov
sbb
sub
and
cmp
aas
pop
add
lret
pop
cmpsb
add
stc
popa
lea
mov
hlt
shrb
cmc
pop
or
lahf
aam
lods
add
out
in
outsl
mov
jno
aad
adc
xor
addl
mov
int
sbb
sbb
ss
out
out
adc
push
movsl
and
jno
sarl
adc
movsb
xor
fsubl
popf
jbe
repz
lcall
addb
cmp
ret
inc
ret
dec
pop
out
mov
mov
and
dec
negb
cs
mov
push
pop
fnstcw
pop
jb
js
stc
and
outsl
mov
push
mov
in
je
scas
cltd
out
mov
xchg
add
popf
and
jp
xor
inc
cmp
pop
pop
stos
aas
fistpll
or
xor
dec
xor
div
cwtl
leave
sub
mov
dec
lret
subl
je
rclb
jo
and
mov
mov
add
ret
jp
cmp
int
cmp
pop
cmp
push
xchg
insl
or
pop
pop
fisubs
mov
inc
adc
mull
add
movsb
push
jecxz
sbbb
sub
rorb
sahf
aad
sbb
les
push
xchg
dec
bound
and
adc
and
xchg
mov
push
pop
xchg
sub
inc
faddp
mov
inc
mov
test
pop
and
lret
das
out
outsl
cmpsl
inc
gs
pop
cmc
mov
add
fmul
mov
xchg
shr
stos
jg
imulb
push
sub
adc
cmpsl
aam
stos
xchg
sbb
addl
mov
or
sub
pop
or
dec
and
cs
arpl
imul
mov
and
sub
cltd
push
sub
das
adc
sbb
and
mov
jp
test
std
lea
xor
ret
lock
mov
clc
adc
pop
lret
pop
sbb
ret
xchg
add
add
mov
repz
and
popa
sahf
hlt
call
test
dec
ret
xchg
andb
data16
in
scas
sbb
dec
fs
and
push
cmp
xchg
and
mov
adc
and
repz
in
jne
mov
cmc
aam
es
or
rcrb
fdivp
add
js
mov
pop
sbb
sub
pushf
fs
shll
sub
shrl
pushf
mov
sbb
pop
cmp
pop
ret
movsl
cmp
cmpsl
or
cmp
jle
enter
adc
popf
add
mov
jmp
ret
adc
popf
int3
cmp
pop
lods
call
sbb
enter
jno
jno
lret
in
loope
jae
inc
outsb
push
jne
idivl
pop
in
mov
bound
pop
jno
xchg
jge
aaa
lea
or
stos
fcmovne
xor
sub
cmp
inc
inc
jl
daa
lret
in
outsb
movsl
cmc
xor
and
fsubl
movsl
mov
sbb
mov
mov
std
in
or
lds
aaa
pop
aas
inc
xor
adc
mov
stos
scas
out
in
push
jecxz
mov
call
in
mov
fsubl
cld
hlt
jge
jo
je
sbb
mov
lret
movsl
cs
movsb
sbb
inc
std
js
push
sub
dec
xchg
mov
sbb
jae
in
sub
xchg
les
idiv
fildl
add
outsb
jecxz
fistl
fstl
das
fwait
test
sub
mov
repz
gs
dec
or
dec
mov
int
and
and
rclb
jg
out
push
xor
or
mov
jg
lret
out
add
push
xchg
mov
mov
pushf
mov
or
out
int
lds
mov
jle
push
dec
iret
cmp
ss
shrb
mov
orb
cmp
in
sub
leave
mov
shr
test
jns
xor
adc
adc
or
push
jecxz
div
inc
loopne
mov
inc
mov
xchg
push
nop
lret
jnp
dec
jmp
cmp
test
pushf
in
shl
lods
sub
insb
and
jno
sahf
xchg
sbb
jge
adc
push
cltd
fcoms
xor
inc
mov
pop
xlat
jae
cmp
leave
inc
cmp
push
and
cltd
in
xchg
dec
sahf
add
lds
lock
mov
cmpsl
or
dec
std
mov
adc
sti
pop
add
push
imull
inc
and
imul
dec
daa
xchg
add
inc
push
push
add
int3
js
cmp
ja
add
fdivl
jmp
loop
dec
mov
mov
adc
mov
sub
push
mov
loopne
lods
lods
fwait
rol
aad
pop
in
inc
cmpsb
and
insl
inc
out
jns
popf
sub
andb
lcall
jl
sbb
ja
rclb
sahf
push
push
imul
lods
pushf
inc
push
and
pop
push
jne
imul
jns
hlt
jo
out
sub
dec
pop
mov
loopne
xor
fs
mov
and
adc
mov
mov
and
inc
mov
dec
cmp
int
mov
push
dec
fbstp
sbb
cli
aad
pop
lcall
outsl
mov
push
pop
xchg
sub
ret
xchg
mov
jno
adc
cmp
in
mov
sub
xchg
rcrb
mov
xchg
and
push
push
jl
push
js
call
pop
aaa
lods
sbb
xor
jae
adc
das
or
outsb
loop
cmp
in
push
push
mov
or
sahf
push
les
pop
pushf
out
test
roll
jnp
or
addr16
mov
jge
mov
shrl
cmp
pop
sub
cmp
leave
cmp
leave
push
daa
imul
aas
mov
push
adc
aas
mov
xor
jmp
sbb
jmp
mov
cwtl
cmp
push
cmp
mov
pop
lock
cmp
mov
sbb
cmp
into
outsb
les
aaa
aam
xorl
dec
js
pop
and
repz
xchg
repnz
not
enter
ret
cmp
xchg
je
sbb
xchg
sub
fwait
loopne
lea
xchg
xlat
lret
xor
push
out
addb
cmp
cltd
xchg
cmc
jl
dec
std
xchg
inc
cmpsl
xchg
sub
jmp
outsb
rorb
clc
insl
iret
jmp
mov
test
fnstsw
push
or
inc
fsubrs
or
les
test
push
xchg
push
mov
add
mov
ja
lcall
add
xchg
lods
mov
add
jns
fisubrs
pop
stos
push
or
movsb
cmp
stc
sub
fadds
push
int3
mov
popa
jne
mov
mov
mov
jmp
jmp
imul
jl
cwtl
nop
daa
cmpsl
sbb
jns
dec
pop
push
jle
and
adcb
jo
ficomps
popf
pop
das
pop
ljmp
loopne
cmp
in
aam
and
loopne
aaa
cmpl
into
push
scas
jl
add
out
jae
fisubrs
stc
and
jp
add
mov
jl
js
les
mov
pop
xchg
xchg
cwtl
div
mov
rclb
iret
popa
les
test
outsb
fcmovb
je
jmp
sub
sarl
out
push
and
mov
adc
repnz
imul
or
jg
cs
stos
mov
or
xor
cmp
xchg
lahf
cs
int
je
sbb
add
call
mov
push
pop
nop
push
pop
fdivrs
dec
nop
mov
xchg
or
nop
push
mov
mov
test
inc
dec
adc
inc
jmp
mov
jmp
test
aam
les
sahf
enter
int
popf
test
movsb
pop
inc
leave
fisubrl
sbb
setp
sarl
fwait
jnp
repnz
lcall
rcr
xchg
ss
mov
mov
out
pop
popa
mov
mov
testl
lcall
jne
push
xor
mov
xchg
inc
je
rcrl
cmp
das
adc
mov
movsb
mov
push
mov
sbb
push
adc
adc
nop
push
sti
inc
push
push
mov
cmc
mov
push
enter
jne
ljmp
movsl
inc
xor
sub
mov
push
jo
push
xor
jg
imul
mov
xor
mov
arpl
mov
and
mov
aas
test
cmp
or
aas
bound
dec
clc
enter
cmp
mov
push
roll
xor
lods
sub
jae
cmp
jno
inc
jmp
jg
inc
dec
enter
mov
popf
rcrl
push
in
dec
ror
jnp
xor
loop
inc
lds
inc
repz
inc
cmp
test
std
and
jg
jmp
insb
mov
xchg
push
cmp
xchg
or
mov
repz
popa
mov
bts
sbb
dec
ret
pop
add
imul
rcrl
or
movsb
dec
push
push
adc
icebp
dec
fdivrp
lds
addr16
int3
popa
in
pop
les
mov
jno
mov
pop
ret
jmp
sub
xor
xchg
dec
fbstp
data16
cmpb
lds
scas
inc
fnstenv
push
cld
xor
incb
xchg
dec
fdivs
loope
add
cld
fildl
hlt
mov
sub
xor
mov
aaa
inc
lock
xchg
jp
sbb
fs
into
shr
sbb
test
clc
loopne
ds
xchg
jno
xchg
lock
stc
int3
push
sbb
add
and
xlat
cli
addl
pop
bnd
pop
jmp
into
lret
out
jmp
jnp
jnp
mov
adc
shll
iret
push
mov
adc
imul
loopne
or
push
mov
xorb
subl
ret
sahf
adc
xchg
andb
call
push
push
popl
push
ffree
sbb
inc
gs
jae
loopne
xchg
mov
adc
icebp
mov
jo
loopne
ja
mov
pop
or
jb
das
lret
pop
icebp
fidivs
leave
lahf
cmc
fcoml
dec
xchg
inc
insb
mov
push
add
cmp
adc
pop
mov
pop
arpl
dec
mov
arpl
mov
lahf
scas
or
js
nop
iret
sahf
cmc
jmp
mov
mov
jmp
nopl
and
cmovl
jbe
ljmp
xlat
in
imul
jg
daa
pop
and
icebp
lock
popf
adc
adc
movsb
mov
rcl
jnp
mov
and
pop
ficompl
rorb
sub
rclb
in
jo
inc
or
mov
iret
pop
addb
shrl
aam
jo
movsb
int
leave
mov
popa
aad
add
cmp
lcall
sahf
shlb
dec
and
dec
jl
adc
pop
mov
loope
mov
out
jnp
sub
and
mov
ret
dec
add
pusha
adc
xor
mov
mov
or
out
cmpsb
mov
push
roll
jne
adcb
iret
aad
dec
ret
loop
sbb
sub
and
dec
test
les
add
adc
scas
cmp
into
test
push
aas
xchg
ret
imul
push
cs
fs
je
pop
adc
jb
sub
incb
je
insl
xchg
insl
rol
loopne
mov
dec
push
jbe
out
xor
test
and
iret
out
scas
ljmp
push
inc
mov
or
push
loop
adc
adc
mov
out
rcr
in
sti
ja
les
jbe
fwait
mov
fwait
dec
jne
pop
iret
movsb
xor
cmp
and
ja
xor
lcall
mov
xchg
mov
lods
dec
ljmp
adc
pop
jl
mov
pop
fildll
scas
lods
push
lds
lods
jl
std
and
push
mov
pop
inc
pop
pop
jbe
adc
out
adc
subl
movsl
xchg
cmc
push
mov
lods
mov
je
popf
push
dec
je
pushf
scas
shrl
bound
push
jb
dec
jp
test
push
mov
stos
fcompl
mov
aaa
lea
push
push
in
cmpsb
movsb
sub
jbe
inc
out
jle
cld
scas
enter
les
data16
fcmovnb
popf
adc
and
ret
pop
pop
shrl
dec
cmp
xchg
cmpl
rcll
xor
daa
xchg
mov
sbb
mov
mov
cwtl
or
mov
xor
inc
ds
and
push
sahf
xchg
test
and
xchg
pop
mov
in
mov
lds
jb
or
les
enter
mov
insb
scas
cmp
jb
mov
dec
in
lds
xlat
mov
add
cmp
movsb
or
pop
dec
daa
xchg
adc
rclb
xchg
imul
adc
mov
lahf
lods
in
add
scas
mov
push
mov
xchg
mov
int3
js
sub
push
cld
out
test
lock
js
add
loop
xor
cli
mov
pop
dec
in
out
js
popa
nop
inc
data16
push
cmp
xor
cmp
mov
test
cmc
addl
jg
les
mov
test
cs
cmp
or
inc
sbb
xchg
test
adcb
fiaddl
pop
sub
dec
aam
cs
mov
pop
aas
in
lock
mov
arpl
aad
in
or
pop
ljmp
pop
cmp
and
stc
stos
mov
je
sbb
xchg
jne
mov
pop
std
ss
sbb
fildl
and
ret
dec
leave
loope
push
les
inc
cld
nop
sbb
ret
push
sub
mov
or
sbb
adc
jns
mov
xchg
mov
test
fucomi
jo
and
sti
mov
aad
daa
adc
xor
rorl
out
xlat
pop
push
cs
inc
dec
imul
scas
cmpsl
inc
mov
jge
loopne
ljmp
das
insl
inc
jge
aam
movsl
adc
pop
add
nop
sbb
cmp
movsl
cmpsb
dec
xlat
mov
mov
mov
sub
mov
and
adc
sub
push
pop
sbb
mov
pop
xchg
in
test
or
std
int
xchg
or
xor
inc
dec
pop
pop
lock
ja
push
or
pop
dec
sub
mov
fimull
out
nop
jp
xor
in
int
dec
xor
adc
push
ret
adc
dec
out
outsb
nop
sub
fdivrl
sbb
gs
mov
test
push
mov
fidivs
outsl
sub
repz
sti
mov
push
inc
sbb
push
insl
push
pop
sbb
sarb
jge
dec
adc
out
loope
ret
mov
sbb
cltd
pop
inc
jbe
sbb
jg
shr
icebp
sub
add
xorl
sarl
mov
sub
shlb
outsb
loop
push
inc
and
enter
dec
rcrb
inc
add
xlat
pop
pop
or
and
jmp
pop
add
out
cmp
or
add
add
jmp
stos
jae
adc
loop
inc
or
arpl
das
or
pop
jbe
inc
inc
pop
mov
sbb
jnp
mov
imul
xchg
test
dec
inc
fcmove
inc
jl
mov
and
clc
cmp
das
pop
insl
fstl
lcall
or
xor
inc
ljmp
xor
adc
enter
mov
jo
arpl
jecxz
outsb
popf
cmp
push
inc
rorb
push
pop
xor
sbb
or
cs
stc
jbe
lcall
ljmp
sub
fnstenv
push
lahf
xchg
inc
cli
stc
fwait
xlat
lret
sbb
int3
in
sub
cmp
enter
sub
add
mov
mov
xchg
and
dec
jbe
test
in
bound
mov
into
xor
popf
push
leave
in
sub
arpl
push
mov
clc
or
dec
fdivs
aad
out
xchg
lahf
in
in
mov
mov
outsb
xchg
jp
lds
ss
add
dec
xchg
into
enter
adc
mov
out
jmp
sub
es
movsb
loopnew
xor
pop
leave
ljmp
nop
repz
in
push
push
xor
rol
movsb
test
fs
lds
inc
lods
popa
mov
push
inc
cmpl
lds
xchg
rcrl
dec
into
shrl
jo
inc
inc
sbb
call
jne
pop
push
mov
lcall
mov
shl
push
stos
sbb
lret
jle
mov
mov
push
out
cmp
inc
test
cli
shr
mov
xchg
jp
gs
movsb
mov
push
inc
jecxz
cli
pop
jmp
aad
cmp
mov
nop
lods
inc
xchg
add
out
leave
inc
lds
push
mov
je
je
xchg
aaa
push
ret
xchg
sbb
out
repz
cltd
lcall
fdivrl
and
xchg
fldcw
mov
ja
add
mov
jns
loop
xchg
aam
jmp
or
dec
xor
jle
jb
leave
fadds
cwtl
fsubrl
inc
lret
mov
aad
push
pop
xlat
add
rorl
and
pop
fldl
mov
pop
sub
pusha
aad
cmpsl
mov
mov
sbb
mov
int
lock
push
cmp
ret
aam
cmc
and
andl
leave
add
jecxz
pop
lods
or
add
out
repz
xchg
lret
sahf
sbb
push
jbe
stos
xor
cli
xchg
xchg
inc
push
jge
xchg
lret
pop
mov
ficoml
adc
pop
inc
or
int3
adc
and
inc
mov
loop
jg
inc
jno
cld
mov
sub
dec
mov
jo
xor
std
xchg
out
xor
push
xchg
pop
lret
js
aam
push
dec
idivb
scas
mov
xchg
xchg
imul
repnz
ja
inc
lret
mov
pusha
fisttpl
orb
mov
arpl
jle
into
sbb
arpl
or
jp
and
das
mov
call
and
mov
adc
testl
jmp
lods
mov
gs
add
mov
jle
pop
sbbl
arpl
xchg
movsl
das
xchg
enter
dec
jbe
in
jns
adc
dec
jno
and
cmp
push
cmp
sbb
mov
jo
repz
cmp
shl
ja
scas
ja
nop
inc
cmp
mov
and
inc
push
xchg
dec
loope
pusha
psubusb
sub
shll
or
cmpsb
js
xchg
sar
or
add
scas
cmp
xchg
cmpl
out
aad
sbb
sub
test
leave
lret
lcall
test
lret
jo
cmc
push
fiaddl
out
js
xchg
jbe
mov
and
test
stos
add
popa
shl
jns
push
cmp
xchg
or
mov
enter
dec
mov
add
out
popa
lcall
xchg
xchg
loop
mov
jb
mov
jp
incl
jg
and
and
jg
push
jns
xchg
jb
inc
movsb
test
dec
adc
sbb
stos
lret
xor
mul
loope
ret
xchg
sar
lods
imul
inc
ja
mov
push
dec
jno
int3
inc
mov
ret
scas
sub
dec
das
lea
jnp
icebp
shll
insl
jo
sbb
inc
leave
xchg
lods
fxch
sbb
mov
lret
xchg
sub
push
cmpsb
popa
shll
pop
movsb
popa
xor
test
cmc
xor
cwtl
repz
jo
sbb
sbb
pop
xchg
in
inc
and
and
jg
and
test
vcvttps2qq
aad
fidivl
and
adc
test
or
notb
outsl
xorb
mov
hlt
and
dec
push
xor
add
xor
cmc
mov
adc
andl
dec
int3
pop
mov
pop
aaa
inc
pop
dec
cmc
push
pop
in
or
rcrl
in
jle
and
out
loope
shrl
fcmovbe
ja
call
inc
mov
clc
call
loop
outsb
movsl
lahf
cmp
mov
and
mov
aad
xor
dec
inc
loop
cltd
or
sub
push
stos
js
pop
fdiv
sbb
imul
ret
mov
inc
mov
fs
incl
dec
inc
fadd
add
ljmp
xor
jb
and
ret
ret
fcmovu
add
mov
lahf
movsl
push
lods
adc
pop
sbb
in
jne
daa
pop
jp
cmc
fimuls
jns
std
movsb
sbb
dec
xor
test
or
loop
shrb
addr16
dec
xlat
in
mov
sbb
les
mov
mov
cmp
mov
stc
xlat
xor
cmpsb
lcall
xorb
or
je
add
mov
xchg
mov
inc
push
inc
add
in
adc
jb
scas
stc
xlat
jge
out
adc
fwait
stos
jg
repnz
cmp
icebp
repz
aam
push
mov
cwtl
ja
sbb
and
push
xchg
pusha
arpl
inc
pop
imul
int3
pop
cltd
test
mov
sub
add
dec
enter
push
decl
add
push
mov
fstl
and
clc
movsb
fwait
xor
ds
push
negl
cmp
fdivs
cmpsl
cmpsb
add
ds
rolb
push
jl
outsb
leave
bound
sti
add
popf
sub
jmp
mov
mov
sbb
hlt
mov
xchg
and
fildll
stos
es
mov
icebp
lea
jmp
ljmp
sub
dec
iret
fists
sbb
popa
inc
mov
aad
ja
sub
xchg
jb
sbb
inc
pop
mov
sbb
mov
push
lret
xchg
rep
clc
lods
or
mov
inc
shll
call
scas
or
cmpsb
sbb
les
xchg
push
repz
lret
push
and
inc
mov
xor
adc
mov
test
adc
arpl
jne
mov
inc
scas
stos
je
sub
lods
jns
adc
xchg
data16
dec
xor
pop
ss
dec
xor
icebp
out
fnstsw
xor
ret
je
out
mov
or
cltd
lods
jp
push
cmp
call
xchg
fists
push
xchg
aam
adcb
stos
inc
test
sbb
push
inc
jecxz
fs
sub
leave
push
and
orl
test
lret
mov
clc
outsb
lods
ret
rcll
xor
pushf
mov
mov
shl
outsl
fsts
aas
inc
cmp
mov
mov
arpl
xchg
xchg
jnp
insl
in
lods
add
and
enter
cltd
xor
call
sarb
xor
push
out
in
jbe
dec
xchg
inc
mov
negl
pop
mov
adc
ja
mov
mov
push
and
lea
cld
mov
fidivs
add
add
xor
xchg
jmp
and
inc
and
sbb
jl
bound
scas
flds
pop
inc
fmuls
mov
stos
push
jns
outsl
xor
aam
push
and
xor
cld
sbb
adc
cli
rcll
and
fptan
jae
pushl
sub
ds
mov
stc
shlb
lahf
add
dec
pop
or
jge
in
scas
jae
test
jne
cmp
subl
sub
inc
jmp
sbb
pop
mov
and
sub
adc
stc
sahf
push
push
xor
fiaddl
sti
cmc
and
cmp
ror
push
mov
stos
shlb
jbe
jmp
cli
push
out
jp
out
inc
cmova
jae
lahf
inc
fstps
adc
xchg
mov
mov
fdivrs
mov
fiadds
push
add
dec
cld
add
push
xchg
cmp
inc
out
sbb
movsl
push
repz
and
sbb
out
mov
push
jecxz
fstpt
push
flds
pop
scas
sbb
repz
pop
call
lahf
adc
test
ficompl
movsl
idiv
push
mov
mov
call
loopne
add
test
push
lahf
mov
shlb
or
xor
repnz
adc
jg
xchg
dec
sti
lahf
divb
mov
andl
cmpsb
sbb
or
sub
cmp
inc
out
fisubrl
xlat
jge
sub
lahf
jb
jmp
sbb
push
das
lret
mov
sahf
outsl
icebp
jle
and
cli
sbb
test
mov
sub
pop
push
outsb
imul
inc
out
cmp
sub
ror
inc
jl
ret
jno
movsb
jo
cmpsl
sub
mov
dec
cli
jecxz
fsubr
cmp
mov
ror
or
leave
fnstsw
fcompl
lods
push
lret
dec
pop
sbb
xorb
cmpsb
lods
lods
stc
ds
add
lahf
and
push
mov
aam
aas
or
ret
movsb
dec
iret
pop
stos
addb
cmpsb
mov
or
subb
cmpsl
pop
shrb
sub
add
adc
or
xadd
mov
xchg
mov
pop
call
sbb
mov
add
xchg
cmp
dec
into
daa
and
mov
imul
cmpsl
pop
dec
aad
pop
add
add
aad
icebp
rclb
pushf
cmp
in
push
pop
movsl
loopne
mov
push
cs
ret
mov
xchg
bound
je
mov
cmp
pop
dec
adc
arpl
push
cmp
inc
or
add
or
adc
mov
xlat
xchg
jae
and
push
idiv
jne
ret
jge
cltd
mov
push
pop
scas
or
xchg
dec
in
ljmp
adcb
out
jecxz
xchg
std
iret
jbe,pn
or
adc
cli
test
push
xor
fldenv
mov
xchg
fwait
push
jge
inc
fists
sub
jae
dec
jl,pt
sbb
mov
stos
sti
movsb
pop
xor
adc
pop
jl
inc
mov
xchg
or
enter
je
inc
insl
aaa
in
xor
push
jp
xor
hlt
popa
sub
fstl
repz
stos
int3
xor
movsl
movsl
loop
pop
repz
mov
stc
xchg
mov
fidivrs
push
loopne
mov
sub
je
pop
rcr
mov
mov
jae
not
pop
inc
mov
imul
dec
adc
push
add
push
inc
fidivl
fldt
sub
pop
lcall
fadds
test
daa
cmpsb
mov
add
and
rcll
popf
sbb
mov
add
push
movsl
ret
outsl
pop
mov
into
int
adc
in
mov
inc
jbe
mov
std
testb
add
jns
xlat
mov
inc
mov
lret
stos
push
outsb
lret
or
mov
add
lcall
popa
sub
in
cltd
xor
adc
push
add
sbb
add
add
mov
lea
iret
lods
outsl
in
pusha
sub
out
fisubrl
negb
shll
inc
mov
mov
stc
inc
ljmp
add
inc
out
fistpl
sub
ret
in
dec
mov
lock
outsl
push
mov
jmp
adc
cwtl
and
jbe
outsl
repnz
cltd
test
xchg
rcr
cld
mov
aaa
add
sbb
inc
in
pop
jg
fcoml
jns
push
ficomps
dec
xor
arpl
shrl
mov
mov
adc
cmpsb
mov
lret
out
iret
xchg
and
out
lods
clc
dec
leave
adc
pusha
jecxz
out
lcall
xor
mov
mov
cmpsb
sub
mov
or
and
xchg
mov
inc
mov
ja
push
sbb
in
cmpsl
or
popa
push
pop
int
test
scas
xchg
fcmove
jnp
leave
cld
xchg
inc
fstp
ljmp
sub
or
or
xchg
rcrb
psubsb
lret
sbb
sbb
and
popl
inc
mov
jg
les
das
aad
in
ljmp
add
push
mov
leave
inc
test
sbbl
dec
pop
fucomi
mov
mov
into
in
jp
daa
arpl
dec
cmp
negl
shlb
movsb
push
jnp
adc
xor
mov
or
stc
jns
flds
inc
loop
xor
sub
dec
push
addb
and
sbb
push
inc
cmp
xor
imul
ret
pop
subl
stc
es
sub
aas
jne
sub
sub
add
push
inc
aas
clc
es
ljmp
inc
push
adc
lgs
fsubl
popa
and
jb
in
sub
in
fs
adc
lods
sahf
test
push
add
inc
fs
sub
cmp
xor
inc
mov
sbb
imul
pushf
cmpsl
iret
shlb
jmp
sar
outsl
cmpsl
lds
fwait
int
icebp
pop
in
xlat
sub
mov
and
pop
jb
xlat
daa
negb
scas
and
pop
ja
cmpsb
and
dec
sub
and
push
xchg
dec
rol
cmp
jbe
inc
mov
dec
cmp
vrsqrtps
inc
int3
xchg
fwait
cwtl
pop
in
pushf
inc
arpl
and
add
sbb
pop
xchg
xchg
nop
jno
or
popa
inc
fsub
std
gs
es
adc
inc
test
out
icebp
jl
mov
test
loope
or
xor
les
and
dec
bound
testb
pop
dec
arpl
arpl
mov
mov
inc
or
jns
jae
jp
xchg
repnz
dec
jae
and
mov
xor
lods
lret
inc
jp
xor
pop
cltd
mov
imul
jne
xor
add
adc
out
mov
mov
das
orb
sub
movsl
mov
ret
cmp
xor
mov
push
shll
xor
mov
in
cmp
daa
hlt
in
pop
fcmovne
and
push
push
xchg
mov
dec
adc
add
int
cmpsb
in
xchg
xor
das
lods
adc
out
ja
aad
jns
in
inc
pop
sub
and
inc
stos
test
enter
dec
xchg
or
rcll
lret
int3
inc
and
imul
or
pop
and
movsb
fldcw
mov
xor
roll
sbb
or
iret
iret
push
jp
pop
jo
in
hlt
cltd
pop
mov
insl
cs
pusha
sub
int
mov
mov
je
jge
jle
pop
jo
jg
or
xchg
pop
pop
lock
jno
xchg
jl
lret
or
jecxz
js
pop
push
pop
push
inc
jg
mov
xor
ds
notb
jmp
and
sarb
pop
into
sbb
les
std
adc
inc
arpl
fsubrs
jge
cmp
je
lea
iret
movsl
jmp
pop
mov
mov
int3
ljmp
or
int
sti
pop
dec
lea
insl
xor
insl
into
ja
pop
adc
out
fisubs
loop
add
fsubrl
out
push
mov
pop
mov
cs
stos
xlat
loop
pop
pop
loope
lret
out
jnp
inc
movsb
adc
and
adc
cmp
sti
imul
cld
jb
mov
jbe
push
mov
sahf
jns
dec
in
insb
add
rcrl
icebp
data16
push
cmp
test
shll
jns
test
mov
mov
pop
fnstcw
cmp
ljmp
add
xchg
mov
imul
sbb
ficomps
addr16
fnstcw
dec
and
fsubs
xor
jno
xor
dec
aaa
inc
xorl
cmp
adc
dec
cltd
shlb
in
add
aaa
push
loopne
sub
pop
xor
sub
lret
xchg
mov
xor
shll
rcrl
dec
xor
int3
xor
hlt
repz
inc
xchg
fldenv
insb
dec
mov
sbbl
xchg
hlt
cwtl
lea
or
push
repnz
dec
int
mov
or
movb
movsl
sub
xorl
sbb
out
cmp
lds
adc
gs
xor
or
or
gs
adc
jae
outsl
int
jb
call
jnp
cmpl
push
sbb
fwait
sub
and
mov
adc
xadd
lret
push
xchg
dec
xchg
out
clc
xchg
in
loope
dec
sbb
imul
ja
pushf
or
and
lods
test
or
mov
aas
inc
xchg
das
in
push
and
fwait
dec
lcall
into
movsb
dec
dec
xor
jnp
in
sarb
adc
clc
cmpb
in
into
pop
cwtl
out
icebp
fs
add
sbb
aad
push
xchg
dec
inc
add
or
dec
xor
addl
out
fsubrs
xchg
xchg
cmp
fildl
jecxz
cmp
cmp
aaa
xorb
mov
pop
xor
sub
data16
pop
std
int3
mov
je
test
push
jmp
mov
fdivrl
dec
pop
mov
pop
pop
add
mov
ret
mov
push
sub
imul
sub
outsb
lock
mov
xchg
xor
iret
mov
and
cli
loopne
and
enter
jb
adc
add
or
popf
scas
inc
xchg
test
xchg
xchg
lods
shll
lods
fiaddl
sbb
pop
mov
lahf
pop
jge
hlt
outsb
loopne
fwait
adc
jl,pt
inc
in
fs
push
ja
inc
xor
or
inc
sarl
and
cmc
in
leave
sbb
lahf
gs
iret
int
xchg
das
pop
add
div
adc
mov
imul
or
mov
push
in
subl
sub
subl
test
insl
stc
test
add
icebp
leave
outsb
dec
xchg
jbe
sbb
loope
or
lods
mov
sbb
aas
cmpsl
addr16
test
xchg
cwtl
lods
adc
xchg
and
jg
jp
push
cld
mov
ss
lcall
push
mov
fildll
mov
cld
popf
lods
icebp
jecxz
leave
and
jno
out
int
push
ja
inc
insl
arpl
xor
daa
mov
into
ljmp
mov
cmp
pushf
mov
push
inc
mov
xor
push
mov
data16
iret
ss
incl
push
dec
add
dec
clc
xchg
int3
mov
mov
dec
arpl
cmp
dec
aas
repnz
mov
cli
mov
pop
mov
iret
jae
xchg
and
les
in
mov
imul
ds
filds
int3
test
pop
mov
dec
add
not
stos
sbb
push
bound
mov
cmp
leave
mov
push
lahf
mov
rcrb
mov
mov
das
iret
fsubrp
test
and
outsb
adc
cmovns
imulb
std
ljmp
sub
push
shl
loopne
cmpb
in
push
add
adc
push
pusha
jp
mov
adc
and
outsb
lahf
dec
das
andb
push
pop
rclb
stos
outsl
out
pop
jle
int
dec
pop
cltd
cmpsl
jg
mov
mov
mov
es
cmp
cmp
xchg
imull
mov
cmc
sbb
push
mov
movsl
aam
fstpt
iret
jecxz
icebp
cltd
push
sub
into
gs
add
mov
adc
xor
sbb
add
loop
mov
sub
push
push
lret
mov
pushf
in
mov
xchg
mov
cmp
stc
ja
loopne
daa
aas
orl
push
jge
dec
jp
push
add
out
jae
rcrb
jae
fsubs
imul
lods
xlat
nop
lods
or
out
adc
jns
adc
sbb
clc
sbb
mov
ficoml
mov
inc
dec
mov
stos
testl
adc
add
out
lret
mov
scas
orl
cmpsb
shll
adc
mov
sub
cmp
mov
in
dec
in
jno
lods
cmp
mulb
insb
sub
pop
or
repnz
addr16
xlat
ret
arpl
ja
xchg
mov
add
jbe
cltd
mov
dec
aaa
bound
ds
test
cli
pusha
aas
add
stos
dec
inc
daa
scas
jb
jno
nop
inc
test
sbb
lcall
lahf
mov
push
clc
add
mov
dec
shll
movsb
repnz
pushf
adc
push
xchg
lods
sub
loopne
lret
mov
test
adc
xchg
ficompl
inc
mov
js
add
inc
repz
jo
dec
sbb
add
repnz
sbb
jl
mov
out
mov
jge
imul
inc
in
mov
jnp
lret
inc
movsb
sbb
repnz
and
out
cltd
imul
ja
adc
sub
in
fadds
cltd
roll
mov
push
jnp
lret
jge
ret
xor
mov
jecxz
xor
fistps
out
add
dec
jg
xor
adc
jbe
and
mov
xor
push
fs
or
das
les
xlat
sbb
es
roll
sub
stos
dec
mov
adc
dec
sbb
ja
aad
xchg
xchg
repz
pop
jo
mov
adc
repz
cltd
pop
roll
dec
lahf
jno
jmp
fiaddl
rorb
push
div
push
push
or
imul
xchg
jns
xor
es
psrld
arpl
and
test
mov
lock
aas
lret
rolb
rorb
enter
and
or
pop
jp
iret
loope
repz
sub
sbb
cmp
or
sti
push
mov
xchg
aad
roll
mov
jmp
or
jne
jge
adc
leave
xchg
mov
das
clc
mov
arpl
sub
shl
aaa
or
inc
push
imul
xchg
lret
into
ret
push
xor
xchg
mov
jp
push
cmp
inc
sbb
inc
push
mov
add
mov
or
or
cmp
test
jb
sub
into
adc
outsb
test
jb
imulb
enter
mov
pop
ret
mov
notb
loop
jae
lcall
inc
mov
jmp
jb
hlt
mov
cld
cmp
cmp
cmc
fwait
lods
mov
and
and
subb
cmpsl
fiadds
push
pop
out
and
push
loope
add
fcmovnbe
mov
add
and
or
enter
xchg
push
orb
pop
nop
stos
inc
pop
inc
cltd
nop
daa
xor
std
mov
pop
loop
dec
rclb
xchg
aas
into
xorl
jg
fucom
insl
icebp
sub
lret
test
inc
add
sub
pop
loop
xor
push
add
popf
xor
lret
xor
nop
mov
pmulhuw
cmpsl
cmpsl
lahf
daa
ja
mov
addr16
mov
shlb
cmpsb
aas
sub
push
out
sbb
push
xor
push
cmpsl
jg
and
loope
push
mov
fs
pop
int3
xor
test
mov
int3
pusha
test
out
push
and
xchg
xor
jle
outsl
pop
jne
lock
ret
andb
xor
cmpsb
sub
ret
bound
in
test
mov
mov
jmp
mov
insl
xchg
sub
aas
in
xor
loopne
icebp
pop
jp
inc
inc
dec
std
call
jl
push
adc
dec
in
mov
pushf
cmp
stos
pop
mov
mov
outsl
sub
pushf
xchg
fwait
add
popa
aas
jg
aaa
pop
push
outsl
mov
mov
pushf
cwtl
pushf
jno
mov
sbb
or
adc
sub
subb
mov
xlat
xor
rcll
clc
jbe
dec
fucomip
ret
popf
aaa
mov
and
pop
jle
rcrb
push
outsb
shl
hlt
sbb
mov
in
icebp
cmpsb
das
or
aam
push
or
lock
adcb
adc
dec
movsb
ja
and
mov
cmp
pop
adc
fisttpll
arpl
in
mov
xchg
insl
cs
cmp
clc
pushf
stc
aaa
lock
mov
mov
ret
repnz
xlat
int
jl
push
fisubl
and
fstl
xchg
andl
aam
mov
jo
test
test
mov
xchg
jne
jns
test
inc
into
sbb
jae
insl
jae
and
jp
xchg
or
bnd
adc
or
movsb
mov
push
xchg
mov
ds
pop
xchg
movb
ja
dec
jl
iret
cmp
cmc
ss
and
ja
int
aad
hlt
cmpb
and
bswap
and
mov
cmp
rcrb
inc
sub
lods
in
and
out
repz
jo
mov
loope
rorb
cmpsl
sbb
dec
xchg
mov
test
das
insl
xchg
xor
adc
adc
xchg
sbb
or
imul
shr
mov
ja
dec
lds
icebp
dec
mov
testl
into
mov
mov
scas
sub
pop
dec
call
xchg
adc
mov
adcl
cmp
movups
iret
dec
jne
cli
mov
mov
mov
pop
sbbb
in
sti
in
out
stos
in
xchg
lahf
and
daa
xor
mov
jo
data16
aam
ret
pop
xchg
inc
adc
mov
outsb
jle
adc
pop
xor
or
jl
add
xchg
and
xor
in
cmp
push
sahf
sub
adc
adc
pop
shlb
lds
push
ljmp
lret
stos
xchg
cmp
loop
mov
icebp
push
xchg
pcmpgtb
and
pminsw
and
rol
and
cli
test
cmpsl
jno
popf
mov
mov
clc
das
out
inc
push
sub
sti
cmp
ljmp
add
ljmp
jbe
adc
pop
int
in
in
and
xchg
lods
pop
xchg
mov
cli
idivb
rclb
cli
in
insb
sti
in
pop
test
data16
jno
sbb
add
inc
out
add
push
pop
ss
insb
mov
bound
bnd
das
movsl
mov
inc
add
push
cmpsb
imul
push
sbb
addr16
loopne
mov
push
mov
testl
pop
out
pushf
add
faddl
mov
pop
test
lret
enter
push
in
test
dec
push
jb
shl
enter
cwtl
popa
jae
jbe
fldcw
ret
mov
neg
jo
pushf
repz
pop
add
inc
jp
sbb
mov
stc
mov
ret
repnz
xor
ret
jmp
fidivs
inc
lahf
fsts
jnp
cmpb
ret
mov
xchg
movsl
push
mov
jae
xchg
pop
aad
mov
cmp
std
dec
add
jno
test
imul
cmpl
dec
psrlq
jnp
int3
repz
dec
scas
cmp
mov
lock
sub
daa
js
mov
fwait
cmpsb
jno
jg
int3
ljmp
loope
pop
and
movsl
pop
sbb
mov
or
das
or
and
pop
rolb
or
xor
lcall
and
cld
cltd
mov
sbb
jmp
push
inc
mov
test
and
into
loop
dec
adc
jns
pop
fdivr
std
cs
adc
or
test
jae
adcl
push
lret
xchg
pop
test
lock
mov
jmp
lret
mov
xlat
out
mov
into
push
pushf
mov
imul
repz
bound
sbb
int
lods
mov
fnsave
sub
addl
sahf
mov
mov
mov
add
rcl
lcall
loope
adc
outsl
sbb
out
lea
repz
and
sbb
mov
dec
cwtl
adc
inc
daa
cwtl
popf
jbe
les
cmpsl
mov
jns
int
out
mov
cli
or
aaa
jg
push
mov
ret
or
xchg
mov
push
jge
add
movsl
push
add
ja
lret
nop
test
arpl
lock
mov
fldcw
notb
idivl
ret
sub
and
lods
mov
in
mov
cwtl
xchg
rcll
stc
mov
fidivrl
bound
mov
nop
jae
mov
or
ftst
jbe
push
and
mov
pop
test
test
ret
or
test
add
jl
pushfw
fdivp
push
aas
scas
data16
rolb
fisubl
or
inc
lret
icebp
sub
nop
jbe
pusha
fldl
and
sbb
add
fisubrs
or
insl
enter
jg
repz
mov
sub
cltd
mov
mov
cmp
repnz
insl
or
jle
xor
xchg
xchg
in
rolb
or
mov
mov
jb
adc
fsubrl
xchg
jl
pushf
nop
adc
push
mov
sub
add
jg
mov
pusha
lock
in
shrl
push
add
mov
jg
loop
jg
insb
xchg
aas
filds
sub
mov
cld
push
push
mov
out
dec
call
mov
xor
ror
mov
js
xor
ds
or
lret
push
sbb
push
sbb
rcll
loop
cmpsb
cmp
mov
ja
inc
test
shll
pop
pop
nop
ljmp
mov
mov
add
test
int3
sub
je
sub
icebp
movsl
sub
cmc
mov
lock
imulb
mov
xor
stos
repz
les
push
inc
mov
stos
pop
jl
flds
sub
pop
pop
loope
inc
sbb
jg
or
insb
addr16
pusha
dec
xchg
mov
cmp
leave
dec
push
xlat
or
mov
or
rcr
mov
daa
mov
dec
xchg
insl
arpl
jl
inc
mov
push
fistl
and
cmp
add
xchg
mov
sbb
loopne
sbb
jne
das
xlat
mov
dec
imulb
or
jnp
out
pop
lds
dec
sub
stc
lret
mov
xchg
inc
clc
sub
sbb
mov
and
lret
out
js
cmp
mov
or
into
jmp
dec
out
fstpl
pushf
add
inc
rolb
adc
cmpsl
cltd
mov
addr16
pop
pop
testb
push
mov
clc
clc
mov
xchg
gs
inc
jns
xchg
ss
xchg
clc
push
jbe
cmp
test
clc
psubw
fwait
pop
push
mov
sub
stos
add
pushf
outsb
imulb
imul
mov
mov
cmp
iret
and
push
or
fistl
loop
popf
call
mov
jl
mov
repz
inc
fildl
or
cmp
push
jae
nop
idivb
push
in
jp
lea
in
arpl
push
pop
xchg
das
dec
fstps
push
test
push
xorl
sahf
add
inc
mov
adc
jge
jae
decb
mov
add
jg
cmp
inc
fiaddl
lcall
int3
dec
cmpsb
leave
lret
dec
xor
push
mov
pop
ret
aam
in
lea
aas
cld
pop
movsb
mov
cmp
inc
xchg
out
inc
sub
adc
stos
xchg
cmp
adc
dec
push
xor
jb
pop
movsb
jp
pop
cmp
mov
mov
jl
add
xor
or
sub
jg
fnstenv
pop
cmp
xor
push
pushf
lea
add
inc
mov
cwtl
push
jae
icebp
and
sbb
rol
imul
xchg
adc
sub
inc
rorb
pushf
inc
fsubl
mov
std
leave
mov
xchg
shl
pop
xchg
out
jno
arpl
ret
je
iret
sbb
popf
in
daa
push
push
mov
dec
sbb
xor
jg
jge
lea
dec
push
fsub
add
jae
test
add
popa
xchg
pusha
and
pop
test
mov
je
cmp
fwait
mov
xor
sub
inc
xchg
loope
mov
and
stc
nop
daa
sbb
cmpsb
inc
jno
std
int
lock
inc
and
dec
in
mov
fstpt
test
jnp
jne
jmp
inc
adc
cmpsb
sub
cwtl
adc
jmp
in
adc
cmp
fwait
pop
popa
cmp
xor
mov
inc
orb
sub
mov
lock
stos
mov
xchg
xchg
sahf
cmp
cmp
mov
fdivl
adc
movsb
mov
insb
dec
aaa
lret
outsb
icebp
lock
mov
sbb
mov
stos
xor
mov
mov
pop
sub
cli
push
aaa
xor
test
notl
outsl
nop
jmp
and
lret
adc
adc
pop
dec
enter
lret
movsl
cltd
cld
rol
or
fisubrs
xchg
sbb
aam
fistl
cmc
jae
and
push
dec
mov
mov
push
movb
sub
ds
mov
jbe
or
mov
fstpl
xor
pop
mov
imul
int3
adc
cmp
rcll
mov
stos
xor
xlat
loope
mov
jne
push
rorb
mov
fadds
sub
mov
cmp
sbb
mov
lock
or
repnz
sbb
lods
dec
call
inc
lods
mov
repnz
fadds
gs
cmpsb
nop
xchg
das
shr
leave
jge
pop
loop
adc
xorl
gs
adc
pop
rcll
pop
das
push
mov
adc
aas
imul
sbb
cmp
add
movsb
loopne
mov
pop
shll
cmpsb
cld
push
sub
fsubs
or
cmp
das
hlt
mov
rclb
or
rorl
mov
adc
jb
lcallw
and
adc
out
addr16
inc
fwait
push
xchg
mov
push
dec
jmp
mov
int3
cmpsb
jmp
sbb
subb
in
add
pop
xchg
dec
mov
mov
or
mov
pop
stos
sub
in
bswap
mov
sbb
cmp
sti
insb
push
xorl
mov
fiadds
loopne
inc
cs
push
cwtl
or
rolb
mov
sarb
call
cmc
sahf
dec
mov
es
lea
je
jne
out
adc
xchg
pop
leave
xor
push
pop
imul
cmpsb
push
adcb
scas
push
push
sub
jae
rclb
ds
fwait
and
inc
movsb
fisttpll
and
or
mov
and
int3
inc
jmp
adc
pop
mov
xlat
or
in
sahf
in
add
xor
pop
dec
and
mov
mov
jp
xchg
sub
push
dec
xor
into
inc
out
jne
cmpsl
sbb
roll
sub
inc
xor
fdivrs
ret
lock
adc
xor
or
or
mov
mov
or
cmp
add
add
pop
pop
les
lea
cmp
shll
pushf
cmp
pusha
cs
fwait
dec
fldenv
adc
ret
jl
addb
jge
jb
pushl
popa
arpl
ret
mov
fildl
std
test
mov
and
repnz
xchg
bound
push
inc
sar
xlat
ss
loopne
inc
adc
mov
dec
or
in
pop
imul
jbe
pop
or
mov
in
mov
out
rcrb
xchg
jne
ja
or
jb
arpl
icebp
repz
into
adc
out
pop
cwtl
cli
pop
add
and
cli
xchg
mov
es
push
iret
pop
imul
dec
pop
in
or
aaa
aam
push
stos
in
loop
flds
insb
mov
push
xchg
sbb
mov
stos
dec
arpl
popf
xchg
cmpsb
sbb
push
and
test
insb
adc
dec
popa
inc
cld
sub
repz
lcall
lret
outsb
rcrb
xor
inc
mov
pop
out
mov
dec
xor
dec
xlat
jmp
aad
daa
mov
mov
and
mov
mov
daa
and
cmp
jnp
loopne
jge
mov
hlt
mov
test
mov
push
cltd
ret
push
and
outsb
sub
pop
test
test
ret
inc
mov
pop
push
out
clc
sti
mov
mov
sbb
xor
icebp
mov
aas
pop
fsubrs
push
mov
jecxz
mov
adc
dec
xchg
cmp
sahf
xor
clc
in
adc
shlb
sub
scas
pushl
inc
cmp
xchg
xchg
shl
fldl
mov
or
jnp
mov
push
cmc
pop
int
movl
xchg
movsb
mov
jnp
das
inc
jo
sub
cmp
jno
jb
adc
shl
fstps
adc
mov
loopne
xchg
inc
xchg
adc
inc
jle
sahf
xor
shl
inc
ljmp
and
insl
pop
push
push
cwtl
fsubs
sarl
fiadds
ss
dec
aam
xchg
je
ret
sbb
ds
dec
mov
cmp
jp
xchg
adc
lret
movsb
popl
iret
bound
imulb
sbb
mov
jo
outsl
jle
push
js
mov
sub
mov
stos
push
xchg
jp
add
inc
cmp
dec
roll
or
fcomps
bound
push
jnp
or
insl
aad
rclb
lock
xor
rcrb
pop
std
aad
mov
push
icebp
push
mov
lret
dec
lods
xchg
aam
dec
data16
addr16
fsts
dec
ljmp
movsb
dec
sub
lea
jo
adc
jle
xchg
push
pop
sbb
test
and
out
push
ret
lahf
add
dec
and
add
roll
pusha
lahf
pusha
pop
xchg
inc
leave
or
lcall
or
xor
dec
data16
out
scas
scas
fsubl
faddp
enter
lret
push
pop
dec
loope
and
imul
xchg
je
push
in
and
push
xor
into
mov
clc
outsl
sub
inc
lret
leave
pop
jle
dec
ss
mov
into
cmp
fistps
cmp
imul
xchg
xor
inc
out
lods
insl
push
sbb
cs
jl
in
test
aad
jp
xor
imul
sbb
popa
shll
mov
add
mov
sbb
sub
ljmp
and
cmp
leave
sbb
cld
lahf
push
in
fistl
frstor
and
mov
shll
pop
jmp
lods
rcrb
lret
add
xchg
jmp
aaa
shlb
aam
sbb
jg
or
fnsave
repz
insb
mov
pop
mov
sub
pop
jmp
and
inc
pop
je
pop
adc
mov
ja
popa
pusha
inc
mov
add
outsb
int3
jbe
push
cli
add
sbb
pop
push
filds
lock
xor
lock
jl
inc
and
repnz
addl
push
xchg
frstor
mov
inc
sub
aam
xor
mov
mov
mov
scas
pop
js
pop
pop
mov
test
sbbb
mov
adc
fs
pop
sti
cli
pusha
xchg
xlat
xorl
js
mov
lcall
dec
nop
test
add
imul
inc
out
fucomip
inc
out
push
cmp
pop
test
outsb
cmc
push
mov
sub
dec
sub
jge
jp
out
inc
sti
push
shrb
mov
rcrl
das
push
and
push
pop
or
adc
sbb
pop
stc
lea
popa
cmpl
sti
out
clc
loopne
stc
adcb
out
pop
aaa
pop
das
mov
dec
lret
jmp
inc
lcall
out
jbe
aad
addr16
add
sbb
je
mov
sub
mov
cwtl
push
mov
pop
xchg
imulb
mov
dec
jmp
push
adc
std
cmp
negb
xchg
jbe
test
add
adc
icebp
and
mov
xchg
in
repz
mov
pop
xchg
scas
je
inc
iret
repnz
outsb
sub
mov
addps
or
sub
fsubrp
pop
hlt
and
out
rolb
cmp
lret
fwait
inc
jge
or
add
cmp
mov
pop
stos
add
xor
cli
rcr
adc
dec
cwtl
loopne
xchg
mov
mov
sbb
call
leave
imul
es
pop
sub
cmpsl
pop
mov
dec
push
pop
inc
stos
ja
xchg
mov
push
into
aam
cwtl
sub
movsb
push
call
std
loopne
cli
mov
cmpsl
adc
xor
xor
lds
mov
push
xorl
test
enter
mov
or
jb
push
dec
hlt
dec
mov
dec
cwtl
cmp
imul
les
pop
mov
push
stc
jp
inc
or
pop
jb
xchg
pop
xor
push
mov
jnp
rol
adc
fnsave
andb
adc
daa
xorb
xor
pop
pop
add
and
sub
popf
scas
xchg
jb
xor
cmovg
pushf
sbb
scas
movsb
daa
mov
jge
mov
fbld
les
fsub
popa
sarb
or
sub
sbb
cwtl
push
mov
mov
out
ss
mov
cmp
ljmp
mov
jae
or
jl
iret
sbb
lret
aas
inc
dec
mov
lret
lds
push
out
push
or
stos
mov
mov
mov
pop
pop
jmp
hlt
out
aaa
sbb
dec
bound
pop
lcall
xor
jmp
shlb
mov
aaa
sbb
cmp
bound
xor
testl
nop
mov
roll
fistps
xchg
push
call
data16
aad
ljmp
clc
xchg
mov
xchg
test
cmpsb
dec
cmp
fdivrs
mov
and
in
dec
sbbl
incl
inc
jp
add
iret
sub
xchg
pop
pusha
bound
xchg
xor
or
dec
pop
adc
ljmp
push
jle
in
jecxz
push
xchg
add
jl
inc
mov
jo
push
jl
rclb
lahf
sbb
inc
xor
push
add
cmc
sub
push
ja
or
lret
sbb
dec
mov
cmp
mov
fwait
hlt
cltd
push
das
dec
or
cmpsb
cmpsb
sub
jg
cmpl
mov
sub
inc
inc
adc
sbb
push
insl
lea
sbb
clc
nop
add
ror
repz
bt
into
sahf
fs
pop
enter
add
repz
stc
lea
dec
aam
xchg
cmp
pcmpeqb
jno
adc
ds
push
mov
pusha
in
mov
dec
test
dec
mov
or
shl
jae
rcl
cli
cs
or
push
inc
sbb
imul
psrld
push
scas
mov
scas
cmp
push
cmp
fs
push
ficoml
cmpsb
push
lds
sub
or
mov
cld
pop
pushf
out
cmc
jecxz
cmp
dec
imul
xchg
adc
mov
in
out
pop
xchg
sbb
pushf
pop
iret
and
scas
popf
loope
mov
cmpsl
fidivrs
in
icebp
mov
cmp
and
push
and
mov
add
jb
cmp
fs
cwtl
cmp
lds
pop
xchg
cmpsb
and
xchg
add
movsb
pop
mov
popf
mull
mov
cmp
sbb
or
jno
sbb
jns
pop
sub
cmp
pop
adc
jle
sbb
pushf
jne
cmp
dec
insl
jns
das
inc
test
leave
inc
outsb
xchg
pop
pop
repz
daa
and
lret
ljmp
dec
push
or
repz
aas
inc
cmp
mov
ds
xor
test
or
jg
push
jg
loopne
sbb
vpshlb
dec
xor
xchg
push
lds
rolb
lock
aam
push
pop
aam
rorb
add
fdivl
repnz
jl
rolb
pop
hlt
leave
movl
cld
mov
testb
notb
jae
jecxz
out
pop
inc
imull
and
es
xorl
inc
fs
movsl
xchg
in
outsl
aas
push
adc
push
loop
iret
inc
sahf
fistl
ret
push
cmc
cs
stc
adc
cmpsb
adc
addr16
jo
daa
push
repz
jb
dec
mov
out
rcrb
orl
sub
inc
xor
into
xchg
addl
out
and
scas
paddq
cmpsb
xor
mov
cltd
sbb
adc
insl
mov
sbb
int
int3
sbb
insb
dec
dec
aaa
pop
inc
and
mov
inc
push
arpl
pop
mov
shlb
aaa
int3
jge
push
sbb
xchg
mov
sub
gs
je
rcr
mov
sar
fs
nop
popf
lahf
lods
pushf
xchg
or
push
mov
jle
test
scas
aam
int3
int3
cmpsb
mov
or
scas
adc
std
out
loope
cmp
push
int
jecxz
enter
decb
xchg
and
cltd
cmp
inc
or
std
dec
cwtl
les
xor
ficoms
mov
mov
cltd
aam
lcall
jae
pop
adc
inc
faddl
xchg
xchg
push
xchg
ja
xlat
shlb
or
inc
jg
ret
lods
mul
dec
mov
call
sub
ret
push
mov
mov
mov
in
cmpsl
xor
cwtl
sbb
imul
cs
ljmp
pop
mov
test
lock
lea
pop
call
jne
out
repnz
or
xor
daa
int3
jl
mov
and
inc
sahf
jbe
cmp
xchg
push
stc
jecxz
xchg
jae
mov
mov
and
fistl
addl
inc
fwait
aam
cwtl
daa
jp
divb
lock
dec
push
outsl
movsl
or
xor
or
jle
js
cmp
out
pushf
cmp
xchg
inc
adcb
jo
dec
add
arpl
rorb
test
fs
mov
xorb
xchg
lahf
xor
movsb
lret
xchg
jle
jne
repnz
inc
inc
lods
mov
movsb
lret
bound
les
rcrl
cs
ret
jb
mov
or
mov
jnp
mov
in
cmp
dec
xor
sbbb
lods
jbe
ret
xorl
push
mov
mov
pop
test
cmp
popf
rorl
imul
push
xor
fwait
mov
lea
aad
sti
and
inc
adc
inc
out
icebp
pop
pop
mov
pop
stos
ja
aam
push
adcb
push
jg
push
jbe
stos
adc
mov
adc
dec
int3
or
mov
push
jne
sbb
call
std
cld
shr
outsb
jbe
mov
xchg
adc
in
xor
fwait
sahf
stc
xchg
icebp
dec
in
stc
cmp
cmp
pop
dec
jecxz
repz
es
lods
in
sbbb
push
adc
imul
mov
movsb
out
fldenv
mov
je
mov
loopne,pt
pop
push
add
xor
push
push
add
in
fwait
sub
mov
stc
cmp
mov
imul
aad
adc
pop
fisubl
push
daa
ficompl
xchg
ret
and
pop
test
jnp
cli
imul
push
dec
out
pop
mov
adc
out
mov
cli
mov
pop
dec
aad
pop
in
jbe
inc
mul
or
and
push
jp
addr16
inc
push
cwtl
pop
jle
or
xchg
and
push
xor
xor
sarb
add
out
imul
icebp
icebp
retw
or
cmp
inc
mov
lret
test
les
call
pop
push
mov
adc
insl
mov
push
cwtl
sbb
shrl
adc
mov
dec
lods
push
loopnew
arpl
jl
mov
rcr
int
daa
jle
psllw
shl
dec
int
or
mov
cmc
xchg
fimuls
popf
mov
addl
push
jge
cmc
ret
mov
cmp
jmp
cmp
pop
scas
mov
cmp
mov
popa
dec
imul
push
adc
or
and
dec
inc
push
lea
cmp
cmp
repz
adc
imul
push
mov
mov
add
icebp
jp
mov
jle
inc
data16
roll
pop
push
dec
pop
lret
shrb
or
pop
xchg
sbb
shrb
sar
and
iret
imul
add
je
dec
ret
xchg
xlat
std
imul
jbe
sub
xchg
jbe
in
popa
xchg
push
mov
push
jmp
or
mov
mov
subl
cmpsl
repnz
add
or
cmpsl
xlat
leave
add
inc
adc
int3
dec
xor
adc
sub
or
push
sbb
ret
cli
sub
or
mov
fs
lods
xor
lret
mov
cltd
into
popf
out
cli
andb
and
mov
out
arpl
mov
mov
dec
hlt
sub
stc
cmpsb
in
iret
sbb
rcrl
test
pop
and
or
inc
mov
push
cltd
shlb
in
pop
pop
mov
push
cmc
xor
or
cwtd
jmp
sbb
mov
jg
lret
notb
sbb
ja
cld
into
insl
sub
jno
add
fnsave
bound
lcall
mov
int
mov
scas
out
lcall
and
int
testl
lahf
arpl
ljmp
mov
push
dec
xchg
hlt
xor
icebp
inc
lea
xor
hlt
into
cmp
sarb
mov
mov
fmull
mov
jae
and
fidivs
jp
call
mov
lock
insl
mov
xchg
sub
mov
mov
pop
xor
sbb
arpl
fwait
pop
sahf
xor
sahf
xchg
mov
aaa
outsb
xchg
hlt
aas
in
sub
add
movsl
jmp
stos
xor
mov
lods
cmp
dec
and
call
pop
dec
enter
loope
sub
nop
sub
or
xchg
xchg
mov
stos
fsubrl
nop
dec
test
inc
mov
sbb
sbb
testb
mov
jne
hlt
mov
adcl
cld
xor
pop
mov
mov
inc
cld
pusha
call
test
rorb
adc
js
mov
test
jb
jb
and
pop
pop
jl
int3
mov
into
daa
or
lea
sub
test
rcrb
push
fcompl
cmp
add
fwait
sbb
mov
mov
sbbb
int3
test
dec
les
loope
sahf
insl
pop
adc
mov
xor
pop
loop
push
push
adc
and
rol
mov
xchg
rorb
lret
mov
mov
sub
cmpsl
cmp
xchg
pusha
adc
fs
mov
in
add
aas
add
add
std
mov
mov
push
sub
pop
pushf
jle
adc
fidivl
sub
fdiv
xor
mov
data16
sbb
mov
xor
pushf
lahf
lret
js
jmp
insb
leave
and
and
ja
or
mov
pop
pushf
addb
decl
test
repnz
in
and
push
rcrl
clc
inc
dec
cmc
ljmp
lcall
pushf
adc
das
or
mov
mov
pop
pop
ret
jb
pop
mov
xchg
lret
adc
add
sub
inc
and
jnp
icebp
jle
sub
pop
xor
negb
push
fsubrl
in
dec
push
xchg
adc
pop
push
enter
outsl
call
xor
xor
adc
inc
ffreep
and
aas
cmp
xchg
fdivl
add
push
mov
cli
call
loope
adc
outsb
sub
cwtl
fidivl
nop
jp
testl
in
xchg
add
pop
pop
and
mov
lock
adcb
push
push
into
cmp
push
mov
jp
mov
cmp
mov
mov
mov
sub
nop
adc
sbb
repz
and
push
mov
sbb
xchg
jb
aad
enter
aaa
fsts
mov
jns
mov
repz
decb
xor
pushf
mov
pop
adc
xchg
dec
sub
xor
outsl
loope
and
js
mov
rcrb
jo
and
jmp
test
stos
jp
arpl
pop
leave
lret
fidivrl
in
add
xchg
test
and
mov
mov
xchg
popf
pop
jge
pop
and
push
xorb
das
sbb
cld
push
sub
mov
out
adc
mov
sbb
inc
stos
into
out
fwait
scas
mov
aad
mov
ficoms
fs
stos
mov
rcrb
imul
cmp
sbb
scas
and
jne
sbb
add
ret
cmp
or
xor
sub
loope
xchg
lcall
in
test
mov
and
mov
dec
out
enter
jne
add
orb
in
xlat
pusha
xor
dec
outsb
mov
imul
cmp
nop
arpl
add
or
icebp
adc
aas
and
lret
sub
lahf
inc
les
pop
adc
pop
repnz
ds
pop
pushf
jae
push
mov
adc
push
pop
aam
clc
mov
mov
dec
out
adc
cmp
je
pop
pop
stos
cmp
ljmp
add
daa
out
add
outsb
lcall
pop
cmpsl
adc
push
and
push
pusha
pop
dec
adc
pop
mov
add
mov
shrl
pop
and
fwait
movb
cmp
nop
cmp
repnz
aaa
outsb
pop
cmp
pushw
test
dec
sub
lahf
sub
js
in
hlt
sub
mov
adc
cld
cmpsb
push
call
pop
jo
or
jg
jbe
or
dec
stos
xchg
scas
adc
xor
jbe
push
sub
add
push
jmp
mov
inc
adc
xchg
insb
sub
mov
sub
insl
dec
sub
jne
icebp
repz
push
ds
mov
xchg
jecxz
push
dec
mov
shr
inc
mov
pop
arpl
es
jb
xchg
ljmp
je
ds
xor
fisubrs
bound
icebp
fistpll
pushf
mov
xchg
es
jns
jae
ja
mov
pushf
jg
add
jae
inc
in
push
or
jae
sub
inc
xchg
push
xchg
jmp
lret
or
loopne
lahf
out
push
or
testl
leave
push
aad
lock
jnp
mov
addr16
cmpsb
leave
je
push
jno
sbb
leave
leave
adc
xchg
stos
xchg
cmp
mov
adc
mov
add
je
jp
add
in
mov
movsl
mov
loop
mov
rcll
popf
xlat
arpl
and
sub
mov
mov
sub
repz
sub
xchg
push
lock
push
outsl
fstp
cwtl
gs
pop
out
xorl
sbb
inc
sarb
add
sbb
xor
es
fs
int
ja
sub
xlat
mov
or
rcr
in
arpl
arpl
cmp
jmp
scas
jle
stos
aam
cmp
insb
aam
fistpll
mov
ljmp
loopne
lods
cmp
jno
out
mov
sub
jmp
lcall
pop
mov
loop
scas
hlt
lea
rcll
in
imulb
lcall
aad
jns
dec
push
testb
lahf
pop
and
push
outsb
cmp
push
outsb
int3
ds
inc
das
pop
pop
mov
scas
std
adc
sub
dec
mov
popa
or
inc
jge
pmulhw
xchg
aam
pop
mov
test
shlb
dec
call
add
sub
sbb
adc
ljmp
sub
push
decb
xor
xlat
pop
xchg
xchg
ja
test
test
adc
stc
mov
je
jo
lret
out
inc
xor
and
aad
rcrb
jecxz
shl
add
gs
sbb
mov
cs
push
or
pop
push
dec
pop
sub
call
test
cwtl
mov
jne
outsb
sub
jns
adc
out
add
or
negl
inc
jecxz
sub
sbbb
sub
fldt
jne
pusha
sub
test
insl
push
add
popf
xlat
jecxz
pop
cmp
mov
or
inc
icebp
dec
pop
sub
pusha
scas
push
and
mov
into
pop
cmpsl
lret
pop
mov
or
dec
mov
out
adc
int3
jp
ret
jecxz
push
dec
add
pusha
xor
mov
dec
cmp
pop
hlt
dec
jb
pop
arpl
sub
enter
sbbl
xor
test
jle
and
icebp
cmpsb
std
pop
cmp
pop
xor
sbb
setle
int3
sub
cmpxchg
push
inc
loopne
nop
pop
push
enter
xor
fdivs
or
jmp
jns
les
lret
xchg
lea
addr16
jg
imul
stos
bound
and
fimuls
arpl
push
cmp
cmpsb
mov
mov
mov
push
rcrl
mov
outsl
mov
mov
jo
xlat
hlt
hlt
inc
sti
popf
sar
mov
test
cmp
mov
push
cld
mov
daa
cmpsb
mov
cmp
loopne
movsw
mov
bnd
sub
and
jo
lds
and
mov
cmp
insb
jmp
inc
sbb
push
cmp
adc
pop
in
das
in
or
out
push
inc
ret
adc
jne
scas
pop
ficompl
loop
inc
pop
adcl
mov
adc
cli
jo
cmp
popa
test
clc
xchg
rorl
arpl
rorl
dec
aas
mov
sbb
fwait
and
and
lods
inc
fcmovu
cmp
aaa
xchg
fsts
mov
sub
push
pusha
push
mov
mov
icebp
xchg
mov
aaa
or
inc
pop
jp
xor
in
lahf
std
mov
insl
pop
mov
xchg
push
mov
cmp
inc
jmp
mov
dec
mov
lock
ja
sti
fmuls
loop
shrb
mov
repz
rorl
jle
gs
outsl
xlat
add
pop
int3
pop
sub
xchg
gs
push
cmp
sbb
inc
js
inc
mov
and
imul
sbb
mov
sti
lret
push
adc
pop
cmpl
sbb
fs
jnp
in
jl
das
out
lods
xchg
outsl
cmp
fadds
jne
inc
mov
fwait
xrelease
mov
inc
inc
addr16
pop
int
mov
pop
or
add
jb
xor
cli
cmp
aaa
orl
sbb
popl
mov
jg
test
into
inc
out
stos
dec
ret
mov
mov
mov
or
xor
pusha
sahf
and
notb
into
jno
imul
jo
mov
popa
or
xor
addr16
out
lret
dec
inc
sahf
pop
pop
popa
inc
test
xchg
cmc
inc
mov
shrb
scas
adc
mov
or
clc
out
jo
cwtl
sbb
dec
repz
mov
jecxz
pushf
jl
push
fidivrs
inc
add
xor
andb
int3
arpl
incl
int3
arpl
pushf
imull
xchg
aas
and
leave
lret
test
dec
and
jp
dec
inc
push
dec
jo
sbb
push
sub
mov
sbb
fs
pop
fndisi(8087
int3
mull
cmp
mov
and
jo
test
push
dec
pop
push
loopne
cmpsl
mov
mov
xchg
dec
clc
xchg
jge
pop
fcoms
test
aaa
dec
jno
testb
xchg
mov
mov
icebp
sub
insl
scas
mov
idivl
inc
insl
leave
mov
jle,pt
jne
dec
xor
in
js
push
gs
ss
push
shrl
cmc
lahf
std
fucom
cwtl
loopne
loopne
mov
data16
mov
pop
cmpsl
sbb
ljmp
mov
cmpsl
cmc
or
jle
das
sbb
arpl
js
cmpsb
pop
fdivl
ss
lret
xlat
negl
push
insl
mov
cmc
mov
lods
dec
or
xor
cmp
mov
adc
cmpsb
ja
or
xchg
dec
cmp
mov
es
and
xchg
xchg
xchg
lret
pop
in
xchg
sbb
and
push
push
sti
and
ds
adc
mov
or
stc
pop
ret
lods
cmp
lea
enter
add
dec
popa
mov
sub
or
aam
pop
sub
daa
ss
fdivrl
xor
outsb
push
push
call
jge
dec
sub
sarl
add
rolb
push
outsb
mov
mov
jle
xchg
jmp
mov
or
mov
pop
mov
xor
js
cs
gs
insb
inc
sbb
int
movsb
bound
ja
fwait
pushf
aad
and
imul
cmpsl
jl
nop
std
xchg
dec
or
leave
jg
push
jecxz
les
jmp
dec
xlat
fwait
add
dec
and
fsub
data16
mov
nop
cmc
sub
mov
js
jecxz
push
addr16
in
mov
negl
mov
fildll
or
or
out
rcr
pop
and
sbbl
sahf
fs
fldenv
jo
push
es
push
pop
pop
xchg
cltd
push
fwait
and
nop
hlt
daa
and
jnp
pop
jl,pt
imul
nop
cmpsl
pop
gs
in
xchg
push
pop
aad
pop
dec
popa
sahf
jns
into
es
lret
sub
loop
ljmp
bnd
cwtl
scas
add
sbb
into
scas
aas
jo
mov
cmp
into
and
pop
sub
fnsave
ret
xchg
hlt
cmp
add
enter
outsl
pop
sub
mov
add
sub
stos
int3
cltd
or
mov
xor
mov
ja
loopne
jae
mov
xchg
or
add
lods
add
and
xchg
xchg
sbb
push
mov
mov
aam
addr16
xor
add
inc
mov
int3
pop
mov
pop
adc
xchg
jnp
sub
lahf
dec
sahf
enter
out
pop
inc
mov
xor
aam
sub
push
arpl
rcll
sbb
inc
es
push
push
inc
loop
push
movsl
nop
hlt
pushf
dec
insl
inc
test
out
mov
dec
mov
dec
ja
add
stc
pop
mov
sub
aas
mov
lahf
out
and
xchg
sbb
inc
pop
imulb
popf
cld
popf
adc
lahf
insl
je
je
pop
sbb
xor
lret
scas
push
xchg
test
cmp
xor
add
scas
imul
pop
mov
out
fnstsw
xchg
aam
stos
fildll
rolb
cmpsl
sbb
xlat
mov
push
in
das
xchg
mov
add
push
xchg
jne
xor
mov
sub
adc
sbb
test
sbb
xor
inc
sahf
scas
cwtl
ss
jo
mov
test
jl
adc
xchg
mov
or
std
push
aas
sbb
pop
hlt
jae
outsl
jns
rorl
jnp
cmp
and
xchg
aam
rcll
shrl
in
ret
int
mov
fwait
inc
and
notb
sbb
mov
sub
roll
or
int
into
dec
pop
dec
mov
cmp
or
pop
mov
xor
sub
adc
lea
notl
fldenv
sbb
pop
into
mov
repz
gs
ljmp
sbbl
pop
xlat
loope
pop
cmc
push
xor
add
imul
jnp
sub
mull
loop
dec
dec
xchg
test
cmp
outsl
pop
lcall
and
out
jmp
sub
repz
stos
push
int3
lods
dec
xlat
mov
ja
lock
repnz
cli
push
pop
ficompl
sbbl
das
inc
inc
sub
sarl
jne
jae
out
mov
icebp
jnp
xor
pop
lahf
mov
mov
leave
shlb
cmp
push
fwait
lahf
inc
aad
or
call
fmull
pushf
cltd
xchg
sub
sub
ljmp
and
int3
ljmp
dec
xor
push
mov
xor
pop
lock
xchg
in
xchg
mov
repnz
jmp
jecxz
vmaskmovdqu
shl
cmp
inc
out
bound
cmc
les
incb
test
aad
or
pop
xor
dec
mov
or
movsl
mov
mov
mov
pop
adc
dec
in
jno
mov
xchg
inc
cmp
fsubr
pushf
or
and
aam
and
decb
mov
xchg
cmp
faddl
cmp
icebp
cmpl
and
popa
add
call
mov
pop
mov
and
inc
mov
sub
sbb
xchg
mov
fld
mov
and
cmc
lahf
xor
fwait
jns
sbb
cld
icebp
sub
jae
push
decb
xchg
or
lcall
gs
sub
int3
negb
push
mov
and
mov
lret
mov
fiadds
lods
fld
nopl
clc
arpl
mov
adc
shlb
inc
out
fisubrs
pop
in
mov
and
mov
mov
gs
xchg
push
leave
iret
dec
adc
push
fmul
push
in
inc
movsl
sbb
push
mov
ds
movsb
adc
cmp
fwait
stos
hlt
sahf
mov
lods
add
test
mov
dec
fiaddl
mov
mov
add
add
movsb
cmp
mov
mov
cmc
int3
and
lods
sahf
iret
inc
repz
sbb
lds
pop
outsl
xchg
adcb
fsts
in
adcl
and
cmpsb
mov
or
cli
movsb
insb
pushf
jns
les
imul
mov
aaa
add
icebp
mov
jno
addr16
jb
jnp
adc
push
jg
out
test
shll
or
daa
mov
test
mov
fistps
cli
rclb
jp
push
push
pop
loope
lret
push
pop
or
cmp
jno
fwait
adc
and
jne
mov
divb
and
cmp
cld
or
jge
out
jno
fdivrs
xor
rorb
inc
cs
lret
mov
mov
push
in
roll
lret
sub
mov
lret
ljmp
push
loop
in
rolb
jge
lea
test
mov
pop
pushf
jb
fcmove
dec
lcall
shll
inc
xchg
call
mov
sub
mov
aad
repz
lods
pop
repnz
xchg
movsl
cwtl
jl
lock
es
inc
jecxz
in
in
fcmovb
sub
shrb
mov
xor
jo
arpl
inc
mov
orb
inc
sbb
adc
sahf
lea
data16
xor
lret
adc
outsb
push
mov
mov
arpl
stos
iret
cmpsl
nop
scas
imul
or
leave
stos
lcall
or
pop
andb
and
jl
cmpsb
ss
push
pop
sub
push
dec
mov
mov
mov
popa
mov
orb
cld
insb
adc
sbb
in
mov
push
jp
and
aaa
mov
out
lahf
cltd
or
scas
adc
mov
jmp
jl
lea
scas
mov
mov
ds
jl
push
mov
push
sbb
and
mov
lret
push
mov
hlt
in
rcll
jne
int
cmpl
insl
in
scas
push
xchg
xchg
arpl
adc
dec
add
pusha
pusha
aad
add
stc
xchg
push
jecxz
mov
cwtl
cwtl
or
out
ds
inc
rorb
mov
jnp
les
in
icebp
fildll
and
lods
sarl
xor
outsl
dec
cli
or
mov
loope
lahf
push
add
cmc
jb
movsl
bound
mov
inc
int
aam
jne
pusha
add
imul
xor
pushf
mov
aam
ja
push
fs
push
and
test
mov
xor
es
test
push
push
shll
pop
or
arpl
cli
pop
rcll
sbb
incl
inc
test
js
sub
mov
mov
jle
pop
mov
addb
shlb
pop
lcall
bnd
inc
sahf
loope
dec
add
pushf
mov
cmc
sub
sub
xchg
std
lea
int
ret
add
sahf
data16
xchg
xor
loopne
dec
sub
int3
fsts
mov
push
stc
fidivrl
hlt
adc
pop
lahf
push
sar
cmpsl
adc
movsb
bound
test
cltd
movsl
lock
jno
jle
or
xor
in
sub
popf
loop
sbb
repz
push
inc
in
or
push
hlt
test
out
lcall
mov
lea
or
push
shrd
and
pushf
jg
ljmp
in
and
jecxz
adcb
mov
ja
lea
jmp
jb
orl
or
shlb
and
mov
mov
jecxz
and
xchg
in
mov
xchg
addr16
or
mov
lret
mov
cmp
lret
add
jne
push
popa
xchg
xchg
std
adc
bound
cld
call
inc
jns
mov
ja
ja
scas
inc
lods
cmc
add
jnp
push
jge
cltd
or
loope
cmpb
xchg
call
imul
fwait
aas
cld
sbb
into
dec
jg
outsl
jnp
in
outsb
lret
fsts
in
jmp
sub
loope
or
mov
adc
add
icebp
cmp
std
pop
js
xchg
sbb
sub
sti
jmp
inc
pxor
fninit
mov
inc
pushf
mov
outsl
ss
sbb
stos
lret
or
sub
xor
xchg
jle
out
inc
cmp
lcall
fldt
or
sahf
adc
scas
fwait
sysenter
cwtl
inc
mov
orl
outsb
ljmp
mov
mov
mov
cwtl
adc
pop
shll
je
mov
or
es
xor
inc
or
ret
add
pusha
inc
push
cmc
inc
jno
add
sbb
sub
add
hlt
pop
daa
lret
decb
ss
xchg
adc
dec
mov
cmc
call
cmp
xchg
clc
add
mov
jo
out
fadd
movsl
stos
jns
jne
mov
dec
jmp
mov
sub
iret
movsl
jmp
imul
jno
andb
decb
and
push
xchg
pop
mov
xor
mov
out
in
ljmpw
pop
js
sbb
mov
mov
xchg
xchg
sbb
cmp
pop
jg
sub
adc
sub
rclb
dec
xchg
mov
pop
mov
dec
test
sbb
jle
or
mov
inc
cwtl
fs
mov
in
or
cli
insb
out
sub
mov
fdivs
pop
pop
cmp
int
roll
and
xor
test
pop
inc
mov
cmp
pop
leave
mov
scas
cld
cmp
xorb
ret
dec
es
nop
inc
lret
pop
sbb
dec
xor
sbb
xchg
imul
mov
lret
adc
or
call
mov
xchg
inc
sti
add
jae
inc
fcmovnb
mov
dec
mov
jecxz
jp
push
xchg
ja
pop
and
jge
adc
rolb
and
inc
loop
mov
movzwl
ss
inc
test
dec
leave
repz
es
mov
rorb
cli
push
ja
mov
out
movsl
lret
pop
dec
add
xlat
faddl
cmp
and
fcoms
fsubrl
push
mov
mov
push
add
mov
jge
mov
stos
mov
dec
insb
dec
cmp
es
sbb
and
sub
mov
and
jmp
mov
cmp
and
mov
aaa
jge
fcompl
inc
cmp
cmp
setne
ja
stos
xchg
call
jl
aas
nop
mov
mov
sub
and
add
test
scas
mov
push
pop
in
sub
lods
insb
pop
fmull
fists
lods
cwtl
adcb
stc
pushf
stc
mov
insl
insl
stos
cwtl
pop
sahf
movsb
in
inc
and
lahf
push
push
out
adc
loopew
xchg
cltd
xor
ss
mov
mov
mov
xor
mov
loopne
sub
icebp
icebp
xor
xchg
and
jnp
push
push
push
nop
insl
push
loope
push
push
jb
int3
cmpsb
sub
and
or
push
arpl
pop
bound
push
mov
mov
fdivrl
jne,pn
ret
adc
and
adc
push
inc
in
pushf
and
lret
insl
jp
add
addr16
adc
imul
cmpsl
or
cmp
jbe
popa
call
mov
lret
pop
pushf
pop
mov
mov
push
inc
cmp
dec
mov
inc
push
lds
mov
mov
cli
mov
adc
mov
outsb
iret
and
xlat
push
sbb
sub
stos
mov
addb
jo
repnz
stos
inc
lcall
rcll
js
addl
insl
es
stos
push
lahf
sbb
lods
cmp
sbb
icebp
and
jg
pop
sbb
mov
mov
in
jl
mov
lcall
test
jnp,pn
xchg
ds
jbe
jbe
sub
test
dec
add
roll
std
inc
outsl
inc
jl
std
pop
mov
outsl
jbe
inc
mov
dec
dec
inc
or
popa
sbb
mov
mov
ret
aas
pusha
or
push
mov
or
inc
mov
mov
mov
inc
mov
sbb
xchg
push
inc
mov
pop
jg
addr16
aaa
push
sub
pushf
jb
adc
js
nop
fwait
pop
inc
xor
lret
inc
movsl
mov
pushf
das
enter
and
scas
pushf
adc
cmp
mov
les
sbb
fildll
or
xor
cmp
push
cmpsb
mov
push
inc
fimull
mov
out
mov
push
fdivrl
insb
sub
sub
mov
xor
stos
lock
mov
jb
cmpsl
adc
mov
sbb
addr16
dec
xor
mov
fcoms
lea
inc
shlb
xor
cmova
push
rol
sbb
ja
insb
jp
jno
xchg
arpl
mov
inc
cltd
add
nop
fwait
mov
cld
push
jae
repz
fs
dec
push
lock
imul
jae,pt
lret
mov
mov
dec
aad
mov
in
fldlg2
sbb
push
cmpsb
dec
pop
sbb
xor
cmp
insb
pop
shrb
or
fldt
cmc
or
mul
mov
mov
shrb
xor
push
add
mov
pop
sbb
jl
aad
fisubl
mov
add
jg
gs
push
adc
cmc
inc
inc
and
scas
push
pop
xchg
test
nop
cmpsl
lea
xlat
cwtl
mov
cli
popl
popa
mov
in
inc
pop
out
andl
inc
nop
pop
in
pop
int
sub
lods
call
imul
mov
cmp
mov
pusha
loopne
and
pop
mov
xchg
stos
divb
cmpsl
cmpsb
sarl
cs
cmp
addr16
sarl
adc
insl
out
push
cmp
push
or
dec
pop
rorl
mov
jge
stos
ret
out
pop
sahf
in
stos
xor
aas
test
fiadds
or
lcall
add
stos
andb
pop
imul
or
sub
stos
jae
out
adc
push
cwtl
xchg
jmp
insb
mov
or
cltd
cs
popa
mov
sub
jp
das
jno
and
sti
imul
repnz
sub
cmp
push
jl
mov
ds
pop
push
scas
xchg
xor
xchg
xor
sbb
dec
dec
and
and
ja
das
movb
xchg
inc
das
les
mov
jg
xor
pop
push
dec
aad
cld
xchg
push
jae
and
adc
cs
mov
cmp
mov
cmp
xor
aad
jle
xchg
or
mov
pop
out
std
pusha
xor
test
arpl
cmpb
ljmp
pop
daa
dec
sbb
movl
mov
xor
insb
hlt
adc
stos
mov
pop
ret
leave
loop
mov
es
push
xor
add
pop
sbb
pop
jg
dec
xchg
fs
mov
stc
cmp
scas
and
and
xchg
pop
ss
sbb
insb
lods
test
fwait
pop
dec
fldt
shl
push
jge
mov
mov
push
movsl
lret
test
pop
inc
rcr
popf
stos
or
sub
fimuls
mov
jb
inc
out
inc
pusha
mov
pop
pop
pop
add
add
jge
data16
sbb
lods
inc
push
ljmp
xchg
jmp
adc
inc
xor
inc
hlt
push
xchg
pusha
push
fidivrl
jnp
cmp
push
fs
inc
lds
nop
push
dec
jg
sbb
cmp
push
xchg
inc
scas
or
mov
pop
in
xor
aam
xchg
mov
cmp
icebp
inc
inc
sub
icebp
enter
push
lea
lahf
xchg
xadd
xor
adc
add
xchg
leave
int3
inc
add
push
mov
lds
test
hlt
pop
pop
push
jne
rep
adc
insb
dec
mov
pop
sub
pushf
xlat
pop
dec
add
leave
je
ja
xchg
add
cmp
in
adc
dec
xchg
jle
xlat
loopne
pop
and
aam
adcb
test
and
fwait
lret
jl
mov
dec
out
mov
std
jmp
dec
lahf
fbld
sarb
adc
movsb
mov
mov
mov
xor
sub
mov
xchg
ficomps
stos
int
dec
mov
nop
in
dec
dec
rolb
out
pushw
cmp
fstpt
je
mov
cmpsl
and
and
sti
add
xor
add
aad
xor
mov
std
jl
xchg
jns
divl
jge
jl
dec
xchg
jp
xor
push
je
pop
addr16
aam
or
mov
mov
cmp
jmp
imul
addr16
icebp
pop
add
lods
sub
fcoml
inc
mov
xor
mov
jl
sbb
rcl
sbb
ja
push
mov
sarb
add
daa
jmp
jl
cmp
jecxz
inc
mulb
stos
xor
fisubs
push
dec
shll
jo
push
inc
xchg
mov
sbb
jne
pop
push
mov
pop
inc
pop
mov
popa
cmp
je
inc
jmp
repz
mov
jno
push
and
clc
sbb
fisttps
mov
inc
les
mov
scas
and
addr16
jp
ljmp
mov
xchg
hlt
push
add
test
sbbb
movsl
jns
jno
jns
or
push
push
pop
xor
add
pop
jge
outsl
inc
fisttpl
mov
mov
sub
jl
jmp
mov
jns
cmp
into
lods
add
enter
mov
push
lods
imul
notb
pop
mov
cmp
cld
and
inc
loope
sbb
cltd
pop
push
and
or
scas
out
test
js
or
pop
xor
ja
testb
in
add
xor
mov
sahf
lock
aam
mov
lcall
sub
pop
loopne
mov
add
sahf
mov
je
loopne
ret
jae
lock
push
jns
movsl
push
push
int
into
nop
movsb
push
fidivrs
jp
outsl
jb
stos
mov
mov
int
jne
scas
lea
and
inc
add
push
mov
ja
rcrb
insb
push
cmp
aaa
bound
push
stc
xor
mov
xchg
mov
lds
inc
repz
js
lcall
int3
lret
iret
clc
pop
gs
arpl
cltd
sbb
push
dec
mov
clc
into
and
lcall
insb
jb
and
mov
leave
or
outsl
pop
add
lock
push
push
insb
mov
addr16
cwtl
push
fcmovnu
inc
mov
push
cmp
clc
pop
cli
mov
jg
out
popf
ss
adc
dec
mov
jmp
cmpsl
pop
mov
pop
inc
into
ss
ret
xchg
jae
repz
fcmovbe
ficompl
pop
jge
sub
or
and
je
lret
repnz
data16
pusha
loope
cmc
pop
pusha
fistl
gs
aas
mov
call
mov
loope
xchg
out
mov
sub
leave
es
in
arpl
dec
cmp
fdivrs
jmp
xor
fs
frstor
sti
fsubrs
sub
subb
fsub
adc
pop
jb
inc
sub
or
cs
push
push
mov
sub
ja
pop
in
xor
sti
xchg
jle
out
or
movsb
xor
test
popa
dec
push
add
add
pop
insl
sbb
stos
fstl
lods
mov
sbb
imul
lahf
dec
dec
mov
adc
adcb
xor
pop
imul
cmp
sti
push
ljmp
dec
xor
sbb
dec
scas
sbbl
int
arpl
pop
add
stc
lahf
add
fldenv
gs
dec
push
fnstsw
into
or
ds
cmpsb
lahf
xchg
fcmovnbe
aad
andl
std
push
mov
test
jmp
lds
pushf
loope
out
sbb
pop
addr16
xchg
mov
lods
jl,pn
push
jg
jge
repnz
fistpl
mov
jecxz
sbb
add
shl
das
into
mov
sbb
adc
jo
scas
mov
and
push
enter
leave
addl
sbb
lods
enter
ljmp
push
or
xchg
mov
pop
roll
fwait
sbb
or
push
decb
lea
subb
or
dec
jo
mov
xchg
aad
dec
pop
dec
lea
imul
lret
jae
test
cmc
sub
sbbb
xchg
cmp
arpl
test
xchg
es
enter
loopne
mov
pop
add
sar
jmp
stos
enter
sbbl
dec
cmc
lods
fimuls
adc
or
push
test
adc
jmp
cmp
mov
js
daa
movsb
jae
inc
cwtl
push
jb
lcall
mov
jns
andl
sbb
subl
fisubrl
enter
cmp
xchg
in
cld
adcl
push
orl
add
bound
cwtl
fcmovne
xchg
scas
pop
sub
ds
inc
inc
loop
xor
cmp
add
insb
icebp
mov
out
in
pop
push
gs
sqrtps
nop
ret
xlat
loopne
inc
lods
sbb
cmp
call
jp
push
sbb
pusha
adc
push
adcl
xor
mov
sbb
xor
out
leave
jo
xor
inc
mov
fmul
pop
mulb
call
aas
mov
push
call
out
xchg
cmp
xchg
add
loopne
ds
mov
dec
mov
mov
and
repnz
pop
lods
push
adcb
xorb
sbb
mov
out
not
jo
int
stc
mov
aaa
add
sbb
xor
gs
aaa
ror
inc
pop
test
xor
mov
lahf
mov
fucomip
xor
outsb
es
mov
pushf
loope
jo
aad
pop
scas
loope
test
mov
jae
inc
dec
clc
js
jge
ljmp
sti
das
int
and
push
jo
insl
pop
rol
loope
inc
mov
rol
insl
lahf
nop
cli
shl
mov
pop
fwait
xchg
ror
dec
adc
aam
push
lahf
mov
lret
mov
in
mov
daa
loope
mov
fwait
xchg
add
push
xchg
iret
data16
addl
roll
sub
pop
aaa
sub
or
lcall
sbb
cwtl
out
dec
and
jp
mov
cwtl
pop
add
inc
cld
lds
popa
rcl
cmpl
fdivl
mov
jb
xor
in
sub
fsubl
lea
ret
jl
mov
xor
xlat
jne
push
mov
ljmp
ret
decl
inc
xor
les
popf
inc
int3
mov
push
inc
je
cmp
ja
add
mov
jnp
push
enter
or
cmp
add
xor
push
scas
jns
jnp
xor
mov
fbstp
js
mov
sub
and
cwtl
jge
push
loop,pn
push
dec
mov
mov
roll
xchg
push
lret
and
jo
in
mov
mov
mov
shl
push
sbb
sub
sub
cli
mov
mov
adc
std
gs
mov
jns
iret
enter
mov
ret
sbb
sbb
loope
and
mov
imul
in
mov
fldcw
in
inc
ret
adc
jge
mov
test
inc
jg
pop
push
cwtl
mov
jb
ficoms
adc
jecxz
hlt
sub
sbb
bnd
frstor
out
sub
and
das
inc
call
mov
push
inc
mov
sbb
cmp
mov
mov
mov
jne
xchg
nop
in
cmpsl
jp
add
mov
stc
das
lods
and
xor
cmpsl
adc
lcall
sahf
push
mov
scas
mov
xchg
outsl
addr16
dec
fnstsw
fs
rclb
lds
subb
pop
dec
outsb
loopne
or
repnz
lock
aaa
xchg
inc
adc
pop
add
sbb
pop
int3
jmp
adc
xchg
stos
orl
cmp
outsl
sbb
jbe
pop
lods
test
and
movsb
sbb
pop
call
lret
inc
push
in
push
lods
test
test
cmpsb
push
bound
ss
push
sbb
xchg
inc
iret
das
cmova
dec
lcall
or
xor
test
mov
adc
jo
mov
lods
fisttps
aam
sahf
jl
cld
mov
aad
test
push
in
pop
jmp
mov
andl
divb
adc
lock
loopne
xchg
pop
mov
das
dec
push
mov
ss
push
dec
jo
cmp
dec
sub
xchg
test
sub
lcall
out
jmp
imul
out
shrl
and
pop
sahf
pop
and
mov
je
rep
dec
sub
dec
rcrl
addr16
nop
inc
xor
dec
pop
es
outsb
sarb
pop
daa
fcoml
lea
mov
jo
inc
lret
add
mov
leave
or
jne
and
cmpsb
mov
mov
stc
adc
pusha
daa
mov
inc
lret
and
xchg
pop
rcr
push
mov
lods
dec
cmp
jmp
nop
stc
stos
inc
xchg
leave
insl
loope
daa
cmp
cld
push
decl
fs
jb
mov
sbb
mov
push
inc
push
sbb
pop
mov
pop
sbb
aas
add
push
dec
and
pop
pop
fcompl
adc
outsl
or
xchg
jge
daa
test
sub
mov
adc
les
mov
jbe
sti
sub
mov
jp
xchg
inc
aam
sbb
pop
js
sbb
fnsave
test
ds
cmc
push
mov
movsb
jmp
xchg
bound
inc
fdivrl
and
repnz
ja
gs
mov
in
nop
cs
test
bound
es
xor
jb
mov
pop
mov
out
push
mov
mov
mov
mov
mov
push
mov
sub
jae
repnz
cltd
xchg
jl
sti
pop
lahf
xchg
cmpb
ss
xor
jnp
inc
ficompl
xor
into
push
jne
mov
enter
jno
arpl
dec
or
fnstsw
aam
xchg
jecxz
cli
jmp
mov
scas
cmc
ja
leave
add
lcall
icebp
adc
cs
inc
not
test
test
aaa
loop
xchg
jae
int
mov
jbe
or
dec
jne
repz
movsb
or
ret
outsb
out
fldl
fcoms
das
sub
mov
push
or
lea
clc
sub
bound
stos
ss
sbb
xchg
mov
xchg
lea
mov
xor
and
repnz
sbbl
mov
ss
stc
mov
mov
cmp
mov
or
adc
pop
cwtl
arpl
cltd
inc
insl
pop
pop
stos
xor
xchg
and
xor
inc
or
pop
mov
loope
repz
lcall
or
xchg
ret
dec
js
iret
leave
test
inc
test
inc
mov
adc
cli
sti
or
push
dec
sub
jp
daa
out
mov
jl
movl
mov
sti
aad
dec
dec
and
test
cwtl
fistpll
inc
mov
jp
mov
dec
pop
into
add
mov
movsl
aam
jne
bound
xor
jb
inc
fimull
inc
js
sbb
pusha
cmp
cltd
jge,pn
sbb
xchg
and
jb
xor
xchg
movsl
dec
ljmp
jmp
sbb
cmp
cmc
push
xchg
insb
mov
add
dec
dec
xchg
sbb
mov
outsl
pop
roll
into
cmp
pop
test
sti
test
movsl
loope
and
out
addr16
insl
cld
hlt
das
jp
fsubp
ret
incb
or
mov
adc
or
push
fdivs
ja
push
mov
push
ret
sbb
inc
inc
popa
clc
mov
xchg
punpckhdq
in
fbld
lds
cmp
cmp
or
sti
dec
incl
pusha
sub
mov
add
scas
or
rorb
ret
inc
jno
push
jnp
or
and
xchg
test
mov
test
add
sub
outsl
jmp
pop
enter
xor
cmpsb
or
push
out
xor
iret
pop
dec
or
cmpsl
insl
jae
mov
repz
pop
sub
out
movsl
adc
push
movsl
pop
xchg
insl
inc
and
xchg
into
xchg
or
dec
sar
jnp
xchg
mov
add
out
ret
mov
int3
jb
xchg
push
shrb
imul
mov
mov
xchg
das
bswap
inc
jecxz
xchg
shrl
jp
push
in
sub
aaa
adc
adc
mov
out
inc
fnsave
fwait
sub
jb,pn
dec
xchg
adc
and
lret
pop
sbb
inc
add
scas
pop
clc
rcrl
jmp
sub
push
ja
push
adc
dec
push
inc
inc
outsl
call
xor
inc
mov
sbb
push
cwtl
push
hlt
mov
and
and
aam
shrl
js
ds
xchg
lods
icebp
imul
or
bound
ret
test
xchg
push
mov
popa
addl
inc
stos
xor
clc
fs
sbbl
nop
dec
out
push
rcll
cwtl
dec
xor
in
ror
mov
imul
or
sub
sub
mov
mov
inc
xchg
sbb
out
call
pop
xchg
leave
sbb
mov
xchg
fwait
test
push
lds
push
ret
daa
or
push
dec
mov
xchg
jae
and
mov
xchg
mov
push
mov
out
lds
add
adc
jle
pop
adc
out
popa
xor
inc
xchg
xor
inc
xor
dec
scas
mov
loope
inc
and
add
pushf
or
pop
mov
mov
adc
inc
pop
insl
cmpb
nop
inc
xor
pop
xchg
lcall
hlt
jo
add
cmp
cmc
add
cmpsb
push
loop
xor
rorb
push
or
mov
xor
enter
sub
mov
pusha
in
in
aad
adc
lea
ret
call
or
sbb
test
sbb
test
sbb
mov
fmuls
fnsave
inc
cs
popa
push
sub
pop
jb
stc
lahf
xor
or
fwait
pop
ret
pop
lods
pop
sbb
push
daa
jmp
movsb
loop
cmp
xchg
ss
int
scas
cmp
cmp
mov
adc
or
in
insb
cmp
addl
inc
int
mov
sbb
pop
out
inc
push
push
pop
sbb
add
pop
sti
inc
pushl
or
mov
dec
rol
bound
xor
sbb
dec
jge
std
int
sbb
cmp
xchg
adc
add
sahf
scas
js
inc
and
mov
sub
mov
pop
jae
push
ljmp
mov
pop
pushf
mov
push
fidivrs
sti
xor
jns
mov
jb
fiadds
mov
icebp
jmp
pop
pop
adc
repz
mov
adcl
xlat
jecxz
adc
adc
mov
test
pshufw
int3
aad
lahf
mov
ret
icebp
adc
dec
jnp
and
mov
rcl
xchg
in
fwait
adc
jp
mov
or
cmp
jbe
cmp
adc
and
mov
lock
addb
pop
xchg
dec
adc
inc
cmpsb
jo
fadd
and
mov
mov
imul
shll
mov
mov
scas
insl
xor
or
pop
dec
add
sub
lods
movsl
dec
pop
lods
sub
aas
xor
test
pop
loop
stc
cli
testb
xchg
jmp
sti
pop
nop
lea
and
push
seto
outsl
leave
add
jno
hlt
pop
xlat
mov
bnd
mov
mov
xor
test
adc
imul
ljmp
jecxz
and
in
jge
dec
adc
imulb
lret
mov
leave
sbb
sbb
fdiv
or
jg
lahf
xchg
adc
pop
fucomip
xor
mov
jmp
lret
fs
xchg
inc
ret
out
lcall
mov
add
stos
mov
push
sub
pop
ret
sti
fsubrl
lods
mov
aaa
dec
jns
je
test
stos
mov
pop
das
mov
or
cmp
orl
add
cmpsb
push
adc
add
push
les
test
xor
sbb
dec
adc
push
popa
mov
xor
jbe
insb
add
xor
push
jmp
ret
ja
mov
out
mov
and
pusha
and
mov
hlt
jne
out
jmp
ds
mov
aaa
pop
jne
cltd
jae
sarl
rorb
jnp
in
sub
jb
fildl
or
dec
mov
sbb
pop
imul
cmpb
std
mov
push
test
pop
cmp
ds
jecxz
ss
das
lret
mov
mov
push
sahf
mov
or
adc
fs
nop
cwtl
xchg
test
mov
adc
in
mov
in
jno
adc
mov
lret
jl
xor
sbb
stos
mov
popf
out
sbb
scas
cwtl
repz
cmp
das
leave
fs
aam
mov
fisubrs
aas
je
pop
leave
jb
mov
mov
sahf
pop
incb
jo
test
xor
fdivs
mov
inc
insb
adcl
mov
pusha
jmp
mov
dec
loop
and
cmp
addl
fstpt
pusha
sub
or
cmp
sar
cmpsb
js
test
pop
mov
cmpsl
and
pop
out
loope
mov
cmp
jecxz
pusha
dec
dec
cmp
loopne
mov
cmp
push
adcb
scas
or
iret
hlt
or
mov
and
cmpsl
in
mov
dec
arpl
push
jl
xor
sbb
fsubl
flds
push
cli
es
or
sbb
xchg
and
sub
scas
xchg
out
js
pop
mov
shlb
cwtl
mov
inc
clc
xchg
adc
mov
sbb
cmp
pop
and
dec
xor
scas
mov
pop
das
cmpsl
mov
fisubl
stos
cmp
jbe
imulb
mov
mov
pushf
ret
repz
ljmp
dec
imul
jmp
cltd
dec
pop
mov
cld
mov
imul
aas
enter
int
cmpsl
dec
sub
push
fadd
outsb
and
fisttpl
or
cwtl
xchg
lahf
sarb
loope
ret
mov
and
mov
repz
push
mov
dec
jmp
std
popa
jns
adc
inc
out
call
int3
sub
cmp
dec
andl
ret
cmp
inc
pop
push
call
scas
or
pop
fldcw
adc
sub
lods
add
mov
mov
rcrb
stos
push
scas
add
neg
mov
adc
ret
xor
cltd
mov
cmp
rcrb
sub
test
xchg
jge
push
or
jb
adc
shrl
xchg
xchg
mov
pushf
stc
pop
cmp
pop
cwtl
mov
repz
push
push
push
adc
notb
pop
pop
movsb
and
mov
and
in
xlat
stos
cmp
ljmp
ja,pn
push
xlat
insl
bound
repz
push
cmp
jae
roll
xchg
stos
push
push
mov
cmp
mov
mov
daa
lret
sbb
insl
mov
jae
pop
scas
cmc
dec
ss
push
outsl
xchg
sbb
inc
pop
cmc
jp
repnz
icebp
rorb
xchg
ds
sub
mov
sahf
enter
pop
lret
ret
jg
push
adc
jge
mov
cmp
js
sarl
ret
aaa
cmp
jp
or
jne
mov
imul
add
aaa
cmc
xlat
and
pop
xor
mov
fnstsw
int3
lds
xchg
mov
addr16
pop
fs
cmpsb
add
inc
jno
inc
pushf
cltd
push
rcrl
inc
out
add
adc
mov
cmpsb
dec
add
xor
sbb
jns
cmp
imul
ds
jo
xchg
push
es
xchg
jge,pt
cwtl
in
fwait
jp
jae
and
sub
adc
les
inc
push
add
outsb
inc
dec
rol
dec
dec
pop
shll
mov
mov
inc
xlat
mov
xchg
xchg
mov
sub
xchg
aad
pavgb
and
inc
mov
inc
cmp
repnz
mov
out
fiaddl
pop
mov
fcoms
push
ds
dec
pusha
movsl
inc
dec
sbb
xor
imulb
pop
bound
xorl
cmp
lret
or
push
push
cmp
or
movsb
sbb
pop
xchg
ret
scas
and
add
pop
loop
xor
aam
les
or
incb
rcrl
pop
xchg
rol
mov
mov
xchg
inc
xchg
out
leave
cmpsb
mov
jbe
outsl
or
movsb
jno
push
mov
sbb
lods
cmp
ficompl
pop
adc
inc
jns
jl
push
rcll
cmp
xor
outsl
mov
jns
dec
lret
mov
mov
push
scas
add
dec
push
add
dec
mov
xchg
test
mov
jae
xchg
call
cmp
push
and
jp
mov
call
sahf
mov
aam
cmp
pusha
lock
add
call
push
lahf
push
int3
jns
dec
movsl
mov
mov
mov
adc
xor
sbb
cmp
mov
mov
je
xchg
bound
lock
jne
repz
sarl
test
lods
and
jp
dec
pop
mov
sti
pop
int3
lret
scas
pusha
xchg
cli
dec
test
idivb
cmp
and
xchg
add
jno
xor
dec
mov
psrlw
dec
jbe
mov
inc
xor
xor
cmp
insb
cmc
mov
mov
mov
inc
repz
or
dec
adc
adc
repnz
lret
sub
icebp
rcrb
xchg
mov
pop
mov
lea
pop
aam
cmp
mov
mov
fidivs
ljmp
pop
addr16
cld
mov
cs
xorb
pushf
lcall
fisubs
shll
inc
ja
test
jb
nop
jbe
mov
push
aaa
mov
hlt
movsl
adc
or
notrack
ret
push
cmp
hlt
cld
sub
movsb
mov
jmp
sbb
in
jns
cltd
das
mov
shl
pushf
push
pop
stos
jbe
cmp
or
inc
and
int
mov
xchg
pop
cmpsl
xchg
or
in
lds
inc
loopne
es
in
add
push
movsb
lret
or
in
hlt
xlat
call
dec
sbb
add
jg
test
loopne
test
int3
daa
add
push
or
dec
push
shl
xor
int
mov
rorl
test
cli
push
repnz
repnz
pop
repz
dec
jno
imul
popa
es
movsb
pop
mov
or
out
sub
cmp
bound
mov
add
pop
jl
mov
sti
xor
sbb
iret
lods
sub
push
gs
xor
xor
cmpsl
bound
mov
push
or
push
in
loopne
mov
fcomps
rclb
ja
sub
jl
inc
adc
imul
jnp
push
sub
mov
xchg
ficompl
xchg
ljmp
sbb
jb
xchg
ss
sti
mov
movsl
dec
pop
adc
mov
cmp
adc
jmp
pop
adc
push
out
push
xlat
pop
push
adc
nop
pusha
in
addb
push
bound
je
add
pop
or
mov
cmp
pop
clc
fucomi
mov
jl
pop
fdivrl
push
xchg
pushf
imul
lret
xchg
cld
subb
movsb
xchg
repnz
je
sbb
inc
jl
sub
cs
mov
imul
int3
cmp
push
out
ja
inc
lock
divl
dec
cmp
cmp
mov
popf
pop
add
cmc
cs
shll
adc
mov
cmp
ffreep
push
sub
test
mov
and
xor
andl
pop
int
push
lcall
ja
add
push
add
rolb
dec
pusha
mov
shl
sbb
in
das
pop
adc
daa
loopne
push
call
daa
push
int3
xchg
shl
lea
insl
pop
addr16
jne
ficoms
lods
mov
insb
or
xor
add
lock
shll
jecxz
fdivl
push
shll
call
lea
cmp
adc
jle
add
xor
jbe
movsb
lret
cli
rclb
mov
test
lcall
mov
lret
in
popl
mov
test
in
in
aad
loope
push
outsl
fiaddl
imul
neg
cmc
push
lods
out
dec
enter
sub
cmp
shll
pop
dec
xchg
pop
pop
gs
dec
dec
out
or
xchg
mov
jns
xchg
and
sbb
out
int
and
jecxz
bound
scas
aam
idivl
add
icebp
outsl
jge
fnstenv
jbe
cmc
sbb
sarb
pop
xchg
or
mov
insl
in
repnz
jbe
dec
push
mov
enter
hlt
mov
adc
loopne
cmpsb
mov
adc
push
xchg
gs
dec
and
jb
clc
xor
xchg
push
cmp
fistl
je
mov
out
inc
push
sbb
cs
dec
shr
xlat
adc
rcrl
adc
std
lret
add
ja
or
in
mov
lods
cmp
lock
outsl
mov
fsubl
push
imul
cmpsl
pop
stc
aas
or
jno
jp
es
js
arpl
inc
cltd
stos
inc
ret
jns
cmp
scas
aad
cmp
fldenv
mov
sbb
fsub
hlt
mov
pop
cmp
xor
shll
adc
mov
adc
cmp
sub
repz
test
dec
stc
fildll
inc
sub
scas
xor
push
add
ret
cmpsb
dec
push
scas
add
adc
repnz
cmp
outsb
inc
sub
push
enter
sbb
sub
les
mov
mov
xchg
mov
push
addb
mov
push
xor
pushl
pop
push
lds
sti
sub
stos
sub
xchg
imul
test
dec
icebp
mov
sub
dec
movsl
mov
ss
aas
out
in
ds
loop
movsl
push
fdivs
fwait
cltd
push
sub
mov
dec
jle
jp
mov
xchg
popf
push
jb
stos
dec
pop
adc
outsl
nop
push
clc
adc
cmp
aad
adc
bound
mov
popa
cld
pushl
cpuid
test
repz
shll
out
fstpt
xor
xchg
cltd
outsl
insb
roll
jg
jb
repnz
mov
mov
fimull
jp
repz
inc
sub
or
inc
fmuls
xchg
xchg
adc
in
test
adc
push
xor
inc
push
jo
mov
xor
cmp
and
jg
or
or
adc
scas
stc
imul
sbb
xchg
out
cmp
ficoms
xor
lret
inc
es
iret
nop
repnz
sbb
inc
adc
popf
decl
or
mov
rolb
fstpl
adcb
lock
test
mov
and
jecxz
test
int3
add
test
fsts
lcall
aas
push
mov
inc
je
mov
cmpsl
mov
scas
adc
sub
and
cmp
or
cmpsb
mov
pop
ja
loopne
push
data16
dec
cmp
fstpt
scas
in
jns
sub
cmpsb
push
inc
cs
jmp
or
pop
adc
pop
adc
aam
mov
fsubs
sub
sub
mov
push
mov
out
mov
adc
aad
sbb
lcall
sbb
rcrb
fisubrl
in
mov
or
int
cs
imul
jecxz
inc
test
pop
loopne
push
pop
or
push
dec
test
pop
icebp
mov
push
subb
jg
loopne
jl
xor
std
cmp
imul
sbb
xchg
add
and
cwtl
jo
sbb
xchg
add
jne
mov
pusha
mov
cs
jb
hlt
mov
pop
dec
add
cltd
jns
mov
cld
xor
ret
sarb
in
shrb
in
jbe
and
loop
sub
or
int3
loop
popa
push
mov
adc
adc
push
push
in
sbb
movsl
lcall
out
fs
dec
cld
pusha
test
or
dec
cmpsl
lds
cli
add
jmp
adc
jmp
mov
popf
cmpb
inc
mov
sub
sub
addb
jnp
add
rol
pop
or
mov
in
es
aam
enter
jne
sbb
negl
adcl
push
pop
push
sub
out
cmp
push
rcr
and
push
cmp
stc
mov
cmpsb
jg
pop
fistpll
jb
xchg
inc
or
mov
pop
scas
and
arpl
enter
mov
test
out
mov
int3
test
or
jbe
pop
ljmp
pop
adc
pop
mov
mov
test
jmp
push
inc
sbb
orb
shll
inc
adc
jne
dec
in
sbbl
jl,pt
and
mov
loope
mov
sbb
data16
mov
xchg
lret
lret
and
mov
test
jecxz
negb
movsb
popl
sti
stc
jnp
cmp
push
mov
jnp
adc
cmp
pushf
sbbl
pop
icebp
xchg
repnz
enter
jbe
sbb
insl
sti
repz
pop
inc
cld
incb
and
clc
and
ret
cmp
in
xor
js
in
push
mov
jle
orl
lahf
or
cli
and
sbb
cmp
adc
mov
sbb
xchg
sub
adc
lret
ss
mov
and
xcrypt-ctr
cmpsl
popf
pop
loopne
mov
or
lods
ror
pop
and
mov
dec
push
push
push
sub
xchg
push
ss
xlat
lahf
push
sbb
or
mov
hlt
inc
cmp
jns
mov
add
xchg
jmp
mov
mov
inc
lcall
cmc
sti
and
mov
mov
sbb
nop
push
dec
jns
loop,pn
mov
dec
out
loopne
dec
adc
push
pop
loope
je
mov
mov
out
mov
arpl
sub
dec
xor
in
filds
popf
xchg
andl
mov
aad
inc
call
in
clc
test
pusha
mov
lret
fwait
dec
cld
jge
or
and
xor
mov
mov
jno
outsl
mov
dec
sbb
loop
bound
or
jae
mov
aaa
or
test
in
dec
aam
aaa
jne
or
dec
sbb
fs
xchg
sti
lea
mov
mov
pusha
jg
adc
push
leave
sbb
fisubrl
lods
push
jnp
rolb
add
inc
imul
scas
dec
out
addr16
cmp
pop
adc
jns
xlat
insl
mov
jnp
andl
or
inc
inc
cmpsb
iret
enter
lcall
pushf
pop
les
jle
push
and
bound
pop
jg
aaa
or
inc
xchg
inc
xchg
inc
shlb
das
mov
inc
out
jbe
adc
test
movsl
stc
addr16
mov
call
sbb
mov
jno
cli
ret
outsb
sti
fsubs
out
mov
movsb
out
cmp
bound
in
pop
lcall
jecxz
repnz
cmp
sbb
jge
ret
jae
dec
addr16
adcb
ficomps
mov
and
dec
cmc
es
cmpsl
inc
addr16
mov
push
cs
xor
in
xor
fsubr
push
shrl
dec
pop
rorl
pop
mov
push
jp
pop
xor
xchg
dec
in
enter
cli
cmp
shr
dec
xor
repz
daa
sti
ret
lock
inc
out
dec
dec
sub
inc
outsl
mov
fwait
idivb
stos
outsl
jp
enter
mov
or
xchg
shlb
fs
mov
popl
outsb
xchg
faddl
xor
mov
push
sub
mov
iret
jl
xor
faddp
mov
stos
or
ljmp
push
add
jns
xchg
scas
sahf
movsb
push
ds
stc
insb
sub
icebp
jp
insb
or
mov
sahf
jo
fcompl
repnz
jne
das
dec
popf
pop
ret
push
rolb
jb
lods
mov
inc
push
xchg
xchg
scas
xor
mov
mov
imul
or
enter
inc
inc
push
add
das
jne
jecxz
scas
out
lcall
jg
xchg
adc
lret
add
notl
gs
ds
xchg
and
out
dec
sub
adc
and
mov
fimuls
push
pop
mov
in
divb
jg
push
push
ss
pop
adc
hlt
test
xchg
jecxz
movsb
shlb
mov
xchg
mov
mov
mov
lods
jge
jl
jne
mov
sub
cmpb
inc
lret
lods
scas
pop
cmpsl
insl
push
ror
enter
add
fucomi
ret
and
mull
mov
lods
lret
and
push
cmp
xor
roll
mov
mov
cmpsb
push
xchg
bound
jo
mov
movsl
dec
out
jg
pop
mov
and
jmp
aaa
jb
lret
jge
shll
push
mov
cmpsb
mov
pop
push
jge
or
or
jmp
mov
jno
repz
dec
sub
and
pushw
mov
ret
xor
pop
out
mov
jmp
cmp
fiaddl
inc
or
mov
xchg
out
pop
divb
jecxz
aam
push
cmc
in
inc
andb
movsl
imul
adc
xchg
ja
addr16
jmp
xchg
xchg
xchg
adc
data16
sub
outsl
xchg
outsl
lods
subb
cltd
mov
mov
pushf
sub
ljmp
sbb
xchg
adc
xlat
inc
mov
adc
jbe
loopne
scas
test
cltd
data16
in
lahf
mov
in
push
in
jge
lret
les
aaa
dec
sub
jno
push
xchg
add
push
test
gs
sub
call
aad
test
mov
push
xchg
xchg
roll
jecxz
clc
mov
adc
ja
inc
push
pop
or
js
sub
std
in
dec
sub
out
mov
mov
push
mov
xchg
repz
sbb
lcall
subb
pop
pusha
cmp
ficoms
test
sbb
aas
push
sub
dec
add
outsl
cmp
mov
int3
roll
repnz
aam
adc
cmp
or
shlb
mov
add
xchg
pop
idivb
divb
mov
mov
sbb
leave
outsb
test
mov
push
bnd
scas
in
lds
and
insb
cmp
ss
in
push
adcb
push
gs
cli
repz
dec
mov
cmpsb
adc
and
test
bound
lea
cltd
sub
stos
lds
imul
push
sahf
in
scas
or
jno
lea
in
shr
push
sub
decl
test
add
jmp
xchg
ja
jae
and
dec
jnp
adc
pop
fs
pop
or
test
mov
dec
sub
mov
xlat
dec
mov
cmp
movsb
into
lds
cli
dec
popa
decl
lahf
push
sarl
cld
dec
pop
push
call
jnp
xchg
ret
inc
jecxz
out
mov
ss
mov
sub
cs
dec
mov
mov
es
push
add
jo
cmp
or
adc
test
push
sbb
les
sbb
xchg
adc
fcompl
push
int
adc
aas
sahf
mov
in
lahf
push
lret
stos
pop
push
mov
stc
loopne
enter
xchg
mov
push
sbb
roll
lods
xchg
cmc
mov
jg
cmp
xchg
and
and
and
sarl
push
scas
mov
or
adc
ja
sub
nop
push
add
or
insl
cmp
popa
mov
add
pop
incl
movsb
dec
jge
rol
test
das
icebp
arpl
ret
mov
xchg
mov
jl
lret
xchg
pop
and
xor
and
jb
or
incl
fs
add
insl
pusha
xchg
xor
pop
jmp
pop
fadd
fwait
mov
push
add
adc
popa
mov
dec
sub
xchg
jno
mov
jne
add
and
and
int3
xlat
test
mov
in
or
mov
mov
call
xchg
xchg
jge
out
add
pop
mov
jp
dec
mov
add
adc
test
cmp
pop
mov
lds
and
jae
in
dec
inc
mov
fistpl
pop
xor
dec
push
add
test
xor
xor
inc
data16
dec
adc
andl
scas
bound
insb
push
inc
enter
faddp
pop
mov
push
adcl
add
adc
cmp
xchg
arpl
cwtl
xor
in
add
xchg
pop
xor
dec
ret
xchg
jbe
dec
or
mov
lods
mov
xchg
sub
pusha
push
incl
inc
outsl
test
fbstp
or
push
das
lret
les
mov
cmp
mov
testl
and
jmp
mov
adc
jno
orb
in
icebp
std
cmpsl
push
js
std
movsb
movsl
stos
cmp
inc
and
rorb
sub
stc
mov
dec
lock
std
sub
test
cmp
mov
pusha
mov
mov
push
add
stos
and
pop
lea
fisttps
jns
push
test
sub
add
xor
shll
lods
jle
push
mov
add
cmc
and
inc
fistpll
ds
lds
and
adc
mov
mov
mov
cmp
mov
dec
dec
and
mov
outsl
mov
lret
xor
orb
and
lret
fwait
int
sahf
repz
jne
out
loop
pop
push
daa
mov
popa
popf
stc
std
dec
sbb
pop
divb
mov
dec
jno
popa
cmc
mov
adc
movsb
xchg
sahf
jno
inc
ror
sub
mov
xchg
dec
dec
sub
addr16
call
add
cld
and
cmc
mov
and
adc
out
loope
lret
out
xor
cmpsb
cmpsl
inc
clc
pop
test
lret
mov
adc
inc
cmp
xchg
mov
int3
movsl
daa
push
int3
je
push
pop
popf
out
test
dec
ud2
pushf
sbb
mov
mov
push
push
sbb
dec
les
pop
test
mov
rolb
dec
arpl
fxch
test
xchg
out
addb
sti
adc
pop
call
cli
outsl
stos
push
cld
aas
loope
jecxz
and
sub
sti
lds
sub
push
ss
sti
inc
call
inc
add
leave
ljmp
int3
pusha
shrl
fwait
mov
add
push
push
inc
leave
into
adc
pop
cmc
repnz
fstpl
leave
push
int
aaa
popf
xor
and
pop
pop
ljmp
mov
dec
mov
mov
arpl
call
sub
push
xor
je
mov
rclb
sbb
ja
jg
mov
adcl
xchg
pop
push
xor
popf
inc
cld
or
jp
movsl
fisubl
mov
dec
push
adc
sub
add
lret
sbb
cld
sarl
or
add
sbb
mov
adc
xor
inc
data16
push
out
mov
cwtl
fiaddl
mov
lock
test
and
jne
add
mov
stos
xchg
mov
cld
incl
pop
andl
inc
sti
cmpb
xchg
sub
in
lret
lods
into
ficoms
shrb
es
insb
cmp
ljmp
pop
jle
mov
mov
mov
xor
push
sarl
lock
cwtl
or
add
fwait
xor
inc
stos
or
mov
sbb
das
jb
inc
das
pop
push
test
adc
push
push
iret
cmp
sbb
cmpsb
shlb
jno
cld
and
jo
xor
pusha
lock
inc
or
sbb
out
or
frstor
mov
call
punpcklwd
fwait
dec
movsb
add
pop
dec
jbe
add
int3
aaa
aad
cmp
lods
aad
lods
outsl
movsl
xlat
xchg
std
push
or
je
test
mov
out
xor
into
repnz
jne
push
repnz
pop
jno
mov
fistpll
mov
xor
add
jmp
lods
sub
pop
cmpsb
xlat
js
movsb
sub
mov
shlb
out
cmp
jecxz
inc
insl
sub
mov
popa
in
and
sub
les
push
repnz
mov
lret
mov
add
pop
test
and
sti
ret
inc
sub
jge
ds
aam
push
and
fistpll
xchg
xor
mov
loope
das
int3
add
mov
push
lea
cltd
xor
dec
jno
xchg
mov
aaa
or
out
dec
sub
push
push
int3
dec
shlb
out
mov
or
ss
leave
ret
push
fwait
or
xor
sarl
mov
ss
hlt
insl
mov
ss
jge
rcrl
arpl
sub
add
lods
and
data16
cmp
push
daa
and
jne
jno
xchg
and
in
jecxz
lcall
or
hlt
jbe
ret
ja
xchg
aas
pop
cmp
sti
or
xchg
repz
inc
jne
mov
jg
loope
push
aad
inc
scas
jno
push
in
ljmp
add
mov
ret
adc
and
xor
out
cmpsb
ret
repz
ficomps
lods
aam
out
sub
mov
movsb
enter
adc
jns
popa
aam
and
mul
add
nop
mov
cltd
xor
xlat
sbbl
pop
inc
ret
ret
aaa
push
aad
popf
sbbb
mov
andl
mov
add
xchg
frstor
pop
pop
push
inc
xor
test
inc
xor
es
rcrl
jbe
pop
imul
add
mov
dec
or
inc
adc
scas
das
jne
repz
jl
arpl
push
out
push
jb
pop
stc
sbb
ja
loope
out
sarl
mov
add
mov
push
test
sub
fcmovu
dec
xchg
sub
adc
out
pop
push
pusha
and
lods
dec
je
xchg
insl
xor
movsl
pop
shrb
cmp
push
push
faddl
mov
and
sub
dec
aaa
push
push
sbb
lret
lods
xchg
data16
clc
cs
adc
pop
insb
push
or
cmp
rcl
gs
push
push
aaa
incb
xor
lcall
adcl
gs
lods
in
aad
addb
push
mov
stos
mulb
sbb
dec
pop
inc
push
pop
mov
add
push
pop
fucom
push
and
jg
mov
push
dec
faddl
push
pop
ret
xlat
sbb
sub
dec
xchg
call
roll
addr16
repnz
cmp
shl
mov
add
push
mov
sbb
jns
xchg
jecxz
sbb
pop
sbb
andl
fistl
lret
jg
daa
cmp
mov
mov
test
packuswb
jge
movsl
jns
clc
mov
pop
std
fidivl
dec
dec
movsl
push
cmp
xor
mov
pop
popa
stos
adc
cmpsl
mov
mov
inc
jg
inc
pop
dec
or
into
sbb
icebp
xchg
push
and
cmp
inc
mov
lret
fimull
imul
pop
lfs
test
cs
arpl
imul
xchg
dec
sub
sarl
push
stos
in
pop
xor
push
lods
inc
lcall
lds
sahf
sbb
shl
jbe
mov
pop
adc
lods
hlt
cmp
rorb
xor
in
andl
sbb
test
fcomps
jo
fstpt
push
push
dec
mov
xchg
jp
push
cmpsl
ficoms
mov
pop
mov
cmp
xchg
pop
xor
xchg
sbb
inc
xchg
mov
xchg
sahf
dec
dec
faddl
mov
cmp
mov
lea
xor
movsl
pusha
push
mov
loop
enter
je
jle
adc
divl
test
gs
hlt
inc
add
imul
push
push
aas
xor
aaa
movsl
out
jp
dec
mov
mov
push
push
jno
xchg
mov
sbb
pop
cs
xchg
pop
lcall
pop
ret
push
pop
ljmp
cmp
inc
gs
sti
add
add
inc
lock
mov
mov
pop
add
mov
xor
xlat
pop
xor
and
imul
aam
add
lcall
push
loop
mov
rcrl
push
and
push
clc
fs
pop
test
or
cmp
inc
dec
sarl
mov
mov
movl
xchg
fnstsw
xor
sub
aad
mov
xor
xchg
and
xchg
jg
lock
mov
in
sbb
fdivr
mov
stc
jne
aad
das
xchg
pop
ret
out
out
cltd
fldenv
xor
fmull
ljmp
cmpsb
mov
stos
addr16
in
fcmovnb
mov
adc
outsb
ds
sbb
lods
push
movsl
shrb
mov
movsb
test
movsl
loop
push
inc
xchg
call
sub
repnz
cmp
pop
aad
adc
sub
es
fdivrs
int3
gs
jp
adc
xchg
insl
imul
mov
adc
mov
inc
lret
and
xor
hlt
ds
xor
roll
ret
sbb
leave
test
fisttpl
cmp
int3
adc
mov
shlb
push
lret
sub
xchg
mov
xchg
js
push
mov
lods
push
pop
add
mov
cmp
jmp
xchg
mov
test
xchg
repnz
sbb
pushf
test
fldlg2
lea
ljmp
leave
add
ror
adc
mov
andl
mov
sbbb
ss
clc
stos
inc
sub
xchg
js
add
repnz
fdivrs
mov
jbe
pop
jno
clc
jb
jb
leave
push
test
fmuls
xor
push
dec
sbb
andb
pop
xlat
add
push
push
cmp
sbbb
or
push
into
movsb
stos
iret
mov
inc
jp
scas
jg
leave
ds
in
repnz
adc
fiaddl
mov
es
lahf
movsl
xlat
mov
inc
outsl
push
mov
lret
or
pop
push
das
js
jae
test
ja
cli
clc
loopne
in
push
hlt
push
inc
xchg
enter
push
pop
mov
fisttps
stos
pop
or
push
fcompl
mov
pop
push
out
sti
in
in
and
xor
sarl
outsb
inc
jbe
xchg
test
add
std
xchg
or
sub
jno
add
stc
stos
add
mov
xchg
add
shlb
outsb
in
fsub
mov
sarl
clc
lahf
xor
adcb
push
mov
out
push
sbb
pop
outsl
xor
xchg
ret
push
fdivrs
jo
or
dec
add
add
mov
or
int
stc
std
dec
lret
mov
cmp
xor
mov
lods
mov
push
popa
cli
and
sbb
mov
push
notb
shll
or
cmc
jo
xchg
inc
pop
pop
xchg
adc
xchg
stos
fcmovnbe
loope
adc
aam
into
jb
lret
test
iret
mov
ljmp
dec
mov
xor
mov
mov
lahf
push
test
sbb
or
out
loop
jns
arpl
fucomi
clc
or
xor
mov
or
andb
sarb
xor
xor
jo
cltd
mov
xchg
mov
sub
xor
out
ss
outsb
leave
sub
imul
or
xchg
push
jmp
movsl
sahf
andl
jp
and
adc
or
clc
pop
cltd
rorb
movsl
sub
fwait
or
pop
shrb
cltd
outsb
lods
in
adc
jnp
cmp
xor
xchg
and
call
inc
mov
xchg
popa
adc
xor
shrl
std
ja
stos
jl
dec
sub
mov
mov
sbb
out
test
in
hlt
mov
mov
sbb
add
cmp
jmp
leave
pop
test
inc
ret
cmpsb
data16
mov
inc
ficoms
imul
cld
in
adc
xlat
xchg
push
pop
bound
xchg
icebp
lock
test
dec
inc
daa
lock
js
mov
aad
lock
add
mov
imul
xor
scas
pop
test
cmp
add
pop
cmp
lds
or
mov
ret
dec
sarb
push
pop
outsb
mov
leave
lret
add
fbstp
ret
daa
mov
push
inc
mov
or
jle
fwait
cmpsb
in
pop
dec
lret
or
xchg
and
insb
push
outsl
outsl
push
xchg
push
aas
mov
fs
fidivrs
add
in
call
cmp
push
imul
pop
jg,pt
es
mov
pop
cmpsl
pop
push
push
push
mov
or
add
insl
cmp
repnz
aam
mov
mov
mov
xchg
sbb
mov
iret
inc
lea
xor
sahf
lcall
xchg
pop
inc
and
sub
cmp
rcl
in
lret
mov
call
fldt
push
cmpsb
push
test
add
mov
lock
xor
and
push
in
popf
cmp
and
pop
bswap
test
cmp
mov
add
mov
loop
sbb
sub
xchg
xor
in
xor
into
gs
and
inc
push
dec
icebp
clc
fcoml
xor
jecxz
adc
test
push
push
loopne
xchg
insb
mov
jge
loop
std
push
jmp
cmpsb
push
pop
xchg
mov
int3
lds
adc
les
jae
lock
test
out
and
ret
rorb
cli
stos
fwait
repz
icebp
or
cmp
popa
shrl
lea
fsubrs
ljmp
pop
mov
je
test
cmpsl
fstpl
in
mov
sub
lods
xor
stc
and
insb
dec
lds
push
sbb
cld
pop
jecxz
adc
and
pop
std
cmp
lods
addr16
arpl
and
mov
shll
xor
aam
bound
dec
aas
pushf
mov
adc
ret
out
cmpsb
pusha
scas
mov
pop
add
sub
sbb
fcompl
mov
adc
pop
add
push
sbb
sub
push
push
in
jb
not
ss
jae
cltd
aad
xor
imul
pop
mov
fcomip
mov
or
popa
leave
in
sbb
and
xlat
cmc
lahf
js
mov
jge
xchg
mov
jno
pminsw
pop
cld
inc
jo
movsl
in
jecxz
mov
jb
xchg
ja
jg
cmpb
imul
xor
data16
and
xchg
int3
jecxz
dec
jbe
pusha
lcall
or
jne
sub
inc
push
js
fmuls
cmp
call
sar
mov
hlt
cwtl
sbb
jp
lods
dec
rcr
adc
fucomp
test
std
test
mov
shll
adc
jno
rcll
push
pop
mov
ljmp
repnz
testb
aad
ss
mov
xor
je
xlat
lret
pop
outsb
mov
sub
adc
cmp
lods
mov
jae
add
mov
flds
stos
es
popf
add
aaa
inc
or
popa
add
icebp
mov
and
dec
rcrb
imul
mov
orl
out
imul
popf
adc
fnstenv
mov
out
outsb
mov
clc
and
lcall
sbb
loope
and
xor
call
adc
mov
pop
sub
clc
xchg
push
dec
insl
sub
dec
nop
xchg
int3
xor
adc
adc
mov
outsb
fwait
pushf
or
test
jg
fsubr
inc
in
pop
lds
sub
lods
iret
js
add
out
push
mov
xor
stos
test
repnz
icebp
push
mov
push
lret
repnz
in
lret
dec
fstpt
out
push
sub
xorl
idivl
dec
shl
imul
cmpl
dec
pop
lock
inc
imul
xlat
cmp
iret
stos
jne
adc
jmp
or
pop
rcll
dec
lret
ret
pop
das
sub
jg
out
js
icebp
xchg
sub
sbb
shrl
pusha
mov
js
mov
sbb
repnz
jle
mov
mov
fisttpl
push
and
pop
mov
mov
in
jecxz
sub
lret
push
inc
add
loope
std
scas
inc
loopne
cli
data16
imul
sti
xchg
dec
fcomi
lret
pop
int
jbe
jno
push
jg
pop
bnd
testl
test
mov
xor
inc
movsb
std
out
cwtl
out
mov
inc
lahf
iret
into
xchg
repz
shr
jmp
loopne
mov
jno
inc
xor
ficomps
xor
shl
push
push
sub
sub
fxch
fcompl
mov
adc
and
ljmp
repnz
lds
int3
stos
sbb
test
mov
outsl
sbb
ret
dec
js
xor
outsb
lods
les
mov
sbb
push
das
mov
cli
jmp
push
mov
add
jno
inc
sbb
xor
out
cmp
cmpsl
jb
addr16
cli
or
mov
nop
cltd
jmp
scas
mov
in
imul
push
adcl
mov
jae
ret
jae
xchg
adc
sub
sarb
jl
loop
aad
outsl
cmp
add
and
xchg
data16
push
aam
sbb
enter
sub
adc
pop
sub
lods
mov
shl
jb
push
sahf
rcll
out
arpl
in
jne
movsl
push
xor
and
aam
ds
pop
outsl
and
and
jg
mov
xor
fcoms
mov
je
fisttpll
dec
cmp
pop
and
sbb
lock
inc
pop
ret
es
xor
jno
repz
and
aas
out
iret
jl
clc
es
cli
jl
mov
cltd
popa
mov
outsb
outsb
inc
mov
push
sar
lahf
fstpt
sub
mov
sahf
ret
aas
jo
aam
roll
mov
add
ja
ret
lods
fidivl
xor
add
cld
lods
and
mov
cli
sub
push
ret
push
aas
out
mov
out
inc
add
mov
aam
loopne
mov
gs
dec
sub
imul
fcomps
and
pop
dec
sbb
test
mov
ja
adcb
incb
jg
inc
jne
mov
and
daa
cli
fidivrs
out
test
decl
jne
adcl
std
xor
cmp
add
fldt
fcompl
shl
cmp
push
mov
lock
xchg
clc
pop
jmp
ljmp
sbb
pop
adc
sub
pop
aad
push
movswl
add
jmp
fists
das
add
scas
mov
cs
rcr
aam
bound
sub
lret
xor
lahf
cmp
ficomps
in
test
mov
pop
mov
or
push
imul
dec
sahf
dec
xchg
push
lcall
mov
hlt
xchg
aaa
push
jge
aaa
xchg
or
adc
jle
movsb
outsb
out
and
dec
outsb
shr
pop
jb
sbb
cmp
pop
sbb
jle
mov
mov
xchg
or
stos
pop
dec
cmpsb
cmp
dec
sbb
mov
and
jle
cld
in
repz
xor
cmp
dec
mov
repz
aam
roll
nop
push
jl
push
lret
adc
and
pusha
das
bound
pop
or
fisttpl
ja
data16
cli
jmp
or
mov
sahf
out
enter
cmp
frstor
test
les
subb
adc
ret
fldcw
add
out
nop
add
or
ficompl
fbstp
pusha
jne
iret
jae
pusha
das
dec
out
jmp
je
dec
or
in
loope
test
repz
cmc
mov
push
xchg
insb
outsl
dec
inc
inc
push
mov
scas
movsb
sahf
lcall
push
sbb
xor
aas
shrl
dec
and
pop
imul
imul
jl
jmp
jle
lods
aam
pop
mov
push
rcl
cltd
xchg
add
mov
aam
push
mov
test
ljmp
loopne
test
dec
ljmp
cwtl
enter
sub
in
cwtl
mov
in
daa
inc
in
or
sub
xchg
jmp
mov
dec
nop
cmp
ds
xchg
cmc
xchg
shlb
mov
xor
add
xor
pusha
xchg
dec
aas
cmp
sub
xor
push
or
stc
fdivl
adc
mov
cmp
mov
sbb
and
lea
xor
push
sub
adc
pop
mov
push
dec
pop
jnp
enter
orb
sbb
add
jecxz
sub
push
inc
clc
in
aas
out
sub
leave
lea
jge
aas
repz
pop
or
arpl
xor
hlt
sbb
into
test
daa
add
ficompl
xorl
jmp
imul
icebp
ss
or
in
lret
sub
aam
dec
in
leave
mov
mov
pop
mov
mov
ret
test
pop
push
mov
leave
and
negl
xor
sub
fwait
pushf
or
mov
xchg
iret
icebp
inc
mov
scas
imul
push
ret
add
gs
or
jmp
in
xchg
movsb
daa
cmp
fsubl
mov
dec
dec
push
movsl
xchg
cli
cmpsb
jge
push
icebp
xor
subl
out
dec
jmp
xor
ljmp
add
test
shr
out
mov
xchg
call
xchg
cmp
xchg
push
test
mov
jg
clc
inc
jbe
out
inc
sub
loope
mov
inc
stc
aas
and
adc
imul
sub
fildll
ficoml
jle
rcrl
lds
adc
xchg
stc
jle
adc
cmp
fisttpll
ss
outsb
sbb
gs
cmpsb
fdivp
pop
mov
xchg
insl
xchg
or
or
jno
sar
inc
push
nop
rcrb
int3
rclb
push
adc
stc
es
lods
pop
cmp
xchg
push
repnz
scas
add
pop
ss
push
inc
in
xchg
and
inc
add
xchg
mov
jns
mov
jae
pop
idivb
jo
outsb
movsl
mov
fimuls
mov
pusha
jnp
ljmp
cld
mov
cmp
mov
sub
addr16
adc
in
scas
xor
add
imul
jnp
stc
inc
mov
pushf
cmc
cmp
mov
mov
packsswb
loopne
and
enter
es
das
aas
fbstp
mov
test
or
mov
adc
pop
pmullw
test
xchg
mov
pop
cmpsl
sti
or
rorl
popa
xlat
sti
cmpl
mov
push
aad
shrl
or
sti
shll
stos
ljmp
add
int
add
cmp
mov
sub
mov
or
push
mov
push
add
xor
cmp
dec
rsm
js
pop
mov
ja
add
test
mov
jbe
pusha
adc
xor
movsb
test
mov
fistl
in
xchg
mulb
sub
add
dec
or
into
cmc
clc
mov
add
cmpsb
loopne
aas
ss
and
nop
or
les
xchg
sub
mov
sub
add
xchg
xchg
add
cmc
fisubs
iret
repnz
out
dec
sbb
popa
jge
push
ja
push
clc
in
scas
jmp
add
adc
pusha
cltd
cmp
fwait
xor
or
xchg
push
inc
xchg
mov
lret
add
add
push
in
pop
sub
lret
push
jns
stos
xor
dec
das
sbb
xchg
jp
inc
stos
and
push
ret
mov
push
cmp
jae
ss
pop
jo
or
negb
pop
loopne
insl
xchg
call
push
inc
popf
jbe
jg
stos
push
inc
add
pop
xor
jge
out
mov
shrb
and
ds
bound
pop
jecxz
sub
xorb
adc
mov
out
inc
rorb
jae
mov
lods
fsts
fiadds
inc
and
push
push
xchg
adc
push
repz
fcmovbe
cmp
ja
mov
roll
xor
push
xchg
sbb
in
adc
cmpsb
mov
scas
pusha
sbb
add
mov
out
jne
or
bound
rcl
cmpsl
pop
test
scas
dec
jb
or
aad
add
rcll
sbb
sbb
cmpsl
lea
stos
sbb
adcl
mov
repnz
pop
ret
xchg
mov
xlat
push
out
mov
inc
mov
jne
aam
add
scas
mov
pushf
add
lea
std
or
arpl
adc
xchg
loop
ret
pop
dec
jns
in
xchg
es
jmp
in
rcrb
jno
repnz
xor
mov
stc
bound
aaa
int
dec
in
lods
dec
ds
xchg
sbb
jmp
repz
andb
xchg
fwait
inc
mov
jecxz
or
cmp
push
push
loop
pop
sub
fcomp
test
jge
sub
cmp
enter
sarl
jae
movsl
hlt
js
dec
pusha
cmc
mov
jle
inc
pop
leave
mov
sbb
stos
psrad
leave
pop
sbb
in
fmuls
arpl
pop
pushf
aas
hlt
je
push
push
ljmp
xchg
jg
push
inc
mov
adc
call
mov
lea
jl
subb
fildl
int
pop
push
iret
bound
les
sbb
icebp
jecxz
mov
cmp
pop
sub
fwait
pop
fistl
or
lcall
or
daa
mov
insl
aad
add
lret
cmp
xchg
in
xor
mov
lods
inc
enter
adc
xchg
sbb
sarl
repnz
pop
fisubrl
stos
mov
call
cmc
xchg
pop
dec
mov
loopne
xchg
shll
mov
push
aam
fcompl
ret
insl
imul
mov
pop
into
sbb
pop
jns
popa
out
loopne
mov
mov
sbb
addr16
test
adc
imul
dec
fistl
add
cmp
jge
inc
je
pushf
sub
iret
mov
fcmovnu
vpcmpeqb
mov
outsb
pusha
or
aad
jno
jl
jmp
into
push
jge
scas
lock
repz
xchg
sbb
xchg
jae
mov
movq
rcll
inc
arpl
mov
mov
cld
add
lea
cmp
jmp
xchg
sbb
lcall
insl
in
icebp
in
in
bound
ljmp
mov
ret
jmp
into
in
cmpsl
cld
in
lahf
movb
hlt
mov
gs
ljmp
xor
inc
es
sub
add
lret
mov
cmpsl
loop
insl
adc
out
scas
inc
mov
pop
dec
test
xchg
dec
inc
jnp
out
popf
xor
pushf
fs
movsb
dec
outsb
or
shrl
cmpsl
ficomps
int
stos
and
sbb
cltd
inc
pop
pop
dec
ds
mov
aas
push
mov
jno
and
rclb
lock
fbstp
push
sub
or
lds
sti
dec
addr16
and
enter
aad
aaa
mov
adc
xchg
addb
xchg
mov
sbb
lret
pop
xchg
pushf
fcomp
movsb
adc
sub
pop
push
and
jo
sbb
sahf
ds
dec
jns
into
ret
sbb
test
pop
mov
mov
ret
pop
cmp
add
cmpl
shlb
mov
adcb
push
inc
popf
enter
and
pop
cld
into
dec
mov
sbb
mov
pop
inc
mov
jl
xchg
mov
push
inc
dec
test
addr16
or
lods
daa
push
cmc
call
fnstcw
rclb
mov
dec
fsubs
add
nop
inc
xor
and
sbb
xchg
add
insl
pop
addl
cmp
mov
inc
mov
sbb
daa
pop
adc
mov
mov
clc
jmp
out
cmc
shlb
jmp
jmp
jl
add
pop
stos
inc
xchg
lret
les
notl
shll
push
pop
add
cmp
and
jg
and
push
add
cmp
mov
movsb
mov
negl
inc
inc
push
lea
add
and
lahf
mulb
sub
adc
dec
xchg
cmpsl
enter
scas
jne
push
add
jo
sbb
push
andb
cli
cli
push
cmc
mov
int3
adc
mov
and
pop
fistps
ja
xor
cmp
pop
cmp
lret
leave
xchg
std
icebp
in
fadds
push
add
lds
clc
xchg
clc
loopne
dec
outsb
adc
pushf
pop
dec
xor
rolb
aam
mov
mov
stos
movsb
cmp
jle
and
rolb
xor
push
cwtl
adc
rcrl
test
subb
loop
or
les
mov
jle
pop
popa
lahf
mov
fidivrl
loop
or
and
into
xchg
out
test
xor
and
add
std
mov
inc
inc
lods
roll
fcoms
inc
pop
jo
mov
movsb
int
popa
inc
cwtl
mov
mov
sub
mull
sbb
jo
xchg
repz
lahf
scas
shll
xor
xchg
xchg
add
mov
dec
cmp
sub
sbb
repz
pop
outsb
jge
dec
xor
cmc
imul
dec
sub
cld
xchg
sub
cmp
mov
add
dec
cmp
loope
mov
jge
out
xor
leave
iret
sbb
fwait
lods
insb
js
add
movsl
rcl
xor
pop
jbe
jnp
xchg
xchg
pop
cmp
lret
movb
fwait
pushf
lcall
arpl
mov
sub
jne
sub
xchg
cmp
xchg
fwait
repz
stc
xchg
and
or
mov
mov
add
int
mov
mov
add
mov
iret
rep
dec
jns
lods
xor
push
in
lahf
lods
pop
add
mov
xlat
fwait
jge
and
mov
mov
in
decb
shrl
ror
mov
jecxz
mov
pop
push
push
sbb
mov
loop
imul
pop
push
or
sahf
aad
adc
testl
loopne
lcall
popf
mov
mov
fucomi
lock
insb
sarb
xchg
std
icebp
or
mov
mov
rcll
push
mov
or
mov
or
mov
shlb
loop
jmp
out
sbb
or
loope
and
out
mov
sahf
fiaddl
cmp
jb
jmp
aas
pop
fidivl
sub
sahf
add
loope
loopne
pop
push
stos
push
inc
es
cmp
aad
mov
mov
js
push
inc
mov
mov
les
xlat
fs
mov
gs
push
or
rcrl
loop
stos
mov
jmp
mov
jno
lcall
xor
cmpsb
add
ret
dec
mov
push
addr16
pop
mov
ja
add
xor
shrl
mov
adc
xchg
push
or
add
dec
xchg
or
jmp
xchg
inc
push
cli
neg
push
cwtl
mov
cmp
sub
cwtl
xor
jnp
js
mov
lods
sub
je
mov
sub
mov
dec
shrl
dec
mov
flds
push
stos
push
imul
insb
pop
xlat
dec
movsl
xor
push
dec
leave
and
xor
pop
repnz
mov
test
cmp
xchg
test
push
roll
mov
sbb
pop
stc
mov
stos
cld
jb
insw
add
push
cld
fsubrs
aam
testl
or
pusha
in
mov
repnz
je
mov
adc
adc
lcall
push
sub
pop
jmp
int3
test
aam
xchg
lea
xchg
cli
cmp
xchg
imul
xor
or
sbb
stos
arpl
jge
pop
push
dec
mov
ficoms
push
mov
sbb
jp
lock
sahf
sti
imul
adc
imul
cmp
jg
popf
call
pop
in
jne
addr16
pop
cmpl
cmpsl
lahf
xchg
xchg
dec
ss
cs
sbb
mov
addr16
nop
aad
cli
mov
mov
inc
addl
je
orb
loopw
jg
mov
and
xchg
mov
xchg
mov
inc
stc
dec
testb
aam
cli
repnz
push
les
or
movsb
test
mov
jmp
loop
push
or
sarb
ret
jge
cmp
mov
pop
pop
push
out
out
ret
leave
push
sbb
xor
pushf
nop
and
test
jge
cmp
movsl
mov
jnp
jb
data16
gs
push
pop
sahf
and
mov
push
test
pop
enter
repz
jp
das
mov
outsb
cmc
inc
shrl
xlat
push
nop
push
inc
and
mov
cmpsl
lods
scas
std
fisubrs
bound
sub
xchg
or
jnp
jo
loopne
fdivp
xor
das
pop
clc
or
mov
fcmovb
pop
or
dec
fwait
cmpsl
ds
jno
out
imul
shrb
aas
push
out
outsb
cmp
mov
cs
push
sbb
pop
jmp
sbb
imul
inc
or
mov
scas
jge
lods
pushf
cmp
int
inc
into
pop
inc
daa
scas
mov
jl
inc
lea
xor
cmp
jo
out
push
std
or
jmp
add
xchg
into
mov
inc
jno
repnz
bound
sub
and
push
add
stc
out
out
inc
fadd
addr16
mov
and
mov
pop
rcll
sahf
mov
pop
add
scas
mov
push
fists
inc
sbb
xchg
ja
push
arpl
add
sti
xchg
ljmp
fsubrs
ss
fistpll
loopne
lahf
push
les
dec
add
mov
inc
push
js
jecxz
mov
nop
inc
jno
arpl
jnp
sub
movsl
add
outsl
inc
add
mov
lods
insb
add
insl
and
mov
push
sbb
pushf
outsl
sub
cltd
cltd
mov
push
mov
in
mov
jno
mov
mov
push
fcom
push
xor
out
pop
mov
pushw
cmp
in
jle
pop
or
ja
sub
popf
test
js
add
or
adc
ljmp
stos
sub
in
ja
adc
negb
nop
sub
fucomip
xchg
rcll
cmp
sub
test
in
mov
test
xchg
mov
xor
adc
int
lods
pop
loop
aas
clc
es
mov
jae
outsb
mov
fwait
mov
xchg
cmp
test
int
cmpsl
push
retw
mov
mov
and
jb
xorl
xor
xchg
cmp
dec
mov
popa
aas
or
sbb
stos
popf
push
xchg
pop
mov
pusha
ss
es
or
mov
into
xor
ret
cld
inc
xor
test
aam
sbbb
sbb
xor
dec
sbb
imul
aaa
pop
lock
sti
adc
inc
xor
addb
insb
jno
stc
out
inc
ret
imul
shrl
push
sub
and
xchg
xor
or
in
icebp
jl
cld
rclb
mov
cs
inc
adc
das
dec
sarl
and
adcl
add
and
test
fsubrs
push
adc
ret
push
ss
int
inc
daa
scas
pop
xchg
add
scas
mov
and
push
repnz
in
xchg
xor
push
inc
sarl
sub
in
cmp
jae
jp
xchg
or
or
repz
stos
andl
mov
xor
jmp
inc
dec
fcoml
dec
sub
fstl
aaa
xor
mov
mov
cmp
scas
and
sbb
cmpsl
je
scas
or
lret
push
xchg
mov
xchg
cmp
xor
inc
adcb
xchg
stos
ss
xor
pop
or
mov
cmp
lea
or
fs
leave
dec
sbb
not
mov
mov
fwait
rolb
cmpsb
stos
fisubl
mov
sub
ret
sbb
xchg
xchg
mul
or
dec
lea
pop
fidivrl
inc
shrb
jae
negl
ret
lea
mov
adc
shrl
fisubl
mov
loopne
and
xchg
mov
mov
xchg
ficoml
lcall
stos
sub
jg
in
and
sarb
in
testb
adc
xchg
aaa
cltd
push
mov
popa
inc
add
push
mov
lock
pusha
vcvtsi2ss
mov
push
sub
cs
cmpb
into
mov
mov
and
pop
jae
xchg
in
or
je
mov
push
dec
cmp
insl
sarb
mov
cmpsb
jecxz
stos
sub
jmp
adcb
jge
jnp
xorb
mov
loope
jae
repz
push
xchg
or
gs
andl
fwait
jo
and
mov
rolb
adc
cmp
jnp
in
add
jl
ja
mov
add
flds
fdivs
xchg
sarl
rcrl
js
leave
out
dec
sub
inc
sbb
faddl
fildl
sub
mov
ds
cmp
enter
lds
aad
xchg
push
pop
cltd
stos
insb
jmp
dec
inc
adc
and
jns
cltd
cs
adc
arpl
jl
inc
mov
mov
xchg
xor
dec
rcrb
pop
and
adc
or
cwtl
pop
pop
pop
cmpsb
mov
rorb
mov
jl
out
xor
jmp
jmp
inc
sbb
xchg
sub
jge
movsl
push
fsub
cmpsb
sub
mov
sbb
mov
ret
xor
cmpsl
sti
push
add
mov
insl
add
xor
lds
mov
dec
sbb
push
aas
daa
aam
out
call
loope
in
push
xchg
or
inc
pop
insb
es
mov
mov
sbb
jae
testl
lods
loope
add
jmp
fadds
std
aam
jae
sub
loope
andb
std
jmp
jb
inc
test
xchg
push
sbb
or
xchg
jmp
inc
mov
xor
imul
daa
add
nopl
jmp
and
adc
sti
add
mov
add
imul
popa
cltd
adcb
inc
cmpsl
movl
pop
cmpsb
into
xchg
jne
push
popaw
or
and
dec
pop
mov
jne
sbb
stos
sbb
pop
scas
ds
loop
mov
stc
fimuls
xchg
leave
fimull
add
fcomps
cmpsb
mov
fisttpll
test
popa
imul
xor
cmp
test
jb
call
pop
mov
inc
dec
add
sub
or
std
mov
decb
cmc
jle
mov
cmp
lods
mov
leave
add
push
add
jns
aaa
leave
imul
cmp
jecxz
lea
pop
or
sti
pop
pop
ds
inc
test
pop
rorb
inc
jno
das
mov
int
repz
repz
int
push
and
enter
mov
rcr
and
lods
fldt
sub
mov
test
lret
add
mov
imul
popa
scas
jp
addr16
test
xchg
cmp
mov
mov
xor
ficoms
pop
icebp
jbe
nop
sbb
xchg
dec
in
imull
add
cli
or
roll
loop
xor
dec
push
loopne
sbb
xchg
ds
jge
mov
inc
pop
lods
mov
dec
les
mov
gs
popf
mov
or
mov
push
cmp
xchg
inc
cmp
stc
add
xor
mov
add
xchg
push
aas
icebp
js
mov
inc
lea
xor
and
shr
xchg
pop
ja
decl
rcl
add
lret
ss
push
in
ficomps
jmp
dec
adc
mov
stos
add
pusha
addr16
into
imul
or
push
data16
mov
outsl
ret
mov
ret
mov
xchg
test
rcrb
test
push
xor
inc
and
jle
out
icebp
scas
aad
int3
cmpsl
dec
sbb
xor
fidivrl
mov
or
fldenv
pop
lret
out
inc
jmp
iret
sbb
and
pop
or
icebp
in
aam
fnstenv
ljmp
mov
mov
jle
inc
pop
or
leave
mov
and
test
stos
jo
cmpsl
subl
xor
test
inc
and
pop
fmulp
outsl
or
or
test
sub
push
insb
ds
xor
lods
adcb
jb
in
mov
mov
pop
rol
lock
mov
outsl
stos
test
es
mov
jae
stos
aam
mov
push
mov
push
fstp
lret
iret
addr16
mov
scas
daa
inc
cmp
test
or
fiaddl
repz
push
pusha
xchg
call
dec
jmp
xchg
pushf
mov
pop
pop
push
mov
dec
hlt
and
pop
data16
insb
aad
dec
jno
sub
cmp
push
xor
mov
outsb
je
add
sub
cwtl
mov
cmp
stc
adc
and
ljmp
xchg
hlt
cmp
popf
pop
add
mov
push
sub
mov
insb
mov
push
add
hlt
adc
int
push
gs
lods
push
sub
int3
stos
push
xchg
sub
fcmovbe
pop
and
push
cwtl
sub
xchg
jbe
inc
cltd
cmp
out
fnstcw
mov
or
test
cwtl
push
push
sbb
push
mov
js
mov
inc
imul
add
in
ja
or
icebp
and
sub
rolb
mov
lcall
mov
ffreep
pop
cltd
adc
es
and
xor
add
outsb
inc
fisttpl
xchg
rorl
movsb
inc
into
sub
shl
ss
imul
jne
loop
shll
jmp
sub
inc
sbb
insl
cmp
sbb
scas
je
addr16
xchg
nop
sti
or
out
ja
test
fwait
aad
sbb
mov
xor
stos
lds
mov
jl
push
in
fs
pushf
out
add
push
sub
loope
mov
cmp
imul
pusha
fmul
xchg
shr
mov
jle
cld
out
clc
fbld
jp
cmp
adc
sub
ret
or
xor
out
jl
icebp
loope
repz
push
repnz
inc
xor
lods
dec
jp
not
arpl
or
clc
pop
into
std
mov
repnz
inc
repz
insl
roll
push
jo
dec
enter
pop
or
push
aad
testl
iret
shl
and
sbb
or
adc
aaa
fidivrs
shrl
push
add
mov
jmp
loopne
cmpsb
mov
dec
mov
popf
cmp
hlt
pushf
adc
pop
dec
mov
mov
mov
out
jns,pt
int3
add
cli
jae
sub
jecxz
sbb
lret
and
pop
jnp
cmp
js
test
pop
push
xchg
inc
add
sub
sbb
inc
cwtl
sarb
mov
pop
mov
dec
jne
imul
jno
out
lcall
repnz
push
adc
jbe
jne
inc
movsb
hlt
mov
dec
add
loop
sti
inc
mov
xor
aad
dec
inc
jp
out
jbe
scas
dec
test
loope
push
xor
out
cltd
sbb
insb
dec
jge
icebp
nop
stc
dec
adc
out
scas
cmpsl
es
or
cwtl
adc
ret
dec
icebp
mov
inc
and
jae
xchg
ret
scas
jo
ret
push
mov
scas
mov
lods
lret
fsts
in
ja
cmp
dec
daa
xor
popf
jmp
cmp
rcr
jne
sti
mov
mov
bound
adc
test
fisubs
jmp
jno
lcall
insl
mov
xor
in
sbb
or
out
add
xchg
es
jge
cmc
jge
insb
adc
sbb
jl
in
jb
or
push
dec
inc
mov
adc
pop
into
jne
mov
sbb
xor
adc
push
jecxz
inc
jmp
movsl
mov
sub
pop
ret
dec
xor
mov
shrl
jns
fcmovu
jecxz
add
stc
jbe
adc
ret
subb
dec
jmp
inc
out
jmp
mov
cmp
scas
or
cmp
push
jb
loope
and
dec
jo
in
mov
mov
pop
imulb
fsubs
arpl
popa
scas
lds
js
push
loope
mov
lods
icebp
mov
xchg
imul
cmp
sbb
dec
push
push
mov
and
cmp
sbb
stos
notl
lret
enter
mov
into
sbb
cwtl
das
lcall
imul
rep
insl
mov
mov
sub
or
mov
in
jmp
fstpt
add
scas
or
in
xor
cmpl
or
dec
push
mov
loop
jecxz
insl
scas
push
insb
mov
sbb
add
mov
and
jle
xchg
lds
push
scas
cmp
addb
push
shrl
pop
inc
imul
lods
mov
dec
xor
or
add
pop
lss
push
mov
mov
mov
packssdw
xchg
clc
movsl
into
sub
int
mov
out
sbb
sub
pop
rorb
movsl
mov
mov
movsl
adc
push
mov
pop
ljmp
pop
rcll
fidivl
or
and
mov
imul
mov
icebp
cmc
ror
jecxz
mov
jecxz
add
mov
cmp
fdivp
pop
inc
pop
in
imul
jle
push
js
setle
mov
or
push
les
ja
fsubrl
adc
mov
rcrl
clc
test
mov
or
in
int
xchg
pop
out
divl
push
inc
or
mov
and
fnsave
lahf
cmp
xchg
jg
or
in
xchg
stc
subb
nop
pushf
dec
dec
js
pusha
outsl
jecxz
add
or
clc
outsb
ret
mov
xorb
cli
pop
lock
nop
fwait
jb
push
xchg
sub
xor
idivl
pop
mov
lods
push
jns
out
movb
xor
adc
int
test
sub
lock
aaa
push
cmp
push
push
sbb
pushw
ja
jnp
sub
mov
out
dec
loope
js
pop
xchg
cwtl
roll
inc
xchg
pushf
or
lea
pop
lods
cs
mov
rcll
jno
rcr
mov
inc
hlt
push
xor
add
ret
or
pop
xchg
shrb
jae
rol
scas
fwait
xor
mov
cs
movsb
push
in
mov
popa
xchg
add
push
mov
das
mov
dec
scas
and
pop
inc
push
leave
repnz
add
inc
mov
popf
cmpsw
fmul
mov
sbb
mov
movl
decb
ret
in
or
les
mov
and
adc
stos
lds
movsb
or
jbe
cmp
pop
pop
lds
xor
in
stos
fnstenv
xchg
adc
out
and
jecxz
pop
xlat
std
or
pop
enter
out
push
les
cmpsb
xchg
sahf
dec
int
wbinvd
popa
mov
mov
loop
scas
pop
ficoml
outsl
dec
mov
inc
jo
jne
ret
jmp
data16
sbbl
movsb
into
int3
dec
shlb
or
imul
out
daa
out
cmc
or
push
out
rol
and
cmpsb
dec
icebp
sub
push
push
repnz
inc
fsubrp
loopne
cmc
jl
sarb
xor
dec
or
pop
push
popa
add
push
int3
or
push
in
int3
jno
mov
adc
stc
add
jnp
inc
jl
jmp
or
push
frstor
in
cmp
cwtl
cmc
and
xor
xchg
fidivl
pop
pop
loopne
mov
push
sbb
push
lahf
add
adc
sbb
mov
inc
mov
addr16
dec
scas
test
or
outsb
fxch
mov
mov
or
sbb
pop
xor
test
dec
mov
xor
jle
aas
xchg
jne
push
mov
pop
repz
out
loop
test
xchg
mov
sub
push
sbb
ret
or
mov
fwait
mov
xchg
fwait
push
and
inc
mull
dec
jnp
ljmp
cmp
lcall
nop
add
ja
sahf
sub
adc
inc
iret
movsb
js
adc
xor
lock
jo
xchg
push
in
push
int
dec
lds
or
in
lock
dec
mov
and
xlat
dec
adc
fs
xchg
inc
iret
xchg
insb
mov
or
cmp
xchg
sub
cmpsl
sti
or
mov
sbb
lock
xchg
sub
and
mov
cli
pop
pop
and
cmp
push
dec
loopne
jbe
icebp
iret
sub
and
outsl
xchg
or
jnp
inc
fdivp
imul
mov
aad
jp
mov
popf
sub
add
pop
inc
js
out
cltd
pusha
cmp
ja
int3
shll
mov
cwtl
mov
fwait
sub
mov
insb
in
ficoml
ss
xor
sar
pop
aas
lods
ret
and
fucomp
dec
fadd
push
imul
xchg
push
bound
xor
wrmsr
mov
inc
call
xchg
popa
adc
xlat
orb
mov
pop
ljmp
jno
inc
mov
iret
adc
adc
sub
mov
sti
xor
sbb
int3
push
pop
std
icebp
or
out
sbb
test
pop
mov
mov
or
fildl
xchg
push
sbb
adc
adc
and
nop
cmpsb
or
int3
sub
sti
push
and
lcall
inc
inc
adc
das
jg
js
pop
and
ja
pusha
xchg
bnd
aad
in
int
call
rclb
xchg
mov
jb
hlt
xchg
mov
jmp
cmpsb
pop
pop
les
roll
push
inc
lock
cmp
roll
pushf
dec
addr16
inc
cltd
push
sub
sti
test
sbb
gs
jge
xor
xchg
xorl
mov
cltd
lahf
cmp
xor
lret
pop
jp
inc
inc
cmp
jecxz
rcrb
add
xchg
sbb
sbb
lahf
mov
sbb
sbbb
dec
icebp
sbb
movsl
fcomp
push
inc
sbb
popf
pop
push
lods
jne
mov
divl
rorl
ja
lock
test
imul
xchg
rcll
int3
fistl
in
jo
inc
jmp
inc
rorl
adc
jmp
out
pop
jbe
les
jg
pop
cwtl
bound
cli
cwtl
std
adc
mov
adc
mov
mov
lea
inc
push
cmp
inc
push
ret
lock
mov
jne
in
sub
inc
ja
popa
mov
push
mov
shr
mov
sarb
jle
leave
or
dec
insb
aaa
arpl
mov
pushf
xchg
mov
mov
push
lret
test
mov
arpl
outsb
push
cmp
mov
test
rcrl
test
and
mov
out
scas
mov
sbb
icebp
test
xor
cmpsl
and
mov
pop
aas
lods
sub
mov
or
lret
out
into
pop
imul
inc
jne
mov
sub
shrb
pop
mov
dec
incb
out
fdivr
pop
cmp
adcl
jns
lock
je
js
mov
iret
cmp
and
xlat
pusha
fsubrs
addr16
in
fwait
pop
sbb
jns
sub
fistpll
arpl
insb
sti
jne
iret
xchg
insl
lret
xlat
push
dec
std
mov
jp
and
les
pop
call
add
lds
push
fbstp
int3
lcall
jmp
movsb
and
jbe
out
cmc
cwtl
jle
rcrb
inc
dec
ja
addr16
out
hlt
mov
cmp
inc
xchg
mov
mov
sub
pop
xchg
scas
jb
sbb
cltd
cmc
xlat
and
test
imul
and
jae
fcomp
add
push
std
cmp
sbb
movsl
xchg
dec
cmp
mov
inc
mov
cmpsb
and
mov
scas
cs
mov
add
movsl
push
mov
and
test
repnz
les
adc
push
mov
call
push
insl
push
jne
cmp
vmptrst
push
subl
fnstcw
movsl
add
ret
cmp
inc
sub
mov
mov
dec
outsl
out
out
je
pushf
mov
xchg
pop
insb
sbb
xor
int
in
lret
imul
cmc
or
mov
aad
cs
stos
inc
cld
mov
bound
mov
or
add
mov
out
xor
lock
in
push
fs
push
dec
mov
repz
jae
pop
cmp
fidivrl
sbb
mov
sub
adc
std
add
jmp
adc
mov
fnsetpm(287
bound
add
sub
leave
imul
add
pop
iretw
xchg
add
loop
out
aad
xchg
out
jbe
adc
jmp
imul
xchg
and
adc
mov
adc
xchg
cmpsb
dec
ficoml
mov
push
cld
adc
mov
cmp
jmp
pop
cmp
push
loopne
xor
cmc
jne
pop
sbb
push
push
mov
mov
das
xchg
mov
xchg
sbb
inc
out
je
jo
mov
test
inc
inc
xchg
xor
sarl
jl
dec
movsl
outsl
dec
andl
and
pop
dec
flds
fmull
lea
mov
femms
fildl
or
mov
repz
fs
dec
je
aas
push
pop
mov
adc
les
into
inc
jg
in
aaa
ret
and
cmp
fs
sarb
fbld
nop
in
pop
in
int3
pop
jecxz
imul
push
xchg
mov
mov
rclb
adc
mov
or
jnp
scas
ret
cmpsl
fcomps
adc
mov
xchg
ds
std
or
adc
pop
or
fwait
sbb
dec
out
das
mov
lea
jl
ljmp
and
or
imul
mov
push
xchg
ljmp
adc
pop
scas
jno
in
ret
les
cmpsl
and
lcall
cmc
subl
loope
and
ret
ret
mov
loop
cmp
stos
mov
bound
addr16
push
rcll
aad
jmp
clc
fnstsw
cmc
dec
in
jle
shll
mov
aam
outsb
sub
mov
into
dec
xchg
ja
xchg
pop
mov
icebp
cltd
pop
add
pop
rcrl
or
lock
dec
adc
mov
and
and
in
mov
inc
ret
sub
push
pop
aaa
xchg
xor
push
arpl
mov
jecxz
stos
imul
sti
xchg
repnz
test
inc
push
arpl
jae
xchg
hlt
mov
and
cld
pop
add
jl
pop
jp
mov
sbb
adc
data16
mov
stos
push
mov
pop
pop
mov
ja
or
push
outsb
fisubrl
xchg
faddl
inc
dec
adc
insl
mov
add
inc
lods
sbb
mov
cmpsb
push
into
aad
loop
outsl
cmpl
mov
pop
inc
mov
mov
inc
or
add
and
sub
jle
out
or
xchg
xchg
inc
pop
lret
fwait
pop
xor
test
jne
xlat
sub
mov
fsubrl
xchg
and
insl
fldenv
lods
sarb
add
stc
cld
mov
or
out
inc
or
or
das
psraw
fcmovnbe
ret
mov
daa
sarb
inc
pop
dec
in
loopne
cmpsb
mov
scas
push
and
push
fnsave
je
adc
add
add
jle
pop
mov
push
push
pop
rcrb
push
mov
mov
fidivl
rcll
fildl
sysret
cs
popf
adc
mov
imul
enter
repnz
loop
sbb
fistl
inc
inc
stc
jae
cmovns
adc
push
push
sub
and
mov
mov
sahf
shlb
push
or
sbb
fwait
aaa
bound
sub
call
in
test
shll
and
adc
movsb
daa
movsl
shrl
push
mov
mov
cmpsl
sbbl
mov
idivl
xorl
push
out
fmul
sbb
out
dec
inc
lcall
xchg
push
lock
sbbb
fldl
rorl
fmuls
sub
push
ret
cmp
pusha
mov
pop
sbb
ss
fisttps
jmp
shl
adc
ss
cltd
rolb
cmp
ficoml
in
jp
js
shlb
mov
outsb
xor
xrelease
decl
pop
mov
arpl
mov
test
push
hlt
outsl
out
adc
fidivl
or
movsb
inc
mov
push
pop
sqrtps
pop
les
into
nop
ss
fwait
les
js
mov
addb
push
in
sub
aas
xor
repz
jmp
push
mov
leave
sbb
mov
inc
or
jle
pop
dec
or
and
pop
xchg
lods
cmpsb
push
in
fwait
pop
lock
int
pop
out
notb
xchg
fwait
push
cld
std
aaa
push
out
ds
mov
xor
shr
sub
dec
scas
push
sub
inc
icebp
test
lock
insb
dec
xor
inc
stos
xlat
fists
jbe
mov
fbstp
daa
jne
dec
scas
mov
jns
pushf
fdiv
int3
es
xchg
or
cs
shl
mov
bound
or
psubq
popl
hlt
popa
shl
xor
xor
scas
outsl
ja
sbb
mov
adc
adc
mov
xchg
pop
iret
shlb
xchg
jns
mov
std
pusha
mov
fsts
ljmp
cmp
out
adc
out
jge
mov
in
inc
mov
sbb
lock
cli
lods
jge
mov
cmp
popa
jbe
sbbb
add
ret
lods
jb
sbb
js
mov
out
or
inc
xor
test
in
nop
test
out
out
je
lds
out
hlt
mov
lods
in
nop
mov
scas
mov
push
test
fstps
jbe
or
inc
sub
sub
push
mov
jecxz
jae
push
addl
jle
iret
cmpb
fwait
and
repnz
cld
scas
or
arpl
into
ret
cld
aaa
jo
pop
insb
inc
xchg
je
repnz
movsl
enter
push
lods
lret
pop
adc
mov
bound
outsl
test
mov
fldl
aaa
xlat
mov
nop
jge
sahf
sbb
jl
push
sub
movsl
mov
popf
jmp
sbb
sbb
dec
ficomps
lea
inc
insl
push
and
jge
xor
lock
push
pop
xor
pop
fistpl
jbe
into
int
lretw
arpl
jns
lods
sbb
adc
mov
fsubrl
sarb
jl
xchg
jl
nop
test
ljmp
sbb
pop
xor
add
mov
and
not
sbb
shlb
fistpl
ljmp
pop
addr16
dec
xchg
jp
mov
mov
fmull
stos
cmp
fs
lret
push
jo
lret
or
psubusw
lods
and
movnti
dec
lock
xchg
stos
fisubl
sub
nop
hlt
mov
subl
sbb
mov
or
xchg
mov
loopne
mov
and
mov
dec
sbb
jb
and
stos
dec
cs
ljmp
adc
lods
xor
push
sahf
sub
and
iret
popa
inc
in
mov
xor
sbb
arpl
mov
je
loopne
dec
adc
into
loop
cltd
insb
insl
cmp
add
jae
inc
mov
fiaddl
inc
call
cmp
loop
repz
mov
or
xchg
inc
pop
cli
insl
iret
mov
inc
in
dec
push
lret
mov
xchg
xchg
xchg
mov
fcomps
nop
ret
clc
xchg
jno
and
pop
imul
jno
mov
add
inc
out
sbb
cmp
jns
out
sub
popf
sub
icebp
dec
dec
sub
lock
sbb
add
outsb
inc
cmpsl
jge
ja
aam
test
rcll
xchg
sti
insl
inc
dec
xchg
and
fcmovnbe
data16
jb
in
lds
arpl
fucomip
add
jecxz
into
sbb
pop
aas
lds
mov
fstl
dec
lods
sub
out
mov
push
repz
mov
mov
push
mov
jne
dec
push
ret
fcoms
sub
aas
imul
fiaddl
testl
movsb
add
lods
movsl
iret
pop
add
mov
ljmp
xor
mov
mov
int
dec
stos
aaa
clc
sarb
sbb
xchg
insb
popa
inc
dec
in
movsl
mov
testl
loope
xchg
lcall
in
enter
jne
inc
inc
mov
fsubrl
cmp
adc
out
pop
ja
inc
mov
lret
data16
gs
adc
fbld
stos
push
dec
incl
cmpsb
stos
mov
cmp
mov
inc
dec
mov
xor
js
jno
ret
or
sbb
pop
outsb
vshufps
icebp
mov
xchg
pop
insl
fdivrs
out
pop
rorb
push
mov
aad
cmp
mov
out
sbb
xor
andnps
pop
iret
xlat
push
pop
inc
push
mov
xor
mov
insl
or
je
sub
push
aam
stc
aas
xchg
xchg
adc
addb
lahf
push
testl
and
jp
rolb
lret
adc
sbb
and
das
xchg
sbb
loopne
fdivp
jns
movsl
jl
cld
or
xchg
fildll
mov
inc
xchg
add
pop
fs
aas
jge
dec
jp
push
popa
mov
or
jae,pt
sahf
lods
dec
cmp
sbb
imul
sti
mov
mov
mov
aas
lcall
js
lcall
popa
fdecstp
jg
sub
lahf
adc
mov
push
arpl
push
clc
pop
adc
jmp
pop
push
aam
dec
xchg
and
cmp
push
sbb
xchg
js
and
add
leave
sub
cltd
push
out
cltd
movsl
hlt
xchg
dec
adc
mov
jecxz
outsl
sbb
andb
loop
cs
mov
and
jmp
xchg
xor
test
mov
rcl
shr
xorl
sub
sub
mov
add
repz
mov
dec
lds
or
loop
out
xchg
and
mov
adc
jl
mov
mov
test
xchg
mov
notl
fwait
add
into
pop
faddp
jge
loope
xchg
aas
pushf
scas
and
or
cwtl
pop
mov
pop
cld
or
mov
out
xchg
cmp
pop
pushf
cld
mov
dec
and
popa
xchg
inc
pop
and
popf
cmp
sbb
shrl
mov
adc
in
push
jle
imul
lods
mov
fisttpll
push
add
push
mov
push
jno
and
fidivl
lock
sbb
jb
lret
gs
insl
xor
ds
sbb
pop
xchg
jle
or
add
pop
push
fdivr
mov
xchg
sub
aaa
cmp
add
jle
push
nop
testb
loope
stc
in
inc
add
push
aaa
sbb
enter
xor
adc
fcomp
stos
dec
dec
shl
or
cmp
test
xor
loopne
lea
movsl
pushf
je
out
loopne
mov
sbb
ficomps
or
cmp
fdivr
sahf
mov
cltd
in
jg
and
jo
mov
sbb
xchg
or
enter
test
add
lcall
add
push
sbb
and
test
stc
jb
pop
roll
push
mov
dec
jno
jo
inc
pop
push
loope
sub
xor
dec
shrb
xchg
shrl
fadd
push
fnstsw
inc
aas
movsl
outsb
sbb
jo
mov
subb
dec
imul
gs
add
cmc
mov
pop
xlat
imul
inc
lcall
fidivrl
sbb
rcrl
dec
or
jle
scas
ljmp
mov
sbb
cmpsl
dec
lds
jno
or
out
push
mov
sbbl
lds
lods
mov
leave
xchg
add
cwtl
js
pop
jae
xchg
imul
mov
xor
push
ret
sbb
push
dec
pushf
ljmp
push
add
scas
lcall
cmp
dec
push
daa
mov
fildl
mov
jge
inc
out
in
xor
sti
int
adc
sbb
and
mov
std
fidivl
and
adc
push
fdiv
movsb
dec
and
scas
fldcw
ret
les
fbld
xor
leave
mov
sub
sti
outsl
push
mov
lret
inc
stos
stos
in
mov
pop
xor
ret
shl
pop
rcrb
in
je
and
nop
aas
dec
fidivrl
mov
pop
jecxz
loop
inc
inc
cmp
xchg
dec
xor
and
popf
push
jb
jge
and
hlt
addr16
ljmp
push
push
pop
inc
test
mov
ja
adc
loopne
jmp
xchg
xrelease
fisubl
sbb
lret
cs
fwait
jo
mov
lds
movsb
mov
or
ljmp
push
in
out
mov
dec
inc
int3
adc
xchg
nop
mov
jmp
pop
hlt
cmp
pop
mov
gs
pop
pop
mov
bt
out
mov
adc
jmp
mov
cmp
popf
fcomps
inc
into
cmp
cli
push
aas
or
add
repnz
fstpt
dec
sub
idivb
sub
push
negl
dec
les
mov
mov
xchg
push
arpl
inc
xchg
enter
lret
lock
dec
add
xchg
rcll
jbe
pop
lods
push
mov
sub
mov
stos
aas
out
addl
sub
push
mov
inc
shlb
xchg
bound
leave
pop
bnd
ror
push
lret
cmp
pop
xchg
hlt
adc
popf
ljmp
in
lea
mov
mov
push
hlt
pop
loop
cmpsl
ret
std
pop
mov
daa
sarb
jne
pop
cmp
dec
les
mov
add
inc
push
rcrl
shll
cltd
and
push
mov
rcll
mov
and
insl
and
dec
jne
mov
sbb
in
adc
addr16
outsb
dec
loopne
and
mov
jnp
inc
add
mov
repnz
leave
push
sub
lret
add
imul
jl
ret
adc
push
call
call
adc
nop
cmpb
loope
push
movsb
mov
sbb
jp
add
or
ljmp
lods
loop
fstl
ja
mov
xor
jbe,pn
xor
call
loope
rcrl
enter
aam
mov
sub
jns
fwait
nop
adc
mov
cmpsl
add
test
mov
cmp
shlb
xchg
mov
jl
int
sub
mov
xor
dec
mov
xchg
test
fld
les
push
bound
and
mov
sub
movsl
rorl
adc
fimull
orb
lret
add
aam
sti
jge
xchg
sbb
gs
adcl
mov
sbb
jne
rcl
mov
mov
inc
in
inc
adc
xor
cli
dec
nop
add
cmc
sub
nop
fdivl
test
jb
mov
mov
cmp
cltd
adc
add
lods
and
imul
in
jg
dec
mov
movsl
xchg
sarb
push
movsl
pusha
and
popf
mov
cmp
and
jmp
repz
inc
jbe
and
xchg
dec
in
or
xor
fcmovne
or
rcrl
jg
lret
cld
loopne
aas
in
pop
push
mov
mov
imul
int3
pop
mov
sbb
loope
jg
cmp
insb
cwtl
in
mov
cli
xorb
cs
js
mov
xor
or
aaa
sbb
es
inc
mov
in
mov
popw
inc
lock
pop
and
int3
insb
fadds
popf
lret
insl
sub
push
ljmp
pop
push
inc
push
push
stos
decl
sub
push
stos
sub
repnz
icebp
lcall
shll
mov
sahf
mov
dec
push
cwtl
push
sbb
test
mov
cmpsl
fs
repz
je
dec
int
mov
lds
lret
jb
add
or
test
jb
mov
jge
push
dec
adc
dec
je
les
mov
dec
lds
into
sub
iret
dec
mov
mov
stos
mov
repz
cs
shlb
test
lods
mov
jno
sbb
in
dec
sbb
xchg
shlb
jno
xchg
lds
and
mov
ret
clc
and
iret
test
fbstp
pop
adc
adc
xchg
ja
test
sub
or
sbbl
fs
jae
daa
dec
cld
std
movsl
movb
mov
or
int
xchg
add
andb
imul
or
cltd
addr16
in
xchg
cmpb
fiadds
add
mov
adc
icebp
imul
cmpsb
out
pushf
repz
jns
pop
sahf
bound
sbb
lods
and
cltd
fmul
inc
cmp
pop
mov
xlat
inc
add
sbb
sub
or
mov
cs
popa
pop
push
jp
xchg
jecxz
daa
adc
loopne
and
aad
dec
cmpsb
or
adc
mov
hlt
xchg
in
into
and
jecxz
movsb
shll
push
mov
shrl
jecxz
mov
int3
cld
mov
xor
test
jmp
xor
test
dec
addr16
sub
mov
mov
loop
pop
test
shlb
sub
inc
cmp
jno
outsb
loope
xchg
dec
dec
inc
mov
call
pop
les
sub
dec
cmp
jo
add
cwtl
mov
push
call
mov
cmp
aas
std
jbe
popf
adc
add
and
sahf
popf
test
clc
add
pop
fcoms
dec
push
jecxz
jl
mov
xor
xchg
jae
mov
xchg
pop
mov
mov
aaa
and
imul
sbb
call
mov
out
stc
cmc
pop
jmp
mov
js
lahf
jo
mov
lcall
movsl
inc
mov
pop
adc
addr16
pop
push
jmp
mov
xor
inc
sub
sbb
jnp
inc
and
fadd
xor
popa
enter
and
jl
fmull
xchg
movsb
pop
push
leave
jb
aam
add
ja
shll
xchg
lds
pop
ret
stc
aam
cmp
das
test
aas
into
cmp
fcoml
iret
cmc
sub
mov
in
mov
repz
jg
dec
xchg
xchg
fld
inc
arpl
inc
sbb
jge
repz
fwait
daa
sub
inc
pushf
pop
dec
jne
push
push
insl
and
popa
adc
mov
data16
fmuls
leave
jae
shr
scas
xchg
int3
and
pop
cmpsl
fwait
and
pop
test
test
add
ret
fs
xlat
xor
movsl
xor
sti
mov
mov
inc
fmull
and
mov
cmp
jbe
dec
popa
fadds
lock
push
pop
icebp
scas
jmp
jns
jno
gs
or
push
adc
fadd
inc
jnp
shll
add
bound
shll
and
lcall
inc
jo
rcrb
lcall
mov
rcll
sarb
dec
enter
jmp
mov
jno
add
xchg
imul
repnz
inc
sbb
sbb
dec
sbb
ret
fistpll
lret
fnsave
mov
add
into
ja
adc
push
adc
add
fcoms
popl
popa
jo
xchg
and
adc
push
mov
into
stc
into
inc
inc
cmc
rcll
add
xchg
cld
movl
push
aas
sbb
in
pushf
and
out
sub
rol
rcl
mov
aas
jbe
jnp
mov
fnstcw
pop
add
push
outsl
lret
mov
negl
xor
test
mov
int
jp
jns
pop
sub
jmp
fisubrl
loop
jg
and
mov
shl
movsl
mov
fs
rolb
jge
sub
mov
jmp
xlat
mov
fsubrs
jg
push
dec
cmp
mov
rolb
ds
ret
in
sbb
xchg
les
cmpb
imul
dec
or
add
inc
mov
mull
pop
je
pusha
mov
jge
aas
jg
or
cli
es
arpl
jl
add
add
push
inc
xor
lods
xchg
cmp
mov
inc
sbb
cs
cwtl
push
inc
shrb
rcl
stos
fldcw
pop
dec
stos
fwait
xlat
clc
or
std
mov
shll
cmc
mov
stos
jns
cmc
out
add
xlat
ds
test
std
notb
out
and
add
cld
or
dec
bound
vpandn
addb
sti
ljmp
out
test
popf
inc
cwtl
adc
fbstp
mov
dec
jo
inc
icebp
shlb
mov
sub
jb
mov
jecxz
aaa
xor
adc
pop
cmpsl
aam
shll
fwait
cld
sub
sbb
mov
jecxz
push
in
test
cmp
pop
inc
cmc
add
or
mov
negl
cs
sbb
fsubs
jp
cmc
loop
fmuls
mov
pop
mov
push
mov
push
leave
ds
cmp
bound
mov
mov
add
mov
cmp
mov
in
andb
lock
mov
dec
sbb
pop
ret
jmp
xor
sub
xchg
ss
xchg
lret
jle
push
call
jecxz
inc
insb
pop
xchg
hlt
pop
or
push
add
mov
lcall
mov
insl
xor
mov
std
pushf
jno
fmuls
incl
jge
mov
cmp
pusha
push
mov
inc
fcmove
add
mov
mov
das
out
pop
cmp
rcr
lods
and
cld
leave
mov
je
imul
push
roll
rclb
cmp
test
xor
fldt
and
pushf
cwtl
mov
ret
push
or
push
movswl
mov
inc
mov
mov
mov
out
sahf
sbb
out
loope
lods
push
sub
dec
cmp
in
sub
adcl
lcall
mov
jl
stc
jbe
cmp
sbb
mov
insb
mov
inc
rol
add
or
shlb
add
es
mov
mov
xchg
cmp
xchg
adc
add
inc
jmp
mov
sbb
jb
rcll
sbb
pop
mov
ficoms
test
and
aas
mov
sub
and
cli
and
shrb
add
aaa
and
adc
xor
mov
push
daa
imul
fiaddl
sbb
rcrb
cmp
rcr
push
jne
nop
lds
cmp
shl
xchg
sbb
scas
xor
lret
or
inc
repnz
scas
orl
xchg
add
xchg
sbb
jp
arpl
xor
stc
lret
push
inc
daa
cmc
xlat
sbb
loop
lret
aad
aaa
data16
loope
push
xor
popa
cmc
in
xlat
and
loopne
addl
jle
xchg
sub
sbb
jae
or
push
stos
xchg
cmc
hlt
cli
popa
cli
cltd
cltd
nop
jb
arpl
sbb
mov
scas
lds
lock
mov
push
mov
jmp
cltd
fstl
sarb
loop
xor
movsb
dec
insb
popa
stos
add
or
popa
stos
and
pop
idivl
push
or
mov
subl
mov
mov
imul
pop
pop
sbb
movsl
out
xchg
out
adc
mov
mov
fs
fsubrs
pop
shr
rolb
daa
adc
out
fists
pop
mov
jecxz
mov
dec
andl
xor
xchg
hlt
adc
mov
sub
test
or
push
fmull
fistl
jmp
mov
std
scas
inc
and
pop
sub
push
shll
fwait
lret
stos
pop
daa
pop
mov
jmp
cmpsb
cmp
and
loope
jne
and
or
and
das
stos
add
repz
mov
fs
mov
inc
fidivl
fwait
testl
sbb
cs
cmp
xchg
popa
sbb
pop
xchg
xlat
cmp
sbb
or
add
mov
mov
lods
add
sbb
cmpsb
out
mov
rcrl
inc
lret
dec
dec
in
push
idiv
or
divb
shll
imul
movl
outsb
ljmp
jo
push
ret
fcompl
out
inc
int
enter
pusha
xor
pop
pushf
add
mov
call
push
mov
add
mov
mov
movsl
pop
jl
aam
iret
jge
repz
mov
cmp
sbb
adc
cmpsl
divl
xchg
mov
mov
cmp
cwtl
xchg
or
pushf
cli
mov
outsb
push
in
mov
roll
xchg
je
std
cmc
mov
mov
popf
mov
ret
and
das
movsb
jp
cltd
out
push
aaa
jns
mov
pop
rorb
add
sti
inc
ss
jg
movsl
dec
sahf
jbe
imul
push
mov
je
dec
cmp
dec
imull
addr16
sub
xchg
jbe
pop
pop
mov
mov
jb
movsb
xchg
loop
jl
fxch
push
fwait
cltd
fs
std
xor
jns
int3
lahf
ret
sub
and
ljmp
jg
jle
lret
std
cmp
lods
pop
fidivl
vsubpd
sbb
lret
cmp
sub
dec
movsb
jle
into
add
mov
fidivl
orb
sbb
fs
jl
movsl
out
pop
test
jge
lcall
int
data16
lods
push
stos
int3
insb
cmp
mov
cmp
scas
push
les
xchg
lret
mov
xor
inc
fstps
add
cmp
int
adc
iret
ret
xorb
in
xor
jge
pop
xchg
jecxz
xor
xor
imul
loopew
xchg
shll
int
mov
sbb
in
out
jb
mov
aad
add
jmp
mov
shl
testl
lods
leave
add
xlat
push
leave
fbstp
push
inc
mov
es
ret
ret
lods
mov
lds
outsb
or
cmp
dec
mov
xor
repz
mov
aam
sarb
xchg
pop
push
std
fs
cld
jge
ljmp
popf
pop
fucomip
adc
xchg
sub
mov
sbb
lea
cmp
data16
pop
xor
stos
mov
outsb
mov
adc
xorl
icebp
jae
push
movsb
push
mov
mov
lret
jl
xchg
and
es
pusha
lahf
rcr
mov
pop
dec
loope
mov
xorb
das
xchg
mov
xchg
dec
in
pop
mov
sbb
mov
cltd
sahf
mov
mov
push
xchg
in
adc
lock
xor
sbb
jp
mov
add
ss
dec
sub
ja
and
repz
rcrl
jle
jmp
xchg
add
hlt
outsl
lea
mov
jae
mov
or
adc
pop
dec
rolb
cli
jle
adcl
pop
adc
dec
xor
mov
pop
orb
out
dec
lcall
lcall
xchg
cld
xchg
lea
fisubrl
adc
sub
enter
push
dec
sbb
fnstsw
push
nop
dec
sbb
ljmp
cs
imul
enter
imul
push
rcrb
repz
adc
ja
cltd
movsb
es
dec
mov
xor
adc
push
roll
in
imul
mov
adc
outsl
and
repnz
adc
or
rcr
aas
mov
scas
cmp
in
pop
mov
push
lret
mov
push
xchg
cli
sahf
js
sbb
push
inc
jecxz
fsub
hlt
cmp
stc
or
rcl
enter
call
in
in
xchg
mov
arpl
mov
inc
sub
inc
jns
sbb
and
xor
xor
jecxz
adc
mov
ljmp
inc
addr16
mov
xchg
addb
fisttps
and
mov
adc
mov
leave
or
cmp
rcll
fdivl
jbe
xchg
jge
js
pop
mov
stc
or
mov
cmp
in
inc
in
sbb
scas
clc
sub
fmuls
clc
iret
fidivl
popa
scas
jge
scas
xor
dec
fstpl
pusha
andl
popa
cs
mov
push
sub
orb
pop
and
mov
std
jg
push
stc
jge
xchg
cmp
jae
cmp
push
aam
push
push
adc
adc
adc
lret
xchg
dec
cmp
hlt
mov
rcll
sub
adc
jp
fwait
data16
push
cmpb
loope
test
rcrl
dec
sti
mov
inc
daa
jnp
push
jge
adc
imul
xor
addr16
je
mov
stc
mov
dec
mov
pop
xlat
adc
repz
loopne
xchg
mov
mov
pop
xchg
cmp
out
xchg
ret
fsubrl
movsl
cmc
adc
mov
loopne
ja
pop
adc
rclb
aam
clc
stos
es
xchg
sub
movsl
xchg
mov
and
outsb
gs
loope
pop
add
lods
dec
cltd
loope
inc
or
daa
pop
mov
fisubrl
mov
push
sbb
mov
xor
and
or
out
addb
jle
or
cwtl
stos
xorl
push
in
test
inc
stos
lret
aam
add
ret
lods
push
mov
add
sahf
loopne
hlt
sub
in
ret
sbb
adc
pop
lret
push
rcr
inc
lods
adc
les
dec
outsl
jne
push
xchg
fs
and
repnz
pop
js
or
push
jp
into
mov
xchg
xor
flds
push
and
sub
mov
pop
test
jle
cmpsb
xor
cltd
sub
lods
mov
push
in
popa
ljmp
stos
mov
and
outsb
mov
add
cmpsl
aas
dec
inc
mov
inc
mov
mov
pop
mov
shrb
mov
sbb
addr16
hlt
pushf
jae
jbe
in
jae
xchg
sub
test
mov
sub
roll
inc
xor
dec
nop
jne
dec
mov
mov
pop
dec
sub
sti
outsb
xor
push
xor
frstor
sub
mov
xor
pop
mov
inc
jle
xchg
mov
inc
sub
shr
in
xor
pushf
sub
pusha
repz
sbb
xchg
ret
rcrb
negb
xchg
dec
sub
pop
push
adc
and
inc
mov
scas
push
clc
and
loopne
cmpsl
jl
test
xchg
push
ja
push
testb
jp
repz
popf
inc
insb
mov
sbb
aad
push
std
out
movsb
fwait
mov
icebp
and
jge
mov
nop
xchg
add
fimuls
inc
mov
jne
fdivrl
cmp
jle
pop
pop
xor
xchg
repnz
mov
dec
inc
lea
cmc
mov
and
scas
lret
lcall
test
mov
sub
icebp
pushf
jns
testb
imul
mov
popa
pop
xor
xor
setb
adc
xlat
inc
lock
test
scas
out
stos
sbb
mov
mov
push
gs
mov
ret
mov
stos
and
or
sub
outsb
pushf
notl
inc
sbb
jmp
fisubs
sbb
dec
add
add
sbb
mov
push
iret
data16
fisttpl
enter
adc
loopne
addr16
sahf
xor
jecxz
pop
lcall
jmp
data16
fcmovnb
lods
mov
movsb
cmp
or
in
fwait
inc
dec
mov
bts
adc
push
dec
mov
testb
je
outsl
dec
jge
dec
fsub
cmp
loope
adc
loope
push
or
stos
cmpsl
scas
inc
add
stos
ret
gs
push
pusha
mov
fisttpll
shl
jecxz
sahf
fnstcw
bound
lock
rolb
inc
mov
mov
ficomps
xlat
dec
inc
lret
mov
xchg
iret
xor
je
and
leave
inc
dec
jg
lea
push
data16
rcrl
rcr
xchg
mov
jge
stc
fcomi
dec
adc
outsb
add
xor
add
mov
adc
mov
jmp
adc
sti
loopne
cld
sub
call
or
scas
add
lcall
cmp
cmp
add
dec
std
and
cmc
mov
cmc
aaa
cmp
sub
imul
cmc
mov
sbb
cmp
btc
test
insl
int
lcall
fildll
test
jg
mov
aad
fsubl
xlat
pusha
mov
pushf
ljmp
fstps
nop
jb
test
ja
out
dec
xchg
in
jns
jbe
es
rcll
sahf
outsl
movsl
cmp
pop
pop
addb
cmp
iret
rcr
mov
or
mov
sbbb
fistpl
in
fsubl
aad
add
fwait
push
dec
out
sbb
or
loope
fildll
stos
neg
test
outsb
ret
sub
mov
xor
je
push
adc
sub
out
cli
adc
push
nop
jo
js
mov
nop
add
repz
dec
cmc
lret
and
icebp
std
out
and
stc
shll
push
or
xchg
mov
scas
dec
inc
dec
sub
sbb
and
mov
lahf
mov
mov
popf
loope
jo
pop
adc
inc
ljmp
push
cmp
movsl
lret
mov
pop
or
cmp
sub
out
mov
push
inc
ret
sub
arpl
push
je
cmp
xchg
das
or
notb
lahf
ss
mov
popf
dec
dec
or
xor
aaa
out
xchg
sub
fsubrl
notb
fistps
jmp
es
nop
adc
push
mov
mov
xor
inc
mov
out
pop
loop
xchg
mov
ljmp
lahf
sbb
sub
dec
adc
flds
mov
pop
addr16
sahf
mov
sub
test
mov
jbe
lcall
fildll
mov
and
mov
ret
push
pop
lods
dec
xchg
test
rclb
imul
popl
ficomps
mov
in
sbb
std
rolb
mov
and
movsb
mov
dec
ror
mov
mov
dec
mov
shl
xchg
mov
sub
js
jge
dec
mov
jno
jge
lock
sub
xor
dec
xchg
and
xor
popa
mov
adc
add
mov
sbb
adc
and
jge
mov
sub
pop
test
xchg
fs
mov
inc
flds
or
aaa
or
adc
xchg
jecxz
popa
out
pop
shll
dec
jp
roll
das
aaa
cld
lret
cltd
inc
or
mov
ljmp
cmp
ret
clc
iret
faddl
ret
lods
inc
sub
shlb
daa
and
je
mov
imul
lcall
jge
pop
mov
shlb
call
cmp
lahf
lds
inc
out
cmc
imul
xor
test
mov
xchg
sub
test
mov
sbbl
lods
lahf
inc
and
lcall
imul
addl
xchg
mov
or
insb
arpl
int
popf
xlat
xchg
mov
js
ss
icebp
ja
add
sub
cld
mov
repnz
jmp
and
add
mov
inc
push
fidivs
aaa
jg
mov
mov
sbb
or
shl
mov
sub
or
inc
push
testb
adc
ljmp
add
sbb
fucom
movsb
rcl
arpl
aam
pop
xlat
mov
and
xchg
mov
shlb
lds
sarl
lods
mov
mov
stos
shl
push
dec
push
dec
xchg
sbb
stos
dec
push
xchg
xchg
dec
mov
dec
sbb
ljmp
icebp
xchg
out
sbb
push
push
sbbb
mov
pop
xor
jnp
add
add
push
dec
mov
mov
sbb
add
fidivl
pushf
aad
adc
fcoms
adc
cmc
xchg
pop
xlat
dec
addb
pop
sarl
jbe
aad
ret
lds
mov
icebp
rcl
cmp
sbb
outsb
jecxz
dec
inc
scas
add
jl
and
sbbb
jb
pop
dec
mov
nop
int3
pop
scas
fmull
jl
in
jae
lods
into
leave
inc
ja
nop
lret
sub
push
nop
dec
sub
popf
out
xor
pop
cmpsb
adc
cltd
loopne
mov
mov
aaa
mov
mov
insl
lea
lds
jnp
out
aas
adc
in
mov
in
jae
pop
and
imull
cmpsl
stos
push
dec
mov
rol
lds
mov
roll
test
flds
sti
and
dec
mov
lods
sarb
repnz
mov
scas
sub
in
inc
xchg
dec
xor
lret
aad
push
add
add
push
dec
loopne
and
gs
rcl
sub
cmc
jo
mov
out
inc
popf
xchg
adc
xchg
pop
inc
xchg
push
stc
js
inc
or
sub
lahf
mov
and
repz
pop
lahf
pop
jno
jge
aam
cmp
es
or
mov
pop
mov
int
fisubl
sbb
or
mov
clc
mov
lods
dec
lret
popf
mov
mov
xlat
lods
sbb
gs
cs
mov
mov
and
mov
lret
bnd
jmp
shlb
stos
jnp
lret
dec
xor
loopne
insb
and
js
aas
sbb
push
xor
lahf
scas
cmp
sub
inc
test
xchg
sbb
mov
test
push
dec
jns
jmp
sub
sbb
push
inc
pop
arpl
fildll
xor
sbb
das
adc
aas
iret
inc
sub
xchg
ss
mov
pop
cli
cmp
mov
popf
mov
adc
enter
lds
das
out
sahf
arpl
lock
push
fisttpl
dec
rcrl
mov
or
or
mov
pusha
dec
scas
pusha
imul
mov
and
out
rcrb
outsb
sub
ds
add
fdiv
movsb
addr16
and
adcb
inc
xor
popa
out
push
lcall
jge
mov
xor
xchg
mov
ljmp
sbb
int3
push
negb
xor
mov
push
lret
ja
ds
sub
aaa
mov
xchg
jnp
lahf
into
push
js
loopne
andl
shrb
fbld
test
pop
and
cmpsb
jmp
xor
into
mov
xchg
push
ficoms
cmpsb
xchg
mov
adc
ljmp
mov
mov
pcmpgtd
aas
xchg
xchg
fucomi
add
adc
add
dec
xlat
shrb
mov
mov
out
addr16
sbbl
popa
arpl
push
add
rcl
sub
mov
push
mov
les
dec
lock
mov
aad
repz
inc
push
mov
xchg
jle
xchg
xor
out
add
or
push
loopne
push
sub
pop
in
mov
mov
scas
lea
test
mov
jo
mov
sub
xchg
sub
sbb
imul
sub
stos
stc
push
jb
or
test
repz
xchg
insl
inc
pusha
mov
subl
ficoms
push
adc
pop
je
dec
jo
add
cmp
pop
ds
loope
ret
shll
or
sbbl
nop
sub
pop
xor
test
add
mov
std
daa
in
cs
jo
out
mov
pop
sbb
sub
sti
sbb
sub
and
lret
movsl
mov
test
das
in
mov
pop
xor
mov
dec
jns
xlat
divl
and
fdivrp
into
xchg
imul
xor
xor
fs
popf
xor
jle
scas
es
push
lcall
jmp
and
imull
test
cmpsl
das
push
adc
jne
mov
xor
jl
mov
adc
jbe
and
ret
ret
cmc
lret
das
mov
mov
add
push
test
jae
push
seto
cmpsb
arpl
popf
movsl
mov
or
pusha
les
ss
addr16
repz
sti
aaa
hlt
fwait
add
mov
jne
pusha
sub
into
scas
xor
lret
mov
les
push
stc
int3
mov
dec
lcall
ljmp
push
push
adc
jne
jmp
scas
xcrypt-ecb
cmpsl
push
test
jecxz
push
mov
orl
aam
push
sub
xchg
sub
sub
faddl
loopne
js,pn
shl
xchg
incl
pop
fsubrs
mov
xchg
jle
push
mov
dec
fisubs
pop
and
mov
stc
imull
mov
cmp
inc
jmp
jl
mov
cwtl
inc
xchg
push
or
stos
lret
or
das
inc
mov
dec
in
or
rorl
and
mov
push
pop
and
outsl
stc
cmp
sub
xchg
xchg
sub
adc
push
cmovns
dec
pop
into
mov
cld
lahf
imul
xor
lods
xchg
ret
sbb
jnp
test
pushf
and
stos
movlps
and
adc
lods
mov
fdiv
mov
push
into
mov
adc
popf
dec
push
and
sbb
gs
jbe
cmc
add
lahf
cmp
sub
lret
negb
imul
jge
and
mov
fistpl
scas
sbb
insb
les
mov
rcl
xor
call
movsl
icebp
out
inc
push
aas
sbb
out
test
iret
xor
cmpsb
shll
push
jb
sbb
aas
pop
or
hlt
test
adc
lea
jge
xorl
push
loope
fsts
jbe
rol
xlat
ljmp
insl
ficompl
mov
mov
rcrl
pop
xor
xor
clc
or
icebp
in
in
push
jl
add
or
pop
fldl
fst
push
mov
cmp
in
insb
push
mov
xchg
scas
dec
push
mov
and
push
repnz
and
fisttpll
outsl
push
mov
cmp
lret
int
xchg
push
mov
lret
sqrtps
dec
imul
int3
adc
sbb
push
test
sub
sub
add
loop
pop
andb
mov
dec
icebp
rol
xor
mov
in
mov
data16
mov
jle
lret
aam
mov
fadd
push
push
rolb
push
jle
push
xchg
jo
jge
addb
and
arpl
dec
aaa
insb
rcrl
outsl
ja
xor
ljmp
mov
cwtl
outsl
inc
jge
popl
jo
and
js
add
imul
sbb
cmpsl
mov
inc
mov
xlat
inc
fimuls
push
cmp
popa
xchg
js
clts
jge
gs
jae
mov
xchg
cwtl
and
xlat
jg
push
movsb
shll
ljmp
adc
dec
addl
loope
aad
cltd
cs
jae
xchg
enter
sti
lret
push
sbb
or
and
fildl
add
in
bnd
in
mov
mov
push
dec
adc
cmpsb
jae
ds
cmp
xchg
nop
fistps
sbb
mov
add
jge
sbb
ficoms
mov
push
int3
mov
push
fwait
push
fildl
pop
dec
mov
lock
dec
jge
cs
pop
aas
add
ds
adc
push
mov
push
subb
dec
shll
adc
sub
loope
xchg
lahf
push
mov
int
dec
sbb
or
setle
mov
ljmp
add
bound
pop
inc
adc
xchg
xlat
and
sub
dec
cwtl
jb
sbb
mov
sbb
inc
pop
bound
das
xchg
fisubrl
fbld
das
dec
gs
mov
fstpl
mov
xchg
mov
pusha
mov
xchg
inc
mov
dec
aas
sti
mov
sbb
mov
mov
or
jle
or
cs
dec
dec
adc
inc
test
add
orl
and
mov
xchg
push
xchg
pushw
imul
mov
dec
and
mov
ficoml
lock
adc
lock
les
pop
dec
push
sbb
mov
mov
lds
addl
cmc
les
lret
ja
jp
cmp
mov
fbld
mov
mov
mov
mov
pop
or
mov
insl
cmp
daa
adc
repnz
and
gs
xchg
rcl
out
psadbw
mov
mov
inc
cmpb
icebp
xor
jo
les
fwait
sbb
dec
hlt
push
add
cmp
adc
jp
dec
mov
je
in
or
fs
js
jnp
arpl
dec
lock
fwait
mov
test
xchg
rcll
repz
xlat
adcl
mov
in
lods
testb
pusha
xchg
aad
jns
mov
addl
dec
and
jno
popf
std
dec
in
clc
fnstcw
test
mov
outsl
into
dec
inc
mov
inc
mov
or
jle
mov
iret
cltd
jle
sub
xchg
adc
movsl
xchg
loop
push
mov
outsl
mov
lret
cltd
and
jl
cmp
insb
gs
xor
push
xchg
xor
cmpsl
push
pop
stos
push
sub
jns
in
in
imul
xor
jne
xchg
lock
pop
pop
imul
loope
adc
sbb
hlt
aam
sti
sbb
arpl
and
hlt
jns
jbe
cmpsl
or
xor
std
jnp
xchg
cmovle
xchg
mov
lods
push
jl
xchg
mov
or
xlat
or
inc
scas
scas
xorl
mov
pop
sbb
loopne
iret
jmp
out
outsb
gs
or
fs
mov
mov
into
jmp
js
inc
xor
push
xchg
xchg
jp
aad
popf
outsl
pushf
out
push
jb
bound
jne
add
adc
xchg
loope
mov
dec
mov
xor
sbb
mov
fidivl
into
fistl
hlt
and
inc
ss
jnp
daa
cld
test
add
push
test
movsl
fadds
insb
enter
ficoms
data16
fwait
jmp
outsl
jle
adc
pop
outsl
cmp
in
fstl
jne
and
cltd
push
and
fstps
and
or
dec
in
pop
ret
pop
movsl
cltd
test
jp
icebp
ss
rorb
das
arpl
push
jl
test
daa
sbb
mov
movsb
and
ljmp
inc
lret
mov
idivl
pop
xor
sti
pop
test
test
cmp
or
jbe
dec
repnz
push
test
lcall
fs
insb
mov
xchg
xchg
and
fs
lcall
jge
push
test
add
ret
scas
sti
loope
cwtl
xorps
icebp
leave
dec
mov
push
hlt
push
jnp
popf
mov
cmp
stos
sti
pop
xchg
sbb
jno
addl
mov
fucom
mov
mov
jle
mov
mov
lret
int3
adc
loope
arpl
das
idivb
push
add
pop
inc
dec
outsl
xchg
pusha
cmp
push
mov
sahf
jmp
add
push
push
into
aad
inc
mov
popa
xor
aad
inc
popa
pop
pop
mov
jle
je
sub
js
pop
jle
fidivl
push
inc
dec
int3
pop
sub
loop
fiaddl
mov
adc
adc
inc
int
nop
dec
mov
sbb
push
in
fldenv
ret
mov
mov
jle
or
fdivs
mov
jg
mov
mov
jp
push
sub
pushf
inc
adc
mov
mov
adc
sarl
sbb
inc
out
dec
jno
int3
xchg
cltd
jne
movl
stos
test
sbb
xlat
stc
cld
adc
jmp
mov
mov
xor
push
repnz
ret
mov
pop
jge
ret
mov
xchg
xchg
leave
jbe
fistps
pop
ds
mov
mov
pushf
xlat
dec
inc
rorl
pop
jmp
int
xchg
mov
icebp
stc
pushf
jno
movsb
gs
ret
pop
pop
mov
loopne
in
stc
movlps
inc
push
mov
xor
cmpsb
cmp
std
shlb
pop
hlt
daa
ss
pop
movsl
andl
inc
repz
ffreep
dec
aad
mov
scas
xchg
xchg
push
jecxz,pn
mov
jbe
data16
add
push
push
mov
lret
pop
loopne
pop
dec
cs
mov
insl
adc
inc
ret
pop
ss
and
lahf
pop
jne
inc
add
repnz
pop
mov
mov
cld
mov
mov
mov
inc
je
push
ljmp
sahf
and
js
sub
and
mov
hlt
xchg
scas
test
push
fcmovbe
pop
sub
xchg
enter
dec
sbbl
repz
xchg
xor
adcb
push
shlb
pop
cmp
add
inc
cmp
jecxz
pushf
movsl
add
jl
lret
or
push
push
sub
out
addb
lahf
into
sub
push
addr16
fiaddl
mov
call
mov
mov
xor
shll
or
jge
in
xlat
and
sub
mov
sbbl
popf
inc
pmulhw
dec
and
jle
lds
or
out
movsb
popa
ds
adc
add
xlat
daa
ror
push
ds
xor
sbb
repz
fwait
mov
inc
xor
sub
out
std
je
and
es
pop
sti
add
ret
pusha
xchg
adc
leave
fildl
sbb
gs
and
jp
mov
clc
xchg
push
push
or
enter
or
stos
sahf
rcrb
inc
xchg
orb
xor
dec
pop
je
loope
adc
dec
mov
and
push
mov
xchg
call
ss
mov
adc
cmpsl
movsl
push
aaa
inc
inc
and
fisubs
cld
aam
push
jmp
lds
lahf
ret
inc
lods
das
jp
xchg
and
xchg
dec
cld
hlt
pop
mov
sub
and
push
add
pop
data16
and
loopne
shrb
push
repz
mov
mov
dec
mov
pop
mov
add
push
mov
pop
mov
stos
cmp
shl
mov
cmp
and
negb
mov
stos
pushf
insl
repnz
shl
decl
xor
repnz
and
mov
cmp
out
mov
jnp
mov
mov
cmp
scas
repnz
imul
push
xchg
shl
jne
xchg
bound
dec
scas
stc
les
in
icebp
jl
fisttpll
lahf
pop
adc
dec
aas
frstor
cmp
leave
outsl
pop
outsl
hlt
ret
or
dec
xor
and
inc
jb
sub
iret
jg
add
sub
xor
add
test
dec
mov
das
jno
loop
mov
iret
aas
jae
jle
leave
sbb
adc
xchg
inc
cmp
test
jp
jo
addr16
cs
sub
stos
je
rol
aaa
stos
ds
daa
daa
jae
fisttpll
aad
in
daa
and
sbbb
adc
cltd
xor
out
cld
in
int
push
enter
arpl
jg
in
lret
cmovp
dec
push
bound
insl
cli
jg
push
insb
mov
pop
sbb
mov
or
lds
pusha
rorb
push
outsb
sub
xchg
cmp
loop
sahf
mov
pusha
cmpsl
fcompl
lcall
adc
or
stos
jo
mov
add
sahf
sar
fistl
jecxz
sahf
jg
aaa
jno
sbb
ss
rcll
popf
jb
insb
sahf
or
nop
or
jmp
pop
lahf
ss
lret
iret
adc
cld
repnz
lea
or
sti
xchg
mov
sbb
pop
push
div
scas
aam
fwait
xchg
push
cmc
push
daa
ljmp
out
cwtl
jo
cli
aad
sarl
cmpsb
orb
xchg
adcl
daa
cmp
mov
leave
sub
xchg
mov
iret
test
xor
int
add
add
dec
xchg
jbe
test
pop
or
iret
ds
jae
xor
xor
add
std
mov
inc
cwtl
add
add
popf
enter
mov
inc
enter
push
mov
into
xor
cmc
xor
inc
imul
mov
jmp
int
mov
mov
inc
aam
mov
mov
xor
cmc
pop
dec
hlt
aad
gs
xor
cmpsl
in
subl
inc
repnz
clc
push
inc
popa
rorb
jl
mov
pop
inc
inc
cli
repz
ss
push
mov
aam
mov
test
push
inc
js
popf
inc
or
dec
jo
adc
insb
shlb
mov
mov
mov
or
and
sarb
leave
sub
testl
pusha
aas
sahf
std
xor
pushf
xchg
and
xor
add
cmpsl
sub
adc
rcrl
mov
inc
sub
pop
adc
and
xchg
das
cld
ljmp
test
data16
lea
jmp
subl
pop
aas
pop
pop
pop
js
push
test
outsb
sbb
stc
ss
ja
pusha
push
lock
movsl
popa
test
fs
dec
out
dec
and
subl
out
ffree
dec
xchg
mov
in
movsl
xchg
pop
fwait
mov
movsb
xchg
mov
pop
rclb
jbe
adc
mov
stos
rcll
rcll
shl
xchg
adc
cmpsl
addr16
rcr
jo
mov
into
lret
inc
gs
cmpsb
inc
cmpsb
mov
jl
lcall
insl
jg
dec
push
pop
loopne
clc
pop
adc
into
cmp
mov
outsl
mov
sub
fnsave
mov
and
fwait
sbb
dec
mov
dec
add
add
std
mov
lahf
sub
fildll
dec
loope
pop
cs
xchg
cmpsb
mov
js
push
push
stos
pop
jmp
sarb
sbb
add
cmp
mov
pop
clc
and
lods
sub
gs
sub
mov
jbe
mov
cmpsl
pop
outsl
mov
inc
movsb
push
sbb
mov
dec
inc
dec
sbb
popa
enter
add
adc
xor
mov
dec
cltd
or
push
mov
out
rsm
dec
dec
les
push
hlt
adc
xchg
dec
sahf
jns
or
lret
insl
pop
ss
mov
repnz
icebp
sti
jl
xchg
or
mov
pop
adc
mov
fmul
pop
bound
je
pop
movsl
shl
jae
xchg
call
adc
imul
cmp
loope
xchg
in
mov
or
mov
test
rcr
sub
xchg
dec
cmp
enter
std
in
repnz
adc
push
sub
in
data16
pop
push
cmp
lcall
mov
add
mov
orb
pushf
mov
add
xchg
add
mov
hlt
dec
xor
add
addl
loope
loopne
imul
imul
cs
jmp
fs
jnp
nop
inc
clc
dec
cmp
shl
fucom
ds
mov
stos
push
jne
pop
lods
clc
cmp
loopne
mov
and
xchg
insl
mov
push
insl
idivl
scas
sub
leave
mov
sub
data16
mov
outsl
cli
xchg
xor
popa
push
jb
enter
in
mov
sub
out
or
rorb
adc
xchg
popf
ja
xlat
je
sbb
cmpsb
ret
mov
stos
ss
pushf
push
xor
arpl
adc
in
cs
ret
mov
mov
lahf
rcrl
jnp
jle
push
or
inc
mov
adc
xor
mov
or
dec
sbb
mov
push
jns
fcompl
mov
or
push
lahf
xchg
adc
fs
out
cmpsb
push
dec
aaa
xor
pop
leave
push
push
inc
push
sub
outsl
sbb
mov
adc
into
arpl
call
pop
mov
scas
xchg
popa
or
in
outsl
mov
ljmp
frndint
test
les
mov
jecxz
jp
dec
mov
adc
aaa
cmp
lds
mov
xor
mov
decl
push
push
dec
rorb
mov
pop
cltd
xor
subl
add
aam
jns
test
jl
dec
or
jmp
xor
popf
mov
pop
cmp
ja
sbb
add
xchg
mov
jge
pop
pop
je
push
cmpb
sub
sbb
dec
pop
rorl
push
jne
pop
pop
xchg
push
imul
sub
mov
bound
icebp
sarl
rolb
sbb
mov
sti
int
pop
adc
pop
add
scas
pop
xchg
push
cmp
inc
leave
sub
push
rclb
push
mov
push
pop
add
addr16
call
imul
cld
sub
jmp
sub
add
xor
sub
pushf
fisubrl
dec
cld
adc
aas
pop
xor
in
adc
sub
mov
outsb
mov
mov
jmp
cmp
and
mov
in
clc
pop
pushf
mov
push
cmp
add
sarb
dec
pusha
inc
xchg
enter
cmp
xchg
sahf
or
pop
out
cltd
jl
cwtl
scas
clc
daa
and
les
call
push
lret
xchg
jae
adc
mov
fsubs
fidivrs
cltd
sbb
in
daa
arpl
cmpb
ljmp
call
xor
lods
imul
mov
xchg
cmp
push
orb
pop
mov
shr
adc
mov
pop
jg
les
leave
int
cltd
clc
jns
and
jecxz
outsb
fdivl
xchg
and
mov
divb
aas
orb
fmuls
push
rolb
insl
js
xor
aam
jne
xchg
mov
xchg
or
push
mov
xchg
sbb
imul
gs
pop
loope
push
push
pop
sub
subl
sti
push
add
leave
adc
out
nop
mov
mov
mov
xor
jg
add
xchg
or
cmp
mov
jo
mov
fldl
mov
enter
sub
xlat
xchg
add
push
iret
or
pop
push
inc
push
inc
cld
lahf
rcll
sbb
shll
mov
mov
adc
daa
pop
push
ds
add
and
insb
or
xchg
adc
mov
outsb
scas
shlb
roll
int
xchg
sbb
xor
bound
pop
jbe
popf
mov
ret
sbb
outsl
mov
inc
mov
inc
inc
push
jns
sbb
stos
cmp
daa
push
mov
aaa
mov
addr16
std
in
lcall
and
stc
in
push
dec
sbb
xchg
gs
int
push
jl
xor
mov
mov
xorb
ret
addb
daa
mov
int3
mov
xorl
cmp
sbb
ret
pop
movsb
notl
cmp
addb
adc
pusha
jmp
cmp
jmp
mov
das
rep
mov
stos
sahf
inc
cmc
out
xlat
pop
insb
call
adc
dec
mov
aaa
sub
test
movlps
sbb
add
xchg
and
push
push
sbb
leave
cmp
mov
add
and
inc
shr
mov
adc
inc
loopne
sub
mov
addr16
movsb
lods
fwait
and
cli
js
mov
addb
fwait
mov
or
in
popa
cld
ljmp
lahf
imul
lds
lcall
dec
cmp
repnz
add
rorl
out
fs
lods
shlb
repnz
sbb
cmpsl
cmp
daa
or
lahf
add
bound
jecxz
mov
inc
push
lahf
xchg
int3
mov
outsb
push
lock
add
pop
movsl
cmp
jbe
add
scas
mov
ret
push
push
dec
pop
xchg
loop
repnz
cld
mov
pop
xchg
lods
test
jl
mov
in
mov
pop
mulb
sahf
and
jnp
push
mov
int
mov
shl
mov
xchg
add
insl
push
xlat
stos
stos
inc
mov
call
fsubs
add
xor
int
or
frstor
dec
pushf
arpl
popa
and
cld
shrb
and
lock
hlt
loopne
std
mov
sbb
pusha
je
sbb
add
mov
outsl
fcmovu
out
aas
imulb
in
loop
pop
test
in
push
adc
insb
ss
lods
test
push
and
cmpsb
shrb
sub
arpl
and
push
test
xor
hlt
push
xorl
vmovlps
pop
push
mov
cld
fwait
mov
cld
aas
aad
jnp
loop
xor
stos
incb
xchg
cwtl
arpl
or
lret
mov
lret
out
mov
add
bound
push
or
jae
cmp
or
stos
jl
pop
fadd
lock
sbb
cmp
neg
sub
jge
sbb
mov
mov
push
in
xor
jb
pop
out
mov
mov
cmp
jmp
cmp
mov
mov
out
test
sub
clc
cltd
or
xchg
in
data16
insl
mov
xchg
js
cmp
cmc
dec
repz
xchg
insb
subl
add
dec
or
adc
repz
arpl
inc
push
outsb
mov
ficomps
test
xor
jne
je
pop
push
dec
es
adc
jbe
dec
lahf
pop
mov
sbb
mov
testb
push
iret
jns
aam
out
or
or
cmc
mov
dec
stos
inc
pop
insl
testb
or
add
aam
or
clc
out
clc
dec
pusha
out
xor
insb
mov
cmp
lods
rolb
pusha
dec
repnz
push
cld
aas
jg
subl
pop
xchg
stc
push
clc
into
dec
cmpl
mov
add
cld
push
push
mov
pop
rcl
testb
jns,pt
or
leave
pop
xor
sbb
arpl
inc
push
sub
mov
andb
mov
in
mov
stos
in
xchg
xchg
loop
loope
lods
mov
sbbl
dec
lret
xor
xchg
sub
int3
xor
fisttps
mov
out
jns
mov
and
or
testl
pop
jae
sbb
pop
cmp
dec
and
fcompl
sbb
lds
pusha
add
adc
outsl
loope
mov
xor
jmp
lds
cli
fucomi
inc
repz
pmaxub
sar
orb
outsb
pop
adc
push
push
outsb
cmp
int
not
jmp
test
or
jecxz
rorb
sub
mov
and
adc
cli
or
add
xor
jnp
add
scas
mov
or
jb
sub
sahf
insb
xchg
mov
pop
mov
and
out
lcall
ror
add
ret
in
jge
dec
jb
push
fisttps
mov
sbb
pop
mov
cmove
incb
mov
lret
dec
push
out
xchg
insb
adc
out
push
push
js
cli
aas
mov
jno
and
add
pop
pop
pop
pusha
add
mov
inc
mov
cltd
xor
mov
rolb
nop
xchg
push
mov
pop
imul
jecxz
mov
sub
cmpl
and
xchg
es
pop
lret
and
in
dec
mov
icebp
xchg
jl
push
enter
in
and
enter
pop
gs
sbb
dec
insb
push
roll
xchg
in
ljmp
add
nop
das
sub
pop
in
mov
arpl
test
pop
mov
mov
xlat
setne
push
or
cs
xchg
cs
movsb
cmpsl
pop
repz
lret
jo
hlt
leave
jge
mov
ss
pop
adc
pop
scas
jmp
add
addr16
push
lea
mov
fidivrl
faddp
inc
and
int
sarb
lcall
jl
cmpsb
or
in
mov
fs
sbb
mov
mov
mov
mov
call
sbb
psrlw
rcrl
and
das
dec
loop
adcb
xchg
mov
popf
sub
sub
movsb
stos
mov
loope
sbb
mov
test
mov
cmc
popf
jge
xchg
jo
cmpsb
inc
int3
aaa
jo
fcmovbe
xor
pop
fwait
pop
adc
mov
fwait
xchg
stc
dec
in
or
sbb
ficomps
or
xor
ds
repnz
shlb
mov
cmp
xchg
mov
inc
jle
shlb
iret
xchg
cmpsl
icebp
lock
jae
cld
andl
nop
mov
out
lock
dec
and
lods
xchg
out
test
xor
cmp
jg
stos
or
jns
xor
mov
aas
mov
adc
pop
in
pop
mov
pop
add
sbbl
push
pop
scas
lret
aam
mov
cmp
sbb
push
jae
enter
test
jge
lock
pop
push
inc
ds
or
push
ret
popa
push
sar
adcl
lods
mov
divb
jo
or
into
mov
mov
sub
fildl
rorl
xor
mov
loope
adc
and
clc
nop
xor
jb
or
mov
push
test
fs
mov
xor
lock
jne
and
xchg
jmp
or
mov
icebp
mov
and
enter
das
ret
in
lods
mov
in
leave
adc
dec
clc
sarl
xchg
dec
imul
je
xchg
xchg
mov
and
ret
sbb
adc
jae
es
scas
cmp
int3
lds
shll
dec
in
les
insl
fs
sbb
sub
inc
cwtl
inc
cmp
adc
dec
adc
dec
arpl
mov
fwait
and
es
addr16
out
lea
into
fwait
inc
cmp
fs
inc
sbb
sarb
mov
inc
divb
jmp
jge
in
in
ja
inc
rcrb
mov
jecxz
push
mov
or
sbb
negl
cmp
cwtl
outsl
push
add
inc
insb
xchg
and
lcall
rorl
adc
mov
in
aam
dec
xchg
in
xchg
inc
add
addb
out
jns
adc
decl
or
andl
xchg
or
test
push
push
out
push
lret
cmp
popa
mov
lods
testb
jno
inc
out
ret
xchg
into
mov
mov
fnstenv
and
jb
jae
push
dec
gs
rolb
div
test
loopne
inc
loopne
call
mov
aas
test
arpl
insb
and
cmp
inc
lods
mov
rcl
mov
adc
jge
rorl
inc
je
js
pushf
in
xchg
rorl
neg
fcmovnbe
hlt
adc
fstpl
xlat
dec
nop
mov
adc
in
imul
push
add
in
pop
outsb
es
movsl
mov
iret
xchg
and
cmpsl
jne
adc
mov
pop
pop
je
out
add
daa
jge
sbb
mov
shl
loope
cmpsl
lahf
mov
xchg
fimull
enter
ss
fwait
add
mov
mov
popl
repz
and
sub
sub
popf
xor
ficompl
add
cmpsb
mov
inc
sub
lock
pop
sub
in
outsl
dec
test
dec
cmp
cs
jns
pusha
jmp
repnz
xchg
xchg
in
lret
dec
cmp
subl
int
mov
cmc
test
aam
ret
or
ficompl
imul
jne
cmc
mov
stc
test
pop
pop
and
notb
or
nop
adc
rorb
repnz
mov
in
xchg
add
movsl
add
mov
lods
lret
cmpl
jecxz
bound
int
jl
sub
mov
out
rcll
gs
inc
fst
mov
ret
loope
cmp
sbb
or
lret
pop
jge
scas
fcoms
jno
call
enter
adc
mov
xchg
aas
scas
pushf
aad
mov
fsts
insl
push
mov
imull
sahf
mov
shr
stc
cmp
mov
mov
adc
int3
or
aas
repnz
insb
js
or
or
pop
aad
mov
fwait
inc
jle
stc
filds
mov
lock
in
lcall
mov
xchg
push
loope
arpl
imul
in
shr
cmp
cli
xchg
das
mov
nop
fwait
mov
popa
inc
adc
bound
push
add
les
and
add
out
mov
push
sub
lret
call
repz
in
jnp
dec
gs
inc
adc
mov
out
xlat
mov
in
xchg
sbb
scas
andl
xchg
and
inc
aad
inc
pop
test
lods
outsl
dec
ljmp
je
neg
outsb
adc
dec
ficompl
pushf
push
sbb
and
jmp
mov
mov
es
xor
jl
cmp
ds
pop
leave
ja
icebp
flds
inc
mov
sub
shrl
call
arpl
hlt
mov
sbb
pop
stos
test
pop
mul
mov
mov
fldcw
xor
in
xchg
adc
or
mov
mov
arpl
push
subb
mov
out
jg
icebp
jbe
mov
sahf
sub
daa
pop
pop
loop
sbb
ljmp
jbe
mov
push
xor
loop
bound
jmp
mov
xor
js
lea
ja
das
sbb
test
sbb
pop
add
pop
adc
js
stos
push
xor
test
insl
sti
push
je
add
leave
inc
push
lock
test
push
push
push
sbb
js
insb
cmc
cmp
push
push
push
or
xchg
pop
les
mov
rolb
int3
xchg
cmp
test
enter
or
dec
mov
xor
push
lds
lret
push
pop
fnstsw
add
popl
lcall
mov
or
and
push
fidivs
rcl
aaa
push
or
pop
and
popa
arpl
js
testl
mov
sbb
dec
gs
pop
popf
mov
or
repz
or
xor
add
push
dec
ficoms
lods
cmc
mov
lret
sbbb
cmp
fsubl
mov
jmp
xchg
sbb
mov
or
adc
add
mov
xchg
mov
xchg
jp
mov
pop
or
cmp
xor
add
movsb
mov
movsb
loope
hlt
add
sbb
ss
push
aad
pop
jl
pop
push
jbe
mov
ds
or
cmp
aaa
mov
pop
jbe
dec
inc
add
in
mov
xchg
adc
test
dec
mov
adc
cmp
pop
call
mov
sarl
sbb
push
sub
testb
test
mov
mov
outsb
mov
cwtl
adc
stos
mov
cs
sub
sbb
and
push
es
cmp
cs
sbb
adcl
lret
mov
fwait
sbb
subl
cwtl
pop
into
gs
into
fisttpll
and
dec
push
aas
mov
sub
test
or
push
add
lret
inc
mov
xchg
dec
mov
pop
jae
sbb
and
inc
arpl
or
mov
mov
sbb
jge
mov
les
test
dec
in
sub
out
push
cmp
inc
or
iret
sti
imul
pushw
jb
sub
mov
push
and
je
rorl
mov
scas
ss
pop
push
adc
mov
sbb
loopne
inc
lock
jo
aas
daa
in
adc
data16
adc
mov
mov
popf
aaa
push
out
xchg
loopne
dec
insl
cmpl
stos
into
or
rclb
sub
dec
xor
mov
mov
ljmp
pop
sub
fcmovbe
jecxz
popa
mov
mov
xchg
or
jne
and
jmp
adc
pop
adc
ss
gs
es
xor
adc
out
js
idivl
sub
sti
push
addl
mov
fldenv
divl
in
add
fists
add
push
mov
xor
sub
test
or
sub
xchg
enter
arpl
movb
int3
pop
mov
scas
movsl
int3
dec
daa
in
js
xlat
movsl
stos
push
pop
lods
hlt
cmc
or
loope
and
xor
mov
dec
inc
rcr
pop
push
pop
dec
push
dec
jnp,pt
daa
sub
mov
je
pop
out
ret
mov
and
stos
fldt
lcall
insb
fists
sti
lea
push
dec
mov
insb
addl
js
std
and
es
scas
mov
fstl
jl
dec
outsb
xchg
into
pop
mov
cmp
pop
inc
scas
test
aam
cmp
rolb
push
mov
and
pop
int3
push
add
fldl
push
je
call
fldenv
jae
es
clc
aas
jl
aad
fsts
fildll
mov
push
and
xchg
divb
xchg
jle
mov
mov
lret
mov
mov
hlt
enter
or
fldl
or
cmpsl
sub
pop
xchg
iret
pop
dec
shlb
lret
aaa
jnp
pop
icebp
add
mov
or
lret
sub
ljmp
frstor
pop
add
dec
mov
adc
loop
or
ret
pop
pop
dec
psllq
mov
stc
jno
data16
shl
shrl
add
jo
addr16
mov
adc
mov
push
pushf
jmp
push
arpl
and
xor
lcall
dec
adc
sub
sahf
mov
mov
cmp
outsl
sub
call
jmp
iret
mov
enter
cltd
mov
ss
dec
repnz
sbbb
sahf
pop
add
inc
imul
mov
jp
mov
pushf
inc
dec
out
mov
xchg
lea
iret
fsts
add
mov
mov
pop
sub
lcall
add
out
jbe
rcrl
xchg
mov
popf
incb
fadds
push
mov
cmp
mov
loopne,pt
cmp
adc
andb
out
push
stos
and
adc
test
punpckhwd
data16
ljmp
jbe
pop
mov
dec
xor
sbb
sub
mov
testb
mov
cmpl
xchg
gs
add
cmp
jp
test
popa
mov
add
fcoms
jle
mov
fbld
iret
daa
and
pop
fisubrs
ss
jl
clc
cltd
nop
notl
lods
popa
das
push
sbb
ds
dec
adc
xchg
test
adc
cmp
in
xchg
pop
mov
pusha
dec
sbb
pop
pop
push
mov
dec
push
in
es
sbb
jp
in
xchg
ljmp
jmp
mov
fsub
fstpl
aam
adc
lret
fnstsw
lock
or
inc
lahf
imul
inc
and
fsubs
incl
arpl
insl
push
sub
hlt
sti
leave
pop
pop
fldenv
pop
jb
push
sahf
test
testb
inc
dec
pop
cwtl
mov
adc
xchg
mov
pusha
xchg
bound
scas
jbe
add
adc
push
add
jns
dec
fnsave
mulb
inc
push
push
inc
push
mov
mov
add
bound
insl
popf
leave
repnz
lea
push
push
xchg
cmpsl
lret
pop
push
dec
daa
jo
or
pop
mov
lea
sub
nop
mov
dec
dec
xor
lret
pop
mov
ss
and
repnz
cmp
mov
stos
and
mov
loop
test
jne
mov
insb
adc
dec
xor
jp
jae
std
cmc
daa
andb
stc
ret
js
and
sar
add
xor
adc
repz
orl
gs
pusha
mov
dec
mov
xlat
inc
inc
in
jno
test
outsl
int3
ret
adc
loopne
fcompl
lea
push
push
ljmp
lcall
rcrl
jne
jmp
addr16
loop
imul
and
mov
mov
mov
dec
mov
push
sahf
gs
in
pop
mov
xchg
or
or
push
jl
fadds
jnp
aas
dec
xlat
mov
icebp
mov
lahf
je
out
ds
push
mov
mov
sbb
ljmp
clts
lods
inc
add
and
cmp
jb
dec
and
in
scas
cmc
enter
leave
push
rorb
std
xor
sub
jne
int
scas
sub
jmp
aaa
stc
jmp
mov
pop
loop
pop
xchg
jns
stos
fs
jo
or
arpl
sub
in
insl
inc
xor
dec
notl
aas
outsl
xchg
bnd
sqrtps
mov
flds
repnz
pushl
and
push
and
aad
jb
stc
sti
aaa
stos
insl
fcoml
inc
sub
adc
pop
cmp
cmp
lods
aad
add
dec
aas
or
ret
sbb
adc
outsb
pusha
mov
add
push
inc
ja
jmp
stos
das
and
popa
xchg
bound
lods
add
aaa
add
jmp
push
jecxz
out
pusha
stos
ljmp
andb
loope
pop
push
sub
jae
pushf
in
pop
xchg
insl
aaa
dec
sub
jl
pop
in
test
and
cs
mov
shll
ljmp
fbld
push
cmc
mov
mov
adc
push
flds
cmp
push
pop
addl
rcll
jb
leave
cwtl
mov
or
jne
push
addps
add
ja
sbb
push
pop
scas
mov
jp
in
lahf
sbb
sub
mov
jmp
xchg
xchg
repz
out
inc
in
xor
and
dec
ljmp
out
sahf
cmp
movsl
inc
xchg
int3
cmp
in
clc
cmpsl
into
in
push
mov
cmp
rorl
inc
push
ds
fsubs
sbb
pop
sbb
add
xor
out
ret
inc
lahf
aas
ljmp
clc
loop
nop
pop
hlt
pop
scas
gs
xchg
jo
xchg
sahf
loopne
popf
mov
jp
enter
jo
scas
jecxz
stos
and
leave
mov
mov
push
fs
xchg
ret
adc
mov
out
mov
xor
sbb
xchg
aad
loopne
cmp
cmp
push
add
push
das
sahf
dec
popa
push
cmpsb
and
xchg
ret
jge
push
fadds
insl
imul
imul
and
mov
cmp
outsl
and
push
sub
xchg
mov
cltd
mov
or
idivb
ret
xor
test
add
fimuls
fcmove
sbb
xor
cld
mov
jmp
xchg
test
mov
push
fwait
push
mov
pop
add
push
pop
cmpsb
in
pop
add
and
lret
test
arpl
hlt
cli
out
mov
mov
mov
sub
clc
add
xor
sti
pop
lods
and
push
adc
test
or
cmpsl
dec
mov
loope
scas
inc
cmpsb
testb
imul
arpl
sbb
adc
pop
aas
stc
ret
push
pop
mov
push
jae
xchg
movsl
mov
and
inc
mov
dec
std
test
cmp
ljmp
push
lcall
jecxz
dec
mov
xor
lret
push
mov
push
out
sbbb
je
shr
jne
sbb
test
dec
cs
adc
jbe
daa
lahf
push
jno
movsl
sarl
data16
loopne
hlt
cmp
jns
sub
rcrb
jmp
in
pop
pop
fnsave
pop
sarb
jmp
sub
mov
rclb
insb
inc
add
xchg
pop
nop
fwait
and
loop
adc
cmc
test
ljmp
xchg
es
push
jbe
fwait
jmp
push
ljmp
leave
mov
mov
lret
sti
and
push
inc
out
mov
out
loopne
or
gs
dec
dec
movsl
fs
jge
test
mov
mov
ret
mov
andb
push
push
std
and
sbb
cltd
dec
insb
fcos
aam
test
and
pop
lock
mov
insl
cwtl
xor
fsubrs
mov
out
dec
insb
notb
fbld
fnstenv
data16
cmp
mov
jbe
hlt
xorb
mov
sub
subb
movsb
rorl
repnz
clc
xchg
aas
xor
dec
ds
rorl
ljmp
cmp
and
mov
sbb
xor
movsl
cli
fistps
aaa
inc
add
mov
inc
out
shll
mov
mov
test
dec
dec
push
sbb
mov
testl
data16
xor
adc
cmp
pop
stos
xchg
popf
lea
pcmpgtb
fsubrs
jmp
xchg
cs
dec
mov
ret
add
outsb
repnz
xor
mov
lock
mov
cmp
xlat
sub
inc
imul
mov
sbb
scas
inc
decl
mov
jno
cmpl
pop
sub
lret
push
fwait
out
xor
mov
or
insl
shrb
outsl
push
cmpsb
scas
pop
hlt
fldl
loope
or
xor
mov
les
cli
aam
shlb
call
xor
pop
ret
dec
hlt
mov
or
mov
andb
add
inc
xchg
mov
jae
cmp
fwait
dec
popa
cmp
sub
mov
adc
push
xchg
inc
lahf
hlt
lods
or
or
mov
adc
cltd
call
push
mov
add
xchg
clc
mov
sbb
push
sbb
push
cmpsb
push
xlat
in
xor
int3
mov
into
js
les
push
bound
jg
gs
mov
loopne
mov
lcall
icebp
out
or
cltd
in
aas
movsb
pop
in
int
jne
jne
popa
mov
arpl
or
or
lret
sbb
not
decl
call
adc
ljmp
xchg
mov
or
adc
andb
inc
jns
or
or
cmp
xor
aam
ret
inc
jl
aas
insb
mov
out
rclb
cmpl
sbb
mov
xchg
es
stc
into
add
ljmp
fs
add
cld
nop
push
push
stos
cmpsl
xchg
imul
out
sahf
push
push
inc
jae
movsl
aam
adcb
jb
sbb
sub
jno
mov
jne
add
out
aaa
cld
insb
pop
jecxz
cmp
out
sub
mov
dec
addr16
sub
testb
push
ficoms
jne
mov
pushl
inc
fadd
lret
mov
ja
mov
adc
pop
mov
add
pop
jno
lods
push
pop
aad
lret
lock
or
mov
inc
dec
adc
outsb
inc
add
xchg
dec
sbb
daa
xor
shll
mov
push
cmp
cmc
sahf
mov
imulb
xor
xchg
cwtl
and
pop
in
test
lds
inc
mov
rcll
lahf
xlat
sbb
xchg
enter
cmpsl
jle
jmp
ss
je
pop
xchg
popf
leave
enter
iret
mov
mov
pushf
xor
mov
and
jecxz
cld
icebp
decb
xchg
test
aaa
cld
pop
aas
popa
dec
cli
xor
push
xchg
push
in
sub
push
shll
int
sub
pop
push
repnz
shl
mov
sub
mov
xlat
lods
lret
mov
mov
sbb
cmp
gs
xor
sub
pop
or
sbb
aad
pusha
std
mov
ret
jbe
movsl
push
dec
imul
sahf
mov
xor
insb
add
mov
inc
clc
mov
adc
sti
sub
mov
inc
ljmp
leave
hlt
inc
fmull
cmp
adc
jae
add
add
mov
add
push
push
into
pop
dec
push
dec
paddsb
push
mov
mov
mov
cmp
or
xlat
in
repz
pushf
cmp
fisubl
or
sub
fs
faddl
inc
xor
sbb
ret
push
mov
xchg
movl
in
fwait
test
cmc
jge
lret
xchg
movb
dec
dec
dec
mov
dec
push
dec
xchg
gs
push
adc
adcl
sub
add
xor
call
mov
or
xor
ja
cmp
bound
and
and
adcw
sub
stos
add
test
and
sub
shrb
pop
xchg
out
mov
sbb
pushf
and
xchg
cmp
and
mov
push
or
fs
dec
dec
js
xor
lods
or
cltd
jmp
ja
xor
gs
mov
clc
mov
xchg
test
inc
mov
mov
rcrb
dec
sub
dec
sti
movsb
andb
stos
jo
jo
negb
jbe
popa
outsb
xchg
pop
dec
aas
jg
xor
daa
outsl
push
pop
pop
pxor
xlat
jl
add
mov
mov
fdivrs
mov
add
push
mov
jbe
add
pusha
xor
in
add
mov
jbe
push
cmp
test
in
pop
out
syscall
icebp
imulb
jmp
jmp
and
add
nop
pop
mov
repz
and
popa
bound
es
or
pop
sbb
jbe
add
cmc
and
lods
andb
pop
mov
sub
sbb
loope
and
xchg
adc
push
iret
jg
sbb
dec
pop
push
arpl
push
jecxz
cmp
jmp
lea
fisttps
xchg
ja
and
ficoml
outsl
push
mov
lahf
cmp
aaa
push
out
test
cmp
scas
xlat
pop
and
dec
xchg
adc
add
add
jmp
repnz
or
mov
pop
xlat
or
push
xchg
stos
loop
call
int3
jae
fcmovne
mov
iret
test
fld
adc
mov
loopne
jae
push
stc
enter
test
cmp
mov
outsb
movsb
mov
dec
adc
aaa
inc
nop
lods
test
sbb
cltd
imul
test
stos
sub
in
lods
es
pop
or
popa
sub
jnp
nop
mov
sub
andl
mov
cmp
int3
mov
mov
dec
movsl
pop
mov
cmpl
push
bound
pusha
jge
inc
ljmp
scas
pop
or
mov
loopne
fs
mov
xorb
and
jb
xchg
adc
in
mov
xchg
dec
sub
scas
shr
xchg
lods
xchg
fwait
cltd
imul
push
mov
jne
ljmp
shl
fucomip
xor
movsb
add
test
nop
mov
sub
imul
cmp
mov
xchg
inc
into
andb
mov
jbe
shrb
jne
push
loop
fwait
ret
or
out
mov
shll
jle
add
aam
mov
mov
imul
dec
out
and
push
scas
xlat
jg
mov
outsl
inc
clc
mov
sub
push
sarl
dec
js
popl
xchg
loop
push
adc
mov
in
mov
xor
icebp
out
std
sahf
cltd
idiv
cmp
sti
xchg
fidivs
cmp
sbb
test
adc
pusha
pop
nop
mov
mov
pop
fldt
xor
jge
cli
test
adc
ds
mov
pop
jge
imul
sbb
push
jne
mov
mov
pushf
ret
pop
push
sbb
adc
mov
dec
fsubrl
loopne
pop
pushf
rcrl
mov
rep
mov
or
test
je
push
or
jge
fnstenv
std
mov
mov
mov
xor
out
ja
mov
mov
dec
cmc
ret
cmp
fildll
cmp
aad
ror
sub
wbinvd
mov
and
xor
loope
mov
push
adc
insl
mov
adcb
aad
xor
add
lret
sub
lea
jbe
lret
and
incl
cmp
cmpsl
and
loopne
mov
xor
rolb
mov
push
pop
adc
mov
lahf
mov
orl
pop
and
xor
negb
inc
or
hlt
cwtl
mov
jno
inc
mov
sbb
stc
mov
lret
in
scas
lods
xchg
mov
lock
pop
sbb
aam
aam
fstpl
ljmp
or
ret
xor
mov
jae
push
adc
xchg
sbb
and
data16
inc
repnz
fdivrs
enter
in
mov
cmpb
adc
mov
jae
xchg
rcrb
push
mov
push
and
hlt
gs
cmp
stos
sub
sub
repz
pop
or
stos
mov
xor
cld
adc
outsl
sub
mov
jl
ret
push
sbb
cwtl
addr16
icebp
stos
rcrb
addb
imul
loop
jmp
lods
push
test
push
push
int3
cmpsl
lahf
jl
bound
push
loopne
mov
loope
sbb
push
dec
aad
or
dec
pop
jecxz
push
jg
mov
mov
fidivrl
push
mov
pushf
outsl
int3
lods
arpl
movsl
aad
cwtl
sarb
or
ds
xchg
into
xor
push
cmp
outsb
rcrb
dec
and
roll
dec
outsl
mov
loop
aaa
mov
call
idivb
adc
fldenv
insl
daa
mov
jl
jae
imul
and
lcall
adc
pop
add
mov
popa
sbb
sbb
cmc
jl
insl
addr16
rcrl
cmp
punpckldq
popa
call
loopne
cmp
rcll
fildll
mov
xor
mov
push
jnp
push
js
icebp
shrl
fstpl
push
inc
mov
data16
out
outsb
sub
lret
xchg
adc
idivl
out
cmpsl
rcrb
jo
add
adc
gs
cmpsb
sbb
dec
je
rcrb
lret
faddl
shlb
sbb
test
pop
scas
cld
mov
jmp
mov
icebp
gs
gs
push
dec
sahf
push
insl
push
mov
jp
dec
repnz
lds
pop
jnp
xchg
test
nop
fmuls
and
push
sub
cltd
gs
lret
inc
rorl
add
dec
outsl
xchg
stos
sub
rorb
and
sbb
insb
cmp
mov
xchg
lock
pusha
dec
jnp
imul
mov
cmp
push
fcoml
sub
adc
stos
ret
fnstenv
in
pop
aam
lcall
adc
jns
jecxz
mov
or
sub
inc
ds
cmc
dec
imul
daa
or
fstpl
and
adc
psrad
cltd
inc
sub
fst
or
dec
pusha
push
hlt
dec
push
push
push
push
js
out
pop
fs
mov
and
sbb
loope
popa
jecxz
aam
mov
stos
xchg
and
push
mov
jb
xchg
xchg
mov
jns
dec
mov
loop
jmp
bound
cmp
sahf
lcall
arpl
adc
sub
imul
xor
fdivrl
mov
ficoml
test
cli
nop
jecxz
mov
mov
mov
mov
lods
pushf
shrb
pusha
xchg
loope
mov
and
lret
fisttps
imul
adcl
push
push
jl
clc
pop
inc
pop
adc
ret
shlb
mov
add
mov
lods
adc
cmpsb
and
pop
pop
jnp
jg
dec
mov
jle
pop
adc
rolb
dec
push
dec
mov
sbb
or
ficoml
push
lods
xor
frstor
repz
or
adc
pop
lods
data16
repz
xor
mov
jnp
or
cmp
lcall
movl
mov
iret
cmp
adc
push
cmp
ljmp
out
sub
int3
dec
or
lret
pushf
cmp
cmp
inc
ret
lcall
adcl
mov
xchg
lret
mov
jg
loopne
sub
adc
adc
repnz
inc
lods
xor
into
js
pop
in
cmp
mov
incb
pop
push
mov
in
cs
adc
shl
jno
dec
sbb
pop
jae
out
nop
adc
inc
addr16
sub
xor
mov
mov
pop
fdivs
mov
xchg
mov
push
inc
scas
mov
and
sti
ficomps
cmp
in
fucomi
jmp
ss
pop
addb
jmp
and
repnz
xorl
and
or
push
inc
mov
mov
xor
inc
dec
lcall
js
ds
lods
push
mov
push
cmp
aaa
jne
and
add
and
mov
fwait
sub
dec
movsl
add
and
aad
mov
and
les
inc
pop
mov
ret
insl
fidivrl
daa
adc
outsb
xchg
cwtl
mov
adc
push
add
add
lock
es
fstl
or
jmp
push
sbbb
inc
bound
xor
jo
push
rcrl
mov
add
shl
mov
addr16
jb
imul
andl
test
mov
test
aam
inc
mov
aaa
test
fld
lods
push
xchg
neg
js
nop
notl
rcr
mov
or
movsb
mov
mov
mov
xchg
xor
mov
jge
mov
fnsave
push
seta
push
and
jmp
adc
mov
push
xlat
out
stos
xchg
stc
xchg
sub
xor
cmc
add
dec
scas
stc
pop
dec
or
add
leave
repnz
call
mov
mov
out
add
ret
insl
mov
or
inc
and
inc
cli
mov
rolb
xchg
imul
mov
push
aam
pop
scas
int3
insb
ljmp
mov
pop
fs
adc
mov
dec
inc
sub
filds
cwtl
and
or
inc
adc
movsl
push
test
cmp
inc
xor
jb
icebp
mov
lods
lods
xchg
gs
or
negb
test
add
adc
jnp
push
jne
adcl
daa
jg
or
aaa
inc
ret
fdivs
mov
mov
mov
call
fistps
js
adc
push
cmp
into
cmp
adc
fs
dec
int3
or
push
hlt
mov
outsl
add
loopne
pop
jmp
cmp
fadd
adc
pop
add
jg
sub
das
mov
pop
xor
andb
jl
jns
push
movsb
jmp
cmc
adc
test
push
dec
repnz
jns
hlt
sbbl
rcrl
out
shl
add
js
cmp
enterw
xchg
out
adc
inc
lret
and
call
xor
div
jae
out
jmp
gs
mov
enter
jo,pn
out
lea
sbb
lret
cwtl
push
inc
hlt
in
leave
and
jo
cs
mov
push
jp
sub
test
out
cmpsl
xlat
inc
inc
xlat
or
hlt
hlt
aas
jno
jbe
add
pop
cmc
inc
or
insb
fnsetpm(287
and
mull
mov
shl
in
or
scas
and
mov
jmp
fists
lock
and
mov
hlt
test
test
sbb
dec
ljmp
cmpsl
jbe
dec
push
sti
aas
ljmp
mov
cmpb
jge
sbb
notb
test
jmp
bound
into
add
xchg
mov
fstpl
inc
cmp
mov
adc
clc
dec
pop
sti
test
adc
or
mov
fnstenv
pop
shrl
or
dec
inc
push
jo
inc
lds
in
add
sbb
pop
stos
in
icebp
ss
movb
jne
or
sbb
lds
int
cmp
cmp
adc
out
inc
xchg
and
iret
pop
mov
daa
sub
pop
movsl
ja
push
mov
xchg
scas
aad
lahf
das
or
daa
scas
pop
push
imul
sbb
ds
fisubs
sti
lods
inc
inc
testl
mov
ds
push
dec
xor
hlt
pop
out
loop
cltd
cmp
movsb
push
sbb
les
out
repnz
push
jno
aaa
add
in
clc
adc
int3
test
popa
jns
and
pop
sbb
push
push
fwait
rol
push
scas
push
add
outsl
and
test
xor
xchg
out
or
pop
sbb
push
flds
fistpll
push
mov
adc
test
cltd
jecxz
ja
or
fadds
mov
shrb
dec
xchg
ret
iret
ds
and
iret
notb
addl
dec
mov
out
push
jp
pop
pop
and
int
stos
out
shrl
bound
ret
and
push
into
sub
push
dec
fadds
daa
adc
les
sar
test
movsl
shlb
xchg
test
ret
sbb
fadd
call
mov
push
out
push
ficoms
and
movsl
ret
mov
mov
inc
mov
cmpsl
mov
mov
adc
fisubs
push
jbe
pop
stos
inc
js
xchg
insl
pop
cmp
sub
gs
sub
gs
and
mov
xchg
jb
lret
loopne
lcall
lock
lcall
lea
push
xor
leave
pushf
jmp
jge
inc
in
mov
dec
repnz
jns
and
or
int
mov
inc
cmc
cmpsb
sbb
pushf
scas
lods
faddl
movl
mov
add
pop
xor
fcmovnb
mov
into
in
mov
popf
adc
and
mov
xchg
mov
test
mov
out
into
sub
push
fmuls
addr16
push
out
gs
popf
aaa
xor
in
data16
mov
pusha
es
popf
pop
xchg
inc
sbb
sbb
ror
outsb
push
mov
int3
jmp
inc
mov
jne
pusha
push
int3
fnsave
add
mov
std
push
push
icebp
dec
adc
add
pop
gs
hlt
int
mov
mov
movsb
loopne,pn
loop
mov
add
stos
out
mov
add
flds
jae
fcoml
lods
jp
sbb
lret
imul
jns
std
rol
lods
int3
adc
nop
mov
stos
or
pop
inc
js
sub
ret
test
ja
inc
xchg
sbb
dec
xor
test
push
and
movsb
jno
dec
dec
mov
or
xchg
cmpsl
loop
in
dec
int
js
mov
aas
mov
push
movsb
je
lods
xor
mov
sahf
mov
jge
dec
cli
leave
inc
test
mov
xchg
xchg
mov
jmp
inc
push
mov
ljmp
enter
fisubrl
call
xchg
inc
scas
insb
cld
clc
cltd
ss
mov
pop
mov
imul
cli
mov
test
scas
cmpsl
jmp
and
enter
test
cltd
out
cmp
adc
pop
mov
jnp
outsl
clc
mov
jg
mov
fiaddl
adc
cmpsb
sbb
xchg
outsl
mov
movsl
out
sti
mov
fiaddl
mov
push
test
movsl
int
cs
adc
pop
iret
lea
bnd
jbe
cmc
xchg
push
push
imul
jae
daa
rorl
adc
add
push
sub
aad
push
mov
push
push
pop
jge
or
pushf
into
out
mov
lret
call
adc
sbb
mov
fnstcw
loop
fimuls
jne
xor
stos
cmp
sbbb
stc
cmp
iret
push
or
scas
aam
mov
adc
or
sub
je
mov
inc
cmp
dec
scas
call
sub
cmp
notl
add
outsl
inc
popf
jecxz
mov
sub
mov
mov
dec
lea
dec
adc
pop
fsubrp
and
stos
hlt
int
xchg
mov
aad
mov
sub
jmp
test
cmp
xor
js
fldt
enter
mov
jbe
aas
pop
add
jnp
pop
ret
xchg
jbe
rolb
and
jg
aad
mov
pop
or
lahf
jg
inc
mov
sbb
push
jno
js
or
sub
inc
pop
sbb
in
movsl
mov
out
jp
lahf
mov
adc
cmpsb
sub
push
aas
xor
fidivs
mov
mov
inc
iret
add
and
pop
imul
out
add
mov
pop
sub
aaa
xchg
push
mov
mov
pop
sahf
iret
ss
iret
inc
mov
loopne
push
pop
push
mov
sub
inc
andl
or
addb
or
scas
std
xchg
and
add
cmc
lret
je
mov
in
add
mov
adc
ljmp
in
repnz
movsl
jne
insl
xchg
sub
cli
fsubl
pop
or
add
push
daa
push
rdmsr
push
pushf
out
xchg
adc
xor
leave
xchg
std
pop
sub
mov
add
out
clc
ljmp
loope
jbe
xchg
xor
rolb
inc
mov
pop
imul
pop
test
cmp
sahf
xor
mov
jb
lods
add
sti
add
mov
jnp
ljmp
fmul
dec
mov
and
dec
dec
sub
std
xchg
inc
push
add
clc
in
into
pop
pop
sub
pushf
xchg
into
mov
shl
and
cmp
out
lcall
xchg
out
adc
jbe
das
add
mov
adc
pop
test
out
jb
and
out
sbb
popa
ja
inc
lods
fs
push
pop
mov
sbb
ja
jmp
mov
cmp
arpl
pop
jne
dec
xor
add
maxps
mov
insb
jge
xorb
mov
mov
jb
cmpsb
inc
cs
pushl
mov
mov
sub
iret
out
lods
lods
rcrb
out
lock
and
sti
mov
cmp
add
pop
loope
push
mov
mov
gs
shr
jae
sbb
test
cmp
call
cmp
mov
or
cld
mov
out
inc
xchg
cmp
cltd
push
mov
roll
test
and
or
jb
add
push
aaa
icebp
dec
mov
aas
fidivrl
cmp
or
or
dec
repnz
outsb
out
mov
mov
es
cli
lock
das
xor
add
adc
pop
leave
inc
and
add
cmp
push
hlt
aaa
xchg
repz
adc
ss
and
inc
dec
mov
xor
aad
daa
pop
stos
leave
neg
in
test
movsb
mov
push
in
jns
push
popf
inc
sbb
fimuls
std
jg
mov
test
std
fadds
lods
or
cmp
xor
pop
sub
js
fsubr
out
inc
and
adc
xchg
push
push
mov
jnp
aad
out
popf
lret
jnp
and
call
rclb
cmp
das
lods
inc
push
arpl
cmp
lds
adc
pop
mov
mov
jne
dec
mov
adc
pushf
arpl
adc
sbb
xchg
mov
mov
jbe
fildll
mov
sbb
gs
and
mov
push
xor
add
sbb
lcall
dec
push
mov
shll
mov
or
mov
int3
sub
mov
jmp
ja
push
stos
adc
and
and
mov
in
inc
xor
sub
pop
mov
or
xchg
test
add
scas
jle
gs
xor
and
sub
sbb
dec
mov
js
or
lock
daa
ja
adc
out
filds
xchg
xor
fs
xor
lahf
hlt
ret
cmpsb
push
out
test
sub
jl
movsl
and
dec
dec
scas
cmp
repnz
push
xchg
in
jae
sub
or
clc
and
fisubl
mov
cmp
xchg
pop
loope
sbb
mov
std
ret
icebp
aas
sbb
push
cwtl
jmp
mov
inc
xchg
mov
push
mov
repnz
sahf
mov
adc
fstpl
xchg
icebp
mov
cmpsl
out
push
and
jo
inc
mov
test
jnp
fstpl
test
int
stc
cmp
jno
mov
pop
push
dec
mov
mov
mov
xor
daa
scas
sub
and
movsb
negb
das
call
sbb
sbb
pop
xor
and
mov
or
or
fidivrs
lock
shrl
test
dec
dec
sbb
insl
push
in
jae
xor
mov
sub
add
pop
cld
mov
dec
push
int3
clc
ja
mov
lds
pop
pushw
fisubs
popf
sub
jne
pop
stos
daa
enter
mov
jbe
enter
jmp
cmp
outsb
addb
cmpsb
lahf
push
int
call
xor
sbb
inc
hlt
or
stc
and
cmp
inc
rclb
mov
sbbb
cmpb
in
jbe
aaa
mov
inc
stos
xchg
jl
push
nop
mov
scas
jl
mov
mov
sbb
jg
xchg
imul
mov
inc
lea
xchg
loopne
rcl
jb
mov
push
imul
mov
cmp
inc
push
dec
ljmp
outsl
sar
xchg
sbb
mov
sub
int3
cmpsb
jae
nop
inc
pop
push
stc
pop
or
shl
fcmove
nop
push
pushf
mov
jne
jae
aam
hlt
fwait
popf
ret
loopne
push
sub
out
popa
test
push
lret
mov
stc
jle
xchg
ja
dec
lcall
lea
pop
cmc
insb
mov
scas
dec
clc
inc
inc
ljmp
hlt
lret
std
fildl
out
ret
ret
add
mov
mov
pause
lock
dec
mov
xchg
dec
lret
push
dec
inc
es
pop
ss
clc
jmp
jp
dec
cmpsl
loop
jno
xor
adc
mov
push
out
lds
jne
xor
shll
cmp
and
pop
jg
jl
dec
xchg
addr16
leave
jno
ret
cmpsl
repnz
push
mov
decl
mov
jg
cmp
push
sub
data16
xor
push
pushl
loope
jne
add
xchg
js
fstpl
sarb
lret
movsb
dec
lea
fmull
mov
push
ja
jmp
lods
mov
testl
push
adcl
cltd
or
das
sbbb
fidivl
fmull
cmpsl
inc
sub
jns
fwait
mov
stos
out
fsts
xchg
and
dec
aaa
movsl
addb
mov
and
cwtl
adc
fcomp
pop
outsb
adc
cmp
iret
bound
fstpt
xchg
adc
popf
stc
int
push
shlb
xor
dec
setle
xchg
mov
je
lret
cwtl
testb
push
outsb
mov
adc
push
xchg
pop
call
pop
fwait
pop
push
add
sbb
aad
sarl
cmp
pop
xor
sub
inc
add
jb
ja
or
test
lock
dec
adc
cmc
adc
lcall
sbb
bound
push
jb
sbb
imul
mov
outsb
pusha
mov
cmc
mov
ljmp
clc
adc
shlb
inc
mov
or
insl
dec
in
jmp
rcrb
lcall
and
inc
cmc
rcrl
shl
fmulp
mov
lock
pop
jmp
in
jecxz
mov
jl
xor
cmpb
cmp
jmp
fildl
lock
inc
cmp
inc
ret
sbb
push
push
sub
jae
jecxz
shl
pop
shll
pop
pop
push
sbb
or
push
pusha
jg
mov
mov
pop
adc
lds
stos
xchg
inc
testb
jne
and
hlt
ss
xor
pop
mov
pop
mov
lods
mov
lret
lea
movsb
fnstenv
cmp
sbb
int3
dec
adcb
fdivp
test
cli
nop
jno
in
mov
mov
and
js
out
sbb
rcrb
xchg
push
iret
sub
test
cmp
ret
xchg
inc
jg
and
jnp
lret
jl
gs
aas
jo
mov
push
adc
enter
push
cli
mov
lods
jp
scas
test
mov
mov
lods
jle
xorl
mov
jb
xchg
out
ficomps
sub
roll
int3
mov
leave
test
sbb
stc
push
addr16
mov
xor
pop
mov
repnz
mov
loopne
pop
adc
loopne
push
andb
inc
mov
adc
arpl
mov
lahf
mov
mov
cli
pop
sbb
test
or
cmpb
stc
out
sub
stos
and
ljmp
aaa
repz
mov
imul
es
jno
mov
fsubrp
mov
xlat
ret
ja
lods
add
add
loope
inc
fiaddl
mov
pop
push
scas
imul
xchg
mov
orb
cmp
ja
lock
ficomps
outsb
add
sub
cmp
ja
inc
scas
loope
fs
mov
test
push
in
mov
insl
cltd
scas
add
xchg
mov
insl
into
fcmove
shrl
cli
lods
inc
dec
mov
mov
jbe
or
pushf
sbb
out
lret
mov
pop
and
dec
fs
cs
shrb
test
orb
sub
mov
out
rolb
ret
fsub
pop
jne
aam
js
or
jnp
fdivl
inc
push
stos
mov
xor
dec
repnz
xchg
inc
pushl
xor
push
es
cmc
and
fisubrs
movsb
int
sahf
lahf
sbb
mov
stos
cmp
add
lock
shrb
loope
decl
das
loop
jle
xlat
test
insb
and
mov
lock
sbb
rcrb
cmpsl
and
je
js
cmp
mov
mov
push
enter
or
dec
pusha
cmp
lock
xchg
sbb
mov
ljmp
testb
jle
xor
arpl
jae
rol
push
lods
out
icebp
rclb
addr16
int
jl
rclb
lods
cmp
lret
stc
mov
loop
xor
and
shll
lret
sahf
lahf
cltd
int
sub
xchg
test
lret
sub
or
xor
loopne
add
jp
mov
fimull
cmc
jmp
icebp
push
or
fsubl
inc
sti
jg
das
scas
adc
aas
adc
jp
adc
call
test
jl
pushf
cltd
push
xor
cmp
xchg
bnd
loope
xorl
movsl
imul
mov
movsb
fs
fcmovbe
movsb
dec
nop
and
mov
int
cld
int
scas
into
pop
inc
push
add
popa
daa
mov
jecxz
out
sub
fstps
iret
pop
mov
push
push
leave
mov
and
sarl
mov
sbb
lds
rcrl
mov
jge
cmp
stos
inc
dec
jmp
std
cmpsb
and
mov
or
cld
loope
outsb
pop
dec
and
xor
inc
aaa
scas
int
jg
xchg
jne
int
pusha
sti
cmp
fsubrl
xor
insb
pop
push
add
xor
pop
mov
dec
mov
or
and
add
xchg
mov
xor
lret
ret
ljmp
xchg
fcmove
enter
scas
lods
and
pop
xlat
cwtl
or
lock
or
push
mov
cmp
lret
ror
cmc
repnz
scas
jge
adc
xchg
adc
sbb
xor
jecxz
repnz
iret
hlt
movsl
lds
in
je
out
xchg
push
jne
imul
jne
mov
push
js
rolb
dec
mov
cmp
leave
lcall
xchg
sbb
repnz
movl
sbb
sbb
popf
xchg
stc
sahf
sub
cwtl
std
pop
lahf
outsl
cmpb
mov
movsl
mov
shlb
test
or
jp
xchg
fisttpl
loop
and
sti
enter
dec
in
add
lds
add
jb
aas
ret
jg
and
rclb
dec
pop
mov
loopne
scas
fdivl
fstl
mov
cwtl
movsl
xchg
dec
dec
outsl
adc
ret
in
fistps
fldcw
addr16
int3
sbb
imul
cld
in
das
insl
vdivsd
mov
lods
adc
mul
sbb
mov
dec
adc
xlat
aam
test
push
cs
cmp
popa
cmp
test
gs
dec
push
jns
imul
nop
fs
mov
jg
sahf
xor
mov
xchg
cwtl
mov
test
adc
stos
rclb
push
or
inc
push
and
xlat
sbb
outsl
pop
dec
pop
xchg
xor
cwtl
daa
add
inc
mov
arpl
or
cmp
mov
jno
out
loope
cld
pusha
pop
fisubrs
sti
sbb
and
inc
or
imul
dec
mov
sbb
in
sbb
popa
mov
or
and
jbe
insl
mov
add
das
sbb
mov
jl
add
sub
int
into
movsb
xchg
mov
repz
test
sub
out
negb
jle
dec
pop
and
aaa
sub
cmp
mov
cmp
xchg
pop
imul
mov
aas
mov
or
insl
in
ljmp
leave
fdiv
cs
dec
mov
cmpsl
adc
imul
jmp
push
jno
push
pop
jl
xor
pop
push
inc
aad
addr16
or
rcll
rorb
call
fstpt
push
fisubs
fldcw
enter
stc
div
sub
xor
imul
inc
repnz
in
or
pushf
inc
mov
mov
mov
dec
aam
mov
pop
inc
inc
mov
jmp
call
adc
cmpsl
pop
inc
inc
mov
mov
add
repnz
mov
xorb
es
leave
jmp
adc
xor
adc
sub
xchg
in
jae
jp
in
xor
ss
dec
mov
or
fcmovu
dec
mov
loope
mov
pop
dec
adc
add
sub
pop
inc
inc
imul
jmp
dec
mov
test
mov
fmul
aam
jae
ds
add
out
inc
arpl
sbb
cli
fnsave
in
cld
inc
lods
push
pushf
xchg
sti
mul
dec
cltd
mov
outsb
test
lods
loope
jae
in
sub
jnp
popa
mov
mov
loope
dec
mov
imul
pushf
cld
cmpb
ret
jecxz
mov
cmp
aad
dec
inc
fmuls
repz
xor
cmp
jno
add
shlb
imul
jae
je
push
sbb
int3
bound
rorl
xchg
sub
mov
push
inc
sub
xchg
adc
add
in
loop
mov
fmull
or
cli
jo
pop
fcompp
daa
and
push
and
clc
adc
call
inc
mov
push
cwtl
int
push
pusha
and
in
es
dec
ds
jmp
jne
aam
fstpt
stos
lods
jnp
dec
push
cmc
sbb
cmp
sarl
repnz
pushf
inc
gs
sub
lds
mov
xorb
jecxz
adc
cs
scas
ds
push
int
adc
cmpb
loopne
jne
lea
fldt
popf
int3
inc
sub
mov
sbb
xlat
jb
xchg
sub
jno
insb
in
mov
pop
jg
cs
dec
pop
add
lret
cmpsl
enter
outsb
out
inc
mov
nop
inc
mov
rorb
sub
aas
rcr
mov
xor
jge
mov
aaa
and
mov
adc
icebp
out
inc
push
mov
sahf
sbb
inc
cmc
addl
sahf
fildl
rolb
jnp
jns
xchg
aas
inc
sbb
scas
sbb
hlt
repnz
cmp
rcrb
rorb
outsl
and
jne
mov
js
hlt
call
pop
and
imul
leave
into
push
cld
add
cmp
test
in
fisttpl
lods
in
dec
aas
dec
jae
jnp
ret
es
fcoml
mov
sbb
push
inc
cmc
dec
jns
inc
add
push
and
stc
adc
test
int
pop
hlt
adc
loopne
in
insb
rcrb
adc
add
shll
add
rclb
stos
imulb
std
icebp
fst
sub
in
cmpsl
int
loopnew
hlt
pop
xor
js
xchg
pusha
pusha
xor
sbbb
sub
mov
xor
pop
ds
inc
mov
sbb
cmpsl
pop
in
xor
add
loopne
mov
movsb
xchg
add
mov
cmpb
popf
lock
inc
sub
icebp
jmp
rolb
stos
adc
dec
mov
or
les
mov
or
es
xor
data16
pop
mov
popa
bound
js
sub
or
out
inc
or
mov
cltd
xor
jl
jne
sbb
mov
or
mov
inc
data16
mov
ja
jmp
scas
cltd
adc
rcr
stos
mov
shll
insl
lret
lea
xor
inc
cmove
in
xchg
jbe
aas
iret
push
jecxz
test
popa
xchg
inc
mov
or
movsl
test
bound
sahf
xchg
jle
cmp
adc
jb
or
popa
loopne
xlat
mov
cld
xlat
imul
test
js
cld
mov
xchg
shl
pop
into
jle
arpl
pop
add
sbb
rol
mov
dec
add
icebp
xor
shr
inc
pop
add
loopne
cli
adc
insb
lret
repnz
test
mov
mov
xchg
in
loope
push
mov
mov
mov
pusha
pop
push
mov
loope
test
sbb
xor
fadd
adc
nop
mov
mov
mov
test
notl
pusha
bound
push
cmp
cmpsb
add
add
mov
and
or
ret
idivl
jmp
pop
adc
xchg
pop
nop
jp
pop
in
rcrl
aas
cmpsb
fisttpll
xor
mov
mov
push
std
jmp
data16
xchg
daa
flds
fldt
mov
sahf
fldcw
jb
call
inc
popf
cmc
adc
dec
movsl
in
outsb
push
inc
cmp
pop
loope
push
aas
pop
push
jmp
aaa
cmp
cs
cwtl
pop
ds
push
mov
imulb
mov
and
mov
adc
sub
inc
aam
mov
fadds
or
out
mov
mov
lods
lret
call
test
pop
ficoml
sti
icebp
mov
in
sub
dec
loope
xlat
push
fldt
arpl
decb
imul
icebp
mov
xor
pusha
push
mov
pop
dec
sbb
loopne
push
aas
aaa
mov
loopne
cmpsl
add
test
cmp
and
jbe
out
shlb
adc
dec
jecxz
push
jns
xchg
mov
mov
push
negb
sbb
or
jmp
push
hlt
call
push
pusha
sbb
xchg
pop
gs
xor
orb
cmp
push
mov
scas
sub
jp
test
daa
lret
jmp
pop
addr16
mov
sti
gs
pusha
imul
inc
es
out
fucom
push
sarb
and
dec
mov
add
arpl
aam
xchg
pushl
add
mov
pop
arpl
ss
dec
inc
mov
fistpl
mov
cmpsl
sahf
fldt
lret
pushl
stos
push
sbb
lods
cmp
xor
dec
mov
jmp
cmp
jne
mov
push
xor
ljmpw
es
pop
pop
int
jne
jg
jle
adc
push
add
test
insb
cmpsb
mov
bnd
dec
cmpsl
pop
mov
mov
dec
pushf
pusha
aas
push
adc
pcmpeqw
and
stos
int3
ret
fsubl
cwtl
sub
shll
mov
ss
jno
cmp
xlat
int
out
ljmp
cmpsb
pop
imul
mov
popa
and
outsb
in
lret
pop
mov
inc
and
sub
and
repnz
mov
das
out
xor
in
out
aam
adc
lock
mov
sbb
call
push
inc
pop
dec
mov
test
mov
sbb
pop
xchg
fldt
shl
rcr
sbb
pop
pop
lea
jmp
test
pop
cwtl
lcall
lea
add
xor
xchg
cld
out
stos
mov
push
fwait
lahf
pusha
or
movsb
add
inc
mov
inc
jne
adc
push
movsb
fwait
mov
fstl
cmp
loop
mov
xchg
xchg
nop
inc
nop
jae
shr
lods
sub
ljmp
push
add
push
stos
fdiv
mov
mov
pop
rorl
xchg
or
std
call
pop
cmpsb
and
lret
sub
adc
mov
rorb
rorb
xlat
mov
das
adc
inc
pop
pop
sub
inc
push
fiadds
jl
sbb
ljmp
lret
add
mov
and
ljmp
dec
sbb
ror
fsts
push
add
xchg
mov
add
iret
xor
ret
mov
into
push
outsl
lret
arpl
adc
cmpsb
pop
inc
es
or
jo
sti
sbb
pop
mov
stos
shll
and
push
imul
sub
mov
mov
sub
in
dec
fadd
hlt
add
aad
and
add
cmpsl
mov
sbb
lahf
popf
jbe
mov
lret
lds
int3
xor
mov
movsl
neg
jne
jo
dec
popa
mov
push
or
adc
dec
ljmp
in
mov
lret
pop
mov
dec
iret
scas
jo
in
xorl
daa
push
iret
adc
popf
les
mov
lods
cmpsl
dec
arpl
pop
lds
in
pop
pusha
and
xchg
add
mov
mov
aas
int3
xchg
jg
adc
dec
jp
aad
out
ror
jle
movsl
cmp
sub
adc
ja
cmp
adc
inc
pop
push
ja
jns
roll
inc
mov
nop
pop
sbb
imul
sbb
cmp
xor
jle
push
out
cmp
pop
mov
cmp
fsubl
adc
or
or
test
sub
xchg
dec
mov
shl
inc
mov
xchg
insb
mov
xchg
hlt
lahf
in
and
std
cmc
inc
arpl
mov
sbb
jnp
adc
call
loopne
cmc
shlb
push
lret
and
jg
push
pushw
jo
dec
push
fsubr
push
cmpb
xchg
inc
cmp
fmul
mov
loop
or
mov
lods
mov
jmp
cmc
xchg
movsb
sbb
outsl
pop
mov
repz
pop
imulb
dec
in
mov
in
mov
flds
push
jl
clc
adc
xchg
in
rcr
sub
lock
push
stc
or
mov
or
xor
ljmp
ds
add
mov
mov
xor
lahf
mov
stos
mov
dec
push
fdivl
hlt
loope
lret
jg
push
divl
repz
xchg
nop
je
push
imul
dec
fucom
enter
xchg
icebp
hlt
jmp
dec
jecxz
bswap
pop
popa
pop
cltd
dec
into
aas
pop
movsl
inc
mov
stos
jne
rcrl
mov
jmp
inc
adc
stc
fistl
inc
cmp
test
pop
jmp
inc
pop
add
sub
adc
xchg
dec
and
movsl
xchg
push
shlb
adc
sub
fs
insl
cmpsb
sbb
mov
mov
test
pop
in
dec
aam
xchg
iret
pop
add
fdiv
and
adc
jl
fwait
dec
dec
outsb
insl
add
xchg
insl
mov
fldcw
jl
jmp
sub
push
rorl
sub
jl
mov
mov
fnstsw
inc
jmp
cmp
and
std
and
test
lahf
mov
pusha
add
sti
adc
out
lods
lahf
cld
mov
mov
sbb
imul
pop
add
js
std
jp
cs
ds
sub
or
mov
dec
adc
dec
xor
lds
div
negl
in
adc
push
jbe
push
loop
dec
mov
cwtl
and
ja
push
mov
out
jg
fnstcw
vpmaddwd
arpl
xor
sbb
jb
fnstsw
lcall
push
idivl
scas
jg
push
sbb
rorb
cmp
ss
aam
lret
movsl
jecxz
dec
cmpsb
fisubs
xor
sbb
jmp
pop
mov
adc
jo
ficoml
and
push
aam
into
nop
and
inc
lods
dec
or
cltd
or
pusha
cwtl
outsb
dec
jno
cmp
leave
pop
or
xor
fwait
inc
jbe
xchg
incb
mov
inc
aam
es
mov
push
loopne
repnz
push
mov
imul
fneni(8087
mov
cmp
mov
loope
stc
lea
push
sub
nop
in
andb
inc
dec
out
hlt
mov
cmp
jbe
ret
repnz
pop
xchg
test
pop
std
repnz
ret
fcom
mov
cmpsb
outsb
mov
lcall
mov
enter
ret
std
inc
jp
xchg
or
adc
dec
test
mov
sub
mov
and
lcall
xchg
les
divl
cmpsl
push
push
cmp
jg
mov
xchg
inc
pop
enter
fistl
rclb
dec
add
repz
mov
adc
cmc
adc
in
jl
out
cmp
push
clc
cld
adc
icebp
xchg
fbld
sbb
jb
adc
xlat
in
movsl
add
jp
mov
push
les
aad
repnz
lods
xchg
int
or
movsl
push
popf
sbb
inc
cmp
cmp
imul
popa
int3
sbb
inc
dec
mov
sub
shr
push
xor
repnz
xchg
jo
idiv
and
mov
out
xchg
and
jmp
lcall
icebp
xchg
cmpsb
add
jge
sbb
inc
pop
inc
pop
imul
push
jno
mov
push
cmp
mov
scas
push
cmp
sub
cltd
rorl
inc
repz
mov
cmp
jg
xor
mov
js
push
dec
jb
add
push
test
ja
fstpl
add
negb
sbb
adc
cmp
lock
in
stc
outsl
icebp
popa
jge
adc
jns
dec
dec
in
insl
mov
cld
lcall
and
std
sahf
data16
dec
dec
dec
std
push
test
fcompl
fsub
xor
and
out
in
adc
adc
lret
aaa
or
sub
mov
in
jl
ss
add
or
push
repz
mov
stos
int3
pop
fwait
sbb
dec
mov
xchg
outsb
negb
and
movsb
pop
inc
repz
adc
mov
imul
adc
je
pop
jmp
mov
jp
pop
sbb
push
jnp
test
xor
sub
fcoms
mov
loope
add
cmp
leave
jns
mov
add
xchg
add
add
and
int
in
sub
test
mov
and
and
add
jo
fidivl
inc
pop
mov
jge
mov
popf
pop
idiv
fwait
pop
cmp
test
aam
les
je
mov
cmp
sub
or
jmp
pop
cmp
pusha
pop
push
cltd
pop
je
es
lret
lahf
pop
test
in
or
pop
cltd
xchg
insb
movsb
mov
fcomi
js
jne
mov
insb
cmp
mov
inc
out
ficomps
jp
popa
push
cmpsl
mov
sbb
and
adc
js
adc
insw
add
aam
push
pop
aad
cld
push
or
add
push
mov
dec
or
shll
js
adc
push
jp
lret
sahf
jg
test
insb
jns
clc
out
jecxz
jp
sub
pop
les
and
push
mov
inc
scas
or
inc
lea
lahf
mov
mov
into
cmp
js
dec
in
pop
dec
je
jmp
xor
loope
xlat
out
sbb
ds
nop
je
push
pushl
pop
pop
in
pop
lock
es
add
pop
xchg
push
aaa
jne
das
les
daa
pop
cmc
pop
daa
shll
mov
pop
sub
sbb
mov
dec
push
cmpsb
mov
movsl
sti
lret
lret
and
sbb
sub
stos
or
enter
mov
cwtl
push
push
inc
adc
pushf
or
mov
sub
xor
adc
adc
push
inc
adc
jge
hlt
mov
dec
ror
jmp
pushf
pop
and
sub
mov
addr16
movsl
lds
popf
xchg
imul
inc
outsl
aad
into
ds
testb
and
test
mov
jno
push
ret
imulb
mov
add
xor
jne
xchg
dec
sahf
mov
pop
inc
dec
or
nop
jmp
insb
insb
movsl
adc
xor
mov
dec
repnz
mov
or
push
mov
jo
dec
mov
dec
jge
push
cltd
outsl
cmpl
dec
pop
imul
add
dec
xor
xor
inc
fdivr
push
xchg
fcmovnb
pop
imul
and
cmp
inc
sub
adc
stos
or
jp
fidivs
loop
into
sub
pushf
scas
sti
inc
push
leave
adc
pop
ret
mov
and
iret
jae
jg
adc
in
fstl
or
mov
sub
shr
inc
push
mov
shll
dec
notl
mov
add
push
mov
and
push
inc
orb
mov
jns
push
mul
xchg
fildl
loope
mov
bound
and
std
mov
push
cmpsl
xor
data16
mov
pop
fsubl
into
imul
add
jb
sub
aas
pop
shll
iret
dec
popa
and
idivl
movsl
push
aam
fimull
mov
lret
mov
ret
push
push
movsb
mov
jp
xchg
cmp
xchg
cmc
ss
and
daa
xchg
mov
xor
xchg
imul
or
daa
inc
enter
jl
pushf
cmp
or
and
aas
bound
pop
jp
sub
inc
xor
mov
pop
push
outsb
imul
cli
xor
int3
jae
sub
lret
out
push
rclb
arpl
xchg
fnstcw
sub
dec
sub
push
daa
andb
outsb
cmpl
mov
cltd
and
dec
fwait
sti
in
aam
mov
pop
sbb
psubsw
pop
mov
and
addr16
jno
loope
jbe
in
rcrb
lahf
ja
cli
cmpsb
sub
stos
lock
push
mov
sbb
test
or
cmp
lcall
jmp
hlt
and
rorl
pop
xchg
xchg
insb
fdivl
inc
out
or
fstps
add
cmp
fcoml
inc
or
mov
stc
xchg
test
ret
fsubrl
test
icebp
out
sub
sub
xchg
xchg
and
cmp
xchg
and
xchg
ret
fs
je
fsubs
push
pop
jae
dec
loopne,pt
xor
push
es
pop
adc
inc
jecxz
pushf
mov
xor
pop
sbb
adc
shl
inc
add
gs
lock
mov
std
adc
insl
jecxz
mov
aad
fcoms
jb
and
adc
int3
das
pop
mov
mov
or
cli
mov
push
pop
test
in
mov
lods
adc
dec
xchg
rolb
adc
pop
scas
dec
xor
imul
mov
mov
ljmp
cli
dec
push
and
push
stos
dec
xor
inc
shlb
cmp
dec
add
stos
gs
add
repnz
mov
push
cmp
or
mov
js
out
pop
and
clc
out
sub
adc
popa
xchg
testb
sub
push
add
xchg
xchg
cmp
scas
and
popf
push
ds
in
mov
ret
add
sbb
mov
push
mov
adc
int3
movsb
stos
cld
cmp
loopne
dec
loope
clc
ss
pop
mov
cli
pushf
in
mov
cmpsl
jl
adc
xchg
in
sub
sbb
rcrb
dec
inc
fistl
dec
decl
repnz
xchg
pushf
fiadds
push
out
add
cltd
cltd
xchg
jmp
cmp
pusha
jp
sbb
out
lret
push
mov
idivb
sub
jns
push
jbe
out
enter
hlt
jae
loop
fstpl
fcos
rcrl
clts
pop
mov
cmp
push
xchg
mov
xor
pop
in
mov
iret
in
je
popf
lock
fstps
imul
ds
nop
inc
add
aad
lods
addb
pop
out
xor
xchg
jae
out
inc
add
negl
jmp
adc
clc
in
push
and
icebp
mov
mov
andl
pop
test
in
rol
bound
inc
bound
ljmp
sbb
add
pop
lahf
subb
pop
dec
daa
clc
xchg
and
or
mov
inc
jecxz
ds
jno
sub
mov
jb
mov
shll
das
sub
mov
pop
in
outsb
pop
rolb
add
aaa
push
ret
dec
sub
cmp
xchg
fstps
inc
in
add
mov
dec
div
ja
pop
adc
sbb
push
js
adc
test
mov
mov
addr16
and
mov
jno
lods
jecxz
adc
ja
add
push
mov
xlat
out
lods
push
pusha
lock
cmp
test
mov
cli
adc
pop
mov
ret
outsl
and
stos
int
loop
inc
mov
dec
call
inc
pop
pop
lcall
aaa
insl
mov
cmp
pop
jle
cmp
jns,pn
pop
dec
rcrl
xor
mov
fwait
push
movl
xchg
adc
sarl
pop
ja
rcl
jmp
mov
inc
and
in
es
xchg
xorb
lods
inc
sub
pop
stos
and
xorb
mov
fmul
enter
xlat
ret
gs
adc
xor
lcall
sub
inc
out
mov
jae
mov
sbb
and
mov
or
xchg
sbb
xchg
rol
and
rorb
push
push
jl
dec
iret
das
mov
mov
aaa
cmpsl
loope
daa
add
xor
aas
daa
xchg
hlt
jle
xchg
insb
lcall
push
inc
pop
mov
loop
jg
pop
cmp
jl
out
pop
jge
jp
iret
jbe
mov
decb
ret
xor
inc
add
mov
ret
inc
dec
xchg
lcall
test
mov
rorl
test
or
rclb
pop
ja
sub
pop
sbb
cmc
dec
dec
loope
xor
sbb
add
push
mov
lds
loope
test
cmp
xchg
push
cli
pop
adc
ljmp
in
dec
jg
fidivs
in
inc
xchg
dec
push
and
xchg
dec
push
fistl
scas
xchg
fbstp
xchg
dec
std
add
or
cli
xchg
mov
mov
jne
leave
rclb
js
xchg
shll
mov
rcrb
insl
cmc
sbb
inc
add
push
stos
fstpt
das
jbe
jg
test
sub
gs
xor
jnp
jae
in
subb
in
and
hlt
mov
inc
xchg
add
into
and
cmp
xlat
sub
loopne
int
and
mov
sysexit
cld
and
aaa
push
cmc
jle
popf
sbb
cmp
cmpsb
add
loope
or
pop
jl
sti
fwait
test
mov
ja
cmpsb
out
out
aaa
cmpsl
mov
lret
dec
cld
mov
or
daa
in
cmp
jl
pushf
mov
lods
pop
cmp
les
subl
and
inc
push
lds
adc
scas
xchg
cvtps2pd
push
mov
outsb
fisttpll
xchg
adc
dec
scas
jno
pushf
loopne
fwait
xchg
and
cmpsb
adc
dec
mov
push
add
xchg
fiaddl
mov
call
lret
incb
lods
push
sti
jnp,pn
movsb
test
mov
incl
add
mov
and
sbb
dec
or
daa
add
jo
mov
fcomps
sub
fwait
cltd
rcrb
nop/reserved
or
icebp
mov
ja
fwait
in
push
pop
pop
and
dec
mov
hlt
andl
lods
popf
adc
jle
shlb
ss
roll
push
xchg
lods
xor
xchg
testb
xchg
jecxz
lock
cwtl
mov
ficompl
ja
xchg
push
pop
arpl
cmp
jmp
rcrl
inc
inc
daa
push
arpl
out
in
cmp
insb
in
stos
adc
xor
jb
pop
mov
or
testb
sub
ret
push
xchg
mov
mov
int
push
out
std
call
push
and
mov
xor
inc
mov
ret
inc
lods
push
mov
call
jo
aaa
lods
int3
loopne
dec
dec
rcl
xchg
pop
cld
xor
aad
push
add
mov
push
dec
sub
idiv
fcoms
je
adc
mov
xchg
int3
insl
mov
aas
pop
and
test
subl
dec
and
mov
outsb
adc
loopne
ret
jnp
idivb
addr16
xchg
xchg
sub
out
xchg
sbb
test
inc
xchg
movsb
fwait
cltd
mov
mov
lds
inc
sti
push
bound
pushf
dec
orb
nop
jmp
pop
pop
sbb
sti
jp
mov
push
inc
inc
fbld
or
lea
jns
sub
out
jne
mov
daa
sti
ljmp
ficoms
mov
scas
xorb
and
das
cltd
xchg
int3
addl
pop
jle
cmp
addr16
jmp
sbb
jl
fisubrs
psraw
rcl
mov
xor
ja
ss
adc
sub
aaa
bound
lret
adc
loopne
mov
jne
iret
arpl
sub
xorl
sub
xorb
mov
movsb
jp
jg
lds
pusha
inc
mov
std
pop
or
mov
jl
push
mov
push
shlb
cmpsl
jns
jg
jo
xchg
ss
and
add
push
dec
adc
adc
cmp
mov
das
add
xlat
push
or
sub
out
pop
std
lcall
mov
std
subl
sub
div
sahf
cmp
sub
xor
shrb
outsl
push
popf
and
fldcw
pop
and
dec
mov
orb
push
pop
stc
pop
push
adc
xchg
cltd
sbb
push
dec
dec
and
add
pop
mov
in
sarb
in
pop
xlat
lret
hlt
inc
std
dec
or
fisttpll
jno
gs
loopne
leave
mov
into
push
push
iret
lods
or
stos
lahf
stc
andb
mov
cld
dec
icebp
inc
dec
int3
xchg
test
mov
cmpsl
jno
arpl
orl
pop
dec
adc
iret
adc
push
jno
movsb
daa
test
cli
mov
cmp
inc
add
repnz
mov
cmp
fldt
mov
cmpsl
jmp
jbe
or
ffree
push
in
insb
mov
insb
imull
sub
jecxz
out
jp
clc
negl
stc
lret
xor
cmpsb
test
gs
mov
lret
push
cltd
loope
jle
fadds
jns
xor
pop
mov
xchg
mov
sbb
cli
orl
enter
fldz
sub
push
das
aam
xor
jbe
xchg
orl
mov
xchg
popf
push
ljmp
pop
imul
mov
aas
inc
pop
push
inc
lods
dec
jo
aaa
adc
data16
sub
fs
lret
aad
and
cld
sub
test
outsb
or
cwtl
dec
xchg
jmp
pop
loopne
ret
or
es
mov
cld
pop
mov
lret
sahf
out
mov
xchg
sbb
ljmp
inc
push
addr16
jle
pop
mov
daa
inc
jo
imul
mov
lret
out
sub
xchg
lds
or
inc
push
jns
mov
adcl
lea
pop
pop
jbe
mov
out
push
bound
pop
js
and
sbb
addr16
xchg
xchg
xor
sti
pop
jb
xor
mov
push
mov
mov
ret
shr
cli
or
mov
jle
out
fiadds
dec
movsb
enter
dec
ret
mov
sub
popf
and
insb
das
and
push
and
mov
mov
outsb
clc
andb
cmp
and
fmul
cli
inc
cli
lret
lret
push
sub
push
das
xor
mov
leave
enter
fldenv
sub
in
mov
pop
lahf
data16
mov
pop
or
xchg
rclb
je
jmp
out
clc
rclb
fisubrs
mov
cs
cwtl
mov
iret
cvtpi2ps
sbb
mov
sbb
add
sti
pop
ja
scas
cwtl
fdivrl
fstps
push
mov
enter
es
shll
fwait
scas
filds
ss
xor
orl
xor
ja
movsb
jb
pop
insb
and
pop
push
std
dec
pop
popf
insl
add
fwait
aad
mov
cmp
xchg
cmc
ret
cmp
aam
lret
add
iret
ret
cmpsb
jl
add
loop
decb
lret
dec
aas
lea
aaa
sbb
adc
out
xor
inc
and
or
pop
sbb
jno
sub
xor
mov
mov
mov
xor
jmp
loope
in
in
sbb
push
aas
orb
inc
xchg
pop
shrb
inc
mov
push
mov
sbb
clc
or
aam
pop
loopne
ja
fwait
dec
stc
mov
mov
dec
in
in
int3
dec
or
jmp
lods
imul
outsb
sub
fstpl
fnstcw
add
jp
aaa
or
aad
add
outsl
fldenv
mov
addr16
dec
scas
pop
fdivl
inc
adc
lods
les
das
cmpsb
out
fsubrl
inc
movsl
iret
sub
int
sbb
movsl
sbb
aas
insl
nop
sbb
sahf
mov
sub
mov
fildl
xor
mov
mov
mov
mov
inc
xchg
xor
testl
sub
cmp
adc
lods
or
inc
stc
mov
clc
orl
mov
mov
sbb
nop
out
xor
lret
loope
repz
lahf
or
insl
outsl
and
inc
fcoml
fwait
mov
enter
clc
fwait
cwtl
and
or
imul
sbb
idivl
mov
cli
xchg
mov
lods
cmp
mov
jne
inc
sbb
pop
addb
ficompl
ds
imul
enter
adc
add
imul
mov
mov
aas
jbe
cwtl
adc
in
pop
adc
loope
sbb
push
cmp
fcmovnu
and
mov
xchg
push
push
lds
stc
sub
popa
xchg
out
cwtl
mov
pop
push
lods
ret
cltd
call
sbb
int
testb
andb
inc
lahf
mov
dec
outsl
pop
xchg
xlat
dec
xchg
add
lcall
mov
les
push
aam
out
in
push
jno
call
fiadds
jge
pop
sbb
jmp
mov
mov
in
xor
push
mov
add
rorb
in
das
push
pop
push
adc
push
push
push
mov
ds
iret
push
sahf
sarb
cmp
dec
fsub
fwait
mov
mov
xor
adc
int
sahf
mov
es
push
and
push
bound
das
cmp
js
data16
inc
mov
pop
psrad
hlt
jbe
push
xor
cmp
mov
add
mov
je
sahf
popa
rolb
mov
adc
sbb
push
mov
pop
lock
jno
pop
cmc
loopne
scas
je
jne
mov
xor
pop
cmp
add
push
adc
and
sub
mov
je
ret
jmp
mov
dec
lret
loopne
cwtl
das
inc
jo
mov
xchg
frstor
shl
cld
mov
jo
xor
repz
daa
insb
cmpb
and
push
pop
jmp
lock
xchg
insl
push
movsb
sub
jmp
pop
push
pop
cmpl
dec
mov
mov
pusha
cmp
mov
adc
cltd
cli
mov
adc
or
mull
dec
cmpsb
xchg
call
inc
sub
je
xor
mov
out
loope
ja
fsubrl
mov
out
inc
inc
jns
ret
iret
frstor
lcall
jns
push
fistpll
stc
mov
cmc
adc
ljmp
stos
addr16
mull
repz
aas
and
xchg
cmp
sub
pop
popf
cmp
sub
aad
mov
idivb
fsts
pop
xchg
cld
and
pusha
pop
push
push
cmpsb
lds
outsb
push
std
sbb
mov
mov
sbb
loope
push
dec
sbb
and
sub
jg
insb
dec
xlat
or
iret
jle
es
inc
loop
ja
ljmp
cmpl
lret
jae
outsb
add
gs
sbb
jp
cmp
jge
ss
sbb
jnp
ret
je
jmp
cmp
or
inc
sub
repnz
mov
pop
inc
arpl
ret
sub
pop
call
nop
xorl
sub
decl
cmpsb
es
lods
inc
jb
xchg
popf
mov
jnp
mov
imul
lods
sbb
xchg
pop
insb
mov
cmpsl
jmp
mov
shll
add
mov
fwait
jle
mov
sub
lea
int
lods
or
dec
mov
in
addr16
jle
std
cmc
xor
roll
ret
pop
int3
jp
adc
jno
testl
int
call
jmp
das
in
test
fdivs
aaa
cmp
pop
mov
mov
adc
nop
sub
jo
cwtl
inc
xchg
cmpsl
sarl
stc
cmp
cld
push
jbe
stos
arpl
cmp
mov
jg
push
test
stos
clc
rorb
inc
addr16
enter
fisubl
shlb
cmc
addb
cmp
imul
shlb
sub
in
pop
adc
ficoms
in
in
sub
dec
mov
sbb
ja
das
adc
shll
cmpsb
mov
js
mov
pextrw
inc
fidivrl
dec
xlat
loope
dec
mov
or
adcl
rcll
jnp
in
arpl
pop
pop
and
nop
pop
imul
bound
add
xor
js
sub
push
mov
push
je
sar
ficoml
bnd
outsl
out
scas
jbe
popf
mov
push
pop
jb
fiadds
repz
mov
jne
cwtl
insl
repz
in
into
or
out
xor
xor
xor
cld
test
adc
outsb
cwtl
inc
loope
dec
inc
jg
inc
jmp
mov
lds
repz
rolb
int3
and
cmp
lock
mov
xchg
mov
mov
push
pop
fwait
cmp
imull
je
push
sbbb
sti
cmp
shlb
ss
mov
mov
out
fwait
adc
xchg
xchg
xchg
jl
sti
jmp
xlat
mov
push
xor
adc
or
test
gs
xchg
jae
jne
or
movsb
fidivrl
push
fs
sub
lock
fidivrs
movsb
push
pop
rolb
lock
mov
push
add
out
mov
shlb
divb
xor
add
dec
insl
push
sahf
or
hlt
sti
lods
mov
into
mov
pop
sub
mov
fnsave
xlat
test
fstpl
mov
dec
mov
lret
lods
push
push
or
lahf
mov
sbb
insb
or
into
jb
aas
rolb
add
and
lcall
inc
jmp
bound
aad
and
in
pop
mov
pop
inc
mov
and
mov
pop
sbb
mov
or
call
sti
inc
in
cmp
sbb
jle
jnp
cmp
lds
hlt
test
lods
sbb
jge
sub
dec
sahf
adc
xor
push
lahf
or
xor
fstps
shlb
pop
cmp
fstpt
push
cmp
mov
add
int
mov
sbb
or
xchg
cmc
sub
lds
loope
cmp
std
cmp
add
add
mov
cmpsb
jle
fnop
aaa
mov
in
sbb
xor
movsb
bound
sbb
loop
bound
dec
inc
test
stos
xor
vmwrite
dec
jecxz
in
popa
mov
push
xchg
mov
jbe
inc
ret
fldt
or
xchg
or
sub
jle
pop
sub
inc
lea
out
shll
or
or
sub
mov
aad
stos
adc
adc
aas
mov
jmp
clc
dec
idivl
xor
or
in
mov
mov
xchg
shufps
xchg
stos
mov
sbb
push
mov
jne
aam
movsl
xchg
sub
out
dec
sbb
or
inc
into
fisttps
std
ljmp
cli
bnd
cmp
mov
adc
mov
xchg
lods
inc
jecxz
adc
xor
imul
inc
push
ja
fnstcw
push
shlw
pop
jp
cmp
movsl
stc
sbb
stc
add
std
scas
in
push
in
push
in
add
jne
in
or
js
in
es
xorb
fsubr
mov
ja
or
xchg
sbb
stc
jl
jnp
stos
dec
sbb
adc
and
add
aam
pop
rcrl
xor
test
inc
mov
movsb
adcb
pop
addl
jl
jecxz
add
mov
fcoms
movsb
loop
mov
jg
call
dec
cmp
insl
pop
rclb
jecxz
ret
lods
fimull
in
pop
cmp
jnp
lret
repnz
clc
shlb
push
in
leave
dec
xor
sub
pop
ss
adc
in
mov
pop
pop
or
add
pop
loope
jns
cmpsl
and
enter
adc
sbb
loop
call
fisubl
shr
pop
xor
aad
pusha
sub
out
enter
or
test
mov
mov
add
into
push
pop
add
push
xchg
sbb
push
jnp
jnp
push
lods
imul
int
xchg
mov
adc
call
xchg
cmp
inc
arpl
outsl
leave
pushf
idivb
xlat
out
jnp
pop
pop
and
les
or
pop
popa
lods
jl
das
mov
repnz
jg
lahf
push
adc
fimull
jle
jmp
shl
jns
inc
imul
push
xchg
leave
movsb
or
push
xlat
out
aas
stos
xor
pop
test
jmp
rclb
shrb
or
jo
ret
fdivs
std
std
and
mov
stc
inc
div
cmc
jbe
sub
push
scas
ret
into
shlb
jge
in
inc
test
push
inc
or
mov
das
or
sub
pop
sub
imulb
leave
sbb
xchg
and
fidivrl
rcll
dec
std
mov
jo
or
adc
dec
fbld
pop
mov
mov
inc
fsub
std
ja
mov
push
jns
ret
movb
hlt
dec
enter
sahf
push
dec
rcr
stos
sbb
mov
xor
aam
xchg
cmp
mov
xor
mov
mov
cld
push
sti
and
les
dec
in
xor
or
pop
test
cmp
fwait
cmc
jb
mov
add
mov
stc
mov
icebp
js
hlt
test
xlat
test
adc
inc
popf
xor
cwtl
xchg
mov
das
push
pusha
in
outsb
lcall
in
insl
outsb
rcrl
clc
cld
cmp
gs
xchg
ds
ja
sbb
xor
sbb
pop
pop
mov
sbb
jmp
jbe
push
and
mov
popf
mov
and
sub
fildll
js
ret
mov
xchg
pop
xchg
icebp
daa
mov
lcall
sbb
lret
dec
push
push
cmpsl
roll
out
leave
mov
push
in
mov
loop
inc
push
out
fcomps
mov
xor
roll
rorb
scas
mov
sti
jp
xchg
out
icebp
xchg
data16
aam
push
mov
ficoml
push
mov
pop
repnz
repz
ds
sbb
ds
xchg
mov
aaa
mov
pop
in
sbb
jno
popa
and
or
pushf
data16
cld
sbb
stos
aaa
imul
xchg
push
fadds
jecxz
call
sub
or
icebp
push
rorl
popl
cmpsb
jle
aas
mov
fildl
add
pop
cmp
stos
add
popa
orb
lahf
push
sub
xor
aaa
inc
cld
test
jle
fs
mov
push
xchg
es
xchg
or
add
pop
mov
lar
and
pushl
outsl
lahf
mov
leave
mov
dec
sbbb
out
sub
iret
and
stos
add
adc
sub
pop
out
add
div
add
scas
lock
push
pop
push
jle
fwait
dec
ss
push
cmp
sahf
test
ret
insb
jb
cmp
cmc
movsl
clc
inc
push
push
enter
nop
mov
push
lret
mov
outsb
sub
cli
bound
testb
push
mov
jg
test
fwait
xchg
push
mov
fdiv
mov
xorb
lret
pop
sahf
xchg
outsb
imul
jb
daa
mov
cs
jo
and
xchg
imul
mov
ljmp
jecxz
enter
push
leave
je
bound
enter
pop
sub
inc
push
push
jge
cmp
in
rorb
xchg
mov
xor
push
loope
or
or
incb
lds
repz
lock
dec
outsl
lds
lahf
ljmp
pushf
popl
or
nop
pop
inc
int3
jne
ret
ja
pushf
and
mov
test
dec
lret
inc
out
pop
mov
fmul
fsubl
loope
adc
test
xlat
incb
cmp
sbb
push
adc
je
fldcw
mov
sbb
lds
jge
jo
sbb
jp
sbb
xor
add
inc
or
or
cmp
sub
xor
jnp
dec
mov
mov
adc
and
cmp
out
les
cmp
dec
pop
adc
pop
inc
in
mov
lea
xchg
andl
cld
push
cmp
addr16
fimull
sub
or
aad
xorl
mov
in
fstps
xchg
stos
xchg
stos
xchg
mov
sub
sbb
movsb
xor
shr
addl
add
cmp
cmp
jl
inc
sbb
jg
out
addb
fdivrs
inc
jo
cli
in
shl
mov
sbb
push
repnz
xchg
jbe
cmpsl
imul
inc
xchg
scas
cltd
or
pushf
push
mov
popf
lock
lea
loopne
and
mov
lret
mov
push
ficompl
xchg
daa
adc
cli
jno
dec
inc
lds
push
adc
cmp
negb
arpl
out
xor
ss
aas
xlat
in
mov
es
jbe
out
cmpsl
lret
in
sbb
rolb
mov
mov
add
adc
adc
sti
inc
aad
fidivl
mov
adc
adc
lods
pop
movsl
add
inc
mov
nopl
xchg
stos
sbb
or
dec
mov
fwait
push
pop
loopne
test
mov
loope
pushl
add
jg
ljmp
jge
jnp
push
iret
adc
dec
xchg
and
rclb
dec
inc
fdivrl
ret
mov
pop
jle
mov
dec
jecxz
test
lds
ljmp
pop
cmc
xchg
adc
insl
es
sbb
lea
cmp
mov
ret
mov
xchg
outsl
sbb
dec
jae
fcoms
xchg
loop
mov
push
in
mov
movsb
mov
ja
cmp
jl
js
outsl
imul
mov
ljmp
sub
and
mov
jecxz
pop
xchg
or
ds
cltd
sarl
repz
pop
jae
add
xchg
pop
aaa
repnz
jmp
pop
or
pop
clc
cmp
inc
je
mov
fnsetpm(287
or
psubd
hlt
incl
cld
xor
jae
xchg
inc
add
int
data16
mov
scas
aad
gs
inc
adc
test
clc
jb
stos
fisubl
ret
xor
cmc
mov
mov
mov
push
movsl
fmul
in
xor
jns
lahf
out
out
in
xchg
cs
fadd
mov
sub
mov
lea
fcomp
or
xor
jno
sti
adc
jns
inc
mov
hlt
inc
das
sti
or
nop
mov
sub
push
or
shlb
aam
into
stc
mulb
inc
jae
jne
pop
rcrl
dec
data16
adc
mov
push
mov
enter
jns
sbb
in
mov
pop
lret
std
hlt
push
into
int
movsl
outsl
push
xlat
lds
addr16
add
ds
add
xchg
push
push
add
inc
and
mov
mov
cltd
inc
les
add
mov
shlb
cmp
push
pop
dec
repz
sbb
in
icebp
push
aas
mov
push
jmp
push
xorl
shlb
stc
mov
lods
adc
pop
dec
not
mov
das
pop
shr
cwtl
movsb
jl
pop
fidivrs
xchg
int
lock
pop
bound
icebp
cld
outsl
jb
adc
lea
sub
pop
outsb
out
lock
jns
pop
inc
enter
inc
popa
nop
push
lock
sub
push
mov
or
xor
fwait
push
sub
pusha
jb
mov
dec
pop
fnstsw
inc
mov
outsl
ss
aam
dec
rcr
out
and
popa
mov
inc
dec
mov
ret
popf
les
or
mov
xchg
into
and
adc
xchg
xchg
arpl
and
hlt
arpl
fwait
in
pop
leave
and
and
mov
and
dec
push
fidivs
pusha
ljmp
xchg
aaa
dec
inc
cmp
popf
sbb
and
pop
aaa
adc
arpl
ljmp
sbb
add
cwtl
ds
mov
xchg
lea
inc
pushf
mov
or
xchg
movsl
cmpsl
jno
xor
fiaddl
pop
push
inc
adc
jecxz
jecxz
cmpsb
add
aas
mov
loop
lods
sub
je
jmp
icebp
xchg
fdivr
ja
jb
push
out
mov
shl
repz
sub
popf
rolb
je
pop
inc
das
std
mov
inc
inc
adc
push
push
jmp
fsubs
or
pop
sub
mov
jmp
inc
test
out
push
test
xchg
out
test
divl
inc
mov
adc
and
das
pop
test
pop
data16
adc
sub
mov
cli
rcrl
and
jne
std
hlt
insb
jl
jne
call
pop
int3
sbb
cs
je
or
sub
sub
jnp
push
loopne
outsl
imul
adc
xchg
jge
inc
sub
leave
es
dec
push
xchg
cmc
mov
pop
inc
sti
adcl
andl
dec
inc
pop
dec
mov
movsb
mov
mov
rclb
xchg
xchg
gs
int3
js
sub
or
in
sarl
push
add
mov
xchg
xchg
jle
push
js
stc
and
clc
mov
sub
and
xlat
inc
push
pop
pop
loop
sbb
mov
pop
mov
pushf
and
xchg
stc
sub
mov
mov
ret
add
dec
aaa
ror
movsb
in
scas
insb
jle
jb
mov
push
or
xor
push
mov
out
or
xor
movsl
inc
add
lock
xchg
shr
aad
xchg
fldcw
xor
out
insl
std
inc
xor
std
push
hlt
ret
adc
es
push
mov
mov
xchg
shlb
xor
sub
xor
push
lods
ss
cmp
xchg
pop
or
scas
xor
test
scas
sub
jle
test
ljmp
pop
inc
fisubrs
jo
xorb
in
ror
xchg
inc
inc
mov
and
mov
jmp
int3
loope
pop
pop
iret
jnp
and
sbb
mov
sbb
out
cli
and
add
addr16
lret
sub
add
shll
xchg
push
test
cli
test
in
out
cld
jns
ret
in
xor
push
jl
mov
adc
lcall
outsb
jmp
xchg
mov
mov
arpl
jg
jns
pop
push
cli
xor
push
dec
fwait
xchg
add
sub
mov
faddp
ficoml
test
push
testb
repnz
or
or
jb
addr16
xchg
imul
ret
xor
scas
out
pop
inc
movsl
mov
aam
repnz
pop
lret
mov
jbe
mov
sub
cmpsb
fs
movzwl
inc
insb
stos
xchg
or
stos
cld
adc
xchg
sarb
int3
dec
xchg
jbe,pn
xor
push
out
and
loop
jbe
mov
cmp
fwait
int
pop
into
sbb
fucomip
and
sub
mov
xchg
out
data16
dec
mov
push
xor
rcll
jnp
or
ds
jmp
sub
xlat
xor
lods
rcll
push
movsl
cmp
cmp
mov
aaa
bound
mov
adc
mov
loope
rcl
mov
ljmp
xchg
out
jl
jno
ror
mov
jmp
jmp
xor
sub
rorb
add
out
cs
add
not
aas
dec
sti
push
or
push
pxor
loope
or
inc
sub
leave
sbb
int
popf
aad
ret
roll
cld
or
fcomp
cwtl
daa
leave
cs
loopne
out
aaa
dec
test
roll
xlat
jecxz
pop
adc
jp
cmp
aas
adc
xor
xchg
or
movsb
sbb
inc
pop
je
mulb
cmp
fxch
mov
dec
hlt
pop
pop
outsl
inc
and
push
ret
sarb
xor
push
lret
xlat
push
bound
into
imul
jne
add
aaa
sbb
daa
jnp
cmp
popa
pop
cmp
test
shr
mov
or
jns
xor
loopne
dec
inc
sbb
jle
out
mov
add
add
lds
fistpll
sub
or
std
out
dec
jnp
popa
sbb
pop
jno
push
dec
repnz
xor
ret
inc
sahf
fwait
push
lcall
xor
add
cli
xor
loopne
jo
xchg
ja
mov
nop
loop
daa
push
sbb
repnz
mov
cmp
test
mov
cmp
xlat
fucom
mov
add
outsl
push
loopne
xchg
xchg
js
push
into
cmp
cs
dec
or
xor
cmp
push
sbb
jg
adc
data16
xchg
jo
sub
push
icebp
cmp
xor
pusha
sub
pop
mov
sbb
ja
xor
stc
sti
cltd
clc
insb
outsl
dec
mov
aas
test
push
mov
roll
or
adc
push
sti
out
inc
xchg
adc
popf
out
mov
sar
inc
in
outsl
gs
repz
into
sbb
ja
sub
ret
ret
sub
lock
sub
sub
or
inc
xchg
add
scas
imul
std
sbb
xchg
test
iret
ret
mov
mov
aam
adc
sbb
scas
add
xchg
mov
push
cmpsl
xchg
push
outsl
popa
inc
dec
and
mov
cmp
js
sbb
enter
cltd
jne
push
insl
mov
dec
cmp
mov
stos
xor
stc
ret
les
inc
or
loope
sahf
pop
out
call
push
push
lret
je
loopne
int3
adc
mov
outsb
popf
iret
pop
lea
and
mov
jo
inc
mov
xor
scas
int
pop
sbb
cli
mov
xor
dec
negl
sub
bound
adc
mov
xor
orb
and
jno
aas
mov
mov
xor
testb
test
xchg
add
dec
cs
stc
call
cmc
xchg
insl
loopne
cli
aad
mov
push
pop
jge
adc
add
mov
dec
mov
mov
and
lcall
pop
out
mov
adc
inc
sub
dec
mov
xchg
xor
jns
mov
dec
or
ja
mov
arpl
scas
aad
sbb
ret
ja
xchg
push
pushl
jns
cmp
clc
inc
xchg
sbb
or
add
in
push
jae
lods
imul
iret
cwtl
insl
jg
push
jae
movq
lahf
incb
int
pop
fwait
aaa
mov
add
sbb
movsb
and
sub
xor
sub
mov
sbb
dec
pop
sub
push
xlat
push
cmp
loopne
pusha
aam
mov
sub
xor
movsb
fistl
ret
pop
cmpsb
insb
pop
cmp
jae
add
or
loope
rcr
xchg
int
cmp
jg
popa
sub
pop
mov
dec
aas
add
push
sub
push
xor
aas
out
add
adc
jle
cmc
imul
pop
inc
rcrb
ret
inc
sub
adc
hlt
xor
inc
pop
stc
dec
dec
pop
stos
test
push
push
je
fiadds
lds
push
inc
popf
shll
std
inc
dec
lods
repnz
lcall
lock
rcl
enter
sbb
mov
xchg
cmp
aaa
lret
push
movups
test
nop
clc
fmul
sub
into
movsb
pmuludq
pop
pop
iret
inc
jmp
xchg
dec
dec
clc
fdivs
xchg
mov
add
cli
enter
out
stc
push
push
scas
fistpll
sub
sub
loope
shlb
negb
cmp
lods
int3
jge
out
dec
test
cmovns
rcrl
outsb
mov
lods
std
js
bound
fstps
pop
pop
lcall
xor
cmp
ja
push
iret
gs
mov
jns
dec
dec
sub
mov
add
std
jno
add
and
or
cmp
into
mov
adc
lret
sub
iret
fwait
sarb
lcall
add
loop
push
inc
mov
out
inc
sarb
xchg
fdivl
and
xchg
bnd
push
mov
xor
call
jle
jno
negl
into
cmp
sub
daa
cmp
pop
fwait
scas
mov
push
push
sub
mov
clc
dec
cmp
mov
and
push
in
lds
cld
sahf
adc
mov
push
cmpsb
fsub
xor
rol
ret
inc
xchg
sbb
int3
dec
ret
cmpxchg
adc
in
sbb
push
mov
mov
add
push
dec
xchg
push
mov
enter
adc
fnstenv
stos
in
or
jecxz
loop
add
xchg
xor
xchg
dec
jp
jae
mov
fdivrl
lahf
xorl
xor
into
and
loop
xchg
mov
dec
sub
cmp
sub
xchg
jle
sbb
sbb
push
out
popa
cmp
call
mov
pop
cmc
or
dec
cld
insl
mov
movsl
mov
lods
push
cmovae
outsb
xorl
fwait
cmp
dec
mov
push
int3
cmp
pop
scas
add
mov
jae
sbb
xor
mov
les
js
mov
lods
cmp
add
xor
into
repnz
in
xchg
lea
inc
inc
flds
ja
aam
cmp
sbb
and
pop
xor
sarl
mov
insb
mov
lret
sbb
orl
icebp
cmp
les
xchg
ja
or
cmc
pop
inc
outsl
sbb
inc
sub
add
clc
jno
repz
xchg
arpl
mov
add
mov
cmp
mov
adc
int3
jecxz
mov
and
and
loopne
iret
and
aas
dec
sub
movsl
pop
aad
int3
and
adc
add
sbb
dec
mov
movsb
jl
or
cli
dec
arpl
popf
int3
nop
and
mov
pop
fsubs
cli
adc
xchg
sti
sub
push
mov
sbb
push
incl
jmp
pop
arpl
shll
xor
fwait
iret
insb
sbb
sub
sub
insl
jmp
pop
cmp
popf
push
orb
or
rcrb
call
imul
xchg
add
xor
cmp
push
mov
jbe
push
filds
lods
clc
add
in
lcall
ret
mov
std
add
pusha
xor
fldenv
movsb
cld
jns
pop
sub
leave
out
scas
mov
jo
mov
mov
inc
cmp
das
mov
out
adc
adc
lcall
pop
sarl
fsub
pop
out
mov
dec
dec
mov
hlt
aam
hlt
mov
jge
test
cwtl
and
mov
aam
outsb
icebp
xlat
stos
hlt
mov
adcl
lcall
leave
xchg
xor
push
xchg
mov
das
cmc
clc
ja
xlat
jno
jae
or
mov
mov
push
dec
and
push
xchg
push
push
or
mov
aam
mov
xchg
and
and
roll
dec
xor
out
int3
cmpsb
jecxz
xchg
imul
nop
call
rolb
push
mov
xlat
addr16
mov
sbb
out
xchg
adcl
cmp
and
dec
in
cmp
stos
loopne
es
cmp
dec
xchg
or
xchg
sbb
push
jle
mov
movsb
int3
out
movswl
add
aad
fistps
push
orb
fcoml
in
pop
mov
jmp
add
cmp
push
cmp
push
sbb
push
pop
inc
jp
imulb
jb
inc
inc
mov
orl
incb
jb
in
mov
cltd
scas
outsl
mov
sbb
inc
test
movb
addr16
iret
jl
sbb
mov
cmc
ret
ror
mov
xor
add
push
and
or
dec
inc
add
sti
jecxz
xchg
inc
test
cwtl
scas
pop
pop
dec
or
cwtl
test
lds
jo
test
sub
out
imul
xchg
sti
stos
push
es
sbb
xor
mov
or
sub
pop
adc
scas
pop
push
ja
jne
je
cli
push
mov
mov
call
xchg
cmp
gs
xlat
mov
push
icebp
mov
push
adc
ja
je
xor
inc
mov
jp
mov
jp
mov
cmpsb
enter
xchg
cmc
std
pushf
jb
out
loope
iret
pop
fs
aad
lds
mov
adc
sub
stos
js
sarl
inc
mov
inc
pop
ret
icebp
mov
adc
in
and
lods
mov
inc
imul
dec
push
es
sub
inc
cmpsl
dec
mov
mov
mov
xchg
lods
dec
xor
sbb
xchg
dec
cwtl
les
push
fcmovnu
cmp
xor
pop
stos
add
lcall
inc
jo
daa
pop
mov
add
imul
push
cmp
daa
jp
push
lret
jb
rolb
push
inc
lods
add
mov
ljmp
shll
cmp
pop
add
rorb
inc
mov
addr16
test
dec
cmp
push
jo
testb
xchg
push
cmp
mov
iret
dec
sbb
cwtl
jmp
xor
arpl
push
pop
mov
and
xor
test
and
ret
jmp
insb
lds
and
repnz
in
mov
sub
mov
subl
pop
mov
loope
mov
popf
jne
les
xchg
leave
nop
inc
imul
gs
and
inc
fiadds
and
ret
jbe
jp
adc
cmpsb
aam
xchg
mov
addl
push
dec
mov
pop
fstpt
bound
data16
movsl
pop
insl
pop
push
enter
inc
inc
cmpsl
fwait
jne
out
subl
ss
insl
jo
or
leave
push
mov
mov
jge
lret
sbb
mov
push
lds
jns
fsin
insb
das
scas
pop
push
stc
xchg
mov
out
jbe
fcmovb
jge
aaa
jmp
mov
fisubrs
cmp
jecxz
les
js
aam
andb
sub
inc
sbb
es
dec
fnsave
xor
cmp
scas
imul
pop
shrb
ret
jnp
imul
shlb
scas
mov
cwtl
jbe
inc
scas
pop
lods
or
outsl
mov
lahf
push
out
adcl
or
cmp
outsl
arpl
xor
push
or
lods
lock
dec
push
fcompl
or
arpl
dec
xchg
xor
dec
pop
adc
pop
xor
ss
aad
cmc
pop
xchg
jl
dec
jmp
xchg
and
inc
mov
push
mov
popf
xlat
in
push
cmp
mov
movsb
xor
insl
aaa
mov
adc
cli
daa
dec
es
fadd
cs
xor
or
add
rcrl
mov
in
pop
adc
xchg
cmpsb
ds
cmp
pop
ja
sub
fdivs
test
movsb
cmp
xchg
or
xor
dec
fisubl
add
jnp
jnp
inc
scas
pop
ja
pop
int
pop
ljmp
adc
orb
aaa
in
subb
lock
ljmp
jno
dec
mov
or
je
sarl
jecxz
adc
mov
mov
popa
add
mov
lock
push
fmuls
je
faddl
rorl
and
fimull
lahf
adc
inc
mov
mov
mov
pop
gs
sub
mov
mov
adc
filds
lds
pop
sub
add
cmp
xchg
decl
aas
push
out
mov
dec
mov
cwtl
stc
cwtl
add
fs
test
sti
popf
pop
cmp
daa
mov
mov
jg
cli
push
inc
push
add
mov
cmpsl
popf
dec
das
loopne
dec
rolb
jge
mov
icebp
mov
outsl
int3
dec
dec
sbb
insb
iret
xor
push
imul
xor
lock
and
outsb
out
pop
cmp
rcrl
aad
out
mov
fdivp
cwtl
dec
das
das
mov
adc
insw
jmp
and
push
mov
inc
add
push
mov
pop
cwtl
test
push
arpl
mov
or
xchg
adc
sbbl
stc
fs
into
inc
loope
mov
clc
jge
fisttpl
mov
mov
call
mov
pop
xor
xchg
mov
sub
movsb
repz
insl
mov
or
xchg
and
sub
adc
test
mov
in
ljmp
xor
sbb
jnp
js
std
sbb
xor
das
inc
add
mov
sbb
repz
jmp
fdivr
mov
xchg
jne
mov
mov
orl
adc
ret
add
sub
loope
push
pop
xchg
jge
fsts
popf
movsl
cmp
cmpsl
and
in
idivl
cwtl
cmp
pop
jecxz
inc
nop
lods
pop
ds
es
je
ljmp
xor
ljmp
sub
lea
jl
jmp
and
movsl
sbb
insb
ss
repz
lret
sbb
testb
es
pop
sub
cltd
pop
in
jno
xorb
nop
xchg
jle
mov
les
mov
pop
fwait
pop
ss
imul
outsl
hlt
daa
sub
sbb
ret
lret
jmp
mov
pushf
fimull
in
and
dec
jbe
ss
cmp
sub
pop
stos
mov
fadds
js
xchg
sbb
negl
push
stc
mov
cmp
xlat
jne
cmp
push
pop
cmovbe
popa
add
ret
cld
lret
mov
xchg
call
mov
popa
inc
dec
dec
sub
jmp
movb
ss
pusha
lahf
add
xchg
adc
xlat
cwtl
out
cmc
push
mov
inc
or
jmp
pop
ret
dec
pop
cmp
cltd
pop
pop
xchg
xchg
out
and
dec
pop
es
aaa
xor
sub
call
mov
hlt
lock
out
or
fdivrl
push
sti
std
call
aad
adc
cmpsb
pop
jmp
fistps
insb
push
lods
stc
mov
fidivrl
cmovb
lods
push
jns
cmp
scas
into
add
decl
frstor
ds
pop
nop
mov
sub
or
decb
mov
cld
push
or
shl
mov
xchg
jp
jno
rclb
mov
popa
outsb
jne
test
das
loopne
mov
inc
lock
or
ss
cmpsl
or
xor
and
scas
loop
pop
xor
fwait
shrl
adc
jns
sbb
cmc
jge
insl
sub
aas
pop
add
jmp
inc
sub
imul
xchg
pop
pusha
push
xchg
out
lahf
insb
imul
dec
cwtl
xchg
enter
sahf
ljmp
negb
mov
sub
fmuls
outsb
cmpsb
sbb
fldenv
or
jp
xchg
lods
mov
sbb
and
sahf
xor
mov
mov
xchg
push
xor
xchg
subl
mov
sqrtps
xchg
ja
xor
or
lods
and
test
inc
inc
into
push
pop
dec
in
mov
jne
les
xchg
int3
movl
sarl
scas
mov
dec
gs
xor
xor
xor
cli
or
xchg
ret
jmp
shll
into
enter
dec
push
inc
inc
add
xchg
xchg
push
inc
push
fistps
mov
adc
dec
mov
repz
fnstsw
fcoms
ja
shlb
repnz
enter
mov
xlat
add
pop
dec
popa
scas
jb
enter
sub
ljmp
cmp
or
xor
rcrb
lret
sarl
mov
call
mov
test
daa
adc
stc
and
dec
fucomp
jecxz
cmp
jb
and
and
mov
test
jo
fimull
popa
xchg
xchg
and
sbb
sbb
push
int3
mov
ljmp
cmp
lods
dec
pminub
and
test
xlat
cmp
jae
aaa
lds
pushf
insb
jbe
adc
lcall
fldt
shrl
sbb
mov
das
addb
cmpsl
int
lods
cmp
pop
ljmp
jmp
jb
mov
cmp
and
xor
mov
xor
pop
js
dec
test
jne
mov
std
xor
xor
dec
adc
push
into
sahf
pop
pop
rolb
por
outsb
add
lods
push
adc
dec
sahf
cmp
les
pop
in
jecxz
shr
sbb
lea
dec
jmp
rol
movsb
cmp
jo
loope
sbb
popa
add
or
mov
mov
mov
xchg
loopne
paddq
in
adc
inc
jmp
cli
arpl
repz
cmc
lret
mov
popl
jg
cmp
jmp
push
sahf
ja
mov
in
pusha
or
call
cmp
negl
push
sbb
push
outsl
xchg
mov
add
jb
push
sub
gs
sbb
addr16
cwtl
ficomps
xor
div
gs
mov
mov
and
and
je
sub
test
dec
sbb
jmp
jae
pop
inc
iret
or
insl
hlt
nop
xor
mov
adc
xchg
cld
push
xlat
jns
xor
adc
xor
adc
lcall
sti
add
es
rclb
xor
lods
xchg
nop
jne
movsb
add
data16
push
adc
adc
xchg
xor
sbb
mov
frstor
mov
in
outsb
cmp
xchg
cmpsb
test
movsb
nop
aaa
sbbl
push
xchg
lock
ss
dec
or
pop
dec
jnp
addr16
dec
mov
shll
pop
mov
daa
push
and
lea
lods
leave
mov
mov
lods
and
push
subb
jne
xlat
ja
adc
shll
push
sbb
cltd
pop
movsl
dec
xor
rorb
mov
push
out
popa
je
cli
mov
int
xor
fstpl
ljmp
fidivs
pop
pop
out
incl
mov
popf
sub
push
in
sbb
aaa
cmpsb
push
rorl
sub
out
mov
xchg
sbb
test
cmp
push
adc
in
and
jbe
mov
insb
mov
sbb
lds
sbb
jle
inc
into
jmp
cmp
mov
jno
leave
inc
and
subb
and
fdivs
pop
shlb
enter
dec
js
push
mov
loop
mov
mov
scas
pop
inc
jp
ss
xchg
xchg
sub
iret
add
adc
sti
lret
sbb
out
fwait
dec
mov
loope
dec
or
aad
jmp
and
adc
jns
cmc
xor
jg
fdivl
imul
sub
xlat
ss
jae
cmp
gs
cmp
jg
or
jmp
adc
xchg
test
xchg
orb
test
rcrl
sbb
ret
jmp
dec
inc
jne
insb
sub
out
mov
adc
stc
sub
xlat
mov
jb
cmp
out
lea
sbb
adc
push
dec
jmp
jge
outsb
daa
out
cmp
pop
imul
jb
or
div
fwait
xchg
add
adc
xor
jns
sbb
mov
out
push
xor
jno
xor
fnsave
pop
icebp
dec
inc
std
jae,pt
dec
xor
jo
cmpsl
jns
sbb
testl
dec
dec
fsubrs
jns
shlb
lcall
push
inc
fidivs
adc
lret
out
out
and
cmp
inc
sar
pop
outsl
repz
jl
sahf
sub
insb
dec
mov
mov
mov
jmp
cmp
mov
loopne
dec
mov
sub
insb
push
adc
sbb
int
jp
xchg
movsl
stos
pop
pop
lds
push
mov
pop
out
mov
sahf
ret
sub
loopne
ror
out
gs
mov
sbb
pop
sub
or
or
enter
add
dec
dec
scas
sub
call
push
je
stos
mov
repz
sbb
push
mov
xor
mov
pop
hlt
mov
daa
mov
fsubr
and
sub
push
jg
dec
loopne
in
test
jbe
leave
dec
cli
mov
push
xor
or
or
int3
add
xchg
push
cmpsl
jle
push
xchg
push
xlat
jecxz
ret
repz
jne
push
sub
mov
aas
pushf
mov
pop
push
dec
stos
push
sub
hlt
loop
sbb
jae
ss
push
and
sub
loopne
sbb
loopne
xchg
inc
jno
sbb
add
std
sub
aas
xor
scas
cli
addr16
lock
cmc
data16
xchg
xchg
out
or
jns
lods
adc
cmp
incl
adc
adc
mov
hlt
or
jmp
jecxz
cmp
cwtl
test
push
mov
push
testb
jp
out
ret
inc
adcl
push
cld
movsl
xor
fsubl
insl
movsb
dec
mov
mov
movsb
and
add
arpl
icebp
hlt
pop
loop
or
ret
or
sub
pop
sub
out
test
rolb
add
and
xchg
add
jae
hlt
pop
and
sti
push
out
in
data16
add
in
jbe
repnz
jno
inc
repz
pusha
aad
push
mov
jge
lods
ffree
mov
push
pop
lods
and
inc
cli
cmc
sbb
jl
hlt
mov
outsl
mov
inc
cmp
mov
aad
rorl
add
xor
cmpl
add
nop
movsb
ljmp
cmp
sub
or
fldt
sbb
insl
shlb
dec
inc
imul
lds
push
mov
jp
test
mov
xlat
outsb
popf
movsb
mov
or
jle
add
mov
shrl
aas
lock
sti
dec
loop
or
enter
mov
pop
push
push
xor
jecxz
pusha
mov
popa
rcll
sarb
cwtl
xor
jae
fcomps
mov
jns
jp
jg
xchg
outsl
and
cmpsb
pop
sbb
pop
daa
cmp
test
es
sti
inc
inc
push
mov
imull
sub
push
mov
pusha
cli
xchg
jns
and
test
sub
cwtl
mov
sub
rep
inc
dec
xorl
cltd
and
cltd
adc
aas
pop
in
adc
or
pusha
or
or
aad
daa
aaa
in
sbb
dec
push
mov
cmp
ljmp
test
sub
popa
loope
and
inc
dec
sahf
cmp
cld
lret
mov
jae
lahf
leave
mov
ret
sub
mov
or
mul
fcomip
pop
imul
and
cmpsl
dec
rcrl
lret
add
mov
sarb
test
inc
jmp
aas
out
or
xorl
pop
xor
push
das
aaa
or
cmp
or
subl
sbb
push
xchg
or
push
mov
cmp
mov
test
shr
aad
mov
xchg
addb
icebp
mov
cltd
mov
in
inc
inc
pop
enter
lock
adc
mov
sbb
mov
into
bound
jb
push
test
mov
aad
jle
lds
sbb
cltd
fwait
ret
push
sbb
mov
icebp
ret
aas
mov
pop
and
mov
cmpsb
and
fs
adc
add
test
cmpsl
dec
stc
enter
or
mov
stos
and
or
cmp
add
cltd
int3
push
popf
and
dec
jge
jp
sub
call
cmp
or
jnp
in
push
jbe
loop
sub
inc
push
std
mov
dec
dec
jae
pop
fidivl
pop
mov
mov
cli
pop
pop
add
pop
stc
std
dec
popa
hlt
nop
lock
test
dec
xchg
mov
in
fxch
adc
ret
and
stos
mov
pusha
mov
movl
jbe
jmp
out
sub
dec
jge
mov
js
adc
add
popf
scas
inc
cmp
out
push
xchg
xchg
mov
pushl
dec
jmp
sti
shlb
sarl
test
lea
mov
add
add
into
or
fs
dec
pop
xchg
pop
pop
mov
xchg
mov
aam
faddl
aam
mov
lods
cmp
sub
xchg
mov
push
addl
lods
xor
stos
sbb
cmp
sahf
sbb
ss
pop
xor
mov
xor
std
ret
jecxz
push
cmp
mov
mov
xor
add
ret
fldt
adc
scas
andb
push
sbb
pop
jecxz
cmpsb
popa
push
push
sub
insb
les
int
xchg
mov
sbb
movsb
xchg
pop
mov
push
out
pop
das
mov
add
jl
cmpsl
out
push
or
jl
cmpsl
push
ret
mov
and
xchg
dec
adc
dec
out
or
adc
xchg
sbb
aam
cmpsb
sti
notl
dec
cmpsb
jae
mov
mov
sub
mov
push
xchg
pop
jae
lods
js
cmp
mov
in
mov
mov
xchg
pusha
jns
cmp
mov
scas
dec
mov
sub
xor
mov
xchg
pop
pop
into
xorb
jge
jge
jg
in
in
pop
int
ret
or
xchg
sbb
mov
ss
fisttpl
movsl
movsl
insb
es
ss
xchg
into
js
fsubr
xor
movsb
clc
adc
imul
xor
mov
push
test
mov
or
lahf
jnp
mov
int
movsb
mov
mov
sub
cmp
mov
inc
out
push
add
out
and
xlat
lret
arpl
push
sahf
mov
pushf
pop
adc
inc
push
mov
mov
xchg
roll
xor
jge
gs
sbb
sub
dec
fdivrl
jbe
mov
adc
xlat
mov
sub
stos
sti
sub
cmpsl
pop
add
or
pop
movb
xor
inc
ja
dec
aas
imul
jb
inc
add
dec
push
in
jns
mov
cmpsl
sbb
inc
lret
fidivrs
out
fiaddl
mov
pop
in
add
pushf
sbb
xor
cmp
mov
xchg
mov
imul
cmp
aam
xchg
pop
add
pop
cmp
pop
sbb
in
fdiv
and
jbe
cli
xchg
fstl
mov
push
jae
pushf
xchg
mov
jno
jne
sub
test
or
xlat
aam
push
movsb
dec
shrb
xor
push
push
stos
std
pop
mov
lahf
xor
lea
xchg
fisubl
int
jecxz
lods
jnp
cmpsl
xchg
stc
cmp
fwait
insb
xchg
sbb
jno
mov
mov
clc
sub
aaa
mov
dec
sub
cltd
add
inc
jle
push
sub
push
cmpb
cmp
lods
scas
ds
maskmovq
imull
gs
pop
rclb
pusha
ror
leave
imul
sbb
shll
xor
aam
pushf
jmp
or
insb
inc
aaa
pop
mov
add
jmp
jmp
movsl
cmpsb
std
loopne
pop
fnstcw
sub
sbb
stos
movsl
jl
test
test
fldl2e
pop
faddl
add
adc
das
div
shll
fld
lock
xor
loop
and
push
push
rorb
mov
sbb
les
test
inc
push
nop
jmp
test
jge
dec
gs
xchg
xor
das
popa
xchg
js
dec
addl
ret
stc
push
pusha
repnz
sub
mov
pop
scas
movsl
test
addr16
sbb
sbb
mov
test
xor
test
call
lds
push
push
mov
out
sbb
mov
cmp
mov
cs
push
pop
inc
cwtl
movsb
mov
mov
mov
adc
sbb
call
push
jl
xchg
push
imul
push
repz
sub
fwait
sahf
je
adc
cwtl
nop
nop
mov
adc
lds
mov
insl
scas
stc
in
mov
stc
push
mov
dec
in
and
insl
dec
mov
jnp
xor
pop
mov
sbb
js
mov
or
cmpsl
push
or
push
pop
negb
push
lods
jle
dec
or
ficomps
daa
xchg
enter
ljmp
pop
stos
movsb
cmpb
lods
adc
jne
push
mov
test
sbb
fsts
mov
jne
pop
sbbl
loop
add
shll
rorb
mov
push
leave
inc
push
ret
jmp
scas
or
mov
addr16
sti
sub
movsl
decl
inc
and
push
cli
xor
sub
cmpl
mov
xchg
gs
insl
mov
jecxz
shll
inc
lds
fnstsw
sub
lcall
scas
loope
icebp
roll
and
pop
or
cmc
in
pushf
push
mov
cmpsb
xchg
add
popf
test
mov
bound
mov
cmp
inc
jns
dec
xchg
cmp
lock
les
repz
lahf
cmpsl
mov
hlt
mov
xlat
jns
mov
loop
stos
jbe
adc
fsub
inc
xchg
mov
lret
inc
call
pop
outsb
fnstcw
xor
push
add
stc
lea
adc
clc
xchg
inc
shlb
rcr
or
outsl
pop
pushf
push
ja
adc
xchg
stos
add
in
test
jb
ret
arpl
leave
push
inc
add
in
aad
jb
roll
fstl
or
add
scas
xchg
out
leave
mov
dec
sbb
pop
or
lock
cmp
stos
jp
adc
or
add
mov
ret
aad
pushf
outsl
xlat
enter
mov
lea
add
arpl
das
mov
and
inc
jae
stos
popf
fmuls
adc
add
and
push
add
or
bound
mov
sub
mov
out
call
xchg
mov
push
sbb
insl
arpl
or
jecxz
mov
pop
lods
ja
adc
or
shll
jmp
cs
cmp
jecxz
mov
inc
mov
ds
lahf
in
adc
cmp
lods
notb
test
in
pop
fdivl
out
je
int3
mov
jecxz
jmp
in
out
add
xor
jmp
add
mov
stc
inc
adc
mov
sbb
mov
sbb
out
popf
out
jae
mulb
das
popf
aam
adc
xchg
iret
lcall
gs
loope
cmp
or
cmc
jae
iret
xchg
jle
cmp
arpl
cmp
xor
stos
inc
dec
stos
stos
xchg
add
xorb
clc
int
push
jg
mov
sbb
jbe
cmp
ret
cmp
bound
jecxz
neg
sub
sbb
aad
incl
pop
out
sbb
sub
mov
dec
or
push
test
cwtl
mov
fcoml
push
cmp
or
aas
fbstp
arpl
adc
dec
inc
push
jnp
xchg
lea
jo
test
mov
fwait
aam
jl
out
and
jmp
sub
lods
push
inc
or
cli
loop
inc
loopne
sbb
leave
outsb
xchg
push
loope
inc
inc
cmp
pop
jg
mov
add
aaa
pop
roll
loop
test
ljmp
popf
fmuls
in
enter
cmp
ja
adc
jbe,pn
mov
and
sbb
xchg
cli
cmp
xchg
aas
jns
dec
subb
or
cwtl
inc
cmpsb
sub
pop
mov
orl
mov
dec
dec
push
adcl
mov
sbb
pop
mov
fwait
inc
ljmp
ret
mov
or
lods
mov
mov
cmp
mov
cmp
mov
mov
ss
insl
shll
insl
ret
pushf
dec
stos
and
mov
pusha
fbstp
jle
mov
mov
bound
or
shlb
rorb
mov
jno
stos
mov
jle
daa
mov
mov
jecxz,pt
mov
inc
arpl
push
roll
ja
cli
jp
push
inc
sub
mov
mov
daa
jle
je
inc
fldlg2
nop
jmp
ret
xchg
negl
bound
mov
je
ljmp
xor
mov
test
mov
mov
loope
pop
stos
xchg
mov
jle
rorl
lea
nop
mov
imul
lods
dec
movsl
sbb
jo
lods
cmp
sbb
sahf
mov
dec
mov
bound
scas
jg
inc
out
add
rcr
sbb
fs
mov
sub
cs
in
cmp
cmp
mov
xchg
add
cld
jp
push
pop
xchg
mov
call
inc
pop
xor
xchg
int3
mov
movsb
nop
jp
jp
cli
fs
call
mov
sub
jnp
gs
jp
or
push
rolb
outsb
loop
cmp
dec
cmp
or
adc
mov
add
push
mov
mov
test
pop
push
mov
mov
test
pop
jge,pt
jno
add
jle
ds
test
sahf
shr
push
dec
mov
jmp
outsb
loope
push
jbe
xor
aaa
inc
or
mov
mov
push
pop
or
mov
or
aad
aaa
pop
lcall
aad
je
sub
fdivl
outsl
dec
sub
mov
out
loopne
call
addr16
fists
icebp
dec
int
lods
xchg
cld
fdivl
inc
mov
fdiv
inc
fisubl
mov
push
pushf
icebp
int3
mov
das
and
push
sbb
and
sbbb
jp
inc
clc
sbbl
sbb
inc
cmpsb
jge
lahf
push
dec
xorl
pop
mov
dec
out
cs
hlt
push
sbb
push
loop
mov
push
mov
mov
dec
mov
test
shlb
gs
xor
and
scas
pop
mov
in
sub
mov
aad
pop
push
push
ret
sub
cmp
fiaddl
call
fisttpll
js
push
xchg
into
push
xlat
ficomps
push
hlt
mov
sub
les
lods
mov
xor
inc
imul
shr
or
div
add
call
and
hlt
jb
scas
out
adc
int
mov
mov
sub
repz
push
push
aas
add
push
leave
loopne
arpl
mov
mov
xchg
outsb
xchg
adc
pop
mov
adc
pop
sub
push
pop
stos
pop
sahf
ds
add
roll
mov
push
push
movsb
popf
test
ss
sub
cltd
jle
cmp
add
arpl
fildll
shl
outsl
cmp
fildl
pop
std
mov
ret
cmp
jecxz
inc
pand
pop
sbb
nop
std
pusha
das
cmp
add
pop
ret
xchg
sarb
loop
sahf
xchg
jge
pop
xchg
stos
mov
mov
push
fdivrs
jb
pushf
insb
iret
jno
mov
and
sbb
es
inc
jo
push
fmulp
push
push
fsubrp
movsl
js
inc
out
lds
cmp
inc
testl
jge
insl
mov
test
addr16
and
cwtl
dec
cwtl
call
cmp
jne
sbb
push
pop
xor
xchg
int3
into
jns
aam
sbb
inc
jg
cmp
cltd
sub
out
int
cmp
pop
xor
mov
lods
mov
fbld
out
lock
std
loopne
faddl
mov
sti
sbb
push
faddp
scas
mov
mov
jnp
xor
or
sti
add
sub
xchg
mov
lret
lcall
js
int
je
push
es
sub
loopne
adc
faddl
xor
in
dec
daa
es
push
mov
mov
stc
lahf
cltd
add
mov
mov
pop
sub
arpl
push
pop
mov
mov
jo
inc
mov
mov
dec
sub
dec
cmc
ljmp
call
xor
in
xor
push
lcall
inc
lock
shlb
push
movsl
decl
rcll
jecxz
bound
ss
jg
xchg
sub
mov
add
add
add
outsb
fsubp
stc
dec
cmp
test
jecxz
std
enter
inc
sub
jno
mov
mov
mov
jge
scas
sub
jmp
or
fdivr
test
sahf
mov
aam
aaa
pop
jnp
jbe
jbe
sub
rolb
cmp
push
in
inc
and
push
loopne
js
pminub
jbe
push
jl
jmp
inc
loop
pop
or
xchg
ja
mov
insb
mov
ret
and
inc
cmp
inc
pop
xchg
orl
jno
lret
stos
loop
js
xor
push
cmp
insb
aad
arpl
xor
loope
inc
pop
dec
mov
sbb
in
push
insl
mov
or
roll
dec
push
inc
fs
rclb
lret
adcb
jmp
popl
mov
sbb
mov
pop
mov
pop
std
pusha
sub
mov
les
punpckldq
fildll
jnp
adc
or
insl
addb
jnp
sub
jecxz
xchg
mov
mov
outsb
shll
outsl
jns
mov
mov
in
inc
les
cmpsl
dec
adc
sub
inc
mov
xchg
xchg
dec
xchg
sbb
movsb
push
xor
mov
rcr
adc
hlt
cwtl
inc
xchg
cltd
or
xor
popf
sti
ja
push
cs
roll
in
aam
stos
sbb
mov
sbb
outsb
iret
je
enter
dec
mov
or
iret
cmp
cmpsb
mov
jge
inc
push
mov
sub
cli
xor
loopne
mov
not
icebp
sbb
mov
sbb
in
fisttps
in
adc
mov
pusha
mov
lahf
iret
add
dec
add
lds
test
mov
mov
push
inc
dec
jmp
in
pop
push
popa
scas
ss
scas
mov
add
jle
or
and
int3
call
mov
jge
inc
lcall
in
test
pushf
stos
jne
push
sbbl
pop
lods
adc
xchg
jle
xor
mov
sub
sub
jno
pop
in
sbb
and
jbe
incl
add
and
gs
pop
sahf
jecxz
cli
lds
add
inc
mov
fistl
sbb
jmp
loop
jnp
add
lahf
mov
xchg
mov
xchg
xchg
cld
push
mov
fsubl
imul
sti
dec
loope
pushf
fwait
popf
call
aas
imul
mov
out
test
adc
lock
imul
xor
sub
push
imul
lahf
jns
mov
ds
xchg
addr16
sbb
insl
fidivs
jp
pop
and
pop
pushf
pop
sub
int
loope
lds
ja
std
insb
sub
dec
addl
outsb
cwtl
clc
test
push
xchg
push
sbb
or
data16
sub
ficoml
movsb
sti
push
and
jnp
lods
je
sbb
ret
and
xchg
enter
fcmovb
xchg
sti
or
ja
aad
mov
push
jp
and
imul
pop
inc
stos
lds
lods
cwtl
or
dec
insb
leave
and
lods
mov
test
inc
push
mov
arpl
push
ret
lea
orl
mov
dec
fistpll
fcmovnbe
scas
mov
loopne
iret
ja
push
xchg
adc
sub
hlt
jnp
fwait
in
cld
pop
adc
iret
mov
out
sub
push
orb
or
sub
movsl
or
dec
cmpl
sbb
scas
and
data16
ret
mov
cmp
fs
jne
jno
xor
sbb
sub
or
jmp
and
jge
cmp
je
xor
mov
sti
jge
fidivs
xor
xchg
inc
cmc
adc
movsl
ljmp
xor
stos
sar
inc
pop
stos
outsb
shl
add
sub
adc
mov
cmpsl
fs
pop
xchg
aaa
sti
fistpl
jnp
inc
inc
pop
daa
push
cmp
arpl
or
das
jg
ficoms
data16
jne
test
hlt
xlat
fnclex
push
adc
fldl
pop
sbb
mov
inc
mov
sahf
mov
jo
aad
mov
mov
arpl
iret
sbb
iret
xchg
adc
mov
add
jl
xor
aaa
int
sbb
loope
out
sub
jge
cmp
adc
sub
lock
and
imul
aas
iret
xchg
pop
roll
mov
inc
aaa
xor
pop
sub
popa
movsb
inc
mov
notb
cmc
ret
jno
stos
and
jmp
mov
test
test
lret
stos
fidivl
test
lds
xlat
sarb
mov
stos
das
push
cmpl
mov
loop
sbb
dec
pop
or
cmc
cmp
cs
cmpsb
push
add
mov
mov
sbb
mov
add
sub
sbb
inc
push
data16
mov
js
sub
fcomp
movsl
lds
subb
das
pop
adc
mov
shrl
mov
in
daa
mov
out
aad
cmpsb
fwait
nop
push
push
pop
sbb
push
cmp
or
sub
insl
push
cmp
addr16
cld
repz
mov
xor
stos
xchg
jns
in
lods
jl
outsb
iret
add
nop
ss
pop
sub
and
notb
movsl
push
iret
xchg
xor
outsl
ds
rcrb
pop
inc
fs
jb
sub
sub
outsb
xor
sub
jb
insb
rcll
les
insb
outsb
mov
add
pop
pop
push
inc
jbe
lret
mov
ja
popf
adc
pop
aaa
insl
add
fidivrs
cmpsb
adc
push
and
mov
les
lret
int3
jne
sbb
pop
jl
flds
adc
sub
mov
xor
adc
stos
xchg
sbb
js
mov
mov
cmp
aam
js
aas
mov
stc
push
cmpsb
push
jg
mov
test
xchg
push
decl
and
mov
clc
sbb
cld
addr16
out
aam
and
out
movsb
push
mov
imul
cwtl
ret
lret
pop
popf
cmp
add
int3
cli
jae
mov
mov
dec
fdivr
pop
out
xchg
xchg
xor
dec
dec
mov
jle
jno
pop
jmp
loopne
mov
dec
and
xor
rorl
pop
xor
pop
ljmp
test
and
sarb
dec
adc
dec
or
mov
xor
dec
loope
lea
aaa
xor
mov
fnsave
or
subl
cwtl
mov
pop
mov
jo
xchg
ret
lcall
xchg
cltd
mov
repnz
push
sbb
xor
push
fwait
sti
xchg
push
das
test
int
sub
push
enter
lea
or
xor
inc
int
icebp
dec
je
dec
cmpsb
lcall
insb
inc
jns
lsl
pop
dec
mov
lahf
mov
nop
outsb
and
in
inc
clc
sbb
xor
stos
mov
repz
cmc
xor
mov
xor
sub
ss
movsl
adc
aam
jp
push
lcall
and
sub
outsb
dec
xor
xor
jl
repz
aad
mov
push
scas
dec
out
addl
inc
insb
dec
inc
and
push
aad
sub
jmp
popf
data16
pop
push
sbb
sbb
pop
les
aad
popa
mov
sub
cmp
loope
inc
add
in
pop
xchg
mov
add
insl
push
inc
adc
out
xchg
mov
stos
fimull
dec
inc
lds
mov
push
jmp
divl
xchg
pushf
add
aad
sub
mov
xchg
ret
mov
cmp
lret
sbb
jecxz
mov
xchg
test
je
fistpl
in
mov
xchg
hlt
sub
aas
lock
jo
xchg
jb
mov
ljmp
ljmp
jmp
cmp
jns
idivl
jl
ror
fadds
adc
push
cmp
and
push
loop
adcb
cwtl
popa
orb
add
pusha
and
and
insl
push
push
jg
mov
push
pop
packsswb
sahf
ret
cmpsb
aad
jae
imul
jle
cld
jp
ja
shl
xor
add
jno
sar
xchg
pop
sbb
data16
rorl
xchg
and
pushf
xlat
cmp
xor
sbb
sbb
xor
or
sbb
sub
decl
pop
stos
xchg
jmp
and
push
inc
shr
pop
mov
dec
add
pop
aas
lcall
xchg
je
jge
out
dec
xchg
clc
mov
mov
add
push
pop
push
out
lea
push
push
movsl
mov
mov
mov
mov
xchg
sbb
movsb
pop
adc
push
adc
mov
addl
or
dec
xor
pop
mov
rdpmc
sub
out
cmp
and
iret
or
and
and
repz
jmp
dec
inc
movsl
roll
mov
add
inc
dec
in
jle
ljmp
shll
push
and
push
test
in
ja
jne
jp
push
fsubrl
xor
mov
mov
fldt
in
or
adc
xchg
push
mov
mov
sti
xchg
rcrl
shl
movsb
mov
jp
cmp
addr16
push
cmp
jl
loopne
leave
icebp
mov
and
cmc
xchg
out
rorb
mov
adc
ror
push
push
dec
out
idivl
sub
fisubrl
movsl
cmp
test
lahf
aam
adc
mov
mov
jl
pop
push
scas
mov
xor
dec
xor
icebp
and
adc
lock
inc
sub
in
fbstp
or
jnp
stos
sbb
fisttpll
pop
je
xchg
pushl
roll
dec
daa
in
fistpl
pop
int
jnp
inc
nop
shlb
cmpsl
iret
jle
sbb
jp
xchg
enter
fmull
ret
xchg
xor
add
pop
test
xchg
mov
fistpll
and
jbe
pop
mov
lret
scas
xchg
dec
pop
and
mov
push
push
mov
xchg
jae
test
mov
push
adc
mov
scas
popf
jno
ja
repz
pop
sub
xlat
add
icebp
aas
das
mov
cli
xchg
mov
push
pop
xchg
negl
cmp
std
pop
addr16
push
xor
mov
pop
dec
adc
inc
std
addr16
insb
mov
jns
sub
cmpsl
mov
add
add
stos
xchg
push
dec
dec
pop
in
pushf
mov
pop
xchg
inc
mov
test
jp
mov
lock
push
mov
test
pop
out
jns
rcr
mov
mov
sbb
cli
adc
dec
std
adc
mov
mov
jp
shlb
dec
test
mov
push
mov
aam
aaa
daa
pushf
imul
jnp
mov
or
mov
xchg
jb
mov
pop
push
xchg
and
rorb
jo
daa
scas
xor
js
sar
daa
cs
es
sub
jb
mov
mov
loope
pop
insb
mov
std
mov
add
lds
sti
sahf
bound
mov
out
stos
add
push
cwtl
add
movsb
inc
js
add
sahf
dec
push
daa
pop
mov
dec
adc
and
push
ja
xchg
dec
std
scas
pop
das
adc
icebp
mov
mov
fs
mov
inc
add
cltd
je
stos
fwait
push
xchg
inc
in
into
push
adc
mov
adc
insb
inc
xchg
mov
rolb
imul
out
outsl
xor
mov
in
ja
scas
sub
xor
jno
xor
cmpb
jns
xor
cli
test
mov
int3
mov
movsl
popf
adc
push
cld
adc
or
push
mov
push
dec
ja
mov
xor
pop
loop
repnz
adc
addr16
shrb
repnz
pop
in
scas
jno
pop
sub
gs
pop
pusha
pop
cli
pop
out
lods
fwait
scas
into
jge
stos
push
xchg
icebp
or
dec
les
xchg
xchg
loop
arpl
mov
push
push
mov
xor
cmp
rcrl
jb
loop
cmp
pushaw
mov
cmp
fisttps
mov
mov
pusha
mov
add
div
inc
or
cmp
lea
push
mov
mov
test
xor
jecxz
xor
push
insb
enter
push
jge
sub
inc
push
inc
adc
xor
fbstp
hlt
add
xchg
shr
mov
push
ja
mov
cmp
fldl
icebp
mov
jbe
pop
cs
or
cmpsl
pusha
in
icebp
xor
jmp
mov
pop
add
mov
ret
or
xchg
cmpsb
mov
dec
sbb
add
fiaddl
pop
mov
rcl
mov
out
mov
or
cmpsl
stos
jnp
popa
fists
nop
inc
dec
pop
fldt
leave
movsl
dec
mov
bound
lds
xor
sbb
outsb
mov
sti
mov
sub
int
xchg
xor
jg
loope
sub
xchg
pop
and
das
sarb
rcll
dec
stc
fs
xchg
cmpl
in
lock
divb
insl
out
or
orw
jle
cmc
js
shlb
add
mov
dec
shl
mov
sub
mov
xor
cmpsb
cmpl
jp
das
out
jb
jp
and
mov
adc
fdiv
push
out
sub
data16
sbb
fucom
push
gs
cmp
or
push
inc
xchg
fnsave
mov
negb
and
add
xchg
mov
jle
cmp
movsb
jecxz
inc
addl
dec
mov
sbbl
pop
push
inc
pop
mov
repnz
jno
push
mov
push
sbb
jae
fstps
test
loope
sbbl
sbb
jo
popa
nop
fwait
mov
push
gs
rcll
jmp
sbb
jb
mov
xchg
sub
dec
inc
stos
inc
jns
bound
add
jo
test
int3
push
hlt
test
dec
mov
test
jecxz
dec
cmp
test
push
mov
jp
insb
in
popf
sub
in
loop
js
mov
mov
lea
pop
lcall
leave
jb
andl
cmpsl
insb
mov
out
lods
ss
mov
jge
into
sub
iret
adc
test
nop
jl
imul
std
cmp
or
sbb
fisubrl
cmc
clc
leave
adc
xor
or
sbbb
int3
addr16
xchg
out
call
ja
pop
inc
out
pop
cmpsb
pop
mov
cmp
adc
xor
mov
jle
das
iret
inc
inc
mov
cmc
lods
ss
lcall
sub
hlt
loopne
jno
cmpsb
loope
mov
movsl
test
push
add
add
lods
rorb
jecxz
lahf
sub
push
pushf
inc
out
cmp
xchg
into
int3
clc
push
fldcw
add
test
xor
mov
sahf
lcall
mov
out
repnz
mov
repz
sahf
adc
je
xchg
or
icebp
mov
fsubl
lret
pop
mov
inc
add
dec
stos
mov
or
jl
rcll
test
arpl
lret
xor
xor
mov
sbb
or
divb
ljmp
pop
and
and
ds
inc
int3
add
pop
pop
idivl
repnz
inc
sub
lock
mov
sbb
jge
xchg
sub
cwtl
push
test
fs
jns
lods
fcoml
nop
data16
jecxz
pop
mov
and
mov
adc
cmp
mov
and
cmpsb
pop
sbb
clc
movsb
loop
lcall
faddl
jo
out
test
fisttpl
movsl
out
loope
xor
or
clc
push
pop
scas
sar
sbb
scas
lock
and
xchg
lods
add
or
mov
push
adc
cmp
sbb
inc
aaa
xor
adc
mov
test
mov
ret
pop
dec
jmp
movsl
adc
pop
pop
stos
leave
lret
jge
xor
fdivs
pop
lock
push
sbb
xchg
ret
jo
scas
pusha
pop
loopne
stos
daa
dec
aaa
mov
jno
es
sti
lods
or
addr16
jno
sbb
test
lahf
or
icebp
mov
add
mov
pop
shrb
jl
xchg
clc
movsl
pop
out
arpl
adc
arpl
inc
push
jg
mov
and
fwait
sub
jns
dec
adc
cmpsl
jmp
sbb
addr16
cmp
cmp
inc
shrl
mov
or
outsb
sbbl
mov
roll
add
mov
sub
mov
adc
lock
pop
movsl
xchg
pop
mov
adc
xchg
bound
or
jb
mov
insl
les
das
popa
pop
jns
xchg
adc
leave
jo
cmpsb
adc
pushf
stos
movsb
repz
cmp
dec
push
dec
mov
ret
leave
jmp
xchg
mov
cmp
mov
daa
dec
pop
out
int3
xor
add
insb
out
jno
cmpsl
cmp
shrb
cs
xchg
nop
push
dec
sbb
roll
dec
out
mov
fcoml
nop
adc
pop
dec
stos
pop
xchg
adcb
popa
cwtl
cmpsl
pop
xor
cltd
adc
mov
jmp
mov
mov
mov
cltd
std
and
mov
test
mov
js
sub
lcall
sbb
rcll
gs
testb
push
adc
mov
test
mov
aaa
popf
mov
ret
push
inc
adc
bound
aam
pop
sub
dec
xor
repz
mov
ss
dec
lock
add
sbb
jno
and
pop
jmp
fcomps
sbb
pop
popf
aas
add
stos
jo
fs
sahf
shlb
out
cmp
fsubp
andb
enter
mov
mov
push
lods
lahf
aam
pop
test
pusha
jecxz
cld
jp
or
dec
in
mov
adc
ret
jo
fistl
scas
sub
mov
pop
mov
cmc
or
sub
xor
imul
or
inc
add
cmp
push
int3
xchg
pop
xor
xor
adc
jb
jg
imul
xor
aam
sbb
lock
imul
sbb
inc
cmp
jl
sarl
lock
into
mov
jo
dec
loopne
lcall
or
cmp
mov
rcrl
jnp
test
das
xor
or
in
push
or
push
cltd
inc
or
xor
ljmp
repz
mov
fwait
dec
movsb
inc
clc
mov
repnz
repnz
or
movsb
xlat
mov
bound
imul
xor
cwtl
dec
repnz
leave
ret
int
push
aaa
push
lock
jnp
out
fwait
xlat
cmpsb
cmp
push
add
sub
jne
cmp
rolb
ss
dec
pop
xlat
daa
pop
aaa
xchg
xchg
add
inc
lcall
sarl
inc
pop
push
hlt
push
or
imul
mov
andl
leave
loope
xchg
jl
dec
or
pusha
mov
cmp
icebp
pop
or
sub
or
sub
jg
out
test
repnz
pop
inc
sbb
sub
lds
ss
pop
pop
aas
popa
into
movsb
jle
jb
mov
or
cmc
jge
push
jmp
and
add
adc
and
add
repz
ror
loop
hlt
into
dec
inc
sti
stos
std
inc
jge
adc
imul
mov
test
incb
bound
cli
or
lock
sarb
dec
fcoms
pop
mov
clc
enter
adc
push
jno
jge
pusha
lods
fdivr
fstpl
xor
mov
inc
dec
mov
jno
cs
pop
pop
into
xor
xchg
mov
scas
dec
bound
sub
fs
out
imul
mov
cltd
jmp
bound
cmp
popf
add
mov
push
pop
sbb
push
les
cmp
mov
dec
repnz
out
popf
push
add
or
push
std
sarb
xorb
int
xor
jne
in
mov
mov
sbb
push
mov
inc
pushf
shlb
icebp
mov
and
shll
sbb
ja
daa
mov
pop
pop
and
cwtl
and
xchg
adc
loopne
ret
loop,pt
sub
jbe
and
shr
dec
dec
test
push
jne
xor
xchg
dec
xchg
mov
mov
mov
mov
fiaddl
clc
shll
mov
cmp
inc
push
loope
pop
jo
xchg
add
pusha
jl
mov
leave
pop
push
dec
mov
test
fs
cmp
ss
push
cmp
jno
insb
shlb
push
negl
shlb
sub
dec
xor
mov
jno
inc
jno
xor
adc
xor
mov
push
clc
sbb
xchg
mov
cld
stos
push
jns
and
sub
mov
push
cmpsl
push
xchg
out
push
test
xchg
outsl
push
mov
mov
ljmp
push
inc
push
ret
cmpsb
jne
mov
push
cmp
out
inc
dec
and
dec
ljmp
cmp
pop
sub
add
popa
dec
mov
xchg
dec
pushf
pushf
repz
or
or
test
push
push
dec
test
push
icebp
sbb
in
xor
cltd
or
stos
les
loop
loope
leave
out
movsb
test
stc
pop
data16
adc
loop
mov
xlat
sub
addr16
push
mov
jb
or
aad
jg
xchg
dec
push
mov
hlt
mov
ljmp
cmp
mov
ret
xchg
mov
cs
dec
mov
fistpll
jmp
jl
mov
scas
lret
sub
push
jbe
mov
jnp
lret
jae
enter
scas
fldenv
in
test
mov
mov
xchg
outsl
jns
ja
jne
jo
loope
push
push
push
dec
stc
int
test
aaa
je
cltd
push
rcrl
ss
into
add
and
daa
roll
cmp
subb
and
das
je
fwait
xchg
dec
mov
dec
mov
add
jbe
adc
int3
mov
cmp
mov
retw
xor
mov
ljmp
sub
inc
jb
pushl
ljmp
movsb
mov
jne
jne
les
test
jae
pop
stos
ja
call
popf
inc
hlt
mov
xchg
lock
cmc
gs
fstpl
add
popa
mov
hlt
mov
inc
shll
sti
push
jmp
xor
stos
int
mov
mov
pop
into
stos
aas
cld
jl
mov
lods
cmp
pop
sahf
jmp
dec
and
cs
es
xchg
inc
jne
aam
xor
sbb
cmp
or
inc
pop
jmp
lret
repz
dec
pop
adcl
inc
fmull
mov
imul
dec
mov
add
stc
call
mov
outsb
bound
sti
dec
mov
jge
faddl
add
icebp
repnz
out
push
push
pusha
cld
std
adc
inc
cmp
cwtl
jmp
lcall
push
out
ss
pop
pop
ja
pop
aad
dec
imul
or
xchg
bound
jg
push
cmp
dec
imul
xchg
insl
inc
mov
or
ja
ret
jle
jge
andl
sub
stos
xor
les
lret
bound
fdivrs
inc
cltd
fisttpl
inc
or
jmp
ljmp
xor
mov
popf
dec
out
pop
in
out
dec
cmp
repz
insl
add
insl
or
cli
xor
adc
dec
mov
movsl
add
jg
std
pop
push
das
andb
or
out
mov
js
sbb
movsl
lods
dec
xchg
cmp
lods
repnz
cmpsl
xchg
add
pop
ficoml
push
pop
icebp
popf
mov
xchg
les
outsl
add
test
mov
fisubs
fyl2x
mov
or
fmull
leave
inc
sub
jo
xchg
xchg
xor
add
stos
insb
test
xchg
daa
leave
adc
inc
out
hlt
push
sti
idivb
out
cmp
mov
mov
sub
fwait
xor
stc
aad
shlb
sub
mov
ljmp
sub
xlat
lret
mov
pop
ds
cwtl
jmp
dec
and
mov
and
fdiv
lock
dec
add
jp
adc
adc
sbb
fucomp
movsb
mov
addl
adc
dec
lea
jl
pop
and
cmpsl
les
cli
pop
push
or
pop
jbe
rcr
push
mov
test
xchg
in
fistps
ror
sub
push
jecxz
mov
mov
scas
fiaddl
cmpsl
pop
jle
sbb
sbb
push
dec
pop
mov
and
test
es
lock
test
adc
jecxz
scas
orl
js
mov
mov
xchg
dec
push
sbb
fld1
mov
push
or
inc
push
insl
lcall
and
por
mov
jb
jp
or
imul
fsts
rep
xchg
xlat
xchg
xchg
fidivs
repz
movsl
sbb
sbb
push
mull
popa
dec
push
xchg
repnz
fnsave
adc
xlat
cld
mov
push
pop
pop
int3
cmpsb
inc
inc
xchg
mov
pushf
xchg
or
rclb
lods
lret
pop
mov
scas
mov
push
xor
mov
je
adc
or
orb
pop
push
xchg
jae
movsl
cwtl
es
adc
cld
pop
add
shl
outsl
dec
xor
mov
inc
mov
pop
lods
loop
jg
mov
push
lcall
or
mov
xchg
and
repz
sbb
and
arpl
fildl
push
push
shrb
mov
fidivrs
push
mov
shl
jle
mov
mov
call
adc
scas
imull
mov
inc
mov
gs
and
adc
push
stos
mov
mov
sub
mov
mov
mov
jns
das
shlb
fwait
mov
data16
sub
test
decb
insl
mov
daa
icebp
inc
repz
sbb
aam
in
fwait
and
fcmovnbe
mov
movsl
mov
sbb
xorb
fnstcw
dec
sub
add
mov
sub
push
jb
insb
xchg
cltd
push
in
mov
loope
push
scas
and
or
icebp
jg
jl
aam
and
shrl
mull
lahf
aaa
sub
aaa
adc
push
push
jno
xor
mov
mov
fs
add
ljmp
out
sbb
ret
sbb
cmp
dec
cmp
adc
xor
cmp
imul
addr16
jae
in
add
inc
sub
imul
sbb
test
fcomps
loope
incb
ret
and
jmp
jne
mov
xchg
inc
fldenv
test
fucomip
xchg
xorl
sub
mov
hlt
sub
and
sbb
mov
dec
mov
ss
xchg
lods
xor
cli
push
call
les
aam
add
adc
js
pushf
movsb
movsl
mov
sbb
cmp
int
out
std
inc
andl
pop
mov
xor
icebp
push
mov
ficomps
popf
jb
rclb
xor
aad
xor
in
fimull
fbld
mov
insb
pop
sub
add
mov
cli
push
int3
test
pushf
pop
ljmp
push
dec
mov
inc
popf
stos
nop
xorb
or
fiaddl
inc
stc
lret
jmp
cmpsl
stos
pop
clc
inc
push
or
lds
les
outsl
jmp
push
cmpb
pushf
rorb
xchg
pop
adc
lods
enter
sbb
xchg
xor
jl
xlat
lahf
inc
in
shll
nop
and
cmpsl
lds
std
mov
xchg
loop
repnz
push
add
pushf
push
mov
in
fsubl
and
cwtl
adc
enter
pcmpeqb
aad
and
fucomp
lods
add
jno
lods
out
je
sbb
xchg
xchg
add
pop
jp
cld
lods
aaa
push
inc
or
pop
inc
je
outsl
jne
leave
call
xchg
add
xchg
imul
and
dec
arpl
push
rcll
clc
push
lods
lret
xor
push
mov
mov
outsl
and
cli
xchg
pop
cmp
mov
pop
xorl
and
enter
jmp
xor
cmpsb
lcall
lods
cmp
dec
notl
rorb
filds
or
mov
and
div
fs
cmc
arpl
arpl
pop
mov
fildl
out
out
icebp
push
notl
push
cld
jmp
test
and
mov
sbb
add
adc
fmuls
outsl
les
cs
or
outsl
stos
mov
cmpsl
out
out
add
pop
arpl
mov
mov
popf
mov
lret
fmuls
inc
jae
sbb
loope
jge
add
daa
push
in
movsl
insb
lcall
jno
adc
pcmpeqw
sub
inc
je
sub
mov
fbld
and
ja
lret
mov
mov
insl
inc
lcall
xor
adc
xor
sub
sub
fsub
mov
test
pop
arpl
sbb
sub
fisubrs
push
push
add
ret
movsl
mov
push
push
ret
scas
dec
fstpt
mov
adc
aas
push
out
hlt
cld
ss
jmp
lods
mov
or
popf
xor
sbb
inc
outsl
mov
pop
testl
daa
loope
xor
sub
movsb
test
push
jae
add
mov
mov
das
add
mov
inc
jne
xchg
sub
push
cmc
nop
xor
mov
dec
outsb
call
mov
pop
scas
inc
inc
mov
scas
lea
loopne
mov
sub
cs
jg
push
or
pop
shlb
fmuls
stos
fnstenv
sahf
jno
imul
mov
mov
or
mov
jp
fwait
test
pushf
sbb
jmp
nop
or
lods
mov
imul
mov
and
gs
sbb
add
dec
dec
jmp
cwtl
mov
push
sbb
inc
loop
sahf
ljmp
je
fadds
and
iret
inc
int3
xchg
aas
sbbb
or
idivl
out
pop
fimuls
into
bnd
ljmp
xchg
xchg
pushf
out
mov
sub
pop
adc
xlat
mov
imul
decl
daa
jg
xchg
cmp
in
mov
daa
sbb
xchg
mov
sub
bswap
dec
xor
das
leave
lcall
xchg
mov
test
nop
lods
or
test
jb
sti
cmpsb
cmp
xlat
xor
loope
in
sub
movswl
loop
or
ljmp
sbbl
dec
xchg
imul
neg
in
es
or
call
loop
xor
mov
sub
nop
stos
mov
push
mov
push
inc
lds
mov
mov
lea
jp
mov
and
mov
ss
fcomip
cmp
mov
push
cmp
adc
fadd
inc
mov
std
lcall
push
inc
sbb
out
mov
sbb
inc
jo
xchg
mov
sbb
or
ret
mul
mov
sbbb
mov
ja
mov
outsl
push
decl
push
rcll
sub
fst
inc
jbe
jle
inc
fcoml
dec
and
mov
lods
movsb
pop
sbb
test
sub
fldenv
or
aas
pop
fldt
outsb
sub
inc
pop
mov
lock
outsb
xchg
lret
clc
cli
outsl
mov
ret
insl
pop
nop
mov
repz
xchg
sahf
repz
mov
imul
cmpl
jecxz
int
mov
add
fiaddl
add
sbbl
jge
and
gs
push
dec
sarl
jnp
dec
cli
jno
mov
and
or
in
xor
fwait
pop
lcall
mov
mov
mov
pop
pop
xor
jae
add
repz
add
jbe
hlt
or
xchg
inc
popf
arpl
adc
mov
into
sbb
xor
imul
adc
and
mov
nop
add
cwtl
xchg
jp
inc
mov
negb
adc
lret
sti
add
xlat
jge
or
add
cmp
lahf
lods
adc
aam
or
inc
xchg
test
xchg
cmp
xchg
mov
lods
push
in
jl
popa
push
mov
push
cltd
mov
add
jae
push
inc
lds
or
dec
push
outsl
mov
cmp
in
bound
cwtl
pop
jnp
out
dec
sub
scas
scas
fmuls
sub
mov
mov
leave
cmp
pop
dec
decl
mov
ret
add
inc
out
pushf
and
pusha
mov
scas
cmc
sbb
mov
aad
xchg
outsb
mov
repnz
inc
sub
loope
push
aam
push
gs
add
ret
or
in
adcl
cli
lahf
arpl
int3
gs
cwtl
sar
pop
inc
jb
pop
ja
or
and
int3
jnp
iret
xchg
jb
sbb
mov
int
or
pop
cmp
add
mov
inc
xor
pop
sbb
mov
sbb
xor
pushf
push
mov
push
jbe
addb
jne
lods
xor
lock
jno
xchg
add
imul
cs
inc
shlb
pop
scas
sarb
adc
mov
loope
jle
fcomps
xlat
jle
cmpsl
push
pop
fwait
ret
xor
insl
fs
xlat
cs
mov
je
enter
fwait
stos
in
lcall
mov
push
or
pop
out
mov
adc
mov
rclb
sub
scas
into
daa
or
rorb
mov
shl
movsl
jge
sub
imul
push
pop
stos
jl
sbbb
pop
jecxz
mov
loope
cld
xchg
ffreep
and
fistpl
stc
pop
daa
pushf
dec
add
mov
dec
sbb
mov
call
ljmp
cmp
or
push
sbb
xor
xchg
repnz
jg
pop
and
out
hlt
xor
cmp
ds
xor
aam
cltd
mov
xor
inc
imul
pusha
jae
push
push
fwait
roll
cli
mov
inc
test
cltd
xchg
jmp
test
xor
mov
jp
and
or
jle
iret
nop
cld
cmp
mov
ja
pop
pop
insb
cwtl
es
in
and
push
aam
rcr
icebp
jge
jns
dec
cs
dec
into
or
pushl
pop
rorb
addps
fcoml
outsb
repnz
scas
daa
push
lret
mov
or
fnstenv
mov
adc
decl
mov
cmp
mov
sbb
jbe
imul
dec
rcrl
or
ret
jecxz
jecxz
xchg
pusha
inc
lods
xchg
lds
leave
push
pop
push
or
stc
mov
adc
popf
xchg
push
mov
and
add
jle
inc
aaa
jmp
jp
pop
clc
pop
aas
fisubl
ret
jae
andb
stos
mov
shll
daa
movsl
xor
push
or
outsb
lret
or
jo
pusha
adc
sbb
aad
jle
sub
sti
pop
loopne
shrb
mov
cmpsl
cli
test
mov
xchg
ret
nop
lret
shlb
fisttpl
push
pop
lods
popa
rep
sub
iret
dec
xchg
jg
inc
mov
lahf
mov
xchg
push
nop
iret
or
movsb
repz
mov
cmpb
sbb
mov
jg
mov
stos
cli
cmc
test
imulb
jmp
mov
lahf
adc
mov
cmpsb
scas
popa
int3
scas
inc
xor
daa
aam
stc
dec
pop
insb
cli
mov
call
inc
cmp
aas
pop
adc
lods
adc
mov
or
in
push
leave
bound
aas
pop
sbb
je
cmp
arpl
dec
dec
mov
cmpb
xor
repz
xlat
mov
arpl
lock
call
mov
jbe
xor
loopne
clc
xor
xchg
cmp
xlat
pop
jge
pop
adc
mov
add
xor
mov
pop
pop
sub
lret
ljmp
leave
ror
adc
xor
or
push
or
jns
lock
xor
arpl
repnz
imul
mov
mov
cmpsb
jno
sahf
jmp
pop
test
popw
pop
dec
test
cmp
jnp
out
push
jb
vzeroupper
adcb
cltd
cmp
clc
rcll
mov
imul
movsl
xor
cmc
jecxz
xor
xlat
repnz
dec
fistl
dec
iret
dec
push
dec
bound
aam
adc
nop
mov
rclb
mov
mov
inc
sub
push
mov
in
inc
and
imul
ja
mov
xchg
call
sbb
push
in
call
and
adc
mov
shl
loop
jno
cmp
lahf
sbb
fnsave
adc
and
and
pop
cltd
cmp
or
jne
push
mov
add
sbb
test
fcomps
and
push
jle
mov
cmpl
cmp
fnstsw
jecxz
ds
xchg
int
add
cltd
mov
adc
rcll
loope
mov
pushf
cmp
out
shr
ss
loop
call
add
fistpll
clc
jmp
and
ret
adc
ljmp
xchg
mov
lods
sbb
imul
xlat
mov
sbb
scas
xor
cmp
pop
popf
xchg
sbb
fadd
addb
push
cmpsb
sahf
cmpsl
sti
push
imul
movsb
fisubs
js
add
rclb
loop
ret
mov
test
hlt
in
dec
daa
xchg
lods
jge
test
dec
and
ja
addb
push
lock
inc
pop
cmpsl
mov
bound
mov
push
sbb
adc
testl
mov
and
pop
cmpsl
xor
movsb
push
ret
out
lds
les
dec
mov
xlat
lcall
add
sub
cmpsb
jp
mov
cmpsb
sub
add
pop
add
and
pop
stc
stos
in
and
sbb
jmp
mov
pushf
push
js
repnz
mov
cmp
and
clc
inc
les
pusha
fsubs
jns
cmp
insl
add
jle
inc
js
das
sub
adc
mov
sub
dec
jne
or
inc
das
pop
mov
cmpsl
mov
in
inc
xchg
sbb
mov
xchg
sbb
ret
sub
xchg
sbb
xchg
and
cltd
mov
mov
mov
xchg
fsubr
mov
daa
mov
ja
pop
fnstsw
adc
aam
shrb
dec
xchg
in
test
cmp
or
sbb
push
sub
pop
ds
in
xchg
jmp
aam
sbb
test
lea
push
inc
les
mov
fsubp
dec
in
in
out
fxch
mov
jno
mov
test
fs
int
fstl
scas
test
inc
mov
fs
lods
mov
cmp
adc
cli
mov
inc
sbb
lcall
js
call
bound
cmp
call
xchg
cltd
test
neg
lret
add
bound
jg
lock
shrb
daa
cli
adc
push
loopne,pn
ja
into
sbb
sub
xor
sbb
mov
or
push
pop
lret
dec
ret
pop
inc
mov
or
sub
push
pop
sti
adc
lock
xchg
sub
or
lock
decl
adc
xor
lds
jb
int
jne
or
fwait
dec
das
cmp
insb
xchg
out
test
pop
inc
jecxz
sarl
push
mov
mov
adc
xchg
mov
jae
push
ror
sub
jae
add
push
pushf
imul
or
call
mov
arpl
gs
loop
outsl
dec
xchg
mov
or
adc
stos
dec
cwtl
cmp
pop
push
sbb
mov
mov
and
dec
mov
dec
inc
cmp
mov
lret
int
add
iret
adcl
pop
jno
dec
sub
ljmp
das
imulb
sub
sub
add
xchg
push
mov
andl
xchg
pushf
es
inc
aad
lret
not
or
push
and
repz
jnp
push
shrb
ds
pop
stc
mov
xchg
inc
xchg
jae
pop
lds
or
fistpl
inc
outsb
xor
inc
movsl
cmp
into
and
adc
movl
fcmovne
adc
push
or
ljmp
mov
stc
push
movsb
pop
mov
imul
aaa
mov
xchg
push
repnz
pop
mov
stos
sub
or
mov
out
dec
mov
lret
push
mov
shll
ds
push
scas
movsl
inc
out
mov
sti
or
negb
xor
ds
cmp
fcmove
ret
xchg
rcr
lock
cwtl
mov
pushf
in
mov
je
push
add
je
cld
mov
jl
adc
xor
enterw
inc
jne
mov
and
adc
fs
pcmpgtb
push
add
xchg
cs
mov
fisubs
lods
repnz
xchg
mov
jecxz
sub
jns
stos
test
inc
cltd
or
into
pop
xlat
and
mov
and
xlat
jge
repnz
mov
loop
jae
sub
pushf
loope
mov
pusha
sub
in
xor
lret
imul
aam
int
jbe
loop
mulps
gs
inc
adcb
and
aad
lods
xchg
rep
adc
xchg
daa
jb
sub
inc
in
push
push
outsb
mov
daa
mov
pusha
mov
push
in
pop
orb
sub
dec
xchg
sub
inc
jns
xchg
cli
in
es
je
inc
mov
push
addl
aam
jg
test
in
sub
push
sarb
imul
cli
sti
or
rorl
jns
lcall
ss
stos
xchg
test
scas
out
jmp
in
xor
or
aaa
inc
add
lods
insl
testb
das
aam
lock
mov
push
adc
daa
loop
fcmovbe
jns
xlat
pop
add
lret
call
clc
in
sbb
dec
out
int
mov
cltd
ss
aaa
sbb
shll
jb
cmpsb
sbb
pushf
dec
das
and
adc
clc
mov
xchg
mov
jmp
insb
movups
or
adc
rorl
les
jnp
mov
cltd
dec
dec
xor
fwait
push
jle
xchg
and
lods
xchg
xchg
sub
sbb
aas
mov
xchg
push
mov
dec
in
push
cmpsb
xchg
test
pop
inc
push
movsl
or
mov
pop
sub
sbb
pop
insl
mov
mov
jno
fwait
xor
inc
lcall
adc
add
inc
dec
fistpl
pop
in
out
adc
mov
push
dec
testb
mov
push
mov
lea
inc
xchg
shr
push
or
sbb
sbb
hlt
movsb
xchg
sub
js
inc
fsubl
xchg
cwtl
in
mov
sbb
divb
insb
mov
adc
rcrl
sbb
mov
add
es
enter
mov
rdtsc
xchg
xor
pop
mov
and
xchg
xor
movsb
ljmp
cli
lahf
xor
call
jno
mov
pop
rclb
aas
pop
test
rclb
movsb
xchg
sahf
dec
lcall
stos
adc
inc
jae
iret
inc
add
or
sub
pop
push
jae
xchg
adc
fnstenv
fwait
jae
inc
push
movsb
jno
rcll
stc
mov
icebp
xchg
jnp
sbb
cmp
dec
das
cld
add
mov
enter
push
push
add
mov
daa
bound
ret
inc
mov
sub
or
cs
sub
mov
pop
out
push
push
test
mov
aad
out
pop
mov
and
inc
in
out
imul
jae
xor
popa
gs
movsb
push
testb
xchg
test
jle
pop
dec
inc
pop
add
ljmp
out
xchg
scas
sub
and
jbe
cmp
ret
inc
inc
lret
xchg
xor
nop
and
std
loop
mov
pop
notb
or
cmp
stc
jl
mov
cmp
cmp
repnz
or
add
lea
icebp
insl
xchg
cmp
dec
in
sub
out
aas
je
int
mov
cltd
aaa
stc
sbb
inc
lret
scas
loop
lods
lea
dec
sahf
xchg
int
mov
or
or
push
fwait
pop
aaa
xlat
int3
xor
bswap
add
sub
movsl
or
sub
push
fisubrs
mov
cmc
iret
push
mov
lahf
in
mov
jecxz
andb
mov
dec
ds
loop
stos
andl
push
lret
lods
sbb
addb
fwait
and
jb
xchg
mov
call
jl
dec
cmp
add
jb
addr16
mov
pop
fisubrl
push
add
inc
jae
lea
jnp
loope
fistpll
imul
xchg
inc
pop
repz
ds
cmp
inc
xchg
inc
inc
mov
roll
fs
push
add
int3
cmpsb
rcl
sahf
inc
or
shll
mov
lods
stos
sbb
dec
pop
call
xchg
pop
in
mov
adc
inc
lret
movsl
or
add
clc
js
cmp
mov
add
add
jo,pn
push
xchg
fisttps
cld
add
outsb
xor
fimuls
into
or
fs
out
ljmp
test
outsl
xor
xchg
leave
ja
mov
lret
jg
insb
or
sbb
pop
outsl
sbb
aas
test
or
pop
sbb
dec
ret
add
clc
mov
xchg
subb
jl
or
xchg
cmpsb
test
sahf
pushl
adc
sbb
xchg
idivl
arpl
pop
je
cmp
cmp
pop
mov
sbb
jnp
push
mov
dec
add
mov
daa
ljmp
jmp
adc
iret
push
xor
and
push
sti
xchg
cmp
push
outsl
imull
cmp
push
movsb
sti
mov
sub
lcall
gs
dec
push
aas
jno
mov
sub
repnz
push
fs
lcall
push
les
jle
cli
push
out
cli
sti
popa
inc
pop
mov
lahf
insl
iret
sbb
cld
enter
int3
sbb
aaa
mov
lods
and
pop
out
add
adcl
scas
es
sbb
scas
shlb
sub
mov
ds
ret
je
mov
cld
xor
push
shrb
les
mov
push
and
jns
jmp
fwait
sbb
sbb
and
push
pusha
sbb
mov
and
addb
xchg
push
mov
push
inc
xchg
fbld
scas
and
jl
data16
fs
popf
je
or
lds
sub
in
add
xchg
xchg
pop
mov
addr16
mov
cli
out
adc
incb
daa
pop
das
push
xchg
sub
lods
or
push
popa
inc
pop
ljmp
pop
outsb
je
scas
or
inc
dec
outsl
testb
jno
jecxz
out
sub
jnp
out
arpl
sbb
push
adcl
sbb
ja
or
mov
cmpsl
dec
movsl
push
rcl
push
dec
clc
test
mov
and
dec
push
jmp
xor
inc
test
mov
pop
stos
sbb
add
mov
addb
sti
push
push
dec
push
mov
mov
xchg
sahf
lret
fisttps
add
mov
insb
subl
les
aam
lods
mov
or
xor
negl
stos
mov
xor
aad
jno
jmp
pop
aas
sub
sbb
or
es
call
pop
lret
cmp
push
push
and
enter
in
jle
xchg
pop
shr
cmpb
test
in
aas
adc
sbb
sbb
shll
push
leave
sub
jb
sub
fistl
pop
insl
inc
or
cs
xor
add
cmp
fwait
add
push
and
cmpsb
mov
xchg
rcl
add
push
inc
cmp
leave
stc
lcall
out
ret
cmp
jle
jmp
aad
adc
lahf
and
xchg
cmp
out
sbb
jl
dec
arpl
adc
lds
and
sbb
jl
jb
pop
add
ljmp
dec
push
xchg
cmpsl
lahf
flds
aaa
sbb
push
ss
mov
pop
mov
loope
sarl
das
mov
xlat
xchg
outsb
mov
sti
repz
addr16
imull
mov
pop
adc
or
pop
cmp
dec
inc
rcll
iret
ds
lds
mov
pop
sub
and
mov
xchg
jg
pushf
pop
mov
sbb
mov
das
mov
xor
jg
jns
xchg
sbb
cmp
out
pop
jae
dec
adc
call
and
mov
and
and
pusha
icebp
mov
cltd
pop
xchg
or
stos
mov
out
mov
sub
in
sar
mov
test
push
sub
push
addr16
pop
mov
cmpl
xor
add
pushf
pop
cmp
imul
aas
inc
pusha
data16
mov
movsb
push
out
dec
call
lock
add
pop
mov
add
out
js
sub
outsb
popa
and
sub
mov
mov
mov
cmp
mov
pop
out
movsb
adc
pop
and
sbb
test
xchg
xchg
pop
mov
jl
sub
int
aam
dec
pop
adc
andl
sub
std
jbe
mov
mov
mov
push
dec
push
es
pop
in
test
lods
ds
push
cltd
and
jp
loop
pop
and
jp
mov
add
pusha
sub
insl
ja
adc
pop
dec
dec
ss
mov
inc
mov
cmc
rolb
inc
jne
hlt
and
icebp
movsb
dec
lret
bound
clc
add
xchg
mov
outsb
daa
sub
push
outsl
cli
pop
aaa
xchg
mov
xor
cmp
popf
sbb
xchg
jae
icebp
out
and
mov
fisubl
cmp
leave
lret
test
xor
push
andb
notb
scas
mov
es
insb
lahf
add
push
inc
push
mov
jno
mov
xor
and
lods
pushf
cmpsb
xchg
inc
xor
push
cltd
rcl
std
lahf
sub
mov
test
push
cmp
jo
push
or
call
jb
dec
lcall
or
jno
sbb
pop
mov
mov
movsl
stos
shl
test
pop
inc
es
inc
xor
jge
outsb
nop
enter
fwait
repnz
inc
mov
and
int
or
dec
shlb
sarl
gs
clc
xchg
pusha
iret
xorb
nop
jg
iret
jno
mov
aas
push
into
ds
adc
data16
mov
mov
popf
test
add
scas
cmp
adc
out
dec
jg
jg
cmpsl
stc
and
outsl
pop
loope
arpl
dec
imul
lods
add
sub
je
push
cmp
pop
aaa
pop
pop
shll
fcoml
loop
push
popf
jl
movsl
and
clc
add
rcrl
aas
mov
out
adc
pop
lods
mul
push
push
ds
push
jbe
out
add
or
cld
sbb
push
mov
fnstsw
es
jbe
into
xchg
aam
add
mov
mov
pop
jne
loop
clc
or
mov
xchg
pop
int3
repnz
jmp
loopne
cmp
ds
jge
add
imul
fwait
or
outsb
push
adc
sbb
insl
mov
cmpsl
leave
mov
push
cltd
mov
lds
mov
int3
xorb
psubsw
mov
push
mov
out
movsb
lock
stos
pop
icebp
sti
insb
inc
lods
cmp
add
pop
mov
cmpsl
mov
pop
jg
cltd
je
lret
push
rolb
pushf
xorb
xcrypt-cbc
cmpsl
aad
push
push
xchg
loopne
inc
sub
imul
jnp
dec
adc
int
lahf
mov
cli
lods
nop
stos
test
and
dec
jbe
or
dec
fs
mov
add
pop
scas
lahf
mov
jno
fcomps
dec
and
mov
xor
push
dec
test
repnz
call
mov
xor
insl
cmpsb
ljmp
fistpl
out
ret
pop
repnz
inc
xchg
mov
fists
and
and
xor
mov
sbb
xchg
xor
pop
mov
cmp
inc
inc
rcrb
xchg
push
lea
je
mov
lret
adc
ret
mov
lret
dec
dec
fisubl
pop
filds
inc
inc
adc
imul
aaa
pop
xor
loopne
aaa
sbb
jle
ret
pusha
jae
cmp
xlat
jae
in
fs
in
dec
cmp
add
jb
xchg
stos
lea
mov
into
int
push
dec
out
shrb
insl
ficompl
jnp
sub
cmp
pop
jmp
xor
cmp
cmp
bound
push
pop
dec
enter
jo
fisttpl
mov
movsb
pop
cmp
dec
cld
fldcw
into
push
sti
popf
xchg
loop
out
xchg
mov
out
ds
shrb
jnp
or
jnp
adc
insl
jle
sti
in
into
dec
mov
sbb
testb
mov
in
cmp
mov
lods
xchg
add
or
das
cltd
mov
mov
sbb
and
or
fcoml
cmp
dec
adc
inc
dec
add
pop
add
aad
lahf
movsl
xor
lods
andb
xor
push
dec
mov
mov
mov
push
adc
xchg
pop
call
xor
inc
pop
cld
xchg
imul
fisttpll
mov
test
push
test
sbb
inc
sub
xor
loopne
and
jb
and
push
pop
xchg
inc
jge
ficoml
jb
sbb
add
jmp
movsl
cmp
cwtl
add
mov
dec
cld
stos
pop
sahf
cmp
and
adc
xlat
sbb
testl
sti
fiadds
test
pop
pop
xlat
movsl
add
dec
sub
scas
arpl
or
jns
out
push
xlat
js
test
out
lahf
sti
push
mov
scas
movsl
push
sub
mov
negb
push
test
jl
cwtl
ret
mov
adc
call
xor
mov
sub
push
dec
inc
jp
add
fdivr
jb
pop
aaa
scas
cmc
mov
and
mov
mov
mov
aad
into
in
rclb
in
sbb
mov
pop
arpl
pop
and
ret
leave
mov
pop
cmp
push
aam
push
stos
xor
enter
add
in
add
iret
pusha
and
gs
popf
jecxz
out
fisubl
dec
nop
cmpsb
mul
xor
xchg
pop
arpl
pop
pop
data16
xchg
jl
xchg
sbb
faddp
inc
inc
sub
push
cmpsb
dec
sbb
repnz
adc
mov
sbb
lods
xor
mov
int3
dec
xchg
sub
into
dec
ja
jle
rcll
or
aam
xor
leave
xchg
std
pop
xlat
dec
sbb
cmpb
pop
jno
cmp
inc
call
push
pop
addr16
pop
daa
sbb
cli
adc
jo
es
pop
lds
dec
clc
mov
xchg
cmp
test
cmp
test
pop
jge
pop
shlb
cmp
bnd
test
mov
mov
jno
adc
mov
lret
pop
jl
cmovg
sub
repnz
or
push
sub
ret
pop
mov
mov
lods
push
jge
add
mov
mov
inc
push
imul
add
sbb
loop
adc
pusha
js
mov
push
and
xchg
cli
fildl
inc
test
push
push
sbb
mov
sbb
cli
fisubrl
pop
lods
sbb
daa
jle
or
fisubrl
xchg
push
or
mov
mov
or
jmp
ljmp
mov
mov
xor
std
repnz
loopne
leave
orb
loope
jnp
mov
mov
jne
movsb
fmulp
in
lahf
pop
loope
inc
int3
adc
movsl
xorl
nop
jno
jo
aaa
arpl
pop
iret
jbe
popf
mov
jge
pop
inc
push
xor
pop
add
xchg
out
testl
pop
lret
leave
test
arpl
cld
adc
cmpb
pusha
dec
cmpsb
xor
aad
cs
int
out
sbb
cli
loopne
js
out
and
addl
pop
arpl
mov
jmp
mov
sbb
loop
ljmp
and
mov
out
add
and
out
mov
dec
into
or
loop
push
xchg
fcoml
mov
clc
outsl
push
cmp
cwtl
jnp
stos
push
lahf
mov
gs
cltd
mov
inc
inc
das
cmpl
push
or
outsb
sub
outsl
icebp
jns
jp
negl
in
jle
not
sbb
scas
inc
fdivs
dec
xor
xor
push
cmc
mov
insb
pop
mov
or
subb
xchg
mov
scas
and
jl
sbb
loop
adc
lcall
fdivl
imul
inc
or
adcl
sti
lock
cmp
lds
pop
cli
jae
mov
outsb
dec
inc
mov
out
repz
or
out
sub
and
mov
gs
xor
test
push
xchg
jno
pop
popl
sarb
sub
ss
sub
je
std
dec
les
fdivr
es
icebp
lcall
js
mov
and
jbe
inc
inc
test
push
loop
popa
out
xor
sti
leave
jns
ja
outsb
fcomip
sbb
and
add
int3
mov
sarl
or
lcall
sbb
ds
lret
push
adc
pop
addr16
pop
sbbb
fsubrl
insb
or
fistpl
push
clc
movsb
aam
push
mov
enter
mov
push
loopne
mov
addl
test
ss
jne
mov
js
cld
stos
movsb
add
push
sbb
fmuls
mov
es
xor
stc
test
neg
and
cmp
fsubs
jb
lahf
or
cs
inc
mov
test
jns
shl
testl
push
lret
jno
cmp
negl
xchg
xorl
test
popa
test
push
mov
test
loopne
inc
xchg
repz
xlat
or
xchg
lock
addr16
dec
out
fsubl
lea
imul
push
sbbb
nop
ret
add
aaa
xor
ret
jmp
es
xchg
push
jl
pop
push
enter
mov
and
jae
popa
push
cmp
fisttpl
lods
sbb
sub
pop
lcall
or
sub
movsb
mov
and
inc
sub
dec
and
add
adc
jne
out
negl
jae
push
push
jne
cwtl
or
sub
cmp
inc
loop
call
inc
or
pushf
mov
jp
mov
adc
lret
test
loopne
mov
xchg
stc
aam
push
mov
mov
dec
mov
sbb
lods
imul
leave
inc
sahf
cmpsb
enter
xchg
adc
jecxz
sub
inc
dec
rcll
je
in
leave
in
push
dec
loope
fldt
xchg
inc
lods
lds
loop
lret
adc
sarl
cmp
test
arpl
jg
js
bound
js
adcb
ljmp
mov
mov
inc
and
inc
frstor
mov
imul
mov
jg
add
or
add
es
sahf
repz
xchg
test
dec
out
jns
std
push
test
or
add
and
int3
data16
lea
push
das
ss
aaa
das
aad
push
imul
inc
pop
push
jle
sti
loope
bound
inc
mov
jp
js
adcl
fdivrl
test
adc
add
and
mov
inc
stos
imul
lret
fwait
lcall
or
mov
adc
jl
fnstsw
lods
roll
int3
fiaddl
adc
loopne
stc
inc
test
push
mov
in
sub
sub
les
jns
fs
pop
dec
rorb
fstpl
fwait
dec
sub
arpl
jg
pop
push
jecxz
or
jnp
stos
test
ljmp
les
push
xor
scas
push
notl
mov
mov
sub
in
add
and
mov
sbb
popf
into
push
dec
rcr
inc
add
hlt
std
movsb
iret
je
clc
add
lea
call
xlat
xor
add
and
pop
decb
cmp
loope
mov
ja
shrb
cmp
jns
dec
fs
ljmp
jo
mov
arpl
rolb
adc
lea
out
cmc
inc
mov
hlt
mov
out
repz
adcl
js
fldt
shrl
test
out
imul
dec
pop
push
xor
stc
js
fnstenv
inc
pop
sbb
xchg
rcrb
dec
nop
mov
pop
stc
dec
out
pop
adc
popf
mov
inc
rorl
mov
xor
in
sbb
xchg
clc
in
call
ljmp
fiadds
inc
ret
out
das
mov
and
out
pop
cld
loop
aam
xchg
push
xchg
aaa
pop
fimuls
daa
insb
add
decb
xchg
imul
fbstp
out
je
cmp
push
stos
adc
loopne
bound
stos
test
inc
ret
jg
into
jo
push
and
sbb
insl
ret
adcl
movsl
jp
ret
ds
lods
cwtd
cmp
xchg
divl
dec
lods
jno,pt
push
push
pop
mov
xor
and
adcb
sbb
and
popf
inc
scas
stc
jb
lahf
rclb
jg
addl
dec
rorl
push
cmp
sbb
test
add
sahf
daa
repz
jg
add
and
dec
xchg
fsubs
movsl
mov
push
xor
sub
xchg
addr16
mov
mov
sbb
js
add
std
outsb
xor
add
adc
jbe
mov
mov
sarl
mov
ds
cmp
movsb
les
lret
jl
xor
adc
mov
dec
lock
sub
adc
dec
mov
ljmp
xchg
jnp
inc
inc
cs
xchg
push
pop
xlat
movsb
lcall
scas
push
or
aas
fdivl
dec
scas
ja
sbb
adc
xchg
std
jl
sbb
repz
mov
test
dec
push
xor
or
xor
mov
sbb
xchg
pop
ss
jo
lcall
push
xchg
jns
fidivl
cmpsl
mov
nop
mov
lcall
sti
add
jae
xor
in
lret
mov
in
sub
jnp,pn
mov
inc
adc
push
fs
addr16
jl
and
fisubs
icebp
test
fsubl
mov
ds
into
cmp
iret
pop
mov
in
test
inc
out
push
in
es
dec
pop
icebp
xor
and
out
sarl
add
dec
pop
mov
inc
sbbl
gs
lds
xchg
or
jl
adc
dec
cld
roll
pop
fisubrs
jnp
inc
into
sub
push
scas
pushf
jecxz
dec
test
lahf
aam
cltd
pushf
xchg
scas
mov
xor
or
jmp
cltd
addl
sub
inc
cmp
jg
mov
mov
cmp
mov
jge
or
adc
mov
xchg
cli
jl
jecxz
xchg
mov
imul
inc
movsl
inc
aad
mov
scas
lcall
iret
das
xchg
push
dec
mov
push
lods
pop
mov
mov
shlb
popa
sub
test
add
out
mov
in
stc
loopne
lcall
movsl
inc
movsb
aas
push
je
lret
mov
push
mov
xor
and
andl
add
dec
les
push
xchg
shll
cld
jg
mov
sbbl
insl
push
inc
or
xor
xor
in
and
inc
repz
cld
pop
nop
cmp
test
test
add
or
xchg
ljmp
lods
pop
mov
xchg
pop
push
adc
nop
ljmp
es
or
notl
and
dec
je
mov
pushf
es
mov
push
in
in
lret
xlat
jo
iret
dec
inc
gs
in
push
sbbl
jbe
jnp
sahf
pop
std
mov
xchg
lods
popf
push
cmp
imul
inc
jne,pt
jno
dec
mov
mov
rol
fisttpll
sub
test
or
inc
xchg
or
cmpsb
mov
xor
test
and
cmpsl
sahf
jae
aas
gs
fsubl
sub
in
rcrb
cwtl
push
in
cmpsl
dec
xchg
dec
add
cli
mov
or
xchg
aas
lods
leave
mov
jb
jno
inc
pinsrw
sub
or
mov
test
int3
call
jo
les
mov
adc
mov
xor
test
mov
sbb
push
ljmp
icebp
xchg
inc
xor
lcall
clc
leave
out
stos
push
xchg
adc
jne
push
and
add
out
clc
daa
cs
dec
or
cltd
sub
mov
out
push
mov
pop
push
das
negl
inc
ljmp
imul
or
roll
push
lahf
cmp
lcall
and
mov
cmp
negb
push
mov
ss
pop
aad
adc
std
fcomp
inc
jb
iret
out
jmp
fdivrs
imul
out
pop
and
sub
cmp
add
pop
aam
ja
pop
mov
testb
inc
pop
pop
incl
xlat
test
lods
loop
sub
arpl
sbb
mov
or
rorb
push
adc
cmc
inc
mov
popf
mov
push
mov
or
cwtl
rolb
mov
jmp
push
jns
bnd
jle
jb
jnp
fs
dec
inc
inc
sub
inc
and
stc
hlt
inc
notb
and
xchg
dec
pop
push
popf
xor
or
lock
xchg
mov
cs
scas
push
outsb
pusha
pop
mov
sub
test
fcomip
in
std
add
cmp
cwtl
mov
sbb
xchg
mov
ljmp
pop
add
jnp
lahf
arpl
scas
and
pop
lods
sbb
sti
xor
lock
sub
mov
iret
outsl
fwait
subb
mov
and
mov
lea
mov
jb
cld
mov
aad
jb
push
sbbb
mov
cmp
jnp
dec
push
outsb
push
ljmp
rcrb
mov
into
inc
movsl
mov
lods
inc
aas
bound
insb
scas
xchg
ss
push
mov
test
adc
pop
add
andb
imul
mov
pusha
hlt
fildl
pushf
adcl
xchg
loopne
sbb
ds
movsb
mov
mov
push
ret
call
out
shl
mov
jb
into
sti
xor
jbe
sahf
and
cmp
lret
ret
push
push
jecxz
inc
xor
inc
pop
sbb
jge
cmp
xor
cmc
call
xchg
inc
xor
aas
xor
cmp
adc
aaa
dec
cmp
loope
cmp
inc
sub
xchg
mov
aad
mov
jge
mov
aam
out
xor
cmp
adc
adc
sti
in
dec
push
xchg
cmp
sbb
dec
gs
and
fwait
cltd
sbb
cs
pusha
mov
add
xor
sub
iret
sarl
xchg
or
mov
xchg
daa
fnsave
orb
dec
jge
lahf
dec
sub
aas
xchg
jnp
je
cmpsl
mov
mov
sbb
cmp
xchg
mov
adc
cmp
or
cmp
adc
mov
jmp
mov
js
pop
cmp
push
jle
test
ror
cmp
ljmp
jl
sbb
xchg
push
xor
in
shll
fcompl
adc
fs
inc
pop
mov
push
jmp
mov
mov
dec
xchg
pop
push
cmpsb
xor
enter
repnz
pop
icebp
shl
sub
enter
xchg
mov
xor
pushf
dec
and
in
push
pop
push
inc
sbb
rcrb
mov
push
cmp
lock
lock
pop
or
mov
scas
stos
js
in
inc
andb
and
cmp
outsl
fdiv
icebp
lahf
rcll
pop
xlat
fldenv
out
repnz
outsl
pusha
pop
inc
jle
jnp
push
shrl
and
ficompl
pushf
test
imul
mov
push
pushf
repnz
jae
fninit
cmp
mov
testb
popa
and
push
mov
or
push
add
cmp
cld
sbb
and
mov
int
sub
in
shr
jge
xor
jns
xchg
xchg
sub
adc
lds
add
xor
cltd
popa
xorl
mov
pushl
cmpsl
inc
ss
pop
imulb
and
push
pop
pop
xchg
adc
loop
add
stos
out
adc
mov
fnstcw
mov
lcall
xchg
mov
cmp
cmp
cmpsl
xchg
or
jb
in
fsubl
xchg
adc
aas
mov
sbb
je
mov
inc
jnp,pt
mov
loope
or
xor
jg
cmpsl
and
jmp
fstps
and
loope
add
arpl
loopne
ret
mov
sub
test
or
adc
mov
aas
xchg
out
push
scas
in
mov
cmc
test
cmp
dec
into
inc
ja
fs
fisttpl
dec
xor
out
xor
push
mov
test
jns
jp
sbb
stos
pop
push
add
cmpb
sbb
or
sub
sbb
jae
div
cmp
mov
test
movsb
or
scas
mov
cltd
pusha
mov
daa
arpl
lods
shlb
xchg
cmpsb
xor
dec
popf
mov
jg
inc
push
outsl
dec
or
mov
dec
int
and
arpl
cmp
cmc
dec
and
ret
push
iret
hlt
loope
int3
mov
jg
jmp
sbb
push
mov
les
loopne
sub
es
pop
rclb
pushf
jge
inc
push
cli
insb
ss
mov
mov
jnp
shll
mov
cs
push
adc
sbb
add
out
pop
xor
jmp
filds
je
stos
sbb
jmp
push
cmc
je
mov
jb
cmp
mov
xchg
sbb
cld
outsl
lahf
rolb
aad
push
dec
rcl
orl
mov
push
daa
sub
jo
cmp
push
ja
add
popa
lds
lea
push
movsl
pusha
cltd
cli
mov
jo
roll
jbe
sbb
sbb
movsl
xchg
ret
cmp
mov
push
jnp
mov
shll
inc
xor
aad
insl
insb
pop
iret
icebp
rorl
adc
jmp
in
adc
mov
pop
sarl
xchg
add
jmp
sbb
fnstcw
int
loop
loop
mov
xor
xor
sarl
call
daa
cld
or
pop
pop
test
or
mov
cmp
or
xchg
cmp
sub
sbb
imul
lods
aam
ret
jne
mov
test
sbb
rclb
pop
cmp
shl
add
outsl
popa
jmp
test
notb
xchg
ljmp
sbb
test
mov
pop
loope
xor
mov
mov
dec
scas
leave
mov
ljmp
imul
repz
xor
xchg
ss
imul
movsl
mov
mov
nop
fldenv
je
lock
hlt
inc
arpl
adc
imul
inc
aaa
pop
and
push
mov
xor
mov
daa
jmp
jno
cmpsb
daa
mov
ss
adc
pusha
add
adc
mov
sbb
sti
fidivl
je
sbb
inc
aaa
push
scas
sub
test
pop
out
ss
add
push
mov
shlb
and
call
xchg
xor
mov
pop
rclb
xlat
or
xchg
push
js
push
jg
push
cmpsl
test
and
or
mov
push
adc
std
sbb
pop
mov
xor
arpl
shll
test
mov
mov
movb
cmp
pop
jno
or
jb
sub
mov
mov
or
stc
popf
lods
mov
dec
mov
dec
mov
jns
dec
push
jg
dec
je
ss
idivl
and
jmp
inc
push
adc
cld
push
mov
cmpsb
nop
int
adc
addr16
cmp
jmp
stos
push
jnp
cmpsl
xchg
mov
std
fcoms
or
mov
mov
pop
in
push
mov
aam
outsb
dec
ror
add
cli
adc
pop
sub
mov
push
dec
push
and
dec
mov
xor
popa
jmp
add
nop
mov
inc
mov
or
negb
das
mov
fwait
jl
lods
sbb
jb
iret
sbb
sbb
pop
sahf
mov
arpl
aas
cwtl
mov
addl
fs
cli
mov
mov
popa
test
adc
jae
adc
rolb
fists
adc
das
loope
cmp
add
push
arpl
adcb
cwtl
ss
aam
ja
inc
jbe
in
push
mov
xor
and
mov
add
fwait
ja
rcr
iret
add
ret
hlt
in
stos
ja
add
rcr
add
and
adc
inc
mov
daa
pushl
jl
divb
xor
scas
int3
sub
push
js
into
or
cmp
lds
pusha
int
add
xchg
push
arpl
cld
test
gs
inc
mov
std
inc
jb
pop
add
mov
ljmp
lret
arpl
and
nop
sbb
cmp
int
aad
je
fcompl
add
inc
inc
cs
dec
adc
mov
stc
ja
fcomps
out
popf
sbb
or
sbb
push
jge
enter
cli
pop
sbb
dec
icebp
xchg
mov
cmp
rorb
lods
imulb
add
cltd
jno
orl
xor
add
mov
add
pusha
setbe
std
jae
xchg
xchg
iret
cmp
cli
outsl
cmp
inc
push
and
loop
or
aad
icebp
inc
lea
imul
pop
aaa
push
flds
outsb
mov
mov
jecxz
pop
xchg
inc
inc
pop
add
jo
mov
inc
pushf
hlt
in
push
inc
mov
inc
bound
mov
dec
inc
pusha
mul
jo
inc
js
xchg
nop
push
inc
mov
icebp
mov
jmp
jmp
inc
dec
outsb
push
adc
jno
xchg
fildll
leave
jmp
adcl
adc
andb
cmp
scas
das
in
mov
mov
adc
fists
pop
lcall
aam
icebp
test
rorl
popa
cmp
jge
add
movsl
inc
rclb
and
loope
cmc
mov
cs
cmp
test
mov
sub
loopne
cltd
test
iret
out
nop
mov
xchg
sub
push
jl
jae
scas
imul
sbb
repnz
cli
xor
xlat
push
outsl
repz
xchg
inc
loopne
enter
ja
dec
imul
inc
push
cmp
out
xor
push
lret
arpl
in
call
or
jb
inc
test
lret
sbb
push
pushf
push
lea
lret
adc
aaa
data16
loop
cmp
icebp
add
into
and
clc
or
shr
sbb
and
faddl
xor
dec
dec
adc
addr16
jno
adc
aaa
stos
mov
dec
and
jo
rcrl
test
lea
xchg
aas
adc
sbb
lea
call
in
pop
mov
popa
jecxz
sub
xchg
shlb
xor
cmc
cld
pop
mov
push
sbb
push
push
inc
pop
mov
jmp
repz
dec
jno
pop
pop
mov
mov
sti
fimuls
rclb
out
cmpsb
lea
pop
ds
repnz
jle
popa
scas
lahf
clc
mov
jl
or
pop
cmp
push
std
pop
or
adc
xlat
shlb
mov
xchg
ss
test
xchg
jecxz
mov
push
sub
out
dec
cwtl
sbb
jb
popf
pop
add
xchg
jno
push
pop
and
int3
jecxz
pop
push
scas
or
loop
cmp
push
mov
popf
rcl
push
mov
popa
or
mov
loop
aad
mov
popa
cld
xchg
pop
mov
xorl
mov
and
out
adc
xchg
push
addr16
mov
stos
mov
and
sti
push
pop
ja
aam
pop
mov
mov
pusha
xor
hlt
sub
xorl
imul
fistl
inc
mov
dec
aam
mov
xchg
jae
leave
aas
add
push
cwtl
mov
sub
orb
sub
neg
cmpsb
je
popa
push
bound
aas
mov
add
or
mov
dec
push
push
fsubl
xor
mov
int
daa
aaa
push
les
inc
pop
mov
fbld
adc
adc
popa
enter
sbbb
bound
test
and
aad
pushf
xlat
loope
and
sar
into
jle
lret
sub
xchg
fs
dec
negl
scas
pop
inc
mov
xchg
sub
lret
gs
js
dec
or
add
sbb
icebp
xchg
ds
dec
mov
pop
push
or
movsl
mov
mov
bound
jmp
mov
std
xlat
in
dec
and
lods
xor
push
ret
push
arpl
inc
outsl
sub
flds
dec
rcrb
mov
cmpsl
andb
add
mov
sbb
rcrb
jecxz
mov
in
mov
lds
test
cmpsl
je
mov
ljmp
cmp
lods
jnp
pop
mov
and
sbb
xor
and
cmp
pop
pop
jp
mov
sbb
push
loop
in
mov
out
or
ret
test
inc
test
sub
or
lcall
es
outsl
push
ljmp
mov
test
xchg
in
orl
add
adc
cmp
lea
movsl
lret
xorb
adc
push
fwait
pop
nopl
in
repz
movsl
popf
into
popa
jl
ds
shlb
pop
jecxz
je
mov
insl
push
push
arpl
cmp
in
dec
adc
js
imul
mov
push
or
adc
mov
mov
mov
xor
enter
data16
push
addr16
push
loop
inc
cmp
stos
clc
lahf
fsubrl
inc
in
lcall
ret
mov
add
jmp
ret
lock
sbb
sbb
xor
lahf
xor
shlb
int
mov
out
push
push
decb
xor
jno
inc
idivl
mov
orl
xchg
js
adc
dec
aam
cltd
adc
jno
fdivl
in
xchg
xor
xor
fsubrs
or
stos
xor
in
dec
inc
ret
pop
dec
mov
sub
mov
rcrb
hlt
loopne
jno
cmpsl
push
les
das
test
mov
xacquire
push
aad
cmc
popa
repnz
mov
lea
mov
lcall
out
jno
add
dec
aad
fdivs
cltd
std
jne
push
mov
shl
lods
xor
movsb
adc
or
xchg
xor
pop
mov
lods
inc
pop
imul
in
sahf
xlat
imul
js
aad
cltd
es
jns
orl
xor
dec
push
inc
mov
loopne
pop
mov
aas
pop
sbbb
cwtl
lret
cmp
and
shrb
dec
xor
push
jb
das
xor
inc
gs
and
add
ss
clc
xor
mov
cmp
fcmovu
in
mov
sub
fiaddl
out
jns
xchg
adc
icebp
inc
insb
int3
lods
cmp
pop
cmp
dec
std
or
lcall
fiadds
mov
cwtl
mov
add
jbe
enter
fnstcw
mov
jae
lock
cmp
fistps
xor
cs
mov
sbb
sbb
shlb
and
xchg
rolb
cmpb
sbb
adc
cmp
ret
xorl
sbb
loopne
fwait
pop
imul
mov
fwait
xor
lds
imul
add
out
cli
sbb
in
je
fwait
cmpsl
cmpsl
subl
pusha
rol
out
call
push
xchg
orl
out
lcall
cmpsb
popf
mov
mov
add
mov
or
xchg
repz
lcall
int3
and
dec
leave
out
movsb
gs
fistpll
arpl
pop
mov
mov
sbb
es
fnsave
lods
std
out
popa
cli
shll
sub
jge
loopne
mov
sbb
repnz
push
mov
jns
fnsave
jp
lcall
jae
in
mov
mov
xchg
test
aam
xchg
mov
incl
sbb
inc
xchg
dec
jge
xlat
sbb
mov
jnp
jecxz
push
xor
mov
nop
add
cmp
out
push
xchg
mov
je
fsts
lahf
andl
and
imul
insb
outsl
sub
lret
xchg
add
jb
and
jnp
je
jb
enter
fistl
lock
test
in
push
mov
push
inc
jns
jmp
mov
fs
aam
or
dec
jns
in
add
jge
inc
mov
push
or
mov
pop
insb
enter
add
sub
mov
rcr
sbb
jns
in
push
dec
lock
fistl
jl
sub
sub
movsl
jge
mov
dec
arpl
jno
mov
mov
or
aam
je
mov
pop
shrb
popa
xor
pop
test
inc
cmp
xchg
enter
insl
insb
jmp
or
sbb
inc
add
shrl
insl
test
das
or
xchg
mov
lods
xchg
and
add
fwait
sub
ds
gs
jge
lret
xor
sub
sbb
fs
fs
and
in
insl
jecxz
or
mov
cmpsl
pop
inc
cwtl
cmp
clc
int
add
lcall
pop
jns
sub
fnstenv
jge
rol
mov
cmpsb
scas
dec
sbb
inc
out
stc
inc
sub
sbb
push
inc
mov
mov
mov
xor
stos
push
dec
pop
push
xchg
nop
jp
fnsave
icebp
out
shrb
imul
outsb
hlt
mov
lret
sbb
xor
repnz
call
xchg
xchg
gs
cmpsb
iret
sub
xor
xchg
cli
pop
lahf
das
jge
andl
or
fs
sbb
jb
or
inc
dec
pop
mov
shrl
rolb
icebp
sbb
sti
xchg
inc
mov
mov
rcl
lret
push
ret
push
cmc
aaa
xor
jbe
dec
aas
fs
dec
ret
jo
jo
mov
popa
lcall
loop
mov
in
push
xchg
lea
dec
push
rcl
xchg
xor
sub
mov
rclb
sbb
cmp
push
add
lods
xor
pop
adc
add
jle
sub
stos
mov
loop
ja
mov
xor
jecxz
ret
push
xchg
loop
cmpsb
rcll
pop
push
idivb
dec
sbb
add
push
sub
pop
lods
jb
adc
mov
xchg
aas
lahf
pop
lret
lds
gs
aad
aad
push
pop
bound
jo
mov
adc
test
pop
jecxz
fsts
out
push
rcll
das
cmp
adc
inc
je
mov
cmp
ss
dec
mov
daa
repz
fimull
mov
push
aaa
pop
testb
push
mov
lods
jno
mov
pop
clc
adc
loop
mov
cli
repz
mulb
adc
int3
or
enter
incl
adc
je
and
xor
inc
in
in
leave
xchg
lds
cwtl
fs
scas
mov
out
adc
stos
sbb
jne
lret
mov
push
aaa
or
scas
gs
mov
cmpsl
sbb
push
add
sub
mov
dec
mov
in
mov
sub
pop
mov
inc
mov
adc
das
cmpsl
sub
mov
test
shlb
mov
inc
outsb
inc
adc
pop
mov
dec
js
out
mov
addb
mov
inc
jle
ss
inc
cltd
mov
adc
and
xchg
sarl
adc
lret
imul
andb
inc
es
test
shll
mov
fadds
das
xor
and
mov
aas
pop
pop
das
int
fiadds
pop
and
inc
mov
nop
mov
pop
fwait
inc
sbb
jmp
paddw
jnp
xchg
and
adc
inc
scas
test
test
cmp
xchg
popa
rol
cmp
sub
push
pop
vmovss
mov
rolb
out
sbb
push
mov
add
lods
hlt
pop
stc
insb
into
xchg
cmpsb
repz
pop
add
idivb
xor
xor
cld
xchg
repz
jmp
mov
les
push
daa
mov
cmpsl
filds
jo
pop
push
or
adc
add
insl
cltd
inc
lock
insl
adc
das
mov
jl
push
xor
and
enter
mov
mov
sbb
popa
xor
sub
out
xor
adc
aas
ret
xor
add
aaa
xchg
les
insl
or
add
dec
notl
mov
hlt
cwtl
dec
sbb
push
jae
loope
cli
nop
enter
jnp
movsb
js
pop
adc
or
lcall
psrlw
push
sub
push
ret
lods
test
inc
cwtl
push
sub
cmovae
mov
mov
inc
or
push
xchg
xor
dec
imul
sub
inc
cwtl
sbb
arpl
and
in
jge
sbb
inc
mov
cmp
dec
and
aaa
pop
push
jp
rol
jae
cld
push
xor
lea
pop
and
or
insb
xchg
repnz
rcrb
mov
sbb
shll
cmp
or
cli
inc
adc
test
pextrw
mov
sbb
gs
inc
lcall
xchg
outsl
scas
or
in
arpl
in
mov
rorl
xchg
cmp
or
fisubs
mov
sahf
sub
aad
push
xchg
push
lret
mov
in
std
rcrb
push
xor
or
mov
aam
int
fdiv
cmp
adc
call
inc
out
nop
or
sub
xor
ljmp
lods
and
in
and
dec
cmpxchg
mov
lcall
sbb
and
mov
test
jecxz
mov
dec
arpl
inc
mov
dec
rcr
and
pop
bound
decb
rorl
push
xchg
xchg
faddl
xor
dec
mov
fwait
xor
adc
shl
test
outsb
mov
cmpsl
inc
loope
mov
dec
add
test
ljmp
in
in
in
nop
dec
iret
mov
cltd
sbb
dec
push
mov
and
das
inc
inc
push
out
xchg
xchg
sbb
mov
pop
mov
pop
push
punpckhdq
or
cld
mov
jle
mov
cmp
clc
mov
cld
mov
ret
push
sti
stc
call
stos
or
jmp
jae
mov
popf
clc
xor
mov
js
sbb
cmp
mov
test
pop
mov
and
stos
call
sub
decb
and
ret
test
inc
cmpl
incb
daa
cmpsl
sub
sahf
xlat
sbb
cmp
jle
xchg
mov
or
pop
shl
ds
pop
push
push
pop
mov
xor
sub
and
rcr
movl
test
pop
out
fwait
xchg
fdivr
movsl
xor
test
sub
push
out
pop
inc
and
roll
lret
pop
ret
aad
adcl
adc
xchg
ret
sub
leave
mov
dec
sbb
out
or
add
jns
pop
out
mov
inc
mov
in
fcmove
notb
fwait
sub
lcall
mov
sbb
ss
pop
dec
inc
mov
cmp
test
cmc
imul
add
hlt
popf
js
sbb
dec
sub
mov
movsl
cmpsl
cmc
sub
push
je
lahf
jns
xchg
pop
les
outsl
add
jns
cltd
sbb
stos
push
sbb
test
call
cmpsl
xchg
es
out
jg
movsl
pop
mov
iret
xchg
fwait
lahf
popa
push
xor
mov
pusha
xchg
mov
add
pop
in
sti
inc
loopne
rorl
loope
mov
jbe
lds
ret
mov
sub
lods
add
and
stc
mov
dec
out
lds
inc
rcll
pop
or
repz
popf
xchg
inc
inc
inc
inc
bound
or
loopne
jecxz
lahf
jecxz
dec
data16
sub
or
out
add
je
adc
push
pop
imul
inc
and
or
and
call
xor
sbbl
sub
aaa
jns
daa
cmp
cld
lret
xlat
lret
or
xchg
add
cs
into
into
dec
orl
insl
push
or
sbb
jne
add
out
outsl
das
sbb
inc
push
cmpl
fildl
jp
mov
xchg
pop
cmp
cltd
arpl
es
and
mov
adc
sbb
test
xchg
or
push
ficompl
insl
pushf
jmp
pop
inc
imul
shl
je
xor
pop
pushf
and
cmp
or
stos
test
cmp
cs
mov
xor
mov
dec
jbe
add
stos
pop
mov
fxtract
daa
ds
lock
and
sub
mov
or
push
test
and
inc
enter
pusha
pop
mov
jecxz
sarl
inc
jle
jp
test
jnp
and
or
xor
jno
and
cmp
shrl
mov
xor
std
xchg
sbb
ja
add
cmp
ljmp
inc
lea
mov
movsl
stc
xchg
ret
inc
push
cmp
mov
adcl
jl
lds
es
cmp
sti
pop
jns
adc
test
std
loop
dec
cli
push
pop
mov
xchg
or
lock
add
xchg
xchg
adc
push
call
popa
aam
xlat
sub
into
out
in
aas
pop
and
pop
dec
cs
fstl
dec
and
cmpsb
or
adc
add
mov
mov
inc
push
in
xchg
jns
insl
popa
mov
roll
jbe
arpl
rcll
iret
pop
sub
into
xchg
adc
fnsave
stc
bound
cwtl
aam
ret
inc
inc
imul
sub
pop
jl
pop
cld
movl
lahf
jae
fistps
sbb
xor
mov
lea
das
lret
inc
and
lret
xchg
adc
push
fwait
cwtl
aas
lock
popl
or
out
or
adc
or
js
mov
dec
test
push
mov
scas
xor
dec
or
test
cld
shrl
pop
out
xor
pop
sti
fmul
mov
ljmp
cltd
cwtl
sub
mov
jnp
dec
dec
mov
cmp
mov
mov
out
loopne
ret
jns
xor
jae
pop
out
adc
cmp
and
cmp
mov
push
or
fmull
lods
lret
xchg
mov
rclb
loop
mov
xor
int
pop
cmpsb
xlat
cmp
jg
or
xchg
jmp
sbb
pop
bound
xchg
push
sub
mov
inc
in
mov
ftst
mov
decb
push
pop
mov
in
nop
sub
inc
lahf
and
jb
or
inc
adc
pop
xor
adc
dec
out
mov
dec
pop
ret
call
pop
decb
sbb
mov
jne
pop
cs
loope
and
into
mov
cmp
outsl
ret
jo
rclb
jb
mov
ljmp
dec
sbb
sbb
fdivr
inc
xchg
jecxz
dec
dec
ret
pop
into
cmp
rorb
lods
dec
push
mov
or
outsl
jmp
sub
push
pop
sahf
and
xor
ja
xlat
xchg
sbb
mov
cmp
cmp
sbbl
int
in
jp
mov
imul
test
mov
loope
cmpsl
daa
sbb
ja
fsub
pop
pop
stos
and
ret
imul
cmc
inc
mov
pusha
scas
repz
cmp
mov
sbb
lea
push
sub
mov
mov
or
mov
sbb
fwait
shlb
add
push
inc
imul
push
cwtl
int
call
aam
rclb
clc
jge
paddusb
cmp
jecxz
pop
addl
jo
ficompl
jmp
je
mov
and
fmull
outsb
dec
sbb
testb
mov
xchg
stos
adc
out
mov
jle
xchg
adc
ret
pusha
and
cmp
je
loop
xchg
inc
in
ljmp
insb
int
dec
xor
jp
jnp
add
dec
popf
mov
fisttps
iret
xor
jle
imull
adc
xchg
sbb
xor
sarb
test
pop
in
sub
cwtl
xchg
inc
out
mov
sbb
push
xorl
jg
sbb
mov
jne
imul
test
sbb
xchg
or
fwait
lods
int
jns
stos
xor
imul
fistpl
push
lret
shll
sub
adc
add
add
push
clc
xor
movsb
pop
fucomp
out
js
or
adc
sbb
jne
mov
pop
xchg
nop
xchg
and
test
mov
adc
popl
aam
push
push
xchg
int3
mov
mov
shrb
aaa
or
or
fildll
sub
pop
loop
in
cmp
jmp
jl
fsubp
mov
add
aam
cmp
lcall
ret
push
cli
movsl
xchg
outsb
loopne
push
out
andl
inc
mov
and
cmp
inc
imul
in
mov
lret
push
add
ret
cld
inc
push
push
push
xor
mov
pop
cmp
inc
incb
cmc
test
enter
gs
incl
pop
push
push
mov
mov
push
ret
adc
sub
imul
mov
sub
or
imul
inc
xchg
icebp
sbb
insl
pop
sub
orl
jmp
push
popa
cmp
xchg
mov
mov
lods
rcrl
fdivl
jge
addr16
into
rol
stc
xchg
clc
arpl
loop
push
dec
enter
jle
lret
loopne
jbe
in
sbb
cmp
cli
jmp
test
js
repnz
stos
mov
aas
scas
das
daa
push
mov
loope
or
loop
mov
mov
dec
repnz
je
xchg
dec
rol
or
add
or
mov
push
insb
adc
xchg
jo
lcall
xor
ss
les
pop
fcomps
shll
jbe
mov
test
pop
lret
sbb
jmp
out
and
inc
loope
sub
cmpsl
arpl
ret
outsl
dec
jno
lret
mov
inc
enter
int3
out
mov
pop
jbe
xchg
mov
pop
or
dec
add
stos
sbb
push
movsl
sbb
lods
lahf
jnp
pop
les
cmp
xlat
mov
lret
dec
bound
test
jnp
in
loope
sub
les
adc
testb
mov
ds
xchg
mov
jp
or
pushl
repnz
shll
ds
imul
bound
add
or
xor
add
decl
fisttps
xchg
and
dec
test
cmp
adc
jle
rclb
push
dec
js
or
or
hlt
loop
pop
pop
outsb
bound
mov
push
jne
imul
popl
dec
lods
dec
mov
xchg
pop
dec
scas
cmc
sti
pop
xor
and
or
sub
and
ja
inc
dec
lahf
jmp
icebp
test
in
arpl
fistl
test
inc
dec
mov
aam
add
cmp
out
xor
pop
push
stos
push
xor
and
in
inc
adc
das
insl
add
xchg
in
and
cmp
mov
mov
and
vpunpckhwd
addr16
mov
mov
leave
mov
loope
je
arpl
addb
ljmp
decb
xchg
cmp
pop
nop
push
xchg
sbb
pop
jbe
addl
pop
jns
pop
lret
pushf
pop
jae
leave
loop
add
push
inc
mov
dec
and
add
adc
bound
out
jno
scas
sub
pushf
cmp
fdivs
push
dec
sub
cmp
lcall
enter
jmp
sbb
push
inc
sbb
stos
cmp
mov
sarb
bound
clc
pop
gs
fisttps
mov
out
and
pushf
add
push
cs
jge
and
out
dec
sub
cmp
neg
bound
adc
pop
push
dec
repz
sbb
fs
insb
inc
cwtl
mov
mov
pop
shlb
add
mov
in
xchg
lock
xor
scas
xor
and
sbb
fwait
cmc
lret
jo
lock
lods
fisubs
scas
inc
mov
mov
fsubrl
cwtl
xor
dec
cmp
mov
cmp
stc
adc
pop
and
cmp
xchg
mov
xchg
sub
pop
add
sbb
push
mov
push
pop
adc
insl
pusha
movsb
andb
insb
or
mov
jnp
push
bound
jge
fsubr
sub
nop
es
mov
addr16
or
data16
push
sbbl
mov
mov
jns
fimuls
jno
out
push
xor
stos
dec
push
shll
movsb
adc
jb
out
mov
dec
mov
es
mov
or
and
movsb
movl
adc
aaa
aaa
or
fwait
xor
pusha
ljmp
xchg
xchg
jmp
ljmp
cwtl
xchg
es
and
pop
sub
int3
add
xor
pop
pop
cmp
out
lock
cmp
repnz
pushf
or
pop
adc
jbe
ljmp
xchg
mov
xlat
faddp
lcall
in
xchg
sub
cs
mov
in
pop
mov
cmp
movsl
xor
mov
negb
xchg
in
add
jo
xor
sti
enter
mov
daa
aas
push
daa
dec
popf
sbbb
movsb
popf
dec
add
or
outsl
in
cmp
int
add
and
test
in
add
rorl
add
lods
mov
add
clc
dec
out
scas
pusha
sub
or
pop
pop
add
test
pop
lods
lds
mov
push
into
cwtl
or
enter
sahf
test
pusha
fistl
fsts
dec
jmp
push
mov
jne
ret
push
add
mov
loope
mov
add
scas
imul
mov
xchg
out
inc
push
movsb
outsb
dec
test
add
push
mov
xor
mov
pop
xchg
shrb
cs
sub
icebp
push
xor
cmp
test
jl
inc
or
inc
add
inc
jb
jp
push
enter
outsb
out
dec
repz
ret
popa
icebp
popf
add
add
ret
stc
outsl
mov
jmp
fistl
mov
adc
pop
pop
sbb
ljmp
jle
xor
stos
cmp
push
js
xchg
mov
rcrb
or
sub
mov
lock
jg
cmp
fucomi
pop
mov
and
xchg
inc
pop
add
repz
adc
stos
pop
cmp
aas
in
outsb
ret
jne
loop
jg
push
mov
loop,pn
and
mov
add
lret
fcmove
or
xchg
xchg
inc
gs
jnp
imul
pop
je
cmpl
dec
and
movsb
jmp
std
lods
ret
repnz
hlt
stc
imul
sti
cmp
nop
push
lds
cs
lahf
sub
xchg
lods
in
repz
dec
fldt
or
push
mov
dec
push
dec
or
xchg
pop
sbb
add
jmp
clc
fiadds
sbb
jno
cli
xor
xor
pmullw
sbb
mov
push
imul
incl
and
pop
and
xchg
xchg
daa
mov
subb
mov
loop
dec
in
jb
or
mov
xchg
fisubrs
cmp
sbb
push
cld
shlb
pop
aaa
clc
cmc
fisubrl
sbb
inc
adc
bound
xor
jl
sti
jp
push
inc
nop
lock
jnp
imul
arpl
add
jns
sbb
cmc
pop
lods
pop
cmpsb
daa
rcl
fcoms
sub
roll
add
mov
in
scas
lret
orb
jno
xchg
and
add
and
fldt
scas
push
lods
insl
int3
mov
fildll
dec
fidivrs
cld
mov
stc
ss
ja
aam
ljmp
outsb
in
fstpl
mov
pusha
bound
mov
leave
mov
ds
jb
mov
and
bound
movsb
mov
jns
insl
cmp
adc
lret
inc
mov
outsb
xchg
dec
les
or
das
jo
stc
movsl
scas
aas
mov
and
push
test
push
xchg
mov
sbb
inc
pushf
xchg
movaps
mov
mov
rcpps
std
ds
sub
movsb
mov
xor
daa
jl
push
mov
sbb
arpl
nop
push
mov
out
rorb
xor
xchg
cld
fildl
fnstenv
cli
cltd
add
fwait
mov
out
sub
cli
shr
pop
sub
sbb
push
and
ret
fdivrs
addb
jno
xor
movsl
test
xor
movsb
pop
xchg
icebp
or
add
adc
xchg
iret
sbb
xor
into
add
scas
inc
pop
bound
nop
in
xor
repnz
inc
lret
in
jno
or
cs
sbb
fs
sub
lea
add
cmp
dec
sbb
pushf
fbstp
imul
xlat
jb
push
adc
jo
cmp
clc
ss
jno
push
les
in
lret
movsl
cs
bound
stos
pushf
imul
push
fisubl
adc
push
add
mov
cli
mov
aas
xor
orb
hlt
inc
leave
adc
jl
mov
loopne
aam
nop
mov
lods
or
scas
push
int3
fwait
nop
ja
pop
jbe
jbe
cmp
call
mov
imul
push
loopne
pop
adc
lock
and
mov
jp
inc
inc
pop
mov
ret
or
fsubrs
push
inc
mov
or
sub
adcb
inc
inc
pop
xorl
outsl
daa
std
jnp
inc
jne
and
jo
or
xchg
pop
pop
add
fnstsw
push
dec
or
movsb
test
push
push
push
push
js
aad
js
into
sub
adc
cmp
cmp
mov
orl
test
sub
sbb
imul
sbb
in
mov
nop
adcb
in
les
pop
dec
repz
ljmp
pop
push
mov
sub
das
cli
or
repz
fsubp
pop
push
ja
and
dec
add
cli
scas
nop
mov
dec
jmp
mov
sarl
popa
xor
lea
jne
sub
hlt
dec
std
pop
xchg
mov
stos
push
push
lods
out
xchg
stc
pop
cmp
sbb
and
dec
movsb
xor
cli
lea
jl
ror
push
sub
fdiv
add
or
jge
mov
dec
or
adc
inc
mov
pop
rolb
fnstenv
inc
mov
mov
pushl
out
sbb
stc
xor
xchg
sub
jns
sti
inc
std
bound
fistpl
xor
sbbl
movsl
repz
addr16
dec
adc
lahf
xor
sub
jno
lcall
pop
mov
push
test
testl
mov
lds
pop
data16
ret
sub
imul
inc
lahf
daa
clc
xchg
loope
add
loope
xchg
rcrl
adc
testl
and
xor
xorl
jle
je
mov
jge
bound
add
test
imul
iret
dec
lds
inc
inc
jp
pop
mov
jae
out
or
inc
pop
cmp
mov
dec
fstp
test
sub
addr16
pop
mov
loop
js
mov
cli
popl
in
push
outsb
insl
das
in
xor
icebp
out
jne
sub
mov
loop
cltd
push
mov
mov
ds
fcoml
xor
ss
pop
das
in
scas
add
lods
ljmp
push
insl
sub
sub
mov
sub
fldl
add
sub
push
rcr
ret
cmp
stos
fisubl
mov
mov
jge,pt
aad
cli
push
popa
inc
xorl
out
in
lret
mov
xchg
loope
cmp
jnp
arpl
and
dec
popl
cli
dec
lret
cmpsb
dec
cmpsl
iret
dec
iret
dec
hlt
cmpsb
jecxz
jge
push
addb
sub
in
push
xlat
int3
fsubrl
mov
out
pop
mov
mov
mov
inc
leave
stos
adc
inc
stc
es
dec
in
pop
fdivrl
nop
das
dec
jbe
pusha
adc
int3
mov
fsts
sub
pop
inc
shrb
cmpl
popf
insb
sbb
bound
pusha
cmpsb
aas
xchg
mov
pop
fidivrs
sub
rcl
loope
pop
out
gs
jno
mov
mov
cmp
addr16
sbb
jle
andb
fwait
out
sbb
daa
xchg
cli
ss
sub
jno
mov
pop
mov
jne
mov
mov
inc
mov
dec
fbld
pop
add
movsb
daa
jmp
scas
sarl
mov
adc
arpl
jle
das
jecxz
movsb
lret
add
dec
adc
push
push
fs
mov
pop
xchg
or
dec
adc
cld
lds
shlb
mov
dec
cld
pop
mov
in
aam
dec
mov
xor
lods
inc
dec
std
negl
jle
xchg
gs
and
and
ret
lcall
sub
pop
xor
sub
cli
add
inc
pop
jmp
sbb
lods
add
jl
in
stc
sub
mov
lahf
push
sti
fwait
add
imul
lahf
jecxz
jo
jge
jnp
inc
movb
jg
ja
adcl
xor
jnp
adcb
sbb
mov
jge
push
or
mov
into
dec
ret
and
pop
dec
jo
sbbl
movsl
ret
push
sbb
jl
pop
inc
pop
add
sub
les
ja
popa
push
mov
pop
iret
add
dec
push
rcrl
in
mov
cmp
call
and
dec
mov
mov
sbb
icebp
in
fwait
sub
hlt
pop
loope
fdiv
mov
inc
adc
add
jl
pop
pushf
enter
pop
sbb
xor
and
pop
xor
cmp
bound
cltd
popf
ret
lret
shrb
mov
insl
xchg
inc
push
or
test
xchg
pop
push
fneni(8087
or
or
inc
or
mov
loopne,pt
setno
sbb
cmc
sub
push
sbb
rorl
xchg
pop
mov
shlb
aam
movsb
in
cli
popf
aad
das
sbb
jecxz
mov
mov
pop
xchg
sub
iret
ss
sub
jl
cwtl
jb
and
jns
add
cs
push
cltd
out
inc
dec
cmp
sbb
cmp
lret
bound
mov
icebp
sbb
data16
sbb
mov
xchg
nop
xchg
cmp
sti
xor
cmc
mov
mov
int3
xchg
stos
jb
xchg
or
dec
xor
data16
out
call
imul
cltd
push
lcall
or
jmp
popa
fisttps
andl
cmpsl
movups
sbb
add
xchg
jnp
jle
inc
xchg
xchg
idiv
xchg
mov
xchg
jle
xor
lahf
mov
aam
mov
sub
pop
repz
mov
inc
out
xor
inc
dec
mov
cmpsl
inc
jae
aas
in
push
test
pop
flds
in
sbb
xor
ficoms
cmp
push
cmc
mov
fcoms
shll
jns
mov
lahf
jne
inc
pop
out
cmp
lea
mov
xor
into
xchg
push
mov
into
insl
inc
loop
mov
mov
dec
mov
dec
ljmp
xor
cmp
je,pn
jb
mov
push
divl
dec
leave
jae
data16
jl
scas
jo
enter
imul
jne
sub
cmpsb
gs
jnp
cmp
mov
cmp
cmp
mov
mov
dec
dec
rolb
data16
xchg
pop
sahf
push
mov
cwtl
mov
pop
inc
adc
rorl
ret
cmp
xlat
dec
mov
xchg
imul
nop
push
call
sti
dec
or
aas
loopne
mov
fs
xchg
pop
cwtl
adc
leave
mov
fwait
push
jo
scas
sub
mov
les
scas
push
mov
push
xchg
or
mov
cmp
adc
xchg
mov
xchg
push
adc
mov
mov
test
cli
sbb
lds
add
cmp
das
inc
mov
mov
imul
cmpb
mov
mov
insl
lds
xchg
insl
dec
nop
and
mov
orb
inc
mov
xchg
popf
jp
jo
call
sub
stc
mov
pcmpeqd
repz
pop
adc
sub
shl
daa
pop
lea
add
fsub
imul
aam
sub
cmp
mov
stos
xchg
lret
pop
push
je
and
mov
mov
pop
in
mov
jae
or
cltd
bound
pop
imul
inc
pop
into
or
in
dec
xchg
mov
xor
dec
lock
addb
mov
mov
adc
and
inc
enter
add
xlat
aam
add
add
sub
or
jne
xor
fwait
dec
mov
cmpb
fsub
mov
addr16
adc
dec
add
es
ficompl
ljmpw
cltd
pop
fs
push
mov
push
gs
add
add
or
xchg
leave
daa
out
lds
xchg
dec
mov
pop
js
test
push
das
jno
pushw
jns
mov
sbb
idivb
xchg
xlat
push
fists
cli
xchg
xor
dec
xlat
cmp
xor
dec
enterw
int3
add
push
cmp
scas
imul
repz
jae
stos
xchg
subl
lea
cwtl
repz
fs
mov
cli
lahf
lds
cmc
out
push
cmp
mov
push
pop
fucomp
scas
pop
mov
pop
inc
stos
shlb
insl
les
movsb
movsb
rclb
and
lods
insb
and
ja
js
pop
xchg
xchg
cmp
push
std
lcall
mov
clc
mov
xchg
xchg
rsqrtps
shll
add
push
and
mov
inc
dec
shll
scas
pop
sbb
mov
ds
or
mov
xor
mov
sbb
push
jecxz
add
std
fmull
push
test
push
pop
stc
mov
xor
mov
jle
cmp
shrb
cltd
gs
xchg
sbb
inc
push
adcb
clc
xchg
adc
dec
mov
repnz
dec
leave
cltd
add
hlt
mov
pop
std
mov
pop
sti
lcall
push
popf
cmpsb
adc
popa
and
fsubs
xlat
vzeroall
jecxz
in
sti
dec
sub
rorb
stos
fwait
or
inc
int
insb
push
imul
das
mov
pop
mov
aad
cli
push
jbe
jbe
imul
sbb
push
icebp
push
mov
dec
jb
jne
sbb
hlt
cld
pop
pop
stos
popa
dec
mov
xchg
sub
inc
sti
mov
popa
pop
in
cmc
xchg
dec
in
and
lahf
mov
sbb
aam
pop
pushf
stos
jo
std
inc
dec
jns
stc
and
andb
fcompl
mov
pop
jno
cmp
cmpsl
repz
insl
fstpt
push
lret
nop
jmp
imul
xor
lahf
mov
xor
loop
leave
mov
push
lock
fisubrl
lds
and
mov
jae
mov
sbb
nop
xchg
fildll
add
cmp
or
sub
lret
lcall
push
in
sarl
xchg
test
push
sahf
add
adc
add
sbb
out
cwtl
inc
jns
dec
cmp
call
in
hlt
xorb
xchg
aas
stos
jns
ret
aas
bound
cmp
in
cmp
push
cmp
mov
scas
in
cmpsl
push
jno
mov
mov
jno
cmp
jecxz
push
inc
xchg
dec
movl
test
rcrb
mov
cli
in
mov
and
push
adc
sbbb
sub
fdivl
adc
add
dec
jae
out
test
lret
push
or
mov
xchg
pop
push
gs
mov
aas
sahf
scas
jle
lret
lahf
shr
jbe
dec
and
mov
pop
jge
add
ljmp
adc
push
mov
cmp
cmpsb
push
jle
call
shr
push
mov
jle
sbb
jg
cld
dec
dec
pusha
xor
out
add
test
or
cltd
mov
sub
into
call
inc
xor
cmp
ss
xchg
inc
inc
aas
mov
lcall
lds
inc
fisubrl
push
inc
mov
fs
loope
inc
out
push
inc
out
sbb
jecxz
out
cmc
xchg
sti
in
mov
xor
loopne
cmp
cmpsl
lret
jbe
pop
or
xchg
inc
mov
or
gs
add
push
pop
push
popf
mov
adc
std
xor
ljmp
bound
sub
xor
frstor
inc
pop
dec
sub
mov
mov
inc
cmp
mov
sub
ret
imul
leave
mov
sub
stc
xchg
mov
push
adc
mov
aad
cld
stos
out
push
orl
push
shlb
adc
mov
adc
es
push
add
dec
lods
pop
push
mov
ds
xchg
insl
xlat
jl
or
insl
mov
inc
out
arpl
add
pop
adc
mov
in
in
inc
in
fwait
movd
gs
js
addr16
pop
push
lds
jo
or
arpl
loope
pop
dec
test
pshufw
sahf
pop
push
and
xchg
jne
loopne
xor
dec
sbbl
cwtl
inc
out
mov
leave
addr16
pop
xor
std
inc
lret
ret
jbe
repnz
ss
adc
aam
xchg
and
pop
lods
in
inc
fistl
aaa
jg
and
out
rorl
data16
add
inc
sub
dec
inc
jnp
out
jl
test
test
fildl
dec
cmp
int
enter
jne
jbe
cmp
and
jo
xchg
dec
jecxz
jbe
sub
or
gs
and
test
xor
jbe
adc
stos
jmp
and
cmp
mov
mov
loope
mov
xchg
cltd
ljmp
lret
arpl
jnp
xchg
shlb
add
gs
int
mov
or
out
loop
xchg
rcr
ljmp
daa
inc
xor
pop
cld
cmp
mov
sahf
jnp
into
and
sarl
add
andb
jne
push
scas
pmaddwd
rcll
das
cmp
nop
outsl
jg
movsl
outsl
outsl
decb
pusha
dec
or
jne
push
test
fimuls
pop
and
mov
leave
test
fisttpll
cmpsl
add
inc
mov
dec
adc
or
dec
int3
fucom
mov
pushl
jnp
and
ud1
bound
test
xchg
ret
arpl
movsb
add
stc
cmp
popf
dec
das
or
lods
fmul
outsl
lods
jbe
pop
adc
jno
popa
aad
add
push
pop
subb
xchg
lods
and
adc
hlt
hlt
jecxz
or
fidivl
inc
and
aas
sub
adc
mov
mov
pop
fsubp
imul
out
pop
pop
jnp
mull
fs
sub
add
fildl
fld
xchg
push
inc
jp
mov
mov
add
shll
outsl
push
outsl
and
fs
flds
lods
pop
mov
pop
dec
cmc
adc
and
aad
jns
in
test
pop
ljmp
mov
push
sbb
cmpsl
in
ss
imul
aad
add
pop
cmc
sbb
add
shr
mov
cmp
jns
cli
xchg
test
test
inc
jb
xchg
insl
pop
leave
dec
sub
lock
add
pushf
add
inc
xchg
shll
xchg
or
js
sar
ljmp
pusha
add
aam
xor
fdivr
andl
cs
pop
cmp
lcall
pop
das
push
sub
outsl
sub
push
sub
xchg
xorb
inc
pop
cli
daa
sub
stos
aaa
ja
je
fmuls
es
jbe
cmpl
imul
adc
insl
das
dec
mov
mov
add
ljmp
test
dec
loopne
cmp
mov
out
cmp
shrl
pushf
push
jbe
inc
stos
dec
idivb
jmp
ret
xor
fs
mov
xor
scas
outsl
int
and
xchg
test
outsl
pusha
adc
pop
in
cmpsb
cmp
inc
dec
imul
xor
add
rclb
and
mov
mov
or
arpl
pop
bound
clc
fsubrs
loop
adc
sub
aaa
inc
loope
data16
cmpsb
pop
add
repnz
mov
mov
mov
rcll
or
or
outsb
sahf
ss
call
mov
inc
push
push
xor
jge
inc
xor
mov
pop
lcall
xchg
jae
cltd
pusha
mov
popf
add
shr
push
jg
ror
push
ds
xor
insl
faddp
jle
mov
cmp
mov
lds
mov
dec
fdivp
insl
mov
mov
push
jge
inc
inc
sbb
lock
cmc
dec
pop
out
and
test
push
aad
lods
int3
dec
sub
sub
add
and
pushf
cmp
cmpsb
enter
idivl
fstpl
out
mov
test
xchg
dec
or
lea
jno
dec
sbb
xchg
in
repz
jmp
push
enter
jns
shrb
xor
cmpsb
outsl
in
bound
mov
sub
pop
iret
pop
xchg
mov
dec
xor
and
mov
mov
aaa
pop
and
shlb
mov
rorb
pop
mov
pop
mov
bound
pop
add
dec
sub
int
lret
enter
push
fiaddl
push
and
jnp
jnp
orl
daa
int3
testb
mov
aaa
lret
aam
scas
iret
ja
int
jae
xlat
popw
add
sbb
push
mov
cmp
dec
cmp
or
ljmp
mulb
jo
add
mov
or
test
scas
pop
adc
sbb
xchg
rclb
scas
popf
stos
aas
add
mov
jle
into
pop
bound
leave
add
fs
mov
dec
outsb
cld
pop
sar
test
sub
stos
outsb
lret
shlw
mov
push
es
shr
data16
arpl
inc
repnz
fists
xchg
cmpl
jecxz
sbb
idivl
aam
sbb
shrl
repz
push
mov
shlb
push
bnd
push
cli
std
je
mov
pop
jbe
add
test
cmp
or
push
mov
mov
imul
adc
loop
fistl
aaa
rorb
in
xchg
fmul
outsb
inc
ss
mov
adc
pop
jl
or
repz
ret
ja
ficoml
lock
mulps
repz
icebp
add
sub
cmp
inc
jo
insl
into
xchg
add
loopne
dec
lahf
jae
gs
mov
sbb
push
push
mov
mov
xlat
push
leave
mov
andl
inc
xor
repnz
int
push
fs
popa
push
inc
xchg
aam
mov
popf
cli
into
sub
pop
enter
fists
js
push
cmp
stos
jb
adc
shlb
data16
mov
aam
cltd
mov
sbb
adc
mov
sub
add
sbb
rcrl
jecxz
or
xor
mov
lock
pop
in
call
or
jmp
sbb
popa
popa
adc
fwait
sub
push
jo
push
aad
push
in
mov
sub
aad
lods
inc
xchg
xor
push
mov
lahf
add
mov
xor
xchg
add
xchg
addr16
in
jl
xorb
push
mov
sbb
mov
cmp
pop
leave
jp
fistl
pop
jp
in
push
adc
bound
lahf
daa
sub
or
lds
outsl
pop
fisubrl
in
cmpl
dec
in
cmp
imul
or
rol
cwtl
out
add
fisubrs
mov
pop
adc
adc
jmp
xchg
or
and
mov
popf
adc
int
hlt
xor
pop
je
fisttpll
xchg
mov
std
inc
dec
mov
sub
mov
cmpl
fucomi
sub
call
dec
imul
out
rorl
mov
jo
or
in
and
pusha
dec
jo
push
in
les
sub
int
jbe
aaa
sbb
mov
imul
cmc
xor
arpl
xchg
jbe
in
cmp
xchg
and
xor
imul
push
or
and
sbb
decb
aaa
negl
jo
dec
or
imul
jl
imulb
pop
fisttpl
fldl
mov
push
insl
lods
bound
out
or
int3
movsb
sub
subb
lahf
push
pinsrw
sbb
jl
sub
fsubs
cwtl
pop
scas
pusha
jns
dec
jge
int
inc
cmp
stc
push
in
insl
mov
mov
cwtl
test
xchg
repnz
and
fnsave
out
int3
cld
push
pop
lcall
sbb
jl
cmp
jge
push
pushl
insl
mov
call
cmp
jmp
aas
pusha
sbb
movsl
mov
out
test
jg
lahf
and
in
adc
scas
xor
idivb
xchg
fucom
adc
out
clc
mov
out
rorl
push
pop
mov
ja
icebp
dec
repnz
fsubl
loopne
bound
rolb
fwait
inc
rclb
lds
xchg
fidivs
sub
sub
cmc
pop
ljmp
int3
aas
cmpb
and
int
mov
xlat
fstps
iret
jo
movb
mov
sub
push
jae
mov
aas
into
daa
out
push
call
mov
mov
shlb
or
push
jle
insl
xor
mov
mov
fadds
push
dec
insb
xor
xchg
xchg
mov
out
mov
adc
imul
push
stos
jp
das
inc
js
cmpsb
incl
add
std
adc
cmp
mov
sbb
or
xor
lods
idivl
shrl
push
gs
xchg
loop
mov
mov
mov
jns
ja
fs
inc
js
popl
shrl
iret
test
dec
dec
das
or
iret
cmp
movsl
push
xor
pop
sub
and
sbb
cmc
jmp
cs
mov
loopne
xlat
pop
push
repz
and
dec
scas
out
arpl
mov
int3
adc
fnstsw
stc
clc
sub
mov
jo
sub
push
stos
or
cli
fmul
sub
rorb
pushl
push
push
jns
lea
movsb
mov
cltd
xchg
cwtl
ljmp
lret
add
cmp
stos
xlat
cmpsl
sbb
fwait
pop
xor
push
int
lcall
in
orl
ljmp
fsubrl
dec
test
clc
xchg
mov
roll
orl
iret
pop
mov
xchg
mov
outsl
ret
pop
icebp
jne
push
mov
shlb
gs
cwtl
add
lods
mov
inc
repnz
fisubl
in
or
mov
adc
dec
jge
out
out
jb
sahf
hlt
adc
pusha
cltd
push
std
jge
fcmovnb
addr16
aad
fxch
sbb
shr
inc
mov
cmc
in
xchg
inc
sbb
dec
lods
add
test
and
aaa
add
out
sbb
icebp
mov
mov
mov
push
ret
cmpsb
xchg
aad
leave
mov
xchg
scas
popf
es
stos
mov
push
movsl
in
ja
clc
push
pop
cmp
les
push
sbb
enter
jo
lods
arpl
jnp
cmpsb
test
pop
movsl
pop
push
pop
lds
and
inc
sbb
xor
adc
gs
pop
lcall
xchg
or
lcall
push
push
add
adc
addr16
xor
nop
cwtd
dec
out
std
jo
repz
and
movsl
cwtl
dec
aaa
sbb
call
cmp
mov
mov
stc
xchg
mov
push
jns
xchg
dec
sub
sbb
jmp
mov
push
jmp
fs
int3
push
icebp
adc
add
xchg
test
push
jle
xchg
sti
fs
aas
ljmp
mov
mov
sub
pop
shrl
dec
jle
das
cltd
pop
and
popf
lret
scas
mov
scas
stc
decb
jp
jle
je
and
cmp
pop
add
adc
ret
mov
aas
repz
int
push
mov
adc
and
cmpsb
fsts
pop
sub
jge
mov
mov
dec
daa
stc
lret
cwtl
xor
sahf
insb
mov
and
adc
lock
ds
dec
jecxz
sahf
repz
inc
cmp
push
fmuls
adc
test
lahf
lahf
mov
adc
call
lahf
fnsave
bnd
scas
xor
mov
cmp
mov
cmc
shll
mov
cwtl
mov
arpl
aaa
roll
adc
add
xchg
cmpsb
test
push
cli
xor
fcomps
cmp
cmp
cld
adc
cltd
sbbl
or
sub
sub
mov
lea
popf
into
mov
cwtl
adc
jle
xchg
mov
and
jmp
popa
aam
lds
js
mov
push
sub
sub
jne
in
pop
int3
xchg
pop
sbbl
xor
outsl
int3
inc
xchg
cmpsb
sbb
xchg
dec
inc
dec
clc
pop
push
xor
daa
aam
test
xchg
lret
xor
sub
fsts
mov
fmul
xor
sbb
aam
rol
sub
insb
pop
xchg
data16
pop
outsl
adc
lods
lret
add
cmp
lods
cmc
and
mov
clc
and
mov
push
xchg
out
ret
enter
mov
inc
aad
inc
adcl
punpcklwd
mov
aam
inc
and
mov
mov
dec
imul
fcomps
daa
pop
es
es
scas
mov
push
push
cltd
lahf
insb
dec
xor
or
jmp
das
jecxz
rorl
leave
mov
pop
sbb
imul
into
jle
jge
je
jno
lret
lret
push
inc
lods
cli
mov
sbb
pop
adc
xlat
mov
jns
stc
shrl
adc
inc
sub
int
jmp
idivb
mov
daa
lret
and
testb
push
mov
fbld
testb
cmp
lahf
cwtl
mov
mov
xor
lock
push
xchg
sbb
in
cmc
or
xor
rcll
cltd
and
test
imul
sub
and
in
mov
jns
fistpl
cmp
lcall
pop
test
pop
jae
jb
sbb
leave
mov
cmc
xor
mov
and
pop
movsl
cmp
inc
lahf
negb
push
repz
mov
adc
lahf
and
mov
inc
out
test
mov
jg
jg
sti
xor
dec
xchg
lret
fisubrs
xchg
or
leave
dec
int3
ret
lret
call
mov
adcl
xor
ds
lret
jp
into
mov
sbb
xchg
test
aas
sbb
mov
and
or
lock
shr
loope
fidivrl
jmp
push
call
xor
pushf
gs
lea
pop
mov
mov
out
or
mov
mov
and
mov
loopne
sbb
add
dec
movsb
mov
out
outsb
dec
repnz
xlat
call
xchg
mov
pop
or
fnstenv
jmp
adc
add
or
pop
xorl
das
add
xlat
ljmp
and
pop
adc
mov
mov
sti
or
in
cwtl
loop
cltd
inc
cmp
jae
adc
mov
xor
dec
push
test
cmp
dec
ds
imul
sbb
mov
in
or
sub
push
xchg
adc
sbb
pop
addr16
test
adc
mov
lods
inc
addb
add
ret
fwait
pop
out
js
mov
stos
xor
iret
xchg
add
in
jmp
jp
dec
or
vhaddps
in
pop
xor
js
je
insl
pop
iret
daa
ret
out
idiv
pusha
push
lods
addb
loop
xlat
scas
push
in
mov
pop
fsubs
fidivrs
outsb
mov
pop
push
xchg
pop
inc
addr16
jmp
ljmp
jb
loope
sub
pop
icebp
add
outsb
fildl
repnz
xor
push
sub
aam
fmulp
jne
push
arpl
shrb
mov
pop
add
cmp
lds
push
sbb
xor
xchg
sub
dec
adc
mov
aaa
and
clc
add
aad
mov
mov
dec
jmp
repz
fwait
xchg
ljmp
gs
data16
xchg
mov
cmp
std
imul
pop
clc
mov
mov
push
mov
xchg
rol
jecxz
cmpl
jno
cmpsb
nop
subl
data16
mov
push
sbb
push
cmp
clc
sbb
dec
loop
mov
iret
iret
pop
adc
add
sbb
gs
mov
adc
jae
mov
sbb
xor
mov
ja
out
jp
outsl
and
mov
mov
and
addr16
ss
out
xchg
loopne
call
and
inc
mov
push
popa
jecxz
dec
rorb
es
lcall
pop
mov
push
or
test
pop
mov
adc
cltd
decl
mov
lock
mov
repnz
sbb
sub
pop
pop
and
inc
sbb
cld
or
mov
stos
shrl
add
push
mov
jbe
cs
nop
outsl
sub
xchg
dec
cmpsb
cmpsl
and
cld
std
xchg
mov
lret
int3
sarb
cmpsl
insb
pop
xor
int3
or
lock
xor
or
cli
and
xchg
or
in
movsl
scas
fdivl
sbb
sbb
sub
mov
ljmp
andb
jecxz
cwtl
in
sahf
push
or
outsl
xchg
push
pop
in
aaa
mov
inc
xor
sbb
rep
cmp
mov
test
aad
jle
adc
mov
aaa
sbb
dec
cmp
sub
mov
xor
leave
arpl
aas
sub
call
ja
out
iret
stos
ljmp
cmp
in
enter
mov
arpl
cmpsb
mov
jecxz
pop
xchg
sub
lods
imull
jnp
push
jbe
insl
divl
xchg
sub
cmp
add
rorb
testb
add
xor
dec
aad
hlt
pop
or
insl
fmul
and
push
sti
rcl
inc
lea
or
inc
push
and
lea
jle
jecxz
mov
cmp
mov
add
les
inc
loopne
push
xor
fisubs
push
movsl
mov
lahf
dec
nop
dec
insb
aam
mov
dec
inc
and
add
add
mov
pop
inc
pop
ljmp
xchg
sarb
pop
xchg
add
repz
fcoml
inc
add
or
push
adc
dec
mov
cli
mov
sub
mov
sub
and
in
jae
adc
sahf
int3
rcll
jno
shll
idivb
div
sbb
mov
or
sbb
fcmovnbe
in
lret
das
jge
sub
fsub
push
xor
mov
stos
scas
sub
push
mov
pop
pusha
pop
aas
outsl
insb
push
jp
jmp
mov
adc
test
in
ret
xchg
mov
in
aas
push
jb
add
inc
dec
add
aaa
daa
lcall
shlb
mov
fisttpl
xchg
pop
in
push
inc
cmp
out
mov
jb
jne
out
roll
jae
xchg
add
test
call
enter
xor
xchg
mov
jmp
inc
adc
pushf
push
or
out
cltd
test
inc
cs
mov
jecxz
xchg
punpckldq
dec
jmp
pop
push
lds
test
cmpsl
jmp
pop
cmpsb
leave
popf
xorl
jecxz
test
cmp
movsb
stos
xchg
dec
xchg
stc
pop
cld
push
dec
pop
cmpsb
mov
ja
push
adc
xor
dec
arpl
aam
add
sub
cmp
negb
pushf
xchg
sub
out
sbb
fs
jmp
sbb
bts
orl
jo
mov
cmp
add
xorl
sbb
outsl
mov
and
jns
mov
mov
fidivs
addl
dec
or
stos
fidivrs
push
xchg
and
inc
mov
test
push
es
jmp
push
data16
lods
xchg
outsl
pop
aam
lock
cltd
in
cmpsb
xlat
mov
int
fsts
popf
lret
int
jno
inc
sub
mulb
mul
add
inc
fnstcw
add
shl
nop
fcompl
int
adc
adc
out
mov
inc
jno
push
and
jecxz
or
jmp
mov
lret
fiaddl
dec
xor
push
out
inc
nop
rcrb
cld
inc
lods
and
int
sbb
into
xchg
enter
or
sbb
cmp
test
aad
into
sub
fdivl
pusha
sbb
jns
sbb
pop
jb
or
lds
shll
nop
dec
mov
mov
loop
fmuls
fwait
cs
out
adcb
scas
repz
insb
or
jbe
insb
insb
inc
dec
jnp
dec
jnp
push
sbb
rcll
mov
stos
testb
inc
push
xor
je
sub
sbb
rolb
fbstp
fadds
fimuls
xor
inc
movsl
mov
add
mov
sub
xor
das
mov
dec
jo
sbb
sahf
jne
pop
push
out
jno
mov
mov
sub
xchg
mov
fimuls
loopne
jbe
jns
stc
pop
dec
dec
cmpsl
enter
pop
out
sbb
mov
orb
fstl
pop
xor
lea
and
lahf
daa
sub
mov
into
lcall
aas
subb
cmp
test
mov
inc
dec
mov
dec
je
xor
js
movsb
cmpsl
pop
mov
fisubl
repnz
mov
sbb
es
iret
adc
mov
cmp
sub
repnz
aas
dec
das
je
shll
nop
pop
stos
mov
arpl
fsubs
mov
adc
insb
ds
stc
xchg
js
insb
sub
out
inc
jnp
faddp
lret
add
push
dec
add
addr16
enter
jnp
mov
adc
xor
xchg
lahf
addr16
pop
pop
dec
mov
lahf
mulb
pop
mov
pop
adc
or
cmp
push
cmp
mov
xchg
mov
push
xor
and
test
cmp
xlat
mov
dec
push
push
push
dec
adc
popf
outsb
jo
repz
cmpsl
stos
sub
adc
jbe
cli
std
jbe
sub
pop
sub
pop
adc
cmp
mov
mov
adc
arpl
in
sbbl
sbb
pop
outsb
out
aas
loop
adc
mov
mov
lcall
fstpl
xchg
adc
xchg
xchg
push
ljmp
in
pushf
in
mov
sti
xor
push
xorb
dec
cmpsl
adc
add
js
ljmp
cmp
push
cmpl
xchg
jl
outsb
mov
xchg
dec
cmp
inc
cmc
stos
cmp
push
fsubl
pop
cmp
jae
lds
in
dec
mov
mov
shll
dec
jnp
or
jle
inc
bound
fnstcw
xor
mov
lods
sub
inc
xchg
and
pop
andb
cmc
test
ja
aam
fildl
dec
popl
lock
pop
xor
mov
shlb
or
cmpsb
rorb
cld
out
jae
mov
xchg
xchg
insl
mov
test
pop
lcall
insl
sub
rcrl
jecxz
cltd
mov
clc
ja
dec
fiaddl
inc
cmp
dec
mov
sub
imul
or
inc
insb
fsubrl
pop
rcrl
xchg
sub
add
adc
xorb
adc
daa
push
insb
adcl
out
jnp
or
cmp
cwtl
sbb
lahf
jmp
and
mov
dec
xlat
mov
jmp
inc
int
xchg
out
inc
push
dec
mov
push
inc
pop
lcall
pop
xorl
inc
mov
psllq
aaa
out
pop
pop
jge
cmpl
sbb
pop
sbb
add
hlt
les
jbe
dec
jecxz
jg
jno
inc
bound
push
push
cld
in
dec
sarb
sbb
ss
stos
imul
shlb
push
adc
cmp
mov
ficoms
addr16
fwait
mov
popf
sub
loop
enter
push
ficomps
inc
mov
ret
jle
lea
mov
loop
and
mov
adc
sarl
sbb
repz
adc
jecxz
mov
out
xchg
add
cmpsb
and
cmp
cmc
or
mov
jnp
cmp
mov
jne
dec
mov
dec
outsl
xor
ret
mov
popf
dec
add
dec
dec
sbb
jae
cmc
movsb
sti
rorb
les
pop
das
fimuls
outsb
lahf
xchg
mov
fistps
out
pop
popa
lock
ficomps
cmp
loopne
push
jae
pop
dec
sub
repz
cmp
stos
push
sub
testl
inc
push
incl
mov
sbbb
mov
lahf
cmp
movsl
popl
mov
std
dec
ret
push
xchg
pop
cli
xor
inc
push
fwait
pusha
cmpsl
dec
inc
adc
into
dec
jne
cmp
cmp
jnp
arpl
les
push
xchg
idivl
and
mul
lods
mov
into
scas
cmp
mov
mov
repz
ret
jae
aas
mov
mov
std
jecxz
mov
sub
jb
lcall
repz
out
jns
cmp
imul
clc
add
out
and
xor
cltd
add
shrl
out
dec
in
dec
jne
xor
fcoml
mov
int3
mov
xchg
mov
adc
out
mov
imul
es
outsl
xchg
arpl
frstor
dec
sbb
pop
inc
xchg
cmp
stc
and
loopne
sarb
outsb
sti
fnstsw
cmp
les
scas
rorb
sub
or
popf
sub
add
sbb
je
mov
xchg
les
int3
inc
out
fxch
pop
xor
jne
sarb
das
ljmp
pop
dec
enter
dec
jle
mov
pop
fildl
mov
cmp
mov
sbb
mov
xor
mov
add
out
fidivrl
daa
jmp
lcall
imul
dec
push
mov
cmpsl
mov
mov
mov
mov
fistps
sbb
jge
test
xchg
mov
sub
mov
pop
popf
or
repz
adc
sub
adc
lahf
stc
cmpsb
sahf
push
stos
outsb
dec
lcall
mov
std
mov
sar
and
mov
fnstcw
repnz
sbb
mov
xor
inc
push
jge
mov
sub
and
cmpsb
xorl
das
and
js
ret
push
mov
mov
pusha
sub
mov
or
jae
in
jmp
ds
scas
push
dec
sub
dec
add
cmp
or
jnp
pop
inc
jo
repnz
pop
into
xchg
sarb
xor
call
xor
mov
fnsave
clc
cmp
inc
jp
lahf
cld
sub
es
xchg
sub
cmp
jp
in
xchg
or
pop
ja
mov
outsb
sub
jne
lock
add
shrl
inc
aaa
ret
out
mov
adc
mov
scas
addr16
dec
xor
stos
xor
mov
mov
imulb
sub
enter
je
adc
fnstcw
vorps
jle
rcrl
xor
dec
push
pusha
imul
aad
adc
add
popl
aas
dec
sub
ja
sahf
mov
mov
cld
inc
mov
lea
jns
adc
pop
int
movsb
out
sbb
repnz
adc
inc
scas
jne
daa
or
cltd
in
xor
scas
pop
aas
and
and
test
insl
pusha
push
cwtl
or
push
mov
adc
and
aaa
stos
jnp
xor
mov
jg
dec
cmp
out
fnstcw
and
inc
jno
jge
rcrb
adcb
add
sbb
popf
mov
scas
adc
jno
loope
cmpsl
pop
fwait
decl
xchg
pop
or
inc
outsl
pusha
jmp
fnsave
or
sub
or
andl
les
mov
push
and
fstpl
aad
mov
jno
adc
xor
scas
cs
jp
mov
in
xor
decb
fs
xchg
add
pop
out
mov
punpckhbw
sbb
test
cmc
daa
outsb
cwtl
jl
pop
repnz
adcb
cmp
sub
cli
clc
mov
inc
out
jl
test
test
pop
jns
xor
push
and
sub
add
lret
xchg
repz
lods
test
lret
movsl
mov
lret
loop
cmp
pop
mov
pop
mull
stos
adc
xor
pop
inc
sti
jbe
inc
jo
add
cwtl
int3
loop
idivl
and
sub
and
push
inc
mov
movsl
subb
xor
cmp
shlb
mov
mov
or
jne
pusha
stos
lcall
dec
adc
loop
jmp
fwait
jmp
adc
pop
mov
xchg
out
scas
fcmovne
in
inc
xchg
adc
cltd
sub
push
pop
mov
repz
cmp
movsb
mov
mov
enter
xlat
add
shlb
movsb
mov
ret
lods
cwtl
pop
notb
push
jb
lahf
push
addb
mov
sbb
ds
push
mov
xchg
enter
xchg
or
dec
ret
pop
icebp
inc
mov
jne
test
sub
mov
lret
loopne
adc
scas
out
push
adc
loope
mov
lods
addr16
mov
subb
sub
mov
push
dec
cltd
and
mov
cmp
sub
xchg
cwtl
push
aaa
hlt
dec
fwait
in
lahf
pop
xchg
xor
mov
test
cmp
test
fwait
pop
sbb
inc
lods
mov
les
mov
out
inc
sub
imul
aaa
sub
pushf
mov
mov
inc
and
cmp
push
cmp
out
out
push
mov
ret
lcall
jge
sbb
roll
sub
mov
mov
js
dec
repz
dec
jge
mov
add
inc
xchg
or
popl
rcl
pop
incl
ror
enter
sahf
fldl2e
mov
xor
test
mov
je
imulb
and
mov
jbe
cmp
mov
and
hlt
mov
jge
mov
adc
ret
adc
push
jge
fists
cmc
sub
push
jbe
dec
mov
fisttpll
neg
mov
shll
les
outsl
mov
and
xor
lret
mov
pop
push
mov
push
fs
mov
lcall
inc
hlt
out
loop
add
bound
jg
push
addl
mov
sbb
sbb
shlb
imul
inc
push
jge
mov
leave
imul
int
jle
or
outsl
leave
cmpsl
jbe
push
shrd
sahf
sti
adc
fildll
jne
fs
mov
adc
push
inc
xchg
ljmp
pop
jne
cwtl
mov
cmp
pusha
sbb
push
inc
mov
cmp
push
add
loopne
sub
arpl
jmp
mov
lods
mov
dec
mov
or
sarl
jo
pop
push
test
or
fdivrp
push
mov
scas
push
les
jnp
xor
or
or
mov
push
cmp
cmp
lods
jp
lods
inc
adc
das
jns
lea
dec
inc
sub
sti
enter
fistpll
sub
jg
iret
aam
inc
jo
xor
aam
mov
gs
mov
out
xlat
aam
push
mov
iret
dec
pop
into
arpl
in
mov
mov
shll
or
pushf
jns
subb
lret
xchg
sub
enter
push
pop
aas
cmpsb
ret
rolb
and
inc
mov
sbb
add
aaa
pop
jg
lret
ss
cmpsb
fs
sbb
mov
sub
inc
cmp
inc
add
ljmp
loop
xchg
shrb
adc
push
mov
into
or
mov
lahf
cltd
cmp
dec
xor
xor
mov
adcl
hlt
pop
or
mov
lds
arpl
adc
pop
sbb
fcmovnb
adc
cmpsl
mov
lahf
mov
mov
mov
leave
loop
in
cmpsb
adc
pop
xor
or
cmp
pop
arpl
jno
pop
jno
push
das
push
cmpsb
out
jg,pt
je
std
imul
mov
outsb
xchg
xchg
imul
loope
mov
rcl
fwait
xchg
mov
add
pushf
and
mov
push
sub
int
and
and
in
sbb
adc
jle
je
sbb
push
sub
aas
addl
hlt
in
mov
cli
mov
mov
ffreep
data16
bound
dec
stc
push
fs
pusha
aam
int
xlat
dec
cmp
std
lret
shll
loope
pushf
cli
or
jecxz
aad
dec
cwtl
inc
pusha
jo
sub
outsb
sub
pop
push
push
sub
cs
rclb
dec
ja
jmp
xchg
in
nop
popf
or
fld
cmp
and
lods
add
adc
pop
and
dec
mov
loope
cld
xchg
popf
jae
or
das
ds
aad
dec
ret
adc
mov
or
mov
aad
loop
out
xchg
mov
pop
push
es
addl
lock
sbb
out
adc
xorb
or
mov
test
xchg
sbb
and
push
call
aam
dec
repnz
cmp
dec
shl
testb
rolb
xchg
popa
mov
xchg
js
inc
adc
sbb
cmpsl
fwait
mov
ja
sub
pop
gs
cmc
xchg
add
and
adc
push
loopne
sbbb
fs
stc
inc
pop
push
movsl
ds
sti
and
les
stos
loope
pusha
mov
inc
mov
mov
nop
idivl
shlb
pop
push
push
pop
push
cmp
push
mov
scas
cmp
ret
in
dec
jae
ficoml
xchg
jecxz
iret
cmp
mov
pop
xlat
xor
mov
int
fmuls
imul
xchg
and
mov
lds
into
mov
mov
int
push
iret
push
cs
loop
lret
jns
xlat
rorb
push
insl
add
fmuls
cwtl
clc
aas
mov
imulb
aam
push
and
repnz
test
pop
and
mov
push
ror
aaa
rorb
test
movsb
mov
cmpsb
adc
movsb
enter
push
arpl
mov
movsb
mov
xchg
out
movsl
arpl
xchg
stc
jg
pop
sub
push
push
shlb
push
scas
push
sub
ds
sub
into
insl
cmc
cmp
fidivrs
mov
pop
hlt
xchg
insl
jnp
xor
adc
rorb
cmp
xchg
aad
cmc
aad
push
xor
mov
mov
arpl
dec
push
mov
iret
out
dec
add
fwait
adc
enter
inc
repz
lds
repnz
test
das
inc
int
and
arpl
ret
mov
jnp
inc
pop
mov
dec
int3
repnz
adcl
fnstenv
add
add
mov
fadds
in
dec
aas
aas
int
les
mov
fwait
nop
fwait
rorl
add
push
mov
out
jbe
adc
data16
clc
cmp
fcoml
int
cmp
xor
or
mov
or
rorb
ret
push
xor
lods
je
add
mov
adc
sbbl
cmp
std
mov
and
lcall
dec
or
push
mov
and
mov
inc
cmpsl
lret
xor
sbb
loopne
cld
or
xor
in
shll
xchg
add
cmp
push
nop
add
xor
aam
orb
push
xchg
xlat
stc
hlt
icebp
sub
push
push
jle
push
daa
pop
mov
pop
out
es
add
scas
mov
gs
imul
les
out
xor
ret
or
ret
pop
pop
lret
mov
dec
call
clc
movsb
push
int
loop
jle
mov
mov
xor
orl
mov
mov
mov
bound
jno
stos
jg
pop
enter
fbstp
mov
xchg
in
push
add
jp
pop
into
jns
add
pop
mov
stos
shl
std
pop
aad
lahf
mov
in
aam
sbb
icebp
pop
xor
xchg
gs
mov
je
and
mov
mov
sbb
sbb
loop
adc
lock
ret
xchg
xor
std
mov
mov
rolb
sarl
out
ja
mov
lods
scas
out
out
and
push
ja
fmuls
orb
mov
and
int3
shll
stos
mov
or
xor
adc
sub
sub
scas
dec
dec
cli
xchg
push
addb
fisubl
pop
inc
mov
sahf
pusha
fwait
cmpsb
pop
popf
jnp
mov
sbb
pop
cs
sahf
lahf
push
pop
xorb
dec
push
jmp
mov
out
test
sbb
pop
xchg
sub
mov
sti
jp
sub
scas
lock
push
jo
mov
dec
mov
mov
push
xlat
shll
adc
in
jnp
mov
xchg
mov
pop
stc
gs
aas
sar
dec
xor
pop
jg
into
ret
xor
mov
jl
mov
shr
dec
jmp
cltd
fs
cltd
add
mov
xor
pop
push
movsl
xchg
push
ljmp
fcoms
push
inc
clc
sub
jp
inc
stc
mov
inc
int
shlb
mov
call
mov
bound
sbb
adc
push
and
inc
push
outsl
popl
jl
mov
scas
movsb
xchg
shlb
popf
jmp
xor
out
lcall
cmpsb
mov
dec
bound
pop
sub
insb
and
mov
jecxz
negl
lea
test
inc
mov
sahf
sahf
fcmove
outsb
cmp
fisubl
icebp
sahf
mov
add
add
cltd
push
sti
lea
pop
shlb
subb
dec
cmp
fs
add
mov
inc
xchg
xchg
and
clc
ret
pop
mov
sbb
cmp
lahf
jno
xlat
fnsave
mov
loopne
daa
iret
or
jge
pop
inc
mov
negl
push
or
sub
outsl
mov
xchg
jge
cld
inc
pusha
xor
inc
cld
jnp
dec
popf
jmp
cwtl
aaa
int3
sbb
push
sub
jmp
pop
mov
push
mov
xlat
in
ja
mull
adc
into
in
sbb
inc
cmp
fimull
xchg
xor
inc
cld
scas
ret
mov
gs
es
xor
rcrl
or
adc
fmul
add
or
scas
dec
mov
movsl
sbb
xchg
outsb
data16
jge
lret
jno
adc
jne
sub
pop
cmpsb
add
add
and
or
ljmp
cltd
lds
arpl
adc
andl
ds
mov
scas
lods
add
movsb
inc
rcrb
outsb
pusha
add
stos
mov
scas
mov
fcmovu
pop
push
fcoms
pop
shll
ja
cmp
aam
insl
test
mov
adc
cwtl
cmpb
dec
jg
and
push
lds
sub
imull
xor
scas
jmp
loop
insl
inc
sub
push
sub
mov
stos
pop
sbbl
loopne
test
mov
sbb
inc
pop
jne
ret
pop
pop
dec
lahf
jmp
mov
ss
outsb
mov
scas
lcall
out
cmpsl
mov
in
jmp
cld
leave
imul
xor
mov
mov
pop
pop
cmp
push
add
xor
push
pop
icebp
fidivrl
add
call
or
pop
push
pop
fstpt
xor
xchg
fwait
in
dec
or
jp
scas
push
mov
sub
mov
mov
imul
and
cmc
adc
lods
mov
mov
push
or
pop
xchg
mov
xor
and
and
add
popa
in
mov
cmp
imul
push
push
cmp
out
repz
lahf
aas
insl
scas
fucomip
mov
jns
leave
xor
gs
outsl
in
pop
add
adc
mov
jo
out
sbb
mov
push
mov
cmc
add
clc
sti
mov
leave
lcall
sub
or
push
cld
sbb
popa
orl
cmp
jne
sub
cmp
xor
inc
dec
dec
cmc
mov
inc
je
xchg
sbb
xor
and
in
sub
dec
push
jl
xor
cs
push
repnz
mov
pusha
aas
cmc
pop
ret
sbb
fprem1
sahf
xchg
test
mov
adc
fisubl
push
ss
jge
inc
sbb
enter
std
fsts
pusha
xchg
dec
mov
mov
and
js
rcll
push
xchg
jl
les
in
fcmovbe
or
sub
xchg
fs
clc
push
shl
xor
push
test
lahf
mov
jbe
test
inc
fistps
jae
lcall
pop
ret
test
movsb
mov
aam
push
sub
jne
mov
test
jg
and
jle
test
cmpsb
loope
int
jbe
pextrw
aaa
xchg
fs
mov
rcrb
mov
lods
bound
gs
fimull
pusha
es
int3
pushf
add
mov
rcrb
in
dec
xchg
arpl
into
stos
scas
rcrb
xchg
loop
gs
inc
loop
ljmp
add
aas
mov
arpl
cmp
in
lcall
push
cmp
and
mov
scas
fwait
mov
xchg
push
in
addr16
cs
sub
or
fists
pop
jecxz
mov
xlat
icebp
inc
xor
mov
sub
rcr
and
je
cmpsb
jl
or
jge
and
sub
mov
push
inc
dec
shrd
ljmp
stc
fcmove
add
fneni(8087
push
fisubs
inc
sbb
sbb
movsl
out
addr16
jmp
jae
fbstp
leave
mov
pusha
xor
fstl
inc
push
xchg
arpl
pop
or
dec
xchg
daa
cli
cmpsl
fucomi
pop
or
loop
push
pop
sbb
mov
enter
fimuls
jbe
pop
adc
iret
pop
inc
xchg
xchg
fsubrl
mov
xlat
enter
add
ret
scas
lds
ret
sahf
or
test
lcall
call
inc
out
inc
sbb
cmp
clc
ja
push
xlat
out
testl
xor
sub
xorl
jmp
sub
adc
sub
cwtl
outsl
jmp
jne
les
mov
cmpsl
jl
mov
sahf
call
jbe
inc
push
rcl
mov
pop
adc
mov
or
adc
add
inc
les
cmpsb
jne
fdivrs
mov
faddl
fistpl
jg
inc
stos
ficoml
mov
iret
sub
popf
sbb
xor
and
test
mov
mov
push
lods
and
into
ret
mov
inc
xor
jp
cmp
mov
push
xchg
mov
daa
sbb
ljmp
stos
outsl
adc
adc
sbb
insl
inc
loopne
lcall
push
pop
stos
push
test
mov
adc
stc
lods
xchg
and
fisubs
fsubr
mov
cmp
js
dec
icebp
lock
ret
fwait
add
mov
mov
push
and
mov
outsb
mov
jbe
cmp
test
int3
xchg
popl
test
inc
int3
push
inc
ficompl
mov
mov
pop
subl
jb
sbb
lds
jp,pn
add
mov
xorb
dec
jp
pusha
fs
aam
cwtl
dec
mov
fxch
pop
cli
cmc
shll
dec
adc
xchg
pop
ja
push
inc
aas
pop
insb
sbb
add
cwtl
cs
aas
mov
jmp
aad
loopne
insl
xchg
mov
or
sub
fucomp
hlt
add
or
imul
pop
lret
test
xchg
cmp
mov
pop
repnz
adc
sahf
rorb
fsubrl
xor
pop
mov
inc
loope
jmp
imull
lret
leave
mov
movsb
sbb
cmp
sbb
mov
imull
add
hlt
jae
xor
fisubrs
pop
mov
sarb
mov
pop
arpl
sahf
stc
mov
pop
lahf
movsb
test
mov
cmp
lods
stos
iret
or
int3
xchg
in
jp
cmpsl
push
add
and
test
les
out
xor
jo
popa
loope
xchg
push
fs
jns
sti
xor
call
sbbb
roll
lcall
sub
bound
xchg
push
mov
xchg
lahf
jp
pop
test
mov
outsb
mov
mov
or
push
push
push
push
or
inc
cmp
rcl
jns
mov
cmp
mov
insl
lods
cmc
push
bound
pop
push
ret
add
sbb
dec
addl
outsb
cmpsb
dec
loop
and
aam
stos
pop
lcall
jb
dec
lds
aad
test
dec
lea
imul
mov
cmp
xlat
mov
aaa
mov
mov
pusha
push
cwtl
ret
outsl
test
xor
jp
insb
arpl
fists
std
mov
dec
xchg
xchg
xchg
addr16
xlat
xchg
icebp
mov
js
clc
daa
or
ret
mov
lock
inc
cmp
dec
bound
and
xchg
lock
inc
test
add
cmp
out
sbb
push
addl
scas
cmp
divl
movsl
adc
cmp
push
xor
push
jnp
mov
fs
mov
xchg
adcl
loop
enter
or
das
jns
sbb
je
loope
mov
xor
fs
cs
test
push
push
call
push
inc
cmp
adc
dec
lods
pop
das
mov
loop
outsb
out
adc
mov
call
insb
jae
mov
or
add
aad
popf
mov
cwtl
ljmp
dec
sub
ja
js
shr
ret
pop
jb
or
inc
lret
dec
lea
sbb
mov
testl
popa
push
mov
sbb
call
int
out
pop
rcrl
cmpsl
loope
daa
mov
call
xlat
sub
inc
and
mov
push
fcom
sub
mov
adc
pop
inc
mov
and
mov
or
dec
mov
cmp
dec
repz
cmpl
faddl
jns
mov
adcl
xor
jmp
outsb
loop
xor
pop
cmp
pop
mov
in
dec
mov
into
jbe
mov
push
inc
stos
or
and
ror
pop
js
pop
insl
cmc
sar
call
fdivs
loope
cli
inc
xor
aaa
jne
rorl
ret
andb
inc
imul
dec
pusha
mov
cmpsb
sbb
ja
in
pop
movsl
mov
sbb
clc
and
sub
mov
out
out
and
iret
inc
bound
fnstsw
ss
xchg
icebp
xchg
mov
fidivrs
out
lds
sub
pop
ljmp
cmp
arpl
push
or
jbe
push
test
test
mov
sub
mov
xor
pop
cwtl
mov
loop
mov
xor
mov
popf
push
mov
mov
ja
fdiv
lret
ss
data16
jge
mov
ret
sbb
dec
fstps
mov
rcrb
nop
ja
test
jle
fs
idiv
fwait
adc
and
and
mov
mulb
pop
mov
scas
loop
xlat
rcrb
and
fcmovne
xchg
xchg
dec
or
mov
ffree
mov
loopne
adc
enter
out
pop
adc
jl
xchg
xor
pop
mov
adc
mov
out
leave
lds
call
notl
loope
test
pusha
push
inc
mov
in
sub
mulb
mov
lods
pop
test
adc
xor
xor
popf
pop
fs
aad
aad
jbe
test
clc
jmp
pop
jne
sbb
lret
outsb
mov
repz
cmp
mov
mov
sbb
test
mov
aad
and
inc
jne
aas
xor
test
cmp
push
dec
sub
aas
loope
das
cmpsb
div
or
fnsave
add
ds
adcl
adc
in
fwait
jle
arpl
mov
loope
mov
pusha
adc
push
and
loop
xor
scas
jp
mov
call
mov
fcomp
pop
out
clc
mov
aaa
cld
add
mov
xchg
push
mov
xor
fwait
imulb
loop
cs
sbb
xadd
adc
dec
cmp
std
jle
cltd
jo
fcmovb
loopne
test
fisttps
outsl
jnp
fwait
imul
jb
in
mul
mov
pop
mov
scas
sbb
test
sahf
sahf
fdiv
sub
xchg
loop
stos
mov
pop
or
or
push
mov
addb
outsl
nop
cmp
insb
imul
aas
push
pop
mov
stos
sbb
xor
test
rorb
or
jns
inc
pop
adc
jb
xor
loopne
cli
jbe
mov
out
sbb
and
test
gs
movsb
inc
push
std
xor
cwtl
jp
jmp
xchg
es
adc
jg
pop
mov
cmp
adc
sub
jae
insb
rcll
sbb
xchg
cmpsl
ret
outsl
in
mov
pop
pop
pop
push
cmpl
scas
inc
mov
lock
jp
data16
adc
setbe
in
popa
mov
mov
pop
lcall
stos
out
inc
adc
pop
sahf
xchg
sbb
jle
shll
int3
jmp
push
test
sarb
iret
sub
mov
mov
sub
repnz
inc
and
mov
mov
push
cli
pop
fs
aad
clc
mov
mov
sbb
loop
push
push
dec
mov
jae
mov
out
cmp
jp
punpckhdq
add
mov
imull
cmp
lods
rcrl
mov
mov
cmpsb
daa
mov
mov
ds
cmp
mov
stc
jp
jmp
outsl
jb
dec
dec
sbb
bound
sbb
push
test
mov
mov
shr
divl
stc
mov
shll
insl
std
mov
fmuls
mov
jns
or
leave
loopne
insb
sbb
fimull
jg
xor
pushf
pushf
mov
cld
dec
push
push
xchg
fdiv
jnp
scas
into
mov
sahf
and
or
repz
imul
mov
out
inc
or
or
out
inc
xchg
and
jnp
mov
outsb
lret
push
cmp
dec
popf
scas
fsubrs
add
add
jp
test
and
loope
xchg
jo
mov
aas
xor
push
jnp
ja
orl
mov
orl
jl
inc
mov
xor
xchg
or
dec
mov
aaa
xor
jno
movsl
adc
jmp
jbe
or
fdivrs
cmp
mov
jb
sarl
jo
sub
outsl
push
mov
inc
push
int3
adc
add
mov
insb
pushf
inc
dec
sarl
push
push
push
adcl
xchg
fimull
cltd
enter
inc
sti
inc
in
fstl
movsb
xchg
sti
xchg
mov
bound
jmp
lock
mov
xor
push
xchg
jae
or
inc
lahf
imul
pusha
jne
into
cmpsb
or
fadds
addr16
ret
rclb
iret
dec
pop
jl
add
js
jns
lahf
out
mov
cmpb
lds
push
scas
or
fisttps
ret
push
push
xchg
sub
fwait
out
fdivs
scas
int3
sahf
add
adc
out
and
mov
in
cmpb
shll
movsl
mov
pop
fwait
pop
inc
cltd
push
lds
push
inc
jmp
hlt
jg
sub
xor
and
fnsave
xchg
inc
es
shl
mov
pavgw
cmp
add
mov
jbe
std
imul
push
roll
lock
shl
js
add
xor
sbb
lret
addb
xlat
and
xchg
sub
adc
nop
push
cwtl
mov
mov
xchg
push
push
dec
outsl
ss
sub
mov
cmp
pop
nop
push
and
enter
fldl
fsubrs
mov
cltd
cli
lock
inc
xor
adc
sbb
push
and
rcl
pop
repz
sahf
jb
mov
and
add
add
dec
fs
xchg
cwtl
push
mov
mov
int
pop
mov
xchg
sbb
arpl
jle
cmp
push
in
loope
pop
inc
adc
push
mov
adc
and
sub
loop
addb
shrl
loop
pop
aad
pop
ret
xchg
loope
mov
pop
xor
xchg
int
pop
popa
idivl
inc
cld
ss
mov
jns
ljmp
dec
inc
sbb
adc
pop
push
in
and
dec
shrb
sub
sub
pop
push
roll
mov
lret
mov
pop
adc
mov
aas
inc
jns
mov
pop
lock
or
lods
and
add
mov
test
lahf
out
iret
js
cmc
mov
or
outsb
in
rolb
xchg
popf
cmp
std
dec
repnz
scas
pop
es
jb
jecxz
jo
dec
popa
and
xchg
push
imulb
xchg
pop
ficoml
xchg
cmc
dec
enter
pop
jge
jo
test
gs
incl
popf
fwait
clc
mov
cmp
add
bound
clc
cmp
dec
rcl
push
rclb
pusha
add
inc
inc
movsb
add
cmp
jle
pop
popa
xchg
mov
xor
jl
inc
push
push
mov
sahf
fnstsw
add
cmc
add
sbb
ja
or
mov
ss
xor
shll
xchg
ljmp
and
mov
jmp
pop
daa
and
xchg
ret
int
daa
outsl
je
or
loop
mov
adc
pop
jle
or
test
hlt
jo
movsl
movsb
imul
cmp
movsb
jp
ss
ror
jae
jae
dec
sahf
subb
dec
cwtl
imul
in
mov
shrb
js
lods
ret
jle
push
mov
pop
insl
and
stc
lds
fnclex
push
push
insl
sbb
insb
lret
inc
in
jmp
test
mov
aad
mov
js
xchg
sub
add
jecxz
andb
mov
inc
hlt
insb
inc
repz
push
cld
imul
js
or
add
mov
nop
pop
in
mov
mov
clc
mov
jbe
sahf
push
pop
lock
jle
jp
repz
sbb
and
imul
fdivs
cmp
jecxz
dec
xorl
sub
add
and
lds
xchg
jge
mov
mov
roll
dec
fcompl
outsb
adc
inc
test
cmc
movsl
out
dec
pop
call
sbb
xor
js
mov
jecxz
and
jmp
jae
cltd
mov
adc
inc
hlt
xlat
stos
iret
mov
cld
ficompl
int
add
sbb
dec
cmp
movsl
lods
mov
repz
movl
es
cwtl
icebp
sbb
xchg
push
arpl
sub
mov
mov
je
add
xchg
stc
cld
test
mov
fwait
mov
push
adc
jge
mov
jp
push
inc
lret
lods
pop
mov
js
nop
call
xchg
mov
jmp
jmp
inc
cmp
int3
fcmovb
stos
notb
xor
xorb
or
mov
sbb
add
ds
push
push
add
shlb
rclb
addr16
jo
jo
mull
imul
sub
es
aaa
cld
and
das
pop
mov
mov
fs
popa
cmpsl
and
add
sahf
inc
push
popf
cmp
jmp
andl
push
sbb
pop
ja
inc
insb
std
mov
or
dec
cmp
xor
mov
out
inc
mul
aam
addr16
inc
imul
jno
or
aad
loopne
lods
pop
push
pop
mov
stos
pop
cmp
ljmp
ret
lods
mov
gs
or
cld
adc
adc
jmp
ds
mov
dec
xchg
imul
jno
addb
pop
mov
cmp
inc
push
adcb
push
mov
aad
push
cmp
jno
fst
push
fwait
subb
sub
enter
mov
pop
push
jno
testb
jnp
fildl
xor
and
leave
mov
daa
xorl
xor
dec
or
enter
add
xor
jle
divb
inc
stc
imull
gs
mov
or
cmpl
lcall
cmp
out
lods
sar
push
aad
push
mov
jl
outsl
mov
cld
add
cltd
lret
sub
jle
mov
jb
and
in
jecxz
jmp
outsl
popf
insb
xchg
add
xchg
dec
xchg
shlb
lret
or
pop
sbb
pop
jae
push
in
mov
mov
or
mov
inc
inc
or
hlt
jnp
sbb
pop
ret
icebp
xor
ret
dec
scas
sahf
inc
jl
and
ljmp
or
pop
push
xlat
add
xor
roll
sbb
jecxz
cld
imul
push
sbb
adc
push
add
add
jnp
loopne
sbb
inc
hlt
and
jge
mov
into
add
out
imul
int3
sbb
cmpsb
mov
adc
and
dec
dec
jnp
orb
call
xor
fstps
scas
xor
fwait
inc
and
xchg
push
adc
imull
cltd
stos
lds
inc
dec
in
adc
mov
push
ficomps
out
arpl
lahf
shll
sub
adc
mov
jne
pop
das
xchg
and
lret
mov
lret
sahf
stos
sarb
scas
sub
sbb
movsl
dec
into
mov
push
stc
mov
dec
std
mov
mov
iret
test
dec
inc
mov
xchg
shl
add
aas
pop
add
mov
aaa
pusha
call
mov
cli
movl
xchg
adc
bnd
push
xchg
inc
jle
jno
mov
adc
push
add
repz
pop
cltd
pop
sub
inc
lahf
or
pop
enter
sar
push
in
mov
pop
mov
adc
inc
inc
jb
imul
pop
jb
loopne
test
push
cmpsl
icebp
mov
jno
jmp
ret
js
mov
shrl
out
dec
test
fucomi
mov
fwait
out
jnp
ja
sar
mov
ds
ss
add
mov
mov
pop
inc
jl
in
test
call
aam
or
push
xchg
shrl
and
dec
packuswb
mov
or
je
pop
inc
mov
push
nop
cmp
cwtl
mov
lods
xlat
icebp
jl
xchg
movsl
jbe
jg
push
jge
push
mull
pop
cmp
sub
gs
cmpsb
adc
cmp
adc
outsl
sub
push
sbb
repnz
cltd
dec
adc
add
shlb
data16
out
push
mov
mov
add
add
pop
scas
pushf
cmp
mov
cmpsb
pop
pop
lea
insl
mov
jnp
mov
lods
add
mov
adc
test
out
or
je
push
int
in
aas
sub
fucomi
push
scas
dec
test
cmp
add
enter
push
dec
pop
jbe
scas
xor
test
push
mov
sbb
jb
jecxz
sbb
aad
fnsave
cmp
pop
lret
clc
xor
fdivrs
int3
lock
lcall
in
in
adc
shufps
mov
push
imul
mov
dec
mov
lret
mov
xor
gs
mov
ss
jb
mov
popa
fdiv
adc
sbb
or
xchg
push
shl
push
push
lcall
mov
mov
sahf
or
mov
jns
mov
mov
jge
ficomps
push
pusha
sbb
iret
pop
add
insl
scas
mov
and
sub
mov
repnz
mov
aad
mov
sub
xchg
ds
nop
and
ret
or
mov
gs
mov
xor
jle
lcall
mov
pop
movsl
mov
dec
imul
adc
and
int
nop
jg
fildll
cmc
xor
push
sahf
scas
leave
pop
pop
ret
add
int
sub
sbb
fistpl
popa
popa
add
xchg
push
xor
xor
sub
cltd
movq
call
psubd
xor
mov
repz
pop
adc
pop
mov
and
push
int3
or
inc
pop
das
mov
sbb
xor
shrl
mov
shlb
cwtl
jae
adc
loopne
jge
sub
cmpsl
sahf
fnstenv
movsb
xlat
cmp
outsb
sbb
mov
fiaddl
adc
fisubrl
test
inc
js
fildl
or
pushf
clc
call
pop
cmp
lcall
ret
imul
sbb
pop
out
adc
lods
daa
imul
push
pop
popa
jo
loop
pop
dec
xchg
stc
push
imul
sub
push
and
push
adc
les
push
and
adc
out
add
mov
and
int3
nop
pop
inc
bound
cmp
in
pop
fists
inc
push
cmp
cld
test
dec
xchg
aad
clc
adc
xor
push
add
dec
ljmp
sub
mov
sahf
jle
in
push
lock
dec
aaa
cld
imul
xor
or
loope
scas
inc
test
lods
fdivs
xlat
sti
jecxz
cmpsb
mov
lcall
lahf
cmp
inc
outsb
cmp
xchg
sub
or
fidivrs
icebp
sub
inc
xor
or
or
xchg
push
pop
adc
pop
mov
mov
pop
push
bound
popf
pusha
sbb
pop
cmp
fisttpll
adc
inc
push
cmp
pop
sbb
in
repz
lahf
adc
loopne
pop
gs
aaa
in
js
sbbl
repnz
fmuls
gs
in
push
push
ds
out
adc
push
mov
test
and
jge
les
inc
jae
jae
or
in
lods
sub
repnz
test
rclb
mov
sub
lock
and
adc
into
sub
jbe
push
imulb
and
in
mov
mov
and
and
sub
leave
aas
fcomps
push
sub
sub
imul
push
mov
decl
pop
ja
mov
jbe
sub
nop
in
les
arpl
cmp
dec
cmp
mov
js
fidivrl
add
pop
out
jp
inc
pushf
adc
jae
das
dec
aam
in
pop
mov
ja
xchg
call
or
lods
imul
ljmp
add
jae
pop
xor
jo
xchg
sub
jg
iret
lods
lods
mov
sub
or
in
cli
mov
or
fisttpll
insb
jne
loop
scas
mov
inc
addb
cltd
cld
mov
push
notl
repz
and
cmpsl
dec
rol
ja
pusha
dec
sbb
xchg
call
add
xor
arpl
pusha
cmc
call
sbb
stos
mov
inc
mov
dec
mov
lea
repz
in
jnp
les
mov
int3
mov
ds
mov
inc
cmp
jnp
and
in
push
jmp
jne
int3
jmp
scas
inc
out
fyl2x
mov
test
repnz
sub
popf
sub
out
cmpsb
push
push
jnp
mov
jb
cs
test
inc
data16
pop
nop
insl
lock
mov
repz
add
sbb
test
js,pt
add
int
dec
mov
test
icebp
dec
dec
push
repz
pop
imul
repz
cli
and
repnz
dec
inc
aas
insb
pop
icebp
lock
je
into
pop
cmp
lahf
adc
cli
push
movsb
nop
xchg
shr
and
xor
lods
cmp
stos
aas
lods
scas
clc
mov
add
jmp
add
mov
mov
mov
aad
incl
scas
jne
ftst
lahf
es
lahf
dec
fldenv
hlt
xchg
cmp
push
push
xchg
nop
scas
jb
sub
push
inc
test
fs
dec
mov
jle
sbb
sbb
add
mov
das
dec
test
cmpsl
pop
sbb
jae
xchg
mul
jbe
lods
mov
shrb
sub
daa
dec
jp
inc
lcall
sbb
repz
lods
jl
sub
adc
cmp
ds
repz
fs
jae
cmp
xor
or
push
cmp
pusha
movsl
xchg
cmc
mov
dec
pop
imul
adc
adc
in
dec
adc
imul
movsb
ret
adc
push
fmul
push
pop
jge
mov
mov
xor
cs
sarb
inc
frstor
decb
sub
or
jno
xchg
icebp
mov
int3
adc
add
mov
sub
cmp
jl
dec
iret
and
fisttpl
out
push
fs
movsl
mov
lock
jns
lea
mov
test
pop
add
stc
push
sub
fstpt
cs
lcall
cmp
daa
push
int3
or
pop
jg
adc
fcoml
push
xor
rorl
outsl
fs
jge
jns
cltd
stc
outsb
aad
shl
lods
dec
dec
ljmp
insl
lds
pop
jns
outsl
aad
inc
mov
mov
stc
test
iret
mov
movsl
das
aad
add
cmp
push
and
push
push
push
je
add
insl
aam
pop
leave
lcall
arpl
xor
push
addb
test
ret
repz
jbe
gs
sub
jl
loopne
mov
push
xchg
fwait
insb
leave
sub
pop
push
push
pop
loopne
imul
push
pop
mov
dec
in
lock
lods
out
ljmp
adc
fwait
ss
push
dec
ljmp
fwait
lods
add
and
in
jnp
insl
stc
jl
hlt
sub
subb
adc
pop
adc
ljmp
fistl
or
push
sub
sbb
out
aad
test
and
popa
lock
pop
jmp
xchg
les
ljmp
pop
mulb
mov
push
inc
add
sub
lods
push
sti
loop
mov
jne
int3
sbb
aas
ss
out
mov
and
shrl
and
inc
jge
inc
mov
rolb
adc
push
sub
inc
mov
mov
jae
push
imul
push
xchg
call
subl
add
movsl
sbb
out
or
xchg
movsl
dec
std
test
mov
xlat
fdivrl
inc
cltd
xchg
and
sbb
sub
inc
lret
xor
and
xlat
ljmp
fadds
std
sbb
and
mov
je
push
vmread
mov
add
aad
pop
sbb
pop
test
cltd
lods
xchg
out
jns
pop
lods
add
sub
pop
fucomi
dec
jcxz
jmp
stos
add
repnz
mov
mov
xlat
out
sbb
movsl
icebp
fimull
mov
jns
push
adc
pop
sbb
mov
add
enter
mov
aad
ffree
xchg
xchg
push
add
push
push
stc
push
jg
jnp
pop
sub
arpl
sub
in
dec
mov
xchg
test
sbb
pop
xor
stc
imul
mov
clc
inc
addb
mov
xchg
dec
xchg
xor
stos
jle
jb
jle
sti
out
es
sbb
cmp
stos
in
mov
mov
dec
jb
xchg
sub
pop
std
mov
cmp
addr16
test
inc
dec
pop
lods
mov
stos
lcall
test
mov
repz
in
popa
mov
push
cmc
inc
sbb
push
sbb
jp
mov
test
cmpsb
jmp
testl
aaa
xchg
bound
xchg
xchg
push
sbb
mov
inc
jmp
std
jg
daa
cmc
stc
loop
inc
jl
mov
pop
sti
mov
fcmovu
dec
add
mov
hlt
enter
fistpll
xchg
mov
pop
dec
lea
add
sbbl
cmpsl
jb
jno
cmp
test
push
sub
lret
or
push
pop
mov
hlt
nop
daa
aam
dec
out
and
adcl
xchg
xchg
push
and
cmp
cmp
cmc
cwtl
or
scas
adc
int3
cltd
pop
mov
insb
jmp
loope
cmp
loop
popa
loope
jp
in
fcoml
movsb
fs
mov
test
xchg
pop
int3
xor
and
and
xchg
push
fstps
dec
mov
int3
inc
adc
mov
inc
shll
pop
addl
daa
sub
orb
loopne
aaa
adc
enter
icebp
xchg
cmpb
xor
pop
pop
pop
mov
add
out
push
xchg
or
aam
mov
test
cmp
adc
add
push
stos
mov
and
xchg
push
scas
xor
inc
mov
add
mov
mov
xor
out
xor
mov
cli
ss
int3
push
data16
pop
xor
clc
imul
mov
in
stc
jge
sub
adc
adc
fwait
shlb
xchg
cmp
icebp
mov
aad
cmpsl
push
push
mov
xchg
call
js
imul
into
pop
int3
mov
repnz
lret
dec
out
insl
mov
js
pop
pop
mov
mov
mov
cmp
addr16
adc
jl
or
jbe
add
cld
flds
xor
imul
jl
pop
rcr
add
pop
pop
dec
sbb
fstp
test
adc
and
sub
and
outsb
sub
out
mov
int
mov
aas
xor
jmp
dec
icebp
mov
and
push
movsl
stos
push
test
lret
and
dec
jg
and
lods
rorb
mov
roll
jge
add
addb
and
push
nop
jle
jg
mull
xchg
out
cmc
cmc
or
rclb
jmp
mov
sti
xor
and
xchg
ficoml
call
jno
les
loope
sarb
scas
cmp
mov
mov
mov
insb
adc
stc
int3
xor
or
ret
dec
mov
push
stos
sbb
cmp
and
aas
ud0
imul
xor
xor
dec
xchg
or
mov
sbb
cmp
lea
sti
dec
xor
xor
jge
mov
mov
jle
cmpsb
or
test
in
jg
xchg
xchg
xchg
jae,pt
push
pop
fs
outsb
cmpl
adc
jmp
push
sti
or
hlt
jns
add
imulb
jo
sti
push
in
sub
pusha
fldl
push
mov
mov
insl
jecxz
inc
cmp
xor
push
cltd
aas
lahf
fisubrs
mov
insb
cmp
add
push
adc
dec
fisubl
dec
call
out
xor
inc
inc
fs
ret
int3
popa
or
dec
in
dec
inc
mov
sub
notl
imul
aam
xor
or
fdivrs
loop
lods
mov
pop
ja
mov
sub
and
lret
sbb
push
rclb
lret
pop
loop
xlat
fnstsw
repz
test
clc
pop
cmp
lock
mov
dec
sub
jns
outsl
test
and
mov
cs
sahf
pop
and
xor
rcrb
lret
movsl
lret
mov
and
test
divb
lea
and
xchg
shlb
mov
sbb
in
or
imul
popa
xchg
mov
mov
lea
mov
gs
lock
lret
add
scas
imul
stos
mov
aam
out
push
or
jmp
push
sbb
or
stos
stc
xchg
jle
nop
es
push
out
icebp
and
xor
jns
mov
rcll
sub
push
fcmovne
fiadds
mov
lea
sbb
not
cmc
mov
cmp
inc
sub
leave
fstpt
es
or
and
jge
push
jg
imul
sub
out
aaa
out
in
imul
leave
push
test
or
push
hlt
hlt
icebp
pop
mov
bound
pop
aaa
ds
lret
je
adcb
pop
xchg
xchg
add
lret
xor
dec
pop
test
fnsave
out
scas
dec
loope
and
push
mov
sub
xchg
aam
lcall
mov
push
pop
push
mov
js
shlb
push
inc
sbb
or
fdivrl
mov
call
pusha
xchg
pop
xchg
mov
je
ss
aad
lret
cmp
mov
push
hlt
mov
xchg
js
xchg
sbb
push
xchg
adc
stos
mov
fucomp
and
cmc
inc
add
loop
lret
jnp
push
mov
adc
adc
int
mov
cmp
add
or
push
push
cmpsb
sbb
jp
test
inc
mov
mov
fimuls
cmpsl
inc
movsb
cmp
int
mov
inc
cli
and
movsb
or
mov
stos
push
inc
sbb
idivb
mov
cmp
insb
notb
and
pop
cmp
movsl
popf
stos
dec
xchg
movsb
repz
rclb
cmp
in
lcall
jne
push
sub
mov
cltd
mov
jb
jg
adcl
cli
aas
sbb
or
test
je
or
mov
xlat
test
inc
lods
lahf
mov
mov
xchg
xchg
or
or
and
movl
in
cmp
jl
mov
inc
je
out
xchg
gs
sbb
cmp
test
xchg
in
mov
fsubrp
and
cmp
mov
dec
movsb
daa
pusha
cmc
xor
mov
adc
mov
in
cmpsl
iret
repnz
sub
pop
es
loopne
sbb
xor
and
pushf
dec
push
xchg
aas
call
arpl
lock
popf
adc
lods
adc
cld
daa
xchg
mov
mov
loope
cmpsl
or
lret
pop
popa
add
inc
loopne
test
mov
das
and
in
mulb
int
mov
cmc
sti
lds
jnp
jno
lea
mov
mov
sub
ret
dec
scas
xchg
sub
jg
mov
pop
add
call
pop
cli
push
mov
mov
jno
and
lods
push
mov
xchg
mov
xlat
sbb
xor
xlat
jg
addr16
pop
popa
fimuls
iret
shll
push
outsb
mov
add
rcrl
mov
add
inc
cwtl
mov
jge
into
sbb
mov
sarb
xor
stc
jg
sarl
fdivrl
dec
popf
cltd
and
mov
mov
inc
xchg
popa
sbb
into
mov
and
div
mov
mov
inc
fcompl
mov
or
ret
pop
cltd
test
outsl
mov
loope
xchg
pushf
je
arpl
add
insl
xor
dec
inc
jnp
add
push
mov
add
mov
dec
xor
inc
adc
pop
sbb
mov
mov
scas
sub
cmpsb
dec
jecxz
mov
push
ret
pop
dec
pop
enter
and
push
ds
mov
pslld
scas
cld
insb
cmp
mov
jae
pusha
mov
aam
add
pop
sbb
test
jae
ret
inc
jnp
orb
mov
xchg
mov
ret
mov
adc
jo
popa
sub
xchg
sbb
xor
add
mov
popf
add
push
push
lock
mov
dec
pop
mov
aaa
and
mov
mov
add
mov
fiadds
and
scas
into
in
bound
push
mov
push
repnz
xchg
movsb
cmp
lret
shll
push
xlat
insb
out
fwait
sub
pop
repz
adc
dec
test
arpl
mov
flds
in
sub
dec
aas
jae
lea
inc
sub
push
cmp
outsl
psubsb
pop
dec
xchg
add
pop
lsl
int
std
add
cmp
or
dec
js
inc
mov
fbstp
fcmovnu
stos
xor
or
push
push
rolb
test
xchg
lret
push
cmp
es
pop
fiaddl
xor
mov
bound
cld
cli
mov
cwtl
jb
cmpsl
push
das
mov
jno
jge
loopne
lods
inc
cmp
inc
xchg
popf
daa
cmp
in
test
out
adc
iret
addr16
mov
inc
dec
movsl
inc
or
xor
call
push
fs
fs
imul
out
in
cltd
jno
or
push
lds
cld
mov
mov
adc
sub
es
movsb
lods
clc
aaa
fmulp
rcrl
hlt
shll
mul
dec
sar
cmp
add
in
andb
dec
mov
xchg
or
fwait
xor
inc
cmc
call
in
ret
ror
ret
jmp
cmp
xchg
pop
sbb
fadd
adc
in
rep
cltd
mov
or
sub
cmc
rorl
sti
pop
sbb
ret
pop
call
adc
push
mov
outsl
and
fstl
insl
aaa
pop
rol
mov
ret
dec
pop
mov
test
fsts
enter
adc
pop
lcall
ficoml
jno
fs
push
pop
addr16
push
mov
cmc
add
aam
fdivrs
jl
andl
push
icebp
mov
sub
loope
js
in
mov
or
dec
in
add
and
clc
dec
or
dec
add
lret
in
jb
inc
add
call
jbe
decb
lcall
xchg
insl
xchg
das
cli
lods
inc
and
or
out
xor
push
and
xchg
lret
insl
fcomps
jb
aam
sub
xchg
mov
and
mov
fldcw
inc
or
imul
js
xlat
sub
cmpb
jb
mov
fistps
xchg
sbb
es
and
mov
inc
sub
paddq
push
cli
out
jb
jae
out
jo
lcall
lods
bound
aad
push
repz
mov
fistl
xor
std
push
jmp
sbbl
cmp
movsl
fsts
inc
lcall
das
in
and
loopne
push
xorb
push
mov
inc
jle
xor
daa
adcb
jl
mov
shr
sbb
pusha
inc
fucomi
subl
das
rorb
test
sub
out
sbb
sub
cmp
jl
and
call
fwait
sub
nop
cld
bound
fsubrl
jnp
cmpsb
div
pop
lds
xchg
cmpsb
sub
mov
cltd
lret
cli
jo
stos
push
clc
popa
and
inc
xchg
pop
out
rcll
dec
ss
xchg
jno
aas
jecxz
loope
loope
and
push
mov
mov
data16
sarb
add
ljmp
stos
je
or
mov
pushl
push
data16
or
arpl
cli
jmp
imul
mov
shl
lea
rclb
jmp
call
dec
xor
jbe
jo
sub
add
xchg
add
std
fnsave
push
addr16
popa
fnstsw
push
fadd
outsl
mov
and
xchg
sub
ja
sub
dec
into
push
movl
aas
mov
movsb
adc
test
testb
bound
ret
out
enter
adc
adc
inc
inc
mov
mov
out
sbb
and
fildl
xor
cmp
outsl
mov
pop
insb
sbb
popf
xlat
jno
mov
in
mov
stos
fucom
xor
enter
xchg
jmp
cmpl
dec
psrlq
mov
insl
push
bound
jb
and
fwait
jle
adc
push
dec
aam
inc
pop
imul
pop
out
pop
mov
ja
mov
mov
dec
ja
call
mov
pop
es
scas
add
loop
sbb
pop
bound
push
jb
test
call
xor
fcmovnu
pushf
lds
mov
mov
and
std
enter
fidivs
xchg
lds
ffreep
cmpsl
lret
jg
pop
mov
std
push
inc
sbb
int
mov
adc
scas
xchg
dec
jmp
imul
pop
cltd
jp
enter
in
add
in
xor
dec
repz
mov
pop
mov
adc
jge
pop
mov
adc
dec
addb
push
cmp
loop
mov
bextr
addl
push
repnz
jle
xchg
jb
mov
mov
cs
xchg
andl
pop
sbb
cmp
loopne
adc
stos
aam
push
pop
push
mov
test
jge
pop
mov
test
and
add
das
bound
pop
xor
movl
inc
fisttpl
je
sub
xlat
sbb
ljmp
inc
sahf
dec
jecxz
dec
fidivs
mov
call
xchg
push
lret
mov
es
push
inc
cli
aad
fistps
push
pop
dec
inc
stos
loop
dec
xor
cli
cltd
inc
lret
das
adcl
cmp
clc
sbb
and
add
xchg
jo
je
lods
inc
aad
jo
pusha
dec
cs
icebp
and
and
lods
dec
hlt
jb
sbbb
cmp
cltd
dec
popa
pusha
int3
nop
pushf
jno
xchg
out
lahf
add
dec
fildll
mov
ret
stc
sub
cli
scas
mov
sbb
or
xchg
std
xchg
push
imul
jge
jl
xchg
flds
xor
jmp
loope
push
mov
lahf
cmc
std
sbb
sub
cltd
mov
or
scas
ds
jmp
stos
cld
fcoms
cmp
sub
cmc
mov
out
fcmovbe
out
es
cmpsl
or
lahf
adc
sbb
subb
loopne
mov
push
mov
fidivs
incb
xchg
call
mov
pop
inc
xor
sub
xchg
mov
aad
xor
aas
mov
mov
adc
shlb
aaa
rclb
dec
sub
daa
lcall
lcall
xor
cs
cwtl
test
adc
imul
xchg
loop
mov
inc
add
xlat
push
xchg
jae
fsubs
iret
cmpsl
push
xchg
or
mov
jo
icebp
inc
lods
in
dec
sub
lds
pop
gs
jns
push
les
jns
sbb
mov
incl
orl
add
pop
shl
dec
xchg
loope
sti
out
and
cmp
cmpsb
lahf
pusha
rcr
adc
sahf
insb
jae
std
rcrl
xlat
aad
out
mov
repnz
cwtl
or
rorl
lret
cmc
ss
loopne
xchg
jns
loopne
ret
testl
xlat
cmpsl
gs
xor
jle
cmp
sbb
jmp
aaa
jo
xchg
rclb
xorl
cld
adc
jle
stc
sub
adc
je
add
loopne
inc
sbb
add
mov
mov
cld
pop
filds
data16
jge
xor
lock
scas
or
mul
xchg
add
mov
arpl
fcompl
imul
inc
das
bnd
jmp
jle
pop
and
rorb
mull
mov
sbb
mov
lds
inc
pusha
push
pop
mov
jb
push
jns
fdivrl
and
popa
sub
test
add
test
jo
sub
lds
mov
xchg
repz
push
repnz
popa
sbb
pop
mov
fwait
push
int3
ds
inc
or
mov
loope
arpl
lods
arpl
xor
dec
jg
pop
lcall
push
jnp
std
lahf
and
scas
addr16
jmp
ss
movsb
and
jle
mov
mov
imull
add
xchg
fnstsw
mov
int3
std
inc
or
dec
std
xchg
push
pushf
lds
shlb
mov
adc
in
pop
aaa
xor
mov
add
lcall
pop
xor
out
mov
scas
mov
mov
mov
sarl
push
call
cmp
das
les
pop
icebp
xchg
mov
in
xor
and
sbb
shlb
inc
test
push
and
dec
je
test
aas
test
xchg
rclb
add
fadds
or
push
mov
jne
jno
std
xor
mov
inc
lret
mov
push
sbb
xor
push
mov
addr16
cmp
sbb
cmp
loopne
in
sub
xor
std
loopne
and
and
push
pop
std
mov
jbe
lret
cmp
cld
push
pop
inc
add
xor
jne
mov
dec
or
je
mov
not
xlat
int3
in
pop
jbe
popa
stc
pop
outsb
sbb
shl
test
cmp
adc
or
cmp
std
jp
inc
add
dec
test
out
sbb
adc
mov
repnz
add
cli
repnz
sbb
sar
xor
sub
xor
add
jno
fldcw
xchg
mov
jmp
sub
mov
adc
pop
faddl
jmp
cmp
jno
xchg
repnz
dec
mov
mov
sbb
inc
xchg
outsl
mov
sbb
mov
cltd
outsl
mov
cmpsl
cmc
mov
mov
lods
mov
cmc
std
in
sub
fs
arpl
sub
ljmp
cltd
out
pop
inc
ljmp
pop
mov
xor
pop
imul
sub
pop
mov
jl
lock
pop
imul
inc
mov
ljmp
sbb
sahf
push
in
dec
sub
cmp
mov
pop
jmp
jmp
or
out
mov
enter
xchg
daa
enter
or
mov
jge
mov
cmp
xchg
lods
pop
dec
ja
jne
ljmp
mov
pop
xchg
stos
shrb
mov
les
inc
and
icebp
or
loop
ds
lahf
ds
in
lea
push
and
mov
xchg
ds
fwait
pop
addl
cmpsl
adc
cmc
ret
sbb
testb
sti
inc
lret
scas
mov
test
ljmp
test
pop
lahf
fmull
sub
cmp
aam
pop
sbb
scas
push
clc
fists
inc
inc
sub
enter
fs
pop
push
jo
sbb
mov
mov
push
sbb
cmpsb
mov
loop
add
repz
xchg
into
cmp
int
jb
and
add
xchg
pop
cmp
scas
inc
out
xor
nop
lea
sbb
in
pop
rol
sbb
jb
push
sub
rcr
and
dec
sub
xor
pop
in
add
pop
push
and
int3
cmpb
dec
mov
push
mov
je
or
sub
fisubrl
mov
stc
pop
inc
cmc
pop
pop
push
rcrb
mov
dec
inc
dec
outsl
cmpsl
and
mov
sahf
loope
insl
pusha
cmp
jg
xlat
rorb
imul
orb
sahf
jae
mov
daa
pop
sbb
cmpsl
scas
and
push
popa
and
push
fildl
rclb
lds
push
stc
sti
pop
sbb
in
add
ret
rcll
pop
cmc
mov
and
stos
push
sub
xlat
daa
lahf
dec
xor
xor
cmpsl
sbb
lcall
cmp
sbb
inc
and
cmp
cmp
push
jmp
ret
adc
hlt
push
inc
stos
mov
or
inc
icebp
out
push
ja
cmp
xor
test
sbb
fadds
aad
jge
pop
cmc
aaa
stos
mov
insl
lret
jle
mov
push
ja
rcrl
out
lock
test
push
adc
repnz
push
sbb
fidivl
sbb
inc
cmp
mov
jp
jo
loop
aad
test
mov
mov
and
or
and
mov
pusha
aad
pop
adc
cli
ss
sbb
inc
jmp
mov
sahf
jl
lcall
push
out
mov
sti
insl
fists
pop
hlt
lahf
push
data16
popf
prefetch
mov
nop
mov
jo
aas
in
lock
mov
addr16
push
fs
push
stos
lahf
sbb
fnsave
mov
testl
mov
in
arpl
inc
int3
mov
mov
jg
jp
pusha
mov
and
and
add
push
shrl
pop
leave
jp
sub
cltd
xchg
inc
and
lahf
jg
movsl
div
in
jo
adc
mov
jne
ja
aas
fs
das
or
in
gs
test
inc
jg
sbb
cmp
imul
cmp
and
aas
bound
xor
and
mov
and
icebp
daa
and
test
das
out
sbb
in
mov
sbb
mov
lock
ret
jo
imul
stc
out
addr16
mov
sbb
out
call
and
or
sub
filds
popf
inc
cmp
in
add
push
inc
mov
mov
mov
push
cld
inc
or
inc
rorb
or
sbb
leave
pop
inc
lahf
jbe
dec
sbbb
or
mov
mov
popf
or
in
mov
dec
jle
mov
add
sub
js
sub
jmp
and
adc
rorl
mov
insb
push
mov
sbb
shll
mov
xchg
rcrl
repnz
inc
decl
and
arpl
ss
mov
cmp
loopne
push
mov
xor
jbe
aam
scas
xchg
adc
or
push
xor
jo
int3
pop
pop
cwtl
jmp
dec
out
rorl
test
add
shlb
es
inc
fdivl
add
inc
in
jb
xchg
mov
test
sub
orl
mull
test
xlat
xchg
ret
into
mov
xor
iret
sub
fs
hlt
shll
out
setge
mov
pop
and
in
movups
inc
adcb
ror
loope
jl
iret
ja
sbb
fucomp
pusha
stos
in
sub
jb
mov
test
or
cmp
inc
jmp
jmp
stc
push
mov
dec
cwtl
jae
and
imul
jnp
mov
test
mov
pop
push
cwtl
push
mov
lds
inc
inc
outsb
mov
cltd
fstpt
mov
lods
and
xchg
jne
cmp
mov
cmpsl
aam
call
test
cwtl
shlb
xor
push
xchg
outsl
lahf
mov
andl
inc
cmp
sbb
sub
pushf
or
add
rclb
out
addr16
pop
adc
divb
push
imul
outsb
cs
pop
xchg
push
xchg
pop
push
push
fistps
gs
mov
test
pop
bound
xchg
pop
xorl
lds
push
mov
or
push
cld
mov
mov
jns
out
testb
addl
out
adc
dec
or
push
jle
notb
or
mov
adc
mov
mov
cwtl
sti
mov
pop
enter
or
jg
pop
fnsave
fs
cmp
adc
inc
jb
push
inc
popf
inc
jp
mov
decl
jo
cltd
inc
mov
xchg
xor
inc
sbb
adc
dec
loopne
cmp
or
sub
movsb
sar
sti
paddq
cmpsb
jo
pop
cmp
fsubl
scas
out
jle
inc
hlt
loope
inc
test
and
pop
jbe
adc
adc
add
cmp
or
cmc
stos
fildll
push
sub
and
add
mov
jns
mov
test
adc
jne
push
xor
lret
sbbl
add
cmp
test
or
mov
fldl
aas
dec
shrl
sbbl
add
mov
js
and
lods
out
pop
test
inc
inc
lahf
sub
dec
jge
mov
ds
cmc
sbb
pushf
cmp
pop
xlat
jno
jle
rcll
push
stos
dec
enter
lods
jae
addl
movsl
repz
and
repz
loopne
pop
inc
and
outsl
dec
adc
inc
mov
notb
jb
stc
fwait
mov
push
addr16
ret
cltd
mov
fs
or
pop
jo
xchg
and
jne
shll
push
push
push
pop
test
xchg
loop
rcrb
int3
sub
jecxz
mov
movsl
push
mov
lcall
cmp
incb
nop
inc
arpl
pushf
mov
rclb
inc
push
sbb
cmpsl
imul
out
adc
jmp
ficomps
xorl
adc
imul
dec
sub
pop
sub
push
into
addb
rcll
fs
into
cmp
arpl
mov
icebp
adc
iret
add
shl
push
gs
inc
jne
repz
in
lods
rcrl
hlt
lods
or
and
in
fstl
mov
sub
fmuls
mov
adc
inc
cmp
jno
mov
ds
jne
pop
adc
jmp
and
cmp
inc
add
lock
idivb
and
push
mov
bound
aas
inc
pop
ja
mov
mov
enter
sub
pop
mov
mov
in
add
pop
jb
inc
lods
out
and
hlt
in
sub
lret
push
inc
mov
jnp
dec
loop
xchg
movsl
add
pop
dec
adc
mov
popa
sbb
testl
mov
or
sbb
inc
pop
faddp
jae
dec
add
mov
push
mov
in
jge
ret
loope
jae
gs
out
inc
xchg
lock
es
std
sbb
dec
mov
xor
push
inc
dec
xchg
lcall
sbb
sarb
sub
orb
push
add
and
dec
mov
arpl
negb
dec
bound
xor
cs
pop
dec
mov
mov
stos
mov
popf
ljmp
xor
incb
add
int3
xchg
mov
push
inc
subb
xor
fnstcw
fidivs
and
push
and
xchg
push
or
out
into
lock
cltd
mov
es
sbb
and
and
adc
cwtl
jns
outsl
icebp
xor
mov
push
pop
ljmp
sti
fsubl
or
mov
addl
loop
std
jae
rorl
int3
mov
cld
cltd
mov
mov
leave
sub
out
dec
out
outsl
ror
push
scas
sub
xor
sub
negl
jno
sub
bound
inc
and
pusha
lock
dec
fninit
mov
push
gs
adc
fcmovnb
out
lods
sub
inc
or
es
mov
and
push
bound
fadd
pop
test
mov
sti
hlt
adc
adc
movsb
outsw
sahf
stc
and
fistps
fidivrs
imul
or
out
pop
pop
xchg
in
lret
gs
popa
push
mov
aam
xchg
jbe
sbb
cmp
rolb
lds
jge
fimull
or
lds
loopne
in
pushf
lea
insb
enter
jge
fwait
sbb
and
sub
xor
rcrb
mov
inc
mov
xchg
cmp
and
xlat
jbe
sub
std
dec
dec
mov
push
scas
mov
mov
scas
sbb
pop
pop
sub
xor
daa
fisubrs
sbb
xchg
jle
clc
pop
cmovle
loopne
enter
xor
adcb
pop
jne
pop
cmpsb
mov
and
cmp
imull
fisubrl
dec
ja
cmp
inc
stc
push
pushl
js
shrb
add
outsl
movb
cli
jno
mov
and
data16
popl
jp
cmp
mov
xchg
push
mov
imul
shrl
adc
sbb
iret
xchg
fwait
das
inc
sub
and
push
cmp
inc
outsb
popa
jecxz
inc
mov
jne
movsl
pop
inc
jecxz
hlt
jno
mov
pop
or
xor
jnp
sti
push
call
flds
pop
addr16
loope
in
push
clc
push
pop
xchg
mov
push
icebp
sub
xchg
wbinvd
push
pop
push
pop
stos
xchg
dec
cmpsl
gs
inc
nop
in
adc
xchg
mov
fsubrl
adc
dec
adc
inc
aas
rclb
lock
test
adc
pop
jecxz
xchg
pop
sbb
outsl
and
int
movsb
pop
mov
cmp
sahf
aaa
mov
bound
xor
mov
test
adc
mov
fbld
push
push
sub
inc
lret
cmpsb
jg
cltd
pop
push
and
add
ret
dec
out
cmp
pop
bound
sbb
pushf
cmc
int
push
push
fldenv
mov
dec
and
lods
jno
inc
dec
in
mov
xor
daa
test
jge
push
icebp
mov
cli
sarl
mov
lahf
addr16
pusha
cmpsb
sbb
dec
adc
mov
dec
lahf
mov
fs
call
addb
sbb
aas
iret
test
popf
push
mov
lret
mov
push
dec
mov
out
mov
stos
arpl
iret
jl
xchg
arpl
lret
cmpsb
fwait
in
xor
sub
testb
lahf
jo
daa
rol
and
lods
pop
jae
jo
mov
std
add
add
pop
fnsave
fstpl
mov
in
jg
cmp
sti
push
mov
xor
mov
sbb
clc
bound
stos
push
mov
pop
and
shrb
arpl
cmp
iret
adc
out
push
sbb
push
pop
cmpsb
sub
cmc
icebp
or
add
mov
test
adc
std
add
mov
fsubrs
arpl
cmpsl
dec
add
mov
stos
inc
cmc
xlat
dec
dec
mov
lahf
mov
push
mov
nop
cmp
insl
mov
add
icebp
test
dec
insb
sub
and
scas
sub
pop
dec
mov
pop
and
adcb
lock
mov
sarb
fists
sbb
shlb
push
pop
roll
addr16
ljmp
inc
xchg
add
loope
cmc
xor
push
jl
xor
aaa
loopne
addl
xchg
mov
dec
cwtl
mov
jae
add
lret
cli
mov
in
sub
jecxz
adc
jo
or
or
lock
cmp
pop
dec
idivb
test
scas
dec
xor
or
inc
jo
sbb
push
lcall
insl
adc
lods
inc
push
and
cmc
aaa
or
push
inc
inc
sub
sbbl
jle
mov
cmp
fs
fildll
adc
ret
fwait
out
adc
and
jp
popa
jo
out
leave
jo
pop
sbb
sub
mov
adc
pop
sbb
add
ficoml
pop
jp
fmul
popf
pop
sbb
mov
dec
shlb
xchg
movsb
jmp
cmp
into
push
aas
loope
rolb
push
cli
out
out
xor
mov
inc
je,pn
aaa
xchg
or
xchg
mov
fidivrs
pop
pop
or
subl
or
mov
es
and
stos
arpl
bound
cltd
adc
adc
imul
ljmp
jmp
push
sub
adc
dec
push
int
mov
insl
or
push
sub
lahf
dec
icebp
adc
jae
xor
insb
stos
das
and
jg
mov
mov
shrl
mov
pushf
js
ret
inc
or
daa
dec
pop
mov
push
fisubrl
pop
dec
in
fistpll
add
in
popa
push
ret
or
in
fmull
popa
mov
in
pushf
or
aaa
leave
gs
fldcw
sbb
stos
add
vmovaps
jp
jne
cmp
xor
inc
push
pop
fcompl
call
xchg
push
callw
adc
mov
cmp
xchg
iret
xchg
or
fisubrl
pop
aam
mov
sbb
jle
insl
sub
lds
adc
add
ja
dec
sbb
inc
mov
pop
lock
jno
pusha
or
push
xchg
dec
push
pop
test
rorl
sahf
or
jl
jnp
dec
andl
pop
outsl
repz
mov
and
iret
cmpsb
add
pop
into
arpl
nop
mov
nop
lcall
xchg
cmpsb
lock
lds
sub
movsl
or
test
addr16
push
xchg
js
insl
adc
dec
rcr
mov
ficompl
lcall
cmp
push
mov
mov
inc
pop
add
push
fdivrs
sbb
pop
and
and
sahf
mov
xchg
fistl
xlat
in
inc
jno
ds
in
lock
js
mov
cmp
scas
fwait
sbb
dec
xchg
sbb
ret
aam
in
aad
xor
jns
sbb
es
adc
push
daa
jb
xor
cld
fnstenv
push
push
sbb
js
in
sbb
and
cmc
outsb
pop
clc
aas
mov
cmp
mov
dec
test
mov
loopne
adc
dec
cmp
loop
aam
pop
push
cs
push
pop
mov
xchg
inc
jne
xchg
add
movsb
add
jge
iret
cmp
imull
adc
mov
out
fbld
mov
mov
add
pop
jbe
mov
out
fimuls
pop
hlt
xchg
lds
mov
test
add
out
mov
xchg
jnp
jo
cmp
outsb
fwait
dec
xor
xor
enter
sahf
xor
and
xor
mulb
xor
mov
iret
pop
jecxz
je
mov
jmp
jne
fnsave
mov
inc
aaa
cmp
dec
push
addr16
lods
inc
push
or
es
dec
das
mov
inc
roll
lock
pop
aas
mov
lret
loopne
ret
stc
shrb
mov
sbb
enter
aaa
inc
mov
add
outsl
ljmp
ss
stos
or
rolb
mov
sti
lret
mov
stos
and
ret
fdivrs
aas
xchg
cmp
test
push
fstpl
movsl
mov
shlb
test
lods
dec
sbb
int3
push
and
jp
nop
dec
popa
hlt
enter
jbe
into
dec
cmp
push
mov
pop
mov
pop
cltd
fldt
mov
les
push
lcall
push
outsl
nop
fbstp
rolb
pop
xor
mov
adc
aas
push
data16
ja
and
inc
xor
repz
mov
popa
add
loope
push
imul
fldenv
add
pop
or
xchg
mov
cmp
sub
add
shr
jg
mov
xchg
xchg
lock
cs
adc
inc
cmc
int
fisubrl
orl
or
pop
sbb
sub
and
push
dec
and
sarl
js
imul
jbe
jge
bound
or
push
adc
notl
cltd
daa
mov
push
fsub
pop
sbb
popa
adc
lods
sahf
in
cmp
jmp
idiv
adc
mov
mov
add
enter
lcall
into
insl
test
sbb
and
daa
adc
js
mov
push
rcr
loopne
arpl
popa
or
mov
fisubrs
push
xchg
ss
rorl
jbe
je
roll
jge
cmc
and
ret
sbbl
jbe
push
mov
inc
push
jnp
inc
xor
mov
mov
inc
cmp
push
xor
pushf
outsl
cmp
cmp
xor
or
xchg
jge
lods
cs
or
in
inc
add
add
rorl
pop
sub
sub
push
cmpsb
inc
leave
and
xchg
imul
cli
dec
sbb
loopne
inc
mov
andb
mov
clc
jle
and
movsl
and
insb
js,pt
xchg
mov
fdivs
pop
outsb
out
imul
sbb
adcb
add
push
mov
ja
jbe
cs
xor
adcl
call
push
sub
aam
in
dec
push
in
add
push
out
dec
adc
xchg
push
les
mov
mov
inc
or
imul
dec
stos
mov
movsb
or
or
mov
test
pop
mov
inc
xor
gs
es
mov
fwait
jb,pt
cmp
int
add
dec
push
cmp
cmp
daa
jb
mov
repnz
jle
sbb
std
push
ret
jg
add
ficoms
mov
cmp
mov
lret
jno
xlat
cs
or
sub
adc
rcll
sub
sti
lahf
lds
sbb
xchg
mov
imul
or
xchg
mov
push
sahf
cli
sbb
dec
orb
jle
mov
ljmp
in
dec
push
adc
mov
pop
inc
scas
xchg
negl
es
add
inc
sub
pop
push
fstl
push
cmpsb
notb
faddp
mov
jnp
jmp
mov
add
pop
pop
ret
add
push
adc
push
mov
xchg
jp
negl
loop
pop
in
mov
movsl
cmp
insb
mov
dec
xchg
mov
andl
aam
jae
out
aam
cs
inc
inc
and
addr16
dec
inc
enter
mov
push
xchg
pop
mov
lahf
ds
mov
gs
cmp
mov
inc
je
or
jbe
sub
jg
das
xchg
movsb
mov
ds
into
or
jne
lods
hlt
pop
lret
mov
and
imul
iret
popf
std
xchg
inc
cmp
jle
sub
sbb
fwait
mov
push
adc
mov
adc
mov
mov
mov
mov
cmp
pop
call
loopne
jo
mov
and
dec
sub
je
fldt
pop
sub
and
push
in
mov
sbb
xlat
jl
gs
mov
sub
mov
mov
cmc
sbb
xchg
mov
jl
clc
and
sbb
movsb
push
jnp
sbb
jge
push
sbb
xchg
and
sub
inc
or
inc
test
out
and
adc
and
mov
add
lahf
stos
stos
push
lock
pop
mov
push
lea
cmc
xchg
sbb
add
rorl
lret
jp
jg
xchg
mov
aaa
pop
movsl
cmp
inc
dec
mov
insl
hlt
add
sbb
push
sub
xor
test
loope
mov
dec
lahf
jmp
lcall
sbb
xchg
pusha
in
or
jp
arpl
xor
pop
and
popf
pop
insb
sub
clc
shl
inc
enter
mov
in
mov
push
js
cmpsb
sbb
inc
dec
repz
mov
cltd
or
sbb
push
fwait
mov
jno
jno
cltd
xor
in
adc
xchg
mov
movsb
cltd
scas
mov
in
dec
scas
shll
push
or
mov
mov
data16
mov
mov
pop
cmp
mov
sub
inc
out
addr16
jmp
pop
les
lds
outsb
sub
rcrl
or
test
mov
sbbb
pop
mov
mov
adc
jnp
pushf
sbb
sub
addr16
fmul
fsubs
and
jmp
and
and
mov
add
cmp
mov
sbb
test
or
insl
cli
jne
sbb
mov
xlat
sarb
add
lock
mov
xchg
pusha
mov
fists
fcmovbe
mov
pop
popa
cs
mov
mov
jns
rolb
and
push
int
mov
pop
sub
stos
cmp
add
adc
nop
outsl
fprem1
lcall
dec
sbb
sti
push
add
jnp
subb
cmp
lcall
lods
xor
nop
xacquire
out
stc
push
dec
xor
cmp
bound
inc
imul
mov
pop
mov
lret
movsb
mov
test
xchg
pusha
movsl
fimuls
mov
lea
scas
popa
cmpsb
xor
aam
rcll
nop
inc
repz
dec
clc
mov
add
lods
inc
inc
cmp
xlat
cli
jmp
jns
aad
mov
sub
mov
sub
shrb
dec
fdivs
sbb
jne
sub
adc
push
jno
addr16
in
pop
je
rorb
or
cli
test
add
movsl
xor
or
ss
enter
xor
imul
cmp
aam
stc
mov
in
jo
push
inc
notl
es
xor
jae
ljmp
rcl
loope
push
jnp
repz
mov
or
push
daa
movsl
ret
iret
cmpsb
ret
push
xchg
add
out
dec
stos
jb
xor
lcall
jo
mov
mov
loope
pop
mov
ja
fnstenv
mov
push
dec
dec
jmp
sbb
add
movsl
cmpsb
sub
incl
nop
bound
pop
add
cmpsl
adc
and
test
lods
adc
notb
shll
jmp
pop
imul
fimuls
mov
xchg
inc
xchg
stc
cwtl
push
jmp
aam
mov
int3
out
xchg
fiaddl
movsb
jmp
sbb
xchg
add
add
or
in
xchg
clc
sub
aaa
push
jg
adc
adc
lods
mov
or
aas
cs
fdivrp
in
adc
push
jbe
push
movsl
pop
jo
decb
mov
mov
aam
stos
int3
sbb
mov
or
clc
inc
fidivrl
negb
ret
mov
insb
add
pop
in
mov
xchg
pop
xor
ret
jno
scas
popf
pusha
lcall
in
insb
add
aam
stos
mov
dec
mov
lret
cmp
arpl
dec
ja
fnstcw
mov
out
inc
iret
rcll
rorl
mov
dec
sub
push
mov
sub
lods
jo
inc
and
push
outsb
adcl
sbb
dec
cmp
adc
int3
adc
mov
mov
xchg
jg
adc
mov
push
bswap
call
push
leave
shrb
movsb
xchg
push
clc
pop
ficoml
xchg
push
stc
cs
xchg
push
insl
in
jecxz
adc
mov
xchg
jg
into
dec
test
hlt
or
jae
loopne
shll
test
dec
cmp
sbb
movsl
enter
popl
pop
test
inc
popa
dec
mov
jae
mov
push
mov
xor
mov
pop
add
push
std
je
mov
int
leave
enter
push
dec
sub
jmp
enter
scas
rcr
sarl
scas
clc
ja
mov
adc
imul
pop
push
xor
inc
mov
jbe
addr16
mov
push
or
adcl
and
dec
jp
xchg
stc
sub
push
xchg
ljmp
int
dec
sub
testl
adc
xchg
jb
inc
in
mov
sahf
sbb
popa
repnz
dec
inc
push
pushf
inc
mov
into
int3
sbb
jp
repz
add
adc
adc
pop
mov
adc
out
mov
jmp
mov
mov
loope
sub
xor
arpl
ja
xchg
lret
repz
pop
mov
push
rcll
stc
or
inc
sbb
add
cwtl
sub
lret
dec
in
add
lods
xchg
cld
add
sub
cmp
scas
cmpsl
iret
mov
pop
jne
sahf
mov
push
or
pushf
push
popa
popf
popa
cmp
outsb
outsb
test
fldt
mov
pop
inc
push
ret
outsb
and
popf
jg
xor
pop
negl
lods
out
fldcw
fmulp
add
in
cld
sub
pop
aad
mov
das
adc
rorl
mov
test
shll
out
loop
data16
insb
and
enter
pusha
jg
scas
in
hlt
imul
aam
push
mov
xchg
mov
fcoms
push
faddl
int
sub
dec
mov
sarb
inc
xchg
mov
jno
dec
sub
aad
lea
xchg
les
call
sahf
mov
sbb
rcrl
inc
jbe
xor
adc
cmp
cwtl
cwtl
outsb
lods
out
jl
mov
stc
mull
dec
in
jl
dec
mov
add
sub
bnd
jo
or
jecxz
sbb
dec
pop
jge
cmp
in
ret
sbb
fbld
xchg
mov
mov
les
dec
fdivrs
iret
xor
xchg
cmp
sarl
push
fistpll
testl
push
aas
add
stc
cltd
imul
dec
mov
popa
mov
sbb
ss
dec
popa
inc
xchg
hlt
sbb
aam
lahf
mov
dec
sbbl
scas
jbe
pop
lret
rolb
mov
xchg
or
dec
jecxz
xchg
aaa
mov
ss
lahf
add
adc
es
mov
cli
cmp
sbb
inc
je
js
nop
lret
test
pop
movsl
dec
outsl
movsb
mov
cmp
push
repz
pop
enter
js
fnsave
push
int
pushf
inc
xor
imul
fwait
aam
and
sti
outsb
inc
sub
jle
lods
or
out
xor
inc
gs
hlt
jo
or
lea
in
pushw
jge
sti
cmovns
inc
stos
movb
fstpt
les
xchg
cmp
fdivl
popa
fmuls
inc
sbbl
xchg
push
mov
aas
movsl
xor
mov
add
ss
sahf
push
sbb
pop
testb
mov
fdivrs
popf
xchg
hlt
xchg
or
jb
and
pop
xchg
xchg
pop
test
fidivrs
int
jmp
jnp
inc
pop
dec
xchg
inc
scas
into
movsl
and
add
mov
int3
or
lret
sbbl
cmp
std
xor
cmp
jmp
jns
jmp
fucomip
pop
push
dec
mov
add
mov
cltd
xchg
xchg
mov
push
imul
into
jnp
stc
add
jae,pt
icebp
xlat
inc
ret
ret
pushf
movsb
pop
incl
inc
shll
pop
jge
mov
jb
pushf
sub
jmp
fstpl
adc
jle
or
mov
xchg
mov
lret
pushf
test
test
mov
add
repnz
es
hlt
icebp
lock
mov
popf
pop
jmp
dec
ljmp
mov
subb
and
and
repz
lock
imul
sub
ljmp
mov
inc
cmp
dec
add
push
lods
mov
pop
stos
movsl
bound
sbb
out
cmp
cmp
lret
popa
hlt
ljmp
pop
jns
add
int3
or
pop
jmp
sbb
pop
and
js
xor
fs
sbb
cmp
fsincos
stos
decb
pushl
inc
adc
or
xor
je
fmul
enter
sbb
rol
xor
in
fstpl
push
push
movsl
cmp
sbb
mov
dec
xchg
jb
pushf
lods
lods
inc
sub
cmp
and
adc
aaa
xor
lahf
in
jb
inc
xchg
test
mov
pop
jge
push
idivl
insl
add
xchg
insl
lock
in
hlt
into
mov
aas
pop
push
inc
mov
imul
jo
aad
push
pop
and
sub
or
push
push
mov
out
in
lahf
test
lcall
adc
add
ret
or
insl
mov
orl
out
je
mov
mov
stc
sub
or
xlat
sarl
dec
repz
sbb
add
dec
push
dec
add
ds
xor
mov
add
sub
push
adc
data16
mov
addr16
bound
ljmp
adc
fbld
or
inc
fiadds
pop
jno
mov
test
mov
pop
mov
aaa
sub
xchg
jo
jp
xor
sti
mov
out
jmp
or
push
xor
stc
pop
rcrb
fwait
cmp
xchg
inc
jae
and
lahf
pop
imul
cmpsb
arpl
dec
gs
xchg
fbld
shll
in
movsl
inc
add
xor
hlt
jne
mov
xor
cwtl
cmp
and
rcrb
enter
jnp
addr16
enter
push
cs
test
xchg
pop
cwtl
rcr
flds
adc
pop
test
fs
sahf
cs
adc
shll
mov
mov
mov
fnstcw
sub
pop
cmp
lods
push
adc
inc
ss
out
mov
les
adc
ret
jo
push
dec
stc
xor
into
sar
push
or
lret
mov
aam
and
mov
mov
sub
jo
pop
aam
jnp
push
push
pop
pop
push
in
into
arpl
push
cmc
enter
adc
addr16
inc
sbb
sbb
mov
sahf
jno
fstp
xor
vcvtps2dq
pop
jae
mov
mov
in
sub
filds
jle
fsub
dec
mov
out
push
popf
popf
das
inc
mov
mov
sbb
or
add
xchg
movl
popa
jne
repnz
pop
jne
inc
inc
xorl
mov
push
addb
sbb
mov
sub
fiadds
pop
xlat
movsb
xchg
imul
rcrl
adc
outsb
pop
daa
js
jns
add
mov
imul
outsb
mov
lea
popf
outsb
xor
mov
mov
pop
adc
arpl
push
dec
inc
or
mul
push
ja
pop
mov
mov
jbe
sub
shrl
cltd
in
ret
pop
cmp
test
xchg
sub
push
pusha
test
jns
aaa
xor
aad
fsubrs
fldt
xor
xlat
pop
pop
shlb
inc
sub
push
out
pushf
clc
dec
repz
lcall
aas
shlb
mov
sub
rcrl
mov
cmp
mov
cs
pop
js
out
cmc
fs
imul
mov
sbb
sbb
and
mov
xacquire
enter
js
andb
or
int3
fs
scas
sub
arpl
out
fisubrs
ss
lcall
out
das
outsl
gs
divl
lahf
mov
js
push
inc
je
andb
jg
cs
cs
sub
adc
aad
xchg
lods
xor
xor
inc
and
loope
sub
mov
nop
inc
sub
sbb
xor
jmp
dec
jne
popa
subb
cmp
mov
lret
pop
test
in
adc
cmp
movsl
xchg
jns
stc
adc
lods
inc
jg
pop
mov
jmp
pusha
jle
insl
hlt
mov
jecxz,pt
ret
js
sahf
mov
and
daa
cli
add
cli
jnp
lods
js
pushf
jecxz
insb
sbb
pop
lcall
nop
int3
push
into
jmp
imul
inc
arpl
int3
les
and
mov
rorl
adc
fmull
sbb
cmp
jmp
cs
fdivl
sub
fiaddl
cli
jmp
lcall
inc
add
mov
mov
adc
mov
in
iret
xorb
out
addl
in
shl
sub
sub
movsb
neg
mov
sti
outsb
mov
pop
jp
data16
dec
aad
pop
jno
mov
leave
mov
pop
insl
aaa
lock
add
in
bound
cs
test
mov
stos
das
xor
aaa
cmpsb
rcrb
mov
repz
leave
or
sub
jae
or
pop
mov
jl
shr
in
daa
sti
cmpsl
cli
mov
dec
dec
insb
add
xor
mov
lods
inc
cmp
out
pop
jecxz
cld
and
insb
jmp
fildll
int
and
testb
lods
popa
or
jle
mov
pop
pop
arpl
aam
rolb
pop
dec
jo
inc
out
dec
fdivl
jo
pop
test
pop
dec
mov
pop
leave
mov
aad
js
mov
hlt
sahf
jnp
nop
std
xor
faddl
scas
or
ret
scas
fstpt
pop
jb
aas
repnz
mov
cwtl
xchg
outsl
cld
sti
pop
add
test
mov
jae
mov
repz
mov
mov
mov
outsl
cltd
rcl
int3
and
dec
xchg
out
xchg
push
mov
and
inc
add
xchg
cmp
or
pop
in
push
push
popa
sub
add
sar
rcrl
jnp
leave
fdivs
jne
popa
mov
rcr
insl
jg
sti
js
or
in
mov
sub
push
pop
and
mov
iret
out
xor
xchg
xchg
dec
fbld
push
arpl
dec
xchg
push
repz
mov
iret
daa
mov
sti
mov
mov
shll
out
sub
inc
ljmp
cltd
cmp
sub
mov
popf
fsubrl
test
mov
and
fmull
pop
sbb
daa
hlt
mov
gs
mov
jp
sub
aad
outsb
sahf
jg
sti
les
inc
mov
cltd
ds
fwait
mov
mulb
fstpl
xchg
dec
sbb
xchg
mov
ror
out
movsb
fstp
cs
mov
sub
mov
bound
out
ret
mov
sbb
push
sub
outsl
push
movsb
pop
ljmp
push
stos
push
push
mov
sbb
add
sbb
xor
jmp
incl
loopne
fsub
dec
lcall
adc
pushw
popa
cmp
int3
xchg
cmpsw
stos
add
mov
xor
je
scas
insb
in
push
rcrl
repz
repz
js
dec
stc
popf
aas
out
aas
xchg
sbbl
repnz
fnstcw
dec
out
mov
fs
mov
sub
push
dec
sbb
xorl
mov
lods
xor
lods
xlat
cld
popa
inc
cltd
rcrl
cmp
lahf
fsubl
push
or
mov
jb
scas
push
push
adc
dec
mov
shlb
in
and
pusha
fldl
sbb
subb
addr16
arpl
hlt
scas
xor
pop
loopne
xor
pop
cmp
inc
mov
cmp
aas
popl
cwtl
pop
movsl
dec
outsl
subl
imul
xchg
jl
test
lcall
dec
inc
xor
imul
sub
and
in
adc
xchg
rcrb
and
inc
push
and
push
imul
in
xorb
xor
in
in
fstpt
ret
insb
sub
jg
sub
jne
daa
fisttpll
cmpsl
shrl
mov
dec
pop
push
push
sbb
dec
cmp
jl
cltd
xchg
xchg
aaa
pop
call
cmc
sbb
out
jl
sub
xchg
arpl
mov
adc
sahf
xchg
xor
out
inc
inc
cli
sbb
pushf
jns
adc
jg
ss
int
pop
xchg
cli
xchg
jb
pop
sbb
pop
jmp
jae
lock
dec
ret
or
dec
cltd
pushf
loope
dec
lock
pop
pop
lods
pop
loopne
subl
xchg
hlt
pop
out
scas
inc
cmp
sub
in
jne
scas
jo
sbb
mov
inc
adc
add
into
test
sahf
in
push
fmull
adc
sbb
cltd
jmp
imul
jae
push
sub
xchg
dec
and
ljmp
outsb
imul
notb
daa
dec
add
movsb
roll
jge
mov
pushf
imul
insb
mov
shll
and
stc
lret
cltd
inc
push
mov
movsb
jns
dec
sub
lahf
xchg
out
int3
mov
jne
es
push
mov
fidivrs
jle
mov
push
daa
sbb
pusha
mov
das
push
fnstsw
faddp
sahf
pop
mov
add
pop
mov
cmpsl
or
xor
or
mov
sahf
xor
loopne
lcall
in
lret
cwtl
mov
pop
movsl
mov
mov
out
loope
ficoms
pop
push
and
and
jge
fisubrs
lea
and
jge
das
pusha
pusha
adc
push
dec
and
mov
dec
mov
shrl
mov
push
scas
jecxz
mov
lds
icebp
in
mov
cmp
push
sub
movsb
loopne
rclb
sbb
mov
sub
outsl
lcall
push
movsb
cmc
or
in
imul
xor
pop
movsl
js
xchg
pop
int3
pushf
pop
push
mov
stos
xchg
xor
cltd
shll
and
cmpsb
cmp
dec
fidivrl
leave
scas
pop
and
xchg
stos
add
push
ret
push
popl
jno
mov
xchg
sbb
stos
imul
pop
adc
pop
push
cmpsb
inc
add
movsb
inc
jno
sahf
xchg
adc
imul
stc
jno
adc
sbb
inc
out
adc
dec
jp
pop
movsl
out
dec
push
jo
mov
xchg
fldt
mov
std
hlt
out
cli
out
adc
xchg
sbb
leave
push
cwtl
mov
mov
data16
adc
mov
cmp
push
jmp
mov
inc
out
mov
push
repnz
mov
movsb
xchg
nop
mov
mov
fiaddl
mov
sti
mov
mov
inc
nop
sub
cmp
aad
test
or
sbb
sub
aam
int
mov
out
pop
js
std
aaa
jbe
inc
dec
fsubrl
ret
adc
xchg
fs
stc
adc
adc
or
fnstsw
adcl
fs
sub
inc
and
adc
repz
mov
ret
je
ret
jecxz
push
addr16
add
bnd
notl
loope
sub
mov
clc
xchg
jge
mov
popa
ss
xchg
out
fnstsw
mov
push
out
inc
inc
xor
and
mov
lods
int3
and
sbb
ja
daa
and
xor
int3
adc
dec
and
cli
in
fucomp
mov
pushf
mov
mov
fnsave
mov
inc
stc
cltd
mov
adc
or
ja
ljmp
or
outsb
in
mov
shl
aad
push
js
push
bound
stos
adc
test
xlat
test
insl
push
push
dec
push
sti
xchg
clc
mov
dec
repz
pop
adc
cmc
push
add
das
xor
arpl
cmp
inc
add
pusha
or
sbb
fwait
aas
adc
add
popf
loope
push
mov
out
jne
jle
imul
test
add
pop
and
mov
sbb
into
cmc
sbb
stos
pop
sub
jnp
mov
mov
insl
pop
jmp
fidivl
mov
pop
fsts
movsl
jge
sbb
leave
cmc
xchg
in
fsubs
xchg
and
push
ljmp
outsb
into
lret
arpl
adc
mov
jno
and
lock
pushf
xor
not
mov
stos
lret
pcmpeqb
or
push
out
js
mov
sub
insb
iret
and
xor
and
jg
mov
sbb
mov
add
fiadds
dec
xlat
cld
sub
jge
mov
jb
cmp
mov
sub
aas
jb
dec
jns
jp
fsubs
imul
xchg
pop
mov
mov
scas
roll
xchg
movsb
add
xchg
adc
aas
loop
dec
out
mov
sti
jg
xchg
jle
cltd
xchg
iret
dec
iret
push
jnp
movsl
addr16
jmp
or
fildll
mov
insl
pmulhw
adc
clc
xor
ret
mov
jo
cltd
mov
into
loopne
xor
lods
sti
mov
cmpsl
or
sbb
push
icebp
stos
scas
mov
std
fidivs
fwait
push
movsb
push
mov
sub
out
sbb
jae
repz
out
fcomps
cmp
aam
in
cwtl
imul
pop
push
push
jl
add
js
cmc
jl
addr16
std
insb
stos
in
xchg
pop
mov
sbb
push
adc
stos
push
push
jl
cmp
outsb
inc
or
push
arpl
jns
jmp
jb
negb
mov
xchg
cmp
mov
inc
sub
push
xor
test
xchg
sub
in
fs
js
dec
repnz
out
mov
dec
pop
cmpsl
and
fisubs
jecxz
iretw
inc
jb
jmp
setp
lods
clc
dec
dec
test
xchg
repz
ret
lock
mul
push
sub
jmp
xlat
cmp
push
or
or
pop
jne
es
idivb
mov
je
fildll
int3
mov
popf
arpl
xor
dec
loope
data16
nop
push
mov
jne
jmp
mov
sbb
je
ds
pop
or
lock
sbb
cmp
call
cmp
xchg
popf
pusha
repz
mov
xchg
mov
std
mov
push
movsb
mov
or
ret
sbb
retw
sub
aam
nop
leave
or
pop
js
sub
icebp
pop
in
in
xor
cmp
fwait
push
and
jmp
fldcw
add
sbb
mov
in
sti
push
pop
mov
repnz
sbb
leave
in
lret
xchg
mov
rcr
adc
fmul
hlt
cld
dec
push
roll
mov
stc
mov
scas
add
inc
cwtl
mov
insb
fstpl
lds
aaa
jnp
scas
cmp
jl
and
mov
pop
add
rcr
clc
insl
pop
lcall
pop
xchg
jb
out
cmc
push
sahf
xchg
sahf
sbb
pop
popf
jl
xchg
imul
addb
inc
jmp
lds
fs
pop
repz
mov
jne
jmp
cmp
xchg
mov
in
pop
sbbb
fcompl
cltd
xchg
jnp
es
xchg
mov
lds
imul
test
lahf
dec
xchg
mov
cmp
mov
out
pop
adc
addr16
adc
adc
pop
xchg
stos
pop
inc
jmp
cmp
jbe
inc
rclb
aam
adc
aas
inc
daa
dec
leave
fcom
push
sbbl
and
xchg
xor
adc
loop
test
popf
mov
bt
jb
cs
fisttpll
fs
addb
jno
push
jl
fwait
push
mov
inc
mov
xchg
out
fldl
xor
jecxz
sahf
pop
roll
loope
test
jmp
repz
cmc
jb
lret
daa
xor
sub
push
sub
lret
loopne
or
mov
or
jmp
mov
cs
or
dec
sbbl
scas
adc
push
add
add
imul
adc
scas
xor
and
pop
dec
sub
push
add
pop
lock
scas
ds
xchg
sbb
popf
or
cltd
mov
or
dec
mov
dec
cmp
rol
mov
mov
icebp
cmp
sbb
ror
ds
pop
fstl
loope
mov
pop
sarb
shlb
ja
mov
cwtl
mov
test
aas
adc
jno
xorl
movb
roll
int3
jmp
cmp
mov
test
mov
cs
xchg
ja
ja
push
clc
sti
and
and
iret
sub
inc
rcrl
insl
enter
sysenter
ja
outsb
cld
in
mov
ljmp
sarl
je
adc
dec
out
fwait
push
mov
arpl
xchg
out
cmpsb
cmp
pop
shll
les
inc
fistl
push
ljmp
std
mov
nop
cmp
cmp
xor
repz
or
fmuls
adc
push
icebp
pop
outsb
mov
ficomps
pusha
ret
dec
sub
je
into
dec
mov
aad
jp
ret
repz
rclb
sbb
pop
out
pop
ds
adc
div
xchg
xchg
push
stc
xchg
sbb
jns
jno
adc
mov
push
rol
cs
shrl
xor
sub
loopne
rorl
mov
add
js
cmpsl
mov
dec
sub
clc
rorl
aad
les
les
ja
mov
xor
pop
lds
cmp
dec
lea
cmp
aaa
adc
mov
add
mov
push
pushf
pop
push
mov
jecxz
mov
cmpsl
mov
or
insl
leave
dec
cltd
loopne
jle
or
push
pop
fstl
lahf
addl
dec
xor
mov
ja
pop
arpl
dec
inc
push
jbe
mov
xor
sahf
mov
iret
and
jb
das
pushf
jns
sti
rcrl
ljmp
dec
or
cmp
int
arpl
inc
adc
test
add
das
stos
in
dec
les
and
sub
jae
fistpl
lret
int
addb
movsb
jo
pop
and
or
mov
or
outsb
js
sarb
or
loop
gs
imul
pop
inc
xor
inc
fwait
xlat
ret
aad
push
adc
mov
jge
cmp
inc
or
call
cli
push
fs
das
push
xchg
test
sbb
push
fldt
xchg
cwtl
pop
sbb
add
ljmp
popf
jns
and
idiv
lcall
mov
sub
leave
xor
pop
stos
test
pusha
popf
stos
notl
mov
cmc
ja
sub
or
rorb
cld
addr16
push
loop
pop
cli
xchg
xor
mov
or
sbb
mov
jns
inc
sbb
push
pop
aaa
cmp
popf
add
mov
mov
testb
push
std
mov
cld
stc
push
lea
ss
xchg
cmp
pop
push
pop
dec
stos
mov
aaa
jge
mov
xchg
fldt
les
cltd
mov
adc
hlt
fsubl
lea
or
pop
xchg
out
lahf
stc
arpl
js
xchg
arpl
mov
or
jne
sbb
pop
jo
dec
sub
xor
mov
pop
lret
xor
cmp
xchg
addr16
movsl
push
or
je
dec
cmpsl
sbb
rcrb
or
cwtl
jg
mov
ret
mov
cmpsb
enter
mov
es
mov
or
movsl
or
nop
ret
push
jmp
lret
ret
add
mov
xchg
pop
add
xlat
dec
or
inc
imul
outsl
shlb
call
dec
imul
call
es
jne
inc
mov
sub
push
fdivl
or
push
das
fnsave
loope
pop
cmpsl
int3
scas
inc
pop
leave
inc
xchg
testl
movsl
daa
addr16
ss
jl
addr16
push
inc
sahf
fcmovu
and
cmp
loope
fwait
sahf
cmc
sbbl
and
cld
movsl
pop
adc
cmp
push
pop
test
es
jnp
push
inc
mov
clc
imul
or
arpl
adc
je
out
dec
out
cld
adc
or
in
adc
pop
cmp
and
pop
bound
jnp
out
aam
mov
fldt
shlb
mov
leave
mov
test
and
pushf
rcrb
ret
clc
jae
inc
push
or
out
scas
jg
sub
jmp
sarl
lret
push
cs
inc
mov
mov
in
and
jl
inc
mov
outsl
inc
mov
jmp
iret
es
insl
and
cltd
lods
adc
dec
xlat
or
dec
fmuls
jo
xor
xor
clc
repnz
pop
loope
mov
gs
ret
stos
mov
ret
popf
mov
jecxz
dec
outsl
inc
mov
push
jnp
js
xor
mov
mov
movsb
shr
les
in
fldl
imul
push
scas
iret
in
lock
call
je
out
ss
push
jmp
shr
or
cli
adc
fst
push
jmp
subl
mov
pusha
pop
rcll
mov
inc
inc
dec
mov
lcall
in
arpl
rcrl
cmp
inc
stos
jne
popa
arpl
dec
mov
into
pop
test
mov
icebp
imul
dec
ljmp
imul
xchg
lock
mov
mov
mov
out
lods
dec
mov
xchg
sbb
jge
cmc
repnz
xlat
setg
jae
outsb
dec
jnp
sbbl
cli
test
cmp
mov
xorl
stc
lret
push
imul
lods
or
xchg
arpl
test
data16
in
xlat
mov
shlb
inc
std
pop
sbb
mov
xchg
xchg
inc
sub
int
pop
or
rcll
bt
inc
ja
incl
lret
lods
sub
xchg
jne
sahf
inc
cmp
fstpl
popf
mov
call
sub
leave
xor
adc
pop
pop
in
sar
ja
dec
or
jecxz
xchg
mov
jmp
mov
ret
stos
sub
lods
inc
jp
or
jns
jb
nop
sub
stc
pop
mov
cmpsb
hlt
dec
jmp
daa
movsb
push
or
mov
jmp
fs
or
xchg
test
test
cmpsl
mov
fs
jb
loop
aad
mov
stos
mov
sub
lock
imull
dec
ficoml
cwtl
pop
jge
hlt
rol
rolb
mov
or
cs
push
stc
loop
cmp
mov
xchg
pop
fsubp
jb
mov
ret
jnp
pop
enter
sbb
sbb
and
sbb
lock
jno
inc
sbb
push
dec
test
cmp
or
imul
mov
xchg
repz
jo
cmpsb
out
ret
push
push
lahf
fbld
adc
push
xor
pop
sub
loopne
mov
icebp
popa
orb
mov
add
mov
mov
mov
mov
mov
mov
mov
fimull
sub
or
push
imul
dec
add
xchg
or
clc
and
subb
mov
icebp
xchg
inc
adc
dec
popf
scas
jmp
push
pop
pop
notl
mov
mov
addb
clc
insb
dec
out
lds
ds
int3
test
push
mov
mov
mov
xchg
jnp
test
inc
subl
or
push
aam
ret
push
in
push
sbb
fidivs
arpl
mov
jb
and
xchg
adcb
cli
push
mov
inc
cmpsb
sub
pop
push
mov
mov
cltd
jno
in
sbb
mov
jecxz
sub
ret
or
les
outsb
lock
mov
xchg
ret
xchg
mov
dec
popf
mov
cs
and
call
cmp
hlt
mov
pop
sahf
dec
ds
push
mov
out
fmuls
leave
mov
mov
jb
jae
call
mov
cmp
addb
adc
data16
lods
mov
mov
xchg
imul
nop
dec
xor
cmpb
js
xchg
clc
dec
jp
sti
imul
cmpsl
cli
xchg
stc
inc
xchg
lock
push
test
or
sbb
imul
lock
cmc
std
push
jg
sbb
shll
mov
mov
scas
andl
jo
es
out
lret
loopne
sub
test
push
aad
dec
es
fists
xor
adc
xchg
lret
pop
sub
lods
mov
inc
mov
cld
int3
loop
cmp
push
std
jb
xor
loopne
in
pop
xor
cld
inc
shrb
and
dec
adc
stc
test
test
das
sarb
dec
ljmp
sti
pusha
lret
clc
hlt
dec
int3
movsb
sbb
fucom
insb
stos
or
jl
or
into
popf
dec
lcall
int
push
push
jmp
xlat
and
subps
test
arpl
nop
hlt
push
pushf
and
jmp
adc
mov
lahf
sub
aam
cmp
sub
mov
mov
das
ss
incl
cwtl
and
aad
mov
pop
jge
cmpsl
lds
add
xchg
icebp
mov
jae
or
in
not
lret
and
dec
jb
aam
mov
negl
ret
mov
add
test
jle
add
inc
jb
mov
jge
or
cs
xchg
pop
int
sahf
pop
xchg
daa
lcall
or
adc
outsb
pop
arpl
fistps
fisttpll
imul
arpl
loop
call
data16
daa
repnz
xor
repz
lret
mov
mov
sub
mov
inc
call
inc
xchg
xchg
xchg
adc
je
cld
lahf
cli
adc
mov
pop
pop
mov
sub
mov
add
ret
and
sub
mov
mov
daa
push
adc
mov
pop
leave
mov
jl
push
cmc
push
insl
and
pusha
inc
movb
cmp
and
fidivl
jae
xor
xor
jp
nop
je
xlat
or
mov
jo
div
pop
push
mov
cltd
mov
adc
sti
sbb
and
mov
icebp
jl
pusha
cmp
fcmovne
repz
movsl
dec
icebp
mov
mov
mov
js
out
lock
out
mov
stc
cltd
outsl
mov
or
out
pop
mov
adc
sub
cmpl
mov
cmp
popa
mov
clc
add
jmp
pop
pop
lret
shlb
mov
pushf
jp
into
or
jno
into
enter
pop
push
mov
in
lods
es
jnp
icebp
and
movsl
int
hlt
ljmp
adc
jmp
in
pop
dec
adc
ljmp
adcb
mov
mov
add
sbb
pop
lods
test
push
sub
pop
and
popa
insl
add
sub
lods
cmp
imul
cmp
pop
js
inc
imul
enter
addr16
fs
shll
add
dec
enter
nop
ds
push
fists
jne
adc
cmp
push
out
sub
xchg
ret
sub
into
and
imul
mov
imulb
shll
dec
mov
xchg
jmp
outsl
jge
adc
jae
xchg
dec
xor
mov
pop
out
fistpll
leave
pop
outsb
mov
adc
push
fisubl
loope
hlt
sbb
push
inc
cmp
cltd
cltd
jge
sbbl
cmp
xchg
mov
in
push
mov
xor
les
add
js
mov
add
push
test
dec
xchg
pop
push
add
fbstp
rcl
aad
enter
jecxz
add
cltd
inc
out
ljmp
push
or
out
imul
leave
nop
fcom
or
cld
pop
sarb
into
dec
pop
repnz
lods
xchg
xchg
jmp
cmpsl
dec
adc
in
cmp
xor
add
pop
xchg
cmpsb
dec
jnp
push
inc
fucom
in
jae
repz
sahf
jnp
lret
lret
push
fbstp
mov
scas
scas
xchg
push
es
mov
popf
pushf
add
out
xor
arpl
daa
lods
scas
xchg
sahf
xor
push
orb
push
pop
int
aam
push
mov
mov
je
fisubl
cld
jl
pushf
push
inc
push
mov
mov
imul
add
arpl
push
loope
or
addr16
shlb
cmp
faddl
cmp
stos
xchg
adc
lock
arpl
jecxz
in
mov
gs
call
rcll
pop
add
sahf
jl
rorl
fnsave
xchg
fisttpll
pop
icebp
std
data16
pushf
cmc
mov
mov
test
enter
adc
pushf
pop
xor
int
out
inc
mov
pop
mov
inc
xchg
mov
xchg
jmp
inc
ss
sbb
push
mov
dec
push
xchg
xor
xorb
ja
mov
imul
inc
or
xchg
inc
shll
subb
push
mov
iret
push
xorl
lock
or
xor
jnp
jmp
fistps
push
add
das
ss
dec
movsb
nop
jmp
adc
into
aam
or
testb
nop
shlb
or
mov
inc
imul
test
sbbl
outsl
dec
cmp
cltd
dec
les
xchg
lahf
mov
cwtl
addr16
xchg
jb
and
add
add
mov
je
lcall
inc
pop
adc
pop
sbb
cmc
sahf
xchg
xchg
jmp
in
pop
std
enter
dec
adc
sarb
fdivrs
mov
jne
dec
int3
pushf
jbe
int
lods
enter
aad
cmp
and
std
aad
xchg
sbb
sahf
xor
aam
cli
clc
arpl
test
call
stos
cmp
mov
popa
or
inc
rcrl
scas
ret
add
inc
push
inc
in
cmp
add
scas
and
inc
inc
lods
xor
mov
fwait
into
mov
xor
aam
cld
ret
sti
mov
imull
insl
lahf
out
hlt
or
dec
sbb
lahf
push
addl
add
inc
enter
cli
cmp
or
push
mov
xor
cmpb
dec
cmp
mov
adc
push
mov
sahf
or
and
jnp
mov
sub
mov
pop
ret
and
js
popf
cld
fisubrs
stos
add
call
mov
jno
test
push
mov
push
pusha
ljmp
sbb
lds
jle
subl
add
inc
pop
das
add
mov
cmp
lahf
jae
mulb
dec
or
add
popf
mov
cmp
mov
loop
lahf
andl
pop
dec
mov
add
push
aaa
push
test
xchg
gs
das
imul
ret
fwait
mov
push
ret
mov
lods
loopne
and
adc
jo
lahf
xchg
push
cmpsb
sar
call
out
or
jl
jl
popa
sub
jns
jns
cmp
xor
add
ret
iret
test
inc
mov
sbb
cmpsb
inc
mov
and
std
add
ret
adc
inc
jg
xor
push
imul
iret
inc
icebp
mov
xlat
cltd
lock
mov
push
xchg
xchg
mov
xchg
and
jecxz
lret
and
ret
push
dec
lret
sub
orl
insb
es
ds
push
mov
cmp
mov
jge
ret
repz
cmp
xchg
cmp
pop
lahf
push
inc
data16
push
popl
mov
cmovle
jp
popf
mov
pusha
inc
outsl
pop
dec
outsl
call
adc
rorb
push
xchg
dec
sar
push
mov
out
mov
lea
jne
mov
xchg
or
sub
xchg
push
fnstcw
iret
cmp
fwait
cmpsb
lret
mov
mov
into
xor
sub
lods
push
outsb
cs
sbbb
jno
fcompl
ret
lret
jl
jecxz
adc
in
xchg
mov
les
jbe
dec
jle
arpl
out
fcom
es
and
gs
pop
cwtl
add
jnp
and
stc
jle
lahf
sarl
cli
inc
sbb
rcll
aaa
mov
jg
cmc
in
mov
lock
in
dec
sbb
cltd
xor
fwait
jle
push
mov
jle
imul
push
ljmp
adc
push
outsl
and
hlt
adc
mov
jae
add
xchg
stos
divl
add
rolb
mov
popf
mov
jae
push
pop
and
incb
xchg
lahf
cmovnp
dec
lock
adc
pop
or
cmp
sub
cmp
inc
lahf
mov
mov
out
add
sbb
add
add
dec
ja
fdivr
inc
mov
cs
arpl
fcos
inc
fsubrl
pop
mov
sub
jo
ret
mov
mov
sbb
mov
xchg
aaa
imulb
dec
jge
movsb
sub
sbb
hlt
mov
leave
jb
jns
les
movsb
cmp
jae
ret
repz
pop
sbb
outsb
mov
lods
sbb
pop
fistpl
jl
sbb
push
scas
adc
add
mov
subb
and
fwait
adc
push
push
negl
dec
push
xor
loop
jmp
push
mov
or
shlb
adc
mov
pusha
inc
insb
sub
js
push
jmp
sbb
pop
pop
mov
out
xchg
add
dec
sbb
lcall
cs
in
push
mov
roll
orl
xchg
push
or
or
sti
mov
pop
xor
inc
fldt
out
jg
jmp
push
jle
ss
mov
mov
aad
jmp
scas
or
mov
cmp
xchg
js
jae
xchg
dec
pushf
jb
xchg
lods
or
negb
in
mov
mov
mov
loope
lret
fcomps
lcall
dec
cmp
sbb
mov
je
dec
mov
in
lea
cmpsb
ss
mov
or
fidivs
push
nop
dec
jecxz
frstor
mov
repnz
int
inc
lret
fwait
rep
nop
lret
add
add
mov
jae
fisttps
scas
inc
add
or
test
movsl
and
dec
leave
add
lret
aam
in
loopne
mov
test
mov
int
mov
ret
cmp
nop
sub
inc
sub
nop
and
lods
aad
add
pushf
popl
adc
and
jae
dec
adc
fs
dec
inc
jl
xchg
mov
push
mov
cli
lds
cmp
mov
xor
loopne
ret
sbb
loope
push
push
outsl
adc
inc
jl
adc
out
out
movsb
push
sti
iret
not
cmp
pop
push
dec
mov
aaa
push
fildll
les
outsl
add
add
into
add
test
mov
or
movsl
cmp
idivb
clc
rcrl
dec
outsl
jns
test
add
adc
movsl
call
mov
fcomps
out
xor
jbe
les
call
mov
mov
iret
cs
sbb
test
pop
lods
xchg
cltd
cs
push
lret
lock
cmp
mov
dec
or
add
or
mov
xor
das
cmpsl
cltd
sub
sbb
cmp
pop
sub
aad
lret
mov
outsb
jne
or
sbb
mov
sub
sbb
jb
pop
pop
inc
test
pop
mov
inc
int
adc
xor
jge
test
cld
jg
jecxz
add
xchg
push
jecxz
insl
into
mov
pop
in
or
cwtl
shll
js,pt
repnz
movsb
ds
mov
out
inc
in
inc
loopne
or
xchg
insl
inc
popf
movsb
mov
fs
dec
sub
push
loopne
inc
outsb
test
divl
icebp
inc
jno
shrl
adc
fsubrs
lret
lods
jne
or
aam
cmp
dec
lcall
nop
lea
adc
imul
sbb
roll
fwait
sbb
mov
sbb
stos
xchg
adc
fs
divl
daa
gs
dec
imul
adc
xor
adc
jecxz
cmp
pusha
je
lds
shrl
or
sbb
aad
pop
notl
inc
stos
dec
xor
jnp
or
adc
inc
pusha
rorb
jl
subl
decl
sbb
addl
cmp
int
fadds
imul
jae
dec
pop
mov
push
sub
loope
cmp
ret
xchg
add
jmp
or
jns
or
xchg
push
inc
loope
sarb
ljmp
aas
gs
movsl
jae
dec
sbb
je
leave
out
sub
rcl
movsl
aas
scas
mov
adc
jo
jbe
loope
sub
fcompl
out
add
push
xchg
bound
inc
fcom
xor
lods
cmp
mov
fisttpll
lods
push
es
pop
lods
and
fidivs
add
pop
call
xor
xor
xor
xchg
xchg
shlb
dec
add
add
pop
and
iret
roll
cld
hlt
sti
push
pop
das
sub
push
pop
cmp
pop
or
sub
sbb
cli
cli
loopne
fisttps
pop
je
scas
leave
pop
call
and
gs
push
xor
xlat
sbb
ja
sar
adc
inc
mov
mov
mov
flds
mov
stos
xchg
shll
cmp
jo
pop
push
dec
jecxz
mov
xchg
arpl
push
mov
mov
imul
addl
lods
outsl
call
xlat
adc
aaa
mov
bnd
adcb
jae
push
jmp
fs
push
loopne
xlat
or
add
mov
daa
xor
push
outsb
cmp
xchg
lahf
mov
mov
xchg
or
mov
es
jne
int3
add
jns
push
mov
inc
cmp
rol
xchg
leave
ss
xchg
mov
pop
stos
iret
jno
fiaddl
icebp
dec
aad
push
jle
shlb
sbb
mov
jg
mov
fcmovu
push
lock
in
jle
dec
push
fs
and
pop
lods
mov
mov
addr16
pop
incb
mov
loope
cmc
lock
gs
leave
rorb
shrl
push
inc
stos
adc
cmp
jbe
xlat
fidivrs
jo
fimuls
adc
into
cmp
in
out
movl
pop
test
xchg
scas
xlat
stos
xorl
push
lret
movsb
pop
push
pop
inc
aas
push
push
mov
out
push
lcall
in
xor
lahf
loope
mov
xchg
adc
popa
mul
loopne
scas
movsb
inc
repnz
or
push
in
pop
enter
jecxz
push
lock
loope
mov
in
add
test
or
inc
mov
lods
mov
sbb
loope
fcompl
int3
jmp
lea
test
jmp
inc
push
stc
push
mov
mov
xor
xor
imul
jbe
add
ss
push
test
mov
aad
fbstp
xchg
and
notb
out
sti
sbb
jg
repnz
lea
rcr
cld
sbb
movsl
inc
fs
sbb
pop
mov
mov
in
xchg
push
sbb
pop
xchg
lea
aaa
xlat
data16
or
scas
cmpsb
jno
xlat
jo
jne
test
and
mov
inc
rolb
mov
in
test
mov
or
push
xor
push
fs
test
mov
pushw
ret
cmp
pop
fwait
push
xchg
adc
fstpt
jo
jge
inc
xchg
in
loope
mov
xor
inc
aas
jp
mov
stc
sbb
xchg
mov
stos
inc
or
movsl
imul
jmp
sub
call
popf
test
cmc
inc
mov
movl
movsb
lcall
adc
addps
aaa
out
shrl
pop
faddl
scas
pop
mov
shll
mov
cmpsl
push
mov
popf
js
popa
repz
daa
pop
loopne
pavgw
int3
and
jb
and
sbb
dec
mov
out
lock
inc
xor
out
insb
xor
insl
push
cmc
inc
jg
push
out
sub
mov
insb
sub
jno
xor
enter
push
movsb
or
aaa
mov
popf
loop
test
pop
and
jb
sbb
lahf
pusha
std
pop
mov
pusha
stos
add
mov
in
and
push
cltd
lock
out
sub
inc
ret
push
or
icebp
shrb
mov
rol
add
and
mov
dec
ss
imul
dec
adc
andl
dec
dec
scas
inc
adc
add
add
enter
mov
cmpsb
push
fs
stc
rorl
aaa
ret
iret
cmc
add
or
or
imul
cmpsl
mov
repnz
aam
shll
push
icebp
mov
imul
dec
xchg
loopne
insl
and
cmp
dec
cli
stos
insb
lret
stos
repnz
ljmp
dec
mov
pushf
xchg
andl
mov
ljmp
sub
or
push
mov
or
mov
cmp
xchg
xchg
iret
scas
adc
xlat
outsb
mov
ret
push
dec
pop
mov
xor
orb
mov
cwtl
cwtl
mov
inc
in
inc
loop
cmpsb
push
stc
loop
push
int3
xor
fildl
fisubrl
mov
ret
pusha
xchg
pop
cmc
incl
sbb
stos
rorl
fstps
adc
push
mov
pusha
cli
inc
inc
mov
ja
or
into
cli
push
inc
push
or
push
cmpsb
add
push
or
or
add
cmp
movsb
push
sub
xchg
xor
xor
cwtl
vpopcntd
jb
cmp
insb
sub
sbb
stos
push
and
pop
xchg
fmull
pop
inc
mov
adc
sub
sbb
pushf
test
push
jecxz
js
fisubs
xchg
pcmpeqd
out
movsb
orb
fwait
aas
pop
pop
pop
cmpsl
sub
mov
or
mov
pop
cmp
jno
insb
cld
pop
icebp
fcoml
push
cmp
repnz
in
mov
cmp
test
lret
in
jns
inc
pop
pop
in
pop
ds
sbb
adc
mov
mov
adc
pusha
dec
push
addb
add
out
cld
clc
pop
jmp
sarb
xchg
int3
jmp
call
out
xor
dec
mov
dec
cmp
mov
icebp
mov
cmpsl
xor
rcrl
xchg
push
mov
arpl
pop
adc
mov
gs
or
or
les
or
lret
dec
and
fstpl
mov
cmp
inc
test
dec
imul
cmp
mov
and
shll
std
sbb
mov
jmp
fildl
push
lcall
mov
ret
push
sahf
repnz
sub
pop
js
and
add
dec
daa
cld
sbb
lea
pop
ret
divb
sti
dec
mov
pushf
adc
andl
in
mov
mov
out
outsl
pop
pop
mov
push
mov
call
lods
add
add
jb
lods
jns
mov
adc
and
pop
fldcw
stos
jnp
dec
inc
xchg
in
sub
inc
out
inc
roll
lods
xchg
fs
insb
add
push
mov
add
fsts
hlt
dec
shl
mov
arpl
cmp
xorb
dec
push
int
sub
push
mov
and
xlat
or
jno
out
push
push
mov
mov
test
pusha
pop
cmp
test
jo
sarb
setb
out
movsb
fstpl
movsb
stos
add
mov
pop
xor
xlat
fcompl
or
xor
push
jno
push
adc
add
mov
fnstcw
cli
lods
in
or
jnp
mov
and
push
jns
pop
mov
cmc
es
inc
sub
pop
push
mov
imul
adc
mov
sub
pop
pop
leave
ss
les
cmpsl
inc
out
hlt
pop
jno
sub
pushf
mov
inc
add
and
dec
xchg
pusha
or
lods
gs
lock
sub
inc
stc
imul
cld
jno
mov
pusha
in
insb
cmp
clc
aam
sub
sub
adc
mov
lods
outsl
fidivl
scas
adc
add
lcall
mov
loope
stos
lods
cmp
cli
dec
dec
mov
push
dec
mov
mov
mov
adc
adc
in
gs
into
into
or
add
mov
insl
cwtl
out
inc
add
divl
jno
mov
mov
jno
pop
int3
pop
pop
mov
inc
sbb
sbb
int
mov
mov
sub
cwtl
pop
cmp
push
push
aam
jle
stos
insl
dec
mov
fwait
bound
dec
xorl
sbb
inc
enter
fnsave
fcomps
test
xchg
jg
and
into
enter
out
dec
out
int3
dec
push
push
mov
jge
xor
out
dec
data16
aam
sub
inc
mov
jl
arpl
push
cmp
pop
jno
push
mov
xchg
test
xor
popf
sub
test
lahf
add
cmp
ds
or
mov
mov
xor
nop
pushf
mov
cmp
sub
sahf
mov
add
dec
sti
in
add
xchg
lahf
or
cld
in
xchg
cs
add
imul
outsb
fidivrs
xchg
mov
rcrl
push
mov
and
and
pop
and
mov
in
mov
jnp
cmpxchg
add
int
xchg
adc
dec
cmp
sub
inc
loope
ja,pn
mov
pop
mov
es
imul
leave
cwtl
ss
jo
sbb
sbb
pop
jne
pop
dec
pop
pop
inc
movsl
sub
sub
negb
and
mov
das
into
mov
lahf
pop
imul
adc
xor
adc
outsb
inc
mov
or
in
xchg
add
aas
in
js
test
lahf
pop
test
xor
repnz
outsl
push
add
push
dec
mov
das
xor
push
in
in
subb
add
rcrb
scas
inc
test
ss
cltd
sub
inc
xorl
jp
rolb
add
and
fwait
add
jl
test
fistps
xchg
adc
mov
sbb
add
push
into
out
subl
pop
mov
add
movsb
pop
or
push
push
out
pop
inc
in
jae
imul
or
inc
ds
dec
sub
mov
fldl
icebp
fadds
sub
dec
ljmp
jns
and
pop
movsb
ljmpw
add
test
pop
push
cmp
rcrb
sub
retw
add
mov
fcoms
out
inc
cwtl
xchg
clc
cmpsb
mov
inc
mov
jo
imul
leave
jl
mov
fmull
cmpb
xchg
arpl
mov
jno
pushf
add
push
loopne
movsl
loopne
jae
sbbl
in
push
movsb
fwait
mov
or
mov
push
sub
push
test
jp
jnp
cmpsl
push
push
mov
xchg
xor
jb
inc
xchg
xchg
push
push
lds
icebp
mov
pop
mov
cmp
add
sub
push
ljmp
or
ret
lods
jne
fdivrp
sub
pop
repnz
ds
mov
dec
out
das
inc
xchg
push
push
push
testl
das
or
xlat
scas
repnz
nop
aas
xchg
mov
leave
mov
jecxz
and
push
outsl
ror
mov
mov
fs
repnz
mov
data16
jp
sub
leave
dec
orb
rorl
repnz
ss
stos
repnz
out
mov
pop
or
test
mov
arpl
dec
push
xchg
ja
mov
cmpsl
lahf
das
jl
and
jae
insl
adc
xchg
sub
aas
push
nop
sub
mov
jo
add
lcall
in
imul
add
jns
repnz
jge
xchg
xchg
int
xchg
nop
sbb
cld
lret
insb
insl
or
push
mov
fs
mov
or
mull
push
and
das
inc
jbe
sti
jmp
mov
fcompl
inc
dec
dec
cmp
rcrb
jne
xor
ds
sbb
repnz
dec
scas
mov
sti
enter
out
cmp
mov
jae
adc
outsb
inc
inc
lcall
test
test
lds
repnz
adc
jmp
sti
test
pusha
adc
sti
popa
jns
es
or
das
insb
pusha
inc
xor
loope
lds
xchg
sub
dec
mov
sub
pop
outsl
lret
xchg
jg
dec
mov
or
jge
mov
ds
in
shlb
insl
test
pop
leave
pop
pushf
or
mov
aam
nop
mov
pop
repnz
dec
mov
fmuls
imul
inc
sbb
jg
imul
inc
test
icebp
push
sbb
mov
ss
mov
mov
aas
in
mov
push
jo
fcmovnb
cmp
or
mov
cld
sub
test
sti
fs
mov
sbb
cmp
ret
xor
pop
pop
inc
adc
sbb
int3
leave
fwait
sbb
adc
js
and
mov
stc
pusha
and
dec
int3
or
xor
test
sarb
jmp
cmpsb
sbb
fdivrs
lcall
mov
int3
sub
pop
shl
push
pop
adc
jbe
push
jl
loop
xor
and
add
pop
or
push
sbb
push
and
loope
stos
lea
cmp
ss
xchg
inc
push
jg
cmp
ljmp
and
inc
das
les
inc
sub
mov
out
scas
push
pop
out
pop
dec
add
jbe
ljmp
add
repnz
push
loope
push
ficoms
xor
ss
pop
insl
push
insl
and
mov
cmpsl
adc
dec
push
mov
sub
arpl
ljmp
icebp
cmpsl
aaa
nop
mov
jle
cmc
iret
sub
adc
pop
adc
cli
clc
out
adc
add
xor
test
pop
mov
and
lcall
loopne
cmp
insl
add
mov
icebp
cltd
data16
ljmp
push
int3
mov
out
sub
repnz
call
xor
mov
in
push
mov
jno
jl
dec
notl
push
out
andl
nop
cmp
ss
xor
jo
mov
jnp
imul
nop
jb
dec
mov
js
out
jecxz
ret
test
sbb
inc
cwtl
mov
call
insl
or
push
pop
icebp
shl
pusha
push
fwait
loope
dec
mov
or
into
and
mov
movsl
stc
andb
xor
and
push
aad
lea
stc
and
imul
popf
ss
adc
jnp
or
jbe
mov
gs
cmp
stc
sahf
addb
pop
xor
xor
mov
or
pushf
pop
fcoms
and
mov
jnp
xor
add
and
sbb
js
add
sbb
add
lods
mov
push
push
jns
stos
popf
xor
andb
les
mov
jae
push
sbb
ret
pop
lea
fldl
aad
ja
pushf
dec
inc
push
mov
dec
push
xchg
rorb
mov
pop
and
fwait
bswap
pop
pushf
adc
add
mov
xchg
fdivr
pop
loopne
popl
fnstenv
ja
jmp
pusha
out
addr16
cmp
pop
xor
das
cmp
cmp
dec
dec
lock
adc
inc
ret
sti
clc
in
icebp
ljmp
rol
or
pushf
or
repz
mov
mov
clc
dec
mov
sbb
jnp
add
int
sbb
stos
movsl
sbb
mov
jae
xchg
lods
lods
cmp
icebp
sti
sbb
stos
add
rcrl
jo
inc
imul
stc
jle
mov
inc
dec
lret
pop
mov
out
and
pop
cmp
sbb
xor
or
pop
arpl
adc
pusha
mov
ror
xchg
cmp
pop
fiaddl
ljmp
push
push
repz
inc
sbb
les
sbb
cmp
inc
and
test
jg
mov
cmp
inc
push
mov
ja
imul
jmp
test
and
ljmp
and
andb
je
mov
xchg
cmp
fimull
pushf
lock
je
push
lret
adc
loope
xor
sub
jmp
test
cmp
mov
fnstcw
and
lock
loopne
cs
push
pop
inc
cmp
xchg
pop
ds
mov
mov
call
cwtl
scas
mov
fidivs
jecxz
insl
ds
shll
dec
sti
repnz
mov
xor
fbld
xorps
mov
cmc
nop
pop
mov
mov
cwtl
lcall
xchg
jge
push
adc
or
mov
xor
fisttpll
lret
mov
andl
test
push
fld
jp
dec
push
cltd
and
or
dec
in
jbe
xchg
rorb
sub
ljmp
push
cmpsb
lea
shlb
into
mov
xor
imul
pop
stos
xor
cmp
call
mov
xor
jg
dec
cmp
push
les
arpl
dec
lock
into
or
popf
or
dec
sbb
gs
rclb
jnp
and
dec
mov
div
test
xchg
adc
stc
daa
inc
rcll
inc
iret
nop
jge
mov
or
in
frstor
shlb
jae
lds
loope
pop
and
leave
mov
and
push
push
mov
mov
sbb
jg
repz
mov
lods
adc
xor
into
in
sbb
and
pop
out
icebp
arpl
and
and
js
and
cmp
stos
test
fdiv
dec
cmpxchg
inc
mov
mov
in
lods
pop
pop
mov
mov
lods
mov
sbbl
lcall
mov
imul
inc
adc
jp
enter
pushf
hlt
jne
out
js
sbb
lds
ficompl
pop
xlat
sub
arpl
jne
lahf
rcrl
jg
add
jle
xor
adc
fiadds
loope
out
or
adc
dec
fdivs
push
xor
addb
jns
mov
mov
jmp
stos
shrb
jmp
adc
addr16
decb
int
lret
mov
push
divb
xchg
scas
out
shlb
test
sub
push
sahf
scas
xchg
add
xor
fcomp
adc
scas
cmp
cmp
in
xchg
pop
test
mov
in
cli
xorb
xchg
push
dec
add
das
pop
call
jns
test
cmp
les
xchg
std
test
in
outsb
fdiv
out
rolb
jp
fld
je
lods
pushf
pop
lods
dec
nop
dec
fcmovu
pop
cmpsl
sbb
ret
jmp
cmpsb
push
ss
sbb
and
adc
add
add
faddl
cmpsb
bound
loope
jmp
pop
dec
pop
fbstp
inc
xor
lea
add
and
mov
xor
pop
negl
out
dec
mov
mov
jg
lods
fisubl
sarl
mov
pusha
and
jb
repnz
leave
andb
std
pop
test
lds
inc
repz
cli
cmpsb
ss
bnd
adc
jl
movsb
lcall
pop
dec
fcom
dec
push
ret
inc
push
rcll
xchg
cld
pop
xchg
xchg
push
adc
loop
dec
bound
call
adc
mov
xchg
dec
cmp
out
push
testl
ret
adc
xor
and
inc
insl
rorb
mov
bound
mov
test
sbb
push
xchg
xor
jg
out
daa
mov
push
lcall
loopne
out
cmp
sbb
rorb
xchg
mov
inc
jo
gs
or
shl
cmpsl
stos
xchg
enter
out
dec
rolb
sbb
mov
ljmp
in
or
inc
in
add
std
and
pop
clc
pop
sarl
mov
scas
ret
sarb
add
int
and
test
jae
fisubl
pop
mov
fmuls
popf
decl
xchg
inc
fisubrs
cltd
neg
xchg
outsb
roll
cli
in
cmp
adc
arpl
fldt
inc
inc
mull
movsb
sub
jmp
sub
pop
push
sbb
add
pop
iret
loop
scas
ss
ja
imul
outsb
loopne
jl
cmpl
cmp
bound
test
cmp
and
insb
mov
xchg
negl
movsb
jmp
mov
into
jne
clc
cmpl
mov
daa
cmp
ret
mov
adc
and
jno
addr16
inc
pushf
sbb
out
hlt
jle
or
lods
insl
cli
enter
stos
mov
jmp
pushf
xchg
loope
fstpl
mov
dec
divb
in
pop
jmp
push
and
dec
lcall
mov
imul
lods
add
stos
repnz
xchg
jle
xchg
fisttps
adc
popa
push
movl
jnp
jmp
xchg
fldenv
mov
mov
push
dec
jne
rcll
mov
leave
or
push
out
fistpll
lods
or
stc
adc
push
lock
cmp
jl
shrb
xor
jle
popa
stos
add
dec
jecxz
and
std
xlat
mov
push
cmpsb
mov
and
fiadds
pop
sub
js
clc
push
je
aam
shlb
xchg
mov
xchg
adc
xor
cmp
jecxz
test
inc
add
stos
dec
sub
add
out
repz
leave
out
push
lods
cmp
dec
dec
mov
pusha
mov
dec
in
sub
daa
ret
frstor
arpl
push
in
ljmp
add
jae
gs
push
insb
inc
pop
negb
jb
fistpl
test
movsl
repz
pop
mov
arpl
sub
sub
jmp
add
mov
cltd
sbb
pop
movsb
aas
in
push
push
adc
and
into
js
mov
mov
and
cwtl
push
pop
sbb
jo
inc
lods
xlat
mov
call
rorl
test
cmp
data16
push
imul
loopne
inc
lcall
pop
sahf
inc
pop
fisttps
int3
mov
ficomps
sbb
xlat
sti
mov
imul
xchg
loop
mov
out
enter
sub
shll
dec
or
push
daa
cmc
repnz
mov
push
les
pushf
cltd
popf
xor
inc
data16
sub
add
jmp
inc
sarl
mov
shlb
inc
xlat
sub
xchg
adc
fistpll
mov
inc
ljmp
add
jmp
sti
and
dec
xor
ffreep
lcall
stc
ss
mov
rclb
jnp
dec
loopne
cli
and
xor
dec
fildll
sbb
into
lds
shlb
shl
js
out
jmp
xchg
nop
stos
aaa
push
jg
or
sub
mov
add
in
inc
and
pusha
add
js
sub
xor
jge
orl
lcall
jp
push
aas
and
xor
pop
popa
adc
dec
xor
cmp
jg
or
jge
or
adc
sahf
jmp
sti
dec
ret
cmpsb
sbbl
cmpb
mov
iret
hlt
mov
insl
sbb
stos
and
push
inc
imul
mov
adc
sub
xor
xlat
fidivs
push
xchg
mov
test
xchg
sub
negl
jns
jnp
int
movsl
mov
loop
enter
popa
idivb
pop
and
mov
add
xchg
push
xchg
int
add
lds
cltd
jae
nop
jp
fcos
mov
sbb
push
add
je
sub
mov
daa
xchg
imulb
das
movsl
shrl
movsl
mov
inc
shll
mov
or
xor
repz
aam
and
shrl
adc
cmp
mov
lahf
dec
sbb
cmpsl
push
sbb
mov
add
sti
cmp
cli
push
cmp
pop
lret
aas
mov
mov
stos
pop
cmp
jg
fsubl
dec
jle
lds
cmp
testl
mov
xor
ja
sub
jmp
jge
std
push
data16
inc
sub
sbb
in
mov
loope
adc
xorl
lods
jns
dec
gs
insb
jns
sub
jbe
xchg
adc
sub
je
inc
bnd
add
pop
adc
sbb
or
mov
add
cmp
loope
out
push
pop
jecxz
jnp
pop
xor
outsl
adc
dec
xchg
pop
mov
sub
or
pop
ret
sub
inc
xchg
xor
repnz
adc
pop
cld
jo
add
push
jae
mov
test
pop
pop
or
fs
or
push
pushf
leave
jg
scas
mov
mov
sti
push
xor
jns
xor
loope
or
repz
inc
jns
and
cmpl
cmp
outsl
mov
cmp
inc
mov
jns
xor
insl
push
shll
jge
sub
sti
inc
xlat
ja
xor
addl
mov
mov
pop
jmp
sti
push
or
xchg
sbb
sub
jno
adc
adc
negl
jno
pmullw
cltd
xor
sub
xlat
sbb
lret
mov
out
jecxz
sub
adc
push
cld
inc
test
mov
iret
popa
mov
jmp
or
sbb
out
das
push
mov
rorb
hlt
mov
cmp
addr16
mov
xchg
adcl
jle
xor
imul
cltd
fdiv
and
out
cmp
xlat
add
mov
lds
xchg
and
pop
dec
jae
cmp
pusha
pop
mov
xchg
push
sub
int3
or
mov
dec
jle,pt
ret
mov
mov
loop
inc
cmp
lds
mov
xor
and
push
xchg
rolb
cltd
xchg
call
push
inc
in
bound
jns
sub
inc
push
lds
es
and
inc
mov
iret
scas
push
adc
rcll
xor
outsb
mov
pop
and
jle
mov
daa
imull
pop
add
jge
xchg
add
xor
mov
dec
dec
jmp
mov
repz
mov
sub
fbstp
xor
xor
aam
shl
push
inc
mov
or
jmp
mov
mov
fwait
aaa
pop
int3
adc
insl
and
mov
lea
scas
fldenv
test
roll
sbb
je
mov
xlat
push
lahf
pop
xchg
mov
or
sbb
sub
jecxz
xlat
sub
int
in
add
mov
or
bound
bound
jae
xor
inc
jns
add
cli
or
mov
dec
test
aas
xchg
lods
inc
pop
in
int3
inc
jne
mov
sarl
mov
fwait
pop
add
sbb
adc
mov
jno
inc
jecxz
data16
gs
push
jbe
insl
and
into
out
jg
inc
fidivl
dec
dec
xchg
jge
xor
stos
mov
push
aaa
jecxz
push
inc
cmp
cmp
bound
adc
adc
in
dec
je
jbe
cmp
ja
pop
ljmp
jo
inc
jp
in
pushf
jno
push
mov
xchg
sahf
arpl
insb
aas
dec
mov
adc
mov
ret
pusha
cmp
arpl
outsb
insb
jnp
mov
push
mov
enter
pop
rolb
into
pop
dec
xchg
jnp
inc
shll
aas
adc
hlt
and
icebp
leave
pop
mov
and
mov
repnz
fsts
pop
add
mov
sbb
negb
test
xchg
rcrl
inc
aad
ljmp
push
push
and
jne
mov
lahf
jg
adc
cmp
in
fcmovne
pop
mov
jne
loope
mov
fnstcw
pop
lods
lcall
cmp
ljmp
fisubl
and
jns
add
imul
clc
xchg
mov
scas
adc
xchg
sub
aas
inc
xchg
pop
mov
inc
mov
int
xor
in
int
icebp
inc
mov
and
mov
jae,pt
es
sahf
or
frstor
xadd
lock
imul
movsb
idivl
jns
jbe
into
push
pop
sub
xor
mov
test
jo
ja
push
pop
addb
popa
das
adc
jae
das
cwtl
insb
loopne
ja
shrb
fstps
sarb
mov
stos
and
jb
mov
shlb
shld
sub
rcll
arpl
inc
fldt
repz
andl
inc
outsb
int3
call
fisttpl
or
fidivrs
into
mov
xchg
cmp
std
jecxz
outsb
movsb
lock
insb
and
mov
leave
jo
and
add
push
cmpl
mov
mov
sahf
mov
shl
cmpsb
cmpl
call
jl
mov
stos
rorb
jae
cmp
lds
push
add
leave
stos
pop
sbb
add
aaa
pop
scas
sub
stos
shl
fimuls
sbbb
repnz
cmpsb
gs
xchg
rcll
sub
or
sbbb
xchg
xchg
dec
inc
mov
rolb
or
into
fcoms
or
xor
inc
mov
fistpll
rcrb
mov
cld
lods
outsl
decb
popa
sub
lcall
push
add
ret
jecxz
push
call
int3
lods
push
sub
cmpl
xor
aaa
jno
es
je
out
sub
aad
push
add
sub
xchg
sub
std
inc
pop
fmuls
shrb
xchg
ss
push
pop
popa
addb
push
stc
jno
aad
cmp
je
mov
push
out
inc
stc
mov
cmp
call
mov
mov
dec
push
stos
xor
dec
xchg
mov
sar
push
call
dec
cs
push
test
push
fucomi
fildll
sti
les
add
fsubrp
inc
pop
pop
js
cs
lcall
test
mov
mov
mov
fnstsw
add
pop
faddl
push
mov
mov
sarl
xor
xchg
nop
sti
mov
inc
mov
sub
hlt
andb
out
and
xor
sti
ret
mov
dec
test
push
jge
popa
out
inc
imul
in
pop
insl
popa
xor
into
stos
popl
fwait
adc
push
push
insl
je
inc
xchg
cli
and
addb
push
inc
imul
int
fucomi
pop
and
test
cmp
add
stc
lods
rcll
xor
call
jp
pop
push
cmpsl
xchg
inc
pop
cmp
cld
repnz
cwtl
cmp
adc
add
mov
mov
and
inc
scas
add
mov
stos
mov
jbe
push
push
gs
loopne
cmpsb
mov
push
push
adcl
mov
adc
jle
mov
push
mov
cmp
cltd
sbb
add
hlt
mov
jne
add
xor
add
mov
dec
fcmovbe
js
or
mov
fsubl
xor
nop
aas
aaa
int
mov
mov
mov
xlat
ljmp
sbb
jne
ret
mov
dec
sti
sarb
inc
add
add
lahf
loope
fistps
das
push
cmp
mov
fwait
mul
repnz
lret
or
sahf
cmp
lods
mov
arpl
cwtl
mov
jb
xchg
push
repz
into
mov
mov
lcall
and
ljmp
xchg
sub
xchg
push
fsubl
adc
in
loop
vpshuflw
call
mov
sub
dec
fwait
push
adc
xchg
inc
fisubs
rcrb
push
repnz
xor
in
pop
outsl
push
ret
pop
ds
mov
int3
data16
cmp
jae
inc
adc
mov
push
cmp
dec
movsl
dec
xchg
test
aaa
cmp
jbe
cltd
dec
fisubs
loop
mov
test
into
xchg
lcall
pop
les
lods
aad
enter
mov
sbb
scas
fidivrl
sarl
aaa
jle
add
scas
into
and
mov
adc
imul
test
ret
xchg
cmp
and
push
lcall
les
cmp
ss
xor
push
jae
stos
mov
inc
mov
clc
mov
push
lea
mov
into
sbb
cmp
jbe
adc
add
cmp
mov
and
test
or
mov
imul
add
xchg
pop
and
and
and
mov
inc
movsb
out
push
lds
call
lock
notb
add
je
and
je
mov
repnz
xor
sbb
ficompl
sti
dec
and
mov
cmp
cmp
xor
aaa
pop
mov
and
mov
cmp
pop
xchg
xor
sub
testl
pop
xor
cmp
mov
lds
stos
mov
shlb
bound
xchg
cld
mov
outsb
xchg
mov
dec
inc
jne
int3
mov
iret
dec
insl
lret
jne
outsb
movsl
or
push
out
dec
adc
sub
addl
jo
cmpsl
jmp
addb
xor
dec
je
inc
and
dec
int
daa
pop
inc
pop
data16
ficoms
jl
mov
mov
mov
mov
andl
daa
cmp
cmc
mov
ja
popa
popf
ja
sub
pop
insb
mov
sbb
inc
dec
scas
ja
scas
loop
cs
repz
mov
inc
xchg
ja
jbe
stc
rcr
scas
jle
aaa
bound
aaa
mov
xchg
lret
test
push
scas
jae
js
lock
fnstcw
lea
gs
or
jb
je
adc
and
pop
jg
ret
jmp
mov
xchg
mov
lcall
imul
xor
enter
in
pop
sub
or
ret
mov
stos
ss
dec
cld
cmp
dec
xchg
jae
inc
cs
fs
and
in
sbb
lea
iret
out
mov
lret
popa
out
and
mov
enter
dec
inc
loope
fwait
cwtl
jl
sub
cmc
inc
dec
jb
cmp
popf
sbb
mov
jp
adc
invlpg
dec
add
clc
loop
out
cwtl
adc
sbb
and
rcrl
test
cmp
nop
test
clc
enter
movsb
xor
mov
or
repnz
dec
push
mov
adc
push
nop
cmp
jb
loope
lods
daa
clc
push
adc
pop
test
ret
xchg
ret
pop
inc
insb
push
xchg
or
sub
mov
xor
pop
cmp
test
push
dec
aam
inc
dec
mov
jge
dec
pop
inc
jecxz
push
mov
xor
into
push
sbbl
jle
frstor
add
sarl
xchg
cld
sbb
sti
lcall
outsb
xor
icebp
mov
frstor
int
sbb
jl
fbld
jle
iret
sbb
mov
and
cmp
add
mov
sub
cmp
scas
aaa
inc
mov
push
mov
and
jecxz
xchg
push
aam
xchg
sbb
aas
cmp
push
call
xor
adc
addr16
adc
adc
sub
mov
in
test
jmp
aas
mov
in
mov
xchg
xchg
or
xchg
xor
adc
loop
or
add
aam
js
jge
cltd
sbb
mov
ss
ficoms
cmpsl
pop
mov
movsl
fwait
adc
in
jge
cs
lock
out
hlt
andl
movsb
dec
and
and
lods
pop
cmc
jns
aas
movsb
adc
lcall
insb
push
mov
jno
in
stc
addr16
fimull
jno
mov
pop
cltd
adc
sub
in
pop
pop
inc
adc
orl
sub
ret
and
lds
sbb
lret
or
fidivrl
push
movsl
mov
push
inc
ljmp
bound
push
mov
js
repz
cs
stc
imul
push
sub
rclb
test
arpl
nop
jge
stos
mov
mov
std
sbb
enter
sbb
cmp
and
xchg
repnz
pop
xor
pop
ss
dec
test
sbb
sbb
mov
xchg
pop
xor
xchg
nop
lods
add
cmp
push
pushf
rorl
adc
idiv
iret
mov
stos
sahf
fwait
xchg
lock
mov
fstl
pushf
pop
sub
scas
sbb
stos
dec
jno
and
mov
push
jp
jb
mov
push
fsts
dec
ds
fcompl
sbb
inc
cltd
out
add
lock
mov
mov
jge
mov
or
jae
or
scas
movl
xchg
sub
xor
xchg
push
mul
rorb
xchg
pop
jne
xlat
insl
js
push
into
faddl
movsl
lcall
je
pop
test
pop
fmuls
lds
push
out
and
xor
or
or
pop
das
aad
aas
jp
push
sub
andb
dec
mov
sub
ret
and
dec
fisubrl
lret
lods
rorb
mov
das
test
push
lods
stos
arpl
les
cltd
xor
xchg
ficoml
push
outsb
mov
or
adc
rorb
cltd
lahf
push
cmp
nop
mov
pop
mov
jo
cmpsb
lds
stc
xlat
cmpsl
scas
xor
aam
mulb
mov
insl
es
sub
popf
scas
inc
scas
and
lret
lds
mov
mov
and
and
std
push
xchg
mov
sahf
leave
fldlg2
mov
mov
leave
es
mov
cmp
xchg
imul
jecxz
popa
aad
lret
xchg
add
add
sub
shlb
xchg
int
kmovb
aam
xchg
or
inc
cltd
ficoms
mov
cwtl
cld
adc
repnz
sbb
sub
cltd
outsl
into
das
lret
out
pop
inc
xchg
hlt
sahf
xchg
ja
ja
push
xor
popa
divl
fimull
scas
es
ret
fldl
test
shlb
pop
dec
dec
xchg
dec
jg
adc
jg
jge
lea
add
je
xchg
inc
leave
stos
fists
roll
ss
push
loopne
int3
lock
and
xchg
iret
and
cld
xchg
gs
jbe
add
dec
call
sub
mov
fdivr
loope
das
mov
rcll
push
cmp
cmp
je,pt
sbb
lea
xor
mov
or
clc
adc
push
mov
xor
cmp
inc
inc
and
test
mov
adc
adc
add
jne
pusha
mov
int
aam
inc
xor
xchg
and
jp
dec
and
rorb
xchg
movsb
sbb
data16
mov
iret
data16
mov
into
sub
cmpsb
cmp
xor
lds
lret
loop
and
aam
in
adc
pop
cmpsb
mov
sub
ret
and
loopne
dec
test
add
cmpsl
jb
pop
das
loopne
cmp
push
mov
push
icebp
ljmp
add
mov
xor
std
testl
pop
mov
sbb
dec
mov
ljmp
es
jne
push
addl
fadd
fcomps
scas
jg
aad
and
xor
lods
in
push
xchg
test
xchg
add
cs
out
xchg
push
xor
loope
mov
loope
xchg
add
bound
fdivrl
inc
lds
repnz
sbb
or
cmp
in
jg
mov
dec
sbb
pop
mov
sbb
je
ficomps
scas
aaa
popa
sub
in
enter
sub
cmpb
add
cmp
icebp
hlt
das
or
aam
sti
push
xchg
ljmp
cmp
mov
push
in
sub
pop
out
jae
jnp
shlb
stos
out
inc
test
int
loope
mov
mov
mov
popa
and
loopne
or
movsl
and
jo
out
cltd
add
mov
ret
inc
stos
enter
ficompl
rcrl
inc
and
or
and
hlt
mov
stc
jmp
nop
jae
ljmp
es
lcall
xor
in
cltd
xchg
sarb
rcr
mov
ljmp
cmpsb
adc
sti
in
or
lods
push
xchg
mov
repnz
bound
sbb
inc
gs
cmp
mov
pop
outsb
mov
and
imul
int3
or
inc
lcall
into
fimuls
loop
lahf
inc
pop
adc
jle
mov
daa
fisttpl
adc
and
stos
and
push
sbbb
cmpb
dec
sarl
cmpl
iret
daa
mov
sub
in
add
je
and
xchg
xchg
adc
push
rclb
outsb
xchg
push
fs
jne
and
mov
cmp
scas
out
dec
ljmp
jo
push
mov
popa
addr16
adc
out
inc
jae
imul
lret
mov
mov
cli
orl
repnz
insb
mov
xchg
pop
cmp
stos
xchg
add
dec
mov
mull
loopne
adcb
fsubl
daa
xor
and
and
mov
mov
or
movups
sub
nop
mov
mov
jle
and
push
jb
jno
xchg
pop
and
mov
leave
and
gs
mov
aam
push
js
mov
cmc
adc
out
mov
int3
xlat
aaa
sub
lds
jl
in
or
loopne
les
cs
mov
rcl
dec
sub
jl
sub
sbb
movhps
in
mov
aas
jo
xor
fs
fisubrl
jbe
xchg
pop
mov
xchg
ds
mulb
mov
xor
dec
mov
cmp
stos
into
std
dec
lea
jo
pusha
and
subl
adc
sbb
jp
mov
push
xchg
jae
shrb
popf
jne
pop
pop
popf
and
inc
ret
mov
push
mov
lret
lcall
mov
push
out
ds
test
insl
and
ja
mov
push
roll
outsb
cmpsl
les
jecxz
iret
sbb
sbb
jnp
jne
inc
sub
into
dec
push
xchg
xchg
and
push
daa
ret
test
pushf
popa
push
lods
scas
mov
cmpsl
test
test
cmp
push
push
mov
stos
pop
sub
inc
cld
clc
in
cmp
push
cmpl
loop
push
popa
and
je
orb
pop
pop
xor
imul
les
cmpsl
into
sub
subl
mov
sub
adc
in
loope
outsb
insl
cmp
lea
scas
cmovo
subl
jl
add
loop
jge
stc
fwait
psubsw
pop
ljmp
inc
sbb
das
sbb
xor
push
push
cmp
pop
in
jg,pn
imull
stos
adc
fisttpl
in
sub
mov
lea
loop
push
movsl
xor
fldenv
sub
ja
cmpsl
jmp
jg
fnstenv
imul
mov
xchg
jmp
or
and
mov
pop
xor
mov
pop
push
jl
sbb
sub
jb
mov
jmp
aaa
lods
inc
xor
add
cmp
push
sti
test
inc
or
hlt
nop
mov
pop
sub
adc
arpl
lds
sti
das
lods
sub
in
sbb
mov
cmc
or
inc
mov
popf
rcl
adc
cltd
inc
pop
cmpsl
lds
pop
test
push
in
pop
stc
and
cmpsb
test
sarl
adcb
mov
aas
cmpsb
xchg
mov
mov
sub
and
mov
xchg
int3
inc
mov
xchg
sbb
hlt
cmp
adc
aam
int
into
jg
leave
cmc
sbb
mov
das
cli
dec
cld
vpunpckhdq
push
or
dec
xor
inc
add
int3
gs
fimuls
cmp
sbb
aaa
or
jmp
pop
cmp
adc
xor
push
iret
dec
inc
mov
push
mov
mov
xchg
sbb
jo
mov
dec
rclb
outsw
jp
arpl
jb
icebp
cmc
add
dec
pop
aam
clc
push
mov
dec
xor
lahf
cwtl
pop
jne
mov
push
sub
sub
ret
in
cmp
in
loopne
jmp
push
xchg
push
popf
jo
dec
repnz
pushf
pop
fcmovnb
adc
cltd
mov
shlb
xor
or
dec
pop
imul
xchg
mov
test
clc
in
sahf
into
std
rclb
js
xchg
add
data16
xor
mov
and
xchg
cmp
ret
xlat
repz
jno
test
xchg
jge
dec
scas
push
aas
mov
add
xchg
ljmp
pop
insl
xor
dec
outsb
add
movsb
stc
or
pop
sub
cmp
jo
aad
outsl
fstpl
pushf
mov
cmp
daa
fnstcw
xor
cmpsl
sub
int3
push
cltd
mov
inc
icebp
xchg
call
lods
outsl
fwait
adc
jmp
cmp
cli
push
cmpsl
and
pop
xchg
xchg
sahf
cltd
pop
cli
jg
xchg
insb
cmpsl
or
scas
jge
inc
nop
pop
mov
clc
push
adcb
xor
cmp
clc
mov
sub
out
xor
fistps
fs
repz
sub
outsl
ret
rolb
addr16
out
sar
aam
mov
push
popa
dec
cmp
and
mov
xrelease
mov
outsw
cmpsl
jns
inc
pop
shrl
lret
out
sbb
arpl
pop
or
insb
and
inc
dec
cs
push
xor
push
das
cmpl
addb
push
lcall
cmp
mov
in
mov
jmp
push
pop
xchg
test
cs
dec
adc
test
mov
shlb
test
aam
call
test
xor
js
xchg
xchg
sbb
fwait
das
frstor
lea
fmuls
fcoml
ja
xchg
xor
in
sbb
fsubp
cmp
adc
xlat
xchg
mov
mov
xor
mov
fiaddl
rcr
ret
add
xor
sbb
ds
loopne
mov
cmp
out
sub
mov
or
dec
and
pop
adc
pop
lcall
inc
pop
or
fistpl
jno
inc
scas
jge
jle
mov
and
lahf
cmp
dec
push
sbb
fsubrs
adc
inc
push
fcom
mov
outsb
push
fnstsw
jg
cmp
pop
dec
testb
insb
mov
inc
sub
ret
rorl
test
fwait
xchg
cmc
sbb
lods
test
into
cmp
mov
pusha
sub
push
pop
push
jae
xlat
popa
xor
dec
das
nop
jl
mov
adc
mov
mov
sub
std
mov
inc
sub
sbb
fbstp
scas
inc
push
xlat
scas
xor
inc
imul
mov
iret
xor
sub
das
in
sbb
ret
inc
fnop
jnp
mov
out
inc
mov
sub
pop
xchg
push
bound
or
cmp
stc
pop
in
lds
xchg
and
mov
jecxz
mov
testb
pushf
jnp
xchg
push
jns
mov
ja,pn
and
push
out
adc
inc
dec
push
movsl
mov
das
shlb
or
dec
loopne
xchg
inc
fsubrs
xor
mov
movsb
insl
pop
sbb
xchg
adc
shl
scas
and
mov
mov
and
jmp
jmp
les
mov
pop
inc
sahf
and
pop
cmp
mov
dec
pop
jle
test
lods
pop
das
sub
lods
sub
mov
pop
cmp
jbe
fidivrs
loope
dec
rcll
xchg
mov
sahf
mov
xor
lahf
or
pop
lock
sub
or
outsw
ss
shr
ljmp
int
mov
std
in
xchg
inc
in
sbb
cld
rclb
mov
mov
mov
push
pop
or
idivl
pop
add
jecxz
enter
fildll
push
stos
lock
lods
lods
cmp
push
pop
inc
mov
or
mov
push
popa
mov
jecxz
mov
decb
incl
jbe
daa
popa
sub
add
loopne
in
mov
movl
mov
adc
cmpsl
add
add
call
mov
xlat
test
push
jae
xor
scas
mov
cs
aad
push
fucomi
push
dec
and
sbb
lods
jmp
jmp
call
fidivl
mov
mov
fcmovnbe
lods
add
pop
scas
mov
mov
in
push
pushf
xor
cmp
pop
insb
or
mov
adc
mov
in
les
xchg
sbb
push
cmp
in
pop
inc
stos
fucomp
cwtl
std
lcall
sbb
mov
pop
jp
popf
shlb
xor
jg
jne
inc
movsb
cs
jmp
lods
lahf
mov
es
sub
mov
leave
shll
test
jmp
or
adc
ljmp
out
bound
hlt
sub
popf
xlat
lret
sub
imull
out
xor
in
pushf
jge
call
jp
cmpsb
lcall
mov
push
mov
inc
addb
cmp
pop
xor
inc
or
sbbl
std
cmp
or
jp
into
pop
data16
arpl
mov
into
lods
inc
and
xor
sub
pop
daa
rcrl
mov
pop
rcrb
mov
sbb
xchg
jle
das
je
lretw
aam
es
inc
mov
xchg
jo
std
mov
lods
in
cmp
inc
out
das
inc
imul
lods
lea
aas
sbb
insl
jbe
sbb
jb
pop
lea
cmc
sbb
sub
insl
or
negb
testb
jmp
es
mov
pop
jne
std
insl
xchg
add
or
enter
je
push
hlt
cmp
inc
scas
mov
cmpsl
xchg
and
fwait
pop
ret
roll
and
hlt
adc
test
jmp
push
js
pop
roll
pop
outsl
add
out
fcomi
mull
ja
cwtl
fsubl
mov
push
fbstp
fildl
jne
cmp
in
hlt
mov
adc
shlb
inc
int3
leave
mov
shl
fsubrl
xchg
in
xor
imul
out
xchg
add
inc
sahf
add
movsb
sbb
mov
mov
daa
ljmp
sbb
cld
cli
ljmp
out
pop
push
dec
imul
icebp
int3
adcb
mov
movsl
xchg
jecxz
dec
xchg
jo
fdiv
ss
sub
call
jmp
jmp
pop
pmaxsw
test
std
mov
sbb
sbb
lock
adc
xchg
ljmp
mov
mov
enter
xor
in
jnp
jge
pop
insb
push
xchg
jno
adc
sbb
ss
stc
enter
adc
test
sar
popf
push
mov
cwtl
pop
ret
and
xchg
mov
add
mov
xor
sbb
mov
ds
fcmovnb
mov
jbe
fisttps
lds
mov
push
xchg
mov
dec
sahf
pop
and
insb
xor
inc
dec
jp
out
filds
pop
xor
jne
and
cmp
push
push
out
lods
imul
call
cmove
lods
dec
sahf
ja
inc
xor
xorl
sarl
and
sti
inc
pop
inc
xor
adc
loope
xor
cmp
fcoms
dec
jp
add
mov
xchg
jnp
jg
movsb
cmp
sub
and
cmc
xor
add
lahf
jge
fidivl
sbb
popf
jb
adc
xchg
add
push
mov
dec
dec
jns
outsb
call
add
cmp
add
imul
add
push
sub
mov
mov
scas
inc
movsl
cltd
push
ret
popf
xor
and
jns
and
mov
push
cmc
add
mov
out
dec
push
dec
pushf
or
add
adc
stos
dec
test
jl
lods
mov
mov
xchg
aad
inc
loope
lret
ret
and
xchg
jns
add
in
bound
out
mov
xlat
dec
inc
aaa
enter
jecxz
and
rol
iret
shl
loope
add
cmp
xlat
adc
pop
push
sbb
out
scas
int
xchg
std
inc
xor
adc
arpl
fiaddl
pusha
cmp
lds
and
jmp
inc
fsubrl
clc
sub
pop
lods
jno
psubsb
add
scas
imul
jno
fiadds
mov
jo
mov
rcl
mov
mov
lods
or
mov
outsl
cld
mov
inc
jp
fsubr
xchg
xchg
mov
lret
scas
add
xchg
negl
ret
fidivs
pop
sahf
bound
or
mov
inc
xor
pop
xor
inc
cmpsl
stos
pop
pop
sbb
inc
jne
out
out
adc
fistpll
inc
cmp
sub
adc
and
pop
jb
or
and
pop
lret
cmp
cltd
aaa
stos
ds
stos
imul
cwtl
mov
dec
adc
jle
ret
and
fcoms
dec
scas
jecxz
push
mov
pop
mov
jmp
call
sahf
gs
in
outsl
in
daa
cmc
dec
jbe
scas
push
iret
out
mov
pop
or
and
sub
loopne
cs
push
int
and
js
dec
ja
imul
push
imul
mov
popf
jno
mov
mov
dec
xchg
xchg
inc
cmp
lods
out
cltd
cs
aad
sti
xchg
aam
sti
ficoms
inc
cmc
outsb
push
adc
test
and
scas
mov
dec
and
out
jge
out
push
jl
push
mov
xor
jecxz
push
cmp
incb
in
mov
lret
lcall
ja
cmp
inc
inc
xchg
dec
loopne
icebp
faddl
lock
sahf
sbb
push
rolb
xchg
scas
nop
sbb
xor
std
mov
add
push
ds
lods
cmp
and
andb
mov
sbb
push
xchg
ficompl
mov
adc
mov
andb
fdivs
pop
ja
fimuls
add
fwait
pop
sbb
fistpl
nop
xor
adc
int
leave
jnp
lret
je
sbb
xchg
cmpsl
ljmp
pop
mov
sti
xlat
repz
out
mov
cmpb
pop
in
cmc
imul
out
aas
push
test
and
xchg
arpl
lds
ss
lock
sub
in
jne
xchg
jl
or
pop
push
cli
loope
push
inc
fs
pop
aam
out
in
sbb
mov
stos
pusha
popa
push
adc
iret
loope
push
aam
fiaddl
fldt
int
cmpsl
aad
xlat
lds
rcrb
mov
std
and
popa
test
nop
int
mov
pop
jnp
xchg
cmp
and
mov
subb
out
int3
mov
popf
push
js
flds
push
cltd
cmp
inc
ss
cmpsb
les
imul
xor
leave
cmp
out
sub
testb
add
sbb
sbb
fstpt
jp
cs
cld
pop
pop
js
in
xchg
cmpsl
out
sub
fwait
or
xchg
repnz
idiv
stos
xor
loop
rorl
cmpl
imul
push
mov
stos
dec
fistpll
push
or
int
fildl
xchg
out
je
push
gs
lahf
sbb
clc
test
pop
add
inc
jmp
push
sbb
xor
dec
mov
xchg
rorb
cmp
sbb
or
inc
xchg
adc
adc
or
outsl
push
out
testb
fs
push
das
inc
lods
inc
jle
sahf
dec
int3
addr16
and
stc
nop
das
add
push
push
mov
cmp
gs
loopne
je
sub
int
push
sub
adc
dec
cmpsl
inc
fdivs
repz
ret
fmull
inc
inc
in
add
gs
icebp
jl
mov
pop
filds
lods
mov
out
add
js
scas
mov
dec
adc
adc
mov
sahf
mov
cli
push
in
inc
cld
push
push
sub
xor
add
xchg
mov
aad
and
testb
or
int
cli
sub
inc
push
ficomps
and
mov
add
sarb
lods
or
lahf
jl
or
mov
lods
pop
mov
inc
mov
lods
mov
xchg
xor
mov
pop
incl
mov
rcll
xchg
dec
ja
insl
inc
sbb
in
xchg
jge
loope
test
xor
pop
xor
mov
sti
pop
dec
repz
fs
sbb
lea
pop
jae
movb
sbb
iret
loop
mov
test
jmp
sub
lret
xchg
in
inc
mov
jp
cmc
mov
mov
xchg
mov
sub
pop
out
xorb
hlt
sub
lret
adc
sbb
mov
lret
and
fcomps
push
jp
jb
in
jnp
ret
add
stc
nop
fs
ret
outsl
pop
scas
add
and
mov
pop
test
movsl
lahf
aaa
and
jecxz
fst
add
adc
scas
stc
push
cmpsb
xchg
sub
xor
pop
shrb
jnp
in
ljmp
pop
push
inc
dec
push
jno
out
or
cmc
movsb
adc
pop
adc
push
shl
cli
cmc
aaa
or
cmpsb
sahf
or
jbe
iret
mov
jp
inc
mov
inc
push
sub
imul
cmpsl
test
fcmovne
fwait
leave
mov
sti
cmp
std
mov
push
rcrl
xchg
pushf
mov
pop
daa
out
and
lea
pop
adc
mov
cmp
out
mov
fldt
cwtl
test
jmp
mov
cmp
ret
shll
sbb
and
mov
mov
inc
js
jle
test
xchg
mov
repnz
movsl
scas
cli
cmp
lods
cmp
ret
ds
bound
jl
push
les
in
sbb
dec
and
pop
cmp
cmp
lds
cmp
mov
cmp
mov
mov
mul
adc
clc
fwait
mov
stos
mov
mov
fisttps
xor
cs
mov
into
ret
in
inc
add
mov
push
adc
hlt
cmpsl
popa
push
jae
cmpsb
sbb
dec
lock
pop
xchg
in
stos
and
cmp
cwtl
data16
dec
cmc
jbe
fwait
push
push
clc
pop
clc
sbb
xlat
mov
xchg
cmp
pusha
push
lea
xor
push
and
mov
cmp
enter
std
xchg
and
fsubs
cwtl
xchg
mov
push
out
cmp
or
jp
out
pushf
mov
sbb
das
or
push
ljmp
pop
mov
addr16
or
sbb
push
lret
mov
push
imul
xchg
cwtl
sub
cli
sbb
shlb
addr16
or
jmp
ret
jle
dec
pavgw
mov
xchg
fistpll
jl
leave
enter
das
jb
ss
sub
andl
jb
in
dec
mov
outsl
loope
mov
hlt
jl
cmpsb
jo
cmp
pop
mov
and
mov
pop
mov
and
adc
mov
xor
sti
pop
femms
and
push
loope
dec
jbe
ljmp
mov
outsl
mov
xor
xchg
ljmp
leave
mov
aas
add
jne
adc
mov
jb
xor
push
es
inc
shlb
pop
push
mov
in
cmp
scas
shrl
or
popa
mov
mov
sbb
jmp
mov
and
sti
pusha
sbb
out
and
test
in
int
imul
sub
push
xchg
sub
fs
inc
cmp
loop
xor
je
jp
stos
push
push
imul
xor
cmpsb
data16
sbb
and
mov
hlt
jl
scas
sub
ja
pop
push
jbe
mov
ficompl
cmc
pop
loop
cmp
subb
lods
jg
xchg
mov
and
sbb
sub
mov
out
aas
or
insl
push
inc
pop
dec
in
pop
jp
dec
ja
test
fdiv
fs
mov
sbbb
mov
lods
stos
mov
int3
out
loope
test
mov
dec
aas
pushw
inc
push
and
loopne
jne
int3
cmc
setns
push
test
pop
jge
ljmp
loop
je
add
pop
cmp
dec
gs
nop
add
xchg
mov
bound
push
sbb
bound
cmc
xchg
pop
mov
jge
jbe
lret
movb
jae
xchg
inc
daa
fs
xchg
int3
inc
or
dec
pop
das
out
idivb
dec
clc
xor
sub
enter
sub
fwait
jmp
pop
and
cmp
cmp
xchg
xor
cmp
add
lcall
stos
repnz
repz
adc
push
andl
cmp
dec
jo
fcomi
xchg
push
jge
push
jns
xchg
subl
cmp
push
data16
ror
add
icebp
sbb
pop
mov
push
xchg
xor
push
mov
clc
movsl
mov
pop
mov
mov
ja
insl
push
mov
sub
shll
iret
adc
dec
lea
xchg
push
ljmp
into
int3
push
hlt
ss
dec
test
jp
stc
push
int
jl
out
mov
sbb
loope
sahf
orl
jne
loope
mov
mov
enter
pop
push
pop
fs
xchg
fcom
cmp
push
and
push
out
aaa
jp
cmp
inc
dec
sarb
clc
inc
mov
xor
adc
clc
push
and
mov
xchg
and
xchg
jnp
setno
xchg
mov
sbb
push
dec
stos
add
sbb
out
insl
pusha
xchg
cmp
sbb
mov
arpl
adc
mov
mov
iret
pop
iret
xchg
lods
mov
jge
leave
mov
mov
std
mov
testl
enter
dec
dec
cs
hlt
adc
mov
insb
push
fldenv
pop
or
mov
lods
push
imul
cwtl
outsl
mov
pop
mov
and
negl
mov
or
nop
pusha
mov
cld
cmp
dec
cmp
inc
mov
xor
cmpsb
sbb
pop
jns
adc
pop
fcoml
xchg
dec
mov
pop
test
ret
sbbb
mov
pop
inc
mov
popa
test
je
clc
andb
add
in
pop
or
mov
jl
and
adc
jo
shr
and
scas
xchg
push
push
adc
xchg
incb
mov
mov
mov
fnstsw
push
inc
mov
dec
jb
cli
sti
pop
push
pop
pusha
lock
xchg
mov
test
mov
dec
jno
adc
mov
out
stc
and
fadds
or
fsubl
mov
dec
sub
insl
stos
int
dec
sub
xchg
inc
mov
psubsw
orl
jp
sarl
xchg
aaa
and
arpl
lds
jae
mov
ret
mov
dec
repz
add
call
inc
cmp
sbb
push
outsb
lds
andl
aas
cld
mov
fstl
dec
or
in
jmp
mov
pop
addr16
cltd
test
sbb
clc
inc
inc
pop
pop
mov
sbb
dec
push
sbb
fisttpll
repz
lods
call
jno
out
call
mov
mov
mov
jo
or
cli
sub
jo
adcl
pop
jb
rcrl
sub
mov
stc
push
std
popf
xlat
dec
stos
pop
or
test
scas
dec
mov
cmp
dec
orb
sbb
or
cmpsb
mov
and
sub
and
or
pop
jge
fisubrs
inc
bound
test
add
or
mov
test
lods
mov
xchg
jge
pop
ja
lods
jge
or
rolb
fiaddl
mov
cmpsl
jle
aad
insl
xchg
xor
test
inc
call
mov
sub
mov
in
jns
lock
pop
xchg
push
test
mov
dec
adcb
je
inc
xor
sub
ret
loop
std
lds
inc
cmc
sbb
and
fadd
xor
xchg
jo
in
lock
jle
lcall
insl
test
adc
mov
push
push
lds
push
add
bound
mov
call
aas
or
lock
adc
dec
loope
stc
add
repnz
add
mov
stos
das
out
cmovnp
sbb
cmpl
jp
lods
fcoml
divb
es
cmp
mov
pop
adc
sbb
or
sub
jmp
mov
cld
fyl2xp1
aas
push
in
movsb
and
add
aaa
movsb
and
mov
dec
mov
sub
sbb
jo
fldl
mov
cmp
dec
mov
add
je
xchg
shlb
lock
sub
pop
adc
mov
mov
jle
xor
mov
inc
ret
dec
lret
jecxz
aaa
mov
ljmp
sub
ds
and
push
stc
cmpsl
and
ja
dec
xchg
xchg
mov
pop
and
push
add
dec
sub
loope
mov
leave
push
adc
mov
push
insl
adc
push
jp
ret
cmp
sub
mov
loop
data16
fsubrl
call
hlt
xchg
ss
xchg
pop
add
adc
mov
iret
jge
outsl
cwtl
bound
pusha
int
adc
add
nop
out
lock
in
push
mov
inc
mov
jl
inc
pop
add
pop
push
and
int3
pop
scas
in
popf
pop
mov
aas
lods
xor
rcrl
xchg
ss
pop
cs
pop
jmp
sbb
mov
cli
xchg
pop
lahf
xchg
inc
movsb
dec
test
dec
iret
test
arpl
or
pop
ja
pop
dec
cmp
call
int
pop
dec
dec
add
xchg
je
into
xchg
and
jnp
insb
cmp
cwtl
movsl
test
mov
loope
inc
aaa
cmp
in
lock
add
push
adc
sbb
aas
sarl
adc
shll
dec
push
dec
mov
inc
add
loope
imul
fwait
or
int
pop
orb
lock
ret
leave
push
ljmp
jge
sahf
lds
out
test
mov
cmp
popa
imul
fcmovnb
push
inc
mov
aam
sub
scas
cmc
fdivrl
repnz
inc
adc
push
pop
mov
lods
clc
fsubs
sub
add
and
mov
sbb
sbb
lock
sbb
and
xor
jae
adcb
decl
jmp
sub
jge
lcall
push
lods
movsl
int3
push
sbb
lcall
mov
aas
mov
negl
cmp
pop
addb
js
fsubl
popa
js
lods
add
lock
lds
and
sahf
jge
das
pop
daa
lock
fs
cld
mov
and
jae
aas
or
jle
mov
mov
ret
sahf
sub
xchg
jne
xchg
nop
aaa
inc
or
and
mov
dec
mov
ja
or
or
pop
jns
enter
out
gs
dec
mov
xchg
aaa
jns
xor
sbb
pop
xchg
call
test
dec
addr16
stos
clc
inc
inc
scas
add
daa
bound
test
cmp
js
andl
sub
movhps
adc
insb
cmpsb
ror
iret
mov
or
fs
xorl
sahf
mov
mov
push
lahf
mov
stos
dec
lea
inc
ss
bswap
cmc
popf
movsb
rorl
lock
addb
pop
loope
clc
mov
pop
popa
fsubs
aam
aaa
jl
jne
ds
cmp
ret
xchg
xor
dec
movsl
js
orb
or
js
cmp
cmp
dec
jnp
cmp
hlt
and
xchg
xchg
adc
dec
adcb
test
add
imul
adc
mov
push
aam
aam
mov
jb
sub
aaa
fstpl
pop
mov
out
sbb
dec
cmp
insb
lods
sub
ljmp
mov
fs
adc
into
les
std
push
daa
add
sub
mov
in
sbb
jns
sub
mov
and
sbb
pop
lods
scas
adc
leave
les
mov
mov
add
pop
jb,pt
outsl
das
add
adc
loope
sbb
add
or
shrl
xorb
pop
testl
shll
pop
inc
push
inc
mov
nopl
addb
xor
ret
cmpsb
push
gs
jns
push
or
xchg
push
movsb
rcr
mov
scas
data16
icebp
fbld
cmp
out
jge
insl
dec
inc
mov
ja
js
aas
cmp
add
xchg
scas
cmp
cmpsb
aas
je
mov
pop
daa
push
xchg
jno
dec
push
push
lods
push
dec
add
mov
into
insl
dec
in
pop
pop
ljmp
push
cmpl
js
cmp
sbb
add
sahf
and
adc
pop
sti
pop
mov
shll
nop
out
lea
fs
in
adc
cmp
jmp
pop
mov
arpl
mov
mov
insl
int
xor
or
lcall
sub
xor
pop
mov
call
icebp
jno
xchg
jg
mov
out
imul
pop
in
sub
scas
and
lock
in
mov
cs
adc
inc
and
popaw
dec
mov
push
lock
sbb
pop
je
xchg
jns
imul
outsb
pushw
mov
insl
and
and
aam
push
adc
arpl
push
mov
sub
aaa
mov
sbb
imul
push
xchg
cmpsl
test
loope
rclb
sarl
addl
sti
cmpb
and
dec
dec
xchg
jae
nop
loopne
sbb
adc
out
imul
pop
stos
fisubrs
pop
xor
add
scas
dec
fdivrl
jbe,pt
pop
add
das
fstpt
lcall
xor
in
rorb
xchg
jp
and
cmpsb
sbb
scas
andb
jge
movsl
popf
data16
mov
imul
cmp
cmp
mov
int
into
jns
fdivrs
inc
loope
or
cmc
sub
sub
fldt
pop
sub
dec
push
adcb
cld
loop
stc
lahf
popf
push
arpl
stc
adc
cltd
test
scas
push
pop
subb
sub
mov
sub
outsb
or
addr16
cs
push
das
xchg
pop
fdivr
ret
adc
ss
mov
push
out
adc
xchg
push
ds
sub
jno
test
js
out
test
fs
and
push
and
mov
addb
cmp
inc
lret
ds
dec
mull
or
mov
jmp
xchg
and
xor
dec
pop
cmp
inc
xchg
pusha
cs
scas
fdivl
out
nop
push
adc
lret
sub
cmp
imul
or
and
leave
lret
in
mov
in
jns
jg
mov
or
add
cmpsl
movsl
rorb
cltd
in
aas
icebp
pusha
pminub
imul
push
inc
jle
int3
fcmove
loope
push
mov
xorl
popa
mov
jno
stc
inc
daa
and
jae
jo
dec
scas
dec
push
je
push
out
hlt
out
pop
divb
loop
dec
es
mov
mov
cmp
pushf
mov
out
jp
pop
adc
comiss
ret
cli
cmp
pop
lds
je
dec
pop
mov
or
shlb
sbb
sbb
inc
mov
lret
push
cmc
adc
cli
rcrl
cwtl
push
inc
in
aam
int3
jns
outsb
je
cs
imulb
call
les
scas
xchg
es
cli
xchg
xchg
lock
loopne
dec
or
xor
adc
pop
lret
rcrb
and
xor
dec
jbe
or
cld
fsts
or
js
adc
ret
dec
movsb
lahf
add
adc
test
lock
in
pop
aam
sbb
mov
pop
mov
or
push
jle
popf
fs
mov
jae
movsl
sti
std
mov
add
mov
xchg
loopne
adc
pop
or
and
jl
lds
cmp
imul
sti
mov
rcrb
pop
sub
mov
xor
sub
fstps
dec
cmp
mov
mov
in
divl
mov
and
ja
loopne
and
jns
xor
mov
pop
test
or
or
jle
and
push
add
and
ljmp
mov
mov
ljmp
adc
adc
jns
ret
inc
aam
ret
imul
mov
jbe
fcmovu
rcrl
outsl
xor
xchg
sbb
ljmp
adc
aam
or
xchg
fs
aas
aad
xchg
shl
jno
test
aam
mov
cmp
jge
xchg
cld
int
dec
push
fnsave
xchg
lcall
adcb
lock
or
das
pop
mov
movsl
lds
cs
cmp
mov
mov
ja
sub
shrl
pop
ds
mov
and
or
xor
aas
mov
add
insl
rorl
arpl
push
cmp
imul
xchg
push
inc
sbb
in
add
xor
mov
jb
hlt
sbb
add
xchg
push
pop
cli
xchg
mov
sub
push
or
dec
mov
push
sbb
lahf
adc
lods
outsb
mov
push
ljmp
hlt
and
dec
dec
jbe
pop
sub
jns
inc
mov
test
push
in
jno
mov
test
inc
jb
dec
inc
and
xor
and
or
and
xchg
in
cltd
out
loope
mov
lds
jns
cmp
or
insb
or
imul
pop
loope
xor
pop
cwtl
and
and
mov
lret
out
sahf
mov
inc
repnz
inc
pop
rorb
insb
dec
add
es
add
loop
and
push
or
xorb
xchg
stc
inc
adc
jmp
push
lods
ret
nop
inc
insb
mov
sbb
enter
dec
aas
mov
stos
cmp
fiadds
sbb
dec
iret
sbb
push
sub
jmp
outsl
test
lods
pop
test
push
iret
jp
roll
fists
xchg
mov
push
adc
std
rcrl
push
lahf
lods
or
arpl
loop
lret
sub
test
fs
sub
xchg
mov
pop
outsb
cmp
pop
add
cmp
sbb
and
inc
aas
sbb
inc
in
insl
jbe
imul
pushf
pop
pop
shl
jp
xchg
xor
test
popf
js
jne
sbb
push
xor
jnp
in
aaa
movsl
sbb
push
adc
cmp
movsl
cmc
pop
cmp
pop
call
out
xchg
adc
fadd
inc
jb
imul
mov
inc
xchg
xchg
adc
fdivrl
mov
imul
mov
adc
outsb
inc
mov
loope
stos
cmp
sti
jmp
ret
mov
in
and
lods
jo
add
cmp
into
add
sbbl
and
inc
mov
int
add
or
fsubrs
jb
push
jmp
xor
cltd
test
dec
imul
dec
out
pop
sub
jle
pop
cs
rcrb
inc
inc
outsl
inc
pop
fstl
insl
das
push
iret
sub
xchg
adc
push
fsubl
push
xor
shl
jecxz
adc
xor
in
daa
mov
out
mov
mov
lret
andb
and
xlat
popf
flds
mov
dec
xchg
mov
jecxz
cli
sbb
pop
lahf
xchg
js
jne
sub
aaa
loop
movsl
call
test
dec
mov
scas
inc
fidivl
adc
mov
sbb
cld
mov
cmp
inc
leave
xchg
ret
call
lds
lock
cmpsl
jg
mov
nop
in
ficoml
and
jg
aas
sub
cmpb
stos
mov
mov
adc
mov
cli
out
leave
mov
stc
add
enter
es
int
xchg
iret
cmpsb
and
idivl
in
outsb
or
pop
pop
xchg
imul
jnp
add
addr16
inc
lcall
jmp
je
in
push
repz
or
lahf
shll
mov
sub
in
sub
lcall
adc
cmp
dec
mov
scas
mov
das
xchg
test
das
mov
mov
dec
pop
xor
inc
outsl
mov
mov
icebp
gs
inc
jle
cwtl
orl
jne
call
xor
je
xor
xchg
in
test
xchg
or
mov
mov
xor
xor
add
adc
xchg
out
mov
xor
outsb
ret
fcomps
jb
in
jecxz
mov
mov
ret
mov
mov
mov
sbb
push
and
dec
pop
outsl
mov
hlt
mov
cli
pushf
outsb
add
sar
or
and
inc
into
lret
xor
mov
popf
inc
jnp
xchg
into
lea
pop
xor
mov
xchg
jno
mov
push
popa
sbb
dec
scas
mov
and
cld
xchg
repz
mov
xorb
call
fs
xchg
inc
mov
data16
mov
mov
stos
dec
xchg
sub
ror
sbb
mull
ljmp
cmp
sub
addb
push
mov
fucomip
dec
sub
and
and
mov
aad
cmp
cli
pushf
fstl
fnsave
mov
adc
sti
cmp
jg
imul
ffreep
sbb
ret
pushf
in
fdivl
lds
js
movsb
addr16
pop
enter
aaa
fmuls
imul
rcrl
or
fnstcw
call
call
pop
ret
push
mov
pop
push
push
fisubrl
add
push
test
daa
lods
leave
fwait
inc
filds
popf
inc
xchg
cltd
cmp
pusha
into
outsl
mov
push
add
adc
jg
ret
hlt
inc
sar
mov
xchg
jmp
sbb
pop
and
mov
xchg
xchg
adc
cmp
add
cld
loop
fnstcw
cmp
and
mov
jg
push
mov
pusha
pop
test
pop
jl
cmpsb
sub
test
rol
int3
or
sbb
pop
mov
inc
pop
jle
pusha
mov
fcoms
jbe
gs
out
fnstcw
out
test
jae
or
out
mov
shll
mov
mov
outsb
mov
test
mov
daa
sbb
sti
or
dec
adc
inc
jecxz
push
test
jnp
add
sti
adcl
mov
mov
int3
aaa
xchg
cmp
xor
and
xor
xchg
sti
lea
lods
sub
addr16
push
adc
dec
jno
mov
loopne
test
jno
ficoml
movsl
or
mov
das
jl
repz
mov
scas
cmp
ss
out
mov
inc
mov
mov
pusha
imul
clc
inc
mov
in
jecxz
and
in
repz
subl
in
jnp
adc
inc
movsb
push
inc
fnstenv
test
pop
fbld
xchg
lods
sbb
inc
aam
adc
mov
mov
add
aaa
adc
adc
ja
repnz
sub
aaa
mov
pop
sbb
jle
fmull
pusha
cmp
push
or
cmp
aam
pop
fadds
jl
xchg
adc
cmp
jns
mov
xchg
imul
xchg
push
xchg
mov
jle
sahf
stos
in
push
daa
push
cltd
in
adc
mov
xchg
mov
xchg
jnp
int
pop
test
add
mov
mov
imul
mov
mul
push
popf
scas
inc
cmp
mov
sbb
call
ret
cmpsb
sbb
jnp
dec
inc
mov
dec
out
add
or
jb
jg
shl
or
test
mov
pop
or
cmp
mov
mov
cmp
js
xchg
mov
data16
mov
fidivrl
mov
xchg
scas
test
sub
stos
pop
orb
adc
ss
sahf
icebp
add
jmp
and
adc
ror
scas
dec
test
xchg
sbb
jns
mov
movsb
ja
xor
popf
bound
xchg
or
inc
lods
sbb
inc
cmp
notb
pop
outsb
mov
and
clc
mov
loop
dec
jns
and
xor
dec
lahf
adc
jno
sub
repnz
xchg
lret
sub
adc
mov
clc
inc
call
dec
mov
sbb
push
sbb
inc
aas
ficoml
fiadds
xor
mov
mov
std
clc
sahf
pop
loop
jnp
call
add
add
into
xor
in
or
movsl
cli
or
fiaddl
stos
sbb
mov
mov
adc
push
mov
in
jno
jmp
loop
sbb
xorl
imul
mov
mov
bound
rclb
jb
add
add
pop
pop
into
es
and
cmp
repnz
mov
sbb
sbb
xor
int
das
rcll
pop
cmp
shrb
jp
pop
mov
es
insb
push
or
sbb
dec
xor
cmp
mov
std
mov
dec
cmp
and
add
icebp
iret
shll
jmp
jg
repnz
inc
lcall
mov
outsl
pop
dec
cmp
cmp
dec
fs
xchg
es
pop
cmpb
jecxz
std
test
cwtl
pop
push
inc
ss
call
sbb
pop
xor
jns
mov
or
mov
cmp
sbbb
mov
sub
shrb
dec
aas
adcl
lods
push
pop
les
popf
rorl
outsb
insb
int
push
insb
cmp
popa
inc
insb
add
outsl
or
and
inc
jnp
lret
outsb
jae
imul
iret
test
push
inc
and
and
stc
pop
clc
pop
jle
aam
imul
repz
leave
dec
push
adc
mov
jb
push
sub
fmulp
or
sub
push
inc
ret
dec
jmp
add
lcall
xor
bnd
pop
xor
add
xor
xchg
inc
lock
or
dec
jns
mov
adc
mov
stc
jmp
mov
and
out
lds
mov
push
inc
loope
push
pop
and
test
je
sub
test
fisubrs
mov
lret
pop
adc
pop
in
mov
mov
xchg
xchg
lods
pop
push
ljmp
les
inc
popa
nop
call
dec
and
mov
outsb
cmp
lds
test
cld
nop
push
in
mov
xchg
inc
adcl
xchg
jae
insb
outsl
sbb
icebp
mov
stos
dec
push
mov
data16
popf
pop
insb
pop
lods
add
daa
push
mov
clc
xchg
mov
scas
jmp
mov
adc
scas
sub
iret
fildll
xchg
mov
inc
lea
mov
xchg
lcall
jns
mov
dec
sub
pop
loop
mov
or
push
push
in
lea
push
push
jl
push
sub
ret
mov
sti
xchg
and
pushf
sbb
jge
lret
cmp
xchg
mov
push
cld
fcomp
sarl
pop
push
mov
mulb
or
and
aam
add
scas
cmp
add
pop
jmp
add
mov
shrb
fsubr
pop
mov
loopne
dec
cmp
sbb
jne
adc
hlt
iret
xchg
mov
sbb
cmp
or
nop
dec
call
scas
cmc
scas
cmpsl
ds
adc
in
mov
inc
sub
stc
add
and
cmpsb
and
mov
jmp
pushf
dec
sub
shlb
ljmp
sti
push
cmp
rcl
ret
fstpt
cmp
das
test
mov
fsubs
add
cmp
pop
cmp
imul
addr16
xchg
xchg
fstl
cltd
out
ret
shlb
cmp
add
or
adc
or
xor
sub
movsb
int
mov
icebp
xor
stos
iret
flds
out
decl
push
insb
es
iret
sbb
dec
jecxz
cmpsb
lds
mov
jo
jb
rol
mov
sub
dec
popa
in
icebp
pop
rcrl
aad
mov
rclb
sbb
cmp
mov
sub
adc
mov
push
mulb
or
aas
aam
daa
loop
jge
sub
lret
adc
sahf
mov
jecxz
scas
mov
shrd
aas
pop
lds
jmp
lret
scas
xor
imul
rcrb
in
pop
cs
jp
cs
popa
add
jmp
mov
adc
or
sar
nop
inc
push
sub
or
add
stos
fbstp
repnz
mov
stc
loope
mov
sub
pop
insl
cmp
xor
push
in
cmc
fwait
lret
pop
sub
and
add
mov
dec
add
sbb
int
sti
out
fucomip
dec
xor
das
xor
or
pushf
cmp
inc
jb
mov
fildl
mov
lods
or
adc
aaa
ror
mov
lods
push
and
dec
lea
aad
push
loopne
cmp
clc
in
notb
pop
fsubl
and
test
pop
ljmp
fisubrl
or
mov
xchg
mov
push
lret
jbe
push
push
add
cmp
add
xchg
jae
shl
adc
jns
mov
rcr
int3
mov
test
dec
pop
dec
fsubr
cmp
sbb
jnp
jl
sbb
mulb
lods
mov
arpl
sbb
es
icebp
xor
inc
js
pop
mov
lcall
sub
mov
ja
cmpsb
inc
and
leavew
push
ja
dec
inc
negb
aad
push
pop
loop
aaa
ja
and
mov
dec
aad
or
pop
rol
jg
mov
mov
cltd
jl
jle
jae
fcomi
push
or
pusha
popa
xchg
fsubrs
xor
cli
jb
jns
xchg
cmpb
dec
sub
seto
scas
sbb
pop
sbb
insb
insl
and
mov
or
pop
aaa
push
mov
sti
xchg
out
push
adc
adc
sti
mov
setno
pushf
sub
adc
pop
or
push
sub
ss
push
stos
sub
sub
into
mov
test
pop
addr16
lods
xchg
in
movsl
mov
out
cmpsb
mov
cmp
pop
xchg
std
pop
push
xchg
cmpsb
mov
dec
lcall
mov
mov
rcrb
or
ja
loop
push
xchg
popf
xor
sub
movsb
movsb
or
push
pop
pop
sbbl
leave
or
sub
lock
test
jg
shll
mov
sub
test
jae
lods
jg
jae
gs
test
das
adcb
subb
mov
sbb
sahf
aas
sbb
mov
fwait
loop
ret
test
pop
cld
and
clc
or
stos
xchg
or
mov
mov
js
pop
repnz
push
loope
cli
xor
adc
imul
sub
shr
mov
js
pop
sbb
pop
inc
xlat
ret
or
mov
pop
xchg
mov
std
fiadds
lods
adc
push
shlb
arpl
push
mov
pop
xorb
fdivl
push
cld
loope
clc
push
adcb
sbb
mov
push
lods
push
es
bound
or
ret
push
jl
mov
dec
mov
icebp
cmp
adc
stos
pushf
jb
repnz
int3
iret
loope
push
jmp
enter
adc
ss
out
push
mov
fcmovnu
repz
shll
repz
out
repnz
dec
jae
mov
or
notl
shlb
and
je
cwtl
shrl
adc
push
and
lret
push
and
inc
sbb
ss
cs
xor
mov
sub
sahf
sbb
sbb
push
mov
inc
jl
in
gs
popa
in
into
and
inc
inc
inc
call
inc
mov
pop
fs
fcomps
je
insb
dec
enter
aaa
idivl
cs
lret
and
cmp
movsl
pop
mov
jb
xor
cmp
xor
push
stos
cli
mov
cmc
loope
mov
movsl
jbe
xor
jne
pushf
addr16
dec
cs
inc
fisttps
loop
aad
outsb
jnp
movsl
jge
stos
scas
xchg
lock
fsts
rclb
mov
test
movsb
stc
jbe
popf
jns
dec
cwtl
nop
lahf
fisubl
jns
pop
idivb
mov
mov
mov
orb
pop
push
rcrl
xchg
add
push
out
adc
cmp
inc
sbb
clc
adc
adc
adc
fadd
mov
sbb
or
idivl
xor
cmp
push
mov
push
enter
fdivrs
sub
es
xchg
mov
lods
jno
inc
fwait
mov
xchg
mov
pop
pushf
mov
in
adc
dec
aam
add
jecxz
test
stos
pop
and
adc
pop
hlt
repnz
out
sti
scas
bnd
nop
scas
aam
outsl
gs
fldl
popa
jecxz
ss
aad
push
js
repz
adc
or
pop
add
jb
mov
push
xchg
dec
js
pop
xor
add
fmull
je
and
pushf
sub
mov
mov
jb
scas
movsl
arpl
xchg
xor
xor
fxch
lcall
sub
pushf
add
or
jo
into
outsl
xor
and
push
cmp
pushf
pop
repz
push
ds
out
sub
xor
or
mov
and
das
mov
mov
xchg
jmp
cmpsb
fistps
xor
fidivrs
div
pushf
call
clc
pusha
mov
cmpsl
iret
imul
ret
into
outsb
imul
shrb
data16
test
hlt
cltd
sub
xor
arpl
xchg
shlb
push
pop
push
les
leave
sbb
sub
adc
iret
mov
lock
iret
sbb
dec
mov
orb
mov
jp
jae
pop
shl
push
mov
cli
lcall
mov
ret
inc
mov
mov
cld
fucomp
jae
imul
or
add
int
and
rorl
out
test
clc
test
das
aaa
pop
into
mov
sbb
in
ret
mov
jl
mov
dec
dec
dec
mov
out
mov
aas
jae
mov
dec
cmp
jge
lods
cli
jne
push
sub
jg
shll
or
inc
aam
adc
add
arpl
xor
xchg
aas
xchg
pop
inc
and
jg
fwait
or
test
fs
imulb
fwait
xor
bound
aas
push
adc
jg
scas
lahf
and
loopw
cmpsb
pop
push
pop
xor
shrb
les
sbb
pop
push
push
fsubs
inc
mov
adc
enter
lods
in
cmpsl
sbb
shll
dec
sub
clc
push
popf
dec
mov
addr16
fmul
and
in
in
sub
rorb
stos
jbe
sbb
pop
int3
lods
test
lea
pop
or
jp
cltd
adc
adc
sbb
inc
lds
lahf
xchg
and
inc
aaa
push
mov
xchg
push
xorl
incl
arpl
push
mov
sub
and
dec
movsb
jb
and
fs
dec
sub
lds
sahf
push
iret
mov
hlt
mov
es
mov
ficoms
loope
std
mov
inc
out
push
lods
mov
dec
enter
movsb
xor
dec
fdivr
test
test
jns
xchg
add
jecxz
adc
mov
pop
adc
sti
adc
xor
in
cmp
adc
inc
push
outsb
xor
or
jbe
cltd
mov
cld
fmul
int
pop
int3
dec
mov
push
dec
dec
fiaddl
out
pushf
cmp
cmpsb
ret
mov
jnp
int3
or
adc
lods
mov
or
fwait
xchg
and
mov
jb
aas
dec
sub
or
shr
mov
push
outsl
adc
inc
lret
movsl
dec
inc
outsb
lods
dec
lret
sbb
in
jmp
test
insl
and
inc
dec
add
sbb
jne
loop
mov
mov
and
inc
pop
out
ficoms
aad
inc
mov
sbb
stc
ljmp
lds
in
ret
jo
push
and
jmp
stc
stos
mov
cwtl
mov
add
mov
sbb
pop
inc
cmp
push
and
leave
fst
dec
int3
js
push
xchg
mov
test
dec
popa
data16
aas
out
lock
outsl
lret
into
fcmovnbe
mov
sbb
call
jnp
mov
inc
arpl
notb
push
pop
test
jge
dec
negl
push
lret
jg
sub
fwait
inc
in
lret
es
jne
ja
lret
nop
cmp
aad
cmpsl
or
fnstenv
cmc
sub
jnp
inc
repnz
push
mov
push
mov
adc
sahf
push
shrb
popa
push
shrb
into
or
push
ljmp
ja
jmp
loope
adc
scas
js
je
inc
xchg
fnsaves
xchg
out
decb
xor
push
pop
mov
jecxz
decl
mov
ror
into
imul
push
mov
stc
push
repz
lahf
stos
pushf
sbb
push
adc
jmp
clc
andb
push
xchg
push
ss
popa
enter
lea
add
xchg
shll
int3
testl
gs
pushf
js
repz
mov
push
mov
xchg
out
enter
xchg
pop
dec
pop
sbb
out
push
pop
pushf
popa
cmp
lret
scas
mov
or
and
mov
hlt
ror
outsl
out
mov
or
icebp
mov
call
cmp
inc
push
gs
add
xor
sub
dec
push
bound
arpl
outsl
cmp
mov
xchg
outsl
ja
mov
push
loopne
push
push
sub
and
push
addr16
inc
push
out
cld
sub
popl
js
mov
stc
push
frndint
sahf
mov
jmp
xor
adc
in
outsl
push
adc
aad
add
scas
or
mov
repz
test
add
dec
push
rcrb
inc
xchg
les
test
fistl
out
test
mov
jp
sub
in
cmp
and
insb
ljmp
imul
shll
mov
push
and
jge
add
movsb
or
js
sub
das
cmp
scas
sbb
inc
jg
adcl
and
in
sub
cmpsw
cltd
mov
inc
fcomps
pop
mov
rcl
dec
imul
cs
push
jmp
sti
dec
fistps
stos
inc
fs
xchg
aaa
out
adc
adc
jne
xlat
xchg
cmp
fiaddl
in
push
add
xchg
cli
fs
test
cmpsb
ret
cmpsb
adc
inc
lods
pop
in
pop
jns
nop
xchg
mov
outsb
lcall
fidivl
test
int3
pop
push
push
lret
mov
clc
pushf
mov
add
loop
rorl
andl
adc
jbe
pop
shlb
mov
pushl
fwait
imul
into
dec
push
pop
pop
xor
cmp
mov
pop
mov
mov
push
cmpsb
jne
pop
pop
inc
loope
adc
divb
push
test
shrb
cltd
sbb
add
or
stos
mov
sarl
mov
jnp
es
hlt
and
push
inc
mov
push
mov
jbe
jns
cmp
jo
scas
lea
xchg
popa
cmp
mov
sahf
xor
into
sbb
jae
int
push
sub
push
cmp
cmovbe
lock
inc
inc
movl
cmp
int3
or
iret
imul
roll
fwait
cmp
xor
push
sub
push
ror
jmp
int3
xor
pop
add
and
adc
xchg
xchg
fsub
sub
fistl
lahf
fiaddl
cwtl
pushf
adc
fwait
es
test
xchg
inc
adc
mov
call
loopne
push
jns
push
sub
arpl
into
adc
mov
aas
mov
mov
lock
call
lods
and
sbb
add
mov
mov
xchg
mov
stc
adc
mov
mul
je
push
and
sub
lods
sbb
out
daa
dec
mov
jno
movb
sbb
xor
adc
pop
mov
lea
out
ficompl
bound
dec
mov
lea
out
nop
sbb
mov
imul
mov
ja
ljmp
sub
jno
and
cmp
cmp
push
movsl
shll
mov
mov
daa
das
les
dec
mov
cli
jns
enter
pop
push
daa
cli
sub
sbb
test
popa
stos
jo
mov
das
adc
inc
add
cmpsb
adc
repz
inc
ljmp
sbb
adc
int3
push
out
call
or
lret
jnp
xor
push
or
sahf
pop
pop
in
mov
push
in
int
out
dec
movsb
sarl
dec
rorb
inc
stc
insb
xchg
nop
aam
add
ret
jnp
rorl
loopne
clc
cld
mov
xchg
pop
cmpsb
call
lea
fisubs
adc
int
daa
fs
iret
push
xlat
mov
mov
insl
push
fcomps
popa
or
add
cmpsl
push
pop
mov
sub
sbb
xor
sbbl
sub
jmp
insl
cltd
pop
fisttpl
mov
lods
or
in
out
dec
ds
jmp
push
fiaddl
inc
xor
mov
mov
dec
add
outsl
push
jge
xchg
testl
pop
cmp
dec
sub
sub
mov
es
divl
or
inc
fs
inc
jns
std
dec
shlb
sub
outsl
in
call
sbb
xlat
mov
imul
ds
ret
lcall
aam
pop
mov
sub
stc
pushw
and
loopne
or
adc
xlat
dec
push
in
adc
xlat
mov
enter
cmpsl
mov
loope
out
adc
bound
push
imul
int
xchg
mov
and
push
sbb
int3
daa
adc
sar
into
pushf
dec
or
push
fdiv
inc
imul
in
push
dec
jp
xor
sbb
aaa
xchg
mov
icebp
push
jns
or
imul
fsub
scas
and
lds
sub
xchg
fs
jg
push
jnp
out
cs
mov
fsubrp
and
ret
lea
mov
lahf
outsl
gs
or
sub
push
lret
xor
xor
mov
es
fdiv
subb
insb
inc
inc
lretw
test
pop
xorl
loop
cmc
cltd
and
cmpsl
push
pop
aam
jb
enter
jb
loopne
xor
jbe
adc
hlt
jbe
add
mov
mov
ret
adc
xlat
mov
popa
add
lods
and
or
and
cli
sub
shll
add
les
std
mov
jmp
mov
add
nop
inc
mov
pop
sub
xchg
popf
loopne
insl
mov
sub
cmpl
mov
ud1
icebp
cmp
mov
pop
mov
jb
jg
dec
insb
mov
pmulhw
aas
rorb
into
sub
je
repz
jl
xor
add
ds
stc
stc
push
imul
jecxz
jae
pop
jl
cs
addr16
xchg
push
fmuls
popa
fstpt
mov
push
ja
out
mov
negl
je
or
cltd
in
jnp
sbb
or
xor
xor
inc
push
arpl
loop
enter
inc
mov
int
scas
mov
add
pop
mov
mov
inc
pop
sub
pop
mov
jmp
mov
and
pop
jecxz
cmp
mov
lods
jp
divl
dec
insl
roll
xchg
btr
jmp
and
test
cmp
mov
jo
mov
cs
push
out
jmp
sarl
dec
outsl
xchg
clc
aaa
fsin
adc
fistl
cli
xrelease
mov
jl
inc
sbb
dec
push
ret
test
mov
push
jmp
jmp
or
sbb
add
xchg
add
into
and
pop
int3
add
inc
scas
data16
inc
pop
stos
sbbb
ret
pusha
jb
xor
adc
into
addr16
call
sbb
mov
pusha
mov
mov
push
dec
mov
or
and
sbb
dec
testl
insl
dec
outsb
ja
mov
pop
or
inc
push
jbe
sti
sub
push
cmp
dec
in
sbbb
add
xchg
adc
jnp
jmp
sbb
push
adc
imul
outsl
inc
in
pop
movsl
lret
outsw
jne
sbb
cmp
aaa
mov
imul
lock
sbb
rclb
xchg
mov
dec
out
clc
scas
push
insb
pop
mov
add
in
push
test
mov
std
ds
lcall
inc
fcomi
aaa
fwait
dec
js
lcall
pop
dec
xor
cli
loopne
repz
mov
lds
divl
fndisi(8087
adc
repnz
cltd
fsubp
ja
xchg
cmp
xchg
cs
mov
add
out
fisubrl
mov
hlt
push
inc
lret
mov
or
and
rclb
xlat
fistps
cmp
mov
mov
fnstsw
out
ret
push
pop
scas
cmp
shrl
imul
cmp
and
ficoms
rorl
jecxz
fcmovnbe
pusha
xor
cltd
xchg
mov
cwtl
in
cltd
and
sub
mov
push
bound
fcoms
jb
ja
push
inc
inc
loop
in
cmp
int
arpl
fcoml
xor
cmp
int
outsb
sahf
dec
mov
sub
cs
aad
sbb
in
gs
lcall
inc
pop
ret
and
fwait
gs
hlt
adcb
cmp
mov
adc
push
xchg
push
jp
icebp
ljmp
cli
add
sti
ret
repz
inc
mov
or
jne
ljmp
xor
lods
lahf
mov
add
mov
cmp
inc
icebp
lret
pop
lret
movsb
cwtl
adc
dec
pop
hlt
mov
and
enter
popa
test
std
std
mov
shlb
pop
inc
mov
xchg
lcall
mov
sbb
gs
and
or
scas
mov
mov
sub
or
fsubrs
inc
cmp
adc
pop
dec
push
jne
das
xchg
xchg
cmp
sbb
mov
and
into
je
adc
mov
insb
leave
sbb
lret
xlat
mov
mov
mov
filds
dec
fcmove
mov
jge
jne
jg
xchg
adc
push
out
xchg
stos
add
imul
jg
xchg
gs
loopne
out
lcall
fucomp
jbe
lahf
xchg
outsl
jb
shll
mov
dec
aas
mov
jno
jecxz
sbb
aam
mov
inc
sbbl
adc
push
xchg
call
xorl
js
jns
pop
jle
pop
mov
jecxz
adc
xchg
js
insb
dec
pop
jne,pn
pop
cltd
or
iret
adc
sarb
add
xor
push
int
cmp
xchg
ss
push
iret
jp
dec
sahf
test
jmp
dec
xchg
andl
push
mov
test
std
lret
or
add
popf
and
mov
jbe
rcrb
or
pop
mov
pop
lods
push
push
pop
jge
ret
pop
dec
add
mov
pop
scas
stos
mov
push
addr16
ficomps
jge
in
lret
jge
fidivrs
push
cmc
xchg
xchg
insb
cmpb
lods
ss
dec
adc
jb
vmovsldup
and
sbb
mov
lret
dec
mov
mov
pop
mov
xchg
mov
jmp
push
mov
rorl
jns
xor
jl
xchg
leave
or
lret
inc
push
push
shr
jne
jo
ja
outsl
cltd
fdivrl
lods
push
inc
loope
aad
sarb
mov
ja
ret
xlat
nop
inc
inc
pop
sbb
fisttpl
mov
nop
cmpsb
data16
jns
push
fnstenv
dec
repz
jle
inc
dec
pop
pop
xchg
sub
les
js
outsb
sahf
push
ror
hlt
mov
out
movsb
push
shlb
push
and
ljmp
xor
out
les
mov
mov
pop
ficoms
mov
lea
dec
push
sub
adc
fcompl
int
xchg
jns
fs
mov
repz
sub
cmp
jle
mov
sub
inc
or
daa
sti
out
repnz
pop
push
pusha
mov
lock
outsb
or
cmpsl
iret
je
or
jo
ja
cwtl
mov
or
sbb
xor
sbbl
xlat
cmpsl
test
int
rorl
push
dec
mov
adc
push
scas
dec
dec
popa
jae
dec
dec
and
ds
out
xchg
mov
push
loopne
ss
pop
js
xorl
fistps
adc
scas
lock
mov
je
fsubrl
loopne
arpl
add
adc
jne
orl
insb
mov
push
cmp
lds
jb
add
add
js
jp
push
arpl
test
incb
add
push
cmpsb
popf
and
xchg
inc
xchg
jo
mov
int
mov
inc
jae
sbb
mov
and
lret
xchg
imul
dec
add
or
sbb
or
dec
xor
sub
cmp
push
push
testb
push
or
sub
int
jp
push
and
push
push
loop
das
mov
xchg
push
out
leave
xchg
sahf
jge
mov
and
icebp
popa
push
stos
cmp
xor
mov
repz
adc
cmc
popf
cmpsb
rorl
cmp
in
add
sub
popf
xor
jl
scas
js
aas
int3
push
out
bound
ljmp
sbb
mov
rcrl
adc
add
sub
jge
popa
push
fsts
pop
pop
inc
cmpsb
jbe
jecxz
icebp
in
popf
fmull
out
lahf
mov
sub
iret
dec
shl
sbbb
and
xor
sub
inc
repnz
stc
xchg
xchg
cmp
cltd
fidivs
pop
sub
ret
sbb
cmpsb
push
push
pop
fs
shlb
cmp
dec
lret
es
adc
into
cmp
rcrb
sub
inc
popf
jle
loope
hlt
mov
ficoms
jne
xor
pop
fwait
sahf
or
sbb
xchg
sub
add
bound
aas
dec
xor
jl
xor
xlat
cmp
adc
jmp
loop
arpl
add
mov
and
or
lea
stc
jl
add
test
sub
or
mov
mov
xorb
test
cmp
add
loope
sbb
sti
cmp
xorb
pusha
inc
imul
inc
fnsave
enter
and
mov
or
pop
clc
mov
xor
and
inc
add
mov
in
call
in
or
cmpsl
mov
lret
outsb
dec
xor
sbb
mov
sbb
cmpsb
aad
es
mov
mov
jl
addr16
and
popf
push
icebp
pop
dec
pop
sahf
in
fwait
negb
sub
repnz
cmp
aaa
sub
pop
dec
rcrl
cmc
cs
cmp
xchg
lds
add
dec
imul
pusha
pop
lahf
es
stos
out
xor
popa
clc
or
xchg
inc
shrb
sbbl
sub
cmp
leave
stos
aaa
or
test
add
add
in
cld
ljmp
adc
mov
mov
clc
inc
outsb
push
add
call
in
push
stos
mov
add
push
or
lret
fs
add
cmpsl
fsubrl
movsb
cmpsl
inc
push
xor
jae
aad
test
mov
call
out
scas
mov
lods
js
stc
ret
push
xor
and
icebp
jns
jae
xchg
and
jo
push
ss
mov
cli
cmp
call
cmp
mov
inc
movb
cli
push
sub
dec
xlat
ficompl
mov
mov
or
test
lock
rcl
clc
inc
cmp
sbb
dec
mov
mov
dec
scas
ljmp
jns
or
pusha
mov
stc
cs
cmp
aaa
and
ret
outsl
dec
or
push
xor
mov
add
ljmp
pop
xchg
add
pop
ss
in
mov
fbld
hlt
push
shrl
jle
pushf
push
sahf
call
and
into
xorb
mov
sar
lods
or
cmpsb
sarb
sub
clc
int
jle
fsubrl
add
pop
lea
ss
lea
mov
sbb
sbb
and
and
fnstsw
call
outsb
mov
xor
int
fmull
lods
and
inc
add
add
inc
movsb
xor
sbb
lret
idivl
bound
mov
cmp
fildl
xchg
mov
mov
mov
aad
int3
jecxz
into
push
jbe
cltd
jmp
adc
insb
mov
lods
rclb
dec
shrb
and
mov
cmpsl
sbb
sub
std
pop
mov
xor
sbb
mov
outsl
clc
lods
incb
or
xchg
jmp
jp
pop
loope
ss
icebp
inc
mov
in
lcall
addr16
test
xchg
cmp
cmovnp
mov
jle
fldt
or
pushf
pop
popa
xchg
push
cmc
pop
dec
ss
cmpsl
push
scas
and
pushf
test
adc
out
mov
or
pop
push
mov
xchg
dec
fidivs
ds
das
jo
sub
shll
sarl
cmp
jbe
sub
out
dec
xchg
shrb
movsl
inc
bound
adcb
scas
push
fbld
test
push
repnz
bound
ljmp
dec
pushf
xchg
add
in
sti
and
subl
loopne
in
stos
fcom
cmp
mov
jb
mov
in
sbb
or
dec
shll
in
mov
xchg
ret
mov
out
es
dec
mov
ds
push
push
arpl
pop
inc
xor
xor
out
enter
jp
sahf
mov
dec
in
xor
mov
push
inc
xor
or
in
aad
insb
mov
mov
xchg
filds
int3
cmp
cs
loop
sub
shr
pop
scas
jl
xor
mov
inc
repnz
mov
or
add
sbb
xchg
pop
push
imul
xchg
test
sub
push
mov
cs
xor
push
push
sar
fwait
add
loop
pop
das
mov
pop
and
imul
cmpsb
addl
gs
cmp
or
jo
dec
in
int
fstpt
dec
adc
cmp
cli
imul
adc
push
ss
sbb
lahf
cmpl
push
pop
mov
mov
xor
test
mov
xchg
pusha
pop
addr16
imul
in
dec
sub
data16
xchg
xchg
push
mov
outsl
test
mov
adc
adc
ljmp
in
jmp
or
jl
pop
cs
push
mov
and
inc
divb
xchg
mov
cld
int
jmp
aad
lds
orb
mov
mov
cs
addr16
adc
adc
fwait
pop
outsb
sub
add
push
stos
cmp
hlt
xor
pop
or
sbb
jae
cmp
dec
xor
clc
and
in
out
insb
dec
fcoml
popa
or
mov
pop
lds
xchg
lret
inc
adc
inc
mov
outsb
dec
cs
xchg
adc
mov
dec
xor
xchg
insl
jb
loope
pushf
xor
cli
mov
dec
push
subb
and
dec
iret
jnp
fidivrs
popf
and
jae
dec
sbb
jbe
pusha
pop
mov
and
dec
jb
popa
adc
sub
adc
test
repnz
xchg
or
into
es
hlt
jne
hlt
mov
mov
push
dec
adc
adc
jb
lock
cltd
adc
xchg
cmp
sbb
sub
push
dec
popf
nop
test
fildll
jecxz
sarb
ret
cmc
aad
cmc
sub
rcll
mov
add
xchg
cmc
pop
sbb
mov
sub
dec
pushf
jecxz
cmc
pop
inc
cmp
push
shll
inc
lea
int
getsec
std
and
jle
mov
shrb
cwtl
hlt
dec
and
icebp
lock
xor
loop
jmp
cmp
sub
es
ss
lods
xchg
push
ror
pop
add
and
xchg
lahf
add
mov
fwait
aaa
icebp
adc
ret
sbb
mov
sbb
cmp
and
dec
pop
sbb
sarl
sbb
add
int
and
pop
xchg
rcll
ljmp
add
int3
call
sub
out
xor
mov
pop
push
or
inc
push
cmp
daa
inc
int
mov
jne
fwait
in
fwait
sbb
hlt
inc
mov
mov
pop
mov
dec
lock
inc
popf
pop
stos
mov
mov
movsb
popa
ds
lret
ss
mov
push
mov
addr16
popf
xor
xor
jmp
or
xchg
xchg
cmc
mov
call
sbb
fdivrs
inc
cmp
sub
add
sbb
mov
les
or
push
sub
xchg
jae
scas
jle
arpl
push
adc
fsubr
cwtl
rcl
sar
cltd
aad
std
nop
and
adc
inc
mov
bound
mov
sub
hlt
sub
and
mov
xor
push
loope
lahf
mov
repnz
pop
jl
pop
in
pop
add
mov
xlat
popf
push
enter
sbb
ror
mov
aad
sub
pop
popa
fdivrl
cltd
or
pop
arpl
lret
in
out
fwait
stos
mov
shll
add
xor
pusha
pop
mov
add
or
inc
ja
pop
push
push
popf
test
xor
jle
popf
lahf
call
popf
das
mov
or
inc
cwtl
push
mov
test
push
pop
nop
lret
add
test
jl
push
sub
in
and
push
cmp
ret
or
cmp
push
mov
je
sbb
mov
mov
cmp
test
xor
mov
add
sub
push
push
dec
xchg
sub
mov
rcrl
aad
and
jl
lahf
mov
or
pop
out
les
ret
hlt
or
push
inc
dec
lods
pop
cltd
emms
push
jb
stos
jne
out
xchg
or
leave
test
hlt
push
adc
cmp
ja
or
xor
daa
cmp
out
push
outsl
mov
in
dec
cmc
lahf
sub
out
ficoml
xor
sub
mov
dec
hlt
push
xchg
mov
and
sti
xchg
lods
mov
adc
cmpsb
repnz
cmpsl
xchg
roll
mov
jbe
ret
or
rcrb
xchg
mov
mov
je
pop
or
cmp
push
or
ss
cmp
xor
add
cltd
and
and
pop
dec
test
pushf
xchg
cmp
inc
and
inc
xor
jbe
pop
lods
xchg
ret
xchg
lcall
sbb
imul
mov
imul
jp
xchg
or
ljmp
aaa
or
pop
into
adc
test
push
ljmp
sbb
or
pushf
or
sbb
fbstp
lcall
aaa
out
call
fsts
das
xor
or
fwait
xchg
stos
mov
leave
clc
and
add
mov
mov
call
lods
in
xor
lahf
mov
cli
aad
clc
mov
cmp
xchg
int
test
pop
gs
arpl
repnz
mov
cmp
xor
pushf
fsubl
add
dec
dec
push
add
out
sub
xchg
mov
xchg
xorl
test
jl
jecxz
movsl
mov
sub
dec
push
cmp
xor
loop
cmc
xor
add
fsubrs
mov
out
adc
jns
je
nop
enter
pop
dec
nop
jp
xchg
xor
clc
icebp
and
add
mov
xchg
lods
dec
jns
inc
fistl
jmp
mov
dec
pop
dec
push
jb
call
test
sub
imul
jnp
pop
inc
mov
mov
out
jbe
enter
arpl
dec
mov
cmpsl
add
lahf
pop
mov
pop
mov
into
adc
dec
lret
cmp
insb
push
lret
stos
dec
js
test
stc
cmp
cwtl
push
decb
xor
mov
fldcw
push
adc
xchg
mov
adc
cmp
push
ret
pop
lea
mov
hlt
in
popa
push
xor
shrl
jg
dec
sub
cs
int3
insl
xchg
shl
out
lcall
pop
std
mov
jge
xchg
out
adc
inc
mov
xor
cwtl
add
sbb
dec
cmpsb
inc
ror
es
dec
daa
js
mov
inc
push
fnstcw
inc
mov
cmp
cmc
adc
dec
testl
pop
fstps
imul
insl
popa
ss
lods
fdivr
outsl
pusha
sub
cmp
xor
xlat
push
dec
mov
xor
mov
xchg
scas
lea
ja
xchg
jbe
sbb
aaa
les
hlt
or
push
or
clc
sub
mov
das
pop
fbstp
icebp
mov
and
addl
jns
imul
stos
js
shlb
xchg
cli
cmp
mov
sbb
and
xor
insl
lret
aam
jmp
inc
out
ljmp
lcall
lcall
mov
jb
aad
mov
cmc
les
call
daa
mov
jmp
pushf
xor
ds
outsb
cltd
xor
push
cmc
aas
pop
and
outsl
in
mov
shrb
hlt
pop
mov
and
loop
stos
loopne
adc
sbb
lds
lahf
pop
mov
pusha
cs
ja
iret
fwait
rorb
jge
cs
lea
and
cmc
rclb
imul
imul
adcb
and
outsb
xchg
loope
add
ficomps
add
mov
mov
inc
jo
or
push
imull
and
xor
mov
inc
test
push
lret
mov
std
push
mov
sti
mov
jno
outsl
pushf
xchg
cmpxchg
push
arpl
xchg
and
xchg
repz
add
das
ret
sbb
cmp
dec
nop
adc
sbb
cmp
inc
lods
inc
xchg
scas
rol
je
cmpsl
clc
or
cmp
and
rolb
lret
cmpsb
imulb
push
fidivs
mov
sahf
or
jno
push
fimull
ret
inc
stc
cli
cltd
outsb
repz
cmp
xor
outsb
std
dec
mov
mov
push
daa
popf
pop
inc
incb
adc
xchg
in
dec
mov
cmp
xor
xchg
mov
sub
dec
sbb
out
mov
test
pop
jne
xchg
out
test
or
push
lret
cld
dec
sbbl
xchg
mov
loope
cmpsb
lods
adc
in
cmovb
dec
hlt
lcall
mov
xor
cmp
push
cmpsb
add
jno
pop
fiaddl
and
cmp
lds
cmp
test
or
insb
mov
mov
loopne
jmp
mov
jge
xchg
lds
push
inc
scas
jbe
and
sub
notb
cwtl
scas
pop
mov
xor
mov
hlt
pusha
xor
add
sbb
cmpsb
leave
outsb
add
jmp
xor
mov
pushf
push
xor
fwait
push
dec
lea
xchg
sti
es
daa
fld
push
jno
fs
out
aad
in
jo
dec
adc
dec
jno
aad
sbb
mov
mov
lods
xchg
add
sub
jne
push
paddsb
cmp
adc
cmp
ljmp
jbe
pop
incb
pop
and
cltd
jno
jno
add
adc
fwait
xchg
data16
push
je
xorb
fiadds
sub
mov
shlb
push
popw
jns
adc
mov
negb
pop
pushf
loopne
pushf
cwtl
bound
xor
cmp
nop
add
mov
inc
xor
pusha
jnp
xchg
lcall
push
jbe
das
sti
in
les
mov
scas
mov
mov
jns
xchg
mov
inc
mov
pop
adc
mov
xor
lahf
outsl
and
push
pop
dec
pop
cmpsb
jmp
cmp
in
in
dec
sub
out
mov
and
sbb
repz
std
add
mov
aad
cmp
cmp
cmc
push
push
enter
add
push
imul
fcomp
mov
push
pop
clc
imul
imul
movsb
or
sti
test
bound
push
ss
and
push
movsb
jno
sbb
and
xchg
rclb
adc
push
adc
and
ret
sbb
imul
inc
xor
scas
nop
xor
inc
cmovge
std
ret
push
mov
push
into
push
js
insl
pop
push
xchg
xchg
or
fiaddl
imul
inc
or
push
imul
cmp
jp
add
sahf
jmp
ss
mov
fsubs
mov
cmp
xchg
sub
jns
cwtl
inc
pop
into
push
push
mov
repnz
or
fisubl
jmp
mov
pop
sub
cs
cltd
or
push
mov
lods
inc
cmc
jne
adc
mov
addb
jae
pop
rcr
cmc
xor
lods
les
lcall
int
push
faddl
cmp
jle
fwait
lea
jl
xchg
in
inc
inc
add
jnp
sahf
mov
xor
lods
pushf
pop
cmp
rcr
push
test
je
xchg
pop
or
stos
out
push
dec
fs
push
rclb
push
pusha
cmpsl
and
jne
je
jno
mov
imul
sub
sub
es
jp
add
movsb
pushf
iret
xchg
sub
and
test
sbb
push
or
inc
cmpsl
mov
orb
add
adc
inc
repnz
popa
pop
aas
call
inc
stos
sub
cmpsb
mov
cmp
in
ja
mov
faddl
daa
cwtl
and
xor
jbe
dec
push
daa
lods
sbb
loope
lahf
pop
addr16
push
adc
sahf
pop
xchg
movsl
iret
and
add
cmp
xchg
xor
subb
data16
jmp
jl
mov
outsb
add
ret
mov
stc
mov
dec
sub
aas
pushf
ljmp
or
pop
xor
xor
ficomps
icebp
inc
in
fcomps
jecxz
push
mov
insb
jne
cs
jmp
add
sbb
fmuls
popa
sub
movsl
add
mov
bound
rsqrtps
arpl
pop
pop
out
cltd
jae
mov
sbb
pop
popf
add
ret
mov
out
xor
xchg
outsb
daa
idiv
cli
mov
daa
mov
lcall
jecxz
fsubl
sub
repz
sbb
push
lods
jbe
xchg
je
adc
mov
imul
jecxz
lret
pop
sbb
lret
call
movsb
stc
adc
fbld
push
divb
mov
adc
xchg
lock
fcomps
mov
js
int
lret
xlat
pop
jno
in
pop
sbb
add
iret
mov
cmp
daa
orl
lds
xlat
lods
testl
and
ds
test
dec
stos
jno
sub
push
test
shlb
xor
aas
aam
mul
aad
ret
mov
push
popa
in
push
pop
add
xchg
inc
rcl
lds
je
in
sub
xor
mov
je
std
pop
dec
sarb
adc
ret
out
mov
push
jns
hlt
mov
cmc
lods
pop
xor
cmpsb
xchg
in
ret
xor
or
mov
inc
cmp
addb
call
mov
out
divb
jns
and
add
aad
roll
and
pop
repz
add
fstl
inc
shrb
jbe
in
cli
xchg
push
push
add
mov
push
out
roll
cli
sub
roll
je
cmp
aaa
int3
pop
dec
ljmp
repz
repz
inc
rcrb
rcrl
sbb
mov
push
arpl
cmp
pop
lret
scas
push
mov
sub
jne
mov
data16
adc
mov
xchg
xchg
test
mov
cmpb
in
pop
es
out
in
and
mov
or
repz
movsb
xchg
aad
jl
mov
movsl
cmpsb
mov
cmpsl
and
sti
dec
cmp
xor
lds
notb
aam
cmc
js
bound
or
rcrb
jae
lods
xchg
loop
dec
xor
aam
data16
jbe
add
and
push
in
cld
sub
loop
fistpll
cmpsb
imul
daa
gs
test
scas
pop
into
pop
adc
dec
add
or
iret
and
xlat
cmp
xor
ret
adc
addr16
iret
push
and
mov
fiaddl
push
mov
ds
stc
and
sbb
inc
jp
fcomi
jp
lds
or
push
jno
lock
leave
push
outsb
je
cmp
sub
bswap
jmp
jle
aad
int
pop
cmp
and
mov
int
xor
or
mov
pusha
add
jmp
icebp
ds
je
sub
insb
add
pop
out
jne
stos
xchg
rorb
push
popa
or
shll
sti
push
insb
ljmp
mov
xor
add
pop
add
fbstp
fidivrs
add
rcrb
rorl
dec
arpl
xor
pop
test
not
sbb
sub
adc
ljmp
test
sub
cmp
mov
sbb
xor
jnp
xor
push
test
push
add
xchg
test
ljmp
mov
xchg
lods
pop
inc
sbb
bound
cs
jg
fstpt
or
cld
inc
mov
ja
mov
jns
loope
inc
stc
fcompp
addb
lret
mov
add
in
or
enter
ja
jg
mov
mov
aam
lods
mov
int
cmp
into
sbb
daa
subl
inc
js
or
inc
scas
add
aaa
jle
jbe
imul
inc
lahf
in
cmpsl
push
divl
push
pop
jne
jge
or
scas
sbb
nop
and
out
dec
fidivrl
jb
cmp
push
cmpsb
inc
in
jb
mov
mov
or
fldl
ja
shll
add
arpl
xor
scas
push
test
mov
pop
mov
mov
fs
pushf
inc
and
ds
mov
or
xchg
out
mov
ja
rcll
int
out
idivl
pop
repz
movsb
pop
hlt
clc
push
stos
stc
dec
ljmp
sbb
push
adcl
repz
sarb
xor
xor
xor
ret
mul
mov
xlat
ret
mov
lods
adc
rcll
mov
sbb
loopne
addr16
daa
js
push
cmpsl
pop
cmp
fcompl
mov
in
push
mov
outsl
shrb
cmc
mov
pop
test
xor
inc
ret
jno
sub
rorl
in
aaa
mull
jg
icebp
call
ret
outsl
fdivs
clc
inc
push
sub
test
jnp
test
add
fldl
add
ds
push
jo
movsl
outsl
addr16
test
xchg
in
test
pop
dec
into
cmp
sub
dec
xchg
dec
cmp
js
daa
sub
push
insb
nop
xorl
clc
jno
stos
push
hlt
shlb
xlat
pop
cld
push
sub
mov
cltd
sub
ja
lods
scas
ds
xchg
cwtl
stc
cmp
bnd
ja
hlt
insb
icebp
inc
popf
xchg
pop
or
xchg
ror
imul
push
or
inc
into
inc
mov
int
mov
lods
inc
jns
ja
shl
or
mov
mov
or
xor
test
mov
xchg
mov
cltd
loop
dec
jns
add
jle
mov
hlt
pop
fdivl
cmc
dec
sbb
jle
or
ss
call
lcall
fstpt
shlb
in
jmp
fisubs
push
fisttpl
jl
xchg
mov
xchg
rcll
push
mov
push
sub
aam
sub
add
popa
imul
lcall
xor
cmp
mov
je
xchg
pop
xchg
jle
xchg
icebp
push
push
dec
push
fnsave
sti
adc
jp
add
lea
cmp
jnp
repz
mov
inc
scas
sub
add
bound
mov
loopne
js
cmpsl
sbb
xchg
jecxz
ffreep
das
dec
xchg
mov
xor
and
rorb
sub
xchg
mov
pop
and
imul
ret
push
test
mov
xchg
mov
call
orb
xchg
popa
push
popa
push
mov
jle
pop
test
fidivrl
cmp
and
xchg
sbb
jg
dec
shr
mov
mov
mov
push
push
mov
fbstp
jno
stc
arpl
xor
xchg
insb
xor
adc
cmp
inc
enter
inc
push
out
mov
dec
inc
pop
cwtl
jecxz
and
mov
nop
inc
gs
popf
hlt
out
inc
xchg
dec
sub
cli
pop
loope
sub
mov
mov
sahf
int
xchg
add
out
pop
jecxz
mulb
js
enter
rcll
mov
arpl
lret
sub
add
cmp
push
dec
jg
lods
jno
mov
leave
mov
inc
mov
mov
push
sub
mov
mov
and
push
mov
mov
hlt
jecxz
idiv
or
mov
test
out
sub
cwtl
adc
xor
cli
push
push
sti
in
or
lock
and
loop
adc
inc
cmp
fucom
daa
xchg
addr16
std
sbb
mov
or
in
jb
jae
filds
enter
mov
mov
dec
mov
xchg
or
sbb
mov
test
loope
and
call
mov
clc
push
add
imul
xlat
test
test
int
int3
pop
jecxz
mov
movsb
out
lods
ret
adc
xlat
inc
loopne
jmp
ljmp
mov
sub
cmpsl
std
or
bound
pop
aad
or
pop
orb
push
or
push
jns
out
jo
in
cwtl
pop
lahf
add
ret
add
xchg
xchg
sub
icebp
out
sub
sbb
jmp
xchg
or
jmp
xchg
lahf
mov
jb
pop
fwait
xchg
lea
pop
out
pop
push
xor
cli
dec
mov
pop
nop
add
mov
pusha
call
jle
sti
outsl
lcall
mov
pop
push
xchg
enter
pop
test
or
int3
pop
cmp
pop
mov
push
cmpsb
dec
pop
aas
cmp
loope
xchg
ds
shll
push
sbb
fstl
loopne
inc
imul
pop
loop
into
out
dec
shl
adc
push
mov
rolb
add
out
cmp
add
mov
and
ficoml
inc
enter
fidivrl
lret
dec
mull
mul
dec
movsb
mov
push
fistps
mov
scas
stc
sbb
sub
jno
cmp
push
je
push
push
push
lods
mov
jmp
out
fs
push
adc
fcomps
and
dec
cmp
div
lret
test
cmpsl
push
iret
inc
push
loop
std
mov
les
cmpsl
mov
inc
dec
and
rolb
loopne
cltd
pop
test
test
adc
push
rcrl
aad
imul
test
dec
cmpl
inc
jbe
mov
mov
jle
and
cli
f2xm1
cltd
lds
dec
out
test
cmp
adc
cmpb
stc
push
xchg
mov
pop
mov
pop
pusha
jbe
sbb
dec
int
cmp
push
lods
and
push
sahf
or
popa
mov
into
dec
orb
and
pmulhw
push
mov
les
mov
fnstcw
fs
outsb
stos
rorl
sbb
mov
add
mov
pop
loope
inc
out
lods
decl
or
inc
int
xchg
jno
mov
aas
sub
pop
aad
mov
adc
mov
pop
add
mov
jns
ret
jb
loope
or
pop
and
cld
sbb
pop
iret
imul
daa
icebp
push
aas
pop
icebp
jo
mov
iret
in
adc
loopne
aam
adc
jmp
shll
icebp
enter
in
movsl
cltd
push
adc
jge
data16
movsl
inc
pop
xor
sahf
adc
mov
jbe
push
mov
cmpsl
sbb
shr
movsb
add
fstpt
rol
mov
or
in
jo
xchg
mov
cmp
xchg
bound
push
js
jg
jp
ret
cmpsb
inc
scas
stos
pop
xor
xor
mov
rcr
dec
push
cld
mov
inc
nop
push
add
sahf
sbb
lods
push
stos
inc
test
sbb
and
in
mov
push
and
cmp
fwait
cmp
aad
add
gs
jp
adc
test
xor
test
xchg
arpl
jne
pop
popf
mov
decb
ds
mov
movsl
jge
je
fstpt
or
arpl
mov
lea
lods
lcall
das
sbb
fadd
in
add
icebp
inc
ljmp
adc
push
pop
add
and
mov
cmc
or
or
sti
add
inc
mov
sahf
in
les
cli
cmp
daa
mov
fwait
or
iret
mov
int
js
jbe
xchg
pop
and
shrb
or
movsb
out
std
push
frstor
sub
inc
outsb
mov
xor
sbb
pop
cmc
shlb
rcrl
addr16
cmpsb
add
lock
cmp
insb
or
fisubs
sub
sahf
test
add
call
jo
pop
inc
adc
aas
shlb
enter
lea
lods
fidivrs
arpl
fbstp
mov
adc
inc
frstor
inc
jae
outsb
xor
scas
nop
push
insl
mov
movsl
xchg
push
sub
push
lods
mov
jno
imul
push
sbb
popl
jne
xor
aas
les
push
mov
cmp
lahf
movl
sbb
int3
sub
adcl
xor
add
cld
enter
out
add
dec
movb
cli
add
fldt
inc
stos
xor
mov
push
and
insl
stos
mov
pop
sbb
cmp
leave
loope
fs
xor
pop
iret
je
nop
lret
dec
into
xchg
jp
inc
cmp
lods
adc
inc
lods
test
imul
jb
int3
sub
out
in
and
add
outsl
mov
pop
les
cmp
imul
xor
push
repnz
lahf
popf
push
cmp
dec
out
fwait
lcall
mov
in
jo
jne
mov
or
push
cmpsb
mov
dec
xor
jo
cmpsl
lret
icebp
lret
xchg
outsl
dec
sub
mov
cmp
icebp
imul
push
fisubrs
lahf
adc
pop
bound
inc
add
outsl
mov
divl
addb
mov
adc
leave
iret
or
je
aas
stos
inc
sub
inc
stos
dec
out
mov
std
xor
cmp
mov
adc
xchg
je
jne
and
shlb
incb
jp
stc
pop
ds
fsubr
mov
scas
push
fldl
popf
mov
add
test
xchg
mov
ds
push
mov
adc
sub
pop
lods
dec
test
add
push
cli
push
imul
jne
add
push
push
fcomps
mov
push
cmp
push
sbb
mov
pusha
stos
pop
fs
test
dec
cmp
rorl
aam
or
rcl
xchg
sti
adc
cmp
lahf
popa
leave
pop
clc
clc
in
and
push
jns
mov
push
movsl
jge
xchg
shlb
push
loopne
test
sub
jbe
cld
adc
pop
cmp
clc
fsubl
sbb
mov
es
lock
mov
imul
xor
adc
and
in
mov
mov
sub
dec
dec
sub
or
or
inc
mov
xchg
and
cltd
push
pop
fistpl
lea
mov
std
outsb
push
pop
hlt
cmp
push
mov
mov
adc
lea
pop
xchg
xor
push
push
bound
scas
addr16
in
dec
stos
push
jle
cltd
js
clc
insl
cmc
into
push
inc
xor
adc
imul
jne
testb
icebp
push
cwtl
aas
push
dec
xchg
insb
jne
jnp
dec
dec
repz
out
daa
dec
sbb
shl
insl
pop
mov
push
adc
imul
fdivp
adc
xchg
lret
out
cltd
pop
sbb
xchg
loope
cmc
dec
sahf
mov
lret
mov
mov
push
pop
outsl
lcall
cmp
iret
and
fdivs
pop
mov
inc
xchg
outsl
dec
cltd
ds
scas
ja
xchg
xor
adc
sti
sub
loopne
cltd
loope
mov
out
lods
cli
addr16
push
pop
and
nop
test
dec
popf
flds
pop
lcall
into
out
mov
pop
jle
mov
stos
cmp
jp
lret
repz
jns
sub
outsl
decb
iret
js
fdivl
push
pop
aas
fidivs
xchg
or
into
repnz
aad
xchg
outsb
jg
pop
movb
and
sub
or
mov
cmp
fwait
xchg
sbb
push
mov
inc
mov
vpshuflw
pusha
insb
add
push
loope
pop
sbb
or
push
aaa
push
fsubl
fildll
adc
lds
ss
push
and
js
push
jl
sub
xorb
push
mov
aas
popa
push
inc
inc
sub
add
movb
add
mov
aam
or
lahf
sub
adc
lahf
fbstp
add
jge
cltd
add
mov
mov
pop
push
out
mov
jmp
loop
fadd
add
push
xchg
or
mov
adc
jns
add
outsb
stos
add
lret
loopne
ljmp
ljmp
call
cmp
hlt
shr
jmp
jp
xchg
jns
jns
cmc
mov
sbb
xor
and
mov
or
ds
sti
iret
pop
mov
mov
xor
lods
leave
not
mov
lods
movsb
das
pusha
mov
xor
xor
loopne
cmc
sbb
lcall
xchg
jecxz
jo
aas
jns
in
je
mov
or
mov
hlt
xlat
cmp
mov
jmp
cli
insl
fadd
rolb
std
in
add
sbb
cmp
hlt
fsubrl
fldcw
leave
inc
jp
gs
sub
ret
insl
xor
jbe
aas
out
xchg
adc
jnp
popa
cmpsl
inc
lds
cmp
outsl
sbb
jae
ds
sub
jmp
xchg
fdivrp
sub
jp
push
or
lds
adc
mov
dec
pop
mov
pop
dec
dec
mov
lds
sub
inc
xchg
bound
add
sub
popa
pop
jmp
push
pop
leave
cld
jne
arpl
xor
inc
dec
test
xchg
jecxz
push
push
sub
jno
mov
cmpsb
cld
adc
subb
test
cmpsl
mov
mov
xchg
arpl
imul
adc
popf
bound
test
xchg
sbb
adc
xor
arpl
adc
xchg
scas
jge
out
and
adc
pop
sahf
stos
mov
in
out
imul
add
es
sbb
js
jg
cmp
jp
repz
je
aas
sarb
sub
out
shlb
sub
xor
roll
lahf
mov
pop
xchg
push
sub
mov
adc
mov
ss
xor
cmpl
push
aas
inc
sub
fiaddl
push
adc
adc
push
je
clc
dec
pop
insl
cmp
negl
lods
jo
mov
mov
jno
cmp
daa
sub
shlb
add
push
movsl
inc
mov
je
imul
aaa
jbe
lods
imul
jg
shr
es
pop
or
adc
add
clc
pop
xor
jmp
sub
xlat
lret
mov
sub
lea
gs
ret
jecxz
shlb
dec
sub
scas
icebp
jns
out
or
dec
sbb
fcompl
mov
mov
imul
cmp
movsb
push
test
mov
lahf
or
sub
push
jae
lea
adc
aaa
fdivr
mov
fmull
add
out
cmpsl
cmp
insb
cmp
sbb
pop
inc
cld
jmp
sti
cmpl
movsl
push
sbb
iret
js
gs
dec
enter
clc
fnstenv
int
movsl
call
dec
fldl
insl
push
test
testl
repnz
mov
mov
fadds
popf
test
lock
xchg
scas
push
pusha
lret
cs
leave
and
pop
icebp
repz
shll
aam
pop
push
pop
pop
adc
jbe
push
fwait
arpl
popf
int
add
mov
push
xchg
mov
leave
les
test
out
xor
push
jno
or
aad
popl
iret
aam
inc
jo
adc
ss
les
push
cmp
int
insb
nop
mov
test
cmc
cmc
cmp
mov
ds
fcoml
xchg
pop
shll
cmpsb
add
daa
es
imul
sar
mov
and
neg
fsubrl
mov
add
sbb
and
scas
cmpsb
loope
and
cwtl
bound
iret
in
in
jnp
enter
sti
cmc
insb
add
xorb
mov
inc
aas
outsl
xchg
or
shl
xlat
mov
scas
mov
inc
addr16
scas
pop
add
xor
push
and
test
xor
and
mov
sub
call
mov
xlat
fstps
push
cmpsb
es
outsb
mov
das
in
inc
jg
sbb
stc
xchg
int3
fpatan
jbe
mov
xor
add
push
movsl
and
arpl
fbstp
rorl
and
pop
fcmovb
in
add
scas
jg
fmul
push
jmp
or
out
arpl
or
iret
push
push
in
mov
jo
mov
add
cmp
aam
pop
fs
jmp
xorb
sub
xchg
dec
arpl
lds
sbb
cltd
jp
mov
jns
ss
arpl
xchg
xchg
scas
mov
xchg
mov
lcall
fiadds
psubsb
gs
test
dec
mov
dec
mov
mov
xchg
jmp
pop
sub
pop
and
and
into
jne
or
les
rcll
int3
dec
fnstsw
add
pushf
insb
sub
mov
flds
mov
jmp
repnz
jg
jp
jno
mov
movsl
into
jecxz
lret
sbb
cltd
es
imul
popa
xlat
test
and
aam
cli
cmc
nop
pop
and
es
mov
mov
jb
jae
mov
dec
push
mov
xor
ja
lret
das
lock
mov
test
fs
mov
dec
fldenv
int
mov
push
mov
das
xorl
daa
inc
pop
mov
cmc
mov
push
ret
add
sub
fbstp
jno
xlat
arpl
rclb
ljmp
jl
gs
lds
test
mov
lods
jo
data16
cld
jae
in
popa
ljmp
xchg
cld
cmp
or
stc
inc
mov
test
stc
adc
xchg
jle
ret
mov
push
pop
cli
cwtl
dec
pop
out
xchg
leave
lret
push
fwait
in
cmp
sbb
mov
pop
cld
imul
fcomps
sbb
sub
rcll
lock
and
out
jp
pop
loop
les
xchg
scas
or
fsubp
or
sub
nop
and
fsubs
pop
out
outsl
mov
mov
sub
andb
ret
pop
pop
fistps
test
sbb
ror
adc
xor
pop
in
outsl
push
cmp
inc
xor
push
or
cli
cmp
add
mov
jae
cmc
test
sbb
push
test
dec
in
jg
loope
in
dec
dec
mov
into
lcall
inc
call
pop
xorb
mov
mov
and
imul
scas
shl
popa
jns
inc
test
lea
mov
jge
aaa
roll
jb
cmp
inc
jae
mov
dec
or
jo
lahf
adc
pop
pushl
outsb
dec
sahf
mov
shll
and
sbb
vpmacsswd
jae
scas
rorl
clc
das
jge
xchg
and
pop
xor
push
push
pop
push
mov
jb
xor
sub
lock
jne
dec
inc
decb
je
add
fcmovne
aas
ret
jne
xchg
mov
js
out
cmp
dec
push
andl
stc
sub
mov
notl
mov
ja
fiadds
outsb
push
xor
mov
jnp
shlb
mov
sub
xchg
sub
pop
and
clc
btr
push
negb
jns
push
addr16
add
add
adc
gs
push
lret
mov
add
inc
lahf
pop
lret
dec
enter
mov
sbb
sarl
cltd
inc
mov
stos
mov
dec
sbb
fdivrs
adc
push
insb
lret
das
clc
lcall
mov
lcall
ficompl
or
push
and
daa
fdivs
mov
mov
cmp
sub
cmpsb
push
mov
testl
cmpsl
mov
rclb
in
inc
adc
sub
rolb
pusha
and
dec
xchg
pop
dec
rep
cld
es
in
outsb
sbb
jg
push
cmp
push
mov
lea
hlt
xlat
mov
scas
fnsave
jb
fcmovnu
and
xchg
and
xor
mov
in
shl
mov
adcl
pop
push
mov
mov
das
lahf
mov
js
js
mov
stc
loopne
lret
add
jnp
push
shr
insb
imulb
mov
mov
cmpsl
xchg
xlat
adcb
fs
sahf
lahf
leave
ret
pusha
fistps
inc
es
fidivl
std
lahf
jmp
jl
xor
or
hlt
pop
jge
pop
and
cli
adc
popa
xchg
xchg
mov
rolb
jae
subl
cli
decb
lret
dec
xor
add
mov
or
or
test
lods
in
jmp
inc
fs
dec
mov
inc
xchg
add
gs
sbb
jno
lret
xchg
nop
jg
mov
mov
xchg
dec
adc
xor
insb
or
aad
inc
lret
push
test
rclb
push
or
js
stc
dec
outsb
icebp
cmp
sub
out
xorb
push
divl
fstps
repz
xchg
fisttpll
in
inc
icebp
in
out
push
test
stc
xchg
stc
lods
sbb
adc
mov
cmpsl
sbb
addr16
xchg
pop
in
jns
addr16
mov
scas
repnz
fmul
loope
out
or
jge
out
loop
cmp
add
call
cs
scas
mov
add
pmuludq
mov
iret
xchg
rcll
or
lods
rorb
addl
jns
std
sub
stos
mov
call
or
gs
repnz
add
data16
mov
xchg
inc
mov
rcll
outsb
mov
inc
out
and
adc
pmaxub
lea
and
lcall
rcrb
pop
jg
push
add
hlt
sti
movsl
cmp
cs
sarb
enter
xlat
adc
data16
fcmovbe
add
mov
out
popl
movsl
inc
jmp
jne
jbe
in
iret
or
adc
out
js
add
mov
cmpsl
mov
mov
mov
testb
test
pop
outsb
mov
outsl
pop
jae
rcl
jbe
repz
and
mov
pop
push
sbb
or
outsb
push
mov
push
lods
leave
cwtl
cmp
arpl
scas
popa
fbstp
popa
out
xor
mov
fstl
mull
aad
dec
out
lds
stos
inc
mov
pusha
add
in
pop
dec
xor
jnp
loope
and
fistl
inc
add
pop
and
add
subb
cmp
cli
cmp
inc
mov
sub
mov
mov
adc
or
push
std
adc
pop
sbb
pop
or
jb
push
mov
add
dec
inc
and
mov
out
pop
inc
pushw
ds
ds
dec
in
test
inc
push
add
push
out
js
outsl
inc
sub
repz
out
popl
lcall
lahf
mov
mov
and
cltd
insl
cld
int
in
jae
sbb
pop
xchg
pop
lods
test
or
push
test
mov
lods
mov
cld
cmc
jp
dec
adc
jge
test
ss
aas
jge
pop
push
mov
dec
add
test
inc
xchg
jl
inc
dec
xchg
call
adc
outsb
imul
pushl
into
xor
push
xlat
sub
scas
sub
ja
and
stos
and
in
push
inc
or
fmulp
mov
xchg
cwtl
aad
mov
push
lret
je
xchg
mov
clc
jge
xor
icebp
adc
cli
in
jb
mov
mov
jo
aad
lret
or
dec
mov
cli
scas
add
mov
mov
xor
int
bound
loopne
inc
add
pop
lock
cmp
imul
ret
shll
jmp
aas
outsl
sar
mov
js
xor
push
adc
cmpsl
xchg
inc
movsl
test
aad
cmp
sbb
push
ficoms
leave
lods
mov
mov
jmp
and
sub
sbb
fldt
pop
shlb
in
xchg
mov
xlat
cltd
jns
mov
pop
addb
or
out
inc
jns
mov
shll
movsb
dec
dec
push
cmp
call
cs
push
mov
mov
testl
xchg
adc
popf
dec
sahf
ja
stos
int3
mov
sti
xchg
cmpsb
test
mov
mov
inc
adc
and
sub
repnz
in
push
sub
call
js
jo
inc
popf
rcrb
pusha
push
dec
stc
dec
inc
sub
dec
lds
and
bound
or
js
scas
sbb
xchg
mov
xchg
adc
pop
push
or
push
pushf
cmp
push
iret
in
and
icebp
pushf
repnz
jecxz
mov
cwtl
xchg
inc
out
fisttpl
inc
cmpsb
icebp
or
and
aas
push
inc
int3
aas
decl
xchg
nop
cmp
test
cld
stos
scas
adc
mov
push
test
sti
shr
outsb
jb
sub
neg
xor
rorb
mov
jns
or
aaa
xor
jge
loopne
xchg
inc
data16
clc
icebp
sbb
in
or
mov
mov
pop
or
jl
nop
xchg
pop
aaa
jle
xor
sub
mov
scas
aas
adc
out
rcrb
scas
xchg
das
jmp
inc
je
mov
ret
inc
mov
jo
rcll
mov
xchg
pop
das
dec
xchg
xchg
lcall
push
bound
pusha
in
icebp
xor
push
out
mov
movsl
push
jae
insb
scas
sbb
push
fld
rolb
and
das
mov
popa
sahf
mov
adc
jp
aaa
sub
mov
cmp
stos
subb
pushf
je
mov
pop
xchg
mov
testl
hlt
cmp
aam
ljmp
dec
out
test
pop
push
mov
int3
sahf
in
mov
inc
les
and
dec
add
cmc
push
lock
cmp
loopne
lock
test
inc
sahf
jmp
negb
lret
add
sub
out
xlat
jp
loop
adc
cli
or
sub
add
gs
mov
je
sbb
cmp
adc
out
mov
jae
in
sbb
cmpsl
xor
fsin
and
push
stos
jo
gs
add
sahf
push
in
insl
subl
int3
pop
sub
repnz
jns
les
mov
and
outsb
add
dec
mov
cmp
xchg
jp
jnp
or
xchg
jns
mov
dec
sbb
les
cmp
movsl
adc
dec
push
mov
xor
sbb
lds
lcall
mov
aad
push
imul
mov
mov
scas
sbb
adc
inc
mov
add
adc
mov
cmp
cli
add
icebp
imul
push
and
fsubr
cwtl
in
cwtl
adc
mov
push
inc
ds
and
into
outsl
and
dec
push
inc
sub
addr16
inc
adc
mov
pop
cmp
pop
inc
pop
je
std
jmp
ficoms
push
add
call
repnz
lret
gs
test
shll
sub
mov
mov
mov
jns
adc
push
ljmp
cmc
aad
subb
inc
dec
insb
fidivs
pop
in
sub
jno
imul
jecxz
in
add
aad
push
fadds
test
scas
mov
and
xchg
jbe
test
outsb
clc
pop
xor
inc
and
or
mov
test
push
pop
cltd
push
repnz
dec
in
cld
xchg
xchg
and
ja
xor
or
hlt
out
pop
test
mov
sahf
test
addr16
mov
iret
repz
sub
loopne
or
push
push
adc
mov
push
cmp
iret
inc
sbbb
movsb
in
pop
lret
mov
cmp
xchg
pop
and
mov
xchg
arpl
or
sub
pop
in
out
adc
mov
xchg
mov
jmp
lock
sub
or
cmc
jge
jne
pop
rorl
mov
adc
and
jmp
fbld
lock
add
fiadds
pop
jle
aas
scas
out
cmp
arpl
fcomps
loopne
sti
pop
outsl
mov
into
scas
cltd
outsb
std
adc
sub
jmp
jmp
xor
jnp
inc
xor
mov
xchg
xchg
fmull
lret
mov
out
leave
outsl
jp
xchg
cwtl
sub
or
hlt
fistps
sub
cmp
js
iret
sub
dec
rcrb
pop
hlt
sbb
enter
loopne
jno
cwtl
adc
add
cmp
sbb
jne
cmp
push
movsl
mov
xchg
insb
sbb
shlb
mov
mov
in
out
ja
lods
out
fnsave
and
ljmp
mov
adc
push
rcll
hlt
pop
out
sahf
popf
sbb
inc
movsl
int3
cs
dec
lcall
sahf
sarl
lock
push
cmp
push
cmp
mov
sbb
lahf
pushf
mov
xlat
loopne
sbb
ds
mov
pop
sti
orl
mull
cmc
test
mov
jno
sub
inc
enter
inc
or
or
mov
pop
inc
push
pop
test
mov
inc
or
push
fisubrl
push
or
cmp
loop
repnz
inc
imul
dec
orb
mov
cs
aad
les
and
les
sbb
into
xchg
negl
or
inc
dec
fcompl
and
jl
dec
sub
ds
dec
jb
and
not
and
lock
nop
call
data16
fucomi
mov
loope
dec
test
imul
mov
mov
ficompl
mulb
xchg
xlat
mov
push
into
push
pop
loope
add
or
outsl
mov
dec
int3
js
push
or
mov
mov
adc
or
dec
cltd
pop
mov
cld
cmpsb
mov
lock
icebp
jb
cmp
clc
cmp
ljmp
insl
xor
cmpsl
push
mov
cmpl
pop
out
clc
cmp
aam
mov
xchg
fimuls
dec
clc
lahf
mov
imulb
push
xchg
pop
ss
out
jecxz
lods
lea
movsl
data16
push
push
add
sub
lods
push
outsl
push
lds
xchg
pop
xor
or
dec
jecxz
inc
and
jmp
test
les
xor
aam
aam
add
scas
movsb
mov
mov
shll
imul
rcll
jnp
jle
jno
sbb
ss
outsb
loope
sbbl
xchg
mov
push
insb
lods
mov
int
push
fmuls
repnz
fidivrl
add
mov
in
out
push
mov
bnd
mov
incl
fst
mov
mov
xlat
loopne
dec
stos
sub
jbe
in
cwtl
in
adc
pop
xor
pop
aam
dec
adc
fcmovnb
mov
lcall
sahf
ss
in
cmp
xor
imull
mov
xchg
dec
insl
call
sub
cwtl
out
in
movsb
adc
sub
hlt
shrb
push
xor
add
pop
or
ljmp
cmp
or
mov
dec
push
popf
jns
jne
shl
test
cmp
hlt
jne
fistl
inc
push
das
lds
adc
push
and
cli
in
push
bound
pusha
pop
jno
adc
push
jno
aaa
inc
sbb
lret
jb
adcl
jb
sbb
jbe
push
jmp
imul
cmp
rorb
push
cmp
sbb
pop
fadds
mov
mov
adc
sub
push
xchg
scas
jmp
xchg
add
nop
xchg
outsl
fiaddl
jno
mov
jg
subl
std
enter
or
cltd
add
repnz
pusha
movsl
stos
call
testb
out
shl
pushf
and
mov
dec
popf
imul
and
mov
xchg
xor
dec
mov
inc
mov
or
xlat
xor
popf
dec
ja
jns
fcmovbe
fs
adc
and
sub
cmp
inc
lahf
xchg
inc
jno
lret
cmpsb
aam
dec
or
test
add
daa
nop
xchg
lods
std
and
cmp
aas
inc
xor
xchg
sub
and
inc
mov
push
rolb
lods
or
mov
popa
gs
mov
loopne
push
lods
aad
mov
sub
std
icebp
dec
push
push
xor
or
pop
cs
jne
aad
hlt
dec
enter
xchg
dec
dec
xchg
ret
in
mov
scas
xor
aad
cmpsl
js
fadd
push
les
or
pop
mov
and
movsb
inc
push
test
cmc
xchg
and
adc
mov
mov
cmc
je
push
cs
dec
sub
mov
les
sub
dec
pop
repnz
lods
jp
jle
shll
jl
pop
jge
leave
lret
mov
call
push
clc
inc
sub
sbb
and
cmp
sub
scas
or
adc
mulb
pop
or
test
dec
dec
mov
jmp
cmp
jo
test
pushf
jo
and
fldenv
sub
xchg
xchg
xor
and
inc
sbb
sub
push
mov
popf
mov
shl
fwait
mov
sbb
sbb
push
test
iret
sbb
or
pushf
stos
dec
loope
sar
dec
mov
push
mov
xor
rcrb
and
xor
stos
sbb
dec
sub
dec
outsl
cmpsb
in
out
xchg
xlat
gs
push
pop
xchg
xchg
mov
push
rcrb
dec
sub
dec
xor
notb
cld
int
std
adc
daa
mov
mov
call
out
scas
lea
data16
inc
mov
xor
mov
dec
sbb
lds
jle
jo
mov
rcll
stc
jbe
iret
add
dec
and
inc
pop
jl
jp
inc
add
cmp
and
mov
shrl
and
jne
scas
mov
data16
in
and
and
jae
pop
jle
mov
push
jo
shl
out
jae
dec
jne
pop
push
ja
or
jnp
adc
cmp
cwtl
jns
sub
add
mov
popf
aad
dec
ljmp
inc
cmp
test
mov
ror
iret
jle
push
adc
jb
xchg
push
xchg
push
rcl
loop
mov
daa
movb
xor
lds
into
dec
xchg
and
mov
fiadds
adc
jmp
lods
add
xlat
sbb
and
insb
add
add
jmp
cmp
movsl
sub
sbb
jb
sahf
xor
mov
aad
pop
mov
das
inc
xor
pushf
inc
cmp
imul
mov
es
and
pop
fcoms
mov
cs
jmp
std
xlat
jmp
jns
or
movsl
jge
std
arpl
sub
mov
out
mov
enter
loop
js
dec
daa
dec
in
ljmp
lock
add
mov
aad
sti
or
mov
fwait
sbb
call
rcrl
xchg
xlat
mov
push
cmp
shr
mov
rep
pop
mov
ja
in
or
popa
test
sbb
sarl
inc
mov
jb
fiaddl
xchg
gs
mov
xchg
mov
or
adc
aaa
fwait
cmc
fcompl
adc
ret
inc
sbb
dec
nop
cmpsl
and
sti
data16
mov
nop
cmp
mov
mov
adc
dec
pop
addl
mov
jno
dec
xor
sbb
push
inc
sbb
pop
sbb
out
scas
fs
les
pop
sub
fistpl
inc
cmp
cmp
nop
push
mov
xor
mov
mov
and
subl
or
xchg
sbb
in
jb
mov
push
ja
or
pop
mov
or
sbb
scas
nop
negl
inc
push
je
mov
lods
push
clc
sub
mov
add
loop
dec
or
aam
outsb
push
enter
scas
mov
inc
enter
jl
push
ss
or
add
dec
push
mov
data16
push
sti
xorb
je
mov
dec
mov
loopne
hlt
lods
mov
mov
adc
repnz
iret
std
xorb
mov
inc
stos
lret
push
pop
ds
pop
int3
packsswb
and
rclb
push
push
jle
addl
jns
sub
inc
mov
xor
std
inc
add
push
ja
popf
stc
addr16
clc
push
int3
sarb
call
inc
cwtl
fsubrl
push
ja
out
xor
mov
jge
mov
out
lea
cli
push
es
movsb
mov
adc
aaa
jg
rcrb
stos
nop
arpl
imul
nop
lea
orb
fwait
loop
mov
mov
add
adc
int3
ljmp
push
call
add
jne
sbb
xor
pop
pop
out
pushl
jne
mov
adc
in
push
ret
pop
scas
lret
sbb
mov
xor
push
sahf
clc
xor
ljmp
add
mov
inc
push
jae
bnd
mov
xchg
insb
out
int
xor
xor
dec
mov
cmc
push
adc
dec
mov
outsb
flds
gs
sahf
movsl
adc
data16
xchg
dec
lcall
jno
inc
xor
shll
mov
jmp
shlb
or
bound
scas
add
pop
sbb
mulb
mov
xor
add
mov
jno
rcrl
sbb
adc
push
cli
clc
sub
xchg
add
sbb
mov
fdivs
mov
sahf
pop
js
into
dec
mov
inc
inc
lret
jne
insb
int3
cmp
inc
mov
gs
mov
bound
jge
dec
loop
cmpsl
movb
sbb
push
jge
inc
or
xchg
inc
or
sbb
pop
mov
mov
fsubrl
inc
xor
out
cmpsb
movsb
jo
jo
cs
int3
sub
inc
xchg
icebp
adc
lcall
mov
test
lcall
lret
bound
sbb
jns
cmp
aam
test
mov
cmp
jo
and
xchg
dec
mov
dec
add
add
adc
daa
adc
cmp
hlt
mov
insb
jp
add
mov
orl
sbb
scas
sub
jmp
mov
add
outsl
stos
imul
sti
into
and
push
test
aas
inc
ret
movsl
adc
js
sub
mov
xchg
sbb
jns
add
fmuls
mov
jbe
xchg
xor
in
test
fmuls
cmpsl
scas
push
and
push
jb
dec
xchg
xor
xchg
daa
sbb
out
data16
ljmp
sub
adc
pop
xchg
or
test
lret
jbe
mov
pop
inc
add
hlt
pop
lods
add
add
call
stc
inc
mov
movsb
ja
pushf
mov
mov
lods
xor
adc
and
pop
jp
in
push
and
jae
adc
hlt
pop
je
fstl
cmp
add
push
mov
call
jp
hlt
inc
cmp
cmpsb
sub
adc
mov
orb
mov
int3
xor
divb
popa
out
pop
jno
int
dec
sub
mov
mov
cmp
mov
popa
and
cmpsl
outsl
scas
test
push
imul
out
push
mov
mov
cmpb
in
lea
es
sub
and
pop
nop
jp
mov
adc
dec
mov
xchg
sub
pop
test
pusha
jl
outsb
stos
xlat
mov
std
popf
lock
sbb
sub
mov
and
das
push
mov
lods
or
cmpsl
fiadds
lcall
ret
or
fnstenv
js
xrelease
and
jmp
jno
push
in
std
repnz
mov
in
lock
push
mov
and
orl
sbb
jae
or
pop
ss
das
push
pop
mov
xor
adc
mov
jae
xor
dec
mov
mov
lahf
mov
test
pushl
mov
or
add
inc
sar
sti
xchg
add
xlat
or
fadd
into
fistpll
pushf
adc
jno
add
insb
xor
mov
jp
addl
push
lret
scas
shl
xor
cmp
mov
fcomi
jmp
ret
stos
adc
mov
es
mov
jnp
aam
movsl
packssdw
lds
test
push
mov
dec
or
cli
xchg
xor
push
add
imulb
adc
push
jg
fwait
inc
cmp
lock
jae
xchg
jecxz
mov
dec
insb
inc
xchg
cld
mov
pushf
subb
fiadds
mov
mov
test
bnd
push
lret
jbe
stc
fcomps
rorl
hlt
and
mov
push
xchg
push
xor
icebp
and
aam
popf
popa
in
pop
cld
jl
ss
loopne
xchg
shll
mov
mov
push
inc
addr16
jle
xchg
mov
lcall
mov
sbb
shrl
mov
sarl
sbb
insb
sub
shll
movsb
repz
sub
lcall
inc
and
in
xor
mov
imulb
in
int
lods
subb
ret
fcomps
pop
in
enter
xchg
jo
mov
sub
outsb
sbb
xchg
inc
sub
ret
pop
sub
fdivrs
mov
add
dec
inc
add
push
sub
xchg
popf
pushf
rcrb
daa
push
iret
and
orl
fldcw
pop
lea
ror
xor
pop
arpl
adc
mov
jbe
data16
cmp
add
dec
adc
or
daa
movsb
lahf
out
stc
xchg
idivb
jge
pop
inc
xlat
sbb
jne
leave
push
std
test
test
iret
and
std
xchg
ret
push
popf
cmpl
xor
mov
rolb
icebp
and
sub
lods
jp
jbe
mov
outsb
jl
ret
addr16
mov
push
scas
xchg
test
setle
cltd
popa
neg
clc
inc
mov
loop
or
and
dec
jne
push
inc
sbb
arpl
and
test
push
mov
je
in
repz
jne
test
ds
pop
adc
enter
fisttpl
or
jg
shll
mov
insl
sub
mov
sbb
xor
and
push
inc
or
popf
dec
out
xchg
nop
pop
mov
add
bound
negl
pop
cmp
sub
inc
inc
push
loop
arpl
xorb
xchg
repnz
popa
aas
aad
shlb
push
into
les
dec
jo
jg
iret
lahf
hlt
mov
jae
cs
jmp
sbb
into
insb
into
cmpsb
or
popa
popa
push
out
add
inc
in
inc
push
gs
fnstenv
out
in
add
fstps
sbb
bound
mov
dec
das
loope
push
icebp
cmpsb
inc
cmp
mov
aam
out
push
clc
int3
aaa
mov
ret
jp
ret
push
aam
aam
sbb
ljmp
fwait
lret
push
sar
outsl
push
or
es
mov
pusha
decl
sbb
mov
fidivrs
pusha
out
inc
jnp
lods
cmp
ror
or
nop
sub
loop
add
xchg
xor
mov
gs
inc
jb
cld
push
sarl
and
fidivl
std
cld
pop
test
nop
jne
add
adc
aaa
out
mov
jle
std
inc
sarl
adc
daa
mov
jmp
sbb
scas
mov
sub
xchg
mov
ljmp
daa
mov
jo
fmull
shlb
adc
ret
in
mov
or
popa
cmp
cltd
out
ss
pop
loop
push
xor
jb
lods
sbb
jo
stos
loope
push
sub
mov
pop
jge
sbb
repnz
mov
dec
test
ret
push
and
mov
mov
outsb
push
fsubl
adc
daa
jo
orb
jnp
fsubrl
sbb
mov
or
pop
mov
pop
pop
stc
outsb
jmp
or
or
push
inc
in
pop
sarl
dec
push
cmpsl
test
pop
mov
cmpps
or
cld
mov
mov
push
cmp
mov
inc
fbld
popf
cmp
ss
dec
or
sub
jl
das
bound
repz
mov
outsb
mov
cmp
pop
cmpsl
xor
mov
loope
add
pop
add
aas
mov
loop
dec
and
jo
not
daa
frstor
and
adc
sbb
pop
stos
stos
sub
enter
icebp
mov
into
divl
mov
add
stos
sub
xor
xor
aas
test
out
popa
sti
adc
add
xchg
push
stc
lock
pop
cmpsl
test
stos
add
inc
aam
popf
aaa
mov
test
arpl
dec
jb
pop
int
ret
into
sar
lret
mov
scas
imul
sbbb
xchg
xor
imul
imul
dec
mov
mov
push
xchg
add
sbb
shlb
xchg
or
adc
fmul
pop
push
lret
shrb
adc
xlat
xor
pop
lret
in
pop
cmp
xchg
dec
or
mov
in
test
jbe
mov
out
push
sti
xor
xor
gs
sub
mov
sbb
adc
pusha
pop
dec
inc
fcmovu
push
jnp
into
arpl
adc
inc
lods
xchg
jo
les
add
jb
xchg
pop
popf
cmp
mov
adc
leave
ret
pop
push
sbb
inc
in
pushf
jecxz
mov
fs
or
fsts
popa
ja
fucomp
pop
out
dec
jne
jne
adc
add
push
jne
adc
xchg
fwait
fs
add
loop
sbb
popa
ret
add
arpl
push
mov
cmc
popf
pop
add
dec
xor
and
add
in
iret
sbb
stos
jne
adc
ja
xchg
dec
pusha
out
andl
repz
rcrl
stc
cmp
bt
push
jns
insl
std
xor
shll
fimull
loop
negb
sub
loope
icebp
mov
clc
pushf
test
and
ficoms
push
mov
lahf
jne
inc
iret
xchg
icebp
shl
out
mov
loopne
pop
push
data16
into
jl
ret
andb
int
js
js
test
pushf
lods
or
leave
lock
dec
xor
clc
and
add
mov
nop
lahf
adc
daa
imull
mov
popf
cmp
add
sub
dec
dec
stos
out
sub
pop
cmp
sub
out
int3
fxch
addr16
push
ja
mov
pusha
aas
or
das
repnz
jbe
push
or
jge
mov
jp
aas
mov
xor
loop
mov
stc
push
sub
pop
scas
imul
loop
inc
and
imul
jb
lret
fs
lea
sarl
inc
popl
xchg
jo
add
xchg
fisubrl
ds
std
rdpmc
call
push
jns
loopne
inc
xchg
adc
cltd
fcoms
lret
mov
cmp
test
loope
in
negl
mov
sub
icebp
icebp
nop
adc
lods
aaa
pushf
dec
cmp
jnp
dec
add
push
stos
movsl
jl
sbb
push
and
clc
cwtl
fmulp
lea
decl
cld
xchg
jne
scas
fcmovu
addl
lea
pop
pop
or
push
jno
or
jecxz
movsl
or
ret
xlat
das
int
movl
stc
push
jno
pop
fdivr
push
jl
addb
lahf
leave
popa
xor
mov
hlt
jo
push
imul
mov
push
fstpl
stos
ret
xchg
pop
mov
adcb
fwait
jmp
adc
mov
jmp
out
sub
lret
cmc
stc
loop
cmp
adc
mov
lds
adc
outsl
xchg
cmpsb
sarb
cmp
or
insl
repnz
sbb
mov
cmp
fdivl
in
jmp
jge
jbe
push
sbb
xchg
mov
jmp
inc
adc
xchg
adc
and
ds
clc
inc
cmc
or
lahf
mov
dec
shl
test
int3
test
dec
rep
lret
jbe
fmuls
inc
data16
xchg
or
mov
js
insb
lret
stos
addr16
cmpb
lret
lock
push
cmp
mov
xor
mov
je
jno
jg
ret
mov
iret
inc
jl
inc
bound
pop
ss
cli
cli
push
arpl
test
sti
mov
mov
dec
dec
pop
sarl
notl
pusha
test
xchg
pop
fsubrs
mov
cmp
pop
sub
mov
test
jecxz
pop
sbb
pop
cmpsl
dec
in
daa
aad
push
xchg
add
hlt
cs
ljmp
addr16
xlat
sub
test
dec
test
test
or
out
mov
je
jne
fisubrl
data16
outsb
inc
lcall
jle
mov
mov
pop
cli
push
les
arpl
and
fcmove
mov
fs
jns
lcall
sub
cltd
cmc
inc
pop
lahf
lods
push
test
mov
mov
push
sbb
and
xor
and
movl
mov
mov
adc
out
decl
out
daa
shlb
cs
mov
scas
add
cmpsl
pop
pop
add
ljmp
inc
popa
add
sbb
lods
pusha
imul
test
or
cmc
mov
movsb
sbb
lods
xchg
pop
adc
lods
stos
mov
adc
mov
insb
jg
in
loope
xor
aaa
nopl
cld
lcall
jne
adc
sahf
sbb
sub
inc
mov
outsb
mov
sbbb
jecxz
movsl
ds
inc
aad
xor
adc
int3
aas
mov
push
dec
lods
mov
pusha
cmpsl
pop
dec
shll
pop
mov
rcrb
push
add
and
sbb
sbb
xlat
push
int3
aad
cmp
adc
outsb
adc
push
mov
push
mov
mov
cmp
repz
lds
mov
lods
int
push
jb
pop
xlat
and
leave
mov
mov
ffreep
nop
sti
ss
jmp
mov
imul
mov
jo
movsb
or
inc
dec
movsb
inc
sti
ret
fmuls
mov
dec
and
subb
cmp
inc
push
jge
lret
out
testl
xor
adc
xor
mov
pop
cltd
fdivrs
sub
push
idivl
xchg
dec
fwait
loop
push
and
daa
xor
enter
and
push
jbe
jne
xchg
and
imul
mov
fnstsw
sti
or
ffree
stos
je
imul
mov
mov
dec
in
insl
aaa
fadds
iret
repnz
and
xchg
movl
into
in
into
and
and
subb
pop
sub
inc
inc
lds
pop
int
dec
xchg
fisttps
inc
or
sbb
cmpl
js
add
inc
mov
sub
popf
mov
lahf
mov
jmp
orb
or
icebp
fwait
fwait
das
mov
and
in
mov
imul
add
mov
push
test
xchg
or
xor
insl
and
lods
test
mov
fstps
into
dec
lock
mov
out
mov
adc
lahf
xchg
push
dec
inc
fdivrs
jmp
mov
sbb
sub
stos
add
jle
xlat
fldl
test
rclb
imul
push
cld
dec
mov
xchg
scas
mov
sbb
inc
into
test
outsl
leave
aad
xchg
arpl
cwtl
inc
add
push
rcrb
loop
add
xchg
filds
es
pop
mov
loopne
std
mulb
jnp
fcmovu
inc
lods
pop
cmp
mov
out
pushf
lret
jb
jno
sbb
mov
adc
popf
test
in
cmp
xchg
dec
rolb
test
out
lret
sbb
cmpsl
fld1
leave
inc
inc
lret
shll
mov
cltd
repnz
or
push
lret
jne
sbb
push
out
pop
cltd
mov
data16
jge
pop
lock
insb
xchg
mov
jg
sub
xchg
test
popa
enter
gs
add
xchg
andb
cmp
into
jbe
in
rcll
lock
mov
push
pop
pushf
scas
jne
scas
xorl
cs
push
inc
je
sbb
push
mov
cmp
sub
dec
jge
movsb
jb
repnz
popa
jns
lcall
pusha
rcrb
mov
xchg
mov
loope
or
sbb
fxch
lcall
out
mov
sbb
sbb
sbb
ficomps
jbe
arpl
fstl
cmp
or
cmpsl
add
sub
jo
mov
push
insl
adc
sub
cmp
jno
and
mov
out
adc
xchg
loope
lods
loop
or
popa
testl
jbe
lahf
pop
inc
bnd
mov
frstpm(287
adcb
pusha
add
dec
cmp
xor
jo
inc
lods
sbb
jb
mov
popa
mov
xor
ficomps
cmpsl
into
xchg
inc
imul
jmp
je
out
add
lret
dec
cmpsl
and
mov
mov
jbe
decb
adc
and
jbe
ret
jno
mov
cmpsl
iret
mov
testl
mulb
cmc
xchg
xor
pop
jg
loop
hlt
mov
test
sbb
stos
sbb
jnp
mov
jae
icebp
addr16
outsl
rclb
and
xchg
or
mov
xchg
loopne
rorl
arpl
dec
inc
loope
data16
mov
cltd
mov
fnstcw
cmp
mov
mov
divb
imul
jb
push
aas
ss
insb
fsts
lret
add
rcl
ds
jge
repnz
pop
push
ljmp
inc
daa
repnz
adc
adc
sub
xchg
mov
hlt
aaa
fidivs
cmp
in
loop
sahf
test
mov
ret
xchg
adc
and
xchg
sub
mov
sbb
xor
pop
int
test
cltd
xchg
fdivrs
push
push
or
call
pop
or
sar
push
insl
arpl
cmc
mov
cmc
adc
xor
js
loopne
pop
ja
in
mov
js
or
outsb
push
ds
mov
addl
popf
inc
shufps
xchg
mov
pusha
hlt
prefetch
aas
inc
rolb
xchg
mov
jge
std
mov
into
fst
out
aad
aad
imul
stos
xor
insl
jae
jp
mov
mov
jbe
jo
test
push
sbb
lock
js
sbb
push
fs
and
pop
loop
dec
mov
cltd
pop
add
mov
cld
aas
dec
jg
jo
lcall
jo
test
adc
inc
dec
mov
sub
out
xor
or
addl
xor
out
stos
mov
pop
cmpsb
shrl
dec
adc
mov
pop
sbb
sub
fildll
dec
xor
pop
cmpsb
dec
jae
push
icebp
inc
les
rclb
sarl
push
adc
aaa
jnp
mov
out
shlb
insl
cs
mov
sub
sarb
orl
aad
imul
pop
pusha
out
ljmp
xchg
das
test
mov
inc
or
sub
lock
add
push
ja
fwait
subb
pop
push
adc
cmpsl
movsl
cmp
cmc
test
xchg
and
fisttpl
repz
jno
push
pop
and
mov
mov
bound
test
jne
or
inc
mov
sub
adc
imul
mov
fcompl
call
shrl
pushf
add
jbe
mov
add
adc
push
cmp
mov
and
dec
shll
aad
lahf
ja
or
push
and
cmpsl
cmc
push
pop
push
lea
inc
dec
jg
test
dec
ljmp
pop
fisttps
stos
push
sbb
dec
xchg
sub
daa
cli
push
cs
aam
jge
jge
mov
sub
sbb
dec
bound
or
jmp
add
cmp
jecxz
les
pop
iret
cmc
stc
cmp
clc
outsl
dec
aad
sbb
adcb
gs
ljmp
sbb
xchg
push
mov
dec
sbb
or
rorl
fbstp
mov
jle
jbe
add
jl
dec
jmp
lret
cmpl
enter
or
push
test
dec
sub
ss
pop
and
lds
popf
dec
push
lds
add
push
add
sbb
fimuls
rorb
mov
pushf
negb
pop
pop
insl
or
cwtl
gs
cmp
or
outsb
or
loopne
arpl
scas
sbbb
jno
test
in
jg
out
stc
push
aam
mov
xchg
push
addr16
notb
jns
insl
cmp
pop
dec
sub
std
shl
sbb
dec
xchg
and
fnstcw
xchg
pushf
mov
and
push
mov
ffreep
jg
xor
ret
scas
rcrb
cmp
and
scas
mov
std
das
jl
sub
xor
push
addr16
or
bound
xchg
ret
out
call
sbb
int3
popa
push
cli
test
int3
adc
adc
push
ja
cmp
mov
bswap
cmc
push
mov
repnz
iret
fsubs
bswap
push
adc
pop
lods
fwait
lods
lds
ljmp
lret
mov
adc
adc
aam
jnp
mov
addr16
and
jle
dec
sbb
out
push
push
inc
push
clc
addr16
arpl
in
adcb
aas
xchg
jge
test
adc
jo
test
jmp
daa
pop
movsl
and
shll
out
adc
test
inc
pop
test
sbb
push
test
dec
mov
and
repz
lea
ljmp
xor
jmp
into
push
sarl
sahf
shrb
jae
adc
fnop
mov
cltd
enter
or
dec
fadds
popa
push
aad
popa
add
test
lahf
icebp
and
scas
xchg
sbb
fiaddl
push
loopne
incb
mov
and
sbb
das
add
loope
movzwl
aam
cmp
mov
add
dec
jb
in
adc
ficoms
jp
and
icebp
inc
aaa
mov
pop
pop
sbb
inc
sub
mov
nop
mov
push
mov
loope
aaa
mov
js
sar
pop
mov
sbb
pusha
adc
push
movsl
mull
mov
aam
sub
add
mov
mov
mov
cmpsl
cld
mov
push
sub
cmp
inc
push
push
or
stc
filds
xchg
cmpsl
cltd
xchg
adc
or
mov
jl
out
pop
cmp
cmpsb
cwtl
pushf
mov
mov
shl
lcall
xor
cmp
inc
pop
lock
sub
fiadds
dec
mov
ret
fwait
sti
lret
dec
insb
push
fldl
cmp
clc
xchg
add
out
add
mov
and
mov
out
arpl
ds
xchg
or
loope
mov
adc
cmp
ret
push
movsb
push
icebp
addl
insb
mov
push
sbb
push
std
pushf
imul
and
popf
int
in
dec
out
pushf
xor
fidivs
lahf
addr16
and
insb
xchg
jmp
lret
das
sti
subl
add
dec
and
sub
sbb
jno
std
out
add
sbb
or
cmp
lock
cmp
xchg
rcrl
mov
lea
adc
sti
clc
lret
ss
dec
xchg
daa
or
adc
sbb
sub
out
pushf
fwait
aas
adc
xor
movsl
mov
inc
or
movsb
or
xor
mov
push
inc
push
jno
iret
sub
scas
movsl
out
push
push
std
cld
mov
fdivp
xor
paddsw
jp
pop
loopne
test
jge
pop
pop
or
cwtl
mov
rcll
stos
jb
loope
xor
push
ret
push
lret
sub
sahf
mov
jge
insl
jp
in
aaa
and
aaa
xchg
cmc
dec
xor
dec
jne
xchg
push
test
mov
iret
scas
or
arpl
and
fiaddl
lods
or
scas
lcall
xchg
cwtl
pop
enter
sbb
popf
mov
mov
mov
adc
repz
mov
pmaxsw
sub
outsl
inc
iret
pop
or
sti
push
leave
rorl
xor
mov
imul
and
push
ss
stos
sbb
ret
mov
sub
push
imul
lods
jp
push
ja
and
cmc
pushf
imul
add
sub
push
pop
mov
std
pusha
mov
ret
mov
int3
loope
iret
jmp
mov
inc
mov
pushl
cmp
jmp
icebp
lods
int3
jbe
xchg
shl
gs
ja
mov
stos
pop
cmp
push
xor
ljmp
pop
ret
xchg
sbb
cmpsl
sub
cmpsb
out
mov
mov
jae
pop
insb
pop
inc
pop
pushf
xor
pop
push
fsubs
les
cmp
pop
les
rclb
jg
fs
adc
adc
stos
xchg
rclb
and
sahf
add
xor
cmp
push
test
or
xor
inc
hlt
cmp
stos
cmp
lahf
push
adc
or
cmp
adc
mov
push
repz
xor
int
xchg
mov
jle
in
imul
push
shrb
pop
cmp
add
or
dec
aaa
es
add
mov
imul
insb
xor
pusha
jae
cwtl
push
fnstcw
or
sbb
inc
aaa
jne,pt
lret
movsb
pop
push
sbb
sbbl
sbb
sbb
fwait
cmp
xor
out
sub
sub
dec
and
pop
adc
cmp
xchg
or
sub
jl
and
xor
sbb
push
jmp
fildl
jb
mov
test
addr16
mov
push
call
in
dec
rcll
outsb
divb
sub
aas
xorl
lret
dec
xchg
mov
daa
imul
roll
aas
ret
ds
and
xor
dec
loope
sbb
mov
test
imul
sbb
sbb
xchg
repz
lea
push
pop
js
mov
sub
jge
cmp
daa
push
into
dec
inc
pop
pop
adc
inc
push
and
idivb
xchg
push
out
jecxz
mov
into
cs
push
adc
add
faddl
cli
shll
adcb
iret
dec
cmpsb
mov
lret
cwtl
pop
gs
insl
fbld
jg
lods
push
call
push
inc
ret
les
sub
fs
cmp
aas
push
sub
dec
imul
push
enter
dec
sbb
ret
push
jle
sbb
pop
sub
scas
shrl
mov
and
or
jns
aad
add
pop
testl
das
or
out
lahf
lea
push
and
jns
fbld
or
out
nop
les
fsts
leave
dec
and
je
pop
mov
jne
flds
icebp
cwtl
pop
mov
and
je
pop
or
dec
lds
cmp
jbe
cmp
jmp
mov
cld
test
dec
jmp
push
stc
jne
enter
jp
push
insb
push
sbb
jle
jp
aas
mov
aad
andb
inc
xchg
divl
cmpsb
insb
std
cmp
fcompl
push
les
fstl
add
pop
sub
jo
stos
dec
testl
sti
mov
adc
pop
mov
xchg
cmc
pop
out
xchg
add
outsb
jo
and
mov
iret
lret
add
mov
and
sub
fstl
mov
or
push
add
sbb
push
ljmp
xor
lock
arpl
js
enter
add
sbb
je
int
adc
push
mov
cli
fisttpll
rorb
inc
jbe
das
int
das
fildll
mov
push
add
out
cmpsl
jp
mov
scas
into
or
dec
das
clc
mov
xchg
xchg
div
adc
in
jmp
aam
scas
sub
sub
cld
jb
lret
push
int
cmc
mov
fidivs
mov
mov
shll
cmp
je
sub
imul
es
out
pop
xor
add
add
sub
sub
mov
adc
pop
fnop
cmc
ljmp
sub
sarb
cltd
or
roll
pop
ret
rcr
leave
xchg
push
mov
movb
xor
adc
ret
pop
lock
std
and
push
call
jl
pushf
sub
push
enter
push
pop
outsl
test
aad
jbe
sahf
addb
jmp
mov
inc
std
fprem
lahf
add
pop
mov
mov
fdivrl
jne
cmpb
jg
int3
xor
ds
dec
ss
nop
xchg
aas
add
stc
cli
fdivr
pop
jecxz
mov
xlat
sub
insb
push
fcomps
xchg
push
int3
push
or
jecxz
ror
push
and
int
cmpsl
nop
push
mov
xchg
pop
imul
push
sub
pop
jne
pop
imul
add
popa
gs
lds
cmpsl
sti
mov
adc
in
mov
jo
cwtl
leave
test
cmp
push
mov
std
daa
dec
dec
pcmpeqd
xor
sbb
mov
movsl
mov
aas
jecxz
fiaddl
scas
mov
lcall
mov
sbb
ss
enter
and
cmp
pop
dec
pusha
sbb
loope
adc
add
popf
enter
insb
test
sub
pop
es
ds
xchg
jge
xchg
ljmp
or
dec
jns
sub
mov
dec
xor
xchg
pop
cmp
clc
cs
cld
or
pop
shl
push
arpl
popa
gs
fisttps
nop
mov
xchg
movsb
pop
xchg
les
bnd
out
ret
loope
push
mov
popf
xor
mov
es
rorb
or
out
cs
dec
insl
xchg
es
rorl
xor
inc
dec
test
enter
mov
sub
and
sarb
mov
adc
insb
push
or
add
rorl
cmp
js
iret
insb
lea
rcl
es
sub
cwtl
icebp
scas
sub
adc
out
cmp
pushf
inc
aad
in
jns
loopne
outsl
mov
push
cmp
mov
cmp
dec
mov
mov
pop
aad
pop
lret
lea
jae
imul
and
or
aam
les
pop
jp
dec
mov
mov
adc
test
pop
xchg
test
lods
sahf
mov
mov
sahf
adc
test
xchg
sub
push
bound
call
in
sbb
mov
mov
enter
clc
iret
icebp
jge
cmp
sbb
sub
sbb
jnp
add
adc
mov
aaa
sub
push
hlt
ret
subl
subl
popf
pop
push
inc
inc
rcl
in
dec
insl
fisubl
test
cmp
fnstcw
pusha
mov
inc
lret
dec
mov
out
sub
pop
outsb
rclb
int3
hlt
add
add
jb
fldpi
in
mov
pop
or
sti
push
xor
out
enter
scas
xor
rcr
push
or
xchg
jno
out
repz
xchg
adc
imul
push
cs
aaa
inc
xchg
jg
push
mov
ljmp
inc
jns
fsub
push
hlt
shll
xor
add
icebp
jg
lcall
inc
dec
or
inc
dec
xor
enter
xchg
mov
add
call
sub
inc
mov
mov
movsl
negl
cld
insl
rolb
fs
inc
lret
mov
ret
xchg
aas
icebp
pop
mov
es
mov
dec
or
jae
sub
xchg
pop
ds
mov
jg
hlt
and
jmp
mov
nop
aam
mov
fisubrs
xor
cmp
add
xchg
push
pop
jmp
mov
dec
out
les
shll
test
gs
xchg
xchg
into
mov
mov
xor
loope
xchg
insb
cmp
and
pop
std
bound
xchg
out
aam
pop
popa
lods
sbb
mov
pop
ja
sbb
out
or
pop
add
cmc
jno
in
jge
test
in
leave
or
mov
inc
movntq
jg
and
xchg
hlt
stos
push
jp
xchg
inc
incb
mov
std
fs
arpl
add
xchg
test
inc
xor
in
outsl
mov
inc
cmp
jg
adc
stos
pop
inc
fistpll
daa
add
sbb
mov
push
repnz
push
mov
insl
cmpsl
or
popa
mov
fistpl
inc
push
nop
test
fucomp
pop
movlps
jo
or
es
cmp
mov
or
imul
psadbw
pop
loop
sub
mov
mov
ss
mov
pop
pop
cltd
loop
mov
add
sbb
mov
clc
mov
pushf
test
aaa
push
inc
nop
sbb
negl
sbb
loop
or
or
push
pop
xor
fucomp
movsb
inc
in
xor
mov
jbe
jnp
push
adc
je
jecxz
xchg
das
dec
imul
insb
sbb
int
lea
push
sub
mov
rcrb
sub
bound
rcrl
add
push
movsb
mov
jb
xor
pop
in
push
into
add
loop
notb
into
out
xorb
adc
or
daa
inc
rcrl
push
in
push
cli
inc
add
lcall
test
mov
add
cmpb
push
icebp
xor
sub
fildl
pushf
lea
cmc
outsl
push
in
xor
and
arpl
adcl
inc
mov
jmp
cwtl
adc
mov
stos
lcall
mov
shr
add
add
sarb
js
or
cmp
enter
jp
cmp
or
sti
dec
mov
ljmp
fldl2e
add
lods
jbe
rcll
lods
leavew
ljmp
push
xlat
in
pop
pop
xor
aam
dec
inc
cmpsl
jne
inc
iret
or
rcr
mov
push
ficoms
aas
repz
xor
rorb
imul
iret
cwtl
xchg
fnstcw
pop
cmp
jg
sbb
pop
in
in
insl
lea
cmp
loope
arpl
stc
scas
vunpcklpd
sub
ret
cwtl
jmp
cmpsb
faddl
pop
mov
cmp
mov
cs
repz
inc
in
fists
in
cmp
and
enter
test
divl
dec
sub
lock
sub
mov
ret
or
adc
mov
leave
in
insb
pop
push
in
xchg
jo
call
and
repnz
pop
popf
inc
sbbl
into
jno
jp
mov
fmuls
lret
add
stos
hlt
int
mov
mov
fsub
and
pop
inc
cltd
inc
sub
mov
fcoms
js
cli
in
pop
jb
sbb
pop
aaa
push
inc
cltd
jecxz
fadds
pusha
pop
cmp
dec
pop
jmp
inc
mov
xor
int3
pop
pop
xchg
jle
jl
imul
cld
sbb
push
loop
xchg
sub
jbe
inc
pop
jp
inc
repz
pop
icebp
pop
mov
inc
sbb
movsl
sub
mov
mov
inc
sbb
rorb
dec
or
push
push
fdivs
and
xchg
pusha
xchg
in
jmp
jo
iret
aaa
lcall
dec
cmp
mov
fs
imul
dec
std
in
mov
push
mov
inc
ja
push
stos
xlat
inc
btsl
fwait
iret
push
pop
sub
jnp
js
inc
or
mov
push
dec
add
mov
fxch
or
jnp
cld
xchg
cs
shlb
jns
push
add
test
mov
mov
icebp
movsb
repz
xor
repnz
jns
mov
adc
mov
jle
sub
aas
jge
aam
fidivrs
pop
pop
pop
pop
sbb
sti
mov
jge
repnz
xor
or
adc
mov
or
add
cmp
xchg
jmp
and
dec
dec
mov
cltd
iret
sub
pop
cmp
adcb
sbb
add
shr
out
add
xlat
mov
lcall
fsts
lret
pop
popf
popf
push
sub
stos
gs
cmp
xchg
pop
leave
xchg
or
fmull
pop
mov
out
push
mov
push
add
sti
jbe
lds
insl
jae
mov
enter
add
xchg
jb
cmp
xor
scas
imul
push
lods
repz
fdivrs
pushf
pop
inc
or
iret
dec
dec
rorl
cmp
sbb
pop
add
cmp
jmp
cmpsb
and
inc
fwait
rcrb
pop
pop
fsubrs
pop
scas
out
fstpt
aaa
sub
addb
pop
ficoms
leave
add
push
pop
adc
outsb
lds
in
mov
mov
inc
int3
push
rorb
sbb
stos
ljmp
jbe
out
adc
xchg
pop
mov
nop
xchg
je
and
mov
push
adc
sahf
cmp
xchg
out
into
mov
inc
rorl
fstps
pushf
mov
lds
mov
insb
scas
sub
loopne
bound
xor
das
pop
push
cmpsb
fadds
dec
in
test
push
jno
pop
and
movsb
std
sub
sar
and
scas
fists
and
jnp
lds
loope
aad
shrd
add
push
sbb
loope
inc
faddl
test
ja
jecxz,pn
hlt
fwait
xchg
dec
sbb
xchg
mov
xor
and
inc
push
sbb
cmc
pop
ja
mov
lock
jbe
inc
cs
jbe
mov
push
push
xor
inc
cmp
xlat
int
cmpsb
out
out
scas
adc
imulb
lret
sub
ds
mov
mov
lods
ja
lret
mov
fcomps
xchg
in
mov
sub
mov
bound
lock
loop
ficoml
aad
enter
mov
xor
and
sti
mov
repnz
cli
into
leave
xchg
shl
out
mov
push
je
inc
mov
loope
std
dec
or
mov
jne
pop
mov
add
inc
adc
sub
aas
jb
ficoml
add
xchg
lock
xchg
mov
jecxz
mov
aas
cli
cmpsb
mov
daa
mov
xchg
not
ret
push
pop
push
adc
pop
imul
adc
cwtl
dec
push
es
pop
clc
loop
and
and
adc
xchg
fistpl
sarl
mov
mov
adc
movsl
xchg
and
js
pop
mov
test
mov
popa
adc
mov
test
js
mov
insl
dec
xorl
and
mov
add
jns
jp
movsb
aaa
insb
inc
std
inc
dec
mov
fildl
pop
mov
aad
movsb
mov
fdivr
mov
inc
cmp
gs
sbb
out
imul
rcr
jno
mov
xor
pop
outsl
dec
mov
sbbl
jae
daa
cs
mov
sub
into
outsl
sbb
pop
ljmp
add
and
ss
inc
xchg
cmp
mov
stos
aad
rcrb
fsubrp
add
xor
mov
push
gs
movsb
call
fidivl
mov
lahf
adc
ret
int
lods
sarb
std
cmc
stos
jo
add
dec
lock
enter
in
scas
jb
adc
mov
enter
je
xchg
fucomi
ret
sbbl
inc
stos
or
lahf
mov
adc
and
pop
xor
sahf
les
les
leave
and
add
jmp
jne
jo
cmpsl
gs
lret
shrb
jo
pop
incl
mov
shrb
mov
out
inc
test
fwait
adc
jnp
mov
pushw
daa
xchg
ljmp
outsl
mov
jl
int3
or
bound
xchg
pop
stos
ja
inc
xor
nop
jb
mov
mov
icebp
and
cld
push
loope
cmp
jb
xchg
adc
xor
dec
jmp
repz
adc
stc
adc
out
ds
repz
xchg
push
stos
push
sub
clc
dec
imul
push
out
inc
negb
into
popf
outsl
push
mov
bound
fadds
idivb
pop
xchg
mov
cmpsb
fidivs
das
cmp
test
jmp
out
xor
in
mov
loope
cmp
inc
or
pop
cmp
sbb
push
scas
mov
sub
out
push
ret
mov
mov
sbb
cltd
cwtl
dec
imul
jb
repz
jmp
mov
andl
pop
and
fld
scas
dec
or
das
mov
lock
push
xchg
rorb
jmp
mov
test
cmpb
imulb
jl
mov
cwtl
outsb
sbb
mov
js
arpl
add
mov
or
inc
inc
mov
in
push
movsl
cli
mov
sub
pop
fwait
out
xlat
push
lods
add
sub
xchg
sub
xor
pop
jge
mov
and
popf
int
cmc
sbb
into
out
sub
stc
dec
imull
notl
pop
sbb
cmp
inc
jo
outsl
mov
jge
fsubrl
and
ja
clc
cld
adc
cltd
pop
mov
mov
scas
mov
incl
xchg
sbb
lea
cmc
dec
add
add
pop
iret
js
lock
ljmp
insl
add
movsb
std
or
ljmp
iret
mov
hlt
lret
into
pop
cmp
dec
add
das
dec
jns
mov
sub
push
push
nop
testl
adc
das
adc
ret
cmpsb
mov
and
adc
lret
sub
mov
or
mov
scas
in
pop
ljmp
add
adc
out
shrb
adc
dec
dec
or
call
shlb
jle
repz
xchg
add
repz
jl
push
call
jb
and
cmp
mov
xchg
push
and
fdivl
loop
cmpsb
add
and
ds
faddl
or
test
mov
orb
jmp
pop
sub
dec
sbb
leave
cld
inc
or
mov
xor
adc
insb
repnz
xchg
clc
pop
cmpsl
jl
int3
fst
pop
out
lcall
sbb
jecxz
xor
xor
add
loope
and
adc
pop
decl
jmp
lret
test
sar
jne
sbb
push
aam
pushf
sub
daa
pop
movsl
push
pop
enter
and
and
js
pop
xchg
adc
lds
in
adc
lods
jae
fs
xor
adcb
outsl
and
jne
jno
cmc
sub
push
mov
out
sbb
lods
aaa
stos
add
sbb
jo
in
mov
frstor
sbb
dec
leave
test
push
xchg
dec
gs
mov
dec
addr16
out
xchg
arpl
das
and
mov
xor
add
pusha
push
test
add
cwtl
cmp
push
mov
push
sahf
orb
in
push
bnd
cmp
mov
int
test
jae
popa
lods
popa
pushf
or
sbb
and
xchg
and
test
push
lock
or
adc
rcrl
cmp
sbbl
xchg
cmp
lcall
gs
aad
pop
lret
mov
test
cmpsb
mov
cld
and
insl
xchg
fsubp
icebp
repz
cltd
testl
xchg
popa
sub
jl
std
mov
out
lret
mov
pop
push
adc
or
ficoms
and
mov
push
imul
push
test
shlb
xchg
cmc
or
mov
subb
cmp
fisttpl
adc
hlt
pop
es
stc
inc
rorl
pop
imul
sbb
les
addb
sahf
pop
jp
aad
ja
push
adc
mov
call
daa
mov
and
and
pop
and
mov
jno
dec
jg
rorl
or
sub
inc
repz
mov
sub
inc
push
in
and
les
rcrl
mov
or
mov
clc
fstps
sti
fidivl
mov
mov
sbb
cmp
sbb
faddl
xchg
pusha
dec
inc
cli
lahf
int3
mov
mov
andl
rcrl
addr16
call
clc
jo
outsb
aas
testb
fbld
roll
push
shr
sbb
sbb
movsb
xchg
lcall
add
int
inc
jg
jmp
pushf
cwtl
ret
jo
xchg
scas
push
jmp
nop
adcl
mov
xchg
jle
xor
test
inc
inc
rcll
into
pop
testl
icebp
mov
xchg
cmp
insl
pop
add
xor
or
sbb
stos
fsts
push
int
jp
in
ljmp
push
jp
not
adc
xor
adc
dec
push
inc
lret
ss
jle
push
lds
mov
inc
cmp
add
dec
xor
paddd
loope
jle
sahf
in
push
mov
push
nop
scas
scas
pusha
xchg
les
inc
dec
xchg
jnp
fstpl
pop
push
sbb
stc
xchg
adc
shr
loope
pop
bound
jg
out
mov
stc
and
mov
ret
add
xchg
jp
mov
scas
pop
aam
movsl
out
sti
outsl
inc
cltd
icebp
xor
ds
inc
test
xor
pop
stos
cs
jae
stos
lret
lret
ds
adc
pop
dec
call
pop
sbb
aas
or
cmp
daa
das
mov
and
push
pushf
xor
lahf
mov
incb
dec
stos
cwtl
push
pop
cld
inc
jmp
pushw
aaa
leave
jo
mov
xchg
mov
daa
cmpsb
or
sbb
mov
ds
cs
mov
mov
out
fdivrl
lock
push
fs
sub
mov
pop
arpl
lods
and
pop
pusha
outsl
xchg
fst
shrl
inc
jae
test
xor
test
dec
bound
repnz
lahf
mov
xor
js
ss
xor
inc
dec
mov
push
insb
mov
xchg
xchg
dec
hlt
dec
sub
addr16
push
xchg
in
lods
je
aad
pop
sub
stc
fiadds
mov
subb
and
ja
jle
arpl
shr
or
push
rep
repz
ljmp
cmp
sti
clc
mov
popa
loopne
daa
xor
lret
lahf
xor
addr16
cmp
and
mov
sbb
xorl
pop
hlt
emms
pop
mull
fsubrs
and
inc
fnstsw
ds
inc
sub
mov
les
repnz
mov
hlt
out
cs
push
push
dec
dec
mov
mov
mov
or
mov
mov
test
sub
push
adc
inc
lock
cli
lahf
ljmp
and
movsb
or
insl
out
xor
daa
or
pusha
dec
pop
std
dec
sarb
inc
into
xchg
pop
fadd
scas
sub
movb
repnz
or
cmpsb
ja
aaa
jp
clc
jbe
test
arpl
ret
rcrb
scas
fistps
rorl
shlb
es
mov
je
jecxz
dec
xor
sahf
inc
fucomi
scas
out
imul
adc
in
sbb
xchg
out
aaa
xor
mov
rorb
pop
inc
sub
cmp
inc
dec
data16
mov
push
pop
push
mov
shlb
lock
jecxz
dec
jl
jb
stos
cmp
sbb
push
nop
inc
mov
insb
xor
pop
lcall
imul
aas
sti
imull
fnstenv
push
pop
mov
repz
das
jbe
bound
aas
xchg
pop
mov
adc
cmpsb
rcrb
dec
mov
mov
addr16
sbbl
stc
pushf
in
dec
mov
add
push
and
mov
add
inc
and
stos
movb
ljmp
xchg
add
add
stos
int3
cmp
inc
lret
push
roll
jle
push
stos
push
pushf
jge
bound
jp
inc
pushw
mov
mov
sbb
fisubrl
inc
jg
jo
adc
mov
mov
cwtl
fldt
addb
sub
dec
jne
clc
xorb
adc
xchg
cwtl
out
sbb
pop
loop
inc
insl
sahf
push
test
jns
push
add
aad
add
pop
ds
adc
aaa
iret
push
pop
mov
scas
dec
jle
cld
fwait
xchg
mov
cmpsb
loope
push
cmp
pop
test
push
scas
loop
das
mov
inc
cwtl
fistpl
push
rorb
push
mov
movsb
and
xchg
mov
cmp
jo
call
mov
std
out
cmp
adc
jl
sbb
dec
std
clc
jp
clc
out
test
jnp
push
mov
hlt
inc
into
adc
cmp
jns
or
ss
sbb
pop
inc
ss
xlat
cltd
outsb
stos
fistpll
iret
rol
out
ret
jne
stos
sub
fdivrl
cmp
jbe
std
mov
pop
cmpsl
push
aam
in
mov
add
and
sahf
sub
scas
cmp
in
mov
add
xor
mov
or
or
push
mov
pop
mov
or
mov
scas
and
or
sub
or
push
pop
mov
xor
pop
outsb
ds
xchg
js
movsl
loope
dec
jg
pop
xor
in
mov
jb
dec
gs
rcrb
jmp
test
arpl
cmc
or
mov
pop
xchg
jnp
dec
sub
cld
aad
rcll
sub
and
int3
add
mov
add
lods
push
xor
xlat
xchg
xchg
jns
jge
push
jle
dec
mov
fucomp
mov
sbb
push
icebp
mov
popf
add
ja
aam
test
stos
push
inc
push
dec
jp
es
push
nop
dec
cmpsl
sbb
sub
mov
in
jne
test
sbb
les
les
scas
das
fs
ret
add
aaa
and
inc
repz
dec
xor
sub
jae
add
cmp
or
pop
ret
jge
aas
div
fcmovu
cld
jg
stos
pop
sub
inc
push
std
fnstenv
insl
xchg
jae
adc
ds
pusha
adc
pop
cmpsl
mov
andnps
int
stos
add
sbb
cld
sub
mov
cmp
popa
and
mov
mov
push
sub
jns
push
mov
xchg
mov
cmp
mov
js
push
js
lock
ficomps
out
int3
in
sahf
mov
out
bound
pop
sbb
pop
ret
push
enter
sub
pushf
xchg
loope
ficoml
xor
test
imul
fdivl
xor
ja
and
jle
inc
aam
and
or
out
rcrl
in
pop
jnp
pop
movsl
test
cmp
jle
out
dec
pop
scas
jp
movsl
ficoml
adc
cmpsb
js
add
and
push
rclb
in
sub
pop
mov
pop
dec
push
pusha
lcall
sbbb
or
mov
xchg
aaa
repz
int3
sbb
pop
adc
in
sub
je
call
call
sub
dec
add
call
sbbb
stos
movsl
pop
test
outsb
inc
sub
fidivrs
aaa
lcall
inc
jno
aaa
jns
stc
dec
fwait
cmp
jmp
mov
imul
divb
test
test
cmp
fwait
jle
push
daa
mov
xchg
dec
leave
xor
shrl
fistpl
enter
mov
mov
fldt
in
mul
push
daa
pop
int3
jecxz
cld
push
stos
and
and
stos
rorb
mov
data16
jmp
or
or
xchg
int3
ja
dec
jmpw
addl
hlt
lea
mov
push
mov
mov
push
dec
ret
push
repnz
dec
pop
pop
jne
push
mul
add
or
icebp
cmp
add
sbb
jge
dec
aad
cmovl
mov
xor
adc
pop
aas
or
mov
dec
scas
add
ds
push
cmpb
push
lods
sub
orl
in
call
pop
lea
in
adc
inc
sarl
sbb
popf
sahf
loope
xchg
cmpsb
ja
mov
repz
and
adc
mov
pop
icebp
incl
inc
sbb
or
mov
xchg
leave
xor
fwait
xorb
mov
je
push
and
jae
je
scas
mov
adc
xchg
inc
cmc
xor
sub
jmp
and
pop
xor
jno
xchg
jl
lods
cmp
aas
int3
jb
sub
fiaddl
push
cmp
push
das
test
push
or
sub
lahf
pop
pusha
jnp
pop
nopl
add
jno
in
mov
xchg
mov
sbb
adc
out
or
dec
add
lret
sub
adc
xchg
cwtl
imul
fwait
mov
rorb
and
mov
sarl
outsl
addl
mov
test
stc
popa
xchg
std
mov
push
inc
mov
or
and
in
jmp
add
sub
sarl
pop
mov
jle
mov
test
imul
jmp
dec
loop
out
mov
jns
lcall
mov
je
lea
cli
mov
pop
int3
lds
cmp
jl
dec
sub
ljmp
cmp
xor
cld
test
sbb
in
cmp
jns
popf
cmpsb
popa
out
ret
jne
mov
repnz
mov
jmp
xchg
rcrl
xchg
call
pop
insb
mov
xchg
xchg
and
iret
dec
bnd
mov
or
xor
and
loopne
movsl
xchg
loop
push
aad
dec
pop
dec
imul
test
xchg
jno
mov
xchg
mov
and
repz
lds
pop
imul
pop
cld
outsb
cmc
jno
cmp
movb
ret
add
popa
les
cli
ljmp
pop
push
inc
adc
jno
dec
mov
inc
popa
xor
ret
jne
add
cmp
adc
mov
in
or
sbb
jg
je
arpl
jnp
inc
scas
outsb
in
pop
cmp
mov
arpl
scas
ffree
loopne
icebp
mov
cmp
pushf
jbe
jg
sbb
cmpsb
ret
fldl
rcrb
jmp
dec
adc
jb
in
dec
lds
repnz
mov
sub
push
outsl
sbb
fistpll
fmuls
outsb
xchg
mov
sub
les
add
sub
adc
ret
test
insl
and
movsl
pop
xor
xlat
in
fidivrl
icebp
mov
mov
in
jno
pop
mov
jae
in
jae
and
out
push
inc
or
inc
idivl
sbb
lret
add
lret
scas
sub
inc
nop
cmp
ja
pop
dec
xchg
mov
ja
add
mov
aas
sbb
outsb
leave
aaa
mov
jb
or
sbb
cmpsl
imul
and
and
xlat
xchg
std
and
push
fistps
push
inc
mov
bswap
lea
mov
pop
sub
stos
dec
push
mov
mov
cwtl
scas
lcall
mov
cs
enter
pop
idivl
xor
int3
fimuls
nop
fstp
call
lock
gs
out
mov
pop
imul
out
jp
scas
int3
inc
fxch
add
les
sub
ss
sub
jae
pop
or
adc
clc
lea
arpl
push
out
icebp
aam
insl
fcmovb
cmpsb
in
iret
mov
push
mov
nop
jbe
cli
dec
dec
and
jg
cmc
test
dec
push
dec
imul
adc
push
cmpsb
cli
cmp
addr16
push
stos
pop
push
call
mov
xchg
loop
arpl
jle
push
cmp
sbb
and
fs
adc
mov
popf
nop
xchg
ret
fwait
xlat
movsl
push
pop
dec
lahf
in
std
insb
inc
lret
sub
mov
push
pop
xor
cli
push
inc
or
ss
inc
out
stc
cld
gs
frstor
inc
mov
mov
inc
inc
cmpsl
jne
jge
icebp
jno
and
cmp
rorb
jp
dec
xchg
jnp
jne
test
add
add
popf
jbe
dec
cmp
dec
lea
mov
test
jns
cmc
dec
mov
sub
adc
cs
mov
adc
add
popf
mov
mov
xchg
aas
mov
fisubrs
or
mov
mov
jno
pushf
cmp
jnp
dec
fadd
xor
fwait
sbb
jle
sbb
mov
fcoms
insb
iret
jg
mov
pop
sub
or
add
or
bswap
test
inc
push
dec
jl
push
lock
out
push
pusha
push
aaa
mull
xlat
clc
shl
aas
inc
jle
ljmp
aaa
cmp
jecxz
cwtl
jae
ret
xor
stos
aas
addr16
xchg
sbb
fnclex
xchg
cli
outsb
xchg
hlt
push
lock
les
out
lock
xor
nop
scas
lret
dec
pop
lds
jnp
clc
xchg
mov
in
test
es
mov
data16
mov
aad
imul
cmp
aaa
push
repz
movb
repz
mov
bound
push
dec
mov
cmpsb
clc
jbe
dec
lcall
push
mov
insb
sub
push
and
jbe
test
push
test
jns
dec
sbb
and
push
lahf
xchg
cmpsb
pop
xor
jecxz
xchg
repz
cmp
and
sbbl
adcl
inc
xchg
push
jmp
add
dec
jae
mov
sbb
pop
clc
mov
jmp
mov
or
cmc
outsb
loope
out
cmc
aaa
pop
cltd
decl
mov
scas
inc
pushf
cmp
sbbl
push
xor
icebp
in
ss
repnz
mov
cmp
inc
sbb
in
imul
outsl
iret
rorl
add
jl
dec
pop
mov
icebp
ljmp
jo
jmp
lds
pushf
xchg
push
xor
insl
jg
mov
frstor
fidivrl
pop
repz
pop
repz
mov
shl
lods
add
rorl
out
xor
mov
jg
add
sbb
jnp
pop
es
fcmovb
div
pop
mov
pop
call
xor
rcr
jmp
xor
daa
adc
jns
lods
sub
pushf
jae
int
mov
adcl
ja
aas
jl
sbb
inc
inc
mov
mov
mov
mov
daa
imul
jp
push
dec
mov
xlat
fisttpll
lret
int3
call
fbstp
cs
mov
mov
fwait
lock
xorb
xor
cld
out
sub
dec
xchg
adc
in
div
hlt
lret
push
roll
add
je
ret
lret
mov
push
mov
outsb
push
sahf
xlat
xlat
cmp
mov
cmp
inc
insb
jge
push
stos
mov
sub
flds
aas
imul
cmp
cld
xchg
jle
sub
rcll
popf
pop
mov
dec
cmpsb
shl
rorb
and
dec
mov
in
cmp
hlt
call
sbb
mov
add
mov
lods
sbb
mov
push
adc
int
jne
and
pop
mov
dec
sahf
push
dec
sbb
pop
stos
sar
repnz
leave
test
int
imul
fisubl
stc
xchg
lret
mov
mov
das
clc
xchg
cwtl
sbb
sbb
jae
int3
stc
xor
mov
xor
dec
inc
ja
vldmxcsr
mov
movsl
inc
adc
push
mov
push
or
sbb
or
mov
loope
inc
push
hlt
push
scas
pop
xchg
lahf
test
xchg
cmp
push
std
aas
add
lcall
cmpsb
dec
jb
pushw
pop
das
lods
xor
leave
jge
xlat
xchg
dec
imul
mov
inc
and
mov
xchg
pop
dec
add
fistps
jae
sbb
add
sub
jno
lods
dec
bound
leave
lret
push
jo
stc
clc
adc
rcll
sub
dec
push
push
mov
pop
fimull
jbe
lock
inc
inc
pushw
shlb
js
xchg
cld
lea
xor
adc
test
les
xchg
adcb
ds
cli
mov
fcmovnbe
ds
in
jl
push
xor
lods
test
rcr
sub
ss
cs
jb
add
jne
xchg
sbb
xchg
adcl
lahf
insl
jmp
in
mov
ret
cli
push
xor
sbb
lahf
inc
aad
daa
or
or
ffreep
arpl
icebp
jb
aad
inc
sbb
mov
sarb
mov
add
dec
stos
iret
ficoml
mov
cmpl
adc
push
push
mov
lret
call
and
mov
les
sbb
dec
cld
outsl
leave
adc
pop
call
imul
jecxz
cmpsb
jge
stc
je
push
sarl
test
dec
orb
lcall
jp
daa
pop
jns
repz
inc
pop
js
xchg
jae
mov
repz
mov
or
mov
dec
cmc
lods
decb
gs
sbb
sbb
inc
shrl
adc
mov
push
xor
jle
lahf
mov
ret
fdivrp
lods
stc
mov
sbb
xchg
out
and
or
lahf
lahf
dec
cltd
cmp
push
dec
push
sub
lock
arpl
mov
pop
pop
ss
bound
test
cmpsl
js
pushf
jp
xchg
add
adc
fistl
icebp
mov
in
scas
rorb
or
sbb
jp
out
sub
fwait
mov
ror
xchg
xor
fs
lcall
push
fldt
js
cmpl
push
test
addr16
inc
in
es
add
and
loopne
je
fs
sub
adc
js
mov
xor
bound
cmp
rcl
pusha
jle
add
pop
pop
mov
jle
fbld
sbb
js
insb
cmpsb
iret
cmpsb
out
loopne
test
mov
inc
loop
mov
stos
pop
fwait
cmc
xchg
adc
call
jno
mov
das
push
sarb
sub
cmp
lret
mov
insl
xchg
jo
les
and
adc
ficoml
pop
lahf
scas
mov
pushf
inc
push
push
push
xor
fcmovbe
mov
cli
jbe
mov
stos
and
sbb
roll
push
dec
jmp
daa
lock
mov
or
add
orb
sbb
outsb
ficomps
out
inc
aas
jp
cmc
inc
xor
cltd
pop
ljmp
add
cmp
mov
push
or
test
dec
loope
repnz
dec
in
je
sbb
pop
pop
pop
leave
mov
out
pusha
stos
adc
mov
sub
les
sti
push
clc
jnp
push
ret
fisttpll
addr16
shlb
mov
popf
jbe
je
sbb
je
je
or
in
push
sub
inc
mov
push
test
xor
jp
sub
add
mov
dec
push
pop
aas
mov
sub
push
and
xor
add
xchg
xchg
pop
xchg
dec
sub
imul
jge
cli
push
repz
and
push
or
push
add
add
or
mov
in
push
mov
insl
aaa
andb
mov
dec
cli
cmpsl
push
ret
or
fdivrs
int3
xchg
arpl
cs
cmp
mov
sarl
push
mov
push
dec
sbb
leave
rolb
sbb
mov
daa
test
lea
inc
pop
jnp
int
cmp
jmpw
imul
adc
into
pushf
xchg
loop
adc
mov
scas
add
jbe
addr16
loope
mov
mov
xchg
xchg
in
lock
cmp
insb
in
inc
out
inc
push
out
add
out
fucomi
add
leave
jo
mov
xor
pop
imulb
dec
inc
push
out
xchg
cmp
mov
pushf
cmc
mov
xchg
call
or
insb
shlb
add
cmp
rcrl
sbb
dec
pop
inc
gs
fsubp
je
sahf
lret
xchg
mov
and
cmp
cwtl
sbb
leave
cmp
or
icebp
and
cld
testl
xchg
xchg
xchg
shlb
repz
int3
push
je
addl
xchg
sub
movsl
shlb
je
xchg
icebp
shlb
jle
cmpsl
ret
push
data16
outsl
and
mov
fcmove
mov
push
dec
subb
es
jecxz
popf
imul
mov
test
fsubrp
cmpsb
mov
lcall
jbe
pusha
aas
jnp
fs
insb
xchg
bound
inc
jge
push
dec
scas
data16
or
leave
out
mov
leave
vpunpcklbw
add
mov
mov
mov
mov
lret
xchg
jecxz
inc
stc
pop
and
jmp
push
mov
lahf
bound
dec
or
push
push
or
add
and
shl
fdivs
mov
imul
scas
jb
xchg
mov
test
sub
add
mov
push
insl
mov
mov
add
mov
enter
xlat
inc
or
leave
adc
icebp
mov
adc
cmpsl
lea
je
stos
ss
and
pop
mov
mov
sbb
cmc
pop
or
stos
sub
mov
imul
and
xchg
push
add
adc
xlat
aad
mov
repz
sbbb
mov
sub
cmp
adcl
jl
cmp
mov
test
int
test
jae
ficomps
or
in
insl
lcall
jns
sbb
gs
rcrb
jmp
xor
pop
pop
into
xor
xor
shll
jp
and
sub
popa
leave
mov
hlt
cmc
mov
cmp
add
sti
loop
pushf
or
in
bound
rolb
test
or
test
cmp
mov
out
xchg
ljmp
fists
sub
daa
mov
jae
jmp
cmp
test
jo
sbb
or
sub
adc
call
loopne
lcall
into
dec
jle
push
cmp
cmp
xchg
lods
sbb
lea
mov
inc
push
mov
push
push
scas
mov
jns
xchg
push
movsl
rorl
pop
pop
pushf
pop
inc
insb
or
mov
pop
cmp
in
cmc
cli
inc
fwait
cmpsl
xor
sbb
rep
jnp
ja
pop
outsb
daa
movsl
dec
xchg
leave
lock
stos
insl
mov
std
pop
inc
mov
pushf
push
imul
fsubs
ljmp
test
ret
not
mov
and
scas
dec
mov
add
mov
in
lods
enter
movsb
inc
shrl
mov
pop
orb
gs
adc
movl
or
ja
sbb
scas
jbe
xor
xor
inc
outsb
pusha
bound
fsubs
out
gs
jae
icebp
and
dec
and
or
xchg
scas
cmp
mov
mov
in
add
sarb
ss
add
enter
int3
mov
lret
dec
fcompl
fwait
repz
push
shl
and
push
xchg
dec
jmp
daa
fnstsw
subl
aaa
or
inc
jnp
inc
cmp
into
pop
repz
lret
push
add
mov
inc
push
xor
sub
lds
xor
call
out
mov
adc
jo
and
adc
repz
lods
or
fnstsw
clc
jns
das
shll
dec
mov
mov
addr16
loopne
jg
lds
jge
push
dec
push
mov
cltd
popa
mov
lods
mov
bound
insl
mov
test
je
mov
into
rorl
push
outsb
sbb
jge
repz
or
outsb
aas
and
scas
push
mov
movsl
xchg
ret
ljmp
pop
jle
push
out
add
gs
mov
vpsrlq
sbb
xchg
cmpsb
sub
call
sbb
stc
jns
jge
lds
out
xor
jl
xchg
daa
mov
jo
adc
jl
pop
test
std
pop
push
xchg
iret
lds
jno
mov
or
and
jecxz
inc
mov
jmp
mov
decl
pop
xor
fwait
jo
aaa
push
cmp
mov
dec
push
add
xchg
xor
iret
push
push
out
xchg
pushf
jmp
ret
addr16
jp
dec
ret
int
mov
add
add
push
push
inc
int3
sub
je
fsts
stos
jg
dec
mov
jns
jns
out
or
xor
push
jns
shrl
xor
fstp
mov
je
cmp
xchg
mov
out
hlt
mov
jno
cmp
lret
jns
inc
or
push
inc
fmull
arpl
mov
dec
push
sahf
enter
mov
lea
ficoml
cmc
mov
xor
xchg
inc
inc
jl
outsb
test
bound
mov
outsl
aam
jecxz
and
testl
add
add
sbb
jge
jle
or
sahf
mov
xchg
addr16
push
loopne
shll
cli
loop
cmpb
sub
imul
incb
movsb
inc
test
xor
fdivrl
leave
clc
and
movb
jno
std
inc
imul
in
inc
incb
aam
push
insb
push
idivb
or
cmp
leave
dec
out
sub
es
aam
add
std
push
fistl
icebp
jns
xchg
out
mov
js
arpl
std
mov
xor
mov
loopne
cwtl
ret
std
add
test
cwtl
sbb
jp
repnz
mov
xchg
repz
dec
cmpsb
ss
enter
into
and
repnz
and
or
xchg
add
cmpsl
pop
jge
mov
pop
mov
addr16
mov
inc
push
push
pusha
fisttps
mov
dec
pushf
cltd
movups
jl
adc
jp
mov
dec
jnp
cmpsb
mov
push
adc
dec
pop
push
push
mov
inc
fbstp
fnstcw
xor
ljmp
ret
mov
popf
cmp
fidivrl
sti
imul
pop
in
out
es
mov
rorl
push
pop
out
scas
call
ret
fucomip
mov
out
xlat
cmp
mov
leave
mov
pop
loope
push
sub
pop
ss
les
sbb
les
mov
pushf
call
push
mov
sbb
jb
insb
test
pop
dec
mov
pop
cmpsl
sub
cltd
push
xchg
mov
lret
imul
cmpsb
jl
lret
adc
cmp
jge
dec
aad
mov
adc
int3
xor
out
sub
aaa
adc
cmpsb
push
cmc
mul
xlat
dec
adc
and
lahf
xchg
mull
lret
mov
push
insb
test
cmp
xchg
mov
jmp
pop
aas
mov
imul
jecxz
xor
sahf
sub
std
shlb
nop
mov
negb
cmp
jg
jnp
xchg
cmpsl
repz
jae
cmp
pop
or
stos
rorl
sub
push
or
pop
scas
cli
popf
das
push
inc
sub
out
ja
cmpsl
mov
xchg
enter
int
mov
push
sbb
cmc
xor
shrl
test
inc
mov
inc
loop
std
push
mov
mov
cwtl
inc
adc
mov
and
test
push
push
notl
jecxz
movsb
pop
mov
adc
retw
insl
dec
testl
sti
cmpsb
mov
xor
sbb
and
jb
jmp
ds
add
out
sbb
xchg
sub
out
fmull
mov
xlat
inc
stos
sbb
and
mov
xor
mov
bound
int
dec
out
adc
and
cmovb
rcrb
addr16
mov
cmp
inc
sbb
sbbl
jb
lcall
insl
icebp
dec
lret
pop
push
into
sbb
shll
dec
cmp
and
mov
push
pop
ret
xchg
sbb
jb
sub
push
repnz
jg
push
xchg
xlat
cmp
dec
xchg
sahf
ljmp
mov
jmp
mov
fsubrl
fdiv
cwtl
and
mov
mov
jbe
mov
cmpsb
lea
int
mov
add
lock
addr16
bound
es
xor
add
sti
hlt
stos
fisubl
rcll
adc
jne
hlt
in
arpl
mov
icebp
pusha
push
stos
xlat
movsb
and
adc
xchg
lods
push
pop
jecxz
add
test
pop
push
movl
enter
cmp
jp
pop
adc
popw
jo
sub
push
add
sub
mov
push
insl
or
sbb
das
fwait
hlt
addl
shrl
fwait
enter
pop
sub
sti
fbld
sub
dec
mov
sarl
pop
or
pop
push
mov
jl
xchg
sbb
fadds
aad
sarb
pusha
sbb
aas
shll
shl
cwtl
sub
insl
xor
in
add
rcrl
mov
das
push
cmp
xor
push
test
pushf
jg
shrb
and
sti
push
mov
pop
lea
stos
xlat
aas
adc
sbb
lock
call
xchg
shr
sub
aas
pushf
lea
scas
in
push
sbb
inc
es
lock
bound
add
cmp
test
aas
mov
push
lea
and
sahf
dec
pcmpgtw
xor
idiv
je
fld
dec
arpl
dec
cmc
aam
inc
jae
xchg
xchg
out
jbe
sti
clc
cmp
int3
fs
pop
adc
sub
xchg
and
in
or
arpl
fwait
jb
mov
push
into
dec
jnp
fs
sub
fiaddl
pop
out
xchg
and
pop
push
lret
out
imull
pop
and
dec
iret
lods
aad
scas
adc
mov
mov
cwtl
inc
or
sub
mov
push
cmpsl
test
adcb
sbb
in
lods
mov
sub
mov
scas
xchg
in
push
xchg
pop
push
sbb
lea
xor
xchg
xorb
mov
push
sbb
out
rcrb
adc
jb
popa
or
or
popa
jne
xchg
mov
fldt
insl
push
bound
imul
inc
or
mov
jbe
push
cmpsl
outsl
pop
test
out
adc
fscale
push
ljmp
push
xor
imul
mov
inc
nop
jbe
and
sbb
sub
cmp
mov
fadds
adcl
mov
inc
fsubr
xor
add
or
rclb
aam
popa
and
fstpt
jne
add
and
arpl
enter
mov
rclb
je
mov
in
pusha
mov
mov
in
sbb
lock
xchg
shl
cmp
or
inc
fcmovnu
add
bound
pushf
sti
rcrb
icebp
inc
negl
jo
popa
inc
adc
push
xchg
adc
add
cmc
loopne
fmuls
inc
test
sbb
sub
pusha
cmp
mov
es
mov
mov
int3
enter
jbe
jl
adc
les
out
sbb
push
lds
jns
and
inc
lahf
mov
mov
mov
add
pop
adc
xchg
mov
in
ror
mov
or
jecxz
push
mov
sbb
sub
roll
rcrb
jg
out
and
hlt
and
fmuls
jecxz
pop
fdivrp
iret
xlat
mov
pop
lds
or
cli
xor
mov
mov
push
es
add
mov
addr16
sbb
cmpsb
popa
insl
orl
call
in
rcrl
sbb
call
push
inc
dec
aas
push
xchg
lret
loop
adc
mov
rclb
mov
shll
push
sarb
mov
dec
lahf
outsb
xor
cmp
cmp
test
lcall
filds
in
arpl
push
sub
divl
aas
clts
or
pop
retw
iret
sub
push
add
scas
sbb
ror
lds
daa
ret
std
lea
fdivr
sbb
xor
cmp
mov
scas
xchg
stos
sub
fnstsw
and
jmp
or
xor
lds
fisttpl
sbb
arpl
ds
icebp
mov
lahf
int
sub
in
mulb
jae
orb
call
jp
and
dec
aam
lods
dec
daa
call
xor
xchg
sub
int
mov
leave
ret
movsl
xchg
mov
shll
rcr
movq
mov
loopne
cmpsl
mov
rcll
stos
push
outsl
lock
aad
jg
inc
push
jnp
movl
in
mov
roll
lock
cmc
stc
orl
mov
sub
xchg
ja
inc
adc
mov
lods
lcall
bound
rcr
pop
enter
mov
lahf
ret
das
rcrb
test
lds
rcll
rclb
jmp
add
shrb
lods
adc
into
dec
jle
xchg
addl
jo
mov
rcr
loopne
sbb
adc
jge
sbb
fs
js
loope
mov
mov
ret
jno
sbb
pushf
push
aam
dec
jle
clc
add
stc
push
fwait
scas
ss
sub
rcrb
gs
adc
iret
xlat
scas
test
push
hlt
pop
or
cli
ss
xor
mov
in
test
test
mov
ss
stos
lods
sub
cld
mov
sbb
mov
xor
insb
movsl
xchg
jecxz
imul
in
mov
push
js
cmp
pop
or
js
shr
pop
sbb
dec
arpl
out
add
jne
push
scas
adcl
mov
xchg
mov
cmp
shr
roll
sbbb
and
flds
adc
idivb
xchg
cmc
out
push
mov
rcrl
or
outsl
int3
jmp
pop
lds
ljmp
xchg
aam
adc
sub
jb
lret
pop
enter
sub
mov
dec
cmp
test
mov
mov
pop
adc
xor
sub
stos
ret
insb
sbb
nop
mov
mov
push
gs
jg
xchg
dec
xchg
ja
adc
mov
dec
or
pop
scas
xlat
adc
insb
jb
sbbb
jl
add
or
or
cld
fisttpl
inc
jbe
xor
adc
vphaddbw
sub
insl
mov
or
sub
adc
cmovp
mov
mov
iret
inc
xchg
push
gs
lcall
mov
cld
xchg
adc
jge
nop
xchg
fists
jg
mov
dec
inc
jg
pop
ss
push
inc
and
inc
cmp
hlt
mov
jae
and
sub
fidivs
mov
ret
scas
fwait
icebp
sahf
sbb
out
sahf
fidivrl
cmp
xchg
xchg
push
mov
cmp
jmp
or
scas
loopne
add
lahf
push
jmp
cltd
loop
stos
push
xor
outsl
mov
pop
ljmp
lahf
mov
dec
inc
mov
or
aas
jb
data16
jnp
or
or
sub
sti
aaa
decb
call
movsl
mov
call
frstor
jp
dec
cmp
jno
mov
cmp
push
repz
mov
sub
mov
cmpsl
scas
shl
mov
mov
addr16
test
test
nop
cmp
push
push
jmp
or
jae
push
xor
mov
cmp
lods
lods
arpl
ror
pop
adc
push
or
in
leave
cmp
inc
push
popf
ds
bound
add
push
add
mov
ret
in
jl
mov
mov
adc
dec
roll
lds
xchg
cli
or
cwtl
out
lahf
into
inc
or
enter
inc
xchg
les
adc
shlb
je
sub
push
shll
sub
sub
fs
fildl
push
dec
and
cmpl
popa
mov
popf
xor
popf
outsl
xor
fdivr
ss
rdpmc
popf
mov
imull
pop
inc
jae
cld
repz
mov
out
imul
adc
sub
lods
into
and
cmp
xor
jle
xchg
outsl
cld
stos
int
inc
pop
in
gs
mov
xchg
mov
lahf
jge
imul
inc
inc
xchg
mov
stc
lods
inc
xchg
sub
call
fwait
mov
xlat
adc
sbb
pop
gs
lcall
push
into
jg
add
daa
jb
pop
pop
movsb
inc
pop
push
xor
fadd
lods
mov
sbbl
pop
addr16
pop
stos
xor
add
inc
fdivl
outsb
xchg
lret
daa
dec
push
adc
xor
mov
rep
rcrl
pextrw
dec
inc
cld
cli
pop
movsl
sbb
jmp
stos
or
test
cmp
jo
lock
push
mov
punpcklwd
pushf
cwtl
mov
data16
push
int
ljmpw
mov
in
or
cmp
insl
cwtl
push
push
add
xchg
inc
and
sub
loope
bound
test
ficomps
mov
leave
inc
into
push
push
and
roll
jmp
push
aaa
inc
into
bnd
sbb
or
popf
push
stos
ret
inc
or
lods
sbbb
ljmp
add
pop
xchg
subb
push
test
mov
or
leave
cmp
pushf
sbb
imul
add
push
subb
and
ds
sub
loop
add
shrl
out
xchg
adc
sahf
mov
ss
out
jp
push
bnd
outsl
leave
xchg
shrb
pop
mov
adc
pop
fimuls
fisubrl
int
sbb
sarb
push
sbb
mov
insb
jl
jae
dec
arpl
les
jbe
ss
fiadds
int
cmp
jmp
testl
nop
push
jmp
adc
xor
test
popf
loope
shll
popf
pushf
bound
leave
repnz
push
aas
rcl
fstl
sahf
jp
shrl
adc
call
in
pcmpgtb
mov
pop
mov
pop
push
test
test
or
loopne
sub
icebp
ret
cs
jae
mov
push
sub
js
mov
popf
mov
cmc
outsl
cmp
aaa
xchg
sub
or
xor
stos
pop
and
adc
inc
sbb
fdivrs
jne
sub
xlat
xchg
xorl
mov
test
incl
add
inc
dec
push
jge
fistpl
jge
jecxz
mov
or
mull
or
inc
pop
fidivl
push
jp
mov
fnstcw
popa
sub
enter
pop
loop
insb
fdivl
mov
mov
jo
lret
pushf
shlb
mov
push
mov
push
jp
jp
nop
rcll
pop
shrb
inc
loop
jo
jae
and
into
js
inc
insl
push
jecxz
loop
loope
and
popw
sbb
and
push
and
lock
sar
xchg
sbb
loope
fistpll
test
push
cmp
icebp
fs
cmp
in
inc
shlb
push
fstpt
cmp
push
outsl
fdiv
cltd
mov
ret
pop
mov
ret
dec
pop
shl
sti
sbb
mov
lock
xchg
pop
imul
cltd
imul
and
inc
arpl
jle
push
jl
cs
je
inc
mov
imul
movsbl
cld
jge
inc
sbb
fnstsw
jle
std
mov
fdivrs
ds
or
mov
xchg
cmp
add
xor
or
fcoml
adc
xchg
rcrl
out
ss
std
aam
hlt
xor
mov
add
adc
mov
mov
inc
in
cmp
jmp
or
or
or
add
and
mov
inc
imul
adc
mov
or
jecxz
aaa
std
decl
mov
push
icebp
rcrb
or
divl
jle
leave
pop
pop
mov
bound
mov
jle
sub
mov
inc
mov
dec
xchg
dec
cld
pop
xchg
jbe
out
fnstcw
or
mov
dec
sbb
xchg
sub
shlb
in
pop
arpl
mov
insb
out
mov
add
jecxz
jnp
stc
sbb
test
lret
add
in
imul
clc
ret
push
in
adcl
insl
rclb
push
inc
pusha
sub
mov
xor
pop
mov
or
sbb
push
sbb
or
mov
test
sarb
hlt
cmp
jmp
jnp
cmpsb
xlat
inc
lret
cmpsl
xor
and
popa
add
jne
and
stos
add
dec
dec
into
pop
dec
push
fs
fcoml
or
ljmp
mov
fadds
f2xm1
mov
xor
lret
cmp
sbbb
mov
bound
orb
mov
cmp
sbb
repnz
pushl
xor
in
xor
push
cltd
sbb
adc
fsubrs
shlb
add
fldcw
inc
cmp
fwait
and
cmp
cmpsb
repnz
mov
stos
imull
fsubr
push
push
cmp
mov
cmpb
inc
mov
jno
rcrl
pop
std
ss
adc
inc
in
sbb
fstps
adc
inc
and
mov
repnz
or
test
mov
fwait
outsb
sub
cmp
cmp
jg
clc
mov
inc
je
cmpsl
into
sbb
hlt
daa
mov
clc
mov
scas
int3
xchg
shlb
xor
cmp
jmp
pop
and
cmp
repz
xchg
lea
add
push
dec
shll
js
dec
rorb
mov
iret
push
inc
outsb
fdivp
add
icebp
lret
std
jecxz
loop
pop
out
add
repz
cwtl
add
sbb
lret
sub
ljmp
fld1
bound
and
daa
jle
in
push
mov
mov
or
stos
pop
mov
pop
loop,pt
xor
icebp
jo
pop
and
and
shrl
mov
dec
stc
mov
pushf
rcr
pop
xlat
dec
pop
sub
lods
fs
push
fbstp
orb
or
fstps
mov
dec
das
push
xor
xchg
lret
fwait
cmc
test
pushl
out
je
sbb
xor
rolb
sbb
pushf
test
insb
and
mov
inc
sub
out
out
aaa
in
sbb
jns
jno
arpl
lea
ja
mov
fimuls
fmulp
lds
sub
pop
xchg
mov
rorb
mov
mov
iret
xchg
decb
jmp
mov
mov
sbb
ret
jl
jmp
in
jl
mov
fadds
ficompl
faddl
dec
js
dec
cmpsb
adc
in
inc
mov
andb
cld
loope
sub
std
mov
mov
sbb
pop
rol
push
stc
gs
dec
repz
addl
adc
jae
jge
xchg
and
mov
loope
fidivrs
jle
insb
stc
mov
sub
push
cmp
jbe
ljmp
jle
mov
jge
and
jmp
xor
sub
xchg
push
xchg
sbb
je
mov
xchg
dec
sar
in
jle
das
lods
adc
jns
and
push
jnp
add
mov
lret
in
jmp
adc
test
add
mov
xchg
add
aam
mov
nop
xchg
in
outsb
repnz
sbb
dec
cmp
push
mov
mov
cmpsl
repnz
dec
sub
push
popf
fstpt
add
int3
mov
push
pop
aad
dec
sub
xor
xchg
nop
les
xor
int
das
pop
push
imul
stc
lods
loopne
inc
sbb
push
rclb
mov
add
inc
add
dec
jge
das
cmp
fnstenv
das
addl
gs
cwtl
fs
push
push
popa
and
mov
cli
jl
in
stos
add
ret
push
outsl
xor
cltd
dec
jne
nop
mov
in
mov
or
push
jg
in
cmovp
xor
inc
cmpsb
adc
xchg
es
into
push
cld
adc
cli
movsl
out
xchg
xchg
push
movsl
dec
add
mov
sub
jno
sti
scas
pop
scas
aam
shlb
push
jne
mov
cmc
jno
jbe
mov
mov
test
ljmp
mov
or
or
push
testb
testl
sub
iret
cmc
xchg
mov
sbb
rcrb
aam
shlb
mov
cmp
cmp
ljmp
data16
mov
out
lret
cmpsl
and
xor
sbb
pop
push
and
push
in
arpl
xchg
hlt
adc
pop
fisttpl
aad
and
sti
iret
es
cmp
scas
nop
imul
pop
int
fisubrl
and
cld
xlat
sub
imul
into
out
push
mov
adc
push
mov
mov
inc
insb
stc
aas
pusha
pop
or
mov
movsl
jne
xchg
push
xor
into
sti
push
fidivrs
jmp
arpl
ljmp
jbe
data16
stc
jbe
filds
inc
icebp
lods
adc
cwtl
push
xor
sahf
mov
movsl
cwtl
jbe
inc
mov
nop
pop
mov
inc
cltd
push
mov
sbb
fwait
sub
clc
decl
lea
mov
dec
add
mov
data16
add
dec
push
lret
xchg
sbb
cmp
cmp
fisubrl
lds
sbb
xchg
cmp
jns
cmp
mov
inc
mov
ja
fucomip
lret
test
mov
mov
jbe
push
mov
popf
mov
adc
lds
xchg
xor
test
inc
xchg
and
fsubrp
lock
pop
and
sub
movsl
sbb
test
fs
ss
jae
movsb
cli
mov
adc
stos
inc
aad
jno
fistpl
mov
mov
bound
or
push
out
int3
hlt
or
lods
mov
xchg
xor
or
bound
fidivrs
aas
es
adc
test
jno
adc
pop
sti
sbb
jb
mov
les
xorb
xor
je
xchg
xor
nop
addr16
sub
push
test
fwait
inc
int
es
inc
repnz
add
aam
or
xor
in
sub
mov
push
in
sarl
repnz
popa
xorb
add
push
repz
xchg
inc
mov
cmp
mov
stos
out
jg
nop
mov
repz
mov
lcall
pop
lods
xor
adc
inc
mov
adc
das
inc
xor
sub
mov
cwtl
addb
mov
xor
int
stos
and
push
inc
pusha
les
dec
cmp
nop
pushf
stos
mov
inc
sub
and
mov
mov
mov
int
add
outsb
jno
ds
mov
sbb
pushf
xchg
pop
sbb
loopne
imul
popa
cwtl
unpckhps
test
sub
or
mov
mov
pop
adc
out
lret
adc
or
loopne
lahf
ja
daa
push
negl
pusha
xor
shl
bound
repnz
xlat
or
pop
cmp
sqrtps
fmul
mov
and
test
add
sbb
jbe
movsl
pop
and
push
push
push
movsl
inc
dec
mov
es
mov
push
pop
lods
jp
sub
fidivs
jns
dec
pop
fistl
adc
data16
jp
push
and
dec
lods
pop
addb
into
jno
xchg
addb
movl
add
mov
gs
xchg
insl
jl
add
lds
and
ja
and
push
jns
aaa
fcmovu
add
ss
shlb
aaa
popa
mov
rolb
and
lcall
cmp
adc
mov
jbe,pn
push
xchg
push
pop
das
arpl
sahf
movsl
dec
cs
push
xor
loope
pop
cmp
stos
adc
rorl
add
idivb
mov
in
dec
inc
mov
jmp
rcrl
ret
pop
clc
mov
lods
add
popf
or
mov
xor
rsm
cmp
jle
mov
subb
in
fs
ret
sahf
cmpsb
fnstenv
mov
loopne
xchg
or
lahf
adc
mov
imul
scas
add
movsl
or
aaa
xchg
jl
addr16
fs
push
aad
stos
loop
shlb
jne
mov
xchg
movl
xchg
shll
fadds
leave
xor
xchg
pop
daa
push
imul
out
fdivl
lods
dec
cmp
mov
pop
out
lods
loopne
jbe
clc
into
sbb
or
mov
lret
sub
pop
stos
bound
lcall
inc
imul
push
mov
pop
mov
or
add
cs
mov
xchg
pop
xchg
sub
dec
repz
ljmp
mov
fdivrl
mov
sub
add
mov
xor
sbb
add
sbb
insb
arpl
das
js
mov
mov
mov
bound
fwait
cmp
loop
pop
push
inc
add
lea
out
mov
gs
into
mov
into
insb
div
lds
arpl
loopne
cld
pop
mov
outsl
cmpsb
xchg
dec
sbb
enter
test
jg
cmp
xor
jmp
lods
scas
jb
scas
jmp
jbe
xchg
aad
arpl
mov
out
mov
mov
cltd
mov
xchg
nop
jl
aaa
lea
dec
jl
inc
es
out
rcrb
inc
test
lahf
xchg
add
faddl
in
inc
sub
fs
aaa
mov
sarb
push
repz
fcomps
jecxz
repz
addr16
add
sarl
fiaddl
bound
jp
and
push
pop
in
and
lcall
jg,pt
pop
push
in
daa
pusha
fdivrs
mov
or
les
add
fstl
push
out
xchg
mov
or
hlt
negl
jbe
in
fdivrl
xor
sbb
mov
mov
rcrl
xor
inc
sbb
pushf
aaa
pop
mov
push
push
jle
sti
inc
lds
frndint
in
mov
or
cmp
int3
adc
xor
imul
and
fistpl
les
sbb
pop
insb
cmpsl
push
add
xchg
xor
push
je
jo
adc
dec
mov
arpl
addr16
in
mov
and
or
ds
mov
jle
cmpsb
pushf
sahf
add
jnp
pusha
aaa
lret
fists
jae
sbb
dec
jmp
sbb
in
xchg
push
jp
inc
inc
push
pop
mov
sbb
sarl
shrl
sbb
cli
test
mov
xorl
xchg
stos
push
fiadds
xor
inc
mov
sub
out
leave
lods
movsb
pop
push
scas
adc
push
adc
movsb
sbb
movsl
xorb
clc
cmp
xchg
inc
xchg
outsb
xchg
push
orl
and
mov
xlat
pop
push
out
dec
cs
lds
xlat
add
jnp
dec
testl
sub
lods
push
lea
in
xchg
daa
dec
aaa
jne
xor
cwtl
lahf
xchg
push
fcmovbe
sbb
sbb
adc
jb
xchg
mov
scas
xchg
sub
scas
or
and
mov
int3
sbb
popa
das
es
fcmovnu
clc
enter
mov
add
mov
test
fdivrs
cli
in
and
repnz
adc
pop
filds
pop
addr16
addr16
add
mov
fmul
ret
loope
mov
inc
push
or
xchg
cmp
xchg
test
fcomps
cmpsl
add
aas
sub
orl
push
pop
int3
adc
dec
jp
fwait
repz
push
xchg
mov
jmp
int
mov
gs
push
arpl
arpl
push
push
mov
sbb
repz
cltd
xchg
sub
push
mov
jmp
test
adc
mov
repnz
mov
outsl
popa
mov
stos
pop
jne
das
sub
cmc
mov
xchg
movl
and
out
xchg
iret
inc
movsl
add
inc
jb
leave
sarb
data16
cmpsb
and
pop
cli
test
loopne
pop
push
pop
adc
xor
sbb
sbb
test
pop
repz
mov
pop
jne
xchg
adc
call
fsubs
sbb
mov
es
imul
mov
xor
pop
fsts
cwtl
stos
pop
in
jge
int
sub
imul
in
inc
cwtl
mov
dec
insb
adc
push
dec
mov
movsl
mov
mov
cmp
inc
iret
call
dec
jo
jg
es
cmp
sbb
add
dec
xchg
xchg
into
shll
cmc
in
jne
sbbl
sub
adc
je
mov
jge
and
lea
mov
or
inc
mov
mov
nop
sti
push
ljmp
adc
mov
sub
add
shrl
lock
push
xchg
int
pop
and
sbb
fs
test
and
cmp
dec
insl
push
lods
cli
fwait
rcrb
or
popa
jo
dec
xor
mov
ds
adc
test
pop
fildll
sbb
cmpsl
fcmovu
xlat
jns
mov
pop
cmp
fimuls
sbbl
push
testl
xorb
movsb
xchg
je
or
mov
popa
in
jg
loopne
and
mov
mov
inc
mov
roll
fs
cmp
addr16
aam
jmp
mov
jbe
clc
dec
mov
or
mov
push
sub
dec
push
out
dec
iret
dec
push
adc
inc
mov
cmp
add
cwtl
jl
testb
pop
nop
jle
xchg
sub
cmc
adc
movsl
je
loopne
sbb
xchg
out
mov
in
mov
push
xchg
fmuls
jge
enter
test
mov
adc
in
xchg
mov
inc
dec
mov
mov
inc
cmp
mov
cmp
lahf
cmp
or
push
repnz
mul
cs
jo
or
loopne
mov
push
aaa
ret
jmp
pop
dec
adc
dec
loope
or
fildll
mov
test
jge
hlt
push
stc
ljmp
push
mov
in
mov
or
xlat
jns
loopne
or
push
jp
cmp
pushf
es
sub
mov
lea
cmpsb
orb
daa
add
int3
mov
fimuls
add
xchg
push
in
xchg
cltd
xor
xchg
mov
mov
sti
in
test
xchg
loope
push
mov
xor
lods
imul
push
addr16
add
out
cmp
jo
or
adc
ficomps
sbb
outsl
pop
push
add
int3
adc
dec
out
bnd
out
jmp
push
jmp
sbb
sbb
lcall
inc
sub
mov
pop
pop
jecxz
adc
mull
xchg
adc
sub
xchg
add
or
mov
or
dec
je
ja
push
enter
dec
jno
int3
ds
cmp
jbe
sbb
inc
add
jae
pushf
stos
pop
mov
pinsrw
pushf
adc
jge
popf
and
mov
mov
or
adc
popa
inc
adc
add
or
xchg
rcrl
rcrb
test
test
fsubrl
stos
sub
imul
dec
hlt
push
jg
test
scas
push
xchg
xchg
fs
or
xor
call
xchg
mov
into
cmpsl
push
mov
push
pop
mov
inc
push
sub
aaa
imul
test
int
lahf
std
cmp
hlt
andb
mov
daa
mov
lret
das
lret
xchg
pmullw
outsl
xchg
push
xor
xor
rorl
push
adcb
jno
or
fmul
in
dec
pop
test
leave
fisubrs
dec
cmp
js
xchg
sub
scas
mov
or
push
sub
sub
sub
mov
push
negb
jp
loope
add
cmpl
lcall
lret
movsl
and
pop
call
cmpsb
fdivr
push
mov
cmpsb
movsb
dec
mov
push
or
mov
aam
ja
adc
and
jecxz
outsl
shll
sbb
pushf
or
nop
imul
xchg
mov
dec
pushf
mov
push
cmp
dec
cs
jno
cmp
push
sub
fsubp
stc
sub
loop
or
push
push
orl
notl
sbb
mov
xchg
jbe
in
lahf
insl
or
sbb
pushf
dec
loopne
sbb
push
test
and
in
push
mov
or
mov
mov
adc
pop
iret
or
fcmovb
and
push
cmp
inc
sub
lock
sbb
cltd
test
xor
ret
dec
or
mov
mov
adc
sbb
data16
jno
dec
jmp
fisttpll
inc
mov
cmp
inc
es
jge
inc
lods
lcall
aaa
fucomip
es
cwtl
cwtl
movsl
and
in
push
stos
dec
xchg
das
sub
pop
sub
xchg
jns
stos
stos
add
test
inc
dec
inc
popa
hlt
mov
dec
cmpsl
adc
push
orl
in
not
outsb
testl
cmpsb
push
or
jnp
pop
insl
out
daa
sbb
scas
repz
stos
or
xor
rclb
pop
insb
pop
loope
cld
push
push
jnp
mov
push
sahf
pop
mov
push
xor
xchg
or
add
sbb
pop
mov
push
test
icebp
push
xchg
dec
xor
jg
out
icebp
je
cld
inc
pop
cli
xchg
js
shll
push
pop
in
xor
mov
int
dec
ds
jp
pop
movsl
loop
addl
adc
fsubrs
inc
jmp
ficoms
stos
mov
mov
lods
push
dec
cld
ficompl
mov
sub
enter
jnp
jmp
js
in
out
clc
and
mov
jae
adc
fdivrs
cmp
out
sbb
xchg
cli
xchg
sub
pop
sub
pop
jecxz
dec
or
add
push
sbb
mov
inc
lahf
mov
clc
lahf
sarb
testl
push
mov
dec
cmp
aas
add
xchg
sbb
outsl
lds
pop
adc
mov
out
fwait
mov
lds
imul
fdivr
adc
mov
jae
inc
mov
scas
and
sbb
push
adcl
and
pop
sbb
data16
fidivrs
adc
fdivp
andl
xchg
repnz
lds
scas
stc
push
insl
arpl
add
xchg
push
cmpsl
aas
and
and
adc
xor
repz
xchg
bound
mov
xchg
dec
or
add
xor
data16
int
fists
inc
mov
push
cmc
mov
loopne
fisubl
and
dec
jbe
testb
stc
pop
aaa
or
mov
xchg
adc
push
jl
popa
push
pushf
inc
xchg
xor
mov
dec
pop
mov
hlt
sub
pop
loop
leave
pop
jg
push
sub
pop
shr
xchg
mov
push
insb
xchg
ret
add
mov
push
cli
sub
icebp
mov
jnp
leave
add
xchg
bound
and
icebp
sub
scas
cltd
push
ja
bound
xor
add
jge
lods
mov
pop
mov
push
lods
add
pop
or
jle
iret
andl
xchg
inc
xor
push
sub
mov
mov
dec
and
dec
pushf
sbb
outsb
push
mov
in
jbe
push
stos
in
add
int3
sub
data16
cmp
mov
aad
inc
fcmovb
xchg
aaa
jb
imul
enter
adc
jecxz
sbb
jecxz
enter
pop
add
mov
test
jmp
sbb
inc
mov
dec
push
les
movsb
nop
cwtl
xchg
mov
xchg
inc
cmp
rcll
mov
pop
movsl
repnz
call
push
aas
test
inc
mov
popa
pushf
in
fbld
repz
cmp
jmp
sub
dec
xlat
mov
daa
fs
aas
or
lea
mov
sbb
push
test
repnz
lahf
push
add
or
cmp
lock
inc
add
es
mov
xor
test
ficoml
or
add
mull
addr16
xchg
insl
daa
lds
cmp
ret
ret
stos
pop
push
mov
dec
xor
hlt
push
pop
push
pop
ss
sub
xor
or
test
sbb
adc
mov
cmc
aaa
inc
add
scas
add
push
outsb
sub
lds
icebp
aas
stos
adc
dec
jmp
jnp
push
adc
push
popf
mov
mov
mov
adc
xor
in
fs
xchg
icebp
rcll
cmp
mov
imul
repz
add
add
sbb
daa
mov
pop
test
mov
jb
push
fnstcw
xchg
adc
leave
adc
lret
mov
icebp
scas
jp
mov
mov
outsb
dec
test
fistpll
mov
add
fisttpll
addr16
cmp
adc
or
in
adc
popa
out
xchg
jg
cmpb
lcall
frstor
aaa
sbb
nop
pop
add
cmp
xor
fldl
mov
cmp
pop
xor
in
dec
pop
cmp
ret
jle
sbb
jb
mov
sub
lret
mov
cmp
or
jp
sbb
lds
sti
mov
cld
fistps
xchg
cmp
popf
jmp
sbb
jno
and
ss
icebp
add
add
mov
ret
sub
cmp
and
push
sub
out
pushf
push
jl
idivl
in
pop
add
xchg
in
inc
cmp
sub
pop
push
aad
cmp
test
dec
sahf
lds
sub
leave
push
scas
addl
lea
mov
aaa
push
adc
xor
jmp
popf
aaa
fcmovnb
jb
mov
mov
and
sub
sub
push
sub
sbb
hlt
xor
fists
paddsw
mov
add
fcoms
nop
jne
xor
stos
push
clc
dec
add
ret
mov
loope
les
rcrl
popa
add
shr
gs
cmp
lds
pop
xor
ljmp
cmp
subl
push
lea
cmp
stc
test
cmp
arpl
and
and
push
insl
je
jmp
cmp
cmpl
mov
pushf
in
ja
xor
jl
mov
jecxz
test
std
push
std
lret
add
mov
xchg
xchg
addl
mov
sahf
stc
fnstsw
jecxz
xchg
and
pusha
mov
jnp
repz
in
jne
dec
mov
movsb
sub
xchg
xchg
mov
mov
push
ljmp
sarl
push
lds
push
add
ret
fildll
mov
ja
int
cmp
and
mov
aaa
lcall
enter
insb
mov
test
jecxz
push
xchg
cmp
jbe
mov
inc
cmp
in
or
bound
mov
rolb
mov
jp
cltd
mov
aam
mov
push
loop
je
int3
imul
cwtl
jbe
imul
mov
movsb
pushf
mov
or
mov
inc
iret
sub
mov
pop
dec
pop
or
add
mov
mov
push
sub
lea
or
jns
in
mov
xchg
jnp
add
and
pop
arpl
add
xor
mov
hlt
jge
jmp
in
xchg
mov
fs
ret
popf
daa
aas
pusha
sbb
mov
into
negl
popf
add
int
leave
lcall
xchg
ds
xor
lret
imul
mov
and
add
movsl
imul
pop
xor
sbb
dec
mov
daa
into
mov
dec
xor
out
fisubl
cmp
push
leave
fmuls
cmpsb
imull
push
sarb
or
call
push
fdivr
jo
cmp
fldenv
xchg
mov
adc
in
int3
cmp
lret
repz
and
and
jae
retw
lcall
mov
leave
xchg
push
insl
cltd
outsb
ja
inc
sbb
pop
stos
xchg
xor
jno
popf
je
or
filds
add
insl
sub
loopne
leave
ffreep
pusha
je
nop
or
cmpsl
or
out
call
dec
mov
mov
cmpsl
mov
push
clc
xlat
cmc
lret
or
sbb
dec
sub
add
roll
ret
cmpb
test
mov
rorl
push
cld
dec
jle
movsl
or
pop
adc
dec
mov
pop
cmp
jmp
mov
adc
fcmovu
sub
mov
push
cmpsl
das
mov
pop
adc
mov
fadds
xchg
mov
pop
push
pop
filds
movsl
mov
mov
rcrb
ja
cmc
push
adc
xor
push
cmpsl
mov
cs
pop
in
xlat
leave
jnp
sbb
fucom
adc
leave
pop
addr16
pushf
xchg
jg
popf
pop
sar
and
andl
cmp
cwtl
push
movsb
repz
loop
sbb
jl
jb
mov
loop
jg
jge
jg
sbb
or
pop
dec
mov
test
push
ds
cli
mov
pushf
add
test
mov
mov
fsubl
add
das
fidivs
das
pop
rcr
mov
and
in
mov
aad
stc
sahf
test
fiaddl
aaa
popa
jecxz
and
test
insb
push
jecxz
inc
push
ja
cmp
push
dec
jp
sarl
sti
ror
sbb
adc
xor
sbb
push
aas
mov
or
xor
push
and
xor
mov
stos
mov
fdivp
movsl
or
sbb
mov
sbb
dec
pushf
push
imul
ss
dec
incl
ss
cmpsl
dec
adc
lcall
shlb
mov
pop
push
push
cmp
dec
lds
sub
das
add
add
cmp
xorb
outsl
andl
adc
je
jp
fbstp
cmp
dec
adc
mov
jg
xlat
mov
push
jl
push
push
stos
leave
cmp
imul
out
dec
aam
xchg
addr16
adc
mov
pushf
hlt
das
add
mov
add
xchg
rep
cmc
push
inc
mov
lods
add
push
scas
inc
insb
mov
test
lods
cli
jle
cltd
cli
fisttpl
mov
mov
cli
ret
movsb
jns
sub
inc
rcrl
cmp
fidivs
sub
fs
xor
iret
add
aam
add
mov
shlb
pop
push
test
lahf
sbb
mov
test
cmp
push
addr16
lret
je
scas
and
inc
ljmp
inc
sub
popf
inc
push
add
pusha
stc
nop
sub
and
in
adc
xor
xchg
adc
xchg
push
inc
xchg
jp
mov
das
jo
pop
movsb
push
aad
insb
ljmp
push
lret
mov
cmpxchg
hlt
push
adc
add
cltd
cmp
data16
hlt
pop
xchg
jbe
outsb
mov
adcb
add
into
xlat
cmp
data16
fs
ljmp
xorl
movsl
rcrb
cmp
inc
jne
jbe
lods
data16
jmp
push
inc
xchg
aam
sbb
aas
inc
pop
iret
les
jbe
mov
pop
mov
mov
test
mov
push
dec
divb
inc
cmp
push
nop
jmp
sub
mov
adc
js
cwtl
dec
push
cmpl
pop
push
arpl
inc
lods
iret
xor
dec
in
jmp
ficoml
inc
cmc
loope
div
mov
stos
xor
stos
pop
pop
addl
cmp
ret
test
mov
adc
fldenv
fcmovb
iret
shll
push
bound
ret
xor
aas
inc
adc
cmc
inc
out
test
cld
ljmp
stos
and
sbb
ficomps
inc
pop
dec
cmp
js
or
sub
sub
ss
das
mov
xor
xchg
ss
jbe
rcr
or
mov
stos
dec
sub
xor
shlb
sarb
mov
dec
sahf
dec
pop
stos
jo
jmp
dec
jae
dec
testl
mov
scas
xor
ljmp
xchg
icebp
jbe
pop
mov
bound
push
mov
adc
dec
xchg
add
shlb
out
xchg
or
push
iret
in
xor
push
sbb
pop
adcb
int
fs
rcll
jecxz
in
fcmovnbe
sub
lcall
gs
mov
or
imul
inc
and
pop
stc
pop
scas
jmp
mov
mov
int
das
cmp
cwtl
jne
pop
addr16
mov
out
xlat
lret
test
jnp
nop
jge
call
stos
cmp
clc
les
sbb
sti
hlt
ficompl
mov
jne
divl
add
push
out
loop
inc
adc
mov
mov
pushl
mov
jae
push
pop
divb
fdecstp
mov
in
std
adc
mov
jb
lea
and
fwait
cs
or
and
inc
inc
and
shr
nop
push
pusha
int3
ja
xchg
or
ret
ja
stos
sub
ffreep
imul
dec
cltd
push
arpl
lds
mov
push
cld
adc
rcl
mov
dec
fcompp
and
sahf
dec
inc
notl
lret
mov
sub
arpl
sar
xchg
jecxz
cltd
push
pushf
nop
mov
insl
movsb
cmpl
and
xor
shl
xor
gs
xor
call
pop
hlt
cmc
mov
cmp
insb
xor
push
push
mov
adc
in
aas
or
push
xor
insl
adc
hlt
or
cmp
mov
js
mov
sbb
repz
loopne
lahf
or
jmp
test
aaa
daa
sbb
stos
subb
ss
adc
test
addr16
gs
data16
call
mov
sub
jp
sub
cmp
pop
es
or
pop
rcll
mov
inc
dec
inc
mov
mov
push
sbb
mov
aad
push
outsl
jg
stos
leave
mov
out
loope
jecxz
xor
inc
repnz
imul
fistpll
cmp
inc
cli
and
jns
and
adc
fs
pop
cli
adc
push
andb
inc
stos
sub
sub
dec
popa
adc
loop
stc
xor
and
popa
or
mov
rcll
add
or
les
adc
xchg
mov
lods
test
mov
jmp
add
mov
in
lahf
mov
inc
jl
scas
dec
in
int
push
or
cltd
xchg
repnz
push
clc
mov
sub
mov
loop
arpl
mov
ljmp
jo
jge
cli
push
jmp
sub
iret
sahf
mov
push
add
ret
enter
ja
mov
adc
fs
loope
push
mov
pushf
sti
idivl
sbb
repz
mov
xor
in
enter
addr16
jl
sbb
int3
aas
inc
lahf
int
inc
lcall
push
add
xchg
fs
lcall
lea
xor
jo
adc
adc
mov
ja
jmp
test
adc
fsubr
xor
aas
ret
out
or
jno
mov
icebp
and
cld
add
inc
aam
sub
pop
fimuls
sub
sbb
push
inc
aas
lcall
testb
je
mov
loop
xchg
lods
dec
mov
or
push
out
imul
cli
test
out
or
xchg
dec
push
xor
arpl
cmpsb
movsb
fprem1
cli
rolb
xchg
in
fsubrs
mov
mov
lret
mov
mov
inc
adc
sub
sbb
outsl
mov
pop
loopne
mov
add
xor
and
jbe
xor
push
bound
mov
mov
inc
fwait
daa
fwait
push
lods
and
stos
and
fcmovu
bound
data16
scas
adcb
add
xchg
or
cwtl
es
cmp
pop
push
jno
dec
jle
roll
loop
push
lret
pushf
aam
ss
push
mov
or
cwtl
cmp
mov
movsb
test
push
stos
stos
in
repnz
je
ret
jns
inc
in
orb
pop
hlt
pushf
iret
test
xor
cmp
or
loope
push
fldl
mov
xchg
outsb
sub
lods
sbb
cmp
inc
add
pop
clc
ficoms
mov
jb
je
jbe
sbb
push
xchg
sub
std
repz
mov
sbb
test
and
lret
add
xchg
xor
pop
cmp
adc
call
dec
push
outsl
js
and
sti
adc
out
ja
jge
add
enter
shlb
sub
iret
adc
or
sbb
mov
dec
fs
add
jb
fisttpll
xchg
mov
call
scas
push
cmpsl
jg
mov
jmp
scas
shlb
test
push
call
pop
in
bound
int
inc
dec
hlt
adc
popa
insl
cmp
shrd
jecxz
adc
pop
adcb
shll
es
rcrb
xor
cmp
into
daa
jae
scas
add
into
mov
outsl
pusha
cmp
repz
mov
mov
fwait
adc
push
je
pop
mov
sarb
mov
cltd
xchg
or
cmp
lret
inc
lret
push
lahf
or
test
xchg
lahf
xor
xor
pop
jbe
sub
inc
mov
out
es
das
mov
call
mov
stos
push
cmpsl
es
ret
in
loope
cmpsl
loopne
testb
sub
fbld
jmp
movsl
cwtl
jnp
cld
mov
cmpsb
shlb
fmuls
cld
push
mov
sub
mov
sti
jmp
loop
sahf
jb
fcompl
pop
mov
loopne
jge
cli
xchg
inc
in
ret
insl
aad
jbe
mov
xchg
dec
push
insl
iret
movsl
iret
scas
sub
xchg
repnz
dec
pop
fsubrl
mov
popf
test
ror
push
repnz
movl
iret
jmp
jb
xchg
and
cmp
fs
jo
or
fdivl
pop
in
lods
lret
sub
repnz
mov
sbb
push
pop
icebp
cli
pop
pop
aaa
inc
and
fistpll
xor
sbb
add
push
jmp
lret
add
loopne
hlt
mov
outsb
jp
adc
es
push
repz
mov
pop
jl
push
test
loope
fcompl
sub
cld
xor
das
fidivrl
mov
aam
sub
push
mov
call
mov
jg
mov
mov
jns
call
mov
mov
scas
inc
dec
mov
push
fcmovnbe
jae
push
push
std
jge
jo
fs
iret
push
in
jecxz
xchg
ret
lock
ds
outsb
std
lcall
jo
dec
aaa
pop
dec
mov
and
xor
add
jge
aaa
gs
frstor
sarl
pop
cmp
push
or
es
outsb
aad
mov
add
xchg
int3
shl
mov
inc
out
adc
fidivs
push
dec
outsl
rcrb
in
outsb
xchg
push
sbb
test
das
dec
jb
or
cwtl
xor
push
jge
cld
sub
dec
and
sbb
xor
mov
pop
into
xchg
ss
mov
mov
shlb
daa
mov
test
jo
jbe
popa
lods
sbb
bound
invd
push
out
js
cs
dec
cltd
fcmovu
into
xchg
pop
jno
mov
adc
jnp
fwait
ret
mov
test
sbb
lea
les
nop
popa
xchg
dec
add
adc
push
test
jmp
pop
sub
hlt
xchg
call
adcb
push
repnz
icebp
mov
mov
mov
jg
pushf
inc
inc
fistpl
pop
push
xor
es
xchg
repz
lods
and
fnstenv
inc
fildl
ds
sub
mov
imull
mov
mov
test
cld
or
dec
shlb
jne
stos
jmp
out
addl
mov
pop
out
adc
pop
stos
add
fucomp
xor
add
call
dec
repnz
xchg
idivl
jmp
call
sub
mov
push
roll
inc
daa
sti
test
es
sub
out
sbb
xor
cld
push
dec
pushf
pop
jle
pop
cmp
xchg
add
add
inc
push
lcall
jns
inc
sbb
pop
xor
sbb
in
pop
sub
adcb
cmpsl
inc
gs
and
inc
insb
mov
pop
inc
loope
mov
xchg
jp
insb
outsb
jno
mov
in
mov
test
and
outsb
sbb
adc
cmp
inc
xchg
stc
xlat
or
adc
rcl
xlat
pusha
out
inc
adc
dec
cmp
int
cld
adc
pop
or
jp
js
xor
pop
mov
imull
push
cmpl
inc
stc
or
jb
fidivrl
jbe
outsb
je
dec
sbb
test
dec
fidivl
mov
xchg
iret
xor
dec
gs
cld
lahf
sbb
pop
dec
movsb
jbe
arpl
jecxz
psrad
inc
aam
pushf
shrl
scas
pusha
orl
cmp
adc
dec
lcall
fsubp
cmp
push
in
data16
jo
lea
push
dec
test
and
sub
mov
mov
pop
imulb
adc
test
subb
mov
mov
shll
xor
mov
or
sub
or
fcmovb
jp
and
xor
outsl
push
inc
aad
jbe
cwtl
dec
adc
add
enter
fs
movsl
sbb
xchg
fisubl
mov
or
ret
stos
enter
ja
dec
mov
fmul
push
daa
cltd
divl
pop
dec
test
fidivrs
jnp
rorl
data16
jno
or
outsl
addr16
mov
cmp
dec
dec
shl
jo
enter
mov
cmp
lods
ja
dec
inc
and
sbb
stos
pop
in
cmp
xor
ror
mov
pmaxub
jae
cmp
dec
jns
imul
out
testb
psrad
mov
or
les
jns
dec
fwait
mov
scas
or
ljmp
jl
jbe
or
xor
in
add
pop
subl
sub
out
imul
or
aam
xor
fidivrl
insl
push
cli
pop
mov
scas
movsl
push
add
sub
repz
lea
xor
jne
mov
fadd
xor
repz
sarl
and
out
dec
add
and
dec
cmp
or
test
outsl
mov
pop
inc
xor
and
mov
mov
adc
add
out
fwait
mov
mov
shlb
push
adc
cs
lea
stc
out
cmpsl
and
arpl
xor
loope
stos
mov
into
or
sbb
dec
shrl
adc
push
pushf
and
sar
into
sub
adc
imul
aad
cli
push
test
jns
dec
jp
xchg
mov
lret
mov
ds
fsubrp
sub
xor
sub
xchg
cltd
pop
mov
movsl
sbbb
push
mov
fs
jle
outsl
add
cmpl
add
cltd
jle
out
push
scas
cwtl
pop
out
jae
addr16
bound
ss
jns
jle
ljmp
jle
je
arpl
sbb
cltd
aam
dec
sti
insb
mov
pop
mov
dec
jb
xchg
mov
sbb
call
lds
loope
push
adc
cmp
xchg
mov
cmp
xchg
popa
lds
and
dec
popf
scas
xlat
stos
nop
sub
andl
xchg
loop
shll
inc
sub
sti
lea
mov
cmp
push
mov
sbb
jne
data16
push
lret
xchg
movsl
mov
ljmp
mov
xchg
add
jo
mov
jge
xchg
jmp
pop
arpl
es
dec
icebp
out
xchg
push
incb
dec
outsl
mov
fdivl
shrl
add
sbb
rcr
mov
addr16
test
lahf
and
arpl
inc
sbb
xor
add
pop
das
push
mov
mov
loope
adc
mov
outsb
mov
insb
shrl
in
mov
fsubrl
and
jae
jmp
leave
mov
ret
mov
xchg
shrb
jmp
jecxz
jae
mov
sbb
negl
dec
sub
inc
mov
imul
push
js
popf
in
lret
sub
adc
fidivrl
insb
xchg
loop
cld
pop
mov
lret
dec
jge
cmp
sti
mov
sub
dec
push
dec
xlat
push
call
int
dec
pushf
sbb
int
cld
outsb
test
je
shl
pop
adc
mov
bound
sahf
pop
pop
movsl
rorb
and
aam
jo
xchg
push
inc
xor
inc
sbb
xchg
jb
xor
push
dec
cmc
shll
movsl
out
repnz
dec
ljmp
clc
inc
mov
pop
cmpsl
faddl
and
push
dec
lock
fldcw
dec
jb
nop
inc
loop
test
dec
into
pop
adcb
pop
add
daa
test
inc
jbe
jmp
aad
sahf
decb
mov
insb
jo
out
clc
sbb
leave
jle
dec
outsb
inc
lcall
shrl
mov
mov
lahf
jbe
js
out
xor
push
add
push
cmp
add
les
push
sub
movsb
dec
stos
pop
leave
sarb
jnp
dec
or
dec
je
fildl
xlat
ljmp
jp
sbb
jmp
das
lock
hlt
jb
notb
sub
mov
jge
enter
mov
push
lret
je
and
jmp
imul
xor
sub
xor
sbb
insl
scas
sbb
add
jl
pop
xchg
inc
push
loopne
inc
stos
mov
xor
data16
jne
out
stos
rcl
xor
addl
mov
leave
push
jmp
int3
negb
pop
ja
push
or
out
sbb
add
icebp
daa
or
mov
push
mov
ds
lock
cmp
movsl
fsubs
mov
jg
loopne
scas
jns
repnz
loope
inc
aaa
mov
lods
xlat
lods
push
out
int3
movsl
push
inc
repz
out
sub
or
fnstsw
lock
push
popl
and
fnstcw
notl
cmp
mov
pop
outsl
sbb
and
jnp
negl
jbe
dec
cmc
mov
add
movsb
pop
loop
sti
or
push
call
in
sub
push
fcmovu
push
and
andl
xlat
loope
mov
aam
mov
imul
pusha
cmpsb
bnd
mov
mov
sarb
out
jl
int
scas
lahf
sbb
xor
dec
movsb
std
ja
sahf
xor
fdivs
xchg
push
lahf
ljmp
subl
sub
or
inc
or
pop
xchg
loopne
ljmp
testl
cmp
lret
cmp
pop
adc
pop
pusha
push
pop
les
mov
sbb
push
and
cmpsb
fbstp
adc
xor
lret
mov
stos
sub
mov
xlat
ficoms
pusha
addb
pop
daa
lret
adc
mov
mov
mov
int3
fisubl
mov
xchg
insb
inc
aad
cmp
cld
outsl
and
sbb
sahf
das
sub
mov
and
dec
adc
jp
pop
dec
fs
and
aas
pop
cmpsl
mov
movsl
push
mov
shll
jae
pop
xchg
mov
int
push
cmpsl
xor
scas
mov
roll
add
sbb
xchg
lret
movsb
xor
sahf
adc
jo
in
insb
or
loop
mov
out
fwait
xchg
inc
mov
movsb
cld
push
fstpl
cmp
scas
das
mov
sub
mov
xor
jne
mov
popa
or
das
mov
ss
jp
jne
jecxz
mov
xchg
sub
in
out
jecxz
xchg
testb
sar
pop
dec
lods
ds
mov
or
and
sub
xor
jl
ret
ret
xor
stc
addr16
icebp
mov
inc
jge
mov
out
inc
push
gs
fwait
add
into
fstl
repnz
ja
push
fs
test
push
mov
mov
insb
cmc
movsl
jmp
stos
jnp
ds
mov
mov
sub
add
mov
or
int3
cmp
das
ljmp
jg
lahf
sbb
adcb
mov
movsl
xchg
outsl
push
rorb
or
cmp
inc
fsubp
ret
cwtl
insl
xchg
push
stos
push
mov
adcl
sbb
lock
add
sub
sbb
and
stos
fwait
push
add
int
sbb
and
mulb
sub
and
test
jmp
jns
sub
fwait
mov
icebp
xchg
inc
xchg
aas
pop
fdivl
or
jg
and
ja
mov
popw
push
idiv
and
and
rcrl
adc
das
int3
cmpb
and
clc
in
insb
jg
push
jns
inc
xor
out
xor
inc
push
js
cmp
push
mov
mov
xchg
jne
sbb
fs
clc
rclb
mov
jnp
push
dec
mov
cmpsl
into
xchg
dec
rcl
dec
adc
bound
leave
mov
sub
and
push
sahf
cmp
aaa
mov
outsb
cltd
mov
iret
lods
add
hlt
pusha
insb
call
xchg
xchg
fcompl
or
and
shlb
or
mov
mov
aaa
push
pop
mov
push
call
imull
mov
cwtl
in
or
int3
xor
xor
arpl
pushf
sbb
shl
int
mov
xchg
stc
icebp
outsl
lahf
popa
lods
dec
int
xor
popf
bound
pop
adc
shl
stos
cmp
push
rolb
jne
gs
push
int3
mov
mov
repnz
loopne
imul
dec
loope
sub
xchg
mov
cld
fistpl
cltd
xchg
in
xor
mov
xchg
sbb
pop
sti
test
std
insl
jns
sub
fiaddl
repnz
xlat
dec
clc
pop
out
mov
dec
xchg
mov
cmpb
out
pushf
loop
cli
lret
stc
dec
push
pop
jecxz
in
hlt
push
loopne
jmp
or
sbb
insl
inc
mov
jecxz
cmp
mov
mov
pop
lock
push
and
mov
leave
xor
add
sbb
xlat
xchg
xor
repnz
lret
pop
xchg
mov
ficoms
xchg
mov
popf
popa
pop
insl
pop
out
inc
in
test
ds
sbb
and
and
cwtl
fdivr
xchg
ja
dec
mov
stc
push
sub
cmpsb
iret
sahf
lods
or
mov
imull
dec
in
mov
mov
insb
hlt
inc
lret
jl
ret
popf
in
inc
lret
jecxz
xchg
pop
sbb
testl
or
cmc
cmp
out
pop
std
pop
or
dec
push
ret
adc
fbld
popf
add
adc
popf
lahf
xlat
stos
sub
add
inc
loope
cmc
rcrl
repnz
jmp
pop
mov
cltd
daa
hlt
test
adc
loop
fcoml
fwait
push
fs
cwtl
and
xor
add
imull
mov
sbb
daa
dec
ret
cmp
dec
add
cmp
sub
jg
aaa
sbb
loopne
cmpsl
in
push
shll
push
aam
ja
shrl
inc
push
and
mov
fld
aam
mov
xchg
pushf
scas
enter
insb
cmp
add
hlt
push
stos
loop
mov
push
adc
popf
pop
test
sbbb
insb
dec
shll
pop
icebp
xchg
test
js
out
add
xor
shlb
shl
mov
push
loop
xchg
movsl
fs
stos
cmp
lcall
xchg
mov
xlat
sbb
cmp
ror
fisttpll
mov
and
loopne
adc
sub
pop
dec
push
mov
mov
stos
add
mov
xor
pop
idiv
dec
insb
pop
push
push
ja
or
dec
aaa
pusha
dec
dec
outsl
pop
fdivr
nop
je
mov
loopne
xchg
xor
dec
pop
ja
pop
sbb
ret
adc
cld
pop
xlat
hlt
inc
into
dec
ret
push
mov
mov
push
sub
repnz
imul
les
add
addl
pop
imull
sbbb
mov
rcrl
mov
mov
mov
and
and
aam
pop
std
pop
call
movsb
arpl
push
dec
js
fidivl
xchg
repz
push
pop
popf
mov
cmp
cmpsb
rcrb
andl
mov
pop
mov
mov
mov
mov
pop
xor
mov
jecxz
xor
sahf
add
stos
ljmp
lods
fisttpll
mov
mov
sbb
inc
push
mov
idivl
xchg
stos
mov
out
mov
jecxz
je
dec
xchg
adc
sbb
dec
std
push
and
rol
jge
mov
out
lcall
addr16
sahf
or
sbb
int
xor
xor
ja
rolb
sahf
mov
popf
insl
sbb
fcoms
pop
mov
stc
inc
adc
mov
scas
and
push
imul
jg
aaa
inc
jae
in
sbb
pop
jbe
stos
jg
xchg
sbb
or
mov
cmpsl
or
jo
outsl
rorl
stos
rorl
icebp
js
icebp
sub
xchg
sub
stc
cmpsb
cli
mov
cmpsb
push
pusha
ss
insb
pop
fdivrp
pop
cwtl
xchg
mov
outsb
mov
lcall
mov
or
xchg
ja
adc
je
jg
enter
jg
xchg
lcall
mov
cli
in
dec
add
xor
and
out
mov
push
aad
dec
push
pop
cwtl
arpl
popa
pop
mov
aas
insl
dec
in
loop
arpl
mov
adc
push
mov
lahf
in
add
xor
mov
xlat
stos
xorb
push
dec
xchg
sbb
push
or
xor
aas
mov
mov
add
jl
lods
dec
inc
faddl
gs
jb
daa
sub
push
sbb
fisttpll
rcr
ljmp
inc
lock
cmpsb
idivb
add
stos
xchg
sub
dec
cmp
pushf
into
sub
or
bnd
rcrl
inc
clc
imull
add
push
scas
mov
xorl
arpl
mov
or
sarb
lahf
hlt
inc
pop
jmp
mov
incb
dec
iret
or
or
mov
and
add
lock
xchg
in
call
mov
push
and
pusha
js
imul
shlb
mov
cli
jg
mov
jo
sbb
cmp
and
sbb
test
je
add
cmpsl
inc
roll
xor
or
lock
sbb
ret
stc
dec
jbe
sub
inc
addb
loopne
inc
pop
add
and
xor
xor
stos
cmc
jmp
xchg
sub
faddp
aad
jne
adc
hlt
sbb
jl
daa
adc
mov
mov
push
jnp
dec
or
in
jae
or
iret
mov
inc
mov
in
mov
jo
xchg
movsl
test
push
mov
jge
aam
push
and
jo
imul
push
push
cwtl
mov
int
in
dec
and
loopne
dec
inc
xchg
ret
je
xchg
gs
add
idivb
leave
adcb
addl
stc
lea
ljmp
cmp
test
fcmovb
mov
push
mov
cmpsb
icebp
sbb
xor
jb
ja
movsl
jg
push
pop
sbb
sub
fs
or
pop
nop
inc
jns
sti
nop
data16
shrl
or
mov
cmc
push
gs
push
in
jmp
add
push
and
mov
stos
ja
adc
lods
cmpsl
mov
dec
notl
adc
rcll
hlt
mov
cmp
lods
sub
pop
mov
xor
sub
mov
xlat
mov
cmpsb
jbe
icebp
adc
cmp
and
mov
jmp
mov
sbb
int3
lret
add
mov
push
cmpsb
jno
and
mov
xchg
push
push
aad
push
xchg
icebp
insb
hlt
dec
test
pop
jae
cmp
jecxz
add
xor
or
mov
popf
cltd
adc
jbe
mov
in
dec
xchg
mov
jl
cltd
movsl
xchg
pop
stos
xor
dec
pop
inc
adc
add
jne
xchg
sbb
mov
test
mov
into
sar
push
and
data16
es
mov
adcl
cmp
adc
dec
arpl
adc
cmc
icebp
jbe
cmpsb
lret
into
xchg
dec
mov
out
sbb
cmpsl
sbb
xor
or
outsl
out
and
sub
push
adc
imul
call
fmull
jle
push
icebp
mov
xor
fstl
les
mov
push
insb
pop
cmpsl
ss
filds
mov
sbbl
pusha
jns
shr
cmp
cld
xor
nop
pop
insb
mov
add
and
ljmp
xor
jmp
push
pop
test
mov
adc
push
lahf
stos
fisubs
inc
cmp
push
and
sbb
cmp
cwtl
inc
add
jl
loopnew,pt
aam
cmpsl
pop
mov
mov
scas
leave
mov
jno
cmp
xchg
mov
xlat
jb
out
jne
mov
rclb
lods
into
push
in
jle
cmc
lcall
xor
adc
aaa
arpl
mov
push
ljmp
dec
inc
xor
xor
sub
out
cmp
lahf
xchg
or
pop
mov
das
adc
mov
daa
gs
loope
jle
mov
xchg
enter
dec
pop
pop
mov
scas
aaa
scas
adc
repnz
fs
mov
icebp
ds
pushf
mov
popf
gs
jp
jno
xor
cmp
lcall
shll
stc
jno
lock
out
inc
and
cmpb
add
in
jge
mov
cvtps2pi
jmp
fnstenv
mov
lahf
jns
lock
push
adc
fucom
aad
iret
inc
movsb
addr16
aam
or
mov
pop
xchg
dec
repnz
dec
jmp
dec
sbb
call
lds
popf
mov
insl
cmp
mov
frstor
mov
in
inc
dec
cmp
cmp
repz
xchg
loopne
lods
fdivs
sbb
insl
popa
aam
mov
aas
aad
or
jbe
cltd
popa
fcmovnu
data16
sub
jp
xchg
push
adc
shll
lock
sbb
adc
ret
mov
out
lahf
push
mov
aam
lret
or
arpl
cmp
loope
leave
cld
pusha
cmpsb
in
add
mov
cs
fsts
mov
push
push
les
push
in
mov
jecxz
pop
pop
outsb
mov
test
jge
fimull
inc
in
xchg
aad
inc
cmc
xor
push
xchg
push
mov
push
jle
pop
icebp
nop
pushl
xchg
mov
push
insl
mov
stos
rclb
fisttpl
out
and
pushf
sarl
mov
lods
std
fildl
enter
ss
jno
lock
push
into
cmp
mov
add
inc
popl
ljmp
xlat
add
jno
lret
movsl
popa
es
scas
out
clc
xchg
shrl
dec
loopne
clc
fadds
xor
adcb
mov
out
sub
imul
cmpsl
push
push
jns
mov
scas
push
data16
sbb
outsb
xchg
fwait
clc
mov
ljmp
fildl
mov
jge
sub
mov
fst
cmp
push
and
and
gs
adc
divb
adc
into
inc
in
push
shl
sub
aad
fwait
into
pushf
divl
and
das
sbb
jns
popf
xlat
enter
je
pop
test
std
xchg
mov
cltd
iret
or
mov
xchg
xorl
cmpsb
xor
cli
or
fildl
push
es
scas
mov
xchg
push
scas
out
add
inc
mov
and
sbb
xor
xor
xchg
xchg
ret
aaa
imul
stos
xchg
mov
adc
or
pop
or
rcl
sti
xchg
mov
cld
shll
add
xor
addr16
mov
add
adc
mov
xchg
jl
pushf
and
fimuls
pop
lods
leave
jne
lods
mov
mov
push
xchg
jmp
mov
mov
ja
push
dec
rol
jbe
cs
enter
das
inc
hlt
dec
nop
sahf
dec
mov
mov
aas
loopne
repnz
mov
inc
mov
js
movsb
cltd
adc
daa
jp
aaa
jno
cmp
fisubs
sub
push
int
stos
and
sub
add
mov
xor
jnp
rcr
add
inc
inc
sbb
lcall
loop
lock
xor
pusha
hlt
pusha
inc
jno
adc
sub
xor
lret
ja
mov
push
mov
jecxz
mulb
pop
xor
int3
sub
stc
jg
add
push
mov
outsb
incb
lods
or
outsl
inc
add
out
mov
push
push
lret
insb
cmp
arpl
inc
stc
js
mov
cwtl
push
add
jnp
xchg
xchg
push
push
sbb
das
cmp
in
dec
jp
test
add
add
les
repnz
mov
dec
lret
loope
sub
adc
xchg
xchg
test
mov
cld
cmp
jae
xor
andl
outsb
pop
je
push
ret
in
out
adc
dec
push
rcll
jecxz
jae
push
pop
xor
or
xchg
mov
fcompl
or
jmp
cwtl
icebp
pop
push
dec
cmpsl
ret
mov
inc
shrb
jle
push
outsb
es
jns
fdivl
pop
inc
mov
mov
daa
mov
cli
subl
and
or
out
int3
sbb
mov
mov
mov
xchg
les
and
or
pushf
dec
jecxz
outsb
jp
fidivs
sub
or
dec
cs
mov
and
xor
aam
sahf
sub
inc
lcall
clc
out
shl
xchg
aaa
aaa
jbe
lahf
mov
xor
jp
fidivs
sub
fwait
pop
dec
cs
adc
or
out
movsb
mov
call
adc
sub
fs
dec
pushf
mov
cwtl
jge,pt
adc
stos
sub
sub
cmp
hlt
add
loope
or
jns
jbe
fdivrs
cmp
test
insb
fcmove
or
jb
mov
lods
mov
enter
mov
daa
push
ret
popa
fldl2e
mov
pop
jge
jbe
jo
xor
data16
xchg
adc
repnz
sub
cmp
test
and
and
add
sti
inc
add
add
jo
fldcw
mov
jo
iret
out
pop
fldl
leave
cmovne
ret
out
fidivrs
call
ret
inc
adc
out
mov
add
mov
ret
call
das
cli
pushf
js
mov
jbe
mov
ret
and
jmp
dec
xor
in
sub
add
leave
clc
add
movsb
mov
ror
xchg
mov
add
gs
mov
leave
inc
dec
les
and
cmp
cmc
in
mov
arpl
dec
shll
lods
mov
cmp
repz
nop
mov
std
sbb
lock
int
test
adc
cli
jle
aam
clc
add
ds
movsb
test
cmpsb
push
xor
lea
xorb
add
out
enter
loope
ss
fildll
cltd
sahf
shl
push
pop
fidivrs
adc
fs
xchg
and
sti
test
xchg
clc
insl
cmp
lcall
shl
out
lret
mov
mov
adcb
pop
inc
xchg
mov
xchg
xchg
sahf
test
aam
sub
sub
dec
hlt
and
inc
test
jp
mov
loope
pop
sti
test
xchg
or
and
cmp
repz
cmp
jno
es
pop
jp
outsb
imul
dec
cs
pop
clc
pop
xchg
inc
mov
cmpsl
loope
pop
cmp
rorl
adc
mov
es
inc
rcll
pop
fs
cmpsb
inc
lock
iret
dec
out
testb
adc
mov
mov
mov
xlat
lds
aam
fdivr
stos
mov
cltd
pop
mov
jo
mov
push
or
pop
jae
dec
and
inc
sbbb
jp
mov
adc
loopne
ja
int
outsb
adc
data16
dec
cmc
jp
xchg
les
pushf
repnz
loop
rorb
loop
push
fnstcw
outsl
stos
stc
fisubrs
enter
inc
or
les
enter
mov
notl
filds
fistps
lds
lods
pop
dec
adc
sbb
mov
lret
mov
ret
cmc
pop
dec
and
xor
mov
loopne
sub
inc
mov
les
jl
add
insl
cmpsb
xchg
and
jl
dec
movb
popf
and
outsb
and
fdivl
mull
sahf
call
jb
dec
pop
sbb
sbb
push
cmc
jbe
and
sbb
in
pushf
mov
test
shll
mov
xchg
popf
fidivs
dec
cmp
jecxz
movsl
mov
stos
mov
sub
jmp
xchg
dec
add
xchg
push
je
sub
imul
dec
out
outsl
addr16
loopne
cmpsl
movsb
push
in
sbb
das
push
addr16
fadds
sbb
fs
push
sub
sbb
dec
mov
xchg
mov
arpl
lea
jb
rorb
lcall
in
clc
ljmp
add
shrl
test
dec
jb
cltd
or
pop
mov
mov
in
mov
aam
xor
mov
in
mov
std
adc
js
cmp
fldenv
ds
shl
int
and
xor
xor
push
sbb
stos
cmp
pop
pop
xor
sub
add
xlat
sahf
sbb
test
in
fists
ret
gs
loope
mov
arpl
stos
xchg
les
adc
pop
repnz
inc
lret
inc
sbb
xchg
mov
cmp
clc
cli
mov
or
sbb
pop
xor
enter
jmp
jnp
scas
sub
lret
lods
sbb
inc
fwait
pop
outsb
jmp
sahf
inc
push
mov
call
mov
lret
mov
sub
xchg
inc
push
push
add
fbld
sbb
inc
pop
cmp
pop
repz
dec
xor
and
enter
sub
out
mov
iret
push
dec
inc
push
outsb
pop
testl
adc
les
xchg
sbb
or
mov
adc
adc
les
nop
in
dec
iret
or
pop
pop
sbb
dec
dec
mov
stc
movsb
inc
mov
inc
and
pusha
cmpsb
insb
sbb
xchg
fcoms
push
lock
scas
test
jbe
jmp
dec
xchg
popf
or
ret
mov
cmp
lret
int
or
insl
dec
mov
cmpsb
scas
dec
mov
pushl
add
dec
lret
add
adc
mov
int3
nop
mov
adc
and
das
in
jb
cld
push
cmpsl
jae
and
cmp
std
mov
mov
popa
ds
or
add
push
adc
jmp
shrb
jle
pop
jle
dec
sbb
cmp
sbb
stc
jbe
cmp
inc
fdivl
fistpl
mov
dec
and
pop
sbb
push
mov
aas
xlat
mov
notl
mov
cld
push
jg
or
nop
in
sub
xlat
cmp
or
add
test
or
les
xor
je
mov
out
add
xchg
and
xor
js
pop
jmp
orl
enter
ret
faddl
out
sarl
or
mov
lahf
pop
mov
sub
xor
mov
pop
inc
inc
xchg
push
push
add
cwtl
jge
std
and
sub
test
cmp
xchg
mov
jb
inc
jne
and
shll
jne
lret
pushf
les
scas
popf
ret
movsl
push
jo
popa
dec
js
adc
cmp
in
das
xor
mov
mulb
repz
lret
push
test
outsl
sbb
push
negb
and
test
push
test
pop
ficoms
dec
ds
addl
inc
mov
xor
movsl
mov
push
and
dec
jnp
cmpsl
sub
leave
bnd
inc
jg
sub
lods
icebp
xor
aaa
addl
cmp
iret
ljmp
mov
sub
mov
ds
add
jbe
in
mov
mov
sbb
das
in
pop
divl
pop
mov
mov
pop
es
lock
daa
incl
test
aam
dec
test
xchg
inc
jmp
shl
iret
fisttpll
addr16
jnp
or
js
inc
adc
nop
xchg
mov
mov
sbb
fisubrs
pop
mov
pop
mov
lods
popa
and
sbb
xlat
xlat
lds
out
add
clc
mov
mov
push
pop
add
sbb
push
insl
push
mov
add
and
cmc
jae
pop
adc
fwait
lahf
insb
cld
inc
lods
cmpsb
fbld
dec
ret
rorb
mov
or
into
int3
js
popa
fisubrl
loopne
ror
adc
and
and
aad
jg
ds
popa
push
or
pop
push
and
fcoms
xchg
cmp
sbb
aaa
cmp
das
into
scas
lret
inc
xchg
leave
push
cli
ret
arpl
jl
cwtl
enter
mov
pushf
sub
fldt
add
std
mov
repnz
gs
jmp
push
or
cmpsl
jns
popa
sbb
mov
cmpsb
orl
fsubr
insb
decl
sbb
cmp
ret
or
test
sbb
ret
sbb
add
xchg
pop
pop
add
pop
loopne
sbb
out
leave
jmp
or
test
loope
data16
cwtl
fadds
xor
xchg
xor
jmp
out
movsl
mov
sbbl
cwtl
cmp
jnp
and
dec
xchg
mov
loop
flds
cwtl
jmp
sub
and
shr
and
ret
nop
xlat
into
lock
lahf
lock
insb
aaa
stos
ds
fcomp
outsb
xor
daa
fnstenv
fdivp
inc
inc
inc
icebp
movsl
mov
xchg
cli
rol
cmp
js
xor
loope
into
out
out
jno
xor
leave
pop
outsl
out
sbb
movsl
fucomi
and
fiadds
jno
pop
je
cmpsl
sarl
lret
dec
mov
je
dec
outsl
sub
idiv
addr16
test
push
jge
mov
xchg
cmp
and
pop
lods
insl
xor
push
cld
mov
or
jmp
xor
mov
push
sub
lock
cwtl
dec
jb
push
lahf
ficomps
mov
sbb
jmp
lds
call
sbb
fs
cmp
movsb
fsubs
jecxz
mov
ja
dec
inc
push
inc
ds
xchg
add
lret
push
ret
lea
mov
pop
rolb
out
sbb
cmp
cmpsl
push
lret
xor
or
and
imull
pushf
rcrb
lret
pusha
mov
xchg
push
push
test
mov
mov
outsl
js
sub
test
push
subb
pop
pop
stc
test
and
pop
cmp
dec
and
mov
cli
negb
dec
xchg
nop
cmp
sbb
mov
stc
jecxz
repz
sub
pop
stos
lret
dec
and
int3
ljmp
rorl
mov
js
sbb
jecxz
popa
leave
popa
pop
ljmp
mov
push
pusha
sub
ss
or
and
and
push
push
pop
inc
shr
xor
test
adc
or
inc
pop
jb
nop
mov
test
movsb
movsl
shlb
mov
out
fisttpl
adcb
cmc
call
adc
fs
jg
jp
cld
inc
jnp
int3
cmpsb
cmpsb
pop
xchg
in
dec
adc
lahf
jno
mov
orl
sub
addr16
xor
and
rclb
push
cmp
jb
jnp
mov
fisttps
stos
popa
push
scas
inc
das
loope
clc
loop
jg
jb
inc
int
push
push
dec
inc
enter
les
cmp
mov
hlt
cli
jo
mov
cmpsl
fstps
lods
sti
mov
cmp
dec
mov
hlt
test
dec
lahf
pop
test
rclb
push
xor
pop
rcl
incb
and
cmp
pop
adc
insl
jle
push
jmp
mov
add
mov
ja
sub
dec
xor
push
or
js
push
sarb
in
ljmp
andl
push
and
cs
pop
lcall
cmc
lcall
je
lret
jno
jecxz
push
mov
sub
pop
or
jl
cld
pop
sbb
jno
xlat
loope
mov
inc
pop
fildll
outsl
lret
cmpb
or
in
push
mov
mov
dec
jb
jno
outsl
leave
mov
shll
mov
xchg
xchg
out
sub
pop
add
testb
jae
sbb
dec
jg
push
xor
lret
adc
xor
pop
push
pop
sbb
aad
stc
rolb
pop
dec
mov
jne
iret
insb
into
lea
rcll
cmp
loopne
test
repz
hlt
jecxz
jb
iret
dec
cwtl
fcompl
outsb
cmp
push
mov
adcb
pop
and
pop
cmp
push
imul
icebp
daa
pop
inc
mov
dec
es
stos
mov
lods
adc
sbb
mov
cmp
dec
shl
lds
xor
push
cld
in
pop
bound
pop
mov
pop
mov
mov
movsb
mov
aad
cmc
xchg
shl
mov
mov
mov
inc
cmp
add
scas
mov
andb
mov
mov
inc
mov
ficoms
or
mov
jl
cs
push
jecxz
or
mov
jmp
jmp
rcrl
jg
or
dec
jnp
sbbl
sahf
xchg
cmc
mov
push
movsl
inc
jg
inc
sbb
xchg
mov
and
stc
fwait
les
aas
dec
loop
mov
cmp
lahf
xor
push
jmp
jbe
cwtl
in
xor
sbb
shll
push
pop
mov
push
jns
inc
cmp
xor
jb
shll
jns
stos
test
mov
fsubrs
ds
rol
mov
testb
aas
mov
fwait
nop
adc
xorl
arpl
aad
and
lret
js
or
sub
pusha
push
xchg
int3
push
mov
and
imul
je
das
rcrb
push
mov
xchg
fcmove
ljmp
jmp
mov
push
int3
orb
dec
lcall
mov
mov
sbbl
aaa
sahf
dec
jb
out
outsl
and
add
lea
stos
lock
inc
hlt
xor
lahf
mov
ret
stos
push
ljmp
adc
test
jmp
mov
bnd
inc
cmc
mov
test
es
mov
push
pop
xchg
lea
jmp
or
stc
fsubrl
call
fildll
or
imul
cltd
adc
mov
addl
dec
fst
add
push
fwait
dec
jns
or
sbb
inc
push
xor
mulb
or
inc
dec
ret
sahf
cwtl
and
pop
inc
bound
push
repz
flds
jo
lods
xor
aad
pushf
sbb
es
adc
push
mov
mov
data16
mov
inc
ljmp
inc
negl
sbb
outsl
loop
lahf
mov
sbb
test
jno
rorl
dec
insb
pop
mov
fwait
out
pop
scas
arpl
in
push
mov
or
xor
cmp
lret
call
dec
jnp
imul
clc
and
loopne
cli
mov
jbe
lea
dec
clc
nop
mov
fld
cmp
xchg
add
jo
jno
cli
and
or
mov
cmp
mov
pop
movsb
cmp
hlt
aas
sub
inc
push
ss
scas
das
cmp
sti
push
and
je
addr16
or
data16
jnp
mov
lods
mov
bound
sub
imul
and
movsb
ljmp
icebp
add
xchg
out
cmp
std
fnstcw
popa
outsl
sbb
subl
add
shl
outsl
in
adc
cwtl
jne
sub
mov
jl
das
and
jle
shll
sbb
nop
sub
leave
mov
mov
inc
pop
sub
or
xchg
fistl
ret
xchg
sbb
popf
xchg
inc
outsb
out
xchg
sub
clc
jp
push
rcll
sub
add
inc
jae
out
pop
push
xor
rolb
inc
gs
jno
ret
add
push
int3
mov
repnz
shlb
jno
xor
push
rcrb
pop
inc
movsb
insb
pop
jb
push
das
mov
push
adc
push
lods
xchg
sti
cmp
jnp
in
jnp
cmc
js
fidivrs
orl
or
lcall
js
dec
cwtl
inc
xor
orl
adc
or
mov
jo
xor
mov
sub
rcrb
mov
mov
hlt
jne
add
inc
pop
cmp
xchg
mov
push
arpl
faddp
xor
fiaddl
lcall
cmc
loope
push
jge
icebp
push
fdivs
xor
js
repnz
ret
stos
aaa
sub
xor
shlb
xor
xchg
je
add
sbb
xor
lret
sarb
dec
sub
lock
movsl
xchg
mov
nop
add
and
daa
jge
inc
inc
aad
mov
stc
mov
inc
push
mov
lret
daa
push
adcl
cmp
pop
std
movsl
clc
outsb
adcb
sbb
pop
mov
adc
lret
push
xchg
mov
jne
adc
dec
jge
sets
xor
and
jne
mov
mov
mov
sub
add
add
test
lds
dec
xchg
bound
sahf
pop
ja
mov
push
imul
mov
mov
lock
adc
into
xchg
xor
popa
jl
fcom
dec
sarl
mov
fiadds
dec
pop
ret
loope
mov
jno
aam
adc
mov
adc
stc
stc
sbb
mov
sbb
inc
in
jp
adc
pop
adc
add
adc
hlt
xor
xchg
xchg
mov
in
mov
mov
mov
mov
inc
mov
test
stc
sub
push
out
sbb
mov
push
lret
fisubs
arpl
sbb
dec
adc
out
outsl
jbe
mov
inc
xchg
outsb
mov
cmp
or
inc
jecxz
sbb
rorb
pop
adc
repz
sub
jne
pop
push
jno
push
xchg
lret
std
sbb
or
dec
cmpsb
popa
popa
filds
fistpll
das
push
sbb
cmp
cmp
sub
stc
xchg
mov
push
aaa
xor
adc
dec
pop
neg
fdivrs
mov
add
ja
addr16
jnp
imul
js
sub
mov
xchg
fwait
dec
pop
data16
cmp
test
addr16
dec
negb
rol
mov
sbb
xchg
mov
xchg
mov
fldenv
dec
rcrb
outsb
push
xor
push
cmc
push
xor
out
sarl
and
adc
fistpll
xor
jecxz
pushf
add
xchg
add
clc
xchg
dec
mov
or
cs
add
sbb
and
pop
jne
call
dec
leave
enter
pop
push
out
fadds
and
es
cmp
or
out
addr16
scas
add
mov
ret
dec
xor
call
or
sub
add
sbb
test
and
mov
shlb
in
imul
push
push
xchg
adc
icebp
adcl
loope
cmp
lret
pop
push
or
addb
inc
sarl
out
sub
push
stc
or
add
shll
icebp
mov
pop
aam
lcall
icebp
pop
xor
sbb
jno
or
fadd
pop
mov
lcall
mov
and
inc
test
shrl
mov
and
pop
mov
pusha
jp
cmpsl
into
adc
sbb
ds
es
mov
sbb
call
jg
cmp
cmpsl
dec
or
fidivrs
jp
nop
mov
test
dec
inc
mov
fs
daa
adc
cwtl
cwtl
cmpsb
lret
pop
push
loopw
movsl
adc
mov
subl
into
cmc
dec
bound
das
jns
les
out
fisubs
xor
jmp
aaa
adc
xor
mov
jg
test
out
pusha
sub
add
cmp
mov
xor
pushf
pop
push
xor
push
jl
pop
int3
je
ret
mov
xor
xlat
mov
mov
scas
stos
cld
imul
sbb
sbb
test
push
xchg
int3
jbe
out
inc
push
mov
cltd
lahf
jo
cld
inc
dec
mov
out
fimull
and
or
je
inc
ljmp
lret
jle
pop
mov
push
xchg
gs
jp
test
pop
and
lea
dec
inc
mov
add
decb
push
add
push
nopl
and
insl
xchg
push
dec
rol
and
je
cmp
lods
mov
jge
ret
repnz
addr16
call
cwtl
out
loopne
push
sbb
mov
std
ret
or
add
in
inc
lods
test
sub
adc
mov
pop
or
call
inc
push
ffreep
pop
lret
and
jns
xchg
shll
push
mov
ret
jne
sub
push
adc
int
pusha
sbb
arpl
push
mov
jo
pushf
push
sub
shll
push
xor
rcrb
mov
repnz
inc
ss
add
movsb
jbe
cld
dec
sub
mov
ret
and
fs
shll
mov
gs
out
nop
or
mov
xchg
outsl
cmp
pop
inc
sub
pop
push
test
out
jno
xchg
cltd
jle
xchg
inc
das
in
xchg
les
mov
ds
icebp
das
add
lahf
loope
lahf
ror
and
hlt
mov
mov
data16
mov
push
test
lret
mov
mov
mov
movb
pusha
mov
aaa
call
data16
add
pop
ds
sub
ja
adc
mov
aam
movb
out
jae
pushf
mov
mov
add
xchg
mov
adc
xor
push
stos
pop
es
jno
jno
lret
lcall
sbb
fdivr
and
enter
aam
mov
imul
add
jb
and
mov
or
inc
bound
lods
aad
mov
and
push
jl
inc
or
and
lret
push
sub
push
leave
xor
inc
adc
cmp
cld
add
cmp
xchg
aaa
inc
mov
outsb
xor
call
shll
addb
mov
lock
xlat
mov
and
das
movsb
aad
inc
or
mov
pop
adc
xchg
cmp
xchg
jl
cmp
cmc
loopne
dec
stc
nop
pop
hlt
pop
js
ret
dec
lcall
mov
in
or
test
inc
fdivr
jp
loope
jns
in
push
pop
mov
cwtl
inc
mov
push
jecxz
test
cld
jle
pop
je
or
adc
iret
fadds
das
xchg
or
jns
enter
pop
and
adc
xor
clc
out
xchg
and
push
adcb
iret
shll
mov
repnz
mov
xlat
lret
xor
sub
lcall
iret
xchg
sub
add
icebp
out
cld
xchg
imul
lahf
inc
xchg
sub
sti
nop
mov
mov
ficoml
adc
pop
sti
fisttps
dec
sti
mov
test
mov
xchg
stc
dec
lret
inc
cmp
mull
sbb
inc
ficompl
aam
mov
sub
jb
idivb
cltd
push
jecxz
inc
int
cwtl
in
je
inc
outsb
inc
xor
dec
sub
cmpb
xchg
das
sbb
sub
icebp
push
ret
sub
jno
out
dec
xchg
test
fcomps
and
mov
xor
push
push
out
xor
loop
movsl
addr16
and
subps
enter
fs
fldt
cmpl
pushf
mov
jmp
xchg
mov
and
pop
lods
lds
sahf
popa
testl
icebp
mull
jge
jle
in
adc
pop
cli
sub
subl
jb
cmp
cmpsb
fwait
add
push
pop
adc
leave
lods
dec
xchg
and
push
pop
xor
imul
lea
pop
movsb
adc
jb
xor
call
pop
int3
inc
call
sbb
pop
aam
push
mov
fwait
mov
mov
mov
and
repnz
and
pop
push
sub
adc
adc
sti
mov
sbb
dec
leave
jg
mov
out
mov
addr16
jae
sub
add
jns
push
jne
cs
inc
lcall
stc
adc
push
nop
out
sbb
rcrb
push
xor
xor
cmp
push
jbe
fistpl
out
and
xchg
sbbb
or
aas
test
mov
lea
les
test
sbb
and
stos
mov
mov
dec
loop
mov
mov
fs
pop
sub
faddl
pusha
lahf
imul
or
pop
or
gs
mov
repz
cli
test
or
orb
cmp
nop
and
xchg
or
add
and
loope
xor
loop
scas
add
das
aaa
dec
les
jno
push
dec
ss
adc
clc
lret
xor
jns
loopne
test
dec
cs
jmp
pop
int3
jecxz
sub
pop
adc
cwtl
jnp
repnz
pop
push
adc
xor
in
jnp
js
push
dec
call
add
in
xchg
sub
rcrb
iret
shrb
sbb
jo
cmpsb
pusha
daa
xchg
shlb
stos
inc
push
ret
jbe
add
stos
or
out
jbe
ja
mov
jg
lods
out
jne
mov
xor
loop
mov
mov
arpl
adc
mov
cmpsb
cmp
ja
push
and
jg
js
mov
decb
push
popf
gs
mov
subb
imul
out
ja
jnp
in
dec
mov
arpl
es
sub
xchg
add
mov
outsb
push
xlat
mov
aad
xor
ds
dec
xor
inc
add
fs
push
xchg
inc
add
icebp
xchg
push
mulb
cmp
pop
stc
push
lea
mov
bound
jae
push
pop
mov
cs
rorb
cs
xchg
mov
mov
push
mov
dec
adc
push
dec
les
ret
cwtl
pop
into
aam
cs
stos
adc
iret
cmpsb
pop
jb
push
daa
xor
js
ret
data16
stos
fisttpl
inc
and
and
insb
jae
in
sub
push
not
cmp
jo
jle
negb
lcall
fisttps
jge
rcr
jp
sub
cmp
adc
cld
mov
pop
fildll
daa
movsb
sub
xor
lds
add
fnstsw
bswap
and
lret
ss
mov
adc
push
inc
push
mov
cmp
stos
add
push
mov
in
das
add
mov
jns
mov
mov
mov
or
sarb
lea
xor
loopne
idiv
stc
sbb
addr16
ret
ja
xor
or
sbb
fcompl
xchg
mov
movsb
in
out
push
imul
and
dec
out
addl
mov
lea
pushf
push
data16
inc
and
add
and
test
das
data16
lret
rcl
and
inc
mov
pop
mov
cld
lcall
xchg
mov
aaa
movsl
out
outsl
lret
jg
pushf
repnz
fisubs
sub
in
fldt
ja
popa
outsb
dec
and
sbb
out
cmpsl
dec
add
divl
mov
mov
sub
enter
or
add
adc
ja
dec
dec
cwtl
pop
xchg
add
mov
jle
add
rcr
rclb
fcmovb
bound
into
icebp
dec
pushf
iret
push
popf
or
or
and
add
xlat
pop
std
sbb
out
std
clc
lock
jmp
inc
outsl
push
xor
push
incb
pop
out
ljmp
cmp
pop
dec
mov
sbb
pop
imul
repz
adc
xor
jnp
xchg
jecxz
lret
jmp
pop
mov
cs
push
xchg
xor
add
push
push
shlb
sbb
xchg
mov
adc
pop
push
orb
pop
fwait
xchg
jns
sbb
enter
sbb
xor
mov
sbb
rolb
xor
push
shll
das
pop
sarb
lods
out
mov
int
int3
test
xchg
cs
inc
adcl
std
sub
rol
jmp
cmp
rcll
mov
mov
or
or
das
adc
das
pop
in
fcom
push
insl
inc
leave
ljmp
inc
fimull
adc
lea
inc
clc
mov
loope
sbb
fwait
pop
mov
in
in
sub
cltd
hlt
jb
push
jl
lahf
arpl
decb
xchg
mov
mov
aad
push
xor
xor
rcrl
ja
ja
int3
rcrl
cmp
pop
inc
mov
cmpsl
mov
lret
insb
add
cmp
xor
fcomp
cmc
sarl
mov
or
ljmp
lods
xchg
fistpll
sbb
push
call
adc
mov
fcmovbe
das
pop
adc
add
push
fbstp
aaa
ds
fwait
lods
mov
into
sub
sbb
scas
xor
test
pop
test
or
xchg
jl
insb
lcall
dec
pop
cmp
mov
insl
cwtl
pop
mov
lods
out
inc
mov
pop
pop
adc
mov
lods
mov
aaa
mov
les
rclb
leave
sub
push
mov
cmp
fbstp
sbb
out
or
in
sarb
mov
pop
mov
insl
sbb
pop
mov
cmc
out
int
mov
dec
xchg
nop
pop
inc
sbb
insl
out
dec
mov
subl
jg
into
repnz
xchg
push
jge
test
lods
es
cli
stos
xchg
shl
loop
out
inc
mov
sbb
xor
fnstsw
aad
clc
jle
ljmp
or
add
dec
mov
dec
inc
movsb
cmp
adc
push
iret
imul
or
je
ret
add
lahf
xchg
ror
pusha
or
js
cwtl
stos
scas
mov
jnp
xchg
fs
pop
xchg
inc
in
aaa
xchg
sub
add
sub
sbb
rcll
mov
mov
inc
mov
push
shlb
adc
dec
mov
shll
pop
and
repnz
imul
xor
mov
aaa
pop
call
cmpsl
addr16
xchg
xchg
xor
ljmp
das
and
xor
jg
jne
or
arpl
dec
mov
std
pop
lret
out
test
popf
mov
ds
mov
pop
pop
cmp
or
mov
pop
jmp
iret
daa
rorl
dec
pop
xor
jp
mov
sbb
cmp
xchg
negl
add
add
notl
das
adc
cli
andl
out
adc
popa
sbb
pop
lods
or
inc
or
adc
popa
mov
pop
jge
addr16
or
nop
in
iret
or
in
fsubr
mov
sahf
shlb
xlat
xchg
and
push
xchg
mov
ret
out
push
sub
mov
out
rcrb
fcomps
imul
into
lds
xchg
lahf
negl
jnp
inc
popf
arpl
subl
sbb
movsl
sub
add
lret
movsl
sbb
push
decb
mov
sub
or
fmulp
jle
ss
int3
leave
jb
add
cs
js
or
icebp
dec
adc
ret
jae
jg
mov
sbb
xchg
arpl
mov
js
iret
xchg
dec
mov
mov
jecxz
mov
xchg
call
insb
xchg
repz
or
mov
test
cmpsl
dec
fcmovb
cltd
push
xchg
fmuls
aam
popl
jnp
and
jns
jecxz
xchg
cmp
lcall
mov
stos
movsl
mov
cwtl
sbb
in
lea
add
inc
lea
addb
cmpb
xchg
roll
jnp
dec
mov
sbb
push
std
jbe
or
cmp
lock
je
push
mulb
push
push
cs
jge
pop
enter
pop
xchg
test
jno
xor
mov
mov
cmp
sbb
adc
repnz
arpl
mov
and
inc
cmc
jp
jg
cmp
or
and
push
fsts
lahf
clc
in
mov
movsb
mov
incb
jmp
cmp
pop
push
push
repz
push
dec
dec
sbb
jo
inc
adc
pop
push
lahf
dec
mov
or
cmpsb
cmpsl
cltd
data16
cs
sbbb
mov
jnp
lret
stc
rcrl
out
fists
mov
sbb
shll
out
inc
arpl
push
push
subb
adc
sub
push
add
pusha
sub
shlb
test
sahf
or
insl
and
xchg
sub
xchg
insb
ret
out
xchg
lock
stc
lea
mov
pushf
mov
cwtl
cmp
jno
dec
inc
push
mov
xor
jbe
and
mov
add
add
mov
pop
mov
and
lret
aaa
push
lcall
xchg
push
je
pop
mov
adc
fsub
pop
mov
cmpsl
bound
adc
cli
lods
movsl
add
inc
dec
bound
jle
xchg
pop
dec
outsb
mov
bound
test
enter
lea
push
imul
sub
mov
pop
out
mov
popa
or
stos
mov
add
jl
add
mov
xchg
in
inc
sub
dec
push
xchg
push
push
push
sbb
push
mov
mov
mov
popa
pushf
and
sub
cwtl
fwait
jecxz
dec
pusha
jmp
iret
add
pusha
add
testb
cmp
popa
push
cmpsl
lds
les
filds
cmpsb
jnp
aaa
adc
loop
incb
and
add
pop
cmp
xorb
mov
pop
jecxz
test
shlb
inc
call
mov
pop
in
stc
mov
btc
pop
stos
fwait
stos
and
mov
inc
cmp
pushf
mov
rorb
out
jp
jbe
add
and
ja
minps
mov
movd
ds
pop
pop
jg
hlt
lcall
jmp
cltd
aas
mov
adc
inc
or
mov
sahf
mov
sbb
mov
les
add
inc
leave
push
stos
jmp
jno
test
xlat
xor
in
pop
clc
push
sbb
fiaddl
notl
mov
pushf
clc
ds
mov
mov
ja
adc
xchg
stos
fmul
lods
mov
xor
lods
xchg
insl
inc
cld
icebp
in
pushf
xlat
dec
cmp
arpl
fcoms
stos
jg
sarb
sahf
mov
add
push
js
shr
and
and
test
aaa
cmp
int
add
test
fiaddl
scas
jmp
dec
jecxz
outsb
cli
mov
pop
mov
mov
lret
inc
popl
ss
pop
lock
cmp
lods
xchg
popa
sub
push
pop
out
pusha
sub
pushf
insl
shl
cmp
xchg
dec
pusha
int
lcall
and
mov
sbb
jmp
and
xchg
outsl
inc
movsb
hlt
or
jmp
pop
and
es
data16
call
shrb
fiaddl
cmpsb
xlat
adc
add
nop
stos
xlat
push
out
mov
jbe
mov
xchg
pop
push
mov
sub
out
call
mov
and
sbb
ja
or
fwait
ljmp
mov
jae
and
in
dec
mov
ret
fcoms
push
shll
test
sub
jl
pop
in
dec
pop
inc
leave
cmp
jge
xchg
cltd
lock
jne
cmc
push
xchg
dec
out
fs
outsl
jg
sbb
or
out
into
cld
dec
inc
push
mov
inc
xor
int
lcall
mov
pop
sbb
clc
sub
jle
and
and
xor
cmpsb
sub
popa
adc
or
es
sub
pop
xchg
adc
iret
data16
cmpsl
or
shll
xchg
test
mov
aam
fildll
stc
cmpb
dec
test
int3
idiv
xchg
mov
lret
movsb
xchg
pusha
lea
xor
jno
gs
push
inc
stc
inc
pop
out
iret
mov
pop
test
inc
sbb
push
pop
push
sub
push
jo
xlat
out
jae
sbb
into
sub
dec
test
adc
ret
sub
sbb
inc
scas
cld
pop
mov
cmp
das
leave
sbb
imul
mov
into
jae
idivl
in
shlb
cmc
imul
xchg
lret
jnp
or
xlat
sbb
aaa
jl
ja
lahf
jae
sahf
and
add
jns
outsb
dec
mull
jae
or
shll
js
push
shr
das
roll
mov
loop
cmp
sub
test
xlat
sub
push
dec
xor
jns
lock
icebp
xor
cltd
int3
fcompl
jns
loop
sub
scas
and
sbb
xchg
mov
cmp
sub
jae
xlat
sub
and
shll
lock
jb,pt
inc
loop
pusha
mov
pop
jl
loopne
movsb
fimull
icebp
inc
aam
mov
jl
icebp
lock
mov
sub
imul
lods
das
pushf
mov
jno
inc
fs
repz
cmp
aam
js
dec
jl
and
mov
mov
rcl
pop
cwtl
cmp
inc
add
pop
xchg
in
inc
push
int3
cmp
fucomp
add
or
jns
push
lcall
lods
lcall
lret
jnp
lock
push
out
popa
mov
stc
pop
in
mov
fsubs
nop
adc
lods
inc
or
cmp
adc
cmp
outsl
push
adc
mov
adc
div
cmp
fidivrl
xchg
push
or
ret
out
mov
and
mov
push
push
mov
std
sub
cltd
pop
xchg
cmpsb
and
cmp
add
in
jns
in
fistpll
jo
lea
pop
enter
xchg
adc
pop
imul
ret
or
decb
arpl
xlat
aas
int
adc
or
mov
or
push
adc
js
cmp
hlt
fs
pop
fdivl
dec
psrld
or
xor
test
sbb
je
cs
testl
shr
push
mov
cltd
faddl
pop
adc
lods
xor
gs
in
lds
inc
decw
add
push
and
call
mov
fldcw
pop
js
pop
xor
lret
test
stos
push
rcll
fwait
push
push
sub
or
mov
sub
fstl
icebp
fisubrs
daa
push
dec
bound
mov
insl
pop
mov
out
cltd
jno
popa
jmp
jo
dec
xlat
fucomip
and
sar
mov
jno
fmuls
adc
push
sbb
jb
jno
pop
fnstsw
popa
dec
repnz
mov
sub
pop
mov
std
fwait
pop
or
adc
mov
cmp
out
aaa
mov
inc
pusha
push
sbb
imul
inc
data16
psubq
pop
or
lock
ds
lahf
scas
pop
stc
inc
jl
dec
es
outsb
les
xchg
int
decl
addr16
leave
repnz
dec
loopne
out
sub
enter
leave
dec
xorb
jmp
mov
decb
int
jle
pop
repz
lcall
cmp
adc
sub
test
stc
jmp
adc
mov
popf
sub
subb
repz
xor
and
sub
pop
sahf
jle
repz
jge
mov
out
lock
cmc
sti
jle
fwait
add
call
loope
sahf
out
push
push
int3
pop
xor
xchg
mov
ret
mov
sbb
xor
leave
lds
mov
or
stos
pop
out
mov
dec
out
sub
lret
mov
pop
dec
loop
imul
in
add
dec
dec
iret
std
je
jl
jb
xorl
xchg
and
sbb
xchg
lcall
sbb
sbb
push
sbb
daa
in
jecxz
js
outsb
inc
mov
and
stos
mov
iret
jb
lret
pop
out
stc
xchg
ljmp
test
inc
rcrb
and
adc
sbb
dec
xchg
and
push
mov
fnsave
testl
lret
enter
cli
push
cmp
cmp
arpl
repz
sub
push
jo
cld
or
xchg
xchg
jle
push
pop
jp
lret
sahf
in
sbb
xchg
pop
push
jns
dec
cli
scas
icebp
or
dec
mov
push
pop
xorb
stc
rclb
or
popf
aad
sub
push
std
cld
into
jp
mov
or
jbe
adc
pcmpgtd
mov
mov
jno
lcall
scas
sahf
jno
mov
ja
repnz
jae
mov
add
cmp
fdivl
imul
and
sbb
add
repnz
sbb
dec
xchg
adc
shll
pop
mov
arpl
int3
ret
addl
movsl
ret
fiaddl
sahf
sbb
pusha
mov
cltd
clc
adc
adc
ja
decb
jecxz
mov
cmp
and
add
add
test
ds
dec
adc
int3
stc
sub
cmp
inc
roll
or
mov
pushf
stos
xchg
push
fnstcw
test
ss
pop
lahf
hlt
daa
or
pop
loope
add
mov
dec
in
addb
or
and
or
mov
dec
mov
mov
xchg
adc
or
pop
push
sub
lahf
push
cmp
adc
inc
lcall
push
jno
sahf
pusha
clc
out
sub
stos
push
out
ja
jp
in
test
pop
mov
push
dec
mov
dec
fldenv
addr16
lods
push
add
das
and
ret
cmp
inc
sbb
inc
icebp
push
in
cmp
aam
cmpb
add
cmp
addb
andb
dec
test
lock
subb
shrl
pop
subb
lock
ret
jmp
dec
add
adc
jno
push
enter
xlat
pop
shll
dec
sahf
sub
mov
aas
sbb
movb
adc
sub
mov
xchg
hlt
push
push
enter
xchg
cld
inc
xchg
mov
aad
shll
pop
out
and
xor
faddp
dec
mov
xchg
out
mov
jmp
xor
pop
stos
cmpsl
xor
fiadds
in
iret
jl
cltd
xor
shll
call
insb
mov
mov
pop
dec
pop
fnsave
jl
sub
ficomps
jne
stos
mov
dec
add
add
loope
inc
push
or
shlb
ljmp
ret
inc
jp
fucomp
mov
imul
and
cli
inc
test
bound
push
add
ljmp
and
push
xor
out
mov
divb
inc
sub
imul
lcall
cmpl
pop
cltd
jbe
pop
cmp
cmpsl
scas
pop
lcall
ret
inc
mov
add
mov
lret
push
mov
outsl
xor
pop
dec
imul
sbbl
xchg
jae
bound
mov
pop
jecxz
sbb
pop
sub
test
add
xor
bound
test
je
xchg
ret
dec
dec
xor
fs
xor
lcall
movsb
fwait
or
jo
sbb
fidivs
clc
cs
imul
fs
aas
push
and
xor
cld
ss
xchg
add
insl
je
repz
sbb
mov
add
idivl
xchg
mov
xchg
cmp
lock
pusha
loopne
jbe
jb,pt
dec
lret
je
xchg
fistpl
stc
adc
es
sub
xor
movsb
sbbl
mov
cmpsb
out
mov
jp
stc
data16
xchg
sub
insb
stc
mov
lock
out
scas
icebp
in
in
and
mov
pop
fwait
push
pop
or
dec
mov
fidivrl
mov
lahf
int3
mov
xor
xchg
imul
aaa
shl
dec
mov
xchg
sarb
mov
je
mov
aas
mov
int3
fbstp
inc
dec
ljmp
mov
inc
movsb
cmp
inc
into
push
insl
pop
call
aaa
insl
mov
pop
popf
push
push
fwait
popf
bound
mov
subb
xchg
mov
dec
mov
lods
push
pop
insl
xor
ja
jne
mov
pop
imul
es
jns
into
adc
jge
inc
jns
test
mov
and
xor
mov
imull
add
loope
call
mov
mov
mov
addr16
dec
push
xor
fsubl
sub
jp
push
outsb
cmp
outsb
xor
sahf
hlt
rep
loop
fs
stc
test
sub
push
or
pop
add
mov
loop
sahf
shld
fldcw
sti
inc
sarb
dec
lea
mov
jp
inc
outsb
push
and
xchg
xor
in
imul
mov
dec
popa
nop
add
ret
xchg
sarb
aas
in
enter
movsl
xchg
aad
aaa
mov
int3
bound
orb
outsb
push
dec
insb
inc
xchg
mov
jmp
xchg
popa
iret
lret
push
jg
leave
xor
bound
arpl
add
outsb
sbb
cli
sbb
push
mov
inc
xchg
lret
cmp
mov
es
insb
inc
dec
pop
scas
popf
int
fdivrl
cmpsl
das
mov
pop
mov
cmp
cmp
std
in
sub
fldt
dec
incl
bnd
stos
cs
cwtl
jecxz
dec
xor
inc
adc
pop
dec
pop
jg
rcrl
aaa
out
mov
outsb
xchg
or
insb
pop
call
aam
or
in
rolb
push
ljmp
repnz
push
hlt
arpl
lret
push
cmp
push
jno
and
push
mov
mov
push
fdivrl
nop
and
dec
sub
lcall
scas
or
leave
or
shl
ret
push
pop
inc
xchg
and
mov
cmpsb
push
pushf
mov
jge
lret
push
in
inc
and
data16
hlt
in
push
loop
push
cmp
and
push
cwtl
inc
mov
je
adc
fwait
push
mov
mov
sbb
repnz
iret
mov
push
xchg
ret
mov
cmp
lods
sbb
push
sbb
out
aad
int
sbb
ror
xchg
or
or
xchg
addr16
fwait
inc
cld
mov
dec
push
pop
sbb
stos
clc
dec
insl
aam
negb
das
cmpsb
xchg
dec
jo
lods
movb
popf
mov
sub
push
xor
mov
and
out
daa
mov
push
mov
fdiv
xchg
hlt
loop
addl
std
ds
mov
adc
mov
cmp
es
es
cld
pop
aas
add
loopne
int
xchg
dec
popa
adc
pop
sub
cmpsl
pop
jecxz
mov
or
iret
call
sub
push
lret
outsb
aam
cmp
xchg
out
dec
gs
add
fstl
xchg
mov
cmpsb
in
in
push
xchg
push
pop
aas
cld
or
add
pop
rcll
jl
lahf
scas
loopne
dec
sub
pop
cmp
hlt
out
cli
stos
sahf
clc
out
adc
dec
push
mov
mov
inc
inc
fldpi
or
cli
insl
dec
enter
adc
sbb
pop
popf
jnp
sbb
mov
inc
add
mov
xor
jae
stos
push
cmp
cs
mov
sbb
mov
outsl
cmpsb
jae
jmp
lods
mov
mov
dec
jae
cmp
not
jmp
inc
in
hlt
push
insl
jg
lret
xchg
mov
mov
sahf
fidivs
sub
or
dec
xchg
dec
jb
les
cwtl
lds
ljmp
jg
and
les
imul
les
mov
out
leave
mov
hlt
ljmp
enter
into
cli
iret
pop
loop
pusha
dec
lret
cmp
pop
mov
xor
push
fmulp
bnd
idivb
adc
dec
out
stos
sarl
cs
aas
and
pop
mov
sub
lret
sub
ljmp
push
push
psubd
scas
adc
xor
iret
std
pop
das
adc
adc
sub
jl
dec
mov
push
cmp
pop
cli
jnp
in
imul
cli
mov
fdivs
bound
add
ror
sub
scas
adc
mov
adc
add
nop
and
enter
or
pop
arpl
in
sbb
int
cltd
push
and
gs
sbb
ja
pop
notl
in
lods
sbb
adc
dec
movsl
and
cltd
jecxz
mov
daa
fucomp
outsb
fs
rcll
andb
sbb
push
jmp
pop
mov
xor
jl
inc
sahf
mov
fmull
xor
jl
sub
sbb
inc
adc
sbb
adc
repnz
andb
hlt
movsb
xchg
sub
ja
in
fimull
jae
sub
movl
xor
xor
push
into
sbb
aas
mov
cwtl
cmp
clc
into
popa
xor
jmp
pop
je
in
jg
and
loope
test
xor
and
sbb
xchg
lods
or
add
ds
xor
dec
pop
xchg
inc
sub
mov
je
inc
in
ret
add
mov
lods
dec
adcb
js
test
mov
out
and
xchg
loop
dec
jmp
pop
fucomip
or
pop
pop
out
adc
xlat
pop
outsb
ficoms
or
int3
cmp
test
sbb
data16
sbb
lods
dec
jmp
leave
in
out
call
in
pop
ret
push
jmp
adc
pusha
and
and
add
push
and
mov
add
scas
sub
test
push
cs
jae
fucom
dec
and
jl
push
scas
inc
push
call
test
out
iret
cmp
sbb
fistl
cmpsb
xchg
and
shrb
xlat
push
stc
and
mov
cmp
into
mov
ss
sbb
and
pop
or
mov
aad
test
in
or
stos
mov
leave
fldt
inc
loopne
sbb
jle
loope
loop
adc
pop
mov
dec
sbb
or
lods
jle
ret
sti
sbb
add
pop
push
mov
in
sbb
std
mov
cmp
xor
mov
pop
push
ret
adc
dec
and
mov
movsb
push
mov
inc
mov
xchg
mov
mov
iret
add
push
das
push
data16
sub
in
lcall
stc
mov
xor
mov
pop
idivl
xor
jne
out
pop
sub
sub
gs
stos
jp
jns
jae
jne
jns
cs
in
and
push
xchg
push
pusha
shrb
jg
adc
sub
cmp
lds
call
cwtl
lret
xchg
imul
sbb
mov
pop
sbbl
out
int3
push
push
shlb
fldt
popa
xchg
push
pop
sbb
sbb
ss
cltd
in
xchg
lcall
ficompl
scas
hlt
jg
lret
pop
stos
or
dec
and
dec
into
mov
sbb
insb
lahf
nop
jmp
pop
jbe
inc
adcl
pop
out
add
cmc
addl
test
dec
dec
lods
cmc
sub
xchg
rorl
mov
jno
adc
cmp
push
aam
gs
add
or
xor
in
shlb
or
jne
mov
jno
xlat
push
push
jge
int
xchg
rcr
or
subl
sahf
dec
int3
int3
in
out
hlt
enter
mov
inc
jp
dec
adc
es
dec
test
idivb
les
push
mov
cmp
push
call
dec
es
fbstp
bound
mov
or
rcrl
adc
xor
das
adc
sub
iret
imul
data16
sub
inc
adc
divl
add
sbb
jo
jmp
insb
or
cmp
std
push
push
push
test
scas
jecxz
jae
aaa
mov
pop
sbb
ret
out
jne
mov
push
pop
call
stc
jl
push
imul
mov
push
aad
jo
add
mov
cwtl
je
rorb
cli
arpl
mov
cli
push
xchg
pop
testb
adc
in
hlt
lahf
cs
pop
out
fdivrs
dec
pop
outsl
or
imul
rclb
add
dec
popf
cwtl
test
adc
fidivrs
aaa
inc
adc
xlat
adc
xor
out
sahf
fwait
add
test
or
in
scas
xchg
movsl
mov
test
mov
sub
jl
pop
pop
movsl
call
pushf
mov
rcll
cld
mov
add
lret
add
ja
into
inc
jmp
xor
mov
mov
shll
xor
inc
test
xchg
orb
cmpsl
mov
lock
loop
pushf
fwait
lds
outsb
pop
dec
out
mov
cwtl
mov
push
push
aas
cmp
sbb
aam
iret
and
dec
sub
xor
lods
dec
xor
push
sbb
arpl
or
test
mov
cmp
push
jecxz
das
jae
and
dec
xchg
out
pop
icebp
and
repz
repnz
fwait
add
xor
push
scas
and
outsb
jo
xchg
sbb
push
pop
add
xchg
pop
lcall
clc
sbb
mov
ror
cmp
jnp
push
clc
pop
outsb
fsubr
sub
subl
mov
cld
sti
xor
in
and
jge
fimull
inc
add
or
sti
xchg
es
pop
push
int
mov
ss
add
mov
mov
lea
int3
pop
fistpll
dec
inc
jns
jp
add
sub
icebp
xlat
jg
nop
stos
pop
daa
aad
pop
in
mov
or
nop
sub
xchg
lret
push
into
cld
test
cmp
xchg
jae
cmp
xor
in
adc
jnp
add
and
stos
in
push
cmc
idiv
inc
adc
pop
jae
xchg
pusha
xchg
stos
inc
test
pop
mov
sahf
jge
xor
aad
outsl
mov
lcall
xorb
mov
sbbl
out
int3
inc
sbb
test
sub
xlat
cli
mov
push
shlb
mov
lcall
loope
jae
out
mov
jnp
rclb
test
sbb
xlat
and
push
data16
fs
adc
jge
push
jb
mov
xchg
jns
or
leave
cmpb
fsubp
adc
or
lea
and
shrl
cmp
xlat
cs
xorl
lahf
mov
fcomps
pop
cltd
xor
dec
lcall
cmp
cmp
jns
lret
fstp
in
fidivrl
sbb
loope
or
xor
pop
popa
mov
mov
mov
sbbl
mov
clc
int
sub
hlt
jge
push
sti
pushf
mull
sbb
mov
pop
gs
pop
loop
repnz
dec
outsl
cmp
pop
js
inc
out
adc
cmp
sbb
adc
es
xchg
insb
rcrb
roll
stos
fbstp
lahf
adc
loope
cwtl
cmp
in
push
dec
xchg
sbb
mov
lret
and
inc
inc
push
fisttpl
loope
loop
loopne
and
or
pushaw
add
sbb
inc
adc
imul
arpl
dec
lds
xchg
xor
notb
xlat
sarl
pop
xchg
pop
test
lret
fldl
and
or
pop
je
push
fsubp
outsl
xor
icebp
int3
mov
ret
inc
int
pushf
push
mov
fcomps
aaa
in
mov
ja
mov
fldt
inc
push
pushl
sub
icebp
call
cltd
fisttpll
loop
test
push
add
xor
test
jnp
jb
and
add
mov
test
int3
cmp
or
fidivrs
or
repnz
leave
outsl
fs
aam
pusha
cmpsb
int
enter
pop
test
cmp
ficomps
clc
xchg
pop
lahf
xchg
rcrb
mov
sub
negb
jl
js
push
pop
sbb
out
pop
inc
mov
test
jl
js
test
fstps
shll
les
out
popf
sub
test
out
push
push
nop
test
sub
scas
xor
sub
je
and
pop
cmp
in
sub
incb
mul
inc
cli
stc
movsb
or
sub
jb
hlt
bound
inc
pop
or
out
movsb
cmpsb
out
aaa
xchg
xor
sub
imul
sub
into
xchg
test
out
jo
jnp
xchg
enter
mov
dec
xchg
stos
in
xor
scas
cmp
popa
hlt
cmp
arpl
rcrb
or
cs
dec
adc
inc
push
jmp
call
cmp
aas
test
hlt
data16
push
inc
outsl
and
lcall
lods
jle
fcmovbe
pop
rcll
lret
mov
jbe
mov
test
addb
jle
cmp
cltd
or
subb
test
cmpsb
cmp
mov
adc
cmp
clc
and
xchg
sub
push
adc
fstpl
pop
cld
repnz
sarb
xchg
mov
mov
pushf
scas
fdiv
and
push
inc
fbstp
out
add
xchg
add
sub
cli
cwtl
mov
jns,pn
js
mov
out
test
std
es
pop
fidivl
cmp
jecxz
or
decl
sub
aas
pop
mov
imul
jg
cmp
lea
int
mov
xchg
jp
ss
leave
pop
cmp
in
pop
pop
pushf
lcall
mov
shlb
mov
jno
int
sub
test
lret
mov
pop
inc
pushl
lret
lret
out
sub
rorl
dec
jae
fsubs
pop
add
imul
notl
insl
test
xchg
mov
test
sub
sub
add
ja
or
jle
loop
or
or
lds
or
add
cmpl
inc
mov
xor
loopne
pop
les
bound
push
sub
or
jl
out
lock
dec
rolb
stos
sbb
xchg
inc
pusha
scas
sub
xor
xchg
outsb
or
iret
push
adc
xchg
in
adc
push
xor
dec
xchg
cmc
xor
and
sbb
shr
add
pushf
dec
ljmp
xor
and
jecxz
or
mov
and
sub
in
mov
lods
insl
inc
lea
push
xor
xchg
pop
pop
xchg
mov
xor
jne
ljmp
dec
jbe
mov
es
iret
popa
les
jecxz
add
sbb
xor
or
addl
sbb
and
and
mov
movsl
dec
lret
inc
je
shlb
jb,pt
inc
sbb
std
movsb
xchg
dec
mov
addr16
mov
rcrb
cmpsl
add
dec
cli
jmp
xor
pop
mov
jge
sub
in
cmpsb
push
scas
stos
sub
out
enter
cmpsb
pop
cmp
mov
gs
inc
inc
loopne
invd
lods
xor
lds
push
repnz
push
push
test
lods
add
sbb
movsl
js
test
test
pop
imul
and
mov
movsl
ret
mov
fbld
push
pushf
xor
out
das
and
add
and
xchg
aas
test
jb
mov
lahf
sbb
adc
mov
mov
dec
xlat
sub
cmpsb
sbb
fstpt
pop
mov
jne
xchg
shll
outsb
xor
mov
sbb
and
in
sub
out
sub
push
lds
cltd
es
inc
mov
mov
sbb
cmpsb
dec
mov
xlat
sbb
out
outsb
cld
cmp
pop
test
inc
sti
ss
cld
dec
cmp
sbb
in
push
pop
mov
dec
outsb
aaa
out
movsb
dec
dec
stc
mov
cmp
andb
daa
xchg
xchg
sti
mov
and
push
adc
pop
out
dec
popf
dec
or
rcr
jne
mov
pop
push
push
xor
inc
out
jg
mov
loope
cmp
pop
in
mov
in
pop
fwait
pop
in
cmp
push
mov
in
inc
push
arpl
mov
sbb
xor
adc
cmp
push
repz
cltd
dec
lret
mov
div
aas
xchg
jno
add
pop
icebp
movq
mov
out
rclb
adc
in
loopne
cmp
loopne
adc
cmp
pop
mov
pop
pop
pop
insl
fwait
pusha
ret
mov
addb
pop
dec
and
xor
es
cwtl
and
outsb
mov
xchg
loopne
hlt
push
add
out
out
push
sar
sub
in
mov
xor
cmp
or
insb
push
pop
sub
test
dec
mov
pushf
mov
mov
sarl
jmp
adc
add
push
sub
lock
adc
bound
inc
sarb
int3
lret
mov
es
cmp
sti
push
or
test
dec
cmp
ret
jecxz
fdivp
in
mov
loop
mov
into
push
dec
add
mov
add
sbb
js
add
nop
aaa
mov
cmp
xor
scas
mov
stos
jbe
add
sahf
or
sbb
adc
shlb
imul
out
aaa
push
mov
mov
sbbl
lahf
jle
call
popa
add
push
xor
dec
addl
decl
xlat
fld
jl
nop
jmp
in
xchg
andb
pop
pop
scas
mov
imul
out
pop
lahf
pop
in
lds
fwait
cmpb
add
lock
adc
mov
cmpsb
sub
nop
xor
mov
xadd
sbb
jnp
insl
ljmp
mov
mov
xchg
negl
idivb
shlb
enter
mov
cmp
xor
or
stc
mov
cmp
loope
test
jle
mov
filds
icebp
mov
push
add
in
mov
sbb
sarl
jno
push
cmc
jg
mov
outsl
gs
pop
mov
in
rolb
cs
cmp
sub
inc
adc
not
pop
mov
or
xchg
xor
sub
test
xor
or
push
or
pop
loope
stc
into
cwtl
ret
mov
cmp
icebp
pop
mov
dec
gs
nop
stos
fidivrs
in
and
loop
lods
dec
aas
jnp
pop
and
das
inc
adc
or
mov
and
lahf
jns
dec
es
and
out
xchg
sbb
test
insb
lods
adc
stos
sbb
inc
inc
cmc
sbb
xchg
aam
lea
jo
sub
icebp
dec
daa
add
and
jnp
cmp
loop
in
cs
aas
mov
rcl
imul
jecxz
mov
cmp
notl
sub
push
addr16
bound
clc
xor
movsl
bound
pop
insb
mov
lcall
ss
in
jns
test
jo
dec
sbb
mov
imull
out
or
ret
int
fwait
repz
cmc
add
cmp
out
pop
xor
lods
bound
outsb
sub
mov
xor
dec
rorb
cmpsl
out
or
push
sti
dec
sbb
lret
lcall
fmuls
mov
enter
inc
xor
ja
or
adc
pop
jbe
add
ss
pusha
sbb
push
sub
js
mov
call
or
jmp
push
notb
aaa
sar
lds
popf
imul
push
lcall
xor
mov
lcall
outsb
xor
nop
pop
insl
pop
inc
in
rcl
fisubs
fs
in
pmulhw
movsb
roll
rcr
icebp
add
test
lcall
leave
sbb
sbb
xchg
add
les
mov
movb
and
adc
lea
push
sti
insl
xchg
sub
notl
fnstcw
pushf
mov
xchg
addr16
add
js
hlt
loop
nop
popf
lds
push
outsb
jo
nop
lds
mov
mov
or
repz
adc
rorb
dec
stos
cwtl
lahf
cmp
pusha
and
rorl
sub
sbb
lds
inc
xchg
cmp
or
dec
pop
or
ret
and
fistps
jecxz
cmp
pushl
sbb
je
jne
mov
mov
sbb
daa
stos
jns
add
mov
lret
sub
or
dec
repnz
into
mov
mov
imul
jno
loopne
mov
jp
stos
sbb
shl
sti
cmp
cmc
ficomps
and
inc
fidivl
jo
scas
fwait
mov
in
dec
xor
cwtl
pop
cmp
sahf
orb
inc
xchg
add
outsl
inc
ret
lock
sbb
jp
mov
popa
cltd
xchg
test
aaa
cmpsl
and
daa
das
jae
aaa
inc
add
repnz
out
mov
jae
cmp
insb
jo
inc
testb
and
or
fidivs
ret
stos
dec
std
aam
cmpsb
mov
fcoml
mov
das
push
pop
fwait
addl
aam
imul
mov
imul
adc
mov
pusha
pop
iret
mov
push
and
pop
enter
mov
push
loopw
incl
cmp
imul
enter
add
dec
test
ljmp
div
pop
cltd
mov
pop
sahf
cmp
aas
push
aam
adc
ret
xchg
inc
mov
bnd
test
sub
or
aad
in
jnp
pop
mov
jno
mov
xor
inc
stc
inc
xchg
mov
dec
popf
xor
popf
jnp
hlt
lea
xor
xchg
push
jbe
js
jns
inc
jb
scas
pushf
or
push
add
pop
xchg
ljmp
orb
xor
jmp
cmp
mov
push
xor
fcmovnu
cmp
flds
jns
in
jmp
fbstp
push
push
cwtl
ss
imul
aad
jbe
xchg
sti
out
adc
xor
cmpsb
xor
inc
ret
stc
rcrb
jns
sbb
stos
mov
repz
clc
movups
imul
int
dec
lock
loop
cmpsl
sub
inc
loopne
dec
test
and
xchg
or
push
lret
jge
pop
repnz
xchg
or
notl
or
out
jno
mov
mov
data16
movsl
bound
or
adc
lods
pop
xchg
pusha
popa
dec
test
lret
push
push
sub
sbb
cwtl
mov
loopne
aad
in
jns
ret
push
add
or
in
int3
stos
jnp
ljmp
and
xchg
movsl
mov
in
jo
jo
inc
test
pop
ja
sbbb
mov
scas
les
in
rcrb
cmp
fidivl
aam
into
mov
push
xchg
adc
js
push
jl,pt
and
je
ds
dec
push
jnp
mov
mov
icebp
in
pop
addl
pop
mov
xor
pusha
shlb
push
jmp
add
aaa
jb
dec
dec
dec
sub
inc
rcrl
testb
into
repz
sbb
or
add
inc
xchg
or
sbb
loope
jmp
push
shlb
sub
pop
test
leave
icebp
inc
dec
movsb
pop
sub
ror
jae
data16
int3
add
repnz
mov
push
jmp
add
adc
inc
push
jge
or
sbb
sbb
add
and
cltd
cmp
fs
sahf
sbb
jno
mov
cld
lcall
mov
insl
jmp
push
mov
int3
fnsave
in
push
and
test
sahf
inc
imul
dec
mov
cmc
test
jp
das
jmp
test
rcr
mov
and
xor
dec
enter
xor
adc
outsl
xchg
popa
xchg
mov
outsb
call
push
arpl
sarb
xor
cmp
ficompl
cmpl
xchg
mov
mov
mov
and
iret
inc
gs
add
fldl
cmpsl
iret
push
xchg
mov
nop
js
idivl
fsubl
subl
adc
testb
adc
mov
lods
aam
mov
fst
pushf
or
pop
int
popf
pop
jo
sbb
mov
pop
insb
into
scas
jae
int
cmp
jmp
and
sub
mov
sti
push
ds
js
shll
imul
cltd
cltd
sbb
push
scas
scas
add
jne
or
adc
xchg
inc
jns
mov
outsl
mov
fstl
sbb
inc
mov
jge
dec
sbb
arpl
fwait
pop
push
cmp
addr16
mov
out
sbb
pop
mov
fwait
or
and
lret
fnsave
sub
xor
out
cmp
add
arpl
ss
push
js
mov
iret
lea
mov
lock
pop
cmp
rcrb
inc
sbb
repz
sub
mov
and
pop
inc
pusha
xchg
lods
out
dec
cmp
in
dec
and
enter
and
sub
mov
add
fisttps
cmp
jnp
fs
jp
daa
inc
fs
pop
fisubs
mov
jmp
sub
cmp
cmp
jp
int
jno
add
xor
jne
call
repz
loopne
fstps
inc
insl
sar
add
outsb
or
filds
clc
sahf
inc
jae
adc
shrl
sub
cwtl
mov
inc
loopne
jecxz
out
mov
dec
test
lret
arpl
orb
les
cs
aaa
inc
cmp
in
jp
popf
into
adc
sbb
xor
cmp
xchg
mov
xchg
mov
mov
fs
sbb
fistpll
sar
push
mov
jns
push
frstor
push
cwtl
imul
aam
dec
pop
stc
popa
inc
test
sub
in
jns
lret
sub
lds
jecxz
mov
aad
mov
aam
sub
lock
in
adc
mov
imul
xor
xchg
leave
lret
scas
push
outsb
cmp
nop
fisttps
adc
push
sti
adc
das
mov
out
xorl
inc
and
mov
scas
add
jmp
xor
cmp
icebp
or
push
fwait
movsb
sub
or
sbb
add
lret
fdivrl
jno
scas
mull
sar
pop
or
mov
sub
divb
cmp
cwtl
or
lds
dec
push
xor
mov
xchg
xor
jnp
xchg
adc
mov
daa
sti
jge
fstpt
pop
sbb
push
cmp
push
cwtl
data16
lea
lds
dec
insb
xchg
sbb
fsubrl
das
out
sbb
daa
dec
push
cmp
push
mov
ljmp
push
mov
xchg
ja
stc
movsb
clc
cmpsl
and
ret
inc
cmpsl
mov
add
loopne
popf
psubsb
movsl
jbe
in
shrb
addr16
mov
outsl
inc
pop
or
out
faddl
stos
inc
std
cld
mov
or
xlat
and
out
cltd
fdiv
std
and
dec
sbb
pop
outsl
mov
pop
lock
pop
cmp
fidivs
jle
jne
cwtl
pusha
arpl
jne
inc
mov
or
inc
icebp
out
rolb
pop
mov
dec
stos
cmpsb
pop
add
fdivl
lret
push
stos
jnp
gs
mov
jp
mov
pushl
adc
pusha
push
or
test
dec
push
fists
dec
dec
aas
mov
les
out
and
iret
pcmpgtd
enter
inc
das
insb
jns
pusha
mov
push
std
icebp
dec
movsb
xchg
insl
stc
rcr
jg
cwtl
outsl
loop
dec
test
ds
ljmp
jp
clc
pop
stc
mov
ret
cmp
imul
shlb
fs
lcall
jmp
ss
aad
mov
sub
push
repz
add
int
mov
call
jbe
cmpsl
cmp
scas
cmpsl
dec
arpl
sub
or
fcmove
repz
int
ljmp
fldenv
ret
xor
push
jle
aas
sarl
out
xchg
out
insl
dec
out
subb
and
cmpsl
cltd
fists
test
sub
pop
adc
sub
inc
jnp
loopne
adc
mov
jp
dec
out
ljmp
sbb
lods
cmp
sub
inc
push
scas
pop
iret
pop
ss
xlat
cmp
sub
lea
cmp
jecxz
arpl
mov
pop
pop
cmpsb
mov
lret
bound
dec
mov
movsb
sub
das
mov
movsl
or
mov
inc
pushf
pop
in
ret
sti
cmp
rclb
test
fadds
insb
or
stos
mov
pushf
xor
mov
xlat
push
cld
lret
dec
stos
das
inc
fcmovnb
stos
sbb
test
adc
loope
lahf
call
jg
push
cmp
ret
cld
mov
jne
or
xlat
icebp
inc
xor
lret
test
mov
xor
shlb
rorb
scas
test
add
sbb
sbb
xor
das
mov
fnsave
rclb
push
out
jmp
push
xchg
and
mov
in
scas
push
popa
xor
lds
pop
fwait
xchg
adc
shlb
jo
fwait
xor
sub
out
int
lret
add
rolb
add
mov
pop
cmc
in
imull
pop
xchg
lret
sub
cmp
cltd
test
loopne
int3
adc
loopne
cld
aam
jl
sub
inc
or
nop
mov
pop
push
enter
fildll
cmp
jecxz
out
insb
insb
push
mov
mov
es
or
mov
jge
es
lcall
loop
mov
pop
jb
inc
pop
add
scas
xor
ljmp
lret
aaa
xchg
jb
loop
das
es
push
in
xor
jno
pop
cmp
adc
test
pop
mov
sbb
xor
dec
fwait
adc
sarb
jns
leave
adc
flds
fdivrs
lret
xchg
pushf
into
ret
cmp
mov
fisttpll
movsl
cwtl
cmpsl
xchg
cmp
xchg
cli
cli
sub
jp
inc
pop
xchg
lahf
frstor
movaps
push
loop
xlat
pop
mov
mov
fbstp
inc
pop
sbb
sub
mov
jle
sub
jmp
out
cmp
xchg
lock
mov
sub
mov
xchg
movb
or
lods
pop
and
jl
push
test
mov
inc
ftst
fstpl
push
lock
inc
mov
and
fmull
sub
xchg
xchg
and
ja
adc
popa
jl
sahf
jbe
test
int
jg
xchg
out
lea
dec
sbb
ret
and
mov
pop
shr
fcomps
in
pop
mov
xchg
pop
cmp
mov
adc
rolb
and
int3
push
fildl
repz
outsl
out
popa
mov
mov
mov
rorb
inc
pop
ds
ret
jo
shlb
pusha
test
lock
movb
pop
iret
sub
mov
sbb
das
mov
jnp
sub
imul
adc
das
inc
loopne
cmp
sbb
in
data16
cltd
mov
cmc
add
call
cmpsb
inc
mov
pusha
sub
xchg
jle
add
dec
test
mov
imul
jp
aam
decl
fxch
into
xchg
sbb
jge
add
ss
cli
adc
inc
outsl
aaa
repnz
jecxz
mov
push
stc
jne
inc
fwait
notb
leave
mov
and
sub
test
pop
pop
repz
mov
or
test
cmp
cwtl
mov
inc
xlat
into
mov
pop
mov
repz
lahf
xor
sub
inc
in
add
shll
jns
fisttpl
xlat
bound
jl
test
cmp
imul
movl
pop
int3
sbb
ds
sub
cmp
lahf
jp
mov
fadds
dec
or
fidivs
pop
mov
ficoms
or
jp
adc
xchg
nop
xchg
lods
adc
push
add
lods
cld
ret
ss
fistpl
xor
adc
xchg
cmp
dec
mov
mov
outsl
test
popf
jmp
out
icebp
shlb
andl
ficoml
adc
cwtl
pop
call
shrb
rclb
jbe
in
or
cmp
and
jg
or
xchg
in
pop
mov
sub
cmp
jbe
lods
fs
cmp
das
rcrb
add
stos
leave
push
pop
xor
clc
cmpl
insb
sub
rol
std
ret
popf
mov
inc
call
test
pop
test
addr16
and
cs
out
sbb
arpl
or
clc
sub
inc
jae
fs
dec
xor
in
in
and
aam
mov
push
scas
ret
bnd
mov
xchg
popf
push
inc
push
mov
push
pop
xor
mov
jg
push
fs
imul
dec
jmp
rorl
pop
mov
inc
ud0
or
popf
sti
es
sbb
xchg
adc
mov
ljmp
fbld
inc
cli
incl
sbb
repz
pop
into
mov
sub
sbb
pop
sub
hlt
test
loope
cmp
pop
in
outsl
js
loopne
dec
ja
inc
mov
cmpsl
sar
insl
daa
pop
push
jbe
int
aam
imul
dec
or
sahf
mov
ds
push
jns
sbb
cltd
push
test
lcall
lock
add
gs
stos
lods
add
rorl
arpl
hlt
fnstsw
mov
push
fcmovnbe
pop
mov
mov
fs
mov
mov
int
and
sbb
push
test
ljmp
ret
push
stos
lret
je
dec
cld
mov
icebp
mov
leave
push
fs
jno
mov
xor
pop
sbb
jnp
adcb
jnp
fisttps
push
mov
in
jo
sub
push
rolb
fnstcw
cmp
popa
lcall
out
push
xchg
cmp
je
test
mov
and
add
test
data16
lcall
outsb
sub
mov
sub
scas
cli
xlat
loope
xchg
sub
push
fildll
iret
cmp
lret
scas
imul
inc
lcall
in
mov
xor
sbb
cmp
xchg
data16
pop
clc
leave
fbstp
mov
bnd
push
sbb
inc
sbb
rolb
mov
and
inc
ficompl
les
sub
lret
mov
jns
int
push
sbb
dec
pop
xor
push
mov
stc
jmp
xor
out
cmpl
pop
out
mov
popa
data16
addr16
shrl
inc
or
adc
cltd
jle
push
sbb
je
lock
cmc
movsl
sbb
test
scas
lea
push
outsb
pushf
stc
out
insl
add
in
mov
dec
push
adc
sub
mov
lods
xchg
xchg
push
push
adc
lods
inc
mov
jle
cmpsb
imul
lret
mov
adc
cs
jbe
xchg
dec
shrb
lock
pop
cmpsl
lods
mov
lds
fwait
subb
lahf
add
inc
push
shlb
inc
bound
adc
lret
xchg
sub
stos
or
ret
pop
popa
sbb
push
mov
xchg
dec
stc
mov
or
jge
and
scas
push
mov
arpl
sbb
out
jns
mov
icebp
jp
sub
sbb
aaa
sbb
and
jge
aad
in
mov
jno,pn
sub
int3
or
outsb
pop
lret
xor
mov
je
and
dec
das
dec
mov
lret
addr16
mov
xor
fcmovb
mov
push
in
popf
repnz
mov
mov
out
sbb
addb
cmp
mov
mov
jne
jb
jp
scas
xchg
add
cld
cmp
inc
xor
testb
daa
dec
call
jns
xchg
adc
imul
jp
jb
pop
scas
lods
inc
adc
aaa
test
fcomps
inc
aas
mov
pusha
pop
jbe
sbb
push
mov
ja
jb
loope
and
hlt
icebp
pop
aaa
cmp
into
cmp
dec
fstl
popf
leave
xor
fnsave
pop
fdivs
pusha
mov
cmpsl
dec
xchg
pop
cmp
ss
fwait
push
mov
fs
fwait
scas
ljmp
and
les
xchg
jg
or
pop
pop
adc
mov
or
outsl
jno
pushf
outsl
scas
ret
sub
stos
dec
xchg
lret
bound
mov
hlt
add
fistps
scas
sub
sbb
push
push
mov
pop
jg
test
jmp
test
pop
outsb
or
mov
pop
push
cmpsb
movsl
sub
pop
xor
stos
ja
sti
sahf
pop
sub
repz
cmp
pop
add
in
movsb
sbb
push
cltd
or
aas
ret
test
adc
pop
repnz
jo
daa
pop
pusha
pop
xlat
fidivl
call
rcll
xchg
cmp
je
icebp
mov
pushf
sbb
test
sub
xor
outsl
or
fldcw
popa
sbb
pushf
mull
dec
cmp
cwtl
in
or
es
adc
dec
loop
push
mov
pop
or
lods
daa
push
aaa
cmp
in
jnp
fnstenv
or
xchg
outsb
cld
jns
sub
or
mov
inc
sbb
aas
les
stos
inc
sbb
cmp
pop
insb
movsl
sub
push
add
dec
inc
adc
or
inc
inc
sti
test
loop
shll
lea
ficomps
dec
pop
adc
cmp
repnz
jg
mov
xchg
pop
mov
sarl
iret
imul
int
shr
and
mov
lock
and
lcall
add
fldlg2
fsubl
mov
pop
aam
sbb
jg
movsb
fstl
insl
aas
or
pusha
xlat
shlb
mov
xchg
adc
jns
nop
mov
pop
insb
sti
negl
int
fistpll
je
jl
add
loopne
testb
or
clc
sbb
mov
sbb
sub
push
push
gs
or
call
popf
jg
jecxz
cmp
mov
adc
xor
js
std
xor
aas
pop
cwtl
jg
mov
mov
movsb
es
and
mov
ja
add
mov
mov
push
jno
push
shl
xchg
adc
lods
pushf
mov
adc
lea
movsb
jns
sar
ja
shl
xchg
mov
jns
lahf
test
std
pop
out
adc
inc
jnp
or
mov
fwait
inc
push
imul
or
jne
add
dec
shlb
dec
shll
or
inc
jp
jge
inc
subl
push
divl
cli
sub
adc
sub
jo
xchg
pop
stc
xor
cmp
jg
cmp
xor
fldenv
dec
mov
cmpsb
xor
push
jmp
lahf
loope
pop
rolb
or
js
mov
adc
mov
in
add
test
insl
jbe
xlat
pop
or
xchg
fmull
and
add
push
push
adc
adc
scas
mov
call
and
sti
stos
push
dec
and
mov
jbe
icebp
jnp
sub
sub
ljmp
sub
cs
jb
adc
loopne
stc
pop
add
inc
into
sar
jnp
xor
jle
imul
lahf
mov
in
mov
pusha
mov
cwtl
push
stc
fcoms
push
lods
mov
loope
or
xchg
xor
lea
sbb
nop
xor
lahf
testl
sbb
mov
dec
stos
dec
jp
xchg
iret
icebp
or
dec
mov
cmp
mov
xor
in
sub
xor
lods
push
cltd
cmp
jns
add
mov
sub
mov
pop
mov
cmc
push
pop
and
popf
insb
xor
cmp
scas
rcrb
or
repz
rcll
lock
or
or
and
fcmove
xor
mov
stos
cwtl
into
add
mov
mov
jno
repnz
cmp
add
aam
and
mov
inc
xchg
fdivrl
push
or
movsl
and
es
pop
sub
xor
lret
cmp
jg
loopne
imul
jl
jecxz
pop
cli
or
dec
cmp
sti
iret
inc
sub
or
push
jne
add
notl
popa
ds
in
push
jmp
mov
into
lahf
aam
mov
cmp
test
addr16
fildll
and
pop
inc
je
sti
dec
adc
shrl
adc
cmp
lret
shl
dec
cwtl
jle
scas
inc
cmp
or
mov
cmpb
jmp
mov
scas
jle
mov
out
mov
movsl
hlt
lds
lret
outsl
or
pop
cld
imul
mov
xchg
pop
out
xchg
or
dec
aad
scas
mul
fwait
cli
test
ss
mov
jmp
jp
sti
push
and
add
and
cmc
sti
and
jbe
mov
loopne
mov
loope
adc
into
jae
jbe
bound
flds
adc
in
int
jecxz
adc
mov
aaa
mov
movsl
mov
cld
pop
mov
xchg
test
clc
imul
fs
or
dec
movsl
pop
push
push
or
fucomp
test
and
xchg
scas
fwait
cmp
enter
push
mov
insl
out
dec
pop
out
xchg
insl
mov
shl
push
push
call
stc
mov
cmp
es
divl
je
daa
inc
add
mov
fildll
and
adc
cmp
jl
pop
sub
cmpsb
xchg
fidivs
aad
imul
ss
dec
jae
aad
fpatan
stc
mov
mov
ret
jle
push
pop
pop
in
cmp
aad
shl
notb
arpl
sub
xchg
cmp
lock
push
js
push
cmc
adc
xchg
push
testb
mov
xchg
cli
lret
sbb
lods
add
sti
loopne
jnp
xorl
movsb
sub
stc
mov
cmpsl
pop
mov
shlb
pop
cmp
js
lods
repz
int
lods
xlat
scas
out
cmp
mov
imul
hlt
cld
push
jmp
ss
sarb
addl
je
stos
lret
std
cli
mov
shrl
push
sub
cltd
icebp
add
aas
ds
test
bound
pop
mov
jbe
adcl
leave
lcall
mov
mov
mov
sub
xor
lahf
push
in
pop
mov
mov
test
jmp
inc
pop
or
push
aam
xor
xchg
dec
fs
push
cltd
xor
mov
inc
jl
call
pop
pushf
leave
fnstcw
outsb
xchg
pop
mov
xlat
adc
shlb
mov
mov
dec
sub
adc
pop
int3
imull
roll
xor
andl
mov
aad
scas
xlat
adc
lods
dec
shrl
rcrw
inc
inc
movsb
cmp
jns
es
xlat
mov
lret
ret
sbb
test
push
adc
push
push
jbe
lds
loope
mov
lahf
jp
jp
inc
pop
imul
xchg
mov
call
mov
pop
repz
icebp
sub
xor
mov
insb
dec
inc
mov
push
int
data16
mov
je
and
sbb
push
mov
add
add
jb
hlt
mov
jecxz
jl
repz
inc
push
stos
cmp
sbb
outsl
mov
xchg
or
push
inc
les
fcomi
addr16
imul
inc
push
ret
cmpsb
mov
xchg
movsb
in
pushf
test
jecxz
out
xchg
mov
subl
fwait
bound
pop
imul
xor
jmp
mov
mov
sbb
lea
das
loop
sub
mov
lock
sub
ljmp
push
dec
aas
mov
inc
mov
lods
or
int3
loop
repnz
cmp
lods
dec
push
dec
mov
pop
dec
loopne
push
cmc
and
sub
pop
or
pop
add
dec
arpl
ljmp
pop
xchg
jne
cvtdq2ps
xchg
push
jne
fdivl
in
or
pop
xchg
cmp
or
jb
das
jmp
dec
inc
fwait
mov
push
cmp
mov
and
jno
stos
xchg
and
and
or
loopne
cmp
mov
pop
mov
jl
les
dec
imul
inc
xchg
lret
mov
dec
sti
mov
icebp
inc
movsb
xor
lods
sbb
add
and
scas
mov
jnp
sub
cwtl
xchg
adc
xor
xchg
pushf
mov
push
loope
push
jecxz
aas
sbb
inc
jp
mov
dec
mov
inc
mov
and
les
adc
mov
sbb
insb
push
add
pop
mov
sub
mov
adc
xorl
js
popa
and
cmc
movsl
mov
mov
xchg
jg
adc
xchg
fbstp
inc
out
sbb
rcll
push
xor
out
fdivrl
dec
leave
jno
or
cltd
sbb
movsl
xchg
adc
scas
and
mov
inc
in
mov
fwait
loop
xor
xchg
mov
cmc
les
ds
ja
int
int
push
xchg
lods
inc
and
adc
sbb
pop
adc
xchg
fstps
and
loope
jg
popf
mov
imul
repz
and
xor
into
dec
sbb
ret
add
loope
lds
inc
mov
je
sbb
lea
jecxz
pop
movsb
stos
movsb
out
push
fistps
sub
gs
adc
out
and
roll
sbb
xorl
pusha
test
pusha
ret
addr16
mov
into
sbb
pop
push
rorb
dec
repz
movsb
pop
daa
push
mov
inc
lds
pop
jbe
push
stos
jae
mov
or
popa
mov
push
js
cmpsl
shrb
jp
mov
rcrb
movsl
pop
dec
lret
popf
xchg
jl
jg
test
adc
mov
mov
pushl
pop
xchg
ret
sti
mov
xor
jo
jl
int3
call
jnp
cmc
imul
inc
imul
in
jo
pop
shl
inc
or
xchg
cwtl
push
das
cmp
outsl
push
pop
mov
jg
jns
push
or
dec
cmc
sar
lea
in
cmovbe
jo
mov
movsb
cmpsl
mov
int3
fstpl
fldt
pop
sbb
in
fisttps
jge
pop
fisttpll
daa
lahf
ds
rcrl
outsb
push
pop
pop
pop
push
mov
stc
pop
dec
loop
in
aad
pushf
lds
push
divb
add
icebp
xchg
lods
xchg
cltd
in
lret
cwtl
daa
xchg
xor
cmp
lods
test
jae
insb
mov
ss
js
sub
cli
lea
mov
pusha
cli
sahf
xlat
stc
push
rcll
test
dec
and
out
sbb
inc
and
scas
push
inc
dec
xor
scas
mov
pusha
push
jecxz
cmp
adc
lods
js
mov
ret
ja
dec
and
pusha
jnp
jle
push
mov
cwtl
iret
xchg
lods
pop
aad
jp
dec
pop
fstpt
jle
adc
push
fcmovu
mov
bound
mov
and
inc
xchg
pop
jns
sub
sub
iret
js
xchg
fnsave
lahf
add
lock
pop
lock
aaa
add
mov
dec
push
dec
aam
stc
js
mov
sub
mov
repnz
inc
mov
loopne
stos
out
ljmp
movsb
in
jo
adc
push
push
or
cld
in
cmpsb
out
dec
ret
lret
mov
rcll
fisubs
dec
and
or
repnz
add
jle
ljmp
adc
aas
das
sub
xchg
cli
leave
dec
or
or
fstpt
movsl
cwtl
lods
aaa
jno
lcall
ret
sub
cmpsl
jl
fs
call
sub
fwait
shll
test
jae
mov
xchg
fiadds
mov
out
pop
push
outsl
fsub
dec
sti
sbb
and
lahf
icebp
adc
mov
icebp
aad
inc
stc
sub
ja
pop
push
test
lahf
or
xlat
push
pusha
mov
in
jnp
sbb
adc
mov
ja
push
xlat
leave
xor
or
or
lock
andb
adc
xchg
or
pusha
mov
cmpsl
loope
loopne
pop
insb
xor
call
xchg
sbb
arpl
jbe
cmp
addb
sub
cmp
fdiv
dec
incb
inc
ds
mov
xchg
sub
aam
xor
ret
mov
push
cmpsl
mov
sbb
pop
pop
imul
mov
pop
imul
sti
mov
pop
and
stos
enter
lea
push
mov
js
add
push
add
icebp
jmp
and
push
xor
sahf
pop
std
mov
xor
mov
xchg
xor
ret
xlat
decl
inc
les
cmp
cmp
ds
xchg
xchg
mov
add
lods
mov
aad
xchg
xchg
mov
mov
and
out
sbb
push
jle
arpl
loope
jmp
testl
dec
mov
xchg
push
and
adc
cwtl
sbb
jb
mov
shl
xor
mov
pop
and
and
ds
cmpb
lods
jg
pop
or
inc
leave
xchg
sbb
int3
out
lds
jo
sbb
sub
loop
mov
je
test
lods
jns
cmpsl
mov
adc
sub
or
das
jae
clc
sarl
or
xchg
inc
iret
icebp
push
lock
jp
add
jne
lock
cmc
int3
mov
push
aad
add
cmc
mov
adc
xchg
sub
sub
fcomps
mov
in
add
mov
ljmp
icebp
cli
lret
test
xlat
mov
sub
cmp
sbb
mov
lods
jecxz
fs
push
pop
xchg
cwtl
popf
push
hlt
mov
add
push
sahf
loop
in
in
test
in
add
mov
repz
xor
in
mov
and
sahf
mov
js
or
fwait
insl
xorb
push
add
pop
mov
sub
scas
mov
dec
add
cmc
pusha
xchg
xchg
sbb
in
stc
mov
scas
cltd
addr16
lret
mov
dec
jecxz
call
enter
or
daa
jmp
mov
dec
bound
outsl
and
jmp
and
and
fstpl
add
cmp
jno
hlt
lea
ljmp
movlps
out
fs
sahf
out
cmp
push
hlt
xchg
js
addl
ds
fistpl
lea
stos
lea
rolb
aad
xchg
jne
xchg
inc
hlt
or
test
ljmp
or
or
and
clc
cltd
ljmp
test
jge
pushf
out
lods
icebp
outsb
pop
push
nop
add
add
cmp
shlb
cmp
sub
std
aaa
xchg
pusha
inc
addr16
pop
repz
pop
push
shr
into
xor
fildll
fcoml
mov
xor
into
push
lret
aaa
scas
movsl
cmpsl
mov
add
pop
jo
js
shlb
xchg
dec
adc
sbb
adc
push
xor
jbe
cld
fidivl
fxch
inc
push
lcall
jb
scas
push
imul
ds
aas
imul
fldl2e
into
dec
mov
sub
mov
aaa
ss
ficomps
push
cli
aaa
jnp
cli
shlb
icebp
and
push
rorl
imul
call
adc
jo
out
aam
les
gs
jmp
and
inc
pinsrw
push
pop
push
cmpsl
js
jle
xor
ljmp
push
add
outsl
jge
xchg
mov
inc
push
dec
sub
cmp
jmp
dec
jg
push
cmp
mov
test
movsb
adc
xor
jnp
lock
lds
xor
jecxz
and
sub
mov
rorl
lcall
xor
loop
orl
loop
push
pop
xchg
shl
push
cmpsb
jo
test
sbb
cwtl
adc
adcl
inc
cmp
sbb
out
sub
repnz
es
dec
popf
jecxz
or
or
pand
pop
xor
in
sub
mov
test
orl
push
cmp
sbb
cmc
jbe
rcr
adc
int3
jmp
shll
imul
xor
fdivr
sbb
js
cmc
sbb
sbb
ret
lods
xlat
xchg
mov
inc
mov
sbb
adc
and
orb
in
es
or
dec
push
imul
xor
popf
sub
jae
in
out
add
cmp
pop
addr16
mov
call
dec
fs
jg
loopne
ret
and
or
adc
lock
adc
lock
dec
cmpsb
int
inc
xchg
aas
pop
repnz
pushf
stos
test
popl
sub
insl
push
sub
xchg
dec
addr16
add
sub
insl
popa
mov
lock
sbb
jns
shrl
sbb
mov
shl
lods
mov
cmp
pop
inc
or
sahf
aaa
xor
mov
inc
std
mov
or
pusha
push
das
pop
add
and
xchg
scas
fistps
push
lret
sti
xchg
test
in
popa
enter
add
pop
mov
mov
xchg
pushf
add
pop
nop
pop
imul
sbb
rolb
loop
pusha
push
rclb
cmpsb
cmp
call
xor
push
push
hlt
scas
mov
cmc
insb
insl
xchg
leave
out
lock
andl
xchg
cmp
sbb
aam
loope
mov
inc
xor
mov
add
jmp
adc
mov
dec
or
das
fadds
or
xchg
in
in
pushf
and
add
iret
insb
js
int3
and
or
js
cltd
and
addr16
xchg
iret
and
add
jae
mov
sbb
jmp
push
in
data16
cmp
jo
push
mov
cld
xchg
mov
xchg
outsl
test
mov
faddp
in
push
fcomps
cmp
inc
pusha
cmpsb
sahf
divb
cmp
push
ffreep
xchg
clc
sub
jbe
sub
fchs
mov
sub
xchg
in
lcall
enter
mov
movsb
mov
xlat
mov
testl
or
dec
icebp
cmp
fnsetpm(287
push
or
and
fnstcw
mov
mov
in
mov
mov
sbb
shl
pop
sarl
mov
pop
mov
rcrl
pop
orl
in
inc
pop
roll
xor
pushw
mov
fdivs
sbb
data16
cmpsl
or
and
cld
daa
mov
mov
in
shll
and
adc
push
mov
scas
cmp
in
xor
and
cmp
add
fcmovu
pop
aad
insb
or
add
aam
outsb
test
lock
pop
test
movb
xchg
mov
sti
and
std
push
mov
inc
hlt
mov
xchg
pop
jl
add
popa
pusha
mov
xchg
repnz
push
xchg
dec
push
mov
push
cmp
xlat
xchg
test
or
adc
test
and
ror
sbb
mov
add
das
cwtl
xor
xor
mov
cmpsb
fists
jne
jae
or
pop
push
push
arpl
pop
addr16
data16
je
loopne
xchg
sbb
mov
mov
pop
icebp
shlb
mov
push
out
sbb
roll
mov
test
mov
les
scas
or
mov
or
in
outsl
imul
scas
popf
fbstp
mov
mov
lods
in
sub
mov
int3
out
mov
inc
pop
push
insl
test
das
or
xor
add
xchg
pop
mov
push
out
sbb
mov
ljmp
xchg
stos
and
in
movsl
push
sbb
jmp
mov
dec
push
mov
cld
imul
test
shrb
out
and
int
mov
hlt
cmp
loopne
sub
add
mov
imul
fimull
inc
std
test
jbe
cli
xor
lret
adc
and
pop
sub
dec
testb
mov
dec
ds
adc
rol
mov
aaa
mov
xor
sub
stos
std
gs
sbb
pop
xchg
cmpsl
imul
pop
lret
inc
movsb
push
mov
xchg
scas
lock
in
mov
addr16
lea
lds
mov
push
test
lds
cmpl
test
push
into
fidivrs
xchg
cmp
lret
jnp
dec
sbb
mov
xchg
mov
sub
xor
pop
cmp
adc
imul
test
idivb
repnz
mov
call
add
mov
call
int3
inc
adc
mov
xchg
jne
mov
out
xchg
mov
or
es
or
fcoml
sbb
push
add
adc
inc
push
sub
movsb
mov
into
sub
dec
test
lea
bnd
repnz
mov
les
mov
mov
pop
push
cmpsb
cmp
sbb
fcomps
and
or
jo
nop
ret
jae
lods
adc
adc
sahf
ret
sbb
mov
into
mov
rol
cmc
jecxz
mov
sti
imul
les
repz
addl
rcll
leave
pop
cmp
aad
cmp
jl
cmp
push
sahf
mov
sbb
lods
iret
ljmp
int
cmp
js
hlt
je
xorb
mov
bound
jle
push
pop
push
mov
arpl
movsl
call
push
mov
push
mull
cmp
xchg
push
pop
fwait
mov
add
inc
outsl
inc
jp
xchg
les
arpl
mov
mov
es
enter
sub
cwtl
cmp
mov
repnz
adcb
test
data16
mov
add
aas
jns
stc
test
mov
test
dec
leave
outsl
aad
add
dec
in
pop
movsb
dec
outsb
aad
out
test
movsl
and
lods
pusha
shlb
adc
icebp
jecxz
loop
into
push
fsubrp
add
sbb
xchg
mov
jnp
cmp
mov
push
incb
push
sub
or
push
orl
popf
std
mov
inc
nop
dec
push
loopne
or
push
mov
stos
stos
adc
sub
stc
mov
cmc
xchg
fsub
aas
leave
je
jp
dec
cmpsl
jbe
stos
pop
scas
mov
mov
inc
xlat
push
clc
jne
sti
and
inc
into
mov
shrl
fwait
mov
cltd
mov
jle
mov
xor
jae
push
add
stos
mov
jne
sbb
data16
or
inc
into
cli
dec
mov
and
push
lahf
pop
sub
cld
pop
cmp
mov
sbb
add
rorl
mov
xchg
jmp
dec
inc
sarb
jg
faddl
fildll
mov
mov
loopne
push
cmpsl
cs
push
dec
cmpsb
lret
scas
repz
js
imul
lret
das
pop
repnz
andb
dec
sbb
xchg
mov
push
adc
mov
mov
dec
rclb
xlat
mov
mov
insl
iret
fdivrs
std
repz
das
lret
lods
lret
mov
add
ljmp
clc
push
xchg
add
push
mov
subl
add
xor
pop
popaw
xor
xchg
xor
leavew
iret
xor
cmpb
jne
sub
mov
mov
lods
incb
adc
out
push
int3
and
orl
stos
push
faddl
rcr
jg
push
jne
pop
ror
int3
out
popf
lahf
push
sbb
mov
jo
mov
rorb
dec
enter
test
dec
dec
out
fs
mov
ljmp
loopne
lahf
xchg
loopne
call
ss
jbe
xorb
push
add
imul
jne
mov
data16
inc
push
into
into
jg
aaa
fiaddl
dec
inc
and
and
ds
jns
push
add
in
mov
inc
stos
stos
jnp
inc
add
mov
idivl
xchg
jle
cmp
xlat
cld
pop
stc
add
jne
scas
subl
pop
and
cmpsl
sub
jnp
cmpsl
add
in
adc
lret
test
sbbb
mov
push
cmc
icebp
cs
push
lcall
push
inc
or
js
add
ret
loop
shrb
in
aad
jno
xchg
mov
arpl
call
arpl
enter
push
icebp
sahf
jno
pop
ljmp
jb
rclb
out
dec
out
cld
sbb
cld
cmc
pop
cs
scas
dec
stc
das
popf
aad
ss
jno
das
jmp
stos
jg
out
dec
adc
pop
pop
aad
hlt
shlb
push
pop
imul
adc
xchg
pop
lret
and
mov
out
xchg
add
lret
adc
adc
xchg
mov
aam
jo
hlt
into
popa
jbe
xor
aad
sub
add
divb
movsb
scas
mov
into
stc
cmp
jb
jnp
sub
std
lahf
push
add
add
push
cmp
je
mov
in
cmp
mov
gs
in
and
cmpsb
gs
into
insb
mov
ljmp
jnp
inc
add
jg
leave
sub
mov
mov
dec
sbb
mov
xorb
pushf
mov
jns
or
mov
jl
cmc
ja
cmc
jb
outsb
sbb
rolb
adc
mov
jle
scas
sub
cltd
out
iret
ljmp
fimuls
mov
mov
out
xchg
fnstsw
inc
push
mov
movsb
out
mov
fidivl
add
sbb
daa
out
jno
imul
pop
and
jl
inc
test
mov
push
stc
sub
xchg
cmp
fdivrs
aam
dec
cli
loop
jne
add
and
pop
push
add
mov
add
and
ret
adc
or
call
jl
stos
or
stos
shrb
xor
xchg
lock
push
lcall
rclb
jle
ror
repnz
stos
enterw
jle
leave
jb
lahf
pop
push
addb
fnsave
loop
mov
pop
and
mov
in
jge
jnp
pusha
sbb
adc
lods
js
sub
mov
dec
popa
inc
lahf
lahf
push
repnz
insl
mov
int3
les
add
xchg
cmp
and
mov
mov
sahf
push
fildll
and
cmp
lahf
sub
jle
pop
push
mov
inc
add
pushf
test
mov
lahf
lock
lds
add
fs
lods
cmp
push
cmc
faddp
lea
insb
subb
xchg
popf
call
dec
jb
lods
xchg
scas
add
test
es
add
insl
movsb
iret
aad
movsl
xchg
fsubs
shrb
imul
jp
cmpsb
mov
adcl
imul
insl
stc
push
jle
add
dec
adc
add
lods
loope
jns
rcr
add
mov
cld
jp
inc
stos
repnz
shl
add
mov
pop
pop
mov
icebp
push
pop
ja
sub
lret
call
fists
push
dec
or
push
or
push
pop
leave
sbb
nop
inc
call
stc
inc
ficomps
jmp
xor
je
imulb
enter
cmc
push
lock
je
and
or
test
mov
insb
das
adc
xchg
mov
inc
aas
pushf
cwtl
cmp
cmp
xor
xchg
ss
out
inc
ljmp
andl
pop
xchg
jmp
xor
adc
cmp
pop
push
movsb
and
mov
pusha
hlt
mov
pop
fcoml
movsl
sub
ja
sub
or
cwtl
lret
nop
inc
mov
insl
fdivrs
inc
inc
dec
and
jne
push
push
mov
andb
push
shrb
outsl
cmpsb
mov
lcall
test
popl
push
mov
inc
sbb
jl
push
sbb
xchg
pop
mov
sub
ss
xchg
jle
cmp
sbb
lret
push
repnz
pop
jge
mov
lods
subb
push
xchg
pop
imul
rorb
pop
idivl
dec
cmovae
jo
dec
aaa
push
repnz
repz
testb
add
xchg
add
mov
xchg
jo
xor
jns
cltd
inc
into
cmpsl
xchg
subb
or
mov
or
sti
adc
adc
rol
sahf
fisubrs
into
lahf
aaa
push
xor
ret
sbb
or
bound
jge
cwtl
int3
out
aad
adc
adc
pop
arpl
sbb
int
fs
sub
nop
adc
shl
int3
in
adc
popf
adcb
outsb
mov
mov
gs
adc
inc
test
xor
ljmp
out
cld
cmpsb
leave
fmulp
insl
arpl
notb
jbe
or
test
xchg
mov
or
mov
lods
imul
in
xor
add
popa
xchg
sub
addr16
cwtl
je
inc
mov
jo
mov
add
nop
cwtl
cld
push
lods
mov
and
sub
rorb
adc
cwtl
cmp
mov
push
stc
iret
enter
inc
fisubs
cltd
arpl
leave
inc
mov
lea
sub
and
push
scas
sti
lock
mov
mov
call
mov
dec
pop
xor
in
sbb
push
and
ss
into
mov
out
xchg
and
test
push
imulb
and
dec
add
fcmove
scas
push
xchg
lods
jo
out
movsb
add
jecxz
loope
or
aam
insb
lret
jecxz
out
into
loopne
insb
jecxz
mov
adc
aas
mov
xor
sub
insb
dec
lcall
cli
loop
rorb
idivb
sbb
movsl
sbb
sub
ficompl
je
mov
pop
es
jmp
or
inc
stos
sub
loope
inc
cmp
inc
xlat
xchg
xchg
cmpsb
push
jge
fisubl
movb
mov
sbb
mov
out
les
jb
or
sti
mov
data16
inc
and
das
stc
cltd
iret
rcll
jo
lods
and
out
ss
xchg
push
repnz
es
fdiv
iret
cwtl
mov
movsb
mov
and
aaa
sub
das
mov
data16
inc
pushf
mov
leave
and
imul
xlat
arpl
xor
jb
or
and
mov
lcall
sub
divb
aaa
push
push
pushf
xor
jo
lcall
sbb
mov
push
mov
mov
mov
insb
loopne
punpckhdq
test
mov
sti
mov
sar
sub
push
lahf
xor
xchg
mov
test
test
mov
dec
es
rorl
and
mov
pop
dec
pop
insb
pop
xor
pop
push
dec
daa
into
sarb
daa
jno
cmpsb
fldcw
jae
and
mov
or
or
sbb
icebp
aam
punpckhbw
add
lods
bound
inc
lock
push
dec
mov
jns
adc
jle
push
mov
jg
pop
mov
testb
mov
push
xchg
jle
fs
out
in
inc
stc
pushf
das
or
inc
stc
add
leave
lods
dec
lea
and
ja
or
iret
lods
push
dec
mov
movl
shll
shl
aas
cmpsb
or
lcall
lret
pop
xor
pop
test
in
cmc
adc
rolb
insb
ss
mov
rcrl
mov
iret
add
or
andb
push
mulb
jbe
repnz
lret
pop
and
inc
sahf
adc
or
cmp
mov
or
push
push
mov
addr16
mov
aaa
arpl
lret
sbb
ljmp
movsl
imul
xchg
and
in
imul
lods
aas
xchg
popf
sbb
pop
xlat
dec
push
dec
sbb
lods
sbb
pop
lds
push
jg
outsl
movsb
shl
dec
ret
cs
xor
mov
add
push
out
mov
jecxz
adc
sbb
push
mov
into
in
stos
xchg
lods
jns
mov
sbb
movsb
hlt
jecxz
lea
or
gs
shll
xchg
sub
stc
pusha
pop
mov
cmc
pushf
cmp
pop
adc
mov
sub
and
leave
repnz
and
xchg
mov
mov
cmp
sarl
repz
sbb
cmp
outsl
loop
sub
and
dec
sbb
sub
and
pop
imul
cmpsb
ds
xor
jl
out
mov
or
adc
das
xor
aas
add
aas
mov
cltd
pop
aaa
jecxz
lcall
icebp
mov
or
ljmp
pop
out
movsl
sbbb
fwait
adc
pop
cmp
add
add
jmp
mov
lods
mov
scas
out
adc
les
sarb
es
inc
mov
daa
sahf
add
jecxz
and
add
jbe
xor
inc
mov
push
out
popa
cli
jne
xor
xor
fmul
cmc
push
and
cmp
xor
fsts
jmp
mov
andl
ficoms
pushf
pop
cmp
shlb
cmp
stc
icebp
dec
push
icebp
pop
sbb
inc
popf
test
dec
ss
push
jno
adcl
pop
xchg
mov
lock
cmp
add
fidivrs
pop
daa
pop
and
mov
mov
mov
cmp
xchg
push
xlat
call
jge
fwait
cmpsb
mov
push
or
lods
testl
cmpsb
xor
sub
std
inc
cmpsb
add
addr16
push
lret
call
push
or
into
popa
cmpsl
mov
movsb
sbb
mov
addr16
inc
lcall
mov
and
fsubs
pop
test
mov
adc
fimull
pop
and
jle
add
popa
adc
es
lahf
lods
ja
nop
cmp
jae
sahf
xchg
sub
ret
and
jmp
ljmp
fdecstp
jle
cmc
mov
push
rclb
adc
pushf
adc
xor
lea
push
and
xchg
push
call
jecxz
lods
fs
shrl
xchg
mov
pop
jb
mov
and
mov
add
fdivl
imul
iret
push
sub
ret
jecxz
repz
shll
std
icebp
aaa
ljmp
test
cmp
dec
pushf
hlt
rep
mov
or
addb
or
rorb
shrl
sbb
sbb
imul
ss
stc
mov
jbe
cwtl
dec
pop
insl
mov
enter
out
data16
pop
xchg
ret
adc
sub
cli
mov
ret
jge
mov
lds
inc
rorb
arpl
push
icebp
ss
outsl
jno
cmpb
stos
fbld
jb
aas
icebp
repz
jnp
cmpsl
mov
push
fstl
into
scas
lret
fadds
repnz
xor
rcrb
fs
mov
mov
pop
push
test
or
into
cli
pop
xchg
mov
cmp
add
icebp
rolb
or
rclb
xchg
sub
jnp
or
xchg
push
mov
mov
jmp
pop
aaa
pop
scas
inc
imul
in
mov
int3
in
mov
nopl
push
pop
out
lds
addr16
jle
push
shrb
sbb
cmp
xor
and
push
push
push
repnz
les
sahf
jge
add
xor
fistl
pop
decb
mov
push
pop
mov
push
push
xorl
fmuls
jno
loopne
cmpsb
lret
fidivrs
cmpsb
addr16
and
xorb
inc
lret
lahf
mov
stos
in
add
js
sub
ds
xchg
jb
or
insb
neg
push
and
jns
ret
mov
xor
xchg
test
cmp
mov
pop
test
int3
aad
xor
ret
xchg
jp
ja
cmp
xchg
ficoms
test
fisttps
psllw
out
sbb
jle
fldl
inc
out
sahf
sbb
loop
mov
lea
sub
daa
clc
cli
mov
in
pop
movsl
popa
or
push
test
aad
aad
mov
push
mov
lds
adc
and
push
add
push
fucomp
xchg
xchg
int
cltd
iret
popf
lea
inc
pop
movl
lods
mov
mov
loop
js
cmp
sub
push
mov
jae
nop
clc
push
fldenv
dec
fdivp
stos
inc
cmp
imul
stos
inc
je
mov
pop
xchg
cmp
mov
cmpl
ds
or
hlt
push
cmp
dec
pushf
jns
fbstp
adc
mov
in
cmp
xchg
aad
shlb
filds
push
idivb
aas
cwtl
sub
mov
imul
xor
stc
popf
cmp
mov
sbb
xchg
push
xchg
jle
lods
xchg
testl
movsb
hlt
jo
jle
cwtl
repnz
push
mov
out
adc
xor
pop
aaa
je
call
cmp
mov
ret
or
xchg
or
inc
mov
insb
cmp
pop
dec
dec
push
sbb
dec
mov
xor
mov
cli
push
mov
mov
ljmp
mov
jecxz
insl
aas
mov
out
adc
lods
sbb
inc
test
ret
std
icebp
incb
jo
roll
test
jnp
mov
pop
jb
xchg
cmp
es
sub
ds
xor
sub
test
outsb
mov
fsubl
mov
lods
adc
out
push
dec
dec
idiv
pop
repz
adc
dec
int3
push
push
mov
sbb
mov
data16
rcrl
imul
test
repz
or
and
sbb
mov
ret
fcmovnbe
xchg
xchg
jg
rorl
inc
mov
mov
sub
mov
adc
daa
and
rcrb
mov
jge
enter
dec
mov
testb
pop
xchg
adc
dec
dec
std
or
push
loop
xor
pop
in
popa
push
arpl
cmp
fdivs
cmpsb
in
in
push
add
insb
add
ret
add
iret
idiv
cmpl
jle
xor
push
lds
cmc
sbb
pop
push
iret
pop
stc
lods
js
jb
int
xor
in
aad
xchg
jbe
iret
jne
je
bound
pop
pop
jae
movsb
aad
cmp
pusha
pop
sti
jbe
std
push
lahf
mov
mov
xchg
loopne
add
rcrl
insb
pop
jecxz
sub
jbe
addr16
imull
mov
out
add
xor
cmpb
dec
adc
sub
js
loope
pop
mov
jno
pop
or
add
inc
jno
mov
mov
mov
repnz
aas
es
adc
sub
inc
mov
push
xchg
popa
mov
je
sub
sbb
flds
outsl
mov
bound
cs
inc
pop
das
movb
push
das
jl
sbb
fdivr
leave
pop
or
inc
cs
jae
popf
mul
out
fwait
push
dec
jne
int3
push
stos
std
lcall
mov
jmp
add
cmp
mov
jge
int3
jle
mov
xor
and
jbe
dec
push
add
sbbb
sub
aad
test
rcll
push
mov
out
repz
adc
jmp
out
cli
push
dec
push
xlat
mov
push
pop
shlb
test
mov
lret
push
lock
sub
cwtl
xchg
sahf
fs
enter
popf
jmp
cld
movsb
adc
dec
gs
xor
fs
pop
sbb
testl
pop
jb
cs
inc
dec
stc
dec
das
add
popf
adc
sbb
pop
loope
rcrl
jo
adc
adc
xor
fs
sbbl
or
lret
cli
xor
out
cli
sbb
lods
fcoml
inc
out
or
pop
loopne
xlat
pop
dec
dec
sbb
xor
dec
push
mov
lcall
cmp
loopne
out
mov
imul
movsb
mov
lods
pop
add
repnz
xor
js
xchg
mov
clc
movsl
int3
cmp
pop
jp
sahf
test
cltd
sbbb
ds
mov
adc
leave
clc
in
add
scas
cmp
je
icebp
sub
push
cwtl
call
cmp
leave
out
lret
pop
and
xchg
pop
jmp
adc
xlat
pop
dec
mov
jge
psubq
out
push
adc
sub
fwait
shlb
mov
push
pop
in
xor
push
movsb
shrl
dec
pavgw
push
adc
push
xchg
xor
mov
jno
inc
popf
sub
cmpl
push
imul
inc
call
inc
xor
ljmp
jl
mov
jae
push
arpl
int
cmp
add
push
xchg
insl
jmp
loop
gs
popa
int
aam
cmp
and
mov
lret
and
subl
cld
inc
pop
and
mov
je
push
cmp
imul
ljmp
ret
add
and
ljmp
adc
rorb
mov
dec
push
push
arpl
insb
inc
lahf
adc
decl
push
dec
lret
pusha
pop
lea
mov
hlt
sub
xchg
fdiv
lods
sbb
mov
call
mov
incl
cld
adc
jl
int3
dec
jns
rcl
or
call
sbb
and
dec
mov
dec
mov
stos
xchg
call
leave
insb
xchg
cmpsl
fstpt
cmpsl
int
sub
fidivrs
ret
ja
xor
ljmp
in
cmpl
push
lret
scas
mov
mov
jbe
rclb
cmpsb
bsf
push
mov
jnp
cli
orl
dec
sbb
call
or
aam
mov
push
popf
add
into
sbb
lea
mov
or
fwait
negb
lahf
test
jle
in
lcall
stos
xchg
mov
mov
sub
mov
aad
scas
jne
and
setae
sbb
mov
and
imul
add
pop
lds
jecxz
sub
cmp
sti
stc
dec
lods
stos
gs
mov
push
cs
jns
into
insl
inc
sub
movsb
jmp
arpl
mov
inc
or
or
popa
fdivrl
mov
and
aam
jns
mov
in
mov
lods
push
rcrl
daa
int3
jge
clc
mov
mov
mov
add
adc
roll
dec
out
lcall
stos
jl
sbb
and
test
lods
pop
repnz
scas
or
ret
jno
iret
mov
or
cs
or
neg
push
sahf
pop
loope
orb
push
mov
and
lds
pop
cmc
push
mov
cmp
aad
aad
dec
lock
and
sub
jmp
cld
insl
popf
mov
jnp
in
movsl
xchg
xchg
lahf
ds
rcl
fimull
mov
jmp
lret
lods
pop
add
data16
aas
adc
movsl
xchg
insl
mov
jl
mov
dec
movswl
pop
lds
xchg
mov
das
fildl
lods
mov
jo
clc
push
pushf
xchg
dec
dec
lods
dec
test
fbstp
jno
frstor
jmp
jb
and
mov
test
xchg
jbe
pusha
stc
inc
stos
jb
mov
or
mov
and
xor
adc
or
cwtl
push
loopne
outsl
int3
jo
outsb
or
in
ss
fstps
rcll
push
outsl
nop
mov
test
dec
mov
add
call
loop
add
cmpsw
push
jge
int
mov
int3
daa
dec
in
or
mov
stos
add
mov
pop
mov
js
dec
pop
jns
mov
mov
sub
test
shl
fbld
mov
sahf
das
mov
and
rcrb
ret
movsb
xorb
test
jbe
test
pop
ja
add
test
push
jecxz
lock
jmp
lods
repnz
fwait
sub
pop
cmpsb
jle
xor
mov
jle
xchg
int
mov
sbb
outsb
aam
xor
punpckhdq
jne
mov
out
es
fmuls
xor
add
lahf
inc
jns
jbe
xchg
jp
adc
or
mov
mov
cmp
out
subb
mov
es
fisubrs
mov
rorb
jl
das
sti
js
xor
mov
lcall
jge
pop
mov
xchg
mov
pusha
out
sbb
loop
jnp
mov
rdpmc
inc
cmpsl
adc
push
insb
or
adc
pop
sti
add
in
pop
ret
shll
mov
lods
cmp
push
mov
fistps
testb
mov
cwtl
cmp
xchg
bound
lcall
lcall
add
hlt
jo
xchg
lretw
test
dec
inc
incl
test
fs
jb
aam
invd
inc
add
dec
mov
movzbl
repnz
stos
push
and
sbb
sahf
orl
sbb
pop
mov
mov
aad
sub
mov
mov
pop
lea
jp
test
rolb
ja
dec
inc
mov
jno
inc
lods
loopne
insb
arpl
xor
enter
jb
fistl
cmpsb
inc
xor
in
mov
lcall
push
pop
dec
mov
fucomip
repnz
mov
sbb
gs
jmp
lret
cli
push
fidivs
inc
ja
insl
jl
lods
jbe
shrl
dec
fnsetpm(287
adc
sub
mov
loope
add
pop
push
mov
dec
add
xchg
push
push
out
test
adc
enter
int
inc
or
sub
mov
lods
inc
push
mov
pop
or
mov
mov
icebp
scas
addr16
sub
adc
fcomps
mov
cmp
adc
dec
sub
cmp
dec
cltd
mov
in
add
test
les
test
jae
clc
repz
and
cmp
out
or
out
scas
pop
xor
mov
cwtl
test
mov
repnz
cmc
and
repnz
aas
mov
mov
sbb
or
xor
test
jns
out
rcrl
push
cmp
rol
and
jmp
xor
rolb
mov
iret
mov
repnz
push
xchg
mov
les
jnp
out
fadd
xchg
sub
cld
paddsw
jp
loop
popa
call
mov
incl
pushf
sub
aam
or
lret
in
iret
sub
add
cwtl
jno
fwait
pushf
xor
nop
std
add
pop
xchg
mov
dec
xchg
imul
sbb
pushf
sahf
icebp
call
sub
xor
negb
jne
fisubs
and
mov
sahf
fwait
test
or
test
jns
loope
jmp
sub
push
cs
pop
out
negl
cmp
mov
xor
in
push
dec
sbb
xchg
and
icebp
push
jb
xchg
lret
push
dec
andb
dec
out
clc
and
xchg
mov
popf
xorl
or
mov
loop
cmp
sti
aad
movsl
int
lea
scas
fnstsw
adc
out
xchg
sub
jmp
dec
adc
or
aas
fs
mov
fmuls
shll
int3
push
sub
cli
mov
add
cmpsl
inc
iret
adcb
enter
sbb
outsb
mov
cli
pop
je
dec
loopne
les
jp
cmp
out
lahf
stos
jne
add
shr
jbe
das
add
or
imul
sbb
data16
mov
jno
fcmovnbe
test
cld
add
arpl
fld
jle
sbb
ficompl
imul
mov
icebp
sbb
xor
data16
je
cmpsb
outsl
ret
fdivrl
jmp
sub
loopne
mov
fimuls
jp
fisttpl
out
psrlq
xchg
lea
popf
add
mov
adc
iret
popa
sbb
in
mov
stos
xchg
jbe
pop
mov
mov
sub
xor
ficompl
ret
add
data16
nop
mov
mov
dec
bound
scas
orb
xchg
push
gs
fisttpl
adc
shrb
imul
jl
and
push
fsubrs
xor
sbb
pop
mov
ljmp
xchg
xchg
add
jbe
sub
sbb
mov
sub
je
dec
out
popf
push
int3
int3
adc
add
or
xchg
jno
xchg
and
and
lea
sub
push
xor
sub
xor
out
push
pop
bound
and
stc
cmpsl
jg
add
add
mov
inc
lds
add
nop
shl
inc
mov
movsb
lods
jecxz
stos
icebp
notl
ret
cmp
push
btc
ret
out
push
sbb
mov
add
cli
int
cmpb
xchg
sub
mov
call
and
js
inc
je
dec
adc
jmp
or
xor
adc
cmpsb
loop
repnz
adc
xchg
sbb
fisubs
mov
test
pop
mov
dec
or
adc
lea
push
push
imul
jp
mov
fwait
cmp
dec
fidivrl
sahf
sbb
shll
mov
out
sbb
sub
pop
push
jle
mov
ficoml
scas
pop
int3
hlt
insl
in
inc
mov
cmp
xchg
movsl
inc
inc
xchg
xor
or
xor
xchg
dec
movsb
inc
xor
xor
mov
sbbl
jno
imul
lcall
inc
addl
outsb
mov
loop
lods
mov
fadds
push
sarb
jo
clc
push
lahf
pusha
out
int3
cmp
pop
pop
adcl
sub
pushf
mov
int
sub
fbld
mov
mov
jbe
mov
icebp
out
out
sbb
pop
pop
ret
cmp
jne
adc
imul
and
mov
dec
dec
js
xor
inc
jle
imul
pop
popf
mov
fstl
aaa
push
lods
pop
fwait
repz
mov
ficoms
dec
inc
inc
mov
push
mov
lock
jb
inc
test
fcmovnbe
fnstenv
cmp
dec
out
xchg
into
sub
aas
pop
test
xchg
xor
mov
out
lea
and
push
cmp
push
jge
cmp
pop
or
and
mov
add
cmp
gs
cwtl
xor
add
mov
cmp
pop
mov
mov
or
jg
and
in
xor
les
lahf
xchg
aaa
outsl
mov
and
add
aad
dec
loopne
push
flds
push
sub
jl
dec
sbb
adc
orb
cli
cwtl
notl
jnp
pop
cli
cmp
data16
rolb
mov
ds
or
sbbb
outsb
mov
jmp
lret
adc
in
cmc
pop
je
inc
test
xor
adc
insl
xchg
and
push
or
into
fsubr
clc
outsb
iret
or
addl
mov
sub
jge
cwtl
and
dec
inc
lret
testl
mov
dec
xchg
add
or
dec
mov
fsubr
and
dec
and
mov
mov
mov
cmp
rol
push
ret
in
stc
pop
inc
push
xlat
pop
jp
or
jl
outsl
cltd
push
push
sub
sub
sbb
xchg
push
popa
iret
jo
sub
sub
int
es
lds
sbb
sbb
les
or
es
faddp
inc
sbb
jge
mov
inc
jl
mov
mov
test
scas
mov
pop
xorb
addr16
gs
inc
test
cmp
lods
mov
repnz
and
test
mov
mov
fstpt
jmp
into
sub
fcoml
dec
mov
mov
adc
inc
das
fs
jns
jp
add
push
xchg
dec
popa
mov
ss
push
enter
cltd
mov
mov
xchg
int
mov
mov
sub
cmpsl
in
add
pop
pop
daa
cmpsb
push
mov
push
pop
lods
and
mov
enter
mov
xchg
mov
cmp
jp
dec
insl
clc
add
mov
into
add
ljmp
cmp
dec
cli
mov
lea
jmp
call
or
adc
dec
popf
stos
dec
ds
push
fs
jmp
push
jmp
pusha
add
add
lret
xlat
stc
sbb
test
clc
lcall
lods
pop
and
jl
xchg
cmp
ds
hlt
mov
scas
ret
mov
xchg
jno
mov
sbb
push
js
out
int3
xor
fdivrp
xchg
ret
insl
sar
inc
fs
into
push
fwait
jle
xor
pop
in
aad
shl
jmp
adc
imul
cmp
or
fistpll
aas
mov
out
ret
in
call
sub
mov
jle
push
int
pop
mov
inc
out
ret
int
in
mov
xchg
jnp
push
or
adc
fstps
or
jns
push
and
push
jl
adc
mov
enter
lahf
fwait
push
mov
hlt
push
and
mov
mov
out
pop
loopne
mov
notl
popa
mov
nop
fisttpll
sbb
inc
sarl
push
pop
pop
xlat
xchg
cli
push
dec
add
or
je
sbb
cmp
inc
inc
jae
pushf
addr16
or
pop
pop
insb
push
and
cmp
jg
lcall
sbb
imul
scas
repnz
shlb
jnp
mov
int3
test
push
add
xchg
repz
adc
pop
cmpl
insl
mov
pop
mov
mov
xchg
xchg
fildll
jcxz
fdiv
xorl
into
mov
add
mov
sarl
xchg
cmp
push
daa
jnp
pusha
cli
push
bound
and
add
mov
xchg
ja
loop
mov
jg
leave
sahf
add
cmp
test
push
pop
xor
scas
mov
mov
out
rcrb
jp
xor
into
adc
out
pop
fldcw
adc
push
lea
inc
out
movsb
aam
pop
sbb
push
into
or
hlt
rcrb
out
sub
lret
fstps
lea
xchg
and
mov
fwait
nop
mov
pop
lret
and
nop
repnz
adc
mov
xor
insb
mov
pop
mov
pop
inc
xchg
ret
and
push
sub
sub
data16
cmp
sub
cmp
xchg
dec
gs
inc
daa
sbb
inc
aam
fwait
mov
js
xor
test
mov
es
repnz
adc
mov
ret
gs
aam
or
rolb
pop
cmpsl
jne
adc
popf
jecxz
fdivs
jle
xchg
jns
push
or
lcall
pop
int3
test
scas
adc
add
or
jecxz
mov
mov
fldenv
cmp
push
imul
std
and
sti
jae
and
inc
mov
cmp
add
aad
push
test
test
push
jp
lret
gs
loope
in
sub
cwtl
pop
adc
xchg
sub
jo
mov
jg
neg
jb
lock
test
fisttps
rcrl
hlt
iret
int3
push
pop
movsb
leave
aas
jecxz
rolb
mov
lea
dec
clc
jle
add
pop
sub
push
inc
cwtl
adc
pop
cli
ss
mov
dec
mov
jns
xor
pop
xlat
rcl
mov
cmp
jo
test
jo
cmp
in
lret
sbb
pop
push
ss
xchg
add
mov
ja
cwtl
in
adc
jns
pop
dec
add
push
ret
xchg
mov
xchg
xor
adc
stc
ss
jp
test
imul
cmc
or
je
add
sub
cmc
xchg
and
xchg
or
dec
jo
enter
arpl
arpl
pop
scas
imul
push
gs
jbe
dec
js
mov
mov
ds
dec
out
gs
insb
and
stos
lahf
push
les
mov
cmp
popa
sti
sbb
out
mov
and
mov
fwait
andl
sub
dec
arpl
fsts
sbb
out
test
sarb
mov
ja
outsl
nop
jne
xor
jle
jo
movsb
cmp
dec
mov
pop
fmuls
gs
movsl
loope
pop
or
jmp
popf
data16
outsb
int3
cmp
lock
add
sub
sbb
xorb
xchg
xchg
nop
lret
mov
stos
xchg
adc
inc
mov
aam
adc
xor
mov
lahf
orl
cwtl
pop
jl
push
add
mov
sbb
sbb
in
mov
in
jnp
sbb
lret
mov
ret
cli
movw
cs
test
push
fwait
enter
xchg
dec
push
add
sti
adcl
sbb
dec
cmp
add
fldenv
out
xchg
out
ds
clc
push
pushf
mov
les
je
add
bound
lods
dec
and
xorb
dec
gs
out
les
test
or
jmp
dec
mov
jno
bound
inc
dec
pop
test
push
adc
or
out
pop
sahf
popa
adc
loopne
cs
pop
rorb
mov
js
fdivl
test
lahf
lds
daa
fisubrl
push
pop
fadds
cmpsl
ds
fsubs
outsb
add
ds
mov
testl
xchg
mov
ret
jp
cmp
or
adc
add
sbb
shlb
and
mov
mov
stc
clc
push
pop
dec
addr16
sbb
rorb
aad
inc
ds
jecxz
insb
std
rclb
int
in
and
movsb
sub
jle
enter
sub
sbb
adc
cmp
js
pop
mov
mov
push
jae
int3
ds
pusha
jecxz
jg
inc
jg
test
sbb
inc
or
push
xchg
dec
xor
insl
mov
lock
sub
sub
push
pushf
repnz
ds
loopne
xor
dec
popf
mov
call
arpl
icebp
iret
repnz
xor
sbb
in
jo
jb
lcall
shll
out
int
mov
in
jecxz
xchg
mov
dec
data16
and
pop
jl
xchg
pushl
repz
xchg
pop
xorl
imul
dec
movsl
test
pop
fdivs
nop
mov
gs
push
std
andb
jmp
testb
js
mov
jmp
inc
sbb
arpl
ljmp
fsubr
jnp
mov
jno
mov
sub
mov
aad
mov
xchg
sub
out
mov
and
mov
in
lahf
and
fdiv
mov
adc
and
xor
testb
mov
jo
pusha
sub
popf
add
test
movsl
or
hlt
in
jge
out
mov
dec
decb
sub
dec
scas
stos
out
fidivs
stos
rorl
xorb
arpl
inc
enter
push
cwtl
mov
scas
jecxz
mov
bound
out
jb
sbb
mov
ret
lock
les
mov
xchg
inc
mov
sti
imul
ss
cwtl
and
repz
pusha
stos
sbb
cmp
cmp
pop
inc
daa
jne,pt
xor
adc
subl
daa
arpl
les
xchg
fidivrl
sti
add
out
imul
cmp
call
dec
jp
push
mov
mov
pusha
or
jne
jg
sub
inc
call
iret
xor
scas
and
insb
cmc
xor
call
push
int
push
adc
and
js
xchg
xchg
popl
iret
mov
testb
test
je
std
cmpsb
nop
dec
ss
xor
outsb
jecxz
fildll
lock
xchg
js
scas
jecxz
stos
dec
inc
jo
jnp
icebp
js
pop
lds
cmp
xchg
adc
das
sub
cmp
mov
add
sahf
js
adc
lock
pop
add
stos
sub
ss
cmp
in
cmp
add
das
adc
pop
in
lret
push
notl
int
push
fimuls
es
jns
dec
dec
jg
mov
cmpsl
loopne
hlt
cmpsl
push
into
dec
jmp
add
sub
and
push
fsubrl
xchg
add
xchg
xchg
pushf
push
setle
adc
cwtl
popa
and
jl
add
xchg
mov
mov
fiaddl
mov
ret
sbb
sub
leave
add
popf
insb
fbld
fimull
jns
jne
out
xchg
insl
jbe
popa
cmp
in
and
pop
and
xchg
outsl
aam
fwait
into
imul
pop
test
add
out
or
cs
mov
pop
mov
cmp
sub
or
mov
repz
and
jno
lods
movsb
pop
push
fdivp
mov
jle
lea
mov
xchg
rorb
push
std
stc
xchg
shll
mov
cmpsb
scas
iret
cmc
add
imul
lea
pop
movsb
dec
mov
push
sbb
test
pop
fnstsw
cli
ficoml
js
aam
mulb
push
add
pop
jae
xchg
mov
stos
fsts
std
mov
inc
jbe
test
xchg
mov
movsb
out
notl
mov
and
mulb
aaa
hlt
sti
dec
mov
dec
test
adc
fidivrl
dec
insb
jbe
addr16
mov
fsubrp
enter
sub
and
das
imul
dec
push
lret
lret
jnp
ds
inc
jg
cmp
inc
adc
push
or
sub
cmpsb
pop
in
push
in
mov
jno
or
rcll
and
lahf
xchg
sbb
inc
sub
cmc
mov
clc
pushf
push
add
push
sbb
jmp
mull
les
subl
pop
dec
mov
sbb
daa
mov
jle
mov
adc
into
push
adc
inc
mov
imul
mov
cmpsl
push
cmpsb
addr16
pop
shl
adc
ljmp
mov
imul
clc
sbb
cwtl
adc
loope
sbb
ret
popf
pop
pop
jo
pop
idivl
xchg
aad
push
xchg
xorl
sti
daa
sub
jns
out
clc
das
cld
jmp
test
stos
mov
int3
or
lcall
aaa
test
push
push
sub
sbb
mov
ficompl
pop
dec
test
sarb
testl
cmp
int
dec
test
mov
cmpsb
ljmp
dec
xor
in
fidivrs
stos
mov
mov
outsb
fdivrl
sbb
pop
xchg
mov
loopne
fists
pop
cmpsl
pop
nop
pop
addr16
push
xchg
jg
stos
push
ja
addb
aaa
push
jl
pop
cmpsb
ja
xor
rorb
gs
cmp
mov
mov
sahf
stc
rcrl
jp
out
mov
jg
pop
mov
xor
add
ja
pop
and
jb
incl
adc
adc
push
iret
jbe
jp
cmpsl
arpl
aam
push
out
dec
jg
mov
dec
dec
sbb
inc
jne
sub
cs
rorl
push
mov
lret
mov
jae
lahf
outsb
mov
scas
xchg
fistpl
adcl
lret
fiadds
push
push
hlt
outsl
lcall
add
add
push
mov
mov
out
lahf
call
test
popf
daa
jne
aaa
mov
jle
mov
pop
jle
arpl
sub
adc
push
and
mov
mov
dec
xchg
sbb
inc
bound
mov
ja
xchg
push
cld
jge
fwait
ret
mov
xor
cmp
sbb
inc
cmp
stos
pop
pop
mov
push
out
push
mov
aam
inc
mov
mov
icebp
lahf
shll
sub
fdivrl
call
icebp
dec
out
in
and
xor
js
xchg
mov
div
mov
xchg
and
mov
incl
outsl
push
cmp
pop
lret
and
dec
ss
mov
shll
mov
dec
inc
dec
push
rorl
dec
imul
rclb
loope
push
mov
xchg
dec
ljmp
dec
fxch
jmp
fs
push
dec
xchg
pop
mov
mov
jbe
add
xchg
cmp
mov
or
adc
and
outsl
mov
outsl
icebp
addb
test
mov
mov
loope
mov
stos
mov
cmp
movsb
fcoml
push
lret
hlt
clc
inc
xor
movsb
aad
mov
fisubs
push
insb
clc
jmp
mul
sub
jp
les
mov
bound
pop
imul
mov
fsubrl
push
xor
push
imul
mov
push
test
leave
mov
lods
test
je
lret
cld
int
cmpsb
and
ss
jb
orb
dec
mov
insl
mov
mov
pop
add
cltd
sub
test
jp
loope
data16
mov
testl
std
aaa
jg
xchg
fimuls
jg
fstps
xor
lods
xchg
pusha
xchg
imul
stc
lahf
fmul
jnp
add
mov
rcrl
xor
jnp
xor
in
pop
xchg
add
imul
scas
rcll
sub
inc
lcall
frstor
test
adc
inc
mov
add
cld
scas
jp
jg
or
ret
inc
idivl
jmp
xchg
pop
movsl
pop
xchg
cmp
rcr
lods
sub
pop
sbb
cld
or
inc
cmp
enter
aas
xor
xorl
sub
mov
sub
jb
in
gs
add
mov
xchg
jae
fcmovnbe
loopne
dec
push
or
jnp
pop
and
push
jo
dec
movsl
jmp
in
jae
push
outsb
bound
sub
inc
ljmp
sub
outsl
in
fisttps
mov
sbb
negl
jg
xor
repnz
add
add
repnz
mov
rcrl
lcall
mov
rorb
inc
stc
push
lcall
jp
pop
add
insb
scas
lret
mov
and
lods
and
cld
mov
repz
into
imul
mov
lahf
imul
inc
xchg
fimuls
rcrl
mov
imul
jp
test
les
add
pushl
sbb
add
jecxz
fildl
lock
out
dec
push
bound
loope
inc
or
or
mov
out
mov
pusha
imul
lret
jnp
gs
dec
push
mov
adc
and
cmp
and
or
sub
adc
push
xchg
div
jb
subl
jle
or
cld
sub
faddl
pushf
out
or
ret
sub
xor
ret
cmpsl
pusha
xor
and
xlat
mov
sbb
pushf
cltd
or
shlb
ret
jg
mov
into
cmp
rol
mov
lret
mov
inc
sbb
mov
and
lret
lods
mov
mov
cmpsl
push
push
cwtl
in
push
insb
hlt
std
adc
jp
pop
test
xor
test
and
es
test
pop
add
mov
and
movsl
mov
jbe
sbb
pop
movsb
add
ffreep
xor
adc
xchg
dec
xchg
mov
cwtl
lea
loope
add
das
cmp
and
or
lret
pop
les
rcl
mov
mov
xorl
in
pushf
lret
inc
in
pushf
sub
xor
in
and
mov
outsb
outsl
push
pop
dec
jmp
jle
add
jl
outsb
and
jmp
jmp
pushf
je
aaa
add
dec
push
and
cmpsb
leave
pop
cmp
orb
call
lock
sarl
xlat
dec
inc
ljmp
pop
adc
mov
jno
insl
cmp
gs
inc
sub
pushf
fwait
mov
mov
xchg
or
cmp
xchg
jae
mov
aas
cmp
adc
fs
inc
rcrl
aam
adc
push
nop
push
dec
inc
ljmp
mov
push
mov
lret
cmp
leave
arpl
mov
xor
leave
mov
inc
push
inc
out
push
lock
insl
int3
aam
jle,pt
insb
add
xchg
fisubrl
mov
mulb
pop
cmpsb
vmovd
push
pushf
movsl
xor
in
mov
mov
shrb
cmp
inc
pop
push
pop
stc
adc
mov
cmp
shll
repz
pop
mov
test
mov
lea
mov
jne
and
je
popa
xchg
shr
cmp
das
mov
insl
call
call
push
sub
je
lods
out
jmp
pop
dec
shlb
jle
popa
mov
dec
jecxz
lods
sahf
inc
pushf
popf
jge
cmp
jge
adc
pop
mov
mov
bound
rcrl
sahf
ret
fcompl
add
icebp
xor
hlt
dec
sub
sahf
icebp
sbb
xchg
jb
pop
fcomip
ja
dec
push
ret
popf
mov
js
lahf
lods
jle
lock
add
mov
xchg
dec
sub
mov
and
ret
mov
mov
xor
lods
sub
cmp
popf
loope
in
inc
push
out
into
mov
push
adc
cld
mov
push
stc
push
inc
push
xchg
call
jno
les
push
and
or
add
and
mov
pop
es
pop
sbb
inc
aam
pop
scas
mov
dec
mov
rorl
xchg
in
or
push
cmpsb
mov
sub
jb
cmp
cltd
addb
push
sti
sub
shl
inc
mov
enter
mov
fst
xchg
and
insb
daa
xchg
call
lods
pop
nop
dec
and
sub
mov
arpl
sub
je
les
addr16
arpl
nop
sub
aam
cltd
mov
and
test
sbbl
lret
neg
neg
mov
xchg
and
in
sbb
mov
out
in
cld
cmp
roll
inc
lds
xchg
mov
cmc
sbb
sub
lret
jge
data16
xor
lea
cltd
outsl
mov
xchg
mov
pop
dec
rorb
sbb
addr16
js
or
sbb
imul
inc
jno
and
mov
push
dec
pop
inc
push
scas
insl
stos
cmp
push
aaa
jle
pop
jecxz
mov
sbb
mov
and
xor
ret
dec
pop
sub
mov
pop
push
jge
xor
out
aad
es
inc
mov
or
inc
adc
cli
cs
testb
mov
inc
lret
sbb
in
aad
mov
mov
insl
out
decl
push
adc
leave
shr
pusha
in
iret
xchg
cmc
mov
fnstsw
arpl
mov
out
inc
push
cmc
pop
lret
inc
in
stos
mov
sub
enter
cmp
adc
xchg
sti
sub
into
xor
cld
mov
sbb
rorl
mov
notb
adc
sub
lret
enter
cmpsl
shll
out
outsb
mov
cmp
addr16
xchg
push
mov
insl
cmpsb
xchg
in
rol
aam
xchg
movsb
adc
sti
stos
shr
or
int
jno
jmp
ss
pop
jecxz
mov
sub
push
jecxz
shl
insl
call
fistps
mov
lcall
imul
insl
jns
out
push
pop
mov
prefetchwt1
loope
cmp
sub
sub
cmp
add
lods
orl
out
or
rolb
mov
aad
test
movsb
daa
int
fidivl
inc
imul
rolb
push
pop
movsb
cli
sbb
xor
adc
jecxz
addr16
sti
push
leave
fldenv
enter
leave
cmp
hlt
scas
outsl
out
cmc
dec
xchg
sbbl
pop
es
hlt
cld
xchg
dec
or
sub
mov
sarl
rolb
bndstx
jle
jp
lods
ret
stos
mov
and
cmc
xchg
pop
test
xchg
lret
jnp
cmp
sbb
dec
imul
pop
dec
test
push
sbbl
jge
sub
les
testl
ret
pop
cmovge
mov
movsb
and
out
or
cmp
jae
sahf
outsl
ja
rolb
loopne
repnz
aas
aam
pop
or
or
push
or
ret
xchg
or
jo
je
cmp
aam
cvtps2pd
rcll
cmp
daa
push
xor
jl
shll
out
lcall
mov
xlat
mov
out
sub
lods
jne
loop
or
jmp
cmp
add
jmp
jmp
mov
mov
addr16
popf
xlat
nop
push
and
push
mov
xchg
lods
lahf
dec
pop
add
loope
mov
sbbl
inc
popa
lods
daa
jp
int
orb
mov
push
mov
pop
sbb
cmpsl
jmp
out
test
repz
repz
mov
mov
stc
cmp
and
adc
in
jne
xchg
ja
imul
mov
in
sar
dec
sbb
rol
xchg
dec
dec
sbb
gs
xor
movsl
sbb
clc
xor
call
pop
jle
aam
es
sub
push
xchg
das
imulb
jbe
mov
leave
test
and
mov
xor
xchg
mov
or
or
pop
ja
fldcw
pop
xchg
sbb
add
lret
in
xchg
or
pop
imul
jb
mov
stc
scas
jb
repz
aad
adc
mov
adc
mov
sbb
jnp
inc
mov
inc
lahf
pop
call
cmp
xchg
pop
stos
inc
push
add
outsl
pop
and
cli
mov
cmp
divb
or
add
sub
push
inc
cmc
addr16
mov
pop
andl
std
sub
sub
aad
cmp
or
sbb
sti
adc
push
repnz
add
mov
mov
mov
inc
fs
lea
stos
push
mov
or
mov
xor
mov
push
pusha
mov
filds
shll
jnp
arpl
pop
sbb
in
jp
cmp
mov
repnz
cli
iret
adc
je
push
lret
fmulp
jl
and
cli
or
insl
add
mov
mov
fwait
rolb
mov
addb
sbb
jp
notl
push
test
push
adc
push
loope
mov
mov
ret
mov
pop
call
sbbb
popa
cmpl
sbb
pop
popl
andb
mov
xor
daa
into
sti
aas
fwait
in
xchg
dec
inc
pop
pop
cwtl
mov
test
cmp
lods
xchg
mov
dec
mov
sub
push
push
jb
xchg
cli
cltd
cmp
sbbl
test
xor
add
test
pop
sti
test
cwtl
cmc
into
mov
xor
xor
insb
add
mov
movsl
fisttps
mov
push
std
or
repz
rolb
rcrb
cmp
push
aad
lods
xlat
xorl
cmpsl
sub
push
mov
into
mov
cmp
test
jp
mov
scas
and
jo
in
shll
push
outsb
add
push
cmp
and
mov
mov
mov
into
add
xchg
in
bound
rep
dec
int3
out
push
dec
repz
inc
outsb
mov
je
lods
jb
lds
roll
pop
andl
ret
xor
push
inc
popf
cmc
inc
add
test
sbb
test
lds
xor
test
loope
imul
dec
test
jp
sub
mov
int
nop
in
or
ds
sbb
cmp
jle
inc
jb
and
ss
dec
inc
addb
mov
fldl
stc
mov
enter
scas
sarl
inc
dec
or
hlt
adc
std
mov
fwait
enter
and
sub
addr16
stc
pop
sbb
inc
sub
in
movsb
dec
ret
js
mov
jge
xor
push
xchg
xor
sub
add
xchg
call
mov
sarl
pusha
add
pop
outsb
or
gs
in
jle
xor
test
ss
es
jmp
sub
inc
out
add
outsb
popa
jg
xchg
loop
cwtl
mov
or
movsl
mov
ret
int
adc
fidivrs
or
adc
in
mov
sbb
cmp
mov
rorb
subl
add
push
xor
mov
loop
xchg
repz
adc
and
push
mov
lret
hlt
sub
sub
push
jp
jmp
push
enter
sbb
call
iret
dec
pop
xchg
insb
cmp
push
mov
sahf
mov
insl
call
movsb
mov
mov
dec
lods
outsl
add
jnp
aam
push
push
mov
pop
jge
dec
rep
stc
mov
cmp
sub
xchg
into
dec
push
push
mov
push
repz
fstpl
push
push
test
push
cltd
shlb
jle
test
popa
sub
fcompl
dec
inc
push
mov
add
mov
xchg
xchg
inc
mov
pop
mov
cmc
ds
push
pop
fsin
or
push
ljmp
mov
popa
iret
scas
inc
scas
xchg
addb
cs
push
xchg
lret
ljmp
ja
xor
enter
cmp
xor
jae
sub
ja
mov
mov
pop
pop
shll
nop
mov
cmc
enter
and
scas
jnp
ret
cmpsl
cwtl
mov
shrl
leave
in
mov
inc
mov
push
jle,pt
ljmp
xchg
aad
lods
movsl
or
in
jg
xlat
adc
lahf
xchg
iret
dec
jne
into
xor
call
pop
sub
mov
insb
sbb
mov
and
mov
mov
lahf
jb
mov
bound
popa
lea
jns
movsb
mov
sub
pusha
call
add
add
and
jno
lret
imul
xorb
ss
xchg
loop
mov
rcll
mov
mov
aas
add
repz
sbb
ljmp
cmp
icebp
ss
iret
lods
outsl
imul
push
adc
stos
into
mov
outsl
add
mov
sub
cmpsb
loop
adc
outsl
sbb
in
out
mull
repz
pop
in
sub
mov
adcl
inc
push
or
add
int3
sahf
dec
mov
js
cwtl
adc
xor
push
cmp
pop
aaa
jmp
pop
mov
jbe
cli
inc
jle
mov
pop
mov
sbb
push
movsb
push
mov
mov
ret
inc
nop
adc
insb
dec
mov
fiaddl
or
enter
and
jge
mov
and
and
push
push
mov
jae
loope
fidivs
outsb
xchg
scas
pop
ret
insl
bound
ret
pop
lds
test
add
std
inc
repz
sub
in
add
add
push
les
rorl
push
popa
sub
jmp
or
jns
mov
mov
add
mov
jl
imul
xchg
cmp
addr16
and
dec
xlat
pop
sahf
jp
dec
push
or
nop
inc
add
dec
fstpt
inc
xor
sub
clc
test
mov
out
mov
mov
sub
inc
orb
in
cwtl
mov
sbb
cmpsb
sub
sahf
pop
mov
pushf
test
sbb
or
fcomi
jnp
call
shlb
push
push
and
push
adc
sub
into
mov
outsb
dec
jecxz
mov
pop
add
mov
subb
stos
cli
mov
jo
mov
jbe
stc
add
gs
add
inc
sbb
dec
test
and
xchg
fsts
push
cltd
mov
adcb
xchg
mov
xorb
pop
std
jge
imul
cli
in
aaa
lea
mov
jg
sarl
mov
insb
inc
popf
movsb
int3
add
cs
sarb
sbb
js
xchg
jno
das
mov
fidivs
dec
adc
inc
mov
jo
bt
xlat
out
adc
adc
std
fcmovnb
gs
jae
adc
inc
cmc
xchg
mov
fsubl
sbb
and
orb
add
and
push
or
movsb
push
add
adc
mov
test
cmpsb
xchg
in
xor
sbb
ret
jo
in
test
outsb
dec
push
test
cmp
iret
pushf
cmc
dec
pushf
in
in
insb
and
jb
push
pop
stos
fs
pop
add
stc
add
pop
mov
add
and
enter
int
rclb
xchg
shl
std
adc
jge
push
xchg
push
or
lods
xchg
push
fnsave
aaa
call
dec
insl
ficoml
fbstp
and
jge
scas
mov
xchg
cltd
lcall
push
mov
or
sahf
push
aas
out
sub
std
cs
dec
jbe
dec
negb
mov
cmp
fldl
loopnew
das
je
push
stos
into
ja
test
cmp
dec
and
es
cmpsb
insl
stos
xchg
add
jp
mov
or
iret
test
adc
jb
hlt
sub
ret
xchg
popf
rolb
or
scas
and
push
jge
mov
les
inc
in
adc
xor
inc
sub
iret
push
aaa
addr16
lahf
jb
jnp
sbb
push
stc
sahf
out
push
nop
fcmove
loop
addr16
bound
cs
adc
cs
dec
jge
test
cmp
mov
jb
jmp
repnz
es
xchg
add
in
ja
fadd
mov
pop
stos
pop
fldl
pop
faddl
lret
pop
shrl
fistps
pop
test
pop
xchg
addl
ss
shl
adc
push
xchg
or
add
out
inc
outsl
add
sti
movsb
rolb
imul
jae
cmp
add
or
add
jae
xchg
lods
sarb
ljmp
mov
aaa
and
out
dec
or
lock
xchg
jne
je
aas
mov
ret
test
mov
out
orl
pop
jno
add
mov
negb
add
ret
nop
out
pushf
mov
dec
mov
stos
adc
loopne
dec
shll
jecxz
add
xchg
in
pop
out
adc
or
aad
stos
cmp
adcb
insl
jno
jl
fbld
cmp
pop
mov
dec
add
adcl
addr16
xchg
jecxz
int3
mov
adc
incb
sub
iret
jae
sub
sbb
xchg
ds
leave
dec
aad
shlb
roll
jb
fwait
jle
cmp
aad
push
leave
cld
in
push
movsb
repnz
imul
lock
push
in
inc
and
mov
into
fst
cmp
sub
jne
add
pop
mov
into
mov
aaa
mov
ror
add
jecxz
xor
cmp
clc
icebp
jae
push
test
arpl
push
scas
xchg
cmp
or
test
add
outsl
int
mov
add
jns
push
mov
addr16
push
pop
lcall
mov
sarb
mov
fsubs
xchg
out
cs
rorb
add
sub
jge
push
les
call
int
rclb
pop
xchg
push
adc
out
add
pop
mov
sbb
inc
push
int
pop
mov
stos
lahf
fisubrs
add
cmp
cs
pop
nop
push
or
test
aam
pusha
cmpsb
sti
dec
ficomps
mov
idivb
add
jmp
imul
std
inc
push
ret
push
mov
out
sahf
aas
xor
mov
pop
jecxz
loop
mov
mov
jo
xchg
iret
push
fs
outsl
pop
iret
loopne
push
mov
addr16
shrb
adc
pop
mov
rorb
mov
mov
cmp
mov
rolb
outsl
fistps
add
pop
dec
ret
jp
add
pop
mov
adc
xor
ljmp
lahf
sti
pop
fdivs
fstps
xor
mov
sub
or
sahf
jecxz
arpl
addr16
jb
je
aas
inc
pop
mov
div
cwtl
out
mov
xor
jb
inc
adc
xor
std
adc
xor
push
jmp
adc
dec
orb
push
xchg
lahf
lcall
out
lcall
and
inc
test
nop
sub
call
dec
or
mov
pop
jg
fisttps
add
cmp
es
ss
rol
pop
xlat
jecxz
add
int3
cmpsb
or
adc
mov
add
mov
inc
lods
leave
aaa
fs
outsl
cmpsl
or
pop
inc
inc
xchg
out
int3
popa
cmp
xchg
jo
roll
adc
push
divb
aad
dec
sar
push
cmp
out
bound
jnp
aaa
gs
push
scas
loop
repnz
mov
push
push
aas
push
sbbl
repz
jnp
or
adc
negl
scas
sbb
mov
and
fstpl
fldl
cmpsl
adc
jo
mov
xor
pop
mov
mov
inc
xlat
inc
cmp
mov
pusha
jnp
fmulp
xor
outsb
add
dec
fmulp
mov
sub
rcr
fisttps
xchg
jle
std
cmp
loop
xor
lea
stos
inc
cmp
xor
sub
adc
cmpsl
jbe
dec
cwtl
and
xchg
data16
mov
scas
inc
inc
fbld
aas
loope
xor
sbb
mov
stos
or
in
cltd
sahf
pop
cmp
das
pop
cwtl
cltd
mov
outsb
cmp
movsl
sub
jb
inc
sub
jbe
sub
push
lods
test
test
cmp
js
in
inc
dec
dec
out
jne
repnz
jnp
sbb
repnz
rol
loope
push
cmp
mov
ret
cmp
test
stos
cmp
into
sub
imul
dec
and
stos
push
mov
add
push
inc
push
icebp
xchg
in
sbb
sti
aad
les
rcl
imul
loop
stos
test
mov
int3
push
sbb
std
fisttpl
sbb
pop
xchg
ret
aas
xchg
mov
inc
push
push
pop
push
mov
dec
mov
lcall
lret
xchg
call
fldt
xor
mov
rorb
pusha
test
outsb
adc
mov
imul
outsl
sti
mov
pop
cmpsl
or
pop
xor
inc
dec
and
sbb
pop
shrb
scas
sbb
out
pop
inc
ret
inc
insl
push
lds
cltd
sahf
jle
dec
dec
test
sahf
xor
mov
xor
fcmovbe
sbb
sub
imul
push
enter
mov
sbb
lret
push
jnp
adc
adc
jp
call
add
or
pop
pop
inc
jmp
scas
pop
cli
mov
mov
mov
push
add
sub
jno
adc
cltd
scas
xchg
outsl
inc
xchg
pushf
enter
in
push
xchg
adc
lcall
or
hlt
and
sbb
mov
ja
xchg
roll
popf
inc
mov
gs
icebp
out
popf
pop
seta
sub
test
mov
mov
fstpt
jmp
jge
sbb
pop
aaa
inc
cmp
xchg
dec
push
cmc
xor
in
mov
push
jne
imul
mov
inc
sub
push
jg
nop
aam
mov
push
push
or
loopne
neg
mov
cmpsb
mov
mov
inc
mov
int
fst
mov
in
jmp
insb
mov
add
xchg
pusha
test
cmc
nop
sbb
sbb
lret
dec
dec
adc
adc
in
cmp
push
sbbb
pop
icebp
repnz
sub
xchg
popf
icebp
js
xchg
mov
lock
shrb
sahf
in
inc
pop
xorb
stc
stos
imul
fmul
in
inc
and
push
mov
into
inc
pop
xchg
xor
sub
jae
int
mov
jne
push
out
push
lods
std
ss
sbb
js
or
push
mov
shlb
cmp
scas
fs
pop
ljmp
pushf
movb
push
mov
int
sub
mov
andl
inc
pop
sbb
mov
jle
dec
cltd
xchg
clc
out
int
fidivrs
mov
jge
or
nop
into
push
aaa
movsl
pop
fwait
cwtl
out
nop
addl
sbb
dec
xchg
roll
cmp
dec
outsb
popa
mov
fcompl
xchg
push
inc
out
xorb
or
std
dec
push
jge
movsb
xchg
mov
stos
inc
scas
stos
cli
test
sar
ljmp
pop
sti
jae
and
lock
jne
std
sbb
js
adc
pop
sbb
xor
nop
pop
sahf
shrl
cli
push
cmpsb
loop
push
mov
mov
jb
jecxz
and
dec
fcoms
mov
test
pop
push
fs
jae
lfs
daa
sbb
lea
adcb
into
push
xor
add
dec
add
mov
in
cmp
out
das
pop
movsb
mov
mov
dec
out
jb
push
rorl
popf
ret
das
push
pop
push
sbb
mov
xchg
jb
test
jb
fsubrp
cmp
sbb
negb
test
add
mov
in
adc
loope
inc
iret
rclb
inc
inc
or
inc
push
add
lcall
in
cmp
xlat
fcomps
push
mov
icebp
pop
in
in
dec
add
fsts
xor
jo
jle
mov
fmul
xchg
int
insb
int
xchg
testb
ror
in
pop
push
jno
popa
jle
pop
stos
fisttpll
jle
mov
sub
in
mov
pop
mov
push
push
mov
adc
push
mov
outsb
or
das
xchg
stc
push
pop
scas
mov
mov
or
movsb
cld
outsl
shlb
dec
mov
xor
pusha
jmp
pop
mov
subl
add
push
clc
xor
mov
xor
mov
je
call
lret
dec
packssdw
xor
fildl
sti
xchg
pushf
in
roll
mov
aas
ss
hlt
xchg
push
shl
clc
test
push
push
mov
test
and
xor
jno
pop
call
insb
icebp
or
push
sub
hlt
xchg
pop
sbb
or
add
fdivrl
jl
cmp
sub
sub
dec
popf
imul
mov
xchg
lret
lds
stc
xchg
cli
or
loope
pop
xchg
mov
popa
inc
pop
jmpw
insb
mov
dec
btr
ja
or
jae
push
mov
and
xchg
dec
sub
push
sar
sahf
jb
lret
xchg
xchg
fsubrl
out
call
mov
cmc
rcl
divl
adc
ret
jp
mov
xchg
test
dec
sub
sub
lock
sub
sar
sbb
dec
jmp
jb
sub
xor
mov
fsubrp
push
push
mov
fwait
cmpsl
lahf
mov
jo
mov
sti
inc
notl
call
ds
or
mov
loop
push
outsl
mov
mov
and
cld
sbb
data16
fmull
fadds
shlb
mov
or
mov
insl
xor
test
mov
js
mov
ljmp
mov
push
adc
out
mov
in
adc
jne
push
pop
loope
jge
rcrl
jbe
mov
mov
and
xor
dec
xchg
aam
mov
scas
out
pushf
push
inc
push
xchg
xorb
cmp
mov
pop
in
rcll
testb
repnz
lea
xchg
cmp
jo
movsb
stos
xlat
pusha
dec
test
xor
enter
adcl
fxch
adc
loope
sti
pop
inc
push
fs
jmp
xchg
mov
sbb
add
mov
int
arpl
xorps
mov
jge
push
stos
repz
lods
loope
loopne
xchg
or
mov
lods
xorb
adc
sbb
in
mov
sahf
cmpsl
popa
push
push
mov
rclb
sub
xor
daa
push
sbb
outsl
mov
loopne
mov
push
xchg
nop
aaa
lea
sbb
dec
xor
hlt
test
xlat
test
out
hlt
insb
dec
sub
movsb
push
mov
push
shll
jbe
mov
imul
jg
rolb
mov
in
loop
mov
xlat
cmp
adc
push
jo
sbb
cmp
stos
mov
addr16
jp
testl
bound
test
push
push
fldt
pop
mov
outsl
call
mov
add
jg
outsl
negb
imul
mov
dec
out
mov
bound
sbb
movsl
pusha
inc
xchg
pop
pusha
std
adc
xchg
jle
push
mov
xor
in
outsb
adc
jbe
das
stos
inc
mov
adc
testb
aam
popa
or
loope
xchg
sub
add
imul
cld
mov
mov
clc
add
shll
sarb
xor
xor
cli
and
ss
sti
into
mov
daa
and
xor
add
mov
cwtl
xor
rclb
int
pop
int
dec
lcall
stos
and
mov
lock
inc
mov
mov
mov
lcall
mov
add
jbe
mull
hlt
sahf
setae
subb
cmp
push
test
pop
mov
xor
popa
test
in
mulb
xchg
wbinvd
mov
int3
ljmp
xchg
xchg
cmp
cmp
xchg
sbb
push
sti
mov
or
pop
adc
dec
sahf
xchg
cltd
out
xor
adc
inc
inc
int
push
jge
leave
popa
dec
xor
js
or
pop
and
test
xor
sub
lret
and
shlb
cmp
or
lret
pop
rolb
jno
mov
dec
scas
jge
push
hlt
outsl
iret
cltd
adc
outsl
or
push
sub
inc
cmovp
sub
xor
pop
test
jl
mov
push
mov
cli
mov
and
bound
test
icebp
jge
outsl
fucomi
fdivrl
les
stc
or
dec
shrb
stos
les
cwtl
imul
mov
add
scas
dec
lea
fsubr
mov
les
dec
dec
pop
pop
mov
insl
in
sti
xlat
pop
or
sbb
dec
cmpsl
divb
mov
repz
aaa
pop
adcb
jne
jbe
in
cmp
dec
imul
jno
fwait
sbb
or
sbb
iret
loopne
out
jecxz
mov
cmpsb
add
mov
hlt
out
xor
bound
cmp
leave
push
push
pop
outsl
in
cmp
pop
pushf
lret
inc
or
sub
or
rdpmc
shlb
add
fisubs
std
adc
dec
stos
imul
lock
pop
outsb
out
inc
add
cmp
jp
mov
icebp
inc
pop
pop
sarb
cmp
push
std
mov
sbb
jg
xchg
push
popa
push
mov
out
test
xchg
sbb
out
inc
mov
and
sbb
xchg
aaa
pop
aad
mov
mov
push
dec
repz
jmp
or
fisubrs
add
add
lock
cmp
jns
insl
fmuls
dec
dec
adc
xor
shl
or
cmpsb
push
sti
add
push
jae
inc
sarl
add
jns
rcll
js
call
fisttps
decl
and
mov
inc
mov
scas
insb
xor
stos
dec
shrb
cmp
sbb
insl
pop
aam
sbb
insl
mov
roll
cmp
shrb
lods
mov
rcrb
sub
loope
lret
insb
imul
xor
repnz
roll
outsb
lea
pushl
shll
dec
clc
xchg
xor
adc
sub
lret
mov
cmc
pop
jmp
call
inc
inc
jns
mov
push
pop
idiv
push
std
adc
in
cmp
xchg
adc
or
das
inc
sbb
jb
add
cltd
lods
sbb
lods
hlt
xchg
push
aad
test
and
cmp
jmp
jmp
scas
test
ret
inc
sbb
mov
cmpb
mov
mov
in
adc
es
sarb
test
and
popf
dec
mov
fidivs
xor
nop
repz
push
addr16
stos
mov
pop
or
xor
push
cmp
inc
mov
jbe
pop
lea
adc
xchg
xchg
scas
mov
mov
jno
mov
dec
mov
shll
mov
push
add
add
aaa
sub
cwtl
cmp
repnz
test
cld
xor
dec
adc
or
testb
inc
sbb
js
mov
xchg
into
aaa
les
push
fwait
lcall
ljmp
repnz
test
cld
add
in
adc
shll
mov
in
pop
ret
push
adc
pop
push
out
movb
xchg
cmpsl
daa
je
dec
dec
adc
adc
push
ret
test
pusha
cmpl
hlt
lock
pop
and
push
push
mov
aaa
cwtl
mov
in
aaa
mov
out
adc
repz
or
pop
stos
mov
fdiv
adc
xlat
stos
push
xor
pop
sub
cld
inc
mov
ret
sti
movb
xor
fucomip
xchg
ret
xlat
inc
shl
sti
mov
jns
addl
jbe
xchg
pop
jb
sbb
adc
sub
fdivr
dec
push
imul
dec
into
repnz
xchg
xor
push
jno
inc
mov
sahf
xor
xchg
adc
push
xor
cli
outsl
popf
rol
push
testb
adc
stos
test
push
pop
daa
dec
jbe
inc
mov
and
fsubrl
sbb
leave
cmp
dec
fistps
scas
and
xchg
lods
mov
push
cld
sarl
and
dec
sbb
jo
sbb
xchg
sti
xchg
das
mov
fidivl
mov
xor
xor
pop
int3
sbb
nop
clc
arpl
mov
inc
sarl
mov
scas
popf
and
push
xchg
popa
jne
xchg
xchg
mov
pop
fwait
stc
add
aam
inc
mov
inc
out
lock
ds
inc
push
aaa
mov
fucomi
stc
int
mov
jnp
xchg
push
and
mov
adc
xor
out
mov
std
jae
rorl
jmp
inc
push
mov
popw
rolb
dec
jb
sub
js
mov
sarb
stc
cmp
cmp
jo
cli
or
cmpsb
mov
sbb
lret
sbb
lods
xor
add
push
pop
pop
mov
lret
ds
push
mov
sub
into
std
xor
mov
bound
dec
adc
data16
sbb
xchg
xor
pop
mov
adc
fcmovne
lret
jle
adcl
jnp
fstpt
mov
mov
rcll
js
movsb
or
and
imul
add
gs
sahf
incb
mov
push
push
jl
lret
cltd
ljmp
imul
fxch
stos
push
test
dec
pop
popl
sub
loopne
leave
add
imul
outsb
jnp
xor
lret
jne
outsl
push
add
mov
movsb
movsb
dec
push
mov
int3
fstl
inc
push
lret
mov
jne
pop
pop
mov
int3
mov
mov
push
adc
ror
fsts
test
ss
pushf
mov
cmp
push
mov
js
sbb
add
test
sub
call
mov
dec
mov
icebp
ds
pop
test
arpl
aam
scas
cmp
mov
and
popf
sub
outsl
jnp
ret
add
mov
sub
pop
test
in
stos
mov
mov
movsl
push
push
adc
testb
pop
mov
mov
sbb
sbb
inc
mov
or
fptan
movb
call
inc
cltd
sbb
push
cmc
cmp
lahf
aas
push
sbb
push
fsubrl
aaa
test
aam
adc
or
imulb
sbb
xchg
inc
inc
dec
mov
icebp
jo
mov
xchg
rorb
pop
sbb
sbb
inc
push
arpl
mov
loopne
adc
adc
push
rcll
pop
and
or
push
loopne
or
rcrl
xchg
iret
ss
jno
jb
push
bound
xlat
push
insl
push
lret
or
adc
xchg
or
cli
outsb
xor
outsb
dec
push
sub
xor
mov
in
imul
and
or
mov
dec
in
lods
or
mov
cmpsl
push
lods
sbb
xorb
ds
pop
iret
scas
pop
jns
daa
mov
cwtl
inc
mov
push
cmp
push
popa
or
cmp
icebp
fld
mov
sti
shll
mov
dec
and
ror
mov
push
jno
popa
cmp
mov
xor
into
jbe
and
out
ds
sub
insb
lret
test
test
shl
mov
push
jb
outsb
pop
mov
xchg
push
mov
outsl
pop
inc
sub
mov
sbb
or
dec
addb
fistl
lcall
jg
xor
cld
ss
lock
add
adc
clc
ds
cli
lret
push
jno
mov
mov
add
xor
ja
insl
leave
adc
xchg
fadd
sahf
dec
scas
or
scas
cmc
or
fwait
jae
lahf
cmp
or
mov
popa
xor
imul
sbb
xlat
jo
stc
inc
push
pusha
fsts
cwtl
in
and
cmp
test
imul
jb
or
loopne
aaa
outsb
orl
fnsave
in
push
xor
jle
xchg
pop
jp
push
pop
mov
mov
xor
out
movb
mov
test
mov
dec
push
sbb
sbb
adc
fidivrs
test
dec
xor
jecxz
ret
icebp
pop
jo
movsb
push
adc
mov
add
insb
jp
call
lret
mov
les
push
ss
or
and
andl
dec
sub
leave
mov
mov
inc
daa
jb
iret
in
std
in
incb
outsl
adc
jns
lock
cmp
add
inc
or
loope
cmp
push
cmpsb
scas
jp
dec
incb
stos
inc
pmulhw
shlb
jle
sti
loopne
mov
or
enter
xchg
xor
xor
inc
pop
or
xlat
movsb
filds
jbe
iret
mov
adc
shl
adc
dec
ja
pop
insb
dec
dec
sbb
sbb
inc
inc
in
ss
dec
dec
adc
int
and
into
cmp
jl
addr16
sub
aad
dec
les
add
nop
enter
push
call
pop
sarl
dec
mov
stos
movsb
inc
sahf
iret
popf
pop
repz
jmp
sbbl
adc
and
roll
and
lcall
jmp
inc
push
push
icebp
daa
lea
mov
into
sti
jne
lods
sub
dec
cmp
cmp
je
ds
subl
scas
or
jae
je
je
push
push
sub
les
cmpsb
rclb
inc
cmc
mov
popf
int3
jbe
jns
divb
sub
jecxz
dec
movsb
jb
inc
in
inc
xchg
mov
inc
lahf
shl
std
xchg
test
push
cltd
xchg
pop
cli
fs
imul
icebp
sbb
ret
and
pop
jle
test
outsb
and
cld
jnp
push
scas
es
gs
pop
dec
mov
mov
lret
cmpsl
ret
dec
in
idiv
testb
addb
dec
lcall
clc
fld
into
idivb
jae
push
pop
inc
xchg
das
das
and
or
sub
aam
dec
pop
inc
push
mov
bound
sub
cld
add
mov
imul
scas
dec
and
nop
or
sbb
push
popa
mov
das
jbe
mov
insl
mov
mov
pop
enter
fnstenv
or
or
mov
jg
inc
hlt
rcl
imul
mov
add
ds
mov
lods
mov
jbe
adc
push
mov
cmpsl
xchg
aad
repz
push
stos
jnp
push
mov
add
int
inc
not
mov
pop
aas
fidivs
cmovns
and
dec
cmc
jno
test
mov
nop
cld
in
sbb
xchg
xchg
sub
jns
adcb
mov
leave
cmpsl
mov
in
or
push
jbe
adc
mov
ja
and
rcr
adc
jb
out
add
flds
ja
fmuls
sub
cmc
or
int3
inc
sbb
add
popa
pop
or
jg
enter
cmpsb
cmp
addr16
lods
pop
fldcw
ds
dec
jnp
adc
xor
fwait
adc
ljmp
jl
gs
push
out
sbb
popa
mov
scas
mov
sub
and
mov
lahf
xchg
cmp
out
pop
and
jne
mov
push
or
or
push
add
push
add
sbb
push
addr16
xchg
xor
dec
and
xor
sahf
jg
sub
popf
mov
mov
sub
stc
xlat
ror
ljmp
fisubrs
jbe
jne
sbb
cmp
pop
jecxz
fistpl
cltd
arpl
xchg
lods
cwtl
test
mov
out
loop
sbb
sub
lahf
cmpsl
push
stos
into
cli
dec
jae
xor
fcos
ja
push
lods
outsl
xor
mov
lret
sub
arpl
or
adc
push
lods
lret
adc
mov
inc
xchg
mov
jnp
jae
test
les
push
push
and
cld
cmp
lods
jne
and
pop
ja
mov
sub
push
mov
push
stc
pushf
mov
adc
inc
int3
and
adc
mov
xor
jl
shlb
mov
mov
xchg
add
mov
stc
jecxz
les
mov
inc
out
movsb
mov
adc
inc
repnz
xlat
inc
push
insl
jge
push
imul
mov
lcall
mov
push
ja
pop
dec
mov
xorb
fisttpl
or
add
push
sbb
outsb
call
xor
ret
add
dec
jg
movsl
ret
push
mov
add
icebp
add
or
push
xchg
mov
push
test
andl
pop
fwait
cs
fmulp
daa
adc
out
inc
xchg
pop
xor
inc
fists
push
pop
clc
sbb
fsubrp
inc
mov
in
xchg
jns
fdivs
xor
int
out
stos
and
lret
xchg
cmpl
jg
nop
addr16
mov
lea
cwtl
sub
jg
sbb
xorb
fs
cmp
call
mov
cli
hlt
popa
fbstp
out
out
xor
add
cmp
push
movsl
aam
pusha
cld
sbb
sbbl
stos
mov
mov
sbbb
filds
cmpsl
imul
sub
stos
test
std
push
inc
notl
jg
stos
pop
or
inc
add
outsb
jl
enter
pop
xor
cmp
inc
cld
aad
ret
sub
push
lock
fwait
daa
mov
mov
mov
inc
mov
das
mov
mov
or
and
jne
mov
adc
insb
xor
jp,pn
leave
clc
or
pop
and
fdivs
lcall
rclb
mov
push
aad
fcoms
nop
mov
mov
leave
icebp
stc
dec
xchg
lea
cmp
add
sti
pop
faddp
lods
sbb
sarb
test
jae
into
mov
push
xchg
scas
int3
loopne
push
push
das
cli
int
out
mov
insl
aaa
cs
pop
pop
mov
xor
adc
notb
ja
mov
stc
xchg
outsb
addb
jnp
add
scas
fwait
mov
and
icebp
xchg
shll
dec
and
mov
mov
mov
mov
xor
xchg
test
xchg
divb
mov
cmp
movsl
lock
pusha
or
sub
in
adc
inc
cmpsl
or
in
outsb
push
mov
movb
xchg
or
mov
pop
push
shlb
add
daa
fisubl
push
sbb
mov
pop
mov
aaa
inc
mov
inc
fld1
add
inc
mov
push
pop
cmc
inc
cld
divb
lea
int3
jmp
movsb
mov
lcall
xchg
mov
xor
pop
sub
stos
out
sbb
arpl
sub
mov
or
fsub
lock
ret
dec
ljmp
or
outsb
hlt
scas
jo
cmpsl
mov
fisttpl
in
or
pop
or
insb
outsb
and
movb
cmp
inc
and
sbb
stos
fisttps
in
adcb
push
insl
sbb
jne
sbb
cwtl
lods
fs
out
lcall
test
cmpsb
inc
and
sbb
rolb
push
push
adc
shll
fildll
popf
mov
lret
pop
lret
sub
movsb
jle
add
into
shrl
jbe
call
dec
lcall
bound
repz
iret
pop
fwait
ret
inc
repz
ljmp
sub
jl
xlat
je
mov
popf
stos
inc
and
pop
add
xchg
iret
push
out
add
repnz
call
push
in
je
int3
cmpsb
mov
sahf
push
fidivl
xchg
inc
mov
and
mov
movsb
or
pop
lds
ss
lcall
std
shrl
push
cmpsl
dec
lret
in
jmp
inc
jp
outsb
scas
dec
in
inc
rcll
jl
pop
stos
pop
mov
add
mov
mov
push
push
sub
lret
scas
outsl
dec
andb
adc
clc
ja
xor
xchg
inc
int
pusha
push
and
adc
sub
imul
push
mov
push
pop
or
jmp
jo
cmp
jae
aad
arpl
sbb
clc
jae
xor
sub
jmp
or
lods
aaa
paddusb
pop
xor
xor
adc
out
arpl
imul
jp
icebp
push
loope
xchg
adc
fsubrl
mov
pusha
mov
adc
inc
bound
lea
fadd
push
push
cmp
fidivs
adc
xchg
popl
mov
sbb
imull
xchg
mov
sti
jo
cmp
xchg
mov
fs
push
mov
pop
loop
sbb
cmp
das
ds
sbb
lea
and
push
int
aad
subl
xor
xchg
cmp
std
dec
add
repz
outsb
push
push
subl
jno
sbb
cltd
ret
es
fisubl
hlt
sahf
movsl
rclb
es
das
or
bound
mov
sbb
push
adc
inc
fisttpll
cld
rorl
add
repz
inc
jb
sbb
sbb
shrl
lcall
mov
dec
inc
push
jg
jne
es
sbb
les
adc
push
pushl
fisttpl
xlat
jo
clc
cmp
mov
ss
js
jnp
xor
push
dec
gs
sub
lahf
xor
shlb
test
outsl
xchg
and
sub
xchg
popa
or
sub
dec
aaa
stos
stos
cmpsl
jecxz
pushf
jl
lods
sahf
icebp
push
xchg
cmp
mov
fadd
loop
inc
fdivrs
test
nop
push
lcall
pop
and
inc
pusha
mov
ja
insb
pop
pop
mov
pop
pop
shrl
or
mov
popf
test
xchg
les
es
or
push
aad
lds
push
xor
and
push
push
movsb
es
adc
xor
stc
cli
test
jnp
ret
sbb
sbb
stc
jbe
loopne
xchg
insb
imul
jo
xor
out
push
pop
into
popf
mov
shrb
lods
xchg
jg
sbb
cmp
pop
aad
daa
mov
add
xor
aad
jp
sbb
or
rcl
xchg
fs
jb
inc
orl
outsb
or
das
scas
test
cs
xchg
inc
shll
jns
pop
jg
js
xchg
fsubr
xor
mov
aam
ja
clc
push
scas
pop
mov
mov
outsb
test
xchg
pop
add
add
lds
shl
pop
dec
sbb
jb
push
xchg
mov
jecxz
pop
cmp
test
shl
shll
xchg
pushf
loop
push
mov
xchg
push
and
xchg
mov
xor
and
and
enter
push
add
inc
add
xchg
jg
fdivrs
clc
jns
call
repz
fildll
push
add
ret
arpl
dec
scas
movl
xchg
sti
xchg
xor
scas
loop
xor
mov
jecxz
test
shl
push
or
fs
aaa
fwait
xlat
push
je
jg
xor
sub
inc
loop
cmp
loopne
cmp
or
xchg
fisttpl
cltd
fcoml
scas
lea
mov
mov
incl
shl
pop
add
jmp
ret
mov
jecxz
sbb
mov
add
in
outsb
fidivrs
xor
fimuls
inc
orl
jne
mov
mov
rol
aam
lcall
mov
add
js
push
push
roll
and
setge
bound
testl
aas
jecxz
dec
loope
sub
mov
fadd
stos
roll
out
arpl
sub
pop
jo
pop
cmpsl
or
push
xorb
and
lret
sbb
xchg
shrl
push
push
add
or
cmp
pop
sbb
js
and
or
setne
movsl
cmp
lahf
jge
mov
push
inc
in
int3
cmpsb
iret
pop
cld
jbe
lcall
outsb
insb
jae
movsl
dec
mov
mov
mov
call
ret
pop
out
ret
jmp
pop
xlat
shll
mov
aas
clc
out
mov
sahf
pop
sub
sbb
add
repnz
lret
leave
and
xchg
cmp
sub
mov
lahf
dec
bound
adc
dec
pop
int3
xor
shrb
or
sbb
pop
xor
xchg
adc
mov
setl
mov
sarl
xchg
push
out
sub
popf
mov
pop
push
mov
and
call
out
in
jmp
fwait
push
shrl
push
mov
pop
mov
pop
and
ljmp
mov
jno
mov
icebp
fs
xchg
ficompl
iret
xor
mov
pop
pop
mov
inc
xor
jle
mov
xchg
fsts
mov
out
mov
loopne
loopne
dec
test
add
arpl
out
js
jp
mov
fldl
xor
push
popf
mov
ret
or
mov
data16
mov
mov
adc
test
sbb
aas
jp
sbb
inc
xor
xchg
add
rorb
aam
add
popa
daa
rol
cmpsl
ds
and
repz
imul
sub
inc
gs
repnz
fcomp
or
out
stc
mov
push
xchg
repnz
jge
jg
dec
and
xchg
imul
jmp
dec
add
ss
int3
fdiv
dec
aaa
iret
mov
mov
jecxz
lds
adc
mov
mov
pop
fucomip
xlat
rcrb
xchg
in
mov
xchg
mov
fwait
xlat
call
fsubl
ja
mov
fdivr
mov
repnz
ret
pusha
push
adc
movsl
cmp
push
pop
dec
out
shrb
mov
mov
and
fistl
pop
stos
jns
ret
xchg
jbe
rorb
filds
lea
inc
shrd
bswap
and
push
loope
xorl
or
ja
pusha
ljmp
roll
xor
add
sbb
loop
jle
sbb
fucomi
stos
ret
jo
repnz
xchg
xchg
aad
jle
xchg
sub
pop
push
loop
out
nop
fisubs
negl
ret
roll
rolb
pop
sar
push
xchg
add
jno
fbstp
fldcw
jne
div
sbb
sbb
jns
push
and
test
repnz
loope
in
sub
jb
cmp
adc
fisubl
lods
inc
xchg
dec
sbb
cld
insb
and
dec
dec
sub
push
xor
xlat
fs
mov
sti
addr16
cmp
outsb
pop
jae
bound
divb
push
sbb
andl
fwait
ja
lret
and
jp
aam
or
pop
sahf
dec
jecxz
xchg
lret
jge
sub
push
push
mov
mov
call
xor
xlat
cmp
out
stos
icebp
cmpsl
lds
pushw
out
daa
inc
and
into
xorl
lret
jge
xchg
loop
add
int
inc
xorl
jg
arpl
or
rcl
lea
jne
xchg
pop
jnp
sub
mov
mov
ja
mov
out
shl
fs
test
push
sarb
pop
lcall
xchg
movl
push
in
pop
aas
mov
add
push
rcl
and
insl
pop
int3
ret
inc
outsl
cmc
sarl
fcompl
out
mov
mov
xchg
rorl
cmc
sub
xor
adc
dec
mov
mov
addr16
and
mov
and
adc
dec
repnz
stos
pop
int3
imul
fldl
push
inc
mov
mov
mov
aam
orl
pop
mov
movsb
push
sti
ret
sbb
js
inc
and
mov
not
scas
push
inc
rorb
jns
xchg
jae
les
adc
and
cmp
sbb
pop
jb
sbbb
adc
jge
adc
push
sub
sarb
jmp
ljmp
aaa
push
adc
pop
inc
outsb
push
xchg
stos
hlt
push
or
test
xlat
mov
cmp
sbb
adcl
fsubl
push
lods
daa
stos
sub
test
in
xchg
std
or
in
push
and
jbe
mov
xor
les
popa
negl
and
ja
sub
mov
xchg
sub
xor
mov
mov
adc
xchg
sub
inc
je
push
jns
dec
dec
pop
test
test
jl
fnstcw
pushf
popa
ret
xchg
rcr
nop
cmp
mov
mov
and
je
fimull
test
push
and
xor
push
in
add
les
stc
xor
add
adc
sbb
popf
xor
loopne
jbe
mov
shlb
pop
dec
mov
jns
sbb
imul
push
and
insl
dec
out
sub
lret
mov
mov
push
mov
and
mov
push
xorb
or
dec
and
clc
push
sub
push
lods
mov
ja
lods
inc
inc
cmp
xchg
imul
mov
int3
ds
push
add
push
ljmp
sbb
sub
pushf
jae
int3
push
sbb
mov
sbb
sbb
sbb
lods
fwait
popa
xchg
add
lods
shrl
test
pop
test
hlt
test
into
adc
outsb
pushf
cmp
lahf
push
mov
arpl
xorl
jns
jge
inc
xchg
sbb
adc
jg
and
pop
mov
jbe
fmuls
cmp
fisttpll
push
popf
sbb
sbb
loopne
adc
notb
inc
jae
ss
adc
scas
mov
add
stos
jnp
testl
rclb
mov
adc
xor
push
ficoml
push
ffree
sub
mov
inc
sbb
shr
add
inc
sub
mov
lds
jb
das
jg
inc
shl
cmp
mov
pop
push
and
je
sbbl
mov
cmpsl
mov
mov
pop
popf
mov
shr
je
mov
aad
inc
xor
movsb
push
and
rcrb
outsl
lea
adc
or
sub
push
or
mov
mov
add
filds
int
outsl
mov
dec
imul
mov
add
dec
sbb
lock
add
scas
aam
dec
push
test
int3
mov
cltd
fs
shlb
pushf
xchg
cmp
and
ja
loop
rcrl
int3
aad
test
pushf
cmp
and
mov
jge
rclb
cmc
mov
clc
xchg
xlat
and
and
pop
call
add
inc
and
out
aad
repnz
insb
fistps
add
ret
and
ret
xchg
push
cmpsb
and
mov
xchg
mov
jg
fstps
aas
add
scas
in
push
pop
das
mov
push
sub
mul
adc
and
sub
insl
cmp
xchg
loope
shr
cmp
dec
roll
sub
fiaddl
jle
inc
cld
scas
cwtl
and
sbb
repnz
xchg
dec
push
orb
mov
das
inc
push
out
xchg
mov
push
jae
inc
movsl
add
add
mov
adc
arpl
aas
pop
cmp
or
stos
ret
jl
fs
shlb
and
mov
fists
movsl
mov
pop
out
cmp
sub
dec
sbb
jle
cs
fdivs
pop
out
cmpb
push
push
stos
into
jecxz
call
test
inc
cmp
subl
pop
loope
mov
pop
jb
fstpl
insl
leave
xor
mov
cmc
iret
rcll
stc
mov
pop
mov
in
loope
or
mov
adc
roll
rcrl
dec
inc
mov
fwait
insl
popf
dec
das
add
jmp
mov
notl
cs
fdivp
jge
sub
xchg
out
jge
mov
adc
pop
mov
insl
insl
das
shll
jle
and
dec
cmp
push
mov
popa
dec
pop
xlat
pop
jne
sti
mov
sahf
stos
inc
outsl
int3
or
outsl
or
sub
sbb
sub
cs
mov
push
push
adc
icebp
push
jb
sub
lcall
rcrl
dec
cmp
xchg
mov
pusha
and
test
jb
jb
nop
mov
mov
mov
ds
cmpsb
xchg
cld
pushf
jbe
add
test
repz
dec
and
mov
xchg
xlat
sbb
dec
movsl
hlt
adc
mov
adc
pop
jp
mov
ret
les
lods
imul
lea
jecxz
filds
xchg
cmpsl
jle
stos
jge
xchg
out
pop
inc
cld
pop
cmp
jbe
lret
sbb
push
jl
push
movsl
mov
sub
outsb
das
or
stos
xchg
dec
leave
lock
roll
aas
test
repz
xchg
and
xchg
jbe
add
jmp
stos
sbb
cmp
ret
hlt
lds
inc
in
mov
clc
iret
xchg
dec
cmp
movsl
xchg
scas
mov
xchg
inc
sbb
incl
mov
mov
fisubrl
fimuls
mov
adc
mov
inc
mov
sarb
fimull
cmp
rcrb
pop
test
test
adcb
fdiv
js
scas
push
arpl
xchg
mov
add
and
orl
daa
jnp
xchg
pop
cmp
adc
int3
cmp
cmpl
lea
push
data16
or
add
stc
jae
out
jl
adc
and
mov
sub
xor
add
add
cmp
or
fildll
and
js
mov
std
mov
adc
shrb
shll
insb
sti
into
pushf
push
mov
lea
mov
movsl
push
repz
int3
jmp
jge
sub
pop
mov
sub
xchg
insl
sub
xchg
sbb
and
jmp
outsl
fucomip
jnp
sbb
xchg
ja
push
data16
aas
adc
gs
inc
dec
fadd
or
ljmp
push
sbb
incb
pop
jg
lea
inc
jle
faddp
repnz
mov
or
or
inc
jnp
mov
adcl
notl
lds
pop
in
in
sahf
mov
test
inc
mov
inc
rclb
cltd
xchg
push
insl
fildl
jecxz
testl
xchg
adc
sbb
loope
lret
mov
sahf
lds
inc
and
stos
ja
repnz
jae
pushf
inc
or
or
aam
lret
cli
pop
jmp
pop
sub
mov
daa
push
pop
sbb
add
sbb
push
sahf
out
xor
inc
dec
adc
es
xchg
sub
imul
mov
xor
mov
shl
push
jnp,pn
push
mov
mov
out
lock
push
scas
pop
hlt
sub
jg
mov
mov
je
arpl
lock
out
and
inc
sub
scas
sbb
xor
insb
sbb
xchg
insl
fsubl
test
fsubl
cmp
cmp
ret
and
insb
pop
push
inc
sub
pusha
pop
pop
jp
divb
inc
sub
sti
inc
fs
xor
adc
or
ret
or
jp
imul
adc
pusha
sbb
mov
and
aam
cmp
adc
dec
sub
and
data16
stos
or
or
add
inc
jno
ret
sub
push
push
movsb
ret
sbb
and
mov
or
cmp
push
push
test
pop
sbb
dec
cli
mov
popf
jmp
lods
jbe
in
mov
mov
imul
shll
sub
test
nop
push
mov
add
lds
clc
aas
and
mov
and
jge
popa
rorl
pop
leave
inc
loope
sbb
xor
or
rcl
mov
std
jge
hlt
cs
enter
adc
mov
adcl
inc
nop
push
mov
add
repz
and
enter
bnd
pop
ret
aad
push
sub
aas
fbstp
addr16
ja
cmp
inc
aad
int
push
pop
inc
out
lods
int3
cmp
loop
jl
dec
sbb
adc
je
xchg
dec
jb
stos
mov
daa
cmp
icebp
pop
pop
dec
and
xchg
ss
sbb
dec
outsl
xor
mov
xchg
cmp
dec
sbb
outsb
push
pushf
mov
pop
mov
mov
mov
loop
shrl
shl
imul
lods
lahf
adc
push
iret
fcmovnbe
xchg
and
loope
mov
push
repz
je
cmc
cmp
popa
mov
adc
and
sti
test
out
jle
cld
pop
mov
push
sub
cwtl
loopne
dec
fwait
lea
leave
push
shll
movl
jecxz
jecxz
inc
roll
and
push
jae
xchg
test
dec
xor
and
insb
imul
addr16
std
pusha
add
jb
clc
dec
out
dec
cmp
fwait
bnd
jnp
mov
lock
push
sbb
scas
sbb
insb
popa
mov
xor
mov
out
pop
mov
mov
call
arpl
dec
or
addr16
push
lcall
mov
shlb
mov
loopne
popf
mov
enter
xor
xor
jmp
xchg
xor
stos
and
dec
aam
loopne,pn
das
inc
das
dec
mov
cli
pop
pop
push
push
push
mov
aaa
sbb
sub
mov
pop
and
push
inc
sub
jl
jl
rorl
fnsave
push
pop
xchg
cs
jle
sbb
lret
gs
jmp
nop
xchg
push
inc
inc
adc
lock
scas
jp
inc
rcrl
inc
cmpsb
fwait
xchg
jle
push
test
popa
mov
mov
xlat
mov
je
cmp
int3
mov
lret
adc
mov
add
sub
scas
aaa
push
sbb
push
mov
or
test
or
popf
aaa
xchg
in
xor
mov
aas
into
ds
inc
pop
push
xchg
lret
into
mov
xchg
jnp
call
mov
cli
leave
push
sti
mov
mov
or
popa
cmp
ds
insl
xchg
pop
js
jp
in
cmpsb
iret
mov
es
or
cltd
cmp
in
lcall
es
popf
adc
or
xchg
dec
sub
xor
test
pop
popf
outsb
jecxz
sub
jp
sub
pop
sbb
add
pop
in
adc
inc
insb
imul
xlat
test
mov
in
and
cmp
lret
cmp
cs
dec
stc
push
mov
mov
adc
inc
lcall
out
mov
jbe
mov
into
mov
out
test
and
cmp
fstpl
jge
push
pop
mov
fsubrl
sbb
int
mov
pop
pusha
roll
push
lds
push
xor
sahf
adcl
inc
jle
add
mov
insl
iret
jge
and
adc
shr
mov
dec
pushf
data16
out
std
mov
xchg
inc
add
movsb
dec
and
ret
push
in
cltd
ja
ja
cmp
push
push
add
jle
cmp
out
jne
dec
jbe
jne
adcl
xchg
call
popf
mov
repnz
out
iret
pushf
popa
in
xor
stc
lret
cli
pop
ja
jne
mov
popw
mov
or
out
lds
aam
cmovb
add
imul
xor
adc
mov
or
pop
and
pushf
cmp
push
cmp
negb
ret
mov
std
add
or
cs
shl
jne
push
aam
call
lds
divl
xchg
pop
std
sbb
or
lret
scas
aam
push
add
fsts
xchg
xor
insb
dec
shl
mov
inc
ja
mov
ja
test
ret
dec
icebp
sbb
in
xchg
mov
xlat
push
inc
ud1
aad
jnp
mov
add
fcmovnu
cmpsb
adc
ret
jb
inc
cmp
mov
adc
and
cmp
out
out
add
inc
adc
jne
fadds
lcall
push
push
hlt
rcrb
pop
mov
sub
sub
add
insb
cmp
mov
and
leave
imul
sti
dec
push
ljmp
lcall
dec
lret
jl
dec
fs
pop
stc
es
test
mov
insl
sarb
mov
xor
test
jae
ficompl
sbb
nop
loop
add
fcoml
int3
cmp
cmc
lods
psrad
sub
jecxz
int3
ds
push
mov
cmp
mov
inc
push
enter
push
pop
xor
insl
jmp
xor
push
lock
bound
iret
movsb
ds
lea
xchg
jge
jnp
xor
and
mull
cltd
jnp
stc
pop
add
mov
in
in
add
in
int3
lcall
fldcw
inc
fmull
cwtl
push
aaa
sub
push
outsb
or
frstor
je
push
jl
dec
push
aad
sahf
int
jge
fwait
mov
dec
mov
popa
js
lock
pop
imul
test
ret
mov
and
test
repz
mov
stos
xor
out
pusha
or
nop
cld
aam
cld
fldt
mov
into
jmp
mov
jmp
stos
cld
les
mov
sub
pop
ss
lret
rolb
sub
aas
xchg
push
pop
mov
mov
jp
fcomi
lret
das
xor
add
jo
inc
rcrb
hlt
int
fsubrp
xchg
cmc
dec
out
adc
pop
fwait
or
test
mov
push
notl
repnz
lods
out
mov
jg
lods
shr
sbb
mov
popf
mov
imul
or
jmp
out
jecxz
stc
enter
dec
and
insl
push
aaa
cltd
out
fdivr
out
sub
push
sub
or
mov
rolb
ljmp
xor
loopne
push
jmp
in
sbb
sub
lea
fs
pop
clc
sti
jle
sti
lret
adc
mov
sbb
pop
cmp
xchg
in
mov
mov
jl
add
lcall
in
xchg
and
or
shrl
add
pushf
mov
aad
leave
dec
ja
sub
xchg
mov
inc
mov
xlat
mov
pop
xor
pop
jo
and
sbb
xchg
sub
mov
scas
in
sti
cmp
mov
dec
sbb
mov
dec
std
mov
fdivrs
push
inc
aam
divl
sbb
lahf
mov
out
jmp
mov
mov
push
fsubs
pop
insb
mov
je
push
mov
mov
mov
negl
in
pop
sub
sbb
hlt
mov
jge
jge
scas
xor
loope
jle
cmpsb
jo
cmp
jge
xchg
and
ss
jge
sbb
insb
aad
cmpsl
dec
aaa
add
jnp
mov
mov
popl
dec
fnstsw
mov
xorl
fildll
gs
into
lock
pop
pushf
add
imul
mov
cmp
cmp
mov
cmp
stos
pop
pop
dec
pop
mov
jle
ss
push
push
aam
adc
xchg
pushf
stos
mov
pop
arpl
cmpsb
jmp
les
pop
adc
lret
xchg
xchg
insb
add
mov
fmuls
ds
stos
inc
mov
inc
and
push
mov
dec
cmp
mov
aad
mov
adc
adc
scas
push
shrb
pop
je
dec
push
cs
mov
sbbb
pushf
lds
mov
jbe
ljmp
xor
sbb
ja
inc
push
fwait
shll
cmp
lahf
jge
fwait
inc
cltd
pop
insl
cwtl
jge
lds
cmp
lods
arpl
inc
mov
cmp
push
sarb
add
or
repz
add
push
pop
sbb
mov
cmc
aam
push
push
loope
in
pushf
jno
xchg
ret
out
mov
mov
mov
xor
adc
and
or
xor
push
in
out
pop
outsb
fbstp
jb
lcall
jge
inc
push
sub
loope
inc
jle
lret
aaa
mov
cmp
xchg
sbb
sbb
out
in
in
sarl
fwait
sbb
mov
adc
lret
and
popf
les
hlt
leave
movsb
es
mov
jns
repnz
sti
jmp
push
add
int3
movsl
pop
jbe
ljmp
dec
shll
mov
pop
out
icebp
xor
push
fstps
push
cmp
popf
test
ds
xor
sbb
pop
pop
dec
mov
aaa
and
mov
ds
sbb
push
xchg
ret
jge
or
aam
xor
out
fstps
push
xchg
adc
aaa
pushf
sbb
jae
push
adcb
dec
imul
pusha
add
dec
sbb
sub
cmc
jo
nop
inc
adc
jbe
mov
add
pop
jle
add
dec
enter
push
daa
ds
divl
jmp
jge
fmull
in
ret
lcall
shlb
or
ror
inc
cmpsl
xor
add
cwtl
pop
xchg
mov
shll
rcrb
ljmp
loope
lahf
out
outsl
push
cmc
push
dec
inc
sahf
and
daa
xor
std
sub
gs
adc
outsl
ja
cmp
cmp
js
mov
sbb
cmp
js
push
clc
arpl
sbb
sahf
aad
dec
cltd
jl,pn
add
dec
adc
xchg
mov
mov
outsb
fwait
lock
push
lcall
jo
dec
xchg
out
imul
nop
fdivrl
dec
dec
lods
outsb
into
lcall
inc
adc
in
sub
xlat
adc
push
inc
adc
mov
mov
aaa
lret
leave
pop
sbb
dec
xchg
test
nop
jns
roll
scas
out
cmp
fcmovnb
fisubrl
cmp
cltd
popf
cmpsb
mov
daa
cli
mov
pop
cmpsb
outsl
lea
jno
mov
mov
movsl
out
adc
ret
sub
js
push
lds
xor
pop
mov
jge
sub
scas
outsb
cwtl
dec
fwait
rcrb
inc
jmp
popf
jmp
stos
sbbl
insl
mov
addr16
add
add
adc
mov
stos
into
add
jmp
call
jecxz
sbb
inc
iret
movsb
ror
xchg
lock
jae
xlat
incl
xor
movsl
adc
in
mov
sbb
cmp
lret
mov
ror
mov
cmpsl
rcll
in
mov
insb
mov
insl
fcomi
hlt
jle
push
jecxz
aas
je
loope
cli
mov
inc
adc
test
xchg
dec
push
incl
or
mov
xchg
inc
pop
jae
inc
dec
push
rclb
or
leave
mov
xor
adc
bound
movsl
xchg
jge
data16
push
popa
add
data16
loop
scas
jno
mov
dec
andl
pop
or
adc
imul
pop
and
fsts
push
mov
popf
lods
js
sbb
dec
addl
push
mov
mov
adc
push
dec
jg
add
leave
push
or
push
gs
push
mov
jl
outsb
testl
xchg
fsub
popa
shr
adc
pop
in
mov
xor
icebp
in
enter
push
adcl
mov
xor
pusha
push
jecxz
pop
sahf
js
mov
mov
orb
popa
rcrl
and
jmp
add
mov
fistps
adc
mov
sub
push
or
pop
jl
jmp
push
cmp
aam
shr
out
mov
sarl
mov
pop
cld
mov
pop
pop
mov
fwait
sub
ds
lea
mov
imul
rol
stos
in
and
mov
dec
cmp
xchg
xchg
dec
push
inc
in
mov
addr16
je
movsb
and
icebp
or
cmp
and
mov
aaa
out
push
stos
mov
jmp
push
pop
pop
dec
adc
push
jns
pusha
cwtl
jmp
xorl
cmp
aaa
js
mov
mov
adc
subb
mov
dec
subb
pop
cmp
hlt
pop
push
loopne,pt
cld
dec
xor
lret
mov
jno
cmp
std
adc
iret
fs
jns
sbbb
xor
xchg
pmullw
push
push
arpl
int
push
mov
popa
in
inc
cmpsb
popa
sub
sbb
out
cmp
push
ljmp
pop
jg
push
xchg
mov
in
or
imul
push
mov
loop
fstps
out
nop
sarl
pop
rol
sbb
and
scas
lret
push
out
inc
je
mov
icebp
cmpsb
popf
jecxz
bound
sbb
lods
inc
mov
push
inc
sti
dec
mov
adc
xor
in
les
in
push
inc
xchg
das
push
mov
cli
sbb
test
icebp
iret
jo
push
in
mov
imul
movsl
xor
lahf
jge
pushf
add
dec
jg
jae
adc
frstor
fisubrl
cmp
mov
arpl
push
sahf
sub
push
dec
daa
hlt
cwtl
xchg
ljmp
sub
mov
xchg
jle
fiaddl
jp
pop
dec
fnsave
pop
add
cmp
mov
mov
pusha
dec
xor
into
cmc
lock
fwait
bound
sbb
push
stos
inc
mov
lret
sub
insl
dec
ficoml
int
fnstcw
sahf
cld
dec
mov
in
sub
lret
stos
mov
or
stos
adc
pop
push
das
adc
adc
or
int3
les
ud2
push
pop
dec
jns
lret
push
insb
xor
les
test
cld
add
inc
jl
ljmp
xor
addr16
push
int3
inc
or
insl
cmp
mov
hlt
jp
adc
adc
or
scas
sbb
pop
lahf
push
pop
jp
mov
push
sbb
in
jmp
rcrl
lods
mov
mov
cmp
int
and
sahf
lods
mov
jns
add
lods
fdiv
mov
iret
jo
fcomi
xor
inc
jnp
mov
and
mov
jbe
loopne
xor
mov
addr16
out
loop,pn
addr16
jno
mov
jp
sbb
frstor
cmp
sahf
out
or
mov
sbb
popf
xchg
sti
rolb
or
sahf
test
sub
ret
sahf
aas
lds
pop
xchg
dec
push
push
into
loope
cmp
icebp
sub
sub
test
add
add
dec
push
movsb
xor
imul
and
or
lret
pop
loopne
push
jno
mov
inc
mov
jne,pn
push
xor
ljmp
lret
test
lods
cmp
lock
pushf
imul
dec
pushl
lods
gs
inc
stos
cmp
lods
cmp
adc
xor
xor
or
repnz
xor
rorb
mov
sti
jo
or
repnz
inc
fidivrs
mov
and
pop
jle
in
jmp
jle
test
lcall
addr16
cmp
int
rcll
jge
or
jo
fs
mov
sarb
mov
mov
out
testb
aas
jae
jmp
and
jle
push
dec
scas
push
mov
sahf
ret
jnp
sub
fs
inc
xor
sbb
enter
xchg
xchg
inc
andl
lahf
ja
xor
push
insb
test
mov
rolb
add
call
and
fbstp
add
imul
lret
sbb
push
sbb
jmp
dec
xchg
or
xchg
xchg
push
stos
pushf
ss
punpckldq
mov
mov
dec
pop
xchg
jb
push
inc
push
jno
add
mov
sbb
jne
out
inc
cmp
popa
in
pop
or
cwtl
cld
cli
dec
push
xor
xchg
test
jmp
mov
xor
push
popa
je
movsb
and
test
mov
leave
mov
jmp
push
rolb
lret
les
rcll
push
push
negb
dec
das
or
arpl
sub
enter
push
rcrl
std
movnti
rcr
sahf
test
sub
mov
dec
mov
mov
mov
add
adc
jno
imul
sbb
lea
pop
cwtl
mov
iret
dec
stc
mov
leave
push
lea
fnstenv
sbb
aad
das
repnz
adc
or
mov
add
jbe
push
pop
sub
lahf
mov
dec
sbb
lahf
mov
cmp
mov
les
mov
push
pop
inc
adc
cmpsb
insb
jl
jge
and
cmp
push
in
push
pop
xor
mov
mov
subb
lea
icebp
icebp
fs
push
scas
mov
int3
jge
sbb
sbb
inc
daa
in
push
sub
mov
or
sub
add
and
cmp
bound
xchg
jo
and
cmp
ljmp
nop
mov
sub
lahf
jmp
int3
jae
and
mov
cmp
jae
loope
pop
in
adc
cmp
xor
repnz
pop
jg
adc
rclb
xchg
sbb
dec
push
dec
nop
mov
push
sub
push
addr16
xchg
push
iret
lods
sbb
cmp
adc
mov
sti
push
stos
pop
stos
faddp
cmc
sbbb
xlat
xor
sbb
jb
fs
rcrb
add
sbb
push
jecxz
das
ja
ja
cmpl
fcomp
mov
daa
stos
ret
mov
in
cli
push
xor
hlt
cli
popf
xor
cmp
ret
scas
fcomip
test
mov
xchg
jl
ja
sbb
mov
push
add
loop
hlt
jnp
fnclex
inc
incl
mov
call
adc
out
xchg
nop
shl
movsb
not
mov
xchg
xor
inc
lock
in
stos
outsb
je
add
xchg
sbb
xor
push
lock
xor
ja
cmpb
call
jg
clc
jno
fisubl
pop
dec
and
mov
push
rdpmc
cmp
xor
stc
fwait
push
sbb
lods
add
leave
cmp
jecxz
aam
notl
fwait
dec
les
xchg
push
ficomps
or
push
cmp
out
mov
and
outsl
pushf
xchg
shlb
inc
sahf
aas
cmp
iret
lret
xlat
jp
pushf
cmp
out
sbb
xor
fcompl
out
out
sbb
andb
xor
out
popf
call
into
sub
sarb
into
out
or
sbb
in
sbb
add
cmp
pushf
sbb
add
repz
jp
orb
jb
mov
sub
call
dec
push
pop
dec
and
lods
mov
push
cmpsb
imul
pop
movsl
ret
xchg
xor
dec
sahf
mov
sysret
repnz
or
push
std
jmp
jmp
mov
icebp
jp
push
fcoml
insl
mov
faddp
jbe
dec
and
cs
loop
pop
pop
or
jns
xor
outsl
lds
or
cmp
cmpsb
add
into
or
push
xchg
jmp
push
ljmp
add
stc
pop
aam
fcompl
pop
jle
cwtl
xchg
xlat
xchg
loopne
test
mov
push
fisubl
xchg
into
jge
xchg
push
cli
mov
divl
inc
fisttps
pop
cmpsb
orb
loope
les
xor
mov
roll
inc
mov
sub
add
ljmp
movb
or
sti
jae
leave
sbb
inc
fwait
or
data16
and
dec
leave
mov
cmc
ret
xor
jb
mov
mov
mov
inc
fisttps
inc
sbb
ror
cs
add
add
inc
addr16
xor
out
or
sub
jb
mov
push
std
or
cmp
mov
inc
es
das
popa
jns
or
movsb
cmpsl
gs
mov
dec
inc
sub
mov
pop
xchg
loop
jb
stc
push
imul
pusha
jbe
xchg
clc
jmp
vmread
daa
cli
cmp
sbb
and
push
mov
repz
in
dec
scas
mov
pop
cmp
shrb
cwtl
imul
push
loopne
jecxz
dec
lea
fdiv
sub
stc
mov
xchg
inc
xorl
dec
push
pop
jl
repz
js
xchg
inc
push
cmp
push
popf
mov
dec
mov
lret
inc
pop
and
ret
filds
push
gs
mov
sbb
sbb
inc
xor
test
pushf
add
mov
test
call
movsb
dec
xchg
jecxz
xor
ret
sub
es
mov
pop
aad
pop
stos
pop
add
jno
stc
ret
mov
sub
push
stc
out
pushf
stos
pop
aaa
cmpsl
pop
movsb
mov
loope
mov
outsb
mov
adc
push
push
mov
mov
or
pop
mov
jns
xchg
sub
stos
or
aas
cmp
mov
jo
cmp
movl
scas
out
cwtl
cli
repz
jns
mov
mov
mov
sbb
push
dec
lcall
mov
dec
push
shlb
sbb
dec
sub
add
mov
cmp
mov
rolb
nop
adc
sub
fwait
xor
cld
lock
cmp
lret
mov
push
aam
push
mov
pop
movsb
xchg
and
xchg
sti
adc
cmp
pop
sbb
into
adc
adc
mov
xlat
push
cmp
out
xchg
inc
insl
jns
push
pop
adc
cmc
movsb
pop
icebp
cmp
cmp
aam
or
jg
fsubrl
out
pop
fs
iret
sub
mov
mov
mov
jo
fisubl
shr
dec
mov
xor
insl
stos
xor
addl
jg
lret
mov
imul
cmp
pop
pop
dec
and
mov
cld
aam
jge
out
push
or
sub
mov
inc
cmp
bound
test
xchg
add
pop
dec
sbb
lret
xor
inc
jge
mov
aaa
push
adc
pop
mov
mov
loope
add
mov
push
sub
xchg
mov
cwtl
outsl
mov
jmp
mov
fstpl
inc
xchg
decl
mov
adc
ret
mov
shrl
xchg
or
pop
sbb
repnz
push
and
and
js
xor
mov
xorl
stos
and
push
outsb
adcb
jecxz
sbb
fnstenv
out
mov
xchg
mov
aam
imul
in
jo
sub
push
lods
fucomi
pop
xchg
add
adc
leave
sub
adc
cmpsl
hlt
adc
pushf
sbb
test
cmp
pushf
jg
jbe
or
push
inc
loop
cwtl
lea
sbb
cli
or
test
adc
sub
mov
es
hlt
lret
add
cmpsb
jae
add
adc
push
or
test
cmp
mov
add
sbb
stc
lret
lahf
popf
sub
mov
xlat
push
ljmp
int3
lods
mov
jns
mov
push
pop
stos
jne
inc
out
test
mov
mov
inc
xchg
icebp
dec
and
stos
popa
jbe
mov
lods
std
pop
xor
inc
or
sub
and
mov
hlt
jns
and
enter
pop
jnp
scas
pop
push
mov
xor
call
aad
push
dec
repnz
lods
daa
imul
sar
mov
loopne
cmp
in
jno
cmp
cmp
movsl
xchg
add
sbb
into
sub
fcomps
or
aad
mov
pop
adc
jmp
cli
xor
sbb
mov
sub
loop
stc
fisubrs
roll
sbb
jle
jl
loope
sub
mov
jbe
jne
insl
adc
jge
imul
rorl
pushf
dec
leave
fisubrl
add
loopne
sub
inc
mov
jecxz
dec
std
es
in
add
mov
jl
sahf
xchg
orl
roll
rorb
xor
lcall
scas
test
mov
pop
gs
fs
in
fisttpl
push
push
jo
das
and
loopne
sbb
lcall
movsl
and
gs
mov
adc
insb
fistl
jno
js
add
dec
sub
sub
stos
in
jmp
stc
scas
xor
jp
ficoms
icebp
ret
jg
and
pop
sub
xchg
add
mov
xor
lds
das
ret
xor
stos
and
sahf
ficoms
jb
push
mov
jnp
insl
push
xchg
push
jo
jnp
rolb
dec
mov
clc
into
gs
pop
cmp
aam
andl
sahf
or
aaa
sti
xorl
pop
ss
jbe
jg
out
in
jl
push
xchg
xchg
pusha
mov
mov
dec
jg
xor
ljmp
ficomps
add
pop
mov
stc
or
mov
pusha
cmc
sub
push
lret
stos
mov
out
cmp
or
pop
lahf
fwait
xchg
mov
lods
sbb
cmp
out
aaa
dec
movsl
jnp
or
or
and
test
scas
enter
push
cmpl
push
xorw
incb
jecxz
add
mov
enter
mov
sub
xor
loope
and
out
sbb
outsl
add
mov
mov
jmp
dec
ds
mov
in
notb
mov
lret
jbe
std
loop
lret
test
outsl
add
mov
mov
int
sbb
aad
cli
sbb
ret
scas
sub
or
xor
movsb
dec
fidivrl
test
mov
fisubrs
dec
les
andb
add
sub
scas
ret
test
adc
mov
cmp
arpl
daa
cmp
sahf
out
pop
and
sarl
inc
cmp
cmp
xchg
sbb
inc
insl
add
xchg
scas
adc
pop
out
gs
fs
jnp
cmp
xchg
addl
cmp
fs
movsb
xor
sub
lods
cmpsl
popa
into
prefetch
or
cld
fcomps
mov
cmp
loop
lret
sti
addr16
adc
push
sub
push
daa
ja
jb
jae
and
add
aas
jmp
cmp
push
mov
pop
lret
mov
mov
sbb
jp
out
pop
insb
mull
mov
mov
arpl
or
dec
dec
gs
lret
pop
lret
int
sub
mov
call
hlt
mov
ljmp
mov
xor
inc
je
fcoms
cmp
icebp
in
mov
in
in
xor
lcall
mov
and
jl
hlt
push
rorl
arpl
shrl
outsb
mov
stc
and
test
fidivrs
incl
adc
or
add
jbe
imul
inc
aam
cmp
arpl
sbb
outsb
inc
movsb
mov
pushf
mov
int3
xor
fsubr
ret
shll
xor
jmp
pop
rclb
out
rolb
mov
xor
xchg
xchg
mov
idiv
pop
int
int
jae
or
push
add
pop
je
mov
scas
push
or
jmp
mov
ss
adc
dec
sub
dec
lahf
int
mov
dec
push
jae
mov
mov
cwtl
les
sbb
insb
push
push
scas
xchg
ret
popa
push
es
pmaxsw
mov
jmp
sti
orb
pop
add
stc
je
add
pop
imul
hlt
out
fwait
das
or
mov
movsl
imul
dec
sbbb
int
ss
xor
mov
ds
jmp
or
je
push
idivl
andb
data16
inc
adc
test
sti
cmp
push
xor
pushf
and
aaa
jbe
ds
ss
xchg
lcall
lret
dec
xor
ficoms
adc
sbb
aas
lods
and
cs
push
jae
enter
int3
xor
int
sbb
jge
insl
sbb
lea
add
cmpsb
sbb
inc
push
arpl
xchg
jle
and
and
mov
mov
ja
add
and
jp
push
mov
xchg
jp
push
popa
in
subb
inc
xchg
fcomip
leave
ja
movsl
dec
lods
repnz
xor
xchg
popa
inc
fcomps
sub
idivl
push
aam
test
dec
loop
push
push
les
in
mov
jecxz
inc
xchg
ss
aam
lds
lahf
fildl
mov
xor
jg
or
repz
idivl
lods
out
mov
outsl
jg
dec
sub
mov
lcall
dec
inc
or
sarl
xorl
add
dec
insb
or
movsl
mov
sbb
out
test
popf
jbe
xchg
rorl
pop
in
sbb
or
and
outsb
movsb
leave
movsb
inc
mov
orl
bound
pop
xchg
mov
adc
rcr
in
mov
mov
push
mov
out
jp
sahf
mov
jmp
xchg
jge
pop
xchg
pusha
pop
fildl
cmp
scas
sub
and
out
test
push
xorl
add
jge
jp
in
dec
stos
adc
jo
mov
add
dec
hlt
pop
scas
fs
xchg
and
bswap
sub
outsb
sahf
movsb
xchg
mov
lcall
or
ret
jl
xchg
test
xlat
pmaxsw
cmp
lods
mov
dec
xchg
push
add
subb
mov
pusha
jno
leave
rcl
mov
ss
scas
and
pop
mov
push
iret
mov
out
mov
sub
jl
out
fwait
lea
mov
aam
js
loope
lahf
aad
js
jp
jne
sbb
xchg
cltd
pop
jmp
data16
stc
mov
dec
xor
outsb
jae
jmp
pop
dec
add
jl
xchg
mov
add
xchg
roll
push
mov
aaa
lret
xor
cmpb
mov
or
push
jbe
insb
pop
pop
mov
jle
test
and
adc
arpl
cmc
adc
or
jb
enter
inc
xor
int3
push
mov
xor
hlt
stos
rcrl
push
cmp
mov
jb
mov
jbe
dec
in
arpl
nop
sub
inc
das
pop
push
pop
push
or
dec
sti
jle
and
cwtl
ja
or
mov
mov
mov
test
lds
ret
test
shr
mov
call
lods
into
aad
arpl
sub
sub
xchg
sub
inc
and
jl
and
sbb
loop
push
mov
pop
divl
rorb
xchg
inc
add
sub
push
movsl
or
xor
push
sar
sub
dec
pop
push
roll
mov
dec
imul
rcrl
loopne
movsb
in
or
jnp
insl
and
pop
inc
add
xchg
ret
shll
adc
sbb
out
sbb
inc
lcall
popl
mov
xchg
sti
and
test
inc
cmp
inc
icebp
cltd
or
add
sbb
add
or
add
xchg
inc
sbb
mov
lcall
movsb
xor
mov
inc
sarb
mov
iret
popf
cmp
push
mov
dec
mov
shrl
mov
in
dec
dec
push
pop
stc
add
or
loope
add
mov
fs
push
lahf
sar
push
arpl
in
int
mov
sarl
xchg
in
insb
cli
aaa
jae
insl
mov
dec
dec
dec
sbb
jo
push
adc
cmpsb
ss
shlb
es
add
mov
arpl
lods
push
cs
and
sub
push
fbstp
push
dec
aaa
ljmp
sub
or
inc
ss
pop
dec
xlat
pop
lods
in
xor
outsl
adc
in
mov
push
call
adcl
lret
jo
into
jge
pop
push
mov
jo
or
push
lods
jl
rol
add
mov
mov
mov
lock
imul
or
nop
test
leave
inc
inc
imul
mov
xchg
dec
cmp
in
lock
mov
inc
shld
movb
les
outsb
notl
loopne
push
mov
dec
into
ret
mov
std
mov
mov
mov
lahf
jne
mov
sub
loopne
mov
out
push
movsl
arpl
jle
xchg
cmpsl
mov
sahf
int3
sub
cmp
mov
ja
mov
xor
cli
jp
dec
out
jecxz
push
mov
push
mov
cmp
jb
cmc
mov
aad
sti
mov
js
scas
sbb
rolb
dec
data16
lds
in
mov
mov
in
mov
mov
pop
push
cli
test
repz
out
pop
out
pop
and
add
or
xchg
call
les
xchg
insb
xchg
pop
inc
fwait
sbb
shr
mov
enter
inc
and
mov
daa
lret
das
mov
int
das
and
aam
loop
lea
push
out
fdivr
ds
cmpsl
sahf
call
cs
push
rorl
out
test
xchg
or
addb
loopne
mov
xlat
lahf
mov
and
testl
mov
mov
test
inc
aad
mov
add
out
fwait
add
and
scas
ficompl
pusha
inc
jmp
orb
test
loopne
es
lds
mov
mov
mov
ss
dec
lock
insb
inc
pop
mov
mov
inc
add
test
je
shlb
jne
insb
sub
jae
inc
imul
sub
mov
cmp
xor
aas
sahf
mov
das
shrl
out
xor
mov
adc
shll
dec
out
cmp
jle
scas
ds
pop
xchg
mov
flds
mov
ss
out
sub
fiadds
lods
aam
add
in
add
jmp
xchg
jmp
js
loopne
lods
loope
out
outsl
or
ret
push
lods
iret
jg
push
cmpsl
inc
shlb
lcall
pop
adc
dec
pop
cmp
insb
iret
xchg
insb
or
sbb
pop
sub
js
shlb
cmp
fdivs
push
out
add
fs
pop
popa
aaa
push
adc
gs
xor
inc
and
add
push
sub
jnp
pop
int3
pop
cld
add
mov
mov
fs
fisubrl
lods
clc
and
or
and
bound
scas
ret
and
prefetch
or
xchg
out
add
test
sti
push
sbb
call
ret
fs
xor
push
mov
jo
mov
fistps
insl
out
movsb
add
pop
adc
sbb
mov
out
out
pop
cwtl
dec
jb
push
xchg
sahf
adc
xchg
pop
mov
xor
mov
lock
outsl
aam
lcall
movsl
sbb
mov
pop
invd
dec
inc
lret
pop
xchg
imul
mov
jecxz
test
je
and
out
popf
stc
mov
xorl
loop
xor
test
shll
enter
or
add
out
pop
repz
out
inc
xchg
cmp
push
jo
pusha
ffreep
inc
mov
dec
mov
into
xchg
inc
stos
add
ss
movl
nop
or
sti
sbb
xchg
inc
dec
inc
cmpl
shll
das
mov
mov
in
push
mov
cmp
cmc
cmp
mov
fxch
xchg
sub
pop
lods
in
push
je
cld
jne
sbb
push
mov
nop
js
shl
sub
nop
xchg
xor
and
lods
xlat
loope
add
sarb
stos
jl
cli
loop
andl
es
in
in
xlat
sbb
jge
cltd
call
push
insb
daa
movsl
rol
out
loop
into
shll
cmp
sbb
push
es
and
addr16
xorb
xchg
adc
das
mov
lods
jne
jae
and
inc
test
das
pop
or
es
sti
jo
add
pop
push
dec
rorb
mov
sub
popf
and
push
popf
cmp
out
mov
ss
adc
pushf
push
push
fdivl
je
cmp
jmp
sub
mov
cmp
jp
hlt
hlt
pushf
mov
sub
stos
and
into
data16
mov
mov
mov
pop
icebp
ss
dec
sti
gs
inc
pop
push
pop
pop
mov
div
js
loopne
xchg
sub
in
lds
jmp
pop
cltd
cmp
pusha
not
jne
mov
jne
adc
and
adc
jl
or
sub
in
xor
in
xchg
adc
xor
mov
mov
mov
shr
fs
push
add
sub
mov
outsl
fs
dec
xor
scas
xor
mov
sub
sarb
lcall
into
inc
int
and
or
insl
jb
mov
cld
lods
mov
sarl
jne
fcmovnb
push
into
jmp
add
adc
and
pop
movsl
mov
sub
popf
imul
ret
pop
inc
and
lods
pushf
imul
add
adc
int3
sbb
jmp
xchg
in
mov
out
mov
inc
mov
push
out
ret
pop
fld
jg
cli
cwtl
imul
jge
push
into
xor
dec
nop
xchg
addr16
jl
and
mov
xchg
mov
out
push
mov
nop
ljmp
inc
stc
xchg
adc
into
out
dec
dec
aam
mov
sub
adc
in
add
outsb
sti
gs
add
std
push
std
dec
pop
popa
cmpsl
cmp
sbb
sub
adc
scas
movsl
jns
mov
inc
pop
incb
hlt
shrl
jg
jmp
mov
mov
loopne
lret
in
jge
in
popa
push
cli
test
pop
mov
imul
arpl
lret
pop
push
xchg
push
xor
push
das
mov
ds
xor
pop
call
and
mov
jns
insl
mov
gs
arpl
pop
popf
mov
sahf
sbb
adc
nop
repz
mov
push
mov
push
mov
repnz
pop
test
adc
out
sub
xchg
and
icebp
rcrb
movsl
ret
adc
dec
xor
mov
dec
fistpll
aas
xor
in
lret
xor
add
add
xchg
push
scas
jns
ja
mov
lcall
std
out
repz
jns
xchg
push
stc
sarb
push
loop
inc
movsl
and
fwait
mov
mov
mov
lahf
pop
pop
rorb
outsb
ror
addr16
je
fwait
lods
popf
pop
xchg
cmpsl
pop
int
dec
mov
and
pop
sbb
stos
add
aad
js
jbe
push
mov
sub
out
dec
or
aam
xchg
cmpsl
xchg
xchg
sti
popa
f2xm1
clc
je
lcall
dec
lock
cmpsb
sar
iret
arpl
test
fcoml
inc
int
pushf
mov
push
cmp
or
fyl2x
mov
hlt
test
pop
rcrb
in
push
fmuls
mov
popf
push
out
jg
xchg
cwtl
and
dec
subl
popa
inc
add
add
cmp
cmp
das
mov
cwtl
pop
std
mov
mov
sub
lahf
dec
sub
fsubl
push
mov
sbb
ror
sub
adc
cmpsb
rcrb
jne
pusha
jb
cmp
pop
fdivr
cmp
cmp
fsubl
adc
mov
aaa
cmc
push
fnstenv
fcmovnu
dec
popa
aas
mov
push
cli
shld
jb
mov
testb
sbb
or
negl
aaa
lret
mov
dec
loope
loope
rorl
xor
test
test
and
sbb
testl
and
in
leave
fidivrl
push
and
push
popa
xor
pop
cmp
inc
pop
popf
add
jne
out
aad
sbb
test
mov
xchg
aad
cmp
dec
xchg
adc
mov
pop
pop
mov
push
mov
pop
mov
jb
lea
dec
cwtl
push
aaa
ret
jecxz
ds
push
lahf
ljmp
and
inc
lods
shll
jno
jg
inc
notb
xchg
sbb
std
xchg
mov
or
cmpl
outsb
or
inc
pop
dec
pop
push
mov
mov
jb
xchg
or
stos
mov
stc
or
adc
mov
dec
pusha
loopne
shl
jnp
nop
in
mov
add
cmp
mulb
push
gs
and
ficompl
outsl
fld
movsb
fdivr
fiadds
popf
enter
xchg
fdivrs
fadds
insb
das
mov
gs
icebp
sbbl
in
cwtl
cmp
push
movsb
xchg
cmp
aad
sub
pop
pop
mov
loope
dec
inc
sbb
sarb
mov
popf
push
inc
out
xchg
inc
daa
out
dec
pusha
andl
mov
sbb
test
sti
dec
call
push
push
mov
adc
pop
rolb
icebp
aad
lahf
sbb
mov
stos
cli
popa
cli
sub
jp
and
fidivl
imul
push
int3
push
sub
push
push
xor
and
or
lret
cmp
xor
imulb
out
pop
inc
add
and
outsb
push
jecxz
inc
ss
inc
pusha
cmp
pop
sbb
cmp
inc
mov
movsl
push
xor
push
xchg
and
lret
cltd
cwtl
push
xor
es
frstor
adc
enter
add
es
cmp
cld
adc
mov
dec
fsubp
cs
mov
fisubl
adc
orps
xor
int3
push
inc
fcmovnu
cltd
jno
mov
ja
mov
inc
xor
shrb
aaa
movsl
dec
inc
push
sbb
jmp
xor
jno
aaa
sbbb
daa
frstor
pop
fistl
loopne
jae
test
mov
scas
cwtl
jb
lods
cmp
movsb
cld
pop
aad
or
les
mov
lods
loopne
push
dec
and
cmp
add
push
outsl
push
roll
mov
dec
scas
test
movb
jae
lock
sti
movsl
sub
in
cmpsl
cwtl
aas
aad
mov
ret
pushl
jg
insl
out
imul
insb
mov
lcall
test
xchg
imul
pop
xchg
and
inc
imul
push
sub
push
pop
loopne
pop
ljmp
add
aam
leave
add
jg
jl
push
dec
push
push
sti
test
jp
into
cmp
stc
popa
and
jmp
xchg
cli
in
cld
leave
ja
addl
pop
inc
imul
lcall
and
cmp
push
jo
jno
insl
xchg
stc
mov
imul
outsb
cwtl
jl
movsl
jns
sarl
sar
jae
in
xchg
adc
jl
pop
mov
pop
mov
lds
jae
mov
or
shlb
mov
or
push
xor
aaa
adc
xlat
mov
inc
cltd
push
aam
xchg
movb
sbb
add
xchg
clc
ficompl
popl
pop
sbb
popf
cld
outsl
adc
xor
sti
mov
js
mov
fsubs
decb
push
mov
outsb
jne
lahf
sub
icebp
lahf
jbe
inc
enter
adc
cmp
inc
ss
xor
icebp
ret
mov
cmp
cmp
xchg
jl
outsb
aas
pop
mov
dec
mov
jecxz
dec
and
jno
lret
lret
push
push
fwait
lds
mov
or
ljmp
dec
xchg
aaa
dec
std
and
ret
pop
xor
mov
and
sbb
add
sub
xchg
insl
add
and
lods
inc
pop
jo
js
add
xchg
xchg
outsb
out
shl
xchg
scas
in
aad
test
cld
icebp
xchg
rorl
xlat
fldl
data16
pop
sub
ss
pop
out
es
adc
push
cwtl
adc
push
sti
dec
pop
mov
shrd
sub
jg
sub
mov
and
inc
insl
or
arpl
repnz
lock
sbbb
xor
es
bound
pop
or
jg
push
jo
pop
cmp
dec
rol
pop
inc
into
roll
jge
dec
fsubrs
iret
mov
sbb
das
scas
pop
add
push
movsl
push
sub
cli
in
inc
jg
outsb
cs
dec
loopne
ret
xor
gs
cld
leave
int3
add
add
and
sti
mov
pop
jl
ja
mov
ljmp
jo
fistpl
loopne
insb
leave
dec
push
inc
xchg
inc
fs
cmp
pop
fs
punpcklbw
add
adc
shr
cmp
mov
fstps
xor
pusha
dec
pushf
adc
insl
dec
les
mov
sbb
aad
mov
loope
mov
fmull
mov
sub
mov
mov
outsl
or
jmp
shlb
arpl
push
aad
incl
imul
jp
out
out
fmull
pop
imul
pushf
xchg
adc
std
xchg
push
test
cmp
fmuls
hlt
xchg
push
lret
mov
ds
dec
push
xor
add
inc
sahf
inc
adc
xchg
dec
in
clc
imul
and
imul
sbb
pushf
shll
gs
mov
adc
sbb
fdiv
rorb
cmp
mov
mov
adc
inc
xor
xor
sti
or
push
stos
loope
xor
xchg
jge
pop
xchg
mov
es
mov
int3
lret
jg
lock
mov
out
jmp
push
or
xchg
pop
sti
xor
into
test
cmp
in
mov
add
outsb
mov
jno
dec
pushf
int
mov
movsl
inc
mov
sbb
inc
push
cs
and
add
jle
push
xlat
lods
inc
jns
lcall
mov
testb
rolb
mov
sbb
pop
pushf
popa
and
adc
je
xor
push
sahf
cwtl
mov
add
cmp
movsb
pmaddwd
dec
outsl
mov
xchg
cs
enter
jp
pushf
stos
sub
sarb
jecxz
fs
adc
inc
adc
ljmp
mov
pop
hlt
adc
and
sub
aas
cwtl
xchg
mov
push
stc
int
xor
and
leave
outsl
stos
enter
pop
push
dec
shll
mov
push
mov
mov
daa
cmc
pop
mov
mov
pop
addl
enter
mov
push
sub
adc
fs
shl
imul
xor
mov
mov
xchg
xchg
pop
push
and
stc
ret
jns
pop
lcall
or
pop
inc
mov
mov
lods
xchg
dec
hlt
xor
popa
pop
inc
xchg
cli
test
jo
in
mov
mov
and
pop
mov
push
inc
clc
sbb
ret
and
adc
pop
jb
mov
mov
adc
cmp
cmp
inc
dec
into
push
nop
fcoml
cld
xor
push
mov
adc
xchg
xchg
call
xchg
add
lahf
pop
and
sti
sub
cmp
adc
pop
test
xor
push
arpl
xor
popf
popa
je
cmp
add
mov
xor
sbb
adc
ss
iret
test
out
shlb
mov
xchg
inc
rolb
mov
cli
jnp
out
push
hlt
pop
insb
inc
mov
fwait
pusha
adc
cmc
mov
loopne,pt
or
pop
rcrb
flds
out
sub
push
cmc
add
or
cmpsl
ljmp
and
sbb
cli
icebp
push
inc
es
icebp
cmp
loopne
addr16
in
sub
lods
scas
mov
inc
sbb
add
scas
sti
add
loopne
sub
push
ljmp
cmp
dec
repnz
scas
idivb
pop
jmp
aad
dec
ffree
gs
nop
fldenv
fsubp
push
cmpl
ret
mov
or
push
jmp
ss
adcb
call
mov
test
push
fs
pop
and
mov
dec
inc
test
nop
jmp
insb
filds
fsts
sub
icebp
or
pop
test
fdivr
shlb
sub
into
lea
je
push
popa
xor
xchg
movb
mov
faddl
scas
inc
das
pop
push
add
fists
out
cs
pop
std
sub
inc
sti
or
loopne
and
cltd
sub
add
gs
sbb
fst
jo
fstl
imulb
fnstenv
fwait
push
lods
mov
mov
aas
int
stos
adc
inc
es
les
es
jnp
ljmp
sub
test
mov
adc
fwait
mov
jp
or
pop
push
xchg
mov
aas
cmp
adc
dec
jmp
xchg
xchg
jb
into
cmp
jmp
loope
jne
pusha
shll
pop
bound
int3
mov
push
push
jmp
scas
sbb
sar
xor
sbb
jnp
jp
stc
add
mov
fcoml
xor
icebp
and
adc
incb
pop
inc
movsb
xor
pop
inc
fs
fsubrs
xlat
bound
pop
repnz
sahf
js
and
popa
loopne
test
xchg
pop
ret
sbb
or
mov
out
fdivs
shll
sub
push
fwait
pop
inc
lahf
stos
cmp
jl
das
ret
cld
jne
jecxz
hlt
mov
cli
push
mov
cmp
popa
sbb
in
jge
fdiv
push
sub
push
push
or
arpl
cs
test
rorb
aaa
push
aas
fs
andl
outsl
push
pop
inc
int3
in
sahf
jp
pop
adc
jno
jp
leave
sarb
clc
jno
outsl
mov
ficoml
mov
es
mov
xchg
out
sub
into
lret
mov
cmp
pop
outsl
and
jecxz
xor
jl
pusha
test
dec
lret
loop,pt
adc
jbe
sahf
loope
ret
popa
cmp
scas
push
lods
mov
inc
mov
daa
or
fisubrl
fs
xchg
xor
das
hlt
xor
pushf
shl
xchg
fwait
sahf
jnp
sbb
sbb
adc
fildll
call
js
fucomip
fisttpl
pop
aam
rclb
mov
ret
jbe
incb
dec
out
jns
cmc
mov
mov
inc
or
test
sahf
add
xchg
cmp
mov
ljmp
push
sbb
xchg
ret
jmp
aas
jle
mov
cmp
inc
sub
loope
imul
push
jbe
je
mov
push
pop
lahf
icebp
xchg
sar
jo
dec
mov
cltd
fwait
mov
mov
test
jle
dec
jno
nop
daa
test
rclb
fs
xchg
das
stc
adc
adc
roll
fists
shrb
in
mov
mov
inc
dec
inc
iret
negb
adc
adcl
xchg
inc
xor
test
lahf
ds
imul
movsl
mov
jb
pop
and
sahf
mov
mov
sub
sbbb
jbe
in
sbb
ret
cmp
sub
add
or
cmc
adc
loope
pop
dec
sbb
sti
rcr
imul
xor
shl
repz
popa
sub
out
push
insl
push
sub
jo
fsub
push
xchg
mov
jb
lahf
jge
subl
je
fs
inc
pop
aad
das
aaa
or
aas
pop
inc
in
out
jp
out
add
or
xchg
das
add
sahf
jne
xor
inc
repz
mov
or
push
dec
or
adc
shll
push
sub
outsl
inc
xchg
in
mov
sbb
cwtl
push
inc
mov
ss
pop
push
mov
jae
cwtl
ds
mov
pop
mov
ljmp
dec
dec
pusha
sub
rcrl
pop
insl
in
jl
add
sbb
sub
mov
push
adc
cmp
aas
sahf
aad
push
lcall
test
in
std
mov
pop
jae
pop
and
hlt
outsb
mov
push
and
xor
mov
jl
lds
add
icebp
jg
aaa
aam
jge
sub
push
mov
sahf
pop
mov
adc
add
jnp
mov
dec
leave
sbbl
xor
mov
int
mov
sbb
push
xchg
sub
cmp
fldpi
cmp
test
test
inc
cld
incl
mov
xor
xchg
inc
pushf
aad
push
mov
rcrb
cld
ja
mov
mov
addb
in
pop
movaps
push
sub
pusha
dec
add
shrl
jnp
mov
js
jb
scas
xchg
adc
jns
push
aaa
pop
sarl
mov
inc
sbb
mov
cmp
insb
mov
std
ret
test
popf
pop
cmp
enter
clc
fistps
pop
stos
mov
dec
clc
xchg
push
push
lcall
cmp
cltd
add
mov
out
mov
roll
and
sub
out
add
xchg
in
sub
jecxz
lret
pop
jae
sbb
cmpsl
repnz
outsb
pop
shll
adc
dec
or
xorb
out
xchg
jnp
ret
nop
clc
adc
call
mov
sbb
mov
fisubs
adc
or
nop
daa
or
and
xor
sahf
mov
jnp
jbe
cmc
or
xorl
mov
xorl
mov
mov
lds
xor
test
lea
xchg
or
lea
ljmp
and
jp
cmpsb
outsl
pop
or
in
cltd
mov
mov
cmp
filds
push
sbb
nop
in
adc
pusha
adc
jno
outsl
cmp
imul
mov
arpl
push
add
test
stos
pop
out
or
push
pop
pushf
popf
inc
dec
push
add
xor
cld
xchg
pop
or
mov
jmp
and
and
adcb
iret
stos
mov
es
mov
ret
inc
jl
test
xor
popa
cvttps2pi
adc
andl
or
pop
jnp
xor
sub
sahf
cmp
outsb
xchg
mov
out
push
sbb
inc
inc
jo
sbb
ss
fdivrl
push
filds
clc
xchg
jl
sub
inc
notl
sub
inc
movsl
fucomi
test
pop
jno
sub
loop
sub
lock
or
xor
or
xchg
cmp
popa
sub
test
and
cmp
iret
jle
int3
sbb
mov
daa
aas
inc
xlat
or
pop
mov
mov
add
xor
push
fsincos
xlat
popa
cmpsb
loopne
and
leave
dec
xchg
mov
cltd
mov
outsl
jecxz
push
fstl
pop
fcmovnb
mov
jno
ljmp
test
out
mov
bound
jl
jle
sti
jmp
rcl
xlat
rolb
sbb
and
mov
out
pop
jl
adc
adc
shl
mov
add
add
int
in
add
push
test
inc
adc
popf
or
mov
xchg
ds
call
mov
mov
and
sbb
in
test
repnz
or
mov
xchg
or
stos
jg
xchg
pop
add
sub
push
pop
punpckhwd
cwtl
jl
lods
das
subb
adc
xchg
and
mov
fucomp
dec
and
push
sbb
push
push
mov
adc
or
dec
adc
scas
cmc
push
int3
push
loop
fisttpl
push
shrl
or
aaa
jmp
insl
mov
adc
clc
push
add
adc
pop
imul
mov
mov
adc
push
jns
rcl
in
or
scas
cmovl
stos
cmp
pop
mov
and
es
inc
adc
out
inc
xor
rorl
mov
jne
adc
aam
push
dec
pop
cmpl
out
xchg
leave
cli
fmuls
int3
in
aad
cmp
add
stos
mov
int3
jno
cmp
inc
jno
push
xchg
int3
push
mov
cwtl
pop
clc
push
aam
dec
or
ljmp
jne
mov
jg
xor
ret
pop
adc
mov
stos
loop
iret
jl
mov
or
loop
inc
jp
mov
movsl
jle
add
arpl
fsubrs
iret
mov
cmp
jl
pop
mov
pop
mov
add
xchg
xchg
pop
loope
rolb
mov
pop
cmc
and
mov
or
xchg
mov
dec
and
imul
sbb
adc
mov
push
push
or
and
emms
leave
push
pop
or
push
xchg
imul
pop
cmpl
mov
shr
sub
movsb
lods
cmp
xchg
xchg
mov
es
fmuls
xchg
mov
dec
xor
xor
in
pop
ret
mov
test
inc
pop
pop
sub
pusha
inc
shlb
jno
imul
sbb
cmp
out
pop
je
and
xor
pushf
push
or
jle
or
icebp
nop
push
aad
mov
lret
mov
test
and
sbb
bound
pop
repz
xchg
cmp
sub
jo
xchg
repz
loope
loope
in
pop
lods
dec
out
popf
push
adc
rcll
imull
mov
iret
mov
sub
jbe
adc
push
mov
pop
out
int3
cltd
or
fidivs
fisubl
js
jecxz
push
mov
and
inc
fstps
daa
pushf
cmc
fbld
mov
pop
imul
xchg
repz
jno
decl
outsl
fildl
je
test
dec
cbtw
cld
in
or
cmpsl
jge
sbbl
je
mov
mov
in
je
ret
add
xlat
push
sub
or
mov
and
add
inc
ret
stc
frstpm(287
mov
add
pop
jg
mov
push
xor
ljmp
pop
pop
adcb
jno
sbb
xlat
mov
dec
pop
bound
stos
adc
adc
ficompl
lret
cmp
pop
fbld
jecxz
insb
mov
shrb
mov
stos
jge
inc
cmp
std
lods
mov
xchg
mov
loopne
mov
fistl
data16
dec
popf
rolb
pop
cmc
addl
jg
and
or
cld
xchg
push
sub
enter
sub
loop
test
std
adc
stc
fwait
out
xrelease
aaa
stc
cmp
add
sbb
fwait
and
sbb
loop
mov
out
jnp
push
stos
or
mov
sbbl
jle
lret
cmp
sbb
sti
leave
xchg
jne
mov
fstl
add
andl
mov
adc
loop
mov
lods
mov
mov
push
jbe
ret
add
scas
adc
or
dec
sub
mov
movsl
inc
in
fwait
and
out
nop
dec
cltd
jle
sub
push
dec
icebp
roll
jns
dec
mov
aam
or
push
jge
mov
insb
pop
pop
lret
outsb
pop
sub
repz
xor
sbb
cmp
pop
mov
xlat
push
clc
enter
enter
dec
dec
repnz
ljmp
bound
mov
js
imul
xor
iret
xchg
or
sbb
cmp
loopne
cmp
negb
shlb
push
pcmpeqw
mov
cld
movsl
cli
push
xor
clc
mov
shll
jnp
stos
repnz
add
and
ret
aad
fs
adc
fldenv
cltd
flds
add
test
popl
rcrl
and
jo
stc
int
xchg
xchg
movsb
scas
or
les
enter
mulb
ret
cmpsb
and
loope
xor
in
adc
xor
scas
jle
fadd
xchg
mov
mov
into
mov
and
filds
or
or
xor
xchg
and
dec
clc
sahf
mov
jae
mov
ss
xor
lcall
outsb
jge
ljmp
movsb
mov
out
enter
push
stos
jmp
mov
mov
mov
mov
das
inc
inc
mov
fsubrp
add
or
ljmp
lcall
xor
and
jns
cmp
fwait
mov
jle
out
sahf
call
pop
nop
mov
aam
lret
fistpl
outsb
movsb
adc
shll
pop
nop
jg
mov
xor
test
xchg
hlt
and
js
push
adc
push
movsl
fs
in
add
nop
repz
stos
mov
in
pop
sbb
cli
and
mov
sahf
out
cld
test
lret
inc
fstps
sub
leave
nop
pop
mov
lds
push
icebp
xor
push
xchg
mov
stos
inc
mov
inc
inc
mov
xchg
bound
xchg
lret
imul
loope
cmove
cli
and
mov
mov
xor
fs
mov
inc
mov
repz
jle
xchg
sub
or
push
shll
in
or
pop
mov
xor
rcll
ror
fs
adc
mov
push
movsb
mov
in
and
jmp
call
push
inc
scas
std
lret
into
sbb
xchg
loopne
cmpsl
or
nop
cld
inc
xchg
shl
cmp
adc
ss
mov
sbb
mov
mov
push
adc
je
mov
xchg
xor
cmpb
pop
push
xchg
and
jnp
subb
sub
aad
push
and
cmpb
adc
mov
mov
ljmp
jb
xor
iret
mov
add
stc
or
in
cmpb
hlt
jecxz
or
sub
xchg
mov
insb
push
dec
addr16
add
jo
cmc
in
push
or
xchg
push
sahf
pmulhw
cmpsb
push
stos
ret
inc
mov
imul
inc
cs
int3
dec
rclb
push
xchg
mov
xchg
mov
in
cmp
fldt
aam
imul
xor
sarb
fldenv
sub
and
fs
scas
dec
jecxz
xchg
add
or
ss
dec
into
loope
cmp
in
loop
les
lds
in
mov
popf
ljmp
repnz
aam
add
jecxz
arpl
into
shrl
push
jns
xchg
bound
jg
lods
sbb
dec
cmpsb
popf
inc
subb
orb
fs
adc
hlt
iret
xchg
mov
or
movsl
dec
call
cmpl
aaa
push
mov
movsl
out
pop
mov
sbb
sbb
fnstenv
and
push
sbb
adc
and
or
cli
add
sahf
push
mov
fstpl
out
sti
and
fistpl
imul
loopne
dec
aad
xchg
and
cmc
enter
into
cs
xor
mov
push
call
mov
dec
jne
clc
pop
or
jmp
fbstp
add
movsl
scas
loop
mov
pop
inc
add
add
data16
and
cld
add
fstpl
and
pop
jae
lods
add
push
jns
test
mov
ficoms
sbb
mov
sbb
xlat
mov
pusha
mov
add
push
adc
dec
sar
cld
xor
add
and
adc
cmpsb
inc
mov
push
clc
lret
add
sbb
loope
cmp
or
lret
pop
mov
push
jp
out
push
movsb
mov
cmp
dec
xchg
adc
sub
push
xor
sbb
je
lret
or
test
out
movsl
adc
notb
inc
jae
push
mov
ret
aad
pop
frstor
and
dec
in
enter
mov
rol
imul
call
cmp
and
subb
mov
mov
popa
scas
gs
sbb
dec
xor
aad
les
daa
test
push
ljmp
jo
jmp
push
pop
and
mov
pop
gs
lea
out
mov
popa
sarl
std
sub
xor
roll
xchg
jecxz
les
sbb
xchg
loop
and
adc
inc
lock
add
mov
jne
loop
xor
xor
cmc
imul
dec
lods
mov
inc
loopne
dec
inc
jg
add
push
push
add
jae
scas
ret
mov
pusha
push
mov
aam
jo
adc
fdivr
mov
ret
add
or
mov
popa
lds
cmc
test
outsb
xchg
call
dec
and
and
xor
pusha
and
mov
fiaddl
cmp
insl
dec
insb
lret
mull
mov
stos
aas
jg
mov
fwait
mov
cmp
icebp
xor
cmc
ds
dec
jle
sbb
and
dec
movsb
das
fsubs
jo
xlat
adc
in
sti
cmp
sbb
dec
jno
dec
add
mov
pop
inc
adc
add
in
push
adc
cmpb
icebp
ss
push
fldt
loope
cmc
test
cltd
cli
push
test
inc
dec
pop
xor
in
xor
mov
mov
xchg
leave
add
lods
es
cwtl
fstps
or
ljmp
in
fwait
clc
jns
push
out
or
mov
mov
fcmovb
xchg
push
mov
mov
ret
push
xchg
xchg
add
jno
lds
adc
fwait
inc
jecxz
xchg
aas
out
push
push
push
add
stc
sti
push
jb
outsb
stos
adc
pop
cmpb
dec
lods
mov
fcomps
adc
mov
std
push
sub
dec
adc
loope
mov
jno
cmp
aas
sbb
paddb
adc
ficoml
mov
fs
adc
fnstsw
fwait
les
fstps
ret
scas
jo
mov
pop
bound
adc
out
sahf
and
test
dec
aaa
pop
lock
push
dec
rcll
and
les
jl
push
lcall
mov
or
or
dec
mov
scas
sub
cs
add
cld
into
in
sti
jp
stc
jo
cmp
xor
and
jb
lds
aas
pop
lock
xor
mov
fnsetpm(287
mov
arpl
add
aas
jmp
xor
popa
xchg
sahf
in
fs
enter
adc
es
ljmp
push
lret
lahf
or
push
lods
aad
insl
jo
mov
dec
mov
incl
fwait
push
or
fsubl
push
js
mov
jne
mov
pop
scas
inc
mulb
ret
ljmp
add
pop
xor
in
push
out
mov
and
std
sbb
mov
into
lock
clc
mov
in
mov
aaa
mov
fistpl
call
xchg
shll
dec
in
inc
nop
repz
sti
jbe
je
sahf
and
movsb
add
xor
into
outsb
dec
and
dec
add
loopne
dec
adc
or
cwtl
movsb
mov
mov
xor
mov
sbb
cltd
push
xor
push
pop
imul
adc
jb
hlt
sub
test
cmp
cmp
add
jl
adc
scas
hlt
pop
mov
arpl
cmp
outsb
popa
pop
inc
test
lcall
xor
and
inc
lods
jo
cmc
cld
xor
adc
lret
or
add
outsb
xor
pop
add
imul
add
inc
pop
cmpsb
dec
jge
sub
movsb
insb
push
xor
popa
int3
or
xchg
xchg
pushf
cld
in
or
xor
ss
sub
mov
cmp
jb
xor
pusha
jp
popa
daa
cmpsb
inc
cli
mov
test
ret
dec
popa
out
fwait
call
cmpsb
jmp
xchg
mov
into
jne
adc
push
aam
outsb
push
pop
sti
je
mov
mov
lea
sub
mov
ss
stc
pop
and
adc
inc
push
sbb
lock
sti
mov
notb
or
sbb
insb
or
pop
cmp
call
ds
add
add
push
test
sbb
test
stos
pop
inc
cmp
push
cmpsb
ljmp
imull
pop
fsubrl
cmp
adcl
mov
jbe
inc
outsl
stos
add
push
and
rcll
xchg
sbb
arpl
test
xor
arpl
hlt
popa
mov
mov
or
cmp
pop
daa
arpl
push
es
xor
divb
dec
arpl
mov
mov
cmpsl
mov
stos
xor
pop
in
inc
sbb
xchg
icebp
rorb
es
enter
fidivl
adc
adc
imul
nop
test
inc
inc
and
lock
pop
mov
jmp
gs
sbb
mov
hlt
xchg
sbb
lods
lea
mov
sub
in
insl
mov
call
fdivrs
fldenv
or
in
or
fstl
jne
sub
ljmp
push
rclb
jge
pop
push
or
imul
in
pop
push
pop
xlat
pop
roll
ljmp
js
sub
popa
filds
xchg
xor
push
lahf
mov
mov
cmp
fstl
les
and
ja
cltd
dec
cmp
jle
lea
mov
insb
inc
xlat
pop
adc
mov
hlt
adc
jp
xchg
call
and
pusha
stos
sbb
cmp
mov
mov
xchg
arpl
pop
test
dec
mov
shll
imul
xlat
arpl
lock
outsl
stc
xchg
sti
popf
sbb
fcmovne
pop
cli
mulb
mov
jns
mov
addr16
xchg
push
ss
jnp
inc
pushf
mov
fstpl
jmp
mov
xchg
out
mov
adc
iret
xchg
push
inc
sbb
pop
inc
push
or
dec
adcl
mov
lds
and
aas
or
mov
dec
mov
fldenv
mov
loopne
shrl
cmpsl
enter
and
mov
mov
and
inc
popa
mov
push
sar
sbb
fisttpll
lds
jle
push
cmpsb
iret
pop
adc
push
fsubrl
pushf
sbb
pop
in
stos
xor
xor
dec
dec
enter
pop
lods
jb
sub
push
popa
or
jp
ds
icebp
fcoml
fstps
ret
push
std
into
ds
xchg
push
sbbb
icebp
add
dec
mov
xor
popf
hlt
xlat
ret
inc
dec
jns
xchg
call
cmpsl
xchg
pushf
inc
dec
test
aas
es
inc
out
add
cmpsl
inc
push
inc
dec
icebp
or
xor
add
inc
stc
xlat
adc
dec
into
inc
pop
jno
rcrl
test
inc
mov
lods
sbb
xor
xchg
push
out
ljmp
jg
js
cmp
mov
test
filds
xchg
mov
ud2
mov
sub
mov
adc
int
aaa
sub
dec
cli
cwtl
cmc
sub
sub
sub
int
jno
jecxz
in
adc
pop
bound
mov
stos
std
mov
xchg
aaa
js
outsl
fwait
jl
or
test
loope
pop
fdivrs
sub
mov
jns
dec
outsl
jp
in
sub
stc
fbstp
jge
mov
and
mov
stos
inc
outsb
mov
orb
jbe
inc
fs
popa
xchg
fldt
jb
lret
sahf
repnz
adc
cs
xchg
sbb
insb
rcl
sub
add
xchg
jmp
xchg
xchg
addr16
or
icebp
and
imul
push
or
dec
mov
ret
lods
je
inc
push
sbb
lahf
cmpsl
push
cli
ficoms
pusha
lcall
mov
mov
std
cmp
sub
xor
in
sub
jns
pusha
dec
adc
push
mov
mov
cmp
mov
sub
lods
in
adc
sbb
mov
and
push
sbb
clc
enter
push
push
lods
ret
insl
sahf
jl
mov
into
out
xor
sbb
push
cmp
sub
ds
mov
or
inc
cmpsl
fs
push
jle
or
faddl
stos
adc
push
mov
add
dec
loope
cld
scas
hlt
shll
jl
xor
pop
enter
xchg
push
neg
test
xor
push
enter
xchg
push
dec
jns
ret
mov
cwtl
sti
pop
mov
xchg
rcr
stos
fimull
mov
rcr
jnp
mul
aad
fldl
sbb
xor
jle
out
rcrb
fistpll
xor
inc
dec
rorb
inc
fs
sub
les
out
xchg
xchg
pop
dec
sahf
shr
cli
inc
repnz
imul
sbb
mov
outsb
lret
ret
mov
je
out
sahf
enter
test
dec
xor
or
inc
or
dec
icebp
mov
cmp
pop
mov
jg
into
arpl
xchg
xchg
xchg
in
push
or
cmp
sti
fiadds
jno
sbb
popa
xchg
ja
inc
pop
test
and
ljmp
adc
loopne
lret
popa
push
shlb
data16
push
push
jecxz
and
jae
loope
pop
push
stos
cld
loop
mov
mov
pop
mov
pop
mov
ja
pop
mov
pop
sub
adc
dec
xchg
lret
cld
test
push
jle
sti
sti
out
adc
aas
out
sti
icebp
fs
and
sbb
pop
push
dec
sarb
jecxz
out
mov
cli
sub
mov
sbb
xlat
lcall
arpl
jno
jb
std
ja
or
mov
sub
jno
cwtl
pop
daa
addb
mov
stos
cmpsb
int
int3
mov
jl
cmc
push
dec
dec
nop
lcall
lock
sub
inc
sahf
inc
xor
jp
imul
pop
cmp
xor
pop
test
add
pushf
and
adc
push
pop
in
add
subb
push
xor
in
jmp
cmp
jmp
ljmp
xchg
fldcw
in
ds
aad
js
insb
cmp
sbb
mov
gs
in
pop
push
jge
mov
add
mov
sub
mov
pop
loope
sbb
sub
sbb
mov
rorl
cld
and
loopne
repz
daa
mov
and
lock
lahf
push
mov
ljmp
test
xchg
jbe
inc
pop
mov
ja
or
jp
sbb
jle
add
shlb
dec
pop
and
and
in
cltd
add
testl
mov
das
rcll
mov
push
jne
cmp
push
test
mov
enter
aad
fdivrl
jmp
push
out
stos
or
shlb
cwtl
inc
mov
mov
adc
or
fnstsw
add
arpl
push
xchg
add
jg
jae
pop
cmpsl
mov
jne
hlt
ret
ret
les
push
movsb
pop
or
jge
movsb
cmp
imul
lcall
mov
push
jg
dec
pop
fcmovnb
in
fwait
int3
js
sub
es
pop
mov
cli
repz
xchg
aam
or
mov
das
add
sub
xor
inc
and
sti
lods
aam
sub
inc
mov
mov
es
dec
imul
test
mov
sbb
or
ret
shl
dec
imulb
jge
insb
inc
xor
iret
mov
in
jl
pusha
pop
lock
nop
stos
push
jecxz
cmc
mov
mov
ret
jo
test
rcrl
stc
mov
addr16
stc
ss
inc
cmp
mov
lock
test
push
inc
popa
add
dec
lods
out
lds
xchg
loopne
dec
sub
add
dec
ret
and
into
add
jecxz
fidivl
mov
sub
mov
in
xchg
icebp
and
mul
ficoms
pop
pop
pop
pop
outsb
mov
jne
ret
cwtl
cmp
cmp
sahf
pop
mov
mov
sar
pop
shrl
or
call
adc
roll
mov
in
imul
mov
sbb
cmp
push
outsb
imul
subl
dec
push
cmp
sub
and
and
mov
movups
aaa
cmp
xor
or
sbbb
jmp
sbb
inc
lret
inc
out
xlat
mov
add
popa
repnz
and
test
dec
xchg
cmp
or
push
in
or
push
dec
mov
sbb
mov
popa
push
out
cltd
xchg
fwait
xorb
sbb
xor
sbb
jns
es
testb
mov
cmpsl
mov
mov
push
and
icebp
xchg
sbb
cmpsl
in
pop
jg
dec
jle
lock
iret
movsb
add
imul
popf
out
inc
add
mov
xor
xchg
repnz
lahf
sbb
sbb
je
push
and
lcall
push
inc
inc
lret
test
stos
pop
push
pop
insl
inc
add
loopne
xchg
cmp
inc
ljmp
jmp
ljmp
out
fs
das
imul
cwtl
rorl
mov
push
push
xor
aaa
xor
mov
stc
stos
dec
inc
and
mov
sbb
adc
lcall
std
inc
out
daa
out
insb
mov
insb
jmp
adc
dec
int3
adc
push
jmp
cmp
std
pusha
add
pop
mov
inc
add
and
lcall
add
or
mov
pop
lcall
enter
xor
sub
mov
xchg
pop
dec
ss
ljmp
mov
out
pop
out
roll
ljmp
in
mov
mov
cltd
inc
mov
ret
daa
cwtl
cmp
inc
mov
xor
adc
cmpsb
adc
jne
adcl
jns
cld
mov
jb
mov
inc
arpl
fstpt
mov
mov
sub
cmp
in
dec
sti
imulb
imul
push
xchg
add
xchg
sbb
out
cli
iret
clc
xchg
les
mov
xor
add
mov
mov
lahf
ret
inc
enter
add
adcb
mov
js
cmpsl
or
and
subb
mov
ds
inc
scas
mov
mov
pop
imul
dec
xchg
inc
jmp
add
mov
addr16
jmp
fmuls
xchg
adc
mov
fdiv
lods
pop
xor
mov
lret
xlat
xchg
scas
push
dec
xor
invlpg
aam
and
cmp
cltd
sbbl
hlt
rolb
pop
push
je
gs
mov
sub
cs
scas
mov
in
fbld
pop
int
inc
jl
outsb
aaa
mov
sub
dec
mulb
sbb
call
shr
inc
ret
in
pushf
outsl
call
mov
xchg
js
mov
fisubrl
jbe
jbe
insl
fdivr
fmull
or
jecxz
insb
and
xchg
sbb
movsl
push
test
stc
jp
pop
mov
hlt
dec
xchg
mov
punpcklwd
adc
cmp
inc
repnz
jae
jb
dec
xchg
addr16
lds
push
adc
jns
push
xor
or
cwtl
cwtl
push
dec
push
sub
add
push
mov
mov
adc
pop
cwtl
aaa
insb
and
hlt
les
les
cmpsb
mov
pop
sbb
jno
shll
adc
mov
jmp
popf
dec
mov
hlt
and
jecxz
push
dec
imul
mov
inc
inc
xchg
icebp
loop
dec
jge
dec
adc
xchg
xchg
cmp
incl
jbe
jp
or
sub
fmull
adc
shlb
push
insl
mov
js
or
dec
inc
je
aaa
and
dec
jb
pop
or
jmp
or
pop
lret
movsl
ficompl
jmp
adc
test
jno
sarb
pop
push
push
cwtl
cmp
mov
fiaddl
cmp
or
push
or
inc
mov
mov
mov
jae
roll
mov
cmp
jno
scas
decl
add
in
divb
or
imul
bound
les
das
mov
push
sub
in
add
bound
movsb
mov
push
fdivs
xchg
xor
xor
rclb
addl
inc
sarl
into
sar
push
sbb
cmp
add
mov
out
push
scas
js
sbb
testb
and
mov
fimull
insl
or
das
or
jb
iret
notb
dec
int3
xchg
sahf
ja
or
mov
cmpsl
and
mov
sarb
dec
enter
out
xor
adc
cmpb
andl
enter
xchg
xor
add
jne
cmp
fcomip
movb
push
jl
cmp
mov
mov
ret
xor
clc
fcmovnb
daa
std
dec
dec
add
sahf
dec
ret
pop
adc
mov
mov
data16
les
xchg
xlat
adc
xor
sub
push
jle
lahf
into
sub
test
mov
pop
lret
and
stos
fsts
cmpsb
cmp
dec
arpl
pop
mov
call
or
push
mov
dec
js
iret
inc
mov
call
xorl
in
mov
push
test
invlpg
fidivrs
popa
lahf
repnz
lods
cmc
jge
push
fs
rorb
push
out
ret
mov
inc
leave
in
push
jp
imul
mov
gs
cltd
and
push
mov
adc
insl
idivl
ss
and
ja
adc
xchg
scas
mov
fs
je
data16
lret
jo
sub
mov
jno
fdivrp
fistl
push
pop
cld
xor
fucom
fwait
mov
dec
add
mov
mov
jnp
dec
mov
popa
mov
and
inc
jno
mov
cmp
ljmp
mov
pop
mov
popf
mov
jne
icebp
xor
iret
rclb
adc
scas
cld
ret
sbb
add
sbb
sahf
inc
into
in
cmp
out
stos
sahf
push
dec
test
sub
aas
dec
dec
iret
jge
adc
cmp
dec
cld
sbb
add
arpl
push
adc
or
daa
leave
or
push
fs
push
mov
std
push
or
arpl
add
lret
out
jae
inc
scas
mov
add
shrl
cmc
jb
sbb
clc
adc
addr16
in
in
push
jno
adc
test
xchg
dec
push
push
movsb
insl
lods
icebp
and
mov
bound
cmp
fsub
cmpsb
cli
xor
out
adc
insl
iret
imul
rclb
icebp
xchg
pop
aad
mov
daa
lahf
test
and
mov
xchg
mov
adc
sub
nop
ss
xor
repz
jmp
cmpsl
fdivs
out
sti
mov
xor
xor
data16
push
jne
xor
or
mov
icebp
and
in
and
xor
sub
adc
fdivrl
inc
pusha
test
shll
sarb
out
jbe
xchg
popa
gs
stc
in
sbb
xlat
sarb
fcomi
dec
cmpsl
aaa
xor
arpl
adc
rcll
repnz
aaa
add
mov
mov
sar
sahf
sub
test
in
bound
stos
and
sbb
adc
gs
ja
shl
mov
ss
jmp
hlt
test
pop
xchg
imul
roll
xor
cmpsb
cli
add
aad
mov
nop
fisubrl
int3
adc
xor
rcrb
pop
sub
jo
pop
jle
add
das
scas
nop
popf
pop
mov
xor
cmp
mov
test
enter
or
mov
imul
ret
popf
div
inc
mov
shll
and
in
ret
jbe
jle
push
mov
sarb
sti
cmp
roll
cmp
mov
daa
push
xor
mov
cmp
adcl
push
bound
xor
mov
xlat
stos
add
jge
inc
pop
outsb
xor
mov
push
mov
dec
sti
sbb
leave
mov
sub
xor
jl
jecxz
inc
jno
pop
or
and
stos
stos
sub
test
in
lret
sbb
push
xor
fsubs
les
repz
xchg
repz
insb
and
movsb
rcrb
outsb
insb
stos
xchg
jg
gs
inc
call
pop
punpckhdq
insb
mov
lds
lock
stc
mov
cmp
lods
adc
fcoml
lret
lds
pusha
xchg
push
scas
fnstenv
sbb
sub
enter
xorl
mov
mov
dec
popf
ret
cmpsb
les
cwtl
cmpb
imul
adc
sbb
data16
push
daa
lahf
cmp
mov
orb
mov
cmp
cmp
push
sub
lods
sub
popf
and
xchg
gs
push
push
pusha
adc
jbe
movsb
push
mov
fimuls
stos
xchg
mov
data16
xor
sub
dec
mov
es
subl
push
inc
and
inc
mov
insb
sub
push
in
add
fs
pop
or
psrad
mov
iret
sbb
sarb
or
push
push
xchg
adcl
jl
jo
dec
or
nop
in
das
push
sbb
push
push
inc
inc
daa
inc
aas
inc
jno
out
sub
sbb
push
rcll
pop
mov
xor
inc
movsb
pushl
jl
xchg
mov
pop
pop
call
add
inc
call
in
inc
and
mov
xchg
clc
xlat
sub
push
jmp
bound
xchg
or
call
fwait
inc
movsl
pusha
push
inc
mov
cmpsl
out
pop
mov
mov
and
jecxz
push
xor
dec
repnz
out
movsb
adc
mov
loop
addr16
fimull
push
test
bound
es
mov
mov
lahf
sbb
and
outsl
pop
push
push
test
scas
xchg
push
and
cmp
ds
cs
push
cmp
movsb
stos
stc
and
scas
ffreep
sbb
push
mov
shll
cltd
sub
sarl
insb
ret
add
int3
shlb
mov
mov
pop
popf
push
adc
inc
inc
inc
dec
add
aas
add
xchg
xchg
addr16
ljmp
hlt
call
pop
icebp
adc
xor
jecxz
lds
mov
das
inc
push
push
aas
lret
addr16
push
xor
inc
mov
cmc
and
movsl
jnp
dec
bound
cld
popa
dec
dec
scas
dec
ret
filds
or
jp
sbb
sbb
lahf
sbbb
popa
pop
arpl
test
fcoml
sbb
cltd
sarb
sbb
push
ret
cmc
in
xchg
in
dec
xlat
jae
das
in
lea
sub
mov
xor
dec
jg
fidivrl
pop
roll
lock
xor
xor
mov
pop
shrl
mov
jmp
leave
sbb
xchg
inc
loope
test
pop
mulb
insl
jecxz
test
cmpsb
adc
icebp
sub
daa
push
movsb
rorb
popf
mov
push
mov
icebp
movsl
add
js
sub
cld
push
jmp
xor
loop
jae
test
mov
into
push
pop
movsb
mov
pop
loopne
fdivrs
nop
dec
jnp
scas
mov
sbb
rcl
dec
sahf
ja
sahf
popa
cmpsb
xor
xchg
xlat
xor
push
scas
dec
sub
adc
aam
lds
xchg
sub
sub
pop
ret
pop
inc
xor
dec
pushf
push
adc
add
movsb
subl
popa
inc
mov
ret
lods
in
rcl
insb
push
mov
adc
and
push
adc
xchg
cmp
xchg
idivb
cwtl
dec
jmp
enter
mov
xchg
add
arpl
mov
test
notl
movsl
sbb
dec
and
mov
sub
incb
pop
int
negb
imul
sbb
leave
add
mov
lods
lock
sbb
push
cmpsl
dec
fsubp
jl
mov
mov
inc
push
mov
xor
push
iret
jmp
xor
and
dec
outsb
rclb
sahf
dec
arpl
fisttpl
cld
lcall
push
sbb
jne
jp
cmp
jp
inc
icebp
sbb
inc
pop
mov
add
and
xchg
push
in
push
lahf
outsl
lret
mov
lahf
dec
rclb
lea
into
mull
and
mov
adc
pop
sbb
shll
je
jns
punpckhdq
mov
int
lods
cmp
loopne
into
rolb
or
add
fisttps
fstps
cmp
push
mov
mov
xor
std
push
outsl
lahf
leave
in
mov
fiadds
subl
pop
inc
lret
adc
daa
pop
push
mov
adc
rol
stos
outsb
mov
icebp
pop
hlt
shll
mov
xchg
popa
icebp
ja
mov
cmp
pop
cmp
lods
jp
dec
mov
lods
mov
fwait
enter
or
dec
cld
jns
loop
imul
jne
daa
mov
adc
and
xchg
aam
push
int
in
add
repnz
test
clc
add
mov
mov
pop
aad
jbe
dec
adc
fnstenv
fldt
addl
and
push
fwait
loope
pop
sub
cmp
mov
jmp
mov
push
mov
dec
iret
mov
jle
cmp
jp
adc
adc
inc
andl
mov
cwtl
cld
mov
in
fists
jle
cmp
mov
pop
aam
fistl
loope
movsl
js
jb
cmp
addr16
xor
jns
mov
int
jae
xlat
sub
lret
testb
mov
in
dec
cld
push
push
inc
pop
mov
fdivrp
cli
push
bnd
push
es
pusha
adc
pop
sbbl
in
inc
arpl
cmpsb
mov
and
pop
aaa
mov
jno
sbb
in
pop
xor
repz
in
add
add
push
sub
call
clc
aad
imul
ljmp
xchg
add
ret
sbb
or
rorl
jns
aam
sub
or
shrb
and
sub
mov
add
pop
fisubrl
stos
repnz
ljmp
add
pop
sbb
cwtl
sub
je
mov
lret
jecxz
inc
repz
int3
add
mov
and
test
ja
lock
cmc
xor
and
lahf
repnz
mov
hlt
push
pusha
push
outsl
int
inc
xor
popa
xchg
scas
movsb
in
mov
jecxz
aam
and
test
push
movsb
lock
or
ss
cmp
imul
enter
pop
jbe
mov
shlb
scas
mov
in
fwait
mov
test
loopne
daa
xor
cmp
jg
mov
pop
xlat
or
std
sti
mov
mov
and
xchg
jl
test
clc
push
cmc
loop
sub
ret
adc
push
mov
int
or
arpl
mov
nop
xchg
ljmp
inc
enter
pushf
icebp
cmpsb
popa
add
inc
cmp
jbe
ret
inc
push
sbb
and
lcall
add
mov
mov
xchg
hlt
dec
mov
sub
jmp
push
inc
add
xchg
subb
and
dec
xchg
out
pushf
inc
xor
mov
adc
jl
pop
dec
cld
jmp
and
jg
shlb
pop
add
js
orl
test
cmp
enter
out
es
call
jp,pt
imul
and
jo
cmp
std
out
std
or
cli
dec
stos
mov
jg
pop
pop
repnz
jno
js
pop
mov
out
lock
mov
push
test
test
das
xor
push
stos
in
in
lock
pop
ret
xchg
and
mov
iret
jns
jbe
pop
cmpsl
xchg
mov
repz
or
int3
sbb
rcrl
mov
push
pop
lock
into
mov
sub
mov
out
inc
adc
push
clc
push
insb
movsl
ljmp
orl
jo,pt
aaa
sbb
xor
inc
orl
jmp
push
dec
subb
ss
outsl
mov
dec
orb
insb
mov
call
dec
inc
call
cmp
jge
movb
in
cmp
mov
aas
cltd
push
sbb
hlt
push
inc
ljmp
pop
fnsave
adc
add
adc
push
mov
int
les
adc
adc
mov
dec
and
inc
xchg
scas
dec
stc
dec
sub
push
loop
xor
pop
xor
pop
dec
test
dec
mov
xor
dec
aad
rcl
in
in
or
mov
mov
dec
mov
adc
xlat
xor
fstpt
xor
outsl
popa
and
ja
shll
push
jl
sbb
in
jle
cmc
lods
les
and
faddl
shr
jb
stc
aas
rorb
dec
imul
rcrl
int3
pop
aas
or
icebp
xor
mov
mov
pusha
movsl
test
mov
iret
xchg
sub
push
out
addr16
stos
ds
dec
push
push
je
negb
and
push
inc
lds
jp
adc
xor
mov
ror
das
outsl
mov
cs
dec
int3
mov
paddsb
cmp
dec
sbb
jl
aas
test
data16
outsl
push
jle
push
mov
dec
pop
lds
mov
or
cmpsb
in
and
or
inc
inc
jb
subb
incb
int3
mov
sbb
loopne
rcl
cmpl
sub
pop
mov
sbb
xchg
fsubl
inc
xor
and
ja
xchg
cmpsl
in
add
fsubrs
sbb
jge
outsl
popl
cwtl
int3
xchg
jbe
test
imulb
sti
xor
imul
and
dec
in
dec
test
inc
xchg
addr16
or
outsb
pop
push
iret
sub
pop
mov
mov
ficompl
int
nop
or
jl
clc
mov
cmp
clc
aad
fwait
xchg
cwtl
pop
stos
pushf
sbb
in
xchg
ret
jnp
cld
xchg
xchg
xor
xchg
test
stos
or
inc
mov
and
pop
cwtl
xor
out
push
jl
cmpsb
jmp
out
or
mov
xchg
mov
pop
dec
cmp
loopne
iret
add
lret
roll
xchg
sub
repz
lcall
shrl
stc
push
jmp
ljmp
jg
cmp
cmpl
jne
ljmp
call
fsub
mov
mov
incl
or
imul
dec
inc
jo
rcl
sbb
jl
jg
xchg
or
cmpsb
enter
scas
stos
test
std
fdivs
outsb
jg
jle
jbe
iret
pop
hlt
das
jae
xor
faddl
dec
pand
mov
ds
jmp
jmp
aas
sub
mov
movsl
cmc
fstl
xor
mov
mov
hlt
mov
xchg
sub
stos
xchg
push
cmp
push
cmp
divb
push
xchg
mov
mov
sub
inc
call
lret
mov
push
roll
das
aam
enter
rcl
in
enter
xorb
dec
pop
out
mov
cmp
cmpsl
sbb
lahf
xchg
or
es
les
mov
mov
outsb
ret
aas
xchg
pop
enter
cmpl
aam
dec
cmp
aaa
push
fsubl
sub
dec
pop
pop
lds
xorb
pusha
jb
inc
pop
shlb
xchg
sub
enter
mov
adc
push
repz
dec
or
ds
cmp
jp
lock
aas
lds
dec
sub
xchg
aad
scas
scas
sbb
jo
cmc
repz
stos
mov
rcrl
outsl
fstps
js
cmp
cli
mov
inc
outsb
adc
jg
sbbl
xor
pop
imul
and
fistps
push
out
aad
cmpb
pop
push
jno
and
loope
fbstp
shlb
add
sbb
out
push
mov
mov
in
mov
fs
mov
sub
pop
push
test
inc
xchg
ja
add
mov
push
lods
sti
or
jns
mov
clts
xor
pop
or
xor
adc
pop
fmuls
inc
cmp
cmp
jmp
xor
sti
icebp
jl
push
addr16
fisttpl
sbb
mov
push
cmp
jbe
xor
jl
iret
mov
sbb
fcmovnu
je
test
test
jo
out
xchg
test
cwtl
cmp
mov
sub
and
jbe
xor
roll
mov
inc
popf
int3
pop
outsb
out
sbbl
pop
repnz
mov
jns
stc
sti
lods
loop
and
jecxz
cmp
icebp
sbb
fbstp
mov
mov
cmp
out
lock
popa
fmull
push
in
nop
rcr
ret
mov
sbb
mov
jae
push
xchg
dec
jle
pop
aas
in
out
or
imull
add
ljmp
mov
iret
dec
add
mov
or
inc
xchg
jo
xchg
imul
jge
xchg
xchg
std
ror
and
fisttpll
scas
sti
add
dec
add
dec
mov
pop
push
daa
ret
xchg
loop
cmp
dec
lcall
mov
mov
sbb
notl
pop
leave
imul
xchg
out
mov
in
pop
stos
mov
pop
fs
mov
mov
repz
push
inc
lock
or
pop
adc
mov
jo
adc
aaa
test
jge
pop
pop
loope
ja
nop
setnp
adc
les
push
cmp
das
add
scas
fcmovnb
aam
xor
movsb
stc
lahf
pop
jnp
imul
ja
call
inc
inc
pushf
imul
jl
ss
pushf
pop
add
jns
cmp
je
dec
mov
pop
xor
jmp
cltd
addl
pop
adc
xchg
nop
into
mov
dec
pop
iret
jge
notb
pop
cmp
pop
ror
repz
pop
jo
adcl
xor
sub
xchg
test
push
xchg
mov
sbb
sbb
mov
call
sub
and
aaa
pop
in
adc
scas
nop
int
fdivrs
push
add
ret
insb
js
fisubrs
jle
mov
dec
or
adc
out
stc
mov
or
scas
out
mov
mov
push
dec
aam
mov
cltd
xchg
fldenv
adcb
sub
adc
fwait
push
in
data16
scas
mov
cmp
sub
sarb
sub
movsb
fstps
or
cltd
sti
arpl
loop
add
das
mov
sub
mov
shrl
push
or
repnz
fimull
lret
fucomp
xchg
lea
push
mov
jns
mov
adc
xchg
daa
lret
or
inc
and
xchg
cld
rol
mov
xor
or
push
out
in
mov
dec
mov
jbe
xchg
or
fadds
dec
xor
testb
push
sbb
shlb
add
stc
or
pop
imul
jp
pushf
pusha
shrl
xor
out
in
cwtl
adc
pushf
push
pushf
xor
ret
in
inc
jge
dec
mov
jo
mov
add
in
test
daa
inc
mov
mov
xchg
cwtl
ja
leave
adc
push
add
aaa
adc
adc
pop
mov
sub
cmpsb
fimull
mov
fcmove
mov
and
dec
nop
loopne
cmp
add
stos
mov
push
mov
xchg
xchg
inc
and
mov
popf
ljmp
rolb
xlat
inc
jnp
andl
mov
fs
push
cmp
enter
pusha
sbb
jns
xchg
add
mov
pop
mov
cmp
mov
loope
xchg
and
nop
out
aad
stos
add
pop
xor
testb
sahf
out
test
rorb
rclb
mov
ljmp
mov
push
push
je
cmc
imul
in
sbb
es
dec
sub
and
cmp
or
in
imul
mov
add
mov
mov
je
jge
jo
xor
test
cld
pop
movsl
scas
xchg
std
test
jle
pop
inc
mov
lret
mov
mov
jae
xchg
mov
ret
add
push
mov
sub
mov
ss
lahf
test
insb
gs
and
lock
mov
mov
or
orb
call
data16
pusha
jne
repnz
jle
mov
push
scas
imulb
rorl
mov
orl
or
iret
insl
imul
push
dec
movsb
push
pop
xchg
pop
add
lods
das
sarl
insb
in
push
shrb
pushf
subl
stos
out
and
sbb
jecxz
lcall
sbb
icebp
dec
sub
out
das
mov
jmp
jge
or
hlt
inc
pop
jl
mov
jae
cmp
jge
inc
adc
and
inc
test
pushf
lret
dec
cmp
xchg
scas
pop
and
dec
mov
or
stc
mov
fiadds
repz
nop
in
fst
add
xlat
out
hlt
xorl
outsb
and
and
pop
and
dec
loopne
lock
aaa
xor
clc
fistpl
pop
notb
andb
mov
scas
push
es
and
outsb
mov
out
int
fdivl
lods
mov
pushl
ret
mov
xchg
ficoms
sub
jae
push
es
popf
mov
add
test
insb
jns
fcmove
into
mov
cltd
call
mov
test
push
les
xchg
in
cld
and
fisubrl
lahf
cmp
aad
and
inc
jmp
shll
addl
lods
lcall
jae
outsb
lret
dec
sub
sbb
push
sbb
rcrl
in
sbb
add
pop
int3
andb
jnp
xorb
arpl
loopne
mov
mov
insb
jne
or
cmp
mov
das
scas
cmp
mov
pop
in
pusha
sub
sub
mov
into
loope
push
stc
xchg
lds
push
mov
repz
xor
dec
subb
gs
push
mov
outsl
mov
mov
test
mov
aaa
cmpsl
jo
sub
fists
add
dec
ljmp
cwtl
sub
cmp
push
sbb
clc
aaa
or
divb
mov
addr16
mov
sub
sbb
sbb
mov
mov
cmp
jge
hlt
sar
test
pop
push
push
mov
pop
adc
pusha
jp
mov
cld
xchg
pop
push
add
test
sti
push
leave
nop
cwtl
ficompl
rclb
adc
int3
popf
pushl
int3
xchg
mov
xchg
mov
mov
or
sub
lds
bound
cld
in
aaa
shll
mov
stc
mov
loopne
subl
scas
push
daa
push
inc
xor
adc
push
sahf
das
cmp
cmp
lds
subb
in
push
mov
jl
mov
fistl
cs
xchg
xor
je
enter
xchg
xchg
test
jmp
and
imul
mov
mov
xchg
test
leave
pop
js
inc
hlt
pop
or
clc
cltd
xchg
jmp
add
jns
scas
icebp
addr16
xor
testl
add
fmull
pop
iret
cmpsl
test
cmp
inc
rcl
mov
dec
loop
aam
ljmp
adc
cmp
xorb
add
xchg
fsubrp
jno
pop
roll
mov
hlt
sbb
and
mov
pop
scas
inc
push
mov
cltd
movsb
pop
inc
imul
ficompl
sbb
mov
insb
les
inc
ja
cli
popf
bound
or
xchg
int3
mov
popa
ret
xchg
les
push
mov
mov
cmp
cli
add
xchg
inc
cmpsl
or
sbb
pop
orl
and
xchg
adc
xchg
scas
sub
std
xor
pop
jmp
mov
jmp
ret
xchg
push
jb
jns
lds
cli
mov
sub
andl
inc
sbb
in
mov
arpl
jmp
jle
cwtl
xchg
aas
jmp
test
rcrl
pop
popa
sub
insl
add
adc
mov
inc
mov
mov
das
xor
push
out
or
dec
cmp
cmp
or
fdivrl
push
test
dec
jne
mov
cmp
mov
and
hlt
stos
mov
fwait
jg
xchg
jbe
push
cmp
aaa
in
and
ret
dec
lds
xchg
jbe
shll
jb
int
adc
pop
add
mov
outsl
mov
fiadds
mov
pop
push
fstpl
sbbb
sub
rcrl
test
test
jp
jnp
notb
divb
scas
inc
pushaw
fs
sub
dec
scas
sub
mov
dec
test
dec
rol
pop
dec
push
cmpsb
les
test
xor
test
push
bound
mov
and
cmp
cmc
dec
xchg
std
stos
push
nop
cmp
ljmp
pop
push
jle
sbbl
jbe
lcall
jl
xchg
in
inc
imul
xchg
push
mov
push
or
test
sub
das
dec
in
data16
les
fs
push
shl
outsb
push
pop
pop
mov
std
aam
mov
lods
cmpsl
lret
mov
pushf
adc
lahf
loopne
flds
subb
enter
pop
jnp
sbb
dec
ds
sti
push
pop
inc
ljmp
mov
fnstcw
lock
add
sbb
add
add
cmp
repz
sub
sarl
in
jb
call
mov
js
inc
jecxz
sbb
cmpsl
mov
or
shl
das
dec
int3
adc
sub
mov
and
push
mov
jecxz
jbe
xor
sbb
xchg
dec
sbb
jecxz
aam
or
push
in
enter
in
jns
das
adc
cmp
mov
js
test
ds
mov
cmpsb
rol
xor
sub
sbb
mov
mov
mov
mov
test
jb
lock
adc
dec
mov
mov
jne
cmpsl
cs
adc
js
dec
sub
fwait
js
push
and
lea
jno
add
enter
add
lcall
mov
sub
and
out
int
loopne
xchg
xor
add
call
push
jae
or
in
add
jb
jns
scas
xchg
out
pop
adc
cli
stc
es
push
add
add
out
cwtl
dec
data16
fildl
fcompl
into
dec
push
cmpsl
pop
mov
jmp
adc
xor
lock
pop
xor
xchg
imul
pop
lds
mov
sahf
stos
adc
lea
jge
or
dec
mov
pushf
mov
out
push
cmp
loop
fdivrl
sbb
sarl
std
cmp
add
outsl
leave
inc
ljmp
js
inc
add
into
int
push
into
push
insl
sti
sub
push
lock
pop
call
xor
ret
add
add
xchg
add
lods
sahf
fdivrp
jo
pop
adc
subl
insl
cld
mov
push
cmp
out
sbb
mov
outsl
out
fcoml
cs
mov
jmp
jle
daa
pop
cmpsb
mov
aaa
ja
test
mov
adc
fists
inc
mov
adc
cmp
mov
leave
popf
das
aam
imul
fcmovbe
loop
vshufps
or
jle
add
cltd
push
xor
call
xorl
cmpsl
lret
addr16
ret
ds
aam
lds
adc
in
fstpt
test
pop
push
mov
xchg
ficoms
stos
xchg
add
sub
fsub
mov
push
and
clc
pop
das
xlat
stc
pop
xchg
jg
sbb
sbb
mov
xor
outsb
enter
sbb
outsb
movsl
xor
jo
sbb
mov
dec
inc
icebp
in
or
cmpsb
xor
push
lcall
jb
mov
idivb
pop
push
mov
pushf
dec
mov
add
ficomps
push
scas
jp
mov
test
sbb
and
xchg
mov
sub
inc
cs
fisubrl
cmp
xor
pop
or
xchg
imul
sbb
rcrb
rcrb
movsl
outsl
mov
push
jno
hlt
inc
push
pop
or
sbb
mov
insb
jmp
sub
sub
orl
cld
test
mov
and
into
inc
popa
mov
enter
es
lea
push
sub
pop
addb
xchg
push
ret
jp
cli
movsl
pop
scas
adc
mov
dec
cs
jo
lret
cwtl
dec
cmp
and
fs
mov
ror
or
dec
mov
or
pop
int3
test
fadds
lret
lock
sti
outsl
jae
lret
and
mov
jnp
fs
mov
jb
bound
aaa
mov
in
cmp
in
aad
cltd
loop
loop
push
insb
xchg
or
loop
add
cmpsb
hlt
xchg
stc
out
xchg
add
lret
inc
adc
adc
xchg
push
mov
and
xchg
lods
add
lret
hlt
outsb
mov
enter
pop
cwtl
xor
arpl
cld
movsl
pop
inc
mov
mov
cmp
fistl
sub
mov
mov
xchg
add
cmc
push
call
fwait
aam
or
dec
push
fcomi
insb
sbb
dec
out
mov
and
out
dec
mov
daa
rcrb
lds
or
ret
xorl
cmp
mov
sub
xchg
mov
test
sbb
insl
push
mov
fstpl
pop
xor
dec
lock
std
repz
fnstsw
pop
js
enter
subb
in
sbb
pop
jp
and
jns
push
inc
adcl
and
pop
mov
pop
call
bts
cld
test
dec
xor
frstor
mov
aas
stos
mov
push
fcomps
mov
mov
inc
ja
cld
jmp
arpl
loopne
into
movsb
add
mov
shrb
repz
enter
enter
inc
in
scas
adc
pushf
lahf
jae
cmpsl
cmp
lods
push
xchg
push
in
pop
adc
addr16
sbb
sbb
mov
out
jnp
sub
inc
mov
pmullw
mov
faddl
jno
inc
xor
out
jge
scas
imull
mov
lods
addr16
jge
test
xor
stos
lret
addl
test
fsubrl
sti
xchg
add
loopne
int3
push
fistpl
xor
sahf
or
cmp
test
mov
movsb
pop
mov
mov
dec
mov
stos
popf
sahf
sti
fiadds
mov
mov
push
push
adc
fwait
inc
data16
test
or
cmc
jp
sub
mov
in
leave
fldenv
dec
lock
das
mov
mov
das
divb
lret
jle
das
cld
and
mov
pop
js
lock
enter
arpl
dec
xchg
xor
aas
jnp
sub
idivb
sarb
inc
push
inc
in
pop
cmp
and
stc
aam
xchg
xor
insb
stos
xor
scas
mov
add
adc
mov
popa
decl
xchg
stc
xor
aas
jl
sbb
ficomps
fisubrs
pusha
sub
push
mov
mov
test
push
jmp
data16
pop
add
loopne
push
jne
add
adc
movsb
lahf
fnsave
xchg
fnstenv
xchg
push
cltd
in
cmp
popa
sti
in
out
es
stos
jo
stos
outsl
jo
mov
insb
fidivs
loope
rolb
mov
jnp
sbb
mov
add
popf
cmpb
stos
or
or
ljmp
lcallw
mov
mov
push
in
imul
mov
mov
movsb
lods
orb
in
add
ret
mov
cmp
add
out
add
pusha
test
gs
lea
pop
push
cmp
push
mov
adc
int
sbb
adc
repz
jne
outsl
bnd
mov
call
aad
leave
sub
mov
repnz
dec
orl
in
mov
xor
loopne
mov
add
insb
jbe
ljmp
test
xchg
movsl
rclb
cmp
mov
fcompl
or
push
data16
jb
daa
mov
jbe
dec
pushf
pushf
and
popf
lcall
and
imul
mov
pop
fwait
inc
adc
fdivrs
cltd
jp
lock
es
inc
push
rol
adc
push
jo
xorl
pop
jecxz
xchg
inc
or
pop
into
mov
pusha
out
repnz
add
mov
push
jno
movsb
arpl
push
cmpsl
mov
lods
inc
leave
sbb
inc
lcall
xchg
and
push
mov
pop
fists
mov
xor
push
adc
add
insb
dec
jmp
mov
and
cs
add
sbb
adc
fs
cmp
ret
or
mov
mov
outsb
pop
int
test
lahf
mov
xor
jp
mov
push
cmpsl
dec
sub
sbb
sub
pop
into
add
leave
test
jmp
hlt
js
dec
rorl
xor
jae
leave
clc
fdivl
jecxz
mov
push
out
movsl
and
js
test
or
and
repz
jg
inc
xchg
xor
shr
shll
xchg
pop
fs
xchg
cmp
xchg
repnz
sbb
movsl
and
mov
aam
ljmp
in
pusha
xchg
nop
sbb
push
fistpll
pop
xchg
mov
ror
pop
sbb
ljmp
xchg
lock
cltd
daa
and
cmp
fnstsw
frstor
popa
mov
cmp
and
in
popf
xchg
pop
sbb
push
and
xor
adc
into
int
nop
cli
outsb
mov
mov
pop
lcall
sub
iret
inc
push
push
inc
cltd
xor
enter
hlt
into
sub
in
dec
hlt
jnp
sub
scas
xor
mul
faddp
xor
cmpsb
xchg
mov
pop
mov
arpl
pop
sub
lret
scas
lahf
jae
scas
xchg
in
js
and
arpl
ret
jg
fsubl
sub
add
outsb
mov
or
jl
and
shlb
cltd
cmp
shll
xor
push
mov
in
popa
insl
test
lahf
pop
clc
xor
mov
sub
arpl
mov
sbb
loope
jle
cmpsl
adc
int
xlat
lds
xchg
sti
mov
pusha
adc
dec
or
jmp
cltd
js
sub
jg
loopne
mov
cld
fadds
insb
jb
fwait
mov
ljmp
int
or
jle
mov
inc
sti
lods
add
imul
popf
mov
icebp
push
lds
int
adc
lret
mov
xor
ljmp
cli
aas
loop
fcomps
jmp
fwait
aas
mov
adcl
mov
outsb
push
lcall
lahf
push
add
stos
inc
jnp
jne
adc
cmp
pop
xor
push
xor
call
dec
aam
xlat
bound
mov
in
mov
pop
mov
dec
cmp
scas
in
cmpl
lret
adc
test
cmp
ja
lds
push
addr16
sbb
pop
out
cwtl
cmp
test
int
stc
add
cmp
ror
cmpsl
pushf
cmp
inc
popf
push
divl
lret
mov
in
adc
cs
fadd
and
pop
ljmp
inc
cmc
inc
in
add
addr16
aam
mov
int
loope
push
pop
cs
lret
and
mov
jge
mov
fs
int3
jge
cmp
aad
mov
xor
pop
push
or
inc
jnp
cmp
or
xor
or
cs
pop
loopne
mov
scas
push
loope
outsb
cmpsb
sbb
push
stc
call
jbe
in
in
imul
sahf
mov
mov
jge
push
pop
xchg
movsl
pop
jb
sbb
jb
dec
arpl
scas
jmp
lss
out
js
xchg
fnstcw
cmp
lock
test
jge
xchg
add
fsubrl
incb
adc
xchg
sbb
rclb
jo
int
or
adc
out
cmpsb
mov
rcr
ret
and
outsb
enter
sbb
bound
loope
sahf
pop
inc
sub
jb
fwait
lods
xchg
outsb
out
mov
mov
push
addb
subb
movsl
xor
push
mov
pushf
push
jmp
in
mov
dec
lcall
js
push
jecxz
xor
imul
das
lods
add
mov
push
idivb
div
push
loop
add
lcall
sbb
scas
cwtl
sbb
push
and
call
dec
xchg
fwait
dec
xchg
jge
xchg
adc
pop
xchg
js
mov
xchg
call
call
pop
adc
sub
int3
mov
into
in
mov
push
sub
mov
mov
pop
jbe
out
ret
adc
ja
outsl
scas
push
in
shl
movsl
adc
je
in
adc
inc
cli
out
mov
cld
sahf
inc
push
mov
out
std
sub
xlat
lods
mov
and
mov
sub
daa
push
subps
loop
pop
scas
xchg
xchg
outsb
bound
cwtl
test
xor
inc
push
les
loope
test
pop
and
aaa
cmp
lea
pop
cs
ficompl
inc
cmp
repnz
inc
aaa
movsb
mov
fisubrs
dec
sbb
in
in
sub
xchg
fsts
push
insl
lods
pop
insl
call
sub
xchg
jnp
int3
mov
call
mov
testb
fwait
sub
jg
test
cltd
mov
movsb
aam
les
iret
cli
cli
mov
xchg
mov
aam
jp
sbb
xchg
push
fwait
aaa
jbe
jmp
push
sbb
rcll
pop
mov
add
lods
divb
or
sbbl
mov
cld
fwait
cli
addr16
rorb
adc
or
popf
dec
daa
mov
shlb
jge
sbb
jb
mov
loope
repz
popa
mov
xchg
lds
lds
stos
mov
jge
cltd
mov
push
mov
insl
into
out
adc
push
data16
jns
add
stc
pop
sbb
mov
inc
add
shll
mov
jle
cltd
test
mov
outsl
std
scas
jg
addb
cmp
js
and
mov
push
js
jmp
adc
ja
ljmp
pop
jne
sbb
cmp
sbb
test
fildl
aaa
xchg
pop
or
or
iret
lcall
scas
push
or
sbb
push
cmp
addr16
lahf
push
insl
lret
xor
jle
sbb
jg
sub
mov
shlb
loop
push
sub
mov
xchg
jne
adc
push
pop
adc
lods
insb
xchg
mov
add
cwtl
mov
pop
dec
pop
cmp
adc
aam
adcb
inc
sub
inc
sbb
pop
hlt
ficoml
jae
lds
cmc
fisttpl
jo
inc
mov
je
repz
ds
push
adc
xor
cmp
adc
and
push
mov
push
pop
mov
js
xchg
ss
sub
mov
mov
mov
mov
jnp
pop
lds
or
xchg
lahf
cmp
ljmp
hlt
pusha
push
dec
repz
femms
inc
cmc
xor
sub
imul
adc
push
mov
jae
je
xor
push
mov
cli
das
add
mov
or
repnz
inc
jo
rcrb
xchg
in
push
bound
sub
aas
sbb
cmp
out
jo
sub
fcoml
mov
xchg
in
aad
pop
imul
mov
xor
lds
cmp
sbb
inc
fisubs
push
jl
in
cmp
cmpsb
into
ljmp
outsl
mov
cmp
into
jns
mov
and
mov
mov
lea
inc
int
rcl
mov
imul
leave
sub
imul
sub
das
pushf
sbb
push
xchg
adc
mov
inc
lock
inc
out
ss
fs
xor
movsl
push
lret
push
mov
cwtl
sti
push
mov
fwait
in
ret
mov
loop
pop
aam
cmp
sub
mov
adc
push
fldz
jle
lret
xchg
adc
outsl
movb
cs
and
scas
fadds
pop
jmp
lock
inc
es
hlt
mov
fs
jp
adc
xchg
shr
jp
xchg
mov
jge
push
pushl
scas
out
add
incl
into
xchg
and
cmp
mov
sub
fcoml
cmpsb
adc
sub
inc
into
cmp
push
dec
mov
push
xorb
cmpsl
repz
lds
insb
cltd
mov
dec
rcrb
arpl
in
mov
pop
adc
popf
loop
pusha
mov
or
inc
add
loopne
fdivrp
lcall
add
mov
jle
pop
daa
mov
test
xchg
dec
lcall
fmulp
cmpsl
cmc
add
and
ret
xor
dec
adc
inc
sub
scas
scas
inc
cmp
xor
xlat
int
push
testb
mov
pop
xor
sahf
jne
js
jecxz
xchg
outsb
shll
sub
das
in
adc
loopne
sarb
adc
cmc
jmp
scas
movl
stc
jno
aad
jnp
jp
push
add
sbb
xor
repz
pop
mov
insl
pop
and
dec
push
or
pop
iret
cmc
jns
loopne
daa
pop
push
scas
and
and
cli
mov
mov
out
jae
mov
into
loopne
push
roll
lret
pop
dec
fsts
add
mov
xchg
inc
jmp
aas
cmc
push
push
incb
lods
dec
ljmp
loop
sub
xorl
add
xchg
pop
xchg
dec
push
mov
les
or
addl
or
jo
mov
mov
cli
xchg
cmpsb
daa
lods
mov
aam
and
cmp
inc
rcl
cmp
jnp
ficomps
rolb
cmp
adc
mov
iret
mov
jmp
jge
fs
insb
roll
inc
mov
aad
cwtl
mov
mov
xor
cmp
add
popl
cmp
stos
cs
add
scas
ret
add
push
inc
and
add
mov
lahf
push
jmp
lds
or
sbb
push
adc
adc
or
int3
pop
insb
inc
inc
in
scas
cmp
or
shlb
sti
jb
jnp
pushf
mov
repz
loopne
cli
dec
out
jno
and
incb
inc
mov
jge
ds
int
mov
test
test
sbb
xor
mov
xchg
mov
movsb
or
mov
mov
sbbl
bound
addr16
inc
jecxz
repnz
mov
sub
mov
sub
push
insb
shlb
lret
in
xor
in
cmp
mov
enter
in
push
and
outsl
leave
push
cmpsl
lfs
or
sub
or
cmp
mov
imul
andl
mov
ja
sbb
mov
ficompl
daa
jge
mov
jle
and
cmp
push
push
enter
dec
mov
adcl
jo
movb
test
sub
clc
leave
loopne
in
and
mov
inc
jmp
movsl
sub
pop
movsb
lcall
push
pop
adc
out
and
mov
daa
xchg
and
scas
into
inc
adc
add
je
sbb
imul
ljmp
xchg
scas
mov
out
jmp
xor
mov
and
outsl
or
xorl
sub
pushl
stos
mov
ret
and
mov
mov
add
push
movb
sub
xchg
ljmp
jp
cmp
sub
sub
shlb
lods
repnz
aaa
dec
movsl
stos
mov
out
ja
std
sub
orb
mov
mov
fdiv
cwtl
push
lds
cmp
addb
mov
xchg
fidivl
inc
mov
pushf
or
mov
stc
xlat
stc
mov
cmpsb
lods
imul
mov
jo
ja
gs
and
das
mov
jmp
ret
int
ret
cltd
mov
pop
mov
add
out
cli
add
pop
pop
out
js
pop
lods
mov
cmp
add
mov
sbb
push
shl
in
mov
cmp
stc
clc
cli
lds
call
loop
jno
or
pop
mov
out
in
movsb
std
mov
mov
orb
shl
add
and
sub
pop
add
ret
inc
pop
das
ret
test
inc
incl
jge
sub
imull
cltd
scas
dec
and
jg
inc
lahf
push
lret
dec
sti
adc
fdivr
xchg
mov
lret
imul
aaa
js
iret
arpl
jl
pop
or
push
mov
shll
stc
fstpl
bound
pop
add
adc
addr16
cmpsb
shrb
mov
add
loop
add
adc
shr
xlat
mov
jmp
out
daa
mov
or
iret
cmp
push
iret
daa
xlat
xchg
daa
xchg
ljmp
jl
adc
inc
jecxz
and
push
leave
mov
pop
mov
out
decl
mov
mov
out
loopne
ds
outsb
xor
sub
jb
xor
adc
pop
fistpl
addl
push
jns
add
jne
add
jmp
xor
inc
push
test
daa
and
clc
loopne
pop
ficompl
or
inc
mov
mov
mov
sub
mov
scas
adc
or
lea
rorl
add
popa
mov
hlt
jno
jnp
sahf
inc
sbb
or
pop
test
scas
xchg
idivl
xor
scas
jmp
jns
ffreep
inc
mov
mov
aas
test
fdecstp
sub
aaa
data16
xchg
lret
fsubs
adc
push
inc
test
pushf
dec
mov
arpl
jl
dec
bnd
lret
mov
mov
leave
add
xor
fwait
sarb
xchg
outsl
sbb
push
adc
out
sub
popf
sub
out
clc
test
xchg
lods
push
dec
mov
mov
insb
imulb
sub
in
jae
or
jo
pushf
inc
xchg
cmp
push
lahf
or
popa
arpl
shr
popf
addr16
popa
xor
lock
mov
out
pop
inc
push
addr16
rcll
insl
sarb
dec
adc
mov
jno
ds
push
dec
shlb
mov
ljmp
push
and
jne
out
ja
or
xor
arpl
mov
rorl
ror
sti
xchg
lahf
sbb
repnz
test
or
sbb
mov
xlat
add
popf
sbb
jbe
lods
lret
mov
ds
cmp
mov
push
add
aaa
mov
push
sbb
enter
push
cmp
inc
aam
push
xchg
mov
adc
mov
cmp
mov
fdivs
aaa
icebp
popf
popf
aas
sub
add
inc
and
push
int3
jecxz
or
movsb
leave
lahf
dec
sbb
cld
in
mov
out
je
sbb
icebp
mov
mov
push
data16
xchg
or
aas
out
ret
pushf
cmp
or
arpl
jecxz
addr16
jae
lret
inc
xor
leave
fistps
mov
xor
mov
xor
shl
add
sbb
push
inc
sbb
push
or
mov
dec
shrb
push
iret
sahf
jne
push
scas
les
push
jecxz
repnz
dec
pushf
jbe
in
sub
mov
xor
js
cmp
sbb
sbb
adc
jb
out
push
arpl
int3
or
mov
push
jnp
int3
dec
dec
stos
cmc
cmp
sahf
sbb
cmp
sub
jne
mov
sahf
and
push
insb
mov
xorb
mov
leave
add
dec
and
loope
mov
inc
inc
sub
test
adc
repnz
fwait
sub
xchg
sub
mov
bound
push
push
loopne
adc
xor
mov
xchg
popa
cwtl
divb
jmp
pop
adc
sbb
ss
push
add
fidivrs
scas
xchg
aas
mov
sub
inc
notl
push
mov
fidivrl
xchg
adc
jge
out
loope
mov
andl
or
fdivl
jo
fistpl
inc
xor
and
and
pop
roll
add
xor
sub
mov
fsubrp
stos
dec
cmp
adc
mov
test
out
lea
cmp
cmp
mov
test
sti
sti
insl
mov
fstl
in
adc
dec
into
mov
popf
outsb
cld
jb
sahf
ja
mov
je
add
mov
arpl
xchg
je
sbb
imul
out
lds
fsubrs
and
dec
das
xchg
jnp
xor
fildll
sub
push
outsl
es
leave
push
outsb
dec
leave
jae
scas
mov
out
out
mov
lea
dec
outsb
dec
mov
mov
or
out
cltd
and
jns
imul
loope
pusha
ret
jg
int
push
mov
fistpll
daa
push
mov
and
aaa
pushf
test
pop
and
jl
scas
jbe
aam
and
lret
inc
mov
inc
jle
or
cmp
js
ficoml
dec
das
inc
push
xor
inc
test
push
test
jne
pop
hlt
xchg
inc
xor
jnp
ljmp
pop
popf
rorl
inc
dec
xchg
inc
mov
dec
sbb
pusha
cmp
cli
nop
inc
xor
or
xor
loop
clc
cmp
cmpsl
mov
pop
fnstcw
addl
lcall
adc
mov
pop
pop
cmc
test
mov
aad
push
stc
test
lods
xor
cmpsl
cmpsl
sbb
movsl
xorl
and
xor
xlat
mov
dec
sub
xchg
jmp
cmp
fistpll
add
jns
mov
or
repz
rcrl
jp
scas
pushf
leave
cmp
inc
jne
lahf
adc
divb
outsl
jnp
sarb
popa
mov
sbb
in
lock
test
add
ret
mov
and
sbb
add
add
push
lea
xchg
push
adc
add
int3
pop
xor
mov
inc
mov
mov
or
push
or
test
xchg
rcrl
mov
clc
popa
arpl
gs
add
aaa
xchg
leave
pop
sub
adc
inc
in
pusha
fdiv
mov
cmp
das
push
cli
jmp
js
fistl
jp
ret
pop
dec
mov
mov
hlt
mov
mov
and
adc
es
push
enter
cmp
repnz
cwtl
int
inc
sub
xchg
xchg
fistps
push
pop
int
and
dec
rcr
in
sti
adc
mov
out
cmpsl
dec
push
into
mov
mov
jnp
adc
or
int3
jno
xor
stos
arpl
or
loopne,pt
int3
mov
and
xor
test
dec
pop
call
sub
push
fwait
mov
test
fdivrs
cltd
push
inc
xchg
cmp
test
fbld
icebp
loopne
cmp
cmpsl
sbb
dec
inc
pop
fdivs
fs
cmp
jl
push
xchg
mov
into
out
jo
mov
loope
lds
mov
adc
faddl
stos
pop
push
jbe
into
and
lcall
call
mov
lret
mov
daa
js
mov
add
pop
pop
inc
mov
ljmp
mov
jne
xor
mov
bound
and
in
or
lods
fistl
push
rol
arpl
out
das
xchg
cmc
push
in
xchg
mov
stc
std
mov
xchg
daa
out
xor
sbb
mov
aas
daa
ret
negb
inc
mov
adc
nop
iret
sub
push
sbb
pushf
mov
aas
xor
jae
dec
mov
sub
xchg
not
sub
xchg
imul
call
pop
in
lock
inc
inc
pop
or
mov
bound
push
pop
push
push
sbb
sbb
andl
cmpsb
push
cli
test
cmp
mov
stos
bnd
cltd
pop
pop
stc
sbb
filds
stc
sbb
sti
jb
outsb
mov
movsl
sti
push
pop
stos
aam
push
cli
cmp
test
insl
aas
adc
and
xchg
dec
fadds
test
lret
xchg
pop
add
icebp
pop
dec
shll
jnp
in
jno
popa
push
hlt
xchg
push
mov
aaa
movsl
push
ficoml
ljmp
mov
ds
sub
in
inc
aam
or
mov
lcall
fnstsw
adc
cwtl
gs
imul
les
lods
add
gs
cmpsb
sti
out
jns
shll
int3
adc
sti
or
out
sub
lods
lea
aam
dec
das
adc
pop
icebp
lea
add
jbe
out
mov
mov
call
and
insl
test
sar
int3
mov
ret
add
jbe
repz
push
pop
lret
iret
rcrb
outsl
test
jl
aaa
addl
mov
movb
int3
int3
push
mov
ljmp
out
jne
cltd
cmp
aas
mov
dec
jge
lret
add
imul
mov
repz
insb
mov
jno
shrb
jo
push
nop
fdivr
in
lods
mov
mov
adc
lds
cld
push
adc
mov
out
ret
aam
insb
adc
add
cmpsb
inc
add
popa
xor
aad
dec
mov
daa
inc
and
and
pop
dec
cs
imul
mov
jne
enter
ss
jmp
mov
cmp
lods
arpl
mov
das
push
xchg
nop
and
and
mov
or
or
dec
movsb
xchg
jp
ret
mov
xchg
sbb
cmp
mov
mov
lea
lret
aad
call
add
outsl
test
xor
add
mov
lret
dec
mov
test
fwait
add
dec
enter
adc
jae
out
iret
xor
movsb
iret
push
lds
push
jp
jb
into
inc
dec
sti
jbe
repnz
imul
sub
sub
out
decb
test
and
mov
jmp
sub
rcrb
cwtl
jno
arpl
ja
xchg
pop
lret
aas
shlb
sti
popa
jae
rolb
mov
push
sbb
in
jl
cltd
mov
jmp
jo
mov
ret
push
sub
int
xchg
mov
jbe
sbb
sahf
cmp
mov
sbb
xchg
out
imul
lea
sub
jge
sub
mov
adc
and
mov
inc
mov
stc
or
or
iret
jge
dec
cltd
inc
cltd
fists
rorl
loope
insb
jbe
andl
enter
push
arpl
int
orl
jne
cmc
inc
pop
jns
repnz
lods
cmp
xchg
lret
lods
lods
ja
xchg
sub
cmpsb
dec
push
adc
mov
or
xchg
mov
repz
daa
pop
lds
mov
stc
mov
imul
sub
mov
xor
scas
notl
addr16
stc
arpl
stos
clc
pop
inc
pusha
jns
insl
push
mov
jg
call
in
push
jnp
jo
mov
xchg
imul
aad
xor
pop
xchg
sub
dec
xor
fiadds
shll
insl
inc
imul
mov
lods
ja
dec
test
ret
mov
cld
lea
es
jbe
pop
loope
mov
xchg
inc
fcoml
divb
rol
dec
dec
dec
jle
jns
and
push
movsb
shrb
imul
mov
sub
mov
add
adc
add
xor
pop
mov
jge
inc
negl
inc
adc
push
adc
out
sbb
jl
in
mov
in
rorl
sub
sub
xchg
cli
outsb
inc
sbbl
mov
push
inc
popa
test
adc
jl
dec
std
fsubrl
andl
add
dec
sub
fcompl
testl
test
xor
fwait
mov
inc
mov
jns
jnp
add
jo
mov
int3
test
adc
xor
lahf
iret
mov
pop
or
add
fwait
int3
mov
sub
cli
xchg
sbb
sbb
add
push
out
in
hlt
sbb
mov
sti
gs
pop
pop
lret
aas
pop
pop
cwtl
mov
inc
out
nop
insl
push
es
das
cli
jle
dec
jge
lcall
xchg
in
and
lret
jge
push
popf
cwtl
mov
arpl
fcom
xor
and
and
adc
test
ljmp
push
jae
dec
mov
scas
lea
xchg
dec
and
adcl
add
pushf
jne
jo
push
fstps
into
rcrb
pusha
scas
push
jo
adcb
mov
xchg
sbb
imul
xchg
leave
push
test
pop
movsb
xchg
and
sub
or
sub
push
fisubl
cltd
push
sub
addr16
insb
adc
sbb
cld
sub
mov
popf
clc
insl
pop
jmp
lret
nop
push
push
lret
sahf
adc
mul
cmc
roll
dec
rclb
mov
aaa
test
sbb
test
rcr
add
dec
or
dec
aas
imul
mov
lahf
push
sbb
xor
fistpll
dec
sub
or
repnz
jp
call
xor
xchg
rcll
jns
sub
xor
jno
add
hlt
push
push
mov
ljmp
or
jno
nop
outsl
aam
lods
xor
fldl
xchg
fcoms
adc
sub
pushf
aam
mov
push
jl
dec
add
cmp
sub
pop
dec
fcomip
and
ds
and
lret
lahf
or
and
cmp
enter
jbe
and
lret
mov
jp
or
adcb
push
sbb
fmuls
addb
inc
pop
sub
mov
mov
mov
push
gs
jl
sti
pop
repz
repnz
and
mov
push
inc
add
repz
notl
pop
and
sahf
nop
add
rclb
push
je
inc
fs
adc
insl
push
jns
dec
mov
imul
jo
cmp
rep
jp
jb
lods
xchg
loope
sub
push
aaa
es
xchg
stos
imull
test
add
mov
cwtl
xchg
sub
sub
add
xchg
dec
dec
add
xchg
aaa
lods
mov
out
ljmp
mov
ja
shr
adc
mov
scas
je
mov
cmpsb
pop
push
sub
mov
int3
jnp
sub
nop
inc
imul
sub
mov
dec
test
aaa
push
dec
and
test
push
jae
cmp
fcmovnu
and
sbb
movl
arpl
imul
rorl
cmp
pop
inc
scas
pop
outsl
sbb
sti
xchg
in
push
ret
pushf
mov
mov
push
jb
dec
pop
mov
push
and
inc
movsb
push
test
push
jg
cli
outsl
icebp
aam
pop
test
add
mov
test
test
dec
lahf
loop
dec
inc
mov
adc
push
lds
fs
test
sbbl
jmp
mov
pop
test
bound
cmp
fistpll
sti
out
xchg
lahf
ja
js
jo
std
adc
mov
sahf
pushl
outsb
push
jno
jno
and
call
pop
push
mov
fbld
jg
cmp
out
xor
addb
mov
xchg
dec
push
jmp
loop,pn
out
or
mov
aam
ss
imul
mov
mov
pop
sbb
mov
clc
jo
add
enter
mov
stc
pop
mov
imul
mov
inc
jae
fidivs
loopne
push
fadds
outsl
jge
jno
cmpb
mov
imul
lea
in
push
xor
fisttpll
and
in
pop
sbb
call
jbe
cmp
push
clc
xlat
mov
loope
mov
or
sub
in
das
popf
push
int3
enter
lcall
mov
jle
popa
ret
xchg
cld
lahf
and
or
pop
dec
mov
dec
mov
nop
ret
dec
or
rclb
sbbl
xor
and
adc
pop
or
xor
pushf
daa
imul
shll
and
sahf
aas
fstps
adc
je
insl
jp
jbe
mov
push
jnp
data16
mov
loopne
dec
or
fcmovnb
mov
rcl
cmp
out
push
push
subb
fsub
or
mov
nop
sbb
bound
inc
and
in
cmpsb
pop
cmp
ds
stos
loop
inc
leave
shll
jge
sbb
pop
out
xchg
es
jo
les
xor
dec
add
xor
sarl
jnp
add
xchg
dec
inc
xor
movsb
enter
iret
in
push
fistl
pop
push
mov
push
xor
les
jmp
add
aam
dec
sub
jo
mov
aaa
fistpl
hlt
insl
jp
inc
lods
ficoms
push
pop
jecxz
repnz
jp
clc
arpl
scas
mov
add
pop
popa
jo
inc
sub
push
inc
dec
scas
sub
push
mov
mov
pop
sbb
sub
jmp
mov
mov
mov
xchg
in
cmp
adc
leave
movsb
ret
xor
mov
dec
negl
in
sub
shlb
xchg
cmp
lcall
push
aas
test
ds
rclb
push
mov
dec
cmpsl
add
jae
sti
jns
int
popf
and
ds
sub
xchg
mov
sub
push
cmp
in
push
jns
lahf
int
mov
out
mov
inc
jle
pop
mov
cmp
pop
xor
add
pop
imul
xor
xor
lea
mov
pop
pop
jbe
mov
data16
mov
test
mov
lods
and
cld
movsb
pop
dec
mov
aaa
xor
fistpl
gs
inc
mov
jp
rclb
mov
jns
sbb
je
ret
cmc
add
test
sbb
test
jo
ret
pushf
sbb
out
in
xchg
sarl
pushf
pop
int3
jo
cs
mov
ja
lcall
cmp
mov
test
xchg
std
cltd
subl
adc
add
test
mov
cmp
add
ret
sub
in
mov
lret
aam
mov
xchg
xchg
jo
xorl
out
mov
dec
sbb
out
xor
add
mov
movsb
imul
push
push
addl
cmp
stc
sbb
shlb
hlt
aas
pop
fcompl
cld
dec
adc
and
inc
and
fimull
lahf
mov
lock
lds
cwtl
out
out
rorb
xor
repnz
adc
jmp
jnp
push
int
aaa
mov
movsb
lods
enter
xchg
fistpll
push
scas
std
hlt
xor
inc
loopne,pt
daa
pushf
sub
stos
scas
or
orb
add
mov
cmp
jle
cmp
outsb
scas
mov
sbb
mov
sbb
or
outsb
xchg
call
imul
xchg
add
or
mov
sub
jecxz
add
mov
into
push
push
pop
dec
mov
imulb
pop
push
fucomi
jg
xchg
adc
sub
push
lock
outsl
push
add
insl
sbbl
jmp
jle
push
fldcw
lock
icebp
imul
and
cwtl
subl
adc
dec
jp
jle
int
sub
add
enter
add
negb
mov
push
loop
jle
mov
pop
inc
add
pop
cmp
xorb
sti
test
jb
mov
xor
push
adc
jne
jmp
ret
cwtl
or
ret
jns
inc
shll
mov
pop
pop
fldt
jo
lods
movsl
fwait
xor
hlt
je
out
imul
inc
xor
add
jg
inc
jl
test
jp
fildll
jle
repz
int
jo
repnz
addr16
or
fprem
aad
enter
mov
cmpsb
cs
in
jnp
sarb
add
sbb
bound
pop
xlat
arpl
sub
ret
push
xor
dec
mov
out
sbb
sbb
popf
mov
sbb
xchg
xor
jecxz
mov
jbe
jnp
xor
push
in
loopne
cmp
add
push
mov
mov
fbld
cmp
cmp
inc
mov
out
mov
int3
addr16
inc
pop
mov
mov
sbb
push
sub
sbb
mov
movsl
jecxz
mov
sbb
xchg
mov
clc
push
push
pop
shlb
out
loop
imul
mov
js
cmp
insl
fadd
pop
dec
cmp
jb
jo
dec
push
sbb
into
add
add
loop
cmp
or
pop
adc
lock
cmp
loope
orl
stos
fsts
mov
add
jp
and
out
mov
cs
xor
jb
xor
lahf
push
mov
into
repnz
cwtl
or
stos
scas
lret
jbe
jge
push
sub
ss
cs
sbb
dec
jo
pushf
aaa
dec
mov
je
and
mov
adc
mov
rorl
dec
xor
jo
scas
pop
mov
cmp
std
add
cs
pop
cmp
xor
inc
fstpl
push
mov
lret
shlb
mov
and
mov
xor
imull
scas
test
addr16
ret
es
movsb
in
stc
mov
hlt
jb
mov
adc
mov
out
subl
scas
xchg
push
pushf
pop
mov
jmp
xchg
add
jo
cli
popa
mulb
sub
loop
mov
loope
ds
cmp
jl
arpl
rorl
repnz
idiv
add
mov
cmp
fucomip
mov
sbb
inc
das
in
cld
jl
sbb
les
mov
insb
mov
push
fucom
fdivp
sub
add
mov
jge
cmp
gs
add
mov
add
cmpb
and
adc
inc
repz
xlat
lcall
push
mov
aaa
inc
inc
jb
pop
cmp
mov
fcoml
lahf
mov
cmp
jbe
aad
in
add
jb
out
inc
adc
adc
loopne
inc
jmp
daa
xchg
sbb
popf
fldl
xor
clc
dec
push
mov
pop
mov
push
and
cmpsb
lods
inc
lahf
stos
mov
push
test
and
lahf
dec
sahf
cltd
push
out
or
mov
add
jl
pop
xor
inc
and
popa
xor
fnsave
clc
dec
repnz
mov
cmc
push
and
inc
subl
fsin
mov
out
out
mov
stos
cld
mov
subb
shll
lahf
cmp
add
pop
inc
rcrb
or
mov
ds
mov
sub
adc
mov
and
cmp
add
cmp
jl
popa
fs
adc
jecxz
fstl
or
ja
repnz
push
push
jmp
lods
xchg
loopne
pusha
lods
jle
xchg
in
jo
inc
sbb
xor
repz
cwtl
cmp
mov
push
cmp
cld
jp
and
jle
add
inc
pop
xchg
loop
sbb
in
test
repnz
or
cltd
xor
mov
xor
lods
pop
mov
mov
adc
pop
adc
mov
add
mov
sub
iret
sub
jl
cmpsl
inc
mov
cs
sarb
dec
adc
roll
pop
jecxz
addr16
outsb
in
int3
andb
mov
jecxz
gs
cmc
fs
xor
hlt
jle
push
mov
sbb
mov
rorl
cmp
xchg
mov
and
mov
add
loope
pop
js
sahf
mov
mov
fdivp
lahf
xor
lahf
pop
in
ds
xchg
aas
repz
pop
and
out
into
repnz
gs
js
sub
sar
and
xor
mov
fbstp
shll
or
sub
cmp
adc
imul
repz
movsl
sbb
adc
mov
aas
fs
outsl
test
mov
mov
push
out
or
ret
add
scas
push
add
jae,pt
jb
cli
or
adc
mov
cmpsl
adc
aam
adc
stos
inc
cwtl
movaps
popa
pop
pop
jo
fcoms
or
subb
cld
cld
lret
pop
pop
add
pop
push
pop
repz
lcall
cmp
push
out
icebp
pushf
jle
out
scas
mov
lock
dec
xchg
sti
rol
jmp
sbb
cmp
fists
dec
fwait
jle
aaa
xchg
and
cmp
orl
mov
add
arpl
mov
repnz
sub
cltd
mov
mov
fdivrs
outsl
lea
dec
sbb
fwait
cmp
cld
fwait
jmp
mov
mov
mov
pop
addb
sbb
mov
clc
std
sub
inc
sub
fld
inc
out
popf
rcrl
jge
lds
jae
pop
outsl
repnz
sub
in
push
xchg
daa
fstpl
mov
or
jle
cltd
dec
adc
jmp
xchg
add
mov
xor
sbb
mov
cmp
xchg
lcall
ljmp
insl
sti
inc
push
jns
sbb
aas
clc
repnz
fisttpl
xchg
test
cmpsb
pop
test
aad
dec
leave
aaa
shlb
mov
adc
inc
in
jae
lock
and
push
enter
addl
mov
cwtl
xor
les
inc
and
jge
std
push
clc
mov
sbb
in
mov
cmp
sbb
xor
jns
in
and
into
insl
adc
push
pop
rcl
inc
sbb
or
push
movsb
icebp
push
mov
or
inc
cmp
mov
fisubrs
std
mov
call
movsl
pop
jne
mov
fwait
xchg
pop
push
add
sbb
movsl
shll
jp
inc
mov
or
push
or
sbbl
mov
ror
sub
movsb
test
ss
mov
mov
enter
add
jp
or
push
mov
out
pusha
pop
xchg
movl
add
jge
movsb
push
mov
inc
shr
lret
pop
scas
cmp
jns
or
sub
nop
cmpl
dec
pop
mov
lea
arpl
jb
xor
inc
fisttpl
ja
sub
aaa
push
jno
mov
addb
xlat
out
fs
add
nop
and
add
mov
addr16
fisubs
dec
mov
cmp
cld
xchg
push
mov
arpl
push
mov
xor
xchg
repz
ret
aad
sub
xchg
xchg
add
or
lret
lahf
pop
add
orb
out
pop
cmp
mov
jmp
lock
les
stos
lods
rclb
lods
pushf
out
pop
out
push
pop
inc
adc
hlt
cmpsb
arpl
popa
clc
stos
cs
fnstcw
sti
ficoml
adc
fstpl
cmpsl
mov
lcall
cmp
push
pop
adc
sbbl
jbe
ret
dec
or
fisubrl
dec
mov
jmp
cltd
sbb
xor
icebp
lret
pop
mov
mov
inc
fstpl
add
push
push
jge
mov
xor
inc
mov
or
cs
xor
mov
jmp
jno
in
pop
fcoms
xor
and
insl
mov
repz
mov
sub
aam
sub
lcall
mov
outsb
lods
sbb
shrl
or
orb
movsl
cli
stos
mov
xor
nop
scas
sarb
pop
or
or
ja
push
ljmp
stos
adc
imul
push
call
sti
ja
push
xor
cmpsl
lss
adc
insl
repz
dec
adc
andb
movsb
shr
mov
push
pop
int3
aad
mov
outsl
scas
xor
or
xchg
add
mov
cmp
xor
fmull
loop
or
xlat
das
dec
and
call
fs
inc
mul
addb
arpl
into
sbb
cs
clc
orl
push
push
cwtl
xor
sub
dec
cli
lods
push
cwtl
push
mov
sub
fwait
jmp
divl
mov
out
outsl
int
sbb
fs
aad
hlt
and
cli
adc
sarb
adc
cwtl
inc
dec
mov
and
insl
aaa
push
xchg
or
add
cmc
inc
mov
sbb
ss
mov
fldl
fcmovnb
andl
mov
cmp
test
dec
push
loop
dec
and
lret
jp
shrl
fildl
ror
daa
jns
lods
stos
mov
adc
ret
mov
xor
and
mov
ljmp
arpl
in
rorb
mov
stos
hlt
js
clc
sub
pushf
sub
cld
pop
xchg
scas
adc
imul
or
push
jne
xchg
into
loopne
aam
ljmp
pushf
rcll
jecxz
enter
jmp
adc
movsb
int
push
pop
push
inc
loopne
mov
jnp
loop
inc
mov
push
pusha
jecxz
and
sbb
inc
dec
or
mov
test
sbb
mov
jp
cs
sub
aad
xchg
int
lds
cmp
cmpsl
inc
cld
inc
xor
mov
xchg
into
dec
add
cmc
arpl
lock
lret
add
mov
stos
dec
jecxz
les
sbb
xchg
pusha
push
xchg
dec
ret
pop
cmp
xchg
cld
popf
and
adc
mov
or
filds
jg
sbb
jmp
movsl
mov
fdivr
jae
add
cld
adc
sub
mov
mov
dec
outsl
scas
sti
xchg
mov
or
out
cmp
popa
pop
movsb
jo
mov
add
xorb
outsl
xchg
mov
loopne
mov
jbe
sti
repnz
or
hlt
insb
push
mov
stos
sbb
es
cmp
cmp
leave
jo
jmp
mov
mov
dec
stos
mov
dec
mov
cmc
mov
xchg
pushf
les
mov
notb
bound
add
cmp
xlat
adc
adc
cmp
cmp
mov
inc
sbb
and
jp
test
outsl
pop
stc
shlb
in
jo
or
and
inc
hlt
imul
rcrl
jmp
xlat
mov
ret
lahf
jle
mov
lods
add
jmp
mov
loopne
pop
inc
icebp
push
test
ja
jns
stos
stos
sub
fdivrp
frstor
mov
negb
mov
jo
stos
lods
xchg
cmp
test
addb
cmp
xor
fcompl
mov
popa
les
stc
fisubl
test
add
dec
cvtpi2ps
jae
fs
mov
pushf
dec
adc
in
jb
fidivs
rclb
les
sub
repz
ds
mov
cmpsb
mov
mov
mov
decb
les
mov
and
or
pop
or
enter
pop
jnp
cmp
jp
sub
int3
outsl
xor
cltd
push
arpl
add
cld
pop
jb
jmp
hlt
inc
sub
fnsave
cmp
ss
cli
pop
dec
jp
mov
gs
pop
lahf
scas
fsubl
aaa
cmp
in
popa
imul
cmpsb
pop
jne
add
imull
push
sub
and
sub
mov
je
add
or
push
mov
inc
add
lret
inc
mov
arpl
data16
adc
push
hlt
dec
xor
js
outsb
xlat
repz
sti
push
mov
outsl
and
or
lods
pop
cmp
sbb
inc
into
ret
mov
imul
dec
ljmp
xor
cld
pop
rorl
repz
mov
fnsave
neg
jae
mov
stos
mov
imul
test
xchg
pop
mov
sub
les
push
outsb
les
lods
ret
je
xor
in
ljmp
std
je
pop
lds
cmpsl
pusha
mov
fwait
xchg
xor
gs
shrb
mov
mov
dec
idivl
repnz
cmp
adc
into
pop
pop
shrb
loop
jns
sub
sbb
sbb
lahf
scas
xchg
lds
mov
lock
cwtl
mov
in
nop
movsl
jle
ja
fisubs
xor
out
int
sub
mov
jnp
lcall
xor
push
mov
fdivl
jge
mov
or
cltd
cwtl
xor
or
pop
inc
incb
fmuls
sbb
insb
in
outsb
ret
or
lea
dec
inc
sbb
mov
lods
std
cmpsl
int3
imul
add
decb
adc
push
or
cs
dec
fidivs
aas
mov
loop
faddp
fwait
call
inc
jmp
mov
les
addl
xor
sub
dec
mov
in
xor
xchg
jg
or
scas
jb
mov
jl
popf
test
adc
mov
push
jb
mov
fistl
adc
xchg
push
inc
sbb
fdivrs
jb
xor
addr16
ret
cs
add
sub
jge
es
xchg
pop
pop
test
cmp
jo
aad
xor
sub
mov
adcl
push
or
es
loop
xor
and
mov
xchg
das
or
daa
mov
fisubrs
xchg
rorb
notl
mov
xchg
arpl
gs
push
xlat
adc
xchg
dec
roll
pop
mov
stc
dec
or
sub
push
mov
lcall
push
xorb
loope
lret
or
pop
ficompl
jmp
mov
fs
scas
popf
sub
in
jo
js
lds
scas
rcll
cmp
mov
mov
and
fmuls
scas
jae
outsl
std
dec
pop
adcb
addl
mov
inc
add
mov
mov
mov
mov
inc
dec
cmp
push
test
xchg
fcomps
jp
pushf
sub
xchg
xor
pushw
subb
cs
pop
bound
mov
mov
adc
xchg
jns
in
lea
sub
jb
pop
and
mov
mov
in
or
dec
popa
jge
shll
in
or
out
mov
jno
cmp
dec
cmpl
xchg
pusha
outsl
into
push
out
and
sar
xchg
jne
stos
sub
pop
lea
sbb
jmp
out
gs
cmpsl
shrb
in
xor
add
inc
xchg
mov
inc
scas
cld
addb
bound
pop
sahf
sub
lret
popa
lods
add
insb
xchg
cmp
adc
inc
mov
pushl
mov
sarl
rcr
cmp
out
ss
push
xchg
jecxz
fdivs
lods
idivb
mov
lds
stc
cmp
cmp
xchg
cmp
call
adcl
xchg
push
or
fidivrl
cmp
and
mov
js
testb
leave
dec
dec
xchg
xchg
push
cmpsl
mov
xchg
cmp
sbb
mov
popa
bound
test
adcb
gs
xlat
addr16
fs
dec
loop
inc
mov
sub
mov
mov
xor
cmp
mov
dec
xchg
es
sub
fwait
push
dec
pop
sbb
fwait
xlat
and
gs
mov
cmc
in
pushf
xor
cmpsb
xchg
pop
mov
pop
pop
xor
jne
or
add
or
sbb
push
imul
ret
mov
mov
subb
xlat
and
call
ss
mov
cli
sub
adc
push
andl
dec
out
push
mov
xor
pop
mov
insb
ret
mov
out
aad
pusha
jle
out
test
push
fwait
xchg
int3
iret
iret
cwtl
divb
into
stos
clc
xor
push
cmp
fildll
pop
jecxz
aaa
lods
jmp
inc
adc
outsb
and
jbe
mov
lock
loope
sub
aam
lret
mov
lret
mov
in
popa
xchg
jg
push
icebp
inc
inc
pop
mov
dec
push
inc
ljmp
xchg
or
movsl
or
sbb
test
aaa
adc
dec
rcrb
or
dec
aad
aas
xorl
int3
sub
stos
inc
mul
cmp
lcall
sbb
dec
mov
and
in
pop
sub
das
inc
jae
stos
cmp
lret
out
push
in
mov
test
jge
cmp
mov
jb
mov
adc
pcmpgtb
in
xor
pop
dec
xchg
les
push
cmp
sbb
xchg
mov
inc
mov
jmp
dec
js
lret
sbb
scas
mov
mov
sub
xor
inc
shl
add
clc
out
inc
pop
int
add
jge
lret
mov
adc
mov
fwait
or
jg
inc
and
out
push
orb
mov
addr16
scas
adc
addl
jne
gs
xor
jns
pop
ljmp
ret
inc
pop
sti
cmc
inc
cmc
xchg
cmp
loope
repnz
lea
lahf
loope
cmpsw
adc
sub
pusha
clc
inc
and
adcl
or
test
andb
inc
lock
dec
sub
fwait
xchg
push
js
stc
cli
out
sahf
sti
lahf
mov
add
out
xchg
cltd
imul
out
out
mov
dec
mov
cmc
xor
out
hlt
int
arpl
sbb
cmp
dec
loopne
sbb
jl
rorb
jbe
fwait
fs
iret
cmpl
and
pushf
pop
mov
push
mov
push
loopne
arpl
sub
adc
xchg
pop
mov
jp
xchg
xchg
pop
insb
lock
cs
or
nop
pop
das
mov
mov
adc
mov
pop
xchg
cmp
test
fs
push
jl
mov
fdivrs
in
outsb
sbbb
jns
test
pop
or
add
push
enter
pop
inc
imul
push
xor
pusha
movl
mov
xchg
inc
xor
mov
add
xchg
inc
mov
mov
and
sub
aam
cwtl
xor
cmc
rcrl
in
cmp
sbb
or
test
mov
movq
sarb
fwait
lcall
jmp
mov
push
xor
rorl
add
sub
rcr
cli
les
add
inc
loopne
xor
repnz
inc
xchg
lock
lea
mov
inc
mov
cmc
in
mov
out
loopne
test
int
lret
xchg
jmp
loop
mov
into
and
mov
xchg
sar
repnz
inc
subb
sbb
scas
mov
jns
enter
shlb
cmpsl
or
mov
cltd
enter
mov
mov
sbb
inc
or
jne
gs
and
ret
push
cli
or
rcrl
xor
fwait
mov
and
filds
jmp
add
sbb
imul
repz
into
jmp
mov
inc
fisubs
fnstenvs
mov
mov
shlb
and
or
or
mov
or
iret
rep
jb
test
mov
data16
mov
jl
outsl
mov
adc
push
aam
ja
and
mov
rcrl
mov
xchg
loop
aad
ror
stc
movsb
iret
stc
sbb
loope
jbe
int
scas
jecxz
jbe
xchg
or
sbb
mov
roll
into
cli
xchg
je,pt
int3
mov
mov
pop
cmpsl
imul
movsb
push
in
cmp
verw
loop
xchg
push
faddl
sti
aad
mov
mov
jg
add
movsl
push
mov
dec
jae
pop
movsb
in
inc
sbb
fldt
aaa
call
std
mov
gs
and
frstor
mulb
cmp
jns
and
fdivrl
call
subb
cwtl
subb
mov
insb
out
testb
dec
rcll
lock
fldt
jmp
outsl
lahf
test
jno
xor
jmp
adc
pop
sbb
or
stos
xor
int3
mov
test
repz
mov
jmp
dec
xchg
cmp
xchg
out
cmpl
scas
mov
ds
cmpsl
popf
pusha
sbb
jnp
movsl
mov
lret
pop
pop
lods
ja
sbb
sarb
mov
mov
sahf
sbb
test
and
pop
jo
or
mov
mov
lahf
mov
mov
jne
int3
int
stc
xchg
or
mov
cli
pop
jnp
fwait
jle
adc
imul
cmp
push
fimuls
jne
ret
fimull
sti
cmp
pop
mov
sti
scas
bound
bound
mov
add
hlt
jae
mov
jg
icebp
dec
mov
fcom
mov
push
xor
into
cmp
push
xchg
pushf
inc
sbb
mov
imul
ljmp
addr16
xchg
dec
jecxz
test
bound
mov
or
xchg
in
aad
cmp
sub
das
lret
jno
scas
jg
movsl
pop
imul
cwtl
sarl
fs
mov
mov
adc
insl
add
loope
sbb
pop
or
push
jge
cwtl
fdivrs
mov
fadds
cmp
test
push
push
pop
jecxz
push
or
or
cmc
jmp
cmp
sub
repz
arpl
push
jl
imul
lret
mov
rorb
shl
inc
jle
mov
and
dec
jecxz
push
cwtl
adc
stos
pop
lahf
ror
call
cmpsb
testl
inc
xchg
addr16
cwtl
fdivrl
stos
pop
xor
iret
test
and
in
daa
cmp
stc
jns
mov
rorl
in
inc
adc
push
xchg
xlat
fst
and
dec
shlb
adc
mov
outsl
scas
scas
inc
jmp
mov
jp
data16
pop
add
cli
enter
lods
cmpsl
nop
clc
out
ds
cmp
sub
jg
lods
loopne
in
fisubs
repnz
sub
scas
cwtl
xchg
inc
pop
mov
jle
inc
add
adc
pop
out
mov
mov
dec
sbb
nop
cmp
ljmp
inc
add
icebp
mov
adc
mov
mov
gs
or
or
fldt
mov
nop
cld
or
dec
mov
mov
out
out
divl
je
jp
nop
cs
rol
lret
incl
push
lods
jmp
les
jne
pop
cmp
dec
mul
sahf
jno
test
jecxz
dec
jnp
xchg
add
and
idivl
fidivs
and
mov
outsb
mov
sbb
and
mov
add
aas
and
inc
lret
mov
push
jnp
push
xor
lods
mov
adc
ret
cmp
add
cli
and
xor
jecxz
push
out
cli
sbb
adc
popf
popf
gs
rcr
rclb
lcall
mov
popf
jnp
push
ds
xlat
stos
mov
sti
or
fisubrl
movsl
out
push
and
int
inc
xor
shrl
jmp
fnstenv
repnz
gs
pop
xchg
xor
repnz
scas
mov
mov
mov
jge
push
pushf
outsb
andl
pop
lret
xchg
or
sbb
cli
push
and
cld
xorl
fnstenv
mov
mov
jg
xchg
lea
insb
cmpsl
enter
or
mov
cmp
cli
sbb
add
inc
adc
enter
test
mov
popf
pop
nop
int
jle
sub
mov
dec
in
adc
or
jnp
push
mov
dec
add
fnstenv
and
fistl
pop
jb
dec
cmp
pushf
add
insb
sbbb
addr16
pop
lds
stc
in
mov
and
sarb
adc
das
mov
mov
adc
daa
push
outsl
mov
cli
mov
dec
inc
add
dec
fnstcw
push
pushf
mov
fdivl
out
mov
sub
cmp
pop
adc
lods
jle
mov
lock
addr16
fldl
testb
push
sahf
repz
rcll
xchg
insl
inc
mov
daa
push
xchg
mov
cmp
push
xor
pop
ja
mov
pusha
in
push
out
dec
loopne
mov
test
mov
sarb
cltd
dec
mov
nop
and
testl
jecxz
jnp
sub
mov
or
in
lahf
cmp
loope
cmp
rcll
hlt
lds
push
sar
cwtl
adc
pop
inc
pop
int
xchg
movsl
mov
sbb
ret
xor
lahf
daa
cwtl
xchg
dec
stos
add
xchg
push
pushf
push
cwtl
ss
je
jecxz
push
stc
rcll
loop
aam
add
pop
xor
push
call
sbb
ss
jbe
icebp
clc
loop
repz
mov
jns
icebp
rcl
pop
repz
arpl
inc
sbb
test
and
pop
mov
aam
cwtl
push
and
cld
or
dec
xor
cld
jecxz
mov
mov
cld
adc
or
inc
jp
aam
in
dec
inc
in
inc
xchg
femms
rol
cmp
or
xor
xchg
and
or
mov
insl
sbb
mov
cli
into
xchg
inc
lods
aas
test
add
in
fsubl
cmp
js
sbb
mull
jns
mov
stos
inc
mov
pop
push
mov
scas
dec
int
jb
cld
scas
mov
mov
lock
outsb
stos
scas
push
pop
mov
push
std
dec
mov
dec
cmp
push
and
int3
xlat
or
mov
ror
add
fistpll
imul
xchg
shl
aas
cmp
xchg
inc
adc
fnstcw
testb
sub
insb
adc
subb
pushf
mov
add
mov
std
icebp
aas
in
inc
lret
jnp
push
jnp
or
fldt
push
cmp
cmp
xchg
sbb
outsl
sbb
loope
pop
adc
adc
xor
movsb
hlt
jge
xchg
cmp
fimull
mov
sti
cli
in
cmp
pusha
out
inc
or
outsl
jb
mov
cwtl
and
sub
insl
sti
or
scas
mov
xchg
add
jmp
inc
sub
and
roll
sub
sub
cmpsl
cmp
jg
or
dec
mov
ds
add
sub
and
js
dec
add
adc
xchg
data16
add
and
inc
data16
adc
adc
push
repnz
cmpsl
bound
xor
std
push
clc
xor
aad
lret
pushf
mov
cmc
lock
push
push
orb
push
or
ret
cmp
or
es
pop
mov
or
add
fstpt
scas
mov
push
xchg
cltd
pop
mov
mov
dec
or
or
es
push
out
pop
push
push
and
movb
dec
pop
jg
sti
and
or
and
cld
repnz
xor
sti
lods
sub
mov
cli
adc
pop
pop
mov
cltd
and
xchg
lods
add
push
dec
dec
push
sub
pop
cmp
pop
jb
iret
sahf
xchg
out
mov
push
add
dec
js
add
dec
mov
divb
adc
jns
xor
movsb
inc
mov
outsb
mov
xchg
and
stc
into
imul
popf
pop
push
ljmp
aas
call
or
pop
mov
jnp
scas
loop
das
add
sub
les
lcall
testb
push
icebp
xor
sub
pop
out
cmp
sub
inc
jecxz
daa
xor
sub
outsl
xchg
mov
testb
dec
test
push
pop
sub
sbb
iret
inc
lock
inc
pop
pop
pushf
mov
dec
test
xchg
repnz
pop
push
loopne
and
dec
xor
insl
jp
loop
movsb
cmp
imul
mov
push
push
fistps
repnz
push
in
mov
int3
xchg
and
mov
pop
cli
iret
iret
test
or
loop
cltd
pop
in
pop
out
mov
sbb
dec
fnstenv
sbb
sahf
cwtl
mov
mov
mov
icebp
xor
iret
loope
or
addr16
or
lret
sub
mov
sti
rcr
pusha
mov
dec
fisubrs
push
lds
adc
jle
lahf
addr16
cmp
inc
jmp
inc
cli
jns
enter
cmc
stos
push
movsl
or
subl
ja
push
jnp
mov
test
les
push
mov
mov
scas
push
pop
jl
lds
out
mov
xor
sbb
push
test
mov
or
mov
xchg
test
stos
fimull
push
nop
ret
jge
add
dec
aaa
gs
out
inc
sub
gs
push
sbb
cmp
idivl
pop
fcmove
sub
push
lods
mov
popa
ret
add
sbb
sub
int3
add
xchg
mov
cmp
and
js
in
sub
inc
xchg
movsl
push
shrl
dec
jo
fcoml
mov
fsubl
push
inc
outsl
pop
adc
push
add
mov
sbb
pop
leave
shr
hlt
pop
push
sub
shll
mov
rorl
lea
mov
scas
inc
or
pop
xchg
int3
enter
pop
sub
mov
insl
addr16
or
jne
loop
andb
jecxz
mov
subb
fs
push
mov
xor
hlt
mov
dec
push
lea
xorb
jl
jmp
sbb
subb
lret
dec
cmp
inc
fildl
sub
sub
xchg
popa
or
adc
jno
dec
jnp
fcompp
lock
jne
in
sbbl
loope
mov
aad
out
pusha
shrb
add
adc
cmp
mov
orl
inc
push
cli
stos
fs
push
push
mov
mov
mov
push
pop
hlt
dec
ja
add
sbb
xor
cmp
mov
shrl
scas
js
xor
dec
adc
movsb
add
daa
je
adc
pop
fdivl
mov
xchg
stos
sbb
ljmp
into
cs
jno
add
fs
in
imul
es
shll
mov
dec
mov
mov
mov
pop
cmpsl
sub
iret
mov
popf
popf
fldt
sbb
inc
sarb
dec
xchg
ret
and
xor
push
sbb
jae
xchg
lds
mov
sub
les
stos
dec
jno
pusha
out
stc
xchg
cmp
add
test
in
subb
imul
stos
mov
les
roll
aad
test
mov
clc
insb
popf
test
or
pop
push
imul
and
in
xor
lcall
or
jmp
adc
sub
cld
and
aam
mov
xor
roll
sbb
adc
inc
leave
dec
out
in
lods
imul
or
push
lods
movq
subb
xor
push
pushf
dec
and
repnz
filds
sub
pop
test
push
scas
jmp
mov
lret
lock
movsl
and
cmp
cmp
inc
fmul
gs
or
jge
pop
test
aad
mov
adcb
cmpsb
pushf
iret
cmp
rcrb
mov
stc
mov
xchg
mov
gs
lods
pop
jns
add
xchg
jns
imul
add
push
inc
xchg
out
test
jmp
or
push
mov
or
imul
bswap
xor
dec
jae
pushl
inc
aaa
and
out
and
flds
cmpsb
push
jo
sbb
lds
adc
and
fstpt
shll
jmp
mov
sbb
addr16
fmuls
cwtl
cwtl
xor
pop
xor
out
aam
enter
pop
lcall
xchg
add
xchg
cvtpi2ps
int3
or
inc
pop
je
jmp
rolb
sub
pop
pop
sahf
fidivrl
fs
xchg
dec
mov
pop
push
pop
sbb
ret
sub
outsl
jo
fbstp
int3
jecxz
mov
lods
ds
dec
bnd
ret
loop
les
fdivr
aaa
sbb
vsqrtps
out
sbb
cmc
inc
sub
aad
jb
stos
sbb
and
lods
test
pop
lret
out
les
mov
call
enter
mov
pop
scas
or
pop
sbb
cmp
out
imul
popf
pop
in
cmp
jae
mov
jge
push
shl
leave
int
aam
cmp
arpl
xchg
clc
stos
inc
mov
cld
push
jge
mov
mov
or
xlat
aam
icebp
jmp
sar
mov
fbstp
insb
mov
and
pusha
push
sbb
push
mov
dec
adc
imul
cli
sbb
jge
hlt
pop
mov
pop
xor
or
outsb
mov
mov
or
xor
sbb
and
or
scas
sbb
sbb
jns
ja
mov
mov
mov
lods
fdivr
inc
out
dec
aam
mov
cmc
pop
jbe
aam
or
jmp
jb
sti
push
push
pop
pop
cmpl
pushl
int3
sub
int3
push
test
jo
and
testb
and
sahf
out
lea
insl
pop
ret
mov
jbe
dec
movsl
fld
test
xchg
jnp
aaa
inc
mov
pop
movsb
xlat
loopne
add
xchg
addr16
cmpsb
cmp
enter
daa
mov
pop
pop
push
dec
add
pop
xchg
fldt
add
icebp
mov
nop
sbb
jecxz
cmp
push
or
jnp
call
add
pop
andb
or
arpl
fildll
leave
dec
xchg
hlt
inc
addb
add
pop
jo
adc
cmp
fisubrs
xor
loop
mov
cmpsl
push
scas
clc
dec
ja,pn
xchg
pop
ret
dec
pop
jmp
leave
test
jbe
jb
sub
insb
jp
mov
mov
mov
popf
jl
iret
push
arpl
mov
loope
sbb
mov
add
adc
or
sub
push
and
stos
mov
adc
xchg
imul
jb
xchg
cmp
xchg
inc
insb
lock
xor
xor
mov
lods
lea
dec
imul
jne
mov
ja
pop
and
fbld
aaa
nop
test
movsb
jno
ljmp
arpl
pop
aas
cmpsl
jle
hlt
test
add
daa
xlat
scas
and
outsb
mov
ja
xchg
sub
gs
xchg
inc
inc
mov
in
xchg
inc
mov
out
or
imul
ljmp
jmp
lods
lds
leave
rol
cld
push
loope
push
xor
mov
sbb
add
add
les
roll
call
xchg
out
stos
movb
roll
pop
mov
push
nop
adc
xchg
xlat
xchg
pushf
pop
inc
xlat
push
movsb
scas
mov
dec
in
cld
mov
test
inc
lret
mov
and
and
dec
add
into
dec
movsl
and
aam
xor
mov
ret
sbb
into
dec
xchg
jae
loop
rorl
push
push
es
dec
movsl
mov
lcall
push
or
lahf
mov
mov
nop
stc
scas
repnz
add
dec
xor
xchg
xchg
ja
aam
cli
lret
dec
push
push
out
in
sub
jb
cmp
dec
or
aad
mov
testl
int3
jle
add
xlat
sub
hlt
popf
dec
jp
cld
movsl
push
xlat
mov
jmp
insl
sub
mov
push
mov
mov
cli
scas
cmpsl
scas
mov
mov
lds
inc
call
jl
rcrl
test
pop
movsl
movsb
je
add
fs
adc
stos
aad
out
xor
scas
xor
lret
sbb
dec
cli
cmp
xchg
fmul
inc
inc
cs
sahf
mov
jecxz
cmpsl
cmp
add
lcall
orl
lret
cs
and
dec
je
imul
xchg
sub
jo
push
nop
cmp
or
xchg
xchg
jmp
lret
pushf
pop
test
ja
dec
mov
test
in
mov
call
sbb
imul
cmpsl
and
cmp
xor
push
in
fs
cmp
out
sub
push
mov
adc
hlt
test
cwtl
mov
adc
lea
cmpsl
std
cmc
xor
rorb
jne
lea
xchg
push
push
mov
add
mov
negl
jmp
test
adc
push
lea
pop
ret
jnp
addr16
dec
mov
xchg
cmp
mov
pop
pushf
dec
sbbb
outsb
mov
stc
mov
lock
mov
add
out
cwtl
jae
scas
notl
mov
pop
jbe
mov
push
push
and
jae
ret
mov
jo
leave
push
add
movsb
xchg
repz
mov
out
add
jnp
lea
je
push
dec
data16
jo
test
mov
sub
fnstcw
outsb
mov
inc
mov
jne
sets
or
or
pop
cmpsb
and
aam
or
outsb
xchg
add
cmp
mov
inc
popa
movsl
cld
arpl
mov
lret
subl
int
leave
fnstsw
xchg
mov
lods
or
lcall
xchg
mov
add
dec
mov
mov
push
repz
inc
inc
inc
ret
sub
movsl
aam
sbb
inc
inc
xor
cld
clc
aaa
cmc
int
push
adc
and
push
iret
jno
je
xchg
test
aam
fadd
shll
popa
xor
movsb
das
in
xor
iret
ret
sbb
inc
dec
movsb
mov
sbb
cltd
shlb
stos
cs
out
fsubrl
lret
inc
mov
sub
in
add
mov
sbb
pop
cmp
dec
inc
cld
xor
jecxz
mulb
and
mov
mov
dec
cmpsb
ret
xchg
sti
mov
ss
cld
decb
jl
out
cli
mov
lahf
hlt
out
xchg
emms
outsl
or
data16
push
inc
push
cltd
pop
mov
jo
lret
and
mov
inc
jg
inc
sbb
xor
pop
mov
mov
insb
out
mov
outsl
add
lds
cmp
ret
lock
inc
cli
test
addr16
inc
out
jp
sti
xlat
cmp
sub
gs
scas
mov
out
ret
adc
addr16
mov
xchg
cmp
pop
inc
pop
mov
ret
mov
test
out
mov
add
insl
mov
movsb
pop
es
add
adc
out
and
jge
fsubs
push
ja
jl
xchg
sub
adc
inc
mov
pop
and
pop
in
into
sub
dec
loopne
pop
negl
orl
outsb
mov
ficoml
xchg
dec
cmpsl
inc
sub
lea
jbe
mov
loopne
daa
add
adc
push
loop
bound
mov
dec
imul
stos
pop
nop
in
jnp
sarl
push
das
xor
sub
pop
mov
out
push
iret
movsb
jle
jne
jle
sub
push
in
push
adc
xor
je
pushf
xchg
push
sahf
nop
in
adc
loopne
add
cmp
adc
push
out
or
mov
adc
sbb
dec
cmp
push
or
jnp
dec
sbb
push
push
out
adcl
push
data16
pusha
mov
es
pop
test
lcall
stos
or
sbb
jle
cmpsl
clc
leave
push
bound
push
test
cmp
in
mov
cmp
inc
stos
sub
push
loop
inc
int3
fwait
sub
mov
daa
mov
dec
shll
dec
cli
repz
cs
dec
out
mov
test
xchg
sub
lods
in
arpl
push
adc
fistps
in
mov
test
in
inc
nop
fidivrs
xchg
stos
popf
out
lds
pop
mov
addr16
or
lods
out
nop
sbb
jno
sub
jge
sub
jg
mov
clc
or
call
dec
dec
cmp
add
aaa
repnz
fsubrl
ficoml
and
pop
push
xor
es
jge
pop
mov
xor
pushf
pop
ss
shll
fscale
cli
cmp
add
shrl
mov
cmp
lahf
push
add
sub
add
mov
add
dec
les
xor
xchg
mov
and
ljmp
adc
cmp
push
roll
push
testl
add
sbb
incb
cmp
sub
xchg
popf
fsts
cmc
mov
pop
lds
dec
cmp
jb
push
data16
sbb
mov
mov
sahf
pop
xor
inc
push
lods
and
stos
pop
jb
lret
jecxz
cmp
pop
aad
arpl
pop
jbe
cmp
gs
jmp
aam
pushf
inc
sub
xchg
mov
adc
add
pusha
jno
hlt
jp
jecxz
cmc
sub
mulb
xchg
dec
push
cmp
mov
inc
sub
fidivrs
scas
test
nop
add
hlt
xor
icebp
lods
dec
pop
xchg
pop
push
les
xchg
rcr
adc
mov
jb
arpl
cmp
ret
out
dec
sbb
mov
loopne
stos
cld
mov
mov
or
cmp
xchg
xchg
imul
subb
int3
mov
add
idivl
adc
xchg
sbb
inc
in
xchg
aad
and
mov
cmp
iret
hlt
mov
mov
inc
pop
inc
mov
xchg
add
mov
inc
das
icebp
scas
nop
push
ljmp
inc
stos
pop
add
repz
in
xor
es
add
and
into
ror
and
push
push
outsb
and
dec
xor
in
mov
push
pop
push
divl
add
cld
sbb
mov
out
es
dec
mov
jne
loop,pt
sbb
jns
movsl
pop
and
std
clc
call
std
pusha
leave
xchg
push
mov
aas
mov
shrb
xor
mov
cmp
xchg
lods
xor
aam
movsl
inc
popf
cmpsl
sub
sti
clc
cmp
test
mov
push
hlt
mov
dec
sarb
mov
add
ja
fsubl
je
push
aas
xor
rep
dec
popa
pop
pusha
adc
out
stos
addb
imul
add
push
test
mov
repz
xchg
arpl
jae
fistl
mov
or
pop
cmp
jmp
mov
dec
insb
inc
scas
xchg
or
xor
cmovne
test
and
xor
rorb
jmp
lret
btcl
inc
loop
xchg
fdivl
push
mov
hlt
je
cmp
insb
push
xchg
ljmp
popf
pop
sub
or
mov
xorl
loop
iret
sub
pop
movsl
lea
lret
mov
and
iret
sub
popa
sarl
adc
hlt
ds
xchg
test
mov
jno
rcll
mov
data16
cmc
add
fisttpll
xor
dec
and
push
dec
cld
mov
clc
jbe
and
or
roll
and
cld
add
mov
cmpsl
mov
scas
adc
sbbb
and
mov
es
rcr
out
stos
jle
push
ret
ror
jmp
add
mov
pop
sbb
adc
xchg
fdivrs
push
mov
adc
mov
cmc
push
lea
or
repz
fldenv
lods
jle
sti
xchg
sub
call
adc
and
mov
cwtl
cli
out
pop
sub
mov
mov
xchg
cmp
mov
in
ret
clc
push
test
adc
movsl
xor
mov
jbe
int
je
lods
xor
cmc
lcall
lcall
and
jno
sbb
dec
out
inc
fmul
hlt
push
xchg
mov
xor
fsts
pop
dec
sahf
cmp
sub
push
jmp
mov
xchg
call
insb
adc
movsb
inc
fcompl
sub
and
insl
popf
jl
push
data16
and
js
sub
mov
xor
dec
cmp
ljmp
dec
inc
gs
jae
xor
fsubl
xor
nop
leave
or
daa
lea
repnz
test
or
xchg
outsb
xchg
xchg
push
cmpb
mov
push
sbb
ljmp
xor
and
pop
xchg
mov
jbe
cld
pop
hlt
rorl
rcll
js
jae
insl
mov
xchg
icebp
das
bound
mov
or
mov
add
lret
and
cmp
add
mov
mov
and
mov
xchg
mov
inc
add
jnp
cltd
enter
cmp
sarb
enterw
mov
xor
ja
dec
mov
xor
pusha
outsl
mov
mov
mov
shll
cmp
pop
loopne
ljmp
jl
jmp
mov
enter
loope
stos
test
fucomip
les
popf
adc
repz
sarb
lahf
push
adc
stos
sbb
insl
pop
and
out
cli
pusha
cmpsb
fcoml
in
out
repz
adc
jmp
push
xor
xor
pop
or
dec
loopne
mov
xor
dec
sub
js
sti
imul
pop
mov
cltd
dec
mov
stc
cmpsl
xor
fdivl
mov
dec
cmp
dec
test
adc
scas
cmc
adc
dec
mov
std
add
addl
xchg
mov
dec
mov
stos
repz
test
fs
xchg
adc
dec
mov
pop
xorl
xchg
xor
and
es
jl
xor
lods
into
dec
aad
sbb
sbb
push
xlat
aaa
and
adc
pushl
sub
in
loopne
stos
adc
data16
sarb
test
jge
jecxz
mov
add
fiadds
rorb
mov
movsl
sbb
negl
dec
flds
jae
orl
andb
xchg
loop
mov
je
std
mov
gs
out
push
fisubrs
pop
rcl
and
adc
enter
xor
and
and
dec
shlb
mov
or
push
stos
xchg
mov
and
je
xchg
xchg
popf
mov
imul
jae
leave
icebp
mov
xchg
push
inc
push
in
xchg
add
in
lds
ljmp
push
addb
fiaddl
lea
xchg
mov
aaa
sbb
adc
fidivrs
mov
dec
xor
imul
ret
lcall
mov
xor
add
sbb
fbstp
daa
insb
lds
jmp
imul
fidivl
add
xchg
xchg
aas
and
mov
pop
xlat
push
popw
add
arpl
adc
in
xchg
inc
mov
mov
push
sbb
mov
ljmp
mov
xchg
ss
jle
xor
imul
push
dec
push
loope
stc
xchg
jmp
jg
mov
out
outsl
cmc
fucomip
mov
xor
popl
or
mov
sub
add
jo
xor
insl
imull
xchg
xor
and
sbbl
test
flds
jb
in
adc
repnz
std
fsubs
lods
pop
bound
fst
mov
sahf
add
push
js
fbld
lret
push
sub
pop
stc
decl
jl
out
movsb
xchg
sarl
insl
push
adc
xor
xor
push
lods
mov
dec
sub
xor
xchg
mov
lods
pop
scas
bound
or
out
xor
stos
int
jbe
psubusw
push
pop
add
and
fdivrl
pushf
lcall
fcomps
aas
cmc
cwtl
mov
fwait
adc
mov
mov
adc
rcrb
xchg
test
nop
out
sub
lcall
mov
push
sbb
shll
and
pop
shl
pushf
dec
sahf
sbb
mov
out
lcall
mov
mov
jg
dec
cmpsb
xchg
add
xchg
mov
jle
adc
cmp
lods
xor
std
lods
push
std
test
sbb
out
inc
jnp
mov
out
adc
adc
and
jp
inc
xchg
push
mov
ja
dec
push
jne
test
cmp
shlb
cwtl
xor
out
gs
fwait
xchg
mov
cs
dec
arpl
mov
mov
cs
xchg
xor
dec
mov
pop
add
es
lock
fdivl
pop
xchg
rcrw
fsubrl
imul
pop
hlt
and
mov
inc
add
cld
pop
and
test
dec
addl
in
ss
and
jecxz
xchg
ret
xchg
xorl
inc
sub
add
scas
jne
mov
mov
out
adc
ficoml
dec
fsubrs
imull
sbb
loop
fmul
or
jbe
js
stc
sbb
lcall
inc
mov
sarb
gs
pusha
roll
shll
addr16
ds
sbb
ljmp
sbb
fldt
clc
dec
mov
call
lcall
dec
push
add
in
jo
out
es
movsl
andb
pop
mov
jecxz,pn
test
mov
mov
imul
add
mov
push
ja
test
out
std
jge
lods
mov
sbb
loopne
out
mov
jle
mov
out
sbb
xchg
jo
xor
push
popf
jg
cmp
cmp
in
stos
jo
or
fwait
in
ficompl
andl
les
pop
out
dec
mov
or
pop
std
jecxz
loop
scas
int3
add
dec
pop
pop
fdivr
sti
jno
orl
xchg
sub
dec
adc
xchg
mov
out
sbb
pop
rorl
cmp
or
pop
ss
jbe
push
movsl
loopne
dec
test
mov
and
pop
dec
and
ret
xor
mov
shll
leave
shll
out
jno
mov
jmp
popa
lret
loope
lar
les
dec
mov
ret
jge
inc
add
lret
sub
add
js
adc
dec
push
icebp
and
rclb
sbb
pop
cmp
or
outsl
lock
adc
adc
cld
int
and
xor
ja
adcb
js
in
pushf
and
push
xlat
imul
das
gs
xlat
sub
cmpsb
cltd
pop
mov
in
cmp
add
jnp
pop
lahf
cmp
stos
ds
mov
shrl
mov
mov
mov
sub
push
ret
push
cwtl
movsb
clc
and
fnstcw
subb
test
mov
push
mov
sub
inc
add
sub
sub
mov
xor
inc
enter
push
push
xor
xor
test
mov
dec
or
inc
mov
ficoml
into
add
xchg
aam
mov
fmull
pop
shrb
push
cmpsb
icebp
inc
push
in
push
not
jmp
push
sbb
imul
aam
lahf
push
or
push
ss
add
mov
pusha
fsubs
mov
jb
mov
push
jecxz
repnz
cld
fdivrp
inc
xchg
in
xor
mov
cmpsl
call
pusha
cltd
js
mov
pop
ret
push
sub
cltd
or
sbb
adc
ror
rolb
add
dec
or
dec
xor
daa
jb
leave
jb
dec
jbe
jnp
push
fwait
jns
addr16
jmp
inc
mov
ljmp
lcall
rcll
xchg
cli
mov
xor
jmp
adc
bound
dec
adc
in
jle
arpl
cmp
cwtl
mov
sbb
xor
movsb
pop
xabort
repnz
fimuls
mov
pop
outsl
int3
xor
mov
add
push
mov
sbb
int
mov
adc
movl
mov
jns
outsl
xchg
jb
cmp
dec
xchg
rorl
mov
mov
shll
out
bound
lods
in
ljmp
cmp
sahf
add
mov
shll
adc
jecxz
mov
xor
nop
pop
sub
aam
fdivs
jecxz
xchg
shll
je
push
xor
dec
in
ror
mov
in
and
je
inc
cmpsb
pop
sub
and
mov
pop
push
jmp
mov
add
mov
fisubl
jnp
sbb
or
jne
jg,pt
mov
adc
pop
jge
adc
mov
fldenv
test
bound
xchg
mov
push
push
cmp
jns
dec
add
ficomps
repz
fdivs
mov
jmp
xchg
lahf
jnp
add
lea
dec
jle
sar
push
mov
sub
mov
imul
mov
in
mov
ljmp
scas
pop
lods
stos
mov
adc
push
or
pusha
hlt
repz
pusha
loope
jb
push
lods
lods
dec
std
into
scas
mov
dec
add
outsb
pop
push
xor
mov
int3
dec
outsl
push
jle
push
xchg
xor
lods
mov
dec
stos
call
xor
pop
aaa
cmp
and
imul
mov
lret
cli
fwait
js
mov
add
pop
mov
jg
call
xor
nop
xchg
cmpsl
pop
aad
push
nop
dec
cli
xchg
xor
ret
xlat
dec
mov
sbbb
jbe
in
pushf
or
nop
cltd
xor
adc
inc
sbb
xor
movsb
fs
iret
push
imul
and
pop
mov
lods
lret
cs
adc
adc
sbb
jno
mov
cwtl
xchg
data16
lods
fwait
pushw
mov
lock
fsubr
mov
add
popf
clc
or
mov
inc
mov
mov
lret
insl
leave
mov
cmp
mov
jbe
mov
xor
int
lret
pop
rcrl
push
loope
dec
pop
sub
cmpsb
or
divb
mov
sbb
imul
repz
fbld
out
push
mov
adc
xchg
sbb
fdivrp
out
in
cmp
cmpsb
scas
pusha
movsb
jne
lods
mov
stos
mov
sahf
fistl
arpl
push
stos
aam
dec
sti
push
pop
xchg
push
pop
into
mov
not
divb
ljmp
mov
and
pop
mov
xor
xchg
add
mov
movsb
flds
mov
ljmp
mov
xlat
shll
inc
push
les
sbbb
into
or
push
inc
dec
stc
outsb
mov
lods
adcl
daa
imul
adc
stos
dec
sbb
les
adc
dec
xor
flds
xlat
flds
pop
in
pop
cmpb
jo
movsl
push
push
in
lret
in
mov
lret
adc
mov
sahf
aas
pop
testb
movsb
mov
push
mov
mov
xor
popf
cld
mov
subb
or
cmp
cli
daa
movsl
aas
push
mov
sub
cltd
mov
pop
push
out
cmpsb
xchg
cmp
adc
or
inc
testl
push
xor
ljmp
fiadds
mov
ds
mov
or
adc
mov
xchg
and
dec
jae
mov
xor
push
lret
icebp
xchg
aaa
cmp
repz
add
pop
pusha
insl
stos
mov
pop
sbb
aam
ror
jns
in
shl
dec
dec
sbb
xchg
ss
jle
pop
cmp
cmp
sub
cltd
cmp
fcomps
in
xor
call
mov
pop
in
mov
cmc
jg
repnz
push
mov
xchg
adc
add
iret
sbb
addr16
imul
xor
pop
sbb
mov
mov
xchg
or
je
xchg
sahf
ficoml
pop
and
out
fmulp
sarb
cld
inc
adc
popf
in
lds
lahf
mov
jmp
adc
adc
inc
aam
jb
xchg
das
jne
scas
outsl
lock
lret
xor
sbb
loope
es
push
sub
daa
cmp
jecxz
xor
loope
fistpll
sub
jmp
aaa
ret
das
scas
xorb
jbe
push
bswap
inc
vunpcklps
leave
sbb
jecxz
loopne
rcl
cmp
daa
and
adc
xchg
push
pop
popf
jne
addr16
mov
je
mov
stc
outsl
inc
pop
mov
nop
in
cmp
popa
push
sbb
test
cmp
jbe
cld
mov
lods
out
sub
lea
mov
addr16
cld
lea
mov
push
cwtl
dec
fwait
pop
lock
add
in
jmp
mov
xor
iret
jae
cmp
xchg
addr16
test
int3
bound
aas
cmp
out
dec
mov
stc
enter
push
out
xor
bound
pop
cmpl
movb
cmc
add
sub
jg
call
mov
lds
stos
jbe
sbb
leave
aad
test
test
inc
push
pop
sub
pusha
pushf
mov
fsubrl
pop
lret
hlt
je
xchg
mov
jne
je
adc
xchg
and
fwait
insb
xor
push
in
lea
cmc
xor
jno
xlat
imul
shlb
push
sbb
push
mov
fsubrp
clc
ret
dec
leave
jl
ss
test
call
pop
sahf
in
or
test
inc
andb
push
stc
mov
loopne
mov
rorl
lahf
repz
insb
data16
mov
cli
xchg
in
pop
mov
icebp
dec
dec
sbb
or
lods
ja
sbb
pop
iret
push
hlt
mov
pop
lret
pushf
cmp
xchg
addr16
jb
stos
sbb
push
xor
push
push
loope
push
cmpsb
lret
mov
push
movsl
cmp
pop
out
cmp
lock
insb
inc
push
jle
and
enter
mov
mov
dec
mov
outsl
rcrl
lahf
ficompl
jno
push
adc
mov
movsl
pop
inc
nop
int3
push
or
pop
sahf
or
mov
adcb
mov
xor
inc
push
mov
dec
push
lret
jno
lock
daa
or
bswap
sarb
lods
je
pop
leave
pop
cltd
push
xchg
fnstenv
xor
in
push
pop
int3
cmp
dec
jmp
call
mov
xor
out
out
sahf
and
xor
ljmp
aam
ss
push
mov
add
inc
push
rcl
orl
cld
lahf
push
cmc
mov
insl
mov
dec
and
insl
mov
mov
insl
inc
mov
mov
xor
or
jo
xchg
cmp
aad
xor
dec
mov
inc
jo
mov
mov
mov
jnp
stc
sub
cmp
inc
push
das
xchg
pop
mov
shll
mov
aam
and
lret
jo
hlt
mov
rclb
ret
xor
sbb
loopne
sbb
test
xchg
sub
jmp
pusha
imul
add
mov
adc
std
mov
jge
stos
dec
push
sbb
mov
cmp
loop
sbb
push
dec
cmp
fldcw
mov
cmpsl
mov
ror
clc
mov
and
cltd
xchg
xchg
mov
xchg
pop
xchg
dec
push
adc
lods
or
push
pop
and
in
cmpsl
movl
fcmovb
lods
mov
inc
push
mov
inc
cmc
adc
popf
push
iret
ret
stos
pop
mov
aaa
adc
pop
push
sub
scas
inc
jns
mov
mov
in
ret
mov
test
xor
call
shl
hlt
or
push
fiaddl
mov
sub
sbb
xchg
mov
inc
or
out
pop
cmc
or
adc
sub
in
mov
test
inc
insl
mov
dec
push
inc
pop
jmp
scas
std
add
xchg
push
mov
cmp
xchg
icebp
arpl
add
aad
sub
xchg
cwtl
sub
pop
leave
mov
popa
xchg
xor
and
sbb
inc
shrl
test
dec
std
mov
push
hlt
add
pop
push
les
jl
insb
dec
in
xchg
mov
lods
pop
loop
mov
add
or
neg
sahf
mov
das
stos
por
pop
lahf
xor
out
aas
rcrb
adc
lods
adc
cmp
outsb
pop
push
ljmp
cmp
xchg
into
mov
sahf
nop
xlat
cld
dec
dec
aas
in
xchg
mov
adc
call
pop
inc
xor
cmp
xor
call
addl
cmpsl
scas
sbb
aad
fcompp
lret
sbb
pop
mov
ret
cwtl
cmp
test
and
test
call
test
fcompl
lahf
mov
mov
pop
fidivrl
mov
loop
or
dec
arpl
xchg
jae
rcr
lret
stc
icebp
or
cmovle
or
add
cmp
sbb
mov
loopne
or
outsb
jae
pop
dec
mov
cmpsl
int3
cmpsl
test
or
lods
add
mov
mov
mov
ret
js
or
shll
mov
dec
iret
pop
lret
es
mov
lods
cmpsb
out
es
stc
jl
cmp
imul
and
inc
loopne
mov
cmp
push
pop
addb
iret
outsb
insl
push
pushf
lahf
stc
and
mov
mov
mov
and
pop
loopne
push
mov
cld
in
imulb
mov
enter
pop
add
test
mov
pop
sahf
cmpsl
mov
add
push
adc
std
stos
int
icebp
std
add
and
xchg
dec
adc
mov
cmp
adcl
ljmp
mov
pop
je
lahf
or
or
cmpsl
pop
mov
loope
data16
data16
orl
stos
and
out
cmp
dec
cmp
movsb
clc
test
out
push
dec
imul
dec
and
cmp
jg
stos
std
mov
dec
lea
sub
xchg
pop
icebp
mov
cmp
xor
mov
repnz
hlt
test
jnp
inc
lea
add
xor
xor
movsb
inc
iret
mov
sub
sarl
out
sbb
repnz
aaa
mov
cmpsb
sub
and
xor
subb
and
pop
pusha
dec
icebp
dec
sti
repnz
inc
out
inc
dec
mov
pop
testl
add
out
mov
push
in
or
and
mov
shll
sbb
daa
cmc
inc
jmp
mov
mov
lahf
lahf
out
push
adc
fsubs
pop
push
in
mov
sbb
pop
ret
call
mov
mov
lods
shll
cld
cld
mov
sbb
and
movaps
insb
add
cltd
int
out
adc
outsl
scas
xchg
mov
and
enter
in
es
mov
mov
push
jb
mov
xchg
lea
cmpsl
and
dec
maskmovq
ds
bound
push
add
or
aam
lahf
jge
jbe
jle
sub
in
add
mov
testl
pop
inc
lret
je
and
push
lcall
cwtl
aas
lret
pop
jb
sub
mov
mov
iret
xorb
inc
add
inc
fdivl
int
inc
insw
out
and
push
lcall
lods
jbe
sbb
pop
push
test
test
adc
out
insb
push
mov
pop
cmp
repnz
mov
or
xchg
add
lahf
push
ds
push
inc
sub
aad
adc
xchg
scas
sarl
push
adc
mov
js
inc
je
jp
push
or
fsubrs
fbld
lods
xchg
rcr
pop
cmp
jnp
mov
xchg
or
test
pop
andb
fidivs
out
or
arpl
mov
clc
and
insb
data16
jge
mov
xchg
push
sbb
pushf
and
sbb
push
jmp
xchg
aaa
scas
fst
pop
dec
inc
add
cmp
scas
lahf
cmp
in
rcrb
xor
and
data16
cmp
add
std
mov
mov
loope
in
loopne
inc
pop
dec
push
stc
mov
repz
push
sub
inc
inc
insb
dec
pop
mov
dec
dec
mov
int
sbb
or
movsb
shrb
sub
inc
cs
fdivs
and
hlt
dec
daa
jge
and
dec
cmp
leave
arpl
sbb
sbb
leave
sbb
fs
push
xchg
ret
jbe
and
andb
rorb
repz
sahf
sahf
and
add
mov
aam
mov
adc
nop
cmp
mov
sbb
mov
stos
and
les
jecxz
jns
push
incb
sahf
jbe
and
movsb
xchg
cmc
jb
gs
pop
mov
lock
test
out
push
and
mov
rolb
mov
sub
repnz
pop
and
mov
aas
repnz
in
mov
enter
xor
hlt
cmp
add
sbb
adc
pop
jmp
xchg
adc
and
je
daa
dec
icebp
sub
je
addr16
addr16
xor
std
cld
xchg
movsb
add
mov
jae
testl
scas
pop
icebp
daa
jle
xchg
mov
sahf
xchg
adcl
test
mov
out
aaa
pop
cmp
stos
add
push
sarb
insl
pop
mov
inc
mov
xorb
mov
test
out
aad
add
xor
push
and
pop
in
out
cmp
in
sub
int
pop
ss
dec
dec
movsb
cmp
adc
pop
imul
xor
mov
push
cmp
cld
in
mov
pop
or
sbb
push
cmp
pop
lea
ret
adc
jp
sub
cld
jg
mov
jmp
push
add
add
cmp
pop
gs
xor
xor
push
jmp
movsl
cmp
das
ret
loopne
jbe
mov
and
out
sub
test
push
insb
insl
or
pop
mov
dec
ret
mov
sub
sub
aam
mov
dec
jo
and
jo
insb
mov
ja
mov
adc
dec
das
lods
push
out
xchg
jge
lods
aad
pop
sub
adc
xor
mov
lcall
enter
or
adc
lret
jns
aaa
pop
cmp
or
jecxz
jnp
mov
or
pop
fwait
jne
pop
lret
loope
or
lea
cltd
sub
stos
or
movd
hlt
dec
sbb
cmp
out
ror
in
jnp
pop
xchg
lcall
mov
testl
enter
cmp
jp
or
dec
mov
je
sbb
jl
push
in
sti
outsl
pop
inc
hlt
xchg
or
loop
mov
dec
mov
in
inc
insl
mov
or
add
push
or
lret
and
inc
scas
adc
cmp
enter
enter
push
loopne
cmp
xchg
cld
fnstenv
pushl
loopne
loope
inc
xorl
lods
addr16
js
cltd
arpl
adc
push
inc
sub
aad
push
push
xchg
xor
lock
cmpsl
imull
out
pop
into
lock
sbb
mov
dec
jmp
scas
cmp
pop
cld
aaa
and
xor
cmp
leave
mov
add
insb
push
cmpsb
lret
pop
jg
andb
mov
xor
add
fisubl
adc
mov
lods
fdivrp
sub
adc
and
lea
ror
add
push
jo
fstl
lock
cmc
sti
mov
mov
add
push
add
pop
push
pop
inc
int3
in
fnsave
xchg
cmp
inc
push
pop
stc
pop
mov
iret
xor
inc
lret
repz
mov
addl
xor
jae
lock
adc
jae
push
add
div
adc
ja
mov
lret
and
negb
cmp
and
add
movl
popf
clc
aas
mov
mov
sbb
cmc
stos
xchg
xor
add
into
js
lock
insb
dec
mov
sub
sbb
and
daa
xlat
push
push
fistpl
jl
stos
or
xchg
push
and
mov
add
mov
push
sub
push
ja
aaa
or
and
adc
lcall
and
push
sub
and
adc
repnz
add
aas
inc
stc
jne
pop
and
cmc
mov
fsubs
loopne
xor
pop
pop
test
test
ss
repz
jp
fsubrs
test
insb
iret
les
jae
outsb
mov
lcall
loop
adc
push
pop
in
pop
push
into
push
fidivrl
xchg
jbe
sti
ret
inc
es
and
stos
jnp
dec
mov
leave
sahf
mov
lret
popf
mov
test
push
insl
test
add
call
daa
std
sbbb
dec
inc
inc
xchg
cli
mov
js
loope
test
sub
stc
mov
leave
int
pusha
and
mov
ret
xlat
aas
mov
fcomip
test
mov
popa
sti
sub
cmp
add
push
aas
out
into
pop
shl
aad
shrb
nop
loopne
sbb
jae,pt
outsb
jg
dec
adc
pusha
lds
xchg
mov
mov
pop
cmpsl
loop
and
ss
sub
jnp
dec
daa
cmp
movb
lahf
push
fdivrl
scas
xchg
push
push
aad
add
fisubrs
lahf
out
aaa
cs
xchg
mov
aas
xchg
sbb
mov
pusha
das
mov
pushf
out
jp
xor
pushl
and
lea
mov
pop
ret
mov
hlt
lahf
addl
aad
cmp
sbb
sbb
lcall
mov
cs
loopne
mov
jbe
fdivrs
pop
shll
push
movsb
dec
push
fistps
in
jl
and
outsl
aaa
aad
adc
jb
dec
push
imul
out
call
inc
xor
jp
add
cli
subw
push
test
rorb
xchg
xchg
pop
mov
mov
jae
insw
sbb
and
sub
mov
sub
mov
pop
or
fnstsw
mov
sahf
xchg
std
outsl
cld
mov
fwait
cmc
adc
aad
aam
adc
mov
lods
cmc
inc
ja
scas
aaa
lcall
mov
xor
mov
and
dec
sub
js
inc
aas
push
push
jmp
mov
subb
imul
push
lods
pop
xor
cld
shl
push
ss
scas
call
mov
pop
stc
push
movsl
call
push
fwait
mov
cld
aaa
or
outsb
pop
xlat
lods
or
movsl
xchg
xor
out
jle
leave
jge
sbb
xchg
cltd
je
aaa
ret
or
mov
cmp
loope
test
lods
lods
imul
adc
sbb
mov
scas
repnz
dec
aam
out
scas
lods
sbb
je
push
push
cmc
mov
cs
call
loopne
popa
dec
cmp
fst
adc
fildll
into
out
mov
mov
jecxz
shrl
mov
stos
fsubs
cmp
data16
cmp
sub
push
xor
cltd
cwtl
mov
sub
inc
push
mov
jne
cmp
std
cmp
push
aaa
arpl
xchg
xorb
repz
xor
cmp
inc
in
data16
mov
mov
in
pop
popf
ret
push
add
push
jb
mov
aaa
clc
adc
lret
ds
dec
negb
std
cmp
adc
lret
adc
leave
jne
xchg
jle
mov
sub
sub
jl
fst
add
add
out
or
fdivs
andl
dec
xor
sti
dec
xchg
inc
mov
pop
mov
sub
or
pop
mull
icebp
push
dec
xlat
xchg
call
jg
xor
mov
xor
shr
fildll
jo
mov
mov
dec
or
mov
xchg
or
mov
dec
rorl
icebp
xchg
mov
push
imul
fdivrp
adc
xor
push
adc
std
or
fadd
mov
lods
push
pop
or
inc
loope
add
pop
mov
loope
inc
stos
mov
sahf
inc
sub
push
push
das
bound
jmp
jo
pop
push
aad
jb
mov
pop
or
insl
and
mov
pushf
outsb
add
je
arpl
aam
lds
adc
cmp
pop
pop
shl
fwait
sbbl
push
loop
test
push
xor
xchg
in
bnd
jb
cld
sti
aas
test
xchg
pop
xor
push
inc
icebp
and
dec
xor
dec
dec
jno
or
push
sbb
ficomps
cmp
stos
enter
js
adc
xor
imul
and
dec
pop
sub
test
lods
adc
adc
stos
insl
jno
shll
mov
outsl
mov
cmp
stos
in
aaa
movl
mov
stos
fdivl
adc
xlat
inc
pop
add
adc
je
xor
stos
inc
ffreep
stos
sbb
cmp
inc
jp
outsb
dec
jmp
insb
and
icebp
fwait
in
cwtl
movsl
xor
xor
dec
xchg
lds
push
jno
cs
fcomps
push
sub
nop
fldl
movsb
cmp
or
aas
neg
aaa
negb
dec
mov
jo
pop
push
ljmp
cmc
imulb
inc
push
and
push
inc
jmp
sbb
add
adc
dec
xorb
pop
jb
fdivr
stos
cs
aad
sub
and
adc
lock
stos
mov
xor
sbb
sbb
mov
jge
in
cmpsb
cmpl
add
jo
lahf
sahf
dec
jl
push
lea
mov
iret
sbb
lea
fstps
iret
shrl
aas
and
bound
aad
cmp
xchg
or
dec
les
cmp
pop
clc
icebp
ficoml
mov
mov
xor
dec
sbb
sbb
lods
sub
xchg
daa
dec
xchg
fistl
hlt
cmp
dec
cltd
sbb
add
cmpsl
jo
push
popa
mov
fdivrl
lock
enter
call
adc
cmpsl
add
mov
xchg
data16
push
scas
lret
mov
lods
ds
or
adc
add
mov
sub
sub
fcmovnb
cltd
ds
cmp
lcall
dec
and
mov
js
jnp
pop
pop
mov
mov
movsl
jae
jge
inc
push
jle
popa
popf
stc
mov
pop
lds
andl
in
xchg
repnz
push
leave
mov
and
mov
jb
push
adc
pop
pop
enter
imul
and
push
mov
out
inc
xor
mov
pop
push
rorb
inc
jo
cmp
add
rcrl
inc
or
mov
push
mov
sbb
sbb
sub
push
sarl
xchg
and
test
xchg
rcrl
add
int
fsubl
cmp
and
je
add
add
xchg
shlb
pushf
and
mov
ret
dec
mov
lcall
sahf
stos
push
sbb
scas
fisttpll
sbb
cmc
inc
mov
mov
movsl
addr16
push
and
add
into
jmp
inc
and
add
cmc
movsl
out
int3
pop
cld
add
xlat
mov
adc
pop
imul
rolb
hlt
mov
cmpsl
std
cmpsb
hlt
scas
shrb
mov
inc
add
or
pop
pop
int
daa
inc
xchg
jae
pop
pop
test
adc
or
xor
or
xor
adc
jp
dec
repz
popa
sub
loope
jl
cmp
and
ss
mov
lret
and
adc
nop
fsts
cltd
fsts
cmp
jno
repz
mov
push
mov
adc
outsb
jnp
arpl
xchg
scas
and
and
mov
xor
into
push
and
push
inc
push
popf
out
testl
inc
hlt
or
sarl
iret
loop
shll
and
xchg
xchg
out
repnz
andl
mov
icebp
jg,pn
cwtl
pop
in
pusha
push
inc
ret
enter
or
scas
pop
or
repnz
jo
mov
in
sbb
scas
leave
stos
ss
push
daa
and
fidivl
in
jnp
jl
aaa
inc
sbb
push
push
rcll
push
sahf
movsl
pop
mov
inc
fdivr
lcall
addr16
xchg
push
sahf
or
push
mov
or
out
xchg
mov
call
or
fadd
jp
shl
loop
lea
lock
in
mov
rcr
icebp
xchg
or
push
test
test
divb
test
xchg
jge
fidivrl
movsb
xchg
jp
push
dec
xchg
pop
dec
jp
push
js
add
aam
push
or
and
fidivl
ret
fsubrs
test
mov
add
rcrl
jb
out
loopne
cwtl
jb
push
xchg
sarb
scas
xor
out
mov
xlat
imul
pop
stc
jne
push
xchg
test
je
fistl
mov
sub
jmp
test
and
fs
and
lods
sti
ret
aaa
dec
adc
loop
inc
test
popf
adc
loope
pop
in
lods
xchg
and
adc
nop
push
faddp
daa
push
push
outsl
pop
mov
fwait
repz
cmpsl
lea
in
enter
mov
xlat
inc
cmpsl
mov
jae
loopne
jne
mov
dec
xchg
mov
in
or
adc
lcall
clc
pop
test
orl
cmp
mov
loope
lcall
sbb
mull
push
mov
gs
push
sbb
dec
outsb
push
rolb
insl
xchg
push
mov
lret
mov
ds
mov
clc
or
inc
jp
push
cmp
and
jge
fnsave
adc
push
jmp
xchg
xchg
mov
jns,pt
mov
in
ret
jl
cmp
mov
cmp
cli
dec
aas
add
loope
dec
je
outsl
imul
loop
fidivrs
xor
and
out
push
nop
xchg
call
loope
pushf
popl
push
das
call
test
lds
push
fninit
aaa
xchg
push
dec
mov
gs
test
cmpsb
xchg
or
xchg
jae
in
mov
and
lods
xchg
xchg
lret
lds
dec
xor
fnstsw
mov
mov
les
imul
jb
xchg
mov
cmpsb
or
in
dec
sbbb
mov
mov
lods
mov
fucom
adc
and
aad
inc
lahf
sar
clc
testb
mov
mov
push
out
movsb
and
xor
mov
jo
loope
xor
push
mov
out
dec
pop
xchg
xor
icebp
jb
dec
repnz
cmp
pop
sub
sbb
or
push
lods
jbe
inc
ret
adc
mov
xor
jg
and
pop
repnz
dec
mov
add
out
ljmp
clc
mov
adc
mov
ljmp
enter
int3
mov
shlb
mov
repnz
aaa
push
shll
gs
stos
pop
cmp
push
es
and
mov
adc
aaa
test
and
out
jge
push
xor
inc
adc
and
pminsw
inc
jo
pop
or
dec
cmpsb
mov
and
jae
dec
cld
adc
mov
inc
mov
ds
scas
pop
mov
pop
dec
jbe
and
lock
adc
imul
cwtl
inc
iret
cmp
push
pusha
add
jl
dec
and
jb
loope
xor
incl
xchg
mov
mov
outsb
pop
sub
jbe
std
jecxz
jmp
mov
stos
mov
jne
mov
xchg
mov
mov
in
addr16
sbb
cmpsl
js
xor
pop
push
out
ds
cmpsl
idivb
sahf
stos
dec
adc
or
push
orl
loop
or
dec
lahf
push
ljmp
leave
and
fcomps
mov
out
outsl
add
cmc
or
push
or
ljmp
jns
or
cmc
cmp
add
arpl
pop
jle
std
add
addb
loopne
shrl
popf
in
repz
insb
in
xchg
mov
xchg
jne
cmc
inc
and
xchg
lret
loop
and
sbb
test
in
sbb
test
dec
bound
push
popa
push
gs
jecxz
cmpsb
aam
add
mov
inc
repz
add
xor
lds
cmp
fcoml
mov
data16
add
jge
or
popa
add
adc
sub
aam
inc
in
mov
out
mov
push
jg
add
jle
and
push
add
jbe
sub
cwtl
pop
push
dec
into
or
das
mov
or
or
repz
fcoms
cmp
int3
mov
scas
pop
es
test
data16
mov
and
pop
pop
cmc
fmull
in
and
inc
and
dec
or
xchg
xchg
cs
mov
cmpsl
push
in
or
repnz
inc
aas
adc
push
outsb
and
aaa
imul
dec
and
cmpsl
sbb
mov
add
lods
sarb
addr16
or
and
adc
cmp
add
push
mov
mov
outsb
leave
int
in
mov
xor
jg
sbb
lret
std
dec
xorl
cli
lds
jo
scas
adc
sar
jmp
es
cwtl
mov
jae
add
icebp
shlb
outsl
jb
cmc
push
cs
movsl
rorb
lods
sahf
inc
sbb
xchg
int3
sub
push
lock
pop
mov
testb
scas
cltd
sub
push
imul
push
call
or
mov
or
lcall
xchg
pop
lret
sbb
jl
ret
test
mov
in
mov
je
cwtl
lods
sbb
cltd
stos
sbb
dec
out
inc
sbb
ret
cmc
push
movb
enter
dec
jp
sbb
data16
add
xchg
in
dec
or
mov
test
lods
mov
lock
in
ds
int3
add
or
xor
js
decl
icebp
rorl
pop
in
fs
xchg
ret
jno
jmpw
sub
inc
xchg
ljmp
jno
shrb
pop
add
push
cmp
xchg
adc
jnp
mov
fidivl
scas
fcoms
jne
scas
lods
scas
mov
cmp
xor
pop
inc
mov
inc
int
jns
sbb
lret
icebp
test
push
ficomps
in
push
daa
imul
and
mov
mov
fmuls
pop
sahf
imul
ds
popa
mov
cmp
loopne
mov
das
inc
xchg
mov
mov
test
mov
adc
pop
scas
movsl
push
popf
pop
adc
loope
in
pop
cs
pop
fiadds
add
inc
fisubrs
cmp
testb
dec
leave
xor
repnz
data16
cli
cwtl
mov
mov
in
push
add
add
adc
popl
movsb
inc
jo
mov
std
repnz
adc
mov
ljmp
jl
sbb
fcmovnbe
adc
ds
jb
aas
out
scas
lds
and
and
lcall
pusha
or
hlt
jb
in
pop
repz
loope
and
inc
lds
aaa
out
or
gs
mov
gs
push
aad
gs
dec
and
mov
das
lds
aam
lods
daa
xacquire
repz
stos
ret
push
test
dec
inc
jne
outsb
xchg
mov
insb
mov
push
aad
sti
into
dec
xlat
mov
loope
add
inc
jae
mov
ljmp
push
ret
loopne
mov
aas
sti
push
stos
sub
mov
sbb
lret
cmp
movsb
mov
call
mov
lods
push
cld
pop
hlt
int3
insl
fxam
xlat
and
pop
xchg
ds
scas
xor
lock
add
and
mov
in
hlt
cmpsb
incb
mov
lret
fwait
and
xor
stos
nop
inc
mov
out
jge
jge
jnp
out
and
jnp
adc
fdivrs
nop
sbb
mov
sbb
fst
andb
mov
or
ja
repz
sbb
xchg
sbb
je
mov
out
cwtl
mov
push
sub
in
cmp
xchg
mov
or
sbb
jge
jle
dec
bound
adc
cmpsb
dec
enter
es
pop
mov
and
shl
imul
push
dec
popa
loopne
outsl
fst
frstor
and
fstps
imul
xchg
daa
xchg
jo
or
cmp
das
mov
das
xlat
dec
sub
fadds
sub
mov
xor
inc
adc
add
mov
loop
jmp
dec
mov
xor
add
xchg
fistpl
lea
cli
stos
cs
je
mov
push
pop
jo
mov
lahf
xchg
decb
outsl
pop
inc
pop
xchg
xchg
scas
pop
pop
std
or
vphaddsw
lret
xchg
into
xchg
jp
jp
and
stos
dec
pop
jmp
push
adc
sbb
test
addr16
sub
adc
sahf
shlb
push
fmull
adc
and
cmc
and
in
inc
mov
out
aam
into
or
dec
fstpt
imul
dec
jl
mov
cmpsl
cmpsl
dec
adc
mov
lods
sbb
or
mov
inc
lcall
dec
lahf
std
test
mov
mov
into
scas
mov
mov
pop
test
out
cmp
sbb
push
jne
scas
and
scas
fcmovnu
call
stos
out
mov
sbb
add
cmc
jb
adc
out
push
mov
sub
dec
js
mov
xchg
and
sbb
fisubrl
mov
inc
ja
movl
data16
daa
sbb
sbb
imul
imul
cmc
sbbl
pop
hlt
mov
push
les
daa
cmp
and
jnp
and
xlat
or
sahf
xchg
pop
inc
jae
out
fimull
add
js
jb
clc
div
std
jns
add
data16
lret
test
mov
mov
rcll
out
jmp
jb
xchg
hlt
insl
movsb
fisubl
dec
data16
xor
and
mov
pop
mov
je
add
sub
gs
call
lret
and
inc
jo
dec
jp
sbb
popa
les
fs
in
push
xlat
rcrb
pop
sub
movsl
sti
mov
imul
push
push
and
push
push
xchg
jp
aam
inc
jbe
pop
ja
and
mov
fninit
push
add
popf
sub
sbb
js
mov
lret
stos
xchg
addr16
stos
sbb
mov
ret
data16
out
lahf
and
aaa
cmp
inc
ret
sbb
imul
andl
in
or
pop
xlat
icebp
push
xchg
rol
push
insb
fwait
mov
outsl
into
mov
push
pop
cmpl
xorb
roll
popf
jle
int3
lods
mov
sbb
leave
addb
mov
lods
xchg
lods
jb
mov
push
mov
mov
xchg
ss
jo
andb
scas
lret
dec
movsb
and
insl
mov
ret
nop
js
push
mov
mov
and
add
lods
jge
in
or
dec
push
jle
pop
cmc
lock
lock
mov
movl
cli
sub
xchg
jae
gs
inc
out
pop
xchg
push
mov
sti
cmp
pop
xchg
adc
cmc
call
fwait
lock
enter
sahf
in
add
push
push
fwait
cmp
mov
cmpsb
mov
pop
sub
stos
mov
push
add
sahf
fidivrl
cmpsb
sbb
test
xchg
int3
mov
cli
sub
out
stc
inc
or
dec
xlat
cmp
into
mov
dec
sub
jo
es
addr16
out
push
push
insb
pushl
scas
test
pop
imul
fnsave
xchg
scas
and
mov
outsl
stos
pop
shll
loopne
fnstenv
faddl
add
je
or
inc
rorl
adc
pop
hlt
mov
sub
and
mov
sbb
test
cltd
jl
icebp
push
mov
cmp
sti
pminub
mov
shl
xor
xor
rorb
shrl
jo
pop
jmp
dec
cmp
aas
ss
pop
xchg
push
or
lods
pop
aad
popa
sub
incb
out
mov
mov
or
sub
pop
cli
orb
imul
or
jmp
mov
shr
fldt
add
sti
and
ret
mov
lahf
mov
mov
jecxz
and
dec
mov
ret
test
sbbb
popa
and
ror
loope
mov
dec
adc
inc
call
push
mov
xor
scas
es
xchg
test
and
mov
out
jbe
aas
sub
jmp
test
mov
sub
inc
cld
imul
push
dec
adc
pop
testl
mov
cmp
jo
lods
xor
or
pop
cmp
xor
add
push
mov
and
das
inc
and
arpl
mov
pop
pop
setnp
jecxz
sbb
sti
and
add
data16
cli
dec
int
data16
cmpsb
jmp
mov
ds
or
and
movsb
and
dec
mov
test
xor
push
dec
hlt
lea
lods
pop
mov
push
dec
sub
loop
lods
in
jnp
xor
arpl
xor
outsl
lock
dec
cmp
scas
flds
loope
pop
les
dec
repz
sti
inc
pop
pop
fs
cmc
roll
mov
push
xchg
push
sub
mov
iret
mov
pop
or
xor
out
inc
mov
mov
daa
mov
pushf
sbb
fisubl
mov
or
adc
insb
insl
icebp
mov
in
lds
xor
cmpsl
add
sub
out
ret
cmp
stc
mov
or
xor
in
xor
jmp
fisttpl
or
xor
dec
dec
cmp
xchg
sbb
cmp
inc
pop
ficoml
movsl
shrb
push
xor
out
xor
push
int3
divl
nop
movsb
iret
movsl
lods
fnstcw
xlat
test
push
mov
or
leave
pop
jp
jns
int3
icebp
pop
xchg
jbe
jbe
in
mov
insl
dec
sbb
cmp
dec
enter
inc
jns
lcall
pop
mov
aas
sub
mov
pop
fsubrl
or
fidivrs
enter
lcall
cmpb
das
jbe
add
mov
mov
in
loop
jne
sti
mov
pop
mov
mov
xchg
or
cmp
push
and
sub
mov
enter
or
jb
pop
ss
push
mov
mov
ret
mov
fwait
pop
iret
sbb
dec
imul
sub
pop
push
fs
mov
mov
test
aad
mov
sub
dec
push
test
int
int
xor
or
dec
ds
std
dec
pop
or
mov
cld
push
pop
sub
dec
cmp
test
sbb
jo
xchg
cmpsb
jle
in
and
dec
jno
imul
and
test
push
jb
jle
mov
sbb
les
out
fwait
aam
cmp
mov
in
test
cmp
int3
pop
popa
push
inc
jns
or
pop
jnp
test
cmpsb
pop
cmp
push
enter
loope
xchg
jnp
sbb
adc
fildl
mov
mov
sbb
add
mov
pop
out
je
adc
push
and
bound
pop
push
push
jae
inc
xchg
push
jmp
xchg
cmp
mov
inc
xor
sahf
inc
pushf
cld
sahf
lods
push
stos
addr16
stos
dec
int
cwtl
out
cmp
dec
and
cli
jmp
mull
pop
ret
inc
cwtl
lock
and
xor
or
sbb
fadds
jg
or
loopne
fsubr
andb
leave
push
push
sbb
js
lea
mov
push
cmp
test
or
call
imul
adc
adc
loop
mov
daa
loope
push
push
mov
clc
jo
sahf
push
or
and
mov
in
ficomps
out
mov
out
xor
and
pop
pop
aam
sbb
repz
lret
iret
adc
mov
sub
not
outsl
mov
pop
and
cli
jp
xchg
je
jo
je
dec
fcomps
fsubrs
aaa
cs
arpl
enter
jae
xlat
or
sbb
movaps
xor
shll
adc
inc
clc
cmc
mov
std
int3
pop
xchg
inc
jb
fidivrs
mov
cmp
jb
mov
outsb
and
add
adc
or
bound
fcompl
adc
mov
push
sbb
daa
into
cltd
xchg
imul
addr16
gs
lock
cmp
inc
pushf
fcompl
dec
adc
cmp
cmp
or
pop
adc
lea
pop
pop
push
sti
sahf
fmull
icebp
ljmp
inc
xchg
mov
pop
lahf
enter
sbb
test
pop
sbb
loop
iret
mov
imul
dec
jae
add
cli
cli
add
test
push
aas
test
xor
pop
inc
out
add
xlat
jne
and
out
addl
jle
push
lods
mov
dec
outsb
andl
cmp
push
mov
stc
addr16
push
add
push
dec
push
dec
mov
int
popf
mov
jmp
lods
hlt
push
push
loopne
jle
push
sbbb
xchg
jle
adc
cmpsl
clc
xor
cli
repnz
hlt
and
cmpsb
lcall
ss
popf
push
jl
fcmovbe
cmp
pop
jno
ljmp
jne
lock
add
jle,pn
push
and
repnz
jbe
add
enter
ret
cli
dec
add
aas
pop
pop
cmpsb
cs
jo
dec
aaa
xor
sub
loopne
scas
fists
push
cmp
mov
cmpsl
xor
clc
push
xorl
aaa
jbe
insl
push
sub
ret
fisttps
dec
lds
sbb
fldt
fcmove
daa
fstps
or
jo
adc
fs
add
jp
movsb
out
pop
pop
test
insl
incb
addr16
sub
mov
add
xor
cmc
fs
fildll
cwtl
pop
aad
arpl
xchg
cmp
xlat
push
stos
call
cmp
jae
dec
sbb
jns
mov
sti
gs
push
test
pop
loope
aad
adc
mov
pmaxsw
incl
cmp
cmp
mov
and
push
repnz
clc
mov
mov
jb
jne
stc
fnstenv
or
ja
pop
push
mov
jno
mov
inc
jl
sub
pop
lods
adc
into
inc
mov
pop
pop
dec
loopne
mov
sbb
xor
adc
outsl
decl
or
sarl
mov
rcrl
aad
mov
mov
fisubs
mov
sahf
mov
ja
in
add
popa
sti
xor
inc
arpl
lret
outsl
jl
add
fst
push
mov
les
call
rorl
and
loope
fcoms
js
dec
jnp
sub
jmp
sbb
jg
outsb
and
popa
or
cmp
sbb
into
jnp
iret
test
loopne
lret
aaa
jg
test
or
lods
pop
fwait
inc
pop
aad
xorl
or
data16
call
nop
inc
hlt
mov
insb
cmp
pop
inc
out
adc
pop
ror
or
push
sti
mov
addr16
or
jb
jp
inc
movsb
mov
inc
mov
ss
cmp
mov
jne
ljmp
ss
jnp
hlt
pop
sub
dec
adc
stc
std
cmp
xchg
cmpsl
pop
cmpsb
push
movsb
pop
testb
cmp
push
mov
outsb
stos
sub
imul
hlt
test
mov
pop
dec
sahf
mov
adc
outsl
jns
mov
leave
xchg
inc
pop
cmpb
mov
dec
add
cltd
fwait
sub
add
call
adc
scas
inc
insb
jmp
aaa
xchg
sub
inc
mov
mov
std
add
data16
mov
out
in
jns
rorb
sub
leave
data16
repz
and
rorl
in
js
rcr
or
adc
xchg
inc
mov
add
jb
and
sbb
sbb
ds
jns
xor
cmp
mov
inc
mov
mov
dec
and
arpl
adc
inc
repnz
mov
lret
imul
or
xchg
out
test
xor
mov
mov
sahf
or
lock
mov
xchg
es
sbb
mov
xchg
push
cmp
ret
ret
jo
or
xchg
sbbb
pop
jge
inc
sbb
jo
int3
dec
cltd
lods
jb
xor
int3
sub
push
jg
shll
out
dec
test
test
sub
push
mov
cmp
cmp
fcomps
sbb
fisubl
push
ret
push
mov
mov
sbbl
lret
loopne
jg
into
fsubl
and
test
sbb
mov
cmp
sbb
ret
bound
test
out
cmp
insl
shlb
jmp
pop
xchg
clc
pop
insl
mov
cmp
jb
mov
sub
jnp
lods
jno
outsb
add
sbb
lods
out
mov
and
dec
imul
add
out
push
jg
jp
push
add
jae
call
daa
add
mov
lock
xchg
fnstsw
daa
mov
nop
arpl
inc
add
jg
dec
lret
push
stos
es
push
iret
mov
shlb
sub
mov
clc
mov
rclb
popa
pusha
adc
jbe
push
data16
push
stos
movsb
mov
mov
sub
push
aas
adc
lds
test
stos
sbb
sub
ds
inc
insl
adc
pop
lret
cmc
sbb
and
clc
jbe
arpl
lods
loope
or
jl
hlt
mov
mov
mov
and
lock
mov
push
in
aas
xchg
mov
test
mov
lock
inc
mov
mov
sub
xchg
cmp
add
inc
ret
fwait
or
xchg
enter
out
dec
and
aaa
push
sti
faddp
sub
mov
adc
xor
xchg
cmpsl
and
xor
lods
sbb
es
sub
repz
mov
pop
pop
xor
add
mov
dec
dec
mov
dec
mov
mov
fistps
jmp
insb
dec
ss
inc
lcall
sbb
push
popa
out
shlb
dec
sbb
jns
rorl
mov
and
ds
inc
scas
icebp
ret
or
loope
mov
jp
xor
pop
push
je
idivb
jl
pop
xchg
push
sbb
inc
je
xor
aaa
dec
imul
cmp
or
mov
push
and
add
xchg
xchg
mov
out
mov
push
js
lods
mov
lock
xor
or
sti
ret
fisubrl
out
pushf
mov
dec
loopne
xorl
shlb
add
mov
adc
lods
mov
and
mov
das
xchg
hlt
leave
test
xlat
xchg
mov
push
clc
add
je
jecxz
jg
in
int
push
push
fimull
mov
pop
int3
sbb
add
ror
mov
imull
ja
xor
push
bound
dec
addb
daa
popa
inc
dec
cli
sbb
shll
and
sub
int
shlb
in
push
mov
sbb
adc
outsl
adc
jbe
ja
cmp
test
imul
mov
in
pop
mul
outsb
inc
push
mov
sub
arpl
ret
mov
inc
adc
sub
std
dec
mov
mov
outsl
aaa
aaa
mov
insb
rcrb
mov
std
pop
jp
stc
repz
lods
cmp
mov
and
xchg
andb
pop
call
lds
test
or
sbb
mull
data16
mov
push
mov
or
lahf
mov
adc
mov
pop
sub
stos
ljmp
sarb
bound
cli
pop
pop
imul
ja
in
hlt
repz
hlt
imul
enter
cmovl
jno
sbb
cmpsl
pop
pusha
xchg
mov
data16
cmpsl
jge
lods
das
stos
mov
fisubs
rcr
in
pop
lds
sbb
push
mov
xor
sbb
rclb
add
loopne
les
scas
adc
dec
popf
les
and
movsl
fstpt
fstpl
pop
mull
cld
scas
pop
mov
and
mov
dec
xchg
jno
js
xor
test
das
mov
loop
movsl
loop
jb
int
mov
lahf
stc
mov
std
fs
inc
mov
cmpsb
mov
mov
popa
sarl
lahf
sub
addr16
mov
push
sub
or
mov
insb
jns
sbb
icebp
mov
push
cmpsb
push
iret
dec
pop
inc
mov
cmc
pop
cmp
lahf
dec
loope
adc
mov
js
in
shr
mov
xchg
jnp
out
int3
movsl
push
hlt
psrld
pop
stc
jle
aas
popa
aas
push
repnz
lds
cmp
push
jns
adc
lods
aam
jp
outsb
jp
or
aam
hlt
dec
ficompl
jg
dec
cmp
xor
andb
clc
adc
mov
lret
sbb
push
add
inc
nop
aam
pusha
xchg
mov
out
pop
std
sbb
xor
inc
xchg
pop
push
mov
push
xchg
pop
sbb
in
push
dec
add
subl
cs
xchg
add
inc
xchg
and
mov
sbb
bswap
xlat
cmp
lret
jl
xchg
pop
rcll
pop
inc
xchg
sub
mov
out
xor
test
jmp
inc
mov
out
xchg
push
jl
pop
xchg
daa
sbb
test
mov
test
test
in
dec
jae
and
push
sahf
cmpsb
or
out
dec
jle
jo
mov
or
and
jle
sub
sub
stos
inc
popa
pop
int3
fs
insl
sbb
xlat
pop
jp
mov
mov
mov
mov
mov
insl
lahf
xchg
pushf
in
pop
xor
push
imul
insb
adcb
fbld
outsb
int3
sbb
sub
imul
lock
scas
in
sbb
dec
je
inc
mov
xor
mov
int
enter
jbe
ret
shlb
and
xchg
adc
cmpsb
filds
fisttpll
sub
ficoml
loopne
lahf
movsl
aam
outsb
push
xchg
push
push
mov
cmpsb
mov
aas
push
sub
outsl
out
xchg
dec
out
and
sbb
mov
push
push
inc
mov
jge
xor
shll
hlt
lock
push
notl
push
sbb
jmp
shrb
loop
jl
mov
push
adc
lcall
sub
xor
mov
push
jo
int
and
shl
shrb
iret
add
jmp
inc
mov
lods
add
mov
je
addr16
fisttps
pop
leave
in
movsl
out
icebp
push
xchg
cli
pop
cmpsb
hlt
dec
in
scas
pushf
inc
xor
xor
xor
pop
or
popf
int3
sbb
jns
mov
out
dec
out
roll
pop
pop
add
pop
repz
ret
test
movsb
push
loop
xor
push
mov
mov
mov
xor
rcrb
push
loop
mov
or
pop
or
inc
repz
sti
fiadds
jns
hlt
lret
pop
mov
fiaddl
pop
mov
sub
mov
test
imul
loopne
jecxz
or
mov
or
dec
xor
outsb
lcall
pushf
fwait
jb
ss
jle
mov
push
mov
mov
dec
cmp
push
loope
sub
ret
xchg
in
jb
notl
inc
cltd
mov
xchg
mov
or
clc
mov
sub
int
mov
fwait
daa
negb
jg
sbb
pop
sbb
dec
push
xchg
push
dec
in
rolb
xchg
ret
out
sub
push
roll
loop
iret
cmpsl
js
mov
cmp
sbb
sbb
push
mov
aaa
mov
outsl
es
fstl
xchg
fstps
dec
mov
jne
jge
mov
cmp
sbb
icebp
test
icebp
test
adc
xchg
rcll
push
or
filds
pop
add
xor
mov
arpl
int
adc
push
jbe
and
adc
add
andb
cmp
dec
cmp
ffree
mov
jnp
shlb
out
fidivl
hlt
int
fdivrs
dec
lods
daa
pop
ret
loope
jnp
repnz
or
shl
aas
jnp
mov
rdtsc
mov
clc
lds
lods
fsubrp
xor
inc
pop
fcoml
outsb
mov
mov
push
in
stos
ss
add
add
push
subl
insb
int3
aaa
or
pop
int3
inc
fsubrs
out
xchg
xchg
mov
adc
arpl
insl
xchg
pop
mov
adc
mov
and
adc
icebp
or
loopne
mov
dec
xchg
inc
lea
pop
pop
in
pop
pop
jnp
sub
xor
inc
mov
xchg
xor
jbe
daa
sub
add
stos
xchg
cmp
mov
adc
mov
sbb
mov
lock
push
cmc
stc
mov
insl
mov
inc
push
mov
cmp
sub
or
std
test
jmp
xchg
out
inc
and
adc
mov
in
mov
xor
sub
push
loop
push
pop
jge
xchg
dec
cmp
test
pop
cltd
sarb
push
cmpsb
push
pop
jae
cmp
lret
xor
ret
aad
jg
out
push
or
fdivrs
jne
insl
pop
mov
xor
icebp
inc
cs
ljmp
jg
mov
xchg
js
outsl
mov
mov
cli
aaa
lods
inc
and
cld
les
jnp
and
addb
push
sbb
and
ss
jo
inc
mov
jmp
mov
fldt
mov
stos
push
mov
or
pushf
test
in
mov
inc
mov
mov
jle
jnp
ficoms
test
rcrl
in
sub
out
mov
jle
xchg
push
cmp
pop
xor
xor
sub
inc
incl
sbb
ret
xor
push
shlb
in
icebp
adc
and
mov
pusha
je
aam
out
movb
dec
xor
inc
fdivs
mov
pop
fildl
test
xchg
ljmp
cli
sahf
inc
lret
hlt
xchg
movsb
in
ret
jno
jns
movsl
daa
lods
inc
insl
cltd
xor
xchg
test
fnstsw
pop
or
add
enter
dec
sti
insl
das
test
lret
or
roll
imul
or
in
daa
adc
cmp
or
xchg
push
mov
mov
dec
pop
fimull
aam
add
bndstx
xchg
pop
xor
and
lcall
mov
imul
cmp
dec
es
stos
and
jmp
fcoms
and
cmp
faddl
mov
orb
add
or
push
sub
dec
jecxz
sbb
cmpsl
mov
sub
test
xchg
scas
push
mov
ficompl
dec
add
jo
cli
loope
test
loop
call
into
iret
lods
cmp
mov
hlt
jno
psraw
mov
ja
dec
imul
adcl
push
jns
mov
stos
sbb
sbb
cmp
in
nop
push
cld
stos
stc
mov
mov
inc
add
inc
jb
pop
inc
pop
pop
repnz
mov
mov
inc
or
xor
popf
or
pushf
ret
cmc
push
or
dec
rorb
mov
lods
mov
push
and
mov
sbb
in
mov
idiv
fdivrs
sbb
movsb
or
std
xchg
and
mov
imulb
mov
ret
ss
out
sbb
lcall
test
mov
loope
xchg
mov
push
outsl
push
lods
cld
push
dec
and
fstpt
or
sub
lds
mov
ret
sub
mov
or
cmp
mov
shr
xlat
sub
in
shrb
mov
les
in
loop
out
lock
jno
add
clc
mov
mov
dec
and
inc
cmp
cmp
dec
bound
inc
shll
inc
cmp
and
daa
out
sub
insb
subb
or
xorl
mov
repz
pop
sahf
dec
lods
jae
fucomi
jae
or
jge
test
loopne
arpl
add
or
cs
les
iret
imulb
lret
sub
mov
or
sbb
repnz
out
flds
jns
cmp
pop
xchg
lods
xchg
inc
inc
int
lods
out
dec
out
jae
push
bound
sbb
add
jl
jmp
adc
out
and
popf
in
subl
push
lretw
in
popf
rolb
scas
and
inc
arpl
mov
mov
in
dec
mov
int
push
femms
mov
insl
pop
mov
dec
daa
mov
mov
in
sbb
pop
mov
add
fidivl
fadds
aam
dec
xor
mov
adc
add
xchg
sbb
ds
in
xchg
insb
push
shrl
lock
pushf
in
mov
mov
xor
mov
nop
nop
popa
dec
dec
cwtl
movsl
or
mov
mov
push
mov
sbb
dec
pop
xchg
and
in
jmp
frstor
xchg
and
adc
jl
sbb
dec
movsl
lds
bound
fs
iret
scas
repnz
mov
movsl
ljmp
adc
pop
lock
pop
mov
pop
repnz
int
loope
divl
and
xor
out
add
xchg
cld
lahf
push
jbe
mov
pop
push
testl
loope
sbb
push
dec
dec
push
mov
enter
fnstsw
adc
mov
mov
mov
fnstenv
push
iret
shl
jmp
stos
jno
fsubrs
cmp
filds
dec
xor
pop
cs
push
es
xor
or
scas
dec
daa
cmp
xchg
xor
pop
push
jge
dec
fistpl
push
mov
cmp
sbb
out
movb
jnp
dec
xchg
push
jae
popa
mov
pop
xchg
fdivl
adc
jg
xor
mov
popa
cld
xor
mov
push
push
mov
shl
lcall
cmc
into
in
jge
fs
push
xchg
in
xchg
stos
stc
or
inc
out
push
xchg
sub
cmp
adc
jns
insb
lahf
bnd
fcmovnu
inc
add
xor
in
pop
jbe
fcomps
pop
ss
add
push
hlt
jnp
test
mov
pop
adc
orb
dec
cmpsl
or
movsl
ljmp
fs
aas
pusha
cmp
jecxz
popf
fs
int3
mov
pop
clc
jno
pop
jns
and
int3
cmp
int3
ljmp
lea
sub
in
fstp
dec
iret
mov
sti
mov
pop
int3
test
testb
iret
mov
mov
sbb
gs
enter
cs
call
jb
or
xor
mov
outsb
imul
push
icebp
out
fucom
add
sarb
push
ja
into
cmpsl
xchg
sub
xchg
loope
data16
mov
pop
movsl
push
enter
dec
insb
inc
in
jl
das
mov
sarb
sbb
cmp
stc
icebp
iret
pop
sbb
xor
int
inc
js
rcrl
and
scas
ja
sub
ficompl
push
adc
je
adc
ljmp
aam
pop
fdivl
mov
and
cmc
inc
mov
add
in
mov
stos
hlt
xor
mov
fiadds
push
sub
pop
sbb
jl
addr16
cmpsb
xchg
adc
xchg
imul
push
xor
mov
leave
shll
and
or
mov
lea
mov
xorl
loope
jge
jno
jl
or
aad
test
mov
add
push
sbb
jecxz
pop
inc
inc
mov
cmp
mov
sbb
pop
dec
movb
xor
enter
aas
leave
mov
adc
sub
fistps
pop
xchg
cmpsl
sub
mov
sub
aas
pop
sbb
inc
mov
int
lcall
insl
fs
lods
cmp
adc
aas
push
wbinvd
adc
jnp
jp
ret
arpl
lret
mov
call
push
into
push
and
psraw
sub
mov
lcall
popf
pop
test
andb
mov
loope
sbb
scas
xor
jno
xchg
dec
mov
call
mov
les
gs
ret
int
push
sub
mov
sub
xor
mov
xchg
jg
push
push
xor
pop
aaa
imul
adc
pop
pop
xlat
sub
icebp
sub
sarb
ror
jecxz
sbb
jno
adc
xchg
loope
ljmp
add
pop
jmp
movsb
int
sbb
insl
repnz
add
jmp
lea
xchg
add
jge
adc
scas
fdivr
lods
loop
loopne
dec
cmpsb
push
shll
in
int
dec
dec
ja
aam
addr16
cmpsb
adc
pop
test
int3
bnd
mov
out
add
push
lret
pop
and
mov
jns
data16
ror
mov
cmp
cld
xlat
push
dec
cmp
xlat
or
jp
jmp
cmp
les
jecxz
movsb
xor
scas
pop
add
popa
xchg
pop
arpl
stos
pop
pop
fmuls
orb
inc
repz
arpl
sub
dec
jg
pushf
xchg
xchg
sbb
and
sub
sbb
ret
and
or
push
jns
jecxz
int3
push
sbb
or
mov
jne
jnp
std
pushf
sbb
sbb
adc
out
stc
rorb
sub
xchg
dec
push
push
rclb
add
out
mov
sub
pop
add
loop
rcl
and
sbb
adc
dec
push
call
sub
orb
call
in
lret
jmp
jne
push
rcrb
jmp
mov
jno
add
pop
daa
stc
out
ljmp
das
push
popa
sub
std
movsb
push
scas
ja
fisubrs
mov
cmp
xor
sub
movsl
lea
mov
xchg
sub
sub
push
add
cmpl
andl
and
add
test
sarl
das
lret
add
lret
ret
adc
popf
cmp
les
xor
inc
outsl
dec
jne
das
iret
mov
add
inc
sub
dec
das
dec
dec
out
dec
jns
inc
cmp
loop
jo
mov
xchg
lods
repz
xchg
movsb
cmp
mov
mov
iret
xchg
je
sbb
fs
stc
ret
stos
xchg
lods
lea
xor
fistps
or
pop
imul
add
xchg
ds
imul
out
xchg
mov
bound
sbb
cmpsl
and
lret
jmp
in
popf
jmp
mov
negl
or
jmp
sub
icebp
jae
fisubs
cmp
xor
xchg
mov
dec
fdivp
pop
rol
dec
das
jecxz
add
xor
jnp
sbb
xchg
lahf
jbe
cs
adc
lods
xor
mov
fsubr
cld
cmp
test
and
add
or
mov
aam
out
es
pop
arpl
cmpsb
inc
aaa
mov
jge
pusha
in
jp
ljmp
dec
push
or
dec
xchg
sub
cwtl
in
test
mov
push
mov
addr16
inc
sbb
adc
and
in
ljmp
xor
shlb
add
mov
xchg
insb
mov
scas
cmc
cmp
jbe
push
xchg
shrl
dec
sti
inc
hlt
inc
in
dec
int3
mov
jnp
inc
fsubrs
lcall
add
pushf
repnz
sub
scas
or
imul
test
icebp
pop
adc
je
xchg
dec
rolb
rcl
into
xchg
sub
cmp
aad
test
pop
jmp
dec
and
sub
or
outsl
in
popw
mov
push
mov
mov
sub
idivl
movsl
sahf
xchg
out
pop
jecxz
jo
test
fwait
add
stos
pusha
push
push
fscale
add
cwtl
dec
xorb
xor
iret
pop
in
sub
push
inc
or
mov
loope
mov
aaa
lods
push
pop
jae
std
jne
aad
mov
repz
pop
aas
inc
and
jmp
adc
add
pop
cmpsl
enter
nop
or
jle
mov
ret
aad
mov
into
int3
or
xor
jo
lods
lahf
xchg
repz
pop
jmp
pusha
leave
ja
add
inc
shrb
cmp
hlt
cmp
mov
sbb
and
imul
and
cmpl
push
movsb
cmpl
adc
imul
xchg
mov
cmpsl
call
adc
push
shrb
int3
dec
test
mov
jb
sbb
test
sbb
push
mov
push
cmp
test
fwait
lods
sti
add
arpl
or
sub
test
lret
mov
bound
jae
pop
ss
jnp
sahf
xor
mov
or
and
mov
xchg
test
mov
test
inc
push
xor
les
int3
xchg
in
sub
test
add
dec
jns
mov
fisubl
push
test
add
loope
push
shll
es
shll
lea
ficoms
cmp
mov
push
jle
cmp
mov
push
adc
add
insb
jge
ljmp
in
xchg
pop
fdivrp
sbb
aas
mov
adc
int
lret
hlt
lea
cmpsl
mov
lcall
in
fbstp
in
xchg
movsb
fcompp
outsb
sbb
pop
push
jnp
mov
push
or
mov
add
stos
out
popf
push
lret
mov
mov
mov
fisubs
xor
sbb
arpl
test
loope
or
jne
sarl
mov
arpl
adc
lea
cmp
mov
pop
iret
ss
sub
inc
xchg
sub
jle
mov
mov
orl
or
subb
cmp
jge
or
dec
or
add
insl
dec
iret
ljmp
add
push
pop
outsb
fs
rcrb
mov
jmp
sbb
mov
and
mov
in
mov
pop
and
or
push
mov
imul
dec
mov
test
mov
lret
stos
popa
gs
xchg
test
inc
ja
add
mov
dec
cmp
jo
or
movsb
movsl
fisubs
or
sub
jnp
cmp
arpl
sti
push
sub
mov
ffree
pop
jmp
sbb
leave
mov
xchg
repz
insl
lock
inc
jae
cmp
scas
xchg
xchg
push
jmp
adcl
mov
cld
ret
inc
xchg
orb
shll
dec
inc
xor
jae
daa
adcb
cli
mov
lea
adc
in
pushf
jmp
in
pop
push
arpl
in
push
mov
aam
sbb
leave
mov
xchg
in
dec
sub
rcrb
mov
jns
inc
mov
mov
pop
mov
sub
out
int
sahf
or
sbb
sbb
sbb
inc
cmpsb
fsubl
adc
out
mov
adc
call
mov
pop
out
es
mov
test
inc
mov
xchg
rcr
out
jmp
cld
and
je
and
mov
fisttpll
fisttpll
es
push
push
pop
push
iret
call
jl
xchg
mov
fcmovb
fdivs
loope
xlat
cli
inc
sahf
add
les
add
sub
mov
jne
negl
iret
mov
xor
rcl
ret
sahf
fistpl
fidivrs
fsubrl
jmp
jp
jne
inc
jnp
pop
in
and
daa
or
pop
xchg
push
or
jg
inc
push
add
inc
dec
test
imul
push
inc
add
loope
stos
inc
sub
mov
cld
dec
mov
adc
xor
lds
scas
ja
mov
sub
xchg
bound
sub
in
lret
out
sub
push
hlt
pop
xor
and
flds
jno
push
mov
dec
aad
rcr
cltd
xchg
loopne
jnp
ficomps
ja
mov
loope
out
xchg
enter
iret
sub
scas
adc
dec
sub
lods
fistps
pop
cmp
mov
push
mov
and
mov
ucomiss
jnp
incl
dec
es
mov
imul
imul
cltd
and
fwait
bound
cmp
insb
cs
aad
pop
loop
bound
js
xor
fnstsw
add
jmp
stos
mov
in
sub
jecxz
xchg
popf
jo
or
dec
stos
je
lcall
mov
std
adc
loop
mov
shrb
pop
or
addr16
loop
ds
aas
test
subb
mov
pusha
mov
clc
cs
mov
lcall
mov
mov
imul
mov
inc
orb
aas
lods
dec
aas
cmp
lret
fcoml
insb
push
outsl
cmpsl
je
inc
mov
pop
push
adc
jecxz
or
rcll
pop
fsubrp
mov
jae
addl
sbb
push
fmulp
lret
fstps
std
or
xchg
and
out
repz
mov
push
test
xchg
ja
dec
mov
jbe
xlat
in
add
push
into
sbb
cli
xchg
in
push
cmp
fstpl
dec
in
js
enter
scas
andb
js
mov
xor
outsb
mov
push
mov
test
outsl
mov
push
cli
cmp
test
loope
ret
adc
xchg
inc
and
push
scas
sub
or
push
sub
add
pop
lret
pop
inc
out
pop
ja
adc
nop
adc
jae
push
movsl
sub
movsl
in
popf
shll
scas
sub
fwait
xchg
sub
test
lods
inc
mov
xor
addl
inc
mov
xor
jl
dec
fidivs
dec
in
sub
cwtl
xchg
mov
push
test
das
jb
xchg
xchg
adc
push
mov
adc
push
add
call
push
cltd
lcall
mov
push
cmc
outsb
xor
cmpsb
or
dec
addr16
xchg
xor
in
into
sbb
xor
out
inc
jae
add
insb
icebp
add
mov
and
inc
subl
outsb
mov
adc
jp
fildll
stos
xor
sti
rol
mov
mov
ret
fisttpll
into
enter
test
sub
xlat
ds
daa
mov
clc
sub
push
test
pop
push
test
decb
jb
iret
call
jo
lea
push
bound
dec
loope
add
dec
mov
mov
push
inc
mov
add
sbb
jno
sbb
test
cmc
dec
mov
ficomps
jno
cmp
hlt
in
jle
or
in
imul
hlt
out
mov
daa
imul
sub
mov
or
idivl
sub
clc
xchg
stos
cld
xor
dec
push
mov
jno
or
mov
and
jbe
dec
xor
ss
ss
push
stos
mov
jle
or
xor
inc
daa
cwtl
or
jae
cmp
ret
lea
aas
dec
gs
jge
inc
leave
inc
into
outsb
inc
test
dec
hlt
dec
fbstp
in
fdiv
lret
in
movsl
fists
sub
jb
pusha
mov
sbb
fiadds
mov
inc
and
xor
sbb
jbe
mov
pusha
mov
leave
push
mov
rorb
dec
sub
ja
sub
scas
leave
subb
cmpsl
dec
dec
adc
xchg
jns
iret
and
xor
cmp
inc
xchg
add
stos
or
push
adc
mov
int3
jno
sub
lret
inc
sub
aam
ret
inc
mov
adc
cld
push
mov
push
movsb
test
jecxz
push
xchg
lcall
ret
std
sbbl
sub
out
add
inc
mov
sbb
lret
fldenv
js
ljmp
push
mov
adc
popf
pop
icebp
adc
das
push
popf
sub
pusha
out
std
cltd
cs
push
xor
test
jae
ljmp
mov
sub
pop
mov
loope
roll
mov
xor
mov
ds
imul
dec
out
int3
imul
inc
jmp
sub
jbe
arpl
cld
and
push
test
in
fmul
push
bound
movsl
std
test
les
jbe
or
loope
call
mov
cmp
shlb
sbb
dec
popf
push
pop
shr
test
incl
shl
mov
loopne
xchg
les
fsubrl
test
push
cwtl
jno
flds
xor
lcall
dec
mov
dec
mov
mov
addr16
sub
pop
enter
inc
inc
push
in
push
daa
cs
mov
mov
dec
inc
jae
js
loop
cmp
cltd
gs
add
inc
and
fildl
je
dec
test
or
scas
stos
pop
jae
fwait
cmp
or
test
lea
ljmp
loop
gs
xchg
into
arpl
loopne
mov
aas
shlb
and
jecxz
fwait
sbb
popa
push
xchg
pop
pusha
insb
mov
cmp
adc
lret
adc
popa
and
sar
pop
jns
sub
dec
sub
pusha
popf
sahf
add
cmp
outsb
or
sub
fsubrs
outsl
mov
push
pop
mov
in
test
jbe
jne
loopne
cs
ret
or
adc
int3
inc
pushw
mov
mov
sarb
sti
sbb
mov
sbbl
inc
xor
or
dec
cld
lds
push
pop
dec
cmpsb
sbbb
js
xchg
mov
adc
call
jno
mov
mov
fnstcw
into
shrb
call
mov
push
inc
adc
gs
int3
stc
orb
repz
xor
jb
fidivs
out
jns
icebp
sbb
xchg
sahf
dec
xor
or
test
xchg
inc
fcmovbe
or
movsb
rcrl
cmp
fnstcw
loope
jb
rcll
mov
cmpsb
pop
pushl
pop
fcoms
mov
fbstp
call
cmp
xor
addr16
gs
cwtl
ja
mov
gs
adcb
dec
repz
dec
rolb
lods
out
stos
xor
push
cmp
push
adc
add
push
dec
ljmp
sbb
push
xchg
addr16
pop
iret
jmp
xchg
cmp
mov
lea
xlat
cmp
jecxz
jb
jb
push
or
push
cli
arpl
pop
out
lret
xor
and
roll
shrl
scas
push
fistpl
aaa
mov
adc
mov
jnp
int
popf
imul
nop
sbb
push
cwtl
in
bound
xor
ljmp
sub
sbb
nop
pusha
sarb
mov
cmp
lahf
test
pop
adc
scas
mov
fimull
ficompl
xor
cld
mov
ljmp
push
out
fcomps
jle
into
js
lea
dec
popf
jp
pop
dec
ret
jge
fs
ret
aad
sbb
insl
rcr
cmc
or
sbb
subb
shr
inc
popf
add
mov
fiadds
fbld
gs
dec
or
sets
mov
sbb
add
imul
cmp
in
xorb
mov
xlat
out
fisubrl
roll
cmpsl
in
cmp
rcr
es
lret
mov
out
lcall
sub
mov
out
lret
push
xchg
std
xor
xchg
fisttpll
mov
cmp
mov
sbbl
aad
aad
aad
xchg
repz
mov
xchg
lret
dec
xchg
pop
mov
enter
adc
mov
shl
out
cmpsb
xchg
xlat
ja
push
lahf
xor
ja
cmp
cmp
call
imul
insl
scas
cwtl
aaa
cli
sahf
xchg
into
cltd
adc
mov
aad
daa
jnp
test
out
shlb
adcb
jp
outsb
cs
lods
enter
cld
xchg
int
inc
je
sub
testb
movsl
sbb
pop
loopne
adc
cmp
in
mov
sub
xchg
jl
sub
mov
dec
or
out
cld
mov
xchg
pop
cmp
sti
stos
mov
mov
jae
mov
ljmp
negb
jmp
pop
sbb
enter
jl
ror
dec
in
scas
fisttpll
mov
lret
fcoml
jne
pop
sub
test
xlat
push
cmp
inc
mov
sub
lds
xchg
sub
jge
push
lock
pop
cmc
shrl
dec
leave
fsts
mov
or
xor
ret
cs
mov
cmp
sbb
call
lcall
in
out
mov
xchg
cwtl
in
and
ja
sbb
adc
jbe
push
xchg
pop
sbb
and
adc
fdivs
loopne
out
xor
loopne
int3
repz
pushl
jp
cmc
mov
je
lds
lret
popf
adc
cmpb
inc
mov
rclb
imul
hlt
mov
lock
cmpsl
adc
mov
ds
dec
cmp
sbb
enter
mov
sbb
fadds
mov
fbld
les
inc
fcoms
pop
jns
dec
fs
sbb
xchg
xchg
dec
adc
xor
mov
repnz
xor
mov
add
cmc
pop
fisubl
std
subl
data16
and
or
jle
in
jmp
sarb
jnp
push
mov
les
dec
loope
ret
aas
sub
fsubrs
sbb
or
jg
and
or
mov
push
pop
and
lcall
loopne
push
mov
nop
test
das
mov
push
dec
test
jle
push
pop
fcoml
aas
jo
lock
mov
repnz
stos
mov
xchg
cmp
pusha
xor
inc
repz
sbb
push
adc
aam
les
and
jmp
push
adc
xchg
out
movsl
pop
in
int
push
push
ss
cld
dec
pop
and
jl
mov
aaa
ficoml
pop
push
xchg
test
xchg
xchg
and
cld
lds
add
jnp
mov
sub
leave
mov
aad
dec
pop
int3
pop
pop
es
sbb
cld
ja
xchg
mov
nop
adc
lret
inc
xchg
test
jbe
mov
outsl
lcall
sub
push
repnz
push
xor
jmp
fs
in
pop
out
sbb
movsb
sahf
pop
dec
sub
push
or
push
or
in
scas
mov
or
in
inc
xor
ret
cltd
div
int
pop
inc
les
lods
cmp
mov
jae
outsb
add
movsl
cmp
out
jl
ficoml
lds
ss
std
lret
jne
fwait
lret
dec
push
mov
arpl
sbb
jo
cltd
dec
or
out
je
xchg
fistl
sar
xlat
fdiv
adc
xchg
ret
and
dec
cltd
xor
push
cmp
stc
out
mov
xor
mov
mov
pop
inc
jns
cs
add
stos
pop
cltd
jnp
sbb
sbb
cmc
pop
sbb
fildll
mov
jne
lcall
dec
xor
lods
ret
popf
push
addr16
test
icebp
mov
sbb
sub
add
push
fnclex
iret
sub
pop
test
fsubs
std
rorl
pop
dec
idivl
xchg
fldt
pop
lock
adcb
daa
mov
xor
mov
ret
jno
push
repz
jb
int3
dec
loope
xchg
ja
ds
jmp
daa
test
mov
movsb
movsl
mov
addb
sub
aad
jae
out
add
hlt
inc
je
add
and
repz
mov
xor
fiadds
lcall
pop
xorb
mov
dec
xchg
aaa
xchg
jnp
lret
shrb
adc
mov
xchg
ret
push
ficomps
inc
arpl
repz
loopne
jb
ror
dec
jnp
aas
or
rcrl
loop
movb
test
fimull
or
scas
jl
mov
add
addb
add
xchg
pop
xor
or
cmp
cmpsl
push
xlat
outsl
imul
aad
call
push
push
sahf
pusha
jnp
mov
into
lods
daa
test
pop
out
stos
sub
sti
sbb
ret
les
jg
add
cmp
loop
xchg
pop
cwtl
adc
test
and
fwait
rcrl
and
and
sub
jae
jo
mov
xor
shrl
adc
sbb
pop
ja
aad
shl
mov
std
or
xchg
jnp
mov
cwtl
adc
in
je
dec
shlb
or
sbb
and
adc
fistpll
add
add
ret
pushf
int3
mov
aam
mov
jns
push
test
sub
cld
fimull
sbbb
jg
pushf
adc
fmuls
pop
mov
xchg
pop
xor
fucom
fwait
in
insl
cli
sub
push
mov
xchg
fidivrl
xchg
fwait
lock
xor
xor
mov
push
sub
ficoms
mov
xor
popf
mov
lea
out
xor
popf
outsl
inc
push
stc
jae
push
push
imul
push
jns
aas
addl
enter
add
pop
cmp
jno
dec
add
add
cltd
cmc
push
call
movsl
dec
repz
sbb
testl
movsl
pop
lods
outsl
push
xor
daa
sbb
fbstp
jns,pt
lods
push
cwtl
mov
push
neg
cld
mov
shll
mov
test
jne
outsb
adc
mov
mov
xchg
fcmovnb
in
sub
loopne
and
inc
mov
jb
loope
rcrl
pop
and
xchg
inc
leave
and
addr16
sub
dec
gs
das
inc
jp
jmp
test
mov
push
inc
scas
aas
or
adc
jecxz
mov
push
roll
and
pop
rorl
fcomi
sti
stos
fistpl
popa
aas
and
dec
pop
pop
adc
push
nop
mov
insb
ret
and
lcall
xchg
lahf
dec
repnz
mov
aaa
in
mov
cs
addr16
clc
xchg
add
stc
xor
inc
bound
xor
cmpsl
push
adc
in
insb
out
cmpsb
pop
adc
enter
outsb
dec
adc
sub
outsl
mov
cmp
ret
addl
mov
and
xchg
out
ret
cmp
push
pop
icebp
and
icebp
add
adc
dec
arpl
pop
pop
scas
aas
std
imul
cmp
ret
shl
sar
ljmp
pushf
xlat
xlat
pop
add
cmp
in
movsb
xchg
or
mov
imul
lds
cmp
add
sbb
loop
mov
or
mov
or
and
loop
inc
aam
dec
in
pop
dec
xor
cmp
je
or
pop
imul
in
mov
sbb
scas
push
pushl
inc
mov
cld
push
add
das
dec
adc
call
dec
xchg
scas
add
fstps
pop
mov
mov
pop
into
flds
cmp
addl
sub
testb
pop
jns
loop
cmpsl
outsb
mov
shlb
movsl
pop
jge
mov
sbb
xchg
xchg
mov
jl
push
cmp
push
xchg
stos
cli
lods
loopne
cs
ret
dec
aas
adc
xor
mov
cmp
pop
movsb
push
mov
pop
in
jge
cmp
negb
mov
outsb
xchg
mov
cwtl
fimull
fs
or
adc
mov
add
cs
push
inc
stos
movsl
lea
push
add
dec
and
jb
loopne
cmpsb
lods
dec
and
sbb
divl
push
dec
ret
xor
in
add
sbb
movsb
fistpll
cmp
gs
add
loop
cs
push
jp
jnp
lods
cli
xchg
pop
sub
inc
dec
pop
stc
movsl
sbb
xor
lret
dec
push
add
cmp
in
fsubl
xchg
pop
mov
jne
popf
or
movsl
adc
mov
pusha
jle
xor
and
pop
mov
lret
imul
das
jae
and
sti
fdivs
arpl
out
gs
pop
pusha
xchg
or
add
or
xor
inc
imul
inc
xchg
pop
cmp
std
mov
mov
jecxz
ret
mov
mov
dec
xchg
mov
out
test
xchg
out
push
or
repz
sbb
test
inc
jmp
xchg
push
xchg
or
inc
sbb
lret
fdivrs
addb
cmp
fmull
bound
mov
aam
outsb
and
pop
or
inc
pop
pop
add
xchg
fdivrp
std
out
fiadds
aas
fcomps
lret
mov
jne,pt
ret
je
pop
fs
add
ds
cmp
push
mov
stc
scas
imulb
sub
pop
jle
arpl
jnp
cli
adc
sbb
in
xchg
or
call
test
push
pop
push
lods
jno
das
xor
shll
xor
xor
dec
push
mov
out
jo
pop
cmp
in
cltd
aam
jbe
inc
mov
mov
sahf
jecxz
out
push
push
cmp
hlt
out
into
xchg
jno
mov
cmpl
out
lock
lds
push
inc
or
sub
adc
scas
and
divl
lds
push
xorl
sub
mov
out
fistl
mov
add
ds
lock
jbe
roll
in
adc
in
repz
mov
aad
lods
js
jp
aam
mov
and
mov
adc
mov
lret
sub
xor
pop
cmpsb
inc
dec
mov
mov
sarl
xchg
insl
pop
stos
lahf
push
jle
mov
or
daa
leave
pop
daa
mov
jmp
push
pop
fwait
jb
test
daa
sbb
push
scas
andb
sbb
pop
inc
add
mov
xchg
ljmp
inc
mov
adcb
dec
pop
push
sub
xchg
xlat
cmc
outsb
xchg
lods
scas
push
pop
lret
sti
sahf
outsl
stc
or
leave
mov
sub
xorl
xchg
loop
cmp
sbb
pusha
shll
cs
adc
dec
mov
cmp
pop
cli
inc
enter
fsubl
xchg
mov
inc
bound
pop
popf
rcr
or
pop
ss
sbb
push
test
outsb
cmp
dec
out
cmp
ja
adc
in
ja
inc
ds
inc
cltd
mov
stc
sub
in
mov
and
repz
mov
mov
arpl
mov
addr16
imul
scas
xlat
mov
xor
popf
pop
int3
mov
repnz
fwait
and
xchg
loop
aas
sbb
inc
out
mov
in
lret
cmp
or
out
mov
outsb
pop
outsl
ljmp
inc
sub
push
or
push
fsubrl
out
hlt
clc
aad
jmp
lret
xchg
push
and
push
adc
jl
cwtl
ljmp
test
xor
xchg
pop
mov
in
lret
mov
stos
int3
or
xchg
sbb
shlb
mov
enter
dec
dec
dec
iret
jns
leave
pop
cs
in
add
scas
ljmp
cmpl
xorb
insl
das
out
in
mov
data16
mov
push
adc
clc
jns
aaa
xchg
lock
xor
lods
or
xor
pop
mov
cmp
js
push
cmp
xor
jnp
xor
es
push
cmpsb
sub
mov
aas
add
cmpsl
jae
mov
imul
mov
iret
arpl
sbb
jl
and
outsl
xchg
sub
mov
sub
mov
insl
ds
jg
cmp
mov
inc
sbb
and
orl
adc
pop
popf
test
fmull
loop
sahf
ds
in
dec
dec
adc
sub
xchg
mov
xchg
jl
fisubrl
in
vpmacssdd
out
xchg
aam
in
sub
mov
test
dec
test
fcmovnu
or
sbb
push
xor
xor
xchg
rcrl
aam
inc
mov
adc
push
adc
insb
addr16
xlat
adc
decl
mov
emms
out
push
ljmp
les
push
add
pop
and
fsubrs
mov
adc
mov
aaa
xor
mov
jnp
add
sub
scas
dec
shlb
mov
dec
in
adc
cmp
test
pop
pop
cs
pop
sti
or
bound
inc
cmpsb
sahf
xchg
pop
out
out
push
fwait
add
add
jl
or
xchg
fsub
ret
dec
leave
mov
jo
pop
adc
add
push
jne
cmp
or
xor
push
rol
adc
sbb
inc
inc
lea
shrl
add
stos
div
addl
jecxz
mov
mov
lret
xlat
cltd
mov
jae
push
xchg
jecxz
sub
test
push
mov
hlt
stc
aas
pop
pop
test
pop
mov
inc
cwtl
mov
jecxz
jno
test
aaa
lods
jmp
xchg
sbb
add
cmp
scas
ljmp
das
push
sbbl
aaa
push
mov
out
mov
add
test
dec
push
aas
pop
adc
das
mull
sub
add
cmpsl
and
jbe
imul
iret
aaa
mov
inc
insb
xor
mov
push
aaa
xor
sub
sahf
pop
xchg
lret
rcl
stos
mov
aaa
ficoml
or
or
cli
in
mov
dec
sub
inc
mov
rol
pop
test
jg
das
xchg
mov
fcmovbe
sub
inc
sub
jnp
sbb
push
sbb
movsb
dec
mov
sub
repnz
mov
mov
aam
lds
or
push
out
sbb
nop
jae
or
xchg
push
cld
testl
icebp
lahf
addl
mov
dec
movsl
and
jbe
mov
pop
push
jle
and
push
out
or
pop
and
xor
push
hlt
xchg
cld
mov
and
clc
aad
inc
clc
xchg
aas
pushf
push
pushf
stos
test
lods
imul
imul
pop
cmp
aaa
mov
push
out
stc
push
leave
insl
pop
fdivp
adc
add
add
cmp
pop
insb
xchg
jmp
pusha
test
xor
push
mov
push
sarl
fists
fnstenv
xchg
and
hlt
in
popf
cmpsb
outsl
cwtl
ret
fs
inc
jmp
cmc
mov
mov
popf
xchg
pop
into
dec
loop
aas
dec
or
cmp
xor
lret
std
jno
xor
popf
mov
mov
das
andl
clc
mov
xor
adc
sub
xor
mov
lret
sbb
inc
int
add
push
jp
jnp
loopne
xor
mov
cmp
aaa
push
ret
mov
add
adcb
pop
fs
pop
jo
js
and
xchg
outsl
push
lods
xchg
mov
sarb
jmp
mov
add
and
rcrl
mov
popa
test
pop
dec
pop
faddp
dec
mov
dec
jl
pop
cmp
jb
sar
loopne
add
ffreep
stos
in
pop
jp
sbb
push
rol
int
adc
add
in
pop
dec
cmp
stc
call
dec
fs
fstps
mov
sub
mov
xor
or
or
lret
xor
xchg
adc
ret
mov
sub
xchg
xor
jmp
test
faddp
xchg
xlat
enter
and
ret
arpl
add
xchg
repnz
cmp
aas
sbb
sub
or
sahf
sbb
popa
push
sti
popf
sbb
movsl
dec
mov
data16
dec
dec
pushf
and
repnz
fwait
inc
jmp
dec
add
nop
fisubrl
inc
shrb
orl
mov
mov
out
push
pop
outsb
or
push
popa
jecxz
andl
mov
outsl
and
lret
sbb
pushf
mov
or
gs
adc
pop
jnp
out
lahf
adc
imulb
pop
push
aad
push
mov
jmp
mov
pop
test
inc
xor
popf
xor
jbe
sub
mov
subl
cmp
popf
mov
stc
fildl
out
mov
add
cmpsb
or
adc
mov
lods
pushf
push
rorb
inc
mov
out
pop
add
testl
cmp
cltd
jb
cmp
jp
sbb
scas
popf
iret
insb
push
es
scas
pop
mov
mov
rcrl
and
fsubrs
pop
mov
iret
dec
jo
shlb
fmul
pmaddwd
push
mov
push
dec
fs
dec
outsl
stos
std
sbb
imul
lcall
inc
adc
xchg
cmp
pop
mov
fwait
scas
fiadds
mov
aaa
mov
jmp
cltd
call
in
js
jbe
daa
jmp
mov
cmp
push
daa
mov
xor
adc
out
mov
int3
div
js
and
adc
mov
inc
repnz
testb
add
pop
jl
jge
stos
push
sub
fiadds
mov
and
xor
pop
dec
fisubrl
cmpsl
enter
cmp
or
iret
xor
inc
push
pusha
cmpsl
mov
pop
shrl
mov
adc
pop
mov
or
mov
or
push
aas
pop
fbld
int3
aad
jnp
mov
xorb
and
xor
mov
ss
xor
jge
xor
mov
jl
add
sarb
jl
mov
pop
inc
enter
popa
xor
sub
xchg
lahf
shll
adc
aam
push
shlb
hlt
daa
popf
xchg
or
popa
loop
jmp
icebp
xor
bound
stos
jne
filds
adc
dec
daa
dec
aad
js
mov
pop
adc
inc
call
arpl
fsubrp
xor
mov
and
push
andl
push
dec
sub
dec
roll
loopne
lret
lret
notl
xchg
mov
cmc
repz
fbstp
push
pushl
ljmp
mov
sbb
int3
push
xor
out
in
scas
lret
es
xchg
add
sahf
cmp
cmpsl
pushf
push
test
jp
movsl
addr16
pop
sbb
hlt
jp
pop
jmp
or
dec
jmp
lods
mov
push
adc
outsb
jmp
ja
fs
inc
push
adc
arpl
or
test
cmc
leave
dec
mov
mov
push
movsl
xor
pop
cmp
or
addl
daa
int
pop
aad
xor
adc
adc
mov
and
movsb
cmc
inc
cmp
dec
in
in
adc
ss
nop
maskmovq
testl
popl
cmp
cld
push
out
out
jae
add
cli
pop
nop
loopne
mov
sbb
jbe
cmc
test
pop
cmpsb
or
mov
pop
cli
pusha
into
je
js
dec
notl
mov
cmp
lret
mov
dec
jnp
pop
or
pop
fwait
push
jecxz
jb
mov
cmp
fdivrs
cmp
push
pop
cmp
push
mov
insb
xor
or
or
push
je
pusha
sahf
into
ss
lret
movsb
jbe
je
inc
jne
sahf
cli
fucom
add
dec
jbe
lock
cwtl
sub
push
mov
repnz
cmp
pop
ret
inc
clc
lods
mov
xor
push
out
xor
mov
add
mov
dec
stos
xchg
rolb
mov
pop
loopne
aad
call
popa
sbb
pop
lock
je
mov
mov
iret
ret
test
and
push
dec
dec
push
jb
data16
push
pusha
cmp
jmp
rorl
imul
mov
and
cmpsb
lret
test
data16
addr16
adc
push
into
out
idivl
test
push
sti
nop
mov
push
sbb
xor
pop
ffreep
inc
dec
in
cmp
and
hlt
push
sbb
xlat
lods
cmpsb
dec
mov
sub
push
test
add
stos
xchg
push
in
or
adc
or
ret
sbbl
pop
push
dec
pop
xchg
dec
lea
pusha
or
hlt
std
mov
out
jp
scas
xor
pop
pushf
je
outsb
outsb
xchg
arpl
imul
cmp
loopne
cmc
sbb
dec
push
subb
adc
aaa
stos
cmpsb
xchg
ret
xchg
cmpsb
orb
ljmp
mov
push
cltd
test
xchg
adc
dec
sub
push
inc
pop
inc
in
test
xchg
cmp
sub
sbb
jmp
add
mov
shlb
add
mov
mov
or
xchg
inc
cmp
mov
in
or
cmp
lcall
cmpsb
xor
jne
into
lret
test
mov
daa
xor
notl
lret
xor
inc
outsl
push
xor
add
jne
flds
mov
aas
inc
xchg
pop
xchg
add
subl
imul
sahf
lahf
push
mov
imul
pop
fnsave
pop
push
cs
jecxz
cmp
dec
mov
loop
add
adc
cmc
cmp
jnp
arpl
shrl
add
cwtl
inc
lcall
adc
in
pop
add
cltd
iret
sbb
mov
mov
push
xlat
jbe
and
mov
push
call
mov
enter
in
fwait
xchg
xor
stc
sub
cmp
outsl
jnp
in
dec
push
xchg
mull
jbe
sbb
xchg
lcall
test
mov
cld
mov
xchg
adc
cmp
je
jmp
ss
out
stos
mov
dec
loopne
jp
out
xchg
iret
xchg
xchg
outsb
inc
mov
test
repnz
lcall
jp
ret
sahf
cmc
pop
xor
mov
shll
ret
je
dec
pop
pusha
int3
inc
cmp
jno
add
push
fcmovnbe
adc
loop
cmp
mov
sub
data16
mov
push
outsl
mov
push
mov
sub
mov
cmp
ds
rcrb
adcb
stos
shll
push
jl,pt
xchg
pop
test
cmp
test
aam
mov
cmpsb
stos
push
jb
in
es
test
cwtl
or
in
and
lret
xchg
sub
mov
jmp
mov
mov
aam
xchg
das
call
xor
sub
xchg
orl
out
sbbl
and
lods
out
ljmp
movsl
xor
imul
adc
int
xchg
mov
mov
mov
lcall
lds
mov
sarl
fimull
inc
inc
push
lods
out
and
sbb
pop
inc
mov
lods
ss
push
icebp
stc
lahf
mov
dec
inc
call
or
or
cs
inc
or
frstor
outsb
adc
fnsave
cmp
aaa
lds
iret
gs
lea
fcmovnu
jnp
movl
mov
push
fidivs
pop
les
or
jae
out
inc
xchg
fwait
or
daa
pop
stos
mov
xchg
xor
outsb
movsl
mov
xchg
mov
push
pop
rcrl
dec
jb
inc
fdivrs
cmc
sbb
xchg
outsl
sub
ficomps
and
test
mov
cwtl
mov
dec
dec
push
icebp
outsl
push
inc
int
or
daa
idivl
xor
ret
enter
push
jnp
leave
movsl
and
fs
insb
mov
jne
pop
mov
int3
mov
lods
push
pop
lock
bound
in
daa
push
add
lock
push
cld
std
push
cmp
fdivr
int
enter
dec
das
mov
icebp
sbb
fdivrs
jmp
inc
paddusw
fistpl
nop
stos
out
gs
int3
and
daa
adc
andb
sbb
addb
shlb
pushf
mov
jg
or
pop
push
sub
pop
sub
sub
jne
adc
inc
cmp
rol
std
push
push
arpl
xchg
insb
fnstsw
push
mov
cld
out
push
ss
pusha
lds
out
pop
icebp
ficoml
das
pop
mov
gs
pop
inc
push
rcll
mov
mov
movsb
loop
dec
mov
mov
sbb
push
div
cmpsb
jb
mov
adc
repnz
add
mov
sub
cs
jle
repnz
xchg
ljmp
push
jp
xchg
aaa
mov
fwait
dec
stos
mov
dec
or
aad
iret
xchg
bound
into
out
sbb
mov
movsb
scas
lret
into
sahf
inc
jo
sub
and
pop
jp
stc
cld
aam
push
xchg
icebp
icebp
js
mov
pop
adc
cmpsb
mov
sub
clc
outsl
sahf
xchg
loopne
sbb
das
fs
jecxz
adc
xchg
sub
fstpl
js
mov
and
test
test
and
in
adc
jns
lahf
dec
out
mov
ret
mov
mov
sbb
mov
or
into
or
pop
mov
clc
dec
xchg
mov
sbb
sub
mov
cmp
mov
dec
mov
mov
es
aas
mov
pop
xchg
mov
sbb
int
stc
push
push
sub
stc
inc
mov
js
mov
aaa
add
and
lea
fidivrl
xor
dec
ffree
add
xchg
lock
clc
jb
cmpsb
inc
mov
cld
dec
jl
or
notb
and
jbe
test
and
and
stc
into
pop
loop
push
lret
lds
jg
je
ret
xchg
cmp
mov
int3
sbb
jbe
lret
insb
push
jne
mov
iret
enter
pop
pusha
adc
shll
sub
xor
es
jmp
fnstcw
pushf
ljmp
dec
addr16
jecxz
shll
add
imul
adc
pop
sub
jo
cmp
pop
mov
mov
pop
push
xlat
out
arpl
cld
out
dec
lret
mov
inc
and
or
inc
sub
xor
das
mov
sub
add
jne
sahf
in
jmp
enter
and
or
lds
and
sbb
pop
cmp
xchg
or
ss
das
add
cmp
iret
je
pop
pop
jge
sbb
rcl
fwait
mov
fmull
sub
pop
test
inc
leave
addl
jo
adc
dec
js
mov
popf
or
iret
sbb
pop
jae
mov
rcrb
addr16
mov
xor
popl
fidivrs
jg
xchg
arpl
adc
imul
mov
jns
out
lds
pop
jnp
jp
fcomp
xor
dec
cmp
nop
jle
jecxz
xchg
int3
and
movsb
add
push
or
rcll
dec
push
add
adc
aad
pop
in
jecxz
jnp
add
test
roll
dec
cmpsl
fcoms
push
push
push
out
stos
pop
stos
enter
gs
aas
jnp
clc
lahf
test
xchg
pop
add
sbb
push
in
out
ficoml
pop
inc
in
mov
decb
mov
fs
adc
dec
aas
mulb
push
push
icebp
mov
clc
fists
sbb
cmp
add
jg
xor
adc
sbb
lods
lods
adc
frstor
mov
adc
pop
pop
in
push
stos
addr16
jg
mov
cmpsb
xor
idivb
cmp
add
cld
xor
dec
sub
jnp
rclb
sbb
pop
add
pushf
sub
or
test
fdivrl
sbb
shlb
cmc
push
mov
sahf
insb
sbb
lods
xchg
lahf
cmpsl
insl
fst
mov
scas
fprem
fmuls
imull
and
pop
aam
mov
and
sarb
cmp
inc
sub
cmpsb
mov
jns
loop
cltd
scas
mov
xor
stos
dec
aas
movsl
sbb
addb
dec
add
insb
ret
xchg
lret
test
sub
popf
fnsave
cmc
cmp
mov
aad
xchg
rcrl
mov
dec
addl
dec
lods
mov
mov
mov
inc
xor
test
out
js
lea
cmp
stos
push
mov
mov
repnz
ret
sbb
mov
sub
ja
shr
adc
mov
sbb
mov
jl
loop
fisttps
test
out
and
iret
jb,pn
inc
js
rclb
mov
and
mov
mov
or
dec
pop
add
pop
jp
ficompl
jbe
and
mov
inc
add
pop
sub
pop
and
pop
rcrl
dec
cmp
sub
xchg
xchg
nop
mov
sbb
in
inc
shrb
cmpsb
rclb
mov
lods
inc
mov
add
enter
setge
inc
xchg
mov
les
fmull
mov
pop
dec
ss
out
mov
and
in
dec
out
mov
loopne
sbb
cmp
int3
pop
dec
popa
push
push
xchg
jmp
dec
mov
cmc
int3
sub
call
adc
fmull
mov
sub
sahf
cmp
inc
pop
and
inc
jg
mov
push
pop
popf
imul
and
or
fisttpl
xchg
lds
sub
mov
add
ljmp
pop
roll
js
les
call
fldt
jmp
pop
test
aas
xchg
sbb
jnp
out
push
les
addr16
push
sbbl
adc
sbb
mov
sub
movsb
xchg
push
and
xor
fstpt
xor
fwait
mov
sbb
pop
push
jge
jae
adc
and
push
xchg
add
int3
mov
jns
add
sbb
ljmp
aad
xlat
test
jns
int
sbb
fcomip
pcmpeqb
fstl
es
add
jo
cmp
or
sti
cwtl
adc
or
or
dec
testb
flds
or
adc
xor
cmp
adc
push
mov
int3
pop
sbb
lahf
stos
sti
or
adc
test
adc
and
cmp
mov
aad
and
movsb
loop
pop
sbb
out
mov
rolb
xor
adc
pusha
leave
scas
jns
daa
lea
cmc
je
pop
and
addb
out
dec
fcomps
repnz
xchg
sbb
cmp
arpl
jmp
push
adc
add
and
mov
bound
push
js
sbb
adc
push
push
sub
jnp
lea
fdivr
icebp
insb
cltd
push
inc
inc
insl
stos
lahf
lock
pop
mov
pop
call
dec
adc
xchg
xchg
out
pop
dec
xchg
daa
test
cmp
or
pushf
stos
xor
sahf
push
inc
es
mov
sbb
idivb
sbb
jns
sub
push
sahf
stc
int
add
or
lret
xchg
movl
sub
push
sbb
inc
rcrl
xor
popa
lea
stos
xchg
or
in
stc
js
cltd
fistl
xlat
dec
test
add
stos
lods
inc
sbb
lcall
mov
pop
je
sarl
adc
mov
xor
mov
inc
jp
sbb
fsts
inc
xchg
mov
xor
ja
roll
pop
rcr
sbb
mov
stos
std
xchg
sub
sub
push
testl
pop
fcmovnb
add
pusha
xor
orb
mov
in
push
and
xchg
sub
mov
sar
mov
push
dec
testb
das
hlt
into
bound
jecxz
out
pop
sub
adc
push
scas
mov
les
mov
xchg
fs
adc
scas
int
cmp
mov
inc
pushl
inc
out
pop
popf
or
into
mov
lcall
outsl
ret
pop
mov
dec
inc
insb
ret
in
test
arpl
jnp
adc
imul
cs
ss
mov
sbb
aam
cmp
or
gs
seta
outsl
dec
xor
cltd
sbb
mov
sbb
aaa
gs
ret
adc
adc
shr
repnz
ficoml
cmp
fisubl
es
and
dec
pop
add
dec
dec
imul
and
dec
jo
xor
subb
daa
outsl
hlt
out
das
add
lcall
cmpsb
mov
cld
pop
sub
and
ror
pop
sahf
inc
repz
lcall
pop
addr16
push
sbb
pusha
fs
pop
adc
dec
inc
xchg
add
xor
or
cmp
aas
shll
out
movzwl
ss
inc
push
mov
imul
sti
sbb
jae
xor
ljmp
enter
push
shlb
add
add
sbb
mov
es
divb
rcr
sbb
or
sub
xor
out
fnsave
movsb
inc
ss
stc
xchg
cwtl
repnz
gs
and
test
fsts
sub
push
into
pop
iret
movsb
pusha
hlt
ja
int3
inc
xchg
insb
int3
dec
pop
mov
pop
test
mov
pop
bound
xor
mov
repz
mov
dec
jg
repnz
sub
sbbl
stc
cmp
sub
incl
fdivrs
xor
pop
insb
jne
fildll
lds
mov
test
pusha
daa
xchg
movsb
jo
leave
out
fucomp
aad
pop
stos
shr
in
iret
mov
add
push
adc
sub
loopne
lods
pushf
and
push
mulb
icebp
sbb
xchg
jns
mov
mov
mov
xlat
inc
xor
mov
lods
fstps
fidivs
idivb
nop
bound
or
dec
ror
and
cmp
or
fldenv
test
imul
cmp
inc
movsb
add
sub
mov
mov
into
or
loope
pop
inc
mov
jle
add
out
and
pop
cwtl
iret
aaa
jl
mov
cmp
mov
in
cmp
xor
mov
pop
jmp
fwait
cmpsl
fstpt
outsb
out
xor
mov
or
pop
sub
fs
pop
mov
push
or
int3
or
hlt
divb
mov
jo
adc
mov
cltd
idiv
mov
sbb
ds
int3
pusha
mov
xchg
add
dec
lret
test
cmc
xor
test
insl
iret
jle
or
loop
out
icebp
jnp
loope
es
xchg
mov
xchg
outsl
cs
cmp
or
ficompl
pop
jnp
dec
mov
mov
jmp
mov
adc
cmp
lret
xor
cs
pop
in
adc
lock
xchg
das
xor
sub
aas
push
nop
xchg
xor
aad
xor
fcom
push
enter
repz
add
data16
out
data16
cmp
pop
xchg
dec
in
xchg
xlat
xor
jbe
rcll
cmp
mov
mov
pop
inc
mov
cltd
pop
pop
or
lods
aaa
ror
test
xor
gs
test
cmp
jl
jle
push
or
and
sets
test
in
mov
mov
mov
push
ss
pop
xchg
jecxz
bound
ror
xor
mov
cmpsl
xchg
sbb
pushf
xor
mov
cmp
xchg
cltd
mov
pop
cmpl
pop
mov
jg
or
lea
and
cli
subl
push
in
xor
jne
xchg
hlt
mov
cwtl
sbbb
push
pop
pushf
add
insb
cmpsb
addr16
mov
push
idivl
loope
icebp
add
xor
cmp
ret
xchg
xor
cmp
notb
ror
lret
jg
scas
loopne
xchg
and
or
xchg
ret
dec
pusha
or
lret
sti
pop
gs
into
outsl
dec
gs
aad
mov
cwtl
repnz
xchg
mov
ret
stc
mov
xchg
shll
inc
inc
roll
mov
call
in
sti
jno
ret
shl
jmp
jnp
xor
sbb
adc
gs
push
clc
in
adc
sarb
xchg
add
stos
mov
pop
test
into
into
test
mov
and
or
mov
inc
out
adc
scas
xor
mov
sti
std
inc
mov
pop
stc
cmp
fwait
shll
mov
jno
pop
and
xlat
sbb
add
mov
xor
or
mov
push
pop
push
movsl
jne
mov
cmc
popa
test
cmp
mov
sub
lcall
push
test
push
ljmp
adc
out
adc
mov
push
add
scas
int3
outsb
xlat
out
aam
cld
xchg
jae,pn
hlt
stos
jmp
pop
cltd
sbb
pop
push
fnsave
pop
in
jne
inc
test
adc
idivb
movsl
das
jnp
xchg
jns
icebp
jne
and
add
lfs
inc
dec
dec
es
mov
push
xchg
test
dec
sbb
mov
xchg
jno
sub
pop
pop
xor
dec
addr16
fcomip
cmpl
fdivs
mov
xchg
nop
les
inc
xchg
xor
add
cmpsl
fisttpl
mov
cs
inc
inc
mov
into
mov
out
mov
adc
test
adc
fwait
mov
insb
pop
or
push
outsb
jmp
sub
push
js,pt
arpl
and
test
fxch
xor
rorb
lahf
insb
xchg
jp
lret
das
or
call
xchg
sub
pop
leave
aas
push
push
aam
int
insb
insl
add
and
shll
dec
cli
dec
and
daa
test
xchg
sub
stc
ret
mov
fisttps
jb
fnstenv
cs
in
adc
mov
pop
insl
adc
test
mov
and
lods
out
aam
jg
jne
filds
jo
int
imul
repnz
jb
add
ret
imull
cs
and
pop
fbstp
add
lods
xor
add
popa
icebp
jge
dec
mov
js
and
cmp
add
test
stos
outsb
call
add
pop
dec
cmp
shll
lods
cld
cmp
push
xor
mov
push
stos
sti
xor
aam
pop
lret
sub
mov
mov
sarl
sub
outsb
jmp
das
adc
cwtl
mov
adc
loope
loop
sub
test
in
or
mov
into
jge
add
popf
or
xchg
dec
push
mov
or
push
lea
push
nop
stos
ss
xchg
adc
arpl
add
jle
test
rcrb
mov
mov
cli
int3
ja
insl
jb
mov
mov
fsubrs
mov
xor
test
stos
lret
mov
out
notb
adc
fistpl
xchg
or
jmp
ss
and
push
push
add
mov
insb
hlt
mov
ret
push
cmp
pop
sub
lds
jb
push
xor
or
mov
jl
xor
fadds
inc
sub
or
mov
nop
lds
mull
mov
lea
cmp
adc
ljmp
nop
lds
sti
sbb
movsb
or
inc
sahf
push
sar
jno
and
sub
and
repnz
adc
mov
rcl
in
sub
push
add
out
lods
mov
adc
enter
aas
mov
inc
xchg
cmpsl
add
mov
cmp
cs
inc
inc
inc
mov
xchg
xlat
mov
pop
ret
stc
inc
std
imul
ret
xchg
aam
sbb
xor
nop
add
fwait
movsb
push
out
mov
lahf
dec
test
popf
pop
add
or
loope
notl
xlat
jnp
fs
fsubl
jge
test
lea
or
mov
enter
mov
push
mov
cmpsl
dec
stos
mov
jp
wbinvd
iret
or
idiv
xor
insb
test
pop
sbb
insl
sarl
repz
cmp
repz
sbb
xor
mov
push
pusha
daa
add
imul
pop
and
fadd
loopne
jg
js
in
add
jbe
sbb
iret
adc
adc
xlat
loopne
cmpsb
nop
rcl
mov
test
sbb
loop
push
hlt
pop
dec
push
adc
push
mov
cld
adc
out
or
xor
push
in
aad
pop
outsb
sub
cmpsb
mov
push
addr16
jne
adc
lods
push
inc
clc
xor
loopne
or
pop
sub
outsb
add
and
mov
dec
test
jge
int
into
orl
lods
roll
rclb
inc
dec
cmp
adc
sbb
in
cmc
jnp
fcoml
cmp
xor
pop
pop
pop
xchg
mov
pop
nop
out
mov
rorl
out
idivl
imul
cltd
lahf
sub
mov
cmpsb
repz
jb
ss
lds
dec
and
xchg
push
into
pop
push
mov
fistl
and
pop
lock
push
nop
stos
xor
mov
add
mov
nop
push
cs
jg
push
outsl
jl
mov
test
push
add
fistpl
loopne
pmullw
pop
jg
pop
ljmp
aad
mov
lods
imul
xor
pop
mov
js
lret
fstl
out
mov
xchg
lock
dec
xor
ja
ds
mov
cld
dec
jno
sahf
pop
mov
adc
xor
inc
mov
and
and
dec
push
mov
cmp
in
adc
xor
or
js
mov
push
ret
pop
mov
into
lret
stc
xchg
sarl
loopne
mov
lock
lods
dec
jnp
sbb
out
movsl
divl
scas
loop
cmc
lods
xchg
nop
adcb
mov
clc
fnclex
jecxz
adc
dec
leave
push
lea
and
push
and
int
cmp
in
jo
in
stos
es
push
ror
scas
das
shr
or
pop
and
and
scas
test
xlat
bound
in
mov
push
xor
cmp
outsl
xor
and
push
shrl
push
in
add
mov
fnstcw
jbe
pop
xor
test
xchg
mov
fwait
push
jmp
dec
or
xchg
sub
sarl
fidivs
push
neg
fcmovbe
add
or
hlt
or
cmpsl
or
pop
xchg
or
rol
inc
jge
mov
bound
aad
out
and
outsl
and
add
xorb
push
icebp
or
adc
jns
inc
int3
and
xor
subl
fwait
adc
aaa
int
and
fwait
xor
outsb
ret
mov
jl
lcall
in
stos
inc
sahf
add
dec
mov
cmpsb
lahf
rcrl
nop
mov
fwait
mov
bound
fsts
xor
sbb
jns
jg
fdivr
out
sbb
cmpl
and
mov
mov
fs
dec
lds
sbb
sbb
pusha
push
dec
adc
dec
lods
jbe,pn
add
mov
scas
lcall
scas
imul
out
mov
inc
into
push
adc
cmp
mov
mov
mov
push
out
cld
pop
outsb
or
repnz
es
xor
test
adc
mov
ja
imul
mov
mov
aad
xor
loopne
or
adc
adc
pop
inc
addr16
and
or
in
pop
push
fidivs
ljmp
xor
mov
mov
shll
addb
mov
les
or
fsubr
cmp
pop
push
cmpsl
ljmp
pop
mov
xchg
dec
inc
sub
xchg
dec
jne
sub
sbb
jb
dec
aaa
pop
or
rolb
cmp
xchg
fldenv
and
xchg
mov
popa
sbb
mov
int
xor
aam
fwait
mov
mov
cmp
nop
mov
jecxz
outsb
xchg
pop
jne
mov
iret
mulb
cmp
arpl
pop
push
mov
andb
pop
pop
mov
push
nop
cmp
dec
shrl
xor
inc
push
add
lods
adc
sub
adc
pop
out
jbe
dec
outsb
mov
xlat
int3
popa
shll
aam
pop
and
xchg
hlt
pushf
xchg
andl
inc
rclb
mov
mov
lret
jbe
or
hlt
sub
enter
xchg
sub
xchg
in
jmp
scas
jle
push
repnz
neg
imulb
jecxz
lret
rol
push
dec
ljmp
mov
xchg
inc
mov
mov
lcall
push
wbinvd
xor
aad
mov
pop
repnz
mov
in
xor
inc
or
scas
lret
or
jl
xchg
dec
jl
in
insb
sub
fldt
push
xor
aaa
push
add
lcall
aaa
mov
push
ss
add
fidivrl
aam
pushf
mov
out
call
fnsave
jecxz
mov
sub
sahf
jno
or
iret
loop
sbb
neg
outsl
pop
adc
pop
pop
cltd
jb
add
inc
add
xor
jg
inc
je
xchg
pop
nop
adc
pop
fstpt
mov
mov
stos
gs
inc
lds
and
push
xchg
in
lahf
cld
mov
shl
stc
mov
jle
xor
jbe
cmpl
cmpsb
popf
pop
xchg
fsub
ficompl
jnp
push
ljmp
or
xchg
cmp
cmpsl
or
sub
push
inc
aam
jge
rolb
adc
call
pop
adc
jae
push
xchg
mov
pop
xchg
mov
lock
mov
test
xchg
lcall
mov
jmp
scas
xchg
stos
leave
adc
imul
push
in
sarl
mov
test
scas
push
or
out
pop
jno
ljmp
imul
push
xchg
add
cmpb
pushf
out
daa
push
or
xor
cmp
fcomps
pop
jecxz
fcoml
call
mov
push
shlb
lret
push
xor
aam
sti
sub
test
or
or
sbb
dec
push
ljmp
fisubrs
into
daa
out
mov
lds
pop
pushf
fildl
mov
push
push
es
adcl
sti
inc
or
nop
and
or
shl
xor
test
out
lea
fsts
inc
call
stos
mov
inc
lret
xchg
push
daa
jns
and
mov
andl
dec
shlb
mov
mov
xchg
daa
xchg
jge
add
add
fimuls
scas
and
aam
and
jo
pop
add
xorb
mov
into
call
repz
rclb
sub
in
rorl
inc
jnp
sahf
sub
lds
push
xchg
test
jle
mov
sti
into
push
or
je
lahf
xchg
mov
push
sar
pop
adc
nop
mov
and
decb
or
add
ljmp
sub
repnz
inc
jns
aaa
sbb
js
call
call
xchg
sarl
xchg
outsb
sbbl
fwait
test
and
fidivs
mull
call
sub
lds
rorb
xor
lds
dec
aas
push
sbb
push
sarl
inc
and
jno
mov
add
repz
xor
lret
rorb
dec
jp
insl
dec
pcmpgtb
hlt
icebp
jmp
es
stos
adc
in
filds
fdivl
and
ficompl
xchg
inc
lret
jbe
pop
sbb
xor
in
or
mov
ret
or
les
mov
push
mov
mov
pop
scas
enter
jmp
aam
push
sub
push
repz
aad
dec
inc
pop
mov
pop
dec
clc
stos
mov
cmp
xorb
mov
mov
les
enter
outsl
pop
xorl
movsl
cmpsb
cmp
inc
scas
push
jle
fs
mov
outsl
xor
pushl
clc
gs
test
shl
test
inc
inc
jle
loop
inc
and
andb
push
pop
popl
sub
pop
in
int3
mov
inc
aaa
std
fmuls
xchg
sub
aad
xchg
xchg
xor
xor
adcb
mov
sub
ror
fisubrl
insl
ret
fnstsw
repnz
dec
fs
addr16
mov
sti
loope
sbb
icebp
mov
out
dec
inc
clc
and
pop
loope
stc
sub
cld
popa
mov
dec
pop
sarl
fcoml
jnp
js
mov
jle
iret
push
ret
aaa
pop
inc
cmpsb
mov
jp
add
xchg
ljmp
cwtl
sbbb
push
dec
loop
movsl
outsl
cld
pop
push
mov
test
stc
test
push
xchg
add
sbb
cmp
xor
sub
imull
push
int
xor
push
xor
aaa
sub
loop
int
je
push
jbe
shlb
sbb
jl
cld
jnp
sub
mov
loopne
pop
test
and
push
lret
mov
xor
std
or
or
push
jecxz
sbb
std
sbb
mov
mov
and
aas
stc
sub
mov
pop
and
sbb
in
lret
inc
ret
enter
xor
jl
xchg
gs
inc
jo
sub
add
xchg
popa
jne
pop
loopne
movsl
ds
sub
call
js
adc
cli
movsl
adc
ljmp
lods
adc
aaa
sbb
adc
and
and
or
enter
push
inc
out
stos
arpl
xchg
into
mov
loopne
add
jp
orl
jnp
mov
cli
sahf
fs
xchg
lcall
sub
adc
add
outsb
je
inc
lds
pop
inc
outsb
and
mov
dec
cld
sbb
sbb
rep
daa
aaa
ret
fsts
in
pop
mov
xchg
cmp
aad
inc
aam
push
mov
cltd
xchg
xor
mov
in
out
jle
outsl
sbb
mov
sub
mov
jbe
sub
sbb
add
inc
sar
mov
imul
cmp
gs
pushl
std
jg
lds
sbb
push
outsl
cmpsb
sbb
xchg
sub
je
jg
xor
loope
ret
lcall
cs
ror
subl
jae
xor
adc
cld
orl
jecxz
adc
sub
loop
mov
pushf
pop
cmp
imull
pop
mov
push
dec
outsb
jmp
repnz
cwtl
or
sub
out
lock
pop
xor
mov
shll
stos
loopne
xchg
adc
dec
outsl
jns
and
inc
push
test
jmp
subb
int3
jb
mov
add
addr16
dec
int3
dec
imul
mov
inc
or
sbb
push
mov
jb
mov
aad
stos
fsubrp
lods
adc
insl
dec
adc
adc
movsl
xchg
dec
jns
pop
arpl
jp
mov
rcrl
or
pop
push
and
dec
lods
sub
mov
in
repz
xor
gs
push
sub
mov
push
fsubr
fistpl
js
inc
cmp
mov
ss
cmp
int
mov
mov
movsb
divb
fcmove
inc
cmp
not
mov
popa
fcoms
lret
sub
loopne
loope
add
mov
and
mov
out
push
xchg
and
cmpsb
pop
ficoml
mov
mov
dec
adc
outsb
js,pn
push
sub
cltd
push
push
pop
in
pop
mov
and
xchg
dec
enter
adc
mov
add
push
movsb
mov
mov
mov
pop
jnp
test
lret
mov
stc
jne
loop
dec
and
sbb
jns
cmp
mov
es
add
xor
dec
mov
inc
rcr
sub
xor
sbbl
fwait
jecxz
mov
push
and
mov
mov
mov
rolb
sahf
jno
stos
cmp
aas
xor
test
xchg
dec
mov
lret
imul
fistpl
lods
mov
dec
shll
inc
daa
jno
inc
cwtl
pop
pop
or
ficoml
gs
sbb
jne
test
mov
cmpsl
js
push
loop
fs
cmp
leave
sti
xchg
mov
dec
sbbb
xorb
jnp
sub
cld
cltd
jbe
and
mov
add
test
das
push
push
leave
mov
outsb
pop
cmp
ret
add
testb
pmulhw
push
add
mov
icebp
inc
cmp
jae
clc
or
push
sti
mov
jge
loope
das
add
mov
cmp
jge
movsb
sub
repz
gs
jno
xor
add
sub
or
insl
incb
andnps
test
pop
add
add
dec
dec
mov
fcmovu
cmc
xor
push
pop
popf
pop
pop
xor
push
add
xor
rorl
sbb
cli
sar
fdivl
pop
popf
jecxz
sbb
lds
pop
pop
add
fisubl
sub
ja
lods
mov
sahf
aaa
hlt
das
jecxz
mov
jg
mov
mov
aas
inc
jl
filds
dec
outsb
inc
pop
jp
movsb
pop
jne
sar
adc
mov
inc
jb
lods
pop
enter
movsl
js
lret
icebp
push
or
mov
into
pop
xor
add
mov
dec
mov
mov
pop
cmp
call
or
or
cmpsl
inc
int
dec
xchg
push
mov
or
push
cli
mov
push
dec
dec
sbb
mov
in
lcall
cld
sbb
sbb
push
dec
out
mov
sbb
or
cs
jae
cmc
adc
pop
movsb
push
dec
cwtl
sbb
mov
and
pop
jle
or
or
inc
inc
jg
imul
arpl
rolb
bound
push
or
dec
outsb
fadds
mov
dec
jne
out
fsub
dec
mov
jmp
jne
push
pop
lahf
add
ja
fmuls
and
imul
sbb
add
jnp
mov
cwtl
xchg
lahf
lea
outsb
fildl
inc
fildl
in
add
sti
das
inc
in
or
in
and
or
push
sbb
push
insl
mov
mov
mov
xchg
aam
adc
mov
sbb
insb
push
mov
cmovns
adc
mov
cmpsl
in
cwtl
repnz
sti
scas
dec
lret
jbe,pn
xchg
jge
cwtl
or
adc
mov
sahf
pop
mov
cmp
clc
testl
or
aas
push
xor
fs
test
sub
dec
or
imul
push
mov
shrb
pop
test
in
xchg
adc
jno
mov
adc
sti
adc
cmp
and
push
cli
loop
cmpsl
in
inc
jbe
lods
repnz
ret
sbb
mov
mov
shrl
fisttps
sub
pop
popa
push
nop
ss
sub
leave
xor
insl
sbb
cld
cld
adc
add
sbb
test
sbb
loope
mov
dec
icebp
inc
mov
pop
pop
or
xchg
jno
cld
xorl
pop
or
mov
dec
jecxz
jge
sbb
rclb
sub
nop
out
or
and
sbbl
sub
or
cmp
lods
das
xchg
push
sbb
xchg
movsl
cmp
addr16
aas
fwait
shl
leave
push
pop
je
mov
inc
std
and
mov
mov
push
test
in
dec
fildl
mov
pusha
pusha
xor
add
mov
push
sub
movsb
cs
xchg
jge
sbb
imul
mov
test
xchg
add
insb
sub
and
dec
rcrl
cld
lea
out
pop
jmp
sbb
xchg
xchg
or
push
push
jp
nop
stos
cmp
bound
fcoml
js
pushw
xchg
jae
out
inc
insb
fs
xor
mov
cmp
loope
ret
movsl
sbb
adc
add
popf
in
flds
nop
push
mov
out
mov
rol
popf
pushf
adc
ss
nop
mov
xchg
inc
fstps
inc
les
cmp
xor
xchg
enter
adc
mov
push
bound
jmp
adc
shlb
lock
test
test
fsincos
sub
sbbb
daa
ljmp
dec
or
hlt
movsb
mov
mov
xor
sidtl
sbb
pop
add
ss
pusha
roll
push
repz
sub
iret
rorl
in
lret
mov
clc
jecxz
inc
adc
inc
jmp
inc
loope
dec
xor
das
loop
in
repz
fs
dec
sbbb
sbbb
cmp
loopne
mov
adcb
outsb
inc
fcmovu
imul
fildl
es
cltd
push
xor
rcr
lock
jle
adc
push
std
inc
xchg
out
cld
inc
stos
aad
addr16
ss
scas
data16
push
xor
inc
push
sbb
mov
popa
jbe
push
fdivr
lret
clc
add
inc
cld
mov
fistpl
jecxz
gs
dec
pop
or
das
sbb
dec
stc
in
jge
cmp
insb
push
nop
loop
jb
sbb
adc
sahf
add
in
adc
mov
inc
js
rcr
repnz
mov
shlb
cld
insb
loope
jo
xchg
in
push
jb
notb
call
xor
inc
orl
dec
ret
mov
pusha
pop
outsb
lahf
sbb
aaa
adc
adc
ss
sahf
mov
mov
fadds
adc
xchg
xchg
test
dec
stc
push
dec
pop
lock
loop
inc
xchg
pop
movsb
and
push
inc
fsubrs
lret
sub
aam
add
adc
loopne
dec
mov
mov
sbb
adc
and
dec
mov
pop
cmp
movsl
imul
loopne
std
mov
mov
lcall
adc
popl
mov
fcmovne
fldln2
fcoml
jecxz
loopne
sbbl
movsl
pop
pop
ljmp
jp
dec
add
lahf
sub
cwtl
and
jl
into
xchg
sarb
loop
inc
aad
in
push
pusha
push
fsubr
and
sti
clc
and
add
jns
stos
scas
mov
loop
and
mov
push
das
inc
rorl
pop
sbb
aas
pop
out
fisttpl
sbb
jecxz
cmp
nop
inc
inc
xchg
cmp
sub
jo
hlt
ds
mov
and
or
testb
mov
sbb
cmp
add
das
aas
out
sub
cmc
js
push
inc
or
sub
int
incl
in
loop
jne
jae
insl
and
jmp
dec
push
insl
out
imul
shll
mov
lahf
loop
jle
jmp
mov
xor
ret
pushf
repz
pop
dec
in
in
call
inc
into
test
inc
push
subb
pop
cmp
add
fisubl
xor
sbb
pop
out
cmp
pop
inc
dec
fidivrl
mov
dec
pop
stc
xchg
out
loopne
jae
dec
add
adc
fwait
loop
sbb
mov
nop
jge
jmp
pushf
mov
stos
movsb
loop
mov
and
pop
fs
stos
mov
xor
lods
cmpsb
in
incl
enter
lcall
push
mov
mov
cld
cmp
mov
mov
js
push
lea
push
divl
dec
xor
push
aas
mov
mov
jecxz
out
jno
inc
mov
adc
xchg
nop
and
mov
inc
nop
sub
iret
and
sbb
inc
fnsave
loop
adc
mov
push
aas
ja
popf
shll
xchg
iret
jnp
mov
mov
push
jg
and
xlat
and
xchg
inc
es
pop
jecxz,pt
jmp
hlt
inc
xchg
sahf
sbb
jne
stos
jno
add
sub
scas
sub
mov
aas
inc
xor
in
dec
movq
sub
pop
imul
xor
jne
push
mov
mov
push
pop
cmp
movsl
push
mov
cmpsl
jne
enter
roll
inc
fildll
sarb
inc
testl
or
adc
lods
insl
insb
rcr
inc
test
push
or
mov
lock
das
xorl
stos
mov
jg
adc
xor
sub
stc
or
test
xor
cmp
cld
cltd
lock
in
leave
cmp
rclb
lods
mov
std
into
cmp
adc
mov
ds
out
mov
mov
repz
out
push
stos
adc
fbld
sbb
shlb
xor
jl
mov
rcll
es
sbb
ja
adc
imul
sub
mov
dec
pop
sbb
jge
jg
pushf
dec
and
popa
dec
jecxz
divl
sbb
fwait
jne
mov
push
imul
movsl
inc
lcall
xor
and
and
adc
mov
or
dec
or
nop
not
sbb
roll
or
add
push
stc
lock
push
clc
mov
and
mov
pop
bound
inc
inc
or
pop
jle
fstl
push
fs
aaa
das
sbb
jbe
xchg
mov
cli
les
repz
sbb
add
inc
or
inc
ret
inc
sbb
mov
inc
pop
inc
mov
rcrb
movsb
scas
fcoms
insb
sub
xchg
xlat
subl
mov
inc
jg
inc
sub
lds
jns
adc
adc
xchg
pop
mov
sub
imul
or
push
mov
fdivrl
xchg
mov
inc
sbb
sbb
stos
movsl
mov
adc
jecxz
mov
add
pop
add
iret
jmp
or
dec
sbb
pop
pop
imul
mov
jne
dec
mov
scas
pop
adc
push
mov
sbb
test
xchg
pop
lret
sub
in
push
in
out
filds
jnp
in
testl
shrb
movsbl
popa
mov
mov
dec
sbb
pusha
dec
lods
fnstenv
test
push
mov
push
mov
in
repz
enter
mov
lret
inc
out
cli
and
jne
push
data16
push
cmpsl
mov
test
lret
inc
or
bound
adc
hlt
shll
fucomp
rcrl
call
cmpsb
pop
inc
cmpl
inc
daa
scas
lea
dec
xor
adc
or
loop
mul
pushf
stc
nop
adc
mov
mov
jbe
inc
pop
dec
or
cmp
scas
outsl
jmp
mov
insb
adc
sub
xorl
sbb
push
pop
mov
sbb
or
sub
jp
inc
sub
ret
ja
ss
sub
sbb
push
or
stc
xorl
ret
push
adcb
cmpsl
jae
loop
inc
sub
les
sub
outsb
pushl
inc
push
pop
and
shll
inc
shll
lock
aad
fcoml
cs
cmp
mov
push
test
in
cmp
or
and
loopne
shll
pushf
or
push
dec
gs
in
jns
or
jmp
pop
sbb
sbb
xchg
inc
push
lds
xchg
gs
push
fidivrs
add
pop
push
pop
ja
ss
cwtl
iret
sub
push
jns
adc
sub
popf
pusha
ja
mov
mov
dec
cmpsb
repz
into
mov
insb
push
push
push
adc
loop
call
lock
int3
mov
mov
movsb
pop
or
fsqrt
mov
xor
xor
inc
lcall
rcrb
sub
testl
popf
push
jmp
mov
sarb
jg
push
adc
out
je
sbbb
mov
adc
das
adc
jl
mov
ds
adc
fstpt
mov
bnd
or
or
mov
adc
push
outsb
out
ret
inc
loopne
mov
and
adc
or
jnp
cli
sub
cwtl
xchg
dec
mov
push
cmp
into
and
sub
add
xchg
or
pop
pop
adc
mov
stc
or
cmpsl
dec
dec
push
shll
clc
fxam
pop
push
movsb
jmp
stos
jmp
or
xchg
jp
es
cld
push
mov
pop
sub
jbe
sti
mov
fcoms
adc
das
out
fs
adc
adc
leave
hlt
cmpl
sbb
loop
and
or
test
jo
pop
std
cs
in
sub
in
pop
xor
push
out
es
mov
fmul
cs
pop
inc
jge
xchg
or
test
lods
in
iret
mov
pop
in
or
pusha
push
test
cmp
adc
inc
mov
sbb
sbb
rcl
push
jnp
fldenv
dec
stos
or
jo
xchg
in
xchg
roll
pop
adc
mull
inc
loop
adc
push
mov
push
or
lcall
ficompl
cld
add
push
mov
inc
mov
dec
dec
sbb
jp
jne
addl
and
jae
add
cli
sub
mov
negb
mulb
push
xor
cwtl
mul
jp
xchg
cld
and
pop
sub
popf
adc
cli
sub
sub
cli
call
xor
and
es
sarl
xlat
add
std
and
mov
pop
jb
and
and
xor
popf
jl
cltd
cmp
mov
and
rcll
lcall
ljmp
iret
aam
pop
movb
sub
rcl
aas
imul
jmp
clc
jne
jns
or
sub
xor
inc
jecxz
and
mov
sbbl
test
lcall
cmp
pop
sub
mov
push
xchg
push
sti
xchg
leave
push
hlt
testl
movsb
cmc
add
or
mov
push
lcall
and
stos
out
mov
dec
cmp
leave
pop
sub
fmuls
lret
jbe
inc
test
pusha
test
sbb
xchg
dec
lea
and
xchg
xorb
dec
mov
xor
shrl
pop
into
jge
mov
mov
movb
sbb
mov
fbld
xor
popf
mov
lods
cwtl
das
fsubrl
add
sbb
add
aaa
push
jo
icebp
dec
lods
fadd
mov
xor
xchg
leave
or
mov
leave
fcom
aad
xor
loopne
add
aad
enter
shl
mov
or
in
pop
sub
sbb
or
mov
int3
inc
sub
lods
inc
cmp
push
add
rclb
das
movsb
in
dec
mov
add
popl
xorb
pop
dec
push
jne
fildl
xor
push
xchg
mov
cmc
jle
mov
xor
mov
xor
jae
mov
repnz
mov
mov
es
jb
xor
mov
test
sahf
test
call
call
mov
or
push
lods
pop
or
fwait
out
jo
mov
jmp
push
mov
pop
push
pop
xchg
sbb
sub
cmp
cltd
adc
addr16
jb
mov
fcmove
std
push
push
cs
inc
xor
mov
push
ss
lret
mov
test
out
fdivr
out
rcrl
arpl
rcr
imul
cmc
in
jb
xchg
mov
inc
xchg
fisubs
push
xor
dec
or
push
test
push
cli
ljmp
and
mov
lds
inc
sbb
jnp
popa
sub
hlt
jle
outsb
out
mov
lahf
jo
mov
rolb
mov
pop
enter
je
push
mov
adc
repnz
out
in
andps
xor
push
lea
cmp
pop
push
add
clc
pop
pop
xor
jge
lods
and
inc
xchg
fcom
loopne
jb
jle
adc
in
and
ljmp
mov
mov
cwtl
add
cmp
divb
push
push
testb
push
sbb
fdivr
jg
mov
add
pop
jle
xor
mov
clc
cwtl
hlt
lods
jae
sbb
mov
push
xorb
pop
stos
les
push
aad
push
jmp
leave
in
test
jbe
popa
sahf
cmpsl
stc
jns
in
cmpsl
inc
mov
inc
inc
mov
cmc
cs
inc
fimull
mov
cltd
push
dec
out
daa
xchg
movsl
jo
insl
jp
push
pop
in
xor
and
push
aam
arpl
movl
add
imul
pusha
inc
lcallw
ja
ficomps
mov
lret
frstor
mov
adc
adc
jbe
andb
and
pop
lods
mov
fdivp
inc
in
leave
test
sbb
cmpsl
dec
or
mov
mov
mov
add
mov
int
out
icebp
hlt
fwait
mov
push
sub
mov
scas
mov
dec
sahf
add
sbb
bound
jmp
mov
ja
xchg
in
adc
outsb
out
cltd
push
inc
sarb
xor
std
gs
pop
push
jl
cltd
adc
cwtl
sbb
js
and
mov
jp
mov
cwtl
push
mov
xchg
arpl
push
test
inc
dec
ret
pop
or
push
xor
fisttps
ljmp
in
dec
das
jns
int3
push
ret
dec
cli
mov
dec
mov
mov
repz
fdiv
and
pop
imul
cmp
push
and
pop
imul
pop
cs
sub
sahf
test
add
pop
push
jmp
jns
ret
out
mov
cmpsb
jne
jae
test
inc
dec
fwait
jecxz
sbb
nop
sar
gs
test
pop
into
or
scas
in
les
mov
jo
ss
push
loop
loope
xchg
xor
or
pusha
add
stos
xor
jp
adc
jns
xchg
aas
xchg
and
or
cmpl
push
mov
ds
movsb
sbb
fisttps
xor
dec
inc
stc
mov
xor
lea
fbld
jns
ret
fildll
test
adc
push
shrb
cltd
lds
fxam
in
xchg
stos
in
adc
mov
repnz
and
or
push
out
nop
add
and
inc
sti
seto
push
aaa
jnp
loop
std
mov
loop
out
cmp
mov
cmp
outsl
sbb
stc
lds
in
loopne
adc
out
idivl
pop
imul
xor
cmp
enter
mov
mov
imul
ret
push
xchg
aas
sub
pop
mov
out
mov
add
xchg
imul
orl
repnz
push
icebp
mov
push
movsb
je
cmp
sub
pop
jl
fnsave
xor
stos
push
fdivl
or
adc
and
stc
mov
in
push
popf
es
imul
mov
sbb
xchg
dec
adc
mov
mov
mov
jmp
xchg
mov
mov
lret
out
inc
das
inc
xor
fimull
lea
out
fdivr
xchg
dec
sbb
loope
fstl
jecxz
push
and
mov
mov
mov
or
sub
lock
mov
dec
emms
xor
mov
jmp
mov
add
call
sub
push
daa
sub
mov
lods
jecxz
outsb
cmpsl
ds
sbb
sub
sbb
ljmp
add
or
scas
scas
movsb
out
pop
in
ljmp
dec
add
fisubrs
and
xchg
mov
loopne
add
dec
cmp
or
adc
jmp
pop
ret
sbbl
out
mov
int
nop
rorl
loop
shll
cltd
mov
repnz
mov
xchg
decb
push
mov
addr16
cmp
mov
aas
inc
imul
sbb
outsb
mov
push
sbb
or
mov
xorb
xlat
inc
loope
pop
mov
imul
mov
divb
loope
mov
inc
jae
or
jl
mov
stos
push
xor
ds
inc
idivb
jae
dec
sub
xchg
inc
push
jg
xor
xor
push
sahf
dec
ret
and
add
inc
pop
testl
push
cmpsb
repnz
inc
ja
add
mov
imul
jae
jnp
dec
cld
push
imul
imul
lods
ss
push
jo
repz
dec
inc
cmp
mov
pop
jge
ret
incb
push
pop
pop
mov
cmpsl
sub
nop
sub
fdivrs
mov
and
add
test
adc
cmp
jmp
into
ljmp
or
rcrl
jp
cmp
mov
cmp
imul
cmpsl
and
ss
das
aaa
std
repz
xchg
adc
hlt
cli
sub
repnz
push
test
jl
jp
or
add
dec
xchg
mov
scas
mov
imul
addb
icebp
in
mov
test
dec
or
jbe
lea
ja
add
jbe
int
pop
shlb
cld
sar
push
push
mov
js
mov
fcmovne
and
cmc
adc
or
xchg
xchg
dec
inc
andl
out
test
add
inc
insb
add
lds
inc
ret
mov
sbb
repnz
imul
cmp
mov
dec
je
xchg
mov
js
rol
jmp
insb
sbb
jno
and
aaa
add
loopne
fs
push
inc
mov
pop
push
aas
cmp
les
or
mov
lcall
lret
dec
mov
xlat
fstp
pop
push
aad
cmp
jo
sahf
adc
call
jmp
jo
cmpsl
mov
pop
idivl
rol
fnsave
add
out
fsubrl
out
jge
incl
enter
pop
xlat
lods
ljmp
nop
xchg
mov
inc
sbb
xor
jo
lods
push
pop
insb
xor
jbe
mov
js
xchg
outsb
aad
pop
cmp
mov
call
mov
jg
loop
outsb
lcall
sbb
push
fwait
and
inc
ficompl
sub
ficoml
cld
dec
movsl
inc
cmpsl
aam
inc
inc
aas
add
push
mov
fldenv
xor
mov
add
and
sub
sbb
xchg
jno
mov
xor
sbb
push
cmpl
mov
adc
mov
or
push
insl
lods
dec
add
mov
cmp
sub
mov
jp
repnz
jle
and
jnp
call
in
repz
fisubrs
dec
mov
xorb
adc
cli
andb
and
add
comiss
mov
mov
adc
stos
std
shlb
adc
cmp
fmul
mov
jno
lock
jae
xchg
jne
lea
faddl
enter
mov
mov
out
adc
es
mov
repnz
xlat
adc
repz
movl
fidivrs
mov
ja
sub
test
fs
mov
xchg
mov
pop
scas
ja
stos
mov
rdpmc
ja
out
pop
mov
in
sahf
cmp
cmpsb
push
in
mov
pop
sub
fstl
push
out
lahf
leave
push
popf
mov
imul
mov
lods
leave
or
nop
inc
mov
js
es
lds
pcmpeqd
rcr
push
imul
scas
out
loop
rcll
ljmp
leave
lahf
mov
mov
rcrb
jbe
sub
adc
jp
pushf
inc
loopne
in
dec
jmp
aad
lds
pop
mov
gs
sbb
mov
movsb
push
imul
push
lcall
jbe
mov
jae
xchg
mov
xlat
cli
out
xchg
jae
ret
push
insl
pop
lcall
lret
mov
pop
mov
lcall
out
fwait
cmp
pop
dec
int
test
lock
xor
out
sub
fiadds
lret
cld
in
mov
xchg
sahf
stos
subb
cmp
rolb
mov
jae
mov
sub
call
out
in
scas
pushf
or
out
aam
push
xchg
out
cmp
push
scas
lret
popf
push
push
mov
gs
adc
outsl
or
divb
push
or
addl
pop
sub
mov
xor
sbb
xchg
mov
sub
xchg
mov
pushf
xor
pop
pop
sub
loope
bound
inc
lahf
js
int
sbb
popa
push
dec
push
cmpsb
in
std
int
pop
xor
adc
adc
dec
imul
xchg
scas
sub
insl
mov
cmp
xor
shl
fldl2e
out
inc
outsl
mov
outsb
pop
idivl
jbe
mov
cmp
jle
cmp
push
jbe
xor
daa
mov
loop
and
xor
enter
dec
jns
outsl
pusha
pop
out
in
ret
push
movsb
shlb
jmp
sbbl
mov
xlat
xor
pop
add
xor
outsl
mov
outsb
mov
sahf
shl
int3
add
ljmp
mov
aad
sbb
out
xchg
cltd
cmp
ljmp
out
pop
mull
dec
mov
mov
adc
int3
inc
or
mov
out
cmp
loopne
loop
shll
mov
int3
push
push
fcomp
mov
pop
or
adc
fsubrl
fwait
insb
inc
in
mov
push
jp
call
test
cmp
inc
sti
gs
xlat
std
roll
pop
cmp
mov
jl
js
mov
mov
pop
addl
inc
adc
pop
dec
mov
lret
inc
dec
int3
mov
or
adc
xchg
cmp
jo
popf
lods
or
rol
decl
sub
out
add
dec
xchg
lock
xchg
push
ret
mov
out
punpcklbw
inc
cmp
fdivrl
in
jmp
mov
mov
mov
dec
dec
mov
inc
cwtl
or
ss
adc
cltd
jns
cmp
ret
cltd
xchg
test
fisttpl
jge
mov
sahf
imul
adc
push
xchg
dec
aaa
add
cmpsb
jbe
movl
jp
or
push
orb
mov
and
push
ljmp
cmp
or
fisubs
pop
lcall
jmp
adc
incb
mov
xchg
mov
mov
mov
push
mov
shll
popa
mov
jge
pop
inc
leave
roll
lods
shrl
sub
push
iret
enter
insb
loope
pop
or
clc
cmp
mov
cld
aas
pinsrw
add
leave
daa
stos
sub
outsl
mov
out
pusha
push
scas
mov
imul
xor
rdtsc
xchg
mov
jmp
dec
and
xchg
pop
inc
sub
cmpsb
mov
pop
xor
lcall
push
pop
repz
lds
insl
mov
inc
jl
push
mov
sbbl
scas
or
movsb
test
push
and
gs
mov
dec
pop
or
jecxz
inc
sbb
dec
mov
adc
dec
adc
faddl
sbb
insl
ss
jle
add
mov
cmp
movsl
cmc
sarb
cmp
pop
in
imul
sbb
sahf
mov
out
pop
sbbl
icebp
stos
scas
jnp
push
xor
adc
dec
cs
outsl
mov
pop
enter
or
out
cmp
out
cmp
jl
ja
xor
popa
mov
dec
cli
in
adc
xor
movsl
cmp
pop
int3
aaa
lret
das
rol
sub
fidivrl
push
imul
in
jle
add
push
or
pop
test
ja
negl
popf
fld
rcll
shl
inc
mov
jne
mov
jmp
sbb
and
and
pop
xchg
in
cltd
repnz
add
add
call
mov
testb
mov
lods
popf
jne
add
adc
mov
sahf
add
mov
std
jg
cmc
stos
mov
jg,pt
jge
cmp
mov
pop
sub
das
test
lahf
jne
ljmp
into
jnp
leave
or
mov
mov
dec
dec
aad
repnz
arpl
or
call
mov
dec
cs
inc
cmp
test
insl
and
loope
sbb
sbb
push
sbb
sbb
std
and
dec
fwait
push
jb
jle
clc
adc
xchg
xlat
cli
pop
pop
sbb
nop
sub
jge
mov
inc
fldt
xor
add
scas
add
lret
xor
adcb
push
xor
stos
add
push
inc
repz
sahf
out
xor
pop
xor
sbb
push
call
jl
xor
in
mov
adc
sti
inc
stos
mov
cmp
jecxz
cmp
sub
in
stos
push
mov
into
addr16
jecxz
popa
mov
cmp
push
pop
pusha
mov
adc
js
sbb
popa
loopne
lcall
fisttps
test
inc
arpl
dec
jae
inc
lods
jbe
iret
test
shll
cmp
sbb
mov
mov
mov
add
leave
es
pushf
xor
xchg
add
cmp
mov
push
pop
jno
add
pop
out
xchg
jnp
xchg
push
test
dec
sahf
sbb
iret
cld
sub
ficoml
je
pop
mov
add
cmpsb
jmp
fcmovu
scas
leave
sub
dec
mov
mov
rolb
ror
stos
stos
push
mov
jmp
push
dec
mov
inc
lahf
test
aaa
movl
jl
mov
inc
xor
push
stc
out
jp
loope
sti
scas
call
push
jg
dec
test
sbb
scas
ja
les
imul
push
into
dec
adc
bound
fs
xchg
flds
int
push
pop
call
adc
push
rol
fdivr
ret
dec
jmp
lret
push
fisubl
dec
pop
fstl
push
int
push
mov
cmp
insb
jae
lods
popa
cmpsl
inc
lret
rcll
cwtl
pop
aas
data16
divb
loopne
pop
inc
add
pop
std
scas
sub
or
ja
jmp
mov
inc
or
inc
adc
push
mov
js
shll
sbb
cmp
xor
aam
xchg
pushf
outsl
shr
in
lmsw
sub
in
inc
or
out
adc
ds
sub
xor
mov
dec
mov
ficoms
sub
adc
mov
mov
ljmp
fsubrl
or
sub
xchg
mov
cli
mov
ficomps
or
aaa
jo
fldl
dec
mov
sahf
int
nop
sbb
filds
pop
or
dec
inc
pop
iret
inc
clc
clc
test
inc
jne
jle
and
pop
es
test
cmp
xchg
and
push
mov
cmp
aaa
pop
cmp
xchg
xorb
mov
aad
add
sti
roll
xor
adc
sub
outsb
xchg
add
sbb
push
jbe
inc
sarb
adc
mov
xor
mov
xchg
pusha
decl
je
jecxz
test
insb
sub
sbb
imul
sub
push
arpl
jbe
clc
jnp
popa
xchg
out
lods
pop
pop
ror
repz
xchg
jns
movsb
push
aas
stc
test
cmpsl
cld
xchg
cs
mov
insb
pop
enter
fxtract
add
xor
mov
test
pop
jl
dec
mov
inc
repnz
arpl
mov
mov
dec
sbb
fildl
inc
cmc
adc
movb
or
mov
shl
rcll
push
aaa
push
pop
mov
pop
iret
stos
inc
inc
mov
dec
fstpl
sub
dec
mov
divb
push
fidivs
fsubrl
dec
and
mov
fisubrs
xchg
dec
mov
stos
ficoms
icebp
ds
cmp
mov
mov
xchg
or
add
enter
cli
mov
inc
orl
or
cmp
idivb
cmpsl
nop
add
loopne
ret
dec
gs
xchg
mov
mul
scas
mov
out
mov
mov
nop
cwtl
or
loope
aam
push
xor
outsl
sbb
scas
and
ss
and
mov
mov
sbb
cmp
dec
jne
push
lods
pop
adc
ret
outsb
inc
xor
fcom
add
xor
push
lret
sahf
inc
sbb
rorb
add
mov
cmc
sbb
dec
mov
int
mov
enter
lea
sti
dec
sbb
stc
cltd
leave
lret
sub
add
movsb
insl
sub
ficoms
ret
inc
movsb
dec
ret
jae
jns
and
sti
aam
add
push
lcall
mov
dec
test
xchg
cmp
ss
cmp
mov
cmp
xchg
stmxcsr
cltd
cld
std
pop
xor
add
cwtl
jae
xor
in
lods
sub
inc
pop
mov
sbb
dec
fwait
sub
mov
test
aam
cmp
mov
fwait
cmp
mov
push
aad
jne
sub
leave
aad
jne
and
mov
nop
cmpsl
outsb
mov
sbb
inc
mov
outsb
and
push
add
or
out
out
aas
pop
jbe
into
adc
sub
mov
rep
fs
and
sub
mov
es
fistpl
xchg
ljmp
shll
js
aam
negb
push
movsl
sti
push
pop
cmp
scas
lods
lods
adc
movsb
repnz
and
les
push
loop
mov
nop
loope
jae
xor
jecxz
jb
add
and
mov
xchg
inc
dec
xor
stos
shrl
sub
mov
jno
insb
jl
shrb
leave
jp
xchg
sbb
test
ret
test
aad
push
lock
sbb
nop
pop
mov
sub
push
in
xchg
jb
mov
outsl
int
or
lret
scas
adc
popf
insl
les
shll
xchg
xor
add
fidivrl
xchg
jge
mov
sarl
popa
mov
add
sbb
cmp
addb
xor
jo
sub
daa
jg
xchg
cwtl
bound
insb
sahf
sub
or
in
adc
adc
test
fadd
mov
mov
ret
rolb
in
sbb
and
cmp
loopne
and
add
bound
rcl
pop
setg
cs
push
div
cs
mov
fwait
cs
jmp
sub
pop
dec
stos
mov
in
pop
int3
gs
cmc
push
jo
cwtl
out
insl
jo
addr16
mov
sti
shll
vsqrtps
test
nop
sbb
pop
mov
pop
jecxz
mov
or
mov
sbb
xchg
movsb
jns
push
in
lods
scas
andl
inc
adc
xor
and
ss
xor
mov
dec
xorb
fsubrl
insl
jmp
popa
lahf
into
mov
jno
xchg
setge
inc
or
pusha
clc
add
dec
pushf
imul
shll
stc
jnp
subl
mov
pop
and
popf
loope
dec
ds
mov
dec
push
cmp
push
test
fcompl
mov
xchg
jns
pop
xchg
xor
mov
add
mov
imul
je
cmc
stos
xor
push
subl
inc
cmc
cmpsb
loopne
cwtl
cwtl
mov
adc
shll
or
xor
in
test
lods
hlt
leave
add
lret
push
xorl
mov
mov
dec
jge
ja
adc
sbb
sarb
pushf
mov
pop
ja
push
in
popa
inc
iret
and
icebp
jge
ret
inc
cmpsl
push
leave
pop
add
mov
mov
and
mov
cmpsl
sbb
or
or
repz
das
lock
imul
cmp
cmp
inc
cwtl
es
enter
int3
sbbl
stos
imul
mov
shlb
pusha
fcom
into
in
push
mov
fldcw
shll
inc
push
push
sbb
sub
dec
loop
mov
mov
repnz
and
call
sti
in
in
mov
and
loope
inc
cmpsl
lret
out
dec
pop
into
pop
out
add
out
out
and
dec
pop
xlat
xchg
cmc
sub
out
data16
and
push
shr
push
or
and
push
pop
lds
pop
into
mov
outsl
loopne
mov
dec
mov
das
int3
push
cmp
rolb
or
scas
cs
test
shrl
mov
add
jae
cmp
sbb
dec
repz
mov
mov
xor
inc
xchg
testb
leave
test
sar
inc
jmp
cmp
mov
insl
mov
xor
data16
aaa
push
adc
xlat
sarb
adc
mov
xchg
in
cs
cli
pop
nop
lea
push
sub
mov
test
pop
jecxz
mov
movsb
adc
popa
aad
cmp
and
mov
add
test
hlt
add
or
rcr
dec
pop
and
leave
xchg
cltd
nop
mov
cmp
lret
xchg
pop
mov
ss
pop
shr
lret
cli
imul
xor
or
aas
jnp
shr
in
into
lret
mov
insl
daa
dec
push
push
inc
outsl
ja
mov
or
in
jo
fldl
xchg
sub
repnz
addr16
xor
lahf
sarb
cmp
or
ret
into
lahf
mov
jmp
add
and
push
repz
in
pusha
pop
jmp
sub
sub
mov
test
das
jnp
fisttpl
xor
jp
cmp
sahf
sbb
call
mov
loope
or
adc
frstor
sub
icebp
or
xchg
call
xchg
adcb
idiv
or
addr16
sbb
xlat
xchg
dec
sbb
testb
sbb
jb
xor
enter
or
call
xor
pop
adc
and
sbbb
sbb
jl
sub
lds
jbe
test
jo
cli
push
dec
loop
in
in
xchg
scas
rcrl
cmp
decl
cltd
enter
loop
jmp
push
inc
les
fmuls
jne
cmp
mov
test
sbb
jb
pushl
adc
shl
dec
add
loopne
nop
mov
popa
out
dec
scas
pop
push
aad
add
pop
push
mov
stc
sub
data16
movsb
inc
jae
and
add
mov
test
or
sbbl
sub
cmp
decb
add
xor
in
cs
push
cli
aam
add
rorl
and
stc
stos
rcll
mov
dec
sub
mov
repz
push
xchg
add
sub
call
jle
xorb
sti
pop
cmpsb
test
xchg
add
nop
out
mov
movsl
movsl
pusha
jl
cmpb
mov
sbb
dec
stc
les
or
xchg
ficompl
and
incb
dec
popf
and
mov
add
jmp
mov
vphaddubd
out
pop
cltd
into
inc
mov
cmp
push
inc
repz
jnp
xlat
in
repnz
mov
dec
add
push
xor
adc
or
mov
push
pop
cmpsl
xchg
jbe
mov
rclb
cmp
mov
and
insl
loope
stos
pop
mov
stc
add
xor
ret
push
fs
jp
loopne
push
fimuls
insl
inc
xor
hlt
pop
lcall
fiadds
cmpl
xchg
xchg
inc
push
fldenv
pop
xor
mov
jmp
sbb
xor
mov
imul
imul
and
push
mov
or
push
mov
sbb
mul
or
adc
xor
pop
bt
lock
dec
std
fdiv
out
mov
inc
leave
jae
cmp
leave
mov
pop
sbbl
inc
fwait
fs
dec
mov
mov
mov
test
jle
sahf
sbb
adc
bound
pop
and
xchg
or
bound
imul
add
notb
mov
call
mov
push
stos
ffreep
add
clc
sbb
fistl
daa
push
lret
clc
imul
into
ljmp
and
jge
ret
std
push
testl
sub
pusha
lcall
xchg
push
icebp
rcl
cmp
mov
mov
cmc
dec
mov
jg
mov
imul
pop
mov
shrl
mov
pop
out
mov
pop
sub
bound
outsb
jbe
mov
outsb
cmp
or
cmpsb
cmp
testb
fistpl
xlat
out
repnz
pop
xor
mov
pop
push
out
and
xchg
ret
mov
aad
ficoms
sahf
adc
cmp
xchg
repnz
shll
inc
ret
in
mov
mov
les
fcompl
adc
pop
sar
movb
add
add
lret
pop
jg
test
and
fs
mov
xor
fadds
scas
mov
shl
or
scas
shlb
stos
jge
xacquire
loope
sub
mov
inc
sbb
jp
and
cmp
scas
iret
rolb
outsl
sbb
or
push
and
xor
mov
pop
mov
insl
xchg
push
mov
mov
xchg
mov
mov
fistpll
adc
aam
rcrb
sub
shlb
mov
mov
adc
mov
sbb
aad
adc
inc
mov
gs
aas
loopne
cmp
ds
push
mov
aaa
xchg
ja
pop
bnd
cmp
int3
imul
aas
subl
rcl
sub
loope
test
xor
icebp
aaa
inc
into
fwait
cmp
ret
dec
ljmp
push
call
imul
push
fdivrl
xchg
and
sbb
popf
arpl
shr
shr
shlb
push
mov
inc
xor
rorb
xor
sahf
std
or
jle
xchg
das
test
data16
bound
addl
inc
in
add
pop
mov
cmp
mov
movsb
push
mov
js
sbb
mov
pop
je
or
rclb
int
psadbw
sbb
jmp
mov
add
inc
mov
dec
pop
and
sbb
push
inc
lret
dec
mov
out
inc
aas
mov
lretw
imul
and
sahf
sbb
fimuls
std
fstpl
clc
sbb
aad
sub
mov
cmp
imul
fistps
cmp
lret
fsubr
call
rclb
and
xor
push
mov
lea
push
xlat
mov
dec
and
imul
stc
das
ficoml
push
mov
js
lods
lea
jbe
enter
jge
shrl
adc
xchg
mov
cmp
and
adc
insb
in
popa
sub
xor
inc
aam
and
mov
cmp
sti
sbb
mov
xor
enter
jecxz
pushf
push
iret
test
push
imul
push
scas
iret
mov
nop
xchg
dec
cmp
dec
inc
adc
xchg
xor
push
xor
call
mov
js
cmpsb
push
mov
fs
fsub
adc
test
and
mov
pop
mov
test
lds
clc
adc
sbb
das
xor
push
xchg
mov
jmp
fidivs
adc
jo
daa
outsl
test
ds
inc
dec
fldln2
push
sbbb
mov
lahf
cwtl
mov
sbb
or
push
and
aam
sahf
arpl
lods
adc
mov
dec
mov
pop
dec
div
rclb
fcmovb
loope
dec
inc
add
sbb
je
mov
mov
ljmp
pop
push
xchg
fcmovnu
xchg
fists
nop
cmp
div
jp
fucom
das
push
xchg
push
test
es
lahf
idivl
dec
and
adc
mov
adc
mov
inc
rcll
push
dec
fildll
insb
add
mov
lret
bound
cltd
mov
mov
and
add
fsubrl
loope
idivl
hlt
adc
jl
add
repz
popa
lret
mov
shrl
add
xchg
mov
loopne
cmp
xchg
sbb
test
ss
mov
inc
test
mov
dec
das
xor
or
jnp
mov
test
and
dec
xchg
popa
mov
lds
add
ret
imul
add
aad
mov
adc
scas
xchg
imul
and
sub
xor
cs
push
mov
ffreep
pop
or
sbb
movsb
jne
test
cmp
pop
add
mov
icebp
decb
repz
mov
dec
outsl
dec
shrb
fistl
mov
fnstenv
mov
mov
jmp
frstor
sti
fucomp
cmc
out
push
stc
data16
sbb
xchg
test
in
xlat
lods
lret
or
insl
push
ds
rorl
fdivrs
es
bound
vcvtdq2pd
add
aam
lea
pusha
jp
mov
mov
push
test
mov
mov
xor
lods
test
in
mov
add
adcl
mov
sbb
lcall
gs
push
fisttpl
add
lahf
test
fmull
dec
cmp
dec
or
mov
movsb
shll
inc
adc
jo
adc
or
cmp
fisttpl
sbb
aaa
xor
sub
dec
mov
sahf
pop
add
enter
jb
ret
xlat
loope
test
addr16
ficompl
rorl
hlt
cmp
lods
cmp
test
jnp
add
sub
addr16
add
lret
xchg
cmp
leave
and
icebp
inc
les
fs
ret
dec
insb
repnz
and
jo
push
fisubrs
arpl
sbb
rolb
inc
xchg
imul
mov
enter
push
pop
jbe
or
push
shlb
jae
mov
xchg
push
add
aam
data16
daa
add
movsb
cld
pushf
insb
sbb
xchg
adc
xlat
sub
xor
cmp
push
fisubrl
andb
xor
adc
addr16
dec
jmp
xchg
adc
xor
mov
sti
bound
rcll
or
xchg
subl
shll
call
lock
lds
fsub
ja
add
fsubl
and
fiadds
in
cltd
scas
dec
mov
xchg
push
xchg
cmpsl
sti
ja
inc
or
xor
ficoml
dec
jbe
jmp
sarb
out
les
in
mov
mov
aas
xor
mov
mov
cmpsb
push
insl
cli
clc
divl
dec
sub
mov
arpl
jmp
in
dec
push
pop
pop
ret
shl
or
and
repnz
fwait
insl
pop
insb
cmp
jne
and
inc
fnstcw
adc
pusha
in
push
imul
mov
andb
cs
out
lea
lahf
mov
arpl
inc
jg
jns
jb
repz
sbb
push
ja
lods
pushf
sbb
push
adc
addr16
cmp
lret
test
mov
divl
add
or
mov
rcr
dec
pop
mov
dec
inc
maxps
mov
pusha
add
push
cwtl
stos
fisubrs
xlat
xor
jg
fcomps
sbbl
add
fisubl
sub
mov
aam
cmc
lods
movsl
loopne
repz
adc
fwait
sbb
cld
loop
cmp
sub
adc
les
mov
mov
aaa
and
fwait
outsb
jg
and
inc
mov
mov
push
ja
fwait
sub
mov
xor
jbe
das
sub
sbb
fisttps
mov
jge
ret
cmpsb
rol
and
cli
mov
mov
insb
xor
out
push
inc
loope
dec
les
lds
add
rcrl
adc
mov
push
mov
nop
cmp
add
out
jge
arpl
ljmp
xlat
into
jne
das
outsb
cmpsl
push
fisubs
lock
enter
add
mov
xor
xchg
cmpsl
movsl
movsb
sbb
iret
dec
sub
lret
mov
bt
xorb
sarl
adc
pop
dec
dec
inc
inc
and
add
daa
cmpsl
mov
pop
lods
and
lock
ds
icebp
sahf
mov
aad
lods
cmp
adc
pop
jmp
call
sub
ret
icebp
sbb
mov
loopne
aas
push
inc
cmp
jl
jg
mov
xchg
jae
stos
loope
mov
or
in
int
mov
pop
inc
aas
fistps
mov
jp
shl
and
fisttpl
iret
pop
adc
daa
cwtl
stos
sbb
push
adc
sahf
cwtl
cmpl
je
xlat
and
xchg
xchg
jbe
xchg
and
in
out
aas
push
sub
lods
xor
pop
xlat
add
dec
jns
lods
rclb
jp
filds
push
dec
lods
int3
test
pop
xchg
adc
cmpl
xchg
mov
ficompl
jnp
sub
movsb
out
icebp
nop
and
into
outsb
pop
mov
or
push
lahf
cmp
mov
fldl
mov
stc
dec
or
out
lcall
pusha
lock
pop
pop
insl
sbb
or
ja
in
bound
or
cmpsl
lea
inc
std
cmp
cmp
xor
movsb
lahf
or
mov
movsb
xor
lock
and
mov
testb
jnp
clc
aas
loopne
daa
mov
fucomip
int
lahf
jecxz
ds
pusha
mov
inc
movsb
fcompl
jmp
sbb
je
sbb
fcompl
mov
xchg
push
and
and
mov
fistl
and
jecxz
inc
jns
sbb
fstps
lods
mov
dec
and
sub
fstps
scas
mov
inc
mov
cmovbe
sub
sbb
dec
mov
mov
pop
ja
lock
test
and
sub
jbe
and
aaa
sub
push
out
mov
xchg
xlat
fstl
scas
sarb
scas
flds
mov
push
jl
mov
mov
aam
pop
or
mov
add
inc
icebp
jnp
testb
mov
sbb
das
mov
cli
jno
or
jbe
cmpb
icebp
loope
jae
mov
sub
and
cmpsl
cmpsb
jns
pusha
inc
xor
adc
sarl
shlb
cmpsb
enter
add
notl
int3
testb
add
lret
outsb
pop
movsb
inc
fisubl
rcrb
mov
lea
pop
jp
test
push
loope
sub
mov
loopne
mov
cwtl
mov
mov
add
popa
clc
or
sub
cmpsb
std
gs
jo
dec
and
sub
jecxz
mov
popa
mull
out
leave
xchg
mov
jae
add
xchg
pop
add
push
pop
dec
mov
into
cmp
jns
cltd
imul
dec
sub
jecxz,pn
icebp
mov
clc
mov
aad
lds
lcall
push
fnstcw
adc
jnp
jecxz
jl
std
shrb
out
stos
stc
lea
shrb
loopne
sbb
or
rclb
jl
jl
int3
or
stos
sarb
mov
repnz
mulb
jb
std
int
aas
dec
mov
insl
pop
lret
mov
inc
inc
inc
mov
push
pop
cli
mov
mov
fcomip
loop
cmp
and
mov
push
scas
mov
fldl
mov
fisubrs
sub
add
jb
imul
loopne
imulb
mov
cmp
cltd
outsb
sbb
test
dec
aad
dec
mov
add
fcoms
cvtps2pi
int
jle
xchg
sbb
add
bswap
scas
sbb
dec
lods
insb
incl
push
inc
iret
repnz
int3
lods
cld
add
gs
notb
inc
inc
and
sub
ss
pop
pop
std
lret
pop
mov
inc
test
mov
popa
pop
in
pop
popf
pop
push
out
add
inc
jle,pt
push
mov
cmp
inc
loope
ficoml
jecxz
jp
and
lea
xor
push
dec
pop
sub
cmp
xchg
adc
movl
int
mov
cmp
cmp
pop
add
pusha
xchg
stc
push
or
das
push
rcrl
out
in
pop
imull
test
fldcw
mov
test
fs
jmp
lods
enter
push
pushf
int
adc
stos
dec
dec
lcall
bound
or
dec
daa
fisubrl
and
jnp
mov
addb
mov
xorl
jnp
mov
pop
mov
int
gs
test
add
aam
orl
cwtl
fwait
adcl
pusha
mov
fucomip
imul
out
fwait
rcrl
fwait
insb
cld
lods
sub
mul
jge
arpl
mov
out
xchg
fisubrl
test
or
push
or
popf
daa
dec
jno
insb
inc
neg
and
pop
scas
and
aaa
jp
push
roll
aaa
xor
and
mov
jp
lcall
pop
enter
cmp
ss
jg
popf
sahf
adc
cmp
cmp
mov
mov
leave
xchg
aad
push
inc
pmullw
sub
and
aaa
adc
das
cld
stos
pop
mulb
xor
lret
arpl
adc
adc
pushf
cmp
les
shll
leave
cmpsl
fmulp
aam
xchg
fldl
xchg
and
sbb
cmp
popa
movsb
mov
jle
hlt
pop
sahf
ds
or
push
xor
inc
inc
ds
sub
dec
lahf
test
hlt
hlt
jno
push
or
xchg
lret
mov
lds
add
lret
push
popa
repnz
add
inc
inc
jg
int3
stc
or
xor
mov
jo
in
pushf
push
cmc
mov
out
outsl
jnp
push
fmull
fimuls
in
push
divb
sti
add
fidivrs
mov
aas
rcr
push
push
add
movsb
push
pop
dec
imul
mov
hlt
mov
testl
pop
imul
xchg
fildl
test
pop
pop
ja
test
cmp
ffree
adc
ja
sbb
cmc
aad
lock
rcr
add
f2xm1
les
jo
scas
cwtl
lds
mov
scas
arpl
mov
inc
xor
adc
andl
shlb
dec
pop
shrb
cmp
pop
mov
dec
jle
in
movsb
outsb
pop
rolb
into
enter
cli
dec
jo
push
push
mov
lcall
cmp
adc
jp
lods
xchg
and
fnstcw
and
adc
sbb
adc
xor
jns
popa
and
dec
cmpsb
daa
cmp
sbb
mov
xchg
sub
jle
add
fdivrl
ss
jle
adc
hlt
je
inc
ds
cwtl
pusha
add
ja
and
and
ljmp
adc
xchg
cmp
jp
scas
dec
jne
test
adc
ljmp
lea
scas
xchg
movsl
mov
inc
pop
clc
scas
pop
xchg
pop
pop
popf
jo
mov
js
cli
adc
mull
sub
mov
mov
stc
pop
insl
pop
in
sti
ret
pop
push
adc
mov
sbb
push
add
out
pusha
xor
iret
push
adc
dec
out
push
stos
inc
xor
cmc
mov
imul
push
fwait
lahf
test
pop
fildl
pop
add
fwait
xchg
xor
inc
orl
xor
pusha
movsb
jecxz
das
repnz
loope
adc
ss
xor
ja
aas
push
stos
xchg
and
or
aas
pop
mov
stc
hlt
ficompl
sbb
call
mov
push
iret
cmp
nop
xchg
sbb
bound
mov
loope
inc
pop
ljmp
adc
pop
imul
jns
icebp
js
leave
cmp
or
jecxz
pop
scas
pushl
adc
dec
in
loopne
rcll
jae
add
inc
stos
test
inc
clc
jg
fcmovnu
lret
cmp
dec
arpl
mov
mov
mov
imul
cmpsl
daa
dec
dec
jmp
loop
push
fldt
xchg
or
out
or
push
pop
test
add
fisttpl
shlb
insb
sub
cli
and
stos
dec
and
aaa
push
pusha
sbb
aas
inc
mov
aad
mov
xchg
popf
mov
dec
push
add
dec
imul
stos
sti
into
sub
jae
cmpsb
dec
aaa
mov
mov
cltd
sbb
subl
or
adc
pop
push
outsl
movsb
inc
aad
fnstcw
popf
inc
sbb
imul
inc
jl
inc
sub
xor
or
lds
sub
lahf
lock
pop
orb
daa
sub
movsl
adcb
pop
es
jbe
nop
das
iret
xorb
sbb
fbstp
divl
jle
add
xlat
and
pop
pop
imul
rorl
sub
call
shrl
fdivs
bnd
popa
pop
or
mov
sub
es
imul
sbb
sbbb
outsl
stc
test
out
sbb
xchg
mov
fcoms
adc
mov
jecxz
lods
fcoms
sub
mov
push
rcrb
jmp
or
idiv
mov
insl
repz
jle
pop
enter
das
xor
iret
xchg
sub
icebp
ja
shll
rcrb
cmp
xor
mov
fisubrs
ffreep
stc
fsts
arpl
out
sbb
cld
insl
mov
adc
mov
sbb
sbb
rcrb
fidivrl
xor
sbb
or
test
and
pop
shr
add
add
push
gs
ss
and
mov
push
jg
jecxz
loopne
dec
in
and
popa
mov
mov
jns
add
adc
test
jp
mov
inc
ds
nop
xchg
bound
adc
push
or
inc
fs
int
aad
adc
or
jecxz
not
push
push
cwtl
hlt
ret
movb
loope
sbb
pop
movsb
test
inc
sbb
js
in
lahf
orb
sub
mov
insb
and
mov
stos
mov
int
jp
jl
repnz
fidivs
xchg
mov
mov
dec
sbb
xchg
loop
movsl
xor
inc
dec
enter
scas
aad
imul
mov
dec
xchg
and
bound
jbe
loope
mov
js
add
popa
out
pop
out
jnp
not
push
adcl
mov
repnz
mov
cltd
testl
push
mov
aad
or
data16
test
or
and
xchg
faddl
movsl
xor
and
es
mov
jae
xor
inc
inc
sar
stos
outsl
sub
mov
sub
test
fstpl
out
roll
cmpsl
push
test
push
ret
fildll
sbb
cmpsl
add
jbe
jle
test
test
icebp
mov
gs
mov
popf
push
pushf
mov
adc
fnsave
jb
cmpsl
cmpsb
cmp
inc
cmp
push
cli
insl
xor
movsl
pop
jbe
and
sub
mov
into
shll
jmp
mov
cmpsl
shll
dec
jne
mov
or
outsb
cmpsb
or
nop
or
rclb
jae
pop
push
ret
call
xor
jg
xchg
out
imul
push
push
add
idivl
loope
mov
dec
idivl
fwait
cmp
rolb
jae
js
inc
mov
jmp
fsubs
mov
sti
arpl
xchg
jbe
pop
mov
adc
push
push
pop
ss
pop
rcr
dec
inc
lds
ret
jbe
inc
add
and
pop
arpl
ja
out
jnp
mov
test
mov
aam
sbb
mov
or
sub
popf
out
outsl
pop
adc
movsl
call
in
sbb
int
cmpl
cmp
sbb
aad
xchg
adc
dec
xchg
in
jmp
scas
out
int
fchs
dec
insb
outsb
xchg
jmp
sub
ja
shl
xchg
sbb
shll
push
aas
add
lods
mov
jbe
cmpsl
lea
cmpsb
shrb
ret
icebp
les
clc
loop
xchg
xchg
sbb
sbb
scas
test
sti
adc
mov
mov
repnz
ret
pop
push
outsb
pop
xchg
cmp
mov
mov
mov
sub
push
jg
or
mov
push
xchg
mov
std
sub
rcrl
sbb
mov
adc
jae
dec
daa
jmp
jne
push
jbe
into
aam
popa
ljmp
mov
dec
mov
sbb
dec
lahf
test
sarb
int3
into
jle
xor
push
push
xor
sahf
push
out
mov
shlb
dec
sbb
add
and
dec
push
pushf
syscall
int
dec
imul
mov
push
sub
mov
fsubp
andl
aaa
fwait
mov
pop
imul
pop
adc
cmpsb
out
lcall
dec
test
pop
push
mov
mov
fildl
jbe
sbb
xchg
sub
shll
adc
sarb
lahf
mov
mov
jle
mov
repz
aad
lcall
sub
cmpsl
out
sbb
push
lea
adc
mov
inc
xchg
fs
out
imul
xchg
inc
xchg
js
pushf
test
sub
nop
xchg
mov
jecxz
xor
subl
rolb
cltd
jge
xchg
fstpt
mov
stos
addr16
negb
push
push
xchg
dec
xor
cld
inc
mov
movsb
adc
je
push
cwtl
sub
popa
loop
jno
add
cmc
and
push
fs
lret
jecxz
push
lods
xchg
test
ljmp
dec
and
cmp
pusha
fstpl
add
fbstp
js
add
test
fistl
dec
lds
jmp
add
scas
pop
cmpb
mov
jecxz
mov
xchg
push
test
push
mov
mov
push
sti
dec
cmp
test
arpl
cltd
mov
orb
sub
std
jbe
xchg
xor
fs
xlat
inc
stos
push
cmp
lcall
popa
mov
notb
hlt
cmp
pop
and
rcll
in
xlat
dec
mov
repz
mov
cmp
sahf
lods
mov
outsl
inc
lock
outsl
mov
enter
xchg
mov
mov
fsubrs
xor
rorb
mov
fsubrs
in
inc
je
sbbl
pop
and
hlt
stc
xchg
addr16
or
xchg
add
iret
in
repnz
test
jmp
xlat
lods
icebp
push
shl
jmp
add
mov
dec
je
cmp
clc
in
imulb
adc
lock
outsl
repnz
pop
adc
cmp
mov
jno
jne
xor
push
or
pop
repnz
stos
adc
jl
add
lock
mov
inc
xor
rcl
js
hlt
out
setae
lret
fstpt
sub
xchg
xchg
loopne
insl
popl
xchg
cs
add
aam
jae
lds
data16
inc
cmpsl
test
cmpsl
sub
pushf
dec
or
add
test
adc
ret
cld
jge
clc
idiv
or
add
dec
push
jbe
outsl
rcrl
mov
lret
mov
in
fisubs
pushf
dec
push
popaw
adcb
jecxz
pop
andl
addb
ret
outsl
and
je
das
std
jg
iret
movsb
xchg
cmp
adc
sub
mov
mov
outsl
push
mov
sub
aad
loop
popf
pop
shrb
jo
pop
ja
mov
movsb
cld
divb
inc
or
mov
nop
popf
mov
push
imul
pop
and
std
ds
testb
sub
cmp
and
dec
mov
pop
push
lods
push
es
push
mov
mov
shlb
push
out
jg
mov
inc
cmp
mov
cwtl
hlt
das
cmpsl
lds
loop
and
pop
stos
je
xchg
dec
loope
mov
mov
add
outsl
cmp
lret
repnz
cmp
ret
iret
and
aas
adc
aam
and
jae
inc
pop
outsl
sbb
popa
xor
fwait
jmp
add
pop
jg
ret
mov
loope
daa
push
outsb
test
movq
jmp
cltd
dec
lret
push
xchg
pushf
xchg
daa
nop
jecxz
shrl
pop
pop
and
xchg
add
scas
jno
data16
popf
pop
xchg
sub
push
add
aam
mov
rcrb
cs
sarl
xchg
or
pop
mov
in
pop
imul
insb
in
xchg
test
dec
jnp
add
jbe
std
jb
cltd
shll
pop
xchg
fmuls
sbb
pop
and
jae
mov
cmpsl
or
mov
pop
xor
js
stc
cs
clc
cltd
mov
fstpl
sbb
xor
push
pop
scas
lock
outsb
inc
popf
ret
sti
jg
jb
add
arpl
mov
lret
or
ss
adcl
cmp
adc
sbb
icebp
adc
jl
jo
push
cltd
and
lea
xor
mov
test
adc
xchg
loope
in
imul
imul
repnz
push
xchg
nopl
shrl
inc
les
test
sub
adc
mov
add
sub
mov
iret
jg
lahf
das
lahf
xchg
push
and
data16
pop
inc
and
mov
js
ds
outsb
xchg
dec
mov
lea
or
fstl
sbb
jecxz
aad
sub
test
ret
in
gs
and
std
daa
mov
leave
iret
inc
mov
or
mov
testl
pop
cltd
int
sub
outsl
imul
lret
sbb
lock
jp
iret
lods
sbb
fs
lds
xchg
dec
cmp
imul
insl
sti
mov
push
movsb
add
fcmovnbe
cli
mov
sbb
mov
and
lahf
xchg
mov
sbb
sar
bound
and
add
mov
clc
lea
imul
push
or
dec
shr
cli
loope
inc
dec
and
mov
sub
adcb
sbb
aam
cmp
xor
adc
lods
mov
jae
in
fcompl
pop
mov
scas
pop
inc
dec
test
popf
push
adc
mov
and
daa
pop
ljmp
cmp
mov
test
mov
adc
scas
loope
sbbb
mov
notl
sahf
sub
rcll
es
aam
lea
aam
xor
call
aaa
scas
dec
dec
jl
sarb
sahf
daa
xor
adc
sti
loope
cmp
or
dec
and
mov
pop
jae
jecxz
cli
gs
push
sbb
imull
es
or
push
cmp
sti
and
fwait
jge
sbb
pop
pop
push
sub
or
pop
inc
xchg
mov
shlb
cs
push
adc
pop
inc
mov
inc
sub
shl
fisubrs
dec
xchg
lret
push
movb
in
ror
xchg
xchg
dec
insb
loopne
cwtl
add
test
jne
aaa
or
cld
inc
arpl
cmp
and
inc
test
cmpsb
or
dec
sub
cmp
out
out
xor
pop
adc
mov
dec
cmp
xchg
lret
scas
cmp
int
test
jbe
negl
aas
das
xchg
dec
cli
outsb
add
je
test
xchg
push
dec
sub
and
push
mov
xchg
les
mov
sub
lock
and
adc
push
or
cmp
mov
shlb
mov
dec
xlat
jnp
jmp
outsb
fcomip
cld
xchg
lods
pop
pop
roll
ss
jp
je
xchg
das
push
jl
nop
sbb
or
push
xchg
imul
jno
insl
ret
pop
fstpt
dec
xor
repnz
int
inc
stos
inc
ds
mov
inc
mov
mov
test
jne
mov
popa
daa
in
lcall
icebp
pusha
test
mov
xchg
add
jb
jmp
add
jno
mov
popf
sbb
xchg
leave
mov
jo
lods
sti
jae
les
popf
fdivrs
jb
out
sub
dec
sub
data16
and
cmpsl
xchg
inc
fsubrl
dec
lret
xor
pop
or
jnp
ljmp
lahf
mov
rcll
xchg
lea
or
stos
movsb
jo
xchg
fildll
cmp
jge
mov
mov
fiaddl
repz
lret
xlat
adc
xchg
xor
jb
mov
mov
std
pop
pop
adc
mov
bswap
mov
addb
inc
xchg
fidivrs
outsb
aas
mov
fstpl
sub
and
fmull
adc
fs
and
test
mov
aam
pusha
clc
cli
lods
shl
leave
push
add
loopne
mov
xor
fstpt
xor
cmp
je
loope
xchg
imul
sarl
rcll
movsb
adc
pushf
or
cmp
and
adc
lret
loope
add
sbb
mov
mov
jecxz
andb
cmp
fwait
scas
rolb
bound
mov
xor
jns
pop
iret
dec
jnp
les
jecxz
and
jns
mov
test
mov
jnp
popa
fcompl
push
test
sbb
sbbb
stc
les
jp
cltd
sbb
inc
and
insl
sub
mov
insb
dec
mov
loop
mov
jno
stos
mov
or
popf
pop
es
fcoml
pop
mov
xor
sbb
or
adc
int3
or
int
enter
into
movsb
mov
sub
jg
dec
and
lcall
inc
xchg
adc
negb
sub
fwait
arpl
push
sarb
dec
aad
mov
imul
imul
pop
fisubs
adc
adc
mov
push
add
shll
pop
lret
sbb
or
mov
insl
and
pop
notb
dec
and
jne
inc
outsl
sub
mov
dec
inc
notb
or
sti
fidivrl
pop
or
push
inc
lods
out
test
mov
lods
xor
aam
std
push
test
imul
out
es
xchg
mov
outsb
inc
sbb
es
mov
in
sbb
sahf
into
and
in
insl
outsb
pop
jno
scas
jnp
rcll
hlt
mov
jecxz
xchg
mov
dec
lock
xchg
insb
pop
pop
add
add
mov
cmp
jno,pt
pop
fldl
sub
xor
adc
adc
mov
xchg
movsb
ret
lea
inc
nop
add
add
and
lret
cmp
sbb
jne
cs
inc
or
mov
cmp
add
inc
ret
cmp
inc
shll
cwtl
dec
sub
shlb
mov
iret
test
xor
or
sbb
es
and
mov
mov
imul
xor
lds
inc
xchg
mov
mov
inc
cmp
stc
mov
repz
cwtl
icebp
jl
das
pushf
int3
test
jbe
inc
mov
mov
jns
stos
xchg
rorl
mov
adc
jnp
mov
xchg
lcall
mov
movb
sbb
xchg
jbe
mov
dec
xchg
movsl
ljmp
mov
test
cmpsl
repnz
sub
nop
in
inc
mov
adc
popf
fildll
dec
test
fstl
lds
mov
loopne
stos
mov
dec
inc
sub
popa
push
mull
test
repnz
mov
int
test
jns
vmovupd
sbb
in
mov
cmp
pushf
fwait
lcall
jge
xor
push
out
clc
shr
sti
and
fisttps
scas
or
jo
mov
jg
sub
cmc
pop
sbb
cmp
adc
and
aaa
and
pop
mov
insl
cmp
jb
lret
bound
divb
rclw
mov
mov
sub
sarl
ret
and
add
xor
std
test
inc
cmp
xchg
stos
arpl
pop
popf
pop
ds
icebp
cmc
mov
and
cmpsl
lock
jo
pop
adc
xchg
jg
out
aam
xchg
mov
add
mov
stos
jne
rorb
mov
add
pslld
xor
lahf
adc
call
cltd
adc
xor
push
jns
lahf
movsl
dec
mov
push
pop
aas
pop
test
mov
stc
pop
lock
xor
fs
jae
add
jbe
fnstsw
loopne
aaa
call
test
mov
fidivrs
fistpl
call
sub
data16
pop
sahf
movsb
rcll
xorl
bound
lea
arpl
fcmovbe
xlat
jne
scas
cmc
mov
pop
inc
cmp
into
sub
insb
fs
bnd
loope
xor
loop
xor
ss
or
andb
pop
mov
sub
mov
daa
push
mov
stos
mov
pop
es
jmp
cmpsb
push
cs
cs
into
shrl
not
cmp
movsb
aam
rolb
xchg
dec
repnz
add
mov
in
iret
xlat
mov
negl
inc
enter
lret
push
fcomi
dec
loopne
and
mulb
sbb
imul
or
daa
xchg
pop
pop
mov
xchg
movsl
inc
daa
out
xor
xor
pop
scas
gs
addl
mov
int3
sbb
mov
sub
iret
mov
cwtl
das
fistpll
cmp
jmp
std
jmp
fdivrs
cli
mov
inc
mov
inc
enter
jns
in
push
rolb
int
jmp
pop
adc
push
jp
mov
cmp
popa
loop
rcr
arpl
cwtl
add
scas
xor
mov
mov
rcrb
jmp
ja
xor
mov
ds
mov
inc
push
and
mov
push
xchg
lret
shll
ja
jmp
test
jae
rcll
xchg
adc
lods
jbe
mov
and
sub
pop
mov
fcmove
or
iret
fwait
xchg
mov
jnp
mov
aam
loopne
scas
jb
pop
push
enter
and
xor
jae
sbbl
cs
push
repz
cs
jne
cmc
repz
cmpsl
fidivrl
cs
dec
pusha
movsl
ljmp
ror
push
lcall
xchg
cmp
repz
lret
addr16
dec
ficoms
cmpsb
scas
lea
pusha
mov
xchg
hlt
dec
xchg
push
xchg
jl
loopne
or
sub
xchg
push
xor
int
xor
jns
pushl
dec
ss
push
pop
in
push
icebp
pop
enter
lock
xchg
cmpsl
inc
icebp
inc
xchg
sarb
bound
test
mov
xchg
jp
xor
lds
xchg
adc
cmp
dec
inc
pushf
lds
sbb
divb
fmuls
sub
or
incb
cs
pop
test
pop
in
xorl
out
push
jmp
cmpb
adc
dec
mov
and
jo
push
shlb
stos
int3
and
or
push
mov
pop
movsl
mov
xchg
push
mov
xor
adc
hlt
aam
push
enter
das
mov
dec
popa
fisubl
dec
mov
xchg
aad
or
shll
out
rcr
cltd
outsl
adc
in
adc
cld
fsubs
jne
jmp
mov
inc
pop
jle
movsl
xor
and
hlt
lock
pushl
mov
outsl
clc
mov
sub
adc
inc
notl
add
push
jo
cli
popl
cmp
xchg
imul
inc
dec
xchg
and
pop
fs
aam
test
movsb
mov
insl
or
dec
or
fiaddl
dec
mov
or
shr
adc
or
sahf
mov
call
stos
icebp
in
push
push
xchg
insb
repz
or
pop
jno
cli
repz
fidivl
push
jg
push
add
add
mov
inc
outsb
or
jb
xchg
out
outsl
xor
push
inc
mov
pop
or
jecxz
push
pusha
fwait
stos
mov
sbb
icebp
dec
sub
sbb
imul
sub
test
icebp
imul
cmp
dec
add
xor
dec
jl
sub
mov
sahf
push
xchg
inc
push
dec
fdivs
pop
fildl
or
aad
mov
loop
sbb
push
sub
scas
and
push
inc
shl
mov
sbb
lahf
cmp
inc
hlt
mov
int3
pop
mov
sub
leave
lcall
and
sbb
push
xor
xchg
insb
neg
or
dec
push
push
mov
sub
lcall
xor
in
sbb
call
dec
push
js
aaa
pop
dec
ja
xchg
xchg
iret
or
mov
hlt
fadds
sbb
push
ds
mov
filds
xchg
mov
mov
or
fimull
inc
add
les
mov
rorb
inc
addr16
mov
xchg
fcoms
sub
and
add
lahf
cmpb
aad
fwait
jae
jl
adc
std
jbe
pusha
xchg
xchg
comiss
sbb
imul
add
push
xchg
sahf
push
jl
jge
pop
shl
sub
pop
adcb
mov
andl
cmp
pop
jle
push
lods
adc
std
std
ja
incl
xchg
xchg
clc
cmp
add
in
add
lods
mov
leave
pushf
mov
xchg
xchg
popf
out
sub
jbe
inc
push
icebp
jns
notb
xor
xor
js
xor
cmp
xchg
cltd
and
outsb
or
stos
jno
loop
jp
xor
imul
popf
es
cmp
test
pop
push
bound
shlb
int
in
mov
pop
ret
in
inc
xor
pop
cmc
shll
js
dec
xchg
stos
jg
lods
mov
cmc
sahf
add
hlt
popf
in
ret
in
movsl
jge
std
xor
and
push
cmp
inc
mov
popf
add
mov
ds
push
mov
ss
in
sbb
mov
mov
jmp
mov
and
adc
jecxz
xlat
pop
ljmp
jnp
stos
stos
dec
inc
fldenv
jl
push
test
stos
and
xchg
aad
arpl
push
arpl
pop
stc
sub
hlt
popf
adc
das
jnp
mov
aad
mov
sub
fsubs
aaa
in
in
leave
mov
pop
sub
lods
or
mov
pop
movsl
jnp
fucomip
and
dec
push
cmpsb
aam
cmc
popf
imul
jo
and
scas
push
mov
fsubrp
ja
in
mov
sbb
lahf
aam
sbb
test
ret
lods
and
push
ss
test
xor
ror
imul
icebp
sahf
out
dec
sub
loopne
mov
sbb
aam
cmc
cmp
push
jno
insl
xlat
fstl
sti
pop
xor
imul
jecxz
pop
stos
adc
jbe
stc
lcall
int
push
cwtl
pusha
pop
xor
adc
lcall
lock
inc
and
lcall
adc
cmpsb
dec
icebp
insl
push
pop
adc
fsts
push
add
push
pushf
aas
cmc
mov
sbb
or
iret
jns
fldenv
fiaddl
rclb
repnz
mov
cltd
cmp
fisubl
in
push
out
xor
lcall
and
neg
xchg
aad
mov
clc
ret
and
jecxz
das
xchg
stc
enter
inc
fbld
jg
test
lcall
cmp
add
xchg
mov
or
adc
dec
jecxz
xor
xchg
push
popf
push
in
mov
xorl
jecxz
push
loopne
aad
clc
or
pushf
jae
loope
push
cmc
xchg
add
or
scas
mov
push
lahf
mov
lret
mov
cld
pop
jmp
gs
push
daa
inc
loope
jb
jae
mov
or
inc
in
fnstenv
jne
into
xor
jno
out
les
mov
iret
addr16
lahf
mov
push
bound
std
rolb
jnp
jo
js
movsl
adc
gs
cmp
sarl
lcall
mov
fadd
stc
sahf
inc
push
dec
imul
push
lock
jmp
mov
sar
pop
cmpl
lock
mov
in
bound
cmp
stos
jne
inc
dec
mov
push
jmp
fs
loop
arpl
push
dec
mull
insl
xchg
data16
push
nop
inc
or
andb
push
sbb
cmp
into
fsub
insb
shll
adc
fndisi(8087
mov
push
aas
sbbl
cmp
insl
ljmp
mov
sbb
inc
xchg
push
popf
sti
jns
lret
mov
push
cld
lods
ljmp
inc
and
xchg
inc
xorb
out
xor
out
mov
cmp
adc
inc
add
or
scas
or
inc
cs
dec
sti
mov
sub
adc
loope
mov
cli
dec
sbb
sbb
and
repnz
inc
jbe
js
cmp
and
shrl
adc
loop
lcall
stos
js
xchg
test
in
push
add
add
sti
fsubrl
cmpsl
dec
test
cmp
jbe
mov
mov
out
or
push
loopne
aad
or
les
push
mov
sub
lds
cmp
mov
lods
fbld
fmuls
xchg
mov
or
xorl
cs
imul
hlt
push
jle
xor
inc
mov
filds
cmp
add
and
xor
ret
mov
dec
xor
pop
lds
pop
loope
mov
sub
mov
push
add
push
clc
std
mov
cwtl
xor
idivb
jecxz
xor
shrl
inc
loopne
out
stos
imul
outsl
out
rcrl
rol
mov
xchg
scas
fmul
mov
out
cmp
push
fwait
jno
dec
int3
pop
cmp
sbb
in
int3
lods
loope
aaa
push
adc
data16
loopne
jo
pop
mov
jmp
mov
and
sub
xchg
dec
pop
and
ds
jge
jl
sub
rcr
test
data16
adc
adc
pop
jp
push
in
mov
pop
cld
cs
pop
ret
mov
and
popf
xor
imul
xchg
fcmovb
mov
movsb
xchg
sti
adc
jb
movsl
mov
repz
cmpsb
les
imul
adc
icebp
mov
mov
dec
mov
dec
dec
jp
das
out
cmp
imul
pop
pop
ret
fwait
sub
adc
jle
sub
xchg
cld
adc
and
pop
outsl
out
mov
and
sbb
enter
xor
fidivrs
pop
cmp
mov
push
push
imul
cmpsb
adcl
shl
sbb
fsubr
addr16
es
dec
dec
push
jg
ja
in
std
inc
xchg
js
in
loop
imul
mov
sarb
inc
push
adc
xor
fsubl
push
sahf
data16
and
in
addr16
ja
push
sbb
hlt
cli
mov
sbb
mov
out
das
push
loope
xchg
push
popa
std
pop
lods
xor
xor
mov
or
mov
fs
sub
out
xor
insb
shll
push
popf
mov
jnp
mov
out
push
mov
fs
test
out
add
into
adc
lea
pop
push
into
fcom
dec
pop
fdivrs
sbb
call
int3
mov
out
pop
loopne
xor
dec
mull
ret
addb
inc
mov
push
fmuls
fstps
inc
lahf
mov
bound
pmaxub
xor
cmp
push
out
frstor
call
in
imul
scas
les
in
add
fadds
jb
xchg
data16
aad
outsl
lods
divl
imul
iret
scas
cmpsb
sub
xlat
mov
and
lcall
inc
jae
sbb
fidivs
or
mov
cmp
iret
scas
add
in
loopne
sub
incl
xor
mov
clc
cltd
and
loop
cltd
rcll
pop
push
xchg
aaa
fidivl
adc
and
push
dec
in
fsub
movsb
adc
mov
or
xchg
sahf
div
rcll
and
and
lea
add
sbb
inc
cmp
idivl
mov
xchg
and
stos
xchg
or
jbe
jge
xchg
imul
movsl
fimuls
jae,pt
sahf
test
pcmpeqd
sahf
ffreep
out
sub
sbb
mov
xor
pop
sbbl
cmp
cmpsb
mov
mov
xor
mov
test
xor
xor
or
xor
mov
xchg
add
dec
xor
fs
and
ret
mov
mov
loope
js
inc
das
dec
pushf
and
mov
js
sub
stos
lods
loopne
mov
loop
mov
es
xor
loopne
mov
dec
jge
mov
jge
cmpsl
loop
cwtl
xorl
dec
xchg
xchg
sub
jge,pt
cs
orb
ds
fisttps
adc
pop
adc
jle
sub
mov
loope
sub
loopne
jb
data16
sub
movsl
push
mov
or
and
mov
push
add
push
repnz
fsubr
jge
jp
push
xchg
je
rcpps
add
mov
repz
pop
les
or
xlat
inc
push
xor
outsl
das
add
lock
xor
adc
jl
dec
push
sarl
idivb
dec
push
mov
cld
test
shrb
div
or
mov
sbb
xchg
and
xor
fistpll
push
or
loopne
push
icebp
mov
test
fwait
scas
pop
aad
xchg
and
pop
mov
lods
push
in
xchg
push
jns
adc
mov
sbb
mov
popa
push
add
mov
adc
mov
out
cld
sbb
sub
stos
pop
das
xchg
mov
inc
shll
mov
rorb
push
cwtl
fadd
sbb
push
aad
loope
enter
ret
shrb
paddd
push
jmp
neg
push
scas
loope
and
jb
and
jg
mov
ret
into
filds
je
cltd
jo
push
std
test
sbb
cli
fsubrl
imul
mov
pop
or
mov
cmp
adc
xor
jb
shll
mov
in
test
cmp
pop
ss
xor
push
mov
sbb
pop
adc
fcomi
addl
das
rcrl
lods
mov
sub
mov
xor
add
imul
fimuls
sbb
aad
pop
mov
lret
adc
loopne
mov
ror
add
push
adc
mov
fcom
fstpl
mov
ja
fcomip
stos
fcom
out
sarl
xchg
cmp
cli
out
loopne
cmp
sahf
push
push
mov
xchg
jp
out
scas
mov
fidivrl
mov
xlat
mov
cmpsl
sbb
push
mov
add
jp
inc
sub
popa
mov
mov
push
sub
sbbb
mov
imul
outsl
cld
mov
add
cmpsl
pop
xchg
pop
sbb
pop
mov
loope
xchg
ret
sbb
pop
sub
pushf
or
dec
xor
scas
xchg
adc
js
cmp
enter
xor
add
fdivrs
inc
xchg
sbb
cmp
das
push
cwtl
dec
add
mov
sub
and
push
test
pop
insb
mov
mov
jp
inc
mov
sub
jl
icebp
jl
xchg
ret
push
adc
outsl
mov
fadds
sahf
outsb
fdivrl
lea
mov
pop
add
es
fwait
stos
subb
mov
cld
sub
dec
and
pop
shrb
mov
jo
mov
dec
xor
sbb
mov
dec
mov
lahf
insl
in
mov
dec
jecxz
jae
mov
das
add
mov
idivb
gs
mov
xchg
xchg
xchg
std
jns
push
pop
ret
adc
jb
pop
daa
movsb
lcall
sarl
lock
dec
adc
ret
sti
sti
scas
add
sahf
sbb
push
pop
mov
sbb
add
imul
loopne
sti
in
ret
ror
adc
push
cli
fiadds
fiaddl
scas
or
lcall
mov
cmpl
push
pop
mov
ret
cld
movsb
dec
push
sahf
dec
cmp
outsl
push
add
mov
fstl
xchg
push
das
pushf
sbb
jmp
jmp
mov
xlat
xor
fidivs
mov
xchg
xchg
sbb
add
imul
adc
add
push
rolb
pop
mov
fmull
mov
add
mov
push
jae
jge
mov
in
sbb
dec
dec
jo
mov
adc
mov
sbb
cmc
es
fldenv
cld
cmpsb
je
gs
fdivp
shll
push
loope
mov
inc
mov
mov
icebp
lcall
fisttpl
xchg
pop
cs
in
and
adc
cli
mov
pop
sub
mov
jp
in
push
shlb
clc
leave
test
hlt
sub
add
mov
xrelease
aaa
aaa
cld
andl
cmp
dec
mov
or
es
mov
fcom
dec
mov
xchg
or
outsl
mov
mov
xchg
or
into
jb
pop
adc
lods
fdivl
cmp
call
mov
xchg
cmp
addr16
adc
cmpsb
jle
mov
inc
cmp
push
mov
sub
cmp
mov
sarb
outsl
xchg
sub
cmp
push
int
aam
lret
jle
or
jge
dec
mov
and
ret
cmp
mov
sbb
cmp
xchg
dec
in
nop
push
outsb
inc
mov
push
and
loop
and
push
cmpsb
pop
mov
or
pop
and
xor
add
inc
sub
adc
and
pop
inc
mov
xchg
mov
cltd
insl
xchg
cmpsl
rclb
je
add
insl
sub
push
ljmp
ss
sbb
xchg
mov
imul
jecxz
rcll
xor
aas
pop
insb
xor
movsl
dec
outsb
fstpl
inc
fidivrs
outsl
sbb
adc
aad
adcb
out
leave
lock
cmp
and
and
xchg
mov
xchg
inc
popf
push
push
out
push
and
xor
shrb
daa
cmp
jg
sbb
xor
incb
outsb
cs
pop
ss
scas
popf
pop
and
add
fwait
xchg
and
imul
es
cmp
mov
pop
inc
add
sbb
out
sbb
push
push
add
mov
std
sub
mov
loop
call
adc
std
jmp
or
pop
js
outsl
iret
cmpsb
iret
js
test
xchg
mov
xor
push
or
loope
movsb
mov
and
dec
fs
das
iret
push
jne
adc
pop
mov
xchg
and
mov
push
ret
int
sbb
ja
das
js
lcall
inc
push
ljmp
das
mov
push
inc
ret
xor
loopne
mov
add
xchg
push
jno
aaa
lahf
dec
xchg
stos
arpl
add
lret
fdivrl
and
pushf
fcomi
mov
popa
and
movsl
cmp
mov
mov
pop
aam
movsb
cltd
jge
mov
adc
add
lds
lock
xlat
cld
insb
imul
lea
cmp
ds
or
xor
dec
push
lock
decl
in
cld
adc
mov
push
mov
inc
in
movsl
mov
add
mov
sub
mov
mov
cwtl
pop
rcrl
stos
push
jecxz
pop
xchg
cmp
and
popf
test
adc
repz
pop
cmpsw
clc
push
notl
out
inc
cmp
aad
in
mov
lods
and
or
mov
xchg
fwait
adc
mov
iret
jne
jae
or
int3
stos
xchg
shlb
sub
mov
nop
pop
mov
hlt
inc
cmp
fucomi
dec
jnp
fdivrl
insl
and
adc
mov
je
int3
cmpsl
ds
sub
popf
adc
out
lds
mov
lods
test
pop
das
roll
and
xchg
push
int3
xlat
pop
xor
lods
in
popf
insb
adc
push
pop
xor
sbb
or
call
imul
push
adc
incl
inc
push
cmpsb
sub
repz
jnp
add
inc
mov
push
out
out
adc
aam
adc
push
fistpl
adc
xchg
je
dec
sbb
aad
jl
shl
mov
xchg
jbe
jo
mov
or
xlat
aad
xor
and
xor
fiadds
or
push
pop
pop
mov
imul
push
lock
sub
popa
or
mov
popf
pop
mov
pop
jns
ss
je
orb
fisttpll
addb
inc
or
xor
mov
or
fildl
leave
or
leave
add
jbe
cmp
pop
fwait
sbbb
mov
sub
push
xchg
or
xchg
or
pop
sbb
ficomps
pop
loope
xchg
jge
adcl
out
mov
xchg
sub
bound
mov
cmp
pushf
sahf
sub
lock
cmp
imul
mov
jno
int3
enter
loope
mov
adc
cli
cmp
add
insb
xor
mov
and
and
mov
gs
cmc
ljmp
pop
sub
sub
sti
sub
cli
add
cltd
iret
mov
test
dec
fxam
add
call
dec
pop
leave
sub
or
incb
adc
mov
loope
pop
cmp
ror
repz
arpl
xor
rorl
xchg
and
push
push
rcll
repz
sub
dec
in
lods
xor
loop
pusha
ret
dec
pop
gs
les
pop
scas
push
jg
das
dec
lds
pop
pop
cwtl
jmp
cld
mov
aaa
sbb
sbb
mov
xor
insb
les
dec
mov
mov
inc
testl
fstl
iret
sub
out
ret
cmpsl
int
or
xchg
stos
xchg
hlt
mov
je
cs
or
jnp
xchg
mov
push
xchg
movsb
inc
jne
and
adc
jmp
sub
inc
add
mov
xlat
leave
leave
fistps
pop
xor
add
inc
imul
cltd
ficompl
add
jb
mov
ficompl
dec
jge
push
sti
pop
or
pop
cmpsb
ret
shll
sbb
popf
adc
push
sbb
imulb
ja
jg
shlb
test
xor
dec
data16
bound
cmc
mov
pop
xchg
repz
jns
fwait
mov
in
aas
push
inc
lret
leave
and
hlt
sbb
mov
xor
fbld
adc
sbb
and
sbb
shlb
bound
pop
hlt
adc
rclb
pop
cmp
mov
pop
movsl
ret
fdivs
xor
inc
scas
adc
inc
adc
inc
cmpsb
and
ret
sbb
jno
and
pmaxub
insl
sub
loope
scas
cli
ljmp
sti
push
sub
outsl
jmp
jbe
cmp
or
jge
pop
xchg
pop
ds
mov
pushfw
scas
jle
hlt
lahf
pop
mov
push
incl
mov
js
xlat
popf
and
cs
xor
test
outsl
pop
push
and
or
repz
dec
mov
bound
loope
cmpsb
xor
mov
in
adcb
sbbb
xchg
mov
mov
inc
lock
call
inc
test
push
mov
aad
xor
pusha
outsl
add
cmp
push
repz
pop
mov
sbb
cld
mov
xor
xor
jmp
or
orb
jb
xchg
test
mov
ds
out
fcmovnu
hlt
shl
add
mov
sub
pop
dec
add
shlb
leave
dec
jae
lahf
fucomi
sub
and
orb
test
push
in
push
aam
fprem
out
xchg
and
hlt
testb
sbb
add
add
sub
lods
add
lret
cltd
add
ljmp
dec
or
add
and
ds
sub
les
add
popf
nop
add
sbb
hlt
and
out
dec
inc
nop
cld
jmp
cmp
jg
repnz
stos
sarl
bound
addr16
pop
fisubl
xchg
dec
mov
gs
pop
and
aaa
loop
lds
sar
adc
inc
movsb
scas
in
sbb
pop
call
lret
xchg
mov
test
cmp
mov
sbb
lock
inc
xor
adc
sub
fdivl
test
inc
mov
jo
push
mov
hlt
or
jmp
pusha
lahf
adc
outsl
mov
outsb
adc
jle
nop
cmpsl
sub
loop
ljmp
push
cmp
push
daa
pop
pop
aas
push
into
jnp
ds
xchg
jo
sub
in
xchg
dec
or
ss
je
jmp
adc
pushf
pop
jne
push
js
mov
test
mov
loop
inc
add
and
or
out
push
sahf
cli
iret
push
test
in
cmpsl
mov
sbb
jne
push
ret
pushf
mov
aas
mov
sbb
les
sub
fsubr
ds
clc
fwait
mov
fisubrs
clc
cs
ds
pop
pop
sbb
pop
mov
xor
rcrl
inc
and
mov
mov
xor
jl
aad
arpl
mov
cs
pop
das
arpl
daa
insl
mov
ljmp
fs
mov
push
mov
inc
stos
movsb
lock
sub
mov
decl
cld
sbb
lea
fadds
jne
int3
test
insl
jg
movsl
xor
pop
rcrb
pop
in
movsb
mov
popf
and
frstor
dec
mov
je
in
jo
int
cld
cmp
mov
in
adc
sub
lea
xchg
fbstp
cwtl
inc
inc
roll
sub
push
jnp
nop
fildll
pop
test
sbb
orb
out
push
pop
cmc
mov
cmp
cld
ffree
add
push
fcmovbe
mov
aaa
inc
int
aas
dec
mov
mov
out
add
mov
fcompl
push
xchg
jnp
test
rcrb
test
or
add
xor
push
shr
sbb
lods
cmp
ljmp
cmp
jne
sbb
outsb
aam
push
add
adc
mov
jne
mov
imul
bound
xor
xchg
inc
cmp
sahf
outsb
hlt
xorps
mov
xor
jnp
adc
imul
cli
mov
or
aaa
int3
or
popf
mov
int
fcomps
mov
adc
jmp
cmpsb
enter
ds
sub
jmp
inc
pop
mov
ret
xor
mov
bound
or
push
xchg
aaa
loop
jnp
mov
in
push
out
lret
cmp
js
shll
mov
jnp
sub
push
lods
das
mov
mov
test
add
add
imul
or
mov
mov
pop
jl
push
addr16
cwtl
ljmp
imul
icebp
out
insb
test
in
add
cmp
stos
push
mov
divb
sbb
pusha
mull
jb
inc
popa
dec
das
cmp
push
or
lret
jmp
mov
pop
inc
ficoml
mov
mov
loop
insl
cwtl
sub
scas
adc
mov
xor
adc
adc
jo
testb
sbb
je
mov
insb
jae
out
mov
pop
test
movsb
imull
push
xchg
scas
sete
std
mov
in
data16
out
mov
push
bound
pop
or
xchg
cmpb
shlb
outsb
push
fcmovnbe
out
rorl
outsl
fdivs
xor
mov
repz
sbb
xchg
jbe
fsubr
ret
fiadds
fcmovbe
sub
negl
addr16
push
pop
hlt
sti
jne
lret
jg
fisttpl
adc
imul
fchs
les
xchg
imul
in
mov
insb
lcall
push
lods
jp
out
movsb
add
rolb
scas
into
xlat
mov
inc
add
clflush
scas
pop
jbe
lret
in
dec
or
cmpsl
mov
fstl
ret
pop
fwait
cmp
loope
push
lret
test
jg
push
pop
lods
in
push
adc
pushf
lods
incl
clc
mov
lret
push
xor
popa
mov
bound
mov
push
jg
mov
icebp
mov
xchg
imul
gs
in
ds
xor
inc
jmp
push
stos
lock
jg
mov
sbb
mov
ja
jns
call
pop
jg
inc
mov
scas
cmp
add
jg
fwait
pop
fildl
cmpsb
inc
dec
cs
dec
pop
mov
pop
test
xor
jle
sbb
dec
push
lock
dec
shl
xchg
shl
jae
cmpsb
jnp
inc
sub
test
pop
test
enter
mov
nop
pusha
cs
ds
sahf
sub
aad
cmpsb
int
xchg
imul
call
fcmovbe
data16
mov
push
dec
mov
mov
repz
subb
inc
mov
jne
sub
lcall
push
loope
pop
dec
pushf
inc
call
out
mov
fistpll
rorb
pop
outsb
in
cltd
push
and
loopne
fs
out
loopne
mov
repz
push
mov
mov
sarl
jb
and
sub
push
loope
lds
cmp
push
or
pop
into
jo
mov
shll
or
adc
enter
lahf
adc
push
mov
mov
dec
sub
sbb
push
clc
fidivrl
inc
fsubl
mov
lcall
out
test
lds
add
inc
adc
push
fnstsw
adc
out
sub
cld
push
in
mov
and
pop
addr16
mov
aas
stos
aaa
es
xchg
scas
or
cli
lcall
jb
les
mov
int
lcall
dec
jb
xor
and
in
int3
mov
scas
push
mov
cwtl
dec
sub
addb
lods
std
sub
je
lcall
or
cmpsl
lret
lret
cmp
outsb
jl
sbb
cmp
std
and
lret
or
imul
lds
pop
mov
pop
inc
js
jg
lods
add
icebp
out
jp
xorl
or
popf
pop
jecxz
mov
and
add
push
cmpsb
mov
push
imul
jne
xchg
icebp
scas
jb
test
mov
pop
insb
pusha
aam
ds
loop
hlt
pop
jbe
or
add
and
outsl
outsb
add
ja
pusha
js
sub
add
inc
pushf
negl
scas
je
adc
das
sub
fwait
nop
popf
pusha
mov
mov
pop
mov
filds
sbb
mov
and
or
xor
jmp
stos
stos
jmp
shrl
sbb
fcmovbe
cmp
inc
sbb
stc
rcrb
xor
cmp
scas
scas
int
shlb
insb
je
adc
xchg
bound
jg
xchg
rcll
xor
and
shlb
out
popa
and
iret
mov
mov
push
dec
dec
cmp
mov
jo
into
or
add
adc
xchg
push
in
push
loopne
hlt
cmpsb
push
fmul
loope
in
pop
cmp
popa
stc
aam
mov
std
fdivrs
rorl
out
inc
or
fwait
sbb
test
mov
mov
xchg
out
nop
popl
or
mov
lcall
pop
sub
popf
stos
add
push
lahf
dec
loop
insb
sbb
pushf
jne
sub
inc
and
jecxz
stos
ds
lahf
cmp
call
insb
mov
jb
dec
enter
stc
addr16
sbb
and
mov
test
push
in
cmp
fcmove
je
pop
out
jge
scas
js
ret
cmp
jae
pusha
fsubrl
lock
dec
test
lods
sahf
adc
inc
sahf
arpl
fsubrl
jmp
or
xchg
cmp
out
lds
jmp
pop
and
dec
pop
cmp
ljmp
std
pop
cmp
stos
xor
pop
jne
out
xchg
dec
mov
mov
test
bound
dec
pop
sub
test
xchg
gs
aam
xchg
mov
icebp
mov
ret
in
aam
dec
push
jge
push
cmpb
aaa
mov
in
inc
pop
les
leave
add
jmp
push
imul
loope
push
xor
pusha
mov
test
mov
sbb
push
inc
adc
insl
test
notb
ret
push
es
stos
sbb
lret
cld
xchg
decb
jmp
mov
jp
and
inc
cs
and
push
mov
push
push
sbb
jp
scas
mov
xchg
xchg
ss
sub
or
scas
hlt
out
nop
bound
xor
cltd
fstpl
inc
push
fcomps
xor
data16
aam
cmpb
mov
sub
loopne
lds
dec
js
push
or
mov
into
adc
add
cwtl
movb
mov
jmp
or
aas
inc
movsb
insl
loop
mov
js
cs
shlb
pop
loope
addr16
mov
mov
je
push
ja
lock
into
sbb
or
js
add
mov
stos
in
sbb
icebp
or
call
sub
lea
mov
pop
scas
add
ret
adc
and
lds
adc
ss
fwait
mov
mov
xor
aam
lret
mov
push
insb
and
decl
jno
ret
mov
and
mov
dec
rclb
adc
pop
repz
and
leave
aas
jno
scas
mov
mov
in
ret
add
jne
or
mov
sub
sti
cmc
int3
mov
pop
pushf
mov
sub
and
mov
jg
push
cwtl
mov
mov
enter
mov
ljmp
and
bound
xlat
fs
push
add
xchg
call
inc
mov
in
ljmp
ja
dec
dec
mov
add
push
lods
out
cs
jae
mov
cmp
idivb
push
sbb
pop
sub
js
xchg
popf
movsb
cmpsb
cmpsl
fisttpll
cltd
enter
inc
mov
cmp
dec
aam
dec
mov
aam
mov
pop
mov
push
aad
adc
icebp
fcmove
jmp
movsb
cmpsl
inc
adc
push
in
sbb
pop
cltd
in
jmp
jge
negl
loope
pop
jge
leave
aam
cmpsb
xor
mov
dec
shrb
inc
adc
orb
inc
inc
adc
aas
sbb
and
sub
hlt
jnp
mov
pushf
and
leave
push
ret
or
or
dec
fildll
lea
pushf
xlat
stc
iret
mov
mov
adc
out
aaa
and
push
loope
fistpll
imulb
sbb
adc
cmp
mov
repnz
mov
add
pop
jp
or
imul
test
push
push
sub
aaa
cmpsl
push
data16
enter
lods
test
scas
dec
cmp
rcl
test
test
mov
xor
mov
and
mov
add
ss
cmc
enter
mov
push
adc
or
xor
push
jle
or
cmpsb
jmp
push
dec
into
insl
in
add
repz
loop
cmp
in
dec
ficoml
roll
adc
cwtl
fdiv
pop
lds
jnp
cmc
adc
lea
cmpsb
or
xor
jg
outsb
mov
pop
mov
xchg
shll
aaa
call
clc
push
orb
fs
inc
in
sub
pop
call
pop
or
fneni(8087
cmp
cmp
in
rcrl
movsb
inc
sub
mov
xchg
mov
dec
movsb
cmp
mov
fdivrs
and
push
notl
call
or
fcmovnbe
std
js
mov
pop
sub
mov
xchg
cmp
or
cmpsb
fisttpll
jle
cltd
jns
movsb
call
pop
and
adc
hlt
test
mov
jmp
jb
cmp
daa
inc
sbb
sub
aas
mov
push
lcall
mov
xchg
cmp
cs
sbb
jb
jl
les
ss
sub
jne
jl
sbb
pushf
aas
repnz
fisubrl
dec
mov
mov
lods
es
xchg
inc
dec
mov
call
pop
xchg
icebp
adc
push
pushf
sbb
cmp
jle
and
int
ror
add
sub
mov
mov
sub
es
sub
push
sbb
jb
push
outsb
mov
lock
fwait
pop
jp
push
ror
jle
xor
fcmovnbe
xchg
in
add
out
cli
cmpsl
pop
cld
rclb
xor
and
xchg
insl
mov
mov
push
es
das
jp
mov
lcall
cmp
ds
in
popf
pusha
dec
cmp
bound
nop
stos
mov
mov
adc
mov
pop
or
jecxz
pop
jmp
call
cmc
jns
sub
mov
arpl
testl
int
jl
jne
mov
sub
fwait
in
xchg
pusha
mov
stc
shr
das
push
adc
mov
fsubp
ss
mov
lock
inc
mov
rcrb
es
mov
out
push
push
mov
jnp
jno
xor
cld
xor
iret
inc
outsl
fwait
dec
mov
movsl
clc
jmp
rcrl
xchg
dec
je
scas
std
aaa
xor
jge
arpl
sahf
dec
stos
push
loope
dec
ror
inc
movsb
pusha
cmp
adc
fbld
fnsave
mov
push
push
das
fistps
shll
popa
or
pop
test
scas
sbb
hlt
sub
clc
jo
sahf
adc
fs
imul
test
pushf
mov
mov
pop
aad
xchg
xlat
ja
and
xchg
inc
push
and
es
push
test
cmp
mov
mov
add
outsb
add
pushl
push
push
or
inc
cmp
cmpsb
icebp
sbb
push
test
push
jo
mov
rcrl
ljmp
mov
push
adc
push
jmp
lock
fld
or
jmp
pop
cltd
pop
scas
scas
inc
es
cmpsl
cs
cmpsb
popf
sub
scas
lods
inc
mov
std
sbb
sub
lret
jns
dec
cmp
mov
push
push
push
aam
je
imul
cs
faddl
test
mov
jle
pop
sbb
in
and
scas
mov
pop
dec
testl
cld
les
jmp
xlat
mov
mov
pusha
enter
arpl
into
loope
jb
dec
aas
jb
sbb
cmp
dec
pop
cmp
jno
or
mov
mov
sbb
mov
outsb
iret
test
pusha
sub
jge
aas
pop
mov
inc
or
inc
movsl
aam
push
sbb
inc
mov
xor
jno
fcompl
cmp
push
mov
call
notl
shll
sbb
mov
sub
in
jb
int3
xor
ja
call
stc
or
movsb
dec
dec
push
lret
mov
mov
ret
mov
adc
cwtl
sub
pop
sub
cmp
xchg
ljmp
jg
sbb
pushf
xor
sbb
mov
int
and
test
lahf
scas
arpl
inc
jbe
pop
jp
in
leave
sub
mov
sub
nop
leave
scas
or
sbb
jp
lahf
pop
xchg
vpshlb
int
add
pusha
sbb
aaa
movsl
test
mov
push
and
stc
add
data16
pop
mov
int
in
ret
cmp
inc
andl
inc
popf
and
cmp
mov
cmp
or
das
dec
out
insb
outsl
into
and
or
add
xor
js
mov
sbb
jp
mov
push
pmaxsw
pop
data16
das
insb
add
aad
popf
outsl
loope
pop
fidivrl
fcoms
subb
lods
or
inc
lods
sub
sbb
inc
aas
sub
sahf
lfs
or
xlat
jns
dec
cltd
ljmp
xchg
inc
pushf
aaa
dec
out
add
and
fmull
jg
mov
ss
and
inc
lcall
dec
les
enter
dec
iret
ja
xchg
inc
shrb
mov
sbb
mov
xor
es
xor
fcmovu
xchg
push
cld
dec
push
out
aaa
fiadds
or
cwtl
and
test
push
xchg
adc
jge
imul
ret
cmpsl
or
aam
mov
push
and
sbb
inc
hlt
ds
loope
in
repz
in
push
cwtl
lods
inc
pop
xchg
pop
pop
push
fs
lock
mov
jbe
dec
ss
repz
jl
add
adc
mov
adc
sub
sbb
je
mov
lea
dec
mov
or
push
out
add
les
rorl
or
pop
cli
iret
jecxz
lahf
adc
sub
data16
mov
pop
lahf
cld
pusha
movnti
lods
mov
sbb
mov
and
mov
out
mov
mov
push
insl
cmp
stos
movsb
loopne
insl
mov
cmc
mov
lods
cltd
add
outsb
mov
jge
in
lcall
add
sti
cmp
das
daa
jmp
mov
idivb
aad
loop
jo
xchg
test
sbb
mov
push
shlb
add
cmpsb
jecxz
push
aaa
mov
lahf
and
or
inc
addr16
push
adc
mov
stos
mov
ficompl
dec
out
fisubs
mov
inc
add
out
mov
std
addr16
dec
push
xchg
xchg
mov
cmpsl
cmpsl
or
mov
sub
push
je
push
test
add
dec
adcb
mov
mov
xchg
sti
scas
or
sbb
sub
stos
push
sti
jl
cmp
mov
cmp
ret
mov
sbb
das
setl
dec
mov
push
imul
or
jge
cltd
mov
imulb
lret
sarb
cmp
lret
inc
add
in
stc
stc
mov
ficoml
lea
xchg
xlat
push
insl
fwait
sahf
and
and
ror
movsb
das
adc
sbb
push
sti
adc
inc
jns
inc
xchg
lret
ljmp
jns
push
movsb
std
push
aad
fsub
or
fmull
imulb
popf
ss
nop
push
inc
negb
push
add
mov
cmpsb
loope
dec
in
xchg
inc
in
icebp
cld
mov
aaa
maxps
cmp
inc
add
xchg
push
mov
xchg
shrb
push
mov
mov
jbe
mov
dec
pop
data16
mov
shrl
sbb
fldenv
or
jo
adc
adc
pop
adc
xchg
test
jmp
pop
jge
hlt
ja
stc
cltd
pop
out
adc
out
pop
icebp
pop
sbb
jae
mov
dec
jmp
imul
pop
push
xchg
jno
test
mov
jnp
jbe
jecxz
hlt
movsb
into
add
or
xor
or
or
mov
mov
pop
clc
test
mov
pop
inc
push
push
in
jno
mov
xchg
js
test
xchg
nop
add
test
jmp
vpmaddwd
xchg
ror
mov
xor
jns
mov
mov
xchg
xchg
mov
jg
push
pop
mov
push
inc
pop
mov
outsb
mov
lcall
iret
ja
mov
leave
fsubl
cmp
pop
hlt
repnz
repz
lret
jmp
popf
es
jno
mov
jl
sbb
sub
cmc
mov
es
ljmp
dec
std
bound
mov
jge
int3
adc
aaa
outsl
mov
fdivrl
jae
loop
daa
mov
pop
fadds
fsts
hlt
cwtl
push
fmul
and
inc
sbb
in
mov
cmp
clc
xor
inc
addr16
mov
js
adc
movsb
mov
pop
ja
sub
and
mov
js
xchg
sub
movsb
adcl
mov
std
test
and
fldl2e
and
mov
push
cld
xchg
lahf
mov
jecxz
dec
add
push
loopne
sbb
lahf
mov
test
cmpsb
loop
test
add
lds
cld
cmpsb
jge
cmp
inc
jnp
lcall
aas
mov
ror
sub
hlt
xchg
jae
xchg
cld
xchg
inc
cwtl
jo
jno
pop
in
stos
icebp
xchg
das
movsb
lret
jbe
mulb
lcall
outsb
xor
les
cmp
or
sti
rcrb
jae
lret
movsb
in
or
subb
shll
mov
outsb
mov
jp
hlt
push
scas
lahf
mov
cs
push
test
pop
sahf
lcall
fcomps
push
add
push
es
scas
orb
daa
or
sub
stos
bound
out
xor
mov
in
lods
pop
or
nop
push
bound
mov
dec
and
cmp
pop
xor
sub
cmp
pop
and
push
jns
insb
xchg
xor
out
std
dec
xchg
int
sub
bound
std
pop
cmp
xor
mov
fs
std
pop
mov
push
push
pop
mov
xor
or
lcall
sub
mov
push
pop
rolb
push
aam
add
xor
push
fs
xor
lret
in
imul
inc
ds
or
xchg
sbbb
mov
mov
gs
push
lods
cmp
sub
add
push
xor
cmp
and
sbb
adcl
cmp
call
jns
xchg
jbe
test
add
outsb
pop
mov
dec
lcall
sbb
fmull
jns
stos
xchg
sub
or
jecxz
sahf
xchg
sbb
push
push
insb
jne
popa
push
xchg
test
pusha
insl
push
in
dec
mov
push
adc
xchg
ss
jg
adc
std
out
out
push
pop
aas
out
mov
mov
sub
adc
das
mov
jno
push
push
push
daa
test
dec
xchg
push
sub
fsubrl
lock
lahf
cmp
pop
out
xor
inc
in
mov
adc
add
repnz
push
mov
scas
sbb
mov
fwait
nop
fabs
test
adc
cltd
mov
repnz
in
adc
and
add
mov
or
push
nop
xor
mov
pushaw
mov
jnp
in
adc
adc
sti
adc
mov
lds
xlat
push
enter
mov
mov
adc
imul
aad
dec
push
adc
cmp
mov
jns
and
inc
rorb
sbb
aam
fs
xlat
sub
mov
rorl
movsb
cmp
outsl
add
into
or
in
inc
sub
pop
mov
fisubl
pop
sub
xor
iret
dec
and
popf
lods
mov
sbb
sbb
loopne
fdivrs
xchg
dec
adc
mov
daa
subl
insl
pop
inc
gs
fisttps
fistpll
and
jno
ror
dec
pop
insb
xlat
imul
enter
cli
mov
fstps
dec
into
stc
dec
fistps
cs
out
mov
sbbl
stc
fsubr
pop
jb
pusha
adc
xor
push
aad
cs
movl
mov
mov
lret
push
cltd
adc
clc
jmp
popf
fsubl
enter
jge
sbb
sbb
fdivl
push
and
and
mov
sarl
xorl
nop
mov
push
outsb
ljmp
subb
in
iret
jo
and
ss
stc
in
push
mov
sarb
and
decl
jae
mov
shlb
xchg
cmpsb
inc
jmp
les
sti
stc
mov
loop
pusha
add
mov
xor
adc
jno
fnsave
dec
cmc
in
sbb
fistpll
mov
mov
push
jle
jo
mov
arpl
ficomps
adc
fs
mov
and
arpl
xchg
pop
cmp
clc
fs
pushf
cmp
out
daa
cs
das
sbb
inc
sarb
loopne
ficoms
jb
and
daa
sbb
fcoml
mov
and
outsl
mov
mov
call
jp
sbb
or
call
pop
in
push
pop
enter
xor
ss
sbb
mov
jmp
add
sub
popf
int3
jmp
cwtl
xor
mov
scas
or
mov
insb
outsl
push
ja
ljmp
mov
inc
test
pop
jl
push
or
mov
ljmp
sbb
sti
cmp
sbb
int
pop
lahf
adc
fsincos
mov
push
xchg
data16
scas
sarb
test
xchg
pop
add
cmpsb
sbb
lahf
fsubs
pop
inc
mov
sbb
pushf
xor
jbe
cmp
dec
or
xchg
subl
push
in
and
cmp
sahf
out
mov
sbb
and
cmp
addr16
dec
inc
cld
imul
imul
jge
xor
jno
xchg
xor
inc
push
xchg
scas
stos
outsb
repz
sbb
mov
cmp
xchg
mov
imul
sbb
ss
jo
insl
mov
fistpl
ds
jnp
mov
inc
cmp
jp
push
cmp
mov
sub
mov
add
movsb
lods
jbe
add
ljmp
enter
xchg
sub
mov
test
popa
jae
pop
mov
stc
sub
or
daa
push
cmpl
subl
mov
ficoms
arpl
xchg
mov
pop
or
rolb
je
pop
xchg
mov
or
push
loope
jne
mov
fsubr
bswap
mov
mov
mov
imul
mov
gs
jmp
dec
fstp
xlat
loop
divb
test
mov
inc
mov
in
push
int
jp
mov
movsb
push
out
jge
pop
xchg
dec
mov
inc
out
sbb
repz
jge
and
and
into
pop
popf
test
lds
xchg
cmp
popf
aad
cmp
in
loop
xchg
pop
or
inc
pop
cmp
call
pop
cmp
dec
mov
mov
test
int3
mov
add
push
les
push
jg
push
push
adc
in
aam
push
inc
lock
mov
insl
xchg
mov
pop
jb
add
popf
add
out
sub
ret
inc
and
xchg
push
sub
mov
mov
lock
int3
pop
sti
push
mov
inc
xor
rolb
inc
pop
aam
loopne
outsb
sbb
jno
jb
add
out
add
xor
fcompl
and
xchg
inc
xor
pop
cltd
adc
sub
lea
add
sub
add
test
ja
js
out
adc
jo
ja
jne
iret
mov
sbb
ret
mov
leave
imul
jae
add
popf
xlat
jle
fcmovnb
rcrb
sbb
cs
test
adcb
das
or
cli
fstps
ficompl
push
loope
and
push
cmp
je
cmp
dec
add
push
sbb
aas
aad
cmp
inc
stos
cmp
dec
repz
xor
into
mov
loope
jmp
cmp
cwtl
jnp
jbe
pop
cmp
jmp
pop
test
dec
cmp
dec
mov
cld
orb
cmp
and
dec
mov
jb
xchg
sti
sar
ljmp
pop
and
inc
shll
mov
dec
sbb
mov
js
xchg
or
xchg
mov
fstpl
inc
add
loopne
ds
mov
test
adc
outsl
push
ret
jo
inc
lcall
dec
jb
adc
jmp
xchg
xor
and
fucomip
add
dec
or
cmc
divb
into
repz
push
lcall
int
mov
or
cmp
pop
leave
xchg
cmp
xchg
adc
push
adc
adc
fcomip
ficompl
movsl
dec
iret
lcall
xchg
je,pn
lods
out
push
cmp
cmp
pusha
cmp
pop
sarl
mov
xor
lds
insl
fsubs
add
gs
pop
lds
je
orb
cs
sub
mov
loope
mov
movb
int
movzwl
adc
mov
js
cmc
movsb
and
cli
mov
out
adc
ja
dec
loopne
or
movsb
sub
fsubrs
mov
jmp
inc
cmp
cmp
lret
sti
das
sahf
test
cmp
pusha
sub
or
fisubl
push
test
roll
mov
into
add
out
aad
popa
jb
push
outsb
or
ffreep
inc
stos
stos
mov
adc
push
aaa
scas
in
fnstsw
cli
push
std
or
add
push
stc
sbb
mov
pop
push
addr16
cltd
ds
mov
add
xor
psubusb
cmc
pop
pop
repz
push
in
mov
xor
mov
hlt
inc
xchg
ret
and
into
popf
xor
add
loopne
cli
sbb
gs
mov
add
out
sub
std
in
xchg
popf
add
push
sub
sub
push
pop
test
mov
pop
mov
test
xor
jecxz
xor
pop
fnstenv
mov
jp
and
pop
inc
cmp
mov
loop
addr16
mov
jle
fildl
jle
stos
inc
loope
fdivs
fiaddl
stos
arpl
mov
fwait
outsl
sahf
loop
int
jge
sbb
icebp
mov
push
jb
test
jmp
sahf
ds
jno
xor
loope
shrl
pop
daa
je
test
cli
pop
aas
fisttpll
jecxz
hlt
ret
push
mov
xor
push
mov
push
xlat
and
lcall
lea
icebp
jmp
jno
dec
mov
dec
xchg
out
cmp
imul
lret
adc
adc
jmp
lret
push
ss
sub
ljmp
lods
xor
push
sbb
popf
outsl
sbb
repz
push
mov
mov
jne
cli
movsl
lods
pop
sbb
stos
faddl
fisttpl
pushf
and
jnp
in
cmpsl
or
jmp
sub
sahf
clc
jne
jmp
xchg
imul
add
lret
frstor
push
adc
xchg
dec
sbb
mov
adc
mov
imul
hlt
and
xchg
pop
jmp
inc
out
mov
mov
push
ret
dec
lods
xchg
add
stc
mov
cmp
adc
js
jg
adcb
popa
and
push
das
mov
push
fisttpll
lret
cmp
call
sub
jge
jecxz
mov
arpl
jg
sbb
mov
cmp
out
cwtl
lcall
int3
daa
inc
pop
stos
xchg
imul
shll
in
mov
or
clc
push
hlt
adc
jl
push
push
bound
imul
lods
scas
mov
cmpb
int
sub
jne
leave
dec
xlat
out
adc
imul
dec
mov
xor
iret
or
sbbl
xchg
dec
cmp
push
xor
jno
lds
testb
leave
push
jl
pop
dec
mov
out
das
inc
cmp
and
mov
lahf
add
movsl
cmpsl
sahf
fistpl
mull
pushf
sub
pop
or
jg
je
inc
sbb
mov
neg
mov
pop
int
pop
ret
lcall
or
testb
xchg
outsl
pop
pop
pop
notl
sbb
ljmp
jmp
pusha
das
push
jmp
lods
aaa
clc
push
in
and
and
or
xchg
pop
mov
sbb
test
inc
insb
and
lret
sbb
cld
test
shlb
pop
jl
ss
lret
out
mov
les
outsl
sahf
shrl
popf
xchg
enterw
cmc
push
repnz
fsubs
std
outsl
loope
into
sti
sarb
pop
stos
push
int
and
test
faddl
mov
into
sahf
cwtl
jns
orb
add
outsl
scas
mov
and
hlt
roll
movsl
pop
negl
cmpsb
popa
pop
add
push
or
sub
inc
and
lcall
add
pop
adc
and
push
aaa
cs
or
fildl
mov
divl
imul
inc
and
or
call
mov
or
and
add
aaa
and
adc
mov
std
mov
rcrl
jno
sbb
mov
dec
pop
adc
xor
gs
into
or
cmp
hlt
out
jecxz
sti
xchg
mov
xchg
push
sahf
cwtl
and
adc
ljmp
repz
loopne
cltd
cmp
and
cmc
push
jg
and
push
push
push
mov
xchg
out
inc
aam
adc
mov
lods
out
popf
adcl
push
imul
dec
pop
sub
xchg
add
push
ret
shld
push
insl
clc
jecxz
jnp
bound
mov
pop
add
data16
mov
inc
cmpsb
adc
inc
cmp
and
or
lret
and
jae
sbb
outsl
jp
xor
in
mov
mov
pop
push
out
push
push
ljmp
jle
mov
inc
sub
imul
sbb
jg
jge
ds
nop
xchg
xchg
xchg
decb
data16
cmpsl
push
add
jmp
mov
aad
mov
xchg
call
sarb
pushf
jmp
shl
xchg
call
xchg
fcompl
push
push
cmp
gs
jae
jbe
lock
inc
xor
or
in
lods
pop
sti
adc
adc
dec
shrl
fadd
sbb
shl
xchg
out
xor
or
jle
mov
fs
mov
mov
sub
mov
fldt
or
cwtl
or
adc
stos
push
mov
fistps
jp
out
clc
push
and
mov
imul
jl
xchg
ret
mov
xchg
mov
mov
xor
mov
into
push
daa
pop
mov
jge
jmp
add
jns
xchg
outsl
sub
dec
mov
test
mov
mov
mov
sarb
inc
loop
sbb
jno
cltd
dec
cmp
add
or
sbb
xchg
jge
testb
or
inc
in
in
test
xchg
rcll
jmp
pop
mov
popa
push
fistps
xchg
dec
and
jb
fadds
mov
fsubrs
sarb
mov
scas
mov
hlt
mov
pop
push
sub
scas
mov
int3
lods
jno
stos
jno
inc
es
clc
inc
leave
mov
xorb
insb
addr16
cwtl
mov
jno
mov
xchg
push
fcmovnb
addr16
mov
dec
cmpl
stos
frstor
ja
aam
test
mov
test
pop
loopne
cli
test
add
push
aaa
add
mov
ss
je
out
es
scas
jnp
add
and
or
dec
ljmp
xor
xchg
aaa
aam
fcomps
mov
fldl
adc
dec
repz
lea
mov
sbb
ret
mov
loopne
das
push
and
es
pop
cmc
mov
xchg
insl
bound
adc
ficoms
mov
loope
fs
stos
dec
xchg
inc
mov
pop
stc
add
pop
mov
mov
cmp
popa
dec
inc
sbb
push
jle
add
sti
mov
out
jae
cmp
adc
popa
insb
pop
push
mov
mov
jp
into
dec
dec
push
push
or
push
faddl
jge
mov
or
arpl
fs
stos
rcrl
jnp
push
sub
fnstenv
dec
lods
pop
lahf
mov
movsl
imul
push
in
loop
mov
mov
jmp
adc
inc
lret
lcall
call
imul
push
fidivrs
mov
cmp
adc
pop
jne
sub
xchg
push
inc
sbb
fldt
dec
int
dec
imul
pop
addr16
jp
ljmp
xchg
mov
sub
cmp
ljmp
inc
jmp
movsb
xchg
cmp
imul
sbb
lret
pmaxub
jmp
lcall
test
lea
sbb
inc
je
aas
inc
repnz
in
sub
dec
xchg
jb
sbb
dec
fisttps
outsb
xor
cld
jbe
pop
or
rcl
mov
mov
out
ret
cld
lret
jp
loopne
pop
pop
mov
lret
data16
pushf
pusha
cltd
loop
add
ss
cmp
mov
dec
mov
sub
sbb
pop
ljmp
dec
jne
inc
sbb
aas
xchg
gs
inc
mov
je
lods
das
fldenv
je
ljmp
jnp
mov
in
dec
cmpsl
mov
cmp
sub
and
pop
jmp
xchg
add
int3
cld
iret
xor
lds
dec
lea
xchg
ss
bound
add
lahf
fdivrs
mov
les
insb
and
cli
inc
sub
and
cmp
mov
adc
scas
and
testb
lret
dec
in
in
xchg
add
mov
test
ja
pop
adc
mov
adc
fdivs
dec
scas
ljmp
or
mov
lds
enter
scas
icebp
mov
xor
fwait
dec
cmc
dec
imul
push
popf
mov
dec
mov
pop
xor
lret
push
fadds
cmp
out
lret
sub
sar
cmp
dec
fdivrp
cmc
nop
test
push
pop
push
pusha
jns
cwtl
vshufps
sbb
push
mov
insb
dec
or
cs
pop
out
addb
sbb
lock
outsb
lret
and
push
icebp
mov
mov
cmp
push
dec
inc
lock
mov
negl
dec
cwtl
stos
and
push
lret
gs
shlb
mov
sbb
pop
adc
mov
ficoml
mov
mov
shrl
fisubl
cmp
pop
pop
movsb
lahf
inc
add
pop
ss
push
push
dec
outsb
sbb
xchg
mov
push
cmpsb
or
jmp
or
adc
jg
sbb
cmp
sub
mov
loope
xchg
imul
xchg
in
mov
mov
int
out
jns
faddp
push
roll
or
adc
and
jnp
sbb
and
mov
mov
fcmovnbe
hlt
and
push
inc
std
or
dec
lret
in
inc
xor
es
stc
adc
cmp
clc
in
push
lcall
lea
stc
or
ja
leave
insl
clc
pushf
movsb
cmpsl
in
or
fs
jge
xor
and
sub
inc
cmp
fistps
bound
movl
rorb
xchg
sub
scas
or
scas
fwait
push
cmp
inc
daa
cltd
adc
mov
dec
pop
inc
insb
insb
lods
or
push
xor
cltd
dec
mov
mov
leave
jns
hlt
int
in
mov
repnz
test
stos
pop
add
adc
xchg
fimull
mov
jns
test
cmc
sti
cmpb
into
pop
and
test
sahf
out
clc
repnz
dec
ficomps
ficomps
xlat
sahf
ja
ljmp
mov
int
cs
nop
test
ret
add
rclb
push
xchg
mov
aad
mov
push
dec
mov
out
push
cmp
outsl
daa
je
call
in
in
cmp
pop
sbb
sub
dec
push
rolb
push
fdiv
lcall
cmp
fimuls
xchg
test
data16
and
or
sub
adc
push
xor
cmp
insb
test
adc
fiaddl
mov
inc
loope
subb
xchg
insb
daa
addr16
fcmovbe
int3
js
adc
or
aaa
in
xchg
shrl
adc
pop
dec
pop
mov
mov
std
outsb
dec
std
or
xchg
jae
sarb
ljmp
lods
xor
xlat
imull
pusha
xchg
sbb
sbb
mov
pop
test
int
into
jns
mov
out
pop
dec
push
test
jne
jg
das
and
movups
sub
daa
mov
pusha
popf
rclb
mov
fdivrl
mov
xchg
enter
xchg
repnz
pop
jp
and
test
rcrb
push
xor
fcom
sbb
sub
mov
rorl
and
pop
pop
xchg
mov
les
mov
push
and
mov
adc
in
or
xchg
xor
int
and
dec
rclb
mov
mov
and
sub
ds
fmulp
push
mov
push
mov
enter
mov
rorl
ret
test
xchg
pop
jo
jae
sbb
mov
bound
jnp
push
jmp
popf
cmp
or
xchg
mov
decb
insb
jl
dec
add
xchg
nop
add
test
push
push
cwtl
xchg
std
inc
inc
lods
and
jae
leave
leave
push
shlb
pop
sbb
mov
in
mov
jg
call
daa
jo
fildll
movsb
xor
aas
sbb
and
call
pushf
ja
push
iret
ret
mov
xchg
xchg
jb
jns
jns
outsl
jb
mov
xchg
jae
outsb
sbb
and
push
outsl
sbb
cmp
ret
data16
aaa
adcb
mov
aam
and
in
cmpsb
ror
or
scas
aad
shl
pop
jns
lods
sub
shrl
sbb
cmc
in
xor
inc
sbbb
xchg
push
rorb
adc
cltd
aas
push
cld
inc
adc
push
fwait
int
mov
push
sbb
push
add
faddl
cmpsb
in
mov
pop
jns
stos
lahf
mov
mov
inc
stc
dec
pop
jecxz
and
pop
in
inc
mov
add
xor
jb
ficompl
add
add
cmc
and
sub
pop
inc
into
push
ja
outsb
rcrl
gs
gs
jle
mov
mov
inc
pop
inc
aad
mov
cmpsb
cmc
push
imul
outsl
call
sub
pop
mov
pushf
pusha
into
push
ret
jmp
mov
xchg
sbb
push
call
cmp
mov
push
pop
push
mov
enter
xor
call
xchg
xchg
lods
out
jg
adc
and
stos
dec
outsb
mov
xlat
insl
rol
ret
int
sbb
fs
pop
mov
cld
mov
inc
sub
add
mov
ret
nop
daa
sbb
add
icebp
insl
test
js
mov
lods
mov
shl
pop
sahf
push
movsl
inc
cs
mov
lods
mov
add
push
add
xor
mov
ljmp
sbb
xor
mov
mov
scas
out
jnp
out
popf
cmp
xchg
mov
popf
and
repnz
lret
fsubrl
lods
and
mov
sbb
enter
sbb
cld
in
push
scas
popf
xor
xchg
push
or
mov
movd
in
mov
sar
std
mov
inc
cmpb
mov
sub
jnp
xor
adc
jp
fdivrp
mov
lds
scas
cs
cmpsb
sub
notb
movsb
imul
fs
xchg
aam
sub
push
cmp
iret
shlb
mov
aaa
cmp
lock
insb
mov
subl
aam
test
arpl
fadds
mov
xor
jecxz
aas
mov
roll
sarl
insb
test
mov
push
imulb
xchg
sbb
or
ss
dec
xchg
shrl
mov
jg
inc
xor
cmp
xchg
cli
mov
daa
or
jnp
out
adc
pop
or
mov
dec
clc
push
pop
xchg
leave
mov
mov
dec
jl
xrelease
int
xor
not
add
les
lahf
cmpsb
lods
mov
lret
mov
sarl
cwtl
mov
sar
gs
or
das
ja
mov
add
sub
dec
imul
ss
pusha
inc
test
jle
sbb
xchg
xor
loopne,pt
outsl
adc
hlt
sbb
mov
mov
rcl
xor
repz
fbld
jp
das
mov
sarb
pop
xor
dec
xchg
pop
xor
adc
pop
mov
or
leave
inc
pextrw
adc
inc
add
xor
ljmp
xchg
and
leave
cli
push
shrb
call
nop
repz
xor
jnp
cmp
daa
or
clc
insb
sub
in
and
jns
sbb
mov
imul
js
pop
test
pop
in
shll
fdivl
inc
scas
sbb
outsb
bound
inc
jl
pop
pusha
cmp
lcall
cmp
mov
ja
jno
loop
mov
into
push
fadd
in
call
push
xorb
sub
and
cmp
testb
icebp
in
mov
popf
andl
sbb
adc
cmp
inc
jg
jecxz
xor
inc
insb
lret
call
sub
push
or
inc
lods
gs
sbb
scas
push
ret
add
mov
mov
push
xchg
hlt
cmpsb
mov
xchg
notl
fistl
xlat
in
cmp
inc
push
ja
add
into
shlb
loopne
mov
push
add
les
pop
adc
push
dec
mov
add
adc
xchg
push
test
lea
push
and
das
push
mov
add
lock
sbb
mov
xor
call
lods
inc
sbb
inc
add
je
sbb
sub
les
cs
jo
not
cwtl
ss
push
fs
int3
adc
cmp
push
or
mov
jl
cs
shll
mov
ret
lret
jl
or
not
jle
sbb
inc
fs
push
test
add
movsb
test
cmp
xor
in
clc
adc
dec
jnp
sub
imul
inc
fs
and
and
dec
dec
adc
mov
sbb
jb
imul
sub
scas
mov
shrb
sbb
xor
xchg
adc
pop
sahf
iret
add
shll
cmp
push
popf
out
lock
nop
cmpsb
fdivp
sar
sbb
insl
mov
ljmp
scas
pop
xlat
testl
cmp
jmp
sub
sub
stc
sbb
loop
out
mov
pop
and
fists
movsl
fs
jo
pushf
xchg
pop
subb
mov
test
shll
hlt
flds
cmpsl
iret
pusha
sub
rcrb
pop
and
jno
arpl
jp
xchg
and
jns
xor
int
sbb
rcrl
test
loope
imul
jae
pop
cltd
adc
mov
pop
jns,pt
das
rol
push
inc
cmp
sbb
in
decb
dec
add
sub
or
cld
or
pop
xchg
fwait
xor
jo
in
pop
bound
pop
jne
pop
jae,pn
push
mov
fs
cs
insb
mov
jb
push
mov
pop
dec
les
aaa
mov
ja
lret
cli
lret
pop
out
mov
or
clc
jne
loop
pop
clc
sub
mov
in
out
in
and
cmpsl
jecxz
xchg
dec
cmp
push
jb
xchg
mov
cli
ljmp
push
adc
xchg
mov
ss
xorb
mov
dec
mov
icebp
dec
addb
fldt
ret
and
roll
sbb
inc
pop
movsl
jp
push
mov
icebp
out
push
sub
das
stc
cmc
popf
cmp
xor
ja
mov
mov
outsb
in
or
mov
mov
inc
and
jb
sub
mov
jne
dec
push
ja
cmp
sbb
mov
repnz
shl
xor
int3
and
int3
testb
inc
pop
jecxz
push
je
sub
push
dec
xchg
icebp
sub
scas
mov
mul
xchg
mov
pop
loopne
data16
das
pop
ret
jge
sub
pop
fistl
cld
int
and
jle
lods
cmp
xchg
cmpsb
mov
nop
push
lods
pop
or
shl
cmpsl
loop
in
fistpl
shlb
and
mov
in
xorb
push
out
lock
pop
lret
test
icebp
sbb
xor
mov
dec
adc
scas
outsb
sub
xchg
mov
loope
stc
adc
and
popf
push
xchg
inc
mov
cmp
mov
sub
popa
xchg
dec
or
jmp
xchg
repnz
stc
add
xchg
cmpsb
aad
push
mov
loope
adc
cmc
jle
sbb
popf
cmp
in
jne
and
rcll
cli
push
xor
dec
shl
add
movsb
add
loope
rclb
fiaddl
dec
mov
add
fsts
stos
enter
mov
mov
cmp
lods
subb
je
insb
cltd
rorl
cmc
xchg
cmpsb
or
or
ja
dec
xor
cwtl
lret
push
xchg
fstl
xlat
push
icebp
cld
fmulp
shl
imul
js
push
adc
adc
mov
or
pushf
jle
sub
mov
push
push
dec
xor
aam
std
shl
jbe
push
xor
arpl
pop
arpl
sub
in
add
dec
loopne
shll
mov
aad
out
cmpsl
sbb
jg
mov
inc
push
idivb
lock
xchg
mov
mov
cs
ret
movsl
or
sti
jno
leave
in
pushf
ja
mov
cmp
test
cmp
or
mov
pusha
stos
test
jge
and
iret
inc
jecxz
pop
mov
mov
cs
fldenv
dec
mov
orl
mov
pop
xchg
mov
xchg
fisubrl
push
xchg
xchg
sbb
jge
popa
mov
nop
fs
and
push
push
das
lahf
lods
pop
jne
xchg
je
xlat
xlat
inc
push
js
ret
aam
and
lcall
in
popa
call
and
adc
enter
or
and
and
hlt
testb
leave
rcrl
pop
sbb
cmp
add
xchg
sti
sub
arpl
sub
sbb
pusha
scas
dec
push
fimuls
mov
adc
fmul
cwtl
hlt
dec
adc
leave
xor
mov
test
scas
dec
nop
mov
popa
gs
add
fadds
rorl
arpl
mov
cmpsl
or
mov
mov
movzbl
ja
add
adc
inc
mov
out
push
enter
xor
xor
loop
or
jne
sbbb
xchg
adc
xor
dec
mov
imull
push
inc
data16
mov
xor
js
mov
in
dec
push
fcoml
imul
inc
sub
insl
inc
jmp
sub
mov
pop
call
push
fsub
xchg
push
dec
pop
mov
orb
inc
daa
jns
pop
rcl
dec
jae
mov
data16
jno
loope
sti
xchg
arpl
test
fst
sti
shrb
stos
cwtl
dec
pop
or
fsubl
and
stc
das
call
arpl
jns
arpl
negl
mov
inc
mov
popf
jne
push
sub
fstpt
mov
pushf
jmp
or
mov
scas
dec
mov
cmp
mov
jg
in
jp
xor
and
mov
outsl
sbb
into
sub
int
sbb
inc
stos
nop
mov
dec
or
xlat
mov
sub
fdivs
pop
cmpl
add
lcallw
jno
add
cmp
hlt
pop
loopne
mov
jl
fxch
mov
mov
rolb
xchg
and
dec
ret
stos
ret
not
xor
mov
jne
or
inc
mov
sub
push
adc
pop
lock
inc
cmp
dec
pop
out
lcall
push
push
mov
pop
stos
ret
adc
push
in
stos
lods
cmp
lock
sbb
daa
inc
jle,pn
sbb
add
mov
inc
xor
nop
int3
jae
pop
and
mov
mov
cmc
sbb
mov
sub
addl
lds
aas
mov
cmp
jbe
pop
pop
test
sbb
daa
sbb
jo
aad
outsl
push
popf
scas
in
pushf
lret
jns
mov
mov
and
stc
fwait
inc
imul
sbb
mov
hlt
inc
mov
pop
push
add
push
pop
dec
xor
cld
rcr
push
cmp
xchg
push
mov
cmp
hlt
xchg
pop
cld
mov
pop
in
push
shlb
pop
sub
cmp
shll
sbb
lock
mov
mov
mov
sti
push
jne
popa
aaa
pushf
push
or
stos
dec
pop
push
mov
push
test
dec
lcall
cs
pop
pop
loope
xor
jb
mov
push
loopne
in
push
mov
xlat
xorl
loop
add
xchg
cmpsl
icebp
dec
jns
icebp
sarl
dec
outsb
sbb
add
ds
and
add
ret
jb
mov
xchg
xor
mov
adc
or
fwait
push
push
and
jge
in
jne
add
mov
xchg
inc
xchg
lods
out
xor
nop
mov
sbb
and
pusha
call
sub
cltd
adcb
testl
lcall
jno
jle
push
out
or
ret
vpshlb
fcom
cmp
or
adc
xchg
pop
mov
jmp
inc
pop
pop
mov
jge
xchg
mov
mov
cmc
clc
xor
lods
iret
in
pop
cmp
xchg
fcmovnb
jp
pop
jecxz
ss
shrl
push
data16
lret
fisubrs
mov
into
cltd
mov
sbbb
sub
pop
xlat
loop
mov
cs
outsl
fnstcw
jno
cmp
cld
or
lds
incl
and
pop
scas
out
repnz
pop
pusha
mov
mov
adc
fdivr
push
orb
cmc
push
adc
lret
movsl
in
mov
sar
xchg
mov
fldenv
pop
int3
loope
push
and
dec
orl
cwtl
daa
fnstenv
out
mov
cli
call
mov
sbb
inc
inc
inc
subl
mov
mov
test
and
jbe
insl
push
inc
push
lods
xchg
aam
dec
mov
xchg
cwtl
nop
cmp
aad
mov
int3
pop
push
jge
push
add
adc
ljmp
gs
rorb
addr16
push
sub
fidivl
daa
test
cmc
and
push
or
cmc
pop
lahf
aaa
int
pop
ret
popf
cmp
mov
loop
fstl
or
and
in
jae
addr16
dec
ror
pop
pop
adc
fimull
adc
sub
nop
test
data16
sub
arpl
loope
ret
inc
mov
jecxz
push
push
insb
cli
addr16
es
lcall
pop
push
lds
int3
movsl
iret
sub
jbe
and
jmp
push
xor
mov
dec
icebp
cmp
adc
mov
cmovs
insl
lret
fstpt
lods
mov
mov
scas
mov
out
sub
sbb
or
cmp
add
mov
ss
pop
into
jmp
pop
mov
push
mov
es
xchg
jnp
push
ds
loop
cmp
fadds
sub
test
sbb
bound
sbb
cmp
in
int
mov
or
bnd
js
cmpsb
adc
pop
sarb
sub
xchg
jmp
out
outsb
push
adc
xchg
lock
sbb
dec
jmp
push
xor
adc
xchg
in
hlt
pop
cmp
mov
xor
nop
cmpsl
mov
ror
add
pop
test
sbb
cmc
insb
mov
pop
jb
or
inc
add
inc
pop
cmp
or
pop
or
in
cmc
daa
jle
dec
jmp
sti
cmp
inc
or
or
and
icebp
fmull
dec
lcall
and
or
mov
sar
int
iret
cmp
cmp
pushf
test
sbb
lret
nop
push
fdivl
pop
addr16
mov
xchg
xchg
and
dec
pop
ss
repnz
clc
and
push
ret
nop
pop
pusha
push
stc
mov
xlat
test
mov
jge
push
fildll
shl
lock
test
dec
dec
lods
mov
out
js
jnp
adc
or
push
add
iret
jmp
lods
mov
sbbl
cmp
imul
cmp
sub
arpl
mov
cmc
loope
xlat
lahf
out
sahf
stc
xor
cld
imul
clc
inc
ret
add
xchg
xchg
pop
outsb
inc
inc
mov
mov
mov
movsb
cld
into
imul
and
popf
sub
fdivrl
pop
pushf
pop
fdivrs
adc
jge
mov
int3
and
add
mov
dec
push
aam
repnz
loope
xchg
mov
inc
inc
stos
cmp
push
jnp
jp
push
cmp
test
lods
cmp
mov
std
loop
cmp
mov
shl
cwtl
or
jl
and
aas
mov
loope
mov
mov
xlat
pusha
push
pusha
cltd
xchg
pavgw
or
movsb
rcrb
pop
mov
sbb
cs
decb
test
sbb
out
pop
fs
pop
hlt
arpl
andb
and
stos
ret
dec
sub
pop
mov
js
lds
nop
xor
push
adc
imul
pop
sbb
test
fdivrl
scas
dec
jb
mov
outsl
pop
cmp
mov
int
or
jmp
or
rcl
xor
imul
pop
dec
xchg
dec
stc
or
inc
dec
push
test
iret
sbb
or
dec
inc
mov
inc
sbb
cmp
in
mov
jb
mov
mov
in
inc
xor
cmp
fisubl
adc
and
insl
push
and
jbe
das
mov
mov
test
sub
loopne
xlat
and
push
ss
mov
adc
lahf
out
sub
shrb
scas
pop
lret
and
lcall
mov
push
push
or
fldl
sahf
lds
sbb
push
mov
test
test
pushf
repz
lds
lock
icebp
inc
subl
push
dec
pushf
pushf
mov
push
pop
xchg
ret
outsb
popa
cmp
push
out
test
jns
int
mov
insl
aad
imul
xchg
fldcw
stos
jle
push
aad
jp
sub
out
xor
push
insl
xchg
hlt
or
fs
add
pop
clc
mov
push
mov
jae
aad
sub
inc
out
lock
es
icebp
push
clc
dec
hlt
mov
hlt
push
xchg
movsb
or
loop
add
jecxz
mov
adc
jnp
adc
nop
and
push
jg
xor
mov
mov
mov
test
cltd
clc
test
test
push
sbb
out
mov
das
push
mov
decl
cmp
stos
loope
lret
movl
push
into
sub
ret
dec
lret
or
rcll
sbb
jle
add
rorl
jb
stc
pop
lods
inc
lret
xchg
add
icebp
jl
movsl
or
fwait
or
jb
call
jo
mov
ja
movsl
jle
cmc
ret
cmp
in
insb
mov
lahf
es
pop
add
imul
and
outsb
xorb
mov
push
test
rcrl
mov
inc
mov
xor
jo
dec
and
and
mov
fcom
sbb
sub
add
dec
inc
xor
std
xor
repnz
and
push
mov
sub
imul
jo
pushl
mov
stc
cli
fs
cmpsl
jo
push
sbb
inc
push
push
pcmpgtd
sahf
insb
jae
lea
popf
mov
ja
and
or
ret
test
imul
jecxz
jne
jns
mov
mov
mov
test
rcrl
test
aas
bound
daa
inc
inc
jp
pop
test
sub
aad
pop
pop
push
fmuls
mov
mov
push
mov
xchg
or
pop
sahf
dec
aad
in
mov
jae
orb
jne
outsb
pop
sbb
ret
pop
xchg
mov
mov
test
cli
rcrl
or
sub
cmpb
pop
mov
bound
aam
inc
cmp
push
stc
xor
ret
int
dec
ja
mov
and
adcl
jbe
adc
cltd
lods
mov
sub
pop
sahf
mov
scas
xor
cmpsl
lea
shrb
xchg
aad
mov
xlat
mov
stos
mull
sbb
popa
insb
sbb
movsb
test
lahf
adc
and
mov
bsf
xlat
test
nop
sub
mov
and
sub
add
pushf
sub
pop
mulb
mov
mov
loope
daa
arpl
jge
fadd
scas
push
out
cmc
adc
xchg
mov
jnp
pop
cmp
xor
mov
je
jb
scas
call
cltd
inc
ret
and
shll
dec
cltd
mov
movsl
cmp
cld
cli
ret
icebp
pop
mov
mov
sbb
and
adc
aad
xlat
cmp
loop
mov
and
rcrb
xor
adc
pop
rcl
push
push
adc
outsl
xorb
mov
adc
negl
scas
movsl
mov
jno
inc
aam
push
and
push
mov
xchg
fsubl
pushf
ja
jmp
lret
mov
jp
stc
stos
jecxz
sti
bound
cwtl
dec
xor
jle
lahf
lods
xor
jg
jbe
lods
and
pop
cmp
xchg
sbb
cmc
pop
and
in
or
je
out
lahf
mov
xor
repnz
sub
outsb
dec
mov
push
das
jmp
mov
mov
inc
or
mov
sbb
ret
sbb
fdivr
jmp
jge
iret
mov
jnp
xchg
jnp
clc
mov
pop
jnp
push
fnsave
sbb
imul
in
aas
jg
mov
dec
jge
mov
mov
rorl
outsl
mov
lret
fistl
outsb
js
dec
inc
insl
and
push
add
jno
ja
sub
into
xchg
lods
pop
xchg
scas
lods
in
pusha
or
mov
shlb
jne
pop
testl
xchg
sarl
fldenv
push
pop
popa
sbb
jae
fists
add
jno
sbb
aam
or
subl
pusha
loop
in
push
mov
pusha
decl
test
cmp
pop
mov
lods
aas
imull
repz
lea
sahf
cmpsl
mov
enter
icebp
adc
pop
aam
and
xchg
sbb
idivb
mov
es
nop
and
dec
add
out
cmpl
and
pushf
mov
cmp
outsb
sub
cs
inc
lret
jns
xor
not
add
or
sub
inc
adc
loope
pop
mov
xor
push
pop
pop
loopne
in
mov
call
neg
mov
sbb
sub
pop
and
fnstcw
ret
or
inc
inc
lcall
in
enter
dec
pop
mov
fcmovb
leave
and
push
pop
lcall
or
call
fs
and
dec
pause
dec
popa
mov
add
mov
mov
out
icebp
mov
test
cmovg
popa
mov
dec
jns
aas
dec
imul
fimuls
inc
rolb
and
ret
insb
daa
lds
sarb
sbbl
data16
push
je
nop
cmp
popa
jnp
cmpsb
sbb
mov
movsl
mov
lock
pop
cld
fldl
pop
fildll
test
arpl
mov
push
jmp
jno
inc
fbld
test
xchg
xor
adc
pop
jmp
push
sub
cmpsb
aad
mov
sahf
cwtl
cld
mov
mov
cmpsl
fdivrl
xlat
stos
jg
arpl
dec
jp
out
jp
insb
mov
xchg
sahf
in
hlt
dec
insl
in
push
adc
ds
aad
sub
movb
std
or
aam
mov
aaa
xchg
sahf
cmp
and
cmp
int3
faddl
xchg
push
andb
stos
enter
jle
cmpsb
test
xchg
pop
ficoms
ficoms
loopne
inc
xorl
mov
int
call
pop
and
and
movsl
push
xchg
cmp
jecxz
cmp
xchg
out
and
imull
imul
pusha
xchg
je
popa
dec
xor
and
cld
adc
ljmp
test
loopne
and
xor
dec
aas
in
jmp
pushf
fdivs
fdivr
cwtl
imul
shrb
and
lea
push
fldcw
fs
movb
adc
das
sar
adc
ljmp
pushf
adcb
sbb
cld
pop
mov
mov
add
cmc
sbb
nop
arpl
lret
cs
negb
mov
jmp
push
and
iret
data16
sub
lahf
sti
pop
push
inc
sbb
iret
mov
dec
mov
xor
dec
sbb
mov
and
ret
fistpl
inc
mov
ds
xor
sahf
mov
fbld
add
inc
cmp
imul
dec
or
lret
lods
xor
sub
and
loop
or
xchg
cld
aad
mov
jnp
sbb
repnz
int
out
pop
das
gs
sub
das
or
lcall
lock
cli
sub
mov
xchg
out
sti
subb
js
xlat
mov
or
imul
sbb
push
xchg
adc
jmp
pusha
dec
add
jo
add
mov
and
mov
fs
loope
out
loop
push
and
aaa
adc
jns
cmpsb
add
js
mov
ds
mov
imul
std
dec
daa
test
shll
mov
fstpl
fisttps
ljmp
add
das
ret
inc
xchg
pusha
push
in
ret
adc
or
xor
mov
or
xchg
fisubl
adc
adc
gs
insl
hlt
leave
dec
and
fwait
xchg
sub
xor
sbb
js
sbb
sub
out
cs
dec
add
shr
inc
xor
xchg
pop
cld
add
repnz
pop
add
pop
inc
adc
dec
cmp
sub
jl
bound
ss
leave
pusha
add
mov
lcall
fidivl
adc
pop
loope
flds
out
sub
fucomi
push
pop
and
xlat
jecxz
xchg
dec
jg
push
out
iret
int3
jl
cld
jmp
sbbl
cwtl
pop
js
push
test
push
jnp
push
jnp
test
cmp
popfw
and
out
shrl
adc
rclb
scas
rclb
aaa
push
inc
bound
mov
jae
xor
or
shll
jmp
sbb
xchg
jl
bound
and
cli
outsb
movsb
sbb
xorb
imul
pop
xchg
sub
sub
or
cmp
push
movsb
mov
fbld
lods
lahf
cmp
imul
sub
inc
pop
push
jno
movsl
jg
push
in
cmp
add
cs
aad
jmp
adc
test
lcall
sub
pop
mov
add
mov
push
xorb
in
or
sarl
push
loopne
inc
pusha
pop
ret
jbe
and
jno
shll
mov
jnp
fists
push
jge
xchg
ret
call
pop
fimull
cmp
jo
jle
or
pop
mov
in
into
sub
sahf
sahf
mov
mov
adc
loopne
xchg
pop
cmp
xchg
mov
mov
clc
nop
mov
jle
xlat
int
adc
ret
cld
mov
mov
push
cmp
pop
fisubs
jns
arpl
pop
mov
out
xlat
push
push
shll
clc
xor
fwait
cmpsl
repnz
in
mov
rorb
jp
push
aaa
push
not
inc
sub
jl
test
loope
movsl
mov
push
dec
mov
sbb
aas
adc
popa
std
dec
cmp
fsts
adc
jmp
sti
xor
push
insl
and
push
add
into
mov
mov
cmp
jno
cmc
sti
jo
ret
fwait
rcrb
clc
ja
mov
mov
hlt
int
sbb
or
incl
cmpsb
pusha
jns
js
gs
push
push
sub
jecxz
sub
pop
inc
pop
aas
leave
ss
dec
jmp
and
pop
cmc
cmpsb
push
cmp
sti
bnd
adc
dec
jge
xchg
aam
lret
and
mov
jo
popa
mov
and
int
cld
xor
xchg
mov
sub
sarb
push
mov
ds
jl
aaa
rorb
jg
and
test
and
lcall
dec
mov
mov
mov
dec
popa
xchg
pop
lret
mov
movsl
push
outsl
cltd
mov
push
mov
jae
sub
xlat
imul
test
repnz
popf
sbb
inc
shll
jbe
call
popf
xor
daa
ret
cmpl
scas
cmp
push
scas
pop
sbb
ds
iret
testl
daa
sub
cmp
inc
xlat
jns
outsl
push
pop
jecxz
sub
inc
pop
jb
mov
enter
pop
inc
mov
or
lret
mov
pop
jp
and
push
mov
push
cmc
xchg
imulb
nop
lret
cmp
ja
push
cmp
shl
inc
fprem
fwait
hlt
in
mov
add
pop
sub
and
push
mov
or
je
xchg
loope
add
pop
sbb
int3
dec
shrb
sbb
in
adc
sub
xchg
add
lea
into
jge
push
loope
xor
fnstsw
xchg
insb
leave
dec
mov
pop
push
daa
in
imul
nop
stc
dec
loope
cmpb
sbb
mov
ret
out
rolb
sub
test
pusha
insl
sete
jb
dec
cmc
idiv
jnp
or
mov
arpl
mov
add
jmp
push
fs
jnp
sti
push
jmp
ss
pop
pop
out
test
fs
mov
lea
mov
push
arpl
cmpsl
loope
rorl
movsl
mov
cli
lods
in
pop
cmpsl
imul
mov
cmpsb
movsb
loop
inc
or
sub
xor
push
lods
inc
popa
sub
push
insb
mov
in
iret
sbb
jmp
xlat
bound
movsb
aas
fistpl
xchg
xchg
addl
outsb
or
movsl
and
cmp
cmp
addb
push
sbb
sbbl
adc
lods
fisttpll
push
insl
pop
fnsave
hlt
cs
popf
inc
pushl
fs
stos
js
inc
xor
repz
je
jo
and
mov
and
xchg
into
inc
adc
js
push
addr16
push
cmp
xor
repnz
lret
dec
repnz
xchg
addl
xorl
xchg
out
lds
inc
and
cmp
clc
fxch
stos
pop
cmpsl
insl
movsb
fsubl
mov
xchg
out
jo
push
mov
aas
repz
pop
mov
imul
inc
push
in
and
sub
add
xchg
xchg
sub
mov
sub
push
sti
and
sbb
mov
lock
call
inc
add
stc
mov
xchg
sbb
jp
outsl
ss
or
fsubr
xchg
and
in
or
mov
ds
pop
std
pop
sub
add
lea
popf
shlb
movsb
pop
dec
pop
outsb
xchg
mov
add
pusha
lock
or
test
cmp
shl
cmp
stc
scas
fildll
pop
loopne
inc
or
aad
xor
cmpsl
pop
push
xor
mov
dec
repnz
js
clc
mov
sub
cli
popf
int
push
iret
xchg
into
imulb
int3
xor
sub
dec
push
mov
jge
loopne
mov
pop
and
stc
cmp
lret
adc
fldcw
jns
xor
ds
cmpsl
jecxz
pop
pusha
inc
push
pop
inc
inc
mov
and
and
jge
jno
mov
mov
mov
mov
bswap
lds
jno
mov
enter
jnp
lret
lret
xchg
add
inc
xchg
mov
ds
shlb
std
mov
pop
mov
add
lods
sti
push
fnstcw
pusha
adc
jg
adc
pop
xor
xor
jae
shll
inc
xor
sbb
nop
js
xlat
pop
pushf
sub
inc
mov
outsl
test
inc
pop
nop
pop
outsb
out
data16
adc
mov
sub
xor
repz
dec
movsl
rclb
push
loopne
xlat
das
xor
mov
lret
adc
scas
cltd
ror
mov
dec
adc
ss
dec
imul
mov
jae
push
sbb
xor
dec
pop
cli
movsb
adc
dec
js
dec
push
or
xchg
popa
jge
loopne
xchg
push
dec
xor
test
mov
mov
add
out
mov
pop
mov
push
cmpsb
fwait
hlt
pop
add
jno
ljmp
xlat
push
sti
popa
ss
movsb
in
sbb
jmp
sub
sub
bound
cmp
xchg
ja
mov
cmc
adc
movsb
rolb
adc
ss
xor
lods
cltd
adc
fisttpl
fimull
out
mov
jo
les
mov
xchg
dec
xchg
sub
dec
inc
mov
pushf
mov
icebp
adc
xchg
repnz
xchg
jb
movsb
lcall
lahf
lods
scas
repz
jnp
repnz
or
lahf
and
cmp
ret
jge
aad
pop
dec
insb
mov
rcrb
xchg
lock
sub
cmpsb
cmp
adc
jmp
mov
icebp
aam
add
mov
mov
shll
pop
push
fsub
pop
xchg
mov
fdivs
adcb
cmp
and
mov
shl
adc
jl
imul
lea
push
add
jl
mov
jbe
dec
mov
test
minps
sbb
shll
mov
lods
scas
push
push
icebp
cmp
subl
test
push
fiaddl
mov
sub
scas
inc
and
bound
push
xor
adc
outsb
iret
rclb
fidivrl
push
add
dec
jmp
mov
cli
sbb
jg
xor
mov
addl
jae
scas
push
jb
jb
sub
fidivl
movsl
in
mov
mov
loop
and
jbe
sub
and
in
jle
sub
sbbb
xchg
pop
dec
stos
inc
jmp
lcall
dec
cwtl
rcr
inc
ret
out
inc
xchg
sarl
stos
je
ljmp
mov
jb
sub
icebp
pop
xchg
lret
imul
xor
xchg
addr16
lcall
push
test
shll
fstpl
in
fnsave
enter
xor
lods
lcall
add
enter
enter
push
jmp
lods
xchg
repnz
jl
inc
aas
jecxz
sarb
jp
sahf
int
jmp
lret
push
scas
push
sbb
stc
rcr
fs
inc
push
add
inc
lods
pop
xchg
femms
jo
cmpsb
int3
jg
cmp
mov
jp
fnstsw
lret
ds
xor
adc
push
out
jecxz
sbb
dec
aad
js
hlt
iret
ja
pop
test
jge
pushf
jno
adc
inc
jo
push
iret
add
mov
popf
mov
cmpl
sbb
xchg
repz
outsb
andps
dec
sbb
leave
sub
pop
popa
pushf
lahf
int3
inc
fsubrl
mov
dec
cltd
div
scas
push
out
stos
mov
andb
pushf
xchg
cmc
fistpll
mov
pop
das
sub
mov
cld
xchg
fadds
popa
out
cmp
rcr
jbe
lea
mov
leave
cltd
stos
jl
aaa
inc
xchg
ja
sub
adc
test
sti
adc
dec
sub
orl
jo
packsswb
aas
push
xchg
movsl
scas
xor
prefetcht2
sar
out
sahf
enter
fisubs
sti
jl
fldt
xor
push
dec
xor
add
or
push
xchg
mov
imul
mov
xchg
lods
pusha
or
fidivrl
inc
jbe
das
mov
pushf
jno
pusha
push
lods
repnz
mov
outsb
push
mov
push
adc
mov
push
xchg
mov
sub
mov
sbb
fidivl
in
jmp
out
sub
clc
cmp
lods
icebp
mov
xchg
in
outsb
loope
push
lds
test
rcl
popf
int3
push
loop
enter
xor
stc
push
fcomip
add
lock
int
xor
enter
jno
int3
mov
lret
xor
push
cli
lods
dec
inc
leave
mov
sub
mov
push
imul
clc
sub
std
and
adc
lods
push
insb
xchg
sub
mov
inc
dec
jmp
lahf
sub
ja
xchg
movsb
cmp
xor
adc
loopne
jbe
repz
jae
mov
lcall
test
mov
cmp
add
xor
je
test
mov
cmp
xchg
bound
dec
ja
adc
mov
test
cmp
adc
enter
xor
lcall
cmc
mov
adc
jno
insl
mov
sbbb
xchg
js
int3
in
push
repz
neg
insl
jns
push
dec
mov
popf
jns
in
push
or
leave
xchg
jae
daa
testb
icebp
mov
jbe
not
loop
xchg
aam
adc
addr16
test
add
pushf
lods
in
xchg
mov
aad
push
cmc
jne
dec
push
pusha
in
push
je
sbb
lret
dec
pop
adc
pop
mov
addr16
dec
pop
sub
aad
lods
sti
lret
stos
pop
sub
scas
int3
mov
dec
or
lcall
ljmp
out
aas
rorl
testl
in
add
adc
enter
jle
pop
jno
xchg
xlat
shrb
xchg
fwait
dec
pushf
push
push
xor
and
mov
or
enter
jp
je
sub
test
bound
insl
fwait
lcall
mov
push
mov
aad
jle
enter
aad
rcr
or
mov
std
pop
mov
loopne
incb
jnp
pushf
inc
rorl
cmpsb
push
mov
movsb
lahf
mov
lcall
add
push
or
into
scas
mov
lret
or
lcall
and
ficoms
cwtl
jb
enter
adc
xlat
push
xchg
or
mov
jo
fstl
arpl
fsts
push
ror
add
in
jns
mov
cmpsb
push
sub
pop
mov
mov
push
jg
inc
cmc
int3
adc
jo
jnp
xchg
adc
inc
cwtl
push
dec
call
nop
fcompl
push
loop
lea
repz
je
nop
out
bound
std
push
sub
push
dec
imul
push
jecxz
ss
ljmp
cld
push
jns
mov
pop
flds
popl
int3
test
pop
mov
ds
push
inc
jnp
cmp
or
stos
mov
loope
lret
cmpl
hlt
lcall
cmp
mov
inc
xor
imul
movsb
pop
cmp
and
fldl
pop
outsb
or
jo
cld
lret
test
in
scas
lock
dec
test
cmp
popf
fidivrl
push
adc
into
add
mov
cwtl
test
cmp
jb
mov
jg
pop
xchg
xor
cmp
xor
and
popf
add
test
push
jl
add
movsb
dec
pop
cmp
and
cmp
mov
aas
and
std
leave
dec
lret
out
xchg
rclb
push
or
cmc
push
xchg
scas
aam
mov
push
arpl
data16
shrb
add
outsb
xor
sub
iret
mov
int3
ljmp
mov
lods
push
orl
int
xor
das
adc
test
push
mov
mov
push
subl
adcl
or
xchg
jle
push
mov
xchg
fidivrs
shll
push
leave
mov
mov
xor
out
xchg
inc
lock
imul
adc
loopne
into
lea
das
lret
xchg
xchg
inc
into
jno
sahf
pop
js
aad
adc
cmp
fsubrl
push
xchg
jge
sub
imul
je
xchg
mov
push
out
xchg
aas
xor
and
movsl
add
and
clc
mov
dec
pop
push
push
in
or
nop
sbb
andb
clc
lcall
in
mov
sub
xchg
fildl
out
imul
xor
pop
or
pop
aas
mov
pop
or
or
pushf
push
int
fimuls
mov
bound
icebp
repz
insb
popf
jle
jmp
add
jno
sub
xchg
mov
andb
adc
sub
fwait
mov
push
jnp
pop
test
cmp
adc
and
lods
and
ss
fwait
xchg
pop
dec
push
push
arpl
dec
push
bndldx
es
cwtl
ss
or
jp
mov
push
hlt
fs
js
clc
ljmp
mov
xchg
jno
subb
inc
lahf
nop
cmpsl
aad
or
iret
das
push
cwtl
les
ret
jp
mov
subb
and
in
xor
fnsave
mov
push
data16
dec
jne
xor
fdivp
andl
add
test
push
push
sub
jns
data16
or
popl
mov
in
mov
xorl
jne
sub
push
pushf
movaps
sub
aam
ss
cmp
xlat
repz
lret
sti
lahf
pop
xor
jb
cs
mov
sbb
nop
subl
xlat
add
call
sbbb
pop
sbb
cmp
imul
stos
lahf
inc
mov
jge
or
aam
dec
push
add
pop
sti
stc
jnp
or
std
loop
xor
sub
jno
xchg
testb
xchg
jne
mov
mov
add
inc
mov
fsubr
sarb
dec
xorl
cmc
arpl
jo
icebp
jnp
fcmovnu
cmpsb
pop
jb
jmp
and
popf
ds
gs
mov
inc
outsl
test
mov
test
in
int3
mov
cmp
lret
in
lds
cmp
dec
in
test
mov
test
lods
in
cmc
xchg
and
push
push
push
andl
lods
imul
loopne
rol
lcall
pop
lcall
mov
jmp
les
inc
adc
in
dec
cmp
jno
les
call
pop
sar
negl
mov
shlb
or
js
inc
sbb
mov
xchg
fisubs
cmp
adc
int
push
mov
in
and
adc
jns
mov
mov
mov
xorb
std
and
mov
lods
or
dec
add
mov
or
xor
cmpsb
push
fsubs
cmpsb
in
decb
mov
xchg
test
adc
std
jne
outsb
jmp
gs
mov
mov
shld
adc
pop
scas
xor
jb
dec
testl
into
lods
jle
push
mov
mov
mov
xor
and
cld
inc
xor
loope
stc
ret
and
mov
shr
inc
xchg
sbb
cmc
sbb
fcmovnb
cwtl
adc
lock
mov
or
ljmp
xchg
lods
or
insl
push
cmpsl
out
lret
into
fstpl
mov
outsb
outsl
cmp
dec
stc
imul
inc
cmp
sbb
and
jne
or
adc
int
xor
out
les
repz
sbb
stos
adc
loopne
dec
dec
cmp
add
mov
in
sahf
fmull
jle
sub
lcall
es
mov
mov
pop
pushf
aam
test
fwait
sti
jecxz
je
sub
jnp
push
mov
out
inc
or
mov
dec
mov
imul
cmp
jnp
dec
inc
push
sbb
mov
jecxz
jo
jne
pop
fcmovne
outsl
lea
mov
xor
loop
and
and
loope
mov
inc
jmp
fidivs
bound
pushf
loop
pop
and
xchg
test
fbstp
out
lahf
imul
jecxz
out
pop
xchg
dec
jnp
int
push
icebp
rol
push
pop
ret
scas
xor
add
xchg
bound
fistps
and
movl
popl
insb
outsl
adc
std
out
push
dec
lds
add
cs
sar
mov
nop
cli
lock
cmp
mov
fistps
or
test
out
in
inc
aam
test
or
xor
adc
ret
push
iret
dec
add
sub
xchg
fldt
stos
mov
lret
fs
cmc
mov
ret
xchg
popw
dec
pop
imul
cmp
lcall
mov
fisttps
add
push
ret
scas
sbb
call
adc
repz
or
clc
inc
icebp
cmpb
adc
pop
repz
ret
lcall
call
adc
clc
repnz
push
ja
inc
mov
loopne
and
pop
lods
rcr
push
pop
jle
je
outsb
pop
inc
lods
jle
outsl
fdivr
mov
and
push
sub
inc
mov
cmpsb
xor
adc
addl
push
pop
mov
lahf
sbb
sbb
sbbb
cld
loopne
or
nop
pop
call
mov
je
fldt
test
xor
fldl2e
adc
and
gs
jmp
inc
test
sub
xchg
fiadds
popf
mov
push
shlb
scas
mov
in
xchg
xchg
mov
add
out
push
mov
sub
movsl
scas
out
xlat
jl
out
hlt
insb
icebp
mov
das
sub
xchg
add
push
fwait
sti
lret
mov
and
fimull
mov
int3
jo
jbe
aaa
and
ss
fmulp
sub
jns
push
jmp
mov
fisubrl
or
xchg
push
add
mov
adc
xor
cwtl
aaa
mov
mov
enter
cmp
or
leave
push
mov
ret
push
mov
or
imulb
push
fdiv
xor
andl
and
imul
sahf
or
jnp
cmpb
lahf
in
or
inc
mov
pop
jecxz
cwtl
jne
push
xor
sbb
mov
xchg
loop
xchg
push
mov
fnstcw
fidivl
pop
jl
push
add
xor
pusha
jmp
mov
filds
add
test
xchg
je
movsl
lods
or
push
sbb
hlt
mov
inc
fiadds
jo
ficompl
imul
je
cmpb
aas
in
ficoms
gs
dec
sub
movsl
cld
lods
inc
sbb
clc
push
sub
fs
jbe
test
or
jle
push
inc
stos
cli
jbe
push
stc
dec
jl
test
and
cld
into
movsl
aam
adc
jo
fnstsw
push
insl
outsb
mov
push
or
ret
ret
es
std
push
jge
aaa
fiaddl
in
pop
int
sbb
adc
fnstenv
lds
std
stos
xchg
push
aas
jae
aaa
sbb
aaa
inc
sub
sub
aaa
jne
jge
add
xor
push
jge
or
adc
xorb
popa
cld
adc
inc
mov
loope
sbb
mov
jmp
mov
pop
mov
jne
test
adc
xchg
push
sub
in
cltd
aaa
mov
das
cltd
int3
xorl
mov
mov
scas
add
movsb
push
adc
push
lea
and
shll
cmp
sbb
adc
mov
cmp
dec
adcl
add
rcl
or
loop
push
paddd
loop
cld
cmp
int
sbb
cmpsl
push
jae
push
insl
clc
mov
les
or
fdiv
xor
sbb
movb
mov
test
ljmp
rorb
pop
cltd
popf
mov
imul
data16
jmp
add
add
test
add
jne
xchg
push
clc
jns
push
lahf
mov
rclb
mov
cmc
pop
xchg
jge
insb
dec
rorl
lcall
lcall
cmpsb
out
and
pop
or
clc
push
imulb
into
pop
mov
ljmp
sahf
rorl
popf
loope
mov
xchg
xchg
pop
fcomps
mov
jge
andb
xor
loopne
mov
cmp
aaa
sti
cs
rcll
js
lret
xchg
pop
jge
sub
lods
xor
shrl
dec
stos
cmc
je
insb
dec
xchg
sub
sub
je
jmp
shlb
mov
sub
stos
loope
xchg
cmp
push
jnp
and
cmp
adc
lods
dec
idivb
nop
cmpl
mov
fwait
stos
sub
addb
imul
mov
mov
inc
cmp
mov
and
cmp
and
sbb
dec
push
dec
mov
out
jnp
aaa
mov
pop
pop
ret
cmpsl
dec
inc
or
pusha
loop
xchg
into
cmp
or
push
ds
push
aam
movsl
push
xor
pop
cmpsl
js
arpl
daa
insl
push
nop
test
sub
or
cmc
punpckldq
pushf
pop
cmpl
mov
scas
iret
push
repz
test
rcrb
xchg
loopne
sbb
shll
xchg
fimuls
cmpsb
cld
iret
push
daa
rcrb
fmul
xchg
mov
dec
arpl
inc
shl
outsb
int3
mov
xchg
insb
mov
out
js
sarb
int
push
cli
cltd
cmp
mov
fildl
int
dec
inc
popa
and
das
ja,pn
mov
mov
aas
enter
ds
enter
pop
push
sahf
fisttpl
testl
pop
pop
adc
loop
mov
xor
fwait
sbb
sbb
push
dec
jg
sub
pop
lahf
cwtl
imul
into
imul
or
loopne
mov
xchg
mov
xlat
insl
aad
mov
mov
lds
and
inc
xchg
shrb
sbb
sbb
fbld
fstps
dec
cld
bound
add
aaa
ds
sbb
loope
xchg
stc
repz
dec
push
pusha
adc
js
addl
les
fbstp
notl
fcmovne
divb
sahf
addb
or
xchg
fsubr
gs
int3
cld
sahf
shll
je
cmp
stos
xchg
sub
out
rcrb
and
lcall
xor
inc
in
test
adc
mov
jmp
inc
pusha
imul
push
cwtl
shrb
gs
cwtl
fstpt
loopne
push
push
mov
inc
movsl
or
sbb
pop
fidivrs
mov
mov
jae
xor
pop
inc
inc
jns
mov
fadds
int
jae
mov
pop
fsubs
inc
addr16
mov
adc
icebp
push
xor
cmp
dec
pop
xchg
xchg
pop
pop
pop
xchg
pop
pop
jns
les
not
and
dec
or
popa
and
and
mov
mov
out
repz
jno
aaa
mov
fidivs
inc
sbbl
xchg
mov
leave
andl
cli
sub
xlat
jg
jg
sub
f2xm1
mov
mov
lret
mov
mov
dec
scas
daa
test
push
cmp
xor
cwtl
arpl
jbe
dec
xor
icebp
or
or
mov
repz
ret
push
sar
movsl
leave
les
and
jl
repz
push
out
je
dec
out
adc
pop
mov
sbb
sub
icebp
mov
cmp
or
mov
in
sub
sbb
stos
gs
rcrl
push
js
xchg
outsl
push
push
scas
pusha
outsl
jg
jmp
lahf
daa
cltd
addr16
insl
shrb
jle,pt
and
or
mov
push
xor
popa
add
fsubs
es
je
or
psrlq
jns
das
and
data16
xorl
test
scas
jge
xchg
jo
loop
sti
pop
lock
ret
mov
aad
adcl
call
or
xchg
push
sub
rol
mov
jne
inc
jg
mov
pop
inc
add
mov
dec
pushf
decb
sub
or
ret
dec
stos
popl
cmp
jl
jmp
xor
nop
addr16
iret
xchg
xchg
sbbb
inc
pop
ss
in
push
in
mov
mov
scas
test
mov
and
out
pop
xchg
dec
and
mov
addb
in
in
jle
iret
test
clc
hlt
ja
xor
push
aam
scas
aas
or
cmp
push
clc
and
mov
mov
aas
mov
cmp
sub
iret
rolb
xor
or
dec
mov
mov
fwait
aas
inc
xchg
cmp
cmp
xchg
filds
lods
push
leave
push
inc
arpl
pop
dec
mov
and
dec
cmpsb
cmp
mov
dec
jmp
dec
fstl
sbb
shrl
in
filds
test
push
cmp
mov
ret
loop
sbb
sbb
adc
jecxz
xor
inc
lcall
out
sbb
inc
xchg
pop
lcall
sarb
test
or
pop
pop
add
addl
fs
sub
out
xor
xchg
add
adc
jecxz
cld
pop
sbb
cmp
cmp
subl
xlat
scas
inc
nop
sub
nop
ljmp
and
inc
insl
inc
mov
mov
inc
add
sub
push
pop
inc
stc
scas
xor
jmp
jo
into
cmpsb
sub
test
and
loopne
sarl
dec
iret
sbb
addb
adc
mov
xchg
inc
or
jnp
add
shl
add
jl
mov
out
sub
mov
repnz
dec
popa
xchg
insb
std
fucomip
aas
js
into
test
out
lea
push
loope
and
sti
push
adc
popa
dec
in
jns,pn
scas
cld
ret
lret
cwtl
movl
mov
xor
sbb
orl
add
mov
pop
xor
jbe
lahf
out
rorb
decl
xor
fcompl
lea
and
pop
xchg
inc
sbb
jno
cmp
or
decl
dec
in
imul
movsl
add
movsb
and
push
mov
fwait
pop
cmp
notrack
outsb
add
ljmp
and
ror
das
xchg
dec
xor
adc
jge
inc
pop
xor
repnz
cld
dec
repnz
aas
mov
stos
iret
mov
jmp
gs
add
in
adc
sbb
aaa
adc
dec
push
and
xchg
xor
popa
sub
push
ror
xchg
xchg
in
ja
push
fdivl
lds
push
jecxz
insl
out
and
xchg
ljmp
mov
rol
lret
or
inc
cltd
cltd
push
pop
add
loope
sahf
sub
xor
or
sub
mov
stc
sbb
pop
ret
fmulp
sbb
mov
insl
cmpb
push
testb
xorl
cmp
cmpb
jmp
inc
icebp
jp
in
movsb
ss
rorb
repnz
mov
insl
cltd
jg
or
or
or
xor
sbb
push
sbb
cmp
and
push
pushf
test
das
lods
rcll
repnz
mov
leave
ret
sti
pop
push
adc
insb
add
add
leave
fcomi
xchg
inc
jbe
mov
pop
pop
xchg
xchg
pop
push
push
inc
mov
out
mov
inc
adc
pop
and
aam
lock
pop
xlat
xchg
mov
mov
xor
movsl
ds
fidivrs
int
pop
xlat
aad
cmp
or
add
shrb
ljmp
aam
jp
cmp
mov
jb
or
out
xchg
pop
shr
mov
inc
addr16
imul
or
jmp
arpl
inc
sub
movb
dec
cwtl
xor
mov
and
inc
jg
sbb
seta
inc
loopne
cmp
cmp
pop
inc
cmp
pop
enter
cs
mov
outsb
inc
xor
mov
loopne
popf
mov
pop
push
clc
mov
int3
mov
or
testb
sub
shrb
test
test
mov
out
push
scas
add
bound
push
push
bnd
inc
push
pop
inc
pop
dec
idivl
test
addr16
mov
aaa
inc
sti
sahf
push
mov
inc
and
test
pop
add
adc
inc
fsubl
dec
lcall
out
ret
sbbb
cld
enter
jno
mov
mov
mov
jl
ds
push
jecxz
test
mov
rorb
sbb
mov
incb
sbb
xor
inc
xor
ds
mov
mov
jo
add
outsb
cmpsb
pop
in
sbb
fcoml
ror
ret
sahf
pop
cmpsl
or
stc
pop
mov
and
repz
ret
test
and
jge
cmp
sarb
sub
push
push
or
mov
sub
sbb
jno
jecxz
xor
push
loop
cmp
jnp
lret
gs
xchg
sbb
das
test
or
xlat
imul
into
fdivrs
lcall
cmp
cmpsl
or
or
xor
sti
and
loop
movsb
xor
xchg
std
pop
std
inc
sub
cmc
jns
ds
sub
xor
jnp
push
cmpsb
inc
imul
mov
cs
cmp
inc
xlat
in
cmp
add
add
into
ret
cmp
inc
arpl
inc
out
pop
ljmp
mov
pop
outsl
mov
or
mov
inc
pop
loop
repnz
mov
adc
out
int
sub
xchg
pop
into
jne
cmpsl
and
sbb
cltd
and
mov
and
stos
repz
mov
add
cmp
cmp
and
andl
lea
popa
into
nop
mov
mov
inc
pop
xor
sbb
adc
and
cmp
sub
sarb
aaa
push
cmp
push
sti
pop
sahf
jnp
sub
and
loop
js
dec
mov
data16
jge
out
sub
fisttps
cmp
cmp
cmp
adc
or
cwtl
dec
jecxz
clc
pop
mov
add
xchg
mov
or
mov
sub
ret
mov
cmp
int
mov
sbb
jne
hlt
add
mov
or
xlat
cld
fldcw
or
pop
cmp
cmpl
cmc
aas
lcall
jne
adc
stos
sahf
gs
test
cmp
aam
mov
pop
push
dec
mov
xchg
cli
mov
loop
jge
xchg
ljmp
cmp
aaa
push
cs
jno
rclb
cmpsl
jecxz
jp
sub
outsb
pop
adc
idivb
inc
jne
xchg
mov
out
sbb
into
je
mov
aas
mov
mov
push
push
hlt
dec
push
aad
daa
outsl
sub
pop
testl
push
push
inc
sbb
mov
pop
fisttps
scas
and
inc
inc
cli
dec
adc
outsb
outsl
test
mov
andl
mov
sub
paddsw
inc
push
dec
mov
lods
push
mov
lret
hlt
int3
ljmp
scas
iret
in
xchg
insb
test
icebp
pop
pop
lret
jnp
repz
in
cmpsl
pop
xor
xor
outsb
mov
fistpl
std
cwtl
fs
lcall
or
jmp
js
addr16
popf
pusha
movsl
dec
xor
sub
inc
movsb
cli
sahf
int
xchg
mov
xchg
mov
pop
out
or
or
jp
repnz
imul
or
out
dec
ljmp
jl
cmp
xchg
push
in
enter
dec
xor
int3
inc
psrlw
inc
jecxz
insl
or
test
in
adc
jns
call
jmp
jnp
push
mov
mov
cmc
int3
jae
test
cmpl
xor
sarb
cmp
mull
fisubrs
pop
in
pop
ja
xchg
xchg
ja
cmpsb
stc
enter
aaa
dec
test
mov
xchg
cs
dec
pop
adc
hlt
cmpsl
xchg
push
and
or
xor
pop
ret
cmp
gs
cmp
push
fnsave
mov
pmaxsw
mov
imul
add
adc
bound
scas
and
aad
repz
cmpsl
jecxz
js
ja
adcb
dec
pop
icebp
test
into
addr16
andb
jno
inc
add
lods
add
dec
jne
pop
xchg
int
fdivrs
mov
cmp
and
enter
sub
iret
mov
fsubr
sbb
clc
sbb
mov
cmp
cli
push
add
pop
out
sbb
pop
out
dec
push
lds
das
lret
pop
aam
in
lret
decb
lods
adc
push
push
hlt
jg
aad
repz
popa
push
sbb
adc
dec
dec
mov
arpl
or
mov
mov
jmp
xor
jns
jmp
pop
icebp
roll
cli
xor
jp
inc
test
adc
test
and
std
jnp
int3
roll
sub
fsubs
out
jbe
outsb
and
pop
adc
adc
iret
jg
mov
imul
cli
rorl
inc
or
icebp
aam
test
jle
jne,pn
and
ljmp
xchg
fsubrp
aam
movsb
fs
in
cli
je
mov
sbb
addb
inc
outsb
jns
and
sbb
adc
lds
xchg
mov
sub
inc
in
sbb
ljmp
push
adc
push
mov
negb
int
dec
pop
cmpsl
ss
push
shrb
pop
aas
int
iret
pop
psraw
inc
mov
push
cmp
into
pop
nop
fists
dec
icebp
dec
cli
or
ljmp
mov
add
jge
out
imul
lahf
insb
rolb
xchg
sub
nop
bound
repnz
in
and
push
gs
stos
cmp
jp
fs
sahf
daa
gs
ret
inc
in
mov
lahf
adc
ret
fcos
es
xchg
ss
inc
pusha
adc
push
call
jo
icebp
sub
push
add
mov
imul
cmp
mov
lcall
push
pop
mov
ret
or
and
std
pop
out
repnz
dec
jg
insl
test
mov
xchg
aad
cmp
pop
cmc
push
cmp
scas
mov
push
rorb
pop
mov
pop
xor
repz
and
cmpsl
clc
dec
add
stos
lret
movsb
mov
fisttpll
std
in
sub
xchg
aam
fmull
std
mov
cmp
cmp
add
popa
xor
inc
dec
sarl
lcall
jno
jbe
mov
int
mov
jg
out
sbb
icebp
adc
mov
test
mov
add
addb
inc
mov
lods
test
fisttps
loopne
cmp
clc
mov
ds
sbbl
cmpsl
movsl
popa
push
fnstsw
sbbl
jecxz
out
out
xlat
mov
imul
xchg
inc
fwait
ss
mov
inc
push
push
pop
cmpsb
dec
cmp
and
outsb
out
fimull
push
jb,pt
push
nop
mov
int
fstpt
call
dec
cwtl
popa
xor
fdivs
ret
sarb
push
push
push
mov
outsl
out
inc
iret
cli
mov
ss
sti
bnd
xchg
cmc
testl
push
mov
sbb
sub
cltd
jmp
cli
in
inc
pop
popf
mov
daa
stos
xor
xor
xchg
aam
out
sbb
loopne
ret
cltd
cmp
iret
js
jmp
call
jle
jo
pop
pop
adc
fldl
dec
icebp
mov
sub
add
pusha
imul
xchg
jo
iret
shll
das
mov
mov
sub
cmpb
push
push
inc
test
lret
cld
scas
mov
sub
les
add
and
mov
jmp
sbb
insl
xor
lock
iret
jge
shlb
js
push
inc
rcrl
stos
ja
cli
cmp
lds
mov
lea
popf
dec
dec
push
leave
imulb
and
nop
call
outsl
mov
or
daa
push
mov
aad
lea
dec
mov
xor
mov
scas
push
inc
pop
repnz
pop
sub
push
lea
mov
pushf
int
lods
xor
or
mov
sti
fstl
imul
movsl
mov
nop
lret
test
pop
dec
cmpb
xor
out
mov
vprotq
ficomps
or
sub
dec
pop
xchg
cmp
mov
sbb
mov
lcall
repnz
xor
push
add
imul
push
popa
std
das
fwait
and
mov
jl
outsb
jl
push
and
icebp
pop
or
dec
shl
cmpsb
sbb
push
bound
icebp
pop
and
jecxz
dec
int
xchg
cmc
imul
or
or
mov
dec
cmp
hlt
orb
mov
fucomip
test
inc
popf
call
ljmp
lods
and
xor
pop
out
mov
fcompl
or
sub
iret
sub
cmc
inc
xor
loope
inc
les
jl
pop
aad
or
dec
aad
xor
adc
les
in
cltd
clc
jno
jmp
xrelease
les
pop
or
add
mov
mov
lcall
mov
mov
cmp
mov
sarl
hlt
jg
outsb
add
and
out
int3
xchg
pop
fsubs
loope
xor
and
ss
insb
sub
xchg
sbb
aad
cmp
ljmp
and
popa
inc
jbe
mov
cli
push
inc
dec
pop
cltd
xlat
sub
inc
in
mov
jae
cmc
in
fldcw
popf
mov
icebp
arpl
int3
jl
in
jb
fmulp
dec
into
mov
mov
push
popa
inc
lret
les
dec
xchg
push
leave
mov
mov
jge
inc
push
pop
xchg
cs
pop
pop
add
mov
xlat
in
std
xchg
ljmp
sub
xor
dec
aaa
enter
adcb
lret
mov
add
pop
push
cwtl
std
inc
shll
dec
cmp
popf
lds
mov
xor
outsl
and
test
xchg
testl
jle
sub
call
loope
inc
push
sub
outsl
test
or
imul
hlt
jp
push
cmp
xor
xchg
clc
jecxz
dec
xchg
js
xorl
add
push
hlt
push
add
inc
arpl
pop
enter
outsb
test
fcompl
mov
mov
xor
and
add
adc
fcmovu
sbb
lods
xchg
mov
aad
mov
frstor
jo
dec
ss
cltd
shl
sbb
jae
mov
mov
test
xchg
jne
sbb
mov
stc
fists
lds
fnstenv
dec
sub
cs
push
movsb
aaa
outsb
jo
pop
jmp
mov
repz
sbb
adcl
cmp
in
faddl
outsl
repz
push
js
scas
addr16
sub
bound
inc
movl
sbb
pop
add
inc
pop
inc
cmpsb
ret
es
pop
aad
int3
lret
ficoms
lock
sbb
cmp
pop
or
jmp
xchg
movsl
orb
mov
imul
dec
mov
push
mov
xchg
cmc
fwait
xor
pop
imul
fldenv
lahf
neg
sub
xchg
xor
and
gs
fimuls
xor
mov
movsl
pop
adc
js
ret
jae
xchg
fwait
rol
mov
aas
shlb
sbb
pop
bound
add
jne
xor
push
daa
enter
pop
sarl
xor
mov
pop
daa
imul
xchg
mov
scas
mov
push
mov
mov
xlat
test
cmp
or
fsubl
jnp
xchg
sbb
push
or
push
sub
pop
inc
inc
pop
add
mov
stc
or
pushf
jecxz
and
pop
hlt
mov
inc
clc
inc
adc
add
pop
in
les
lods
imull
push
fwait
movsl
add
cwtl
pop
add
scas
les
pop
sub
out
test
into
jge
mov
mov
and
cmpsb
lock
dec
mov
dec
movsb
sub
arpl
test
sub
fcomps
int3
jecxz
or
xchg
and
inc
pop
xor
xchg
inc
jo
ret
and
pusha
into
outsb
cmp
cltd
dec
addr16
icebp
les
cld
ret
cmpsb
dec
rcrl
lods
mov
lods
sub
into
jle
jbe
cld
ss
test
aad
cmp
lods
orl
scas
jnp
imul
mov
fcoms
xchg
js
sti
push
das
xchg
inc
or
push
cmp
pusha
mov
pop
push
repnz
or
out
pop
xor
inc
mov
sub
mov
fcmovbe
add
scas
inc
loopne
lahf
out
xchg
cmp
inc
sbb
test
and
mov
push
jmp
push
sub
fisttpl
sbb
sbb
add
adc
sahf
sub
mov
dec
clc
mov
popa
mov
cmp
inc
lds
jb
sub
cmp
jg
pop
in
jmp
call
out
jecxz
inc
inc
aaa
sbb
dec
or
ret
rcll
shll
pop
cmp
ja
cmp
movsb
dec
xchg
popa
dec
dec
nop
and
stc
push
stos
push
push
add
push
shll
adc
pop
push
sbb
and
std
pop
sahf
pop
push
repnz
ficoml
push
xor
roll
xchg
out
ficomps
in
mov
fxch
jbe
push
pop
lret
out
addb
sbb
data16
lcall
xchg
lea
add
in
daa
add
adc
lahf
cltd
in
sub
sbb
imul
cmpsl
jbe
adc
and
ljmp
or
push
pop
daa
jmp
icebp
fadds
outsb
sbb
mov
lret
ret
xchg
jbe
in
stos
ret
mov
fdivl
iret
jecxz
xchg
mov
scas
mov
pop
loop
and
dec
add
mov
fwait
add
push
lahf
xchg
xchg
subb
rcl
ja
sbb
mov
pop
repz
jae
lods
nop
xchg
movsb
cmp
xchg
push
mov
sub
cmpsb
repnz
inc
ds
out
mov
and
adc
xor
mov
mov
mov
jne
mov
lret
lea
out
mov
fidivrs
jns
mov
adc
je
jbe
lret
or
cmpsb
sub
dec
push
in
inc
inc
jmp
or
mov
and
dec
arpl
mov
mov
aad
push
jno
sbb
sub
mov
xchg
sub
sahf
mov
pop
adc
push
inc
pop
inc
xor
add
xor
sbb
rcll
and
jnp
nop
mov
pop
inc
push
sub
dec
and
or
cltd
sbb
sbb
fistpll
adc
sub
pop
mov
lret
sbb
mov
sbb
dec
fwait
pop
sbb
lahf
or
ljmp
jns
and
imul
add
clc
outsb
stc
or
add
dec
jmp
dec
inc
sbb
leave
inc
push
and
mov
xor
int3
xchg
outsl
sbb
mov
mov
leave
ss
inc
sahf
xchg
and
loopne
inc
outsl
clc
mov
inc
mov
and
ja
mov
nop
xchg
std
lahf
cmp
ret
push
rcrb
insb
push
xchg
scas
mov
cltd
mov
dec
jp
jns
rclb
mov
mov
imul
es
inc
mov
dec
and
cmp
lock
fdivrp
pop
mov
cmp
push
sub
inc
lea
sub
std
sub
mov
sub
pop
jne
mov
int3
and
dec
out
fidivs
cld
jns
shrb
cld
loope
js
push
test
adc
clc
mov
movsl
and
loope
inc
adc
cs
or
jmp
inc
cmp
jo
scas
enter
shrb
lcall
sbb
mov
int3
jbe
inc
cmp
je
or
pop
imul
xor
push
addb
inc
out
jnp
repnz
fimuls
dec
test
mov
stos
inc
test
push
push
mov
jne
ljmp
cmpl
loop
imul
pop
and
arpl
jp
push
mov
pop
insb
xor
js
adc
mov
repnz
cs
popf
aas
add
mov
push
in
push
arpl
inc
mov
gs
imul
push
mov
pop
outsl
ja
arpl
call
hlt
movsl
rcr
in
inc
rcll
jp,pn
push
inc
inc
cs
dec
mov
cld
mov
aas
fwait
xchg
loopne
xor
rorb
outsl
mov
push
inc
adc
pop
int3
sub
mov
stos
sbb
mov
pushl
fcomps
add
test
lock
push
xor
cld
mov
outsb
or
dec
xchg
mov
and
dec
mov
pop
icebp
mov
popf
sarl
mov
cmp
adc
sbb
mov
pop
sahf
mov
jle
and
mov
jno
lcall
fnsave
mov
xor
out
sbb
and
out
es
add
loope
insb
test
jnp
fildll
shlb
popa
fnstsw
cltd
aaa
aaa
adc
mov
rcll
jno
inc
sub
clc
rcr
aad
jns
jne
and
sahf
sub
shlb
add
fcomps
mov
add
int3
mov
add
nop
cmp
mov
jge
fs
call
add
jl
pop
jbe
dec
cmp
test
test
adcl
xchg
lock
aaa
arpl
insb
mov
add
incl
mov
mov
push
in
mov
dec
pop
outsl
lea
push
leave
cmc
mov
xor
test
add
stos
add
or
mov
pop
pop
in
jmp
xchg
mov
or
xchg
add
loop
or
repnz
jne
ds
and
sub
shll
push
jecxz
inc
and
lods
ret
insb
dec
lret
pop
mov
cmp
sub
mov
mov
add
lahf
lock
cmpl
mov
fstps
push
ret
test
and
popf
fwait
add
rclb
dec
fwait
aam
imul
movsl
dec
mov
adc
sbb
xor
sbb
cmp
lock
mov
mov
bound
stc
add
aad
xor
cmp
xor
rcll
sbb
fbstp
dec
imul
inc
les
push
mov
xor
addb
ud1
xchg
hlt
jno
loop
adcl
mov
int
jmp
cli
xchg
push
or
push
fsts
movsl
lds
fdivp
outsb
dec
mov
std
push
xchg
sbb
mov
shll
ss
adc
ss
aam
lods
cmp
jnp
cmp
pop
inc
imul
insl
inc
lahf
fcompl
and
xorb
je
mov
pop
out
mov
fimuls
test
and
popf
xchg
gs
jl
pushl
lcall
call
sbb
adc
sub
adc
lret
fistps
mov
neg
sbb
adc
jb
xor
xor
cmpsb
xor
les
dec
mov
push
jp
hlt
push
xor
xor
inc
xchg
pop
aaa
jbe
lods
mov
rclb
movsb
mulb
mov
adc
loope
sahf
nop
cld
subb
mov
pushf
sbb
pop
pusha
rclb
xchg
fcmovb
jecxz
sub
or
arpl
jmp
in
mov
mov
notl
js
int
lcall
xchg
out
pop
inc
lcall
mov
fcomi
popf
dec
pop
mov
movsb
xor
xor
push
leave
sahf
and
pop
add
fwait
leave
mov
daa
outsb
xchg
fcmovnu
dec
push
cmp
pop
mov
leave
mov
and
inc
imul
adc
jge
xchg
mov
xchg
xchg
jmp
xchg
lods
mov
or
in
xchg
inc
mov
xchg
rolb
cmpsl
mov
adcl
push
sub
frstor
and
adc
ret
mov
shll
mov
ja
orb
push
into
aad
dec
lret
pop
fsubs
ficompl
subl
sbb
dec
outsl
sbb
and
repnz
push
fbld
mov
arpl
stos
aaa
mov
mov
inc
dec
dec
push
sbb
pop
or
fucomp
mov
scas
movsl
push
mov
in
adc
pop
stos
adc
scas
loopne
outsb
xchg
call
fs
sbb
rol
jb
test
jmp
call
lcall
adc
mov
mov
es
xchg
mov
inc
test
ror
xchg
nop
cs
pop
inc
insl
lods
push
xchg
insb
xchg
pop
pop
cs
inc
mov
mov
cld
cld
lds
cmp
jo
jp
fwait
jno
inc
inc
sbb
rcrl
or
xor
shl
sahf
andl
mov
and
push
push
xlat
xor
push
insb
sub
jmp
icebp
xor
roll
mov
or
xor
sbb
mov
divb
cli
add
scas
cmp
inc
in
xchg
outsb
xchg
stc
popa
das
int
lea
jp
mov
insl
out
mov
orb
cltd
cmp
adc
sub
cmp
bound
mov
lahf
push
aam
das
out
dec
adc
xlat
push
sbb
cmc
or
mov
outsl
add
loop
push
loope
adc
or
xor
xchg
dec
jo
lahf
mov
adc
daa
jmp
insb
jbe
sub
das
cmp
jae
sahf
sbb
inc
shrb
pop
jmp
movsl
imul
stos
hlt
outsl
fmulp
jge
push
in
int3
std
jl
jne
scas
push
inc
xlat
add
stc
sub
out
aas
bswap
cmpsb
add
fs
mov
mov
sbb
fiadds
jnp
in
imul
aad
pop
push
fwait
mov
add
aad
dec
push
push
ja
xlat
lcall
mov
int3
push
cmp
xchg
dec
iret
jns
cmc
stc
xchg
dec
insl
repz
sub
mov
arpl
std
enter
inc
mov
mov
sub
sbb
cs
insb
mov
mov
aas
push
dec
sbb
inc
aas
test
xchg
and
repnz
icebp
outsl
mov
icebp
mov
jle
push
js
xorb
pop
aas
insb
add
loopne
or
popl
in
or
xchg
jmp
icebp
and
push
xor
jbe
inc
xlat
add
sahf
push
das
sub
xchg
outsb
inc
popf
dec
stc
sub
mov
jg
fs
dec
inc
mov
dec
lods
test
stos
sub
mov
idiv
add
ret
xor
lds
rcrl
fs
fsts
sub
jae
mov
mov
dec
sarl
sub
das
dec
push
sub
test
test
lret
cmpb
lcall
jg
repnz
jns
and
xchg
dec
mov
inc
leave
or
in
les
insl
push
mov
ret
xchg
mov
dec
gs
je
cmpsl
adc
jmp
rcl
push
gs
out
adc
xchg
mov
addl
fcompl
sub
cld
aad
bound
in
loop
sub
pop
lahf
out
aad
cmp
push
aad
push
cltd
xor
testb
and
dec
inc
sub
push
adc
mov
test
sub
mov
xchg
stc
adc
or
orb
cmp
push
aam
or
lret
mov
mov
dec
pop
sarb
pop
push
adcl
mov
xchg
les
jne
dec
or
loopne
pop
bnd
mov
rorl
push
daa
cmpl
loope
jle
cmp
or
cmp
inc
xchg
or
aas
inc
icebp
mov
lahf
mov
mov
dec
jmp
xchg
pmulhw
dec
inc
popf
pop
xchg
jne
shl
push
test
xorb
pop
and
test
sbb
fmull
jo
adc
pop
dec
popf
adc
cmp
rol
pushf
repz
jle
dec
sbb
adc
dec
jmp
divl
or
iret
fcoms
mov
or
jae
jp
xorl
jg
jle
out
fidivrl
cmp
xor
sti
xchg
mov
je
pop
dec
int3
inc
jne
addb
xchg
mov
or
outsl
addr16
or
or
rcr
and
or
jle
out
ss
fs
sarb
repz
movsl
es
out
pop
enter
rol
sbb
sbb
mov
inc
sahf
inc
or
mov
adc
fistl
call
sbb
shr
je
jae
mov
pop
push
jmp
jecxz
icebp
push
pop
ja
and
mov
shrb
or
push
nop
add
lds
into
or
inc
xlat
xchg
imul
icebp
fwait
cmp
inc
movsl
add
pop
and
out
dec
sbb
out
adc
lods
decl
dec
cmp
sub
inc
lods
stos
pop
testl
std
push
add
loope
outsb
sbb
mov
or
inc
xor
push
jae
and
push
into
adcb
out
inc
jp
xlat
cwtl
push
test
imul
mov
cmp
add
sahf
inc
inc
shl
xchg
in
inc
push
cmp
push
jne
scas
je
xor
xchg
bnd
sbb
pop
push
xlat
mov
mov
arpl
ds
popa
js
jge
ret
push
subl
les
push
xchg
inc
and
popf
mov
jecxz
pop
daa
cmp
insb
icebp
ss
shrb
out
and
or
nop
clc
je
scas
jne
int
in
dec
jbe
jnp
pop
and
cmp
fucom
repz
inc
xchg
lahf
add
cmp
lcall
jmp
test
loopne
cmc
push
out
jp
mov
in
inc
xor
popf
mov
pop
inc
repz
movsl
pop
aad
add
fdecstp
fcoms
add
rclb
icebp
in
fnstsw
pop
outsb
ljmp
insl
and
divl
clc
xchg
in
push
dec
std
adc
pop
jle
xchg
mov
adcl
mov
fsubrp
pop
mov
mov
ret
dec
adc
stos
inc
dec
dec
push
mov
inc
aaa
dec
pushf
insb
and
inc
add
pushf
js
jg
pop
outsl
mov
fstps
sub
xor
adc
push
and
adc
mov
xor
fs
or
outsl
xor
xchg
leave
repz
sub
push
popf
push
pop
je
dec
add
je
push
mov
hlt
push
leave
mov
stc
sub
or
push
push
jp
push
and
cmpsl
and
lock
jmp
jns
xor
jnp
pop
cmpsl
mov
lods
pop
xchg
pusha
pushl
sbb
and
push
data16
dec
dec
std
out
adc
mov
or
fistl
ret
lods
pop
mov
sbb
adc
adc
adc
and
cmpsl
jl
in
add
aaa
jns
test
ss
dec
ret
cmp
adc
scas
loope
fadds
sbb
mov
fadd
scas
rolb
push
pop
inc
call
inc
xor
push
pop
adc
and
push
xchg
cmc
lret
mov
or
cmpl
push
add
mov
mov
xor
adc
sub
push
lret
jmp
frstor
jns
add
xchg
mov
ds
data16
subl
je
daa
pushf
cmp
sti
into
cmp
add
adcl
pop
lret
dec
jnp
mov
rcll
xchg
jb
cmc
mov
pushf
iret
fwait
xchg
and
in
iret
dec
mov
jp
pop
adc
pop
push
mov
fcmovbe
insl
or
in
jb
imul
xor
or
cmc
push
inc
xor
and
and
sahf
leave
loop
pop
jns
or
pushl
repnz
ret
in
fsubl
mov
add
arpl
xor
call
or
mov
inc
sahf
or
fidivs
leave
in
cmpsb
xchg
imul
inc
vmovss
test
mov
leave
or
jge
lock
cwtl
sbb
push
outsb
add
sbb
loopne
jmp
ror
xor
mov
push
lret
test
adc
test
xor
cmpsl
paddd
aad
mov
mov
adc
jg
repz
aaa
leave
scas
scas
out
mov
add
cs
sbbl
loop
or
or
jecxz
in
in
popf
dec
in
dec
leave
xchg
or
rcrb
mov
rcr
xor
push
push
shrl
mov
cltd
or
xchg
movsb
insl
xchg
rorb
inc
push
popa
fsub
aad
mov
sub
std
dec
or
jmp
orb
adc
dec
lea
or
ss
fildl
xor
imul
and
lret
mov
jp
xchg
pop
aam
popf
cmp
xor
xchg
test
movsb
and
or
bound
dec
fcmovnbe
adc
fisubrs
cmp
cld
mov
push
adc
mov
bound
cmp
xor
cli
xchg
fnsave
xchg
insl
aas
push
or
outsl
mov
scas
imul
mov
mov
test
les
pop
add
add
sub
ljmp
aaa
xchg
mov
sub
mov
cwtl
popf
aas
push
lcall
aad
mov
imul
xor
dec
mov
lret
cli
outsl
test
out
movsl
pop
lret
lea
pop
loopne
and
mov
outsl
cmp
adc
mov
adc
mov
rcr
xor
inc
in
fdivp
sub
sahf
sahf
sbb
sub
lcall
ds
stos
or
lds
xchg
mov
dec
cmp
push
mov
out
outsb
mov
jnp
push
test
mov
sub
std
test
insb
pop
xchg
cmpsl
mov
and
mov
mov
jecxz
ss
sub
mov
xor
cpuid
fsubrs
mov
pushf
cmp
or
jl
add
or
out
lods
lahf
cmp
push
adc
and
fldl2t
and
jg
addr16
cli
fwait
clc
test
xchg
sbb
les
sbb
push
lock
test
cwtl
dec
sub
add
scas
mov
push
rclb
mov
aam
int
and
loopne
lahf
adc
gs
add
lods
mov
rorl
sbb
lods
pop
jl
aaa
mov
mov
je
loope
je
js
xchg
pop
xlat
jmp
push
mov
and
mov
cmc
inc
outsl
jae
push
or
mov
xchg
inc
push
or
mov
add
push
mov
dec
testb
jg
mov
mov
in
push
ret
cmp
xchg
ss
cmpsl
enter
push
mov
sbb
or
arpl
cld
cmp
aas
fstps
adc
pop
out
pop
stc
pop
lods
xchg
clc
std
mov
ds
xchg
jbe
mov
jge
decb
lea
and
imul
gs
mov
mov
callw
jle
adc
push
fisubs
mov
xor
sbb
sub
xchg
sub
jmp
jecxz
aaa
arpl
pop
xor
adc
into
push
enter
dec
lock
add
inc
dec
or
xor
or
or
xchg
fstl
js
std
xor
dec
sbb
out
ret
add
adc
in
ret
aad
je
jbe
and
inc
lcall
ret
jge
loope
xchg
pop
into
test
adc
rcrl
xlat
push
ret
lret
jne
rorb
cmp
popa
dec
and
push
mov
cli
mov
clc
pop
and
add
lret
clc
push
push
int3
lret
push
repz
xchg
jne
xor
out
sbb
jb
pop
imul
pop
outsl
repnz
fwait
lods
sti
lret
jp
jbe
aaa
fcoml
fisttpl
pop
add
notb
mov
not
xchg
enter
or
inc
sahf
shlb
mov
movsb
std
hlt
cmp
mov
fnsave
cmc
sti
movsl
push
dec
pop
sahf
mov
adc
mov
into
aas
lcall
pushf
out
out
je
cmpsl
dec
dec
push
xchg
pmuludq
int3
adc
stos
cmp
push
andl
imul
fwait
clc
imul
jp
cmp
es
inc
pop
repnz
les
dec
mov
sahf
xchg
nop
xchg
pop
das
or
mov
mov
pop
inc
faddl
fsubs
fimull
sbb
jg
jge
int
push
sbb
pop
push
outsl
arpl
fdivl
mov
lret
and
cmp
push
movsl
and
mov
cs
stc
and
ljmp
cld
daa
movsl
imul
jecxz
inc
add
dec
test
mov
mov
dec
mov
or
cld
inc
test
lods
ret
dec
loop
out
clc
mov
adc
mov
test
mov
xchg
jl
mov
lea
mov
dec
nop
cmpsb
jb
xor
mov
mov
pop
or
aas
ret
in
inc
adc
movswl
adc
sar
pop
orb
scas
push
outsl
mov
ret
jbe
int
cmpsb
xchg
cmp
adc
add
cltd
loopne
inc
or
xchg
outsl
dec
das
test
xor
arpl
jo
jmp
mov
sarb
stc
aaa
pop
pop
push
movsl
inc
sahf
fwait
out
mov
dec
cmp
xor
in
jns
mov
adc
frstor
inc
mov
dec
cmpsl
fdivr
xor
pop
gs
pop
sarl
inc
sub
push
les
sbb
or
mov
test
imul
sahf
add
popa
or
nop
mov
mov
sbb
loope
add
push
icebp
adcl
icebp
pop
imul
loope
sub
shll
movsl
mov
stc
les
sbb
push
fidivrl
pop
mov
mov
mov
cmp
lds
fists
mov
leave
movsl
cmp
hlt
in
movsb
scas
jmp
push
popa
push
clc
or
sub
xor
inc
lcall
pushf
cwtl
mov
jp
sub
push
fistpl
fstpl
das
fidivrs
pop
aad
xchg
icebp
xor
xchg
popa
enter
xlat
arpl
cmp
sbb
movsb
arpl
popa
xchg
shlb
stc
jnp
mov
mov
leave
pop
jmp
fwait
in
jge
sbb
cmp
inc
add
xchg
mov
cli
clc
lcall
mov
movsb
movsl
and
in
cmp
stc
or
dec
mov
dec
mov
pusha
popa
jl
into
xor
mov
movsl
popa
mov
cmc
mov
push
xchg
das
jae
sub
pop
lods
fwait
xor
daa
daa
int
jb
inc
mov
xor
aaa
imul
xchg
or
and
clc
inc
jg
clc
ljmp
fsts
in
pop
cmp
inc
pop
filds
push
and
negb
in
jmp
adc
add
and
loop
dec
xchg
inc
add
imul
repz
popa
mov
mov
leave
ret
incb
sbb
mov
in
and
rcr
fistpll
dec
call
arpl
cmpsl
mov
or
or
jp
jae
pop
xchg
mov
xchg
jns
mov
addr16
add
inc
jno
and
pusha
dec
ss
xchg
dec
ljmp
push
stc
adc
les
jnp
jmp
pop
popf
add
out
imul
out
fdivl
push
in
test
xor
testb
insl
xor
lock
sbb
dec
jb
jbe
jecxz
jge
sarl
xchg
jge
adc
push
cmp
dec
xchg
jecxz
mov
adc
adc
or
or
jno
imul
repnz
mov
xchg
push
imul
jno
inc
pop
mov
cmp
or
mov
push
das
mov
xorl
add
jp
aas
arpl
add
cmpsb
sbb
fdivs
ret
ret
pop
into
inc
lret
icebp
sub
mov
jl
mov
je
sbb
roll
lret
add
xchg
in
mov
int3
movb
iret
inc
loopne
sub
mov
inc
add
mov
jge
aad
jl
mov
sbb
jl
or
mov
inc
lea
movl
mov
loopne
rclb
pop
mov
int3
mov
sbb
sbb
ja
jg
in
pop
repz
push
mov
mov
rolb
jg
loop
and
lret
inc
inc
test
inc
out
push
lods
shlb
inc
dec
iret
xchg
sbbb
test
add
cli
das
sub
or
jno
and
and
in
sbb
ljmp
jp
jl
mov
repnz
mov
fdivl
and
pop
cmpb
sub
xor
out
inc
add
inc
xor
pop
rorl
rcll
fdivrl
push
scas
pop
sbb
dec
adc
sbb
mov
push
push
cmp
jecxz
inc
xor
rcr
mov
xchg
xchg
ljmp
fucomp
push
pop
cltd
scas
adc
adc
jp
lods
push
stos
push
insl
inc
sbb
in
mov
push
lods
sti
loopne
mov
in
subb
ror
decl
into
in
cld
sbb
lahf
popa
sub
and
rol
jge
mov
shrb
lret
lahf
adc
or
xacquire
aam
and
mov
mov
xor
fsubs
mov
imul
mov
mov
push
mov
dec
jae
ret
neg
cmp
les
loopne
and
ret
scas
lea
pop
push
test
pop
pop
jo
adc
andl
adc
ss
pop
int3
push
sub
add
leave
sbb
xchg
and
add
dec
sub
mov
xor
jg,pn
sbb
sub
sbb
iret
js
push
arpl
insb
out
and
adc
outsl
xchg
xchg
add
inc
mov
mov
popa
in
or
je
negl
inc
xor
inc
bound
adc
inc
lods
shrb
inc
inc
cmp
and
scas
adc
hlt
xor
cmpsl
testl
sub
pop
addb
mov
stc
push
xchg
xchg
cmpsl
hlt
icebp
repnz
xchg
test
orl
jge
dec
pop
lock
rol
sub
pop
jmp
and
and
pop
dec
mov
jecxz
xor
xchg
in
and
mov
outsl
xchg
lods
xchg
jo
and
loop
pop
pop
xchg
xor
clc
popa
int3
or
pop
loop
sbb
cmp
scas
aaa
test
jns
xor
fimull
inc
push
outsb
lea
movsl
ss
push
jmp
xchg
mov
fistps
inc
lret
mov
stos
push
cs
je
std
sbb
push
lds
cmpsb
aas
out
stc
push
jae
ljmp
sub
aas
out
lds
jmp
fists
mov
push
cmpsb
jnp
mov
mov
imul
out
insl
xlat
inc
loope
data16
xchg
jb
adc
in
push
jb
leave
enter
js
jecxz
sub
push
add
jo
lock
adc
cmp
mov
outsl
hlt
sbb
push
cmpl
and
push
jecxz
loop
scas
ret
sub
test
lcall
pop
dec
xchg
idivb
mov
xlat
ss
out
pop
outsl
repnz
aad
imul
aaa
ret
xor
repz
outsl
pushl
test
adc
add
sbb
iret
push
adc
ljmp
xchg
lret
out
inc
sub
mov
sub
je
mov
fnstsw
push
out
in
loope
gs
and
inc
aas
adcb
in
xor
out
sbb
addr16
adc
sub
jmp
jns
jno
dec
ds
cmp
inc
pop
movsl
adc
cmpsl
and
je
leave
nop
outsb
pop
adc
sub
lods
iret
or
inc
ret
or
dec
aam
das
push
mov
xchg
mov
loopne
cwtl
es
lea
and
aaa
push
pop
dec
pop
test
push
jmp
push
jnp
imul
andl
mov
loop
lds
mov
mov
mov
or
xchg
and
cmp
insb
adc
int3
cmp
pop
ss
cmp
aad
mov
ja
pop
clc
cmp
scas
bound
mov
adc
pop
scas
pop
dec
mov
push
imul
inc
fwait
in
add
ret
movsb
dec
jbe
js
cmpsl
es
mov
test
jge
bound
xchg
aaa
dec
add
push
mov
and
xor
cli
and
mull
rol
mov
mov
mov
testl
in
mov
stos
or
outsb
mov
and
jecxz
push
cmp
arpl
bound
push
outsb
mov
lret
jge
pop
mov
dec
xchg
cmpsl
lock
or
hlt
rcrl
inc
xor
lock
mov
jge
mov
cmp
xchg
inc
pop
icebp
fnstsw
sbb
inc
add
fwait
stos
push
or
ds
sbb
das
in
pop
sbb
insl
xor
loop
mov
testb
dec
push
jns
jb
nop
jle
push
cmp
xor
mov
xor
jl
sahf
iret
cmp
push
push
icebp
and
scas
push
xchg
lods
jge
popa
into
mov
xchg
push
fistpl
out
out
xchg
xchg
int3
and
pushw
jbe
and
inc
cmp
sarl
fstpt
pop
ret
mov
fcoml
cltd
dec
dec
lods
popf
rorb
das
inc
ret
adc
sbb
aam
cli
fs
mov
add
dec
gs
push
sub
ret
aas
cmp
or
xchg
jae
xchg
jl
lods
mov
out
sub
out
sbb
mov
orl
je
or
aad
lock
rorb
adc
xor
adc
and
repz
shll
cmpsl
add
into
jo
lcall
lcall
out
addr16
add
mov
pop
fdivrp
push
xchg
test
subb
and
sbb
jle
out
push
mov
sbb
mov
imul
xor
mov
pushf
test
push
jecxz
movsl
and
or
fistl
push
pushf
pop
push
popa
lea
mov
cmp
hlt
xor
lods
adc
stos
and
adc
jo
fnstsw
add
int
mov
arpl
lock
add
inc
ret
dec
jb
pop
or
sti
lcall
mov
pop
xchg
cli
mov
push
mov
add
ret
sbbb
iret
mov
mov
fistpll
mov
sbb
in
jle
mov
scas
std
insb
jle
repnz
adc
test
add
dec
lret
cmpsl
cwtl
push
adc
add
mov
mov
mov
add
push
cmp
and
xchg
jl
fdiv
xor
rclb
add
dec
enter
cmp
adc
and
scas
outsb
mov
cmp
cmp
dec
cwtl
jo
fisttps
lcall
nop
sarl
xchg
or
pop
mov
add
mov
outsb
mov
movsl
int3
add
jno
or
in
fiadds
xlat
sub
add
or
dec
pop
mov
aad
pop
sbb
jno
mov
scas
iret
sahf
jns
add
cmp
sti
rcll
sahf
push
adc
xchg
fcoms
push
pusha
rclb
fdivrl
divb
cld
xchg
and
sahf
and
les
mov
cmpsl
sti
imul
dec
mov
out
hlt
xor
addr16
inc
adcb
jo
mov
push
jl
xor
mov
imul
adc
loope
sbb
fnstcw
iret
fsubl
loop
in
iret
cs
and
mulb
cmp
int3
iret
arpl
notb
aad
dec
scas
add
cmp
call
lods
leave
popf
cwtl
arpl
fbstp
loope
xor
enter
movsb
adc
enter
push
push
push
ret
hlt
push
push
jo
fwait
push
mov
popf
cmpsb
pop
jecxz
aaa
cmc
pop
jne
jecxz
nop
push
mov
in
addb
dec
inc
nop
loopne
aad
fcomip
lret
out
loope
cmp
les
fisttpl
clc
add
test
pop
int3
lcall
mov
imul
in
dec
push
int
mov
lds
ficoms
nop
jo
cmp
fs
lods
adc
mov
int
ljmp
daa
mov
ss
dec
pop
jecxz
mov
insl
loopne
dec
das
add
pushw
pop
fidivl
sti
outsw
add
mov
test
or
aas
int3
hlt
pop
push
jae
enter
es
aam
push
movsb
scas
sub
dec
mov
dec
inc
lock
dec
push
fisubs
ror
test
push
add
xchg
sbb
dec
add
repnz
mov
add
dec
or
cli
mov
pop
dec
lods
test
imul
in
mov
int
popl
fs
jg
outsb
sub
mov
enter
push
adc
sub
aaa
jle
inc
lds
scas
mov
fisubrl
cmp
inc
inc
mov
dec
or
test
and
add
movsl
adc
sbb
mov
cmp
push
xor
jg
pop
push
mov
mov
mov
xchg
fwait
mov
fwait
fwait
insl
add
cmpsb
outsb
sbb
insb
mov
in
loop
pop
out
hlt
rcll
js
mov
cmovs
adc
add
sub
push
pop
xor
adc
repnz
dec
push
mov
xchg
test
cmp
push
mov
jge
and
cltd
ret
xchg
push
mov
fidivrs
jmp
cmpsb
sub
pop
pop
fcoms
cmp
push
lea
inc
aad
enter
int3
adc
subb
or
or
xor
dec
adc
popf
fnsave
xchg
jp
inc
imul
scas
push
std
inc
jp
std
dec
cli
bound
sbb
push
xor
loop
inc
call
movsb
movsl
add
push
cmp
jp
xchg
xor
scas
pushf
rep
in
mov
data16
adc
scas
shufps
in
dec
mov
dec
sub
adc
std
je
lea
sbb
clc
cmc
add
add
pop
push
in
add
outsl
or
call
xchg
hlt
test
xlat
pop
xor
push
or
test
jecxz
push
lcall
leave
andb
ret
adc
cmp
jo
fldt
out
in
cli
or
cmp
add
enter
push
inc
fbld
sub
fsubr
mov
mov
pop
cmp
ljmp
jb
stos
jecxz
mov
jo
lahf
mov
mov
cmp
sbb
repnz
push
lcall
xchg
jg
push
dec
cwtl
lock
enter
in
insl
jp
dec
dec
aam
push
mov
jecxz
hlt
push
jno
mov
mov
test
mov
push
dec
daa
loope
test
inc
cmp
fdivr
adc
in
or
pop
lea
add
test
add
jbe
pusha
pushf
mov
in
lea
push
notl
gs
add
aam
ss
mov
inc
ret
dec
in
psubw
aaa
jae
hlt
mov
and
sub
rclb
add
add
inc
mov
test
out
hlt
mov
jp
in
inc
mov
les
test
add
and
dec
inc
aaa
pop
mov
stc
or
ljmp
int
mov
xchg
jl
pop
call
xor
mov
dec
pop
jl
loopne
repnz
mov
and
loope
cld
adc
dec
sbb
ds
and
mov
pop
loope
out
call
cwtl
lock
daa
test
jne
sub
or
sbb
mov
mov
pop
adc
xlat
mov
insl
les
cmp
stc
out
inc
jge
and
repnz
jb
xor
dec
les
dec
xchg
sbb
insb
andl
inc
or
mov
movsl
faddl
pop
jo
stos
push
sub
cmp
cmp
fiadds
add
mov
mov
dec
inc
popa
enter
cmp
in
sbb
ret
sbbb
xor
repz
and
out
mov
adc
pop
movsl
outsl
push
insb
sbb
dec
iret
mov
flds
stos
inc
in
jns
inc
and
cmp
aaa
lcall
imul
xchg
dec
fwait
jp
stos
ficoms
pop
movb
jne
pop
or
pop
and
call
int3
add
cmpsl
xchg
sarb
arpl
fidivrs
sbb
sub
mov
lods
rcrb
xor
jb
cmc
cmpsl
movsb
adc
stos
push
mov
sbb
arpl
or
gs
xchg
test
out
pop
in
stc
cld
cmc
int
call
push
cmpsb
cltd
sbb
inc
and
je,pn
arpl
in
sar
cmp
push
lock
lods
gs
test
cmp
scas
add
or
sarb
lret
arpl
sub
notl
testb
data16
add
ja
jno
aas
jecxz
mul
mov
in
nop
fs
jecxz
sub
scas
lods
mov
mov
loop
fiaddl
push
shll
push
fs
test
jae
cmp
cltd
sti
iret
lret
call
jbe
cli
popa
dec
repnz
sbb
adc
iret
mov
cltd
push
dec
mov
mov
inc
and
lods
mov
test
sub
rcrl
jle
inc
xchg
jo
subb
or
out
push
xchg
lock
jg
ret
test
sub
pop
outsl
mov
fldcw
testb
push
inc
lea
leave
hlt
add
test
scas
outsb
mov
das
sub
shlb
test
mov
mov
out
popa
adc
mov
fcomip
fildll
sti
adcb
mov
cmp
shl
inc
pop
or
xchg
stc
add
push
mov
sbb
cli
mov
ficoms
stos
and
pop
xor
gs
and
jl
clc
inc
daa
push
out
ret
sbb
cmp
cmpsb
movsl
and
imul
add
aad
vsubps
enter
cs
or
inc
and
sub
stc
xchg
lcall
push
ja
clc
icebp
and
sbb
andl
leave
xchg
push
inc
add
cmp
test
jbe,pt
inc
adc
add
iret
pop
adc
les
mov
das
pop
xor
mov
sbb
std
cmp
xor
lea
lgs
mov
jo
fisttpl
mov
adc
push
pop
cltd
add
mov
test
xrelease
xor
in
popf
insb
enter
push
in
arpl
xchg
mov
add
cmp
jp
xor
push
ja
lea
lock
mov
jnp
and
pop
jecxz
in
pop
ljmp
ret
aaa
nop
ja
mov
shlb
inc
or
insl
push
test
fdivl
stos
outsl
and
cltd
imul
or
js
lret
ljmp
push
out
test
dec
add
jns
leave
mov
addr16
inc
cld
lods
aad
dec
mov
pop
cs
push
sub
push
je
ret
ds
jne
pop
movsb
imul
imul
in
xor
xchg
js
push
pop
daa
in
pop
fcomps
movq
scas
and
or
xchg
lahf
lahf
dec
xchg
pop
repnz
icebp
inc
out
cmp
xlat
popf
int3
mov
pop
mov
out
icebp
cmpsb
xchg
mull
mov
in
gs
sub
adc
mov
push
in
mov
and
cmc
push
call
aam
sbb
inc
test
and
mov
pusha
daa
out
xchg
push
push
iret
adc
stos
stos
aam
jbe
xor
imul
mov
imul
repz
xchg
jns
xchg
xchg
push
jge
mov
add
sete
sbb
or
dec
xor
or
mov
icebp
adc
in
mov
stos
or
out
mov
sbbl
outsb
ja
mov
mov
pop
cmpl
loope
fldt
xchg
sti
and
icebp
xchg
ja
fidivrl
cmp
adcb
inc
aad
movsb
jno
fstpt
add
sub
jp
add
in
jns
int3
ficomps
icebp
and
push
mov
push
addr16
jns
fistl
pop
mov
dec
outsb
or
ss
dec
add
xor
negl
popa
mov
xor
pop
in
xor
cwtl
jle
nop
xor
popa
xor
mov
xor
aas
add
pop
or
call
addl
les
pop
jle
xchg
push
popa
lods
shr
adc
test
mov
pop
mov
jl
jecxz
and
push
test
add
xchg
lds
lea
packuswb
push
xor
fwait
mov
xor
or
push
sub
icebp
popa
out
mov
outsl
and
and
xchg
mov
push
js
jnp
rcll
faddl
jnp
scas
rorb
aam
pop
mov
cmpsl
insl
xor
adcb
cltd
adc
mov
popf
mov
les
pushf
xchg
hlt
clc
cmc
gs
pop
sub
out
mov
mov
call
mov
out
sbb
les
inc
cmp
cmp
jl
mov
xor
mov
call
mov
cmpsl
fwait
jge
in
lahf
cmpsb
jns
cmpsb
mov
dec
pop
cmp
fildl
cmp
insl
ljmp
or
jge
mov
xorl
movsl
in
fs
cmpl
and
sahf
shrl
push
cs
xchg
enter
mov
cmp
lret
lahf
pop
xchg
xor
mov
xor
adc
cmp
cmp
lahf
fstps
mov
dec
inc
dec
mov
cmp
sbb
inc
dec
dec
hlt
push
sahf
jl
dec
jae
fisubl
cmp
movsl
xor
es
xchg
stos
cwtl
jno
inc
xchg
inc
repz
and
mov
mov
inc
jp
out
testl
mov
orb
xor
push
and
imul
in
cs
repz
stos
inc
in
sar
movl
cmp
mov
xchg
push
xlat
loopne
mov
into
jnp
inc
mov
repz
sbb
push
scas
ret
stos
sbb
test
pop
call
sub
rorl
adc
add
pop
loopne
clc
xor
mov
addr16
icebp
or
ljmp
mov
mov
lods
cltd
test
cwtl
sbb
fstpl
int3
mov
mov
std
fstl
aam
and
daa
xor
loopne
cmc
in
pop
test
cld
pop
dec
or
inc
popa
lods
scas
fidivs
jp
and
mov
in
push
xchg
pushf
call
testb
mov
stos
xchg
xor
fwait
jg
out
cmp
mov
jne
sbb
jg
mov
cld
push
js
cmp
mov
filds
repnz
sub
loopne
mov
sub
fcoms
fwait
inc
or
add
xlat
aas
lods
sbb
jmp
mov
dec
sub
pushf
and
mov
sub
xor
nop
lahf
push
lock
sub
dec
les
add
test
dec
popf
add
xchg
stc
jg
push
or
mov
or
cmp
ret
test
cmp
addb
jmp
cld
sbb
push
sbb
pop
orb
nop
test
adc
in
mov
daa
int
ja
mov
and
cmpl
dec
loopne
jp
mov
mov
and
pop
clc
je
lea
push
pusha
shll
nop
push
pop
lahf
xchg
dec
lcall
xchg
dec
jmp
ret
and
idivl
aas
notb
jbe
xor
push
push
mov
adc
shll
fimuls
orb
das
or
enter
imul
xchg
jae
decl
pop
lods
xchg
mov
or
or
lods
in
enter
call
sarb
dec
dec
push
sahf
gs
aad
dec
pop
lods
inc
mov
pop
addr16
enter
arpl
pop
es
loop
jns
xchg
test
pop
loope
pop
dec
fdivrl
rorb
movsb
or
mov
xchg
xor
lret
push
mov
mov
orb
stos
mov
mov
xchg
fs
dec
outsb
and
xorb
ds
cmp
int3
xchg
pushf
mov
pop
xchg
movsb
icebp
inc
lds
adc
std
push
mov
js
mov
das
shufps
fsubr
cmp
cmp
xchg
mov
scas
aaa
and
xor
sub
enter
jge
out
into
mov
jp
fidivl
mov
arpl
and
cmp
call
lcall
xchg
cmp
jns
mov
adc
dec
xchg
mov
hlt
movsl
dec
xor
loope
xchg
cli
inc
push
push
mov
add
mov
adc
jns
add
dec
js
pop
das
outsb
push
adc
sbb
add
xorb
mov
mov
or
inc
inc
mov
nop
enter
inc
data16
fwait
pop
jae
dec
lock
adc
pop
stos
xor
and
fnclex
clc
jo
sar
cwtl
jne
fdivl
push
adc
adc
pop
cmp
mov
dec
int3
lret
out
out
cltd
addr16
xchg
inc
ds
pushf
adc
ficomps
idivl
mov
ljmp
fbld
shll
repnz
repnz
cmp
cmc
ret
cli
test
outsb
decb
ljmp
mov
lea
jl
xchg
test
clc
sub
pop
xor
jb
push
inc
sub
adc
enter
add
shrl
cli
dec
decl
in
fcmovnbe
in
mov
pop
mov
ret
iret
stc
lea
cwtl
adcb
sbb
lock
insl
hlt
inc
dec
push
and
std
sarl
je
jmp
fiaddl
test
cmpsl
jne
push
cmp
push
push
xchg
fisttps
fmuls
push
ja
sbb
xchg
lret
test
jae
mov
or
pop
adc
test
addr16
std
in
cmp
lahf
mov
xchg
and
out
jns
scas
stos
push
sbb
dec
leave
shlb
inc
aad
dec
sti
sbb
inc
mov
ljmp
push
jmp
lods
stos
popf
xor
cmp
imul
out
dec
and
movl
out
es
ja
stos
mov
in
pop
add
les
clc
mov
cmp
stc
ljmp
cwtl
nop
and
add
fwait
negb
ret
test
lock
addr16
aad
call
xor
push
iret
test
or
ljmp
or
cmp
mov
cmpsb
popf
pusha
sti
repnz
lods
shlb
adc
sbb
cltd
adc
fidivs
pop
sti
dec
ror
mov
es
enter
or
xchg
xor
sub
cs
push
jp
andl
out
ror
push
outsb
mov
cmp
push
inc
lret
sbb
jnp
jp
or
rcrb
pop
xor
ror
insl
dec
jp
mov
pop
sahf
jns
adc
jbe
jo
les
stc
jge
dec
jl
inc
andl
dec
popf
sti
jbe
std
or
cs
nop
imul
mov
outsb
subl
in
mov
mov
xchg
cmp
popl
dec
aam
cs
aaa
mov
insb
jo
adc
cmp
xchg
push
gs
dec
enter
sub
add
gs
push
add
testb
scas
lcall
rcr
sub
lods
adc
out
jl
in
pop
dec
arpl
xchg
gs
dec
pusha
xchg
cs
jne
pop
scas
push
jmp
mov
cs
jl
sub
andb
and
jl
push
jp
push
mov
sbb
sbb
fcmovnb
jp
mov
hlt
adc
sahf
lret
lret
mov
out
add
inc
daa
add
aam
xchg
mov
icebp
ret
mov
sti
cmc
cli
mov
jb
jo
mov
shl
cmp
and
pusha
movsb
in
mov
push
adc
pop
mov
mov
addr16
mov
sbb
aaa
cmp
movl
in
push
mov
push
insb
cltd
int3
and
jmp
xlat
int3
movsl
fisttpl
pop
or
dec
dec
repz
imul
scas
outsb
ljmp
imul
fdivrp
fadd
xchg
and
fsubrs
jl
mov
gs
mov
sahf
mov
ret
incb
outsl
inc
mov
mov
push
cmc
add
or
ds
sub
push
es
lcall
push
dec
pop
ret
dec
fldt
mov
jnp
push
pop
leave
xchg
ret
cwtl
xor
cltd
adc
push
int
xchg
addr16
test
rorb
sti
and
cmp
sub
nop
orb
les
push
mov
add
cmpsb
test
arpl
lea
sbb
jno
imul
leave
mov
outsl
aaa
aad
push
fcoml
fnsave
in
sar
rorl
or
insb
and
popf
adc
shrl
lods
sahf
sub
mov
scas
adc
lods
adc
xchg
jo
fdivrp
pop
xchg
loopne
add
in
sti
push
shlb
mov
addr16
adc
sbb
sub
cli
loopne
data16
inc
xchg
fidivs
fwait
inc
pop
adc
enter
data16
dec
push
leave
xchg
dec
push
sbb
xchg
scas
push
jge
and
leave
gs
inc
jecxz
outsl
insb
imul
pop
cli
repnz
inc
xor
outsb
jp
pop
push
mov
pop
and
pop
pop
add
xchg
push
xor
cmc
mov
fisttpll
jge
mov
int
addl
add
mov
jbe
in
inc
or
outsb
jo
add
and
mov
inc
sbb
ljmp
les
in
movsl
and
stc
pop
lods
inc
sub
adc
movsb
inc
push
sbb
sub
sahf
cwtl
in
pop
jae
add
cwtl
ret
scas
cltd
cs
lahf
xchg
out
notl
ret
push
in
test
shl
xchg
jne
dec
test
mov
ljmp
mov
xchg
adc
js
pop
mov
hlt
outsl
loop
mov
mov
adc
push
lret
aaa
mov
mul
and
push
push
inc
push
popa
call
call
outsl
mov
sub
cmp
or
out
pop
adc
mov
push
mov
aad
leave
push
clc
sub
int3
lock
bound
lds
shl
enter
cmp
inc
xchg
out
nop
push
dec
lock
mov
lea
sbb
push
int
push
pop
mov
mov
incb
xchg
insb
insb
xchg
mov
ret
gs
sub
aam
push
orl
add
mov
mov
pop
lret
adcb
sbb
popa
dec
in
inc
into
in
dec
mov
scas
int
int3
xchg
out
dec
insl
mov
push
mov
cld
xor
or
xchg
cmpsb
xchg
push
fistpll
add
dec
fsubs
adc
cmpsb
xchg
mov
imul
cltd
push
mov
adc
out
cmc
lods
daa
call
add
xor
mov
jg
bswap
jg
aam
leave
ljmp
push
sbb
dec
and
jle
mov
arpl
outsb
jo
or
pop
push
jae
outsl
sbb
sub
mov
enter
cmp
jo
inc
xor
push
mov
jmp
push
outsl
jge
or
out
mov
cmpsb
and
stc
shr
xor
fcmovnu
mov
fstps
enter
test
iret
dec
sbb
pop
clc
xor
addr16
pop
inc
push
mov
mov
aas
jmp
mov
hlt
add
cwtl
cs
test
insb
lods
test
add
and
out
enter
cmp
das
push
xor
dec
and
mov
mov
add
aas
fcmovu
lret
push
push
mov
cs
inc
dec
lahf
sbb
jnp
sahf
iret
or
inc
sbb
sti
mov
rolb
aaa
loopne
xor
pushf
leave
adc
es
sub
inc
lods
add
jmp
inc
adc
mov
lea
clc
mov
and
and
adc
inc
andb
int
insb
mov
movsb
cmp
loop
jae
rcrb
mov
adc
hlt
outsl
jmp
sarl
arpl
imul
mov
and
arpl
sbbl
movsb
mov
test
xchg
jp
adc
incl
scas
inc
stos
adcl
mov
xor
fdivrs
divb
in
mov
lahf
negl
push
les
sub
and
cltd
sbb
jmp
ss
jb
sti
out
pusha
repz
lret
xchg
test
xchg
xchg
cltd
mov
sbb
push
mov
jo
fcmove
shrb
fs
push
imul
clc
xchg
add
inc
and
pop
in
and
push
xchg
repnz
mov
js
fcomi
test
dec
test
mov
aas
and
lcall
pushf
dec
or
xchg
jns
jge
imul
push
cwtl
js
lock
xchg
aaa
addr16
and
sub
adc
repz
dec
rorl
xchg
dec
out
xchg
inc
cmc
xchg
cltd
cld
or
sub
push
inc
iret
mov
test
or
fs
dec
sub
xchg
or
mov
xchg
xor
or
ja
gs
mov
mov
sarb
adc
xchg
xor
arpl
leave
inc
aaa
jecxz
sbb
push
xchg
jle
push
mov
xor
mov
sbb
sub
sub
fcmovne
add
daa
fsts
test
jno
push
test
imul
test
popa
pop
mov
pop
adcl
insb
and
popl
sbb
loope
lds
enter
out
dec
inc
imul
jg
in
lret
test
push
cmp
sbb
xchg
mov
scas
jg
jns
setnp
pop
jge
jg
les
sub
xchg
xchg
fidivrs
mov
aam
pusha
mov
iret
mov
pusha
lea
push
ljmp
fistl
insb
fidivrl
inc
ss
cld
scas
movsb
and
ljmp
lods
or
call
mov
cli
dec
mov
push
scas
xor
and
sbb
sti
popa
and
packsswb
xchg
push
xor
dec
inc
sbb
jns
xchg
setbe
push
mov
lahf
andb
cmp
xor
rclb
scas
iret
dec
pop
xchg
mov
xor
shl
scas
loope
sahf
das
jo
xor
lea
mov
aaa
stos
clc
pop
mov
mov
dec
cli
out
or
aam
mov
fldcw
aam
test
loope
pop
aas
jbe
dec
inc
pop
out
mov
iret
dec
aam
cmpsb
mov
push
pusha
cmc
ds
rcrb
dec
cmpsb
jmp
xor
outsb
rorb
add
repnz
lahf
scas
jmp
cli
xor
and
pop
roll
mov
sbb
adc
les
xchg
inc
loopne
or
push
jl
adcb
test
test
mov
pop
mov
popa
decl
and
cmp
push
mov
adc
mov
insb
fs
pop
scas
jae
pop
iret
aaa
xor
sub
or
jo
jmp
push
pop
mov
xchg
loop
std
cmp
stos
mov
xchg
bound
jge
ljmp
jge
pop
mov
data16
std
hlt
push
fdivrl
push
addl
rorb
mov
push
stc
sub
adc
xchg
sub
stos
movsb
clc
js
cld
cltd
xchg
adc
jmp
xor
dec
ljmp
arpl
js
ss
jecxz
jp
sti
xor
push
out
mov
mov
xor
and
int3
call
test
inc
call
inc
sti
jno
jnp
push
mov
pop
push
lret
mov
xchg
jle
mov
mov
fcoml
sub
add
pop
mov
stos
ja
sar
add
lock
cli
push
je
adc
fnsave
inc
push
call
dec
sbb
sub
fadd
cmp
out
arpl
cmp
push
xor
jmp
lahf
incb
cli
cmp
test
fucomip
sub
loop
sub
and
pop
call
lock
jbe
dec
negl
sub
sub
aad
aam
or
mov
cmp
lods
cmp
clc
mov
jle
out
mov
loopne
jmp
mov
test
pop
lcall
js
std
push
mov
gs
inc
mov
inc
mov
inc
mov
sbb
pop
xchg
push
ret
mov
jb
sub
xlat
or
frstpm(287
pusha
jb
mov
leave
cmpsl
jl
arpl
sub
imul
xchg
mov
aad
loop
aad
add
fsubrl
cmp
scas
mov
rorb
mov
sbb
popf
repnz
repz
popa
ja
xchg
cmp
repz
insb
sbb
lcall
mov
addr16
push
lds
xchg
and
jle
push
test
not
rolb
mov
add
push
rol
loop
and
enter
jne
in
push
mov
mov
mov
and
add
test
sahf
jle
mov
inc
pop
push
movsb
sub
pop
cmp
inc
imul
jae
leave
cli
test
and
aas
dec
jle
mov
jge
lret
and
cltd
fdivrp
mov
mov
jg
or
xchg
andl
mov
xchg
mov
add
sbb
jne
xor
add
pop
or
mov
adc
shl
inc
into
fst
rcll
xchg
loop
rclb
leave
loopne
int3
mov
lods
test
inc
mov
int
std
fsubr
cmp
push
jp
cmpsl
cld
push
push
inc
sahf
cli
sub
adc
inc
mov
inc
loop
lahf
jmp
arpl
lds
adc
add
addr16
js
in
xchg
movsb
xchg
test
xchg
rol
lcall
xchg
jns
jg
mov
jle
lret
and
scas
or
inc
mov
sbb
pop
xchg
cmp
inc
addr16
sbb
cmp
sbb
shll
inc
fwait
mov
stos
or
push
jp
clc
push
in
gs
adc
push
fildl
mov
nop
loopne
fsubrs
xchg
ret
movsl
xchg
insb
mov
push
push
sar
pop
call
add
inc
in
fwait
gs
jb
sub
sbb
in
stc
insb
ss
pop
sti
dec
out
sub
adc
mov
xchg
xchg
enter
push
mov
shrb
mov
pop
adcb
mov
cmp
xchg
sub
inc
add
lock
and
mov
jb
loope
mov
jae
sbb
shlb
movsl
mov
mov
enter
add
xchg
pop
inc
sahf
add
call
and
inc
jns
out
stc
sbb
test
push
cmp
nop
mov
scas
xor
or
es
imul
pop
xlat
imul
jb
pavgb
fcompl
dec
pop
int
outsb
xorl
sub
movsb
inc
push
loopne
add
orb
or
std
add
int
mov
jmp
sbb
sti
and
inc
fs
add
push
pop
int3
dec
lcall
jp
or
insb
sub
xchg
and
fsubs
mov
outsl
mov
mov
jg
addb
or
test
loopne
mov
imul
outsl
in
das
insb
popa
je
or
pop
inc
mov
mov
es
mov
mov
inc
jecxz
pop
je
and
or
aad
lock
pop
and
lds
inc
fcmove
xchg
mov
mov
cmpsb
cmpsl
sbb
push
lods
inc
mov
or
loopne
in
xchg
out
mov
push
jecxz
aam
add
push
xlat
push
pushf
shrl
cmp
lods
inc
dec
shlb
loopne
pop
mov
stos
scas
ret
push
test
inc
cmp
xchg
data16
xlat
cmc
push
movsb
lret
lods
das
lock
adcl
push
cmpsl
push
and
push
dec
adc
dec
mov
push
add
sahf
sub
xlat
ds
daa
outsb
cmp
dec
jns
fwait
mov
push
ficomps
ds
pop
leave
loope
xchg
push
mov
mov
lock
call
decl
and
dec
fildll
orl
lods
push
int3
adc
fs
outsb
loope
leave
out
mov
jl,pt
int3
adc
xchg
cmp
add
and
test
js
stc
mov
stc
cmpsl
ljmp
aam
add
push
pusha
scas
mov
ss
dec
adc
scas
dec
mov
sbb
jl
xor
je
adc
xor
sbb
xchg
or
mov
into
les
movl
mov
push
mov
jmp
inc
pop
fisubl
mov
mov
fidivl
mov
orb
ljmp
add
push
shlb
mov
mov
iret
test
ss
or
cmp
imul
loop,pt
adc
or
and
stos
loop
sbb
bound
icebp
loopne
outsl
out
jmp
mov
mov
mov
lods
fldcw
xchg
ret
sub
push
lahf
xchg
movsb
fbld
loopne
movsl
mov
cmp
mov
push
mov
dec
cmp
cmp
shll
or
xor
fnsave
pop
mov
lods
sub
movsl
es
ret
lods
mov
flds
xchg
xor
cmp
adc
pop
or
aas
cmpl
test
out
push
and
sub
cmp
and
leave
mov
repnz
xor
pop
fstpl
mov
and
cmpl
rorb
sahf
ffreep
scas
mov
lods
mov
movsl
or
lret
inc
sbb
pop
adcb
push
into
cli
push
outsl
pop
add
imul
inc
fists
adc
jnp
sbb
inc
xchg
mov
rcll
es
lods
gs
out
mov
ror
xor
fbld
cmp
loope
mulb
out
jo
xor
add
dec
ffreep
mov
sti
inc
push
fwait
daa
or
mov
jge
push
ss
ss
jle
fsubrl
test
mov
inc
or
dec
xorl
pop
repz
cltd
pop
push
pop
mov
aaa
fmull
filds
inc
je
iret
push
add
ljmp
mov
pop
cli
scas
data16
xchg
rcll
mov
popf
jle
out
sbb
push
push
in
xchg
rol
jno
popa
adc
insl
mov
jge
pop
in
js
cmpsb
add
adc
pop
xchg
fcomps
gs
sbb
jmp
inc
jnp
mov
xchg
mov
insb
cmpsl
mov
dec
aas
add
shr
les
dec
pop
scas
aam
xor
aam
pop
flds
mov
out
aam
popl
lods
mov
pop
push
xchg
xchg
jae
or
dec
adc
and
test
jbe,pn
adc
fistpll
dec
mov
pop
pop
jg
xor
js
je
mov
clc
movsl
push
pop
daa
sbb
sarb
sbb
out
push
dec
iret
sahf
pop
orb
pop
jge
out
lcall
pop
sbb
xlat
mov
cmpsl
adc
sbb
sub
mov
in
loop
and
je
xor
fdivr
and
jge
rorl
sub
sbb
imul
jecxz
and
divb
inc
mov
sbb
je
push
inc
push
ret
daa
push
les
fnsave
or
cmp
cli
pop
out
pop
in
roll
loopne
dec
sub
loope
adc
inc
aam
mov
sbb
jp
sub
xor
lcall
test
sbb
pushf
inc
xor
pop
or
dec
inc
sub
insl
je
and
mov
enter
sti
das
pop
xchg
sbb
sti
imul
add
push
or
fsin
fsubrs
push
fisttps
inc
enter
jbe
xchg
xor
pop
std
and
repnz
or
lods
cmp
inc
jnp
fsubrp
xor
xchg
pop
add
dec
fisubs
mov
call
push
mov
xor
fistps
pushf
push
mov
inc
mov
popf
std
ss
cltd
outsb
add
sahf
or
mov
gs
roll
lret
sub
adc
scas
xlat
add
mov
push
pushf
scas
rclb
add
pushf
add
adc
dec
mulw
mov
rolb
mov
hlt
mov
ficompl
mov
dec
dec
in
stc
mov
xchg
add
cmp
xchg
in
enter
stos
add
loopne
icebp
fnsave
aas
cli
fcmovnbe
cmc
jne
fsubrs
xor
mov
imul
daa
mov
inc
outsb
movsb
mov
pop
std
xorb
inc
push
iret
lods
jb
push
or
mov
shlb
mov
mov
pop
adc
aaa
ljmp
popf
sub
sbb
aad
movsl
cmpsl
fwait
mov
sbb
cli
add
dec
and
test
test
dec
stc
push
je
jo
iret
pop
xchg
addl
xchg
sub
dec
enter
lods
je
and
mov
push
xor
add
addr16
adc
xchg
js
stos
jb
pop
xchg
jb
push
mov
daa
adc
std
sbb
sbb
arpl
cmp
xchg
rolb
mov
icebp
xor
stos
outsl
loop
addr16
fsub
xchg
pop
dec
je
jecxz
mov
out
hlt
stos
add
mov
popf
pusha
mov
mov
jle
push
jp
sbb
jmp
jnp
cmp
mov
mov
cmp
std
lret
pop
sub
lea
bound
insb
add
cmp
and
sub
pushf
into
jmp
scas
test
mov
es
cmp
jecxz
or
bound
mov
scas
sub
mov
push
cmp
repnz
addr16
mov
xchg
cmp
lds
mov
mov
bound
push
ljmp
sbb
andb
xor
add
pop
insb
shrl
data16
mov
add
mov
jb
sub
cwtl
lret
dec
inc
ja
pop
lret
xchg
ja
cmpsb
stc
mov
cltd
xor
pushf
pushw
xchg
push
loope
add
shll
ret
sub
jne
sub
mov
push
std
cmp
das
cltd
leave
imul
and
negl
sub
cmp
cmp
dec
lea
pop
cld
mov
loop
sub
mov
pop
idiv
cltd
pushf
xor
movsb
xlat
xchg
jmp
cli
dec
xor
cmp
loopne
stos
xlat
stos
repnz
cmp
push
lcall
es
jecxz
jb
mov
pop
int3
adcl
sti
inc
outsb
inc
xchg
js
andb
into
add
or
xlat
shll
mov
cmpsl
mov
cmpsl
sbb
mov
mov
adcb
ss
gs
lods
or
lods
fs
mov
mov
subl
pop
pop
jg
jb
decl
sub
enter
push
out
pop
sub
das
sbb
mov
dec
pop
rcrl
push
shll
sbb
setb
jp
out
mov
stc
test
xlat
ficompl
mov
maxps
cmp
aaa
xchg
add
fadd
inc
mov
ss
leave
popf
and
outsl
and
mov
in
ret
popa
aaa
sbb
mov
jge
test
imul
sti
adc
fidivrs
adc
aaa
sar
adc
in
aas
or
mov
dec
add
sahf
fldcw
test
dec
adc
test
mov
cmp
insb
clc
jge
and
mov
sar
dec
and
lods
sub
jne
add
stos
and
test
jp
mov
push
in
sbb
sahf
jo
lods
sbb
loopne
das
hlt
push
repnz
mov
lock
hlt
aad
xor
fisubrl
shll
leave
rcrl
mov
in
aad
cmp
xchg
ret
push
jg
inc
ret
aam
in
int
xlat
inc
mov
mov
icebp
inc
fcomps
test
push
shl
mov
or
aas
aam
and
push
and
xchg
out
mov
jl
and
out
mov
inc
hlt
xchg
jmp
ljmp
jmp
adc
iret
movsb
adc
insl
jecxz
prefetch
sub
push
and
pop
addr16
mov
shl
inc
iretw
xor
jle
loopne
stos
cmp
sbb
call
cmp
push
mov
inc
or
fbstp
jbe
shl
scas
popf
sub
inc
stos
dec
dec
add
ret
inc
pusha
les
mov
push
into
jge
addr16
mov
jp
test
lock
int3
adc
or
jecxz
fsubr
gs
pop
lcall
cmp
mov
popa
and
sub
repz
mov
dec
shll
cmp
pushf
pop
dec
mov
jb
dec
pop
add
fwait
jmp
rcll
mov
mov
out
and
movsb
cmp
loop
test
push
mov
roll
xchg
loopne
loop
xor
leave
cmp
pop
dec
dec
icebp
repnz
adc
sub
fimuls
mov
mov
or
jmp
sbb
aam
cld
test
je
cmpsl
inc
aas
enter
ljmp
daa
cs
jnp
mov
je
test
pusha
cli
inc
add
xchg
movsb
adc
repz
or
jecxz
jo
cli
sub
mov
mov
mov
mov
repnz
push
mov
sub
incl
or
xlat
mov
imulb
in
es
int3
insb
push
xor
shrl
stos
xor
inc
lea
and
jmp
pushf
adc
in
mov
test
jl
icebp
imul
mov
movsb
stos
lock
test
sbb
cmp
mov
push
and
lcall
mov
and
mov
mov
mov
dec
jns
jg
nop
mov
dec
jnp
scas
sub
mov
jns
dec
fimuls
inc
sbb
lcall
mov
lret
jb
xchg
ficoms
aad
out
in
sahf
add
or
xchg
mov
rep
jbe
xchg
inc
lahf
mov
scas
in
add
js
icebp
jg
push
push
test
cmpsb
es
or
fldt
lahf
push
aas
or
int3
xchg
sub
jp
repnz
stos
gs
mov
daa
cmp
sahf
push
fildll
bnd
shrb
insl
neg
sbbb
add
sub
clc
mov
pop
mov
xchg
add
leave
lods
mov
test
movsb
popa
hlt
jg
jg
jge
sbb
int3
fnstcw
mov
nop
addb
push
aaa
into
lods
or
add
mov
insl
mov
or
lock
sahf
imul
lds
and
sub
inc
clc
jbe
in
int
inc
repz
push
push
dec
xchg
repnz
jb
mov
xchg
dec
pop
sti
pop
push
add
cs
push
mov
enter
div
lds
jmp
push
push
gs
add
rclb
loop
iret
inc
stos
xchg
stos
cs
dec
daa
jmp
sbb
int
push
pop
adc
or
mov
inc
fisttps
push
inc
stos
adc
pop
in
mov
mov
pop
loopne
push
pop
popa
adc
icebp
sub
dec
jecxz
popa
mov
test
aam
inc
sub
ds
mov
les
xor
sbb
aaa
pop
lret
lret
cs
cs
ret
jmp
mov
stc
mov
sub
sbb
lods
mov
xor
out
sti
je
jge
dec
repnz
dec
sbb
sub
mov
popa
stos
sbb
cmp
aaa
dec
js
mov
test
incl
mov
ret
sahf
pop
mov
imull
mov
mov
clc
cmp
inc
sbb
adc
rcll
pop
ret
cmp
lea
repnz
lods
bound
sbbb
fucomi
mul
hlt
imul
out
cmp
nop
in
mov
repnz
sub
imulb
jno
lods
imulb
sarl
inc
aad
mov
sbb
mov
adc
pop
lods
repz
aad
pop
fwait
mov
cmpsl
sub
fmull
stos
ficompl
sbb
hlt
add
fisubs
cmp
sub
inc
push
sti
mov
or
mov
inc
jbe
dec
mov
test
into
sarb
lret
jecxz
xorl
dec
sub
inc
sahf
pop
jo
cmpsb
inc
cmpsl
inc
lret
mov
cmp
ja
test
jl
dec
mov
sbb
lods
cmp
dec
loopne
push
push
xor
fnstenv
imul
cltd
orb
hlt
push
in
mov
mov
shl
jnp
mov
test
adcl
imul
lods
insb
mov
or
cmp
gs
sbb
xchg
movsl
dec
jbe
icebp
cwtl
adc
pop
pop
out
fnstsw
mov
pop
lcall
xchg
lea
popf
cmp
test
sub
fisttpl
pushf
mov
rorb
pop
add
adc
mov
mov
sbb
fnstenv
jge
pop
push
inc
lea
jae
mov
push
adc
xchg
and
adc
push
push
stos
push
jb
sarb
inc
sbb
js
add
out
jbe
cmp
inc
test
movsl
pop
mov
clc
leave
icebp
add
xchg
xchg
movsb
adc
cmpsl
ss
xchg
sarb
mov
lods
stos
mov
jne
cld
ss
xorl
scas
adc
mov
iret
gs
pop
iret
test
dec
or
out
movsl
xchg
adc
aam
dec
jae
jb
cmp
xchg
push
or
repz
push
mov
sarb
xlat
jns
test
mov
jae
add
sub
dec
cmc
repnz
pop
jl
sub
mov
dec
xor
enter
cpuid
xchg
jno
cmp
mov
adc
fdivs
jge
mov
insb
lds
pop
test
popa
mov
cmc
mov
cld
in
cmp
into
sti
das
sbb
rcrl
outsl
push
fisubrl
lea
xchg
imul
std
aaa
imul
jp
lret
pop
pusha
and
dec
pop
insb
jns
dec
fdivs
adc
mov
mov
mov
inc
dec
mov
test
ret
outsl
aam
jecxz
jp
ja
cltd
das
iret
dec
or
pop
xchg
mov
out
in
loope
sub
icebp
daa
stos
adcb
sub
mov
out
xchg
jns
inc
and
dec
or
scas
data16
mov
mov
daa
cvtps2pi
mov
inc
test
add
cli
mov
or
xchg
mov
cmp
outsl
mov
add
xor
mov
imul
sbb
sub
andb
inc
ja
call
out
xchg
mov
ljmp
mov
ds
mov
xor
mov
xchg
jecxz
test
mov
xchg
mov
sbb
push
adc
mov
push
add
xlat
inc
xchg
xor
and
idivb
xchg
or
pop
lret
sbb
sbb
je
mov
bound
fcmove
test
cmp
dec
rcrb
gs
imul
or
ja
loope
mov
dec
fs
mov
xchg
sbb
ficoms
jle
test
lea
push
mov
cli
inc
jb
push
into
lret
push
xor
enter
in
loope
lcall
xor
sbb
loop
dec
push
add
insb
cli
movsl
imul
push
jbe
int3
inc
pop
adc
xlat
add
mov
je
out
stos
or
loop
or
in
sub
icebp
sub
adc
or
and
cmp
push
in
sub
xor
scas
call
pop
dec
into
jg
pop
dec
cs
dec
mov
or
pop
out
push
add
push
inc
or
in
or
cmp
mov
fisttpll
cltd
mov
daa
nop
insl
mov
lret
push
cmp
mov
jns
lods
push
sub
xlat
pop
cltd
xor
and
xchg
jo
mov
add
pop
rcrb
ja
test
jns
loope
xor
sti
loop
mov
pop
fwait
inc
decl
fnsave
scas
or
into
aam
fbld
out
xchg
ljmp
enter
mov
fistpl
movb
sbb
das
jp
push
gs
cmp
push
ss
push
arpl
pusha
lcall
pop
push
pop
ret
jp
and
aad
push
push
add
push
in
xor
dec
or
adc
xor
cmpl
lret
mov
rclb
mov
loop
cld
cmp
jecxz
shl
dec
sbb
sbb
aas
pop
push
cmp
push
rolb
sbb
dec
and
pop
addr16
xchg
imulb
loopne
mov
push
stos
out
xchg
adc
mov
cmpsb
out
mov
mov
sbb
outsb
mov
pop
add
aaa
add
fildll
cltd
mov
cmpsb
pop
inc
icebp
push
int3
test
and
add
mov
add
push
adc
or
or
or
ret
add
sbbl
repz
push
add
arpl
aaa
ds
xlat
pop
push
cmpsl
inc
inc
dec
push
enter
ss
scas
lds
ret
mov
test
js
add
sub
mov
imul
cmp
loop
mov
xor
lahf
js
mov
pop
and
xchg
sti
fucomp
loopne
add
push
shl
pop
pushf
add
sbb
aaa
jnp
sti
xor
lock
push
jg
imul
roll
adc
and
icebp
arpl
enter
dec
inc
lcall
mov
xor
pushf
xor
sbb
lahf
out
dec
aaa
mov
jp
cld
mov
rorl
movsb
sub
pop
popf
lret
popa
ja
cmp
mov
jae
mov
setns
pop
mov
jb
inc
sbb
out
adc
ret
insl
sbb
jne
xor
scas
shlb
cwtl
push
push
sahf
call
sahf
xchg
adc
mov
push
xchg
adc
and
push
xchg
add
stc
pusha
adc
out
ret
or
imul
dec
sub
xor
cmc
inc
aas
sub
aas
es
add
ljmp
push
mov
test
in
or
stos
inc
les
or
push
aad
sbb
fcomp
lcall
ljmp
mov
scas
jg
pushf
cli
call
jmp
repz
push
jns
in
sub
add
jl
pushfw
sub
sbb
outsb
mov
adc
out
das
cmpsb
arpl
push
add
xchg
sub
push
jmp
into
adc
ljmp
popf
std
inc
mov
and
iret
leave
ss
and
and
aam
mov
mov
addl
pop
outsb
aaa
sbb
enter
inc
inc
lret
pop
loop
push
sbb
arpl
cmp
sub
jmp
iret
inc
fisttps
flds
das
xor
adc
jnp
sahf
pop
or
push
cmpsb
dec
add
movsl
insl
and
xchg
dec
shlb
or
out
mov
or
test
and
enter
shrl
in
call
xchg
movsb
jmp
inc
lahf
jo
inc
mov
jo
inc
test
jns
outsb
pushf
pop
sahf
pop
leave
add
push
and
inc
mov
mov
pop
int
xor
sbb
adc
ffreep
test
push
sbb
and
nop
movsl
inc
pop
push
sbb
pop
repz
add
dec
fwait
push
or
mov
adc
add
lock
add
add
adc
call
cld
pusha
fldl2e
cmp
xor
mov
push
add
inc
push
dec
lahf
cltd
jo
mov
aaa
mov
mov
mov
xchg
lcall
ljmp
jb
pop
sub
in
cmp
or
enter
push
cmpsb
cmpsl
loope
push
push
imul
dec
test
xorl
and
mov
jge
aaa
xchg
and
imul
dec
xlat
and
stos
subb
cmp
aam
loopne
scas
insl
sub
add
dec
shlb
mov
movsl
ror
sbb
xchg
sub
test
mov
stos
stos
cmp
je
lods
mov
push
adc
push
inc
or
ret
shlb
sbb
push
lock
popa
pop
out
sbb
inc
test
ret
call
shrl
std
and
jmp
sbbb
dec
js
pop
jbe
or
pop
adc
sub
test
cmp
jmp
xor
idivb
mov
mov
cmp
xor
cld
pop
sbb
leave
fyl2xp1
jns
mov
jo
push
sbb
adc
inc
sbb
repz
das
pusha
fstl
imul
sbb
out
and
repz
ja
rcl
and
jbe
repz
inc
and
dec
movsl
pusha
lock
fistpll
sbb
aas
cltd
popa
push
mov
shrb
push
aam
loopne
fbld
fisubrs
shl
sbbl
dec
es
and
pop
push
mov
icebp
adc
std
ja
loop
mov
xchg
mov
mov
mov
sub
mov
sbb
cmp
jg
and
push
insb
lds
fsubl
dec
sarl
or
jge
lods
stc
xor
in
add
lods
rorl
jae
inc
leave
popa
adc
lcall
or
test
ja
jp
sub
sub
sbb
push
sbb
js
pop
or
dec
mov
daa
insl
out
and
inc
shrl
and
mov
dec
insl
pusha
xchg
jge
jl
insl
xchg
sub
out
inc
dec
and
int
xchg
sub
pop
dec
xchg
pop
jp
mov
xor
add
add
cmc
nop
jg
inc
iret
push
shl
insb
mov
jp
nop
push
cmpsb
daa
dec
cwtl
aaa
push
lock
jbe
repnz
inc
dec
dec
icebp
jle
add
xchg
mov
xorl
sub
aaa
dec
and
push
push
lock
mov
out
push
test
jbe
adc
insb
sbb
or
inc
sub
pmaxsw
push
mov
and
pop
ljmp
gs
push
nop
stos
and
pop
lahf
in
mov
jl
xor
icebp
cmp
adc
sar
loop
add
jmp
pop
rolb
mov
call
mov
cmpsl
cmpl
rorb
sbb
jb
out
sbb
cmp
lods
xlat
test
push
outsl
xor
cmp
int
sub
xlat
insl
js
inc
leave
out
xchg
push
pop
jb
jbe
xorl
shrb
cli
mov
mov
adcb
sahf
int
pop
lock
scas
add
fs
or
leave
std
push
push
xor
and
loop
mov
mov
adc
les
test
pusha
pusha
xchg
ficoml
arpl
jl
mov
jle
mov
add
sub
sbb
rcrb
int
imul
subb
mov
adc
add
fcompl
add
and
test
sub
int
sahf
xchg
jne
lds
mov
int3
dec
out
sarb
repnz
and
ret
add
test
add
sarl
rcrl
test
arpl
and
cld
or
xor
ret
gs
lahf
sub
mov
jno
ja
xor
roll
xchg
jp
xor
or
in
addr16
add
aad
dec
xlat
iret
xor
lds
or
inc
inc
or
nop
mov
inc
cmp
loop
mov
fdivs
and
aam
test
mov
fucomip
xor
and
jge
xor
nop
push
stos
ficomps
mov
call
add
fildll
fsubp
nop
sub
mov
jle
xor
mov
aaa
leave
imul
mov
pop
arpl
pop
lret
test
arpl
ja
cmp
push
sub
or
sbb
cltd
out
imul
lcall
jmp
fyl2x
mov
iret
in
inc
and
and
mov
insb
icebp
inc
aam
jecxz
orb
ja
mov
xlat
lods
or
xchg
sarb
mov
add
inc
cmp
dec
sub
lods
mov
jbe
sbb
movsb
sub
and
jmp
xchg
sbb
mov
movl
mov
add
sahf
xchg
mov
mov
test
adc
inc
sbb
mov
pop
xor
shll
push
mov
test
dec
adc
mov
out
ror
and
mov
cltd
pop
or
inc
cmp
pop
push
es
movsb
stos
mov
out
insl
mov
sub
stc
dec
sub
shlb
push
xchg
xor
fucom
add
mov
xchg
ret
sub
push
ror
fisttpll
or
jbe
bound
xchg
sub
cmc
jns
rcll
clc
out
testl
sahf
or
ss
popa
mov
inc
iret
xchg
mov
push
push
addb
xchg
or
test
scas
fbld
je
add
outsb
push
or
pop
inc
push
mov
out
xchg
out
cmp
into
decl
inc
inc
sbb
add
fiadds
add
ret
cli
pop
cmp
int3
or
fwait
icebp
outsb
outsb
nop
mov
aam
cmp
mov
mov
pop
fldl
jbe
mov
lock
ds
cmp
lods
dec
out
xor
js,pt
or
xor
test
dec
mov
vpunpckhdq
adc
jb
or
shl
or
cltd
test
lods
push
and
sbb
pusha
mov
xchg
inc
out
jo
mov
repnz
incl
jb
popf
aad
jl
sbb
pop
jp
xor
push
aas
add
popf
or
aam
sbb
mov
adc
or
jnp
push
in
mov
xor
or
adc
adc
aaa
jle
cmp
pop
jnp
testb
outsb
push
pop
lcall
out
out
into
push
push
pop
adc
movsl
insb
adc
in
jmp
xor
xchg
inc
cmp
in
test
sarl
jo
inc
or
inc
add
ds
dec
mov
rolb
add
shrb
ljmp
xchg
popf
or
xchg
arpl
sub
pop
fcoms
lds
pop
mov
push
gs
adc
xlat
dec
scas
popa
insl
test
outsb
mov
dec
push
ficoms
mov
push
mov
addr16
xchg
lock
xchg
faddl
inc
jae
ds
push
rcll
hlt
jl
int3
mov
fcomps
daa
test
push
les
in
and
popf
dec
cmc
dec
shll
fnstcw
jne
adc
mov
mov
push
jns
sbb
adc
xchg
mov
rcrl
cld
fs
mov
and
dec
sahf
add
mov
aaa
add
fdivrp
rorb
stos
js
fstpl
pushf
or
imul
clc
mov
stos
pop
xchg
rcrb
out
push
xchg
lds
dec
mov
or
out
and
xor
cmpsl
push
stos
cmc
mov
mov
mov
mov
lcall
mov
dec
sbb
loope
adc
scas
xchg
ss
xchg
loope
stc
and
fwait
loop
ret
stos
pop
dec
xor
aad
lret
xchg
fsubrl
imul
cmc
scas
dec
repz
inc
std
or
aaa
scas
mov
js
push
jge
xchg
lcall
inc
test
adc
pusha
jl
lods
inc
lret
adc
xlat
in
ss
repz
mov
cmp
arpl
and
ret
dec
repnz
loopne
movsl
movsb
sbb
hlt
js
test
pop
loopne
add
adc
sbb
inc
gs
aas
dec
imul
cltd
jle
jo
inc
jno
jae
add
into
mov
fnstenv
fldt
mov
xchg
inc
fisttps
mov
incb
mulb
je
sahf
stos
addr16
int3
insl
test
movsl
les
test
jns
jmp
xor
mov
cmp
sub
fildll
push
adc
decb
xchg
adc
ljmp
adc
xor
in
iret
imul
outsb
icebp
fldl
sbb
jbe
and
mov
das
cltd
xor
xchg
sbb
jns
dec
pop
lods
add
ds
loopne
sub
adc
fs
loope
lcall
loop
aam
frstor
loopne
push
imul
pop
push
in
std
pop
vphaddudq
mov
pop
imul
mov
out
in
es
inc
xchg
sbb
or
mov
aad
push
aam
lret
test
or
es
hlt
ljmp
mov
lret
cmpl
cmp
push
loopne
xchg
mov
mov
gs
or
sbb
hlt
bnd
xchg
mov
sbbl
sbb
sub
cmpsl
movsb
les
pop
popf
ss
sti
ret
sbb
movsb
ficoms
scas
and
fwait
sbb
and
enter
icebp
outsb
jo
movl
sub
and
sub
lret
outsl
pop
testl
hlt
push
ja
scas
dec
hlt
loope
push
mov
fistps
add
mov
cmp
xor
clc
gs
xchg
aaa
idivb
mov
pop
enter
addr16
clc
addr16
cwtl
popa
in
lods
xor
xchg
rorb
lods
mov
ret
orl
in
outsb
push
in
sbb
lret
je
ja
dec
js
mov
stos
pop
cmp
std
rolb
dec
movsb
stos
dec
std
xor
xchg
imul
xchg
and
dec
sub
cld
leave
mov
cld
push
insl
mov
mov
adc
mov
daa
dec
xchg
cmp
jbe
call
stc
std
sbb
add
fsubr
jmp
aad
mov
pushf
loope
fildl
push
xor
and
fidivl
push
data16
cmc
push
ljmp
ret
lret
xchg
movsl
mov
loopne
fists
dec
lock
daa
nop
scas
xchg
mov
jmp
in
cmp
sub
sbb
xchg
add
cld
pop
fiadds
das
sub
scas
je
lock
mov
xor
leave
sbb
jae
fwait
lds
jge
jnp
in
enter
mov
test
adc
dec
pop
xchg
mov
and
shrb
arpl
mov
stc
xchg
xor
loop
jmp
test
aas
subl
clc
mov
or
and
sub
and
jmp
pop
push
mov
jo
mov
mov
cmp
jns
cmp
dec
in
pop
add
out
inc
adc
mov
aad
dec
mov
pop
add
addr16
add
cmp
adc
cmp
lods
imul
shl
cmp
inc
loope
adc
outsl
pop
clc
cmp
jo
movl
xchg
insl
inc
or
aas
mov
fs
lock
push
xor
cmp
push
out
frstor
repz
pop
js
lock
inc
out
dec
pop
sbb
clc
shl
clc
xchg
out
lcall
mov
lret
aas
xor
ret
fisubrs
cltd
xor
dec
mov
testl
shll
xorb
mov
mov
or
cmp
aad
xchg
into
xor
leave
lahf
iret
popa
stos
lods
pop
inc
lds
inc
adc
mov
sarb
or
jbe
push
dec
push
cmpsb
lcall
inc
or
mov
in
arpl
mov
int3
mov
cmp
xor
and
loop
out
cmc
inc
inc
cmpb
jno
jno
adc
lods
and
ret
mov
mov
xchg
js
imul
out
jecxz
mov
fsubrs
loop
jg
mov
dec
sbb
imull
pop
push
xchg
pop
cmpsb
test
test
pop
push
pop
insl
jns
outsl
dec
jb
jl
xchg
jbe
sub
adc
popa
push
jbe
cmp
xor
push
loopne
enter
cmpsb
adc
inc
dec
das
fnstcw
push
adc
cmpb
ja
push
imull
add
jl
mov
fs
pop
leave
mov
cmp
jbe
scas
mov
test
enter
pop
or
xor
sbb
or
lds
clc
pop
sub
xchg
arpl
pop
pushf
or
pushf
xchg
mov
les
and
fs
pop
fcom
mov
addr16
sahf
mov
xchg
mov
lret
adc
ss
les
adc
mov
iret
mov
mov
loopne
movl
inc
add
adc
popf
into
dec
cmpsb
int3
fadd
push
push
test
add
adc
inc
dec
lock
mov
lock
cld
out
filds
push
mov
lds
jp
push
push
in
cmp
lea
xchg
cmp
cwtl
and
push
push
jbe
xor
test
jae
jl
loop
mov
mov
testl
mov
mov
mov
cli
push
xchg
mov
xor
adc
xchg
sub
mov
loope
clc
negl
jnp
push
out
push
pusha
pop
test
ljmp
sbb
jbe
push
cwtl
loop
in
out
call
xor
icebp
sbb
outsw
ss
xor
xchg
pushf
cmpsl
jecxz
das
cmp
lcall
pop
daa
jae
sbb
push
sub
insl
pop
mov
lret
adc
lret
test
pop
filds
mov
push
push
mov
mov
dec
ljmp
mov
cli
ljmp
dec
outsb
shll
pop
push
jl
hlt
and
lret
jg
pop
mulb
add
jle
aad
lss
sub
mov
mov
repz
mov
out
mov
clc
add
inc
xor
mov
xchg
lea
lock
adc
jb
xor
dec
mov
jo
popa
imul
jb
sti
shlb
dec
stc
jb
mov
fcomps
xor
repz
xlat
dec
push
mov
push
lock
stc
in
push
cmp
xor
and
pop
roll
ss
sbb
mov
xchg
pusha
dec
sbb
mov
dec
jb
push
jecxz
out
fildll
movsb
insb
dec
xlat
sbb
lock
mov
push
adc
pop
jg
imul
hlt
jno
pop
push
fsubs
push
jmp
rclb
xor
daa
and
fwait
ror
dec
and
in
dec
movsl
cmpsb
lret
sti
jo
sub
jle
fistpl
xlat
idivb
repz
mov
xor
aad
xor
mov
test
add
popl
outsb
xor
mov
pop
pusha
popa
arpl
mov
jb
ds
xchg
faddl
pop
adc
inc
mov
pop
pxor
fnstsw
mov
rcr
sub
mov
arpl
and
jecxz
lock
dec
sub
sub
mov
pop
stc
sbb
mov
popa
leave
ja
in
jo
xor
mov
inc
mov
call
aaa
sub
ret
inc
add
push
rorb
mov
or
dec
and
jle
sahf
jae
popf
or
xlat
das
and
testl
xchg
movsl
add
out
add
adc
lret
pop
call
xchg
mov
lods
lret
cld
and
push
decl
push
sbb
ss
in
imull
or
mov
cmp
cli
sub
imull
orb
lods
popf
push
jnp
std
out
mov
mov
in
insl
sub
xor
pminub
adc
mov
push
mov
test
push
dec
push
rorb
jecxz
sahf
mov
jae
mov
push
arpl
int
ret
test
stc
stos
jecxz
xor
ret
pop
cmp
adc
fnstenv
dec
jl
pop
into
inc
loopne
arpl
stos
rorb
mov
daa
jb
or
fwait
out
rolb
enter
rolb
fstl
fistpl
das
subl
or
cwtl
imul
aaa
mov
jae
insl
pop
jecxz
test
cmpb
and
or
popa
add
pop
sti
test
test
pop
sbb
pop
shr
sbb
inc
jge
add
cmpsl
les
gs
mov
dec
icebp
arpl
out
shrb
repnz
sbb
push
dec
addl
cs
pusha
imul
sahf
fs
iret
jb
outsl
lcall
lods
mulb
mov
xchg
test
cmp
jl
adc
dec
dec
lds
ds
or
mov
insl
ss
popf
pop
negb
ljmp
jecxz
pop
xor
xchg
ss
das
xchg
dec
xchg
sti
inc
sub
out
enter
jne
adc
cmpsb
pop
fdivrs
lods
pop
fs
adc
inc
sub
int3
into
mov
movsb
jge
imul
push
movsl
sub
jg
cmp
dec
mov
jg
pop
jecxz
imul
in
sbb
addr16
je
cmc
mov
adc
xchg
lret
or
cld
sbb
aam
mov
aas
or
repz
xchg
xchg
xor
js
push
cltd
push
popl
pop
mov
bound
or
test
cmpsl
das
ja
xchg
cwtl
mov
lret
adc
cmp
bound
inc
push
push
xchg
jnp
mov
jge
push
dec
mov
sbb
or
fs
and
lds
jmp
repz
add
arpl
lcall
dec
and
inc
xor
lods
pop
testb
dec
ss
jge
cmpsb
push
inc
pusha
xchg
fiadds
jge
dec
cmpsb
lods
mov
inc
pop
js
icebp
rolb
mov
aas
xor
inc
pushl
adc
movsb
xor
mov
loope
fstps
fwait
lahf
xlat
nop
daa
jmp
pop
sbb
outsl
jl
xchg
mov
ret
inc
scas
dec
xor
std
test
or
lret
cmp
xchg
push
mov
mov
sub
push
test
lcall
mov
add
cwtl
mov
jo
push
and
xor
mov
jp
xor
dec
sub
lods
or
xchg
ja
sub
jp
xchg
push
xor
ljmp
or
outsb
mov
add
inc
pop
call
xchg
sarb
jecxz
adc
das
popf
jno
add
sbb
pop
add
stc
into
mov
dec
ja
fs
push
xorb
inc
jo
mov
clc
xchg
cmp
stos
sub
jmp
out
xchg
cs
mov
mov
insl
dec
fsubs
into
es
jmp
sub
out
arpl
and
adc
loop
out
adc
ljmp
ljmp
mov
mov
add
xor
lcall
insb
mov
imul
outsl
cmp
stc
ja
shlb
jge
inc
add
loop
or
pop
out
pop
mov
pop
mov
sbbl
pop
lods
cmp
push
hlt
xor
loope
push
hlt
test
loope
xchg
loope
testb
dec
jecxz
or
sbb
inc
je
outsl
dec
mov
mov
nop
notb
mov
sbb
cmpsl
in
aas
cwtl
and
mov
or
xchg
out
repz
les
push
es
jecxz
or
int3
popa
jmp
fnsave
shl
popf
ficoms
ljmp
outsl
outsl
addl
push
cmpsl
popa
push
xor
jl
xchg
jae
pop
inc
push
dec
lods
and
and
cmpsb
sbb
popf
addb
mov
xor
sbb
rcr
addr16
es
fsts
aam
xlat
fiadds
push
lock
cmp
iret
jmp
aad
imul
mov
loope
mov
sbb
pop
pop
insb
jg
mov
repz
pop
cld
jno
lcall
mov
je
aaa
icebp
mov
dec
jb
or
mov
push
mov
cs
sbb
popf
xorl
push
pop
lahf
popa
pop
popf
or
lret
in
es
movsb
insl
xor
clc
pop
push
movsl
mov
fsubr
dec
inc
push
in
and
dec
ss
and
loopne
xchg
movsl
mov
add
outsb
imul
js
add
test
in
lahf
test
scas
popa
pop
pop
xchg
adc
fiadds
arpl
or
test
and
sub
jae
and
xor
fidivl
inc
push
xor
and
mov
push
sbb
popa
iret
mov
pop
add
jns
mov
push
mov
insb
add
pop
icebp
pop
sbb
inc
cltd
cmp
lods
jl
sub
pop
fsub
mov
lds
rorl
xchg
es
or
shll
mov
scas
je
sbb
jb
sub
shlb
shll
mov
push
sti
jb
jne
cmc
arpl
ja
mov
jle
imul
enter
lret
outsl
outsl
sub
xor
sarb
and
xchg
pmulhw
pop
push
adcl
or
or
mov
test
inc
or
inc
mov
cmc
lds
jne
add
or
leave
pop
adc
jnp
mov
mov
jnp
mov
ss
in
mov
xor
cmp
cltd
adc
jns
push
cmp
xchg
pusha
popa
cwtl
and
lea
cmp
inc
jle
rcrl
aas
and
lahf
stos
aad
mov
inc
stc
stos
adc
ret
sbb
add
mov
mov
scas
inc
aad
xchg
jbe
xchg
inc
leave
xchg
loope
sahf
call
sub
add
dec
hlt
out
sub
bound
lahf
sub
or
dec
enter
xchg
fadd
jnp
movsb
pop
dec
lock
mov
imul
mov
sbb
mov
mov
test
jno
fildll
dec
add
imul
lods
dec
mov
adc
loop
xor
daa
mov
mov
mov
repz
mov
in
push
shrl
loopne
lods
gs
xchg
ja
lods
ss
push
inc
xor
mov
pop
popl
sarl
push
andl
daa
fwait
adc
in
fdivrs
lock
ds
rcrl
mov
in
cli
mov
mov
lds
add
into
fisubl
push
mov
push
es
shl
incl
fs
in
sbb
xor
inc
insl
ss
scas
cltd
popa
mov
lahf
sbb
cld
pusha
dec
jge
add
jno
stc
mov
dec
mov
xchg
imul
jb
push
sbb
cltd
lcall
adc
imul
call
lret
clc
inc
aad
add
es
leave
mov
push
lret
sysenter
or
push
cmp
and
jb
ret
adc
aad
mov
sbb
inc
sub
pop
and
les
in
jo
out
inc
cld
iret
movsl
es
dec
cmpsl
xchg
aaa
clc
lret
cmp
repnz
fwait
xchg
lds
aaa
movsb
rolb
add
sub
outsb
sbb
repz
jns
mov
or
dec
mov
lret
out
fnstsw
xchg
dec
jmp
pop
popa
js
in
dec
popl
inc
pop
mov
pop
push
enter
test
push
aam
pop
sbb
shrl
push
jmp
push
jle
mov
push
add
mov
sub
or
rcl
stos
pop
loope
mov
lcall
loope
and
inc
mov
notb
lods
mov
into
cs
push
ja
daa
xchg
or
lahf
push
and
and
dec
xor
icebp
mov
les
jae
les
cmp
in
pop
test
dec
sbb
sbb
mov
std
push
popf
insb
mov
daa
jle
pusha
and
inc
std
add
clc
in
es
std
je
jge
mov
adcl
outsb
imul
pushf
add
jg
mov
push
push
jle
jnp
inc
push
mov
in
jmp
sbb
stos
filds
stos
pop
aam
jo
mov
mov
xchg
or
mov
icebp
cmpsl
aaa
cmp
adc
or
pusha
push
pushf
outsb
pusha
ja
xor
int3
mov
shll
push
ljmp
xchg
push
lahf
pop
pop
outsl
sub
dec
xchg
out
enter
out
sub
mov
test
std
sub
lret
imul
jmp
sbb
ficompl
or
outsb
out
mov
push
cmp
cmp
outsb
dec
lods
jb
les
lahf
xor
testl
leave
cmpsb
jb
inc
mov
fcoms
xchg
jno
mov
cmp
test
inc
ds
push
xor
pop
xor
push
nop
xor
fadd
in
loopne
or
and
popf
xchg
or
aaa
pop
jmp
mov
pop
push
dec
sub
into
mov
cmp
insl
sub
repnz
call
xchg
jne
rcll
or
mov
mov
fildl
mov
mov
inc
hlt
pusha
sti
adc
fs
jl
jg
mov
jle
jne
xor
mov
call
es
jecxz
inc
adc
pusha
cli
pop
jbe
push
xor
cmpsl
add
lret
lods
scas
push
imul
cmp
push
xchg
mov
cmpsb
loopne
and
mov
mov
sbb
xorl
and
andl
fs
xchg
push
mov
xchg
push
pop
daa
popa
add
lret
stc
cwtl
adc
and
inc
movsl
je
cmc
push
or
fbstp
cli
add
mov
dec
dec
test
xchg
test
sahf
mov
sub
out
stc
leave
xchg
jmp
dec
mov
adc
mov
mov
push
mov
fwait
fs
xor
mov
push
mov
insb
and
push
andb
xchg
fistpll
push
xor
dec
jne
mov
or
lahf
push
aam
cmpsb
stos
in
fmul
inc
out
cmpsl
jg
ja
aas
inc
scas
incb
xchg
xchg
test
sbb
ds
clc
mov
aaa
lock
out
and
mov
int3
push
push
mov
bound
fcomip
rclb
int
fsts
mov
loope
pushf
int3
std
mov
das
into
add
fstps
divb
test
cs
imul
ror
loopne
ret
xchg
leave
push
outsb
fstpt
mov
fsubr
inc
sbb
xchg
int
inc
cmpsb
into
pushl
cmp
insb
out
fwait
lcall
in
out
mov
fwait
or
loope
negl
jae
push
and
lock
mov
mov
cmpsb
mov
cmpsb
push
mov
call
pop
sbb
addr16
sbb
xlat
and
pop
mov
pop
xor
cmp
and
sbbl
add
loop
adc
sub
pop
out
add
arpl
bound
jbe
cwtl
mov
cmp
filds
inc
pop
xor
mov
fildll
in
mov
xchg
sbb
mov
mov
je
mov
inc
cmp
pop
cmp
in
or
lods
adc
sbb
sub
jno
int3
add
aas
pop
jl
aas
or
cli
cmpsb
sahf
push
cli
mov
fnstcw
movsl
sub
and
or
std
jmp
or
shrb
cmpsb
pop
loope
shrl
ljmp
mov
cwtl
scas
jge
icebp
lahf
outsl
and
push
arpl
push
pop
rol
or
gs
mov
lock
or
fildl
subb
and
pop
js
mov
xchg
pop
mov
jp
fcmovbe
scas
xchg
in
adc
leave
inc
mov
lahf
arpl
sbb
cmpsl
or
rcr
sub
fstpl
fistps
mov
pop
pop
pop
int
stos
push
jno
mov
inc
mov
add
and
jp
jne
das
and
lret
cwtl
dec
sub
sbb
insl
jmp
mov
pop
add
push
clc
scas
or
mov
pop
pop
nop
cmp
xchg
mov
push
xchg
mov
xchg
mov
push
dec
cmc
inc
dec
aad
mov
sub
mov
repnz
adcb
cltd
inc
mov
jp
mov
xorl
popa
pusha
scas
sub
pushf
xlat
fidivl
sbb
push
mov
push
cmp
std
mov
cmp
cmpl
cmp
bound
rol
push
sub
and
loopne
sub
push
mov
inc
dec
stos
mov
or
add
lret
lret
jno
jp
inc
lds
rol
xor
sar
ror
nop
scas
jbe
in
stos
mov
push
pop
sbb
test
aas
jecxz
jl
stc
loopne
sub
fcomi
push
cmp
fucomp
or
inc
aaa
std
popa
stc
lock
push
aam
call
les
xchg
ljmp
jb
mov
jecxz
push
inc
push
lock
mov
loope
leave
cwtl
sbb
sbb
adc
mov
sub
dec
pop
stos
adc
out
ret
push
int3
or
insl
repnz
mov
fstl
cli
mov
call
nop
mov
sub
adc
jge
pop
jnp
roll
hlt
and
cli
cs
xlat
mov
xor
jl
mov
dec
dec
sbb
std
jg
jl
fwait
std
mov
aaa
mov
in
icebp
fsubrp
inc
lahf
pop
into
data16
mov
or
add
pop
rclb
ret
and
pop
je
and
or
push
stos
ds
pop
pop
lock
add
insb
xchg
pop
incl
sahf
ror
mov
cwtl
xor
mov
fxch
idivl
or
sti
mov
xchg
ja
insl
or
inc
add
jnp
inc
jp
mov
sbb
ss
gs
pop
mov
push
push
xchg
jl
in
rcr
maskmovq
testl
lock
inc
ret
in
inc
test
das
ficoms
js
roll
gs
cmp
cmpsl
aaa
push
das
xor
bound
pop
xor
xchg
sub
and
es
sbb
dec
and
inc
dec
jp
and
pop
xchg
jbe
sub
or
push
loop
mov
ret
loope
mov
in
data16
jg
imul
pop
cltd
cmpsl
cmpsl
lods
sbb
test
imul
cs
loop
mov
mov
xchg
mov
sub
arpl
pop
mov
xchg
mov
pop
jmp
xchg
les
sub
out
pop
adcb
dec
adc
lcall
fistps
popw
and
xor
int
xor
mov
sub
jp
add
nop
ljmp
sub
mov
add
mov
push
inc
push
and
out
pushf
add
ds
push
xchg
lahf
out
mov
xchg
mov
stos
test
mov
in
clc
rorb
jge
cmp
dec
ror
cmpsl
scas
xchg
frstor
cmpsb
pop
mov
mov
xchg
les
js
xorb
sub
sub
shrb
adc
jmp
mov
pop
popf
mov
mov
push
leave
imul
pop
xor
fcoms
pop
mov
pop
push
cmp
mov
or
call
jnp
sarb
adc
mov
stos
adc
mov
jl
imul
adc
mov
jbe
jae
mov
xlat
hlt
pop
push
aam
xor
test
int
mov
push
mov
mov
stos
scas
scas
xlat
jnp
adc
xchg
inc
popl
getsec
add
add
adc
in
sti
cwtl
ja
stos
xor
sub
outsl
addb
adc
xchg
fildl
jp
outsb
adc
adc
pop
mov
and
xor
xchg
fistpl
push
das
pop
scas
jno
push
mov
adc
sub
ret
leave
adc
jbe
leave
pusha
dec
f2xm1
and
inc
xor
pop
mov
jle
cmc
sbb
sti
dec
pop
int3
mov
and
lahf
cmpsl
movsl
push
xlat
push
push
add
mov
mov
xchg
cli
push
mov
clc
inc
and
bound
aaa
gs
pop
out
add
add
in
pop
andl
sti
out
push
mov
dec
pop
aad
lock
or
iret
push
popa
mov
ja
int
jle
push
xor
add
testl
adc
or
outsl
and
mov
jne
jmp
divb
test
push
fiadds
add
push
add
insl
xchg
cmp
xor
gs
loope
xchg
xor
dec
sarl
jg
mov
jb
loop
jne
jne
cmp
mov
stos
pop
push
lds
xlat
mov
mov
in
sbb
lods
cmp
mov
inc
sbb
ja
insl
mov
pop
or
es
incb
push
jg
out
lods
mov
add
shlb
or
sti
xchg
test
adc
das
dec
popl
push
jnp
adc
fucomip
push
testl
push
fsubl
xor
jnp
shl
in
lret
outsl
xchg
mov
jbe
ror
test
gs
mov
cmp
cmp
jno
push
clc
iret
iret
test
in
or
nop
sbb
adc
dec
cmp
sahf
inc
shll
or
fs
push
loop
push
fldt
addb
cmp
dec
sub
lret
push
xchg
push
cld
inc
mov
fdivp
pop
je
sub
jno
push
lock
jge
call
outsl
lods
fbld
flds
sub
pop
lock
lods
lcall
pop
test
push
jg
aaa
pushl
pop
push
pop
xchg
mov
clc
cmp
stc
pop
inc
lret
mov
movsb
push
jg
stc
in
addr16
xor
mov
aam
xor
adc
sti
lret
imul
scas
inc
sub
cmpsb
lahf
push
jb
mov
sub
mov
nop
xor
in
js
aas
movntq
add
mov
mov
xchg
mov
and
adc
sub
dec
cmc
sub
sub
and
mov
mov
add
sbb
imul
fnstcw
push
sub
or
inc
cmpsl
arpl
fcmove
loopne
sub
mov
dec
bound
out
movsl
fsub
xchg
xchg
pop
aam
popl
jae
jno
rcll
jo
in
or
jno
sub
sahf
mov
adc
push
jo
hlt
pop
int3
jl
mov
push
sub
paddw
xor
mov
imul
sub
mov
mov
or
cmp
or
arpl
sbb
jl
sbbb
sub
mov
sub
je
sarb
repnz
lret
cmc
in
xchg
test
mov
ja
out
js
jae
xchg
fwait
cs
mov
inc
inc
lods
outsb
test
cmp
mov
xor
ja
daa
daa
xor
xchg
test
push
dec
cli
popf
xor
inc
ret
add
and
js
sbbl
mov
mov
ja
pop
pop
mov
cmp
rorl
cli
xlat
dec
add
addb
rcrb
jns
aas
or
xor
cmp
cmovg
lahf
in
inc
or
bnd
bswap
scas
push
imul
add
hlt
and
pop
fisubs
push
mov
push
adc
ror
cli
mov
inc
pop
mov
pop
test
cmp
inc
int
push
cmp
lret
mov
gs
enter
mov
and
imul
xchg
mov
inc
dec
in
and
fwait
addr16
xchg
inc
pop
or
dec
mov
ret
loope
in
scas
imul
pop
cltd
out
sub
jmp
mulb
sarb
repz
testb
sub
jg
popf
mov
jmp
sub
adcl
bound
sub
and
mov
cmp
pop
push
xor
int3
inc
sbb
sub
icebp
movsl
sbb
in
in
and
add
fidivs
mov
jge
rcll
pop
xor
mov
xchg
jae
lret
in
cmpl
fstpt
add
out
push
xchg
addr16
mov
imul
adc
xchg
imul
xchg
arpl
loope
adc
jg
mov
sbb
jae
and
fsubrs
sub
cmp
in
push
push
xchg
pop
fs
out
push
shll
push
push
shlb
pop
imul
repz
stos
rep
mov
sub
test
lds
or
lds
add
lcall
insb
and
rclw
andl
fisubrl
movsl
adc
pushf
lahf
cmp
cmp
xlat
inc
packsswb
adc
fs
movsb
test
mov
nop
lret
mov
xchg
cwtl
push
mov
jb
add
push
mov
sahf
xor
inc
mov
jge
sysexit
xchg
repz
mov
mov
jns
mov
adc
fistpll
mov
mov
popf
les
fdivrl
cmp
xchg
into
lret
movsb
stc
sbb
inc
je
iret
in
xlat
mov
movsl
cmp
sub
lods
mov
stos
test
sgdtl
aam
jp
into
xchg
dec
cwtl
inc
inc
cmp
inc
mov
lahf
or
dec
subb
sub
push
mov
adc
jmp
ss
adc
mov
out
mov
sarb
cmp
xsha256
cmpsb
adc
loop
test
imul
int3
mov
xchg
pop
sub
lods
fisubs
add
xchg
sub
aam
aad
mov
jp
pushf
mov
jle
daa
or
in
mov
insb
or
and
mov
or
mov
in
dec
popf
dec
mov
popf
mov
sub
mov
push
in
cmp
mov
or
xchg
in
jge
push
mov
arpl
mov
dec
icebp
movsl
out
iret
sub
push
sbb
push
jo
loopne
cltd
sub
inc
lods
ret
mov
cli
out
cmp
les
add
sub
sahf
push
pslld
mov
les
jae
add
dec
aam
pop
cmp
leave
push
xchg
fstpt
fldcw
fbstp
pop
arpl
scas
jae
lret
data16
stc
mov
fsubs
sub
mov
fsubs
dec
pop
jnp
mov
enter
jp
sbb
movl
sbb
scas
mov
repnz
jp
inc
pop
xchg
and
rclb
mov
stos
in
push
in
in
repnz
int
xchg
les
cli
dec
lock
or
loop
sbb
hlt
and
sahf
cld
pop
imul
shrl
stc
popa
ret
or
xchg
or
jbe
pop
sbb
sub
jle
xchg
and
stc
movsl
pop
sahf
fwait
test
sbb
stos
mov
in
inc
adc
addl
jle
std
inc
pop
cmp
mov
inc
lcall
push
insl
push
pop
popa
test
clc
and
sub
or
out
inc
pop
gs
scas
fisttpl
mov
jge
out
sub
inc
faddl
mov
lods
mov
sahf
xchg
inc
jae
lret
lock
in
or
mov
insb
sbb
rorl
add
nop
pop
pop
and
sahf
stos
jno
xchg
aas
jns
xor
das
ds
cmpsl
jle
xchg
in
fisttps
add
stos
push
dec
adc
xchg
ret
les
data16
and
and
pusha
int
imul
fs
rcll
xchg
ret
loop
frstor
test
imul
cwtl
sbb
pop
add
in
hlt
sbb
iret
add
and
lret
mov
into
dec
sbb
mov
jge
mov
faddl
mov
adc
ss
inc
in
and
outsb
ret
test
das
fnstsw
es
cmc
xor
fwait
mov
fcomps
in
leave
ret
cmp
insb
lods
jmp
dec
mov
cmp
jo
lds
scas
movsl
xchg
divl
inc
sub
xor
das
andb
xchg
test
add
mov
mov
mov
push
push
ja
js
test
and
cli
push
adc
pop
out
lods
add
jns
dec
out
sbb
xlat
add
jb
cmp
cld
push
jo
lea
int3
pop
cmp
ja
lock
dec
pop
subl
es
lock
pop
jbe
inc
cld
rcl
cld
push
mov
movsb
sbb
mov
nop
loopne
cwtl
push
and
mov
sbb
dec
fmuls
jge
movsb
fcoml
adc
dec
dec
scas
roll
jl
sbbb
out
push
ficomps
enter
or
lahf
shl
and
cmp
iret
inc
jo
mov
mov
mov
dec
js
and
inc
mov
dec
jg
cmp
mov
or
jecxz
and
mov
pop
sbb
outsb
xchg
xor
sbb
popl
shll
and
nop
aam
stos
mov
sarl
ja
cmp
imul
sub
jecxz
insl
sub
fnstenv
lods
sub
jbe
push
aaa
fpatan
jne
lret
nop
xor
lcall
ficomps
xor
int
dec
mov
fisttps
fcomps
push
repnz
mov
nop
movsb
scas
aam
lcall
shlb
cmc
fistps
sbb
sbb
xchg
mov
mov
into
daa
mov
jnp
mov
lret
sbb
cmp
or
adc
cmpsb
push
push
cs
ss
push
js
xor
or
cmpb
adc
fcoms
add
xchg
jne
ss
fsincos
in
test
rolb
stos
and
xchg
mov
in
inc
lock
or
and
mov
insl
inc
cmp
sahf
cmp
cmp
lock
stos
std
sbb
mov
movsb
cmp
int3
lcall
gs
in
roll
xchg
or
cmpl
adc
or
xchg
div
pop
les
pop
int
jmp
dec
and
mov
pop
and
pop
stos
nop
scas
mov
cmp
scas
es
push
shl
xadd
aas
mov
nop
pop
and
xchg
adc
sbbb
test
arpl
jo
stc
sub
lea
inc
adc
xchg
stc
int3
push
mov
aad
mov
mov
dec
pop
mov
lcall
shrl
sbb
and
mov
xor
mov
adc
or
xchg
pop
sti
sbb
lcall
mov
pop
ljmp
add
cs
pop
dec
jp
xor
outsl
jae
dec
adc
mov
jmp
adc
and
mov
pop
pop
pop
adc
dec
dec
in
xlat
lods
pop
pop
mov
mov
sbb
lods
or
dec
or
mov
inc
mov
xchg
jg
pop
lods
cs
xor
pop
repz
jg
mov
mov
cmpsb
aam
xor
or
pusha
xor
test
popa
cld
ds
jecxz
xlat
scas
dec
inc
mov
sti
mov
add
arpl
test
push
mov
pop
xor
stc
mov
xlat
xchg
orl
push
xor
aam
daa
loop
aas
jbe
cmp
mov
pusha
or
data16
and
mov
mov
jo
hlt
mov
lret
mov
sti
and
dec
xchg
movq
pop
xchg
add
fs
pop
ja
test
jb
iret
cmpsb
pop
dec
cmpl
fsubp
xchg
push
insb
inc
scas
jno
pop
adc
outsb
push
leave
fstps
scas
cmp
jl
sahf
mov
and
loopne
aad
xor
push
pop
enter
cmp
cmc
or
ljmp
es
stc
gs
cmpsb
push
xchg
add
addr16
aas
push
xorb
cwtl
push
sub
outsb
ds
add
mov
push
xchg
fiaddl
lret
jecxz
leave
sbb
stos
jl
xchg
xlat
add
or
int
push
outsl
mov
stos
adc
cmpsl
fldcw
sbb
loopne
cmp
fiaddl
rep
fsubrs
cmc
adc
repz
enter
mov
cmp
loop
shlb
inc
mov
aam
push
xor
mov
call
jl
rorl
sub
inc
fs
mov
and
adc
mov
inc
mov
pusha
imul
ss
mov
lock
mov
cs
les
icebp
jecxz
add
test
sbb
into
push
shrb
cld
mov
ret
push
enter
sub
jae
aaa
push
push
insb
push
rcrb
push
mov
pop
insl
or
test
xor
outsb
mov
xor
sti
add
cmpsb
sti
jbe
pushf
jmp
and
test
push
ja
push
cmpl
add
mov
inc
rcl
xor
das
stos
jmp
aad
and
test
repz
inc
lahf
sbb
jge
mov
lds
aam
pop
gs
push
fidivs
fwait
cltd
mov
lea
xor
cs
xchg
jns
lcall
in
add
shlb
xchg
test
mov
enter
dec
xchg
shlb
std
adc
xchg
add
sub
push
aam
bound
popf
clc
in
xor
dec
stc
or
rcrb
and
sub
ficomps
mov
jns
ljmp
push
push
out
pop
lods
fcomip
mov
mov
popf
adc
pop
mov
sbb
sub
lcall
cmp
fildl
scas
add
out
pop
iret
roll
push
cwtl
std
xchg
int3
roll
mov
loope
jae
shrb
stos
fcoms
in
popf
mov
repz
mov
inc
fcompl
in
xchg
gs
outsb
jp
xor
adc
ja
jle
sub
mov
xlat
sbb
mov
lea
mov
shrb
inc
out
ss
lret
mov
imul
mov
rolb
repz
xlat
cmp
aaa
imul
mov
mov
mov
ja
pop
dec
iret
shl
lods
popa
fwait
out
jbe
repz
gs
dec
loopne
pop
cwtl
and
cli
ja
xor
xor
int3
rcll
xchg
aam
or
fstl
jbe
mov
es
push
das
dec
scas
pusha
in
adc
ja
pushf
mov
mov
in
dec
pop
sub
jge
cld
std
sbb
xchg
pop
das
xor
mov
enter
scas
mov
pop
or
sub
sub
sti
outsb
fwait
mov
adc
mov
mov
lea
jno
mov
pop
fldl
popa
shrl
push
sahf
les
gs
or
repz
dec
popf
add
lods
xchg
xchg
pushf
mov
repnz
js
xor
scas
movsb
pop
ret
sti
inc
cmp
jecxz
adc
ret
add
popa
mov
dec
gs
add
cmp
fistpl
pop
repnz
dec
mov
movsb
and
aam
mov
ljmp
hlt
int
mov
movsl
adc
mov
cmp
test
cld
imul
jno
jns
sbb
ds
and
push
pop
add
xchg
clc
inc
ljmp
xchg
pop
sahf
inc
adc
sbb
pcmpgtb
popa
lcall
xchg
enter
out
popf
add
popa
cmc
lds
leave
and
xchg
mov
es
adc
das
mov
adc
gs
std
mov
lea
sarl
rolb
and
daa
xor
daa
rcll
stos
lock
lret
cmpsl
lea
movsl
sub
jbe
push
add
cmpsl
ss
lahf
mov
inc
mov
dec
mov
in
push
mov
imul
shll
push
pop
ja
lods
adc
call
inc
mov
xor
push
ss
cmp
enter
add
pusha
jg
cli
sbb
enter
xchg
and
inc
aad
jecxz
clc
or
dec
lock
mov
js
push
inc
sub
call
lea
movsl
movsb
out
fiadds
pusha
sbb
les
icebp
mov
or
stc
dec
mov
xchg
mov
inc
insb
sbb
or
arpl
cli
adc
movsb
lock
mov
sbb
dec
int
mov
or
sub
mov
out
loop
outsb
in
pop
cmpsb
test
ljmp
dec
iret
mov
jns
xlat
subl
push
test
fs
enter
cmc
sbbb
mov
das
sub
out
into
divb
sbb
add
iret
sar
dec
mov
mov
subl
inc
fsubs
rcrb
iret
rolb
cmpsl
je
inc
cld
divl
aam
test
cwtl
popa
test
pop
dec
xor
push
ja
in
fsubr
and
fs
jb
test
sahf
mov
nop
pop
add
stc
in
inc
push
repz
js
mov
dec
jb
xchg
adcb
pop
out
test
addr16
scas
dec
dec
sub
mov
mov
addr16
out
push
out
int
push
push
aas
pop
xchg
mov
push
in
test
add
push
pop
or
imul
add
aam
ret
rolb
mov
cmp
adc
ret
test
mov
leave
or
or
cmpsl
sbb
mov
notb
mov
push
pop
stos
fstl
out
cmp
or
and
cmovno
cmc
xchg
js
jl
pop
gs
ds
inc
jbe
dec
sub
mov
aam
lcall
cmpsl
push
clc
xchg
sbb
repz
mov
mov
dec
cmp
mov
fnsave
mov
push
or
xor
or
xchg
in
out
sbb
pop
xchg
sahf
fs
enter
xor
jno
aas
movsl
out
fdivl
inc
xor
sub
mov
push
mov
jb
aaa
icebp
xchg
cmp
xor
push
cmp
jb
jne
ret
mov
add
xchg
ljmp
icebp
mov
mov
sub
out
inc
add
lahf
mov
mov
jne
add
xor
insl
dec
mov
xor
push
push
xchg
cs
dec
mov
sti
test
enter
loopne
pop
cs
shrl
jg
add
fs
and
sbb
clc
or
imul
pop
into
push
jg
test
icebp
arpl
mov
scas
iret
push
lods
loop
insl
popa
out
stos
dec
push
icebp
cmp
jg
shlb
es
imul
sub
push
lret
cs
repnz
scas
pop
stc
scas
inc
icebp
shrb
loop
dec
adc
push
jnp
int
sub
aam
lock
xor
std
cld
mov
out
mov
sub
imul
out
jae
cmp
sbb
or
loopne
arpl
inc
jnp
repnz
cmc
das
sub
sub
test
lret
pop
add
xor
daa
jno
dec
dec
sahf
dec
je
sarl
test
pop
imul
gs
mov
pop
imull
jle
jge
movsl
rolb
jno
lods
ja
or
mov
jmp
cld
sub
fcoms
or
pop
sub
dec
mov
es
mov
pop
je
jo
or
jne
lock
adc
or
sub
in
mov
inc
and
int3
mov
js
sbb
inc
iret
jb
movsl
jbe
push
aaa
sbb
pop
ljmp
hlt
and
int
jns
pop
les
xchg
add
pop
clc
popa
sbb
andb
sbb
mov
ja
jbe
imul
imul
sbb
mov
sub
push
jns
dec
arpl
push
shlb
xor
mov
scas
sub
test
shll
cmp
insl
cld
mov
mov
and
popf
jns
in
cwtl
xor
and
cmp
out
push
sbbb
lods
jne
or
int
adc
lods
out
cmpsb
cli
mov
jg
testl
rcll
push
inc
and
in
sub
push
stc
js
push
sbb
lret
mov
jb
int
xor
imul
dec
aad
stc
lcall
inc
dec
sbb
mov
pop
dec
mov
hlt
push
adc
mov
sbb
movb
mov
xor
loopne
test
das
dec
add
push
xchg
inc
adc
mov
int3
mov
jo
arpl
les
push
add
mov
test
std
adc
cmpsl
nop
test
imul
enter
and
fisttpl
dec
add
rcrb
popa
jnp
push
jo
fsubrl
xchg
mov
xchg
int
rorb
ds
in
mov
dec
pop
jae
out
xchg
add
mov
fcompl
inc
jo
lods
call
jnp
movb
mov
mov
and
or
lahf
jae
add
dec
mov
pop
mov
testb
out
dec
cs
mov
lea
dec
jbe
nop
nop
int3
stc
adc
cmp
mov
test
repnz
lds
xor
scas
in
jae
rcrb
dec
test
fistps
sub
jl
jg
mov
lret
add
loop
xchg
test
std
cld
cltd
frstor
cmc
mov
rcll
push
outsl
pop
cli
lds
dec
icebp
std
push
push
test
push
add
inc
int3
mov
fs
fdivl
push
test
adc
mov
adc
movsl
pusha
or
push
repnz
lds
leave
ljmp
mov
rolb
jmp
or
mov
pop
mov
xchg
adc
cmpsl
pop
push
xchg
or
movsl
cmpsb
xchg
into
dec
mov
xchg
leave
cmp
mov
add
aas
lret
rcll
jne
lods
add
xchg
mov
push
sub
xchg
inc
or
mov
pop
push
hlt
hlt
sbb
and
jle
out
sbb
jno
test
adc
sar
in
sub
test
xchg
mov
jmp
or
sub
mov
mov
cmpl
mov
sar
mov
lcall
jb
sub
andl
js
cmp
sbb
and
push
pop
adc
repnz
pop
movsl
push
pop
push
testl
frstor
aas
inc
rcrb
or
jbe
dec
addr16
adc
dec
pop
sbbl
call
inc
mov
mov
repnz
outsb
scas
fxch
or
ret
push
push
pop
xor
sbb
mov
xchg
shr
movsl
mov
xchg
lcall
in
dec
out
mov
scas
divb
mov
out
mov
cmp
fnstenv
mov
cmp
mov
and
mov
js
addl
pop
insb
subl
mov
add
and
incl
arpl
aaa
add
shll
add
xchg
bound
inc
ja
pop
add
pop
int
cli
and
adc
js
or
add
and
jmp
lock
inc
outsl
jecxz
out
aam
in
neg
inc
rorb
std
stos
fisubl
data16
mov
mov
jo
inc
adc
push
andl
and
sbb
or
and
testl
jle
jne
pop
fnstcw
xor
fdivrl
mov
jg
ljmp
outsl
int
and
mov
push
mov
or
mov
sub
out
fldl
mov
fpatan
nop
mov
jbe
inc
mov
imulb
mov
or
xchg
sub
and
mov
icebp
xchg
mov
or
hlt
rcll
cmpsl
inc
inc
ficompl
push
in
xor
pusha
shll
jbe
sbb
sbb
scas
das
or
rep
cmp
lahf
sub
or
mov
or
mov
jnp
cmp
dec
ret
adc
test
negl
push
sub
add
lock
dec
fidivrs
shll
inc
nop
mov
and
sahf
jns
jae
clc
popa
mov
mov
cmp
scas
in
movsb
bound
xchg
hlt
fisttps
stos
xchg
adc
scas
faddl
in
cld
mul
test
sub
jmp
fnstsw
mov
mov
imul
adc
jl
mov
movsb
repz
insb
ja
mov
je
ss
mov
inc
pop
ss
jmp
les
xchg
sub
or
pop
mov
xor
sub
loop
cmp
pop
xchg
inc
stos
shl
imul
jge
and
les
mov
fisubrs
popa
mov
out
out
mov
cmp
and
adc
dec
insl
jbe
and
testb
mov
mov
ficomps
popf
xchg
inc
mov
out
mov
xchg
repnz
out
rcr
aam
or
cld
lret
cmp
leave
mov
mov
addb
push
mov
out
inc
lods
pop
sti
popa
sbb
cmp
in
test
test
xchg
jne
orb
xlat
shl
in
inc
scas
in
mov
ret
lds
outsl
ret
jno
insb
popf
popf
pop
sub
jmp
xor
xchg
std
enter
lcall
jns
ss
ficoms
sub
mov
mov
and
and
mov
popf
cmp
aaa
popl
adc
and
cltd
repz
mov
xchg
lcall
lock
dec
cmp
push
jge
bound
aad
out
jge
push
ret
les
push
dec
mov
sbb
jecxz
push
xor
lea
lahf
out
pop
add
cli
subl
lahf
fistpll
popa
int
fcoml
aas
repz
cmp
xor
lea
pop
push
iret
cs
arpl
popa
sbb
or
movsl
decl
mov
icebp
xor
dec
pusha
es
int3
sti
push
add
mov
outsb
mov
scas
shlb
in
and
sub
in
jg
outsl
pushf
xlat
sbbl
push
iret
dec
xchg
out
mov
dec
int3
and
arpl
clc
sub
dec
roll
in
mov
jbe
iret
imul
xchg
loope
popa
test
cmpl
iret
data16
xor
jl
mov
mov
pop
out
or
enter
cmp
fstpl
lods
faddp
icebp
dec
add
out
and
in
cld
fmuls
adc
mov
pop
outsl
inc
pop
in
pop
in
call
dec
cmpsl
aam
sub
sub
jo
mov
out
mov
hlt
out
in
nop
je
xor
fidivl
paddusb
cmc
jecxz
out
and
adc
mov
shlb
ljmp
movsb
sbb
mov
rcrl
and
dec
dec
scas
mov
out
xchg
jnp
inc
sbb
test
lret
or
jge
sahf
out
cld
jb
ds
xor
jbe
add
dec
inc
cmp
jmp
lock
push
pop
test
pop
mov
xchg
and
adc
iret
ljmp
inc
in
rcl
cmp
push
fcmovu
rcl
fsubs
mov
push
mov
sahf
cltd
out
xchg
mov
mov
pushf
rorb
lds
clc
mov
cmp
fadds
popl
dec
loop
scas
sub
xlat
test
ficompl
mov
or
bound
je
add
pop
gs
and
and
in
addb
push
stc
cmc
ret
shlb
ret
stos
add
test
cmp
mov
mov
test
ss
mov
das
popa
add
bound
push
xchg
mov
cmpsb
dec
iret
leave
inc
cltd
jne
mov
cmp
lcall
push
stc
cmp
inc
pop
mov
adc
aam
enter
pop
movsb
and
sahf
scas
adc
sbb
lods
cmp
leave
roll
fidivs
pop
mov
sbb
imul
cmp
sbb
cli
les
cmovl
xchg
and
push
pusha
std
sub
dec
jle
aam
cs
lea
add
jmp
pop
dec
aam
add
sti
ljmp
imul
jmp
and
mov
jo
dec
mov
dec
popa
addl
loope
cmpb
inc
fyl2x
daa
lret
fcomi
cmp
push
jg
jecxz
push
push
inc
sub
stos
or
rolb
stos
je
ja
jp
push
mov
pop
hlt
push
fwait
shrl
sub
shlb
inc
push
es
faddl
pop
psrlw
mov
mov
mov
repz
outsl
scas
jno
push
lods
xor
push
push
xor
inc
fbld
loop
push
dec
testl
fdivrs
bound
testl
add
or
add
dec
jmp
emms
cmpsl
adc
aaa
adc
mov
or
sbb
das
lods
pop
xor
cmpsb
fdivrl
mov
pop
pop
cmpsl
xchg
and
cli
sahf
rcrb
add
and
xor
movlps
lods
fimull
imul
orb
dec
sub
jb
lret
pop
mov
call
fsubl
mov
call
test
sbb
jg
scas
jno
mov
ret
xchg
rorb
test
inc
shrl
scas
jo
pop
lods
pop
enter
sbb
or
dec
mov
push
cmc
cld
pop
ljmp
xor
repnz
aad
push
or
push
popf
mov
repnz
sub
in
or
fidivrl
fcoml
add
mov
jno
inc
xor
js
push
pop
bound
loopne
cli
leave
push
or
fisttpll
add
mov
xchg
xor
leave
adc
mov
dec
jns
jecxz
jg
rclb
jmp
adc
jb
or
rcrb
jge
cmp
xchg
push
push
pop
cld
inc
or
cmp
mov
stos
add
repz
repnz
inc
popa
in
repnz
out
inc
shr
mov
mov
leave
cmpsl
mov
mov
cmpsb
ficomps
in
or
xchg
and
mov
jo
sbb
and
lret
out
jecxz
ret
sub
nop
cld
shll
pop
add
dec
lock
ljmp
sub
cmp
and
arpl
xchg
and
mov
pop
jbe
adc
xchg
xchg
lods
jecxz
jge
push
lcall
and
jns
push
cltd
mov
movzbl
xlat
xchg
fnsave
xchg
iret
xchg
dec
or
cld
add
icebp
iret
jb
mov
in
mov
mov
inc
sarl
xlat
xchg
int3
enter
push
jb
dec
sub
and
jp
pusha
sub
lods
mov
lret
nop
xor
out
dec
in
mul
ffree
jno
xor
cmc
cmp
jmp
adc
mov
or
subl
mov
push
and
lock
insb
xchg
push
lods
push
cmp
popf
ja
add
jo
mov
ret
xchg
and
outsl
test
dec
je
ret
dec
sbb
dec
inc
std
inc
enter
test
adc
testb
dec
adc
lods
hlt
cmp
sbbb
lods
aaa
insb
and
xor
cld
das
addl
cmc
inc
cmovb
cmp
fidivl
sbb
int3
push
mov
mov
psraw
enter
xor
push
icebp
dec
dec
jmp
fwait
adc
cwtl
sahf
cltd
xor
aas
push
push
cmpb
sbb
or
push
jns
jmp
inc
push
loope
inc
test
sbb
and
movsb
addl
mov
ret
xlat
pop
mov
decl
push
sbb
stos
mov
rep
insb
int3
rcll
decl
int
mov
mov
mov
fidivrl
insl
and
cs
imul
cmp
int
sub
adc
jecxz
stc
das
loopne
pop
leave
out
mov
or
cmp
rclb
fbstp
gs
jno
mov
xchg
jae
lods
je
sbb
lcall
popa
stos
mov
push
cltd
rcrb
mov
pop
imul
fisubrl
stos
cmp
mov
pop
push
loop
gs
fdivrp
inc
adcl
addl
shl
pushl
aas
xlat
stos
out
test
pop
lds
shr
sub
ret
sub
xchg
jns
and
adc
mov
dec
addr16
lds
cld
jp
ror
cmp
mov
enter
decb
ja
out
cmpsb
aaa
and
xchg
xor
rcrb
dec
js
inc
xchg
repnz
aas
ljmp
xchg
mov
scas
jno
mov
fwait
jge
cltd
loop
adcl
out
aas
mov
pop
push
adc
popf
jb
jnp
mov
cmc
mov
into
xor
sbb
stos
cmp
scas
cmp
push
stos
mov
leave
leavew
inc
dec
cmp
jb
cltd
adc
dec
lock
cmpsb
adc
mov
cmpsl
adc
ss
or
pop
fildl
pop
add
movsb
aad
or
sbb
mov
cmpsl
fcmove
xor
pop
jmp
add
sahf
jmp
mov
movntq
sub
or
pop
aad
lcall
push
movsl
fcoms
int3
push
loopne
jne
jge
ret
ljmp
fnstsw
test
push
jno
dec
cs
mov
imul
mul
cld
inc
jno
enter
xlat
dec
sbb
movsb
testl
adcl
loop
and
mov
jbe
or
mov
pop
jmp
mov
aaa
xchg
call
sub
iret
jno
pop
push
fadds
mov
mov
int
repnz
les
and
mov
or
mov
or
push
adc
mov
movsl
xchg
aaa
xchg
mov
aad
add
or
ret
in
xchg
inc
hlt
sub
xchg
out
mov
scas
push
cmc
and
repnz
scas
adc
rorl
test
imul
ret
mov
in
adc
iret
in
add
ljmp
std
and
sub
adc
xor
ret
jle
in
les
rcrl
add
mov
mov
repnz
mov
push
pop
outsb
mov
fadds
ret
movsb
hlt
xlat
mov
sbb
push
gs
pop
pop
mov
in
push
and
loop
fwait
or
mov
shl
xor
mov
add
sbb
jno
xchg
dec
mov
pop
clc
jl
out
cmp
sbb
gs
fidivrl
xorl
std
mov
lahf
pop
push
mov
jg
adc
orl
inc
push
mov
cld
into
push
loopne
adc
dec
mov
scas
cmp
push
icebp
idivl
mov
inc
or
adc
es
dec
dec
std
outsb
or
loope
repz
es
push
pushf
push
pop
repz
sbb
adc
push
imulb
mov
mov
jae
sar
cmc
test
xor
xor
mov
insb
sub
or
sbb
mov
in
sbb
outsl
mov
push
cmp
push
gs
subl
jb
into
call
insb
shll
push
pop
shll
scas
sub
dec
push
in
leave
imul
bound
aam
cmp
hlt
imul
and
les
add
fimuls
mulb
xchg
inc
pop
in
push
jne
ja
mov
mov
xor
outsb
pop
pop
or
push
lods
int
push
mov
fsubs
ds
lods
and
insb
aaa
das
popf
push
dec
sub
sbb
push
add
int
jo
mov
insb
es
neg
sbb
aad
push
mov
sbb
call
test
scas
testl
rclb
mov
xchg
aad
sub
insl
addr16
sbb
lret
sti
xchg
aaa
lret
sti
cmp
into
jne
push
leave
mov
aas
jo
outsl
fadd
cmp
sbb
sbb
les
jo
call
in
loope
test
sub
add
fidivrs
mov
in
vpsllw
or
push
lcall
sub
sub
jmp
cmp
js
mov
sbb
in
add
jmp
push
out
add
add
push
jb
hlt
xor
into
push
pop
add
sbb
imul
pop
scas
shll
loopne
rcll
imul
mov
out
das
dec
pop
scas
jmp
lods
dec
stos
jle
les
jmp
ret
push
mov
push
outsb
lret
mov
test
add
push
in
shll
mov
adc
jns
jg
cmc
js
cmp
shlb
sbb
stos
ret
aaa
add
xchg
sbb
mull
movsl
dec
or
lds
sub
sbb
leave
adc
ja
push
arpl
xchg
cmp
cmpsb
and
and
cld
mov
stos
aad
push
lea
gs
cwtl
and
sub
cmp
pop
cmp
cwtl
push
stc
push
push
sbb
in
loop
mov
stos
popl
hlt
mov
add
push
pop
push
mov
xor
dec
pop
imul
mov
aad
shlb
bound
mov
pop
mov
push
test
jmp
fcompl
xchg
shr
shll
out
dec
mov
std
mov
scas
xchg
adc
mov
dec
ret
jecxz
fsubs
dec
popa
stc
xchg
and
push
jecxz
or
cltd
and
mov
adc
popf
repnz
adc
movsl
out
xchg
aad
stos
loope
out
data16
gs
pop
lods
pop
jecxz
nop
testl
xor
mov
clc
insl
mov
push
xchg
adc
jl
imul
arpl
orl
fcompl
ret
pop
enter
sub
hlt
icebp
jg
xchg
xchg
or
movsl
adc
movsl
loop
jae
pop
xor
test
call
cmp
lock
pop
jno
xor
sub
or
dec
dec
es
mov
dec
push
jbe
mov
pop
out
pushl
bound
mov
aad
icebp
sbb
cltd
sbb
and
push
mov
inc
jp
jl
mov
inc
mov
xchg
ficompl
xlat
jnp
xchg
fucomip
add
xchg
movsb
mov
insl
and
ljmp
roll
sti
fwait
sbb
rolb
xor
fdivp
es
or
mov
sub
out
sbb
sti
jp
in
pushf
lahf
sbb
jmp
dec
insb
add
mov
stos
mov
push
mov
mov
pop
jg
in
xor
or
and
mov
idivb
push
lahf
sub
xlat
into
es
mov
and
es
sbbb
mov
dec
and
inc
push
shrl
inc
sub
xchg
or
leave
pop
cmp
lods
mov
mov
fs
popa
xlat
pusha
test
sub
pop
jns
cmpsb
xor
fwait
inc
out
inc
sbb
mul
sbb
mov
jge
sub
dec
xchg
mov
add
iret
test
push
sub
lds
mov
cmp
lea
fcoms
in
and
mov
cmp
movsb
ret
lea
mov
adc
mov
mov
scas
mov
or
and
popa
xchg
in
pop
lret
mov
les
mov
cld
mov
out
arpl
push
adc
cmp
xchg
call
cli
xor
andb
int
cmpsl
loop
xchg
pop
adc
sub
clc
aam
jnp
or
cli
sub
pop
sbb
mov
xchg
cmc
sbb
pop
inc
and
inc
negl
mov
arpl
jae
in
pushf
xor
ret
cmpsl
lret
popf
jecxz
xor
xor
xlat
sub
outsl
insl
cli
pop
sub
mov
pop
fimull
gs
imul
dec
xor
pop
sbb
daa
fucom
pusha
and
inc
jg
xchg
rclb
out
cltd
sub
lret
adc
rorl
fisubl
jno
subb
mov
push
sub
jge
inc
aaa
add
pop
cmp
dec
es
xchg
sub
push
dec
pop
ja
mov
mov
in
fisubrl
sub
add
std
iret
mov
leave
mov
and
outsb
aam
mov
mov
mov
icebp
arpl
and
xchg
movsl
pop
or
and
xchg
sub
xchg
dec
pop
or
cli
mov
lret
cli
jnp
or
cli
sbb
mov
lret
and
hlt
inc
mov
inc
adc
dec
movsb
punpckhdq
movsl
cld
add
mov
je
out
ljmp
insl
into
mov
or
stos
andl
fmuls
iret
and
rorl
lret
cmp
in
pop
stos
fldt
lcall
or
mov
fwait
cmp
in
mov
and
sub
push
pop
mov
cmpsl
sbb
jb
repz
sbb
cwtl
cmpl
pop
mov
repnz
shll
out
fnstenv
jnp
into
jle
movl
jbe
push
shll
inc
sub
push
mov
sahf
mov
adc
movsb
xchg
enter
and
push
scas
ljmp
out
pslld
and
add
dec
adc
jns
and
inc
sub
in
mov
jp
imul
sbb
or
sbb
add
push
pop
pop
je
adc
iret
test
jo
and
in
daa
mov
cmp
shrl
incb
mov
sbb
pop
xor
in
xchg
hlt
pusha
cmpsb
sahf
xchg
je
inc
sub
scas
insb
sahf
pop
mov
pop
shufps
pop
dec
pop
scas
sahf
jge
std
dec
mov
aaa
lods
and
pop
push
jle
inc
xor
repnz
push
test
xchg
push
daa
pop
pop
jb
sbbb
ret
cltd
sbbl
shr
out
pusha
call
divl
push
sahf
inc
dec
pushf
dec
adc
inc
adc
xchg
xlat
lods
loop
enter
cs
hlt
shrl
jmp
mov
fisubrl
popa
fxch
push
push
mov
icebp
lods
mov
xchg
pop
sbb
adc
or
cmp
inc
fmulp
loop
adc
pop
lahf
icebp
leave
int
sbb
lahf
aad
mov
call
pop
mov
int3
sub
les
andb
cld
enter
dec
xchg
and
mov
clc
pushf
arpl
push
inc
test
dec
adc
pop
lcall
jne
sub
pop
cmp
aam
push
jmp
xchg
push
and
testb
pop
pop
jp
lret
mov
ret
and
xchg
hlt
push
lcall
jecxz
inc
mov
mov
pop
mov
lcall
movzbl
inc
mov
enter
and
aas
xlat
or
push
jle
icebp
scas
pop
aaa
cmp
mov
adc
mov
adc
sarl
mov
scas
cs
loop
or
testb
push
or
pop
jbe
cmpsb
mov
mov
test
push
cmp
or
sbbb
pop
sub
aaa
popa
test
int
outsb
je
adc
add
or
lret
mov
cmp
dec
popf
inc
mov
imul
inc
iret
add
cmp
pushf
push
sar
sti
and
test
fpatan
fistpl
fidivrs
mov
inc
lahf
xor
and
pop
mov
sub
stc
fs
movsb
mov
lcall
mov
scas
cmp
cs
mov
shr
adc
sbb
pop
push
cmp
jmp
test
imul
popa
jmp
mov
sti
movsb
mov
inc
push
xchg
scas
test
sbb
jmp
loopne
xor
arpl
pop
cmp
mov
xchg
add
cld
jnp
sbb
xchg
jl
shl
inc
jl
mov
daa
pop
cmpl
in
stc
jg
sub
das
adc
mov
in
out
push
adc
cs
es
dec
inc
in
lods
sub
fiadds
test
push
lock
lock
gs
or
add
inc
push
sbb
rcr
jb
aaa
sbb
sbb
mov
sti
xor
fwait
pop
mov
dec
cltd
cmp
jne
xchg
mov
adc
cmp
js
in
jp
push
and
cmp
repnz
mov
js
in
ds
pop
jnp
add
adcb
dec
iret
xor
cltd
repnz
es
xlat
das
rcrb
push
mov
hlt
cmp
pusha
aas
subl
cmp
out
dec
repnz
mov
adc
xchg
into
sarl
in
push
pop
mov
dec
xchg
mov
ss
and
out
pop
jae
leave
pop
sarb
stos
fwait
push
add
imul
pop
mov
jge
inc
repnz
cld
push
outsl
jmp
cmp
mov
das
arpl
mov
push
pushf
stos
adc
dec
dec
dec
push
mov
lock
xchg
jmp
cld
inc
lret
std
push
out
xchg
add
jle
mov
pop
and
mov
jae
mov
shrb
shl
repnz
lds
jecxz
jmp
and
dec
data16
cmpsl
mov
push
imul
int
ret
pop
xorl
sub
inc
inc
jb
mov
cmp
push
fld
dec
test
push
inc
ror
gs
jo
pop
ss
cmp
mov
lea
or
mov
in
push
ficompl
mov
fsubs
inc
clc
sbb
stc
jmp
jmp
call
leave
pop
into
add
leave
addb
int3
lds
sbb
scas
xor
push
pop
out
adcb
and
je
sub
jo
push
cmc
into
scas
clc
add
icebp
push
inc
in
hlt
sbb
idivb
icebp
mov
sbb
aad
xchg
out
gs
adc
adc
cmpb
lds
push
push
insb
and
mov
push
inc
xchg
bound
jmp
push
out
inc
xor
sub
fsubs
xchg
out
ja
roll
shrl
mov
sub
add
sbb
mov
pop
mov
xor
int3
cmp
or
cmp
adc
push
inc
repnz
mov
into
cmp
ret
push
xor
lods
adc
movsl
adc
pop
mov
lock
pop
lds
pushf
int
insl
adc
shrb
out
adc
rolb
mov
outsl
stc
imul
and
scas
cld
ret
push
rclb
adc
sub
and
lcall
push
ljmp
outsl
aas
mov
fimull
xlat
mov
mov
push
jg
aaa
add
pop
xor
pop
das
shlb
mov
push
sarl
inc
int
decb
sbb
ds
inc
xor
fildl
sub
jae
sbb
scas
pusha
in
fstl
sbb
sub
dec
mov
sti
jb
sub
xchg
and
fisttpll
mov
xchg
cmp
fsubrs
push
ljmp
ret
ljmp
leave
leave
fidivrs
dec
cmp
repz
cmp
push
xorb
mov
inc
ljmp
pop
gs
adc
fldenv
das
inc
icebp
jnp
dec
cmpsl
push
jmp
xchg
aas
jnp
push
push
loope
out
mov
and
shll
gs
and
mov
lock
and
dec
mov
pusha
iret
sbb
xlat
sar
outsl
in
stos
mov
or
lods
repz
icebp
xchg
ret
jbe
adc
jb
stos
mov
test
daa
gs
cltd
and
cwtl
or
and
imul
rorl
lahf
std
pop
mov
outsb
lret
pop
xor
pop
or
fdivp
idivb
pop
lret
out
push
push
jns
icebp
shlb
movsb
mov
ret
mov
sbb
add
and
pop
notl
dec
mov
loopne
std
sub
xchg
mov
leave
and
xchg
lahf
mov
cwtl
notb
aad
pop
test
stos
fcomp
adc
into
shl
outsl
mov
loope
inc
pop
sbb
pushf
mov
push
dec
push
fs
or
addl
aaa
mov
mov
pop
adc
bound
scas
adcb
ficoms
js
mov
ret
pop
lcall
mov
idiv
fwait
inc
dec
mov
jbe
or
aam
iret
adc
lahf
mov
adc
pop
xchg
jns
mov
pop
push
cld
xchg
adc
mov
sahf
movsl
lock
jmp
cmpsl
fisubl
inc
pop
in
jno
nop
mov
loopne
mov
movsb
or
sbb
inc
pop
push
inc
xchg
ljmp
filds
adc
and
push
fstpl
jnp
push
push
xor
idivl
mov
push
je
sbb
flds
arpl
mov
push
xor
std
mov
adc
inc
mov
and
xchg
int
push
or
push
je
loope
out
cli
js
sbb
daa
mov
mov
fwait
add
jne
add
fidivl
xor
fmull
mov
ljmp
call
xchg
or
movsl
fldl
push
fsubr
lods
pop
adc
cpuid
mov
test
mul
dec
les
xchg
inc
dec
stc
mov
fadd
mov
inc
mov
pop
dec
js
jnp
push
pop
lods
sahf
jnp
mov
fs
cmp
sub
push
add
hlt
movsb
adc
call
add
dec
jl
jecxz
jae
movsb
jmp
dec
sub
loope
pop
mov
sbb
pop
pop
cmpsb
pop
fwait
adc
fcompl
mov
mov
dec
enter
ds
arpl
mov
fucomi
mov
jne
cmpb
fdivl
push
adc
or
daa
lods
mov
dec
scas
mov
push
test
nop
push
xchg
bound
fnstenv
adc
pop
jns
movsb
mov
xchg
scas
jecxz
cltd
add
or
repz
in
into
push
scas
loopne
add
in
test
xor
xor
jbe
jns
sub
mov
push
mov
iret
in
sub
mov
stos
leave
or
rclb
pop
xorb
push
mul
pop
dec
cli
add
repnz
and
or
sbb
repz
clc
hlt
inc
mov
and
movsl
and
or
fisubl
xchg
and
or
inc
jno
mov
cs
push
xor
adc
shl
mov
xor
inc
sub
out
js
inc
xchg
pavgb
fstl
xchg
pop
in
mov
push
mov
fistps
push
ljmp
or
insl
add
mov
lcall
inc
mov
adc
push
int
pop
fisttps
fs
mov
xor
pop
aaa
lret
dec
loope
or
and
cmp
bound
sub
stos
or
mov
fwait
rcrb
inc
int
inc
mov
xor
mov
xchg
adc
fdivr
inc
orl
stos
daa
pop
neg
lahf
sub
mul
cli
ret
push
in
in
mov
push
addr16
cld
aas
insl
pop
jl
jmp
jge
add
fidivl
fisubrs
aam
or
int3
dec
cmp
loopne
arpl
addr16
pusha
loope
push
or
pop
push
aas
imul
jmp
popa
or
mov
jmp
sbb
xor
fcoml
dec
pop
inc
add
int3
loope
lcall
mov
test
pop
mov
or
dec
sti
dec
pop
in
rorl
subb
push
adc
cmc
pop
mov
clc
cli
sahf
aam
fwait
pop
loop
push
in
push
mov
sbb
push
das
or
fisttpl
cltd
mov
pushf
push
cmp
mov
dec
addl
call
inc
repnz
out
or
testl
mov
push
mov
int3
pop
popf
mov
daa
fsubl
frstor
jns
push
int
fs
and
pop
mov
jnp
inc
xchg
call
sbb
dec
lcall
jle
or
push
dec
test
and
je
call
push
sbbl
scas
xchg
pop
ret
test
addr16
loope
js
sbb
loopne
test
std
mov
scas
icebp
nop
push
mov
mov
dec
jne
sbb
mov
lcall
int3
loop
rclb
cmp
nop
xor
and
xchg
mov
loopne
movsb
addb
cmp
mov
mulb
outsb
rcr
push
or
loopne
adc
loopne
cs
pushf
pushf
sbb
je
jo
adc
adc
data16
sbb
push
pop
push
and
jb
jne
pushf
xchg
pop
sub
jo
push
popa
xor
pop
ds
or
xor
push
and
xlat
xchg
or
sub
pop
push
cmp
call
jo
insw
outsl
jb
jns
scas
cli
jnp
xor
scas
pop
mov
jb
lea
stos
nop
adc
mov
mov
push
decb
push
xchg
out
or
inc
mov
aam
in
idivb
popa
int3
iret
add
int3
stos
dec
iret
or
hlt
or
add
repz
jmp
inc
push
and
adc
push
popw
mov
or
ss
hlt
addr16
in
mov
loopne
fwait
lods
pushf
mov
xlat
pop
repz
pop
fcmove
decl
imul
pop
cwtl
enter
cmovb
fldt
dec
mov
icebp
mov
xchg
xlat
mov
sub
insb
loopne
xchg
imul
popf
and
lret
sbb
cli
mov
in
and
xor
mov
adc
pop
mov
nop
stc
call
jge
pop
call
insl
test
add
xchg
out
dec
inc
xchg
mov
ret
mov
jecxz
jl
test
and
xor
jge
fs
jns
dec
bound
xchg
xchg
adc
xor
add
xchg
int
dec
sub
add
fiadds
mov
jns
dec
insb
sub
loope
dec
push
dec
or
sub
cltd
pop
jecxz
stc
cmovo
dec
loope
pusha
mov
pop
jecxz
adc
or
pop
leave
addb
sbb
push
inc
inc
xor
lds
adc
lret
int
jge
in
pop
loop
arpl
sub
imull
fisttps
cs
in
sub
test
insl
adc
xchg
jns
cmp
pusha
push
jl
jb
imul
insl
call
adc
int3
dec
notrack
mov
push
xlat
adc
repz
mov
outsb
mov
dec
cmp
adc
mov
sbb
xor
mov
cmp
sub
out
xchg
dec
insb
scas
shlb
dec
fimull
test
mov
xchg
inc
jnp
test
sub
nop
adc
cmp
push
and
in
loop
popa
push
decl
mov
jno
pop
xor
aaa
pop
jl
push
scas
sub
sbb
imul
fwait
or
imul
lock
int3
lahf
dec
nop
or
and
repnz
dec
dec
imul
jbe
jg
aaa
pop
dec
stc
adc
or
lods
mov
fsubrl
aam
xchg
add
aam
xchg
mov
popa
push
mov
inc
xor
movsl
in
test
sahf
and
pushf
in
gs
out
test
movq
mov
daa
cmpsl
addr16
fadds
cltd
or
adc
cmp
out
insb
shlb
sbb
xchg
inc
xchg
jne
dec
sub
fcomps
xchg
out
cmp
pop
cmc
and
xchg
mov
ds
and
int3
lds
movsb
jae
inc
les
and
jae
jae
mov
cmp
repz
test
outsl
inc
out
dec
aam
stos
icebp
sbb
and
popf
inc
arpl
or
cwtl
xlat
mov
pop
enter
loop
sub
jmp
push
xchg
jp
inc
and
test
inc
icebp
sub
sbb
fstpl
push
loopne
fwait
dec
dec
mov
dec
shr
aad
jp
loopne
push
fistps
xlat
jbe
mov
out
sti
stos
mov
inc
lahf
mov
test
cwtl
bswap
in
cmpsl
stc
cmp
outsl
sbb
push
loopne
mov
pop
mov
iret
mov
sbb
cmp
or
cmc
fisubs
pop
cld
fsubr
test
test
push
cmp
mov
pop
push
sbb
cmc
xor
dec
movsb
add
or
adc
mov
sti
aaa
add
imul
and
sub
mov
add
sbb
push
scas
addl
push
inc
jns
pop
and
lea
lret
mov
mov
ret
lahf
fcmovb
shll
sub
idivb
and
sbb
cltd
inc
sub
rcrb
pop
push
sti
xor
in
ficoml
lds
cmpsb
mov
cmp
aaa
xchg
incl
xchg
add
enter
inc
xchg
push
push
mov
xor
mov
lahf
lock
nop
add
ljmp
loop
pop
jnp
mov
jp
aad
push
inc
lret
push
flds
fildll
test
dec
dec
mov
nop
into
int
scas
push
mov
adc
dec
ret
xorb
xlat
popa
xchg
inc
fisubl
jo
pop
add
and
insl
pop
adc
dec
and
dec
out
cmp
nop
mov
lret
xchg
cltd
pop
sar
xchg
cmp
popf
pop
xlat
shl
subb
jne
cmpl
cmp
fdivrl
sbb
scas
lret
adc
xor
sbbl
xchg
gs
mov
dec
mov
cli
and
or
add
out
add
sbb
addr16
mov
jmp
sbb
push
jb
and
pop
sbb
sub
inc
insb
fyl2xp1
out
jne
and
je
cltd
add
mov
mov
sub
jns
add
push
mov
or
jbe
lret
scas
imul
adc
iret
xor
mov
xchg
add
mov
jecxz
and
roll
inc
xchg
test
pop
mov
popf
call
fs
fisttps
andb
fstps
aam
cld
pop
fwait
adc
dec
push
data16
mov
mov
jns
ret
movsb
push
dec
in
sub
fiaddl
sbb
loope
xor
push
cmp
or
mov
aad
push
pusha
jb
push
mov
cmp
mov
cltd
popf
or
enter
enter
daa
add
ss
push
in
iret
pop
adc
cs
orb
sbb
pop
std
adc
ret
fdivrl
xor
enter
lret
mov
pop
sub
mov
repz
rol
xorb
cmp
call
pop
fldt
lods
add
lahf
inc
scas
push
xchg
mov
ja
push
pop
inc
sbb
mov
sub
mov
sbb
pop
popf
add
inc
sbb
mov
es
mull
mov
sbb
std
jmp
ds
push
push
nop
stos
push
nop
fidivs
test
jl
sti
sub
xchg
jno
jl
ret
into
push
fwait
xchg
mov
cmc
rep
pop
lret
sahf
aam
jl
testl
mov
mov
jg
stc
gs
jge
int3
call
arpl
cld
icebp
aam
in
pop
xor
sbb
scas
idiv
or
das
inc
ljmp
push
mov
pop
es
fbld
clc
mov
jle
mov
sbb
lods
add
pushf
cmp
sbb
cmp
and
xor
shlb
aaa
pop
xor
cltd
lods
ds
cmpsl
cmp
out
push
pop
inc
sahf
inc
movsl
add
movsb
cmpsl
in
xorl
daa
in
movsl
jge
ljmp
pop
enter
push
loop
mov
dec
shrl
pop
dec
pop
shll
lret
pop
mov
les
mov
int3
fldenv
jp
jle
sbb
mov
jmp
std
fsubrl
sbb
test
jbe
aas
lods
dec
pop
push
sbb
sahf
leave
add
lds
push
test
mov
movsl
xchg
and
jmp
cmpl
jmp
mov
stos
aad
fucom
mov
xchg
stos
pop
ss
nop
add
cwtl
ljmp
mov
out
popa
mov
es
jnp
repnz
add
add
sti
addr16
lds
daa
loopne
xchg
aas
push
and
pop
adcl
stos
stc
imul
out
inc
aas
arpl
sub
lock
rcl
decl
inc
bound
pop
adc
inc
push
mov
in
mov
mov
repnz
jno
mov
jns
in
add
and
pusha
pop
adc
ret
je
scas
icebp
and
sahf
cmpsb
add
dec
xchg
ds
xor
add
pop
mov
call
and
mov
fwait
bound
js
adc
mov
push
gs
imulb
mov
xor
add
adc
mov
mov
adc
xchg
inc
nop
xor
sbb
jl
cmp
jae
aad
ret
jnp
xor
nop
pop
xorl
xchg
lea
xor
mov
pop
add
les
fs
std
push
pop
fisubs
idivl
aas
mov
je
out
jmp
mov
inc
inc
pop
nop
push
jmp
push
or
fimull
insl
jmp
sub
imul
movsb
sbb
cltd
mov
xchg
shrb
dec
xchg
mov
sub
jmp
test
sbb
push
popf
push
adc
sbb
inc
mov
sbb
enter
iret
xchg
push
cs
in
clc
shrb
mov
mov
adc
lock
out
xchg
adcb
and
lds
mov
daa
testb
push
and
or
and
insb
push
andl
jno
mov
in
in
in
hlt
sub
fcompl
cmpsl
and
lds
mov
cmp
stc
outsb
popf
clc
aam
inc
mov
ljmp
adc
fldt
call
mov
test
sbb
inc
inc
inc
adc
xchg
pop
imul
mov
repnz
pusha
dec
add
fwait
add
sub
jle
lods
arpl
add
popa
mov
outsl
fs
xor
hlt
popl
and
inc
cmp
dec
and
cmc
sti
ljmp
subb
decl
lds
ret
xchg
pop
ds
jno
loope
fcomps
mov
sub
movsl
push
xor
rolb
add
or
mov
inc
cmpsl
push
adcb
pop
imul
int3
scas
fcoms
inc
push
fisubs
pushf
in
lods
fldenv
scas
push
sbb
push
cmp
adcb
xor
lahf
adc
in
lret
sbbb
call
ds
aad
ljmp
into
jge
movsl
mov
adc
out
stos
push
mov
scas
insl
std
movsb
sbb
or
adc
shll
mov
dec
mov
mov
icebp
cmp
mov
inc
and
xor
stc
adc
aam
repz
cmp
repz
mov
arpl
ljmp
ds
dec
mov
pshufw
adc
insl
xchg
jne
push
addr16
mov
xchg
sbb
mov
xlat
nop
xor
add
jg
sub
or
sbb
mov
fs
movsl
movsl
dec
repnz
out
dec
icebp
pop
push
lock
cmp
jne
arpl
cmp
pop
test
inc
pop
xchg
stos
gs
aam
inc
enter
inc
mov
imul
das
xchg
fldenv
inc
xchg
mov
inc
inc
push
cmp
add
mov
inc
outsl
rclb
inc
scas
jno
fistps
ss
jne
rclb
movsb
add
sub
xor
xor
mov
arpl
lahf
mov
push
jns
or
pop
mov
fadds
adc
add
fisubs
out
pusha
xchg
fs
jns
test
enter
testl
imul
mov
or
jne
repnz
orb
in
pop
jle
add
inc
xchg
xchg
mov
add
add
sub
in
adc
aad
call
jmp
inc
out
mov
stos
lock
cmc
mov
or
enter
mov
imulb
out
add
inc
pop
xchg
adc
or
in
fists
mov
push
inc
or
jns
movsl
mov
mov
dec
out
or
push
push
pop
test
push
jno
enter
cwtl
push
out
or
int
lods
xlat
addr16
push
mov
add
mov
icebp
jmp
test
ja
pop
add
lret
pusha
lods
xchg
ja
shlb
imul
movzbl
scas
inc
jge
cmpsl
jae
xchg
out
sub
dec
sub
scas
sub
jmp
cmp
adc
les
daa
mov
and
imul
dec
mov
outsl
jno
fnstsw
ljmp
je
fisttpll
xchg
or
rcl
stos
lcall
adc
out
jbe
inc
cwtl
sbb
push
aas
push
sbb
loop
leave
push
stc
push
mov
pop
lcall
test
rcrb
std
fmul
xchg
and
fs
xcrypt-ctr
cmpsl
sbb
inc
mov
or
mov
sub
pop
fstpl
push
xor
xchg
stc
repnz
push
repnz
das
mov
adc
mov
in
daa
ljmp
dec
mov
add
inc
dec
pusha
mov
inc
mov
pop
dec
inc
adc
mov
subl
ret
popf
insb
add
jl
push
xor
sbbb
mov
cmp
sbb
fsubl
adc
xorl
mov
mov
push
mov
cmp
rcrb
cmp
lods
notl
out
cpuid
xchg
test
stc
push
mov
in
enter
pop
fs
iret
sub
xchg
xor
inc
push
lods
xchg
scas
jg
push
inc
and
jg
sub
fistps
in
fnstcw
fstl
xchg
icebp
xchg
push
cld
xor
lea
movsl
push
push
lods
jno
popa
arpl
fwait
movsl
dec
fistl
mov
inc
xchg
adcl
add
ret
xor
je
rorl
sbb
decb
stos
push
jo
cltd
fldt
pop
pop
stc
and
sub
shll
add
xchg
push
mov
in
pop
sub
lret
jno
movsl
inc
enter
aas
inc
ss
inc
pop
mov
pushf
lea
xchg
mov
pop
decl
dec
lods
or
lods
ret
ret
movsl
fidivrl
jmp
dec
xor
jo
aaa
inc
cmp
mov
mov
cmp
inc
pop
xor
es
addr16
mov
rcl
adc
jb
cmpsl
xchg
jge
mov
push
add
mov
and
mov
lods
leave
jecxz
mov
push
cltd
jns
pop
cmp
es
dec
fwait
imul
mov
scas
mov
lret
mov
insb
jl
movsl
in
xor
push
cmpsb
push
imul
cld
outsl
inc
xchg
ljmp
push
hlt
movsb
out
pop
lahf
dec
negb
insl
jns
jmp
sti
mov
sbbl
in
daa
mov
push
mov
or
js
pusha
lcall
sbb
je
jmp
mov
xor
subb
cmp
push
xchg
insb
jne
dec
inc
sub
in
loopne
xchg
jmp
inc
cltd
pop
mov
lea
xor
adc
and
xlat
adc
and
and
movb
in
test
lcall
int3
ss
and
xor
mov
xchg
int
mov
sub
clc
cmp
push
repnz
add
addb
mov
dec
std
xor
pop
stos
mov
cmp
sbb
mulb
or
mov
loope
aam
mov
popa
mov
jmp
sub
jmp
xor
sbb
js
xor
hlt
sbb
fistps
fidivrl
subb
test
add
pop
andl
mov
int3
fiaddl
dec
popa
jns
daa
and
nop
loope
pop
mov
out
push
pushf
jge
data16
cs
lret
xchg
jl
xchg
cmp
loopne
fstl
nop
cld
cmc
lods
shlb
inc
mov
or
out
insb
or
dec
and
aas
repnz
jb
sub
or
pop
fisttpl
xchg
pop
scas
int
xor
push
push
addl
jmp
cmp
jno
sti
imul
stos
adc
sub
mov
inc
pop
sub
or
lret
push
sub
ret
pop
mov
mov
sub
cltd
adc
or
mov
xor
and
fidivl
js
inc
mov
shrb
outsl
mov
mov
push
pop
lds
jo
xchg
jp
in
scas
enter
lret
lahf
fs
lea
pop
or
mov
int3
pop
xchg
or
xchg
cmpl
inc
nop
pop
adc
dec
out
insl
ss
cmc
clc
adc
rorl
push
push
and
xor
lock
pop
sub
mov
insl
cmpsb
cwtl
in
inc
xchg
jecxz
push
mov
loopne
push
cmp
or
icebp
sbb
adc
nop
loopne
mov
dec
jae
andb
mov
add
mov
int3
test
dec
enter
or
lods
ja
fistps
call
jl
inc
xchg
mov
jp
insl
aas
test
and
out
aaa
mov
pop
pop
scas
pop
mov
stos
jg
shll
inc
jno
pop
sbb
cmpsl
stos
mov
lods
test
mov
add
and
push
and
shlb
cmp
jmp
dec
mov
or
lret
adc
sub
aad
pop
pushf
test
dec
and
imul
pop
xchg
jnp
test
sbb
mov
vmaxsd
mov
inc
xchg
jns
mov
pop
add
push
cmp
xor
addr16
or
pop
xlat
dec
sub
cmp
sbb
shll
popf
mov
xor
testb
into
ja
push
stos
adc
push
lea
mov
mulb
mov
arpl
lods
pop
jecxz
push
andl
pop
ret
cmpsl
pop
cmp
adc
in
xchg
cld
mov
push
or
pop
xchg
cmp
xchg
push
iret
sub
cmp
dec
pop
mov
mov
mov
sbb
imul
inc
bound
lret
jo
jle
pop
fdiv
imulb
imulb
out
pushf
xchg
dec
mov
ja
adc
lret
bound
lret
cmp
xchg
enter
xor
mov
and
and
pop
and
sub
jmp
adc
lods
xor
outsl
in
hlt
cli
jae
dec
enter
aaa
in
leave
xor
test
sub
inc
push
xor
in
push
test
sub
or
cmp
test
mov
cmc
mov
jg
jns
jp
outsl
xor
loope
popf
into
outsl
xor
mov
pusha
jp,pn
sub
imul
hlt
ret
mov
cmp
sbb
test
and
push
push
les
outsb
icebp
jle
je
inc
in
scas
imul
jae
jnp
cmp
or
arpl
adc
in
cmp
mov
or
gs
inc
scas
mov
sub
popf
mov
test
xor
shrl
xor
push
pop
add
push
mov
shll
fstl
push
jno
push
push
push
adc
test
sbb
in
and
jo
jae
sbb
cmpsb
cmp
cmp
mov
or
jbe
pop
mov
xchg
stc
ss
add
mov
daa
fldl
sahf
aas
jle
stc
ret
popf
dec
sub
in
jno
das
rcl
xchg
jmp
iret
sar
jno
xor
push
cld
test
leave
ficomps
mov
mull
shl
movsl
int3
jb
test
dec
inc
xchg
or
les
mov
and
iret
int3
push
dec
xorb
ljmp
mov
ss
jg
inc
cli
cltd
or
xchg
and
sbbb
cld
adc
add
push
inc
xchg
adc
mov
inc
mov
sahf
sub
pop
imul
ficomps
pushf
add
add
les
xor
pushf
and
sbb
lahf
pop
add
in
mov
pop
sub
or
popa
lcall
dec
ljmp
movsb
movsl
jns
xor
nop
mov
mov
dec
out
mov
pop
gs
and
xchg
mov
pop
fdiv
gs
cwtl
adc
scas
jecxz
cmp
sbb
std
stc
shrb
add
lret
xor
sub
pop
jle
enter
js
popa
movsb
pop
xchg
mov
mov
cmp
xlat
dec
enter
int3
and
lods
insl
mov
bound
pop
jnp
jno
aam
mov
pop
pop
ss
filds
or
fldt
adc
fisttpl
pushf
cs
jo
dec
mov
push
jg
xor
sub
ret
je
push
mov
cmpsb
div
mov
js
mov
pop
xchg
mov
and
cmpsb
lahf
lret
dec
mov
jle
dec
push
aam
inc
and
adcb
jns
pop
xchg
test
adc
adc
sbb
add
popa
pop
xchg
jbe
fld
loope
jge
cltd
test
dec
fcomi
inc
bnd
pop
in
sti
hlt
xchg
push
movsl
gs
pop
fidivrs
pop
jnp
and
fisubrl
jbe
imul
stc
pop
sub
rcll
jp
mov
imulb
xor
cmp
xor
mov
outsl
jmp
adc
jge
mov
ljmp
sub
and
gs
subb
hlt
mov
into
lahf
test
push
pop
lea
nop
push
in
pushf
sbb
push
dec
pop
push
mov
dec
or
xchg
leave
ja
or
cmpsb
pop
lret
xchg
xchg
and
xchg
xor
into
scas
test
lret
das
jle
adc
shl
out
mov
jge
push
push
jno
sti
loope
shlb
inc
nop
pop
add
inc
or
iret
add
mov
out
nop
loopne
aad
les
sub
sbb
mov
sahf
fldcw
mov
mov
out
filds
lret
loopne
fdivrl
cmp
pop
push
sbb
movb
push
push
fs
jno
lods
inc
lock
rolb
sbb
push
mov
and
mov
xchg
xchg
sub
ljmp
mov
inc
mov
push
xorl
push
cmp
cmpsb
int
push
sub
xor
xor
mov
mov
enter
xor
cmpsl
adc
sbb
dec
xchg
xor
mov
sti
aad
cmp
dec
adc
push
js
nop
loope
and
cli
into
and
imul
out
fcoms
in
jmp
push
ljmp
stc
test
cmc
test
in
mov
mov
pop
xchg
scas
jg
imul
cld
xor
mov
mov
hlt
ret
out
pop
scas
mov
daa
enter
jge
cmpl
in
arpl
stos
xor
nop
mov
push
jecxz
in
push
int3
jmp
xlat
aad
inc
inc
xor
jo
std
xor
jmp
cltd
or
mov
lea
int
dec
push
movsl
enter
jge
mov
mov
lahf
pop
pop
testb
cmp
out
repnz
push
out
push
es
push
add
clc
fldl
daa
xchg
push
mov
fdivp
mov
pop
aaa
into
pop
xchg
push
fimuls
mov
jae
cmp
mov
add
push
outsl
jecxz
cli
out
rorl
imul
xlat
aad
int
scas
aam
adc
add
adc
push
sub
popa
add
or
xor
mov
insl
pushf
jl
into
testl
xlat
aam
and
mov
repz
or
jmp
push
lods
int
fidivl
push
add
aam
les
repnz
adc
ljmp
test
and
inc
adcb
cmp
lock
lods
and
push
enter
and
adc
mov
sti
sbbb
sti
push
push
orl
xor
fldl
push
out
cmp
outsb
scas
std
xchg
jl
mov
xor
inc
int3
and
cmp
cmc
xchg
push
fistps
cmp
sti
std
jmp
xlat
aas
and
daa
or
hlt
or
mov
mov
int3
repz
dec
push
push
repnz
pusha
add
push
insl
mov
xlat
dec
or
cs
push
aam
lds
nop
fpatan
lcall
jne
cmpsl
mov
lds
cli
xor
scas
cmp
jecxz
xor
scas
loop
lcall
pop
movsb
mov
sub
xchg
je
shll
pop
xor
pop
inc
xchg
cmc
xorb
cld
or
shlb
push
shlb
sub
sti
and
and
pop
mov
jmp
es
pop
xchg
addr16
mov
xor
ljmp
pop
rcrb
xchg
xor
sub
pop
ficomps
jecxz
inc
adc
daa
mov
jmp
jge
sbb
outsl
iret
pop
je
aas
out
mov
je
movsl
mulb
add
into
xchg
jns
jnp
adc
call
repz
adc
jne
add
ds
lret
aam
and
adc
gs
jne
jmp
fistl
xchg
adc
inc
pushf
mov
jle
pop
and
fcoms
mov
aaa
push
dec
mov
insb
pop
inc
shl
pop
mov
fwait
das
addr16
int
cmp
sbb
dec
out
cmpsl
sahf
lods
or
mov
cmpsl
dec
xor
mov
fcmovne
and
fcomps
cvtps2pi
or
repz
shlb
repnz
and
cmpsb
xor
rorb
outsb
cmp
lahf
aam
mov
or
sbb
aas
imul
sub
adc
lock
mov
dec
in
jae
and
out
adc
jnp
mov
inc
adc
mov
arpl
pop
loopne
adcb
sub
rorb
pusha
dec
lret
mov
cmovge
dec
ds
and
inc
or
cmp
pop
fadd
pop
scas
das
stc
loop
cltd
xlat
mov
mov
and
pop
stos
subb
xchg
push
mov
xchg
mov
stos
sbb
and
xchg
test
dec
xchg
pop
sbb
inc
jle
in
out
adc
push
or
push
gs
ficoml
xor
push
and
mov
xlat
lcall
sti
xor
test
cmp
call
xor
add
lods
sbb
loopne
mov
jl
out
mov
pop
sbb
sub
push
adc
mov
sub
shll
loope
inc
xchg
inc
mov
jo
in
add
mov
xchg
mov
inc
xchg
sub
outsl
insb
dec
pop
ficompl
add
shr
and
test
pop
insb
pop
mov
fwait
popa
outsb
dec
jns
or
pushf
ljmp
or
and
xor
mov
fs
xor
pop
sbb
mov
cmp
sub
xchg
repnz
push
xor
cld
in
insb
mov
sub
iret
push
mov
push
fsubr
adc
test
scas
aam
test
push
ret
dec
outsl
mov
dec
sahf
mov
push
out
sbb
mov
imul
or
dec
es
and
ret
inc
and
inc
popa
out
inc
test
jns
xor
std
dec
lret
fwait
daa
lahf
popa
xchg
sub
inc
mov
icebp
and
test
or
roll
test
in
jecxz
adc
and
inc
bnd
mov
push
hlt
in
cltd
adc
xor
adc
add
and
lret
cltd
sbb
adc
inc
pop
pop
mov
inc
addr16
mov
and
mov
ja
jp
data16
aas
aad
and
call
jno
dec
jns
nop
in
ret
stos
ss
push
into
dec
push
sbb
adc
jno
rolb
pop
adc
out
xor
in
sarl
push
adc
stc
mov
push
stos
mov
sahf
inc
cmpsb
and
mov
popa
out
jbe
mov
pusha
jg
jl
movl
adc
fnstsw
mov
jne
mov
push
add
push
hlt
push
adc
mov
rolb
in
add
push
imul
mov
aam
or
cmp
lahf
push
ljmp
inc
mov
mov
aad
sbb
fstpt
sub
es
mov
test
mov
add
lcall
loope
sub
xchg
pushf
push
jbe
scas
push
lods
ret
inc
push
bound
pop
lea
cmp
divb
iret
xchg
adc
aad
cmp
int
dec
js
dec
sbb
fdivrl
and
cmpl
mov
hlt
cli
aad
push
in
push
jmp
insl
addr16
xchg
push
ffree
mov
mov
decb
rcll
aas
inc
mov
cmp
testl
pop
dec
xor
pop
cld
cmp
lea
mov
cmp
ds
xlat
aaa
inc
inc
adc
inc
sbb
movsb
in
imul
mov
iret
or
in
push
xchg
andb
xlat
cmpsl
cli
fldl
test
pushf
repnz
sti
lret
mov
inc
jg
dec
jmp
imul
call
mov
pop
push
stos
add
pop
lret
repnz
or
push
shl
pop
mov
stos
cmp
xchg
lock
xor
int
push
sbb
shr
add
xor
cmp
pushf
xchg
push
mov
pop
fldenv
ljmp
push
sub
or
push
mov
imul
mov
mov
cmp
inc
pusha
push
movsb
jnp
test
sbb
cli
aad
cli
pop
es
ficoml
push
cltd
js
insb
stos
fiadds
xor
rorl
and
push
jne
je
scas
mov
jmp
push
inc
sub
data16
outsl
insl
adc
cs
iret
out
mov
daa
sbb
addr16
push
ret
sbb
lret
mov
sti
or
and
sbb
dec
testb
sub
add
xor
mov
loopne
leave
push
jecxz
lods
fs
push
gs
daa
adc
test
mov
jnp
xor
cmpsl
push
mov
pop
int
movsb
repnz
insb
mov
and
mov
xlat
xlat
or
rcll
shll
mull
hlt
lcall
aad
xor
aas
sbb
dec
pop
std
mov
addr16
shll
xorb
or
popf
inc
dec
jmp
pop
jmp
js
fcmovu
cmp
in
xor
mov
lcall
in
cltd
inc
pop
and
shl
pusha
sbb
ret
or
hlt
mov
or
dec
adc
lret
xchg
in
jg
das
mov
push
jns
aas
pop
sar
fwait
data16
cmpl
shlb
jb
push
push
icebp
leave
scas
fs
insb
dec
popa
ja
iret
xchg
sbb
pop
loopne
stc
ror
adcb
bound
pop
mov
or
push
ljmp
call
cs
adc
shll
lret
cmp
addr16
cmpsl
or
xchg
or
xchg
sbb
aas
ljmp
jmp
mov
add
jmp
push
leave
mov
mov
jbe
stos
xchg
push
xlat
pop
pop
xor
filds
fimuls
pushw
fnstsw
adc
push
xchg
inc
sarl
or
jge
add
rorl
stos
mov
jp
fcmovnu
aad
cltd
aaa
cmpsb
sbb
mov
loop
loope
mov
xor
mov
stc
out
mov
push
lret
adc
mov
add
pop
mov
mov
dec
push
sub
lds
jmp
dec
test
cmp
es
test
inc
sahf
bound
inc
in
or
aad
test
stos
cmpl
push
push
xchg
rcrb
out
sub
into
push
or
les
lods
add
mov
sti
test
pop
pop
icebp
push
insl
push
dec
mov
mov
aaa
fdivrs
inc
aad
loope
jns
push
jmp
push
mov
push
mov
arpl
sbb
jmp
push
add
and
mov
push
and
test
repz
and
cmp
or
cmp
clc
xlat
stc
cmp
mov
jp
xchg
sbb
std
xchg
cmp
sti
sub
push
cltd
mov
ljmp
add
fdivrl
mov
es
mov
rolb
push
outsb
push
mov
mov
xor
outsb
adc
sub
jnp
fsubl
imul
add
push
cltd
push
sbbl
sbb
cmc
daa
push
mov
jecxz
jo
inc
cli
call
xor
pop
sti
and
pop
and
leave
outsb
ja
iret
cltd
inc
in
lods
pushf
stos
inc
lea
in
sti
inc
push
aaa
adc
pop
outsl
dec
in
popa
dec
add
inc
ret
shlb
xchg
pushf
xchg
jle
enter
inc
sbb
push
outsl
mov
inc
into
les
cmp
dec
jne
stos
push
pop
ds
and
mov
xchg
xchg
sbb
lcall
bound
add
adc
fwait
pop
add
fidivrl
cmc
imul
pop
orl
cmpsl
imul
popa
rorb
adc
das
out
lea
adc
mov
das
bound
fwait
xchg
out
mov
pop
add
andb
sub
xchg
mov
pushf
lods
lock
push
js
pop
gs
sub
xchg
lret
in
jl
mov
out
arpl
or
mov
cmpsb
pop
push
lret
adc
jae
pop
test
and
je
bound
ja,pn
cmpsb
xchg
xor
in
inc
add
rolb
adc
add
inc
cmp
call
arpl
cmp
mull
cs
mov
push
mov
mov
sub
cmp
sahf
dec
adc
inc
jmp
pop
aam
lods
and
data16
in
jecxz
xchg
xchg
ds
mov
sbb
dec
xlat
sub
fisubs
push
push
sbb
fcomi
lock
subb
mov
pushf
loop
jns
dec
pop
lods
repnz
jb
repnz
popa
je
or
in
add
lods
imul
adc
movsb
fcoms
sti
les
push
sbb
pop
lea
repz
fisubl
mov
testl
and
out
mov
ds
push
jl
xor
pop
insl
mov
cmp
or
sub
fs
sub
jne
mov
cmp
imul
jnp
pop
sbb
xorl
sahf
pop
or
loop
inc
xchg
cmp
lods
outsl
inc
mov
inc
add
xchg
lret
enter
pop
icebp
pop
add
push
scas
mov
fs
and
andb
cli
xchg
outsl
inc
iret
cs
mov
cmp
xlat
or
jnp
inc
mov
cs
and
ljmp
and
push
arpl
dec
xchg
rorb
fs
mov
loope
in
inc
fildll
adc
pusha
jnp
sbb
jge
add
mov
rcrb
int3
push
or
cld
sub
inc
int3
add
pop
lahf
lcall
adc
inc
push
in
loop
cmpsb
and
mov
out
out
stc
mov
in
sbb
sti
repz
mov
repnz
daa
sbb
xorb
outsl
imul
add
mov
pop
sub
add
nop
push
cmp
xchg
lret
mov
pop
das
test
shll
fistpll
cwtl
jb
rcrb
aad
and
mov
lods
or
in
pusha
and
or
lods
mov
or
dec
lds
and
xor
push
cmp
cmp
push
pushf
pop
into
fstps
rcrb
int3
sub
push
stos
xchg
lea
insb
push
loopne
and
repz
or
xchg
and
xchg
fs
shrb
rclb
sbb
repnz
cmp
add
adc
inc
cmp
das
fwait
pop
js
cmc
add
push
dec
adc
cmpsl
cwtl
ret
mov
inc
sub
push
inc
sahf
jbe
lcall
in
xor
lahf
repz
mov
inc
ret
inc
lods
out
xor
ret
jmp
pop
adc
lret
push
scas
daa
sub
stc
enter
inc
jge
in
arpl
outsb
cmp
inc
movsb
jle
xchg
add
test
push
shll
clc
ds
lcall
out
mov
mov
imul
cmp
push
inc
frndint
ljmp
inc
xchg
jnp
out
das
or
mov
out
lock
mov
sbb
cmp
or
pop
jnp
subb
fisubl
mov
in
shrb
ja
mov
repz
in
test
es
arpl
repz
pop
pop
cld
mov
jge
nop
scas
inc
pop
inc
ja
push
scas
and
fldenv
or
cmc
jle
cmc
loop
xor
add
or
cltd
and
fwait
out
daa
fistl
call
cli
std
subb
xchg
push
jns
push
ds
mov
popw
rclb
mov
jne
mov
into
loope
ret
lahf
mov
cmpb
mov
shrl
xchg
sub
jnp
cmc
xor
addr16
aam
sbb
iret
inc
adc
adc
loope
les
pop
pop
fbstp
out
test
xor
stos
push
and
sub
daa
shl
pop
into
or
jge
out
mov
in
lcall
xchg
outsb
ja
push
inc
fdiv
mov
mov
js
sbb
test
int
xchg
xchg
loopne
inc
ja
mov
imul
pushf
neg
sbb
adc
ud0
cwtl
jg
add
mov
inc
inc
mov
inc
mov
or
fistps
xor
aam
lds
cltd
jno
pop
jle
cld
rclb
sub
jecxz
mov
lahf
pop
push
xor
ret
blsic
ja
cmp
das
sbb
jb
add
movl
stos
mov
out
jo
ret
push
pop
sbb
cmp
jp
inc
pop
mov
sbb
fldlg2
add
fstpl
mov
orb
daa
inc
or
test
xchg
shlb
push
mov
loop
pop
fiadds
sbb
mov
and
aas
xchg
push
push
adc
cmpsb
push
lret
pusha
enter
stos
out
aas
ljmp
jge
and
jg
iret
stos
xchg
pop
xor
adc
fcoml
xor
stos
and
int3
jne
mov
pop
fcomi
test
insb
sub
xchg
or
sbb
adc
addl
inc
push
mov
out
data16
push
cmp
xchg
push
daa
xchg
dec
inc
les
lods
mov
hlt
dec
cmp
jg
or
cmp
mov
into
cmpsl
jmp
jp
test
rorl
cmp
dec
pop
bnd
loop
jp
stc
mov
mov
out
adc
push
out
notb
adc
stc
adc
inc
das
sbb
pop
push
fs
aaa
inc
outsb
dec
or
in
jne
jno
jecxz
out
xlat
mov
imul
fisttps
mov
les
sbb
xchg
scas
imul
mov
push
add
mov
ret
push
jmp
sbbb
jle
pop
add
sbb
js
int
mov
cmp
add
das
jb
test
movsl
jae
mov
xchg
dec
xchg
lret
add
cmpsb
rcrb
adc
in
cmp
or
mov
inc
inc
cld
xchg
lahf
inc
sbb
mov
daa
push
in
jecxz
aaa
popf
jnp
jl
mov
imul
inc
mov
mov
inc
adc
inc
mov
loop
and
call
jg
jecxz
or
loop
mov
dec
mov
jge
mulb
cmp
pusha
and
ja
ja
sbb
push
fisubl
adc
mov
lea
sti
xchg
insl
repnz
mov
inc
call
push
enter
pop
pop
insl
daa
mov
aam
test
imul
pop
ret
out
jl
push
push
roll
mov
pop
push
sbb
test
or
inc
outsl
add
aaa
sub
sub
push
jecxz
lret
lods
pop
sbb
out
xchg
sub
sbb
sti
mov
repz
repnz
push
adcl
into
ss
mov
loopne
data16
add
jae
in
dec
jle
add
cmp
jbe
int
mov
jo
jg
insl
mov
mov
xor
add
out
xchg
xchg
cmp
mov
mov
or
out
loope
leave
mov
lods
clc
out
adc
stos
pop
dec
mov
jmp
lods
inc
int
pop
xor
repnz
adc
xlat
and
push
and
outsb
adcb
loop
into
test
dec
lret
pusha
bound
inc
push
jae
in
lods
lret
ja
test
shrl
out
add
iret
pop
xchg
nop
add
sub
popf
jle
jmp
sbb
push
jb
push
xchg
jp
dec
mov
jae
mov
cmc
bound
and
and
jno
out
xchg
inc
mov
dec
push
hlt
clc
sub
sub
xor
das
add
adc
xlat
push
mov
jp
or
jns
cmpsb
popa
mov
mov
sub
scas
and
jns
push
in
scas
daa
push
fsincos
xor
mov
je
leave
inc
bound
gs
push
pushf
pop
dec
pop
inc
and
stos
in
mov
sub
insb
dec
icebp
jo
pop
or
adc
ds
mov
jo
popf
in
cltd
jmp
fisttpll
pop
aad
and
aaa
push
pop
test
mov
imull
in
jnp
enter
adc
sbb
int
ds
addr16
pop
mov
xchg
cmp
dec
or
xchg
xorb
repz
sub
cmpsb
mov
xchg
jnp
inc
aad
nop
imul
movsb
dec
mov
ljmp
mov
lods
push
stc
cmpsl
add
xor
inc
imul
lret
ss
push
lock
jge
adc
scas
mov
scas
sahf
fsubl
mov
fs
sahf
das
pop
hlt
scas
mov
rcl
nop
push
fs
cld
outsl
or
fcompl
sahf
int
push
je
xchg
shll
not
enter
sub
mov
leave
pop
into
je
lahf
adc
loope
std
dec
xchg
popl
xor
jmp
mov
lea
pop
or
lock
divb
adc
mov
mov
mov
lods
jg
ds
cmp
icebp
lds
jge
out
and
fidivs
xchg
repz
push
pop
lret
push
leave
xor
clc
jb
mov
mov
mov
sbb
dec
pop
lea
sub
inc
pop
fsubs
stos
or
mov
test
sbb
inc
inc
flds
loop
aaa
stos
imull
lds
push
sahf
or
out
dec
cld
lods
ret
mov
mov
cmpsb
iret
mov
faddl
loopne
fimuls
lods
jno
inc
xor
test
pop
stos
cltd
bound
sbb
cmc
mov
push
push
out
es
xlat
pop
int
jb
lret
lret
mov
or
cs
mov
fwait
mov
movsl
insb
iret
arpl
or
pop
pop
test
push
or
sub
sub
jnp
inc
and
jle
push
adc
xchg
push
xchg
add
add
int
add
dec
inc
sti
mov
pop
es
test
mov
dec
fprem1
pusha
cmp
lcall
xor
out
mov
xchg
lahf
loope
lahf
xchg
sbb
jp
add
sarb
into
jle
stos
rcrb
or
loopne
dec
xchg
clc
clc
push
jg
sbb
dec
daa
inc
adc
dec
jmp
jae
in
inc
rcrb
mov
xchg
cld
push
mov
push
cmp
pop
sub
movsl
stos
inc
adc
jae
xchg
and
xchg
test
jl
mov
lods
mov
jecxz
outsl
lds
lds
cmc
sbb
inc
mov
loopne
sbb
ja
in
insl
push
lods
loopne
lahf
sub
sbb
leave
bound
ficompl
xchg
inc
pop
dec
and
std
xor
cld
jmp
add
gs
jne
daa
nop
cs
icebp
mov
adc
das
inc
div
xor
push
in
cmp
pop
shrb
cli
pusha
lock
pop
adcb
aad
xchg
fbstp
addr16
lcall
mov
nop
loope
jo
ds
push
and
fisubs
adc
sub
sti
jo
cmp
outsb
xor
and
push
cmp
jo
je
leave
in
lret
into
sub
push
mov
imul
sub
nop
scas
jns
cmp
mov
inc
cmc
jno
xor
fldl
cmp
adc
lret
scas
jno
xchg
and
int
cmp
mov
cmp
pop
or
jne
push
cmp
lods
testb
movsl
xchg
add
icebp
repnz
in
xor
pop
xorl
cmpsb
insb
pop
jl
mov
sbb
or
jl
dec
add
insl
clc
or
jmp
adc
cmp
scas
xlat
pusha
mov
dec
insl
in
mov
adc
dec
cwtl
cmpsb
xchg
insl
sbb
ret
repnz
push
cmpsl
mov
in
dec
cmpsb
mov
sub
pop
inc
add
icebp
jbe
jle
cmp
stos
stos
cmpsl
out
jbe
dec
loop
ljmp
je
pop
xchg
inc
dec
push
adc
sub
jne
cs
sbb
push
pop
inc
and
sub
iret
lcall
lds
push
push
dec
ja
push
push
clc
sub
cmp
orb
cmpsl
mov
repnz
sub
call
test
in
dec
fiadds
dec
fcmovnb
lahf
cli
jo
push
sahf
xor
cmp
or
mov
sub
jnp
imul
inc
cmpsb
sahf
cmp
lea
repz
pop
pcmpgtw
cld
pop
push
hlt
adc
jge
das
scas
sub
xlat
mov
stos
jnp
pushf
xor
gs
xchg
inc
mov
pop
add
jg
jmp
mov
test
push
mov
out
mov
push
js
arpl
cs
ljmp
xorl
xchg
jp
notl
add
fnstenv
and
cmpsb
addr16
repz
xchg
lret
xor
adc
jb
jne
sub
xchg
mov
aad
icebp
add
xchg
sti
pop
test
incb
icebp
out
iret
jl
in
sub
clc
cmp
cmpsb
sub
cmp
dec
jecxz
pop
xchg
movsl
stos
loopne
mov
push
cmpb
jl
sub
cmp
sbb
rcrl
push
push
fcoml
or
cmpsb
or
stos
in
loope
jae
xor
aas
daa
and
push
mov
mov
insb
mov
fbld
or
xor
insl
cmc
mov
lea
add
shlb
mulb
aas
xchg
lds
push
mov
add
repz
push
xlat
add
sti
cmp
ret
loope
and
addr16
push
adc
out
mov
pop
int3
pop
xchg
and
out
cwtl
push
insl
push
sub
mov
xor
and
jo
xchg
sahf
les
repz
adcb
dec
mov
and
dec
sub
add
add
in
shrb
fcoms
mov
leave
js
aad
arpl
popf
aad
mov
je
pop
les
adc
in
pushf
fwait
push
inc
imul
cmp
xor
jmp
fs
enter
ds
mov
lods
push
pop
rorl
mov
cmp
inc
sub
push
cmp
testb
test
movsb
push
rol
scas
ljmp
pop
dec
mov
pop
push
movsl
jge
xchg
and
outsl
or
push
popa
jg
pusha
scas
cmp
sub
lret
into
push
inc
sbbl
add
inc
or
jp
popf
rcrl
pop
lods
aam
in
call
fidivl
nop
loopne
inc
xor
jbe
in
leave
lret
jle
fstp
add
icebp
cmp
test
xchg
lahf
cmpsl
test
cld
mov
cltd
xor
bound
sbb
cmc
out
ss
cmp
lcall
mov
inc
dec
xor
sarl
push
fadd
sub
cmp
lret
cmpsl
jno
mov
push
jmp
aas
push
sub
rsqrtps
push
mov
sbb
sub
or
lods
scas
add
out
outsb
pmulhuw
sub
fidivs
pop
out
sub
in
jbe
pop
sarl
enter
dec
pop
in
xchg
xchg
flds
imul
inc
or
lret
int3
push
dec
fbld
int
sbb
cmp
cs
iret
movsb
xor
iret
push
mov
or
pop
and
into
cmp
dec
mov
mov
sub
cld
cli
hlt
imul
xchg
mov
dec
xchg
dec
push
add
cmpsb
add
jp
dec
push
push
push
ljmp
pop
inc
cmc
popf
adc
xor
add
push
dec
sahf
xor
jp
in
pop
and
call
test
push
inc
inc
add
fwait
jnp
mov
xchg
in
cmpb
xor
daa
pop
sub
les
fsubrs
sbb
daa
cmp
and
cmpsl
in
fs
ja
xlat
movsb
idivb
stos
xor
pop
pop
mov
pop
aad
enter
mov
repnz
sub
dec
add
scas
jg
cmpsb
scas
ds
sbb
xchg
jmp
shrb
into
sti
mov
sti
arpl
sahf
repz
loope
push
xchg
adc
pop
add
daa
lods
mov
push
pop
jb
pop
out
adc
sub
in
cmp
js
push
pop
cmp
jno
enter
aam
mov
int3
dec
xchg
loopne
leave
in
mov
mov
push
mov
jecxz
mov
xor
leave
js
or
fisttps
jp
shll
in
mov
test
repz
add
xlat
mov
insb
mov
add
arpl
jl
aaa
pop
adc
es
jecxz
mov
test
mov
dec
and
cld
lods
imul
mov
fnstsw
xor
dec
fisubrl
inc
inc
imul
stos
sbb
and
or
pop
or
outsl
xor
and
or
loopne
sbb
dec
jle
or
repz
sbb
into
sbb
mov
rcr
add
enter
mov
fcmovb
cltd
inc
inc
push
adc
pop
pop
fs
dec
les
cwtl
jns
sbb
xorb
adc
fistl
pop
xchg
out
mov
fildll
test
call
ss
mov
lcall
popf
imul
push
mov
hlt
fcoms
fists
mov
mov
pop
jmp
inc
inc
leave
mov
jne
and
pop
roll
cmp
fldl
push
ljmp
jp
xlat
lods
xchg
out
fists
std
pop
and
adc
dec
push
lea
jp
pop
shl
mov
cmp
movsb
push
pop
xchg
pop
inc
jge
and
xchg
xor
lds
jmp
jge
jae
push
movsl
in
ret
adc
xchg
int3
int3
sahf
sub
lock
jb
push
pop
mov
js
aad
iret
sbb
xor
outsl
cwtl
and
icebp
addl
in
adc
sub
sub
sbbl
xor
mov
div
fldenv
daa
mov
sub
mov
jne
add
cli
cmp
xchg
dec
cmp
xor
xor
mov
mov
ja
aas
pop
sbb
sbb
into
cmp
inc
mov
push
loopne
lret
sahf
xor
fistps
cmpsb
mov
mov
push
sbb
arpl
cmpsl
sbb
add
inc
adcl
icebp
xchg
cmc
xchg
cmp
mov
test
dec
sub
ja
dec
scas
or
adc
and
and
add
xchg
inc
icebp
sti
push
insb
jne
sbb
int3
pop
and
cmp
or
mov
mov
mov
fistps
and
inc
mov
call
mov
in
out
es
add
int
das
dec
dec
jns
fisubs
lret
insb
adc
mov
je
into
xchg
xchg
xchg
cmp
cs
xchg
cmpsl
or
stos
ja
iret
add
stos
pushf
or
mov
dec
subl
push
call
popa
mov
sub
lahf
cmp
sbb
mov
test
jge
cmpsl
orl
cld
dec
test
sub
je
cmpsb
inc
ret
subb
aaa
stos
pop
ret
fcomi
dec
addb
movsb
push
test
xchg
sbb
and
mov
ja
ud0
adc
es
rolb
cmpsl
call
cmp
adc
scas
clc
addr16
popa
shll
xor
dec
jecxz
pop
dec
jbe
jb
xor
adcb
movsl
xor
push
fadds
mov
pushf
add
fwait
mov
mov
add
bound
stos
incl
xor
cmp
stos
mov
fcomp
scas
push
mov
push
fucomip
inc
jle
mov
push
push
adc
cmp
cmpsb
cmp
cmp
sbbl
dec
in
push
add
push
xchg
fstpt
pusha
mov
cltd
mov
jmp
pusha
stos
jae
decb
mov
cmp
add
add
inc
outsb
mov
in
xor
mov
push
mov
xchg
enter
je
fstpl
cli
sub
lahf
push
add
icebp
sub
sti
xchg
xchg
cmp
out
enter
jmp
scas
mov
sbb
cltd
loopne
and
mov
stos
stos
mov
sub
icebp
out
xchg
sarb
cmp
jbe
add
mov
pop
ljmp
aam
push
cmp
dec
sub
std
dec
subb
test
pop
or
add
jae
stos
adc
cmp
xor
jl
and
pop
adc
loope
js
adc
mov
mov
push
or
leave
add
and
hlt
xchg
mov
test
xchg
clc
in
ret
data16
pop
gs
mov
inc
inc
inc
ss
jae
jmp
cmp
lea
neg
test
into
out
test
andl
lds
and
ret
and
movsl
mov
jno
ss
insl
jge
add
add
pop
lahf
ljmp
or
adc
fidivl
std
push
adcb
or
add
mov
xchg
xor
push
mov
lret
test
addr16
loope
fidivs
push
repz
mov
cwtl
jg
mov
or
subl
lret
push
aaa
cmovo
jmp
loope
jp
lret
movsb
lret
int3
ss
pop
mov
mov
xchg
int
cmc
dec
out
cmp
dec
mov
pop
movsl
push
imul
cmp
repz
sbb
aam
repz
fcoml
sarb
ss
test
lock
dec
pushf
fdivrs
add
mov
cs
imull
dec
int
xchg
sbb
dec
cmp
xchg
pop
call
out
mov
adc
and
push
or
xchg
aas
push
sbb
ljmp
loop
dec
pop
inc
ljmp
xor
or
or
pop
mov
push
sbb
sbb
dec
aad
mov
cltd
jle
call
or
pop
pop
psubsb
adc
enter
cli
fisttpll
stos
jmp
mov
test
insl
or
add
cmc
jnp
insb
adc
test
adc
mov
rcrb
std
fwait
lahf
add
mov
out
test
outsb
andl
mov
hlt
mov
dec
lea
mov
ljmp
js
int3
dec
cltd
loop
ss
cmova
es
push
popf
test
push
cmp
out
and
rcl
add
repz
sbb
push
mov
or
dec
or
sbb
filds
nop
adc
xchg
rcrl
mov
sbb
jo
jg
out
adc
and
sbb
cld
sbb
or
jne
xchg
fs
add
lods
push
outsb
mov
clc
or
push
dec
add
icebp
and
icebp
push
repnz
fisttpll
fstpt
pop
loop
adc
mulb
ret
adc
add
outsl
and
addb
shrl
bound
das
test
dec
test
or
in
sbb
cmp
scas
fmull
add
aad
sbb
repnz
xlat
in
push
ss
scas
or
lea
dec
mov
cmc
sub
cmpsb
or
cmp
sub
dec
jb
mov
loopne
mov
sarb
cmp
rol
js
jo
and
das
xchg
push
mov
out
cmpsl
insb
rol
into
xchg
mov
dec
mov
jg
inc
enter
sbb
std
imul
outsl
sbb
jmp
adc
sub
test
pusha
jns
xchg
cmp
enter
and
mov
enter
cwtl
mov
jg
sbb
cmc
xchg
mov
inc
sbb
push
aaa
push
sbbb
pop
push
stc
sbb
outsb
cltd
insl
xor
pop
sbb
loop
push
test
pop
xchg
fnstenv
incl
les
insb
adc
mov
fs
test
mov
mov
sbb
jmp
mov
popf
in
cli
ret
xchg
jmp
sub
aam
mov
gs
inc
mov
lods
cld
sbb
repnz
fldt
mov
mov
mov
out
mov
gs
mov
movsl
push
dec
mov
mov
cwtl
out
xor
fsubr
or
clc
cmp
adc
jge
aad
je
mov
dec
sub
pop
or
push
cmp
dec
push
lcall
lret
cltd
scas
test
pop
mov
lock
mov
and
stos
add
int
mov
mov
into
cmpsl
stos
mov
scas
lret
fstl
andl
and
cld
insl
mov
jo
rcrb
testl
cmpsb
cmp
sbb
pop
sub
lret
lds
call
mov
sbb
add
inc
cmp
sbb
or
sarl
mov
repnz
ret
jg
jbe
std
add
jp
ret
bound
jae
adc
cwtl
cli
sub
jbe
adc
repnz
jecxz
inc
xchg
pop
lcall
clc
pop
fsubrp
adc
and
dec
into
mov
js
scas
xchg
mov
pop
jp
lret
xchg
loope
mov
pop
xchg
sub
subb
jb
stos
mov
in
and
pop
xchg
inc
mov
cmp
add
pushf
jg
insb
xor
mov
lods
jbe
push
push
cmc
cmpsb
insb
clc
xchg
xchg
lds
jns
subb
pop
in
cmp
fildl
pop
mov
jo
push
mov
mov
adcb
inc
into
sub
imul
xchg
mov
sbbb
push
ss
cltd
ret
incb
or
popa
sbb
dec
popa
jge
sbb
ds
xchg
jb
and
rclb
mov
add
xchg
das
ficoms
addl
repz
or
and
mov
movsb
mov
and
and
mov
daa
or
daa
lods
int3
movsb
xchg
clc
cltd
xor
repnz
popa
in
add
xchg
hlt
in
cwtl
push
sahf
dec
testb
mov
pop
fnsave
and
ret
dec
adc
test
int3
aad
mov
inc
jmp
sbb
or
shlb
sbb
and
adc
jnp
fldenv
jno
nop
xor
pop
aaa
insb
mov
ret
or
dec
pop
jp
popa
adc
cmp
lahf
adcb
in
pop
outsl
cs
movsb
dec
fisttps
ds
pop
imul
sbb
jb
ficomps
insb
iret
push
aam
mov
cmpsb
fs
inc
insb
jb
fcomps
loopne
inc
pop
jmp
es
sub
jno
jnp
in
sbb
int3
cmpsl
add
cmpl
addr16
push
xlat
push
repz
sti
cmp
dec
test
stos
or
sbb
push
sbb
xchg
dec
xchg
mov
sub
xchg
mov
xchg
add
xchg
mov
clc
mov
mov
mov
add
fldenv
pop
sbb
xor
sbbb
dec
mov
pop
call
push
sbb
aad
sti
jg
xor
aam
xor
in
lock
mov
rcll
vmovdqu
shrb
rcrb
out
mov
jno
movsb
jp
push
test
in
push
ret
aaa
in
hlt
or
mov
xor
push
mov
test
sub
add
stos
je
enter
adc
mov
sub
test
cli
sbb
fiaddl
ret
and
cmp
ror
aaa
iret
icebp
add
cmp
mov
cmpsb
stos
lret
cmp
cmpb
pop
inc
test
loop
pop
jo
lea
sub
jl
mov
jbe
ret
and
mov
mov
mov
inc
mov
dec
or
dec
xor
insl
add
jg
sub
pop
jno
mov
xchg
cmp
sti
jae
push
leave
loope
adc
out
jecxz
push
and
and
fistl
xorl
nop
xchg
aad
inc
dec
jp
cmpsb
dec
int
or
xchg
cmp
pop
bound
sub
jne
jnp
and
sub
pop
sbb
cmc
nop
sbb
xchg
cld
inc
add
push
mov
outsl
movsb
mov
jle
xchg
arpl
rcll
pusha
outsl
pop
dec
and
lahf
push
push
lahf
cs
pop
vpaddq
or
or
jg
sbb
into
out
ss
fwait
sbb
push
mov
mov
sub
mov
test
notl
mov
std
cmp
std
inc
loopne
les
sub
push
push
pop
arpl
and
mov
fwait
scas
jmp
dec
adc
sbb
call
addr16
and
pop
cmp
sbb
lahf
clc
aaa
and
sbb
mov
dec
aam
sbb
sti
dec
dec
pop
mov
mov
xlat
or
daa
mov
aam
roll
jp
iret
repz
notl
inc
leave
mov
test
jmp
les
aas
and
pop
pop
je
fisubs
pop
mov
incb
in
das
dec
and
adc
jae
adc
stos
inc
cmpsb
leave
sbb
rolw
je
clc
xchg
lcall
sbb
xor
dec
stc
or
push
movsl
loope
or
push
push
fidivl
lret
pop
dec
pop
xor
jmp
cli
sbb
in
mov
fnsave
sbb
push
sbb
fistpl
mov
out
adc
mov
cmpsb
fnsave
jo
bound
pop
xchg
sbbl
mov
popa
dec
adc
pop
out
adc
flds
xchg
jmp
sarl
dec
dec
push
in
adc
mov
fcoml
stc
aad
outsl
sub
sbb
jmp
insb
xor
push
pop
inc
or
movsb
test
jne
and
jno
ljmp
mov
aas
pop
or
xchg
cmp
inc
testl
add
shlb
sbbb
mov
aad
pushf
xchg
mov
adc
leave
es
pop
aad
mov
insb
cmc
jg
lret
and
inc
dec
cmpsl
adc
xchg
xlat
filds
pop
shrb
out
mov
and
lock
call
iret
adc
mov
cli
cmpsl
xchg
fsubp
xchg
push
out
out
movsb
push
outsb
dec
xor
mov
mov
movsl
jb
xchg
fcmovne
sbb
xchg
jnp
movsb
and
bound
pop
aaa
fdivs
mov
dec
cmp
and
mov
xor
pop
mov
pop
in
push
int3
jae
scas
inc
mov
loop
lret
stos
cmpsb
cld
int3
adc
mov
sbb
int
shll
out
push
mov
call
sub
dec
mov
add
pushf
xchg
and
sbb
movsl
adc
lock
cmpsl
mov
pop
mov
icebp
sub
sub
add
iret
iret
cmpsl
loope,pt
int3
and
sub
imul
xchg
je
cmp
lret
aas
jle
fs
cmp
and
cli
jecxz
jmp
mov
sbb
mov
sub
pop
jne
aam
mov
or
pop
xchg
in
mov
loopne
leave
out
or
aam
sbb
jno
lcall
or
push
scas
out
mov
dec
pop
jno
or
add
inc
test
or
ja
out
pop
mov
jl
jge
aad
in
les
iret
cmp
inc
aam
mov
lock
in
mulb
cmpb
loop
mov
lret
cld
inc
stc
mov
push
pop
and
pusha
mov
cmp
cwtl
int3
mov
or
cli
pushf
xor
add
jmp
imul
push
mov
add
js
mov
or
sarl
les
arpl
arpl
and
lds
pop
sub
push
or
std
arpl
push
xchg
add
inc
sub
jno
lea
xchg
pusha
mov
push
xchg
mov
or
inc
mov
push
push
rcrl
pop
lods
dec
xchg
or
push
mov
xor
sub
add
sbbb
sub
inc
cltd
lahf
xor
add
int3
push
out
add
sub
and
adc
push
mov
nop
inc
adcl
and
sbb
ja
sub
test
push
out
enter
movsb
imul
mov
pusha
xchg
pop
negl
test
dec
lret
test
test
jg
les
sub
repz
sbb
sub
mov
das
add
pop
xchg
xor
lds
cmp
cltd
dec
and
lods
push
roll
cld
jl
movsb
cmp
loop
mov
cli
stc
test
dec
clc
or
add
lods
or
enter
call
movsb
ljmp
scas
outsl
sbb
xlat
jne
faddp
sbb
lahf
adc
faddl
jo
inc
test
imul
imul
loope
out
mov
add
push
mov
loopne
mov
sahf
ret
xchg
imul
stc
sub
pop
sbb
lock
shlb
mov
lods
inc
mov
add
sub
mov
lahf
les
pop
arpl
int
shll
mov
xchg
lcall
xchg
or
dec
sarb
test
dec
shlb
jp
jg
arpl
ds
sbb
outsb
jae
mov
cltd
mov
jne
arpl
mov
ret
cltd
pop
sbb
jmp
xchg
ja
subl
popl
add
aam
cmpsb
outsb
xchg
lcall
rorl
dec
popa
sbb
scas
in
pop
sahf
imul
cmpsb
xor
nop
push
mov
pop
icebp
mov
subb
pop
xchg
test
mov
rcl
inc
push
sub
xor
mov
jns
pop
arpl
jbe
mov
add
js
jnp
sub
xor
xchg
mov
insb
ds
mov
inc
xor
imul
scas
mov
pop
out
test
pusha
mov
mov
inc
aaa
lock
adc
add
or
mov
xor
pop
inc
push
push
test
loope
mov
jp
xor
xor
xor
mov
fdivrp
xor
enter
inc
dec
in
and
jae
fwait
loope
ja
and
jmp
int
jge
dec
loop
out
cwtl
paddsb
rcrl
push
add
roll
pop
jbe
mov
add
sbb
int3
mov
jne
stc
lea
fmuls
popa
lahf
cmp
imul
pop
pop
cld
adc
mov
jle
cmp
inc
mov
clc
push
and
repnz
bswap
jp
cmp
jae
jmp
es
and
inc
push
mov
outsb
push
mov
mov
add
and
ds
ds
mov
xchg
ja
in
repz
aas
pusha
psadbw
add
dec
adc
fidivrs
mov
inc
jmp
xlat
test
or
pop
gs
mov
sbb
notl
jmp
clc
pushf
pop
stos
dec
in
cmp
test
cmc
bound
sub
dec
rcrb
xorl
cmpsb
xchg
mov
test
fildll
lret
cltd
inc
adc
call
xor
aad
nop
or
popf
mov
sti
pop
ljmp
xor
adc
in
jmp
xchg
jmp
rorl
inc
pop
cltd
bnd
push
pop
cmp
jle
inc
clc
lcall
call
push
mov
inc
mov
mov
loop
rcrb
lock
inc
ret
cmp
sbb
mov
loopne
jmp
cs
fstps
mov
xor
and
iret
cmp
lds
pop
mov
fimuls
clc
push
imul
fsubrs
jmp
xchg
pushf
add
cmp
test
dec
sub
mov
xor
jmp
ljmp
out
movsl
popa
arpl
mov
mov
out
loope
enter
jmp
lock
lret
aam
bound
int
loop
rcll
fwait
add
mov
out
cmp
dec
sbb
or
frstor
or
arpl
xor
in
dec
fildll
mov
int3
cmp
jecxz
push
loop
push
movntq
mov
adc
daa
jne
xor
or
dec
jbe
mov
cmp
pop
inc
in
lock
pop
pop
fs
out
ss
jae
loope
shrl
sbb
sbb
push
pop
fsubrs
sbb
mov
fisubrl
mov
mov
xchg
mov
and
mov
sub
and
adc
push
loop
and
xchg
subb
mov
fldt
mov
mov
std
repz
adc
cmp
push
mov
rol
mov
mov
fildl
mov
xorb
fistl
xchg
fisttpll
xorb
mov
les
cltd
mov
ret
stos
pop
iret
rol
movsb
mov
xchg
lret
fbstp
loop
mov
mov
stc
outsl
cmp
stc
or
cmp
jae
rorb
js
dec
xchg
mov
xchg
mov
je
and
sub
cmp
cmc
cmp
fmul
adc
call
setg
sar
mov
sarb
xor
scas
cmp
add
push
jae
xchg
adc
es
xchg
mov
daa
das
hlt
aas
cltd
lock
hlt
lock
movsb
out
adc
jnp
scas
pop
gs
mov
aas
ret
imul
jae
fdivrl
xchg
sahf
pushf
iret
xchg
cmp
data16
adc
lds
rcr
iret
inc
lret
xchg
jno
xchg
sub
fsubs
clc
outsb
jae
push
or
insb
sub
mov
xchg
and
push
cmp
mov
adc
mov
in
mov
mov
sbb
imulb
jl
pusha
push
push
ja
outsl
dec
xor
cs
in
cs
adc
pushf
add
fdivrl
sub
fdivs
inc
es
icebp
jnp
adc
jmp
pop
addr16
xor
adc
and
gs
test
out
adc
call
notl
push
pop
imul
pop
jg
lret
gs
add
and
data16
mov
xlat
or
pop
iret
cs
add
fidivrs
mov
dec
adc
stc
sbb
cmpsl
fistpl
push
mov
mov
push
test
into
pushf
fmul
or
fs
out
test
xchg
cmpsb
cmp
xchg
push
test
sbb
push
push
dec
sbb
inc
adc
cmpsb
lds
jg
mov
jbe
mov
add
xchg
insl
sbb
mov
fstp
or
enter
rolb
dec
int
out
jge
inc
in
out
pop
push
jecxz
and
xchg
into
cli
sbb
repnz
mov
fisubs
cmpsl
jecxz
test
xchg
outsb
lret
sti
add
add
fdivrs
test
int
adc
test
test
cmp
test
mov
add
cli
loope
leave
xchg
into
adc
in
mov
ret
sti
mov
or
pop
subl
inc
mov
popa
lahf
mov
sbb
insb
push
adc
inc
aam
test
notb
nop
push
addr16
lock
cmp
jmp
lods
xor
adc
cli
inc
fnstenv
cwtl
fsts
adc
sub
insl
es
loop
xor
pop
inc
xor
testl
insb
push
jecxz
out
push
stos
mov
ds
mov
mov
mov
pop
lret
mov
add
pop
mov
hlt
out
cmp
add
lea
cmp
popf
sbb
dec
cs
pop
mov
jnp
hlt
adc
dec
cltd
incb
adc
mov
ljmp
in
add
rorl
ja
sbb
bnd
orl
inc
test
push
fsub
and
add
pusha
and
jg
loope
push
xchg
imull
test
jecxz
movsl
cld
pop
push
in
push
jno
mov
fucom
and
pop
sub
fidivl
mov
sbb
mov
iret
in
mov
jmp
sub
mov
dec
lods
ja
popa
std
test
mov
cmovl
cld
push
sub
xchg
les
js
xor
jo
fsub
xchg
loop
xchg
adc
adc
adc
xor
mov
mov
mov
jmp
cltd
xor
mov
xchg
jp
ljmp
add
mov
orl
mov
mov
enter
repnz
xor
insb
fcoml
sub
sub
ds
pusha
xor
mull
repnz
iret
inc
data16
and
add
stos
fmuls
pusha
xchg
jge
rolb
incl
jp
out
scas
push
mov
jmp
pushf
pushl
in
inc
push
test
pusha
ja
sub
xchg
gs
jb
jmp
sti
scas
or
vpavgw
push
inc
jae
ljmp
mov
sub
dec
adc
pop
ficomps
xor
jbe
mov
inc
hlt
scas
or
ds
mov
push
stos
inc
rcr
insb
push
aaa
cld
fwait
ljmp
mov
and
and
mov
imul
or
dec
fwait
and
lahf
out
mov
shll
pop
jmp
push
mov
sbb
push
insl
cmp
push
incb
aas
jns
fbstp
or
adc
or
cmp
mov
testl
mov
fbstp
pop
aaa
mov
adcl
dec
inc
and
int3
pop
add
frstor
aaa
sub
pop
add
call
insl
pushf
mov
cmpsb
clc
into
pop
and
push
push
pop
pushf
stos
push
rcrb
sbb
sub
push
pusha
xor
sbb
stos
sub
adc
aas
pop
rorb
lock
push
cli
xlat
mov
mov
dec
pop
fimull
fldenv
xchg
mov
jno
sub
test
fwait
lcall
and
push
rcr
jo
stos
cmpl
das
test
ja
xchg
xlat
xor
add
add
cli
mov
xor
pop
insl
rcr
adc
and
call
outsb
xchg
call
loop
mov
addr16
lods
fistpll
or
jge
add
mov
sub
adc
xchg
leave
fucomp
pop
pop
das
xchg
aad
sbb
jns
ljmp
data16
inc
imul
repnz
hlt
mov
mov
in
jmp
outsb
fnstcw
in
pushf
fldt
sbb
out
mov
push
inc
mov
addr16
pop
out
xchg
add
cmp
popa
cltd
insb
cwtl
xchg
ljmp
mov
lcall
sbb
push
sbbl
jns
jnp
imul
jl
or
push
fildll
imul
push
push
sbbl
add
push
sub
cwtl
cmpsl
fistpl
jbe
jmp
cmpsb
pop
sbb
pop
mov
push
enter
outsb
mov
fidivrs
nop
repz
stc
jno
sbb
je
icebp
cmp
int
stc
or
cmp
push
aas
jp
cmc
jg
stos
mov
fcompl
pop
lret
sahf
mov
or
mov
xchg
je
and
push
mov
sahf
xchg
dec
fdivr
pusha
xlat
daa
mov
dec
add
mov
into
mov
jl
and
mov
testl
pop
or
fdivrs
mov
mov
xchg
pop
jno
es
loope
jmp
inc
loop
or
jo
pushf
xchg
je
xchg
inc
rorl
adc
inc
or
dec
dec
push
jne
xchg
fldcw
ljmp
or
rcll
jge
int
shrl
push
sbb
adc
mov
jp
clc
push
sarb
mov
jno
insl
jnp
mov
xor
adc
sub
mov
shll
sub
mull
lret
sbb
sbb
mov
cmp
jnp
in
xchg
shl
mov
jecxz
lahf
ret
fdiv
push
jo
sbb
xchg
out
stos
out
lret
pop
add
add
and
orl
lahf
sbb
stos
stc
adc
xor
inc
add
sub
sarl
cld
mov
arpl
lods
imul
negl
scas
cwtl
stos
int3
das
sbb
add
mov
enter
call
jl
test
ret
jns
adc
cmp
fnstsw
and
lcall
dec
xchg
cmpsb
xchg
das
inc
push
or
mov
cmpsl
inc
pop
icebp
jmp
mov
insb
xor
fisubrl
mov
movsl
es
mov
lods
daa
test
add
add
or
sbb
or
push
xchg
mov
stos
mov
sub
adc
xor
cmp
stos
shrb
lods
cmpsb
add
push
les
out
push
inc
fsubl
fiaddl
fs
ljmp
test
js
shlb
mov
and
jnp
ja
mov
repnz
std
mov
lods
loopne
xor
jae
fstps
iret
dec
fidivrs
mov
daa
ljmp
leave
je
mov
mov
pop
fs
mov
int3
inc
stc
push
hlt
and
xor
test
add
jb
xor
dec
dec
sbb
test
add
ffreep
or
mov
xchg
cld
mov
fsts
cmpsl
add
test
mov
push
add
or
aad
or
mov
outsb
inc
xor
mov
sub
push
cmp
or
popa
sub
out
out
lea
daa
jmp
call
test
iret
dec
push
mov
jecxz
aas
adc
and
in
sub
out
scas
fisubrl
lods
sahf
jg,pn
xor
out
icebp
mov
out
flds
or
pop
push
scas
push
addr16
pop
orb
out
push
popa
notb
inc
repz
addr16
jmp
movsb
dec
xchg
cmpsl
pop
rolb
pop
shll
or
xor
push
psubd
popa
mov
inc
add
xchg
mov
repnz
cmp
cltd
mov
mov
sti
rorl
ja
mov
setle
fdivl
mov
xor
fmuls
mov
or
out
push
js
popf
xor
push
jg
sub
cmp
inc
mov
mov
pop
mov
lods
add
in
arpl
stc
xchg
mov
xchg
int
fdivrl
adc
leave
mov
xchg
lcall
loopne
jne
nop
inc
sub
pop
shr
or
lcall
pop
dec
dec
push
xor
loopne
add
mov
push
ja
cmp
pushf
add
call
mov
sbbl
js
xchg
inc
movsb
xchg
mov
xchg
lds
nop
idiv
xchg
repz
cmp
std
pop
daa
jg
dec
mov
cmc
cwtl
cwtl
xchg
cmpsb
es
aas
es
add
rcr
dec
fstpl
jo
push
inc
adc
mov
insl
clc
ja
pop
xchg
fldl
mov
daa
cmp
jno
leave
into
cmp
mov
test
dec
sub
xchg
out
bound
jo
dec
outsl
out
idiv
adc
ss
icebp
and
fidivrs
pop
loop
ss
and
adc
repz
rcl
cmp
mov
test
fcmovb
ficoml
jae
fadds
adc
cld
ret
sbb
mov
mov
adc
sbb
les
aam
int
shll
popa
add
addr16
lea
rolb
arpl
fisttps
inc
dec
mov
clc
pop
rcl
sbb
xchg
test
mov
xorb
sub
hlt
int3
mov
or
jae
or
enter
dec
push
push
clc
test
xchg
dec
push
jne
xchg
pop
outsl
stc
mov
jg
in
sbb
icebp
mov
adc
mov
xchg
jmp
jb
ljmp
aad
mov
aas
mov
test
sub
fcomps
ds
pop
movsb
sbb
adc
and
mov
pop
pop
std
pop
add
mov
arpl
and
andb
lahf
sbb
jge
popa
ljmp
jge
mov
ret
into
inc
mov
cmp
dec
pop
pop
inc
movsb
cltd
ljmp
cld
add
imul
xor
rcrl
lret
dec
loopne
adc
movsb
stos
mov
add
pop
pop
ret
cltd
or
into
adc
xor
test
bound
pop
lods
xor
mov
xchg
push
and
add
scas
ss
rcl
in
mov
cmp
cli
and
pop
push
fsub
sub
rclb
xchg
cmp
sub
cwtl
jne
mov
xor
xor
and
clc
push
jmp
dec
repz
shlb
mov
ret
call
cmp
add
mov
loop
ret
sub
push
jle
push
push
push
mov
sub
push
sub
test
cs
mov
jb
es
gs
mov
int
lods
scas
bound
movsl
push
aaa
xor
push
loop
mov
mov
js
jp
jb
mov
mov
push
jne
push
inc
push
cmp
gs
fsubs
push
daa
jmp
xchg
mov
and
push
or
loop
jno
ret
jle
loop
call
testl
jb
jge
dec
in
sub
mov
cmp
push
mov
lea
loop
or
inc
pop
jnp
sbb
movsb
inc
add
push
test
out
out
sbb
mov
add
sbb
sbb
push
in
roll
imul
clc
insl
in
mov
call
xor
push
cwtl
inc
and
nop
repz
xor
sahf
arpl
sub
sbb
adc
and
xor
sub
jbe
sti
shrl
negb
and
int3
jmp
or
xlat
pop
pop
add
and
rolb
hlt
xlat
lock
xor
aam
test
mov
in
and
pop
arpl
sbb
mov
inc
and
and
mov
bound
lock
shl
sbb
pushf
mov
or
cmp
pop
andb
mov
mov
pop
cmp
cmp
inc
das
lret
or
sahf
jno
push
mov
scas
mov
mov
lods
cmp
or
sub
push
adc
xor
push
adc
pop
lret
ret
sbb
xchg
and
ds
sub
dec
fadds
sbb
push
mov
push
or
fcomi
rcrl
sahf
mov
sub
adc
cmp
arpl
pop
arpl
bound
mov
jnp
sbb
push
cmp
mov
test
les
lahf
push
imul
cmpsl
out
subb
popa
fwait
int
stos
insb
test
sub
push
loop
test
xchg
clc
dec
dec
cltd
outsb
pop
arpl
mov
cwtl
into
lock
push
jno
addl
push
sbb
mov
mov
inc
cmp
pop
mov
aaa
adc
adc
jae
mov
sbb
insb
inc
push
pop
fdivl
xchg
lret
stos
ret
push
fdivrl
stos
call
pop
pushf
stc
dec
lods
xor
xorl
inc
stc
test
addr16
xchg
data16
mov
sar
fcomip
fdivl
cwtl
pop
push
sbb
push
and
nop
inc
pop
mov
xor
xor
cwtl
std
jae
mov
add
rcrb
mov
mov
mov
lret
and
fs
push
adc
xchg
test
lods
push
sbb
mov
lcall
inc
mov
mov
xchg
push
mov
dec
pushf
jp
js
psubb
add
and
mov
fisttps
test
sub
mov
out
lods
std
mov
add
xor
lret
push
cltd
shr
stos
and
pop
imul
outsl
push
or
push
push
repz
jp
cmp
test
push
pusha
cltd
imul
inc
xchg
pop
sarb
sti
add
fxch
dec
ljmp
mov
fxch
adc
int
loopne
lock
push
mov
and
jo
mov
cmpsb
sub
jge
or
lea
jnp
mov
sti
ret
jae
movsb
sahf
out
cmpsl
xchg
mov
jle
inc
fwait
add
adc
ret
lea
shrl
stos
loope
orb
pop
xlat
mov
hlt
leave
orb
add
mov
adc
movsl
mov
jb
pop
xchg
sbb
les
mov
nop
stos
js
rcl
jg
out
add
movsb
in
frstor
pop
test
pcmpgtw
fsubrl
cmp
mov
jnp
aas
dec
mov
push
sub
sub
fwait
dec
pop
adc
or
shlb
mov
mov
xchg
int
mov
sub
js
ret
addb
pop
inc
addl
push
jnp
push
adc
xor
mov
idivl
ja
sbb
cli
push
pop
xor
xor
inc
sbb
out
dec
push
and
jno
hlt
pop
arpl
and
cmpsl
push
imul
lea
push
cmp
mov
fnsave
std
lea
aaa
pop
leave
movsl
add
lods
jl
cmp
push
xchg
jo
adc
es
popa
mov
xchg
xlat
divl
lret
sarl
fs
shl
pop
add
jo
cmp
int3
dec
adc
sarl
mov
dec
push
pop
aas
out
adc
out
push
or
mov
stc
pop
jno
stos
pop
mov
and
test
je
shll
in
jbe
stos
popa
dec
out
loope
push
push
ja
out
movsb
dec
aam
iret
movsb
mov
es
ja
je
aaa
xor
mov
fidivrs
not
fisttpll
inc
xchg
stos
loop
aaa
in
scas
jp
cltd
bound
daa
jmp
fwait
pop
adc
cmc
dec
out
roll
cli
mov
inc
aam
adc
data16
scas
dec
dec
dec
in
sub
and
inc
sbb
mov
mov
stos
mov
nop
popa
pop
adc
sub
mov
inc
sbb
les
mov
mov
jne
aas
dec
and
loopne
adc
and
std
das
es
retw
leave
pop
add
mov
lock
test
jge
in
mov
mov
sti
mov
aad
lret
jmp
pop
push
and
pushf
in
xor
sub
icebp
xorl
les
pop
sbb
mov
shll
int
shl
mov
add
xchg
cmpsb
sbb
add
add
into
cli
addb
or
mov
push
sub
push
and
add
jecxz
cs
xor
add
sub
push
adc
rolb
jb
cmp
sub
nop
sti
xor
sub
sub
outsl
nop
mov
test
mov
or
stos
push
push
mov
je
lea
sub
nop
out
fimuls
movsb
sbb
je
jnp
jae
bsr
lods
cmc
gs
sahf
into
jl
or
fnstsw
movsb
dec
mov
mov
in
fildl
xor
sbb
sahf
adc
mov
mov
sarb
xlat
nop
lahf
movsl
sbb
add
outsb
sarl
pop
inc
nop
testb
fiaddl
test
jnp
repz
es
pop
inc
icebp
lock
adc
in
pop
and
or
arpl
mov
mov
xor
sub
nop
mov
stc
cs
movsl
and
mov
push
flds
imul
sti
xchg
pop
sbb
push
je
add
out
sub
jns
dec
push
cltd
lods
loop
push
lock
scas
or
test
pop
adc
mov
add
sub
cmpsl
dec
in
faddl
push
sub
pushf
and
xchg
bound
mov
loopne
mov
cmp
mov
and
push
fisubl
movsb
in
pop
xchg
push
inc
pop
or
sub
mov
fxch
jb
sub
repz
test
jb
push
enter
and
daa
mov
idivb
jp
icebp
add
cmpsb
jmp
loop
mov
inc
xchg
and
sub
inc
lret
add
leave
fwait
aas
insl
cwtl
inc
movb
pop
jge
xor
jns
jp
pusha
bound
xchg
std
and
jle
mov
movsb
adc
decl
lea
xlat
mov
pop
push
cmpsb
adc
cmpsl
icebp
mov
rolb
jecxz
lods
jmp
pop
sar
xor
bound
ret
push
out
cmp
inc
lods
movb
pop
ss
aaa
jo
into
loopne
icebp
or
mov
fndisi(8087
xchg
jmp
test
xor
xchg
xor
sub
adc
shll
push
pop
pop
test
arpl
xchg
pop
mov
leave
ljmp
xor
cmpsl
jo
lods
addl
fsubr
test
pusha
xor
inc
push
dec
in
in
rcrl
jb
xchg
and
out
inc
xchg
addr16
xchg
mov
arpl
push
sub
ror
mov
fwait
imul
xor
lahf
jnp
cwtl
mov
test
and
push
aad
and
inc
fcmovbe
clc
cmp
loopne
movsl
sub
push
inc
pushf
push
inc
inc
and
data16
lods
pop
xchg
fsubrs
add
int
repnz
clc
in
popf
scas
xor
int3
jnp
lret
mov
xchg
jnp
out
sub
mov
cmpsl
lret
sub
cmc
jg
add
jbe
incb
push
out
sbb
cmp
jne
push
stos
mov
sahf
push
push
mov
xchg
pop
cmc
jle
push
movsb
mov
pop
mov
int
insl
lods
mov
jl
push
xchg
push
mov
and
stos
loop
cltd
xchg
inc
je
xchg
repz
add
xor
in
insb
in
shll
leave
and
add
pop
add
repnz
xor
inc
mov
add
add
jmp
mov
data16
cmpsb
movsl
inc
out
mov
je
fs
jecxz
loopne
mov
lahf
leave
ja
lods
hlt
outsl
jecxz
js
pop
adc
call
cs
mov
inc
sbb
sbb
mov
push
cmc
cwtl
shlb
push
mov
mov
pop
xor
hlt
fldcw
call
sbb
mov
mov
movsb
jbe
shl
mov
loope
icebp
xor
sub
shll
pop
jp
les
dec
test
jp
stos
sbb
fwait
imul
adc
sbb
negb
dec
sub
imulb
jl
add
dec
ljmp
aad
stos
bound
pop
cmpsb
fisttps
add
adc
popa
aaa
pushf
pop
aaa
in
cmp
call
jns
fdivr
pop
es
ret
jne
not
gs
mov
sbb
sahf
mov
pop
pop
cld
std
ret
xlat
stos
lret
pop
push
xchg
je
ss
inc
pop
inc
aaa
adcb
andb
out
pop
fmulp
lock
dec
mov
gs
scas
cmc
enter
repnz
popa
mull
divl
push
repz
cmpsl
mov
aas
sub
scas
into
test
push
sahf
lock
aad
in
add
int
in
jmp
stos
clc
imul
je
das
rorl
rcrl
dec
lock
pop
or
loop
pop
dec
into
repz
inc
pop
data16
pmuludq
adc
sub
hlt
mov
xlat
sbb
push
xor
adc
sbb
cmp
addl
fldcw
adc
lret
xchg
mov
mov
mov
mov
sub
ret
test
cmp
cmpsl
pop
sbb
xlat
dec
popf
jo
and
push
xchg
adc
push
lea
push
push
mov
mov
cltd
in
fcomps
mov
jae
xchg
fildl
nop
inc
es
iret
enter
adc
mov
or
sub
out
mov
movsl
push
inc
mov
mov
es
insb
cmp
int
add
mov
ja
js
cld
push
xlat
cmp
add
mov
pushf
or
cwtl
dec
or
ss
push
les
mov
aas
xchg
lock
add
aaa
test
adc
dec
movsb
adc
mov
dec
adcl
mov
sub
sub
cmc
jg
out
enter
popf
push
mov
xor
inc
cmp
mov
mov
mov
push
push
or
dec
pop
jecxz
push
sti
cmpb
bnd
sbb
fstpl
xor
xor
mov
popf
lds
test
cltd
rcr
sbb
adc
imul
xlat
adc
addb
pop
addr16
mov
xor
imul
dec
jle
test
pop
add
xor
jl
mov
scas
mov
mov
mov
mul
sub
imul
mov
mov
hlt
daa
jo
dec
mov
loope
jns
xchg
xor
sbb
in
cmpsb
sub
adc
cmpsb
fsubrp
sbb
or
dec
ljmp
and
fisttpl
leave
mov
mov
das
in
jle
ss
xchg
rcll
sbb
fldt
inc
das
dec
cld
jo
dec
iret
mov
pop
dec
cmc
mov
pop
cmp
fcmove
cmp
inc
pop
jbe
sub
or
xchg
add
popl
cwtl
lcall
insb
pop
inc
in
test
push
subl
shrl
subl
rol
test
sti
sub
jl
adc
shr
sbb
push
into
addr16
idivl
xchg
dec
cld
loope
out
cmp
mulb
ds
fdivrs
test
mov
xchg
stos
aad
mov
adc
mov
sbb
dec
or
aaa
ds
fs
ret
pop
jb
mov
out
inc
xor
push
outsl
dec
stos
out
jbe
or
lahf
in
es
in
jbe
std
jl
jmp
pop
cmp
and
and
les
into
and
cwtl
in
imul
mov
and
or
lcall
insl
adc
test
adc
jnp
adc
add
sbb
xor
push
jnp
inc
js
jecxz
push
inc
and
jp
and
inc
lahf
outsb
jl
jne
into
add
adc
test
jg
fildl
out
dec
xchg
sbb
mov
fwait
push
and
add
sbb
inc
cs
mov
insl
or
es
adc
cmp
or
imul
shll
outsb
sub
popl
dec
cld
jnp
loope
sti
out
adc
enter
fsubs
insb
cld
jecxz
lret
push
inc
das
push
ret
mov
mov
pop
int3
in
stos
sti
adc
dec
inc
dec
pop
and
add
push
mov
adc
cwtl
popa
mov
or
out
imul
jp
dec
cmp
sbb
lods
lret
in
jno
mov
cld
sarl
movsl
inc
es
xchg
movsl
cmp
ret
sbb
iret
pop
lret
cmp
jmp
fdivrs
mov
fcmovbe
movsl
ret
lds
sarl
jle,pn
les
sbb
movsb
rcrb
jecxz
hlt
jl
adc
xchg
xchg
ret
rclb
mov
leave
popf
loopne
xchg
out
mov
xor
hlt
and
mov
out
mov
stos
adc
jmp
xorb
add
sub
ret
cs
shl
dec
insl
lods
lret
push
je
lret
cltd
sub
loop
pop
out
lds
lret
lock
repnz
cwtl
rcr
and
mov
add
add
mov
lods
cmp
xchg
mov
xchg
xor
jmp
loope
sti
xlat
sub
fsub
inc
lcall
push
lcall
jae
sbb
mov
sub
lahf
adc
xor
xor
pop
push
xor
xor
push
imul
js
out
mov
mov
out
push
ret
aaa
adc
andb
test
es
cmp
iret
or
subb
sbb
addr16
leave
push
adc
pushf
out
cmp
lret
push
or
js
and
rol
faddl
aad
add
jno
jp
outsb
xchg
fmull
add
lods
mov
das
insb
cmp
add
pushf
adc
lret
xor
or
sub
push
xor
adc
xchg
mov
scas
inc
mov
test
fstps
fwait
lds
int
lods
mov
out
push
inc
fbld
dec
imul
arpl
sub
ss
adc
test
push
jbe
cmp
sub
leave
mov
in
sub
invd
xchg
push
ret
jmp
in
stos
mov
je
mov
lock
push
jbe
add
subl
xor
push
xchg
jno
adc
dec
fwait
pop
pushf
data16
jecxz
in
test
mov
pop
pop
mov
dec
push
and
dec
xchg
ss
pop
mov
shrb
sub
scas
test
sub
adc
fstl
in
test
lods
inc
or
mov
xchg
and
mov
stos
mov
imul
push
push
ret
or
mov
ljmp
shlb
cltd
jmp
sti
mov
push
pop
data16
addb
inc
popa
mov
aaa
icebp
es
xchg
imul
hlt
cmp
xchg
adc
das
sarl
xchg
inc
xchg
mov
adc
add
loope
and
jg
fidivrs
adcb
pop
ds
mov
hlt
jmp
push
xor
out
xor
shl
aas
xor
adc
push
xchg
pop
push
inc
movsb
dec
dec
aaa
inc
test
in
xor
cli
popa
cmpsl
je
test
fmull
mov
mov
ds
sub
lcall
mov
test
push
jp
das
pop
jb
jb
cmc
fistpll
aaa
out
xchg
sub
stos
mov
cmp
cli
in
movsl
imul
xchg
arpl
mov
mov
dec
add
inc
sub
cwtl
and
mov
pop
in
int3
je
sbb
stc
cmp
or
xchg
sahf
mov
sbb
jle
dec
xchg
add
repnz
loope
bound
cmp
adc
leave
xor
lret
jmp
in
mov
xor
jnp
inc
mov
out
push
add
mov
mov
mov
xlat
fdivrs
out
or
movsb
mov
aas
adc
movsl
inc
cmp
data16
sahf
and
dec
das
mov
stos
inc
rorb
mov
and
mov
cwtl
mov
push
sub
nop
push
shll
imul
cmp
dec
dec
xchg
pop
cmp
xchg
jle
cmpsl
xor
ja
and
inc
dec
fildll
stc
addr16
out
mov
testl
outsb
dec
sarl
insb
xchg
pop
adc
ds
sub
adc
adc
mov
or
push
test
sti
mov
mov
jo
inc
inc
pmaddwd
fadds
popf
leave
push
lds
and
sub
dec
imul
inc
or
stos
cmpsl
sub
jne
cmp
jb
mov
les
dec
fisubl
pop
jle
in
int3
incl
add
dec
es
pusha
jmp
cmp
bound
cmp
adc
fdivl
loopne
push
and
cmpsb
repz
inc
dec
fs
daa
iret
xorl
in
ds
insb
shrl
mov
stos
loopne
add
test
xor
lds
inc
inc
push
popa
mov
and
mov
mov
and
insl
dec
push
test
pop
scas
negb
movsb
and
idiv
lods
movsl
sub
inc
outsb
cmp
sbb
int
and
popf
xchg
shl
sub
movsb
and
stos
cmp
cmp
iret
pop
and
into
into
rclb
sub
rcll
add
or
pop
adc
jbe
push
xchg
mov
arpl
add
pop
insb
out
sti
and
push
lcall
into
and
pop
test
paddsw
sbb
xchg
mov
cmp
outsb
js
push
aam
mov
xchg
fistl
mov
mov
add
out
pop
inc
cmp
xor
cmp
fnstenv
sbb
dec
adcb
lahf
adc
cmpsb
out
push
std
popf
sbb
pop
mov
jp
jnp
sbb
mov
inc
jmp
or
xor
aad
xchg
idiv
push
jbe
in
xor
ret
mov
dec
enter
cmpsb
mov
add
adc
into
and
fisubrs
adc
out
adc
adc
push
mov
incl
mov
or
adc
and
cmpsl
mov
push
jg
dec
add
mov
lret
and
mov
sub
inc
scas
scas
negb
jg
push
cltd
imul
outsl
icebp
icebp
cmpsb
xor
ficompl
gs
scas
pop
mov
dec
add
xchg
push
daa
sahf
cmc
dec
pop
jmp
nop
in
push
cmc
icebp
jge
sub
xor
enter
adc
fldt
enter
inc
jmp
mov
dec
rolb
and
aad
sub
jno
mov
sub
scas
jo
fnsave
lock
xchg
pop
imul
push
hlt
shrl
push
xor
xchg
sarb
in
frstor
lea
daa
mov
mov
add
mov
jae
cmc
out
add
inc
sbb
mov
test
cmp
pop
pushf
idivl
in
mov
orb
mov
and
pop
add
fisttps
pop
push
sbbb
mov
mov
sbb
jecxz
xor
pminsw
or
scas
cmc
mov
cmpsl
or
imul
popa
sbb
push
movsb
rorl
fwait
cltd
inc
push
mov
add
stc
aam
icebp
out
dec
adc
ss
aas
xchg
push
adc
jle
ja
test
mov
in
xor
ja
sub
ja
pop
mov
mov
out
add
call
ret
sbb
subl
xlat
jns
fisubrl
inc
loope
imull
mov
push
mov
ret
adcb
leave
sbb
cs
inc
add
imul
imul
movsl
and
lods
ret
mov
lock
mov
cmp
les
rcl
push
insb
lea
xor
leave
jnp
xor
hlt
lahf
jbe
roll
stos
adc
mov
cmp
add
addr16
insb
dec
sub
mov
subl
mov
pop
cwtl
js
adc
push
dec
mov
daa
jge
loop
ds
out
push
icebp
jne
xchg
mov
pop
mov
push
xor
imul
addl
int
xchg
sarl
adc
stos
xor
popf
jns
out
or
popf
mov
cmp
adc
lea
and
int3
rol
jmp
psubd
adc
and
and
and
mov
or
push
mov
mov
outsb
pop
mov
loope
fmull
lret
push
mov
pop
dec
mov
inc
imul
shll
cmp
cld
mov
add
and
cmp
xor
add
insl
fstpt
or
sbb
in
adc
pop
xchg
lea
xchg
sti
adc
fs
repnz
jp
inc
out
aad
cs
and
shll
inc
and
xor
ds
cmp
js
ljmp
cmp
in
ds
imul
xchg
int
and
jmp
sbb
sub
jne
out
out
inc
lret
out
inc
das
les
cmp
sarl
iret
out
mov
add
push
mov
cmp
mov
push
outsb
add
add
pop
mov
adc
js
mov
cs
stc
mov
push
out
pop
enter
xor
and
mov
add
cli
fmull
sub
rorb
cli
cld
and
dec
out
test
shrl
xchg
lods
lcall
adc
push
decb
sbb
sbb
dec
cmpsl
lock
call
movsl
and
jp
pop
lahf
push
movsl
ret
aad
stos
adc
lahf
aaa
fsubrl
sub
pop
cmp
xchg
add
int3
dec
pop
adc
flds
je
pop
dec
stos
stos
sbb
iret
in
cmp
mov
adc
lret
mulb
leave
sub
lods
out
mov
fnstsw
stc
hlt
adc
jb
sbb
xchg
rclb
push
jl
rcl
xor
in
out
scas
repz
and
mov
cmp
fsubs
mov
xchg
adc
into
fsubrl
scas
cmp
dec
cli
xchg
in
mov
aam
jnp
xchg
popf
xlat
cmp
test
scas
pop
or
lods
sbb
add
dec
into
push
mov
mov
cmp
shl
into
mov
or
dec
dec
adcb
sbbl
cs
cmpsb
stc
push
loope
pop
jo
lods
loop
xchg
das
inc
xchg
push
aam
repz
bound
mov
mov
clc
jle
outsb
pop
cwtl
dec
les
test
fcoml
ds
add
sub
lods
inc
incb
test
insl
jecxz
push
mov
cmp
getsec
xchg
xchg
mov
lea
dec
cmp
fiadds
pop
cmpsb
es
jb
add
dec
addl
std
das
repz
lds
xor
add
fidivrs
js
lods
xchg
loopne
jp
rolb
ljmp
sbb
hlt
clc
mov
xor
hlt
xchg
xor
sbb
mov
insb
cmp
cmpsb
push
mov
pusha
xor
jno
xchg
mov
cmp
sbb
inc
inc
jmp
leave
inc
loope
push
js
push
cmp
in
mov
in
out
imul
xchg
rcl
sbb
cmp
cli
or
xchg
aas
push
push
ljmp
sti
cmpsb
push
ja
inc
and
add
lods
stos
xor
xchg
scas
mov
pop
repnz
and
jecxz
add
adc
arpl
jbe
jnp
pushl
lret
je
mov
insb
mov
mov
test
dec
pop
sar
sbb
je,pn
fdivl
xorb
add
cmp
mov
cld
lea
repz
mov
push
push
sbb
mov
or
dec
into
xor
inc
addr16
in
mov
jl
dec
mov
fimull
pop
pop
push
jo
incl
ds
mov
push
sbb
out
in
aam
bound
rorb
xor
push
mov
xchg
mov
inc
bound
add
pushf
sub
sbb
aaa
dec
and
pop
idivb
out
imul
mov
jecxz
in
cmp
repnz
mov
sub
xchg
test
stos
fldcw
imul
push
clc
fisubrs
cmp
sub
mov
js
push
cltd
pop
xor
jne
addb
and
sub
mov
mov
jecxz
popa
ret
es
mov
mov
rcr
js
sbb
rcll
dec
sub
dec
mov
mov
dec
outsb
push
fimuls
or
pop
xlat
lea
lods
ds
xchg
das
mov
roll
xchg
push
repnz
cwtl
in
pop
mov
xor
ret
sub
test
shlb
cmpsb
loope
dec
lahf
ss
cmpsb
imul
not
sbb
mull
pop
mov
adc
shlb
shl
mov
and
push
cmp
push
scas
mov
shl
movsb
movsb
ss
push
push
inc
sub
in
lahf
aam
and
and
ret
push
pushf
sbb
subl
inc
nop
cmp
imul
xchg
lods
xlat
push
adc
and
mov
outsb
push
pusha
mov
push
mov
aaa
xchg
push
adc
mov
test
xchg
pop
or
sub
lods
aad
shl
xchg
mov
xor
jecxz
icebp
mov
mov
mov
xchg
xlat
lods
mov
ds
scas
cmpsb
bound
or
es
in
repz
mov
cmpsb
push
jmp
push
push
add
repnz
xchg
icebp
aas
jp
xchg
aam
je
into
data16
jle
rorb
movsb
stc
xchg
lods
sbb
mov
mov
mov
or
jle
outsl
shrb
fildl
add
inc
inc
addb
pop
push
push
arpl
int3
or
mov
lret
loope
and
or
jo
insl
mov
lods
icebp
sbb
int
mov
arpl
push
sub
mov
rorb
push
adc
inc
sbb
dec
mov
pusha
inc
and
idivl
jae
addb
xchg
test
dec
iret
out
mov
jb
jnp
in
popa
dec
sub
pop
mov
stos
ret
add
push
ja
add
jne
push
push
jbe
stos
and
es
add
sbb
and
or
jl
sub
add
mov
jne
test
adc
mov
mov
test
lret
sbb
pop
and
mov
lea
data16
mov
sbb
sahf
enter
out
shlb
sbb
out
mov
mov
push
mov
int3
fimull
push
push
fcmovne
mov
mov
pusha
jbe
insb
je
ja
gs
fimuls
sbb
add
ret
and
popa
cmp
dec
mov
dec
je
outsb
aaa
mov
push
aaa
jmp
push
jnp
mulb
dec
stos
sbb
or
inc
repnz
cli
in
pop
dec
mov
cld
sub
subb
cltd
or
je
push
mov
push
rcrb
xor
fcompl
insl
loope
or
cmp
jg
cld
mov
mov
sbb
dec
fwait
jnp
mov
pop
fisttps
and
test
les
jns
gs
ret
dec
jns
int3
ss
in
aam
adc
adc
push
ja
out
cmp
jbe
fnstcw
loop
mov
test
lock
or
jnp
xchg
in
orb
and
mov
int
jmp
ljmp
or
and
sarb
into
push
testb
dec
push
daa
out
fnsave
mov
into
add
cs
pop
pusha
ss
ret
in
cmp
in
jno
mov
popf
in
jl
push
stos
push
out
jg
gs
sub
dec
leave
lds
mov
and
and
cmp
inc
movd
iret
insl
movsl
pop
lahf
inc
ja
enter
and
scas
es
lods
fiaddl
jno
cmp
sahf
fcmovbe
inc
es
fistl
sub
mov
push
xchg
in
inc
pop
loop
mov
in
pop
es
call
repz
lahf
mov
addl
fstps
orl
in
jge
dec
std
je
sbb
out
popf
mov
inc
sub
jge
arpl
cmp
add
pop
scas
push
dec
or
lods
mov
or
cmp
mov
sub
push
mov
icebp
push
lock
cmc
mov
cmp
fidivs
xor
aaa
aam
fsub
movsl
mov
lds
mov
repnz
cltd
pop
push
test
aam
xlat
cmc
mov
sbb
cld
lea
pop
inc
bound
int
xchg
xchg
addl
pop
push
dec
xchg
scas
cmp
lcall
lret
stos
popa
or
lods
adc
and
push
das
xchg
nop
xchg
into
popf
mov
stos
pushf
add
adc
aad
xor
hlt
cmp
cmp
cld
enter
and
adc
lcall
xor
incl
jae
push
shlb
pop
xor
test
movsl
mov
inc
shrb
in
test
mov
sub
xchg
sti
loop
jecxz
mov
and
sub
or
das
push
jl
daa
push
add
cmp
lds
inc
dec
sti
jnp
call
mov
popa
dec
movsb
mov
pop
insl
lahf
add
cltd
fs
nop
loope
jb
or
fs
push
jecxz
mov
repnz
sub
pusha
loop
mov
call
js
notl
cs
push
jmp
mov
push
mov
jno
test
jge
ret
mov
mov
insl
inc
push
push
pop
repz
xor
out
mov
repz
in
int3
jecxz
xchg
leave
movsl
in
jmp
subl
int
scas
aad
mov
dec
loope
in
rcrl
loopne
or
cmp
lahf
test
ss
push
arpl
jnp
mov
sbb
or
cmp
mov
shll
cmp
lods
push
imul
jne
cmpsb
daa
xor
dec
pop
dec
and
es
cmp
sbb
jae
pop
in
mov
mov
in
mov
fwait
shrl
push
pop
das
sub
pop
outsl
mov
inc
scas
mov
pop
or
xchg
adc
xor
outsl
xor
outsb
jl
lcall
sub
negl
push
fstpt
pop
andl
and
jge
dec
xor
xchg
loope
scas
and
adc
in
lods
pop
xor
lods
jp
mov
fs
bound
xchg
jnp
pop
sbb
lret
mov
loopne
mov
in
fs
lcall
cmp
ljmp
fcoms
or
xchg
and
rcrl
lods
adc
jnp
push
xchg
inc
or
idivl
je
dec
lds
rorb
adc
add
mov
or
jno
jp
or
mov
not
dec
xchg
or
and
in
mov
repz
arpl
fcompl
imul
pop
mov
repz
xchg
out
xchg
and
inc
sbb
ret
pop
jge
out
cmp
scas
xchg
cmp
movsl
jne
dec
sbb
xchg
jne
xchg
leave
les
leave
mov
cltd
das
and
popl
test
push
mov
shrb
incl
mov
adc
scas
adc
movswl
xchg
cmp
movl
faddl
repz
pushf
shlb
cs
es
clc
divl
inc
pop
dec
ficomps
das
inc
xchg
inc
outsb
push
xor
cmp
fdivrs
or
mov
sarb
cmp
outsl
enter
sub
test
sbb
mov
ret
push
popa
arpl
jle
push
iret
xchg
arpl
and
cmp
push
les
or
push
cwtl
push
data16
push
add
adc
addb
or
and
and
das
cmc
sub
and
in
add
iret
add
jge
xchg
cltd
mov
xlat
pop
adc
mov
inc
sahf
repz
aad
insl
shr
into
xchg
inc
and
sbb
inc
and
dec
imul
jmp
or
ficomps
repnz
or
inc
dec
mov
gs
subl
ret
stc
sti
incb
in
cmp
ljmp
dec
lret
shlb
jbe
xchg
insl
mov
jl
jg
inc
mov
adc
imul
imul
or
cmp
outsb
jp
fbstp
lcall
mov
xor
gs
insl
ret
es
popf
jae
fisubrl
fadds
mov
dec
out
dec
mov
insl
int
ss
in
js
add
cwtl
push
imul
xchg
push
push
jo,pn
shll
cmp
lds
or
test
dec
fadds
shr
pop
enter
cmp
iret
js
orl
fldt
insl
add
push
add
push
stc
mov
gs
add
add
shrl
pop
loop
outsb
ret
outsb
movsb
xor
and
or
pop
pushf
aad
lret
adc
push
lcall
sti
mov
stos
mov
cmp
sbb
jb
xlat
dec
cld
mov
inc
mov
stos
lret
xchg
push
aaa
dec
sub
jno
add
sbb
stos
xchg
ffreep
push
movsb
flds
sbb
or
jecxz
xor
cmp
cmp
sub
dec
aam
mov
adc
adc
sub
push
sub
test
jmp
insb
or
push
repnz
insb
jne
sbb
jae
hlt
scas
mov
mov
dec
cmpsl
inc
jb
jge
lret
cmpsl
arpl
add
adc
rorb
cmc
mov
cmp
mov
cmp
mov
push
mov
inc
pop
dec
adc
sbb
fstl
outsl
test
push
sti
push
dec
roll
and
jecxz
push
cwtl
daa
cwtl
push
ja
stos
cmp
jle
mov
push
xor
adc
inc
pop
jae
push
repnz
shll
mov
mulb
sti
popf
push
sbb
cs
jo
lods
sub
aaa
and
push
in
push
inc
or
or
jmp
jbe
mov
ss
insb
adc
push
push
push
mov
push
sbb
pop
xchg
dec
movsb
dec
adc
xor
lea
dec
mov
jnp
add
adc
jno
pop
movsb
or
inc
pop
cmp
in
imul
bound
sbbl
push
xor
adc
lds
dec
add
fwait
scas
int3
roll
icebp
je
and
dec
loopne
add
xor
jge
lock
push
pop
jle
mov
inc
dec
ds
xor
push
push
rcr
popf
sub
mov
sahf
pushf
and
daa
in
adc
dec
sbb
fwait
daa
out
mov
aaa
pop
sbb
loopne
call
scas
cmp
std
inc
shrb
bound
pop
push
and
adcb
jnp
cmpb
jnp
nop
adc
cwtl
pusha
jno
or
add
imul
mov
out
add
int3
cmc
insl
cwtl
sub
test
jno
lahf
test
enter
push
sub
pop
or
sub
imul
orl
mov
loop
inc
dec
mov
jbe
aas
daa
add
cltd
add
daa
jnp
adc
add
pop
xlat
jge
jmp
rolb
push
mov
sub
insl
or
inc
jp
int
or
jl
jp
leave
aad
adc
fdiv
or
ds
imul
jbe
dec
icebp
xchg
mov
add
push
pop
hlt
testb
out
mov
test
daa
stos
fiaddl
rclb
ss
cmp
pusha
out
inc
imul
pop
sub
test
js
bnd
aam
pop
sbb
or
dec
jns
cmpsb
scas
test
mov
bnd
dec
insb
sub
mov
leave
lret
fs
add
insl
imul
adc
lods
xchg
xchg
pushf
in
fildll
xchg
xorl
mov
int3
scas
pusha
daa
hlt
pop
dec
adc
jbe
scas
clc
ret
ds
stc
cmp
rolb
jecxz
jbe
rcrb
jmp
add
out
or
jno
incl
in
jmp
lahf
adc
adc
movsb
cmc
mov
in
push
push
rol
hlt
cli
add
and
cmpsl
repnz
jbe
mov
popf
fs
dec
mov
ret
cmc
jo
and
xorl
test
or
adc
popa
pop
adc
imul
jg,pt
daa
imull
xor
inc
xor
orb
sahf
mov
xchg
xchg
sbb
lea
push
std
scas
xchg
outsb
rcll
popf
std
sub
es
sti
int3
mov
pop
mov
or
out
push
rcr
jb
xchg
cmp
fsubl
insb
sbb
jmp
cmp
test
mov
sbb
push
mov
jbe
add
adc
idivl
push
sbb
ja
ljmp
adc
pop
out
mov
in
into
jne
popf
in
sub
push
sbb
adc
sahf
xor
shr
ret
sub
lock
pop
bound
xor
sbb
lds
es
push
rorl
addr16
push
sub
mov
test
lcall
je,pn
iret
mov
pop
xchg
bnd
mov
sub
or
jno
in
std
pop
push
push
repz
mov
loop
aad
adc
repnz
mov
pop
insb
push
out
mov
mov
fsubr
subb
sbbl
mov
clc
push
dec
sbb
mov
popf
jmp
xlat
or
nop
push
push
sub
jns
daa
inc
shll
push
or
xchg
cld
pop
jo
cmp
dec
andb
xchg
sub
and
outsb
pop
stos
cmc
xlat
pop
ds
cld
aad
sbbl
push
pop
and
jge
cmp
inc
outsb
cmpsl
hlt
gs
popa
or
lsl
sub
mov
mov
repz
xor
das
insb
sub
jo
popl
jae
pusha
inc
cmc
mov
mov
mov
fcomip
scas
outsl
pop
into
cld
pop
jmp
out
xchg
jp
in
sahf
mov
dec
xor
iret
push
mov
add
and
adc
cli
jp
xor
test
xchg
jl
rcrl
lock
push
out
lcall
mov
push
xor
rorb
mov
pop
loopne
pop
arpl
push
shlb
repnz
repnz
es
inc
jnp
stos
nop
mov
add
push
sbb
and
inc
pop
je
inc
mov
stc
popa
dec
into
jnp
cld
adc
add
shll
and
test
adc
in
fwait
and
inc
mov
pusha
push
pop
xor
mov
loopne
and
insb
je
mov
popl
inc
xchg
aas
or
shrl
mov
dec
pop
repnz
xlat
ret
jnp
in
int3
ja
jne
cmp
push
inc
mov
push
lahf
or
mov
inc
movsl
data16
mov
jg
shrl
jg
out
pusha
mov
daa
int
sbb
pop
out
jns
fistl
cld
inc
lock
movsb
fistl
lods
add
mov
or
add
pushf
in
not
pop
ss
adc
cmp
fs
mov
andl
pop
movsb
adc
dec
pop
orb
cwtl
xlat
scas
lahf
jge
in
test
sbb
es
mov
ja
ljmp
cwtl
mov
jp
mov
pop
les
sub
add
mov
jne
adc
test
ror
movsl
movsl
mov
xchg
sbb
and
mov
iret
dec
sbb
ja
mov
pop
scas
adc
call
scas
mov
sub
mov
jmp
inc
ds
lock
faddp
nop
xchg
lock
shlb
movl
inc
shll
push
mov
sbb
inc
shl
imul
cmp
cmp
fcmovb
in
ror
dec
or
sub
xchg
cmp
pusha
mov
loopne
or
test
outsl
pop
lcall
cmp
sub
xchg
jmp
jmp
mov
fldt
jl
add
scas
xorl
mov
or
and
imul
mov
xchg
sub
fsubrl
ret
sahf
dec
jbe
lcall
adc
xchg
sub
mov
cmp
popf
sub
hlt
mov
or
sarb
mov
pop
push
add
xchg
mov
outsb
call
push
cmc
in
pop
jo
dec
pop
outsb
cmpsb
test
mov
xchg
shlb
and
insl
popa
mov
sbb
fdiv
push
and
xchg
mov
add
mov
das
cmp
push
mov
lods
jbe
je
add
add
jbe
movsb
xchg
jle
mov
cld
adcb
sbb
xor
push
ss
mov
xrelease
mov
test
fiadds
stc
mov
lret
shlb
push
mov
fisubrs
stos
aam
xchg
add
ffreep
pop
roll
and
out
mov
lea
mov
daa
cmp
out
lock
jb
xchg
pop
cwtl
inc
sbb
repz
sub
jns
or
idiv
cmp
repz
mov
aam
insb
mov
je
test
push
jb
clc
jb
popf
mov
cmpsl
repz
orl
sahf
xchg
in
in
cmp
mov
in
inc
ljmp
jecxz
arpl
push
xchg
sbb
pop
mov
loope
sti
stc
adc
negb
mov
lea
push
add
mov
ret
test
xor
adc
iret
push
adc
xchg
test
incb
adc
add
add
fwait
cmp
cmp
aaa
in
mov
add
mov
sub
sub
mov
mov
push
push
sarl
int
adc
sbb
or
popf
daa
mov
sbb
stos
adc
test
dec
js
adc
ljmp
dec
xchg
sub
cli
imul
cs
push
out
cmp
or
pop
jge
sub
mov
pop
mov
mov
test
xchg
adc
cmp
mov
lods
int
incb
push
inc
add
sar
adc
stc
into
or
adc
jne
mov
dec
xlat
mov
pop
xchg
mov
xchg
pusha
in
pop
cmp
sub
lret
testl
mov
sbb
ljmp
sbb
inc
mov
dec
lds
gs
pop
sarl
mov
and
sahf
repnz
subb
jge
insb
sub
add
sbb
adc
es
aad
leave
cmp
lds
xchg
aad
cltd
xchg
lds
xor
repz
fldenv
cmp
add
out
push
sub
jl
imul
push
mov
stos
inc
pusha
ja
ret
push
mov
cld
push
call
outsb
aaa
jne
stc
mov
sbb
test
into
aam
fdivs
or
jns
call
xchg
mov
sub
sbb
cmp
add
sbb
mov
mov
rcr
mov
or
inc
lock
scas
and
and
inc
movsb
in
jecxz
xchg
repz
decl
mov
push
jo
xor
sahf
idivl
movsb
add
xchg
fwait
sti
cmp
mov
jl
jo
and
add
scas
and
aas
aas
popf
insb
rcll
adc
jns
jbe
sub
jp
jnp
loope
mov
aam
adc
popw
xor
in
lock
ja
icebp
sub
roll
push
mov
shlb
inc
cltd
out
insl
ret
gs
int3
jmp
xor
or
xor
insl
testl
rolb
mov
inc
xor
jl
xchg
das
fstpl
sub
in
push
out
ficoml
je
push
aam
mov
and
subl
outsb
movsl
cli
rcrb
xchg
mov
add
movl
xchg
int3
xor
or
sub
sub
mov
loopne
mull
jle
dec
sbb
mov
sub
xor
add
push
mov
cmp
push
pop
inc
sti
inc
test
repz
push
mov
jle
mov
insb
cmpsb
xor
or
push
loop
mov
pushf
xor
xchg
scas
sarl
pop
into
and
ret
sbb
xchg
sbb
jno
push
or
lods
sbb
pop
xchg
push
loopne
jo
mov
push
and
jo
xlat
dec
mov
add
jp
lret
sub
sbb
out
pop
repnz
jmp
cmp
jnp
push
push
es
mov
out
aaa
in
inc
mov
xlat
dec
sbb
cmp
lahf
in
dec
push
repz
pop
icebp
stos
mov
push
mov
stc
sbb
fwait
mov
or
push
xor
sub
pop
xchg
pop
bnd
sbb
mov
inc
pop
pop
jle
mov
pusha
pop
ss
bt
push
rol
lea
popa
cmp
add
xchg
insl
sub
and
jl
sub
fbld
fdivrs
lds
xchg
xchg
sub
stos
dec
sbb
sub
popf
mov
sbb
jns
cltd
scas
jo
inc
mov
xchg
int3
xchg
add
lds
fcoms
adc
mov
pop
or
in
mov
and
dec
adc
rcrb
dec
inc
imul
mov
or
xchg
into
das
mov
in
mov
jge
jg
adc
sub
push
decb
xor
lods
and
scas
lds
jl
or
xchg
pushf
rcll
arpl
adc
xor
lock
sbb
inc
scas
push
add
fs
cmp
xor
pop
gs
ficomps
bound
push
jecxz
imul
mov
sbb
push
sub
dec
idivb
jmp
sbb
rorl
int
out
popa
popl
fildl
enter
out
xchg
jno
mov
dec
mov
cmp
jnp
incl
leave
xchg
stos
popf
or
jb
pop
cmp
orb
lods
inc
cmpl
xchg
daa
cmp
fwait
add
xlat
imull
cltd
sbb
adc
lcall
cmp
push
cltd
adc
aam
push
dec
jg
in
dec
cmp
inc
ds
dec
pop
sub
dec
jno
pushf
mov
cmp
push
addr16
ficomps
cmpb
nop
push
in
adc
imul
inc
outsl
pop
xchg
out
enter
mov
rolb
cmp
out
subl
push
or
lds
cld
jge
rcll
repz
pop
in
out
dec
out
std
mov
or
pop
test
pop
scas
pop
mov
jo
pop
aas
sbb
cmpb
jbe
mov
lret
jnp
cmpsl
fbstp
das
mov
addr16
stos
iret
stos
addr16
inc
pop
roll
jmp
pop
mov
icebp
popa
add
dec
outsb
add
mov
fisttpll
mov
inc
je
xor
mov
push
cmp
lcall
cld
inc
push
imull
std
in
scas
jmp
push
xor
mov
sub
repz
loope
out
in
addl
xchg
faddl
stc
xor
xor
test
lcall
stos
popf
or
or
push
push
adcl
jl
inc
cld
cmp
mov
xchg
not
jae
sbb
xchg
adc
in
lods
sbb
jg
jg
cmpsb
insb
les
icebp
jno
and
aas
xchg
mov
popf
pop
int3
mov
mov
cmp
sbb
mov
cmp
jge
cmpsb
jg
push
pop
xchg
or
in
lcall
or
stos
push
push
mov
pop
dec
sbb
jno
int
loope
mov
pop
xchg
in
xor
pop
pop
lahf
mov
out
insl
movsb
push
mov
mov
ret
in
call
out
movsl
call
mov
push
adc
lods
adc
popa
mov
fstl
fsubl
xor
in
sub
cltd
imul
pop
aas
mov
push
adc
mov
pop
loopne
inc
int3
fnstenv
mov
addl
enter
cmp
sbb
inc
pop
adc
jae
sbb
inc
dec
jl
pop
jbe
in
clc
rcrl
xor
shlb
jns
enter
cmp
lea
fsubl
mul
iret
dec
mov
jb
aam
xchg
cmp
iret
jl
pop
cmp
int
mov
shll
jne
fsub
test
pop
cmp
sub
aaa
not
icebp
or
mov
cmp
or
lret
es
jbe
mov
xchg
or
jg
rclb
scas
leave
sbb
lods
jno
jno
jmp
dec
nop
inc
dec
xchg
cmc
sbb
loop
ja
js
fadd
or
ljmp
inc
and
xchg
scas
sbb
pushf
xchg
mov
pop
leave
mov
rorl
add
mov
mov
je
outsb
jb
adc
imul
or
stos
enter
mov
fcomps
add
ss
lret
scas
pop
call
cli
fstps
divb
xchg
scas
push
repz
push
ret
cmp
andb
lds
imul
cmp
leave
inc
cs
sub
dec
pop
push
add
sbb
stos
mov
out
adc
lea
ror
loopne
push
decb
cs
ret
outsb
out
or
rcrl
inc
outsl
out
rorb
test
mov
ret
int
das
dec
in
cmp
test
js
adc
ss
jle
lods
aam
in
xor
jl
jmp
mov
xchg
adc
add
jae
mov
call
pop
hlt
cmp
dec
mov
push
inc
test
mov
call
ds
xchg
movsb
inc
dec
jbe
dec
imul
icebp
ja
jl
sti
insb
es
mov
cli
dec
rcrb
push
sbb
out
loope
loope
cld
arpl
and
das
xor
jb
xchg
out
push
in
push
jb
divb
jle
ret
aad
mov
popa
push
sub
fstl
cmp
sbb
lods
cmp
loop
cld
cmp
in
inc
jb
mov
jl
es
test
idiv
pop
out
add
dec
movsb
or
adc
jbe
loop
add
arpl
inc
cmp
test
lds
cli
lcall
test
sahf
aas
pop
sti
fisubrl
push
mov
fiadds
insb
fisttpl
loopne
ja
pop
mov
mov
setns
jnp
movsb
cs
hlt
aam
enter
push
pop
out
aas
or
aad
mov
aad
inc
mov
pop
xchg
insl
cmp
mov
sbb
aad
movsb
aam
out
lods
sub
icebp
and
dec
jne
rcl
sbb
dec
cld
or
mov
pop
adc
sub
pop
int
stc
cs
sbb
test
call
gs
fdivr
lods
call
addr16
inc
adcl
leave
dec
jo
jo
jmp
xor
inc
jae
test
fnstsw
into
in
outsb
cmc
push
mov
pushf
or
mov
icebp
mov
sub
lods
inc
dec
push
fisttpll
pop
in
repnz
dec
inc
xchg
imul
loope
dec
aad
lods
jg
or
test
fucomip
and
aas
cmp
pop
xchg
sbb
lock
dec
mov
sub
xchg
into
fcompl
jmp
pop
cmp
cld
shlb
daa
inc
loopne
lcall
out
nop
neg
out
in
popf
sbb
mov
push
xchg
insb
or
in
adc
leave
fwait
test
mov
in
sub
clc
adc
jmp
cmpsl
adc
shl
pop
inc
sbb
test
mov
js
inc
jno
scas
adc
xor
jecxz
pop
xchg
dec
mov
aam
leave
cmp
in
pop
lock
add
outsl
movsb
cmp
repz
sbb
cli
arpl
cld
outsb
loop
adc
mov
push
sub
adc
or
mov
dec
mov
outsb
cmp
add
lahf
addl
fstpt
xchg
and
ret
jmp
pop
fnstsw
sbb
cmp
das
push
int
das
dec
mov
enter
cmp
mov
call
rol
add
adc
loopne
mov
sub
inc
lahf
iret
clc
mov
inc
pop
sbb
mov
and
inc
sbb
divb
je
cmp
loope,pt
aad
in
sbb
and
dec
lret
inc
and
cli
adc
leave
xor
jno
iret
ljmp
sbb
add
pop
fnsave
lret
sub
imul
mov
fwait
in
insl
and
pop
mov
mov
andb
icebp
add
mov
stos
or
add
ret
jae
stos
sbb
mov
dec
mov
ja
and
ljmp
adc
int3
sub
insb
scas
sub
adc
cli
mov
push
xor
inc
jmp
cmc
sbb
mov
pop
and
mov
pop
stos
and
sbb
or
mov
popf
sub
or
jno
std
push
stos
cmc
mov
cmp
insb
add
push
add
sti
inc
mov
pusha
mov
das
xchg
rorb
std
fs
fadds
outsb
aam
iret
cmpb
rorl
jp
and
mov
dec
in
jle
rol
ss
mov
in
rclb
cmp
lea
fcmovnbe
mov
dec
cmp
jmp
mov
call
daa
repnz
rclb
xchg
int3
mov
adc
cmpsl
or
mov
test
dec
sbb
pop
mov
push
jl
jg
inc
loop
or
push
std
push
push
mov
mov
mov
popf
loope
mov
ljmp
rclb
aad
and
xchg
jne
movsl
sbb
outsb
xchg
and
aam
inc
xchg
int
rcl
imul
xchg
and
lahf
iret
test
mov
cwtl
xor
mov
mov
es
loop
aaa
jmp
cmp
les
mov
ljmp
sbb
cmp
or
jl
stos
push
stos
shrl
push
lret
sbb
cmp
jb
enter
xor
lods
jb
sub
arpl
movsl
fcos
cmpsb
dec
popa
hlt
int3
lahf
inc
mov
ljmp
mov
dec
in
xor
sahf
pusha
jg
lock
js
dec
hlt
pop
jno
mov
imul
mov
mov
jge
inc
push
push
mov
xchg
in
repz
adc
repnz
sub
mov
movsl
xor
outsb
inc
xor
mov
ret
ret
mov
aam
test
xchg
dec
push
mov
scas
fcom
sub
shl
fcomps
jl
push
icebp
negl
inc
imul
sbb
push
xchg
pop
or
in
fwait
jnp
fdivrl
aas
mov
dec
sbb
sub
fdivs
adc
jl
pop
fmuls
mov
mov
stos
adc
imul
xchg
inc
add
and
stos
lret
push
sahf
xor
xor
xor
mov
dec
xchg
push
mov
out
data16
cmp
push
test
add
sub
subl
orl
addl
sub
loop
repz
dec
sub
xchg
scas
xor
mov
dec
cmova
and
movsb
push
fstpl
xchg
jns
enter
jb
jl
into
lods
sbb
mov
push
jg
scas
mov
loop
sub
out
or
in
outsl
into
pop
jb
ljmp
out
sbb
fisubrs
cmp
mov
mov
xchg
push
or
repz
sahf
test
sbb
es
stos
add
sahf
mov
xchg
jae
mov
adc
ss
dec
lret
dec
lea
pop
jle
in
xor
pop
mov
js
and
mov
cmp
aad
out
mov
cltd
dec
pop
push
jnp
push
xchg
push
xor
push
dec
mov
mov
sbb
xchg
stos
jl
in
xchg
imul
jg
mov
out
inc
les
in
mov
loope
shrb
add
cwtl
inc
xchg
mov
add
repnz
push
sbb
ss
insl
icebp
lock
add
cld
xchg
sub
push
popf
fisubrl
lcall
jbe
pop
das
adc
dec
test
inc
ds
xor
repnz
mov
jl,pn
cmpl
in
cmp
insl
jno
sbb
leave
pop
out
cmpsb
bound
cmc
xchg
clc
dec
dec
cli
xor
imul
js
mov
add
shrb
mov
pop
inc
int3
daa
jnp
loope
rclb
adc
dec
sar
fbstp
xchg
std
mov
jb
testl
xor
jno
jne
push
sbb
jb
xchg
fcompl
orb
sub
xor
push
mov
jmp
std
jnp
daa
inc
adc
dec
insl
aam
je
fisttps
shll
pop
jae
jo
jnp
lcall
push
bound
lods
xchg
mov
loop
icebp
lret
xor
sub
sahf
push
imul
lock
imul
scas
clc
cmp
daa
incl
sub
pop
cmpsb
mov
jle
push
es
aad
mov
test
sub
add
inc
cs
mov
pop
out
pusha
lock
or
scas
push
imul
cld
push
imul
daa
jns
xor
xor
insb
fidivrl
ficomps
push
fimuls
addr16
jae
jne
add
mov
mov
cmp
mov
add
aas
movsb
data16
xor
sbb
movsb
sbb
adc
cld
int3
pop
dec
cmp
cld
and
insl
repnz
xchg
jns
rclb
out
jns
mov
push
dec
insb
dec
shlb
add
in
rol
xchg
cltd
mov
mov
leave
test
xor
mov
inc
pop
jno
or
and
mov
pop
sbb
jbe
ljmp
lcall
stos
lods
cmc
mov
out
or
movsl
sub
dec
jne
and
sub
test
jg
adc
mov
popf
xor
ret
incl
and
pop
movsl
std
xchg
into
push
test
mov
arpl
xchg
cmp
inc
lahf
cs
mov
sbb
call
mov
pop
push
aas
fadd
clc
mov
icebp
cmp
fisubs
or
sbb
xchg
imul
test
adc
fnstcw
inc
scas
jp
mov
mov
clc
int
mov
cmp
adc
insb
les
mov
pushf
lods
mov
stos
cld
add
lcall
push
sub
jle
fwait
repz
stos
test
pop
in
sub
call
pop
mov
fsts
jns
jle
adc
adc
add
push
lods
std
addb
add
jg
dec
adc
mov
sahf
je
xchg
push
popa
add
aad
sub
aas
mov
jb
or
cltd
xor
lods
mov
lcall
mov
and
fnstcw
sub
mov
pop
jbe
scas
add
loop
jae
in
push
add
test
xlat
rcrl
cmc
mov
jb
mov
and
add
lds
add
add
mov
xlat
inc
or
mov
imul
mov
add
mov
stos
jmp
add
sbb
cwtl
add
movsb
incl
inc
popf
fldt
mov
lcall
scas
jecxz
or
movsl
cltd
aam
inc
inc
mov
push
xchg
jge
cmp
enter
mov
and
add
sbb
faddp
in
inc
mov
xor
jecxz
clc
subl
fcomip
and
ja
jae
sub
mov
repz
dec
movsl
fistl
jg
xchg
xor
repz
add
mov
popa
rcrb
lods
push
cmpsl
std
or
std
jno
mov
xchg
add
js
popa
add
add
pop
lds
dec
pop
das
push
lret
sub
shrl
sbb
add
mov
or
hlt
and
inc
stos
xchg
popl
aam
ficoml
xchg
adc
mov
mov
push
insb
xor
xchg
leave
adc
pop
mov
out
sub
mov
outsl
xor
aas
out
sub
fistps
lcall
cmp
xor
dec
xchg
mov
sub
jno
and
insl
scas
daa
lock
jno
jg
xor
inc
adc
in
les
pushf
sbb
pop
mov
fidivl
push
aam
jp
push
xor
fdivs
jb
push
bound
loopne
scas
xchg
shll
inc
sub
xorb
adc
sbb
enter
dec
cmp
jns
pop
sbb
jb
and
ds
pop
jno
repnz
push
pop
jmp
push
es
ret
aas
sbb
jmp
sub
sahf
pop
loop
inc
dec
repnz
int3
nop
ja
mov
mov
push
add
into
jp
push
mov
loopne
ret
movsb
add
sub
shlb
sub
adc
push
fidivl
call
cmp
into
jno
ss
test
xchg
mov
sub
push
jp
daa
outsb
in
inc
ja
mov
sahf
test
popf
add
fwait
sub
and
les
push
test
adc
imul
sti
xchg
std
js
dec
pop
mov
shl
movsb
das
rol
repz
loop
fimull
sub
call
test
mov
xorb
sbb
repz
inc
lds
loopne
ja
xchg
cmpsl
into
jp
fucomip
cmp
sahf
xor
out
cld
in
mov
imul
gs
leave
enter
testl
inc
jns
je
or
rolb
les
pop
in
mov
sbb
inc
int
add
fildl
repz
sahf
xchg
jmp
frndint
inc
pop
pop
adc
dec
pop
add
das
mov
call
in
jecxz
daa
lret
push
or
ja
pop
lret
test
jge
push
dec
pushf
enter
stc
mov
int3
push
cli
cmp
mov
mov
movsb
inc
push
inc
xorl
push
cli
jo
in
test
and
aad
xor
xlat
mov
or
and
add
mov
mov
mov
ss
xchg
scas
arpl
jge
or
mov
xor
aam
clc
in
pop
mov
sbb
xor
sbb
ret
inc
adc
cmp
sbb
icebp
lods
test
stc
mov
in
push
stos
sbb
inc
mov
push
int3
sahf
sbb
add
and
push
sti
xor
rolb
mov
call
gs
push
lahf
out
push
es
and
movsb
adc
or
out
pop
sarl
enter
ret
decb
sub
push
and
pop
push
fisubrs
xchg
inc
test
out
ss
ds
mov
das
dec
jae
clc
outsb
push
mov
iret
mov
lret
rcll
sti
fsubs
mov
cmpsb
icebp
aad
imul
pop
bound
aam
cmpsl
push
push
push
mov
mov
shl
std
pop
or
js
jg
jl
mov
pop
xchg
frstor
sbb
inc
in
cmpl
dec
push
iret
or
iret
mov
jne
int
xor
cmpsb
push
stc
sub
cltd
arpl
popf
sub
test
jno
fistpll
shr
or
push
sub
jmp
push
test
enter
cmpsb
out
or
data16
mov
or
int3
push
loop
mov
xor
andb
repnz
outsl
jmp
jge
daa
sbb
lods
ret
int3
subl
sub
xchg
xor
sub
or
cld
add
loope
add
jne
or
xor
test
jae
mov
call
add
js
pushl
loopne
lods
or
insb
leave
inc
mov
jo
iret
mov
mov
mov
sub
dec
movsl
pcmpeqw
cmp
xor
negl
adc
dec
mov
popf
sub
mov
out
pop
xchg
out
inc
mov
cli
jp
or
loopne
leave
sbb
mulw
and
nop
jae
ficoms
outsl
push
pop
xchg
add
data16
xor
push
stc
decl
sub
sub
int
jge
sahf
mov
outsb
mov
push
insb
ljmp
push
xor
leave
mov
xor
or
xor
sub
inc
repz
shll
xor
push
lea
fcmovnb
stc
and
mov
movsb
lods
fistpl
loopne
add
mov
ror
cmp
les
cmp
xchg
inc
jecxz
cmpsb
xor
lcall
cmp
dec
inc
mov
mov
jo
stos
cmp
xor
jb
outsb
repnz
in
cmpsb
fcomp
dec
inc
test
sbb
rcrb
adc
pushl
hlt
adc
fstpt
dec
inc
out
scas
aas
cwtl
shlb
cmp
lds
push
dec
pop
nop
shr
mov
cmp
scas
leave
cmp
adc
aam
or
cwtl
mov
lcall
push
mov
add
fisubs
add
add
lret
inc
shll
sub
push
sub
xchg
scas
mov
sbb
sub
repz
enter
call
mov
cmpsb
cmp
out
mov
push
ja
pop
aad
add
cld
fisubrs
or
pop
inc
jbe
lods
pop
imul
xor
test
xchg
ret
loope
and
in
add
inc
lock
fisubl
cmpsl
push
loope
dec
add
ret
mov
add
in
inc
aas
shlb
gs
sub
push
pushf
movsb
pop
iret
adc
and
pop
neg
sub
lods
loopne
shlb
loope
imul
stos
movb
pop
ret
mov
addr16
add
mov
popa
add
sub
inc
sub
and
xor
pop
out
into
sbb
mov
xchg
jg
adc
ss
rcrl
fisttpl
push
data16
xchg
push
mov
adc
add
sbb
std
sbb
mov
sub
mov
dec
xchg
add
cmp
mov
add
xchg
rcll
inc
push
nop
sbbl
mov
add
cmp
loopne
push
ss
dec
and
sub
cli
xchg
xchg
out
aas
dec
sbb
xchg
pop
mov
out
roll
mov
addr16
in
incl
pop
lea
add
in
pop
jb
rcr
cltd
adcl
sub
enter
ds
jb
sahf
test
jle
pop
xchg
jmp
mov
gs
xor
xchg
or
dec
or
cmpsl
mov
inc
call
jo
xchg
push
imul
and
std
and
rclb
aaa
xchg
xor
sub
out
movsb
xor
or
mov
insl
and
aad
or
outsb
mov
jmp
lret
xchg
fcom
notb
aam
sub
int
cmc
test
or
idivb
push
mov
dec
cmp
mov
lods
rorb
nop
stc
out
out
idivl
pop
inc
subl
movsbl
hlt
jg
mov
test
and
cld
dec
sbb
cld
lods
mov
imul
mov
adc
lods
cmp
rorb
jo
ja
fwait
and
fistps
xchg
jnp
pop
lahf
dec
push
bound
rcrb
mov
flds
xor
hlt
push
sbb
mov
movsb
mov
stos
or
or
push
cli
adc
inc
std
out
mov
and
cltd
xchg
pusha
leave
lock
aad
dec
pop
pop
mov
xchg
mov
mov
dec
xchg
sahf
stc
mov
sbb
push
lret
outsl
jo
jne
or
popf
and
in
push
cmpsl
inc
xchg
lea
push
int3
movswl
in
add
push
outsb
pop
mov
mov
cmp
cmp
lock
in
adc
jl
dec
testb
into
jae
lock
jp
mov
in
sbb
inc
and
dec
jae
outsl
xchg
ret
bound
iret
pop
aaa
inc
mov
imul
cmpsl
add
gs
pop
out
pop
lcall
pop
add
rolb
fimuls
lret
cwtl
cmp
inc
test
xor
test
push
pop
mov
sub
mov
mov
dec
movsl
mov
shl
lcall
inc
mov
leave
pushf
push
aas
das
add
adc
idivl
fisubrs
lods
and
sti
repz
dec
arpl
xchg
leave
sbb
mov
or
or
jbe
jo
sbb
jp
push
and
push
inc
fidivrl
pop
push
add
cwtl
fcomi
ds
pusha
inc
sbb
popa
push
jmp
cmp
test
dec
mov
dec
pop
or
lods
mov
mov
leave
pop
andl
jmp
jmp
mov
xor
fistl
or
or
or
xchg
arpl
sub
xor
fcomps
cmp
mov
mov
ds
mov
repnz
inc
rcrb
pop
dec
mov
int3
nop
mov
add
mov
xor
sbb
imull
inc
aaa
in
fwait
fisttps
dec
imul
add
pop
cld
inc
mov
aad
push
cmp
insl
gs
ficoms
and
pop
movsb
and
and
bnd
jno
mov
mov
add
xchg
inc
das
rep
push
push
mov
decl
int3
aaa
xor
in
popl
adc
filds
les
pop
int3
pcmpeqb
adc
xor
cltd
into
mov
jg
xchg
cmp
xchg
or
mov
fmul
jbe
push
lret
xchg
lahf
fcompl
fcoms
dec
fistpll
les
ret
xchg
dec
lret
xchg
pop
and
cld
sub
and
mov
int
or
rcrb
pop
and
lret
dec
fisttps
xor
aas
add
scas
mov
lret
out
push
bswap
or
pop
sub
sub
daa
add
sarl
jl
test
jae
or
in
sbb
fistpl
mov
andl
add
or
daa
and
mov
repz
mov
mov
mov
sarb
loopne
mov
lods
mov
sub
mov
pop
loopne
aam
push
cli
int3
xor
xor
arpl
stos
xor
sub
mull
cmc
mov
jle
sbb
loop
lds
add
xor
js
xchg
push
nop
mov
out
and
push
xor
cvtps2pd
mov
mov
cmp
repz
call
jmp
xor
test
and
fisttps
pop
shlb
cmp
in
mov
in
aaa
lret
xor
adc
push
enter
jbe
add
fistl
arpl
push
adc
ja
sbb
inc
rorb
out
sti
les
iret
push
nop
push
or
add
fistpll
dec
mov
and
pop
fdiv
jae
fiaddl
lds
inc
aaa
shl
push
pop
sbb
add
clc
push
push
jb
xor
mov
std
popa
push
pop
data16
mov
stos
andb
scas
sbb
sahf
pop
int
pushf
jo
lret
sub
mov
mov
adc
fsubrs
mov
cld
xor
lahf
and
mov
mov
cmpl
push
cmp
imul
in
neg
pop
mov
lods
hlt
movsl
jo
bts
push
or
popf
test
leave
imul
data16
notb
and
mov
pop
sub
cmp
imul
stos
mov
sbb
pop
lcall
mov
cltd
mov
je
aam
inc
popf
movsb
imul
cli
xchg
int3
xchg
cmp
sbb
hlt
lock
jns
mov
add
or
les
jb
push
loope
scas
icebp
aad
dec
shrl
cmp
push
ss
popf
jnp
loope
out
add
jns
xor
insb
pop
cmp
sub
and
mov
lods
repnz
cmp
sub
sbb
sbb
pop
mov
xor
mov
iret
sbb
cld
fs
enter
mov
stc
fsubs
imul
ret
repz
cwtl
mov
orl
push
mov
add
jmp
lods
movsb
add
adcl
mov
push
daa
jbe
rclb
lret
push
push
jp
out
sub
dec
mov
jle
rorl
push
cmp
or
in
loop
push
jmp
cmp
mov
push
mov
int
sbb
jb
cli
push
pusha
add
cmp
clc
sbb
popf
mov
daa
mov
je
imul
adc
fisttps
scas
repnz
scas
mov
adc
rorl
xchg
dec
mov
push
or
insb
mov
pop
add
jmp
bound
lods
ja
imul
push
mov
and
or
das
push
cld
je
loope
imul
pusha
test
imul
test
cmp
cmp
cltd
pop
outsl
rcrl
clc
inc
sbb
dec
nop
call
imul
mov
pop
pop
clc
ficompl
add
test
notl
mov
icebp
cmp
jg
sbbb
mov
xor
push
popa
fadds
imul
lret
xchg
cmp
test
push
gs
lret
xchg
cltd
cli
gs
mov
add
xchg
xchg
jecxz
sbbb
lret
fildl
outsl
aam
xor
loop
mov
out
and
fdivrp
mov
movsl
imul
dec
sbb
inc
fwait
cltd
dec
int3
cltd
addb
cli
cmp
jge
jg
pushf
hlt
mov
inc
jecxz
mov
leave
jle
jbe
and
pop
lret
push
cmp
decb
in
mov
cltd
lret
pop
in
pop
inc
cmp
lods
or
push
rorl
movsl
xchg
fmul
in
xchg
jne
ret
pop
dec
mov
aas
bound
push
and
bound
push
jmp
inc
ss
and
dec
dec
push
jmp
xchg
sbb
mov
push
mov
and
int
test
cmp
insb
cld
out
dec
sbb
mov
cmp
stos
cmc
arpl
sub
negb
popf
cmp
pop
bound
dec
or
fadd
sti
nop
sbb
mov
pushf
test
push
push
cmp
mov
mov
loop
sahf
pop
enter
jno
sub
push
ficoms
mov
mov
mov
aad
mov
add
mov
rclb
hlt
lock
mov
inc
add
inc
ficomps
shl
cmp
in
sarl
jmp
xchg
inc
stos
mov
fs
nop
add
loope
mov
stos
repz
xchg
movsb
repnz
movsb
mov
push
add
adc
push
andl
add
push
xor
push
subb
jnp
jo
pop
push
jg
clc
mov
das
xchg
imul
mov
inc
mov
fistl
andl
and
pop
faddl
push
xchg
adc
aaa
rorl
inc
add
sahf
adc
ds
pop
inc
fiaddl
nop
xchg
outsl
fildl
ret
mov
fwait
cmp
push
enter
xor
mov
cmpsb
pusha
jnp
cs
outsb
insl
pushf
dec
scas
daa
mov
xchg
jp
add
pop
sub
cmp
jg
movsb
xlat
fisttpll
mov
shlb
and
cmp
adc
xchg
out
xor
xchg
out
in
ret
pushw
test
hlt
sbb
ljmp
lahf
push
leave
in
outsl
push
mov
mov
je
nop
lcall
loope
xchg
pushf
xchg
inc
push
jle
lods
sub
outsl
adc
es
inc
cmpsb
sarb
jne
push
mov
data16
add
andl
out
adc
cmp
fsincos
pop
adc
and
enter
xor
sub
mov
or
jle
or
fsubr
dec
test
pop
cs
in
std
sbb
xchg
daa
in
sbb
sahf
add
insb
fnstenv
mov
sub
aad
outsb
mov
xchg
rorl
inc
inc
jb
xchg
popf
jge
mov
int3
cli
in
add
dec
push
inc
aaa
cmp
push
cmp
jb
pushf
push
frstor
outsl
pop
call
or
cmpsl
mov
cwtl
aas
or
fstl
cwtl
mov
inc
add
jle
fists
pop
cwtl
mov
test
hlt
test
push
inc
xchg
hlt
outsl
inc
adc
pop
pop
repz
icebp
cli
pusha
jb
inc
roll
pushf
in
stos
xor
mov
lret
outsb
outsl
lcall
iret
imul
push
aas
bound
pop
jnp
mov
fdiv
mov
push
cmp
pop
push
test
cltd
inc
mov
xchg
pop
and
int3
pusha
lahf
fldcw
into
fwait
xchg
ss
enter
push
fcoml
cmp
icebp
jp
xchg
aam
rorb
sub
push
js
mov
lea
scas
jg
mov
enter
sub
rcrl
pop
addl
jmp
push
cld
push
xchg
mov
ja,pn
out
add
adc
stc
cmc
cmpsb
jno
in
es
mov
add
test
cmp
dec
dec
mov
int3
out
cmpl
pop
mov
inc
icebp
sahf
inc
jno
shrl
fadds
mov
sti
fistps
ljmp
daa
xor
std
adc
inc
jno
mov
or
or
ja
jnp
lods
inc
sarl
and
lret
loopne
ret
and
andl
popf
cld
mov
addb
fcompl
pushf
xchg
imul
out
mov
push
test
inc
mov
sbb
mov
xor
filds
cmc
push
pop
daa
bound
nop
inc
push
inc
sarb
aaa
nop
mov
pop
dec
mov
shrb
out
sbb
loope
orl
push
testl
loope
stos
imul
jmp
mov
adc
mov
sbb
movsl
hlt
fsubrs
xlat
cld
outsb
push
call
insl
sbb
jbe
xchg
stc
add
out
dec
add
lea
pop
push
or
adc
cld
repz
jns
mov
sub
out
mov
aam
cwtl
sub
cmpsb
jle
movsl
lahf
xorl
xor
sbb
cmc
aam
inc
or
dec
mov
push
dec
ficoms
sub
out
or
adc
mov
cmp
inc
sbb
xchg
mov
test
xor
mov
cli
xchg
adcl
jp
mov
adc
ljmp
adc
jmp
add
fsubs
adc
sub
addl
pop
dec
xor
inc
and
out
popa
push
aad
rcl
cmp
push
rol
jmp
fcmovnu
sub
add
stos
pop
push
xchg
or
push
and
mov
cli
int
in
fildl
cmp
push
scas
les
pop
lret
data16
outsl
adc
cwtl
imul
ja
push
in
in
daa
dec
jne
add
mov
mov
loopne
icebp
xorl
lock
push
out
ljmp
loope
enter
mov
jb
push
aad
orl
push
rorl
or
inc
ja
test
stos
xchg
fwait
jge
adc
lock
jmp
xor
nop
out
clc
sti
insb
lahf
mov
orb
movsl
xor
stc
test
out
and
cmp
and
mov
stos
and
in
mov
into
adc
stos
fldt
and
repz
xor
adc
xchg
test
cmp
clc
jae
dec
lds
jnp
adc
ret
insb
sub
and
pop
std
adc
scas
popf
push
push
push
pushf
jle
jno
outsb
je
cli
aad
adc
repnz
sbb
inc
mov
pop
rcll
ror
cs
adc
add
ds
push
lods
in
xchg
dec
mov
mov
or
adc
repz
or
cmpsl
leave
clc
ror
dec
or
lret
stos
bound
mov
loop
and
jno
ret
dec
mov
repz
xchg
jmp
or
mov
push
pop
testl
sub
pop
out
sub
xchg
or
cmp
add
pop
repz
xchg
dec
push
sub
out
stc
ljmp
aam
cmc
and
sub
xchg
ret
pop
push
xorl
lcall
mov
out
xchg
int
mov
mov
fnsave
mov
jbe
jae
cmp
inc
outsb
xor
inc
ficompl
adcl
rorl
jl
lahf
xor
and
mov
cld
add
es
pop
cmp
mov
push
pop
mov
inc
mov
mov
and
mov
in
imul
pop
xchg
aam
xchg
test
sub
cli
and
fdecstp
popf
fcompl
test
adc
push
dec
pop
call
andb
loope
and
roll
xor
je
cltd
scas
testb
in
mov
mov
inc
add
out
nop
rorb
xor
push
out
mov
cli
xchg
int
xor
jmp
fwait
in
sbb
inc
fisubrs
mov
into
sub
fldenv
jne
ud0
sbb
mov
inc
clc
iret
and
add
pop
adc
xchg
arpl
add
adc
sti
divb
sarl
inc
sub
or
jp
aad
pop
aaa
repnz
dec
dec
shrb
mov
lods
shll
les
out
stc
jnp
divb
mov
and
outsb
jb
lock
xor
mov
cmp
add
adc
stc
jb
cwtl
pop
or
addr16
fldl
insl
addr16
xchg
pop
adc
push
dec
cmp
inc
mov
orb
popf
add
dec
lods
cmp
xor
mov
mov
mov
cmp
sbb
push
jne
push
pop
mov
lret
jno
arpl
in
sub
sub
jmp
jg
xor
or
cmpsl
test
push
cmp
mov
mov
je
mov
adcb
mov
mov
sbb
out
push
popa
inc
and
icebp
jb
out
in
arpl
imul
adcb
push
mov
fsubrl
mov
sub
lahf
push
arpl
sti
mov
rol
push
xchg
push
lds
and
adc
sub
scas
mov
test
aad
js
mov
pop
push
mov
push
and
xchg
mov
ficomps
and
or
ja
sahf
lods
pop
adc
add
js
shrl
fnstsw
test
xchg
inc
jae
add
dec
xchg
jmp
mov
inc
mov
adc
xchg
xchg
dec
gs
xchg
popa
cmp
out
pop
jne
lret
test
stc
jns
push
mov
hlt
sub
aaa
iret
push
jle
or
jae
lahf
hlt
cmp
jnp
rcr
cmp
sbb
jp
xchg
loopne
lds
ljmp
daa
mov
fstpl
pop
add
mov
inc
ficomps
jecxz
jp
push
fxtract
fisubrs
push
cmc
xor
jp
and
mov
dec
cmp
movb
dec
xchg
movsl
hlt
aam
or
cmpsl
and
push
lret
cli
stos
aam
lcall
test
xchg
push
xor
push
push
dec
or
sub
cmp
mov
lods
jnp
sbb
push
pop
xor
sub
sbb
mov
jae
push
jbe
stos
enter
cmp
dec
mov
popa
lahf
int
and
ja
or
ret
sbb
dec
add
into
into
pop
jle
add
push
mov
test
pop
stos
xor
rcl
ljmp
scas
lods
lds
xchg
cmp
fmulp
sbb
and
and
push
jno
out
pop
adc
sub
call
xchg
add
sub
cmpsb
xlat
cmp
mov
sub
cmp
jp
fmull
cmp
sarb
std
test
inc
mov
shlb
adc
mov
clc
and
cld
mov
es
outsb
mov
or
arpl
cmpsl
sub
pop
adc
mov
sbb
inc
xor
mull
shll
pop
xchg
pop
inc
and
ja
pop
shlb
sti
add
shll
cli
push
inc
xor
shlb
push
in
jbe
daa
mov
jns
sub
dec
jno
int
mov
push
mov
out
and
rcrl
lret
sahf
dec
insw
ljmp
int
ja
pop
stos
mov
jg
shll
inc
xor
cwtl
or
scas
mov
jge
fisttpl
call
hlt
pop
adc
or
test
pop
mov
imul
shrl
pavgw
jno
cmp
gs
roll
dec
mov
mov
rcll
fs
dec
or
xchg
sbb
inc
pop
inc
mov
loope
fs
psrlw
sbb
xor
ja
jge
stc
adc
cmp
les
mov
or
jle
adc
adc
scas
lods
aad
dec
adc
mov
xchg
inc
stos
push
js
jmp
popa
stc
lcall
dec
into
dec
and
cmpsl
mov
sub
mov
push
mov
ja
inc
jb
add
fnstsw
out
lret
test
add
cmpsl
sbb
repnz
xor
aad
ljmp
and
in
pop
fimuls
push
add
push
push
push
sahf
fs
test
test
loope
or
dec
and
mov
rcrb
sbb
addr16
aas
or
inc
xor
test
pop
ds
int
sbb
imul
mov
loopne
xchg
add
mov
ret
sub
shl
jbe
mov
lods
data16
scas
mov
into
in
jecxz
adc
mov
pop
mov
movsb
pop
mov
fcmovne
mov
adc
sbb
sbb
ficoms
mov
push
jmp
inc
mov
outsl
out
fcmovnbe
stc
mov
xor
out
mov
pop
mov
mov
hlt
xor
mov
mov
dec
inc
lret
ss
sub
jg
cltd
test
jmp
mov
clc
sbb
fwait
adc
and
xor
push
cmp
int
pop
aaa
push
inc
dec
add
dec
ljmp
js
outsb
lret
add
push
mov
stos
push
popa
dec
pop
test
ret
sub
and
mov
lods
sbb
bound
add
add
push
pop
popa
sbb
sbb
negl
xchg
mov
in
ficoms
mov
or
out
insb
adc
test
loopne
test
lahf
lea
rcrb
and
lods
sbb
dec
and
mov
xchg
daa
jae
data16
push
stos
pop
gs
mov
jecxz
daa
jecxz
or
sbb
jns
out
xchg
int
lock
and
lock
pop
mulb
sbb
inc
aad
xchg
pop
je,pt
insl
dec
loopne
inc
cmpsl
jnp
jno
shrl
xchg
jmp
pusha
add
xchg
ficoml
jg
cld
dec
cmc
mov
fsubrs
bound
lds
adc
xor
mov
fwait
cmpsl
or
push
xchg
stc
scas
adcl
xchg
loopne
test
xchg
icebp
lahf
iret
das
and
mov
inc
hlt
jmp
xchg
pushf
lret
push
out
mov
jb
cwtl
adc
mov
jbe
or
scas
sbb
jo
iret
std
les
cmp
repnz
push
sub
fistpl
mov
addr16
add
inc
xchg
repnz
pop
adc
jns
dec
addl
xchg
out
lods
or
shlb
loopne
add
mov
adc
mov
inc
je
es
sbb
dec
jge
xor
xor
xor
orb
cli
mulb
cs
ds
rol
mov
mov
rolb
jns
ja
test
xchg
out
sub
or
outsl
movsb
clc
or
stc
pushf
mov
arpl
fwait
mov
xchg
add
divl
push
pop
mov
in
jecxz
pop
movsb
xor
shrb
ljmp
xchg
leave
add
jmp
sbb
sub
sub
repz
dec
sub
xchg
push
xchg
pop
dec
inc
dec
pop
ja
faddl
sbb
inc
fwait
leave
adcb
ret
aam
pop
dec
add
cmp
push
inc
cmp
xor
mov
adcb
inc
jae
aad
cmp
cmc
sbb
push
jp
test
cmpsb
out
mov
sti
adc
mov
gs
ljmp
je
xchg
sub
insb
das
shl
test
scas
sahf
pop
cmp
xor
cmp
dec
stc
adc
ret
ja
call
clc
into
cmp
xchg
push
jno
adc
cmp
in
add
loopne
pop
jbe
aam
mov
nop
arpl
je
push
in
push
mov
pushf
out
fdivl
mov
stos
xchg
push
and
fildll
jg
mov
enter
inc
pop
jl
pop
and
lahf
cmpsl
fnstcw
lea
shll
mov
js
xchg
ds
xchg
in
inc
fimuls
adcb
scas
fs
pop
mov
imul
push
or
cwtl
testb
jns
movsl
leave
lea
add
cmc
pushf
sbb
das
sbb
sub
push
aam
in
push
jl
or
jle
pop
sbb
das
dec
mov
push
cwtl
or
pop
test
dec
aas
loopne
daa
divl
pop
pop
outsl
bound
stos
popf
sbb
jnp
mov
ds
mov
sub
idivl
das
pop
xor
and
jne
mov
dec
pushf
adc
mov
sbb
adcb
push
adc
test
fs
hlt
loop
sbb
arpl
imul
add
xor
insb
pusha
jo
fisubrl
lahf
out
jl
jmp
inc
call
shll
fidivl
xlat
fs
lods
fsubr
push
add
cmp
ret
insb
push
xlat
roll
mov
nop
sti
das
cs
out
mov
inc
mov
fs
iret
xchg
enter
jnp
in
cmp
cs
fisubs
int3
pop
cmp
dec
push
or
mov
mov
cmp
mov
mov
mov
pop
mov
and
dec
xlat
mov
cltd
mov
ss
shll
sbb
cmp
into
in
cmp
or
lcall
or
push
sub
insb
mov
scas
jl
nop
outsl
stos
pusha
xor
imul
add
push
sub
mov
cvtdq2ps
mov
mov
hlt
cmpsb
data16
push
sub
xor
clc
jge
push
mov
add
daa
adc
call
repnz
ljmp
jb
mov
push
xchg
icebp
cmp
sti
ds
jno
lea
dec
cmp
das
lds
icebp
add
repz
sub
cltd
and
jmp
and
xchg
outsl
mov
jbe
scas
xchg
and
aas
sbb
push
sahf
mov
test
xchg
jns
std
out
sbb
inc
cld
jbe
add
push
in
mov
push
dec
cltd
shl
jp
sbb
call
stos
pop
movsb
sub
je
mov
bound
sbb
jl
int
mov
jnp
pop
jnp
or
and
xchg
subl
lahf
cmc
or
xor
out
jb
addps
das
ds
add
mov
pop
xchg
xchg
push
push
pushf
inc
popa
sbb
andl
adc
add
test
cld
ret
jo
les
insb
add
add
dec
xor
sbb
xor
sub
lock
mov
pop
aaa
movsb
lret
jle
mov
lock
in
stos
pop
stos
xor
pop
subb
lods
cmp
jg
fcompl
in
stc
fildll
xchg
jns
sub
mov
scas
fcmovnu
xchg
jge
mov
repnz
outsb
fwait
pop
iret
sahf
sub
or
jmp
jno
cmpb
xor
adc
je
push
into
and
xor
cmp
arpl
shr
stos
adc
inc
jnp
pop
dec
dec
mov
loopne
jp
dec
dec
mov
xchg
stos
sub
rcrb
mov
sub
xlat
in
push
inc
mov
lret
jne
loope
cmp
testl
je
shlb
sub
cmp
push
inc
inc
jnp
shrl
lret
les
data16
aas
scas
leave
mov
cli
daa
out
jbe
and
dec
test
inc
mov
and
test
out
arpl
pop
mov
lea
test
jbe
shrl
insb
shlb
push
subb
cwtl
testb
arpl
into
add
xor
mov
pop
out
in
clc
push
and
loope
add
sub
loopne
loope
and
lock
sbb
mov
js
cltd
mov
sub
mov
lcall
xor
addl
stos
testb
push
push
or
sub
inc
in
lahf
inc
and
dec
fs
out
icebp
es
rol
sub
xor
push
les
dec
mov
test
push
push
jae
adc
out
xchg
mov
and
ss
xchg
movsb
inc
mov
scas
sub
xor
shl
das
or
inc
inc
arpl
lods
xchg
mov
ljmp
xchg
push
les
add
inc
or
or
cmp
and
insb
mov
dec
jne
adc
test
call
push
mov
xorl
xchg
in
mov
adc
mov
icebp
push
mov
sub
mov
loopne
std
pop
loopne
lods
mov
clc
mov
dec
adc
push
insl
adc
jo
sub
dec
lods
jne
aad
in
mov
jge
cmp
test
inc
sti
je
sub
mov
popf
jns
add
sbb
insl
push
lret
pop
lcall
fcomps
push
mov
sarb
out
ds
rcll
mov
imull
push
dec
or
mov
outsb
popa
jno
sbb
and
loop
xlat
aad
sub
aad
movsl
mov
jne
push
lahf
xor
cmpsl
mov
mov
cmp
dec
jp
sub
clc
jnp
push
int
dec
into
out
sub
and
push
xchg
movsb
mov
fimull
mov
jnp
mov
push
add
inc
popa
mov
cmpsl
dec
sbb
mov
inc
push
jl
imul
aas
xchg
xchg
sti
xor
popl
daa
jmp
cmp
stc
and
and
pop
lret
push
jo
jg
fdivs
mov
sbb
xor
aam
sbb
fwait
or
jo
pop
mov
xchg
iret
popl
test
into
arpl
dec
xchg
ret
jns
sub
out
rcl
mov
arpl
sets
popa
mov
mov
push
aam
clc
popa
mov
addr16
adc
arpl
cmc
push
out
cmpsl
fsubrp
xchg
cs
test
cmp
sahf
push
stos
fdivs
xor
pop
test
scas
xchg
mov
in
pushl
pop
cmpl
subl
ret
arpl
mov
sbb
fwait
dec
fdivl
push
aaa
pop
les
sbb
icebp
cmp
add
aad
ljmp
rcrb
insl
hlt
lods
mov
or
aam
and
pop
xchg
testb
inc
add
fidivl
pop
inc
add
cli
enter
jno
and
fists
sub
push
movsl
leave
repz
test
xor
sub
push
xchg
into
sbb
in
fbld
sub
dec
fcom
fcomi
mov
push
inc
je
jp
mov
xor
cmp
jns
dec
sbb
mov
sub
mov
push
sbb
xchg
mov
sub
mov
mov
or
roll
scas
pusha
loop
jge
sub
bound
fnstsw
ficompl
jo
adc
mov
nop
repnz
neg
cmp
icebp
xchg
mov
push
pop
jmp
jp
popa
in
mov
push
jns
pop
fldenv
dec
xor
inc
in
out
sub
jns
inc
inc
xor
es
push
test
jns
in
jnp
push
loop
insl
shlb
xchg
and
mov
pop
inc
xor
scas
pop
loopne
mov
xchg
mov
inc
mov
cli
movsl
imul
loopne
out
pop
sbb
sbb
inc
add
dec
push
adc
testl
xor
add
in
shll
xchg
std
js
fdivl
sub
ja
pushl
and
repnz
xlat
mov
out
sbbb
test
mov
pop
pop
bound
sbb
orl
fsubr
lret
testl
loopne
jb
mov
xor
fs
cld
jle
inc
out
outsb
adc
and
xchg
filds
pop
mov
ja
pop
cmp
lock
ss
ficoml
negl
push
in
loope
or
mov
gs
or
jae
dec
add
mov
loop
andb
and
adc
lret
xlat
lock
xor
mov
xchg
out
aad
cmp
imulb
xchg
push
add
sbb
adc
xor
lock
subl
inc
pop
xchg
cmp
fwait
pop
xor
subb
add
fs
movsl
imul
inc
mov
and
xlat
and
lods
pop
jmp
clc
divl
dec
sub
or
stc
cmpsl
lahf
mov
int
or
shll
xor
xlat
bextr
out
push
sub
jae
mov
jbe
and
das
mov
int
iret
xor
jmp
inc
aaa
stos
and
gs
outsb
popa
cmp
dec
push
cmp
shll
add
push
test
xchg
push
in
mov
xchg
loopne
mov
imul
cs
jmp
xchg
loopne
js
and
add
mov
inc
testl
int3
mov
call
cmp
rcrl
test
loop
push
sbb
int
iret
inc
rorb
sub
xchg
xchg
push
and
adc
push
inc
xor
jmp
mov
inc
lret
out
dec
add
adc
iret
ss
mov
xchg
cmp
push
loope
xor
mov
dec
xchg
repnz
orb
sub
adc
mov
inc
sub
leave
pop
xor
push
ret
lea
es
sahf
cmp
inc
insb
xlat
arpl
mov
push
pop
sbb
loopne
cmp
inc
pop
jp
adc
mov
mov
cwtl
ret
and
sahf
mov
cmpb
int
jne
add
inc
ret
lret
adc
in
add
sti
xchg
dec
in
test
xor
aaa
sub
negl
insb
adc
repnz
imul
pushw
sub
push
cmpsl
mov
es
cmp
xchg
pop
xor
cli
in
aad
mov
mov
repz
xlat
fbstp
add
cmp
add
jnp
pop
test
cmpsb
mov
fiadds
ret
addb
pop
add
push
adc
jmp
fdivr
jb
adc
sub
inc
cmc
sti
loop
push
jg
out
scas
pop
xchg
aaa
xchg
outsl
faddl
aas
ffreep
and
and
mov
inc
mov
and
lods
jle
push
mov
fmuls
pusha
test
je
insl
push
arpl
cmc
dec
leave
imul
and
adc
in
test
loopne
aaa
shl
xor
dec
and
jecxz
pusha
outsb
clc
cmp
mov
adc
adc
repnz
out
dec
outsb
shl
push
or
pop
lods
jmp
ljmp
jmp
mov
add
cmp
sub
jo
mov
nop
loop
cmp
ret
fucomi
inc
rcrb
jg
jmp
ljmp
jl
dec
fildll
iret
sub
addr16
sarb
fdivl
ljmp
xchg
ljmp
and
add
adc
sbb
pop
stos
push
dec
loop
lock
jmp
xchg
xchg
imul
dec
adc
cmp
call
adc
sub
into
or
es
mov
mov
cmc
pop
cltd
and
jb
xchg
push
or
fistl
in
xchg
fmuls
push
adc
mov
xorl
jns
arpl
or
lret
cld
sbb
mov
adc
out
repnz
out
orl
sahf
mull
mov
in
dec
test
xor
aam
push
popf
gs
xchg
mov
xor
stos
adc
adc
repz
pop
xchg
xor
xchg
ss
push
in
int3
stos
add
cmp
daa
xor
arpl
pop
inc
add
loopne
mov
loop
or
pop
leave
test
fs
xor
mov
pop
push
mov
and
repz
mov
adc
xor
jae
mov
pop
pushf
add
int
push
jb
les
repz
shrb
js
xchg
cwtl
add
add
lea
std
popf
ljmp
and
push
out
mov
cmp
jae
inc
scas
adc
clc
ds
ret
push
push
mov
test
pop
int
cmp
jg
sub
mov
cmpsl
xor
pop
orb
and
jmp
mov
mov
cs
jg
cmpsl
mov
sbb
or
sbb
cmpsl
movsb
outsb
gs
cltd
cld
pusha
xor
jg
push
imul
mov
pop
sub
shl
add
jle
lock
cmp
or
xor
push
mov
sahf
dec
sub
sarl
or
dec
stc
cwtl
sbb
mov
movsb
leave
inc
sbb
shl
daa
xor
aaa
fdivs
icebp
in
pop
out
push
adc
iret
incb
xacquire
lret
dec
xor
sbb
mov
mov
cmp
mov
xchg
std
popa
cwtl
or
cmp
lret
ja
in
xor
push
test
inc
sbb
push
lcall
cmpb
ss
ljmp
jno
or
pop
clc
lea
and
push
sbb
lods
inc
jb
dec
push
jp
mov
xor
sti
rcrl
and
je
ljmp
hlt
dec
adc
sbb
xchg
dec
jl
inc
daa
jbe
stos
cmp
js
dec
xorb
in
repz
aaa
mov
and
lea
xchg
adc
jns
inc
test
xchg
int
mov
cmpb
fwait
testl
and
addl
xchg
pop
mov
ss
push
lahf
clc
add
vpsllw
clc
mov
xchg
mov
mov
pop
clc
and
mov
ss
pop
xchg
pop
aaa
mov
xor
ret
xor
push
push
or
dec
mov
jmp
cmpsl
movsb
call
xor
pop
mov
subb
push
push
mov
mov
movaps
or
insl
shlb
mov
int3
scas
mov
xchg
aaa
mov
divb
adc
lods
push
jnp
sbb
sub
pop
lcall
sbb
rorl
adc
stc
out
sarl
test
inc
cmp
test
gs
mov
adc
leave
push
mov
daa
or
mov
push
cmp
inc
mov
mov
jp
lcall
adc
cmp
daa
dec
push
push
cmp
sub
xchg
inc
jl
je
es
lcall
adc
push
push
push
jbe
push
mov
test
add
aam
fmull
jo,pt
jnp
gs
sbb
rorb
xor
pop
jle
adc
bound
xor
arpl
out
fcomi
lret
push
test
xchg
popf
jg
enter
scas
push
cmpsl
and
fdivrs
cmp
daa
xor
xor
push
mov
or
mov
dec
vandnps
imul
push
out
rolb
stos
dec
mov
push
pop
push
mov
stos
sbb
out
lcall
pop
frstor
pop
loope
jle
dec
add
mov
std
push
imul
aaa
sti
jb
pop
js
push
inc
mov
insl
push
or
inc
lea
sub
and
adc
insl
jle
sar
dec
pop
xor
sahf
push
nop
scas
xchg
add
pop
dec
iret
test
mov
and
push
push
jecxz
ja
jecxz
imul
imul
adcl
cmp
stos
push
es
faddl
cmp
out
and
jns
cvtps2pi
xor
dec
repnz
test
popf
movl
dec
jecxz
lods
jmp
sbb
mov
mov
ret
into
test
inc
testl
pop
aad
popf
bound
call
outsb
stos
xor
mov
add
lcall
out
aaa
sbb
loope
subl
addr16
lods
insl
inc
mov
cmpsb
int3
xchg
xlat
sbb
cmp
int3
or
xorb
mov
movsl
mov
mov
dec
sbb
into
inc
movb
inc
jns
xor
pop
inc
ret
adc
cmpsl
jle
cmpsb
lret
inc
push
pop
sbb
mov
cmp
pop
cmp
cmp
movsl
adc
test
dec
fnstcw
out
shl
mov
testb
mov
dec
mov
in
mov
imul
shlb
loop
add
jns
push
xchg
sbbl
add
outsb
or
clc
gs
lds
add
adc
xchg
popa
jno
pop
push
ror
cmp
and
popf
outsl
jle
sub
push
adc
cli
xchg
stos
cltd
out
adc
add
jmp
mov
and
jnp
cmpsl
jnp
xchg
cmp
mov
mov
enter
and
xchg
test
mov
je
fs
repnz
stos
pop
out
adc
inc
push
mov
jl
arpl
scas
jecxz
sbb
lretw
sbb
sub
cmp
mov
lret
sub
mov
test
loope
xor
rcll
mov
xchg
mov
push
cmp
imul
mov
add
add
jp
out
xor
and
sbb
pop
movsl
scas
shlb
inc
shr
and
sub
xchg
fidivrs
fisttps
mov
push
mov
cs
sbb
cmp
mov
push
or
push
stc
cmp
push
pop
lock
cmp
divl
mov
fmull
jecxz
je
shrb
xor
scas
fadd
imul
rcrb
cmp
inc
mov
xor
sub
sbb
cwtl
fcmovb
lock
pand
inc
sbbb
xchg
cli
cltd
dec
mov
add
insb
sub
pop
lods
data16
out
cmp
mov
mov
loopne
jle
fcom
push
in
xor
out
sarl
rol
or
dec
or
dec
std
push
pop
test
mov
addr16
mov
scas
jb
jmp
push
ret
lahf
jo
jmp
pop
xchg
lock
fidivs
push
jo
sbb
fdivrs
into
sub
nop
ret
dec
sbb
adc
enter
xor
fs
and
or
stos
sbb
lds
mov
add
sub
dec
mov
cmp
fs
pop
mov
je
dec
jbe,pn
xor
repnz
into
sub
rcrl
sub
cmp
mov
xlat
xchg
jle
ret
mov
aad
sbb
mov
xchg
imul
sarb
sbb
and
xchg
pop
jb
mov
fsubrl
cmpsb
cmc
nop
jg
jl
imul
stos
dec
jl
jb
sbb
xchg
fldenv
in
or
mov
dec
leave
into
loope
xlat
or
pop
repnz
mov
lret
mov
call
ds
xchg
mov
jns
push
and
mov
mov
xchg
div
rcr
stc
dec
xchg
inc
cltd
std
mov
cmc
xchg
jle
hlt
push
in
fnstcw
and
aas
or
push
mov
loop
ljmp
sbb
or
iret
loopne
rorb
xor
add
insb
sub
cmc
pop
call
pop
fimuls
fs
cmpb
in
mov
xor
xchg
pop
dec
in
or
daa
cmp
aaa
shrl
fsub
cmp
shll
ret
xchg
mov
pop
loop
pop
fcmovnu
mov
rcrl
jge
loopne
stos
mov
cmp
test
jo
ja
lcall
mov
scas
test
lods
mov
lods
push
rolb
sbb
lock
in
sub
jb
mov
push
cmc
xchg
jmp
sub
loop
je
clc
fcoml
test
out
mov
adc
mov
out
xchg
sub
stos
popf
shll
jno
jo
inc
jo
lods
in
cmp
cmp
cmp
hlt
test
inc
sahf
push
xlat
cmp
cmpsb
test
lcall
mov
subb
jnp
sbb
cmp
push
or
stos
in
idivl
mov
adc
cmp
push
into
mov
xchg
je
add
dec
push
dec
jbe
pop
cmp
jmp
xor
sub
ret
dec
mov
and
mov
and
stos
test
mov
iret
repz
imul
cmp
add
les
cmp
add
ret
ret
call
or
push
adc
jae
sbb
jb
rorb
sub
add
and
ja
mov
mov
subl
ljmp
pop
in
xchg
clc
ror
es
sub
sub
pop
push
mov
cmpsb
sbb
or
notl
or
or
test
loopne
dec
jecxz
mov
pop
xorl
inc
adc
lods
push
adc
scas
dec
enter
cltd
inc
outsl
cmpsl
inc
lods
jmp
orl
mov
ljmp
hlt
mov
dec
xchg
adc
xchg
ds
jnp
dec
sahf
dec
lret
dec
lret
call
invd
add
mov
int
adc
pop
lahf
adc
mov
jg
lds
xchg
xchg
push
sahf
out
inc
testb
jae
addl
lret
icebp
rcrl
or
jge
add
xor
enter
lock
aam
dec
loope
jg
hlt
and
dec
mov
xchg
and
stc
sub
leave
pusha
sub
sub
sub
xchg
pop
jge
pop
lret
and
sub
aad
add
and
mov
and
pop
mov
call
sahf
jnp
and
adc
and
cld
sti
pop
push
jbe
cmp
movsb
xchg
daa
add
fidivrs
ljmp
pop
push
add
dec
sbb
movsb
lahf
mov
leave
ds
mov
imul
repz
pop
jmp
repz
xrelease
ret
jp
aam
bound
jle
fstpt
stc
xchg
add
mov
popa
js
add
or
push
int
lods
pop
and
pop
popf
dec
mov
push
mov
pop
mov
jecxz
xchg
push
or
xorb
or
out
pushf
aam
mov
jg
add
inc
lods
insb
fdivrl
pop
push
ret
mov
pop
mov
or
popa
stos
inc
mov
mov
bound
xchg
cmp
pop
xlat
fcoms
bound
sarl
inc
out
ja
sbb
xor
ja
test
or
daa
cmc
jmp
sbbb
jle
mov
cmp
inc
aad
gs
xchg
jg
xchg
mov
dec
sbb
dec
inc
sbb
in
lock
xorb
lods
cs
mov
jl
fistps
xor
gs
jl
shll
pop
xchg
adc
ja
xor
pop
popa
out
sbb
dec
mov
in
jno
cwtl
es
pop
fbld
add
cwtl
lcall
push
inc
dec
push
and
mov
outsb
adc
and
push
hlt
cs
imul
xchg
ja
mov
pop
mov
dec
test
mov
es
jmp
imul
popf
pop
int3
jle
or
lea
test
sub
fadd
arpl
mov
fbstp
inc
dec
shlb
and
cmp
push
pusha
or
jecxz
ror
jae
dec
cmpsl
adc
xor
imul
in
xor
cmpsb
icebp
mov
adc
sub
jp
sarl
xchg
mov
inc
pop
jo
shlb
mov
add
inc
in
dec
fdivrp
mov
jno
pop
sbb
aas
mov
dec
pop
idiv
jb
pop
jne
lods
pop
loop
mov
push
xchg
add
es
cld
pop
daa
jecxz
push
cld
and
mov
or
dec
std
dec
push
sbb
test
sbb
popa
loopne
or
fucomp
gs
mov
sbb
mov
fcmove
add
fildll
fsts
rorl
lret
insb
push
test
je
jno
pop
loopne
dec
inc
or
sub
loopne
push
add
xor
enter
in
dec
cmpsl
sub
xchg
rcrl
sbb
mov
outsb
jne
mov
cmp
in
cmpsl
cmp
add
out
iret
test
add
ljmp
sbb
daa
fdivs
imul
xchg
loopne
movzwl
cli
push
cmpsl
arpl
cld
stc
cmpsb
and
jb
mov
sbb
je
jb
xchg
jmp
xchg
imul
cmp
leave
fcoml
sti
adc
xchg
cmp
sahf
data16
jge
add
subb
fbld
arpl
sub
loop
sbb
cltd
inc
or
sub
dec
push
mov
mov
ss
movb
dec
mov
test
cwtl
jge
xor
ret
mov
push
scas
jp
aaa
dec
mov
mov
adc
jnp
mov
pushf
cmpsl
mov
mov
or
clc
jne
and
aam
mov
stc
loope
lcall
jb
std
in
insl
ret
fwait
lea
mov
jle
pop
lea
sbb
lods
rolb
rcrb
cs
gs
and
xor
and
cmpsl
jp
sti
mov
scas
xchg
scas
cmp
sahf
icebp
pusha
add
and
xor
inc
in
inc
fidivl
adc
stos
dec
daa
inc
mov
loopne
xor
sub
adc
ljmp
xchg
push
pop
insb
lods
mov
mov
mov
or
inc
mov
adc
pop
daa
popf
in
cmpsb
stos
sbb
enter
pop
nop
mov
enter
inc
xor
jge
clc
jge
out
enter
jge
add
int3
mov
or
je
inc
sub
jp
push
popf
fiadds
in
and
jno
cmp
mov
mov
and
imul
mov
mov
scas
jge
sub
jno
adc
mov
imul
or
out
ja
pop
push
sbbl
mov
inc
mov
scas
jecxz
xchg
andb
test
cmpb
shl
xchg
mov
int
pop
dec
fwait
ljmp
dec
and
es
inc
mov
fwait
call
iret
addb
imul
repnz
dec
imul
adc
shll
dec
jge
xchg
pop
ficoms
jg
cwtl
mov
push
dec
stos
sub
pushf
cmp
adc
or
roll
mov
icebp
xchg
dec
mov
jg
mov
sahf
pushf
or
xchg
bound
pop
stos
inc
xor
pop
pop
push
mov
xchg
outsl
sbb
jmp
pusha
repz
lret
mov
idiv
xor
mov
xchg
jne
adc
sbb
daa
push
push
int
pop
jg
loop
fstpl
push
stos
lods
test
xchg
sbb
ficomps
cmpsb
pop
mov
scas
pop
jno
shr
cld
sti
addb
jb
jg
das
divl
testb
jp
mov
adc
scas
icebp
out
cld
jne,pt
ljmp
sub
arpl
sti
je
jb,pn
xchg
jle
or
fcomps
jmp
and
std
pop
push
cmc
movsl
inc
jge
push
rorb
cld
jecxz
mov
lahf
sbb
out
adc
jg
mov
loopne
jae
pop
inc
hlt
lret
xchg
xchg
stos
dec
cmp
lret
sub
stos
cmp
out
cmp
aad
imul
jecxz
les
sub
dec
mov
cwtl
cs
xlat
xchg
sahf
popf
mov
xor
js
cmpsb
daa
dec
mov
stos
adc
or
enter
daa
cs
in
sti
add
mov
pop
push
rolb
mov
mov
pop
add
std
sub
fstps
arpl
in
lds
enter
mov
cmc
repnz
sub
mov
lock
out
daa
add
out
cmp
adc
push
roll
adc
cmpsb
mov
jg
dec
adc
rorb
jge
adc
mov
jp
fisubs
incl
int3
sbb
ljmp
loop
xchg
mov
shrb
arpl
add
stc
xor
std
lcall
and
push
fdivrl
dec
pop
xchg
lods
xorl
fidivl
sahf
scas
in
fxch
fs
adc
jg
or
xor
sub
or
jp
stc
jecxz
jle
jecxz
sbb
iret
in
jg
dec
and
jmp
push
int
fisttpl
lods
pop
xchg
pushf
fdivrs
scas
out
std
loopne
adc
ss
clc
dec
mov
inc
pop
je
bound
jl
sub
mov
lods
cmpsl
gs
jbe
or
das
and
imul
jae
stc
push
test
or
lret
mov
xchg
and
and
data16
cmp
movl
mov
or
cmp
je
mov
dec
rclb
mov
dec
mov
outsl
inc
mov
ficompl
pop
or
push
xchg
mov
cmp
test
aas
add
jns
inc
dec
jo
add
push
loope
mov
inc
jecxz
daa
imul
inc
les
push
sbb
jno
xor
mov
jmp
push
dec
fnstsw
movb
inc
jmp
xor
shrl
pop
xchg
leave
adc
push
inc
stos
lcall
rcrl
aaa
nop
and
xchg
pop
rcl
scas
std
das
rclb
dec
xchg
lock
arpl
stc
fsub
ss
lods
ja
or
xchg
mov
ss
cmp
mov
push
inc
cmpsl
inc
outsb
push
mov
leave
sub
cmc
mov
iret
cmpsl
movb
test
mov
and
xlat
push
mov
sub
pop
adc
cld
mov
lods
dec
sub
add
repz
xor
popa
xlat
test
fisubl
loopne
xor
sub
bound
pop
scas
mov
push
pop
push
lret
sarb
mov
or
iret
enter
into
scas
imul
mov
cmpsl
add
int
xor
imul
sbb
cs
enter
cs
pop
mov
or
ret
push
test
fcompl
push
mov
cmc
imul
movb
pusha
and
ljmp
inc
add
pop
jg
mov
sbb
cmp
ja
aaa
mov
jb
std
mov
add
xor
xchg
imul
xchg
aam
cmpsl
imul
pop
and
dec
pop
ss
add
out
and
xorl
sub
fcoml
repz
push
mov
cltd
cltd
sbb
mov
inc
aam
inc
pop
and
mov
and
xlat
pop
push
lods
xchg
jecxz
add
test
push
cmp
pop
push
cmpsl
std
cmp
test
xor
lcall
xchg
adc
lods
mov
xchg
mov
and
gs
jmp
into
pop
mov
test
out
nop
xchg
leave
adc
call
adc
les
jno
xchg
sub
inc
mov
aam
sub
addr16
in
stos
jne
dec
in
lods
sub
inc
add
in
negb
lret
add
insb
ret
pusha
pop
mov
lcall
push
inc
push
outsl
int3
jp
sbb
push
cmpsl
or
bound
add
adc
out
adc
sub
push
and
adc
lret
push
shrl
into
xchg
sub
cmp
mov
mov
mov
mov
les
xor
nop
int
data16
mov
mov
test
dec
test
jl
sub
mov
subb
cmpsb
repz
push
loop
mov
xor
aas
jp
cmp
pop
lds
sbb
das
jb
sub
inc
fs
fiaddl
fiaddl
ret
out
leave
icebp
lods
ds
repz
das
cli
sbb
or
loope
insb
mov
adc
insl
xchg
inc
push
hlt
scas
mov
dec
xor
mov
fmuls
mov
jno
sarb
jno
xchg
movsl
xor
ret
and
sbb
es
nop
inc
sub
scas
sarl
inc
mov
push
push
test
clc
sub
push
popa
pusha
insb
loope
pop
pop
mov
sub
push
dec
stos
das
xchg
mov
lcall
in
sbb
sbb
xchg
out
aaa
aam
adc
cmp
int
and
cmp
fs
scas
lahf
jo
adc
jo
lock
sti
addl
arpl
stos
int3
mov
into
leave
mov
sub
sub
cmpsb
adc
and
shr
and
stos
test
dec
sbb
sub
out
daa
push
cmc
dec
mov
dec
cmp
inc
adc
shlb
xlat
lods
loope
jge
inc
push
mov
jl
jns
dec
ret
subb
jbe
add
xchg
jb
sti
pop
dec
lea
jns
fs
out
add
aaa
adc
in
nop
sbb
sbb
push
xchg
mov
xor
sub
movsb
mov
test
test
xor
enter
sbb
sub
fisubrl
call
mov
or
in
mov
and
and
ss
mov
pop
xlat
lods
or
sbb
mov
cmp
dec
xchg
jg
push
jg
out
sbb
or
and
dec
in
adc
mov
dec
push
jle
xor
ficompl
xchg
adcb
in
adc
push
add
std
int
jbe
sbbb
mov
add
popf
dec
mov
and
adc
jbe
xlat
inc
lods
imull
cli
imul
jmp
jl
inc
inc
pop
push
push
mov
repnz
pop
mov
jo
xchg
or
iret
push
cli
into
test
pop
add
adc
scas
pushf
xor
movsb
sahf
fisttpll
int
lahf
scas
mov
push
mov
in
imul
js
mov
jmp
std
mov
xchg
push
add
hlt
mov
orl
add
outsb
xor
fwait
aaa
ret
mov
and
mov
xchg
sbb
cmpsl
loop
cmp
call
aaa
les
cmpb
arpl
in
adcl
dec
dec
cmpsb
pop
xor
jb
out
push
push
adc
repnz
cmp
hlt
mov
cmp
imul
pop
fsubrs
fisttpl
mov
jbe
stos
loop
and
in
roll
out
push
mov
pusha
test
add
mov
aas
push
add
lret
add
fxch
or
bound
mov
push
test
ja
cmpl
pop
loop
xchg
popa
xor
movsl
fcompl
lcall
jmp
or
jl
xor
add
std
ss
dec
ja
lret
inc
dec
stos
ja
jae
xor
jl
mov
xchg
das
icebp
xchg
mov
mov
popa
inc
scas
mov
inc
cmp
and
nop
clc
inc
flds
push
stos
loop
add
dec
xchg
loopne
jnp
fstpt
inc
rcr
dec
and
sub
jmp
cmpsb
sbb
mov
pop
sbb
es
jmp
adc
push
ja
cs
push
stos
xchg
push
pop
out
mov
enter
popf
test
ret
mov
jno
stos
jp
mov
xchg
add
inc
into
fstpt
jmp
sub
jae
ds
fwait
mov
fsubl
hlt
mov
int3
repz
mov
mov
outsb
jge
push
out
jl
add
xchg
jne
lods
mov
lret
mov
push
adc
ret
and
xchg
loop
rcr
fcoms
cmp
fxch
sub
rcrb
lods
iret
cmpsb
and
inc
dec
cmp
repz
dec
xchg
jno
add
cmp
adc
aas
testl
daa
pop
ljmp
out
pop
dec
pop
xlat
pop
in
adc
cmp
test
xchg
es
les
int3
into
pop
mov
jbe
push
call
fwait
imul
ficompl
roll
jmp
mov
mov
lcall
adc
push
xchg
xchg
and
xchg
dec
test
movsl
das
out
add
sub
or
or
and
in
sarb
test
pop
sbb
call
pop
inc
mov
decb
sti
jge
or
mov
mov
mov
iret
or
mov
bound
jno
add
fwait
cltd
call
push
lods
adc
mov
xchg
push
jb
or
outsb
jge
xchg
mov
fst
xor
jb
test
mov
in
mov
bound
jg
cli
aaa
pop
movsb
mov
mov
loope
push
cmpsl
dec
ror
stc
xchg
in
cmc
pop
cmp
aad
cvttps2pi
sub
test
mov
loop
mov
sahf
push
mov
rcr
lret
add
adc
ret
cld
ret
in
leave
rclb
jne
movb
xchg
mov
in
test
inc
inc
xlat
test
xor
push
movsb
std
jnp
and
sarb
xchg
outsb
int
mov
jae
ret
and
test
cltd
js
xchg
mov
gs
dec
out
cmc
inc
dec
pop
dec
popa
mov
stos
std
addr16
testb
sub
in
jecxz
jmp
adc
mov
pop
xor
xchg
ss
mov
lock
dec
adc
sar
jo
mov
inc
cmpl
pop
movb
push
xchg
cwtl
adc
lcall
fcmovbe
loopne
jbe
aaa
push
sub
in
mov
subb
mov
inc
inc
push
jl
arpl
shrb
sbb
outsb
mov
aad
jg
rolb
inc
jmp
pop
and
outsb
out
and
xor
out
pop
fdivr
sub
or
cmpsb
out
xchg
xchg
lcall
std
jecxz
jbe
push
roll
mov
and
fwait
jo
test
add
mov
push
lea
scas
push
sti
dec
pop
leave
test
sub
dec
mov
mov
mov
out
test
int
loop
cmp
in
jp
mov
mov
shlb
out
jb
clc
dec
mov
sbb
sub
movsb
lret
dec
cmpsl
jb
push
or
mov
pop
fidivl
adc
jno
push
test
leave
pop
scas
in
inc
lock
xor
js
mov
xchg
arpl
inc
or
sbb
lds
andb
pushf
mov
jl
out
ss
fisubs
fs
gs
mov
ret
sub
xchg
jle
push
out
push
dec
add
jge
out
inc
js
popa
xchg
cli
inc
add
sti
jg
fcomps
daa
arpl
lret
call
xchg
in
sbb
xchg
movsb
mov
in
lahf
mov
ret
inc
and
adc
cmpsl
aam
push
lea
push
push
and
pusha
dec
aam
mov
sbb
add
mov
add
ficompl
lods
mov
je
insl
imul
add
jle
pop
push
fstl
sbb
int3
mov
mov
xor
fsts
sbb
test
push
cmp
xchg
sbb
mov
xchg
fildl
cltd
sti
outsl
pop
inc
or
jle
daa
out
pusha
or
icebp
lds
cmp
jbe
pop
dec
out
test
and
jle
pop
adc
ljmp
dec
repnz
mov
push
jecxz
jecxz
shrl
inc
xor
sbb
inc
lret
jb
in
xchg
push
in
pop
std
pop
mov
shrl
and
mov
xchg
ds
jecxz
mov
cmpsl
ficompl
subb
jl
push
popf
push
std
outsb
push
and
mov
cmpsl
xchg
cmp
in
xor
jnp
dec
lcall
aas
sbb
ret
adc
rcl
xor
es
xor
sub
lret
jl
rol
or
bound
repz
xchg
xor
jo
fsubl
int3
sub
scas
xor
shlb
add
xchg
xor
pop
pop
inc
inc
inc
std
sbb
pusha
stos
fcoms
fsubl
inc
push
pop
adc
push
test
test
xchg
aaa
fiadds
js
cmc
out
push
xchg
mov
xor
lcall
jg
inc
lret
push
mov
sti
adc
stos
fistps
pop
cmp
sub
lret
or
outsb
scas
mov
lahf
add
cmp
ja
cmc
addb
mov
pop
mov
das
jo
andb
pop
sub
dec
ret
jb
sbb
or
gs
movb
adcl
dec
les
push
lcall
mov
add
leave
mov
pop
pop
cmp
xchg
loop
xor
loope
call
test
xor
mov
xchg
pop
cmp
pop
scas
mov
sbb
in
xchg
insb
add
leave
ss
cld
cld
or
jl
push
lods
pusha
pop
insb
into
ja
dec
jmp
adc
xor
jle
dec
xchg
ljmp
or
sub
pop
adc
mov
jp
repnz
jle
ss
scas
nop
ljmp
mov
mov
lahf
xor
jp
push
and
nop
std
dec
addr16
neg
fnsave
cmp
sbb
fs
pop
inc
pop
jno
lds
mov
ja
and
and
mov
and
popf
add
and
push
std
dec
pop
jo
push
jae
clc
fldt
push
mov
mov
pop
xor
adc
sbb
sbb
out
jo
scas
mov
pushw
mov
imul
add
jmp
mov
inc
loopne
lods
jne
sbb
test
cmp
fwait
test
sub
std
rcrl
sub
out
add
pop
in
dec
test
popa
aad
or
jno
ret
pop
dec
movsl
mov
or
sbb
push
outsb
cmp
mov
fldcw
stos
pop
or
mov
xor
stos
stos
shrl
sbb
adc
mov
inc
int3
lahf
test
enter
repz
add
ret
cmp
xchg
hlt
mov
fdivs
and
andb
popw
ss
dec
push
bound
jmp
sbb
add
syscall
and
les
leave
inc
mov
push
pop
leave
xor
jge
xor
push
fwait
sub
iret
sbbl
enter
cmpsl
cltd
or
stos
stc
mov
int
aam
cmp
dec
lret
pop
mov
sub
fs
test
cld
fdivrp
mov
mov
out
enter
lock
cmp
hlt
add
dec
or
js
in
cmpsb
jns
stos
dec
inc
clc
sub
fsubs
outsb
jp
jne
add
or
movsbl
dec
xchg
cld
cmpsl
jmp
mov
jns
xor
mov
mov
punpcklwd
orl
pop
mov
xor
ret
in
jb
pop
bound
out
mov
in
aaa
subl
xor
sbb
or
cli
mov
inc
add
and
mov
ficomps
mov
in
xchg
es
dec
push
je
jae
nop
data16
pop
jle
push
loope
sub
outsb
leave
dec
outsb
addr16
dec
ljmp
popa
test
sub
or
sub
and
sub
dec
fld
orl
adc
mov
and
jns
in
scas
xchg
mov
ret
xchg
sahf
arpl
jp
icebp
push
imul
lock
mov
lock
iret
cld
movsl
dec
adc
outsl
cmp
jne
sub
jg,pt
lods
decl
jae
fisubrl
movl
mov
mov
pop
lea
jbe
xchg
mov
ds
jge
fstpl
adc
subl
clc
testb
repz
sbb
or
ss
popa
or
xchg
and
xor
cmp
or
adc
jmp
mov
xlat
ja
addr16
adc
aad
and
jg
pop
push
cmp
mov
xor
dec
andl
cwtl
or
cli
cmp
push
insl
xor
fwait
cmp
mov
in
test
outsl
mov
lret
je
popf
mov
jle
mov
sbb
es
imul
cld
jb
inc
out
loop
adc
fsubl
std
rcll
mov
lea
or
xor
and
pop
std
mov
mov
or
call
mov
lret
push
rolb
mov
mov
push
mov
xchg
daa
xchg
adc
mov
jno
pop
arpl
push
pop
inc
jmp
loop
adc
and
fdivrs
adc
ret
lock
xchg
jae
cwtl
es
or
and
out
test
add
mov
sbb
stc
push
sub
repz
loop
jg
fs
xor
mov
in
in
ret
push
inc
jno
imul
jne
xorb
jmp
aas
ret
or
dec
pop
pop
rcr
jmp
call
cmp
xchg
adc
pop
pop
mov
mov
dec
and
adc
inc
push
shll
mov
inc
cmp
sbb
leave
inc
bound
sbb
xchg
adc
add
jle
test
mov
jns
sbb
mov
dec
aam
shlb
sti
dec
pushf
pusha
scas
lahf
hlt
ss
int
aam
jle
dec
ficoms
xor
sub
push
mov
or
sbb
fbld
incl
pop
cmp
mov
ret
lea
cmpsl
repz
pusha
xchg
cs
filds
in
jl
fcomps
sti
jbe
inc
mov
push
clc
jge
loopne
in
rcll
push
movsb
testl
mov
stc
testb
cld
xchg
insb
sti
fucom
aad
repz
mov
mov
outsl
sahf
or
pop
mov
or
dec
sub
mov
popa
lea
mov
pusha
mov
jnp
inc
fcomi
xor
xchg
fucompp
movsl
aam
or
push
mov
andl
cmpsb
lea
push
push
jmp
xchg
pop
adc
int3
jne
je
mov
sub
in
pop
or
sbb
jp
sub
xchg
sahf
cs
xor
mov
dec
jg
inc
dec
data16
fwait
clc
lret
test
ja
fcoml
lret
jae
mov
xor
imul
xor
mov
push
push
imul
inc
cmp
or
clc
sbb
dec
scas
ret
stos
mov
bound
adc
xorb
fld
data16
cmc
in
loop
jae
sub
push
lret
imul
xchg
icebp
outsb
imul
push
and
or
mov
mov
or
fistpl
in
addb
sbb
in
sub
into
mov
mov
mov
addr16
push
lcall
leave
ret
push
dec
mov
and
mov
lods
push
sub
jecxz
adcb
sti
push
lock
int
out
aad
pop
xlat
cwtl
xor
jno
subl
test
or
pop
mov
jno
and
jno
ret
sbb
adc
mov
xchg
add
outsl
xchg
sbb
jge
mov
add
jb
sub
dec
ja
clc
aam
test
sbb
mov
in
mov
pushf
shlb
iret
out
shll
jmp
in
xlat
pusha
push
pop
in
loop
cli
xchg
jne
int3
cwtl
xor
in
lret
scas
adc
lods
out
add
push
lea
ljmp
jae
negl
adc
movsl
fucomp
sub
dec
pusha
outsl
fadds
push
dec
fwait
out
mov
mov
data16
jo
out
xlat
add
and
insl
call
mov
in
adc
mov
add
pop
push
pop
and
sub
movsl
sti
std
push
sub
dec
jl
mov
sbb
popf
and
cli
repnz
outsl
and
scas
aam
inc
fmulp
or
and
popf
jp
push
pusha
pop
ds
cmp
mov
dec
xor
das
push
loope
lcall
sbb
add
je
mov
and
movsl
pop
xchg
fldt
test
ret
jmp
iret
sub
stos
inc
adc
cmpsl
adc
mov
rol
xor
dec
test
jl
scas
ja
and
jb
repnz
and
adc
jo
pop
xchg
mov
push
jnp
or
outsl
mov
mov
inc
pushf
cli
push
test
push
rcrl
push
mov
sub
fsubrl
cmp
imulb
mov
shlb
loope
arpl
rclb
inc
add
cltd
fdiv
nop
shrb
ds
stos
or
mov
insb
lods
shll
sbb
mov
dec
aad
cmpsl
add
das
popf
cmc
or
mov
cmp
inc
inc
stc
push
pop
les
into
sub
mov
shlb
mov
push
or
sbb
inc
lods
data16
sbb
imul
imul
or
push
jbe
and
adc
xor
sbb
mov
jmp
std
stos
mov
test
inc
jb
arpl
das
inc
notl
push
dec
in
inc
pop
mov
push
pop
sbb
das
inc
mov
data16
sbb
test
dec
mov
add
sbb
stc
fmulp
add
ret
xorb
xchg
mov
lds
and
addr16
nop
mov
in
adc
pop
icebp
push
lds
mov
lahf
or
jp
mov
xchg
mov
ds
dec
sarl
mov
push
lock
popf
mov
inc
rcr
loopne
sbb
sti
rorb
and
out
mov
stc
pop
xchg
loopne
or
sbb
sub
in
ss
xchg
mov
jp
data16
ds
dec
xchg
icebp
movsl
jg
push
push
mov
ror
stc
mov
mov
dec
pusha
int3
cwtl
mov
out
ret
js
xor
pusha
cld
cmp
int
dec
ret
into
xchg
out
js
insl
inc
in
xor
cmp
sti
icebp
gs
push
outsl
mov
in
push
leave
int3
xor
loop
mov
jb
pop
mov
test
out
lcall
stc
xchg
lcall
mov
enter
stc
in
pop
xor
cmp
aam
mov
lods
dec
cmc
cs
xlat
lods
sahf
orb
push
dec
mov
or
pop
in
es
bound
or
stos
gs
mov
mov
xorb
mov
mov
aas
xor
test
lea
pop
fists
ficomps
out
sub
cwtl
jbe
ljmp
outsb
repnz
std
leave
mov
test
aas
aam
arpl
and
ljmp
xchg
cmpsl
mov
sbb
aam
sub
sub
test
std
imul
mov
call
das
js
sti
mov
scas
xor
cld
mov
mov
mov
cwtl
push
xchg
xor
rcll
lret
das
xchg
push
dec
add
mov
xchg
cmp
pop
or
outsl
subl
jp
mov
xlat
mov
fdivl
mov
mov
lods
icebp
cli
cli
das
jle
jb
cld
lods
addb
push
cld
lea
sbb
andl
add
sub
dec
jl
xor
xchg
and
mov
push
in
jl
mov
xor
call
mov
lcall
cmp
js
cwtl
iret
xchg
cli
nop
pop
nop
sub
xchg
dec
jns
das
sub
lret
add
fldl2e
push
or
scas
shlb
sub
mov
sbb
out
or
mov
cmpsb
jl
add
push
adc
sub
fwait
sbb
ret
in
adcb
push
cmpsl
push
jno
cmp
xchg
mov
ds
stos
mov
or
out
or
sub
xor
xchg
and
je
cltd
xchg
enter
inc
lods
or
pop
fimull
xorb
pushf
cmpsb
mov
pop
jmp
stc
mov
push
addl
push
and
pop
pop
and
sahf
fldcw
int3
inc
call
push
or
stos
ds
das
sub
addl
cmpsl
mov
inc
and
loopne
xchg
cmp
mov
and
and
mov
std
fistps
push
icebp
or
or
pushf
add
in
mov
pop
loopne
jp
neg
dec
jge
aas
insb
ja
dec
jne
test
push
and
sbb
aad
adc
outsl
mov
mov
mov
sahf
push
shlb
pop
cmc
enter
sbb
aam
aad
popa
ror
or
rcrb
aas
shlb
pop
popf
cmc
or
rorl
pop
mov
xlat
lock
imul
les
fidivrl
fsubl
cmp
mov
movsb
sti
pop
stos
dec
push
cli
call
out
and
dec
cltd
sub
add
pop
inc
repnz
push
adc
enter
inc
xor
dec
rclb
mov
and
fdivrs
test
sbb
sbb
outsb
cmpsb
lds
mov
jo
enter
sar
sbb
loope
bound
mov
loop
lret
je
or
ret
add
pop
xor
mov
xchg
add
int3
lods
insl
inc
inc
mov
mov
mov
jne
int3
xchg
jl
mov
xchg
addr16
mov
adc
insb
adc
enter
push
addb
or
xchg
repz
jge
jle
aam
imul
jo
pop
dec
jp
out
dec
xor
mov
insb
sub
into
jbe
mov
pusha
push
adc
xchg
and
dec
in
repnz
rolb
or
jbe
scas
fmuls
pop
jnp
gs
dec
lret
test
decl
cmp
inc
inc
pop
rorl
jnp
popa
out
sbb
ljmp
push
cmc
notl
cmp
xchg
inc
xchg
cld
mov
jae
faddl
mov
xor
push
jmp
mov
ljmp
jle
out
vdivss
movsb
test
imul
mov
inc
add
add
xor
push
mov
scas
sbb
das
push
popa
je
shl
push
inc
arpl
cmp
dec
mov
pushf
xlat
pop
stc
mov
loopne
add
rolb
lods
test
sarb
std
cld
loope
ljmp
pop
cwtl
cmp
adc
inc
jp,pt
loope
repz
repz
cmpsb
jg
aam
aas
dec
jecxz
addb
lock
sbb
jne
test
dec
jb
imul
or
xchg
cli
dec
sbb
or
mov
jne
pop
popa
and
sti
sub
stc
jns
jae
pop
cli
mov
roll
or
mov
test
sahf
xchg
cmpsb
jp
iret
cmpsl
in
xchg
popf
xlat
daa
clc
insb
popf
mov
popa
add
mov
movsb
sbb
hlt
cmp
ret
jb
movsl
ret
xchg
jae
sbb
or
insb
push
xchg
xchg
outsl
dec
jle
insb
adc
and
ss
punpckldq
out
mov
jns
dec
cmp
cltd
les
lret
nop
pop
std
mov
lcall
fneni(8087
mov
shrl
popf
jp
xor
sub
adc
ret
push
or
push
xor
mov
cmp
lds
xor
sub
pop
cmp
push
sbb
insl
fidivrl
lret
pusha
repnz
push
inc
push
jne
addr16
fbstp
lcall
mov
mov
dec
pop
pop
mov
jns
mov
add
test
push
jae
fwait
or
push
scas
mov
aaa
jno
push
cmp
out
mov
jae
push
sti
fidivrs
dec
mov
mull
xchg
gs
mov
movl
mov
mov
pop
adc
jle
std
push
push
and
pop
fnstcw
pop
jp
das
insb
mov
add
cltd
pop
xchg
mov
lods
ds
stos
fdivrl
out
cmp
cwtl
add
psllw
out
dec
xor
iret
rcr
sbb
scas
push
inc
repnz
outsb
sahf
lods
icebp
lds
shll
pusha
cltd
cmp
sar
xor
and
inc
aam
rol
test
dec
cmpb
int3
rolb
mov
add
or
jl
and
inc
out
leave
sti
adc
iret
inc
sti
arpl
mov
in
or
xor
pop
mov
add
add
call
pop
js
dec
imul
sbb
or
adc
and
xchg
loop
mov
lods
scas
fcomip
fcoml
pop
push
adc
cli
mov
mov
fnsave
cmp
push
or
loop
in
faddl
xchg
push
ss
xchg
mov
mov
and
loopne
popf
sti
inc
and
push
xchg
xchg
popa
repnz
and
aaa
mov
inc
push
outsl
and
mov
and
inc
xor
ret
leave
loop
or
mov
ret
mov
ljmp
ja
pop
les
in
jg
in
rcll
enter
mov
sarb
je
cmpsb
adc
xchg
cs
or
stos
pop
push
lcall
cltd
ret
and
cs
fldl
fs
ljmp
pushf
lret
lods
movsl
mov
xchg
mov
in
inc
sbbl
es
sar
push
jne
pop
mov
xor
mov
mov
inc
xchg
pop
out
xchg
mov
std
sub
jne
pop
dec
add
pop
fsubl
movsl
dec
dec
mulb
pop
cmovae
jns
pop
scas
pushf
and
loop
testb
in
pop
cmp
push
scas
jnp
int
jb
jne,pt
cmpsb
mov
outsl
sub
mov
sbb
out
xchg
cltd
or
inc
ds
jno
push
push
popf
outsb
xchg
mov
loope
push
mov
fistpl
stos
mov
fsubl
ljmp
cmc
mov
test
loop
and
jne
mov
ret
daa
inc
aad
lock
mov
jg
sub
xor
dec
inc
pop
push
sub
dec
add
rcll
mov
jle
std
xlat
jle
add
mov
push
sarb
sbb
jo
sub
sar
dec
popa
pop
cmpsl
push
in
dec
xorl
loopne
jl
lcall
inc
icebp
imul
inc
loop
loope
negl
sahf
imul
fisubl
test
sti
insb
jp
outsl
out
leave
mov
add
xor
pop
xor
icebp
out
mov
mov
xchg
xchg
addr16
or
jno
imul
xchg
addr16
add
mov
jmp
adc
pop
push
adc
inc
xchg
inc
sub
xor
incb
popf
andl
jae
fcmove
and
lcall
jl
pop
push
push
orb
mov
fs
push
outsb
dec
sub
inc
enter
sub
into
scas
push
out
outsb
lds
lahf
xor
nop
inc
fwait
stc
dec
jge
addr16
add
arpl
popl
dec
andl
dec
rcrl
jns
xlat
lock
xchg
push
pop
or
inc
add
cmp
mov
sti
call
cmc
and
fwait
xchg
cmp
cltd
mov
sub
movsb
lods
sub
mov
mov
mov
imul
cmp
and
bnd
dec
scas
pusha
push
icebp
leave
dec
arpl
test
cmp
incl
cwtl
in
in
in
lcall
xor
ret
fcoml
popl
icebp
pop
pusha
pop
pusha
and
mov
nop
inc
outsb
movsb
push
int3
jge
or
xor
pop
mov
call
gs
jne
sub
and
jg
fwait
repz
sti
lea
and
daa
inc
xor
add
and
cmpsl
pop
scas
hlt
out
rcr
loope
enter
data16
loopne
lret
cmpsb
out
cmp
or
add
dec
dec
push
or
mov
add
lods
adc
jp
xchg
jl
fcomps
pop
in
jo
push
xor
rcll
jp
or
test
adc
aad
aas
add
push
lret
addr16
ljmp
out
out
shll
xor
push
mov
insl
into
cli
inc
xchg
adc
pop
add
das
cmp
mov
popf
hlt
jns
dec
in
into
xlat
fiadds
pop
out
sbb
or
aaa
addr16
mov
mov
imul
out
mov
dec
cmpsb
jp
mov
out
sbb
mov
iret
add
fnstcw
outsl
adc
es
adc
pop
cwtl
mov
xor
jnp
bound
xor
mov
ja
cs
xchg
in
mov
sub
scas
testl
repz
xor
jmp
dec
ja
xchg
mov
rorl
ret
in
jno
xchg
jmp
jl
daa
fs
loopne
inc
cmpsl
iret
mov
jnp
or
cmp
daa
push
sub
nop
adc
cld
pop
in
nop
inc
add
pop
icebp
cs
clc
movsb
lods
xor
mov
pop
lods
shrl
out
xchg
xchg
sub
fidivrs
sub
jge
call
jg
add
xor
jmp
std
dec
add
jecxz
cwtl
adc
xor
lahf
xor
add
fs
jae
pushf
test
in
lret
ss
addl
popf
out
pop
jg
sbb
repz
scas
scas
mov
or
mov
and
orl
or
xlat
imul
adc
ja
xor
or
xor
imul
xchg
imul
cwtl
xchg
jns
lods
movsb
push
cmpsl
mov
add
xor
or
bound
mov
loop
push
push
ss
pop
or
sbb
clc
gs
push
lcall
testb
imul
aaa
adcb
lret
sbb
cwtl
mov
rcl
inc
in
xchg
mov
jbe
int
int
and
mov
lret
ret
pop
les
jnp
out
repz
loopne
inc
stos
push
lods
je
shrl
mov
xor
and
lahf
push
lcall
adcl
shlb
test
push
negb
js
clc
push
mov
mov
stos
cs
cmp
shl
mov
insb
ja
adc
inc
lcall
push
outsb
mov
mov
out
dec
dec
in
cmpsl
push
jbe
stc
and
test
loop
sbb
dec
pop
js
repz
addr16
jne
or
mov
add
dec
jbe
or
cld
push
xchg
icebp
out
sub
or
jno
ret
push
sti
popa
push
xor
xor
pushf
shlb
mov
jg
dec
call
fnstenv
in
rcrb
sbb
lea
lods
sbb
pop
imul
lcall
aad
xchg
repz
jns
aad
pop
imul
rclb
push
dec
jmp
jno
jnp
in
cmp
sbbl
add
dec
xchg
sub
dec
in
cmp
jle
sub
mov
sub
repz
mov
rorl
out
sbb
pop
pop
dec
inc
jb
dec
cmp
pop
outsl
add
jns
arpl
mov
lods
xchg
dec
insb
inc
sub
call
push
xor
xor
sub
int
or
mov
add
arpl
pop
ja
cmp
jp
push
xorb
push
adc
imul
push
inc
mov
rcrl
movsb
mov
mov
dec
dec
and
out
sub
jae
add
sub
xor
sbb
cmp
mov
ja
mov
lret
insb
aam
sub
mov
ljmp
clc
sarl
daa
mov
lret
outsb
sub
lret
lods
es
test
sbb
shl
mov
push
mov
in
cli
xor
jge
adc
lret
xor
mov
aaa
and
ficoml
mov
sbb
pusha
dec
jmp
movsb
and
outsb
jg
push
testb
sbb
xchg
mov
or
push
cltd
ja
and
pop
addr16
mov
popa
or
mov
push
pushf
in
fldl
out
insl
lret
orl
jmp
inc
packsswb
sahf
jae
cmp
pop
sbb
cwtl
sarb
mov
mov
dec
cmp
mov
les
cmc
mov
xchg
mov
addl
dec
std
lods
jnp
add
adc
adc
push
je
or
lock
test
hlt
es
jnp
xchg
push
pusha
and
fmull
cmpsl
popa
mov
and
dec
call
adc
inc
or
mov
mov
inc
jne
jnp
arpl
mov
cwtl
lret
jp
lea
jecxz
sbb
insl
sub
cld
add
mov
xchg
sbb
mov
ret
push
sbb
movsl
cmp
pushf
roll
push
bound
cwtl
pop
and
mov
loope
push
bound
jns
inc
iret
movsl
decl
push
dec
xor
int
add
repz
adc
pop
dec
pop
mov
or
jg
lcall
or
arpl
frstor
xor
pop
inc
std
stos
jmp
sub
jns
sub
sbb
inc
movsl
push
test
mov
mov
xor
stos
aas
in
or
mov
xchg
jp
sbb
mov
mov
clc
cmp
cmpsl
int3
ret
cmpsl
jg
push
inc
push
mov
xchg
and
xor
push
or
sub
lods
rorb
pop
mov
mov
mov
out
cmp
jp
dec
pop
stos
pop
sub
insl
loope
push
aaa
mov
mov
in
mov
clc
xchg
pop
hlt
imul
sub
push
pop
call
adc
xor
mov
xchg
mov
push
fimull
jae
jns
cli
mov
mov
andl
stc
jge
movsb
lods
nop
sbb
aad
in
pop
or
dec
ljmp
mov
push
mov
inc
xchg
mov
xlat
mov
test
mov
ss
incl
test
sub
add
push
out
cmp
call
sbb
loopne
or
mov
pop
movsb
pop
push
cmp
adc
jns
cld
aad
std
popl
jmp
jae
stos
adc
icebp
push
repnz
sub
cmp
cmpsl
ds
push
inc
pop
pop
movsb
test
mov
pop
stos
and
and
mov
pop
test
cmp
movsb
or
js
jae
pop
fs
mov
inc
in
sbb
mov
mov
les
sbb
call
or
out
mov
test
mov
cmpsl
mul
jmp
fs
mov
pop
pop
or
lods
outsb
dec
repz
pop
cli
xor
mov
jae
loopne
je
xchg
add
cld
xor
fidivrl
mov
dec
jns
mov
and
mov
pushf
imul
inc
jmp
sub
adc
sbbb
adc
cmpb
inc
inc
mov
xor
push
loope
or
mov
out
stc
popf
out
in
loop
mov
adc
xchg
jne
neg
jle
gs
pop
out
cmp
push
jl
sub
sti
lea
xchg
adc
mov
mov
jecxz
cwtl
sahf
jmp
clc
movsb
adc
imul
mov
stos
icebp
scas
pop
mov
adc
frstor
mov
lods
pushf
add
cli
scas
fs
xchg
adc
mov
adc
mov
loop
and
shlb
fwait
or
push
outsl
repnz
seto
jb
js
or
adc
call
in
mov
mov
in
addb
push
push
cmc
iret
clc
fimuls
repz
popf
inc
pop
insl
rcll
rcrb
xor
push
sub
cmp
clc
les
pop
aam
in
sbb
inc
fwait
rcrb
test
xor
hlt
cmc
mov
cltd
sub
cld
mov
cli
lret
gs
xchg
in
push
int
aas
push
ljmp
xor
aaa
cli
mov
pop
in
jp
bound
pop
adc
pop
lods
jecxz
aas
les
mov
sub
pop
aaa
jo
rorb
loop
jnp
imul
scas
shrb
aad
xor
inc
push
or
sub
outsl
bound
hlt
mov
filds
push
mov
cmp
mov
hlt
out
sub
xchg
mov
fiadds
orb
rcrl
pop
cmpsb
stc
jle
xchg
imul
mov
inc
sbb
hlt
mov
ljmp
pop
sti
ret
imul
sti
push
push
ret
loop
pop
repz
adc
pop
repz
mov
cmp
lret
dec
and
aam
xor
sahf
mov
sub
les
xor
popa
lock
mov
mov
ret
push
xchg
lret
mov
and
push
fs
xorb
inc
or
lret
cvtps2pd
in
pop
mov
xor
xchg
adc
je
cmpl
and
cltd
test
fimull
icebp
pop
les
cmp
fsub
xchg
addl
scas
out
dec
xor
shl
inc
xchg
jb
popf
aam
dec
mov
fisubl
scas
fcmovnb
push
jns
sbb
lahf
rcl
pushf
push
cli
daa
xor
cmpsl
xchg
int3
adc
mov
clc
inc
jno
mov
sbb
aaa
stos
or
stos
out
movb
rorb
aaa
inc
adc
insb
push
clc
mov
pop
sbb
push
out
xchg
xchg
gs
cmp
out
jbe
mov
ss
xor
aad
adc
imul
loope
sub
shll
pop
lea
xor
xorb
jo
sub
sbb
jl
bound
mov
jb
xchg
fisttpl
lock
push
cmp
addl
dec
sub
clc
aas
inc
subb
movsb
jmp
rorb
pusha
pop
or
sub
xchg
adc
hlt
imul
mov
mov
mov
gs
lcall
sub
test
adc
mov
insb
in
xor
arpl
mov
testl
sub
add
test
loope
in
jae
sbb
push
xor
mov
push
fisubl
push
mov
fcoml
sub
mov
das
and
clc
and
mov
cmp
lahf
jb
cmc
push
jns
push
insb
mov
ret
xchg
xchg
dec
ds
jns
ror
insl
mov
loopne
mov
outsb
or
adc
sbb
inc
jnp
inc
xchg
and
das
gs
lds
mov
addr16
rcrl
mov
decb
dec
stc
cwtl
pop
jnp
enter
cwtl
outsl
shlb
ljmp
popf
rcll
lock
pushl
pop
ret
mov
and
loopne
cmp
faddl
add
repnz
jno
xchg
and
aas
cmc
jl
lea
fdiv
pop
push
and
xchg
mov
jge
mov
jbe
jecxz
sti
cmp
repnz
sahf
sub
mov
adc
out
out
cwtl
pusha
pusha
sbb
pop
or
push
call
jnp
test
imul
cmp
add
movsl
and
ss
mov
adc
std
lea
jo
repz
movsl
jmp
sbb
in
cltd
outsb
sub
adcl
cltd
fdivl
inc
imul
outsl
mov
sbb
mov
fucomi
shlb
inc
mov
mov
mov
or
mov
jp,pn
insb
cs
pop
cmp
jge
pop
bound
loop
lcall
mov
scas
test
or
cmp
xchg
add
fidivrl
mov
scas
xchg
xor
outsb
imul
mov
jnp
push
or
mov
mov
mov
jo
ds
lret
into
cmp
mov
add
and
mov
sbb
shll
pop
or
sbb
cs
out
adc
faddp
into
add
ja
es
sbb
push
push
sar
mov
adc
shlb
sbb
lds
add
test
sbb
mov
imul
call
xchg
add
cmp
jl
pusha
mov
aas
and
enter
adc
adc
ret
pop
push
xchg
mov
jge
lahf
mov
addb
int3
fsts
out
dec
add
mov
push
push
xchg
pusha
dec
ss
cmc
and
fidivrl
add
mov
ja
mov
sub
ss
sub
xchg
mov
pop
mov
inc
mov
jl
fisubrs
or
ret
imul
jno
cld
test
jae,pn
sbb
in
xchg
jb
aas
es
add
lcall
leave
cwtl
and
movsl
lcall
mov
fwait
lods
inc
push
xor
es
mov
loope
fs
rolb
imul
in
mov
out
nop
lea
mov
push
mov
ret
xor
dec
aas
mov
lock
dec
fwait
pop
or
xchg
lods
ja
push
inc
xchg
push
adc
mov
lock
push
xchg
inc
mov
jecxz
mov
mov
push
rol
js
xchg
pop
aas
jl
ja
lea
stc
out
sub
inc
shl
shrl
and
mov
or
cltd
icebp
xchg
popf
pop
daa
add
incb
and
xor
comiss
movsl
rorl
loop
sarl
xchg
pop
rcll
icebp
inc
add
inc
ret
dec
mov
iret
and
sahf
mov
rcrb
je
mov
scas
sub
xchg
push
sar
inc
jns
jg
mov
outsl
test
cmp
aad
faddl
xor
or
mov
push
scas
dec
repnz
stos
push
add
hlt
and
push
jmp
scas
push
aam
fwait
xor
imul
and
inc
scas
xchg
aad
test
push
in
movsb
test
aaa
push
subl
or
jl
enter
lret
jp
cmp
call
stc
fldt
and
lret
addr16
inc
or
hlt
call
loopne
add
roll
or
inc
cmp
fwait
iret
incb
mov
lock
mov
ja
insl
popa
test
adc
inc
sub
mov
add
add
inc
inc
sub
nop
arpl
ret
fildll
cmpxchg
jo
jo
lea
je
in
mov
lods
popa
pop
lahf
test
stos
cmp
mov
jno
xor
loopne
or
adcl
out
sub
push
dec
jnp
xchg
ss
dec
loopne
add
xor
or
pop
stos
mov
cmp
js
push
pop
test
xor
mov
and
test
cmpsl
add
inc
jg
leave
leave
scas
int
ret
inc
push
jmp
std
cmp
repz
cmpl
mov
inc
ret
dec
popa
push
mov
insl
dec
es
lahf
daa
fimull
sbb
setbe
mov
xchg
dec
aad
addl
mov
jp
xor
lret
push
sub
xchg
dec
inc
add
test
jmp
inc
push
sub
adc
popf
mov
mov
fisubs
push
lea
mov
dec
push
out
fadds
ja
inc
pop
sub
mov
push
out
jne
mov
shlb
into
js
xchg
mov
icebp
lock
loopne
rolb
push
xlat
cmp
mov
push
sbb
test
jle
dec
sahf
adc
jns
cmp
mov
je
sub
call
repnz
or
and
mov
loopne
jnp
mov
mov
lcall
mov
or
sbb
fsts
mov
adc
cmpsb
mov
cs
push
jp
pop
mov
aas
adc
out
test
mov
mov
repnz
fcompl
jmp
jecxz
popf
cmp
and
adc
mov
iret
pop
dec
shll
enter
cmp
pop
js
inc
in
sbb
mov
push
cmp
aaa
push
mov
out
or
aad
adc
xor
inc
ret
xor
adc
mov
stos
sub
outsb
fistl
inc
addr16
mov
inc
jle
xor
mov
sbb
das
or
jo
ret
loop
fwait
pop
push
push
xchg
cltd
es
insb
sub
xorl
sbb
rclb
and
loopne
add
inc
mov
pop
ret
add
les
push
mov
pop
lock
or
clc
sbb
mov
adcl
scas
mov
cmp
push
add
repnz
xchg
outsb
das
xor
sbb
mov
aad
sbb
sub
fstl
or
rolb
pop
add
cmp
out
out
jmp
lods
repz
cwtl
jbe
fcmovne
or
mov
mov
shlb
enter
inc
std
jmp
xchg
or
int
pop
cltd
mov
push
js
xchg
jge
cs
mov
fsts
out
or
out
and
fsubrs
mov
ljmp
mov
negl
sbb
cmp
imul
or
pop
inc
push
push
jmp
mov
addr16
mov
iret
jmp
add
shrl
popf
call
adcl
call
lods
aad
inc
out
cltd
pop
gs
sub
pop
dec
jnp
push
push
mov
fwait
pminsw
mov
mov
inc
mov
mov
imul
ljmp
xor
lcall
dec
pop
adc
pop
add
push
xchg
dec
scas
out
mov
filds
or
mov
idivl
ret
inc
fisubl
pop
mov
sahf
adc
ljmp
pop
pop
nop
insb
jno
xchg
shll
ja
add
sbbl
or
inc
movsb
inc
push
insb
insb
icebp
jp
sarl
iret
cmp
cmpsl
ljmp
out
test
cld
ret
test
dec
loop
ret
pop
stos
rorb
pop
repz
sti
popf
pop
rolb
cmp
mov
pusha
sub
lods
adc
pop
icebp
push
jbe
aam
pop
xor
mov
jg
sub
xchg
bound
rclb
out
push
mov
stos
popa
shrl
and
jo
sti
mov
ja
test
fidivs
mov
adc
dec
roll
inc
cld
and
xchg
out
push
lods
test
mov
add
or
adcl
dec
mov
jle
add
sbb
push
cs
jmp
ja
cmp
ljmp
dec
repnz
mov
lret
and
test
xchg
add
inc
adc
pop
and
mov
xor
outsl
add
pand
pop
or
mov
sub
jle
into
jns
fcompl
in
imul
mov
inc
rorb
loope
and
mov
push
add
xor
mov
ret
cmp
dec
or
sbb
in
mov
fildll
xorb
sub
insl
mov
jmp
ficoml
in
ja
mov
mov
mov
xchg
fldl
cmpl
iret
fcoml
hlt
mov
mov
inc
sub
jnp
stos
call
cmp
aad
sub
push
and
test
fwait
loope
add
std
mov
sub
popa
enter
jl
dec
pop
pop
lods
inc
xchg
ret
cmpsl
jae
mov
loop
stc
test
roll
mov
rclb
lcall
sbb
jmp
call
pop
inc
pusha
das
mull
xchg
mov
stos
shlb
sahf
mov
outsb
push
xchg
mov
sbb
or
push
inc
out
shrl
or
outsb
sbb
jo
test
sbb
jge
out
popa
sarl
push
xchg
scas
bound
rcll
scas
push
mov
cmc
bound
loope
adcb
inc
xor
movsb
insl
gs
movb
cmp
or
inc
icebp
inc
pop
outsb
mov
xchg
aaa
adc
cmp
loope
insl
les
sbb
xor
pop
or
or
lret
dec
andb
mov
push
mov
fnstcw
sbb
sub
cmp
leave
lahf
das
inc
jmp
jbe
cltd
adc
pop
pop
mov
push
bound
inc
xchg
shrb
fcoms
xchg
pop
jo
pop
and
insb
movsb
not
xchg
adc
ljmp
loopne
aas
test
fdivrs
sbb
xchg
pop
test
or
pushw
inc
cli
test
adc
adc
subl
pop
or
out
push
jbe
cmpsl
xlat
aaa
scas
dec
lods
and
pop
sub
sbb
xchg
in
lcall
imulb
xor
push
notl
addl
xchg
pop
mov
mov
lock
push
sti
push
stos
divl
push
add
xlat
fbstp
cmp
movsl
je
cmc
push
aad
lods
add
or
mov
in
lret
pop
add
in
std
pop
xchg
orb
shlb
mov
test
subl
iret
dec
mov
jno
mov
mov
in
aas
stos
das
mov
sub
sbb
cmp
pop
addr16
icebp
enter
xchg
add
mov
push
mov
xor
imul
push
imul
mov
sub
mov
mull
inc
imul
in
adc
sub
mov
mov
int
add
in
dec
mov
xchg
push
cli
mov
inc
aam
adc
jp
mov
and
rcll
cmp
cmp
fs
rcll
out
xchg
fidivrl
insl
cld
outsb
fsubs
xor
mov
dec
cmp
push
pop
mov
add
pop
cmc
pusha
imul
and
rclb
fisttpll
ljmp
out
mov
repnz
jge
insb
in
mov
mov
jge
or
out
mov
cld
fidivl
xlat
out
xor
nop
mov
push
in
cli
lret
jmp
mov
popf
fidivs
pusha
dec
hlt
lret
dec
jo
faddl
pushf
scas
lcall
out
psubq
jge
loopne
enter
push
push
nop/reserved
xchg
shlb
stos
cld
subl
push
add
shrb
adc
aaa
mov
bound
sar
repnz
test
push
es
ds
fld
cmp
into
ss
out
mov
xchg
cmp
leave
faddl
popa
and
jle
sbb
jnp
rcll
or
add
sub
imul
jo
out
or
jo
mov
dec
leave
xor
sbb
mov
cld
mov
mov
lret
lcall
arpl
jo
cmc
out
pop
imul
int
jecxz
push
rorb
adc
mov
nop
xor
pusha
les
push
push
fistps
push
inc
pop
lea
pushf
xchg
jbe
cltd
jb
mov
aad
adc
nop
mov
rcll
cli
mov
push
mov
test
and
dec
sti
dec
popa
loopne
xchg
aas
dec
aam
test
divb
scas
pusha
bound
into
popa
adc
push
pushf
popf
test
pop
repz
arpl
sbb
int
rorb
push
jb
cmpsb
mov
sti
xchg
imul
repz
or
jge
sub
dec
xchg
stos
pushf
mov
rorl
jmp
sbb
mov
pop
enter
scas
xor
jl
repnz
enter
hlt
test
loope
mov
or
aam
insl
movsb
mov
nop
adc
add
cld
mov
mov
fxch
cwtl
das
adc
sub
sbb
daa
push
mov
xor
lock
mov
stc
dec
mov
aaa
pop
jb
fwait
pop
mov
dec
jns
lock
or
and
orl
imul
ja
pop
xchg
in
jo
sub
test
aad
sbb
scas
mov
jp
test
and
pop
push
repz
enter
cltd
enter
jo
sub
adc
pop
sub
fists
push
lcall
xlat
push
pop
sub
lret
fcos
call
into
out
sub
cmp
pop
pushf
mov
stos
xchg
outsb
jmp
lods
sbb
mov
push
mov
imul
sub
mov
lock
inc
fs
push
mov
imul
lret
js
shll
les
xchg
push
adcb
inc
ret
xor
inc
ret
cmpsb
pusha
jns
xchg
mov
xor
sub
cmp
aaa
push
pop
icebp
fsubp
mov
sbb
clc
pushf
ret
lcall
mov
inc
add
cltd
or
cmp
lret
out
mov
xor
orb
lods
insl
add
push
jne,pt
fcomps
and
pop
and
xor
sub
sbb
adc
test
push
mov
rolb
js
gs
out
adc
pop
sub
dec
int3
test
sbb
cmp
repnz
jl
imul
jg
mov
cmc
pop
dec
jl
int
insb
scas
iret
cmp
add
sbb
fsubl
mov
ficoms
jmp
ret
scas
jmp
out
sbb
pop
mov
and
addb
push
imull
cmp
fsts
sbb
in
sbb
inc
jecxz
lret
mov
inc
xchg
insl
adc
les
ret
inc
test
inc
imul
rcll
push
ja
pop
shr
lret
es
dec
loop
xchg
ret
popa
dec
cli
sahf
mov
mov
test
stos
mov
sti
and
or
pushf
push
cmp
inc
ljmp
sub
inc
inc
sbb
inc
jle
adc
in
push
insl
inc
icebp
popa
clc
ljmp
fbld
std
sub
push
inc
vmread
jno
or
lret
mov
and
inc
mov
push
mov
cmove
shrb
pop
test
xchg
add
out
mov
test
xchg
notl
mov
call
rolb
inc
push
int3
lcall
push
or
js
push
aad
scas
xlat
call
jb
mov
add
shrb
xchg
popf
adc
fistpl
insl
inc
push
xor
sti
mov
sarl
imul
xor
pusha
or
xchg
pushf
ljmp
out
je
cmp
outsb
or
mov
mov
lret
push
ja
shl
out
sub
fcomps
movsl
stc
loope
or
mov
mov
pusha
cmp
jecxz
orb
dec
inc
and
pop
das
inc
outsl
jnp
xlat
fcoml
mov
popa
adc
lret
and
inc
push
arpl
add
pop
jb
mov
mov
adc
in
push
jmp
dec
pushf
push
fidivs
lahf
les
push
loope
inc
add
adc
cmpsb
mul
and
sbb
xchg
aaa
test
jmp
mov
pop
xor
int3
xchg
pop
add
sub
xor
into
addr16
test
push
jp
push
jle
repz
mov
mov
daa
int3
sbb
push
or
sti
and
sbb
dec
push
outsl
aas
mov
cmpsl
lods
jbe
xor
jl
icebp
test
mov
jb
in
inc
jmp
pop
decl
fistpll
xchg
jg
mov
xchg
stc
cmc
sub
mov
notb
add
pop
adc
in
stc
sbb
mov
cmp
fldl
nop
repnz
and
fwait
testb
pop
push
popf
cmp
sbb
aam
pop
lahf
push
inc
sub
jmp
in
cld
sbb
pop
ss
test
dec
or
jl
sbb
mov
jo
adc
ja
xchg
pop
xchg
pop
add
xchg
sbb
adc
dec
xor
xchg
dec
aaa
mov
push
push
out
jecxz
iret
lods
sub
push
adc
in
and
pop
push
jns
dec
jno
ds
push
xchg
nop
repnz
sbbl
pop
mov
stc
shlb
sti
insb
and
xchg
jle
dec
leave
sub
repnz
sub
mov
mov
push
popf
shr
scas
mov
test
mov
jl
repnz
mov
lds
pop
xorl
mov
mov
adc
out
mov
fisttpl
iret
aad
cmc
jecxz
sub
mov
jle
sar
repnz
mov
mov
movsl
outsb
fcmovnu
loope
cmp
mov
pop
sub
or
stos
inc
fwait
aad
add
adc
xor
test
lock
ds
cs
out
js
scas
movsb
repnz
mov
add
scas
loope
pop
fwait
xor
adc
mov
cmp
cmp
mov
shlb
das
cmp
and
pusha
add
jle
push
adc
and
pop
flds
leave
fnstcw
movsb
cmp
mov
and
imul
cltd
dec
jne
sbb
aaa
inc
cli
fwait
repnz
jns
mov
sub
xor
cltd
loope
add
std
sub
icebp
jg
cmp
push
stos
repnz
test
pop
xchg
enter
adc
add
ja
mov
lahf
push
xor
mov
or
es
aad
and
rcrb
xor
test
cmpsl
out
ljmp
cmc
push
test
mov
mov
sti
mov
jb
xor
in
sbb
popf
jl,pt
shr
lds
pusha
jae
fmull
scas
popa
neg
adc
jnp
lret
imulb
cmp
leave
sub
js
mov
cmp
xchg
sbb
or
mov
adc
popa
popa
add
pop
mov
into
sbb
jne
out
mov
adc
pushf
je
mov
pop
aaa
push
xlat
dec
insb
jg
fsubr
cmp
fidivs
outsb
cmpsl
stos
inc
icebp
das
jl
iret
and
jmp
dec
push
arpl
cli
inc
in
jp
adc
push
test
push
add
ljmp
xchg
int
adc
lahf
shlb
lahf
fs
mov
scas
movsl
jmp
xchg
inc
mov
dec
test
repnz
pop
sub
lret
leave
cwtl
sarb
fimuls
mov
pop
inc
dec
fnstsw
mov
fisubrl
mov
imul
in
out
or
add
loopne
adc
add
cmp
push
mov
movsb
sahf
mov
stc
ljmp
mov
adc
dec
xchg
or
mov
adc
push
xchg
test
add
fs
xor
mov
inc
inc
mov
or
idivb
sbb
xchg
mov
mov
adc
sbb
mov
cmpsl
outsl
adc
clc
pop
mov
jle
xchg
sub
mov
test
rorb
ds
jmp
dec
xor
js
cmp
pop
cs
pop
out
push
xchg
cmp
es
cmc
or
loope
pop
aaa
mov
lea
mov
repnz
or
lahf
int3
stos
jne
fsub
xor
push
rorb
jo
or
in
or
cmpsb
outsb
sub
pop
pop
ja
pop
out
xorb
push
or
mov
pop
enter
mov
mov
xor
adc
imul
mov
sub
mov
mov
int
aaa
test
mov
mov
cmp
movsl
push
ss
stos
cmpsb
mov
mov
jg
pop
push
lcall
add
dec
push
fwait
add
in
add
or
xchg
shlb
pop
xchg
enter
or
inc
out
xchg
or
xor
and
aaa
mov
mov
jmp
sti
cli
fsubrl
out
aas
lods
das
std
movsl
adc
dec
xor
xor
lret
in
ret
jle
sbb
rcrb
daa
cmc
rcll
mov
and
in
scas
scas
mov
incl
mov
sub
adc
cmp
dec
or
jbe
lods
xor
loope
xor
jmp
faddp
out
xor
dec
inc
pop
test
mov
es
insb
push
and
pushf
sbb
rcll
les
or
inc
fwait
movzwl
decb
jo
inc
dec
push
insl
lods
shrb
cmp
lea
mov
bound
fwait
add
cmp
xor
shrb
pop
xor
les
adc
movsl
rol
out
daa
mov
mov
lahf
fildl
in
sub
xchg
or
or
pop
pop
int3
add
mov
xor
scas
pop
mov
mov
push
add
push
inc
imul
push
inc
jge
push
inc
pop
andb
fidivrs
call
xor
int3
sub
fwait
insb
and
push
lock
mov
ljmp
push
addl
and
pop
push
jmp
fs
pop
arpl
lods
rcll
xor
jg
sbb
mov
aaa
out
xchg
out
enter
and
lock
hlt
lods
imul
call
xor
shr
sbb
lea
sbb
fldl
jmp
mov
jb
in
out
cmp
or
jg
inc
sub
fnsave
iret
xor
lret
inc
push
pop
mov
mov
cld
mov
lret
and
imul
ja
cmp
cmp
popf
xchg
addb
nop
cld
cltd
jecxz
lea
rclb
jmp
stos
cli
mov
or
push
or
lods
vpmacssdqh
pop
aam
fs
and
push
into
cltd
inc
outsl
mov
dec
xchg
jmp
jns,pn
xchg
int3
adc
xchg
sbb
xchg
loopne
jno
sub
das
lock
aam
xor
and
mov
xor
les
dec
fdivrs
in
mov
xchg
lcall
lods
sbb
xchg
sub
leave
into
pushw
mov
stos
push
cmpsb
sarl
data16
scas
scas
ljmp
and
loopne
fs
xor
lret
cmp
sub
subl
in
movsl
xchg
int3
push
cmc
pop
aaa
in
scas
fnstenv
lds
aaa
adc
jns
popa
jne
mov
pop
cmc
inc
lret
movsl
inc
or
xchg
jg
arpl
mov
dec
mov
scas
jnp
lods
movsl
stos
push
inc
xor
sub
xchg
shll
int
sub
cmpsb
lock
cmpsb
cmp
mov
or
sub
stos
iret
push
sub
cmp
pop
dec
mov
mov
lds
out
pop
out
icebp
fidivrs
hlt
cmp
mov
mov
adc
or
ja
xchg
in
iret
je
test
add
pop
sbb
xchg
test
out
jmp
idivb
fildl
dec
or
in
push
ret
sub
test
pusha
mov
movsb
fwait
jecxz
addr16
rcl
sbb
insl
cmc
mov
sbb
sub
rorb
inc
icebp
pop
xorb
bnd
inc
dec
imul
cmpsb
fsubrl
gs
push
or
test
inc
lods
popf
sti
ja
icebp
mov
int3
sub
outsl
inc
push
dec
push
fistpll
push
sti
clc
nop
add
pop
int
js
jo,pn
cld
imul
movups
mov
movsb
sub
outsb
imul
xor
mov
clc
push
fstpl
cwtl
iret
jno
fstl
lcall
xchg
call
sar
fcomps
jge
loop
movsl
add
cmp
aaa
pop
mov
stos
cli
jecxz
sub
mov
aad
je
cmpsl
das
stos
mov
cmpsl
das
inc
push
jle
cmp
imul
add
add
lods
es
icebp
test
jb
aaa
add
mov
sbbb
jbe
dec
movsb
xchg
mov
mov
and
aad
or
lds
cmpsb
pop
adc
or
shrb
cmp
aam
enter
test
xchg
fnstcw
sarb
jge
pop
adc
dec
loop
dec
insb
test
or
cmc
xor
pop
jne
jno
mov
pushf
out
lods
cmp
ds
out
mov
cmp
es
and
xor
mov
stc
xchg
mov
bound
pop
outsl
lods
es
mov
sbb
aas
lds
push
add
jle
sub
dec
xchg
test
jne
icebp
sbb
scas
inc
inc
and
or
mov
cmp
cmp
mov
cmc
stc
dec
in
push
dec
adc
cmpsl
scas
push
mov
add
ds
notl
sbb
push
pop
data16
stc
pop
fld
fadd
xchg
pop
pushf
add
xchg
pop
or
dec
push
jns
inc
push
loop
xor
popa
cmp
mov
mov
insl
cmp
adc
test
and
jno
popa
rorl
out
cltd
cltd
xor
test
xor
loop
lods
pop
sahf
cmpl
dec
dec
pushf
orl
mov
or
roll
or
jae
arpl
lahf
add
xor
push
jb
or
mov
test
xchg
sbb
sub
das
ror
fs
jns
sub
imul
mov
int
stc
or
cltd
xchg
or
inc
sub
les
sub
je
sti
mov
out
and
mov
mov
sar
aaa
pop
data16
lods
cs
and
pushf
add
pop
js
loope
ret
repz
pop
mov
push
fadd
pop
or
loop
and
test
xchg
dec
xchg
in
cmp
inc
sbb
add
or
push
loope
jg
stc
push
int3
mov
scas
lahf
addb
outsl
fimull
dec
sahf
and
inc
push
std
fldl2t
mov
popf
mov
clc
out
fs
int
ficoms
xchg
movsl
inc
rorl
xor
push
push
dec
outsl
sub
or
cltd
xor
cwtl
add
int3
mov
xchg
dec
je
in
daa
andl
lcall
lock
jns
mov
dec
scas
pop
push
out
mov
pop
mov
push
push
enter
inc
les
clc
aam
cmpb
pop
and
mov
shll
shll
dec
dec
mov
xchg
jle
mov
addr16
testl
xor
jae
clc
pop
sub
fidivs
push
int
scas
xorl
stos
xorl
dec
test
fs
adc
jg
mov
xor
ljmp
push
jge
jge
push
mov
mov
pop
cmp
mov
je
add
xchg
jno
testl
pop
mul
mov
pop
inc
or
jbe
jmp
fwait
fwait
pop
mov
push
mov
pop
lods
stos
ja
mov
addr16
push
xchg
and
dec
aad
mov
dec
adc
int
cmc
scas
dec
cltd
push
sbb
add
loope
and
data16
rol
jge
in
std
push
loope
pop
scas
mov
cli
sub
adc
dec
and
dec
mov
hlt
sahf
ret
jbe
sti
mov
mov
push
lods
mov
push
mov
pop
dec
es
dec
pusha
sub
adc
adc
pop
loop
ret
rorb
add
sbb
jmp
rcrl
jae
imul
lcall
enter
sbb
ds
jl
jecxz
mov
inc
inc
aam
loopne
mov
mov
pushf
cmp
sub
out
int3
sbb
xlat
cmpsl
je
xchg
out
mov
push
outsl
or
cmp
inc
cs
sub
pop
xorb
cmc
js
dec
out
pushl
jl
xor
gs
and
xchg
int3
xchg
cltd
lret
mov
adc
stos
adc
or
mov
fsubrl
lods
cmpsb
sub
sub
insb
call
fstl
pop
pusha
xchg
les
cmp
xchg
cmpsl
shlb
addr16
test
xchg
mov
cld
jmp
aad
not
push
jmp
jns
jle
loop
mov
out
push
popa
pop
mov
outsb
lea
int3
jle
sti
mov
ljmp
mov
sbb
hlt
ret
bound
cs
add
xchg
mov
xor
or
xor
rcl
mov
repnz
pop
shl
ss
sub
lds
out
pop
jge
inc
ljmp
pop
gs
enter
test
sub
lret
std
push
fstpt
jmp
cmp
lcall
jg
mov
test
call
jecxz
mov
jmp
cmpsl
aam
mov
mov
nop
xor
xchg
jbe
aad
clc
fldl
jbe
inc
add
mov
out
fistl
xor
dec
out
jno
adc
xchg
ljmp
inc
fadds
xchg
xchg
cmp
sbb
aam
movsb
xor
ss
adc
lcall
aas
mov
jp
dec
xor
rcrb
sub
cmp
cmp
xchg
dec
mov
xchg
repz
or
cltd
mov
sbbl
pop
push
inc
jb
mov
jmp
stos
mov
rcrl
dec
icebp
movsl
inc
lret
test
mov
out
scas
jae
xor
test
ljmp
out
push
cltd
cmp
mov
mov
sbb
sbbl
mov
pusha
cs
pushf
mov
outsl
in
jl
jb
jle
fs
sti
mov
cmp
in
daa
and
mov
sbb
mov
sub
les
lds
jne
out
jmp
popf
inc
jne
iret
xchg
repz
mov
pop
test
and
stos
repnz
sbb
ret
push
jb
lea
mov
push
jbe
iret
jecxz
sbb
cmp
lds
inc
dec
divb
pusha
xor
push
loop
mov
and
hlt
and
adc
adc
out
lds
nop
mov
mov
push
cmpb
fstps
lcall
sbb
imulb
decl
dec
xor
and
fwait
adc
aam
sbbl
mov
push
shll
mov
or
dec
mov
imul
push
push
lock
aad
add
mov
cltd
subl
cs
pushf
aas
inc
jo
ret
pop
int
mov
fwait
sahf
lea
mov
test
jae
xchg
out
inc
bnd
cmp
jo
push
cmp
or
add
and
push
pop
ljmp
xchg
xchg
int3
bound
jnp
xchg
sub
clc
push
pushw
push
lock
ret
leave
inc
dec
popa
scas
jo
outsb
icebp
out
out
pop
jae
mov
xor
mov
bound
fmuls
leave
jg
inc
sub
or
mov
pop
add
shl
loope
mov
dec
push
mov
inc
pop
inc
scas
out
out
cmc
xor
jmp
fisttpll
lcall
sarb
mov
push
repnz
or
add
xchg
jne
fsubl
jl
fmul
dec
pop
and
fs
orl
pushf
je
lret
leave
cwtl
dec
jo
or
loopne
out
sbb
inc
sub
divl
je
imul
sub
mov
call
inc
repnz
outsb
lahf
movsl
cvtps2pd
sbbb
ja
js
sbb
jp
lahf
inc
fisttps
push
or
repnz
lahf
jbe
jae
es
gs
inc
pushf
push
push
xor
divb
aam
fwait
lahf
lahf
daa
fcoms
insb
or
inc
out
push
jl
cmp
sti
out
jp
gs
dec
lret
sbb
jns
dec
sbb
divb
cmp
xlat
lcall
xor
rorb
mov
pop
adc
jae
sti
mov
push
inc
stos
dec
negb
add
bound
pusha
adc
mov
pop
fists
dec
rolb
bound
lcall
push
mov
mov
jnp
adc
icebp
out
or
lods
lock
repz
jo
inc
je
sahf
sbb
and
stc
jmp
sub
sub
push
xor
insl
or
mov
add
inc
jb
stc
in
or
pop
cli
fdivl
mov
fldenv
cld
fisubrl
loop
imulb
push
push
leave
movsl
dec
add
push
movsl
jns
jle
mov
test
cs
insl
movsl
and
icebp
rcr
mov
in
add
pop
in
jecxz
mov
pop
fcompl
xchg
leave
mov
in
xlat
xchg
fistl
jne
dec
push
stos
stc
push
xor
mov
cmpsb
sbb
rcrb
xor
pop
int3
sub
rorl
adc
jmp
dec
xchg
cmc
push
xor
mov
mov
cmp
sbb
pop
pop
push
arpl
xchg
test
sub
bound
xor
push
sarb
and
sahf
mov
cmp
mov
insl
cmp
andl
sbb
inc
jnp
lods
xor
in
sbb
out
adc
sbb
add
mov
fbld
outsb
sub
faddl
aam
cmpsl
test
or
inc
faddl
sub
xchg
pusha
inc
jnp
popl
xchg
lahf
and
xor
jl
push
pusha
xchg
jg
out
stos
mov
sub
fidivl
imul
shlb
mov
leave
inc
in
jle
cmc
and
fistps
jae
xor
sbb
push
jo
mov
pop
mov
sub
jl
cmp
inc
mov
push
inc
cs
add
pop
andb
pop
sti
inc
arpl
data16
movsl
cmp
enter
div
mov
sbb
pop
aaa
push
xor
out
pusha
sbbb
loop
push
mulb
pop
sahf
mov
fdivs
mov
js
jb
sub
into
jge
fdivs
mov
xchg
stc
cld
shrb
mov
lahf
or
mov
test
mov
lds
xorl
dec
sub
aaa
xor
test
pop
repnz
xchg
add
pop
call
in
aaa
ja
je
mov
out
out
into
jg
pop
jae
sar
in
stc
sbb
sub
xchg
jg
ret
cli
push
and
jp
push
movsl
scas
xor
aaa
add
pop
pop
sbb
int3
lock
shrl
bound
inc
dec
imul
dec
sbb
aaa
ret
pop
push
fwait
call
jl
adc
rcll
fwait
out
cld
mov
push
dec
test
xor
xchg
or
aas
ret
and
cld
sbb
push
imul
out
push
pop
lods
ljmp
cmp
push
or
aam
xchg
arpl
shr
jmp
mov
in
inc
addl
or
dec
cmp
inc
mov
stc
and
mov
lahf
dec
scas
out
mov
dec
dec
pop
lret
movsl
das
rcrl
mov
outsb
repz
insl
cmpsb
cltd
test
sbb
and
out
mov
add
ret
loope
pop
popf
push
xor
fistpl
out
pop
orb
insb
fstpt
clc
mov
push
loopne
xchg
push
jne
in
stos
ss
in
mov
test
lods
ret
icebp
adc
adc
adc
mov
and
push
repnz
addb
push
sbb
pusha
in
hlt
insl
fdivl
lds
dec
ret
xor
mov
sti
cli
adc
inc
push
icebp
scas
cmp
rclb
cmp
das
imul
cmp
jge
imul
arpl
and
scas
fcomip
sub
fisttpll
das
aad
add
pop
out
xlat
push
mov
pop
xchg
or
call
imul
clc
rcrb
in
pop
jecxz
xor
inc
repz
mov
mulb
mov
bnd
mov
cld
sahf
sub
inc
shll
fsubrs
xchg
jo
inc
cld
aas
je
call
iret
jnp
test
idiv
sbb
cmpsl
iret
sbb
mov
xor
and
pop
mov
fistpl
imul
jmp
mov
imul
subb
int3
jno
jns
dec
add
push
les
popl
ja
push
dec
pop
xchg
incb
icebp
dec
fimull
mov
jo
add
lea
repz
cltd
xor
mov
xchg
or
and
cmp
das
push
mov
fwait
or
test
xor
shlb
xchg
repnz
loopne
aaa
fisubrl
in
aas
in
dec
push
fucomp
jno
loopne
mov
push
mov
jbe
decb
sub
push
or
es
dec
popa
pop
mov
inc
fs
add
mov
out
sub
push
or
sub
jg
push
pop
ret
pop
insl
nop
test
cmp
xor
mov
mov
inc
stos
add
mov
sbb
mov
xor
aas
dec
popf
and
iret
je
lahf
inc
insl
bound
mul
xchg
lahf
out
push
shll
and
sbb
mulb
out
loop
daa
cltd
push
and
push
sub
mov
in
dec
mov
dec
mov
mov
ret
mov
cmp
das
scas
xorb
loope
out
mull
jp
in
xchg
fsubp
jmp
or
sti
mov
aas
fistpl
pop
sbb
jl
xor
orb
outsb
jbe
add
push
mov
mov
fwait
lahf
aam
in
arpl
shll
sbb
das
in
inc
push
ja
lods
and
in
jae
inc
xor
jge
sti
bound
out
pusha
orb
pop
pop
dec
out
mov
sub
dec
pop
ss
jo
ja
mov
jg
cmp
xchg
inc
out
imul
push
idivb
sbb
ficomps
jle
loop
sub
inc
and
and
jge
ljmp
fwait
xor
ret
xchg
sbb
lcall
int
imul
sbb
imul
push
loopne
test
push
pusha
cmp
dec
inc
hlt
and
jns
xchg
arpl
xchg
push
cmp
shrl
in
addl
mov
mov
and
mov
jae
dec
leave
adc
inc
dec
aas
cmp
sbb
stos
cmp
out
xor
popl
aaa
adc
dec
shr
or
cld
xchg
ror
lock
shrl
add
lcall
out
dec
popf
hlt
pushf
dec
jne
hlt
add
movd
mov
jmp
push
mov
pop
sub
sub
inc
push
es
sub
adc
add
jbe
dec
mov
adc
cmp
mov
pusha
mov
inc
or
lret
popf
push
jp
fcompl
xchg
loope
push
cld
jecxz
pop
xchg
not
xor
incb
in
sbb
call
inc
in
call
push
inc
jmp
cwtl
mov
sub
sub
push
repz
mov
push
or
mov
leave
sbb
das
push
lcall
push
call
lds
lcall
imul
adc
dec
push
sub
mov
insb
sbb
add
cmp
ret
mov
or
js
jo
shlb
addb
insb
iret
hlt
pop
push
xchg
out
out
or
test
mov
jle
dec
fdivrl
js
bound
cmpsb
fmul
mov
jmp
ja
jb
test
sub
pushf
xor
in
inc
js
push
call
mov
mov
lret
outsb
adc
addr16
cmpsl
loopne
dec
sub
rolb
iret
sub
xor
mov
adcl
mov
and
loop
xor
dec
push
inc
mov
inc
cmpsb
hlt
iret
std
mov
aad
xchg
lods
inc
repnz
jl
aam
ss
lahf
push
mov
mov
loop
jnp
ljmp
lds
cld
push
loopne
jbe
aas
aas
int
sahf
ss
enter
popa
xor
negl
pop
adc
sarl
popa
adc
push
std
shrl
jae
loop
scas
mov
cltd
xchg
inc
leave
ret
xor
pop
ja
push
or
mov
outsb
cli
pop
jmp
dec
sti
or
inc
mov
mov
mov
mov
sti
sub
mov
mov
inc
push
ja
sub
sbb
orb
lods
std
cmc
push
mov
out
rorb
fnstenv
jp
push
xchg
outsl
dec
xlat
or
cs
or
cmpsl
push
xchg
icebp
cltd
out
push
dec
repnz
xchg
cli
dec
mov
xor
rcll
fwait
pop
xchg
pop
mov
fildl
dec
adc
pop
popl
leave
mov
jg
test
jae
sub
das
inc
jecxz
popf
subl
add
lret
xlat
push
jmp
sbb
sub
sbb
push
pop
push
push
es
xchg
jnp
mov
test
pop
mov
enter
stos
arpl
dec
mov
inc
pusha
xor
sahf
mov
pop
and
dec
xor
jg
insb
and
imul
jb
mov
lods
push
xchg
cli
mov
jne
sbb
iret
loopne
and
mov
inc
test
rcr
mov
add
mov
rclb
imulb
stos
push
shl
call
sahf
inc
jmp
fisubl
add
sbb
jmp
arpl
mov
rol
adc
pop
out
mov
pop
jl
push
insl
lea
add
or
and
sahf
mov
lods
les
xor
imul
pushf
mov
mov
sbb
and
lret
jns
stos
or
lds
push
jp
mov
dec
jo
cltd
push
push
insb
rclb
cltd
xlat
sub
xchg
sub
fwait
or
insl
fwait
int3
add
push
gs
jb
iret
je
push
rcrb
sbb
fisubrl
fiaddl
jge
mul
gs
mov
mov
out
es
rorl
out
cmpsb
mov
ds
pop
pushf
aaa
cmpsl
test
inc
push
push
iret
pop
pushf
sbb
add
jne
xor
scas
cmp
jne
jne
push
xchg
push
sbb
outsb
loopne
adc
mov
mov
xchg
arpl
cli
inc
mov
mov
push
mov
push
xchg
repz
rorb
or
mov
mov
push
mov
jnp
add
inc
pop
sub
mov
cli
movsb
jecxz
mov
inc
mov
push
xchg
pop
cmpsl
movsb
and
jae
test
push
xchg
cld
mov
add
xchg
jg
sti
push
dec
pop
jecxz
mov
sbbl
mov
add
mov
sbb
cmc
aam
fldenv
pop
and
cli
repnz
fsubrl
mov
imul
out
sub
enter
cmp
inc
test
push
pop
ret
les
es
xor
in
fistl
and
test
ss
push
mov
scas
xchg
lcall
out
gs
daa
inc
shll
pop
push
mov
lods
dec
loope
cwtl
or
dec
push
xor
fnsave
add
jecxz
sti
mov
clc
scas
das
mull
adc
mov
push
dec
cmp
js
jno
cltd
xlat
rcrb
or
and
mov
in
out
pop
stos
roll
aaa
out
roll
push
aaa
jmp
in
or
xor
cld
or
xchg
stc
shrl
xchg
les
iret
lcall
insb
pop
push
sbb
inc
push
idivl
sti
cmpsl
popa
mov
mov
cmp
push
cwtl
gs
sbb
loop
dec
imul
mov
xchg
lock
inc
mov
iret
int
aas
mov
jmp
mov
sbb
stos
mov
daa
mov
jp
es
push
mov
fcoms
mov
cs
popf
pop
and
inc
inc
sahf
push
sub
sub
ds
sbb
inc
or
mov
bound
loope
insl
pop
pop
fwait
pcmpeqd
adc
aas
aad
fldt
jp
scas
add
pop
push
jl
push
test
adc
jns
rolb
mov
mov
add
pop
pop
push
imul
icebp
inc
aam
ja
es
xchg
mov
xchg
jmp
xor
mov
lods
sbb
movsl
das
cli
inc
negl
int3
pusha
xor
icebp
mov
dec
mov
sub
movsl
popa
dec
call
cmp
sub
add
mov
xor
les
mov
or
pusha
and
xlat
jo
jo
fmull
fstps
adc
hlt
rcr
inc
and
les
rcrb
imul
ljmp
sbb
aam
mov
scas
stos
mov
fimull
insl
mov
mov
or
mov
or
lds
cmp
in
inc
and
sbb
add
inc
pop
inc
into
mov
js
inc
adc
adc
stos
jne
ficoml
fwait
push
dec
mov
mov
insb
movsb
adc
cmpsl
cmpsl
dec
flds
xlat
or
mov
insl
vmovdqu
repz
adc
xchg
jb
and
dec
xchg
inc
mov
dec
pop
push
xchg
ds
inc
push
fisubs
or
stos
lahf
out
lcall
xchg
scas
or
pop
hlt
or
pop
push
in
lods
add
push
jecxz
insl
add
and
fisubrs
imul
ret
movsb
mov
int
and
in
cmp
nop
mov
ficomps
jl
or
clc
cwtl
clc
bound
inc
jge
mov
daa
jo
sub
pop
into
mov
out
aad
clc
loopne
out
cmc
push
addr16
ljmp
repz
idivb
les
pop
test
dec
mov
mov
ret
adc
out
push
sub
ret
and
popa
ljmp
repnz
shlb
pop
push
add
and
mov
mov
pop
jmp
xlat
and
xchg
test
cmp
imul
aad
iret
sarl
push
cltd
mov
repnz
test
rcrl
cwtl
cmp
das
loopne
pop
mov
mov
std
inc
out
test
mov
mov
sbb
dec
pop
cmpsb
imul
xchg
mov
sbb
pop
repnz
or
adc
mov
jg
and
inc
mov
cmp
std
lret
jl
pop
jg
nop
jbe
movsl
inc
mov
add
xchg
sbb
jo
gs
insl
mov
mov
cmp
pop
pop
loope
cmc
or
mov
adcb
add
xchg
mov
dec
ljmp
xchg
dec
adc
fisttpll
test
mov
das
inc
out
sub
jnp
jp
cld
push
mov
cmp
lods
iret
fs
mov
rolb
addr16
add
cmpsl
pop
add
lcall
push
out
addr16
dec
gs
dec
sbb
push
adc
test
mov
int
cmpsb
pusha
movsl
das
inc
loopne
jmp
xor
in
jp
sub
loop
rorb
aam
dec
xchg
loope
addr16
fwait
sbb
mov
out
int3
and
jbe
daa
and
enter
clc
fld
push
fstpt
add
arpl
add
aam
sub
cmpb
add
mov
les
and
test
movsb
cvtdq2ps
ds
fs
push
pop
or
test
lock
push
lret
mov
jg
mov
add
push
cli
daa
pop
hlt
add
dec
sub
xchg
pop
cld
out
ret
mov
jne
mov
add
subl
or
inc
lret
lcall
add
pushf
dec
in
cmpsb
push
fiadds
dec
xchg
cli
inc
pushl
xchg
cmp
ficompl
insl
aaa
push
sbb
aaa
or
leave
loop
pop
lods
xchg
mov
mov
dec
xchg
pop
leave
test
pop
popl
out
fcmovb
push
pop
lods
loopne
and
add
jns
rclb
stos
loopne
xlat
insl
les
es
mov
clc
mov
imul
movsl
pop
cmp
hlt
mov
pusha
push
inc
jecxz
mov
xchg
mov
xchg
push
push
orb
jp
stos
jnp
jg
lods
pusha
cli
fdivrl
mov
sbb
cmp
mulb
xor
dec
add
ss
pop
addr16
add
lcall
cmp
mov
pop
gs
push
ja
das
out
roll
push
cmp
push
dec
sub
out
push
clc
leave
push
das
inc
push
inc
cwtl
sub
jnp
cld
add
gs
mov
pop
dec
fadds
fxch
mov
push
pop
mov
jmp
or
xor
add
mov
std
and
scas
arpl
mov
std
jbe
iret
and
stos
movsl
mov
lahf
int
xchg
jmp
push
xchg
sahf
enter
les
or
out
aam
adc
push
mov
push
pop
daa
cmp
xchg
lds
test
call
jo
adc
fstl
popf
pop
repz
aas
popf
inc
out
cmp
mov
xchg
push
pusha
js
and
lea
dec
popa
adcl
jne
jae
xchg
mov
lock
aas
cmpsb
mov
ss
and
adc
mov
cwtl
pop
and
aam
jg
cs
mov
fimuls
cmp
push
and
ja
cmp
in
push
mov
cmc
cwtl
leave
insl
cmc
mov
inc
punpckldq
push
push
pusha
loope
adc
icebp
xchg
cld
aaa
movsl
push
pop
rorb
and
lea
gs
and
sbb
popa
dec
mov
test
ret
cmp
fidivrs
xor
mov
ja
cmpl
mov
mov
cmp
add
lock
push
std
mov
xchg
xchg
push
cltd
repnz
scas
mov
fistl
jne
sub
jae
or
leave
xor
pushf
imul
js
popa
loop
sahf
sub
lahf
adc
iret
add
jno
negl
inc
jle
push
icebp
push
std
aam
xor
jno
call
sahf
es
dec
int
inc
jmp
pop
sbb
leave
jnp
addb
jecxz
adc
fldl
push
test
adc
dec
shlb
push
and
mov
push
mov
xchg
mov
mov
cmp
in
xor
jge
cli
mov
cmpsb
scas
test
pop
iret
loope
lds
push
dec
jno
shll
shrl
jecxz
xor
int3
sbb
mov
dec
cli
cli
daa
lahf
sbb
push
pushf
fdivrs
or
dec
sub
add
out
xchg
fcoms
ret
add
push
lret
add
loopne
inc
push
repnz
repnz
data16
fdivrs
sbb
inc
add
dec
inc
or
adc
jp
scas
rorb
mov
enter
stos
pop
imul
jno
fwait
sub
cmpsb
push
pop
bound
push
icebp
sub
mov
filds
and
lock
stos
dec
and
scas
adc
mov
aam
and
mov
ja
cmp
jno
add
inc
shrl
std
push
dec
push
mov
negl
dec
xchg
add
mov
insl
fldl
cwtl
aad
lret
std
clc
jg
pop
or
mov
lcall
addl
bound
add
call
pop
adc
mov
ret
mov
test
inc
sbb
mov
aaa
jecxz
inc
aaa
cmp
mov
stc
popf
pusha
xchg
in
xchg
cmpsl
xchg
jl
jmp
cld
xor
xorl
sahf
adc
call
ljmp
add
addr16
pop
fildl
inc
inc
std
dec
jge
int
in
movsb
adc
xchg
mov
sub
mov
xor
mov
inc
insb
cmp
inc
push
aam
mov
jp
lods
lret
pop
and
negb
arpl
movsl
adc
loope
repz
fstps
sbb
sub
fs
fimuls
pop
je
inc
cmp
subl
sub
add
movsl
stos
es
mov
cmpb
cmp
test
jno
in
mov
cmp
mov
mov
scas
ss
mov
ror
and
hlt
xor
add
inc
jo
mov
fbstp
shrl
adc
lret
pop
jge
data16
cmp
ret
cmp
movsb
pop
loope
int
mov
imul
and
inc
dec
mov
gs
inc
and
push
inc
push
adc
ror
mov
loopne
jnp
movsb
inc
out
xor
out
sbbl
mov
pop
jb
adc
rolb
arpl
cmpsl
mov
outsb
ret
cmp
push
daa
push
or
push
rclb
imulb
imul
stc
or
mov
sahf
lods
mov
insb
test
dec
pop
sub
in
out
mov
out
push
lods
lods
minps
mov
clc
pop
xorl
dec
adc
lods
mov
xchg
dec
push
sahf
js
jmp
push
and
and
lahf
inc
push
dec
push
gs
test
sahf
adc
sub
ds
outsb
sub
into
push
std
into
inc
or
cmpsb
sub
pushf
imul
inc
cmp
inc
adc
mov
stc
lret
push
or
jle
inc
je
fistpl
mov
push
pushf
push
ret
loopne
sbb
mov
jns
adc
lret
pop
xor
xor
stos
mov
lds
inc
inc
insl
sub
cli
or
and
cli
loope
pop
inc
not
xchg
flds
in
or
lret
mov
lret
leave
pop
stos
cmp
es
push
movsb
xor
add
mov
rcll
mov
in
test
lea
push
int
lret
adc
std
mov
les
orb
inc
daa
jno
movsl
sbbb
scas
aam
jae
cmpb
nop
divl
pop
out
xchg
pop
jno
inc
pop
xor
jns
ror
mov
adc
cmp
or
lock
out
cltd
test
xchg
je
mov
sbb
push
in
jae
dec
mov
lret
or
push
xchg
mov
lret
dec
jl
cli
nop
fsubl
push
icebp
fiaddl
imul
out
xor
call
mov
mov
orb
js,pt
repnz
xlat
mov
ja
or
xchg
enter
mov
push
adc
rcrb
inc
push
dec
push
and
mov
lds
inc
add
mov
push
lods
push
movsl
les
sub
xor
or
scas
and
imul
mov
cmc
stos
mov
and
mov
mov
push
dec
adc
xchg
rclb
das
sarb
imul
aas
and
scas
cmpb
mov
bound
repnz
sub
push
in
into
shll
or
jae
loope
xchg
inc
push
xor
je
loopne
inc
or
movsl
mov
and
daa
cli
les
cmp
aam
lea
test
jo
int3
out
fwait
adc
mov
pop
xchg
cwtl
push
jo
mov
lcall
adc
push
inc
xor
test
xor
lock
sub
adcl
out
push
mov
jbe
pop
jae
and
loop
popf
aad
or
fisubrl
arpl
cmp
sarb
addr16
dec
add
pop
stos
imul
movb
daa
dec
push
insb
fistpl
int3
mov
sbb
xor
rorl
dec
popf
sti
ret
js
mov
int3
push
pop
mov
lock
jbe
jl
push
aad
pushf
lock
mov
hlt
jecxz
push
lret
jp
movsb
jmp
jge
out
mov
fstpt
loopne
pushw
fs
cmpsb
insb
imul
xor
jbe
mov
data16
adc
loopne
push
aad
enter
or
push
xchg
or
sub
xor
lods
pinsrw
jg
jns
addw
dec
pusha
lea
notb
xlat
cwtl
mov
lret
mov
in
shl
sub
mov
push
and
jl
and
mov
and
insl
mov
push
cmc
mov
push
xor
das
xor
decl
les
movsb
and
jnp
cvtps2pd
jb
xchg
mov
mov
xchg
inc
sbb
dec
jp
daa
mov
dec
in
add
xchg
jge
aas
xchg
xchg
mov
out
cmp
std
mov
mov
jmp
pop
adc
and
les
dec
clc
mov
sbb
out
and
inc
mov
jo
mov
subl
cld
inc
xchg
xor
adcl
pusha
jo
jmp
cmp
sbb
loop
ljmp
inc
notl
xor
lds
cld
mov
lods
shrl
mov
xchg
xchg
ss
movsl
lock
iret
mov
sub
std
sub
mov
xor
cwtl
out
out
sub
loopne
xlat
lock
filds
int
movsl
inc
jno
adc
inc
jae
mov
rcrb
movsl
or
sbb
push
jp
icebp
push
call
mov
add
pop
je
sbb
insb
xlat
shlb
scas
ret
scas
or
jle
sub
aas
fldcw
es
outsl
xchg
sbb
cmp
ret
aas
inc
add
adc
test
dec
xchg
lock
or
mov
cmc
or
jmp
sub
push
jg
and
inc
cwtl
xchg
push
add
scas
in
and
xchg
inc
movsl
lahf
inc
pop
pop
sbb
jb
lds
sub
or
or
adcb
pop
jp
jbe
loope
add
mov
xorl
out
in
test
pop
andl
gs
mov
inc
lea
pop
ljmp
addb
mov
out
sbb
in
in
adc
ss
test
lock
push
ret
nop
js
mov
pop
cld
mov
add
enter
es
lods
aam
push
cmp
mov
cwtl
push
pop
test
movsl
xchg
inc
push
imul
ret
mov
shrl
dec
jge
mov
les
rorl
fldt
lcall
pop
xchg
pop
test
das
pushf
dec
jl
push
mov
addl
mov
jecxz
pop
xor
outsb
ret
cs
cmp
clc
les
mulb
fistpl
jmp
xor
outsl
mov
or
jle
bound
dec
pushf
jmp
add
cmpsl
xchg
aaa
xor
push
out
mov
imul
xchg
sbb
push
pop
std
dec
jnp
jns
pop
mov
rcr
orb
testl
push
imull
aam
mov
pop
sbb
movsb
cmpsb
mov
rcll
loopne
mov
pop
adc
rsm
jo
xchg
outsl
mov
sbb
push
push
jnp
mov
fnstenv
add
mov
ficoms
subl
inc
push
ret
leave
mov
mov
xchg
int3
adc
or
imul
leave
fnstcw
out
mov
ljmp
inc
into
inc
push
sarl
push
lds
outsb
or
cmpsb
aas
sub
outsl
nop
push
sbb
pop
mov
xchg
or
cmc
lret
popa
xorb
fnstcw
dec
add
or
lea
pop
scas
pop
mov
sbb
xorl
add
sub
jl
mov
movsb
addr16
adc
shll
pand
adcb
sub
dec
fsin
and
cmp
aam
ljmp
fsubl
imul
in
push
cmp
add
arpl
sub
je
fidivl
cld
mov
sbb
add
mov
lock
cmpl
out
push
sti
rorl
in
add
xor
jae
sub
xchg
mov
and
int3
stos
ljmp
adcb
add
pop
jnp
add
dec
jl
xor
aam
pop
or
inc
sub
mov
outsb
jl
ds
mov
cmpsl
cmp
enter
adc
dec
lahf
movsb
stos
or
xchg
scas
movsl
pop
jnp
mov
hlt
sub
cmp
sti
mul
in
xor
sahf
lcall
mov
aam
cmp
xor
xchg
arpl
and
mov
mov
cmp
hlt
pop
in
mov
and
adc
shrl
imul
pop
mov
lret
cld
xchg
push
adc
jbe
in
test
rcr
sub
jmp
lcall
cmp
test
icebp
mov
jg
cltd
hlt
or
test
push
popa
inc
sbb
in
or
inc
scas
mov
lcall
pushf
jmp
mov
pop
xor
xchg
mov
sbb
nop
cmp
mov
ja
arpl
and
outsl
mov
fmul
cmp
lcall
ja
out
scas
les
adc
ret
std
and
push
movsb
stc
pusha
fdivp
dec
rolb
adc
lea
popa
out
adc
rorb
adc
or
dec
ljmp
inc
add
jg
insl
pop
cltd
test
mov
decl
ret
and
ret
sti
aas
mov
outsb
push
inc
in
xor
push
out
aam
out
jne
dec
flds
cs
loopne
xchg
icebp
aam
cltd
mov
cltd
jmp
es
jp
jp
ret
es
pushf
mov
pusha
xor
pop
jl,pt
xor
cmpsb
fmulp
imul
inc
sbb
popa
lds
in
fimuls
push
int
aas
xchg
push
mov
push
push
or
xchg
ds
sbb
inc
out
pop
or
mov
fdivrl
inc
icebp
jge
sbbl
dec
lods
push
stos
add
inc
into
lret
sbb
cli
and
cmp
out
push
jae
fisubrs
push
sahf
ret
jp
in
repnz
mov
mov
scas
int3
lock
fsubrl
int
mov
mov
sbb
jg
xor
test
push
pop
mov
clc
sub
cmp
add
jne
jecxz
iret
fs
lea
test
dec
push
push
jcxz
mov
sbb
fdivrs
stos
loopne
mov
ja
sbb
imul
inc
push
jno
add
imul
out
imul
mulb
xor
ret
cmpsl
pop
mov
xor
push
les
rol
dec
add
push
rorl
into
pushf
xchg
sbb
icebp
add
inc
push
fdivl
adc
sbb
add
inc
mov
sub
add
in
gs
scas
imul
sahf
xlat
in
faddl
pop
enter
enter
dec
loope
jns
imul
rcl
pop
ljmp
pop
push
addl
out
mov
rcll
jg
xchg
in
adc
fbld
sbb
mov
add
cmp
fcomi
jecxz
rorb
and
sbb
andl
out
mov
dec
enter
inc
xchg
push
jg
or
sub
pop
mov
into
cld
sbb
push
mov
jl
fprem1
into
add
add
es
out
xor
pop
incb
jp
sub
and
sub
inc
inc
add
add
sub
fcmovnb
add
movsl
cli
iret
iret
outsl
repz
fdivrl
sti
pop
test
ret
and
sub
hlt
sub
lea
adc
inc
jg
sub
lods
push
out
out
into
js
inc
inc
xchg
inc
in
sbb
cmpsl
mov
xchg
mov
icebp
push
xlat
pusha
movsl
adc
jl
cli
cmpsb
lcall
inc
cli
cs
cs
cli
into
lods
dec
mov
add
ret
pop
mov
lds
adcb
fidivrs
push
mov
sub
sub
in
xchg
push
insl
imul
leave
orb
mov
in
lret
mov
imul
enter
push
inc
push
mov
mov
addr16
pushf
mov
pop
mov
mov
out
pop
push
mov
inc
mov
jae
dec
sbbb
andl
mov
xchg
rol
lds
jae
jns,pt
dec
ficoml
cmp
decl
xchg
movsl
pop
mov
dec
and
jle
stc
fs
mov
loop
inc
aaa
cwtl
jp
lahf
sub
into
sar
int
call
cmpsl
cmc
out
test
xlat
je
ss
imul
inc
or
nop
mov
dec
daa
lahf
loopne
ljmp
std
icebp
mov
icebp
lock
sub
shlb
ret
xchg
loop
xorl
mov
push
push
adc
or
push
ljmp
cmpsb
xchg
sbb
jbe
or
and
outsl
adc
adc
lods
jg
and
or
sbb
jle
mov
mov
mov
or
jne
and
cld
mov
loope
iret
aam
out
mov
test
pusha
loopne
repz
xchg
cmpl
jl
aaa
mov
stos
lods
cmp
mov
rolb
adc
and
mov
test
pop
sti
inc
lret
aaa
adc
xchg
mov
push
pop
stos
mov
divl
or
mov
cmpsb
dec
jle
hlt
cmpsl
lea
mov
testl
and
not
jle
push
xchg
and
ret
adc
push
sub
jno
aad
mov
into
add
sub
outsb
xlat
rol
int3
daa
sub
cld
in
jb
or
pushf
push
pop
clc
cli
and
imul
mov
cld
xor
jecxz
jno
test
pop
dec
sub
ret
lods
mov
divl
mov
pop
mov
inc
mov
pop
scas
xor
sub
xchg
setno
cmp
xor
push
add
or
repnz
and
adc
notb
and
subl
dec
loope
mov
jp
shr
dec
dec
sub
in
mov
and
sub
or
sub
sbb
push
mov
pop
cwtl
loop
fisubrs
add
imulb
cwtl
xchg
push
icebp
flds
in
jg
dec
mov
movsb
add
xor
stos
jle
not
or
fsubrs
dec
mov
inc
es
fdivrl
scas
sbb
lods
mov
pop
pop
pushw
cwtl
cs
mov
mov
adc
and
mov
ret
ficomps
sub
mov
mov
ds
test
and
andb
std
int3
mov
sti
cmp
mov
ss
adc
jecxz
mov
push
test
hlt
push
jns
icebp
ja
addr16
das
cmp
into
xlat
mov
sub
mov
adcl
addr16
fsubrs
pmulhw
add
int
push
shl
push
and
ret
mov
jle
dec
shr
push
int3
ret
pop
pusha
mov
rorb
xchg
jns
out
push
push
jno
outsb
pop
mov
pop
sub
or
lcall
ret
or
jb
xor
es
or
les
fbld
xor
stos
popa
sti
aaa
addr16
ret
push
mov
xor
fcompl
and
cmp
je
sbb
pop
and
xor
push
pop
insb
insl
push
rcrl
cmpsl
loope
cmp
jmp
xlat
dec
inc
enter
dec
pop
sub
xor
movsl
mov
jns
inc
sub
cli
scas
push
addr16
and
pushf
in
je
loope
js
std
jl
stos
sbb
jmp
mov
sbbb
ret
inc
daa
cmp
fsubrp
push
mov
sbb
jno
inc
shrl
in
fs
imul
mov
sahf
ss
push
sbb
sub
adc
push
jno
jae
and
mov
push
push
sbb
sbb
pop
pop
mov
aaa
inc
push
jae
rolb
sbb
pop
lock
imul
push
mov
dec
cmp
call
sbb
sbb
popa
fadds
dec
jbe
cltd
loope,pt
xchg
lds
xchg
cmc
out
cmpl
jae
test
sub
xlat
add
add
pop
mov
mov
pop
pop
mov
lret
fdivs
add
lock
cmpsb
ss
xor
pop
sbb
mov
pop
mov
mov
mov
pop
mov
daa
push
inc
and
nop
out
and
jg
xchg
mov
mov
stos
mov
sti
loopne
fs
fdivp
bound
ljmp
dec
sbb
mov
sub
push
lahf
fiadds
xchg
mov
ds
aam
fimull
xchg
sbb
pop
pop
out
add
adc
xor
fistl
sbb
rcrb
pop
lods
sahf
rcll
pop
adc
loope
fs
movl
or
stc
loop
sub
lret
gs
push
rorb
xchg
xor
mov
daa
arpl
decb
lods
push
mov
test
inc
sub
ret
lds
mov
xchg
adc
test
cmc
xchg
aaa
loop
dec
xor
arpl
jbe
xlat
or
ficoml
adc
cmpsl
shll
mov
pop
add
rol
test
sti
mov
mov
int
jo
mov
mov
sahf
push
dec
repz
pop
push
jo
lods
leave
sti
push
xor
cmpsb
inc
jo
xor
push
fs
push
mov
pusha
fimull
pop
lea
lods
std
mov
sti
cmp
jns
jmp
jbe
dec
sub
out
inc
nop
pop
ret
jle
xor
cmp
push
inc
fisubs
jmp
test
mov
cmp
adc
sub
inc
stc
pusha
xlat
jns
repnz
sub
pop
test
decb
aas
or
mov
lock
sbb
xor
fucomi
stc
or
call
out
xchg
xchg
mov
jg
mov
mov
cwtl
outsb
fstl
and
sub
test
loopne
add
mov
aam
mov
mov
add
jmp
lods
daa
ret
fmul
cmp
adc
adc
repz
jl
mov
out
pop
xor
cmpsb
test
and
and
lahf
cmc
mov
ret
add
dec
aad
scas
fwait
push
mov
aas
xchg
cmp
mov
jns
cmp
mov
sub
and
or
jne
jns
insl
or
int3
or
pusha
mov
stc
and
fdivr
ja
iret
pushf
pop
out
or
or
xchg
fisttps
roll
call
fcom
cwtl
loopne
add
fwait
test
xchg
pop
mov
add
dec
dec
hlt
cmc
push
ljmp
adc
incb
dec
int
fsubrl
xlat
lds
iret
jge
jp
lea
mov
jnp
je
rorb
xchg
adc
scas
fwait
inc
push
jnp
xchg
test
cmp
jno
or
mov
adc
mov
outsb
adc
int3
adc
addr16
cmp
mov
stc
scas
stos
push
pop
dec
add
adc
sbb
and
jo
sar
add
sub
dec
sbb
pop
lods
sti
sbb
xor
push
push
subb
push
call
sub
fdivrs
repz
sahf
pop
scas
repnz
cli
popf
push
cmp
fstl
imul
std
sub
loopne
imul
cs
adc
cli
jmp
cmp
dec
pop
dec
jp
jmp
mov
cmp
push
pop
sbb
or
jo
mov
or
inc
add
pushf
and
dec
es
aaa
pop
push
push
xchg
in
xor
jp
pop
std
sbb
lcall
jecxz
lods
push
andb
push
mov
push
scas
rcll
or
lods
xchg
mov
fld
cmp
jmp
adc
lock
leave
iret
xlat
add
mov
addr16
dec
jl
or
mov
das
xor
mov
pop
mov
xor
jmp
pusha
jg
inc
jg
push
or
mov
adc
sbb
pop
mov
int
movsb
jg
xor
adcb
das
jmp
je
push
pop
mov
add
js
popf
mov
fwait
mov
ljmp
loope
xchg
mov
inc
stos
jmp
enter
push
test
jmp
inc
dec
aas
sahf
outsl
mov
ja
sbb
lret
jne
lods
int
lea
dec
dec
add
mov
mov
sub
push
adc
inc
jg
mov
xor
cmp
cli
mov
mov
or
fcomps
xchg
int
adc
dec
mov
hlt
scas
or
cmpsl
jmp
sbb
in
in
fiaddl
lods
mov
mov
adc
xchg
lods
in
pop
inc
paddsb
mov
mov
jmp
cmp
xor
or
dec
inc
and
popa
sti
call
movsl
dec
mov
push
sub
cmc
push
sbb
or
fstp
dec
rcl
sbb
xchg
xor
dec
pop
fwait
out
add
lea
test
repz
jae
xchg
cmp
ret
push
stc
mov
cs
shl
or
test
xchg
dec
sub
mov
xchg
xor
xor
fisttps
and
ror
push
jbe
xor
sub
jecxz
sub
cs
lock
mov
jae
mov
xchg
dec
mov
pop
pop
cmp
and
dec
arpl
pop
call
dec
ja
sub
sub
push
movsl
mov
movb
out
mov
add
push
cli
arpl
fs
lcall
test
inc
cmc
jg
fbld
lret
lret
add
aaa
xor
int3
cwtl
aad
mov
push
mov
xor
shlb
xchg
sbb
dec
adc
jo
adc
cmp
xchg
inc
shrb
and
mov
push
xor
mov
movsl
sbb
loop
jne
xchg
int3
ljmp
cmp
outsb
fbstp
sub
mov
jmp
out
loop
enter
pop
in
inc
and
lcall
inc
sub
adc
push
xor
or
add
fsubrs
mov
sub
inc
mov
pop
xchg
lret
lret
mov
test
mov
jl
mov
inc
mov
test
adc
dec
jp
xor
aad
or
xchg
sub
fwait
and
push
cmpb
mov
js
into
sti
imul
add
leave
gs
or
imul
cmpsb
dec
xlat
inc
clc
mov
ficompl
pop
jne
cltd
dec
insb
jg
xchg
enter
pop
in
pop
and
popa
xchg
inc
lret
mov
mov
or
ffreep
clc
push
scas
mov
out
add
mov
fmul
int
jl
mov
lret
xor
popl
push
mov
fcmovb
pop
nop
cmc
js
xor
popf
and
lock
insb
cli
push
add
sbb
inc
adc
rclb
call
outsb
loop
lea
or
scas
out
or
andl
cmpsb
sbb
or
leave
sub
push
or
pusha
jecxz
pop
hlt
xor
ja
xchg
push
xor
out
lods
nop
push
xchg
mov
pop
pop
jge
repz
loop
aas
aam
sub
jnp
pop
jae
cltd
adc
out
mov
jmp
push
push
pop
pop
sub
mov
mov
lods
ficomps
cmpsl
fsubrl
jle
pop
mov
cmpsb
and
cwtl
inc
adc
and
cmp
int3
pop
enter
push
aaa
jmp
cwtl
mov
test
cmp
adc
mov
in
push
inc
mov
repz
fwait
sub
fisubs
insb
inc
xor
mov
xchg
add
pop
popa
sti
into
dec
mov
jo
mov
outsl
xorb
fsub
es
test
lcall
out
cmp
fs
dec
or
xadd
insb
push
bound
xor
cmp
ret
xor
push
aad
jnp
and
mov
bound
and
sub
pop
xchg
imul
xchg
mov
pmullw
push
test
sub
mov
mov
jge
cmp
mov
cmp
outsb
dec
std
lock
jbe
int
loop
insl
push
insb
out
rcrb
test
ret
les
sar
or
shll
lock
das
test
pop
adc
insl
push
cmp
mov
call
sub
pop
filds
and
pop
xchg
ljmp
repnz
dec
sysenter
sahf
cwtl
das
and
andl
pop
test
mov
inc
lahf
into
dec
or
mov
pop
lods
mov
loopne
rorb
push
inc
push
push
or
jno
add
das
cli
xor
jno
js
xor
in
adc
push
cmp
popf
mov
xchg
sub
xchg
test
adc
arpl
mov
lahf
or
lret
pop
jl
sbb
sbb
pop
add
mov
adc
pop
lea
mov
mov
xlat
lret
call
mov
jmp
std
xchg
clc
loopne
ljmp
into
xor
lret
test
test
cmp
insl
or
fidivl
adc
hlt
sub
xchg
cld
nop
ftst
les
pop
sti
mov
enter
shll
scas
push
insb
push
mov
sahf
cmp
fwait
testb
lods
add
adc
mov
xchg
or
jne
or
and
mov
roll
test
rcrb
xor
add
add
lods
or
and
jns
push
scas
cmpsb
out
int
rol
les
stc
jmp
cmp
jmp
ljmp
adc
sbb
ret
js
pop
fldt
shll
jp
test
stc
mov
lahf
in
jo
push
and
aam
add
push
xor
dec
push
aam
aad
and
add
sub
xor
jmp
loopne
xor
notb
shll
repz
loope
add
out
insl
mov
in
xor
jno
inc
jb
add
ret
add
dec
xchg
cmp
shl
in
push
mov
ficoml
enter
jge
push
sbb
jecxz
inc
sbb
bound
out
and
lahf
xor
mov
push
es
xchg
int3
mov
sbb
mov
lret
loope
mov
cwtl
roll
pop
xchg
jmp
shlb
ret
xchg
notl
cmp
ss
dec
sub
mov
inc
add
loopne
cmpsb
jo
pop
bound
pop
cmc
stos
and
cwtl
pop
addb
les
aaa
mov
jl
or
inc
mov
fs
jmp
sbb
cmpsb
inc
jmp
mov
aaa
imul
sub
sub
imul
js
xchg
aas
cmpsb
fdivrs
repz
div
pop
stc
mov
mov
sub
mov
xchg
mov
or
xlat
lds
std
adcl
xchg
movsb
movsl
xor
sub
std
pop
out
aas
sub
push
cmpsl
add
dec
jbe
push
fwait
lcall
add
mov
dec
and
xchg
and
adc
aad
sub
out
clc
xchg
loop
insb
cmp
jle
ja
sub
rcrl
insl
push
push
sub
or
mov
jle
cld
inc
or
fidivrs
insb
sub
mov
cli
lret
mov
and
jp
inc
pop
or
sbb
loop
popa
in
decl
sbb
dec
dec
mov
stos
adc
add
popa
pop
popa
fstpt
lock
push
xchg
pusha
inc
icebp
or
mov
push
repz
mov
or
sti
rorl
and
sub
push
imul
mov
adc
pop
dec
push
sub
lea
pop
mov
sub
mov
push
loope
and
inc
sbb
xor
test
imul
lea
xor
mov
rorb
stc
int3
pop
ds
outsl
push
sbb
cmpsb
dec
cmpsb
mov
sti
push
notb
jb
sub
movlps
mov
xchg
pusha
aad
xchg
cmp
inc
das
cmp
out
repz
pop
xchg
sub
std
mov
out
add
mov
inc
sub
xchg
xor
and
jge
stc
ljmp
mov
pop
mov
inc
mov
pop
test
fdivl
movl
mov
aaa
out
pop
mov
ljmp
mov
lock
push
push
lea
sbb
bound
mov
pop
jb
test
lret
mov
mov
test
fldl
mov
jne
pusha
lret
and
test
push
push
fsts
cmp
movsb
addr16
gs
jmp
nop
xchg
jg
repz
mov
cmp
push
arpl
cld
pusha
popf
testb
fdivr
outsb
xchg
adc
adc
pop
sub
cmpsl
xchg
or
out
lock
xchg
into
dec
in
or
inc
int
lods
and
jecxz
outsl
loopne
xor
jmp
push
pop
sub
add
mov
adc
movsl
xlat
lods
and
jae
mov
push
in
in
jae
mov
loope
scas
jmp
jae
call
adc
cli
aam
pop
movsb
mov
insb
xor
lret
add
mov
mov
or
pop
sub
fimull
sbb
or
lods
sahf
ja
in
ljmp
lea
out
sub
adc
daa
push
icebp
or
stos
fisubrl
add
push
push
pop
sub
mov
movsb
popf
mov
stos
loopne
mov
inc
xor
add
cmp
iret
jo
cmpsb
out
outsl
jp
sbb
mov
pop
daa
call
sti
incl
aam
in
imul
notl
popa
mov
cld
adc
cli
pushf
insb
push
les
push
xchg
or
sarb
mov
jg
fbld
add
xor
sub
ljmp
mov
lahf
fsts
jo
cwtl
pop
test
in
sbb
iret
shl
mov
popa
jl
jb
sbb
adc
push
pop
cmpsl
andl
repz
pop
out
andb
dec
pop
dec
test
cmpsb
add
mov
sti
ds
cli
sbb
sti
loope
ljmp
push
fldcw
test
fs
fwait
and
inc
mov
mov
push
in
add
jbe
lret
and
cli
enter
sub
jae
leave
mov
lahf
sbb
sbb
negl
or
pop
and
sub
ficoms
push
lods
test
cli
ret
cltd
cli
jo
add
push
lods
pop
xchg
adc
xchg
mov
dec
xlat
mov
adc
dec
repnz
in
adc
ret
jnp
inc
inc
jnp
sbb
insb
mov
sbbl
mov
pop
mov
mov
js
jecxz
xchg
mov
add
sub
mov
cmp
add
dec
test
lea
mov
enter
jecxz
shrb
lret
push
sbb
dec
add
call
sub
sbb
push
jecxz
pop
pop
cmc
or
es
push
jp
gs
out
push
notl
repnz
mov
push
pop
dec
inc
popf
dec
push
andb
xchg
jne
aam
popaw
cmpsb
lret
jmp
test
aas
xchg
je
push
fisubrs
or
shlb
sub
xor
pop
iret
inc
mov
cltd
movsl
push
daa
and
inc
jae
xor
xchg
enter
or
ljmp
pushf
inc
pop
sub
jns
xorb
pop
in
sub
pop
fsubr
mov
fiaddl
sbb
test
sbb
shll
sub
jp
ja
cs
mov
test
inc
movsl
fsubl
cs
negl
pop
leave
inc
and
cltd
shll
dec
mov
mov
inc
sub
and
pushf
and
rcrl
stc
and
xchg
inc
fnstenv
pop
shll
or
or
int
dec
lock
dec
sbb
mov
dec
flds
cmp
xchg
pop
push
lods
ficoml
lods
std
ret
frstor
xchg
xchg
testl
repnz
add
pop
gs
int3
popa
flds
out
dec
stos
or
cli
jo
mov
jl
pusha
clc
cmpsb
mov
lock
mov
pop
cli
int3
stc
movsl
add
push
add
mov
loope
out
scas
cld
inc
loope
pop
jo
cs
scas
jmp
mov
dec
mov
sbb
stos
sarl
xchg
cmp
mov
xchg
rorb
pop
fstpl
rcll
fcom
xorl
push
int3
sub
xchg
lea
and
sbb
icebp
fistps
push
mov
push
cmp
cwtl
repz
testl
sub
repz
add
fimull
pop
sub
dec
jnp
rcll
and
rcll
mov
lcall
add
push
mov
adc
adc
mov
fcmovnb
aas
sub
fsubl
inc
pop
xchg
jo
push
inc
cmpsb
test
jg
ja
in
incb
xorl
ret
mov
lods
fiadds
in
loope
mulb
pop
fisubrl
jmp
sub
xchg
popa
fmuls
and
inc
and
pop
adc
inc
lret
outsb
mov
jns
ds
xchg
fucomip
jb
jl
pop
push
pushf
lahf
test
out
leave
fidivl
dec
and
mov
lods
sub
arpl
int3
fsts
pop
mov
fists
int
push
leave
sub
call
dec
mov
rcr
lods
popa
test
xchg
mov
pop
xchg
inc
xchg
out
jnp
movsl
lods
mov
push
mov
dec
xchg
adc
loopne
icebp
call
mov
insl
mov
xorl
or
lea
insb
arpl
call
dec
fildl
add
mov
cmp
insl
dec
push
mov
movsl
repnz
inc
pop
leave
pop
ljmp
dec
adc
push
jno,pn
icebp
test
or
test
pop
xchg
xchg
cmc
lahf
fidivs
ja
out
mov
xchg
mov
ljmp
movsb
jge
lret
ficomps
mov
or
int
int3
push
pop
mov
pop
lods
int
dec
mov
inc
or
adc
rcrl
mov
cli
xchg
in
cmpb
add
cmpsb
mov
fstl
push
add
test
mov
or
xlat
xchg
xlat
test
ret
jae
sub
fldcw
iret
loope
mov
adc
faddl
dec
cmp
cltd
or
sub
mov
arpl
lods
daa
fnsave
jne
leave
or
push
inc
aam
xchg
pop
push
cmp
dec
sub
imul
jmp
xchg
push
push
mov
mov
sarl
cs
dec
and
lret
cmp
mov
sar
loopne
movsl
stos
mov
push
aas
jl
sbb
push
push
out
lods
mov
sub
lret
dec
cmpsb
in
ret
arpl
mov
sti
popf
in
pusha
mov
enter
push
push
inc
cltd
test
ret
inc
in
fsubl
out
add
sarl
ja
ds
pop
cmpsb
idivl
mov
test
mov
ret
mov
movsl
mov
xchg
pusha
fwait
jae
or
mov
sbb
rorl
notl
mov
xchg
or
popf
ror
jl
test
lds
jle
inc
sub
inc
push
out
jmp
pop
cwtl
rorl
test
pop
aam
adc
xor
stc
in
scas
inc
sbb
in
cmc
mov
xchg
mov
fbld
adcl
insl
hlt
xchg
nop
or
je
mov
rolb
fnstcw
sub
dec
lods
out
rcll
mov
cmp
adc
sar
cmp
fs
xlat
psubq
jmp
iret
mov
or
jb
jle
mov
or
mov
inc
mov
inc
daa
pop
popa
out
push
xor
jg
jb
lds
sub
jle
mov
mov
loopne
pusha
and
lods
pop
in
cmp
lahf
movsb
add
or
xchg
adc
rcll
dec
xor
xlat
inc
pcmpgtw
rcr
clc
cltd
out
jae
xchg
fwait
adc
cmp
das
jge
lock
push
lds
lcall
shlb
loope
xorl
sbb
movl
aas
or
int
mov
pop
lea
shrl
jns
pop
sub
movsl
add
lret
addb
or
mov
and
lds
faddl
outsb
mov
negl
stos
movsb
xorb
sub
insl
lahf
ss
pop
cli
sarb
lret
inc
ret
pushf
push
or
fistl
fisubrl
clc
gs
clc
push
pop
sub
leave
ljmp
cmpl
push
sub
push
loopne
es
lret
outsl
mov
lret
or
stc
aad
cmp
andl
jge
mov
sti
cmpsb
fdivl
ss
mov
jle
cmc
mov
andb
sti
mov
in
add
out
fmull
sbb
lds
add
icebp
clc
xlat
incl
in
jecxz
or
fcompl
jl
mov
push
inc
scas
stos
test
ret
inc
and
imul
shlb
or
inc
cld
scas
movsl
lcall
jne
lret
inc
jecxz
mov
jbe
fucom
jl
das
sub
xor
push
movsl
outsl
cmp
sbb
jae
lahf
dec
fnstsw
loope
adc
mov
packuswb
mov
je
shlb
test
clc
cmp
push
mov
cmp
cmp
movsl
shlb
lods
test
xor
mov
cmc
jo
mov
inc
jl
loop
xlat
mov
cmp
and
jne
pop
xchg
jns
sbb
push
js
fsub
sbb
lret
jp
ficoms
stos
roll
fsubrs
xchg
cmp
pop
data16
cmp
arpl
inc
add
dec
jae
mov
test
dec
inc
cmp
es
nop
gs
sbb
push
xchg
and
jecxz
in
add
cld
xchg
je
dec
and
jmp
test
xchg
inc
add
or
mov
xchg
cmc
in
xlat
xlat
jne
inc
pop
dec
ja
pop
mov
add
fmul
mov
sbb
imul
dec
push
pushf
push
rolb
shlb
loop
xlat
leave
jle
lds
das
xorl
lahf
inc
mov
xchg
inc
add
mov
adc
mov
cmp
mov
insb
add
add
dec
sub
push
jg
std
ja
mov
push
fstpt
pop
cmp
lcall
mov
add
jg
insl
mov
jne
jle
add
in
dec
and
push
sbb
mov
shr
aad
inc
mov
inc
sub
sub
sbb
mov
fwait
out
cmp
jge
sbb
sub
jae
out
dec
loop
iret
cmpsl
pop
cmpsb
mov
rcll
dec
int3
js
lods
scas
jle
mov
negb
test
pusha
jg
pop
dec
jecxz
xlat
xchg
stos
in
add
stc
jae
sub
xor
lret
lods
clc
ret
rorb
mov
mov
sub
ret
fsubs
fisttps
xchg
mov
or
rcll
fsts
cld
subb
xchg
aad
add
or
gs
and
dec
cmp
push
pushf
arpl
sbb
fdiv
inc
pop
cmp
dec
jp
mov
outsl
gs
push
dec
cmp
mov
cmp
pushf
jecxz
or
test
or
add
xchg
lcall
mov
test
mov
hlt
mov
dec
mov
scas
cmc
fucomp
inc
inc
jp
pop
jbe
popa
popa
push
cmc
jle
dec
jle
out
jmp
dec
add
insl
lret
or
or
mov
outsl
cmp
testl
xchg
fistpll
rorb
xor
lock
out
and
test
sub
jmp
cmp
scas
mov
mov
dec
sub
scas
push
and
pop
js
inc
sub
mov
dec
test
push
data16
adc
jae
mov
sbb
repz
ret
push
or
nop
mov
orb
loop
test
xchg
scas
push
xchg
shll
xchg
ret
xor
xchg
inc
test
inc
sbb
loopne
jae
movsb
in
movsl
int
jbe
aaa
insb
je
orb
cmpsl
or
pop
cmp
dec
push
and
lea
aaa
ljmp
test
repz
sbb
iret
int
adc
daa
fs
jecxz
mov
out
cmpsb
dec
push
cmpsl
xchg
push
xor
aas
ja,pn
inc
les
add
push
roll
jb
cmpsb
je
popf
adc
fmull
sbb
pop
push
push
push
pop
mov
mov
dec
cli
shlb
dec
jo
push
fisttpll
cmp
jmp
rcl
lods
jb
scas
aas
push
and
push
inc
jne
mov
cmpxchg
inc
mov
repz
mov
subl
inc
ljmp
pop
dec
mov
fs
mov
mov
or
insb
jmp
lret
decb
aam
fcomp
add
in
pop
adc
and
inc
xchg
mov
out
rcr
pop
mull
stos
or
rol
sbb
push
int3
dec
mov
adc
xchg
imul
les
inc
xor
aas
fdivrl
push
inc
nop
dec
aaa
mov
push
loopne
add
cmc
ja
ret
xor
pop
in
cmp
or
add
ja
pop
popf
mov
std
add
mov
idivl
enter
clc
adc
push
call
insl
mov
mov
out
gs
insb
sbb
test
mov
inc
jmp
std
cli
push
jg
int
scas
or
sub
sub
lret
inc
and
jg
sub
aam
jecxz
stos
roll
xchg
and
movsb
hlt
std
mov
fimuls
cld
mov
std
test
add
cmp
pop
ljmp
xchg
sarb
int
jmp
or
movb
push
addr16
lcall
rcll
adc
jg
mov
inc
cmp
jnp
inc
xchg
cmp
cmp
stos
mov
xlat
pop
inc
pop
call
pusha
pop
data16
pushf
mov
sbb
add
xlat
cmp
mov
sbb
loopne
insl
out
rorl
pop
xchg
and
inc
mov
pop
push
iret
bound
scas
xor
add
aam
fs
sub
pop
push
push
push
data16
add
and
mov
call
out
or
popa
mov
js
or
lcall
sbb
call
adc
or
idivb
mov
int
push
jge
jns
xchg
fstps
lcall
enter
ljmp
pop
adc
mov
subl
push
pop
pop
inc
dec
jg
add
data16
les
inc
jbe
int3
loope
fidivrs
popl
scas
inc
pop
pop
inc
arpl
mov
adc
mov
jb
cld
arpl
xchg
push
test
or
add
popf
mov
into
adc
jno
mov
fnstenv
xchg
shlb
in
frstor
cmc
cmp
cmp
dec
add
call
push
adc
jle
xlat
and
sub
dec
loope
pop
sub
lahf
js
shll
or
clc
movsb
mov
es
cltd
mov
cmpsb
out
push
xchg
lret
dec
aam
xchg
jbe
imul
ret
imul
clc
push
loope
add
push
fnclex
repz
fs
outsb
lods
pop
fcompl
fs
push
loope
inc
mov
lea
mov
mov
add
icebp
mov
inc
rcll
les
loop
fnclex
stc
mov
dec
loop
cmp
lea
cmpsb
pop
int
ret
jne
adc
fsts
xchg
push
mov
mov
dec
inc
xor
lret
or
adc
int3
dec
dec
sub
fbstp
xchg
lea
js
fmul
xor
int3
shl
lods
loope
jns
push
xchg
xchg
or
mov
mov
sub
sub
mov
pop
cld
push
sub
push
bound
cmp
daa
cmp
lods
sub
jle
push
push
scas
dec
repz
xor
stos
inc
jne
lcall
xor
mov
dec
xchg
add
pop
sahf
mov
fs
xor
add
test
xor
inc
fisubs
or
adc
ljmp
lret
clc
sbb
out
push
lret
ja
sbb
dec
mov
stos
test
xchg
inc
sbb
jb
xor
jno
dec
xchg
push
cmpsl
fdivrl
rcl
jno
xchg
outsb
ja
pop
lock
iret
das
pop
ror
dec
and
movsb
cltd
lahf
mov
daa
outsb
jecxz
sub
inc
pop
sbb
sti
mov
mov
push
lods
inc
mov
or
cld
arpl
test
jecxz
sub
and
pop
imul
push
cmp
mov
and
xor
in
insl
cld
xchg
das
xchg
stc
xchg
xor
pop
adc
mov
push
loop
pop
or
in
jg
adc
sub
jnp
cltd
inc
mov
js
pop
subb
stos
sahf
lret
xchg
dec
mov
js
outsl
jno
imul
test
sbb
out
stc
pop
ja
int3
sub
mov
inc
out
xchg
pop
mov
leave
xor
add
ret
sub
cmpsb
out
repz
iret
mov
mov
jle
inc
popf
pop
pop
dec
jge
les
jge
js
dec
out
mov
iret
mov
mov
inc
mov
stc
loopne
inc
mov
fnstsw
inc
mov
rcr
mov
sarl
xchg
mov
cmp
dec
addb
pusha
xor
dec
cs
jmp
out
xor
es
push
dec
popf
movsb
inc
aaa
mov
sbb
jbe
push
pop
push
mov
and
jbe
fadd
sbb
adc
in
loopne
adc
out
imul
rcrb
dec
mov
movsb
shr
cmp
insb
sub
sub
jae
add
lds
dec
ret
cmc
push
in
pop
pushl
pop
mov
lret
sbb
sub
das
dec
popf
xchg
stos
jbe
hlt
xor
mov
push
pop
aas
lods
stos
lcall
inc
jecxz
out
inc
dec
fistl
incb
add
cltd
pop
pop
sbb
icebp
sub
push
sarl
inc
xor
cs
jg
xor
xor
outsb
sub
mov
test
rol
dec
jno
pop
and
ds
popa
or
mov
jnp
decb
stos
jg
negl
ljmp
add
rcrl
out
mov
mov
cs
hlt
push
into
outsb
js
enter
test
xchg
sbbl
pop
xchg
les
dec
fldt
je
lahf
cmc
xchg
mov
xlat
adc
cmpsl
notb
mov
cs
ds
jle
jecxz
push
jae
popa
dec
pop
ljmp
or
scas
jo
pop
mov
inc
divb
cmc
adc
dec
xchg
add
out
jns
cs
cmpsl
sbb
ficompl
shrb
leave
sbb
pusha
mov
out
dec
jl
mov
pop
fwait
shl
cmp
xchg
outsb
mov
xorb
jmp
push
or
mov
xchg
shl
and
mov
in
ds
cmp
xchg
cmp
loopne
xorl
mov
mov
jmp
arpl
fistl
sbb
inc
fimuls
sarb
fisubrl
shlb
adc
dec
out
dec
ljmp
pop
mov
mov
or
jns
mov
aas
adc
adc
stc
and
dec
xorb
sar
shrb
and
arpl
xor
cs
fistl
pusha
mov
outsl
and
dec
and
ret
lcall
ficompl
pop
stc
movsl
and
rorl
sub
sub
lahf
xor
pop
mov
sbb
ja
mov
in
stos
xor
shlb
enter
enter
mov
sbb
or
mov
cltd
popa
fwait
sbb
in
cs
xchg
push
inc
inc
or
jae
ret
xor
int
add
mov
mov
dec
jmp
int3
push
or
aam
cmp
fcoms
dec
mov
adc
jnp
push
add
std
jp
clc
aaa
fsubrs
xchg
jno
data16
mov
push
loope
shl
sub
fdivs
je
test
out
popa
orl
movsb
cli
leave
lods
mov
in
and
dec
lods
sub
jno
jno
push
fsubr
add
add
xor
insb
pop
mov
fcmovnbe
iret
test
fcoml
jno
push
pop
ss
lds
mov
jge
lock
out
mov
ss
or
and
jnp
in
mov
fidivrs
ljmp
insw
cmp
add
fldenv
test
mov
nop
mov
jae
lret
jnp
push
pop
insb
xchg
xor
divb
inc
mov
xchg
in
push
jno
insl
mov
iret
mov
lods
rclb
dec
out
enter
test
push
pop
inc
mov
std
dec
scas
xor
pop
xor
and
addb
aas
mov
es
arpl
mov
les
shll
xchg
popf
in
cs
lret
push
add
add
or
sbb
shlb
imull
and
pop
xor
lods
ret
lods
das
in
stos
jmp
movsl
push
ret
sub
inc
adc
xchg
cmovno
jp
fs
mov
inc
imul
inc
fsubrl
sbb
rcrl
test
mov
mov
fiaddl
stos
and
pop
int3
arpl
stc
rolb
sbb
mov
ljmp
ds
add
jae
cmpl
test
scas
sbb
rol
xchg
add
sbb
out
lock
jecxz
das
or
sbb
mov
push
in
mov
push
push
jmp
aad
fs
mov
xchg
dec
jae
loopne
add
pminub
call
sub
test
adc
into
cltd
rcl
mov
mov
inc
mov
cwtl
or
or
jno
decl
imul
jle
jmp
inc
xor
sbb
aaa
fisubrs
sbb
dec
pop
das
pusha
jnp
cmp
or
mov
mov
mov
shlb
sbb
andb
sbb
lock
out
sub
jle
xor
xchg
adc
lods
xor
shll
push
adc
dec
rcrl
sarl
add
addr16
cmove
xchg
fimuls
push
pop
in
pop
and
sbb
inc
sbb
jecxz
cmpsb
fdivr
mov
hlt
push
dec
adc
pop
xchg
call
clc
lock
xorl
inc
stc
adc
pop
add
lods
cmp
les
pop
addb
fneni(8087
repz
daa
jl
add
das
test
scas
or
std
xlat
jg
xchg
in
xor
sub
xchg
add
dec
or
bound
imulb
jl
sbb
adc
gs
gs
cli
inc
cmpsl
notb
push
in
insl
dec
loope
popa
inc
jo
mov
and
pop
dec
fistpll
js
les
sti
cmp
test
mulb
lret
jb
mov
inc
loope
xlat
xor
pop
dec
cwtl
xchg
lods
jo
jbe
mov
jmp
push
call
pop
lret
sbb
adc
add
aaa
mov
xchg
add
cmpsb
hlt
mov
loop
xor
je
jle
jns
xchg
ret
and
hlt
loopne
pop
push
pop
sti
pop
in
mov
ret
or
stc
jnp
push
sbb
xchg
insl
shl
mov
xchg
lcall
lods
push
out
sbb
inc
push
je
inc
xchg
int3
js
mov
or
inc
lahf
push
push
cmc
ljmp
adc
out
jmp
inc
mov
sbb
ss
insl
std
call
addl
subb
loop
jp
pop
push
cltd
xor
xchg
jecxz
aas
mov
push
mov
aad
vpunpckhbw
add
mov
inc
mov
sbb
int3
xchg
push
pop
setbe
outsl
les
movsb
or
data16
das
mov
cs
movsb
dec
cmp
out
and
mov
adc
push
cmp
adc
inc
add
add
fimuls
ror
push
pushl
int3
dec
jne
outsb
jns
scas
in
into
jle
push
dec
nop
mov
adcb
cs
dec
or
sbb
push
in
push
insb
rclb
mov
adcb
jbe
xlat
mov
bound
jae
pmulhuw
cld
cmpsl
cmp
dec
fs
js,pt
inc
addr16
je
lahf
sub
shl
pop
xchg
mov
or
test
xchg
jmp
mov
inc
stos
xor
fsts
mov
or
push
xchg
sub
or
repnz
and
adc
pop
mov
xchg
out
mov
inc
and
test
mov
xor
fbld
pop
or
mov
xchg
aas
add
sahf
addr16
ss
test
enter
fs
jecxz
xchg
pop
fld
push
push
mov
movb
or
jne
cld
mov
mov
ret
andb
and
cli
cmpsl
xor
sbb
mov
xchg
lret
lods
jp
cmp
scas
cli
mov
fcomi
daa
loopne
add
add
inc
scas
add
fsts
mov
jecxz
cs
ja
add
jns
jns
sbb
call
repnz
adc
sti
cwtl
rorl
pop
or
push
popa
into
inc
sub
insb
lds
mov
xlat
outsb
dec
insl
or
incl
aam
test
pop
icebp
inc
push
mov
xchg
push
jmp
pop
pop
imul
mov
sahf
or
lret
fcmovnu
pushl
ss
fs
adc
or
pop
cwtl
or
rcrb
xchg
leave
cmp
add
in
xchg
js
dec
loope
or
jbe
fsubrs
scas
sbb
mov
jne
shlb
cmp
jno
cmp
roll
repz
sub
vmovd
aad
les
jb
sub
push
iret
dec
les
cmp
push
jl
fadd
adc
jne
inc
xchg
push
mov
fcmovnbe
bnd
pop
xchg
pop
mov
flds
lods
mov
dec
lock
aad
xchg
insb
call
fisubl
or
mov
dec
scas
xor
arpl
add
pop
ret
pushl
nop
addl
push
sub
dec
mulb
fists
mov
rcll
ds
dec
pop
das
cmp
xchg
repnz
sub
loopne
add
ret
pop
sbb
lret
pop
pop
sbb
bound
fsubr
pop
adc
or
inc
jnp
test
mov
jmp
aas
jmp
leave
sub
ret
dec
fcoml
inc
jp
mov
add
shl
sbb
aad
aaa
xor
push
mov
test
movsb
inc
rorl
and
ljmp
and
add
sbb
cmc
dec
ljmp
push
jmp
lods
and
pop
mov
test
jns
lds
mov
adc
je
cmc
cld
ret
push
iret
xor
popf
xorb
por
add
push
jo
faddl
repz
lods
mov
into
cmp
lds
sub
cmc
loop
ja
add
les
sub
inc
mov
adc
int3
lret
push
xchg
fstpl
aas
ret
lock
das
lea
sub
sbb
dec
out
loopne
cmp
adc
jb
mov
sar
scas
sbb
shll
or
in
push
mov
stos
mov
mov
loop
add
cmc
mov
jge
test
fdivl
jmp
xchg
xor
fwait
rcl
loope
int3
push
fcoms
cld
mov
xchg
call
or
popf
sbb
xor
inc
push
fidivs
divl
stc
cmp
fildl
lods
arpl
arpl
jl,pn
js
ljmp
lds
cld
push
test
jne
in
das
loopne
adc
in
in
shlb
or
pop
pop
add
repnz
and
in
xchg
sbb
into
insb
les
sub
jl
pop
and
lods
jmp
popf
scas
push
xor
push
dec
sbb
or
mov
mov
iret
add
xchg
add
outsl
lahf
xor
fnstsw
repz
call
mov
adc
cmp
int3
and
cs
inc
cltd
leave
sub
sub
pop
dec
popf
cld
push
fidivs
pushf
das
ret
jae
pushf
xlat
xor
scas
sbb
lock
push
cwtl
cmp
cmpsb
mov
in
cmp
jnp
fidivs
into
stos
orb
rorl
dec
lahf
push
sbb
add
jp
out
xchg
xchg
jbe
push
ret
orl
test
xor
jge
out
ljmp
mov
into
push
std
fbld
adcl
pop
hlt
add
mov
inc
movsb
sub
or
xchg
jne
faddl
mov
stc
jo
into
stos
iret
scas
push
sbb
adc
inc
sti
rorw
icebp
sbb
lret
stos
dec
ds
push
fcmovb
and
dec
rcr
inc
dec
pop
xadd
pop
popa
cs
lock
adc
mov
cmp
sahf
fistpll
xchg
pop
or
fisubl
dec
pop
fadds
dec
or
xorb
mov
jno
mov
xchg
cmpsl
sahf
lods
and
mov
or
mov
in
pop
xchg
sub
push
inc
scas
test
sbb
fs
fmul
dec
lahf
lods
fwait
and
xor
mov
sbbb
mov
xor
adc
xor
insb
jne
fwait
add
and
add
into
or
inc
pop
or
mov
sbb
lret
lods
dec
popf
mov
add
into
jecxz
jb
cmpsb
fs
jecxz
mov
pop
jecxz
jge
daa
nop
icebp
lods
adc
out
test
mov
xor
sub
rcrb
push
xchg
xor
fildll
frstor
scas
loop
jae
mov
and
hlt
push
out
jne
ja
js
out
ss
fstl
aam
dec
fldl
fwait
gs
and
mov
pusha
xor
xchg
mov
call
ljmp
pop
and
fdiv
cmc
jl
and
xor
fists
clc
jp
notb
cltd
jl
fwait
or
sbb
dec
or
jb
dec
or
jmp
mov
dec
cwtl
inc
bound
sbbl
lds
push
push
cli
or
push
jle
jle
mov
insl
inc
inc
scas
out
es
fisubl
pop
mov
adc
pushf
out
xor
dec
sbb
or
repz
test
nop
repnz
pop
mov
add
push
inc
stos
fwait
aad
lret
data16
notl
pop
jne
mov
bnd
aad
cmp
jno
cmp
lea
inc
and
arpl
xor
mov
and
sbb
subb
mov
call
int3
xchg
das
add
adcl
subb
mov
jl
push
out
jp
fisttps
mov
adc
pop
push
movsl
shll
cmp
push
xor
xchg
or
mov
adc
ror
cld
push
outsb
popf
outsl
and
mov
jns
and
pop
lea
mov
cmpb
sub
into
jp
ss
inc
out
out
scas
bound
adc
pop
sub
into
dec
out
fldt
mov
cmpsb
mov
pop
xchg
loopne
lret
das
arpl
scas
rol
js
lods
xchg
push
jo
fcomps
incl
push
ds
or
addr16
fucom
mov
leave
mov
mov
mov
out
adc
mov
mov
sub
cli
sahf
ret
dec
aam
adcl
push
in
in
mov
cltd
xchg
popf
mov
jp
inc
or
adc
xor
mov
emms
push
pop
mov
les
or
ljmp
dec
dec
push
orb
ret
bound
or
adc
push
movsb
xchg
add
xchg
mov
sbb
sub
jle
push
pop
out
test
mov
push
lods
call
mov
lock
mov
jecxz
out
sub
xlat
dec
shl
sub
jae
inc
add
sbb
pop
xchg
adc
stos
mov
sarl
outsl
test
mov
out
fwait
xor
lock
mov
inc
and
jg
adc
lods
adc
mov
outsb
or
std
sub
aas
adc
or
mov
aaa
insb
push
jmp
ss
lret
cmpsl
imul
scas
fbstp
inc
orl
mov
rorl
mov
xchg
push
es
fisttpl
adc
push
pop
ljmp
mov
cmc
mov
negb
out
lcall
ja
sub
push
jmp
ljmp
mov
cmp
xor
and
xor
pop
mov
rcrl
ret
dec
negb
div
test
out
ja
jo
inc
xchg
outsb
xlat
pop
xor
mov
ficoms
jno
aaa
cmp
push
rol
jp
push
adc
movsb
pop
fistpl
rcr
xadd
movsl
adc
mov
jg
or
aam
repz
out
outsl
or
fists
mov
iret
pop
loope
das
cmp
scas
call
imul
cli
add
sub
je
loope
call
jb
jns
cmp
lods
mov
xchg
pop
and
mov
cwtl
jno
xor
lahf
mov
hlt
test
std
stos
jge
mov
mov
push
out
mov
clc
outsl
cmpsb
and
jle
inc
pop
vmovhps
and
lret
mov
jmp
sub
mov
loope
and
mov
out
inc
jge
cmp
xor
ja
shl
fdivs
push
stos
jne
pop
pusha
jp
lahf
fstps
jp
cmp
or
scas
xchg
xchg
mov
stos
in
cs
in
cld
scas
jb
dec
inc
cs
orl
gs
inc
sub
mov
sti
pop
ret
cli
test
cmc
in
push
test
inc
cmpsl
push
aas
int3
jl
mov
add
inc
subl
mov
and
aam
sub
pop
add
call
ss
mov
and
mov
out
inc
into
test
call
xor
cmp
addb
stos
dec
pop
test
mov
xlat
daa
in
in
int3
out
mov
or
lds
nop
mov
mov
jmp
aam
scas
bound
sbb
mov
xor
push
xchg
sub
cltd
jl
sbb
pusha
push
insb
fildll
repnz
imul
fcomp
push
inc
xor
lock
ficomps
filds
dec
sub
leave
mov
inc
dec
xchg
sub
push
xor
lds
inc
rclb
jp
mov
idivl
rol
test
jae
sbb
sub
mov
adc
insl
inc
lock
arpl
out
mov
pop
js
aaa
mov
lahf
mov
xor
pop
imul
es
jae
out
ljmp
sbb
loop
insb
and
pop
loop
imulb
loop
or
xchg
je
pushf
scas
outsb
std
adc
pop
jl
adc
sub
call
push
mov
test
xchg
outsb
dec
jp
mov
in
xchg
insl
fwait
or
cltd
dec
push
test
pop
lods
lds
push
adc
mov
rolb
sub
daa
in
ror
push
test
xor
jecxz
out
dec
xchg
push
pusha
fstl
movsl
cmc
or
test
das
inc
mov
cmc
adc
test
mov
cmp
shlb
or
repnz
and
push
arpl
jns
push
mov
cmp
test
xlat
fildl
icebp
adc
clc
dec
inc
mov
cmpsb
push
orl
or
imul
pop
jne
add
push
aam
mov
cs
mov
insl
mov
dec
out
and
shlb
in
add
sub
ret
mov
in
sub
lcall
add
pop
or
lods
mov
inc
jg
sbb
mov
mov
loop
dec
pop
aad
fiaddl
sbb
cmc
sub
sbb
int
mov
and
cltd
push
jne
xor
movsb
or
inc
out
mov
shrb
sti
dec
sub
bound
mov
jno
out
xchg
jp
jg
push
xchg
addr16
pop
stos
cmp
mov
and
mov
ds
xchg
mov
add
inc
mov
adc
rclb
pusha
push
xor
pop
popf
bound
sub
cmpsb
mov
sbb
xchg
lcall
dec
cmp
push
inc
xchg
xor
xor
mov
out
cmp
fisttpl
jmp
test
xchg
push
sub
loopne
fldt
popl
mov
jbe
scas
xchg
js
bound
and
adc
push
sub
add
repnz
mov
jmp
rorb
cld
or
out
popa
imul
push
push
test
repnz
adc
add
mov
mov
fnstenv
or
ljmp
out
xlat
push
jecxz
repnz
sti
js
push
inc
mov
inc
sub
outsb
pop
inc
mov
popf
sbb
test
gs
mov
dec
lcall
ljmp
sub
paddw
je
ja
jne
iret
sarl
push
adc
jb
pop
out
add
xchg
mov
movsl
or
xchg
es
cli
adc
aam
lds
clc
mov
rolb
xchg
mov
lock
fnstcw
or
loopne
push
loopne
nop
jmp
sub
jb
stos
sbb
sub
jae
ds
pop
mov
clc
pushf
mov
ja
inc
movsl
sub
inc
insl
add
lcall
sbb
dec
cs
test
std
xchg
int3
sbb
inc
lods
pusha
out
add
clc
loopne
pop
movsl
inc
out
in
mov
push
aam
lods
div
sub
insb
dec
or
lds
inc
or
push
in
dec
pusha
scas
xchg
movsl
mov
imul
add
divb
push
mov
push
cmp
ds
nop
outsb
xchg
add
push
les
pop
xchg
fs
jae
sbb
jns
xor
pop
cmp
ror
iret
xorb
test
dec
lcall
into
cmp
fisubl
lea
fcmovbe
push
or
js
test
test
addl
pop
outsl
imulb
push
sbb
pop
dec
imul
cmp
shll
sub
iret
lret
loopne
sbb
pop
jnp
or
int
mov
cwtl
mov
sbb
icebp
cwtl
adc
mov
xor
fucom
test
aas
test
js
xor
in
xchg
jno
cs
jmp
daa
jnp
fldenv
dec
aam
push
iret
pop
mov
cwtl
out
outsl
add
fcomp
xchg
leave
push
loop
in
xchg
mov
fsubs
ds
mov
test
es
insb
add
std
push
xchg
push
mov
inc
inc
mov
xor
or
mov
icebp
mov
mov
inc
sub
xor
sbb
call
cmp
fstpt
mov
inc
push
jnp
repnz
sbb
inc
ds
loop
push
jbe
push
and
cmpsb
out
xor
cwtl
adc
cld
loopne
xorb
dec
adc
push
cmp
xor
cld
sub
add
notb
sub
ja
or
enter
daa
mov
loop
dec
add
aad
notb
idivb
imul
test
mov
movb
cmp
pop
decl
inc
jle
movsl
jbe
arpl
mov
mov
mov
inc
and
mov
sub
mov
xor
xor
aaa
fdiv
dec
loop
mov
push
xorl
movb
jae
add
sbb
inc
test
mov
add
popa
mov
mov
lea
or
cmp
mov
lds
cmc
aam
sbb
imull
dec
jno
pop
scas
fisttps
mov
out
fisubrl
xor
les
das
cmp
test
push
cmp
mov
enter
popf
or
inc
xchg
or
jb
inc
popl
nop
bound
in
jg
sbb
out
mov
mov
cmc
js
mov
xlat
sbb
jo
insl
jge
sbb
push
js
iret
push
repnz
mov
les
pop
dec
stos
mov
or
icebp
mov
cmp
mov
mov
jae
incl
cmp
mov
mov
in
cmp
jb
movsb
xor
pop
fcmovbe
xchg
mov
dec
and
mov
xchg
test
or
je
adc
daa
dec
lret
rcrl
dec
es
insb
fadds
push
cld
aam
in
int3
fists
aaa
mov
mov
repnz
pop
pop
xchg
movsb
mov
jns
gs
jg
test
dec
rcll
scas
int
jp
pop
cmpsl
cmp
cmp
incb
pop
fistps
js
cld
jle
mov
mov
xor
add
or
and
xor
mov
outsb
sbb
stc
jnp
push
xor
or
mov
cmc
mov
mov
mov
mov
idivl
orl
je
iret
addr16
push
xor
pop
jle
mov
idivl
pop
sbb
inc
pop
push
jno
add
roll
cld
jae
xchg
ss
adc
and
pop
or
push
xor
idivb
loop
xlat
es
rorl
lods
movsl
pop
sarb
cld
iret
mov
push
or
mov
xchg
daa
les
mov
jno
inc
ds
xchg
cld
push
push
push
jle
icebp
lcall
push
jp
movl
enter
push
xor
jmp
and
ja
inc
and
add
mov
or
mov
or
in
add
dec
ds
push
fcmovu
aam
mov
add
js
mov
cmp
xor
imul
pop
cld
shlb
mov
or
or
pop
inc
sub
aas
xchg
lahf
dec
cmp
cltd
clc
imul
xor
xchg
mov
inc
int
imul
adc
mov
inc
dec
outsb
stos
add
cmc
xor
jl
sbb
cmpsb
sbbl
pop
and
sbb
pop
mov
dec
in
sub
dec
jb
dec
inc
mov
lahf
pop
mov
jns
popa
xor
adc
mov
stos
jecxz
xor
dec
add
mov
xchg
jns
push
pusha
xchg
les
mov
and
test
es
ficoml
pop
stc
insl
lea
adc
xorb
xchg
mov
xchg
rorl
stos
and
jge
push
cmp
subl
fdivl
jo
jecxz
into
out
ds
ret
xor
jo
iret
mov
jecxz
loope
loop
push
push
inc
enter
in
daa
mov
push
mov
sub
gs
bound
pop
addb
fnsave
sbb
fs
in
cmc
mov
cld
mov
xchg
scas
pusha
cmc
fsubl
sub
jbe
and
lods
repnz
cmpsl
mov
clc
jl
pop
sub
mov
arpl
adc
shlb
cwtl
and
pop
icebp
fmull
enter
fs
or
ja
add
mov
push
jb
inc
push
out
mov
mov
loop
sub
mov
and
adc
inc
jmp
lock
pop
cs
sarb
lret
divb
sbb
sar
stc
cmp
pop
xor
outsb
iret
fisubrs
mov
ljmp
cmpsb
sub
enter
js
and
sub
rcrl
scas
mov
dec
in
jg
rclb
je
test
stos
adc
cmp
xchg
scas
repz
mov
and
sub
push
inc
filds
adc
jo
xor
jl
loop
insb
sub
mov
mov
test
loopne
ja
adc
xlat
mov
and
adc
out
pop
rcrl
into
inc
inc
mov
sbb
shr
push
mov
sahf
xor
push
sbb
push
sbb
xchg
mov
push
sub
pusha
push
mov
andb
push
jb
sub
push
shrb
jmp
sbb
rcrb
xor
scas
mov
push
cmp
and
push
mov
int3
scas
mov
xchg
lret
enter
mov
leave
inc
mov
fdivr
cltd
mov
fsubrl
into
mov
ds
mov
fwait
push
cmp
fistps
pop
and
mov
lods
push
and
jne
and
stc
sbb
xchg
pop
cmp
cmp
cwtl
xor
jle
frstor
retw
hlt
pop
incb
push
aad
lods
push
jb
push
ja
sbb
jmp
les
outsl
pop
jno
add
in
xchg
cmp
mov
push
mov
fnstcw
lea
call
sub
shrl
add
mov
mov
mov
fnstenv
push
pop
inc
std
adcb
sahf
jge
ja
in
push
mov
mov
jecxz
add
in
mov
ret
lods
add
aas
mov
cmpl
pop
add
js
imul
sub
subb
or
in
mov
fsub
rcl
jecxz
shll
cmp
mov
popf
outsb
add
iret
sub
push
pop
in
dec
outsb
mov
pop
xchg
iret
dec
inc
fimull
dec
or
or
iret
lret
les
mov
dec
arpl
scas
addr16
sub
mov
pusha
jge
mov
stos
push
dec
ljmp
mov
push
push
add
aaa
inc
lcall
dec
jle
rcr
scas
leave
add
mov
leave
imul
scas
mov
or
test
and
leave
mull
pusha
inc
rorl
mov
or
add
pusha
les
sbb
or
add
movsb
les
dec
adc
sub
xor
xchg
inc
cwtl
add
mov
cmp
lcall
loopne
bound
dec
sub
pop
pop
lds
push
push
or
bound
jne
xchg
mov
in
jo
pop
cmp
mov
lods
shll
adc
mov
push
sbb
lret
dec
fdivl
adc
adc
mov
shlb
lret
je
std
mov
stos
mov
pushf
and
and
call
or
and
sub
repz
pop
or
xchg
nop
or
imul
pushf
into
int
or
or
aam
fbstp
dec
bound
or
dec
adc
sbb
lea
aaa
jge
add
lds
fcmove
fldt
mov
and
adc
bound
adc
inc
jo
cli
mov
jae
out
add
js
mov
divb
jl
ret
push
jmp
icebp
sbb
test
stos
mov
shl
and
rorb
outsl
add
mov
ret
xor
test
mov
sub
out
data16
sub
add
aaa
pop
movsb
push
fadds
loope
push
std
out
cltd
and
pop
out
hlt
mov
test
adc
push
stc
data16
sbb
hlt
rorl
lret
sbb
js
push
push
cmpl
call
stos
xlat
push
xor
lcall
mov
rcrl
rcrb
xchg
cli
adc
bound
cltd
nop
jecxz
daa
sti
cld
outsb
test
mov
lea
inc
icebp
pop
into
aaa
or
jno
inc
xor
mov
xchg
stos
adc
pop
in
es
orb
jmp
add
dec
push
loopne
psadbw
inc
mov
aad
repz
xorl
in
mov
dec
mov
dec
inc
sbb
mov
xchg
ds
repz
jae
das
push
mov
adcl
xchg
mov
in
mov
pop
insb
mov
inc
loop
icebp
xchg
lods
ret
iret
push
popa
mov
push
mov
mov
mov
mov
dec
sbb
push
pushf
adc
call
dec
aaa
in
pop
mov
sti
loop
lret
cmp
xchg
daa
imul
loopne
dec
mov
cmpsl
xchg
addr16
nop
lret
sbb
add
and
out
xor
popa
xchg
sbb
push
imul
cmp
mov
mov
sub
cmpsb
sbb
sbb
nop
fisttpl
push
add
and
sahf
mov
pop
push
pop
jae
mov
inc
aaa
addr16
adc
mov
mov
dec
dec
insl
and
inc
jge
int
loope
mov
movsl
sub
lods
nop
hlt
and
dec
movsb
pop
sbbb
rorb
std
inc
xchg
jno
add
jns
icebp
lds
lea
cmp
ficompl
outsb
sahf
lods
in
sbb
xchg
inc
push
shlb
rolb
cmp
jle
xchg
mov
scas
jmp
cld
mov
ret
sub
xchg
pop
in
bound
mov
es
xor
iret
lret
mov
adc
cli
leave
inc
stos
sub
jbe
data16
aaa
jne
loopne
imul
pop
pop
movsb
sub
shll
jle
push
dec
push
imul
fistpl
aam
xchg
jno
jae
call
jle
mov
or
mov
adc
inc
cmpb
inc
mov
cmp
mov
mov
xchg
jmp
sub
add
dec
rolb
jge
and
mov
inc
dec
ja
je
push
pop
and
mov
ja
je
aas
mull
push
mov
or
jg
add
mov
adc
mov
mov
repnz
stc
jle
mov
sbb
mov
or
xor
imul
in
adc
out
jge
aam
jg
and
inc
pop
movsb
mov
xchg
test
es
inc
inc
sub
sub
imul
and
fcoms
cltd
shlb
cmp
sub
dec
dec
mov
sbb
jecxz
mov
adc
lahf
cmp
xchg
push
push
cmpsb
lcall
iret
jge
testb
inc
fdivrl
add
leave
jp
jl
cld
and
xor
pop
out
outsl
sub
mov
mov
cld
sbb
sub
iret
pop
outsl
or
add
dec
adc
pop
hlt
popf
push
adc
and
ds
pop
mov
std
mov
lock
jge
pop
bound
xor
int
mov
in
out
js
or
mov
xlat
ficompl
arpl
and
aam
mov
icebp
aam
add
in
fadds
aaa
cmp
sub
and
jbe
mov
jb
es
adc
mov
inc
mov
mov
push
loope
mov
std
adc
push
or
fwait
cld
mov
stos
cli
inc
outsl
mov
or
or
je
and
jl
inc
pop
test
mov
inc
aam
push
jo
mov
in
sbb
cli
stos
sbbl
add
test
mov
in
cmp
popf
lods
fbld
stos
outsb
out
and
ds
adcb
mov
sarl
lods
mov
scas
mov
cs
xor
inc
mov
aad
push
cli
and
mov
jo
add
jne
cltd
sub
out
movsl
out
pop
xchg
imul
mov
lods
jns
insb
das
mov
sbb
mov
jg
cmp
pop
adc
scas
inc
sub
call
cmpsl
push
mov
hlt
shl
frstor
shlb
push
add
loope
stc
hlt
out
data16
aad
insb
pop
lret
xchg
and
dec
inc
cmc
sbb
out
mov
imul
cmp
pusha
xlat
add
cmpsb
jo
lret
push
mov
jle
pop
insb
fs
out
and
cmpl
lods
repnz
fildll
aas
jle
dec
fisubrs
ja
sub
das
fs
pop
iret
addr16
cmc
icebp
sub
pusha
xchg
dec
int
push
ss
or
pop
nop
test
sub
das
add
sbb
fiadds
adc
mov
inc
mov
inc
rclb
es
mov
shlb
mov
mov
mov
dec
mov
xor
stc
dec
xor
pop
or
sbb
fnstenv
outsb
ss
loopne
mov
stc
inc
subl
adc
dec
add
xchg
jno
pop
mov
xchg
jmp
testl
sti
mov
lea
test
sub
mov
rorb
xor
enter
data16
inc
js
cltd
out
xchg
aam
test
add
and
cli
pop
mov
or
jecxz
dec
shlb
jecxz
in
in
xor
sub
pop
icebp
mulb
rclb
rorl
test
xlat
or
sub
out
sbbb
inc
xor
xor
push
sahf
or
mov
xor
inc
and
shll
sti
xor
xchg
jnp
movsb
mov
dec
push
pop
mov
pusha
xchg
pop
pop
sbb
movsl
aaa
mov
out
xchg
push
mov
mov
mov
sbb
push
pop
inc
dec
jae
push
mov
xchg
idiv
orl
cld
add
inc
cwtl
int
xchg
js
in
mov
xchg
lock
sbb
jbe,pt
dec
cmpsl
es
pop
sbb
sbb
in
lea
mov
mov
sbb
loope,pn
lds
push
dec
adc
inc
pop
hlt
leave
or
or
call
leave
dec
scas
or
inc
add
mov
outsb
in
sbb
mov
clc
es
push
lock
add
push
icebp
mov
adc
jbe
inc
dec
xor
xchg
pop
dec
insl
xchg
imul
out
add
rclb
aad
icebp
sub
flds
mov
push
ss
push
inc
push
jl
nop
jp
ds
mov
aas
xchg
inc
push
shlb
sbb
mov
mov
cwtl
iret
jl
xchg
add
jne
mov
push
scas
mov
dec
clc
nop
fwait
fwait
idivl
jge
dec
mov
clc
scas
inc
test
lcall
cli
popf
jo
xchg
add
cmp
outsl
shll
clc
or
mov
cmp
cld
adc
cmpb
ret
mov
sbb
mov
test
sub
pushf
mov
cmpb
inc
adc
sub
shl
testb
mov
fnstsw
rorl
jnp
test
std
call
mov
xchg
mov
sti
test
mov
push
cmp
mov
dec
push
imul
xchg
pusha
mov
pop
in
and
adc
push
scas
xchg
push
popa
add
or
jb
mov
test
into
popf
mov
popa
add
lea
pop
cmpsl
mov
rcrl
cld
cmp
dec
inc
mov
push
jg
in
or
mov
sbb
shrl
sbb
mov
add
out
dec
lock
mov
adc
dec
xor
hlt
lcall
add
lods
cmp
fmull
cli
movsl
mov
sub
inc
adc
sbb
adc
sbb
pop
enter
push
jno,pt
addb
mov
sti
xor
es
fsubrl
pop
pop
sub
pop
sahf
jg
jno,pn
fcmovnbe
inc
push
aas
stos
movsb
push
inc
je
and
lods
out
lods
inc
mov
outsb
loop
andb
cmc
and
add
xor
pop
enter
mov
or
push
iret
jge
mov
mov
mov
jbe
outsb
jp
in
xchg
ss
pop
lock
dec
out
add
loop
out
pop
into
pushf
sti
mov
mov
stos
mov
jg
mov
sti
clc
adc
je
fwait
cmp
daa
xchg
push
test
sbb
cmpsl
enter
cmp
mov
pop
test
mov
push
add
cwtl
push
loope
cmc
add
out
aas
and
jle
mov
shll
adc
push
lds
push
jl
add
insl
out
out
xchg
jb
and
jno,pn
in
jo
add
clc
and
mov
mov
incl
mov
cmp
cmp
popa
jl
pop
xorl
adc
pop
outsb
loopne
and
shrl
icebp
xchg
xor
cs
in
push
pusha
and
pop
pop
insb
cld
push
inc
or
pop
leave
aas
in
dec
mov
jle
mov
sbb
mov
fs
sub
sbb
xlat
mov
inc
mov
jmp
std
jns
cli
push
mov
scas
sub
and
or
jno
cli
xorl
mov
or
sbb
or
into
fidivrs
cmp
add
mov
call
add
sbb
mov
xorb
push
xchg
pop
xchg
pop
jp
outsb
cmp
dec
pop
pop
outsb
cmp
mov
jnp
out
inc
popa
shld
inc
inc
das
xchg
jl
stos
fwait
ljmp
push
pop
shlw
inc
push
fadds
or
mov
or
mov
movb
mov
daa
jb
lds
aad
aaa
repnz
mov
xchg
pushl
inc
test
inc
add
add
inc
xchg
out
adc
or
scas
inc
jmp
dec
sub
push
xor
ficoml
lret
jo
arpl
mov
xor
push
xor
adc
pop
jle
sbbb
jge
loop
sbb
imul
xchg
pop
mov
in
nop
insl
xor
jns
stos
push
sub
or
xbegin
enter
jge
add
fstpl
dec
shll
rcrb
and
xchg
lods
in
mov
popf
add
mov
faddl
push
enter
fnstenv
mov
mov
jne
outsb
push
retw
adc
das
mov
int3
jns
and
or
jnp
push
mov
pop
jae
sub
ljmp
mov
xorl
mov
pop
push
inc
mov
sti
lds
icebp
repz
cli
xor
loopne
cmpsl
push
fisubs
aas
and
push
aaa
xchg
mov
pop
push
outsb
cwtl
int
icebp
aas
fstpl
inc
xor
jle
ror
jecxz
cmp
mov
mov
cli
leave
push
hlt
jne
xchg
ja
out
jmp
mov
mov
push
cmp
adc
outsb
test
hlt
decl
mov
inc
pop
mov
aas
xor
das
lods
mov
add
loope
sbb
in
stos
dec
mov
xor
pop
popf
psrad
pusha
inc
out
ljmp
out
stos
aam
aas
sbb
imul
into
push
inc
cs
pusha
dec
xchg
sub
jg
mov
negl
hlt
adc
dec
xor
int
popf
shrl
dec
ss
aad
or
scas
scas
into
pop
scas
xchg
xor
mov
mov
sarb
rclb
jae
into
xor
mov
and
cltd
popf
pop
xlat
sbb
push
cli
add
mov
xchg
rcll
xlat
aaa
mov
test
xchg
or
popf
adcl
out
iret
shlb
add
outsb
hlt
mov
lahf
incl
fildll
add
push
jl
inc
ja
push
stos
mov
test
mov
push
insl
and
or
sub
scas
test
mov
jl
dec
dec
add
inc
and
xor
scas
mov
add
ds
pusha
xor
idivl
cs
addr16
frstor
sub
stos
mov
pop
stos
cmp
rcrb
out
and
cmp
jp
aam
loope
dec
pop
xor
mov
clc
sub
and
call
mov
sbb
lret
sub
ljmp
aaa
cli
fsts
repnz
cmp
mov
stos
mov
push
cmp
pop
inc
int
pop
jecxz
out
mov
sbb
in
and
dec
adc
testb
push
pop
inc
cltd
push
out
lretw
das
adc
inc
stc
ret
pop
mov
negl
inc
mov
aaa
cmp
jl
push
aam
std
enter
sahf
push
ljmp
movsl
sbb
pop
sahf
mov
cmp
in
iret
pop
sub
or
leave
add
or
and
inc
dec
jae
pop
mov
movsl
or
dec
add
push
sbb
mov
rorb
lret
loop
push
jmp
iret
dec
cltd
subb
mov
cli
add
bound
pop
lret
xor
rcl
sbb
sub
mov
sub
push
mov
data16
mov
cwtl
xchg
imul
jp
push
movsb
jb
arpl
fs
lods
add
aad
loop
arpl
in
push
dec
test
mov
jl
jbe
fsubrs
add
mov
ret
aaa
scas
xchg
outsb
dec
int
jbe
add
ret
scas
sarb
push
and
in
rorb
cmp
add
add
push
clc
movsb
leave
inc
xchg
pusha
jnp
sbb
push
jno
lcall
in
mov
mov
popa
mov
inc
call
lret
scas
mov
inc
xor
ds
call
cmc
filds
push
lret
or
cld
sbb
jbe
in
sbb
add
jp
xchg
jmp
sbb
fwait
ljmp
mov
sub
cmpsb
fcomps
scas
pop
pop
aaa
mov
inc
sahf
testl
dec
imul
inc
push
ds
lods
sahf
je
xchg
stos
fdivs
sub
push
scas
cmp
test
enter
rorb
or
pop
fwait
inc
xlat
fbld
lahf
mov
rorl
sahf
fwait
bnd
or
cmpsb
pop
jae
and
aam
fsubs
or
add
ret
jmp
inc
les
lret
std
test
leave
dec
cmp
push
jb
dec
fsubrp
andl
xorb
or
loope
mov
xlat
mov
cltd
add
jle
arpl
mov
sldt
inc
addr16
jo
iret
mov
push
enter
insb
mov
inc
aam
scas
push
cmp
mov
das
mov
mov
insb
inc
mov
mov
cmp
jp
movsl
aaa
mov
lods
rcrl
jg
push
jp
jae
mov
cld
adc
mov
inc
xchg
jp
and
fs
push
adc
jg
push
pop
inc
stos
insl
mov
daa
pop
fistpll
popa
push
cmp
mov
jo
cld
mov
or
inc
and
leave
shlb
lgs
loope
hlt
or
orl
out
insb
sub
fsubrs
push
pop
das
cmp
push
mulb
fwait
mov
sub
in
nop
xchg
pop
and
les
inc
iret
or
cltd
mov
cmpsl
test
dec
jno
jns
cwtl
sbb
iret
bt
fsubrp
xchg
arpl
push
repnz
int3
inc
rcll
mov
xor
test
xorl
xor
scas
test
ficoml
nop
ds
iret
cltd
stos
xor
dec
leave
gs
pop
jns
push
fwait
out
out
int
add
mov
lock
jp
jae
out
ds
sahf
mov
or
insb
xchg
rep
mov
out
pop
mov
push
jno
cmp
aas
push
push
ds
std
outsb
lds
xchg
dec
test
inc
cld
sbb
cwtl
sahf
dec
negl
hlt
push
arpl
insw
outsl
push
xor
mov
cmp
push
cmpsb
movl
scas
xchg
fs
mov
add
sub
pop
lcall
test
cltd
stc
mov
dec
sub
cmp
jb
fidivl
aam
adc
adc
lret
stos
add
sarl
je
outsl
mov
mov
andl
cmp
cltd
outsb
jns
inc
out
into
or
leave
push
xchg
mov
inc
xor
insl
pushf
dec
or
orl
adc
jb
adc
mov
rcrl
lret
mov
mov
mov
and
mov
cwtl
shlb
mov
cmpsb
push
in
shl
sarl
outsb
jl
std
rcrb
int3
je
scas
xchg
lea
aas
mov
mov
outsl
int
imul
pop
sub
pop
ljmp
or
jmp
jb
jbe
int
jno
pop
iret
cld
test
inc
imul
stc
xchg
mov
ja
mov
sbb
lds
fldcw
hlt
fildll
mov
push
idivl
adc
pop
in
cwtl
or
daa
lods
cli
cmp
daa
outsb
pop
or
loop
nop
pop
loop
imul
dec
xor
out
clc
inc
ds
add
xchg
inc
xor
cwtl
xchg
stc
ljmp
sti
jle
cld
fs
sub
adc
lods
stc
sub
dec
nop
adc
insl
mov
push
les
add
in
dec
xchg
lods
xchg
pusha
int3
mov
dec
and
inc
lods
xor
inc
mov
add
mov
fldcw
imul
bnd
in
gs
and
mov
xchg
loop
xchg
fbld
sahf
jg
stos
adc
out
xor
push
lock
pop
ret
pop
cmpsb
rorb
inc
push
and
adc
push
clc
sbb
push
sbb
mov
push
dec
cmpl
repz
out
fdivrs
or
or
xchg
and
sti
les
ljmp
sahf
and
push
icebp
mov
push
mov
xchg
or
xchg
jmp
sahf
out
jno
aad
div
subb
cmc
inc
pop
out
outsl
sbb
js
mov
mov
dec
mov
ds
fwait
cli
jp
and
lods
popf
dec
fs
stos
pop
lods
lds
xor
cs
shll
in
push
mov
outsl
add
jecxz
lcall
or
imul
adc
or
pushf
jmp
jp
das
ja
and
faddl
daa
cmpsl
lea
sbb
mov
xchg
xor
dec
or
inc
cltd
scas
jno
add
push
xchg
loop
repnz
flds
xchg
cltd
mov
pop
push
xchg
adc
jnp
fistps
mov
clc
push
and
test
movsb
push
add
pop
push
in
pushf
lea
jnp
xorb
rorb
or
xchg
mov
xchg
leave
rclb
push
je
in
mov
jmp
cs
sbb
imul
pop
cli
shl
ror
stc
cmp
lods
push
cmp
mov
in
sub
pop
or
orl
in
jns
stos
dec
sbb
push
imul
insb
loopne
mov
sub
fwait
add
jp
jne
push
inc
mov
mov
push
dec
pop
test
sub
in
jle
or
inc
adc
mov
jbe
loope
or
mov
xor
adc
jbe
push
fidivl
jbe
mov
repnz
and
dec
mov
popa
jns
mov
pop
mov
fcmovne
pusha
in
add
dec
mov
lret
addr16
pop
mov
cltd
cmp
adc
das
mov
andl
jnp
cmpl
push
xor
or
into
mov
arpl
push
sar
stos
mov
adc
sub
out
sub
mov
inc
and
jp
gs
lret
sbb
xchg
sub
stos
pushf
adc
push
and
nop
xor
dec
bound
xor
popf
in
push
adc
add
stos
jb
lods
mov
xor
or
ret
loopne
push
aas
iret
and
out
icebp
call
mov
scas
fsubl
frstor
out
iret
jge
add
nop
add
insb
hlt
inc
mov
movsl
xor
adc
data16
leave
pop
in
dec
inc
jecxz
jbe
ret
loope
mov
movb
sar
adc
mov
jno
daa
lret
movzwl
enter
pop
mov
xor
js
push
xchg
aaa
test
jb
mov
sarl
sahf
jle
inc
mov
push
loop
jns
leave
shlb
es
sbbb
cmp
das
push
cld
xchg
cmpsb
std
jp
stc
push
cwtl
adc
mov
xor
sbb
mov
dec
mov
je
int3
lcallw
push
popf
mov
lods
lcall
cmp
inc
pop
ret
movsb
dec
adc
inc
sbb
push
inc
push
sbb
mov
and
aad
daa
clc
cmp
jg
outsl
mov
int
mov
loope
mov
push
mov
ljmp
mov
xor
cs
pop
push
in
pushf
jb
insb
adc
leave
popl
sbb
add
dec
cmp
jg
mov
arpl
out
jmp
xchg
ret
pushf
lods
xor
and
mov
cmpsb
testb
cmp
leave
push
test
pop
imul
imul
fisubrs
call
sbb
dec
ljmp
push
adc
sbb
push
test
cmp
mov
push
fistl
jmp
addr16
daa
pop
push
push
lcall
out
icebp
jp
xor
mov
push
ja
pop
adc
into
mov
out
xchg
loop
pushf
and
stos
shl
mull
adc
aaa
loopne
inc
mov
adc
in
mov
loopne
add
ss
hlt
jge
xchg
ljmp
pop
pop
or
out
outsb
sub
xlat
or
inc
or
movsl
test
xor
gs
add
fld
leave
test
dec
dec
ss
es
push
xlat
xchg
idiv
in
cmpsb
icebp
gs
cmp
sbb
inc
loope
pushf
push
sbb
int
lods
mul
mov
lret
test
roll
test
test
lahf
jmp
jb
arpl
stos
cmp
gs
pop
push
scas
aam
imul
cmp
cld
lods
push
add
insb
mov
fidivrl
sahf
push
push
mov
stos
lcall
dec
mov
inc
push
dec
jg
fs
jle
movl
icebp
inc
push
adc
gs
stos
dec
fnstcw
arpl
sbb
jecxz
movsb
imul
sbb
sub
scas
movsl
mov
sahf
push
enter
xlat
push
mov
fadd
add
popl
cmp
jo
xchg
xchg
push
or
xchg
sti
leave
lcall
negl
mov
adc
loope
mov
sahf
mov
adc
xchg
int
rorl
xor
mov
loopne
add
mov
pushf
sub
repnz
imul
pop
leave
outsl
daa
push
jg
add
and
leave
mov
test
lods
jg
inc
ss
out
sbb
mov
imul
dec
sbb
das
lods
jns
setle
xchg
jo
add
out
lea
arpl
pop
cmpsl
std
xchg
sub
gs
mov
push
andb
mov
xchg
push
adc
aad
dec
sbbb
in
hlt
dec
or
clc
scas
mov
addr16
clc
cs
outsl
push
mov
pop
mov
sbb
cmp
lods
and
ret
adc
inc
cmp
inc
ficoml
jns
inc
cmp
mov
ja
cmc
push
inc
adc
mov
into
pusha
aas
pusha
xchg
cli
mov
inc
and
lock
inc
jbe
adc
inc
cs
cmp
stc
dec
jb
test
cmpsb
scas
jbe
fisubl
orb
cmp
insb
outsl
mov
push
adc
fsubrs
sub
stc
xchg
cmp
jecxz
cwtl
imul
adc
mov
inc
sbb
lahf
pop
push
xorb
mov
pusha
and
je
or
mov
call
ficoml
ds
cmp
inc
fs
stos
mov
and
add
dec
and
cmc
aad
push
xlat
fisttps
std
int
shlb
inc
sub
lret
xlat
jno
mov
les
cwtl
mov
xchg
repz
call
push
xabort
sbb
push
movsb
in
pop
or
push
mov
sub
mov
jnp
negl
xchg
push
shl
div
cmp
icebp
fdivs
shll
pop
rclb
add
outsb
push
bound
add
adcb
subl
mov
mov
clc
xchg
aaa
lret
push
repnz
popa
mov
push
insl
add
inc
sub
out
and
test
mov
inc
in
cs
mov
and
or
push
mov
lods
ja
and
adc
xor
rol
mov
push
push
jp
movsb
stc
inc
sbb
sub
sub
inc
ret
es
das
call
shl
mov
xor
adc
out
gs
push
mov
clc
jp
jmp
sub
mov
xchg
cmpsl
scas
xchg
fs
jbe
and
je
push
lea
nop
jg
iret
dec
fbstp
rcrb
and
into
arpl
push
ret
mov
xchg
cld
mov
push
test
mov
xor
dec
call
leave
subl
loopne
cli
in
and
push
and
cwtl
scas
cmp
es
mov
scas
mov
inc
pop
mov
cld
xlat
pop
dec
adcb
push
push
paddd
sbb
std
ja
dec
cmp
cwtl
js
insl
std
cmp
cmp
lret
pop
push
and
insl
divl
lds
sbb
popf
and
gs
xchg
lret
xchg
shll
add
or
dec
adc
aaa
mov
push
mulb
out
shrl
or
inc
divl
mov
stc
not
stos
nop
cmp
push
es
lods
sahf
mov
push
inc
punpckhwd
push
cltd
dec
mov
subb
ret
cld
pusha
xchg
loop
cli
push
xor
pop
or
fcomip
fistl
inc
cmp
push
xchg
jg
subl
fistl
xor
sahf
pop
push
aaa
xor
pop
lahf
scas
bound
adc
adc
jne
hlt
or
fmuls
or
stos
or
sbb
popa
xchg
cmp
xchg
mov
dec
mov
inc
push
es
ss
and
mov
sub
mov
lret
aam
mov
pop
call
dec
push
movsb
lods
stc
pop
or
insl
jne
jge
daa
mov
jno
pusha
lret
lods
gs
inc
or
aaa
js
sub
aas
inc
pop
lcall
push
movsl
ss
in
call
cmc
je
jmp
and
repnz
ljmp
adc
mov
inc
pop
jecxz
std
xchg
outsb
fs
cmp
fistl
cmc
or
dec
int
push
jne
add
std
cmp
and
in
push
dec
push
mov
and
sub
mov
and
rcr
fbld
dec
out
and
add
pop
pusha
fadds
cmp
sub
adc
cmp
divb
jne
jo
mov
dec
bound
mov
or
pop
lds
xor
int
adc
mov
push
sahf
xchg
imul
jbe
aaa
mov
push
sub
add
mov
fbld
scas
add
xor
cmp
push
out
and
and
imul
jo
loopne
mov
xor
dec
inc
jb
sti
cmp
addr16
push
xlat
mov
sub
in
ror
insb
pushf
and
loop
test
pop
repnz
sub
sbb
popl
inc
lret
mov
testb
mov
and
outsb
daa
fisttpll
lahf
stos
movsb
xchg
js
sarl
iret
outsl
push
daa
adc
sub
test
push
xchg
cs
sbb
xchg
ss
mov
pop
jecxz
mov
and
and
fidivl
subb
aaa
subb
test
and
xor
aam
add
add
orl
fstp
insl
add
mov
mov
repnz
xor
es
es
in
push
lahf
test
out
jb
mov
jb
stos
incb
jb
outsl
and
xor
mov
jg
cmpsb
cmp
pusha
fdivl
cmp
js
outsb
add
xor
cs
test
push
in
repnz
lock
pop
xchg
in
fsubrs
cwtl
pushf
sbb
xchg
cmp
mov
sbb
mov
rolb
test
arpl
cmp
push
ss
les
lds
xchg
mov
mov
mov
call
dec
dec
rcr
dec
loop
sub
sub
and
cld
mov
imul
jle
jbe
mov
mov
rolb
daa
adcl
outsl
bound
xor
inc
push
xor
push
in
adc
or
mov
popa
xchg
lret
sbb
cwtl
loop
icebp
fwait
or
pop
sbb
call
adc
dec
and
dec
rorl
pusha
subb
fcomps
nop
insl
push
xchg
and
mov
hlt
xchg
shr
push
ja
testl
cltd
dec
cli
jmp
mov
bound
int3
mov
xchg
cwtl
andb
ja
mov
push
mov
mov
pop
dec
iret
xchg
push
lret
cmp
push
xchg
sbb
sbb
mov
pop
int3
dec
sahf
shlb
out
xchg
mov
ret
sbb
flds
push
scas
mov
mov
adc
lds
pop
pop
xor
icebp
jecxz
sbb
pushf
stos
sub
mov
pop
push
imul
pop
jnp
daa
jmp
sub
in
mov
iret
imul
dec
dec
out
dec
jmp
fcoms
je
jmp
cwtl
jno
aaa
int3
pop
mov
lea
in
sarl
cmpl
pushf
subl
mov
aad
add
daa
mov
subb
sub
sub
and
mov
scas
js
and
rorb
xchg
adc
in
outsl
stos
outsb
shrl
int
or
iret
fs
fnstsw
shlb
pop
adc
insl
jno
xor
jl
mov
rorl
xor
stos
fistpl
std
xor
scas
push
inc
insl
pop
inc
stos
into
jbe
mov
jp
push
sub
dec
adc
inc
jb
das
mov
stc
push
jne
and
imul
dec
add
js
sarb
inc
or
ds
enter
insb
lea
lcall
cli
aam
or
mov
inc
xor
push
jnp
mov
xchg
xor
push
dec
jmp
sub
or
orb
pop
jbe
leave
xor
add
lods
addb
cld
mov
mov
addl
xorb
ds
xchg
or
and
adc
cmpl
insl
mov
xlat
mov
pusha
aad
aad
loopne
fstpl
mov
mov
pop
cld
stos
int
clc
push
iret
insl
push
cmpsl
mov
ret
aad
jp
mov
adc
aas
sti
mov
lcall
xchg
movsl
movsl
or
adc
mov
xchg
jge
test
mov
mov
cmc
lahf
ds
adc
mov
sar
fdiv
rcrb
lcall
cmp
out
inc
rcrl
inc
jno
std
cmp
cmpsl
repz
in
push
pop
outsb
jnp
fiaddl
cld
fidivrs
dec
push
out
inc
adc
adc
mov
dec
and
jb
fimuls
lock
pop
out
fistps
pop
lret
out
int3
mov
mov
test
sbb
fistps
dec
add
iret
cmpl
xchg
mov
mov
inc
stos
xorl
repnz
popa
push
xchg
and
outsl
rep
sbb
jne
lock
cmpsl
sub
jmp
repz
fwait
pop
add
mov
cmpsb
xchg
add
bound
hlt
ret
jae
loopne
cmp
loope
insb
inc
mov
push
mov
pop
sbb
mov
mov
mov
fpatan
or
mov
loopne
cs
loop
push
adc
mov
mov
jnp
outsl
xor
es
test
and
xchg
jo
sarb
les
fwait
aad
dec
xchg
xchg
jecxz
mov
lcall
pop
and
lcall
aam
add
js
xor
push
in
lods
andl
add
xor
add
shr
imul
movsl
leave
xchg
andl
push
adc
data16
out
cmpsb
fcompl
mov
icebp
or
inc
lods
mov
add
add
xlat
sahf
cwtl
dec
in
inc
cmc
or
push
test
sbb
popa
int3
pusha
lcall
add
push
filds
sub
rcll
ret
cmp
daa
stos
shrl
adc
fistps
out
mov
jg
xor
push
xchg
pop
cmpsl
and
out
sahf
mov
sbb
add
mov
aas
aam
fs
or
in
imul
push
dec
cs
jg
mov
clc
fiadds
stos
inc
pop
pop
push
aad
add
lea
stos
cmp
sbb
stos
add
xchg
rolb
popf
cmc
movsl
add
fdivr
push
in
leave
cmpsl
dec
pop
in
jle
sar
mov
scas
or
pushf
negb
xor
inc
adc
mov
test
ss
ret
xor
loopne
add
lds
and
jbe
imul
fimuls
and
stos
push
aam
push
mov
push
movb
add
and
mov
mov
nop
cmp
pop
push
mov
stc
mov
jecxz
cmc
icebp
shrl
xchg
mov
and
negb
cmp
rol
sub
repz
add
mov
inc
sub
lret
call
adc
mov
ret
scas
test
mov
jecxz
aas
push
jge
or
aas
fisttpll
std
sahf
and
push
popa
add
hlt
cld
in
jge
das
jo
sbb
mov
xchg
dec
and
fcmovne
movsb
loop
outsb
cmp
jbe
lods
in
dec
pop
fs
fdivs
inc
or
jo
mov
lods
fidivl
scas
cmp
imul
divl
mov
std
les
jle
adcl
xchg
insb
jle
lods
pop
loope
pushf
int3
jmp
or
fwait
lock
xor
adc
inc
sub
cwtl
lock
ljmp
cltd
xor
cmp
ds
rorb
fdivs
jnp
mov
clts
cmpl
lea
jbe
test
mov
dec
dec
jmp
push
clc
push
int3
pop
jg
sub
lods
mov
cmpsl
mov
andl
in
insl
ror
xchg
adc
sbb
js
mov
sub
jp
fdivl
scas
lahf
outsb
cmp
jge
and
leave
xor
leave
sti
into
push
xlat
sbb
movb
popl
add
cli
xchg
pop
sarb
inc
jnp
stos
inc
mov
add
pop
insl
nop
mov
nop
out
or
incl
sub
inc
pop
add
cwtl
cmp
js
fwait
jp
and
and
mov
loop
in
fucomp
pop
sbb
stos
cwtl
sub
jo
mov
and
add
rcl
cwtl
lahf
mov
enter
hlt
stc
or
sbb
dec
cmpsb
fstpt
in
cmp
fcomps
pop
and
js
mov
jmp
dec
and
cmp
xchg
mov
lret
scas
cmp
lret
cmp
cltd
lods
jmp
jnp
in
cmp
fdivp
popf
mov
jns
mov
ljmp
and
popa
jbe
xor
call
pop
addb
leave
daa
out
test
jle
and
jp
ss
ds
popf
mov
sarl
and
dec
push
add
sbb
aam
jo
pop
insb
test
mov
rorl
jge
lcall
xor
push
push
jns
dec
cmp
mov
scas
orl
cltd
mov
lods
pusha
test
mov
mov
stos
movl
pop
mov
test
push
adc
aam
mov
test
adc
repnz
sub
imul
xor
pop
aam
jmp
or
add
dec
xlat
inc
nop
ret
jno
or
xchg
mov
pusha
call
movsb
add
xchg
fisttps
xor
popa
sub
mov
cmp
sti
mov
mov
push
movsb
int
mov
lds
mov
call
fistl
jo
xchg
mov
cs
dec
aas
mov
jmp
cmp
sbb
sbb
inc
repnz
push
pop
dec
imul
xchg
xchg
cltd
cli
adc
xchg
cmp
xor
cwtl
dec
jmp
or
pop
std
jmp
test
mov
cmp
adc
insl
hlt
cmpsl
leave
jecxz
jb
pop
push
hlt
packssdw
pop
lods
nop
mov
mov
insl
add
fsts
lea
xchg
iret
in
xchg
xor
dec
jno
push
cld
fwait
push
les
adc
jne
aas
cmc
loope
jp
pop
cmp
enter
jnp
cmp
jecxz
lea
dec
xchg
inc
mov
push
mov
and
sub
fwait
insb
adc
in
sub
and
mov
cmp
cmp
iret
fbstp
cmp
jl
push
and
jmp
dec
mov
pop
js
das
pop
movb
lods
cmp
or
sbb
cmp
clc
jnp
mov
inc
sub
inc
mov
dec
add
aad
sub
mov
dec
loop
xchg
sbb
int
cmpsb
sub
pop
enter
mov
xchg
xor
xchg
sub
aaa
inc
repz
movsb
cld
popf
inc
sub
imul
jns
orl
push
sbb
stc
inc
stos
movsb
dec
mov
cmp
push
sbb
push
repnz
add
dec
cmp
test
pop
mov
aas
hlt
mov
and
clc
mov
nop
xor
or
sub
loope
cmp
gs
pop
mov
aam
sub
dec
push
sbb
insl
jns
pop
fcomps
dec
mov
out
repnz
push
pop
stc
xchg
xchg
mov
xor
pop
jb
sbb
stos
lea
stos
dec
adc
pop
inc
pop
mov
cmc
aaa
dec
pop
add
xlat
mov
dec
scas
cmp
or
int3
test
pop
push
mov
enter
push
jmp
sahf
aas
pop
adc
cmp
jge
inc
or
dec
xchg
push
xor
popf
fs
mulb
rcll
aaa
pop
mov
inc
sbb
cmp
add
xchg
mov
dec
pop
mov
ja
out
push
or
int
cmpsl
push
xor
xchg
out
rcl
out
push
mov
xor
xchg
adc
mov
mov
ds
repz
das
push
lret
shrl
pop
push
sahf
imul
loop
mov
inc
xor
fisttpll
pop
pop
mov
jl
pop
push
pop
lret
adc
pop
mov
xor
outsb
xchg
sub
pusha
push
dec
push
xchg
or
mov
adc
cs
dec
and
mov
scas
into
cwtl
in
fwait
xchg
xor
xor
push
add
or
jl
mov
aaa
cmp
es
inc
addr16
or
or
negl
stos
add
push
cmpsl
out
xchg
lock
lds
cmp
pop
mov
mov
jmp
daa
pop
mov
push
mov
aas
out
fisubrs
sbb
adc
ret
adc
or
frstor
push
xchg
pop
ficoms
mov
push
inc
jle
cltd
in
xor
in
fidivrs
cmpsl
or
in
and
stos
leave
inc
xchg
ficoms
icebp
inc
loope
pop
mov
sti
fcomps
stos
aas
in
adc
push
inc
sbb
push
mov
and
cmp
push
jo
adc
cld
dec
mov
ss
xor
dec
push
fisubrs
dec
pushf
jae
sti
mov
jge
ja
mov
test
clc
mov
jns
cmp
pusha
sbb
loopne
imul
in
cltd
mov
cmp
inc
and
sbb
add
mov
mov
adc
fdivrs
adc
rclb
inc
xchg
dec
fists
lods
lods
inc
out
rcrl
arpl
inc
testl
xor
inc
out
roll
enter
adc
mov
push
pop
int3
iret
adc
int
lods
jmp
mov
adc
test
sbb
arpl
int
pop
mov
adc
jecxz
cmpsl
sub
sbb
shl
aaa
mov
or
cli
pop
mov
adc
xchg
or
jg
or
xchg
test
xchg
dec
sbb
inc
jbe
jmp
dec
imul
sub
pop
fstps
in
sub
jle
pop
icebp
fiadds
push
cmp
aad
shl
sbb
dec
jle
xor
aam
jge
dec
pop
adc
es
jge
xchg
addr16
push
or
push
pop
push
mov
pop
lock
mov
mov
and
inc
das
sbb
cmp
test
mov
jbe
test
fdivrs
out
test
cmp
dec
mov
cmpsl
push
out
mov
das
mov
int
xor
fsubrs
jno
outsl
or
mov
adc
xchg
xchg
lods
mov
pop
jae
push
adc
lret
pop
adc
ror
push
jne
jns
xchg
sbb
mov
std
loopne
test
sub
push
xor
mov
pop
inc
jl
icebp
or
loopne
testb
fisttps
dec
mov
xor
popf
sub
xchg
scas
sbb
sti
mov
sub
fnsave
xchg
pop
inc
xchg
pop
lret
or
popa
fistpll
js
dec
xchg
daa
dec
ret
push
cmc
jge
mov
insl
mov
movsb
xor
gs
xor
sub
ret
mov
push
mov
pop
bound
out
int
cmp
jbe
cld
test
stos
mov
scas
push
data16
mov
dec
xchg
daa
push
mov
push
mov
jo
inc
cmp
add
xorl
fcmovbe
jnp
lret
imull
cmp
jno
sarb
inc
insl
mov
sbb
jnp
nop
adc
add
and
mov
xchg
pop
cld
xlat
ret
aam
sbb
out
popa
cld
fwait
insl
dec
push
xchg
outsb
push
sub
mov
mov
outsb
push
add
es
or
int3
das
xor
and
push
outsb
push
add
xchg
mov
cmc
lcall
or
mov
xlat
mov
push
negl
xchg
pop
aaa
arpl
orl
sahf
or
mov
and
inc
xchg
mov
mov
repz
stos
mov
mov
mov
ret
push
mov
pop
inc
mov
xchg
and
jnp
and
and
pop
add
add
sub
jle
xchg
loopne
mov
push
pop
mov
pop
cmovge
inc
pop
sbb
sahf
aas
les
in
add
popa
sbb
sbb
jle
jb
in
mov
add
cmp
add
jge
cmpsb
pop
popf
ret
xchg
jbe
mov
adc
xchg
out
or
out
int
movsl
icebp
sub
aad
ds
jecxz
mov
adc
dec
out
hlt
push
pop
into
xor
mov
dec
in
push
fdiv
jb
lcall
mov
cmp
lahf
add
jne
pop
rolb
xchg
sbb
std
es
inc
addr16
into
dec
scas
cmp
out
and
inc
into
test
and
jns
fsubs
aaa
mov
pusha
sub
das
cs
loope
jl
inc
pop
out
cld
mov
mov
sbb
aas
fidivl
lea
inc
cmp
rorb
xchg
jno
or
cmp
adc
and
out
or
mov
cmp
push
lahf
sarl
push
ss
dec
adc
fsubl
sbb
jl
push
mov
xchg
rolb
jbe
js
pop
push
fiadds
pop
or
repnz
and
clc
jne
mov
arpl
fiadds
xor
addb
or
mov
sub
jl
xchg
cs
mov
xor
mov
mov
mov
out
sub
jmp
and
lcall
mov
mov
push
cltd
xor
dec
xor
mov
movsb
pop
popa
mov
sahf
cmp
and
mul
in
push
js
fwait
xor
pop
mov
pop
or
cmp
icebp
pop
ffree
aad
jo
push
into
fcmovnu
sbb
cmpsb
pop
das
xor
xchg
add
bound
int
mov
mov
cmc
add
jae
jle
sbb
mov
fisttps
add
sbb
loopne
or
or
in
xor
pop
inc
std
popa
mov
dec
or
imulb
ret
mov
lock
lds
mov
xchg
mov
add
das
mov
add
inc
fstps
push
inc
push
pop
xchg
mov
jl
inc
dec
push
scas
repnz
push
gs
mov
dec
fldcw
test
test
push
idivb
stc
or
icebp
popf
scas
sbb
cmp
dec
dec
xor
and
leave
fstpt
inc
mov
lea
add
jg
mov
adc
sub
aad
xor
test
add
sbb
adc
rcll
std
andl
into
scas
jmp
xchg
cmp
xor
mov
and
mov
adc
test
cmc
pop
mov
repnz
push
mov
push
mov
pushf
jae
or
ljmp
scas
test
push
inc
jae
add
shl
ja
adcb
mov
sbb
aam
ret
cmp
out
aad
int
shlb
movsb
mov
push
sub
rorl
out
fisubrl
jecxz
sbb
fsubrl
inc
mov
jne
mov
push
fdivl
insl
add
cmpsb
mov
add
nop
pop
scas
push
dec
rcrl
or
addr16
mov
adc
aaa
out
cmp
mov
cmp
fdivr
fwait
cmpsb
lods
roll
sbb
pop
and
push
xorb
and
addr16
int3
orb
es
loop
jb
mov
add
jecxz
ljmp
fisttpl
ret
movsl
jmp
jecxz
gs
mov
mov
dec
aaa
shrb
mov
sub
mov
mov
rorb
fnstsw
mov
pop
or
pop
sub
mov
sbb
push
cli
out
pop
cmp
daa
adc
jbe
jbe
faddl
lods
fstl
xchg
fildll
bound
dec
lret
movsl
stc
ljmp
jne
jne
xchg
scas
hlt
push
movsb
and
add
add
pop
popf
inc
pop
imul
rcrl
fbstp
call
call
cli
mov
cmp
lods
and
fcomip
into
pop
enter
jle
add
scas
xchg
cmp
out
sub
aad
aam
push
movsl
test
sub
mov
lds
add
push
push
or
add
mov
inc
jnp
loope
jle
orb
sahf
dec
ficoml
xchg
clc
mov
mov
dec
loop
out
and
dec
xchg
insl
scas
push
mov
adc
roll
xchg
dec
mov
cmp
lock
jno
mov
les
gs
and
dec
xchg
add
lea
outsl
cmp
insl
mov
mov
mov
jmp
xchg
pop
mov
shlb
mov
push
xlat
jecxz
fbstp
data16
adc
and
mov
mov
ds
cmp
mov
loopne
call
sbb
sbb
out
xor
sti
out
push
pop
mov
sbb
push
jns
inc
setbe
add
mov
mov
fistpll
imul
lahf
add
popa
mov
arpl
lods
out
lods
nop
es
jno
test
adc
mov
cmp
stos
xlat
loopne
sub
xchg
arpl
std
cmp
lock
inc
imul
ja
lea
js
mov
in
cmpl
adc
xor
cli
sbb
lds
stos
out
and
or
mov
and
out
push
jae
test
sti
mov
push
movsb
or
lea
pop
mov
pop
inc
popf
lahf
mov
jg
adc
cmpsl
inc
aad
jecxz
xchg
cwtd
call
test
sahf
rcr
jge
sbb
push
xchg
test
cmp
pop
xor
je
rcll
jbe
push
pop
xor
inc
or
add
mov
cmpl
dec
aam
sbb
mov
push
xor
cmp
pop
inc
adc
pop
insl
js
in
xlat
pop
hlt
mov
dec
iret
jne
in
dec
pop
sbb
negl
add
pop
cmp
or
ja
pusha
add
stos
xchg
sbbb
cld
in
in
cmc
or
movsb
xor
push
add
sub
fadds
sbb
add
sbb
add
sub
sti
dec
cmc
adc
fsubrl
mov
lods
ljmp
jge
xor
inc
fwait
js
dec
xchg
aam
icebp
push
lret
faddl
or
dec
and
loopne
sbb
inc
imul
mov
xchg
ret
adc
xor
bswap
in
inc
lahf
out
sub
adc
leave
ljmp
jp
sub
cmp
jge
mov
dec
push
mov
outsb
jmp
inc
inc
xor
movl
test
daa
pop
add
push
and
jno
inc
aaa
cmc
sbb
outsl
mov
mov
xchg
cmp
stos
and
cs
iret
add
imul
push
adc
mov
leave
in
lahf
rcrb
sub
dec
arpl
decb
xchg
jne
roll
xchg
cmp
leave
das
xchg
test
dec
lods
jo
pop
inc
adcb
popa
and
lods
xorb
xor
fxch
mov
inc
lret
mov
cmpsb
call
lret
test
mov
icebp
push
sbb
adc
push
data16
jne
ds
das
pop
sub
rcrl
in
jecxz
inc
in
push
adc
lods
push
mov
and
and
push
mov
sub
mov
sbb
cmp
stos
inc
es
pop
mov
push
dec
inc
dec
sbb
xor
and
arpl
ret
dec
dec
mov
push
dec
cld
fs
mov
cmp
in
push
inc
leave
flds
ror
cmp
aaa
jb
int
clc
or
imul
test
es
in
repz
imul
les
push
mov
decl
and
in
push
push
repnz
and
ljmp
sub
fs
mov
lock
jnp
in
std
mov
inc
outsb
pop
inc
mov
sbb
xlat
inc
mov
mov
and
xchg
pop
ja
outsb
out
pop
mov
jl
and
scas
and
outsb
mov
add
jecxz
push
adc
pop
mov
imul
jb
xor
pop
inc
out
and
insb
jnp
test
cli
cltd
ss
sbbl
dec
cli
jae
cmp
fs
cmpsl
mov
dec
ficoms
add
test
xchg
sbb
mov
xor
xor
pop
ja
movsl
jo
inc
pop
mov
out
in
jmp
fmuls
cmp
sbb
clc
push
mov
and
movsl
inc
mov
mov
mov
push
inc
mov
js
sahf
xor
sub
add
sbb
call
hlt
pop
pop
outsl
sub
add
scas
cmpb
jns
insl
mul
cltd
sbb
sbb
and
sbb
add
aas
gs
shlb
inc
ja
xor
repnz
adcb
les
stos
pop
pop
mov
fsubrl
push
into
in
das
sub
inc
cwtl
dec
shrb
xchg
call
pop
pop
or
loope
sbb
in
push
mov
adc
jb
lcall
xchg
jp
mov
sti
xor
out
dec
in
mov
adc
push
mov
test
ret
push
pop
nop
lock
lock
jecxz
jg
movsl
mov
push
add
das
lea
lret
pop
test
aad
repz
cld
jge
jbe
mov
arpl
add
ja
sub
mov
test
push
hlt
pop
je
ret
jb
iret
and
ret
sbbl
sbb
xchg
shr
inc
cmp
in
push
dec
mov
cmp
adc
nop
or
and
inc
int3
imulb
push
pushf
aaa
sbb
stc
add
fs
inc
xlat
mov
js
or
or
clc
and
insl
jb
fbstp
bound
jg
xor
stc
es
mov
cmp
add
jg
fnstsw
jno
in
dec
push
add
sahf
scas
ret
movb
or
mov
repz
mov
lret
mov
arpl
ja
mov
mov
pop
sub
sbb
mov
or
cmp
sub
cmp
pop
shrb
fcomps
pusha
sub
and
inc
icebp
mov
adcl
mov
cmp
and
push
pop
imul
lret
xchg
dec
dec
inc
ret
insl
addl
and
out
xor
or
and
push
ja
cltd
into
dec
daa
add
sarl
jae
sti
jecxz
cmp
lds
imul
mov
cli
scas
mov
in
mov
inc
and
ja
rcll
loop
push
cmp
fisubl
cmp
fildl
lret
fidivrs
xchg
push
out
jo
nop
jg
int
push
out
or
push
jle
mov
xchg
pop
int
cmp
push
add
pushf
faddl
mov
and
cwtl
push
or
xchg
lods
bound
pop
popa
mov
je
and
test
add
adc
dec
std
adc
push
push
xchg
std
push
insb
and
sahf
subb
adc
sub
xor
mov
jb
xchg
in
mov
add
imul
out
ficoms
pop
sti
aam
push
das
nop
cmp
dec
sub
stc
sub
dec
std
hlt
shlb
shll
orb
pop
mov
jle
mov
int
fucompp
jmp
mov
iret
ljmp
xchg
imul
stos
data16
mov
sbb
outsb
fiaddl
jno
fsub
jno
or
fidivl
in
pop
mov
fwait
jbe
inc
leave
fidivrs
aad
inc
pushf
jne
divl
fs
cld
sti
add
popf
popf
mov
fsts
push
dec
xchg
mov
or
test
inc
pop
push
mov
movsl
sahf
ljmp
test
test
adc
xchg
std
imul
pop
and
jg
fbld
imul
dec
mov
movsb
xchg
xor
insb
imul
cmpsb
adcb
or
pop
iret
les
cmp
mov
push
sbb
add
push
shl
out
jmp
push
sub
repnz
sub
or
andl
out
sbb
int
mov
fisubrl
fimuls
scas
jge
add
push
cmp
push
clc
movsb
incb
stc
popa
mov
aad
in
inc
cld
bound
popa
lret
popa
stos
inc
and
out
test
sti
test
cld
lods
pop
outsl
cmc
push
test
das
dec
dec
pop
les
xchg
clc
pop
sbb
popa
fcoms
lret
dec
push
sub
mov
stos
push
je
dec
leave
jae
lea
call
jnp
inc
push
arpl
cmpsl
loop
jnp
push
add
push
jo
jle
xchg
or
nop
cmp
jo
inc
mov
hlt
pop
sub
inc
sub
mov
cs
pop
out
sub
push
sahf
mov
cli
lods
int3
sbb
inc
test
or
sbb
repz
mov
lods
jmp
test
mov
add
test
mov
inc
xchg
mov
jns
ljmp
les
testl
mov
lds
dec
mov
out
push
mov
adc
xor
push
xlat
insb
mov
cs
sbb
repnz
xchg
jnp
data16
inc
mov
add
pusha
sub
lret
mov
pop
cmp
popa
push
loope
mov
mov
mov
adc
jnp
inc
inc
test
ret
inc
xchg
repz
and
xchg
outsl
movups
dec
sbb
xor
and
mov
out
aam
jp
lock
jmp
mov
fwait
mov
andl
jb
or
push
xor
or
adc
or
popf
mov
xchg
and
imul
xor
xor
aad
push
or
cli
sbb
xor
adc
mov
mov
adc
mov
fdivl
ficompl
mov
and
int
sbb
cltd
inc
cmp
jne
outsb
scas
aam
mov
dec
jmp
sbb
xlat
xlat
jnp
pop
sbb
pop
xchg
imul
push
hlt
pop
lock
fs
insl
rcl
push
jne
or
sbb
ucomiss
mov
sahf
fs
push
dec
push
insl
iret
sub
sbb
pop
cmpsl
lret
scas
push
add
hlt
mov
jle
dec
iret
nop
enter
adc
and
out
mov
lea
fnstsw
mov
hlt
mov
dec
jl
cli
movsl
mov
dec
lret
jne
mov
xchg
jmp
jns
fs
or
lahf
inc
es
nop
pop
lret
pop
and
aas
shl
testb
ret
out
int3
mov
pushf
icebp
je
gs
mov
push
call
and
xor
int3
adc
cli
pop
push
rorl
add
mov
sbb
aad
aaa
mov
test
add
xchg
jno
add
xchg
lock
mov
cmpsb
mov
xchg
adc
inc
pop
pop
shll
aad
dec
test
sub
loopne
dec
cmpsb
sub
ss
mov
sbb
dec
das
jno
pop
rcl
xor
rcrb
inc
pop
rcrl
inc
mov
pop
push
push
ret
imul
movb
push
dec
add
sbb
jne
xor
xchg
andl
mov
mov
lea
mov
push
xor
in
pop
push
push
push
xchg
xchg
jnp
fldcw
mov
xor
shrb
adc
lret
sbb
shrb
cld
xor
fs
adc
int
jne
pop
aad
push
and
scas
mov
fbld
xor
nop
pop
lds
negl
cmp
adc
mov
jne
test
andl
jmp
mov
iret
sub
dec
orb
sub
sbb
mov
cmp
js
cmpsb
lahf
xchg
xchg
inc
mov
dec
je
pop
and
pop
and
and
loopne
mov
loopne
pop
pop
out
imul
out
xchg
inc
fstl
and
inc
mov
ljmp
mov
rcll
repnz
clc
mov
xchg
cmp
xor
mov
xlat
xchg
movsl
insl
xor
imul
or
mov
iret
lret
dec
or
push
sbb
out
in
ja
sub
mov
or
or
cmpsl
xor
add
sbb
test
pop
sub
jo
push
mov
mov
loopne
addr16
and
or
loopne
mov
shll
leave
jno
add
lahf
mov
push
addr16
pop
dec
pushf
in
hlt
lcall
or
jg
aam
and
leave
jmp
in
dec
sbb
insl
xchg
push
pop
pop
adc
and
mov
loopne
mov
out
jp
mov
popl
mov
and
inc
in
mov
or
fdivrl
push
cli
fsubl
dec
fdivrl
xlat
mov
dec
loope
mov
pop
cltd
pop
xor
cwtl
movsl
mov
adc
mov
xorb
mov
push
mov
lods
or
mov
hlt
jb
sub
push
jmp
rcrb
xor
test
int3
arpl
jbe
repnz
dec
lds
jge
fisubrs
test
pop
es
and
out
enter
mov
or
adc
add
shrl
pop
inc
dec
pop
scas
dec
mov
adc
test
jp
testl
hlt
pop
adc
mov
pushf
cwtl
add
fstl
jp
ds
xor
push
inc
ds
sbb
jmp
push
orb
outsb
jo
adc
iret
xchg
mov
imul
or
adc
ljmp
xor
mov
ret
stos
dec
xor
push
push
iret
push
fcomps
and
inc
or
cmp
xchg
aaa
xlat
testb
loope
popa
mov
pop
pop
add
pop
popf
pop
in
xlat
mov
enter
xchg
jp
mov
and
cmp
pop
inc
in
mov
icebp
fisubrs
in
ds
xchg
clc
dec
cltd
out
xor
cld
push
sti
inc
repnz
cmp
sub
scas
push
adc
ret
push
jmp
movsl
mov
ss
sbb
jno
ljmp
mov
xor
push
xchg
mov
mov
loopne
sub
inc
lds
and
loopne
add
lds
sub
jnp
mov
mov
lods
and
xadd
push
or
cmp
inc
and
filds
mull
clc
xor
fimuls
jbe
and
or
sub
enter
jne
adc
mov
cs
ljmp
out
add
lods
xor
sbb
pop
ja
adc
test
push
lock
cli
jo
add
arpl
fstpt
lock
mov
pop
arpl
hlt
push
mov
pop
mov
cmc
xchg
test
movsb
pop
sub
cmc
decl
repz
sub
jl
inc
gs
pop
cmpsb
ja
sbb
jge
jge
or
jo
xchg
lea
lods
int
int3
push
pop
cpuid
lea
daa
enter
cmpsb
subb
scas
and
out
dec
call
jp
je
inc
bound
push
cmpsl
mov
inc
lcall
fistpll
fwait
push
or
xor
inc
pop
cmpsb
lret
adc
cmc
in
cwtl
push
pop
daa
adc
mov
xchg
imul
mov
stc
xor
out
fildl
xor
jnp
clc
and
pop
pop
sbb
mov
bnd
dec
insb
cs
lock
stc
cmp
cld
clc
aas
sbb
sbb
orl
aas
gs
and
mov
aaa
repnz
mov
enter
out
popa
jnp
sti
out
xor
aaa
mov
fmul
cmpsb
into
bound
movsl
mov
sbb
xchg
jae
xchg
decl
xor
fcmovbe
fs
and
scas
inc
adc
ds
and
rolb
maskmovq
notl
aam
hlt
lods
or
ror
popl
mov
sbb
out
sbb
push
jg
mov
pusha
je
cwtl
xchg
scas
kmovw
stc
dec
cmp
xlat
sub
out
lea
xchg
sbb
push
imul
mov
movsb
push
rcrb
outsb
outsl
mov
adc
xor
in
pop
or
cmpsb
loop
push
jmp
cmp
in
lock
popa
cwtl
fstpt
push
xlat
xor
pop
cs
popl
ja
pop
pop
inc
push
push
sub
sub
aam
cld
pop
inc
mov
cli
fcomip
cltd
mov
mov
fstpl
daa
clc
pop
rcrb
xor
movsb
sbb
cmc
faddl
dec
fildll
xchg
cwtl
pop
pop
test
inc
dec
insb
cmp
in
in
je
mov
lods
mov
add
jmp
xchg
mov
out
push
lret
ds
cs
pop
dec
aam
adc
pop
ror
pop
xorl
rcll
and
sbb
lret
mulb
sbb
les
push
jo
sbb
cmp
push
pusha
cwtl
fmul
repz
loop
xlat
jno
add
pop
and
std
or
mov
pop
sbb
xor
imul
mov
bound
push
popf
lds
dec
test
repnz
inc
sub
or
jp
ss
jne
test
jle
movsl
push
test
out
xlat
loope
dec
sarb
push
or
in
inc
repnz
rorb
mov
mov
ret
nop
jmp
cmpsb
mov
lahf
das
bound
and
ficoml
mov
dec
sub
insb
stos
pusha
mov
xor
and
mov
insl
stos
add
arpl
cmpb
push
inc
push
adc
sub
and
call
sarb
les
adc
lahf
ret
pop
xchg
dec
lea
je
filds
pop
stos
es
cmpsb
dec
loope
dec
push
pop
mov
imul
adc
call
stos
ret
mov
push
dec
sbb
bound
cmc
jno
sti
sbb
int
imul
lods
and
xor
sahf
popa
cmc
lret
cltd
outsb
outsb
sub
mov
pop
mov
into
add
gs
push
or
jle
xchg
pusha
xchg
xchg
add
inc
jp
xchg
push
imull
mov
fidivs
inc
shlb
imul
mov
dec
ret
fxch
mov
xor
enter
daa
daa
adc
insb
inc
adc
adc
push
test
mov
testl
imul
pop
cmp
cmp
dec
or
mov
fildll
pushf
mov
gs
std
stc
xchg
xchg
clc
lods
pusha
cmc
jo
dec
popa
stc
cmp
pop
mov
xchg
xchg
or
call
lret
loope
scas
leave
jle
mov
rcrb
stc
sbb
jnp
notb
insb
push
adc
repnz
mov
jl
ret
jg
imul
lock
pop
pushf
sub
mov
mov
add
xor
adc
aam
cmp
lock
push
or
js
jg
inc
dec
pop
xchg
mov
je
pusha
pushaw
xchg
fdivr
cwtl
mov
cmp
dec
xchg
sub
mov
mov
add
cmpsl
sti
push
mov
xor
idivb
cmp
sti
inc
inc
ret
ss
mov
push
jno
clc
push
arpl
add
fldenv
in
je
aam
adc
ss
fsubrp
xlat
lods
fistpll
adc
adc
or
out
sub
js
mov
gs
sbb
popf
repz
sti
fdivr
test
mov
pop
loop
notb
cmpsb
repz
nop
adc
rorb
xchg
roll
rcrl
adc
movsl
sarl
add
imul
jle
dec
inc
adc
inc
ss
cmpsl
iret
pop
mov
scas
push
into
mov
add
dec
mov
sub
or
inc
dec
inc
xor
test
pop
rcll
xlat
mov
jle
push
or
inc
and
movsb
ljmp
inc
push
pop
cmpsl
sarl
fstp
mov
enter
nop
or
or
cmp
decl
iret
aad
pop
dec
or
ja
or
mov
outsl
sar
aam
repz
push
xchg
push
jbe
in
xchg
add
cmovne
std
cld
jge
mov
push
push
adc
scas
fs
or
lea
push
xchg
pushf
das
roll
mov
dec
jns
rol
pop
leave
stc
shll
jp
aas
and
out
movsl
mov
mov
pop
nop
in
rcrl
orl
mov
in
mov
dec
movsl
scas
or
out
and
aaa
inc
mov
mov
gs
int3
out
insl
inc
mov
mov
mov
cmpsl
data16
push
ja
in
mov
mov
cs
sbb
adc
adc
je
pop
or
or
rorb
ret
fsubrl
fldcw
jg
bound
xor
mov
fistl
pop
ret
stos
pop
xchg
mov
in
loope
cld
xchg
and
inc
dec
inc
or
repnz
stos
bound
xorb
int3
mov
push
add
adc
xchg
xor
jbe
adc
push
clc
cmpsl
mov
lock
sub
icebp
xchg
jmp
add
scas
mov
jl
ljmp
adcl
cmp
sbb
stos
repnz
andl
lods
mov
daa
and
jle
dec
xor
lods
or
ja
dec
pop
int
dec
xor
inc
imul
jecxz
push
int
lret
push
mov
sub
xor
mov
pop
mov
pop
mov
shrl
repz
fdivs
pop
call
push
or
jo
mov
jae
mov
mov
sub
pop
xchg
mov
mull
inc
loope
enter
hlt
ss
test
in
dec
sar
xchg
push
push
xchg
stos
rcr
outsb
clc
mov
shrl
fiaddl
pusha
xchg
sahf
icebp
std
repnz
scas
pop
sti
in
adc
rcrl
les
stc
les
fidivrl
jp
xchg
jl
js
shl
and
cmp
mov
imul
jge
sbb
add
fwait
cwtl
cmp
or
xor
xor
fsub
out
ljmp
nop
xchg
imul
mov
adc
jno
aad
cmpsb
inc
pop
cmp
and
mov
mov
pushf
fstpl
bound
sub
mov
mov
push
stos
jge,pt
or
scas
sbb
pushf
push
outsl
mov
adc
add
pop
inc
mov
out
sub
xchg
and
jo
xor
mov
mov
arpl
xor
sbb
test
fstpt
sbb
dec
fcom
jmp
dec
iret
nop
rorl
pop
push
xor
lock
mov
mov
cwtl
ret
push
lahf
mov
js
scas
or
arpl
dec
xor
imul
xor
jmp
repz
lahf
stos
into
bound
inc
rcll
xchg
pop
mov
mov
rol
adc
sbb
push
lods
adc
in
stc
push
shlb
jo
js
mov
jg
add
add
mov
jns
out
cmp
mov
mov
les
sbb
fisubrl
inc
and
inc
mov
pop
addb
adc
inc
mov
lods
cmp
mov
call
fiaddl
icebp
mov
adc
push
dec
popf
jae
sti
add
mov
jecxz
int3
in
in
mov
inc
push
jae
inc
mov
push
or
xor
icebp
adc
fwait
clc
loopne
enter
xor
pusha
jb
or
or
mov
out
push
and
mov
popa
add
inc
pop
movsl
sbb
add
push
xor
push
jle
cmp
cmp
pop
ret
mov
push
in
hlt
test
sub
adc
es
jnp
jo
xor
mull
incb
sbb
std
icebp
mov
adc
xor
add
and
and
add
dec
movsb
sbb
mov
jg
push
inc
jle
daa
inc
testb
rolb
mov
sbb
in
xor
add
bound
add
insl
lods
dec
pop
inc
stos
pop
pop
andb
orb
xchg
adc
shlb
out
jne
jg
sbb
mov
inc
inc
jmp
mov
add
pop
aad
test
mov
mov
adc
xchg
into
out
mov
aas
daa
into
pop
js
or
loope
xor
fistl
add
ret
fidivrl
shl
push
loope
dec
xchg
jmp
lock
fimuls
jnp
dec
jecxz
stos
or
orb
pop
hlt
inc
xchg
cmp
rcrl
mov
pop
mov
stos
jecxz
xor
pop
imul
mov
inc
lds
sbb
scas
xchg
cmpsb
test
fidivrl
nop
jl
repz
and
in
cwtl
je
mov
in
jnp
fisubs
out
and
int3
pop
leave
sahf
push
jp
rcr
outsl
stos
jmp
movsb
mov
mov
xchg
jle
push
adc
jecxz
frstor
imul
pop
and
scas
add
mov
outsb
dec
bound
and
lods
pop
push
push
xor
loopne
pushf
enter
ret
dec
adc
xchg
ss
mov
fmull
sub
pop
aad
push
fbld
sbb
and
mov
mov
cmp
inc
iret
inc
sub
cmp
mov
insl
or
mov
sub
fwait
stos
mov
jbe
scas
xor
test
or
shrl
arpl
loope
mov
fadd
pushf
dec
sahf
pop
and
add
xor
mov
or
jo
repnz
push
int
ljmp
sbb
sti
adc
nop
inc
adc
xor
xor
cwtl
and
sbb
push
jmp
xchg
js
out
icebp
cmpl
sahf
and
and
outsb
inc
rolb
cs
icebp
pop
enter
jle
mov
jae
stos
dec
and
test
sub
arpl
mov
in
or
adc
or
push
cmp
pop
inc
jge
aad
mov
mov
inc
test
jmp
ss
es
test
dec
call
xchg
clc
pop
xchg
inc
cltd
fistpll
mov
cmp
mov
mov
xor
xchg
inc
cmp
push
cmpsb
push
call
loop
out
outsl
mov
jo
xor
mov
stos
cmp
push
mov
cmpsl
xor
cmc
sbb
jmp
fucomi
sub
dec
int3
xchg
stos
cmp
aaa
rorl
subb
movsl
out
int
sbb
mov
push
sbb
xchg
push
adc
xchg
pop
inc
je
mov
scas
dec
insb
inc
pop
rcrb
int
cmpb
fsubl
aad
inc
sub
cmp
cmp
sbb
idiv
mov
aam
xchg
popa
test
jns
lcall
or
or
sbb
xlat
push
lret
fdivrs
stc
lret
test
mov
xchg
arpl
or
popf
mov
mov
sahf
and
dec
test
xlat
jne
mov
jmp
xorl
mov
xchg
dec
push
jae
pop
push
or
and
and
aad
adc
mov
sahf
lret
sub
fidivl
in
pop
mov
in
out
push
ret
cmc
sub
rolb
test
icebp
sub
stos
push
adc
lea
sbb
sarb
xor
into
xor
mov
pop
popf
movsl
pop
push
out
mov
movsb
sub
leave
mov
lahf
mov
cmp
dec
ret
scas
call
push
and
mov
movsb
loopne
pop
or
clc
jae
cwtl
adc
add
les
or
shrb
cmp
int3
daa
inc
std
loopne
push
jecxz
sahf
and
or
je
mov
int3
mov
and
lods
mov
mov
pop
arpl
sbb
jo
das
jbe
push
sbb
rep
lea
inc
lahf
cmp
popa
enter
in
mov
in
xchg
cmp
dec
in
cmp
loopne
sub
lds
dec
fstpt
add
icebp
mov
je
test
sub
cmp
add
popa
addr16
jne
xchg
sub
sub
cmp
sbb
xchg
sub
fs
in
adc
push
loop,pn
iret
insb
mov
dec
ja
fisubrl
inc
xchg
or
or
pusha
sub
in
add
jnp
and
pop
fldt
data16
fs
das
or
ret
insb
push
xor
jnp
out
mov
sbb
jo
stos
ficompl
xor
fsubs
in
int
je
lods
aaa
popf
in
enter
imull
jg
dec
dec
test
cmc
push
fstl
and
push
pop
inc
fisubs
cmpsb
icebp
mov
lds
mov
add
add
and
xor
xor
inc
sbb
mov
jmp
scas
mov
push
scas
push
je
xor
test
and
movsb
rcrb
je
aaa
fbstp
lret
hlt
aad
lods
pop
lds
inc
mov
cmp
push
sbb
je
xchg
cs
in
pop
out
mov
in
ret
dec
dec
sbb
adc
icebp
es
rcll
xchg
mov
rcll
imul
aam
imul
outsl
dec
and
cld
push
inc
es
xchg
add
pop
leave
mov
push
js
das
into
sub
inc
mov
or
ror
xor
xchg
push
jb
fs
xchg
jle
fdivrs
dec
adc
adc
out
and
fnstenv
rclb
out
dec
adc
xchg
stos
mov
dec
mov
mov
cmc
mov
mov
mov
sbb
cmp
adc
mov
jg
fisubs
jmp
int3
andl
xchg
outsl
push
fdivr
insb
in
arpl
and
and
in
div
mov
mov
add
in
inc
inc
mov
lods
sahf
nop
call
pushf
mov
cmpsl
mov
sub
push
clc
jmp
movsb
mov
add
mov
lods
fistpl
leave
arpl
sarl
push
clc
jg
aad
aam
cmp
sti
mov
lods
negl
jae
repz
jmp
mov
cwtl
arpl
mov
add
pop
subb
js
mov
ss
scas
fbstp
dec
sbb
adc
sub
xchg
xchg
fisubs
es
ds
test
jns
sub
and
push
dec
mov
cld
pop
shll
xchg
pusha
sbb
xchg
cmp
ret
loope
mov
sub
mov
pop
pop
rclb
xchg
stos
adc
ljmp
adc
mov
adc
inc
xlat
jle
scas
out
and
jnp
mov
jge
xchg
repnz
push
xlat
mov
pop
mov
mov
inc
icebp
xorl
idivb
xchg
subl
xor
int
dec
out
sub
mov
inc
xor
dec
fs
mov
dec
ljmp
bound
arpl
ss
mov
insb
mov
es
or
sub
lea
push
sbb
test
fstl
sahf
or
jp
sbb
mov
insb
jecxz
dec
outsl
and
xchg
aad
pop
mov
sub
lock
ror
jmp
mov
in
and
and
mov
jge
dec
xor
mov
add
push
movsb
sahf
out
out
add
mov
jge
std
insl
fcoms
or
pop
test
xor
push
jle
and
rorl
adc
jecxz
sahf
xor
jb
testl
and
movsb
imul
push
insl
sbb
and
rolb
pusha
test
dec
sbb
sub
or
cld
bnd
mov
cmc
int3
cmpsl
cmp
movb
aas
adc
mov
lahf
mov
mov
mov
xchg
adc
sbb
in
or
enter
cmc
mov
or
push
adc
push
and
push
adcl
cmpsb
in
mov
mov
stc
mov
in
mov
loope
leave
test
roll
pop
pop
les
cmp
out
mov
fsubl
mov
jmp
pop
gs
loope
bound
repz
popa
mov
mov
test
popa
jne
imul
arpl
icebp
lcall
mov
rcr
xor
cli
jmp
mov
inc
and
or
jae
dec
xchg
mov
jbe
pop
dec
in
xchg
and
pushw
jecxz
mov
mov
inc
adc
mov
push
dec
xor
mov
in
dec
cmp
out
test
rep
fdivl
testl
aad
xor
cmpsb
das
out
mov
cmp
pop
je
cmp
cmc
xor
push
aam
jns
xchg
adc
out
xor
repnz
outsl
int3
inc
pop
repnz
cmp
add
insb
leave
test
push
or
data16
xor
jl
out
jns
outsb
cmp
inc
cmp
or
sbb
jno
add
jbe
push
cmp
or
mov
and
adc
inc
lds
xor
adc
divl
js
test
sbb
push
int3
nop
mov
and
fistpll
insl
inc
scas
add
dec
sti
dec
test
lahf
in
hlt
daa
les
insb
je
add
out
subb
pop
and
mov
jne
repnz
xchg
jmp
push
aam
js
cmc
ss
int3
sub
jae
stc
imul
mov
mov
mov
sbb
mov
pop
js
fnstenv
dec
ficoml
in
dec
bound
int3
dec
push
xchg
mov
lods
je
cs
xor
push
js
lods
rcll
or
adc
or
repnz
mov
stos
pop
pop
mov
cmc
mov
sbb
stc
adc
cmp
sub
jne
push
ficomps
popa
movsb
jbe
jge
or
ds
sbbb
dec
stos
loopne
inc
push
movsb
push
ret
mov
mov
mov
or
xor
xor
imul
in
xor
into
mov
xchg
or
outsl
inc
inc
and
pushf
jl
in
push
sti
push
fs
fs
inc
push
jns
jbe
in
pop
mov
pop
gs
rcrb
decl
jbe
add
lods
imul
jb
pop
cmc
or
pushf
cs
inc
push
add
in
mov
mov
sbb
scas
jno
sub
and
mov
sub
sbb
mov
lods
mov
loop
shr
xchg
in
xchg
xchg
adc
punpckldq
xor
and
psllq
lahf
ss
lahf
test
jae
sub
inc
add
insb
stc
test
in
lods
sub
jbe
push
sbb
pop
sbb
cwtl
mov
mov
mov
in
push
jae
lock
jle
dec
inc
adc
cmp
pop
cmpb
adc
scas
and
out
sbb
lret
lock
sub
inc
xchg
dec
mov
aaa
mov
mov
fimull
sub
out
push
jecxz
and
dec
jnp
sbb
loope
cs
popf
dec
mov
or
mov
xchg
sub
daa
mov
mov
cmp
lods
imul
jbe
ja
rcrl
adcb
xlat
addb
pop
shrb
mov
std
fstpl
lret
mov
loope
in
incb
and
xchg
mov
mov
adc
inc
jmp
push
out
jge
and
jle
sti
adc
mov
push
movsl
je
inc
inc
test
xor
pop
mov
or
sbb
stc
dec
sub
in
add
xchg
flds
push
jmp
pop
mov
or
dec
inc
scas
mov
xchg
dec
sbb
jecxz
jb
sub
sahf
push
in
dec
scas
leave
cmp
dec
xchg
jg
loope
js
jmp
xor
outsl
dec
sbb
pop
loop
je
and
mov
mov
fcmovnu
test
pop
das
jle
fidivs
inc
mov
jecxz
cmp
sbbl
jb
leave
arpl
pop
shll
cwtl
push
daa
out
xchg
int
lret
or
cmpsb
adcb
fwait
gs
clc
insl
mull
dec
fsubrl
sbb
xor
pop
cltd
shl
mov
dec
lds
rorb
sub
cmpsl
imul
testl
std
lock
and
call
sub
mov
repz
ja
jno
je
repz
mov
and
xor
add
test
mov
les
cmp
sub
mov
xchg
xor
inc
sub
test
push
mov
jmp
lock
test
mov
int3
cmp
jno
rcl
inc
cwtl
mov
rolb
cmp
leave
ja
test
add
imul
pop
add
cmp
movsl
and
xchg
sahf
sub
mov
fnsave
and
lret
hlt
stos
xorl
clc
xor
sub
push
pop
mov
sarl
cltd
rcll
int3
push
jnp
cld
fdivl
in
test
int3
fstp
inc
adc
push
fcmovnb
data16
sti
cltd
cmp
sbb
pop
dec
popa
add
sbb
fs
dec
je
sbb
aaa
je
or
inc
add
dec
jbe
xchg
jnp
xor
lods
cmpl
cwtl
xchg
test
ficompl
push
out
cs
mov
shrb
jge
ja
pop
in
sti
push
data16
pop
jnp
cmp
adc
pop
mov
loope
mov
sbb
sub
rcll
cltd
xor
ja
jo
fwait
movsb
icebp
dec
lahf
gs
scas
push
push
std
push
rcll
data16
add
cmc
movsl
xchg
repnz
outsb
nop
orb
adc
in
and
fldt
adc
loop
mov
aaa
ss
lret
cltd
ret
addr16
neg
pop
stc
add
mov
hlt
cmp
mov
or
xor
jl
ficomps
test
movb
mov
inc
xchg
hlt
or
outsl
cmc
daa
and
lcall
into
mov
dec
repz
lea
pop
adc
lret
mov
jl
sub
movntps
ret
or
hlt
mov
mov
cmp
jg
hlt
sahf
mov
adc
jb
and
movsb
add
nop
inc
cwtl
insb
cli
xor
mov
movsl
and
shl
mov
jb
sub
inc
stos
adc
repz
mov
inc
lock
add
lret
lds
mov
add
pop
ret
mov
jbe
jecxz
xchg
jge
mov
lods
xor
mov
mov
ljmp
dec
stos
fmulp
sahf
call
xchg
mov
mov
push
and
cmp
push
nop
or
sub
sbb
bound
cmp
mov
jns
inc
in
and
inc
subl
or
lods
jmp
sbbb
pop
or
xchg
jle
fistpll
std
pop
xchg
cwtl
adc
xchg
lcall
xor
test
mov
fwait
mov
inc
cmc
xchg
lret
mov
xlat
bound
mov
popf
pop
testl
mov
mov
jno
or
dec
or
xchg
and
xor
fwait
shrb
loope
jne
cmpsl
add
adc
mov
adc
inc
lret
movsb
dec
rorl
mov
jg
movsl
loope
jns
inc
mov
into
imull
lcall
push
cmp
pushl
shlb
sarl
push
imul
imul
cltd
les
insb
mov
xchg
cltd
cmp
inc
add
lret
fidivl
mov
lret
add
adc
jmp
dec
enter
dec
add
lods
or
movsl
jns
add
ret
mov
push
out
pop
push
or
adc
out
lods
pop
push
outsb
outsl
or
dec
lret
test
dec
xchg
je
mov
in
dec
xchg
mov
pop
into
outsb
fwait
pusha
xchg
cmp
xor
inc
fdivl
or
jmp
and
push
test
pop
jbe
popf
cld
aaa
and
sbb
pop
and
push
mov
sub
inc
movsb
jns
cmpsb
lods
mov
js
outsl
aaa
mov
mov
cli
fsubr
pop
xor
xchg
movsb
lea
mov
sbb
mov
jmp
jae
je
pop
mov
icebp
xlat
push
pushf
xchg
pop
daa
pop
pop
sub
enter
ret
push
fs
xlat
sub
clc
das
insb
stos
inc
cltd
sbb
scas
jns
mov
mov
add
cmp
and
and
jbe
je
push
shll
and
in
aam
lds
inc
push
loop
xor
push
mov
dec
jl
mov
ret
mov
stos
loop
popf
and
inc
pop
jns
icebp
pop
inc
fcmovbe
mov
into
push
loopne
lds
mov
sub
fbld
leave
call
cmp
push
sub
jg
mov
shll
call
aaa
adc
aaa
dec
lcall
xlat
adcb
shl
sbb
mov
push
xor
leave
jmp
fstl
mov
jecxz
inc
mov
jmp
data16
adc
push
jbe
daa
jl
adc
pop
scas
push
mov
sbb
std
out
push
subl
push
pop
add
push
jns
jmp
lods
mov
hlt
xchg
mov
stos
fcmovbe
gs
dec
cld
push
call
xlat
lret
sub
movsb
ret
adc
dec
outsb
test
push
mov
dec
repz
mov
orb
lar
dec
xor
cmpsb
mov
je
in
js
inc
enter
push
mov
sub
test
and
push
push
and
loope
pop
push
mov
add
or
jnp
mov
xchg
ret
in
jge
push
pop
and
scas
adc
fwait
mov
push
dec
push
popa
inc
push
sahf
or
and
in
and
loope
stos
outsb
es
push
xlat
mov
movsb
sbb
in
mov
out
cmp
mov
fs
testb
push
cld
sub
cltd
adc
pop
testl
xchg
sub
ja
push
sti
popa
mov
jae
mov
daa
cmp
movsb
jp
fsubs
ficoms
cld
in
sahf
dec
enter
or
arpl
jge
xchg
popf
js
in
decl
inc
in
rcr
imul
enter
sub
xchg
fisubrs
jb
or
cs
and
xorb
roll
jl
xchg
push
mov
mov
repnz
ljmp
sub
push
add
mov
xchg
ja
fbld
ss
mov
imul
xchg
mov
jb
xchg
jmp
inc
push
sub
xor
aas
ljmp
pop
fnstenv
xchg
xchg
in
xchg
fisubrs
notl
lods
sti
pop
scas
mov
loopne
scas
iret
inc
hlt
ljmp
cmpl
pop
nop
imul
mov
inc
aam
insl
or
xchg
xor
outsl
outsb
sub
lds
pop
gs
mov
mov
clc
mov
icebp
lods
stos
cmp
ret
mov
xor
stos
jle
dec
test
imul
cmp
in
ja
scas
iret
ror
iret
ljmp
pop
subb
xor
mov
dec
cltd
aaa
inc
insl
incl
insl
xor
adc
pop
int
test
mov
lock
jae
insl
push
pop
mov
divb
sub
pop
pop
mov
dec
xchg
xor
aaa
ss
scas
inc
mov
aam
mov
cmp
subb
mov
mov
mov
jge
pop
inc
shll
fisubrl
lret
inc
dec
mov
clc
and
mov
imul
imul
sbb
dec
pop
or
xchg
pop
lods
ds
sub
jp
loop
and
adc
or
mov
mov
aas
js
inc
jmp
mov
jne
inc
popf
ficomps
mov
mov
sub
mov
insb
and
cmp
aam
xchg
xor
das
addr16
test
aas
mov
ss
fdivs
lds
lock
cltd
insl
and
adc
daa
testb
jno
add
adc
adcl
adc
mov
sub
clc
stc
ds
fmul
xchg
out
add
aas
js
scas
stos
mov
fdivl
cld
lcall
rorl
inc
push
gs
nop
cmpsl
mov
test
in
fnsaves
push
and
loop
decb
sbb
dec
sbb
ds
lods
inc
fsubs
cld
lds
mov
icebp
test
into
sbb
inc
fldl
jge
adc
cmp
jnp
ss
and
xchg
cltd
lods
andb
mov
jae
add
and
mov
clc
test
cmp
cld
inc
pop
mov
insl
or
push
adc
stos
push
adc
dec
insb
inc
add
ss
and
shll
lcall
idivb
cltd
in
hlt
xor
or
lods
inc
iret
rorl
jmp
mov
pop
in
sti
and
jbe
out
xchg
icebp
cmpsb
mov
mov
rcr
adc
mov
aaa
movsl
push
dec
add
ja
mov
xchg
stc
into
cmp
push
aam
cmpsl
loop
push
fidivl
xchg
es
in
lcall
mov
inc
clc
add
aaa
popa
lahf
aam
inc
addr16
or
cmpsb
aam
popa
icebp
xor
adc
jo
xchg
je
cmp
add
xor
sbb
jae
xor
outsb
insl
dec
xchg
stc
cmc
das
inc
xlat
push
inc
and
stc
pop
and
push
dec
mov
sub
mov
lods
sti
repnz
jne
aas
cmc
lret
stos
rorl
test
jns
lock
fs
cmp
xor
daa
push
in
dec
mov
mov
test
les
add
mov
enter
dec
movl
in
outsb
bound
jl
das
in
lret
adc
and
stc
lret
push
ss
jo
push
xchg
cmp
dec
loope
leave
add
pop
fmuls
loop
rcrb
scas
pop
pushf
push
or
js
and
or
mov
mov
ret
aas
popa
dec
fs
jb
xor
push
aas
mov
sub
mov
pop
addr16
inc
fistpl
scas
imul
shll
or
pusha
aad
insb
insl
and
dec
mov
jecxz
jmp
mov
push
sub
jae
xchg
out
fnstcw
fidivrs
enter
mov
shl
adc
cmpsl
pop
orb
insl
lock
ljmp
lods
add
jns
addr16
push
cmp
mov
push
push
add
fwait
mov
out
shr
pop
xor
sahf
mov
lahf
fmuls
loop
xchg
lret
fisttps
into
cmc
subl
daa
das
in
lods
pop
daa
out
movsb
cli
and
adc
loope
cmpl
mov
sbbb
mov
stc
sub
rorb
addb
gs
arpl
subb
and
sub
mov
push
mov
icebp
lret
dec
mov
fldt
loope
jmp
cli
xchg
pop
push
mov
mov
out
sbbl
test
inc
ljmp
xchg
push
stos
mull
sbb
repnz
nop
ja
ds
dec
jne
movsb
dec
mov
dec
je
inc
cmp
cltd
jnp
mov
movsb
xor
arpl
rcrb
dec
pop
push
loopne
or
jmp
or
iret
shrb
add
hlt
jecxz
jae
mov
mov
pop
cmc
arpl
and
test
dec
pop
in
xor
test
out
int3
stos
push
aas
js
adc
mov
xchg
pusha
loopne
cmp
imul
mov
int
lods
xchg
jbe
leave
pusha
add
scas
push
loop
rcrl
fdivl
jl
and
jge
nop
lock
jecxz
fildll
fstl
lret
mov
xor
addr16
jmp
lods
inc
dec
popa
mov
pushf
daa
loopne
cli
add
test
sbb
jmp
mov
mov
into
je
cmp
pop
bound
shll
push
jbe
lods
movsl
mov
hlt
ret
xchg
cltd
cmp
and
jmp
test
sub
repz
repnz
inc
adc
orl
mov
push
and
cmp
xchg
mov
add
shll
cltd
jns
lret
push
ljmp
pop
xchg
ss
or
dec
mov
clc
cmc
mov
mov
fwait
push
insb
cmp
mov
cld
repz
xchg
leave
pusha
mul
mov
in
enter
adc
cli
pop
add
ja
add
mov
clc
les
std
rolb
ja
jge
iret
fs
aas
cmp
mov
mov
sub
je
fdivrs
pushf
rorb
cmp
jmp
pop
adc
fisttpl
mov
js
cld
dec
mov
xchg
fs
enter
arpl
es
jp
pop
decl
dec
mov
dec
sbb
mov
out
inc
popa
lock
mov
jg
mov
add
lcall
mov
cmp
sti
mov
out
push
mov
sar
or
into
arpl
je
je
adc
jl
push
and
xchg
test
cmpsb
rcll
fistpll
mov
xor
hlt
and
sub
jae
jp
adc
jg
aaa
add
shrl
add
dec
xor
fwait
ljmp
inc
pusha
stos
xor
xor
push
add
push
lods
dec
scas
js
lcall
outsl
enter
bound
or
lcall
xchg
test
jle
insl
ss
xchg
call
mov
add
fs
mov
and
pop
in
dec
daa
jno
mov
icebp
fstps
xor
mov
bound
popa
repz
rolb
and
push
add
pop
in
add
sti
xchg
movsb
add
jbe
inc
sbb
iret
dec
push
mov
shll
cmp
add
aam
lock
sarb
fs
nop
cmc
push
leave
loop
shrb
mov
mov
push
in
ret
rcrb
mov
push
push
clc
sahf
jae
imul
mov
jbe
mov
mov
inc
sbb
lock
sbb
dec
cmp
push
and
rclb
lahf
mov
jno
mov
cmpsl
hlt
mov
adcl
pop
mulb
adc
stc
adc
or
lret
out
lock
popf
imul
dec
and
cwtl
sub
fldenv
js
jmp
movsl
add
adc
outsl
cmpsb
pushl
or
inc
shlb
cmp
pop
fistpl
rcll
mov
test
adc
int3
fisttps
inc
pusha
mov
pop
pop
mov
cmp
inc
incl
sbb
in
fstpl
mov
adc
lcall
push
mov
cmp
out
pop
push
or
xchg
rcrl
insl
shll
data16
dec
inc
pop
scas
xchg
outsb
add
int
cmp
lahf
lret
jb
out
adc
dec
mov
cmp
inc
fwait
in
xor
pop
leave
pop
lret
movsl
add
mov
rclb
sti
movsb
shr
jo
enter
cmpsl
adc
mov
std
adc
clc
popf
addr16
jmp
shl
xchg
fs
ret
dec
sar
xchg
std
fwait
lock
lea
xchg
push
sbb
packssdw
iret
xor
out
mov
inc
out
lds
dec
jle
sbb
push
sbb
push
mov
cld
repz
jg
xor
in
lea
shlb
cld
divl
gs
adc
insb
addl
push
aad
jg
xchg
movsl
inc
push
and
jl
xchg
or
fs
mov
jo
mov
mov
mov
imul
aaa
xor
sahf
test
xor
fiaddl
scas
sbb
cltd
fists
movb
dec
mov
daa
pop
xchg
cmp
mov
into
hlt
or
shll
aaa
add
jbe
dec
cld
cmp
jnp,pt
loope
jno
gs
add
ljmp
xor
mov
es
push
aaa
and
pop
jno
shlb
popf
jb
shlb
add
mov
fadds
sub
popf
outsb
adc
cmpsl
adc
lock
xor
cmp
leave
out
cmp
cltd
daa
mov
sbb
insb
int3
daa
shlb
jmp
push
xchg
jb
pop
jo
mov
jnp
cmp
bound
mov
negl
addb
cld
dec
sub
leave
or
jmp
fldenv
mov
icebp
outsb
les
dec
test
jne
dec
scas
lahf
cli
xchg
xlat
mov
aas
fidivs
cmp
in
jl
xor
push
hlt
std
arpl
insb
movsb
andb
shll
out
jno
rcl
lods
sub
pop
xor
shl
sub
sub
test
ljmp
aam
xor
in
inc
into
sahf
fs
loop
dec
rcll
mov
mov
jno
inc
mov
jmp
mov
pop
sbb
xchg
lock
int
xor
das
xchg
cli
push
fs
cwtl
mov
movsl
xchg
mov
mov
jecxz
test
call
pop
out
popa
je
rcl
lcall
pop
and
jns
jmp
mov
sub
mov
jno
cmp
jl
jge
out
or
xorb
es
addr16
adc
mov
push
cwtl
xchg
push
push
pop
cmc
cmp
cmp
add
mov
lock
add
lock
cld
mov
mov
insb
xor
cmp
inc
cwtl
cmc
out
icebp
cwtl
fisttpll
pop
xlat
rorl
out
mov
cld
sub
pop
xchg
sbb
mov
jnp
sub
adc
mov
cs
je
es
in
push
pop
or
cmp
add
aas
icebp
adcl
jnp
icebp
and
daa
mov
scas
sub
shlb
pop
cmp
mov
push
inc
xor
imul
adc
outsb
adc
pop
scas
sti
or
push
sbb
cmp
mov
adc
jnp
sbb
or
jae
js
repz
loopne
test
sub
mov
push
in
shll
rolb
pop
adc
xchg
cs
lahf
cmp
es
pop
cli
add
inc
jae
pop
inc
mov
xchg
insb
dec
mov
push
into
add
lcall
sbb
push
nop
dec
lods
add
movsb
clc
sahf
in
mov
jmp
test
insl
test
mov
iret
add
outsb
bound
rolb
lods
pop
mov
loop
xchg
ja
sbb
jmp
or
mov
mov
out
push
lods
cmp
inc
pop
orb
pop
int
mov
pop
sub
repnz
iret
inc
loopne
add
push
sbb
cmpsl
jmp
leave
divl
inc
or
jns
mov
jmp
out
sbb
and
shrl
dec
mov
and
sbb
and
adc
jnp
cli
das
lds
lret
xchg
pop
push
mov
movsl
arpl
push
cs
cwtl
or
push
jecxz
insl
les
push
pop
lods
scas
pop
popa
and
push
xor
cmc
mov
mov
adc
sub
je
es
ret
mov
xor
pop
mov
ret
jmp
mov
test
pushf
std
sbb
mov
lea
mov
int
pop
push
adc
sbb
or
pop
sbbb
divb
psrlw
enter
add
and
mov
adc
or
rcll
std
or
lods
int
sub
mov
lret
insl
lods
mov
mov
daa
hlt
fsubrs
xor
sbbb
dec
mov
insb
popf
add
sub
add
imul
ret
push
popf
and
fstpl
dec
loope
mov
mov
jge
stos
push
xor
ficomps
clc
popa
js
mov
xchg
adc
xchg
mov
mov
push
jp
push
and
in
mov
out
stos
lcall
add
and
inc
sbb
jno
call
lret
flds
and
lahf
sarb
pop
lock
loopne
das
sahf
test
cmpsb
jno
xor
mov
sub
add
pushf
aam
cltd
lret
pushf
popf
push
add
push
test
push
pop
fld
sub
push
jmp
inc
inc
in
lods
xchg
sbbb
in
es
cmp
pop
xorb
lods
iret
xchg
rcr
cmp
adc
xchg
lds
shrl
mov
mov
dec
addr16
in
cmp
pop
outsl
mov
test
mov
pop
test
mov
gs
xchg
push
push
jo
adc
mov
popa
sub
in
sahf
mov
and
sbb
fwait
xchg
in
fildl
or
jmp
ret
insl
aaa
stc
mov
mov
test
shrl
cmpsl
xor
inc
sbbb
cmp
push
or
ret
das
fsubs
dec
out
jge
les
mov
fisttps
int
mov
mov
mov
xor
mov
aaa
repnz
push
push
gs
daa
add
mov
jo
jecxz
les
jl
lcall
jo
cld
aad
xchg
hlt
xorb
mov
xchg
scas
iret
repnz
repz
push
push
dec
mov
test
in
fcompl
mov
xlat
in
inc
mov
inc
stos
popf
inc
ja
add
leave
sarl
xchg
or
ja
clc
xchg
ja
call
loopne
aaa
xorb
mov
add
or
push
sbb
flds
adc
jecxz
aaa
xchg
lcall
cltd
stos
mov
or
std
cmp
ljmp
xor
jge
arpl
sti
sahf
outsl
in
mov
cs
es
scas
jge
test
lcall
scas
xchg
jg
je
lahf
and
cmpsb
test
gs
fcomps
or
out
out
negb
sub
dec
jns
testl
mov
or
jp
int3
or
inc
inc
loope
dec
out
hlt
lret
insb
push
dec
jo
mov
je
cltd
push
cmp
decl
sub
mov
shrb
cmp
mov
mov
and
test
bnd
test
lods
push
and
xor
fmul
push
xor
clc
lods
cmp
popf
push
or
lahf
xchg
sar
mov
mov
cmp
and
mov
dec
mov
addl
ret
sbb
xchg
sub
pop
dec
pop
mov
inc
enter
lods
adc
fldt
scas
insb
repz
mov
popa
adc
out
icebp
cmpl
mov
lahf
lahf
cltd
lea
push
sbb
mov
les
cmp
jl
aas
add
cwtl
ss
mov
mov
xor
out
xchg
leave
cltd
testb
fldl
sbb
adc
nop
cmp
cmp
cmp
dec
test
fbld
andb
xchg
jmp
test
mov
scas
dec
pop
lret
popa
in
lret
test
stos
jecxz
fsubl
sahf
negl
inc
jge
dec
loopne,pn
outsb
xor
call
mov
push
jbe
mov
push
adc
mov
lcall
enter
xlat
ja
hlt
adc
mov
mov
sbb
pop
insb
inc
xor
sub
mov
xchg
shrl
fstpl
adc
xor
adc
jae
sub
xchg
push
inc
xor
outsl
fs
inc
mov
mov
pop
adc
dec
rclb
cmpsb
mov
jns
subb
mov
xchg
inc
push
pop
clc
and
int3
lods
sub
scas
sbb
push
fildl
in
pusha
mov
mov
in
jecxz
ljmp
push
sarl
test
shr
cli
nop
aam
mov
stos
xor
sti
xchg
or
push
dec
adc
shr
lods
lret
stc
cmp
loopne
push
aas
pop
call
push
jl
jl
mov
cmp
fnsave
inc
scas
adc
xor
add
push
es
push
in
sub
shrl
cmpsb
repz
dec
cld
movsl
or
dec
mov
orl
mov
out
call
xor
mov
xor
repnz
test
sub
mov
test
lods
and
sbb
xchg
dec
sbb
jg
mov
mov
jae
xor
pop
into
ljmp
cmp
xor
aaa
xchg
push
push
repz
xor
hlt
adc
mov
fisttpl
sahf
js
jne
inc
jecxz
dec
stos
sbb
xchg
sarl
cmpsb
int3
inc
mov
push
jns
fsubr
aam
mov
jns
inc
movsl
shr
sti
shrl
addr16
pop
nop
xlat
testb
enter
add
adc
pop
xchg
je
mov
sbb
pop
loopne
lods
ljmp
imul
mov
movsl
dec
fcmovb
fisubl
repnz
inc
ret
xchg
stc
jbe
or
mov
dec
test
and
negb
mov
jecxz
nop
sbbl
cli
enter
outsl
clc
mov
ss
aam
mov
jo
mov
mov
in
xor
insb
int3
pop
rolb
arpl
ss
sub
testl
sbb
or
cmp
lods
pop
sub
inc
push
ret
repnz
sbb
fadd
jmp
jecxz
sar
sti
mov
or
movsl
dec
or
popf
adc
nop
stc
push
fs
jecxz,pt
push
push
lcall
hlt
movsl
xchg
inc
xchg
mov
es
pusha
xchg
jns
jle
sbb
sub
mov
hlt
out
xchg
push
inc
xchg
push
repz
inc
inc
mov
jl
push
xor
add
jo
mov
int
insb
inc
mov
and
jnp
shr
pop
inc
test
fdivrl
call
pop
std
lock
jp
xchg
arpl
int3
sbb
dec
popf
out
insb
in
mov
das
hlt
and
repnz
cmp
je
fidivrs
sbb
inc
dec
lds
push
sahf
adc
dec
jb
sahf
push
enter
ret
test
and
push
mov
aad
aas
sbb
fdivp
sbb
adc
mov
rclb
add
mov
popa
xor
mov
and
sub
cmp
jb
add
outsb
mov
mov
pop
js
call
testl
xlat
pusha
sub
outsb
inc
popf
sbb
jno
mov
sbb
stos
ds
jnp
jo
fists
fildl
icebp
clc
add
fnstenv
adc
lret
cwtl
mov
mov
push
push
call
out
mov
dec
cmp
push
sbb
mov
jge
adc
ror
sub
imul
sub
rcll
loope
jp
xor
sub
repnz
push
loope
dec
outsb
xor
js
nop
jnp
adc
cmp
insl
add
inc
fdivrl
sub
cmp
sub
push
in
rcrl
jge
clc
ret
pop
jnp
cmc
xchg
xchg
aaa
rclb
mov
jns
add
adc
sub
xor
cmp
push
mov
cmpsl
dec
push
icebp
sub
ret
or
xlat
cmp
jns
test
pshufw
jg
mov
add
ja
iret
and
into
dec
fs
lods
dec
xchg
lcall
mov
mov
gs
fnstenv
adc
inc
imul
jns
stc
inc
mov
xor
pop
cmpsl
mov
push
stos
fwait
int3
cmp
repz
test
push
icebp
xor
push
add
jnp
jmp
mov
stos
cs
xor
xchg
or
mov
inc
mov
dec
push
mov
add
mov
movsb
add
push
adc
jno
xchg
mov
xchg
or
inc
add
lea
sub
inc
mov
mov
cs
insb
mov
mov
ljmp
movsl
push
rcr
pop
cmp
push
push
aad
dec
dec
sub
jnp
or
sti
jp
divb
aas
repz
cmpsb
out
or
popa
jl
add
pop
push
jp
xor
xor
inc
lock
push
pop
inc
es
and
outsb
sbb
jmp
push
adc
cmp
cwtl
dec
out
push
mov
daa
movsl
scas
jb
ret
lahf
std
mov
xchg
sub
sbb
sub
or
clc
je
mov
mov
testl
push
push
xor
dec
inc
in
xchg
push
push
push
out
clc
rolb
jl
add
sahf
movsb
shlb
ret
and
sbb
aad
mov
js
cmp
dec
push
jnp
shlb
xchg
sbb
or
push
fistpll
jns
fdivs
cmp
jnp
fstpl
cwtl
jne
jmp
push
jo
stos
cmp
mov
xlat
out
imul
sbb
js
cld
push
insl
jle
or
adc
in
enter
dec
adc
push
lods
inc
mov
les
sbb
aas
push
call
loop
ret
add
xchg
and
cmp
fcoms
cmp
mov
in
sub
adc
orb
jo
es
aad
jno
pop
xchg
xor
sbb
in
jge
shrl
cltd
sbb
push
mov
add
xor
pop
aas
ljmp
cmp
inc
test
in
imul
mov
or
jno
ds
mov
mov
fstpt
jo
das
push
fstpl
cld
sub
mov
das
jl
in
in
push
xchg
inc
cld
lods
sub
clc
inc
mov
adc
daa
lea
dec
cmp
dec
stos
push
rolb
sub
xchg
xor
rorb
and
lret
pusha
jl
js
ret
mov
pop
sahf
pop
scas
xchg
xchg
sub
stos
fisubl
test
cltd
mov
es
cmp
icebp
test
adc
pop
add
stos
stos
jbe
outsl
dec
popa
pop
xchg
pop
fimuls
aad
cmp
jl
enter
mov
mov
outsb
lods
adc
mov
xchg
sub
sti
popf
jae
daa
addr16
shlb
outsb
xorl
cmc
cli
mov
xchg
xchg
mov
std
sub
push
icebp
lcall
mov
roll
sbb
xor
mov
loop
lea
sbb
xlat
ljmp
gs
fsubl
rorl
out
movsb
into
mov
stos
lret
notb
add
or
mov
cltd
bnd
pusha
in
outsl
and
ss
aas
pop
sbb
in
jp
push
imul
scas
pop
aam
nop
pop
mov
fistps
fwait
dec
rolb
jne
outsb
nop
inc
shlb
lds
rorb
popf
imull
pop
repz
test
lret
test
mov
divb
cmp
mov
lret
in
imul
xor
jge
fcmovnbe
cli
test
sbb
or
pop
loop
jle
push
mov
jae
sbb
sti
cld
rol
or
mov
pop
rorl
test
stos
xchg
push
cmp
int3
cld
adc
and
and
mov
test
movsl
dec
adc
shr
xchg
fstpl
inc
mov
lock
push
xor
rcrl
adc
mov
std
rorl
loopne
mov
xor
enter
mov
lahf
popf
xchg
sub
xchg
xor
or
clc
cmp
in
pop
lds
cld
xor
jecxz
aaa
mov
jne
adc
ljmp
inc
imul
xor
shl
add
dec
xchg
jmp
test
jecxz
repz
sub
pop
and
mov
popf
into
pop
jb
adc
mov
mov
push
cmp
ja
arpl
movsb
dec
push
xor
shll
arpl
enter
xor
lods
fisubrs
sbb
mov
push
pop
js
mov
data16
cmp
sbb
xchg
ja
mov
push
shll
lods
arpl
jae
mov
adc
pop
addr16
addb
mov
mov
xor
cli
pop
loope
cmp
orb
cmpsl
and
in
scas
cmp
data16
sarl
subl
push
or
sub
pop
sbb
lcall
aas
jbe
cwtl
jecxz
test
out
stc
test
insb
inc
out
mov
loopne
int
aam
sar
dec
in
outsl
imul
js
scas
es
and
test
and
popf
fistl
loope
inc
xlat
mov
hlt
inc
dec
add
popf
jle
xchg
mov
inc
adcb
sbb
cwtl
sub
add
mov
inc
xchg
arpl
push
je
xor
fistpl
mov
call
jle
sub
sbb
mov
jle
rclb
push
pop
cmp
outsb
jb,pt
mov
arpl
adc
mov
xchg
xlat
mov
inc
jmp
lahf
inc
in
out
jecxz
mov
sarb
ret
loope
icebp
xchg
pusha
hlt
pop
mov
xchg
outsl
imul
aad
xor
mov
cmp
inc
andb
jg
dec
movsb
adc
rorl
or
sar
jl
xchg
push
push
inc
sbb
sarl
insb
test
bound
fsubp
fldt
scas
jp
popf
pusha
movsl
mov
test
shll
lods
xchg
lods
call
jns
dec
mov
das
mov
pop
shll
test
stos
int3
jp
ds
cmp
sahf
mov
and
repnz
xor
clc
jbe
rolb
lock
idiv
aas
cmp
add
rclb
sar
daa
sub
fstpt
mov
sub
xchg
lods
in
stos
adc
daa
hlt
or
mov
cmp
mov
xor
cmp
fwait
repz
test
dec
inc
add
mov
jge
lret
jbe
cmp
jmp
es
sbb
imul
inc
ljmp
xor
popa
call
pushf
rcr
dec
test
push
or
or
or
out
push
xchg
xlat
std
fsubs
notb
pop
pop
scas
daa
sbb
inc
adc
ss
mov
mov
shll
fcompl
push
gs
or
sub
test
sub
in
gs
cli
ficoml
scas
loopne
mov
push
add
sti
das
std
jb
mov
sbb
cmpsl
xchg
bound
inc
cltd
test
pop
jecxz
cmp
pop
cmp
iret
or
mov
pop
inc
loopne
test
fwait
mov
jnp
ret
xchg
adc
sbb
fistpll
insl
add
vmovdqu
pushf
dec
xor
ret
fmull
dec
cltd
pop
jb
push
pusha
pop
add
rdmsr
movsb
cmc
fwait
js
gs
outsl
push
push
mov
sti
stos
and
inc
mov
pop
xor
jle
mov
loop
adc
cmpsb
imul
rorb
sub
push
insb
test
sbb
pop
movsb
jmp
daa
lcall
loopne
ljmp
sti
xchg
and
insl
push
test
cmpsl
ja
adcl
insb
pop
jg
and
cld
jle
jecxz
inc
xor
pusha
aas
lahf
shlb
mov
pop
cltd
xchg
inc
dec
mov
hlt
add
int
xchg
push
hlt
jp
gs
cmpl
xor
cld
imulb
fdiv
jne
push
out
lea
ret
fdivrs
lret
xchg
pop
imul
fnstenv
pop
cwtl
inc
cld
outsb
movsl
test
jnp
bound
pop
int3
push
faddl
js
xor
mov
pop
negl
jle
mov
in
loop
dec
sti
rcrb
sbb
pop
push
out
fmull
sahf
and
add
pop
jle
jb
out
mov
leave
push
stc
les
stos
and
sbb
insb
clc
iret
lret
sbb
fnstcw
mov
jno
jp
iret
enter
test
pushf
jl
in
insl
sub
test
fmull
sub
dec
dec
pop
inc
mov
shll
je
xchg
enter
lret
cmp
mov
cltd
mov
jmp
data16
scas
fsubrp
lret
out
lock
into
subb
cmpsl
pop
add
xchg
cltd
cmp
push
or
mov
xchg
add
xchg
hlt
fistpll
sbb
in
shrb
aad
add
and
cmc
inc
and
jge
in
adc
and
push
pop
push
imul
and
test
mov
bnd
cli
and
xor
pusha
xlat
inc
inc
mov
sub
mov
push
je
push
jbe
push
sub
jp
adc
or
insl
test
test
clc
ss
cmp
jle
lret
lahf
pop
sbb
popf
es
ljmp
mov
push
xchg
jae
int
fmuls
pop
pop
repz
mov
insb
ja
add
stos
fimuls
lret
ret
pop
cmp
adc
jmp
out
and
mov
mov
mov
loopne
push
shl
adc
inc
pop
pop
aad
xchg
dec
mov
hlt
xchg
push
xchg
dec
fiadds
ljmp
mov
mov
clc
stc
push
push
and
xchg
and
test
pop
ss
data16
cltd
icebp
mov
loopne
aam
push
daa
scas
adc
xor
pop
mov
push
and
xchg
popa
cmp
fimuls
lods
jge
jnp
cmp
dec
cltd
outsb
xchg
jae
adc
enterw
incl
xchg
mov
lods
aaa
xor
ror
push
in
jb
dec
cwtl
ja
push
es
push
repnz
sbb
hlt
cld
sub
sbb
iret
adc
cli
cmpsl
cmp
jns
push
mov
inc
push
and
adc
jns
ret
mov
or
sbb
sbb
jns
mov
xchg
jecxz
mov
lods
mov
sarl
jb
dec
pop
call
mov
dec
pusha
dec
lods
add
sti
or
push
mov
mov
xchg
mov
xor
in
in
pcmpeqd
fsubrs
mov
xlat
sub
iret
addb
inc
xor
mov
rcrl
pop
in
enter
and
dec
nop
sbb
jecxz
shrl
stc
call
rcrl
inc
jo
aad
lods
aas
ret
jae
mov
or
mov
or
rorl
imul
aad
push
cmp
das
sarb
data16
inc
push
and
gs
adc
mov
pause
movsb
dec
dec
andb
fldcw
repnz
and
fcoml
scas
mov
sahf
adc
and
pop
nop
and
mov
mov
push
and
mov
push
and
pop
pop
xor
scas
outsl
cmc
std
js
cmpsb
mov
iret
decl
inc
jge
stos
inc
mov
sub
dec
xchg
mov
xchg
sbb
dec
dec
jae
push
push
fucomi
stc
stos
negb
out
xor
mov
lcall
pop
cmp
insl
adc
addr16
inc
mov
in
roll
cmp
lods
mov
cmp
push
imul
push
imul
mov
ljmp
cmp
or
inc
into
lahf
lods
xchg
popa
cmp
or
pop
test
sub
cmc
or
pop
inc
add
mov
hlt
or
mov
cmc
movsl
adc
add
cmovge
stos
idiv
je
movsb
cmpsl
sarb
pop
or
mov
lret
gs
or
mov
jl
lods
dec
std
add
test
imul
pushw
js
loope
jno
dec
ret
xchg
mov
push
pop
push
dec
mov
movsb
xor
mov
jmp
mov
ror
or
insb
xor
mov
adc
scas
xchg
aas
loopne
test
arpl
stc
rol
dec
sbb
mulb
mov
xchg
push
pop
pop
jnp
popf
imull
dec
jmp
mov
mov
add
movsb
cmpsl
push
jl
sub
jmp
sub
mov
outsb
imul
arpl
or
add
addr16
lahf
mov
or
inc
in
jl
les
gs
lahf
call
out
adc
les
mov
pop
es
lret
add
aam
repnz
out
mov
cltd
popa
inc
arpl
push
std
fwait
fildl
scas
aad
aas
mov
ljmp
call
cmp
sub
sti
sbb
sbb
mov
xchg
negb
mov
stos
push
xchg
enter
inc
test
lahf
xor
and
and
lret
movsb
pop
pop
enter
jmp
or
add
sub
sbb
pop
cmc
xchg
mov
inc
push
arpl
and
add
mov
ret
xchg
dec
int
gs
fnstsw
mov
adc
sbb
or
jne
sbb
ret
and
out
hlt
push
test
ja
jne
cmc
das
outsb
xor
dec
rdmsr
and
sbb
aam
int
mov
enter
ljmp
xchg
add
bound
in
xchg
lock
or
das
add
loopne
int
shrb
mov
aaa
repz
in
jp
dec
fwait
xchg
sbb
cli
dec
adc
add
rclb
fs
movsb
loopne
movsb
push
ret
xchg
xor
inc
mov
scas
jg
call
xchg
pop
rcrb
sbb
lret
mov
int
pop
or
inc
push
and
mov
sti
inc
loop
xchg
stos
insb
mov
repz
shl
or
jle
es
and
cs
popf
cmpsl
clc
or
das
dec
daa
cmp
jo
sub
jne
mov
out
rorl
inc
fstl
mov
pop
add
shrb
or
xchg
mov
jbe
test
out
dec
pop
xor
es
sub
mov
xchg
push
mov
fsubs
outsl
aam
inc
inc
into
mov
sbb
push
mov
call
or
and
mov
and
sub
pop
dec
das
push
or
sbb
negl
mov
aam
sbb
test
push
leave
int3
xor
ljmp
insb
int3
andb
cld
or
out
jge
or
push
add
dec
out
mov
sub
inc
jo
push
int3
pop
lods
ret
cmp
insb
sahf
sbb
xchg
mov
stc
ja
lods
bound
aad
mov
pop
dec
cli
mov
ds
dec
mov
or
ljmp
push
das
lds
push
inc
or
adc
stos
sbb
inc
popa
test
mull
xchg
fldcw
dec
push
rol
mov
adc
outsl
mov
dec
in
sti
in
sbbl
fwait
xor
xchg
sbb
xchg
pop
jbe
mov
in
pop
decb
test
cltd
jg
lods
inc
shl
adc
inc
add
iret
lcall
lea
or
cmp
jmp
mov
lods
push
mov
stos
imul
or
cltd
jb
out
xor
mov
enter
jae
add
sbb
inc
mov
sub
mov
adc
fidivs
dec
cltd
inc
pop
sbb
or
rcl
jmp
divps
xor
pusha
inc
dec
xchg
push
add
dec
mov
pop
inc
push
call
repnz
lcall
push
es
pop
imul
aaa
shll
dec
out
sub
adc
daa
push
pop
popa
ds
push
mov
lods
mov
adc
outsb
getsec
dec
in
mov
push
in
nop
mov
mov
ffreep
inc
std
mov
xchg
out
int3
pop
or
pop
xchg
shll
mov
cmpl
stos
cmova
xor
shll
loop
scas
mov
loope
pop
add
push
stos
cmpsl
push
cli
sub
pop
or
push
pop
jbe
cltd
xchg
sahf
sub
sbb
das
or
shrl
dec
push
dec
pop
decb
sbb
cltd
inc
loope
rolb
shll
pop
sub
xchg
int
cmp
roll
mov
loopne
cltd
pushf
cmp
push
cmp
in
dec
cld
jno
outsl
sbb
and
insb
inc
add
jmp
mov
enter
mov
popa
xor
jns
push
jb
lea
adc
or
or
testl
lock
mov
adc
mov
es
fldcw
icebp
jp
ja
xchg
jno
xchg
cli
lds
adc
adc
into
sub
jmp
out
sbb
sbb
add
aaa
leave
cltd
aam
sub
push
and
sbb
subl
movsb
sub
inc
orb
dec
cmp
rcrb
mov
scas
jne
testl
and
ret
add
gs
xor
add
aam
or
inc
loopne
and
jle
xor
dec
in
xchg
jmp
xchg
aas
sub
cltd
mov
jge
sub
push
mov
stos
mov
mov
jae
jmp
shll
loop
push
jae
inc
dec
aam
lahf
add
lods
sub
popf
jbe
movl
push
inc
add
push
movsl
sbb
and
in
inc
add
xor
jne
cmp
cmp
adc
mov
addr16
cmpsb
and
or
inc
ret
iret
stc
push
loopne
inc
mov
sti
shrl
mov
xor
push
fisttpll
lret
aam
ss
push
bound
pop
inc
push
aad
cmpsl
jg
dec
mov
dec
jl
lea
cmp
xchg
jg
mov
cwtl
insl
add
das
push
ds
cmpsb
es
call
pop
xor
push
roll
pushf
in
push
adc
jbe
int3
aaa
dec
jbe
mov
xchg
fbld
cmp
lcall
je
push
mov
out
enter
dec
mov
sub
push
mov
mov
fimull
and
pop
dec
sub
in
sub
test
shlb
incb
inc
xchg
mov
sub
and
faddl
pop
outsb
dec
mov
xchg
add
inc
or
or
mov
ja
movsl
test
rcl
mov
cmp
jb
jno
aaa
in
inc
and
xchg
pop
mov
mov
pop
das
xchg
out
and
adc
shlb
push
lods
ret
scas
mov
xchg
xchg
mov
idiv
cli
pop
mov
cmp
lahf
fldl
insl
mov
or
cld
dec
adc
fdivl
lods
xchg
inc
imul
pop
stos
lahf
dec
enter
inc
js
loop
inc
std
in
push
pop
int3
push
sbb
or
sbb
adc
or
lcall
mov
daa
xchg
xchg
and
dec
sarl
sub
iret
xchg
fldenv
rcrl
sub
fneni(8087
loopne
pop
test
cs
lock
data16
mov
pop
std
sbb
fsts
gs
shll
ret
sub
sbb
shll
pop
dec
mov
adc
mov
data16
mov
popf
je
or
cwtl
mov
in
in
gs
adc
repnz
loopne
loopne
or
push
scas
dec
xchg
aam
subl
jns
or
cmpsb
iret
test
xor
prefetch
call
inc
js
sbb
cs
jne
sub
fisubs
sub
add
lcall
aad
xchg
jnp
pop
and
repz
iret
test
nop
xchg
daa
cmp
inc
inc
mov
jne
pop
xor
data16
or
jge
fnstsw
ljmp
lods
incl
dec
negb
xor
adc
enter
pop
mov
daa
pop
repz
iret
cltd
iret
cwtl
leave
adc
outsl
inc
mov
movsb
loop
and
dec
shrb
push
fildll
arpl
dec
add
fdivr
insl
sub
push
arpl
test
fldt
stos
imull
and
das
nop
ficoms
sbb
xchg
test
repz
sub
xchg
lods
into
dec
inc
sbb
negl
es
mov
ret
and
ss
arpl
inc
push
push
mov
cmp
xchg
xor
rcr
adc
push
mov
lahf
sahf
popa
mov
jmp
push
loopne
and
stc
imulb
mov
cwtl
scas
mov
stos
and
dec
popa
rorb
jle
xor
dec
sahf
stos
lea
cmp
fstpt
push
and
daa
mov
outsl
push
test
rorb
xchg
cmp
mov
pop
mov
cli
jae
test
or
clc
cmpsl
mov
mov
rcl
dec
fidivrl
stos
mov
mov
and
pop
cmc
lea
scas
ss
mov
popf
rcrl
mov
sti
icebp
fdivrl
test
rcl
mulb
ja
xor
insl
add
add
sti
mov
nop
mov
xor
jl
or
ret
adc
xchg
jb
sbb
nop
aaa
jg
jl
cli
stos
dec
enter
pushf
and
in
xor
in
subb
inc
mov
inc
push
jge,pt
xchg
jg
out
and
in
mov
jge
cmp
jno
cltd
sbb
aaa
test
fcoms
repnz
mov
mov
jl
add
inc
jae
push
ja
push
stc
sbb
rorl
xor
adc
add
sahf
lock
rorb
test
in
popf
inc
bound
dec
cltd
inc
aaa
or
mov
push
pop
dec
imul
fs
mov
scas
subl
inc
jne
mov
mov
and
mov
mov
insl
jecxz
cld
jns
fildl
bnd
or
xchg
sti
cs
and
cltd
pop
imul
mov
notl
scas
push
push
pop
sub
out
or
mov
and
mov
or
ja
sub
mov
lgs
jge
leave
fdivrl
and
lahf
shrl
mov
ret
jae
les
add
adc
sub
mov
cwtl
cli
push
jnp
pop
add
int3
incl
push
mov
cmp
arpl
jp
adc
dec
add
imull
mov
adcl
stos
popf
lea
mov
and
movsb
fidivs
scas
add
insl
push
insb
push
clc
mov
fisttps
and
sarl
mov
mov
leave
mov
rcrl
lahf
or
test
repz
jg
aaa
xchg
sbb
xor
mov
in
push
jge
adc
dec
ror
shll
dec
insb
cmp
out
sub
adc
icebp
inc
popf
mov
call
enter
ds
cltd
fs
pop
add
call
xchg
xchg
loop
mov
and
ljmp
lods
aad
or
sub
dec
jg
cmp
daa
lds
mov
xlat
out
movsb
out
dec
xchg
jmp
or
xor
pop
push
or
into
add
jp
shll
cmp
xchg
lods
xchg
ror
imul
adc
jge
sarl
hlt
in
jo
xchg
cmpsl
xor
movsb
test
rolb
clc
pop
mov
xchg
cltd
rolb
cli
xor
mov
adc
out
lds
shr
lock
or
cmp
mov
jns
and
mov
testl
fldt
test
fisubs
dec
xor
inc
cmp
cmc
clc
push
lcall
scas
lret
out
adc
arpl
punpcklwd
vpslld
xchg
std
fwait
dec
es
jno
xchg
repnz
pusha
pop
fwait
push
mov
mov
mov
push
push
xchg
aaa
xchg
in
pop
nop
popa
sahf
pop
inc
clc
sbb
pop
mov
mov
adcb
out
in
inc
jmp
mov
leave
aad
loop
int
add
stos
xchg
subb
adc
xchg
mov
addb
movsb
scas
inc
stos
in
icebp
pusha
fdivs
jae
aad
add
push
in
pop
dec
fsubrp
outsb
ret
jns
push
or
es
ja
inc
sub
int3
push
pop
push
sahf
dec
xchg
sbb
jg
jb
ljmp
cmp
adcb
mov
or
cltd
pop
scas
lcall
mov
mov
pop
mov
jne
shlb
enter
jge
call
sub
mov
stos
adcl
cmc
mov
xor
push
mov
inc
add
clc
pop
cmpsb
or
lock
jge
dec
mov
xchg
add
mov
fmuls
xchg
shlb
xchg
sbb
or
cmp
xorb
out
sarb
inc
cmp
lcall
sbb
xchg
decl
pop
sbb
mov
sub
xchg
inc
or
adc
mov
pop
fisubs
shll
in
jnp
std
outsl
xchg
adc
pop
add
mov
mov
rcr
shl
push
or
lods
or
jnp
jb
xchg
imul
mov
lds
mov
xor
jle
dec
rolb
daa
adc
cmpsl
jbe
pop
movsb
ljmp
push
int3
adc
or
pop
outsl
push
add
jp
xchg
or
jge
cltd
adc
xchg
jbe
scas
push
dec
clc
sbb
lret
stc
mov
inc
mov
or
das
mov
addl
data16
sbb
out
mov
mov
ret
sbbl
xor
sub
xor
jmp
loopne
mov
push
cmpsb
pop
out
arpl
and
cli
insb
sbb
shll
jno
lods
jge
cmc
shll
mov
in
inc
jbe
insl
push
hlt
dec
cs
mov
stos
divb
repz
pop
cmc
adc
dec
cmpsb
iret
push
mov
aad
lock
lahf
sub
or
pextrw
jp
pusha
fsubr
mov
jne
insb
cli
mov
adc
sub
pop
les
sbb
movsl
dec
sub
pusha
xor
mov
repnz
sub
fnsave
jg
add
fisubrs
adc
and
sbb
jo
jb
sti
not
xlat
or
aas
imul
std
jg
mov
cmp
inc
or
adc
lock
jg
xchg
mov
jno
cmp
jp
pop
add
push
push
call
inc
mov
aaa
adc
jl
xchg
clc
add
adc
pop
sbb
cli
mov
jns
pop
test
mov
stos
aam
daa
mov
dec
inc
jmp
cmpsb
dec
adc
jge
sub
lret
out
and
call
jae
dec
lds
and
jp
adc
outsb
xor
movsb
cmpsl
xchg
add
push
and
jecxz
mov
add
fdivrp
pop
cmpb
daa
push
push
rclb
pop
xchg
cld
jns
ja
xor
xor
sbbl
cmp
fisubs
inc
push
cmpsl
pop
test
leave
mov
lock
shl
dec
in
sti
mov
inc
xchg
pop
jb
fs
loopne
pop
inc
iret
fcoml
cld
sbb
push
jnp
mov
and
xchg
mov
mov
sbb
sub
xchg
fwait
mov
mov
in
std
jge
cmp
dec
movl
inc
sbb
lods
pushl
dec
js
dec
xor
jnp
in
cmp
jns
add
add
add
cmp
lahf
in
fwait
lods
sub
lds
imul
fwait
sub
push
ret
shlb
pop
roll
push
inc
sbb
inc
mulb
jecxz
jmp
push
mov
outsb
idivb
repnz
push
jno
sbb
stos
data16
inc
icebp
push
pop
xchg
cli
or
mov
cmp
cwtl
es
push
mov
mov
stc
iret
jge
mov
jp
fs
sub
sbb
scas
push
bound
mov
mov
pop
mov
add
leave
jnp
out
insl
or
pop
out
out
xor
fsubl
test
push
ds
lret
inc
stos
or
sub
into
ja
clc
adc
dec
std
ja
in
fldcw
mov
pop
ret
pop
loop
stc
std
mov
cmp
or
xchg
xorl
nop
and
push
fimuls
scas
ds
out
or
ja
loop
mov
pop
or
dec
inc
iret
aaa
pop
xlat
in
adc
cmp
std
push
sti
jns
jbe
xchg
test
cmc
out
insb
gs
popa
pop
jge
add
xchg
jmp
inc
sub
clc
iret
cs
pop
pop
sub
fstps
adc
pop
sbb
les
adc
adc
jno
sti
iret
fbstp
mov
xor
daa
inc
sub
sbb
lahf
repnz
xchg
pop
push
unpckhps
stos
or
fsubl
rolb
dec
add
clc
push
int3
push
push
cld
add
xlat
or
sbb
insb
orl
int
jbe
sub
es
add
fcoml
mov
pop
dec
inc
or
and
in
frstor
push
mov
std
jbe
jnp
insb
int3
insl
mov
inc
call
dec
or
incl
dec
xor
jo
inc
cmc
lret
jge
or
rcrb
gs
popf
imul
fsubl
xor
sbb
stos
clc
leave
hlt
scas
adc
lods
add
mov
ret
jle
or
addr16
sub
xchg
pop
and
cmp
imul
ret
cld
jns
dec
push
xchg
or
movsl
hlt
mov
lea
push
jecxz
xchg
cmp
rcrl
jle
hlt
orl
fcompl
cltd
lret
adcl
ds
xchg
iret
mov
add
pop
inc
xor
in
jne
push
lcall
sub
mov
bound
xchg
push
dec
push
or
add
inc
jge
data16
fsubr
shr
insb
jle
dec
mov
icebp
jae
xchg
adcb
pop
negb
loope
push
inc
or
cmpsl
inc
mov
lods
xor
mov
icebp
lea
js
cmp
push
push
xchg
sub
push
sbbl
xchg
xchg
xor
jne
cmpsb
cmpsl
or
in
mov
mov
add
xchg
insb
int3
or
data16
push
or
and
inc
stos
xor
jb
out
mov
leave
mov
inc
add
pop
push
xchg
out
inc
mov
mov
adc
mov
xchg
xchg
movsl
sub
movsb
sub
inc
sub
mov
pop
dec
ja
mov
sbb
jge
ss
xor
sahf
mov
jmp
jne
or
aad
jne
jecxz
pop
jbe
popa
je
jb
out
cmpsl
xchg
pop
ret
sbb
inc
push
hlt
inc
pop
stos
in
sbb
clc
add
add
dec
in
lea
and
in
sub
mov
ljmp
es
scas
loope
dec
push
lret
cld
insb
clc
cwtl
or
add
rcrb
inc
shlb
xchg
and
dec
mov
les
sbbb
mov
inc
adc
icebp
pop
notl
jns
repnz
shll
icebp
jg
adc
inc
ja
dec
mov
lods
call
add
adc
rolb
mov
jbe
jb
jmp
jle
xchg
and
mov
in
sbb
testb
out
cld
cs
adc
lods
and
adc
cmp
rclb
ret
aad
cmp
xor
sub
cmc
inc
push
mov
das
stos
hlt
leave
popl
shrl
adc
sbb
js
clc
testb
dec
xchg
fwait
push
xchg
pop
sahf
scas
mov
pop
out
aad
cmc
or
mov
mov
push
ja
cmp
call
aaa
adc
into
jl
and
lea
and
insl
test
cmpb
js
test
mov
lcall
jp
mov
jo
ret
fisttpl
xchg
iret
andl
popf
or
or
leave
or
inc
outsl
and
je
xchg
and
movsl
push
cmpsl
clc
mov
sbb
insb
push
lret
jg
stos
push
or
lret
mov
jmp
and
nop
jns
ljmp
xchg
data16
leave
sbb
aas
gs
dec
jmp
leave
insl
clc
add
dec
add
popf
mov
mov
jo
push
sub
push
cli
pop
or
mov
dec
pop
inc
ficompl
into
push
push
inc
or
push
sbb
imul
dec
test
insl
mov
movb
sbb
imul
cltd
mov
fildl
cltd
pop
sub
pop
jno
push
pop
test
inc
add
insb
out
cmpsl
xchg
and
xor
loop
adc
adc
les
lds
push
sar
cmp
xor
pushf
imul
mov
rcll
cmpsl
pop
lods
xchg
arpl
hlt
and
pop
mov
cmp
data16
in
mov
call
inc
cmp
nop
test
or
push
pop
mov
sub
out
adc
xor
sub
js
loope
adc
bound
outsb
mov
icebp
or
cmp
dec
into
das
cmp
sub
and
xchg
sbb
fwait
icebp
xor
pop
ret
mov
and
dec
fcoms
mov
shlb
or
lea
dec
sbb
shrl
pusha
dec
mov
push
pop
mov
sub
and
test
jo
jae
sti
cltd
xchg
xchg
adc
ret
dec
cmp
and
sub
mov
jno
jb
fstps
dec
or
dec
pop
inc
push
mov
repnz
bound
adc
jp
inc
push
mov
sti
notrack
mov
fildll
mov
cmc
lcall
xor
addb
lea
sahf
cmp
notl
out
adc
lods
notl
out
mov
xorl
out
xchg
fucompp
pcmpeqw
mov
add
test
sbb
push
cld
and
out
sub
adc
out
mov
xchg
ljmp
push
and
push
test
xchg
jae
popf
ficoms
pop
popa
fwait
add
mov
lret
rolb
aam
pop
sub
dec
and
test
test
popa
or
and
dec
pop
fmull
inc
and
mov
inc
xchg
xor
ret
cmc
cmpsb
jecxz
mov
repz
inc
andb
mov
mov
leave
in
out
mov
cmpsl
inc
sub
sbb
and
push
mov
pop
dec
and
rcrl
dec
int3
pop
mov
stc
pop
cld
movsl
cmc
pushf
sahf
cmp
pop
sub
xor
clc
push
xchg
cwtl
stos
shrb
cltd
jae
add
inc
std
push
fsts
ja
sahf
rcrb
dec
push
cmpl
inc
dec
mov
aas
mov
xchg
fcomi
push
negb
add
inc
cmp
mov
cltd
dec
insl
xor
pop
rol
pop
dec
sbb
dec
outsl
cmp
push
dec
adc
jae
vpcmpgtb
sti
mov
jbe
arpl
sbb
notb
add
dec
iret
mov
repnz
repz
out
shr
addr16
movsl
pop
hlt
int
jmp
cmp
daa
clc
iret
clc
shrb
aaa
push
and
push
and
xchg
repnz
enter
jne
std
inc
pop
lods
sbbb
and
mov
js
pop
je
xorb
sub
lea
pusha
mov
pop
sbb
sub
jle
or
hlt
jmp
inc
es
cli
ja
inc
aad
enter
lret
fcomps
xor
cli
push
cmp
roll
shlb
lahf
inc
cmp
dec
add
repz
fucom
or
fs
sbb
push
sbb
and
lahf
cmp
loop
dec
lea
test
push
test
insb
into
dec
clc
cwtl
sbb
mov
xor
mov
sbb
xlat
adc
push
jns
fiadds
push
xchg
mov
sub
inc
loope
lods
inc
ljmp
xchg
cmpsl
repnz
jg
dec
push
cld
scas
xchg
lcall
imul
movsl
adc
adc
repz
xchg
iret
cltd
ficoml
or
imul
pop
or
mov
xchg
mov
dec
cmpl
adc
pop
shlb
cs
add
xor
xchg
and
xchg
ret
das
cmp
adcb
gs
sbb
jp
cmp
jge
or
call
push
pop
inc
xchg
lcall
pop
dec
cmpsb
outsl
push
in
mov
data16
mov
scas
imul
jg
outsb
rolb
test
nop
adc
xor
aam
lret
pop
adc
and
sub
enter
loop
ror
push
sbb
sub
out
jne
mov
xor
mov
test
add
cwtl
sub
jnp
sub
imul
cwtl
jmp
popa
cmpsl
ret
xchg
mov
inc
dec
sbb
jg
push
jmp
rcr
adc
lcall
stos
leave
cmp
into
cmpsl
outsb
push
jecxz
mov
mov
mov
xchg
pop
mov
xor
push
push
xchg
mov
test
outsl
out
mov
mov
adc
test
dec
adc
out
jno
addr16
les
lret
aam
inc
sub
dec
inc
insb
mov
and
fwait
clc
imul
or
push
ret
lods
lock
fiaddl
gs
addr16
cmp
mov
stos
jp
xor
and
jmp
mov
adc
ja
or
mov
fsubp
les
in
or
jl
sub
sub
dec
std
cltd
push
mov
lods
lcall
ret
inc
pop
out
jge
xchg
push
cmp
xlat
xchg
mov
test
dec
inc
xor
out
sbb
ss
pushf
lret
xchg
sarb
cmp
jb
dec
adc
out
lret
add
inc
je
dec
xor
adc
jmp
into
in
adcb
in
jl
sub
and
cld
xchg
inc
jecxz
mov
cmp
inc
aam
mov
pop
lret
mov
adc
push
xor
push
mov
scas
xorl
movsl
or
sub
std
or
cld
cmc
xlat
xorb
push
repz
pop
push
adc
push
add
lret
fistpll
je
ret
jle
xchg
js
add
xor
push
mov
std
mov
adc
aas
adc
xchg
dec
repnz
xor
cmp
cmc
adc
sub
stos
cmp
add
mov
xor
xor
into
add
xlat
add
shrb
std
fs
punpckldq
pop
aad
loop
aaa
xacquire
outsl
push
mov
aad
mov
mov
pop
push
sbb
sarb
int
pushl
inc
pop
sbb
jnp
xlat
in
shll
adc
dec
imul
mov
push
jg
push
pop
test
ret
pop
adc
xor
das
ret
mov
rorb
out
mov
push
inc
inc
mov
aas
inc
lds
mov
xor
adc
or
loope
cmp
push
dec
xor
test
mov
mov
xor
push
bound
adc
dec
hlt
flds
fldcw
mov
push
je
inc
in
inc
lods
out
and
or
jge
out
mov
mov
add
repnz
fadd
cmp
outsb
xchg
sub
test
mov
fmull
jae
push
arpl
pop
lods
sbb
or
nop
pusha
out
or
sbb
sbb
mov
repz
scas
ljmp
dec
jbe
cltd
and
xchg
das
sbb
enter
fmuls
push
jg
in
clc
lret
sbb
frndint
das
mov
mov
lock
or
sbb
in
lods
jns
js
add
andl
fstps
xor
andb
fdivs
stos
lea
sar
pop
cmp
fmuls
popf
aaa
inc
adc
mov
sahf
mov
push
adc
mov
jmp
sti
dec
xchg
out
xor
mov
mov
push
loope
fwait
push
jno
enter
xor
xor
push
xchg
and
jb
lret
push
out
xchg
push
mov
sarl
jb
jmp
push
pusha
xchg
in
inc
pusha
pushf
cmp
mov
cwtl
lea
dec
mov
stos
pop
mov
cmpsb
test
sub
jbe
iret
inc
pop
sahf
push
movsl
es
outsl
aad
sub
lahf
mov
scas
cld
movsl
inc
cmp
lock
add
cmp
lods
push
sub
arpl
mov
xlat
sbb
pop
xor
aam
divl
adc
movsb
loope
testl
or
jl
ret
pop
rorl
pop
xor
jecxz
addb
orl
pop
aas
loop
ss
movsb
push
shll
pushf
cmpsb
push
pop
pop
push
sbb
lods
inc
rorb
jmp
push
jl
add
push
pop
mov
push
sahf
add
jle
mov
adc
add
mov
lret
push
dec
xchg
xchg
adc
xorl
in
xchg
jne
out
mov
data16
push
les
add
lea
or
add
cmp
or
addb
sbb
xchg
mul
dec
add
cwtl
jae
dec
in
mov
repz
test
aam
sbb
mov
xor
pop
push
mov
add
iret
add
and
popa
mov
pushf
and
sahf
and
xor
jmp
mov
dec
mov
lea
xchg
sub
testb
leave
xor
daa
xchg
test
cmp
mov
out
xor
push
cli
dec
leave
mov
je
pop
testl
sbb
in
ret
sbb
arpl
in
repz
sub
roll
popf
loopne
jg
pop
addb
mov
push
cmp
and
insl
xchg
inc
outsl
jp
stos
leave
insb
test
jg
jg
mov
adc
pusha
adc
movsl
jb
negl
jp
andl
cld
mov
adc
lods
or
mul
inc
popf
inc
pop
pop
arpl
inc
lds
ret
add
pop
fidivl
pop
jnp
rolb
lds
bsf
movsl
push
data16
xor
mov
mov
dec
enter
xlat
push
cmp
adc
push
and
push
nop
std
pop
or
scas
fisubs
stos
lret
ss
push
inc
daa
jp
pop
mov
mov
dec
je
add
mov
or
shlb
adc
xor
cmp
and
fistl
jp
dec
repz
push
mov
xor
sbb
mov
lods
mov
das
sarl
xchg
jnp
and
jmp
out
xchg
mov
scas
loopne
lret
cmpl
je
pop
mov
fiaddl
sub
fisttpll
mov
push
pop
push
int
aas
ljmp
lods
xor
inc
mov
fists
jmp
popa
lret
nop
jecxz
mov
push
xor
push
sub
imul
test
iret
add
es
bound
add
aad
jg
inc
popa
aad
jno
mov
in
lods
jp
mov
sub
clc
cmp
roll
sti
js
lea
es
inc
xor
mov
cmp
inc
pop
push
pop
xor
daa
jb
push
stc
js
adc
js
xchg
add
push
dec
jmp
sbbl
mov
lahf
xchg
les
mov
sub
dec
and
dec
lcall
xor
daa
loope
xor
sahf
loopne
dec
lock
mov
jns
into
lods
jb
notl
push
xor
in
cmp
or
repz
imul
cmp
add
cmp
mov
loopne
dec
cmpsb
test
loop
add
mov
push
xchg
push
cmc
add
push
roll
cltd
loopne
int3
les
mov
push
xor
mov
mov
xor
and
ljmp
or
addl
imul
inc
rcll
mov
inc
mov
xchg
jle
adc
xchg
sbb
pop
mov
jmp
or
mov
jo
mov
jno
pop
jns
mov
dec
pop
push
fstl
mov
sbb
adc
fmuls
dec
cwtl
pushf
pop
mov
imul
sub
ds
aam
pop
movsl
ljmp
pushf
insb
and
das
lcall
inc
es
sbb
sub
or
gs
loop
mov
into
pop
lret
pop
adc
jle
push
inc
insb
and
arpl
int
mov
mov
das
cmpsl
dec
mov
push
dec
mov
cmp
lds
nop
daa
shl
mov
mov
data16
lea
sbb
divl
adc
ret
lcall
push
add
xor
sti
sbb
lret
lds
out
xor
imul
es
xor
call
push
leave
repnz
xchg
jmp
mov
xor
xchg
jecxz
clc
pop
lea
push
sbb
or
or
ja
test
and
enter
jmp
das
jnp
add
sahf
jno
jmp
xchg
push
add
loopne
dec
lret
mov
loopne
fimull
sub
adc
jns
out
push
dec
rcll
shl
gs
sarl
loope
mov
je
stc
adc
dec
dec
mov
inc
bound
icebp
stos
push
xchg
add
jnp
scas
jge
cltd
insl
and
push
hlt
insb
enter
mov
mov
std
daa
mov
cmpb
adc
not
jl
cld
jb
sarl
rcrl
xchg
lds
jecxz
movb
rorb
js
sub
jno
test
xlat
shl
pop
test
mov
enter
mov
rcl
mov
lahf
push
mov
pop
jns
sub
mov
mov
testb
out
pushf
scas
fisttpl
ficoml
mov
sub
imul
loop
into
cs
lret
imul
mov
clc
ret
mov
dec
and
jmp
aaa
in
mov
mov
iret
pop
and
insl
pop
out
into
add
mov
and
repnz
lds
adc
std
sbb
ljmp
adc
jnp
pushf
js
jbe
inc
pop
dec
and
fcmovnb
jmp
inc
sbb
or
jns
imul
and
mov
test
clc
subb
or
jno
xchg
mov
cmp
push
test
fdivr
pop
out
mov
std
decl
mov
cmp
or
jl
xor
xor
cltd
mov
mulb
sbb
xchg
push
xor
test
fistpl
jns
inc
push
mov
lock
lods
stc
mov
aas
push
pop
pop
xor
cld
inc
aad
stc
ljmp
push
gs
or
in
mull
push
cli
xchg
dec
ljmp
mov
xor
outsl
dec
inc
pop
sub
push
dec
shrl
call
jb
dec
repz
adc
sub
loop
call
rcll
xchg
mov
repz
fdivl
jnp
in
movsb
xor
into
inc
xlat
add
test
xchg
or
das
pop
inc
mov
push
fcomps
xlat
mov
fcmovnbe
clc
xor
or
jg
mov
leave
repnz
fcoml
pop
pop
or
xor
jae
data16
mov
cmpl
cmpsb
rcll
clc
xlat
pop
sahf
pop
xchg
adc
dec
xchg
mov
or
daa
xchg
adc
jl
sub
mov
mov
out
dec
popa
add
cltd
in
mov
aas
inc
pop
in
adc
pusha
addl
pushf
scas
fwait
ret
imul
push
xor
push
test
cmp
incl
enter
inc
arpl
push
gs
push
imul
repnz
add
enter
daa
and
add
push
mov
pop
or
bound
daa
pop
cwtl
aas
mov
scas
add
fidivl
cmp
cwtl
nop
mull
sub
and
cmp
push
popf
push
sbb
in
jae
mov
fsts
add
hlt
dec
sbb
mov
sub
int
cmp
mov
aad
stos
js
aaa
stos
jo
mov
fcompl
mov
add
fadds
fwait
ret
cld
ret
call
fs
ss
hlt
xchg
andb
adc
iret
jb
pop
sbb
cmp
pop
sub
jnp
stos
push
pop
pop
adc
in
cs
cmp
adc
pop
add
cltd
pop
jb
push
testl
xchg
add
xorl
loopne
inc
mov
data16
pushf
lret
into
mov
js
jns
adc
sbb
mov
xchg
int3
xchg
movsl
push
adc
lret
jno
rorl
gs
mov
shl
lcall
xlat
inc
or
out
rolb
into
rorb
call
jns
mov
dec
inc
jecxz
jns
sub
call
mov
divb
adc
jo
xchg
roll
cltd
pop
sub
mov
dec
push
mov
xchg
mov
inc
clc
stos
sbb
push
mov
pop
loopne
pop
sub
cmp
shlb
sahf
imull
sarl
cmp
popl
cmc
into
filds
dec
rep
fstl
mov
sbb
inc
lds
dec
sbb
fisubl
rorb
subb
mov
das
pop
stos
sbb
sub
lds
push
dec
mov
test
mov
adc
push
dec
pop
fcom
mov
push
leave
xor
and
sbb
adc
enter
mov
out
and
mov
popf
dec
sbbl
jp
push
cltd
pushf
xchg
inc
xor
les
daa
flds
in
jb
les
insb
pop
add
push
or
xchg
rclb
pop
xor
xchg
pop
popa
je
int
xchg
mov
mov
lret
jge
mov
call
lods
xchg
lds
xchg
mov
xchg
adc
js
mov
test
inc
aad
jno
xchg
inc
lds
aam
insl
mov
out
sub
adc
ja
mov
ds
rolb
aaa
outsb
mov
adc
loope
out
and
jl
xchg
pop
popl
arpl
fisttpll
sbb
repz
out
push
mov
ret
subl
into
add
dec
push
inc
push
inc
pop
cmc
shrl
fadds
pop
rorl
push
mov
dec
out
inc
bound
test
push
out
cmpl
shll
sbb
aad
enter
jno
pop
insb
arpl
mov
loop
ret
clc
sbb
push
sbb
scas
cmp
cmp
fidivs
call
dec
jecxz
pop
and
push
adc
inc
inc
cmp
repnz
aam
pop
fdivrs
inc
push
dec
xor
jge
fsts
icebp
call
add
leave
pop
push
or
testb
lret
push
pop
mov
jb
iret
push
sbb
cmpsl
insl
ss
rcrb
sbb
cmp
popa
rolb
setb
cli
scas
jmp
push
add
test
xchg
in
inc
test
xor
sbb
imul
xor
xor
jl
nop
mov
loopne
lods
loope
sbb
mov
in
cmp
jnp
aad
lret
mov
push
jno
lds
jo
mov
in
and
jl
cmp
rcll
pop
movsl
pop
jmp
cmp
inc
lahf
adc
xchg
cwtl
fimuls
mov
faddl
add
popf
cld
add
orl
lret
sub
push
xor
dec
push
out
or
sbb
xrstors
cwtl
xlat
add
lahf
xor
out
ja
jae
and
in
jo
or
jecxz
les
cs
pop
mov
enter
and
in
lret
mov
addl
lods
in
mov
xchg
jae
loopne
jns
xchg
add
cmp
fwait
add
mov
and
movsb
xor
dec
push
lock
lahf
popl
loope
addb
sbb
pop
icebp
sub
ds
test
inc
stos
pop
push
cmp
test
cs
roll
pop
aad
out
cmp
mov
inc
jp
outsl
push
jne
add
xchg
insl
mov
xor
fwait
sub
jbe
mov
pop
fnstcw
add
add
loope
rorb
adc
test
mov
mov
sbb
pop
fsubrs
imul
ret
adc
repz
sahf
outsb
xor
lea
jecxz
ja
xchg
jl
mov
jae
bound
mov
xor
rcrl
jg
out
lcall
mov
or
mov
stc
and
pushf
xchg
mov
shlb
or
push
test
pop
scas
daa
mov
inc
out
popa
dec
cmp
mov
popf
es
addb
out
mov
enter
in
cld
jns
mov
addr16
daa
xchg
jne
sub
xor
jecxz
ja
mov
or
add
loop
xor
mov
sarb
pop
mov
jp
dec
pop
ret
movsb
mov
imul
cmp
loopne
sarb
out
jns
loope
les
insl
cli
xchg
xchg
xlat
ja
inc
or
dec
mov
xor
lret
aaa
cmp
jo
arpl
or
popa
mov
push
add
pop
sbb
sub
imul
mov
andb
daa
jo
lds
addr16
sbbl
mov
jns
out
xchg
jge
andl
mov
dec
test
add
adc
pop
aam
dec
push
sbbb
rorl
push
std
test
inc
fisttps
pop
jnp
add
idivb
jecxz
dec
dec
testl
xor
pusha
push
ret
jmp
push
jle
add
cwtl
int3
and
push
rorb
dec
cs
orb
imul
mov
in
imul
ficompl
pop
pop
icebp
push
iret
jne
rorb
xchg
mov
pusha
adc
jmp
xchg
gs
mov
stos
and
ds
les
das
test
xchg
cmc
pop
xchg
dec
cwtl
test
pop
es
rclb
or
xor
ret
insl
lcall
imull
inc
ret
aam
dec
hlt
add
ds
jns
sbb
test
hlt
sub
add
orl
jle
cmpsb
xchg
dec
or
rcr
mov
push
jb
dec
cld
or
dec
sub
loop
sbb
cmp
mov
push
cmpb
fistps
cmp
aas
mov
sub
mov
cmp
fildl
push
add
mov
mov
out
inc
sub
inc
and
mov
loopne
jae
or
push
lods
sbb
or
mov
xchg
in
sarl
cmc
inc
jno
ret
popf
pop
inc
and
cli
rcrl
popa
mov
xchg
ds
dec
je
scas
mov
jmp
mov
les
sbb
imul
jmp
aas
sar
arpl
test
pushf
jge
jns
out
cmpsb
in
mov
test
shll
pop
sbb
aas
cmp
mov
mov
fildll
enter
inc
add
mov
mov
sbb
inc
aam
adc
repnz
xchg
stos
insb
add
mov
and
jns
enter
cmp
cmp
fwait
xor
les
nop
ret
stos
sub
mov
pop
push
dec
mov
fists
push
and
jle
or
lock
lcall
pop
push
mov
ss
mov
repnz
xor
pop
ds
jne
outsb
inc
or
push
mov
fcmove
std
adc
test
push
push
mov
loop
in
inc
fld
xchg
mov
in
cs
mov
aas
call
out
mov
test
jnp
andl
sti
push
lret
adc
leave
out
push
ss
js
movsb
ljmp
test
sti
int
cwtl
jmp
push
sub
jl
jge
cmp
test
enter
push
movsb
ljmp
cmc
cmc
loop
and
inc
pushf
pop
ret
mov
inc
cmp
adc
dec
push
xchg
xor
in
movsb
stos
in
dec
popa
fnstsw
out
imul
pop
loop
cmpl
sar
scas
pop
popf
cmp
xor
push
jno
loop
jo
add
filds
jne
jge
cwtl
cmpsl
cmpsb
mov
jl
into
rclb
int
mov
sbb
xor
arpl
pop
push
and
cld
sub
push
pop
xchg
jge
mov
jg
sbb
mov
and
mov
or
push
cmpsb
fucomip
sti
faddl
adc
int3
cmpb
mov
sub
mov
mov
movsl
dec
enter
cmp
lods
int
shll
mov
or
xchg
and
or
mov
enter
mov
in
pop
sub
shlb
ljmp
lea
push
out
stos
pop
mov
out
push
and
xchg
es
jb
push
out
xlat
call
mov
std
fwait
js
xor
rcrl
pop
leave
add
nop
mov
in
scas
or
test
aas
outsb
fists
cmp
mov
popa
dec
xor
sub
int3
jnp
dec
addr16
std
fnstenv
sub
mov
cmp
mov
push
leave
aam
mov
and
push
ss
adcl
jmp
inc
inc
xchg
push
mov
cmp
pop
pop
xchg
add
mov
das
and
xor
cs
ljmp
sbb
fucomip
out
dec
lret
dec
fldenv
jecxz
pop
aaa
leave
xchg
scas
popf
fists
mov
test
or
cwtl
jb
dec
or
adc
gs
and
fwait
into
insb
in
arpl
fldcw
sti
push
xchg
iret
sahf
cmc
dec
push
or
int
shl
sub
mov
pusha
arpl
mov
adc
xchg
xor
xchg
xor
mov
and
in
jne
or
hlt
aaa
xchg
sub
cwtl
mov
sub
hlt
in
test
outsl
jnp
mov
dec
jmp
inc
pop
lretw
call
imul
inc
sbb
sbbl
int3
addr16
or
scas
insb
fwait
mov
subl
pop
out
mov
outsb
mov
lds
sub
jmp
xchg
lds
insb
cmp
jg
or
and
mov
jp
mov
push
or
push
push
imul
sbb
fisttpll
jb
test
xchg
inc
mov
dec
push
pop
andb
dec
outsl
call
or
adc
clc
adc
call
push
mov
jmp
ja
push
and
imul
cli
into
arpl
outsl
or
inc
xor
cmp
cmp
jecxz
mov
mov
adc
daa
leave
mulb
out
mov
pushl
into
xor
pop
psubb
mov
pusha
mov
jne
push
mov
lret
adc
dec
arpl
ffree
les
rolb
lcall
push
mov
pushf
notl
xchg
or
add
inc
imul
out
xor
in
icebp
pop
lret
popa
pop
and
xor
cli
xchg
or
xlat
jo
clc
pop
mov
push
adc
and
in
cmp
call
fsubrp
xor
add
dec
imul
and
hlt
xor
pop
mov
add
inc
mov
dec
push
pop
movsb
loopne
pop
jge
insb
es
mov
cmpsl
imul
cmc
cmp
mov
pop
testb
mov
repz
mov
xchg
dec
mov
push
fs
pop
rep
sub
sahf
mov
bound
xor
ljmp
arpl
push
out
in
inc
mov
jl
xchg
jne
icebp
lret
sbb
nop
scas
popa
jae
in
ljmp
lret
popa
xchg
mov
inc
mov
gs
jle
mov
enter
xchg
out
out
fstpl
pop
mov
xchg
lods
aad
mov
push
pop
cmpsl
es
imul
sub
in
add
stc
mov
loope
dec
mov
int
aad
notl
je
testb
push
add
mov
nop
xchg
and
jl
hlt
cmp
dec
divb
mov
and
adc
jno
pop
fcomp
add
fimull
pop
es
fwait
and
push
xchg
cmpsb
lret
frstor
mov
je
mov
rol
adc
mov
adc
dec
xor
js
adc
pop
mov
popf
jno
out
mov
and
out
daa
orl
das
repz
xchg
mov
stos
mov
cmpsb
shl
pop
js
test
adc
bound
pop
add
paddusb
xchg
mov
jecxz
pop
adc
repz
mov
stos
mov
jb
jp
bound
and
add
mov
mov
aad
push
pop
out
pop
inc
test
mov
lods
js
sbb
sub
and
out
arpl
jns
int
jmp
xor
repz
aad
mul
inc
fidivl
jmp
into
imul
xchg
inc
lahf
jns
adc
inc
jno
dec
aam
loopne
cwtl
inc
scas
stos
adc
out
ret
cltd
pop
or
inc
adc
sbb
andl
add
jne
inc
xchg
sahf
mov
or
hlt
adc
dec
push
inc
xchg
push
pop
incb
xchg
mov
ds
movsb
sbb
in
lret
add
sub
sbb
add
jb
imul
add
popf
xchg
movsb
xchg
out
dec
data16
add
sahf
mov
jne
mov
lahf
rcll
add
push
lods
mov
pop
mov
scas
or
stos
xlat
testb
popa
xor
mull
icebp
cmc
mov
dec
hlt
neg
cwtl
mov
test
jge
js
movsb
pop
clc
outsl
sub
lahf
xchg
ljmp
ret
loop
pop
inc
movsl
arpl
adc
xchg
je
add
fildl
ret
lds
fisttpll
loop
fmull
push
dec
and
pusha
sbb
int3
fs
daa
xor
sbb
ljmp
pusha
enter
inc
int
roll
daa
cmpsl
cmpsb
aaa
in
adc
movsb
jle
fmulp
mov
dec
iret
aas
incb
sbb
sbb
push
push
jg
jge
cs
ljmp
fcoml
jno
or
sahf
sub
xchg
inc
inc
sub
outsb
leave
mov
cmp
mov
xchg
push
and
popf
push
dec
and
inc
hlt
inc
sub
scas
insb
pop
and
pop
xchg
pop
jnp
leave
push
je
jl
incl
out
sbbl
imul
into
sbb
fdivrs
dec
js
mov
inc
aam
ret
and
test
sbb
cld
call
push
mov
xchg
js
mov
stc
dec
test
sbb
iret
sbb
xor
dec
jb
lock
fsubs
int3
test
insb
push
mov
push
repz
or
in
inc
inc
push
iret
stos
sar
sbb
sbb
and
dec
mov
sub
and
ret
iret
pop
sub
loopne
stos
inc
dec
fnsave
insb
mov
jno
lret
mov
jle
xlat
icebp
xor
in
push
mov
sbb
mov
dec
inc
adcl
jb
movsl
jne
jbe
pop
stos
jle
cmpsl
sub
mov
jg
daa
jo
repnz
setno
sub
mov
push
sbbb
mov
pop
mov
fs
sbbl
pop
jno
push
push
lret
push
sbb
inc
cmp
sub
xor
push
jnp
jg
call
adc
adcb
pop
lea
dec
add
mov
loopne
dec
xlat
xchg
mov
cmp
mov
movsl
mov
stc
push
jno
and
enter
out
inc
movsl
xor
add
sub
js
cmpsl
jae
pop
xchg
insb
xchg
mov
stc
lea
dec
add
pop
test
pop
addl
sar
fsubl
addr16
ja
jecxz
sub
xchg
pushf
push
xor
fdivrl
dec
add
jge
xor
gs
ficoms
mov
out
imul
xchg
mov
xor
in
push
fsubrl
sbb
pop
or
jns
mov
popa
dec
sbb
fcompl
mov
int3
mov
out
bound
pop
dec
push
xor
lea
call
mov
xor
sub
push
int3
sahf
sub
pop
sub
sub
out
cltd
cwtl
pop
adc
jmp
hlt
xchg
push
aam
xchg
mov
cmc
add
je
andb
out
mov
pop
pop
xor
pop
dec
ljmp
dec
jle
xor
andl
adc
in
push
or
cltd
and
mov
cmpsb
clc
add
mov
inc
fs
fdivrs
pushf
mov
xor
movsb
das
andl
dec
fidivs
push
push
lret
sahf
pop
mov
test
jb
push
shr
add
add
scas
aam
aas
push
adc
push
fstps
pop
cmp
xor
xchg
mov
sub
rol
in
push
cli
ljmp
loopne
xchg
andl
addr16
call
mov
pop
nop
enter
repz
mov
jno
sbb
mull
sub
test
mov
lahf
iret
mov
imul
sub
daa
imul
int
insl
mov
stc
adc
push
or
out
test
in
ljmp
sub
cmp
dec
lcall
gs
scas
jb
imul
lea
xor
inc
hlt
fstl
fisubrl
inc
hlt
fisttpl
mov
adc
imul
std
cltd
sub
cltd
push
adc
out
mov
or
mov
dec
xor
outsl
mov
in
mov
data16
ret
or
mov
inc
push
int
andb
mov
scas
fldenv
and
cmpsb
xchg
jge
mov
pop
sub
cltd
jno
or
mov
sbb
lock
lcall
in
in
mov
fiaddl
jne
rorb
test
or
mov
jge
sub
xor
xor
es
bound
sub
mov
mov
pop
ds
and
jl
sbb
test
sbb
add
mov
sub
jnp
dec
adc
js
insl
mov
into
insl
call
sub
jae
fsubl
adc
mov
mov
dec
and
loop
dec
add
divl
data16
repz
loop
popa
pop
outsl
or
jmp
aad
pop
adc
cmp
jb
add
call
add
lahf
retw
pop
mulb
ljmp
arpl
in
fsubrl
aaa
hlt
dec
hlt
inc
mov
cmp
fildl
sub
and
adc
cmp
jmp
push
in
push
inc
xchg
shrb
js
push
mov
adc
dec
push
jmp
dec
push
ret
or
inc
clts
xchg
jl
pop
cmc
mov
in
bound
sbb
cmp
ja
lcall
push
dec
in
push
xor
jecxz
cmp
es
out
sbb
pop
test
fcmovne
xchg
mov
sub
test
jp
xchg
lds
jge
in
in
fcoms
mov
sbb
dec
aam
sub
push
xlat
test
pop
mov
sbb
push
ds
lea
popf
lods
push
xchg
pop
sub
rcrl
les
fdivs
repz
ficoml
cltd
sub
mov
fidivs
ss
xchg
lea
bound
pop
scas
js
in
ja
in
mov
and
xchg
mov
movsl
dec
cmp
mov
lods
cmc
and
mov
cmc
mov
add
xchg
repnz
repnz
sub
mov
pop
out
adc
push
jg
mov
adc
lcall
xchg
test
lret
mov
pop
testb
stc
stos
adc
stos
popa
shll
xchg
lcall
sbb
arpl
push
lods
fwait
aad
or
xchg
xchg
pop
mov
inc
xchg
imul
pop
int3
add
and
push
clc
rcrb
movsb
fucomp
add
loopne
jle
adc
decl
in
stc
dec
dec
cmp
in
add
cli
cs
xor
sbb
mov
sub
outsl
fidivrl
jns
mov
cmpsb
inc
ss
xchg
int3
loop
shll
pop
mov
mov
xchg
stos
popf
adc
popf
sub
dec
mov
add
gs
scas
in
mov
int3
lods
shlb
pop
add
testb
pop
ficompl
or
adc
pop
add
push
js
enter
jns
sarb
adc
fldenv
xchg
les
pop
arpl
test
in
pop
mov
test
xor
jle
cmc
mov
adc
pop
adc
aaa
add
imul
outsl
int3
sub
add
mov
jl
pop
inc
in
cmp
jle
inc
sbb
dec
push
movsb
pand
pusha
outsb
into
and
inc
adc
mov
mov
js
pop
popf
mov
ret
movsb
mov
and
dec
sti
mov
push
js
fbld
lahf
icebp
nop
push
scas
aad
adc
ret
ss
in
xor
int3
std
out
mov
in
jno
add
adc
xchg
xor
mov
inc
add
jns
lods
out
scas
sub
and
sub
scas
stos
test
jecxz
daa
adc
xor
mov
adc
or
test
or
mov
fstpl
push
mov
mov
sahf
mov
insl
enter
sbb
sub
icebp
sub
or
daa
stc
lock
xchg
sbb
or
sbb
push
mov
gs
mov
mov
mulb
out
xchg
aad
lods
jno
pop
fwait
scas
or
jne
fnstenv
mov
pop
or
aas
jp
jp
jnp
divb
mov
dec
mov
pop
jns
xchg
cli
jp
rolb
sti
push
mov
dec
repnz
pusha
mov
sub
push
mov
jns
gs
data16
pop
negl
cmc
lret
jp
jp
push
mov
jle
mov
das
inc
dec
shl
ret
mov
cmpsl
jg
sbb
rclb
lds
and
fs
leave
fwait
mov
and
inc
lock
or
mov
fsubrp
js
dec
xor
cmp
adc
push
loope
sbb
sub
push
mov
cmp
cmp
in
jl
cli
pop
in
dec
jl
loope
into
orl
mov
jnp
cmp
push
in
adc
mov
push
mov
mov
pushf
pop
push
push
jle
dec
gs
mov
and
das
cli
lock
in
in
rcrl
pop
stc
inc
and
xchg
adc
jge
fldenv
shl
or
fisubs
into
cmp
mov
push
insb
mov
push
mov
scas
sub
into
lcall
xchg
push
cmp
in
scas
xor
aam
nop
inc
inc
add
inc
adc
cld
nop
lcall
mov
cld
push
repz
mov
sub
sbb
js
shll
xlat
icebp
js
jbe
pop
pop
push
iret
mov
imull
lods
insb
and
adc
add
cs
sbb
mov
xchg
mov
dec
fdiv
push
xchg
aaa
sub
std
insl
xchg
bound
ss
inc
iret
icebp
enter
cmpsb
jmp
sub
push
mov
dec
and
test
mov
movsl
jnp
pushl
cmpsb
hlt
es
mov
mov
repz
adc
jg
icebp
repnz
leave
stc
sbb
and
dec
js
inc
ja
ja
lret
adc
add
nop
inc
sbb
or
inc
xchg
in
adc
int
cmp
xlat
adc
push
sub
adc
and
pop
push
test
test
push
cmp
push
cmp
pop
push
lock
rolb
hlt
pop
hlt
add
addr16
lret
cmp
clc
adc
push
loopne
mov
mov
shld
mov
pop
xchg
inc
scas
xor
out
scas
nop
imul
dec
dec
sbb
in
xor
fbstp
out
pop
xchg
testb
ss
test
cs
es
xor
andb
pusha
movsb
scas
dec
jae
jo
mov
imull
xchg
cmp
pop
cmp
je
jns
popa
push
cwtl
loopne
ror
shl
and
xor
das
dec
std
push
dec
jge
daa
lcall
mov
stos
ss
pop
dec
fcoml
dec
test
jb
rcll
adcb
int3
lods
sub
lock
shlb
add
pusha
push
sarb
rclb
sub
int3
cmpsl
repz
cmp
popf
ds
pop
fmull
jle
sbb
insl
cwtl
sub
push
jae
mov
loop
adc
sub
jge
gs
xchg
sbb
inc
mov
out
sti
sub
ret
call
push
push
jg
call
ds
cmp
push
xchg
or
in
push
sub
and
aam
jae
aaa
push
mov
fdivrs
aad
aas
push
jmp
jmp
add
daa
pop
hlt
outsl
ds
and
cmp
pop
insb
ljmp
mov
out
scas
lret
jle
mov
push
sahf
mov
test
stc
les
les
fcomps
push
fstpl
hlt
jns
dec
ret
xor
adc
fdivrl
cs
and
ret
hlt
loop
cs
loopne
add
dec
insl
jmp
adc
lret
adc
sbb
and
js
insl
icebp
repnz
mov
dec
push
loopne
aaa
iret
dec
ss
lock
xchg
sbb
push
mov
adc
out
fsubr
mov
movsb
sbbl
mov
cmp
scas
and
mov
mov
mov
dec
repnz
or
addr16
sub
sub
arpl
xor
lcall
or
mov
add
lods
xor
sahf
inc
adc
ja
dec
jmp
pop
aam
pshufw
leave
mov
xor
inc
push
into
xor
jnp
addl
mov
cmp
xor
or
daa
push
mov
pop
lods
push
mov
jbe
jl
bound
into
push
add
jae
pop
sub
addr16
addr16
dec
shlb
xor
xchg
sub
sub
cmp
enter
mov
mov
or
les
and
lahf
addb
push
mov
sbb
cmpsl
pop
lret
xchg
pop
dec
jmp
xchg
cmp
popf
fisubrl
sub
clc
fmul
negb
mov
cmp
aaa
cmp
xor
pop
fcom
add
pushf
sub
or
cmp
cld
out
lea
clc
notl
sbb
rcrb
jo
cmpsb
sub
sub
ret
or
aaa
out
sub
mov
fadds
movsb
das
ljmp
mov
add
in
cmp
inc
fldl
mov
xchg
arpl
push
insb
add
xorb
cmpsl
or
pop
dec
mov
lods
fs
cmp
mov
sub
push
hlt
mov
ds
xor
adc
xchg
lods
lds
cmp
mov
das
xchg
mov
dec
bound
mov
dec
jl
pop
jp
xlat
cwtl
add
or
cmp
or
fwait
sbb
and
pop
test
test
fwait
add
test
mov
inc
addr16
das
in
addr16
dec
arpl
fwait
jae
sub
mov
pop
inc
out
or
fcmovnb
imul
mov
pop
cld
sbbl
sbb
incl
push
data16
push
mov
dec
movsl
xor
lcall
cmp
xor
jnp
mov
iret
mov
inc
sahf
jb
stc
leave
lahf
mov
shrb
pushf
inc
xchg
mov
pop
pop
outsl
movsl
enter
insb
and
jge
sbb
pop
aas
add
pop
loope
sub
xor
dec
jne
ljmp
cmp
lret
fscale
xchg
dec
mov
out
aas
sub
and
nop
rcrl
daa
stos
and
adc
xchg
pop
mov
lods
xorl
pop
and
sub
xchg
addr16
fnstenv
and
ds
inc
dec
sbb
push
lods
inc
ljmp
aas
and
sub
iret
dec
ljmp
psadbw
add
nop
xchg
pop
cmc
in
cmpsb
xor
adc
ds
gs
xor
dec
xor
lock
or
pop
mov
inc
mov
movsb
jb
and
add
pop
and
jnp
das
sbb
dec
mov
out
dec
xchg
addr16
mov
lahf
cmp
push
mov
fwait
mov
mov
imul
out
dec
add
jnp
mov
mov
lods
mov
cmpsl
shrb
cmp
sahf
stc
pop
and
lock
sub
int
mov
loope
insb
popa
xchg
jnp
fdivrs
or
pop
lock
cmp
dec
ss
shl
cli
dec
push
and
clc
aaa
cmp
or
push
sahf
test
sbb
movb
mov
mov
cmp
xor
mov
push
xchg
jmp
or
int
and
pop
push
push
mov
mov
ljmp
inc
loope
jge
out
and
add
mov
ret
bound
or
mov
lock
mov
mov
fisubrl
pop
xor
push
cli
cli
fsubrs
pop
loop
fisubrl
mov
jno
cmp
and
jne
repz
push
jge
int
jg
push
pop
addr16
jne
movsb
js
cmpsb
loop
push
out
cmc
out
fstpt
imulb
aas
aaa
frstor
test
mov
mov
fnstenv
mov
sbb
lret
lcall
sub
adc
inc
push
out
sahf
mov
cli
cmp
xor
mov
mov
mov
pop
push
gs
mov
dec
pop
fidivrs
jmp
sbb
leave
paddb
mul
dec
cmc
les
adc
mov
adc
in
stc
test
jb
lcall
inc
push
pop
and
fistps
jbe
push
dec
mov
aam
add
dec
adc
ss
pushf
shll
aaa
mov
adc
xor
push
inc
mov
fisttpll
and
mov
pop
push
mov
sub
sub
xor
fcmovnb
ret
pop
inc
gs
aaa
pushf
repz
rcrl
jnp
fistpll
jo
or
cmp
cmc
adc
rcr
mov
jno
xor
jge
pushf
mov
xorb
sahf
push
and
inc
xor
ror
fisttps
dec
ret
test
in
dec
out
js
sar
in
test
pop
xorl
scas
mov
ficoms
int3
cltd
in
cmp
sar
stos
sbb
pop
fbstp
dec
ljmp
cmp
dec
or
mov
adc
cmpsl
fucomp
aad
int3
sub
test
js
outsb
sbb
imul
mov
sbb
and
and
jo
mov
fcmovnbe
imul
mov
loop
addr16
xchg
inc
cmp
aad
push
sarl
sub
adc
xchg
or
imul
sbb
test
fisttpl
into
sub
sbb
jne
push
push
mov
mov
dec
jl
mov
push
mov
dec
int
push
sbb
loopne
pop
andl
leave
ficomps
mov
jg
and
sbb
mov
enter
dec
mov
gs
pop
enter
adc
push
bound
aas
add
cwtl
push
sbb
xchg
mov
data16
cmp
jle
arpl
fnstsw
cwtl
sbb
lock
lea
sbb
xor
das
loope
jno
and
and
inc
pusha
aam
and
dec
test
jg
sub
sahf
pushf
in
mov
stos
push
or
lret
or
cmp
clc
aas
clc
adc
daa
pop
xor
mov
sti
loop
stc
shll
icebp
and
icebp
out
pop
push
sbb
rcr
xchg
mov
cmp
xor
les
out
movsl
mov
sti
outsb
lock
mov
out
bound
in
push
push
loop
jae
scas
fistps
pop
jae
fs
cld
xor
in
add
dec
jp
xchg
fwait
icebp
add
push
dec
mov
aas
mov
inc
cmpsl
jns
adc
jne
dec
ljmp
fsubp
mov
fmull
push
enter
ffreep
scas
push
add
outsl
inc
daa
cmp
push
cmpb
test
paddd
aas
test
mov
insl
call
mov
inc
insl
pop
rclb
cmp
adc
imul
stos
mov
adc
sahf
cmp
ljmp
inc
sbb
mov
ja
mov
pop
xchg
lcall
mov
ljmp
jne
xchg
int
mov
pop
incb
loop
xchg
mov
add
cmp
dec
pop
hlt
rclb
push
nop
add
cmp
into
lret
test
in
xchg
push
cmp
lea
fld
xor
lahf
mov
cmp
sbb
test
bound
add
test
leave
cmpsl
pop
mov
cmp
rcll
in
mov
and
call
pop
mov
in
das
fstps
stos
pop
imul
scas
cmp
test
popl
icebp
xchg
cmp
push
enter
cli
dec
mov
lods
pop
jnp
int3
push
add
lret
mov
push
push
leave
cmpsb
adc
cmp
test
mov
lea
xchg
jb
push
ss
mov
push
jno
repnz
cmp
sbb
jb
pop
sbb
jae
addb
cld
int3
sub
sbb
arpl
stc
js
add
call
scas
push
xchg
dec
in
mull
stos
fadd
mov
add
gs
dec
cwtl
push
sbb
pushf
dec
dec
mov
ljmp
cmp
int3
xor
pop
ss
std
xor
js
loop
mov
pop
sbb
inc
lahf
stc
inc
aas
dec
push
adc
or
cmp
sbb
aas
insb
add
xlat
insl
mov
adc
popf
out
lods
loop
lds
xor
and
mov
or
push
fwait
out
mov
aas
aaa
jg
fstpl
clc
sahf
loope
mov
shld
mov
sub
sbb
add
xchg
pop
insb
arpl
subl
adc
cli
xchg
js
pop
lods
mov
push
ficomps
mov
jnp
cmp
in
shrb
mov
call
andl
loopne
rorl
sbb
fsts
bswap
dec
mov
adc
mov
daa
adc
fsubrl
mov
pop
xchg
aad
in
es
mov
fsubrs
add
inc
xchg
dec
sbb
pop
mov
pop
or
outsl
xchg
inc
popa
dec
scas
adc
sbb
and
movb
scas
mov
daa
jmp
inc
stc
push
sub
and
inc
cld
or
rcll
bound
xchg
inc
in
sbb
stos
mov
mov
mov
mov
lods
lahf
cs
jbe
jle
rorb
lds
and
add
pop
or
sub
test
push
pusha
pop
out
mov
dec
aad
dec
sub
test
xlat
dec
fxch
mov
fnsave
jae
aas
jp
jl
mov
aam
jmp
movsb
dec
mov
or
lea
push
push
jmp
mov
sub
mov
hlt
mov
inc
xor
cmp
push
aas
rcll
ja
xor
rolb
leave
inc
push
jl
mov
clc
add
jg
aaa
ficoms
je
scas
mov
add
ljmp
push
and
mov
pop
mov
cmpl
in
jmp
jl
pop
stos
in
stc
add
or
fisubrl
mov
add
sub
fisubl
inc
out
lret
cmpsl
jnp
leave
adc
xchg
cmp
fstps
sbb
sub
push
dec
ljmp
mov
es
cmp
sahf
in
orb
add
mov
jbe
fmull
cmp
xchg
cmp
sahf
lahf
mov
dec
or
fistpl
sbbb
mov
popf
mov
subb
cmp
sti
ror
outsb
mov
pop
sub
mov
test
push
fiadds
xchg
sub
adc
add
cltd
xor
shll
xlat
sub
aas
mov
cmc
and
call
movsb
pop
sub
scas
push
mov
jo
call
aam
stos
inc
test
inc
scas
adc
test
pop
sub
cmpsl
out
std
jp
jmp
add
out
js
pop
xor
jne
iret
movsl
add
dec
jle
jl
push
mov
ds
mov
int3
push
cltd
aad
lcall
adc
push
enter
fsubs
push
jmp
jl
xor
scas
mov
rcl
mov
ja
dec
cmpsb
and
jae
pop
hlt
xchg
lret
std
adc
xchg
inc
xchg
lea
psubq
int3
pop
movsl
imul
mov
mov
xor
popf
lods
jge
mov
aad
rolb
les
cld
add
fndisi(8087
sarl
fdivrs
insb
jno
loope
add
rcl
arpl
or
cmpsb
fsubrl
or
test
add
stc
aas
cmp
out
jo
dec
mov
adc
addl
or
adc
in
xchg
cwtl
decb
xor
cmp
pop
xor
jo
xchg
iret
jecxz
jbe
push
jb
fstpt
test
call
es
jmp
sahf
jmp
inc
scas
pushf
xor
sbb
pushf
xchg
add
addr16
std
xlat
mov
push
aam
loop
pushf
dec
sbb
add
stc
cmp
jae
pop
push
mov
add
ljmp
in
dec
in
push
pop
mov
paddd
arpl
sub
rcl
xchg
dec
repnz
add
jge
cmpsl
add
ds
loopne
fiadds
mov
pusha
lcall
test
xor
cmpsl
dec
add
or
sbbb
add
adc
adc
sti
jle
add
cs
cmpsl
jbe
stos
repz
sub
adc
int3
jo
inc
dec
cmp
mov
aaa
mov
cmp
lret
arpl
pop
push
imul
mov
mov
push
jno
jae
pop
mov
clc
and
leave
xor
mov
add
sahf
mov
outsb
xor
in
add
popf
rolb
dec
cwtl
std
fsubrs
and
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
aaa
shrl
sub
mov
xor
pop
mov
sahf
pop
pop
into
fidivrl
mov
aaa
push
adc
and
sub
add
or
and
icebp
xor
lods
sbb
adc
push
outsl
cltd
out
cmpsb
bound
add
stos
sub
test
push
mov
cmp
xchg
jmp
out
shrb
mov
icebp
leave
xchg
sub
cmpb
repnz
mov
aaa
pop
xor
dec
aaa
icebp
loopne
cmp
or
shlb
sub
imul
cmp
add
push
adc
adc
fdivrs
pop
bound
je
sub
loopne
movsb
jmp
dec
xchg
mov
fiaddl
xor
pop
jno
insb
sbb
fistl
inc
cli
cmpsb
mov
imul
push
xchg
stos
jno
push
pusha
adc
pop
jle
sbb
leave
push
ror
stc
mov
sub
inc
push
dec
clc
je
stc
xor
icebp
sub
repnz
xchg
test
sub
pop
lret
je
scas
mov
cmp
dec
and
pop
xchg
lea
out
pop
and
jge
scas
cmp
mov
ret
gs
mov
jnp
inc
aad
push
outsl
in
jg
xchg
push
pop
movsl
jbe
mov
jb
dec
inc
daa
push
stos
pop
aas
inc
push
lods
les
adc
das
sbb
xchg
jl
jbe
mov
sub
lods
shl
add
ret
idivb
clc
and
rcl
or
stos
mov
xchg
adc
pop
push
cmp
lret
sub
addb
xor
add
mov
lods
pop
push
xor
pop
loop
lock
mov
fimuls
xchg
xor
jl
arpl
sub
cmp
sahf
xor
inc
cmp
pop
fdivl
mov
insl
leave
inc
cmp
cmp
insb
xor
fstpt
rol
psrlw
cmp
ret
mov
repnz
dec
mov
and
lret
mov
or
sub
and
aas
sbb
fwait
daa
dec
add
sbb
and
addr16
lea
mov
adc
sbb
ret
test
mov
mov
jae
shlb
cmc
ja
sub
sbb
arpl
pop
xchg
fs
xor
in
xchg
sub
mov
addr16
cmp
or
inc
adc
inc
xchg
add
idiv
and
xor
cmp
jp
iret
outsl
sarl
sbb
cmpsb
jno
rorl
and
test
int
int3
push
adc
push
jns
dec
mov
aad
inc
fsubs
outsb
and
lahf
sarb
or
push
stos
testl
mov
xor
sub
dec
mov
shll
movsb
mov
and
mov
sub
leave
mov
fcmovne
rclb
in
sbb
adc
jg
push
jp
std
sbb
dec
rep
insb
cld
insb
xchg
mov
add
loop
jnp
xchg
ja
add
int
lock
repnz
adc
aad
test
dec
mov
lahf
test
jl
aaa
pop
mov
stos
jmp
xchg
fnstenv
cmc
adc
cmpsl
inc
mov
sbb
cld
pop
outsb
pop
sbb
push
out
dec
testb
xchg
jae
jnp
cltd
fidivrl
ljmp
jo
scas
and
std
jecxz
mov
jecxz
push
fmull
ret
mov
or
cli
cmc
test
pop
fsubr
push
fsubrl
das
jns
xlat
pop
fstl
push
bound
push
aad
in
mov
xor
lds
loopne
jmp
fildl
ret
std
xor
ret
cltd
and
and
fldt
sbb
xor
or
aad
xchg
ret
rcll
lret
out
popl
pop
out
xchg
into
aad
xor
sbb
adc
xchg
ret
das
imul
lods
gs
into
loop
aas
sub
and
pop
lret
adc
hlt
sbb
test
dec
and
and
jo
outsl
and
pop
lea
and
mov
pop
inc
les
rcrb
repnz
repz
push
adc
dec
mov
mov
jae,pn
imul
cmp
xchg
out
xchg
sub
sub
jmp
adc
mov
fmuls
leave
dec
inc
mov
jge
fwait
les
sti
shrl
or
inc
test
sub
loopne
test
in
je
nop
mov
in
sbb
jnp
out
loopne
jne
mov
or
cltd
scas
in
and
inc
dec
bound
scas
mov
leave
pop
repz
push
daa
sti
insl
fadds
mov
mov
mov
or
aas
mov
dec
jbe
fs
sub
lcall
lock
scas
loop
fisubs
movb
inc
hlt
push
or
ja
pop
sbb
lret
xor
and
pusha
mov
lea
movl
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
xchg
mov
add
fldenv
