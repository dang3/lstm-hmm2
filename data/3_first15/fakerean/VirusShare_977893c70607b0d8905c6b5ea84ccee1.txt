sbb
add
mov
fisttpll
xchg
sub
inc
mov
test
and
xchg
and
add
xchg
cmp
mov
push
rcrb
repnz
outsb
cmpsl
mov
and
int3
pop
jl
push
incl
in
dec
pop
xor
pop
cld
adc
adcb
mov
xchg
cmc
sub
mov
popf
roll
pop
lods
loope
add
test
pop
and
push
cld
push
sub
pop
fldt
into
outsl
dec
pop
fcompl
jb
roll
fs
dec
mov
mov
int3
mov
inc
std
test
daa
xchg
xor
test
roll
mov
loope
testl
out
cmp
out
loop
pushf
push
out
pop
orl
pushf
inc
adc
sarl
repnz
xor
dec
push
stos
cmpsb
xor
push
ret
mov
iret
cmpsb
xchg
adc
mov
cltd
or
psrld
orb
mov
aas
lods
sbbb
xor
xchg
mov
or
fs
mov
jge
cwtl
pop
sub
mov
pmullw
repnz
fwait
stos
or
inc
mov
add
jns
and
rcrb
lea
add
push
pop
jmp
sub
into
aaa
cmpsb
dec
add
movsl
daa
inc
sub
addr16
subb
xchg
jge
and
cmp
imul
mov
jl
and
xor
xor
pop
pop
cmp
sti
jg
xor
xchg
fsubrs
push
mov
movsb
jnp
lea
jnp
inc
add
repz
or
gs
mov
sti
mov
mov
call
fimuls
fcomps
sub
mov
mov
fmull
lods
mov
aad
fsubrl
out
mov
stos
mov
pusha
aad
add
mov
mov
xor
test
push
out
pop
cmp
fcmovne
dec
fimull
mov
jae
nop
outsl
ret
dec
daa
in
ja
cmp
add
cmpsb
outsl
lahf
adc
arpl
push
mov
xchg
fcmovnb
flds
pop
pop
and
xor
mov
cld
sub
andb
dec
lea
adc
mov
and
sub
sub
outsb
xchg
add
out
pop
arpl
mov
cld
pop
aas
data16
mov
es
jns
cmc
pop
inc
repnz
shrl
in
mov
fwait
sbb
adc
mov
sub
repnz
sti
sbb
icebp
adcb
shll
fisubrl
dec
sub
mov
fidivrs
jnp
addl
call
mov
dec
insl
stos
or
dec
adc
dec
mov
pop
adc
in
shrb
and
scas
lds
mov
test
rcll
shlb
add
pop
inc
mov
call
jle
leave
sub
shlb
inc
and
mov
push
fisubrs
test
inc
fmuls
and
xchg
rcrb
dec
int3
jg
inc
test
sbb
cmp
push
rcrl
ret
or
sbb
push
cmpsb
mov
data16
scas
xor
dec
push
punpckhwd
orl
mov
sub
cmp
std
mov
or
lahf
cmp
frstor
repnz
xor
int
sarb
or
stc
shll
dec
aam
inc
fbld
outsb
ret
outsl
stos
inc
inc
ds
outsb
stos
stos
and
or
jmp
std
scas
inc
les
mov
fwait
pop
es
int3
and
int
jne
xchg
dec
pop
jno
lahf
pop
mov
cmp
mov
xchg
adc
cltd
ficoms
les
push
and
cld
mov
cmc
pop
push
cmp
dec
pop
jecxz
push
clc
pop
sbb
loop
xchg
jmp
cmpsl
xchg
jle
in
repnz
ret
add
sbb
cmp
add
jmp
aad
xor
sbbl
cmp
fisttps
outsb
mov
icebp
pop
xor
lret
inc
mov
mov
pop
mov
clc
mov
addb
std
xor
add
cmp
cs
xchg
sbb
cmp
mov
iret
mov
push
addl
sbbl
jl
mov
mov
test
aas
mov
jb
jmp
faddp
cs
xor
push
sub
mov
mov
mov
add
sub
fstp
shrd
lods
push
and
daa
repnz
cmp
mov
and
std
ss
inc
adc
dec
pop
neg
in
scas
xchg
lock
push
cmpsl
and
mov
sahf
imul
icebp
ret
fs
jmp
push
inc
xchg
xchg
and
lahf
fcom
sub
aaa
sub
mov
ret
sarb
adc
sbb
push
inc
and
stc
ja
inc
fisttpl
jbe
xchg
and
jecxz
pop
pop
out
mov
mov
into
adc
xchg
shlb
insl
add
mov
in
stos
fucomip
or
out
pop
mov
rcrb
in
loopne
jnp
and
pop
xchg
adc
int
fdivrl
add
lock
xor
inc
pop
pop
ljmp
xchg
leave
repnz
sti
jnp
push
pop
scas
adc
insl
das
pop
jecxz
xlat
cmp
les
repz
lcall
test
out
push
add
mov
mov
mov
sub
mov
je
xchg
and
adc
pop
pop
xlat
mov
not
mov
jnp
mov
enter
mov
das
xchg
ret
and
inc
icebp
pop
sub
mov
hlt
push
cmp
popf
bnd
xchg
xorl
leave
jo
fbstp
insb
in
inc
mov
inc
dec
mov
out
movsb
sahf
call
jl
pop
inc
ljmp
sarb
cld
push
pop
mov
cmpsb
xchg
outsl
shll
out
lahf
out
jb
psubq
sbb
pop
sub
in
and
addr16
mov
lret
test
xchg
cmp
sub
cmp
ljmp
roll
mov
sub
ja
mov
lahf
lods
xchg
fcmove
popf
push
cwtl
ds
ldmxcsr
into
xlat
loop
leave
mov
loopne
mov
dec
or
lods
into
dec
dec
add
stc
mov
push
adc
mov
in
fucomp
roll
mov
xor
ss
push
popa
int3
lods
sub
jecxz
ret
mov
out
and
push
add
std
lea
push
lahf
lcall
push
lcall
cmp
nop
mov
int3
loopne
inc
cmc
jbe
fldenv
fisubrl
outsb
dec
cmpsl
or
add
sub
stc
les
es
pop
mov
das
push
inc
mov
push
pusha
rcl
enter
test
aad
sub
int3
addl
jo
fsubs
nop
mov
loope
inc
add
fadds
enter
daa
mov
push
mov
repnz
jbe
std
roll
or
xor
into
iret
add
xchg
pop
ljmp
inc
jns
sub
jmp
cmc
mov
mov
jecxz
out
iret
adc
insb
inc
outsl
add
xchg
cs
into
add
xchg
mov
add
data16
les
cmp
repz
out
insl
fists
fistps
xchg
movsb
jmp
cmp
mov
repz
pop
insb
or
cwtl
int
sub
dec
adc
xorl
addb
push
jne
jb
pop
xchg
test
jge
out
int3
lret
test
negb
ret
mov
stos
dec
sbb
je
pop
jbe
es
arpl
jns
or
or
pop
sub
or
xor
loopne
xor
push
add
jns
cmp
lods
fisttpl
mov
jnp
rcll
arpl
xchg
adc
jmp
mov
mov
sub
sub
rcrb
lret
add
add
orb
addr16
scas
adc
pop
psraw
hlt
pushf
mov
dec
fstp
sub
xor
incb
into
andl
mov
or
popa
aaa
aad
xchg
dec
leave
dec
dec
and
push
loopne
sub
movsl
xchg
orb
daa
sbb
cli
test
out
fsts
adc
sbb
popf
popf
aas
outsb
sub
mov
and
data16
pushf
push
cld
fmuls
mov
jg
js
jae
or
test
or
mov
lods
clc
rorb
daa
hlt
int
cmp
and
int3
pop
loope
lret
sub
or
frstor
mov
inc
inc
jp
sbb
insb
xchg
mov
mov
push
test
fstps
mov
stc
sbb
adc
ljmp
mov
jmp
jp
fs
lds
dec
pop
dec
push
mov
mov
js
mov
and
loopne
jns
pushf
lret
mov
fidivrs
dec
sub
push
cmp
push
sbb
mov
out
fsubs
mov
sub
sub
pop
and
jne
sbb
push
test
sub
out
insl
fnsave
xchg
sbb
sub
mov
test
xchg
ret
pop
push
inc
loop
out
in
ss
ds
stc
cmp
lret
push
adc
jo
loopne
enter
push
push
xchg
jno
push
loopne
ret
sbb
shlb
push
mov
and
shlb
pop
das
cmp
sub
xrelease
mov
and
add
inc
pop
xor
inc
mov
or
xchg
mov
inc
dec
pushl
rclb
addr16
jns
jge
or
mov
int
shl
bound
jb
pop
push
mov
enter
outsl
or
add
cwtl
add
idivb
and
inc
sbb
add
inc
pslld
push
test
dec
xor
add
iret
xacquire
insl
or
and
cld
xor
movsl
sub
jmp
dec
push
lret
bound
test
jge
rorl
mov
pushf
popa
stos
mov
lret
jnp
add
ret
test
arpl
shl
inc
sbb
in
fucom
fxch
lret
lret
jle
shll
movsb
std
sub
or
and
or
jae
adc
sub
mov
mov
test
pop
test
lea
ret
pop
push
sub
sub
nop
jmp
dec
lret
sarb
mov
lods
pop
and
pop
jo
imul
push
jmp
fwait
inc
xorb
push
mov
insb
sub
cmpsb
andb
pop
ret
ret
fdivp
xchg
les
push
loop
push
ss
inc
int
push
push
popf
sub
inc
cmp
fsubl
aam
lea
addr16
lods
jl
xchg
mov
mov
imul
cmp
ja
xor
sbb
sti
adc
dec
pop
shl
addr16
cmp
out
subb
xchg
cmp
in
sub
mov
mov
inc
mov
test
daa
mov
add
test
loop
leave
imul
jb
pop
pop
outsl
jge
jle
or
test
pop
cli
xlat
lods
stos
in
mov
xor
cmc
insb
and
in
sub
jo
nop
stos
xchg
mov
movsb
stc
mov
pop
jbe
fcoms
arpl
mov
cltd
test
xchg
in
pushf
pop
lcall
jnp
insb
pushf
push
dec
addl
idivb
fdivs
rcrl
mov
fmulp
or
andl
orb
jmp
xor
mov
inc
push
or
aam
cmp
aad
cmpsb
dec
mov
arpl
lret
out
cmpsb
pop
in
mov
pop
ret
in
inc
jae
clc
lock
iret
or
mov
inc
jnp
test
sbb
push
test
ds
rcrb
push
daa
loop
inc
popf
addr16
lcall
sbb
out
inc
sbb
outsl
data16
out
xchg
aam
mov
jge
xchg
bound
jecxz
dec
movsb
arpl
imul
outsl
pop
and
decl
arpl
sub
test
movups
scas
inc
std
cmp
add
xor
sbb
out
sbb
popa
out
lea
xchg
jmp
out
and
mov
mov
mov
test
bound
fidivrl
adc
lcall
push
je
xor
in
jbe
xchg
pop
jmp
sbb
je
cld
lock
pop
adc
mov
mov
cli
jno
inc
test
dec
mov
mov
mov
imul
pop
dec
in
repz
fdivrp
aas
push
leave
push
loope
outsl
test
div
daa
int
movsb
fstpt
sbb
xor
jo
jbe
cmp
das
pop
subl
cmp
cs
sub
adc
daa
insb
dec
cmp
int3
popa
loopne
sbb
mov
pop
ret
aas
adc
stos
jo
cmp
sbb
push
stos
scas
clc
or
leave
xor
test
dec
mov
pop
inc
int3
pop
pop
push
das
push
test
xchg
cltd
repz
push
int3
imul
add
ret
mov
pusha
sbbl
jg
mov
cpuid
xchg
in
fildl
fisubrs
cmpsl
sarl
sbb
adc
je
in
andb
mov
cmc
dec
int
test
int
inc
jge
ss
mov
jg
shll
sbb
gs
je
cmp
fsubrl
cltd
sarb
cmc
dec
jns
scas
cld
dec
dec
cmp
les
arpl
mov
rcl
mov
jo
cli
mov
cmc
les
shll
rolb
ficompl
cmpsl
jg
out
sub
loopne
push
cmp
rcll
mov
ljmp
dec
es
shll
cmp
test
xchg
add
movsl
lea
inc
xorl
into
subl
mov
or
std
pop
fwait
xchg
jecxz
jne
cltd
jbe
in
lcall
lds
mov
in
sbb
enter
fwait
lret
adc
mov
dec
scas
cmp
jae
pop
arpl
shl
and
and
sbb
mov
test
dec
test
movsb
xlat
cmp
int
les
arpl
push
addr16
jge
sbbl
mov
pop
sbb
jno
sbb
sub
enter
fsubp
pop
stc
mov
stos
sub
or
dec
jl
push
mov
mov
add
sbb
add
jg
mov
xchg
mov
inc
test
or
or
cmc
stc
dec
jo
lahf
lahf
outsl
pop
adc
sub
xlat
mov
pop
cmp
xchg
std
test
inc
adc
cmp
xchg
xor
mov
int3
push
jne
pushf
popa
and
testb
scas
aad
pop
loop
jp
movsb
in
scas
scas
in
inc
xchg
repz
lods
xchg
push
or
int
xor
xchg
fbstp
mov
xor
add
sub
ss
pop
sbb
sub
out
test
mov
and
leave
sahf
fwait
sbb
xor
imul
mov
adc
out
mov
adc
inc
or
loope
mov
xor
into
xchg
into
ret
push
xor
js
fdiv
int
fldcw
push
push
sarl
cmpsb
inc
sub
jno
scas
insb
sbb
push
jle
stos
inc
imul
out
dec
outsl
jg
inc
hlt
cmpsl
sub
pop
jo
dec
add
test
jle
in
movb
mov
pusha
sub
dec
jecxz
aas
popf
loop
in
fnstenv
push
je
sub
movsb
std
in
fwait
aad
jg
ljmp
jns
pop
sarb
cmp
mov
mov
sub
inc
icebp
inc
xor
psrld
inc
movlps
jl
stos
jp
fwait
xchg
inc
xorl
adc
stos
push
popa
pop
lods
test
ret
mov
lea
rcrb
int3
shrb
shl
loope
dec
fldenv
inc
mov
ja
fs
shlb
push
xchg
into
fcmovnb
inc
jecxz
gs
and
mov
cmp
mov
or
or
push
push
test
imull
shrb
lock
popa
test
xor
xor
test
outsl
jecxz
das
loopne
cmc
push
mov
xor
jl
stos
aad
call
mov
mov
lcall
sbb
jne
add
xlat
adc
lock
sub
cmpsl
popa
push
sbb
dec
repz
lret
imul
cmpsb
add
enter
xlat
or
adc
shlb
mov
inc
jmp
mov
xlat
cmc
lods
mov
jmp
sub
sub
insb
pop
cltd
mov
stos
pop
mov
mov
cli
ds
fmul
push
and
mov
inc
mov
mov
pop
shl
pop
jp
adc
add
cmpsb
rcll
cmp
push
insb
cmp
xchg
test
imul
dec
pop
or
dec
pop
repz
shrl
push
push
add
pop
pop
xchg
xchg
movsl
mov
fildll
repnz
or
cmp
lret
nop
into
lret
sbb
pop
ds
add
cmp
mov
sub
div
inc
or
enter
mov
pop
in
mov
imul
mov
push
push
outsb
mov
sbb
ds
and
adc
xor
push
pop
adc
fcomps
rolb
nop
stc
lret
or
movsb
cmpsb
ficompl
stos
dec
jnp
and
or
sbb
cmp
bound
sbb
mov
jae
fcom
fidivrl
lcall
mov
xchg
jns
and
lods
mov
mov
or
dec
mov
fwait
test
adc
dec
or
jne
cmp
repnz
ret
inc
wrmsr
test
pop
repnz
in
sarb
sbb
add
rcll
imul
std
adc
push
dec
xchg
dec
in
dec
sub
lods
jno
mov
mov
test
jecxz
aad
lahf
mov
iret
sbb
cmp
dec
dec
lret
adc
out
cwtl
test
call
xchg
nop
adc
inc
pusha
rcr
dec
xor
pushf
dec
xchg
sahf
adc
jno
pop
inc
adc
aas
aas
inc
iret
imul
xchg
pop
inc
sahf
xlat
jbe
ja
or
decl
jne
cmp
cmp
pop
jbe
enter
pop
repz
mov
mov
mov
inc
divb
rcll
inc
pop
ret
repz
mov
dec
and
cmp
inc
std
mov
dec
js
imul
test
dec
ljmp
mov
rorb
fisttps
mov
xchg
cltd
stc
imul
movsb
jne
insb
mov
mov
mov
sahf
jbe
or
xchg
hlt
hlt
ja
push
push
jecxz
daa
hlt
lds
cmpl
pop
jno
mov
adc
into
iret
xor
fsub
loop
in
jmp
inc
rcll
and
add
pop
fcomip
mov
leave
sub
push
lret
lahf
cmp
notl
lidtl
add
fstpt
cwtl
movsl
and
add
cmp
xchg
lock
pop
je
jecxz
imul
loopne
cmp
nop
lcall
xchg
int3
sti
fdivrp
insb
inc
mov
cmp
bound
shlb
xchg
ljmp
add
stc
pop
shr
fdivl
mov
rcl
push
dec
add
inc
add
adc
add
push
stos
mov
xor
test
sbb
imul
and
hlt
sbb
adc
popa
cmpb
inc
and
jge
hlt
push
xchg
mov
dec
test
stos
pop
ret
inc
jo
inc
call
movsl
fisubrl
cwtl
sbb
stos
popa
scas
mov
test
adc
cwtl
adc
testb
mov
fsubrl
pop
jecxz
dec
dec
jl
lsl
in
mov
loop
test
lcall
lret
std
sub
or
adc
jo
mov
test
in
loopne
xchg
ljmp
or
inc
lcall
push
pop
mov
pusha
push
mov
sbb
lods
add
stos
hlt
pop
xor
fcomps
dec
int
lds
stos
push
mov
sbb
hlt
test
mov
out
pop
add
sub
sub
and
popa
inc
push
jbe
add
imul
mov
cmp
mov
mov
mov
jb
mov
xchg
xchg
sahf
dec
sub
sbb
jp
arpl
adc
adc
inc
ja
mov
data16
and
jae
jno
insl
pop
push
aad
pop
push
testb
push
xchg
xchg
or
out
outsb
mov
pushf
push
cmp
mov
jbe
mov
pop
adc
es
sub
insl
add
std
ss
mov
mov
or
sub
sar
inc
pop
dec
sbb
push
xchg
repnz
sbb
mov
sbb
stos
movsl
idiv
pop
xlat
fbld
cmpsb
jbe
mov
enter
daa
sbb
in
xchg
xchg
cmpsl
sub
inc
mov
mov
push
bound
lock
test
cmp
int
lea
mov
stos
mov
jae
shufps
mov
cmp
rcr
jecxz
cmc
lret
add
or
jl
into
pusha
sub
imulb
push
jne
nop
lahf
loopne
push
pop
outsb
sbb
aaa
inc
je
rclb
cmp
mov
jmp
xor
adc
cltd
test
hlt
or
std
push
in
pop
jg
aam
adc
ficoml
ret
xchg
add
lret
xchg
push
mov
cmp
aas
jg
inc
lds
fsincos
icebp
cmp
arpl
pop
loop
jnp
lret
bound
mov
int
push
nop
lods
xor
pop
fisttpll
push
mov
leave
mov
inc
add
xchg
sahf
das
loopne
not
sub
clc
sbb
pusha
mov
pop
daa
lds
jno
dec
aad
sarb
rolb
out
adc
call
popf
cld
into
xor
out
cmp
cmp
gs
fistpl
adc
xchg
mov
fcmovu
es
dec
dec
fbld
jbe
xlat
mov
movsb
dec
scas
add
push
int3
mov
out
lods
mov
inc
mov
dec
std
js,pn
or
std
movsb
jmp
int
inc
pop
insb
test
jne
dec
jae
js
jmp
cmp
jb
dec
jbe
sbb
test
dec
pushf
xchg
aam
mov
test
inc
dec
dec
inc
insb
pushf
xor
lret
js
adc
add
adc
dec
out
pop
cld
adc
loope
inc
xor
jo
jge
add
mov
stos
ret
push
test
push
call
insl
mov
cltd
enter
adc
push
popf
pusha
stos
mov
adcb
adcl
jbe
imul
lods
mov
dec
lret
enter
dec
xor
sub
cmp
xlat
push
sahf
jbe
mov
adc
pop
xor
mov
repnz
jnp
jmp
xchg
sub
test
fcoms
loop
lods
add
xchg
inc
push
pop
loop
and
fadds
pop
scas
shl
sbb
cmp
push
out
dec
pop
sbb
andl
add
mov
sub
sbb
movsl
subb
outsl
inc
sahf
sbb
sub
xchg
adc
outsb
int
clc
imul
in
jl
jg
cld
xchg
in
add
sti
xor
mov
dec
push
outsl
dec
or
ss
mov
or
push
mov
movsl
xchg
push
icebp
add
inc
repz
push
or
jo
mov
or
data16
js
sarb
sti
pop
out
add
jbe
int3
aad
mov
out
pop
jns
xchg
loopne
dec
enter
pop
mov
push
jne,pt
and
dec
test
jne
dec
notl
xor
cwtl
and
int3
jge
pop
fldcw
loop
dec
enter
adc
jno
out
aad
push
and
out
loop
std
sub
lods
dec
inc
mov
pop
pop
sbb
mov
test
fdivl
dec
repz
mov
cwtl
das
adc
mov
xlat
xchg
outsl
adc
mov
jne
ds
sbbl
aam
xchg
xor
scas
dec
outsl
fistps
movsb
in
ret
out
jno
adc
xchg
mov
mov
sub
sti
jg
add
and
mov
pop
ret
adc
icebp
int
pusha
push
adc
enter
mov
cmpsb
sbb
les
imul
mov
xchg
jns
pop
and
and
fidivs
xor
dec
dec
mov
aam
inc
jge
dec
push
arpl
les
incb
mov
scas
add
xchg
ret
mov
test
test
and
or
push
in
xor
cli
leave
add
add
xchg
xlat
ret
cmpsl
cmp
cmp
bound
in
add
mov
pop
ret
lret
cmpsb
aad
pop
sub
xchg
arpl
or
xchg
cmp
xchg
xchg
daa
test
int3
orl
inc
jg
es
push
push
shlb
lret
fdivs
dec
jne
mov
pop
sub
jo
lds
and
xor
jne
les
ror
les
add
mov
xchg
xchg
stos
dec
jns
adc
xchg
dec
cwtl
lahf
jbe
mov
shl
jns
fcompl
adc
jo
divl
jl
sar
sbb
and
aad
das
or
dec
outsl
dec
mov
jno
pushf
mov
sub
shl
jecxz
jns
xchg
test
inc
aam
adc
add
ljmp
mov
into
cmp
push
and
popf
test
jne
jl
mov
inc
and
call
cmpl
push
mov
sub
xor
xchg
push
lret
clc
and
stos
sbb
daa
cmp
push
lret
mov
mov
add
or
adc
and
dec
rcrb
popa
shll
fs
add
push
sub
lock
and
adc
outsl
in
js
jp
mov
mov
insb
shrb
cwtl
adc
add
arpl
lret
fs
push
push
ja
pop
ljmp
out
movsb
loopne
mov
cmc
xor
push
cmp
mov
xor
fcmovnu
mov
add
popa
icebp
mov
lcall
jle
imul
imull
mov
outsl
out
test
orl
test
jb
mov
stos
inc
add
iret
xor
arpl
dec
pop
dec
or
pop
inc
lret
sbbb
adc
mov
xor
push
sbb
movsl
and
push
or
cmpsl
push
pop
mov
inc
lea
sub
repnz
test
and
sbb
cmpsl
lcall
repz
mov
jns
cld
xor
push
filds
push
lock
cld
test
movsb
rcl
jg
incl
xchg
es
mov
inc
and
std
and
and
sbb
pop
jnp
imul
cld
mov
mulb
jge
mov
testl
dec
push
mov
aas
push
xchg
mov
xor
cmp
adc
stos
in
sbb
xor
rcrb
adc
mov
or
sti
mov
fsubrp
imul
pop
mulb
adc
out
insl
iret
or
xor
arpl
ficoml
sbb
adc
push
sbb
cwtl
pop
aam
call
into
xchg
inc
adc
popf
decl
leave
xor
aas
pop
ret
lcall
lret
mov
jbe
ja
cltd
movsl
adc
cmp
push
xchg
and
das
call
fdivs
sbb
into
adc
mov
daa
or
out
sbb
je
pop
sub
cmpsb
aas
mov
stos
lret
xchg
or
xchg
xchg
pop
and
jae
ja
mov
pop
mov
sarb
dec
jns
inc
lret
fwait
pop
out
inc
cmp
repnz
push
inc
xchg
aad
pop
sub
push
dec
rcrb
nop
enter
test
dec
fwait
pusha
dec
dec
nop
ficomps
in
xchg
sbb
das
js
les
and
pop
arpl
push
repz
push
daa
xor
lcall
fs
cwtl
arpl
add
inc
lods
das
inc
or
mov
ja
loop
in
mov
sbb
dec
sub
js
lret
mov
ja
jno
sub
fs
rol
and
xchg
lahf
and
xchg
xor
add
fwait
dec
divb
mov
cwtl
xor
cmpsb
enter
jmp
fisubrs
jg
add
jnp
xchg
call
push
pop
faddl
int3
ds
dec
or
cmp
data16
mov
lcall
sbbl
mov
push
lret
jne
iret
mov
addr16
adc
lret
dec
mov
movsb
in
das
push
je
mov
jno
sbb
push
out
test
sub
pop
adc
shl
cmpsl
gs
inc
bound
mov
test
add
filds
int3
jbe
or
ss
mov
cwtl
mov
pop
ret
lds
sub
ret
add
fnstsw
and
sbb
aas
jp
cmp
andl
dec
cmp
int3
ficoml
jb
subl
jg
dec
jae
dec
fsubs
inc
mov
lods
and
fcomi
jecxz
loopne
fstps
out
imul
and
lock
sbb
lahf
pusha
sub
pop
push
in
xchg
ds
add
mov
stos
into
cmp
insl
cmp
in
icebp
and
pusha
fnsave
test
push
out
adc
lcall
xchg
rolb
outsl
ss
pop
es
pusha
bound
and
jmp
xchg
inc
lea
test
cmp
cwtl
shlb
outsb
mov
outsb
leave
lcall
jnp
int
loop
push
inc
push
cli
outsb
inc
data16
loop
pusha
sub
jns
pop
cmp
rclb
and
je
lahf
lds
jg
jae
test
sub
or
in
mov
sbb
add
xor
inc
roll
outsb
int
mov
pop
mov
rorb
push
mov
push
pusha
jl
aad
aas
ret
insl
xchg
das
mulb
mov
push
or
xor
pop
ret
xchg
push
push
fiaddl
jb
or
lea
sbb
mov
lock
stos
outsl
mov
fisubs
incb
dec
pop
das
insl
dec
test
in
rcrb
lods
add
mov
cmp
clc
repz
pop
push
stos
movsl
sbb
aas
add
fwait
movsb
cmpsb
pop
shrb
je
lods
cmc
adc
inc
ret
popa
mov
inc
push
movsb
aas
sbb
loopne
decl
mov
hlt
adc
loope
adc
inc
pusha
outsb
sub
jl
inc
mov
imul
scas
iret
jns
fsubrl
mov
rol
jg
pop
aas
or
icebp
pop
or
mov
fimull
jmp
movsl
dec
push
xor
mov
adc
mov
mov
pusha
test
addr16
mov
scas
mov
xchg
insl
dec
fs
mov
enter
sbb
cld
insl
push
in
scas
fcmovnb
add
inc
push
stc
cmp
mov
aaa
movsb
imul
adc
push
mov
fstpt
rol
mov
test
push
and
sbb
xchg
adc
add
repz
fwait
jne
xchg
or
in
imul
mov
mov
orl
movsb
scas
bswap
daa
push
bound
dec
cmp
jle
arpl
push
jbe
pop
subb
add
sbb
mov
cli
arpl
hlt
fstpt
ret
jb,pt
xor
out
mov
fstpl
mov
sbb
xchg
imul
jmp
and
push
push
subl
xchg
push
add
jnp
mov
fs
sub
dec
inc
and
xlat
inc
pop
call
mov
pop
mov
movsb
fstl
mov
cmp
jg
loope
mov
stos
fwait
loope
sbb
push
and
sub
jp
jmp
and
movsb
mov
xor
subl
pop
scas
decb
jg
push
push
imul
xchg
icebp
or
lods
sbb
sbb
mov
fwait
xorl
fdivr
mov
push
sahf
int3
xchg
xchg
dec
mov
rcrl
adc
inc
lahf
fsubrs
xchg
mov
pop
imul
test
push
das
repz
std
cmp
arpl
sbb
fidivrl
mov
push
mov
cld
xor
pop
sbb
inc
gs
add
repz
xor
gs
xlat
or
push
aas
push
sub
lods
xor
pop
insl
int
dec
cmp
movsb
or
mov
in
jnp
je
sti
add
inc
xchg
std
insb
fsubrs
in
cs
push
cmpsl
and
mov
cmc
jecxz
xor
cli
les
js
ret
inc
lcall
push
mov
out
lods
test
lcall
scas
or
stos
insb
push
push
int
jmp
pop
pop
enter
jne
loopne
insl
cmp
int
jmp
out
pusha
test
scas
mov
or
xchg
and
sbb
xchg
mov
loope
pop
mov
jb
hlt
loop
cwtl
scas
insb
sti
pop
jae
stos
movsb
iret
shrb
addr16
sub
cs
loope
loop
fisubs
mov
dec
leave
and
sub
pop
inc
sub
test
lea
lret
inc
sub
pop
and
js
push
jecxz
push
dec
je
mov
stos
xchg
ja
cmc
cs
lcall
rolb
lods
aam
out
jecxz
add
add
xchg
sbbb
icebp
andl
xor
icebp
mov
dec
add
xor
mov
add
xor
and
jge
dec
ds
mov
mov
pcmpgtd
sub
adc
cmp
insl
insb
movsl
push
add
mov
out
enter
aad
cmp
and
pop
adc
inc
fdivrl
xlat
mov
push
cmp
jns
or
mov
fistpll
sub
add
idivb
xchg
or
lock
jne
or
or
stc
movups
adc
sub
jb
push
stos
ja
mov
sub
dec
aaa
or
mov
mov
into
int3
jmp
cmpsl
not
aas
lret
mov
test
int3
aam
fdivs
add
jl
pop
fisubl
mov
test
xchg
inc
xchg
popa
ficompl
xchg
mov
xchg
sti
add
test
in
arpl
pop
xor
ret
pusha
push
push
fildll
pop
or
dec
xlat
hlt
cmp
jbe
xor
shlb
inc
fsubl
sub
dec
mov
and
outsb
jb
sbb
jmp
out
xor
xor
push
mov
mov
data16
inc
and
lret
imul
out
adc
lock
daa
outsb
jecxz
ret
pop
cwtl
mov
fucomi
cli
pop
imul
jp
dec
lret
mov
iret
sbb
js
ja
stos
dec
inc
push
fbstp
or
les
sbb
mov
hlt
or
pop
xchg
inc
in
lcall
add
sbb
mov
jne
js
dec
jns
mov
clc
fadds
leave
inc
cmp
pop
mov
jb
sub
into
adc
jge
sub
outsl
add
fs
mov
pop
insb
jns
push
lods
cmp
xchg
xor
mov
xchg
hlt
out
xlat
je
mov
jecxz
dec
aam
sbb
mov
mov
cmp
cmp
cwtl
or
imul
sub
fnstcw
lods
fsubl
jmp
or
push
sbb
pop
mov
test
pushf
aaa
add
sub
cld
ret
mov
add
xor
adc
enter
std
mov
lcall
in
je
push
testl
ss
push
cmc
adc
xlat
popa
dec
aam
add
adc
popf
cmp
xchg
shlb
sbb
lret
out
loopne
aaa
adc
mov
inc
xor
inc
out
stc
jg
sbb
icebp
pop
enter
pop
pop
or
add
xor
aam
xlat
scas
mov
xchg
xchg
addr16
mov
fnstcw
fmuls
or
xchg
xchg
push
aas
mov
loope
adcl
cmp
pusha
dec
test
or
xlat
lahf
mov
subb
push
inc
mov
xchg
and
lock
push
adc
sub
js
idiv
mov
push
iret
ljmp
xchg
sbb
fwait
jns
xchg
and
mov
push
jecxz
dec
xor
ret
mov
or
out
fstpt
xchg
push
fwait
xchg
shll
add
jge
sbb
mov
arpl
subb
add
dec
leave
xchg
sbb
push
popl
icebp
dec
fildl
jno
loopne
loop
adc
cli
icebp
xlat
enter
rolb
inc
jb
or
push
sbb
fidivl
mov
fdivrs
or
pushf
cwtl
enter
mov
add
pop
sti
setne
cli
push
mov
roll
mov
sub
pushf
fwait
in
ss
filds
mov
das
jecxz,pt
add
mov
mov
adc
out
jnp
cli
xor
and
sti
dec
xchg
adc
push
mov
pop
out
mov
mov
add
pop
rolb
add
movsl
mov
adc
mov
pop
test
sbb
push
loopne
fidivl
sub
mov
cmp
lods
jecxz
rolb
add
xchg
subl
lods
xchg
mov
pop
push
and
mov
inc
inc
push
dec
mov
inc
jne
clc
mov
pop
sub
cwtl
loopne
sub
push
mov
push
cmp
dec
fiaddl
adc
pop
mov
movsb
aas
inc
lea
ret
insb
stos
fwait
ror
xchg
pop
fimuls
sub
xchg
outsl
fildll
fstl
push
shrl
out
jae
xchg
mov
fisttpll
stos
xor
xor
adc
fs
leave
out
xlat
dec
jge
ljmp
out
cltd
and
test
js
jae
or
mov
xor
inc
rcl
xor
mov
sub
leave
jge
ljmp
or
jns
sti
scas
aas
add
outsl
arpl
jne
add
dec
lcall
rcll
sub
in
fsubrs
cmp
loopne
inc
repnz
popa
es
repnz
out
push
mov
add
ret
dec
cmp
pmuludq
inc
pop
mov
pop
iret
add
and
pop
jns
jo
adc
stc
sbb
push
mov
hlt
mov
xor
popa
jg
pop
inc
xchg
and
scas
jl
dec
inc
sbb
sub
repnz
and
sbb
outsl
in
cmp
aam
jmp
xor
cltd
jecxz
popf
imul
dec
rolb
inc
pop
addb
popa
lods
jl
pop
add
mov
mov
inc
je
mov
stos
sub
mov
int
mov
mov
loope
cmp
jl
adc
std
movsb
jnp
xchg
xor
sub
push
out
mov
out
push
xor
mov
rolb
and
pushf
cmp
mov
jl
cwtl
dec
inc
or
xorl
add
roll
xadd
dec
fsts
loope
mov
mov
sarl
mov
xor
inc
push
cmp
dec
pop
ret
cmp
shl
fldcw
inc
sbb
sub
jnp
adc
dec
jbe
fdivl
or
insl
xchg
inc
push
xor
loope
xchg
add
roll
incl
popf
stos
pushl
mov
lock
dec
or
push
pop
adc
lds
push
test
cld
cmpsl
mov
xchg
popa
jae
xchg
mov
scas
add
and
push
rclb
clc
rcr
cli
icebp
cld
ficomps
jae
jg
sub
or
lock
cld
jmp
pop
cmp
mov
fld1
aam
cmp
adcb
mov
fsts
xchg
xchg
jl
xlat
bound
hlt
js
lea
sbb
xchg
push
and
pop
jecxz
push
fimull
adc
cmp
jo
les
adc
sbb
sub
adc
and
xchg
lds
bound
mov
mov
jecxz
rolb
and
or
mov
repz
inc
jg
sub
test
or
mov
jne
in
xor
inc
mov
pop
inc
mov
fdivrl
pop
outsl
iret
mov
loopne
aam
enter
div
pop
gs
es
outsb
and
int3
movl
mov
xor
popa
flds
inc
orl
cltd
ljmp
sbb
add
sbb
call
movsl
inc
in
add
inc
cmp
cmp
in
insb
mov
ja
daa
xor
ja
sbb
add
lods
lods
xchg
jns
mov
push
sbb
je
xor
jmp
aad
in
lds
into
out
mov
into
lods
insb
aaa
psrlw
push
xor
arpl
mov
out
xchg
test
push
fiadds
adc
inc
adcb
sbb
ss
sub
in
push
dec
leave
push
push
ret
mov
call
imul
xchg
xchg
imul
mov
mov
adc
xchg
iret
pop
mov
js
adc
lds
sub
mov
iret
lahf
pop
jo
xor
cli
push
mov
push
push
mov
ljmp
cmp
cmp
mov
jmp
insb
cmp
mov
lods
shl
hlt
rorl
fwait
mov
imul
add
addr16
pop
mov
lcall
xor
push
rep
jo
mov
adc
fucomi
mov
mov
stos
into
scas
jg
sar
jecxz
xorb
and
mov
lahf
or
test
cmp
mov
aad
sub
and
cld
test
int
sarb
cmc
xchg
push
mov
stos
in
add
fistl
cmp
popf
test
sbb
dec
imul
pushl
fadd
or
jge
rsqrtps
cmpsb
or
dec
xorb
setg
and
mov
xchg
outsb
push
fisubs
mov
shrb
mov
out
push
lret
mov
daa
cmp
and
shll
mov
and
jle
leave
mov
into
ret
cltd
cli
ficompl
inc
xchg
dec
ficoms
in
push
push
hlt
lea
mov
add
cld
pushf
sbb
jno
cmp
call
jns
jae
out
dec
mov
stc
push
in
scas
push
jg
push
loop
mov
cli
cli
adc
lret
ja
cmpsl
ret
fmull
loop
int3
xor
das
orl
into
cs
push
jmp
das
and
xor
icebp
imul
fildl
ja
jns
js
push
mov
inc
in
stc
roll
or
jb
sbb
in
pushf
cli
icebp
cmpsl
inc
movsb
loop
out
push
insb
ret
xor
leave
xchg
inc
sbb
inc
mov
jl
jle
int
xchg
add
and
pop
sub
cmp
dec
pop
inc
rcr
xchg
rcll
repz
and
adc
in
dec
sub
test
sbb
add
imul
iret
push
stos
test
in
out
and
scas
and
test
mov
rolb
nop
fwait
or
test
xor
lock
and
test
sub
imul
hlt
stos
adc
nop
lahf
clc
push
mov
sbb
inc
mov
icebp
ja
xor
and
and
cmpsb
inc
jmp
in
lock
push
test
jo
sub
fcompl
insb
aad
cmp
aam
test
movsl
popa
mov
test
mov
pop
inc
cwtl
jg
mov
sub
arpl
in
xor
jb
dec
stos
push
ror
mov
mov
and
rcrl
mov
inc
sti
js
push
adc
shll
adcb
inc
testb
xchg
aaa
xor
lret
test
jg
mov
or
xor
adc
insl
adc
and
push
xchg
xor
mov
test
mov
or
inc
test
movb
std
lds
les
imul
xor
jecxz
xor
pop
mov
dec
mov
and
enter
in
sub
inc
mov
jno
in
lret
sahf
adc
sbb
inc
pusha
mov
int3
inc
pop
inc
push
push
add
pop
es
mov
sub
add
daa
sbb
popf
sub
aam
fistps
pop
mov
dec
fwait
push
or
jle
mov
pop
mov
add
mov
hlt
mov
or
adc
lock
push
pop
sbb
sti
pop
xchg
fdivs
jp
loope
hlt
int
lahf
dec
lods
fidivs
mov
inc
loope
sub
xchg
dec
mov
xchg
sahf
daa
or
pop
sub
mov
aad
hlt
iret
cmp
pop
mov
adc
data16
sbb
fwait
je
dec
mov
arpl
fcmovnu
jl
push
imul
gs
call
and
insb
xlat
testb
dec
cmpb
aad
sub
xchg
leave
push
daa
push
popf
pushf
cmpb
adc
cs
nop
rcrl
adc
out
cmp
roll
scas
in
popf
xchg
rorb
lods
xchg
sub
mov
and
mov
loopne
movsb
pop
es
lahf
mov
jne
jg
jecxz
pop
xlat
xchg
lahf
or
cmp
ja
xchg
gs
outsl
cmp
and
or
jns
jg
xorb
mov
shr
iret
jne
mov
fstpt
xchg
idivl
sub
and
inc
and
filds
adc
bound
loop
and
shr
add
dec
aaa
int
dec
push
mov
icebp
push
jb
add
fs
fldl2e
dec
add
inc
mov
sahf
hlt
sbb
lods
sub
test
lcall
xchg
cmc
push
and
stc
push
adc
lods
add
jl
mov
sbb
mov
in
sub
add
hlt
jge
mov
fbld
orb
cli
leave
popf
jns
and
jo
stc
cli
into
push
iret
jmp
popf
cmp
xchg
jecxz
testl
addr16
pop
jo
daa
push
orl
lret
sahf
addr16
scas
lods
jae
xchg
lock
int
and
fcoms
dec
out
out
or
mov
xchg
mov
mov
popf
xchg
jle
aas
adc
mov
pop
push
inc
hlt
xor
cmp
add
sub
dec
repnz
mov
push
out
add
jmp
out
sbb
pop
dec
pushf
sub
pusha
cmp
adc
jg
shlb
je
xor
call
cmpl
sbb
pop
or
aad
jl
pushf
sub
call
and
jg
aaa
mov
cld
cld
jne
js
add
or
outsl
mov
lods
inc
es
decb
jne
or
or
maxps
dec
addr16
test
mov
adc
mov
sbb
insl
sub
std
cmp
mov
mov
daa
in
shl
nop
or
xchg
adc
loope
stc
lods
les
adc
adc
mov
push
lret
adc
pop
push
divb
mov
cmp
mov
scas
adc
xchg
jecxz
lods
pop
mov
loope
movsb
push
jo
in
aad
xor
sahf
mov
jecxz
ja
ss
das
add
xchg
mov
sub
scas
adc
push
mov
hlt
xor
xchg
xor
mov
adcl
jno
and
or
ds
and
sub
mov
lcall
mov
pop
dec
addr16
mov
les
pop
or
jb
cmp
lea
iret
jle
add
jns
pop
invd
xor
xlat
push
orl
xchg
cld
mov
jne
sbbl
jbe
inc
add
xchg
inc
cltd
divl
inc
fstpt
fbstp
dec
jg
dec
cwtl
dec
mov
ja
movl
out
pop
and
push
fs
sbb
outsb
push
push
adc
pop
xchg
outsb
idivb
xchg
adc
pop
out
sbb
or
and
std
xor
test
sub
push
xor
sub
xor
add
aas
push
std
mov
push
mov
xor
imul
and
sub
cltd
in
jne
inc
adc
les
mov
fbstp
loopne
lea
xchg
sub
push
lcall
imul
pushl
sub
cli
in
or
cmpsl
stos
pop
jg
outsl
scas
insb
mov
push
xchg
stos
adc
scas
pop
stos
sbb
adc
mov
ja
push
or
inc
fdivs
pop
push
dec
sbb
sub
lods
xchg
fidivl
cmpsb
cmp
pop
addb
adc
add
jle
pop
and
popl
out
sysret
cld
add
int3
xor
in
mov
ja
xlat
dec
out
mov
jecxz
mov
dec
negb
fdivs
int3
jbe
push
pop
jge
jno
rcr
out
jl
in
pushf
mov
call
fdivrp
insb
xchg
inc
out
movsl
mov
mov
mov
ds
sub
pop
adc
mov
lea
pop
sub
push
xchg
and
repz
mov
sti
jge
sub
cmp
das
cmp
adc
mov
mov
stc
sbb
test
loope
movsl
iret
stos
fcomp
scas
cwtl
push
mov
pop
mov
scas
mov
mov
shrl
movsl
insb
mov
mov
test
add
or
sahf
jecxz
es
fildll
subb
lea
jb
es
inc
addb
and
inc
xor
in
insl
mov
push
aaa
push
jne
cmp
stc
xchg
or
sub
pop
movsb
adcl
xchg
or
pop
mov
or
xchg
sbb
inc
mov
or
fdivrp
adc
cmp
inc
mov
lahf
dec
xchg
bswap
or
stc
fwait
rorl
jb
pop
inc
inc
movsb
and
repnz
test
add
repz
xorb
lret
ret
daa
or
push
xor
dec
iret
stc
shlb
nop
adc
xchg
idiv
dec
pop
push
or
cmp
dec
mov
sarl
xlat
jg
push
mov
mov
pop
cmpsl
or
ja
pop
out
notb
mov
jns
xor
jg
ss
mov
pop
test
fs
enter
mov
cmpsl
mov
add
in
dec
jb
mov
popa
pop
flds
xchg
sbb
xorl
jl
mov
mov
jnp
adc
fidivs
jmp
jmp
add
shlb
sub
xchg
scas
jle
lock
lods
mov
mov
mov
lcall
data16
call
lret
in
sti
xchg
out
ja
ret
dec
lret
dec
push
imul
or
das
mov
popf
inc
loopne
mov
int3
lock
pop
cld
mov
iret
ja
push
rcrl
push
rorb
cmp
bound
sbb
insl
inc
add
sbb
mov
js
stc
pop
rorb
scas
or
mov
lock
xchg
xchg
cmp
pop
pop
cmpsb
and
movsl
test
or
jmp
icebp
mov
sbb
rorb
sbbl
sahf
pop
or
cmp
sti
icebp
lret
dec
out
in
inc
sub
push
pop
enter
sahf
bnd
enter
add
push
repnz
enter
out
jb
in
inc
nop
out
movsl
hlt
int
cmp
sbb
scas
jns
fwait
cmpsl
pop
pop
stos
adc
pusha
mov
inc
lahf
dec
xor
mov
sub
xchg
cmc
fucomp
arpl
or
adc
pop
gs
fldl
rcr
lcall
dec
ficompl
popa
jne
aas
xchg
jnp
bound
sbb
pop
xchg
xchg
push
lock
dec
leave
xchg
ficomps
lcall
lods
and
cmp
pop
sub
pop
inc
sbb
mov
popf
notb
js
cmp
dec
aam
add
mov
clc
pop
push
pop
sub
xchg
adc
stos
aam
mov
and
andl
stos
ret
adc
cmp
lods
xor
pop
cmp
dec
and
pop
int3
jg
jl
xchg
jbe
jecxz
ja
jbe
inc
mov
in
daa
negb
pushf
jae
inc
cltd
push
lock
cmp
hlt
xchg
sbb
shlb
scas
mov
pop
enter
xor
dec
adc
sbb
lods
or
insb
sbb
lock
push
popa
fs
lret
aas
imul
loope
arpl
inc
push
jns
xor
outsb
clc
mov
xorb
cmpsl
adc
inc
adcl
lret
pop
mov
jg
dec
leave
js
mov
arpl
pop
loopne
rcrl
or
arpl
pushf
test
dec
int3
imulb
imul
mov
iret
mov
mov
inc
jo
and
mov
mov
std
outsb
xor
psrlw
fsubrl
xchg
cli
and
fildll
movsb
int
xlat
dec
cmpsb
push
test
stc
sub
cmc
test
push
shl
dec
outsl
call
jmp
mov
pop
add
ljmp
gs
or
sbb
add
cld
push
lods
enter
and
adc
dec
pop
loop
push
xor
mov
push
out
arpl
leave
nop
bound
xchg
jbe
mov
jmp
dec
xorb
shlb
cmc
outsb
insb
jg
aas
jns
xchg
adc
lret
stos
rcll
mov
mov
push
pop
or
mov
push
xchg
dec
mov
jno
fst
mov
inc
jno
std
inc
pushf
into
clc
scas
cmc
pusha
test
xchg
cwtl
and
jnp
lock
mov
fdivl
stos
mov
jg
test
inc
mov
fbstp
sti
rorb
stos
movaps
pop
cmp
inc
mov
xor
mov
mov
pop
scas
rorb
xor
in
jg
iret
inc
mov
pop
lods
jmp
and
jno
xorb
jp
cmpsl
push
aad
and
pop
je
in
jae
and
xor
out
xchg
lahf
xchg
adc
and
das
mov
push
mov
jo
shrb
scas
mov
cmp
jne
arpl
fwait
aam
ljmp
sub
xchg
notb
xchg
mov
js
mov
movsl
ja
mov
jl
pop
ffreep
add
andl
and
mov
sub
cmp
sahf
lcall
push
leave
jbe
in
push
nop
or
shrl
cmp
sbb
inc
jae
xchg
push
je
insl
mov
dec
jno
notb
rcr
mov
scas
mov
clc
sbb
pop
cwtl
out
aam
mov
mov
pop
insl
cmp
mov
push
xchg
loopne
setl
pop
and
out
inc
jl
mov
xorb
jb
popf
sbb
int3
pop
movsl
shl
cmp
cwtl
push
int
into
mov
repz
mov
mov
inc
or
mov
imul
add
imul
jo
push
fs
stos
xor
xor
or
dec
xchg
sahf
mov
jle
ljmp
dec
push
xchg
sub
or
dec
std
sub
gs
shlb
lret
xor
mov
lcall
js
test
fs
sbb
pop
lods
cmc
stc
push
out
push
sarb
or
movsl
sbb
les
sar
into
aad
inc
push
lea
xor
rcrl
dec
adc
int3
xor
mov
push
arpl
or
adc
sbb
clc
pop
xchg
and
and
or
outsb
fldenv
xchg
lods
shll
dec
mov
push
dec
or
icebp
jns
sti
aad
ja
and
cmp
and
jge
outsb
cmp
cmpb
setne
dec
repnz
frndint
imul
orb
arpl
pop
sti
mov
std
mov
int
push
inc
push
sti
mov
xchg
adc
push
add
adc
les
imul
ss
sbb
lock
push
push
jmp
lods
push
stc
mov
push
faddl
out
into
aaa
mov
test
push
addr16
or
pop
in
xor
sub
dec
lock
lret
inc
mov
xor
imul
lahf
in
imul
jno
jnp
ret
xchg
inc
inc
fs
shrb
les
xchg
jnp
fildl
orl
fsub
cld
aad
out
or
lods
cmpsl
fisubl
cmpsl
pop
fistpll
fidivrl
lcall
mov
jg
xor
fistl
test
stos
shlb
push
dec
adcl
jmp
popa
or
xchg
add
mov
test
xor
loopne
lods
lret
mov
jp
fcomps
or
es
xchg
inc
mov
int3
push
xchg
jo
fst
jns
in
mov
xor
ret
int3
pop
test
cmp
jge
leave
outsl
xchg
mov
call
mov
mov
pop
fs
addb
mov
xor
xor
add
pop
xor
call
jmp
test
lret
mov
mov
popa
test
or
in
mov
jmp
ret
mov
inc
dec
lahf
and
adc
mov
and
es
fisubl
dec
movsl
sbb
ret
negb
data16
fsubs
xchg
mov
and
xor
jbe
mov
cmp
addr16
in
scas
sbb
ucomiss
je
xchg
sbb
adc
inc
addb
and
pop
cltd
inc
dec
jnp
mov
push
xor
xor
cli
pop
repnz
mov
lods
or
test
iret
add
push
push
js
aas
inc
into
xchg
pop
addr16
pop
sbb
jne
mov
add
stc
inc
ror
cs
jne
mov
hlt
into
je
sti
into
pusha
mov
pop
enter
mov
lret
inc
lods
sub
xchg
sub
subb
jbe
fcoml
mov
out
jg
dec
lret
or
not
pusha
nop
sub
int3
push
or
cmp
stos
orl
inc
stos
int3
jl
filds
stc
enter
aas
sbb
adc
cmpsb
pop
and
cli
test
test
xor
addl
and
xor
int
call
mov
div
insb
loop
fsubl
inc
push
popf
loop
les
das
push
mov
and
mov
stc
sub
jmp
out
push
xor
in
push
mov
orb
ret
loop
xor
mov
mov
pushf
stos
dec
xchg
movsl
das
adc
or
jae
lret
aad
add
or
dec
mov
call
mov
jo
adc
pushf
push
data16
bound
push
outsl
out
adc
loope
gs
or
pop
lods
popf
mov
fdivrs
push
xor
push
rol
lcall
inc
cmp
sbb
inc
cs
jge
stc
in
insl
andb
sub
and
aas
sub
ds
shrb
sub
adc
jmp
jle
push
pop
push
lods
adc
out
mov
xchg
and
jg
inc
inc
cmp
shl
jnp
push
mov
int
sub
mov
jmp
fwait
ss
jae
adcl
repnz
and
or
mov
outsb
sahf
and
loope
or
jmp
outsb
stc
addr16
pop
inc
inc
mov
out
cmp
adc
mov
mov
sbbb
mov
mov
pusha
enter
mov
hlt
dec
dec
popf
adc
data16
mov
sbb
xor
rcrb
pop
jle
mov
pop
push
jg
pusha
stos
or
jns
int
jg
test
cmp
add
sarl
sub
and
and
mov
lcall
push
add
outsl
mov
add
xorl
movsl
push
and
mov
jnp
mov
sub
inc
and
xlat
ljmp
adc
ja
push
lods
into
cld
pushf
decl
sbb
mov
push
shlb
jge
aad
dec
mov
out
enter
stos
add
mov
pop
cmc
add
xor
sub
lods
repnz
dec
add
nop
flds
cwtl
test
ret
ja
jp
xor
push
cmp
cmc
insb
lds
sbb
jae
popa
iret
dec
jmp
mov
ja
les
inc
lds
test
inc
adc
adc
mov
aad
push
cld
mov
xor
push
cmp
cmp
mov
pop
shlb
or
push
mov
scas
add
xor
insl
jecxz
xorl
jb
test
iret
dec
dec
or
pop
ljmp
mov
lret
popf
mov
aam
test
fnstcw
mov
dec
mov
jae
into
push
arpl
shll
je
sub
cli
ret
shlb
stos
loopne
or
jno
dec
int3
jbe
sbb
pushf
pop
adc
add
pop
sar
pushf
lods
jl
lcall
test
xor
push
stos
sbb
lahf
lea
mov
je
fdivrl
sbb
sti
fwait
out
testl
jge
mov
ret
jl
pop
and
sbb
clc
loopne
test
fcmovb
stos
loopne
addl
mov
int3
inc
testb
outsl
imul
mov
or
sbb
jge
jmp
andb
pop
ss
into
sub
mov
fiaddl
leave
mov
inc
jl
iret
pop
mov
mov
loopne
adc
lds
subb
mov
jae
push
sar
fists
neg
out
dec
fwait
cmpsl
or
gs
dec
mov
and
push
sbb
push
shl
sub
stos
adc
dec
sbb
clc
fwait
xor
sbb
imul
outsl
xor
ret
daa
daa
push
inc
fmull
out
sbb
sub
mov
lods
jp
leave
es
xor
or
or
out
pusha
cld
push
fisubrs
lahf
movsl
jb
mov
js
pop
push
lahf
lret
or
jmp
dec
inc
xchg
mov
adc
mov
clc
and
inc
or
rorb
enter
push
sahf
lahf
inc
fldt
sbb
outsl
pop
lock
mov
sbb
jp
pop
imul
sub
outsl
pushf
jno
enter
mov
cld
jns
lock
repnz
lcall
jmp
je
mov
and
out
nop
das
xchg
shl
int
jb
pop
push
xchg
test
aas
adc
insl
pop
mov
fisttps
sub
into
mov
sub
jmp
sub
and
xchg
ds
adc
lock
lods
pop
push
int
jno
mov
push
pop
mov
idivl
roll
dec
cltd
mov
jo
or
mov
cmp
daa
or
pusha
sub
decb
sub
push
xchg
enter
sbb
add
adc
lret
mov
mov
inc
and
cmp
sub
xchg
mov
stos
fists
aas
enter
loop
and
insl
cmp
add
ss
or
daa
repz
les
mov
orl
xchg
xlat
test
aam
jae
test
outsb
adc
mov
jns
fwait
repnz
fisttps
cmp
pop
and
leave
orl
test
mov
inc
rcr
xor
cmp
cwtl
adc
pop
xchg
dec
lahf
loopne
sub
adc
hlt
subb
ret
lea
icebp
mov
hlt
cmp
or
sub
clc
adc
mov
int3
dec
xorb
mov
jg
sti
icebp
adc
mov
fidivs
sarb
pop
cld
sub
pop
insb
cwtl
and
in
mov
dec
scas
adc
sbb
mov
testl
mov
xor
arpl
or
xchg
dec
mov
mov
adc
sub
xchg
hlt
call
mov
popf
js
cmp
jns
insb
shl
push
dec
jmp
ss
fiaddl
dec
inc
lcall
mov
sbb
outsb
mov
mov
sarl
jg
es
out
dec
mov
jmp
inc
adc
xchg
or
jnp
push
mov
shrb
jge
or
mov
adc
sbbl
push
add
pop
pushf
xchg
js
sub
js
ds
mov
mov
clc
cmp
pop
enter
mov
adc
adc
and
mov
xchg
xchg
cmp
lcall
movsl
pop
test
cmp
inc
pop
and
stos
mov
cmp
mov
lahf
aam
jae
fidivl
jb
mov
repz
pop
dec
lcall
movsl
stc
negl
js
mov
scas
outsb
cli
fldl
adc
inc
push
test
scas
scas
mov
xlat
inc
inc
add
in
fdivp
mov
push
pusha
adc
jno
lds
test
out
and
dec
idivb
movsb
jle
xlat
loope
jmp
gs
sub
pushf
out
nop
add
in
cs
rclb
sahf
xchg
mov
or
cmpsb
push
mov
add
hlt
fldt
test
pushf
pop
dec
push
ficompl
jmp
pop
inc
sti
pushl
inc
and
das
das
sub
adc
fimuls
adc
in
in
lcall
imul
and
scas
sub
cltd
dec
inc
jbe
idivl
aaa
cmpsl
inc
cmpsb
out
sbb
fdivs
mov
mov
daa
mov
ss
jns
push
xchg
inc
loope
incb
mov
mov
clc
jae
inc
dec
inc
ds
daa
inc
mov
icebp
mov
mov
or
data16
pop
inc
dec
hlt
push
cmp
leave
or
inc
mov
ds
xchg
and
imul
xchg
inc
es
dec
mov
mov
pop
push
push
push
push
sti
pop
adc
sbb
filds
cmp
mov
mov
bound
fdivl
mull
sub
lock
pop
xlat
cld
repnz
jmp
jl
out
pop
pop
add
push
pop
pop
js
jnp
xor
movhps
inc
push
std
out
ds
and
mov
xlat
mov
xor
mov
fisubrs
adc
fwait
xchg
inc
int
sbb
ss
or
jnp
and
imulb
and
outsb
push
cltd
aaa
jg
pusha
int
imul
inc
scas
in
mov
movsl
icebp
test
cmpsl
inc
push
repz
js
xchg
inc
and
stos
outsb
mov
and
push
gs
loope
cmp
aaa
cmp
mov
dec
pusha
movsl
outsl
mov
js
push
js
add
cmp
push
sbb
jmp
test
pop
in
data16
fiaddl
dec
inc
iret
ja
sub
ja
pop
out
push
cmpsl
sbb
jecxz
mov
cmpsb
xchg
inc
cmp
movb
in
popf
dec
ror
push
ret
mov
mov
neg
jae,pn
sub
dec
mov
inc
sar
jo
xor
sbb
and
mov
and
add
into
dec
dec
sahf
push
call
out
insb
idivb
mov
push
xor
repnz
mov
mov
fwait
push
and
lret
push
inc
push
and
es
int3
icebp
xchg
lods
in
call
imul
std
push
sbb
bound
mov
add
cld
push
xchg
js
push
xchg
xor
jp
sahf
xor
sbbl
out
adc
orb
insl
mov
pop
fidivs
rolb
insb
cld
lea
dec
add
dec
add
rol
aam
and
pushf
pop
sbb
add
dec
in
mov
inc
mov
adc
dec
pop
sub
test
leave
cmpsb
inc
and
int3
mov
adc
cmp
movsl
adc
in
or
xchg
dec
cmp
inc
mov
orl
popf
push
or
cmpsl
push
int3
jae,pn
jl
int3
stos
adc
or
cwtl
mov
jge
adc
adc
add
adc
push
ret
mov
dec
shrb
iret
xchg
rclb
inc
cs
call
loopne
push
xchg
mov
repz
cwtl
jno
or
mov
insb
pop
imul
jb
pop
sarb
jge
data16
fs
mov
add
xor
push
pop
mov
xor
mov
mov
sbb
and
loop
sti
ret
pop
push
adc
fdivr
xor
sub
jnp
mov
hlt
pusha
aad
lods
fisttpl
out
test
cmpsb
movlhps
cmp
xor
xor
movsl
fmul
daa
cmp
pop
adc
fistps
shl
cltd
ja
mov
stos
dec
test
lahf
push
jno
sahf
pushf
cmp
popa
leave
ret
pop
orl
mov
mov
out
loop
stos
and
stos
xchg
mov
sbb
aas
ds
lcall
cmp
sub
dec
js
jbe
inc
bound
push
mov
xor
jne
and
adc
or
add
jecxz
mov
or
adc
clc
je
adc
rcll
sub
ja
inc
sub
je
daa
inc
push
mov
or
push
xchg
adc
mov
push
pop
mov
jns
xchg
sbb
das
cmp
stos
push
je
clc
sub
std
leave
call
dec
push
pop
out
shl
dec
mov
fbld
and
sbb
mov
not
fnstsw
cwtl
mov
fs
ss
in
daa
das
cmc
ss
jae
mov
enter
out
dec
xor
scas
push
std
xchg
mov
ja
lcall
das
push
scas
mov
cmp
mov
xchg
xor
xchg
int3
loope
jbe
cmp
inc
fcom
int3
push
mov
sbb
add
aam
mov
repnz
add
mov
dec
cs
js
dec
xchg
cmp
xor
aaa
iret
mov
shlb
push
xor
cmp
int
mov
out
mov
cmpsl
cmpsb
push
ret
mov
mov
pop
cli
pop
lods
xchg
xchg
add
test
bound
sub
aas
ds
pop
rol
and
adc
sbb
xor
or
sub
fs
push
mov
and
loopne
xchg
push
xor
inc
push
mov
test
aaa
push
pushf
cmpsb
sub
call
cld
xchg
push
xchg
inc
mov
popf
insl
mov
cmp
mov
inc
in
pop
dec
lcall
xchg
in
ss
sub
pop
push
mov
stc
mov
mov
push
push
out
jb
xlat
dec
pop
and
es
sub
sub
jecxz
pop
mov
lods
cli
enter
dec
push
out
bound
hlt
mov
test
cli
dec
cmp
es
jns
sbb
fwait
loope
fdivrl
aaa
push
add
cmp
push
sub
stos
xchg
out
loope
xor
aam
pop
sub
adc
pop
fldenv
xchg
jno
dec
mov
outsb
mov
sti
push
sbb
shlb
adc
add
sub
and
es
adc
stos
aas
and
int
or
imulb
jl
pop
dec
std
aaa
mov
lret
fxch
test
adc
mov
cmp
and
or
insl
or
cmp
ds
pop
ljmp
inc
cmpsb
out
xorl
shlb
mov
dec
push
inc
inc
ret
push
outsl
cmpsb
lahf
fsub
out
push
and
iret
add
and
popf
sarb
inc
pop
clc
cwtl
jae
adc
cmp
dec
mov
ret
pop
fwait
and
scas
mov
cltd
xchg
jmp
mov
sbb
jecxz
xchg
jg
jae
or
lcall
inc
ja
mov
arpl
cmp
mov
pop
stos
addr16
xor
icebp
jb
pushf
out
and
bound
mov
movsb
mov
jp
push
cmp
push
pop
sub
sub
mov
shl
ret
jmp
insl
adc
pop
or
adc
call
cmpsb
nop
ja
clc
sub
mov
adc
xor
ficoml
sbb
cmp
nop
fdivl
dec
pop
pop
sbb
xchg
inc
xchg
push
movsb
lahf
imul
pop
divb
imul
fs
dec
hlt
mov
lret
cmp
lds
rolb
popa
lock
test
mov
cs
les
and
jecxz
mov
and
inc
lcall
adc
lret
ss
adc
dec
in
xchg
sub
cmpb
in
add
xor
and
das
aaa
push
test
out
xor
fstpl
cwtl
push
shl
sub
lret
dec
insl
xchg
adc
jp
cmp
or
pushf
pop
es
or
int
call
scas
int3
lahf
add
outsb
lds
jg
xchg
fdivs
xchg
cmc
dec
and
jno
push
push
ret
loopne
call
dec
test
push
and
jecxz
scas
mov
mov
rolb
aam
shlb
cld
iret
add
add
and
hlt
push
xlat
push
fbstp
cmp
es
cmpsl
cmp
les
mov
movsl
into
push
sahf
mov
add
ficoms
fcomps
mov
and
stc
xor
push
jae
les
aam
fldenv
pop
ret
daa
lock
test
jge
imul
cmp
jp
test
push
sub
lret
test
cmp
push
lahf
pop
dec
or
jl
cli
daa
test
adc
sahf
sub
es
cmp
inc
movsl
nop
mov
arpl
insl
push
xchg
cmpsb
imul
arpl
jl
cmp
sbb
insl
mov
cmp
xor
cmpsl
repz
push
sub
rcrl
bound
movsb
out
jno
int
or
and
jg
sbb
jle
adc
test
pushf
xchg
movsl
push
xchg
or
inc
jp
bound
or
inc
sub
out
adc
mov
stos
out
pop
test
fcoms
imul
enter
pop
into
mov
inc
je
lods
xor
fistps
xchg
fidivs
js
mov
cld
pop
loop
pop
ljmp
cmpsb
xor
lret
cli
das
lahf
arpl
ret
nop
loopne
ret
lea
and
and
pavgb
sub
add
pop
jl
push
or
dec
xor
test
iret
mov
sahf
xchg
mov
sbb
pop
lods
jg
adc
movsb
mov
and
sbb
icebp
push
pop
push
aaa
mov
pop
scas
call
push
or
push
mov
xor
jl
fcomi
in
jmp
scas
out
movsb
push
mov
inc
int3
enter
ret
xchg
pushf
aam
movsl
out
mov
sub
and
xchg
scas
dec
nop
jmp
pushf
jmp
insb
popf
inc
sahf
ja
and
xor
xchg
nop
mov
mov
mov
xor
sub
in
dec
sub
pop
mov
push
xchg
mov
incl
mov
lods
mov
pop
push
xlat
mov
lahf
push
adc
push
push
mov
adc
pop
mov
stc
or
out
js
cld
xchg
daa
das
bound
into
add
icebp
dec
int
lcall
sub
shrb
lret
je
dec
shll
pop
repnz
mov
pushl
leave
mov
lret
ljmp
leave
cmp
test
sub
xor
into
adc
dec
ret
sti
fistpll
push
jbe
fsubrl
frstor
adc
iret
add
dec
es
adc
ljmp
pushf
lea
add
in
sbb
add
movb
or
dec
fidivrl
pushf
jns
mov
xchg
and
arpl
push
pushf
cli
sbb
outsl
ss
xor
push
negb
fs
call
jge
jo
adc
jmp
mov
jb
mov
xchg
mov
fwait
imul
fcoml
xchg
addr16
nop
scas
aad
push
fdivs
pop
jge
pop
rolb
cmp
sub
or
imul
xlat
xchg
test
inc
pop
jno
cmc
mov
shrb
in
cmpsb
outsl
movsb
xchg
lcall
out
push
dec
pop
es
scas
aaa
pop
std
fmuls
sub
adc
xor
push
mov
sbb
pop
repnz
jno
xchg
cmpsl
sbb
pop
and
or
dec
or
cmp
dec
xorb
jno
out
and
imul
mov
dec
setle
fdivr
sbb
divl
lods
insb
aam
out
shlb
test
mov
sub
push
pop
sarb
xchg
xchg
aad
repz
gs
xor
imul
or
cmp
add
jnp
aad
mov
and
ljmp
and
and
in
xchg
pop
cmpb
inc
adc
mov
push
das
add
xor
jbe
js
out
leave
inc
out
mov
dec
mov
push
or
rclb
cmp
mov
push
or
test
mov
push
lods
push
mov
sbb
jbe
dec
sub
movsb
mov
lret
pop
lcall
push
imul
and
xchg
es
addb
ljmp
xor
jne
dec
cld
clc
hlt
pop
pop
cmpsb
je
lds
inc
outsb
jae
jno
ljmp
in
repz
bswap
adc
fmul
mull
test
mov
xor
add
or
mov
cmp
mov
stc
in
out
mov
jecxz
push
jns
gs
mov
pop
xchg
cltd
test
aad
in
sub
mov
aad
insb
addr16
dec
mov
fimull
xor
lods
imul
shl
xchg
mov
dec
clc
jg
imul
pushf
gs
cmp
mov
fadd
or
push
mov
or
add
arpl
arpl
mov
popf
gs
or
int3
jmp
mov
pop
test
outsb
hlt
jo
mov
out
popf
inc
fdiv
cmp
rcll
cmp
fnstenv
cmp
inc
sub
popf
dec
pop
imul
jp
aam
clc
jbe
pop
mov
clc
cmp
std
push
cld
leave
cmp
sub
and
test
mov
add
sub
loop
dec
dec
shl
fdivrs
clc
ljmp
out
aas
mov
jge
ret
xor
decb
xor
pop
lret
mov
les
mov
and
aaa
and
sub
lods
aam
test
mov
xchg
pop
sbb
xchg
movsb
xchg
push
rorb
add
or
out
push
mov
fs
lods
pop
mov
jns
pop
dec
std
shr
lea
aam
aam
dec
adc
xchg
dec
aad
notl
or
mov
mov
cld
insl
fisttps
adc
bnd
shlb
in
out
and
pop
jno
fldt
mov
xchg
fnstcw
adc
test
jnp
inc
sar
xchg
es
movsl
pop
gs
mov
popf
and
ficoms
jnp
bound
pushf
lds
repz
scas
nop
add
push
cmc
cmpsl
push
push
jecxz
xchg
fwait
int
nop
in
fnstenv
pushf
mov
hlt
das
pusha
in
jns
xchg
cmp
out
jl
inc
insb
out
inc
mov
sbb
jns
sub
push
or
popf
icebp
push
jae
fildl
in
sbb
aam
cwtl
leave
mov
jae
cs
fists
mov
mov
fisubrs
pusha
and
xor
mov
xchg
out
xchg
cmp
test
sub
leave
ficompl
test
inc
pop
hlt
add
adc
pop
xchg
mov
mov
mov
mov
fwait
and
cmp
das
cmp
mov
cmp
mov
adc
lret
adc
into
insl
insb
mov
pop
insb
mov
cmp
add
inc
cmp
movsl
push
outsl
in
push
adc
push
iret
cmp
scas
push
stos
sar
push
lea
icebp
mov
dec
ret
inc
cwtl
pop
cmp
inc
pop
rcrl
stos
inc
fs
jecxz
out
cmpsl
jnp
add
or
adc
sub
fwait
js
push
and
dec
mov
push
mov
mov
sbb
mov
mov
sbb
lods
adc
es
jnp
dec
popf
lret
loope
aaa
sub
fs
or
out
nop
arpl
sub
movsb
inc
xchg
or
jle
adc
in
mov
sub
dec
pusha
mov
or
movsl
dec
mov
add
test
mov
ds
nop
xor
sub
dec
jnp
push
hlt
ret
fadd
dec
insl
cld
mov
mov
inc
push
stos
jb
fs
dec
test
data16
incb
pop
sub
fsubrp
jmp
sbb
das
idiv
div
pushf
inc
push
cmp
inc
insl
xchg
ds
pusha
mov
das
mov
mov
pop
push
daa
pop
dec
sbb
xchg
sub
lea
sub
popa
and
mov
nop
sti
or
dec
lods
mov
inc
mov
or
mov
popf
ss
jmp
jne
pop
mov
cmp
dec
fimuls
xchg
cmp
sbb
xchg
cld
scas
stos
pop
call
push
or
or
jmp
lret
jp
mov
mov
mov
and
xchg
mov
cmpl
mov
out
jne
mov
sub
js
push
incl
sub
aad
add
mov
aaa
enterw
iret
mov
cmp
lret
inc
jg
ret
mov
les
pop
jge
fstpl
and
sahf
mov
push
mov
ret
mov
ret
dec
push
test
pop
ljmp
jns
fwait
in
es
jle
jo
mov
mov
sbb
inc
loop
in
int3
lea
pushf
fadds
inc
rolb
test
rol
cmc
faddl
lahf
mov
push
test
add
shll
fs
push
out
fimuls
xchg
addb
inc
stos
jmp
leave
inc
subb
stos
mov
sub
or
push
mov
or
xor
in
lahf
pop
repz
je
jns
jae
fnstcw
jg
push
repz
pushl
cmp
cmp
inc
fxch
mov
mov
mov
jp
roll
mov
dec
arpl
inc
imul
xor
clc
pop
pop
popf
loop
mov
in
stos
test
dec
repz
out
or
cli
in
dec
es
push
test
push
pop
ljmp
add
enter
sub
mull
loopne
sub
imul
xor
jp
imul
movb
std
adc
insl
call
daa
int
jb
xchg
stos
fidivrs
std
fimuls
lods
dec
and
push
dec
shrl
or
jb
idivl
popf
mov
setle
sub
scas
pop
dec
and
mov
stos
cmp
add
mov
sbb
scas
neg
pop
fcompl
cmp
cmp
ret
test
in
xor
scas
out
inc
mov
lea
and
jbe
adc
xchg
lods
scas
sbb
push
hlt
xchg
std
loop
addr16
pop
and
js
cli
mov
stos
out
add
loop
push
cmc
repnz
push
lea
adcb
dec
mov
push
scas
sub
cmp
mov
imul
xchg
add
xchg
mov
fmul
and
pop
lea
mov
test
xchg
dec
sbb
xchg
push
dec
outsb
mov
jno
hlt
in
adc
cli
or
or
aam
xor
fstps
push
sbb
push
or
dec
push
scas
push
adc
fwait
inc
mov
int3
pop
mov
fs
sbb
push
push
test
xor
ret
stos
sub
rcrl
push
dec
int3
in
aad
sub
jns
call
mov
stc
xchg
cmp
dec
xchg
and
cltd
mov
dec
scas
cmc
mov
add
in
cmp
out
dec
pop
test
add
and
clc
xchg
loop
jl
pop
mov
das
outsb
xor
insl
jge
jmp
or
push
and
cmpsb
xchg
sbb
mov
dec
jg
test
repz
mov
sub
movsb
repz
cmp
dec
testb
add
mov
adc
repnz
shl
xchg
push
jl
jae
push
repnz
jle
fs
xchg
xchg
fistpl
jg
imul
iret
cmpb
cmp
call
ret
cmpsb
clc
dec
xchg
lret
push
sub
or
sub
mov
test
xlat
in
dec
sub
ja
ja
and
sbb
and
dec
mov
cmpsl
adc
xlat
xchg
add
subb
popa
rcr
push
pusha
pop
mov
jne
scas
or
in
cmpsl
add
test
mov
add
push
adcb
pusha
lods
jae
int
enter
jl
ljmp
add
movsb
popf
or
xchg
pop
pushf
dec
fidivs
mov
sbb
mov
xchg
sub
xchg
icebp
daa
fbld
lods
jge
ja
or
pop
nop
scas
out
inc
sahf
inc
cltd
dec
inc
sbb
jno
mov
enter
out
mov
xchg
sub
outsb
lret
mov
call
push
xor
addr16
cmp
pop
inc
nop
icebp
popf
and
ljmp
xor
pop
jle
jecxz
fmull
lcall
jbe
fsts
xlat
push
lock
lds
push
fstl
mov
pop
xor
aad
mov
xchg
out
mov
dec
jno
ret
fistps
fcoml
out
test
lea
enter
dec
cmc
or
mov
mov
sub
lahf
or
sbb
jge
mov
lahf
jns
in
xor
mov
fld
cmp
sti
sbb
repz
pop
xor
xor
xor
shll
pop
pusha
cmc
mov
add
ret
or
mov
jmp
jb
adc
lods
popf
add
cmp
mov
idiv
sub
bound
jno
pop
jnp
xor
sbb
dec
cmp
imul
push
lret
jmp
sahf
neg
xchg
cli
enter
pop
cltd
or
pop
mov
pop
mov
and
mov
loop
cli
adc
repnz
orb
out
repnz
jp
loopne
cmp
and
pushf
scas
push
loop
mov
and
cld
mov
sub
ret
sbb
outsl
sbb
or
xchg
bound
push
xchg
sti
and
lahf
cmp
xchg
sahf
cltd
jae
ss
jmp
bound
fucomip
xlat
cs
cmp
or
pop
mov
xchg
addr16
cli
aas
ljmp
cmp
outsb
and
gs
shl
mov
jmp
xor
cltd
fidivrl
push
inc
push
popa
mov
sub
adc
jo
test
ljmp
jle
dec
andb
icebp
jno
or
out
cli
xchg
out
jo
mov
mov
rorb
je
mov
pop
int3
iret
add
xchg
outsb
push
xchg
adc
jbe
cltd
popf
rolb
das
mov
sub
int3
jno
adc
jl
aad
je
iret
sahf
cltd
imul
vgf2p8mulb
repnz
xchg
shrb
add
mov
mov
cmpsl
add
in
pop
fistpll
rcr
mov
push
push
ret
mov
push
loope
clc
mov
mov
negl
adc
xchg
aas
mov
mov
and
pop
push
mov
pop
or
mov
mov
js
sbb
pop
cmp
xchg
sbb
cmp
lret
push
adc
lds
or
pop
pop
jmp
cmp
les
cvtps2pi
incl
pushf
xchg
fistpll
mov
cmp
test
roll
idivb
fdivrl
adc
enter
push
dec
imul
ret
mov
mov
cmpl
std
jns
mov
sub
arpl
push
aas
pop
jmp
dec
cmp
push
addl
jg
jle
xchg
stos
push
js
addr16
es
cmp
add
mov
sub
mov
pop
lods
jb
inc
adc
push
pop
ret
mov
adc
mov
mov
inc
mov
push
jnp
test
leave
or
push
sti
inc
testb
sub
mov
aaa
pop
pop
repz
mov
xchg
mov
js
adc
stos
int
xor
iret
xorb
inc
ja
or
or
dec
filds
adc
outsl
shll
and
mov
cli
jae
imul
pop
pop
in
push
test
jne
sarl
mov
scas
cmp
pushf
jne
jnp
mov
movsl
jecxz
jg
orl
stos
iret
stos
mov
insl
jg
xor
cltd
test
dec
mov
xor
sub
mov
in
dec
mov
cmp
cmp
mov
insb
xor
test
pop
fs
jb
inc
and
fmul
fdivs
xchg
jnp
jl
or
out
clc
daa
nop
outsl
cmp
iret
cmp
movsb
cli
popf
add
int3
adc
hlt
insl
jns
and
jbe
push
push
pop
fcmovnb
pop
jno
push
in
push
sbbl
cli
jnp
jnp
std
mov
insb
push
icebp
fwait
inc
mov
mov
mov
fcoms
loope
cmp
mov
and
dec
sub
cmp
int3
or
jno
dec
into
xchg
mov
popa
sub
pop
imul
xor
add
sub
lods
or
xchg
cmp
pop
xor
jne,pt
das
cmp
mov
and
fwait
dec
std
dec
cmp
mov
ljmp
jg
and
xor
xchg
mov
lock
xlat
sub
imul
sbb
jg
movsb
insb
test
pop
sbb
rolb
push
call
fsubl
dec
imul
and
pop
jae
add
mov
mov
and
mov
rorl
insb
dec
out
call
aas
in
loopne
jg
outsl
int
mov
fldcw
pushf
es
cmp
cmpsb
loopne
shll
scas
imul
and
ss
ror
fldl
xchg
flds
pop
mov
in
das
ljmp
das
mov
mov
lods
sbb
push
sbb
cwtl
jbe
andb
mov
testb
lret
stos
sub
mov
enter
mov
mov
sahf
stos
push
mov
sub
xor
not
xchg
xor
aad
out
aas
loopne
or
mov
mov
sarb
xchg
insl
dec
xchg
mov
dec
int3
enter
fcomps
cmp
shl
popa
and
xor
stos
ret
jns
aaa
add
or
cmc
add
mov
ret
mov
mov
push
inc
inc
jl
fdivl
fdivrs
dec
and
xchg
mov
fs
repz
xor
mov
jbe
cmc
adc
and
sub
shll
cwtl
mov
stos
sbb
lahf
dec
mov
add
push
sub
sub
mov
xlat
insb
jp
imul
sub
test
gs
sbb
jae
popf
pop
pop
in
lret
inc
movsb
cmp
xchg
fstpt
ja
cwtl
jno
cmp
not
or
dec
sarl
jge
cltd
fadds
cmp
dec
cltd
inc
insl
outsl
pusha
lds
into
xchg
into
ret
mov
jns
push
inc
pop
mov
ret
test
mov
lea
fs
and
imul
int
xor
mov
idivb
jno
sti
cmpsl
adc
aad
sti
add
lds
dec
cmp
mov
fs
movsb
rcr
cli
lods
jo
jp
cmpsb
xchg
sub
adcb
mov
jge
dec
and
es
mov
aam
cmc
sub
xor
call
dec
fcmovnb
or
pop
push
dec
out
push
dec
imul
adc
cli
or
idiv
xchg
incb
pop
mov
push
imul
pop
popf
pop
out
mov
inc
aam
lea
mov
outsl
push
pop
add
sub
jns
adc
push
jbe
out
ficoml
mov
pushf
adc
stc
insl
insb
pop
ss
xchg
xchg
cmp
incb
mov
aam
pop
in
sub
adc
add
and
add
shld
mov
xchg
push
cpuid
and
push
mov
xor
idiv
loope
leave
sbb
jno
xor
pop
push
xchg
rorb
out
ja
sbb
clc
rcl
testb
jl
cvtdq2ps
call
mov
cli
notl
xor
mov
jbe
mov
cwtl
lods
clc
aaa
add
dec
inc
xorb
adc
dec
pop
sahf
or
in
pop
lock
into
push
lcall
faddl
pop
pop
movsb
in
adc
pop
test
inc
xchg
out
jge
nop
jo
arpl
mov
ficoms
mov
pushf
jo
or
dec
out
xchg
test
sbb
jns
lds
add
jl
sbb
nop
sub
popa
adc
fs
mov
testb
je
xchg
lret
xchg
jecxz
das
mov
xchg
push
call
xlat
test
add
into
sub
lahf
cmp
cmp
xor
mov
xlat
fnstcw
xchg
andl
roll
cmp
xor
jnp
mov
jnp
clc
sbb
sub
push
hlt
nop
clc
mov
mov
cmc
negl
xor
xor
and
aad
sub
or
sub
xlat
dec
dec
fcmovne
dec
jp
test
and
add
mov
subps
stos
add
and
stos
ljmp
inc
rolb
out
or
pop
enter
test
arpl
test
push
pop
jbe
add
pushf
adc
xor
movb
push
xchg
sub
sub
cld
push
lock
bound
mov
aas
rcrb
jmp
pop
sbb
sbb
jmp
sub
push
inc
sbb
mov
pop
mov
mull
leave
daa
push
dec
dec
jns
xchg
movl
xlat
mov
mov
nop
sub
cltd
pop
xchg
xchg
lods
fiaddl
nop
mov
outsb
xor
jp
movsb
xchg
cmc
int3
push
mov
xor
js
sbb
pop
xor
xor
mov
xor
fsubrl
mov
mov
repnz
jl
scas
lret
clc
inc
add
cmpsb
xor
jbe
mov
mov
push
in
ds
pop
mov
scas
push
add
push
xchg
sbb
add
cmp
xchg
lret
xchg
jg
nop
jbe
fildl
and
fwait
aas
mov
ret
push
jne
adc
add
inc
and
cltd
lods
mov
in
adc
push
mov
push
adc
jne
fists
or
hlt
inc
add
mov
or
pop
add
xor
iret
movsl
loope
out
into
loopne
stc
jbe
dec
aam
cmp
or
lods
xor
fisttps
pop
add
xor
xchg
sub
jmp
mov
push
test
dec
add
adc
es
add
std
mov
stos
adc
mov
mov
jl
or
jmp
sbb
jnp
xor
addl
test
mov
frstor
xchg
cmpsb
lds
mov
jg
into
fbstp
ljmp
and
mov
xlat
lcall
pop
adc
xor
xchg
mov
mov
xor
pop
rcrl
repz
mov
pop
pop
lret
sbb
mov
dec
push
test
outsl
xor
add
or
loope
orl
jae
mov
outsb
inc
cmpsl
dec
jmp
or
divl
adc
adc
cli
cmp
movl
scas
inc
popa
xchg
lods
and
lahf
out
jecxz
cmp
adc
adc
cli
pop
cmp
bound
ja
rorl
lret
inc
xorb
stos
fsubrl
sub
imul
insb
mov
push
dec
aad
popf
jb
and
icebp
or
mov
xchg
push
leave
bound
in
fwait
push
imul
inc
movsl
test
mov
mov
shlb
sbb
fld1
dec
mov
shlb
leave
mov
and
call
xchg
nop
je
mov
pop
adc
cmp
xchg
mov
xchg
sbb
fwait
arpl
xlat
sar
imul
sbb
iret
jmp
in
icebp
cmp
jne
sbbl
icebp
lret
mov
xor
xor
cltd
ret
xchg
pop
popf
movsb
movsb
aad
mov
stos
xor
xchg
testl
push
xlat
push
push
nop
fists
cmp
push
push
pop
fcomip
sbb
jp
addr16
mov
pop
xchg
and
push
dec
or
mov
mov
test
inc
mov
ja
xor
cmp
mov
dec
aas
es
mov
jno
mov
fwait
mov
mov
lret
mov
mov
mov
pusha
ss
xor
or
sub
call
subl
in
fld
lret
ds
dec
inc
adc
cmp
or
scas
xlat
pop
out
cmpsl
cmpsl
dec
int
cmp
mov
mov
nop
loope
add
repz
xor
add
scas
mov
scas
ja
fstl
es
stos
fldl
jmp
lock
add
scas
add
mov
push
push
jns
cmp
add
mov
scas
push
and
je
mov
fisubs
cmp
mov
clc
outsb
xlat
mov
mov
in
out
pop
xchg
cmpsl
cltd
ljmp
mov
sbb
pop
cmp
dec
jno
leave
jo
mov
cltd
mov
dec
mov
jmp
aad
mov
pop
scas
lods
stos
into
ljmp
mov
nop
lds
aaa
sbb
jge
lea
dec
mov
test
inc
jp
adcl
cld
imul
fldl
mov
mov
mov
mov
outsl
negb
adc
imul
lret
repz
push
adc
sub
aam
pop
jb
xor
mov
mov
repz
push
sbb
or
mov
cld
xorb
int
xor
fstpt
sub
sbb
in
cmp
fstpl
jp
lcall
jl,pt
cmp
and
loopne
in
cmpsl
mov
push
fwait
cmp
imul
popf
es
insl
mov
sbb
rcr
push
fdivl
test
in
push
loope
rcrl
stos
dec
test
mov
xchg
cs
ja
cs
or
nop
mov
sbb
cwtl
and
sar
mov
bound
cli
sbb
add
nop
shrl
scas
ljmp
xor
lock
push
jae
cmpsl
inc
daa
pop
es
pop
add
mov
sbb
mov
add
arpl
std
in
or
sub
push
mov
sbb
ljmp
xor
cmp
pop
lds
dec
outsb
aas
lcall
add
ja
shl
loope
sbb
lods
aad
montmul
cmpsb
add
push
scas
shlb
and
inc
nop
fs
nop
cli
test
es
mov
mov
loopne
pop
inc
or
imul
push
mov
scas
sbb
add
enter
pusha
test
cld
jae
mov
fidivrs
out
repz
fbstp
jno
push
mov
cmpsl
sbb
inc
mov
xchg
xor
mul
adc
xchg
xchg
add
adc
in
lds
imul
je
enter
mov
sbbb
or
cmp
mov
outsl
push
scas
mov
out
mov
mov
push
sbb
loopne
stos
mov
adc
xchg
push
test
cld
dec
nop
nop
mov
and
enter
test
outsb
sbb
fs
pop
sahf
pop
and
call
pop
test
int3
pop
aas
scas
xor
push
ret
or
mov
sbb
xchg
xchg
std
xchg
fsubr
leave
push
pusha
pop
cmp
imul
lahf
jnp
cmp
fs
jo
stc
and
cmpsl
int3
andl
add
inc
xchg
js
popf
lret
fisubrs
xchg
xor
mov
lcall
sub
cmc
push
hlt
sbb
add
add
push
xchg
inc
jo
stos
in
adc
fisubl
in
insl
inc
into
jecxz
pop
dec
pusha
pop
or
mov
mulb
mov
aas
cwtl
sbb
ss
loope
aam
jl
shrb
sbb
iret
and
push
adc
es
push
sbb
shlb
mov
or
aas
jns
in
jl
lcall
adc
add
sub
mov
sbb
inc
jp
mov
cmp
push
mov
lret
loopne
jmp
mov
sub
add
xchg
lea
in
movsl
das
fstp
gs
and
pop
dec
fists
arpl
sub
inc
mov
jnp
or
into
jno
xor
adc
mov
xchg
fnstenv
bound
pop
pop
test
mov
push
adc
cmp
shlb
xchg
cmp
enter
xor
negl
lods
mov
xor
ret
jns
jns
adc
xlat
stos
mov
loop
sub
sub
sub
mov
js
mov
jne
lock
jp
xor
pop
ret
shl
insb
shll
push
jmp
pop
cmp
jg
lods
sbb
lds
nop
inc
inc
xchg
imul
push
pop
inc
icebp
push
jb
jecxz
int3
hlt
dec
sub
ss
push
adc
adc
or
jae
add
mov
shrl
jecxz
leave
insl
xchg
aad
ja,pn
scas
or
std
add
lods
or
dec
lods
cmp
ret
fsubl
jno
stc
dec
jbe
pop
jmp
mov
shll
push
ret
push
arpl
enter
push
mov
fisubl
xchg
mov
stc
je
iret
sbb
imulb
push
mov
add
sub
cmp
les
pop
testl
mov
jo
or
sahf
add
cmpsl
pop
seto
mov
iret
rcll
mov
incl
add
adc
and
mov
jbe
add
aam
inc
int3
call
inc
in
out
aad
int3
js
iret
insl
dec
aaa
mov
int3
mov
mov
adc
and
les
shrl
icebp
adc
pop
scas
cwtl
movsl
jge
mov
fiadds
push
pminsw
push
repnz
movb
popa
and
cli
jge
sub
lcall
stc
imulb
out
in
imul
inc
cmp
jl
adc
mov
sbb
and
ds
jne
mov
mov
mov
lods
dec
xlat
add
imul
in
lods
pop
ret
and
pop
jmp
lock
and
aaa
jmp
lret
jbe
push
jl
iret
movsb
sbb
insb
sbb
dec
mov
xchg
dec
lcall
jns
iret
mov
add
push
xchg
stc
mov
stos
push
lea
insb
pop
fimull
aaa
dec
stc
sub
pop
leave
push
adc
xchg
aam
cmp
outsb
scas
dec
sbb
or
xor
pusha
iret
cli
iret
sbb
xor
daa
jmp
subl
imul
in
sub
es
pop
aam
das
js
inc
loop
mov
xor
xor
insb
pusha
jnp
xchg
xor
cmp
mov
cmc
aaa
adc
add
sti
enter
outsl
fnstenv
dec
mov
pop
test
repz
psubusb
fwait
cld
sbb
inc
sbb
xlat
mov
pop
je
xchg
mov
sbb
pop
stc
mov
add
mov
les
aas
rclb
fcom
shlb
pop
xor
pushf
pop
popf
push
lret
mov
les
and
stos
lahf
lods
push
pop
jg
push
lret
std
mov
hlt
and
movsb
pop
mov
decl
arpl
sti
in
jge
sbb
loope
pop
mov
in
test
xor
jmp
lods
push
xor
jae
sbb
add
xor
js
aad
ffreep
xchg
dec
lds
add
push
pop
pop
pop
cmpsb
into
mov
adc
lret
jp
jbe
cmp
fstpl
mov
push
sbb
cmp
leave
push
sbb
xchg
lock
pop
inc
icebp
lods
mov
lret
movsl
mov
shl
or
adc
fwait
or
mov
xchg
mov
repz
or
test
mov
mov
adc
sub
add
popa
pop
adc
xor
repz
and
xchg
test
shll
out
mov
fstpl
scas
pop
or
xor
insb
ds
pop
dec
mov
jg
es
js
clc
mov
push
push
sub
nop
or
fldl
pop
clc
mov
jnp
mov
jnp
lods
push
gs
and
adc
outsl
add
mov
inc
inc
lret
das
and
pop
xchg
push
xchg
and
jmp
push
and
mov
imul
bound
addl
push
sbb
lea
inc
div
mov
stos
mov
call
push
mov
xchg
cmpb
cmpsl
je
cmp
jns
fwait
inc
inc
es
fs
std
or
add
mov
adc
cli
cmpsl
dec
or
xchg
ds
stos
call
sbb
xchg
aaa
lahf
js
hlt
cmp
jp
loope
inc
cwtl
in
pushf
inc
mov
decb
arpl
push
jecxz
fxch
pop
xlat
mov
mov
dec
clc
movsb
cmp
imul
lcall
dec
sbb
mov
push
je
jl
sub
add
loope
sub
mov
and
add
out
jb
fs
push
pushf
cmp
arpl
cmp
or
mov
jmp
and
jecxz
fcmove
sub
enter
dec
pop
xlat
dec
push
xchg
lds
xor
mov
int3
jo
loop
xlat
mov
jecxz
in
adc
sbb
stc
rcll
cld
cld
cmc
aas
aas
sbb
inc
shrl
sbb
sub
bound
sbb
in
push
mov
sbb
jge
pop
aam
xchg
mov
push
in
mov
je
mov
push
sbb
cmp
mov
mov
inc
xchg
adc
add
jp
aam
xor
xor
aaa
cmp
xor
or
rorb
test
insb
aas
in
inc
xchg
push
loope
repz
mov
pushl
mov
fsts
adc
pop
inc
mov
outsl
arpl
outsl
push
jecxz
dec
jmp
cmp
out
es
or
add
fists
cmpsb
adc
jne
rolb
out
push
mov
pop
in
dec
popa
fidivs
out
xchg
lcall
cmp
test
les
cld
out
sbb
scas
mov
lea
sub
add
xlat
push
pop
pop
push
rcrb
add
inc
mov
movsb
ds
dec
pop
inc
bound
aam
push
push
popf
popf
rcr
cld
hlt
push
lret
fiaddl
push
into
cltd
mov
mov
negl
cmp
or
rcr
cmpsb
dec
xor
cmpsb
dec
movsb
aaa
int
and
jle
push
lods
jle
sbb
loop
aaa
out
mov
pop
outsb
dec
or
ret
mov
sub
fs
ds
add
push
ljmp
mov
out
mov
sbb
cmpsl
repnz
jns
out
divb
scas
aad
sbb
shlb
icebp
inc
rorl
inc
adc
mov
xor
outsb
pusha
cwtl
add
xchg
mov
aad
jl
mov
rclb
rolb
dec
scas
ds
lret
nop
test
lds
das
add
jmp
bnd
int3
mov
pushf
cmpsl
inc
fstp
stc
ret
out
pushf
cmp
aam
jmp
aam
int
sahf
cmp
add
push
test
fbld
jb
jns
pop
movsl
jl
dec
popa
lret
stos
popf
pop
cmp
cmpsb
xor
cmpsb
clc
inc
les
popf
sbb
jne
idivl
rcll
xchg
sbb
pop
xor
in
push
cs
mov
fcoms
push
sbb
and
fidivrl
ds
pusha
and
lar
ficompl
push
adc
mov
or
ljmp
or
add
movsl
mov
pushf
push
daa
jo
pop
sub
push
jg
pop
add
xchg
sub
int3
scas
mov
jbe
sbb
test
loop
cmp
sarb
pop
mov
divb
rcll
jne
xchg
push
inc
jno
cmp
mov
mov
ja
outsb
sub
lods
mov
out
mov
inc
sbb
adc
sbb
aad
fidivs
pusha
cli
idiv
in
repz
sub
fsubl
stc
push
sbb
cmp
cmp
aad
jecxz
mov
leave
cwtl
push
sbb
test
mov
xchg
sub
add
push
fildll
jmp
fists
jae
fs
and
loop
cmp
mov
rcrl
add
mov
jmp
hlt
add
mov
push
xor
roll
jbe
or
and
sub
imul
dec
pop
mov
imul
xchg
mov
int3
pop
inc
cmp
and
lret
sbb
notl
or
mov
jno
adc
sbb
push
xchg
jbe
fs
std
adc
adc
cmp
pop
sahf
mov
jl
mulb
loope
shr
push
ficoms
ret
insb
mov
ss
insb
xor
pop
cmp
rcl
shr
lcall
mov
mov
scas
out
rorl
dec
and
jno
cmp
ret
mov
or
pop
jge
inc
ds
and
leave
je
lea
arpl
dec
sub
sbb
sahf
movsb
add
fdivrs
jp
inc
enter
dec
push
bound
test
les
push
and
inc
stos
std
mov
std
adc
jmp
ret
mov
sbbb
stc
mov
std
mov
inc
sbb
stos
daa
xor
mov
ret
cmc
mov
jne
ja
imul
inc
pop
cwtl
out
adc
mov
aas
add
and
push
cmp
pushf
stos
mov
test
dec
mov
mov
jb
dec
test
lods
aas
stc
adc
mov
adc
jno
add
adc
add
adc
xlat
xor
mov
test
lcall
ficoms
sbb
xchg
add
and
adc
outsl
roll
or
es
inc
xor
int3
mov
inc
cmp
mov
out
push
mov
cwtl
add
jp
lock
out
shlb
iret
ret
and
xchg
push
mov
add
inc
in
jo
aas
aam
adc
cltd
repz
xor
lcall
xor
inc
shlb
mov
or
dec
js
pusha
adc
sbb
xchg
jmp
pop
cs
sub
loop
fdivl
pop
fwait
mov
test
mov
lahf
sbbl
in
xchg
pushf
lods
inc
int3
mov
cmp
sub
adc
in
mov
mov
fs
into
aaa
pop
je
adc
out
jo
mov
jge
jo
pop
testl
push
adc
pop
push
push
push
ds
push
or
push
ja
hlt
fstl
nop
dec
outsl
loope
xchg
or
sbb
pop
inc
lods
test
cmp
dec
dec
jmp
mov
push
ret
fisubl
jmp
dec
mov
fidivrs
les
push
movsb
jb
jns
mov
mov
jne
into
test
xchg
jl
cmpsl
adc
cmp
ds
out
testl
outsb
sahf
xor
mov
dec
xor
xor
lea
mov
add
mov
mov
mov
sub
sbb
bound
ds
xorb
cwtl
ficomps
inc
add
lret
std
cmp
inc
add
subl
imull
mov
loop
scas
jge
push
xchg
xchg
in
xor
dec
xlat
cmp
testl
pop
out
adc
pop
jle
pusha
cmp
jmp
int3
lock
stos
pusha
mov
mov
aaa
add
adc
sbb
pop
mov
xor
inc
xor
push
pusha
mov
dec
cmc
mov
jae
leave
lret
aad
loope
in
mov
and
addb
sbb
lea
cld
lret
sub
arpl
dec
loop
stos
sub
not
push
mov
loopne
lods
pop
in
scas
shrb
sbb
in
cmp
add
jo
call
movsb
jecxz
imulb
mov
notb
cmpsl
cmpsb
cmp
push
outsb
fsubr
pop
fcoms
dec
adc
addr16
ror
mov
pop
xor
pop
dec
fistpl
leave
fnstcw
jns
pop
sub
scas
and
push
jns
loopne
mov
add
pmulhw
clc
adc
rolb
leave
pop
test
imul
sahf
add
xchg
and
loope
jmp
sub
mov
add
inc
add
aad
pushf
xchg
xchg
jae
cmp
int
pop
mov
mov
je
jbe
sahf
mov
insl
cwtl
adc
das
lret
sub
or
mov
adc
dec
jnp
sbb
mov
mov
cltd
jle
mov
inc
ja
call
jb
jne
in
pop
and
shlb
sbb
mov
xor
outsl
inc
test
add
out
adc
sbb
mov
imul
lahf
cld
lcall
xchg
inc
or
sahf
add
and
xchg
sbb
adc
push
jb
cli
pop
push
cmp
cmp
clc
lret
xchg
pop
mov
xchg
jmp
lock
jbe
cwtl
stc
mov
mov
flds
inc
jp
stos
fwait
lods
push
mov
pop
xor
popf
loop
je
push
push
dec
xchg
mov
gs
mov
lea
subb
faddl
sbbb
xchg
xchg
and
jne
push
xor
shr
fwait
dec
pusha
popf
cmp
jnp
xor
xchg
xor
add
cmp
lock
mov
add
test
xlat
sub
cwtl
lods
add
xor
scas
lods
negb
fcmovnu
daa
mov
pop
or
mov
je
pop
test
fstp
mov
lret
sbb
pop
addr16
icebp
push
fiadds
xlat
jbe
into
dec
jnp
mov
je
xchg
mov
cli
inc
std
xor
dec
sub
clc
jge
pop
cmpl
outsb
sbb
pop
jle
mov
ja
stos
sub
dec
jnp
mov
insb
lcall
inc
xor
dec
test
loop
jae
push
mov
sub
cmpsl
mov
push
ficomps
push
jecxz
sbb
mov
fldenv
mov
jno
or
mov
adc
lods
fwait
pop
jno
cwtl
push
bswap
xchg
add
fldt
shrl
lret
test
aad
cmp
inc
outsl
pop
mov
sub
and
inc
roll
mov
pop
in
cmp
mov
out
lahf
out
lea
jg
lods
cmp
cmpsl
xor
sub
arpl
mov
out
aas
jg
iret
xor
mov
sbb
dec
cmp
loop
fistpl
aas
insl
sub
test
test
push
mov
push
inc
xchg
mov
and
and
mov
into
mov
xchg
out
push
mov
xchg
xchg
push
jg
loop
nop
mov
and
sti
aaa
jbe
out
out
xchg
das
mov
int
leave
push
cmc
and
mov
lock
pop
pop
cmp
jmp
insb
jl
add
mov
loope
dec
test
stos
ss
pop
jge
std
inc
fistpll
and
push
xchg
sbb
jb
mov
cltd
adc
cmp
js
scas
lahf
int
lds
pop
in
movsl
out
push
lds
and
inc
leave
mov
mov
cmp
dec
jb
mov
cmp
push
in
jle
cmp
scas
incb
mov
cmp
lea
add
outsl
mov
rolb
sbb
js
hlt
adc
lret
xchg
out
or
cs
add
cmpsb
xor
dec
add
adc
lret
stos
inc
addr16
lahf
push
push
add
iret
jl
test
fidivl
hlt
mov
dec
filds
cmpb
inc
mov
insl
mov
jne
lret
hlt
sbb
sub
test
or
jb
cmp
ss
data16
out
lds
popf
pop
arpl
xchg
push
adc
mov
mov
cmp
movsb
dec
cltd
mov
dec
cmp
movsb
or
rorl
int
xchg
mov
jmp
inc
jg
fisubrl
mov
clc
shr
jnp
mov
bound
sarb
mov
mov
dec
xor
cmp
adc
push
jb
pop
jns
sbb
cwtl
out
movsb
and
in
sbb
pop
inc
xchg
adc
mov
mov
lret
push
pop
sbbl
test
inc
aad
xchg
cmp
loop
rcll
out
lret
icebp
pop
jae
iret
push
pusha
inc
pop
push
sbb
shll
stos
cmp
int3
bound
adc
insb
pop
mov
popa
push
mov
inc
xor
sbb
pushf
sbb
push
dec
cwtl
ret
pop
and
movsb
js
mov
sbb
stos
cltd
adc
sbb
and
js
cmpsb
xor
jle
mov
mov
out
addr16
mov
lret
cmp
mov
rorl
and
nop
dec
adc
jns
inc
xor
andb
faddl
sti
jecxz
pushl
pop
xchg
lods
inc
clc
aaa
mov
push
stc
bound
divb
fdivs
jl
xor
push
xor
push
sub
mov
inc
xor
sbb
insb
pop
decl
cmpsb
sar
in
mov
add
in
adc
jge
mov
cs
ret
mov
add
fisubs
jle
int3
sbb
enter
push
aaa
imul
jmp
inc
imul
sbb
mov
jns
inc
testb
leave
lods
xor
mov
xchg
clc
les
lods
decb
faddp
int3
imul
mov
in
pusha
fsubp
push
iret
xchg
call
loop
fmull
cmp
jnp
or
call
cmpl
daa
scas
and
mov
leave
ss
lcall
push
sub
xor
mov
cmp
push
cmp
xchg
pop
jge
cmp
daa
ret
inc
mov
sbb
nop
into
mov
pushf
sbb
inc
mov
fmul
sbb
cmpsb
repz
das
fwait
dec
repnz
adc
sub
jbe
jp
scas
add
mov
adc
fdivs
jnp
pop
push
sub
adc
in
stos
sbb
cwtl
popf
comiss
mov
mov
cmp
pop
xorb
push
mov
scas
ds
mov
jae
test
push
inc
xor
lahf
cli
cmp
test
inc
push
ss
loop
xor
xor
int3
push
das
lret
mov
call
iret
cs
dec
cli
and
adc
cmp
sarb
addb
dec
sti
or
inc
jo
loope
call
mov
js
popf
rol
sub
sbb
and
cmpsl
jne
mov
inc
cmp
mov
mov
mov
fisubs
bound
jbe
mov
mov
push
jne
jecxz,pn
out
testl
sbb
xor
test
pop
js
imul
scas
gs
push
out
cli
sarb
addr16
cmp
mov
or
xor
test
mov
repnz
dec
sbbl
jge
lods
dec
pop
jb
in
insl
or
xchg
jg
inc
mov
fcomps
push
lods
mov
add
lea
rorb
mov
adc
cmc
test
jmp
das
mov
cltd
mov
xor
stc
xchg
adcb
pop
stc
and
pop
pop
das
mov
imul
pop
sub
dec
in
sub
or
push
jae
mov
mov
mov
xchg
xor
cmpsb
sub
repnz
xchg
fwait
mov
and
xchg
inc
pop
jo
mov
push
repnz
push
imul
sbb
add
cli
cs
inc
pop
ds
adc
stc
aad
push
lret
icebp
push
gs
adc
gs
xor
lea
mov
icebp
shrb
orb
out
fisubs
pop
imul
cmpsb
mov
mov
push
andl
push
fidivs
mov
push
orb
xorl
cmp
shl
cmp
mov
jnp
jbe
stos
inc
mov
je
aad
addr16
sbbb
xor
insb
cmp
sbb
cmp
jge
cs
mov
lcall
mov
icebp
dec
xlat
movsl
sbb
sti
push
dec
cmp
jl
fwait
sub
xor
and
in
insb
mov
sahf
pop
or
fimull
mov
lds
jb
inc
cltd
sub
scas
cmp
inc
add
fs
repz
dec
jns
and
gs
shrl
add
xor
icebp
xchg
cmpsb
jle
cli
ss
jbe
add
dec
jle
shlb
push
movsb
xlat
xchg
xchg
icebp
es
jbe
adc
mov
leave
adc
nop
dec
aad
sub
adc
out
fsubrl
inc
mov
jae
clc
pop
loope
pushf
dec
pop
or
in
adc
in
cmp
pop
dec
out
push
xor
sbb
rcll
and
and
shll
push
rorl
aam
mov
jl
pop
mov
inc
inc
mov
push
hlt
addl
lea
test
loop
imul
clc
sub
in
sahf
mov
pop
cmp
inc
in
test
push
mov
xor
mov
adc
je
rcrb
cmp
data16
scas
rcl
clc
rcll
data16
xchg
mov
inc
rclb
inc
ss
cmp
and
pop
mov
lret
dec
test
ficoml
lahf
push
push
fucomip
dec
out
mov
outsl
pop
rcl
mov
lock
push
test
test
inc
or
rorl
lea
pushf
xchg
sbb
repz
pop
mov
jb
into
cli
push
inc
push
adc
imull
icebp
mov
cmpl
mov
daa
test
mov
cltd
clc
fstps
cltd
pop
aaa
mov
mov
adc
mov
test
add
dec
adc
adc
or
jae
mov
lahf
imul
repz
jecxz
pop
push
push
loope
dec
std
push
push
das
inc
fidivrl
push
jmp
push
dec
fidivrs
idivl
adc
or
cmpsl
inc
repz
add
and
enter
mov
mov
popf
mov
jns
jns
mov
jg,pn
cmc
sbb
xchg
xorb
lcall
xlat
cmp
lds
addb
push
jb
aad
mov
cmp
add
cmpsl
and
or
mov
pusha
call
pop
imul
out
sbb
pop
rolb
dec
movsl
outsb
je
pop
adc
es
ljmp
ds
jmp
mov
cs
leave
sarb
xor
aad
out
push
aaa
or
icebp
lods
fsubp
cltd
push
pop
jmp
fidivl
xchg
jmp
nop
ss
mov
cmp
mov
xchg
fwait
adc
cmp
push
mov
bts
xchg
notl
jg
mov
mov
add
mov
or
add
les
adc
outsb
mov
pusha
inc
in
push
cmp
add
loope
subb
sub
dec
cmp
adc
mov
cltd
cs
lods
mov
sub
mov
fldenv
scas
push
ret
mov
arpl
xchg
xor
xchg
lods
mov
pusha
push
movsb
mov
push
inc
mov
loopne
or
ret
jbe
mov
mov
outsb
test
popa
push
mov
cld
mov
clc
and
cld
in
data16
arpl
loope
fcmovnu
lods
pusha
xor
jp
cwtl
dec
pop
dec
out
ret
xchg
or
int3
loopne
inc
mov
fs
arpl
pop
je
sub
stc
inc
push
test
mov
dec
jbe
gs
sbb
xchg
js
adc
int
cli
push
jge
fs
xorb
outsl
and
xchg
data16
cld
push
dec
push
or
mov
ret
mov
outsl
scas
sub
cmp
in
sbb
sahf
adcb
test
aad
sub
pop
fimull
mov
mov
test
push
inc
lods
lret
mov
outsb
fwait
lea
mov
js
mov
out
xor
nop
idivl
cmp
fimuls
fwait
mov
jl
es
rclb
jg
pop
cmpsl
add
dec
mov
lock
dec
xor
jno
movsl
mov
jge
pop
cmp
mov
cwtl
imul
ja
sbb
jnp
out
fs
in
aam
lods
pop
out
inc
and
lcall
jae
fs
lcall
add
mov
and
xor
xchg
mov
and
pop
insb
jbe
push
jns
inc
pop
adc
adc
dec
popa
sti
lret
sub
xorb
lcall
add
imul
push
int3
or
jmp
mov
cmp
leave
jg
mov
shll
js
sub
push
loopne
xor
mov
shrb
adc
clc
push
jae
inc
lods
mov
cmp
push
mov
mov
sahf
leave
jmp
mov
mov
jg
lods
mov
fbld
dec
test
pushf
add
inc
xchg
or
xor
ret
adc
mov
pop
and
pavgw
mul
jo
jle
fdiv
cmc
sbb
cmpsl
stos
into
pop
push
ret
dec
shrl
popa
pop
fistps
cmp
rclb
mov
pop
ja
andb
cld
xor
cli
les
xchg
imul
in
out
pop
imull
dec
in
mov
or
movsl
mov
test
rorb
and
into
push
mov
insl
or
mov
sub
int3
xor
inc
dec
stos
or
mov
lret
scas
into
mov
pop
fwait
ja
xchg
and
out
mov
scas
int3
mov
push
jl
jno
orb
mov
jnp
sub
aad
loope
xor
das
cs
xor
sbb
pop
sub
out
cmp
sbb
mov
cli
movsl
dec
mov
mov
lret
xor
lcall
and
in
push
push
les
adcb
test
sbb
fnstenv
lock
mov
mov
in
fcoml
out
adc
stc
xor
add
subl
jne
in
or
or
cli
inc
cld
sub
lcall
pop
inc
rorb
pop
sbb
mov
jl
jmp
fsub
cmp
mov
fucomp
leave
fcom
pusha
or
fwait
scas
and
popf
ja
data16
aaa
jbe
pop
arpl
jecxz
or
pop
jae
jo
jg
mov
xor
xor
push
xor
icebp
and
sub
xor
out
mov
adc
ret
cs
out
and
jg
jmp
jg
inc
mov
pop
and
out
mov
push
fldl2t
mov
repnz
ds
sti
cmp
outsl
fildl
mov
daa
int
mov
jnp
lret
pop
cwtl
adc
out
sbbl
pop
mov
scas
sub
pop
mov
int3
pushf
test
xlat
mov
or
push
and
xlat
add
mov
jnp
xchg
test
jnp
add
sub
in
ja
fwait
movsl
inc
movsb
lods
mov
push
mov
int3
mov
in
out
fiaddl
imul
fs
xchg
repz
repz
xchg
out
cwtl
mov
lret
not
enter
pop
cli
into
mov
repnz
mov
gs
jecxz
fs
push
out
mov
push
adc
mov
scas
lods
pop
pop
cmp
inc
stos
push
adc
jle
mov
hlt
popf
aas
hlt
ret
mov
add
lea
into
in
fbstp
andb
andl
and
cmp
mov
lods
mov
idiv
nop
adc
xor
ljmp
aad
retw
imul
pop
inc
pop
dec
cld
mov
es
or
add
xor
negl
push
or
ds
sub
movsb
loope
cmp
lock
andl
aam
jns
sub
loopne
push
mov
test
aad
or
ja
pop
and
je
xor
repz
sub
movsb
mov
test
or
mov
xor
leave
push
and
sub
mov
jmp
lods
movsl
ror
sarl
insl
daa
jecxz
jl
mov
enter
xor
xchg
jge
scas
fcmovne
or
jmp
movl
mov
dec
inc
mov
cli
ja
shrb
clc
aaa
push
sub
in
push
gs
les
adc
mull
adc
push
sub
inc
xchg
push
imul
fildll
insb
stos
ret
test
xchg
inc
push
cmp
pop
loop
call
cmpsb
mov
popa
subb
sbb
xchg
leave
mov
ret
dec
push
push
dec
sbb
call
scas
xor
cmpsb
and
out
jo
inc
call
loop
ror
imul
sub
mov
mov
jle
sarb
arpl
xchg
aaa
cmpsb
std
push
sarl
sub
js
cmp
mov
mov
adc
out
and
into
lods
stc
cmp
cmp
xchg
insl
or
testb
jle
jl
add
pop
lahf
sti
and
mov
outsb
jae
scas
movsl
out
sbb
cmp
test
cmp
sub
leave
mov
stos
xchg
sub
movsb
dec
in
test
jne,pn
push
jbe
insb
sbb
xor
jl
sub
mov
cmp
jbe
push
add
call
mov
rolb
popf
cmp
sbb
fisubl
daa
mov
cltd
nop
pop
lock
mov
or
inc
or
inc
xchg
call
lahf
repz
icebp
ror
sahf
mov
ljmp
imul
adc
mov
data16
cmc
mov
mov
call
test
mov
fwait
xchg
xor
jb
push
repz
jecxz
in
push
mov
les
call
cld
aaa
aam
ljmp
out
adc
test
frstor
out
popa
das
imul
cltd
mov
push
sbb
or
push
or
xor
fcom
push
lret
movsb
lods
or
push
mov
adc
jg
mov
sahf
rcrb
movsl
popf
imul
cwtl
push
lret
outsl
cmp
jl
xlat
mov
fiaddl
mov
push
int
sub
test
sub
mov
fsubrs
sti
jmp
mov
dec
inc
lods
icebp
and
out
out
icebp
pop
psllw
test
mov
inc
dec
aas
or
cmp
or
pop
xor
jl
jge
add
jo
pop
mov
jmp
adc
cmpsl
add
cmp
call
mov
rcr
dec
and
or
xchg
xchg
int3
lret
out
mov
lock
and
mov
inc
lret
aad
lods
xor
xchg
cmp
enter
call
dec
jge
cmpsl
cs
or
add
in
sbb
outsb
inc
mov
out
je
add
lds
sbb
mov
sarl
stc
pusha
cwtl
mov
mov
ds
pop
loopne
loope
jb
and
cmp
xchg
in
pop
data16
outsl
mov
fdivrl
inc
push
sahf
jo
push
clc
out
push
push
insl
sub
addr16
addr16
and
add
aas
ja
push
cwtl
out
nop
xchg
cwtl
repz
bndstx
leave
fbld
es
push
fcomi
mov
adc
mov
mov
loopne
cmp
cmp
test
hlt
insb
cmp
imul
cltd
sub
fsubs
scas
ret
rol
repz
stos
sbbb
mov
daa
aam
xchg
scas
imul
push
mov
push
jo
roll
mov
insb
push
inc
fsin
scas
fists
and
movntq
je
xor
push
and
sbb
jae
enter
in
jecxz
test
jnp
fsubs
aaa
scas
popl
hlt
pop
mov
mov
jle
dec
leave
cltd
mov
or
lcall
lods
mov
imul
mov
mov
outsb
push
push
push
pop
int3
jb
xchg
dec
inc
lret
xchg
xlat
add
inc
decb
sbb
les
ror
or
fwait
leave
cmp
jle
insl
sub
leave
rcl
dec
and
pop
les
and
push
jne
bound
and
push
or
out
cltd
insb
or
es
pop
cld
mull
test
or
test
add
cmp
push
and
test
pop
pop
orb
into
daa
cmp
mov
fmul
stos
xor
in
mov
call
xor
adc
sti
dec
cmpsb
repnz
mov
xor
push
cmp
pushf
loop
jge
or
loop
scas
imul
mull
or
jae
inc
push
dec
lahf
repnz
negl
xlat
adc
repnz
test
jns
je
ljmp
cs
int
out
cmpb
pusha
or
xchg
mov
push
mov
and
mov
sub
cmpsl
test
jns
es
frstor
push
jmp
mov
ret
pushf
loope
mov
adc
jb
mov
push
xchg
sbb
dec
cmp
mov
inc
and
pop
or
lret
jg
jp
int
inc
jb
imul
mov
rcl
pop
xor
cmp
imul
add
xchg
xchg
cmp
dec
stc
mov
ficoms
adc
pop
mov
mov
insb
mov
aas
pusha
add
push
loopne
xor
fcoms
ret
mov
enter
lea
adc
test
mov
cli
scas
repz
xlat
nop
cmp
sbb
ret
lahf
xchg
sbb
lea
or
mov
xchg
repz
push
pop
sbb
lea
decb
jbe
push
repnz
sbb
jge
sbb
pop
shl
cmp
and
fdivrs
movsb
fstp
xor
dec
inc
fs
adc
push
sub
and
pop
mov
dec
hlt
es
cmc
xorl
les
sbb
push
dec
cmp
mov
dec
mov
rcll
clc
pop
fisubl
sub
cmc
aam
inc
testb
pop
xor
das
popf
jp
push
xchg
add
jns
or
xchg
into
arpl
filds
test
loopne
mov
stc
inc
jns
cli
fcoms
mov
mov
rolb
or
cltd
ret
mov
arpl
mov
aaa
insb
sub
xchg
cmp
cmp
jmp
in
jmp
mov
or
mov
jb
mov
pop
mov
push
mov
adc
push
les
mov
movsb
mov
rcr
std
pop
and
lods
scas
pop
or
mov
xor
adc
sub
out
fwait
adc
jbe
mov
stc
jecxz
xchg
scas
mov
mov
jo
mov
test
lds
push
inc
mov
xchg
loope
enter
jnp
repnz
adc
outsl
inc
cmp
dec
sbb
mov
ds
dec
out
add
cwtl
sbb
push
scas
xchg
loop
roll
in
lea
iret
bnd
or
push
pop
pusha
aam
jge
out
cmp
setns
jg
lcall
cli
and
jns
fs
sbb
imul
leave
imul
jl
jle
scas
fimull
das
rcll
mov
xchg
mov
mov
mov
int3
pop
sub
cmp
push
andl
pop
xor
adc
adc
pop
cmp
fidivrs
loop
out
nop
scas
testl
add
mov
pop
fidivrl
lods
push
cmp
jmp
cmp
add
xchg
lock
xor
jb
insb
pop
fildll
imul
in
push
pop
jecxz
mov
cld
sbb
mov
xor
cmp
jge
xchg
addr16
test
ds
loope
addb
or
pop
mov
and
rdpmc
sbb
popf
xchg
jb
scas
or
lcall
cmp
sbb
test
inc
mov
jmp
or
in
xchg
test
push
mov
sbb
mov
push
sbb
das
lods
lea
out
out
xlat
lret
scas
inc
push
and
lock
rol
push
inc
stc
and
rorl
mov
js
fdivrs
ret
jnp
addb
fsubl
mov
xchg
cs
loope
loopne
test
outsb
add
dec
into
lock
in
inc
cmc
mov
arpl
nop
cmp
pop
sub
cltd
inc
or
mov
fsts
rcrb
inc
pop
adc
loop
bound
scas
xchg
ficoml
mov
xchg
or
mov
adc
fs
mov
sbb
shlb
rcrb
sti
fadds
sbb
fimull
fs
mov
push
test
lret
rolb
insb
dec
inc
mov
imul
dec
inc
sahf
xchg
cmpb
jne
jp
sahf
mov
xor
add
loope
xor
rorl
mov
test
lret
mov
subb
lcall
add
and
bound
xchg
mov
clc
pop
scas
es
sbbb
ret
out
loope
dec
mov
inc
xor
sahf
daa
or
pop
pusha
pusha
int
lods
and
dec
xchg
push
movsl
xor
idivl
and
aaa
adc
popa
push
jnp
mov
cli
in
pop
scas
cwtl
or
shll
sub
inc
cmp
mov
int3
movsl
loope
out
and
or
mov
or
lret
ret
setge
pop
call
mov
jbe
or
pop
xchg
popf
sub
cmp
xor
fistps
sub
adc
enter
cmc
cmp
in
out
xor
imul
add
jp
mov
daa
jmp
sbb
popa
dec
sahf
add
ljmp
fldl
popa
cmp
mov
sbb
add
add
inc
popa
lret
into
xchg
jnp
aam
mov
aam
jg
popa
enter
pop
or
out
ljmp
sub
mov
sbb
inc
aaa
xlat
gs
icebp
sbb
lahf
in
push
jmp
fisttpl
adc
dec
push
sub
sbb
jp
xor
int
fldcw
adc
cmc
mov
or
or
in
cmpsl
xlat
fpatan
js
loop
sbb
dec
std
ljmp
adc
mov
pushf
mov
int3
out
jle
mov
mov
test
mov
inc
pop
lea
leave
push
push
stos
jl
jb
mov
adc
std
popf
call
xor
adc
inc
rcll
jbe
enter
mov
inc
mov
testb
testb
enter
sub
mov
xchg
dec
sub
xchg
sub
sbb
mov
jle
jecxz
pop
mov
stos
or
mov
outsl
mov
and
and
mov
rcrb
popf
xor
cwtl
or
mov
mov
or
inc
fstpt
sub
push
xor
lea
add
sbb
test
mov
insb
jno
inc
or
sbb
and
in
popa
subb
stos
xchg
ret
movsl
inc
loope
rcrl
leave
and
test
push
mov
das
call
mov
lods
mov
or
mov
jae
xor
popf
inc
dec
sbb
ret
xchg
imul
cmp
jne
std
sahf
xor
aaa
out
dec
cld
jnp
jmp
jmp
inc
sub
push
dec
mov
adc
fwait
aam
int3
lods
and
mov
pop
icebp
insl
inc
movsb
clc
movq
add
xor
idivb
xchg
aas
sbb
xor
mov
loop
ret
test
adc
add
out
xchg
call
inc
and
dec
xchg
out
pop
sbbb
out
pop
imul
add
pop
sub
push
insl
cmpsb
sub
jecxz
xchg
popa
sti
push
ret
je
push
test
notb
pop
adcl
jb
and
call
dec
jmp
sub
push
scas
mov
sarl
push
sbb
jg
ret
xor
add
std
sub
lods
out
ljmp
mov
jg
ret
sub
insb
in
add
xchg
test
testb
sbb
mov
leave
data16
jns
inc
or
cli
jecxz
fimuls
inc
rcll
mov
and
mov
pop
dec
out
loop
jbe
shrl
pop
ljmp
mov
das
mov
xchg
ror
pop
and
in
fs
mov
js
inc
inc
xor
gs
jb
sbb
das
cltd
ret
int
pop
dec
inc
lea
daa
dec
cmp
mov
or
mov
ficomps
imul
jl
int
pushf
inc
push
and
mov
mov
jno
cwtl
cwtl
mov
rcrb
mov
rclb
sub
popf
cmpsb
or
jnp
push
pop
mov
or
cltd
and
shrb
stos
shlb
add
shrl
cmpsl
xor
pushf
pusha
pop
and
dec
aas
pop
enter
and
dec
xor
daa
mov
pop
inc
xor
cmp
push
aam
andl
rcll
jne
mov
mov
movsb
cld
imul
lods
mov
jg
adc
outsb
mov
es
mov
jg
pop
mov
push
jle
movsl
ret
mov
shl
jns
fsubrl
out
cmp
mov
mov
and
outsl
das
lret
inc
dec
xor
scas
push
adc
sarl
call
add
xor
xlat
mov
mov
nop
cld
sub
mull
push
iret
outsl
movsl
in
mov
add
pop
iret
adc
mov
mov
lcall
add
adc
fdivs
repnz
repz
mov
mov
fucomip
sbb
into
fcomps
pop
xchg
jmp
push
test
pop
out
scas
leave
ret
lock
imul
fcmovbe
popf
sar
inc
xchg
es
inc
call
xchg
jb
or
or
xor
loop
push
add
xchg
fs
adc
outsl
push
jmp
jb
push
pop
inc
sbb
sub
xchg
mov
push
mov
jle,pt
inc
mov
xor
mov
popl
cmp
stos
mov
lods
jbe
leave
repz
push
dec
test
pop
movsl
leave
mov
dec
sbb
arpl
xor
xor
movsl
inc
dec
push
movsl
in
stos
pop
jno
inc
mov
dec
add
ficompl
jne
lret
shlb
push
cwtl
leave
inc
or
jmp
lods
and
rcll
es
fidivrl
jle
test
lret
dec
mov
jae
adc
adc
es
movsl
cmpsl
repnz
adc
addr16
imul
jg
icebp
adc
lret
popa
push
cmp
loop
mov
jo
outsb
push
xchg
roll
add
pop
popl
jns
and
mov
cld
outsl
outsb
mov
push
jne
mov
dec
xchg
sub
shl
mov
in
pushf
or
mov
adc
movsb
add
mov
mov
adc
and
rcr
dec
ss
loopne
lahf
pop
add
adc
push
and
cltd
dec
es
mov
loope
and
insl
cmp
jno
inc
mov
das
movsl
cmp
push
cs
mov
sar
aas
push
fildll
or
inc
popl
jmp
loopne
insb
popa
imull
jl
outsb
cltd
or
or
outsb
push
and
sbb
pop
popf
gs
mov
pop
xor
xor
pushf
sub
mov
repz
jno
mov
ret
add
xor
enter
lods
mov
mov
insb
das
and
add
or
insl
hlt
push
movsb
sub
cmp
mov
stc
fisubl
cmp
inc
jge
scas
jo
jmp
dec
jns
mov
pop
xchg
ss
scas
cmc
mov
ret
lcall
fdivrp
repz
data16
mov
jmp
int3
add
xor
imull
xchg
outsb
movsl
outsb
popa
outsb
out
mov
repz
sbbb
fcompl
sbb
lret
fdivrl
cli
icebp
lret
cmp
cmpsb
leave
out
addl
ret
out
inc
cmpsl
pop
and
dec
pop
sub
push
scas
addr16
cltd
inc
or
out
sub
int3
sub
mov
jp
and
xchg
sbb
shlb
shll
sbb
movb
in
lcall
jne
out
jae
imul
sbb
cmp
scas
or
push
inc
push
mov
jl
mov
shlb
clc
out
sbb
push
int3
push
inc
rcll
pushf
out
mov
testl
loop
mov
inc
insb
xlat
mov
pop
lahf
pop
popa
mov
pop
pop
mov
xor
jmp
test
push
in
or
scas
rep
jmp
adc
sub
sbb
inc
xchg
sbb
lock
out
ds
stc
scas
cld
xchg
shrl
in
sub
outsl
aaa
cld
add
xchg
mov
mov
cmpsb
add
add
subb
sub
mov
push
xchg
lahf
adc
fiaddl
in
push
sub
mov
js
sub
aad
pop
bound
mov
mov
stos
aaa
mov
nop
clc
cltd
push
jbe
mov
mov
sbb
sbb
sahf
jmp
cltd
mov
data16
aas
mov
cld
fisubs
jo
hlt
mov
bound
dec
adc
mov
inc
insb
fcomps
cmp
lcall
sbb
pushf
bound
mov
cli
sub
aam
fldln2
sbb
pushf
fucompp
jne
scas
pop
sub
jmp
xchg
mov
mov
pushf
xchg
and
test
xor
in
pop
fldcw
and
addb
fstpt
push
test
lcall
mov
out
lods
and
std
dec
jno
inc
jns
adc
mov
mov
jle
add
sbb
es
pop
mov
inc
mov
inc
stos
jo
push
sub
pushf
out
dec
fisubl
outsb
icebp
mov
ljmp
pop
aas
test
fwait
scas
insl
lods
push
mov
xor
mov
shrb
cwtl
ljmp
mov
adc
add
pop
lahf
ficompl
int3
cmp
xchg
xor
dec
lods
mov
jbe
xor
inc
in
das
adc
push
mov
shr
mov
std
lahf
mov
mov
dec
jg
aas
cmpsb
pop
lods
xchg
idivb
xchg
mov
lods
sti
pop
xchg
push
arpl
cmp
pop
or
push
rorb
lea
pop
arpl
dec
stc
sbb
pop
sub
mov
popa
jp
sbb
into
shll
rcll
iret
scas
cli
pop
faddl
or
int
add
mov
aam
mov
cmc
cmp
sbb
mov
dec
pop
sub
mov
add
aaa
push
mov
aam
std
adc
movb
xlat
sub
popf
out
xor
jno
sbb
jecxz
xchg
inc
js
movsb
ret
inc
mov
xchg
mov
mov
pop
stos
loop
imul
pop
sbb
mov
mov
mov
pushf
push
mov
sahf
cmp
or
cmpsl
xor
int
or
sub
scas
jo
fldl
gs
fistpl
shlb
xchg
lods
das
jle
pop
cmpsl
jmp
je
repnz
push
hlt
xor
mov
add
lea
sbb
sub
mov
lea
idiv
aaa
aam
push
inc
pop
adc
out
dec
pop
add
push
push
cmpsb
fisubrl
fnsave
cmovns
or
cmp
ret
push
stos
lds
aam
and
enter
dec
adc
test
inc
pop
push
dec
dec
aas
ficomps
add
xor
sub
leave
pusha
lcall
push
pop
cwtl
xchg
push
loopne
add
lret
mov
mov
nop
jge
sti
push
mov
mov
shrb
and
inc
shll
scas
outsb
jo
lods
adc
shrb
std
add
xchg
push
stos
push
fdivrl
pop
push
fs
jae
shll
mov
lret
and
ficoml
gs
jg
ss
jge
mov
xor
icebp
imul
jge
adc
cmp
sti
push
neg
and
mov
and
outsb
sbb
popa
cmpb
pop
hlt
pop
std
lds
inc
addr16
inc
call
mov
ja
popa
jge
repnz
xorl
fneni(8087
xchg
imul
loope
mov
jmp
mov
push
dec
push
ret
or
lods
mov
frstor
enter
jae
push
or
xchg
lret
xor
mov
jae
shrb
aad
mov
sahf
mov
add
sahf
outsb
or
sti
dec
lds
sbb
adc
mov
adc
add
sub
les
inc
mov
ret
inc
lds
movsb
cmc
dec
std
cmovge
les
daa
inc
xchg
fnsave
or
fnstenv
jns
xor
mov
add
ja
cmp
mov
movsb
fs
in
mov
mov
leave
sub
mov
test
push
cli
mov
divb
rcll
fbstp
push
rclb
lret
push
scas
sub
mov
push
dec
mov
or
popf
mov
mov
loope
das
or
xchg
inc
push
fcomps
mov
mov
fidivl
sahf
fs
ret
sbb
mov
ret
push
out
push
dec
in
inc
jns
mov
test
shll
mov
inc
and
inc
mov
repnz
mov
adc
xor
xor
mov
insb
jne
xchg
fdivrl
pop
cmpb
jne
loope
scas
pop
insb
add
fimull
pop
aam
jg
sub
mov
jne
xchg
out
push
arpl
xor
and
js
sahf
imul
mov
outsl
fwait
dec
cmpsl
mov
xchg
lahf
repz
aaa
sti
pushl
jecxz
repz
sub
cmp
lods
in
and
fisubrs
cmp
adc
cmpsl
movsl
cmc
jg
push
repz
dec
push
xchg
ret
lcall
cmp
shrl
sub
fcomip
test
and
push
adc
push
add
orb
idivl
xor
jb
lcall
jae
shlb
push
pop
popf
inc
mov
ret
mov
gs
cmp
inc
add
rorb
fldcw
fcomip
arpl
jecxz
add
lods
pop
scas
je
test
mov
outsl
pop
lea
fs
pop
add
stos
or
push
stos
xchg
testl
andl
daa
mov
iret
mov
mov
ret
pop
or
insb
sahf
leave
mov
sub
sbb
or
aas
sbb
push
jp
sbb
or
sub
mov
sbb
data16
jb
inc
push
mov
std
mov
inc
testb
subl
push
lods
mov
loopne
jne
add
pushf
call
jb
jne
add
push
out
sbbb
test
out
stc
scas
push
mov
cmpb
lret
sbb
push
fldl
nop/reserved
std
imul
gs
popf
mov
outsb
sbbl
pop
sahf
mov
cmp
and
mov
mov
jecxz
movsl
add
push
cmp
and
dec
call
inc
mov
and
insl
dec
and
mov
ficoml
mov
rclb
andb
inc
and
mov
cmp
stos
adc
add
xor
sti
jbe
xor
iret
rcr
mov
push
lods
in
in
test
popf
bound
loop
xchg
jo
cli
jnp
cmp
xor
arpl
sub
in
cli
sbb
test
jbe
mov
pop
nop
aaa
mov
repnz
pop
aam
fsubrs
gs
mov
mov
fs
add
enter
pop
cmp
push
fdivrl
fsubrl
xor
mov
jae
rolb
int
repnz
dec
enter
daa
mov
mov
iret
jo
xor
mov
mov
push
insl
inc
pop
or
push
inc
icebp
sub
loop
ret
jns
xor
fstp
data16
xor
call
repz
add
mov
out
out
pop
insl
in
push
jecxz
and
aas
mov
cmpsl
or
test
in
adc
ja
out
jae
inc
push
orb
cs
imul
jl
je
xchg
fildll
xchg
js
xchg
cmp
sub
sub
sbb
xor
cmpsb
sbbb
push
je
rol
sub
mov
xor
aas
pop
or
cmp
arpl
repnz
jae
sbb
mov
xchg
xor
and
test
popf
mov
loopne
xchg
arpl
mov
lcall
in
push
inc
lock
jmp
pop
jns
xchg
jnp
dec
or
xlat
ret
fsubrl
cmp
ja
fsubrl
xor
cwtl
outsl
mov
mov
pop
outsb
sbb
and
jg
rcrb
and
daa
jno
or
addb
in
and
mov
dec
jnp
inc
mov
push
ret
pop
mov
mov
pop
inc
negl
xor
repz
cltd
lcall
aaa
ret
jecxz
xor
adc
addl
imul
push
mov
rorb
sbb
and
mov
jmp
jno
lods
mov
lods
push
xor
add
push
arpl
jmp
stos
xchg
adc
mov
in
cwtd
jl
gs
mov
pop
arpl
cmp
js
sti
vpmacsswd
arpl
inc
scas
pop
loop
sti
fldcw
hlt
push
push
adc
or
add
pushf
and
adc
ja
push
adcl
addr16
cli
jae
adc
sbb
fadd
adcb
jb
ret
fbld
jle
or
aad
scas
pop
inc
sub
xor
inc
or
mov
imull
add
sbb
xor
cld
and
imul
inc
xchg
ret
fisubl
sub
xlat
test
test
mull
jmp
jp
pandn
jnp
mov
mov
rcrl
outsb
imul
shr
adc
popf
cld
xchg
mov
in
pop
mov
or
jg
xchg
addl
popl
xchg
bound
push
movzwl
inc
flds
lret
inc
icebp
mov
push
addb
cmp
xor
divl
jg
in
out
imul
and
mov
popf
sbb
jle
xchg
scas
jae
and
les
pop
std
repnz
pop
inc
or
movsb
jne
push
mov
ret
jl
test
pushf
out
or
mov
add
xor
hlt
adc
mov
jg
mov
pusha
dec
popf
sub
adc
xor
dec
sub
jl
push
out
dec
mov
das
pmaxub
mov
roll
lret
mov
inc
sbb
aam
push
ret
pusha
arpl
push
inc
imul
push
lock
subb
xor
lahf
movsl
inc
leave
xor
dec
sbb
add
xchg
or
sbb
cmp
test
int
test
enter
pop
pop
or
sbb
inc
neg
dec
int3
popf
es
jmp
pop
into
scas
and
pop
in
cmp
or
pop
fstpt
sub
daa
or
xor
fcomi
jbe
stos
insb
mov
aad
outsb
aad
test
xor
adc
mov
cmp
je
push
cld
mov
or
sub
xchg
xchg
aad
xchg
sbb
inc
sbb
scas
dec
filds
dec
mov
dec
repnz
and
mov
loopne
ret
jno
jne
sbb
pop
stos
repz
xchg
pushf
nop
pop
xlat
lret
movsb
clc
or
dec
cmp
or
divl
pop
adc
sahf
adc
fistps
push
jecxz
shl
sti
jp
or
rcr
je
xor
sub
adc
test
repz
xchg
add
dec
xlat
loope
imul
rolb
in
mov
jae
xor
fnstsw
cs
push
ja
movsb
lock
filds
ret
cmc
mov
rolb
sbb
sahf
sbbl
loopne
fstl
cs
imul
imul
je
scas
fcmovnu
xchg
sbb
rorw
xlat
jecxz
lretw
push
stos
pop
ret
shr
std
sub
xchg
sub
fisttpll
daa
ljmp
subb
dec
call
xchg
xorl
lods
add
xor
xor
call
lret
xchg
js
or
or
inc
repnz
jg
mov
dec
mul
xor
lock
mov
shrb
jmp
dec
add
notb
iret
addl
cwtl
inc
fisubs
shll
fiaddl
lret
stos
add
add
mov
mov
and
cld
sbb
jg
fidivs
daa
rep
or
adc
daa
mov
data16
sub
jbe
jp,pt
jb
pop
lcall
fiadds
mov
jmp
enter
lea
shr
pop
or
ds
fs
add
stc
repnz
in
test
int3
cltd
nop
test
dec
mov
movsl
lahf
jbe
sti
pop
out
and
jl
test
sbbb
leave
out
outsb
out
stos
ljmp
push
sub
daa
or
xor
popa
mov
test
rcll
and
das
cmc
mov
xor
or
push
cmp
insl
jbe
lock
or
arpl
cmp
dec
in
cmp
mov
ja
mov
jmp
imul
mov
or
sbb
fwait
add
mov
inc
out
data16
cmp
mov
adc
cmpsl
adc
ds
inc
insl
dec
leave
arpl
inc
jo
push
or
sub
pop
lret
loopne
sarb
out
lahf
sarl
clc
push
fistps
add
xor
out
lods
loopne
push
aam
ficoml
lret
fisubrl
ss
rcr
ret
push
inc
pop
mov
pop
mov
xor
inc
mov
lock
mov
push
xchg
dec
sbb
push
dec
dec
push
scas
ja
cmp
inc
push
std
out
xchg
mov
adc
xchg
dec
and
cmp
std
fisubrs
rcll
xchg
pop
outsl
inc
aam
fnop
cmc
je
add
mov
cwtl
pop
mov
sub
and
sbb
into
sahf
jge
add
ret
insl
pop
sbb
xchg
out
outsl
sahf
cmp
xchg
clc
mov
pop
dec
pop
push
movsl
adc
push
pop
mov
rcrl
or
xor
add
mov
outsb
pop
stos
push
xchg
dec
rcrl
mov
std
jg
gs
or
fwait
sbb
push
adc
arpl
jp
out
cmp
sub
jl
cmpsl
cmc
adc
out
sti
or
xchg
mov
mov
push
and
je
jb
and
xor
xchg
adc
adc
and
xchg
pop
adc
lcall
lds
cli
jmp
movl
je
fisttpll
xor
mov
test
mov
xor
nop
sbb
ret
outsb
jp
xor
dec
pushf
jmp
test
test
add
inc
popf
sub
and
lcall
jge
push
mov
testl
inc
or
mov
push
jp
mov
imul
xchg
clc
fwait
pop
dec
mov
popa
add
int3
outsl
bound
jmp
leave
es
add
cmp
sbb
and
pop
fwait
mov
insb
out
xchg
sarb
sub
xor
dec
jp
into
adc
mov
pusha
gs
sub
xchg
and
push
daa
mov
pusha
loop
iret
test
adc
dec
dec
sbb
add
and
jp
add
mov
jns
adc
mov
mov
gs
lods
dec
mov
out
cli
mov
push
jg
mov
sahf
fnstcw
loope
and
dec
dec
dec
mov
inc
cmp
std
nop
mov
call
bound
push
mov
cwtl
mov
cli
dec
lds
dec
daa
mov
add
cmp
mov
cmp
push
lahf
or
mov
shrl
cmp
loope
ret
push
test
mov
das
pop
cwtl
out
sbb
xchg
sbb
daa
cmp
xor
cmp
clc
push
imul
in
ja
push
mov
jne
mov
adc
mov
xchg
aas
jne
in
out
lds
mov
es
lea
addr16
add
rsm
in
movsb
push
add
inc
das
cmp
push
inc
lret
mov
jle
repz
lret
sbb
fstpt
sbb
mov
jns
mov
adc
pop
shlb
out
lahf
lods
dec
inc
push
pop
jp
mov
andb
cmp
and
ss
mov
sbb
inc
sub
push
xchg
pop
sbb
clc
inc
mov
lds
mov
mov
popl
sub
dec
fstpl
mov
push
and
push
int3
daa
sbb
rolb
add
imul
lcall
in
enter
clc
or
pop
out
push
imul
xchg
ret
test
lods
enter
dec
rol
jbe
adc
jnp
dec
inc
int
stos
mov
pop
cs
push
sub
test
xlat
pop
mov
insb
stos
lods
jno
into
seto
cli
jecxz
add
je
jmp
or
xor
movsl
mov
cmp
cs
cmp
pop
gs
pop
mov
pop
add
mov
lods
iret
dec
sbb
fs
and
rcrb
ret
push
lock
push
mov
sbb
fidivl
stos
adc
adc
stos
sbb
addr16
sbb
repnz
add
popl
aaa
ja
out
out
into
adc
mov
add
movsl
jp
pusha
jecxz
repnz
fs
inc
jbe
inc
pusha
insl
sub
cmc
push
in
adc
jg
xorl
dec
or
or
sub
adc
imul
adc
int
flds
jne
xchg
test
xlat
rol
addr16
rcll
addl
jae
aad
fisttps
sbb
sbb
cmp
pusha
pop
adc
push
sub
shrl
push
pusha
shlb
ficoms
aas
stc
push
addr16
or
popf
xchg
repnz
mov
pusha
cld
mov
inc
aaa
mov
aas
sub
hlt
mov
dec
out
lret
sbbl
test
mov
xchg
enter
icebp
fistpll
scas
push
push
hlt
pushf
or
movsl
sqrtps
add
mov
mov
int
sub
movsl
lret
sbb
push
dec
jns
xchg
pop
cld
pop
call
adc
popf
jmp
arpl
xor
test
int
mov
je
into
jecxz
cli
stos
icebp
push
pop
push
adc
mov
repz
aas
xchg
popa
nop
popa
es
rcrb
shr
cmp
mov
lcall
pop
jns
enter
sub
dec
loop
test
lods
fisubrl
xbegin
mov
pop
scas
inc
aas
int
add
aad
leave
jecxz
mov
pop
pop
movl
lcallw
inc
push
sahf
mov
sbb
adc
adc
mov
mov
cltd
push
jne
or
sub
push
mov
cmpsl
cmp
push
mov
push
add
outsl
sahf
in
fisttpll
mov
repz
jns
mulb
mov
pop
push
bound
mov
fiadds
inc
leave
push
cld
jle
daa
out
cmp
fstl
sti
inc
fcomps
aam
jl
sbb
daa
aam
movsl
std
jl
ss
push
int
or
sub
scas
sahf
cmp
lea
xor
shll
push
cmpsl
aad
repnz
stos
cmp
sahf
pop
jl
insl
dec
fidivl
fnstsw
popf
inc
cs
std
test
add
insl
push
pop
into
lock
push
pop
out
mov
cli
loop
dec
sub
daa
and
aaa
pushf
cmp
aad
les
fildll
test
in
pop
popl
shlb
cmp
sub
clc
loope
push
jle
add
inc
out
jb
loope
mov
sub
lea
cwtl
lds
sarl
inc
sbb
push
jecxz
daa
nop
repz
xchg
push
roll
psrlq
pop
add
daa
xlat
fldl
stos
add
mov
cmc
lcall
bound
aaa
jg
or
popl
into
xlat
cmpsb
popa
movb
push
push
jg
testl
xor
pop
inc
push
orb
xchg
jp
das
inc
dec
in
aad
sub
xchg
aaa
jl
ret
stos
fidivrs
xchg
fstpt
test
aaa
mov
popf
and
xor
pop
loopne
inc
push
mov
popa
adc
adc
sahf
jnp
outsb
jl
lods
lret
sub
cmc
adc
sub
ret
insl
lret
cmp
mov
fs
loop
push
jbe
or
and
mov
sub
test
stos
cli
cmp
lret
sbb
sarl
mov
lds
xlat
sbb
jmp
jl
jns
pop
loope
xchg
ljmp
in
andl
mov
cmp
fwait
sbb
mov
xchg
xchg
dec
push
push
rcrb
popl
lret
imul
pop
and
mov
push
push
xchg
mov
pop
stos
scas
aad
mov
sahf
test
sbb
lods
lods
mov
in
js
jb
adc
gs
ds
out
jg
adc
loopnew
xor
loopne
mov
inc
cmpsl
xchg
dec
popf
jecxz
push
xor
jnp
imul
data16
into
cmp
rol
xor
sub
adc
pop
ljmp
sub
lcall
das
loope
push
add
pop
sbb
mov
mov
mov
clc
sti
outsb
ret
pop
mov
sub
stos
sub
sub
add
dec
jae
ljmp
sub
or
jp
sbb
mov
adcl
push
or
and
mov
lods
lahf
mov
pop
movsl
jbe
popf
fldenv
stos
test
mov
stc
pop
push
push
push
xor
pop
mov
ds
cld
pusha
test
ds
cmpsb
mov
and
add
add
push
mov
push
inc
and
or
and
adc
mov
js
mov
jne
cli
inc
mov
jge
push
add
stc
push
in
lea
loope
mov
add
pop
jg
stos
sbb
and
lock
fmulp
icebp
pop
mov
pusha
shr
xor
adc
cmp
aad
enter
mov
out
jno
cwtl
jmp
ret
mov
int
xchg
stos
sar
xor
mov
add
adc
mov
je
push
mov
jle
ds
jb
testl
sbb
pop
add
adc
jge
push
cmpsb
push
and
xlat
and
push
ret
xchg
mov
in
in
xor
sbb
lahf
or
push
rcrb
lcall
lds
aas
jl
scas
aaa
insl
pop
dec
sbb
inc
out
sbb
and
cmp
aam
pop
mov
icebp
jle
xchg
lcall
sbb
loope
orl
pop
dec
cwtl
js
xchg
repnz
movsl
inc
or
and
test
out
cmpsb
push
or
adc
stos
xchg
faddl
or
jp
xchg
cld
das
mov
cwtl
sub
aam
mov
add
inc
and
xchg
or
sbb
cmp
mov
subb
into
xor
pusha
cwtl
pop
in
popa
lock
repnz
outsl
mov
in
lahf
inc
pop
and
jnp
mov
and
or
fldcw
imul
inc
cmp
xchg
cltd
mov
push
int3
adc
push
sub
inc
adc
xlat
jnp
dec
dec
push
into
imul
sti
inc
outsb
lahf
std
push
repz
ss
call
test
push
mov
call
mov
push
and
gs
cmpsl
movsb
aad
jno
lods
xchg
mov
int
cmp
int3
dec
cmp
push
jle
outsl
popf
jle
or
adc
imul
fsubl
add
push
test
scas
lahf
mov
subl
call
adc
mov
mov
add
shrb
int
mov
pop
lret
dec
push
jb
dec
jnp
fdiv
shr
dec
neg
decb
testl
pop
pop
dec
pop
bswap
jne
nop
stos
mov
xor
push
inc
les
call
jg
mov
cmp
mov
pop
or
test
push
xchg
push
sub
js
stos
push
cmp
mov
clc
jnp
pop
fwait
jmp
lret
sub
cmc
push
dec
rorb
sahf
fsubrl
xlat
jb
sti
es
test
decb
mulb
xor
mov
cmp
and
shl
jno
data16
dec
gs
mov
dec
test
sbbb
negl
or
or
orb
stos
lahf
scas
and
jbe
adc
xor
jmp
adc
push
sbb
jbe
sub
adc
nop
or
movsl
cs
jp
push
push
sbb
lods
pop
fidivrl
ss
and
shll
adc
jge
test
xorb
addl
aaa
insb
lret
mov
adc
sbbb
inc
push
mov
dec
inc
or
gs
fs
je
push
mov
lds
test
push
xor
xorb
dec
add
aad
fsubrl
push
jns
push
jge
test
and
je
dec
or
int3
mov
adc
bound
push
fimull
sbb
inc
popf
sarl
sbb
push
lahf
xor
adc
cmp
xor
sbb
inc
cmp
cld
sbb
xchg
push
mov
jne
cmpsl
out
test
popf
mov
sub
cmp
into
imul
jmp
jmp
add
mov
mov
das
repnz
int3
inc
sbb
fmull
fwait
mov
xchg
js
xchg
mov
cld
mov
add
pop
insb
and
xchg
scas
add
test
or
negb
cmpsb
and
rolb
pop
pop
fcoml
and
aam
stos
cmc
lods
and
repz
and
ficomps
sbb
test
scas
mov
dec
sbb
test
bound
test
jle
add
sbb
out
lods
test
xchg
int3
mov
loope
sti
push
mov
dec
sbb
popa
add
pushf
sbbb
push
lods
adc
mov
add
mov
pop
xchg
notb
aas
lea
jnp
fnstsw
xor
sbb
cwtl
mov
cs
xchg
mov
aaa
push
sub
mov
and
dec
jbe
aam
xlat
lea
push
cld
mov
adcl
mov
mov
push
jo
dec
dec
orl
push
rcr
push
mov
out
push
mov
or
cmp
sbb
arpl
xchg
fwait
in
in
mov
jmp
stos
jae
call
sub
and
fmull
imul
aam
testb
jae
mov
or
hlt
mov
sbb
or
aaa
data16
add
adc
mov
add
cmp
inc
mov
fisttpll
in
iret
int3
push
in
jnp
and
icebp
iret
nop
add
test
cmp
out
movsl
int
stos
jle
inc
dec
xor
and
cmpl
cmp
lahf
cmp
mov
out
lret
leave
sub
mov
loop
xchg
push
movsl
stc
in
push
rcl
sub
loop
loopne
idiv
sbb
lcall
outsl
stc
jmp
nop
add
sbb
jmp
cmp
xor
mov
jl
push
push
pop
fwait
addr16
sbb
arpl
pop
lahf
loop
add
das
fwait
jl
cmp
test
sub
mov
faddp
cwtl
dec
cmpsb
xor
jg
jae
incl
mov
mov
unpckhps
pop
and
add
xchg
inc
cmp
jnp
dec
repz
mov
rcl
cmpsl
jmp
enter
adc
xchg
mov
add
sbb
lock
cld
lret
jb
sbb
push
sub
and
mov
cmpsb
pop
repnz
push
xor
lods
mov
ljmp
cmp
out
movsl
test
popa
bound
int3
mov
shll
push
jo
pop
sbb
popf
sub
push
aam
ret
aaa
int3
mov
pop
daa
xchg
sbb
mov
lret
add
rcr
mov
pop
push
jmp
out
movsl
andb
mov
cltd
je
pop
insw
cmp
loopne
sub
xchg
inc
aaa
aas
jne
pop
ret
fdivp
jecxz
insl
into
cmp
and
outsb
loopne
or
push
mov
in
icebp
int3
sbb
pop
pop
dec
in
lods
test
rorb
jp
mov
inc
das
flds
fwait
inc
mov
fisttpl
xchg
mov
cmpsl
jge
jg
or
jge
stc
xor
cltd
xor
test
jp
xor
jmp
mov
pmullw
xorl
xchg
cli
cli
movsl
cmp
fidivrl
cmp
stc
sahf
shll
mov
pop
rorl
inc
fneni(8087
shll
mov
adcb
xchg
fiadds
xlat
push
xchg
loop
push
mov
add
ja
mov
fnstsw
push
inc
in
inc
pop
stc
jl
cmc
movsl
and
add
and
sarb
das
scas
es
das
jl
imull
pop
inc
mov
xchg
dec
cwtl
or
std
adc
out
icebp
test
je
adc
sub
cli
sahf
fidivs
cmp
sbb
movsl
jmp
push
jne
outsl
lahf
sbb
jecxz
lock
addb
dec
and
push
inc
or
dec
jo
or
int
std
fists
jne
xor
mov
inc
add
lcall
dec
cmp
jecxz
das
push
nop
lcall
push
xor
push
dec
xchg
xor
in
inc
push
clc
cmpsl
and
jno
movsl
fildll
stc
jge
js
je
insb
lock
cwtl
pushf
xchg
mov
pushf
imul
add
loopne
ss
mov
adc
icebp
dec
in
mov
cli
je
or
or
mov
cmp
cmp
push
fnstcw
loop
outsb
es
ljmp
adc
jle
jl
dec
test
dec
test
pusha
push
mov
loopne
inc
dec
add
push
add
xchg
lods
inc
stos
lret
lret
dec
pop
push
sub
pop
fwait
and
push
leave
xchg
rorb
add
cwtl
das
ret
cmc
cld
enter
dec
inc
push
cwtl
xchg
into
rcrl
sbb
and
xchg
ret
das
inc
sbb
jno
incb
jl
sti
cmp
and
js
or
pushf
out
sbb
shl
sbb
cltd
dec
xor
stc
cmp
int
xchg
and
mov
xlat
xor
fistps
and
sub
push
movsl
dec
xor
jns
jl
mov
mov
xor
mov
cmp
rol
outsl
adcb
lahf
pop
adc
stos
mov
ret
inc
or
shl
or
and
lcall
mov
cld
jle
shr
mov
push
dec
sbb
ret
xor
mov
cmp
xchg
cmp
cmp
or
addr16
movsl
test
adc
jp
imul
sbb
sbb
xchg
mull
sarl
sub
call
jle
ret
push
push
subb
gs
in
scas
cmp
xor
std
xchg
push
mov
mov
sub
push
scas
test
sti
jb
cmp
les
popf
ret
out
pop
sub
lock
mov
push
fucomi
pop
pop
ds
xor
inc
push
jl
fwait
add
shrl
lea
sub
lret
test
es
lcall
xor
xchg
cld
push
shlb
aaa
cmp
push
arpl
dec
jo
jbe
popa
insl
mov
mov
and
popl
pop
leave
dec
sub
fs
mov
pop
sti
jo
movsb
scas
shrb
pop
sbb
mov
and
sbb
add
cmp
cmpsl
pushf
or
mov
out
sub
adc
mov
cwtl
fdivrl
clc
insb
iret
xor
or
jp
mov
fsubrl
lods
sbb
push
shlb
push
xchg
jmp
movsl
rclb
adc
adc
stos
int
xchg
add
aaa
fstps
and
rolb
sub
fs
shlb
ret
and
mov
test
mov
imul
or
je
xlat
push
stos
cs
in
dec
add
orl
xchg
loopne
inc
xor
vorps
test
pop
out
scas
movsb
lds
cwtl
xor
ds
mov
adc
jp
pop
xrelease
mul
or
cltd
cmpsb
js
pop
xchg
mov
js
sbb
ret
into
test
popf
hlt
xor
call
je
and
pop
sbb
outsl
sahf
loop
daa
rcl
cmc
inc
dec
jl
adc
pop
sub
test
int
mov
lods
pop
jae
insb
or
popf
pop
pop
das
cltd
out
xchg
call
xor
mov
xor
mov
aaa
pop
dec
test
inc
loopne
pop
scas
and
sub
or
mov
lcall
bound
xchg
mov
xchg
ljmp
cwtl
push
sub
andl
ror
mov
sbb
and
test
outsl
outsb
pop
popf
adc
push
adc
fistpl
test
push
xor
and
in
rcll
pop
and
subl
mov
cmp
std
mov
xor
fistps
push
mov
iret
mov
cmp
pop
gs
dec
mov
and
lock
xor
fsubs
in
mov
xor
push
ja
dec
incl
adc
bound
xchg
cmp
fdivrs
push
out
adc
xchg
dec
out
shll
and
mov
pop
pop
imulb
fsubs
fs
push
pop
call
lds
sbb
sbb
pop
or
mov
in
insl
test
sbb
psubusw
imul
xchg
sbb
fwait
std
push
adc
add
pop
dec
jle
jle
fmull
pop
or
mull
mov
gs
and
mov
mov
add
push
je
inc
pop
mov
push
das
je
daa
mov
lahf
es
das
dec
push
mov
pop
lods
repnz
xor
mov
js
bound
nop
gs
add
push
jnp
adc
loopne
cli
cmpsl
orb
dec
sub
es
mov
mov
lds
test
mov
not
inc
jg
cmpsl
aas
pop
adc
lret
and
jmp
jnp
cmpsb
jns
out
cmp
dec
and
daa
insb
rol
mov
sub
mov
insl
scas
lock
pop
pop
mov
lods
sub
sbb
enter
xor
sub
sbb
mov
stc
out
mov
shlb
push
add
push
sbb
dec
rcrl
mov
iret
cli
jg
xchg
test
aam
repz
xor
pop
dec
mov
pop
addr16
pop
out
leave
and
add
scas
inc
or
daa
dec
push
mov
inc
gs
cli
addr16
mov
cwtl
scas
xchg
xor
mov
stc
mov
paddsw
aas
jb
jmp
push
scas
lret
push
das
addl
mov
inc
lds
pop
bound
leave
sbb
jp
mov
mov
mov
std
cmp
jbe
or
sti
mov
mov
fcmovnbe
cmp
mov
loop,pn
lret
mov
decb
ret
loopne
mov
cmp
jae
scas
out
inc
cmpl
adc
xchg
mov
xor
adc
or
add
dec
mov
mov
leave
bound
mov
shll
pushf
lcall
xchg
xchg
mov
mov
shrb
lahf
lahf
incb
lmsw
xor
inc
inc
pop
jl
pop
fbld
bound
and
mov
adc
jp
push
or
nop
push
or
sbb
icebp
push
ret
lret
xor
lods
mov
loopne
jo
outsb
mov
iret
sub
out
jo
xor
mov
push
lea
inc
add
jno
test
cmc
mov
jo
sbb
shrl
mov
adc
and
pop
cld
stos
fisubrl
sbb
aad
outsb
test
lea
mov
out
mov
int3
ret
je
jp
repnz
enter
mov
sbb
fdivrl
nop
and
call
mov
or
inc
cli
inc
mov
mov
addr16
fistps
and
and
inc
sub
push
xchg
sub
mov
jg
push
inc
mov
subb
mov
ja
lea
loope
jae
data16
dec
test
xchg
adc
lds
mov
iret
leave
mov
cmp
dec
mov
cmp
mov
mulb
push
sbb
mov
test
andb
jp
pop
cmpsl
inc
adc
daa
stos
sti
cmpl
push
push
mov
shrb
and
cmp
mov
inc
lahf
fldcw
jle
lods
pop
dec
loopne
stc
add
fisubs
push
sbb
push
sbb
dec
push
rorl
cld
pusha
cmc
fmul
fidivl
sti
or
mov
add
dec
loope
jge
mov
cmp
icebp
ret
sub
dec
imul
xchg
das
xchg
cmp
or
mov
sub
pop
in
add
inc
pop
imul
sarl
sarl
aaa
mov
insb
pop
lds
fnstenv
and
mov
adc
movsl
mov
loop
stos
mov
dec
push
ret
das
testb
mov
aad
sub
mov
xchg
jae
xchg
sbb
push
rclb
lea
lahf
cmpb
cwtl
sbb
das
fisttpl
jns
jle
pushf
mov
pop
lds
sahf
jecxz
rorb
mov
xor
ds
cwtl
xor
das
lret
dec
stos
mov
nop
mov
jle
filds
fbstp
add
xor
dec
and
xchg
pop
cmp
out
mov
pop
xor
cld
arpl
arpl
stc
mov
mov
scas
clc
aad
in
pop
inc
mov
outsb
and
xor
mov
scas
out
jo
add
pop
inc
mov
jns
call
lret
sbb
ror
adc
arpl
fistps
pop
dec
outsb
mov
into
xlat
stos
add
sub
fsubl
addr16
cmpsl
test
inc
adc
fldpi
icebp
jbe
repnz
xchg
xchg
pop
inc
ds
repnz
fcomps
inc
mov
movsb
mov
xchg
jp
insb
out
and
popf
or
fsts
sbb
jnp
push
test
jo
ret
pop
xor
aad
shll
mov
and
jns
and
mov
and
stos
ss
nop
ds
scas
icebp
gs
test
sbb
inc
nop
or
out
dec
mov
das
test
xor
mov
add
mull
xchg
inc
ret
cltd
xchg
mov
sarb
sti
jb
xchg
and
inc
inc
cmp
jge
mov
icebp
dec
imul
push
lcall
mov
or
jecxz
ss
xchg
sub
lret
sar
stos
inc
aad
add
ret
scas
cmpl
xor
repz
jl
jo
int
push
dec
pop
xchg
mov
call
or
mov
incb
dec
mov
xchg
insl
mov
mov
int
push
push
mov
or
enter
add
lret
pop
mov
fs
sarb
lods
mov
loop
add
xor
sbb
ja
lock
mov
adc
cmpsb
jne
outsl
lods
aad
pop
scas
push
testl
jmp
mov
jne
mov
mov
mov
xchg
sarb
adc
dec
push
mov
xchg
jb
cmp
les
dec
push
sbb
lret
jmp
push
inc
stos
out
mov
jle
pop
repz
mov
int3
in
sub
lret
cwtl
out
sbb
rcll
popf
das
xchg
sub
jno
xchg
aas
pop
add
sahf
loop
cltd
push
int3
lods
cltd
mov
push
in
int
jle
aas
lcall
xchg
xchg
mov
adc
push
out
sub
inc
mov
std
inc
cmpb
dec
xchg
dec
pop
sbb
mov
insb
xor
negl
mov
ret
or
int3
push
mov
clc
rcrl
fs
xchg
push
cmp
xchg
or
test
push
add
insl
std
lcall
call
xchg
cmp
sbb
mov
mov
adc
dec
sbb
push
js
hlt
out
pusha
xchg
dec
daa
dec
adc
bound
pop
xor
push
mov
inc
popl
adc
cmp
ss
cmp
loop
or
insb
mov
loop
xchg
loopne
call
xchg
and
sub
lock
outsb
cmp
or
cwtl
inc
jmp
repnz
and
test
loop
sbb
adc
mov
mov
mov
ret
in
mov
mov
lods
mov
mov
xor
jg
adc
mov
enter
pop
mov
lods
xor
sub
hlt
out
cwtl
cltd
cmpsb
sbb
cltd
jbe
or
push
js
jmp
push
xchg
cmp
nop
sub
pop
movsl
arpl
jnp
xchg
sbb
les
scas
adc
inc
sti
xchg
lahf
or
adc
cmpsl
pop
mov
sub
mov
popf
mov
xlat
andb
into
lds
loopne
stos
cmp
sarl
movl
pop
mov
sub
mov
subb
bound
cld
repnz
mov
push
jno
fimull
adc
mov
jae
and
inc
pop
aam
bound
sti
jle
rcrb
das
aam
xchg
arpl
jmp
ret
ficompl
push
sbb
data16
push
fisubrl
rorl
cmp
xor
insw
divl
inc
lock
int
cld
inc
stos
cmp
pop
mov
ret
aas
std
es
repnz
or
ss
int3
loopne
and
negb
or
jg
hlt
out
lcall
fs
outsb
add
ret
rolb
xlat
inc
xor
rclb
jbe
cltd
ljmp
mov
xor
idivb
sbb
cs
sub
push
mov
arpl
mov
xchg
into
sbb
add
push
test
sbb
cmp
daa
rorl
jno
std
xor
cld
in
rdtsc
inc
xchg
sub
insb
ss
sarl
inc
stos
jle
add
xchg
jge
inc
ret
arpl
insb
fwait
push
negl
insl
xchg
lret
iret
adc
jnp
adc
aaa
push
inc
pusha
push
sahf
notl
in
ljmp
pop
outsb
orb
push
lcall
dec
add
sub
xor
movsl
push
test
pop
scas
dec
push
sbb
leave
jo
xlat
mov
dec
pop
mov
outsl
mov
inc
xchg
or
and
mov
cmpsl
fstpt
mov
fbstp
aas
add
hlt
xchg
pop
loope
cmpsl
cltd
pop
inc
cmc
push
test
out
dec
clc
add
iret
insl
pushf
enter
loop
sbb
xor
jne
les
pop
faddl
mov
mov
stos
mov
popf
cmp
cmp
jo
sarb
or
imul
sahf
mov
inc
jecxz
das
push
std
jnp
sbb
mov
add
jge
xor
push
adc
inc
cli
das
xchg
gs
pop
jmp
aas
loope
sbb
decb
xchg
repnz
stc
push
scas
std
pop
es
loop
jl
sbb
cwtl
mov
imul
test
mov
mov
es
ja
in
fisubrl
cld
iret
shlb
arpl
jl
cmpsl
cltd
call
and
lret
mov
push
mov
arpl
pop
arpl
mov
xchg
fmull
aam
xchg
idiv
xorl
movsb
xlat
mov
mov
jecxz
jmp
lock
push
jno
dec
inc
outsb
adc
jae
xlat
add
fs
loope
mov
sub
pop
pop
jbe
and
repz
cmpsl
and
rcrb
aas
pop
dec
mov
mov
setg
sbbl
inc
adc
adc
in
sub
adc
call
and
cmp
insl
and
and
lret
in
inc
ds
aas
lods
ds
inc
fs
and
movsb
ja
jae
sub
insb
rcrl
pop
clc
add
cmp
sub
mov
stc
sti
pop
fidivrs
popf
jnp
mov
stc
cmp
jg
roll
lods
out
js
enter
cld
push
clc
es
lcall
lcall
fisubl
ljmp
or
mov
fdivp
ret
jmp
shrb
fs
pop
int
lods
pop
or
push
mov
mov
sub
stos
and
stos
mov
mov
xchg
pop
hlt
cmpl
xlat
arpl
sub
dec
test
and
mov
jl
rcl
mov
out
xchg
inc
mov
mov
push
sbb
mov
jbe
je
mov
and
les
xchg
xlat
pusha
out
cmc
rclb
and
sbb
xor
shr
xchg
mov
cs
into
scas
dec
sbb
mov
mov
push
pop
sbb
pop
ljmp
sub
out
mov
out
or
xchg
cld
mov
or
notb
js
popa
push
int3
push
std
pop
push
xchg
adc
fsubl
loop
pop
jae
ds
mov
into
popa
pop
sti
adc
or
pop
jne
mov
dec
out
ret
and
call
lret
sbb
in
sub
inc
cs
xchg
add
aas
xlat
enter
ljmp
mov
xchg
out
lahf
mov
add
scas
mov
mov
mov
dec
cmova
outsb
xchg
pop
mov
sub
sbb
push
mov
cltd
stos
lret
xchg
jo
adc
ja
push
in
insb
mov
xchg
dec
in
jo
scas
lret
popf
out
lods
xor
or
or
push
add
cmpsl
aam
push
jne
repz
jle
push
aam
pushf
loope
in
fcom
mov
mov
mov
fsubrl
sti
movsb
push
push
icebp
cmpsl
inc
inc
cmp
push
cli
repnz
insl
loop
stc
pop
xor
inc
ja
adc
stos
cmc
inc
test
cmp
xchg
and
ret
repnz
add
aas
outsb
and
test
push
enter
mov
lcall
xor
xchg
outsl
mov
cltd
dec
pop
mov
sbb
lods
inc
popa
push
sbb
jb
stc
adc
jp
jg
or
lods
hlt
pop
ret
stos
push
test
jle
test
movsb
inc
sub
mov
sub
lods
cmpsb
orb
addr16
cli
scas
or
pop
or
mov
mov
shrl
out
add
xchg
ljmp
jne
dec
xchg
or
aam
loopne
pop
and
mov
fmul
lcall
xor
outsl
test
fcmove
push
inc
xchg
sarl
neg
dec
jecxz
popf
nop
int3
push
adc
lret
in
inc
jge
push
xchg
push
insb
into
pop
sub
xor
mov
fistl
lcall
jl
mov
cmp
mov
mov
adc
fcomps
pop
mov
mov
mov
daa
xor
daa
cmpsl
pop
movsl
divb
sub
roll
lret
mov
push
lret
mov
push
idiv
push
into
adc
adc
inc
sub
das
xchg
test
fstps
jns
mov
cmp
into
rclb
sbb
imul
xchg
xchg
xchg
stc
mov
int3
insb
lret
lock
testl
call
cmpsb
jp
pop
adc
decl
stos
sub
ja
gs
in
xchg
xchg
out
scas
cmp
lret
xchg
pop
pop
push
jae
push
stos
das
imul
push
cwtl
cwtl
movsb
push
jae
leave
addr16
jle
int3
fisubs
inc
out
adc
flds
arpl
xchg
sub
pusha
and
popa
pcmpgtb
test
jne
jo
outsl
mov
sub
sbb
mov
rclb
pushf
and
push
in
sti
add
pop
jnp
jb
mov
or
fwait
cli
mov
hlt
xchg
in
mov
inc
test
enter
ret
aam
jo
pop
rcll
jge
iret
fxam
jb
inc
dec
ret
dec
mov
pop
sub
mov
fsts
fnstenv
xor
or
push
les
mov
scas
pusha
sbb
add
jmp
xchg
mov
mov
bound
in
xchg
loopne
cmpsb
popa
and
xchg
lods
call
imul
fs
dec
xlat
or
dec
clc
leave
cmp
xchg
iret
movl
pop
mov
repz
lods
ret
rol
or
lods
mov
imul
pushf
fnstsw
jb
mov
imul
add
aam
lock
mov
nop
fisubrl
push
repnz
cmp
jo
and
xor
icebp
iret
dec
lock
dec
aad
in
fldt
insb
repz
std
pop
shrb
add
jmp
enter
stos
ja
nop
outsl
pop
add
sbb
sbb
aaa
idivl
sbb
into
lcall
jno
mov
xor
fidivl
mov
dec
jnp
xor
addr16
pop
mov
aad
pop
sub
ja
jg
dec
cmc
and
inc
cs
sbb
sete
and
insl
scas
outsl
cmp
es
add
icebp
das
fwait
adc
jge
inc
and
inc
mov
sbb
enter
mov
dec
testb
lock
add
orl
sub
mov
cmpsl
fcmovbe
iret
sbb
jne
notb
popf
cli
ljmp
fisttpll
testb
popa
out
imul
pop
pop
sbb
pushf
je
test
mov
jge
and
add
sub
lock
xchg
inc
adc
test
js
sub
jbe
das
sub
into
xor
arpl
adc
dec
mov
mov
push
adc
stc
rcrl
adc
sub
mov
ja
adc
dec
mov
mov
jmp
push
jmp
xor
movsl
xlat
pusha
jae,pn
or
xchg
es
mov
jmp
push
dec
mov
or
lret
mov
pop
xor
xor
pop
mov
mov
dec
xlat
mov
cvtdq2ps
add
sbb
fs
add
adc
sbb
pushf
cli
outsb
add
lret
push
fistps
and
cmp
jp
jb
pop
dec
test
popa
repz
mov
xor
xorl
mov
xlat
xchg
loope
mov
xor
pop
mov
in
leave
stc
sbb
dec
mov
testb
cmpsw
and
xor
bswap
ja
pop
xchg
jnp
add
clc
fstpt
sub
pusha
jo
ja
adc
addr16
add
daa
stc
push
fdivr
adc
add
sub
hlt
aaa
mov
pop
repnz
stos
out
push
lock
inc
movsl
call
jl
enter
inc
dec
lret
test
sbb
popf
cmp
enter
cmp
pusha
outsl
jns
jg
add
pop
add
sub
sub
jb
out
pushw
pop
jns
xchg
into
in
rclb
mov
jmp
mov
pop
loop
jp
inc
mov
sbb
mov
inc
push
imul
cmpb
out
jmp
inc
dec
pushf
sub
notl
xchg
mov
cmpsb
mov
sub
mov
dec
add
int3
adc
pop
xchg
add
xchg
out
mov
icebp
xor
add
cmp
mov
sub
mov
add
mov
jno
push
xor
fwait
jnp
or
pop
push
cmp
push
jl
xchg
iret
in
sbb
jge
xor
inc
repz
js
and
and
dec
testb
fsubrl
push
orl
add
xchg
imul
pop
lods
pusha
adc
or
std
mov
push
push
clc
shll
sub
in
push
push
and
inc
out
sbbb
lcall
ss
and
mov
xlat
add
inc
orl
pop
dec
lods
cmp
adc
mov
mov
mov
mov
in
mov
ret
int3
xor
in
or
add
je
add
js
pop
push
lret
dec
test
repz
insl
int
cwtl
shl
xor
adc
xchg
sahf
test
mov
test
xchg
lcall
sahf
lahf
mov
mov
call
pop
inc
aaa
pushf
cmp
lea
push
dec
pop
or
scas
fldl2e
and
or
xlat
jg
into
mov
mov
xchg
je
sahf
mov
loopne
aaa
stos
fstpt
inc
pop
insb
inc
xchg
inc
test
popa
pop
cltd
cltd
insb
push
xor
stc
xchg
arpl
insl
leave
sahf
hlt
jge
testb
sti
stos
sbb
dec
mov
cmp
inc
or
lods
roll
xor
and
rcr
in
repnz
out
pop
add
outsl
aam
test
jne
dec
enter
mov
out
testb
jp
dec
mov
xorl
xor
sar
mov
daa
ss
mov
shrl
push
insb
test
adc
add
fcoml
add
mov
xor
jns
enter
and
movntps
in
sub
jecxz
xor
stos
mov
ret
dec
jae
adc
aas
divl
pop
repnz
dec
push
call
mov
and
daa
jp
mov
outsb
and
out
imul
xchg
lret
test
add
and
xchg
sub
lods
in
pusha
sub
sub
in
add
inc
test
sbb
jbe
push
xchg
pop
sbb
add
jle
pop
push
mov
mov
push
xlat
cwtl
sub
aaa
rolb
cmpl
and
push
sub
mov
jo
cmp
or
xchg
xor
xchg
repnz
dec
sub
cmp
mov
js
lock
into
insl
ret
mov
or
jecxz
dec
xor
adc
cltd
fldcw
lds
lret
pop
outsb
adc
inc
imul
in
xlat
xchg
notb
mov
and
adc
or
adc
idivb
pop
roll
jne
jo
into
js
pusha
pop
out
adc
movsl
xchg
fldenv
jno
or
lret
pop
divb
decb
dec
pop
add
es
jbe
xorl
loopne
jnp
repz
xchg
pop
imul
push
shll
sub
loopne
add
ret
and
jp
xorl
jns
out
jb
test
adc
push
dec
jae
sbb
mov
xchg
inc
and
sub
je,pn
push
aam
jmp
fsts
addl
inc
mov
add
jb
cmpsb
movsl
sbb
cmp
cmp
movsl
out
jb
rcrl
jae
xor
gs
mov
xor
out
cmp
sti
inc
push
or
lods
xor
test
fs
stos
xchg
xchg
in
jge
incb
jbe
jg
jb
icebp
cmp
lret
clc
imul
idivb
fdivr
jp
sub
int3
mov
adc
push
add
sbb
aad
and
popa
jmp
cmp
lret
imul
pop
orb
sub
lock
incb
cmpl
mov
or
sub
mov
lea
or
aad
shlb
pop
pop
fisubrl
jnp
mov
popa
dec
sub
sub
lea
jno
insb
jne
cmpsb
nop
mov
sbb
stos
or
dec
insl
push
shlb
push
ret
jbe
sub
pusha
add
or
loope
sbb
xchg
inc
fnstcw
dec
inc
sbb
out
popa
adc
arpl
out
mov
ss
test
jmp
fadds
jbe
loop
hlt
fimull
int
jmp
xor
sbb
gs
push
mov
fimull
fs
adc
popa
movsb
and
xchg
cmp
or
ss
add
push
insb
add
adcb
lds
pop
pop
mov
cmc
mov
jmp
subl
js
pop
fs
aaa
mov
ficoms
jmp
cmp
lds
pop
leave
js
push
sub
add
push
test
or
lahf
pop
jno
sbb
lcall
cwtl
adc
adc
pop
cmp
xchg
pop
xchg
dec
ret
dec
outsb
mov
rcrl
jg
mov
push
xchg
fs
jecxz
jle
jge
test
xchg
push
mov
mov
fldcw
pop
mov
mov
pop
or
jae
inc
sbb
cmpl
mov
in
sub
lea
jge
push
imul
jl
pop
scas
das
cmpsl
xorl
test
adc
sahf
add
ficomps
adc
jne
lods
or
repnz
add
in
fimuls
add
es
sub
ja
xchg
gs
mov
inc
cs
fwait
aad
leave
push
prefetch
testb
cmp
movsb
ficoml
mov
mov
xchg
inc
sub
out
sub
cmpb
mov
sub
dec
sub
loop
clc
or
mov
out
sub
lret
add
icebp
cs
inc
loope
jnp
push
mov
shlb
call
xchg
pop
jo
fs
sub
outsb
je
fwait
sub
cmc
out
fildl
test
push
fldt
jl
sti
lret
fs
out
inc
into
and
cmp
loope
cmpb
cmp
pop
call
xchg
and
sbbl
imul
pop
ds
pop
xor
js
adc
loope
repnz
mov
cmp
or
or
mov
stc
gs
or
inc
and
jns
imull
cmpsl
xor
iret
mov
jae
or
dec
subb
out
and
aaa
popa
mov
jbe
and
lea
cmp
je
ds
sub
xor
mov
mov
cltd
mov
xlat
mov
ja
or
mov
xchg
mov
jbe
shl
movsl
add
rorl
aam
icebp
cltd
stos
add
xchg
pushf
hlt
pop
xlat
es
fld
scas
xchg
add
popl
leave
pop
test
mov
mov
and
mov
dec
jmp
sub
repz
cmpsb
popa
jmp
fwait
rolb
or
inc
lods
cmp
lret
iret
les
sahf
stos
dec
ret
xchg
pop
inc
dec
and
mov
imul
sub
lret
lcall
or
xchg
dec
and
mov
popf
je
lret
cmp
cmp
in
je
lret
and
push
fmull
les
cmpsb
mov
sub
mov
in
add
dec
pop
lock
pop
enter
hlt
mov
xchg
dec
xor
fwait
vpminsw
test
test
test
in
inc
movsl
xor
jmp
insb
sahf
mov
adc
test
fldcw
jg
jge
xor
and
sbb
sub
test
dec
cmp
hlt
scas
push
sub
push
mov
jb
push
xchg
push
insb
repz
in
outsb
push
pushf
loop
add
imul
aas
das
pop
inc
popa
mov
push
push
outsb
arpl
sub
or
jmp
stc
popf
push
loopne
xchg
inc
mov
jo
xor
shll
and
sti
in
jne
inc
sbb
lock
popf
lcall
add
adc
or
imul
and
adc
int
insb
std
aam
fucomip
movsb
sub
lods
ret
mov
ret
push
xchg
adc
push
jecxz
lds
fistl
outsb
test
sub
idiv
sbb
repz
adc
jecxz
cs
mov
xchg
push
mov
inc
mov
jno
sbb
inc
sbb
out
mov
adc
in
mov
mov
ds
inc
ss
xlat
push
pop
out
mov
lods
adc
jnp
fstp
pop
add
gs
mov
cld
and
add
mov
lahf
mov
shll
out
mov
xor
lock
repnz
mov
fsubs
pop
xchg
add
xor
inc
push
bound
enter
mov
call
aas
lods
mov
mov
cltd
sbb
add
loopne
jp
xchg
nop
scas
sub
pop
andb
pop
in
dec
fidivl
sub
in
rol
jl
push
test
lods
mov
add
dec
adc
xor
out
xorb
push
push
rclb
or
adc
fidivs
sbb
inc
js
pop
aas
xchg
imul
lods
fimull
daa
arpl
mov
push
dec
mov
and
stc
inc
in
notl
out
addl
lds
ss
fwait
adc
fistpll
nop
iret
arpl
jno
les
ffreep
mov
aaa
xchg
push
popf
pop
add
cmpsl
mov
push
imul
xchg
sub
push
inc
shl
sub
sbb
push
rcrl
dec
pand
shll
or
mov
jo
movsl
mov
mov
test
out
ja
cld
test
out
xchg
lcall
cmpsb
daa
adc
mov
mov
sbb
ljmp
inc
add
or
arpl
out
sub
aam
dec
mov
add
xor
scas
inc
push
mov
insb
dec
adc
xchg
dec
xor
stos
adc
mov
jmp
xor
fistl
jne
xor
mov
mov
aad
mov
fimull
in
pop
dec
mov
gs
sbb
test
mov
enter
push
cmpsl
frstor
adc
lea
xor
xchg
stos
pop
jp
push
je
and
pop
dec
add
xchg
jb
jp
add
push
andl
test
cmpsl
inc
lds
xlat
xor
mov
faddl
shll
in
mov
addr16
dec
lea
or
fs
dec
not
xchg
jne
jno
cmpsb
stc
pop
out
jne
cli
lret
loope
or
mov
adc
mov
mov
push
cli
hlt
inc
cmpsb
lahf
jg
orb
lahf
nop
or
inc
cltd
jns
shll
cmp
ret
mov
out
fsubr
inc
add
lret
push
int
xchg
popa
xlat
push
out
xchg
pop
popf
sbb
shl
sahf
xor
fldt
stos
pop
sahf
ds
sub
rolb
cmp
or
insb
inc
xchg
cmp
jbe
sub
xchg
dec
pop
sub
xor
je
aad
popf
add
inc
scas
cmp
iret
insl
lods
aaa
cmc
mov
push
loope
mov
adc
dec
iret
rclb
xor
inc
lock
and
jo
or
sbb
cmp
push
testb
cli
mov
scas
jo
jp
mov
ss
adc
mov
and
jle
loope
sbb
push
push
add
ror
repnz
clc
xor
mov
popa
mov
dec
xor
out
adc
xchg
and
xor
pop
gs
enter
jle
mov
cld
jns
or
mov
lds
lods
imull
xor
pop
int
xor
iret
std
or
ret
int
sti
lcall
xchg
xor
lahf
mov
push
pusha
pop
lock
in
sbb
fistps
cmp
jne
shll
cs
mov
movsb
sub
sub
sbb
jmp
rcrl
out
xchg
cmpsl
iret
sbb
dec
add
ljmp
and
and
test
mov
sahf
in
and
dec
pushf
ljmp
adc
stos
cmpsl
scas
pop
cmp
push
mov
out
or
sub
int
jno
and
jno
jne
xchg
sbb
push
cli
enter
rcll
shlb
cwtl
mov
mov
and
in
and
mov
mov
aas
frstor
xor
or
push
stos
jb
repz
jb
inc
loope
push
inc
out
ds
mov
sarb
mov
ss
or
mov
aad
xchg
mov
aaa
bound
cmp
mov
cwtl
pop
lret
jg
lret
dec
xchg
sbb
and
cmp
xchg
lahf
mov
insb
adc
stos
les
xchg
cmpsb
insb
lods
push
test
adc
shl
cmp
push
das
bound
repz
shlb
lock
loop
jl
xor
mov
xlat
adc
jl
push
cmp
loope
jmp
out
jl
push
dec
lea
cwtl
in
add
scas
jecxz
push
or
push
mov
push
cs
outsb
es
mov
adc
lcall
fsubrs
popa
mov
cmp
int
and
pop
sbb
xchg
rcl
adc
or
outsb
cmp
or
movl
xchg
push
mov
push
out
insl
cmp
lahf
push
push
push
xorl
push
in
adc
rcrl
inc
repnz
sarl
inc
mov
sub
add
jmp
fcmovnb
jnp
repnz
jl
xor
inc
sub
adc
pop
jp
cmp
mov
outsl
lret
pop
xor
std
adc
push
xchg
movsl
add
vpshufd
cmpsb
cmpsl
inc
fs
push
push
test
int3
xorl
xor
out
jp
ficoms
mov
adc
inc
mov
sub
je
jns
and
xor
nop
outsl
mov
lods
insb
ss
add
and
add
pop
jecxz,pn
out
in
adc
fdivs
add
push
or
lea
or
inc
leave
push
xchg
addr16
mov
ret
arpl
outsl
inc
in
pushf
push
xchg
add
cli
mov
dec
add
xchg
sbb
outsb
jnp
in
and
push
aam
loop
xor
pop
add
push
cmp
cmp
push
xor
or
xchg
push
inc
imul
imul
mov
cwtl
cltd
and
mov
daa
pop
push
maskmovq
testl
lss
adc
xchg
sbb
mov
stc
or
scas
lods
inc
scas
repz
enter
imul
inc
imul
aad
mov
mov
dec
pop
ds
jns
or
mov
sub
sub
stc
idivl
andb
popa
inc
mov
stos
xor
pop
adc
in
pop
movsb
adc
out
xchg
insl
subl
aam
mov
js
cmp
ss
pusha
rclb
test
mov
mov
sub
xchg
pop
pop
xchg
and
mov
sbb
out
and
pop
into
loop
sub
leave
out
add
jge
push
mov
in
popf
or
or
mov
fldcw
icebp
gs
mov
pop
jno
pop
and
cmpsb
enter
scas
sbb
hlt
jge
and
adc
mov
ret
aam
inc
pop
leave
rcr
or
mov
mov
mov
dec
lds
in
mov
ret
cmp
shl
or
and
sbb
ret
lcall
jg
cwtl
mov
nop
mov
daa
mov
cwtl
push
jp
mov
dec
pop
vmread
push
movsl
pushf
sub
das
loope
clc
add
stos
cmp
xchg
in
adc
pop
icebp
lea
das
push
push
fwait
jecxz
ljmp
pop
sahf
js
test
mov
mov
std
mov
jnp
dec
mov
sbb
in
cmpsb
lcall
push
jmp
jb
stc
cmp
push
pop
inc
mov
cli
mov
adc
in
imul
insb
mov
mov
mov
mov
pop
shl
insb
repnz
pushf
mov
xor
dec
jns
or
dec
hlt
into
xchg
push
and
and
ljmp
mov
mov
es
xor
inc
scas
aaa
enter
and
or
push
push
rep
cmp
add
les
out
mov
pushf
outsl
mov
mov
hlt
mov
jbe
movsb
insl
mov
push
addr16
pushl
mov
push
les
pop
xchg
es
mov
fmull
aad
int
stc
mov
iret
mov
popf
mov
jmp
mov
push
xchg
lcall
mov
mov
ret
jle
ljmp
scas
fists
enter
in
shlb
int3
mov
xor
xchg
cmp
aas
inc
popa
stos
shll
incb
pop
insl
shl
movsb
data16
and
test
or
mov
xchg
es
inc
loop
xor
adc
sub
pop
jo
in
add
sarl
and
pause
in
in
xchg
imul
nop
mov
outsl
test
loope
mov
sbb
pop
pop
cmp
pushf
cmp
in
mov
and
ficoml
mov
adc
cmpl
out
pop
mov
jno
adc
pop
pop
imul
mov
pop
and
or
xchg
lcall
dec
iret
inc
leave
test
cmp
ret
add
mov
cmp
pop
mov
in
jl
lret
pop
xor
jmp
psadbw
push
inc
mov
jl
dec
addb
add
mov
push
repnz
inc
loopne
and
dec
lret
push
xchg
push
into
repz
aad
pop
jno
test
mov
daa
adc
add
mov
fwait
jb
adcb
jp
inc
mov
shl
aaa
inc
inc
add
cmp
repz
repnz
arpl
mov
sbb
in
fcomps
mov
mov
jo
fldl
insb
loope
cmp
aas
jo
leave
jno
rcl
movsl
xchg
mov
and
dec
out
or
xor
repz
fdivr
sahf
mov
mov
jo
push
mov
jo
sbb
test
mov
aaa
popf
add
arpl
sti
sbb
lret
f2xm1
lds
mov
flds
adc
lahf
out
dec
cmp
subb
imul
push
pop
push
mov
iret
adc
shll
cltd
mov
xorl
aad
and
add
cmp
in
je
pop
push
pushf
dec
cld
into
push
std
pushf
inc
inc
cwtl
pop
test
in
mov
pop
test
imull
shlb
or
push
cmp
add
sbb
es
stc
mov
lcall
or
fwait
minps
in
mov
aaa
and
jmp
mov
adc
jmp
dec
xchg
push
lods
inc
cmp
and
jl
push
ret
lock
out
mov
push
sahf
mov
sbb
adc
fs
in
cld
cltd
mov
jnp
pop
mov
mov
xchg
fnsetpm(287
jno
mov
mov
jne
pop
xchg
repz
andl
and
xor
inc
jp
cmp
pop
fwait
xchg
cmp
push
cltd
cmc
jb
lahf
push
cmpsl
cmp
outsl
xchg
cmp
and
fimull
jnp
fbstp
ja
and
repz
arpl
test
int
cmp
rcrb
cmp
mov
clc
test
cltd
dec
xor
pop
pop
adc
fldt
inc
mov
pop
and
xchg
ss
test
lahf
sbb
fst
cmp
cmc
and
sti
cli
call
roll
xchg
xor
or
and
fwait
sub
ds
and
fadd
ret
nop
pop
xchg
pop
aam
lds
lock
or
lods
mov
shl
decb
jo
or
dec
mov
inc
push
addl
rep
dec
ret
frstor
xor
stc
jp
in
and
outsb
mov
pop
sub
pop
loopne
sbb
or
cmp
mov
scas
pop
out
jbe
mov
pop
scas
mulb
enter
fucom
stos
pop
mov
call
or
leave
xchg
lock
sbb
mov
push
add
js
pop
or
repnz
js
bound
sbb
lcall
and
lock
push
lret
lcall
sar
mov
sub
js
pop
sub
scas
je
lds
jns
repz
fs
pop
ljmp
sar
dec
dec
push
ds
jp
inc
pop
xor
roll
sbb
jmp
fdivs
neg
push
mov
mov
mov
popf
loopne
fwait
dec
imul
sub
fistps
cltd
push
outsb
hlt
or
inc
fnstsw
lock
mov
mov
imul
push
cmpsb
daa
movsl
dec
sahf
mov
add
cli
enter
stc
jo
xchg
int3
adc
data16
js
addr16
pop
cmovae
xchg
jae
mov
xchg
jae
xchg
inc
fs
pop
out
sub
xchg
jle
out
adc
dec
sbb
and
ljmp
test
push
mov
mov
adc
sbb
movsb
cmp
mov
fisubs
inc
mov
cwtl
icebp
ret
cmpsl
push
scas
sbbl
push
popa
xchg
iret
sub
mov
add
push
fsubr
jecxz
ficompl
filds
shr
inc
xchg
add
xor
stc
sbb
mov
ja
sarl
addb
mov
mov
es
jmp
lds
xor
les
in
xor
subb
test
ljmp
xchg
cmp
mov
daa
add
mov
enter
aaa
or
cmpb
cmpsb
pop
xor
data16
mov
sub
enter
push
out
inc
xchg
cmp
mov
sbb
cmp
jmp
cwtl
sub
popf
cld
pusha
daa
out
lret
mov
inc
pusha
lahf
imul
jecxz
and
jae
mov
xchg
test
sub
and
in
inc
or
out
ret
popa
lea
rorl
mov
fnstenv
mov
cmp
int3
or
adc
loopne
hlt
push
sti
lods
js
xor
adc
mov
fwait
insb
mov
mov
jg
xor
enter
fstl
imul
xchg
popa
dec
movsl
in
test
sub
outsb
inc
or
loop
inc
lds
ss
imul
push
mov
sub
cmp
mov
clc
push
sub
aas
push
sarl
cmp
cmp
jne
aad
or
js
out
cmp
sub
pop
mov
arpl
fdivrs
pop
mov
je
inc
sub
jbe
inc
sti
leave
stos
cltd
push
sbb
dec
insl
outsl
mov
push
inc
pushf
lcall
sub
dec
lcall
stos
leave
mov
ja
rcrb
sbb
nop
sbb
lea
icebp
push
lods
insb
mov
mov
dec
cmpb
jl
or
push
or
imul
pop
test
ret
ja
xchg
pop
mov
push
popa
fildll
jns
and
sub
stos
outsl
popf
movsb
stc
mov
jns
jne
sbb
jno
pop
mov
dec
push
add
dec
pop
or
dec
pop
cmp
jmp
cmpsl
cmpsb
test
addr16
into
aaa
inc
sarb
bound
ret
lcall
fcompl
aas
hlt
std
inc
pop
jecxz
std
das
ja
ret
scas
cmp
mov
pop
fwait
mov
mov
or
jo
sahf
push
in
inc
das
jl
pop
pusha
mov
dec
mov
lds
aad
push
add
pop
ss
xchg
loopne
and
dec
aas
jmp
aaa
insl
push
mov
and
not
lcall
insb
gs
fidivl
sbb
cmpsb
les
shlb
fldt
es
pop
jmp
add
or
sub
aaa
push
fucomi
mov
xchg
mov
dec
cwtl
hlt
push
les
popfw
mov
scas
stos
sbb
mov
lods
das
fmull
loop
fmull
mov
jmp
inc
mov
loop
pop
or
insb
ja
sbb
das
rcrb
test
sbb
xchg
ret
std
scas
rclb
dec
ret
mov
loop
je
shll
repz
divl
inc
xor
loopne
int3
leave
cld
ss
mov
pop
fbld
fistps
mov
sub
lds
jns
outsl
clc
inc
fnsave
add
sbb
enter
push
out
mov
in
cmp
xor
in
sbb
mov
in
xchg
lcall
mov
cmp
leave
jmp
orb
out
push
mov
pop
loop
test
pop
mov
pop
sahf
xor
mov
leave
rclb
xchg
mov
shrb
lods
pop
dec
pop
jl
push
shl
pushf
scas
sbb
sti
adc
call
outsb
iret
sbb
sbb
out
sti
test
xor
test
clc
aas
add
mov
adc
lahf
sub
fidivs
mov
paddw
push
cwtl
adc
jp
mov
dec
jmp
pop
pusha
xchg
sub
jb
push
out
pop
fidivl
inc
dec
jle
scas
ret
fdivr
ss
push
mov
scas
hlt
jecxz
or
loop
cli
inc
mov
jns
out
add
sub
push
xor
push
push
adc
inc
outsl
scas
xchg
xchg
icebp
int
or
xchg
jo
mov
test
pop
inc
pop
repz
and
loope
iret
sahf
mov
xor
add
sub
shll
jecxz
jae
lret
cmp
fcmovu
ds
adc
into
jae
lret
mov
cmp
div
dec
sub
ret
push
adc
mov
xor
stc
lea
xor
dec
loopne
test
sub
repz
jl
daa
shlb
xchg
mov
gs
ljmp
lret
push
or
movsl
push
in
ret
pop
mov
pop
inc
adc
mov
mov
xor
repz
xor
mov
sbb
sti
dec
xchg
and
push
push
xlat
cmp
pop
enter
xchg
lret
test
inc
push
mov
mov
mov
sbb
decl
xor
mov
or
imul
lahf
push
data16
out
sbb
push
inc
or
test
adc
cltd
xor
daa
jecxz
pop
stos
popf
mov
aas
jnp
ja
cmpsb
add
fldl
das
inc
mov
jle
stc
and
sbb
fimull
inc
loope
pop
push
and
mov
sahf
pop
cwtl
mov
jp
dec
xchg
cmp
xchg
test
notb
insb
imul
out
das
clc
xlat
arpl
mov
nop
cwtl
icebp
psrlq
or
jne
inc
mov
push
mov
lods
or
mov
and
push
fisttpll
jge
mov
jno
mov
adc
pop
adc
pop
xchg
dec
inc
cmpsl
add
leave
rcll
xlat
fdivl
add
jo
inc
loopne
aaa
lahf
xchg
out
std
in
sub
dec
aas
cld
and
test
pop
push
cmp
sub
bound
aas
arpl
test
or
dec
jge
push
add
jecxz
lcall
cli
shr
cmp
fisubs
loop
jo
push
jmp
xor
xchg
xor
js
jbe
enter
inc
lcall
or
dec
adc
push
test
mov
pusha
pop
mov
cmp
and
rcll
add
lods
push
outsb
mov
jp
outsl
push
nop
arpl
addl
fstpt
lds
mov
jl
mov
push
push
ret
sbb
sahf
mov
lret
lret
cmpsb
aam
xor
adc
sbb
xchg
xchg
inc
adc
gs
add
in
sarl
iret
imul
sub
or
mov
lods
mov
mov
add
dec
pop
fdivrs
repnz
test
mov
shl
inc
int
adc
insb
out
sub
cmp
push
push
fmuls
push
sub
dec
pop
xor
lock
int
enter
jbe
int
int3
repnz
lret
mov
popf
xor
sbb
dec
lret
lds
into
pop
insb
push
lahf
jnp
xchg
adc
jae
xchg
inc
repz
push
nop
aaa
mov
or
ds
push
aad
jae
adc
aaa
lahf
or
loope
mov
subl
sarb
xchg
fidivrs
sub
dec
iret
sub
mov
push
sarb
insb
adc
xor
or
ja,pt
jne
jbe
dec
pop
arpl
xchg
rcr
mov
lods
xchg
inc
or
cmp
je
arpl
pop
fmull
xor
and
xchg
add
imul
jmp
rorb
nop
pmullw
adc
les
rorb
push
mov
clc
and
addr16
xor
addb
jbe
outsb
xor
daa
fnsave
stos
dec
lods
stc
push
repz
or
aas
fistl
lds
in
into
add
sbb
sub
jnp
pop
movsb
add
das
pop
jmp
and
jno
les
sbb
pushf
stos
aas
in
push
sub
and
xor
xchg
in
inc
loope
push
or
psllw
sub
imul
cmp
adc
sub
les
scas
mov
xrelease
cwtl
sbb
lret
fiaddl
mov
dec
or
mov
push
add
or
bound
lods
inc
mov
xchg
ss
jne
or
ljmp
gs
in
lret
mov
in
fucomip
hlt
xchg
mov
or
push
lods
add
movd
ss
add
fisubrl
xchg
aas
fcomps
push
je
xor
ss
inc
mov
lods
lods
mov
push
icebp
sub
je
daa
inc
cmp
insl
xor
cmp
fwait
sbb
and
xchg
cs
or
rcll
adc
dec
je
sahf
push
xor
and
jg
mov
loope
fwait
cmp
mov
jl
and
mov
push
jge
js
fmuls
pop
loop
push
fistpll
divl
mov
notl
out
inc
inc
fisubrl
inc
xchg
dec
test
icebp
jae
sarb
or
sbb
mov
pmulhuw
test
test
sbb
pop
stos
testl
dec
or
push
scas
fst
cmpsb
add
ss
mov
sbb
push
out
outsl
pop
adcb
pop
jl
cs
adc
outsl
mov
sbb
fstps
scas
sbbb
fstps
mov
xchg
jno
mov
test
bound
stc
dec
prefetch
or
sub
pop
push
and
enter
sti
fidivs
xchg
negb
push
mov
inc
outsb
dec
push
push
mov
in
sub
into
gs
pop
in
popf
jl
in
lcall
or
sub
test
je
cmp
movsl
push
sub
push
iret
dec
inc
push
movsl
rcrb
arpl
xchg
xor
rcll
xor
push
dec
lock
adc
adc
mov
divl
lcall
jnp
sbb
mov
icebp
mov
add
loopne
sarl
popf
dec
test
push
mov
and
push
xchg
call
sbb
mov
ret
cmp
xchg
pop
sbb
clc
adc
inc
ficoms
mov
movsl
sub
sub
clc
sbb
ss
aam
jo
lods
inc
mov
jnp
jo
mov
sbb
imul
adc
mov
push
adc
gs
mov
in
pop
lahf
lds
add
into
mov
dec
pushf
dec
or
xchg
mov
imul
rolb
or
fisubl
rcl
ret
cwtl
ss
adc
out
xchg
testb
enter
das
test
int
mov
jne
sub
adc
sbb
xchg
xchg
jge
sbb
mov
outsb
aaa
inc
outsl
fisttpl
pop
and
or
push
pop
mov
xor
push
cmp
push
sahf
dec
mov
dec
add
sbb
dec
lcall
push
pop
dec
push
lcall
rcrl
jmp
mov
aaa
pop
decb
mov
arpl
je
mov
cmp
mov
cmp
fmul
mov
xor
push
std
in
dec
push
jmp
jne
adc
movsb
and
pop
jecxz
xchg
ss
adc
xor
les
mov
mov
mov
pop
jo
and
push
ficompl
push
mov
mov
pushf
pop
fsubs
mov
mov
je
jb
mov
jno
arpl
imul
and
xor
aad
clc
mov
pop
sbb
dec
call
adc
or
pop
loop
sahf
xchg
cmp
push
lea
and
lea
popa
mov
mov
loopne
outsl
loopne
shlb
add
sbb
xchg
push
xchg
push
cli
cmp
sarl
inc
and
mov
mov
sub
je
sub
cmp
add
adc
xor
sti
lods
add
xchg
mov
decl
mov
iret
insb
jmp
aad
ja
push
mov
xlat
ds
cmc
push
int
outsl
stc
jl
mov
fucom
jmp
fwait
and
xchg
dec
les
jg
fistpl
mov
pusha
sub
adc
test
cld
add
hlt
mov
mov
scas
sbb
sub
mov
adc
push
iret
mov
ss
sahf
pop
cs
pop
pop
mov
mov
adc
dec
loope
push
pop
jnp
adc
add
jge
xchg
adc
sbb
scas
add
add
push
mov
mov
jb
jno
or
cmpsb
imul
and
mov
xor
xor
mov
sub
ja
aam
push
icebp
std
xchg
dec
xor
lods
out
loop
mov
std
shlb
sub
inc
and
inc
and
lahf
sub
cmpsb
cmp
or
inc
outsl
stc
pop
int3
mov
cmp
xchg
mov
push
lcall
les
or
jnp,pt
in
sti
cs
mov
movsl
or
inc
and
xorb
mov
inc
sbb
pop
xchg
and
xchg
fisttpll
es
enter
adc
pop
jl
xchg
xor
sbb
testb
and
loop
jno
lret
inc
test
addr16
cli
dec
fdivs
repnz
lods
and
int3
out
xchg
push
sbb
jbe
jnp
xlat
sbb
xor
jecxz
sub
and
je
test
stos
test
sub
cltd
inc
js
pop
dec
push
out
repnz
fstpt
jne
pop
in
loope
ss
fidivrs
cld
or
mov
dec
mov
in
xchg
cmp
and
or
test
ds
es
push
sbb
jmp
repnz
ds
mov
xor
data16
rcrb
mov
or
xor
push
pop
dec
add
mov
xor
mov
pop
adc
gs
ficompl
mov
jmp
xchg
bound
pop
pop
insb
orl
sbb
sub
pop
int3
push
aad
into
cmp
pop
mov
arpl
push
leave
test
sbb
aaa
rcrb
dec
adc
and
movsl
movsb
push
mov
subl
xchg
aaa
or
adc
in
je
enter
test
ss
add
push
jns
adc
cltd
rolb
dec
fimuls
pop
ret
call
cmp
pop
push
jnp
loopne
fidivrl
xor
jns
hlt
pop
ds
cs
mov
sub
xchg
add
out
in
sahf
jg
test
pop
jb
repz
enter
xchg
insb
mov
in
cltd
inc
pop
imul
adc
pusha
cwtl
sbb
mov
lret
jnp
shrb
pop
stos
into
xchg
mov
push
scas
push
sbb
and
repnz
mov
fisubl
mov
repz
xor
aad
mov
rcr
mov
mov
push
pop
jbe
cmp
rolb
loope
xchg
mov
std
iret
cmp
and
xlat
pop
stos
shlb
cmp
andb
xor
push
sbb
xlat
nop
int
dec
shrb
sub
scas
mov
retw
repz
sub
mov
js
mov
xchg
xchg
hlt
jl
push
pop
mov
cmp
scas
inc
popf
fisttps
fidivs
enter
jo
push
lods
mov
xor
stos
xchg
jl
leave
inc
mov
jbe
jle
insb
pusha
mov
push
xchg
testl
icebp
cld
jg
stos
jno
inc
inc
shlb
gs
xlat
jae
mov
fwait
repnz
lahf
adc
inc
iret
add
stos
jecxz
jnp
out
sub
or
push
stc
mov
sub
pop
icebp
in
mov
scas
jns
in
adc
std
cmp
outsb
les
dec
mov
fdivs
mov
orl
dec
popa
mul
or
shrb
je
sub
pusha
jecxz
sbb
add
arpl
pop
xor
dec
mov
lahf
xor
xor
rolb
dec
aas
into
push
cmp
and
hlt
out
lret
insl
inc
dec
dec
jg
pop
xchg
jmp
sub
rcll
lahf
leave
rclb
jns
sarl
fbld
stos
rorl
push
pop
lods
jnp
inc
xor
je
xchg
inc
xor
xor
cwtl
test
mov
cmp
inc
xchg
sahf
push
dec
data16
sub
arpl
push
dec
pop
scas
pop
sub
inc
out
xor
aam
sub
lcall
mov
jnp
jnp
pop
jg
jp
imul
pop
adc
mov
pop
pop
arpl
divb
and
shrl
cmpsb
push
pop
push
imul
into
pop
rolb
hlt
push
jnp
cmpsl
in
sbb
cmpb
leave
iret
xchg
test
xchg
cmp
xor
dec
repnz
lods
xchg
loope
cmc
repnz
pop
int3
pushf
sbb
dec
ror
into
push
loop
mov
xorl
mulb
jnp
subb
test
aad
in
leave
mov
pop
pop
cmp
mov
inc
pop
mov
push
ret
xchg
jno
fstps
cltd
push
fwait
mov
outsl
pop
or
pushl
xor
mov
ss
std
mov
cld
push
ljmp
pop
inc
js
cmp
cmc
das
movb
imul
sub
sbb
loop
jmp
pop
lock
pop
in
inc
rcr
fisttps
dec
in
cltd
xor
jno
adc
in
xchg
movsb
cmp
mov
or
or
aas
inc
push
pop
xchg
pop
jl
mov
icebp
iret
dec
sbb
and
aas
xchg
mov
pop
test
int
mov
mov
mov
in
lret
jp
pusha
dec
sbb
adc
push
lahf
add
and
dec
divl
add
adc
scas
mov
jmp
inc
rclb
mov
and
int
test
jbe
inc
dec
out
pop
mov
mov
xchg
mov
push
push
pop
inc
xor
mov
pop
lret
in
sub
aaa
cli
jb
xchg
daa
mov
sbb
add
in
popa
call
fidivrs
loop
push
loope
or
dec
pop
or
jne
and
dec
adc
adc
mov
fmull
xor
adc
loope
iret
push
popf
mov
jecxz
test
test
lcall
in
rcr
stos
sub
pop
jl
mov
jge
sarb
mov
sarb
fimull
push
jae
xor
pop
lea
lret
mov
scas
data16
xor
jo
lcall
shlb
fadd
inc
sbb
fdivs
jg
jbe
and
sub
arpl
jecxz
repnz
jmp
sti
sbb
test
push
push
loopne
and
std
int
js
fwait
shl
lret
pop
xor
pop
jecxz
adc
jb
cmpsl
xor
pushf
mov
repnz
mov
fdiv
add
xchg
dec
xchg
lock
insl
leave
xchg
jno
or
mov
daa
push
ss
push
dec
adc
insl
popf
inc
andl
scas
out
pop
lock
inc
inc
mov
fstpl
fcmove
jnp
je
ds
cmp
inc
loop
lds
in
push
xchg
test
out
sub
aas
adc
mov
adc
mov
leave
add
scas
jl
add
jmp
loopne
cmp
das
push
out
inc
pop
mov
cmp
adc
fisubl
repnz
loope
pop
idivl
in
sbb
mov
add
dec
ljmp
ret
repnz
push
add
movl
xchg
mov
inc
cld
and
jg
adc
adc
mov
push
sbb
xor
push
mov
fmul
mov
pushf
loopne
add
mov
cmp
jmp
das
adc
movsb
int3
popf
std
xor
ss
filds
mov
leave
sti
daa
xchg
and
sub
int
add
ds
call
jp
lahf
lret
insb
add
fistps
cmc
movsl
fwait
mov
ret
mov
iret
push
push
inc
xrstor
je
comiss
xlat
insb
cmp
idivl
add
sub
rcll
mov
ret
mov
or
or
add
adc
dec
in
sub
mov
inc
idivl
stos
insl
loope
int3
lret
lds
ret
frstor
cmp
stos
push
movsl
out
xchg
test
adc
es
lock
int
xchg
adc
ret
push
insb
ljmp
in
repnz
mov
je
push
test
inc
daa
pop
jns
mov
pop
push
xor
int3
in
mov
imulb
push
pushf
repz
aas
jns
repnz
adcb
mov
outsb
arpl
pusha
push
sub
aaa
xlat
shrl
shrl
jp
imul
test
sbb
lods
xchg
pop
test
sar
lea
pop
cmp
ss
jmp
adcb
add
add
xchg
pop
data16
nop
xlat
pop
mov
int
outsb
aam
mov
push
push
ret
sub
outsb
sbb
sbb
in
and
es
ja
outsl
push
push
fdivp
out
sub
frstpm(287
std
dec
cwtl
lret
pushf
enter
push
jle
mov
xor
subb
and
lahf
insb
and
testl
add
out
pusha
ficoml
fisttps
call
cmc
lds
icebp
lret
fimull
mov
stc
rolb
jb
and
mov
rol
jb
iret
lret
fnstsw
xchg
cltd
mov
mov
lahf
pop
addr16
imul
push
and
add
rep
jne
jno
inc
lea
loop
push
xor
in
xchg
xchg
sbb
cmp
jnp
mov
mov
xchg
pop
cmpsl
loop
jmp
sti
ret
bound
pop
adc
cmp
mov
out
and
xor
jae
mov
inc
sbb
jnp
dec
push
repnz
or
aas
es
mov
dec
pop
inc
xchg
lcall
sub
out
cltd
mov
adc
pushf
hlt
mov
aaa
repnz
and
std
add
outsl
xor
scas
jl
xor
push
xor
pop
sub
sub
scas
rcrb
in
xor
dec
push
mov
loop
and
sbb
les
jge
in
hlt
enter
scas
sub
lahf
xchg
js
dec
mov
stos
sbb
stos
int
ds
stos
es
inc
hlt
push
xorl
and
mov
pop
in
sub
sub
pusha
test
lods
dec
nop
and
neg
pop
aam
and
loop
leave
push
in
jae
loopne
jae
mov
jae
rolb
shlb
or
pushf
adc
sbb
movb
gs
inc
ja
pop
cmp
stos
mov
xorl
xchg
add
xlat
jbe
testl
rcll
mov
mov
adc
sub
lea
xlat
out
jmp
into
stos
jnp
shlb
add
sbb
dec
add
jnp
mov
cmp
cs
dec
dec
xor
cmp
call
sbb
outsl
push
pop
and
pop
pop
imul
push
push
iret
and
fldenv
test
push
pushf
mov
test
out
mov
lds
xchg
fistps
js
fisubl
cmc
and
arpl
dec
cmpsl
xor
test
mov
inc
pop
inc
leave
lret
jge
gs
into
push
or
pop
jae
xchg
jo
repz
push
add
cld
sbb
aam
and
pop
mov
xchg
pop
mov
aam
fs
jge
inc
dec
sbb
and
incl
mov
or
int3
mov
mov
sub
stos
jecxz
add
pop
daa
push
adc
mov
cmpsb
and
or
adc
inc
cmp
sub
xor
mov
xchg
dec
sub
jmp
lret
mov
jmp
lcall
inc
cmpl
mov
pusha
test
add
ficomps
inc
and
xchg
pop
jmp
pop
js
or
xchg
lock
test
dec
gs
call
mov
cs
jbe
sbb
xor
inc
ja,pn
mov
and
fbld
out
sbb
adc
stos
cld
cmp
fistps
iret
and
test
jnp
out
sbbl
aaa
jmp
pop
xchg
mov
mov
dec
repnz
lods
pop
iret
mov
jnp
pop
divl
add
dec
inc
das
push
je
mov
cmp
roll
out
shr
push
jle
mov
rol
mov
cmp
cmpsb
sub
jge
xchg
mov
adc
sti
es
inc
gs
ror
insb
jle
jmp
mov
mov
dec
push
lock
test
mov
das
addl
add
js
pop
mov
sub
cli
fwait
imul
xchg
icebp
cmp
or
cvttps2pi
hlt
out
mov
scas
imul
stc
pop
movsl
lock
pop
push
mov
fstl
and
in
cmp
out
jo
test
add
in
mov
int3
pop
sahf
cmc
int
mov
out
add
fcoml
popf
push
sti
jl
jo
add
sub
xor
int3
out
popa
out
shr
cmc
cmp
pop
mov
xchg
mov
addr16
xlat
pushf
mov
scas
iret
jmp
into
push
outsb
outsb
cmp
push
pop
xor
xchg
call
aas
and
dec
jno
xchg
sub
outsl
cli
les
adc
aad
pop
jae
adc
pop
add
mov
leave
xor
test
and
xor
call
xchg
cmp
adc
or
sarl
das
sarb
push
rcr
add
shll
mov
pop
dec
push
cs
xor
xchg
xor
xchg
popf
inc
mov
or
cmp
stos
add
roll
xor
sbb
ror
inc
imul
xchg
dec
dec
cmpsl
arpl
int3
xlat
pop
sbb
mov
dec
nop
or
in
sub
lea
and
jp
pop
xor
or
into
fcmovbe
inc
es
jp
imul
lret
push
jl
pop
frstor
ljmp
scas
jns
loop
addl
test
cwtl
sahf
adc
xor
jge
add
and
xchg
std
or
sbb
mov
call
enter
jae
dec
lock
mov
adc
icebp
inc
idiv
out
and
pushf
sbb
or
xor
pop
aam
push
mov
bound
push
add
stos
mov
inc
jae
xor
sbb
shrb
xor
pop
inc
das
push
jg
inc
add
jno
test
mov
or
mov
mov
sub
js
pop
in
cmp
mov
iret
cmpsb
icebp
pop
lret
sbbb
add
add
out
je
test
add
mov
xchg
push
xor
xlat
mov
inc
or
imul
adc
hlt
push
lahf
pop
outsl
and
dec
out
icebp
jg
sbb
push
mov
scas
push
aas
scas
cmp
negl
xchg
inc
dec
movsb
test
mov
pop
cmpsb
pop
ret
movq
mov
mov
lret
jae
or
mov
mov
mov
fbstp
dec
xchg
shrb
adc
push
cmp
aaa
xorb
xor
sub
cli
loop
sub
and
add
cld
xor
rorb
test
jne
ds
je
jmp
jmp
pop
inc
cmp
adc
sub
sarb
cmp
loope
pop
stc
inc
adc
popa
imull
xor
in
jp
pop
xor
orl
bound
lahf
orb
loopne
popf
push
inc
shlb
addr16
jge
or
sahf
sbb
fsubs
loope
dec
add
mov
jnp
adc
gs
sbb
mov
adc
sub
add
sub
std
and
push
fcmovb
jl
lock
fstps
inc
pusha
or
mov
xor
fidivrs
pop
outsl
mov
aad
scas
std
notb
aaa
xchg
push
loop
jl
dec
lret
fmuls
in
cwtl
dec
popf
in
adc
inc
loope
scas
push
outsb
imul
pop
mov
fs
test
inc
and
xchg
jae
je
fsubrl
int3
xchg
adc
lret
test
cmp
cmp
idivl
mov
std
aam
sbbb
xor
mov
push
jecxz
scas
cmp
out
inc
mov
fmulp
rclb
dec
repnz
test
xor
add
adc
rclb
ljmp
jmp
jo
aas
sbb
jmp
hlt
lds
mov
lods
xor
scas
scas
mov
xchg
stc
push
hlt
std
mov
loope
loopne
and
jbe,pt
insl
fdivs
int3
pop
gs
pop
dec
and
jl
cmpb
and
add
hlt
push
inc
pop
xor
push
orb
scas
call
jge
lock
cmp
inc
add
add
jge
xor
push
pop
repnz
rolb
dec
xor
aaa
jg
xchg
leave
outsb
jo
imul
fadds
out
inc
and
cmc
cmpsl
loope
lcall
sub
cli
pop
movsl
sbb
sub
xor
xor
mov
jo
cs
jae
icebp
faddl
xor
out
jmp
mov
mov
outsb
sbb
cmp
test
std
push
cmp
aas
jae
ljmp
mov
adc
test
adc
sub
mov
out
aam
jg
add
jl
lock
and
jmp
push
sub
shlb
leave
aam
lods
popa
fwait
or
stc
fadd
xor
pop
cmp
xchg
jmp
pop
ss
push
add
mov
stos
ret
pop
insb
pusha
lret
in
xor
mov
push
lods
and
cmp
addr16
dec
pop
and
fmull
icebp
and
mov
jne
repnz
out
adc
adc
dec
mov
insl
sub
and
jge
gs
es
adc
push
js
mov
sbb
lahf
ret
das
and
pop
cltd
cltd
cld
push
xlat
pop
cmc
arpl
mov
enter
add
fisubrs
jo
lods
fcmovb
or
sahf
loop
clc
ret
or
dec
jnp
jge
insb
xchg
stos
ja
pop
add
mov
sti
pop
cmc
jl
cmp
imul
xchg
pusha
cmp
jo
push
add
adc
loop
outsl
dec
ljmp
into
xchg
leave
mov
xchg
mov
push
sub
outsl
xor
xchg
jl
mov
dec
cs
adc
lea
adc
repnz
nop
aam
xchg
pop
lock
call
add
jmp
pop
push
adc
hlt
test
xor
lods
mov
into
orl
faddp
and
inc
cwtl
mov
jo
loopne
popf
es
hlt
insb
pushf
inc
ja
adc
mov
add
fs
and
repnz
cmc
mov
movsl
movb
sbb
adc
sub
jmp
adcb
rorl
std
iret
aaa
in
xchg
adc
out
xlat
fstl
push
inc
cmp
inc
jg
pop
std
ja
bound
add
fidivrs
dec
data16
fisubrs
subl
adc
das
xor
std
cmpsb
sub
or
mov
mov
fwait
push
jbe
xor
out
adc
and
out
movsb
loop
mov
push
mov
fiadds
or
sub
xor
xor
and
cmp
cmp
icebp
out
jno
pop
lret
testb
aam
mov
jl
mov
push
cmp
or
in
ljmp
aam
js
movsb
push
fwait
dec
rorb
adc
test
ja
imul
mov
lahf
stos
pushf
adc
in
mov
dec
into
fdivrs
or
loop
es
mov
dec
or
jl
out
pop
add
fdivrp
and
stos
outsl
sbb
icebp
inc
mov
stos
mov
mov
dec
sbb
lahf
sub
imul
jnp
xchg
movsl
jecxz
in
sub
push
push
fildl
or
es
or
aad
cltd
sub
or
lock
ds
jne
leave
jmp
and
ficompl
jl
cmp
or
scas
xlat
sbb
mov
xor
cs
lods
fsts
jnp
mov
dec
cmp
imul
xchg
je
push
lods
fmull
cmp
and
and
notl
int3
jmp
rclb
aas
sbb
movsb
mov
les
pop
jns
add
cmp
insb
mov
xlat
and
pop
push
dec
das
or
push
std
fdivrs
sbb
mov
movsl
cmp
xor
je
pop
dec
sbb
sub
test
imul
js
sub
sbb
inc
dec
sub
sub
pop
fucomi
and
les
sbb
mov
sbb
std
xlat
movsl
push
jne
mov
addb
jecxz
xchg
ret
int3
shlb
cmp
test
sub
or
adc
cmpsb
xor
adc
mov
adc
mull
stc
push
sti
dec
add
cmp
test
xchg
flds
mov
adc
pop
bound
and
ja
push
cli
push
data16
and
xorl
or
adc
fistpll
ret
test
scas
cmp
movsb
test
lahf
notl
insl
cwtl
jp
out
lahf
lods
scas
movsb
sbb
aad
enter
inc
and
add
out
ds
push
mov
push
lock
push
out
lahf
pushf
mov
mov
pop
add
push
mov
ss
fmul
jmp
jecxz
add
jbe,pn
ljmp
notb
repnz
aas
pop
cmc
out
jle
outsb
mov
lods
ljmp
sub
sub
mov
loope
jl
inc
inc
ja
push
movsb
movl
add
xlat
icebp
in
lods
cmpsb
lahf
or
insl
mov
jne
mov
push
movsb
xchg
dec
cmc
jnp
push
mov
insl
xor
cmp
inc
push
lds
in
insb
bound
xchg
or
sub
push
dec
inc
iret
or
fs
cmp
add
and
jne
lds
pop
adc
lret
sub
adcl
imul
jmp
jae
xor
dec
mov
cmp
pop
sub
and
cmpsl
sti
movsl
mov
inc
movsl
adc
lret
xlat
movsl
scas
pop
push
mov
mov
pop
sbb
lahf
pop
ja
xchg
or
movsl
cmp
out
inc
mov
punpckldq
mov
add
push
add
push
jmp
mov
add
movsbl
push
sub
es
popa
cmp
gs
and
or
mov
xchg
xor
dec
aaa
ret
and
dec
lret
jne
cwtl
mulb
jmp
ja
repz
gs
mov
push
imul
dec
or
mov
cmp
push
repz
mov
xor
loop
into
mov
push
outsb
cmpsb
mov
sbb
lods
fcomps
fsubrl
dec
out
psubb
sbb
movsl
push
xchg
mov
in
push
insl
push
sbb
add
cmpsb
push
mov
jl
sbb
inc
lret
xor
jbe
cmc
ret
xchg
xchg
mov
mov
jns
inc
int3
or
lcall
mov
jl
jo
jnp
movsl
jg
xchg
pop
xchg
and
fdiv
ljmp
push
xor
sub
mov
dec
loope
mov
dec
arpl
rcll
mov
hlt
cmp
adc
jle
add
add
test
popf
xor
cmp
imul
out
mov
cmpsb
sub
push
inc
jl
sbb
xchg
xor
jg
loop
cmp
in
negb
aad
out
or
and
jle
jne
inc
cld
pop
js
push
add
pop
jg
pop
xchg
scas
in
mov
scas
dec
sarl
sbb
xor
lods
movsb
or
je
loope
push
imul
cmp
movl
leave
out
das
outsl
js
xor
sub
movl
xor
push
gs
xchg
pop
popa
push
ret
pusha
loopne
loop
sti
flds
mov
es
cmp
ds
pop
jb
test
test
push
in
dec
add
jb
fwait
cmp
pop
in
repz
push
je
jo
daa
enter
inc
test
inc
jne
mov
mov
lret
lret
repz
es
iret
xor
cmc
fbld
inc
ja
push
add
push
addr16
lahf
push
fnstcw
stos
sahf
popa
fldcw
xchg
jmp
sub
sarl
cld
adc
in
lock
push
jae
xor
mov
fsubs
movsl
repnz
or
cmp
das
and
jnp
insl
cmp
out
pop
xor
jb
push
push
mov
dec
pop
subl
mov
movsl
dec
cli
icebp
sahf
loopne
stos
dec
and
fs
lds
adc
jecxz
xor
pusha
cwtl
scas
fists
je
inc
negl
sub
jge
repz
lods
fucomip
xchg
add
shlb
daa
adc
xchg
arpl
negb
cld
xchg
insb
in
mov
sbb
push
sub
lea
inc
fwait
xchg
push
xchg
mov
push
arpl
in
pop
push
sbb
dec
mov
cld
jae
aam
sub
mov
sbb
xor
in
push
fsubs
lahf
cmpsl
cmp
mov
xor
popf
nop
and
sbb
dec
test
fistps
cwtl
adc
xchg
jl
out
das
out
push
scas
aam
std
pop
mul
into
shrl
cli
sahf
push
out
into
mov
aas
lea
jge
cmp
aaa
mov
iret
aas
lods
mov
or
add
stos
mul
adc
pusha
or
push
inc
das
mov
cltd
fldenv
test
mov
pop
out
or
lea
pop
push
mov
or
push
mov
xchg
mov
ja
mov
mov
aad
mov
add
cmp
fptan
mov
inc
dec
test
push
bound
lods
xor
ss
jmp
icebp
pop
shrl
and
test
nop
outsl
jp
cmp
xchg
xor
shl
movsl
push
int3
rcrb
shl
xchg
std
ficoms
mov
or
xchg
sub
adc
repnz
lret
pop
jae
xchg
push
jecxz
pop
xor
jge
pop
stos
movsl
repnz
sub
clc
inc
out
cltd
xchg
fcoml
nop
mov
divb
lea
and
sbb
ss
lods
adc
ja
icebp
fisttpll
subl
mov
add
sub
adc
sbb
xchg
mov
cmpl
lock
outsl
jns
mov
inc
adc
imul
and
xchg
pop
movsb
fstpt
xchg
lret
subb
push
pop
imul
les
xchg
push
jg
repz
out
cld
popa
je
push
pusha
mov
mov
sbb
push
cmpsb
mov
lea
rcll
fcmovnb
push
push
jne
push
divl
sbb
inc
fxch
jo
mov
dec
popa
lods
loope
pop
xor
call
data16
mov
mov
stc
xchg
imul
jne
cmc
lods
dec
nop
aad
call
adcb
imul
mov
aas
idiv
jno
xchg
sub
je
popa
xor
push
lock
xor
push
push
out
adc
lret
xchg
cwtl
out
mov
pusha
and
mov
aaa
mov
testl
movsl
lcall
xor
ret
in
mov
inc
xchg
mov
mov
rol
sarl
xor
mov
mov
and
and
and
xchg
addr16
xchg
call
test
or
jo
test
add
adc
inc
dec
daa
jp
xor
data16
mov
cld
dec
cld
sub
or
xchg
arpl
les
sbb
in
roll
xor
es
lret
aam
sub
xchg
divb
cmp
call
jp
orb
mov
sub
scas
jmp
sub
sbb
sbbl
into
aaa
dec
add
in
cld
mov
pushf
xchg
inc
int
iret
out
idivl
or
mov
cmp
dec
mov
dec
sti
mov
hlt
cwtl
aad
jbe
cmp
fldt
sub
shlb
cmp
in
lds
out
pop
inc
mov
and
xchg
hlt
jb
jno
push
mov
inc
out
mov
sti
in
leave
nop
xchg
mov
outsl
sub
roll
mov
sar
call
pop
cli
sahf
jle
and
push
cmc
cs
sbb
in
xor
jb
push
outsb
xlat
jbe
in
aaa
inc
call
std
in
movsb
cltd
fldz
fbstp
xchg
lds
xlat
mov
push
mov
std
shrl
add
xchg
mov
push
push
lcall
push
xchg
sbb
add
je
mov
or
fs
cli
push
das
and
aaa
loopne
cwtl
into
stos
push
divb
add
rclb
ficoml
mov
iret
mov
xorb
push
inc
bound
andl
dec
mov
lock
xchg
cs
pop
mov
es
imul
repz
push
dec
out
xchg
xchg
cli
loope
mov
arpl
dec
mov
je
jle
and
and
add
sbb
cmpsl
loopne
and
pop
rcrl
test
daa
movsl
xchg
in
push
lret
inc
push
arpl
das
mov
inc
lods
mov
mov
icebp
mov
inc
int
push
jnp
test
mov
ret
das
lea
push
xchg
adc
cmp
sub
xor
mov
data16
dec
mov
sbb
xor
lods
mov
push
cwtl
lret
jmp
or
adc
clc
fs
popa
cmp
inc
notb
scas
sarl
jmp
pop
pop
and
lea
add
xchg
xor
adc
fsubs
and
out
pop
out
mov
add
cmc
jmp
xor
ds
adc
loopne
arpl
jae
dec
orb
xorb
icebp
mov
test
movsb
bound
mov
into
stos
out
jo
scas
push
xor
or
cwtl
jecxz
lds
daa
pusha
imul
push
in
pop
push
das
mulb
jge
sbb
push
jg,pt
pop
lcall
out
mov
sbb
cltd
inc
push
pop
sbb
in
divb
dec
xlat
xchg
add
in
jae
mov
or
cmp
pop
mov
xchg
mov
fldl
adc
xchg
mov
push
adc
jb
insb
mov
or
dec
fwait
test
xor
pop
cmp
sahf
jo
insb
xchg
scas
jbe
inc
repnz
jmp
lds
ss
adc
xchg
mov
mull
jns
gs
clc
imul
pop
or
lahf
rorb
andb
pop
mov
icebp
hlt
dec
add
mov
pop
insl
lret
push
push
sbb
xor
stos
fs
roll
xchg
pop
testb
icebp
xchg
repnz
pop
pop
scas
fistl
sub
aam
scas
mov
adc
push
lds
shlb
cltd
or
roll
and
fisttpll
dec
test
adc
xlat
movsl
out
repz
imul
cmpsb
mov
pop
je
lods
mov
mov
jle
cs
dec
repz
and
sub
int3
add
shll
xor
dec
mov
cmpsb
push
adc
rol
pop
clc
jge
xchg
xor
jg
sub
clc
scas
push
xchg
and
cmp
jo
rcrl
movsl
sub
mov
lcall
ja
sub
in
adc
std
dec
andb
jne
mov
imul
js
cmp
fcoms
or
aam
cmpsb
dec
sbbb
cmp
in
sbb
daa
ljmp
in
xchg
add
mov
xor
dec
mov
cmp
sbb
fcoms
pop
in
add
add
ss
jp
aad
ss
sub
lock
pop
lds
jle
cs
jmp
adc
mov
push
or
ret
inc
xor
iret
stc
xor
mov
or
lods
add
call
cld
ja
rcrb
andb
dec
add
mov
cld
lods
inc
scas
jmp
in
mov
and
inc
adc
or
imul
mov
or
sub
int
fsts
popf
push
in
sbb
movsl
rcll
sub
imul
push
dec
push
dec
mov
lods
dec
pop
lea
lret
and
clc
movsb
pop
mov
mov
xchg
inc
push
add
mov
mov
mov
repnz
sub
dec
sub
sub
dec
jne
scas
adc
push
loopne
cmp
cmpsb
js
sbb
mov
mov
das
or
push
in
neg
jns
mov
enter
add
jb
xchg
push
xor
cli
sbb
jp
sub
dec
sarl
mov
ljmp
jp
xchg
repz
loopne
out
push
movl
add
mov
xchg
out
mov
cmp
addr16
sub
push
inc
mov
andl
mov
xchg
xchg
jo
and
and
xchg
aam
mov
inc
xchg
idivl
out
push
movsb
lret
movsl
imul
cmp
and
xchg
cmp
dec
int
xchg
mov
repz
cwtl
push
push
adc
cmp
jne
jae
adc
lret
add
or
xor
mov
cmp
divb
and
cmc
mov
cmp
or
dec
in
pop
pop
mov
lods
adc
cmp
lcall
dec
repz
std
out
push
cmc
mov
fstps
add
call
pop
and
mov
xchg
aas
out
inc
pop
loopne
loopne
loop
xchg
inc
rcr
inc
cmp
xchg
mov
push
inc
mov
adc
fsincos
mov
stc
stos
pop
inc
out
jb
stos
sub
int
sbb
std
add
das
pushl
or
or
mov
pushf
and
mov
sarl
lret
imul
repz
shr
inc
out
mov
js
jo
faddp
jg
mov
lods
xchg
daa
insb
shlb
mov
add
fs
arpl
stc
sub
aaa
inc
mov
cmpsl
adc
push
outsb
ret
xchg
gs
xor
add
movl
cmpl
jmp
jnp
lcall
pop
mov
cmpsl
mov
lods
repnz
push
xchg
mov
je
xchg
pop
pop
or
and
arpl
mov
stc
mov
roll
in
and
xchg
test
lea
inc
in
dec
mov
sar
nop
and
movsb
pop
mov
popa
outsb
dec
push
mov
jg
cmp
cmp
mov
hlt
ficomps
jmp
jbe
fdiv
sarl
xor
insb
shr
xchg
push
addr16
cwtl
pop
daa
test
adc
mov
jmp
lea
aad
inc
xchg
mov
add
jp
hlt
jae
adc
lcall
incb
or
adc
mov
and
in
push
pop
dec
dec
mov
jb
out
sar
push
daa
mov
lds
cmp
sbb
pop
mov
inc
xor
out
push
jnp
jbe
loope
lds
sub
sub
jg
imul
mov
jne
ret
cli
insl
adc
jo
in
inc
jle
adc
ljmp
aad
popf
or
xor
outsl
or
adc
dec
lcall
or
pop
cmp
jl
push
sbb
xor
mov
leave
push
push
push
lret
pmullw
jle
push
dec
pusha
imul
and
cmc
fldenv
mov
cwtl
pop
repz
fs
es
inc
push
pop
into
or
movl
cmp
mov
xchg
sbb
mov
pop
in
or
pop
dec
in
mov
jne
push
or
sub
addb
sar
jge
enter
push
xor
leave
jo
sahf
insb
inc
loopne
lahf
ret
test
ds
jmp
insl
fiaddl
mov
jp
xor
add
jmp
cmpsb
stos
cmpsl
mov
or
rorb
pop
cli
fcompl
xchg
mov
jecxz
cmp
mov
in
jo
cmpsb
int
sub
mov
jnp
sahf
pop
aaa
rcrb
push
sti
dec
and
xor
test
xchg
sub
jae
xor
loop
and
push
mov
mov
xor
jns
mov
stos
imul
int
inc
push
ja
push
ljmp
stc
dec
iret
jns
push
stos
inc
es
or
sahf
pop
pop
cmp
sahf
sub
xor
dec
sub
sub
mov
fisubrs
xlat
test
mov
or
dec
xor
or
sub
sbb
fucomp
sub
push
cmp
lret
or
xchg
mov
arpl
adc
repz
cltd
push
sbb
cmp
out
lret
push
sub
cltd
not
sbb
into
lea
xchg
lret
cmpl
aad
cmpsb
imul
pop
jo
test
pop
mov
out
adc
jl
sbb
cmp
in
push
es
xchg
testb
cmp
popf
add
xchg
mov
mov
ret
xchg
bound
mov
cmpb
xor
sub
dec
adc
push
nop
fistps
pop
or
jg
dec
adc
dec
dec
jg
ret
mov
push
lock
pop
jno
sarl
xor
popa
stc
sbb
pop
jl
push
inc
or
mov
std
enter
clc
bound
leave
cmp
mov
jnp
jo
sbb
xlat
shlb
fisubs
fisttpl
loop
jmp
ss
xor
scas
or
cltd
int
cmpsl
sbb
in
pop
pop
fldenv
dec
cmpsb
ficomps
pop
hlt
push
imul
lods
jns
in
xchg
adc
inc
inc
shl
out
mov
pop
subl
sbb
mov
cmpb
aam
xlat
addr16
dec
or
insl
mov
addb
clc
jecxz
stos
rolb
sub
pushf
or
inc
xor
and
fstps
xchg
call
push
lds
mov
sub
je
sbb
and
test
cmp
stos
daa
jo
push
rorl
notb
adc
insl
pop
movsb
push
adc
cld
fisubl
fs
cs
mov
jmp
add
cltd
xchg
mov
lea
ja
mov
sarb
push
rcrl
push
mov
or
or
xchg
in
stos
and
fidivrs
jbe
mov
rcrl
or
cld
cmpsl
lods
fisubrs
cwtl
and
fidivl
in
add
cmp
sub
sub
test
push
sbb
mov
mov
add
xchg
out
into
inc
ret
push
inc
pop
add
sbb
xchg
out
xor
js
or
adc
and
testb
jnp
shlb
mov
sub
faddl
ds
pop
sbb
add
int
in
movsl
jo
popa
mov
ds
cmpsb
jle
sub
sbb
icebp
add
cmp
cmpl
pop
fimuls
and
pop
insl
ja
lods
fisubs
aam
add
insb
lds
into
stos
adc
mov
mov
clc
out
sub
sbb
shll
test
imul
mov
pop
jle
rcrb
cltd
cmp
bt
add
jl
jo
rolb
and
push
add
pop
into
cli
cmp
or
fistps
xchg
add
decl
jmp
jno
fstl
mov
cmc
add
iret
mov
push
mov
daa
in
cltd
imul
in
in
xchg
out
dec
popf
outsl
mov
popa
int
fsubl
and
mov
cmp
sub
fwait
mov
inc
dec
dec
div
jnp
jbe
jecxz
std
xchg
cmp
jnp
fidivrl
jle
add
fldcw
cli
dec
add
adc
scas
and
mov
mov
mov
aad
mov
and
out
sbb
mov
mov
xor
dec
jb
push
lcall
dec
cld
cmp
call
bt
jp
jle
pcmpeqd
sub
cmp
test
out
xchg
imul
lret
jmp
cmp
loope
mov
insl
lret
call
jno
sbb
or
mov
add
cmp
adc
clc
push
mov
stos
out
into
jmp
cmpsb
scas
fisubs
mov
daa
xchg
mov
into
mov
mov
mov
pop
push
loop
sti
fisttps
lret
lods
add
in
inc
mov
jg
mov
inc
cmp
inc
fidivrs
lahf
insl
jbe
mov
scas
jmp
cmp
fldcw
lea
ret
in
jg
push
or
js
gs
jp
jmp
pop
popa
movsl
test
call
mov
xor
inc
loop
xor
iret
mov
cmc
mov
xor
mov
or
cmp
cs
test
jge
mov
inc
cli
dec
sub
adc
ret
outsb
pop
test
cmpsl
xchg
ret
pop
hlt
add
and
sub
push
nopl
dec
rorl
jne
sbb
jnp
imulb
inc
insl
fnstsw
gs
cmp
sbb
movsb
loopne
jecxz
mov
or
sti
aam
subb
aaa
dec
push
sbb
cltd
sub
lret
inc
inc
cmp
sbb
pop
adc
lret
shlb
push
sub
adc
and
aad
cwtl
jl
push
xor
cli
xor
bound
jl
mov
hlt
insb
sbb
mov
cltd
popa
add
scas
rcrb
jae
in
jnp
stos
loopne
jae
fsts
dec
mov
or
lds
push
xchg
ds
rcr
pushf
out
test
sub
xchg
add
mov
dec
pop
push
mov
orl
test
test
xor
mov
decb
and
adc
rcll
mov
dec
lods
xchg
xor
or
push
adc
adc
or
xor
sti
mov
in
cmpsb
cld
aad
lahf
fwait
adc
fnstenv
decl
pop
sbbb
xchg
sub
xchg
mov
sbb
rolb
add
imul
inc
rorb
rorb
out
and
sti
stos
dec
insl
mov
and
push
adc
mov
push
inc
pop
jge
clc
jl
push
sub
xchg
mov
mov
push
popa
popf
xchg
ss
iret
jne
arpl
movsb
adc
cmp
dec
or
jne
cmp
scas
jb
cmpsb
mov
divb
fisttpll
xor
in
gs
mov
pop
sub
inc
mov
and
add
ss
arpl
jo
sti
lcall
and
mov
scas
pop
xchg
push
iret
ret
cld
push
and
push
sub
xchg
xchg
push
mull
je
imul
jl
push
out
fwait
xor
std
mov
ljmp
pushf
sar
lds
loop
or
ds
std
ficomps
jae
jl,pn
mov
or
cmpsb
push
xor
sub
int3
xlat
testb
sub
add
jecxz
pop
sub
mov
adcb
mov
in
ret
inc
mov
lea
add
add
enter
dec
daa
gs
push
adc
nop
js
dec
mov
pushf
fwait
cli
iret
sbb
adc
popf
ret
dec
int3
or
clc
mov
outsb
orl
push
cmpsb
xor
jbe
aad
pop
push
mov
sbb
mov
sar
or
lret
fsts
sahf
stos
pushf
cmp
movsl
rol
pop
xor
add
mov
popf
cmp
sbb
jb
xor
xchg
jne
int
dec
mov
ja
insb
push
stc
inc
imul
inc
addr16
insl
insb
mov
sbb
pop
mov
push
jb
es
pop
pop
mov
mov
js
out
or
xor
jb
adc
je
jno
push
push
cmp
clc
cpuid
pop
push
jle
aad
and
mov
not
arpl
jnp
push
test
addr16
std
push
or
pop
xlat
pop
lahf
enter
aam
inc
rclb
inc
aad
cmpsb
jbe
lahf
xor
xor
and
clc
push
or
aaa
pop
inc
inc
xor
xor
pop
push
pusha
out
sub
cmp
movsl
or
scas
in
mov
pop
shr
sbb
mov
jnp
jae
dec
push
ja
sub
out
jecxz
mov
fadds
insb
arpl
and
xor
cmpsb
dec
inc
fstpt
mov
jp
mov
sbb
inc
jmp
std
or
add
pusha
inc
int
ljmp
movsb
dec
shrb
push
repz
xchg
dec
dec
pop
stc
mov
lods
icebp
mov
mov
or
hlt
dec
cmc
mov
ljmp
sar
es
sub
sub
adc
inc
enter
das
lea
mov
xchg
ss
js
movsb
leave
xchg
or
stos
imul
and
xchg
mov
or
xchg
incb
in
or
fnstsw
jo
loop
adc
lret
cwtl
das
xchg
pop
jge
movsb
mov
repz
hlt
fldcw
cmpl
add
xchg
aad
in
popf
xchg
pop
cmp
lock
or
out
out
cmp
sub
mov
push
add
cli
sbb
rclb
mov
jle
in
pop
dec
xchg
pop
scas
xor
or
int3
jmp
pop
mov
jo
jg
fistl
mov
and
ljmp
adc
pusha
js
mov
pop
jl
iret
adc
push
pop
scas
pop
movsb
inc
mov
pop
sahf
mov
cld
mov
adc
int3
adc
ror
pop
das
and
and
call
and
or
mov
rclb
add
sbb
jns
pop
test
ljmp
pop
addr16
pop
jb
addr16
pop
aam
dec
je
in
out
push
xor
test
and
int
pop
mov
mov
adcl
cmp
int
pop
jae
xchg
cwtl
insb
inc
jo
outsb
xchg
and
test
inc
repz
loopne
adc
ss
jl
scas
out
pop
pop
lds
mov
lods
ljmp
aad
add
pavgb
mov
ljmp
add
sahf
pop
jb
sbb
lds
push
repz
loop
dec
sti
or
mov
inc
punpcklbw
jmp
or
xchg
lret
mov
in
pop
inc
outsb
push
ds
fdivrp
xchg
jle
xchg
icebp
ds
scas
xchg
mov
jecxz
push
sbb
popf
cmp
mov
in
mov
xor
int
dec
movsb
sahf
stos
rcll
fs
icebp
gs
inc
repz
pop
hlt
scas
decl
push
xchg
mov
cmp
xchg
lcall
dec
arpl
repnz
push
pop
lret
push
sbb
outsb
inc
dec
pop
xor
or
sub
add
leave
insb
push
add
pushf
repz
xchg
ret
loope
test
dec
xor
inc
lds
fbstp
sar
xor
icebp
mov
mov
in
mov
adc
sbbb
push
inc
icebp
mov
enter
incb
and
inc
loopne
in
or
add
push
dec
js
scas
adc
out
xchg
jbe
sbb
aaa
in
or
push
inc
call
push
cmp
fldt
dec
adc
xchg
cltd
adc
add
cmp
sbb
lcall
add
cmp
adc
xchg
shl
setae
jge
repnz
les
xor
fists
mov
or
push
sub
test
add
ljmp
scas
and
addr16
stos
mov
addr16
ficoml
lods
mov
push
jnp
leave
lds
lcall
addr16
dec
add
jo
cmp
xchg
add
xchg
ljmp
add
aam
psrlw
movsb
aaa
leave
ret
cltd
inc
loope
and
icebp
sub
cmp
xor
mov
mov
outsl
stc
cmp
add
loop
rcll
mov
aas
sub
data16
shlb
das
dec
push
lret
imul
pop
dec
dec
mov
gs
push
int3
mov
mov
push
cmp
cmp
movsl
push
scas
pop
pop
mov
sbb
je
mov
fwait
insl
loopne
divl
add
push
push
pop
jnp
into
repz
lret
push
pop
out
call
jo
repnz
mov
nop
imul
lds
jmp
fcom
ret
or
xchg
cwtl
idiv
inc
add
hlt
gs
xchg
inc
xor
fidivl
add
push
pop
mov
pop
inc
cmp
ret
jns
rorb
pop
push
roll
xchg
xchg
aad
clc
mov
shlb
mov
jmp
insb
fnsave
add
add
xchg
xchg
aas
jns
dec
inc
cmpsl
adcl
mov
lds
mov
sbb
push
cs
mov
and
sti
or
sbb
or
mov
jp
and
fsts
fisttpll
bound
push
in
iret
sbb
push
sub
shl
mov
adc
push
inc
imul
adc
adcb
mov
push
roll
cltd
incl
and
cmp
clc
mov
out
jmp
orb
mull
adcl
inc
fwait
mov
into
fistpll
sbb
aaa
aas
std
mov
fnstenv
xchg
pop
ds
aam
shlb
jae
shll
cmp
and
push
aad
mov
pop
sbb
in
inc
mov
aad
xchg
hlt
loopne
push
loope
enter
aas
test
out
hlt
inc
mov
xor
dec
mov
push
mov
test
idivl
lock
mov
shl
xchg
das
xor
pop
out
pop
push
xor
ret
mov
and
cmpsl
icebp
sbbl
inc
sbb
mov
xchg
fcmovb
jo
push
in
mov
gs
aam
or
stos
inc
xchg
xor
ds
lods
icebp
adc
mul
out
test
stc
or
das
outsb
mov
add
jb
int3
dec
sub
fs
inc
scas
repz
loopne
cmpsb
pop
scas
or
sti
cld
stc
or
out
dec
sbb
int
sub
in
testb
arpl
stos
xlat
adc
rcrb
popf
fdivs
out
adc
sub
mov
inc
add
lock
sbb
cmp
addr16
in
test
loop
push
xor
lret
test
cmp
stos
add
mov
inc
dec
pop
mov
loopne
lock
ja
inc
mov
out
xchg
pop
mov
inc
pop
and
xchg
into
xchg
or
imul
enter
bound
jnp
sbb
jg
in
xchg
jp
movsb
pop
add
xor
push
mov
jmp
lea
addr16
leave
pop
in
arpl
fisttpll
shlb
xchg
cltd
or
pushf
adc
faddp
mov
ljmp
jno
insl
xor
xchg
adc
sub
shl
sub
pop
dec
xchg
adc
loope
ljmp
test
xchg
mov
mov
push
fwait
push
loop
insb
fsub
lds
pop
pop
enter
into
sub
mov
sub
jecxz
js
and
sbb
out
mov
fidivl
iret
ror
jl
movsl
mov
push
negl
in
and
in
lds
repnz
std
inc
mov
sub
mov
mov
dec
dec
call
dec
xchg
push
adc
in
imul
or
sub
push
lahf
push
adc
mov
mov
and
in
jmp
jnp
daa
inc
scas
jmp
mov
in
push
jmp
imul
jle
movsl
dec
aad
push
dec
ljmp
xor
mov
mov
pop
lret
incl
loopw
in
push
lret
pop
or
jle
mov
xchg
cmpb
mov
mov
pop
scas
rcrl
std
jp
lock
push
inc
pop
lahf
incb
ret
push
pop
dec
out
adc
xlat
push
jns
or
or
xor
mov
lods
xchg
cmp
sbb
sub
mov
jle
ljmp
and
cmc
mov
mov
out
pop
paddb
xchg
movsl
aam
mov
push
lods
cs
xor
mov
movsb
cli
test
pusha
adc
dec
test
mov
mov
out
mov
icebp
mov
shlb
mov
scas
inc
sbb
nop
push
xlat
cmp
mov
fbstp
mov
mov
push
or
ja
mov
and
mov
mov
mov
cmp
test
jb
push
xchg
cmp
loope
push
adc
icebp
lea
mov
mov
inc
clc
add
jne
adc
push
dec
movsl
cmp
sbb
pop
cltd
adc
push
in
jbe
add
incb
int3
mov
ljmp
push
jnp
popa
aam
push
mov
jno
call
stos
pop
bound
outsl
or
xchg
pop
loope
sub
add
jnp
std
push
pop
lea
repnz
loop
out
sub
pop
push
int3
fisubrs
xchg
mov
test
dec
pop
hlt
and
xchg
adc
pop
push
xlat
sbb
stos
mov
xor
inc
sbb
jp
cld
cmpsl
mov
insb
into
mov
cmpsl
jno
or
jg
call
add
push
imul
cmp
ds
repz
stos
jl
mov
add
pusha
and
into
push
das
aas
sahf
ds
sbb
pop
jp
mov
or
xchg
or
jnp
inc
stc
rorl
test
jno
shlb
sub
orb
les
imul
jg
lods
pop
imul
inc
mov
movb
popf
and
xchg
pop
xor
pop
das
push
adcb
movsb
push
push
push
lds
test
or
dec
add
mov
xor
xchg
ja
push
jo
call
inc
xchg
scas
das
into
jmp
pop
xchg
pusha
pop
popf
sarb
push
adc
ss
aam
dec
lds
dec
or
inc
popa
addl
add
insb
mov
xor
daa
push
fstpl
pop
out
sub
and
fmul
mov
add
or
sar
push
mov
sbb
flds
push
push
shlb
sahf
cmp
mov
cmp
pop
mov
arpl
das
mov
cmpsl
xor
mov
adc
or
cli
xor
lahf
outsl
je
jmp
xor
fmull
aaa
jmp
test
xchg
lcall
sbb
fistps
mov
ss
xchg
sbb
gs
dec
fwait
shlb
adc
hlt
mov
shrb
mov
and
xorb
push
shrb
sbb
push
pop
ljmp
pop
push
addr16
movsl
sbb
gs
mov
int3
in
lock
adc
xchg
adcl
enter
out
pop
arpl
ret
scas
sbb
jmp
inc
mov
test
nop
pop
orl
mov
in
sbb
ret
pop
cld
sub
pop
rcll
lock
and
pop
push
movsb
jbe
mov
adc
out
nop
outsb
pop
jle
dec
xor
mov
cmp
xchg
push
inc
sbb
xchg
push
mov
xor
pop
xor
mov
pop
push
mov
xchg
shl
data16
dec
aam
or
xor
jbe
iret
lea
jbe
outsl
push
mov
and
cmpsb
sbb
fs
fs
add
enter
sti
int3
pop
inc
aaa
push
xchg
push
das
or
xchg
dec
das
dec
mov
movaps
adc
inc
pop
sti
dec
pop
inc
ja
cmp
sbb
dec
ficoml
test
xor
adc
loopne
hlt
aas
and
jae
hlt
test
sti
sbb
mov
shlb
div
mov
stos
xor
test
outsb
sti
imul
loopne
addb
jl
popa
xchg
fisttpl
or
loop
fwait
jbe
lock
orl
cwtl
push
mov
jb
xchg
lret
push
pop
xchg
fiadds
insl
mov
push
or
mov
imul
mov
fnstenv
and
sbb
mov
xchg
add
sbb
in
sahf
hlt
ret
jns
fldenv
cmp
cmp
in
and
xchg
sub
fsubrl
add
adc
xchg
jo
mov
sub
sbb
mov
js
mov
dec
and
or
mov
mov
cmc
mov
and
lock
pushf
fildll
xchg
adc
sbb
outsb
fists
clc
push
insb
rolb
add
or
shl
ja
pusha
sbb
movsb
call
adc
sub
repnz
jg
jne
lahf
int3
in
ret
sbb
mov
ljmp
sub
cmovae
sbb
dec
jb
stos
pop
mov
cmpsb
sbb
add
or
out
insb
jecxz
idivb
dec
mov
cmp
leave
jnp
jmp
sub
fs
pop
add
test
push
call
dec
pop
sarb
inc
imul
xchg
cmp
lret
lret
mov
clc
nop
es
adc
hlt
and
add
cmpsl
jae
shlb
filds
jecxz
gs
cmp
mov
dec
xchg
cltd
loop
mov
sbb
pop
push
ljmp
popf
push
adc
jmp
aas
and
pop
sub
or
aam
dec
std
roll
lret
loop
test
scas
push
push
cmpl
es
je
ret
pop
rorb
cmc
fildl
fcmovbe
lock
push
hlt
cmp
cmp
mov
and
cltd
mov
outsl
adc
jge
cmc
sbb
test
lods
xchg
gs
lcall
int
clc
cmp
lods
cmp
fsubrs
aaa
mov
jb
pop
cmc
push
dec
stos
or
mov
mov
or
fdivrl
bound
mov
repz
inc
push
das
jo
stos
cmc
int3
and
and
dec
lods
shll
mov
subb
movsl
or
out
mov
cmp
mov
pop
or
insl
in
jb
adc
mov
mov
jne
xorb
rcll
push
dec
push
jmp
jp
inc
jmp
pushf
push
push
xchg
dec
push
xor
pop
xlat
je
in
sbb
clc
inc
sbb
out
pop
rcll
out
in
pop
cwtl
icebp
push
dec
jbe
lods
push
sahf
inc
shll
mov
fcmove
sbb
or
repnz
addr16
leave
xchg
out
jecxz
mov
out
adc
hlt
pop
dec
ffreep
int
pop
pushl
pop
fbstp
shll
sbb
xchg
insb
repz
ja
push
out
push
lret
xor
ljmp
out
inc
cld
add
or
insl
jp
iret
dec
insb
int
shrd
jne
aas
dec
aas
push
push
test
rorl
dec
adc
sahf
rcrb
sub
movsl
aas
outsb
mov
inc
dec
and
jne
outsl
xchg
lds
out
sub
ret
cmc
addr16
decb
pusha
mov
mov
hlt
sbb
mov
jne
in
or
pop
insl
insb
shll
rcr
adc
xlat
and
jecxz
lods
aam
into
sbb
sub
std
and
mov
mov
sub
mov
dec
daa
xlat
pushf
hlt
jae
xor
test
leave
mov
loopne
fcmovbe
sbb
mov
sbb
repz
subb
xor
xchg
pushf
subl
movups
lret
xlat
shll
push
ss
add
xchg
repnz
sub
jb
pop
pop
add
push
cmp
xchg
jecxz
mov
mov
loopne
into
test
aaa
leave
repnz
fisttpl
int3
bound
daa
sub
das
daa
je
movsl
mov
std
ficompl
adcb
test
cmp
loope
dec
data16
push
inc
scas
dec
es
adc
lret
in
add
clc
jae
push
stos
loopne
sub
movsb
xchg
push
or
jae
lea
dec
ret
lea
movb
sarb
jb
sub
mov
mov
stos
subl
pop
nop
mov
pop
mov
dec
and
cs
arpl
pushf
add
jb
aad
or
pop
fsub
push
icebp
shl
in
aas
mov
and
and
inc
call
into
ljmp
ss
dec
sub
xor
jo
add
adc
mov
sub
pop
aas
cmp
push
push
fdivrp
cmp
fs
jl
inc
int3
lock
mov
pop
lret
sub
ficompl
mov
es
fxam
or
xor
sub
mov
jne
stc
mov
mov
in
out
sti
mov
shlb
fildll
xlat
mov
sti
sub
pop
roll
add
push
pop
xor
int
push
fcomi
mov
sub
stc
mov
pop
mov
mov
cmc
jp
out
stc
repz
daa
lcall
dec
jne
imull
push
mov
add
jno
inc
xchg
fs
imul
pop
push
repz
js
repnz
xchg
push
inc
xor
push
mov
test
cmc
test
cwtl
push
mov
pop
mov
out
notb
sbb
loopne
mov
fdivrl
push
nop
out
pop
scas
dec
cli
addr16
movaps
sbb
pop
repz
pop
push
mov
xchg
mov
dec
imul
std
into
dec
int3
sbb
out
mull
xor
xchg
sub
out
push
jne
mov
repnz
dec
push
jb
mov
aas
pop
leave
lea
jo
inc
or
movsb
push
mov
stc
mov
mov
mov
xlat
mov
dec
movsb
test
xchg
lea
scas
mov
hlt
inc
sub
xchg
out
lds
ficoms
popf
popf
test
mov
cmp
push
divb
or
out
filds
aad
mov
rol
mov
inc
xchg
lds
addb
cli
and
enter
mov
or
test
sbb
hlt
in
loopne
add
cmp
test
and
xchg
mov
insl
lea
stc
push
dec
mov
bound
out
daa
mov
adc
ja
mov
mov
adc
ja
in
fcmovbe
pusha
xor
test
xchg
lods
xor
pop
xchg
icebp
scas
xor
aas
into
and
pop
dec
xchg
xlat
add
insl
lods
dec
mov
clc
sbb
mov
mov
aaa
cmpsb
in
mov
int3
aad
out
jb
je
es
mov
in
sbb
mov
or
and
push
popf
pop
cld
sbb
mov
inc
aad
pop
mov
jno
dec
in
outsl
xchg
or
ja
insb
push
popa
cwtl
in
push
imul
mov
inc
pop
mov
xchg
notl
lds
mov
mov
aas
call
loope
arpl
lret
scas
mov
adc
pop
repnz
daa
int3
fiadds
add
jo
repnz
mulb
icebp
jmp
xor
pop
jae
jg
xchg
insl
out
sahf
cld
test
cltd
mov
add
pop
addl
xor
pop
mov
int3
xchg
movsl
les
adc
outsb
icebp
pop
test
add
push
dec
xchg
cmp
nop
jns
adc
pop
sbb
mov
cmp
push
mov
or
leave
pop
lds
or
fs
repz
mov
xchg
mov
out
cmc
cwtl
es
xchg
and
mov
cs
loopne
popf
je
push
mov
inc
daa
les
imul
add
xor
adc
test
stos
jb
mov
xor
add
add
cmp
sarl
adc
std
dec
pop
cmpb
popa
jo
stos
pop
xor
xor
pop
mov
xor
lcall
add
jmp
test
pop
andl
add
mov
cmp
cmc
loopne
cmp
and
je
mov
push
xlat
inc
dec
inc
cmpsl
xor
test
push
out
test
push
add
lods
jge
jmp
mov
sbb
and
inc
xchg
aas
xchg
lret
insb
movsl
or
xor
repz
fldl2e
sbb
insl
cmp
stos
push
fstps
jae
pop
pop
dec
sbb
mov
adc
push
xchg
lock
out
icebp
pusha
pop
popf
sub
sbb
jae
mov
mov
push
je
ror
out
aad
pop
mov
pusha
mov
dec
scas
mov
jecxz
imul
dec
adc
cwtl
dec
aad
std
mov
fstpt
mov
iret
and
lcall
cli
iret
pop
enter
cmc
add
xchg
dec
dec
fs
mov
es
jns
cmp
inc
rcll
roll
iret
outsl
lea
pop
fisttpll
gs
dec
cli
jnp
test
sbb
sub
adc
cmp
push
lcall
cmp
fistpll
sub
mov
xchg
hlt
push
test
adc
cld
sub
jl
jmp
fwait
pop
popf
xlat
dec
cli
cmpsl
mov
jne
test
popf
popa
dec
mov
dec
xchg
lds
test
popa
mov
dec
fdivs
pop
inc
mov
inc
xor
and
and
fwait
add
insl
cltd
mov
jge
push
pop
sub
xlat
es
mov
in
lret
popa
xchg
inc
jg
push
mov
pushf
ret
inc
addr16
popf
dec
frstor
mov
ljmp
xchg
cltd
les
repnz
loopne
or
xchg
clc
push
add
in
mov
lret
pop
std
pop
xor
push
cmpsl
jo
dec
fdivl
xor
repz
lahf
or
sbb
mov
cmp
xchg
in
cmpsl
push
inc
mov
xchg
outsb
inc
fisubrl
cmpsl
clc
cmp
out
or
mov
pop
cmpb
or
or
out
notb
cmpsl
fs
insl
movsl
in
dec
lahf
adc
insl
dec
clc
inc
and
add
jl
sbb
mov
js
lods
mov
fwait
outsl
notb
mov
shrl
fistpll
es
cmp
insb
mov
sbb
xchg
out
out
jns
loope
sub
loopne
icebp
rcll
popa
dec
insl
ja
jne
cs
mov
popa
fidivrs
mov
xlat
push
and
iret
pop
add
cmp
jmp
xor
adc
clc
ret
idivb
mov
cld
mov
shlb
inc
fsubs
push
pop
hlt
cmp
hlt
inc
fs
imul
scas
mov
std
mov
loopne
jnp
les
stos
dec
lahf
sbbb
loopne
stos
pop
or
mov
jns
dec
mov
mov
mov
jmp
ret
add
cwtl
loope
jne
sub
sub
in
xor
push
fldcw
mov
push
mov
imul
repnz
iret
sbb
test
pusha
or
out
add
lret
cwtl
mov
and
push
xchg
dec
sub
adc
js
adc
iret
test
push
shl
or
outsl
mov
dec
es
or
xor
cltd
adc
push
movsl
add
jne
or
mov
dec
inc
cmp
or
insl
jnp
mov
rcrb
sahf
cmpsl
inc
int
or
int3
ds
and
dec
sbb
cld
dec
sub
arpl
aaa
xor
cmc
add
or
and
push
dec
ret
add
std
pop
cmp
mov
lock
testl
shll
pop
test
push
or
cmp
dec
outsl
cmp
insl
out
pop
inc
pop
mov
cmp
inc
outsl
cltd
aam
aad
push
jb
cmpsb
dec
mov
mov
fnstenv
push
mov
lcall
xor
xchg
cmc
gs
hlt
insb
sahf
sub
xor
mov
push
xor
call
xchg
pmaddwd
jnp
outsl
xchg
mov
pop
sbb
lods
jo
in
and
inc
ja
sahf
outsl
jp
jae
jl
adc
or
lea
xchg
call
mull
mov
jg
outsb
lea
jae
mov
in
jl
cmp
sub
push
xor
mov
sub
push
adc
loopne
pushf
cli
sbb
adc
pop
lret
aad
shr
mov
sub
les
fbld
outsl
aaa
not
bound
gs
sbb
pusha
add
dec
mov
dec
push
ss
hlt
iret
inc
in
pop
rorb
mov
xchg
xchg
xlat
jae
fcmovne
mov
loope
add
lea
bound
rorb
ficoml
mov
sub
jg
inc
imul
sub
xchg
vmovapd
cmpsl
pop
data16
movsb
pop
adc
outsb
dec
jp
xor
adc
stc
into
shl
ret
fwait
sub
jnp
shlb
xchg
lea
and
cmp
dec
lods
jbe
out
jns
fnstsw
or
lret
adc
lods
mulb
insl
bt
cmp
test
jnp
xchg
sub
mov
adc
call
hlt
cltd
out
cmp
adc
int3
xchg
cmp
xchg
jns
sbb
shr
sbb
dec
ljmp
popf
orb
or
lret
adc
aam
ja
cli
icebp
int3
ja
aas
adc
mov
stc
fstp
fiaddl
xchg
inc
dec
mov
test
lcall
jecxz
add
or
popf
sub
pop
movb
into
arpl
or
mov
insl
insb
mov
adc
scas
bnd
or
sub
push
xchg
mov
mov
jo
leave
xchg
push
insl
and
xor
lock
in
cwtl
mov
fs
cwtl
lret
sub
lds
inc
aaa
loop
mov
idivb
mov
iret
addb
stos
jne
or
lahf
enter
push
insb
orl
add
cwtl
out
dec
pop
mov
lds
pop
data16
in
push
pop
sahf
mov
fdivr
loopne
xlat
mov
wrmsr
out
sti
xlat
cmp
ficoms
sub
jp
in
mov
xor
and
lret
fwait
jecxz
mov
ror
mov
lods
xchg
or
outsl
pop
hlt
insl
push
push
icebp
add
std
insl
mov
jl
sub
mov
std
arpl
rclb
fdivl
cmp
movsb
inc
mov
cmp
fmuls
cld
into
sub
and
stos
dec
dec
fdivrl
out
adc
cmpsb
dec
ds
xor
aad
js
jns
pop
movsl
movsl
xchg
pop
xchg
pushl
push
in
cmp
mov
pushf
jne
adc
in
push
mov
ret
scas
mov
xor
lods
xchg
fsubrl
sti
mov
daa
rol
in
jno
push
pop
sbb
fwait
mov
sar
in
push
ret
pop
in
hlt
into
jge
lahf
hlt
clc
cmp
xor
mov
orb
daa
js
cmp
stos
cmp
test
arpl
xchg
xor
mov
mov
inc
cmp
sti
cmp
sub
dec
test
pop
jns
dec
mov
pop
popa
pop
jle
xacquire
sbb
scas
testw
out
lcall
jecxz
or
lahf
sbb
and
bound
mov
into
xchg
lds
jge
popl
pop
pop
call
mov
cs
iret
pop
sub
outsb
scas
rorb
ja
arpl
sub
jae
gs
mov
mov
cmpsb
mov
loope
xor
aas
call
jne
nopl
and
movsb
ret
sub
xor
outsl
mov
fldcw
add
ljmp
je
mov
jne
push
xor
mov
adc
jecxz
enter
pop
adc
adc
add
lods
inc
inc
mov
push
aaa
and
cs
push
xor
clc
adc
adc
je
xchg
push
push
aas
mov
push
cmp
xor
mov
pop
mov
inc
das
and
mov
mov
dec
pop
jae
sub
mov
and
mov
int
dec
rcrl
popf
sub
xchg
sbb
fidivl
stos
popf
xlat
push
push
lea
imul
lds
mov
out
or
xchg
movsb
push
sub
stos
jmp
scas
fildll
xor
test
push
ds
movsb
xor
les
pop
test
out
cmc
call
out
dec
fs
test
sbb
jg
lea
jne
inc
mov
shlw
dec
lods
js
loopne
sbb
cmp
jne
add
fnstcw
mov
std
orb
mov
push
dec
out
scas
movsb
cmpsb
out
sbb
fidivl
fcmove
popf
lock
pop
arpl
out
pop
lret
jb
test
aaa
mov
sbb
aas
ret
inc
addl
loope
xor
mov
insl
or
fidivl
bound
adc
rcrb
jg
cwtl
push
ja
leave
push
jp
xor
or
or
mov
rclb
sbb
mov
aaa
clc
outsl
sub
adc
xchg
movsl
fsubrl
xor
cmp
cmp
add
imul
outsl
das
dec
lock
adc
jne
mov
out
mov
sti
scas
mov
jmp
pop
es
xor
push
std
sbb
dec
pop
rolb
sub
xchg
popl
push
xor
das
out
ret
call
dec
leave
xor
or
push
mov
mov
jne
mov
inc
jne
push
movl
jb
mov
outsl
dec
data16
sbb
inc
add
daa
mov
pop
aas
push
lret
pushf
pop
pusha
and
into
jo
rcr
fwait
adc
lahf
cmpsl
loopne
rcrb
mov
add
sub
rcrl
mov
push
mov
add
jb
je
inc
cmp
xchg
sbb
fists
sub
mov
adc
push
cs
add
dec
sub
dec
push
pusha
inc
mov
push
lods
xchg
sti
xchg
push
stos
jmp
xchg
cld
nop
pcmpeqb
adc
mov
jo
or
dec
aam
test
cmp
call
int
loope
inc
mov
lea
mov
adc
out
lock
xchg
cmp
in
and
cwtl
ret
lods
and
push
xor
orl
cmp
dec
or
ja
aaa
sub
add
push
aaa
nop
jmp
outsl
nop
out
dec
mov
cmp
fstps
and
iret
test
cwtl
cmp
cld
xchg
dec
dec
adc
enter
pusha
fsubrs
pop
cld
gs
in
push
cltd
sub
and
daa
cmp
inc
js
inc
aaa
jl
pop
outsb
outsl
fisubl
mov
pop
xor
daa
sbb
lcall
cmc
je
mov
movsl
push
mov
jecxz
xor
stc
push
mov
push
aaa
lods
inc
xor
sub
xor
lds
ds
sbbl
inc
pusha
in
adc
and
dec
pop
xchg
xchg
or
jecxz
ret
lods
mov
aaa
jno
sub
es
or
sarb
cmc
aam
scas
mov
cmp
loop
aaa
in
jecxz
loope
out
popa
shl
test
sahf
mov
rclb
lret
push
jb
dec
dec
xchg
and
loope
inc
data16
xchg
push
sbb
mov
xchg
add
lret
xor
push
hlt
push
jne
xor
sub
js
add
dec
jle
push
bnd
lds
inc
shll
aaa
in
into
cmpsl
or
in
cltd
jo
xchg
pusha
adc
jg
or
dec
in
lea
mov
push
mov
pop
pop
bound
pop
movsb
mov
fisubl
push
out
pop
jae
jl
ds
jle
and
bound
mov
jo
outsl
xchg
inc
in
cltd
sub
mov
mov
out
adc
scas
arpl
cmp
mov
cmp
inc
or
jbe
and
xchg
mov
mov
faddl
mov
dec
jnp
dec
pusha
inc
imul
lret
inc
pop
clc
add
call
dec
mov
cmp
pusha
pop
jno
fidivl
fbld
sub
pop
cmpsb
jmp
ja
std
cmpsl
das
sahf
jge
andl
lahf
jne
lret
lea
jge
icebp
mov
movsl
dec
xor
js
sub
movd
push
repz
xor
sbb
sub
cmpsb
and
mov
testb
or
in
imul
popf
call
and
out
xchg
push
leave
pusha
mov
std
dec
jmp
repnz
cmpsl
lea
mov
pop
jnp
in
xor
mov
mov
or
dec
decb
jb
popf
add
sub
out
or
idivb
int
mov
cmpsl
mov
inc
push
jle
fsubr
jbe
insl
addb
imul
je
sub
in
xchg
test
inc
stc
fists
lods
xor
xor
enter
pop
cmpb
sbb
mov
imul
and
in
fnstcw
push
movl
adc
enter
sbb
sti
jecxz
icebp
mov
adc
es
inc
mov
fidivrs
lods
xchg
push
loopne
insb
repnz
dec
mov
sbb
scas
mov
lock
lock
pushl
jo
and
ss
jbe
lods
push
movsb
mov
dec
fucomip
lret
mov
aas
dec
outsl
loope
jmp
ficoml
xchg
mov
sbb
adc
mov
pop
adc
add
sub
and
fwait
adc
lcall
pop
inc
sbb
loopne
ret
pop
jl
jnp
push
subl
or
cmpsb
xchg
or
cmpsb
nop
fwait
push
mov
jmp
push
jmp
sbb
and
clc
push
sbb
push
mov
add
cmp
test
push
scas
stos
or
mov
push
cmp
into
add
lahf
inc
jg
cld
iret
shrl
incl
int3
adc
cmp
scas
or
pop
push
fucomi
fnstenv
lret
cltd
repz
pusha
out
jge
int3
xchg
xor
add
lea
add
or
jmp
push
fs
stc
shl
stos
insb
push
pop
adc
add
pop
fstpl
xorl
mov
and
xor
movsb
sbb
mov
cmp
jae
dec
decb
in
push
add
push
jae
daa
cld
test
adc
cmp
loopne
sub
xor
cmpsb
pcmpeqw
inc
mov
cli
xchg
pop
inc
jg
leave
cmp
push
cmp
cmp
dec
iret
out
lcall
xor
or
mov
xchg
mov
scas
inc
pop
dec
and
add
jo
or
push
inc
push
outsl
lock
push
mov
cmp
dec
clc
inc
daa
add
in
dec
mov
sub
push
roll
dec
rclb
aaa
aaa
loope
mov
inc
mov
stc
andl
add
cmc
jp
sti
pop
jg
stos
mov
adc
xchg
fidivrs
sahf
jmp
mov
icebp
mov
in
dec
jbe
xor
adc
jecxz
cmp
jmp
jbe
inc
lods
push
xchg
inc
arpl
sub
sub
sahf
notb
into
dec
mov
dec
fcomps
lahf
jge
push
push
fidivrs
mov
adc
dec
lahf
loope
adc
shrb
cmp
sbb
mov
mov
cmp
push
stos
mov
test
das
fcmovnbe
mov
data16
sti
xchg
sbb
sbb
sbb
mov
push
popa
fnop
or
fwait
sbb
dec
push
and
jecxz
jns
sbb
movsl
cmp
subl
lds
mov
in
loopne
dec
or
add
pop
pop
cltd
mov
xor
or
inc
cld
xor
mov
mov
movsb
push
mov
inc
and
lret
jnp
mov
data16
push
pop
fnstenv
add
les
fwait
int3
sub
jge
adc
mov
xor
repz
add
xchg
cmpsb
bnd
ror
and
fdivp
adc
lods
pop
loope
mov
push
mov
jb
scas
cpuid
jb
dec
bswap
xor
fmuls
daa
mov
test
cmp
and
mov
loope
loop
sbb
jnp
sbb
push
xchg
sysenter
scas
dec
cmpsl
jp
dec
shl
sub
fistpl
clc
stc
xchg
xor
mov
jp
xor
repz
mov
pavgw
insb
mov
push
icebp
out
fistpll
jb
out
js
inc
add
cmp
or
pop
sub
out
leave
cld
fimuls
jnp
lahf
jo
ja
cmpb
dec
xchg
data16
pushf
dec
ret
sahf
push
sti
cmp
mov
add
aam
jo
data16
or
pop
pop
aaa
test
push
mov
mov
xor
insl
bound
sbb
xchg
cmc
inc
mov
pushf
sbb
mov
inc
dec
ret
paddb
fildll
into
cmp
pop
std
add
sbb
sub
ljmp
xchg
dec
add
nop
mov
ds
clc
jl
dec
push
adc
push
inc
fidivl
pop
mov
xor
jecxz
fsubrp
or
out
jmp
mov
jne
loope
aad
scas
cmp
add
into
leave
mov
mov
xor
iret
sar
pop
pop
or
into
dec
inc
mov
mov
lock
out
jnp
xchg
sub
sbb
inc
cld
or
xor
adc
fs
lcall
lock
shlb
lock
or
push
clc
sbb
inc
or
sbb
push
inc
test
mov
ljmp
push
adc
js
xor
adc
sbb
int
pop
pop
std
adc
sbbl
aad
repnz
cld
pop
sbb
add
out
xchg
mov
or
mov
pushf
int3
repz
sbb
adc
xchg
and
pop
call
mov
mov
push
rcrb
ss
adc
lret
aad
lea
loop
mov
addps
jecxz
incb
jecxz
or
mov
pop
pushf
mov
outsl
cwtl
ror
dec
popf
outsb
adc
fwait
ret
mov
add
in
sar
push
xchg
dec
dec
dec
jb
fwait
lods
dec
add
rcll
lds
sub
fstpt
mov
mov
or
test
mov
sahf
cmp
mov
aas
mov
push
pop
xchg
pop
push
or
xchg
sub
aam
xor
inc
push
jmp
mov
dec
and
xchg
ja
jmp
mov
pusha
stos
mov
leave
push
sarb
movsl
inc
push
pop
cmpsb
push
rorb
push
jno
mov
cmp
inc
xor
inc
repz
movsl
xchg
xchg
sbb
mov
test
aad
fdivrl
stos
mov
add
aas
adc
je
xchg
imul
mov
mov
imul
push
jl
cmc
andl
loope
push
or
mov
add
sbb
pusha
test
movsb
mov
mov
cmovnp
dec
pop
xor
inc
aaa
pushf
add
sti
loop
imul
push
jnp
sub
jne
cmp
add
xchg
iret
daa
fists
call
loopne
pop
mov
call
and
and
mov
inc
push
xor
lods
pop
dec
push
ret
icebp
dec
sbb
lret
ljmp
ss
mov
movsb
fcoml
repz
icebp
cmpsb
sbb
inc
push
sbb
mov
mov
loop
fwait
js
mov
adc
sbb
test
sbb
inc
xor
js
fistl
test
inc
push
lock
sbb
jmp
pop
inc
divb
jmp
mov
aam
cmp
inc
out
sahf
push
fldcw
mov
jp
mov
cmpsl
push
jb
shlb
fwait
stos
lret
xor
mov
insl
xor
xor
fsubrs
push
xchg
faddl
xor
jp
ss
bound
push
or
inc
xor
movsl
lods
test
dec
pusha
call
aad
insl
stos
dec
ja
dec
loope
scas
jge
imul
add
in
into
sbb
pusha
dec
movq
call
arpl
cmpsb
stos
aas
ljmp
movsb
cmpsl
pcmpgtd
daa
hlt
out
out
fildl
pop
dec
daa
and
dec
loope
les
jnp
lea
pop
xor
mov
pop
lea
int3
lea
add
jno
add
ss
inc
sbb
das
mov
xchg
fucomp
mov
fadd
cmpsb
rcrb
es
lock
nop
add
in
mov
mov
and
shl
xorb
imul
and
pop
lods
push
jo
cli
inc
lahf
jae
mov
scas
sti
mov
inc
ficompl
lock
cltd
lahf
adc
in
jl
mov
inc
inc
lret
shll
jg
and
std
mov
out
xor
mov
pop
xor
addr16
bound
push
xchg
jno
push
cmp
xorb
idivl
inc
fadd
mov
in
mov
stos
add
cmpl
sub
inc
cmpsb
push
sub
inc
pop
fidivs
shlb
inc
xor
nop
das
inc
scas
popf
push
add
inc
push
jge
jmp
jle
in
lods
cmp
clc
ja
add
mov
dec
xor
mov
cmp
mov
mov
push
jge
push
xchg
jge
mov
cs
dec
dec
sbb
aas
test
sub
mov
dec
and
pop
mov
insl
mov
sub
orl
or
mov
mov
sub
out
push
or
pop
shrl
jnp
lods
pop
mov
fcomi
and
jno
negb
mov
repz
sti
push
dec
lods
out
rcrl
pop
pop
cmp
imul
out
loope
leave
adc
sbb
push
or
mov
adc
lahf
in
cmpsl
sub
fmull
inc
lods
fsts
pop
mov
add
mov
sbb
mov
xchg
inc
mov
push
arpl
mov
sbb
pop
push
mov
jns
int3
xlat
xchg
cmp
mov
and
movsl
push
push
push
mov
pushf
sub
sbb
cmp
movl
imul
push
lret
sub
jno
std
cltd
fnstenv
jnp
insl
sahf
xchg
sbb
rcrb
or
int3
test
push
insb
pop
jg
mov
aas
mul
mov
mov
push
aaa
xchg
es
mov
repnz
sbb
pop
or
test
dec
sub
adc
mov
icebp
out
xor
aas
nop
divl
data16
aas
aad
sub
or
add
daa
mov
stc
cltd
push
mull
adc
movsl
jge
hlt
inc
xchg
push
push
and
xor
test
orb
mov
or
cmp
aam
sbb
out
inc
push
mov
pop
sahf
vmovups
repz
pop
outsb
shll
push
sbb
jae
or
pop
xlat
mov
adc
aas
jns
mov
in
ret
and
aad
movsb
push
xlat
aaa
test
cmp
aam
xchg
fnstsw
fisubl
pop
fs
std
sub
ja
cwtl
jne
add
and
sub
mov
ret
aaa
cmovne
lret
cwtl
and
jo
dec
mov
pop
lahf
inc
loope
jmp
xchg
orl
je
add
or
pop
jne
into
clc
lods
test
cmc
sbb
cld
test
cmp
inc
cld
mov
inc
mov
stos
sbb
outsl
sub
pop
das
push
cmpsl
sbb
mov
cmpsl
outsl
sub
mov
jg
jb
adc
cld
sbb
out
sbb
pop
mov
lods
pop
pop
sbb
mov
sub
xor
out
std
addl
sarl
aaa
add
hlt
pop
addl
sub
jbe
shll
sub
outsl
imul
adc
xor
inc
lods
sbb
push
aad
movsb
pop
in
xchg
mov
je
pop
sti
orl
sub
in
notb
mov
test
and
or
out
ja
jo
notl
adc
shll
cmp
xchg
pop
fisubl
sahf
xchg
es
flds
inc
cmpsb
xchg
stc
scas
xchg
pop
mov
test
dec
sub
adc
dec
push
jg
ret
test
mov
das
pop
adc
push
in
add
test
shlb
cmpl
sub
mov
pushf
xchg
and
push
pop
xor
adc
out
mov
movb
xor
mov
push
lret
lods
jmp
hlt
xchg
push
jns
lds
add
mov
inc
out
push
dec
pop
out
cmpsb
jge
cmp
adc
movsl
icebp
popa
fadd
mov
mov
sub
sub
mov
push
dec
pop
push
add
movsb
inc
hlt
bound
in
mov
lds
dec
fwait
add
jmp
mov
test
es
imul
call
and
xchg
xor
inc
cmc
jecxz
push
dec
inc
je
popf
adc
dec
mov
loope
loopne
cmp
sbb
lahf
les
mov
pop
nop
cmp
in
pmaxub
aad
sub
dec
mov
inc
xchg
inc
shl
shl
mov
cmpsl
xchg
xchg
sbb
lret
and
in
mov
xchg
add
pop
adc
loop
fistps
xchg
test
sahf
push
out
dec
cmp
scas
mov
sub
jle
sbb
xchg
inc
jl
jl
xor
xor
nop
pop
pop
inc
lret
pop
lahf
push
jb
lret
js
negl
inc
mov
andb
mov
movsb
movl
and
push
sub
je
stc
shll
adc
cmpsl
mov
xchg
jle
mov
cmp
inc
call
popa
add
xchg
add
out
push
push
xor
call
add
mov
xlat
rcrl
imul
ret
xchg
inc
inc
jmp
rcrb
pop
dec
mov
adc
fisubl
lds
xchg
ds
das
push
outsl
add
push
repz
push
dec
jns
push
sti
xchg
mov
push
sub
movsb
or
rclb
xor
and
fs
rolb
push
shl
lock
adc
mov
mov
arpl
loop
je
cmp
and
xor
loope
lock
inc
negl
jge
test
sub
pop
ffree
scas
jge
jg
in
clc
jnp
cli
xchg
sub
cs
sub
push
fsubrl
aas
mov
lret
push
dec
xchg
arpl
cmp
rcr
adc
and
and
ret
mov
mov
sbb
insb
push
and
stos
inc
xchg
daa
sahf
dec
pop
inc
pop
imul
add
cmp
mov
fcoms
push
xor
pop
mov
jbe
adc
shlb
mov
inc
push
adc
rcrb
inc
hlt
pop
icebp
mov
es
push
jl
push
ds
icebp
cmp
in
out
mov
mov
pop
addr16
popf
call
decl
and
es
pusha
sahf
out
pop
add
aaa
mov
fcomp
pop
sub
and
fstps
sbb
xchg
repz
test
inc
mov
hlt
pop
movsl
push
sub
jmp
dec
call
xor
mov
sahf
test
scas
fwait
and
hlt
mov
mov
outsl
pop
adc
outsl
cmp
cmpps
cmp
or
insb
out
cmpsl
xchg
mov
fisttps
sub
arpl
xchg
rorb
mul
adc
dec
mov
and
loope
ds
and
adc
pop
cmpsb
out
cmpsl
xchg
mov
imul
or
scas
lods
fcoml
out
mov
push
jns
mov
cs
cltd
ret
lock
sarl
into
lea
cmc
pop
mov
divl
add
pop
cmc
mov
js,pn
mov
jl
push
adc
and
and
mov
gs
xchg
sahf
or
fs
inc
jbe
xchg
sbb
xor
nop
ja
cmpsl
movsl
add
shlb
cmp
and
mov
loopne
dec
xchg
nop
aas
cld
sbb
iret
push
xor
push
popf
inc
ljmp
or
mov
sbb
sub
clc
cmpsl
aad
mov
jg
out
pusha
jl
add
stos
into
xchg
xor
mov
mov
add
imul
jmp
movsb
lahf
mov
inc
fs
fwait
aaa
cmp
add
adc
xchg
inc
cwtl
shll
int3
sarl
mov
lret
je
cmpl
inc
mov
cmpsl
imul
out
sti
sti
pop
xchg
xchg
xchg
cwtl
inc
popf
xchg
pop
inc
xor
pushf
bound
fwait
ds
fstl
sbb
hlt
mov
shlb
cli
pop
jno
inc
into
es
xchg
scas
or
push
call
xchg
jb
mov
jle
fdivp
sub
mov
lcall
push
lret
daa
push
shlb
xchg
scas
sti
mov
jle
cmpsb
outsl
sbb
ficoms
out
rcr
jae
mov
mov
dec
decb
int3
and
lret
push
popa
jecxz
mov
push
mov
xchg
cwtl
mov
sbb
lret
jns
fwait
mov
jl
les
mov
mov
out
push
cmc
mov
in
inc
mov
mov
push
lret
test
push
andb
fstpl
add
aas
into
fdivl
popa
adc
adc
mov
imul
cmp
add
fwait
out
lods
push
or
mov
jecxz
test
fcmovu
xchg
inc
adc
mov
sub
jno
lret
and
xchg
jp
mov
imul
and
adc
pushf
ss
in
mov
or
in
dec
xchg
test
call
pop
sbb
push
icebp
leave
and
xor
jo
idivl
fldcw
test
xlat
add
mov
push
pop
lea
mov
or
mov
mov
pop
sub
ret
scas
dec
stc
aam
cmpsl
adcl
test
out
decb
scas
arpl
adc
xor
sahf
pushf
scas
cmp
jae
push
fdivp
andb
sub
sub
dec
adc
mov
dec
pop
jmp
pop
adc
test
arpl
mov
and
dec
nop
lret
jg
shll
addl
outsl
dec
faddl
loop
je
fs
xor
xchg
aaa
testb
pop
jp
sub
ljmp
lock
inc
push
cmp
inc
mov
sarb
ret
and
imul
cmpsl
push
pop
push
fmul
ds
leave
mov
mov
xor
insl
pop
addr16
cmpl
test
ret
cmp
push
mov
mov
addb
repnz
sbb
cmp
jo
xor
aad
xchg
ret
scas
scas
ret
sbb
es
sbb
mov
add
push
adc
pop
push
int3
fcmovb
push
and
xor
jo
es
imul
dec
cmpsb
add
test
unpcklps
xchg
cld
pop
fists
outsl
add
repnz
cltd
popa
cs
sbb
xor
dec
push
push
cmp
cld
shrb
xchg
or
inc
jnp,pn
adc
jge
add
les
inc
sbb
cwtl
aad
ljmp
mov
sub
cmp
fwait
int
push
push
push
or
and
fimuls
add
jne
loope
fidivs
cld
int
js
clc
es
scas
and
int
test
xor
int
or
aam
arpl
pop
jmp
sbb
mov
lret
movsl
mov
out
pop
scas
xor
xchg
adc
jp
out
sti
jecxz
mov
out
xchg
hlt
adc
fdivrs
mov
push
fisttpll
pop
icebp
lcall
daa
add
adc
jnp
shl
testb
cmp
or
lret
jb
aas
mov
sarl
inc
aaa
and
dec
ror
jge
mov
lret
out
lcall
test
loope
mov
das
outsl
in
out
mov
mov
faddl
cltd
push
cmpsl
cmpsl
out
push
lods
ficoms
mov
mov
xor
test
jae
or
adc
mov
pop
push
fs
cltd
push
push
shl
jnp
sbb
shrb
dec
xorl
cmpsl
hlt
dec
sahf
repz
scas
ss
ja
push
dec
bound
xor
lock
cmp
lahf
cmc
push
xchg
in
cmp
arpl
xchg
imul
les
das
popf
xchg
fcoml
pop
addr16
ret
stos
das
jecxz
in
adc
xlat
stc
push
sub
dec
lcall
shrb
nop
out
out
dec
push
sbb
cs
inc
dec
mov
mov
in
xor
outsb
aad
ror
out
mov
jb
jge
hlt
xor
or
test
popa
mov
xchg
mov
std
test
inc
and
push
jno
xchg
cmp
mov
and
jbe
pop
lret
es
repz
xchg
outsb
adc
inc
lea
mov
jle
dec
movsl
std
mov
xorl
loopne
dec
push
mov
lret
and
cmp
dec
and
inc
and
pop
sub
pop
dec
popa
pop
push
pop
std
sub
dec
fldcw
and
push
movsl
mov
imul
js
insb
movsb
push
and
push
mov
fadds
mov
stos
lret
daa
dec
pop
mov
sub
stos
popf
sbb
lea
out
pop
scas
cmc
leave
cmpsb
arpl
push
lods
mov
fcoml
bound
add
mov
push
and
sbb
mov
cwtl
sarl
xchg
dec
pop
push
in
mov
sbb
and
ficoms
push
xor
mov
sbbb
mov
movsl
pushf
fmul
cmpsl
push
pop
mov
clc
xor
loopne
mov
mov
int3
dec
and
pop
jl
mov
outsl
aam
xchg
xchg
jmp
mov
mov
aad
dec
cltd
sub
lods
cmp
mov
push
cli
rol
stos
add
sbb
das
pop
jbe
jg
jo
mov
cmp
cli
in
inc
jl
aad
xor
flds
mov
mov
lret
cmpsl
fmull
lock
mov
xchg
cli
rorb
dec
mov
inc
xlat
fldenv
lcall
rcll
rclb
pop
daa
lgs
nop
pop
cmp
cmp
mov
push
sub
dec
loop
push
push
fs
xor
sbb
negl
push
and
les
mov
gs
dec
jns
lahf
icebp
dec
and
popa
into
cmp
imul
pop
movq
or
or
jmp
add
sub
pop
idivl
push
pop
mov
int
jge
mov
dec
xchg
pop
add
cmpsl
or
sti
adc
sub
pushf
in
lret
sbb
mov
xor
dec
sub
cmp
adc
mulb
fwait
jne
in
and
cmp
in
test
xchg
scas
movsl
aam
fisttpll
lods
pop
test
insb
mov
or
bound
mov
push
and
pushf
test
xor
aad
lods
addb
sbb
cwtl
std
scas
fsubrp
lahf
stos
test
xchg
or
repnz
inc
jns
int3
fnstcw
hlt
push
or
mov
insl
test
rorb
pop
cs
call
jp
sub
pop
rcll
hlt
pop
cmp
je
inc
inc
sub
jns
dec
mov
jge
push
xchg
imul
push
loop
lret
or
rcrl
and
clc
ret
mov
popf
pop
mov
cmpsl
sub
xor
aam
out
mov
pop
imul
and
cmc
clc
jno
pushf
je
es
mov
sbb
lods
xchg
sbb
mov
jge
fildll
xor
xor
nop
and
or
cmpsl
or
mov
jno
call
mov
cltd
jbe
jns
gs
iret
push
push
nop
rcrb
scas
xlat
add
jg
ljmp
jmp
cs
dec
xchg
aam
pop
jge
push
fldl
inc
decl
xor
bound
jl
jns
sbb
pusha
xor
loop
movsb
mov
stos
bound
mov
subb
icebp
iret
add
adc
subb
outsb
and
gs
inc
ffreep
push
xchg
lcall
aam
push
movsl
add
pop
dec
out
js
gs
cmp
outsb
loope
cvtdq2ps
out
inc
push
pusha
jb
movsl
dec
jns
cld
or
std
xchg
imul
or
stc
mov
mov
sti
sub
sub
inc
push
pop
xchg
lds
mov
mov
or
xor
or
xchg
rolb
int3
fbstp
xor
out
adc
inc
cmp
pop
stos
movsl
fisttps
fistpl
or
mov
inc
mov
mov
push
sbb
addl
loope
mov
lods
jmp
xchg
mov
mov
dec
mov
xor
into
movsl
scas
and
lods
xor
add
dec
jg
frstor
jge
lret
add
js
lret
add
jmp
mov
call
sbbl
mov
add
lahf
push
roll
repz
push
in
dec
sub
jns
dec
lcall
pusha
cmpsb
push
add
leave
xor
push
xchg
xchg
arpl
data16
daa
push
mov
xor
add
push
mov
cmp
jmp
push
mov
in
hlt
in
fldl
cmp
repz
das
cmp
cwtl
lret
xchg
mov
push
aas
loopne
and
inc
notl
jne
and
lea
mov
or
test
mov
push
in
add
mov
fdivr
cwtl
mov
loope
jecxz
xor
aam
and
xchg
mov
or
sbb
jmp
lods
jo
mov
mov
popa
popa
int3
push
and
dec
jae
out
jle
data16
cmp
pop
inc
sub
divb
push
ja
jo
inc
jns
pusha
inc
xor
test
in
lahf
dec
mov
in
lods
pushf
cltd
int
out
xor
jbe
sahf
lahf
push
push
adc
sub
mov
lahf
add
mov
and
cltd
pop
inc
cmpsl
xlat
ret
xor
jmp
pusha
sbbb
out
mov
adc
adc
outsl
lock
pop
clc
xchg
pop
jns
in
jno
or
jl
pushf
mov
inc
pusha
sbb
fistl
dec
aam
jmp
clc
push
pusha
test
sub
xor
aaa
fstl
loopne
jns
mov
orl
push
cmp
cmp
int3
les
mov
sub
push
lcall
xor
stos
pop
enter
push
cmpl
xchg
negl
push
pop
mov
jecxz
inc
subb
lret
add
add
loope
nop
fistpll
xor
pop
stos
push
stos
aas
ss
mov
cmp
jecxz
movsb
jmp
insb
aam
sarb
mov
movb
scas
adc
sbbl
imul
xchg
je
xor
cmpsb
mov
in
cld
lods
cmp
or
popfw
adc
std
lret
and
std
lock
adcl
test
nop
pop
pop
mov
fimuls
lahf
cmc
pop
xorl
dec
das
jg
je
pop
pusha
cld
addr16
sarb
stos
adc
cmpsl
or
pop
stos
mov
dec
push
cld
in
fwait
mov
and
ljmp
xor
add
mov
jbe
sub
leave
xor
out
shlb
mov
mov
iret
lods
jnp
sub
ret
sti
aas
or
xchg
popa
dec
dec
test
jnp
push
into
dec
cmpb
sahf
adc
js
inc
jae
in
xor
push
mov
pop
daa
cmpsl
pop
dec
and
sarb
xchg
pop
stos
in
xchg
das
sub
jecxz
push
fwait
lret
in
call
adc
push
rcll
out
add
subb
pop
mov
or
imul
fnstenv
push
scas
fldl
pop
enter
xchg
jmp
into
inc
inc
addb
sbb
jno
pop
jle
and
xchg
sub
pop
loopne
data16
loopne
xor
hlt
mov
in
inc
mov
cld
into
inc
int
out
cmp
cmp
adc
jno,pn
mov
or
jb
and
js
jle
pop
aas
and
or
cmp
jecxz
cmp
es
pop
scas
push
mov
or
ret
add
test
mov
sub
icebp
lea
shrb
test
sar
decl
test
pop
sbb
mov
mov
xor
pop
daa
sub
int3
aaa
cmc
jns
mov
mov
inc
pop
js
cmp
nop
mov
or
sahf
jge
fwait
jg
imul
popa
push
fistps
sbb
push
shll
mov
test
popf
ja
fwait
dec
int3
push
sarb
mov
in
ja
dec
outsl
or
xchg
mov
sbb
jne
sbb
dec
test
mov
jne
test
push
mov
lods
sbb
arpl
push
mov
mov
inc
dec
mov
pop
aad
shlb
cmp
pop
andl
adc
jno
roll
dec
leave
sbb
std
loope
daa
ret
fidivrs
cs
jecxz
cmp
mov
mov
dec
aam
or
hlt
pop
sbb
dec
sub
add
mov
insb
cmp
fisubrs
call
adc
and
test
fimuls
aad
push
jb
mov
jmp
dec
leave
jns
jle
es
inc
movsb
sahf
cmp
lods
popw
sbb
lsl
jns
sub
xor
sub
pop
fildll
fsubp
and
sub
mov
movsb
loop
lahf
adc
imul
xlat
jle
je
jg
jnp
outsl
pusha
xchg
sub
xchg
xlat
pop
push
jle
stos
sub
popa
repnz
ror
cmpl
lret
scas
mov
pop
lods
pop
call
add
ja
inc
ret
inc
popf
enter
in
push
testl
lcall
mov
aaa
outsb
mov
pop
sbb
lock
lea
mov
fidivrl
sbb
xchg
scas
pop
dec
popa
sub
add
rcll
push
out
popl
test
pusha
out
adc
filds
xor
mov
fnstenv
sub
bound
faddl
insl
sbb
xor
lock
aas
call
fcomi
push
mov
push
dec
push
out
xor
add
fisubrl
adc
in
insl
pusha
jbe
js
movsb
add
stos
lret
fdivrp
pusha
lret
sub
lahf
or
mov
inc
and
xchg
push
jnp
lret
push
jmp
arpl
cmp
outsl
jmp
mov
dec
bound
pop
insl
mov
out
dec
mov
push
and
mov
push
test
sbb
mov
sbb
sub
add
outsl
test
fwait
movsl
xor
pop
pop
sbb
add
sbb
es
jmp
fdivl
jge
rorl
fildll
mov
addr16
into
mov
inc
sub
xor
push
inc
lret
add
imul
pop
js
jo
sbb
movsb
mov
iret
mov
sbb
outsb
cmp
dec
inc
rcrl
and
xchg
cmp
roll
sbb
or
sub
mov
adc
gs
jmp
or
add
shl
pop
mov
ret
dec
inc
and
outsl
or
es
out
xor
and
jg
jns
mov
into
push
sub
inc
rclb
or
and
ss
mov
loope
and
fdivrp
sahf
incb
pop
cmp
adc
add
lahf
mov
popf
mov
mov
jno
push
sub
pop
xor
ss
and
fs
movsl
xchg
push
adc
push
or
adc
outsl
cli
out
ds
lock
loopne
and
xchg
je
mov
push
out
cmpsl
or
mov
dec
cmpsl
sbb
inc
add
cmp
fs
or
iret
sar
pop
jp
jbe
pusha
jnp
daa
sub
sbb
mov
sub
in
mov
mov
popa
sub
pop
aas
xor
inc
xlat
or
es
lret
jmp
fsubrl
loopne
mov
mov
dec
xchg
popa
out
mov
daa
adc
mov
imul
and
mov
fsubs
adc
in
mov
scas
or
inc
movsl
mov
fcompl
xor
pop
mov
mov
inc
sub
jg
scas
sbb
imul
cwtl
and
repnz
loope
xor
xchg
dec
inc
adcl
jb
pop
lock
scas
jge
or
int3
adc
mov
push
xchg
fdiv
add
test
sub
add
and
mov
into
stos
pusha
sbb
jo
fnstcw
shll
jo
nop
or
add
and
jecxz
jmp
pop
mov
data16
xchg
outsb
cli
jge
call
push
mov
jb
xchg
fildl
mov
or
or
sub
sbb
dec
mov
dec
mov
jmp
and
stos
mov
cld
inc
mov
rcrl
add
inc
pusha
aad
jae
xchg
jb
dec
into
gs
repz
insb
jge
mov
aam
jae
xlat
data16
sbb
lds
mov
mov
lahf
pop
mov
idiv
scas
into
xchg
ss
inc
les
adcb
xchg
jecxz
dec
mov
or
xchg
test
dec
test
fdivl
shr
loopne
notb
scas
or
sbb
fs
js
cmovne
mov
cmp
mov
cmp
ljmp
lret
rcl
sbb
pop
push
fs
pusha
fcmovbe
cmc
push
pop
jl
insb
add
outsb
jl
mov
scas
dec
mov
movsl
iret
sub
xchg
jb
jo
mov
sub
dec
sub
movsl
es
cmp
pop
xchg
jne
xchg
dec
inc
scas
mov
imul
cmp
imul
pop
cmc
scas
jge
leave
push
pusha
xchg
aaa
dec
jo
push
fdivl
fsubr
cmp
lret
into
movaps
jo
cmpsl
ret
shl
add
frstor
test
loopne
pop
jle
repnz
mov
inc
loopne
bound
inc
cltd
sub
mov
outsb
dec
ss
mov
adc
lcall
in
mov
enter
xor
rclb
xchg
cld
adc
adc
jno
loopne
xor
adc
adc
lods
outsb
pop
or
aad
aam
pushf
dec
xor
pop
mov
pop
js
inc
xor
les
add
imul
out
test
push
pop
lods
or
inc
jmp
pop
mov
adc
xchg
xchg
in
xchg
dec
pop
shll
int
mov
dec
cmp
xchg
cld
imul
xor
xchg
enter
test
xchg
stos
pop
dec
es
lds
pop
int3
and
shr
sbb
nop
ljmp
jo
mov
clc
add
and
movsb
pop
cmpsb
in
mov
and
das
jnp
pop
jle
mov
and
cwtl
out
sti
mov
in
aaa
mov
mov
pop
data16
movsl
sub
ss
scas
jecxz
cld
xor
dec
cld
hlt
outsl
test
push
mov
push
push
push
rcrb
jnp
ds
inc
test
fidivs
jg
xor
cmp
pop
adc
pop
gs
subl
xorb
adc
outsl
jns
mov
loop
clc
movsl
mov
dec
sbb
iret
addb
pop
sbbb
ret
into
mov
popf
mov
inc
repnz
lds
out
fwait
mov
negb
mov
xchg
scas
or
push
int
jne
psubusw
push
cmp
push
aaa
or
and
jae
cwtl
xor
divl
lods
adc
lret
xchg
cwtl
roll
stc
mov
negl
mov
ljmp
sahf
jnp
pop
dec
or
outsl
xor
popa
xchg
jnp
sahf
addr16
cmp
adc
into
sub
push
jecxz
hlt
cmp
fucomp
pop
pop
jb
or
push
scas
xor
sub
fsts
cmc
arpl
xchg
mov
xchg
lods
add
lods
jns
adc
and
jg
cs
push
xchg
dec
roll
mov
jp
mov
loop
mov
xchg
jno
jp
jecxz
inc
gs
mov
sbb
jnp
adcl
push
cmp
fstpt
or
xlat
mov
jno
xchg
fstpt
scas
fisubrl
xchg
xchg
mov
pop
dec
cmp
movsb
fs
sbbl
loope
pop
and
cltd
and
clc
add
aaa
inc
lea
mov
add
outsb
shrl
cli
xchg
dec
jmp
fdivr
xor
mov
rcrl
popa
fucomp
inc
or
cmc
arpl
inc
xor
iret
mov
pop
dec
pop
cld
ret
mov
sarb
add
shlb
mov
push
push
xchg
div
jb
mov
arpl
hlt
stc
adc
cmp
jnp
int
push
neg
dec
xor
ds
stc
mov
mov
dec
movsb
hlt
cli
sbb
mov
aam
sub
pop
sub
dec
lods
fsubrl
enter
mov
xor
loop
or
mov
jns
fnstcw
out
mov
push
imul
data16
cld
idivb
lret
inc
jo
sbb
mov
adc
int
hlt
xor
pushf
scas
sub
gs
mov
movzbl
add
mov
mov
loop
cmpsb
mov
mov
or
push
out
cld
addb
mov
xor
arpl
mov
lcall
stc
enter
out
clc
pop
imul
and
stos
into
or
leave
addl
popf
jns
addr16
sub
push
or
mov
mov
pusha
fdivrl
jecxz
imul
jmp
idivl
push
lds
xchg
ds
push
cmpsb
push
sub
add
cs
mov
fwait
cmp
insb
fs
fadd
push
or
pop
inc
fmull
loop
jge
das
push
mov
repz
cmp
in
pop
jae
cmc
jmp
ret
mov
cs
outsl
xchg
outsb
ja
iret
jbe
inc
xchg
inc
inc
push
or
rolb
imul
lret
sbb
subl
pop
add
aad
fidivrs
sbb
and
and
pop
and
ds
sbb
or
sti
push
mov
xchg
daa
or
scas
cld
fiaddl
or
jne
call
xor
test
clc
push
into
dec
and
lahf
adc
mov
push
add
sbb
out
addb
jg
add
xor
xchg
inc
je
fsubrl
sbb
in
inc
out
sbb
incl
or
sbb
jb
pop
add
aaa
movsb
sbb
inc
add
aaa
adc
mov
repz
imul
mov
mov
in
gs
jmp
icebp
shll
lahf
xchg
pop
scas
pop
movsl
je
and
lret
orb
xchg
outsb
lods
mov
out
xchg
out
std
push
lods
cmp
fldz
add
into
jmp
lea
sbb
add
cli
cmpl
mov
adc
outsl
jge
pop
mov
cmp
adc
xchg
fldenv
jg
xor
lods
push
nop
out
mov
add
repz
pushf
pop
call
push
pop
sar
xorl
or
mov
pop
sbb
nop
adc
and
std
adc
lcall
push
xor
xchg
xchg
inc
mov
and
fcoml
jo
js
les
cld
cltd
pop
push
push
mov
or
lahf
cs
lods
sarl
push
pusha
daa
cmp
push
mov
in
lahf
inc
jns
jbe
adc
pop
pop
inc
shll
pop
push
aam
andl
shlb
inc
subb
pop
jp
rorl
aas
mov
jne
mov
adc
dec
test
cmp
bnd
inc
xor
rcll
dec
push
in
adc
cmp
jl
mov
clc
cmpl
and
loop
xor
dec
mov
xor
scas
das
movsb
xor
dec
shrb
sub
ret
fsubr
adc
mov
shl
dec
push
call
or
into
fisttpll
outsl
lret
out
jge
dec
repnz
sbb
xor
adc
loope
arpl
aaa
cli
push
iret
shll
popa
cmp
inc
iret
sbb
adc
or
hlt
mov
mov
mov
idivl
ljmp
mov
in
nop
mov
repnz
movsl
loopne
push
sarb
push
xlat
cwtl
stc
insl
aam
xchg
adc
or
stos
xor
pusha
cmp
and
sbb
les
add
jns
sbb
mov
push
mov
lea
popf
and
popf
sbb
mov
jmp
push
sbb
mov
and
mov
hlt
pop
pop
or
mov
enter
icebp
ljmp
pop
push
enter
ficomps
cmp
add
and
stos
repz
and
mov
pop
int
sbb
inc
inc
jmp
lds
rcll
hlt
xor
inc
or
jns
daa
imul
push
aas
dec
test
test
scas
xchg
push
repz
pushf
call
mov
cmp
pop
jns
sbb
xchg
lea
adc
test
cmp
hlt
pop
cltd
push
dec
fimuls
aad
cmp
mov
stos
into
int
nop
push
scas
jg
cli
xor
outsl
pushf
subps
ds
xor
adcb
icebp
ficoml
enter
out
sbb
aas
pop
push
inc
icebp
inc
pop
dec
adc
adc
jl
fisttpll
add
shrl
jp
xchg
cmpsl
sub
movb
xor
mov
hlt
ljmp
cmp
sub
arpl
in
jno
push
jp
mov
push
sbb
filds
push
scas
or
mov
loope
lods
fstps
sbb
out
das
and
push
je
pop
repnz
mov
mov
jbe
cld
sub
pop
and
pop
mov
inc
dec
imull
or
pop
cmp
cmp
pop
jne
cmpsb
or
sbb
ret
cmpsb
enter
jmp
mull
or
adc
lcall
mov
sbb
call
call
out
outsb
push
adc
pop
movsl
mov
pop
fldcw
sbb
pop
js
sub
enter
push
pop
cwtl
inc
xor
shl
sbb
in
cli
jae
xchg
add
push
push
outsb
inc
add
dec
push
jae
clc
push
xchg
mov
push
push
in
das
out
imulb
xchg
mov
cwtl
neg
lret
jmp
mov
cmp
loopne
mov
mov
push
mov
arpl
aas
call
push
sub
dec
jl
push
mov
lods
xor
and
dec
add
imul
shrl
jp
inc
sub
xchg
enter
outsl
mov
int
popf
outsb
jle
push
pop
or
mov
out
shll
sbb
adc
dec
scas
lods
bound
gs
or
or
rorl
daa
cltd
int3
insb
sbb
jg
les
repz
and
cld
addr16
pop
and
and
xchg
test
aaa
xor
sub
imul
cmp
shll
fisttpll
jg
rol
mov
mov
xchg
cmpsl
cmp
cwtl
fbstp
aaa
std
mov
add
fsubrl
mov
cmc
jae
movsl
mov
xchg
pop
jne
sbb
pop
xor
dec
out
jle
sti
cmp
pop
pop
cmc
dec
cwtl
ss
loope
daa
ret
dec
xchg
fsubrs
movsl
push
scas
jp
sub
fidivrl
adc
lahf
xor
pop
das
call
mov
std
cld
cmp
mov
adc
mov
and
gs
add
imul
je
jbe,pn
stos
sbb
test
inc
jno
pop
add
jg
and
adc
inc
imul
xchg
pop
push
mov
inc
jne
test
dec
rorb
popa
xlat
jecxz
loope
imul
mov
jp
push
inc
dec
lcall
rcll
in
pushf
jo
leave
in
stos
jnp
bswap
xor
dec
ds
jnp
add
stc
out
dec
jbe
inc
push
loope
xchg
push
pushf
cmp
and
cmp
outsl
imul
scas
jb
pop
add
jmp
ss
push
aas
push
dec
fs
mov
roll
push
xchg
fcomps
mov
test
clc
popf
jae
cmp
xor
dec
mov
push
mov
in
or
test
mov
popa
mov
gs
mov
xchg
adc
cmp
inc
or
sbb
popa
jecxz
sarl
cld
jns
daa
and
int
mov
mov
aaa
insl
dec
loope
jae
xchg
test
dec
cmpsl
into
shlb
fprem1
fsubrs
jns
xchg
das
stos
fwait
push
mov
inc
xor
neg
pop
test
add
popa
pop
jae
popa
pop
daa
fbstp
push
out
push
xor
sbb
movsb
test
out
xchg
pop
jp
sub
mov
cmp
xchg
dec
arpl
or
fdivrs
scas
bound
mov
loope
addr16
je
add
movsl
mov
mov
push
or
mov
dec
aam
enter
inc
popf
cmp
mov
mov
ss
cltd
cmp
pop
test
aaa
cmpsl
jge
ss
lock
xchg
loop
push
mov
pop
mov
out
add
or
jp
loop
xchg
lods
jp
es
in
jne
mov
mov
ret
xlat
fs
adc
inc
and
int
push
fwait
les
mov
sub
sahf
push
adc
lahf
dec
mov
pop
mov
stos
xchg
mov
and
lds
dec
fisubl
cmpl
cmp
fisttpl
fucomip
dec
sbb
adc
cwtl
xor
pop
inc
xchg
decl
pop
outsb
cmp
jns
push
pop
mov
ljmp
xor
outsb
ret
dec
lret
hlt
mov
pop
in
mov
pop
mov
bound
sbb
adc
push
jno
sub
setb
cmpxchg
pop
xchg
outsb
call
adc
imul
imul
out
lock
movsb
aad
shll
jbe
mov
mov
push
push
lcall
jecxz
jmp
clc
subb
lret
gs
lcall
jne
sbb
test
fld
test
das
pop
push
shrl
pop
stos
sub
fstpt
pop
sbb
ja
cmp
jns
inc
popa
cmc
in
add
mov
stos
cmp
and
xor
inc
test
xchg
mov
fnclex
aaa
fcoml
push
ret
xchg
xchg
enter
lahf
jmp
fildl
jb
clc
movl
sub
mov
sahf
or
mov
sub
fistps
scas
push
aas
or
jnp
hlt
sub
fyl2x
dec
adc
jns
out
fdivrs
mov
pop
add
sbb
mov
shll
mov
dec
push
mov
xor
into
rcrl
sub
push
push
je
xor
pop
cmp
andl
shll
jmpw
sbb
lcall
cmp
mov
cltd
adc
sarb
push
popa
es
xor
cmp
pop
xor
lods
and
dec
popf
dec
pop
cmp
mov
cmc
xor
std
add
into
out
pop
dec
int
loop
cmpl
jb
xchg
mov
aas
mov
daa
mov
pop
adc
ss
pop
mov
pop
push
jp
sbb
mov
int
pop
push
push
and
sub
sub
dec
mov
xchg
cmp
mov
lret
sbb
lret
add
adc
ds
sbb
cwtl
jle
or
sarb
mov
pop
les
fbstp
loope
inc
test
dec
jg
mov
push
mov
mov
sub
adc
js
inc
test
jle
rcrb
test
push
jno
sarl
pop
sbb
inc
adc
xor
or
lods
add
pop
mov
mov
popf
mov
jle
mov
lret
in
and
cmp
push
mov
out
rorl
fidivrs
xchg
int
mov
pop
pop
scas
jno
mov
pop
push
fs
xor
test
fmul
adc
cmp
dec
adc
and
jbe
or
std
xchg
lret
cmp
pop
sti
imul
xor
lds
adc
push
lods
int
and
cmp
lods
sub
xchg
and
js
push
enter
cli
int
fwait
xor
push
sub
push
xor
cmp
scas
test
adc
push
repz
or
into
mov
jge
pop
int
fdivrs
mov
jle
ja
jae
int
inc
imul
cmp
stc
addr16
clc
mov
jge
push
mov
sub
clc
mov
addr16
mov
or
cmp
pop
lods
fs
push
imul
icebp
inc
sbbl
pop
inc
jmp
mov
jbe
xlat
mov
mov
jmp
adc
dec
not
idivl
push
jne
jg
incb
inc
jge
data16
ds
fcmovnu
push
inc
dec
aad
sbb
mov
jbe
mov
xlat
sbb
insb
push
and
xor
ret
insl
xor
sub
mov
sub
dec
mov
add
fs
jno
inc
data16
insb
cmp
mov
jecxz
xchg
scas
stos
imul
mov
testb
dec
pop
cwtl
decl
insl
push
fisubrl
nop
sbb
dec
or
rolb
lock
pop
mov
mov
and
cli
adc
icebp
gs
clc
dec
sbb
out
xchg
adc
mov
pop
cld
push
inc
clc
inc
mov
les
push
subb
mov
pop
xor
imulb
inc
in
inc
hlt
inc
pop
hlt
add
in
and
pop
cmpsb
js
lret
ret
cmc
inc
in
adc
sbb
add
xchg
adcb
nop
daa
hlt
mov
jno
mov
sbb
inc
and
xor
cmpsb
add
popf
xrelease
cli
and
test
adc
enter
out
mov
aam
push
adc
and
jg
and
pusha
je
mov
dec
pop
push
jmp
repz
pusha
push
pop
push
mov
fidivs
sbb
pushf
repz
xor
stos
sbb
fld
popa
dec
sbb
push
leave
xchg
inc
aam
adc
jae
xor
clc
sub
inc
add
or
jbe
mov
add
sbb
mov
push
sbb
paddsw
fsubrs
lahf
sbb
xlat
loopne
xchg
fidivl
fnstsw
idivl
jmp
mov
mov
arpl
adc
pop
ss
and
jb
call
test
fwait
adc
das
jbe
and
cmpsb
mov
test
mov
out
mov
test
mov
jp
fldt
jae
mov
add
mov
cltd
dec
imul
jns
sub
cmp
bnd
loopne
rolb
fistps
sahf
xchg
inc
xlat
jp
hlt
sub
dec
xor
movsb
stc
insb
gs
loope
mov
cmp
jp
out
push
fwait
pusha
test
ret
jle
pop
cld
mov
lods
es
or
jecxz
jecxz
nop
dec
rorb
mov
dec
orl
ds
mov
fcoms
int
push
adc
cmp
or
ret
hlt
dec
rorl
push
test
addr16
pop
adc
fwait
jns
ljmp
sbb
ret
sti
and
mov
rorb
mov
jecxz
mov
movsl
sbb
fnstenv
adc
out
xchg
addb
xlat
push
pusha
xor
xchg
sub
cli
shlb
bound
push
lods
xchg
movl
jl
cs
and
push
mov
mov
jmp
inc
lea
pop
or
insb
pop
sahf
xor
outsl
out
lds
cltd
pop
idivl
cmp
mov
stos
addb
xchg
inc
js
loop
out
adc
cmp
mov
test
insl
outsb
mov
loope
jo
mov
fbstp
loope
adc
loopne
int3
push
jmp
aas
hlt
mov
jne
out
fstpl
jbe
adc
jns
pop
mov
fldcw
lahf
jnp
jle
jmp
cld
jnp
int3
subb
shl
repz
add
inc
stos
pop
outsb
clc
adc
push
arpl
push
jg
push
fisttpll
push
sbb
outsl
es
inc
cmpl
fistl
cmp
out
daa
pop
adc
pop
cwtl
dec
scas
fmul
stos
mov
adc
push
push
pop
out
push
dec
mov
repnz
lret
mov
pop
inc
dec
sahf
pop
arpl
sub
fidivrs
adc
mov
pop
mov
incl
je
push
sub
sub
adcb
dec
xchg
mov
cmpsl
leave
test
push
mov
inc
mov
or
dec
out
cmpsl
lcall
cmp
aas
sub
jo
dec
push
mov
xor
mov
test
mov
popa
adc
inc
outsb
sahf
jmp
mov
adc
mov
aaa
jl
in
fsubrs
testl
cmp
and
sahf
int
vpmaxub
in
mov
repnz
xchg
out
testl
in
cs
sahf
in
movsb
sbbl
lcall
mov
push
cltd
cmp
test
gs
sahf
xchg
mov
shll
sbb
xchg
insb
mov
pop
push
pop
jge
cmp
and
cmp
stos
out
xchg
mov
in
fisubl
data16
insb
frstor
test
mov
mov
push
mov
ljmp
sbb
loope
sub
sub
testb
sti
cmpsb
popa
nop
int3
into
into
repz
xor
push
in
or
pop
push
add
push
mov
jbe
js
xchg
mul
adc
xor
das
xor
idivb
popf
push
adc
dec
int
fwait
outsb
stos
stc
gs
fsts
imul
push
push
adc
rol
test
jecxz
sti
push
sub
or
sbb
pop
jbe
pop
pop
xor
xchg
loope
aas
pop
ljmp
sbb
inc
push
xorl
push
fucomi
fldl
jp
lods
out
bound
enter
sahf
xchg
ja
aas
mov
loop
mov
pop
inc
adc
adc
lret
cmp
shr
aad
test
mov
fcomps
mov
enter
mov
arpl
loopne
nop
scas
sbb
fistpl
pop
jns
push
sub
dec
inc
push
pop
stos
notl
in
push
cmp
aaa
mov
mov
out
imul
jnp
sbb
mov
jb
arpl
add
ss
iret
lds
push
push
shlb
cmp
xor
jecxz
pop
inc
pop
scas
arpl
inc
ret
xchg
repnz
fisubrl
xchg
sahf
inc
mov
mov
movsb
mov
pop
pop
insl
mov
mov
mov
aas
les
push
arpl
leave
ret
pop
inc
pushf
mov
repz
push
sub
int
ret
lahf
or
push
fmull
pop
hlt
xchg
hlt
add
shll
cmp
mov
pop
lret
lods
push
push
xchg
inc
imul
pusha
xor
js
inc
mov
fxam
xor
dec
sbb
rcrl
and
repz
sbb
test
push
fs
push
ja
shlb
or
jg
sbb
push
ficoml
idivb
pop
roll
xchg
push
cltd
repnz
mov
fdivrl
mov
push
in
pushf
stc
iret
aas
sti
ret
cmp
xchg
mov
mov
lret
adc
fiaddl
xchg
aaa
or
sarb
inc
ficompl
inc
pop
xor
mov
gs
xchg
adc
mov
ds
push
into
mov
bts
fnstcw
sti
js
lods
xchg
ja
adc
loope
fs
push
push
push
mov
inc
ffreep
in
mov
adc
mov
sub
mov
dec
jecxz
pop
mov
mov
mov
push
out
clc
mov
dec
cmp
lods
and
xor
jmp
test
outsb
out
fwait
shlb
mov
sarb
mov
int
inc
addr16
imul
iret
add
scas
mov
mov
mov
mov
xchg
imull
push
call
int
xchg
stc
add
out
fwait
cmpsl
pop
adc
loopne
rorb
mov
aaa
jle
mov
pop
jae
jo
rcl
push
dec
add
and
bound
cwtl
or
mov
iret
fdivr
sbb
add
xor
mov
xchg
adc
cmp
out
int
dec
inc
add
sub
ret
sub
adc
or
inc
xchg
xor
aad
adc
xchg
push
aad
push
jnp
sbb
adc
mov
arpl
aad
adc
pop
sbb
push
out
stos
stc
icebp
cmp
stc
addb
mov
ret
mov
mov
xor
das
out
jmp
mov
lahf
fstpt
push
movb
xor
shll
pushf
jl
mov
jno
dec
rcr
cmp
dec
add
adc
pop
ljmp
lcall
push
out
mov
shlb
dec
dec
mov
aad
adc
or
cltd
in
out
mov
adc
adc
int
pushf
addb
pop
dec
jge
andb
rolb
mov
enter
push
popa
jae
push
imul
mov
pop
shrb
pop
mov
adc
mov
shll
adc
test
out
lret
pop
xchg
sbb
ret
ss
xor
pop
sub
ss
and
mov
icebp
shrb
sbb
aaa
sub
jbe
or
jno
add
fimull
push
jno
mov
mov
jecxz
adc
mov
mov
mov
jle
mov
int3
fwait
adc
jb
xor
lret
and
sbb
adcb
sub
pop
adc
inc
popf
out
add
jns
dec
jecxz
mov
jl
xchg
pop
fistps
lods
and
jo
sarl
or
xor
rol
dec
jno
xchg
and
test
jae
xchg
pop
mov
pop
nop
xchg
aas
sahf
dec
sub
cmp
pusha
or
lcall
int3
push
and
pop
sbb
hlt
adc
test
arpl
sub
ss
sub
addr16
xor
cld
mov
adc
ficomps
movsb
and
mov
pop
icebp
push
cmc
inc
mov
xchg
stc
movsb
push
mov
lret
sub
je
pusha
jno
scas
adc
xchg
dec
out
xchg
adc
inc
movsb
mov
orb
fnstcw
pop
adc
outsl
xor
xchg
jmp
or
xchg
adcl
push
mov
adc
out
sub
mov
mov
repnz
cld
dec
push
push
add
dec
adc
scas
test
outsb
fcompl
insb
cs
dec
dec
push
jmp
jge
mov
int3
sti
aam
xor
data16
inc
add
sbb
or
push
fistps
pop
sub
into
les
mov
pop
pop
cmpl
cli
ret
ljmp
sti
fimull
jb
jae
push
inc
rcll
rcrl
mov
js
and
inc
push
jecxz
jmp
cmp
jp
das
scas
sub
aam
in
gs
xor
sbb
pop
pop
mov
lea
add
popa
inc
pop
jmp
dec
add
outsb
mov
leave
jp
incb
dec
pop
dec
lods
or
add
cld
xchg
push
inc
jle
repz
addb
lret
lea
and
mov
adc
pop
mov
arpl
pop
in
xchg
les
add
pop
pop
cmp
lahf
daa
add
xlat
leave
in
and
or
nop
xor
jp
or
mul
sti
iret
out
pop
mov
pop
cmp
and
add
cmp
mov
and
aad
push
jmp
cmp
outsb
out
mov
adc
jae
push
xor
stc
add
fadds
dec
fistl
adc
pop
idivl
shrb
mov
arpl
sbb
shll
das
dec
add
call
stos
fadd
push
pop
pop
cmpsl
push
xor
sbb
mov
pop
out
loope
in
inc
fisubrl
sahf
shlb
mov
rorb
sub
push
arpl
out
shrb
sbb
mov
mov
pop
add
addr16
jnp
pop
or
inc
psrlw
inc
out
dec
shlb
je
outsl
scas
push
jmp
push
dec
loop
ret
jmp
or
add
sbb
xchg
add
sbb
mov
mov
mov
scas
pop
aaa
inc
or
or
lahf
push
sbb
mov
push
xchg
push
or
mov
mov
push
jg
sub
pop
sahf
in
mov
in
je
sub
push
outsb
shlb
int3
fistpll
aam
dec
and
outsb
mov
sub
fwait
inc
inc
and
mov
pop
jbe
mov
pop
inc
int
mov
or
shrl
dec
dec
push
mov
in
insl
arpl
sub
xor
aam
lcall
adc
jle
in
push
ljmp
mov
and
or
dec
push
cmp
daa
std
test
push
imull
push
sub
daa
inc
mov
fstpt
jecxz
ja
adc
jg
out
imul
ffree
cmp
jecxz
sub
shlb
in
das
pop
xchg
vmread
pop
dec
mov
loop
test
arpl
in
and
inc
jo
or
cs
pop
push
inc
in
rcrl
add
add
rcrb
aaa
cmc
push
rorb
jne
pop
jmp
leave
in
shrb
pop
subb
pop
push
jle
arpl
cmpsl
mov
xor
sbb
fwait
xchg
inc
and
lods
sub
scas
sarb
jmp
call
aam
cmp
xor
jge
push
scas
js
les
repnz
popa
jge
push
icebp
jg
and
pop
fdiv
mov
jp
scas
xor
jle
sbb
lods
loop
inc
ficoml
ss
dec
mov
dec
mov
jmp
mov
jp
out
mov
icebp
pusha
push
pusha
fistps
test
and
sub
hlt
jl
xchg
dec
mov
add
mov
mov
pop
inc
cli
cmp
xor
nop
data16
push
jmp
xor
adc
gs
hlt
lahf
pop
mov
jnp
sub
push
sub
cmp
insl
sbb
xchg
push
and
pop
aas
mov
mov
mov
movswl
das
mov
adc
mov
gs
xchg
hlt
insl
add
inc
sbb
aas
dec
push
lret
lahf
aad
outsb
mov
xor
mov
popl
push
mov
fcmovb
and
mov
data16
xor
sub
ljmp
je
push
adc
jg
xchg
cmp
ds
aad
pop
stc
add
cmp
mov
arpl
mov
imul
dec
insl
xchg
xor
cs
xchg
xor
or
and
insl
stc
fmuls
xor
mov
sub
sbb
or
ja
xorb
add
push
insl
incl
loopne
or
push
test
int
mov
push
xchg
pop
pop
rorb
orl
sub
pop
cmp
ret
cmp
inc
mov
dec
ss
xor
sbb
int3
int3
jmp
add
insb
test
sub
outsb
sahf
xor
fmuls
arpl
jmp
stos
stc
sbb
fistpll
aaa
in
fstl
out
ljmp
fwait
or
nop
out
subl
outsb
ret
add
adc
fdivs
leave
scas
setge
fnstenv
rclb
out
mov
movsl
or
push
xchg
jmp
jl
imul
sub
int
iret
add
aam
sub
mov
and
mov
jno
les
cmp
and
sbb
mov
nop
push
inc
fbstp
mov
sub
mov
xor
mov
pop
push
inc
mov
insb
lret
sub
fwait
inc
data16
mov
stos
adc
dec
or
outsl
jecxz
inc
ljmp
outsl
or
mov
xchg
in
andl
lods
pop
addb
das
insl
mov
aad
and
jp
jae
test
dec
subl
sbb
jae
test
lock
lcall
adc
mov
mov
add
mov
jg
outsb
inc
pop
int3
fcomi
adc
sbb
add
rcr
sbb
adc
sub
cli
fdivrl
in
push
push
retw
pusha
cmp
imul
mov
jl
xchg
mov
orl
xlat
sti
jb
repz
out
fucomi
fcomps
xchg
cmp
add
adc
xorb
inc
add
pop
inc
inc
push
xor
mov
pop
pop
jl
loop
das
stc
or
lahf
aaa
dec
aas
sbb
movsl
nop
sub
cmc
sbb
xchg
fmull
aad
call
pop
inc
ss
dec
aaa
pop
inc
jo
jne
stc
push
cmpsb
icebp
imul
mov
xorl
jle
imull
rcrl
push
pusha
push
sarb
sub
fdivl
cmpsb
popf
iret
push
jecxz
out
imul
xor
in
lret
or
lret
mov
out
push
and
test
push
jp
cmp
rcrb
data16
ja
mov
std
lock
add
pop
add
mov
bound
pop
imul
mov
lods
push
or
mov
lds
loope
fwait
dec
dec
inc
cltd
cmp
and
jae
dec
icebp
test
sub
sbb
andb
and
int3
in
mov
fiadds
xor
dec
inc
sbb
xchg
aad
mov
cmp
jecxz
fildl
test
lret
cmp
inc
adc
sub
inc
hlt
shr
lret
push
aas
orb
cld
and
fistpll
pop
xor
cmp
in
or
push
pop
push
sar
lods
daa
stos
mov
icebp
mov
adc
lods
mov
dec
mov
test
adcb
pushf
test
push
mov
push
in
and
xchg
push
mov
mov
jns
fstl
mov
test
mov
out
push
ljmp
inc
inc
xchg
stc
or
pop
pop
sbb
push
mov
or
popf
imul
movsl
fwait
pop
and
lret
rcll
jg
rcr
xor
mov
mov
ds
mov
adc
in
fwait
mov
sbb
mov
fsubrs
in
xchg
jnp
or
lock
mov
mov
xor
leave
ja
sahf
ss
lcall
inc
pop
lods
fadds
xchg
outsl
lcall
fmul
sub
mov
insb
pop
adc
inc
fldenv
clc
scas
pusha
bound
mov
pushf
add
mov
push
mov
rcll
in
mov
mov
out
xlat
sbb
repnz
stos
adc
cli
pop
pop
mov
mov
loope
xchg
test
cltd
fs
adc
ds
hlt
fcomps
nop
daa
xchg
jne
xor
sub
sbb
or
sbbb
stos
mov
int
xor
aam
movsb
jmp
jg
jb
add
out
hlt
test
sub
outsb
sti
in
in
adc
sub
dec
mov
repnz
xchg
imul
aaa
jnp
mov
xchg
out
mov
daa
insb
cmpsb
adc
repz
out
test
fldcw
mov
or
lods
nop
or
adc
sub
ja
lret
es
inc
lds
std
std
adc
add
in
sbb
clc
ret
int
sbb
pop
pop
loopne
ja
pop
mov
cmp
daa
testb
and
aam
add
xor
mov
stos
mov
addl
in
in
jp
cli
clc
cmp
mov
mov
cmp
nop
mov
call
lock
xchg
xchg
negl
xor
mov
add
sbb
sbb
test
mov
sbb
aad
test
xor
sbb
incb
nop
cmpsb
aas
xchg
mov
cmpl
hlt
es
cmp
idiv
sub
mov
adc
shr
in
push
loope
stos
es
arpl
outsb
cmp
ss
cmpsl
jns,pt
ds
xor
js
js
stos
jmp
or
in
sbb
jl
mov
cwtl
mov
daa
in
push
sti
das
lea
imul
cmp
into
loopne
mov
jo
in
mov
jmp
xor
xor
push
cwtl
mov
stos
pop
jae
mov
insb
aaa
mov
bnd
add
mov
sbb
push
add
sub
into
cs
cmpsb
mov
sub
fidivrs
daa
cltd
jmp
sbb
inc
jns
sbb
loope
pop
add
inc
add
inc
add
push
pop
repz
ficoms
jge
aam
push
adc
cmp
xor
pop
mov
iret
xor
jns
lahf
jmp
mov
pop
mov
mov
cs
je
js
lret
cmp
xor
lret
lods
ror
fildll
mov
mov
in
sub
pop
dec
push
imul
fwait
cmp
dec
mov
gs
sahf
jmp
push
ljmp
inc
pop
mov
xor
mov
enter
cs
jmp
xchg
sub
xchg
xchg
rclb
xchg
add
sub
jno
or
sbb
addr16
sbb
out
lret
add
inc
lock
stos
repnz
mov
rorb
movsl
nop
add
int
sarl
pop
cmp
popa
dec
mov
cmp
ss
adc
setl
insl
hlt
push
pop
sbb
lret
adcb
movsb
mov
subb
cwtl
nop
dec
mov
inc
mov
dec
jae
push
pop
sbb
xor
inc
out
xlat
push
ja
sbbl
lahf
aas
lock
je,pt
pop
fildll
dec
das
mov
out
jno
icebp
jno
aaa
mov
inc
xchg
mov
mov
xchg
jmp
add
pop
dec
inc
mov
or
mov
mov
add
and
int3
xlat
sbb
push
sbb
xchg
aas
je
xor
cli
imul
add
xor
push
or
inc
ds
sti
aas
imul
jl
pop
pop
out
test
dec
sub
bound
dec
push
xchg
stc
rcrl
add
aam
add
ret
mov
repnz
mov
in
test
loopne
adcb
xor
jne
filds
inc
test
mov
roll
lods
loop
in
data16
push
cld
push
scas
test
js
out
imul
xchg
and
and
xor
mov
fsubl
dec
dec
test
mov
jg
sbb
dec
repnz
into
or
xchg
dec
cltd
imul
imul
mov
pop
add
mov
les
xor
add
inc
sbbb
in
jno
popf
jae
arpl
cmp
mov
adc
popf
adc
repnz
mov
pusha
mov
sub
mov
das
cmpsl
sti
je
rep
mov
out
and
jo
leave
and
xchg
fsin
std
pop
pop
and
xchg
outsl
push
inc
mov
pusha
push
cmp
and
mov
int
add
in
add
jnp
lret
inc
mov
icebp
loop
jmp
outsl
ror
jge
pushf
jno
dec
adc
cmp
out
jge
fs
cmp
movsb
push
jp
ljmp
add
xchg
sbb
push
mov
lea
adc
mov
test
cld
lock
idiv
scas
mov
jns
leave
pushf
test
xchg
jb
jae
mov
mov
xchg
pop
stc
mov
inc
sub
and
push
or
pop
cltd
sar
ja
sub
add
or
sbb
pushf
int
sbb
repnz
xlat
inc
jne
pop
imul
jnp
xor
lds
cmp
orb
mov
mov
ds
inc
into
mov
jle
or
xor
jns
inc
shrl
gs
loop
xchg
xor
dec
mov
out
xchg
inc
dec
daa
adc
mov
in
jnp
les
scas
shlb
lods
xlat
out
sbb
inc
jae
test
mov
jmp
xchg
inc
cmp
lahf
into
cmpsb
add
push
jle
lahf
adc
mov
xchg
cltd
xchg
out
push
adc
push
push
fsubl
rolb
xchg
add
and
xor
pop
mov
mov
cld
xchg
sub
lahf
mov
push
push
xchg
add
sahf
ja
sarl
repz
les
inc
std
mov
add
jmp
popf
out
lcall
fimull
jge
dec
mov
bound
push
cs
scas
jbe
and
jo
mov
rol
ja
sub
dec
test
xor
inc
int3
mov
cmpsl
push
push
cmpsl
rcll
push
sbb
add
mov
fbstp
xor
bound
and
jns
dec
push
jmp
xchg
sub
jl
data16
imul
mov
faddl
adc
push
sti
mov
and
xor
pop
sbb
inc
arpl
jbe
mov
xchg
hlt
enter
jne
push
dec
das
je
insl
mov
pop
push
jp
push
push
scas
adc
fwait
push
shll
cmpb
lcall
cltd
cmc
psubsw
dec
jl
rolw
mov
pop
movd
je
mov
outsb
in
fwait
ljmp
or
popa
sar
dec
mov
cltd
pop
scas
arpl
and
xor
out
stc
fisubl
push
lds
sub
lods
rcrb
loope
icebp
in
clc
jnp
sbb
or
sub
loop
fcompl
xor
pmulhuw
lods
sub
jns
mov
mov
fwait
test
or
adc
pop
jno
pop
mov
lods
sub
mov
jl
cmp
into
pop
lret
daa
mov
jle
cmp
fnsave
jge
pop
mov
cmp
into
sti
bound
jg
inc
scas
in
addr16
inc
and
pop
in
mov
inc
in
leave
cmp
mov
push
push
cmpsl
ss
scas
cmp
aas
cmc
jbe
ret
adc
inc
fnstcw
negl
sti
mov
data16
cltd
mov
pushf
pop
and
cld
jg
push
dec
xchg
mov
pop
and
leave
mov
in
cwtl
or
push
loopne
cli
dec
aad
and
enter
push
cmp
ja
fcompl
or
sbb
pop
push
repnz
mov
daa
cmp
sub
add
pop
cmp
call
test
inc
scas
and
shl
xchg
or
hlt
add
sbb
dec
test
and
loop
stc
jns
dec
add
cmpsb
mov
add
loop
in
add
lret
cmpl
jno
mov
jbe
mov
sub
cmp
dec
inc
gs
insb
mov
xor
insb
adc
enter
mov
push
mov
sub
gs
icebp
out
shlb
and
xor
jmp
bnd
inc
cltd
shlb
leave
lret
mov
ret
lock
mov
outsl
ss
ret
cmp
pop
dec
xchg
lcall
dec
pop
xchg
fisubrs
xor
pusha
cmp
idivl
adc
mov
aam
xlat
outsb
dec
push
addr16
movsl
out
mov
add
ret
fistpll
adc
pop
enter
je
cmp
mov
xchg
mov
aad
sti
xchg
stos
mov
sbb
jne
dec
xor
std
mov
lea
divb
mov
lret
jle
into
mov
adc
cmp
mov
pop
in
jmp
and
sahf
rorl
mov
ja
mov
ret
jbe
insb
jo
cmp
mov
test
les
mov
out
mov
mov
sbb
jbe
sbb
xor
subl
gs
addr16
cmpsl
mov
mov
jae
push
pop
jg
lea
shl
jne
ljmp
repnz
imull
dec
filds
es
aam
sar
sub
nop
fisttpll
ds
xchg
jecxz
loop
cmc
jmp
dec
cmc
sbb
mov
add
jmp
jmp
push
fdivrp
mov
mov
jno
mov
into
push
sub
and
lea
xor
jg
inc
push
ds
cltd
insb
std
adc
lods
pop
pop
pop
loop
fidivrs
xlat
fwait
out
fwait
test
dec
aad
push
loopne
mov
pop
out
insb
dec
dec
lock
xchg
cmp
inc
int3
rol
pop
sub
int
dec
mov
call
shl
ret
sahf
adcb
and
leave
aaa
mov
mov
jnp
std
xchg
shrb
cmp
and
xor
js
push
push
xchg
bound
gs
jl
test
sbb
cmp
inc
sub
jbe
xchg
ljmp
jns
mov
inc
mov
add
repz
movsb
push
xchg
jecxz
cmp
push
sub
out
jns
scas
add
pop
in
inc
shlb
jp
inc
mov
call
pop
fdivp
cmp
aaa
int
js
scas
push
ljmp
mov
bound
insb
hlt
jne
xchg
xlat
rclb
xor
popa
rcrl
mov
shlb
cmp
imul
fmull
pushf
shlb
bound
dec
repnz
sub
ds
loopne
es
add
cmp
frstor
inc
push
in
es
xlat
cmp
lcall
in
push
jmp
hlt
mov
cld
mov
es
pop
sub
jg
insb
clc
and
in
out
sar
and
sub
push
rcrl
call
cmpsl
pmulhw
xchg
inc
cmp
pop
int
jle
imul
clc
fwait
or
in
outsb
push
xor
jno
popa
cmp
cwtl
or
jnp
adc
repnz
jp
lcall
imul
pop
pop
in
xchg
sbb
out
aas
and
adc
sti
arpl
push
xlat
pop
loope
xor
aas
repnz
add
sbb
bound
addb
mov
fnstsw
xchg
adc
mov
xor
xorl
and
xchg
cmpsl
gs
sbb
insb
aas
pop
fsub
mov
dec
imul
add
andb
adc
xchg
int3
mov
fcomps
mov
push
push
or
mov
cld
fstpl
sbb
fimull
push
or
mov
out
and
repz
ror
mov
pop
scas
mov
inc
fcomps
scas
aam
scas
push
test
leave
xlat
jo
mov
push
sub
ficoms
push
mov
or
xor
sub
and
mulb
mov
andl
jp
mov
mov
pop
xchg
shrb
xchg
in
fsts
xchg
mov
adc
jp
lcall
js
test
add
jo
mov
aas
lock
dec
out
ljmp
mov
mov
sti
inc
mov
test
inc
adc
seto
lds
mov
dec
inc
in
scas
xchg
fmuls
mov
sti
fldenv
stc
sarb
sub
or
xor
xchg
push
frstor
sarb
and
imul
andb
sbb
mov
daa
repnz
push
inc
mov
cmp
imulb
inc
jo
fcomi
jge
dec
addr16
repz
inc
mov
push
xor
aad
jmp
xchg
imul
scas
shrb
ret
mulb
in
pop
insl
push
outsl
bound
lret
add
add
or
cli
or
leave
lods
add
pop
push
shlb
in
jmp
int
mov
cmpsl
test
mov
aam
mov
add
lret
nop
pusha
jbe
xchg
jl
cmp
scas
cmp
cmp
jl
sbb
scas
adcl
jmp
stos
jbe
out
cmp
scas
ja
mov
push
addl
negl
sub
dec
xorb
nop
in
push
mov
dec
imul
lahf
test
adc
push
mov
clc
pop
cmpsb
mov
jnp
sub
adc
or
bound
mov
and
int
fs
or
movsl
int
pop
sub
mov
dec
mov
xor
mov
loopne
push
popf
aam
xchg
add
mov
jae
xchg
pop
sbb
sbb
neg
nop
movsb
jmp
jmp
cwtl
lahf
popf
sub
push
pop
mov
mov
mov
lds
fsts
enter
xor
mov
das
cli
ficomps
imul
dec
insl
push
add
arpl
dec
aaa
xorl
popf
aaa
cwtl
sub
mov
fwait
xchg
cmpsb
movsl
mov
lahf
adc
dec
daa
fdivs
pusha
sub
lret
inc
pushf
sti
mov
or
pushf
adc
outsb
inc
inc
sbb
sub
addr16
insb
jmp
loope
xor
lcall
and
or
inc
out
sbb
ljmp
out
pop
mov
mov
loop
mov
pop
lods
fcomps
and
pop
je
int3
lds
sbb
cmpsl
lds
and
aas
adc
sbb
dec
jbe
rcll
pop
jle
dec
adc
push
sbb
fs
xchg
enter
adc
jle
xor
js
jge
in
or
dec
fists
aas
ret
arpl
push
out
lea
sub
mov
ret
xlat
fdiv
call
add
ficoml
jmp
fbld
jp
mov
notb
push
sarb
fnsave
and
lock
lods
inc
adc
sahf
cmp
jo
dec
or
stos
xchg
add
mov
arpl
pop
jae,pn
lahf
mov
cmp
cltd
call
jle
xchg
testb
lods
out
adc
clc
repz
sarl
imul
out
stos
into
mov
mov
jns
movsb
nop
fcompl
scas
push
les
xor
xor
push
pushf
mov
call
push
fsts
dec
cmpb
xchg
daa
or
js
push
pop
inc
daa
push
pop
jecxz
adc
xchg
iret
cld
fadd
aam
adc
ljmp
and
xchg
mov
leave
cld
ret
mov
stos
mov
xchg
outsb
movb
xchg
mov
lcall
mov
inc
mov
inc
addr16
push
out
rcrb
dec
inc
lods
out
sub
insl
jbe
cmpsb
xchg
push
sti
fidivl
cmp
push
adc
push
and
mov
ret
cltd
in
sub
out
addr16
lock
cmpsl
add
sbb
test
outsl
xrelease
popa
sub
daa
jns
mov
cmp
ja
or
fst
popf
fidivs
aam
jmp
push
mov
lahf
arpl
scas
or
push
jg
adc
mov
call
and
sub
or
inc
in
push
mov
incb
jbe
data16
shl
fiadds
push
cltd
arpl
and
mov
sbb
lods
inc
int
fnstcw
jo
or
xor
fadd
mov
insb
stos
loop
cmpsl
mov
cmp
dec
jg,pt
mov
mov
xor
jbe
fildll
in
ret
sub
add
cmp
mov
push
fdiv
pop
push
xchg
int
mov
push
xchg
fidivrs
fcmovne
and
lods
les
test
lock
popf
repnz
pop
and
and
adc
add
stos
je
sbb
push
xor
jmp
and
pushf
out
push
cmp
sub
mov
in
rcl
cwtl
adc
xchg
fsubl
sub
adcl
movsl
jns
jecxz
sub
jnp
fs
iret
aam
mov
cwtl
mov
jl
pop
or
pop
push
sub
test
sub
movsl
je
dec
mov
xor
sbb
cltd
out
jl
arpl
daa
cmp
mov
add
outsl
pop
cmp
addl
out
mov
fimull
popa
pushf
or
in
imul
lods
dec
pop
outsb
xchg
xor
xor
xor
and
leave
sub
pop
daa
inc
xor
in
icebp
dec
jle
xlat
jno
jecxz
cmp
jne
cmp
and
shlb
test
repz
push
mov
leave
sub
setne
mov
mov
inc
dec
nop
orb
jno
mov
mov
les
sub
shl
rcr
pusha
sbb
and
push
xor
inc
test
sub
adc
adc
pop
data16
adc
xchg
outsl
push
sub
xor
mov
adc
stc
mov
and
stos
xor
insl
mov
xchg
bound
and
push
psubusw
iret
fs
jb
data16
bt
xchg
aas
das
pop
jb
lock
adc
cmp
or
std
imul
jmp
xorw
and
nopl
cmpsb
push
mov
fs
mov
mov
adcb
pop
jo
inc
ja
test
or
test
stos
fs
into
cmpsb
xorb
sbb
sbb
loope
cld
and
cmp
push
dec
jle
pop
mov
push
popa
lcall
mov
jmp
mov
and
pop
cmp
je
push
jnp
sahf
xchg
cs
mov
xchg
dec
xor
rcrl
jne
jne
aaa
pop
stc
mov
add
mov
cmp
mov
mov
movl
scas
cmp
adc
gs
push
jbe,pn
mov
insl
sahf
dec
dec
xor
in
insl
sti
mov
iret
dec
mov
sub
pushf
mov
xor
mov
pop
push
xchg
cmp
cmp
dec
jae
inc
arpl
inc
mov
mov
sub
pop
enter
repz
popf
fdivrs
add
js
mov
shr
nop
cli
cltd
outsb
ja
rorb
sbb
and
loop
fwait
mov
stc
xchg
push
jnp
jno
lahf
xor
mov
mov
jo
ss
push
add
jb
xor
pop
js
out
into
pop
sub
nop
dec
mov
and
mov
and
in
adc
pop
leave
insb
jp
add
leave
std
push
jg
jmp
add
icebp
stos
mov
es
lock
pop
lods
pop
repnz
cld
pop
mov
adc
push
ljmp
dec
gs
pop
or
mov
xchg
sbb
adc
popf
hlt
data16
faddl
pop
xor
in
jmp
mov
sbb
or
or
pop
scas
jae
dec
aas
shrb
cmpsl
pop
adc
dec
data16
sub
cli
sti
jge
test
ds
mov
scas
xlat
sbb
sub
mov
adc
lock
push
lcall
aas
sbb
mov
mov
cli
jl
dec
cmp
fcomp
fistl
jg
xchg
xchg
jae
in
sub
adc
fneni(8087
sub
loop
call
daa
fst
stc
jmp
dec
inc
jp
fcmovne
mov
cmpsb
sub
mov
lret
xor
popa
test
jg
mov
ljmp
xor
stc
jle
xor
lcall
mov
ffree
enter
addr16
sub
push
rcr
stos
mov
pop
repz
repnz
lea
ja
or
cmp
push
adc
jecxz
lock
and
fstpl
icebp
jmp
sub
add
out
fidivs
mov
jno
fdivrs
jns
fcomps
adc
dec
loop
js
sbb
sbb
jmp
mov
out
ret
pop
stc
test
fldcw
push
movsl
cli
xchg
test
sbbb
mov
adc
fisubl
jp
stc
outsb
out
mov
push
ja
and
mov
stos
lea
xor
push
jbe
ds
pop
fmull
andl
sub
jo
inc
daa
pop
add
or
mov
inc
fcoms
pop
dec
mov
mov
xor
add
pop
sbb
add
sub
or
shlb
in
cltd
test
dec
xchg
in
dec
ja
lsl
and
incb
push
jg
sti
mov
cmpsb
pusha
push
xor
mov
inc
jg
dec
hlt
dec
xor
bnd
sub
js
inc
loop
pop
dec
push
inc
push
pop
sub
mov
dec
add
push
and
pop
lea
div
xchg
fisttpll
sbb
mov
pushf
jne
iret
mov
pop
sbb
repz
daa
lahf
je
xchg
outsl
das
pop
jmp
mov
inc
lods
outsl
jp
stc
xchg
inc
cwtl
fs
mov
xlat
mov
adc
and
pop
cmp
jne
loope
outsb
mov
sub
outsb
mov
fdivl
mov
outsb
xchg
dec
and
xchg
aaa
push
imul
in
fisttpll
xchg
loopne
ljmp
movsb
jnp
leave
jle
jmp
loop
stc
aam
scas
push
mov
xchg
jp
adc
cwtl
pop
enter
mov
dec
stc
loope
sub
test
push
outsw
adc
inc
mov
mov
xor
and
dec
and
fs
push
ja
inc
adc
js
mov
int
adc
pop
sti
push
leave
test
push
push
push
repz
adc
adc
test
sahf
jecxz
xchg
adc
push
sub
mov
std
sub
sti
hlt
lret
sub
xchg
sarb
lahf
xchg
ss
int
lds
add
xchg
pushf
and
cmp
arpl
cmp
fstpl
jb
jge
hlt
cmc
xchg
je
or
push
hlt
push
sub
cmp
push
aad
orb
lods
cmp
sbb
test
jle
cmp
std
pop
fcoms
mov
mov
dec
dec
dec
mov
orl
sbb
push
or
hlt
mov
jne
lds
xchg
lahf
xchg
mov
xchg
sub
push
push
cmp
xchg
aad
shl
xchg
fldcw
cmp
pop
test
std
and
stc
xor
pop
insb
loop
dec
or
cmpsb
cltd
xor
pushf
mov
pop
out
mov
dec
popa
in
mov
aaa
add
orb
xchg
xor
lret
push
test
movsb
aam
push
pop
adc
push
sbb
add
or
shll
in
lods
daa
add
call
add
lods
sbbl
loopne
sub
flds
push
das
out
xor
mov
addr16
push
out
dec
cmp
sti
in
std
nop
sbb
inc
lret
dec
adc
mov
cld
cli
inc
js
sub
dec
ja
out
movsb
jns
rorl
repnz
mov
mov
bound
push
pop
sbb
or
fmull
out
cmpsb
jno
inc
sti
sbb
add
out
add
movsl
lcall
cmpsb
fs
sbb
push
sub
xor
add
inc
test
and
sbb
in
or
popf
aam
push
daa
test
sbb
loope
mov
inc
mov
sbb
mov
push
stos
mov
mov
xorb
jp
arpl
jecxz
xchg
add
pushf
call
dec
dec
addr16
outsb
jg
xchg
dec
sti
daa
fsubl
out
loopne
pop
sarl
sub
iret
in
outsb
mov
or
fimuls
repnz
outsb
pop
cmpsl
jmp
shl
pusha
aam
pop
dec
lods
pop
sub
dec
xor
xchg
scas
or
fisubrl
rcr
sbb
fs
ficompl
adcl
cld
push
xor
and
mov
inc
mov
inc
adc
sub
rcr
mov
arpl
cli
fcoms
out
fstpt
cmpl
mov
push
lret
stos
test
adc
sti
mov
scas
in
test
mov
lea
and
int3
test
js
fs
pop
int3
dec
jl
into
mov
testb
stos
nop
mov
or
shl
push
aad
test
or
sub
mov
xchg
lahf
jno
bound
mov
xor
xchg
lahf
ficoml
es
sub
pop
and
mov
jmp
rcll
push
out
js
xor
ret
pop
emms
sahf
jl
movsl
mov
cmp
add
inc
loope
out
adc
pop
sbb
lea
inc
jnp
dec
jno
sti
cs
mov
imul
outsb
out
push
outsl
adc
pusha
ret
stos
dec
insb
in
add
sub
inc
cwtl
cld
xchg
stc
cmp
fwait
cmp
dec
pushf
jne
int
andb
cmpsl
into
jb
push
adc
in
shrl
addr16
or
vpperm
mov
stc
es
sbb
mov
scas
mov
pop
pop
movsl
sbb
jae
sub
push
or
mov
in
test
cmp
cmp
jnp
icebp
inc
sbb
inc
in
xchg
movsl
xor
inc
adc
push
imul
and
mov
add
mov
jle
xor
xlat
nop
loopne
fs
lret
dec
mov
loope
inc
xchg
push
outsl
ja
subb
dec
mov
std
jmp
mov
mov
movsl
pushf
adc
sub
into
ljmp
sbb
jl
negb
jmp
xor
in
and
pop
scas
outsb
jno
sbb
and
pop
fwait
cmp
pushf
outsl
cs
sbb
sbb
mov
imul
nop
add
dec
xor
rorl
mov
add
pop
mov
fwait
dec
pop
push
sub
mov
jecxz
push
sti
clc
cmp
xchg
mov
rcll
dec
jle
iret
cmp
int
divl
dec
lret
add
mov
cs
mov
out
stos
es
sub
pop
clc
cmp
xchg
pusha
mov
cmp
imul
push
ret
and
int
nop
xor
inc
jp
adc
adc
sub
push
xor
or
adc
outsb
dec
fs
ljmp
test
orb
iret
repnz
xor
cmp
sub
sbb
into
cs
pop
sub
inc
daa
lods
pop
dec
sub
in
cmp
mov
xchg
cmc
cmpsb
sbb
adc
cld
in
mov
push
pop
mov
dec
mov
addr16
cmpsl
leave
dec
in
dec
fdivr
adc
cmp
fldt
inc
cmc
jg
inc
das
pop
adc
test
fisttpll
adc
fimull
scas
add
aas
dec
pushw
pop
inc
push
push
fldt
repz
mov
daa
mov
xor
lea
inc
xor
inc
pop
push
jae
insl
or
nop
lret
cwtl
rep
repz
je
and
adc
mov
mov
jmp
mov
mov
insl
in
xchg
sub
mov
inc
lds
xchg
pop
icebp
jp
xchg
xchg
jp
pop
push
push
fwait
cltd
cwtl
dec
inc
adc
das
push
cmpb
push
mov
sbbl
je
adcl
pop
push
fldcw
add
aam
outsb
push
loopne
push
push
rcr
push
mov
lods
adc
mov
loope
int
inc
push
push
mov
test
or
xchg
cmp
aas
inc
pop
ret
xor
jns
lret
sub
xor
add
dec
mov
dec
or
repnz
clc
int3
jbe
sbb
push
dec
insl
fsub
sub
jnp
adcl
adc
fsts
int3
loop
in
js
mov
mov
scas
jnp
sbb
out
out
pop
or
jns
and
adc
in
push
pop
js
insl
fisttpl
pop
cmc
xor
repz
nop
into
test
pop
jne
stos
jle
out
movsl
mov
dec
psubb
out
or
lret
ja
test
fidivs
or
pop
ss
std
pop
push
movsb
xor
sbb
xor
mov
out
in
pop
dec
cmc
adc
push
cmp
jecxz
or
insb
dec
xchg
fsts
bswap
mov
push
add
dec
sub
mov
xor
jg
and
mov
imul
push
in
inc
dec
mov
ficoml
icebp
ljmp
mov
cmp
stos
outsl
mov
adc
shl
sub
jmp
push
lock
jo
xchg
popf
dec
ss
mov
jne
inc
adc
movlps
xchg
sahf
pop
and
divl
jecxz
scas
and
xchg
ret
int3
adc
sbb
sub
in
jns
gs
jno
cmp
mov
xchg
mov
jbe
stos
movsl
push
cmp
jae
pop
inc
xchg
sbb
pop
ffreep
sub
je
loope
jo
ja
lds
fildll
inc
jbe
cli
test
add
sub
enter
jmp
shlb
adc
add
lods
rcll
and
mov
jmp
and
push
xor
movsl
sub
push
cmpl
push
jns
cwtl
inc
mov
mov
sub
test
inc
mov
or
cmpsl
outsb
or
sbb
ds
lock
movsl
stc
sti
lret
mov
adc
fsubrs
add
push
sahf
in
push
popf
push
addr16
sub
lahf
imul
jno
sub
aas
stos
xor
rcrl
mov
inc
scas
push
data16
jno
and
aad
pop
rcrl
test
cs
cs
out
and
xor
fst
test
xchg
dec
pop
push
jg
jbe
or
hlt
mov
cwtl
out
ret
lret
ret
or
fcomp
mov
fmul
bound
fsubs
mov
lahf
mov
mov
mov
clc
dec
lret
div
mov
jne
mov
sub
lock
fimuls
iret
mov
sub
jp
fs
jmp
push
jno
push
or
inc
das
or
aas
jmp
loope
cmp
mov
cmpsl
sbb
xor
enter
xor
sbb
test
aam
jg
ret
mov
gs
inc
pop
xchg
ret
imul
clc
js
push
scas
fs
add
mov
adc
std
clc
sti
jno
pop
ss
into
mov
sub
popf
int
notb
mov
add
shr
push
iret
aaa
xor
cmpsb
scas
mov
subb
xchg
mov
pushf
movsl
enter
cli
jp
adc
inc
xchg
add
jp
push
leave
mov
add
adc
daa
fldenv
imul
lock
rcrb
aad
jo
add
and
or
andl
pushw
add
mov
in
mov
gs
mov
inc
cld
adc
cmp
scas
jp
test
icebp
movsl
cmp
in
lods
orb
mov
mov
ss
xchg
pop
mov
dec
push
testl
xchg
loope
lds
clc
xorl
dec
aam
dec
push
jae
aas
les
aaa
push
in
sub
fcoml
add
mov
iret
shll
and
hlt
push
shrl
add
stc
cs
sub
xchg
pop
cmp
fs
in
out
mov
in
xchg
dec
addb
rep
jmp
ja
dec
in
in
mov
test
mov
push
imul
stos
ss
cld
cld
adc
pop
mov
cs
jge
in
iret
jecxz
xchg
and
ss
jno
test
xchg
pop
jmp
or
push
and
dec
xor
aas
cmp
pop
push
and
or
mov
and
xor
out
call
call
jno
js
mov
nop
cli
stos
and
push
mov
int3
jmp
or
pop
in
shrl
or
aad
test
and
fidivl
dec
jno
sub
push
jns
mov
inc
lds
mov
inc
mov
lret
sbb
mov
insl
fwait
scas
jne
dec
jbe
sbb
loope
fistpll
pop
cs
add
xchg
jp
xor
push
gs
xchg
cmp
sbb
push
inc
mov
mov
xchg
jns
and
movl
inc
cmp
adc
arpl
rolb
mov
xlat
mov
faddl
into
mov
adc
adc
mov
sarb
insl
mov
mov
or
sub
or
add
mov
add
push
cmc
ficomps
sbb
sarb
jmp
adc
sbb
inc
push
mov
mov
add
sub
xchg
mov
jle
sub
and
aad
cmp
int
mov
stc
in
outsl
aas
jmp
sbb
sbb
lcall
or
sub
push
fmulp
addr16
xlat
inc
sub
mov
push
fbld
cltd
jno
add
jnp
mov
xorb
sbb
repz
insl
scas
into
cld
ficomps
dec
push
mov
pop
dec
mov
stos
es
fstl
pushf
pushf
or
push
sbb
ljmp
lods
push
xchg
cltd
mov
adc
and
xacquire
jmp
push
rep
and
dec
addw
dec
out
faddl
mov
mov
dec
subl
into
or
or
lods
out
fidivrl
cmp
push
jo
or
and
stos
jg
inc
jo
xor
pop
pop
inc
jae
add
xor
mov
cmpsl
repz
call
sbb
inc
out
enter
dec
cli
insl
mov
mov
cmp
xlat
iret
sbb
mov
xchg
lret
loope
sbb
loop
sti
push
jg
jg
sub
inc
in
inc
inc
xchg
or
popf
imul
fisubs
and
sbb
daa
scas
dec
imul
inc
mov
nop
fldenv
dec
or
lret
dec
clc
cmp
sbb
cwtl
and
jp
jb
inc
mov
nop
sarb
cmp
or
imul
sub
iret
aad
adc
outsb
ret
and
fildll
sarb
fwait
int
push
cltd
pusha
loope
aaa
inc
jnp
cmc
xchg
jmp
add
and
fnsave
imul
inc
adc
push
sub
addr16
aad
sub
push
fisttpll
sbb
jbe
cmp
in
shll
test
insb
lahf
inc
adc
lods
mov
aad
xor
addr16
in
or
cmp
xchg
xchg
xor
mov
mov
lods
hlt
int
push
jg
and
iret
xchg
jmp
movsb
xchg
sub
push
mov
das
notb
gs
jecxz
lret
cmp
mov
adc
push
xchg
mov
sbb
andb
movsb
cwtl
faddl
test
cmc
jo
cltd
xchg
mov
mov
leave
dec
daa
xchg
push
shr
mov
cmp
loopne
ror
ds
mov
add
xchg
jle
in
dec
iret
dec
lods
or
and
cmp
adc
es
call
adc
scas
fwait
pop
dec
xchg
and
sti
jno
inc
and
cmp
aas
arpl
in
jae
mov
test
mov
xor
cmpsl
fimull
mov
cmp
fldenv
mov
jmp
adc
mov
out
loopne
add
scas
push
jb
mov
dec
sbb
sbb
xchg
popf
jp
aas
loopne
jno
stc
pop
es
inc
fiadds
push
das
test
loop
movsb
jg
cli
jae
xlat
clc
shl
push
pushf
or
jg
adc
ja
icebp
cmpsl
js
jmp
jne,pn
cmp
int3
sub
fwait
lcallw
inc
sbb
push
jmp
call
outsb
push
mov
or
gs
adc
add
jp
or
pop
pushl
sbb
inc
xchg
loop
outsl
push
mov
pop
repz
pusha
xor
xlat
repnz
pop
and
dec
xchg
cmpsl
xchg
call
arpl
or
imul
jmp
fcomip
in
lcall
in
add
and
jmp
lahf
sbb
sbb
push
inc
sti
jg
std
xor
stc
sbb
and
ja
test
mov
aaa
and
mov
call
lahf
pop
outsb
cs
loop
xchg
inc
and
sar
pushf
mov
cli
dec
mov
xchg
std
mov
jge
nop
jns
sbb
fdivrl
jae
repz
jo
mov
push
out
out
dec
pushf
push
fsubrs
int3
and
or
ficoms
xlat
mov
and
mov
dec
mov
xlat
movsb
rcl
push
mov
sbb
xlat
call
out
outsb
out
outsb
push
and
rolb
repnz
dec
adc
popf
inc
or
pop
or
mov
imul
push
xchg
mov
ficoml
inc
daa
in
out
daa
dec
xchg
xor
mov
dec
fidivl
stos
test
pop
lret
cltd
loope
dec
cmc
cld
xchg
loopne
movsb
push
sub
fldenv
hlt
xor
ja
cmp
sbb
jg
mov
testb
add
loopne
lock
xorl
pop
inc
sbb
std
cmpsl
push
pop
pop
test
aaa
sub
cli
lcall
gs
enter
jmp
jae
sahf
ja
inc
or
cs
imul
cli
rcrb
add
lcall
mov
xchg
test
lods
test
mov
add
add
mov
outsl
clc
dec
jle
sbb
mov
pop
pop
mov
inc
lahf
in
and
sub
jns
imul
ljmp
jb
rolb
aam
and
jo
popa
sahf
lret
xor
stc
loopne
int3
cmpsb
fnstenv
or
call
iret
pop
pop
mov
adc
fnstenv
sbb
int3
fildll
ss
ss
data16
inc
inc
or
mov
push
push
add
mov
push
ljmp
or
xorl
xor
sbb
leave
jae
out
add
push
inc
mov
mov
ja
lret
fwait
ret
xchg
aaa
add
xchg
and
adc
cmp
jb
outsb
lock
stos
fnstsw
cmp
mov
push
imul
cli
in
xlat
ficompl
pop
jp
mov
andb
test
sti
mov
clc
ds
pop
ljmp
push
clc
cmc
mov
dec
loop
test
cmovne
or
and
rcll
aad
nop
adc
repz
xor
into
sub
sub
jp
inc
pusha
xor
bnd
or
sub
mov
lcall
and
leave
loop
and
lock
xor
lds
stc
in
lods
xchg
or
mov
sub
and
stos
popf
lds
mov
mov
xchg
ret
add
lea
pop
sar
popa
addr16
inc
fildl
adc
inc
leave
push
movsb
and
insl
andb
data16
pop
jmp
dec
adc
and
aas
push
add
jle
nop
add
add
inc
mov
jle,pn
lret
sbb
scas
ja
out
adc
push
mov
dec
dec
sahf
add
mov
inc
pushf
mov
outsl
push
lcall
mov
ret
arpl
lods
cwtl
arpl
mov
pop
cmp
aam
adc
cwtl
sbb
stos
sbb
and
outsb
mov
mov
push
xorl
fdivs
ret
jb
dec
in
data16
ss
sahf
push
ja
lds
lds
cmpsl
dec
mov
cmp
jbe
xor
cli
leave
addr16
sub
xchg
not
test
lock
ja
loop
cmpsl
das
or
lds
leave
push
out
into
push
das
add
sbb
mov
stos
cmp
mov
push
cwtl
push
test
repz
mov
sub
gs
out
rolb
clc
icebp
adc
xchg
iret
addr16
cmp
adc
jnp
pop
cmp
ret
xchg
nop
seta
cmp
bound
mov
sbb
idivb
push
or
jb
outsb
popf
xor
fistps
jg
sub
icebp
insb
mov
int
lods
mov
mov
out
shl
ret
int
pushf
and
push
mov
xor
scas
icebp
and
out
dec
inc
stc
imul
sub
sbb
add
leave
xorl
mov
push
sbb
jne
mov
jbe
fstpl
jle
mov
icebp
xor
insb
sbb
adc
arpl
jne
lret
mov
frstor
jecxz
pop
movsl
movsl
je
push
sahf
or
jp
int3
loopne
and
je
daa
and
pop
sbb
mov
add
jecxz
xchg
dec
cmp
rcrb
dec
xchg
mov
inc
lods
cmp
icebp
loope
fdivs
sbbb
cld
in
xchg
mov
fdiv
cld
inc
dec
xchg
ret
jbe
pop
mov
hlt
iret
or
mov
mov
aam
xor
enter
jmp
or
enter
jbe
fistpl
mov
cltd
arpl
lret
jle
cmc
mov
movsl
xchg
insb
loope
mov
rclb
rorb
jae
sbb
xchg
or
in
mov
int3
and
dec
adcb
sbb
xorl
or
cmp
sub
jb
mov
or
jge
rclb
add
fstps
ljmp
pop
aam
xor
mov
mov
inc
mov
xchg
inc
stos
iret
cmovae
iret
mov
leave
test
jns
popa
cmp
mov
pop
ss
fs
xchg
xchg
inc
movsb
enter
out
fwait
or
xor
enter
imul
iret
cmp
fcoms
js
mov
aas
inc
jg
mov
lcall
cli
pop
push
ret
jl
sahf
mov
xor
into
jne
clc
imul
push
push
lock
adc
inc
jo
outsb
add
sahf
mov
mov
push
scas
imul
dec
mov
daa
pusha
movsb
mov
bound
dec
divl
cmp
sbb
jns
ret
xor
xchg
rcll
mov
xchg
mov
and
out
cwtl
xchg
clc
cmpsb
arpl
pop
iret
push
ljmp
mov
out
pop
dec
sbb
jecxz
fisubrs
into
andb
cld
xchg
ret
sub
mov
push
or
sbb
and
lea
or
rcl
xor
jnp
push
cmp
js
cmp
fistps
stc
xor
or
data16
cmp
add
jge
or
add
test
leave
push
movsl
push
fs
jl
loopne
shlb
in
sahf
jl
inc
sub
lods
mov
sbb
xor
xor
imul
out
setge
push
fincstp
repz
into
fimull
ret
cmp
xchg
inc
mov
sbb
cmp
retw
lcall
jp
mov
aaa
mov
sti
xchg
imul
pop
sub
jbe
add
mov
scas
daa
and
mov
jmp
sub
and
add
je
lds
movsl
jecxz
neg
mov
or
push
imul
dec
jge
xchg
inc
add
jg
or
fdivrl
and
push
sti
push
movsb
popa
shrb
and
pop
sarl
pop
and
push
inc
adc
pop
xchg
jg
aam
call
xor
xchg
pop
loop
divb
into
call
or
je
movsl
imul
or
ds
roll
sub
mov
xchg
loope
push
sub
cmp
ficomps
xchg
imul
testb
in
out
repnz
fabs
jnp
jo
or
pop
mov
int
dec
js
sbb
and
aaa
sti
jecxz
and
dec
ss
subl
or
std
bound
xchg
inc
insb
ljmp
loope
and
cmc
hlt
jge
dec
lcall
sbb
int3
sbb
outsb
or
xor
aaa
mov
xor
push
add
and
jmp
sti
pop
dec
mov
dec
jg
cmc
and
fcmovb
aas
sbb
popa
stc
inc
and
mov
mov
cmp
icebp
test
push
je
mov
out
push
ret
mov
stc
imulb
push
sbb
negl
xchg
aad
add
dec
enter
lcall
push
cmpsb
outsl
inc
push
gs
test
mov
jnp
mov
inc
arpl
push
ds
adc
mov
mov
fcomi
xor
adcb
aad
add
fwait
cmc
cli
sbb
mov
pop
out
cmpsl
dec
int3
xchg
pop
push
movb
dec
loopne
push
fiaddl
cs
pop
out
mov
jne
enter
mov
or
daa
or
mov
cltd
and
jnp
cmp
out
inc
aas
idivb
push
and
orb
mov
sahf
pop
sbb
out
int
fldt
js
mov
adc
insb
inc
xor
jno
xchg
out
in
subl
or
pusha
out
pop
xchg
lahf
adc
cmc
add
inc
mov
adcb
sarl
sbb
cmp
scas
bnd
push
mov
mov
xor
outsb
cltd
pop
jg
dec
and
inc
mov
mov
or
scas
sub
out
ss
fisubl
mov
inc
push
iret
xchg
aas
dec
mov
lock
xchg
mov
sahf
rcrb
cmp
mov
scas
jnp
mov
popf
or
and
cmpsb
roll
insb
mov
shr
std
jbe
mov
lds
pop
mov
fnstcw
cmc
xor
add
adc
or
clc
jb
arpl
lret
dec
sub
icebp
add
mov
daa
push
rcll
movsb
xchg
push
pop
mov
adc
loop
adc
aas
or
add
bound
ficompl
neg
mov
popf
je
push
movsl
fcmovnu
xchg
dec
ret
popf
ret
popl
out
mov
fwait
or
xor
dec
xchg
pop
das
mov
xchg
mulb
inc
imul
add
xchg
andl
outsb
test
mov
int3
ret
jecxz
fwait
jg
jnp
cmp
inc
adc
pop
add
jne
push
mov
mov
jg
mov
decl
xor
sbb
out
sub
jmp
call
mov
les
int
loope
inc
add
push
mov
ret
out
int3
and
mov
sar
movsl
fwait
ret
and
push
push
test
mov
rol
push
xchg
lods
xor
divl
sbb
and
inc
or
jo
mov
addr16
test
or
jo
cwtl
sbb
inc
mov
dec
and
data16
fwait
sti
divl
or
xor
mov
repnz
push
outsb
push
iret
xor
or
sbb
dec
dec
fimull
in
pushf
cmp
in
pop
sub
lcall
jo
xchg
imul
adc
xchg
fwait
ds
incl
mov
popa
lret
pop
jnp
shll
mov
pop
fcoms
fincstp
aam
das
pop
xor
sar
push
aam
xlat
add
and
jae
je
jb
or
jbe
add
pop
in
lea
pop
cwtl
cmp
mov
cmpsb
scas
xchg
or
inc
cld
hlt
pop
push
lcall
xor
enter
ret
mov
test
cmpsl
loop
cmc
and
pop
ret
mov
pusha
loop
push
lock
cmc
decb
fstps
fwait
pop
sub
cmpb
imul
or
mov
fcomps
or
inc
ret
jnp
jecxz
add
popa
lcall
push
sub
sub
cmp
sub
mov
jecxz
mov
cmpsb
fcoml
mov
jle
pop
xor
dec
or
push
jge
loope
out
notb
stc
sahf
in
sub
pushf
xor
shr
mov
iret
enter
mov
dec
push
test
dec
mov
push
popa
fsts
cld
int3
loope
push
push
sarb
adc
les
sbb
stc
test
movsb
cmp
test
jp
adc
in
subl
int
push
dec
xchg
fmul
inc
xchg
jnp
cli
cmp
test
xor
mov
adc
or
shr
mov
inc
je
aam
inc
inc
push
lods
jp
jmp
dec
xchg
mov
add
xchg
out
aad
inc
cmp
js
mov
or
pop
sbbl
mov
mov
hlt
mov
pop
pop
lcall
xor
mov
hlt
xor
dec
xor
addb
cmp
rcl
xor
xlat
sbb
mov
cmpsl
aam
es
jg
inc
adc
xchg
xchg
cmp
cmc
adc
test
ds
xchg
les
jmp
aas
add
adc
inc
repz
dec
sbb
sahf
dec
push
int
ret
sbb
and
jge
fdivl
mov
xchg
inc
lea
lea
rcrb
inc
sub
jge
aas
mov
pushf
mov
sub
lds
imul
push
call
sbb
inc
xor
imul
test
sahf
jp
outsl
dec
popa
push
inc
pop
lret
add
inc
push
movb
jg
sub
orl
sub
jecxz
or
dec
movsl
mov
inc
mov
rclb
xor
xchg
stc
mov
inc
es
jg
inc
xor
xor
into
sbb
fincstp
iret
out
and
dec
inc
insb
sub
jbe
in
sbb
fs
lods
cmpsl
xchg
mov
push
out
aad
stc
sub
dec
dec
xlat
push
inc
sub
add
in
adc
mov
sub
test
add
data16
cmp
pop
adc
push
stos
push
dec
lods
xor
hlt
dec
xor
jno
jae
or
cwtl
pop
nop
push
loop
dec
jb
xchg
inc
adc
jnp
js
xor
sti
and
adc
jecxz
adc
push
hlt
mov
in
add
pop
sub
jmp
cmpsb
repz
int3
enter
enter
sbb
test
lds
xchg
cmp
stos
lahf
clc
cmp
push
rclb
jle
pop
int3
dec
pop
mov
std
loop
mov
add
push
cltd
cmp
jo
cmp
adc
lock
jo
push
mov
xchg
lahf
loopne
ljmp
fwait
aad
xchg
sub
mov
push
add
dec
mov
pop
lret
xchg
iret
jno
fldcw
arpl
fs
sbb
xor
cli
jo
pop
xor
stos
scas
popl
subb
es
xor
inc
data16
push
loopne
pusha
shlb
xor
in
pop
lock
xchg
in
and
push
push
aaa
ret
jl
push
hlt
sarl
dec
icebp
arpl
inc
jl
lret
fs
fwait
lret
popa
std
in
shlb
stos
push
cltd
pop
dec
out
fistps
sub
std
jb
and
and
pop
movsb
mov
mov
jmp
sahf
pop
fcoml
cmpsb
andps
stc
stos
aas
bswap
push
add
stos
dec
sub
or
push
sbb
adc
stos
pop
jae
mov
mov
xchg
jb
or
cmp
xchg
clc
sti
ds
xor
xchg
je
add
fbld
xlat
sub
ret
xor
jb
std
movsb
push
mov
jg
inc
repz
jo
xchg
mov
sahf
mov
xchg
icebp
dec
insb
push
out
and
mov
mov
cs
jp
add
pop
lret
cs
repz
in
aaa
mov
dec
fwait
mov
out
xlat
pop
push
push
cmp
cmp
dec
push
push
sarb
enter
sub
mov
jp
sub
mov
or
pop
or
in
sub
loop
lods
psraw
lock
rcl
or
fwait
mov
xchg
jno
cwtl
lahf
int
mov
mov
xchg
sub
jmp
imul
in
test
jb
mov
lds
lret
sarb
pushl
aam
adc
jne
aad
dec
jb
mov
lods
popa
sub
shll
imul
shll
lea
mov
in
xchg
sti
jns
jno
mov
or
adc
jnp
repz
jae
or
sub
mov
mov
repnz
mov
jmp
and
in
rcl
insl
xor
lods
xchg
push
xchg
mov
scas
mov
jb
cmp
cmpsb
in
sub
dec
mov
dec
fldl
insl
sbb
push
fcmovnb
inc
push
jns
or
xor
ficomps
jge
adc
out
stos
fistl
adc
jle
data16
and
pop
clc
inc
or
fildl
and
repz
adc
jg
pop
je
ret
pusha
or
fsts
ds
fmuls
mov
dec
scas
dec
jecxz
sbb
icebp
ret
lods
out
stos
shrl
loope
mov
adc
jo
mov
and
mov
pop
int3
mov
sub
inc
ss
inc
mov
dec
sub
hlt
mov
mov
add
fsub
push
aad
dec
out
push
mov
and
lret
sub
push
and
cli
aad
bound
mov
pop
dec
cmp
aaa
mov
in
mov
addr16
outsb
in
in
push
in
cmpsl
insl
pop
inc
imul
lods
xor
mov
incl
dec
lods
sub
xchg
xchg
cli
jl
scas
mov
mov
mov
mov
movsb
cmc
movb
mov
repz
or
mov
popf
jno
test
js
mov
pop
shrb
test
sub
stos
cltd
cmp
cmp
inc
xchg
inc
test
sub
lret
lea
mov
jp
cmc
cmp
xchg
cmpsl
pmulhuw
jno
cmpsl
mov
jg
pop
sbbb
ds
mov
xor
lds
jae
xchg
ret
mov
inc
lahf
push
push
and
pushf
add
sahf
and
scas
sub
mov
dec
inc
enter
mov
sbb
jg
loope
adc
cmp
pop
fisubs
insb
mov
insb
sti
cmpsl
imul
int
xchg
dec
pop
jne
fsubrs
lea
ja
xchg
lahf
push
inc
sbb
dec
mov
xchg
dec
cs
push
mov
ds
sub
jg
mov
lods
lds
push
mov
and
test
pop
repz
xchg
mov
sbb
fwait
dec
sub
xchg
das
movsl
inc
shlb
sbb
mov
dec
test
mov
sbb
push
loopne
mov
lods
rorb
or
or
sbbl
loop
dec
arpl
movsl
lods
add
xor
test
enter
xor
bound
or
sub
imul
adc
test
mov
adc
inc
jns
push
xor
imul
cmp
jnp
repnz
push
push
test
add
sbb
mov
mov
inc
pop
mov
fiaddl
pop
push
pusha
data16
lods
mov
stc
enter
sub
push
and
aaa
pop
icebp
movd
jp
ret
icebp
arpl
pop
test
sbb
incl
test
je
pop
into
movsb
mov
mov
add
in
std
mov
push
push
movsl
clc
sahf
cs
inc
cmpb
scas
fidivrs
pop
imul
push
es
jp,pn
add
push
bound
add
in
push
xchg
aad
mov
loop
inc
cmp
sub
int
push
and
or
dec
jmp
cmp
imul
out
mov
sahf
jns
jnp
sbb
push
les
adc
nop
ret
jnp
loopne
in
stos
addr16
out
xchg
cmp
daa
push
call
lea
insb
jmp
mov
jge
and
dec
bound
inc
in
fildll
ja
out
into
in
dec
shll
push
jns
mov
ficoms
adc
loopne
push
sbb
add
or
andb
sbb
and
xchg
push
add
scas
aam
lods
xchg
repnz
out
rsqrtps
scas
jge
or
je
ret
sbb
lret
pop
fisttpl
push
pop
stos
and
cli
in
mov
icebp
jecxz
pop
repnz
push
adc
push
roll
imul
cmp
cmp
push
xor
outsb
jno
int
adc
je
jge
adc
shl
adc
lcall
iret
pop
idivl
rcr
out
sar
xor
lea
mov
dec
out
les
dec
or
push
rcl
add
mov
outsb
mov
outsl
add
ret
jae
inc
jl
sbb
and
ret
cmp
and
lea
push
push
fidivs
jge
push
divl
jns
hlt
dec
push
aam
xor
mov
or
in
gs
dec
and
mov
jle
stos
cmp
std
pop
push
pop
ffree
or
and
decb
fisubl
arpl
adc
or
jb
adcl
arpl
mov
rcll
mov
mov
adc
push
cli
xchg
pop
push
cmpsb
push
jle
pop
jmp
dec
adc
dec
or
pop
or
mov
xor
mov
inc
sbb
scas
sub
fisubs
push
or
adc
mov
pop
mov
fistps
sub
jge
sub
adc
xchg
push
mov
das
enter
and
mov
mov
pop
fistl
or
mov
arpl
fdivl
imul
xchg
xchg
data16
mov
mov
out
push
jb
aaa
mov
jnp,pt
jns
ljmp
dec
test
lret
dec
jl
lds
pop
and
cmp
jnp
inc
shll
test
sarb
sbb
adc
sub
add
inc
ljmp
fbld
cmp
movsl
pop
xchg
out
inc
pop
arpl
ljmp
sti
push
add
push
jno
movl
aaa
lds
or
xor
cmpsb
call
sbb
aad
adc
jo
lahf
jno
insl
jo
mov
sbb
push
int
sub
cmp
sub
pop
repz
adc
cmp
aaa
das
or
mov
fsubr
out
test
aad
outsb
fadd
insl
mov
pop
shl
sbb
or
xor
xchg
mov
leave
push
movsl
sub
fxch
pusha
int
cmp
leave
test
comiss
pop
add
adc
leave
dec
stc
int
shl
imul
hlt
mov
insb
jg
bound
adc
cmp
jne
out
cmc
adc
jae
mov
mov
pop
iret
sbb
push
cmp
push
scas
int3
or
popf
sub
cli
aaa
incl
xchg
cmpsb
test
hlt
lret
jo
mov
jo
push
mov
pop
adc
dec
jecxz
rcll
pop
lods
add
push
or
loopne
jp
mov
jnp
xor
push
data16
mov
pusha
lods
fstps
push
rcrl
xor
std
push
sub
sbb
adc
mov
lahf
sub
sbbb
mov
shl
cmpsl
xchg
jno
dec
dec
dec
sub
into
lret
sbbl
mov
scas
fld
fadds
mov
lods
push
lahf
call
inc
sahf
mov
fucom
scas
xchg
leave
shlb
rol
insb
aaa
movsl
pop
rol
or
mov
jo
int
xlat
js
outsb
ds
lods
mov
int3
cmpsl
int3
nop
ret
fwait
inc
mov
test
dec
mov
xchg
test
call
mov
xor
ror
testl
in
xor
inc
lds
mov
popf
dec
in
cmp
mov
scas
je
jmp
mov
cmp
mov
scas
pop
pop
arpl
add
xchg
xor
jne
xchg
xchg
loop
loope
add
aad
hlt
xchg
xor
push
outsb
and
roll
scas
loope
test
scas
js
insl
negb
mov
mov
pmulhuw
or
ja
nop
mov
lods
pop
int
xchg
xchg
pop
mov
mov
scas
mov
inc
sbb
jmp
mov
xor
repz
addr16
icebp
sbbb
xchg
cmc
imul
mov
cld
popf
sub
test
mov
jnp
or
lretw
pusha
or
mov
lock
insb
repz
mov
lcall
pop
dec
out
push
je
sub
pop
sti
add
ljmp
mov
mov
and
and
add
mov
or
pop
shlb
fstpt
insb
inc
dec
es
pop
and
mov
add
xchg
or
sub
or
jl
pop
add
or
int
ds
not
loop
jo
jecxz
out
adc
es
add
sbb
sbb
mov
jae
aad
nop
dec
sbb
pushf
out
clc
push
imul
cmc
dec
adc
inc
pop
test
int
insl
mov
subb
movsb
popa
js
adc
insl
inc
pushf
icebp
ret
mov
fsubs
sub
dec
mov
dec
xchg
les
and
repz
cli
mov
loopne
cmp
xchg
jmp
jecxz
dec
test
fwait
dec
orb
cmpsl
mov
and
shll
pop
in
inc
or
lea
addb
es
and
and
repnz
sub
shlb
rolb
je
insl
aaa
cmp
mov
cmp
fisubl
movsl
or
mov
movsl
cmpsb
enter
pop
xor
fsubl
xchg
or
mov
sub
popa
jg
je
push
orb
mov
or
xor
dec
stos
mov
jno
andl
xchg
pop
pop
mov
pop
mov
addr16
movsb
push
hlt
rcll
rcl
mov
jb
fwait
inc
rcr
cwtl
hlt
lds
scas
insb
xor
sbb
cmpsb
inc
jns
inc
dec
push
test
mov
les
fimull
adc
loope
xchg
jno
push
daa
sbb
mov
sub
push
push
and
xchg
push
in
insb
je
sahf
jno
mov
adc
int
jb
xor
gs
bound
pop
or
cwtl
das
lret
push
sbb
popa
push
js
inc
sti
mov
xchg
push
push
leave
shrl
enter
push
mov
aas
sub
shll
pop
in
rol
sti
jmp
out
cmpsl
jne
and
mov
jnp
ficomps
inc
loop
push
enter
aam
lahf
xchg
jo
sbb
adc
mov
fstp
andb
outsb
add
or
mov
pop
cmpsb
xchg
mov
mov
movsl
ja
rol
out
leave
pop
pop
rorl
loop
adc
jle
jnp
xor
jmp
sahf
inc
mov
inc
cmpl
fnstenv
push
and
jo
cmp
aaa
stos
arpl
orb
ret
jle
push
sub
repnz
loope
das
lahf
add
pushf
push
adc
iret
jmp
std
mov
out
pop
sbb
int
clc
mov
mov
int
push
mov
lock
shrb
andps
xor
sub
dec
adc
push
pop
loopne
jle
mov
pop
nop
adc
in
sbb
cmp
push
pop
mov
and
mov
icebp
mov
lret
or
sahf
inc
addb
imul
dec
loop
mov
push
loopne
and
push
mov
and
test
sbb
sbb
mull
fdivrs
int3
xor
mov
adc
dec
jno
jnp
cmp
int
jbe
sub
mov
mov
mov
outsl
mov
or
pop
mov
cmp
adc
call
sahf
div
and
sub
mov
mov
cmpsb
imul
sbb
dec
addr16
mov
sbb
jne
fidivl
adc
sub
lods
lret
sbb
mov
adc
cld
sbb
push
push
fs
dec
movsb
insl
rep
mov
jge
xchg
imul
lods
frndint
push
mov
mov
mov
stc
call
push
push
fdivrs
jg
iret
inc
test
xor
mov
inc
mov
xchg
pop
mov
xchg
mov
lret
inc
fisttpl
sbb
dec
pop
add
jl
jp
std
inc
lods
pop
mov
daa
jbe
add
hlt
inc
push
aas
mov
dec
push
imul
in
addl
ss
xchg
sbb
in
push
mov
sbb
add
jge
shl
gs
call
xchg
into
lret
or
loopne
mov
cld
test
or
add
movsl
fidivrs
jnp
adc
js
jmp
push
pushf
jl
xlat
cwtl
xchg
js
out
lahf
xor
sbb
scas
mov
arpl
ja
ret
std
jmp
jecxz
jl
xchg
mov
lret
pop
fisttps
ja
jns
ss
int
mov
and
dec
xchg
jecxz
push
jmp
dec
cld
sub
aam
movsl
insl
lret
lret
inc
cmp
or
inc
test
add
push
push
mov
jnp
bound
xchg
lahf
mov
mov
jbe
stos
loop
mov
addr16
pusha
sub
lret
push
mov
adc
adc
jno
pop
ret
xor
xchg
sbb
jg
lods
mov
jle
mov
jle
repz
or
mov
movsb
add
mov
sub
add
ljmp
pop
or
ret
or
sub
cmp
cmp
inc
jle
popf
inc
pop
dec
fdivr
sbb
loope
push
inc
or
pusha
push
inc
test
and
mov
and
fistl
inc
mov
icebp
testl
lret
jb
test
xor
rorb
out
test
int
lods
push
xor
je
add
jmp
lret
enter
lret
pop
cmpsl
mov
pop
inc
jae
xlat
ja
push
mov
dec
sti
inc
push
and
call
jmp
outsl
in
mov
jmp
fcomip
mov
jbe
es
cmp
dec
das
pop
std
jbe
jbe
ret
mov
shlb
jmp
es
pop
xor
push
dec
mov
movsl
test
fs
xchg
mov
fidivs
repnz
mov
data16
cld
out
mov
jo
sub
les
add
or
fwait
pop
mov
xor
rorb
sub
decl
mov
push
sbb
sti
psrlw
push
rcll
adc
lods
fwait
xchg
add
push
test
mov
imul
pop
mov
inc
das
je
and
cmp
pop
adc
jns
and
scas
or
mov
imul
push
sahf
mov
add
jp
test
rcll
or
repz
mov
pop
and
jge
xchg
adcb
test
data16
add
jle
sbb
xchg
add
mov
je
movsb
push
icebp
jle
or
daa
aam
in
mov
cmc
pop
out
imul
js
mov
ds
push
mov
adc
mov
and
repz
aam
cli
adc
mov
fimuls
test
mov
lods
xchg
xlat
add
test
adc
fwait
adc
bound
lods
push
push
jecxz
fadd
mov
jge
inc
jno
push
fistpll
inc
mov
test
andb
data16
inc
inc
das
ljmp
jle
insl
mov
mov
bound
rclb
leave
test
mov
xchg
imul
pop
push
leave
jb
mov
lods
orb
popa
mov
mov
lret
sbb
jne
pop
imul
lods
inc
xor
jnp
and
scas
mov
hlt
in
add
and
mov
add
scas
adc
ljmp
cmp
inc
mov
sub
pusha
outsb
and
and
jecxz
mov
mov
xlat
xorb
ret
and
inc
jns
mov
addl
xor
outsb
repnz
xor
push
in
inc
es
and
inc
aas
loope
mov
test
data16
iret
movsl
nop
adc
add
test
dec
pop
cwtl
xor
pop
lock
jg
pop
push
cmpsb
lods
jne
sbb
mov
pop
addr16
inc
cmp
jo
jge
loopne
adc
cmpsl
bound
adc
stos
fstps
cld
outsl
pusha
add
scas
dec
les
xchg
mov
imulb
inc
icebp
inc
push
inc
cmpsl
lret
iret
je
ljmp
cmpsl
adc
negl
push
mov
push
lahf
cmp
inc
push
pop
ljmp
icebp
xchg
leave
test
lret
pop
loop
sbb
pop
push
stc
out
test
repz
push
repnz
lcall
test
in
test
add
or
dec
aad
popf
in
popa
xor
sub
add
xchg
mov
push
or
daa
into
push
mov
sub
shll
jb
or
mov
push
sub
in
pusha
xor
inc
les
inc
jns
xchg
ljmp
aas
mov
push
ss
push
pop
inc
and
stos
imul
mov
cld
adcb
jne
iret
fsubrl
cmp
mov
pushf
jo
or
cmc
cmpsb
pcmpeqb
ljmp
out
push
sarb
cmpsl
xor
pop
loope
xchg
push
pop
pop
mov
das
scas
jecxz
mov
loop
fwait
repz
push
inc
shll
push
mov
pop
dec
outsl
mov
cmp
cmc
xchg
pop
es
loopne
shlb
sbb
and
push
cmpsb
lea
mov
test
orb
and
sub
pop
or
jo
pop
add
hlt
je
jp
push
xchg
cmp
pop
pop
mov
mov
and
jmp
pop
das
pop
cmpsb
xor
sub
insb
cmp
in
xlat
sbb
add
adc
clc
ds
dec
int
cwtl
mov
xchg
jb
or
pop
inc
mov
loop
jo
lret
and
dec
sbb
mov
in
rorl
push
push
aas
xchg
and
iret
loope
adc
push
adc
xor
dec
pop
xchg
repz
int
jbe
fdivl
icebp
orl
push
fldenv
cmc
adc
dec
cmpsb
in
out
sbb
mov
jb
dec
xchg
cmc
fld
fisubl
jns
ljmp
add
dec
cmp
ss
into
push
dec
jne
push
out
sahf
loop
lods
sub
add
push
push
les
push
pop
std
jns
sbb
mov
and
das
push
addr16
lods
jo
in
cmp
jp
and
in
ret
imul
mov
jne
mov
mov
inc
cmpsl
push
lcall
cmp
hlt
movb
push
lea
cmp
call
lock
dec
pop
mov
les
test
call
push
nop
and
icebp
add
xchg
ljmp
and
gs
sar
fidivrs
loop
test
dec
inc
sbb
mov
sub
mov
cmpsb
psubd
jns
inc
in
sub
dec
les
pop
sub
sti
xchg
add
xor
rcrb
and
sbb
sub
ja
jae
sub
dec
movsl
lret
pop
push
sub
xchg
lret
cwtl
mov
lcall
xchg
lods
push
pop
cld
test
daa
inc
addr16
ror
sbb
cwtl
push
dec
fsubr
into
lahf
fxch
popf
enter
lods
pop
jle
aaa
push
add
in
sbb
hlt
cmpsl
xor
loop
les
adc
pop
sub
test
mov
movsl
loope
and
pop
ffree
pop
sti
push
cwtl
fnstcw
shll
fldcw
or
xchg
cld
rorl
fdivrl
jge
mov
pushl
negb
fimuls
push
jns
push
ret
xchg
add
stc
and
insl
cwtl
mov
adc
into
cmp
xor
outsl
and
imul
fisubrl
iret
sub
jl
divl
xor
mov
pop
inc
and
push
mov
in
lock
and
xchg
sbb
dec
mov
sbb
cmp
js
cs
sarb
sbb
mov
push
into
sbb
ret
bound
inc
dec
cld
std
mov
fcoms
out
cltd
push
push
fstl
repnz
dec
cli
mov
pop
push
fsts
xchg
add
mov
inc
jg
inc
xchg
pop
movsl
jmp
cmpsb
in
call
clc
inc
ja
repnz
push
repz
enter
cli
outsb
lcall
xor
dec
push
call
leave
scas
sub
aam
dec
mov
xor
out
fwait
icebp
out
sub
jmp
addr16
jge
or
popa
and
cmp
jle
test
pop
mov
ficomps
arpl
push
movlps
fnsave
dec
imul
aad
inc
cmp
adc
pop
hlt
push
int3
xchg
push
adc
insl
leave
imul
dec
xor
stos
mov
sbb
adcb
or
adc
inc
pop
cmpsb
je
fcomps
or
negb
dec
rol
sahf
mov
xor
aad
push
addr16
mov
loop
xchg
cld
fstpl
jecxz
jns
mov
dec
inc
mov
pop
mov
fwait
dec
hlt
mov
xchg
popf
jg
test
add
pop
sub
nop
lock
in
out
xor
shl
adc
jns
in
loopne
adc
loop
or
push
push
mov
xrelease
and
int3
or
lds
mov
bound
xor
jmp
inc
adc
inc
xchg
jae
outsb
push
mov
pushf
jle
lahf
inc
and
add
or
push
je
sub
insb
test
add
fs
xchg
or
cltd
xor
shll
pop
lods
push
inc
movsb
xlat
cmpsb
adc
and
sahf
xchg
jecxz
sbb
lods
int
sarl
lret
mov
fsubs
cmpb
sbb
jne
cmpsb
ja
in
lret
mov
and
push
add
mov
cld
sahf
orb
stos
daa
sub
xor
stos
or
mov
jle
sahf
and
std
mov
jge
std
mov
mov
jae
mov
jns
popf
mov
xor
jns
cld
loop
fidivrs
bound
pop
push
mov
sti
subl
fadds
mov
into
push
or
mov
lock
jae
pop
clc
mov
and
jge
jl
mov
addr16
fsubs
cmc
dec
jge
mov
cmp
cmp
fwait
jnp
mov
enter
aas
xor
outsl
sbb
out
mov
lock
jmp
xchg
daa
push
sub
ja
inc
sub
call
lods
stos
add
icebp
push
les
scas
lods
or
lock
rclb
enter
ljmp
jmp
jge
pop
xchg
sub
dec
iret
rcr
out
xor
sub
cmpsl
jl
dec
ljmp
test
xchg
nop
lock
movb
adc
and
rcr
fisttpl
cld
sub
addr16
jns
add
mov
lret
aas
dec
imul
adc
negl
cmc
outsl
fsubr
mov
loop
mov
jle
lahf
aas
adc
cwtl
sbb
out
xchg
lds
repnz
jg
pop
push
jmp
dec
mov
mov
fwait
lret
and
or
repnz
ss
adc
cmp
pusha
push
adc
lods
xchg
das
push
pop
cmp
fs
mov
adc
mov
cmp
or
aad
sub
xchg
int3
sti
adc
cltd
push
rcrb
mov
out
and
stc
nop
cmpsl
aaa
adc
sub
js
lods
sub
test
mov
test
cmpsl
sub
jge
pop
pop
js
movsb
dec
adc
inc
scas
push
mov
mov
inc
cli
loop
fldcw
mov
jp
pop
xchg
ret
cmpsb
nop
sbb
testb
jno
pushf
inc
movl
out
xorb
cmpsl
push
fisttpll
arpl
imul
jmp
add
inc
jg
sbb
jno
push
mov
ljmp
loope
in
mov
push
or
push
mov
cmc
cmp
lret
cmp
push
xchg
cmp
inc
hlt
mov
in
or
testl
adc
or
je
or
sti
into
lods
sbb
das
ret
pop
repnz
lret
jle
cmpsl
ss
lods
lods
mov
add
call
sbb
clc
clc
bound
icebp
cmp
lods
cmc
fdivrs
mov
xchg
push
mov
jo
loopne
push
adc
pop
xlat
inc
in
imul
cmc
es
and
jae
int3
jmp
out
mov
imul
xchg
xor
pusha
imul
mov
xor
lcall
aam
lea
data16
loop
pop
fwait
cmc
cmpsl
push
inc
jle
push
and
push
fisttps
adc
and
push
inc
push
jno
cmpsl
inc
pop
mov
or
mov
fcmovne
mov
inc
fistl
sub
or
xchg
lret
dec
pop
shlb
cmp
xchg
rorb
pop
and
mov
rcl
mov
rol
in
call
dec
cmp
shlb
or
sub
xchg
call
push
stos
xchg
or
sub
pop
cmpsb
dec
fldenv
xor
inc
fidivrl
adc
test
pop
mov
pop
pop
add
fdivs
notb
cmpsb
sub
pop
sti
lahf
xchg
fwait
gs
push
and
js
gs
mov
push
sub
xchg
insb
int
pop
cwtl
adc
dec
es
or
aad
pop
xchg
adc
push
sahf
lods
or
pop
ja
in
lcall
jecxz
and
xor
ret
xlat
mov
outsb
test
ss
out
pop
cmp
clc
loopne
repnz
mov
inc
jle
clc
lret
loop
cmp
lahf
xchg
dec
dec
loope
pop
repz
cmpsl
lcall
dec
sub
fsubrl
addb
adc
and
imul
xchg
or
pop
fimuls
iret
test
in
nop
jae
mov
sbb
cmpsb
cmp
pop
inc
sub
lock
js
jl
adc
out
cmpsb
cmpsb
addr16
or
std
sub
push
xor
inc
push
xchg
js
xor
nop
inc
les
push
and
fwait
rolb
popa
pop
std
mov
scas
xchg
enter
es
lods
or
ds
sbb
adc
fistl
xor
mov
incl
jmp
cs
sub
or
and
bswap
ret
cld
mov
pop
mov
cltd
lret
inc
popf
xchg
xor
adc
add
mov
mov
into
push
push
data16
mov
lock
inc
mov
dec
inc
mov
andl
xchg
into
xchg
mov
fidivrl
mov
xchg
push
lods
into
pop
lret
loopne
xchg
aam
ja
scas
out
aam
pop
mov
cmpsl
jnp
xor
sub
rcrb
pop
mov
or
mov
aad
mov
test
and
movb
add
decb
ljmp
cltd
jge
xchg
sbb
fwait
es
push
mov
nop
xchg
fcmovnb
test
sarl
rorl
mov
mov
jle
fsincos
cmpl
out
mov
adc
aam
fimull
ss
push
sahf
rcrl
xchg
jne,pt
jnp
pop
cmp
shlb
mov
adc
mov
lods
lock
or
push
mov
stos
pop
jmp
jp
popf
or
mov
cwtl
dec
hlt
lock
popf
pop
pusha
cmc
xchg
loope
pop
es
add
mov
sahf
fistpll
insb
test
shll
inc
push
dec
xchg
adc
jno
loop
xchg
sub
xor
movsb
rorl
push
jg
loope
jno
inc
push
pop
push
stos
cmp
jmp
ret
sahf
dec
adc
fimuls
addr16
lret
pop
mov
jnp
pop
mov
add
sbb
mov
fcomip
sub
jecxz
dec
icebp
sub
gs
imul
test
jg
or
nop
jl
pop
test
loop
es
jne
arpl
dec
andb
xor
in
mov
mov
sbbb
movsl
insb
adc
fiaddl
popa
sbb
jl
iret
lock
imul
sub
jne
mov
outsb
inc
sbb
stos
add
inc
loope
cmpsl
mov
pop
mov
int
dec
xor
cmp
xchg
sbb
loop
add
mov
in
call
add
inc
xor
push
pop
jno
orb
fnsave
jno
arpl
and
or
in
or
inc
pop
jb
xor
add
inc
into
rclb
inc
mov
in
xor
jmp
outsl
sbb
cmp
jae
mov
sbb
cmp
or
andb
xchg
dec
sub
dec
add
sbb
jns
sbb
cld
movsb
xor
data16
fsubs
sbb
pop
aad
mov
dec
enter
imulb
lret
jge
movsl
push
rorl
mov
mov
std
push
mov
pop
and
sbb
std
test
cmp
pop
loopne
pop
adc
fdivrl
jb
cmp
rolb
addb
add
ja
pop
popf
out
jbe
cld
and
jg
xchg
lcall
out
mov
lock
xor
mov
dec
or
inc
pop
mov
mov
ds
jae,pn
or
xor
push
mov
pop
loope
jns
and
and
mov
clc
mov
dec
fbld
jecxz
and
add
inc
mov
cmp
setb
int
jmp
mov
pop
sbb
insl
lcall
sub
sbb
push
jbe
push
mov
sbb
addr16
mov
fnstenv
cmpsl
adc
jb
push
stos
subb
pusha
pop
mov
pushf
and
addr16
dec
xchg
adc
ret
negl
ljmp
in
nop
push
sub
fs
inc
std
push
inc
lea
xor
or
push
gs
ds
sub
push
cmpsl
scas
pop
pop
pop
mov
lahf
pop
aaa
das
xchg
rorl
call
mov
loop
fnstenv
xor
jns
test
ret
dec
jnp
out
cmp
mov
lods
xor
sub
push
mov
ljmp
xchg
and
imull
adc
insl
xchg
mov
mov
leave
test
add
mov
sub
pusha
shlb
pusha
adc
fdivl
jnp
js
and
ds
scas
jle
loopne
clc
xor
std
or
xlat
es
dec
ret
push
pushf
pop
mov
xor
push
jbe
inc
ja
sub
hlt
mov
cmpsl
pop
repnz
mov
mov
shlb
pop
mov
sti
jg
xor
push
mov
outsl
pop
mov
jno
leave
xor
loope
leave
push
mov
sub
arpl
je
fistpll
gs
mov
lcall
jnp
dec
inc
adc
mov
insl
mov
sub
fs
push
arpl
je
iret
inc
sub
pop
sub
cmpsb
or
inc
xchg
xor
cwtl
jnp
push
push
xor
push
insb
dec
cmp
pop
push
dec
adc
cmp
jae
mov
mov
inc
ret
test
add
inc
mov
clc
in
lods
mov
cmpsb
push
cltd
insl
test
push
pop
mov
sbb
clc
or
fstp
jo
xor
and
cmp
popa
gs
xor
cmp
jg
fsubrl
sar
mov
lahf
es
subl
jbe
iret
fbld
push
inc
adcb
test
pop
aam
ss
xor
enter
xchg
push
out
mov
mov
ret
clc
mov
les
push
push
shrb
mov
mov
test
xor
mov
fisubl
pop
mull
daa
gs
outsb
mov
or
cmpsl
testl
or
fs
sub
gs
pop
mov
lds
and
xor
in
dec
fnstenv
dec
scas
xchg
cmpsb
mov
in
and
hlt
inc
or
fs
int3
loope
insl
rcl
cmp
push
push
mov
and
and
std
imul
xor
mov
ja
sbb
clc
mov
shrb
out
cmp
fists
popa
icebp
jnp
mov
jge
mov
and
xchg
cmpb
jae,pn
addl
js
sub
call
or
test
outsl
roll
adc
lea
pop
push
icebp
adc
mov
cmp
pop
xor
cmpsl
sarb
shlb
idiv
mov
sbb
xchg
int3
jns
inc
cs
aaa
ja
or
jg
push
fcmovb
mov
jo
insb
out
sahf
fiaddl
sbb
mov
pop
sub
lea
push
clc
jbe
push
fidivl
inc
inc
xor
dec
and
ret
lcall
xlat
xor
je
and
dec
mov
mov
sbb
enter
cmp
add
test
mov
insl
lds
and
fldcw
xchg
add
sub
dec
call
add
mov
dec
stos
shrb
lods
ja
movsb
out
jno
ja
mov
in
cmp
jle
insb
sub
lcall
fdivs
call
out
inc
int
sti
mov
adc
xchg
add
xchg
in
push
xchg
sub
daa
int3
aam
fisubs
jg
sub
daa
loop
mov
idivl
pop
nop
repz
pop
pop
into
cmp
repz
test
loopne
dec
and
mov
mov
sub
cmp
outsb
xchg
std
dec
mov
pushf
push
xchg
dec
stos
clc
imul
mov
in
repz
aad
sub
pop
aaa
inc
fs
pop
lods
mov
std
cwtl
cs
dec
stos
pushf
sub
jbe
mov
and
inc
call
mov
outsb
mov
push
xor
pop
inc
lahf
add
hlt
mov
xor
xlat
lods
pop
repz
imul
filds
mulb
les
out
push
icebp
ljmp
fcompp
bound
fdiv
mov
dec
push
cwtl
inc
inc
jno
stos
jg
jb
or
mov
in
xor
xor
push
scas
push
jge
insl
out
out
mov
stos
mov
aaa
dec
jl
push
jnp
mov
pushf
add
mov
lock
xchg
lock
js
movsb
fdiv
pusha
jg
xchg
fadds
pop
jg
sbb
xor
not
sbb
lods
fidivrs
lods
ljmp
das
cmpb
sbb
sub
mov
sti
mov
pop
dec
lods
stos
xor
cmp
enter
jb
in
jb
xor
in
ds
lea
and
lcall
and
in
es
stos
jns
mov
adc
jb
pop
bnd
jle
mov
mov
nop
xor
xchg
xchg
jmp
dec
shl
out
inc
add
insl
or
mov
jno
sbb
mov
icebp
add
sti
cmc
push
inc
mov
ljmp
sub
stos
cmpsl
xchg
js
fiaddl
es
std
dec
ficompl
nop
push
lea
insb
lods
testl
out
mov
sub
xchg
pop
mov
shrb
subl
and
adc
mov
cltd
and
jae
in
loope
add
mov
mov
inc
adcl
inc
xchg
sbb
sbb
outsl
test
cmpsb
and
sub
xor
mov
mov
xor
hlt
push
xchg
and
add
jmp
and
in
mov
rorb
dec
or
sbb
fisttps
into
jbe
std
iret
call
clc
add
inc
roll
or
mov
arpl
mov
xchg
inc
xchg
in
scas
out
xorl
inc
loop
mov
jno
cmp
push
dec
mov
sbb
mov
lahf
sub
inc
sbb
scas
cltd
scas
int
xor
dec
inc
mov
filds
push
ficoms
fldl
int
sub
jb
pop
test
adc
adc
mov
test
sbb
sub
push
repz
cmp
inc
push
mov
adc
repz
and
sbb
adc
fsub
xchg
mov
mov
mov
mov
add
mov
ror
xor
out
push
test
aad
pop
lret
jns
out
jmp
movsl
sub
jl
dec
add
daa
and
iret
pop
mov
repnz
fdiv
inc
nop
mov
mov
stos
bound
cmp
xchg
ss
mov
mov
lahf
jbe
pusha
add
push
pop
mov
ljmp
mov
incb
test
outsb
inc
fsubl
push
shlb
lret
stos
cmpb
shr
adc
sti
aas
add
in
scas
dec
push
xchg
xor
sbbb
mov
test
fldl
jns
mov
jns
adc
loopne
cmpl
sbb
je
xor
js
subl
jmp
dec
fildll
das
cmp
adc
jge
out
aas
xchg
mov
xor
cmc
int
mov
xchg
pop
and
lods
inc
jecxz
in
xchg
sbb
outsl
shl
jmp
rorb
mov
aaa
popa
mov
cs
aad
lret
inc
loop
fsubrp
pop
fisubl
cwtl
jno
inc
gs
xchg
test
loopne
sbb
push
mov
push
xchg
cmpsb
fs
and
arpl
stos
lods
lock
shll
cmp
lock
xchg
mov
addr16
in
icebp
jnp
gs
xorb
mov
inc
push
scas
cmp
das
inc
gs
or
or
mov
jnp
dec
pop
xor
in
outsl
cwtl
fimuls
ret
inc
popf
mov
lock
mov
mov
push
xchg
es
adc
pop
sbb
jl
mov
push
mov
mov
fwait
loop
dec
pop
mov
xchg
inc
inc
add
cmc
pop
adc
movsb
es
mov
pop
test
xor
mov
and
sbb
mov
call
and
jno
popa
xchg
sti
xor
out
orl
lahf
dec
imul
xor
adc
insb
loop
iret
rclb
icebp
adc
mov
jb
pop
cmp
push
push
adc
push
sbb
lea
jo
mov
xlat
mov
arpl
adc
inc
fadd
ja
lret
lock
outsl
jno
cmpsb
push
add
and
jae
pop
out
insl
cmpsl
lock
call
daa
leave
mov
lea
mov
push
sub
pushf
in
xchg
test
push
jmp
outsl
and
add
popa
nop
cmp
mov
cltd
imul
scas
mov
xlat
xchg
nop
outsl
xor
add
les
jge
popa
movl
mov
pusha
or
adc
and
mov
fldcw
xchg
mov
or
mov
xorb
jbe
mov
mov
bound
fists
mov
sbb
dec
fildl
mov
fidivs
gs
inc
ljmp
addr16
cmc
pusha
cmp
xchg
jp
aaa
ja
cmpsb
in
xchg
cmp
jbe
sti
and
cld
mov
rol
cmp
cmp
xchg
inc
jns
jp
xchg
and
lods
std
fdivs
push
test
leave
imul
in
jo
push
xchg
inc
mov
enter
lock
mov
fmul
rcl
cmp
je
push
pop
pop
fadd
jnp
xor
cmp
inc
mov
inc
fimull
sub
cmp
arpl
xor
jo
jbe
cmpl
into
icebp
cmp
xor
mov
push
enter
push
pop
or
cmp
test
inc
dec
sbb
lcall
loopne
push
and
sarb
mov
lods
lock
fldl
cs
cmpsl
xor
and
iretw
jne
pop
mov
insl
pop
fcmovbe
sar
insl
inc
scas
lods
sti
and
push
push
xchg
dec
and
int
mov
xchg
push
outsl
mov
push
mov
test
js
clc
push
mov
mov
aas
sbb
cmp
out
fs
mov
xchg
clc
adc
dec
jmp
add
mov
jmp
mov
or
bnd
icebp
and
push
hlt
loopne
and
lds
iret
aaa
fstp
loopne
push
fyl2x
stos
jle
jbe
lea
xchg
and
pop
pop
mov
sti
pop
cmp
ds
addl
mov
pop
cmpsw
xchg
or
out
jmp
stc
in
flds
mov
sbb
dec
fimuls
lods
jle
ret
fistpl
sbb
jns
fst
cmp
test
mov
js
cmp
add
inc
insl
jle
cmpsl
mov
sarl
sub
mov
icebp
or
sbb
xchg
popf
mov
xchg
pop
jbe
mov
pop
xor
mov
mov
adc
xchg
sbb
in
push
inc
cltd
scas
fldt
jae
cmp
insb
ss
adc
and
ret
dec
out
dec
inc
or
xchg
xchg
cmp
and
outsl
xchg
and
lods
sbb
setne
jecxz
push
push
and
jne
popf
sbb
fmull
jno
in
lds
into
dec
lods
movsb
aaa
and
repnz
sbb
mov
push
ficoml
movsb
push
mov
sbb
movsl
mov
mov
aad
sub
mov
pusha
add
into
add
ret
enter
stos
out
pop
mov
lret
push
imul
shrl
ds
push
mov
adc
push
cmp
div
test
out
cli
cmpsb
pushf
sbb
ret
adc
fmul
inc
lods
lods
push
leave
add
lds
clc
push
ss
and
push
outsl
inc
inc
pop
outsb
int
pop
pop
out
mov
jne
in
call
dec
sub
mov
mov
clc
ret
jmp
cld
push
jbe
push
xchg
fildl
out
push
ss
push
mov
cmpsb
imul
in
arpl
push
jl
pop
shrb
out
mov
pop
lods
mov
mov
inc
repz
adc
mov
iret
insb
mov
je
add
outsb
sub
daa
shll
sbb
adc
dec
inc
xchg
sub
sbb
out
lret
sbb
repnz
into
mov
insb
scas
pop
adc
or
jle
popa
sbb
std
imul
insl
mov
loop
xor
mov
xchg
es
bound
push
cltd
sahf
aas
and
mov
lods
cmpsb
and
dec
jnp
aaa
cmpsb
stc
das
mov
jmp
dec
mov
push
xor
mov
push
daa
cmp
xchg
xchg
or
hlt
pop
and
mov
mov
dec
mov
sbb
push
mov
test
cli
mov
jae
jno
and
ret
push
or
adc
out
rcl
mov
cld
fs
mov
sarb
outsl
mov
loopne
push
lret
daa
jge
adc
lret
pop
fldt
ret
test
jg
cmovbe
test
add
inc
repz
daa
bound
in
dec
fnsave
sahf
jbe
mov
jle
hlt
hlt
popa
and
cld
jns
or
clc
pusha
test
or
cmp
addr16
in
mov
push
cmp
mov
jg
or
je
or
adc
jge
and
and
fisttps
repz
mov
or
in
in
push
fs
insb
rorb
mov
adc
xor
loop
in
outsl
outsl
xchg
cmp
sbb
test
jo
addr16
pushf
inc
add
jmp
adc
into
jne
push
loopne
inc
sti
adc
scas
cs
lret
dec
inc
jo
xorl
inc
fistpll
fsubs
imul
mov
flds
pop
lods
adc
ret
sub
xor
push
pop
outsl
lcall
setle
cmp
lods
sti
sub
xchg
pop
test
call
sbb
repz
pop
xchg
jnp
lods
dec
mov
in
out
or
mov
pop
xchg
xlat
imul
ja
test
lods
sar
xchg
inc
mov
leave
xor
in
fcmovbe
dec
into
fnstsw
mov
mov
pop
es
mov
jno
enter
jns
and
xor
inc
push
in
pop
int3
pop
and
insl
int
dec
push
fwait
push
sbb
mov
daa
jns
mov
fcmovu
lcall
pop
jbe
shlb
popa
popf
mov
rcl
addr16
lea
xor
shll
cmp
cwtl
aas
lds
inc
int
les
adc
in
xor
sbb
jp
cmp
shlb
inc
clc
jno
inc
mull
mulb
out
test
pop
dec
rorl
sti
in
or
adc
aad
xchg
aaa
xor
repz
lret
xor
mov
dec
adc
inc
cli
or
loopne
fstpl
sub
cmpsl
cli
push
mov
xchg
mov
bswap
hlt
inc
icebp
imull
mov
sti
jmp
pop
ljmp
stos
sbb
aam
mov
and
add
mov
push
push
cmp
push
iret
mov
cmpl
pushf
cmp
andl
sbb
js
inc
push
into
inc
cmpsb
add
pushf
fs
cs
js
cmpsl
add
mov
inc
mov
cmpsl
and
fisubs
mov
jnp
addl
outsb
push
xor
pop
and
push
add
push
mov
testb
adc
lret
inc
pop
pop
js
pop
dec
mov
in
xor
xchg
jnp
lods
pusha
mov
fldl
out
adc
push
and
cmp
mov
and
aad
push
mov
mov
ss
repnz
sub
inc
ja
push
jle
ja
jmp
test
or
loop
das
sub
push
xor
sahf
sbb
adc
lcall
add
ja
jmp
push
testb
lea
cmp
mov
xor
dec
fcoms
push
movsb
outsb
into
repnz
cmovle
and
mov
cmp
lea
pop
pop
add
cltd
add
lret
scas
daa
inc
cwtl
cmpsl
sub
jge
xor
scas
mov
sub
and
ret
jns
or
fadds
sbb
and
gs
fwait
loop
jp
int3
in
in
adc
cmp
mov
mov
les
adc
dec
fdivrs
mov
push
mov
lds
imul
and
mov
pusha
outsl
gs
jae
sbb
test
out
lret
int3
sub
jp
or
idivb
mov
xchg
or
cli
xor
xchg
stos
repz
call
loope
ds
add
mov
lock
insl
xchg
lahf
cld
mov
stos
xor
mov
nop
sahf
adc
in
or
and
push
shl
inc
jle
lret
pop
sub
cld
inc
ds
enter
inc
ret
mov
mov
in
hlt
popf
sbb
and
lds
push
jp
movb
imul
imul
jnp
mov
insl
cmp
mov
mov
ljmp
xchg
pop
mov
xchg
fs
lea
mov
insb
sbb
push
out
adc
mov
imul
mov
xchg
pop
movsb
imul
and
into
stos
mov
xchg
inc
pop
xor
cs
cmovg
outsl
adc
fdivrs
insb
ja
cmp
stc
clc
and
insl
xor
inc
adc
cmp
shll
pop
add
xchg
xor
fistpll
mov
pcmpeqb
mov
fimuls
inc
nop
mov
jge
or
lods
mov
inc
add
icebp
mov
shll
inc
movsb
je
jns
pop
popf
inc
clc
mov
pop
adc
or
clc
sub
arpl
fwait
into
fisttps
sub
sub
pop
jbe
out
mov
pusha
das
out
push
sbb
fsubl
add
xchg
or
jns
mov
pop
xor
in
or
arpl
add
sub
mov
xchg
insl
xlat
inc
xlat
jno
popa
ss
xchg
cmp
adc
mov
aad
arpl
lcall
rolb
or
jae
imul
mov
push
add
add
sti
icebp
xor
adc
xchg
sub
pop
dec
pushf
push
lret
pop
push
into
jne
xchg
fistl
hlt
push
mov
push
fstpl
inc
mov
mov
adc
fwait
jle
popf
mov
lahf
lds
out
inc
pop
xchg
out
mov
cmpsl
addr16
es
mov
faddl
dec
mov
mov
mov
push
jg
adc
cmp
outsl
cmp
popf
add
fs
mov
mov
icebp
hlt
movsb
cmp
bound
jg
jl
sar
test
mov
mov
jl
test
cmp
std
aaa
push
sbb
pop
insb
negl
xchg
cwtl
and
mov
pop
test
mov
jmp
pop
pop
cmp
cmp
lret
jb
add
or
shrb
stc
push
pop
sub
mov
lods
inc
push
nop
cwtl
sbb
insb
mov
mov
jb
sbb
and
mov
or
mov
mov
xor
sbb
dec
dec
push
and
pop
gs
stos
js
mov
repnz
loopne
pusha
sbb
and
push
jo
pop
lea
imull
inc
sub
ret
negb
xor
out
mov
loope
cwtl
mov
xchg
xchg
and
gs
shlb
add
and
xor
push
pop
mov
push
inc
mov
lods
adc
inc
lahf
adc
jmp
sbb
daa
mov
enter
jp
pop
aad
inc
sub
inc
mov
xchg
test
add
leave
sub
sub
dec
insb
mov
leave
sub
mov
mov
in
add
sub
mov
in
add
insb
mov
in
jnp
xchg
dec
pop
fcoml
push
aam
inc
mov
loop
scas
sub
xchg
sub
fdiv
and
ss
in
inc
dec
loopne
dec
ja
lods
jne
push
test
and
inc
push
fimull
sub
inc
xchg
stc
ficoms
cwtl
cmp
cwtl
in
push
cmp
cwtl
fsubp
push
sub
mov
xchg
mov
mov
xchg
enter
push
enter
lods
pop
add
dec
lret
jg
or
sbb
lea
fwait
in
mov
cmp
mov
adc
fimuls
mov
xchg
xchg
xchg
mov
std
push
adcl
popaw
repz
iret
outsl
jmp
mov
jl
sbb
xor
jne
ficomps
stos
call
xchg
out
in
sbb
test
cmpsl
sbb
and
sbb
imul
inc
icebp
sub
ret
sub
daa
sbb
in
lods
repnz
les
fadds
jns
ljmp
push
outsl
xchg
adc
push
arpl
fs
xchg
sbb
loope
inc
push
mov
movsb
adc
inc
push
movsl
push
xchg
movsl
call
push
leave
xchg
fidivl
mov
sub
cld
push
out
adc
stos
iret
vmulss
movsb
inc
lret
dec
mov
outsb
mov
dec
xor
orb
cmp
out
rcr
xchg
lret
mov
sub
cmp
ret
int
rorl
xor
inc
mov
stc
shr
push
stc
jmp
std
cmpb
call
stc
jno
sub
push
fsubl
das
cmc
adc
call
test
int3
dec
inc
aaa
movsl
popa
jle
lods
mov
sub
jp
pop
jbe
loope
pop
adc
imul
ficoml
insb
stos
mov
mov
or
jmp
jecxz
bound
xor
dec
lahf
divb
cmpsb
test
xchg
mov
xchg
jbe
shr
and
xlat
mov
insb
push
clc
in
fimull
mov
fcomps
jge
lret
repz
fsubrs
inc
aad
je
cmpsb
out
fcmovbe
cltd
add
jl
push
lret
adc
sub
ficomps
pop
pop
jge
int3
sub
sahf
lods
dec
inc
out
add
into
jnp
cwtl
inc
jmp
addr16
repnz
shlb
ret
call
stc
cmpsl
es
scas
imul
dec
add
push
add
bound
and
or
bound
push
push
push
or
std
out
insb
std
das
sub
sbb
jmp
pop
test
and
mov
sahf
inc
mov
sbb
aad
mov
pushl
fld1
fisubrs
daa
rcll
je
jb
jnp
scas
dec
or
mov
aaa
sbb
mov
lcall
lods
mov
dec
fdivs
out
sub
add
xchg
stos
call
test
and
add
stos
insl
dec
xchg
sub
lds
out
add
xor
call
mov
cltd
xlat
mov
les
mov
inc
push
movsl
scas
addr16
in
ljmp
pop
das
xchg
and
cmpsl
bound
sbb
pop
imul
sbb
dec
xchg
call
cltd
adc
mov
mov
data16
cld
pop
mov
into
aaa
sbb
int3
mov
mov
add
mov
pop
repz
xor
xlat
cmp
mov
add
cmp
loopne
loopne
scas
and
pop
xchg
dec
dec
push
inc
dec
sub
mov
ret
and
mov
loop
es
repnz
xchg
mov
sub
pushf
adc
fimull
pop
orb
popf
inc
mov
addr16
dec
xor
mov
loop
das
subl
cld
push
fcoms
popa
inc
mov
mov
fistps
clc
jns
jno
das
insl
xchg
sub
loop
call
mov
xor
push
test
or
loop
js
pushf
iret
jg
mov
xor
leave
cmp
add
dec
ja
out
inc
cmp
cmpsl
and
mov
lea
insb
lahf
inc
mov
jle
das
push
mov
dec
xchg
ds
repnz
inc
add
ret
mov
das
push
pop
out
ret
dec
dec
or
lock
or
ja
sarb
mov
inc
mov
push
daa
xchg
fidivl
ljmp
inc
mov
mov
pop
mov
cmc
cmp
sbb
idivl
jo
dec
int3
mov
and
sub
sub
sbb
mov
stos
movsl
mov
hlt
push
dec
push
int3
push
cmpsw
mov
rcrb
inc
vdivss
jle
jge
ret
mov
gs
ret
leave
movsl
popl
cld
repnz
cmp
inc
add
es
gs
jne
outsb
inc
or
lret
sbb
pop
movsl
xchg
add
fwait
decb
dec
pop
popa
mov
ss
shrb
lock
sti
sbb
adc
add
pop
xchg
fcomp
test
push
pop
sub
loopne
cmp
enter
pop
pop
jmp
les
add
movsb
cmp
dec
in
push
stc
pop
mov
repz
inc
dec
mov
int3
push
dec
into
daa
popf
sbbl
mov
pop
ja
adc
movsb
int
cmpsb
or
dec
and
je
loopne
cmpsb
in
adc
test
push
int3
inc
hlt
sub
or
add
mov
test
aam
xor
mov
sbb
hlt
and
cmp
fldenv
inc
mov
mov
fsubl
in
mov
scas
in
dec
mov
js
mov
pop
insl
clc
jbe
clc
mov
mov
orb
gs
pop
scas
and
and
mov
je
ja
cli
mov
ret
arpl
ja
pop
xchg
lret
shrb
movsl
lods
rep
dec
add
mov
cmp
mov
push
adc
xchg
imul
pusha
das
sahf
adc
test
in
sbb
sahf
ficompl
xor
int3
mov
in
inc
push
jne
dec
fstpl
test
pop
out
cmp
cmp
lock
fcmovu
dec
ret
mov
mul
enter
adcl
inc
in
mov
imul
outsb
xlat
dec
rcll
xor
mov
lds
test
movsb
cmp
push
lea
out
cld
dec
int3
inc
mov
sub
sbb
jg
and
stos
sbb
enter
out
dec
shl
bnd
mov
mov
push
rcr
push
or
xor
movsl
inc
out
js
ljmp
jmp
mov
loopne
jbe
jb
imul
cmp
leave
inc
sbb
inc
fdivrl
mov
call
mov
mov
les
or
jb
pop
out
jbe
movsl
jo
popf
push
mov
cli
loopne
loop
jb
lods
stos
ss
je
outsb
cmc
imul
jecxz
inc
aad
div
pop
push
adc
push
push
jg
xchg
push
nop
ljmp
mov
add
mov
icebp
cli
lcall
insb
popf
lock
std
in
adc
sbb
aad
ja
jp
xor
fstpt
lods
lahf
mov
push
cmpsl
outsb
mov
fmuls
mov
rcr
mov
loopne
and
out
int
test
enter
xchg
rcr
cmp
inc
out
loop
pop
nop
inc
rol
jl
loop,pt
mov
xchg
inc
mov
xchg
ret
mov
or
sbb
arpl
ljmp
ficoms
in
jge
push
pop
fadds
sub
jnp
inc
sbb
adc
movsb
shr
jo
xor
mov
mov
or
mov
addr16
insl
or
js
test
push
jb
test
sbb
imul
lods
mov
popl
loopne
aaa
add
push
xchg
mov
mov
clc
bound
pop
push
lods
pop
sbb
adc
xor
cmp
xchg
mov
adc
pop
inc
and
orl
and
jl
sti
fmull
sub
push
js
pop
cmpsl
inc
xchg
test
cli
push
pop
pushf
int
push
mov
and
rclb
sbb
ds
cmc
or
adc
xchg
inc
mov
mov
outsl
mov
push
add
arpl
imul
loopne
jne
daa
add
push
adcb
adc
loop
xchg
in
cmp
movsb
cli
addr16
lret
inc
call
mov
cmp
ss
mov
in
adc
add
mov
jp
mov
je
sbb
adc
enter
fcmove
xor
adc
cmp
dec
mov
cmpb
mov
dec
ds
cmpsl
jle
aas
push
enter
incb
out
or
cmp
mov
jmp
jg
inc
inc
repnz
mov
mov
enter
adc
hlt
cmpsl
popf
push
cmp
outsb
sbb
pop
pop
into
and
lds
mov
pop
es
fbld
xchg
dec
lock
adc
into
mov
jnp
pop
insb
lds
lock
int3
sub
mov
loope
mov
in
imul
enter
test
enter
cmpsb
jo
es
sbb
cmpsl
fbstp
cs
fiadds
cwtl
push
enter
adc
push
popa
cmp
sbb
push
loopne
adc
cmp
dec
out
test
mov
sbb
xor
mov
sarb
arpl
incb
lock
hlt
xchg
mov
mov
ljmp
pop
push
leave
dec
mov
sbb
jae
enter
pop
adc
and
cli
inc
cwtl
fnsave
fdivrs
fistpll
push
iret
dec
dec
xchg
xor
and
xor
lods
sub
iret
fiaddl
sahf
jb
cmpsb
es
inc
cmpl
mov
test
and
and
popa
mull
add
sti
inc
sbb
cmp
imul
mov
inc
and
addb
repz
cltd
mov
in
sub
jp
in
xor
jnp
subl
mov
iret
pop
sbb
std
xorb
in
in
and
sub
and
pushf
mov
inc
mov
xchg
aaa
sbb
loop
dec
into
cmp
int
cmp
jo
mov
das
inc
lds
pusha
xchg
leave
cmp
mov
gs
inc
adc
xor
popa
inc
cmp
mov
mov
popa
inc
inc
popa
cmp
push
push
movsl
or
push
push
test
mov
add
add
or
mov
loope
test
xlat
sub
in
mov
cmp
jne
xor
js
add
xchg
or
xchg
adc
and
std
cmp
pop
inc
mov
xchg
add
out
pop
pop
loope
insl
xor
add
out
daa
xchg
jecxz
in
push
mov
in
add
inc
or
sub
icebp
mov
pusha
in
mov
sub
xor
push
gs
pop
push
test
mov
jbe
out
movsb
or
cmc
mov
enter
inc
dec
loop
cmpsb
xor
test
and
pop
sahf
aam
jo
mov
arpl
nop
sahf
mov
mov
jle
mov
loopne
xchg
fdivrl
pushf
xor
jns
jo
inc
outsl
mov
jge
mov
lahf
sub
cmp
fisttps
jl
mov
dec
cmpsb
scas
push
or
push
xor
sbb
xor
xor
arpl
sub
roll
stos
ds
int
leave
sub
xchg
int3
dec
cmc
sbb
mov
mov
push
cwtl
inc
cld
mov
clc
add
rcrb
mov
jb
leave
subl
fwait
insb
sub
in
mov
mov
adc
js
mov
add
xchg
int3
mov
sub
xchg
or
aad
xchg
ds
push
aam
inc
pop
insl
in
insl
cmp
adc
jo
xchg
lret
insb
xorl
cmp
pop
icebp
pop
sahf
enter
insb
sbb
push
lds
rep
adc
ds
add
xchg
add
xor
aaa
ret
inc
les
fwait
sbb
mov
xchg
push
mov
and
mov
pusha
fcoml
mov
adc
addl
je
hlt
sarb
out
sbb
sub
sub
sub
leave
xchg
xor
and
xor
lahf
out
test
jmp
mov
dec
or
mov
xchg
pusha
jbe
cmpsl
mov
mov
lcall
lock
movsb
sbb
stc
push
xchg
out
mov
xchg
pop
rcrb
xchg
loop
cmp
pop
jnp
and
cmc
cmp
in
ja
adc
cmp
fstpl
sahf
pop
cmc
pushf
insl
cmp
pop
arpl
stos
or
push
xchg
jne
sarb
mov
cli
and
xor
pop
dec
push
fildll
jbe
aaa
push
arpl
jo
aaa
pusha
adc
fstpt
xor
mov
test
test
jecxz
push
rolb
dec
in
add
cmc
daa
xchg
add
popf
fmull
xor
xor
ret
rcl
adc
bound
pop
pop
shr
mov
pushf
jo
xchg
and
adc
push
and
stos
lea
aas
adc
fcomps
lods
push
and
add
sbb
and
push
pop
inc
pop
lcall
sub
data16
adc
movsb
xlat
icebp
xor
pop
inc
or
enter
push
fistpll
or
mov
sub
scas
test
test
sbb
push
jge
fiadds
or
cli
xor
pop
prefetch
aas
scas
mov
out
cli
or
mov
push
mov
addr16
push
repz
inc
repz
sub
jecxz
mov
mov
dec
popa
les
xchg
adc
and
sub
hlt
adc
sbb
icebp
sub
or
add
sub
mov
aam
shll
add
and
es
jne
xchg
or
mov
stc
or
outsl
pop
inc
in
call
or
sub
insl
sub
add
sub
mov
insb
subl
and
fisubrs
mov
jnp
push
mov
aaa
inc
jb
popa
sbbl
or
dec
xchg
cmp
jmp
pop
sahf
cmp
fistpl
pop
xlat
push
xlat
mov
push
shl
cmp
mov
dec
mov
lahf
and
push
pop
inc
inc
dec
scas
std
and
mov
cmp
push
pop
fldcw
push
stos
sbb
fs
pop
mov
inc
pop
fmulp
dec
hlt
dec
push
insl
mov
sub
mov
add
mulb
cwtl
push
xlat
push
inc
mov
sbb
push
xlat
les
mov
loop
dec
lds
and
idivb
lahf
dec
fcmovb
insb
adc
jp
maskmovq
testl
test
adc
scas
sub
repz
ja
cmp
mov
fdivrp
in
fildl
adc
push
xchg
and
test
sbb
jp
and
imul
xchg
cmpsl
sub
getsec
ret
int3
jbe
mov
cmp
mov
jle
fnsave
loop
idivb
mov
leave
sbb
loopew
xor
jae
cld
out
mov
cmpsb
jp
inc
inc
pop
test
sbb
dec
lods
push
fcmovb
dec
sbb
mov
push
fsts
push
das
adc
int3
mov
inc
scas
push
imul
jnp
pop
mov
push
push
jge
sarl
cmpsl
mov
fiadds
xchg
jb
dec
push
or
push
dec
cld
test
nop
jne
mov
loopne
push
pop
and
adc
scas
repz
xchg
mov
mov
mov
leave
adc
jns
imul
mov
stos
and
dec
popf
mov
repnz
inc
mov
enter
or
mov
fsubr
inc
cmp
sbb
mov
cmp
test
movsb
mov
aam
lcall
sahf
aad
popa
pop
in
jge
gs
movsl
add
xor
mov
daa
xchg
pop
fxtract
loope
lods
lds
leave
jmp
mov
push
cwtl
jecxz
and
outsl
push
xlat
cmpb
dec
shll
cli
stc
mov
adc
or
in
cli
xchg
nop
ret
jne
mov
or
mov
lret
aam
mov
xchg
xor
or
jno
inc
imul
aas
xchg
mov
sbb
mov
pop
fiaddl
rcrb
adc
and
xchg
cmp
xorl
in
movsl
xchg
cmp
pop
enter
lock
stos
and
jle
out
das
mov
pop
mov
mov
push
insl
xchg
scas
loop
mov
mov
xchg
lods
sbb
iret
mov
jmp
xchg
fsub
lea
test
or
sbb
into
rcrb
inc
mov
add
and
into
addb
push
inc
sbb
int3
mov
push
lods
ss
add
push
lds
xchg
cmp
adcl
dec
pushf
into
fs
pushf
outsl
mov
seto
ja
mov
and
aad
pushl
cmc
mov
or
dec
ljmp
sarl
cmpsb
ror
or
push
push
movsl
ficoml
adc
cmpsb
repz
jno
je
pop
ficompl
fmull
jne
loopne
lods
pop
ret
and
lods
in
or
push
push
or
fldenv
or
adcb
stc
or
add
test
out
push
sbb
cmc
push
push
or
xchg
mov
mov
mov
cs
and
adc
lret
inc
dec
sbb
push
addr16
aam
mov
sbb
adc
jbe
fmuls
add
or
inc
sbb
sub
fdivrs
pusha
test
fidivs
fdiv
fnstcw
lret
mov
popa
std
shr
mov
add
mov
std
int3
dec
sbb
in
cmp
push
iret
inc
outsl
fdivrp
sub
xor
jno
icebp
insl
cmp
arpl
gs
leave
icebp
fwait
pop
lock
inc
ret
xchg
movsl
jb
adc
pop
xchg
aaa
pop
cltd
psllq
xlat
gs
mov
std
push
repz
mov
fisttpl
cmp
jo
cmp
push
fsubrl
insl
dec
adc
xchg
and
jecxz
mov
popf
cmp
inc
in
xor
aam
mov
lcall
std
fisubrl
fsubrl
repnz
mov
das
push
add
aam
pop
jne
aaa
jae
jge
repnz
ret
nop
leave
cmp
push
cmp
sbb
testb
xor
insb
pop
fidivrs
jp
sbb
add
data16
push
pop
je
jb
push
jae
aam
cld
or
stos
or
outsb
adc
mov
jg
xchg
inc
cmpsb
jp
jo
add
and
mov
rclb
pop
fcompl
xchg
pop
sub
into
insb
sub
or
movsb
pop
mov
jg
out
dec
aam
test
mov
inc
mov
mov
loopne
inc
inc
cmp
mov
pop
out
push
dec
mov
inc
cld
outsl
mov
push
pop
minps
xchg
cli
and
push
sbb
or
into
jno
pop
push
loopne
mov
ret
fidivl
xchg
lds
add
test
shlb
out
jl
pop
dec
cwtl
in
dec
cmp
inc
in
ficomps
inc
cld
inc
std
sub
pop
stc
xchg
addl
pushl
and
das
movl
shl
adc
cmpsb
adc
jne
pushf
fsubrs
inc
add
mov
rcl
out
pop
push
mov
stos
sub
out
or
scas
xor
ja
add
jmp
fisubs
js
sbb
clc
ret
testb
stc
xchg
cmp
and
les
xor
pop
dec
je
notl
mov
adc
xor
mov
xchg
nop
pop
jl
jno
test
push
inc
add
repnz
dec
add
imul
stos
dec
jnp
inc
mov
mov
repnz
pop
inc
mov
nop
je
loop
mov
xchg
push
popf
imul
addr16
cmpsb
sahf
into
loopne
ds
ljmp
and
xchg
jbe
sbb
ret
mov
outsb
inc
and
fmull
iret
xchg
lds
mov
jmp
imul
into
xor
ret
push
clc
mov
das
movsb
cmp
add
jb
inc
aad
fnsave
and
je
imul
and
dec
sub
xor
adc
je
dec
pop
neg
xor
push
or
cmp
dec
adc
add
lret
ss
cmpsl
fcmove
xor
pusha
pop
sbb
stos
pop
out
push
sbb
xchg
mov
inc
push
sbbl
adc
fldcw
adc
hlt
ret
loope
sbb
fisubs
in
insb
jno
or
stc
pop
stos
inc
stos
addr16
in
fbstp
aas
xor
add
bound
push
inc
shlb
stos
rorb
fsubrp
pop
loope
aam
into
jl
lock
sub
and
aas
cmpsb
xchg
sub
loope
xor
pop
xor
pop
xlat
xchg
sub
mov
mov
xchg
scas
inc
adc
les
pop
inc
or
or
adc
mov
iret
sbb
xchg
fs
cmp
pop
mov
in
in
hlt
cmpsb
cmc
lock
or
jae
aad
stc
mov
mov
or
and
lds
pop
pusha
cmp
xchg
fisttpl
fisubrs
fwait
std
in
cs
or
jnp
sbb
mov
mov
pop
adc
dec
pop
dec
xor
sbb
lock
je
cli
push
loope
jns
mov
loope
mov
int
mov
sub
int3
mov
les
imul
inc
push
fdivr
jne
sbb
sbb
hlt
movsb
sub
or
ss
cli
leave
sbb
aad
mov
stc
bound
dec
test
dec
xchg
fcmovnb
ss
mov
out
loopne
lods
or
scas
sbb
ds
loopnew
push
mov
inc
dec
fwait
push
test
sbb
inc
xchg
pop
sbb
mov
mov
xchg
pop
push
lret
jb
cmp
repnz
push
pop
adc
sub
inc
sub
into
mov
stc
in
ret
xchg
dec
sub
xchg
pop
scas
or
add
mov
sub
xchg
dec
mov
mov
pop
js
ret
je
add
inc
mov
xor
inc
dec
int3
fadd
mov
pop
ss
mov
or
dec
nop
xor
clc
pop
push
sub
cwtl
mov
sub
jl
mov
mov
or
jno
xchg
jns
mov
shlb
rorb
or
not
shll
push
arpl
lret
push
mov
sub
imul
fistpl
push
loop
add
or
test
cmp
cmp
sti
fisttpll
shrb
fldenv
nop
ljmp
xor
mov
xlat
ds
jo
mov
mov
adc
pop
aam
pushf
leave
jae
cmpsb
cltd
les
nop
pop
lret
push
stc
in
sbb
mov
fiaddl
call
mov
hlt
outsl
or
sahf
mov
add
scas
jecxz
and
add
repnz
sbb
cmp
jno
dec
call
and
mov
scas
mov
icebp
sub
popa
aam
mov
sbb
test
push
lods
daa
mov
jbe
jmp
xchg
sbb
mov
push
jbe
mov
mov
jp
inc
decb
insl
adc
inc
out
inc
rorb
outsb
cs
cmp
mov
aad
sbb
adc
sti
cli
sbb
aad
je
or
inc
sahf
mov
pop
jecxz
mov
mov
or
aas
push
outsb
push
xchg
ret
pop
mov
sub
pop
movsb
xchg
dec
out
and
dec
rolb
pop
xchg
dec
mov
shrb
ret
repz
adcl
jg
int
loopne
es
xor
push
push
mov
xor
and
ja
mov
lcall
inc
popa
mov
sbb
mov
mov
rol
aaa
int3
sub
sub
ret
inc
adc
sbb
push
scas
dec
icebp
push
out
sbb
dec
push
mov
fcmovb
hlt
dec
mov
stos
mov
pop
stc
mov
inc
scas
je
push
push
jae
xor
xor
push
sbb
fistpl
enter
sub
sub
inc
jne
push
inc
sahf
je
sbb
and
hlt
sub
add
adc
mov
icebp
pop
inc
push
sub
dec
mov
inc
addr16
enter
cs
scas
sahf
les
scas
mov
push
clc
mull
test
pushf
popa
dec
adc
scas
call
cmc
fstp
dec
mov
repnz
add
test
cmpsl
pop
or
lock
add
aas
pop
aad
mov
cmc
jecxz
inc
in
shll
repz
or
lahf
sti
xchg
sub
jmp
icebp
jo
or
jo
cmp
addl
sub
cmp
aas
lods
xor
mov
enter
add
in
push
dec
sbb
mov
scas
cmp
jne
test
dec
fcompl
cmp
mov
dec
aam
test
sub
jno
mov
cmpsb
jecxz
xchg
xor
adc
sahf
das
sbb
das
mov
sbb
add
lods
mov
jg
popa
andl
jo
test
xchg
inc
sbb
cmpsb
lcall
sbb
xchg
mov
sub
hlt
jp
insl
inc
fcmovbe
ldmxcsr
dec
sbb
cs
inc
cmp
iret
imul
jecxz
adc
add
adc
mov
fwait
dec
test
sub
movsb
xor
nop
push
jo
pslld
pop
sub
xor
or
sub
dec
loope
lds
dec
add
cmp
fs
adc
push
stos
sub
dec
and
inc
jp
mov
inc
nop
lret
push
in
push
pop
xchg
inc
cwtl
out
cmc
stos
inc
adc
call
insl
sbb
pop
ret
dec
outsl
in
mov
stos
mov
cmpl
daa
xchg
mov
jbe
mov
orl
sti
hlt
or
and
rorb
mov
add
add
mov
mov
inc
int3
adc
sub
std
jg
das
cmp
loope
cmp
ss
call
and
lods
inc
out
or
sbb
cwtl
std
lods
adc
iret
sbb
enter
mov
addb
test
xchg
xchg
mov
xor
mov
mov
adc
jg
pop
mov
scas
lock
xchg
xor
push
inc
cwtl
movsb
sbb
cmp
push
push
test
push
fucomip
cmp
imul
std
scas
xchg
stos
dec
imul
cmc
jbe
xor
cs
pop
jle
stos
sub
shl
cmp
cmpl
and
decb
pushf
lea
xchg
pop
ds
sbb
push
faddl
mov
and
int
data16
sbb
test
or
repnz
mov
xor
popa
arpl
shrl
jmp
int3
add
dec
ljmp
shll
mov
jmp
sbb
loope
iret
or
dec
jmp
loopne
and
fbld
cmp
push
pop
sub
push
rcrb
subl
fisttpll
jne
inc
xor
and
lods
mov
pushf
inc
or
rclb
fldt
ljmp
mov
and
insb
and
push
je
nop
in
sbb
insl
mov
mov
leave
insb
inc
cmp
dec
inc
xor
addr16
xor
out
or
xor
idivl
in
popa
mov
push
cs
aad
inc
dec
mov
jns
mov
pushf
icebp
icebp
xor
shll
mov
xlat
ds
and
jne
js
push
add
inc
mov
test
mov
fs
roll
inc
sbb
pop
sbb
fistpll
into
xor
lret
gs
stos
cmp
cmpsb
mov
push
hlt
jmp
sarb
xchg
cmp
stos
or
int3
dec
adc
cmc
scas
iret
iret
mov
push
rol
rol
cmp
aad
pusha
cmovno
arpl
mov
nop
fistl
sub
inc
mov
int3
int
push
mov
lock
dec
or
ret
xor
mov
loope
add
cmp
pop
aam
adc
and
jg
pop
sub
stc
lods
je
xor
pushaw
loop
into
fstps
sub
mov
flds
dec
add
daa
mov
jno
cmc
dec
ds
sub
lods
mov
std
mov
sub
loopne
push
and
fists
das
push
ret
ja
imul
adc
lock
dec
add
xor
jne
test
and
sahf
scas
mov
into
fwait
imul
cli
js
xor
mov
fistl
sub
fisubl
cmp
xor
insb
ret
fdiv
insl
imul
mov
scas
aas
inc
rcrl
mov
lock
xchg
push
xor
sub
xor
or
jg
in
loop
inc
addr16
inc
mov
pop
insb
push
in
pop
in
dec
mov
push
dec
ret
jmp
and
mov
mov
test
xchg
adc
jae
arpl
pop
mov
lret
fidivl
cmc
out
or
aaa
cltd
out
jl
or
and
cmpsb
call
xchg
push
fldt
cmp
adc
js
push
fldl
adc
mov
jp
in
mov
dec
jb
sub
xchg
sbb
jecxz
outsb
rcrl
daa
jo
repnz
fwait
add
cmp
adc
jns
ljmp
imul
xor
in
dec
ds
mov
cmp
xchg
and
xlat
inc
mov
xchg
aad
movsl
shrl
ret
xchg
outsl
sbb
in
jbe
movsl
jmp
ret
std
test
mov
lret
add
dec
adc
mov
repz
addr16
scas
movsb
pslld
mov
or
repnz
jo
out
adc
dec
push
outsl
shlb
sbb
dec
mov
mov
and
add
ficoms
test
cltd
push
and
test
jecxz
cmp
rol
dec
sbb
ja,pt
or
xchg
cmp
shrl
into
test
ror
test
sub
in
cmp
stos
sarl
jg
inc
std
js
fs
pusha
inc
mov
mov
leave
dec
outsl
and
loop
bound
cmp
or
or
into
int3
adc
add
inc
xchg
cmp
cwtl
sub
sbb
pop
adc
jge
mov
pop
cld
and
jo
insb
mov
scas
mov
mov
imul
aam
add
or
aaa
idiv
and
inc
mov
xchg
pop
mov
mov
outsb
xchg
xchg
mov
push
loopne
in
xchg
mov
dec
sbb
test
rcll
insl
xlat
dec
movsl
jbe
mov
adc
stos
jno
out
lock
sahf
add
xchg
rorb
add
clc
mov
pop
ss
cwtl
sub
imul
cmp
adc
xor
and
mov
sub
pop
sbb
jp
jmp
pop
inc
mov
cmp
subb
enter
aam
lods
adc
incl
fst
jecxz
movsb
adc
xor
pop
popl
into
stos
xor
cmpb
pop
std
lea
add
xor
fidivrs
xchg
iret
in
push
xlat
call
push
mov
movsl
je
jbe
daa
jecxz
fistps
dec
sar
sub
mov
mov
cmp
jmp
data16
push
push
loopne
gs
jecxz
into
mov
jae
mov
ja
inc
push
add
cmp
push
dec
push
and
sbb
push
lret
in
movsl
push
inc
addb
push
mov
mov
and
cmpsb
jno
nop
xchg
xor
in
insl
push
sbb
cmp
xor
loope
or
jmp
ljmp
mov
loop
stc
fiadds
inc
pop
dec
sbb
push
xchg
inc
and
or
test
nop
hlt
faddp
xor
push
pop
popf
inc
lahf
loop
hlt
cmpsl
sbb
rorl
cmp
and
adc
xchg
roll
out
js
rolb
jmp
fsub
inc
inc
or
sub
pop
push
inc
aam
shlw
add
xchg
fisubrl
in
push
xchg
scas
cmp
cmpsb
mov
in
gs
stc
sub
orl
icebp
adc
daa
lret
jecxz
jno
sbb
cltd
ds
stos
xchg
sbb
push
mov
cmp
inc
das
adc
faddl
pop
divb
push
xor
xchg
and
cltd
rcll
out
int3
inc
sub
cltd
in
ficoms
inc
or
sub
mov
or
xorl
add
mov
or
notb
jge
call
cwtl
sti
std
adc
sbb
testb
int3
daa
outsb
lea
pop
xchg
xchg
clc
sub
adc
cmpsb
xchg
cmc
rorl
mov
push
int
clc
das
pushl
or
or
mov
shl
adc
inc
sar
addb
jg
pop
add
cmp
fiadds
lods
push
les
aad
cmp
sahf
push
pop
lcall
stos
pop
ja
push
cmp
dec
dec
push
mov
jno
lret
insb
jb
stc
sbb
push
mov
outsb
xor
dec
lock
popf
into
aaa
jne
arpl
mov
dec
add
sub
movsb
mov
xchg
pop
arpl
mov
pop
mov
pop
std
scas
scas
pop
jae
and
js
and
cltd
or
in
lahf
inc
cmp
xchg
mov
pop
lds
scas
aad
or
scas
cs
add
lods
add
mov
mov
sbb
jl
push
inc
adc
in
mov
stos
xacquire
rcll
mov
sub
sub
lds
or
or
add
mov
mov
rdmsr
cmp
fwait
pop
and
xor
xchg
and
inc
cmpl
dec
xor
push
mov
jecxz
adc
adc
pop
add
js
ss
jg
dec
inc
call
pop
repnz
mov
cmpsl
out
outsl
mov
jecxz
subl
dec
xchg
mov
pushf
dec
and
mov
jne
ljmp
cmp
jmp
mov
or
sub
sub
mov
pop
aaa
xlat
clc
add
jb
push
into
jge
cmp
cltd
ds
cmc
out
mov
cmpsl
dec
gs
ljmp
lahf
insl
jnp
xor
sbb
sub
call
out
inc
loopne
push
repz
push
fidivs
cli
push
push
mov
outsl
cli
sub
lret
in
fdivs
inc
mov
inc
in
mov
lret
adc
or
sahf
movsl
add
aas
mov
fsubr
xchg
dec
fimull
fsubr
movsl
bswap
jo
push
jmp
xchg
jmp
add
jae
jno
pop
lods
testb
stc
aad
or
inc
fs
std
stos
mov
out
sahf
pop
in
pop
mov
insb
add
jae
mov
adc
or
mov
hlt
push
fnstsw
insl
pop
in
shll
dec
loop
xor
cld
xchg
popa
mov
xor
sub
adc
loopne
jl
scas
arpl
and
add
dec
inc
or
sbb
lcall
and
int3
xchg
negb
mov
dec
movsl
into
mov
jno
and
int
outsb
adc
out
cmc
dec
mov
in
and
dec
test
sbbl
jbe
xchg
mov
scas
jmp
lods
xchg
sbb
inc
xor
pop
cmp
mov
fdivs
pop
loop
xor
ficompl
lods
or
jnp
mov
or
push
jecxz
or
fwait
sbbb
and
jg
xor
outsl
in
jg
int
add
lea
xorl
xchg
and
adc
popa
lods
scas
mov
ficompl
stos
sub
scas
xor
mov
push
mov
sarb
inc
aaa
clc
in
sbb
andl
add
int3
std
sbb
mov
inc
lahf
mov
cmp
aad
and
pop
mov
xchg
stc
or
std
add
cltd
dec
sub
mov
mov
adc
out
fwait
inc
out
mov
test
xchg
insl
and
scas
xor
dec
mov
sbb
hlt
subb
or
push
roll
rorb
adc
dec
ret
jbe,pt
loope
mov
xor
test
aas
ja
test
pop
loope
xchg
add
add
inc
mov
jno
mov
and
cwtl
dec
subb
in
popf
loope
and
dec
outsb
dec
xchg
fsub
cwtl
psubusb
sti
or
and
cmp
out
lahf
or
adc
stc
rcr
sub
pusha
xor
daa
jmp
push
mov
mov
mov
je
in
sbb
std
dec
pop
mov
hlt
insl
mov
ror
pop
adc
icebp
negb
push
cltd
inc
fcomp
ja
inc
loope
imul
push
mov
lods
js
xorb
lods
xchg
dec
in
dec
add
mov
ret
push
dec
stc
pmuludq
xor
push
pop
mov
sbb
inc
pushf
jp
fwait
adc
adcl
ljmp
mov
jge
shrb
xchg
pop
pop
fadds
push
in
mov
mov
leave
mov
push
jle
mov
stc
lret
hlt
test
sub
push
jae
jl
push
repz
dec
loop
push
adc
js
mov
xor
pop
mov
sbb
mov
movsb
cli
jp
insb
lahf
xor
adc
ret
sbb
mov
adc
pusha
leave
jp
aam
les
jb
cmp
push
sbb
in
push
jecxz
imul
xor
add
sbb
lods
mov
push
sbb
xchg
imul
sbb
aas
jge
lods
inc
cmp
ja
push
cmpsl
sub
ds
nop
xor
mov
hlt
lds
add
sub
mov
testl
dec
iret
std
xlat
call
adc
xor
fcoml
xor
outsl
das
sub
inc
lret
outsl
rcll
xor
cmpsb
shrl
or
sub
nop
mov
mov
stc
cltd
rcrb
jb
in
stos
push
pushf
jle
fwait
xor
push
repz
imul
loop
jge
int3
andl
cwtl
stc
xchg
jle
jb
js
sbb
adc
test
mov
loope
pop
mov
repz
adc
aaa
jae
imul
and
repnz
pop
mov
loope
rorl
les
jae
lret
mov
mov
add
sbb
xchg
mov
ss
jg
icebp
mov
pop
ds
pop
or
xchg
iret
cmp
lcall
and
mov
mov
or
stos
cmp
lcall
test
lahf
fildl
mov
ljmp
shlb
xor
rclb
lock
add
fstpl
sbb
jo
mov
xchg
xchg
dec
mov
shrl
mov
or
ror
or
int3
xchg
out
dec
push
push
mov
das
sbb
dec
es
jmp
out
xor
jl
cs
daa
push
jge
pop
inc
notl
aad
pop
mov
xor
test
jecxz
out
add
adc
test
mov
ja
sub
xchg
cmp
inc
lock
out
pop
mov
mov
xchg
sti
or
cmp
lret
add
call
mov
xchg
aad
sbb
inc
test
inc
xchg
ljmp
repz
clc
int3
adc
add
ret
sbb
lret
mov
imul
pop
mov
sbb
imul
xor
push
jbe
xor
sbb
outsl
cmp
loop
lcall
clc
out
xchg
push
insb
pop
dec
pop
call
mov
pop
cli
idivb
sarl
test
mov
adc
pop
jp
ja
cmp
and
add
xchg
add
and
call
insb
cmp
adc
add
cmp
pop
push
in
lahf
pop
loopne
les
out
mov
mov
mov
jns
adc
xor
add
dec
dec
sbb
addb
lds
cmp
imul
xlat
xor
pop
movsl
hlt
loopne
lock
lea
fdivrs
dec
xchg
rolb
inc
cmc
pop
inc
scas
iret
arpl
sub
sti
rep
push
adc
pop
adc
adc
sub
jns
fwait
test
cmpsb
inc
cmp
mov
popf
dec
stos
sbb
push
mov
icebp
nop
sub
push
or
mov
out
mov
aas
or
movsb
lds
push
bound
loope
inc
dec
in
xchg
mov
pop
jne
insb
dec
add
sbb
jbe
divb
dec
and
aas
mov
sahf
add
mov
ss
repnz
pop
push
aad
push
sub
or
inc
sub
pop
jno
in
test
mov
or
lahf
data16
ja
cld
scas
fcoms
cmpl
daa
xlat
nop
fmull
and
mov
jbe
inc
pop
int3
xor
ret
ljmp
rcrl
inc
iret
incl
xchg
sbb
mov
cli
pop
add
in
sbb
inc
aas
js
popa
mov
mov
lea
ljmp
mov
dec
push
sbbb
xor
and
pop
cmpsb
pop
xchg
les
sub
nop
xchg
xor
or
aam
loopne
test
jge
sub
or
adc
dec
sbb
arpl
mov
and
sar
xchg
and
shr
adc
sub
xchg
mov
add
lcall
adc
in
push
dec
mov
inc
lret
cli
movsl
imul
jo
xchg
pop
jecxz
out
mov
push
mov
pop
mov
jne
lods
mov
mov
lahf
push
xchg
sbbb
mov
mov
pushf
lds
jecxz
pop
xchg
psrlq
push
lcall
ret
adc
push
iret
ret
test
rclb
outsb
and
lock
xor
in
mov
jp
ja
xchg
inc
cmpsl
push
push
daa
js
xor
mov
jbe
or
nop
mov
inc
shll
ret
pop
push
ljmp
push
jecxz
jne
adc
xchg
je
pop
in
fmuls
mov
cwtl
inc
jmp
popa
adc
ficomps
sbb
jmp
cwtl
mov
bound
ret
ss
sbb
stos
les
ficoms
xchg
cltd
adc
sbb
in
data16
inc
outsl
nop
clc
or
out
lea
push
inc
mov
outsl
push
rorb
mov
inc
push
lock
data16
add
ja
mov
leave
lods
aaa
inc
and
xchg
popa
or
leave
pop
dec
in
sbb
cmp
jne
cmp
cmp
and
cmp
jmp
out
out
imul
cmp
fadds
cmc
mov
pop
icebp
lret
add
aad
aam
clc
inc
jge
andl
push
ja
xchg
dec
fistl
in
push
sbb
mov
aad
adc
cmpsl
sub
cld
mov
xor
push
pop
push
xchg
push
data16
lea
adc
test
inc
mov
push
in
push
rol
push
dec
sub
cmp
xor
dec
mov
xor
fwait
dec
aaa
out
outsb
cmp
push
in
cmc
or
out
jecxz
add
mov
loope
or
and
or
sub
pushf
mov
cmpsb
cmpsl
aad
js
dec
mov
and
notl
mov
push
loop
std
aaa
inc
mov
cmpsb
test
mov
xchg
out
mov
in
adc
mov
jecxz
notl
mov
jbe
or
pop
aas
fidivs
cmp
cmpsl
enter
cli
pop
aam
subl
or
or
ljmp
mov
mov
mov
cmp
cmp
or
jl
sarb
sub
enter
jnp
dec
adc
cmp
cmp
xchg
aam
adc
insl
roll
cld
jp
adc
jbe
cmp
outsb
lcall
std
or
pop
cmp
sarl
mov
fadds
jno
test
mov
scas
in
jl
sub
adc
sbb
jmp
fs
cmpsb
rcrb
mov
sbb
aam
pop
fistl
rcrb
psllq
dec
xchg
inc
in
dec
ret
push
pop
mov
xor
sub
aad
jecxz
adc
dec
pop
adc
fistpll
outsl
mov
mull
and
sbb
outsb
pop
xchg
or
enter
std
iret
nop
adc
lret
lret
insl
sar
mov
call
or
hlt
rcrl
xchg
cld
addr16
shll
sbb
and
adc
mov
out
xlat
imul
sbb
jno
inc
pusha
adc
mov
inc
dec
imul
stc
sub
andb
add
int3
or
lods
test
lret
das
xchg
lcall
or
lret
stc
push
lock
daa
pop
mov
in
shl
stos
sub
scas
or
sub
or
int3
mov
push
int3
mov
fisubrs
je
wbinvd
jns
xor
lcall
cld
pushf
cli
sub
push
mov
fs
sub
xor
mov
add
xor
cli
pop
xor
ljmp
iret
xor
jnp
jg
fnstsw
in
lret
sub
lock
icebp
add
clc
arpl
mov
fdivrl
mov
sbb
cwtl
mov
mov
pusha
adc
dec
es
sub
lret
cmp
fs
hlt
or
movsl
lret
sub
adc
lock
iret
out
scas
jge
fimull
lods
loop
test
call
sbb
xor
frndint
cmp
enter
mov
jp
mov
push
jae
int
dec
in
ja
mov
loopne
lahf
jmp
mov
cmpsl
ja
pop
ja
cli
cmpsl
mov
mov
ds
jnp
xchg
or
push
shll
pushf
adc
subb
cli
sbb
mov
xor
xorl
ds
mov
scas
lods
insb
insb
imul
lods
inc
lahf
jae
pop
cmc
or
div
push
pusha
pop
xchg
test
and
roll
mov
in
aaa
and
popa
out
mov
adc
cmpsl
jo
scas
leave
xor
and
adc
push
xor
xor
insl
jo
xor
daa
push
lcall
mov
stc
xchg
adc
sbb
dec
imul
mov
int3
mov
cmpl
enter
scas
dec
push
lahf
cmp
xchg
pop
push
cmp
ffreep
rcl
scas
pop
push
sub
ljmp
loopne
mov
mov
jne
fdivl
aas
push
mov
push
repnz
ret
jne
ds
sub
in
add
pusha
xchg
bound
cs
hlt
popf
push
mov
scas
iret
mov
jbe
mov
pusha
icebp
mov
test
movb
pop
fdivl
aam
lahf
jge
mov
dec
ljmp
in
sub
push
inc
pop
mov
sbb
or
out
lret
jl
outsl
cmp
xor
mov
scas
cmp
sub
xchg
pop
data16
out
in
mov
inc
cld
add
push
push
xchg
jbe
stos
xor
mov
and
inc
xchg
push
sbb
in
je
ljmp
lods
hlt
fidivl
or
xchg
and
cmp
in
cmp
sahf
fs
lret
rorl
mov
push
mov
dec
mov
scas
loop
jmp
xchg
iret
ja
call
cld
mov
adc
cmpsb
das
pop
jle
mov
test
mov
mov
mov
movsl
lcall
mov
push
insl
js
movsl
cld
pop
cmp
icebp
inc
pushf
cmpsl
rclb
stc
clc
xor
imul
outsb
loope
int
rclb
in
inc
cmp
insl
cmpsb
mov
es
dec
out
sbb
jmp
push
gs
lock
sbb
test
enter
pop
pop
mov
rcl
jl
inc
jae
jmp
xchg
cmp
fxch
cmc
jnp
push
xor
js
popa
push
lock
ret
dec
lods
inc
add
lahf
pop
mov
pop
cli
jg
and
push
pop
sahf
clc
adcl
sbb
mov
cmp
adc
dec
push
sub
mov
add
scas
cmp
iret
push
jmp
leave
jle
ret
cmc
add
push
in
adc
jmp
cltd
mov
stos
mov
jecxz
mov
or
fsts
push
mov
pop
jb
push
push
and
adc
pop
clc
jp
push
scas
dec
mov
ljmp
clc
xchg
sub
xor
jl
rcl
dec
das
jo
xlat
out
push
push
ja
push
cltd
mov
dec
ss
cmp
add
outsb
cltd
xchg
adc
rclb
out
dec
into
mov
sbb
or
sbb
or
mov
dec
adc
jne
mov
xchg
repnz
insl
push
iret
pop
hlt
dec
cltd
xor
shrl
stos
mov
mov
push
mov
cmp
mov
dec
out
jne
mov
in
adc
xchg
pop
cld
adc
in
lds
es
push
adc
cmp
xor
repz
mov
loope
scas
adc
divb
mov
pop
sub
or
cli
push
xchg
inc
or
fwait
and
lahf
ss
or
insl
cmp
stos
stos
jmp
test
sahf
aam
lods
ret
push
jecxz
iret
addr16
shr
shll
and
mov
inc
sbb
cltd
outsl
stc
loop
cli
pop
ljmp
sbb
add
push
loop
ret
dec
sub
fldenv
cmpsl
jle
mov
add
inc
movsb
in
add
int3
idivb
fistps
sub
loope
pop
inc
cltd
cmp
dec
icebp
sub
xchg
jbe
in
mov
inc
jl
adc
loope
push
mov
test
aas
jo
mov
pop
jl
pop
push
cli
pop
ficoml
pop
sub
movsl
mov
cs
add
jg
das
and
stc
xchg
imul
dec
add
fists
xlat
scas
mov
mov
je
and
scas
lcall
mov
push
fs
aas
pop
icebp
mov
aas
or
sub
addr16
pop
sahf
loope
in
and
test
clc
enter
mov
cmc
xchg
and
filds
pop
not
xor
fcomip
ds
ficomps
mov
sbb
jg
xor
loopne
push
xchg
test
mov
sbb
js
xchg
inc
outsl
jmp
jp
pop
aam
in
cltd
add
pop
in
mov
test
push
sti
shrl
xchg
jle
in
aad
mov
fistl
and
fwait
call
ljmp
rcrl
xchg
ss
and
aas
call
inc
mov
insb
or
adc
add
adc
sub
sbb
sub
push
inc
add
movsb
or
int
jmp
aas
scas
xor
cmp
pusha
jo
divb
imul
xchg
mov
call
and
mov
sahf
insb
outsb
sub
cmp
adc
push
mov
insl
adc
insb
dec
fwait
pop
pop
cmp
clc
pop
pusha
out
mov
imul
shll
mov
es
rcrl
aad
aam
xor
stc
dec
xlat
or
sbb
sub
sbb
ljmp
mov
das
cmp
lea
enter
mov
cmpsb
mov
push
inc
mov
adcl
cmpsl
mov
out
movsb
pop
jno
addr16
xor
jmp
int
push
scas
rcr
in
iret
xchg
and
xabort
pop
add
dec
data16
rolb
mov
sub
or
int
aaa
adc
popa
sub
ficoms
xchg
mov
lret
out
movsl
les
xchg
insl
lcall
pop
mov
mov
add
fs
sti
inc
sub
mov
cmp
sbb
icebp
adc
les
fdiv
pop
hlt
adc
cmp
call
xlat
lds
inc
stos
loope
ret
jne
mov
les
movsl
sub
ret
pop
xor
clc
frstor
mov
outsb
int3
cmpb
sub
cmc
push
xlat
sbb
lods
adc
repnz
and
outsb
xor
rolb
sbb
fsub
pop
out
pop
faddl
ss
int
or
arpl
popa
sbb
sbb
xor
sar
sbb
push
cmp
mov
pop
aam
jns
or
sti
lods
pop
push
and
sbb
jb
ja
cmp
or
mov
arpl
cwtl
push
cmp
mov
lds
sub
sahf
int3
repz
movntq
jg
sti
xchg
addr16
sbb
mov
ss
aad
cmpsl
sbb
and
sbb
jbe
sbb
ret
aas
push
cltd
lcall
pop
sub
imul
pop
pop
fldcw
test
mov
mov
insb
push
or
test
clc
int3
aaa
and
out
out
das
es
cmc
add
add
repz
xchg
xchg
xor
lret
inc
lock
mov
and
cmpsb
cmp
xor
xchg
sbb
xor
jmp
frstor
shlb
cmpsb
jmp
popa
jae
xor
out
js
push
dec
jmp
mov
mov
cmp
or
std
imul
fcmovbe
jns
inc
inc
out
stc
jl
push
inc
cmp
leave
sub
daa
fwait
inc
cmp
pushf
sti
fidivs
xchg
clc
das
adc
rcrb
xchg
cmp
push
inc
sbb
mov
lcall
push
das
pop
ds
cld
or
add
or
push
mov
nop
sbb
shll
mov
lods
call
mov
mov
sarb
hlt
sub
ret
cmp
jecxz
jecxz
jo
lahf
adc
cs
inc
inc
dec
pop
or
xor
adc
sbb
frstor
jo
ret
adc
lods
lock
dec
mov
sti
cmp
int
mov
ds
push
inc
stos
xchg
mov
sbb
inc
test
ret
test
out
call
xlat
cltd
pop
shl
dec
movl
ret
aad
loop
push
xor
push
add
cmpsb
imul
mov
sahf
sarb
movsb
push
mov
out
imul
cmp
mov
call
scas
jb
dec
out
pop
fbld
mov
jmp
add
stos
lahf
popa
insb
ret
mov
iret
pop
bound
jb
sti
mov
int3
and
inc
push
jl
dec
push
fcompl
scas
push
sbb
sbb
fnstenv
pop
sarl
xor
and
cmp
mov
imul
jmp
mov
adc
lret
and
cmp
fadd
hlt
fdivrl
lcall
andb
mov
stos
int3
sub
xchg
pop
push
jge
aam
out
cmpsl
push
lret
sub
sub
adc
mov
loopne
call
je
jne
decb
adc
jne
add
adc
sbb
fsts
jbe
push
pop
xchg
icebp
rcrl
push
cs
dec
jmp
adc
push
jno
testb
adc
push
sbb
shrb
daa
jmp
cmpsl
push
repz
or
cltd
jmp
in
into
test
pop
mov
adc
push
mov
inc
pop
shlb
enter
ss
or
mov
out
fs
push
jge
push
and
sub
mov
mov
pop
mov
roll
push
insl
xor
loope
xor
mov
push
jbe
sbb
push
loope
mov
mov
testl
sub
lcall
lods
loopne
aam
shll
sub
scas
xor
jg
rclb
xchg
jl
out
sub
jo
loope
push
xchg
pop
inc
fcomps
xor
je
fsts
or
or
stos
mov
movsb
mov
mov
aas
cli
fwait
xchg
shrb
imul
sbb
out
mov
mov
push
mov
jnp
mov
sub
mov
and
enter
sub
xor
ss
fcom
sub
std
mov
add
xorb
or
mov
jmp
fiaddl
or
push
dec
int
dec
or
jo
cli
lea
lahf
xchg
lea
jge
inc
adc
imul
pushf
fcmovne
out
in
sub
and
pop
cmpsl
dec
pop
sub
jns
insl
sub
inc
cmc
ret
add
fucom
or
cwtl
pop
ret
jecxz
int3
bound
repz
stc
sbb
mov
cmpsb
cmp
inc
jno
das
or
jge
and
test
aam
push
icebp
dec
ja
out
or
add
or
and
fildl
fisttpll
push
movsl
sarl
stos
fldt
push
cmc
cmp
cmp
mov
scas
jb
jnp
sbb
cmpsl
push
incb
js
pop
cmp
cmpsl
mull
jp
xorb
mov
and
iret
es
and
roll
adc
pop
sahf
lock
stos
sysenter
stos
jne
and
sbb
outsl
sub
imul
push
mov
and
xor
call
aam
mov
sub
adc
fdivrs
cmc
cmp
xchg
fsubrs
ja
enter
jl
sbb
pusha
mov
enter
inc
ret
jb
in
pop
ds
adc
aas
mov
lahf
or
cmp
shr
shlb
mov
xor
je
std
sub
rcr
adc
push
inc
and
pop
push
insb
rclb
mov
mov
inc
cltd
out
out
pop
xchg
idivl
jbe
mov
pop
out
mov
orb
fadd
lods
loope
xchg
repnz
inc
popa
popa
or
aas
jmp
cmpsl
mov
mov
call
int3
js
pop
adc
dec
mov
setae
popa
movsl
fnsave
dec
and
andb
push
adc
movsb
jo
xchg
push
mov
pop
cmp
iret
repnz
and
iret
and
test
and
cmpsb
pop
cwtl
cmpb
push
dec
imul
lds
popf
je
or
loope
scas
push
les
push
js
xchg
mov
andb
test
push
jb
xor
int3
out
cmpsl
dec
mov
jmp
outsb
arpl
cmp
xchg
negl
fldt
test
sbbb
ljmp
jne
lahf
xchg
cmp
ret
inc
or
cmp
mov
pop
arpl
and
stc
in
push
jg
bound
cmc
push
and
aas
ds
or
ja
leave
js
and
js
and
movsb
bound
out
pushf
jae
sub
dec
mov
pop
hlt
dec
subl
mov
add
ror
adc
push
cltd
and
arpl
dec
out
inc
aad
lock
sbb
add
jle
mov
inc
loop
cwtl
lahf
inc
test
push
popf
jo
push
out
fwait
mov
jo
scas
rsm
cmp
fmull
in
movsb
dec
ljmp
insb
pop
es
rclb
adc
arpl
push
ljmp
iret
inc
daa
mov
ljmp
and
paddq
outsl
adcb
arpl
jno
mov
jbe
xor
test
cs
arpl
loop
sbb
out
push
aaa
mov
mov
nop
bound
or
mov
add
mov
je
mov
ja
pop
add
test
xor
movsl
aam
test
inc
inc
lods
and
js
adc
sub
dec
push
hlt
cld
adc
ja
test
shrb
add
pop
jl
movsb
cld
dec
not
mov
cmp
cmc
inc
mov
dec
scas
xor
mov
scas
imul
inc
push
dec
inc
mov
sub
sub
sahf
and
aas
jle
adc
mov
fcmove
and
rcll
rorl
pop
push
xorb
insb
pop
mov
or
or
cli
push
inc
std
dec
fwait
inc
mov
mov
and
xchg
and
jle
stos
jne
sub
sti
dec
sti
mov
cmpsl
or
sar
xchg
dec
nop
mov
loope
incl
adc
ret
addr16
push
nop
xchg
xchg
shll
data16
lcall
dec
lea
inc
lret
ss
sbb
cmp
out
and
fcomip
repnz
test
adcb
mov
sub
out
adc
fwait
leave
and
or
mov
test
push
xor
mov
cmpsb
lcall
pop
xor
mov
inc
or
fdivr
stc
inc
jns
mov
lcall
dec
movsb
xchg
cmp
fninit
testl
xor
inc
pop
mov
add
jnp
dec
rcr
js
cli
adc
pushf
mov
bound
lahf
in
or
in
inc
xor
or
lods
arpl
imul
mov
out
mov
popf
mov
out
jbe
shl
cmp
sar
mov
arpl
jae
push
pushl
rep
ja
pop
pop
lret
xor
cwtl
pop
sub
inc
mov
insl
call
pushf
repz
shll
dec
aaa
fistl
scas
test
sbb
lock
xor
cld
sti
into
sbb
decl
pushf
das
arpl
adc
jle
cmp
mov
mov
dec
xchg
sub
mov
sbb
das
adcl
cmp
add
dec
pop
ror
sbb
adc
in
test
int
in
lock
sbb
shll
test
xor
or
cli
ss
jno
cmp
inc
xor
pop
in
dec
out
scas
aam
and
ljmp
inc
push
gs
cmp
sub
sbb
push
movlps
movsb
fidivrl
mul
jns
mov
pusha
lcall
rcll
jb
movsl
sbb
out
mov
push
scas
enter
ja
outsl
stc
inc
cwtl
pop
add
js
pop
sar
sub
adc
cwtl
test
xchg
test
mov
or
xchg
fcmove
lock
int
mov
rol
inc
inc
and
cld
not
mov
leave
arpl
rcrb
loope
jp
push
outsl
pop
aad
scas
dec
xor
nop
aad
pusha
or
cmp
xchg
repnz
lds
arpl
adc
aad
out
test
cmp
push
icebp
dec
cltd
ret
aaa
ja
fisubs
fs
loop
pop
inc
cmpsl
xchg
adc
push
jns
pop
xor
or
mov
fwait
xchg
sbb
inc
sub
cmp
add
loopne
inc
loope
je
xor
dec
xchg
mov
sti
mov
mov
xor
ficompl
sub
jnp
jns,pt
into
pop
lret
mov
xor
sbb
dec
xchg
push
pop
sub
shr
hlt
out
cwtl
and
jnp,pn
push
dec
add
xor
add
stos
adc
mov
inc
into
xor
xor
out
testb
loopne
and
pop
dec
loope
pop
inc
mov
mov
mov
mov
add
sahf
mov
mov
movsb
ret
adc
test
push
jg
or
mov
aas
rcrl
ja
out
arpl
sub
mov
sbb
in
sbb
shlb
scas
cs
daa
dec
push
mov
adcl
dec
inc
shll
push
jg
int3
int
in
bound
test
movsl
insl
sti
into
xchg
jecxz
scas
dec
inc
push
insb
dec
and
pop
and
incl
mov
addl
iret
sahf
ds
in
xchg
pop
pusha
xchg
mov
out
aaa
cmp
sbb
stos
dec
lock
ret
pop
sbb
pop
vpsubsb
loopne
gs
je
out
lret
xchg
inc
dec
mov
fsubl
or
jbe
jns
and
into
cwtl
clc
aam
sub
lret
pop
cmp
add
fs
lret
or
mov
dec
mov
int3
fstpl
je
inc
fsts
shrl
xchg
repnz
fs
frstor
nop
lcall
xchg
cmp
lret
sti
movsl
ja
add
stos
push
ss
out
cmp
lock
lea
in
push
inc
mov
nop
arpl
mov
jle
fcomi
mov
mov
push
sti
push
pusha
cwtl
dec
inc
jae
repz
sub
shll
cld
test
notl
movsb
sti
repz
xchg
sbb
movl
push
pop
sub
and
mov
adc
je
mov
je
dec
xchg
and
cwtl
mov
int3
xchg
dec
imulb
ja,pn
xor
fisttps
das
mov
stos
mov
xchg
jp
adc
sbb
dec
je
loopne
jl
cmp
lods
int
aaa
pop
addl
mov
fidivl
sub
subb
stc
jne
sbb
push
stos
cwtl
out
dec
push
or
cmc
loopne
push
cmp
lret
jae
fistl
lahf
outsl
imul
into
xchg
stos
jmp
adc
int3
sub
rcrb
cmc
inc
xlat
or
aam
dec
lahf
stos
cltd
push
lds
lock
jp
jg
and
sub
dec
xchg
movsl
push
xchg
inc
adcb
jg
push
mov
pop
mov
xchg
or
jp
lcall
imul
fisttps
aas
loop
stc
lods
sar
jmp
mov
push
fs
sub
mov
push
outsl
in
xchg
jnp
xor
cmp
cmpsb
dec
add
jmp
test
pop
cli
jp
jge
mov
pop
inc
lret
cmp
cmc
call
adc
cmp
pop
loop
xchg
sub
arpl
out
push
cs
and
inc
dec
iret
cmp
sbb
mov
fdivr
xchg
xor
push
sub
jae
jae
push
stc
stos
fiadds
dec
fwait
and
jge
arpl
jge
repz
fwait
aad
xor
dec
push
fs
jp
int3
cmp
std
push
sub
in
dec
dec
arpl
sub
loop
into
das
mov
and
aam
jle
sub
xchg
call
jp
add
into
popa
mov
lret
shlb
popa
mov
cmpsl
lods
mov
pop
mov
pushf
inc
fnsave
fisubs
insl
lcall
out
nop
lret
xchg
jle
or
and
adc
sbb
xor
dec
into
into
xchg
sbb
lret
lds
adc
pop
adc
push
lahf
test
lods
xchg
into
cmpsl
add
inc
mov
inc
push
mov
pop
shl
nop
bound
sarb
xor
fisttpll
inc
and
lahf
icebp
mull
call
aaa
add
jns
ja
out
sbb
mov
dec
in
insl
movsb
or
mov
mov
sbbb
inc
mov
addr16
or
inc
xor
cmp
mov
sbb
push
pop
push
imul
pop
adc
xchg
cs
dec
cmp
int
xor
push
lret
dec
push
repnz
mov
imulb
mov
lcall
mov
and
sub
jmp
out
arpl
or
cli
jmp
daa
inc
xor
add
pop
iret
icebp
dec
sbb
adc
loopne
loopne
xchg
outsb
stos
insl
jg
sub
xchg
outsb
jge
nop
pop
cwtl
arpl
and
xor
pop
nop
mov
aaa
stos
lahf
rclb
xor
xchg
nop
push
inc
mov
mov
lods
jle
daa
andl
jg
sbb
and
xchg
jg
shlb
cmp
nop
sbb
adc
jmp
jno
and
xor
xor
push
adc
std
mov
imul
inc
or
decb
leave
mov
int3
in
cmp
loop
adc
mov
push
rcll
dec
loopne
arpl
or
jne
imul
lret
testl
stos
jns
enter
shl
mov
xorl
inc
pop
hlt
ljmp
shlb
add
xchg
pop
popf
pop
out
in
sbb
sbbb
std
popf
add
fldt
pop
ljmp
mov
push
inc
push
xor
ret
fwait
cmp
and
mov
add
xchg
bound
mov
fdivrs
cmpsl
js
pop
inc
xor
or
pusha
loopne
xlat
rcrb
repnz
inc
push
mov
pop
scas
push
dec
fadds
pusha
jae
test
ja
fimuls
jns
pop
bound
xor
gs
out
jns
and
adc
inc
cmp
cmp
stos
jmp
cwtl
mov
sti
pop
mov
cmpsl
adc
in
int
mov
popf
fbstp
stos
lock
mov
jnp
sarb
push
sub
mov
jp
ffree
sti
data16
adc
mov
int3
inc
cld
cmpsl
js
dec
std
sub
mov
std
add
mov
dec
sbb
repz
int3
sub
leave
jb
adcb
lds
mov
jno
xchg
cs
sub
or
xchg
fmuls
je
sbb
push
dec
outsl
outsb
add
aad
inc
xchg
stos
cwtl
lret
int3
dec
daa
jbe
fwait
ljmp
sbb
es
xor
mov
pop
sarb
mov
outsb
sub
push
popa
lret
and
dec
fdivrp
or
ljmp
in
or
xlat
jecxz
in
scas
push
mov
inc
pop
push
out
out
shrl
or
pop
jo
fs
popa
mov
dec
sti
pop
push
push
add
or
rcl
rclb
mov
mov
and
pop
outsb
cwtl
bound
inc
pop
push
inc
pop
addb
shl
out
jo
cltd
test
lock
cmp
or
push
fcomip
enter
enter
mov
jmp
inc
aas
inc
jmp
insl
inc
mov
xchg
adc
pop
mov
add
pop
div
sub
jmp
repnz
lock
add
cwtl
mov
inc
imul
cli
and
cli
and
adc
dec
push
out
nop
cmp
sbbb
pop
in
imul
mov
out
imul
insb
xchg
sbb
inc
orb
outsl
out
add
sti
dec
hlt
xchg
fstpl
popf
test
dec
ja
divl
mov
ret
adc
xlat
push
or
push
sbb
inc
sahf
add
jne
lods
popf
jl
iret
ljmp
mov
mov
inc
push
repz
movsl
mov
mov
dec
filds
jae
and
sub
call
fnstsw
adc
dec
repnz
xor
mov
out
mov
adc
into
scas
pop
rcrl
mov
stc
xchg
dec
mov
sbb
loope
icebp
test
xchg
mov
movsb
out
fsubrs
dec
mov
add
xor
jmp
cmp
int3
sub
aaa
push
cmp
xlat
adc
xor
insb
fcomps
mov
mov
mov
inc
push
mov
scas
mov
xor
das
mov
jne
xchg
ds
jp
int3
aam
cmp
push
not
xchg
das
sbb
xchg
aam
ret
fisubs
cmpsb
repnz
fisttpl
and
out
js
jo
pop
push
jle
hlt
jne
mov
or
idivl
lret
fimull
jns
mul
icebp
addps
fistps
sar
adc
adc
ret
jae
mov
xchg
imul
addr16
pop
xor
cmpsl
inc
mov
leave
push
xchg
scas
xchg
icebp
sbbb
xor
and
pushf
add
mov
xorl
arpl
xchg
inc
add
xchg
out
xor
sbb
in
inc
fdivrl
adc
fisttps
xchg
out
add
lock
xchg
xchg
and
pop
in
cmpsb
out
dec
jnp
rdtsc
mov
mov
pop
pushf
pop
inc
and
addr16
cmp
adc
mov
xor
xorb
xchg
adc
loope
out
addb
int3
adc
gs
xor
adc
gs
dec
xor
and
or
loopne
pop
jo
out
sbb
or
mov
test
pop
nop
adc
push
gs
mov
shlb
xchg
pop
es
lods
clc
push
pop
loopne
xor
loopne
mov
mov
in
adc
pop
shlb
inc
cmc
adc
fs
lea
int3
scas
ret
add
lcall
daa
aas
hlt
aaa
inc
xchg
jnp
pop
iret
xchg
add
jb
ja
sbb
inc
insl
mov
mov
xchg
stos
call
dec
push
cmp
add
stc
or
mov
ud0
adc
fwait
aas
fnsave
scas
in
addr16
je
mov
push
jp
movsl
adc
push
sahf
adc
add
jp
icebp
sar
fldcw
sub
es
xor
out
repz
lahf
lea
or
pop
sahf
sbb
add
lahf
mulb
push
cmp
xor
push
dec
sbbb
outsb
dec
cmp
add
and
sub
sarb
insl
pop
adc
movsl
push
sub
mov
mov
sbb
push
jl
mov
dec
xchg
pop
add
adc
pop
add
cmp
aad
lock
fwait
xor
lahf
movzwl
push
cli
fistl
int
out
push
mov
mov
mov
fucom
out
sbb
inc
sbb
ja
xor
mov
adcl
icebp
fcoml
test
cmp
and
push
add
cmp
repnz
sahf
icebp
fldcw
inc
out
into
adc
and
imul
ud2
aad
jnp
jp
jmp
repnz
push
push
mov
jg
adc
mov
insb
in
jo
cltd
add
jns
ja
out
xor
inc
xor
and
sbb
jl
inc
pop
xchg
jbe
fwait
pushf
pushf
inc
jns
inc
rep
adc
jne,pt
out
mov
cmpsl
adc
movsb
and
mov
inc
or
pop
into
mov
cmpsb
add
scas
loopne
sbbb
inc
jmp
sbb
pop
and
arpl
push
xchg
pop
mov
adc
dec
pop
dec
jae
sbb
mov
pop
outsl
jbe
in
fs
and
push
cwtl
jnp
mov
int
stos
push
push
cmc
stos
fbstp
iret
or
push
into
mov
push
rorl
gs
dec
push
int
test
mov
mov
out
mov
add
into
mov
dec
jecxz
or
dec
mov
es
push
pop
cwtl
js
xor
ss
dec
call
cli
scas
into
bound
mov
add
inc
icebp
sub
outsb
jp
push
adc
aad
mov
imul
sbb
int
mov
int3
dec
je
aas
push
cmpb
mov
lret
adc
and
cmp
push
xchg
dec
int3
push
sbb
pop
mul
mov
inc
outsl
rcl
addr16
repz
cli
aam
cli
xchg
in
mov
sub
mov
xlat
pop
push
repz
sarl
stc
adc
or
fwait
ss
adc
lcall
insb
mov
cmpsl
pushf
bndstx
cs
adc
or
outsb
popf
pop
in
ja
stos
pop
jne
add
cmp
cmpsb
mov
aam
loopne
pop
add
adcb
pushf
adc
js
jmp
or
sub
imul
pop
mov
jle
fcompl
adc
jmp
into
bound
pop
repz
imul
pushaw
outsl
push
lods
mov
or
aas
add
xchg
pop
jne
mov
xchg
lahf
adc
or
pop
cmpsb
leave
ss
sub
das
lds
popa
js
cmp
ds
cmp
jge
mov
in
ret
and
push
mov
test
pop
mov
push
pop
lds
push
lahf
nop
sarb
lahf
out
cmpsb
push
xor
arpl
aad
sub
in
pop
mov
push
aad
int3
lret
dec
mov
sub
mov
and
jnp
jl
enter
adc
jp
add
xchg
jbe
lds
mov
leave
imul
adc
xor
pop
in
lea
lea
jg
ds
push
test
rcrb
insb
mov
xchg
pop
or
inc
push
push
and
mov
jb
jo
lahf
popa
test
xchg
repz
lcall
mov
idiv
mov
dec
mov
dec
lock
imul
inc
pop
cwtl
push
insl
mov
pop
and
add
fildll
shrb
andl
adc
adc
clc
mov
cmc
gs
addr16
pop
dec
popa
lret
stos
pop
sbb
insl
inc
add
cmpsl
cmpsl
pop
out
je
out
xor
pusha
sbb
aam
cs
in
lods
repz
sbb
sahf
push
dec
sub
dec
int3
and
mov
dec
shlb
or
sub
cs
lret
push
je
or
or
ret
arpl
or
push
add
scas
mov
add
xchg
shl
into
outsb
inc
sub
enter
sahf
jno
mov
test
mov
cli
out
sbb
orl
std
xchg
push
mov
fwait
and
mov
jge
sbb
push
sub
dec
dec
lcall
mov
lods
stos
lods
mov
jo
and
sti
mov
add
lock
das
lods
scas
nop
repz
sahf
mov
xor
test
dec
dec
imul
adc
in
dec
pop
shrl
xchg
xor
insb
loopne
xor
in
mov
jae
push
dec
pushf
pop
mov
pop
je
cmp
push
xchg
int
lea
jl
pop
add
dec
cmpsb
or
imul
inc
pop
test
and
ss
sbb
push
sub
jecxz
pushf
int
sub
fs
or
cwtl
or
shll
inc
cmp
sti
outsb
push
sbb
lock
sub
and
insl
xor
rclb
mov
test
inc
xor
sbb
xor
je
pop
ss
xchg
pop
mov
dec
pushf
cmp
cmp
xor
push
lret
leave
pop
negb
add
mov
shlb
sbb
ss
mov
cmpsl
or
rorw
mov
dec
adc
sti
and
mov
jmp
pop
push
adc
test
dec
insl
stos
xchg
jmp
jle
and
lds
mov
fbstp
add
cmpl
jmp
xchg
mov
jne
outsb
adc
mov
std
out
dec
scas
mov
test
hlt
dec
mov
jne
pop
mov
sub
cmp
int3
cmpsb
icebp
aaa
pop
push
imul
scas
imul
cmp
lahf
push
jecxz
sahf
mov
xchg
cmp
pop
nop
in
aas
negl
pop
fxch
add
mov
cmp
jle
push
fwait
add
mov
add
push
repnz
jecxz
sbb
xchg
dec
cwtl
cmp
cmp
cmp
jbe
sti
xlat
push
imul
cmp
test
mov
jne
std
mov
cs
insl
imull
inc
mov
jae
dec
cmp
dec
xchg
js
inc
mov
xor
push
scas
lret
out
sahf
out
int
inc
mov
icebp
in
mov
jns
mov
cld
ds
cli
or
rcrb
push
add
sbb
mov
lock
lret
inc
ja
movsb
imul
aad
sbb
pop
and
leave
cmp
lahf
jne
adcl
push
notb
mov
insb
out
xchg
aas
lret
mov
test
sbb
iret
addr16
push
imul
add
int3
mov
ret
adc
scas
xchg
adc
jmp
imul
adc
jge
sbb
cmp
cld
mov
push
insb
xlat
jae
fiadds
jo
sbb
adc
test
out
jle
aad
dec
pusha
adc
and
or
mov
dec
xchg
sar
or
mov
aad
stos
pop
sub
int3
jo
lahf
jg
pop
inc
imul
mov
pop
shl
mov
jae
gs
mov
dec
fs
jp
pop
sub
stc
arpl
ljmp
lods
ljmp
xor
les
pop
popf
fimull
std
in
or
cmp
pop
jge
push
fiaddl
lret
or
dec
in
subb
ficompl
cmp
shl
jmp
imull
mov
ljmp
jbe
nop
mov
cmp
sbb
pop
arpl
sub
mov
loop
cld
add
loope
ret
repnz
test
sbb
jmp
pop
iret
xor
jbe
and
and
inc
xor
jle
jne
xchg
les
mov
xchg
xchg
xchg
std
test
repz
adc
inc
cwtl
inc
sub
pop
xor
jne
pop
ficoms
add
pushf
addr16
pop
leave
cmp
push
inc
fwait
outsl
aas
and
inc
dec
push
sub
test
jno
push
loop
push
push
ret
sahf
les
jb
or
adcl
arpl
jnp
fwait
add
cmc
popa
and
add
cmp
add
cli
adc
inc
in
data16
sub
mov
jns
sbb
rclb
mov
fsubrs
add
mov
mov
push
icebp
push
mov
push
cmp
push
mov
xor
pop
rcrb
out
jl
icebp
rcll
lea
xor
out
and
test
mov
adc
mov
cmp
lret
dec
imul
mov
push
pop
xor
std
test
fs
cwtl
popf
loopne
ss
mov
xchg
jo
gs
jmp
and
insb
mov
inc
ret
or
sub
mov
std
pop
out
mov
xchg
aad
xchg
out
lea
notl
push
sub
rclb
inc
adc
pusha
dec
insl
in
cltd
scas
dec
aam
jmp
mov
push
nop
loope
stos
test
scas
insb
sub
cmpsb
lea
and
stos
sub
decl
sbb
inc
shlb
mov
add
fwait
jle
mov
adc
icebp
mov
nop
inc
xchg
sbb
mov
or
xchg
and
test
lahf
inc
jge
dec
adc
mov
xchg
mov
mov
aam
fnsave
cmp
push
jmp
sti
jg
je
sbb
cmp
and
sub
aaa
insb
jns
fisubs
xor
lods
mov
xor
mov
outsl
mov
sbb
xor
sub
nop
ja
test
push
mov
mov
movsb
dec
mov
fsubrp
pop
into
jmp
pop
das
add
mov
cmp
lods
es
shl
in
add
push
mov
jge
cmp
test
adc
pop
int3
out
shl
sbb
ss
bound
jno
cld
fisubrl
roll
out
nop
push
adc
sbb
in
repnz
out
stc
mov
push
in
mov
mov
xlat
dec
test
mov
or
inc
adc
sarb
enter
mov
jbe
sub
lock
sbb
mov
xor
mov
stos
or
pop
pop
int
sahf
loop
rorl
fadd
xchg
inc
hlt
fcompl
pop
inc
loop,pn
push
jmp
lods
add
sti
outsl
test
and
add
mov
test
jno
xchg
out
jo
dec
ret
inc
fwait
ds
cli
jp
push
int3
cltd
test
sub
push
jle
cmp
test
out
cmp
push
mov
jmp
xchg
enter
jmp
and
mov
sbb
and
imul
mov
inc
jmp
jne
clc
cmp
stos
xchg
gs
repz
aaa
mov
mov
jbe
scas
cmp
sbb
pop
mov
movsl
movsb
jns
cmpsb
insl
ficoml
incl
test
mov
out
testb
loope
inc
fldenv
cmp
subb
in
and
dec
shr
loopne
aaa
or
addr16
sbb
xchg
insl
xor
mov
js
loopne
cmp
pop
inc
jmp
ja
imul
mov
sub
shl
mov
pop
cli
fmul
movsb
jp
iret
movsb
and
xchg
pop
cmp
aas
mov
nop
mov
pop
mov
xchg
and
xchg
leave
xor
stos
in
clc
leave
add
out
adc
outsb
sub
sub
push
cmp
repz
pop
jne
loope
cmp
push
cmp
scas
mov
xchg
mov
sub
scas
push
loope,pn
jne
test
in
arpl
test
jmp
lcall
mov
inc
mov
fwait
sub
dec
mov
sbb
xor
pop
in
and
push
enter
push
pop
outsb
fldt
mov
fimull
cmpsb
jle
mov
jle
nop
mov
xchg
dec
pushf
push
push
lret
push
adc
out
xchg
dec
outsb
addr16
mov
mov
push
mov
xlat
push
imul
sub
mov
pop
jp
ss
push
pop
sub
enter
mov
mov
xchg
adc
icebp
pop
xchg
neg
scas
and
pop
filds
cmp
adc
in
inc
sub
sub
adc
mov
pushf
xor
pop
repnz
loop
lea
add
xchg
pop
fnstenv
add
jbe
stos
loopne
mov
daa
aas
xchg
xchg
loopne
cmp
mov
jb
jo
cli
push
mov
add
lcall
je
test
popf
mov
mov
dec
loop
adc
cmp
jae
jg
loop
jo
jns
xor
ss
je
jge
in
loop
mov
sbb
sbb
xchg
mov
push
xchg
ss
cs
xlat
and
lret
sub
fistps
loop
jecxz
mov
ss
call
adc
mov
shrb
mulb
lods
jp
lcall
aad
mov
js
loope
daa
in
shrl
fldcw
shlb
inc
rcll
pop
mov
insb
dec
leave
ficompl
sbb
addr16
addr16
in
pushf
repz
cld
outsl
xor
xchg
add
repz
out
addr16
iret
pushf
add
cmp
jnp
dec
pushf
mov
pop
insb
sub
add
cwtl
cld
loopne
fwait
ret
fimuls
das
imul
jo
ja
fs
jno
fdivrl
outsl
fwait
lock
mov
jge
jmp
sub
test
repnz
rol
test
sti
push
aad
pop
rorl
fisttpll
leave
mov
sub
xor
dec
shll
lock
mov
jl
pop
lods
shlb
xchg
mov
adc
lret
clc
sbb
cli
aam
fs
lcall
pop
das
and
cli
mov
mov
test
jb
js
data16
jo
cmp
mov
pop
out
mov
repnz
inc
cmc
xchg
xor
cmp
xchg
sub
inc
js
stos
aad
push
mov
loop
insl
aaa
mov
in
inc
stos
fisubl
inc
hlt
mov
adc
cmp
sahf
lahf
mov
je
mov
mov
xchg
dec
push
orb
clc
push
mov
dec
add
je
in
sub
mov
ja
mov
js
fsubs
test
sub
push
cmpb
orb
je
lods
mov
lock
imul
push
mov
iret
adc
out
xchg
insl
ss
mov
xor
scas
jecxz
mov
jecxz
repnz
popf
pop
pop
jge
push
nop
or
test
jno
icebp
push
or
inc
jl
pop
push
jmp
lods
dec
adc
jmp
inc
ds
xchg
dec
add
sub
jo
repnz
mov
ja
cmp
sbb
mov
in
incb
mov
dec
shll
rcl
add
add
pop
add
mov
ljmp
and
das
xchg
add
push
and
adc
js
push
insb
and
cmpsl
cmpb
loopne
cmpb
mov
ja
data16
jb
ja
bound
cmp
lret
mov
fnsave
sub
inc
dec
insb
xchg
aas
push
cmpsb
jns
inc
jno,pn
aaa
loopne
push
enter
fdivs
dec
push
mov
pop
pusha
cmpsl
hlt
test
shl
mov
mov
cmp
mov
cwtl
loopne
faddp
jmp
pushf
or
cltd
or
push
in
pop
test
cli
loop
sbb
mov
mov
arpl
jbe
mov
out
cmp
lret
add
mull
in
jns
add
fildl
movsl
aaa
and
inc
int
fnsave
lods
jo
xchg
mov
and
fisttpll
idivl
or
dec
push
sbb
pop
lods
jno
icebp
sahf
lret
xchg
lds
push
jne
and
cmc
adc
lcall
jne
cs
stos
pusha
orb
stc
or
sub
adc
xorl
mov
xor
inc
mov
cmp
mov
jmp
sub
and
pop
push
aad
test
loopne
push
stos
ret
leave
js
repz
shlb
jge
rcll
out
mov
jecxz
roll
mov
or
bound
popa
shl
imulb
ds
loope
push
sub
dec
fnstcw
sahf
inc
sarb
mov
mov
das
mov
jns
or
in
rorl
xchg
fstpt
pop
mov
jno
mov
xor
inc
cltd
push
enter
jle
into
cmp
jg
aam
mov
faddl
sti
stos
xchg
cli
scas
push
fidivs
lret
fildl
inc
and
test
sbb
arpl
push
clc
push
add
data16
leave
sti
shlb
dec
lock
lret
push
and
in
pop
pop
loop
sbb
xor
push
frstor
stc
aas
int
arpl
mov
fsubs
loopne
add
test
sub
xor
imul
or
jle
inc
iret
adc
mov
aad
leave
popa
dec
mov
jne
or
loop
loope
mov
jne
xor
fldt
mov
mov
or
jne
pusha
mov
scas
jbe
mov
aaa
xchg
rorl
xlat
jne
cmp
fldcw
setae
popf
push
stos
in
add
sbb
and
adc
addr16
xchg
mov
mov
cmp
fnstenv
mov
cwtl
mul
xorb
fnstenv
sti
or
in
fsubs
jb
push
enter
int
pop
xchg
xor
pop
and
xor
mov
data16
mov
push
xchg
inc
or
jp
js
jg
and
js
sub
mov
sar
xor
mov
mov
mov
add
repz
outsl
in
add
xor
jle
or
ja
bound
fidivl
add
cmpsl
and
test
and
rorl
lahf
sbb
or
pop
push
int3
aas
jns
jns
ret
lods
mov
scas
sbb
xchg
stos
je
xchg
sub
push
loopne
push
xchg
xchg
mov
pop
xor
aaa
lahf
das
hlt
push
enter
and
fcoms
inc
movsb
cwtl
outsl
pop
mov
or
or
cmp
sbb
add
mulb
iret
mov
push
movsl
cltd
scas
cli
mov
pop
aas
xor
jl
mov
test
lcall
sar
cli
jmp
dec
push
nop
repz
cs
xlat
cmp
fnsave
lea
lea
mov
dec
xor
add
xchg
lahf
jne
aas
fmul
jmp
out
iret
shlb
arpl
lods
lods
faddl
or
push
dec
sub
outsl
fwait
xchg
out
lret
push
scas
xchg
xchg
lds
push
fldenv
pusha
xor
js
push
test
dec
add
cmp
mov
pop
hlt
add
cltd
repnz
xchg
jmp
xchg
sbb
mov
push
lcall
xor
rorl
mov
inc
je
aam
popf
outsb
cwtl
adc
mov
outsl
ret
cmpsb
les
test
xor
lret
adc
call
and
push
cld
xchg
xchg
sti
jl
push
adc
mov
add
xchg
jns
mov
pop
stos
repz
dec
movsb
lea
clc
popa
pusha
fnstsw
movsb
pop
xor
pop
shr
jnp
int
lods
sbb
fstp
jecxz
scas
loopne
xor
jne
out
mov
in
lcall
fidivrs
add
sub
cmp
mov
sbb
cmp
leave
push
and
add
sahf
out
sar
aam
dec
adc
fstps
js
je
ja
scas
ss
jne
fisttpl
cwtl
nop
cld
sub
jle
andb
adc
adc
out
addr16
jl
call
fisttpl
xor
inc
jb
nop
sbb
frstor
xchg
dec
lds
push
test
dec
scas
add
gs
les
lods
ds
mov
sbb
fnstenv
aas
in
je
dec
jae
and
push
ja
xor
mov
pop
test
aas
jnp
sbb
icebp
sarl
fldcw
dec
iret
mov
inc
imul
cmp
jnp
and
jecxz
xchg
xchg
shrb
sbb
push
sarb
int3
sbb
aad
sub
xor
enter
inc
popl
ret
xchg
aad
ficomps
mov
inc
fidivrs
jg
push
insb
cwtl
int3
mov
add
xchg
lret
jmp
lea
add
stos
test
sbb
gs
jnp
lds
test
ja
insb
add
loopne
movsl
xchg
push
xor
shrb
test
std
jmp
and
loope
jecxz
icebp
mov
incb
mov
fisttpll
inc
addr16
divb
inc
and
pop
adc
loopne
sub
test
sarb
test
mov
cld
cmp
xchg
inc
aam
cmpsb
enter
ret
xchg
inc
inc
push
lods
or
jmp
dec
repz
add
mov
push
dec
jecxz
inc
shlb
xor
add
dec
sbb
movsb
lods
push
pop
pop
in
addr16
xor
inc
dec
adc
sub
test
insb
lock
sbb
jb
hlt
and
mov
mov
adc
inc
fsub
and
leave
cmp
mov
adc
mov
pop
mov
inc
aad
lea
lock
add
ss
sahf
adc
imul
repz
fmuls
dec
imul
jae
inc
test
pop
pop
ret
lahf
inc
pop
mov
popa
mov
cmp
outsb
inc
mov
cmp
xor
mov
lret
div
dec
xchg
xor
out
int
adc
fucomp
cmp
rcl
inc
push
jne
push
sbb
out
sub
or
in
xor
cld
xor
inc
fs
push
sbb
ja
or
mov
xchg
add
mov
notl
je
jb
adc
push
mov
shl
rcr
xchg
enter
sub
lret
mov
mov
mov
push
outsl
sahf
mov
xchg
shll
mov
rclb
outsb
imul
mov
jo
out
or
aam
shrb
xchg
call
mov
jmp
mov
and
xchg
fsub
xor
xor
aas
sub
popa
testl
ret
iret
and
push
pop
and
shrb
and
out
orb
mov
sbb
sbb
imul
sub
add
lret
adc
cs
test
inc
mov
xor
xlat
loopw
out
mov
lods
jp
and
sbbl
mov
lret
pop
pop
mov
sub
add
xor
push
jnp
mov
movsb
push
xchg
out
ret
pusha
jl
movsb
or
xchg
pusha
out
xchg
movsb
jno
mov
xchg
fs
lock
lods
cmc
mov
and
pop
add
mov
les
das
out
mov
sahf
xchg
pop
xlat
test
fmuls
push
push
leave
jb
out
dec
jb
mov
aaa
js
cmpsl
pop
cltd
outsb
mov
stc
pop
test
cmp
pushf
repnz
ljmp
subb
fnstenv
aam
mov
mov
cmc
pop
xor
mov
fisttpl
and
lods
cmp
test
mov
cmp
mov
cs
jmp
rorb
sti
jne
pop
and
pop
mov
movsl
push
sarb
fidivrs
testb
fdivl
sarb
mov
shrl
pop
inc
push
mov
xchg
lea
pop
test
pushf
fnstsw
dec
stos
rcr
and
hlt
mov
fst
ret
mov
cmc
out
lcall
enter
in
push
adc
dec
lret
and
dec
dec
pusha
inc
out
xor
out
cld
inc
cmp
pop
push
je
loop
in
cmp
sub
shlb
and
cld
lock
cli
in
aas
jge
mov
scas
lods
or
jecxz
sahf
in
insl
ss
mov
out
popf
and
inc
pusha
cmpsl
cmc
or
out
je
sbb
or
fnstcw
les
aad
mov
fwait
push
sbb
or
movsb
movzbl
pop
cmp
mov
out
jne
cmp
sub
icebp
add
jo
and
pushf
ret
mov
clc
mov
hlt
mov
into
enter
inc
fwait
jo
jmp
pusha
hlt
int3
mov
mov
xchg
dec
rorb
push
iret
shlb
pusha
push
mov
inc
in
add
add
and
aam
pop
adc
je
xchg
mov
sarb
lea
aas
out
fwait
inc
stos
inc
jne
jge
je
pop
popf
aas
rol
xchg
push
ret
rolb
fxch
cli
fsubrl
icebp
pop
xchg
mov
pop
xchg
movsl
sub
adc
sti
xchg
ret
jns
xor
mov
cmp
sub
les
mov
xchg
int3
push
roll
jge
mov
iret
lods
jae
movsl
and
xchg
nop
out
push
icebp
fld
add
cmpb
mov
imul
cwtl
loopne
sub
or
jge
mov
subl
outsl
outsb
dec
aaa
or
pushf
or
inc
outsb
jnp
xchg
mov
aam
xlat
mov
push
xchg
or
adc
add
fwait
stos
mov
out
jmp
rorl
icebp
mov
xlat
lret
sub
repz
sub
push
loop
push
das
xor
sbb
push
add
in
mov
in
mov
test
cmc
pop
jo
jne
outsb
mov
dec
jecxz
jno
loope
pop
cmp
xchg
inc
mov
rcl
out
mov
inc
rcrl
dec
dec
stos
out
lret
xor
cmc
inc
xor
jge
dec
xor
adc
popa
mov
and
xor
cmp
mov
pop
and
push
fisttpl
jg
out
stos
lret
adc
xchg
int
or
scas
xor
cmpsb
pop
pop
sub
add
jle
jb
call
add
sub
push
jmp
cmp
and
or
ret
cmpsl
dec
xlat
pop
int3
inc
adc
aam
enter
adc
aam
jl
mov
or
inc
arpl
cmp
adc
stos
xor
mov
mov
lds
pop
push
jns
fcoml
mov
pop
roll
xchg
pop
inc
cmp
leave
cmc
and
lods
mov
pop
les
sub
movsb
push
add
aas
cmp
cmp
int3
mov
repz
stc
ret
xchg
or
dec
aas
iret
subb
adc
mov
push
lahf
push
cltd
subl
sub
or
mov
cli
add
mov
and
xor
jbe
addr16
cmp
jno
std
lods
mov
ds
pusha
pop
lret
fstl
adc
jl
sub
adc
out
push
push
lahf
idivl
pop
inc
cs
gs
pop
mov
leave
in
int3
pusha
jge
push
out
es
lock
test
xchg
xor
and
dec
add
jmp
inc
sub
dec
in
mov
add
jbe
int
mov
outsb
jae
imul
iretw
pop
outsl
inc
push
or
push
mov
cs
inc
mov
sbb
outsb
int
mov
adc
mov
jecxz
rcrl
xchg
orl
outsb
adcb
dec
movsb
mov
test
push
mov
les
ret
sub
mov
inc
fmul
jb
inc
stos
mov
lss
insl
dec
mov
icebp
xchg
pop
incb
cld
insl
fmull
xchg
push
inc
inc
repnz
cmpsb
push
lret
add
inc
inc
je
mov
cld
cmpsl
push
dec
int3
sbb
mov
jo
in
aas
and
out
inc
dec
or
test
jmp
jmp
dec
icebp
push
ds
mov
and
mov
loopne
je
push
cmpsl
cmc
decb
jmp
arpl
mov
inc
add
adc
jb
or
loope
je
pop
dec
mov
adc
and
jb
mov
inc
inc
cmpb
cmp
add
pop
int3
mov
dec
adcl
in
testb
lcall
scas
dec
jb
cmp
movsl
pop
or
push
xor
mov
jg
sbb
inc
pop
int
push
cmc
cs
dec
cltd
xor
outsb
shlb
leave
or
iret
sub
arpl
out
or
jns
hlt
xor
lahf
ja
inc
jb
mov
dec
sbb
xor
popf
pop
pop
mov
pop
mov
sahf
sub
mov
jecxz
shll
adc
cltd
outsb
aaa
icebp
xor
ret
aad
ss
and
imul
pop
jne
call
iret
pop
xlat
push
lods
add
pop
insl
jle
cltd
inc
insb
xchg
out
insl
in
adc
sahf
loop
sbb
cmc
mov
js
ds
rclb
test
outsb
test
icebp
cmpsb
sbb
add
dec
add
mov
repz
xchg
js
mov
lods
sarb
les
rclb
imul
nop
jne
pop
testl
cmc
enter
xor
sbb
test
daa
xchg
fdivs
mov
push
xchg
xor
mov
pop
ds
mov
je
jl
movsb
movsb
in
stc
and
cli
pop
or
cltd
adc
jne
js
jg
inc
jg
ret
adc
fbld
sub
xchg
ljmp
jno,pt
mov
inc
adc
movsb
arpl
lcall
aaa
hlt
loopne
fcoml
mov
addr16
and
pushf
adc
push
sbb
cmp
mov
pop
xor
push
and
mov
sbb
cmc
pop
sti
sub
rorl
inc
push
int3
rcr
mov
sbb
xor
cmp
or
mov
shr
and
addr16
leave
cmp
sahf
push
ret
enter
fistpl
popa
fs
sub
mov
das
inc
push
in
push
ss
push
loopne
dec
xchg
movsb
sbb
xchg
mov
fcmovne
fiaddl
js
mov
sub
sti
mov
xorb
jo
push
cs
jl
fstpt
data16
jle
jmp
test
outsb
fidivrl
ficompl
call
call
cmp
mov
addb
gs
xlat
ja
push
ljmp
loope
repnz
sbbb
vsubsd
ja
imul
sub
cmpl
sub
pop
push
popa
nop
mov
cmp
mul
or
std
mov
shll
and
adc
pop
sub
cmp
push
fnstenv
int
orb
adc
insl
dec
ds
stos
ja
idivl
mov
imul
cmpsb
dec
filds
push
ljmp
pop
popf
fildll
pop
rcrl
dec
dec
lahf
mov
pop
aad
cmpsb
pop
arpl
cmc
or
insl
mov
popa
mov
push
loop
cmp
mov
sub
pushf
jne
fnsave
bound
xor
ja
cmpsb
fiadds
cmp
imul
add
addr16
pop
out
lea
adc
arpl
sub
in
out
lock
in
mov
push
pop
scas
cwtl
mov
mov
subb
xchg
mov
sub
sub
and
inc
js
jbe
jp
test
addl
xor
or
in
and
pop
push
sbb
shll
insl
jns
fnstenv
fcomp
pop
adc
loop
aas
mov
in
es
lret
inc
mov
and
ja
push
popf
xchg
cmp
sub
imul
outsl
push
or
stos
cmpsb
mov
push
mov
or
mov
das
jge
aaa
mov
fwait
add
fildl
aam
inc
add
mov
jnp
ljmp
jnp
xor
xlat
scas
adc
xchg
fs
movsl
jo
adc
add
inc
and
sbb
lret
mov
add
in
es
ja
mov
stos
sbb
mov
pushl
and
pushf
jge
jo
pop
out
dec
sbb
sub
jbe
mov
mov
arpl
and
dec
push
adc
push
dec
xchg
xor
inc
fisubl
addl
hlt
cmpsl
das
push
sbb
mov
bound
xor
sbb
xlat
adc
and
pop
bnd
icebp
push
movsl
and
out
pop
push
pop
mov
je
daa
out
dec
jbe
lods
push
jno
out
sbb
out
js
outsb
push
push
ljmp
mov
jae
jo
push
xor
xchg
dec
mov
fsubrs
pop
mov
xor
push
test
ffree
pop
test
test
mov
adc
sarl
int3
imul
adc
loop
cmp
dec
cli
js
inc
cltd
mov
call
dec
mov
lock
inc
mov
std
mov
out
je
insb
sbb
jl
enter
mov
addr16
sbb
jge
mull
add
mov
popa
adc
imul
xchg
lea
cltd
sub
mov
jno
push
bound
dec
popf
jecxz
mov
les
push
adc
xor
stc
xchg
push
sarl
out
jns
dec
pop
scas
test
jle
test
jne
loope
add
push
and
and
js
inc
stos
pusha
jo
sbb
xchg
add
test
in
shll
dec
repnz
add
xchg
fiaddl
stos
sbb
push
xlat
imul
pop
inc
bound
pop
dec
pop
xor
adc
out
std
xor
xor
out
out
outsl
loopne
xor
or
out
mov
jns
nop
push
inc
mov
loopne
jbe
and
jmp
xchg
xor
or
std
push
sbb
add
or
mov
mov
dec
sub
push
mov
stc
or
icebp
flds
mov
jg
jmp
in
icebp
lods
call
das
jge
fwait
sub
push
and
sub
sti
mov
imul
loope
push
adc
xchg
sbb
fs
movsl
push
push
and
arpl
into
jmp
cltd
sbb
or
fisttpl
icebp
dec
aaa
leave
sbb
mov
imul
and
sub
jecxz
call
mov
mov
out
push
mov
pop
hlt
movsl
mov
aas
fsubr
out
test
inc
sarb
pop
sub
frstor
ja
ret
and
leave
xchg
cmp
mov
mov
test
xlat
outsb
imul
les
inc
sbb
loop
pop
push
mov
jge
push
outsw
in
mov
mov
mov
sbb
mov
mov
cmp
or
jge
mov
pop
lret
and
lock
mov
mov
push
pop
popa
lret
jge
fnsave
outsb
sbb
and
cmc
fwait
inc
je
jg
out
inc
test
andl
mov
out
int3
loop
push
xchg
outsb
jp
out
clc
js
cmp
or
fisubrs
xchg
pop
adc
mov
pop
mov
pop
and
stc
or
cmp
shlb
cmp
incb
inc
sbb
cmovno
mov
jbe
lahf
or
addr16
pushf
adc
in
std
icebp
or
mov
push
sub
ljmp
and
mov
out
sub
icebp
push
pop
and
aad
sub
xor
or
clc
lahf
push
xor
cmp
xor
sbb
sub
std
fstps
out
dec
out
rcrl
and
hlt
and
enter
add
mov
js
lds
cmpsb
jnp
fidivrs
pop
out
cmpsb
hlt
xchg
sbb
add
repnz
sub
mov
mov
push
mov
paddusb
fidivl
hlt
jno
shll
fs
out
push
out
xchg
jnp
mov
andl
xor
pop
bound
xor
jnp
dec
xor
repz
push
jae
pop
stos
aaa
cmp
stos
adc
ja
out
xchg
push
sahf
adc
enter
stc
rorl
push
in
adc
or
mov
int
jmp
adc
daa
jge
mov
cmp
movsl
mov
lea
adc
mov
stc
cmc
cmpsb
rcr
test
add
cmp
ja
shrl
push
mov
push
push
insb
and
dec
mov
out
call
jno
inc
xor
jle
es
lahf
jmp
sub
push
movq
mov
in
filds
xor
lods
test
add
adc
fidivrs
pop
pusha
push
mov
xchg
dec
jmp
pop
sahf
xor
inc
sbb
shrb
sbb
pusha
mov
mov
adc
test
movb
mov
iret
or
out
fldl
sbb
fcompl
jge
pop
out
in
adc
add
adc
ss
jge
adc
mov
push
cli
inc
hlt
xchg
xlat
test
pusha
sbb
mov
and
adc
jmp
lods
mov
jnp
int3
push
out
adc
xor
mov
sahf
rclb
ret
imul
push
out
ret
push
adc
cli
sysret
push
testb
lahf
nop
push
es
scas
mov
or
or
loop
pusha
scas
mov
xor
lret
lea
ja
in
adc
aaa
fisubl
xchg
inc
or
cmp
sbb
rcll
or
sbb
mov
add
jp
push
lcall
sub
sar
xchg
repz
aam
repnz
leave
push
out
test
out
push
cmp
pop
sbb
add
mov
lcall
jo
pushf
jg
pop
out
dec
ret
mov
add
sbb
cli
cmpl
pop
je
mov
into
push
andl
cmp
push
iret
scas
bound
jne
or
ss
ffree
lret
sbb
xchg
ret
das
ds
stos
dec
push
cmp
sub
xor
adc
jb
sub
stos
pop
std
push
xor
stos
test
cld
dec
lock
cmpsl
negl
jge
stos
inc
test
les
mov
aaa
mov
dec
ret
lcall
cmpl
sub
mov
shll
inc
and
subb
mov
lretw
jnp
es
sbb
out
cltd
rcll
fnstsw
jb
sahf
push
daa
sub
xchg
mov
adc
cwtl
lea
test
pop
dec
xchg
xor
ss
adc
fstps
and
test
and
or
xchg
leave
sub
sub
imul
sub
ss
pushl
cmpsb
mov
ds
in
andb
aad
orl
push
push
sbb
mov
outsl
xchg
xor
fadds
lea
add
xor
jno
aas
jb
or
xchg
inc
dec
push
push
jb
sbb
fs
stc
stos
arpl
jle
cmp
push
cmp
adc
or
inc
pop
adc
inc
mull
call
xor
outsl
jo
xchg
pushf
sarb
fisttpll
sbbl
adc
outsb
mov
push
js
xor
jns
or
mov
in
test
mov
sbb
cmp
mov
ljmp
insl
and
hlt
sbb
or
js
add
jno
inc
cmpsb
add
mov
lods
cmpsl
cmpsl
add
loop
daa
mov
fdivp
sub
inc
jbe
jae
rorl
pop
cld
in
scas
dec
sti
pop
cmp
mov
pop
divb
repz
cwtl
cmc
jg
roll
dec
fisubrs
sub
mov
mov
push
dec
pop
scas
jmp
inc
mov
test
xchg
pop
mov
imul
mov
push
ret
pop
ret
das
pop
or
sbb
mov
in
in
dec
adc
sbb
push
inc
std
ljmp
ret
jo
jo
call
push
popf
aam
push
dec
in
fwait
mov
pop
outsb
sub
mov
push
jae
adc
inc
popf
mov
test
push
push
jge
inc
or
and
xor
xor
mov
lcall
xchg
cmove
push
flds
rol
cmpsl
pop
lret
inc
sub
inc
mov
jge
mov
enter
lds
mov
adc
inc
mov
sbb
xchg
in
int3
or
insb
pusha
daa
orl
sbb
cltd
stos
in
in
push
jbe
sub
in
pop
lcall
iret
into
dec
inc
int3
loope
mov
pusha
mov
sbb
mov
pop
mov
mov
adc
pop
daa
in
js
and
pop
add
mov
or
sbb
jne
push
sbb
loop
sti
adcl
lea
pop
scas
or
adc
mov
lret
int
add
sbb
ret
add
fldenv
inc
mov
out
jo
fs
stos
aaa
mov
incb
es
cmpsl
lcall
pavgw
xchg
dec
cmp
lock
sbb
mov
mov
sbb
adc
enter
cmpsl
in
mov
mov
dec
mov
loope
int3
lds
fldcw
cwtl
adc
cli
lcall
insb
dec
popa
repz
inc
in
iret
es
fistl
movsl
push
xchg
mov
mov
xchg
insl
movsb
mov
fprem1
or
pop
sbbl
mov
adc
xchg
popa
and
mov
add
in
add
inc
sar
adc
imull
jp
stos
pop
out
orl
jns
cli
aaa
xchg
xchg
mov
mov
fisttpl
adcl
lahf
negl
push
bound
adcb
and
mov
adc
push
std
stos
jp
sbb
adcb
cwtl
loopne
mov
jge
mov
mov
popa
adc
test
xor
aad
call
mov
sahf
stos
movsl
add
xchg
shll
aam
fld
jne
add
repz
mov
mov
xchg
xor
xchg
stc
xchg
clc
push
addr16
movsl
sbb
aaa
mov
stos
ljmp
call
jmp
clc
das
pop
xchg
das
ds
pop
adc
fstps
mov
push
lret
and
test
push
divb
dec
loope
fstpt
jno
mov
in
dec
sub
jle
jl
rcll
pop
and
cmpsl
shll
push
sti
sbb
inc
pop
cmp
dec
push
dec
push
ljmp
pop
and
add
lock
xor
pop
jne
lods
mov
jo
in
or
aam
adc
or
js
stos
out
fprem
std
and
xor
fstpt
dec
dec
xorb
lret
dec
and
inc
mov
cli
arpl
inc
inc
add
imul
dec
jg
popf
test
xchg
dec
push
adc
enter
in
mov
lea
mov
push
mov
cmpb
mov
push
push
into
je
sub
dec
ja
jae
xor
sub
sbb
in
into
fdivr
out
stc
aam
mov
add
mov
inc
rorb
mov
insb
and
push
or
mov
les
dec
inc
push
dec
rol
in
and
ficoml
jle
xor
mov
in
xor
adc
adc
mov
cmp
cmp
js
fildl
pop
test
fwait
lcall
lahf
adc
push
push
push
sub
popf
xchg
push
jnp
dec
and
pushl
dec
je
rcll
int3
stos
adc
adc
mov
ds
xchg
mov
and
mov
movsb
dec
das
pop
xchg
insb
add
or
test
push
or
mov
insl
sbb
and
jns
sahf
scas
dec
mov
and
ljmp
into
pop
sbbb
mov
jg
jo
adc
lock
push
sarl
clc
mov
arpl
test
loope
test
cs
repnz
lahf
pusha
sub
repnz
call
pop
out
dec
jle
mov
inc
mov
call
fiaddl
xchg
jg
push
adcl
ds
xchg
xchg
jge
xchg
ficoms
pop
popf
sub
sbb
int3
dec
sti
stos
jb
cld
loope
push
cmp
test
dec
mov
testl
cmp
jae
ret
pop
xchg
and
scas
mov
jl
rcrl
cmp
fs
pusha
pop
int
dec
repnz
and
dec
jns
icebp
shrl
stos
aam
sti
sub
jb
xchg
adc
adc
popf
je
outsl
and
lret
adc
lods
xor
popa
rorl
cmp
ror
rolb
add
dec
cmp
pop
xchg
fs
sub
test
mov
xchg
mov
add
sti
add
aad
mov
fidivl
syscall
adcl
jmp
fidivrl
int
sub
stos
aaa
loop
lods
int
incl
mov
mov
ds
xor
push
or
stos
stos
mov
pop
pop
xlat
imul
daa
lahf
cli
addr16
push
sbb
pop
jp
jne
xchg
into
push
or
cmpsb
adc
xor
xor
dec
pop
popa
sbb
dec
xchg
inc
aaa
testl
inc
int
inc
aas
cmp
mov
pop
fmull
and
push
arpl
jge
xor
jbe
subb
mov
xchg
dec
mov
sub
lods
mov
push
mov
cmp
daa
pusha
cmp
adc
pop
fisttpll
add
push
or
add
pop
cwtl
lea
subb
test
imul
push
sbb
mov
outsb
orps
adc
ret
jb
divl
sub
mov
cmp
repz
addr16
mov
jns
or
in
js
or
dec
mov
adc
sarl
mov
xor
sub
call
popf
adc
mov
lea
mov
in
push
cmp
add
push
imul
data16
das
cmp
push
sbb
stc
lods
test
iret
jo
adcb
sub
mov
inc
jne
dec
out
faddl
adc
push
jp
in
roll
push
or
in
fstpt
add
cmc
push
iret
gs
divb
sub
jmp
fistpll
stos
into
jb
push
loopne
nop
mov
jl
adc
les
pop
mov
jbe
adc
mov
loope
popf
ss
lods
xchg
mov
pushf
xchg
call
in
arpl
cltd
sbb
push
add
inc
xor
outsb
xor
cs
outsb
cmp
std
adc
fnstcw
dec
jmp
xorb
push
mov
jle
sbb
sarl
scas
aad
lret
dec
push
js
sub
mov
and
js
add
test
shrb
inc
cwtl
dec
mov
lods
ret
xchg
cli
mov
ss
scas
pop
mov
ja
dec
fdivr
pop
push
in
and
int
lods
in
jnp
ljmp
adcb
sub
push
mov
mov
mov
jmp
add
out
pop
inc
push
ja
push
outsl
addr16
mov
and
stc
mov
sarb
adc
add
je
sub
cmp
pop
inc
frndint
insb
imul
movsb
cmp
jns
iret
sbb
jno
aaa
add
jmp
je
adc
sbb
movsl
xor
xchg
inc
mov
mov
and
aaa
mov
push
mov
pop
jg
repnz
mov
xchg
jl
repz
in
decb
push
sbb
test
push
lret
mov
push
in
pop
fdivr
inc
mov
sbb
xchg
nop
loop
mov
pushf
add
int3
xlat
sub
xor
adc
sbb
adc
cmp
adc
shr
test
add
sub
ss
pop
xor
mov
mov
sbb
jnp
imul
adc
inc
call
arpl
or
sbb
or
sarb
cs
or
push
sti
sub
xor
repz
inc
stc
and
sbb
add
adc
jge
cmp
or
jnp
frstor
add
ja
rcrb
cmp
test
insb
cmp
nop
dec
mov
push
add
movl
leave
stos
jp
std
mov
xor
mov
fdivs
pop
daa
aaa
cmp
push
cli
pop
popf
pcmpeqb
aaa
out
xor
out
inc
adc
daa
push
clc
mov
inc
ss
loopne
fmull
mov
push
addl
pop
pop
mov
test
cwtl
icebp
cli
rcrb
and
jp
dec
inc
dec
and
sahf
ljmp
sahf
mov
sub
push
mov
mov
jb
movsb
fisubrs
gs
imul
inc
notb
mov
xchg
xchg
ret
and
sub
into
dec
fs
sub
mov
dec
inc
xorl
push
xor
lods
rcr
sahf
call
and
dec
mov
adc
push
daa
popa
add
std
dec
mov
pop
insl
sar
mov
xchg
movsl
pop
adc
xor
and
and
sbb
dec
pop
mov
inc
xlat
push
push
mov
ret
addb
push
and
imul
insl
lea
js
sub
loop
scas
aas
jbe
mov
dec
aad
lea
pushf
cmp
pop
xchg
sbb
pushf
syscall
inc
mov
sahf
lods
jne
jmp
xor
insl
mov
negl
mov
mov
jecxz
xchg
or
sub
xor
imul
pop
mov
dec
loopne
pop
or
jecxz
jp
clc
mov
cwtl
xor
sbb
mov
pop
or
xchg
mov
repz
adc
das
push
stc
jo
popf
jge
imul
and
mov
js
scas
dec
cld
sbb
repz
mov
stos
inc
inc
pushf
fsubr
adc
lods
jns
push
cmpsl
mov
inc
shr
sbb
ss
jl
je
daa
nop
pop
xor
add
ja
and
cld
add
pop
cmp
lcall
dec
in
negb
fdiv
cmpsl
rorb
xchg
clc
jbe
inc
int3
in
lcall
inc
addr16
sub
sub
ret
cmp
arpl
outsl
mov
lahf
stos
push
stos
stos
arpl
pushf
stos
pop
leave
xchg
aam
xor
mov
mov
xlat
mov
inc
lret
mov
push
aam
ja
cs
pop
pop
add
push
xchg
dec
mov
push
gs
xor
add
sbb
push
ffree
ds
insl
test
mov
sbb
ret
fiadds
jge
mov
cltd
repnz
xor
stos
adc
sti
cld
push
stc
sarl
fimull
aas
dec
or
mov
out
and
test
fmuls
insl
push
stos
gs
lahf
xor
pop
divb
ja
dec
sub
mov
das
lahf
dec
addr16
fldcw
lods
ficomps
jl
pusha
bound
mov
sub
out
xor
push
scas
rol
xor
lods
push
repz
lahf
push
fldl
sub
mov
outsl
inc
lret
gs
movups
dec
mov
add
adc
scas
pop
jg
dec
and
xchg
lods
das
mov
fs
test
aad
gs
scas
and
test
mov
xchg
add
jno
pop
mov
imul
rolb
jmp
ret
lds
xchg
fwait
repnz
lret
and
sub
test
jno
jo
mov
add
pop
fsubl
inc
sahf
mov
cmc
pop
fisubrs
je
cmp
cld
cltd
jae
xchg
cmpsl
inc
cs
push
mov
clc
and
js
mov
insb
icebp
sub
cmp
mov
jp
fnstenv
das
push
sbb
out
mov
push
and
and
pop
mov
pop
lahf
in
jne
jle
jns
push
out
daa
pop
loop
test
adc
mov
jl
jnp
jb
pop
push
dec
shll
xchg
sub
push
sub
push
push
sarl
fsts
mov
add
adc
shll
xchg
into
negb
movsb
stc
inc
das
or
iret
fcoml
std
push
xchg
mov
addb
push
jl
jg
push
fcmovnb
dec
stc
push
add
in
call
jno
sub
xor
arpl
cmpsl
sti
roll
xchg
loopne
inc
loopne
xorl
mov
bound
inc
cmc
out
filds
push
xor
hlt
push
fnstcw
fcmovu
adc
pop
repz
push
xchg
add
es
adc
addl
cmpsl
inc
aas
push
cmp
in
jle
and
mov
mov
ja
mov
stc
or
cwtl
mov
sbb
xor
lahf
movl
jne
mov
mov
or
in
call
cmp
xchg
pusha
loopne
mov
inc
mov
lahf
das
sbb
push
out
or
outsb
jbe
pop
pop
or
cld
mov
rcl
out
bound
sbb
or
dec
ljmp
add
mov
jns
aad
out
ljmp
adc
fisubrs
adc
cmpsb
mov
test
mov
sub
test
mov
sub
bound
mov
pop
dec
mov
inc
ds
sti
sbb
mov
roll
lcall
mov
ja
clc
imul
call
inc
xchg
clc
jne
xchg
xor
lret
movb
push
shrb
fisubs
adc
xor
jnp
push
imull
add
popf
outsl
int3
jns
jg
scas
add
adc
xorl
and
mov
push
popf
dec
xor
arpl
or
lret
add
loop
fnstcw
loope
les
push
lods
or
pop
stos
incl
or
mov
cmp
mov
xor
sbb
inc
jmp
ret
cld
bound
aaa
fdivl
je
ret
stos
inc
xchg
xchg
pop
push
shll
inc
push
loop
adc
mov
and
xor
popf
push
adc
lret
dec
push
pop
xor
call
dec
call
nop
jmp
iret
mov
xchg
int
mov
aam
jae
xchg
mov
leave
insb
sti
ds
clc
xchg
clc
es
push
sahf
xchg
lea
dec
fs
lds
loope
popf
out
and
mov
xor
arpl
cs
push
lea
or
push
or
xorl
fdivrp
sbb
ficoms
and
sahf
add
lods
inc
daa
rol
xchg
dec
dec
mov
pop
andl
mov
push
pop
mov
mov
in
add
sbb
scas
daa
out
push
jno
inc
mov
push
cmp
mov
pop
lcall
jb
push
push
cs
mov
insb
idivb
fwait
jno
jmp
sbb
js
loopne
hlt
jge
sub
test
adc
and
pop
add
mov
add
daa
dec
imul
hlt
lret
fidivrs
loope
jl
sub
nop
adc
popf
loopne
cli
push
dec
shlb
sub
mov
aaa
sbb
shr
jge
rcrb
jmp
ret
aam
adc
sub
jne
mov
adc
popa
xor
jb
and
fndisi(8087
icebp
push
and
jecxz
and
sbb
dec
dec
mov
in
paddusw
dec
fs
jbe
and
mov
and
test
leave
mov
jge
in
popf
push
xchg
mov
mov
popf
repnz
out
sbbb
jbe
inc
add
jg
sbb
shrl
sbb
jnp
inc
jmp
mov
out
dec
jle
inc
push
sbb
cli
fldt
pusha
cmp
or
in
fcomps
dec
cmpb
hlt
mov
shll
add
fstpl
pop
icebp
outsl
out
mov
push
push
fnsave
rorl
cmp
scas
imul
sbb
inc
inc
loope
popf
inc
mov
push
ret
sub
ret
cli
push
aas
inc
in
mov
loop
add
adc
loope
es
and
je
push
divb
dec
jle,pt
sbb
daa
pushf
mov
adc
arpl
aas
les
lods
jecxz
idivb
ret
lahf
neg
mov
xor
mov
mov
pop
movsb
xor
mov
mov
out
sbb
mov
cmc
ret
sub
cli
mov
aad
xchg
lock
jne
add
into
push
ret
js
mov
stos
bound
outsl
adc
imul
sti
rcr
ljmp
mov
cmp
push
icebp
lahf
add
pop
inc
jbe
xlat
mov
pushf
movsb
or
iret
xor
std
sbb
push
aas
adc
enter
std
dec
les
lcall
and
cmp
mov
iret
jge
inc
clc
cld
cltd
stos
push
test
ds
loopne
aam
lcall
mov
sub
mov
test
xchg
in
sti
cwtl
or
jns
and
mov
int3
iret
fs
push
xlat
orb
jp
test
ljmp
xchg
out
rcr
lea
cmp
leave
jp
fmull
out
sarl
mull
fildll
cmpsb
cli
cmp
add
xchg
jo
rcrl
das
sub
mov
call
jle
mov
data16
leave
arpl
xchg
pop
mov
inc
into
sbb
pop
jnp
mov
out
sub
lods
aas
push
inc
cltd
jl
and
dec
js
xchg
mov
fcmovnbe
adcb
test
test
shl
idivl
test
sub
loop
popa
lcall
mov
outsl
cmp
dec
popl
cltd
sarb
adc
repnz
pusha
sbb
pusha
cmp
and
mov
jno
xor
xor
and
mov
jno
pop
fs
pusha
test
jbe
aas
lds
xchg
jge
sub
in
pop
add
cmp
xchg
ds
inc
movsb
adc
hlt
insb
sub
bound
xchg
sbb
xor
xor
outsl
popf
add
shlb
leave
xchg
in
test
push
movb
decb
lea
scas
out
icebp
mov
int3
xchg
lret
rorl
xchg
jg
add
shlb
mov
dec
mov
dec
test
or
mov
stos
lods
inc
push
mov
adc
cwtl
xor
lods
sahf
xchg
jno
popa
repnz
xchg
movsl
pop
mov
jns
or
js
jo
push
mov
mov
cli
and
movsb
xor
mov
andl
inc
popf
add
int
jb
xlat
or
push
xlat
push
fwait
jl
dec
lret
stos
or
bound
mov
or
fs
add
lods
push
jge
cld
push
ds
dec
mov
cmp
test
das
mov
hlt
shlb
push
gs
mov
push
adc
push
test
cli
pop
push
fstps
lret
test
ds
pop
sub
cmc
push
dec
test
in
inc
or
out
cmp
xor
mov
adc
mov
adc
mov
mov
and
push
cwtl
or
dec
or
and
dec
sti
or
mov
rcl
ficompl
je
lock
jl
addr16
fdivl
ss
sar
lcall
stos
pop
dec
sbb
inc
add
push
mov
repz
jmp
sbb
fstpt
outsb
mov
jl
int3
test
sbb
lock
loope
mov
cltd
pop
jns
cli
sbb
cli
enter
and
cli
cmp
add
pop
fldl
hlt
sbb
and
jmp
imul
and
jge
dec
int
aad
xor
push
push
mov
inc
iret
scas
adcb
and
js
mov
fucomi
jnp
sar
mov
cmp
cmpsb
les
imul
addr16
jne
ret
fsubl
ret
cltd
mov
out
jne
pop
mov
popf
push
xor
ja
xor
push
movzbl
pusha
mov
inc
inc
inc
das
mov
xor
pushf
and
in
pop
inc
xor
adc
arpl
pusha
mov
mov
jbe
je
add
or
decl
loop
push
mov
int
mov
or
test
jns
adcl
repnz
loopne
das
popf
dec
fidivrl
push
mov
ja
pop
pop
aas
notb
and
push
fs
jl
frstor
stc
movsb
or
sarb
lcall
mov
sub
dec
dec
clc
aas
xorb
nop
fistps
test
mov
sub
das
add
jl,pt
out
testl
push
xchg
mov
push
outsb
inc
push
fadds
mov
xchg
mov
or
loop
add
loopne
stc
imul
inc
pop
mov
mov
inc
jecxz
jl
xor
mov
shlb
lcall
fs
ja
shlb
push
pop
sahf
fsubr
ljmp
push
adc
int
add
scas
mov
push
add
adc
data16
fisubl
outsl
adc
sub
push
sbb
movsl
stos
add
out
and
scas
aad
mov
cmp
lahf
adc
xchg
push
jns
push
lret
out
push
mov
cmp
in
mov
fadds
jns
or
fdivr
cwtl
ds
mov
adc
mov
add
push
adc
push
faddl
xchg
int
jno
pop
mov
sbb
pop
fcmovu
sub
icebp
lds
ja
test
or
loope
ds
sub
fistl
xchg
mov
xor
dec
lods
loope
and
sbb
push
lcall
into
popf
andl
andl
in
mov
dec
or
movsb
or
das
stos
pop
add
push
add
adc
push
fdivrp
xchg
push
sub
jge
fs
pop
and
popf
sbb
cmp
dec
addr16
dec
sub
cwtl
and
daa
cltd
mov
loop
rclb
jle
xchg
ds
or
mov
jge
xchg
xchg
call
jmp
inc
lods
lock
mov
scas
push
inc
push
stos
or
lret
add
adc
outsl
mov
out
iret
daa
call
enter
lods
daa
jp
sub
repnz
dec
mov
mov
add
push
cmp
dec
lret
xchg
out
xor
adc
cmp
les
mov
mov
and
rcll
xchg
mov
loopne
data16
arpl
dec
cmp
aam
adc
out
xchg
pop
mov
test
and
cmp
jge
cmpsb
enter
les
int3
jbe
dec
outsb
mov
pusha
rorl
in
std
pop
sbb
dec
xchg
cwtl
push
pop
push
sub
iret
les
mulb
call
int3
sub
into
or
mov
shrl
loopne
das
mov
pop
xchg
pop
and
adc
je
out
scas
jnp
sbb
pop
call
das
sti
es
add
iret
sbb
pop
mov
inc
fldl
int
xchg
dec
cmp
push
insl
jbe
repnz
mov
cmp
test
dec
lcall
aad
jl
adc
add
cwtl
sbb
out
push
add
or
cmp
xchg
std
js
popf
nop
out
dec
add
aad
aad
xchg
push
xorl
jg
jecxz
inc
es
inc
imul
repnz
cs
call
mov
mov
inc
mov
aad
push
mov
cmp
xor
test
add
mov
sbb
mov
push
xor
dec
pop
fs
lea
insb
in
jge
mov
jp
inc
addr16
sarb
insl
sub
movsl
mov
pushf
xchg
mov
sub
jg
xchg
sub
mov
cs
dec
das
sub
dec
out
ja
in
pop
movsl
and
push
addr16
hlt
idiv
push
in
out
in
lcall
fldl
mov
pop
shlb
jle
movsl
inc
xchg
pop
fdivr
or
push
inc
test
mov
lods
push
shll
xchg
mov
mov
mov
push
sub
pop
fbstp
bnd
xor
scas
addr16
icebp
push
jnp
xor
mov
cmc
cs
ljmp
ja
ret
sub
and
cwtl
rolb
and
xor
je
fnstcw
ret
sbb
xchg
inc
sbb
test
pop
cmp
repz
ljmp
ret
aad
out
pavgw
xchg
push
push
les
xchg
xor
cmp
xchg
icebp
adc
inc
outsb
pop
pop
xor
jns
add
out
pop
push
sbb
stos
cmpsl
out
mov
jge
jge
xor
daa
orl
pop
mov
push
jnp
mov
repz
jo
mov
dec
dec
movsl
xor
filds
int3
xchg
scas
or
mov
popf
loop
jl
je
test
or
add
into
roll
jp
scas
xchg
cmp
cmp
fsubs
push
inc
sbb
xchg
aam
xchg
jge
adc
inc
outsb
aad
pop
inc
or
jbe
popa
or
dec
sub
xchg
daa
int3
stos
pop
lock
push
mov
xlat
mov
lods
jae
lret
outsl
popf
stos
mov
lods
pop
cmp
scas
int
out
insb
jecxz
pusha
inc
jle
mov
cwtl
xchg
jnp
movsl
cmpsl
mov
out
mov
or
or
push
shrl
lcall
add
in
mov
jmp
xchg
in
sahf
or
out
fmul
add
imul
cmpsb
push
cmp
pop
sarb
les
mov
and
sub
mov
xor
lret
popa
jl
aad
jle
mov
push
push
sub
mulb
arpl
push
xchg
testl
nop
jno
es
gs
xor
or
pop
and
adc
dec
aad
sbb
shl
add
mov
adc
dec
int
andb
sub
xchg
mov
mov
jo
xor
clc
fdivs
loopne
xchg
ja
jp
jl
fmull
rol
in
fwait
in
sahf
bound
sarb
pop
cld
outsb
rcrl
jns
rolb
fdivrl
lahf
jge
jg
inc
cltd
movsl
stos
pop
dec
jmp
push
cltd
stos
jnp
testb
stc
dec
insb
pop
repnz
mov
mov
movsl
xchg
sbb
cmp
movsb
outsl
sti
jecxz
fwait
push
jbe
xor
js
jbe
push
cwtl
adc
hlt
mov
movsl
mov
loopne
mov
or
outsb
dec
jns
xlat
mov
lcall
or
pop
xchg
push
and
or
in
mov
fmul
mov
lcall
and
inc
shrb
stos
je
sub
dec
sbb
mov
mov
inc
iret
outsb
adc
out
push
cltd
jmp
push
inc
or
xlat
shr
pop
std
rcrb
into
ljmp
mov
insl
mov
cwtl
cmp
add
test
fs
mov
mov
rclb
loopne
jp
add
jb
sub
stos
scas
lds
jg
les
push
sarl
xor
aas
int
mov
dec
es
xchg
sbb
mov
mov
inc
dec
aas
mov
or
test
xchg
inc
adc
xchg
scas
mov
dec
pop
pop
pop
jb
outsb
xchg
cmpsb
int
jle
and
or
jmp
mov
test
xor
xchg
lahf
pop
stos
sub
jno
incl
and
xchg
test
jle
or
mov
shll
outsl
bound
inc
outsb
lahf
lods
call
dec
das
dec
inc
xchg
cwtl
cmpsb
pop
ret
push
cmpsl
jno
xchg
pop
inc
andl
das
and
pop
aam
mov
push
pop
mov
bound
orb
aas
rep
int
andb
hlt
hlt
frstpm(287
mov
sbb
jl
dec
pusha
xchg
pop
loop
inc
nop
pop
xchg
jno
punpckhbw
fdivrs
inc
repz
fimuls
dec
dec
iret
inc
push
rcll
int
andl
popf
shl
mov
in
jnp
push
int3
sar
push
push
dec
push
pop
out
popf
fisubs
sarl
sbb
and
sbb
lock
cmp
out
aas
imul
aad
jo
mov
push
and
jae
dec
jp
jecxz
xchg
lds
adc
movsb
mov
dec
push
cwtl
xadd
fcmovnb
push
push
leave
arpl
ret
test
xor
jnp
sub
icebp
pusha
sbb
push
fmul
jp
lds
sub
xchg
test
sti
cmp
mov
mov
movsl
jle
dec
cmc
in
push
or
push
add
lahf
loope
sbb
stos
mov
push
mov
lahf
inc
dec
push
scas
fildl
je
scas
xor
pop
adcb
loop
xchg
pop
je
insb
mov
sbb
js
pop
nop
mov
ljmp
add
sbb
shlb
call
xchg
out
idivl
std
out
and
bound
mov
push
pushf
lret
mov
repnz
lahf
je
adc
add
mov
sbb
push
icebp
out
cmp
fisubs
push
mov
push
mov
jl
sbb
test
and
shl
mov
shlb
nop
xlat
fs
mov
ret
cmpsl
xor
js
adc
out
dec
scas
xchg
pusha
push
or
mov
cmpsl
adc
and
fcoms
mov
adc
mov
rcr
mov
imul
or
pop
push
rolb
jle
stos
mov
sbb
sub
data16
xor
add
mov
adc
pop
mov
jb
rorl
or
jno
insl
stos
mov
sub
pusha
frstor
insb
mov
mov
enter
push
imul
stc
pop
imul
xlat
stos
mov
lock
fwait
or
lods
add
iret
push
or
jns
inc
jle
push
in
xor
cld
les
out
cmp
adc
jo
out
dec
je
push
mov
decl
adcl
lcall
mov
or
cmp
add
push
popf
inc
or
push
out
movsb
imul
jl
sbb
sbb
clc
pop
inc
fstl
in
push
subb
or
push
scas
aam
xchg
push
jno
roll
dec
mov
test
nop
mov
mov
dec
or
pop
dec
inc
add
lret
mov
scas
popf
inc
loop
cmp
push
pop
xor
push
sub
adc
test
inc
dec
insb
jns
push
dec
xor
add
enter
jge
aam
xor
enter
mov
xor
nop
cmp
sub
out
lds
filds
sbb
leave
leave
test
loop
mov
push
ja
sub
push
test
jle
xor
ret
cmp
jb
insb
cmp
push
cmp
pop
cmp
push
nop
scas
dec
jo
push
mov
mov
xchg
popa
or
push
insl
mov
mov
jmp
adc
enter
pop
aaa
cmpsb
pop
outsl
add
cmp
lea
inc
xchg
xor
incb
push
les
fsubrl
push
sub
aaa
enter
xchg
jl
aam
adc
mov
pop
push
jo
jne
idivb
aad
fistpl
dec
lret
ljmp
mov
iret
inc
lods
sub
cmp
jo
ss
out
cwtl
or
xchg
sbb
add
jbe
pop
and
fs
fcomps
mov
pop
dec
gs
adc
movsb
jns
imul
xchg
cmp
jle
stc
mov
jmp
lods
mov
push
or
sbb
pop
ret
movsl
pop
xlat
repnz
push
repnz
cli
cmp
loope
dec
mov
mov
insl
mov
jno
mov
ret
adc
push
pusha
xchg
lock
andb
notb
push
std
lret
lret
ja
jo
cmc
jno
rcl
ja
add
mov
push
mov
loop
jecxz
out
test
jne
fsts
loopne
xchg
pusha
xchg
ret
icebp
ss
sbb
fisttpl
push
les
scas
jle
clc
push
cmp
xchg
enter
add
test
mov
sti
or
test
sbb
add
scas
scas
xor
in
aaa
in
lcall
iret
sub
inc
out
xchg
or
add
stos
scas
imul
cmp
aad
push
mov
aaa
pop
cmp
jle
sbb
pop
xchg
cltd
pop
inc
adc
movsb
sbb
dec
icebp
mov
mov
mov
adc
negl
ror
and
sarb
adc
inc
inc
mov
fwait
std
xor
xor
mov
loop
cmp
repnz
sbb
lret
push
es
push
add
adc
cs
and
int
jp
mov
dec
mov
cmp
xchg
insb
or
pop
push
push
inc
cltd
mov
fdivrs
cmp
mov
jge
mov
repnz
mov
and
or
push
nopl
cmpsb
lods
mov
stos
mov
mov
imul
sbb
sbb
lods
imul
mov
sarl
sub
pop
push
push
inc
stos
enter
xchg
out
loope
int
dec
sbb
sub
jns
testl
stos
sti
fildll
loope
inc
mov
adc
add
vpor
push
sub
and
movsl
insb
cwtl
dec
es
and
mov
and
outsb
dec
pop
ljmp
xchg
and
cs
gs
dec
sbb
rorb
push
inc
xor
sub
pop
cmp
push
sbbl
jo
xchg
loop
push
inc
sbb
xchg
test
pop
lahf
dec
cmp
mov
ds
dec
fdiv
sti
mov
mull
test
cmp
cmpsb
and
icebp
cmp
pusha
add
pusha
push
sbb
add
lods
dec
adcb
push
jae
lret
jge
sbb
rorb
arpl
cmp
cmpl
inc
ljmp
pop
cmp
ror
push
rcl
imull
sub
pop
es
loopne
sub
adc
fildl
jge
mov
and
jae
inc
xlat
xchg
xchg
ds
stos
cmp
jle
dec
sub
neg
cmp
mov
xor
jmp
jecxz
leave
mov
cmp
mov
rcr
fcmovnbe
inc
xchg
or
jge
push
in
xchg
jno
mov
lock
fdivl
fcom
daa
icebp
stos
fstp
popf
lcall
fs
in
outsb
je
push
cmpl
mov
xchg
sbb
cs
loopne
or
test
xor
pop
pop
jle
fsubrl
popf
push
mov
popa
call
fcos
inc
and
aad
in
inc
pop
and
std
or
and
aas
popf
fucomi
and
inc
cmpsl
adcl
sub
xor
push
repnz
push
lahf
in
loop
call
in
aad
ret
cmp
enter
dec
das
loop
mov
fistpll
inc
mov
outsb
jns
arpl
lahf
aad
jno
imul
mov
fisubrs
sub
adc
stos
test
mov
dec
push
dec
add
xchg
in
mov
sbb
sbb
jns
xor
dec
pusha
jne
daa
aas
rorb
cmp
sbb
ror
inc
in
out
jecxz
push
in
les
xor
loopne
and
stc
inc
mov
dec
sub
cmp
aaa
add
push
and
xor
mov
or
xchg
push
push
and
sbb
movsb
mov
subl
test
outsb
xor
shl
push
test
jp
dec
cmp
push
in
pop
push
mov
test
or
xor
mov
sub
call
jg
mov
mov
outsl
popa
add
lahf
mov
gs
leave
inc
or
daa
mov
lcall
pop
lods
gs
in
test
repz
nop
or
les
test
imulb
push
mov
popf
addr16
or
mov
popa
addr16
mov
mov
pop
sbb
mov
dec
shlb
outsl
push
lret
enter
incb
cs
shrd
cld
jno
sub
pop
pop
gs
mov
xchg
gs
push
mov
cld
test
inc
xlat
in
lock
push
or
jecxz
es
xchg
pusha
add
pop
divl
pusha
in
xchg
or
loope
cmp
push
push
xor
push
cmpl
mov
adc
lret
sub
cmp
jbe
cld
jmp
jecxz
jne
pop
aam
and
out
mov
int3
mov
subl
and
sub
mov
bound
jecxz
pop
gs
or
insl
xor
mov
cmp
arpl
movsl
xchg
daa
insl
pushf
cmp
call
mov
push
and
jp
mov
aaa
aad
cwtl
adc
or
sub
rcll
adc
mov
pop
test
push
xchg
or
inc
mov
pop
call
add
cwtl
fwait
mov
cmpsb
js
or
xchg
imul
in
push
out
mov
imul
sbb
inc
lret
lahf
inc
bound
and
push
inc
fistpl
out
mov
div
mov
lret
mov
scas
mov
jae
push
outsb
jne
pop
movsl
push
or
push
fwait
icebp
pop
pop
lret
and
adc
cmpsl
dec
enter
call
lret
lods
in
outsl
push
lret
cmpsl
inc
xor
xchg
mov
lret
clc
insb
or
ret
xchg
push
xchg
mov
dec
insb
inc
and
xor
fs
pop
and
sbb
dec
aad
in
xlat
outsl
dec
ds
fcoml
ss
or
je
xor
inc
jmp
sub
enter
sbb
mov
scas
mov
sbb
pop
fistpll
add
add
repnz
divb
xchg
inc
jle
xchg
mov
cmpsb
push
jo
repz
xchg
lds
shl
xor
xor
lret
aam
int3
xor
outsl
jo
or
push
jle
jne
cli
xchg
or
inc
sub
mov
xchg
sbb
dec
in
pop
push
mov
fists
rorl
sub
cmp
frstor
mov
cmpsl
lods
inc
shrb
testl
fdivrs
rolb
jl
pop
test
icebp
pop
fldcw
mov
or
or
jb
clc
je
stos
stos
mov
fsubr
addr16
clc
lock
mov
xchg
cmp
dec
bound
jno
es
inc
and
lods
xchg
out
adcb
mov
shll
xor
sbb
adc
mov
push
daa
rcll
jno
std
cld
mov
xlat
push
sub
jmp
ja
sub
loop
xlat
add
add
in
xchg
mov
movl
xor
inc
or
and
mov
das
out
ja
test
and
push
add
cmpsb
insl
push
mov
mov
or
out
or
xchg
mov
pop
inc
jmp
sbb
popl
loopne
stos
std
pushf
movsl
xor
sti
iret
push
cld
daa
rcrb
jg
inc
mov
push
mov
fstps
imul
divb
push
lahf
cmp
ss
xchg
popf
aas
repz
sub
lss
aam
push
test
dec
cmc
enter
fadd
fildll
out
mov
or
jbe
and
mov
fstpl
lahf
pop
jmp
pop
fcomps
xor
adcb
lods
scas
adc
daa
clc
cwtl
popa
mov
outsb
sti
and
clc
das
mov
inc
dec
or
sub
xor
mov
ja
xchg
adc
lret
hlt
push
mov
xchg
fisttpl
repz
fmull
mov
lock
jae
fistpll
mov
ret
jnp
repnz
pop
nop
dec
aad
push
insb
cwtl
mov
das
xor
out
mov
cmpsb
clc
inc
test
push
pop
clc
xchg
mov
push
aam
push
cmp
push
or
fnstenv
mov
aas
inc
movsl
cmpsl
shr
inc
mov
sti
enter
pop
js
icebp
pop
das
es
roll
rcrl
cmp
fsts
js
cwtl
and
fdivl
insl
inc
cmp
dec
push
into
ja
dec
xchg
pop
cld
lahf
pop
shrl
jp
mov
pop
mov
cmp
cs
cmc
add
sbb
divb
mov
xor
adcl
pop
andb
cltd
sbb
jg
fstl
out
lcall
xor
push
mov
fiaddl
cmp
xorl
outsb
add
cmpsb
or
fnstenv
mov
xchg
xor
cwtl
int
andl
mov
test
imul
adc
add
jns
jno
cmp
xchg
sub
rcrb
xchg
idivb
xor
xor
scas
xorl
and
adc
xor
adcl
mov
mov
cmp
xchg
xor
adcb
and
pop
popf
mov
inc
enter
ficompl
arpl
test
adc
push
mov
into
push
cmc
jmp
fs
call
cmp
sub
mov
das
int
mov
call
push
fstpt
ror
jle
add
dec
scas
xor
cmp
or
jmp
gs
xchg
cmp
outsb
loopne
in
aam
and
int
pop
xchg
test
arpl
insb
shl
mov
jp
aad
xor
repz
lret
mov
jmp
shlb
repnz
cmp
loopne
cli
popf
cld
pop
cmp
ds
xchg
adc
pop
sbb
js
stos
sti
insl
jae
sti
sahf
out
push
sbb
xorb
subb
jmp
cmp
bnd
mov
out
das
ja
mov
push
dec
test
mov
xorb
pop
dec
xor
mov
es
sahf
xor
xlat
cmp
xchg
mov
pop
popf
dec
add
scas
mov
cmpsl
xor
mov
outsb
stc
in
outsb
xchg
sahf
adc
cld
lea
mov
imul
xor
int
dec
pop
mov
mov
inc
loope
out
fcmovnb
push
loop
int3
iret
jne
les
stos
in
iret
mov
mov
sahf
icebp
jne
and
cli
je
xchg
pop
pop
add
out
and
ljmp
ret
testb
ss
into
ja
pextrw
popf
mov
push
loope
jbe
daa
shlb
lods
out
and
andl
pushf
xchg
sub
cmpsl
dec
stos
pop
fimull
clc
mov
xchg
aas
insl
push
cli
imul
cmc
int
mov
mov
popf
and
inc
mov
adc
mov
sub
rcll
add
xchg
or
add
or
push
mov
jmp
cmpsl
repz
xchg
lret
add
sbb
rorb
sti
es
pop
fidivrl
jae
push
or
xchg
lahf
addr16
sahf
std
scas
jp
lock
mov
push
lea
sti
or
test
xor
sub
xor
mov
adc
mov
push
les
les
lret
and
ror
loop
sbbb
fwait
adc
test
sub
in
and
pop
sbb
and
jns
cmp
jg
test
cmpsl
sub
test
pop
outsl
addps
mov
inc
mov
cli
mov
jbe
and
push
cwtl
repz
fidivrs
scas
std
lret
push
xor
test
cmp
xchg
xchg
cwtl
jbe
inc
call
jno
jnp
inc
pop
sbb
iretw
dec
jno
push
push
mov
int3
mov
hlt
test
dec
xchg
xor
mov
stos
push
mov
ret
rcrb
cmpsl
jae
jmp
mov
jns
mov
hlt
iret
or
popa
mov
out
jbe
xor
fcompl
pop
cmp
and
fs
mov
xor
and
add
push
sub
or
xchg
sahf
sbb
adc
pop
clc
out
stos
jne
fs
test
inc
inc
data16
sbb
cs
lcall
inc
enter
rcr
dec
inc
enter
fistpl
jg
xchg
sbbl
or
sbb
lods
fcomps
cmp
xchg
jp
or
aad
adc
imul
jecxz
push
xor
xchg
push
sub
jge
shll
xchg
inc
inc
aad
ret
push
aaa
scas
and
mov
push
push
dec
in
sub
sub
in
jecxz
jo
lock
out
test
cmp
mov
aad
cmpsb
subb
and
add
xorl
div
fsubl
sbb
mov
or
fldl
sbb
xchg
sbb
jae
jne
pop
lret
xchg
in
sbb
stos
lret
jae
mov
int
in
ret
or
call
add
xchg
mov
outsb
xlat
jns
sahf
jl
sahf
jbe
sarb
add
adc
cmp
out
add
sbb
inc
in
js
dec
or
je
pusha
and
test
movsb
fsubr
mov
in
xchg
outsl
lcall
leave
pop
in
and
ljmp
cmp
icebp
xchg
mov
jo
addr16
inc
push
lcall
xor
ja
dec
les
mov
idivb
stos
sarl
jmp
add
stos
test
ds
jnp
xchg
xchg
jmp
das
mov
dec
xor
push
jnp
insb
xchg
pop
or
mov
and
ljmp
or
repz
adc
cs
and
outsb
stos
rcll
cmpsb
push
mov
mov
pop
cs
mov
push
movsb
xchg
aaa
cmc
mov
mov
rol
mov
xor
aas
cmp
jnp
ljmp
dec
push
repz
aas
xchg
or
movsb
or
fldl
pop
mov
cli
mov
popf
imul
sub
cmpsb
cmpsl
sbb
push
fdecstp
pop
leave
xor
jno
adc
sti
push
mov
xchg
mov
xor
inc
aaa
mov
nop
cmp
sbb
lea
filds
sub
or
rcrb
mov
ljmp
aas
lret
cmpsb
lret
mov
push
inc
sbb
shl
imul
test
repnz
push
add
out
imul
xor
mov
sub
xlat
test
ret
mov
or
lock
lret
loop
mov
fcmovnb
pop
mov
outsb
xchg
cld
adc
addl
push
adc
repnz
pop
ds
out
aaa
movsb
pop
insb
aaa
push
jge
out
test
negl
sub
adc
in
add
lcall
mov
popf
mov
push
fdivs
mov
mov
xor
ret
mov
mov
xchg
loope
rolb
mov
jo
dec
imul
add
pop
hlt
pop
movsb
cltd
xor
mov
pop
es
and
mov
push
shl
lods
rclb
mov
fwait
repnz
and
loopne
mov
out
xchg
lods
pusha
mov
cwtl
jecxz
sub
sbb
in
in
cwtl
mov
dec
scas
push
pop
adcb
stc
pop
jge
popa
aaa
cld
mov
cmc
out
xor
xchg
stos
daa
jmp
daa
mov
cmpb
lock
jl
mov
fldl
xor
cwtl
and
fcomp
sub
mov
movsl
push
add
pop
loop
or
pop
ficomps
mov
jbe
pop
popa
das
ret
cltd
xor
push
dec
sti
push
pop
mov
xor
mov
iret
js
pop
mov
ds
adc
fstpl
sub
popa
idivl
fisttpl
outsb
enter
sbb
sub
loop
push
dec
rorl
popa
mov
and
adc
notb
mov
xor
xchg
cmpsb
xchg
add
pop
fisubrs
xor
jns
pop
xchg
mov
sbb
push
mov
dec
subb
or
mov
js
dec
xor
push
clc
pop
sbb
popf
and
jne
adc
inc
mov
push
cmp
mov
jp
mov
inc
push
testb
adc
pop
mov
cld
adc
repz
add
repnz
push
orl
loop
shr
shlb
clc
xchg
mov
mov
dec
jne
je
push
sub
shll
popf
pop
adcl
stc
popa
push
mov
xor
inc
xor
in
stos
and
pop
sub
fisubl
clc
sbb
lock
outsb
nop
pop
mov
and
or
in
adc
push
test
pop
inc
inc
mov
gs
sub
jmp
sub
jo
lods
popf
cmpsl
xor
push
mov
push
push
ret
push
mov
jg
mov
adc
lds
lret
call
mov
inc
out
out
xchg
mov
pop
mov
mov
lods
push
fnsave
jne
inc
pop
aaa
adc
js
aad
pop
repz
arpl
mov
inc
cmp
iret
into
js
pop
jmp
push
and
sbb
xchg
xor
mov
repnz
pop
rcr
mov
jg
fstl
gs
clc
jmp
mov
test
je
xchg
add
xor
mov
and
xchg
jp
aad
push
lods
push
lcall
or
xchg
rcl
mov
or
xor
mov
in
pusha
adc
mov
ds
bound
mull
lea
mov
insl
mov
das
inc
into
xchg
jl
sub
xchg
cmp
mov
call
aaa
push
sbb
adc
int3
fsub
xor
into
cmp
sbb
mov
add
lods
pop
mov
fwait
mov
pop
int3
lock
gs
or
mov
ss
dec
pop
pop
fidivrs
pop
jle
dec
inc
xchg
scas
ret
fcmovbe
insl
cltd
pop
repz
xorb
dec
sti
mov
sub
cli
inc
pop
imul
sub
movsl
enter
dec
mov
xor
xchg
loop
xor
daa
iret
les
aad
lcall
inc
sub
movnti
and
push
repz
pop
nop
mov
fmuls
mov
imul
mul
ret
rclb
sti
cld
arpl
mov
mov
jnp
pop
mov
adc
sub
adc
and
fimuls
lock
scas
xor
subb
or
mov
adc
xchg
mov
xchg
int3
mov
ficomps
incb
fisttpl
inc
lahf
andl
lret
test
add
fimuls
adc
jg
sub
jne
jnp
arpl
xor
and
mov
stc
adc
xchg
daa
cmp
add
dec
xor
jge
in
iret
in
fwait
ret
xchg
fs
xchg
jo
inc
pop
cmc
jno
ja
repz
cmp
inc
adc
cmpl
mov
or
inc
inc
push
sar
dec
stos
and
inc
lods
pop
int3
inc
loop
repnz
out
xor
sbb
lods
sbb
mov
mov
mov
cwtl
pop
pop
push
sub
dec
iret
adc
in
cmp
flds
test
jnp
mov
ljmp
sbb
sub
fidivl
xlat
xchg
push
fdivrs
lods
dec
jne
divb
pop
popf
push
sub
mov
je
insl
xorb
push
gs
enter
xor
cs
jnp
aad
imul
rolb
clc
in
std
xor
xchg
clc
and
cmpsl
dec
xor
gs
jecxz
test
xor
ret
mov
mov
push
not
les
notb
mov
test
addr16
dec
mov
jle
xorb
push
mov
fiadds
stos
mov
jno
sbb
fs
push
mov
add
or
mov
cmc
repz
ljmp
mov
sbb
mov
sti
inc
pop
shll
cmc
sbb
push
jno
std
mov
add
shll
fs
xchg
leave
cli
mov
es
pusha
pop
push
scas
mov
les
xor
push
les
lcall
or
inc
adc
sbb
add
jb
incl
xchg
or
jecxz
sti
aad
mov
rcll
lcall
sub
aam
xor
stos
jae
lcall
sbb
lahf
addr16
sub
pop
pop
mov
mov
push
adc
nop
loop
push
cld
push
inc
imull
std
lods
not
adc
xor
cmpsl
dec
movsl
test
in
and
lds
das
xchg
loop
lods
ret
stos
int3
icebp
add
shlb
gs
sbb
addr16
mov
push
adc
popf
jle
fists
cmp
and
jnp
stos
sahf
pop
and
flds
fucomp
cli
dec
xchg
mov
testl
adc
mov
andl
jne
fs
cli
test
jp
loope
mov
push
pop
mov
int
adc
push
sbb
adc
cwtl
and
test
inc
jle
xchg
and
outsl
cmpl
shl
and
cmpl
sbb
pop
push
nop
movups
or
fsubl
add
jp
push
aas
dec
push
or
mov
movsb
xchg
cmp
xchg
mov
push
sub
in
cmp
xlat
sti
dec
int3
add
lret
xor
and
clc
das
movsb
mov
sub
push
mov
cmpsb
dec
test
int3
push
cld
mov
or
ja
stos
mov
push
sbb
jg
mov
fdivr
jl
les
push
nop
lret
xchg
cmp
mov
cmovo
fbstp
test
jge
addb
icebp
lods
pop
mov
ds
pushf
jp
sub
scas
lahf
jae
fs
rcr
fmul
and
bound
mov
pop
adc
nop
xchg
into
push
jl
adc
fcmovnu
mov
jb
jle
jecxz
xor
push
and
arpl
in
arpl
cmp
xadd
xchg
sbbl
je
push
or
dec
xor
push
xor
sti
fwait
mov
in
push
leave
push
stc
sbb
mov
jo
sahf
xchg
shrl
shrb
sbb
pop
insl
repz
dec
push
mov
push
adc
sar
movsb
xchg
fadd
jecxz
push
mov
pop
idiv
jns
sbb
xchg
pop
xchg
push
add
mov
jg
iret
mov
push
pop
add
stc
adc
sbb
inc
idiv
jae
stos
in
cmp
popf
lea
in
std
xchg
jns
aad
aaa
test
add
sub
xor
outsl
stos
dec
mov
cmp
xchg
lea
lcall
movsl
and
jg
mov
xlat
ljmp
stos
idiv
mov
cmp
es
out
mov
imul
mov
push
cmp
lahf
add
pop
sub
add
ljmp
xor
inc
inc
popa
sbb
jge
mov
clc
mov
mov
cli
pop
lods
or
sub
js
pop
push
rcrl
int3
sbb
ret
pop
in
cmp
mov
add
sar
dec
sub
adc
pop
cmpsb
or
mov
scas
sahf
lret
outsb
xchg
rorb
pop
test
loope
pusha
or
mov
xchg
cmpsb
call
cmc
popf
pop
lcall
rcr
xchg
mov
pop
lods
fisttps
or
xchg
pop
in
add
push
inc
mov
push
out
add
jl
movsb
test
cmp
xchg
jns
dec
push
mov
cmpsb
sub
fiaddl
incb
bound
lock
movl
mov
int3
loopne
je
int3
ja
jg
faddl
out
adc
cltd
fsubp
decl
pop
inc
cmp
lea
inc
pushf
out
int3
dec
pop
in
pop
sbb
ljmp
shll
mov
xchg
sahf
jp
jae
push
jg
fs
jne
push
sbb
xlat
cwtl
hlt
mov
xchg
xor
in
lods
repz
sbb
sti
xchg
push
sub
sub
scas
loope
les
sbb
add
in
das
cld
fmul
push
mov
das
popf
adc
and
mov
cmpsb
or
hlt
xchg
lea
test
mov
mov
push
aas
lock
mov
jecxz
sti
and
and
scas
xlat
mov
xor
mov
xchg
pop
dec
add
and
int3
loope
imul
add
mov
jmp
mov
movsb
test
je
into
cmp
cmp
pop
mov
loopne
fsubrs
pop
and
leave
add
dec
cmpb
sub
popf
jnp
aad
ds
inc
inc
test
jmp
cmp
fidivrl
fisttpll
aam
out
inc
je
mov
jns
mov
jmp
in
mov
xchg
sbb
xchg
gs
sbb
pushf
mov
lahf
fidivrl
ja
psllw
scas
icebp
nop
adc
or
aad
jge
sbb
lea
dec
ljmp
pushf
movsl
inc
ljmp
mov
mov
xchg
les
es
xor
scas
jns
lahf
inc
out
dec
fnstenv
inc
inc
fdivrs
enter
or
lods
xchg
imul
pop
mov
subb
loop
cmp
sub
or
jmp
pop
and
adcl
in
sub
gs
jno
mov
hlt
push
inc
mov
mov
stos
and
and
xchg
ficoml
pop
insb
and
mov
lret
sub
pusha
addr16
pop
cmp
and
cmpsb
enter
lods
sarb
clc
mov
dec
out
ret
xchg
mov
sub
enter
jae
mov
nop
stos
dec
mov
mov
jle
pop
push
dec
and
into
lea
jmp
inc
push
movsb
inc
outsb
sahf
dec
push
stos
hlt
pusha
mov
cli
imul
mov
incl
xchg
jecxz
cmpsb
subl
movsb
and
jo
ds
mov
adc
pop
jae
cli
dec
cmc
push
stos
dec
imul
popf
push
int
fstpl
pop
xchg
xor
or
adcl
shl
xchg
shrl
loop
lcall
xor
repnz
sbb
xchg
dec
stos
mov
jno
xor
or
sub
cmp
cld
push
dec
popf
test
jg
adc
pop
sahf
lods
xor
sbb
adc
sbb
into
jne
jns
leave
rcll
scas
out
push
gs
cmp
mov
pop
xchg
push
pop
cltd
push
xchg
shld
aam
or
loop
jnp
jns
sbbb
out
ret
mov
data16
mov
outsb
cmpsl
sub
cmp
and
mov
sbb
cmp
mov
sub
or
int
mov
daa
push
push
loopne
push
jle
mov
rolb
je
dec
sbb
lds
sub
outsl
jl
xor
xor
sti
cmpxchg
int
xchg
inc
into
or
jbe
out
gs
mov
movsb
sbb
dec
lret
push
dec
insl
add
xchg
outsl
add
mov
ja
pushf
jle
out
icebp
fdivs
imul
cs
sub
cmp
ss
es
mov
test
bound
es
sbb
mov
push
sub
xchg
lock
fs
jmp
ljmp
orb
das
sub
push
fbstp
cwtl
cli
shl
pop
jns
rcrl
int3
movsb
push
lret
sbb
fs
pop
jno
cmp
pop
lcall
out
xor
cwtl
jmp
cmp
push
lret
add
pop
xchg
adc
mov
mov
xchg
inc
mov
inc
daa
push
out
dec
popf
cmpsl
xchg
subl
lcall
inc
std
mov
mov
stc
xor
jp
test
pop
loopne
push
lret
and
repnz
int
mov
scas
dec
lahf
ss
jnp
xor
cmp
out
jmp
out
outsl
dec
and
cltd
adc
std
mov
inc
push
add
push
sub
mov
jecxz
push
out
sti
mov
loopne
push
mov
fwait
leave
loope
scas
jnp
push
lea
push
mov
sub
xor
fsub
xor
push
jge
mov
stos
xlat
xchg
mov
xor
push
pusha
fldenv
rorl
xchg
pop
mov
in
sbb
rclb
mov
arpl
mov
clc
aas
mov
iret
mov
jnp
mov
mov
data16
mov
cmc
sub
add
xchg
mov
and
jae
and
mov
adc
inc
fucomp
xchg
add
lods
mov
xor
lret
jnp
push
pushf
fcompl
mov
pop
cmp
rol
fisubl
cmp
fidivl
dec
mov
lret
mov
mov
aad
notl
pop
add
or
mov
in
push
xchg
and
mov
cmpsb
jo
mov
mov
into
xor
mov
mov
add
out
adc
jns
hlt
xchg
inc
xchg
push
scas
sbb
mov
and
cmpsb
sub
pusha
test
lods
xor
add
lds
push
dec
mov
mov
imul
jae
test
pop
aaa
sti
bound
mov
fisttpl
jne
xor
das
jne
and
pop
cmp
fsubs
in
arpl
test
fbld
decb
dec
push
push
in
push
and
int
lea
flds
mov
mov
dec
icebp
dec
sbb
cmc
push
xor
mov
stc
push
add
loope
sahf
push
fdivs
dec
jne
cld
mov
outsb
pop
cmc
std
mov
aas
sub
push
data16
ss
leave
mov
sti
add
xchg
paddsb
enter
mov
pop
call
push
loope
adc
repz
ds
dec
into
pop
imul
xlat
xor
ds
and
scas
lea
jmp
sbb
and
lret
pop
sbb
pop
imul
xchg
pop
out
mov
dec
mov
inc
inc
pop
fwait
test
jle
jb
sub
stos
push
les
nop
mov
add
popa
jmp
add
ja
loope
stos
inc
sub
jns
mov
lcall
into
mov
or
and
fdivrp
adc
and
and
lret
mov
pop
andb
push
fwait
mov
dec
pop
sub
inc
in
sahf
dec
les
inc
in
inc
or
jb
inc
movsl
add
aam
jecxz
push
in
mov
arpl
sbb
mov
fildll
xor
push
bound
mov
sbb
jo
imull
in
mov
fimuls
add
mov
enter
clc
pop
out
imul
push
cmp
aad
sbbl
jns
push
mov
sti
pop
mov
mov
cltd
dec
xacquire
aas
cmc
ss
xchg
shll
andb
xchg
imul
insl
scas
loop
pop
jle
inc
inc
std
insl
jp
xchg
adc
push
test
inc
leave
inc
xchg
cmp
jno
mov
xor
mov
repz
dec
scas
test
sbb
mov
inc
cli
rol
mov
sarb
jecxz
xor
push
mov
hlt
dec
sub
sbb
push
lods
out
dec
adc
outsl
ret
mov
push
fcomp
int
popa
das
sub
ljmp
popa
ret
outsb
out
push
sub
push
mov
aas
insl
jb
cmp
outsb
pop
loopne
or
cmp
rcr
add
arpl
mov
fucom
test
mov
mov
outsb
gs
pusha
jl
mov
jne
rorb
mov
fnstsw
xchg
and
iret
aam
sub
arpl
sti
lar
push
popa
outsb
push
pop
push
sbb
mov
dec
int3
jl
mov
jo
aaa
aam
sahf
out
fcmovnb
mov
outsb
enter
lods
dec
xchg
ficomps
jbe
or
jecxz
test
iret
and
outsl
sub
push
outsl
or
xor
stos
sbb
push
push
lea
pop
arpl
popf
hlt
jno
mov
mov
inc
mov
nop
mov
push
fs
ror
dec
cmp
sbb
mov
inc
mov
inc
or
shrb
jbe
setae
aaa
or
jb
scas
jp
or
mov
out
dec
add
lds
or
mov
push
test
out
xlat
xor
enter
adc
xchg
imul
gs
sbb
mov
mov
pop
movb
aam
jnp
push
xchg
lcall
inc
mov
mov
mov
mov
xor
sti
arpl
mov
cmp
cmpsb
sub
push
lods
jns
and
sub
sar
and
xor
and
cmc
in
ja
andl
aam
dec
mov
sbb
mov
jns
mov
and
sub
out
test
subl
dec
lds
mov
leavew
sbb
mov
xor
mov
add
fisttps
fstpl
push
insb
jne
mov
sub
popf
mov
sub
jns
insl
xchg
dec
clc
sbb
cltd
out
jno
mov
nop
and
sub
sub
cmp
in
mov
insl
fnsave
in
xchg
int3
inc
cmp
adcl
jecxz
sub
aam
jp
jl
cli
dec
adc
pop
decb
mov
lds
cltd
mov
fdivl
pop
mov
cwtl
xchg
mov
mov
xor
cmpsb
dec
sub
ret
popf
and
inc
jmp
sub
aad
adc
xor
xor
fildl
scas
sub
out
xlat
rorl
iret
cmp
sbb
xor
inc
inc
insb
in
push
jno
mov
pop
xor
mov
aas
push
mov
lods
movsb
dec
pushf
mov
xchg
out
lret
test
shlb
pop
sbb
and
sbb
cmp
in
in
jecxz
ret
mov
xchg
dec
inc
sbb
or
fwait
out
in
jns
cmc
insl
ja
jb
xchg
sbbb
movsl
adc
cmpsb
mov
cld
cmp
dec
bound
sbb
rcll
push
int
cs
fincstp
nop
test
mov
mov
push
and
push
stos
out
lds
in
sbb
inc
mov
into
rcr
lret
sbb
stos
test
mov
dec
lret
adc
adc
daa
xor
aas
add
repz
addr16
loop
mov
sbb
sub
cmp
daa
jp
adc
mov
movsb
into
movsb
dec
mov
inc
jnp
mov
data16
clc
testb
loop
jmp
fstpt
fists
jb
fiadds
inc
xchg
cwtl
data16
pop
adc
and
test
call
sub
dec
data16
add
fidivs
pop
push
add
adc
sti
xor
lods
pop
mov
shll
ds
xor
sub
xchg
xchg
inc
mov
out
aaa
fs
cli
shl
mov
xchg
xchg
mov
inc
aam
push
lret
leave
xchg
aam
cltd
push
mov
or
cmpb
iret
xchg
int
popf
ror
je
sbb
adc
xchg
mov
mov
pop
scas
aas
movsb
ja
mov
loope
shll
roll
lret
outsb
cmp
lods
jp
insl
dec
add
repnz
stc
jg
ffreep
xchg
mov
and
xchg
jmp
cwtl
or
push
mov
fwait
xchg
pop
jmp
add
push
imul
push
mov
mov
mov
sti
out
pop
jmp
dec
aad
repnz
cwtl
or
xor
outsl
sub
in
iret
sbb
adc
add
das
nop
inc
mov
aaa
mov
adc
cltd
xchg
mov
lahf
add
mov
mov
pop
fimull
test
insl
lods
into
std
push
pop
pushf
leave
adc
add
and
orb
or
insb
scas
in
and
pushf
insl
pop
test
repnz
cmp
xchg
push
mov
add
dec
dec
lods
xchg
out
sub
mov
jbe
pop
add
test
xchg
mov
inc
and
fcmove
test
stos
scas
jge
dec
cmp
cmpsb
dec
adc
addl
testl
ret
aad
pop
jae
sbb
lret
call
sbbl
mov
sub
jo
lret
add
mov
jns
pop
daa
mov
in
pop
aam
pop
push
push
test
jne
sub
push
and
add
neg
mov
sbb
adc
mov
cmpsl
arpl
in
cmp
jp
cmp
sbb
mov
pushf
jg
ret
test
gs
cmp
in
jp
xchg
ret
lret
mov
call
pop
ljmp
sarl
cmp
bndldx
daa
aas
dec
xor
xlat
fdivl
pop
cmp
sarb
rolb
arpl
mov
mov
mov
mov
out
or
add
jle
jmp
push
cmp
mov
xor
or
inc
sar
mov
loope,pn
push
daa
in
enter
stos
and
fwait
jno
test
xchg
gs
fsubrl
clc
mov
icebp
mov
and
dec
push
mov
pop
ret
jmp
mov
js
sbb
in
int
mov
and
sbb
mov
sti
in
jb
add
cwtl
aam
xor
and
inc
repz
leave
xor
aam
and
inc
rolb
imull
inc
sbbl
mov
ror
inc
or
aas
push
mov
mov
js
or
mov
rcl
dec
out
inc
mov
test
sub
loop
xor
jbe
dec
dec
div
push
bndstx
xchg
in
lcall
decl
xchg
mov
int3
inc
das
stos
pop
inc
outsl
leave
adc
xlat
push
mov
xchg
imul
push
add
or
out
xor
xor
sar
sbb
iret
nop
in
insb
pop
sub
xor
xor
mov
sbb
pop
xor
dec
push
cmp
mov
test
inc
sub
xor
xchg
adc
nop
mov
shrb
outsb
pop
stos
mov
mov
sahf
or
loope
push
or
pusha
push
xchg
sbb
sbb
shlb
lret
mov
rcrl
scas
into
xchg
push
cmp
leave
and
mov
outsb
or
aaa
cmc
loopne
fwait
pop
lret
cli
fwait
shlb
push
and
clc
js
je
mov
sbb
loopne
jo
cwtl
enter
pop
or
iret
and
cmp
jg
add
cs
mov
sahf
cmp
jns
push
movsb
out
ja
hlt
jnp
stos
movsl
sahf
les
movsl
je
fcomps
sbb
js
xchg
lds
jns
pushf
mov
mov
pop
xchg
add
data16
jl
cmc
ja
push
cmc
in
lods
jae
push
pop
add
shlb
fstpl
push
mov
aas
movsl
pop
adc
sahf
dec
in
ds
cmp
jp
sbb
mov
je
pop
push
sub
mov
jge
mov
scas
and
push
mov
jbe
loopne
cmp
and
sub
insl
aam
ds
and
jns
aas
into
mov
daa
fcomi
xchg
nop
fs
xchg
jg
push
mov
mov
sub
fadds
mull
int3
and
or
xchg
rcll
cs
add
test
inc
or
mov
xor
xor
iret
sub
data16
sub
dec
add
cltd
addr16
out
push
inc
rcrl
adc
push
fsubrs
pop
fcomip
orb
popa
sbb
add
mov
hlt
cmp
or
adc
xchg
fisttpll
xchg
push
ss
mov
or
pushf
outsb
xor
pop
add
jecxz
xchg
je
fisubrl
mov
inc
pop
ret
add
fimull
mov
stc
cmp
stos
add
scas
xor
leave
js
mov
push
inc
sbb
hlt
imulb
in
loop
mov
jb
cmpb
adc
or
pushf
stc
xor
push
or
arpl
mov
add
jecxz
xor
aad
loope
add
push
orb
mov
aaa
jmp
dec
cmp
leave
pushf
adc
fdivr
cli
add
add
push
stc
cwtl
lcall
mov
lea
dec
sbb
xor
pop
inc
mov
pop
pushf
addr16
aaa
iret
add
sarb
cmp
inc
in
jp
sbb
sub
fistps
mov
push
cwtl
lahf
jmp
mov
dec
mov
inc
and
dec
andl
imul
mov
jp
dec
mov
int3
mov
fcompl
outsl
sub
jne
inc
sbb
pusha
mov
cmp
xchg
in
xor
mov
add
pop
jecxz
jecxz
push
lods
adc
cmpsb
sub
mov
pusha
pop
ljmp
das
aaa
dec
imul
push
adc
push
cwtl
jl
xchg
push
ret
repnz
scas
pop
scas
push
xor
dec
call
add
add
adc
fsts
cmpsb
add
subb
pop
dec
std
mov
stos
data16
stos
push
add
fs
cmp
loop
outsl
or
mov
pusha
sbb
sbb
xchg
jl
notb
xor
cwtl
jge
fs
faddl
dec
mov
jmp
dec
in
or
repnz
and
inc
sub
mov
push
sbb
push
in
sbb
and
lock
aam
icebp
xchg
xor
fisttpl
jp
jb
out
aad
fiaddl
popl
pusha
pop
mov
fdiv
in
out
sbb
dec
enter
sahf
and
push
push
or
jmp
negb
jne
enter
je
cmp
cmpsb
mov
add
arpl
jl
sar
rorl
push
mulb
xor
out
imul
inc
jp
cs
lahf
lds
aaa
jne
pop
sub
jmp
hlt
dec
aam
add
cs
cwtl
pushf
lods
subb
and
or
inc
dec
repnz
pop
add
and
adc
lods
shlb
or
lret
sete
and
add
movl
push
pop
xchg
adc
adc
xorl
inc
add
js
lods
mull
dec
scas
cmp
xor
cwtl
sbb
repz
pop
inc
adc
push
imul
jo
xor
xchg
sbb
out
xor
xchg
sub
ja
pop
mov
rcrb
xor
mov
push
stc
push
adc
lock
ret
cld
cmp
incb
pop
push
loope
mov
jl
clc
lods
cmp
aas
es
and
pop
lea
cmp
pop
stos
call
jmp
outsb
iret
xchg
mov
push
testb
negl
lret
pop
lcall
in
inc
xchg
cltd
in
mov
jge
xor
int3
stc
xor
pushw
mov
mov
std
sbb
pop
fisttpll
and
in
mov
outsl
sbb
sbb
cmp
aaa
mov
sub
xchg
mov
add
mov
inc
lods
mov
push
inc
pop
dec
adc
fldcw
imul
repnz
push
in
outsb
popf
js
leave
pop
inc
jbe
xor
daa
or
ds
shlb
sar
pushf
ds
out
fisttpll
loopne
xchg
cli
jne
pop
sarl
pusha
xchg
arpl
mov
fildll
xor
shrb
fimull
and
sbb
push
sub
mov
divl
adc
fcmovb
arpl
hlt
xor
xchg
ss
and
jecxz
addb
mov
push
cmc
mov
fisttpl
shlb
lock
rol
mov
int3
inc
lods
mov
scas
in
jae
fstl
push
inc
pusha
lea
ret
aaa
xchg
cmp
stos
lret
push
dec
in
xor
adc
ss
cli
in
jle
sti
jge
outsl
pop
lea
cmpsb
stos
mov
lds
and
fs
cmp
ret
sub
pop
dec
jecxz
mov
mov
push
mov
movsl
loope
mov
jns
pop
fisubs
iret
or
dec
ret
rcl
out
int
scas
dec
pushf
insl
shll
lds
dec
sub
cmp
loop
mov
outsl
cld
popf
in
int
pop
pop
push
sbb
inc
fdivl
popa
inc
add
xchg
popl
int
push
cltd
push
lcall
jl
std
hlt
scas
insb
scas
sub
sbb
xchg
mov
push
nop
enter
jg
xchg
or
jno
stos
pop
cmpsl
xor
loopne
rdpmc
xchg
fcoms
mov
cld
mov
push
adcl
into
and
mov
jns
frstor
xchg
ljmp
aam
out
popa
jnp
push
jb
scas
inc
ja
stc
lock
rcll
fidivl
xor
in
jo
fstpt
jo
adc
sub
stc
test
push
es
dec
add
into
push
mov
mov
mov
inc
pop
mov
mov
out
test
mov
xor
xchg
push
orl
jmp
mov
cs
mul
mov
insl
mov
xor
cs
ja
loop
pop
insb
jbe
popf
xchg
xchg
in
jmp
pop
pushl
add
push
or
push
sbb
loopne
fs
cmp
das
nop
scas
mov
scas
sub
outsl
shl
loop
sub
lea
push
xorb
loope
cwtl
fcoms
jae
jmp
dec
test
js
and
mov
gs
jbe
ja
jmp
jecxz
sbb
sub
push
dec
sbb
mov
cli
fidivrl
and
cmpsb
jge
insl
scas
icebp
mov
mov
dec
push
jp
sbb
enter
lcall
pusha
xchg
inc
icebp
and
mov
mov
xchg
cmc
sbbl
mov
test
cmc
lret
inc
cwtl
test
mov
dec
xlat
sub
inc
xor
jge
push
inc
repz
xchg
mov
xlat
hlt
mov
jo
pushf
in
and
aas
push
pusha
loop
pop
adc
sti
or
cmp
fisttpl
mov
jns
ja
cmp
mov
out
add
jns
inc
jp
adc
and
xchg
adc
shr
push
pusha
fwait
test
dec
rorl
ljmp
mov
andb
dec
mov
pushf
outsl
lds
mov
inc
shll
adc
jbe
je
addr16
jno
sub
jmp
and
xchg
movsb
scas
and
scas
fincstp
adcb
sbb
test
mov
inc
pop
cwtl
sbb
mov
sub
cwtl
rolb
mov
xchg
fucom
imul
push
or
cmp
clc
lods
push
gs
movsb
mov
cmp
adc
nop
mov
pop
bound
mov
loope
in
das
loopne
xchg
push
sub
dec
and
div
xchg
ja
cmpsl
arpl
dec
mov
pop
dec
mov
jge
test
clc
push
mov
xor
gs
aad
pop
repz
pusha
mov
cmc
je
or
lods
sbb
sti
ja
mov
popf
inc
cwtl
push
sub
push
pop
gs
push
mov
les
xchg
repz
xor
inc
and
fnstsw
mov
inc
jne
and
rclb
popw
movsb
xor
xchg
cmp
push
fdivl
mulb
adc
clc
or
sar
test
nop
dec
push
sub
aaa
sbb
xchg
mov
jo
shr
jecxz
and
loopne
insl
stc
enter
int
mov
push
repz
jp
or
call
mov
adc
push
loop
inc
adc
aam
jp
arpl
mov
and
pop
ljmp
clc
xchg
mov
fstps
std
add
xchg
or
lods
test
in
adc
out
out
nop
dec
fdivs
jle
js
or
mov
dec
push
call
push
je
out
lds
movsl
dec
psubsb
inc
mov
lock
imul
pushf
mov
sub
add
pop
imul
imul
daa
fstp
out
cltd
loop
insb
sub
es
cmp
fdivrs
pop
gs
imul
aaa
or
pop
xor
pop
lahf
ss
fnsave
movl
xlat
test
inc
push
or
in
fwait
xor
sahf
std
lds
cmp
data16
push
sub
into
sub
cmp
cwtl
xchg
outsl
leave
stos
je
xchg
or
stos
mov
int
cmp
add
lods
sbb
lret
jl
mov
jge
scas
test
jp
inc
adc
ffree
into
inc
int
sub
push
stos
mov
ja
jae
sub
mov
jnp
lret
xchg
scas
aas
fnstcw
dec
in
xor
je
xchg
and
mov
inc
ljmp
xor
push
xor
and
dec
ret
ja
inc
aad
pop
and
xor
and
cmp
xchg
push
cmp
in
cmp
cmc
aaa
jbe
fbld
push
dec
ds
jo
out
fwait
pop
lahf
and
imul
push
arpl
mulps
inc
or
into
imul
inc
adcb
scas
or
cmpsl
das
adc
jle
pop
jmp
stos
xor
inc
cli
add
mov
cmp
dec
inc
das
test
jge
scas
cmp
mov
fsubr
inc
pusha
mov
or
jp
fisttps
dec
lcall
notl
pop
mov
sbb
push
cmp
test
add
mov
mov
pop
adc
pop
test
leave
push
lahf
in
jp
int3
jne
repz
testl
jnp
xor
dec
in
jmp
and
adc
add
pop
mov
fwait
mov
xchg
pushf
lods
repz
rcrl
and
mov
arpl
push
or
fwait
loop
push
pop
or
addr16
jne
enter
jp
pop
das
inc
test
ret
shlb
add
inc
cmpsb
repnz
inc
mov
std
aaa
xor
sub
mov
and
pop
or
mov
lahf
mov
mov
pop
mov
sub
fildll
cs
repz
dec
jmp
and
add
xchg
mov
mov
das
push
in
or
push
mov
jge
pop
jecxz
cmpsb
lret
pop
insb
push
ds
repnz
cmp
idivb
jmp
iret
les
mov
dec
jb
mov
gs
sbb
jp
fdivs
or
sbbb
in
xor
push
lods
fiaddl
setb
dec
sbb
lcall
stc
inc
js
incl
ret
cmp
adcb
leave
push
xchg
pop
push
loop
scas
leave
mov
aam
daa
mov
clc
movsb
pusha
insl
xor
mov
lds
cmp
inc
adc
inc
daa
dec
jb
dec
jbe
js
outsl
outsl
mov
jb
or
test
cmp
pop
ret
xor
push
cmp
mov
bound
adc
mov
push
dec
cld
stc
dec
stos
and
jle
add
adc
test
pop
sbb
push
fs
cld
pop
or
loopne
scas
push
cltd
sub
adc
add
fnsave
add
mov
and
mov
or
push
mov
jo
mov
int3
add
add
pop
cmc
subl
js
rclb
sub
push
cs
jle
jl
pop
mov
inc
in
and
dec
mov
add
pop
jno
and
cld
push
push
dec
cmp
xor
imul
rolb
jae
mov
add
lret
add
adc
xor
lret
lret
test
fisubl
mov
or
xchg
addr16
pop
or
adc
xor
jns
jne
or
mov
ret
jo
xchg
repz
cltd
dec
pop
mov
push
pop
add
in
cs
bound
or
jno
add
push
adc
std
sub
and
les
xchg
mov
ss
cmpsl
test
lret
and
jae
sbb
sahf
xchg
mov
cmp
sbb
test
clc
add
lods
cmp
jns
adc
and
int
mov
jg
inc
cmp
xchg
mov
test
sub
sbb
lock
mov
add
loop
push
cmp
or
xchg
loop
sbb
subl
sbb
push
filds
out
inc
xor
icebp
movsb
or
jne
pop
lret
add
push
enter
scas
and
xor
fdivl
ret
add
popa
adc
dec
inc
fsts
mov
push
sbbl
mov
cmp
dec
sbb
mov
test
pop
cmp
mov
jmp
ja
add
mov
movsb
mov
and
mov
imul
stos
stos
jne
xchg
jecxz
jns
dec
lcall
jecxz
ret
lods
pop
mov
into
pop
ljmp
stc
mov
mov
jecxz
jbe
sub
gs
sbb
pop
push
das
popa
cmc
and
push
std
loope
and
mov
xacquire
rcrb
adc
add
fwait
adc
xor
mov
fldl
jg
fidivs
ror
mov
aaa
jp
pop
lahf
xchg
out
and
dec
jb
mov
mov
out
jmp
cmp
clc
dec
outsb
mov
aam
mov
mov
icebp
pop
xchg
adc
fisttpll
inc
push
fsubrs
cmpsb
cmp
aaa
ror
call
inc
dec
push
pop
mov
inc
jnp
outsb
pop
adc
out
xchg
push
jb
cmp
inc
mov
sub
in
xorl
jb
or
jp
cmp
mov
test
jae
test
mov
popa
mov
push
arpl
mov
aad
mov
in
scas
sub
dec
mov
test
push
imul
push
fsubrs
mov
jmp
and
mov
push
add
jg
and
pop
xor
push
dec
nop
gs
push
out
fdivs
sub
jl
push
outsb
aaa
ds
xchg
push
data16
sub
add
pop
mov
ret
sar
sti
or
pmuludq
addl
sub
cli
dec
xchg
insl
mov
inc
jl
mov
insb
push
orl
push
or
in
jecxz
or
inc
int
xchg
xor
testb
mov
dec
rolb
pop
push
fs
mov
add
insb
and
push
leave
dec
sbb
push
in
or
mov
pavgb
movsl
pop
scas
insb
pushf
and
xlat
inc
mov
inc
pushw
adc
or
dec
shll
in
push
push
push
mov
in
cmp
jnp
mov
jno
fisttps
fdivr
enter
mov
mov
leave
fldt
pop
inc
shll
xchg
test
xor
mov
dec
imul
push
add
jmp
mov
lds
iret
lret
scas
fimull
cs
outsl
or
push
lret
test
add
pop
pusha
je
shrb
ret
push
inc
std
ret
inc
dec
movaps
push
in
add
outsb
add
xor
mov
sub
nop
imul
mov
cltd
cli
call
fmul
push
int
stos
pop
mov
xor
mov
jne
jge
cmc
fdivr
mov
nop
add
mov
test
in
fnsave
jb
xchg
push
lret
in
mov
jp
mov
imul
insb
push
sbb
and
incl
pop
fsubl
mov
fmull
mov
xor
pop
mov
sbb
test
sub
push
pop
xchg
cltd
cmp
add
ds
pop
push
or
mov
cmpsl
dec
push
adc
pop
je
dec
test
fldcw
or
fmuls
push
outsl
cmpsl
scas
cltd
cltd
addr16
ret
mov
mov
xchg
cmp
fisubrs
push
or
add
lea
xlat
jno
mov
jns
ds
and
iret
idivb
adc
in
push
pop
inc
cld
or
sbbb
out
popf
jbe
sti
dec
test
sub
cwtl
dec
mov
ficompl
push
rcrl
push
mov
cmp
das
jns
fmull
sbb
jae
loopne
sub
cmp
iret
negl
dec
fbld
test
xchg
dec
dec
shl
xor
cmp
movsb
sub
inc
mov
push
stos
arpl
mov
fwait
cli
sub
cmpsl
mov
xor
mov
push
lcall
push
sbb
in
add
cmpsb
push
sub
jb
imul
lods
mov
mov
mov
adc
and
add
ja
jge
and
mov
shrb
push
icebp
cmpsl
out
fs
mov
push
sub
sti
jecxz
js
add
pop
push
out
js
fcoml
repnz
cmp
mov
push
jmp
sub
mov
repz
push
iret
sub
cmpsb
je
std
sbb
xor
fiaddl
pop
adc
aaa
jecxz
mov
rclb
pop
add
scas
mov
jl
sbb
icebp
push
mov
sahf
inc
out
fdivp
fisttpl
stos
add
adc
pushf
pop
mov
imul
hlt
fcmovnbe
lret
dec
adc
ret
mov
imul
hlt
jo
jg
mov
das
cmp
popf
ljmp
cli
out
or
jb
jg
stc
enter
aas
fistl
rorb
jne
add
fisttpl
inc
icebp
in
mov
insl
xchg
cmp
pop
adc
rcll
pop
push
cwtl
sub
mov
cli
out
mov
adc
xor
movsb
ret
mov
int3
loop
adc
push
out
dec
and
mov
stos
cmp
cld
sbb
pop
in
call
and
out
std
and
lea
adc
mov
inc
mov
addr16
sub
jb
ret
je
xchg
inc
push
inc
js
and
pop
je
fs
lret
push
inc
pop
pop
call
daa
movsb
test
cwtl
lock
std
dec
movsl
stos
dec
in
inc
adc
add
and
cwtl
and
rorl
ret
jecxz
shlb
in
addr16
lea
daa
cmpsl
sbbl
ja
psubsb
mov
dec
imull
xor
jecxz
xchg
cmp
addr16
loopne
aad
jg
mov
push
lea
out
and
adc
out
mov
loope
pop
repnz
ja
into
sti
lods
and
cmpsb
scas
and
xchg
jle
rcrl
adc
sub
aas
push
xor
ds
mov
mov
jge
mov
lods
sub
xchg
pop
push
add
loope
idiv
sbb
in
mov
inc
aaa
dec
inc
jne
xchg
call
mov
pop
push
add
inc
mov
sub
arpl
out
stos
fldt
les
mov
add
inc
aaa
leave
and
fsubs
sbb
loope
mov
aaa
das
xlat
pop
push
sub
movsb
mov
in
in
ja
dec
jno
pop
mov
fimuls
aam
testl
jge
arpl
xchg
lods
mov
mov
out
adc
xor
popf
push
dec
adc
insb
add
push
push
mov
aas
cmpsb
inc
and
pop
fildll
push
cmpsl
or
sub
in
std
aad
pushf
jno
cmp
into
sub
jp
fimull
jle
dec
pushl
push
bound
outsb
lret
pusha
cmp
popf
jecxz
mov
dec
cli
mov
leave
inc
adc
cwtl
pop
sub
add
rolb
in
repnz
lock
jp
sti
int3
pop
nop
sbb
nop
push
inc
out
or
lret
lahf
stc
cld
mov
inc
insl
mov
into
sub
fsubrs
xor
cmpsl
aas
mov
in
inc
xchg
loopne
pop
sub
nop
push
fisttpll
pop
lods
loop
inc
mov
jle
sbb
jg
jno
xor
xchg
sbb
xchg
ret
loope
adcb
gs
mov
out
jg
xchg
ds
push
negl
mov
mov
inc
jle
movsl
ret
sbb
popf
add
cmp
push
test
dec
lock
mov
test
xor
push
mov
repnz
xlat
jne
mov
fldt
mov
addr16
mov
sub
add
enter
sbbl
sub
add
aas
and
cmpsl
add
fstl
and
cmpsl
and
pop
inc
add
call
mov
mov
push
dec
sub
ja
pop
mov
insl
mov
push
xchg
push
in
fnstcw
cmp
add
add
leave
mov
dec
add
dec
enter
sub
shrl
ja
or
push
in
dec
scas
mov
stos
pusha
fidivrl
lcall
and
aam
stc
loope
xor
add
add
cs
shrl
lods
jae
add
jne
shl
in
cld
push
pop
fdivrs
pop
jmp
jmp
movsl
mulb
sbb
jp
cmc
adc
ss
add
cltd
repnz
gs
mov
inc
adc
inc
mov
sub
jecxz
jne
and
pop
cmpsb
push
ljmp
test
mov
jae
sub
ret
es
mov
or
aam
jae
pop
mov
xor
cmp
stc
in
cmc
and
rolb
je
test
jl
push
mov
jle
daa
scas
scas
xchg
inc
xor
pop
pop
fsubrs
scas
inc
mov
and
or
mov
pop
cmp
push
or
int3
adc
mov
jne
cmp
lret
sbb
pop
enter
loop
or
fldenv
cmpl
scas
mov
std
daa
repnz
or
push
push
cmp
lock
push
out
mov
jge
shrb
dec
jle
repnz
cmp
stc
pop
aas
int
mov
pop
mov
mov
cwtl
push
inc
jmp
xchg
call
repnz
inc
inc
ja
inc
sub
stc
fisttpl
sub
in
ret
xchg
cld
push
mov
ret
int
sub
push
mov
push
add
and
xchg
in
or
mov
sub
sbb
dec
mov
leave
shlb
js
dec
xchg
adc
pop
jmp
jg
push
push
jp
adc
sti
loopne
pop
mov
and
je
and
xlat
pusha
je
mov
push
mov
mov
jbe
push
hlt
pop
aad
fmul
ja
adc
insb
or
dec
mov
xchg
push
push
mov
xchg
out
cld
outsb
push
lds
xchg
push
xchg
lods
push
std
xor
mov
mov
pop
shrb
mov
insb
adc
js
xlat
test
das
pop
das
inc
mov
mov
test
scas
mov
xor
bound
je
adc
jo
mov
insl
sub
in
mull
shlb
test
sbb
in
add
shlb
into
dec
icebp
loope
sarl
or
sub
sar
pop
sub
push
push
jmp
cs
inc
mov
mov
xchg
cltd
sub
test
pushf
jns
or
test
leave
and
in
jns
das
mov
imul
jno
push
adc
pop
mov
lahf
jo
aad
sub
fnstsw
sub
xchg
pop
lahf
mov
stos
jb
fistps
notl
cwtl
inc
popf
shlb
push
pusha
dec
dec
xadd
push
test
outsl
xchg
mov
faddl
daa
daa
rcrb
pop
add
sbbl
repnz
movsl
mov
pop
hlt
shrl
stos
and
lods
lock
and
xchg
adc
mov
test
fdivp
xor
cmp
xor
dec
mov
dec
mov
aas
xor
add
and
add
scas
subl
push
ljmp
lock
inc
es
je
cwtl
sti
ja
mov
mov
ret
popa
fnstcw
ljmp
in
cmp
xchg
push
cwtl
sbb
arpl
insb
xchg
cmp
cmp
sub
mov
in
scas
rol
mov
cmp
pop
pop
inc
mov
insb
lods
in
loope
sbb
mov
push
scas
push
sti
cs
mov
jl
outsb
or
or
add
jp
adc
aaa
and
xor
add
jg
adc
pop
fdivp
and
pushf
inc
int3
dec
popw
xor
xor
fsubrl
add
or
pop
xor
int
cmc
push
mov
push
push
sbb
lahf
loope
pusha
ror
mov
push
repnz
adc
iret
mov
mov
push
cld
shl
lret
dec
insb
into
jge
jbe
mov
adc
xlat
jns
aad
xchg
push
fsubrs
test
cmc
pop
les
cli
or
jle
fisubrl
in
and
pop
popa
movsb
jg
iret
fimull
sub
aas
repz
fs
jmp
and
mov
or
popw
mov
pop
je
sbb
push
push
scas
lods
or
popf
push
aaa
push
mov
mov
mov
jmp
mov
mov
xor
test
test
inc
idivb
mov
inc
jg
push
fisubs
bound
dec
or
mov
fildll
xchg
adc
out
add
in
shlb
daa
rolb
mov
cmpb
ja
mov
out
cltd
adc
stos
jmp
jle
ljmp
dec
or
and
push
mov
push
or
movsl
roll
clc
bound
imul
test
push
or
imul
fstpt
push
sbb
sarl
xchg
sub
aaa
inc
ficomps
iret
mov
cli
bound
andl
cmc
xchg
xchg
popf
add
push
imul
jns
lcall
fcoms
je
outsb
mov
xor
fdivrs
lods
sub
cltd
imul
test
das
pop
or
fwait
sbb
lock
mov
xor
shrb
std
mov
mov
mov
jno
xchg
jns
add
iret
adc
cmp
mov
inc
inc
sbbl
lds
xorl
mov
je
jmp
in
cmc
xor
pushl
pop
popa
mov
outsb
sahf
pop
or
add
repz
push
push
repnz
pop
sahf
jmp
push
test
das
jl
pop
jbe
xchg
pusha
fst
fcom
pusha
orb
shll
cli
mov
sub
popf
into
into
cmpsl
inc
mov
xor
lds
jmp
mov
or
push
add
shld
sub
sub
jnp
sub
mov
test
adc
inc
cli
out
cwtl
inc
xor
or
pop
add
aas
mov
sahf
push
add
fldl
xchg
lods
movsb
scas
add
or
cltd
mov
and
mov
orb
xchg
adc
dec
xor
cmp
sbb
popf
mov
scas
mov
xor
ss
lret
xor
scas
rcl
xchg
xor
cmp
pusha
insl
mov
xor
pushf
or
movsl
leave
fsubr
loopne
orb
add
pop
gs
mov
xor
clc
jle
cmpl
adc
xchg
mov
das
lds
cmp
movsl
loopne
dec
lret
lcall
pop
inc
into
or
fdiv
cmc
pop
popa
and
jmp
sbb
aaa
push
xlat
mov
xchg
sub
mov
ret
sti
dec
xchg
popa
fists
movsl
ret
std
and
sub
repz
inc
and
int3
les
mov
jb
jno
fs
sub
sub
mov
lods
inc
push
mov
adc
lds
loopne
mov
add
adc
xor
add
add
jbe
push
fcoml
in
sub
push
test
pop
xor
or
cltd
xchg
or
pop
push
in
lret
loop
cmc
stc
pop
add
or
mov
push
cmpsb
aad
lods
jo
imul
mov
iret
xchg
push
add
push
stos
cmp
sbb
div
xor
stos
add
mov
repz
xor
or
mov
adc
and
mov
pushf
repz
mov
leave
repz
cmp
cli
sub
out
fwait
aam
stos
in
out
cmpsb
fdivp
mov
push
jne
mov
ret
fidivrs
xor
pop
xchg
push
enter
jns
repz
shll
cmp
cld
mov
jb
popa
cmpsb
sarl
es
xor
sbb
aas
stos
popa
mov
das
testl
sbb
push
scas
adc
out
xchg
mov
test
lea
insl
jb
ret
mull
subl
dec
into
movsb
cmpsb
shlb
stos
sbb
in
pop
mov
repz
adc
rorb
insl
enter
pop
jne
jp
movsl
movsl
gs
mov
shlb
or
cmpl
sbb
aad
mov
insl
pop
out
outsb
int3
ret
jmp
cmpsb
rclb
cltd
sub
lods
inc
mov
jbe
orb
icebp
daa
cmp
sbb
xchg
in
enter
andb
or
mov
and
repnz
push
and
sti
iret
sbb
jnp
lret
mov
fnstenv
mov
movsl
xchg
mov
xor
mulb
sti
popl
insb
add
push
add
pop
jne
imul
xor
jmp
pushf
fwait
push
xchg
and
jge
nop
fwait
jo
shll
in
popa
and
push
enter
push
aad
test
pop
enter
cmc
inc
aam
jns
mov
pop
test
add
cli
inc
xchg
push
push
je
dec
mov
xor
and
cmpsl
loopw
push
pop
orb
out
fidivrs
xor
dec
gs
daa
int
mul
icebp
hlt
call
inc
lock
lods
mov
sbb
sub
dec
testb
sbb
test
mov
cwtl
xor
into
inc
xchg
push
js
outsl
insl
push
sbb
scas
ret
lods
mov
jne
jbe
mov
rcr
jno
xchg
ret
mov
jns
jl
and
and
dec
xor
pop
int3
jge
lods
jmp
push
pop
push
pop
push
loop
pop
mov
pop
js
push
icebp
sub
subb
xor
pop
js
push
stos
mov
sbb
call
mov
push
sbb
shll
fisubrs
outsl
or
push
push
push
sub
dec
jp
dec
sbb
mov
cld
and
xor
stos
mov
clc
jno
ret
push
xor
push
insl
cmp
movsb
dec
in
out
jg
pop
movsb
sbb
dec
inc
push
cmpl
jns
add
shll
shl
mov
jl
fstpt
add
mov
xchg
aad
cmp
sti
je
out
call
dec
lret
xor
shll
loopne
fisubl
leave
sbb
arpl
fildll
lret
or
fwait
xchg
outsb
ret
pop
mov
mov
and
ja
jecxz
adc
mov
and
loop
jnp
adc
aas
mov
jno
fwait
and
sbb
lods
push
adc
aaa
stc
pop
dec
lcall
cmp
sub
jns
mov
in
add
shrl
xor
adc
fstl
mov
lock
push
in
dec
xor
ljmp
js
cmp
mov
mov
es
scas
stos
pop
cmp
inc
outsl
inc
cwtl
cs
dec
jle
pop
dec
pop
pop
push
aas
ja
les
mov
and
int
xlat
ja
stos
leave
mov
arpl
outsl
adc
pop
sti
addr16
mov
add
inc
jne
jae
stc
and
ficompl
fcmovu
mov
mov
jecxz
loop
dec
fwait
adc
ret
mov
jecxz,pn
stos
mov
sbb
sbb
pop
mov
adc
hlt
arpl
sahf
mov
test
cwtl
inc
gs
cmpsl
add
and
xor
jp
mov
cmpsl
imul
cld
psubusw
inc
lods
push
jnp
sbb
insl
int3
push
mov
scas
rcr
and
xchg
sbb
insl
xchg
jbe
arpl
ret
loop
in
popf
je
rolb
lea
push
jne
imul
bound
xorl
sub
pop
or
pusha
imull
filds
mov
popf
and
ljmp
mov
int3
rcll
ret
test
shll
repnz
mov
sahf
fucomp
out
jns
pop
imul
mov
les
loope
lret
pop
lock
sub
mov
add
inc
xor
push
or
adc
push
arpl
jle
fs
xchg
xchg
jb
ret
in
xor
inc
aad
xchg
aam
cltd
xchg
out
xor
loop
push
cs
inc
stos
xchg
cmp
fcoml
frstor
inc
mov
and
dec
mov
xchg
and
arpl
out
mov
pop
mov
out
scas
and
imul
sub
dec
pop
stos
lret
pop
sbb
out
or
aam
jl
mov
add
sti
popa
mov
lret
roll
test
inc
xchg
test
and
sbb
or
cwtl
push
scas
sbb
jns
mov
dec
inc
out
enter
fisubs
or
inc
or
fidivs
mov
test
xchg
add
or
push
lods
adc
ret
clc
in
scas
std
jmp
stos
lds
aad
cmp
test
imul
shrl
mov
mov
js
sub
dec
sbb
or
pop
ljmp
cmp
inc
mov
sub
mov
fldcw
idivb
rorb
adc
or
push
and
add
sub
fdivrl
jecxz
add
movsb
in
jno
out
dec
in
fsubl
in
cli
add
out
sbb
cmp
mov
sarl
scas
mov
aad
adc
cmp
iret
inc
sub
mov
xchg
mov
pop
adc
cmp
push
cwtl
leave
fistps
jnp
fcoml
aas
imul
aad
or
sub
out
rcrl
in
and
sbb
gs
ret
mov
push
push
addr16
mov
push
jmp
cmpb
add
dec
pop
sub
sbb
call
dec
je
orl
xor
popf
sbb
jne
ret
xor
add
mov
ret
stos
mov
in
sub
cld
jg
dec
ja
aas
addl
and
pop
push
adc
jbe
inc
and
pop
ss
clc
cmp
mov
fdivs
inc
in
fwait
roll
movsl
mov
mov
repz
jbe
lods
adc
aas
or
pop
rcrb
inc
dec
jl
subl
push
jno
js
xor
aad
rcrl
pushf
pop
push
inc
imul
push
lock
std
repz
int
lods
repz
stos
jle
pop
out
vpunpcklwd
je
sub
cld
inc
mov
out
or
fwait
int3
inc
and
jb
pop
orb
test
aad
xchg
xchg
call
movsb
outsb
pop
xchg
pop
adc
ss
insl
inc
fsubs
pop
mov
cwtl
fstps
jno
inc
pop
jb
scas
jp
dec
bound
inc
ljmp
stos
pushf
xchg
popa
mov
sub
add
lods
dec
cmp
cmp
and
cmp
mov
cmp
daa
xchg
popf
sub
add
jecxz
ja
outsl
xor
dec
xor
stos
xchg
popf
sti
push
gs
push
divb
cmc
ficoml
jno
or
out
xchg
jge
add
jns
aas
mov
iret
mov
sbb
ret
rolb
cs
mov
mov
rcrb
cmc
aaa
xor
movsl
popf
addl
sub
pop
inc
mov
es
fucom
adc
inc
xlat
testb
leave
mov
dec
aas
enter
pop
sbb
sub
push
cmp
and
mov
xchg
pop
push
jb
iret
pop
mov
in
dec
xor
adc
xchg
inc
jb
sbb
mov
lret
orl
insb
sbbb
xchg
pop
lcall
mov
mov
add
inc
push
ret
mov
mov
cmpsb
jno
push
imulb
insb
adc
cmpsl
rcll
stos
cld
jmp
test
repnz
in
and
stc
mov
cld
sub
push
fsubrl
cmpsl
push
cmp
jb
push
or
data16
push
dec
mov
dec
add
add
fwait
jnp
jbe
push
cmpsb
pop
mov
and
popf
or
outsb
gs
popa
loop
pusha
pop
jmp
ds
jo
inc
stos
enter
sbb
fadds
sub
cmp
jle
scas
popa
pop
mov
jb
int
mov
xorl
icebp
xchg
jl
or
int
lds
jbe
and
fnstenv
dec
push
sarb
sahf
add
shr
and
insb
mov
sbb
ror
dec
push
sub
sbb
mov
ret
mov
jmp
iret
lods
repz
icebp
ret
stos
xor
into
mov
sub
sbb
jmp
sub
push
and
cld
add
nop
mov
sub
subb
cmp
dec
cmp
in
inc
stos
cmpsb
dec
xor
stos
mov
mov
add
mov
and
test
push
lret
ljmp
imul
jne
pop
mov
push
aam
fcomi
fwait
outsb
scas
jp
ret
pop
pop
out
arpl
je
loope
sbb
push
idivb
in
push
inc
lods
sbb
and
sbb
pop
mov
test
clc
sbb
es
mov
dec
mov
ss
pop
rorl
lods
or
ret
xorb
stos
cmp
xchg
xor
aaa
test
push
aaa
icebp
adc
movsb
mov
stc
push
or
aas
inc
cmp
notb
jle
shl
xor
pop
inc
jne
cmpb
movsl
and
jp
lahf
ret
data16
and
imul
out
adc
xchg
rcrb
mov
cmp
jne
jnp
sub
push
and
ds
xor
mov
out
mov
sbb
dec
mov
repz
xchg
cmp
xor
in
mov
add
or
loop
imul
arpl
iret
cli
test
xchg
inc
and
cltd
pop
adc
gs
pop
or
pop
mov
mov
or
out
mov
push
aam
aad
fisubrs
in
sub
or
push
mov
push
adc
ds
cltd
push
jns
ret
rcll
jg
adc
mov
aam
inc
je
movsl
push
ret
inc
je
in
mov
xor
xor
aad
adc
inc
sub
ds
lock
and
std
mov
addr16
imul
mov
int3
movsb
es
push
ffree
xor
mov
lret
das
test
sbb
dec
push
addr16
lahf
push
fistl
and
ss
jmp
lret
bound
mov
jbe
inc
loopne
xor
pop
mov
jle
out
stos
test
rorl
loope
loop
push
insl
in
cwtl
fucomi
testl
hlt
and
mov
loope
cmpsb
pop
cpuid
inc
jle
test
cs
je
xchg
pop
sbb
cli
dec
add
gs
mov
add
push
dec
daa
bound
sbb
mov
das
cmp
mov
push
in
push
cmp
int
das
cmp
out
iret
xchg
cmp
lods
lods
std
ret
and
cmp
push
sub
or
les
xchg
js
iret
pop
cmp
cmp
and
mov
mov
out
cmp
ret
or
and
and
sub
shrl
cmp
and
jbe
out
ljmp
inc
pop
push
mov
lods
lcall
jecxz
hlt
xchg
data16
test
dec
inc
fwait
repz
out
sbb
sub
mov
xor
push
xchg
cli
xchg
inc
imul
inc
push
hlt
insb
stc
mov
sbb
dec
lcall
mov
ret
mov
shlb
fdivs
fs
in
xchg
and
rolb
es
cmc
ret
or
mov
mov
inc
inc
sbb
adcl
cltd
mov
cs
pop
sbb
sbb
xor
rolb
nop
mov
add
iret
mov
pusha
xlat
inc
andl
mov
xchg
bound
xchg
fwait
mov
cli
pop
mov
sbb
sbb
sub
je
sti
push
mov
mov
stos
lods
push
or
jo
lock
out
sbbl
enter
js
sub
xchg
push
pop
mov
mov
mov
inc
dec
pop
fmuls
xchg
mov
shll
std
jecxz
pop
sbb
cmpsl
xor
mov
daa
jae
bound
es
bts
outsb
insl
call
mov
lret
roll
xchg
jnp
mov
cmp
or
lds
or
mov
cmp
jp
jne
cmp
add
lcall
and
add
cmp
push
and
icebp
mov
mov
inc
aaa
call
push
xor
imul
mov
repz
xchg
add
sub
sahf
push
and
fstps
fadd
scas
test
in
xor
ljmp
rolb
jo
inc
fmull
xchg
out
cld
cmc
xor
add
xchg
out
out
ds
mov
in
xchg
fstpl
dec
jbe
sbb
dec
cmp
sbb
in
js
addr16
sbb
jmp
fdivr
xchg
movsb
xchg
mov
mov
mov
sub
jecxz
mov
or
cmp
lahf
loope
cmp
lcall
lds
inc
decl
rcl
outsb
jno
cmp
jns
je
mov
mov
xor
lcall
out
jne
stc
pop
push
cmp
popa
ss
imul
iret
pop
mov
dec
loopne
dec
xchg
aad
jnp
lcall
sbb
mov
jb
dec
and
lds
js
mov
fsubr
add
pushf
and
jne
popf
lahf
pop
pop
adc
cmpsl
in
add
call
dec
dec
xchg
xchg
mov
inc
test
mov
scas
push
hlt
add
mov
dec
and
stc
cmp
inc
push
inc
jnp
pusha
shll
push
xchg
lock
fldl
jl
mov
sarl
mov
mov
sub
shrb
jmp
mov
test
mov
cwtl
gs
out
mov
mov
xlat
repnz
push
lcall
add
xchg
pop
dec
adc
roll
fsub
mov
ss
bound
js
jnp
add
icebp
clc
fldlg2
mov
mov
je
dec
nop
adc
pop
jmp
hlt
lock
js
sub
loopne
mov
sbb
sbb
shlb
fsts
sbb
leave
pop
lret
mov
jae
outsb
xchg
imul
rclb
push
push
adc
or
test
adc
daa
repnz
movsb
push
lret
jmp
js
cmpsb
cmp
push
les
cmp
mov
pushf
dec
push
jmp
movsl
sub
adc
dec
push
push
loopne
int3
dec
jne
inc
adc
mov
test
outsl
mov
mov
bound
in
pop
or
repnz
lea
xchg
ret
icebp
stc
and
sti
setle
fnstenv
mov
adc
dec
adcl
add
sbb
adc
pop
xor
and
pushf
jnp
add
je
mov
int
adc
push
inc
or
test
or
cmp
dec
pop
out
or
mov
in
mov
dec
and
into
lods
push
sbb
xchg
mov
inc
pop
hlt
aaa
mov
popa
dec
or
sti
and
in
sbb
out
fwait
into
mov
adc
cmpsb
xor
or
xchg
test
sbb
dec
call
push
test
mov
jp
repnz
jge
and
jnp
out
imul
mov
inc
and
mov
fbld
mov
outsl
inc
bswap
adc
loope
pop
xor
mov
pop
inc
jecxz
rcr
mov
stos
adc
jl
ljmp
incb
xor
outsl
sbb
dec
lret
jae
mov
or
js
and
jge
test
out
imul
xchg
movsl
or
mov
js
or
inc
test
adc
jb
imul
iret
pop
jno
outsb
dec
sahf
jne
aad
inc
pop
pop
ss
shr
and
cmp
jecxz
xchg
and
pop
and
jbe
cmpsb
cli
and
jno
ret
inc
scas
fimuls
dec
xor
push
jl
xor
jmp
pusha
pop
addb
mov
push
sub
in
repz
ret
inc
aas
rcll
lds
push
inc
std
out
xor
pop
ret
fnstcw
mov
mov
jl
lods
mov
mov
xchg
mov
mov
pop
sbb
aas
icebp
mov
into
ja
mov
fwait
add
adcb
pusha
xchg
push
pusha
cmp
stos
pop
shrl
jmp
rorb
repz
xor
jge
test
sbb
lock
mov
cwtl
aas
ss
dec
adc
cmpsl
lret
xor
test
mov
mov
fistpll
sub
dec
cmp
out
jns
addb
mov
add
into
mov
lock
push
dec
mov
mov
push
addr16
add
out
subb
rcr
fnstenv
add
cltd
hlt
fscale
iret
not
cli
jecxz
or
dec
xor
orb
into
sbb
mov
repz
ret
pop
dec
dec
mov
daa
mov
inc
adc
lods
cmp
mov
cltd
neg
dec
cmpsb
out
js
adc
jmp
adc
and
mov
std
xchg
xchg
or
ja
xor
push
dec
pop
inc
fs
pop
sbb
push
lds
daa
test
mov
inc
pusha
jmp
fimuls
dec
jmp
xor
js
pop
cld
movsb
test
pop
int
iret
lds
jbe
inc
sub
pop
pusha
xor
or
mov
inc
xor
ljmp
movsb
sbb
cwtl
xchg
jl
cmp
popf
in
gs
sub
sub
int
hlt
xchg
push
inc
ja
mov
fs
mov
mov
mov
sub
jno
rcl
lcall
lods
fidivrs
icebp
pusha
syscall
mov
mov
ret
pop
icebp
cmp
loopne
je
sti
test
sahf
push
dec
nop
jne
xor
xchg
lcall
outsb
bound
aas
lock
adc
js
je
cmpsb
aam
sub
out
test
pop
fs
sahf
jne
sub
pushf
out
jg
mov
cmc
js
imul
int
and
sub
add
sub
pop
out
out
add
ljmp
cmpsl
aaa
inc
cltd
mov
dec
xor
and
mov
mov
pushf
dec
sbb
pop
push
jbe
in
adc
lcall
jp
repz
dec
push
ja
pop
sub
pop
lahf
icebp
xor
roll
stos
sbb
leave
jp
lock
loop
push
sbb
lea
cmp
mov
test
inc
sub
les
mov
jl
inc
lods
gs
push
loopne
cmp
cmp
and
mov
out
xlat
into
add
nop
cmpb
enter
shlb
sbb
mov
leave
in
sub
cmp
adc
mov
sbb
inc
xor
flds
dec
sub
jmp
decl
dec
sti
lea
out
out
mov
push
xchg
pop
sub
scas
or
cmpsl
xlat
cmc
ret
sub
rcrl
aaa
imul
shlb
stc
jne
test
mov
test
mov
nop
adc
jno
lret
sbb
cmp
inc
xor
add
mov
jecxz
and
cmp
and
stc
mov
pushf
and
mov
or
mov
out
xchg
push
mov
fmull
adc
dec
mov
xor
roll
mov
cmp
sub
int3
mov
aaa
and
cmp
idivb
sub
addb
push
aad
and
in
fdivl
jmp
mov
push
lahf
scas
and
leave
adc
lret
leave
jecxz
push
loopne
aad
push
mov
push
xor
push
cmp
inc
push
pop
or
ds
cmp
cmpsl
movsl
push
sub
xor
cmp
outsl
ljmp
sahf
cwtl
xchg
popf
add
dec
int
jg
mov
or
ficoms
cli
bound
and
loope
stos
enter
jne
movsb
add
addl
push
or
out
insb
sbb
les
dec
js
js
sbb
inc
push
mov
ss
sub
out
rcrb
imul
push
popf
adc
ljmp
dec
scas
dec
int3
mov
ret
mov
mov
nop
push
pusha
or
xchg
sbb
fistps
xchg
dec
lret
nop
shlb
mov
arpl
sub
adc
repz
push
loopne
or
inc
mov
dec
sub
pop
jbe
in
xchg
jnp
pop
in
cmpsb
cmpsb
ja
loopne
jne
rorl
and
cmp
or
dec
daa
aas
icebp
insl
out
es
jl
inc
jp
mov
cmpsl
into
push
lret
es
repz
push
lcall
movsl
imul
adc
adc
or
add
sub
test
out
xchg
lock
xor
push
xchg
stc
push
add
push
push
fwait
arpl
insb
fs
pop
push
xor
xor
lds
jp
sarb
dec
repz
pop
push
sbb
mov
jmp
cld
push
sbb
xchg
xchg
pushf
in
jae
pop
pop
cltd
xchg
or
or
and
or
lahf
and
ret
rorb
and
inc
fnsave
xchg
cmpsl
js
clc
fistpl
test
push
push
sbb
xchg
pop
jns
scas
decl
or
shr
movsl
iret
push
xor
mov
sub
out
mov
pop
jne
dec
jbe
lahf
push
scas
ljmp
push
mov
rcrl
dec
push
mov
cmp
out
mov
shl
shlb
jae
sbbl
enter
sbb
push
pop
cmc
cmc
push
ja
pop
ljmp
and
rorl
inc
pop
movsb
jno
into
cmc
inc
jbe
xlat
je
sbbb
int
cmp
xchg
sbb
shlb
xchg
mov
push
inc
dec
gs
push
enter
daa
std
fsubl
pop
rorl
dec
stos
sbb
ret
sub
loope
jg
sbb
add
ror
add
mov
push
sbb
aaa
nop
aad
aas
mov
and
outsl
push
xor
and
adc
push
loop
xchg
jg
push
mov
push
add
xlat
mov
jge
lods
cmp
ss
add
inc
xchg
test
sbb
sbb
jns,pn
fcmovnb
adc
jo
sbbb
cmp
dec
add
sub
movsb
dec
enter
ret
push
popf
shr
adc
mov
and
add
and
fistps
cltd
or
mov
cmp
fistpl
rcrb
push
lods
and
mov
or
insb
lret
dec
aam
push
push
push
sbb
push
inc
lds
test
inc
sub
adc
push
cld
test
dec
cmc
insb
cmpsl
dec
mov
mov
mov
mov
push
xchg
lret
adc
mov
sbb
xchg
inc
dec
out
mov
packsswb
mov
adc
je
xlat
outsb
imul
push
in
mov
test
sub
imul
mov
cld
mov
or
cld
xchg
in
cmp
dec
dec
ret
jno
mov
movsl
push
or
mov
push
jne
aas
jne
jae
outsl
rclb
lock
movsl
sahf
push
lret
insl
mov
test
cld
mov
mov
adc
jecxz
add
jo
push
and
es
scas
mov
cltd
int
cmpsl
adc
push
or
mov
movsl
or
hlt
out
les
test
inc
xor
rorb
enter
mov
shl
clc
xchg
in
imul
test
sbb
mov
sub
sbb
adc
loop
xor
test
cmp
jnp
scas
sub
popa
mov
xchg
addb
adcb
mov
lods
movsb
or
loop
mov
jb
testb
popa
cltd
stos
lcall
dec
and
inc
and
loop
xor
incb
jl
pusha
mov
push
sub
and
lcall
xor
negb
mov
mov
cmpsb
je
push
pop
xor
repz
xchg
push
mov
pop
ss
inc
sub
movsb
jmp
inc
xchg
mov
mov
mov
mov
cmpsl
mov
ret
mov
sub
jle
ds
pop
or
mov
adc
jno
inc
mov
xchg
data16
push
fs
cmp
test
cmpsl
xor
xchg
pop
xor
inc
outsl
cld
es
mov
pop
mov
icebp
cmc
sbb
xor
dec
jns
pop
mov
inc
dec
fldt
shl
clc
mov
daa
frstor
fnsetpm(287
or
iret
add
jge
scas
popf
cli
stos
push
into
and
xor
cmc
shll
movl
mov
in
mov
cs
jne
sbb
mov
cld
and
bound
xlat
xlat
outsb
sbb
test
fsts
sbb
jnp
cmc
scas
fbld
std
cmpsl
daa
movsb
mov
roll
or
add
data16
subb
cld
and
test
push
cmp
jmp
cs
jnp
pop
jb
jne
inc
sbb
in
jno
inc
arpl
icebp
orb
mov
lss
sbb
cmp
loope
in
mov
mov
push
addr16
mov
or
icebp
mov
hlt
cmpsb
and
cmp
aam
sub
sbb
sbb
pop
ror
sub
cmp
pop
add
inc
mov
popa
lea
les
popf
dec
add
sahf
cli
adc
fbstp
test
dec
mov
adcb
fwait
adc
fmuls
and
out
jns
mov
jae
lret
mov
cld
xchg
jns
inc
cld
pop
test
add
jmp
mov
sub
loop,pt
movsl
sahf
mov
sub
das
cmc
popf
in
ficompl
std
or
mov
fwait
jl
pop
cwtl
mov
pop
cltd
fwait
cmpsb
and
mov
stos
subl
loopne
adc
push
xchg
rcr
adc
fmuls
mov
jmp
mov
pop
int
lea
outsl
shrb
lret
in
testl
jb
xchg
sub
ljmp
cmp
dec
shlb
mov
fcoms
and
pop
push
mov
loopne
jae
inc
pop
mov
test
sub
outsb
in
mov
aaa
mov
loop
xchg
aam
lods
xchg
sbb
popa
xchg
jno
fmuls
cmp
and
cli
sbb
cmp
sbb
mov
loopne
bound
stos
idivl
mov
mov
mov
cmpsl
in
or
push
fs
fwait
cmp
cld
and
mov
std
mov
leave
aad
gs
fstpl
inc
jl
push
mov
sbb
mov
fisubl
mov
xchg
mov
stos
daa
mov
out
mov
pop
test
push
inc
clc
push
xchg
fabs
adcl
subl
lahf
lds
sbb
adc
imul
sar
or
lods
mov
sahf
cwtl
push
icebp
stc
pusha
mov
dec
push
dec
cld
cmp
cmpsl
mov
test
add
cs
icebp
cwtl
out
push
mov
sub
pop
push
aam
out
xor
lods
inc
out
mov
mov
arpl
out
pop
bound
es
inc
vaddsd
imul
imul
cmc
pop
cmp
xchg
jl
mov
sub
sbb
ljmp
dec
in
cmc
jb
fstpl
and
jb
mov
xchg
or
mov
cli
xchg
mov
mov
je
mov
jbe
shll
jecxz
negb
mov
idivl
stos
cld
xor
lahf
popw
pop
fdivrs
push
les
notb
stos
push
adc
push
mov
daa
test
mov
das
fwait
stos
ficompl
int
xor
ret
mov
fsubr
cmp
mulb
fistpl
pushf
insl
in
movsl
fisubrs
push
lahf
enter
mov
mov
jno
cmp
adc
std
add
arpl
out
fcmovne
daa
jp
pusha
sub
inc
dec
sbb
cmp
dec
sbb
cmc
sub
leave
jb
stos
mov
fs
fldl
dec
mov
sbb
pop
pushl
push
mov
fidivrl
enter
stos
sbb
xchg
cmc
loop
jo
sti
jo
mov
je
call
sub
lret
cmc
fwait
iret
xor
mov
data16
pop
push
jmp
cmpb
mov
adc
std
lret
das
out
iret
lret
gs
ss
push
pop
mov
hlt
inc
xchg
lahf
add
or
or
aaa
nop
xchg
sbb
cmpb
push
pop
push
push
cltd
pop
add
cmc
dec
movsl
and
push
dec
test
arpl
mov
sub
add
cmp
test
push
cmpsl
out
and
or
dec
clc
push
mov
rorb
jb
std
inc
lcall
iret
arpl
out
fstl
xchg
push
repnz
ret
fisubrl
loope
push
stos
lcall
out
test
pop
dec
xor
xchg
pop
jmp
sub
bound
cli
push
scas
cmp
jg
push
mov
int
add
cmp
xchg
jle
inc
pop
jo
jns
add
push
and
call
aaa
out
push
dec
mov
ret
xor
jecxz
jmp
xchg
sub
or
jp
jmp
mov
fwait
push
push
push
pop
adc
dec
stos
cmpsl
sbb
jle
mov
inc
and
sbb
push
mov
lds
cmp
insl
pop
loope
sbb
sbb
popf
pop
cmp
inc
add
and
je
sub
int3
or
sbb
sbb
dec
xchg
sub
mov
push
ljmp
sbb
aad
mov
push
decb
sarl
or
repz
adc
push
xor
xchg
jge
fucomip
or
push
or
pop
call
mov
ss
test
xlat
mov
dec
add
fidivs
nop
mov
xchg
pop
fwait
and
dec
mov
dec
lret
push
jbe
inc
subl
sbb
mov
adc
or
mov
dec
lea
pusha
mov
sub
mov
mov
lcall
or
idivb
pop
cs
mov
shlb
dec
pop
dec
push
push
adc
jae
dec
or
mov
jbe
xchg
nop
xchg
jnp
sbb
xchg
push
cli
jle
repnz
fs
fs
inc
mov
int
pop
sbb
scas
out
je
mov
ror
xchg
sbb
mov
mov
and
rclb
xchg
push
add
in
pop
or
rol
inc
and
pop
pop
movsl
mov
in
jno
lahf
jbe
sub
xchg
les
jnp
xor
push
push
iret
test
outsb
adc
push
lock
in
imul
out
or
in
rorl
xor
rolb
test
jo
jge
pop
gs
cmp
nop
pop
lea
mov
xor
mov
cmc
scas
xchg
ficoml
fwait
test
jle
xchg
xor
outsb
jmp
xorl
adc
insl
pop
fildl
aaa
fistpl
cmp
mov
aad
divl
outsb
in
mov
filds
jns
xor
pop
pop
lods
jae
clc
pushf
insb
ja
bound
add
jno
jnp
push
dec
movsb
adc
and
pop
xchg
faddl
mov
xchg
or
dec
pop
pop
adc
ds
dec
sbb
enter
cmpsb
sbb
inc
repnz
outsl
xorl
mov
cwtl
stos
lock
dec
imul
xlat
mov
in
cld
mov
int
mov
dec
lret
jae
ss
loopne
in
sub
xor
ret
add
scas
pusha
ret
mov
or
push
jns
cmp
ret
das
xchg
repnz
cmc
in
vmulps
lfs
popa
ficompl
pop
idiv
mov
repz
adc
inc
loopne
adc
bound
xchg
fucomip
lret
out
movsl
ljmp
sahf
mov
mov
insl
scas
xor
mov
stc
push
adc
add
ss
movhps
les
push
lret
cmp
xchg
pop
mov
jb
imul
ficoml
xchg
and
mov
xchg
fsts
adc
lock
insb
rcrl
cli
mov
xchg
pushf
outsb
imulb
adc
outsb
cld
inc
jp
push
movsl
push
jae
inc
icebp
and
or
into
mov
add
xchg
mov
mov
adc
fisubrl
scas
inc
in
cmp
push
mov
fisubrs
jmp
es
cmp
inc
push
inc
inc
xchg
dec
mov
rcrb
call
xchg
stc
nop
je
jle
push
jno
inc
jg
arpl
jp
mov
test
cmp
into
dec
das
add
sub
sbb
push
lcall
dec
pop
les
pusha
xchg
rcrb
push
jb
pusha
sahf
gs
insl
int3
sub
aam
push
test
out
jl
jmp
mov
mov
xchg
xor
and
dec
loop
js
sub
std
xor
int
mov
inc
mov
gs
testl
daa
and
inc
je
out
popa
cs
mov
rol
or
pop
cpuid
add
into
lock
imul
jnp
aad
cmp
jae
jbe
ficompl
inc
repnz
add
in
mov
cli
fs
jge
and
or
push
sub
imul
or
cld
lahf
clc
pop
adc
sbb
iret
lcall
std
inc
and
shll
xchg
hlt
sbb
jmp
lcall
jbe
cld
fcmovnbe
loope
gs
push
sbb
lret
shll
ljmp
mov
cmp
fadd
adc
inc
in
je
clc
pop
pop
xchg
shlb
lods
sub
jg
shlb
lods
rolb
jl
rclb
and
mov
mov
mov
push
mov
cs
mov
push
mov
xor
in
xchg
mov
cmpsb
or
jl
bound
cmc
cmp
aam
lea
add
add
pop
popa
mov
jbe
stc
fisubrl
lret
sub
jbe
test
mov
adc
push
and
andb
push
adc
in
and
and
in
paddsw
imul
into
stc
jge
jle
mov
mov
out
jbe
mov
andl
clc
addr16
scas
inc
aad
lea
ds
pushw
inc
mov
cwtl
pop
push
outsl
pop
movsb
push
xchg
cmp
push
mov
flds
daa
test
loop
bound
pop
hlt
jle
rcrl
repnz
or
outsb
arpl
and
clc
out
out
xchg
xor
andb
jmp
cs
aam
and
fidivs
cmp
or
and
add
cmpl
xchg
andl
xchg
xor
shrl
mov
ret
mov
ret
sbb
or
std
frndint
pop
pushf
adc
loopne
mov
loope
or
mov
daa
mov
rcrb
ret
ds
push
pop
cmpsb
stos
leave
mov
dec
inc
cmp
sbb
sahf
or
call
cli
inc
ds
mov
out
sub
xor
movsl
add
sbb
cmp
js
inc
je
cmp
dec
clc
adc
jo
enter
scas
mov
fsts
lahf
mov
loopne
jmp
push
inc
shll
lds
mov
sub
into
and
sbb
cmp
f2xm1
aaa
jp
add
add
pushf
sbb
jg
je
cs
ret
repnz
lret
xchg
jb
mov
addr16
out
inc
pop
nop
cs
and
inc
ss
fwait
sub
xor
imul
mov
jle
jo
mov
in
aas
mov
push
pop
hlt
out
movsl
lret
push
pop
dec
ljmp
inc
fidivl
jp
sub
xchg
mov
xlat
les
mov
cmpsl
lcall
sub
xchg
push
loopne
pop
addr16
dec
lcall
inc
test
push
mov
add
jle
out
das
add
xchg
insb
aad
stc
mov
aam
es
dec
cmpsb
lcall
rclb
pop
push
dec
fcompl
xchg
mov
push
inc
push
fs
mov
bound
push
into
cld
lret
popf
and
test
hlt
scas
fnstenv
loope
mov
stos
sub
pop
sbb
pop
das
cmp
pop
bound
cmp
scas
inc
aas
fbstp
cmpsl
lock
xor
pop
jle
pop
push
movsb
sahf
sub
shll
test
fs
mov
or
pop
and
inc
mov
push
sti
xchg
in
push
ljmp
lods
int3
movsb
sub
cmpsl
movsl
ret
mov
mov
adc
jns
outsl
js
lods
test
stc
xchg
inc
mov
xorb
insb
xchg
cs
xor
lret
add
jno
xor
pop
movsb
and
push
add
inc
or
stos
xorl
jmp
mov
stos
push
xor
push
pop
sub
mov
jb
hlt
ja
jp
mov
mov
lea
pop
or
push
or
arpl
cmp
sub
cs
js
lret
push
aam
fidivrs
pushf
int
pop
sub
cmp
push
test
adc
push
gs
incl
mov
sub
sbb
jns
in
xchg
mov
pop
divb
sub
mov
aaa
adc
pop
or
lea
rcrl
popa
jge
les
jmp
ja
divb
repnz
xor
inc
out
push
rcrb
test
add
mov
lahf
push
out
xor
pushf
roll
push
and
jne
push
mov
inc
or
or
pop
addr16
sub
inc
mov
negb
sti
rorl
lods
mov
adc
dec
stos
in
sbb
popf
adc
cmp
mov
push
out
into
add
sbb
outsb
aaa
std
fldt
imul
cwtl
cmpsl
inc
gs
test
icebp
scas
fsubrs
jmp
cwtl
fucomip
mov
sbbb
sbb
filds
fstpt
iret
lret
pop
lods
rorb
mov
pop
add
mov
sbb
imul
dec
dec
mov
sbb
sar
call
test
js
mov
inc
ret
xchg
enter
dec
push
cmp
mov
test
inc
and
xchg
mov
push
xor
in
push
data16
dec
pop
fwait
cmp
repnz
mov
sub
bound
cmp
or
stos
adc
pop
and
adc
sub
sub
push
nop
pushf
pop
mov
icebp
aad
fwait
dec
arpl
inc
cmp
mov
xor
push
decb
in
dec
outsl
fildl
xchg
mov
cmc
decb
jno
push
loope
les
cmc
test
dec
adc
in
and
cmp
fstpt
cmpsb
cmp
negb
mov
and
leave
and
fxch
lods
jae
jl
pop
sti
cmpsl
repz
and
test
sbb
mov
jae
xor
dec
add
adc
mov
cmc
in
sub
stc
inc
popf
mov
mov
and
pop
sahf
push
dec
or
pop
sahf
mov
ret
fists
shll
push
cmpsb
xlat
ja
movsb
sti
cwtl
loopne
jle
sub
inc
lcall
das
mov
sub
clc
movb
jle
push
mov
jle
fmull
pop
xchg
mov
movsl
cwtl
int3
push
pop
test
add
jmp
cmp
push
pop
and
sbb
push
cmp
das
xor
inc
push
sbb
or
sbb
add
inc
loopne
je
fisubrl
and
icebp
pop
add
insb
loopne
sbb
arpl
outsl
in
push
rorb
push
mov
lahf
push
sarb
jp
in
pop
lods
push
cmc
iret
loopne
cmc
inc
mov
xlat
and
mov
dec
fisttpl
dec
aas
pop
xchg
lret
jp
pushf
loopne
repnz
jo
sbb
xchg
lds
mov
ret
insl
cli
xchg
push
movsl
cmpsl
push
je
mov
call
jmp
jle
imul
xchg
mov
out
hlt
mov
mov
push
mov
dec
rcrl
fwait
orl
jae
testb
inc
mov
out
jbe
leave
cmp
aaa
inc
mov
std
aad
stos
loop
xor
cmp
out
push
lea
hlt
xor
rol
sbb
daa
xchg
movsl
sub
or
test
mov
loopne
dec
mov
and
gs
ret
dec
mov
nop
ficoml
sbbl
fnstcw
cmp
out
leave
push
adc
pushf
mov
lods
dec
inc
push
arpl
mov
packsswb
pop
std
arpl
lock
dec
sub
icebp
jmp
xor
and
mov
mov
rcrb
lds
jecxz
adc
fnsetpm(287
arpl
js
mov
push
leave
divb
mov
call
aas
inc
and
inc
push
sub
jb
mov
je
cmp
push
cmp
mov
dec
das
mov
out
add
sub
or
push
mov
jp
sbb
mov
pop
pop
push
aaa
pushf
push
jg
pop
popf
jmp
xor
or
add
test
inc
les
ror
xchg
mov
fmuls
fistpll
inc
lods
into
into
lahf
ss
pop
pushf
popl
dec
mov
pusha
cmp
dec
mov
mov
orb
rorb
push
pop
cmc
inc
jle
sbb
inc
fsubs
aas
hlt
pop
mov
pop
pusha
out
push
xor
scas
cli
push
sbbl
cmp
or
jg
cmp
icebp
mov
cmp
adc
mov
fwait
icebp
xor
rol
mov
popf
arpl
mov
sub
out
rcll
adc
cmp
test
mov
popa
push
je
sub
push
lock
push
loope
push
mov
and
mov
fnsave
inc
xchg
xchg
daa
repz
jp
fstl
ffreep
scas
xor
movsl
call
mov
insl
sbb
fsubrs
sbb
aam
push
or
fxch
dec
push
sbb
icebp
push
dec
fs
ficoms
adc
dec
mov
jnp
inc
shrb
pushf
xchg
xorl
in
push
clc
push
outsb
pop
push
jnp
outsb
ja
enter
cmpsb
enter
fwait
adcl
adc
loope
pop
and
mov
movsb
mov
cmp
mov
jle
add
and
mov
sbb
sbbl
pop
adc
idivb
loopne
dec
or
pop
sbb
test
loopne
inc
daa
in
mov
mov
pop
push
push
js
out
sbb
test
addr16
lods
pushf
inc
cltd
roll
jge
jg
pop
pushf
sbb
fdivrl
stc
xor
jno
mov
out
lods
mov
jno
cmc
or
pop
cmc
je
push
lods
ret
sti
pop
sub
jns
jb
cmc
mov
pop
dec
rolb
jns
dec
sbb
inc
xor
push
sahf
inc
pop
aam
lret
sbb
sub
push
mov
or
dec
js
sbb
lods
mov
aam
inc
cwtl
adc
xchg
mov
ror
jp
mov
jg
lds
sbb
cmp
push
jmp
mov
mov
outsb
mov
jae
ds
dec
push
leave
xchg
sbbb
mov
xchg
out
test
or
insl
xor
inc
rolb
repz
pushf
or
mov
popa
movsb
ficompl
dec
sti
popf
ret
or
popa
and
fs
jbe
push
adc
or
gs
testl
leave
inc
adc
sbb
dec
shll
iret
lahf
mov
ss
xchg
xor
jl
sub
xchg
gs
cld
cmc
jne
xchg
mov
aad
or
fwait
lret
pop
stos
push
xchg
subb
stc
addr16
xor
xor
in
dec
push
or
jmp
int
aaa
jle
and
rcrl
xchg
das
stos
test
mov
inc
mov
inc
sti
je
movsl
xchg
testb
cmp
lahf
int
push
loope
rep
movsb
mov
sub
lcall
aad
adc
sub
cmp
das
insb
addl
mov
mov
sub
rorb
sarl
das
fisubs
fbstp
dec
fptan
jae
push
add
insl
jns
fstpt
add
lods
push
jns
mov
inc
sti
mov
dec
test
imul
dec
call
cmp
push
push
mov
push
cmp
rcll
jb
arpl
fwait
and
jp
or
jb
sahf
inc
cmp
lea
xchg
mov
pushf
or
sar
movsl
arpl
jp
inc
imul
or
fdivrs
sub
mov
insl
sub
imul
dec
add
or
xor
jl
pop
sbb
mov
push
push
sbb
jbe
rcl
jecxz
repz
sub
imul
test
aam
push
push
test
mov
jne
aad
gs
xor
movsb
fsubr
sub
hlt
cld
sub
inc
movsb
out
sbb
arpl
mulb
pop
or
out
mov
repnz
mov
fwait
lret
sbb
imul
aad
inc
adc
xorl
add
mov
and
repz
jnp
nop
sbb
loop
jmp
push
pop
cwtl
lret
add
mov
int3
add
or
cs
pop
xor
pop
imul
in
lods
jmp
sub
dec
push
imul
inc
push
pop
push
pop
arpl
push
push
aam
cmc
sub
xchg
jg
loope
push
dec
sbb
iret
inc
inc
or
aad
cmpsb
jecxz
iret
fimuls
pop
pop
insl
or
lret
hlt
push
jno
decl
dec
sub
fisubl
pop
add
cmpsb
out
ret
repnz
cmpsb
adc
xor
xlat
out
mov
stos
fnstenv
iret
sub
cltd
in
sbb
sbb
ret
or
arpl
xchg
jo
mov
jle
dec
jge
cmp
std
push
lahf
repz
daa
int
dec
cmp
pop
sbb
adc
xchg
aaa
jle
inc
mov
cmp
rorl
adc
sbb
cmp
dec
mov
popf
fxch
leave
sahf
cmp
test
gs
add
in
das
xchg
std
das
xor
nop
sbb
push
js
call
push
dec
adc
loope
ja
push
fimuls
mov
dec
cmp
lods
inc
fdivl
push
fcoms
dec
or
imul
pushf
xchg
out
popa
sub
cli
fs
mov
mov
mov
mov
pop
sbb
sbb
mov
cld
adcl
add
out
mov
and
push
xchg
inc
cmp
mov
mov
fdivl
cmp
cmp
xor
adc
and
or
fsubrl
cmp
into
mov
lea
aad
add
out
mov
mov
xchg
mov
fists
cwtl
lahf
bound
xor
comiss
fninit
push
or
mov
add
testb
and
inc
mov
daa
add
pop
int
rorb
out
in
or
cmp
iret
jne
aas
cmc
fcompl
mov
jl
push
push
pop
jb
pop
pop
jl
xchg
mov
gs
es
std
ret
mov
mov
test
push
stos
mov
fists
cmc
fnstenv
sbb
imul
fs
and
ss
jae
test
add
int
mov
push
cmpsl
mov
andb
icebp
lea
pop
stc
mov
fdivr
les
xor
inc
orl
mov
sub
pop
or
mov
xchg
dec
jno
mov
rcrb
mov
ret
jns
mov
rolb
and
out
stos
popa
loop
mov
aaa
pop
cld
mov
mov
inc
sub
pusha
and
sbb
in
push
push
jle
loope
pop
mov
mov
pop
xchg
jbe
push
std
call
sub
call
jge
sti
push
sub
imulb
xchg
lock
sahf
pop
mov
cmp
pop
test
mov
mov
movsb
or
stos
fstl
scas
adc
jne
lods
jb
sub
cmp
xlat
sub
cmp
xor
pop
aas
out
decb
je
sub
in
testb
lods
mov
js,pn
jae
push
mov
fstpt
cmp
sub
repz
cmpsb
mov
stc
ljmp
fildl
mov
sub
scas
xor
stc
push
test
filds
sbbb
pop
aaa
inc
add
dec
je
mov
jge
pop
push
sbb
mov
lret
test
lret
push
fiaddl
and
lods
jo
lret
cmp
sub
sub
in
out
sbb
xor
out
or
fwait
sarb
adc
aas
jnp
out
arpl
adc
jle
jnp
fisttpll
add
fiaddl
push
fstp
aas
adc
xorl
in
mov
nop
ljmp
out
es
and
xchg
adc
les
in
testl
or
mov
popf
nop
rcr
daa
iret
dec
lahf
add
mov
mov
push
stos
cmp
out
popf
add
testb
xor
sbb
push
and
lcall
les
add
outsb
fisubs
push
or
jp
nop
or
inc
push
add
xchg
lods
and
loopne
mov
pushf
in
xlat
stos
aam
cld
pushf
xadd
fs
xchg
jae
mov
das
nop
js
lds
cmc
loopne
pop
lds
jns
lods
in
adc
mov
xchg
xchg
fst
popa
adc
leave
fldl
rcll
lock
popl
sti
pop
xchg
sub
int
push
sub
xor
int
movsl
and
ds
loop
mov
mov
cmpsb
mov
inc
je
add
cmpb
icebp
inc
js
lods
inc
sbb
add
mov
mov
jmp
jno
ljmp
fists
mov
dec
insl
ljmp
pop
mov
pop
mov
out
sub
cltd
aad
adc
lods
push
and
add
mov
loope
jno
fstps
lds
inc
mov
inc
push
adc
test
adc
out
insb
outsl
cmc
lock
stos
aas
lcall
mov
sbb
or
cmp
mov
and
sbb
hlt
rolb
or
push
lret
daa
mov
loopne
jne
and
jle
mov
add
gs
lcall
int3
scas
enter
daa
loopne
xchg
xchg
sbb
inc
sub
out
jecxz
fldenv
and
out
insl
pop
xor
inc
out
test
aad
cld
mov
sub
shrl
jbe
pop
push
push
adc
lcall
xor
add
dec
aam
inc
gs
or
clc
imulb
roll
push
inc
movl
lret
pop
or
xchg
push
test
aaa
jmp
jp
jecxz
sbb
mov
mov
aas
xor
xor
xchg
jg
fs
fidivrl
enter
std
cld
cwtl
popa
jne
divb
cmpsl
or
int3
jp
iret
xor
xchg
in
stc
pop
std
lahf
rolb
mov
xchg
cmp
cmp
jno
jo
lock
aad
test
jns
stos
mov
inc
in
repz
out
mov
mov
mov
aad
adc
sub
mov
cld
push
hlt
jge
xor
test
mov
outsb
addr16
stos
ficompl
aaa
mov
pop
popf
gs
lods
aad
mov
dec
xor
lret
push
das
mov
push
push
sub
aas
mov
pop
sbb
pop
cmpsb
and
mov
cltd
aas
clc
sbb
push
mov
pushf
sub
movsl
push
loope
clc
sub
mov
mov
outsl
scas
mov
cmp
imul
repnz
je
or
sbb
mov
cmp
imul
call
sub
bound
in
in
dec
push
mov
cwtl
pop
pushf
outsl
cmp
loopne
sbbl
jnp
dec
stos
xchg
fistpll
shrb
push
add
pusha
dec
nop
jmp
xchg
and
imul
int3
inc
pop
cmp
lds
jns
xchg
jle
push
mov
xchg
push
cmpsb
adc
imul
divl
adc
stos
popl
fiadds
cmp
insl
or
and
lret
fs
mov
inc
iret
or
jecxz
aad
mov
hlt
xorps
andb
insl
iret
fistpll
xor
popf
iret
or
pop
lods
mov
add
and
sti
sbb
repnz
lock
and
mov
jb
or
or
mov
and
lret
aam
fimull
mov
scas
cmp
mov
sbb
outsb
dec
sarl
daa
mov
pop
push
sub
push
iret
xor
gs
scas
push
dec
mov
jb
dec
clc
inc
lea
pop
mov
dec
into
test
xor
xchg
adc
inc
cld
adc
fnstenv
fildl
dec
sub
rcll
adc
dec
mov
sbb
push
jb
or
movsb
lret
ret
in
les
xchg
and
cmc
fstp
cld
jmp
out
dec
push
xor
loop
xor
push
mov
arpl
cmp
movsb
cmp
push
add
mov
mov
mov
mov
imull
dec
mov
fucomp
or
into
sub
adc
mov
stos
inc
mov
aaa
cltd
mov
jo
or
cmc
fnstcw
ds
xchg
jnp
dec
xlat
push
cmovle
lcall
xor
sub
and
addr16
pop
insb
data16
sbb
push
mov
sub
mov
push
aas
aam
or
push
mov
out
adc
mov
daa
sub
stc
ljmp
push
loopne,pn
mov
mov
xchg
test
sti
nop
jge
pop
adc
fstl
int3
pop
push
ficoml
adcb
jne,pt
push
outsl
sub
insl
jne
into
stos
mov
int
jmp
aaa
lcall
cmp
mov
pushf
xchg
icebp
mov
add
cmp
in
inc
xchg
outsb
pop
jne
into
mov
je
rcll
es
cmp
mov
int3
mov
inc
pop
or
test
xchg
jecxz
xchg
mov
jmp
mov
int
push
jl
jl
enter
inc
test
sub
pop
mov
movsl
jmp
mov
clc
mov
xchg
shlb
cmpsb
inc
adc
sarb
mov
pushf
insl
lahf
sbb
sub
or
andb
out
push
sub
inc
das
or
popa
adc
stc
loop
push
sbb
push
or
mov
sbb
mov
pop
lahf
mull
fisttpl
mov
and
jp
enter
fwait
popl
sti
sarb
imul
or
rcll
jns
xchg
insl
add
mov
out
lea
adc
or
inc
bound
enter
jae
mov
outsl
add
adc
divl
inc
jb
dec
pop
dec
jecxz
cld
mov
push
jge
add
cmc
xor
enter
loop
adc
sub
xor
insb
push
jg
test
or
cmc
sub
sbb
int3
lahf
mov
pop
stos
int
mov
sbbb
mov
sahf
and
and
xchg
iret
test
fistpll
mov
aad
stc
sbb
pop
andb
or
movsb
sbb
inc
inc
and
and
fistl
or
mov
stos
repnz
jnp
scas
test
mov
adc
jmp
sub
pop
adc
add
mov
fs
iret
icebp
jg
shll
out
mov
or
dec
cwtl
test
test
cwtl
mov
ja
mov
adc
sahf
pop
push
dec
std
add
stos
ficomps
push
loopne
sub
add
xor
xchg
sahf
sbb
cmp
cmp
out
pop
mov
jmp
leave
out
xor
pop
in
add
dec
mov
jns
dec
mov
rcl
sub
or
insb
ret
je
xor
inc
int
movl
testl
inc
cs
lahf
bound
sbb
hlt
and
adc
and
xchg
scas
or
rcrl
fsubrl
imul
or
cmc
fisubrl
roll
out
mov
push
jmp
or
fisubs
lret
xor
add
xor
inc
imul
lods
jo
sbb
jne
test
fisttpll
inc
ret
insl
mov
pop
mov
add
repz
jg
or
mov
sbb
cld
jp
pop
int
imul
pop
das
lret
sub
ja
out
pusha
dec
mov
dec
sub
sub
ljmp
les
lret
lahf
inc
cmpb
cli
adc
and
sub
mov
cmpb
cltd
pop
out
das
out
sub
sbb
cmp
out
xor
mov
mov
sub
js
popa
mov
mov
std
adc
cli
in
and
daa
pop
into
imulb
xchg
add
mov
in
cmp
and
sbb
jmp
es
sbb
outsl
fiaddl
cmp
pop
dec
jns
rorb
cli
stc
in
or
jg
sbb
enter
mov
xor
pop
dec
call
sub
inc
enter
pushf
pop
mov
mov
cmc
dec
adc
pushf
cli
mov
rcll
xchg
jbe
int3
in
clc
add
or
es
outsb
std
mov
dec
cli
jg
sub
mov
rcrl
mov
out
mov
push
sub
pusha
adc
or
sahf
push
outsb
or
cs
push
sahf
ljmp
xor
loop
scas
pop
shlb
into
shl
clc
shlb
fdivrl
test
ret
fwait
lret
ficoml
and
add
repnz
ja
popa
adcb
push
xor
outsl
fsubrs
dec
nop
imul
xchg
add
push
lcall
adc
pop
imul
mov
clc
iret
insl
push
test
push
stc
cld
test
mov
jns
jne
xor
mov
push
jne
repnz
rcr
shl
lods
xchg
and
sub
insl
repnz
or
pushl
repnz
fucom
cmpsl
sub
sub
mov
adc
add
and
xchg
mov
movb
mov
js
sub
out
lahf
rorb
jns
dec
push
int
mov
imul
out
dec
jns
jns
cmp
aas
scas
repz
scas
mov
popa
xchg
dec
in
je
xor
sub
js,pn
push
xchg
jl
pushf
and
sbb
scas
es
mov
or
gs
pop
test
sbb
jecxz
xlat
sub
xor
sub
mov
ret
sub
std
nop
dec
sbb
cltd
jne
sbbl
cltd
orl
jp
lock
mov
outsl
mov
insl
mov
xor
mov
mov
repnz
push
jle
or
in
hlt
sbb
xchg
sahf
pop
in
add
dec
mov
lock
jbe
mov
push
aad
out
aas
pushf
mov
das
push
sahf
mov
mov
rcrl
mov
lret
push
fistpl
ljmp
add
lods
push
lret
int3
mov
push
daa
mov
xchg
xchg
mov
lods
and
mov
pop
inc
xchg
pop
pop
loop
pop
xchg
xorl
movsb
ret
inc
sbb
mov
cmp
std
cmp
out
adc
or
cmp
mov
sahf
jg
xor
repnz
std
adc
pop
fimuls
test
mov
xchg
out
dec
subl
and
rcll
ljmp
fidivs
mov
pop
sub
popa
outsl
iret
mov
push
scas
mov
out
mov
xchg
out
out
inc
sub
mov
sahf
mov
mov
pop
in
sub
jle
ficoms
dec
lods
dec
lea
das
mov
pop
cmpsl
cmpl
xor
mov
or
divl
jae
out
popf
cmpsl
dec
ret
popf
cmc
add
jns
add
mov
popf
jmp
call
andb
add
ret
lret
cli
or
xchg
mulb
cmp
add
mov
sbb
iret
mov
icebp
jmp
das
shrb
pop
jl
sub
test
insl
adc
mov
fwait
mov
out
sub
xor
push
insb
jecxz
sbb
xlat
inc
roll
pop
ret
and
inc
xchg
loope
or
mov
xor
std
arpl
xor
test
cmpsl
pusha
sbb
orl
test
sar
enter
clc
hlt
fldcw
rcrl
repz
mull
and
push
adc
sbb
lcall
push
jg
cmpsb
inc
or
out
shll
jns
mov
in
outsb
cmc
dec
mov
iret
pop
sahf
ret
push
mov
mov
lcall
mov
mov
mov
push
mov
cmp
rcrl
cltd
loopne
cmp
nop
pusha
or
sbb
clc
push
jg
sbb
mov
pop
fwait
in
push
es
sub
ret
lea
sub
pop
push
pop
add
frstor
pop
leave
cmp
iret
xchg
push
neg
xchg
xchg
insl
inc
add
in
mov
pop
jo
scas
mov
stos
xor
mov
loope
xor
inc
cwtl
xchg
and
pop
lods
out
push
pop
loop
scas
add
loopne
xor
shl
push
mov
xchg
xlat
pop
jbe
or
add
mov
xchg
lret
mov
jne
and
cmp
dec
push
push
nop
aam
in
or
fcmovbe
aaa
push
cmpb
sub
aas
not
in
dec
or
movsb
rcl
pop
scas
lret
je
rcrb
test
and
loope
cmp
cmp
jp
fiadds
dec
inc
in
nopl
mov
clc
jns
cli
fadds
enter
jnp
or
dec
into
mul
lret
out
in
sbb
leave
shl
jmp
rorl
inc
lods
push
dec
mov
inc
pop
aaa
ss
js
aas
decb
xchg
enter
enter
push
pop
adc
mov
call
sub
js
jp
or
jle
fcoms
xchg
xlat
jl
sub
jno
inc
cli
mov
cmp
inc
clc
mov
inc
inc
mov
mov
adc
in
or
test
push
mov
inc
mov
cmp
xchg
mov
sbb
adc
into
inc
mov
mov
jg
sub
add
add
in
enter
dec
addl
in
into
and
lret
ficompl
push
insl
out
addr16
bnd
iret
mov
pop
push
loopne
push
insb
cli
push
mov
pushf
and
mov
mov
das
fcompl
lcall
test
push
or
pusha
bound
out
in
cmpsb
leave
or
lcall
cli
les
test
push
inc
sub
jecxz
lock
jnp
inc
jp
hlt
popf
mov
pop
jbe
fmull
jns
inc
movsb
adc
add
test
cmpb
lods
jae
push
adcb
jmp
pop
orb
ss
or
out
lds
pop
sub
sahf
cmp
xchg
jno
xchg
jmp
lret
neg
xchg
dec
lret
ds
mov
mov
pop
push
popa
rolb
mov
in
les
xchg
push
cltd
fdivrp
push
popf
int
push
ret
sti
xchg
jns
sbb
and
cli
mov
adcl
xor
mov
mov
call
jne
lahf
dec
xor
aas
mov
loop
subl
rcrl
ljmp
or
push
popa
xor
jae
and
test
pop
jl
push
dec
or
outsl
xorl
push
add
xor
pusha
fnstenv
xor
jle
xor
test
cltd
pop
mov
inc
repz
pusha
cmpsb
les
jge
ds
add
int
push
pop
mov
inc
movsb
sub
jecxz
shrl
fxch
lods
lock
xchg
mov
das
jno
shll
fsub
into
push
xchg
push
and
aaa
leave
and
jp
arpl
jl
fiadds
nop
popa
adc
jo
pop
bound
test
add
jecxz
fistps
in
inc
add
xor
or
jl
lret
mov
ds
xchg
and
hlt
icebp
sbb
sti
pop
xor
lods
add
ss
dec
push
sbb
or
outsl
xor
push
test
add
inc
mov
xor
stos
arpl
js
mov
push
in
inc
pop
inc
mov
or
popf
stos
int
adc
pop
dec
cmp
popl
mov
xor
js
mov
sbb
push
neg
mov
push
pop
dec
ffree
jo
pop
xchg
inc
int
stos
mov
push
cld
mov
cld
int
inc
mov
sbb
ljmp
enter
fsubrl
jmp
cmp
test
int
enter
adc
lods
push
mov
cmp
jbe
testl
outsb
test
out
lahf
flds
dec
mov
scas
mov
mov
pushf
jmp
cwtl
jbe
push
in
push
jno
mov
cmp
or
lret
or
mov
loope
pop
inc
and
pusha
stc
xor
jne
fnstcw
outsl
imul
sbb
movl
cmp
test
mov
jnp
sub
push
decb
negb
inc
ss
lock
stos
sub
mov
aad
inc
es
push
rorl
and
jecxz
iret
sub
lret
orb
ret
ror
sub
ret
je
lret
jb
arpl
xchg
aaa
cltd
sbb
push
cwtl
stos
bound
or
jbe
imul
mov
sub
stos
mov
jns
mov
fst
and
inc
add
jnp
mov
jp
mov
jbe
fstpl
int3
jns
or
xchg
cmp
pushf
or
add
leave
sahf
sbbl
cmp
adc
pop
daa
aas
sti
shlb
or
or
int3
lods
dec
rcrl
in
bnd
movsl
nop
cmp
je
mov
mov
jbe
mov
inc
lcall
and
dec
add
adc
pop
lods
outsb
cli
xlat
xchg
sub
pop
jmp
jp
arpl
pop
xchg
lret
pop
sub
movsb
adc
lds
pop
push
ds
add
in
rcrb
stc
leave
or
das
mov
cmpsb
call
ret
call
jne
stos
push
cmp
sbb
imul
mov
es
nop
inc
in
jg
in
pop
inc
and
cmpsl
mov
test
pop
insl
xor
jle
inc
and
pushf
bnd
mov
mov
or
inc
or
xlat
pop
pop
add
sahf
adc
lods
fnstcw
pop
inc
negl
movsl
fnstsw
adc
out
pop
add
rorb
in
xchg
pop
mov
xchg
sub
lret
pop
mov
cwtl
imul
xchg
cltd
dec
aas
cltd
cli
mov
ret
dec
sub
xchg
push
sbb
mov
sub
xor
repnz
pop
adcb
addr16
cli
sub
aaa
add
test
xchg
mov
into
std
adc
test
mov
out
jbe
je
dec
xchg
or
lret
mov
ret
jp
or
sub
mov
testl
jmp
orl
imul
lcall
insl
fcmovnbe
push
daa
push
xchg
inc
scas
jno
add
dec
ret
stos
push
push
popa
dec
sbb
mov
add
shr
cld
addr16
repnz
scas
repnz
add
inc
sarb
ljmp
rorl
daa
popa
lcall
in
mov
cmpsb
adc
aam
adc
je
mov
mov
push
push
adc
int3
ja
mov
push
outsb
pushf
and
sbb
lahf
xchg
xchg
push
jbe
cli
aas
inc
pushf
xchg
push
xchg
or
outsb
adc
sti
orl
push
mov
js
fwait
sub
xchg
sub
in
addr16
iret
add
dec
rolb
pop
in
daa
push
jge
loopne
adc
loopne
or
sbbl
push
pop
in
mov
cld
jnp
lea
xchg
clc
pop
fisubrl
sbb
inc
test
lods
punpckhwd
lret
stos
mov
fidivl
sub
lea
jmp
xor
pop
or
ret
xchg
dec
test
sub
push
mov
add
push
inc
cli
rcll
sbb
or
aas
shrb
cmp
fwait
out
xchg
popf
or
dec
bound
mov
jbe
pop
xchg
xchg
push
inc
das
pop
push
jno
dec
scas
xchg
sub
or
push
or
adc
inc
add
mov
or
jmp
inc
or
lds
ret
idivl
adc
and
mov
andl
in
xchg
mov
pop
jle
subb
out
adc
cmpsl
arpl
sbb
sub
ja
add
and
inc
inc
push
rolb
in
or
rcl
outsb
mov
ss
js
fnstenv
sbb
jl
jle
sub
clc
fistl
aaa
cmc
test
mov
add
je
xchg
pusha
vmwrite
dec
mov
adc
lock
pop
std
xchg
movsb
shr
aad
dec
popf
je
mov
shr
jg
and
lahf
jg
mov
bound
bound
cmpsb
enter
sub
xor
lea
push
roll
mov
dec
neg
insb
cmpb
stos
push
mov
xor
lods
aaa
cmp
and
lock
pop
mov
and
addl
test
ret
xor
xor
jb
jecxz
pop
mov
push
fdivrl
insl
sub
pop
int3
fcoml
and
mov
insl
push
dec
mov
filds
inc
sbb
dec
clc
and
push
adc
in
add
out
faddl
xchg
out
inc
jbe
sbb
cmp
mov
int3
jnp
jnp
int
xchg
or
inc
mov
inc
fwait
jns
pusha
mov
jmp
mov
mov
movsb
and
push
jb
dec
xchg
insb
xor
pop
frstor
cld
xchg
sbb
push
xor
lret
std
lods
pop
andl
cmp
icebp
xchg
scas
jge
dec
pushf
xchg
mov
cmpsb
subl
push
aam
xchg
nop
mov
sbb
push
movsl
cs
jle
ljmp
dec
xchg
in
adc
cmp
add
sti
add
push
dec
and
xor
cmpsb
push
adc
roll
test
or
push
adc
movsl
xlat
or
or
fnsave
inc
mov
scas
push
shr
inc
dec
scas
iret
xchg
jle
paddusw
test
cmc
int
fisubrl
test
inc
iret
xchg
movsb
sub
mov
in
push
xchg
fisubrl
jmp
hlt
inc
and
pop
adc
push
jle
std
dec
test
inc
lods
insl
adc
xorl
xchg
mov
into
shrb
test
cmpsl
insl
stos
mov
add
cwtl
xor
mov
pop
adc
into
pop
movl
mov
std
inc
int
jns
stos
cmp
xor
cmpsl
mov
pop
mov
repz
mov
stos
cmp
sbb
mov
mov
pop
rorl
mov
adc
jns
mov
pinsrw
fistpl
ret
add
inc
and
sbb
jp
cmpsb
ja
fs
or
test
dec
mov
pop
xchg
fimuls
push
lret
jecxz
add
mov
add
cmp
push
icebp
shlb
sbbb
cmp
out
test
mov
xor
mov
cld
mov
pop
dec
imull
das
mov
fs
push
ficoms
xchg
jne
push
pop
mov
xorb
adc
lock
and
sbb
dec
dec
xor
add
adc
sbb
inc
scas
or
mov
jl
ljmp
cmp
fnstsw
mov
inc
std
out
outsb
mov
data16
pop
popf
insl
mov
rcll
das
fs
or
test
xor
jns
aaa
sti
lods
es
and
cltd
cmc
jl
xlat
lods
xchg
mov
bound
dec
xchg
mov
cmovo
jne
hlt
inc
rorl
cmp
mov
movsl
negl
mov
xor
gs
ret
sub
pop
and
add
adc
or
dec
mov
in
ss
fldt
push
add
adc
loope
jecxz
shrl
loopne
xchg
and
cltd
jbe
fdivl
mov
repz
mov
loop
test
stc
je,pt
or
mov
imul
cmp
and
dec
adc
sahf
sahf
fwait
or
mov
sbb
mov
add
mov
icebp
dec
arpl
pop
cmc
aaa
push
add
lret
sub
cmpsl
xchg
xchg
mov
jbe
mov
xor
xorb
cmc
mov
sbb
mov
sbb
adc
inc
repnz
push
imul
lahf
testl
lds
ret
imul
inc
rclb
ret
add
mov
mov
incb
int
xchg
mov
imul
fcomi
xchg
ja
mov
mov
iret
push
lret
rorl
inc
gs
rcl
std
xchg
dec
js
in
loop
mov
out
ljmp
push
pop
mov
inc
mov
cli
std
push
add
fcmovb
inc
jo
dec
lahf
idivl
dec
ss
pop
fsts
jmp
in
ja
adc
data16
and
incb
cwtl
shr
jnp
shll
xchg
mov
inc
inc
cmp
mov
ror
inc
sub
mov
mov
sub
lods
lods
sahf
xor
imul
in
sub
xor
in
dec
loopne
jae
xchg
es
push
jecxz
sahf
jp
sub
add
inc
push
shll
pusha
jp
xor
jl
popf
ds
mov
mov
cltd
jmp
aad
xchg
mov
xchg
mov
jge
mov
jns
cmp
dec
jmp
jno
mov
dec
mov
push
adc
lret
push
lcall
pusha
jp
pop
pop
fistpll
jno
orl
xchg
insb
int3
decl
dec
adc
lcall
add
inc
pop
ret
push
push
lods
sub
xchg
xor
subb
mov
push
pusha
mov
inc
rclb
decb
aad
into
dec
int3
mov
adc
mov
mov
xor
daa
ffree
pop
add
jo
icebp
inc
ja
mov
pop
add
ja
and
ja
sub
cmp
mov
test
adc
fsubr
into
test
mov
and
add
mov
and
adc
je
sahf
dec
cmc
je
movl
lcall
fwait
and
xorb
sahf
ret
int3
xchg
mov
aaa
mov
mov
push
cld
lret
dec
mov
add
shrl
cltd
ss
mov
daa
jae
std
dec
cmp
push
and
mov
ljmp
dec
lock
sti
lods
enter
inc
shr
cmp
lret
test
out
xchg
lret
aas
cld
inc
fdivrp
loopne
jb
and
sub
movsl
pop
push
fwait
adc
sub
and
cmpsl
push
sbb
shlb
or
adc
adc
dec
mov
xor
mov
shlb
sbb
imul
and
jnp
push
pop
pushf
fmul
mov
jecxz
enter
int
jo
dec
in
cmp
mov
inc
dec
mov
int
lret
iret
call
orb
pushf
data16
xor
jno
add
mov
test
sub
stos
sbb
arpl
or
lea
xchg
in
sbb
push
insb
mov
dec
mov
xchg
lds
inc
je
cmp
inc
push
jne
test
repz
in
mov
aas
movsl
sub
sub
lds
sahf
inc
subl
fs
or
outsb
aaa
in
xchg
lret
and
adc
test
imul
jp
push
nop
test
sbb
lahf
out
adc
or
mov
xchg
cmp
orb
nop
xchg
jmp
jmp
movsb
xor
test
pop
loop
js
xor
clc
lret
andl
je
loope
aaa
in
pop
adc
jbe
mov
scas
int
movsl
mov
mov
sar
cld
stc
mov
xor
in
mov
jecxz
sub
loop
xchg
mov
pop
jns
hlt
loopne
xor
rorl
sbb
and
push
in
repnz
mov
movsl
fnstenv
add
cmp
inc
xchg
and
or
jmp
or
pop
push
cmp
xchg
xor
int
out
fldt
sbb
mov
ret
sub
jg
pop
cli
je
adc
xlat
adc
add
in
es
xor
xlat
inc
push
add
mov
mov
dec
fists
xor
mov
xor
outsb
test
push
ret
dec
arpl
aam
jg
int3
aaa
adc
or
inc
sub
into
sub
jl
and
pop
xor
pop
add
test
xor
adc
rorb
rclb
testl
adc
mov
sbb
cmpsb
jg
test
nop
mov
cwtl
mov
push
mov
mov
mov
push
xorb
lret
mov
sarl
xchg
and
int
push
xchg
pop
cmc
in
jae
and
lods
jecxz
push
out
movsl
loope
inc
pop
rclb
and
mov
mov
sbb
push
out
jmp
jae
fstpl
sub
mov
push
out
mov
in
mov
xchg
lods
bound
ja
mov
movsb
aad
mov
orl
or
mov
cld
sbb
or
not
cmp
cmp
sub
pop
xor
cmpxchg
iret
push
repz
adc
outsl
push
add
iret
cmpsl
jbe
iret
test
mov
mov
and
pop
aad
les
loopne
xchg
test
jge
and
ret
mov
xchg
ja
outsb
and
sarl
js
add
adc
sbb
stos
std
repz
ss
push
ret
and
imul
jns
in
movsl
xor
fildll
gs
aam
sahf
pop
xchg
cli
adc
test
shll
rcrl
ja
xor
xor
mov
test
ss
mov
mov
push
push
cs
mov
mov
adc
or
into
add
aad
int
sbb
jb
stc
add
movsb
movsl
insl
imul
std
lea
xor
daa
imul
arpl
cli
lea
out
inc
repz
sbb
daa
stc
ja
rolb
nop
jp
sbb
stc
aad
orb
fsts
jge
cmpsl
hlt
std
add
stos
add
ja
cmp
push
ds
mov
push
mov
mov
cs
xchg
add
clc
pop
adc
dec
sarl
pop
ss
fs
into
leave
loop
mov
and
hlt
add
xchg
jl
sub
fs
rorb
xlat
inc
arpl
out
xor
pop
sarb
push
outsb
mov
sub
sarl
xor
push
jmp
int3
push
push
dec
movsl
icebp
aas
or
xor
pop
or
sahf
repz
dec
add
jns
cmpb
pop
stos
sub
xor
mov
stos
fisubs
jl
mov
pop
dec
cmp
xor
jecxz
jge
sti
add
iret
das
inc
push
mov
je
and
shrb
insl
jl
push
rolb
push
push
int
jae
call
outsb
repz
out
cmc
push
mov
adc
mov
cmc
jp
repnz
les
mov
fprem
pop
addl
lods
test
adcl
fcoms
pushf
jbe
pop
cs
and
fisubrs
or
pop
jb
bound
cmp
rcll
shrl
mov
adc
add
test
dec
inc
pop
cmp
ret
inc
push
fdivrs
xlat
lock
ret
xchg
and
cwtl
pop
pop
das
pop
adc
jo
hlt
arpl
xor
rorb
mov
ds
jmp
cmp
popa
adc
sub
adc
ljmp
xchg
sahf
fiaddl
pop
mov
cmp
iret
dec
shrb
xchg
push
add
loope
push
cltd
lcall
pop
mov
mov
adc
pushf
movsl
and
xchg
mov
or
mov
mov
jmp
shlb
fsubl
inc
jnp
iret
test
push
mov
hlt
les
sahf
inc
and
jge
loop
adc
mov
pop
insb
jnp
dec
out
xchg
out
pop
dec
sarl
test
imul
in
adc
pop
pop
ud0
pop
add
jns
lret
daa
adc
cld
rorl
hlt
jnp
loopne
scas
mov
xor
xchg
pop
les
loop
xchg
inc
push
fistl
xchg
call
mov
pop
fistpl
dec
pop
test
pop
sahf
decl
or
mov
mov
xchg
mov
xor
in
into
mov
sti
pop
icebp
jns
mov
popf
xchg
scas
dec
stos
ss
pop
sbb
loope
fistl
and
data16
fstl
xor
pop
cmp
movsl
sbb
das
rcrb
leave
ret
fbstp
dec
ss
cmpsb
out
sub
xor
xchg
mov
out
cmp
in
mov
sbb
shlb
das
mov
sub
outsb
test
add
or
mov
or
imul
dec
inc
outsl
mov
pop
pop
push
flds
aam
jnp
cmp
out
mov
adc
inc
stos
xor
add
lcall
adc
dec
push
leave
pop
dec
lret
jge
jl
mov
lds
in
xor
adc
loopne
pop
sub
sbb
iret
cwtl
fisttpll
add
cld
cmp
stos
and
repnz
sbb
ficomps
iret
int3
jne
sbb
lret
mov
xor
adc
cld
xchg
mov
popl
jno
mul
les
adcl
stc
or
sub
cltd
aam
popf
push
outsb
mov
sub
stos
mov
mov
scas
cli
pmaxub
mov
mov
push
rcll
adc
rolb
inc
mov
adcb
inc
mov
inc
xlat
inc
push
or
cltd
lods
sub
faddl
loopne
pop
pop
jmp
lret
push
sbb
jl
jle
pop
mov
push
rolb
mov
push
sub
add
ljmp
mov
orl
jnp
sbb
jle
lret
and
cmp
aad
xchg
test
push
in
ds
ss
add
stos
cmp
cld
xchg
adc
dec
and
js
enter
scas
jmp
sub
push
hlt
xorl
dec
and
jmp
lods
jg
inc
adc
mov
xchg
in
xor
lods
push
pop
pusha
mov
add
jns
push
mov
mov
jne
lcall
sub
mov
cld
cmp
mov
inc
xchg
push
pop
fadd
xor
jbe
loop
adc
mov
mov
sub
sub
mov
cmp
test
jle
pop
jecxz
bound
jno
or
in
aam
fs
shlb
rcrb
jns
dec
movb
pop
insb
push
cmp
ds
ljmp
rcll
push
adc
repz
fldenv
jmp
jnp
ja
pop
adc
mov
push
scas
adc
cmp
push
xchg
inc
cld
lods
or
cs
xor
shlb
dec
mov
inc
es
add
pop
aad
sti
mov
inc
jb
jg
lcall
pop
call
inc
and
mov
inc
jmp
inc
push
icebp
push
pop
inc
mov
sbb
jno
bound
push
xor
cwtl
mov
add
dec
pop
xor
xor
in
loopne
sub
fidivrs
cmc
orl
mov
imul
je
movsl
orl
outsb
call
sbb
mov
mov
mov
dec
sub
xchg
rcll
das
jge
out
sub
daa
negl
rcll
xchg
in
or
rorb
xchg
fwait
es
imul
movsl
mov
push
scas
push
sub
cmp
pop
mov
mov
or
or
cmp
xor
xchg
lods
imul
jno
sbb
repz
adc
fcompl
bound
jnp
mov
movsb
push
inc
loope
xor
and
xor
jmp
pop
pop
add
dec
pop
fldenv
psubsw
mov
js
push
lock
enter
out
aaa
jns
cltd
out
les
xor
pop
pushf
inc
pop
cmp
pop
loopne
or
mov
mov
mov
inc
loopne
popf
adc
and
pop
insl
addl
dec
mov
sbb
mov
cmp
add
jbe
push
leave
xor
scas
fstpt
loop
sub
push
and
pop
mov
inc
mov
int
filds
pop
cmpsl
or
mov
ldmxcsr
adc
mov
out
in
cld
cmp
push
pusha
sbb
add
sub
pop
inc
cwtl
insl
lret
insb
loop
pop
iret
roll
dec
test
fiadds
rclb
push
fnstcw
jg
push
in
ds
adc
mov
lock
mov
jl
xchg
cmp
mov
mov
out
lock
outsb
inc
xchg
fistl
scas
out
lock
mov
push
ss
ljmp
pusha
adc
jl
enter
dec
data16
scas
call
jecxz
add
inc
in
push
mov
scas
stos
mull
mov
cwtl
push
lahf
mov
push
mov
aad
cmp
fdivrl
add
xor
shl
shll
cmc
data16
cmpsl
and
jbe,pt
or
out
mov
mov
adc
or
aad
popf
push
or
ficoml
das
add
fs
xor
jnp
lds
lods
lret
clc
in
paddusb
mov
jle
push
mov
adc
jp
in
out
int3
mov
rolb
arpl
jecxz
lret
out
mov
icebp
dec
pop
aas
in
inc
dec
sbb
and
or
mov
pop
pop
lods
inc
lahf
xchg
bound
and
dec
sub
call
pop
std
jmp
adc
ficoms
sbb
dec
pop
int3
xchg
xor
ss
adc
jge
jmp
pop
adc
mov
mov
sub
jb
sub
jb
lcall
add
andl
push
out
cmp
push
jmp
pushf
rol
aad
xor
arpl
push
add
test
stos
das
addb
in
jo
popf
xchg
xchg
pusha
lods
ror
push
mov
xchg
jmp
mov
xchg
ja
cmpsl
xchg
and
out
push
pushf
xchg
nop
enter
mov
push
repz
mov
insl
stos
cmpsl
push
mov
rolb
neg
sub
mov
xor
mov
mov
test
test
dec
test
lea
cmp
mov
in
sub
cmpsb
push
jmp
cs
sarl
pushf
mov
sub
xchg
or
sbb
xor
ljmp
lods
sub
icebp
fs
add
or
sub
into
bnd
xchg
mov
clc
cmp
sub
xchg
bound
mov
mov
pop
mov
cltd
xchg
in
xor
ret
dec
cltd
push
sbb
daa
push
repnz
push
and
fsubs
testl
inc
int3
or
mov
shlb
in
lahf
pushf
leave
adc
es
mov
out
mov
out
sbb
push
std
pusha
adc
es
aaa
mov
roll
outsb
and
sbb
je
or
inc
nop
inc
js
lret
fwait
xor
shlb
movsb
iret
xchg
mov
aad
sbb
icebp
jno
cmp
dec
fcoml
sub
cmp
les
frstor
sti
in
sub
cmp
mov
aaa
push
xchg
inc
fucomp
xchg
pop
push
rol
xchg
in
nop
in
daa
sar
xchg
xor
les
mov
call
frstor
cmp
push
dec
cld
lea
pop
inc
bound
fxtract
into
xchg
push
dec
popf
push
fsubrp
cmp
add
sub
subb
xor
fcomps
and
adc
jae
dec
mov
mov
ficoms
leave
jbe
bound
aad
sub
jl
test
data16
adcl
data16
push
mov
jge
in
cmp
gs
mov
mov
imul
or
dec
push
cmp
es
popf
loopne
dec
jne
lcall
pop
in
les
sbb
sti
rorb
imull
fstpl
jmp
cld
xor
cwtl
and
pop
ss
cmp
aad
pop
scas
sub
lret
pop
pop
dec
call
fwait
mov
jno
test
mul
xchg
push
ss
outsb
cmp
xlat
cltd
jae
dec
and
scas
adc
sbb
mov
lods
std
nop
ds
sbb
popf
adc
nop
pop
xor
fdivrp
out
lea
addr16
add
push
mov
rorb
repz
pushl
and
cwtl
insb
adc
dec
lret
testb
jecxz
repz
test
and
stos
nop
test
and
and
add
shl
xor
mov
icebp
mov
cmp
cmc
cmpsb
insb
adc
push
dec
jnp
lret
imul
jno
sub
aad
push
outsb
push
push
arpl
cmp
dec
jo
insb
xchg
mov
andb
mov
pop
les
fwait
mov
mov
repz
mov
xor
in
jne
hlt
movsl
fsubrl
scas
addl
xor
cmp
adc
iret
mov
insl
mov
lods
das
sbb
loopne
ljmp
out
dec
sbb
shl
lret
sarl
movsl
jmp
rcrb
cmp
jo
push
push
fists
and
cmpsb
jns
inc
sbb
call
mov
aam
jno
sub
cmp
nop
iret
adc
cmp
cmc
adc
xor
sub
pop
shl
push
cmp
movsb
xchg
xchg
xchg
add
jnp
mov
in
das
int3
loop
mov
fcomip
rcll
and
inc
adc
pop
xchg
aaa
add
cli
jb
push
dec
fisubrs
and
cmpsl
rcr
xchg
inc
lahf
jns
and
daa
cmp
imulb
jnp
daa
mov
xchg
adc
loopne
in
xchg
or
ret
cmp
aam
dec
dec
cmp
mov
std
dec
xor
data16
dec
movsb
movsb
jge
pop
pop
pusha
add
in
into
cmpsl
mov
inc
mov
cmpsl
and
into
scas
pushf
add
out
dec
inc
push
pop
pushw
xor
clc
add
mov
jbe
mov
or
xor
jmp
xchg
mov
push
pop
movsl
addb
sti
jp
dec
enter
fbstp
in
push
dec
sbbb
sbb
sub
aam
out
xor
push
lea
adc
or
pop
cmpl
dec
jp
lds
aad
rolb
mov
and
fwait
cmc
dec
or
data16
xchg
test
mov
sbb
test
xchg
repnz
fdivl
enter
and
pop
sbb
mov
pop
xchg
std
and
nop
dec
xor
cmpsb
inc
mov
out
add
jbe
sti
inc
lea
mov
push
adc
sbb
mov
movsl
xchg
mov
out
and
push
notl
std
dec
or
rorl
push
xchg
mov
pop
jg
mov
push
cli
ds
and
call
mov
psrad
mov
imulb
andb
lods
adc
pop
mov
ret
iret
and
int
inc
cwtl
xchg
mov
push
inc
mov
out
dec
lods
sbb
lds
push
pop
mov
rclb
int3
xor
sarl
inc
stc
and
pusha
dec
movsl
clc
sahf
and
faddl
mov
shl
inc
mov
ja
enter
ljmp
cmp
test
je
dec
jne
mov
pop
mov
sub
xchg
scas
sahf
mov
js
in
int
lea
pop
enter
xor
fiadds
popa
or
das
mov
push
jbe
jo
cmp
or
adc
mov
inc
or
cmp
and
sbbb
and
mov
cmc
pushf
inc
iret
lock
mov
insl
outsb
fsub
shrl
mov
pop
xor
xor
xor
repz
pop
stos
cmpsl
call
popf
pop
popl
fcmovne
addr16
dec
lahf
jg
in
xchg
sub
mov
je
inc
aam
aas
fadd
jp
ja
push
pusha
lcall
scas
roll
loop
dec
adc
jl
jno
or
sbb
mov
and
pop
inc
test
xor
push
mov
clc
jg
sub
adc
dec
sub
adc
movsb
fmull
pop
shll
mov
sarb
xchg
dec
lret
mov
loope
sub
sbb
pop
and
into
mov
loope
cmc
fnstcw
daa
cmp
adc
out
movb
shrb
cmp
xchg
cmp
test
aaa
dec
rorl
xchg
out
push
leave
pop
popf
fadd
push
ficoms
cmp
pop
int
ds
stos
or
popf
dec
dec
mov
movhps
jne
scas
cmc
pop
subb
call
das
addr16
insl
sbb
rorb
lds
cmp
shll
adc
addr16
outsl
sub
sarl
lret
rcr
add
mov
test
jmp
pushf
das
mov
mov
js
jge
dec
cmp
add
xchg
orb
pushf
insb
ljmp
inc
xchg
or
in
sbb
dec
pop
cmp
outsb
and
call
inc
mov
pop
sbb
fwait
popa
and
xchg
pop
pop
or
xor
pushf
ss
xchg
addr16
nop
nop
jnp
outsl
inc
lcall
sub
scas
js
test
xor
loop
jecxz
xchg
scas
int3
outsl
jp
pop
dec
out
std
mov
pop
clc
xor
repnz
jmp
sub
mov
adc
lcall
xchg
cmp
mov
imul
or
push
xor
sbb
call
sahf
rcll
sub
adc
imul
jg
or
popf
dec
jbe
or
push
xor
in
xor
mov
jo
popf
es
dec
xchg
leave
adc
scas
mov
aam
ss
jb
test
dec
inc
mov
repnz
ja
aas
cmp
sub
les
xchg
adc
cmp
cmp
sub
mov
insb
or
mov
mov
cwtl
rclb
aam
outsl
add
mov
movsl
inc
sbb
push
daa
mov
negl
nop
inc
lods
jb
cmp
arpl
push
lock
movsl
pop
rol
incb
xchg
pop
and
fadds
gs
jne
shlb
jns
lods
and
jecxz
lock
in
xchg
popa
cmp
jo
int
jnp
daa
xor
mov
xchg
int3
je
mov
mov
out
jg
jae
imul
mov
outsb
add
mov
fadds
inc
cmpsb
sbb
popa
push
adc
imul
adc
inc
in
and
insb
push
xchg
mov
inc
add
jnp
mov
idivb
mov
jae
cmc
call
loopne
jb
fildll
sbb
mov
pop
xor
cltd
out
scas
and
xchg
dec
push
mov
mov
sub
int
into
push
dec
in
add
add
xchg
in
outsb
cld
pusha
or
dec
repz
out
add
cmpl
add
sub
mov
in
fs
sub
arpl
sbb
out
sub
xchg
shll
xchg
imul
jge
jg
test
into
inc
mov
lahf
dec
mov
push
dec
dec
lods
or
insb
cmp
push
mov
add
or
xchg
xchg
xchg
fisubs
jb
icebp
loop
mov
js
into
push
in
std
mov
outsb
push
jbe
ret
gs
or
testb
inc
frstor
sbb
out
mov
call
loop
repz
fcomps
inc
repz
or
loopne
jp
aaa
gs
mov
and
xor
add
and
add
setge
mov
and
pop
lret
out
mov
shrb
cmp
addb
add
adc
mov
inc
mov
mov
scas
nop
inc
lahf
sub
loopne
jecxz
add
push
mov
test
pop
repnz
out
xor
arpl
pop
arpl
fisttpl
cmp
mov
movsl
subb
ret
les
fcoml
mov
mov
cmp
shl
into
add
fisttpl
mov
mov
mov
inc
mov
adc
mov
cli
shrb
jl
dec
out
mov
mov
lock
mov
leave
leave
xchg
sahf
idivl
pop
jl
adc
xor
adc
test
and
out
pop
aam
sub
pop
push
arpl
pop
iret
push
sarb
sbb
push
add
popf
std
xchg
inc
fidivrl
out
addr16
or
push
fucom
push
gs
xchg
in
xor
sub
add
rorl
mov
adc
push
adc
push
ret
dec
es
jne
repz
pushf
add
int
mov
jmp
mov
cmpb
and
cmp
xchg
adc
push
repnz
mov
or
cmpsb
out
in
adc
int
f2xm1
xchg
mov
add
stos
dec
sbb
in
mov
push
cmpl
cmp
pop
je
pushf
xor
inc
mov
dec
sbbl
lock
test
subb
mov
xchg
in
leave
movsb
inc
test
sbb
repz
ror
jne
mov
and
lods
and
test
ret
jge
mov
xchg
and
sbb
mov
jp
incl
sbb
push
inc
test
lods
icebp
imul
dec
sahf
sarl
ljmp
cld
jnp
and
repnz
outsl
cmp
lcall
stc
and
adc
mov
cmp
dec
rolb
mov
jmp
nop
sbb
call
les
sub
pop
sub
mov
xlat
ja
popf
pushf
mov
shlb
mov
movl
push
popa
lock
jb
lret
push
xor
push
icebp
inc
js
xor
movsb
insb
ret
aam
in
clc
xor
rcll
cmp
arpl
data16
addr16
idiv
xchg
and
mov
icebp
outsl
adc
bound
pop
jae
pop
sub
je
xor
xor
fnstenv
mov
mov
ds
lret
mov
mov
ret
cmp
mov
sbb
fadds
and
int
loopne
aad
inc
es
test
xchg
add
leave
cmp
lods
out
out
mov
and
mov
imul
jb
mov
mov
in
mov
lcall
adcl
adc
icebp
out
subb
cmp
sbb
add
cmpsl
repnz
mov
aad
aaa
outsb
pop
pop
cmp
mov
in
fidivl
push
aam
aaa
loopne
jl
decl
sub
mov
ret
pop
push
xchg
push
sub
sub
call
xchg
xchg
add
insb
pop
repnz
mov
jg
inc
pushf
lret
adc
inc
adc
ficomps
mov
iret
pop
push
scas
loopne
push
bound
inc
into
lret
add
sub
pop
fdivl
lds
das
movb
or
jle
gs
fcmovnb
push
adcl
lret
pop
es
imul
mov
cli
sbb
jg
pop
mov
cs
lret
aad
pop
orl
shlb
les
adc
sub
cmp
dec
sub
in
das
xor
pop
adc
in
loopne
pushl
adc
and
out
sub
sub
shl
scas
inc
xlat
out
xchg
test
fistpll
xchg
flds
in
fisubrs
das
imul
mov
push
stos
adc
mov
mov
inc
es
xor
jle
test
jbe
xor
or
call
mov
pop
and
std
mov
pop
adc
xor
mov
rolb
dec
mov
lret
cmp
aam
and
mov
pop
mov
movsl
inc
shlb
mov
in
flds
mov
mov
mov
pop
push
clc
daa
nop
imull
sbb
int
lods
mov
adc
or
shlb
xor
test
add
adcl
fdivr
jge
pop
jge
adc
add
arpl
imull
jnp
scas
scas
push
and
mov
inc
add
mov
sti
sarl
daa
mov
or
mov
add
or
dec
xor
mov
push
jecxz
pop
rorl
test
or
add
ljmp
pop
movsb
xor
xchg
insl
int3
js,pn
mov
orl
ja
mov
fisubs
xchg
fistl
mov
jp
lfs
loopne
jnp
mov
mov
mov
pop
mov
jl
jmp
pusha
jecxz
inc
mov
mov
inc
pop
push
dec
adc
push
xlat
mov
mov
sahf
aas
inc
addr16
js
movl
shlb
jbe
push
fbstp
adc
idivl
xchg
and
mov
negb
ss
adc
push
out
push
push
imul
adc
jae
dec
sub
cmp
dec
jne
inc
cwtl
bound
jno
mov
shrb
scas
push
dec
jl
mov
mov
xor
int3
pop
jg
outsb
cwtl
enter
loop
jle
push
cs
lcall
scas
gs
sub
repnz
xchg
insb
icebp
mov
lds
mov
sbbl
stos
mov
int
xchg
repnz
mov
xor
sbb
testb
push
lods
jb
push
ret
popa
mov
scas
shrb
add
xchg
adc
iret
call
mov
xchg
cli
movsb
or
cwtl
inc
mov
sub
adc
add
cli
incl
lahf
lret
cs
out
ja
sbb
mov
mov
jp
in
add
leave
sbbl
cmp
push
fistpll
and
xchg
mov
leave
push
pop
in
jmp
iret
shlb
inc
inc
push
cmc
ss
xchg
icebp
das
mov
fwait
mov
lods
push
in
into
dec
lret
xor
push
ljmp
adc
popl
lds
in
push
add
repz
clc
sbbl
sub
adc
add
xchg
adc
push
lret
xchg
addr16
jmp
in
mov
mov
adc
loopne
cmp
cmp
mov
add
stc
fadds
jle
add
mov
data16
xchg
push
arpl
pop
add
ljmp
adc
mov
outsl
adc
mov
push
pop
sub
ret
testl
sub
lods
xchg
mov
cmp
ret
cs
lcall
lods
lock
and
or
jbe
mov
mov
push
xchg
and
mov
xor
push
inc
shl
imul
mov
push
push
aam
cmp
sbb
arpl
insb
rcrl
dec
adc
out
mov
icebp
cmpsb
jmp
cmp
add
iret
ja
mov
fisttps
mov
stos
xor
call
mov
mov
ljmp
fwait
add
sbb
outsl
loope
test
fistl
jge
xor
in
and
int
xchg
lcall
mov
cmp
into
pusha
mov
adc
mov
fstpl
push
push
cmp
fcmovnu
and
or
mov
test
pop
cmp
mov
push
pop
ljmp
lock
fildl
dec
cli
out
jg
iret
in
imul
std
cmpsl
orb
and
xchg
test
imul
lcall
push
rolb
inc
mov
int3
pop
imul
cmp
xchg
fldenv
out
xchg
cmp
icebp
cmp
jne
out
sub
push
mov
push
mov
test
fdivrs
aad
mov
dec
mov
sahf
mov
insb
adc
icebp
push
and
rorl
fwait
dec
jns
jae
pusha
test
push
push
xchg
or
das
mov
inc
mov
cmp
cmp
adc
loope
mov
lea
dec
jg
xor
ss
call
mov
outsl
adc
out
out
sbb
mov
fst
pop
adc
repnz
out
jae
inc
cli
adc
dec
adc
leave
push
xchg
les
fwait
inc
pop
fiadds
xor
rcrb
jae
xchg
insl
cltd
sub
loope
mov
cli
inc
jo
pop
cmpsl
pop
xchg
mov
sbb
bound
test
popf
mov
jbe
imul
lds
pop
cmp
movsb
aaa
ret
fcmovbe
add
lret
cli
lods
aaa
inc
adc
sti
xchg
cmp
and
inc
xchg
clc
jnp
sbb
inc
rcrl
fdivl
mov
and
pop
loop
jnp
push
enter
and
and
jns
data16
lods
dec
cmp
lret
inc
cmc
add
pop
hlt
dec
sbbl
inc
add
insl
ljmp
push
mov
and
insl
pop
inc
test
xchg
mov
mov
and
and
jns
push
aad
cld
mov
or
aad
sbb
dec
adcb
adc
nop
dec
push
sub
scas
test
je
int3
jmp
sub
je
xchg
push
mov
lea
js
or
push
fs
notl
inc
sbb
dec
imul
imul
clc
popa
inc
ss
mov
andl
lahf
inc
aad
and
testb
add
in
push
pop
lods
call
and
enter
movsl
daa
ret
inc
ds
ds
mov
dec
in
pop
loope
mov
push
insb
decl
mov
sub
mov
fwait
ja
xchg
mov
lock
inc
and
into
mov
dec
xor
mov
dec
push
inc
lods
and
sbb
in
cmp
sar
inc
arpl
xor
sbb
push
xchg
xchg
test
mov
push
movsl
add
mov
mov
xchg
push
imul
adc
inc
lret
pop
push
test
push
movsl
scas
sbb
push
mov
mov
das
ljmp
jge,pn
xchg
add
lods
iret
hlt
mov
fldt
jg
cmp
add
adcl
outsl
and
fiaddl
ds
jb
mov
sub
call
and
hlt
dec
sub
adc
fcoml
and
pusha
ja
cmp
sbb
xchg
push
ret
sub
jae
inc
and
mov
shlb
mov
xchg
xchg
data16
out
ljmp
stos
mov
adc
fiaddl
repz
cmp
sbb
xor
cmpsl
jp
insl
fimuls
pop
dec
push
in
mov
mov
icebp
bound
hlt
push
sbb
mov
dec
mov
imul
and
or
imulb
xchg
cmp
scas
xor
push
sbb
inc
js
icebp
jg
repz
es
push
push
inc
aaa
fistpl
fistps
loop
sbb
pusha
outsl
leave
in
stos
jbe
cwtl
mov
lret
dec
stos
dec
test
ja
dec
ljmp
mov
and
xchg
pop
scas
sbb
ds
outsl
cltd
fisubl
ljmp
mov
ret
xchg
xchg
dec
mov
adc
ret
pop
dec
dec
push
pop
scas
sbb
les
or
xchg
sbb
js
popf
les
adc
cwtl
sub
xlat
pop
les
sub
and
data16
pop
cmp
or
or
iret
sahf
push
in
dec
loope
dec
sbb
and
and
xor
adcb
fistpll
mov
cwtl
fisttps
ljmp
inc
sub
aas
clc
push
or
or
pushf
hlt
jmp
or
repz
leave
les
ftst
sub
call
cltd
sub
adc
jb
gs
and
ljmp
adc
ljmp
sub
stc
push
push
cwtl
rorl
mov
lret
fnstsw
sbbl
add
adc
aad
popf
mov
mov
xchg
cmp
mov
out
lahf
push
and
into
es
cmp
cli
scas
and
lret
sbb
pop
mov
repz
jnp
push
stos
and
adc
sbb
mov
pop
inc
fmuls
sub
iret
or
out
cmpsl
fldl
sbb
sub
xor
push
insb
xorb
jle
stc
adc
mov
outsb
js
dec
adc
sahf
fwait
cmpsl
insb
fiadds
imul
aam
xchg
clc
repnz
add
jno
xor
daa
xchg
dec
pop
out
mov
cld
aas
xor
jb
dec
pop
rclb
sub
sub
cmp
fisubs
rcrl
or
shll
insb
adc
mov
and
out
enter
lods
xlat
mov
dec
or
pushf
ja
push
mov
sbb
sbb
lret
or
ret
push
pop
push
ljmp
ficomps
ljmp
out
inc
sub
dec
pushf
inc
pop
sti
pop
lret
out
pop
mov
imul
jo
lea
lods
sub
sbb
outsb
and
push
test
cli
test
add
loopne
nop
je
dec
sub
adc
inc
cs
or
dec
inc
lret
fmulp
xor
rcll
mov
pop
cltd
jp
push
xor
mov
inc
mov
sub
cmp
inc
pop
mov
sbb
push
rol
movsb
leavew
pop
movsl
clc
cmp
fwait
inc
out
mov
mov
push
adc
sbb
xor
pushf
xchg
call
inc
sti
mov
add
repz
cmp
mov
dec
dec
push
lods
sub
jo
adc
cld
outsl
cltd
test
in
add
fdivr
mov
ret
lret
test
sahf
data16
mov
mov
xchg
lahf
or
pop
cmp
lret
jno
mov
pop
pop
sub
js
lods
insb
daa
xchg
mov
add
shr
mov
popf
dec
sub
cli
in
icebp
sbb
mov
out
les
inc
adc
sub
xchg
mov
leave
mov
mov
sar
pop
xchg
mov
inc
xchg
sahf
cmp
jmp
cwtl
xor
out
dec
outsb
loop
mov
and
xor
push
sbb
xchg
dec
in
cltd
xor
pop
jmp
fdivl
aad
mov
inc
and
sar
sub
mov
push
pushf
adc
stos
inc
cmpb
bnd
mov
arpl
and
into
scas
faddl
mov
xor
in
clc
adc
cmp
outsb
push
jo
dec
inc
pop
cmp
jecxz
roll
les
xchg
pop
inc
int3
adc
or
aad
pop
mov
add
fwait
cld
shl
cmp
or
pop
inc
in
or
ja
push
dec
add
mov
es
or
inc
inc
or
jb
imul
clc
mov
popa
xor
out
lcall
sbb
cmpsb
rolb
ds
mov
inc
js
stc
lds
inc
in
lahf
test
inc
jle
pop
inc
jg
inc
ss
mov
aam
mov
sbb
ret
fs
push
sub
and
in
mov
scas
jge
jno
sarb
rcrl
ret
cmpsb
test
in
popa
stos
jb
rclb
sub
adc
dec
outsl
ret
or
pop
mov
bound
stos
sbb
push
xchg
es
test
pushf
pusha
stc
add
bnd
adc
pop
sbb
in
mov
sbb
fildl
call
nop
outsl
adc
and
call
mov
pop
xor
scas
cmp
pop
addr16
aas
jne
pop
xchg
sub
popa
pop
in
lds
ret
xor
orl
into
aad
pop
hlt
rorb
call
xchg
pop
bound
mov
adc
ljmp
shl
out
sub
jno
xchg
push
lock
cmp
rolb
das
jnp
sbb
inc
mov
lcall
jns
jns
jl
stc
mov
cmpsl
cmp
xor
lcall
add
mov
adc
cmp
inc
xchg
stc
test
icebp
test
mov
push
sub
loopne
xlat
dec
fwait
insl
add
shlb
fwait
xchg
pop
xchg
outsb
adc
inc
neg
mov
push
inc
sub
xor
sbb
cmp
xchg
rol
dec
xor
push
outsb
lret
imul
fistps
pop
cs
push
adc
cmp
sub
mov
insb
mov
ret
js
jg
rolb
pushf
mov
mov
mov
in
jg
in
pop
out
ss
insl
and
cltd
lea
mov
dec
cld
adcl
mov
xor
cmpsl
pop
sub
movsb
sub
ret
jle
and
shll
jge
pop
pop
sbb
out
les
add
into
out
stc
add
inc
popf
mov
adc
pop
arpl
xor
xor
cmp
cmp
cmpsl
loop
out
adc
jp
mov
dec
push
add
lret
sub
adc
xor
insb
mov
sbb
shl
sbb
jg
ret
sti
pop
adc
add
xor
sub
inc
in
sub
mov
add
stos
jo
add
mov
aaa
jbe
xorb
movsb
sbb
out
sub
mov
fldt
leave
inc
ret
icebp
push
ret
or
and
insl
mov
cwtl
orl
rcr
sbb
sbb
aad
sub
dec
cmc
mov
pop
outsl
dec
fimuls
mov
ss
inc
shlb
mov
fimull
sti
push
scas
sbb
jl
je,pn
repz
jae
push
xchg
or
mov
das
aad
mov
out
addr16
xchg
and
dec
xlat
mov
xchg
mov
insl
or
dec
sub
pop
mov
mov
jmp
add
inc
jo
aaa
pushl
jae
not
test
and
fidivrs
or
std
hlt
mov
cmp
unpcklps
mov
xor
jne
lods
das
jae
pop
lea
pop
push
addr16
mov
jbe
stc
gs
inc
rclb
fdivrp
xchg
jns
cld
xor
imul
std
leave
leave
ljmp
add
add
lcall
adc
iret
loope
sti
pop
pop
dec
push
dec
fidivrl
mov
cmpb
dec
icebp
mov
sbb
in
add
int3
jnp
ss
cmp
mov
loop
pushf
mov
les
int3
rcrb
imul
cmp
push
bound
fildll
dec
cmp
out
das
loop
stos
sarl
aaa
daa
in
das
gs
out
sbb
adc
in
mov
movsl
dec
cwtl
adc
sub
das
pop
imulb
and
jge
push
push
imul
adc
call
dec
pusha
cltd
popa
imul
mov
jge
je
adc
fimuls
loope
ja
cmpsl
shll
sbb
das
jge
fs
sbb
cmc
mov
xchg
shll
test
cli
push
or
mov
sti
inc
and
ficomps
dec
stc
sahf
jecxz
stos
cmp
inc
xor
adc
xchg
ja
data16
ret
pushf
push
fistpl
jmp
es
mov
pop
sahf
jl
cmpb
jge
jae
dec
xchg
or
lret
sub
lods
out
fwait
add
adc
movsl
inc
adc
bound
jmp
jo
aas
cmp
jl
and
movsb
pop
xchg
sub
push
mov
jmp
or
cmp
cs
cmp
cmp
aas
push
adc
sti
jle
lahf
sbb
or
fmulp
sbb
pop
pop
cmpsb
sbb
or
lods
add
test
das
stc
add
mull
dec
rcrl
dec
stc
ret
notb
mov
sbb
and
xor
mov
pushf
inc
and
ljmp
and
fstpt
jl
xlat
rclb
out
and
js
mov
jl
aas
lds
cmp
test
xchg
iret
sub
pop
sub
jge
sbb
dec
movsl
mov
rcrl
jl
movsl
sub
xor
xchg
and
inc
cltd
rcrl
xchg
dec
pop
outsl
scas
xchg
adc
aad
xor
out
idiv
jne
push
incb
mov
stos
and
cltd
mov
xchg
cmp
mov
fbld
clc
sub
jbe
inc
and
gs
mov
sub
inc
ljmp
int
aad
add
sarl
imul
mulb
lcall
dec
movsl
xchg
jl
adc
add
enter
jne
fwait
mov
imul
jns
pop
call
adc
sar
xor
mov
mov
gs
fcompl
and
mov
lea
shrl
dec
rol
lea
clc
test
repnz
push
fdivl
mov
jge
jp
femms
adc
out
iret
in
out
aad
fwait
pop
push
fldt
call
ss
notb
mov
push
push
sbb
decb
jg
jp
push
inc
or
das
inc
mov
and
shlb
mov
cmp
ret
shlb
push
aas
push
into
pushf
mov
push
xor
jo
adc
push
jge
in
outsb
jbe
lret
repz
out
cs
mov
stc
sub
cmp
mov
add
insb
lahf
jle
mov
lea
ja
ljmp
test
rol
jb
gs
sbb
shll
out
testb
jmp
cmp
repz
repz
jno
dec
andl
or
mov
insb
stc
ja
jmp
pop
or
lret
clc
xor
xor
lret
sbb
testl
arpl
data16
inc
movsl
cmp
fdivs
pop
and
sub
fisubrl
shll
mov
clc
hlt
cmp
xchg
rcll
mov
cmp
adcb
or
adc
ficompl
mov
jecxz
inc
addr16
pop
add
add
clc
into
outsl
pop
dec
jecxz
and
fbstp
xchg
in
xor
loop
cwtl
imul
rcrb
xor
pushf
mov
test
xor
push
ljmp
jae
sub
std
sbb
cmc
loope
sub
push
mov
pop
stos
mov
lods
icebp
or
xchg
lahf
or
dec
push
aad
jno
fneni(8087
in
lock
mov
lea
and
xchg
mov
mov
jbe
push
int
inc
dec
rorl
jl
gs
lock
sbb
stc
xor
inc
outsb
cmpps
out
imul
adc
xor
pop
lahf
hlt
scas
or
pop
push
int3
sbb
aam
push
lret
lds
sub
fistps
repnz
mov
sbb
push
push
xlat
ja
xchg
fwait
pop
in
ljmp
outsl
pop
jno
or
lahf
push
data16
rcl
or
mov
cmpsb
int3
insl
dec
icebp
decb
mov
lods
test
add
aam
push
push
sub
inc
sbb
push
imul
xor
pop
std
bound
aad
mov
sbb
stc
jnp
pop
fidivrs
mov
sbbb
add
pop
stc
loopne
cmp
jne
aad
inc
mov
jmp
pushf
hlt
fcmovb
xchg
xchg
lret
mov
dec
sbb
mov
fnstenv
xchg
aad
adc
mov
mov
lea
out
inc
cmp
sbb
add
gs
imul
mov
std
aam
add
aam
mov
rcrl
aas
imul
xor
sub
pop
ljmp
xlat
sbb
lds
lcall
cmp
mov
xor
or
push
addb
ja
xor
popf
add
das
jb
fstl
lcall
jge
rorl
pop
xor
sub
push
lds
xchg
xorl
adc
mov
cmp
mov
add
stos
sbb
add
loop
inc
adc
push
movsl
adc
jbe
mov
in
scas
mov
pop
mov
enter
inc
xor
push
in
dec
cmpsl
leave
mov
stos
cld
adc
xchg
cmp
jae
mov
loopne
sbb
lods
movsl
popf
aad
inc
xchg
or
int
xchg
dec
not
or
jne
sub
pop
xor
cmp
daa
das
in
jl
sbb
jmp
fbld
and
or
push
inc
xor
jl
dec
pop
pushf
push
cmp
imul
dec
inc
pop
mov
sbbl
mov
xchg
mov
mov
in
icebp
xor
jl
push
test
mov
je
outsl
mov
out
stos
inc
inc
fwait
test
mov
pop
call
sbb
cmp
dec
shll
adc
or
scas
sbb
add
ror
push
lea
addr16
and
cwtl
jmp
mov
lea
lods
xor
das
cmc
mov
call
jl
lret
pop
add
or
and
mov
push
hlt
addr16
insl
testb
sub
sti
push
and
adc
pop
ficoml
adc
sahf
push
mov
enter
jmp
cld
xchg
call
movb
adc
jp
mov
push
push
mov
jmp
es
dec
mul
xchg
sbb
add
mov
fwait
in
data16
stos
sbb
orl
inc
in
mov
and
idivb
pushf
fst
test
mov
in
push
insl
loop
adc
jns
jmp
adc
xchg
dec
mov
or
sub
or
dec
push
test
dec
je
into
sti
and
sbb
add
stos
jne
mull
pop
adc
adc
xchg
aaa
push
mov
jge
and
imul
call
pop
sbb
dec
lods
or
or
cld
xor
push
push
dec
rcrb
lods
and
ret
sbbl
loop
stos
or
mov
sbb
ror
and
insl
bound
test
mov
mov
adc
jno
test
dec
test
dec
int3
out
jecxz
mov
repz
repnz
sub
pop
icebp
inc
jo
daa
cmp
xchg
sub
repnz
inc
lahf
movsb
sarb
es
out
inc
or
jns
lock
dec
call
and
pop
dec
das
xor
jg
xchg
lea
or
push
fdivrs
les
rcr
cmpsb
cmp
cltd
fbld
jmp
push
xor
xor
sbb
adc
pop
push
sbb
add
test
fwait
jae
repz
dec
ss
and
xor
repnz
jecxz
pop
test
mov
inc
xchg
outsb
cmp
inc
adc
fimull
jle
push
lea
mov
inc
lock
mov
adc
test
and
lahf
imul
xor
inc
cmp
fmuls
daa
sbb
rorb
sti
hlt
adc
mov
jmp
cld
repz
nop
push
pop
cli
ds
mov
fnstenv
fsubs
xor
imul
jno
pushf
mov
and
and
push
rorl
jnp
push
pop
js
dec
sub
repz
js
push
lret
pop
das
popa
mov
mov
ret
mov
jmp
ss
fdivl
mov
test
outsl
sbb
cmp
arpl
adc
repz
cmp
daa
les
adc
adc
add
cmp
adc
loopne
adc
sub
xorl
xor
js
dec
js
fisubrl
enter
incb
rcll
rorl
rolb
loope
sbb
fdivl
flds
xor
jne
fcmovnbe
mov
pop
rorb
sarb
cli
sbb
mov
dec
xlat
fstp
lea
jbe
jle
cmp
fsubrs
jo
cli
scas
push
pop
andb
clc
push
mov
fs
cld
sub
cltd
repz
ret
mov
movsb
in
xor
scas
pop
mov
sub
inc
cmp
popf
fwait
or
fsubs
std
push
out
push
cmp
outsl
add
sbb
dec
daa
stos
add
mov
pushw
repnz
imul
les
dec
imul
sub
js
inc
mov
adc
sbb
cmp
cwtl
pop
mov
inc
fcomps
lds
xchg
push
cmp
fidivrl
fstps
imul
xchg
mov
push
call
fidivl
mov
aam
pop
sti
mov
rclb
icebp
mov
jns
pushl
mov
aad
outsl
mov
pusha
jne
clc
inc
cmp
mov
pop
lret
ds
repz
int3
jns
test
stos
ljmp
lret
xchg
sbb
cmp
fs
ljmp
fisubl
stos
inc
push
enter
add
and
mov
enter
andb
push
xor
jmp
adc
orb
push
shrl
sbb
jo
cmpsb
aad
add
adc
jbe
js
ja
arpl
sub
dec
dec
or
adc
xor
xorb
inc
add
mov
mov
sarb
insl
test
ret
js
mov
xchg
jecxz
cmc
xchg
das
mov
mov
loop
pop
rcrb
aas
test
into
mov
cmp
add
xor
adc
cmpsb
lret
inc
insl
stos
hlt
ljmp
testb
mov
pop
faddl
xor
sbb
pop
xchg
rclb
ja
push
sbb
fwait
aad
imul
loop
movsl
dec
insl
das
cli
mov
insl
xchg
int3
stos
pop
test
loop
test
sub
inc
lods
pop
dec
adc
out
shl
insb
mov
repz
sub
in
sub
sarl
inc
shll
pusha
sub
push
or
cli
push
fistpl
push
test
sarl
sub
xor
jb
loop
xor
cwtl
fucomip
jle
repnz
lods
cmp
mov
cmp
outsl
mov
cwtl
and
loope
loop
or
arpl
aam
pop
pop
in
popf
in
stos
mov
je
xlat
arpl
stos
sahf
outsl
mov
jns
scas
adc
divb
in
mov
scas
leave
mov
popa
jae
adc
or
mov
push
insb
mov
sbb
xor
sub
imul
push
xor
mov
hlt
fsts
shlb
fistpll
js
inc
and
int
dec
fcomi
pop
and
ljmp
jns
divl
mov
int
scas
sti
inc
daa
and
cmp
movsb
or
rcrb
dec
popf
pop
inc
lods
stos
mov
out
clc
loopne
xchg
sub
fisubrl
test
lds
and
js
ss
bound
cmp
inc
lret
sub
jg
fld
and
jb
rcrl
stc
jmp
xor
mov
push
mov
dec
mov
xchg
or
dec
movsl
xlat
lea
cmpsl
arpl
jl
sbb
dec
cmp
xchg
or
jno
mov
mov
arpl
scas
mov
test
xchg
addl
add
sub
ud1
inc
dec
negb
inc
cs
xlat
add
cs
aad
dec
push
popf
pop
push
ffree
repnz
mov
insb
adc
movsl
loopne
jns
or
or
adc
jle
rorl
push
out
adc
loopne
out
lret
xor
xor
scas
repnz
adc
aad
dec
std
add
jae
scas
mov
jmp
fwait
imul
dec
sub
xchg
mov
jbe
adc
scas
xchg
inc
fisttps
push
fmull
in
push
fwait
outsl
jbe
push
push
mov
sbb
daa
jbe
stos
xor
cmpsl
popa
xchg
jb
lods
imul
ss
sub
mov
inc
orl
cwtl
sbb
sbb
jb
fidivl
ds
jbe
sub
gs
imul
push
ficoms
ficoml
jl
add
loope
add
sar
mov
inc
add
mov
inc
fucomp
jo
cmpsb
jns
and
xchg
mov
aam
mov
adc
pop
imul
push
jbe
mov
movsl
xchg
orb
fwait
jecxz
dec
call
pop
pop
mov
xchg
hlt
and
push
push
out
hlt
sbb
sahf
jl
out
jo
in
xchg
pop
stos
cmp
rolb
sub
pusha
or
adc
jns
jp
lods
push
lahf
loope
faddl
dec
jno
jl
lods
inc
mov
addr16
and
mov
loopne
adc
push
mov
iret
lods
mov
cmp
mov
fcoml
pop
lret
js
jae
cltd
xchg
bound
dec
nop
testl
mov
pop
test
adc
xchg
aaa
adc
je
insb
inc
pop
xor
pop
mov
gs
dec
ret
mov
jmp
ret
xor
xchg
push
negb
nop
jbe
fbstp
imul
pop
pop
jg
sbb
jnp
lret
and
pop
adc
inc
jb
jle
adc
dec
add
lret
push
shll
mov
cmp
adc
sub
mov
push
sub
xorl
mov
mov
adc
arpl
xchg
mov
cs
and
sti
xchg
xor
mov
mov
push
js
adc
and
xchg
add
in
sahf
mov
rcr
mov
xor
fsubs
call
icebp
out
fwait
inc
jnp
ljmp
stos
scas
dec
ds
pusha
aam
lcall
aas
shrl
mov
ficompl
jae
or
in
aad
sub
insl
in
pusha
pop
mov
sbb
push
imul
jge
fxch
push
insl
in
shlb
test
inc
mov
adc
stos
jl
fdivrs
repz
push
jge
roll
add
cli
iret
pop
aaa
cmp
ljmp
sbb
dec
lock
ret
cli
jle
andl
cmpsl
unpcklps
hlt
ffreep
xchg
or
mov
xchg
push
sub
stos
push
pop
ja
mov
mov
test
adc
insl
sbb
xchg
fistps
or
insb
lret
fadd
lock
inc
fisttpll
xchg
xor
pop
and
pusha
ja
xlat
popf
mov
addr16
mov
pushf
jl
xor
xor
push
ja
adc
lods
xchg
dec
xchg
or
cmp
jae
jp
cmp
int
ficompl
fistpll
idiv
lock
cs
sbb
ror
mov
adc
mov
jge
dec
scas
xlat
cmp
es
out
mov
outsb
push
pop
push
xlat
mov
ja
jbe
lds
dec
insb
lods
mov
je
lret
nop
les
jne
in
ss
stc
test
add
adcl
vpgatherdd
pop
adc
mov
or
xlat
inc
sbbw
push
test
call
in
aad
ljmp
jmp
mov
js
mov
pusha
jns
adc
xlat
fimull
mov
lods
xor
or
inc
pop
inc
insl
cmpsb
jb
lahf
pop
cs
lods
fwait
movsb
adc
adc
adc
out
imul
ret
test
jo
movsb
ljmp
sbb
xchg
addb
cmp
adc
jecxz
movsb
mov
xor
sub
pop
mov
daa
sbb
out
shrb
call
fs
scas
lea
aad
testb
add
jnp
enter
push
jp
aas
ret
int3
push
mov
cmp
hlt
mov
push
sti
cmc
ficompl
dec
jae
mov
nop
mov
jg
imul
mov
xor
out
hlt
lahf
lahf
scas
scas
inc
in
loope
in
add
xor
in
icebp
in
rcrl
pushf
stos
aam
test
lcall
out
mov
je
jp
ffreep
xor
cmp
jnp
and
xchg
aas
xor
mov
xchg
fidivs
pusha
clc
sbb
add
jle
mov
rolb
xchg
mov
push
pop
test
loope
mov
add
mov
or
rcr
jb
lahf
ljmp
mov
clc
jl
adc
xchg
jg
xchg
sub
push
pop
mov
dec
jne
cmpsl
loope
je
sbb
cld
or
lods
jns
and
sbb
cs
lcall
roll
inc
cmp
inc
les
out
in
jmp
mov
imul
stos
int
jle
mov
sub
mov
sub
stos
and
xchg
sbb
jg
cltd
leave
lea
lea
cmp
xchg
rorb
jge
loop
xor
pop
sbb
rorl
add
sub
jae
push
jne
idivb
jp
stos
sbb
push
fldcw
mov
shl
mov
and
adc
mov
into
jno
xchg
cmp
test
popl
ret
bound
popf
repz
mov
mov
jb
popf
icebp
lock
cmp
mov
loope
jl
add
cli
mov
xor
int
mov
dec
or
mov
sub
jns
and
mov
cmp
insl
sbb
mov
movsl
sub
xchg
add
xorl
jns
out
out
pop
adc
insb
dec
jns
mov
mov
icebp
and
mov
ja
roll
popa
loopne
stc
pop
bound
and
push
adc
lcall
std
mov
lock
add
mov
lea
dec
stc
stos
aad
sub
daa
enter
bound
sbb
adc
scas
cld
call
sub
xor
xchg
jne
xor
call
lret
call
and
fildll
pop
xchg
lds
aam
ficoml
mov
jbe
hlt
xchg
cli
jecxz
jle
push
rcrb
sub
push
clc
jmp
or
push
lahf
popf
push
popf
daa
dec
jmp
movsl
fsub
clc
arpl
pop
cmp
mov
dec
loop
dec
repz
or
cmp
jno
out
mov
sbb
mov
or
adc
enter
push
daa
add
sbb
daa
sbb
les
mov
ljmp
mov
psrld
bound
daa
mov
call
sbb
in
int3
mov
mov
sub
rcrl
sbb
notl
lret
jmp
jns
out
add
dec
dec
out
ss
cs
mov
jmp
mov
aad
push
test
jnp
sbb
dec
sub
inc
xlat
and
pop
push
mov
pushf
ficompl
jmp
sbb
pop
sbb
and
popf
rorl
sahf
lock
xlat
aam
lret
push
cli
push
sub
dec
push
fucomp
or
jno
iret
icebp
xor
xchg
jl
xchg
xlat
adc
dec
push
stc
lock
mov
dec
jl
jmp
into
dec
out
mov
jae
cltd
inc
aam
js
aas
adc
lcall
fs
leave
leave
pop
xor
mov
popf
gs
gs
aam
adc
push
mov
sub
xor
sbb
mov
or
pop
test
cmpsb
pushf
sub
cmc
ret
enter
dec
cmp
nop
jg
subl
sbb
or
push
call
leave
aas
pop
test
out
dec
sbb
stc
cmp
js
adc
jnp
jecxz
push
nop
jnp
jbe
adc
inc
es
xchg
mov
and
das
dec
pop
sbb
stc
insb
movsb
sub
push
sbb
stc
cmp
rcrb
cmp
mov
out
gs
or
movsl
sbb
mov
frstor
pop
dec
test
mov
repz
lret
mov
sub
lods
fildl
sub
add
mov
mov
push
rcrb
pop
cltd
in
mov
dec
roll
and
xor
pop
shl
out
shll
out
nop
fisttpll
sahf
in
adc
jno
cmp
jl
mov
push
std
and
push
push
lea
sbb
xchg
lods
xchg
mov
std
pop
test
iret
xchg
je
xchg
int
aas
jne
aas
aad
pop
add
fwait
mov
pop
jmp
pop
stos
dec
fldl
and
cmp
push
mov
pop
xchg
or
and
mov
popa
add
mov
xchg
loop
ss
mov
mov
mov
jnp
mov
fildl
push
lahf
and
cmp
mov
int3
push
cmpsl
hlt
jns
repz
repnz
xlat
add
not
scas
orl
pop
out
or
out
xchg
outsb
add
cmp
dec
jmp
mov
pop
or
sbb
cmp
inc
xor
push
loopne
int3
mov
outsl
mov
jbe
sub
xor
mov
xor
inc
or
pop
jo
or
inc
adc
pop
cltd
sub
into
adcb
push
add
stc
lret
mov
imul
lret
ret
sub
pop
rolb
adc
imull
pop
fwait
outsl
lds
push
sbb
dec
cmp
daa
pop
push
aaa
and
lahf
adc
push
loop
add
mov
mov
push
lds
and
pop
in
jle
pusha
stos
or
popa
arpl
es
aaa
jge
add
mov
mov
aas
in
sub
xchg
mov
pusha
in
ja
inc
push
adc
jae
shl
movsl
push
add
aaa
xchg
out
jnp
lret
sbb
push
and
fstps
add
out
pop
movb
mov
js
sti
pusha
pop
jl
mov
adc
and
imul
arpl
nop
mov
and
xchg
aaa
test
clc
mov
mov
mulb
xor
inc
inc
lods
je
mov
in
push
test
adc
push
jo
fsubrl
popa
cmpsb
iret
push
lock
aas
cmp
pop
xchg
add
xchg
divl
inc
cwtl
fnstenv
fwait
insb
mov
jo
xchg
movsb
add
mov
inc
mov
pop
rorl
sub
or
xlat
frstor
fxch
or
xlat
jnp
mov
mov
in
jg
das
dec
or
stc
push
adc
sub
or
insb
pop
cmp
adc
pop
or
in
loope
imul
inc
fwait
pop
fs
xchg
loop
mov
fimuls
scas
bound
inc
enter
aad
or
sbb
std
movsl
xchg
jmp
cmp
shll
insb
fsubl
mov
push
xchg
push
xor
aad
fwait
push
mov
cmp
cs
jmp
mov
cmc
mov
repz
es
sbb
inc
cs
sahf
aad
in
mov
and
push
xchg
fcomi
cmp
jmp
lret
mov
lret
pushf
and
xor
bnd
mov
pop
cmp
aad
ljmp
insb
xchg
mov
push
or
push
iret
fidivrs
push
in
pop
fstpt
out
mov
std
mov
xor
adc
dec
fs
add
and
aaa
jmp
and
sbb
outsl
test
out
or
push
xchg
jae
ret
leave
sti
cwtl
loopne
shr
add
adc
sub
mov
mov
popa
xchg
pop
out
sub
inc
xor
fisttpl
movsb
inc
mov
inc
adcb
xchg
mov
or
cmp
cwtl
test
pop
jge
and
cltd
in
pop
xorl
outsb
push
popf
pop
nop
mov
mov
fldt
cmp
xchg
test
ret
inc
into
sbb
mov
mov
mov
push
add
cmp
outsb
cld
shlb
pop
add
mov
and
jg
cmpl
or
mov
inc
imul
inc
lods
jno
push
push
repnz
movsb
xchg
stc
mov
mov
sbbl
addr16
repnz
mov
jo
adc
jmp
iret
int3
sti
lods
jnp
shll
scas
inc
xor
dec
andl
and
cmpsl
aam
lods
and
pop
push
data16
sbb
sti
jl
insl
adc
fmuls
test
les
xor
mov
imul
not
or
rol
sbb
enter
xlat
or
stos
clc
xchg
push
push
mov
inc
cmp
lods
inc
sub
sub
movsl
lods
xchg
adc
leave
dec
adc
pop
ret
popf
jbe
mov
inc
insb
les
pusha
les
xor
xchg
stos
ret
int
push
imul
pop
lret
mov
pop
dec
shll
hlt
adc
test
jp
add
mov
mov
scas
add
fimuls
mov
pop
push
adcb
jne
shll
adc
dec
mov
daa
xor
add
out
decl
fwait
adc
lock
stc
xor
popf
xor
addb
xchg
dec
pop
loop
aam
pop
push
lahf
jno
stc
orb
imul
insl
int
scas
mov
mov
mov
ret
mov
repz
push
lea
mov
cs
ret
xlat
and
cmp
int
in
mov
sub
sub
faddl
cmp
icebp
ficompl
inc
xor
inc
dec
add
iret
mov
jb
fisttps
test
adc
xor
add
test
or
rcrb
ror
aaa
jno
lock
cmp
adc
repz
jp
and
cmc
or
pop
add
test
jae
jl
rolb
cs
je
lods
rcrl
lret
and
cltd
add
sbb
int3
mov
pop
daa
popf
adc
fidivrl
adc
mov
dec
call
xor
xor
int
idivb
sub
sbb
pop
sbb
cmpl
fsubrp
add
or
mov
sub
fdivp
scas
xchg
inc
cmp
roll
jle
out
gs
adc
or
xchg
dec
loopne
js
mov
in
adc
and
fldcw
das
scas
imul
jnp
je
mov
sarl
add
add
imul
out
fmull
inc
daa
clc
pop
fld
pop
inc
sbbb
mov
in
adc
les
mov
and
jno
cmpsl
out
std
das
ret
mov
add
xchg
jno
pop
xor
mov
adc
loope
movb
ret
mov
jae
test
push
rep
aad
nop
add
dec
cmp
into
pop
or
lret
cmp
sbb
jns
stos
addr16
mov
sbb
int
aam
jecxz
inc
pop
jno
repz
aas
mov
or
fs
mov
fcompl
adc
jno
scas
xor
add
into
and
sbb
std
sbb
lahf
out
popf
jae
inc
jl
sub
push
sub
test
inc
lods
pop
pop
xchg
test
outsl
push
pusha
adc
cmpsb
lods
sbb
out
jo
or
fs
mov
dec
repz
sub
cmc
aaa
hlt
in
jmp
aas
leave
rorl
inc
mov
popf
mov
cmp
cs
xchg
test
les
cwtl
xchg
test
sbb
pop
or
stos
xchg
add
in
mov
lret
pop
jo
adc
xchg
out
insl
out
sahf
jmp
orl
adc
lods
movsb
xor
pop
jge
sbb
jo
movsl
push
sbb
ret
jl
aad
cwtl
add
inc
es
out
fdivrl
loop
imul
inc
cmpsb
dec
mulb
mov
sub
xchg
mov
pop
xchg
dec
mov
sbb
xor
cwtl
inc
xor
jb
subl
nop
imulb
outsl
cli
std
inc
in
mov
std
add
jl
add
dec
inc
sarb
scas
cwtl
add
jg
dec
xchg
or
dec
mov
insl
inc
insl
xchg
shll
arpl
cmp
es
arpl
jp
cwtl
lods
fmuls
test
and
pushf
jae
inc
pop
test
cmp
sub
imull
dec
sbb
and
jl
push
cmp
push
call
inc
dec
rclb
pop
dec
mov
lret
lcall
loope
pop
jmp
ret
mov
adc
ds
jmp
pop
add
mov
aaa
inc
jo
stos
push
jecxz
jne
sub
andb
scas
jno
dec
mov
popa
push
dec
seto
notl
add
dec
xor
lods
cmp
das
stc
cwtl
xchg
loopne
aaa
dec
aaa
jns
shlb
xchg
xchg
xor
inc
cmp
push
jnp
adc
loopne
enter
int
rcrl
inc
xchg
jge
aaa
ss
popaw
test
out
pop
pop
pop
dec
mov
setb
pop
push
sbb
mov
int3
xchg
pop
sub
jl
cmc
jbe
xchg
push
aas
push
or
stos
jne
cmp
sub
movsl
js
movsl
cmp
cmc
repz
sbb
dec
adc
push
mov
mov
mov
mov
inc
adc
in
sbb
call
lea
xchg
inc
jg
lods
dec
iret
inc
scas
daa
cmp
sub
adc
repz
sbb
enter
cmp
push
pop
inc
and
sbb
cmp
xchg
int3
add
cmp
push
xchg
adcl
pop
lea
js
inc
into
aas
xchg
inc
add
rolb
outsb
imul
xor
cltd
cld
xchg
mov
cwtl
dec
ljmp
lods
or
push
call
add
xchg
cmp
adc
sar
bound
sbb
int
loopne
mov
sub
sbb
popa
adc
out
ficoms
arpl
dec
mov
test
jp
lds
sbb
dec
inc
sbb
mov
push
xchg
dec
inc
push
pop
cmp
pop
nop
mov
mov
arpl
pushf
clc
lea
jl
idivb
inc
pop
lret
or
jae
fldl
fists
cs
or
in
loop
or
inc
sarl
mov
stos
rcr
testl
test
mov
sub
insl
pushl
or
cwtl
mov
inc
adc
xchg
push
add
sub
and
dec
xorl
mov
jmp
stc
subb
xchg
or
addr16
inc
sbb
jl
rclb
out
fsub
dec
adc
loopne
arpl
pushf
push
push
mov
fcoml
shll
data16
outsl
or
int
cwtl
lahf
dec
mov
iret
jle
cmc
outsb
sub
xchg
cltd
push
stos
leave
sub
push
pop
jmp
ljmp
sub
mov
mov
and
clc
popa
test
dec
test
sbb
xchg
adc
xchg
add
sarb
lock
fcomip
mov
push
adc
xor
bound
dec
fdivrs
inc
lret
or
in
lret
jl
pusha
push
test
mov
push
pusha
in
ret
mov
cmp
into
je
mov
inc
leave
adc
sub
xor
test
dec
fcomip
nop
ja
push
clc
aaa
sub
sbb
ficoml
fidivl
adc
mov
popf
lcall
fisubl
pop
mov
test
popa
aam
pop
xchg
aad
repz
rcr
mov
push
jnp
adc
jns
jle
lret
xchg
push
jae
imul
inc
insl
mov
stc
mov
mov
ret
push
imul
lcall
testl
out
mov
mov
inc
and
mov
insb
or
fimuls
mov
lret
jle
jmp
movsb
repz
jns
and
adc
sbb
adc
jl
dec
jnp
daa
mov
in
adc
inc
sub
xchg
push
push
enter
xchg
xchg
orb
jae
mov
insl
mov
inc
jge
inc
xchg
push
je
xor
in
cmp
xchg
push
mov
inc
insl
sti
subl
cmpsb
int3
sbb
pop
dec
cmp
clc
rcl
shlb
pop
sahf
lret
in
push
movsl
sbb
jbe
xchg
inc
lods
fbld
inc
das
sti
outsl
dec
lods
sbb
adcl
idivb
int
and
imul
imul
mov
jo
sbb
imul
and
xchg
mov
subl
or
int3
ficompl
stc
and
pop
or
xor
push
sbb
orl
fcmovnb
add
cli
pop
pop
sbb
sbb
xor
inc
mov
xchg
push
ja
jnp
out
sbb
mov
movsl
flds
cli
xor
fwait
add
inc
fisubrl
mov
mov
push
jns
test
xor
inc
dec
sub
imul
iret
xchg
jg
push
jns
cli
and
pusha
inc
jle
aas
scas
jmp
inc
pop
push
cwtl
in
dec
scas
mov
iret
cld
lret
cs
ja
mov
nop
or
bound
inc
push
adc
dec
inc
jb
fsubl
push
test
js
adc
lea
push
cmp
add
movsb
test
sub
adc
push
decb
call
xchg
adc
push
mov
daa
cli
inc
jns
inc
test
popa
and
sbb
xchg
adc
and
cmp
xchg
and
mov
rol
arpl
test
jge
arpl
pop
pcmpeqd
xlat
push
or
insb
icebp
push
cmp
inc
ss
xor
pop
dec
or
dec
mov
xor
inc
arpl
scas
add
push
mov
cld
out
adc
rorl
popa
fwait
mov
jl
jae
out
cltd
dec
cs
sbb
cld
test
push
in
out
popa
add
sbb
stos
mov
bound
jno
cmp
fdivr
fisubl
lods
xor
mov
and
xchg
sub
je
shrb
cmp
mov
lahf
xchg
pop
pop
mov
ljmp
cmp
pop
push
repnz
and
fmul
mov
adc
clc
mov
xchg
mov
cli
jmp
inc
data16
hlt
xlat
cmpsl
and
mov
xor
dec
in
nop
jg
dec
movsl
je
cmp
fisubrs
add
inc
mov
dec
jnp
mov
call
aaa
xor
sar
jle
mov
or
fisttps
fs
mov
jmp
xor
pop
mov
mov
dec
mov
mov
jmp
mov
lods
mov
lret
ds
ja
inc
inc
rolb
pop
dec
les
adc
jae
std
fcomi
loope
cmp
popf
mov
pop
adc
jns
cs
loopne
fcompl
jg
ja
sbb
mov
mov
test
add
or
fcomip
mov
jae
xor
push
mov
push
push
sub
sbb
cmp
scas
jmp
rorb
call
mov
mov
push
sarb
cmp
jmp
fdivs
test
add
je
dec
mov
mov
fimull
sub
mov
or
ret
sub
out
lcall
mov
xor
dec
cltd
inc
insb
repnz
or
mov
aam
jecxz
pop
dec
and
test
add
loopne
ficompl
xchg
sbb
loop
popa
push
sub
cmp
les
outsl
xchg
add
dec
xchg
xchg
adc
dec
xor
dec
mov
mov
movsl
test
daa
test
cmp
cmp
loop
push
inc
scas
sub
sti
test
xor
outsb
in
nop
sarl
xchg
nop
frstor
js
cltd
cmp
cmp
insl
xchg
das
popa
je
out
pusha
jne
mov
add
cltd
pop
neg
push
xor
es
mov
fstpt
movsb
push
mov
lret
mov
pop
ret
xor
and
ficomps
data16
jg
xor
mov
roll
cmp
sarl
or
dec
sub
ret
int3
in
aad
mov
test
stos
push
add
inc
aad
fwait
lods
sbb
fs
cli
pop
sbb
call
jecxz
add
sub
int
inc
jae
sub
dec
rolb
mov
mov
cmc
mov
test
int3
ret
xchg
xchg
stos
fnstenv
mov
cwtl
xchg
lret
fdivs
rorb
xor
inc
mov
mov
sbb
cmc
fcoms
out
and
lock
pop
sub
int3
icebp
sub
jnp
jp
sbb
xchg
sarl
or
fwait
test
out
dec
mov
fcmove
in
out
inc
sub
cmp
cmp
out
loopne
addr16
push
pop
outsb
or
mov
and
or
data16
out
and
mov
dec
clc
dec
pop
int3
jno
movsb
inc
jae
div
xchg
cmpsb
clc
fdivs
fimuls
cmp
jecxz
push
out
xor
sub
arpl
cmpsl
inc
xchg
mov
xchg
mov
dec
fcmovu
rol
xor
nop
insb
sub
add
sub
stc
movsb
push
cs
in
subl
mov
add
inc
popf
mov
pop
and
loopne
pop
cmp
jmp
cmp
sbbl
xchg
out
mov
mov
out
mov
aas
mov
and
sysexit
test
and
arpl
and
test
or
fimuls
mov
call
lcall
sbb
xor
stos
mov
cmp
jle
jg
addr16
add
scas
mov
xor
rcl
push
pop
mov
mov
hlt
dec
cs
shl
pop
xchg
adc
or
adc
xlat
jbe
imul
xor
jo,pn
ds
out
hlt
loopne
jnp
push
adc
add
adc
jne
out
fwait
mov
mov
cmp
addr16
sbb
mov
popa
sbb
fisttpl
mov
pop
jge
pushf
or
xor
pop
inc
xlat
sbb
pop
push
and
pop
sbb
stos
mov
mov
je
lret
add
mov
mov
mov
inc
fstps
sbb
push
dec
dec
push
imul
sarb
in
pop
jmp
mov
test
mov
pop
sub
sbb
xor
dec
inc
mov
xor
mov
push
imul
xchg
sub
js
mov
imul
bound
jns
shlb
out
sub
jne
gs
xchg
sbb
sub
test
mov
or
xchg
inc
or
testb
pop
xor
dec
test
repnz
add
fcmovnu
clc
sub
and
lahf
int
and
jo
ret
data16
lock
lock
gs
pop
mov
aam
push
xchg
test
mov
ret
leave
pusha
jnp
dec
add
xchg
push
adc
adc
cltd
fcompl
and
cmp
lret
mov
push
pushf
fcoml
icebp
pop
pushf
ds
das
insl
pop
aad
rcl
mov
pop
inc
lahf
cmp
int3
fldl
out
mov
push
pop
call
push
cmp
dec
rcl
call
cmp
push
das
loopne
ficoms
imul
sub
rcrb
int
sbb
lahf
iret
scas
hlt
push
mov
lds
movsl
inc
inc
mov
cmp
sub
inc
icebp
movsb
scas
pop
push
data16
popf
pop
fs
xchg
xchg
repnz
outsb
sub
add
xchg
test
into
in
aas
push
add
jmp
xchg
jge
and
aaa
add
and
sbb
repz
jnp
push
addr16
out
mov
nop
mov
js
add
sbb
ret
dec
pop
test
out
call
pop
scas
sti
inc
pusha
mov
int3
inc
jno
sub
rorl
mov
daa
xorl
cmp
mov
aam
loope
inc
test
fsub
and
movzbl
dec
push
jge
in
stc
push
je
lods
jo
fwait
in
sub
dec
stos
adc
and
cmpsl
xchg
dec
inc
inc
clc
testl
or
ds
test
fistpll
and
or
daa
mov
pop
in
add
cwtl
dec
andl
push
loop
and
xchg
ret
pop
push
sbb
xchg
incb
fiadds
jnp
lea
sub
xchg
xor
repz
into
and
aam
jno
cmpsl
test
pop
lret
and
mov
inc
xchg
sbb
xchg
xor
cmp
xchg
dec
xor
out
sti
cltd
jecxz
shl
mov
xchg
es
mov
jge
mov
jne
sub
pop
pop
xchg
pop
ja
ja
xor
scas
int
loop
jle
xor
mov
outsb
fwait
push
inc
or
clc
cmp
jns
lds
je
or
and
mov
inc
test
xchg
mov
or
jbe
or
xor
cmp
push
popa
call
fdivr
jno
push
dec
lea
stos
xchg
push
and
shll
push
mov
inc
mov
fildl
rcr
cwtl
cmp
in
out
out
test
fnstcw
test
xor
pop
and
sub
aad
call
pop
lret
jmp
push
or
and
scas
and
mov
or
jo
sarb
in
stos
sbb
xchg
sub
stos
add
mov
std
shll
fs
lods
mov
test
mov
loope
lahf
arpl
jecxz
push
mov
es
rolb
stc
loopne
out
loop
adc
hlt
mov
jecxz
add
jbe
fldl
mov
push
scas
cmp
push
dec
and
cli
test
push
leave
frstor
mov
in
imul
jge
push
jp
bound
mov
aas
push
cltd
cmpsb
pop
push
mov
ret
sbb
addr16
fmuls
stos
dec
adc
add
ds
pavgb
adc
push
push
iret
pop
inc
sub
out
test
jg
fs
jecxz
int
sub
mov
repnz
cmp
repnz
mov
push
mov
pop
pop
das
sti
cmp
dec
jb
xchg
add
jp
push
lock
xor
das
pusha
lea
pop
call
iret
sbb
shrb
xchg
test
call
push
xchg
add
jne
enter
lods
test
mov
xor
popa
xchg
lret
mov
jnp
xor
mov
movsl
jno
push
mov
jp
mov
sub
or
movsl
clc
adc
fs
lea
and
sbb
jg
out
mov
sbb
pop
cwtl
mov
dec
dec
mov
mov
inc
inc
jbe
out
and
div
sub
jmp
cld
or
mov
aam
xchg
add
add
dec
pop
cmpsl
xchg
push
mov
xchg
push
mov
sti
mov
leave
add
ljmp
ss
inc
xchg
outsl
lea
bound
mov
adc
int
cmp
push
cmp
and
movsl
mov
mov
ss
leave
pop
xchg
push
repnz
into
add
outsl
loope
mov
insb
dec
adc
add
pop
jb
leave
cwtl
lock
fldt
xchg
into
imul
imul
fwait
jo
icebp
loop
sahf
mov
push
xchg
xchg
cmp
mov
jmp
fists
hlt
fdiv
add
sbb
rcr
xchg
inc
jmp
aas
mov
pop
or
test
xchg
mov
push
add
xchg
xor
test
push
sub
xchg
xchg
insb
sti
rorl
mov
shl
std
test
js
jbe
pop
inc
dec
inc
mov
mov
adcl
sbb
and
cmp
adc
out
mov
ss
ret
or
ret
idivl
lcall
sti
cmp
mov
xor
ss
mov
mov
add
loopne
mov
mov
hlt
mov
ficompl
shll
sbb
cmpsl
mov
mov
adc
jno
xchg
cs
push
in
into
pushf
data16
mov
cmp
mov
dec
aam
shr
pusha
cli
in
lret
pop
fwait
mov
adc
pop
push
cltd
adc
dec
out
loope
mov
leave
stos
adc
out
push
xor
mov
cmp
sbb
add
cmp
icebp
arpl
inc
jecxz
fmull
pop
xchg
popa
icebp
sbb
inc
jo
mov
jl
fists
xor
cmpb
sub
inc
or
fildll
clc
rolb
ret
fs
lret
fs
mov
test
mov
aad
das
fstpt
sbb
call
mov
or
or
cmp
sbb
mov
fcomip
enter
popa
rcrl
mov
sub
les
pop
xor
mov
sub
fsubrp
cvtps2pi
pop
out
cmc
negb
pushf
jns
fisttps
imul
clc
inc
dec
mov
loopne
repz
sub
lret
ljmp
jne
dec
insb
inc
xor
lea
fistpl
sarl
dec
pop
xchg
inc
aas
xlat
and
mov
sbb
cltd
mov
loopne
mov
les
imul
jge
shr
push
pop
sub
add
ljmp
push
imul
ficomps
ffreep
mov
jp
lds
cmpsb
push
cwtl
cmp
addr16
shll
dec
in
lret
in
movsb
dec
lcall
dec
xchg
insb
mov
aas
and
int3
rorl
divb
mov
sahf
cld
div
xchg
mov
jo
adc
pop
fsts
mov
das
mov
fbld
cltd
out
jns
cld
push
push
inc
imul
in
and
movsl
ljmp
daa
addb
test
cld
sub
or
xchg
push
aaa
cmp
and
daa
mov
xchg
into
cmp
push
fdivr
inc
dec
dec
subb
popf
add
push
out
enter
push
push
aaa
add
mov
mov
into
dec
push
pop
jno
push
std
mov
fdiv
jae
cmpsb
xchg
inc
js
lods
cmp
mov
push
sub
jmp
adc
in
mov
dec
xor
loop
fwait
lock
adc
pop
sub
dec
nop
insl
add
cwtl
add
inc
mov
adc
mov
sub
faddl
sbb
or
repz
mov
lods
mov
dec
or
sahf
fld
pop
aaa
mov
jbe
lock
sbb
int
lock
nopl
add
int
pop
dec
xor
push
dec
inc
ljmp
je
jmp
sbb
cwtl
mov
lret
cmpsl
fistps
fdiv
sbb
or
shr
adc
and
test
jp
sbb
mov
sbb
sub
test
cwtl
lahf
adc
dec
das
xor
jecxz
push
cmp
adc
nop
into
les
mov
bound
push
repnz
sub
mov
call
mov
insb
pop
add
lret
aam
dec
in
gs
in
cmpsb
and
scas
add
fnstcw
out
out
aam
gs
ljmp
mov
jne
cmp
addl
push
dec
pop
cmpsl
xchg
int3
inc
lock
out
subb
sbb
mov
push
or
sub
pop
inc
out
scas
pop
push
mov
inc
les
shll
xor
cld
jp
ret
xchg
popf
ja
stos
push
push
scas
imul
rorb
enter
sub
movsl
int
pop
arpl
adc
mov
rol
js
stos
ja
xchg
arpl
lahf
mov
pop
jge
pusha
repz
jb
mov
roll
loopne
cmp
out
iret
pop
cmpsl
jp
mov
inc
adc
int3
inc
nop
jb
inc
adc
sti
iret
stos
lods
movsb
xchg
ds
mov
ds
pusha
add
xchg
rcll
out
int3
jg
fs
mov
ret
mov
add
push
or
fidivl
adc
jle
sub
faddp
inc
aas
add
adc
add
inc
stc
inc
cmp
stc
or
mov
enter
ja
add
dec
ret
pop
jae
nop
mov
mov
mov
and
inc
sub
cs
xchg
xor
mov
add
in
push
xchg
pusha
sti
inc
mov
es
insb
jnp
cs
test
pop
aad
xor
fsub
scas
jo,pt
je
inc
sti
bound
dec
sahf
lods
into
fcoml
push
pop
inc
push
xchg
mov
push
jnp
cld
pop
mov
nop
cmp
aaa
inc
sub
xor
mov
insl
cmc
cmp
fs
sbbb
icebp
in
test
mov
jne
setne
cmpsl
add
dec
fstpl
dec
jne
jp
jo
rcll
fwait
outsl
push
rcrl
scas
jb
out
stos
or
into
lods
add
std
cmpsl
insb
mov
pop
adc
push
jp
cld
fnstsw
cmp
xor
mov
adc
sahf
in
mov
inc
jmp
inc
xor
test
sub
pusha
add
mov
dec
pop
push
pop
mov
push
pusha
push
test
jne
push
xor
cs
stc
rorl
mov
scas
jge
imull
shrl
mov
in
mov
inc
adc
sub
ja
ror
fildl
cmp
add
mov
cltd
hlt
das
aas
pop
int3
push
mov
mov
fwait
jmp
cmp
popf
xchg
or
push
call
inc
sub
cwtl
cmp
pusha
xchg
add
imul
pop
andb
std
or
xor
fidivs
jne
mov
push
mov
addr16
subl
push
jb
xchg
jno
ret
inc
and
cmp
scas
jae
mov
das
pop
sarl
xor
cmp
sbb
push
push
cli
and
cs
jp
test
str
neg
mov
imul
icebp
lock
sub
stc
and
lret
inc
shlb
inc
mov
pop
das
pop
and
enter
adc
inc
enter
rcrw
std
frstor
int3
es
mov
mov
lods
or
mov
push
mov
stos
xchg
cmc
ret
jo
xorb
push
pop
push
aad
sahf
jae
ljmp
mov
adc
pop
lods
cmp
test
aam
xor
popf
test
dec
cmp
cld
mov
fwait
mov
pop
inc
lret
mov
ficompl
lahf
mov
sub
test
push
lret
xchg
xor
lds
sub
pushf
xchg
or
adc
dec
xchg
push
inc
mov
addr16
mov
mov
test
je
sbb
mov
icebp
mov
popa
pop
ds
sbb
mov
ret
or
hlt
sub
ljmp
mov
inc
jns
in
in
fimull
pushf
fdivl
mov
bound
pushf
add
xchg
insl
icebp
mov
in
jnp
and
inc
inc
cmp
aam
pop
jbe
sub
daa
jnp
mov
or
sub
lea
cmp
lock
rcll
jg
mov
mov
jle
mov
stos
stos
pop
pop
or
popf
lods
mov
outsl
jnp
fistpl
insb
push
xchg
xchg
imul
jne
divl
xchg
dec
cld
leave
mov
or
mov
mov
paddq
push
xor
sahf
sbb
pop
aaa
lods
rol
hlt
xchg
add
mov
les
imul
jne
fs
dec
daa
mov
jnp
mov
dec
daa
mov
xchg
shl
daa
jmp
or
add
hlt
and
mov
dec
es
dec
or
mov
adcb
lahf
sub
lods
or
mov
ljmp
pop
lds
test
adcl
cltd
ja
xor
lods
or
push
push
cli
mov
ret
sub
jge
ds
inc
mov
push
sbb
stos
call
shlb
pop
xor
out
shrl
jae
jmp
mov
das
cmpsl
ret
aas
xor
fidivrl
repz
lock
mov
cwtl
enter
lock
dec
pop
jle
fst
cmp
lcall
jnp
in
iret
out
in
jnp
push
xchg
inc
addr16
push
rcrl
stos
shlb
sbb
adc
insl
rorb
lret
push
lods
mov
daa
ljmp
mov
hlt
push
mov
push
mov
outsb
inc
fstpl
adc
movsl
stos
or
xor
push
xlat
fisubs
imul
fdivp
mov
rolb
es
cmp
adc
les
ss
mov
xchg
or
inc
mov
aas
xor
jmp
out
xchg
arpl
test
filds
fcmove
mov
add
add
out
sar
iret
mov
pop
push
test
popa
rcrb
sbb
movsb
inc
sbb
je
ret
xor
ds
mov
lcall
loope
push
pop
mov
push
jg
pop
adc
sbb
leave
ret
hlt
insl
xchg
js
lea
jo
and
aad
and
mov
ret
in
cmp
mov
and
or
ficoml
inc
xchg
mov
and
dec
xchg
jge
hlt
lret
xchg
inc
pop
xchg
sahf
dec
adc
aaa
jmp
adc
aas
and
jmp
xchg
in
cld
mov
stc
dec
push
and
fistpll
mov
mov
jmp
jecxz
mov
dec
pushf
add
aad
mov
pop
mov
je
jg
repz
data16
cmpb
in
popa
mov
or
xchg
repnz
push
dec
cmc
jmp
inc
mov
push
sub
lcall
in
mov
fnsave
sbbb
jp
cmpsl
cmc
test
mov
loop
mov
push
pop
adc
xor
mov
repnz
jle
sub
push
mov
push
fs
gs
enter
sbb
mov
xchg
jno
push
sbb
imul
daa
ficompl
mov
adc
xchg
add
inc
dec
insl
out
pusha
mov
out
and
or
xlat
fimuls
loopne
jp
shlb
ret
add
xlat
ret
hlt
adc
test
push
sbb
push
add
dec
notl
xchg
movsl
in
fldt
mov
lret
iret
pop
mov
dec
push
or
sub
imul
out
or
lods
in
add
sahf
sarb
push
mov
xor
fwait
xlat
cmp
das
in
mov
stos
xchg
sub
std
xchg
jo
fwait
pop
or
cmpsb
xchg
in
and
stos
xchg
les
js
add
cmp
adc
out
pusha
cmpsl
or
sbb
data16
adc
test
inc
push
sbb
mov
jp
lods
and
aas
add
push
out
add
mov
push
cmp
push
dec
iret
rcrl
test
cmc
idiv
inc
lock
inc
test
adc
outsl
imulb
sahf
mov
push
adc
leave
fiaddl
ret
cmp
icebp
rcll
ret
sbb
mov
push
cmpsl
mov
cmp
mov
je
sahf
cltd
mov
add
push
in
mov
jb
cs
fldenv
fdivr
insb
and
jo
adc
xchg
sub
lcall
into
idiv
sub
mov
call
movsl
dec
lock
or
mov
mov
adc
mov
imul
pop
movl
hlt
ljmp
das
shll
mov
cmpsl
and
push
add
outsb
leave
call
ljmp
mov
xor
adc
data16
loopne
pop
lcall
aaa
mov
push
or
cltd
das
jo
cwtl
xchg
push
push
mov
in
pop
popa
push
cmp
sbbb
cmp
mov
loopne
aaa
stos
push
hlt
ds
insl
mov
ljmp
cld
push
push
inc
push
push
add
push
push
insl
add
jb
mov
xor
mov
jg
xchg
cmp
and
jns
push
jo
gs
loop
fwait
inc
push
adc
jo
testl
gs
das
and
hlt
xchg
stos
repnz
jmp
cmpsl
mov
repnz
push
std
sbb
dec
lret
push
mov
adcl
jg
push
gs
imul
mov
mov
dec
jno
xor
and
inc
jo
mov
not
sub
xor
adc
jmp
inc
mov
daa
decl
inc
pop
xorb
dec
das
jae
stc
in
fcomi
xchg
pusha
or
into
add
and
sbb
sub
addr16
and
xchg
fbld
and
sub
mov
push
mov
add
pushf
xchg
das
push
lret
in
add
jae
xor
adc
int
and
sub
loop
lcall
mov
adc
jnp
or
arpl
fistpll
jae
scas
aam
aad
ja
int
repz
movsb
dec
pushf
test
dec
lret
dec
and
push
std
in
rorl
cwtl
add
and
sub
js
add
bound
mov
iret
imul
sub
and
jge
jecxz
lea
sbb
xchg
fs
lcall
mov
xchg
inc
sub
movsl
in
clc
mov
push
xor
mov
lahf
push
push
fidivrl
popa
jl
jecxz
imul
sarb
je
in
fadds
leave
and
add
push
out
ja
out
cmp
imul
mull
push
adc
dec
sub
je
stos
insl
mov
sub
or
jb
lret
outsb
clc
and
popf
xor
push
scas
aad
xor
mov
fwait
sub
jmp
sbb
mov
and
dec
jno
faddl
lcall
fsubs
pop
mov
pushf
or
movsb
popf
fsubrl
xor
filds
add
cmp
inc
test
xor
sub
dec
pusha
lret
ret
inc
mov
xor
mov
movsb
push
mov
mov
mov
das
dec
mov
and
mov
jle
adc
test
outsb
push
fistl
xchg
mov
pop
fwait
shrl
xor
xchg
adc
dec
fstl
rolb
mov
sub
mov
add
xchg
cld
scas
adc
cmpsl
fistpl
cld
inc
dec
in
out
in
mov
ljmp
test
pusha
jle
and
mov
add
rclb
test
cmp
sub
test
cmp
test
popa
push
ret
mov
adc
adc
into
fcomi
out
loopne
pop
jge
daa
xor
inc
frstor
mov
out
aad
lea
mov
jns
adc
outsb
inc
push
out
push
push
pusha
adc
movsb
mov
shll
sub
cltd
imul
inc
mov
xchg
and
cs
enter
cmpsb
mov
nop
push
aaa
mov
inc
test
mov
mov
imul
push
movsb
sbb
push
jge
lods
xor
mov
les
push
in
jbe
pop
or
es
jns
into
or
gs
xchg
lods
mov
pop
add
lds
and
dec
cmc
push
pop
push
cwtl
inc
inc
inc
push
xorps
xor
aaa
mov
negl
push
mov
jns
leave
iret
fisubrs
movsl
inc
ljmp
scas
negb
dec
jae
out
pop
fwait
cmp
mov
ss
sub
mov
rcrl
andb
decl
lret
jmp
sub
sub
jp
sub
mov
push
daa
mov
adc
pop
shl
inc
xchg
pcmpeqb
repnz
xorb
fiaddl
adcb
mov
mov
inc
lahf
in
jae
pop
cltd
repz
fimuls
dec
push
dec
in
imul
push
insl
mov
xchg
loope
cmp
lret
mov
call
in
movsl
jno
or
cmp
mov
daa
xchg
jecxz
cmp
mov
int
lock
mov
fcompl
outsl
movsl
mov
inc
lods
and
lods
lods
inc
bound
jno
mov
gs
push
inc
clc
and
add
sahf
adc
jb
rorb
mov
inc
aam
mov
inc
cmp
pop
xorl
cmpsb
push
mov
movsl
call
mov
sti
out
push
or
inc
int
jnp,pt
mov
lods
movsb
dec
aad
xor
add
mov
inc
pop
jecxz
insl
xchg
int
movsb
pop
xchg
fs
flds
mov
lods
cmp
and
int3
jo
push
and
js
into
inc
cmp
pop
pop
fld1
icebp
inc
out
incb
pop
aas
and
loopne
shl
jb
lods
jl
xchg
ror
aad
mov
mov
stos
inc
add
insl
mov
dec
out
je
sbb
mov
fstl
and
aad
movsb
inc
stc
or
lret
mov
repz
popf
sbb
mov
fadds
jecxz
push
lcall
xor
frstor
mov
mov
aad
jae
mov
xor
xor
es
jp
repz
sbb
daa
cmp
adc
mov
pop
push
sbb
add
fnstsw
out
inc
jb
aaa
sarl
add
in
xchg
fs
adc
out
mov
pushl
shr
test
in
clc
cmpsb
mov
lods
test
frstor
flds
pop
stos
repnz
pop
int
arpl
and
sub
fmull
sub
pushf
rorb
fists
into
cmp
ds
fistps
ret
lret
inc
mov
scas
pop
push
mov
lcall
mov
or
out
rcll
cmpsb
cmp
pop
xchg
push
fmulp
movsb
out
mov
xorl
mov
jnp
jne
hlt
xor
ljmp
jnp
mulb
aas
push
and
inc
dec
dec
push
pop
mov
cmp
rcr
dec
cmp
and
int3
fcomi
adc
ret
add
mov
or
subb
cmp
ja
xor
rcll
mov
inc
addl
pop
inc
cmpsb
xchg
sbb
fcomps
nop
inc
dec
mov
popa
nop
sbb
sbb
sarb
ffree
cwtl
mov
aam
nop
mov
dec
xor
fdivrs
sahf
inc
add
mov
pop
sbb
cli
mov
out
or
jmp
sbb
shl
inc
mov
test
fstpt
je
bound
mov
jmp
pushf
je
pop
movsb
ret
gs
insl
lods
mov
or
sub
push
xor
and
mov
push
pop
jp
out
pop
and
sub
pop
in
mov
adc
sbbl
push
mov
inc
push
mov
push
sbb
ds
js
rcrl
fwait
out
inc
xor
in
movb
into
lret
pop
add
ljmp
add
xorb
inc
lcall
mov
scas
in
lods
pop
jne
andl
test
loope
sbb
aaa
pop
xor
fs
popf
inc
push
rolb
lret
in
jbe
jle
icebp
cli
mov
aad
lgs
mov
imul
cli
in
lahf
or
push
in
aad
bound
xchg
mov
push
jmp
cmp
movsb
clc
push
test
xchg
push
arpl
sub
adc
push
repnz
call
adc
pop
outsl
mov
gs
dec
aad
mov
inc
adc
inc
aad
dec
fcmovne
pop
mov
xor
jae
sbb
lods
jb
mov
stc
testb
ss
push
lret
adc
push
rclb
xchg
adc
pop
inc
loope
xchg
pop
test
movsb
add
mov
subl
add
push
xor
fld
pusha
ret
jge
mov
outsb
andl
loopne
inc
adc
outsb
test
insb
mov
iret
xor
jmp
adc
insb
push
and
jge
fisubrl
sbb
cmp
push
jl
ret
push
fisttpll
aas
in
push
lds
cmp
sbb
rcrl
jmp
shlb
mov
mov
or
mov
aam
push
sub
sbb
stos
jecxz
mov
fdivrs
ljmp
mov
or
jle
movsb
sub
ret
add
adc
xor
add
icebp
in
inc
sbb
jno
js
je
clc
xor
dec
cmp
inc
dec
mov
push
pop
out
rcrl
pushf
lret
andl
dec
xchg
mov
mov
mov
and
mov
lds
js
mov
and
shll
int
cltd
push
jb
adc
xor
and
dec
and
lcall
sub
ror
dec
sbb
cmc
mov
xchg
popf
cli
or
inc
push
sub
ret
fdivrs
add
mov
lret
xchg
dec
aas
pop
call
jl
xchg
test
push
sub
dec
iret
test
and
dec
jno
negb
xchg
cmpsb
sbb
je
jecxz
inc
pop
inc
cmp
subb
arpl
dec
jb
fiaddl
adc
inc
cmp
and
out
imull
mulb
adc
xor
adc
adc
dec
push
push
jnp
xor
fisttps
cmp
rol
out
adc
les
xor
sub
and
adc
push
cli
inc
in
add
dec
jl
mov
outsl
rolb
add
outsb
xchg
cmpsb
xchg
int
in
sbb
or
ljmp
leave
cmpsb
inc
jnp
sub
ds
fwait
push
icebp
add
xor
ljmp
push
jge
mov
cld
movsl
cmp
cs
test
and
inc
push
dec
push
cmp
pusha
test
xchg
ja
ljmp
adc
inc
int3
sub
sub
imul
test
ss
stos
jge
sarl
stc
andb
das
scas
and
add
in
mov
loope
add
clc
fwait
inc
jmp
sti
cltd
xchg
cltd
mov
arpl
addl
add
dec
xchg
imul
loope
pop
and
jns
lahf
popa
adc
mov
fistpll
push
std
push
sub
mov
cmp
xchg
imul
sti
fmul
mov
test
addr16
aaa
imul
jb
into
push
loopne
dec
mov
jno
sub
jnp
in
cmp
sub
mov
jnp
mov
sbb
jl
lret
sub
dec
pop
jae
dec
inc
or
cmp
cltd
or
mov
push
lret
int3
jge
xchg
sub
mov
dec
hlt
adc
bswap
and
rcll
fwait
cmpsl
dec
stc
add
int3
hlt
push
lret
iret
int
nop
push
fnstenv
pushf
dec
jns
stos
cmp
ss
sahf
mov
mov
lds
les
les
andb
jge
mov
int
bound
mov
push
ret
pop
inc
jmp
and
inc
xorb
hlt
inc
and
xchg
nop
mov
ss
sbbb
mov
sub
cmpps
pop
repz
loop
outsb
push
shll
mov
arpl
jne
add
pop
push
pop
push
jo
pop
jle
inc
rcrl
and
mov
xor
cwtl
and
gs
jmp
cli
mov
jl
int
xchg
out
jp
push
cmp
ljmp
inc
cs
loope
fmul
mov
add
sub
adc
sbb
lods
stos
dec
aad
xlat
cmp
jg
test
sahf
xor
fucom
lcall
pushf
lds
lods
out
xchg
inc
mov
fsts
insw
sbb
jl
jl
fcomps
cmc
sarb
js
lahf
mov
pushf
xor
pop
out
daa
cmp
push
in
xchg
leave
jecxz
lea
fstps
popa
aaa
and
ret
repz
pusha
movsb
int3
jo
cmp
loope
sbb
clc
fcmovnb
in
adc
dec
loope
daa
push
adc
je
arpl
adc
mov
into
int
sub
pop
sub
or
jnp
mov
xchg
inc
jno
mov
cmpsb
add
out
pop
dec
sub
lahf
mov
cmp
xor
lods
pop
jne
cmpsb
fwait
int3
or
jecxz
pushf
bound
and
ficoml
mov
jg
mov
jnp
adc
push
dec
dec
inc
inc
xchg
cmp
dec
fwait
sahf
add
mov
xor
vsubss
sub
add
loope
inc
lahf
or
in
int
pop
shlb
sbb
xor
out
xorb
mov
sub
arpl
or
xchg
jno
mov
sahf
cmp
xchg
xor
test
push
inc
mov
mov
add
add
fildl
push
int
shrl
addr16
mov
ja
dec
add
enter
push
dec
fwait
clc
push
xor
pop
ss
fucom
add
push
push
adc
dec
mov
mov
ss
int
jnp
repnz
jge
pop
cmp
fldpi
mov
sub
jp
dec
out
sub
mov
or
pop
dec
sub
sbb
mov
adc
ja
lcall
xlat
fisubs
mov
into
popf
adc
sbb
dec
jmp
xchg
add
lret
aad
add
mov
enter
xchg
or
adc
fcoms
sub
or
mov
test
sub
sbb
adc
cld
or
lret
xchg
imul
mov
add
xchg
xchg
push
popf
ret
sbb
cmp
adc
sub
loope
cmpsb
cs
mov
or
and
cmp
jnp
inc
shr
pop
mov
mov
and
int3
das
rcrb
mov
and
dec
stos
mov
sbb
lret
push
cmp
pop
dec
jmp
inc
push
jecxz
cmpl
jp
push
enter
mov
fs
cmc
inc
jp
add
outsl
aad
scas
std
push
adc
into
lds
mov
cmpsb
pop
es
scas
xchg
loope
sti
xchg
stc
jmp
inc
mov
out
mov
pushf
std
add
movsl
and
imul
jo
inc
jae
mov
int
stc
mov
pop
inc
cmp
loopne
imul
imul
sahf
lock
daa
pop
notl
cmp
push
mov
mov
adc
test
xor
cld
mov
ret
pop
inc
inc
jbe
push
fcmovu
mov
xor
iret
add
dec
daa
pop
or
sub
push
jb
cmp
shlb
or
mov
xchg
pop
in
mov
in
cmp
xchg
pop
mov
xchg
mov
scas
adc
ret
hlt
mov
push
xchg
mov
sub
mov
xchg
sub
sub
ss
lret
xlat
mov
aaa
sarb
inc
sbb
sub
or
aad
push
adc
jmp
and
ss
pop
sbb
jle
mov
xchg
stc
lcall
ficoms
jno
push
xchg
data16
loopne
xchg
pop
fiaddl
lahf
popf
out
in
inc
add
out
jg
pop
cmpsl
jl
mov
es
push
cmp
xchg
pop
push
pop
mov
loopne
fwait
imul
stc
xchg
pop
or
shrb
pop
mov
scas
lods
aas
mov
cmp
les
jp
mov
mov
push
and
adc
and
xchg
mov
shlb
jge
xorb
outsl
and
adc
daa
jb
and
mov
lock
inc
cli
jmp
mov
jmp
addr16
jecxz
xor
jecxz
iret
test
outsl
push
inc
jnp
gs
dec
fisubs
mov
into
jmp
inc
clc
popa
js
xchg
mov
fsts
pop
inc
mov
mov
imul
jns
pop
insb
dec
inc
sbb
cmc
outsb
loop
adc
arpl
aaa
sub
ja
mov
and
incb
js
and
fcoml
mov
mov
clc
idiv
cmp
hlt
add
jb
sarb
sbb
inc
shll
xchg
or
repnz
pop
clc
adc
inc
mov
in
xor
daa
jmp
dec
cmp
imul
mov
sbb
loop
sbb
iret
pop
scas
test
js
xchg
dec
and
pop
pop
test
pop
push
cmc
pusha
jb
sbb
cmpsl
pop
add
sbb
pop
xor
jb
sbb
out
repz
add
fcmove
sub
pop
xchg
in
cmp
lcall
add
in
arpl
sti
push
xor
das
or
push
and
lret
repnz
pop
jecxz
fdivl
outsl
mov
mov
rolb
cltd
xor
mov
aam
adc
out
hlt
stos
jp
adc
xchg
hlt
lock
push
push
add
jmp
in
pop
int
lret
jb
and
xchg
sub
ret
mov
sub
add
cwtl
je
xor
pushf
outsl
imul
stos
mov
xchg
sub
inc
test
out
jnp
adc
dec
jge
push
ljmp
mov
sbbl
xchg
pop
stos
sti
sar
test
pop
movsb
add
aad
sti
sbb
fsubl
pop
xchg
xchg
mov
sub
das
fisubs
mov
jo
mov
pushf
lret
inc
test
ret
cmc
pop
jmp
ss
std
jecxz
sbb
cmp
mulb
mov
sbb
in
jl
sub
pushf
or
insb
lahf
bswap
cltd
fimuls
pop
or
or
cmp
ja
je
adc
test
ss
and
mov
sbb
xor
mov
loope
sub
xorl
sbb
inc
imul
nop
push
pop
pop
popf
aaa
mov
fildll
lods
std
bound
sub
cmp
cli
rcrl
push
add
decl
leave
xchg
rdmsr
jns
push
and
jo
fdivrl
fsubl
pop
xor
pop
jecxz
cmpsb
pushl
jo
xlat
dec
sub
cmpsl
mov
into
xor
es
mov
cmp
xchg
lahf
shlb
and
cmpsl
adc
insb
or
sbb
mov
cwtl
rcrl
pusha
popf
and
cmp
lea
xor
jae
sbb
xchg
pop
repnz
bound
lock
imul
aad
daa
xchg
jns
mov
jmp
jmp
orb
les
dec
pop
in
fmuls
inc
loope
loope
int3
mov
rcrl
mov
mov
ja
ja
movsl
test
ret
jno
xchg
scas
mov
pop
nop
or
push
in
std
add
ret
lret
arpl
xchg
aam
or
jns
add
mov
cmp
xor
jno
daa
cltd
sbb
cltd
xchg
adc
add
xor
pop
and
mov
orb
xchg
ljmp
inc
push
adc
push
mov
dec
jnp
bound
test
arpl
cwtl
sbb
icebp
into
lods
and
push
mov
sub
call
cmp
or
jb
lahf
hlt
in
pop
jne
imul
enter
cmovb
jnp
divb
fisttpll
cld
sub
bound
repnz
mov
lods
hlt
aaa
adc
mov
and
rcrl
adc
inc
or
inc
fidivs
push
shl
fbstp
cld
inc
leave
dec
insb
inc
lret
and
cli
inc
mov
adc
sub
mov
inc
imul
push
test
cs
jp
push
call
pop
mov
push
inc
fs
mov
int3
pop
js
mov
lods
hlt
int3
mov
nop
in
mov
and
dec
mov
and
call
imul
inc
inc
add
jp
aaa
pop
leave
test
dec
add
pusha
out
xlat
cmp
into
aaa
sbb
ja
dec
xchg
rcrl
stos
test
jb
clc
inc
push
cltd
cmp
stos
scas
js
and
sbb
pop
push
fimuls
sahf
push
insl
pop
stc
add
pop
sub
sub
mov
in
inc
nop
inc
imul
adc
in
movb
cmp
xor
cmp
cmpsl
mov
loopne
sub
dec
out
mov
leave
outsl
bound
pusha
push
adc
ror
aas
out
movsl
or
pop
mov
push
aaa
mov
fisttpll
or
lret
mov
sbb
imul
out
mov
inc
jne
mov
ret
xor
jne
pop
jbe
inc
ja
gs
js
cmp
jp
outsl
push
cli
andb
pushf
or
addr16
ljmp
in
movsb
sbb
data16
sbb
ds
cmp
xchg
sbbl
lcall
push
ret
popf
inc
je
mov
sbb
push
push
add
xchg
cmp
repz
mov
fmuls
cmp
les
cmpsb
mov
xchg
mov
xor
mov
or
and
cmpsb
scas
cmpsl
and
div
xor
xor
nop
add
lar
clc
pusha
mov
and
sbb
xlat
stos
clc
sub
data16
and
mov
inc
sbb
shll
movsl
jge,pt
xor
inc
stos
cmp
mov
sbb
cmp
and
cmp
xchg
sub
mov
dec
and
imul
mov
imul
jge
adc
jae
decl
mov
icebp
ret
jmp
mov
shlb
es
xchg
jl
out
in
ljmp
rcrl
and
int
mov
mov
call
xor
sub
xchg
mov
sti
js
sub
pop
push
fsubs
mov
jg
ror
push
ljmp
call
aas
sbb
mov
in
add
pop
inc
mov
xor
icebp
fwait
push
addl
mov
xchg
inc
sbb
cmc
sarl
pop
lods
enter
or
test
cs
xchg
pushf
inc
outsl
xchg
ljmp
test
jno
add
sahf
cmc
sbb
jle
xchg
cltd
xchg
xchg
pop
decb
sbb
jns
jecxz
push
imul
sub
fldenv
sbb
jae
xchg
jbe
dec
xchg
mov
pop
pop
pop
mov
mov
cmpsb
or
pusha
cmc
dec
sub
dec
mov
test
xchg
mov
push
adc
pushf
jo
cmpsl
pop
aad
clc
ljmp
dec
push
inc
enter
jb
fadd
repz
ret
sub
pop
roll
mov
mov
hlt
adc
out
test
push
pop
xchg
aam
cwtl
leave
nop
ror
xchg
mov
adc
scas
ret
call
and
push
jno
mov
out
sbb
addl
sub
scas
or
adc
les
mov
gs
cmp
mov
mov
adc
and
and
mov
lcall
mov
in
push
out
icebp
stc
in
aam
mov
xlat
addr16
repz
pop
daa
movsl
ret
mov
push
jb
add
sahf
lcall
into
and
jl
outsb
cmpb
jecxz
idiv
hlt
sahf
ja
push
test
push
popf
into
sub
xor
dec
arpl
pop
out
mov
add
das
pusha
in
in
push
adc
pushw
dec
sub
mov
test
movsl
inc
insl
mov
xchg
push
in
xchg
sahf
outsb
mov
pop
jae,pn
and
imul
in
out
stos
divl
pop
je
xchg
and
and
push
mov
jge
xchg
ret
rorb
pop
cwtl
mov
ja
inc
cmp
xchg
pop
mov
iret
adc
faddl
shlb
jl
mov
decl
sub
push
smsw
scas
inc
shll
cmpsl
inc
sbbb
mov
ror
push
pop
inc
popf
int
cmc
pop
xchg
or
mov
cmp
jnp
fwait
sbb
mov
inc
adc
cld
ret
jg
jb
cmc
pop
ds
cmp
inc
les
mov
sbb
mov
sub
stc
jno
push
sub
and
jae
rcr
add
xchg
cwtl
clc
or
push
sti
jecxz
call
mov
xor
popf
xor
add
xchg
jno
lods
out
repz
fmuls
test
insl
push
out
imul
or
mov
push
or
jp
cld
xchg
inc
mov
xchg
fistps
pushf
mov
mov
dec
test
call
stos
cmp
daa
add
jmp
or
cwtl
sbb
icebp
cmp
and
icebp
int3
out
shlb
loop
cmpsb
cmc
and
lock
cmp
push
jmp
jg
inc
cltd
and
dec
adc
or
lds
loope
test
bound
jnp
in
push
ljmp
icebp
mov
fistl
mov
andb
cmp
and
sar
jbe
clc
xchg
mov
push
into
cli
or
pop
inc
arpl
xor
insl
jb
add
mov
jmp
cmc
test
out
xchg
cmc
jno
push
ret
nop
mov
xor
dec
daa
hlt
or
dec
and
lcall
push
cltd
sahf
push
stc
push
rolb
and
push
aas
mull
ficoms
pop
js
push
je
push
cli
lods
out
fbstp
call
inc
out
fsubl
ljmp
lods
call
fucomip
aas
dec
mov
das
xchg
stos
mov
jo
dec
jmp
test
mov
daa
out
mov
jne
and
or
mov
and
push
incb
jns
xchg
fsubrl
xchg
test
add
jns
enter
sub
or
and
adc
lret
stos
xchg
jae
arpl
sarl
xor
daa
mov
std
shrl
mov
out
xlat
xor
and
sbb
push
call
jnp
mov
test
push
push
xchg
xor
ss
cltd
popf
mov
xchg
lods
mov
arpl
dec
sbb
dec
jmp
cmp
and
lea
pusha
data16
aam
stc
ss
and
lods
mov
dec
mov
jge
mov
cltd
js
lcall
ret
in
hlt
inc
mov
pop
rcl
adc
stc
jp
mov
xorl
sarb
repz
jae
lds
push
mov
cli
or
dec
add
cli
and
ljmp
cs
push
push
ret
je
cmp
fidivrl
jo
mov
in
fwait
mov
mov
les
cmpsb
lcall
int3
aam
addr16
fsubp
mov
dec
arpl
push
dec
push
test
inc
ljmp
adc
test
lret
rcrl
mov
mov
cmpsb
cmp
jns
popa
stc
cld
push
cs
outsb
bound
jmp
ds
loopne
add
in
jb
jp
nop
mov
test
jo
add
cmp
cmp
add
into
daa
pop
inc
call
adc
mov
test
mov
cli
push
adc
repnz
iret
push
cmpsb
push
lret
cmpsl
or
xor
jno
lods
mov
rcll
in
mov
es
or
cmpsb
mov
cmc
bound
or
sbb
mov
roll
sub
stc
movsb
jp
add
pop
mov
xor
jl
xor
imul
jecxz
cmp
dec
sar
imul
jl
push
ja
data16
add
xchg
sub
inc
int
pop
fldenv
repz
xchg
adc
mov
outsl
xchg
xchg
dec
loop
adc
ret
inc
jnp
mov
adc
pusha
lret
sub
push
or
mov
mov
cmp
xor
jg
xor
jb
cs
inc
ja
aad
addr16
mov
js
jbe
outsl
mov
dec
cmpsl
std
xor
imul
and
dec
xchg
or
add
add
aam
xchg
and
jns
outsb
pop
fidivrl
push
mov
rolw
repnz
aam
pusha
push
sub
nop
sbb
pusha
out
movsb
jmp
mov
dec
es
mov
cmpsl
repz
jnp
shlb
pop
and
outsb
inc
or
lock
test
push
inc
push
lahf
mov
sbb
jns
jae
xchg
adc
xchg
jns
cli
mov
and
xor
faddl
mov
rolb
xchg
inc
xor
movsb
xchg
dec
repnz
loopne
aas
jecxz
and
ljmp
aas
pop
and
addr16
or
xchg
fmull
in
decb
mov
xchg
mov
ret
xchg
adc
lcall
add
cltd
dec
jge
lahf
rcrb
and
xchg
cmpsb
pop
sar
iret
cmp
cmp
lea
pop
pop
mov
pushf
std
xor
pop
icebp
lcall
cmp
pop
in
push
push
out
daa
mov
jne
shlb
roll
pushf
dec
dec
and
cmp
push
jmp
inc
mov
rcl
mov
mov
mov
sbbl
rol
mov
std
pop
sub
sub
dec
xchg
aaa
and
pop
rolb
imul
inc
or
je
lods
das
sub
push
out
mov
test
push
inc
rclb
mov
outsb
sub
push
pushf
scas
pushf
scas
into
xchg
mov
sti
lods
push
add
inc
jmp
push
and
xchg
jne
pushf
decl
addl
cmc
add
pusha
les
sbb
jl
mov
jns
repnz
adc
adc
cmc
pop
mov
shlb
pop
push
adc
pop
sub
jmp
xchg
mov
inc
cmpsb
int3
sub
xor
lcall
scas
mov
pop
movsb
lret
mov
int3
mov
jl
jne
in
bound
sti
test
push
cmpsl
xchg
fldenv
fidivs
cld
int
sub
pop
sbb
ja
sahf
insl
cmp
sbb
jecxz
enter
daa
dec
adc
outsl
jle
mov
aad
mov
icebp
sbb
pop
dec
pop
lods
lret
sbb
cmp
fcompl
mov
sub
pop
or
cmp
in
test
call
xchg
clc
jno
sub
add
adc
jge
sub
xchg
or
addr16
xchg
rclb
popa
sahf
dec
and
das
nop
movl
pop
jae
cmp
mov
fiadds
xor
inc
cmp
jno
jbe
pushf
lret
adc
or
sbb
xor
insl
ljmp
ss
inc
jge
inc
add
lret
aaa
adc
jle
js
lods
push
or
outsb
adc
test
sbb
xor
add
stc
mov
pop
es
loopne
insb
test
cwtl
or
leave
data16
lea
jno
iret
fnsave
dec
ret
popf
jbe
push
ret
ficoms
call
cmp
hlt
cmpb
cmp
pop
sub
sub
sub
fdivs
mov
push
repz
cli
out
bound
cli
addr16
imul
das
test
and
lret
adc
jl
jmp
mov
enter
jge
jb
fwait
popf
jb
gs
adc
leave
lret
push
cmp
add
adc
fisttpl
dec
ja
jl
adc
xchg
jl
sub
ja
rcrl
data16
sti
push
or
inc
inc
or
cmp
dec
dec
dec
out
jle
sub
std
sub
mov
stc
jecxz
mov
popf
push
aaa
or
adc
push
add
andb
xor
jnp
jno
push
aas
pop
insb
xlat
rcl
mov
scas
push
gs
rorb
ljmp
and
fucomp
lret
jecxz
int3
js
jl
cltd
push
cmp
fstpt
cmp
stos
lds
imul
pop
out
dec
mov
add
xchg
lds
cltd
pop
ret
mov
sbb
iret
mov
push
adc
lret
mov
adc
scas
push
and
outsl
xchg
into
mov
jmp
cmp
pop
jle
or
inc
repz
ds
mov
mov
out
sbb
out
cmp
int3
sub
sbb
movsb
adc
stc
pushf
or
jg
nop
idivb
jnp
xlat
and
inc
xlat
sub
mov
iret
add
aad
xchg
push
mov
inc
repnz
sub
stc
mov
push
mov
sbb
sahf
xchg
push
cmp
xor
cmp
cmp
jno
cmp
scas
add
adc
cltd
xchg
lahf
mov
push
push
arpl
mov
mov
lret
lds
xchg
and
in
ret
ljmp
pop
add
sub
sbb
aad
movsl
outsb
inc
add
hlt
dec
lret
push
nop
add
lock
test
faddl
sahf
sbb
lea
ficomps
icebp
mov
cli
fs
out
stos
mulb
inc
cwtl
xchg
sti
insl
cld
subl
jp
sbb
stos
out
out
and
cld
outsl
jmp
mov
mov
add
loope
icebp
pop
push
xchg
jmp
imul
or
ds
les
or
lret
jge
pop
mov
je
pop
push
jmp
das
dec
jg
dec
aaa
sarb
adc
push
pop
push
xor
mov
mov
sub
lods
dec
mov
push
aam
rorb
hlt
sub
cli
xor
loope
cmp
sbb
hlt
mov
xlat
sub
sar
arpl
out
mov
sub
push
popa
jecxz
push
and
cmp
inc
les
insl
roll
movsb
out
jp
stc
movsl
push
daa
mov
mov
scas
std
jecxz
hlt
sbb
xchg
fwait
cmp
xlat
sbbb
xchg
or
push
push
clc
pop
fsubrp
lret
sub
inc
loop
push
mov
push
jnp
jae
mov
xchg
inc
push
xorl
sbb
rcrb
ss
cs
or
jp
cmpsl
dec
adcb
aas
mov
or
jle
or
push
adc
cmpb
inc
inc
clc
leave
xchg
test
adc
jne
addr16
arpl
roll
fldt
mov
subl
or
stc
sub
pop
pop
cmp
clc
xor
jbe
shll
fldenv
shrd
jns
mov
fwait
in
fs
in
pop
dec
adc
xchg
cmp
movsb
mov
cmp
fimull
call
loop
dec
inc
jne
cmp
outsl
inc
inc
aas
adc
ret
push
push
mov
mov
push
dec
fnstsw
xchg
out
rclb
add
arpl
xchg
out
test
mov
iret
repz
out
ret
cs
mov
mov
repz
and
cld
scas
movsb
cltd
enter
out
es
push
into
notb
mov
mov
sbb
fdivrl
arpl
push
lods
dec
mov
dec
pop
daa
or
insl
ret
pop
mov
pop
mov
xor
inc
jl
test
cmp
xchg
pop
hlt
repnz
sbb
test
sub
and
pop
fildll
je
pop
pop
xchg
jbe
mov
jnp
add
lea
xor
pop
stos
scas
mov
aam
das
cli
dec
xchg
cwtl
cld
sbb
test
insb
loop
addr16
in
icebp
pushf
out
lahf
popf
mov
mov
iret
inc
sahf
testb
inc
sub
imul
and
push
push
cmp
mov
divb
xchg
and
mov
mov
popa
push
cmp
sub
daa
repz
push
arpl
shr
xchg
jno
jno
in
std
lahf
fadds
mov
dec
int3
arpl
or
cmp
xchg
dec
les
test
mov
ss
ljmp
push
mov
pop
sbb
test
sub
out
jno
dec
idiv
pop
insb
dec
ljmp
jmp
mov
addb
or
test
es
sub
push
out
jl
cmp
loop
adc
in
sahf
push
mov
mov
push
outsb
pusha
inc
lret
and
sub
push
dec
pop
push
cs
fldl
jnp
cmp
test
lret
push
test
pop
cmp
inc
ds
push
test
test
dec
dec
mov
pop
imull
mov
mov
xlat
mov
sub
jns
movsl
sbb
aam
in
bound
das
repnz
dec
pop
xchg
jg
aaa
pop
aam
subb
mov
cmc
jb
mov
jno
mov
push
popa
jo
mov
inc
mov
cli
neg
out
cmp
xor
pusha
and
shll
xchg
mov
bound
les
push
sub
pushf
add
stos
in
pop
cwtl
mov
fwait
sub
jnp
cmp
and
push
sub
push
sbb
jns
jnp
inc
xchg
mov
ds
outsb
orl
mov
push
mov
push
popf
xor
lock
sbb
cld
inc
inc
sbb
cmpsb
fiaddl
mov
outsb
dec
fnstsw
lock
inc
ds
jg
inc
loopw
or
adc
dec
stos
fcompl
adc
adc
lahf
and
mov
sub
data16
pop
addr16
push
lret
pop
push
mov
bound
pushf
xchg
mov
push
ficoml
bound
fwait
adc
pop
and
inc
push
cld
mov
sbb
popa
aad
aad
add
ss
jb
out
mov
pop
adc
idiv
loope
push
mov
rorl
sub
push
jb
scas
xchg
adc
in
xchg
popf
xchg
gs
addr16
outsl
xchg
inc
add
nopl
pop
cltd
jmp
xchg
mov
pop
sub
leave
clc
pushf
out
add
clc
sub
cltd
repnz
mov
or
fidivl
sub
dec
js
mov
nop
push
pop
xor
mov
loope
addr16
mov
mov
jmp
push
negb
dec
mov
xchg
rorl
or
loope
cmp
cmp
cmp
xchg
push
push
pop
lods
fidivl
ret
adc
icebp
push
mov
jns
mov
cmpsb
cmpsb
mov
in
push
stc
clc
push
xor
lret
push
xacquire
jle
cmp
leave
addr16
icebp
dec
dec
es
out
cmpl
lea
add
pushf
push
jno
push
cli
repnz
dec
pop
jp
cwtl
shl
fists
jl
in
sbb
in
xor
cmp
stc
imul
cld
pop
mov
inc
xor
or
lods
mov
sbb
sub
rorl
fldcw
dec
loopne
push
and
jge
mov
fsubrs
push
aad
mov
and
or
mulb
or
cmp
das
push
shlb
ljmp
push
xor
icebp
cmp
arpl
mov
push
je
xchg
push
std
out
mov
movsb
test
or
xchg
cs
dec
push
jmp
out
jp
push
jle
repz
inc
add
pop
xchg
mov
imul
into
js
pop
pop
aaa
pop
ret
mov
xchg
jae
outsl
inc
push
or
and
adc
call
push
leave
push
in
bound
pop
out
jae
jmp
sbb
sbb
test
jno
add
scas
fstpt
inc
xor
and
aaa
sti
mov
in
jle
mov
cmp
in
rorb
scas
cltd
dec
pusha
ret
je
gs
jno
pop
jbe
rorl
push
sahf
sbb
aam
add
popa
jnp
stos
mov
in
jbe
addr16
fwait
call
int
aaa
cwtl
ret
cltd
test
icebp
xor
jp
loopne
cltd
mov
scas
xor
in
inc
arpl
jbe
or
push
mov
icebp
fs
sahf
mov
xchg
push
xor
int
add
mov
pop
mov
stos
push
add
arpl
adc
jne
mov
das
aaa
mov
xor
push
sbb
cwtl
divl
mov
jno
sbb
rclb
repnz
xchg
int3
out
fdivs
cmp
insb
in
imul
hlt
inc
add
and
xorl
jbe
xchg
loopne
push
jbe
mov
aas
leave
sbb
ss
push
clc
ja
jp
divl
dec
cwtl
mov
jo
fimuls
push
sbb
push
inc
mov
lcall
inc
cmpsb
in
dec
aas
mov
push
add
xchg
mov
sbb
sar
lret
and
mov
pushf
out
xor
scas
xchg
cmp
dec
add
adc
mov
loope
xor
adc
pop
das
fs
xchg
add
mov
rcll
rclb
sub
subb
orb
xor
scas
cwtl
rclb
aad
sbb
int3
rol
sbb
outsl
xchg
xchg
mov
dec
jecxz
and
in
mov
mov
lds
push
in
sbb
cmc
repz
mov
pop
xor
inc
sbb
shl
fwait
sub
pop
insl
sbb
sub
adc
mov
cmpsb
cld
xor
pop
std
pop
scas
pop
out
adc
dec
add
push
dec
push
nop
sarl
test
adc
ret
pop
roll
ror
and
pop
insl
popf
or
adc
iret
dec
cmp
adc
ljmp
aaa
mov
jge
sarl
push
jle
sbb
push
mov
mov
or
mov
aas
push
push
xchg
cmp
xchg
cmp
sbb
orl
and
stos
call
pop
sub
and
push
in
rorb
lahf
mov
dec
sub
adc
fnstsw
push
sub
xchg
outsl
push
inc
push
int
jb
pop
out
cmp
lock
cmp
mov
adc
sub
insl
fldcw
hlt
mov
testl
pop
lock
pop
mov
xchg
scas
push
mov
fistps
in
adc
dec
cmp
adc
negb
xchg
cltd
pop
mov
sbb
lods
test
cmp
pop
aad
add
inc
ret
fcoml
mov
push
jo
call
cmp
or
inc
imul
cmp
cld
in
rcrb
testb
add
and
and
scas
mov
inc
push
cs
or
jb
sub
mov
in
test
movsb
inc
lock
xchg
lret
dec
sbb
sahf
cmpsb
aas
pop
lcall
jnp
int
jb
fsubrl
xchg
xor
flds
or
gs
mov
test
mov
add
pop
rolb
pop
mov
xchg
dec
sbb
dec
and
std
dec
aad
mov
cmp
pop
stos
gs
jns
imul
pop
push
mov
lods
and
bound
leave
mov
or
pop
test
pushf
sarb
and
bnd
aad
xlat
push
jp
or
and
jne
push
sarl
mov
aam
outsb
adc
divb
jl
cs
inc
xchg
mov
out
hlt
push
and
jle
xor
std
out
inc
mov
pop
sub
jbe
push
inc
push
and
jle
add
dec
repz
fucomi
loop
stos
int
lock
fcoml
clc
popl
pop
aas
push
or
cltd
xchg
lret
aam
push
data16
ja
sub
jle
test
lea
in
sub
mov
enter
call
ja
aad
dec
mov
jl
pop
cmc
push
sbb
mov
rcrl
inc
fs
or
repz
scas
out
test
outsl
popa
push
adc
aaa
leave
fisubl
adc
jge
jecxz
xor
and
dec
lds
cmpb
insb
pop
dec
movaps
cld
dec
cmp
test
addb
in
dec
inc
das
sti
push
fldcw
fmuls
jns
enter
mov
sbbl
cli
jo
into
cmp
decl
mov
sub
sbb
shrl
inc
add
cmp
pop
mov
mov
mov
enter
dec
push
xchg
xchg
ds
rcr
push
mul
movsb
jns
pop
or
sbb
adc
loope
jb
or
jmp
xchg
pop
adc
ljmp
push
ja
in
add
sub
mull
inc
shl
inc
pop
or
setl
nop
xchg
xchg
xchg
push
xchg
add
lea
int
dec
jo
push
lea
movsl
add
int
mov
jl
mov
enter
adc
fs
js
ficompl
cmpsb
or
mov
leave
orb
or
xchg
pop
cmp
lock
nop
sahf
ret
lds
fistl
xorl
lcall
repz
sub
cli
pop
dec
call
daa
loopne
add
sub
sub
loopne
jae
inc
and
ret
fwait
les
ret
sbb
clc
in
repz
cli
mov
mov
es
call
push
xchg
mov
icebp
adc
pop
lea
fimuls
jb
and
add
das
cmp
in
mov
mov
popa
js
inc
jae
es
fmull
or
out
fisubrs
into
push
loop
rclb
ret
repz
icebp
mov
out
pop
inc
aaa
sub
loope
icebp
stos
sarb
mov
inc
and
rcr
or
adc
xor
ss
int3
xchg
nop
mov
lahf
push
sbb
sbbb
add
hlt
imul
inc
cmpl
jno
hlt
inc
out
js
popf
dec
jle
testb
jno
or
mov
ljmp
sahf
je
inc
push
fmuls
in
push
test
cs
daa
fninit
iret
mov
jmp
imul
pushf
mov
xchg
daa
or
cmp
xchg
aad
or
loop
mov
jecxz
fidivs
iret
add
push
sahf
cmp
outsb
test
push
mov
into
mov
adc
xchg
sti
pop
pop
shrl
into
and
add
and
add
stos
mov
ret
mov
xlat
pushf
xchg
leave
aad
sbb
aam
vhsubpd
sar
mov
jg
frstor
aaa
shrl
mov
es
nop
iret
xlat
jb
lods
daa
jl
repnz
sub
inc
add
dec
jns
dec
insl
pop
pop
mov
xlat
jbe
dec
sub
sbbb
dec
lods
cwtl
cs
mov
pop
pop
cmp
mov
dec
mov
cmp
idivl
scas
inc
mov
scas
jp
scas
imul
mov
adcb
push
xlat
pop
mov
iret
jp
stos
xchg
lret
push
insl
pop
test
and
lea
jae
cmpsb
test
aad
add
sbb
xor
icebp
mov
movsb
ret
or
add
rep
adc
pop
mov
cmpb
cmp
call
cmp
movsb
jo
xchg
xchg
loopne
shrb
push
andl
jecxz
sub
aad
xor
jge
hlt
jle
cmpb
lods
in
inc
fists
adc
and
jbe
add
mov
scas
mov
mov
mov
dec
adc
push
aad
mov
xchg
inc
or
xor
insb
ret
movsb
or
rorb
insl
dec
js
push
gs
lea
in
sub
cmp
xchg
jl
sub
ret
out
push
and
bound
pop
test
fldt
sub
adc
popf
xchg
adc
jno
pop
out
push
add
dec
aad
pop
xor
ret
aaa
arpl
cmp
inc
jb
xor
loop
mov
leave
out
cs
repnz
sub
cmovne
sahf
add
cmpsl
dec
imul
outsl
enter
ja
aas
dec
addl
sub
mov
xor
nop
pop
mov
dec
mov
jecxz
clc
pushf
mov
jnp
or
xor
pop
sahf
jnp
xor
sahf
dec
lcall
push
mov
pusha
popa
bswap
xor
shrl
xchg
ja
shl
add
cmp
add
dec
subl
cld
andl
jle
popf
mov
mov
push
push
pop
fdivs
repz
cmp
sbbb
ja
fildll
xchg
mov
push
mov
xor
cmc
inc
inc
stos
pop
pop
adc
dec
pusha
testb
gs
pop
paddusw
mov
test
pop
popf
mov
pop
sub
xorl
out
sub
test
push
mov
das
adc
mov
mov
loopne
aas
jnp
arpl
adc
mov
push
xor
push
jae
shl
pop
popa
and
and
add
dec
daa
xchg
dec
lea
scas
xchg
or
jmp
xchg
inc
ljmp
arpl
pop
pushf
cmpsb
adc
testb
add
fidivrl
inc
pop
mov
mov
popa
ret
dec
sti
icebp
dec
add
repz
mov
out
addr16
push
pop
inc
loopne
push
mov
pop
dec
fwait
inc
out
cld
push
cltd
fwait
jnp
push
lret
and
lret
ret
movl
xchg
sbb
js
or
cwtl
cwtl
imul
push
and
sti
sbb
lock
pusha
push
mov
push
mov
js
or
clc
add
adc
divl
lret
xchg
fwait
and
push
test
push
je
add
das
mov
or
mov
std
aam
mov
xorl
in
or
leave
inc
iret
fdivs
shll
pop
bswap
jnp
in
cmp
inc
cmp
jle
sub
int
add
les
mov
sbb
dec
cltd
inc
jbe
add
ror
sub
dec
fildll
adc
icebp
subb
cs
cld
push
mov
inc
mov
push
ds
mov
pop
mov
pop
jo
cltd
pop
mov
subb
xchg
int
ret
cmpb
cmp
in
pop
and
lods
jge
push
cmpsl
repnz
cld
rorl
subb
inc
cmp
and
addb
inc
xchg
xchg
pop
adc
test
jle
xchg
cmp
sbb
push
stc
sti
or
dec
mov
cmc
jo
and
fmul
jae
pop
and
inc
push
int3
gs
jle
mov
adc
data16
sti
sub
jbe
subb
stc
cltd
lret
mov
add
addr16
scas
fsts
scas
sbb
xchg
lahf
lret
fcmovb
sbb
sbb
jno
jnp
xor
insb
push
mov
cmp
cli
xlat
xchg
dec
jmp
add
je
sub
in
cmp
sti
testl
jle
lods
or
les
jmp
stos
sub
not
add
cmp
mov
mov
adc
test
sub
int3
ja
insl
incb
mov
jo
in
stc
das
mov
xor
in
daa
jb
xor
mov
test
push
xchg
inc
subl
lods
jle
push
or
push
lret
movsl
mov
mov
adc
xor
mov
sub
jne
dec
fidivrs
mov
shll
mov
pop
xchg
pop
insl
push
out
pop
enter
fisttpll
loope
shrb
into
aaa
push
cld
mov
ret
mov
je
mov
mov
mov
sub
mov
push
outsb
xchg
cmp
sahf
adc
iret
pushl
inc
out
cmpsb
mov
or
ss
inc
gs
mov
out
jnp
fisubl
and
xor
movsl
sub
mov
hlt
movsl
push
int3
dec
push
insb
out
int
pop
xchg
jbe
add
jl
pop
lock
mov
js
test
andb
and
push
imul
or
pop
lret
test
aas
or
dec
repz
cmp
pop
sbb
sub
adc
fs
adc
xlat
xor
pop
adc
or
lret
and
and
push
sti
or
pop
inc
mov
cs
cmp
shlb
test
aas
add
mov
push
fnstsw
insl
xor
std
test
repnz
andl
xchg
mov
xor
in
mov
in
pushf
std
xor
icebp
mov
cmpsl
sbb
or
iret
inc
xchg
clc
add
sub
les
ret
call
mov
mov
add
sub
pop
sub
arpl
cmp
push
cmp
mov
or
mov
cmpsb
jo
lods
adc
loopne
mov
pop
cmp
fstpt
or
and
jne
xchg
rorl
mov
pop
xor
push
bound
ret
inc
inc
and
pop
mov
ljmp
or
sbb
push
sub
sbb
pop
ds
fsubl
fiaddl
aam
into
xchg
repnz
mov
adc
adc
adc
in
cmc
xor
push
sahf
pusha
push
sub
les
and
sarb
add
or
jp
mov
jg
in
inc
jmp
pop
pop
loop
pmulhuw
mov
ss
les
je
pop
cmpsb
fld
jecxz
loope
movsb
out
add
sahf
or
test
xchg
inc
mov
aam
rcr
test
decb
fmuls
test
lcall
push
clc
sahf
test
push
jmp
imul
cs
push
and
and
outsb
lods
out
push
repnz
into
adcl
xchg
jmp
fistl
aaa
sbb
and
fnstcw
mov
out
movsl
aad
enter
arpl
out
push
pop
sbb
movsl
xchg
add
mov
or
xchg
jo
lret
out
icebp
mov
lods
dec
push
xchg
push
imul
ret
inc
or
mov
push
add
pop
or
addr16
jge
xchg
stos
int
jno
dec
fstl
call
loopne
sti
fs
inc
mov
mov
in
push
xor
cmpsl
inc
faddl
sbb
lods
pop
jg
push
sarw
ljmp
inc
daa
jnp
push
es
pop
add
cwtl
adc
push
dec
xor
pop
call
adc
ret
sub
jmpw
jo
xchg
rorl
pop
adc
dec
mov
mov
bound
push
adc
lock
sbb
les
and
mov
sahf
lods
push
pop
sub
mov
jmp
sbb
lret
inc
sti
sahf
mov
sbbb
aam
mov
push
jle
test
or
insl
inc
fnstsw
dec
sbb
cwtl
sub
push
add
sub
cmp
jg
cmp
jp
dec
stc
add
loop
sahf
ret
adc
add
sti
pushf
stos
movsl
sbbb
ja
lret
sbb
jno
cmp
adc
add
popf
in
xchg
push
dec
mov
out
inc
aam
fcomi
aaa
jmp
and
adc
jo
mov
mov
das
or
cmp
xlat
pop
add
sti
jp
imul
iret
push
ret
fcmove
daa
ds
add
mov
fs
loopne
test
lods
popa
js
jbe
std
pop
or
xor
adcl
lock
arpl
jbe
hlt
xlat
lods
scas
inc
and
sbb
jns
xchg
lret
lods
les
mov
lock
push
hlt
mulb
into
mov
pop
push
jl
ljmp
lock
aam
push
ret
pushf
xorb
inc
xchg
mov
cli
sub
add
xchg
das
ds
ret
nop
xchg
pop
xchg
daa
bound
dec
test
repz
cmp
mov
test
pop
push
jo
push
xchg
mov
and
push
loop
aas
aas
inc
mov
inc
pop
cmp
shrb
push
mov
cli
adc
and
xchg
dec
cmpsb
hlt
cmp
into
mov
pop
pop
fsubrs
add
cli
ljmp
lock
sub
pop
dec
sti
cmp
jmp
bnd
push
add
bound
pushw
xor
pop
outsl
hlt
imul
out
leave
mov
jge
stc
out
arpl
pushf
mov
push
pop
leave
mov
sub
in
inc
outsl
mov
loopne
inc
test
clc
adc
sub
aas
mov
ds
mov
fcoml
repz
cld
fimull
aam
fcomps
pushf
pop
mov
cmp
push
rcr
repz
sub
sub
cmp
shrl
arpl
cmpsb
xchg
cmp
push
xor
lods
int
mov
xchg
jge
mov
xchg
lods
push
push
ljmp
push
lods
mov
rolb
mov
out
inc
cmp
ljmp
xchg
push
int3
fwait
leave
test
sbb
fnstenv
test
outsb
leave
pop
test
popa
jbe
dec
pop
jecxz
dec
inc
insb
aam
negb
pop
sub
popa
inc
sti
mov
ret
bound
xchg
inc
pop
dec
lds
sar
stos
cmp
fidivs
cmpsb
xor
fwait
sbb
adc
cmp
lcall
push
imul
dec
mov
outsb
sbb
and
andl
outsl
push
xchg
adc
leave
push
movlps
mov
xlat
ss
insl
fstpt
in
push
or
jl
loop
insb
gs
xorb
mov
fsubr
cmp
and
mov
dec
adc
adc
scas
call
divb
mov
shl
mov
sbb
adc
cltd
xor
in
mov
xchg
movb
cmp
addb
lods
cmp
sahf
sub
mov
push
mov
ficomps
outsb
mov
scas
lock
sahf
xchg
outsl
cmpsb
xchg
pop
es
int3
cmp
or
cmp
ret
mov
cmc
insl
xor
mov
aaa
jg,pn
enter
adc
movsl
xchg
adc
in
dec
cmp
seta
sub
and
lea
cs
and
sub
jns
sbb
loope
jmp
sti
cltd
fsubr
out
in
shll
push
ret
mov
mov
clc
in
aam
mov
inc
jne
sbb
in
imul
stos
orb
adc
dec
mov
push
xor
out
dec
pop
adc
fbld
fs
jo
add
inc
xor
mov
lock
xor
dec
int
sbb
xchg
arpl
xor
pop
or
xchg
out
mov
push
pop
shll
cmp
add
mov
fisubs
mov
push
jecxz
aam
daa
and
mov
loope
sti
push
jmp
dec
lret
or
jbe
out
or
incl
ss
xor
dec
in
ds
xchg
test
dec
mov
sub
xchg
sub
ret
or
ret
fistps
sub
push
inc
dec
hlt
push
and
mov
bound
push
adcl
clc
mulb
mov
adc
inc
inc
insl
xor
jae
xor
push
cmpsb
push
xor
addr16
pushf
add
mov
xchg
and
clc
xlat
mov
cli
jl
insl
clc
add
mov
fwait
push
sbbl
dec
bnd
and
jle
in
and
lds
icebp
add
in
jae
int3
popa
xchg
loop
xchg
add
cmp
les
mov
or
and
es
cmp
and
gs
jecxz
pushf
xlat
mov
popa
xchg
xor
aad
jb
popa
imul
jmp
test
mov
add
adc
xor
xchg
in
ret
rorl
jp
mov
lcall
aam
leave
mov
xor
fs
cmp
fcoml
movsl
add
mov
cli
lret
repz
inc
popf
sbb
in
fwait
xor
jae
mov
cmp
pop
sbb
bnd
jmp
incl
pop
in
es
cmp
cmp
xchg
and
fstl
push
popf
cmc
test
cmp
jno
sub
xor
or
cli
or
or
push
cmp
fistpll
mov
jle
test
mov
xchg
and
xor
ror
lea
jle
fdivr
lahf
jae
rclb
data16
cmp
mov
mov
jmp
pop
cmpb
ja
or
cmp
imul
push
sahf
lods
sarb
adc
daa
fxtract
jb
daa
xchg
push
sub
cld
mov
aaa
add
pop
rcrb
out
ret
xchg
popa
add
mov
nop
xchg
push
jl
imul
mov
xchg
fadds
mov
xor
scas
push
pop
xchg
jb
out
add
and
sub
cmpsl
cltd
sub
test
dec
xor
add
aas
xorb
push
dec
cmc
adc
scas
incl
mov
pop
inc
or
lahf
mov
sbb
cmp
adc
rcrl
mov
push
inc
fdivrp
pop
push
lcall
addb
dec
fisttps
mov
testb
out
inc
ja
add
xchg
ds
xchg
sbb
cmp
frstor
int3
pop
sar
inc
leave
xor
adc
jae
push
sbb
adc
sub
mov
xlat
pop
and
sbb
pop
xor
gs
pusha
cmpsl
jecxz
xor
xor
dec
or
sbb
lahf
and
popa
xchg
mov
ljmp
in
inc
lret
push
mov
cmp
jne
or
pop
mov
shrl
dec
insb
ljmp
jnp
dec
xorb
nop
aaa
push
mov
jp
loope
fs
inc
inc
pop
dec
sub
sbb
pop
ret
sarb
mov
sub
sub
lret
in
das
stos
xchg
dec
xchg
xchg
in
mov
xchg
ljmp
xchg
jecxz
jns
test
popf
and
jbe
sbb
pop
and
insl
das
in
push
mov
adc
dec
es
stos
out
jbe
imul
cmovnp
or
jne
dec
jo
shlb
pop
iret
repz
inc
fnstcw
jbe
mov
jns
call
sub
push
ret
daa
int
sub
jo
dec
sub
cmp
mov
sub
or
cmp
pop
and
out
loop
jne
push
stos
mov
dec
pop
or
ja
jb
xchg
push
jmp
mov
leave
cmp
in
and
loop
and
mov
mov
in
pop
cmp
push
or
lahf
insb
mov
and
arpl
icebp
xchg
aam
int3
into
push
test
cli
push
stos
inc
idivb
loope
insl
jno
mov
mov
shll
mov
adc
xchg
movsb
cs
gs
jmp
lcall
pmullw
dec
shrb
sub
jg
cmpsb
lahf
aas
leave
ja
pop
xchg
mov
test
add
fcmovne
jecxz
inc
pop
cmp
lea
and
adc
mov
rcr
jp
jae
faddp
sbb
fdivrl
popa
push
adc
push
enter
inc
fbstp
push
mov
scas
jb
mov
out
or
arpl
ret
int
filds
sub
mov
sti
je
xchg
pusha
and
mov
int
mov
loope
mov
lock
xor
call
shrb
retw
nop
jmp
mov
adc
test
lea
popa
cmpsb
pop
mov
mov
mov
adc
aad
mov
xor
int3
inc
in
stos
lcall
inc
test
inc
fwait
mov
or
arpl
data16
jo
enter
popa
test
mov
dec
add
in
iret
in
jmp
flds
mov
sbb
popa
push
fistps
out
fwait
loop
cmp
xlat
out
xchg
clc
in
mov
cltd
dec
jmp
sbb
jg
fmuls
jecxz
orl
mov
aaa
sub
fsubl
cltd
mov
shr
and
mov
cwtl
das
pop
jns
or
rcrb
sub
push
add
xchg
sub
in
mov
or
ret
sbb
hlt
movsb
mov
mov
fcomps
dec
daa
or
push
out
sub
test
mov
push
je
aas
mov
pop
in
inc
inc
add
sub
in
insl
hlt
movsb
repnz
mov
pop
in
mov
mov
mov
push
adc
push
idiv
jg
sub
scas
sub
inc
jae
add
jno
and
int
bound
mov
dec
mov
test
push
daa
mov
cmc
repnz
nop
jmp
repz
mov
bound
fstpt
mov
push
or
pop
and
in
cli
cmp
dec
in
push
or
addr16
mov
icebp
cmpsl
rcrl
jmp
dec
mov
cmpsb
pop
mov
ret
pop
popf
mov
jb
ret
addr16
fs
data16
dec
jno
pop
ljmp
in
gs
pop
inc
xchg
add
addr16
pop
imul
push
xchg
insl
sbbb
lcall
xor
leave
and
push
cmp
rclb
sub
dec
lret
jg
push
xor
push
hlt
dec
xchg
in
fwait
clc
aad
mov
test
gs
bound
ds
cmpsb
jg
add
ljmp
call
test
or
arpl
jge
mov
mov
scas
jl
mov
sub
loop
imul
add
pop
lods
sub
js
mov
push
test
in
jno
xor
loope
loope
shl
les
popa
adc
icebp
mov
ss
fldl
lods
mov
sbb
add
addr16
notl
or
aas
pop
push
pushf
mov
movsb
push
cmpsl
adc
sub
insl
cmp
outsb
movsl
loopne
pusha
fsubrl
sbbb
adc
andb
int3
xor
cmc
xchg
dec
mov
xchg
mov
gs
iret
or
cltd
hlt
inc
lock
pop
inc
outsb
dec
inc
aam
xchg
cmpsl
ficomps
mov
or
sbb
hlt
pop
and
imul
mov
mov
out
pop
mov
push
sbb
xor
pop
xchg
inc
or
data16
and
mov
rorl
xchg
mov
or
adc
sbb
cli
out
push
repnz
lock
lock
cmp
jo
negl
movsl
sahf
or
push
xchg
pop
lret
clc
insl
adc
fwait
jns
arpl
xchg
subb
out
push
stos
lret
movsl
xor
jne
push
les
pushf
lock
aas
jp
cwtl
pop
or
adc
or
mov
push
adc
adc
jbe
push
jge
mov
xchg
arpl
fldenv
lcall
je
out
lret
in
cmp
jb
sub
lret
fs
jmp
jno
sub
mov
js
fisttpl
and
mov
mov
xlat
cltd
xor
inc
xchg
mov
lods
jge
mov
scas
les
or
repnz
inc
sbb
push
add
add
push
out
and
lret
mov
scas
mov
call
push
mov
popf
cmp
imul
sti
jb
mov
cmp
xor
xor
mulb
jo
xlat
in
and
push
ljmp
cmpsl
pop
fcoms
test
lcall
movl
jl
mov
leave
cmpsb
aam
scas
xchg
aaa
jb
mov
sbb
dec
push
test
adc
jl
cmp
and
inc
adc
dec
xchg
jecxz
mov
sbb
ljmp
push
dec
subb
or
cmp
mov
fisubl
mov
leave
insb
cmp
ljmp
adc
inc
pop
test
mov
loope
sub
inc
mov
mov
fnstenv
rorb
or
sarl
add
test
scas
lods
addr16
or
pop
mov
lods
and
inc
and
push
pop
mov
fwait
aas
popf
jb
adc
cmp
pushf
cmp
xchg
pop
es
add
das
pop
dec
xor
mov
and
adc
adc
stc
mull
add
enter
rcrb
cmp
out
jno
popf
sub
push
int3
fsts
xchg
clc
cmpsb
adc
int
pop
mov
test
lock
push
mov
fwait
or
clc
pop
xor
push
lods
sub
aam
mov
call
cmovb
ficomps
stos
lods
arpl
mov
push
or
mov
push
push
loopne
outsb
sub
mov
in
mov
lods
add
inc
cmp
addr16
enter
jmp
mov
fldt
ror
jmp
ret
jp
mov
lret
sbb
mov
adc
lea
insb
cwtl
cmp
cmp
repz
sub
adc
ret
mov
sub
jecxz
leave
insb
popa
xor
mov
pop
pusha
lds
inc
scas
push
add
les
repz
icebp
mov
dec
xor
pop
insl
repz
adc
mov
add
or
fisubs
pop
sub
mov
inc
call
cmp
pop
call
mov
gs
push
and
sub
push
nop
rorl
repnz
test
sarb
push
es
into
mov
mov
jp
icebp
icebp
pop
in
lea
outsb
sbb
jb
adcw
loopne
insl
lcall
and
cs
xchg
mov
jg
xor
mov
iret
imul
mov
cmp
fimull
shll
jb
mov
or
mov
adcl
sub
scas
leave
dec
daa
iret
inc
sbb
fs
cmc
xchg
sbb
loopne
fdivrl
xor
and
dec
pushf
int3
pushf
lret
int3
bound
int
rcll
out
cmp
test
pop
or
cmp
or
les
fnstsw
xor
sarb
in
mov
fistpll
movsl
xchg
push
mov
sub
pop
fstl
push
or
aaa
pop
mov
cltd
lahf
inc
pushf
jnp
aaa
pop
mov
mov
bound
ss
adc
mov
out
sub
sarb
fwait
cmp
push
xchg
cmp
sub
mov
jle
xor
pop
mov
arpl
and
mov
sbb
pop
mov
lcall
lahf
rcll
fldl
xchg
push
cwtl
repz
pushf
loope
rclb
data16
cli
pop
sar
mov
mov
stos
xorl
jl
ret
jno
mov
test
mov
inc
push
dec
adc
sbb
outsb
or
in
sbb
mov
jge
xchg
mov
int3
sub
mov
cld
lahf
mov
fstl
mov
mov
dec
cmp
popf
shlb
scas
and
pop
outsl
mov
xchg
pop
mov
or
dec
mov
inc
adc
test
nop
pop
push
aas
les
nop
outsl
pop
jbe
dec
negb
icebp
mov
sub
mov
pop
jg
xor
push
push
jp
jns
insb
adc
in
pop
mov
xor
aas
das
lret
insb
mov
or
dec
movlps
cld
aaa
in
add
adc
fwait
test
int3
int3
sbb
hlt
mov
dec
adc
xor
xlat
adc
iret
movsb
aaa
into
lods
mov
bound
out
fwait
fists
and
sbb
in
ss
lret
push
inc
rcll
shll
lods
and
arpl
mov
pusha
mov
fmuls
sbb
js
push
popa
mov
mov
sub
inc
mov
xchg
mov
xlat
mov
icebp
roll
leave
dec
push
mov
or
addl
sub
sbb
mov
into
shrb
daa
test
push
push
addb
dec
lods
pop
pop
add
fstpt
ja
jg
mov
adc
and
repz
lcall
adc
ss
ds
pop
outsb
sub
aad
vmulps
in
adc
mov
mov
xor
sbb
xchg
les
stc
dec
ljmp
stos
jle
dec
pop
clc
arpl
dec
add
jecxz
mov
xchg
or
and
les
mov
outsl
mov
sbb
dec
cld
or
pushl
sbb
push
aad
ljmp
in
jae
push
push
das
rolb
push
ret
mov
pop
inc
pop
sbb
cld
sbb
negb
cmc
shrl
push
sbb
and
into
mov
mov
aam
push
clc
dec
aam
mov
stos
mov
xor
mov
clc
jne
push
mov
lret
mov
pop
fcom
pop
dec
dec
and
popa
je
call
aaa
pop
and
out
adc
cmpsl
imulb
sub
push
das
mov
pop
inc
rcl
in
xchg
ret
push
mov
xor
js
imul
xchg
imul
std
inc
adc
sub
repnz
and
addr16
push
and
jle
fadds
push
sbb
push
and
lret
pushf
nop
cmp
push
push
mull
js
jp
mov
mov
pop
cs
and
dec
cmp
add
das
lods
lock
mov
lea
je
push
inc
add
pop
ss
mov
push
add
negl
push
sbb
mov
dec
fcomi
rcr
mov
mov
in
popa
jns
mov
shll
outsl
jmp
call
cltd
xor
cmp
or
or
shrl
out
push
cli
sbb
loop
das
mov
mov
sub
repnz
call
push
jo
stos
xlat
add
xchg
pop
mov
cltd
mov
jge
das
aaa
add
cmpsb
jl
cmp
push
dec
call
nop
jno
bound
fistpll
jo
cmpsl
cmp
mov
cmpsl
loope
push
scas
cwtl
pop
jbe
inc
add
xchg
pop
jmp
cmc
addr16
je
test
shlb
add
mov
sbb
movsb
mov
push
int
xchg
jl
mov
stos
mov
dec
push
stos
test
fmuls
add
es
sub
mov
ss
rorl
dec
shlb
aam
bound
mov
pop
mov
inc
roll
imul
je
into
fisubl
daa
push
enter
dec
add
addr16
sbb
mov
add
outsl
pop
dec
push
dec
dec
pop
pop
cwtl
fidivl
adc
mov
dec
pop
add
nop
xchg
jge
in
push
sub
les
push
out
neg
sarl
aaa
arpl
out
jle
dec
cmpsb
xor
push
fwait
je
pmullw
cmc
lods
sub
insb
mov
dec
jp
mov
clc
or
adc
or
ss
push
add
lods
sub
dec
fildl
jp
nop
cltd
dec
in
sbb
movl
xchg
xchg
add
out
lcall
std
inc
jb
mov
js
aam
mov
call
sub
dec
ja
mov
mov
aaa
pop
fiaddl
call
jbe
push
in
sub
and
stos
add
lds
jp
pop
pop
cwtl
testb
loop
imul
cs
sbb
fistpl
ljmp
push
scas
popf
adc
lods
ret
in
xor
add
lcall
ljmp
leave
cltd
pushf
rcll
nop
leave
cmp
insb
push
mov
jno
jae
int
nop
daa
jle
jno
xor
push
ficoml
pcmpeqw
sbb
popa
cmp
cs
pop
orl
xor
bswap
xchg
addb
fisttpll
push
mov
mov
cwtl
jo
cmp
xor
sub
ss
sub
subl
jp
dec
jno
fcomp
cwtl
xchg
addl
int3
lods
aas
push
in
loope
ret
xor
loop
loope
dec
push
push
mov
mov
cmp
push
xchg
andl
adcl
pop
aaa
sbb
loopne
stos
dec
shrl
jg
in
mov
js
imulb
sub
cltd
aam
pop
lret
xchg
mov
sarb
cmc
orb
inc
sub
sbb
cmpsb
sub
lret
dec
aad
sub
mov
and
mov
or
dec
xchg
xor
jbe
add
fadd
in
movsb
cltd
aas
sub
lds
stos
xchg
es
cwtl
xchg
loope
adc
adc
pop
iret
mov
roll
jne
subl
jecxz
add
mov
enter
gs
pop
push
jb
rep
loope
push
int
gs
sub
cmpsb
sub
pop
xorl
jnp
dec
xor
mov
jne
push
out
loope
sbb
dec
xchg
test
rcrb
je
data16
xchg
jbe
lcall
push
icebp
in
repnz
in
mov
mov
les
pushf
mov
xchg
sarl
mov
cld
ljmp
ds
lds
jns
adc
xchg
pop
xchg
stos
inc
sub
mov
xchg
icebp
jno
lret
mov
stc
add
loopne
cmp
lea
call
rclb
lcall
es
xchg
fmuls
jo
rcrl
mov
repz
cmpsb
pop
shll
ds
popf
int3
mov
mov
inc
push
outsb
xor
out
adc
and
pop
sub
push
push
rorl
xchg
jg
cs
mov
imul
pushf
popf
scas
cs
mov
push
xor
ret
cmp
repz
mov
dec
sub
pop
push
jp
or
mov
mov
mov
xchg
push
push
rcrb
outsb
push
sbb
push
or
mov
repz
rcll
call
mov
xor
xchg
fsubp
mov
or
push
das
xchg
icebp
xchg
in
cli
sub
or
loope
push
mov
jne
or
sahf
pusha
test
mov
add
push
gs
or
cs
sub
lahf
push
push
add
addl
lds
xchg
pop
inc
jge
mov
int3
fisubrl
adc
fistpll
mov
sbb
inc
fstl
ret
scas
into
mov
inc
jl
sub
js
push
adc
xorl
cwtl
jecxz
mov
fidivs
push
lcall
daa
lret
call
jg
sub
dec
stos
mov
roll
cmc
mov
pop
addr16
sub
js
jo
es
sub
sbb
sahf
pop
xchg
xor
mov
or
std
add
jle
inc
push
mov
scas
add
cli
loope
xlat
mov
fldl
std
xchg
sbb
shl
xchg
out
jge
and
xor
lea
shlb
cmp
sbb
mov
xchg
cmp
in
mov
jb
inc
testb
ds
mov
mov
inc
call
aas
cmpsl
repz
shrb
pop
out
dec
lea
mov
cld
repz
gs
mov
ret
push
into
jmp
xor
rep
cmp
jbe
out
imul
add
xor
ljmp
fs
pop
cmp
lock
arpl
test
je
dec
nop
fildl
cld
add
xlat
xchg
jmp
jle
jle
fistl
insl
les
insb
add
arpl
and
dec
mov
inc
out
loope
aas
scas
push
popf
int
and
dec
sub
inc
mov
out
jb
sbb
out
loop
fistpll
lock
int3
in
pushf
enter
push
xor
out
push
xor
rcrb
sbb
mov
shrb
mov
pxor
fbstp
mov
enter
add
sbb
and
mov
jle
gs
dec
adc
fildl
fisubl
sbb
xchg
jo
xor
mov
xchg
sub
clc
mov
out
cmp
xchg
pop
xchg
mov
or
jb
push
dec
sbbb
dec
add
pushw
movsl
jl
add
out
dec
inc
jo
jge
xchg
xor
sub
xchg
in
add
fcomps
out
leave
fwait
shrl
cwtl
jnp
pop
imul
jns
jg
xlat
fwait
xchg
aam
xor
mov
adc
andb
and
sbb
fildll
dec
clc
cmpsl
jp
push
jge
jmp
fldt
sbb
fwait
pop
or
lcall
jno
and
leave
imul
in
mov
into
lret
sti
es
repz
mov
cmpsl
pop
mov
popa
ret
pop
sub
push
xor
pop
leave
shlb
mov
push
jg
shlb
push
dec
xor
in
shll
out
in
sub
jo
pop
es
push
test
cmp
xchg
sbb
nop
frstor
repz
mov
jg
cmp
cli
fcmovb
xor
loop
and
adc
or
cltd
inc
xor
rorb
mov
dec
shr
adc
int
pop
sbb
cs
and
scas
or
fstpl
push
fmuls
or
shll
ss
xor
nop
testb
jp
sub
mov
xor
std
inc
shll
ret
mov
mov
stos
mov
arpl
mov
add
fmull
nop
stc
dec
adc
iretw
cli
ja
lds
lret
dec
movsb
cmp
scas
xor
jp
sbb
mov
push
xchg
insl
xchg
cmp
mov
sub
pop
out
into
dec
adc
add
cmp
sti
push
add
shl
out
jl
ffree
bound
test
imul
push
cmpsb
inc
out
mov
push
xorl
std
cli
arpl
sub
cmp
ret
cld
cli
test
std
outsb
xlat
lahf
pop
xlat
jecxz
push
es
ja
cmpsb
mov
subb
cwtl
sbb
mov
push
mov
or
stc
hlt
mov
lods
xor
or
adc
jns
into
pop
out
push
xor
jae
inc
orb
hlt
mov
repnz
mov
testl
stos
or
dec
imul
scas
jb
mov
mov
xor
hlt
lock
fcomps
fdivrl
aaa
into
jae
fidivl
test
mov
or
and
sbb
inc
popa
lock
fldenv
or
cmc
cmpsl
xor
mov
lods
sub
fcomp
push
pushf
mov
add
sub
sbb
ret
pop
mov
out
sbb
sar
mov
xor
ja
push
pop
cmp
outsb
lds
cs
aad
xlat
xchg
push
xchg
jb
cmp
repz
add
movsb
or
ljmp
xchg
stos
sub
push
mov
mov
push
js
xchg
sbb
ds
sbb
xchg
xchg
pop
clc
lret
inc
rcll
mov
sbb
push
test
cmpsb
pop
jecxz
test
xchg
outsl
sbb
mov
sti
add
shrb
aam
negl
pop
js
test
out
add
xor
jp
loop
pop
add
aam
lock
cmpsb
push
pop
or
mov
ret
ja
xchg
and
outsl
xchg
xor
jge
out
jmp
sub
cmp
dec
xchg
test
int
or
pushf
insl
jns
push
cmpsb
cmp
cmp
in
sarl
mov
insb
xor
icebp
jp
sub
fists
cli
mov
mov
or
push
daa
adc
and
sbb
aaa
cmpb
loope
mov
xchg
loop
sti
push
ljmp
pop
mov
arpl
xchg
aam
loopne
inc
outsl
mov
add
icebp
mov
imul
pop
dec
jno
pushf
icebp
mov
pop
jae
xchg
sti
iret
lret
mov
sub
and
cmp
xchg
mov
in
adcb
rolb
mov
daa
pop
mov
insb
cs
add
or
mov
into
mov
lods
mov
iret
lret
push
pop
jb
mov
push
mov
enter
add
xchg
jg
xchg
out
mov
xchg
inc
rcrb
xchg
mov
inc
aam
sub
das
add
push
jne
movsl
sub
sbb
idivb
jbe
xchg
ffreep
add
inc
add
icebp
out
mov
xchg
aam
sub
fiadds
jg
sbb
loop
mov
int
mov
rorl
push
mov
xchg
inc
in
scas
pusha
stos
inc
and
int
mov
xchg
cmpsl
shl
push
sbb
ret
pushw
lret
cmpsb
add
jnp
pushf
imull
ja
daa
stc
sbb
ds
icebp
push
clc
stc
dec
shrl
test
outsb
push
xlat
mulb
pop
xchg
xchg
add
in
jle
jbe
inc
dec
in
mov
cmp
sbb
sub
mov
jns
mov
in
add
cmp
test
aad
cmp
push
mov
xchg
xchg
stc
xchg
loop
xchg
mov
leave
sbb
lcall
jnp
dec
ret
call
or
imul
xchg
out
je
pop
mov
jns
stc
loopne
mov
inc
mov
pop
inc
test
sub
dec
mov
aaa
in
sbb
mov
jle
add
push
iret
or
pushf
push
inc
pop
add
or
xor
cmc
jns
xchg
pop
aas
sub
lret
push
cmp
xchg
addr16
cwtl
dec
cmc
adc
stos
mov
ror
jae
arpl
or
popa
insb
or
pop
push
xchg
enter
jne
push
push
xchg
pop
bound
push
lahf
rcrl
leave
addl
iret
xor
fsubs
push
dec
xor
mov
lahf
cmp
jo
hlt
pop
adc
test
dec
mov
sub
push
jle
add
in
lret
xchg
sbb
call
dec
cmp
into
ja
xor
inc
rcrl
sahf
sahf
lret
mov
das
addb
sub
inc
inc
leave
mov
mov
dec
aad
mov
adc
dec
jge
dec
or
dec
xor
int3
sub
jno
sbb
lret
int
cmp
out
jne
xchg
fildll
mov
push
cmp
bound
cmp
ljmp
xchg
ss
into
cmpsl
fisubs
cmc
andb
test
push
test
xor
scas
xchg
je
cltd
out
mov
sub
arpl
fbstp
aam
fdivrp
mov
aaa
sarl
push
push
mov
into
outsb
fwait
jns
insb
pop
ds
sbb
test
jo
mov
repnz
push
pop
mov
lds
insl
push
aam
adc
mov
add
dec
mov
in
push
aas
push
jae
lods
mov
and
dec
dec
mov
cmp
mov
popf
pop
das
pop
push
ljmp
shld
fcmovnb
shl
push
mov
iret
cwtl
jns
movsb
addb
lods
ljmp
sbbb
aas
xchg
cmpl
mov
imul
jns
dec
add
xor
push
pop
push
test
pop
sub
ret
pop
in
es
cld
imul
ror
and
test
movsl
scas
daa
ss
loopne
sar
aas
pop
jns
stos
clc
mov
loope
lahf
leave
cmpsl
rclb
lahf
push
stos
and
cmpsb
cmp
mov
adc
frstor
add
rcrl
inc
fdivrl
lds
arpl
dec
sbb
out
pusha
push
int
adc
pusha
sbb
or
xor
mov
in
xor
shlb
mov
mov
xchg
jb
mov
out
test
hlt
inc
adc
xchg
cmp
iret
xorl
imul
pop
jl
mov
fwait
loop
outsl
iret
out
dec
adc
xor
or
dec
loopne
roll
mov
repnz
add
jb
std
xchg
mov
shll
cmc
mov
push
push
daa
or
xchg
movsb
adc
cmp
push
jns
xchg
js
mov
call
push
sbb
push
sbb
mov
pop
aad
ljmp
sbb
adc
cmp
mov
jecxz
xor
lods
lods
pop
dec
popf
xchg
movsb
xor
popf
pop
lods
xchg
mov
cmp
pop
mov
in
push
dec
push
lods
mov
pop
xor
sahf
pop
aaa
mov
cmc
adc
pop
in
cmpsl
xor
subb
dec
rcr
push
mov
shlb
xor
mov
repnz
into
nop
mov
mov
xchg
in
cltd
inc
sbb
testl
je
sbb
fs
js
pop
icebp
or
sarl
cs
cmpsl
jo
ds
mov
dec
test
popf
push
sbb
jmp
push
lods
out
xchg
adc
lret
xchg
sarl
jge
xchg
aad
sbb
mov
add
nop
jb
pop
out
cmpb
test
adc
pop
shlb
arpl
jg
les
sahf
out
cld
pushf
icebp
adc
inc
mov
imul
inc
dec
cmp
jg
shr
loope
add
fcomps
jne
mov
cwtl
std
in
imull
cmp
xor
leave
imul
mov
cld
mov
test
mov
pop
loope
sub
loope
mov
stos
cmpsb
mov
inc
cmp
push
movsl
mov
inc
push
sbb
lea
and
push
and
push
bnd
sub
stc
fsubrl
sbb
jbe
fwait
mov
cld
pop
mov
ss
lret
lret
stos
xor
xchg
push
pushf
pop
sub
dec
jle
loop
xchg
and
mov
shlb
insl
xchg
inc
mov
nop
fmuls
popf
inc
dec
and
xchg
test
add
add
inc
in
and
or
in
mov
mov
mov
or
cmp
mov
notb
jb
pop
mov
fisubrs
arpl
jb
pop
ljmp
fnstenv
bound
insl
xchg
sbb
push
sub
in
push
enter
ss
movsl
fs
pop
in
jp
shlb
xchg
pop
stos
insl
inc
js
aas
mov
jmp
sub
add
push
jno
pusha
daa
add
sub
andl
stos
out
xorl
push
or
js
lods
out
jle
imul
cmp
popa
outsl
adc
cs
testb
rcrb
sbb
push
sbb
cmp
cltd
cli
lock
cmpsl
rol
in
daa
mov
and
aam
stos
dec
xchg
je
lods
cmp
outsb
push
adc
in
imul
mov
push
add
fwait
mov
test
sub
jmp
sub
stos
lock
shrl
or
es
out
pop
mov
inc
add
pop
cltd
pop
cmp
mov
and
shll
jecxz
test
int3
stc
sub
and
push
fdivs
push
pushf
loop
ljmp
add
stos
and
pop
xchg
jecxz
adc
ret
testb
aad
mov
adc
lret
je
test
jl
mov
cltd
cmc
stc
rol
test
push
pop
push
cmpsb
or
inc
lock
hlt
rcrb
rorb
popf
add
sbb
leave
movsb
jno
or
notl
movsb
sub
and
aad
mov
aad
cmp
inc
clc
push
jp
mov
lahf
push
cli
loop
xor
inc
sarb
add
add
push
dec
adc
push
fcomps
pop
push
add
out
xor
mov
ja
call
add
cmpsb
data16
int
sub
mov
les
adc
andb
je,pt
add
rolb
pop
jmp
xor
cltd
popa
push
fcomp
iret
mov
push
in
popa
std
push
cmp
adc
testb
xorl
add
pop
out
dec
sub
out
notl
xorl
sbb
jae
call
mov
in
sbb
cwtl
push
ss
xlat
icebp
rorb
xchg
push
push
pop
sbbl
mov
inc
lcall
mov
inc
fs
loope
xchg
add
jp
sub
pusha
cld
xor
mov
sub
sbbb
cld
push
rcll
in
popa
jp
pushl
andl
leave
and
repnz
xchg
in
popf
enter
mov
outsb
aaa
out
push
outsl
jne
addr16
out
jp
xchg
push
pop
xor
mov
hlt
xabort
jbe
jecxz
xor
stos
mov
bound
fdivl
pop
mov
push
inc
fdivrs
movsl
xchg
push
xchg
dec
in
in
mov
dec
fs
pop
or
jnp
and
icebp
sbb
jecxz
sbb
fisubs
loope
dec
js
xchg
pop
add
inc
es
or
test
int
outsl
push
les
pop
or
dec
adc
arpl
jl
movsb
cmp
add
icebp
ljmp
xor
sbb
add
mov
jnp
dec
sbb
xchg
sarb
pop
lds
jle
pusha
mov
mov
das
arpl
mov
in
jae
inc
push
jne
mov
mov
sbb
xor
aad
dec
aad
cmp
sahf
sbb
xchg
and
ret
dec
mov
movsbl
sbbb
aam
cli
xor
or
sbb
jl,pt
add
jg
je
sub
dec
cmpsb
xor
pop
mov
mov
xlat
mov
and
popa
into
out
pop
or
mov
aaa
lcall
adc
jns
sub
lock
jg
mov
repz
add
pop
mov
jg
jae
mov
jl
das
lahf
inc
inc
xchg
aam
int
sbb
or
mov
cli
push
adc
les
outsb
or
hlt
cmpsb
jecxz
mov
fistpl
jnp
fists
pop
leave
js
imul
addb
jle
movaps
addl
xor
adc
pop
cmp
mov
pusha
push
sbb
inc
mov
aaa
xchg
iret
ds
sub
lock
mov
inc
adc
lds
lcall
popf
jno
xchg
pop
ljmp
mov
xor
add
rcrb
xchg
pushf
mov
in
test
push
cmp
push
cld
dec
sbb
pop
inc
push
sbb
rclb
xor
xchg
pop
jb
lds
sub
add
pop
cmp
push
mov
loopne
jb
mov
pop
or
add
nop
pop
push
cmpl
add
das
cmpsl
in
mov
leave
hlt
and
fsubl
out
fstl
fwait
clc
xchg
xchg
lods
mov
inc
sub
sahf
sub
pop
sti
push
cmp
adc
pop
inc
in
mov
or
pop
fmull
mov
mov
aad
push
shr
push
lods
pushl
mov
lea
imul
cltd
push
mov
rsqrtps
mov
cltd
lea
push
lods
dec
and
jg
stc
xor
scas
xor
addr16
mov
jns
xor
fistpl
mov
dec
int3
cmp
mov
popf
scas
arpl
mov
sti
dec
cmp
lea
xchg
sbb
sti
mov
mov
mov
mov
xchg
fmull
movsl
stos
dec
push
cmpsb
nop
and
mov
cmpsb
adc
jo
cs
mov
push
icebp
pop
jno
gs
insl
jno
outsb
and
int3
dec
add
aas
jge
andb
dec
jno
insb
xchg
loopne
fwait
outsl
bound
jl
xor
imul
add
and
jg
push
daa
dec
cld
pop
cwtl
js
in
ljmp
ss
cld
xchg
mov
mov
push
nop
dec
ja
aam
xor
mov
jns
ja
sbb
jmp
je
lods
lahf
mov
lret
in
sbbl
subb
movsl
sbb
out
mov
nop
out
sub
in
insl
aas
pop
mov
cmp
xchg
int
sbb
nop
cld
and
outsb
add
ret
cmp
cmp
out
nop
xchg
add
jg
dec
mov
in
mov
push
insl
stc
adc
bound
jns
int3
mov
or
add
jae
mov
gs
cmc
mov
jb
imul
hlt
mov
mov
fs
adc
mov
xchg
test
xchg
daa
pop
mov
mov
sti
mov
mov
addb
inc
pop
idivl
repz
inc
rcl
pop
and
adc
ror
pop
cli
jo
rcrl
inc
xor
pop
xchg
orl
and
into
mov
mov
jae
fisttps
mov
popa
bnd
sub
or
iret
cmp
sbb
xchg
sub
inc
pop
stos
call
addl
inc
xor
add
dec
cvtps2pd
push
sqrtps
cmp
cs
roll
dec
arpl
sub
cltd
test
jmp
inc
loopne
sub
rorb
out
xor
ja
ror
inc
sahf
inc
inc
jecxz
rcrb
jno
pop
xor
mov
ret
dec
sub
popf
mov
or
push
pusha
iret
mov
ljmp
js
repnz
push
jl
mov
push
or
lret
pushf
cli
out
adc
add
xchg
mov
loope
mov
data16
sub
int3
mov
lea
sub
in
aam
mov
shrb
mov
dec
lret
xchg
cmp
iret
dec
mov
repz
pop
xchg
push
cmp
jbe
stos
pushf
cmp
lods
iret
mov
jb
inc
ror
popl
in
mov
jne
shl
mov
adc
and
mov
out
faddl
frstor
mov
inc
jmp
stos
mov
aam
lretw
xchg
nop
out
ss
jno
gs
into
jg
sahf
dec
lock
inc
pop
jbe
or
adc
xchg
loop
add
pushf
imul
fisubs
rcl
out
mov
mov
push
cmpl
out
mov
popa
or
ud0
and
lock
rclb
push
out
lret
ficompl
ja
repnz
lock
mov
rcr
sbb
sub
hlt
ret
adc
cli
cwtl
fildll
mov
xchg
in
xor
inc
into
pop
xlat
dec
or
mov
je
mov
test
ss
jno
lret
mov
loope
es
sar
sti
mov
pusha
sar
push
sbb
in
xchg
cmp
jne
add
and
inc
jbe
adc
loop
jb
mov
ret
insb
daa
stos
sbb
mov
ljmp
cli
xchg
sti
xor
push
pop
cmc
cs
jp
dec
xchg
call
mov
sub
push
xchg
out
rorl
in
xchg
inc
rolb
loopne
push
jae
incb
mov
arpl
fisttps
dec
cld
pusha
sub
rcll
aaa
mov
movsl
nop
add
lahf
call
jmp
jmp
rolb
jl
in
xor
sub
mov
insl
adc
sbbl
mov
or
mov
mov
leave
adc
dec
scas
std
and
aaa
push
xchg
insb
es
pop
popf
xor
loope
pop
cmp
imul
pop
push
dec
or
mov
inc
fcoml
inc
xor
xchg
xchg
jns
cmpsl
sbb
jle
popa
adc
cmpsl
cmp
mov
jno
push
or
bound
jbe
loop
rcll
fildll
xor
lods
rcr
in
cli
and
ret
sub
lret
pushf
jb
jecxz
imul
sub
xor
add
stc
push
sub
pop
sbb
lods
jge
xchg
xlat
pop
int3
das
pop
sbb
jbe
cmp
push
add
mov
mov
xchg
push
xor
sub
addr16
shll
arpl
movsl
imul
arpl
add
mov
jne
clc
push
repz
mov
aam
lds
fstps
or
test
popa
pusha
outsl
fwait
out
adc
stos
mov
push
aam
leave
shl
sarb
jmp
roll
aas
or
jbe
pushf
push
dec
jae
jns
mov
cmpsl
movsb
test
add
xchg
mov
xor
mov
mov
cmpsb
sub
xchg
push
mov
xchg
lds
jb
flds
negl
fdivs
push
jge
sbb
dec
out
mov
aaa
push
lcall
add
push
jnp
bound
scas
push
nop
cld
xor
stos
xchg
ret
fldt
cmp
enter
add
shlb
sbb
add
push
cwtl
push
aad
loope
adcb
call
fnstsw
ds
cmpsl
and
jno
in
ret
sbb
xor
cltd
shll
mov
jecxz
add
lcall
pushf
div
mov
pop
sbb
lcall
aaa
addr16
mov
mov
sbb
jg
and
test
imul
xor
lret
mov
xor
cmp
inc
not
hlt
xchg
and
ja
jae
lods
ja
cmp
pop
and
lahf
xor
push
sbb
addr16
sub
mov
stos
mov
into
sbb
imul
adc
mov
mov
aas
fsubrl
adc
shll
xor
sar
ds
dec
lods
rcrl
add
sbb
pop
sub
mov
add
lret
mov
ret
sbb
push
sub
loope
mov
mov
dec
push
in
mov
cmpsl
pop
imul
or
fldlg2
aam
sbb
outsl
out
test
add
mov
add
xchg
shl
xchg
sbb
dec
sti
sub
mov
push
testl
stos
pop
xchg
mov
cltd
inc
adc
loop
lods
imul
jno
dec
loope
test
ffreep
mov
inc
aad
sar
outsl
pop
jae
ja
xor
ret
lock
hlt
data16
push
adc
in
imulb
ret
push
movsb
mov
xchg
adc
push
scas
gs
push
adc
bound
ret
pusha
movsb
or
loop
fimuls
xor
daa
rorb
adc
aad
aas
jge
xchg
xor
and
fs
jno
jmp
fisttpll
vcvtdq2pd
sub
xlat
and
fdivrl
sbb
cwtl
or
xchg
inc
or
and
fxch
or
ljmp
or
out
sbb
sub
std
int3
out
jb
fidivl
in
inc
insb
into
xchg
cmp
ret
test
jnp
mov
icebp
in
lcall
imul
subl
and
xchg
insb
aad
js
lods
xchg
mov
cmp
jecxz
inc
rclb
sub
call
cmpl
adc
or
loop
xchg
aaa
inc
jbe
push
test
add
push
test
rol
cmp
lahf
dec
jge
es
lret
cmp
lret
push
add
scas
sub
mov
pop
xchg
xorb
addr16
cmp
or
jecxz
orl
leave
or
jns
xchg
es
shrb
scas
arpl
sahf
in
in
ja
clc
hlt
mov
lods
rcrb
out
mov
movups
sub
push
jae
ret
cld
faddl
adc
dec
dec
in
int
leave
jae
mov
mov
inc
popa
jo
xchg
hlt
xchg
aas
xchg
mov
dec
and
sbb
push
inc
sarl
and
lret
mov
and
mov
xor
scas
inc
loope
or
inc
out
ljmp
xor
sub
iret
aas
nop
or
lahf
sub
xchg
add
cmp
fdivrp
divb
out
rorb
sub
push
lret
mov
xlat
sub
nop
test
inc
mov
push
cmp
cmp
xorw
ljmp
ss
pop
arpl
daa
jge
push
adc
repnz
lahf
fcomps
cs
fldenv
bswap
out
and
add
mov
mul
mov
adc
shl
and
test
push
xor
push
add
inc
xchg
dec
lcall
cmpsb
or
push
jmp
jne
js
inc
mov
cwtl
xor
sub
ret
fidivl
add
push
adc
ljmp
or
push
xchg
leave
loop
sbbl
pop
into
xchg
push
sarb
lahf
rcrb
mov
js
pop
dec
rclb
jge
lret
jg
movsl
pop
test
cmpsb
enter
popf
ret
jle
inc
pop
mov
or
push
jnp
mov
or
repnz
jp
and
sbb
xor
sub
ret
dec
sub
adc
fdivr
push
add
mov
push
stc
adc
xor
push
sub
mov
push
dec
sbb
test
scas
nop
sarl
rclb
ret
and
enter
lods
mov
loopne
dec
jg
lret
mov
loope
push
push
arpl
jno
jo
jo
xor
sub
scas
adc
es
adc
iret
mov
test
mov
je
leave
cmp
insb
mov
mov
pop
scas
adc
int
xor
or
addb
jmp
sub
pop
je
mov
dec
sub
pop
cld
enter
mov
lret
cmpsb
xchg
in
dec
mov
imul
in
fldenv
int
push
rcr
insl
cmc
or
cmovp
xchg
pop
movsb
mov
mov
sbb
mov
jge
movsl
adc
sarb
sub
rcrl
or
pop
jle
push
fcoms
jae
mov
add
cwtl
test
int
inc
dec
call
jge
out
gs
cmp
addr16
pop
or
adc
shlb
stos
sbb
xchg
xor
je
roll
imul
and
mov
mov
sub
data16
inc
pop
ja
dec
cwtl
jle
into
mov
ljmp
ret
mov
inc
xchg
cmp
aam
fsubrs
pop
xor
sub
clc
adc
adc
incb
subb
fdivrs
pop
sbb
mov
out
faddl
jno
jl
movsl
fsts
and
mov
maskmovq
mull
xchg
imul
rol
filds
outsb
adc
xor
cmc
xchg
aam
jecxz
mov
or
cli
add
mov
and
or
push
ret
push
xlat
sub
sbb
cwtl
mov
mov
sbb
mov
sub
xchg
std
inc
fisttps
testb
hlt
popf
or
or
dec
pop
lods
into
ret
cmp
mov
mov
mov
nop
in
xor
cld
or
shlb
mov
lret
movb
inc
adc
and
mov
movsl
jmp
aas
sbb
mov
repnz
aam
push
adc
and
jecxz
sub
fisubrl
arpl
sub
loopne
or
lret
cli
cmp
cmp
ja
push
xchg
sti
mov
mov
lock
push
mov
cmpsb
std
jo
arpl
scas
aam
ret
iret
dec
jmp
gs
mov
cmpsb
fisubrl
cmc
or
lods
ja
pop
fidivs
xlat
inc
mov
dec
mov
repnz
add
sub
push
in
into
loope
or
pop
xor
xchg
not
je
iret
test
in
cmp
in
mov
mov
push
sbb
out
lea
aam
in
inc
jge
insb
stos
shrl
pop
lods
push
lret
mov
cmp
jbe
push
push
mov
scas
jmp
popf
fsubp
stos
lret
adc
mov
pop
das
in
dec
or
into
test
aad
in
inc
lock
je
pextrw
stc
notb
js
not
jno
testl
dec
xchg
dec
xor
sbb
outsl
xor
aas
icebp
cwtl
cmpb
shll
div
stos
fildl
std
orb
mov
push
xor
outsb
jge
ret
int
data16
stc
xor
pushf
cmpsl
xor
movsb
inc
shlb
xchg
jae
lahf
mov
rcrb
mov
mov
adc
cmc
push
add
fsts
imul
scas
sarb
mov
arpl
inc
fisttps
mov
push
stos
testl
sahf
outsl
aam
sub
scas
dec
ss
push
dec
outsb
pop
or
cli
call
mov
push
imul
sbb
mov
aad
adc
sbb
stos
cmpsl
loop
test
loop
push
sub
mov
arpl
scas
popa
scas
test
icebp
pop
lds
fadd
pop
mov
test
add
xchg
add
adc
pop
mov
inc
cmp
fs
jge
xchg
mov
or
xchg
jg
dec
xor
scas
sbb
std
pop
aaa
push
outsl
in
sbb
jb
push
adc
push
mov
sub
jno
rol
nop
jbe
and
fcoml
mov
xor
lods
rol
imul
xor
iret
std
or
pop
mov
leave
add
fistl
leave
adc
ret
pusha
pusha
cmp
push
lret
xchg
add
lret
iret
out
fldenv
mov
xor
jb
clc
pop
xor
dec
mov
pop
rclb
or
inc
jg
pop
ss
ljmp
ljmp
stc
push
mov
pop
xor
jge
cmp
stos
xor
call
sti
imul
sub
adc
pop
xchg
fst
out
repnz
ljmp
ret
lcall
scas
cli
fstpl
push
xor
sahf
iret
icebp
cltd
mov
loop,pt
movsb
rclb
add
dec
mov
fisubs
sbb
sbb
add
mov
in
xlat
xchg
pushf
mov
mov
push
inc
cmpsb
aam
inc
aad
popf
pop
push
cmp
push
stc
push
jb
mov
mov
imul
test
out
pop
test
xchg
adc
jne
pop
fsubrs
inc
movb
dec
cmpsb
jne
in
lea
inc
out
sbb
pop
xchg
add
les
psubq
sbb
clc
ja
movsb
fwait
cmp
imul
or
into
jne
and
pop
lds
call
push
lock
jbe
mov
push
mov
inc
sbb
cmpsl
fwait
imul
push
mov
push
outsl
inc
ficoml
cltd
push
xchg
cmp
inc
dec
fists
iret
jge
test
inc
adc
jmp
repz
add
add
mov
sbb
push
pushf
cmpsb
push
in
gs
popa
fadds
call
insl
push
daa
cltd
mov
sti
dec
mov
dec
test
mov
ljmp
mov
scas
mov
sbb
xchg
lahf
shrb
jecxz
xchg
pop
inc
stc
or
subb
mov
sbb
pushf
pop
xchg
push
dec
insl
in
cmp
outsl
jg
inc
cmp
sub
mov
arpl
push
push
mov
adc
lds
in
into
les
jae
mov
cwtl
pop
push
mov
mov
je
fildl
inc
inc
cmp
xchg
xor
daa
push
insl
jmp
sarl
pop
jns
call
movsl
outsb
jns
into
and
int
addl
and
push
jne
addr16
loope
in
in
or
xchg
int3
mov
lret
out
pusha
mov
jne
je
std
loop
push
call
sti
cmp
ljmp
int
repnz
xchg
test
xchg
outsb
mov
sar
imul
sbb
inc
in
pop
cltd
test
psubd
pop
shl
mov
dec
lret
in
daa
or
pop
add
push
pop
in
ds
push
push
add
lahf
mov
decb
push
repz
fsub
dec
pop
add
pop
xchg
inc
dec
xor
adc
mov
pop
sub
xchg
sub
pop
push
nop
inc
jg
adc
push
jecxz
cmp
xchg
xchg
out
push
movsl
sbb
xchg
dec
test
inc
xchg
sub
sub
pusha
orl
sbb
xchg
into
jge
orl
inc
xorl
js
inc
fwait
cld
das
sub
imul
movsl
jne
leave
leave
dec
repnz
lods
shll
out
mov
pusha
mov
mov
jl
cs
insl
mov
xor
dec
mov
loope
mov
cmp
push
lods
dec
sub
loope
aaa
fwait
subb
sbb
sbb
inc
push
stos
mov
enter
inc
push
push
bound
adc
outsb
movsl
pop
sbb
xchg
pop
xchg
sbb
stc
sbb
jle
mov
movsb
imull
ds
jge
mov
add
addr16
cwtl
fs
adc
stos
ret
push
ret
xchg
mov
and
push
lea
cmc
jle
or
dec
mov
and
adc
into
dec
int3
ficomps
dec
out
xchg
dec
fwait
scas
daa
push
pop
mov
or
and
cmp
movsl
in
push
inc
or
aaa
fs
mov
mov
mov
or
imul
shr
sbb
pop
negl
lahf
popf
xchg
loope
push
and
mov
cs
test
loope
xor
jo
mov
scas
sti
xor
ss
mulb
pop
dec
xor
adcl
mov
icebp
jmp
pop
rdpmc
mov
sbb
int
leave
movsb
mov
jp
xchg
sti
fisubl
std
stos
inc
pop
es
mov
loope
out
ret
shr
sub
xchg
xchg
das
xor
hlt
push
fnstcw
cmp
jl,pn
popa
mov
mov
ret
adc
cld
cmp
cmp
cmp
lret
adc
adc
push
or
jno
add
or
sahf
push
loope
addl
stos
cs
mov
pop
pop
lds
xlat
or
aam
adc
ss
in
mov
scas
cmpsb
lret
xor
lods
dec
jno
bnd
and
mov
jbe
bound
fists
push
js
pop
rcrl
aas
lret
xor
cs
fiadds
sbb
insb
sti
std
loopne
adc
test
repz
scas
lock
hlt
in
test
pop
ficomps
ds
adc
pushf
and
cmp
add
jg
aam
lahf
mov
push
sbbl
divl
xchg
mov
add
jbe
push
xchg
cmp
jo
mov
lahf
cld
bound
mov
mov
loope
xor
jno
jl
hlt
hlt
push
add
xor
xor
mov
pusha
mov
orl
cmp
jmp
addr16
fcmovb
mov
stos
popa
add
add
add
notl
and
sbb
andb
sbb
mov
mov
arpl
mov
and
mov
mov
jo
pushf
es
xchg
inc
pop
les
das
loopne
aad
or
mov
mov
jo
mov
sub
call
adc
jae
out
pushf
imul
popf
jmp
mov
call
aad
stc
sbb
sbb
mov
adc
dec
pop
pusha
add
popa
push
add
je
mov
dec
je
popf
lods
adc
mov
adc
ficoms
cmp
scas
add
mov
insl
add
in
lock
outsb
mov
arpl
cmp
jns
push
mov
jno
pop
adc
push
loope
mov
or
push
push
add
or
insb
fnstsw
add
ljmp
fdivl
xchg
out
cmc
aas
call
xchg
sti
aad
call
loop
adc
sub
shl
loop
mov
aam
pop
jns
xlat
aad
mov
dec
jp
xor
mov
and
adc
cltd
idiv
push
mov
mov
mov
cmpl
xor
mov
dec
bound
push
jnp
lods
sub
jo
out
cmp
mov
aad
jl
xchg
decl
mov
sti
subl
add
mov
mov
add
sub
sbb
hlt
pop
out
out
fadds
ds
pop
fdivrl
inc
mov
add
enter
in
jg
gs
mov
pop
jle
mov
jbe
jg
push
sbb
jge
ret
cwtl
mov
jecxz
loope
js
dec
data16
fistpll
push
int3
mov
pop
and
iret
jp
cld
or
adc
scas
sbb
push
dec
out
xlat
or
push
shl
in
xchg
dec
or
xchg
pop
stc
sbb
cld
mov
pop
jl
add
add
mov
pop
mov
mov
jb
ror
adc
jp
movsl
imul
sub
cmp
lock
mov
fidivl
mov
add
pusha
push
mov
jmp
jle
push
jmp
mov
sbb
out
std
pop
out
mov
iret
pop
lds
fmull
dec
adc
into
adc
cmp
xchg
mov
out
ret
push
mov
xchg
xchg
arpl
or
or
mov
mov
dec
das
leave
cmp
lcall
jb
fistps
jns
mov
out
mov
pop
mov
dec
test
mov
sub
xchg
insl
enter
sbb
sbb
imul
icebp
inc
into
loopne
in
cltd
lds
hlt
lret
mov
sbb
jl
cwtl
and
jne
hlt
or
inc
sbb
mov
scas
aam
xchg
jne
nop
iret
addr16
fwait
mov
lods
dec
cmc
sub
repnz
and
jne
sahf
push
add
rclb
enter
fwait
mov
jecxz
and
rorl
mov
mov
clc
lret
movsb
loop
add
dec
addb
jg
jg
hlt
icebp
inc
lea
inc
mov
fldenv
push
cmp
mov
sub
andb
dec
ljmp
repnz
mov
pop
adc
imul
std
lds
jge
je
jmp
mov
repnz
aam
xlat
sarl
cmp
xor
and
sub
sahf
subl
dec
mov
ds
cmp
pop
or
icebp
xor
out
imul
mov
ljmp
sti
mov
fucomi
mov
ja
mov
jns
jne
fwait
jnp
das
into
pop
popf
fs
decb
hlt
jp
fldl
dec
pop
push
in
sbb
fwait
jno
in
outsb
sbb
fsubrs
ret
pop
scas
and
mov
mov
lock
jge
sti
cltd
dec
dec
add
jecxz
cmp
cwtl
imul
mov
in
outsl
add
or
push
daa
mov
subl
or
cmc
jecxz
mov
aaa
add
push
out
sbb
inc
inc
jb
out
imulb
insb
xor
xchg
sbb
jmp
mov
cmp
sub
pop
mov
inc
fisttpll
xor
out
sbb
and
push
imul
mov
jns
stos
pop
push
cmpsb
xchg
repnz
insb
sahf
gs
popa
insb
adc
outsl
sbb
cwtl
or
pushf
je
xlat
and
mov
out
cltd
xor
mov
fcoms
sub
pop
or
jmp
mov
mov
xor
notl
adc
or
xchg
test
or
scas
js
xor
je
movsl
xor
outsl
push
cmp
lea
mov
mov
push
fdivrp
mov
icebp
pushf
fcoms
outsb
aam
mov
add
stos
das
enter
insb
rcl
inc
divl
xor
int
int
fisttpll
mov
repnz
cli
addr16
add
movd
leave
adc
lret
imul
xchg
fst
jo
ficomps
jnp
lods
ret
in
je
sar
icebp
sti
call
pop
or
into
aas
mov
imul
sbb
pop
jmp
xlat
sbb
je
mov
mov
insb
rol
adc
fisubrs
lods
lods
cmp
jae
xor
dec
add
out
fs
cmp
and
xor
dec
fcomi
jo
les
cli
adc
sbb
iret
or
inc
mov
icebp
push
sti
notl
clc
test
xor
and
shl
dec
clc
cmp
adc
xor
leave
hlt
pusha
mov
lcall
stc
or
dec
mov
pop
inc
aam
mov
loope
enter
jp
jl
mov
ss
notl
jecxz
or
addr16
data16
mov
inc
fisttps
sub
push
jns
in
mov
cmpsl
dec
pop
jbe
enter
mov
pop
sbb
inc
divl
or
nop
mov
xorl
clc
cmp
inc
push
fimuls
sub
fildll
aaa
out
rolb
adc
fdivs
in
stos
sub
push
mov
notl
fwait
inc
sbb
pop
mov
fcoml
sbb
push
xor
je
stos
sti
or
adc
xchg
mov
sbb
sub
imul
stos
pop
lret
mov
fsubl
jmp
jo
and
cmp
add
pop
hlt
pop
movsb
lods
xchg
push
call
movsb
das
dec
outsl
jp
jp
sub
add
dec
ret
lds
push
or
adc
enter
dec
or
xchg
imull
in
sbb
pop
cmp
std
je
add
lods
xchg
jne
xor
ss
clc
rcll
testb
pmulhuw
cmp
or
in
xchg
stos
pop
mov
insl
xchg
shld
sahf
inc
fnstcw
push
cmpl
nop
lea
or
cs
fldenv
sub
xchg
je
mov
jl
out
movsl
je
add
out
sub
sub
inc
out
xchg
std
clc
adc
fmull
inc
lods
xor
or
and
jge
push
test
inc
lods
xchg
movsl
adc
vmovapd
cmp
jge
or
dec
hlt
les
cmpsl
add
inc
mov
jle
adc
loopne
push
imul
leave
test
cmc
les
lods
lods
stos
dec
call
jl
or
cmp
fisubs
lret
inc
outsl
cs
jge
data16
mov
stc
ds
shlb
push
ja
cmp
xlat
push
movl
and
and
dec
mov
push
and
pop
loope
fdivrs
arpl
jnp
lods
testl
sbb
xor
je
out
movsl
and
fsubs
js
push
sub
ror
jmp
out
and
enter
push
mov
ret
orb
cli
push
adc
aam
sbb
pop
mov
adc
lock
iret
pop
dec
lds
sbb
test
inc
adc
mull
pop
jns
ljmp
lds
insl
mov
sbb
fimuls
shl
les
sbb
mov
pop
imul
jns
mov
adc
call
in
ss
sbb
jg
fadds
sbb
adc
mov
add
ret
fimuls
stos
loop
and
lock
jmp
repz
inc
lahf
mov
in
mov
lret
ds
js
cmp
push
cmp
add
add
hlt
in
ja
jo
and
lds
shr
dec
push
movsb
mov
inc
pop
rcrb
pop
xor
pop
test
ss
cld
ret
stos
xlat
and
adc
pop
test
cli
and
shlb
fistl
adc
cmp
je
test
sub
lcall
outsb
and
cmp
mov
xchg
lret
and
in
rolb
inc
nop
lods
mov
testl
inc
popa
or
pop
mov
aam
xor
mov
addl
push
inc
sti
add
jo
and
mov
lahf
ss
xchg
cli
nop
insb
sub
mov
insb
xchg
ds
adc
add
stos
xchg
pop
cld
push
mov
pmulhuw
xor
mov
mov
and
xchg
shll
xchg
xchg
mov
pop
mov
inc
xchg
and
rorl
and
mov
out
adc
cli
push
or
mov
pop
aad
mov
push
scas
pusha
addr16
jmp
dec
and
sahf
call
sub
adc
shrb
xchg
cwtl
pop
xor
outsb
push
pop
xor
stos
ficompl
pop
sub
sub
clc
mov
add
lock
inc
iret
cld
push
inc
pop
and
cwtl
lock
daa
sbb
sub
pushf
mov
sarl
pusha
lcall
pop
mov
jle
sub
dec
les
push
push
std
test
popa
mov
enter
js
and
fldt
xor
pop
and
mov
loopne
outsl
xor
in
push
mov
fisubrs
pop
fsubrs
imul
enter
pop
fwait
adc
sbb
mov
pop
imul
std
sarb
clc
xabort
mov
inc
jno
pusha
add
ror
and
cld
xor
aad
mov
testl
test
or
movsl
pop
cmp
stc
adc
fdivrs
mov
es
lret
int
inc
mov
sbb
mov
cld
rorl
enter
and
xor
arpl
mov
mov
arpl
lahf
clc
dec
data16
pop
jb
insb
pop
xchg
les
xchg
test
lcall
movl
xor
ja
test
lock
mov
add
lds
and
mov
pop
jge
sbb
and
jbe
out
or
ds
dec
fcomip
add
and
inc
pop
jmp
addr16
mov
les
in
out
dec
mov
xchg
nop
adc
mov
lock
clc
jge
test
loop
movsb
gs
xchg
sub
sbb
or
add
mov
fsubl
fnstsw
xor
jg
sbb
test
push
outsb
out
add
mov
adc
mov
adc
aas
in
adc
mov
dec
in
sbb
cmp
insl
in
mov
jns
lcall
in
and
js
xchg
aaa
and
add
add
int3
push
ret
stos
or
cmp
sbb
lods
jne
adc
adc
jae
subl
bound
push
das
notb
cmp
rcr
or
xchg
in
mov
mov
not
outsl
ss
andb
sbb
adcl
push
lahf
dec
inc
gs
outsl
lret
xchg
loop
dec
aad
sub
inc
sbb
in
lods
aas
lea
push
fmuls
inc
jno
cld
xor
imul
enter
and
out
xchg
pop
movsb
jb
scas
ss
sub
subl
mov
fnstcw
jl
test
cwtl
mov
pop
ljmp
sbb
sub
xor
pusha
in
outsl
cmp
adc
fs
inc
imul
cmp
and
je
mov
adc
xchg
pop
ljmp
and
fcomp
data16
pop
fnop
mov
arpl
lock
jle
or
mov
out
push
and
insb
stos
cltd
sub
and
xchg
loop
jbe
cmp
cltd
jns
pop
push
leave
out
jbe
pop
mov
xor
scas
inc
pusha
push
sbb
cmpsb
scas
adc
mov
repz
rolb
rcll
icebp
pop
sub
pop
movsb
faddl
mov
bound
sbb
std
mov
adc
das
fsubrl
adcb
sbb
sbb
lods
sbb
push
lods
movsb
xor
nop
or
call
and
repz
sub
ds
imulb
cmpsb
xchg
and
mov
mov
mov
pop
inc
cmpsb
xor
pop
cmpsl
std
je
inc
cmpsw
or
insb
popa
out
cmpsb
xchg
or
sbb
cmp
add
adc
cwtl
fisttpll
xlat
lea
add
inc
in
enter
push
pop
jl
nop
std
cmp
sbb
push
ja
push
dec
mov
push
out
push
int
insl
sub
loop
mov
inc
cltd
call
add
pop
inc
cmp
into
pop
or
outsl
cli
mov
in
ds
mov
out
std
inc
add
nop
mov
shrb
xor
cmp
or
xchg
aam
adc
int3
lahf
sub
inc
xor
jno
add
sbb
in
add
push
stos
jle
fldl
mov
adc
pop
mov
repnz
rcrb
arpl
lods
les
aad
shr
std
mov
mov
or
ljmp
lea
rorl
pop
sub
test
ds
inc
insl
fnsave
lahf
not
leave
es
in
jp
cs
jae
ret
or
ficompl
imul
add
jbe
pusha
incb
nop
mov
dec
mov
cs
add
outsl
out
mov
push
out
mov
xchg
cmp
pop
xchg
lods
pop
push
into
adc
push
clc
xchg
jbe
mov
scas
std
jmp
mov
subb
xor
leave
xor
mov
pop
and
cmp
jmp
sbb
and
imul
dec
jp
imul
stos
stc
addr16
dec
xchg
mov
pop
ret
or
and
mov
dec
test
jae
push
cmp
cld
je
popf
roll
lock
xor
mov
outsl
aad
fisttps
loopne
sub
push
mov
xor
mov
es
jbe
imul
push
or
test
das
pop
movsb
sub
aas
icebp
inc
mov
sub
push
xor
push
xor
leave
cltd
andb
cli
mov
popf
pop
in
push
clc
imul
push
scas
jnp
push
lock
pop
lcall
rcll
sbbl
inc
sarb
push
iret
addr16
lea
ret
jnp
jbe
jmp
dec
mov
sub
add
lret
dec
imul
lds
outsl
stc
cmp
fidivs
pusha
adc
adc
icebp
mov
adc
sub
in
xlat
push
insl
aad
gs
data16
jb
add
lods
push
and
inc
lods
insb
rcr
pop
cmp
icebp
jp
clc
bound
out
push
fstl
out
lcall
xchg
jl
mov
push
push
mov
push
dec
dec
or
insb
or
sbb
add
and
cli
inc
jg
rolb
stc
inc
push
mov
clc
xor
aas
pushf
or
imul
out
adc
aaa
hlt
xor
scas
fwait
loope
jno
ljmp
xchg
ficoml
cwtl
hlt
sub
pop
fcmovne
sub
mov
das
push
je
test
cmc
xchg
shll
and
lret
stc
outsl
test
pop
xor
cmp
fistl
je
frstor
aas
cmp
test
aaa
mull
iret
cwtl
add
out
add
or
push
clc
or
mov
xchg
les
mov
ret
test
dec
push
pop
fs
pop
mov
push
lods
popf
inc
jp
subb
aad
pop
arpl
jg
inc
mov
lret
mov
cmp
jecxz
push
sbb
notb
dec
mov
aaa
pop
sbb
int3
mov
out
pop
inc
pushf
jo
cs
mov
or
lds
sub
mov
hlt
popa
and
push
lds
inc
cmc
mov
and
adc
inc
fs
insl
icebp
jno
dec
mov
jmp
loope
sub
rorb
loop
jnp
mov
pop
fnsave
notb
ret
dec
dec
andb
aaa
mov
mov
dec
push
xchg
adc
sbb
mov
pop
mov
cmp
push
pop
or
xor
add
enter
insb
mov
push
inc
mov
hlt
cmpsb
aas
hlt
or
push
mov
pop
mov
mov
inc
jle
shr
in
loopne
cmp
rcrb
adc
push
jle
insl
and
dec
jge
bound
or
jnp
loopne
xor
sbb
pop
lock
inc
js
test
jo
ret
sbb
leave
jecxz
shll
test
inc
clc
fisttps
aaa
sub
cwtl
lods
pop
xchg
jecxz
arpl
pop
sbb
mov
add
int
pop
push
cmp
dec
adc
cmpsb
cmp
std
adc
mov
cmp
scas
rorl
daa
daa
dec
addb
call
out
mov
mov
cmp
hlt
mov
mov
inc
cld
push
aaa
les
addr16
pop
jne
mov
sahf
xor
jno
in
add
hlt
adc
mov
add
scas
lods
lods
and
lret
lret
pop
fstl
test
add
dec
rcrb
mov
mov
xchg
xor
enter
clc
scas
inc
or
push
pop
jo
outsl
hlt
mov
jp
mov
test
inc
shll
push
inc
pop
sbb
sbb
or
inc
jns
or
scas
fcomi
push
pop
std
inc
loope
aaa
int
add
cmpsl
loop
out
repz
ud0
lods
shll
call
pop
enter
mov
push
jmp
pop
xchg
push
loopne
mov
jle
fs
xor
xor
pop
es
rcrl
or
or
mov
aad
cwtl
push
mov
fcom
pop
in
jmp
popf
in
shl
pop
fdivrl
repnz
cmp
mov
xchg
or
push
jne
push
mov
mov
mov
jb
out
push
subb
xchg
inc
jb
stos
mov
push
or
in
sbb
cmp
subb
adc
shll
or
pop
inc
inc
xor
ljmp
lea
das
rcrl
xchg
cmp
push
call
xor
cli
fidivl
addr16
and
out
lods
movsl
jmp
xor
sbb
lret
in
loopne
cmp
inc
pushf
or
adc
pushf
jmp
sub
gs
arpl
lods
push
push
addr16
stos
decb
jae
xchg
cltd
pop
jbe
stc
sub
jl
ret
mov
ja
mov
ss
sbb
cmp
xor
xor
dec
hlt
ret
cmp
xor
into
or
ja
push
dec
rol
pop
sahf
jmp
pop
lcall
mov
loope
shrb
mov
arpl
jge
or
cmp
mov
shrb
xchg
inc
and
pop
push
leave
and
icebp
mov
daa
and
lea
xor
fwait
adc
fld
sub
jmp
sub
outsl
mov
mov
pop
dec
mov
mov
sub
xlat
fimull
pop
add
lret
out
cmp
adcb
push
add
jo
or
inc
mov
rorl
sbb
jo
sbb
pop
sub
stc
loop
popa
add
movb
and
mov
cs
std
and
das
mov
and
inc
fdivrs
push
add
inc
mov
lret
xchg
jle
jnp
ja
not
sahf
dec
pop
lahf
jae
andb
jmp
jg
lock
cmp
pusha
div
lods
lock
cmp
sub
xor
xor
divl
data16
dec
scas
test
sbb
fisttpll
inc
test
cmpsl
and
repz
mov
nop
or
adc
and
lcall
pop
add
sub
test
mov
adcl
sub
idivb
jae
stos
clc
imul
jbe
or
or
subl
mov
notb
scas
and
lods
into
fstl
cmc
out
stc
rol
das
mov
xchg
xor
fwait
clc
mov
mov
aas
push
mov
xchg
orb
out
push
aaa
lret
lahf
mov
inc
in
jno
daa
je
jp
pop
add
cmovnp
pop
ja
call
lea
mov
inc
inc
cmpsb
lods
sbbl
out
pop
xchg
mov
or
sahf
lret
pop
addr16
movsb
mov
xor
dec
loope
sti
cmp
jbe
fwait
loope
sub
aad
or
pop
xchg
fwait
xlat
arpl
pushf
test
xor
and
push
xchg
js
clc
dec
outsl
dec
jo
xor
jg
std
movb
popa
cmp
dec
ds
loopne
cltd
jnp
jnp
sti
jo
outsb
aaa
out
rclb
mov
push
lods
sahf
imul
mov
std
es
cli
push
dec
bound
inc
inc
and
loopne
pop
cmp
or
xlat
push
cs
jmp
mov
push
mov
xor
pop
inc
in
mov
mov
mov
int3
push
cmc
ljmp
mov
mov
test
fsubrl
insb
push
push
dec
add
push
mov
add
xchg
in
jnp
pop
inc
cli
je
and
ljmp
add
dec
ds
cwtl
mov
les
mov
cld
xor
add
cld
adc
sub
cli
xchg
fcoml
cmc
call
scas
out
push
sti
mov
mov
inc
idivl
fidivl
in
lahf
cmp
pop
nop
cmp
in
add
jo
scas
fimuls
dec
or
dec
pop
rolb
sub
or
push
pop
lahf
jp
lock
or
mov
lea
push
pushf
data16
xor
add
mov
cmp
sub
inc
test
cmc
cmpsl
rol
mov
fdivl
inc
cmc
lods
mov
call
fldln2
xchg
lret
jecxz
js
xor
xor
shll
push
push
iret
jb
dec
decl
sub
xorb
outsb
dec
fidivl
loop
and
push
pop
xor
stos
xchg
inc
in
es
repnz
loope
std
inc
loop
test
std
sub
pop
push
mov
add
test
mov
fmul
push
jg
jne
jnp
xor
mov
dec
cmp
xchg
dec
fimull
icebp
jae
xchg
xchg
cmp
incl
into
orb
test
mov
cmp
mov
scas
adc
shrb
ds
test
pop
ret
insl
insl
or
sub
dec
cmc
into
fwait
mov
or
and
mov
inc
pop
pop
xchg
add
inc
mov
inc
lods
fnstenv
test
push
xor
mov
test
mov
bound
pop
mov
jb
xor
push
cmpsb
jno
outsl
pop
xchg
scas
xor
cmpsb
in
scas
inc
mov
xchg
ret
roll
in
mov
mov
xlat
adc
fcomip
xchg
sahf
popf
clc
ja
js
jp
adc
sub
and
lahf
jg
add
pushf
jp
jl
mov
mov
mov
fisttpll
imul
sbb
jle
jecxz
cltd
xchg
sbb
mov
out
mov
inc
pminub
mov
scas
movsl
shll
aas
je
xchg
sbb
sub
sbb
and
push
and
add
cld
lret
sub
imul
xchg
mov
xor
push
arpl
mov
int3
loope
adc
mov
push
mov
cld
jns
xchg
incb
push
pop
inc
inc
out
lret
xchg
and
sti
add
or
cld
xchg
mov
popf
cmp
mov
and
fnsave
xor
mov
add
dec
movsb
addl
lods
loop
sub
add
stos
sbb
add
movsb
bnd
lods
xor
test
jle
repnz
or
sahf
mov
aam
js
inc
jo
add
mov
lret
mov
out
fs
push
insl
lods
or
stc
mov
aam
jns
push
push
ret
mov
and
lret
ficomps
mov
mov
fmuls
int3
movsb
and
mov
scas
dec
or
loope
or
and
mov
movl
sahf
jb
daa
cmp
cmp
inc
aaa
fwait
jp
lret
cmp
in
jecxz
test
adc
out
dec
mov
aad
mov
repnz
shrl
push
push
outsb
inc
and
out
push
subb
ja
in
xor
dec
and
mov
jle
add
lods
and
fisttpl
jnp
jb
das
test
mov
push
enter
cld
lds
stos
imul
pushf
fdivrs
pop
cwtl
xor
mov
bound
cmp
scas
adc
sti
xchg
sbb
es
es
popf
push
rcll
ja
in
repnz
in
fsubrl
xor
mov
dec
mov
mov
shlb
sbb
or
dec
sbb
mov
pop
jecxz
add
jo
aaa
out
sub
xchg
lret
mov
cmp
shll
push
mov
sub
add
mov
neg
pop
fidivl
fnstenv
cltd
and
ss
clc
xchg
lock
push
popf
lret
sub
imul
cli
test
pusha
cs
subl
imul
mov
mov
pop
sub
mov
insb
lret
pop
fbld
and
mov
xchg
daa
sbb
daa
mov
mov
adc
inc
jp
dec
or
inc
sbb
jb
jle
ret
push
lret
or
push
fildl
mov
push
mov
or
inc
mov
sub
popf
es
jmp
mov
mov
out
movsb
lea
sbbl
rcrb
add
stos
sahf
and
mov
xchg
nop
adc
jno
dec
jle
ret
std
in
jp
pop
xlat
xlat
mov
sub
pushf
add
jecxz
mov
xor
xchg
nop
mov
test
push
sbb
bound
call
sti
inc
jns
fdivl
push
sub
sub
cwtl
les
or
std
pop
mov
and
shlb
insb
fiaddl
ja
ss
aam
sub
jo
pusha
adc
jnp
repnz
pop
std
lahf
fidivs
cmp
adc
sbbb
in
cld
add
mov
repnz
and
scas
mov
jb
dec
mov
dec
notb
sbb
loopne
leave
inc
inc
fisttpll
mov
addr16
fwait
and
je
cli
push
and
test
fwait
sbb
add
jle
xchg
popf
add
mov
push
fildll
dec
jns
push
and
dec
jns
or
incb
cli
mov
movsl
test
pop
or
test
cmpsl
sub
dec
les
jns
loopne
sbb
sub
loopne
cwtl
dec
mov
test
inc
mov
sbbl
add
xlat
push
or
mov
sbb
sub
xchg
out
cs
in
pop
push
arpl
out
mov
inc
aam
outsl
and
int3
lret
sahf
and
push
hlt
fs
pop
dec
mov
lcall
ret
in
inc
fldz
lock
pop
mov
popf
mov
push
pop
push
fwait
out
mov
push
or
js
jle
mov
push
inc
push
lock
lds
cltd
pop
into
fcomip
xchg
shll
int3
mov
jl
pushf
dec
subb
cmp
push
insl
inc
inc
stc
mov
push
mov
outsl
pop
je
dec
scas
test
lock
xchg
xor
and
jle
sbbb
xchg
cmc
inc
sahf
jl
aas
mov
aam
fnstsw
gs
loope
flds
mov
and
mov
xor
rorb
test
lret
sub
mov
mov
lret
cltd
mov
call
or
enter
insb
fidivs
mov
push
stos
insb
insb
cli
push
add
jbe
and
mov
dec
add
cwtl
xchg
aaa
jns
add
xchg
je
int3
test
lahf
push
adc
fsubrl
cmp
push
pop
xor
fidivrs
sbb
pop
jecxz
sbb
adc
out
xor
cli
inc
pop
pop
rcl
mov
jnp
das
inc
mov
repnz
fnstcw
and
scas
mov
add
in
notb
sbb
in
mov
mov
or
jle
push
push
dec
repnz
cli
mov
shlb
lds
push
cltd
notl
mov
aad
inc
add
repz
inc
mov
push
cwtl
mov
jmp
sbb
lds
daa
insb
dec
test
pop
sub
movsb
ret
mov
bnd
mov
lret
in
mov
dec
sbb
mov
out
test
add
mulb
push
mov
gs
js
jle
outsb
cld
arpl
inc
test
jecxz
mov
inc
scas
jle
dec
scas
sbb
les
insb
add
icebp
clc
paddb
nop
pop
pop
cmc
adc
mov
sub
movsb
add
std
mov
mov
outsl
jb
jb
mov
pop
jns
ret
sbb
and
mov
scas
sbb
cmpsl
scas
sbb
xor
pop
inc
aad
push
pop
xor
shrl
in
adc
ficoms
rcl
repnz
addb
adc
nop
test
out
inc
and
and
adc
sbb
dec
out
jg
shl
sahf
push
out
add
test
add
mov
in
mov
sbb
mov
stos
das
push
inc
test
xchg
hlt
in
cmp
lcall
xor
movsl
jns
lret
mov
addl
testl
addb
dec
cmp
or
dec
adc
pop
mov
dec
pushl
subb
mov
sub
pop
pusha
std
dec
mov
imul
or
add
adc
and
fnstenv
mov
fimull
xor
add
or
jbe
adc
sbb
sbb
push
push
push
popa
cmp
jns
or
in
cwtl
int
iret
icebp
subb
cltd
xchg
dec
in
sub
add
lods
push
shrl
pop
dec
mov
lock
xchg
mov
add
movsb
adc
and
jne
ljmp
adc
mov
cltd
mov
movl
xchg
imul
pusha
and
dec
call
pusha
insl
inc
jno
xor
pop
movsb
rolb
sbb
int
cmp
pop
in
stc
sti
push
pop
xor
jb
adc
sub
stc
mov
adc
jo
sub
jbe
fcoml
xchg
mov
add
cld
daa
cmp
loop
into
sub
inc
int3
arpl
sub
cld
out
leave
int
ret
xor
testl
clc
cwtl
add
inc
out
xchg
stc
pop
inc
push
push
int
aam
push
ret
or
jmp
jl
or
mov
scas
bound
cli
test
jecxz
aam
js
dec
lea
fsubrs
stc
fiaddl
push
out
lret
sbb
fs
andb
or
daa
xlat
jle
xor
repz
imul
sub
enter
les
pop
sbbb
cmc
cwtl
sub
lcall
mov
xor
sbb
lret
dec
mov
ret
adc
add
sti
xchg
push
iret
je
cmpsb
push
push
cmpb
popa
xorb
faddl
cmc
out
pop
aaa
inc
jmp
sbb
cwtl
adc
cltd
xor
xlat
xchg
rol
sbb
mov
mov
mov
jle
mov
jp
cmp
les
pop
cmpsl
mov
xor
and
movsb
adc
cli
ret
vmwrite
sahf
push
jno
xchg
or
gs
testl
in
adc
jne
nop
jge
insl
jno
rsm
dec
cltd
inc
pop
rol
orb
hlt
adc
sbbl
push
xchg
inc
cmpsl
fstpt
or
ja
xchg
jnp
add
mov
mov
pop
ss
inc
xor
jp
and
lcall
adc
dec
pop
ss
dec
pop
cmp
pop
pop
divl
pop
cmp
xchg
leave
cmp
xlat
ret
popa
loop
push
mov
cld
test
push
adc
push
push
in
adc
shlb
cwtl
push
pop
inc
repz
std
mov
insl
xor
popa
or
push
cmp
push
inc
cmp
inc
inc
sbb
mov
sub
mov
fmulp
adc
lret
fdivl
adcl
cmp
sarb
sub
push
push
outsb
fs
jbe
cs
insl
jmp
into
push
xchg
inc
cli
xlat
ret
inc
mov
jae
and
jp
orl
push
rcr
xor
push
push
iret
add
test
jnp
pop
adc
inc
fsts
mov
push
fwait
out
inc
mov
rclb
jne
fiadds
repz
adc
mov
cmp
imul
push
push
test
jecxz
lahf
mov
mov
mov
mov
xchg
adc
lcall
inc
sbb
imul
adcl
movsb
je
scas
ret
lretw
inc
sbb
sbb
mov
xor
or
mov
adc
cmp
in
add
gs
sub
mov
mov
mov
imul
ret
clc
sahf
mov
clc
mov
repnz
dec
popf
dec
push
sub
add
ljmp
mov
gs
or
lret
pusha
inc
mov
mov
jmp
test
cli
cmpsl
call
fs
nop
add
ficoml
dec
enter
adc
popf
xchg
sub
std
pop
dec
subl
subl
and
cmp
shrl
test
popf
fcomps
mov
mov
aaa
mov
mull
leave
popf
or
sbb
jns
jae
and
addr16
ss
inc
imul
adc
pop
dec
js
xor
cmp
leave
rcl
sub
inc
mov
jno
cwtl
dec
jae
lret
mov
push
fdivs
pop
mov
xor
jae
pop
pop
jb
jge
in
and
bnd
and
das
decl
inc
mulb
enter
in
add
xchg
or
movsb
xor
imul
mov
mov
dec
fdivrs
push
ret
xchg
adc
xor
sbb
push
mov
or
or
icebp
cmp
lea
mov
jnp
mov
stc
jo
out
push
push
movsl
fisubs
out
xor
push
fcmovnb
cltd
mov
sbb
sbb
lcall
lret
decl
dec
jmp
out
jne
aam
lods
and
xchg
xchg
dec
in
stos
test
xor
scas
xor
jl
jge
orb
add
inc
decb
clc
mov
adc
lret
dec
bound
push
andps
jne
rolb
sbb
sub
or
test
jno
inc
jo
sbb
adc
lret
or
push
fildl
or
divb
in
dec
mov
jae
xor
lods
push
pop
xor
mov
daa
inc
iret
push
movsl
rcrb
fidivrs
les
hlt
dec
fcmovb
sbb
iret
adcl
push
out
ficompl
imul
sbb
fldcw
loope
out
insb
fwait
mov
pop
enter
es
push
movsl
lods
mov
adc
and
mov
pop
push
scas
mulb
loope
icebp
pop
cmp
cmpsb
add
ror
pop
mov
inc
shl
dec
dec
out
push
lods
sub
xor
or
sbb
pop
xchg
sbb
ss
mov
subb
daa
xor
mov
sub
in
sbb
mov
inc
popa
gs
cld
push
jge
je
es
and
jge
push
xor
rorl
hlt
dec
out
jns
popf
orb
jb
je
push
int
xor
pop
pop
cmpsb
push
int3
xor
insl
movsb
push
lods
movsb
cwtl
inc
xchg
ljmp
push
cmpsb
or
sub
in
icebp
and
andb
icebp
dec
mov
aaa
xor
fdivl
pop
imul
sbb
movsb
xchg
add
push
loopne
mov
ljmp
dec
aam
push
lea
dec
jo
xchg
dec
insb
mulb
jne
cltd
dec
das
sbb
pop
jg
out
push
stos
dec
mov
loopne
fneni(8087
outsb
pop
adc
ss
jne
rcrb
inc
jg
jo
out
aam
push
push
mov
loopne
jae
call
xor
lret
je
cmp
rcll
sahf
inc
sti
mov
jnp
xlat
andl
dec
das
xchg
and
out
sub
outsb
pop
lahf
out
push
pop
or
pop
addr16
xor
pop
mov
xor
push
subl
pop
fdivrl
into
add
imul
lods
icebp
cwtl
enter
push
xlat
xor
mov
push
pop
mov
adc
push
adc
push
lods
xchg
arpl
push
or
test
mov
out
inc
fidivrs
xor
and
aam
pop
repz
jmp
in
je
sub
loopne
das
push
mov
push
sti
shrl
jle
test
ja
inc
cmp
xchg
nop
jge
xchg
sub
adc
sub
stos
jne
or
dec
inc
cmp
dec
sbb
movsb
inc
mov
fsubl
adc
fmul
jecxz
repnz
in
in
aas
jecxz
loope
sub
js
pop
cmp
adc
mov
sub
das
sub
lods
iret
sti
roll
jmp
je
mov
pop
sbb
out
xor
fisubl
dec
mov
dec
or
cwtl
mov
enter
xchg
lret
push
int
mov
mov
fwait
mov
cmp
pushf
sbbb
stos
push
int3
lds
push
test
mov
imul
sbb
sarb
mov
into
add
jno
sub
cmpsl
gs
dec
sub
sbb
pop
test
stc
out
or
inc
lods
xchg
lret
pop
dec
push
push
loopne
cltd
test
mov
out
xchg
jmp
pop
stos
mov
xlat
and
mov
xchg
std
mov
add
fnstsw
inc
inc
outsb
cmpsb
cltd
sub
loop
imul
aas
pop
xorb
sahf
sbb
pop
out
fistpll
lret
mov
xchg
and
mov
push
xchg
fstl
adc
adc
sub
sahf
rcr
ret
lea
cmp
ret
and
int3
cmc
bound
sbb
repz
outsl
mov
adc
add
ret
shlb
subb
jno
fidivrs
jmp
mov
push
rorl
stc
adc
les
sbb
jle
adc
icebp
mov
orl
fildll
mov
popf
xor
and
mov
jne
xchg
hlt
mov
mov
fs
mov
mov
mov
shlb
sbb
lock
js
fnstenv
push
insb
cli
xchg
add
les
aad
xor
mov
mov
iret
and
mov
adc
sbb
xchg
jmp
pop
xor
shll
bound
call
pop
adc
pop
jle
or
mov
movsb
push
fcomps
inc
jle
lods
and
rcll
dec
mov
sub
add
pop
lods
test
or
inc
out
scas
or
pop
and
dec
xchg
mov
sti
fcoms
jbe
and
imul
mov
hlt
test
cmp
pusha
jno
fnsave
bound
jns
lock
js
cmc
mov
mov
pop
jle
cmc
or
mov
ror
gs
inc
out
jecxz
jecxz
and
fwait
jle
scas
xchg
inc
adc
popa
dec
xor
cmp
or
loop
mov
sub
ds
cmp
and
pop
mov
jmp
push
jp
add
ss
lods
shl
inc
push
xor
jmp
and
pop
or
xchg
fsubrl
mov
imul
cmpsb
or
add
nop
call
enter
movzbl
icebp
push
jne
das
popf
xchg
loope
test
imul
lock
js
aad
or
mov
sub
xchg
mov
pop
sbb
add
andl
pop
push
xchg
adc
aaa
dec
xor
pop
jnp
mov
add
mov
mov
jno
jmp
mov
hlt
xlat
pushf
mov
lahf
mov
mov
aad
sbbb
push
adc
mov
std
mov
shlb
xchg
lahf
adc
inc
dec
adcl
add
aam
fnstcw
ds
xor
jbe
sbb
addr16
and
int3
sbb
pop
enter
push
or
xor
inc
jb
dec
sub
stos
addr16
je
adc
lods
fs
jno
inc
mov
jne
dec
cmpsb
mov
mov
push
dec
xchg
and
daa
xchg
push
mov
adc
cwtl
push
mov
jmp
sub
push
imul
seto
fsubr
pusha
fcmovne
jge
leave
lock
stos
mov
out
sahf
hlt
lea
movsb
outsl
fmul
jo
xorb
adc
mov
pop
lret
aaa
in
xorb
xchg
loope
in
lods
pop
mov
mov
push
inc
into
cmc
xchg
xor
mov
xchg
sbb
jne
aaa
repnz
subl
bound
enter
lods
inc
test
push
clc
mov
jb
mov
cmp
loope
mov
mov
and
sub
mov
add
jb
popf
xchg
test
dec
or
je
mov
dec
in
mov
adc
dec
test
insl
arpl
or
stos
pop
out
xor
mov
sbb
add
xor
pop
fxch
dec
std
push
sbb
jae
sub
cli
and
stos
pop
out
pop
shlb
dec
and
iret
pusha
lods
jg
int3
inc
loope
ljmp
mov
fildl
mov
jbe
jmp
in
mov
mov
sahf
mov
loope
ss
sbb
or
xor
dec
pop
push
addr16
iret
lret
insl
dec
mov
and
cmp
lock
and
cmpsb
mov
mov
jg
mov
lret
jo
xor
enter
mov
add
xchg
leave
or
roll
pop
inc
mov
xlat
jno
mov
test
ds
add
pop
jno
leave
dec
pushf
inc
mov
aas
nop
enter
pop
jb
int3
push
adc
in
jle
sub
mov
gs
rcr
mov
inc
cmc
jg
adc
push
loop
cmp
or
jns
xchg
and
mov
inc
iret
pop
xchg
ss
shll
xchg
iret
mov
call
inc
pop
cmp
icebp
sti
sbb
in
sbb
inc
scas
loope
sbb
jae
stos
es
pusha
les
mov
negl
xor
mov
shrl
jl
xor
jle
mov
cmp
lods
pushf
scas
jno
pop
call
icebp
ljmp
rolb
sub
push
sub
lods
out
sub
push
pop
lock
pop
leave
mov
mov
sbb
cli
push
pop
mov
mov
xchg
lods
pop
ret
xor
xchg
lds
sub
movl
imul
imull
sub
and
sub
push
jecxz
lret
lds
xchg
mov
adc
push
xor
lea
mov
pop
and
ret
das
fadd
mov
mov
adc
add
push
dec
call
mov
gs
push
cs
in
data16
arpl
xchg
adc
push
fadd
adc
jge
lods
sti
cld
pop
insb
sarb
push
fdivrl
dec
and
cmpsb
repz
addr16
adc
mov
xor
js
push
jnp,pn
call
cmp
cmp
mov
aas
rcl
shl
or
and
pop
mov
dec
push
out
jo
adc
sub
adc
jg
pop
lret
testb
mov
xchg
mov
jge
fs
jp
test
arpl
mov
cmp
scas
mov
les
std
add
and
imul
push
dec
mov
leave
rolb
out
mov
xor
dec
push
cmpsl
in
cltd
fistpll
das
cmp
gs
pop
jae
or
int3
xor
cmp
push
lea
mov
and
hlt
scas
or
mov
test
gs
insl
subb
fdivrl
arpl
fstpt
cld
cli
repz
ret
xor
sbb
xor
jne
imul
test
je
outsb
repnz
outsb
adc
cmp
pop
ret
leave
into
push
push
xchg
movsb
adc
push
leave
dec
fidivrl
enter
cmp
push
ljmp
mov
call
mov
lods
je
xchg
mov
add
mull
xor
bound
add
sub
push
mov
and
adc
loopne
xchg
cwtl
and
jecxz
adc
imul
add
and
sarl
and
in
jbe
mov
out
loopne
mov
adc
ficomps
mov
ret
cmp
xchg
jg
sbb
and
xchg
shrl
shlb
fdivp
jno
shrl
adc
mov
push
fistps
pop
xor
mov
stos
mov
xchg
in
inc
mov
int
mov
xchg
into
pop
outsl
mov
inc
cmp
je
xlat
xchg
aaa
xchg
inc
cli
movsl
decl
fstpt
push
popa
adc
mov
jno
stos
aaa
lds
sub
jo
adc
lret
xchg
fbld
out
loopne
mov
dec
imul
adc
daa
cmp
push
jl
aad
or
or
xchg
push
mov
ds
fildll
add
push
std
lret
lods
hlt
and
mov
inc
in
int3
xchg
adc
push
mov
lods
out
out
cmp
pop
jg
addr16
sub
fldenv
inc
out
ljmp
xor
enter
outsl
mov
mov
mov
push
jo
jns
mov
out
pusha
cmp
fucomi
push
test
das
call
scas
pop
mov
inc
xor
iret
xlat
push
push
pop
insl
xchg
in
mov
loopne
dec
lcall
or
test
xor
dec
ret
pop
fbstp
pusha
in
stos
lcall
fisubl
fistpll
jp
xchg
or
arpl
cmp
push
ja
enter
ja
dec
dec
xlat
mov
fsubs
inc
dec
push
mov
call
dec
mov
shrl
sahf
pushf
dec
in
push
mov
xor
push
cmp
dec
lods
mov
in
test
enter
mov
dec
in
iret
xor
cmc
cld
and
scas
imul
adc
mov
jae
lods
xchg
lcall
vmread
adc
sub
push
clc
jnp
aas
ficompl
stc
cmp
dec
scas
mov
pop
hlt
inc
push
arpl
xor
push
and
mov
xchg
not
sahf
push
iret
pusha
pop
jge
add
scas
sub
lods
xchg
icebp
xchg
xor
lahf
ret
mov
sbb
jbe
or
mov
adc
cmp
cltd
dec
cmpsl
fucom
loopne
arpl
adc
sbb
xlat
jl
push
sub
inc
insb
and
pop
outsb
push
cmp
inc
sahf
leave
xor
xchg
shlb
or
cld
mov
out
stos
or
test
jb
pop
or
sbb
push
rorb
sub
push
xor
adc
movsb
int
jp
mov
push
insl
jno
jle
shll
xor
out
outsb
add
mov
out
or
cld
scas
xor
jl
enter
outsl
xlat
xor
push
imul
dec
roll
jnp
mov
push
adc
sbb
mov
gs
test
xchg
ljmp
jae
jbe
adc
or
mov
enter
sarl
pop
test
adc
out
stc
mov
xchg
dec
fldl
gs
push
mov
lods
and
ljmp
dec
inc
jmp
add
dec
bound
cmpsl
xchg
fs
xchg
add
loop
mov
cmp
push
mov
fnstenv
ss
sti
jnp
jb
adcb
fiadds
ret
or
xchg
mov
ja
scas
and
push
outsl
pop
sbbb
pop
loope
hlt
mov
aas
lea
adc
jecxz
inc
jnp
dec
mov
mov
ljmp
shlb
jg
iret
adc
arpl
jns
out
or
cli
lods
mov
sbb
int
fcoms
mov
or
lods
mov
adcl
das
dec
push
adc
pop
popf
fstpl
xchg
add
xchg
das
mov
pop
mov
adcl
loope
popa
adc
shrl
fcoms
fbstp
aam
cwtl
fdiv
sub
cld
mov
popw
mov
rcrl
pop
cli
cwtl
xchg
jo
pop
push
mov
pushf
mov
mov
out
aad
pop
sub
dec
into
adc
hlt
stc
call
lahf
dec
icebp
cmp
lods
jp
into
add
or
out
mov
mov
pop
fsubrs
cmp
std
ret
int
decb
fs
sbb
test
scas
cmc
out
clc
mov
xchg
inc
jnp
bound
testl
test
icebp
push
outsb
cltd
dec
lock
imul
mov
inc
fdiv
inc
sub
lock
adc
xchg
mov
add
data16
pop
push
loopne
lock
std
orl
imul
pop
mov
adc
loopne
xchg
mov
outsl
sbb
xor
mov
jp
arpl
out
faddl
jmp
add
pop
in
ljmp
jae
aas
or
pop
mov
adcl
cli
dec
jmp
leave
loop
ficoms
repnz
aaa
push
aad
call
in
xchg
jne
adc
dec
cwtl
jno
fildll
inc
mov
iret
xlat
sub
ret
fsts
lahf
dec
fidivrl
jge
fdivr
mov
jne
jno
mov
mov
dec
and
pop
fmulp
cmp
scas
jns
shrb
ljmp
jge
fiaddl
ljmp
mov
js
lods
push
pop
xchg
in
sub
mov
enter
xchg
mov
pop
pop
ret
rorl
xchg
mov
ja
or
fmuls
mov
iret
mov
int3
push
arpl
fwait
jle
inc
cwtl
sub
out
ljmp
sbb
in
sub
pusha
xchg
imul
xlat
push
adc
xchg
fs
sbb
inc
sahf
pop
ficoml
gs
loopne
or
movsl
inc
dec
mov
ljmp
imul
mov
aas
cs
lret
je
repnz
pop
and
inc
jecxz
jno
jge
sub
ficoms
sub
lock
jnp
loop
lret
xchg
push
stos
or
jle
insl
xor
icebp
xor
and
xor
bound
inc
popl
aad
adc
sub
pop
pop
mov
inc
lcall
mov
pop
cmp
lock
stos
int3
ret
dec
sbb
mov
push
ja
in
into
mov
adcb
jl
mov
jecxz
sub
inc
stc
cmp
xchg
outsl
xor
cmp
lahf
pop
mov
sub
pop
xor
push
sbb
shlb
ss
adc
jns
mov
mov
mov
fisttpl
cli
add
and
jnp
dec
rolb
dec
xchg
and
jecxz
pop
stos
mov
mov
lea
loope
out
or
add
xchg
lods
addr16
xchg
popf
daa
jae
mov
dec
cmp
adc
sahf
sub
xchg
gs
test
pop
jno
rcrb
mov
popa
sbb
cwtl
mov
imul
dec
inc
inc
jl
jg
push
in
jno
xchg
adc
fisubrl
mov
and
or
mov
push
adc
lret
jns
push
pop
scas
jnp
push
divl
inc
mov
mov
orb
das
sti
inc
es
mov
fwait
dec
mulb
inc
and
ja
jnp
push
outsb
out
mov
dec
add
mov
jl
das
lds
cmp
es
stos
push
xor
popa
les
jb
hlt
fidivs
xchg
hlt
fstpl
dec
movsb
mov
jl
jnp
lret
insl
cmpsl
es
push
outsl
and
inc
push
mov
cltd
lods
enter
xor
enter
sub
dec
lods
std
shl
cmp
jle
inc
mov
notb
xor
and
repz
sbb
jb
fnstsw
push
into
ss
test
rol
or
inc
stc
xor
hlt
sti
or
jo
inc
sub
push
pusha
lods
arpl
add
push
in
aas
cmc
stos
push
cmc
test
hlt
test
xchg
cmp
mov
addb
xchg
int
cmp
out
adc
in
ljmp
dec
or
addl
mov
mov
push
jp
out
ss
les
inc
lahf
pop
aaa
lahf
arpl
rep
test
add
lea
sbb
das
insl
lods
les
mov
pop
clc
fdivp
js
xor
jns
loopne
out
shrb
jl
bound
hlt
je
scas
testb
mov
pop
xor
fstpt
stos
mov
dec
xor
cli
pop
scas
and
sub
cli
insl
loopne
push
jbe
lahf
psubsb
add
in
arpl
je
xchg
mov
add
sub
das
push
loopne
push
std
ss
mov
sbb
pop
mov
mov
or
pop
jle
jg
repz
mov
daa
xchg
mov
xor
and
ss
je
add
dec
int3
rorl
lcall
cs
pushl
jg
rol
push
inc
inc
aaa
leave
jp
outsl
cmp
aad
pop
stos
lahf
xor
push
lret
dec
inc
int3
icebp
mov
sahf
negl
or
lahf
jp
shl
testl
in
imul
dec
inc
cmpsl
add
xchg
ljmp
or
lcall
pop
cmpsb
pop
jno,pn
mov
loope
sti
and
inc
sub
xor
sbbl
cmp
lods
pop
jg
leave
std
lcall
jge
incl
les
inc
movsb
rclb
or
bound
rcrl
out
stc
scas
negl
jno
decb
push
sbb
lret
shrl
mov
ja
arpl
push
data16
stos
clc
jecxz
fdivrs
rclb
out
ljmp
pop
loopne
sbb
sbb
fndisi(8087
ljmp
mov
mov
test
jl
push
push
idivb
lds
lock
jns
xchg
mov
mov
or
inc
xchg
and
mov
pop
adc
repz
push
inc
addl
or
addr16
dec
sbb
out
dec
movsl
jecxz
add
iret
mov
mov
sti
iret
repz
sub
pop
dec
iret
lea
addr16
stos
add
cmp
movsb
daa
push
mov
xor
lret
xor
imul
popf
jns
js
push
xchg
mov
stos
rcll
mov
iret
mov
cmp
mov
and
xor
cs
pop
pushf
sub
sub
dec
ds
xchg
xchg
movsb
fidivrs
sbb
lds
repz
and
add
cmc
fstpt
sbb
inc
notb
div
movsb
sbb
sub
stc
pop
pop
jae
addl
les
loop
lds
xchg
lret
inc
pop
mov
and
jle
adcl
cltd
mov
lock
mov
mov
in
push
xchg
sub
push
and
push
adc
or
in
and
xor
adc
out
fmull
test
andb
out
mov
push
and
mov
mov
shlb
adc
mov
mov
rolb
push
dec
or
xchg
dec
je
leave
fnstsw
insl
stos
mov
jp
ja
and
icebp
test
jge
xor
pusha
fucomip
pop
and
mov
pop
and
sub
jmp
dec
xchg
xlat
inc
jge
xlat
jg
xchg
push
lahf
leave
jg
ret
sti
cmp
je
imul
sub
repnz
jnp
xchg
pop
jp
pop
inc
fwait
or
inc
dec
mov
out
lds
lahf
sub
sub
mov
cmp
xor
adc
pop
and
int
cld
insb
into
mov
adc
popf
inc
mov
cltd
dec
lret
cmp
pop
push
add
or
das
jl
adc
shrl
and
mov
rcr
popf
mov
sbb
and
jnp
sbb
cltd
fsubrl
lret
mov
and
stos
pop
push
push
andb
push
roll
icebp
mov
cmp
call
testl
daa
sbbl
dec
jbe
addl
and
clc
jle
xor
shrl
shr
lret
dec
jnp
lods
and
add
pop
loope
adc
jo
pop
push
mov
xor
sub
inc
xchg
cli
mov
sub
ja
xchg
shrl
insb
mov
adcb
mov
mov
addr16
adc
cmc
rorb
orl
cmp
std
sbb
insl
push
adc
xchg
popf
ja
inc
sti
lahf
mov
movsb
jbe
push
ljmp
outsl
dec
sub
fcmovne
cld
cltd
or
inc
out
jne
mov
rcrl
test
xchg
clc
aaa
scas
pop
xor
adc
roll
and
outsl
pop
cld
pop
or
xchg
inc
or
or
xchg
mov
pop
mov
clc
xchg
xor
in
dec
loope
mov
ja
pop
inc
lahf
ret
sbb
push
push
mov
jmp
repnz
les
roll
sub
xlat
pushf
ret
lds
dec
faddp
add
fstpt
adc
xchg
popa
inc
sub
cld
test
stos
cli
int
add
jmp
es
popa
ds
movsl
or
xor
movsl
xor
push
loop
popa
push
lcall
pop
iret
mov
push
and
cmpl
fsubs
hlt
popf
ficompl
movsb
in
add
mov
pop
cmp
pop
outsb
xchg
faddl
outsb
or
jg
sub
mov
aaa
xor
mov
iret
xchg
push
cld
xor
fs
jo
testl
repnz
adc
nop
xor
jne
mov
mov
jge
int
stc
jnp
mov
mov
test
divb
sarb
outsl
pop
mov
mov
fdivrs
pusha
lret
repnz
and
mov
mov
xchg
xlat
dec
inc
loopne
int3
cmp
dec
xchg
loop
out
push
into
sub
add
xor
lret
dec
pop
xchg
jo
jns
dec
mov
inc
outsl
incl
cltd
add
lock
add
sub
shll
mov
xor
mov
sbb
sbb
out
repz
loopne
arpl
or
stc
push
popf
loopne
push
das
lret
mov
shl
xor
push
cmp
mov
test
push
out
adc
mov
mov
dec
and
icebp
sbb
or
adcl
xchg
cmc
das
sbb
cmp
xor
test
mov
xchg
mov
incl
frstor
addl
xor
dec
rorb
xchg
ret
mov
shrl
in
aaa
lahf
in
sbb
shll
sbb
ret
out
imul
in
xor
icebp
push
add
dec
insl
stos
jns
imul
shl
add
cltd
pop
mov
push
mov
test
dec
data16
in
jp
and
sbb
push
lahf
dec
mov
xor
lea
mov
pushl
pusha
popa
mov
mov
pop
xor
dec
mov
dec
cld
or
jmp
or
add
sbb
and
mov
addb
pop
leave
enter
nop
scas
pop
clc
rcl
push
lea
data16
xchg
mov
stc
ret
cltd
mov
sbb
pop
and
cmc
and
insl
xor
ficoml
inc
push
sbb
aad
sub
or
pop
outsb
repnz
shr
adc
lock
out
in
dec
aas
jae
adc
adc
mov
popf
dec
pop
inc
inc
inc
into
int3
add
insl
cld
xchg
subl
fmul
push
imul
mov
mov
dec
gs
or
inc
insl
lret
aas
mov
fsubl
push
lret
cli
movsl
cmp
icebp
xchg
inc
xlat
into
std
sub
lahf
stos
inc
out
stc
push
jg
sbb
daa
add
add
adc
jae
mov
imul
loop
repnz
inc
rolb
and
xchg
out
in
mov
clc
xor
sub
lea
test
test
rclb
mov
jle
mov
push
or
gs
rcr
push
mov
or
sbb
xor
push
jnp
pop
mov
sbb
dec
fs
adc
out
push
and
mov
mov
pushf
xor
mov
jle
lock
aaa
lcall
data16
mov
aad
jnp
push
and
xchg
mov
sbb
add
push
pushf
xchg
fisubrs
repz
lock
ja
pop
ret
jae
mov
cmp
add
fdivs
inc
stos
mov
test
notl
fnsave
das
rdpmc
mov
jecxz
filds
in
inc
sti
mov
out
jae
orl
ds
mov
and
push
out
andl
xor
push
jp
jae
add
andb
pop
insl
lret
cmc
imul
testl
mov
cmp
mov
lock
xchg
mov
mov
push
sub
enter
shll
push
cmp
cmpsl
xchg
lock
dec
jb
stos
scas
pop
mov
pop
ror
xchg
and
ss
fnstcw
mov
imull
mov
popf
stos
sub
call
jmp
pusha
daa
and
xor
inc
lahf
je
pop
mov
cli
lods
loope
jb
lods
inc
lods
leave
xchg
mov
in
mov
mov
sti
mov
call
addr16
lahf
fisttps
inc
inc
lods
xchg
add
and
popa
jmp
addl
jp
or
push
pusha
leave
movsl
jg
add
adc
loop
jg
lret
ror
xchg
jnp
or
lret
dec
stos
test
outsb
dec
shrb
dec
shl
sbb
pop
push
xor
nop
aad
mov
inc
test
mov
adc
fstps
inc
scas
jnp
mov
lods
mov
std
out
cmp
les
fs
inc
cmp
cmc
movsb
lock
movsb
xchg
adc
and
enterw
shll
or
pop
fistpl
icebp
cmc
sub
call
pop
pop
outsb
shrb
out
sub
popf
imul
cs
cltd
xchg
iret
and
adc
mov
shl
subl
lods
adc
mov
xor
cmp
std
inc
sub
mov
fdivs
pop
xchg
mov
xchg
push
and
and
lahf
jle
shlb
pop
dec
mov
orl
push
cmp
imull
push
pushl
jle
or
repnz
adc
and
clc
sarl
cmp
lods
pop
cwtl
in
mov
push
jg
and
call
repnz
sbb
insl
pop
mov
add
das
adc
push
cmp
push
shr
std
cmc
pusha
pop
fcoml
leave
mov
xor
mov
inc
mov
leave
leave
ljmp
xor
xchg
push
mov
stos
pop
mov
popf
inc
cmpsb
mov
mov
dec
movsl
ljmp
push
add
iret
adcl
push
stos
add
sbb
shlb
xchg
or
sub
jp
mov
push
sub
jbe
or
dec
xchg
cltd
sub
dec
dec
stos
push
test
pop
ljmp
aam
push
out
ss
lea
sbb
ds
cwtl
dec
sahf
cmp
mov
pusha
into
in
test
ret
mov
sub
dec
inc
xchg
je
sbb
pop
orb
sub
or
xlat
lock
mov
mov
test
add
int
outsb
lcall
mov
insb
subl
push
cltd
adc
inc
js
add
shll
or
and
jg
sub
lods
xor
dec
inc
mov
mov
stc
int3
push
test
insb
lock
push
repz
imul
mov
pop
insl
hlt
roll
fxch
xchg
fstl
jns
cltd
xchg
scas
stos
lcall
popf
xor
cmp
pop
notb
enter
add
add
lds
cwtl
sbb
jbe
loopne
test
jb
cmp
fdiv
fs
out
aas
fidivrs
mov
out
cmp
push
or
clc
stos
insb
push
out
sarb
stc
mov
xchg
arpl
pop
gs
sbb
test
out
push
push
add
adc
mov
cmc
add
mov
cwtl
dec
mull
cmp
inc
pop
loope
sub
aam
dec
movsb
mov
add
arpl
js
xchg
in
adc
xor
out
jnp
pushf
mov
and
dec
repnz
mov
push
das
xchg
mov
gs
pop
ljmp
popf
inc
pop
xchg
sarl
push
mov
push
mov
pop
jmp
mov
inc
mov
adc
leave
sub
pop
mov
outsb
dec
mov
cli
push
aas
jg
outsl
pop
out
insb
adc
fiaddl
mov
mov
and
fists
mov
cmp
and
scas
call
sub
sub
pop
cmpxchg
jns
fstl
fsubrs
xchg
mov
add
loope
dec
test
hlt
mov
inc
lds
xchg
data16
sub
lret
add
or
push
inc
insb
push
inc
fs
sar
sub
movsl
addr16
pop
mov
outsl
dec
pop
repnz
push
imul
fwait
mov
pop
jns
loop
mov
test
sbb
es
sbbb
jmp
sti
frstor
xchg
leave
les
lds
jecxz
cmp
ljmp
movsb
cmp
stc
rcrl
sbb
cmpsw
mov
bound
push
mov
pop
add
pushf
sub
mov
mov
enter
addr16
xchg
dec
mov
mov
jl
cmp
movb
movsl
dec
in
in
xchg
pop
pop
clc
int3
stos
int
dec
mov
seta
lods
rcrb
pop
scas
and
addr16
mov
sbbb
xchg
imul
in
sub
jnp,pn
lret
push
test
cltd
shrb
mov
daa
xchg
cmp
push
les
push
lods
mov
fs
dec
rorb
mov
or
lock
mov
lds
xchg
lret
lods
mov
mov
inc
pop
lahf
int
sbb
addl
fs
cmp
lods
dec
fsts
mov
es
adc
jp
jae
push
mov
and
or
fisttpll
adc
sub
jns
scas
leave
pop
icebp
cmp
int
mov
out
popa
push
lret
mov
nop
pop
adc
mov
and
shrl
push
or
shlb
rcl
in
jle
jmp
mull
sub
sub
fsubrs
xchg
cltd
dec
or
jno
pop
jmp
dec
xchg
add
push
xchg
mov
addr16
cs
rol
xchg
imul
ja
leave
cwtl
lock
addl
jmp
or
and
dec
or
int
ret
add
xchg
jno
fcomip
shlb
pop
jns
sahf
jnp
in
jg
dec
test
lcall
push
fdivl
adc
xchg
inc
js
mov
ja,pn
movsl
jnp
in
jmp
push
cmp
pop
mov
pop
cltd
popf
dec
cmc
sbb
stos
add
sarb
out
insb
inc
jmp
insb
cmc
mov
xchg
xchg
adc
stc
fcomps
insw
pop
jmp
xlat
inc
jno
xchg
jge
cltd
xor
mov
cld
insl
sub
cmpl
js,pt
stos
outsb
rcll
jne
lcall
xchg
xor
clc
xchg
xor
jl
lock
dec
or
push
adc
sub
pop
test
into
ljmp
xlat
arpl
mov
lock
push
sysenter
or
pop
frndint
or
dec
je
cmp
cli
and
and
in
xchg
xor
fs
negb
sub
dec
mov
adc
arpl
push
pop
addr16
adc
loop
and
sub
adc
ret
jnp
loopne
push
ljmp
fistpl
jle
mov
xchg
icebp
cmp
sbb
or
incb
push
sub
mov
mov
outsb
push
xor
pushf
pop
xchg
push
mov
and
jg
or
push
or
pusha
jmp
int
dec
mov
push
xchg
pop
in
inc
fiaddl
ja
loope
dec
xor
icebp
fsubr
inc
scas
pop
into
daa
stos
jb
out
pushf
into
add
cmpsb
mov
aas
dec
push
and
inc
loop
add
xorl
or
jnp
dec
xor
jno
movsl
mov
cmp
lods
push
test
sub
adc
inc
inc
icebp
iret
enter
rclb
jp
cmp
arpl
shr
cmp
adc
jle
xchg
pop
mov
xchg
insl
fwait
add
push
cli
imul
pusha
jo
push
repnz
cmp
hlt
stc
push
out
hlt
shrb
cmp
das
in
or
in
mov
or
ljmp
jecxz
lcall
cmp
lret
lea
aad
mov
adc
data16
loop
xor
jmp
rcll
fwait
inc
ret
ss
cmc
jno
gs
and
test
adc
push
in
jp
mov
fwait
cs
lret
mov
test
mov
lods
les
loopne
lahf
out
and
int
inc
in
popa
pop
jns
in
cli
add
inc
ret
jecxz
dec
jl
into
jb
pop
into
mov
and
and
inc
sbb
or
popl
fistpl
xor
mov
sub
dec
ljmp
mov
mov
xchg
mov
xchg
mov
in
stos
jge
mov
jmp
xor
add
dec
jbe
inc
inc
jno
inc
xchg
fimull
push
aas
icebp
sub
xchg
ficoml
pusha
sub
into
or
sub
stc
push
mov
xchg
lea
inc
lcall
enter
ljmp
add
adc
or
adc
add
cmc
dec
adc
sbb
jl
repnz
enter
xlat
and
xlat
xchg
cmp
dec
dec
sub
nop
bound
inc
jecxz
sbb
das
mov
aad
shll
pop
mov
fwait
pusha
int
sbb
pop
inc
into
push
scas
adc
pop
movsl
or
scas
roll
leave
xor
pop
pushf
inc
test
mov
jmp
add
cltd
sub
xchg
mov
xchg
pop
xor
pop
dec
pop
adc
xchg
fadd
lods
dec
push
aad
jecxz
push
cmpsb
xor
inc
testl
je
in
inc
jo
int3
mov
loopnew
into
pushf
mov
mov
call
aam
fs
dec
mov
fs
sbb
mov
aam
dec
or
pop
or
out
sbb
mov
or
or
fldl
testb
lahf
xchg
mov
mul
divl
cmpsb
test
sbb
push
sbb
pop
jge
mov
mov
in
in
mov
fildll
popf
pop
mov
lds
gs
fsubrs
or
jmp
sub
mov
cld
lds
setbe
xor
test
xor
xor
mov
in
in
into
xchg
ss
mov
mov
cmp
ret
xchg
xchg
ljmp
cmp
cs
pop
jecxz
test
loop
es
in
mov
or
arpl
imul
jle
mov
jl
cmc
push
jmp
addr16
cwtl
shll
and
loop
dec
fs
daa
daa
bound
arpl
iret
int3
out
stos
dec
fiaddl
dec
in
push
pop
lds
pop
outsl
jnp
iret
add
ds
jg
mov
inc
sub
lock
jg
ljmp
add
pop
les
pop
dec
stos
mov
jno
xchg
lods
lods
shlb
jg
push
jbe
lea
gs
jno
in
lds
add
addr16
shlb
ror
jge
xchg
outsb
and
jne
in
pop
scas
mov
test
stc
or
xchg
std
push
ret
pop
cli
movsb
xchg
rcl
xchg
testl
xor
divl
in
xor
andb
bound
adc
adc
and
push
add
xchg
and
push
lea
jl
pop
out
int
ja
mov
dec
sbb
inc
arpl
push
repz
xchg
mov
lods
aad
adc
xchg
pop
add
pop
bound
test
arpl
divl
int
sub
mov
cli
mov
xchg
sub
movsl
ss
insl
sub
mov
sahf
cwtl
add
pop
jo
pop
push
and
mov
or
mov
mov
pop
imull
inc
dec
rol
daa
and
and
adc
into
insb
jbe
xchg
xchg
int3
push
push
imul
test
push
add
mov
xlat
sahf
adc
inc
out
addb
mov
gs
cmp
sti
fidivs
dec
scas
std
outsl
mov
movsb
loopne
shl
push
cmp
cmpsl
sub
les
xchg
pop
ja
sbb
call
pop
mov
adcl
add
inc
aam
and
sbb
stc
sbb
add
jge
arpl
pushf
lret
push
in
xchg
adc
mov
mov
ficompl
cwtl
cmp
iret
inc
or
mov
cmp
inc
stc
cmpsl
inc
sub
mov
and
dec
cmp
in
subb
xchg
or
add
jns
add
push
inc
jns
sti
jb
idivb
aam
lea
std
adc
aad
sbb
push
xchg
push
or
and
repnz
fcoms
sub
leave
decl
push
dec
add
xchg
add
jo
fiadds
push
ficoml
xchg
mov
lret
out
pop
xchg
mov
hlt
push
sub
or
sub
pop
stos
shll
xor
je
bound
xchg
sub
loope
dec
ss
fnsave
sub
jo
sbb
sub
xlat
sub
push
and
mov
jns
mov
jne
xchg
dec
mov
mulb
iret
insb
sbb
sbb
or
stc
or
mov
out
bound
pop
rcrb
je
movsb
jnp
pop
adc
scas
mov
push
in
xchg
dec
mov
inc
jp
mov
cmp
inc
pop
xchg
sar
mov
cmpl
iret
repnz
jg
or
adc
lret
jmp
loope
movsl
inc
pop
mov
pop
loope
test
dec
das
sub
arpl
or
and
arpl
pop
cltd
and
mov
sbb
adc
clc
mov
sbb
adcb
jbe
pop
jmp
jmp
lods
dec
rcll
icebp
neg
push
cmp
insl
leave
or
inc
std
mov
repz
mov
jb
jp
test
sbb
xchg
jnp
push
mov
inc
and
jl
fnclex
fstl
cli
add
mov
sbb
and
mov
jbe
jbe
mov
adc
loope
lds
aas
call
in
jne
loope
push
add
in
mov
xchg
push
test
lret
arpl
mov
fwait
and
les
into
cltd
mov
cli
shlb
push
xor
mov
cmp
jb
mov
fidivrl
aaa
ret
jg
stos
loop
subb
pop
or
inc
sahf
push
rolb
or
rcr
dec
and
dec
xor
xlat
fwait
pop
and
push
xor
jne
xchg
je
movsb
push
xor
xchg
dec
push
sahf
mov
jnp
push
out
add
int3
jmp
sub
inc
jnp
arpl
ret
adcl
lret
dec
dec
mov
mov
mov
inc
adc
lret
adc
mov
push
shll
aam
and
push
dec
sbb
adc
pop
pushf
add
cltd
ret
cmp
sub
dec
sub
lret
data16
gs
in
in
shl
jae
negb
sub
data16
ja
faddl
inc
fadds
pusha
dec
aad
stos
ss
and
imulb
outsb
dec
test
js
cmp
lret
jo
jb
cwtl
lret
cmpsl
mov
mov
jge
and
cli
push
fst
mov
pop
cli
mov
add
cmp
aam
cmp
out
jne
mov
pop
test
cmpsb
aaa
scas
imul
xor
in
in
jb
push
push
xor
out
pop
mov
jae
push
and
test
cmpsl
cmp
cli
add
jns
cwtl
pop
cmp
push
outsb
sub
negb
je
sub
mov
dec
ret
mov
push
mov
test
add
lods
lret
fdivs
xor
xor
xor
xchg
mov
xchg
ret
cli
out
js
fistpll
jbe
push
push
cltd
cmpsb
dec
xlat
cmc
out
in
dec
xor
orl
out
clc
arpl
aam
frstor
lods
decb
sbb
les
fadds
add
sub
call
fstps
adc
aas
mov
jle
filds
ss
or
icebp
aas
mov
xchg
ret
mov
xor
insl
cltd
jge
lds
ret
lods
icebp
adc
adc
js
sahf
sti
imul
sbb
jmp
inc
push
dec
sub
clc
cmc
jl
in
out
data16
sti
into
add
push
inc
rcrb
pop
stos
int3
mov
out
ljmp
test
aaa
xchg
pop
pop
clc
jnp
mov
ds
cld
xor
sbb
outsl
xchg
mov
aaa
jg
push
ss
shlb
inc
daa
mov
add
mov
jnp
in
stos
mov
addb
add
push
pushf
js
mov
cmp
dec
xchg
or
mov
dec
in
xchg
push
out
xor
sub
and
sbb
xchg
lds
mov
loopw
ds
testb
mov
inc
mov
add
pop
mov
roll
rorl
xchg
repnz
aaa
test
lahf
insb
xlat
push
adcb
mov
in
mov
xor
addl
lret
and
sub
test
mov
cmpsb
pop
jo
add
sub
popf
pushf
mov
aad
cltd
into
pop
fstp
push
pop
clc
dec
mov
sub
add
je
jl
ss
clc
mov
push
mov
ja
or
sbb
aaa
jge
imull
cmp
out
popa
sbb
jae
orl
hlt
sarb
mov
mov
insl
xor
out
ds
cli
les
push
stc
stos
push
leave
mov
xchg
sub
sub
dec
sahf
push
les
out
mov
sbb
mov
aad
adc
and
jmp
lock
push
mov
dec
nop
out
cltd
xchg
les
nop
fsubl
repz
aaa
or
dec
add
xchg
es
push
lahf
sbb
mov
pop
and
fstp
ficoml
fidivrs
jns
mov
loopne
or
test
fldt
adc
dec
xchg
ret
mov
imul
add
insl
add
repz
mov
push
pushf
stc
pop
adc
xchg
and
sbb
repz
pop
mov
call
xchg
lock
cmc
mov
or
mov
push
jbe
pop
cli
cli
xchg
push
and
mov
mov
inc
cmp
and
push
lret
jnp
int
cmpsb
jp
or
xchg
out
test
ja
bsf
out
inc
flds
cmp
fmull
or
fisubl
fmul
jne
iret
std
mov
push
orl
and
cmp
testb
fists
jno
sbb
sub
sbb
add
cmpsl
sbb
fmulp
lret
stos
adc
cmp
jmp
mov
add
mov
outsl
test
or
mov
stos
mov
call
adc
xchg
push
outsb
aas
lret
sbb
std
xor
jb
sbb
pop
mov
inc
popf
gs
adc
aad
jnp
mov
andb
jecxz
sahf
push
pop
fcoms
pop
mov
cmpsb
jns
idivb
dec
jg
jno
lds
in
cltd
clc
pushf
mov
adc
xchg
aas
loope
iret
push
jmp
lods
pop
cmp
cmp
fidivl
mov
add
insl
aad
jbe
in
dec
icebp
jle
aam
pushf
sbb
push
sub
xor
lock
xchg
icebp
adc
fsubs
out
mov
inc
jnp
mov
add
push
movsb
pop
flds
loope
cmp
test
inc
dec
fbstp
out
mov
adc
mov
lds
std
lock
adc
or
mov
scas
cmp
add
mov
in
xor
adc
subl
sarb
dec
cmp
hlt
lods
ret
xchg
xchg
push
xor
rcll
imul
mov
push
pop
cmp
test
push
inc
jne
inc
or
je
rcl
mov
and
fabs
aas
fimull
pop
push
dec
fidivrl
mov
jne
cmpsb
xor
movsb
mov
bound
xchg
lea
xor
push
jne
in
repnz
aaa
daa
insl
mov
and
ja
mov
pop
push
push
xor
dec
stc
mov
push
add
iret
lret
in
rcll
repz
dec
sahf
and
add
pop
inc
or
movsb
add
sub
lods
int
inc
inc
sub
lahf
push
pop
lret
out
dec
cs
push
jae
ljmp
shlb
xlat
ljmp
lret
cmpsl
dec
rolb
daa
insl
and
mov
jg
mov
and
cmp
test
xor
shrl
jne
enter
mov
add
cli
fdivrs
pop
sbb
loopne
mov
ret
add
in
push
dec
push
repz
jg
mov
fcmove
xor
cmp
jle
pop
rol
movsb
or
or
call
stos
fisttpll
cltd
imul
popf
or
mov
sti
mov
in
lret
add
iret
lea
fists
pop
mov
xor
push
clc
rcrl
iret
les
add
and
js
push
cmp
mov
fists
rclb
fisttpll
sbb
push
mov
jo
pop
rdmsr
fisubs
and
cltd
adc
es
pop
daa
adc
mov
out
cltd
out
insl
lret
frstor
dec
fdivr
inc
mov
sub
popa
ret
mov
pop
add
enter
push
imul
cmp
je
rolb
jo
filds
cmp
cmpsb
lock
cli
cmpsb
sub
mov
xchg
jg
add
pop
dec
xchg
hlt
adc
cmp
jge
adc
inc
mov
pusha
call
mov
fwait
push
lds
jg
outsl
cltd
ja
cltd
movsl
mov
rorb
mov
push
shlb
pop
out
mov
jno
lods
iret
mov
fdivrl
push
push
or
ljmp
idivl
ss
mov
bound
push
dec
pop
popa
inc
inc
dec
imul
ja
or
sbb
imul
pop
jne
outsb
sub
adc
xchg
ret
xchg
sbb
faddl
add
test
xchg
push
inc
hlt
out
push
inc
fldenv
pop
pop
add
push
pop
xor
les
fldcw
and
push
push
pop
enter
xchg
jnp
scas
inc
sub
mov
daa
in
pop
ja
nop
das
das
enter
xchg
adc
xor
pop
loope
in
test
xor
xor
push
mov
scas
sub
cmp
int
jno
lret
jp
call
jp
jl
dec
call
add
rcrb
decb
mov
mov
dec
inc
dec
shll
jno
mov
popf
adc
adc
xorl
dec
cli
cmp
jg
dec
lds
sub
loopne
js
test
nop
sahf
lret
adc
int3
push
mov
clc
xchg
dec
fisubrl
and
jge
mov
movsb
rcll
mov
in
mov
add
filds
addl
pop
mov
jp
in
adc
sbb
test
jns
jo
imul
pop
fnstenv
subl
mov
sbb
rolb
adc
push
pusha
inc
aas
mov
ret
dec
pop
dec
aaa
cmpsb
pop
cmp
mov
repz
pop
push
pop
jge
jb
das
inc
in
add
mov
ds
pushf
in
mov
into
pop
mov
mov
imul
push
dec
push
push
sbb
fstps
inc
neg
mov
xchg
test
mov
scas
stc
cwtl
jns
push
fstpl
xchg
push
jnp
int3
idivl
out
pusha
mov
pop
mov
xor
fstpt
mov
test
mov
fdiv
out
sbb
cmp
jl
mov
call
sbb
pop
xor
mov
mov
inc
xor
inc
hlt
add
mov
popf
xor
sahf
xchg
cmp
pop
aam
arpl
jno
cmc
adc
inc
fstp
fcmovnb
cmp
adc
push
sbb
jecxz
rcll
jge
loope
lahf
ljmp
and
cmpsl
jl
sti
sbbl
outsl
inc
enter
xor
je
mov
pop
xchg
xor
imull
dec
mov
sbbl
mov
out
aam
add
push
loop
dec
lea
push
cltd
sbb
loopne
in
out
sahf
sbb
mov
sub
xchg
mov
mov
mov
iret
cmpsl
inc
lock
bound
cli
ja
lret
inc
sbb
data16
fs
sbb
vphaddbq
ja
jnp
mov
adcb
mov
hlt
int3
mov
pop
mov
call
push
mov
mov
arpl
add
aaa
mov
ret
ljmp
pop
orb
orl
gs
mov
into
add
imulb
data16
and
es
xor
inc
hlt
sbb
xchg
adc
aaa
jo
adc
scas
jmp
jns
xchg
fstl
aam
push
cmc
sbb
lods
pop
lahf
movsl
inc
sub
push
xor
fdivrl
mov
fs
xor
test
cmp
out
sbb
cmc
cld
adc
iret
push
mov
mov
push
push
or
in
cmc
pop
lods
xor
scas
fwait
mov
shl
sub
xor
out
mov
pop
insb
dec
cmpsl
nop
push
mov
inc
add
add
mov
pop
repz
repz
add
pop
mov
roll
mov
inc
repnz
lret
mov
fsubs
mov
imul
mov
std
mov
xor
popf
jae
std
pop
int3
addr16
cmp
mov
mov
and
mov
xchg
in
xchg
insb
pop
in
dec
fdivs
jp
orb
loopne
lahf
ficomps
sbb
inc
jbe
jnp
push
xchg
lods
outsl
sbb
mov
scas
dec
bound
dec
push
sahf
jle
je
xor
shll
mov
repnz
mov
add
je
adc
inc
cmp
xor
popa
jp
jae
inc
xor
mov
rcrb
mov
pop
int
ficompl
addr16
rsqrtps
stos
insb
outsb
outsl
int
xor
std
leave
and
loop
or
cli
int3
and
lret
inc
roll
hlt
add
ljmp
scas
test
adc
shrb
mov
mov
ja
test
int
sbb
xor
pop
or
out
inc
sub
ljmp
mov
push
daa
xor
jecxz
push
sbb
pop
pop
xchg
out
je
cs
mov
mov
jnp
dec
xlat
xor
int3
mov
cwtl
xchg
repz
pop
stos
push
xchg
shl
loope
mov
cli
ss
lret
shrb
xchg
dec
mov
inc
dec
jbe
in
jb
pop
les
cwtl
mov
popf
fs
arpl
cmp
int3
insb
out
aas
push
int3
repnz
arpl
cmpsb
in
shlb
pop
dec
fistl
jecxz
push
int
std
xor
sub
xor
pop
jmp
mov
ds
jnp
adc
cli
mov
adc
cld
jl
movsb
cld
pop
mov
inc
shll
xor
sub
jnp
sbb
cmc
jnp
fstl
out
jne
push
cmpsb
pop
popa
bound
sbb
and
cmp
outsl
push
xchg
lahf
xor
mov
sub
loope
and
loop
pop
test
lahf
inc
push
mov
lcall
mov
pop
add
cld
pop
inc
xchg
repnz
sahf
xchg
xor
repz
int3
je
xor
scas
leave
pop
or
push
gs
fadds
sub
imul
mov
out
imul
test
push
sbb
lret
pop
mov
dec
mov
and
out
aaa
inc
sbb
testl
out
jne
jmp
pop
xor
push
pop
inc
loop
cmpsl
hlt
aam
xor
jno
cmp
lahf
jmp
dec
push
lock
cmpsl
test
mulb
stos
push
jb
aaa
leave
call
adc
sahf
roll
inc
leave
adc
ud2
xor
test
sbb
fucomip
shr
cmp
mov
xchg
gs
cmpsl
jae
std
cmp
loopne
imul
jecxz
sti
ret
lock
adc
fucom
mov
cmc
pop
cltd
cmpsl
sbb
lods
idivl
stos
inc
arpl
inc
jbe
mov
pop
div
jno
popa
jg
sbb
or
pop
movl
mov
sahf
movsb
and
jo,pt
mov
int3
in
mov
cmp
cmpsb
std
mov
leave
mov
push
xorb
mov
or
shll
pop
sahf
or
das
pop
outsl
test
stos
or
and
pushf
into
and
fwait
enter
scas
les
xchg
xchg
adc
pushf
dec
cmp
sbb
lods
dec
shl
pop
xor
insb
inc
sahf
stos
and
inc
push
jns
fisttpll
mov
dec
lock
aad
or
aam
lock
push
rclb
fsubs
or
mov
ja
push
int3
xchg
lock
adc
sbbb
mov
jg
mov
cmpsb
loope
hlt
shlb
movsl
xor
ror
cwtl
ds
sub
rcl
roll
cltd
jno
pop
add
divb
ds
or
and
fdivrl
mov
gs
int
lds
xchg
popa
in
lret
test
cs
dec
mov
leave
pusha
fcmovb
cmp
mov
aaa
pushf
mov
insl
in
inc
jae
xchg
addr16
sub
fisttps
cld
das
xor
and
scas
das
pop
lret
xor
inc
addl
aad
xchg
loope
jns
cmp
xchg
jp
inc
cmpsb
jmp
aas
jecxz
mov
hlt
mov
fcompp
cmc
adc
fnstcw
dec
mov
push
adc
insb
movsl
hlt
insb
test
xor
outsl
int3
adc
mov
fld
mov
adc
test
lock
pop
divl
inc
sub
cmp
fcmovb
lret
mov
out
mov
stos
inc
mov
push
mov
sbb
es
sub
mov
or
fsubl
std
je
push
arpl
xchg
pusha
or
movsl
stos
lahf
enter
mov
movsb
and
mov
fs
mov
xor
stos
leave
call
or
aad
and
repnz
lcall
rcll
mov
mov
shrl
hlt
loopne
fs
adc
xor
mov
leave
pop
xchg
mov
mov
pusha
adcb
jae
lret
ja
mov
mov
pushf
or
ret
mov
push
movsl
aad
das
pushf
lahf
or
jno
mov
xchg
lock
arpl
sub
cmp
pop
adc
adc
cmpsb
push
testb
mov
scas
add
iret
lret
ret
lods
out
insl
cs
push
aaa
out
push
sbb
and
jle
test
rorl
pop
inc
xchg
imul
lock
pop
adc
es
cld
xor
mov
jp
mov
ja
ds
lcall
js
fisubrl
push
fsubl
xchg
lret
insb
cli
ds
hlt
xorb
fsubs
push
lods
bound
fucomp
cmp
jle
pop
sti
popf
push
adc
sub
or
std
pop
dec
andl
inc
cmp
jbe
jecxz
xchg
aas
popf
imul
dec
xor
sbb
push
xor
cmp
dec
popa
jns
aam
sub
mov
mov
cld
dec
push
scas
add
push
mov
loopne
inc
sbb
pop
pop
cli
sbb
pop
or
sbb
stos
mov
test
test
hlt
sub
xchg
outsl
int3
lods
mov
dec
mov
pop
test
sub
aam
jp
out
cmpl
mov
ret
or
push
inc
lahf
or
jb
arpl
push
xlat
add
cmp
mov
rclb
cld
or
repnz
pause
pop
sub
inc
cs
push
aad
movsl
out
inc
inc
inc
or
and
adc
add
loop
scas
add
xor
je
or
mov
inc
or
sarb
and
enter
int
iret
int3
js
adc
dec
mov
jmp
test
mov
ja
sbb
mov
ds
mov
and
mov
fisttpl
mov
insl
cmp
fs
rcl
out
out
data16
mov
icebp
aad
pop
daa
inc
repz
adc
fwait
push
or
out
icebp
push
dec
or
sub
xchg
scas
xchg
fldt
mov
out
or
sub
stos
cli
xchg
mov
insl
fsubr
inc
pop
pusha
push
imul
inc
repz
or
add
push
jae
in
inc
xchg
fs
stos
mov
adc
add
add
push
mov
sbb
dec
jg
mov
lret
movlhps
imulb
sub
stos
or
and
dec
inc
dec
xchg
aas
pusha
mov
mulb
loope
ror
sbb
xchg
push
out
adc
pop
mov
in
ja
xchg
test
mov
sbb
adc
stc
dec
dec
je
sti
sbb
ss
xchg
xor
xor
sbb
stos
je
mov
pop
mov
push
scas
nop
inc
cmp
imul
xor
or
enter
mov
cltd
xchg
pop
repz
rolb
xor
push
add
adc
jo
lock
sub
push
jno
shll
cld
loope
movsl
rorb
andb
inc
dec
pop
loope
andl
adc
jge
mov
push
or
popf
pop
and
push
mov
call
dec
in
fcomp
cmc
cmp
iret
pop
rep
scas
pop
mov
ja
xchg
repnz
icebp
cltd
aaa
push
sub
push
sbb
loop
sbb
push
js
rcrb
xor
jge
push
aad
out
sahf
scas
xchg
idiv
adc
jle
insl
stc
cmp
call
jnp
cmp
push
jge
push
loop
outsl
cmp
aad
outsb
and
mov
loopne
ror
lret
nop
sub
sbbl
hlt
into
hlt
mov
in
pushaw
pushf
mov
aad
addl
push
and
cmp
xchg
cmp
lret
xor
and
xchg
arpl
dec
push
repnz
mov
add
icebp
push
inc
inc
sbb
repz
push
mov
add
mov
fiadds
aam
dec
stos
out
and
xchg
insb
fstpt
add
mov
mov
testl
loopne
cld
xor
stos
sbb
lds
adc
xchg
clc
arpl
and
pop
cmp
daa
arpl
mov
rorb
call
mov
or
xchg
movsl
fdivs
int3
jmp
mov
pop
jnp
stc
outsl
iret
and
mov
jae
push
jl
test
int3
inc
push
scas
hlt
xchg
dec
lods
fucomip
sub
out
lea
xchg
lods
add
mov
sbb
aaa
sbb
jp
leave
xchg
bound
mov
inc
out
mov
xchg
fiaddl
or
dec
sub
sbb
sbb
lods
out
pop
inc
pop
cmc
shll
or
bound
dec
movl
push
gs
xchg
test
pushf
ja
mov
mov
add
ds
sub
imul
fadds
or
lret
stos
pop
xchg
push
xchg
cmpsb
je
and
arpl
pop
les
xor
out
xchg
mov
pop
add
mov
ret
loop
fnstsw
stc
fisubl
test
fldenv
inc
into
push
leave
sub
sbb
xchg
mov
xchg
mov
and
mov
repnz
and
imul
arpl
in
xchg
xorb
xchg
iret
sub
adc
stc
push
push
aaa
test
pop
jo
nop
cmp
inc
pop
ret
jno
add
hlt
jl
icebp
xchg
movsb
insb
stc
fisttpll
imul
jp
pushf
pusha
xchg
mov
fisttps
aad
cwtl
and
jb
scas
cs
aad
stos
pop
jg
sbb
jae
cmc
dec
and
cmc
mov
cltd
jbe
sub
sbb
mov
mov
aaa
cmpb
fsub
pop
nop
out
pop
shll
ret
push
insb
pop
xchg
lret
mov
adc
pop
push
add
imul
mov
xchg
push
movsb
add
sahf
mov
push
in
sbb
add
mov
enter
mov
popa
xor
pop
sbb
mov
push
fmuls
in
clc
pop
adcb
sub
mov
xor
out
fdivl
sbb
out
les
test
or
sub
sbb
je
sbb
fisubl
push
xor
push
pop
popf
ds
add
aaa
mov
jp
mov
push
gs
repnz
push
and
push
pop
mov
test
pop
push
push
xor
cmpsb
xor
mul
test
jnp
mov
and
sub
shl
mov
cmc
add
cli
xchg
std
xor
sub
jg
or
mov
ss
cmp
ljmp
cs
cmpl
sbb
test
mov
add
jmp
sub
and
fcoml
xor
leave
sbb
in
ss
add
shr
mov
sahf
ffreep
xlat
loope
mov
xor
lods
mov
jmp
in
sub
push
cmp
outsl
or
push
push
xchg
mov
pop
gs
xchg
cwtl
insb
dec
xor
mov
xchg
xchg
subl
sti
ret
std
daa
mov
lahf
sub
adc
mov
dec
sub
mov
or
jns
cmp
loop
aaa
in
sub
xor
iret
fucom
lcall
jecxz
sub
clc
pop
stc
pushf
notb
jae
dec
mov
jge
mov
pop
in
int
mov
lods
dec
cld
inc
fimull
mov
ret
leave
sarb
push
dec
xchg
js
jmp
mov
loop
sbb
fwait
lea
or
inc
inc
xchg
jge
jns
popf
push
jne
adc
cmc
jle
fnsave
fwait
cmp
sub
sbb
adc
push
mov
or
dec
int3
jmp
xchg
jae
test
or
insb
jb
sahf
addr16
stos
shrl
clts
cltd
adc
mov
push
rcrb
hlt
sub
or
fnstcw
or
xchg
push
push
push
out
cli
pop
out
adc
xchg
lock
out
jbe
mov
xor
and
add
sarb
xor
movsl
cmp
lea
ss
mov
cmpsb
imul
sbb
and
sbb
inc
and
mov
cmp
dec
pop
and
add
mov
lds
push
mov
stc
mov
cs
mov
fdivs
inc
and
pop
arpl
andb
imul
mov
stos
sahf
rorl
jmp
cli
xor
nop
into
xor
xchg
sub
inc
jmp
mov
aaa
imul
mov
ss
fistpl
inc
lods
cmp
sbb
xor
nop
std
dec
mov
push
jmp
sbb
jle
loopne
cmpsl
or
jge
stc
sub
fnstsw
push
pop
dec
adc
push
clc
scas
sbb
mov
sarl
cld
sub
in
pop
sbb
adc
adc
xor
dec
lcall
test
or
adc
xchg
dec
add
and
out
pop
movsb
mov
or
pop
lcall
cmp
dec
or
xchg
pop
add
shrl
mov
mov
push
push
jo
aaa
scas
mov
cmc
fs
leave
das
pop
pusha
aas
and
push
fsubrs
mov
cli
pop
loopnew
inc
inc
ficoml
leave
std
push
add
cmp
cmc
sbb
lahf
out
aam
ret
dec
adc
mov
push
outsl
jg
xchg
pop
push
callw
ja,pt
or
push
pop
rol
and
movsb
fidivrl
jo
sbb
mov
and
xor
lret
push
addb
sbb
push
lcall
or
mov
push
xor
stos
cltd
lret
push
cs
loop
sub
inc
shll
pop
add
jle
mov
fwait
jecxz
and
push
mov
inc
sbb
stos
hlt
pop
out
mov
inc
ficoms
inc
adc
aam
aad
mov
ljmp
adc
xlat
dec
popf
out
mov
fidivrs
outsl
push
not
ret
sti
xlat
shll
fsts
dec
jne
push
jo
pop
inc
vmptrst
xor
jge
enter
fisttps
jbe
push
mov
sub
jg
sbb
jae
rorl
lcall
in
push
icebp
inc
pop
mov
imul
aam
adc
push
cli
enter
or
or
dec
add
lcall
pop
push
or
jae
std
stc
jns
adc
shlb
xchg
inc
lcall
adc
popf
sbb
and
fsubp
fisttpll
in
sub
mov
add
jnp
mov
mov
das
out
push
mov
call
data16
pop
inc
jge
jecxz
jne
xor
cltd
sbb
jns
inc
and
ljmp
daa
sbb
cmpb
orl
insb
mov
add
and
lods
mov
dec
mov
or
pop
aad
pop
push
xchg
ss
pusha
pop
sub
pop
pop
clc
cmp
lods
push
jp
or
mov
int3
add
dec
fists
sbb
mov
mov
pop
and
gs
sub
mov
in
stc
push
sub
sub
mov
xchg
push
cli
sti
inc
lcall
xor
mov
out
push
push
loopne
xor
and
push
jecxz
pushl
dec
xor
cwtl
roll
xchg
xlat
mov
rorl
int
push
and
jae
inc
inc
xchg
push
imul
int
pop
pop
xchg
push
mov
les
cli
out
jge
outsb
fwait
pop
cmp
movsb
inc
sub
mov
stc
sbb
lret
aad
clc
out
mov
aaa
adc
ret
test
and
aaa
and
mov
cmp
icebp
stos
loopne
jmp
rol
cld
out
push
pop
lcall
stos
xor
lock
or
je
mov
rorl
adc
shll
cwtl
inc
mov
dec
inc
push
pushf
or
faddp
fldt
and
push
pop
jbe
es
das
lods
pop
ljmp
addr16
lret
ss
push
lret
pop
cmc
push
lods
add
xor
xchg
add
sbb
mov
aaa
fnstenv
inc
insb
inc
mov
test
aad
push
pop
addb
daa
pop
es
jb
lock
mov
out
dec
pop
dec
int
sub
mov
dec
dec
xchg
push
cmp
mov
subb
cmp
xchg
sbb
pop
or
jb
stos
jle
lret
scas
sbb
loope
dec
lods
lds
mov
sub
inc
repnz
jbe
ja
sbb
pop
dec
fldcw
inc
leave
jbe
daa
xchg
mov
shll
enter
movsl
popa
mov
std
or
and
std
ret
or
jmp
add
sbb
shll
clc
repz
sahf
inc
imul
int3
movsl
adc
cmpl
or
xchg
sub
cmp
and
and
dec
jmp
xlat
mov
test
jmp
inc
pusha
test
dec
lea
movsl
jne
cmpsl
test
movsb
jo
push
test
mov
dec
mov
and
inc
lahf
ljmp
sub
mov
pop
negl
xor
dec
xor
cld
sub
adc
out
es
lock
cmp
and
imul
push
popf
aas
inc
jno
inc
stos
add
jmp
lahf
push
mov
mov
adc
dec
pushf
or
inc
into
daa
inc
sbb
loope
adc
rcrb
idivl
jne
adc
fcoml
xor
mov
in
jle
jp
add
fisubrl
pop
adc
enter
or
out
push
frndint
cmp
clc
mov
stc
lret
ret
mov
and
sti
dec
jns
bound
in
mov
ljmp
repz
clc
xorl
mov
fadd
mov
sbb
lret
das
mov
notl
shrb
cld
and
dec
add
imul
sub
test
adc
push
fwait
ret
pop
repnz
test
dec
fsubrl
jb
aad
stos
or
dec
or
ss
xor
shll
jp
ficomps
es
inc
xor
mov
sbb
push
add
dec
pop
dec
pop
scas
fwait
movsl
pop
pusha
insl
mov
rolb
sub
out
ret
add
xchg
mov
idiv
pop
inc
xlat
sbbb
and
mov
out
pop
mov
rcpps
outsb
out
xor
or
add
push
xor
lods
sbb
cmpsb
fstpl
out
sub
enter
dec
jne
enter
xor
jbe
push
cmpsl
inc
movsb
jmp
loop
mov
bound
cmpsb
push
jl
mov
mov
gs
sbb
jbe
xor
ret
mov
mov
xlat
fwait
arpl
sub
stos
leave
ljmp
lret
std
add
cmc
out
or
leave
inc
fs
rcrb
pop
cli
ror
mov
or
cmp
ds
cltd
or
jbe
jne
cmp
repnz
xor
ror
pushf
sti
out
out
je
xor
inc
in
dec
mov
scas
leave
test
nop
dec
aaa
sub
jo
fcomip
xor
das
adc
test
int
jge
mov
pop
inc
sub
xor
or
mov
jbe
sub
ja
addl
mov
fbld
jg
sub
cmpsl
add
push
cmp
fs
js
cmp
inc
or
jae
and
jo
outsb
pop
pop
mov
xchg
scas
mov
sub
mov
in
or
push
icebp
daa
filds
mov
repnz
sub
jno
inc
xchg
sbb
lcall
ja
mov
stc
push
aas
jg
sub
rcrb
lock
mov
and
ljmp
sub
outsb
sbb
jae
int3
inc
xor
out
pop
sarb
jle
sbb
jle
call
test
fdiv
xor
adc
add
cmp
lret
fcom
dec
test
adc
stos
mov
movsb
idiv
faddl
xor
fildll
mov
jns
xor
mov
inc
mov
aaa
pop
cmp
jecxz
pop
in
cltd
xchg
leave
mov
jmp
repnz
and
lcall
lret
pop
les
inc
mov
pushf
lret
mov
lahf
cltd
push
imul
aas
sbbl
lret
ret
pop
cmpsl
and
dec
cmc
sbb
add
dec
jge
addr16
test
cmpl
std
mov
shr
xor
hlt
mov
mov
xor
xor
pop
mov
adc
mov
inc
adcb
in
xor
gs
jns
scas
cmpsb
xchg
mov
jo
sbb
test
inc
lds
cld
test
mov
mov
mov
fbld
pushf
mov
rcll
pop
push
sub
pop
inc
mov
vaddps
lcall
inc
push
xchg
flds
jp
dec
inc
xchg
xchg
cmp
mov
mov
clc
inc
pop
adc
test
or
imul
cmp
xchg
pushf
push
lds
fnstenv
out
sub
imul
rolb
xor
aaa
jg
out
js
scas
mov
pop
in
jecxz
fwait
mov
jp
jmp
sbb
outsb
aas
daa
mov
mov
aaa
shrb
incl
aas
mov
pop
xchg
and
call
or
aam
jge
inc
jne
jl
vpmadcswd
aas
aam
data16
cmp
xchg
insb
subl
push
mov
mov
cmpsl
out
mov
mov
add
push
pop
rorl
callw
pop
mov
call
gs
adc
rcll
and
cld
jo
xchg
push
out
jo
inc
push
ret
add
pop
cli
sub
insb
dec
dec
stos
pop
lret
add
inc
dec
mov
push
mov
rcr
jo
ficompl
scas
out
mov
jp
mov
daa
and
loope
aam
jp
cltd
xor
stos
add
lock
push
push
out
pmaxub
fdivl
xchg
xor
shlb
addr16
mov
js
pop
sbb
out
movsl
popf
and
fisttpll
push
in
inc
test
in
inc
sbb
scas
out
sbb
push
push
inc
push
movb
shrl
sbb
andl
inc
pushf
cmp
cltd
pop
fimull
jno
push
popf
inc
clc
sbb
rcrl
dec
fldenv
mov
xchg
outsb
mov
bound
or
mov
mulb
mov
cltd
mov
cmpsl
jns
cmp
in
mov
js
jbe
xchg
jmp
movsl
aaa
icebp
add
jp
adc
nop
push
in
mov
test
mov
popf
push
pop
xor
cwtl
push
xchg
mov
jbe
cmpsl
loopne
mov
test
jl
lahf
call
mov
jl
xchg
sub
rcrb
xor
sub
leave
lcall
test
add
mov
gs
xchg
and
jmp
stos
imul
sbb
test
mov
imul
in
jno
sar
das
shl
jp
nop
or
clc
mov
sbb
call
xchg
out
sub
ljmp
jae
pushf
int3
daa
testb
lea
inc
add
enter
dec
push
mov
fwait
push
insb
fdivr
xor
adc
mov
idiv
adc
outsb
xor
push
test
shlb
inc
push
es
repnz
lcall
mov
dec
test
push
xbegin
arpl
mov
ret
pushf
lods
dec
das
and
cwtl
imul
sub
jecxz
fmull
fstpt
mov
imul
adc
adc
loopne
jb
inc
repnz
sbb
fwait
pop
sbb
icebp
aaa
test
or
lods
cmp
dec
jo
orl
ja
aas
dec
xor
or
mov
stc
js
addr16
test
lds
pusha
xor
test
int3
insl
sub
scas
ret
fs
jb
stos
or
jbe
mov
loope
jne
aam
imul
add
movsl
jno
test
and
xor
jmp
dec
pop
test
xor
bound
in
pop
rol
push
pushf
les
jp
jnp
daa
push
lds
jbe
inc
jecxz
adc
std
inc
xor
add
push
mov
ss
dec
loope
arpl
imul
mov
lods
dec
jne
add
adcl
adc
jae
sbb
push
add
jmp
and
cwtl
movsl
fucomp
out
test
out
cmp
fistl
jl
sbb
mov
fs
testb
out
push
out
mov
pop
call
std
movsl
push
mov
mov
out
lea
add
movsl
and
push
xchg
int3
pop
cltd
and
xchg
pop
insl
lret
aad
repnz
pop
dec
lret
out
dec
dec
clc
jno
jnp
or
mov
add
pop
mov
js
mov
movsl
cmpsl
push
adc
sahf
jae
sbb
jle
mov
pop
cmc
xchg
sub
adc
xor
push
in
sbb
fwait
inc
xor
je
dec
repz
mov
jo
cs
fmull
sbb
mov
out
ret
inc
or
xchg
popfw
test
dec
inc
xchg
call
lds
test
stc
xchg
push
pop
xchg
fdivrl
and
addr16
and
test
and
sub
push
imul
dec
ret
mov
movb
inc
psubw
mov
or
outsl
popa
mov
mov
jecxz
dec
mov
inc
sarb
jbe
mov
dec
cli
jmp
jg
fs
mov
loop
push
pop
pop
scas
pushf
and
dec
pop
mov
insl
inc
dec
mov
frstor
dec
ds
dec
lret
addl
addl
xor
sbb
pop
subb
jmp
jbe
ret
test
pop
xchg
jg
mov
ds
into
popa
mov
ret
dec
js
mov
and
pusha
dec
shl
in
jge
inc
int
inc
push
lods
in
fcoms
dec
pusha
loopne
inc
pop
ja
cli
and
sbb
cld
mov
sarl
outsb
adc
add
xchg
and
mov
repnz
fiadds
pop
xor
decl
fdivrl
inc
jae
and
cmp
mov
aad
push
adc
negb
cmp
dec
or
mov
sti
lods
jge
cli
xor
orb
adc
push
out
mov
dec
std
dec
sub
pop
jbe
adc
mov
cmpsl
outsl
add
xchg
jle
dec
lods
test
dec
das
inc
js
adc
scas
mov
push
outsl
adc
push
jmp
mov
jle
mov
into
and
fucomip
lods
mov
test
lahf
mov
movsb
add
ret
stos
pushl
aas
mov
mov
sbb
xchg
and
popf
ja
inc
push
adc
out
pop
loopne
stos
pop
fidivrs
icebp
je
or
out
or
call
into
out
insb
movl
rorl
fs
sbb
cmpsb
inc
das
push
fisubrl
movsb
mov
cwtl
push
sbb
sub
pushf
ret
adc
mov
mov
pusha
adc
fsubr
jb
adc
or
loopne
adc
int3
out
jl
cmc
mov
or
stc
mov
daa
in
mov
in
pop
add
jmp
and
cmp
les
into
movl
jge
mov
out
xor
test
sbb
adc
jmp
and
dec
addr16
sti
push
in
imul
sti
inc
xor
lret
mov
addr16
lret
xchg
and
notl
lods
xchg
clc
lret
xchg
xor
xor
or
call
scas
pop
sbb
rorb
jne
cs
ds
pop
mov
sub
addl
mov
or
mov
cmpsb
pop
add
aaa
sbb
mov
stos
stc
mov
testb
cmp
xor
out
cmpl
add
sbbb
mov
push
pop
inc
cltd
xchg
xor
cmp
sbb
adc
out
out
movsb
scas
jne
pop
and
inc
fwait
sbb
adc
ficompl
cs
ja
mov
jp
push
sub
stc
xor
or
ss
mov
mov
xor
sub
push
iret
xor
sbb
jle
jmp
fs
test
lods
sarb
inc
movntq
out
xor
jmp
cli
add
inc
ficomps
lods
hlt
mov
mov
sbb
jae
push
inc
je
leave
dec
and
dec
ds
mov
sbb
pop
and
movaps
mov
stos
call
add
cmpb
aam
mov
cmp
jp
xchg
int3
nop
in
mov
fbld
jne
mov
adc
cs
shll
jle
inc
mov
and
lds
cld
in
xchg
loopne
or
xor
adc
pop
lret
hlt
stc
add
loope
lea
rorb
int
mov
mov
jl
push
sbbb
xorl
lods
inc
jl
cmp
test
sub
or
pusha
lods
outsb
or
hlt
inc
push
fs
in
mov
ds
insl
lds
xor
mov
add
and
pop
idivl
adc
sub
mov
leave
mov
add
inc
jo
jb
sub
ds
pushf
mov
sahf
pop
fdivrl
add
mov
pop
inc
xchg
cmp
pop
mov
jno
xor
xchg
ja
enter
sbb
adc
jbe
movl
popa
jbe
jg
xor
test
pop
mov
outsb
daa
scas
ds
sub
mulb
adc
cmp
cmp
and
int
cmp
aaa
rcl
push
dec
jecxz
push
pushf
test
cmpb
test
cltd
push
call
xchg
inc
hlt
rol
adc
and
call
pop
jae
jbe
sub
dec
lock
mov
scas
or
movsb
xor
pop
cmc
xor
or
mov
fisubl
andnps
mov
mov
adc
jmp
enter
stos
test
ficoml
and
adc
out
jbe
lret
jb
adc
into
cld
loop
das
test
fdiv
call
daa
in
ficompl
push
fdivrs
inc
call
sarl
shlb
sbb
mov
mov
fiaddl
xor
cmpsb
jo
xchg
pop
mov
outsl
or
stc
sub
jmp
jno
inc
rorl
or
mov
ljmp
lods
push
xor
in
movsb
out
in
sbb
sbb
pop
out
adc
pop
imul
insb
rcr
fiaddl
movsb
jbe
mov
icebp
rcr
imul
xor
aam
stc
aam
popa
cmp
xor
add
loop
in
fmul
mov
mov
or
in
mov
push
mov
orl
jle
or
sbb
mov
fistl
xchg
xchg
hlt
sub
lret
fldt
mov
andb
daa
pop
jge
dec
dec
add
test
scas
fwait
jp
cmpsl
in
sar
imul
xor
sbb
pusha
add
cmc
push
mov
xchg
popa
and
lcall
pusha
repz
call
jo
dec
pop
pop
das
dec
mov
cmpsb
and
adcl
mov
mov
xor
lds
pop
out
mov
sbb
in
in
cmpsb
dec
inc
je
cmp
inc
test
push
aas
aam
je
sarb
pop
mov
dec
cmpsb
ret
dec
jns
mov
cmp
mov
sbb
cmp
lea
and
mov
add
dec
bt
fs
xchg
mov
mov
out
sub
inc
sahf
je
xor
and
mov
xorl
movsl
jp
push
fmul
repnz
std
fisttps
mov
inc
leave
add
ja
lds
stc
jmp
mov
mov
jo
loop
jecxz
jbe
sbb
inc
add
insl
ljmp
loop
xchg
mov
dec
cmc
cwtl
clc
mov
pop
and
sahf
jg
shll
rorb
sub
ret
mov
mov
call
cmp
mov
add
cld
mov
or
cmp
into
filds
shlb
jae
push
inc
pop
sub
lret
mov
scas
sar
push
mov
pop
jae
push
in
dec
test
test
nop
out
stos
mov
mov
push
add
xor
mov
xchg
pop
add
rorl
mov
mov
and
add
jecxz
lret
sub
sbb
jno
or
pop
mov
pop
xor
mov
pop
int3
cmp
dec
jbe
inc
gs
jnp
dec
sbb
test
sub
insl
sahf
mov
or
ja
stc
add
pop
cmp
insl
or
cmp
cli
notb
pop
add
pusha
add
xchg
pop
lods
aad
clc
cmpsb
rorl
xchg
imul
rolb
push
mov
and
repz
fisubs
mov
es
sub
xchg
cmc
sti
ret
mov
add
aas
pop
xchg
or
flds
adc
scas
adc
outsl
insl
jbe
xchg
xchg
shl
notb
inc
adc
ret
or
mov
mov
cmp
roll
jae
sub
cmp
mov
xor
cmp
add
cmp
aas
sbb
dec
adc
loopne
jge
cli
fcmovnb
jle
leave
sarb
sahf
mov
inc
popa
xchg
cltd
faddl
loope
pusha
scas
cwtl
mov
loope
mov
leave
dec
out
pusha
rol
es
sbbb
mov
scas
sub
fsts
fcoms
lods
xor
sub
cs
and
mov
cmp
fcompl
xchg
cmpsb
and
push
sbb
enter
fwait
lea
stos
jg
mov
inc
mov
in
add
sub
outsb
mov
repz
jae
pop
arpl
test
jo
jmp
fistps
and
test
out
or
mov
xchg
add
sbb
js
and
js
dec
cli
or
roll
push
mov
sbb
jo
dec
pop
enter
mov
push
cmp
lcall
into
loope
sbbl
movsl
lds
rcr
fdivr
push
mov
es
roll
ja
mov
or
add
sub
mov
addr16
xlat
out
test
out
sub
xchg
dec
push
xor
mov
int3
push
jns
loopne
or
sbb
lods
xchg
ret
cmpsb
push
xor
inc
sub
nop
dec
adc
mov
cmpsb
lahf
mov
arpl
adc
mov
daa
fistpll
jbe
xchg
arpl
mov
mov
sub
or
pop
scas
arpl
cli
aas
mul
cmp
inc
aad
sbb
ljmp
push
push
and
repz
mov
dec
jbe
cwtl
add
ljmp
pop
sub
aas
fildll
std
jae
pop
ds
addps
mov
iret
int
pusha
and
je
das
xor
jnp
jle
push
push
lods
pushf
in
dec
xor
jae
mov
sahf
fnstcw
std
pusha
movb
xchg
stc
imul
sub
cltd
mov
jl
das
mov
pop
ljmp
mov
inc
shll
push
cs
mov
shrl
ljmp
cmpsb
mov
mov
out
out
add
and
adc
mov
inc
pusha
popf
cmp
pushf
cmp
leave
gs
dec
inc
push
mov
out
ja
mov
mov
xchg
jmp
aam
pop
ret
lods
daa
and
addr16
dec
test
enter
pop
and
or
jp
std
cmp
ficomps
pop
sahf
scas
dec
into
stos
lods
or
lods
and
jne
push
dec
mov
mov
xchg
inc
xlat
jo
nop
mov
insl
lock
shlb
mov
dec
int3
xor
and
rcl
add
push
adc
dec
mov
mov
gs
jg
mov
sub
ror
das
lahf
dec
loop
flds
gs
iret
in
lahf
sub
subb
in
iret
cwtl
add
dec
inc
pop
mov
jno
stos
cld
adc
mov
dec
das
xchg
adc
xchg
xor
mov
mov
jno
push
clc
outsl
fwait
mov
cmp
and
add
in
call
lahf
out
movd
xorl
std
rclb
lock
gs
mov
int
xor
fists
lcall
repz
xor
inc
push
xchg
je
mov
fldenv
pop
imul
push
cmp
les
dec
mov
movsb
inc
jmp
cmp
out
jmp
bound
stc
call
stos
roll
sbb
in
enter
mov
lret
pop
add
dec
dec
subl
shl
into
jle
cld
sbb
cmp
insb
cltd
and
daa
pop
adc
mov
inc
sbb
adc
jle
out
clc
mov
imul
test
xor
pop
outsb
pop
jo
scas
pusha
mov
ljmp
mov
movsb
mov
or
scas
lods
add
or
or
push
clc
mov
ja
dec
cmp
pop
xor
imul
xchg
jno
mov
out
loope
jg
enter
pop
sub
cmpsb
sbb
scas
addr16
add
je
mov
fmull
sbb
into
jne
loop
push
mov
xchg
addr16
inc
push
mov
in
mov
in
loope
mov
enter
push
dec
call
xlat
adc
test
mov
push
mov
shr
push
loope
cmp
or
push
sbb
lods
xchg
cmp
lea
dec
jae
sbb
ret
xchg
call
iret
rorl
jb
jg
adc
movsb
ss
or
sar
mov
adc
cli
push
and
inc
mov
pop
or
inc
sarb
sbb
mov
pop
xor
aam
scas
lret
das
jns
sahf
jge
xchg
mov
dec
gs
test
loop
pop
sbb
repnz
stc
xor
push
mov
call
mov
xchg
jo
pop
or
icebp
xchg
sbb
scas
cmp
pop
sub
pop
into
mov
push
cmpsl
dec
pcmpeqw
xor
insb
inc
pop
fbstp
popa
ss
cmpsl
mov
inc
lock
dec
rolb
loopne
mov
pop
cmpsb
scas
js
mov
nop
cmp
push
xor
mov
jbe
aas
add
lcall
pop
es
pop
aam
lods
jmp
sbb
inc
or
dec
test
lock
loopne
ljmp
enter
pop
mov
xchg
out
addr16
add
aas
and
sbb
scas
or
gs
push
jle
jl
mov
dec
movsb
jb
xchg
mov
push
push
pop
pop
xorl
popf
fs
pop
jmp
or
push
sahf
xchg
repz
pop
jno
rol
rorl
fbstp
cli
outsb
mov
mov
inc
xchg
pop
mov
notb
mov
adc
xor
test
xchg
stc
jnp
cmp
dec
mov
add
lea
adc
mov
je
mov
pop
mov
push
sbb
js
outsb
insb
repz
mov
mov
repnz
xor
ds
ja
roll
push
dec
xchg
jo
push
mov
lahf
ja
push
adc
mov
leave
xchg
sub
mov
movsb
mov
inc
jb
push
daa
rol
mov
ror
and
sbb
out
cmp
sbb
fidivs
sub
dec
or
mov
adc
cmpsl
hlt
fsubrp
test
inc
inc
cmpl
cmp
xor
scas
cmpsb
xchg
fidivs
lods
xor
hlt
mov
push
arpl
inc
push
int
pop
mov
test
adc
ljmp
bound
std
add
mov
cmpsb
push
in
enter
xchg
xchg
insl
xchg
add
jne
aad
xlat
sub
decb
or
aas
es
aaa
imul
and
pop
fidivl
in
jo
dec
adc
rorb
jns
inc
xor
fildl
pop
inc
out
and
sub
push
add
ret
pop
fisttpll
outsl
xor
mov
lds
test
dec
lods
jnp
jnp
mov
mov
mov
mov
dec
std
sub
cld
cmpsb
test
popa
mov
push
fsubrl
aaa
int
xchg
fwait
mov
add
push
cwtl
xchg
mov
into
insb
ret
and
dec
call
ljmp
sbbb
push
nop
cmp
aad
pop
mov
dec
mov
mov
into
xchg
sahf
outsl
jne
scas
sbb
ret
xor
jl
jmp
mov
mov
cmp
notb
les
outsl
test
lea
outsb
leave
out
js
sbb
js
es
sub
cld
mov
xor
push
movsl
pop
scas
fisttpl
push
sahf
in
shrb
push
das
xor
pop
xor
cld
lods
out
dec
movl
xchg
nop
imul
ret
cli
lods
push
inc
pop
dec
inc
cli
std
sub
inc
lcall
jne
cmpsb
xchg
mov
jae
add
mov
xchg
add
test
repz
dec
xor
pop
into
adc
mov
xor
pop
test
fcmovnb
push
xchg
jge
xor
sub
cmp
cmpsl
pop
mov
out
xor
rcll
mov
popa
shrb
shr
stos
scas
cmp
and
fdivr
jo
add
xor
adc
std
popf
pop
inc
int
push
cmpsb
movsl
pop
inc
xchg
jb
and
or
mov
std
jo
cmp
int3
pop
jo
or
imul
or
pusha
sub
cmp
jle
out
push
sub
cmp
fistps
loop
js
cmp
aam
dec
ljmp
xlat
out
jno
lret
inc
mov
js
das
data16
xor
roll
test
jge
pusha
jnp
push
test
js
movsl
mov
jae
sub
imul
lock
inc
cld
push
leave
mov
sbb
push
mov
roll
xor
aaa
adc
dec
scas
outsb
jne
imul
mov
jge
add
lret
or
jecxz
adc
icebp
ret
adc
or
mov
xchg
fisubl
pop
xor
ljmp
ffreep
aaa
push
xlat
pop
test
sub
mov
and
xor
icebp
adc
and
push
ret
mul
out
roll
mov
lock
or
mov
xorb
int
jo
push
sbb
xor
sbb
and
and
xchg
fucom
shl
sub
adc
js
cmp
xlat
out
xchg
or
pop
pop
and
outsb
pop
mov
cs
lods
push
push
andb
add
cwtl
loopne
std
xchg
add
sub
fidivl
mov
mov
int3
mov
mov
ja
xchg
ja
and
jecxz
mov
ficomps
cwtl
imul
sub
imul
pusha
xchg
lock
divl
cwtl
and
out
aas
mov
cmp
stos
cli
xchg
rcrl
pop
fcoml
lock
sub
add
jmp
xor
mov
test
sbb
pop
xchg
jno
insl
aas
add
scas
push
movsb
loope
fcomps
dec
cltd
cmp
push
mov
xchg
int
add
inc
sbb
orb
push
mov
cmp
inc
dec
sub
xor
jne
iret
sub
xchg
mov
mov
mov
inc
cmpsl
xor
jg
cmp
pop
es
mov
xchg
iret
or
outsb
pop
cltd
jns
adc
cmpb
xchg
pop
dec
mov
mov
getsec
inc
xchg
xor
in
lret
lahf
into
jo
dec
jecxz
mov
cwtl
shr
imul
mov
ficoml
dec
rcr
mov
xlat
sub
jo
mov
aam
sub
xor
pop
fwait
lcall
cli
mov
std
test
push
mov
cmp
out
loop
inc
stos
stos
lahf
in
int
mov
pop
xor
cmp
les
ret
das
dec
incl
or
push
sti
cli
xor
repz
gs
and
mov
push
out
aam
mov
imul
adc
stc
push
pop
mov
mov
lods
arpl
shll
push
mov
cmp
mov
incb
ret
jne
repz
das
jle
jo
mov
xorl
pop
cli
inc
sub
rclb
arpl
push
mov
push
push
scas
repz
mov
and
cld
and
and
push
idiv
es
jae
jl
sarl
in
jns
lods
test
inc
mov
push
jnp
mov
mov
insb
or
cli
jge
aas
test
sbb
push
or
fisttpl
scas
mov
notl
sub
mov
mov
aas
fwait
jl
push
insl
inc
iret
adc
or
fwait
outsl
xchg
pop
pop
in
mov
bound
sub
xor
imul
fnstenv
adc
aam
push
inc
and
lods
lds
nop
shll
jno
out
clc
sub
sub
pushf
mov
ja
fldenv
ja
adc
dec
or
push
outsb
dec
lcall
cmpsl
mov
or
cmp
shrb
xchg
fidivrl
inc
xchg
add
mov
les
adc
push
or
cmp
fisubrs
roll
repz
aad
inc
pop
or
das
cmp
inc
std
jg
mov
dec
ljmp
jecxz
cltd
sbb
out
jecxz
mov
push
mov
cmp
mov
sbb
push
iret
add
adc
jmp
data16
xor
sbb
pusha
pop
push
orl
or
pop
mov
pop
nop
xchg
outsb
xchg
das
dec
mov
in
push
xchg
adc
inc
cmpsl
jb
jle
jno
mov
jae
dec
mov
mov
inc
iret
sbb
sub
decl
std
imul
adc
jle
mov
into
int3
ds
sti
and
das
mov
mov
outsl
pushf
icebp
push
xor
rcrl
lods
rorl
add
push
shlb
cli
lea
or
inc
icebp
les
xchg
rolb
mov
cmp
and
jg
out
fsubrp
in
in
jno
or
pop
or
in
and
dec
out
sbb
mull
hlt
sub
shr
add
and
or
xor
movsl
stos
cwtl
or
push
inc
mov
mov
pop
aam
sahf
mov
sub
inc
fdivs
and
in
into
icebp
cmp
and
repz
outsl
push
xlat
inc
shr
lods
sub
out
add
push
cld
or
scas
test
or
mov
cwtl
in
test
dec
pop
scas
enter
repz
adc
jo
in
xchg
push
push
lret
xor
mov
out
dec
mov
mov
out
jbe
dec
repz
faddl
jle
ljmp
fucomip
sahf
push
es
shl
pop
fisubrl
cwtl
pop
mov
sub
cmp
pop
hlt
adc
movsb
cmp
inc
pushf
xchg
daa
sbb
push
pop
rcrb
popa
lahf
jns
inc
xor
xchg
cmpsb
push
shlb
jns
sub
mov
testb
cmc
in
mov
mov
clc
sbb
lahf
ja
js
adc
add
cmp
shlb
addb
enter
sub
in
bound
std
push
fistpl
int3
mov
pop
shl
cld
in
xchg
mov
lock
ljmp
mov
inc
cli
addr16
cmp
andl
dec
push
rcrl
lods
jecxz
clc
mov
loopne
mov
jmp
test
sbb
loop
cmp
nop
sar
pop
in
outsb
push
call
xlat
out
sub
sti
add
idivl
mov
inc
daa
jns
fistl
cmp
xchg
arpl
and
mov
scas
lahf
and
fdivl
mov
test
in
sub
ficomps
fcmovnb
lods
mov
test
int3
sbb
add
aaa
test
push
imul
jo
insb
or
sub
lret
out
sbbl
imul
cs
rorb
stos
adcl
jecxz
addl
imul
insb
push
dec
cwtl
insl
mov
shrl
and
or
data16
ja
push
xchg
in
loopne
test
xor
sahf
xor
mov
rcrl
std
movsl
push
popa
out
bnd
dec
add
jae
aam
inc
sbb
xchg
mov
pop
fldenv
lods
or
xor
sbb
popf
and
add
cmp
sub
pop
fldcw
gs
pop
stc
adc
mov
int3
repnz
mul
movsl
imul
jle
inc
das
push
int
adc
stos
mov
daa
jns
dec
scas
dec
out
ficoml
lahf
in
sub
xchg
into
arpl
push
jge
lret
ljmp
ja
imul
jbe
push
mov
jmp
xchg
mov
repz
sub
adc
and
push
jmp
fcmovb
shrb
push
int3
xor
dec
sub
mov
inc
cmp
sub
push
and
mov
lods
xchg
push
subl
add
push
xchg
movsb
call
outsb
mov
std
sub
jg
mov
jne
hlt
js
push
dec
jle
xor
std
jmp
cmpsb
dec
pop
in
push
call
imul
inc
mov
mov
hlt
lods
lahf
sub
pop
cmp
js
mov
sbb
push
sbb
or
in
decb
lahf
xchg
sbb
loope
cmp
dec
dec
out
enter
popf
in
imul
or
push
lods
stos
std
cmpsl
sub
imul
xlat
add
ja
jo
fidivs
mov
rcll
clc
leave
cmp
negb
mov
sbb
jb
es
les
aam
out
fsubs
mov
push
popf
sub
movsl
dec
pushf
repz
cwtl
sub
jp
divl
pop
jno
lret
stos
call
and
dec
lea
jp
jnp
add
es
mov
mov
push
shr
rolb
ffree
pop
ret
xchg
iret
push
xchg
sti
jecxz
pop
cwtl
lods
data16
mov
mov
test
ja
outsl
lods
imul
xchg
aad
nop
nop
fisubs
dec
aad
adc
inc
adc
clc
dec
sub
sbb
xchg
je
aas
sbb
and
lock
in
dec
mov
mov
push
xchg
push
in
cld
loop,pt
sbb
jp
mov
enter
cltd
pop
cmp
cmp
sub
xor
xchg
call
inc
jecxz
or
repnz
xor
scas
jne
inc
outsl
mov
cmp
jmp
push
push
jle
inc
add
sbb
add
xchg
shl
xchg
lods
mov
and
push
fwait
iret
outsl
insl
push
mov
mov
aam
adc
jb
loop
movl
shrb
rclb
push
dec
push
lahf
jp
cmp
mov
adcb
stc
or
lods
xchg
mov
loop
push
pop
mov
sub
imul
push
jnp
mov
sub
pop
xor
testl
sub
lahf
or
cwtl
fdivr
pop
or
cltd
pusha
or
lods
aad
inc
inc
ret
fdivrs
popf
mov
cmp
pop
sbb
jmp
cmp
andb
or
cwtl
mov
push
mov
mov
jl
xchg
xchg
xchg
jl
in
js
ret
repz
inc
push
ret
mov
fs
push
fcoms
stc
inc
leave
push
std
cwtl
or
in
bnd
gs
add
orb
cmp
out
dec
mov
jns
pop
test
or
iret
std
mov
iret
sub
clc
adc
push
cmpb
addr16
mov
sub
fcompl
es
repz
xor
clc
pop
inc
xchg
cld
rclb
or
lahf
mov
int
cmp
dec
movsb
xchg
or
mov
pop
mov
dec
mov
test
in
cmp
dec
loopne
push
shlb
or
push
add
hlt
in
add
push
jae
out
hlt
jb
dec
clc
add
inc
movsl
notl
inc
push
iret
out
inc
cs
dec
push
jl
in
sub
cmp
sahf
call
mov
into
mov
mov
pop
outsb
fwait
adc
jecxz
sbb
jae
lods
test
jb
movsl
testb
dec
cltd
pop
stc
mov
cmp
add
jge
or
sub
hlt
incb
dec
push
xor
aam
stc
hlt
repz
dec
fwait
nop
lds
icebp
inc
stos
fs
xchg
popa
adc
loop
ss
popf
sarb
jecxz
mov
mov
aam
decb
ret
lret
push
jecxz
ljmp
mov
outsl
js
pop
cmp
pop
push
pop
sbb
fucomi
pop
inc
dec
push
xchg
inc
aam
stos
mov
or
in
xchg
loop
jne
ret
adc
fnsave
or
mov
movsl
sbb
loop,pn
fcmovb
xchg
das
dec
outsl
std
out
imul
pop
aaa
sub
jb
lret
sub
adc
adc
repz
testl
ret
clc
lods
in
jp
sbb
mov
xor
gs
jno
rorb
push
jnp
mov
add
movsb
push
jle
neg
fldt
pop
incb
sahf
mov
hlt
jo
daa
enter
inc
jle
sub
jge
mov
fstl
fistpl
jl
dec
mov
cmc
sbb
xor
jb
mov
xlat
and
cmc
mov
add
xor
rol
mov
pop
pop
icebp
xor
push
mov
mov
paddsw
cmp
out
add
push
push
xor
notl
adc
pop
gs
imul
iret
aam
outsb
push
push
cmpsl
push
pop
repz
repz
mov
cmp
rol
dec
dec
ss
cmp
cmpsb
cmp
push
out
dec
lea
aas
sbb
inc
mov
adc
adc
push
jnp
inc
cmc
lret
lret
aam
addl
push
mov
xchg
scas
lods
pop
cmp
pusha
sub
push
jae
inc
xor
mov
xchg
xor
insb
inc
arpl
fidivs
add
xor
jns
pop
or
out
js
mov
cmpsl
repz
shrb
xchg
in
fcmovb
icebp
cld
pop
int
mov
shl
inc
xlat
out
dec
dec
cli
mov
sahf
fst
xor
daa
jmp
loop
cld
fidivrs
fisubrs
xchg
enter
in
push
scas
and
xlat
add
lcall
rcr
sbb
stc
lahf
in
xor
lahf
mov
mov
movsb
out
or
ficoml
inc
mov
push
xor
mov
adc
cwtl
fldcw
cltd
repz
lahf
lea
stos
or
xchg
push
cld
test
jo
sub
mov
imulb
mov
lock
mov
pop
in
jge
bound
fisubrl
xor
cwtl
sbb
jmp
dec
movsb
cmp
push
mov
dec
lahf
in
pushf
cmpb
das
je
mov
and
jecxz
mov
js
jmp
xchg
pusha
pop
fisubl
xchg
aas
mov
inc
mov
push
pop
adc
in
mov
adc
xor
lock
mov
xor
xchg
mov
cmpsb
or
ss
mov
fcoms
pop
ret
mov
xlat
aas
dec
fstps
scas
push
pushw
out
push
xchg
ja
rolb
sub
cwtl
or
push
xchg
sub
imul
pop
and
pop
mov
and
jmp
xor
aaa
nop
pop
testl
scas
mov
push
mov
sub
jns
shlb
cmp
stos
jns
shlb
adc
push
fistps
outsb
push
shl
pop
imul
xchg
lcall
push
or
dec
mov
sub
repz
mov
lods
and
imul
ss
js
jecxz
push
xchg
pop
xchg
bound
push
xor
sub
mov
adc
xor
sbb
push
adc
cmp
sub
lahf
xchg
inc
inc
mov
test
mov
in
lods
aas
sahf
xchg
xor
pop
push
int3
jnp
cltd
jmp
adc
test
stos
pop
scas
addr16
sbb
cld
popl
mov
mov
fcoml
movsb
cmp
push
sbb
or
lds
xchg
pusha
jg
test
rolb
les
out
sbb
mov
mov
fnstcw
mov
inc
in
xchg
pop
es
rcrb
dec
pop
pop
and
lods
and
inc
cmpsb
enter
xor
and
fbstp
xchg
enter
xor
bound
lcall
xor
push
sub
inc
repz
mov
popa
mov
outsl
mov
lahf
fldpi
out
pop
mov
icebp
addb
test
insb
add
imul
jne
or
test
test
out
cmp
jns
xchg
pop
mov
add
push
jmp
push
call
jle
mov
cmp
push
insl
fsubrp
std
xchg
mov
imul
scas
sahf
scas
push
outsb
sub
mov
addr16
xor
das
pop
xchg
inc
add
sub
push
cld
aad
sub
dec
cmc
pop
or
inc
xlat
sahf
mov
shl
mov
out
icebp
jp
jbe
sbb
lods
mov
outsl
lods
jae
sub
adc
xchg
add
xchg
push
cmpsb
shrb
out
out
cmp
loopne
jmp
cld
mov
jnp
inc
gs
inc
pop
fmuls
leave
xchg
je
aaa
pop
pop
sbb
fwait
or
and
data16
cmpsl
jbe
sub
xchg
in
stos
mov
jle
cs
jbe
xchg
out
lret
imul
inc
xchg
movsb
pop
test
dec
popf
jmp
cmc
and
addr16
lahf
inc
push
sbb
add
adc
sarl
fwait
cmpsb
addr16
lods
xor
aas
push
and
sbb
test
stc
into
lods
arpl
jmp
sub
or
dec
sbb
and
jbe
scas
repz
mov
and
sbb
mov
clc
movb
into
push
and
cmp
mov
mov
xchg
insl
dec
das
lahf
sub
mov
and
int
cmp
pop
sbb
push
fcomps
in
add
inc
push
xor
decl
aas
sbb
testl
arpl
mov
and
ret
add
rcrb
test
jp
rorl
mov
arpl
rclb
cmp
popa
sti
add
aaa
bound
fists
xor
pop
pop
xchg
inc
lods
repz
mov
pop
insb
ffreep
lds
js
pop
fwait
adc
je
and
hlt
cmpsb
pop
pusha
pushf
xchg
push
arpl
sarb
mov
popf
icebp
pop
sbb
mov
xchg
aas
mov
push
mov
mov
int
sub
out
or
push
jecxz
adc
cld
addl
sub
adc
lods
pop
dec
pusha
sti
xchg
mov
clc
push
fs
loop
dec
jp
addr16
mov
pop
inc
inc
jge
pusha
jne
mov
enter
mov
bound
adc
shrd
xchg
push
mov
shl
dec
sahf
stos
paddq
pop
faddl
notl
ret
ret
pop
and
sbb
lea
xchg
clc
dec
sbb
lcall
mov
decl
mov
jo
insb
mov
les
mov
and
or
sub
imul
add
or
cmp
push
inc
add
aaa
adc
pop
js
add
out
push
dec
adc
inc
fbstp
jle
rcrb
pop
mov
pop
push
imul
or
popf
inc
enter
andl
clc
jmp
add
out
out
mov
and
jns
sbb
mov
in
jp
pop
inc
push
xchg
cltd
pusha
adcl
cmpsb
xor
mov
in
mov
dec
ss
out
call
jne
and
jmp
cmp
repz
sub
test
push
adc
leave
syscall
mov
nop
lds
jge
out
xlat
lds
mov
cmp
mov
xor
inc
sti
out
pusha
jb
sahf
adc
fwait
pop
jg
push
cwtl
xchg
leave
mov
ret
clc
call
into
jno
lea
test
xor
and
test
adc
mov
pop
cmpsb
dec
xor
jge
pop
aad
lret
inc
cmp
jnp
xor
adc
or
dec
jmp
cld
xchg
cltd
fcomps
ja
push
aaa
mov
fldl
je
xor
ds
mov
cmp
cmpsl
add
xor
jbe
stos
and
das
cwtl
fwait
mov
clc
lret
dec
adc
frstor
inc
inc
leave
xchg
adc
dec
xchg
sbb
xchg
mov
adc
xchg
push
or
in
cmp
pop
lcall
mov
inc
daa
and
cmc
out
es
cltd
inc
adc
je
xor
insb
imulb
aam
outsb
mov
mov
es
cmp
xchg
lret
jns
test
xor
cmp
lea
arpl
repnz
pusha
mov
sbb
aas
cwtl
pop
imul
jno
inc
cmpsl
xor
cmpsl
and
push
lcall
hlt
out
aad
push
out
popf
mov
popa
adc
dec
out
push
adc
inc
adc
test
xor
rcll
xchg
leave
jnp
test
adc
int3
lahf
push
sbbl
and
push
jle
sbb
xor
mov
pusha
push
lock
jnp
fimull
lret
or
push
push
push
cmp
enter
mov
push
into
es
lcall
mov
dec
rcr
jbe
ret
mov
sub
getsec
jecxz
movsb
jg
cmp
daa
adc
in
int
imul
mov
pop
idivl
iret
and
loopne
out
xor
inc
xchg
das
pop
in
scas
adc
mov
cmc
fcoms
lret
jl
inc
arpl
adcb
imull
fiaddl
je
es
rclb
dec
insb
enter
jb
dec
push
repz
push
push
cmc
pop
sub
test
popa
pop
mov
pop
xchg
or
cmp
outsb
xor
pop
pushf
aad
std
ljmp
imul
test
bound
inc
hlt
xor
jbe
mov
add
sub
mov
mov
mov
jl
and
push
sbb
mov
sub
sbb
xor
lret
lds
cmp
pop
mov
orl
mov
mov
adc
clc
sbb
jl
push
inc
in
cmc
sti
bswap
pop
cmpsl
addb
cmp
arpl
mov
nop
fidivl
push
and
int3
sbb
xor
or
loopne
pushf
das
mov
sub
lds
dec
cld
js
xchg
or
adc
pusha
fnsave
rorb
jge
push
test
push
jbe
test
sbb
push
pop
pop
mov
cmp
in
mov
fcmovbe
setp
shr
fildl
dec
cltd
dec
loope
mov
cmp
add
xchg
jmp
sub
inc
xchg
stc
mov
pop
mov
ja
mov
ret
in
aas
insl
mov
cmpsb
cmp
mov
inc
xchg
lea
jno
das
dec
xchg
sbb
mov
sbb
sbb
lods
es
and
dec
jmp
dec
xor
cmpsl
xor
push
fnop
mov
mov
fists
rcr
push
jns
xor
scas
xchg
adc
pop
jns
std
jns
fmuls
ss
jge
mov
add
aas
cli
and
push
jle
xor
outsl
cmpsl
out
mov
sub
in
and
out
mov
sub
movsl
xor
add
rorb
stc
imul
cmp
fwait
jnp
cltd
push
push
xor
add
in
sahf
ret
mov
dec
int
xor
out
loop
add
jno
sbb
lret
add
ret
jmp
jno
mov
lcall
cmp
hlt
pop
xchg
dec
cmc
push
fs
sahf
cli
jg
cmp
pop
dec
movsl
out
cld
sub
mov
pushf
mov
mov
add
fists
ja
orl
sahf
mov
repnz
inc
leave
push
sub
rorb
mov
mov
xchg
fisttps
sti
shl
imull
sub
into
scas
dec
mov
outsb
lahf
mov
push
cmp
push
fs
fs
adc
popa
push
xor
and
jbe
cmp
mov
lret
arpl
xchg
cld
insl
mov
test
cmp
repnz
outsb
loopne
jo
fstpl
xor
cmc
mov
inc
loop
les
sahf
dec
retw
mov
cmp
out
xchg
icebp
lahf
mov
sbb
sbb
mov
call
push
pop
mov
mov
movsb
movsl
sub
or
dec
jb
ds
mov
sub
xor
xchg
xor
mov
push
jle
xchg
adc
divl
daa
pusha
lds
sbb
cmp
stos
mov
je
sbb
test
xchg
sbb
xor
pop
push
je
dec
sub
adc
dec
loop
loopne
pop
mov
lds
xchg
and
cmp
jo,pt
pop
add
mov
cmp
push
movsl
xchg
pusha
fwait
lock
lret
mov
aas
sub
ss
andb
cld
sbb
dec
cltd
aam
or
loop,pn
out
nop
pusha
mov
sti
repnz
mov
adc
daa
xchg
mov
push
imul
xor
ret
and
dec
loope
and
js
fimull
inc
mov
jg
ljmp
pusha
aad
add
lcall
xchg
test
or
sahf
mov
sbb
pop
in
xor
popf
xchg
sysret
cmp
dec
fcompl
jge
aad
fs
mull
fwait
das
jb
mov
pop
cmp
enter
add
fdivs
repz
in
test
mov
jo
jno
ss
mov
lret
jmp
inc
fiadds
popf
dec
loop
cmp
or
adc
scas
sub
mov
jbe
shlb
sub
fistpll
dec
mov
sub
xchg
push
pop
mov
jp
pop
sbb
xor
sub
lcall
ljmp
in
inc
adc
push
inc
neg
push
inc
dec
shrb
popf
mov
pusha
xchg
cwtl
outsl
cmp
sub
test
inc
mov
lahf
in
iret
lret
add
push
pop
and
cmpsb
dec
fdivrl
xchg
inc
stos
add
lcall
xchg
aam
sbb
mov
loop
insb
dec
ret
and
sbb
shl
in
and
es
sbb
sbb
ficoml
jecxz
inc
ljmp
hlt
arpl
lahf
jmp
push
test
pop
add
iret
inc
loopne
pusha
in
or
in
sub
dec
shl
pop
xchg
jb
push
mov
mov
das
mov
pop
push
jae
icebp
adc
and
jmp
and
int
mov
xchg
adc
dec
push
out
mov
push
mov
sub
and
test
aad
aad
subb
cwtl
push
jno
outsl
and
jmp
je
dec
add
sti
xor
fisttps
adc
cmp
imul
call
ss
lret
or
pop
pushf
aam
imul
pop
out
aas
xchg
xor
aam
mov
insl
fs
dec
dec
daa
outsl
inc
or
cs
add
xchg
shl
into
mov
mov
sbb
jnp
mov
call
ret
jbe
ret
pusha
inc
roll
pop
adc
mov
mov
cmpsb
call
mov
sub
loopne
int3
movsl
or
jb
or
and
lahf
or
insb
inc
jne
inc
mov
mov
loop
inc
repnz
fildl
xor
add
jle
mov
icebp
aam
jl
loope
cmpsl
xor
out
call
xchg
add
jno
adc
adc
add
cmpsl
sbb
dec
and
push
rolb
inc
in
and
or
or
ret
fcoml
cmp
mov
push
dec
cmp
and
jb
jp
loopne
out
push
shl
pusha
mov
mov
shl
inc
out
push
rcrl
adc
inc
add
jp
dec
inc
fnstcw
test
les
bnd
addr16
sbb
jmp
mov
xor
aas
insb
add
sbb
in
gs
out
push
pop
push
aam
adc
out
into
add
cmp
inc
cmpsl
sub
mov
clc
cmp
add
lret
push
pushw
int
movsl
ds
pop
xlat
clc
xchg
mov
fsts
unpckhps
pop
inc
and
xchg
insl
loop
fbstp
repz
fidivrs
out
test
popa
aam
mov
fs
imul
imul
cmc
sbb
dec
pop
push
repnz
adc
call
hlt
xchg
pusha
or
repz
and
insl
popf
jge
xchg
xor
and
sub
jb
mov
subb
sub
mov
xchg
mov
pop
pop
xlat
mov
mov
mov
loope
jns
xchg
jns
movsl
and
push
ret
mov
int
cltd
cmp
jnp
ss
mov
gs
loop
push
es
xor
add
fs
xchg
rorb
mov
shll
adc
loopne
cli
test
adc
icebp
mov
jbe
adc
pop
mov
imul
push
test
sub
adc
xor
fidivrs
sahf
jecxz
add
or
lahf
dec
push
cs
xchg
js
call
xor
loop
fisttpll
dec
and
mov
insl
shl
xchg
mov
ret
aad
imul
add
aas
cwtl
aaa
and
add
sbb
out
xor
and
jno
out
lods
popf
popl
and
jg
mov
andl
repnz
push
mov
inc
loop
shll
repnz
inc
movsl
mov
sahf
or
stc
sub
in
pop
popf
repz
outsb
cmp
mov
sbb
test
adc
add
loopne
movsb
xchg
lods
ja
cltd
subb
call
adc
mov
movsb
out
push
inc
hlt
cmc
jne
xchg
dec
test
insb
lds
and
mov
xchg
es
xor
iret
xchg
ljmp
and
lea
lds
cmp
mov
add
gs
stc
or
icebp
cmp
aas
push
push
inc
pop
hlt
jb
testb
mov
push
inc
adc
stos
int
aas
lret
jecxz
xlat
adc
gs
cmp
dec
jle
pushf
jno
mov
mov
stos
cmp
xchg
subl
mov
icebp
sahf
ds
mov
inc
mov
in
fistps
cmp
mov
daa
cmpsb
lds
dec
mov
lods
ret
jns
leave
xchg
sarb
xor
out
ffree
lret
test
mov
mov
je
pcmpeqw
push
mov
icebp
aad
aaa
add
mov
adcl
adc
ds
stc
inc
mov
fsubrs
test
mov
push
and
sub
add
pop
js
ja
movsb
insb
push
cli
push
push
and
pop
cmp
in
pop
or
add
adc
mov
adc
mov
fs
xor
cmpsl
pop
jae
jg
and
roll
nop
xchg
adc
stc
sub
stos
mov
jmp
adc
or
jp
mov
sub
and
rolb
mov
das
and
sbb
stos
cmc
mov
ja
lock
popf
adc
jo
pop
movsl
out
inc
cmp
sarl
mov
push
inc
adc
addl
fcoml
mov
andl
xor
out
call
push
push
repz
mov
mov
sbbb
cmp
int3
pop
repnz
dec
jae
jns
roll
xchg
test
int
xchg
sbb
cmp
jle
hlt
sbb
pop
pushl
pop
xor
adcl
icebp
orb
cmpsb
push
mov
jl
mov
mov
sub
or
in
mov
cltd
mov
mov
lcall
fadd
out
cmp
cmc
in
add
mov
mov
loopne
movsl
fcmovnb
icebp
mov
dec
sub
xor
mov
sbbl
jp
lods
jecxz
sub
repnz
mov
push
outsl
data16
sbbl
out
lods
pop
pop
jecxz
push
mov
xor
cmp
int3
mov
add
cmpsb
and
shll
js
aad
mov
stc
lahf
call
dec
outsl
mov
mov
adc
insl
jl
ret
stc
xchg
std
sub
fnstenv
xor
test
dec
loope
lahf
fstpt
xchg
insl
shll
mov
sbb
addr16
sub
addb
clc
test
mov
xchg
out
pop
xorb
sbb
pop
pusha
xor
adc
and
shll
ror
push
stos
mov
enter
cmpsb
mov
cmp
rcrb
std
fwait
ret
call
push
xchg
pop
push
cmpl
test
jecxz
mov
push
inc
push
rorb
out
sbb
subl
jge
or
fdiv
mov
imul
hlt
push
out
inc
enter
xor
or
add
je
lods
inc
mov
in
jnp
or
or
mov
fisubs
add
xchg
shr
bound
and
push
mov
xchg
mov
pushf
dec
std
sar
pop
dec
insb
sahf
enter
sti
mov
push
cmpsl
push
out
and
cmpsb
flds
or
xor
mov
jne
mov
xor
pushf
cli
mov
adc
stc
cmp
mov
pop
inc
adc
jp
adc
jno
xchg
lahf
std
inc
xor
xchg
dec
fwait
pop
add
movsl
shlb
mov
popa
dec
lahf
pop
jg
xor
push
ss
jp
adc
adc
loope
jns
rclb
ja
pop
push
push
test
out
gs
test
cltd
clc
push
add
dec
ret
les
push
xchg
push
dec
push
jge,pn
jno
ss
mov
mov
xchg
push
lock
stos
mov
pop
jne
test
push
loop
pop
test
mov
dec
jge
cli
mov
pop
adc
xchg
fs
loopne
lcall
mov
inc
add
xchg
stc
xchg
push
dec
icebp
mov
dec
mov
sub
rolb
in
xchg
out
cld
mov
fcoml
punpcklbw
mov
sbb
and
pop
loope
jno
scas
imul
inc
cltd
cli
popa
rcrb
jbe
repnz
xor
aas
add
add
fidivrl
lock
in
setp
xchg
jle
mov
mov
push
into
fidivrs
mov
out
pop
aas
adc
jl
mov
adcb
lea
or
xor
aam
out
ja
sbb
jbe
popf
fbld
pop
iret
jle
mov
sahf
cmpsl
jp
dec
data16
in
xchg
jns
dec
push
bound
mov
ljmp
aaa
xchg
adc
sbb
xor
stc
seto
popa
adc
int3
mov
or
test
mov
std
mov
pop
adc
mov
cmp
inc
mov
loop
cmp
mov
or
lahf
cmpsb
sub
pop
jge
aad
add
aaa
repnz
into
add
fisubrs
fidivl
out
aam
mov
xor
mov
or
jp
mov
mov
scas
out
jnp
and
in
xchg
dec
ja
nop
subl
dec
mov
fiaddl
je
push
loope
sarl
adc
pop
mov
jmp
scas
sub
jecxz
cmp
dec
es
popf
ret
in
mov
out
loopne
push
mov
insl
fmuls
pushf
sbb
mov
pop
adc
cwtl
leave
push
push
inc
cmp
push
cld
mov
mov
js
in
inc
lahf
pop
or
jge
jecxz
or
leave
mov
in
jg
push
sub
test
lods
outsb
scas
lret
inc
cmp
push
mov
sbb
iret
dec
cmpsb
xchg
dec
sub
enter
lock
mov
popa
int
xchg
add
push
js
add
lods
ret
or
sbb
cmpsl
sbb
and
loopne
sbb
push
std
gs
adc
aad
pop
repz
xchg
add
jne
out
and
fwait
cmpsb
cmp
addr16
iret
adc
movsb
mov
call
push
scas
add
pop
inc
psubq
push
sbb
jno
out
shr
mov
lcall
mov
push
add
jbe
movsl
fsubl
pop
lret
mov
cld
jae
jbe
fists
aas
mov
aad
rolb
jmp
fwait
mov
dec
cmp
xchg
lods
testb
fdivr
push
aas
lock
xor
jle
pop
fwait
mov
outsl
xchg
push
dec
shll
stc
or
lds
sub
fsubl
sbbl
fld
stc
clc
les
adcl
movsb
add
push
xchg
hlt
mov
sbb
mov
cmpb
gs
arpl
mov
mov
pop
jnp
jl
mov
jmp
jne
std
repz
xor
pop
sub
in
mov
out
je
jns
filds
insl
push
mov
fldl
xor
or
xchg
scas
xorl
or
leave
sub
addl
jns
or
adcb
stos
fstps
xchg
es
push
ja
in
jb
ret
orb
xlat
into
lahf
sbb
push
mov
adc
mov
repnz
jp
add
pop
xor
lea
cmp
aam
xchg
rorb
int
mov
sarb
xchg
sub
fsubrs
or
inc
adc
cmpsl
fwait
mov
shll
dec
jecxz
jge
xchg
lcall
rcrl
rcrb
pop
movsl
out
gs
or
mov
call
aaa
test
push
sub
dec
rclb
cld
sub
pop
out
js
push
aam
push
xchg
imul
out
clc
clc
in
mov
std
inc
push
lcall
out
lods
sbb
cld
adcl
sub
xor
jns
imul
add
outsb
inc
or
fistpll
rcrb
mulb
xchg
pop
in
add
mov
int
inc
sahf
push
mov
shrb
loope
and
stc
xor
je
jmp
inc
mov
xchg
or
dec
out
push
fdivs
push
incb
clc
mov
cwtl
fidivl
push
push
push
mov
cmp
lahf
sbb
or
lds
test
jb
inc
sysexit
es
pop
pop
jae
cmp
arpl
mov
mov
sub
xchg
mov
je
sub
leave
neg
inc
fldcw
sub
mov
rcr
adc
sbb
pop
xor
or
loop
icebp
push
jno
rorb
sub
push
shl
xor
mov
push
das
sbb
xor
inc
ljmp
cmp
jae
mov
push
sub
cmp
jge
jp
push
push
in
xchg
or
std
and
das
jb
or
xlat
addr16
stc
xchg
push
jg
in
mov
xchg
push
pop
sbb
sbb
pop
int
adc
adc
jg
mov
jg
mov
push
mov
mov
cmpl
push
pusha
jns
add
adc
je
fstpl
and
div
pop
cs
rep
dec
mov
rclb
xor
enter
aas
test
sbb
xchg
add
inc
mov
mov
push
scas
adc
jecxz
imul
repz
stos
sub
cli
sub
clc
pop
sarl
dec
cmp
jge
sub
mov
sbb
loopne
popa
cwtl
lods
mov
and
cltd
pop
xlat
lock
mov
and
pop
les
and
aam
gs
arpl
mov
andl
sbb
je
add
add
xchg
jecxz
add
ret
push
sub
pop
jmp
hlt
add
sbb
jp
jl
mov
ja
sub
xor
lods
dec
popf
shll
or
jle
ljmp
movntq
in
jl
lds
lret
adc
pop
jae
imulb
shl
sub
push
xchg
test
addb
pop
jns
mov
das
adc
mov
sahf
and
or
inc
outsb
das
dec
call
cmpsb
jb
dec
jo
xorb
cmp
mov
or
aam
dec
addr16
xchg
fildl
bound
sbb
push
jl
adc
ret
bound
lcall
rcll
push
in
in
inc
jo
jo
out
jne
mov
fildll
aad
les
scas
push
ds
jmp
mov
jecxz
cmpsl
xor
iret
loope
outsl
jno
in
sbbl
xchg
mov
int
jne
push
je
imul
cmp
add
sbb
popf
dec
mov
xchg
mov
js
fcomp
js
arpl
and
test
mov
mov
cli
jnp
shrl
enter
into
outsb
loop
imul
addr16
mov
pushf
dec
inc
cmpb
sbb
test
mov
pop
repnz
iret
stos
sbb
lret
lahf
add
xchg
pop
xchg
lret
push
push
fcmovnbe
mov
add
imul
pop
aas
push
push
cwtl
push
aam
mov
sub
dec
xchg
test
sub
cs
and
imul
pop
cmp
das
add
stos
lock
sub
insl
cld
add
outsb
js
sti
xchg
add
xor
mov
cmpsl
jae
scas
lea
cld
add
sbb
pop
mov
ds
les
and
int3
in
mov
das
test
dec
hlt
jae
pop
imul
idivb
jo
push
sbb
arpl
mov
fwait
pushf
cmp
rcrb
repnz
cmp
jg
mov
mov
das
dec
sahf
cmc
repz
and
jb
pop
notl
rorl
mov
andl
lea
sarl
int
lods
mov
out
lret
stos
enter
mov
cli
and
inc
call
push
test
dec
out
push
out
ljmp
pop
imul
adc
add
movsb
call
loop
mov
imul
orb
cwtl
push
movsb
sbb
mov
js
mov
push
xor
leave
xchg
xor
adc
shll
fildll
push
das
mov
mov
mov
scas
xchg
mov
lock
add
js
jp
fisubrl
stc
push
cmpsb
jmp
xor
lcall
cltd
pop
movsb
sbb
push
out
mov
pop
movsl
or
xchg
mov
or
lahf
loopne
stc
faddl
cmp
mov
mov
add
pop
cmp
sar
scas
jo
inc
ss
das
inc
pop
call
faddl
add
pushf
xchg
mov
ret
cmpsb
cs
imul
aam
gs
fucomi
add
xchg
loope
cltd
xchg
jl
test
in
out
cmp
mov
push
lods
jnp
mov
sbb
cmp
sbb
outsl
xor
mov
jo
negl
ljmp
aam
sub
xchg
addr16
jno
mov
inc
xor
add
dec
mov
shlb
jbe
mov
pushf
cmp
mov
inc
iret
int3
iret
mov
scas
aad
ror
sbb
cmp
lods
pop
and
sub
fstps
mov
push
imul
fcmovb
std
lods
pushf
shll
cmp
sarl
pop
xchg
xchg
xchg
jge
mov
hlt
xchg
daa
out
ja
dec
ficoml
ret
mov
add
loop
sbb
mov
pusha
aam
cli
push
scas
cltd
mov
rclb
subl
mov
mov
pusha
lods
xchg
push
in
push
push
lds
or
push
cmp
adc
in
pusha
sub
mov
xor
cmp
mov
test
rclb
loop
pop
and
xor
mov
fidivl
adc
and
adc
sbb
push
or
jl
fidivrl
pop
out
cmpsb
cmp
xor
shl
loop
add
jge
push
scas
js
es
jmp
cmp
ficoms
adc
jb
gs
cmp
push
div
push
and
ds
adc
inc
aaa
lret
cmp
mov
xorl
adc
nop
jo
dec
daa
rcll
dec
or
mov
negb
mov
int
je
cmc
add
lds
rclb
icebp
ds
pop
mov
test
ss
test
icebp
fs
add
and
push
xor
or
or
out
inc
test
cwtl
lret
sub
cld
pusha
sti
ljmp
lret
je
fsubs
mov
mov
adc
jge
and
test
or
ss
out
push
and
add
addr16
or
aad
cwtl
lcall
insb
cli
cwtl
shlb
or
sub
mov
adc
cltd
cld
test
lret
aam
movsl
mov
sbbb
call
add
test
xchg
lahf
mov
mov
xchg
or
push
aam
aas
mov
sub
sahf
xchg
cld
cld
xor
xor
subb
es
dec
xchg
aad
lock
rolb
je
js
and
cmc
addb
or
ds
popa
ja
bound
dec
fs
fidivrl
out
rcll
fcomip
add
mov
ret
les
repnz
push
arpl
sub
fxch
lahf
mov
nop
xchg
xchg
jp
nop
mov
xlat
mov
jno
cli
mov
fmulp
inc
dec
xor
mov
mov
mov
push
xor
int3
push
jmp
cld
arpl
push
std
pop
add
out
pop
mov
cmp
pop
cmp
mov
fnstcw
in
add
sbb
repnz
ss
jmp
mov
pop
lods
sbb
in
scas
addb
cmpl
inc
popa
cmp
sbb
andb
and
lods
mov
mov
sarb
lods
fsubs
iret
xchg
ljmp
inc
xor
pushf
xchg
mov
mov
jecxz
movsb
jecxz
dec
mov
stos
jl
add
movsb
andl
pop
push
jbe
out
sub
xor
mov
in
in
jb
xor
mov
inc
pop
mov
cmp
test
ds
fsubr
jne
gs
dec
fldt
push
je
jne
scas
lcall
mov
sub
add
and
pop
adc
mov
test
outsl
push
loop
in
mov
push
mov
mov
xchg
mov
in
pop
push
pop
fsubrl
lcall
imul
sub
pop
shll
lahf
fcom
sbb
fcoml
movsb
testb
mov
or
sbb
cmp
and
adc
ljmp
in
inc
fildll
sub
pop
dec
mov
cmp
les
lahf
fs
mov
cmp
mov
cmp
inc
shr
inc
outsb
fcmovnbe
mov
jecxz
mov
hlt
aas
push
lods
sbb
sub
test
mov
loopne
mov
pop
jb
mov
cmp
add
lret
pop
pop
aad
xor
ss
jg
pop
movsb
aad
sbb
xor
call
popf
xchg
and
shlb
es
cmpsl
aam
add
out
push
ljmp
movsb
inc
pop
and
call
jl
pop
in
xor
xchg
inc
cltd
mov
repnz
push
or
and
bnd
insl
lds
xchg
aas
outsl
push
or
das
hlt
cmc
out
movl
lea
in
jb
js
aad
jmp
call
shlb
or
lret
adc
cmpsb
cs
gs
test
loopne
push
mov
sbb
inc
sbb
rep
add
dec
scas
sbb
inc
sti
xchg
leave
cmp
inc
or
xor
stc
adc
lods
jecxz
inc
dec
jno
adc
les
bound
sub
xor
cmp
outsb
iret
bound
loop
ds
adc
data16
sbb
jnp
jl
sub
mov
cmp
leave
out
iret
adc
js
cwtl
xchg
jns
es
ja
and
jle
dec
inc
mov
mov
push
testl
sbb
dec
out
ljmp
cmp
dec
incl
add
adc
jp
add
sbb
cwtl
cs
ss
sub
arpl
pop
add
ss
mov
pop
stos
out
jle
mov
push
pop
aam
clc
bound
imul
push
ja
cmpsb
or
rcl
inc
and
mov
mov
push
xchg
and
mov
mov
mov
lods
cmpsl
jl
pop
in
scas
mov
cmpl
aaa
in
enter
xchg
repnz
xor
pop
xchg
ja
jmp
or
jg
xor
mov
jno
mov
sub
push
mov
arpl
mov
dec
or
js
and
lret
sbb
xchg
xchg
cmp
sub
inc
add
xor
pop
mov
mov
mov
std
sub
add
fidivl
divl
add
xchg
push
mov
mov
fisttps
sub
xlat
and
or
sub
mov
lea
add
jae
mov
out
cmp
push
cwtl
cwtl
bound
add
test
add
out
incb
in
sbb
push
cli
adc
pop
cmc
pop
mov
xor
inc
add
and
pop
iret
mov
inc
sbb
mov
and
es
jo,pt
rcll
pop
push
mov
aas
dec
push
fsts
fstps
mov
in
or
inc
pop
xchg
mov
sahf
arpl
loope
mov
pop
add
faddl
insl
xchg
lock
mov
mov
or
sbb
test
out
cmpsl
popa
in
mov
movsl
mov
aaa
insb
shr
sub
cmp
js
mov
mov
pop
insl
stos
cli
push
es
pop
out
add
jae
fnstcw
push
aad
test
mov
or
cmp
lock
cmp
int
orl
data16
shlb
fdivp
mov
xorl
push
rclb
cmpsb
fucomip
aam
jae
inc
push
shrb
dec
repz
xchg
mov
mov
gs
sar
push
ja
cltd
stos
add
stos
xor
stc
fnstenv
mov
push
je
cli
inc
jmp
ret
pop
ds
bound
loop
or
sub
sti
jbe
fsts
mov
psubusb
addr16
lcall
cli
adc
js
pop
fwait
pop
and
mov
and
fwait
clc
mov
fldt
test
push
dec
cmc
pop
cmpsb
insb
or
imul
pop
inc
fcmove
shlb
xor
jge
pushf
xor
mov
je
outsl
jnp
sub
sub
add
sbb
mov
xor
lods
in
repnz
test
cmpsl
xchg
jmp
ret
cwtl
imul
jne
enter
sub
push
jle
mov
jns
in
fwait
push
test
lock
mov
sbb
mov
adc
iret
fisubrs
push
pop
sub
xchg
push
fwait
xchg
adc
jecxz
pop
vmaxss
rcrb
ss
pushf
es
and
adc
scas
popf
stos
in
aas
mov
inc
mov
je
inc
jo
sbb
push
dec
jecxz
fwait
inc
pusha
imul
xor
and
test
mov
pop
cmp
test
sbb
xchg
push
xchg
fidivl
mov
js
mov
in
jmp
insb
aad
push
mov
stos
pop
ljmp
leave
mov
sbb
fisubrl
jg
push
ss
xchg
cmpsl
sbb
push
shrb
pop
rcll
jle
cmp
aaa
jmp
add
inc
push
aad
sub
clc
pop
cmp
xor
in
dec
pop
sbb
stc
fnstenv
scas
mov
fidivl
sbb
in
xchg
std
mov
sub
xchg
cmc
rclb
xchg
xorb
push
mov
dec
es
adc
scas
outsl
pop
lock
adc
repnz
and
outsl
and
sbb
clc
cmp
adc
pop
push
fisttps
sbb
lock
fwait
inc
jo
push
cmpsl
pop
sbb
sbb
push
icebp
sti
xchg
sub
sub
jbe
xor
mov
out
fildll
dec
out
out
xor
call
ss
and
cmc
addl
ret
decb
out
jnp
mov
pop
scas
xor
mov
add
and
arpl
jmp
scas
fnsave
int
mov
push
sbb
aas
adc
pop
jle
sbbl
std
cwtl
repnz
fdivp
or
inc
inc
xchg
sbb
xor
jge
mov
mov
xchg
outsl
xchg
and
out
xchg
call
cs
pop
enter
loope
test
add
std
xchg
fnstsw
dec
mov
pop
mov
ffreep
dec
push
sar
xlat
ret
push
cld
mov
in
cmc
mov
jmp
inc
int
test
mov
clc
xor
add
pop
sub
inc
lods
lcall
adc
repz
stos
jp
push
mov
and
andl
xor
mov
cwtl
push
lods
add
nop
push
clc
xor
xchg
xchg
lahf
into
jbe
jp
pop
mov
pop
sbb
pop
mov
jbe
inc
mov
dec
mov
sbb
idivl
dec
and
push
jmp
popa
cwtl
add
jp
or
xor
adc
push
xlat
sahf
mov
cmp
call
pushf
add
push
scas
mov
pop
ror
sbb
xor
lret
outsl
jmp
insl
or
and
push
rorb
xor
movsl
add
inc
fs
and
inc
stos
lea
inc
sbb
lock
cmpsl
sbb
gs
lret
dec
out
outsb
bound
xchg
push
xor
insb
call
ret
rcl
xchg
adc
adc
lret
jno
sbb
stos
test
jns
js
sbb
hlt
add
faddl
imulb
cmpsb
xchg
cmp
and
xor
aaa
sarl
addl
in
in
add
inc
jp
leave
and
fldz
dec
mov
leave
cld
repz
icebp
hlt
pop
push
xlat
loop
aas
adc
jbe
mov
rep
pop
repz
sbb
fsubrl
jp
mov
pop
js
push
mov
call
xchg
int
dec
sar
int3
lcall
mov
fstps
fiadds
repz
mov
mov
fnstsw
mov
mov
dec
leave
leave
hlt
cmp
sbb
int
push
loop
push
xchg
pop
or
shrb
fstps
lock
int3
or
ljmp
push
mov
sti
lcall
ret
mov
or
mov
and
push
sub
mov
insl
add
xchg
or
lret
jecxz
jb
pop
insb
mov
jge
nop
mov
push
ljmp
movsl
inc
jle
into
sbb
out
cmpsl
mov
mov
jp
xor
daa
faddp
push
lods
cmpsl
pop
xor
adc
push
aaa
mov
in
pop
test
pusha
dec
cwtl
daa
push
jns
shrl
pop
lea
or
shll
imul
inc
cli
shll
xor
arpl
xchg
fstps
cmp
cmp
insl
imul
jmp
pop
jle
dec
jmp
xchg
lret
xchg
jl
out
dec
mov
mov
inc
inc
add
push
lcall
test
dec
cltd
and
sub
ret
stos
int3
movsl
icebp
xchg
jno
or
lods
addl
inc
xchg
push
ficoms
jne
fsubp
mov
dec
mov
adc
mov
ficomps
das
aaa
repz
mov
je
mov
lret
mov
and
into
push
loopne
mov
arpl
fnstsw
xor
notl
ss
adc
or
js
icebp
sarb
gs
inc
push
mov
les
pusha
mov
sti
pop
or
or
sbb
in
and
fwait
call
ret
mov
fldt
xor
push
add
dec
int3
dec
xlat
xor
mov
outsl
stos
jmp
add
inc
or
adc
fwait
lret
pop
push
nop
lds
dec
repnz
repnz
fcmovnb
dec
rcll
sar
into
xor
jne
repnz
aaa
mov
aaa
frstor
jecxz
sarl
push
ds
dec
int3
out
rorb
jne
xchg
test
xchg
cmpsb
mov
into
cld
dec
addl
out
jle
stc
jae
xchg
mov
orb
aas
dec
xor
cmp
fisttpll
pusha
mov
push
scas
cmc
jle
cmp
jge
ja
out
mov
adc
out
in
mov
test
xor
mov
loopne
js
shll
and
or
mov
pop
push
mov
gs
idiv
int3
ret
or
adc
aas
and
xchg
leave
call
shlb
scas
call
xchg
les
in
addr16
add
dec
push
pop
pop
mov
dec
xchg
lret
fucomip
mov
inc
cwtl
mov
arpl
ja
rolb
rorl
mov
xlat
fists
pop
or
das
xchg
dec
pop
sarb
push
lds
xchg
pop
inc
in
lods
icebp
movsl
mov
xor
cltd
mov
and
ss
mov
adc
test
inc
jl
or
out
xor
jg
aas
rep
addr16
xor
adc
ret
bound
mov
test
lahf
push
sub
sub
push
imul
inc
arpl
addr16
hlt
in
cmp
scas
fstpl
cmp
xor
mov
pushf
rcll
cmp
js
popf
dec
scas
pop
dec
ds
lods
fists
sub
mov
ds
mov
pop
or
out
pop
scas
ror
test
pop
mov
cmc
pop
stc
out
mov
outsl
fisubl
mov
ret
xchg
lcall
or
imul
aaa
mov
int
xor
imul
jne
push
cli
pop
dec
pop
ficompl
imul
xlat
inc
xor
imulb
dec
xchg
push
adc
bound
outsb
aaa
inc
subb
sbb
outsb
rclb
cmc
imul
xchg
sbb
push
scas
sub
mov
adc
pushf
and
jge
xor
sbb
sbb
stos
push
mov
push
aaa
bound
cmp
inc
push
sub
sbb
daa
push
data16
call
icebp
push
popl
xchg
call
xor
mov
into
fcompl
movsl
pop
jae
cmp
fldcw
call
les
call
mov
cmc
push
push
dec
out
sub
orl
jno
xchg
inc
xor
sti
inc
mov
imul
fmulp
jnp
mov
mov
sti
dec
daa
adc
mov
js
and
aas
enter
lods
lcall
in
dec
adc
cmpb
xchg
or
movsb
mov
lods
scas
or
push
sub
push
push
clc
xor
jge
out
push
xor
push
mov
sbb
sahf
jne
push
add
iret
cltd
out
xlat
lods
add
cmp
loopne
dec
add
fwait
xchg
inc
cmp
or
mov
je
jbe
fisubrs
loopne
sub
dec
inc
ljmp
test
sbb
mov
dec
mov
repz
clc
mov
add
dec
stc
insl
fsub
cwtl
ds
movsl
jl
push
ds
push
movsb
add
aaa
int
incl
mov
imul
icebp
movsb
dec
iret
jno
fcmove
cmc
imul
lods
mov
test
fnstsw
test
jg
sbb
xchg
aam
dec
jge
jb
xor
icebp
or
arpl
sbb
adc
imul
lds
fnstcw
xor
popf
xor
push
adc
sbbl
pop
mov
pop
call
pop
or
imul
mov
cmpsl
push
xchg
into
fsts
rorb
xchg
shrb
out
or
mov
pop
sub
or
xchg
mov
daa
add
loope
and
push
xlat
push
mov
ja
scas
mov
sbb
mov
outsb
push
dec
xchg
xor
outsl
gs
sbb
out
sar
and
jnp
or
push
repnz
cmpsl
or
test
mov
out
mov
pop
mov
xchg
repnz
inc
jl
sbb
xor
outsb
pop
test
or
push
xor
push
mov
push
cli
mov
or
addr16
adc
cmp
jnp
sbbl
push
push
dec
add
aaa
jmp
ficoms
jmp
sti
pusha
adc
pop
xchg
repnz
outsb
les
sbb
aaa
rorb
or
jmp
sub
int3
popf
movsl
and
pop
xor
or
push
cwtl
fsubrl
insb
repnz
pop
stc
adc
ror
out
lods
sub
adc
xchg
cmpsl
xor
outsl
out
ljmp
imul
imul
divl
aam
pop
xor
dec
ja
pop
sbb
into
fdiv
pop
stos
pop
nop
inc
xlat
push
sub
mov
push
pop
adc
push
int3
mov
jmp
sub
or
lcall
in
pop
outsb
js
test
ds
popa
pop
or
lcall
sub
jno
pop
ljmp
jne
dec
push
push
mov
cmp
inc
lahf
in
daa
in
cmp
jp
add
xor
cwtl
mov
das
xlat
enter
sbb
jmp
cmp
and
sti
adc
sbb
outsb
movl
jecxz
mov
in
sarb
loopne
jb
shl
add
mov
sub
stos
ss
or
aam
bndstx
test
jl
mov
pop
movsb
cmp
dec
cld
dec
dec
sbb
jne
mov
popf
int
cli
bound
mov
mov
iret
inc
iret
outsb
dec
mov
add
pop
sub
cmp
fwait
adc
hlt
fdivl
sub
test
add
movsl
rol
lahf
insb
je
cli
cmc
ss
ret
jne
out
fbld
cmp
test
testl
jecxz
xchg
inc
test
ss
pmullw
les
jnp
sub
je
ds
sbb
mov
mov
sub
adc
jbe
jbe
stos
mov
sub
and
ds
inc
xor
int3
js
push
mov
outsl
fwait
aas
sub
push
jo
push
mov
cmc
idivb
ss
das
xor
mov
mov
add
in
lret
push
call
faddl
push
dec
test
adc
je
mov
push
cmovb
sbbl
push
aam
add
xchg
mov
jo
pop
hlt
pusha
clc
stc
xor
lret
dec
aaa
ljmp
repz
mov
rclb
shrl
cmp
outsl
mov
out
mov
inc
xor
push
pop
mov
push
inc
jle
xchg
mov
fistl
dec
xchg
fists
jne
jns
xor
outsb
adc
pop
mov
pop
lret
sub
pop
stc
std
es
insb
insl
adc
loopne
sbb
clc
mov
xlat
xor
push
push
push
movsb
inc
jecxz
int
push
jb
enter
jp
clc
mov
mov
mov
jge
lret
es
mov
flds
sbb
sbb
sahf
imul
xor
lret
test
andl
sbb
shlb
jecxz
add
jae
pop
leave
sub
jl
ja
pop
jmp
jmp
pop
cmc
sahf
xchg
test
scas
xchg
cvttps2pi
adc
data16
lds
xor
in
mov
xor
lret
mov
xchg
and
bound
dec
add
push
jno
inc
dec
fimull
adc
jne
xor
cmp
pop
add
and
inc
pop
subl
and
pop
adc
imul
loope
dec
add
cmpsl
clc
xor
xchg
sub
push
cmpsl
cmp
fisttps
cmp
sub
cmp
int
jae
cwtl
adc
out
scas
aaa
mov
data16
dec
stos
movsb
inc
mov
add
pop
mov
les
inc
pushf
imul
xchg
loope
mov
shll
inc
popa
pop
and
cs
push
mov
es
cmp
xor
cmp
out
push
lret
aaa
inc
iret
cld
and
or
push
and
inc
push
cs
outsl
mov
out
dec
mov
lea
mov
movsb
outsl
xor
rorl
xchg
ret
pop
test
ficoml
lahf
in
not
push
dec
je
mov
xchg
ret
pop
or
mov
xor
mov
pop
stos
xchg
mov
push
push
dec
fisubrl
fisubrs
scas
dec
enterw
nop
lea
sti
push
push
aam
cmp
pop
not
xlat
out
inc
adc
add
pop
int
xchg
mov
dec
sbb
or
pop
adc
icebp
loop
mov
push
repnz
xchg
adc
les
mov
iret
in
leave
frstor
rep
loopne
jge
mov
in
or
pop
outsb
in
aas
inc
movsl
bound
rcll
xsha1
cmpsb
dec
cmp
push
outsb
mov
push
push
insb
mov
dec
pop
pop
jmp
sbb
pop
movl
mov
ja
adc
sbb
hlt
fsub
xchg
push
jb
loope
loope
or
inc
sarb
rolb
cmp
hlt
movsb
add
mov
xchg
sbb
xchg
jb
cld
mov
adc
leave
jp
jg
int3
xchg
adc
in
and
sub
mov
inc
cmp
call
sub
jmp
mov
mov
int
popf
xor
dec
out
shll
leave
dec
or
lods
clc
scas
jecxz
jmp
sub
sub
push
subb
test
int
lret
loop
sbb
subl
push
jno
and
xlat
int
sbbb
movsl
sub
into
insl
cmp
rcrb
lods
adc
inc
xor
push
cmp
jp
sahf
pop
in
mov
adc
sarl
sbb
je
push
rorb
xor
lock
add
jl
filds
ja
mov
mov
push
xchg
push
enter
mov
nop
rcll
ljmp
outsb
fsubrs
push
push
add
and
cmpl
adc
loop
scas
add
int
mov
outsb
xchg
bound
add
mov
jmp
xor
xchg
mov
loopne
adc
jb
sub
sub
adc
es
xor
mov
pop
les
data16
push
in
mov
into
loope
test
sbb
fdiv
into
loop
dec
cld
int
add
or
stos
fistpll
cmp
rorb
test
scas
inc
frstor
xchg
icebp
mov
stos
dec
mov
and
xlat
dec
mov
iret
lret
pop
jns
data16
mov
fnsave
push
push
sbb
or
cmp
in
xchg
push
insb
ret
sbb
ror
sub
ret
mov
in
push
sbb
dec
adc
cmp
add
or
daa
call
out
pop
jp
aam
enter
fidivrl
sub
mov
pushf
subb
dec
and
in
mov
mov
mov
mov
loop
jb
jp
fsubp
andb
fwait
loope
pop
and
jbe
push
xchg
push
push
out
or
lock
inc
int3
sub
xchg
sub
jo
mov
lods
xor
test
rol
cmpsl
fwait
imul
sub
mov
movsl
and
sub
adc
mov
stos
cmp
jae
popa
mov
sub
xor
ret
lret
lods
repz
loop
sbb
cmp
sahf
pop
inc
jg
adc
daa
js
repnz
test
lret
jg
add
mov
push
arpl
out
push
mov
mov
sub
sub
out
inc
imul
add
sbb
insl
cmp
mov
or
xchg
jl
rcrb
mov
xchg
xor
lret
cmp
int
push
pop
cmc
mov
je
fsubl
jmp
xchg
aad
push
les
lcall
sbb
mov
sbb
loopne
movsl
jmp
pop
jge
jb
mov
pop
push
mov
xorl
dec
popf
xchg
pop
dec
daa
pop
out
es
adc
mov
ja
or
jns
dec
xchg
push
push
add
repz
das
cmpsl
subb
dec
in
jns
addr16
cmp
adc
add
adc
jo
fadd
sbb
sub
ds
mov
jnp
repz
adc
hlt
pop
add
or
mov
jnp
mov
test
pop
mov
movsl
adc
addr16
test
loop
call
arpl
cmp
or
sbb
sbb
or
popa
mov
cltd
testb
in
ficoml
inc
jae
inc
jl
push
out
sbb
dec
inc
dec
and
rclb
sti
mov
pop
sbb
stos
or
cs
sub
dec
pop
scas
int
and
lret
mov
sbb
and
xchg
push
imul
pop
jl
fiadds
fstpt
add
ret
jb
inc
ja
in
rcl
ss
cli
inc
fs
bound
sbb
movsl
mov
fnsave
dec
xor
and
add
shlb
add
inc
stos
ja
test
push
jl
jmp
mov
in
mov
aas
adc
xchg
imul
cli
scas
dec
daa
shl
dec
stos
inc
je
lret
cmc
or
rolb
mov
hlt
stos
lret
arpl
adc
insb
mov
cmpl
push
arpl
in
cmpsb
xor
mov
jecxz
mov
jb
push
xchg
sbb
mov
cmp
xchg
popf
lock
push
jge
pop
or
xchg
std
lods
scas
add
and
and
bound
and
stos
jno
popa
out
push
jp
mull
jle
iret
cwtl
pop
mov
mov
xor
add
xchg
mov
adc
cli
out
fbld
fdivrs
das
cltd
cli
test
lahf
out
add
int3
mov
xchg
clc
or
rorb
das
mov
pop
inc
pop
es
push
sarl
xchg
cmpsl
pop
pop
ja
jo
inc
xor
pop
lock
mov
cmp
xor
cmp
lahf
nop
jb
add
xchg
pop
mov
pop
hlt
adc
xlat
push
mov
and
in
push
jg
or
andl
rolb
aaa
mov
and
cmp
in
lods
dec
arpl
pop
lea
jecxz
or
scas
adc
add
pushf
stos
pop
or
pop
addl
xor
pop
ss
fistps
push
or
dec
dec
and
jge
mov
pop
mov
push
rorl
mov
aam
push
ror
inc
mov
pop
mov
cs
shll
testl
or
inc
mov
xor
popf
add
into
xor
mov
mov
das
mov
push
add
ss
dec
movsl
ss
ret
xchg
cmp
sahf
jmpw
and
jg
xor
or
jecxz
mov
mov
mov
adc
pop
cmp
mov
out
lret
fdivrs
imul
jmp
push
sub
lock
sbb
push
test
jno
je
sti
jne
movb
cwtl
mov
rcrl
test
xchg
out
sub
pop
dec
add
std
add
mov
jns
test
aas
pop
push
fistpl
in
adc
cmpsb
iret
std
mov
and
and
push
filds
out
aaa
xor
mov
xchg
loopne
jnp
jecxz
imul
cmp
mov
cltd
repz
ds
fs
xchg
mov
pop
xor
dec
nop
xchg
ret
and
sbb
gs
int3
loopne
sub
xchg
rolb
adc
mov
adc
lods
add
pop
fucomp
loopne
int3
inc
movsb
mov
lds
mov
es
stc
lret
push
scas
scas
call
inc
or
addr16
jns
jle
sbb
aad
push
sub
jb
fisttpl
adc
mov
mov
dec
lcall
xchg
mov
mov
or
cmc
pop
mov
addr16
addr16
push
push
sub
idivb
mov
fcoml
outsb
push
and
ja
xchg
mov
and
cltd
cmp
sahf
jb
repz
test
inc
or
outsb
repnz
xor
imulb
push
push
dec
iret
dec
stos
dec
sub
lods
fdivs
inc
hlt
sar
aaa
and
cmp
push
mov
loop
or
mov
popa
cmpsb
js
mov
rol
jge
sar
xchg
push
rorb
xchg
xchg
sarl
ds
cmp
jae
xor
divb
xor
mov
cmp
repnz
iret
pop
xchg
fisttpll
adc
iret
sbb
mov
hlt
movsb
push
mov
mov
adc
or
js
adc
xchg
pop
out
mov
pop
mov
sub
pop
out
imul
mov
out
fistpl
dec
mov
xchg
mov
stos
outsb
dec
add
and
adc
mov
lahf
push
xchg
out
xor
jmp
lods
js
daa
sbb
add
sbb
cmpsl
icebp
adc
repnz
sarl
ljmp
mov
js
repz
xor
ds
mov
mov
cmpsl
mov
mov
jnp
xchg
inc
mov
daa
in
push
dec
stos
movl
outsl
lret
adc
stc
shlb
repz
cmpsl
das
lret
aam
fs
or
mov
lret
test
or
xchg
fwait
ret
xchg
xchg
call
add
lock
mov
xchg
stos
movsl
inc
fwait
cmp
mov
mov
xchg
loop
sub
dec
inc
pop
in
mov
mov
movsb
ret
dec
enter
and
jg
inc
xor
ja
ds
lods
insl
and
adc
jb
adc
mov
add
test
pusha
adc
loopne
lock
divb
rorl
lds
es
pushf
inc
icebp
cmp
sbb
cmc
mov
or
inc
ficoml
or
push
cmp
stos
pop
jecxz
mov
mov
mov
and
push
jmp
lret
sub
enter
cmp
xor
xchg
loopne
pop
xor
popa
jnp
outsl
loop
add
lret
shlb
xor
movsb
and
or
xchg
or
sar
dec
pushf
xor
add
lahf
lock
jecxz
jecxz
inc
rorb
call
adc
nop
xor
fcomps
aam
mov
add
into
cmc
rorl
ja
mov
lods
fimull
inc
inc
fdivl
mov
and
xchg
ss
mov
jnp
xor
shl
add
push
xchg
push
adc
repz
je
jne
lret
push
or
xchg
setne
lea
mov
and
xchg
pop
sbb
stc
and
pushf
cltd
sbb
push
push
mov
xchg
femms
scas
mov
scas
dec
jg
mov
cmp
pop
roll
and
jnp
xor
add
add
inc
sti
sbb
sti
mov
in
mov
sub
and
mov
xchg
icebp
ror
fisubrl
out
sub
imul
ret
hlt
sub
cmp
jp
fs
pop
test
xchg
cmpl
jo
clc
mov
dec
lea
push
in
xchg
loope
add
call
iret
cmp
mov
loopne
mov
clc
inc
and
and
mov
test
pop
stc
mov
xor
jb
je
jnp
xchg
das
pop
or
fwait
insb
adcb
cmp
aam
xchg
or
lock
lods
out
add
sbb
jae
test
xor
shlb
sub
or
ret
pushf
es
adc
cwtl
push
cmc
push
mov
inc
mov
pop
faddl
xor
sub
jge
jecxz
scas
scas
add
loopne
add
and
fwait
add
cld
mov
lock
hlt
or
shrb
jns
pop
add
add
ficoml
outsb
movsb
push
das
pop
loopne
mov
sub
out
xchg
inc
inc
scas
imul
enter
mov
out
push
lcall
aad
mov
movsl
dec
les
push
and
in
hlt
fwait
cli
cli
pop
push
sbb
adc
shlb
enter
push
cmp
push
jmp
or
and
repnz
and
pop
outsl
add
add
imul
push
testl
test
rolb
sbb
stos
adc
stos
insl
test
mov
ret
ja
aad
jbe
aaa
imul
dec
mov
pop
xor
movl
in
ss
jl
dec
dec
ds
pop
xchg
push
cmpsb
addl
pop
inc
pusha
in
roll
xchg
aaa
pop
add
ret
xlat
xor
push
push
add
aaa
std
into
cmp
mov
xlat
out
ficomps
nop
popa
xchg
fcmovnbe
cmp
push
aas
dec
dec
dec
push
cltd
sti
mov
mov
stc
daa
or
arpl
add
xchg
iret
enter
mov
test
nop
dec
pushf
pop
gs
pop
ljmp
dec
les
xchg
outsl
adc
jg
scas
sbb
push
fadds
idivb
out
xchg
pushfw
sub
aam
inc
into
dec
je
jb
out
scas
jnp
xchg
cmp
test
or
ljmp
and
mov
sarl
cld
cmp
jecxz
cmp
enter
jg
jecxz
adc
jns
jmp
mov
jmp
in
aam
jp
cld
pop
fstps
mov
push
xchg
cmp
cmp
inc
loopne
mov
adc
rorb
sub
adc
xor
cmp
lcall
xchg
and
dec
inc
and
xor
aam
sbb
outsb
pop
ja
xchg
daa
cs
sub
sti
mov
stos
mov
in
outsb
inc
sub
in
and
movups
dec
xchg
ds
repnz
cmc
fdivl
cmp
aam
xor
mov
or
push
arpl
sbb
imul
jp
mov
stos
int3
cmp
sbb
shlb
fisttpll
mov
call
sub
push
xor
mov
or
and
add
sbb
imul
es
roll
arpl
sti
pop
mov
hlt
loope
cmp
push
inc
test
dec
jg
add
or
pushf
lock
sub
adc
sbb
mov
hlt
mov
xchg
testl
inc
sar
mov
and
or
es
flds
pop
pop
leave
loop
into
push
test
xor
xor
inc
xor
inc
shrl
clc
xchg
mov
adc
jo
filds
sub
cmpsl
out
daa
stos
ja
loope
stos
mov
xor
std
in
scas
data16
mov
imul
mov
adc
mov
dec
push
and
push
aam
adc
cmp
js
repnz
xchg
pusha
cmc
push
push
and
shl
dec
fiaddl
mov
int3
divb
mov
fldcw
push
ljmp
mov
data16
xchg
sub
arpl
popf
cmpsb
mov
mov
jnp
frstor
mov
aas
jo
add
sarl
in
xor
arpl
lods
or
loop
rorb
mov
lds
movsb
xchg
nop
mov
sub
stos
iret
xchg
arpl
arpl
negb
hlt
ljmp
sub
inc
fsubs
jge
sub
std
jb
scas
pop
fimuls
fadd
nop
mov
dec
ret
cld
or
mov
mov
loope
xor
add
jle
pusha
or
jp
mov
sub
sar
addr16
hlt
inc
dec
mov
outsl
xor
jecxz
pop
jmp
fistps
push
ret
rorb
aam
fidivl
shlb
sbbl
movsl
jl
cs
or
jecxz
add
aas
sbb
ret
ja
jno
mov
stos
movsl
or
sub
cmp
sbb
ss
pop
lcall
jae
lea
shll
aad
mov
dec
or
xor
lahf
popa
outsl
clc
adc
cmc
pop
push
cwtl
lds
ljmp
push
outsb
bound
push
ja
leave
mov
pop
filds
andb
xchg
int
stos
adc
repz
fwait
cmpsb
push
inc
movsl
push
sub
mov
loopne
sbb
adc
sbb
jg
push
mov
mov
jbe
pop
dec
sahf
mov
pop
cmp
andl
addr16
dec
loopne
sub
mov
iret
xlat
dec
sbb
test
psubw
sbb
dec
mov
pop
ja
test
imul
inc
stc
out
jge
sahf
lahf
jle
out
push
sbb
pop
sbb
arpl
mov
clc
ret
pop
fistps
pusha
add
jmp
pop
sbb
mov
dec
pop
fucom
mov
sub
movsb
popa
insl
in
out
ss
std
hlt
mov
sub
js
ficoms
jg
dec
fwait
mov
jg
pop
dec
mov
xchg
dec
cmp
je
mov
push
add
pusha
pushf
mov
sti
xchg
jle
fdiv
jge
das
dec
push
pop
ss
out
mov
add
jge
test
mov
xchg
add
mov
into
xchg
lret
cltd
mov
stos
cltd
add
push
add
sub
adc
int
push
mov
cmp
das
jg
mov
ja
out
or
adc
pop
ljmp
or
loope
ret
xlat
ds
pop
ljmp
cwtl
inc
jo
push
imul
in
mov
mov
test
xorb
mov
ret
xchg
call
jb
inc
cld
xchg
into
fucomip
sub
popf
mov
leave
fimuls
or
out
je
pop
ror
jae
push
mov
jmp
dec
pop
xchg
push
xor
sub
mov
fcmovu
gs
popa
hlt
xchg
out
jmp
mov
inc
int3
mov
pop
int3
sub
sbb
cld
pop
sub
sbb
push
xor
xlat
pop
and
lds
pop
sbb
jne
pop
dec
jne
fwait
sbb
pop
aaa
out
and
mov
jb
mov
or
sbb
dec
imul
mov
pushf
imul
sahf
jmp
mov
rol
jg,pn
lcall
xchg
jnp
fptan
js
es
or
fcmovb
fcoml
out
mov
mov
int3
scas
xchg
xor
mov
in
sbb
xor
or
or
xor
mov
cmp
cmpsl
jne
cmp
adc
aam
add
loop
daa
xor
mov
jns
xchg
and
out
movsb
adc
add
push
lcall
or
out
stos
inc
in
sbb
aaa
cmp
popa
test
js
out
xor
xchg
xor
inc
mov
push
fisubs
cmp
pop
cmp
or
cmp
pusha
out
popa
into
into
jp
mov
mov
fwait
xchg
mov
sti
and
repz
push
rcrl
in
or
adc
ds
lcall
sbb
add
sub
and
scas
or
rolb
add
jns
imul
dec
xchg
cmp
mov
jl
fstpt
addr16
xor
and
lcall
movsl
add
push
mov
stos
xchg
sbb
push
mov
cmp
sub
dec
repz
pop
imul
mov
xor
xorb
popf
adc
jno
mov
imull
and
leave
mov
outsl
mov
push
inc
jmp
mov
or
bound
test
push
cs
dec
push
popa
and
sbb
mov
fwait
sbb
jp
ja
ljmp
pop
popa
mov
cmp
push
mov
fistpll
mov
shll
jnp
jl
jg
loopne
lods
push
test
jg
jg
mov
imul
js
leave
add
outsb
pop
dec
push
sub
jl
mov
dec
and
xchg
cmova
in
cltd
fwait
dec
push
movsb
adc
or
jl
or
stos
adc
lret
sbb
jmp
mov
subl
sbb
inc
sub
fstpl
xor
mov
cmpb
pop
xchg
negb
mov
rcll
int3
call
movsl
pop
fisubs
or
mov
insl
push
loopne
sbb
mov
js
pop
xor
rcl
cmp
ja
aas
movsl
stos
mov
in
cli
inc
int
push
lret
mov
jp
dec
xchg
fistpl
fwait
jmp
js
iret
mov
xlat
test
iret
rcr
pop
in
sub
sbb
push
xchg
push
push
in
lcall
sub
dec
lock
mov
sbb
or
shlb
cmp
mov
fistl
lcall
mov
mov
xchg
ljmp
or
icebp
cld
das
and
or
in
scas
add
movsl
outsb
lea
jle
dec
stos
lock
jb
loopne
mov
inc
jbe
jno
lea
xchg
adc
inc
stc
sub
out
adc
mov
pop
and
les
sub
lds
je
in
or
or
cmpsb
stos
mov
icebp
pop
jecxz
mov
movsb
les
push
ds
or
daa
dec
pop
mov
push
or
mov
outsl
and
mov
ret
cli
sub
nop
pop
inc
add
and
and
andb
mov
jp
pop
icebp
pusha
and
ret
lgs
sub
int3
and
and
movsl
mov
cmp
addl
out
lea
push
ficompl
movsb
push
shr
imul
popf
lret
mov
out
jnp
addr16
bnd
shll
mov
scas
xchg
push
std
pop
xor
add
jae
fimuls
jp
ljmp
iret
stos
cmp
out
inc
xor
enter
pop
xchg
sbb
xchg
or
adc
push
mov
cmp
or
add
mov
testl
movsl
xlat
adc
jae
cmp
jnp
sub
test
scas
jo
leave
in
jg
adcb
aaa
sbb
xchg
add
xor
scas
test
or
repz
pop
add
sbb
xchg
fmul
fistpll
cmpsb
adc
mov
mov
daa
mov
sbb
jecxz
add
jbe
lret
sub
cmp
push
in
jl
lock
out
push
dec
or
dec
enter
sub
bound
js
loope
jl
bound
sbb
dec
pop
in
fcomp
imulb
shll
inc
into
lock
mov
pmulhw
stos
mov
scas
hlt
je
dec
lods
adc
push
mov
in
mov
clc
ret
inc
jne
enter
fdivrl
push
repz
pusha
or
push
or
dec
arpl
cs
std
xchg
jae
frstor
sub
dec
shl
fwait
mov
outsb
push
add
lahf
shlb
add
imul
insb
xor
inc
rorb
fcompl
jmp
lret
lahf
test
cld
push
xor
xchg
bound
cli
add
or
add
int3
add
add
mov
gs
mov
pusha
sub
subb
add
pop
rcrb
repnz
es
jl
cmpsl
lock
loope
xor
cmpsb
jne
pop
cmc
jle
sbb
into
js
push
test
cmpsb
xor
daa
mov
sub
push
mov
arpl
fninit
mov
stc
and
hlt
arpl
dec
je
lret
fsubs
sahf
repz
addl
fidivrl
pop
cmpps
pop
pop
ficoml
mov
cwtl
movsb
and
or
in
popf
pushf
add
stos
movsb
icebp
repz
push
loop
cmp
mov
sbb
xor
es
ja
xor
ret
cmp
xor
xor
icebp
or
test
fwait
fs
sbb
cmp
vcvtdq2ps
out
sbb
cmp
int3
push
cmpsl
clc
and
push
loop
aam
xor
cs
repnz
mov
or
ret
xor
shll
jns
xchg
sbb
out
or
clc
cwtl
adc
jno
int
mov
sbb
jbe
xchg
xchg
and
push
jge
lods
pop
loop
lock
push
loopne
das
popa
sub
push
movsl
inc
push
in
and
sub
push
inc
and
bswap
sbb
and
in
push
rolb
jb
pop
pushf
lcall
sbb
out
adc
adc
cmp
mov
adc
xchg
sbb
lret
decl
or
jns
les
push
fsubrs
jae
in
mov
insb
ret
add
clc
inc
cld
xlat
clc
ret
mov
orl
push
pop
stos
add
pop
dec
fisubrs
xor
dec
pop
imul
inc
pushf
in
insl
cmpsl
xor
rcrl
pop
hlt
insl
cmp
in
idiv
mov
mov
pop
inc
ja
mov
stos
fisubs
mov
adc
cwtl
jne
dec
iret
push
out
xor
ds
hlt
sti
mov
es
pop
mov
negb
push
das
sbb
cmc
or
mov
jle
sub
in
inc
imul
fwait
pushl
gs
das
push
test
cmp
adc
jmp
rcl
sub
pop
shlb
les
inc
inc
lods
xorb
xor
fsubrl
and
mov
out
mov
aas
arpl
dec
negl
xor
cltd
jbe
daa
js
inc
xchg
fdivrl
fmull
test
pop
aad
pop
xchg
test
lcall
fldt
pushf
mov
ss
popf
dec
xor
jle
pop
leave
push
mov
loope
mov
fs
movsb
dec
push
mov
loope
push
xchg
adc
leave
xorl
arpl
std
mov
mov
test
pop
mov
js
aam
or
daa
inc
and
inc
cmp
in
push
pop
and
cs
ja
xor
mov
int3
fstpl
adc
shrb
fwait
movsb
stos
std
sbb
jb
pop
xor
push
sbb
sub
sub
testl
cmp
mov
push
jae
mov
inc
cwtl
sbb
sub
sar
fimuls
cmp
decb
outsb
add
or
pop
insl
fwait
cli
lods
pop
adc
insb
adc
xor
out
xor
and
aad
aaa
cmp
mov
loope
inc
nop
cli
jo
xor
rol
js
sbbl
js
mov
lods
sub
aaa
jle
sti
push
cmp
inc
imul
leave
nop
sahf
mov
mov
shr
movlps
mov
pop
ret
and
in
idiv
out
and
sub
xlat
push
xlat
jb
sahf
in
sub
or
cmpb
sub
xorl
sbb
sar
dec
stos
aad
inc
das
fstpt
dec
idivl
xchg
stc
xor
scas
pop
daa
xor
adc
and
fstl
push
push
enter
mov
pop
adc
sub
mov
mov
data16
mov
stos
inc
pop
adc
es
jmp
push
mov
mov
into
repnz
and
arpl
les
out
xchg
lret
cld
repnz
jl
sub
sahf
xor
lret
cld
pop
push
push
into
mov
repnz
sbb
pop
test
inc
inc
inc
push
mov
sbb
ja
xchg
mulb
loop
ja
inc
cmp
jns
shlb
fs
xchg
fldl
mov
dec
jmp
cli
mov
out
daa
add
jg
out
add
inc
push
dec
push
jnp
stos
add
stc
or
f2xm1
hlt
std
xchg
sub
cltd
das
jo
add
pop
mov
add
insl
es
fstpl
fisubrs
cmpb
or
test
cmc
cmpsl
pop
adc
pop
pop
repnz
xor
mov
sbb
sub
loope
movsb
je
push
pushf
subb
sbb
inc
les
rcrl
mov
push
push
dec
pop
jp
loope
and
sbb
xchg
mov
stc
and
dec
addr16
dec
inc
and
orl
test
mov
inc
test
stos
lret
mov
ljmp
out
outsb
jecxz
or
pop
xor
add
and
push
roll
xchg
sbb
push
fidivl
cmpsb
repz
test
cmp
ret
jno
cmp
push
loope
loope
adc
inc
adc
lea
test
push
repnz
inc
pusha
mov
pusha
and
fadd
sbb
mov
dec
push
aam
mov
hlt
inc
enter
into
ds
pop
insl
dec
sbb
pop
divl
xor
aas
dec
xorb
test
or
stos
sbb
call
pushf
dec
lahf
sbb
scas
adc
test
push
jnp
mov
shrb
or
mov
and
or
daa
pop
add
cltd
addr16
es
adc
push
data16
mov
xchg
daa
add
xor
mov
dec
pop
or
popf
and
addb
jmp
cmp
jne
out
and
adc
cld
push
xor
pop
iret
shrb
mov
ljmp
scas
in
and
fs
adc
pushf
lret
jb
jns
leave
sbb
xlat
add
js
and
inc
cmp
sub
arpl
or
out
rep
push
loop
mov
xor
out
dec
cli
xchg
push
and
cwtl
pop
ss
adc
bound
add
pop
jnp
xchg
push
cs
sub
shl
pop
mov
and
push
repz
and
fistpll
popa
insb
jb
shrl
ljmp
into
jp
imul
xor
fnstsw
xor
and
out
imull
int3
push
mov
sub
clc
mov
shrl
outsb
sub
ds
jbe
push
jne
cltd
div
adc
loop
add
push
push
lar
sbb
xor
es
adc
and
xor
movsl
stos
mov
mov
out
pop
jmp
and
nop
es
int3
pop
xlat
pushf
sti
or
rorl
insb
mov
sahf
inc
aaa
icebp
test
pusha
rcl
or
es
pop
subl
push
mov
enter
insl
fsubs
mov
les
insl
scas
and
jbe
push
aas
sbb
dec
pop
push
shrb
js
movsb
rclb
and
xchg
je
inc
stos
cmp
pusha
and
add
js
sbb
push
xchg
jecxz
inc
je
mov
dec
and
or
dec
push
and
orl
pop
pop
mov
rcr
ja
aas
movsl
imul
sbbb
push
in
pop
push
cmp
fiadds
jl
je
xor
sbb
or
push
pcmpeqw
shll
cmp
imul
sbb
cli
jp
ret
lods
sub
mov
xor
and
sti
andl
mov
sbb
xchg
mov
int3
inc
cld
pop
loop
mov
inc
adc
scas
inc
adcb
movsl
nop
adc
out
adc
pop
xor
xchg
sub
fnsave
imul
mov
outsl
gs
scas
mov
movsb
out
iret
adc
outsb
loop
push
movsl
movsb
mov
paddq
mov
iret
int3
adc
xchg
in
test
push
data16
fisubrs
sub
inc
xchg
pop
sub
xchg
xchg
sarl
stos
icebp
xor
inc
mov
ret
jbe
popa
fimuls
fdivs
testb
pop
add
inc
dec
popa
xor
insl
sub
gs
pop
lret
rorb
push
mov
jb
jnp
or
adc
imul
sbb
ficoml
lcall
sbb
shll
push
jmp
mov
sbb
stos
push
push
pop
outsl
repz
movsb
fwait
inc
movsb
mov
out
cli
cwtl
xchg
loopne
cld
outsb
or
jg
or
dec
cmp
hlt
adcb
leave
std
adc
mov
aaa
jle
mov
cld
shl
cmp
mov
xor
cwtl
pop
bound
sbb
xchg
lods
lock
or
mov
inc
mov
sub
mov
jp
sbb
push
jge
lods
mov
js
fidivrs
rolb
cmc
cmp
cmp
jl
sub
fldl
xor
jb
iret
mov
test
add
lods
ss
mov
mov
lods
outsb
ss
adc
scas
fwait
mov
mov
cld
xor
cmp
daa
pop
fwait
mov
pusha
cmpsb
out
mov
dec
loop
shld
push
out
mov
dec
and
out
call
fiaddl
repz
int
mov
sbb
popa
xchg
ret
testb
pop
pop
jno
sub
lcall
or
test
outsl
fimuls
pop
lea
push
sbb
or
mov
das
ret
xor
mov
int3
popf
icebp
in
push
push
pusha
test
loope
ficomps
loopne
in
sbb
bound
scas
loopne
inc
lea
mov
mov
pop
aas
cli
dec
rol
sub
jnp
mov
lock
aas
sub
insb
dec
repnz
fdivrs
test
int
movsl
inc
pop
lods
loop
data16
sbb
lods
push
mov
ret
out
jae
xchg
in
lcall
mov
dec
lahf
les
xchg
add
adc
lods
mov
xchg
sbb
push
xchg
jl
scas
leave
inc
stc
push
xchg
cs
aas
mov
dec
rcr
or
dec
xlat
test
mov
xchg
dec
sub
mov
int3
add
es
xchg
or
inc
xchg
cmp
lret
les
sbb
pop
mov
cwtl
xor
pop
xchg
sbb
rcll
cmpsb
jp
in
es
lret
cmpsb
outsb
pop
push
add
push
add
push
adc
jae
adc
in
pop
xor
jne
mov
lret
pop
out
push
sbb
out
mov
mov
das
es
pop
lret
rcrb
stos
xchg
arpl
pop
pop
and
ret
fwait
into
push
iret
jmp
in
fsts
aas
in
jecxz
into
scas
imull
sbb
gs
lret
je
mov
push
sub
jno
dec
jbe
test
and
and
popa
gs
movsl
jns
outsl
outsb
popl
fdivrs
push
mov
stc
sub
imul
sub
out
jae
insl
mov
push
dec
into
inc
pop
push
cmpsb
mov
mov
push
xor
sub
out
ds
pop
data16
xchg
adc
cmp
imul
insl
cs
dec
mov
stc
push
xchg
inc
cmpsb
add
pop
shl
and
popa
icebp
sbb
lret
cmovl
sbb
xor
xor
cmpsl
mov
in
push
into
mov
cmp
dec
jns
jnp
xchg
add
mov
ficomps
dec
sub
fidivl
sar
scas
xchg
adc
dec
mov
mov
dec
jp
dec
lods
pop
add
lods
xchg
fdivs
arpl
pop
out
aad
dec
push
fstpl
jno
and
lret
cmpsb
xor
aam
adc
pop
addb
xchg
ja
cmp
sahf
push
jl
sbb
and
cmp
xor
sub
rep
push
dec
push
push
lret
and
xchg
jmp
pushf
mov
push
or
insl
pop
jo
and
xorb
lods
mov
xchg
clc
mov
loop
stos
mov
ja
adc
dec
sbb
andb
xchg
aad
bound
dec
insl
mov
mov
lret
cmp
loope
daa
dec
por
mov
or
pslld
cmc
pusha
aas
leave
movsl
test
or
cmp
ljmp
jns
and
loopne
or
enter
jae
mov
mov
je
cmc
lret
sub
rolb
mov
add
mov
imul
push
jge
dec
cmp
push
cmpsl
mov
fidivrs
lods
call
xor
lea
out
cmpsb
xor
repnz
lock
lea
js
jle
add
fstps
sbb
outsl
add
jp
sbb
pop
leave
orb
mov
ret
inc
fwait
mov
mov
pop
inc
incl
aad
std
lret
jne
sub
jp
cmp
std
pop
div
call
leave
pop
sbb
jge
and
mov
lea
sub
push
dec
dec
lods
xchg
pop
xor
rep
cmp
xorb
xchg
test
notb
popf
aas
cwtl
jg
std
fbld
push
jb
sbb
xchg
cmp
mov
fbld
push
cmpsb
in
dec
and
ror
xor
dec
xor
bound
rcr
xchg
mov
and
enter
and
xorb
in
sbb
cli
or
aam
adc
mov
add
je
mov
int
jle
or
outsb
fsub
aas
arpl
fsubl
jo
in
insb
push
xchg
mov
imul
stc
pop
cmp
ljmp
daa
andb
aas
cmp
or
and
and
repz
loope
int
mov
js
sbb
cmovl
cltd
push
xchg
outsb
hlt
es
pusha
mov
out
push
aas
jge
mov
xchg
jp
jne
sbb
or
stc
neg
push
sub
ror
test
jnp
cmp
mov
pop
lock
mov
mov
sbb
fistl
scas
xchg
sar
fdivl
call
add
mov
stc
mov
push
lods
aas
mov
std
and
mov
gs
fcompl
xor
pop
add
clc
dec
mov
scas
sbb
mov
push
cmpsb
xchg
gs
mov
or
mov
jb
movsb
lcall
and
xor
cmp
or
jo
xor
subl
loope
pop
mov
pop
mov
movsl
lret
and
ret
add
jl
pushf
jl
inc
sbb
das
mov
or
ret
pop
rcll
jno
jp
shlb
add
or
inc
xor
sbb
aam
mov
inc
xor
adc
inc
jge
add
fstps
jg
jmp
sbb
ret
pop
dec
dec
pop
inc
pusha
fildll
out
testl
int
dec
dec
imul
gs
or
pusha
pop
fstpt
movsb
aam
add
pop
enter
mov
shlb
pop
inc
repnz
push
mov
mov
jae
mov
imul
dec
mov
stos
in
push
and
clc
lcall
sub
push
popa
push
lcall
push
rcll
test
mov
pop
mov
mov
and
ljmp
in
jno
push
adc
nop
inc
mov
bound
xchg
out
aad
cwtl
out
xbegin
push
fmul
pusha
pop
imul
and
adc
lret
mov
gs
and
jge
xchg
movsl
std
icebp
pop
and
mov
sbb
inc
and
imul
inc
pop
add
xchg
add
and
inc
jns
cmp
push
mov
leave
rorb
sbb
push
add
xchg
sbb
decl
inc
push
add
mov
das
stos
mov
ret
xchg
sbb
fwait
push
cmp
mov
rcr
nop
fdivrl
add
adc
jb
inc
cmp
hlt
mov
push
and
cmp
jnp
push
faddl
pop
mov
fwait
jecxz
nop
xchg
push
or
and
jg,pt
sbb
leave
lods
add
test
dec
jmp
out
paddusb
and
or
cmp
xchg
les
int
outsl
gs
dec
rorb
mov
dec
xor
lahf
xchg
pop
leave
lods
subl
cmp
jae
in
or
sbb
dec
mov
jmp
jle
cmp
shll
clc
and
cli
pop
pop
fmuls
fwait
inc
add
repz
dec
mov
in
mov
xchg
mov
xor
xor
cmpsl
adc
and
fistpl
sub
mov
sbb
cltd
jle
insl
pop
mov
jb
es
gs
xor
iret
incb
stos
pop
push
sbb
mov
lahf
ss
jl
jle
bound
ljmp
lret
pop
inc
xchg
leave
dec
mov
adc
dec
in
scas
fcomp
negl
inc
shrl
jg
dec
lods
ljmp
shll
add
outsl
cmp
clc
repz
mov
loope
xorl
lods
pusha
fdivs
scas
ja
dec
sub
pop
roll
adc
into
adc
push
push
fsubrs
add
cltd
mov
imul
cmp
je
mov
sub
and
aam
test
cmp
xor
pushf
ret
pushf
pop
jle
sahf
xor
dec
addr16
push
xor
int3
sub
daa
lock
add
inc
and
lret
clc
clc
and
push
sub
or
or
jo
cltd
fwait
cmpsl
inc
mov
or
xchg
mov
sub
mov
in
push
inc
fisubrs
popa
repnz
cmp
loop
loop
xchg
cmp
fisubl
hlt
sbbl
pop
push
lods
es
pop
jb
or
stc
lock
mov
or
mov
cmp
in
sub
xchg
sahf
out
pop
xchg
inc
scas
and
rcr
adc
add
xor
cmc
pop
ret
popa
inc
repnz
pop
ret
rcll
in
jp
pusha
in
mov
sbb
mov
shll
pop
mov
and
cmp
jmp
repz
and
addl
pop
cs
sahf
stc
mov
xor
or
es
xor
and
jecxz
adc
xchg
fdiv
adcb
out
test
jns
add
imul
cld
xor
mov
jne
mov
mov
aad
subb
cmp
sub
sub
push
xchg
sbb
cs
xor
call
mov
mov
pop
out
cwtl
xor
or
aad
mov
out
or
push
shr
sub
mov
das
mov
repz
iret
jae
insl
js
cwtl
cld
enter
mov
and
sub
hlt
xor
loopne
mov
outsb
or
jno
sti
sar
add
xchg
jmp
push
popa
xor
ret
pop
push
mov
int
add
lcall
sub
dec
xchg
jmp
mov
cmp
shl
pop
mov
fidivs
js
xchg
add
xor
jecxz
pop
fcomps
pop
xchg
push
dec
xor
jno
xchg
cmc
adc
mov
cmp
jbe
xor
mov
push
pop
lods
add
dec
hlt
push
out
mov
push
push
cmp
insb
xchg
jns
movsl
pusha
push
nop
push
aam
ffreep
test
jno
sahf
jo
mov
arpl
rcrl
test
loopne
inc
pop
cmpsl
dec
and
arpl
dec
mov
inc
xor
mov
pop
addl
nop
pop
call
shll
sbb
fdivr
pop
mov
dec
or
push
stos
ss
mov
dec
inc
popf
jmp
dec
addr16
jo
adc
mov
loope
mov
xor
xchg
loope
push
lcall
je
pusha
sub
stc
mov
and
xchg
inc
xor
test
rorb
int3
mov
jp
mov
pop
push
xchg
mov
sbb
sub
inc
dec
pop
pop
test
xor
popf
add
inc
imul
mov
dec
cli
pop
rcl
sbb
sbb
push
xor
push
lds
jg
pop
out
fidivl
inc
jl
out
hlt
fnsave
adc
vaddps
mov
mov
sbb
insl
or
fdivrs
rorb
mov
fs
rorb
testb
dec
or
ja
sub
mov
shr
push
dec
call
adc
arpl
mov
jo
mov
aaa
cld
xor
and
sub
fwait
mov
jg
test
adc
xor
in
and
jecxz
push
int3
add
mov
cmpsl
push
jge
out
adc
push
daa
or
mov
cmp
xor
sub
inc
dec
inc
fsts
xchg
push
gs
enter
in
loope
shlb
dec
data16
imul
inc
sbb
add
or
in
clc
lcall
shll
es
mov
adc
xchg
xchg
lret
dec
repz
jnp
ds
push
push
jns
add
mov
sbb
inc
push
pop
dec
sti
or
sub
stos
sub
pop
clc
jp
add
lret
movsb
les
jne
arpl
call
sub
or
mov
decl
adc
sbb
mov
lcall
xchg
daa
call
shrl
test
cmpsb
out
mov
movsb
mov
ret
cltd
dec
mov
push
or
xchg
andb
xor
xchg
shlb
inc
faddl
ja
ja
hlt
repz
inc
test
dec
in
inc
cmp
and
fldt
stc
mov
pop
push
mov
fs
nop
xor
ss
test
hlt
xchg
cmpsb
jo
notl
ret
mov
mov
sub
in
popa
clc
lahf
push
mov
int
ja
or
push
ficoms
inc
jmp
mov
icebp
loop
iret
and
fcoms
leave
push
insl
pop
fmul
xchg
gs
insb
push
xchg
or
mov
scas
adc
imul
addr16
sbbl
cli
shrb
jg
mov
lods
mov
dec
push
fs
fwait
cmp
nop
clc
pusha
sbb
popf
adc
add
mov
mov
sbb
adc
iret
aam
or
push
repz
xor
xchg
xchg
js
or
les
cmp
sarb
dec
or
mov
mov
bound
bound
jb
or
out
stc
stc
jmp
mov
xchg
arpl
sbb
cmc
push
pop
aad
adc
pop
sti
repnz
add
data16
mov
pushf
jns
push
push
ss
repz
jbe
add
mov
mov
cmpsb
aam
cmp
gs
lahf
sti
andb
dec
inc
in
cmp
and
jo
mov
xlat
out
clc
or
test
lods
xchg
or
push
sub
sbb
ret
mov
call
test
pop
xorl
fsubr
cld
test
push
lahf
mov
xor
dec
imul
jp
jl
sahf
icebp
pop
aam
cli
mov
jmp
inc
sbb
lsl
in
xor
jb
mov
mov
sahf
cwtl
push
adc
mov
shr
dec
outsb
xchg
add
mov
in
mov
mov
xchg
shrl
lock
out
jnp
jbe
inc
outsb
fstpt
roll
ficompl
lret
icebp
xchg
lds
adc
mov
movsl
fidivs
mov
sahf
and
mov
scas
pop
les
rorl
dec
pop
xchg
sti
addr16
push
outsb
fildll
fdiv
lret
mov
mov
out
sub
lods
or
add
mov
add
jne
xchg
cli
pop
dec
fwait
or
jne
lret
pop
mov
push
pusha
adc
dec
in
enter
lcall
pop
into
or
je
outsl
dec
lea
scas
stc
inc
popf
je
test
orl
mov
cli
adc
mov
hlt
mov
ljmp
lahf
popl
loopne
mov
addr16
aam
jns
dec
sbb
iret
push
jnp
jge
add
or
push
rcr
mov
adc
into
lods
jecxz
jl
sub
jg
aaa
ret
sti
and
sub
mov
sbbb
ret
push
fmul
repz
pop
mov
shlb
pop
leave
xlat
add
negl
and
sbb
mov
pop
inc
push
adcl
in
shlb
dec
mov
enter
mov
cltd
jnp
push
je
in
fldpi
adc
mov
inc
lcall
sbb
inc
pop
sub
ss
adc
push
pop
addb
add
add
sbb
in
and
cltd
dec
add
push
xchg
mov
aas
push
push
iret
cwtl
nop
rorb
cmc
fisubl
loopne
dec
out
add
and
in
inc
fistps
jecxz
pusha
mov
xor
orl
movl
mov
data16
push
xor
sbbl
lods
pop
pop
ds
insl
loopne
ret
jae
mov
push
std
mov
addr16
icebp
and
imul
scas
xchg
int
xor
push
idivl
cmpsl
leave
adc
pusha
ror
lahf
aad
hlt
jae
into
jno
push
sub
je
dec
add
cltd
or
mov
arpl
aaa
mov
cld
cmp
xor
jle
pop
inc
add
shrl
mov
fwait
popf
mov
jp
add
jne
into
sbb
mov
out
or
mov
jmp
pushf
xchg
xchg
hlt
pusha
cld
rorl
repz
mov
cmp
cli
insl
ss
test
pop
movl
jmp
out
sub
sbb
loope
push
movsb
shrl
cmp
ret
fldenv
dec
aaa
xchg
mov
mov
jb
jno
jo
int
inc
push
cli
loopne
add
test
adc
dec
xchg
lds
pop
inc
push
ror
insl
dec
sahf
jno
sbb
data16
pushf
imul
movsb
bound
jbe
xor
mov
dec
sbb
andb
out
or
ret
pop
mov
jge
mov
dec
insl
lahf
xchg
stc
lods
push
mov
inc
fcompl
test
mov
xor
in
cmpsl
lret
arpl
cmp
adc
int3
inc
shrl
pop
pop
out
or
movb
pushf
xor
and
loope
roll
out
xchg
and
cmp
call
and
push
movsl
xchg
jmp
add
adc
mov
add
sub
or
sub
mov
jbe
cs
cmp
inc
mov
sbb
pop
xlat
push
pop
shll
bswap
xchg
mov
dec
clc
xchg
ret
call
sub
loop
cwtl
xchg
sti
jp
inc
mov
int3
mov
pop
and
aam
ja
mov
shll
add
out
sahf
xchg
movsl
xchg
or
pop
adc
inc
sub
lock
lods
test
and
sahf
daa
gs
fidivrs
push
mov
mov
insb
add
repz
sbb
fcom
sub
idiv
in
insl
cmp
fsts
sub
test
addr16
inc
popf
mov
sub
dec
std
xor
sahf
inc
xchg
adc
js
xor
vmovhps
test
stc
cmpsb
add
add
or
cs
xor
std
sub
and
hlt
jnp
pop
rorb
jle
xchg
arpl
dec
lds
mov
dec
sub
je
mov
pop
cli
aad
and
arpl
pusha
mov
sbb
mov
loope
add
hlt
and
and
pop
mov
push
dec
sbb
out
push
sub
out
ficomps
test
adc
stc
lcall
orb
jmp
jns
movsl
dec
push
jns
mov
jns
sub
jne
mov
cli
fisttpll
repz
adc
test
sbb
jo
or
movsl
xor
cli
inc
mov
test
fidivrs
es
pop
sub
xchg
add
xchg
or
aaa
pop
add
mov
jae
sahf
push
js
push
loop
cmp
mov
xchg
cli
mov
dec
xor
xor
mov
lret
lds
out
cli
jae
mov
cld
insb
orl
push
and
dec
fmuls
jmp
in
arpl
lcall
lods
xor
mov
dec
ds
jnp
out
data16
sbb
cmp
mov
addr16
out
popl
pop
or
pop
out
mov
loopne
cwtl
cmp
nop
and
jge
shlb
fwait
mov
xchg
xchg
int
xor
xchg
pop
or
mov
push
sbbb
les
jle
fwait
lret
sarl
inc
scas
rorl
adc
stc
or
rcrb
stc
add
inc
lcall
fimull
lods
xchg
lods
out
fidivrl
cmc
stos
ret
in
stos
add
daa
pushf
cmp
dec
inc
orb
mov
jb
nop
addb
push
lea
mov
stc
std
sub
pop
arpl
fcoms
shr
mov
cmc
outsl
sub
iret
dec
roll
dec
loopne
std
outsb
push
push
mov
out
push
daa
arpl
xchg
xor
ret
lahf
aad
jnp
jae
testb
aad
inc
or
mov
test
fisttpll
punpcklbw
sahf
js,pn
mov
jne
loope
ret
lcall
pop
and
jmp
in
rcr
test
push
fsubrl
mov
sbb
out
jns
inc
cltd
icebp
add
insb
dec
inc
push
loopne
dec
mov
lds
push
mov
dec
fmull
xlat
add
out
aaa
pushf
jl
addl
std
inc
dec
mov
repz
std
in
xchg
stc
or
sbb
dec
sti
not
xchg
and
call
sub
movsb
dec
out
imul
add
cld
dec
imul
dec
daa
xor
jg
cmc
xor
pop
adc
push
js
test
out
inc
and
xchg
fcmovne
aaa
and
pushf
mov
shl
sbb
cmp
inc
stc
and
js
cmp
lods
loop
dec
testb
adc
arpl
incl
mov
pop
aad
les
int3
hlt
mov
loop
lock
test
jecxz
test
pop
loope
sahf
mov
pop
cld
xor
repnz
aas
pushw
cmp
pop
gs
and
mov
pop
inc
stos
push
mov
push
or
cmp
pop
outsl
sbb
lods
pop
adc
out
pushf
inc
shll
dec
test
sub
in
idivl
fimull
fxch
sbb
push
mov
xchg
xchg
pop
test
pop
mov
rolb
ret
jno
mov
dec
call
nop
add
cmpb
mov
push
aad
int3
cltd
mov
add
lret
push
loopne
inc
lret
or
jg
adc
jge
pop
jmp
jns
mov
cmp
sub
push
loopne
push
sub
jmp
push
or
fidivl
gs
jl
loop
sahf
lea
mov
adc
mov
push
mov
add
mov
mov
dec
xchg
xchg
add
pushf
insl
arpl
inc
mov
ret
in
lahf
sub
sub
inc
or
movl
lret
stos
js
pmulhuw
and
inc
rorl
scas
push
dec
push
dec
add
jb
dec
das
mov
mov
cli
stos
stos
sub
cmpsl
out
cmp
js
rclb
aam
imul
scas
lock
push
jne
ret
pop
push
add
fs
jno
mov
and
in
std
ret
insl
mov
adcb
lock
add
cmpsl
stc
cmp
xor
mov
hlt
cmp
adc
decl
pop
pop
mov
int
nop
aam
imul
xchg
and
cmp
sub
addl
in
test
pop
sti
or
aas
cmp
aas
xor
int3
lods
lds
ret
dec
add
rcl
or
and
popa
out
in
movsl
pusha
fnstcw
push
pop
fcmovne
scas
xchg
in
mov
sbb
lret
int3
xchg
insb
push
cmpb
or
ret
and
shll
add
fidivrl
into
xor
in
pop
ja
mov
sub
adc
icebp
adcb
pcmpgtb
and
sub
fmuls
lahf
pop
subl
sahf
lock
adc
mov
sbb
add
xchg
xor
jbe
sbb
sbb
pop
aad
fmull
jg
sub
data16
push
fdivl
scas
xchg
sti
add
sbb
in
ds
pop
jp
rclb
dec
pop
mov
pop
xchg
and
mov
and
fidivrl
xchg
rcll
cli
dec
fisubl
rclb
ljmp
mov
mov
or
push
pop
pop
sub
mov
cmp
fwait
incb
lret
sub
rcrb
imul
rcrb
inc
mov
mov
test
sbb
pop
clc
jg
push
cmp
cmpsb
fwait
mov
in
sahf
add
shrl
pop
sarb
sbb
inc
mov
movsl
data16
or
inc
pushf
jne
jae
pop
andl
aad
les
mov
inc
jmp
jl
ret
jnp
sahf
cld
lds
and
aam
mov
or
or
enter
stc
int3
std
fcomip
insl
rcll
popa
jo
insb
inc
in
push
iret
add
pop
incb
adc
sub
popf
sbb
out
fistpll
mov
xchg
cmc
std
cmp
jbe
lcall
enter
mov
arpl
adc
xorb
jl
das
mov
mov
cmp
xchg
sub
pop
loope
sbbb
cmp
call
xchg
xor
lods
mov
leave
insl
mov
outsl
push
js
push
inc
jle
dec
aaa
inc
inc
test
sub
mov
outsb
add
xor
js
xor
xlat
mov
in
arpl
imul
movsl
inc
xchg
add
xor
movsl
dec
inc
inc
lods
jbe
outsl
sbb
stos
fisubl
fisubs
jl
rcrl
shll
add
xor
cmp
push
xchg
xchg
bound
xrelease
mov
xchg
cltd
xor
aas
adc
lahf
rclb
mov
outsl
push
cmpsb
and
cmp
inc
or
cmpsl
pushf
sbb
lds
xor
sbb
lret
iret
imul
mov
adc
imul
cltd
mov
decl
sbb
add
xor
cmpsb
xor
pop
imul
or
push
sub
lods
mov
cld
addr16
mov
cli
test
inc
loopne
inc
mov
mov
cmp
fdivrs
inc
mov
xchg
push
out
and
mov
out
push
push
pop
sub
inc
scas
cmp
in
cmpsl
push
or
lods
adc
jmp
mov
into
and
mov
cmp
subl
mov
clc
jl
test
mov
das
in
adc
loopne
movsl
adc
cwtl
adc
add
mov
stos
mov
dec
imul
inc
cmp
mov
mov
repnz
rcrb
add
jo
inc
and
aad
sub
aam
test
xchg
fwait
mov
cmp
mov
mov
shll
shl
lds
sub
sub
mov
add
sub
aas
cmp
cmpsl
mov
lods
mov
ds
pop
and
ss
adc
rorl
mov
xchg
movb
out
xor
fistl
leave
sti
std
shr
ret
std
jl
lea
mov
adc
mov
dec
pop
cmp
jne
icebp
pop
xchg
sbbl
lods
shl
mov
dec
adc
insl
inc
adc
cmp
arpl
or
inc
mov
push
pop
jmp
xor
inc
xchg
orb
cmp
fsts
fnstcw
push
sbb
shll
mov
test
sti
pop
es
cltd
clc
jle
sbb
shll
xlat
mov
negb
xchg
and
pop
push
aad
mov
push
scas
mov
jne
paddsw
in
push
jae
inc
add
cs
cmp
int3
iret
mov
stc
push
sub
sbb
xorb
adc
sbb
mov
sar
xor
sub
out
out
mov
cmp
std
mov
mov
clc
pop
repz
idivb
pusha
fimull
out
aas
test
pop
outsb
xor
rcr
push
lret
fldcw
sbb
mov
cltd
cmp
stos
jae
pop
cmp
ret
or
stos
push
jae
push
push
cmpsl
adc
fdivrl
add
dec
cmp
int
sahf
adc
leave
ljmp
sbb
mov
dec
jnp
stos
clc
cmpsl
xlat
fdivl
cli
idivb
lea
push
sbb
daa
pop
sub
mov
cwtl
mov
adc
fldcw
out
aas
sti
pop
xor
adc
outsl
int3
gs
int3
mov
out
dec
or
out
pop
stos
scas
call
xchg
mov
jl
mov
cltd
data16
sar
add
dec
sub
inc
and
mov
pop
aam
repnz
add
jge
mov
ror
cmp
inc
cmp
push
dec
data16
sub
sar
dec
adc
adc
rolb
cli
stos
ret
xchg
outsl
jl
shrl
sub
push
pusha
push
fs
push
ret
xchg
aam
sbb
pop
and
jl
je
xchg
scas
lods
push
rorl
jno
and
sahf
test
adc
inc
stos
fidivl
outsl
mov
sub
in
sarb
je
in
pop
fdecstp
hlt
fcoml
push
mov
rcll
in
movsb
jge
xlat
dec
sub
adc
pop
or
fidivrs
jns
dec
push
nop
pushf
inc
data16
mov
xchg
mov
jo
push
imul
loope
jne
fstpl
cmp
lahf
mov
or
mov
bnd
imul
pop
or
push
cmpsb
pop
and
push
popf
ja
rolb
inc
pop
push
shlb
mov
jge
mov
mov
fdivl
addr16
fstps
push
dec
xor
jo
xlat
sub
mov
shrl
aaa
sub
sbb
lahf
nop
loop
fdivrs
mov
xchg
orb
cmc
cmp
std
xor
jb
jo
lds
in
inc
addb
adc
adc
rcll
mov
and
fwait
std
push
xchg
adc
outsb
jo
dec
mov
sub
shll
xchg
mov
ret
int
mov
add
jae
fs
jno,pt
xchg
dec
pop
ror
jae
das
inc
leave
jae
lods
insl
jne
pop
adc
xchg
sbb
shl
aad
push
mulb
xchg
shrb
xchg
ret
pop
sti
clc
enter
stos
je
sub
mov
pop
mov
fisttpll
data16
fsts
iret
arpl
inc
roll
js
sbb
jno
cmc
xchg
cltd
mov
nop
cmpsl
ret
cmc
popf
mov
orb
inc
cwtl
cmp
cmp
adc
jo
mov
popf
xchg
sbbb
movsl
xor
stos
fsts
jmp
test
push
dec
movl
sub
mov
jbe
jbe
lahf
sbb
mov
cmc
sub
movsl
add
jae
sub
pop
rcrl
test
call
xor
scas
mov
stos
sahf
mov
push
or
mov
add
lds
sbb
mov
pop
shlb
pop
loopne
mov
int3
repnz
int3
lahf
mov
xchg
mov
cwtl
and
adc
es
aas
lret
push
lret
adc
xor
and
mov
sbb
pop
fdivrs
pop
lret
sar
inc
xchg
loopne
dec
push
xlat
lcall
cld
int
cli
push
pop
cltd
je
mov
mov
mov
adc
sbb
dec
arpl
cld
test
xor
sub
out
ss
adc
movsb
push
pop
loop
pop
sbb
scas
imul
push
add
roll
mov
push
dec
sbb
cmc
cmp
jle
adc
iret
sti
xor
or
sub
xchg
lret
mov
mov
enter
sub
or
pop
add
repnz
lahf
xchg
aaa
mov
pop
cwtl
xor
imul
ljmp
sbb
sub
mov
mov
fwait
div
mov
aaa
and
rol
pop
std
aam
jb
orb
sbb
lock
ss
jmp
aam
add
jns
insl
stos
jg
add
outsl
repnz
inc
jle
pop
andl
cmp
jmp
xchg
jmp
scas
cmpsb
pop
and
mov
sti
rolb
iret
arpl
xchg
and
sbb
shl
or
jl
inc
into
pop
sub
ror
jg
pop
jnp
icebp
jge
ret
adc
lock
mov
jp
iret
stc
aaa
mov
mov
popa
lods
lcall
sub
mov
dec
ds
mov
dec
stos
in
cli
fbld
jae
xor
sbb
sbb
mov
in
mov
inc
loop
xchg
jmp
inc
push
sar
dec
in
out
iret
es
mov
xor
push
inc
pushf
cmp
lret
or
mov
and
pop
cmp
xchg
loope
clc
das
add
enter
mov
jno
sarb
jg
jnp
inc
pop
stos
fs
push
mov
mov
ljmp
jecxz
in
jge
cs
xorb
test
push
inc
shll
fs
jle
mov
xchg
call
leave
mov
iret
aaa
cmp
xchg
dec
pop
pop
and
out
sbb
aas
insl
mov
and
out
jmp
loop
adc
and
xchg
add
addr16
pop
daa
neg
or
mov
ljmp
push
rolb
pop
repz
outsb
hlt
aad
cs
fdiv
jae
xor
andl
cmp
add
hlt
inc
mov
das
xchg
sub
lret
push
inc
loop
xchg
dec
movsb
mov
cli
xor
lahf
sahf
scas
ret
ja
cmc
mov
xor
push
cs
inc
pop
push
sarl
je
mov
push
lods
or
subl
aad
lods
adc
ljmp
rorl
and
jmp
fimuls
in
mov
mov
mov
mov
jmp
dec
data16
daa
push
lret
cmp
lret
sbb
je
das
xchg
cli
jo
aam
cli
nop
sub
xchg
mov
xor
adc
xor
jae
stos
mov
scas
pop
lock
leave
add
inc
clc
data16
push
pop
in
cld
insb
dec
out
xchg
mov
lods
xor
xor
shrb
sbb
les
in
mov
jg
or
fistpll
pop
cmp
add
cmp
rclw
lods
pop
pop
dec
cmp
loop
jl
out
and
dec
mov
fisttpll
xchg
clc
ret
xlat
and
pop
clc
mov
stc
loope
or
xor
rclb
cltd
fcmovnbe
add
jp
push
and
pop
fists
fdivl
fcmovbe
add
and
in
sub
mov
loop
int3
ss
mov
inc
fidivs
shrb
cmp
ret
add
push
adc
sbb
std
jmp
sub
clc
sub
int
mov
test
push
testb
jo
ret
push
xlat
iret
sbb
mov
sbb
mov
iret
iret
inc
xchg
in
cmp
stos
jecxz
stos
aad
jmp
push
out
popf
les
cmpsb
inc
movsl
cmpsl
cmp
cmp
in
je
stos
movsb
jb
pushf
mov
jo
popa
ret
not
nop
je
jne
test
push
jbe
adc
fistpll
inc
xor
test
mov
adc
icebp
mov
in
xchg
lahf
pop
cmc
mov
shl
aad
mov
push
stc
dec
sub
ret
adc
mov
leave
push
js
dec
pushf
hlt
push
cmp
mov
movsb
adc
push
sbb
outsb
sub
and
add
movsl
push
mov
cld
ret
leave
sub
loope
inc
adc
add
cmpsl
int
popf
adc
fcomps
inc
sbb
xchg
test
cmp
adc
mov
xor
xor
mov
and
mov
sahf
inc
xor
icebp
sub
stos
call
add
je
cmp
cmp
outsl
int
mov
popf
cwtl
cmp
subb
xor
cwtl
or
rcrl
pop
push
xor
xor
xchg
jae
mov
pusha
mov
sbb
inc
pop
dec
mov
std
sarb
leave
shll
aam
jmp
mov
aaa
sbb
movl
popa
pop
inc
fidivrs
or
inc
inc
les
dec
enter
movsl
pushf
leave
imul
int3
int3
insl
sti
outsl
mov
or
sub
sbb
lock
rol
cmc
inc
add
mov
push
rorb
out
jmp
dec
cmp
sub
pop
mov
inc
add
and
test
fnstsw
arpl
xchg
mov
xor
jle
push
in
mov
sub
push
test
sbb
lds
add
mov
ret
cmp
les
std
add
and
andb
cli
and
push
lahf
out
shl
insb
push
imul
xchg
sbb
add
add
inc
loop
jnp
fcom
mov
lahf
loope
sbb
std
js
inc
rorb
fs
pop
cmpsl
jecxz
cltd
add
pop
fisttps
sbb
mov
mov
ds
push
inc
std
cmc
and
cmpsb
adc
not
aas
test
fwait
and
push
pop
mov
push
nopl
push
sbb
cmp
or
mov
rclb
mov
call
roll
cmp
icebp
nop
dec
pop
jmp
xor
outsb
fists
pop
lret
or
xorl
adc
test
movsl
add
scas
aaa
mov
mov
mov
mov
insb
cmc
jno
xor
out
adc
outsb
adc
jge
push
cwtl
lock
sbb
inc
mov
and
rolb
dec
push
imulb
inc
in
push
data16
xchg
cmp
mov
lods
cmpsl
sbb
jno
and
dec
js
imul
jle
xor
in
fidivrl
movsl
pop
or
add
test
and
push
fidivrs
pop
pop
cmp
insl
xchg
or
dec
jle
xor
xor
cmpsb
xor
data16
lret
and
stos
lret
and
push
cs
xor
mov
lods
dec
stos
inc
test
push
fadds
mov
cli
lret
cs
test
ficoms
push
lcall
sti
xchg
loope
cld
fsubl
dec
lea
cmpsb
cmp
cmp
cmp
or
sub
pop
cmpsl
ror
roll
jg
mov
js
jl
pop
fs
xchg
aaa
repnz
cmp
sub
outsl
lea
je
invd
sub
mov
repnz
insb
xlat
leave
idiv
dec
mov
popf
call
push
lds
jmp
xor
adc
loope
mov
sub
cmp
sub
cmp
loopne
or
or
test
dec
dec
dec
cmp
adc
mov
mov
ret
or
movsl
enter
clc
pop
ds
stos
or
out
xchg
ret
repz
pop
das
ffree
fwait
dec
adc
shl
daa
sbb
inc
pop
jge
xchg
cld
jne
imul
div
mov
mov
lds
mov
cmp
or
dec
xor
sarl
ljmp
and
repz
fistpl
js
nop
aad
mov
jp
rolb
and
das
scas
jno
sbb
int
sub
jno
jo
notb
push
fnstcw
mov
jp
pushf
out
add
mov
das
jmp
sbbl
sti
fwait
add
sbb
sbb
sub
call
jg
pusha
jae
mov
push
mov
lahf
xor
fnstsw
cmp
and
push
rcr
push
jecxz
sub
je
mov
mov
es
lods
adc
jae
imul
adc
inc
push
and
mov
mov
outsb
inc
mov
fndisi(8087
sbb
mov
sbb
push
out
movsl
insb
pop
push
dec
pop
cmp
dec
mov
jg
mov
inc
push
dec
inc
xor
mov
loope
hlt
inc
and
cmpsb
in
sbb
and
inc
or
cmp
xchg
das
lods
adc
pop
lret
mov
aad
aad
ret
fildl
add
insb
sub
das
cmp
pop
dec
cmp
push
mov
rorb
push
mov
in
ja
xacquire
cmp
add
pop
jo
fs
jno
add
movsb
sbb
out
mov
fldcw
xchg
push
mov
aaa
sahf
lods
inc
sti
adc
mov
mov
mov
ds
jo
cmp
mov
lahf
mov
sub
push
ud2
in
into
mov
into
push
lahf
add
lods
jle
sbb
arpl
int
push
mov
aad
adcl
mov
stos
sub
bound
and
adc
cmp
mov
dec
cmp
jnp
decl
jl
jno
xor
fdivrl
xor
icebp
sub
push
push
dec
pop
pop
push
insb
sti
out
js,pn
and
data16
adc
jl
cld
jmp
enter
leave
or
push
repnz
movsb
push
push
push
mulb
repz
dec
lret
jmp
xchg
test
arpl
sub
lcall
jge
cmp
fistps
jbe
pushf
inc
pop
aaa
rolb
lahf
jnp
xor
push
mov
sbb
cltd
inc
pop
sub
leave
movsb
test
pusha
repz
cmp
imul
xchg
adc
or
push
out
add
push
pushf
dec
fistpll
rcrb
sub
stc
lds
inc
rclb
push
sti
les
sbb
mov
mov
sub
jns
pop
xlat
sub
rolb
jge
pushf
dec
iret
fs
ret
add
xor
push
adc
xor
lods
or
xchg
sbbb
stc
xlat
repnz
aam
out
loope
psubb
dec
mov
sub
hlt
sahf
cmp
mov
inc
jbe
fistps
add
addr16
lea
in
push
mov
mov
or
pop
int
fs
fdivl
mov
sub
push
aas
negl
pop
push
pop
jno
dec
lea
inc
hlt
negl
je
xor
inc
lods
and
cmp
popa
xchg
dec
outsb
rolb
aaa
sub
orb
test
and
mov
scas
out
arpl
add
mov
and
lock
cmpsl
movsb
ja
or
add
xchg
sahf
cld
dec
outsb
fiaddl
les
xor
xor
add
ljmp
add
sbb
lea
cmp
lret
and
pop
lods
xchg
outsb
and
sub
mov
add
lods
xchg
movb
xor
movq
ret
test
xchg
cmpsb
js
into
out
roll
inc
in
adc
imul
or
std
lcall
clc
js
rcrl
decl
ss
cs
xor
dec
cltd
scas
call
jp
scas
leave
mov
sbb
js
movsb
and
cwtl
cli
push
lds
stc
xor
jp
notb
adc
mov
bound
and
xchg
idivb
in
cmpl
sub
addb
cld
xor
jl
and
dec
rcrl
dec
jle
push
rol
in
push
aas
cmp
imul
out
jp
adcl
mov
lcall
lcall
mov
lret
cmp
in
add
add
and
mov
mov
mov
mov
in
dec
xchg
int3
aaa
xchg
pop
add
inc
pop
xor
mov
push
jb
mov
mov
je
out
mov
mov
fistpl
mul
push
fidivrl
push
scas
popf
mov
pop
dec
jns
xchg
sub
sbb
xor
jnp
add
mov
nop
or
clc
test
call
je
test
sbb
push
scas
push
sahf
or
push
mov
inc
out
pop
sti
adc
mov
outsb
jmp
std
into
pop
lahf
mov
and
shlb
pop
inc
or
lea
xchg
aam
out
mov
xchg
pop
loop
fldenv
pushf
push
sub
les
dec
cwtl
fsubrp
jle
sub
mov
mov
jne
and
hlt
sbb
lods
pop
loop
dec
fldt
add
jecxz
or
add
or
pop
addb
addr16
and
andb
and
shr
lods
or
aam
mov
cmp
push
js
test
jo
mov
and
fdivrp
sub
mov
dec
xor
mov
lret
lods
leave
xchg
lods
push
mov
test
jns
popl
mov
pushf
mov
jno
imul
or
sub
or
inc
lcall
std
cmpsl
movsl
dec
cwtl
sub
pusha
mov
adc
mov
adc
adc
in
jne
jge
pushf
cmc
mov
icebp
dec
sbb
dec
add
stc
ljmp
xor
test
loop
cld
dec
lock
lock
fwait
xorl
lea
mov
movsl
adc
inc
or
jge
ljmp
js
pop
adc
in
fmuls
adc
push
fnstenv
xor
call
add
loop
insl
xchg
sti
dec
sub
dec
sub
call
mov
in
adc
dec
sahf
xor
testb
shll
outsl
jnp
mov
xchg
arpl
adc
cmp
bound
jp
call
mov
scas
fcomp
jbe
arpl
sub
test
cltd
lea
fildll
xlat
bound
inc
pop
xchg
test
in
jecxz
stc
add
push
std
int3
mov
faddl
cmp
inc
cmp
cld
inc
jmp
push
fistl
or
xchg
jl
addl
mov
lods
lea
mov
cmp
and
cwtl
mov
inc
out
movsl
fildll
cwtl
int
mov
jae
mov
dec
fcomps
aad
daa
psrlq
in
incl
shrl
shll
movsb
jns
mov
cmp
xchg
pop
iret
xchg
push
out
enter
orl
xor
imul
push
xchg
inc
push
inc
shlb
add
jae
jo
in
fcom
mov
cmp
mov
cmovns
mov
xor
js
dec
ds
stc
sbb
lods
clc
arpl
pop
mov
cld
sarl
jecxz
stc
and
pop
lret
adc
cld
push
push
addb
inc
or
movl
mov
mov
xchg
mov
lods
push
inc
iret
inc
lahf
mov
jmp
pop
je
pop
cld
mov
inc
xchg
xor
into
push
iret
jb
pop
inc
xabort
test
sti
out
out
push
aad
stos
push
out
push
lods
cmp
pop
popf
scas
ss
add
mov
xor
sub
unpcklps
pusha
inc
jp
xchg
pusha
mov
sub
imul
and
or
xlat
inc
sbb
mov
iret
cmp
lock
dec
int
and
in
add
in
out
inc
insb
mov
xor
push
xor
dec
or
pop
int
das
and
out
sub
pop
inc
dec
aas
ret
xchg
jno
out
and
add
jae
jmp
lods
mov
scas
mov
cmp
shr
ja
int
jmp
sub
push
jo
das
xchg
and
jb
jno
outsl
repz
or
lods
ja
xchg
popa
fwait
jle
push
cmpb
adc
fcoms
call
test
or
enter
fcomps
pop
sbb
in
sbbb
movsb
sbb
add
push
xchg
aad
push
sti
xchg
mov
sub
lods
mov
fsubrl
stos
push
test
or
inc
lcall
sti
xchg
mov
icebp
out
imul
and
xchg
mov
bound
lret
andl
repnz
inc
orl
mov
jae
and
fcompl
aas
jo
dec
xor
adc
mov
out
mov
stos
adc
cs
aad
xchg
addr16
pop
add
and
roll
dec
jp
dec
popa
or
xchg
insl
lahf
sub
dec
into
in
testl
pop
bound
sub
adc
and
ret
ret
int3
or
mov
pusha
icebp
or
lods
loope
nop
fsubs
mov
xor
xchg
dec
lods
push
mov
hlt
jg
pop
imul
push
inc
cwtl
rcr
fstpl
std
cltd
daa
dec
repz
jecxz
test
mov
add
pop
andb
sbb
pushf
inc
jmp
outsl
and
cltd
dec
sub
dec
adc
mov
pushf
cmc
lcall
out
xchg
mov
ljmp
movsb
inc
add
rorb
add
out
test
notb
xchg
aaa
popf
pushf
jmp
test
aam
pop
mov
mov
adc
jnp
pushl
shl
push
push
xor
cmp
out
and
jbe
and
mov
sbb
mov
sbb
je
fwait
adc
dec
mov
call
je
and
jnp
dec
adc
sub
push
lock
push
mov
repnz
lods
adc
sbb
push
pop
rcl
stos
jmp
mov
inc
or
inc
sarb
rolb
jge
lret
pop
cmpsb
adc
stc
je
bound
dec
mov
add
outsb
dec
jge
mov
jle,pt
adc
fisubl
inc
sub
xchg
test
pusha
fmul
shl
xchg
mov
in
loop
mov
lea
lret
cmp
mov
bnd
jge
in
sbb
add
sub
out
inc
cltd
iret
mov
dec
dec
daa
lock
lahf
loopne
outsl
cmc
and
das
int
mov
dec
mov
movsb
data16
rol
cwtl
push
dec
icebp
adc
push
xor
pop
sbb
out
out
call
mov
outsl
or
int3
repnz
cmc
jnp
addr16
cmpsb
and
mov
push
nop
cmp
out
add
adc
movsb
dec
cld
push
sbb
mov
addw
inc
xor
xchg
cwtl
push
jmp
pop
sarl
dec
mov
mov
add
cwtl
push
divl
aas
lock
xchg
in
push
jecxz
sbb
in
aad
jmp
sahf
pop
mov
lret
and
and
repnz
fwait
sbb
add
cltd
shll
mov
push
in
in
push
jns
xchg
cmpsl
mov
outsb
cmp
dec
xor
sti
fcomps
dec
adc
shl
mov
cmpsb
or
jge
test
dec
imul
dec
pop
int
stos
ja
sbb
mov
imul
sub
imul
mov
jle
popf
cs
nop
sub
mov
ljmp
in
mov
inc
jo
lret
add
inc
das
iret
lret
int
cld
push
push
lods
xchg
inc
xchg
out
jmp
fsubrp
mov
jno
in
clc
insb
leave
rorb
js
mov
jo
outsb
stos
jo
add
clc
int
repz
cmpl
cmp
lock
xchg
call
cmp
xchg
sbb
mov
inc
xchg
xor
dec
mov
lods
out
mov
pushf
ja
push
jb
adc
bound
fidivl
icebp
ja
cmp
into
ret
cmc
jno
jecxz
push
popa
mov
push
in
jbe
dec
adc
xchg
mov
js
insb
mov
mov
mov
test
and
and
mov
movsl
sbb
scas
push
add
inc
mov
enter
fistl
or
lods
push
pop
sbb
push
pop
out
adc
or
mov
cmp
loopne
or
xor
fbstp
jle
in
cmpsl
push
add
dec
outsb
mov
push
cs
push
push
loopne
jge
es
mov
sub
push
xor
mov
inc
lods
fdivr
adc
outsb
andl
rcll
inc
fwait
arpl
mov
push
popa
lcall
cld
movsb
jmp
fsubrl
movsl
insl
xchg
in
pop
xor
mov
ss
loopne
mov
incl
sarl
sbb
bound
mov
shlb
cmp
cwtl
cmpsb
inc
sti
add
and
sub
cmp
adc
ret
enter
pop
pop
out
push
popf
insl
push
dec
sub
xor
adc
adc
xchg
mov
jmp
loope
sti
loope
xchg
scas
rclb
mull
jp
fcmovbe
xor
popf
clc
jg
mov
outsb
push
in
mov
xchg
push
push
sub
pop
mov
ja
mov
insl
push
fldt
pop
or
test
mov
imul
pop
sahf
and
fldt
ljmp
hlt
pop
in
jmp
loopne
cmc
cmpl
or
sti
lods
sub
aad
pop
push
pop
add
or
es
cwtl
mov
arpl
add
in
and
xchg
and
jb
hlt
pop
test
jp
inc
rclb
in
jmp
sbb
pop
sahf
js
inc
loopne
ss
insl
dec
dec
loope
je
ficoms
pop
add
xor
fsub
push
dec
jae
lcall
lods
outsb
or
or
pop
std
xor
test
call
adc
pop
clc
negl
xchg
pop
xchg
pop
mov
mov
popa
pop
mov
jo
jne
xor
imul
rcrl
fdivl
hlt
jne
stos
call
cmpsl
adc
cmp
lahf
les
sub
orb
mov
mov
ret
scas
int
rcr
fs
data16
push
fildl
and
aam
or
mov
cwtl
add
popa
shrb
fdivs
in
mov
jne
dec
popa
mov
loopne
sub
cmp
ss
faddp
test
fdivl
outsl
in
movsl
outsb
lcall
mov
and
dec
jbe
jge
iret
int
push
les
scas
jmp
pop
sbb
mov
shll
push
cmp
cltd
lock
cmp
and
push
mov
mov
inc
sbb
xor
int3
mov
loope
mov
daa
enter
outsl
arpl
mov
mov
gs
pop
loop
lahf
fwait
mov
adc
sbb
aas
bound
cmpsl
xchg
adc
jp
scas
notb
es
xor
mov
in
push
rcrb
dec
in
das
xchg
cmp
rcr
inc
sbb
cmc
sub
stos
dec
lret
pop
mov
jne
sbb
mov
repz
and
jg
inc
lret
pop
or
movsb
subl
push
fisttpl
mov
daa
and
lahf
mov
ss
call
orb
loopne
popa
and
cmc
fcoml
mov
sub
jb
mov
xor
or
pusha
add
dec
fs
sahf
aas
stos
mov
mov
mov
popa
mov
addr16
xchg
add
push
stos
aad
out
popa
sbb
aad
adc
and
push
pop
jae
mov
scas
sub
aas
cltd
daa
fdivp
mov
mov
xor
inc
int3
aas
and
mov
inc
jno
dec
dec
mov
out
loop
cs
mov
inc
fildl
into
je
jb
adc
cli
in
add
stos
int3
lret
sub
pop
je,pt
pop
lcall
jmp
jle
addr16
or
xchg
rclb
repz
sub
inc
adc
mov
rcrl
into
jns
inc
outsb
push
mov
ds
roll
cmp
push
jbe
sub
push
out
xor
jae
inc
mov
and
popf
sbb
sbb
add
sbb
out
movsl
push
pop
imul
lods
xor
xchg
pop
sbb
stos
gs
mov
pushf
jae
xchg
jb
xor
adc
push
stos
outsl
test
push
mov
jnp
xchg
lcall
lret
and
ja
stos
shlb
cwtl
icebp
lret
notb
xor
mov
dec
inc
xchg
adc
mov
push
dec
ret
sub
jno
and
pop
mov
cltd
and
or
push
ja
mov
push
lds
mov
das
cmpsb
sbb
sub
add
ret
mov
inc
mov
out
cmp
push
call
adc
outsb
mov
scas
mov
mov
bound
mov
sahf
or
stc
xchg
pop
nop
sbb
jae
push
popf
sbb
fisttpl
lret
pop
arpl
aaa
dec
ret
ret
add
js
push
lds
pop
mov
arpl
jge
push
xchg
in
lret
and
pop
pop
xor
stos
pop
mov
or
leave
jp
js
idiv
sub
cmp
ss
lea
sub
fstpt
dec
dec
loop
xor
cmpsb
or
bound
into
sub
cli
out
mov
dec
mov
arpl
mov
ds
fcmovb
outsb
adc
test
sarb
insb
mov
aad
clc
and
rcrb
cld
xchg
xor
in
mov
imul
sub
cmp
adc
nop
in
imul
imul
jmp
push
std
in
je
movsb
das
push
xor
jmp
push
adc
pop
in
pop
push
repnz
insl
mulb
shll
jge
leave
movsl
jmp
ss
in
xchg
and
pop
ss
push
jb
mov
fistpll
dec
ss
ret
cmpsb
mov
push
xchg
sub
in
aaa
int
sub
mov
ret
mov
mov
jno
jmp
je
inc
push
xchg
or
cltd
or
scas
xchg
out
int3
aas
loop
jnp
pushf
fwait
loop
dec
jbe
or
leave
icebp
ds
pop
lods
pop
xor
inc
or
cs
cld
mov
test
test
pop
lea
fstps
pop
mov
mov
inc
push
sbb
jecxz
lds
jmp
fs
addl
sbb
push
ficoml
jl
sbbl
pop
xchg
fnstsw
outsb
outsb
test
movsb
notb
mov
push
pop
xor
lahf
jbe
adcl
lcall
js
jge
mov
pop
cltd
orl
out
or
ficoms
in
repz
ljmp
aaa
jg
adc
xor
in
cmpsb
loop
dec
inc
push
add
lock
test
cltd
inc
std
inc
mov
pop
out
sahf
stos
fisttps
inc
push
jno
sbb
fcmovb
sarb
jb
pop
push
push
jb
fisttps
inc
cmc
cld
push
ret
xchg
movsb
scas
adc
cli
and
dec
mov
xchg
sub
fdivs
int
fcmove
or
sub
aam
std
imul
add
sbb
faddl
sub
jp
xchg
sarl
mov
gs
bound
insb
jo
hlt
je
sub
push
lock
rcrl
mov
nop
mov
jg
lret
scas
lock
in
or
mov
xchg
popf
xchg
xor
or
call
dec
cmp
shl
fs
movb
xor
or
sarl
addr16
push
xor
mov
dec
cmp
stc
add
lret
mov
clc
rorl
cld
imul
cmpsl
and
in
sbb
cmp
mov
mov
cld
movsb
adc
lret
cmc
std
sub
loopne
mov
and
inc
and
mov
pop
lock
call
dec
scas
push
into
push
mov
xorl
add
cmp
out
sub
inc
mov
pop
sub
daa
lods
outsb
xchg
adc
xchg
and
xor
popa
cltd
cld
stos
popa
push
xchg
aas
cwtl
popa
call
mov
xchg
sbb
sub
testl
adc
sub
pop
lcall
xchg
fchs
mov
cmp
or
jle
cli
mov
in
sub
jb
sub
std
sbb
dec
and
ja
mov
pop
pop
loopne
int
push
inc
and
inc
pop
stc
mov
inc
fs
and
wrmsr
lds
addr16
imul
cmpsl
mov
call
out
xor
xlat
iret
mov
sbb
push
inc
adc
dec
fs
mov
insl
les
mov
pusha
push
cwtl
cmpsl
out
aaa
mov
lcall
and
ljmp
cs
mov
pop
lret
pop
fistps
dec
daa
sbb
sub
mov
dec
push
iret
and
pop
cmp
sarb
addb
add
or
aam
cmc
outsb
call
nop
push
dec
jbe
and
and
loope
in
add
cmp
jo
icebp
ret
add
sar
gs
data16
adc
pop
loopne
sub
pop
outsb
sub
add
in
sti
xchg
jmp
shr
fnstenv
ret
dec
pop
lret
sahf
pop
sub
xchg
bound
mov
sbb
inc
adc
inc
mov
push
movb
ss
push
and
cmp
es
int3
repz
movb
lods
push
sub
xchg
test
pop
sahf
aad
cmp
shll
outsb
arpl
aaa
int3
push
push
jbe
xor
mov
jmp
sub
cmc
push
pusha
cmp
and
cmp
sbb
mov
jae
or
cmp
stc
nop
cmp
sbb
push
pop
sbb
rcrl
into
adc
adc
scas
popa
add
adc
shrb
mov
out
mov
xor
sarb
shll
push
mov
mov
adc
mov
mov
lock
adc
sub
fstps
mov
push
cmp
shll
sahf
dec
add
daa
movl
xor
dec
outsl
cld
adc
gs
push
push
pop
jb
cmpsb
int3
or
popa
mov
pop
jg
in
scas
jle
xor
pushf
mov
bound
or
shll
mov
or
aam
sbb
repnz
sub
lea
ja
add
xor
fwait
xor
adc
dec
dec
loop
fstl
shrb
mov
ficompl
adc
ret
addl
rorb
cmp
push
jbe
xor
push
scas
inc
fistl
push
icebp
sbb
sub
lds
dec
cld
mov
mov
mov
jge
scas
fstpl
adc
clc
sbb
cwtl
ret
leave
jne
adc
cmp
test
dec
jl
mov
stos
pop
lret
push
xchg
dec
pop
sti
fistps
dec
and
push
movsb
jno
jne
inc
mov
cmp
cmc
aaa
xchg
push
daa
adc
xchg
sub
clc
out
pop
push
adc
pop
or
mov
xor
cs
mov
xorl
sub
loop
xor
mov
aaa
dec
loop
popf
std
mov
bound
shlb
rcrl
sbb
adc
pop
in
add
xchg
sbb
ja
push
movsl
sbb
int
inc
sbb
lcall
and
orl
jecxz
adc
add
mov
clc
cmp
xchg
mov
push
xor
xchg
lret
add
mov
fsubrs
loopne
and
dec
pop
sbb
cld
pop
repnz
repnz
xor
mov
inc
xor
mov
mov
pop
loope
je
push
mov
add
orl
xlat
xor
push
jbe
or
out
inc
and
adc
movb
pop
and
mov
add
pop
mov
bnd
sub
xor
loope
push
cmp
icebp
lahf
adc
add
negl
dec
mov
arpl
cld
adc
jge
pop
xchg
sub
xor
jno
pop
outsb
mov
or
jl
icebp
and
push
add
sbb
fcmovne
rol
or
lock
outsb
sub
pop
sub
movsb
add
sub
pusha
sub
addl
cwtl
cmp
out
sub
xor
test
test
pop
mov
sub
xchg
push
cmpsl
fnsave
clc
repz
push
xchg
aas
dec
fiaddl
testl
xor
das
in
xor
jnp
pusha
sbb
sbb
xchg
fucom
jge
mov
lock
inc
les
dec
sub
call
std
xchg
lods
dec
ss
cld
in
cvtpi2ps
or
cmp
pop
sti
mov
insl
std
jnp
ljmp
fcompl
push
pop
inc
xchg
lcall
stc
mov
mov
dec
repnz
jp
negb
pop
cli
ss
les
enter
pop
lods
mul
rcl
subb
notl
test
rcrb
adc
inc
sbbb
xchg
jecxz
push
xor
sbb
roll
inc
jb
jno
adc
lret
scas
out
out
fnstcw
test
jl
out
mov
jle
sahf
cmp
in
mov
xchg
mov
stos
inc
in
sahf
pushf
test
mov
in
loop
pushf
scas
sbb
repz
dec
cmpsb
cmc
mov
pop
adc
les
mov
fnsave
and
cmc
xorb
pop
out
into
jmp
cmpsl
cmp
sbb
jno
das
inc
lret
lahf
test
mov
pop
mov
xchg
lods
out
int
cld
inc
stos
dec
lea
push
push
arpl
xchg
xchg
jecxz
mov
mov
xchg
xlat
cmc
xor
jp
in
mov
inc
inc
cmp
sub
lcall
jae
adc
and
test
mov
in
or
imul
test
fisttpl
adc
add
inc
inc
sub
xor
pushf
jnp
es
push
enter
and
out
std
and
push
stc
mov
mul
add
xor
mov
outsb
test
cmp
and
shll
adc
insl
int3
dec
arpl
jb
pop
sub
or
jb
lea
pop
cmp
int3
inc
sub
push
pop
pop
sahf
mov
jnp
testl
les
pop
fdivrs
loop
icebp
bound
add
daa
iret
push
dec
frstor
arpl
jg
xchg
push
xor
aas
in
cld
movsl
jecxz
pushf
sbb
nop
pop
mov
and
in
pop
cld
dec
test
into
jg
hlt
pop
aas
nop
sti
jmp
jecxz
xor
mov
mov
test
das
inc
lret
mov
pop
cld
mull
and
leave
push
xor
or
popa
test
ficompl
dec
jle
rorl
out
lret
andb
in
jmp
push
inc
ret
movsl
out
aam
jge
in
les
xchg
daa
pop
pusha
mov
push
push
test
stos
jne
cmp
cmp
cmc
adc
sub
xlat
or
pop
xchg
and
je
xor
test
aam
fs
mov
cld
inc
lds
leave
aam
cld
jnp
dec
arpl
ss
push
mov
scas
sbb
push
sarb
push
push
push
mov
mov
and
loop
test
push
mov
mov
repnz
xchg
lock
mov
pusha
jecxz
je
es
mov
jg
imul
mov
fcmovbe
xchg
in
adc
lods
add
sub
push
gs
lcall
into
outsl
loope
mov
subl
push
in
xor
xor
mov
nop
pop
mov
and
inc
mov
push
fimull
dec
cmp
sbb
enter
rorl
or
test
inc
sarl
outsl
sarl
lock
nop
jl
jmp
int
jecxz
push
inc
push
jo
test
std
test
bound
mov
movsb
dec
repz
cltd
nop
lock
das
gs
jnp
jae
ja
jle
jo
in
imul
orb
cmp
cmp
and
and
je
fdivl
sti
sbb
dec
mov
xor
jl
roll
rorl
and
dec
fcompl
hlt
pop
test
daa
shl
jno
mov
sbb
and
aad
dec
push
xor
cmp
pop
jge
in
inc
push
mov
jns
sbb
xor
inc
and
loope
push
or
add
xor
mov
mov
jnp
mov
sbb
mov
pop
subb
mov
inc
cmp
popa
fnstcw
push
mov
fstl
shrl
mov
ret
sbb
jmp
sbb
pop
fwait
mov
cmpsb
add
pop
sub
in
mov
and
dec
add
outsb
sub
je
jge
xchg
add
xlat
or
aas
sub
jl
js
repnz
or
fwait
inc
jmp
push
imul
fldl
dec
rcll
pop
sbb
ja
push
ljmp
jg
adcl
imulb
pusha
jecxz
cmp
call
push
cmpsb
dec
bnd
sets
mov
jg
leave
fidivs
fisttps
jecxz
inc
les
lcall
scas
mov
cmc
mov
add
mov
jne
das
xorb
xchg
std
fidivl
cli
bound
loopne
jge
lret
roll
sbbb
and
outsl
loope
imul
xor
outsb
cmp
adc
sub
pop
movsl
inc
xchg
add
aaa
push
pop
sarl
mov
repz
sub
push
aaa
out
mov
inc
fistl
and
popf
push
imul
leave
mov
arpl
out
cli
lods
xchg
jg
push
stos
jno
jb
mov
jecxz
sub
negl
orl
add
jne
leave
jno
add
adc
mov
lcall
dec
loope
sub
shrb
xorl
inc
mov
push
mov
xchg
and
sub
testb
mov
jae
sub
sub
leave
cmp
push
dec
jle
lods
mov
popl
xor
imul
cmp
fisubl
iret
outsb
push
mov
ret
addl
ljmp
add
outsb
dec
cmp
in
jge
pop
js
inc
inc
imul
push
mov
aas
and
arpl
ds
lret
jnp
rorb
inc
data16
bound
push
std
push
dec
fbstp
sahf
outsl
mov
mov
fucom
shlb
mov
xchg
add
cld
push
pop
imul
cmp
js
cmpsb
adc
arpl
stc
cmpsb
mov
bound
jne
jmp
xor
mov
and
js
sbb
bound
dec
ss
sbb
pusha
les
adc
in
push
mov
jo
into
jne
cltd
pop
mov
sti
mov
mov
je
xor
jmp
ja
fwait
jnp
adc
xor
cmp
and
div
aam
lret
cli
push
lock
out
mov
jle
and
jp
pop
inc
je
dec
arpl
das
pop
jmp
int
xchg
cmpsl
cmpl
pmaxub
adc
jno
outsb
leave
lods
dec
enter
subb
mov
sub
insl
jne
dec
mov
xlat
mov
sbb
or
dec
pop
jns
into
out
jbe
bound
mov
pop
out
cld
sbb
jbe
scas
cmc
pop
mov
push
popa
loopne
mov
pop
push
inc
std
jmp
in
fiaddl
and
inc
cmpsl
inc
cmp
dec
aas
adc
push
aam
cli
sbb
fdivr
call
sbb
push
mov
and
jmp
es
add
loopne
outsb
daa
ret
jae
sub
xchg
xor
push
mov
js
jp
into
xchg
sbb
lahf
dec
leave
mov
mov
push
rcll
in
cmc
xchg
jp
insb
jnp
add
push
repnz
into
dec
push
cmp
jmp
inc
les
xchg
inc
fwait
nop
addr16
xlat
pop
les
dec
scas
int
fdivl
mov
inc
xor
push
push
stos
out
adc
mov
pusha
pop
jo
aaa
nop
push
fsubrs
inc
pop
lret
xchg
mov
aam
pop
xor
sahf
and
cs
mov
push
jnp
mov
xor
add
add
inc
and
xchg
jbe
xor
clc
fcoms
sti
repnz
in
pop
loope
sub
icebp
aad
mov
and
scas
cli
fmuls
mov
xchg
repz
or
in
jg
and
mov
sti
outsb
shll
ret
mov
add
push
or
pop
jno
ss
dec
pop
mov
push
mov
cmp
pop
push
cmp
push
pop
aad
inc
fsts
popa
xor
in
int
mov
or
fbld
pop
sub
mov
loop
aam
inc
inc
dec
push
dec
out
add
push
xchg
cld
adc
adc
sbb
push
fcmovu
adc
movsb
enter
insl
lret
lret
pop
jae
pop
mov
xor
cmp
std
rorl
lcall
call
sub
inc
repz
cmp
adc
push
mov
mov
mov
push
sbb
pop
inc
adc
sub
mov
outsl
mov
xor
inc
xchg
imul
lea
rorl
imul
bound
add
adc
adc
jl
fnstcw
push
fcmovbe
xchg
ja
orb
inc
int3
arpl
push
jp
dec
pop
push
inc
sbb
pushf
and
hlt
popa
movsb
dec
mov
fisttpl
lock
rcrb
lea
leave
in
ret
pop
adc
movsb
push
outsb
popf
add
sub
pop
add
jle
movsb
cmp
mov
int
in
in
add
and
int3
mov
jl
mov
nop
pop
sub
cmp
outsl
cld
sub
mov
sahf
test
push
mov
lock
cs
sbbb
jecxz
pop
jo
loop
pop
popa
jae
fisubl
mov
test
inc
mov
and
inc
dec
xchg
inc
flds
xlat
cs
shll
jbe
mov
daa
repz
lahf
shlb
outsl
cmp
sbb
out
or
fistpll
lcall
mov
lods
sbb
sbb
dec
jge
xor
mov
jo
dec
fldt
mov
sub
cld
insl
push
inc
or
in
mov
scas
je
icebp
mov
mov
mov
notb
fs
and
int
pop
mov
outsb
std
fcmovne
adc
loopne
ja
jle
fstps
jmp
mov
and
addr16
push
jmp
mov
subl
lods
sbb
inc
lahf
shl
cmp
fdivrs
test
jmp
push
stc
in
mov
lods
subb
loope
push
or
test
test
xchg
out
or
sub
in
mov
inc
xor
push
cwtl
jns
les
and
and
dec
push
and
mov
mov
cmc
lcall
push
ret
jp
fmul
or
pusha
mov
mov
scas
ret
imul
cmp
and
daa
ss
aad
loope
sbb
xchg
dec
add
cmpsb
sti
and
test
hlt
xchg
fmul
sbb
nop
jae
lock
push
pop
icebp
mov
je
dec
test
lret
sti
inc
xchg
cmpsl
sub
jecxz
pop
dec
inc
test
push
movsl
cltd
or
cmp
cmp
xor
sbb
sub
mov
cli
mov
gs
stos
test
mov
pop
dec
loop
shr
mov
mov
adc
sbb
lods
cmpsb
iret
mov
sub
jle
push
mov
mov
incl
aad
pusha
enter
dec
adc
aam
cwtl
adc
leave
lods
enter
push
gs
popf
pop
push
dec
test
sub
and
xchg
adcl
push
jge
and
cwtl
mov
mov
push
aad
or
and
int3
movsb
sbb
fcoml
roll
mov
push
adc
stos
cmp
or
insl
xchg
test
in
stc
xor
in
clc
mov
add
mov
and
xchg
add
or
push
or
and
push
mov
mov
pop
mov
mov
mov
sub
lcall
mov
inc
jno
ds
and
decb
pop
and
jb
xor
outsb
push
data16
add
aad
stos
mov
push
and
xorl
mov
movsb
popf
aas
rclb
mov
add
test
lds
outsb
aas
mov
lock
jg
push
lret
push
adc
loopne
or
lcall
icebp
orb
pop
jl
dec
dec
sub
jmp
stos
or
aam
push
pop
dec
out
data16
inc
inc
cmc
stos
jae
arpl
fistpll
lret
cli
push
out
andb
negl
add
adc
mov
jbe
in
sub
ds
sti
test
in
pop
pop
repnz
sbb
or
cvtps2pi
pop
das
loope
shrb
pop
dec
rcl
ret
cli
mov
jl
xor
pop
dec
inc
pushf
push
cmp
insb
roll
sti
pop
je
std
out
ja
dec
dec
mov
mov
sbb
movsb
cli
imul
push
inc
out
sub
adc
lds
push
push
std
into
movsl
xor
hlt
or
sbb
inc
rclb
test
sbb
sbb
push
div
aam
ljmp
mov
int3
nop
pop
mov
scas
and
xchg
shll
pop
and
imul
xchg
sub
adc
dec
rorl
cmpsl
test
cltd
add
jo
and
push
pop
orl
lahf
movsl
xlat
pop
out
pop
xorl
push
int3
pop
mov
push
mov
and
repz
sub
sbb
js
and
dec
mov
mov
out
lret
xchg
dec
imul
loope
or
in
inc
cld
dec
fstps
addl
sbb
jo
imul
or
mov
add
iret
xor
insl
repz
mov
push
xor
cmp
out
clc
in
mov
fcoml
or
mull
sub
adc
xchg
push
add
mov
push
popf
xor
xchg
push
push
adc
movsl
or
int
push
dec
xchg
xor
mov
stos
into
dec
mov
sbb
cld
outsl
hlt
sub
and
push
stos
pop
sbb
mov
iret
lea
push
sti
in
ss
leave
sahf
mov
icebp
sub
xchg
pop
popa
pop
and
subb
or
bndldx
add
cmp
dec
xor
js
in
adc
bound
mov
leave
rcll
xor
push
jne
in
jns
mov
int3
jb
inc
push
lds
pop
cld
mov
pop
jns
add
icebp
xchg
sbb
jae
mov
movsb
scas
mulb
inc
xchg
xor
lcall
int
pushf
fistl
mov
sbb
push
inc
and
scas
inc
gs
sub
jle
into
adc
movsl
dec
xor
sbb
xorl
lock
xor
jb
adc
aaa
stos
outsl
sub
sbb
clc
mov
adcb
adc
xchg
rorb
aam
add
dec
out
add
and
jns
xor
clc
xchg
rcr
imul
outsl
test
lret
out
fldcw
stos
clc
jnp
xchg
pop
mov
xchg
push
loopne
inc
jmp
cmp
jle
jne
xchg
cld
cmc
shlb
loop
sbb
push
jp
int3
dec
mov
inc
mov
add
or
add
cmp
subb
pop
cli
pushf
shr
lods
jno
push
js
jns
inc
jmp
repz
sbb
dec
das
pop
push
jae
xchg
lcall
push
dec
sub
pop
dec
inc
dec
jnp
sub
arpl
nop
repz
add
push
test
ss
cld
fistpl
adc
add
out
jbe
movsl
xor
mov
adc
fwait
or
arpl
and
sbb
lret
imul
daa
cltd
mov
jo
pop
rcrl
dec
pop
jae
add
decb
mov
mov
test
pop
lret
push
pop
mov
loope
push
test
mov
and
adc
jp
es
sbb
xchg
lret
stos
mov
scas
jns
mov
pop
adc
sbb
inc
stc
popa
cld
and
jne
and
cmp
ljmp
das
cmovae
arpl
sbb
stos
push
ja
sbb
loope
lahf
adc
cltd
ss
inc
sbb
sbb
stos
movl
stos
cmp
popf
repz
pop
fisttpl
test
ja
loopne
or
mov
mov
arpl
adc
pop
pop
dec
jne
push
loopne
inc
in
dec
sub
pop
mov
or
cs
push
xlat
stos
push
and
rcrb
mov
insb
jo
push
fadds
dec
add
idivb
std
sti
pop
jle
cli
lock
and
test
mov
out
add
xchg
decb
mov
mov
into
stc
adc
xchg
stos
jae
sub
sahf
fnstenv
and
sahf
xchg
dec
je
sbb
out
ds
sbb
jb
test
dec
imul
inc
lea
lret
imulb
adc
xchg
shr
jp
mov
cmpsl
push
xlat
dec
sub
push
xchg
scas
add
mov
aad
pop
lods
hlt
xchg
or
idiv
add
xor
and
jnp
aad
mov
lods
cmp
scas
imul
jle
mov
pushf
in
dec
push
inc
sbb
insl
mov
bound
aas
adc
out
push
cli
adc
nop
mov
mov
xor
or
xchg
mov
push
pushf
das
push
sbb
cli
jecxz
push
fsubs
xchg
in
outsl
int3
add
and
dec
je
rcll
in
nop
sti
mov
push
push
loop
push
cmp
inc
aad
or
out
mov
repnz
cmp
sub
outsl
popf
cmp
inc
jle
xor
inc
movsb
pop
sub
daa
movsl
daa
xchg
or
fiaddl
ret
outsl
add
and
loop
gs
stos
push
inc
dec
or
inc
hlt
or
cmp
mov
popf
sbb
call
push
xchg
fdivp
mov
jge
aad
xchg
xchg
mov
in
sahf
add
movsb
inc
daa
ret
mov
cmp
loopne
aad
xor
aas
and
jmp
or
scas
push
out
inc
sub
jo
stos
jg
pop
pusha
sub
leave
frstor
jmp
add
mov
pop
push
div
inc
std
and
dec
mov
nop
stos
bound
sbb
push
decb
fldt
int3
fdiv
jmp
gs
das
mov
xchg
sbb
ja
cwtl
mov
or
adcb
arpl
jp
jae
jl
adcl
push
push
push
sbb
shlb
fstpl
mov
jb
sub
inc
js
pop
sahf
add
sub
add
addr16
subb
mov
jns
scas
xor
sub
adc
mov
ds
mov
push
sbb
sbb
sbb
outsb
push
lock
and
sbb
dec
and
das
ret
aaa
outsb
pushf
xorb
pusha
xor
xchg
pop
imul
pop
ret
mov
jno
pop
sti
push
jmp
lahf
push
stos
add
pushf
pop
int
xchg
addr16
rcll
cmp
push
out
add
sbb
push
rcll
xchg
nop
inc
cli
push
mov
lcall
pop
neg
mov
addr16
xor
sub
not
add
icebp
pop
add
mov
lods
scas
ds
pop
xchg
pop
stc
mov
insl
push
aad
loop
mov
jo
repz
mov
mov
cld
lock
mov
mov
and
ret
or
loope
push
movsb
dec
xchg
stos
lcall
loop
bound
xor
xchg
cs
lahf
outsb
pop
dec
into
sub
xor
cmp
push
clc
cltd
pop
lods
jp
add
xchg
insl
push
inc
ds
xchg
idivl
jle
add
cmpsl
lds
in
mov
mov
and
adc
lret
out
outsb
pop
dec
mov
sbb
sub
ror
outsb
out
mov
or
cmp
xchg
mov
jns
lahf
sbb
add
or
in
js
jmp
loop
out
cmp
aad
int
push
dec
loope
xchg
pop
aas
rcr
mov
push
jno
adc
loopne
mov
cmpsb
data16
push
in
jne
mov
or
and
fcoms
xchg
mov
into
sbbl
test
jmp
xchg
out
push
mov
adc
mov
xchg
lcall
sub
addr16
loope,pt
orb
jns
and
pop
push
insl
fs
int3
add
mov
ret
or
test
add
scas
aad
sub
dec
xchg
cltd
inc
adc
cmpsl
pop
pop
stos
int3
ds
not
data16
adc
inc
push
xor
lret
pop
sub
sbb
cmpl
adc
dec
test
iret
xor
cmpsb
and
mov
or
sti
into
push
fwait
orb
in
fstpt
ret
sbb
xor
aam
test
mov
mov
xor
leave
fmuls
call
sbb
insl
imulb
inc
enter
das
rorl
cmpsb
pop
jg
push
mov
push
jo
fldcw
add
or
pop
cltd
cmpsb
jno
push
and
mov
push
daa
fisubl
push
clc
and
dec
push
adc
jns
fcomps
fbld
lods
jbe
adc
out
adc
mov
pop
std
xchg
test
xor
ret
mov
inc
test
js
ret
roll
pop
movsb
dec
jne
dec
ret
shr
out
add
int3
je
push
lahf
cmp
inc
pusha
mov
cltd
adc
adc
sbb
mov
jecxz
pop
and
xchg
je
wbinvd
dec
cmc
sbb
out
jne
push
movsl
jo
mov
loop
ss
dec
pop
add
push
cmc
sbbl
sub
loope
jae
or
push
das
sbb
push
loope
mov
mov
insl
movsl
sbb
mov
mov
inc
pop
mov
lock
mov
jecxz
aaa
mov
testl
enter
cmc
xchg
pop
pop
loop
out
pop
cli
in
sub
jbe
push
xchg
test
or
ret
pop
or
in
leave
sub
clc
mov
jmp
insb
pusha
addr16
xor
aam
scas
or
jno
outsb
jns
clc
pop
adc
clc
and
jns
mov
in
push
es
orb
loopne
in
fistps
popf
mov
neg
sub
dec
mov
pop
mov
jmp
fmull
xlat
xchg
xchg
ss
xor
add
mov
cmpsl
rcl
sbb
jecxz
lds
pusha
jle
inc
fs
fwait
dec
push
pop
xchg
push
aam
mov
outsl
arpl
or
push
xor
sub
jge
addl
and
mov
sub
mov
out
dec
addb
popf
out
es
jnp
push
cld
stc
add
loopne
aaa
lahf
mov
mov
xchg
mov
xchg
mov
mov
leave
fisubrs
xchg
ficompl
adcl
lret
sbb
inc
stc
push
cmpsl
pop
stc
mov
pop
dec
ss
inc
xchg
mov
mov
fcmove
mov
outsl
xchg
xor
stos
push
push
mov
cmp
fucomip
mov
out
cwtl
out
ljmp
test
fnstsw
pop
cmpsb
stos
bound
jg
inc
xlat
dec
xor
loope
lods
clc
pop
nop
aas
lods
lret
xor
pop
lea
jnp
imul
or
fcoms
lods
aad
hlt
cmp
sti
jno
mov
dec
xchg
push
lea
loopne
add
xor
pop
push
or
sbb
gs
dec
addl
out
nop
cmp
pop
adc
inc
dec
fwait
out
into
xor
fwait
cltd
mov
xor
push
cmpsb
jl
cmp
mov
dec
inc
or
dec
and
jbe
inc
out
fildll
fs
pop
loop
inc
xchg
push
jo
fildl
insb
jl
xchg
pop
loop
mov
stc
push
pop
frstor
adc
pop
xor
cmpsl
sbbl
xchg
nop
fcoms
jmp
and
xor
push
sbb
inc
and
movsl
jb
fwait
and
jno
push
leave
adc
push
push
and
jg
cmpsl
aad
xchg
or
xchg
adc
loopne
or
ljmp
sub
dec
iret
cltd
int3
int
pop
lahf
jle
jae
cmp
stc
add
adc
gs
lock
test
rorl
ljmp
cmpsb
ja
dec
adc
pop
movl
xor
cltd
inc
arpl
arpl
loopne
ret
lds
int
std
jne
std
test
cli
inc
sub
or
xor
cs
imul
bound
push
call
inc
inc
sbb
cmp
shll
in
and
out
push
test
das
arpl
stos
stc
popf
sub
xchg
gs
pusha
sbb
test
aad
xchg
mov
jns
not
movsb
push
lcall
push
or
in
test
mov
xchg
dec
int
inc
inc
inc
repz
sub
pop
cltd
xchg
cmpsb
mov
shl
ja
mov
adc
xchg
jecxz
mov
mov
andb
or
jg
pop
scas
into
sahf
mov
mov
lret
sub
dec
inc
pop
das
adc
pop
push
add
inc
mov
push
loop
repz
pop
lret
loopne
jp
sub
pop
data16
jg
fisubrs
and
loop
cmp
pop
pop
inc
jns
lcall
movsl
mov
mov
push
popa
sub
add
and
cmpsl
out
push
push
push
pop
subl
in
dec
xor
mov
popa
shrb
test
push
stos
imul
loop
movb
pop
fxch
bnd
sahf
hlt
lock
mov
stos
je
lods
cmp
sub
gs
inc
enter
dec
ss
inc
add
ret
out
fstps
cmpl
in
xor
sbb
scas
fldl
mov
loop
add
in
out
xchg
fsubp
push
aad
mov
inc
push
icebp
and
shll
sbb
gs
ja
push
aad
out
dec
out
jge
push
mov
push
jge
test
std
mov
data16
sbb
dec
test
shll
sbb
fsubs
and
subl
shl
ds
mov
jge
iret
add
sub
jnp
mov
jle
or
dec
pop
jno
or
aas
add
pop
cmpb
test
aad
repnz
mov
jo
test
adcl
jnp
and
adc
lods
ficompl
in
add
jge
fptan
cltd
pop
fbstp
loop
insl
mov
icebp
mov
jns
dec
xor
and
cmc
div
imul
cmpsl
jmp
clc
cmp
or
cwtl
imul
fs
aas
mov
daa
inc
xchg
sub
testl
out
mov
jbe
xchg
ficoms
sub
loope
and
cmp
adc
bnd
dec
int
or
xor
or
pop
push
add
inc
sub
push
inc
dec
outsl
and
popa
jae
sub
ss
repnz
aaa
inc
ret
mov
pushf
inc
inc
fwait
insl
aaa
popa
lcall
movsl
xchg
scas
test
pop
xchg
lds
jecxz,pt
mov
push
pop
adc
in
pop
and
xor
xchg
push
jge
ja
sub
aad
adc
jmp
mov
push
jl
hlt
addr16
call
jp
dec
mov
push
mov
xchg
lock
insl
ljmp
insl
jle
nop
adcb
arpl
int
ds
mov
cwtl
pushf
mov
push
cmp
cwtl
add
stos
mov
pop
xor
jmp
xchg
mov
push
adc
inc
mov
adc
cld
cmp
push
mov
les
cmp
sahf
sbb
sbbb
ds
dec
dec
pop
repnz
stc
inc
adc
sbb
mov
mov
fs
xor
addr16
test
lahf
ret
decb
inc
jle
mov
inc
xor
sub
pop
arpl
adc
loopne
repz
cmp
mov
lock
inc
imul
es
pop
jno
and
xchg
xchg
ret
jns
add
das
cmpsl
out
xor
popf
push
leave
add
clc
adc
xchg
aas
mov
fisttpl
popf
xor
shlb
mov
sbb
movsb
jle
sbb
mov
nop
stos
adc
cmp
inc
lds
mov
push
and
mov
aad
les
subb
icebp
mov
es
iret
call
ror
and
or
pop
dec
inc
cmpl
jg
imul
xchg
sbb
mov
mov
mov
pushf
dec
push
jmp
lods
jbe
test
div
adc
jmp
idivb
leave
pop
mov
adc
aas
add
dec
push
pop
ss
cmpsb
je
sahf
xchg
lret
jl
fstps
add
aam
mov
test
xchg
add
mov
adc
or
push
fwait
or
fiaddl
adcb
mov
inc
cli
icebp
lahf
daa
mov
insb
jne
ret
sbb
inc
mov
stc
sti
mov
jecxz
out
lea
lcall
loop
and
inc
xor
inc
scas
std
mov
icebp
and
mov
xor
icebp
push
std
inc
fs
jp
mov
inc
les
pop
imul
lods
fistpl
movsl
xchg
pop
dec
nop
add
mov
jne
loop
sub
cli
lahf
in
mov
xchg
cmp
dec
adc
imul
adc
ret
or
mov
enter
lods
or
xor
stos
dec
or
aam
mov
mov
ret
lods
repnz
les
shlb
mov
push
nop
loop
jnp
sahf
cltd
les
lods
inc
cmp
pop
mov
aas
xchg
cmpsb
addl
dec
sbb
cli
popf
stos
push
cltd
or
xchg
loopne
out
dec
cmpsl
dec
sbb
mov
and
aaa
scas
test
xchg
push
push
loop
mov
jnp
and
add
jmp
dec
inc
test
dec
cmp
les
rclb
imul
pop
or
mov
mov
popf
hlt
test
cmp
ret
ds
xor
pop
jmp
pop
shl
inc
mov
scas
add
mov
bound
cmp
push
js
dec
movsl
jmp
mov
in
mov
jns
xor
stc
cmp
cmp
mov
ljmp
pop
imul
ds
rclb
enter
ret
test
xor
shll
xchg
dec
addr16
data16
inc
inc
cvtps2pd
hlt
add
pop
into
shll
mov
scas
fidivrs
xchg
mov
enter
cmpsl
and
push
sub
lods
pop
daa
cmp
std
inc
push
movsl
lahf
sub
sbb
jle,pt
hlt
inc
fdivs
test
mov
cmpsb
outsb
int3
mov
gs
sti
add
xor
aaa
adc
dec
lds
sarb
ja
shll
ret
jnp
or
ret
clc
pop
cmc
jg
push
scas
daa
test
xor
or
popa
cmp
sbb
ret
testl
incb
mov
subb
cmp
jae
out
jge
inc
int3
add
push
jnp
aas
adc
mov
std
xchg
mov
jae
add
test
and
add
sub
mov
test
cmpsl
mov
mov
pop
mov
or
int
add
push
or
outsl
add
in
push
jnp
xchg
dec
pop
adcb
out
xchg
mov
nop
lret
fildl
jmp
cmpsb
repz
push
sub
jbe
in
dec
dec
mov
fdivrs
int
inc
mov
loop
pop
adc
add
clc
cmp
or
call
pop
ljmp
test
fbld
pop
dec
cli
mov
push
iret
adc
andb
ljmp
lcall
lsl
mov
jnp
orb
xchg
and
shrl
and
push
inc
scas
int
dec
std
jno
cmp
xchg
pop
xchg
cmc
in
adc
and
iret
xchg
jecxz
lock
test
mov
jno
mov
pop
imul
push
sub
inc
pop
ret
std
xor
xchg
adc
or
adc
inc
outsb
dec
xor
nop
ljmp
pop
lea
mov
inc
dec
adc
pop
test
pushf
pop
pop
adc
in
lds
jae
and
scas
pop
xor
push
inc
in
cmp
lea
adc
xor
movsl
mov
bnd
insl
sbb
sbb
cmp
mov
dec
fiaddl
int3
add
movb
sub
adc
popf
push
jmp
inc
xchg
jge
ds
sub
mov
push
pop
out
fmull
dec
scas
imul
mov
sub
cmp
fimull
loop
stos
or
divl
hlt
sub
mov
dec
cld
nop
and
add
dec
mov
imull
sbb
sarl
adc
loopne
mov
lds
cmc
dec
inc
repz
jl
cmp
cmp
test
ds
inc
fidivs
out
lcall
test
aas
pop
or
repnz
push
adc
imul
inc
cs
add
orb
shll
dec
into
push
fidivs
leave
repz
push
cmpsl
dec
rcll
fisubs
cmp
mov
inc
or
push
repnz
push
outsl
push
pop
mov
inc
cmp
ret
sub
mov
adcl
gs
cmp
and
mov
sub
rorb
rolb
dec
pushf
add
sbb
xchg
test
cmp
in
in
insb
jo
cld
xchg
sbb
out
cltd
and
adcb
jno
xchg
lret
sub
push
mov
adc
push
and
xor
popf
insb
adc
mov
ret
bound
cld
test
out
dec
loopne
idivb
or
push
test
pop
mov
xor
insl
int3
mov
inc
xchg
sub
ljmp
lods
rorl
fbld
dec
lea
pop
dec
addr16
mov
stos
jb
dec
inc
leave
mov
stos
jns
adc
hlt
sti
addr16
repz
ljmp
or
sub
out
out
mov
mov
sbb
orl
mov
inc
es
dec
and
sbb
movsl
or
outsl
sub
popf
and
repz
cmp
cmp
in
rol
lods
mov
out
rol
inc
rcrl
gs
xchg
shlb
jl
in
popf
sarb
mov
sbb
mov
dec
pop
push
xchg
mov
jns
ljmp
rolb
loope
mov
adc
jmp
jmp
daa
mov
out
mov
test
mov
cmpl
push
xor
push
push
sub
shll
xor
mov
pop
push
testb
testl
icebp
fs
jno
sub
in
xchg
sbbb
in
pop
jno
jnp
xor
negl
push
pop
mov
cmp
xchg
nop
out
mov
pop
imul
fstpt
data16
adc
movsl
hlt
icebp
push
xor
dec
push
lds
fildll
sub
fbstp
pop
xchg
push
cmp
xchg
lea
sbb
fs
mov
daa
cmpsb
test
pop
mov
movsb
dec
sub
add
dec
orb
incb
and
and
xor
mov
mov
xor
add
xchg
xchg
ss
or
leave
pop
gs
dec
xchg
mov
jmp
pop
jmp
push
icebp
fldcw
add
sub
lea
insl
ret
mov
add
aam
sbb
repz
jne
rclb
inc
stc
sti
pusha
mov
mov
or
popf
push
mov
sbb
dec
push
xchg
cli
jp
test
inc
push
arpl
and
icebp
jmp
and
scas
sub
mov
std
movsl
push
iret
cwtl
aad
outsl
xchg
pop
mov
outsl
sbb
sbb
enter
fimull
roll
fbstp
rcrb
fldt
inc
or
loopne
inc
mov
sbb
or
sub
leave
and
shr
lret
jbe
pusha
fldenv
sub
sti
push
fstpl
ss
in
mov
aam
jl
inc
std
xchg
jb
test
cmp
pop
enter
je
push
scas
adc
and
and
push
jmp
cmp
shrl
ljmp
movb
xor
das
push
inc
mov
enter
bound
adc
xor
mov
stos
sbb
push
cmp
stos
cmp
push
push
jno
outsb
jle
out
outsl
jle
mov
cmp
ja
int
sti
lods
les
addr16
mov
add
cwtl
mov
jmp
push
cld
bswap
repz
rclb
popa
les
push
leave
jne
cli
sar
or
lock
sbb
shll
cmpsl
mov
add
loop
mov
pop
movsb
jae
movl
jae
sbb
jecxz
lcall
pop
lcall
arpl
fmul
outsl
insl
push
xchg
mov
xor
cli
sbb
sub
arpl
pusha
xchg
stos
cmp
in
adc
rcr
pop
dec
mov
int3
mov
inc
pushw
es
pop
add
out
lcall
sbb
enter
rolb
sbb
sbb
lahf
int
clc
push
cmp
push
jle
pop
cmp
mov
ret
xor
cwtl
lcall
cltd
jno
rclb
rorb
ficoml
sub
dec
pop
jb
mov
mov
mov
adc
cmc
or
test
cld
shlb
xchg
dec
fstpl
mov
mov
scas
loope
dec
das
fldcw
loop
sti
aaa
adc
pop
mov
movsb
sbbl
sub
pop
push
aaa
icebp
pop
cmp
pop
lods
cld
popf
add
jge
xor
negb
cmp
inc
ret
sub
or
stos
insl
jmp
ret
lret
cmp
scas
movsb
push
test
clc
dec
jge
negb
rorl
repnz
out
xchg
repnz
ja
jle
lock
xchg
jmp
out
adc
gs
xchg
dec
sub
mov
call
icebp
cmpsl
lahf
and
cli
adc
mov
mov
int
out
pop
inc
xlat
add
je
push
rolb
inc
dec
je
mov
push
xchg
jmp
adc
adc
ds
inc
imul
inc
int
xchg
pop
je
mov
pusha
ljmp
and
mov
jecxz
and
and
inc
sahf
dec
mov
mov
cmpsl
dec
data16
leave
scas
mov
mov
mov
add
cwtl
mov
clc
inc
int
mov
lods
mov
jbe
cmp
imul
dec
lret
cs
rolb
paddsw
ja
inc
ja
dec
ret
movsb
loope
jbe
add
inc
mov
xor
cld
xchg
mov
adc
roll
popa
pop
or
std
pop
xchg
inc
ljmp
jne
fldcw
rorb
cwtl
mov
push
pop
inc
cmc
jno
or
xchg
or
pop
push
push
sbb
mov
cltd
mov
dec
loope
mov
or
sahf
add
ret
xchg
sbb
leave
mov
jmp
sbb
fcmove
adc
jae
pusha
mov
mov
adc
fldt
xchg
mov
sub
test
jne
jbe
sbb
aaa
les
adc
cmp
push
mov
and
repz
pop
outsb
jns
inc
mov
ret
xchg
ja
jg
add
add
adc
leave
xchg
int3
fildl
scas
lea
ds
xchg
popa
imulb
fadd
jmp
mov
pop
dec
mov
push
and
in
inc
fxch
data16
inc
rcrb
jo
subl
inc
push
pop
pop
fisubl
rorl
cmc
or
and
mov
int
fs
add
xor
lret
jne
pop
jl
sub
insb
push
xor
nop
imul
mov
xor
or
sub
sub
mov
popa
xchg
fnstsw
jge
pop
ljmp
sbb
pop
loop
jne
pusha
push
subl
call
mov
pop
sub
adc
out
loopne,pt
js
sbb
scas
push
lock
sub
sahf
xchg
fmuls
pop
loope
mov
aaa
pop
jb
data16
cli
adc
pop
pop
cmpsb
add
jnp
rcr
adc
es
xchg
lods
sub
dec
shrb
sar
xor
pop
aad
hlt
hlt
aam
sbb
xchg
adc
push
repnz
sub
cli
imul
pmaxsw
xchg
pushf
inc
icebp
outsl
data16
pop
xchg
and
repz
test
lret
add
add
rclb
out
adc
dec
js
xor
flds
adc
mov
addr16
ss
cmp
inc
imul
push
dec
sar
jge
lea
arpl
or
mov
dec
test
dec
cmpb
push
incb
xchg
xchg
mov
aaa
cmc
arpl
repnz
pop
inc
fs
sub
mov
fwait
lods
arpl
dec
popf
loope
cmp
in
cmpsb
fidivrl
xorl
jo
test
jmp
in
push
inc
movsb
jb
jne
and
or
fsubrl
scas
push
out
jne
mov
or
cmc
out
inc
inc
stc
insl
mov
mov
or
mov
mov
sub
dec
mov
hlt
dec
out
sbb
xchg
cmp
decb
sahf
lea
test
push
imul
je
pop
jno
mov
jge
and
repnz
ljmp
jle
pop
nop
pop
fwait
movsb
decb
xor
scas
andl
out
xor
sbb
clc
leave
push
repz
mov
popa
insb
sub
in
stc
pop
pop
pop
out
lea
mov
mov
stos
pop
cmp
pop
mov
dec
jo
sbb
outsl
notl
dec
pushf
mov
inc
fists
fimuls
insl
inc
mov
insb
push
xchg
dec
loope
or
cmc
enter
and
pop
cmp
jl
outsb
push
xchg
or
sub
fs
in
lret
mov
bound
std
mov
int
loop
or
adc
xchg
jne
imul
and
fdivr
shrl
repnz
cs
int3
adc
pop
sarl
testb
mov
out
inc
aam
xchg
lret
rcrl
ds
cmp
cmp
insb
mov
mov
cmpsl
add
sahf
lret
xchg
xor
nop
push
jns
jb
hlt
jmp
lss
mov
jmp
xchg
mov
inc
xchg
in
xor
cmp
sub
push
cwtl
mov
fistpll
mov
stos
jno
mov
aas
test
add
or
fimull
les
fidivrs
outsl
pop
sub
stos
es
adc
icebp
into
mov
pop
mov
mov
movsl
xchg
sbb
pusha
fcoml
sahf
fisubrl
mov
sbb
jo
mov
mov
cs
mov
xor
pop
cmp
std
nop
xor
dec
mov
fs
sbb
stos
lcall
int3
cmp
pop
scas
add
xchg
mov
push
shrb
pushl
dec
ret
pop
mov
mov
mov
cli
mov
in
add
ret
test
add
sbb
pop
lods
int3
adc
xchg
and
fcomps
divb
dec
shr
fcompl
pop
mov
dec
and
mov
xchg
cs
mov
insl
jge
or
and
xorb
or
cmpsb
push
push
xor
fsubs
stos
xchg
lock
sub
out
aad
test
cmp
sbb
dec
lret
xchg
repnz
fwait
mov
dec
mov
sahf
lods
mov
adc
xor
jg
pop
fcoml
ss
xchg
test
nop
sbb
push
mov
js
jae
inc
pop
jns
cmp
add
adc
jle
push
test
lahf
loopne
in
add
aad
das
mov
add
sbb
mov
in
mov
xorb
push
xor
outsl
sub
and
aas
mov
clc
pop
fwait
add
jae
jne
stos
mov
pop
or
cmpl
in
cmp
fnstcw
mov
sbbl
adc
or
push
enter
and
insb
pop
pop
in
adc
loopne
or
cltd
cmpsl
cmovs
insb
sub
cltd
dec
int3
sbb
in
std
xor
enter
pop
xlat
sub
in
fbld
adc
add
mov
xchg
bound
jg
xchg
orb
pop
xor
adc
dec
loop
add
cmp
iret
das
incb
dec
outsl
loop
arpl
push
int3
in
repz
movsb
int3
loop,pn
inc
cmp
out
dec
lea
or
jmp
std
mov
pop
inc
or
ja
ss
mov
push
inc
or
testl
out
lret
sub
mov
in
outsl
inc
lods
mov
jno
adc
lea
mov
stos
int
sub
push
daa
mov
mov
and
addl
jb
push
jg
sub
daa
in
pop
mov
cmpsl
mov
adc
stos
clc
adc
in
add
pop
xchg
jle
xor
push
mov
pop
into
mov
sbb
rcrl
push
pop
cmc
mov
pop
hlt
add
fs
call
pop
cwtl
jae
cltd
jno
mov
mov
fimull
push
push
insb
sarb
mov
scas
mov
add
ljmp
jo
stc
shrb
das
adc
jp
aas
mov
jge
mov
jg
icebp
shlb
call
int
push
jl
ljmp
out
sub
mov
data16
push
outsb
sahf
inc
scas
fsubr
fsubrs
mov
mov
cmp
mov
stc
aaa
roll
andl
gs
ret
jne
loop
imul
mov
int
or
test
shlb
repnz
fstpl
jge
mov
sbb
ja
enter
pop
jbe
xor
push
or
fwait
jbe
xlat
inc
push
xor
shl
mov
and
mov
inc
sbb
push
test
sarl
ret
icebp
mov
inc
mov
out
dec
pop
sbb
movsb
test
movsb
mov
aaa
aad
jmp
jo
pop
mov
cmp
push
mov
in
mov
rcrl
fisubrl
lcall
bound
mov
mov
out
sbb
fwait
xchg
cwtl
lods
jg
cmpsb
xchg
sub
push
pushf
in
pushf
xchg
adc
int
loop
mov
and
call
cs
mov
imul
mov
adc
daa
adc
test
push
sub
and
inc
testl
aam
pop
jg
popa
cmpsl
pop
mov
cmp
push
loop
mov
out
cmc
lahf
mov
ljmp
add
out
mov
andb
data16
aaa
ljmp
push
repnz
lcall
sub
mov
sbb
lods
xor
adc
dec
test
int
dec
data16
es
inc
xchg
xchg
leave
movsl
or
pusha
jp
mov
xor
int
into
cmp
push
jmp
mov
das
out
push
popf
out
mov
fwait
mov
scas
loop
loop
pop
and
iret
iret
scas
jle
dec
aam
jg
lret
pop
out
inc
push
int3
pop
movntq
std
fsubl
inc
inc
jo
mov
dec
lods
movsb
fldcw
mov
xorl
mov
cmc
and
mov
pop
push
mov
and
cld
add
pusha
sbb
rcrl
pop
out
jp
lcall
roll
addr16
jg
lcall
mov
push
xor
daa
xchg
stos
add
jno
mov
test
sbbl
sbb
jnp
lahf
fbld
cs
jmp
rcr
int3
call
pop
mov
pushf
mov
in
fisttpl
shll
shl
and
stos
andb
adc
lcall
fcmovnbe
lret
inc
push
loope
bound
xor
test
xor
sbb
mov
pop
xchg
out
pmaddwd
out
push
dec
cmc
cmp
and
adc
or
xlat
adc
xor
in
das
loop
sti
xchg
inc
icebp
sub
je
cmc
pop
mov
inc
fimuls
and
jp
push
jns
scas
in
mov
jno
mov
mov
imul
imul
pop
into
repz
push
ja
xchg
or
in
add
out
inc
addr16
mov
lcall
lret
rorb
fwait
bswap
loopne
sbb
mov
test
jg
pushf
enter
pop
push
xorl
xchg
jae
jmp
jmp
xor
bound
insl
or
loop
pop
xor
into
pusha
scas
cmp
mov
cmc
push
dec
fcmove
sbb
mov
jo
push
adcl
bound
mov
mov
xchg
add
std
dec
out
cmp
test
fxch
lcall
mov
jnp
fcmovb
lods
lea
shr
sub
adc
repnz
push
les
mov
js
mov
sahf
nop
shr
fistpl
and
subl
pop
sahf
andb
sub
iret
into
or
and
ljmp
xorl
stc
inc
loop
std
add
push
add
mov
and
leave
addr16
push
loopne
gs
insl
lret
ljmp
inc
xor
inc
jb
addr16
lret
mov
fwait
inc
repz
mov
cld
mov
push
std
leave
ficompl
pop
movsl
sbb
sbb
sub
cmpb
mov
inc
cmp
xchg
sbb
int
iret
cltd
fidivl
pop
rorl
xchg
pop
outsl
inc
in
hlt
add
in
jmp
movsb
lock
rcl
mov
pop
in
jle
in
popf
adc
mov
gs
popa
iret
loope
in
ret
loop
ret
sbb
hlt
pop
xor
in
xor
xor
xor
psrad
cmp
mov
fsub
adcl
aam
sbb
and
imul
cmpsl
je
test
jl
insb
dec
pop
js
xchg
ja
loop
int
adc
ss
mov
or
das
push
js
ret
jmp
enter
and
pusha
sbb
lret
jb
pop
adc
or
or
jge
xchg
push
arpl
or
pop
jp
inc
fnstcw
cli
cmp
xchg
ljmp
mov
out
dec
jp
pop
pushf
sbb
sub
scas
xchg
outsb
pop
aad
fwait
sbb
insl
add
sbb
or
and
jl
inc
add
enter
aas
adc
shrl
mov
mov
mov
test
mov
sub
push
and
dec
orl
cmp
jbe
mov
lahf
or
push
sub
mov
inc
or
adc
daa
clc
dec
outsl
mov
xchg
xchg
aas
inc
mov
inc
adc
push
shlb
pop
mov
push
call
in
add
add
push
inc
cmpsb
adc
or
loopne
das
fnstsw
push
aas
push
xor
lods
cmpsb
xchg
jnp,pt
stos
lret
lea
or
adc
cmp
fadd
adc
jns
and
sti
cmc
gs
aad
or
xor
ds
dec
add
mov
jmp
testl
addr16
sahf
xor
jmp
mov
pop
pop
mov
and
jle
dec
jmp
push
jns
mov
and
cmp
mov
filds
dec
cmp
stos
out
popa
mov
inc
and
repz
loop
xchg
or
loope
push
jle
push
das
inc
sbb
mov
gs
jge
mov
add
sbb
decb
fmull
int
aad
inc
mov
add
dec
inc
and
dec
inc
jae
js
jg
pop
sub
jg
push
mov
xchg
jl
mov
mov
fildll
sbb
outsl
cwtl
popf
dec
imulb
sub
push
mov
push
push
cltd
mov
add
sarb
adc
fcmovbe
jne
and
jp
rclb
mov
xor
repnz
and
call
insl
sti
mov
jnp
xchg
jmp
sbb
stos
clc
pusha
out
icebp
xchg
fmuls
test
mov
xchg
mov
cmp
sub
js
mov
inc
xor
pop
dec
xchg
mov
mov
roll
dec
sbb
loope
cmc
dec
inc
sbb
sub
pop
mov
js
pop
icebp
cmp
mov
aaa
push
hlt
mov
jp
cmp
inc
or
rolb
or
subl
xor
push
pop
push
xchg
and
sub
jbe
cli
mov
adc
rorb
mov
dec
aaa
jp
mov
aad
mov
xchg
pop
pop
lret
adc
fs
lods
mov
in
jne
and
lea
and
scas
fucomi
ja
pop
cmp
dec
clc
int
or
fists
jmp
pop
and
pop
mov
negb
gs
insl
and
dec
or
pop
lret
add
inc
mov
adc
fadds
into
xchg
neg
hlt
fstl
scas
inc
mov
dec
ficoml
daa
cltd
adc
imul
outsl
cmp
pop
add
pop
repz
cmc
mov
arpl
lods
mov
stc
mov
xchg
cvtdq2ps
push
pop
jge
loop
adc
adc
push
mov
add
and
mov
sub
and
cli
mov
nopl
cmp
sbbl
sub
inc
xchg
xchg
scas
push
mov
loope
or
sarb
sbb
rcrb
push
mov
test
push
xor
int3
sub
das
jns
ror
fidivrs
sub
fists
das
and
or
data16
aam
xor
xor
out
ljmp
mov
je
and
mov
rorl
mov
xchg
sbb
push
or
sarl
jns
pushf
inc
push
sti
lahf
fstl
sub
pusha
shl
das
push
adc
std
out
sbb
or
cmp
lret
aad
dec
int3
jecxz
fwait
pop
push
ja
leave
js
jge
inc
xor
incl
in
movsl
push
ret
mov
sub
out
ljmp
xchg
or
xchg
ret
call
aam
inc
jmp
or
xor
mov
add
shl
sub
adc
rorl
push
xor
adcb
dec
fwait
popa
cmp
das
js
scas
fmuls
rcr
cli
ljmp
mov
lods
jae
pop
repz
fistpll
cwtl
xchg
out
in
xchg
lock
jns
das
cmpsl
shrl
add
mov
mov
add
mov
sbb
push
repnz
adc
mov
push
and
jecxz
subl
mov
or
xchg
je
imul
pop
push
mov
mov
das
rcrl
sub
mov
call
mov
rcrb
out
add
push
movsb
cmpsl
pusha
mov
lahf
pop
in
fisttpl
cmc
aam
outsl
mov
xchg
or
arpl
lahf
inc
enter
dec
stos
mov
mov
ret
mov
xlat
inc
call
jp
xchg
testl
adc
in
pop
in
mov
in
test
ljmp
imul
sarb
cltd
adc
out
pop
and
or
stos
ret
xor
cli
lock
lcall
push
or
out
pushf
push
movsl
fucomip
out
adc
cmc
shlb
leave
ja
jl
mov
shl
dec
pop
xchg
cmp
pop
mov
xor
cmp
mov
dec
inc
and
add
mov
cmc
xor
rep
ljmp
xchg
hlt
faddl
sub
xchg
jg
popa
mov
in
arpl
add
push
stos
add
sub
push
mov
xchg
lea
jb
rclb
filds
adc
add
test
lret
jp
mov
ds
sbb
cmp
rcrl
inc
ss
inc
xor
lahf
xchg
inc
push
adc
jge
ficompl
push
jl
mov
xchg
lea
loopne
fs
sub
rolb
pop
lcall
adc
in
mov
scas
dec
mov
jb
data16
shrl
mov
adc
inc
js
shll
mov
and
in
insl
out
rcrl
sub
push
mov
ja
jae
ljmp
sti
aam
jb
inc
dec
add
mov
mov
xchg
xchg
mov
or
test
in
sbb
out
ljmp
aad
mov
lret
or
adc
push
sub
add
xor
mov
pop
dec
scas
xchg
jp
add
xor
addr16
and
testb
loop
or
sub
push
mov
sub
dec
mov
lods
clc
mov
push
fldt
imul
test
in
enter
cmp
xchg
jns
rorl
outsb
arpl
lods
pop
rclb
outsl
nop
mov
lds
cmp
inc
cmovg
es
aas
pop
out
and
xchg
faddl
jne
iret
push
arpl
add
push
jmp
mov
arpl
mov
add
ss
fidivrs
push
aam
xchg
add
sub
cmpsb
icebp
mov
and
push
jne
pusha
or
dec
scas
pushf
cli
std
test
psubb
push
ficompl
and
inc
stos
dec
movsl
in
mov
cmp
jne
or
mov
adc
pop
mov
aad
adc
dec
cmpsl
sub
and
dec
out
add
icebp
xchg
sub
or
clc
adc
in
in
bound
cld
addb
and
pop
xchg
enter
inc
cmp
adc
bnd
xor
adc
or
stos
int
add
mov
fidivrl
add
cmpsb
jmp
xor
pop
lcall
mov
loop
mov
mov
push
lcall
xchg
xor
in
mov
cmp
jge
and
in
loop
loope
movsb
insl
aas
jae
or
and
imul
dec
fcom
dec
jecxz
lods
xor
shll
jecxz
sub
cmp
mov
mov
adc
add
call
xchg
sarl
jo
int3
xchg
push
dec
pop
das
xchg
stc
pop
dec
and
movsw
mov
mov
xor
push
aaa
lret
dec
mov
sub
movsb
pop
push
and
out
sbb
stc
leave
mov
mov
push
ljmp
xor
xchg
add
fisttpll
dec
repz
sbb
add
mov
out
subl
sbb
scas
in
mov
lock
pushf
xor
add
push
push
jg
sub
arpl
testb
loopne
popa
or
int3
ds
xchg
xchg
test
inc
inc
out
out
dec
sub
jae
cmp
pop
sbb
push
icebp
dec
ds
pop
push
loop
xor
sub
loop
xor
cli
js
mov
subb
mov
fsubrl
or
lods
mov
cwtl
stos
test
sarl
pushf
int3
data16
loope
sbb
push
lret
jg
push
mov
clc
aaa
mov
lret
hlt
mov
cwtl
das
dec
lock
push
cmp
xor
pushf
fldl
arpl
movhps
lea
into
rcr
lods
mov
jl
mov
mov
xor
test
out
icebp
ret
mov
sub
mov
fcompl
jmp
cmp
popa
inc
sbb
js
jns
mov
mov
push
mov
popa
in
mov
into
test
sbb
add
dec
mov
mov
inc
sbb
mov
sub
sbb
blsfill
push
test
pop
cmpsb
in
fwait
outsb
repz
movsl
sub
mov
dec
jb
icebp
cmp
imul
lahf
sbb
outsw
sar
sub
xchg
or
sbb
scas
cmp
mov
lret
dec
outsb
push
mov
outsl
ljmp
push
out
inc
test
push
cmp
repz
icebp
std
push
nop
and
mov
xor
pop
sub
cmp
es
xchg
daa
sbb
in
cmp
and
leave
sub
mov
push
mov
lahf
xchg
fnstenv
mov
std
cmp
out
bnd
arpl
push
aad
cmp
xor
mov
mov
dec
push
cmpsb
shrb
lods
int
je
xor
inc
jo,pt
cmp
inc
imul
rcll
test
jnp
call
dec
ljmp
push
test
mov
fsubl
xor
jnp
jbe
jecxz
gs
jl
pop
nop
xchg
or
pop
mov
shrl
inc
adc
cmp
pop
dec
cmc
and
pop
fnstenv
pop
push
sub
jl
call
iret
stc
mov
push
imul
sbb
jg
fdivrs
mov
or
cmpsl
or
or
xor
mov
mov
xchg
xchg
les
js
sahf
pop
sbb
movswl
inc
add
jae
aam
sbb
ljmp
sub
or
pop
cmpsb
mov
sub
and
imul
mov
fsubrs
test
inc
sbb
ret
push
inc
or
in
pop
dec
jne
loop
mov
test
roll
pushf
addr16
cmpsb
and
decl
xor
jne
mulb
stc
adc
dec
jo
in
leave
test
pop
add
jae
jo
je
push
sarb
fnsave
mov
or
call
shll
js
mov
mov
jl
movsb
dec
cmp
inc
es
dec
inc
jecxz
sahf
ljmp
outsb
sbb
xlat
dec
repnz
mov
sbb
inc
pop
dec
mov
push
push
fdiv
xchg
rcll
sbb
xor
adc
xchg
lock
rclb
fwait
cmp
mov
mov
ds
sub
data16
cmp
xor
cwtl
xchg
cmp
out
push
sahf
sbbl
dec
negb
call
outsl
rcr
arpl
sbb
inc
inc
push
scas
aaa
icebp
dec
mov
sbb
push
int
jae
mov
aam
sti
imul
mov
push
ss
movsb
mov
jne
push
jp
aad
sub
push
dec
cmp
push
xorl
adc
pushf
movsl
nop
inc
cs
sbb
js
pop
sub
inc
mov
mov
test
pop
fwait
adc
in
adc
xor
pop
cmp
pop
cmpl
aas
in
jns
jg
mov
test
mov
cmp
jae
push
push
aad
fsubrs
jae
sub
aaa
jo
imul
insl
pop
out
sti
cwtl
xor
loop
mov
pushl
aad
cmp
xor
mov
push
mov
pop
jmp
movsl
sub
mov
pusha
das
movsb
addr16
xlat
pop
mov
cmc
fwait
dec
xor
stos
inc
xchg
or
stos
cmpsl
ret
pop
dec
ja
outsl
fbstp
push
movsb
mov
popf
dec
cmp
adc
dec
fbld
mov
mov
mov
lods
int
adcl
mov
cwtl
mov
stc
sbb
sub
stos
in
pushf
popa
xchg
xor
push
mov
call
sar
or
mul
mov
xchg
icebp
pop
fisubl
cmovne
mov
push
push
mov
mov
mov
mov
mov
add
push
xchg
cmp
sub
aam
mov
lcall
jl
xchg
dec
sarl
repnz
test
outsb
mov
fisubrl
push
xor
cltd
popf
xor
cmp
lds
or
cmp
inc
push
clc
sub
jle
cmp
subb
out
cmpl
int
iret
or
in
jne
mov
xor
and
test
js
or
and
outsl
sub
fwait
stos
lods
es
ret
push
mov
mov
pop
cltd
add
sahf
and
jae
shll
jmp
aad
leave
out
push
cmc
sbb
int
in
dec
roll
call
push
mov
popa
adc
leave
scas
xchg
sub
push
push
sti
mov
aam
movsb
adc
mov
pop
inc
test
xor
push
fildl
popa
int
lret
mov
sbb
add
xchg
jle
test
push
lret
pusha
movsb
sbb
dec
mov
and
inc
dec
aaa
int3
ret
pop
int3
lea
push
gs
loope
mov
sub
adc
sarb
clc
les
or
lcall
rorb
divb
stos
pop
or
xor
aad
dec
and
xchg
pop
das
data16
fwait
jns
outsb
ja
arpl
xchg
int
mov
jecxz
or
sarb
mov
ds
call
int
push
dec
lea
arpl
xor
in
in
sti
es
xorb
pop
jge
push
std
gs
scas
insb
ds
cmp
push
or
mov
inc
mov
rclb
stc
orl
adc
jle,pt
jmp
mov
dec
int
mov
dec
mov
mov
sub
mov
jp
or
fucomip
add
rcrb
dec
cmp
cmp
and
lret
cs
jo
outsl
lret
jg
and
shll
xchg
lret
js
xchg
pop
adc
or
or
mov
arpl
mov
cmp
rcrb
test
leave
inc
mov
mov
push
hlt
div
adc
sbb
les
sahf
sbb
mov
or
jmp
fnstcw
addr16
lcall
sbb
sbb
dec
jmp
in
cld
xor
mov
stos
pusha
add
xor
mov
push
rcrl
cmpsl
jge
inc
sbb
sub
dec
pop
mov
sub
jno
adc
sbb
out
pop
and
sbbb
jno
shll
mov
xor
movb
xchg
rclb
mov
test
push
arpl
xchg
xchg
das
jmp
addb
and
mov
xchg
lea
dec
xor
cmp
jnp
cmp
test
mov
mov
lock
inc
inc
mov
sub
mov
and
daa
dec
jnp
pop
jmp
push
xor
push
inc
scas
add
sti
and
xor
jp
or
and
aaa
divb
clc
stos
call
jge
lock
fdivl
shl
aas
add
test
inc
mov
and
sub
xor
push
sbb
scas
int3
inc
jns
lea
or
lret
bound
stos
jb
lret
or
xchg
or
cmp
sahf
ss
fwait
hlt
sbb
or
cmp
popa
and
push
mov
dec
cmp
in
ds
mov
lret
sti
int
inc
movsl
es
or
rcll
in
dec
lock
es
enter
xor
or
pop
mov
scas
cmp
cmp
sub
jnp
sahf
add
sbb
inc
lods
push
add
filds
push
sbb
lods
aaa
lcall
test
out
jno
xchg
mov
pop
jnp
sub
and
popa
push
stos
pushf
adc
mov
mov
lret
mov
mov
rcr
xchg
push
rorb
jbe
inc
roll
lret
shlb
cli
or
iret
cli
jecxz
mov
jns,pt
push
pop
add
dec
mov
enter
popa
mov
sub
add
std
pop
cmpsl
ficomps
or
mov
mov
mov
xorb
cmp
je
ds
or
jl
rcl
cwtl
data16
test
push
addr16
ret
scas
adc
stos
dec
adc
clc
or
out
sbb
lret
sbb
add
addb
adc
fcomps
in
sti
fildll
or
js
aas
and
ljmp
xchg
inc
push
sahf
push
xchg
mov
inc
icebp
sub
jecxz,pt
enter
outsb
dec
test
stos
cmp
adc
inc
add
inc
dec
inc
pop
scas
outsb
ret
cmp
xchg
popf
mov
sbbb
divl
sbb
js
cmp
mov
or
push
mov
aad
cmp
outsl
xchg
lds
rorb
or
add
jbe
mov
jmp
in
stos
data16
xor
ds
mov
inc
cmpsb
cmp
int
daa
leave
imul
add
das
mov
sub
mov
jmp
stc
or
arpl
mov
mov
aas
cmp
jae
lock
fdivrs
xchg
adc
call
les
cmpsb
sub
add
into
push
cmpsb
cmp
mov
cmp
add
jle
fldl2e
or
push
mov
out
mov
arpl
sub
fucomip
arpl
dec
ret
ljmp
ret
lret
lcall
jnp
scas
jecxz
out
es
call
sahf
adc
sahf
in
push
pop
add
iret
cmp
mov
daa
cmp
movsb
or
fldcw
pop
fwait
mov
push
int3
cmp
stc
je
dec
rcll
subb
lds
xor
call
mov
push
movsl
sbb
sbb
dec
out
and
dec
ds
pop
dec
mov
inc
sbb
out
inc
mov
inc
and
mov
mov
lea
ret
bound
mov
lods
dec
aad
push
cmp
push
loope
jp
xchg
and
ds
sbb
repz
in
loopne
into
lret
pushf
in
icebp
add
cmp
adc
mulb
jecxz
into
or
test
pop
or
mov
scas
mov
std
jo
addr16
xor
add
mov
out
push
mov
push
or
pop
mov
mov
ss
sarl
fcoml
mov
cmc
daa
inc
inc
fs
push
scas
out
enter
pop
adc
shr
outsl
outsl
cmc
in
jg
dec
adc
xchg
addr16
fs
sbb
or
pop
dec
jmp
addr16
inc
imul
lret
or
pop
add
sub
sub
and
push
sarb
xor
push
je
adc
inc
jo
lods
imul
das
aas
inc
popa
sub
in
das
mov
mov
es
movsb
movd
push
sub
mov
scas
jecxz
imul
xor
cmp
test
les
data16
cmp
sub
pop
add
cmpl
icebp
out
iret
mov
stc
adc
and
xor
fnsave
cmp
mov
push
xchg
add
cmpb
stos
xor
dec
flds
nop
aad
test
mov
or
mov
add
insb
ja
mov
push
push
dec
push
sbb
mov
pushf
add
mov
enter
xorb
mov
jmp
stos
out
nop
cli
adc
aam
adc
aas
xchg
mov
xchg
lds
femms
out
idivb
adc
sbb
jmp
enter
inc
cmp
repz
lds
add
xor
or
cmpl
aas
out
lahf
lock
lods
lods
sbb
ds
cvtps2pi
xor
ljmp
sub
mov
out
jecxz
jo
mov
add
insl
inc
xchg
imul
aaa
cmc
rclb
dec
scas
icebp
cld
mov
bound
mov
je
cmp
mov
imul
fdivrp
cmp
pop
pop
ljmp
mov
mov
or
jne
sub
stos
and
cwtl
adcb
dec
jecxz
or
mov
pop
pop
or
mov
movsl
lea
cmp
xor
cmp
add
cmp
add
push
popf
cmp
mov
push
pop
cmp
lods
sub
gs
movsl
pop
sub
stos
stos
push
mov
outsb
fdivrs
xchg
and
mov
and
mov
ljmp
lret
js
inc
sub
into
mov
arpl
sbb
movsl
out
jns
pop
stos
sbb
inc
dec
cmc
hlt
add
inc
and
push
in
mov
mov
inc
xchg
mov
imul
out
iret
lock
pop
fwait
sbb
pop
mov
dec
shll
subl
daa
push
jl
hlt
inc
jecxz
lahf
adc
or
fdivs
loop
and
ret
call
imul
mov
mov
mov
dec
xor
les
mov
adc
sbb
pop
sbb
out
shll
int3
jl
push
mov
pop
xor
es
mov
cld
stc
or
insl
pop
mov
movsl
add
dec
mov
add
movsl
dec
ds
mov
mov
dec
xor
add
xor
stos
mov
ja
arpl
dec
jg
lahf
movsb
fucomp
jmp
jp
fnstenv
and
cmpsb
or
cmc
jecxz
and
inc
mov
popf
leave
dec
mov
cmp
pop
sbb
insl
outsb
jnp
scas
dec
push
add
push
add
fdivr
nop
sub
adc
mov
mov
sub
repz
je
pop
shl
sbbb
les
shlb
inc
andl
push
insb
adc
push
dec
mov
add
cmp
dec
insb
lahf
jb
sbb
shll
and
cmpsl
sbb
jo
xchg
jp
sub
push
insb
bound
and
in
xchg
sbb
insl
cmpl
cmp
rorl
popf
mul
add
sbb
leave
jbe
push
repnz
lcall
stos
add
push
pop
leave
leave
inc
enter
imul
out
pop
js
enter
adc
inc
cmp
stos
or
xor
setg
add
aaa
ret
mov
insl
loope
out
or
out
mov
xchg
push
in
cmp
jge
jns
xchg
inc
je
pop
dec
jnp
mov
xchg
ret
jecxz
jnp
xchg
clc
loop
xchg
push
xor
add
and
mov
bound
push
out
test
cmp
andps
mov
jne
xchg
cld
or
xchg
insl
mov
ficoms
ja
lret
inc
adc
push
cmp
push
inc
xor
or
lds
fs
pop
push
xchg
call
lods
xor
jbe
insl
sbb
int3
int
push
sub
xchg
je
out
inc
lcall
xor
jmp
push
imul
xchg
scas
leave
and
cmp
or
inc
pop
lods
dec
adc
pop
jns
stc
in
cmc
xor
filds
insb
sub
cli
mov
and
xchg
cmp
ja
xchg
shrb
fs
or
gs
xchg
lds
mull
xor
cwtl
mov
mov
mov
cwtl
aaa
lds
mov
cmp
add
adc
in
lahf
xor
fisubl
cmpl
mov
cmp
iret
adc
lahf
mov
shll
sub
fisubrs
cmp
aam
or
js
scas
inc
add
and
cltd
cmp
cmp
cmp
xchg
sbb
xchg
cs
adc
xchg
push
aad
xchg
inc
sbb
popf
shll
mov
mov
inc
test
stos
mov
out
or
mov
xchg
pop
pop
sarb
jl
rcll
mov
cmpsl
mov
movsb
jne
push
sbb
fidivl
jnp
mov
js
lods
int3
lea
xor
cmpl
pop
movsl
inc
sbb
fistpl
jp
lods
dec
xlat
pop
xor
imulb
sub
push
xor
mov
sbb
scas
jle
inc
aad
fisttpll
push
dec
es
mov
sbb
cmpsl
xchg
popf
push
ret
leave
fisubl
nop
push
lods
and
frstor
sub
xor
rol
mov
mov
call
insl
pop
loop
out
dec
xchg
mov
int3
inc
mov
lret
repz
or
and
add
dec
lds
out
xchg
popa
sbb
dec
push
cmovbe
mov
push
mov
add
jl
rcl
inc
bound
arpl
push
lock
sbb
dec
leave
adc
adc
xchg
push
mov
scas
or
add
iret
sbb
sti
cwtl
repz
push
xchg
shl
call
mov
inc
aam
insb
lcall
imul
xchg
test
repnz
or
mov
cmpsb
push
pop
sbb
daa
adc
daa
and
out
and
mov
xchg
mov
push
dec
push
adc
aam
int3
sub
adcb
mov
movsbw
lea
push
jl
lret
mov
loopne
pop
es
bound
inc
jae
or
sbbb
xor
xlat
iret
gs
insb
add
sarb
shrb
leave
add
addb
or
pop
cmp
cltd
xchg
xor
xor
adc
mov
pop
stos
arpl
mov
sbb
xchg
les
ljmp
insl
push
in
loopne
imul
aad
out
dec
inc
sarb
lret
in
out
jne
ja
fcmovnbe
sti
push
loopne
mov
inc
jmp
pop
push
mov
paddsw
orb
add
test
or
fdivl
hlt
out
sahf
insl
or
ss
xlat
jl
push
mov
insb
sbb
inc
lret
loopne
and
and
pop
adc
mov
adc
add
and
nop
jnp
adc
add
cwtl
jge
mov
outsb
pushf
hlt
add
lea
push
xorb
cwtl
sarb
push
fstps
push
add
stos
aaa
leave
lds
cli
mov
out
mov
leave
adc
scas
pop
sbb
xorb
push
pop
mov
xor
mov
or
fldl
sub
stc
dec
fdiv
stos
sub
push
add
daa
sub
hlt
push
sti
in
or
or
xchg
pop
sbb
arpl
pop
sbb
or
test
sub
xor
movsl
adc
popf
and
or
shll
mov
dec
loope
mov
rcr
aad
jns
lret
lret
mov
fcomip
adc
dec
call
lods
mov
es
jmp
out
cmp
cmpsl
jecxz
gs
shlb
jne
inc
jp
jbe
mov
xlat
loopne
xlat
sub
rcll
cmpsl
insl
mov
int3
jae
add
mov
mov
fnstenv
mov
or
in
fldenv
sbb
sbb
imul
shll
jge
aad
rcll
add
idivb
rcrb
or
jne
inc
inc
stos
dec
push
lcall
mov
cmpsl
jl
into
outsb
mov
addr16
fmul
cmp
jle
outsl
sarl
mov
mov
jnp
incb
icebp
sub
fst
or
adc
add
rorl
mov
inc
cmpl
sub
pop
test
xchg
mov
orb
imul
mov
jbe
das
sub
incb
int3
mov
in
test
cltd
pop
adcl
xor
in
push
outsb
leave
sbb
push
xor
add
pop
xor
fstpt
and
pusha
push
or
test
sbb
lods
bound
and
rcl
pop
arpl
lods
sahf
out
sbb
mov
outsb
lret
int
jo
sbb
imul
out
sub
xchg
sahf
mov
rclb
fstps
enter
scas
ret
lds
push
dec
imull
xchg
xchg
je
test
xor
mov
lods
xchg
idivb
andb
mov
and
xor
outsb
testl
inc
add
pop
or
clc
cmc
xor
xchg
aas
insl
sbb
mov
inc
pop
sub
ds
or
lret
push
jge
xchg
paddd
mov
sub
pop
insb
aad
jmp
adc
inc
inc
jae
aas
rcrb
jmp
dec
pop
mov
cmp
mov
cmpsl
jl
push
or
aaa
jl
es
xlat
loope
shl
js
aaa
jo
and
lock
mov
add
loopne
xor
cltd
lods
push
cltd
ss
shr
aad
xchg
cli
inc
jmp
inc
xlat
mov
xchg
or
js
or
imul
adc
fldl
dec
mov
in
cltd
mov
inc
int3
adc
pop
or
loope
dec
fcoms
lock
aam
repnz
fnsave
lret
inc
fcmovu
and
pop
into
ljmp
sub
dec
out
test
enter
cmp
fbld
imul
xchg
push
mov
dec
lods
sbb
in
cld
stos
inc
dec
and
stc
or
sarb
push
pop
pushf
lret
or
movsb
mov
jno
fbld
dec
lock
dec
lds
jae
adc
pop
cs
mov
add
mov
cmpb
into
ljmp
mov
and
lret
add
sbb
mov
fwait
jne
inc
xlat
shl
or
andb
push
ss
jl
add
je
mov
test
jmp
add
dec
outsb
push
mov
outsb
dec
cld
mov
dec
jge
das
mov
stc
add
xchg
fldenv
out
cmp
xor
dec
push
mov
jo
lods
cmp
fsubrs
mov
jp
cs
adc
xchg
adc
sbb
push
mov
jmp
jb
loopne
or
fildll
inc
lea
mov
jl
jns
xchg
mov
pop
and
inc
cs
sub
mov
lahf
cmp
stos
mov
lea
aas
mov
jg
mov
mov
jg
rcll
repz
dec
lds
loop
inc
inc
jmp
inc
dec
or
or
in
push
aam
aam
js
jmp
mov
push
ret
jle
or
cmp
xchg
dec
and
xchg
mov
sbb
pusha
jo
mov
outsb
dec
pop
or
cwtl
roll
outsb
pop
xlat
mov
xor
hlt
mov
into
scas
cltd
sbb
int3
xchg
outsb
xor
or
sub
push
in
mov
iret
mov
and
pop
daa
xor
push
mov
leave
jg
and
lahf
loopne
popf
ja
xor
or
cmp
into
lret
out
or
sub
cmp
or
mov
sbbb
fs
jg
aaa
rsm
int
or
xor
xor
fidivrs
popa
sub
dec
mov
cmp
shll
mov
out
adc
cmp
mov
push
lods
pop
repnz
push
pop
in
stos
std
inc
xchg
scas
add
lods
mov
fcoml
sbb
es
mov
lcall
inc
mov
les
cmp
es
into
push
push
popf
inc
jbe
mov
xor
mov
sti
roll
push
cmp
add
fstl
mov
mov
in
mov
pop
clc
mov
push
add
out
jp
scas
pop
pop
or
sbb
mov
movsb
enter
sub
popf
pop
cmp
xor
pop
leave
add
inc
pop
nop
dec
fst
xor
cmc
jmp
mov
cmp
fs
fldt
das
shrl
stc
lds
jmp
ljmp
xchg
push
mov
adc
es
in
or
jp
jno
ret
mov
stos
or
in
pop
dec
jo
jne
mov
lock
clc
mov
lret
jg
imul
stos
sbb
insl
int3
in
push
cmp
inc
and
sbb
aad
fisubs
mov
loop
in
or
adc
enter
cli
xor
inc
pop
add
std
cltd
repnz
mov
loopne
pop
enter
and
cmp
insl
dec
insb
loope
xchg
push
and
mov
test
sbb
stos
adc
mov
sahf
stos
jb
lcall
bound
nop
aad
pushf
mov
fdivrp
mov
pop
cmp
pop
dec
popl
call
sub
cmp
cs
xlat
leave
movsb
loopne
loop
add
popf
insl
mov
shrb
ret
jae
out
mov
mov
rcrl
inc
dec
sub
adc
repz
testl
inc
mov
jbe
inc
les
push
cli
cmp
inc
push
lods
lcall
sbb
mov
aaa
jmp
and
cltd
push
pop
movsb
or
iret
jle
jbe
stos
push
rcl
and
mov
mov
cmpsb
sbb
addr16
in
mov
ljmp
ret
cmp
cmp
leave
jmp
mov
xchg
lahf
sbb
jb
mov
dec
cmpsb
ljmp
jge
aas
les
stos
arpl
ja
xor
cmp
in
sbb
mov
ja
push
shll
fucom
pop
or
inc
stc
sub
mov
aam
dec
idiv
test
mov
gs
push
sbb
xchg
mov
and
pop
inc
shll
lahf
inc
sarb
add
xorl
mov
inc
mov
xchg
xor
adc
and
outsl
scas
xchg
push
or
mov
jl
push
dec
cmp
or
jne
test
mov
pop
incb
les
inc
fstpl
jne
mov
addl
popa
adc
push
mov
mov
shll
pop
add
imul
jo
mov
mov
push
lea
add
dec
cmp
mov
or
inc
addr16
hlt
std
mov
negb
or
xor
cld
adc
push
push
mov
jno
ret
jne
lahf
pusha
in
inc
sub
add
dec
sti
mov
lods
cmp
xchg
xchg
mov
roll
pushf
out
xchg
pop
das
mov
mov
mov
xor
sahf
jne
jbe
loop
sub
rclb
ja
andb
fs
pusha
adc
icebp
push
out
out
ss
in
inc
aad
repz
lods
test
ds
fdiv
mov
cmp
stos
loop
xchg
and
popa
das
inc
ret
mov
daa
xchg
repz
and
jmp
in
or
iret
dec
stos
cli
jmp
xchg
in
movsl
mov
stc
daa
addr16
scas
nop
cld
xlat
adc
imul
mov
ret
jg
xchg
shll
movsl
ret
adc
mov
out
xor
jns
xor
and
nopl
mov
adc
clc
or
jns
jg
jbe
dec
push
jne
jb
mov
jg
fstpl
xchg
and
decb
hlt
nop
lock
call
xor
aaa
dec
xchg
imul
mov
mov
insb
or
sub
orl
xor
cld
popa
mov
aad
mov
mov
xor
cli
ss
inc
inc
xlat
and
scas
jge
sti
dec
aad
pop
fisttpl
fidivl
data16
add
xchg
cmp
inc
mov
aas
insb
mov
jmp
or
jp
and
popa
jge
xor
add
inc
mov
pop
out
adc
loopne
xor
jmp
sub
js
xor
pusha
mov
adc
out
addb
adc
push
mov
fadd
sti
push
and
jbe
jo
andb
test
aad
jo
mov
mov
mov
stc
ficompl
xor
push
insb
push
jp
clc
xchg
lea
cwtl
cli
jns
shr
xor
mov
add
add
sbb
and
testl
add
lods
jge
jecxz
popa
ss
xchg
shll
test
into
lahf
dec
fsubrs
inc
add
sbb
in
ja
xchg
movsl
jae
ljmp
push
cld
daa
mov
imul
sub
and
mov
or
adc
stos
popf
lret
les
lahf
add
cld
out
mov
insb
or
lea
test
lods
mov
mov
cmpl
or
daa
dec
mov
pop
jmp
into
xchg
push
mov
adc
loope
ljmp
and
xor
loop
repnz
aas
push
std
cmpsb
repz
int
sub
cs
dec
cmpsb
movsl
aam
mov
pop
int
sub
xor
shrb
dec
mov
xor
stc
mov
lahf
lahf
cmp
push
lahf
insb
outsb
adc
jnp
xor
inc
dec
mov
daa
lods
jp
mov
lret
cld
dec
aaa
dec
cmpsl
lods
push
int
lret
scas
in
adc
cmp
push
ljmp
cld
mov
hlt
jecxz
mov
adc
inc
flds
test
sbb
mov
ljmp
addr16
cmpsl
out
daa
enter
dec
mov
shrl
hlt
dec
sarb
cmp
xchg
out
cmpsl
xchg
sbb
lea
dec
movsl
mov
arpl
mov
nop
cli
leave
in
pop
icebp
mov
mov
cli
test
js
and
aas
mov
pushl
in
jne
inc
leave
les
and
mov
ret
pop
sbb
xchg
fists
clc
in
fadds
sbb
int
cli
xchg
test
jae
push
clc
cmpsb
cmp
outsb
jne
pop
cmc
lods
out
insb
sbb
dec
notl
ljmp
std
push
aaa
or
stos
cmp
repnz
xchg
addl
es
jnp
xchg
mov
and
pop
jg
adc
push
lcall
mov
xorb
or
jle
xchg
jae
adc
aam
inc
lret
add
mov
dec
sub
lcall
test
xchg
lock
xor
enter
inc
cmp
ds
sti
push
lea
xchg
pop
dec
fcoms
fstl
adc
mov
sahf
subps
add
or
push
repz
jg
lcall
dec
std
jp
push
daa
dec
out
lcall
pop
fmulp
js
cmp
outsb
addb
out
mul
pop
mov
mov
lret
sti
mov
mov
int3
repz
nop
sbb
or
clc
mov
out
sub
arpl
imul
bound
or
mov
ret
test
dec
lock
cli
pop
mov
pop
sub
aas
test
ds
mov
or
imul
inc
pop
push
js
xchg
and
mov
test
in
pop
xchg
movsb
and
test
dec
nop
lret
nop
lods
sbb
pop
aas
adc
jnp
mov
not
mov
add
nop
sbb
or
jne
shll
sbb
mov
lret
imul
mov
loop
xchg
add
cs
sahf
jnp
fcoml
add
insb
xchg
inc
and
sbb
jge
lcall
fwait
push
mul
pop
cltd
inc
push
mov
or
lret
push
test
dec
or
mov
pop
fcoms
or
je
jp
das
xor
push
mov
sub
rolb
sbb
stos
pop
aas
pop
dec
inc
sahf
loope
ds
repz
inc
inc
scas
pusha
nop
imul
loopne
je
jge
mov
xchg
add
mov
imul
insb
mov
jns
aam
inc
or
mov
xchg
adc
and
push
fs
sub
cmp
xchg
adc
decl
fsubrs
lock
xor
sti
jge
mov
lahf
test
xor
test
mov
mov
or
jno
dec
add
mov
es
mov
ret
mov
popf
xor
xchg
jnp
ret
faddp
cmc
outsl
aas
mov
iret
mov
push
imul
adc
das
mov
sbbb
jb
repz
xchg
dec
enter
data16
push
fsubrs
shlb
cmp
loopne
mov
push
pop
xor
in
xor
cmp
jns
add
fstp
push
loop
dec
push
cmp
xchg
sub
pop
or
fistpl
xor
cmpsb
cmp
into
scas
clc
xlat
add
lret
and
cmp
mov
cmpl
push
addr16
lds
lret
sub
inc
outsb
pop
sub
jecxz
mov
push
mov
outsl
scas
js
inc
clc
stc
cmp
mov
ss
ss
out
sbb
cli
adc
xchg
xchg
scas
insb
rcrb
sub
mov
adcb
xchg
dec
cli
mov
push
cmpl
jmp
and
push
in
xchg
insl
cmp
or
mov
mov
cwtl
push
sti
sbb
sahf
or
adc
faddl
imul
lea
arpl
clc
movsl
push
enter
adc
mov
pop
jp
jne
adc
pusha
dec
mov
scas
es
add
add
xor
pop
pusha
inc
xchg
iret
ret
iret
leave
mov
and
xchg
lret
adc
mov
mov
xor
lods
enter
adc
data16
out
jecxz
dec
mov
mov
out
mov
xor
fwait
cltd
gs
cmp
jg
sub
and
adc
ret
int3
sbb
sub
push
sub
fdivrl
popf
insb
ret
mov
mov
or
ds
xor
xor
or
and
push
leave
daa
fisubrs
push
lahf
test
or
or
push
mov
mov
into
rclb
cmp
in
push
ret
outsl
outsb
dec
icebp
adc
and
adc
pop
stos
cmp
xor
in
lcall
rcll
lods
enter
stc
and
jmp
mov
pop
lret
pushf
inc
xchg
jno
lret
testb
dec
mov
xchg
pop
enter
dec
iret
cmp
iret
je
inc
mov
shrd
cs
mov
leave
mov
jae
push
clc
mov
daa
orb
fcoml
pop
dec
jl
outsl
aad
jge
xchg
int
out
repz
enter
cmp
push
pop
inc
push
dec
icebp
fnstenv
mov
std
cmp
and
sub
cli
pop
dec
dec
pop
test
dec
xchg
cmpsw
scas
jno
sbb
inc
filds
xchg
es
cmpsb
sub
aaa
rcr
lret
cmc
std
mov
adc
imul
rorb
sbb
push
addr16
push
es
xorl
cmc
clc
addr16
and
lock
or
dec
repnz
sti
xchg
xchg
push
mov
pop
dec
jbe
add
adc
mov
lahf
add
shl
call
jae
fadds
std
jno
mov
cmp
loope
cmp
sbb
add
clc
lea
test
xchg
inc
lock
pop
clc
sahf
push
repnz
imul
add
and
lods
orl
xchg
movsl
push
adc
lea
mov
call
std
mov
dec
rsm
scas
je
stos
inc
or
add
lahf
rorb
and
mov
push
test
out
cmpsb
mov
inc
xchg
xor
dec
cwtl
mov
pop
push
or
int3
or
xor
pop
jno
shrl
jle
pop
int
scas
xor
pop
push
cmc
add
or
push
adcl
call
sbb
mov
test
ret
mov
rolb
fsubrs
insl
push
fxch
push
jge
pop
push
loopne
daa
adc
fwait
imul
cmc
lcall
add
pushf
lock
and
int3
mov
fildll
pop
nop
fstl
call
lods
les
mov
mov
adc
sub
dec
aaa
mov
sbbb
sti
jge
bound
cmc
shll
mov
cmp
jae
jne
cs
addr16
negl
mov
inc
rcrl
out
cs
cmp
xchg
nop
add
add
cs
cmc
cltd
out
push
repz
movsl
push
mov
fisubl
or
or
adc
insb
icebp
into
aas
dec
xchg
pop
push
or
orb
loope
or
test
imul
aaa
roll
mov
ret
in
sbb
in
xchg
imul
subl
sbb
mov
mov
addl
jle
add
in
lret
fwait
xchg
dec
push
into
jns
mov
or
mov
jnp
jb
imul
and
pop
loop
dec
fisubrl
push
jns
rcl
pop
mov
jg
shll
outsb
cbtw
jecxz
pop
repz
xlat
jbe
cli
aad
dec
add
cs
mov
stc
push
cli
insl
jo
rolb
insb
xlat
push
pop
je
add
popa
test
inc
sub
in
cmp
fidivrl
and
inc
stos
mov
dec
dec
int
in
add
in
sub
negl
mov
popa
std
sbbb
test
xchg
cwtl
jmp
adcb
cmp
xchg
scas
jle
xor
and
fsubl
mov
mov
xorl
sbb
cmp
or
testb
orl
popf
dec
mov
orl
sub
mov
pop
sub
mov
arpl
in
mov
in
xor
testb
imul
aam
and
adc
adc
push
push
adc
pop
imul
pop
addl
stos
dec
jo
in
or
negl
mov
shll
call
sbb
pop
adc
mov
lock
inc
sbb
xor
lahf
or
mov
iret
je
es
cltd
or
add
sbb
jae
imul
movsb
frstor
jmp
push
fsubrl
mov
xor
or
out
insb
pop
lcall
fwait
dec
sarb
xor
mov
dec
pusha
and
mov
divb
cmp
test
add
ds
mulb
dec
ja
je
cmp
mov
daa
test
xor
notb
push
mov
sub
pop
stos
subl
pop
sub
cli
fimuls
mov
push
pop
rclb
xor
lds
pop
jl
movsb
mov
rcl
xchg
add
adc
subb
ret
mov
push
mov
std
cmp
jbe
push
leave
mov
push
test
xchg
stc
sub
xorl
int3
sarl
int
inc
xor
pop
ds
cmc
nopl
lret
popa
fsubs
cmp
loop
mov
imul
or
mov
dec
jbe
adc
cmp
add
mov
test
add
je
and
les
push
and
and
lret
leave
aad
ljmp
cmp
push
dec
jne
sub
and
ljmp
xor
insl
jo
cmp
popf
mov
and
pop
add
aas
out
stc
fisttpll
stc
cmp
repnz
mov
cwtl
pop
mov
aas
ucomiss
jl
push
xchg
fsubrs
cmpsl
outsl
dec
add
imul
sub
lea
xchg
sbb
cmp
cmc
sbb
pop
inc
lahf
sbbb
mov
dec
out
push
lret
mov
cmp
mov
push
daa
inc
es
into
jecxz
and
and
mov
inc
and
aaa
pop
jb
cs
pop
test
faddp
cmpsl
scas
in
adc
mov
pop
das
adcb
sub
jbe
adc
jnp
das
add
pusha
sub
stos
xchg
xor
dec
iret
jae
cmpsl
lock
mov
out
xor
lret
push
out
xchg
rorl
insb
test
ja
push
je
insl
push
xchg
es
fs
inc
out
add
mov
lds
mov
or
sahf
loope
mov
cmp
cmpsl
mov
jp
stos
dec
dec
rcrb
mov
shll
cmpsb
sbb
loopne
daa
or
shll
push
mov
and
sti
out
push
sti
jb
je
lahf
inc
lods
xchg
adc
rol
xor
pop
in
jp
mov
sbb
jno
xchg
loopne
dec
pop
and
std
js
xor
dec
jo
mov
dec
adc
mov
dec
mov
sbb
and
leave
xchg
mov
mov
insl
push
and
shll
jne
fwait
mov
lods
inc
clc
rcl
xchg
cmp
imul
sbb
lds
stos
aas
hlt
insl
fs
push
out
gs
mov
insl
mov
fsub
mov
movsb
or
mov
test
xchg
and
aas
test
outsb
xchg
or
jno
sti
movsb
xchg
rorb
rorb
xchg
stc
and
fwait
cmp
mov
push
and
in
mov
aas
mov
fsubp
lret
pop
cmpsl
mov
scas
add
movsb
mov
cmpsb
mulb
call
xchg
xor
inc
xchg
push
xchg
mov
ja
jo
inc
adc
filds
test
pop
aam
adc
scas
loope
xor
ficoms
xchg
mov
in
adc
imul
fwait
clc
and
je
lods
scas
test
fsts
jle
lock
fldcw
pop
cmp
pop
cmp
mov
cmp
xchg
mov
mov
pop
push
pop
dec
dec
std
xlat
test
push
xchg
mov
outsb
xchg
arpl
in
xor
jae
nop
mov
incb
add
cmpsb
pushf
add
mov
mov
cmp
pop
xchg
and
mov
inc
jnp
in
sbb
jl
mov
movsb
pop
cli
dec
sub
das
or
lahf
ja
lds
mov
jo
and
push
jns
xlat
xor
adc
fdivr
ja
jo
sbb
mov
sbb
inc
fadds
stos
das
std
dec
outsb
cmp
test
leave
sub
and
or
ret
lcall
aas
adc
enter
test
orl
pop
jle
xor
repz
outsb
rorl
cmpsl
in
cmpsl
mov
leave
mov
rol
adc
lods
mov
mov
xchg
cwtl
fimuls
dec
insl
pop
out
stc
jne
stos
and
mov
pusha
jle
lcall
std
popf
xchg
inc
popa
pusha
aas
sub
mov
imul
addl
pop
aad
fcmovbe
sti
test
dec
adc
mov
fildll
pushf
xor
push
pop
rorl
mov
push
aad
add
aas
mov
arpl
mov
and
fsubp
movl
mov
rol
aas
sub
orb
mov
or
xchg
inc
test
mov
sub
pop
jb
xor
dec
xchg
pop
jp,pt
xchg
and
in
jns
mov
inc
sbb
mov
mov
sub
push
mov
and
mov
cli
mov
push
push
mov
mov
pop
xchg
sbb
imul
xor
push
push
mov
cmp
push
inc
insb
popf
jns
add
adc
mov
sub
jbe
xchg
inc
mov
jnp
and
sub
cmp
or
pop
mov
sbb
test
enter
fistpl
mov
loop
lods
jge
cmp
jl
mov
cli
mov
push
dec
das
out
sti
mov
sahf
mov
inc
adc
loopne
adc
mov
add
sbb
pop
mov
bnd
arpl
int
int3
push
ljmp
adc
adc
fcompl
inc
mov
stos
or
or
lahf
shrl
in
cmp
pop
mov
dec
loope
popa
lcall
loope
xor
movsb
lcall
jg
mov
push
test
ds
out
mov
add
jge
and
xchg
xchg
add
call
mov
loopne
daa
cmpsb
inc
mov
js
pop
cmp
fsubl
ds
je
sub
fnclex
sbbl
ljmp
clc
jno
mov
adc
dec
cmp
sub
iret
aam
das
fstpl
cmp
cs
push
push
sar
mov
push
add
and
and
stos
and
mov
mov
sub
add
lock
ret
fwait
arpl
lds
es
or
shlb
xchg
xorb
xor
push
or
sbb
mov
mov
add
pusha
dec
insl
xor
lea
pop
hlt
test
cltd
into
shl
adc
sbb
ss
mov
xor
imul
pop
pop
push
clc
sbb
stos
cmpsb
test
stos
aaa
scas
je
pop
insb
imul
jg
cmp
out
xchg
enter
pusha
ljmp
push
stos
cmp
fildl
adc
divb
mov
xorl
sahf
cmp
xchg
out
movsb
je
mov
pop
and
sbb
out
arpl
pop
or
into
cmp
shlb
or
loopne
mov
in
ret
int3
aad
dec
mov
out
sbb
fwait
movsl
imul
mov
xchg
jp
stc
test
jge
nop
pop
in
mov
inc
sub
cmp
push
add
insb
dec
push
arpl
daa
mov
xlat
xlat
roll
sti
jp
mov
cvttps2pi
pusha
adc
sub
je
outsl
stos
imul
lods
mov
push
lods
inc
push
xor
pop
xlat
addr16
sarb
push
xchg
sbb
lock
pop
out
push
xchg
ss
sbb
lds
lods
rcrl
lea
xchg
aaa
arpl
faddl
ret
test
pop
lahf
out
mov
unpckhps
ffree
pop
sub
cmpsb
mov
imul
push
adc
mov
lods
insb
jg
jge
and
fwait
cmpsl
push
es
mov
lods
push
or
jle
gs
addr16
hlt
add
inc
fsubs
dec
sbb
int3
jle
test
xor
mov
popf
cli
dec
in
jns
xchg
int
jmp
sti
dec
push
ja
jb
fists
ljmp
cmpsb
push
push
scas
adc
push
repnz
out
push
std
into
sbb
ret
loopne
pop
in
sbbb
fdivl
popf
arpl
jmp
push
imul
mov
cmpsb
shl
in
jl
call
std
ja
pop
test
mov
mov
inc
jo
mov
xor
mov
das
fldcw
inc
pusha
clc
test
or
mov
xor
loopne
sbb
sarb
xchg
jg
mov
and
fisttpll
mov
lret
loopne
movsb
cli
xor
in
outsl
js
sub
dec
nop
sbb
push
arpl
xchg
lcall
je
sbb
mov
add
mov
push
aas
jae
daa
add
jmp
fdivl
in
mov
sbb
subl
mov
and
clc
inc
sub
inc
xor
sbb
mov
pushl
cmp
bound
std
jle
and
out
jne
dec
fucomip
movsb
test
push
jecxz
add
dec
mov
pop
and
sbb
enter
popf
jle
xor
xchg
aas
popf
pop
pop
std
rcr
mov
xchg
cmpsb
cli
push
add
jae
xlat
or
xchg
cmovne
mov
jae
mov
cmpsb
fs
or
std
outsb
mov
mov
lret
mov
or
bound
cmpsl
lret
push
inc
push
cmp
pop
xchg
lret
fxch
inc
bound
mov
sub
adc
pusha
test
push
mov
sub
addr16
jmp
pop
inc
xchg
int3
inc
sbb
mov
outsl
sub
mov
sbb
sbb
lcall
lss
jp
sub
mov
call
xchg
and
enter
add
inc
scas
movsb
repnz
sbb
in
mov
and
xchg
lods
shl
sbb
dec
insb
call
mov
dec
jns
loop
and
stos
sbb
ss
inc
sbbl
and
or
iret
rdmsr
xchg
cld
mov
jecxz
shlb
ljmp
rcrl
mov
jge
jbe
repnz
enter
mov
stos
adc
std
dec
jecxz
enter
lock
xchg
pop
or
adc
dec
fs
cmp
test
fwait
jmp
and
mov
in
es
xor
xor
sub
outsl
out
ficomps
or
adc
shlb
adc
ja
cmc
fildl
cmpb
jg
mov
loopne
enter
mov
roll
jp
push
or
fstpt
cli
sub
adc
inc
iret
pop
pop
les
outsl
pop
xchg
sbbb
faddl
call
mov
and
popw
push
dec
mov
scas
push
mov
mov
and
imul
sbb
adc
sub
dec
lds
movsb
popaw
add
lcall
sbbl
sbb
xchg
xchg
icebp
mov
jae
call
pop
pop
push
gs
not
sub
pusha
cmp
stos
rcll
lahf
mov
xchg
mov
icebp
jecxz
aaa
dec
ret
mov
mov
ljmp
std
push
mov
or
pop
lcall
aam
iret
mov
xchg
loopne
pop
loope
rol
sbb
out
repnz
inc
leave
push
xor
pop
or
cmp
clc
hlt
inc
maxps
cmp
mov
mov
test
popf
stc
fidivrs
jecxz
shll
lds
fwait
and
ss
enter
test
mov
sub
int
mov
rorl
xlat
and
cmp
mov
fldenv
shlb
repz
ljmp
xorl
arpl
lods
sbb
or
add
ljmp
scas
rolb
fcoms
pushf
xchg
add
or
mov
and
stos
jb
jae
cmpsb
shll
orb
adc
sbb
push
addl
in
add
push
jmp
nop
mov
push
push
sar
dec
xor
or
dec
lcall
stc
or
cmp
scas
inc
xchg
and
ds
je
dec
nop
mov
jle
fs
int3
cmp
jmp
sub
and
int3
mov
mov
mov
sub
pop
cmp
push
outsl
sub
and
mov
rcr
lods
xor
cmp
mov
inc
ss
jp
inc
sbb
mov
mov
adc
das
outsl
ret
push
xchg
lret
insb
ds
mov
dec
xchg
lea
js
stos
sbb
jnp
jecxz
cmp
pop
or
mov
cmp
je
mov
mov
loopne
les
jb
outsb
and
inc
lret
addb
addr16
dec
xor
shll
dec
in
jne,pt
jge
cmp
lcall
cmp
jns
in
xor
push
pop
addr16
pop
adc
and
cmc
std
xor
stos
cmp
call
in
xor
out
dec
aaa
sbb
and
jbe
mul
imul
or
cmpsl
push
lahf
lcall
dec
push
mov
es
dec
push
data16
je
fidivl
xorl
inc
mov
aam
mov
mov
lds
mov
scas
lea
or
pop
dec
jno
sbb
ljmp
fisubs
jl
daa
mov
mov
insb
jmp
in
add
jle
dec
lds
pop
push
or
pop
fcompl
mov
push
sbb
push
pop
mov
das
mov
mov
lahf
repnz
cs
scas
xchg
cmp
in
jecxz
and
lret
ljmp
mov
adc
sub
xor
dec
imul
sbb
or
sti
aas
sahf
lods
add
push
loope
fmuls
imul
fnstenv
das
std
and
jns
mov
rcr
cmpl
dec
pop
and
push
aad
call
fwait
dec
push
push
mov
aad
sbbb
cmp
pop
das
iret
lahf
add
fidivs
in
test
lods
jl
xor
test
xor
mov
bound
mov
imul
jns
fbld
lods
lods
aad
jecxz
lret
sbb
or
rcl
push
rclb
and
ds
ljmp
adc
add
fscale
cmp
loopne
cltd
push
mov
xor
mov
fsubl
lcall
cltd
add
mov
xchg
mov
dec
mov
fildll
je
out
addb
movlps
aaa
test
dec
out
mov
scas
mov
in
sub
pop
adc
out
and
pop
cmpl
pop
mov
or
sbb
or
mov
fistpll
nop
bound
shl
cli
fcoms
xor
fistpl
xlat
cmp
mov
cmc
pop
push
out
popf
call
cmp
lea
inc
lea
cmpsl
mov
cld
mov
shlb
test
inc
mov
jbe
test
movsl
xchg
xchg
std
cltd
push
popa
cmp
jle
insl
iret
sbb
push
dec
xor
js
iret
popl
inc
jne
push
xor
popl
and
cwtl
cltd
adc
outsl
in
pop
push
rol
inc
or
xchg
jmp
loop
add
mov
push
std
pop
inc
pop
ss
cmp
dec
lods
je
lret
jb,pt
push
add
in
clc
test
inc
je
adc
or
push
jecxz
fs
lcall
inc
sub
in
lcall
mov
stos
icebp
test
icebp
sbb
jbe
cmp
jmp
jo
mov
arpl
push
stos
cmp
jb
pop
or
push
rcll
out
popa
or
pop
inc
dec
movsl
enter
loop
push
inc
jge
xchg
adc
push
pop
imul
and
sub
call
sarb
and
ljmp
out
in
rorb
push
insl
loope
mov
fidivs
jecxz
scas
cmpsb
std
mov
aaa
popf
les
in
xor
adc
mov
in
and
pop
test
sbb
pop
jmp
mov
lahf
pushf
cmpl
decb
pushf
mov
sub
fwait
xor
imul
cmp
mov
in
and
add
fucomp
mov
lret
repz
add
test
jmp
ds
pushl
fimull
inc
mov
sbb
inc
xchg
imul
inc
dec
add
ljmp
pop
fs
cmp
ss
sti
test
negl
cmpb
aaa
dec
insl
xchg
mov
stc
pop
dec
into
push
fildl
fisubl
pop
js
call
mov
repz
push
adc
inc
mov
push
and
movsb
imul
lahf
aam
fisttpll
out
xchg
lock
mov
cmpl
cltd
xor
stos
insb
out
dec
std
adc
rclb
dec
fmulp
lret
idivl
mov
into
stos
sub
scas
jo
rclb
outsl
adc
pandn
add
cwtl
pop
mov
js
out
shll
out
enter
rorb
in
inc
lahf
inc
adc
add
push
lock
popa
stc
xor
add
dec
test
pop
orb
mov
loopne
aam
mov
push
or
add
rol
mov
xchg
in
pop
cwtl
popf
jns
sbb
xor
jmp
imul
nop
repnz
cli
add
pusha
jns
stos
mov
stc
icebp
dec
out
cs
ret
aad
popa
xchg
mov
sub
sub
fwait
lcall
mov
push
dec
inc
jl
push
sbb
out
daa
enter
mov
fbstp
shll
mov
or
data16
push
lahf
cmc
or
mov
loopne
push
repz
mov
xchg
test
jge
jb
pop
jmp
cmp
loope
ret
mov
divl
and
flds
or
mov
sti
inc
aaa
mov
push
mov
xlat
and
fcomp
push
mov
fstps
lcall
int
in
es
data16
incb
mov
push
sub
push
mov
inc
fcoms
es
adc
cltd
sub
into
insb
adc
out
sub
sbb
add
jne
inc
adc
mov
nop
sub
xlat
xor
mov
push
sbb
in
or
repnz
xor
pop
movsb
sahf
push
outsb
adc
popf
in
xchg
sbb
xchg
cmp
sbb
mov
lahf
push
scas
shlb
adc
movsb
arpl
and
inc
push
sub
add
into
fnsave
jne
cmp
int3
in
adc
hlt
mov
movl
mov
inc
je
pop
mov
pop
sub
and
ret
add
cld
into
sbb
lea
pop
lods
sbb
cmp
cs
sbbb
xchg
int
dec
xor
inc
sub
push
shlb
jnp
out
shl
push
cmp
mov
push
mov
sti
xlat
pop
iret
mov
mov
xchg
mov
ja
cmp
xchg
xor
sub
jb
mov
mov
lcall
add
jl
and
or
cmp
out
inc
xlat
test
sbb
pushf
xor
jae
out
test
mov
mov
sbb
loop
push
scas
in
inc
xchg
daa
dec
mov
dec
pop
pop
or
sub
mov
scas
jno
mov
test
popf
adc
hlt
pop
push
xchg
and
test
dec
mov
push
lret
lea
repnz
push
dec
lahf
xor
sub
jle
xchg
push
xchg
jmp
inc
movsl
adc
sbb
jmp
scas
push
leave
mull
mov
mov
sub
scas
aam
push
leave
aas
pop
or
xorb
ljmp
push
jnp
mov
mov
adc
cmp
push
xor
and
aaa
and
jecxz
adc
pushf
js
mov
sub
scas
jecxz
fucomi
jecxz
les
mov
cld
and
cmpsb
pop
ds
cmp
xor
icebp
loop
stos
mov
inc
stos
outsb
ret
and
push
sti
sbb
nop
gs
shlb
or
cmp
subl
aaa
outsb
orl
ja
jp
push
add
lea
shll
pop
push
call
sbb
sbb
mov
lds
cmp
inc
add
sbb
and
stos
xlat
jns
push
inc
xchg
icebp
pop
ja
lret
mov
test
sbb
imul
stos
fmul
inc
arpl
insl
int
loopne
inc
fs
jnp
mov
dec
sbb
or
mov
push
insb
stc
push
mov
pop
out
and
cmp
pushf
cld
inc
mov
jg
out
xor
pop
inc
shlb
lods
sahf
mov
repnz
fnstcw
dec
dec
icebp
mov
xchg
lahf
mov
js
xor
cwtl
cmp
ljmp
mov
jbe
mov
mov
jno
fchs
mov
lahf
fcmovb
dec
arpl
push
pop
push
mov
jae
or
popf
dec
loopne
in
sub
in
outsl
ja
sub
movsb
jle
adc
ss
jl
adcl
xor
cmpsl
mov
mov
or
push
repnz
loopne
shl
sbb
sbb
int
popf
stc
xor
test
idivb
push
add
jnp
enter
inc
push
aad
sbb
pusha
adc
sbb
aas
xchg
xor
fdivp
shlb
xor
pop
xor
mov
push
lahf
and
cli
aam
lret
inc
leave
sbb
adc
mov
push
test
mov
mov
popa
scas
add
push
mov
mov
xchg
enter
xor
pop
push
add
pop
push
dec
fcoms
add
dec
out
mov
sbb
mov
out
js
sti
push
sbb
sbb
fwait
inc
fs
and
scas
sub
or
pop
fnstsw
cmc
push
clc
or
inc
adc
or
pop
xchg
mov
mov
daa
out
xor
pop
mov
push
ret
jae
cmp
cli
in
sub
cmp
jl
fwait
vunpcklps
xor
sbb
out
jne
and
adcl
ja
pop
aam
mov
pusha
cmp
xor
xor
hlt
jecxz
scas
out
add
enter
mov
in
loope
mov
stc
sarl
das
xor
or
rcr
add
clc
test
cltd
inc
mov
or
mov
nop
fstps
jmp
cmp
int
jmp
adc
lock
mov
ret
inc
sbb
gs
mov
dec
sub
push
int3
stos
pop
push
adc
repnz
lret
cltd
shrl
les
xor
repz
movsl
mov
jl
fsubrl
xor
cmc
dec
jno
out
mov
inc
pop
ds
pop
out
add
shl
push
or
pusha
fstpt
ret
jecxz
gs
mov
push
mov
int
add
inc
iret
popa
push
ficoml
sbb
sarb
fwait
xchg
adc
daa
xor
incb
jo
data16
push
xor
iret
out
aas
pusha
dec
fbld
mov
notb
aad
lods
sbb
pop
push
cmp
jnp
jge
xor
cmpb
incb
xor
lods
sub
and
das
dec
cmp
dec
lea
out
les
fildl
dec
call
int3
std
or
sub
arpl
sub
push
xchg
lods
push
in
mov
fsubrl
pusha
pop
pushf
add
and
cmp
push
loope
inc
adc
fldt
testb
mov
adc
iret
mov
jg
cmc
mov
lods
or
call
int
mov
gs
cmp
jbe
pushf
push
mov
add
push
pushf
push
add
lock
mov
lret
mov
and
cltd
pop
gs
adc
sti
or
or
test
mov
mov
fdivrl
in
fnstenv
push
or
adc
inc
shrb
push
in
icebp
cmp
add
mov
or
rcrl
adc
std
adc
cmc
inc
and
lock
jnp
rcr
mov
push
daa
fcmove
mov
add
out
push
push
insb
enter
rcrb
dec
cmpsb
iret
mov
pusha
lods
or
in
xchg
out
or
pop
dec
push
pop
pop
cmp
inc
jbe
xor
add
popa
push
aad
push
leave
xor
out
xor
lret
or
or
shrd
mov
jg
stos
mov
adc
enter
and
addr16
sbb
test
icebp
ss
addr16
add
push
scas
xchg
and
adc
inc
in
jp
fdecstp
xor
inc
dec
inc
jl
je
scas
cmpsl
adc
or
fildll
scas
imul
push
mov
mov
jp
ds
mov
lods
xchg
or
movsb
mov
and
inc
mov
andl
sbb
xchg
cmpsb
dec
sub
sub
js
outsb
sbb
inc
dec
psadbw
push
push
or
outsb
popa
xchg
mov
xor
sub
and
sub
nop
ret
in
add
xor
lods
dec
push
dec
ficoml
mov
out
pushf
jmp
stos
inc
lea
mov
mov
iret
test
pop
push
lea
mov
fldenv
mov
aaa
dec
inc
daa
lahf
rorb
mov
xchg
fs
fnstcw
push
nop
in
iret
adc
inc
jg
into
pop
xor
lret
notb
jecxz
fiaddl
cs
iret
mov
dec
push
gs
insl
add
add
add
in
mov
jnp
xchg
loopne
std
cmc
push
das
jne
icebp
ja
push
rorb
jns
pushf
jbe
enter
inc
test
dec
or
mov
mov
cmpsb
stos
sbb
mov
enter
mov
fcmovnu
fisubl
cmc
daa
jo
fstpl
clc
dec
jecxz
dec
adcb
movsb
xor
mov
pusha
aaa
cmp
push
fwait
mov
shlb
add
loope
xchg
leave
sahf
les
xor
dec
lcall
mov
xchg
xchg
leave
ds
ja
aam
ret
lock
test
jp
or
inc
xor
pop
jb
out
rcr
stc
mov
sti
or
pop
pop
aaa
jl
stos
jmp
mov
clc
jecxz
sub
xchg
mov
in
in
xor
ja
leave
out
dec
mov
push
adc
mov
dec
sbb
or
imul
pop
aaa
mov
mov
fcmove
cmp
test
pushf
mov
in
aam
ror
enter
iret
sub
pushf
leave
loope
rep
inc
xor
inc
inc
in
lret
lea
xchg
pop
mov
lcall
mov
lds
divb
adc
sub
jle
push
sahf
jno
xor
xorb
lahf
test
mov
mov
xor
sti
xorl
mov
test
cmc
pop
dec
jnp
xchg
or
adc
sarb
aam
pop
pop
ret
push
sbbl
sbbl
cmp
cmpsl
test
dec
test
dec
pushf
jmp
or
jl
sbb
sbb
sub
mov
xchg
outsb
mov
in
and
fildll
push
stos
divb
leave
cmc
test
inc
out
out
test
adc
test
jmp
or
xor
jno
xorl
add
pop
test
sbb
int3
insb
mov
push
dec
xor
push
sbb
stos
sub
addr16
xor
cmp
lods
inc
push
sar
notl
xchg
mov
incl
or
or
lods
out
xchg
sahf
inc
push
shl
push
mov
in
sti
lods
fcomps
push
out
lcall
scas
scas
aad
jne
sub
pop
lods
addl
mov
into
imul
xor
push
lods
pop
push
push
andb
ljmp
jge
and
and
stos
mov
or
xor
jge
push
jb
icebp
pusha
ret
and
clc
dec
or
aam
xor
push
xchg
inc
ljmp
lds
mov
popf
insb
movsl
ja
gs
cmc
jbe
xor
pop
mov
xchg
mov
mov
cmp
mov
loopne
mov
mov
ljmp
mov
sub
loope
pop
dec
aas
shrl
stos
jnp
push
fidivrs
or
lcall
test
cmpb
popf
pop
sbb
mov
mov
sub
nopl
mov
addb
mov
cltd
pushf
loop
pop
mov
push
cmpsl
cmp
jns
xor
and
xor
mov
sub
pop
inc
jo
and
sbb
repz
out
test
cmp
pop
in
mov
shrb
iret
xor
test
sbb
mov
test
inc
jmp
jecxz
add
sbb
insb
add
pushf
dec
jbe
imul
adc
movsl
mov
aas
pmulhw
sbb
cmc
lock
shr
nop
mov
dec
cmp
das
out
inc
push
stos
repnz
int
adc
pop
movsl
push
int3
sbb
movl
sub
pusha
push
lret
xchg
pushf
sti
cmc
jecxz
int
fs
cli
jne
insl
push
ja
mov
mov
in
push
push
pop
mov
dec
add
sub
mov
push
mov
jno
adc
xor
adc
add
sub
mov
cmpl
sub
sbb
je
push
stos
or
fdivrl
mov
enter
fs
popf
lods
popf
mov
insl
sbb
out
lahf
fwait
aam
sub
xchg
bound
push
jo
adc
pop
push
mov
outsl
or
xlat
mov
mov
and
subb
mov
subb
fiaddl
sbb
inc
in
xor
cmp
inc
pop
enter
mov
daa
inc
call
xor
push
fdiv
and
fcoml
int3
js
mov
test
out
push
arpl
push
cmp
mov
pop
sbb
or
cmpl
xor
cwtl
cmp
fwait
lcall
xchg
stos
repnz
push
scas
jbe
lods
in
fisubs
jno
and
icebp
leave
out
cltd
leave
fs
add
ficomps
fiaddl
pop
shrb
mov
jno
out
jge
xchg
pop
js
daa
pusha
cld
lret
or
mov
dec
mov
push
pop
mov
add
pop
fcmovne
cmp
dec
and
mov
lret
cmpsb
call
push
lahf
stc
imul
ja
imul
and
inc
ljmp
out
pop
xor
test
lcall
push
inc
les
mov
ja
jmp
outsb
js
daa
mov
cwtl
cmp
into
xchg
push
inc
sbb
out
int
loop
rorl
mov
inc
mov
xchg
out
or
jmp
in
jmp
xor
dec
xchg
pop
repnz
fldcw
adc
mov
cmp
xlat
cmpsb
out
pop
flds
daa
mov
outsl
xor
insb
hlt
scas
jne
jae
push
cs
stos
push
cmp
jne
mov
and
or
jb
lcall
mov
test
testl
stc
ss
dec
push
sub
xchg
gs
fstps
xor
je
dec
and
in
xor
push
dec
cwtl
dec
dec
addb
imul
push
and
add
mov
inc
jp
xchg
ja
sbb
mov
xchg
cld
inc
movsl
sub
cli
sub
and
in
xor
mov
inc
push
and
sub
jge
jo
and
lods
jmp
jbe
xchg
insl
dec
sti
and
fadds
mov
fs
xchg
pop
cmp
enter
sahf
and
adc
je
xor
test
jns
jo
or
call
shll
in
out
lds
popa
jmp
lods
add
enter
sbb
sbb
popa
mov
leave
push
inc
lds
mov
add
adc
lret
popa
int
imul
and
fcoms
mov
fucompp
sbb
push
lahf
push
daa
js
dec
mov
jmp
cmp
mov
push
cmp
shrb
inc
sub
jb
pop
pop
ljmp
addr16
xchg
mov
stc
rcrb
dec
shll
cmp
or
subb
es
jno
pop
call
jno
loope
shlb
adc
cmp
das
push
push
pop
dec
es
mov
aaa
add
pushf
sub
cwtl
xchg
and
in
outsl
clc
mov
arpl
mov
mov
pop
ret
imul
lahf
pop
xchg
inc
xor
movsb
dec
xchg
sub
cmp
add
push
add
in
mov
dec
xor
test
add
inc
ljmp
add
mov
adc
inc
out
xchg
mulb
js
arpl
push
sti
lret
adc
jae
fsubrs
mov
sar
xchg
lahf
je
pop
and
leave
inc
out
xor
addb
movsl
fistpl
lea
sbb
or
ret
sarl
sbb
rclb
xchg
ja
sbb
scas
jb
rcrl
adc
stos
jecxz
add
or
mov
mov
sti
data16
and
loop
xchg
jbe
xchg
imul
repnz
hlt
cs
fnstenv
das
mov
pop
xchg
fstpl
fwait
stos
leave
stos
aam
pop
mov
pop
icebp
test
in
ucomiss
add
clc
icebp
mov
mov
pop
and
inc
popf
push
fs
dec
pop
push
mov
lock
cmpl
push
andl
add
repz
add
or
repnz
jmp
shrl
xchg
mov
lret
add
sbb
mov
sahf
imul
lret
inc
ficomps
dec
fnsave
xchg
mov
push
lcall
bound
add
push
fwait
sub
popa
xorl
and
add
jmp
push
lods
fstpl
mov
dec
mov
je
pushf
pop
push
mov
xor
shlb
outsb
test
ljmp
or
lods
bnd
stos
and
inc
into
cmp
repz
add
fcoms
sbb
dec
lods
pushf
stos
pop
and
je
fdivrs
lret
dec
adc
jecxz
mov
xchg
ret
xchg
pop
xchg
rcl
dec
in
gs
xlat
push
movsl
mov
adc
cmpl
adc
in
or
outsb
js
xchg
mov
sbb
imulb
or
lock
jp
adc
lahf
les
mov
and
inc
fildl
inc
pop
test
xchg
push
push
pusha
push
cltd
xchg
lahf
loop
or
sbb
pop
test
call
mov
sti
leave
faddl
dec
int3
mov
rcll
or
loope
fwait
dec
cmp
sbb
jo
mov
movsb
xor
cmp
jb
les
fsubrl
mov
bound
xor
xchg
imull
ljmp
xchg
sub
cmp
in
push
cmp
ficomps
cmp
rcl
cmp
mov
sub
sahf
xchg
imul
addl
mov
xor
test
push
cmpb
sub
lahf
cmc
mov
es
lea
cltd
das
jnp
scas
sub
and
inc
stc
scas
mov
dec
imull
push
outsb
push
cmp
xor
push
imul
mov
cld
aas
cmp
data16
out
mov
js
popa
jb
xor
cmp
pushf
popf
or
dec
or
insb
fcomps
sarl
clc
inc
lcall
test
sub
cmp
mov
pop
fucom
subl
xchg
cmpsb
mov
movsb
jmp
push
cmp
xchg
mov
cltd
or
es
cli
or
inc
insb
sub
test
mov
mov
mov
lret
or
fsubs
fucomip
jg
aam
imul
clc
sub
mov
ret
pop
icebp
jno
dec
or
insl
stc
scas
stc
push
out
xor
mov
pop
pop
xchg
test
rcll
inc
in
aad
jno
adc
mov
fdivs
fldl
push
xchg
or
inc
push
mov
jb
cwtl
aam
add
mov
sarb
hlt
ret
dec
leave
in
testb
or
and
dec
adc
into
out
cmp
jo
xchg
jecxz
aaa
ss
and
dec
test
aam
hlt
mov
stos
outsl
inc
test
sahf
test
sbb
in
in
adc
mov
push
nop
xor
fsubs
leave
mov
lahf
jae
iret
cmp
sub
out
pop
xchg
pushf
mov
push
sahf
in
xor
adc
nop
mov
push
inc
mov
insb
shrl
sub
cld
rclb
inc
ds
cmpsb
popa
aad
xor
add
imul
pushf
cltd
jbe
sub
dec
jb
xchg
push
leave
sahf
lcall
std
push
sub
inc
cmp
clc
fisttpll
sbb
add
sarl
pop
push
cmc
push
dec
sbb
jbe
xor
loopne
mov
cmp
je
fmull
aam
sbb
mov
in
outsl
scas
ss
cli
jae
pop
xor
sahf
arpl
mov
lret
adc
int3
xchg
push
mov
cmp
push
ret
xor
js
js
mov
xchg
fcmovu
movsb
lods
xchg
fs
popf
mov
shrl
testb
sarl
mov
cmc
pop
cmp
enter
xchg
aam
jle
push
inc
loopne
je
pop
inc
cmp
mov
and
push
inc
pop
and
repz
pushf
mov
dec
jmp
cwtl
scas
repnz
jbe
cmp
adc
mov
mov
jbe
add
and
fwait
pop
mov
fwait
dec
in
int3
cwtl
sahf
push
sahf
add
imul
icebp
bound
jg
shlb
sahf
inc
por
into
inc
sbb
pop
xor
adc
or
and
pop
and
pop
cltd
ja
popf
test
dec
xor
and
data16
ja
sbb
mov
cmp
inc
sub
dec
push
xchg
sbb
dec
sub
fxch
aam
dec
lods
inc
or
xchg
les
aad
or
lcall
jle
dec
cmp
dec
and
lds
push
mov
mov
push
das
cmp
popf
mov
mov
cmp
mov
pop
icebp
dec
push
not
or
mov
cmpb
fbstp
xor
fadds
sub
mov
xor
int
mov
mov
pop
push
jne
lahf
insl
mov
inc
pop
pop
jg
pop
cmc
cmc
mov
lcall
xchg
pop
sub
leave
repz
adc
adc
push
lret
jge
mov
mov
lret
mov
fisttps
mov
pop
jmp
mov
inc
lcall
sahf
or
icebp
sbb
mov
xchg
adc
push
ljmp
insl
mov
stos
add
loope
inc
sbb
pop
add
xchg
mov
dec
nop
testl
in
je
push
adc
in
jnp
bound
mov
in
sbb
jne
adc
cs
fdivr
inc
mov
addr16
imul
push
mov
aam
insb
mov
mov
sbb
and
xchg
ret
in
dec
fwait
popf
jp
jne
loop
lds
cwtl
jo
cwtl
out
mov
clc
jecxz
divl
fisttps
jge
sar
negl
cmpsl
sub
lods
aad
ja
rcrb
loope
mov
add
mov
les
mov
jmp
aam
aam
insl
test
out
sbb
jbe
bound
cmpsb
mov
jbe
int3
loopne
mov
mov
mov
aaa
mov
lcall
and
xlat
lahf
int
hlt
arpl
ds
lds
adc
lret
outsb
or
xor
lock
imul
fs
stc
xor
lret
adc
xchg
xchg
pusha
push
xchg
out
sub
mov
daa
stos
sbb
out
ret
push
imul
stos
push
ljmp
mov
call
inc
call
xchg
jae
or
sbb
imul
xchg
jb
ficoms
fninit
clc
sub
repz
mov
xor
xchg
sub
dec
xchg
jge
xchg
push
xchg
aam
jl
adc
mov
repz
cmpsb
adc
frstor
pop
sarl
add
in
adc
xchg
mov
and
aam
cmpsb
jno
in
jmp
and
mov
push
je
imul
andl
dec
movsl
ds
fistpll
adcb
aam
cmc
xchg
mov
in
int3
popa
scas
push
add
sub
hlt
mov
out
push
fnstenv
jbe
mov
add
xlat
out
jb
daa
addr16
cwtl
shll
mov
jp
mov
jnp
clc
push
dec
and
sbb
jae
sbb
int3
mov
dec
inc
xchg
push
xchg
xchg
out
test
lock
jbe
idivb
sbb
mov
out
mov
jne
xchg
inc
iret
stos
test
cmp
jmp
jecxz
and
mov
roll
leave
outsb
testl
jno
push
ss
clc
xorl
lods
mov
mov
outsl
push
xlat
stos
cwtl
mov
fsubl
mov
jp
das
jge
jb
sti
std
mov
xchg
faddl
add
cmpsl
cmp
push
dec
adc
je
in
mov
clc
out
push
jo
inc
roll
fbstp
inc
or
mov
scas
mov
jp
mov
nop
xor
cmc
les
or
movsl
cmp
push
push
iret
adc
fisubs
movsl
test
scas
repz
mov
jmp
pop
lret
sahf
popa
mov
adc
xchg
pop
sbb
mov
dec
xchg
in
sbb
xor
popf
cltd
cmp
loop
mov
int3
mov
stos
xor
movsl
lds
mov
xor
shll
out
sub
add
nop
insl
scas
mov
aas
inc
cmp
cmp
aaa
sbb
inc
clc
add
dec
pop
or
fildll
pop
jae
imul
jle
jo
pop
fildll
sbb
or
pushf
cmpsb
xor
sbb
call
sub
fwait
and
push
xchg
scas
sbbl
jne
call
movsb
cmp
xchg
cmp
outsl
cld
daa
lret
into
or
test
adc
sub
mov
inc
bound
popf
inc
cmp
rcrl
xchg
push
xor
mov
testb
push
insb
mov
fcmovnu
dec
or
test
jle
das
cmp
xchg
test
mov
xor
es
repnz
cmp
loopne
lret
add
mull
loopne
adc
add
xlat
cmc
cmp
je
mov
or
loope
dec
push
inc
jmp
mov
xor
aaa
jl
push
mov
out
fcmovbe
movsl
in
or
lds
add
out
xlat
cmp
xor
adc
cmp
jno
fidivrs
mov
aas
or
sti
pop
push
sti
loop
data16
jae
outsl
cmpsl
movsb
gs
mov
pop
pop
jne
mov
inc
xlat
filds
icebp
js
out
lahf
loop
aas
lds
xor
std
xchg
cmpsl
xchg
pop
sbb
mov
xchg
pushf
outsb
xchg
mov
and
xchg
jnp
cli
ja
sbbb
adc
and
push
inc
pop
mov
dec
mov
mov
lcall
and
inc
scas
pop
lea
popl
mov
xor
or
inc
imul
inc
pop
mov
fdivl
dec
aad
popf
xlat
jnp
scas
or
movsl
pop
sub
gs
call
fwait
in
jp
bound
hlt
or
mov
in
xchg
out
scas
lcall
in
add
sub
test
bound
push
jo
add
xchg
minps
jg
mov
sarl
aam
out
or
pop
fistl
aam
inc
jno
pop
push
pop
xor
mov
inc
test
or
push
xchg
arpl
ret
adc
ds
outsb
pop
mov
or
jne
mov
rol
xor
lret
call
aaa
outsb
std
in
insb
mov
sbb
dec
mov
xorl
adc
inc
clc
push
dec
imul
aad
adc
jb
mov
push
arpl
jp
fsubrs
inc
js
and
jae
sbb
faddl
outsb
sbb
rcrb
outsl
lcall
inc
pop
ljmp
jnp
push
sub
push
cs
push
in
test
lods
jb
loop
inc
roll
jmp
mov
push
aaa
mull
sbb
or
das
xchg
jne
jne
push
shlb
hlt
push
sub
sub
ljmp
les
mov
imul
ljmp
mov
sbb
dec
sbbb
adc
mov
aad
sbb
xlat
or
pop
cmp
mov
mov
sub
mov
negl
inc
int3
nop
and
fldt
scas
stos
mov
jno
pop
pop
scas
add
pop
fstpl
sub
cmpl
mov
sbb
cli
inc
cld
or
loop
xor
or
push
mov
or
push
outsb
mov
lods
cltd
or
pop
popa
lcall
adc
sbb
or
imul
popa
outsb
jmp
leave
pop
arpl
add
dec
mov
lcall
in
mov
insb
xor
jno
stc
in
xor
and
dec
xor
sub
loopne
aad
popf
cmp
push
popl
inc
enter
and
mov
mov
loope
jle
cltd
cmc
mov
jns
cmp
leave
mov
and
xor
movsl
or
sub
clc
jge
mov
mov
scas
iret
xor
jb
or
scas
outsb
mov
lahf
jecxz
cltd
insl
push
scas
pop
leave
xor
repz
cmpsb
push
cmpl
xchg
stc
scas
add
dec
aad
shr
loop
dec
inc
push
in
xor
sub
cmp
push
nop
stos
insl
les
iret
aam
leave
pop
inc
repz
xor
aad
push
adc
mov
scas
mov
cmp
outsb
stos
in
dec
or
sub
lret
pop
loope
adc
xchg
mov
mov
mov
dec
ss
orb
loope
sbb
addr16
shlb
in
and
popa
jg
movsl
jg
push
pop
insl
pop
ret
lahf
in
mov
and
fstps
sub
cs
push
pop
mov
lea
add
lds
sub
sub
adc
loopne
stos
xlat
sarb
call
sub
xchg
and
cmc
xchg
je
jmp
push
push
ffree
push
out
icebp
lcall
cmp
pop
or
movsl
cmpps
mov
mov
aam
ror
sbb
pop
mov
jo
stos
pop
sbb
rcl
jno
repnz
dec
mov
jmp
stos
fdivs
jb
in
jmp
and
adc
push
cmp
xor
xor
flds
loopne
cmp
cmp
test
arpl
in
dec
push
adc
imul
jnp
test
fwait
add
loop
add
jns
icebp
mov
cmp
mov
iret
sbb
sbb
push
iret
xchg
bound
inc
shlb
sahf
test
jle
das
loopne
lahf
js
roll
mov
mov
rcll
jmp
mov
and
dec
ret
mov
xor
scas
sub
subb
popf
cs
int3
fisubrl
and
fwait
mov
inc
jecxz
add
insl
mov
scas
pop
adc
xchg
ret
scas
and
in
mov
push
adc
and
rorl
mov
lods
lea
clc
std
push
add
iret
inc
dec
and
xor
and
mov
xor
stos
mov
divb
pop
and
and
jne
jle
xchg
xchg
mov
movsl
leave
movsl
cmpsl
cmp
jb
aam
hlt
mov
xor
push
mov
data16
faddl
xlat
mov
add
pop
fucomip
xchg
sbb
mov
mov
iret
pop
dec
sbb
in
ss
enter
xchg
inc
jle
bound
sub
or
imul
jns
popa
loope
shrl
or
insb
push
into
sbb
pop
ss
in
test
xor
push
addr16
insl
ret
ljmp
jns
sub
fistpll
lods
addr16
movsl
sub
jb
divb
ds
dec
jecxz
ret
cmpl
loope
cmp
sub
bound
lds
notl
loope
jl
outsb
pop
add
adc
mov
imul
or
jo
dec
sbb
movsl
push
stos
and
outsl
decl
push
divl
in
xchg
test
cld
js
aas
add
lahf
stos
cli
xchg
cmc
test
es
shl
adc
pop
or
shrl
call
int
repnz
stos
movsl
jmp
sub
xchg
xchg
into
and
dec
sbb
cs
leave
not
push
repz
aam
push
xchg
xor
mov
inc
jnp
dec
pop
in
in
inc
mov
rcrl
outsl
mov
sbb
repz
sub
daa
jns
sbb
mov
aaa
out
push
loope
aad
cwtl
and
inc
test
lods
adc
push
fistps
jmp
ret
movsb
out
sub
repnz
and
mov
inc
adc
mov
inc
lret
push
call
mov
sbb
sub
xor
in
cmp
adc
int3
dec
ds
sbbl
rolb
call
xor
mov
dec
jno
repz
sub
pop
lea
inc
ljmp
xor
lds
dec
jecxz
mov
jecxz
push
fnsave
mov
adc
mov
push
lock
mov
xchg
mov
clc
push
jnp
push
add
out
fcmovu
dec
lds
fsubrs
mov
push
xor
mov
add
and
addr16
fnsave
aam
jle
xor
cltd
push
push
jns
and
lea
and
push
gs
rorb
in
sub
inc
rcll
pop
imul
xor
jnp
pop
dec
outsb
push
pop
inc
mov
push
mov
push
xchg
push
adc
inc
dec
sti
inc
mov
loope
test
out
dec
aad
or
fxch
sub
jns
je
pop
or
dec
xchg
ret
or
es
ss
outsb
lock
jns
mov
aam
mov
iret
cld
repz
sbb
outsb
add
cmc
gs
add
jbe
jp
mov
mov
fcmovnb
mov
mov
mov
dec
xor
in
cwtl
pop
push
sub
pop
inc
test
pop
mov
fnstsw
out
jno
push
dec
mov
out
or
mov
or
jge
popa
in
fwait
imul
incl
les
mov
out
and
push
mull
cmp
lret
gs
cs
jge
mov
dec
in
jg
sub
lcall
fimuls
push
test
adc
ljmp
push
mov
bound
jecxz
push
add
pop
jecxz
sub
jg
mov
icebp
lea
rolb
mov
cmpsb
ds
and
mov
mov
jo
lret
hlt
pusha
mov
xchg
push
in
in
push
xor
push
xchg
sbb
cmp
mov
mov
loopne
push
mov
xorb
rol
sbb
ljmp
sub
mov
roll
out
sub
in
lea
and
cli
aad
pusha
movsb
pop
xchg
in
inc
jnp
cmp
out
scas
lahf
mov
mov
fmuls
or
addr16
pop
cmpb
enter
pop
leave
roll
dec
ret
add
dec
shrl
pop
jns
dec
rol
lret
jmp
pop
cltd
add
push
cmpsb
rorl
dec
mov
mov
jecxz
lds
xchg
sub
call
ud2
pop
das
and
push
int
loopne
enter
push
adc
sub
mov
insb
mov
insl
stc
dec
and
test
cs
or
loope
mov
pop
xor
xchg
dec
jb
dec
fstl
repz
cmc
fnstcw
addr16
fisubl
pop
pop
adc
test
mov
out
lahf
repz
cmp
loop
loop
cli
jo
insb
push
shr
dec
loope
cmpsl
mov
jle
cmp
cmp
scas
adc
sbb
movsl
repnz
scas
arpl
and
shrb
mov
add
adc
jnp
or
adc
dec
inc
fmuls
dec
adc
cmpsb
lock
cli
adc
test
mov
std
pushf
rcrb
push
loope
in
push
fsubs
add
pop
sbb
sarb
xorl
xchg
xchg
stos
push
icebp
pushf
fidivs
cmpsb
xchg
mov
sub
jmp
push
out
mov
jno
push
or
inc
and
jge
daa
adc
and
cwtl
and
add
add
and
daa
lods
ret
andb
lods
ficompl
jae
push
and
jle
jo
cltd
fcompl
sub
bswap
outsl
or
and
mov
in
cs
rcrl
sub
mov
cmp
or
cltd
out
ja
jo
mov
lahf
popf
std
jbe
jbe
fs
les
xchg
hlt
enter
pop
popa
inc
and
mov
sbb
outsb
in
je
or
insb
movhps
bound
lahf
and
into
xchg
xor
push
sti
mov
cmpsb
pop
in
jg
je
cltd
and
xchg
dec
loopne
outsl
insb
and
loopne
repz
adc
adc
cmp
clc
push
je
bound
frstor
ljmp
pushf
add
xor
adc
adc
push
fildl
inc
dec
dec
lods
dec
pop
and
je
push
lea
mov
jge
mov
jecxz
loop
pop
adc
add
imul
int3
mulb
loop
in
push
call
paddusw
jae
push
sbbl
ljmp
popf
xchg
add
and
and
sub
inc
mov
and
movsb
cmp
bound
icebp
shll
popf
inc
std
cli
jge
xchg
dec
mov
push
sarl
sub
inc
cld
and
outsl
movsl
test
push
pop
inc
cmp
repnz
sub
push
iret
movb
or
and
roll
cmpsl
jnp
fimull
pop
ret
cmp
stos
cli
inc
pop
ja
ret
mov
test
repz
and
add
jnp,pt
pop
out
adc
js
btr
movsb
fnstenv
shlb
xchg
fldl
xchg
jno
inc
sub
sahf
jne
aas
and
arpl
sub
pushf
or
fwait
cmp
mov
jns
mov
dec
mov
jb
jl
dec
inc
sbb
lds
mov
arpl
cli
dec
or
sub
mov
repz
mov
cmp
sbb
and
jecxz
jmp
jmp
jp
mov
loope
test
fs
jne
je
orb
mov
stc
add
jns,pt
insl
lret
cmpsb
cmp
inc
repnz
mov
aad
inc
les
cli
imul
paddsw
ss
out
mov
lret
dec
iret
arpl
js
shrb
rcrb
mov
cltd
sbb
mov
mov
js
fnstenv
fstps
xchg
lea
or
adc
inc
shl
lret
aas
dec
bound
mov
jmp
dec
enter
jle
sahf
daa
daa
mov
sti
pxor
sbb
daa
mov
pop
or
outsl
xchg
imul
dec
ja
cwtl
xlat
cltd
shl
sub
xorb
pusha
inc
or
dec
mov
xchg
ret
repnz
jl
enter
adc
push
jmp
test
pop
inc
and
push
js
jne
cmp
adc
insb
subl
daa
in
or
xor
mov
clc
rorb
xchg
gs
push
aas
pop
sbb
out
outsl
jne
lods
or
hlt
xlat
pop
les
orb
jecxz
pop
push
cs
fucomip
popf
outsb
fcoms
xor
cld
xor
lcall
push
pop
sahf
in
mov
sub
mov
adc
and
push
incb
jne
adc
dec
push
xchg
stc
cmp
loopne
lock
outsb
jle
cltd
das
cmp
adc
cli
xchg
pop
push
push
jo
add
cmpsb
cmp
int
mov
stos
xchg
fdivl
jle
mov
mov
sbb
cmp
imull
cld
daa
jmp
push
mov
fisubl
shr
dec
xor
std
xor
pop
loope
push
push
lret
test
addr16
inc
or
mov
mov
js
popa
cmp
stos
jl
fidivrs
shrl
mov
hlt
inc
add
inc
sub
mov
cmpl
out
and
or
lea
in
adc
nopl
mov
push
and
ror
and
ja
mov
push
mov
shr
jl
fdivl
jbe
jo
inc
clc
mov
mov
push
jae
xor
dec
mov
mov
sub
cli
sarl
ljmp
push
push
pop
cld
jge
mov
rdtsc
pop
in
or
sub
add
rcrb
test
xchg
push
mov
into
sahf
xchg
sbb
jno
inc
sbb
shlb
lret
rcl
mov
cli
cmpsb
addr16
jmp
jnp
movsb
insl
out
push
and
mov
cltd
xchg
xchg
fistps
mov
cld
fcoms
das
es
add
mov
nop
adc
mov
jp
mov
inc
jecxz
das
addr16
insl
decl
pop
cmp
cli
jnp
nop
rolb
fsubrs
insb
cld
dec
mov
inc
les
jae
inc
inc
and
scas
push
jmp
xlat
mov
iret
cmpsl
adc
xor
jne
je
pop
push
xchg
cmp
fimuls
mov
lods
inc
aam
hlt
xor
fistpll
and
jae
fabs
xchg
aaa
ret
jl
loope
mov
mov
cmp
test
inc
mov
cmp
fucompp
mov
jg
int3
adc
mov
jp
mov
xchg
das
push
repz
push
in
test
fstps
bound
cmpb
sahf
push
or
pop
cwtl
dec
lods
pop
push
aam
mov
jne
dec
xchg
test
sahf
mov
adc
mov
or
fst
popf
into
mov
lea
pop
sbb
cltd
mov
xorl
leave
std
jp
iret
leave
push
sbb
jle
mov
jmp
js
mov
and
cmp
jecxz
mov
fstl
sub
insl
jb
inc
sbb
jb
stos
cmp
sbb
lds
aaa
inc
push
cld
push
add
inc
jb
shlb
xor
jecxz
mulb
cmp
pop
sub
imul
mov
fimull
lret
repnz
aas
sti
xor
cmpsl
pop
sbb
cmp
lcall
out
lahf
in
in
sub
fisubs
jae
mov
ljmp
push
jecxz
jecxz
addr16
cld
orl
jl
sbb
cltd
shll
xor
ret
or
jns
inc
fsubs
inc
sbb
out
adc
mov
adc
pop
jp
incb
fwait
out
dec
movsl
inc
das
inc
icebp
jno
scas
or
xchg
or
loope
cld
test
xor
daa
andl
aas
cld
mov
test
mov
rdpmc
and
call
pop
mov
pop
pmaddwd
ja
into
lret
and
mov
or
xlat
out
push
xorl
pushf
xchg
xorb
data16
jno
xor
lods
sbb
or
loopne
std
inc
mov
out
out
imul
je
incb
popf
jns
cwtl
or
ljmp
les
aas
fstpt
lds
pop
je
xor
jno
sti
or
mov
repnz
stc
mov
add
and
jl
lret
pop
push
cwtl
imul
fmuls
jg
in
dec
dec
shll
adc
repnz
jge
xor
call
pop
fstps
pop
add
and
sub
inc
rolb
mov
cld
mov
popf
and
insb
push
lock
mov
out
push
inc
pop
std
in
adc
cmp
popf
addb
mov
arpl
bound
pushf
push
and
adcl
ficoms
or
mov
push
sub
mov
cmpsb
add
xchg
jne
xor
push
add
mov
mov
movsl
orl
and
loope
fprem1
or
mov
jmp
sub
rorb
sub
xchg
cmpsb
lock
sbb
sub
repz
lds
push
ret
addr16
pop
push
xchg
imul
jo
jge
out
scas
divb
mov
jnp
xor
sub
es
sub
ds
push
push
pusha
movsl
push
push
cltd
fsubrs
xchg
pop
mov
scas
pushf
ds
xchg
lahf
mov
push
and
hlt
pusha
sub
loope
fdiv
push
jne
and
mov
jo
mov
cld
add
ret
loop
mov
shrl
mov
stos
sub
lods
xor
scas
dec
mov
lcall
gs
vpmaddwd
add
shll
gs
jmp
sub
lcall
push
pop
mov
lods
dec
mov
ss
dec
pop
insb
push
andb
dec
das
lock
push
call
push
test
dec
pushf
in
mov
or
push
insl
xor
push
test
pop
mov
call
add
jo
push
xchg
loope
dec
mov
adc
pop
lods
into
and
inc
mov
sti
inc
inc
mov
dec
adc
adc
lods
lret
cld
fldenv
loop
gs
mov
icebp
sbbl
aas
test
mov
lret
mov
cmpsl
jo
pop
dec
test
call
jp
jo
or
add
cmpsb
cwtl
mov
mov
popa
mov
aad
insl
sub
popf
xlat
adc
jle
or
imul
mov
xor
sub
sbb
cmpsl
push
shlb
decl
mov
inc
loope
add
out
movsl
push
xchg
push
sub
mov
or
adc
xchg
hlt
out
dec
lahf
inc
sbb
jne
jge
push
sbb
sbb
pop
out
xor
fcompl
add
insl
leave
fs
mov
jo
cld
push
not
sub
inc
xchg
xor
mov
dec
add
ds
aad
loope
pop
popa
lret
js
pop
loopne
and
jmp
es
test
movsl
cli
mov
jbe
lret
cs
mov
mov
ret
sub
leave
dec
les
add
xor
fdivs
sahf
divb
sub
pop
xchg
add
mov
cmpsl
adc
xorb
jae
sbb
jg
xchg
test
push
add
xor
xlat
mov
xchg
lods
mov
lret
jp
pop
xchg
stc
ret
mov
jp
push
cmp
lods
jne
addr16
imul
orl
and
and
stc
clc
xchg
lock
movsl
mov
hlt
loopne
xchg
cmp
cmp
xor
jns
or
xchg
jns
subb
sbb
addl
adc
loopne
call
sub
pusha
fimuls
stc
ja
pushf
xchg
push
scas
fsub
jb
jnp
adc
push
push
lcall
lret
jno
mov
icebp
xor
fs
dec
cmpsb
cmpl
fld
fwait
out
addr16
jne
je
cmp
ss
sub
stc
mov
ret
adc
cmp
dec
ljmp
ret
arpl
fisubrs
add
orl
inc
sub
in
lret
cmc
hlt
xor
lock
jmp
adc
outsl
push
mov
test
mov
jne
mov
cmpsl
mov
fldenv
mov
mov
dec
dec
mov
sbb
je
push
dec
cmp
bound
push
add
xchg
mov
jo
fildll
sti
insl
popf
out
mov
mov
pop
pop
mov
fstpl
cwtl
loope
pop
mov
xchg
jb
stc
nop
sbb
xchg
lods
in
dec
and
or
cmpsb
cs
xor
mov
dec
dec
popa
xor
dec
jge
and
push
inc
jmp
mov
pop
and
iret
add
stos
xor
std
and
js
mov
adcb
mov
out
fisttpll
movsl
loope
jae
cltd
push
daa
jp
dec
out
stos
mov
adc
addb
add
mov
loope,pn
in
aam
lods
testb
out
cld
push
and
out
addr16
cld
and
mov
add
outsb
inc
cld
je
jl
xorl
push
sti
pop
inc
jo
mov
test
out
aaa
ljmp
xchg
pushf
repnz
push
add
aad
adc
call
scas
mov
stos
shll
or
repnz
arpl
pop
cmp
xchg
xor
mov
mov
sub
mov
sbb
aas
lea
nop
ds
sahf
ret
mov
push
rcr
mov
jmp
aad
dec
cltd
jne
je
push
sub
sbb
in
call
push
xchg
js
jge
in
adc
ror
stos
mov
xor
xlat
xchg
int3
rorb
cmpsl
mov
or
sub
cmc
stc
sbb
cs
jns
fwait
outsb
pop
mov
stos
and
xchg
pop
cmp
add
negb
xor
pop
add
cmpsb
push
ret
pop
out
xchg
push
mov
cmc
cmp
pop
push
pop
add
xor
jno
aaa
bound
inc
push
mov
mov
or
loop
pop
sub
add
aam
xchg
hlt
pop
push
cld
sub
outsl
int
sub
mov
mov
xchg
mov
fldt
dec
in
sahf
mov
in
je
push
fsubr
mov
stc
jo
or
xlat
outsl
cli
out
jne
pop
ret
and
inc
xchg
jecxz
xlat
rorl
add
outsl
fsubrp
jle
ror
push
flds
in
xor
mov
push
push
sub
jb
mov
mov
jmp
pusha
aad
repz
add
dec
and
scas
jbe
lea
or
pop
sarl
pop
jae
jbe
mov
dec
xorl
xor
movsl
pop
sub
jg
jbe
gs
int
mov
pusha
psllw
cmp
mov
xchg
cmp
push
lds
ds
fidivrl
das
push
leave
notl
add
xchg
xor
or
adc
xor
pop
mov
mov
jecxz
repnz
xchg
leave
cmp
ret
mov
pop
jl
lds
pop
fistpl
lds
cmp
push
fcompl
jo
aas
stc
push
dec
fstps
jecxz
out
or
lcallw
in
mov
adc
sub
dec
push
sbb
daa
dec
push
mov
fcomps
test
inc
xchg
cld
js
cmpsb
pop
push
and
lods
xchg
and
je
jmp
in
fcmovnbe
sub
scas
fdivrs
lret
mov
hlt
lret
adc
inc
into
loopne
mov
push
mov
mov
inc
or
outsl
sti
push
jo
ljmp
xchg
push
mov
adc
cmp
push
nop
imul
and
push
mov
imul
jle
dec
hlt
movsb
lret
insb
sbb
pop
rcrl
inc
sbbb
addl
push
mov
nop
scas
push
fistpll
mov
and
aaa
mov
add
adc
fwait
ret
out
ret
mov
mov
push
inc
pop
clc
shll
aad
out
add
stos
aam
xor
sub
inc
gs
outsl
lret
xor
push
gs
adc
test
add
adc
sbb
mov
mov
lea
imul
push
roll
inc
xchg
int
daa
ss
jp
mov
sub
mov
mov
xor
push
add
or
bound
in
cli
mov
push
inc
xchg
inc
dec
jb
pop
sbb
mov
sbb
mov
push
push
sbb
inc
js
xor
mov
out
clc
aam
inc
lret
mov
arpl
fdivr
xchg
std
idivl
xor
mov
xchg
xor
pop
cmp
ss
or
mov
mov
push
into
or
ret
pop
pop
in
or
sbb
outsl
pop
stos
cmp
cmc
fcomps
fidivs
ljmp
push
push
lret
das
sbb
rcl
adc
jae
xchg
mov
mov
enter
ja
pusha
cli
aaa
daa
lret
aas
pop
jge
push
jbe
test
test
pop
sbb
repz
fs
or
test
xor
and
frstor
es
sbb
mov
ficomps
hlt
enter
leave
repz
cmp
push
xchg
rcrb
mov
es
sub
mov
inc
jne
xlat
push
xor
push
ljmp
cmp
mov
cmp
jle
and
in
stos
imul
xchg
imul
add
in
push
loope
or
fwait
cmp
shl
mov
inc
dec
xor
mov
pop
jae
popa
cmp
push
pop
aam
push
mov
lds
push
aas
dec
call
lahf
push
jmp
out
xchg
imul
xchg
daa
xor
aam
pop
and
pushf
aam
dec
dec
stos
mov
lock
xor
out
push
lret
or
lock
in
jns
into
or
inc
cmp
jns
and
push
loope
cmp
lock
pop
out
test
dec
aam
loop
push
iret
xchg
outsb
mov
repz
es
xchg
insl
cli
xor
dec
pusha
sbb
in
cmp
outsl
jnp
lods
mov
test
add
push
stos
icebp
imul
jmp
dec
xor
ret
out
sub
cmpsl
pop
add
aam
outsb
test
and
pop
adcb
pusha
outsl
mov
xchg
pop
push
xor
cmp
push
jbe
and
insl
lahf
cmp
sbb
pop
push
outsb
push
cmp
shll
out
out
mov
fsubrs
xor
pop
loop
rclb
test
repz
das
xlat
cmp
mov
or
bound
imul
sbb
daa
std
mov
mov
cmp
movsl
stc
mov
test
sarb
mov
mov
rclb
stos
jp
cmp
test
incl
sbbl
packsswb
pusha
bnd
mov
xchg
push
mov
push
out
out
adc
mov
sub
sbb
mov
xlat
repnz
push
imull
sub
out
sahf
pop
fisubs
les
rclb
stos
mov
cwtl
sahf
cmp
adc
les
aas
push
aam
cltd
pop
mov
imul
and
push
xchg
xor
outsb
decb
out
sarl
dec
jns
xor
mov
mov
jle
hlt
movsb
shl
add
lea
and
cmp
sbb
idivl
stos
int3
xchg
cli
xlat
ud1
and
xchg
lret
mov
xchg
lds
les
movsl
xchg
mov
fstl
clc
sbb
test
outsl
dec
lret
jbe
aas
das
lods
xor
movsl
mov
mov
call
repz
rorb
pop
movl
sbb
mov
cmpl
or
aaa
mov
ljmp
out
pop
jle
pop
repnz
sahf
jbe
shl
loope
in
cmp
test
xchg
outsb
lock
xor
pop
xchg
jo
cmp
sbb
arpl
lock
ret
fsub
repz
jg
dec
jmp
loop
xor
xor
inc
push
sbb
xchg
gs
inc
xor
cmp
ljmp
mov
inc
shll
mov
repz
movsb
cmp
outsl
dec
and
cld
lods
call
push
loopne
dec
push
movsb
jl
cmp
shlb
xchg
inc
repz
sub
js
add
fmuls
cmp
clc
sbbl
cs
adc
inc
and
jns
leave
pop
es
push
pop
cwtl
and
xchg
pop
sbb
call
test
push
pop
mov
stc
inc
stc
imul
sbb
sarl
sbb
hlt
mov
out
mov
add
lods
xchg
ja
add
rcll
pop
shll
aad
dec
scas
aaa
pop
mov
lock
pop
push
cli
jo
stos
and
push
pop
movsb
mov
test
xor
xor
repnz
cltd
add
gs
sti
iret
cmp
mov
and
push
mov
ror
into
dec
dec
mov
push
outsl
pop
xchg
dec
cmc
mov
pop
fs
js
imul
jne
cmp
in
sbb
mov
mov
or
fnstenv
xchg
xchg
iret
out
stos
mov
push
ret
dec
pop
adc
adc
mov
lea
sub
xchg
pusha
out
add
mov
jl
fcmovu
xor
bnd
push
xorb
fwait
push
imul
je
xor
fdivrp
call
imulb
push
cwtl
inc
sbb
mov
adc
imul
mov
pop
xchg
daa
mov
aad
sbb
mov
repnz
cltd
inc
lea
xor
lcall
testb
movsl
sbb
hlt
cwtl
pushf
cmp
xor
adc
aad
mov
jecxz
fwait
mov
push
and
jae
movsb
xlat
test
pop
cli
xor
movsl
pop
jb
arpl
inc
shrb
mov
mov
sub
mov
rorb
xchg
lcall
into
jmp
cmpsl
gs
jns
dec
das
fdivs
xchg
xchg
cmp
adc
xchg
pop
or
loopne
xor
inc
lods
and
inc
xchg
arpl
inc
xchg
fwait
cld
and
dec
icebp
jb
mov
lret
pop
sub
xchg
mov
lcall
pop
dec
push
jmp
push
movsl
sbb
ljmp
and
inc
and
push
ficomps
loope
push
push
rolb
aaa
mov
into
mov
xchg
jl
pop
out
inc
cmp
pusha
nop
cmp
sbb
pop
xor
dec
mov
fistl
and
sub
call
in
and
and
add
pop
test
arpl
in
mov
lods
mov
jno
dec
add
jge
and
movsb
inc
push
and
add
add
add
xor
add
cmp
outsl
lock
aam
add
das
mov
int3
shl
cli
out
inc
cli
test
xor
imul
and
jmp
mov
mov
sub
jecxz
jnp
push
mov
inc
testb
mov
in
aas
rolb
mov
xchg
jo
test
pop
decb
outsb
xchg
das
icebp
pop
adc
adc
dec
adc
sti
in
fldt
push
arpl
mov
roll
jbe
js
jecxz
mov
mov
mov
sbb
add
inc
lcall
sarb
or
mov
cld
aas
ljmp
decl
jne
je
jecxz
bound
hlt
pushf
repz
out
insb
or
rorb
faddl
push
dec
push
push
add
subb
pop
add
pop
movsb
xor
cmp
loopne
mov
into
inc
xchg
movsb
lahf
xchg
out
bound
shrb
inc
repz
es
sarl
inc
nop
out
xchg
pusha
mov
mov
lcall
ret
cmc
in
xlat
mov
cs
shrb
bound
xchg
push
ret
rolb
out
divps
jb
pusha
stc
iret
call
xchg
fmulp
push
icebp
mov
mov
jns
sbb
mov
sub
ret
es
mov
cmp
pop
jae
sbb
pop
sbbb
mov
rorb
sub
sub
sub
test
das
sub
fldcw
popf
insl
loope
cli
shll
cmp
jg
ror
cmp
jnp,pt
sbb
into
and
repz
test
daa
out
pop
sbb
pop
out
mov
imul
bound
mov
fdivr
mov
or
inc
shrb
das
daa
rcl
or
mov
scas
divl
ljmp
jae
int
pop
mov
shrb
cmp
cmp
mov
rclb
and
mov
push
sub
mov
cmp
jp
dec
leave
sbb
mov
lea
lcall
sbb
mov
sbb
in
mov
adc
inc
inc
xor
xor
or
xor
shl
push
mov
psadbw
jne
xchg
add
sbb
adc
je
scas
push
in
sbb
or
pop
add
imul
dec
cmp
aad
cltd
xchg
pop
cld
lea
ficoml
fisttpl
xor
jb
dec
adc
sbb
jecxz
mov
xor
jno
sub
mov
sbb
push
jb
pop
mov
gs
mov
dec
mov
rclb
jne
add
jbe
xchg
dec
or
js
cmp
imul
dec
cld
loope
stos
mov
jg
pop
adc
jae
pop
add
lods
inc
sub
divl
pop
add
test
lds
aad
mov
clc
add
lods
mov
mov
fstps
pop
shrl
enter
jle
aad
mov
insl
sbb
push
loopne
int3
mov
lret
push
mov
lock
in
faddl
pop
pop
mov
cmc
xlat
out
push
aaa
adcl
dec
dec
sbb
inc
and
push
adc
lock
or
or
xor
jl
sub
gs
push
and
add
cmp
fsubrp
test
mov
mov
adc
std
call
add
fsub
js
pop
loopne
jb
and
jo
inc
push
lahf
cmp
scas
push
jmp
lods
push
dec
sub
jmp
jno
sbb
push
sbb
mov
xchg
or
lods
pop
andl
adc
cwtl
cwtl
dec
add
inc
ficomps
adc
mov
cmpsb
sub
xchg
enter
fwait
outsl
repnz
aam
call
scas
imulb
loope
mov
dec
xchg
adc
sub
andl
mov
testb
in
sbb
sub
mov
cmpsl
push
outsl
add
fildll
jbe
sub
stc
aaa
sbb
dec
repz
or
insl
lods
sbb
fcomp
jns
aam
inc
loope
dec
lods
scas
mov
lock
adc
cmc
fnsave
fcmove
cmp
ds
mov
and
cmp
fcoml
inc
icebp
push
adc
repz
rorl
in
negb
pop
insb
or
inc
adc
xor
xchg
cld
nop
and
xor
sahf
adc
jl
mov
xchg
dec
jge
mov
out
lcall
or
push
fldenv
or
movsb
or
push
xchg
movsb
out
mov
push
or
pop
imul
mov
pop
pusha
movl
jge
fcmove
mov
inc
dec
test
sbb
xchg
jae
out
int3
mov
push
aam
in
ret
dec
loopne
inc
pushf
call
or
imulb
js
dec
out
divb
and
push
fldt
test
popa
shrb
cs
fcmovnbe
add
in
nop
or
scas
sub
jbe
js
push
int3
add
jle
and
add
push
es
pusha
sbb
and
enter
rorl
xchg
aad
mov
mov
push
out
jl
ja
lcall
sbbl
les
jp
test
test
mov
jnp
call
mov
xchg
loopne
inc
pcmpgtb
dec
mov
lods
in
adc
stc
shlb
out
add
xor
mov
je
and
lock
ljmp
pop
sub
sub
es
js
cmp
adc
xor
subb
jno
xor
cli
add
test
scas
fcmovnb
lahf
out
push
ds
xor
test
test
clc
mov
xor
sub
push
outsb
cmpsb
ror
popf
out
pop
mov
daa
jmp
mov
orl
in
insl
jg
xor
scas
in
mov
roll
cltd
or
inc
out
jb
std
lcall
and
inc
sbbl
test
lds
shrb
mov
mov
call
or
and
mov
and
add
enter
nop
sti
mov
je
and
test
fsubrl
jo
pop
jno
shlb
push
jl
xor
jno
mov
and
cmpsb
fsubl
into
jge
and
insl
cmp
addr16
sbb
inc
arpl
mov
ds
pusha
movsl
add
fldl
mov
jae
jo
cld
adc
fmuls
cmpsl
inc
enter
xchg
lretw
push
add
add
pop
imul
and
lahf
daa
aas
push
dec
adc
jle
dec
cmc
aaa
rcrl
arpl
subb
push
sub
jne
cmp
cmc
jl
sub
jbe
inc
xor
mov
imull
adc
pop
cmc
lret
aad
imul
and
push
loope
jle
mov
imul
repz
push
mov
adc
xchg
push
fists
adc
cmp
mov
cmp
stc
loope
ror
dec
xchg
test
stos
mov
inc
insl
mov
cltd
push
and
es
div
notl
dec
lcall
mov
dec
scas
stos
stos
add
xor
pop
fnsave
push
hlt
sti
lret
jbe
lret
lods
xor
aad
inc
movsb
mov
or
shlb
or
add
xor
mov
pop
loopne
lret
mov
add
inc
out
xchg
in
out
fwait
lea
push
cmp
dec
cltd
dec
add
leave
lahf
or
inc
add
xlat
sub
fistps
xor
hlt
mov
pop
push
add
mov
cmp
mov
pusha
data16
pop
sbb
or
push
or
lret
and
test
ss
imul
test
imul
sbb
imul
or
loope
dec
popa
movsb
outsl
inc
inc
xchg
mov
sbb
clc
fists
cmpsb
rclb
cmp
adc
mov
clc
adc
fistl
cwtl
add
mov
add
je
dec
xchg
dec
stos
out
fmuls
push
imul
add
push
scas
stc
add
adc
adc
leave
add
loop
pop
scas
repz
push
sbb
fisttpll
jnp
inc
cmpsb
insb
outsb
push
ret
cmp
cmp
mov
mov
sbb
inc
ret
mov
fcmovnb
mov
push
or
sbb
sti
mov
clc
xchg
outsl
and
into
sbb
lea
pop
dec
leave
xchg
and
push
mov
outsl
and
or
mov
pop
add
arpl
sbb
ljmp
int
sbb
sub
xor
jecxz
aad
push
adc
arpl
or
mov
inc
inc
sbb
inc
insb
mov
add
xchg
pop
int3
push
mov
push
out
bound
adc
hlt
std
xchg
repz
cmp
mov
dec
mov
sub
inc
fcom
rolb
jo
xor
mov
dec
sub
pop
int3
add
fiadds
jno
adc
es
dec
data16
mov
and
mov
adc
jg
cli
outsb
nop
cmp
or
mov
out
std
ljmp
jo
xchg
out
adc
nop
dec
js
mov
cmp
repnz
daa
xor
sub
mov
inc
push
leave
fs
rcrb
jp
mov
hlt
mov
adc
repnz
mov
adc
ret
ds
arpl
mov
pop
xchg
cmp
xchg
imul
rcll
in
add
inc
pop
cmpl
dec
or
movsl
cmpb
dec
out
adc
push
dec
cwtl
add
lea
and
lcall
loope
fld
dec
xchg
repz
adc
arpl
loopne
repz
cltd
mov
and
dec
cmp
dec
sub
test
fisubrl
daa
test
jmp
scas
out
adc
sbb
adc
xchg
xchg
cmp
hlt
xchg
adc
scas
add
inc
dec
mov
lret
or
push
movsb
sbb
cmpl
mov
inc
push
aaa
sub
mov
lcall
mov
imul
lret
and
loope
push
mov
aaa
or
cltd
and
enter
mov
das
pop
nop
fsubrs
mov
and
lahf
jp
mov
mov
mov
dec
in
inc
adc
jmp
pushf
pop
mov
or
mov
dec
arpl
int
pop
aad
ds
cs
outsl
scas
outsl
or
mov
and
inc
push
push
cmp
jae
push
clc
sti
scas
test
push
nop
xor
cmpsl
dec
punpckldq
pop
mov
dec
loopne
movsl
repz
or
loope
test
int
test
ret
ljmp
jge
lret
push
fnstenv
push
stc
movsb
pusha
sub
and
push
and
xchg
cmpsl
cli
xor
xor
pushf
dec
daa
imul
ljmp
and
pop
jp
mov
jmp
sbb
mov
sahf
xor
hlt
sarb
les
test
pop
insb
cli
mov
pop
orb
sub
xchg
mov
xchg
out
rorb
adc
sbb
sbb
or
mov
mov
pop
xor
vaddsubpd
sbb
adc
mov
clc
jmp
dec
dec
movsb
push
mov
pop
xor
dec
mov
mov
xchg
cltd
cmp
lock
ret
loopne
nop
cmp
mov
add
pxor
adc
mov
stos
in
xchg
sbbl
pop
cld
and
mov
out
adc
rol
outsl
cmp
imul
or
cltd
xchg
sub
jg
xor
jno
push
mov
inc
mov
aam
roll
shll
arpl
lods
pop
mov
mov
rcll
adc
dec
sbb
xor
lds
adc
push
sub
mov
cmpsb
pusha
stc
shrb
cwtl
rolb
push
sub
cltd
sbb
jg
add
add
out
and
cmp
nop
repz
jg
xor
mov
mov
push
sbb
stos
or
ljmp
jl
push
and
pop
inc
cmpsb
pop
int3
fwait
dec
xchg
das
ss
ret
cmp
xchg
test
daa
nop
int
xchg
push
pop
adc
jnp
or
mov
sbb
adcl
stc
cmp
fdivrl
pop
clc
mov
ffreep
xchg
xchg
or
or
les
inc
outsl
adc
jge
or
adc
xchg
jg
jb
leave
je
push
mov
adc
jmp
fwait
xchg
scas
rdmsr
jg
ljmp
sub
lea
pop
insl
pop
addr16
insl
and
lods
mov
insb
and
jne,pt
outsb
and
test
sbb
mov
cmp
sbb
sbb
push
popf
push
ret
ds
js
aaa
jp
dec
mov
rcr
lock
lds
mov
lods
jae
cwtl
xchg
ss
push
or
and
mov
pop
clc
jg
das
dec
cli
and
loop
insb
or
jnp
push
mov
adc
add
loopne
jb
xor
adc
lods
mov
sbb
xchg
adc
sub
lock
mov
inc
test
cmp
xor
mov
inc
xchg
adcl
pop
mov
jp
add
das
scas
dec
andl
mov
je
into
loopne
xchg
jb
andb
adc
adc
push
add
sahf
xor
inc
movsb
popa
popf
push
divb
data16
sub
imul
cs
mov
movsb
jg
cmpl
jo
xchg
pop
sbb
mov
sarl
mov
inc
mov
ljmp
popa
push
andl
stc
dec
push
pop
add
leave
fdiv
inc
jbe
and
cli
push
or
mov
mov
lahf
add
aam
dec
xchg
fiaddl
pop
sbb
add
daa
js
adc
jno
ficoml
push
in
scas
jne
ljmp
xchg
xor
imulb
loope
fistpll
adc
mov
cmp
push
aas
mov
in
jg
std
add
cltd
cli
jae
mov
inc
stos
cmpsl
cmp
cli
or
adc
test
arpl
test
sti
lods
mov
cmp
aam
das
mov
aas
adc
hlt
and
add
and
add
add
inc
pop
sbb
dec
mov
adcb
sahf
cld
lret
lods
sbb
test
shlb
outsl
cmp
fwait
jb
popl
cwtl
cld
xor
aaa
mov
xchg
pop
bound
in
cmp
add
lahf
pusha
add
jge
jb
add
mov
cltd
outsb
jnp
clc
lcall
mov
addr16
roll
jp
cs
filds
push
mov
sub
xor
lret
outsl
and
loope
dec
mov
rcll
data16
out
aas
out
ljmp
imul
mov
or
into
outsb
xor
rorb
adc
test
addr16
rcl
fists
repnz
aam
outsl
mov
jmp
sub
aam
sbb
inc
mov
or
imull
sbb
xchg
aaa
mov
outsb
and
mov
out
cmp
jecxz
sbb
cltd
popf
aad
jle
popa
sarb
daa
cmpsb
push
aas
test
xchg
add
push
insl
mov
push
dec
cmpsb
mov
popf
push
movsb
leave
mov
fisubl
jbe
mov
icebp
ja
cmp
adc
xor
out
popa
jne
xchg
pop
mov
into
addr16
mov
jl
je
pop
insl
insl
mov
out
mov
push
mull
push
imul
xchg
subb
sbbl
mov
test
pop
jg
mov
int
mov
loopne
cwtl
push
daa
pop
in
mov
pusha
adc
inc
bound
jns
mov
loope
pminsw
sbb
cmp
cmp
xor
loopne
das
jp
sub
cmp
imul
mov
ss
jecxz
push
mov
cmp
jp
add
xchg
xor
in
cmc
or
push
lahf
adc
jl
sbb
jb
stos
sbb
lfs
ror
push
sub
mov
ss
sub
js
lret
mov
dec
divb
mov
xchg
jns
mov
gs
sbb
std
fwait
cmp
cli
fildll
xor
dec
test
sbb
into
arpl
xlat
cmp
or
inc
and
je
in
push
aas
cmp
iret
fsubrs
lods
xor
pop
lcall
popa
mov
aaa
inc
cli
mov
jnp
jecxz
testb
pop
sbb
test
leave
fstpl
cs
cmpsb
xor
push
cwtl
dec
lcall
pop
mov
insb
xor
mov
mov
xor
mov
movsb
test
push
ljmp
and
std
fcompl
jns
mov
icebp
push
aam
mov
push
xor
or
scas
or
lods
add
cmp
dec
pushw
lea
or
pushf
repnz
dec
rcrw
lea
sub
insl
jmp
insl
xor
out
cltd
inc
sub
adc
outsb
nop
push
jbe
into
add
sub
sub
adc
popf
lock
cmpsl
repnz
icebp
push
mov
andb
ficompl
mov
mov
push
inc
pop
add
sahf
xchg
fmuls
and
push
push
out
in
lds
sub
stc
xor
dec
and
push
dec
mov
push
add
daa
mov
loope
bound
lock
jge
xor
jg
sbbl
dec
mov
test
pop
mov
aam
pusha
jle
rclb
lods
incl
cmp
mov
sub
repz
inc
aad
mov
push
jno
clc
push
pusha
xor
cmpsl
sbbb
incb
push
adc
cmc
lds
loop
jno
fstpl
cmp
sti
out
sbb
imul
sub
mov
pop
adc
adcl
in
sbb
mov
pop
inc
fadds
popa
sbb
pop
xor
xor
fimull
mov
mov
xor
and
sub
gs
sbb
xor
mov
xlat
jge
push
add
jns
cmpsb
fiaddl
sbb
jp
in
push
enter
es
cmpsb
pop
add
push
pop
add
dec
inc
sub
sbb
jge
std
ret
iret
sub
daa
or
pop
rorl
sbb
xchg
jnp
mov
mov
push
cld
insb
pop
inc
dec
aad
ds
adc
xor
pop
push
inc
cltd
mov
mov
and
and
sbb
cmpsb
push
jb
xor
sahf
mov
sub
shll
mov
daa
lcall
xchg
xchg
sbb
push
mov
push
pop
jae
mov
aas
jb
roll
sarb
repz
push
xor
lcall
mov
call
in
and
dec
fisttpll
aaa
fnstsw
mov
fdivl
lahf
dec
dec
repz
pop
mov
out
lret
adc
dec
inc
cmp
movsl
clc
pop
repz
mov
vmovhps
lret
jno
cmpsl
mov
jo
sub
orb
push
imul
and
nop
scas
or
mov
xchg
mov
push
inc
push
xor
add
jecxz
jno
stos
inc
enter
inc
icebp
mov
test
out
inc
mov
aaa
sahf
sbb
pushl
popa
inc
dec
stc
or
pop
add
push
fbstp
push
scas
iret
je
leave
push
sbb
cmp
sub
push
xchg
mov
mov
test
imul
add
cmpsl
jecxz
xchg
xor
mov
push
push
loopne
or
mov
negl
test
pop
sub
test
xchg
clc
cmp
jmp
stos
sbb
adc
outsb
jmp
arpl
push
xchg
pop
loope
mov
sbb
mov
adc
jl
test
addr16
xchg
dec
jp
cmp
pushf
dec
cmpsl
push
xchg
enter
sbb
mov
mov
xor
enter
ror
fwait
dec
popf
jbe
push
testl
pusha
sub
sbb
sub
cmp
sub
int3
push
es
rorl
loop
or
aam
push
jmp
push
mov
test
test
jmp
lds
jge
pop
leave
pop
outsb
sub
dec
push
in
insl
adc
repnz
pop
xchg
mov
or
mov
test
out
in
mov
dec
cld
sub
push
fwait
push
mov
ljmp
call
out
push
push
jne
test
rcll
popa
jl
push
xlat
aad
ds
out
pop
cli
mov
mov
enter
pop
push
decb
mov
cmp
int
or
jmp
repz
push
mov
dec
cmpsb
pop
add
mov
push
xchg
movsb
adc
outsb
sahf
rcrb
xlat
fstpt
push
dec
push
sub
movsb
mov
notb
cmp
int
jl
xchg
add
adc
movsl
mov
dec
testb
mov
push
out
loope
cld
gs
mov
roll
aad
cmp
fadds
js
mov
cs
xor
pop
add
in
shl
sbb
clc
inc
xchg
lret
gs
mov
xchg
inc
lahf
aad
dec
jne
cs
imul
mov
xor
sahf
pop
jns
push
dec
rcrb
push
jg
pushf
into
xchg
xor
aad
mov
adc
mov
xor
push
xlat
data16
mov
jb
dec
and
cmp
mov
xchg
cmp
or
mov
sub
mov
dec
popf
push
jmp
xchg
sbb
out
lret
inc
xchg
adc
pop
xor
js
xchg
es
fbld
jecxz
inc
stos
pop
loop
adc
jp
test
imul
sahf
jg
sar
jmp
dec
pop
stc
push
push
lea
inc
sti
mov
out
jns
push
div
sub
je
pop
adc
test
rclb
clc
incl
jmp
cs
sub
adc
aaa
push
dec
mov
gs
scas
ja
jg
push
jae
pop
xor
pop
or
push
sub
pusha
jne
inc
fistps
loop
icebp
in
pop
and
sbb
xor
push
dec
mov
or
and
pop
test
rolb
ds
jae
das
cmp
clc
push
or
cli
lds
xor
xor
lret
andl
out
pop
mov
jl
out
inc
xchg
das
jl
pop
push
mov
xlat
and
mov
xor
xor
or
adcl
in
lods
inc
adc
and
cmpsl
mov
pop
dec
dec
jp
mov
or
inc
mov
dec
push
lcall
fbld
outsl
rcll
xchg
cltd
das
inc
pop
outsb
pop
add
mov
mov
fdivl
fdivrs
pop
dec
xchg
cmp
rcll
push
dec
jl
fdivr
jecxz
and
daa
push
add
ror
inc
push
inc
test
sbb
push
adc
cmpl
and
ljmp
xor
rorb
cmp
sub
mov
mov
or
cs
xchg
adc
dec
test
sbb
and
dec
push
dec
cmp
mov
cld
addr16
ljmp
mov
mov
loop
push
popa
push
inc
xor
movl
mov
mov
inc
jg
push
jmp
stos
pop
sub
loopne
or
jb
out
loopne
cwtl
xor
scas
aam
push
out
mov
bound
rcl
ret
jp
scas
push
adc
jmp
subb
imulb
fdivrs
lods
movsb
pop
mulb
xchg
nop
mov
sub
mov
in
inc
cs
cmp
mov
mov
xor
cmp
push
xchg
outsl
jle
adc
int
mov
cld
sbb
push
cmp
xchg
orb
jbe
mov
out
je
adc
outsb
jg
jno
js
fsubl
in
push
jle
call
inc
lret
jnp
sti
pop
popf
mov
cmp
dec
adc
ljmp
outsb
fidivs
popf
mov
sbb
sbb
std
jne
shl
push
mov
pop
stos
add
mov
jb
dec
sub
gs
mov
fstpl
mov
mov
imul
cmpsl
out
inc
pop
and
pop
xor
pop
add
cmpsl
xor
push
push
inc
push
in
lea
movsb
mov
adc
lahf
shll
inc
fcmovnb
inc
add
add
jae
inc
scas
push
mov
daa
cmp
loopne
int3
inc
js
mov
jne
stc
mov
rcr
push
mov
push
cmpl
les
pop
cmp
xchg
add
mov
pop
fildll
pushf
mov
lock
or
mov
int3
mov
inc
mov
fstps
add
jle
cmpsb
out
roll
lret
sarl
ret
or
sub
scas
sub
fmulp
sti
mov
cmp
add
xchg
xchg
xchg
lods
lods
push
into
popf
mov
mov
sbb
jle
les
pop
shlb
pop
inc
push
int3
stc
or
iret
es
mov
rcrb
popf
loopne
push
lahf
xor
mov
faddl
gs
jecxz
pop
mov
movsl
imul
cmc
daa
mov
pop
and
adc
popf
mov
lcall
adc
test
push
xlat
in
out
jbe
test
shrl
sahf
jae
mov
test
jl
out
jne
leave
out
roll
fisubs
cltd
or
cmp
mov
out
adcl
jp
ret
cltd
pop
out
add
out
or
and
imul
mov
cmp
xchg
fstpl
inc
or
inc
or
cmp
loop
cmp
movsb
bound
jbe
cltd
out
movsl
fsts
outsb
sub
jnp
clc
mov
ds
adc
int3
or
ret
je
pop
lods
push
or
sbb
mov
jg
sbb
mov
mov
jnp
addr16
xchg
jnp
repz
xchg
insb
sub
xor
scas
mov
inc
pop
out
aaa
fsubr
out
loope
mov
add
jecxz
or
mov
lods
stc
outsb
cmp
scas
jae
ljmp
mov
mov
xor
cld
lods
xchg
jle
xor
cmc
sbb
lretw
subb
lahf
out
xchg
sub
data16
jns
sub
or
nop
cli
je
mov
or
cmp
mov
mov
or
xchg
adc
fnstcw
add
stc
xchg
daa
lret
pop
mov
call
test
rol
jb
sbb
inc
jmp
push
inc
fwait
mov
xchg
inc
xchg
cmp
cs
inc
repz
and
sbb
aaa
pop
mov
push
loope
jp
xlat
outsb
and
in
sbb
mov
out
icebp
sbb
xchg
fs
fimull
stos
lods
mov
test
mov
or
mov
or
pop
adc
cs
jle
add
sti
xchg
js
lods
pop
sbb
mov
adc
sub
insb
xlat
mov
xchg
or
pop
lods
lea
repnz
mov
push
dec
stos
dec
sarl
dec
xchg
ss
in
jo
pop
xchg
jb
repnz
push
in
fstpl
pusha
out
xor
or
add
push
aam
xor
loop
jecxz
out
xchg
adc
aas
mov
mov
enter
cmp
jns
jns
test
mov
aad
or
pop
xor
rorb
cmp
adc
push
sub
inc
stos
leave
clc
outsl
pop
ja
jno
add
dec
sbb
es
sbb
mov
in
push
aad
pop
fwait
mov
jno
push
pop
pop
and
sahf
repnz
aaa
inc
shlb
in
xchg
stos
pop
jg
scas
lods
je
mov
adcb
jg
jno
dec
or
fcom
push
aaa
mov
pop
jg
xor
les
loopne
sbb
dec
stos
pop
add
or
mov
inc
adc
jmp
mov
and
pop
jbe
ja
sahf
test
imul
sub
mov
or
add
aas
sti
xor
mov
mov
outsb
push
mov
or
inc
ret
int3
dec
fsubr
sbb
jno
adc
gs
jb
sbb
adc
fdivl
sub
xor
roll
sub
or
push
xor
ljmp
or
inc
mov
push
push
mov
and
sti
test
add
mov
nop
mov
outsb
inc
jl
sti
add
cld
jo
stos
sahf
scas
mov
sbb
mov
test
xlat
gs
dec
sub
inc
jae
mov
les
cwtl
fwait
cmp
stc
out
push
jnp
mov
pop
pop
enter
add
mov
ret
mov
repz
xchg
inc
into
jbe
add
cmp
ljmp
jl
sbb
cwtl
or
add
adc
bnd
ss
sub
rcll
cltd
push
test
enter
mov
test
jmp
xchg
dec
scas
xlat
popa
fstl
int
hlt
sbb
ja
mov
mov
mov
add
sub
sahf
jns
push
xlat
int3
sub
pop
sbb
repnz
dec
cmp
in
push
pop
enter
xchg
rcl
in
leave
xchg
orl
push
pop
push
pop
mov
lock
push
add
push
and
iret
xor
loope
and
dec
dec
mov
pop
repz
or
inc
inc
lcall
xchg
repz
jne
data16
sbb
addb
out
cmp
mov
mov
xchg
fstpl
and
out
mov
data16
and
mov
loop
jp
cmpsl
jmp
daa
or
hlt
rcrl
dec
sub
das
sbb
nop
sbb
pop
scas
jle
aas
lcall
repnz
mov
push
les
jle
sbb
and
ret
push
fisubrl
lret
roll
out
lret
sbbb
mov
adc
jno
das
fildll
cmp
outsl
adc
jp
fldl
inc
cmc
js
test
dec
add
cvtps2pi
sub
push
sahf
je
hlt
loope
or
xchg
stos
cmp
ljmp
out
dec
cmpsb
xor
std
and
cmp
je
fnsetpm(287
cld
push
mov
popa
push
xor
pop
lock
pusha
push
lcall
jo
add
ja
les
popf
loopne
sub
icebp
in
nop
fcomps
in
fldenv
inc
inc
stc
shlb
ss
mov
sti
push
or
arpl
dec
jle
and
sbb
jp
in
mov
hlt
sbb
lcall
dec
lcall
mov
and
mov
inc
fmull
add
js
aas
iret
push
inc
enter
add
mov
jbe
imul
inc
out
jae
mov
xor
out
mov
jo
jl
pop
shll
lds
and
xor
daa
lods
adc
or
cmp
lods
mov
pop
mov
jb
bound
das
dec
lret
sar
push
popa
xchg
inc
fwait
push
out
and
inc
sub
enter
fistpll
pop
and
outsl
cwtl
add
mov
ja
pop
movsb
jno
and
adc
lahf
sarb
adc
push
daa
jle
mov
adc
fwait
out
stc
xchg
xor
lahf
inc
xor
test
test
lds
dec
std
test
shlb
and
lret
lret
cmp
sub
or
push
adc
push
mov
call
aad
jp
adcb
jb
and
or
fnstcw
adcb
cli
and
fs
test
jne
repz
pop
movsl
sub
daa
dec
stc
fs
xlat
sbb
repz
mov
fidivrl
arpl
popa
push
pop
sbb
xchg
add
nop
and
or
adc
cmp
xor
fstpl
cmpsb
mov
jmp
dec
sub
mov
out
and
nop
inc
loope
xor
aaa
pop
aaa
sbb
and
cmp
ficompl
pop
mov
insl
jp
movsl
insl
out
shl
cmc
xor
push
je
loopne
int
mov
in
bound
mov
stos
push
cmp
movsl
outsl
push
mov
push
bnd
cwtl
dec
andl
loopne
xor
dec
mov
push
mov
jp
push
add
outsl
addr16
xor
inc
mov
rolb
mov
dec
repnz
repz
xor
or
dec
fsubrs
add
jge
mov
jns
pop
ds
mov
inc
push
xor
push
pop
and
jne
sub
loopne
mov
sbb
mov
in
pushl
mov
and
adc
mov
sbb
fistps
icebp
lret
sbb
dec
fidivrl
mov
dec
lock
aam
mov
data16
arpl
push
pop
test
xchg
jae
mov
push
lret
ret
xchg
dec
gs
inc
test
or
xor
cmc
clc
jecxz
cltd
xchg
popf
test
hlt
sbb
jnp
xor
mov
js
or
push
cmpsb
hlt
aad
mov
pop
jle
lret
daa
push
icebp
xlat
fwait
fs
cmpb
jnp
mov
mov
xchg
jno
rcrl
fstps
lods
xor
xor
into
mov
cmp
rolb
mov
jns
mov
xlat
push
push
outsb
or
cs
std
stc
shl
gs
nop
or
inc
clc
shll
pop
mov
inc
scas
je
lret
inc
lock
sbb
ja
shlb
push
push
fdivp
jb
inc
je
inc
xchg
mov
xor
xor
mov
cltd
gs
imul
or
push
inc
clc
add
in
lock
add
cltd
ret
dec
dec
fists
scas
jne
repnz
push
cmp
jg
call
ret
xor
jns
inc
mov
xchg
inc
jae
or
xor
dec
inc
addr16
ret
bound
fadd
and
mov
fwait
cli
mov
xchg
icebp
fisubrl
sahf
pusha
jb
sbb
movsb
fldenv
daa
dec
fisttpl
cmp
push
scas
mov
push
sub
cmpsl
lahf
gs
mov
lret
loope
das
jnp
xchg
mov
imul
xor
add
pop
lods
ljmp
xchg
jo
mov
pusha
cmp
xchg
jg
das
inc
mov
jg
sti
sbb
pop
enter
sti
push
ret
int
mov
bound
mov
inc
cmpsl
mov
mov
sarb
push
sti
mov
jb
jle
repnz
insb
fwait
ds
les
and
pop
test
xchg
dec
bound
insl
pusha
mov
mov
cld
hlt
xchg
inc
sub
icebp
pop
push
xchg
js
inc
cmp
add
sti
fadd
jmp
mov
push
cld
int
sub
jmp
out
mov
mov
mov
mov
fistpll
aam
cmp
cld
into
pop
ljmp
add
cld
and
pop
push
sbb
add
cmc
iret
or
sbb
daa
xchg
adc
jbe
mov
insl
je
in
cmp
outsb
in
jmp
stc
stc
fildll
popl
or
int3
mov
lods
stos
fmull
mov
lds
or
sub
push
and
add
int
cs
ja
rclb
inc
sti
les
mov
or
or
mov
mov
out
movsl
xchg
sub
mov
xor
pop
sbb
insl
push
test
cli
out
fucomip
sti
push
adc
rcll
xchg
adc
cmp
add
lret
sbb
adcb
sub
out
orb
xchg
cld
repnz
scas
and
ret
pop
pop
xchg
fsubrl
sarl
cmp
icebp
adc
or
jo
push
mov
mov
and
fwait
push
insb
cmp
mov
inc
mov
adc
push
loope
rcl
ds
pop
pusha
jo
pop
xor
lcall
sbb
cmp
pop
jecxz
mov
inc
insb
out
pop
iret
pop
mov
inc
sub
adc
in
add
xchg
pop
sub
addl
xchg
mov
sub
stos
add
mov
ss
test
jge
and
push
gs
jbe
jns
pop
or
xor
cmc
add
push
dec
pusha
lods
mov
mov
xor
mov
sti
shr
pop
adc
adc
xchg
mov
dec
das
pop
inc
or
mov
jg
insb
aam
xor
cmpxchg
sahf
inc
xor
cmp
xchg
add
pushf
out
pop
sbb
es
push
repz
cmp
push
sub
add
adc
pop
push
mov
sbbl
mov
icebp
inc
stos
sbb
lock
pop
jg
ljmp
xlat
cli
sbbb
xchg
aas
jno
lahf
sub
lcall
xchg
ljmp
push
scas
mov
test
shll
push
and
or
mov
mov
mov
aaa
leave
fwait
and
inc
mov
add
dec
lods
mov
test
pusha
test
jne
add
push
enter
push
data16
mov
dec
inc
jge
iret
adcl
out
mov
mov
addr16
pusha
adc
xor
xchg
pop
inc
cltd
jnp
sub
stc
jnp
push
jp
lahf
jo
sbbb
negl
lcall
insb
dec
lret
outsl
test
das
enter
push
mov
mov
cmp
jbe
pop
pusha
lds
loope
dec
mov
inc
or
shlb
mov
hlt
push
jne
leave
pushf
bound
call
bswap
in
or
xchg
test
cmp
sbb
sub
je
jo
mul
aaa
fstpt
nop
int
mov
in
arpl
insl
xchg
cmpsl
imul
loopne
dec
dec
mov
out
xor
sbb
rorb
addr16
xchg
iret
sarl
andb
xchg
xchg
stos
icebp
adc
fwait
jge
and
push
dec
pop
dec
test
sbb
cmp
push
out
pushf
add
lret
push
or
fnclex
cmp
pop
aam
jge
fwait
enter
inc
lock
sbb
imul
jb
jp
sub
sub
pop
jmp
scas
cmp
pop
inc
movaps
xchg
pop
adc
ret
push
push
push
in
scas
mov
cmpsl
dec
dec
sbb
and
loop
push
ljmp
add
nop
add
adcb
jnp
stos
or
leave
xchg
add
test
bswap
adc
sti
push
fimull
shll
rolb
in
ss
outsb
inc
adc
lods
fsts
stc
inc
or
sbb
mov
aas
pop
mov
fdivr
in
sub
stos
lds
fiaddl
xor
sbb
ss
pusha
push
pop
pop
xlat
sarl
sbb
repnz
shll
repz
fsubrl
or
jnp
out
xchg
mov
test
push
outsb
jno
fnstsw
gs
movsb
sub
sarb
inc
out
das
mov
xor
sbbl
pop
mov
xlat
cmp
mov
cmp
out
pop
sbb
pop
loope
adc
xor
cmp
jb
push
popa
pop
data16
adc
fsubl
sbb
imul
loop
icebp
out
int3
jg
stos
lds
adcl
call
xor
jo
and
mov
in
sub
xlat
sbb
adc
test
in
loope
push
clc
add
or
xchg
inc
mov
inc
fisttpl
sub
repz
je
test
inc
jb
push
movsl
ret
push
adc
adc
inc
ljmp
imul
cmp
lret
xchg
shrl
out
mov
std
fstpl
or
rcrl
jp
fadd
sbb
fdivrs
lret
pop
xchg
add
lods
sbb
jns
addr16
lods
ja
xor
lods
sub
xchg
loop
pop
jns
das
psubsb
mov
dec
ljmp
in
mov
sahf
inc
lods
into
test
es
cmp
cli
incb
inc
mov
cmp
ret
es
xlat
adc
daa
adc
cmc
sbb
pop
cmp
fwait
pusha
cmp
fstpl
push
xor
xor
push
mov
clc
sar
std
mov
lret
dec
fnsave
int3
adc
mulb
sbb
push
out
xor
or
aas
shrl
lock
xchg
and
orl
fldenv
or
mov
cwtl
adc
cmp
sbb
ficoms
push
incl
adcl
sbb
cmp
push
aas
call
pop
pop
jmp
and
shlb
sbb
sbb
out
pusha
pop
add
call
cmp
cmp
in
into
outsb
jg
int3
cltd
mov
pop
or
xchg
sub
sbb
call
aas
add
xor
mov
or
cmp
cmp
lahf
mov
int
xorb
jmp
cmp
jae
out
jmp
sub
into
ret
mov
jnp
in
dec
xchg
cmp
dec
or
push
dec
lret
mov
sbb
cld
and
in
sub
lcall
test
sub
push
cld
into
xor
jne
dec
mov
lcall
and
out
cmp
add
dec
jo
fstl
mov
mov
xor
mov
loop
push
stos
ficomps
icebp
pop
sarl
xor
cmpsl
mov
jl
testl
movsl
incb
mov
int3
scas
enter
iret
fnsave
mov
movl
jmp
mov
jle
pop
lds
out
jae
dec
fnstcw
or
dec
test
shlb
andb
aaa
lahf
out
lock
ret
sahf
stos
stos
jmp
mov
repz
popf
scas
mov
fadd
fiaddl
xchg
jae
aas
shll
mov
push
mov
repnz
jmp
movsb
adcb
pop
outsb
and
imull
outsl
cmp
mov
aaa
dec
jno
jp
dec
fsub
insl
aaa
mov
gs
inc
pop
jecxz
rcll
imul
dec
xchg
xchg
xor
inc
pop
lea
push
push
cmp
push
push
ret
mov
fsts
pop
push
popa
mov
movb
add
jo
testb
inc
push
mov
cmp
popa
shrb
movsb
cmp
jns
pop
lods
insb
and
mov
adc
cmp
xlat
inc
inc
andl
jmp
sub
mov
test
dec
push
xlat
lret
cmp
int3
push
adc
mov
or
or
inc
adc
add
imul
cmpsl
xchg
lock
pop
cmpsl
jnp,pt
repz
fists
addl
dec
pmulhuw
divl
aad
les
popf
scas
in
lahf
popa
ss
sarb
lods
jns
lds
push
add
mov
ss
loope
dec
or
fmul
sbb
mov
xor
lret
es
jl
loop
insl
adc
mov
xor
ss
bound
sti
jno
pushf
shll
scas
movl
sub
adc
sub
mov
mov
adc
xchg
inc
sbb
push
gs
or
cmp
pop
in
mov
sub
negb
jno
je
xchg
jno
mov
aas
xchg
ret
scas
lods
rcl
pop
inc
mov
mov
call
sub
pop
loopne
or
xchg
std
mov
push
bnd
lahf
xor
mov
sub
xchg
xor
push
add
mov
lret
inc
pop
xor
fs
push
arpl
xor
ds
sbb
mov
xchg
sub
xor
scas
rorl
rclb
sub
jp
cmp
imulb
and
inc
jge
bound
lret
dec
popf
repz
mov
test
jge
or
pop
inc
outsb
push
add
xchg
sub
inc
test
xor
lret
inc
shrl
popa
or
or
xor
idiv
jo
mov
dec
xchg
pop
sub
adc
xchg
test
sti
subl
pop
jl
call
or
out
enter
cmpl
mov
fisttpll
push
pop
inc
and
inc
mov
test
and
push
mov
push
test
adc
test
ljmp
imul
mov
repz
xor
adc
imulb
lcall
jmp
arpl
cwtl
cli
xor
sub
ja
sbb
or
pushf
fisubs
push
pop
test
cli
lahf
insb
or
sbb
test
dec
sub
dec
pop
pop
ss
mov
cvtps2pi
dec
xor
data16
adc
ljmp
fst
xchg
lret
int
fiadds
ret
push
cmp
fwait
jge
jecxz
rcrb
inc
test
cmp
lcall
mov
sub
mov
test
in
pop
les
fstpl
cvtps2pd
adc
sbb
push
cmp
dec
cmpsl
pop
push
aad
rcr
aam
aad
or
aam
xor
dec
adc
cwtl
sub
sub
push
mov
jmp
push
rcl
xchg
pop
test
loop
jp
mov
sbb
in
mov
sbbb
mov
pop
ret
adc
add
arpl
fmulp
insl
pop
sbb
push
pop
ja
xor
aam
insb
sti
clc
imul
movsl
cwtl
fmul
dec
pop
std
in
and
int3
xor
dec
dec
imul
push
sbb
fsub
push
lods
dec
scas
sbb
cmp
movsl
insl
out
lret
xchg
mov
adc
xchg
add
jg
mov
in
xor
les
mov
or
into
sbb
test
xchg
movsl
mov
in
movsb
cmp
sbbb
cmp
ret
fs
addr16
mov
pusha
mov
jns
pop
lret
das
inc
jne
jmp
push
fs
jbe
xchg
and
sub
jne
dec
pop
filds
dec
push
cmc
sub
add
sbb
andl
xorl
sbb
mov
mov
or
cli
loopne
cmp
cmc
leave
mov
scas
or
hlt
enter
es
mov
fisttpll
jne
push
dec
or
pop
add
push
out
cltd
int
cld
ret
xor
xchg
loop
xor
test
scas
outsl
repz
movsb
mov
sub
push
mov
aaa
mov
jb
mov
lret
fsubrs
cmpsb
fldt
sbb
lea
sub
inc
lea
aam
push
iret
sub
stos
js
das
mov
dec
sub
lock
neg
shrb
je
and
shll
test
mov
adc
int3
js
xchg
aas
lock
adc
jno
dec
mov
aas
lret
push
arpl
dec
push
xor
lahf
arpl
cmp
sbb
iret
add
out
mov
nop
ljmp
rcrb
adc
and
push
dec
jmp
or
and
repz
enter
cld
sub
jb
bound
aam
popf
sub
inc
cli
mov
jb
push
shrb
push
nop
adc
adc
inc
sub
stos
inc
pop
out
mov
xor
ljmp
or
adc
pushf
adc
inc
ja
add
xchg
dec
and
test
mov
test
shrb
int3
dec
sub
call
or
fidivl
lock
cmp
cli
imul
les
cld
lods
repz
inc
push
in
adc
xchg
outsb
rorl
iret
data16
data16
out
jbe
movsl
add
ret
lcall
jmp
stos
das
test
mov
inc
mov
push
and
pop
adc
sub
inc
repnz
jb
stos
xor
mov
cmp
pop
out
push
in
ljmp
jmp
mov
out
lcall
pop
icebp
ret
mov
mov
cmp
mov
mul
cs
mov
enter
or
js
mov
incb
push
add
imul
and
add
sub
test
mov
or
and
xchg
mov
cmp
adc
lahf
repz
xchg
ror
jnp
in
dec
mov
popa
test
test
or
fiaddl
mov
sbb
fwait
inc
xchg
out
rcrb
mov
pop
push
je
mov
jns
cmp
inc
xor
xchg
wbinvd
xlat
cmp
pop
dec
mov
jns
aaa
not
adc
jns
jne
push
lock
pop
and
fisubl
cmpsb
mov
mov
lock
stos
push
ja
lcall
cmp
in
inc
add
cwtl
mov
and
popf
sbb
int
roll
and
sub
mov
or
flds
inc
xchg
sub
sub
mov
into
add
call
ss
dec
stos
out
pop
call
sbb
pop
call
pop
mov
jns
cmc
aad
rorb
push
in
popf
outsb
mov
cmp
leave
push
push
loop
or
addr16
in
jl
es
aaa
outsb
popa
lea
push
out
sbb
mov
daa
push
test
add
imul
loopne
enter
inc
and
xor
pop
sbb
adc
enter
jb
inc
and
dec
and
les
lret
stos
loop
imul
outsb
les
jae
mov
adc
ja
sub
add
inc
mov
sahf
test
call
ret
into
mov
mov
pop
pop
adc
push
stc
in
mov
icebp
sbb
icebp
sbb
ss
pop
jp
mov
push
das
pop
aaa
cmc
sbbb
jp
push
mov
aas
pop
pop
ljmp
jle
lret
push
push
or
mov
stos
test
cmc
mov
xlat
cltd
movl
jg
mov
sbb
push
in
loope
cmp
mov
add
in
jb
cmp
inc
or
adc
pop
pop
loopne
mov
mov
ja
rcrb
or
inc
pop
mov
sti
icebp
sarl
jge
sub
mov
repnz
push
fnstsw
xor
mov
ss
insl
pushf
or
inc
shlb
adc
sub
mov
dec
cmp
cmpsb
cli
pop
and
mov
rorl
sbb
fs
add
mov
rcrb
mov
and
add
dec
pop
jmp
popf
xchg
orb
in
xor
cmp
xor
and
cmp
testl
and
out
jae
sti
jne
call
jge
jmp
or
xchg
les
add
or
shlb
test
dec
fs
outsb
or
or
push
cmp
lods
shll
push
dec
es
mov
outsl
cmp
sub
int
xor
cmpb
cld
ds
sub
xchg
lock
fs
sub
dec
inc
mov
inc
and
sbb
int
loope
mov
lret
lods
jl
aaa
imul
sub
pop
jae
xchg
insl
xchg
int
lahf
add
shr
out
or
jl
and
sub
pop
mov
mov
jp
dec
xor
pop
out
aas
pop
and
rorl
add
mov
lods
je
ss
jno
cmp
cwtl
fcmovnb
out
fs
flds
adc
xor
loope
jge
push
inc
fisubrs
sbb
cmpsb
aad
sbb
push
sbb
loopne
mov
cltd
fstps
xor
orb
hlt
jbe
out
add
cmp
jle
ljmp
shll
add
bound
mov
adc
rcll
arpl
lds
push
push
mov
addb
sub
pop
test
xchg
das
lea
push
frstor
pop
lahf
mov
leave
out
mov
add
imul
push
dec
adc
imul
jno
loopne
fucom
pop
fs
lods
es
push
pushf
roll
fnstenv
addr16
sbb
xor
incb
and
xor
mov
lcall
mov
mov
mov
pop
popa
mov
out
sub
fisttpll
sub
das
mov
or
push
push
jne
pusha
dec
cmp
stos
sub
mov
je
neg
mov
inc
xor
imul
vandps
mov
mov
std
repnz
hlt
scas
or
lret
lret
inc
loopne
adcl
push
push
xchg
xor
jg
fsts
lahf
data16
mov
adc
push
jecxz
in
jmp
xchg
dec
and
outsl
in
insb
mov
stos
mov
sar
inc
stos
jo
ret
push
inc
sahf
xchg
adc
push
dec
rorl
dec
sbbb
int3
mov
insb
push
outsl
jmp
push
jg
arpl
mov
cmp
jecxz
ret
add
push
fstps
cmp
out
mov
int
and
add
xor
popa
es
call
sahf
repnz
adc
or
pop
outsl
es
fidivs
add
les
and
and
aad
int
fbld
loop
xchg
lods
push
imul
or
es
lcall
sub
sub
inc
and
movsl
mov
add
push
cmp
dec
inc
mov
ja
out
jo
push
push
push
rcrl
jmp
mov
xor
xor
call
stc
sub
aaa
xchg
dec
dec
negl
ficoml
mov
popf
aad
stc
pop
fidivrl
jge
xchg
jne
inc
inc
orl
dec
hlt
mov
xor
fcmovnu
dec
or
mov
es
pop
mov
rolb
jge
sub
jb
iret
divb
loopne
and
cmc
cmpl
icebp
add
sub
enter
packsswb
mov
cltd
push
pop
or
test
or
faddl
xchg
and
adc
push
stos
and
movd
out
mov
push
cltd
adc
xor
cmp
cli
stc
push
fisttpl
pop
xchg
sub
push
mov
dec
sbb
and
lods
mov
push
pop
mov
pop
jo
adc
inc
jmp
add
fcoml
sti
rolb
adc
mov
sbb
lods
or
out
inc
mov
das
and
scas
add
insb
icebp
push
arpl
mov
fisubrs
jns
cs
pop
push
pop
mov
pop
movb
mov
push
scas
enter
mov
add
sbb
xor
sub
mov
into
xorps
sbb
push
rcl
jle,pt
orl
sbb
mov
and
xor
movsb
mov
and
addb
aad
inc
adcb
adc
clc
std
scas
xchg
insl
cli
mov
daa
lea
dec
push
pop
aaa
mov
lods
cmp
dec
ja
lds
stc
inc
and
cmp
add
jmp
fmuls
pop
subb
das
clc
das
out
lahf
sub
aad
jno
fstpl
jbe
and
xchg
mov
int
cmp
call
cld
sbb
lock
fsubrs
stos
jns
pop
rclb
sub
push
sbb
lret
push
stos
repz
cld
jl
mov
hlt
sti
ja
ret
cwtl
adc
ror
cmp
das
dec
push
loop
lret
mov
sahf
pop
cmc
jecxz
fistps
pusha
int3
xchg
pushf
les
ds
out
pop
or
dec
sbb
ja
scas
fildl
cwtl
lahf
mov
je
mov
jl
xchg
dec
movsb
cmc
mov
inc
mov
ja
mov
scas
pop
mov
aas
mov
pop
nop
dec
into
scas
push
xor
in
jge
pop
push
mov
ret
pop
adc
mov
pop
jp
xor
inc
push
jp
rorl
add
jge
and
fstpt
mov
xor
xor
sbb
mov
adc
fiaddl
xchg
sub
frstor
jae
sar
push
jmp
mov
sbb
push
into
sub
ljmp
inc
add
aam
xchg
or
sbb
and
inc
testl
arpl
icebp
lods
mov
sti
inc
pop
sbb
fnstsw
fsubs
clc
fdivl
bound
pop
sbb
cld
les
ds
neg
mov
lret
or
dec
enter
xchg
add
sbb
es
sub
outsb
fcomip
mov
insl
cmpsl
pop
mov
sbb
loop
sub
jne
or
or
outsb
or
or
xchg
cli
push
push
jmp
dec
int3
arpl
and
push
dec
rcr
mov
outsb
addr16
pop
pop
and
das
arpl
xchg
pop
int
dec
xor
add
nop
xor
lods
dec
movsb
stos
jmp
mov
lock
or
inc
popf
push
pop
xor
rcrb
dec
jne
std
cs
cmp
mov
and
cmp
enterw
mov
mov
mov
addr16
jge
ds
arpl
out
jmp
jns
pop
jle
jl
fldt
cmp
ljmp
xchg
lods
and
test
cmpsl
mov
jo
outsb
add
frstor
inc
mov
fstps
scas
movsb
rcll
dec
push
jmp
mov
xchg
out
in
fucomp
jmp
movsb
push
cmpsl
and
aas
bound
mov
cwtl
ljmp
push
lret
faddl
outsb
sub
sti
push
out
loopne
mov
lods
ja
out
xchg
sub
xchg
push
ficoml
cmpl
std
push
jne
inc
mov
test
xor
or
add
dec
cmp
notb
cltd
push
mov
test
jo
pop
push
int3
mov
sub
push
jae
in
sub
add
sbb
pop
sub
dec
push
incl
testl
cmc
lods
scas
out
sbbl
pop
push
dec
shrb
mull
sahf
mov
out
dec
adc
push
push
mov
or
ret
jmp
inc
mov
sub
mov
pop
jns
ret
push
loopne
add
imul
push
mov
jl
jno
inc
shll
jmp
mov
mov
insb
idivl
cmpsb
pushf
and
and
hlt
int
out
adc
dec
fdivl
mov
dec
pop
mov
mov
or
test
nop
push
mov
jl
cli
cmpl
adc
dec
sub
xor
insb
sarl
adc
ljmp
mov
sbb
inc
pusha
fdivrs
loop
aas
fnstcw
ja
pop
popf
in
pop
sbb
push
les
push
push
enterw
xor
mov
divl
in
push
lock
mov
add
repnz
mov
scas
aam
mov
add
lds
xchg
cmp
jno
or
mov
inc
mov
and
pop
push
pavgw
jecxz
cmpsb
pop
mov
lret
adc
sub
or
pop
sarb
and
testl
into
out
add
lods
mov
pop
dec
mov
xlat
dec
sub
adc
in
out
mov
sbb
addb
add
xchg
lcall
sarb
adc
dec
scas
mov
sub
enter
cs
insb
insb
fadds
orb
sbb
or
pop
jle
mov
inc
dec
add
subb
and
mov
or
xchg
mov
or
xor
in
sahf
popa
adc
cmpsb
popa
stos
aaa
insl
loop
xchg
dec
jmp
arpl
adc
xchg
fsubs
scas
push
aad
adc
inc
repz
fimuls
lods
addr16
lock
test
call
mov
aas
int3
add
pusha
shlb
std
fadd
addr16
aad
loop
adc
movsl
mov
push
daa
call
xchg
mov
mov
mov
mov
pop
repnz
mov
gs
and
mov
sbb
adc
pop
and
movsl
adc
mov
pop
push
xchg
sub
push
pop
dec
jns
inc
pop
jnp
push
fsubr
test
mov
out
xchg
mov
mul
lods
push
insb
js
dec
mov
jns
inc
dec
rcll
ret
mov
sahf
cmpsb
mov
popl
pop
ss
insb
popf
shlb
jns
inc
cmp
jno
les
jge
sub
lret
adc
inc
bound
push
aaa
adc
into
aad
stos
mov
out
push
dec
push
aad
aad
sbb
test
mov
mov
gs
mov
jnp
cmp
mov
cs
mov
xchg
mov
cld
aas
xor
adc
fwait
sub
das
pop
aam
or
inc
pop
push
jnp
iret
mov
enter
and
rorl
mov
mov
mov
shlb
add
imul
ret
push
push
sbb
sub
pop
mov
push
dec
lret
inc
mov
aas
cmp
mov
jnp
inc
ret
rorl
out
inc
mov
out
loopne
into
dec
or
sub
insl
push
jle
push
out
jg
ror
cmp
ror
cmpb
leave
mov
cltd
popf
adc
pushf
push
sahf
pop
pop
push
fdivrs
sub
xchg
les
shrl
dec
addr16
loopne
imul
or
or
gs
std
clc
jo
and
leave
cmpsl
xlat
adc
cltd
aad
adc
mov
or
dec
inc
inc
lret
loop
xchg
rcl
inc
jg
dec
outsb
xor
sbb
jbe
gs
sub
jb
nop
imul
int3
push
mov
sub
test
scas
addb
xor
sahf
and
stos
aad
or
icebp
leave
test
in
xor
int3
ret
mov
and
insb
xor
xchg
lea
add
popf
cmpsb
fadd
xor
mov
into
popf
lret
rol
xor
icebp
xchg
sarb
loopne
push
das
sub
mov
lods
fs
gs
adc
jl
scas
or
jle
mov
lret
stos
mov
xchg
dec
jmp
or
fwait
ljmp
adc
icebp
cmp
dec
idiv
leave
add
nop
add
sbb
fs
jb
push
int
loopne
and
fs
cmp
dec
les
daa
inc
insl
adc
rcll
xor
mov
stos
pop
mov
insb
cmpsl
mov
pop
fiadds
lea
cs
or
jmp
mov
pop
dec
add
aam
aas
or
xor
lock
js
outsl
or
push
inc
lea
push
xor
sub
pusha
and
cli
jne
int3
cmp
mov
hlt
mov
adc
scas
lds
lcall
repnz
mov
ret
jno
movsl
mov
das
add
inc
pop
sbb
mov
mov
sub
jmp
fidivl
and
inc
stos
cli
out
rol
dec
les
inc
or
fimull
movsb
inc
aas
dec
add
push
stc
int3
fcoml
lahf
mov
mov
loope
adc
xor
or
outsl
add
mov
or
shl
insb
xchg
inc
sbb
sbb
loop
nop
out
push
aas
iret
pop
paddq
daa
mov
lods
cli
daa
aas
xchg
sbb
repnz
das
pop
adc
mov
push
je
into
mov
inc
movsl
sbb
dec
in
xchg
add
ror
or
cs
pop
xor
xchg
xchg
orb
adcb
fdivp
aad
dec
sbb
dec
hlt
xor
scas
dec
test
dec
pop
add
jne
mov
lock
dec
mov
and
shrl
test
fcoml
cltd
into
and
stc
sbb
cmovne
jmp
mov
jbe
mov
xchg
or
mov
addr16
pushf
mov
test
pop
sub
aas
out
xchg
sbb
adc
ret
and
or
dec
mov
popa
call
dec
lock
scas
std
mov
in
xchg
incb
cmpsl
loop
das
scas
and
adc
xor
cld
cld
adc
mov
jnp
daa
aaa
loopne
sbb
int
push
cmp
push
mov
and
xchg
push
push
bound
sub
mov
std
cmp
lret
jne
shlb
and
mov
loop
pop
movsl
push
ljmp
ret
call
ret
jno
push
jmp
adc
cltd
push
and
rcr
cmp
dec
xchg
bnd
movsl
mov
test
mov
mov
pop
in
sbb
lods
aas
hlt
push
jnp
bound
sbb
jno
dec
xchg
bound
movb
fldenv
outsl
or
inc
test
es
fistps
sahf
dec
out
adc
rorl
sbb
jb
and
into
sub
mov
xchg
lahf
push
add
inc
aam
and
cwtl
jg
dec
aad
xchg
pop
mov
mov
cwtl
mov
inc
cwtl
enter
cmp
es
or
xchg
sub
push
loopne
mov
js
lcall
lcall
sub
int
push
and
pop
pop
in
ret
movsb
jecxz
addb
cli
ret
inc
adc
fsubr
or
pop
mov
or
ljmp
cli
pop
mov
out
fs
dec
mov
movsb
pop
call
fdivrs
xor
lea
scas
popa
das
jbe
imul
andb
cmpsl
out
imul
xor
push
xorb
jg
mov
sbb
cmp
and
or
jmp
mov
push
mov
pop
fisubl
std
jae
xor
sub
sti
lods
inc
dec
cmpsl
jg
repnz
daa
mov
cmp
push
ret
push
into
icebp
dec
dec
push
dec
sub
xchg
push
scas
lods
xor
fadd
mov
frndint
divb
mov
mov
clc
adc
jp
sub
xor
sbb
stos
inc
mov
xor
jae
mov
int3
loope
mov
cmp
in
int3
popa
inc
test
sub
dec
or
sbb
inc
pop
mov
and
jnp
fidivrl
fildll
dec
fwait
notl
es
lahf
ud2
lods
inc
jnp
push
lock
dec
in
sbb
and
fisttps
sbb
xor
cli
jns
xor
insl
jno
clc
cmpsl
push
jecxz
loop
test
popf
loope
stos
and
popa
in
and
in
cli
or
out
das
in
bnd
insb
xchg
xchg
xchg
ret
call
inc
xor
notl
xor
pushf
cwtl
divl
cmp
jle
push
xchg
mov
in
mov
inc
push
inc
scas
aad
or
in
dec
or
push
addb
and
mov
cmpsb
bound
cmp
inc
jmp
into
xchg
mov
jecxz
ret
dec
push
ret
dec
dec
jnp
pop
adc
cmpsl
cli
popf
test
xchg
loopne
leave
mov
aas
enter
push
jae
out
cli
ds
inc
lret
mov
mov
jb
and
push
fs
inc
iret
fisttpl
inc
inc
xchg
sub
sbb
add
sbb
iret
je
daa
jg
and
ret
xor
inc
jno
mov
and
sbb
jae
dec
pop
je
cli
pop
jmp
add
mov
jns
push
xchg
push
lock
call
pop
and
push
cwtl
jle
jno
mov
dec
add
into
int3
lcall
sti
mov
cmpsl
jnp
adc
repz
pop
outsb
mov
push
mov
sub
push
jp
cmp
leave
push
xchg
ds
test
bound
hlt
and
ret
mov
mov
in
push
jmp
cwtl
push
jb
movsl
test
cld
dec
enter
xchg
push
pop
or
mov
and
xchg
adc
insl
push
repnz
sbb
ffreep
mov
or
dec
dec
xchg
lahf
xor
inc
fdivrs
decl
imul
inc
pop
shlb
or
inc
fs
mov
jo
cwtl
stos
inc
and
adc
xor
xchg
add
mov
xchg
dec
push
cmp
notb
inc
xchg
and
insl
mov
shll
mov
test
push
testl
decl
xchg
jns
jle
icebp
mov
das
add
into
add
shlb
sbb
inc
mov
mov
mov
cmpl
xchg
test
fwait
insb
sub
lret
cmp
dec
add
je
adc
xchg
test
xchg
jmp
test
lods
jp
sti
xchg
lods
cmp
shrb
out
cmp
push
adc
mov
bound
adc
adc
xchg
inc
leave
push
clc
mov
stos
dec
cltd
mov
rol
jecxz
mov
xor
pop
popf
lret
dec
sub
sbb
ja
sbb
data16
mov
sub
adc
push
dec
insb
insl
in
addr16
pop
lds
xchg
pop
outsl
call
lods
add
aad
sub
mov
stos
ficoml
xor
cmpb
out
sbb
push
ss
jbe
pop
jnp
add
stos
dec
fsub
mov
push
jbe
insl
xor
aas
mov
push
mov
xchg
mov
int3
loope
insb
mov
adc
das
mov
sub
cmp
cmc
pop
fnstenv
or
xchg
lret
and
xor
sub
pop
mov
pop
jmp
jmp
xchg
fcmovnu
mov
addb
inc
add
dec
xchg
std
cwtl
scas
inc
fisubs
sub
mov
mov
push
cmp
dec
sti
imul
jmp
inc
lahf
call
int3
xchg
push
push
clc
cmp
std
lea
fs
xchg
and
sbb
in
jbe
push
shrb
popf
or
pop
fwait
sbb
adc
dec
cmpsb
daa
call
shr
mov
shr
pop
lods
mov
mov
and
push
divl
hlt
dec
fimull
or
adc
sbb
roll
push
mov
hlt
push
inc
idivl
push
push
and
ljmp
mov
sub
mov
jp
adc
adc
dec
int3
add
dec
inc
iret
xchg
jns
adc
int3
cltd
fst
out
xchg
gs
pop
in
movsl
hlt
pop
sbbl
dec
mov
test
cmp
cmpsl
mov
aam
dec
js
ljmp
sub
es
and
movsb
into
ljmp
xchg
push
movsl
out
push
inc
mov
sti
cmp
popf
mov
cli
pop
out
loopne
out
add
jb
stos
insl
arpl
cmp
mov
or
test
dec
mov
mov
inc
inc
pop
cli
imul
sbb
loop
cmp
icebp
imul
push
aaa
lcall
sarl
hlt
inc
dec
outsb
inc
push
xor
inc
or
scas
lods
add
pop
sti
fmuls
add
inc
inc
call
xorl
push
fidivl
mov
stos
fwait
inc
xorl
push
bound
sub
inc
inc
nop
ds
hlt
test
stos
insl
pop
jnp
lock
sub
lods
ret
xchg
test
std
mov
cmp
pop
push
push
and
into
scas
rcr
add
sbb
pop
les
xchg
cmpb
imul
push
push
lock
test
dec
ja
xchg
cmp
mov
clc
sub
shll
or
fwait
mov
sbb
dec
push
test
pushf
sub
mov
aam
pop
adc
cmp
inc
mov
add
mov
sbb
push
iret
fldcw
jbe
xchg
xor
push
lods
xor
loop
jns
push
mov
push
dec
cmp
fistps
aad
jnp
sbb
cltd
jecxz
int
insl
jne
jo
inc
mov
rcll
fnstsw
xchg
aad
fwait
mov
popf
jmp
loope
cld
sub
fsubr
in
mov
outsb
pusha
daa
mov
push
mov
sahf
lcall
sub
push
nop
mov
aam
rorb
xchg
outsl
dec
aaa
and
jmp
cmp
jae
div
push
push
popf
pop
adc
sbb
jmp
jae
lea
mov
push
fcmovnu
out
mov
dec
lock
xor
lea
test
add
stos
stos
outsl
jae
push
cmp
adc
mov
push
and
lods
popa
inc
in
lahf
test
mov
push
pop
jecxz
outsl
ret
xchg
testl
xchg
shll
sarb
pcmpgtb
nop
je
push
mov
cmp
mov
jge
inc
xor
jne
enter
and
jne
popa
cmpsb
xor
adc
dec
jb
pop
dec
imul
enter
lods
and
cmp
in
mov
cmpsl
ss
adc
shrl
pusha
sub
cmp
loope
in
leave
cli
fldenv
mov
or
xchg
add
aaa
pop
dec
or
push
xor
mov
out
push
add
dec
xchg
cmp
nop
mov
imul
mov
jg
repnz
lahf
arpl
lds
inc
cwtl
repz
xor
mov
ret
lock
xchg
mov
scas
bound
add
cmc
pop
cld
bound
insb
movaps
std
jge
fisttps
xchg
add
add
xchg
mov
push
js
sub
dec
xchg
out
cli
cmc
push
shlb
pusha
lret
xchg
xchg
jb
dec
cmp
repnz
mov
sub
push
jns
int
fisubl
add
jnp
adc
or
loop
loopne
in
sar
inc
es
gs
mov
repz
ret
mov
mov
jge
or
adc
inc
test
mov
pop
bound
aad
fsubrl
nop
addr16
inc
je
mov
xchg
daa
out
stos
mov
cmp
xor
faddl
cmp
in
fldt
cmp
cwtl
iret
mov
mov
mov
push
lds
inc
stos
pop
mov
mov
xchg
test
mov
or
xchg
test
xor
setbe
fwait
sub
loopne
xor
mov
push
and
pop
xchg
xchg
ss
mov
fisubrs
orb
ret
mov
push
xchg
xchg
cmp
in
loope
adc
imul
push
out
shl
mov
or
pop
cmpsb
lea
xor
scas
in
sub
mov
enter
mov
and
lahf
inc
cmp
inc
test
jge
out
insl
adc
mov
push
rorl
insl
hlt
nop
int
and
and
test
pushf
xor
push
cmpl
jno
in
xchg
gs
insl
rclb
mov
push
repz
mov
insl
ret
sub
dec
sti
add
pop
jge
xor
mov
cpuid
adcb
mov
pusha
popf
add
nop
push
cmpsl
imul
inc
pop
ficompl
fs
mov
cmp
xor
stc
pop
mov
lock
inc
and
rorb
or
jo
cmc
mov
outsb
pop
add
add
stos
icebp
inc
xchg
dec
mov
insl
and
xor
adc
outsb
xchg
ja
pop
inc
jno
push
xchg
fldt
or
push
push
test
jb
dec
fs
xchg
or
imul
cmp
clc
jns
lcall
enter
adc
mov
jns
inc
and
in
fsts
xchg
pushf
pusha
or
lock
pushf
pop
pop
mov
sahf
repnz
push
xor
mov
pop
lret
add
jl
and
dec
repz
mov
inc
out
mov
inc
mov
and
das
lock
sub
xchg
test
test
lods
insl
push
out
dec
mov
push
stc
and
xlat
push
data16
scas
adc
dec
push
andb
mov
lahf
cmp
lods
cmp
mov
and
psubw
je
mov
loop
pusha
cs
mov
outsb
pop
lret
or
outsl
sbb
add
out
add
jno
xchg
xchg
incl
loop
mov
inc
inc
shrl
into
add
mov
ds
lahf
sub
mov
pushl
or
dec
cmp
or
add
mov
pop
addr16
fstpl
int
pop
xor
inc
rolb
mov
pop
adc
mov
aaa
inc
mov
dec
sbb
icebp
or
cmp
push
sbb
or
push
fdivs
or
dec
and
lahf
xchg
es
mov
sub
mov
mov
fs
icebp
fcmovnbe
mov
xor
sub
or
dec
inc
inc
rcrl
sbb
xlat
stc
mov
adc
ret
mov
mov
mov
nop
sbb
mov
orb
mov
adc
jo
cmp
lcall
mov
sub
cld
jecxz
cmpsb
sub
dec
push
adc
sbb
loopne
push
fcomp
jle
cmp
sub
cmp
cmp
test
insl
in
aad
push
popl
cmp
bound
cmp
push
negl
fisttps
lret
push
dec
push
test
dec
lret
mov
push
mov
xor
mov
cltd
inc
lret
cld
mov
mov
push
cmpsl
mov
clc
xor
sub
mov
mov
add
call
cmp
xlat
insl
clc
jle
testb
inc
aas
xlat
xchg
push
jle
pop
mul
push
test
in
fcompl
bound
test
fcompl
mov
in
jbe
lret
arpl
ds
ds
dec
in
stc
daa
xor
xchg
hlt
xor
push
lret
xor
out
adc
push
pop
lcall
pushf
out
sarb
pusha
aad
call
mov
cmp
pop
ljmp
jae
mov
les
jmp
jp
gs
add
jb
mov
call
jle
addr16
ret
sbb
int3
roll
lods
out
insb
sub
and
dec
bound
xchg
fdivp
out
jne
and
and
jno
xchg
dec
adc
push
mov
pop
iret
push
jge
js
js
xor
mov
aad
cld
cs
adc
mov
pushf
ja
inc
pop
jns
into
mov
or
or
out
mull
movsl
xor
loopne
and
jno
outsb
out
adc
cli
sub
adc
pop
adc
cmp
insb
push
leave
outsl
cltd
add
in
xchg
pop
sub
addr16
push
mov
outsb
mov
mov
into
or
cwtl
cmp
or
push
mov
pop
mov
fwait
idivb
cmp
push
jp
iret
lds
cwtl
inc
rcrl
out
bound
add
bound
cmp
xchg
inc
fsubrl
mov
pop
fs
and
les
push
movsl
in
dec
out
repz
sbb
fstpl
mov
fs
popa
dec
sub
sub
jae
std
stos
test
xchg
stc
pop
xchg
stc
std
scas
es
imul
cmpsb
pop
push
pop
lods
mov
dec
adc
and
imul
sub
test
cs
divl
sub
ret
ret
ror
jae
daa
call
mov
in
or
ret
jmp
xchg
push
test
aas
fstpl
xchg
mov
imul
mov
repnz
and
jcxz
lahf
cmp
cli
bound
xorl
jge
xor
push
push
call
in
and
jns
push
cmp
fwait
mov
jmp
loop
ficomps
push
outsl
or
cmp
jg
mov
inc
dec
es
je
jo
adc
testb
lods
dec
leave
insl
in
addr16
int3
negb
push
and
cmp
mov
add
ret
inc
pop
mov
mov
inc
adc
pop
and
mov
sahf
fdivl
sarl
jnp
push
cmpsl
sub
cld
cmp
pop
xorl
loopne
pop
push
mov
inc
outsb
lret
jl
in
ds
pushf
into
cli
and
push
or
out
fistpll
cmpsb
push
mov
push
or
ret
push
push
mov
addb
xchg
fstpt
loopne
in
add
mov
movb
mov
mov
sbb
mov
mov
fs
mov
in
mov
leave
bnd
aaa
mov
adc
jecxz
and
xchg
repz
les
xchg
dec
push
mov
aaa
movb
mov
stos
je
iret
push
jle
push
out
jae
aam
fidivl
xor
jne
repz
jg
shll
dec
or
pop
loopne
jmp
sbb
ss
sarl
lds
stc
xchg
jge
adc
cltd
mov
das
cmp
xorb
out
push
xlat
shl
int3
mov
rorb
mov
xor
push
jmp
cli
jo
popa
mov
pushf
jbe
lods
sub
out
hlt
popa
jge
fcom
jp
mov
adc
adcl
cmpsl
mov
add
sbb
test
test
jb
sub
sbb
adc
adc
cmpb
xchg
inc
inc
push
scas
jno
test
jmp
insb
lods
or
jge
sbb
push
hlt
daa
pop
lahf
push
adc
int
pop
int
push
les
in
or
ret
pop
jecxz
pop
ljmp
xchg
xor
push
xor
adc
jae
clc
jge
roll
sbb
and
ja
add
pop
fldenv
cltd
fs
cmp
ret
mov
xchg
in
xor
add
pop
fisttpll
mov
in
sub
xchg
pop
roll
sub
test
lock
cmp
sub
fistpll
jmp
cwtl
push
jmp
addl
mov
fstl
imul
lcall
xchg
mov
jmp
pusha
cmp
cmpb
lea
test
xor
mov
sbb
fcmovnb
std
sbbl
iret
mov
into
aam
xor
mov
insb
mov
inc
cmp
and
mov
sub
outsl
jno
leave
xor
out
adc
outsb
push
mov
or
out
cmpsb
adc
mov
cld
jns
pusha
in
fadd
xchg
shlb
out
mov
mov
shl
into
testl
cmp
xchg
out
and
pop
adc
hlt
and
sbb
jns
add
dec
into
sub
jmp
fcmovbe
jno
lock
fcomps
in
push
lret
inc
or
pop
dec
jmp
test
cmp
mov
fmul
sbb
and
sbb
fwait
mov
or
cmp
mov
addr16
cmpb
dec
aam
nop
sbb
out
jo
push
xchg
test
dec
ret
adc
adc
aas
std
mov
dec
pusha
pop
or
stos
rolb
shlb
cmpsl
insl
inc
sub
or
push
daa
inc
jl
icebp
pop
xchg
lods
dec
pop
add
add
xor
rclb
cmp
jbe
and
or
popf
nop
enter
lods
cld
ss
iret
mov
xchg
fstpl
adcb
mov
int3
insl
adc
call
push
popf
pop
xchg
mov
push
or
push
ljmp
push
push
std
rcrl
lea
lods
jbe
or
mov
loop
push
adc
fs
insl
jae
lds
repnz
mov
fcmovnb
mov
fimull
fs
shll
mov
mov
fbld
xchg
pop
pop
or
inc
dec
jge
popf
std
rcrb
mov
push
pop
xor
ds
outsb
in
hlt
adcb
sti
pop
push
xchg
ss
mov
loop
lods
aad
inc
mov
out
push
hlt
push
mov
das
loop
and
mov
sub
and
ret
lock
cmpsl
insl
mov
and
js
inc
sub
adc
nop
inc
dec
daa
or
fsubrl
xlat
pusha
dec
mov
push
fs
jmp
sub
subb
mov
test
sub
dec
sub
xchg
hlt
add
iret
jns
lcall
cmp
jae
xor
sub
neg
xchg
stos
test
hlt
sub
xor
adc
cmp
inc
leave
cs
sbbb
hlt
jbe
cld
nop
pushf
test
sahf
jg
xchg
test
lret
cmpsl
xor
or
jb
pusha
sub
mov
mov
mov
add
leave
xor
pop
pop
call
ds
lcall
push
lock
dec
xchg
lret
mov
mov
or
jnp
mov
mov
inc
sub
fidivrs
mov
iret
mov
rcl
xchg
mov
insb
mov
pop
and
cmpsb
popa
mov
cmp
in
inc
inc
xchg
jmp
shrb
sti
inc
les
jb
xchg
add
mov
push
dec
fwait
push
jge
push
mov
pop
leave
sub
ret
dec
xchg
mov
test
fsubrl
fstps
fsubs
mov
sub
outsb
movsl
fldl
and
shlb
mov
xchg
or
dec
rclb
lea
jl
dec
pop
lods
xor
jmp
out
jp
mov
mov
lret
jl
push
cmp
xchg
cmc
sti
mov
inc
es
jge
xchg
in
outsl
xchg
ds
add
rcr
loop
in
mov
jle
loopne
jnp
daa
mov
cmp
push
sub
jae
imul
mov
js
lea
sahf
or
mov
xor
pop
mov
roll
cmp
arpl
mov
dec
jne
mov
in
sti
outsl
test
and
cmpsb
mov
push
ss
mov
add
aaa
push
clc
pop
sub
mov
outsl
xchg
push
push
pop
rorb
mov
mov
loop
jecxz
in
and
xor
jmp
pop
xchg
jl
pop
inc
shrl
jmp
mov
js
sbb
add
addr16
dec
outsb
adc
arpl
pop
aaa
mov
xchg
add
aas
in
ret
xchg
jmp
cmp
mov
lret
inc
jb
dec
sbb
push
jmp
dec
jmp
sub
mov
mov
xor
ja
mov
call
nop
push
int3
into
mov
mov
cmp
pushf
leave
adc
jo
stos
sub
lea
sbb
fdivrl
mov
xor
dec
push
cmp
mov
int3
mov
rcrb
repnz
sbb
out
mov
lock
lock
js
jmp
push
mov
adc
pop
push
js
out
in
adc
and
pop
mov
aam
pop
in
shll
pop
and
sbbl
enter
inc
mov
test
xchg
in
mov
add
out
andb
adc
imul
int
ljmp
fs
adc
lods
fcmovb
or
je
loopne
sbb
xor
into
cmp
mov
inc
shlb
xor
jle
lret
mov
cmp
dec
clc
imul
addr16
testl
in
lahf
lret
inc
popa
and
test
andb
push
popf
mov
lods
jecxz
cmp
xor
adc
or
adc
aas
lods
add
pop
pop
mov
jb
xchg
pushf
pop
mov
ss
filds
xlat
sbb
jo
add
jbe
pop
pop
dec
dec
out
mov
and
and
ss
test
push
lods
or
mov
jl
xor
lea
and
imul
dec
fwait
xchg
jb
int
sbb
cltd
lret
push
pop
pop
mov
xor
hlt
rcrb
fiadds
fldcw
jae
loope
mov
and
ss
pusha
jp
fisubl
movsl
std
and
mov
rorb
cmp
sbb
sbb
add
sbb
mov
pop
xchg
in
aam
pop
or
das
push
dec
push
mov
push
pop
push
repnz
shll
xor
xchg
pop
or
pop
testb
or
repz
and
jle
imul
push
inc
shlb
cmp
dec
lahf
daa
push
orb
icebp
sub
jmp
mov
pop
ss
ds
jne
test
push
js
test
int3
cmpsw
sbb
mov
inc
and
popf
mov
jp
lds
negl
pop
ret
mov
sbb
cmp
shrl
into
lods
arpl
pop
imul
fisubrl
xchg
cli
cmp
and
je
xor
sbb
sub
cmpsb
cmpsb
jnp
jno
arpl
lds
mov
jnp
test
les
xor
test
jno
dec
shll
aas
arpl
mov
das
out
mov
int
pop
xchg
xchg
popf
rcr
xor
push
dec
addr16
or
dec
std
gs
sub
push
jnp
xor
rcrl
test
fisttps
add
cmp
push
adc
daa
lds
loop
in
push
imul
inc
push
add
cmpl
ret
addl
repnz
out
xchg
and
rclb
das
sbb
mov
pushf
add
pop
std
imul
roll
pusha
fists
mov
movsl
cli
setnp
adc
mov
adc
lea
xchg
push
mov
sti
or
push
xor
outsl
popf
stos
outsl
ficomps
pop
mov
fwait
mov
out
std
mov
aam
cmp
xchg
dec
add
test
fisubrs
xor
adc
sub
repnz
sub
cli
mov
outsl
push
jle
pop
sub
xorb
mov
mov
stos
addl
push
xchg
and
jns
mov
inc
sub
mov
in
pop
fbld
faddl
lahf
leave
sub
pop
stc
xor
sbb
cld
mov
in
cmp
dec
xor
adc
aaa
test
fdivrl
inc
push
xor
fmulp
dec
adc
jb
mov
pushf
les
test
or
loop
adc
out
hlt
shll
sbb
xchg
movsb
cli
out
pop
bnd
and
push
pop
xor
mov
out
cmc
popl
adc
aad
ss
cs
xor
or
clc
push
and
hlt
xchg
mov
pop
mov
push
sbb
and
dec
sahf
enter
outsl
mov
cmp
pop
inc
inc
mov
andb
fistps
les
sti
cltd
mov
add
pop
popa
ja
sbb
mov
or
mov
jae
roll
nop
roll
shrb
sahf
jl
test
aas
mov
cmp
stos
push
lret
inc
push
cmc
scas
sub
shlb
push
aad
jns
stos
movsl
cmp
add
popl
loop
rclb
out
psubw
mov
pop
mov
fdivl
nopl
xor
jmp
mov
aaa
in
add
cmp
fstps
mov
out
jne
sbb
jge
dec
adc
das
and
loop
lret
mov
cs
inc
lcall
lock
out
cmp
lods
mov
cmc
and
mov
pop
test
pusha
hlt
daa
xor
into
negl
ss
sarl
rclb
xor
or
sbb
cmp
lahf
bound
dec
pop
pop
add
out
pop
or
cmp
pusha
mov
push
and
in
icebp
lcall
popa
push
iret
testb
push
jns
insl
loope
sub
outsl
testl
jns
mov
jp
mov
mov
push
mov
jo
movsl
pop
adc
jp
rcrl
mov
aaa
mov
xlat
repnz
call
lods
xorl
pop
push
inc
loop
mov
movsb
xlat
repnz
std
and
sbb
ss
push
sbb
inc
roll
cli
in
jg
outsb
xor
movl
lods
das
lds
xor
fsubr
rcrb
insb
mov
sbb
pop
into
out
sahf
pusha
and
in
adc
and
sahf
out
mov
icebp
jb
and
add
mov
adc
cmp
loopne
enter
inc
in
pop
adc
adc
hlt
push
rorl
push
loope
add
test
dec
cmp
lret
loopne
mov
jmp
mov
inc
in
inc
stos
in
popf
pop
mov
ds
jl
jle
sbbb
into
jl
and
lahf
push
pop
ret
test
pushf
or
push
sub
js
pushf
imull
fsubl
imul
push
pop
lcall
fnstcw
adc
inc
aas
lock
dec
jno
fsts
lret
mov
pop
aaa
mov
xchg
xchg
mulb
mov
idivb
imul
xchg
sub
dec
mov
gs
or
pusha
jne
mull
andb
shrl
dec
sbb
xor
pop
jne
out
and
insl
add
push
out
jns
push
inc
jb
cli
imul
cmp
movsl
ds
movsb
shlb
ja
pop
jbe
test
popa
out
in
adc
add
sbb
jae
testl
or
pop
movl
mov
add
faddp
jmp
mov
popa
sbb
xlat
sub
cmp
mov
xor
dec
out
jg
pop
jle
sbb
fadds
mov
aas
xchg
xor
jp
daa
dec
xchg
arpl
cmp
aam
int
cmc
or
mov
addr16
rolb
inc
mov
inc
jle
inc
rorb
call
adc
xor
pop
mov
gs
xchg
addb
hlt
movb
pop
add
roll
les
ficoml
lock
jne
adc
push
cs
mov
pop
loopne
leave
mov
xor
xor
pop
adc
xchg
cmp
xchg
sub
or
inc
mov
incl
repz
xchg
movsl
push
rcll
stos
push
loop
ljmp
aad
cmp
xchg
in
mov
jg
inc
outsb
imul
sub
inc
cld
push
pop
mov
mov
fnstcw
push
ds
gs
test
push
and
mov
dec
jne
icebp
add
sub
mov
jecxz
sub
and
movsb
pop
dec
les
aas
sub
dec
and
add
aad
call
mov
lcall
ret
add
dec
xlat
movl
and
daa
stos
pop
and
cmp
out
or
lahf
ljmp
cmp
jbe
int
lock
fs
mov
mov
inc
xor
push
outsl
in
dec
inc
pop
movsb
mov
es
push
pop
mov
scas
sub
push
push
push
arpl
stos
ficoml
adc
loope
addr16
adc
out
sarb
and
dec
jns
scas
mov
icebp
or
daa
popf
mov
add
xor
outsb
push
das
fwait
mov
int3
pop
cmp
rorb
mov
mov
inc
repnz
mov
mov
cmp
jmp
cld
cmp
imull
mov
pop
or
push
push
xchg
mov
adc
add
jns
push
pop
test
jecxz
insb
push
mov
mov
and
cld
stc
mov
dec
jno
xchg
fisubrl
cld
jmp
cmp
cmpb
xor
push
dec
mov
add
cltd
ds
add
add
ret
push
push
call
loop
call
xchg
ret
add
testl
mov
dec
mov
shr
call
xor
pop
add
lock
sub
push
loop
xor
push
cld
popf
lea
addr16
jb
pop
xor
jne
shr
or
arpl
push
ljmp
xchg
jp
int
pushf
add
aaa
cmp
cmp
mov
mov
mov
jnp
xor
pop
aaa
xchg
jg
out
insl
mov
add
cld
mov
call
sub
push
mov
fldcw
imul
add
inc
inc
outsl
mov
adc
and
adc
fsubrp
or
add
pop
nop
into
or
adc
mov
adc
sub
movsl
jg
adc
push
sbb
imull
mov
push
scas
adc
outsl
adc
lock
push
imul
pop
or
or
insl
cmp
pusha
fbstp
outsb
or
and
push
fcom
xchg
imul
xor
jg
repz
mov
inc
jge
or
dec
sbb
jl
push
dec
sbb
mov
lock
or
call
test
aam
cwtl
jns
mov
and
std
xlat
dec
mov
rorl
lcall
mov
mov
add
stos
sub
mov
imul
mov
cwtl
pop
dec
dec
sub
pop
adc
inc
cmc
push
pop
ss
jge
sbb
fldenv
movsb
out
sub
clc
or
xchg
pushf
pop
mov
push
movsb
inc
lock
and
pop
mov
pusha
dec
in
xchg
inc
jo
xchg
fistpl
fs
cmp
jmp
adc
inc
test
add
pop
ja
sbb
jl
mov
stos
shr
pop
jmp
scas
jl
fdivp
icebp
es
stc
and
inc
and
cmpl
mov
xchg
push
or
adcl
jb
scas
adc
pop
aam
popa
loop
cmp
xchg
mov
stc
mov
addl
lret
jbe
repz
adc
js
out
push
cmp
rolb
pop
mov
je
add
sub
add
cmp
adc
mov
push
jnp
sub
adc
mov
mov
add
shr
push
sub
fbld
push
xchg
adc
cmp
adc
arpl
cmpsb
je
loope
pop
stc
ret
cmpsb
cwtl
sbb
in
divl
mov
psrlw
push
in
std
push
inc
sar
es
lret
stc
pop
adc
std
cwtl
in
xlat
es
sti
xor
dec
outsb
push
in
jb
or
lret
sbb
cmp
and
mov
cmp
mov
call
movsb
sbb
dec
mov
dec
fidivrl
mov
dec
mov
mov
jne
sub
insl
rol
mov
cld
rorl
stos
sahf
lret
loope
leave
scas
lahf
rorb
insb
repz
mov
add
aaa
cmpsl
movsb
add
addr16
sub
ficoms
push
repz
lcall
xor
push
mov
rcrb
cmp
sub
subb
test
push
test
out
es
mov
mov
sub
adcb
mov
xchg
mov
jecxz
dec
sub
and
mov
push
pop
bswap
jo
and
jp
subb
icebp
sarb
ficomps
aas
pop
adc
xchg
mov
pop
shlb
cld
mov
cs
mov
lcall
lcall
shll
lret
inc
and
mov
stc
imul
lret
cmpsl
fwait
cmpsb
leave
inc
out
std
mov
mov
nop
jbe
test
xchg
sbb
das
loop
sahf
push
xchg
adc
ljmp
lea
jecxz
and
and
pop
outsl
ret
test
out
sahf
ja
orb
pop
popa
out
loop
or
lahf
push
dec
push
pop
jg
orb
loop
js
es
fldt
lahf
cmovo
inc
lea
mov
dec
inc
loopne
pop
loopne
adc
jbe
aad
jnp
ret
pop
js
xor
shlb
adc
gs
jp
call
orl
or
push
addr16
pop
ljmp
inc
or
adc
test
xlat
js
ret
lcall
jnp
or
ffree
jle
sbb
lcall
push
cmp
fildll
jge
xor
dec
clc
push
and
xor
std
ljmp
inc
push
push
xor
outsb
jge
cs
test
gs
outsl
out
pop
pop
xchg
imulb
outsl
scas
jne
push
add
cltd
out
pop
cmp
aas
in
cmp
call
inc
inc
dec
clc
sub
cltd
pop
shl
loop
jp
out
mov
jne
repnz
inc
cwtl
lret
adc
shr
mov
push
mov
mov
cmp
leave
orl
jl
pop
aaa
movsb
rcrb
xchg
in
xchg
sbb
test
into
push
rcl
pop
sub
cli
filds
xchg
lahf
aad
loop
mov
sarb
mov
flds
shrb
push
popf
arpl
add
adc
pop
aam
xor
sti
ret
insl
mov
fdivrl
xchg
js
loop
push
add
stos
jae
sahf
shll
xchg
push
mov
or
mov
and
xchg
pop
call
xchg
xchg
push
dec
inc
mov
mov
fs
xchg
inc
lods
jne
loop
js
test
out
ret
arpl
dec
push
push
mov
test
cmp
rorb
cltd
or
push
pusha
pop
pushf
xor
rclb
or
mov
rorl
inc
outsl
xchg
and
std
sbb
lods
inc
jg
sub
jne
fs
outsb
ds
mov
sbbb
loopne
add
xor
seta
jo
inc
push
cmpl
mov
mov
adc
cmp
test
xchg
in
shll
call
dec
xchg
or
jnp
scas
fisubl
data16
repz
jp
or
lahf
idivb
int
mov
xor
and
mov
es
movsb
outsb
lret
mov
ds
push
andb
xchg
into
lahf
adc
dec
out
inc
inc
add
push
adc
lock
jne
dec
int
mov
mov
xchg
cld
stc
push
out
cld
pop
and
or
je
pop
cmp
dec
jno
movsl
fidivrs
cmpsb
mov
lock
out
mov
pushf
addr16
cwtl
and
arpl
xor
pop
sarb
outsl
shlb
testb
sub
push
cs
xor
fisttps
mov
clc
mov
gs
cwtl
or
fs
sbb
shlb
fwait
nop
xorl
pop
shr
mov
xor
sub
cmpsb
inc
mov
xchg
rorb
mov
mov
sti
add
mov
lcall
push
sub
add
repnz
into
sub
pop
jns
mov
loop
push
cltd
or
push
xchg
idivb
sub
sub
jno
xchg
push
dec
inc
fisubl
xchg
mov
clc
call
pop
sbb
daa
and
dec
test
push
incb
dec
and
roll
jecxz
mov
adc
leave
fprem
mov
and
fcompl
sub
in
stos
sbb
sti
push
fs
add
jge
xchg
in
pop
sbb
dec
inc
and
cli
es
jecxz
aaa
lock
sub
fiaddl
ljmp
sbb
fs
es
jno
popa
pop
or
xor
gs
call
inc
dec
sar
fld
xlat
inc
das
mov
mov
lahf
lcall
jbe
sub
mov
inc
sub
aas
lret
or
mov
mov
add
shrl
jno
mov
add
mov
xchg
cmp
jbe
das
loope
out
pop
ficoms
ret
push
fs
subb
mov
xchg
cmp
fstps
push
push
mov
dec
sub
mov
ss
int3
dec
mov
stos
jl
xchg
xor
call
jge
cli
jg
adc
add
mov
mov
in
lods
out
adc
xchg
push
and
jno
repz
mov
mov
mov
mov
mov
jns
adc
loop
push
cltd
cmp
dec
cmp
fiadds
punpckhwd
xor
mov
arpl
ds
mov
fnstenv
addr16
mov
mov
pop
inc
mov
adc
xchg
xlat
jbe
jne
stos
es
jge
mov
les
add
or
outsl
cmp
lock
out
jns
lret
ljmp
mov
mov
or
ss
lahf
mov
test
add
mov
sarb
fistpll
pop
iret
popl
in
cmp
loop
ss
cmpsl
sbbb
aaa
mov
add
fisttpl
xchg
testl
fidivl
cmp
loop
test
ljmp
test
jmp
xchg
push
add
adc
pop
jg
add
fildll
addr16
out
xchg
dec
mov
aaa
test
push
out
mov
mov
stc
jne
es
dec
subb
adc
out
ds
fnsave
bound
sub
int
sbb
mov
adc
test
shll
dec
jp
lds
cwtl
out
inc
add
or
sarl
sar
aam
cli
cs
push
jg
fwait
inc
insb
fldcw
icebp
shlb
not
xchg
repnz
push
in
dec
and
or
and
testl
int3
pop
sub
pop
fadds
fldcw
mov
ja
dec
in
mov
push
scas
jge
lret
in
aas
fildl
jb
movsb
into
pop
int3
mov
leave
cli
sti
push
xor
pop
or
sti
mov
push
out
cli
adc
inc
add
jecxz
lret
frstor
jae
out
add
into
lea
add
mov
mov
test
xchg
pop
sbb
mov
daa
gs
rorb
dec
repz
xor
leave
aaa
adc
fwait
aas
fistpl
ret
dec
push
int3
into
cmp
cmp
cli
mov
icebp
std
sbb
xchg
cmp
enter
or
jp
xchg
and
dec
js
in
sbb
popa
imul
xlat
jecxz
fwait
mov
mov
lret
cmp
push
mov
xchg
lret
fisttps
add
popl
lcall
mov
ror
jp
das
push
imul
inc
add
lds
jl
inc
push
aaa
in
ret
sub
adc
pop
mov
or
stc
cmp
mov
pop
push
push
test
add
hlt
loop
sbb
mov
adc
arpl
mov
pop
ret
dec
xchg
jo
rcll
pop
int
pushf
inc
dec
ret
sub
imul
jg
and
xor
dec
mov
pushf
sub
jo
cmp
icebp
clc
mov
and
call
or
push
xchg
fmuls
fwait
das
imul
xchg
roll
dec
aas
nop
xchg
in
dec
daa
rcrb
add
cmpsb
xlat
jne
insl
test
mov
ret
scas
dec
rcrb
push
into
cmpsb
adc
mov
xchg
jns
sub
xor
inc
sub
push
cmp
cld
mov
or
iret
pusha
sub
xchg
scas
push
mov
mov
mov
movsl
sbb
pop
int3
rol
addb
add
dec
jnp
xor
aam
js
pusha
pushf
xlat
mov
adc
mov
ret
add
inc
imul
jecxz
dec
das
shrb
jnp
jae
ss
add
push
pushf
pop
fwait
sub
mov
insb
lods
xor
stos
pushf
xchg
jmp
mov
negb
push
scas
push
or
push
lods
shll
lret
lahf
mov
cmp
mov
lods
hlt
push
fists
jae
xor
es
pop
xchg
jl
mov
push
or
leave
je
and
pop
stos
jo
mov
lret
xor
cmc
shll
sub
xor
add
xor
pop
cwtl
or
sub
imul
fsubrs
mov
add
cld
mov
in
ja
add
test
out
sbb
or
xchg
aas
out
bound
lock
rcrb
ficoms
add
insl
jns
adc
scas
cmp
jp
dec
fimull
es
fsubl
ss
cmp
mov
mov
aaa
std
insb
loopne
stos
cmc
mov
cltd
das
mov
xchg
xchg
pop
xor
es
arpl
xor
pop
adc
lret
out
pop
out
pop
sub
xchg
ds
rcr
push
int3
jl
mov
or
stc
mov
movsl
popa
pop
bound
imul
sbb
cmpsl
mov
sbb
cmp
mov
and
sbb
inc
jmp
xchg
call
push
fidivl
nop
mov
ret
mov
fisttpll
pushf
xchg
push
xor
push
jne
xchg
xchg
pop
dec
sub
pop
sub
push
mov
add
sub
add
les
adcb
jp
setle
lods
mov
sarb
sub
subl
and
cli
je
and
adc
clc
cmpsb
ret
jmp
fwait
aad
push
mov
jecxz
inc
mov
sub
dec
xor
test
cmc
das
mov
les
xchg
push
std
arpl
xchg
addl
ja
xor
cmp
push
repnz
jmp
movsb
in
mov
push
dec
mov
dec
outsl
sbb
aas
aaa
xor
lds
inc
mov
jne
psubusw
xor
inc
inc
inc
and
xchg
aas
or
in
inc
movsl
xchg
fisubl
cmp
cmp
jo
inc
out
xchg
jp
jle
mov
mov
mov
mov
in
dec
dec
xchg
inc
jge
mov
xchg
jns
jl
cmp
add
fstenv
pushf
out
lcall
jns
cmpsb
xor
lcall
sbb
and
pop
sbb
mov
dec
jns,pn
cmp
mov
lahf
pop
call
stos
fst
out
adc
mov
jo
fldt
seta
lods
stos
jns
rclb
mov
inc
scas
gs
or
imul
pop
fnstsw
xor
roll
gs
or
mov
enter
sbb
fdivs
jnp
and
in
lods
xchg
push
add
bound
in
xlat
jmp
loop
xchg
cli
dec
fmuls
jnp
rcll
cltd
lahf
movsl
sub
add
jp
lods
lahf
sub
lret
and
insb
jg
iret
mov
xchg
dec
in
adc
negl
dec
jne
pop
xchg
ljmp
jg
inc
iret
pop
test
dec
inc
fdivl
stc
adc
int3
mov
aaa
fs
inc
divl
mov
xchg
or
jp
and
lods
mov
pop
jns
adc
lods
push
addr16
popf
xor
sub
jns
xchg
inc
out
insl
outsb
sbb
mov
mov
push
in
pusha
add
sti
popa
dec
mov
jmp
and
subl
inc
sbb
outsb
aad
cmpsl
sbbb
jmp
or
fldz
cmp
out
mov
repnz
push
lcall
xchg
imul
ud2
test
jae
sbb
out
and
sub
and
nop
insl
mov
add
inc
xorl
inc
subl
mov
cmpsb
in
xchg
clc
fbld
in
mov
push
pop
loope
pushf
push
les
pop
test
mov
push
mov
imul
adc
inc
cpuid
fcoml
and
addr16
rorb
cmp
jb
nop
fists
das
fstpl
mov
loop
or
push
mov
jb
jmp
arpl
xor
cltd
inc
sahf
mov
das
xchg
mov
mov
aam
or
mov
add
sbbb
cwtl
cwtl
xor
pop
bnd
jmp
and
mov
push
pop
cmp
mov
lea
insl
fnstsw
push
dec
in
inc
jne
adc
ds
adc
in
aas
dec
sub
in
mov
rcll
stos
cmp
out
mov
fidivl
nop
xor
and
pushf
xor
lods
andl
adc
pop
xchg
xor
fistl
mov
daa
sub
push
or
mov
lahf
sbbl
pop
aas
in
cld
mov
call
lock
test
ret
ret
xchg
mov
imul
mov
push
xchg
xchg
xor
push
cld
mov
ljmp
pop
mov
movsl
and
push
imul
mov
pop
fwait
jns
sub
mov
pop
fsubr
adc
mov
cwtl
push
ret
mov
xlat
inc
idivl
hlt
push
xchg
xor
iret
cmp
or
fwait
xor
mov
xor
jge
dec
jnp
test
and
dec
hlt
and
dec
jno
push
arpl
adc
jmp
xchg
xchg
arpl
or
pop
loopne
add
adc
gs
repnz
das
clc
pop
aam
mov
mov
xchg
aad
fs
movsb
dec
hlt
inc
fmull
dec
cmpl
sbb
mov
das
rcll
fsubp
pop
add
or
loope
imul
xor
out
pop
mov
out
jnp
roll
xor
ret
cmc
xchg
js
jl
mov
or
sti
cmp
and
stos
pop
push
icebp
sbbb
mov
jle
xchg
sub
xchg
insb
xchg
and
cmp
mov
push
sub
sub
or
roll
dec
push
cmp
cmpsl
push
dec
scas
insb
add
or
icebp
dec
popf
push
mov
loopne
mov
les
cmp
jmp
cltd
out
das
push
das
add
mov
jnp
lods
mov
add
pop
idivl
xchg
int3
cltd
dec
movsb
lods
ljmp
loop
add
sbb
mov
imul
repnz
clc
or
cmp
adc
rcrl
add
sbb
fsubs
and
shlb
testl
jg
add
fisubs
pop
mov
cmpsl
cmp
out
shll
jns
push
cmp
scas
shlb
stc
pop
dec
adcw
push
out
out
xor
scas
push
xor
mov
cmp
jno
lret
fists
std
movsl
push
test
js
jg
loopne
in
loop
repz
jnp
xor
cmp
movl
sub
inc
aas
outsl
mov
or
out
das
mov
lods
repnz
jnp
pop
push
outsl
ja
xlat
ljmp
cmp
aaa
sbb
fmull
mov
jbe
les
or
adcb
lcall
shr
jo
test
fistps
cmp
cld
inc
imul
sbbb
out
or
add
movups
lret
jne
dec
leave
repz
push
pop
ret
mov
xchg
ja
push
lods
icebp
clc
or
sub
xchg
inc
push
rolb
outsb
or
addr16
sub
add
pop
outsl
imul
or
adc
add
xchg
out
arpl
loop
sub
test
mov
cmp
sub
rcr
mov
jle
xor
cmpsb
ret
mov
lcall
dec
and
and
insb
sub
and
loop
pusha
sbb
xlat
into
lods
adc
jmp
mov
push
sti
lds
mov
pop
or
add
sub
mov
pop
mov
sub
mov
adc
enter
cmp
and
and
jp
xchg
je
negl
mov
addr16
dec
in
mov
mov
sbb
loop
sbb
jge
repz
mov
das
and
push
out
inc
mov
inc
push
adc
and
push
push
sub
popa
push
push
stos
loop
xchg
out
mov
ds
xor
test
push
inc
push
ret
push
pop
testl
inc
call
call
pushf
movsl
jecxz
call
xor
xor
mov
std
jno
addr16
mov
sub
mov
pop
ds
jbe
xor
jae
or
fs
push
jbe
pop
cmp
les
cld
push
sti
sarl
mov
int
add
sbbb
sbb
jno
pop
jo
jl
jae
mov
out
movsb
and
mov
fists
test
aas
adc
jns
into
test
jmp
test
lret
icebp
sub
jp
mov
shl
sub
popa
ret
cli
jnp
adc
vpor
mov
pushf
inc
loopne
mov
insb
arpl
push
in
roll
xor
pop
sahf
out
or
mov
daa
cmp
out
mov
loope
in
jecxz
movsl
dec
clc
cmp
daa
pop
stc
and
insb
dec
stos
cmpb
scas
jp
mov
cmp
stos
lret
pusha
fcmovu
shrl
je
sub
xchg
out
push
mov
roll
add
push
pop
repnz
jmp
push
adc
dec
push
loope
aaa
cmc
push
dec
xor
mov
jp
cmpsb
push
jecxz
inc
xor
mov
and
stc
fs
and
cltd
jns
repnz
push
aas
push
xor
loop
pusha
adc
sbb
pop
mov
stos
jp
scas
push
test
mov
add
jb
pusha
sbb
aam
jg
mov
popf
jge
cmp
out
mov
sbb
shlb
in
fsubs
scas
sbb
sub
or
lods
jmp
imull
lret
lods
scas
andb
add
xchg
cli
dec
sub
mov
out
push
hlt
push
imul
jbe
rorl
stc
scas
pop
or
push
mov
cmp
xorl
inc
lcall
xchg
xor
sbb
mov
out
pop
xchg
xchg
inc
mov
andl
cld
xchg
jbe
xor
cmp
fcomip
xchg
mov
jae
push
inc
les
addr16
mov
lock
cmp
dec
dec
faddl
test
or
adc
jae
mov
fldt
xor
xlat
loopne
repnz
je
inc
jge
rorb
stos
xchg
out
mov
lock
loope
and
jnp
js
stos
xchg
adc
dec
in
cs
rcll
insb
xor
out
shl
pop
push
xor
vpsubw
movsl
cltd
push
jle
push
lods
or
and
test
lcall
shlb
jno
cli
xchg
push
inc
push
ljmp
pop
dec
jmp
je
lret
and
adc
in
idivl
mov
sbb
ficomps
inc
loopne
cmc
sbb
add
mov
into
jne
sbb
jb
pop
sub
inc
dec
jb
in
repnz
pusha
cmp
push
xchg
mov
pop
iret
cmp
mov
pop
xchg
mov
sub
cmc
leave
ret
dec
dec
mov
lcall
inc
jle
add
xchg
sub
push
sbb
sbb
out
je
xchg
les
dec
popa
cmp
bound
and
jg
sbb
leave
inc
sbb
jl
or
movntps
testl
dec
xchg
push
fstl
mov
jl
push
popa
add
xchg
out
jb
sbb
faddl
aas
addr16
lret
mov
nop
mov
and
loopne
enter
mov
iret
sub
outsb
sbbl
stc
fnstenv
sbb
push
sub
push
adcb
xor
jb
mov
cmp
pop
mul
fstps
popa
inc
aam
mov
popf
mov
sbb
stos
push
and
sub
aaa
adc
fldcw
mov
xchg
out
fstpt
mov
hlt
adc
imul
ds
pop
mov
rolb
add
lret
push
xchg
lock
sub
mov
ja
ficoml
fwait
or
xchg
fstps
xor
add
outsl
xchg
movsl
dec
pop
outsb
or
jmp
cmp
cmp
adc
negb
aad
lcall
or
xchg
adc
pop
sbb
push
xchg
test
add
adc
sub
mov
inc
inc
out
test
and
pop
cli
jecxz
dec
and
mov
dec
adc
xor
fdivrl
aam
aam
dec
stos
sbb
jns,pt
lock
mov
cmp
cmp
call
outsl
repnz
push
cmpsl
push
pop
fnstsw
loope
add
cmp
in
ljmp
adc
cmp
shl
stos
cld
xorb
in
jne
mov
dec
sbb
ljmp
xor
fdivrp
pop
inc
dec
lcall
jmp
and
xchg
adc
in
add
mov
push
aaa
popa
sub
xor
fcompl
stos
or
cld
mov
mov
inc
iret
out
daa
mov
add
xor
mov
inc
xchg
aaa
pop
lret
jnp
int
testb
lahf
sbb
addr16
push
jae
pop
pop
xchg
inc
inc
jns
dec
mov
mov
sub
dec
xchg
int3
add
xchg
sbb
leave
lods
sbb
sbbl
pop
xchg
popf
inc
mov
mov
sub
or
pop
and
push
jmp
mov
jecxz
or
mov
jns
cmpsb
jb
push
xor
rol
inc
enter
das
shl
cmp
cmc
mov
aaa
cmc
std
inc
jge
loop
sbb
aaa
pop
addr16
mov
sbb
mov
test
dec
cmpsb
pop
scas
xor
ljmp
jb
xchg
adc
push
push
outsb
rcll
je
shlb
add
shll
jnp
stos
xor
mov
sub
cmp
outsb
jmp
adc
adc
add
mov
out
pop
stc
loope
push
out
loop
xor
mov
cmpsb
scas
pop
add
pop
icebp
dec
xlat
pushf
call
repnz
dec
outsb
setnp
mov
cmp
cmpl
cmpb
jno
mov
jecxz
les
bound
lahf
and
pop
or
data16
in
add
mov
pop
stos
mov
imul
mov
in
pop
dec
int3
jmp
out
inc
out
fcomip
dec
fsubs
mov
shll
or
jmp
loop
cltd
in
pop
lods
stos
xor
aam
rol
xchg
sbb
data16
sbb
lock
sbb
cli
mov
jmp
data16
lcall
mov
decb
mov
inc
cmpsb
js
inc
cmpsb
jmp
in
jno
imul
arpl
mov
ret
cli
inc
gs
push
xchg
fs
das
xchg
dec
lods
sub
jge
mov
pusha
dec
ds
xchg
cltd
sti
sbb
push
mov
add
push
bnd
cmc
xor
pop
test
mov
lcall
lcall
dec
loopne
jp
adc
cmpsl
insb
into
stos
adc
cmp
shrb
neg
xor
mov
in
xchg
in
lods
xlat
inc
sti
shrl
jecxz
test
fdivrs
in
mov
shll
fcoml
mull
iret
mov
loope
dec
dec
fdivrl
aaa
adc
mov
out
fldcw
dec
pushf
inc
pop
pop
pop
test
adc
cwtl
mov
xchg
adc
dec
lcall
mov
and
xchg
ja
fsubrs
jbe
jno
dec
in
popf
cld
add
or
cld
movsb
xor
mov
addl
aam
js
mov
sbb
jge
mov
sub
out
add
lea
sbb
scas
cli
add
cmp
mov
and
std
nop
fs
push
mov
loop
lds
push
loopne
jmp
mov
fst
icebp
jge
mov
mov
ss
sub
outsb
out
pop
adc
push
sbb
add
sub
test
test
andl
fisubs
pop
sbb
xchg
and
sub
pop
inc
and
xchg
lret
dec
inc
cmp
lods
mov
out
jecxz
lock
ret
and
fidivs
xchg
jmp
mov
enter
push
adcb
iretw
hlt
add
sub
xor
jnp
sub
or
iret
mov
outsb
inc
add
enter
xor
lods
lock
xchg
jg
insb
mov
pop
xor
mov
int3
mov
out
rcll
adcb
iret
stos
fcomps
aam
and
mov
pop
sar
cltd
jg
sbb
out
sbb
popl
out
sub
add
hlt
dec
xlat
or
aas
rolb
sub
popa
out
adc
or
pop
andl
jno
in
push
aas
pop
lret
adc
mov
mov
mov
dec
sub
dec
xor
clc
or
sub
push
add
mov
mov
jb
sahf
pop
sarl
mov
xor
jns
jmp
xchg
ret
mov
push
mov
sbb
rcll
jns
imul
pop
hlt
popa
out
cs
fisttpll
push
add
nop
add
adc
adc
scas
push
adc
lea
inc
xor
imulb
sti
adc
inc
fcoms
mov
mov
xchg
cld
lock
pop
inc
and
jle
mov
and
cmp
std
movsl
popf
dec
and
sbb
ds
adc
stc
mov
subl
jl
jmp
adc
inc
dec
jmp
rolb
add
fucomp
sub
push
int3
out
cmpsl
cmp
mov
dec
push
gs
test
daa
das
sahf
movl
sbb
pop
push
mov
verw
sbb
mov
xchg
bnd
fdivrl
push
loope
lock
fcomps
iret
xor
imul
pop
fbld
es
cld
jno
ret
or
mov
ja
jno
add
daa
mov
in
inc
mov
adc
add
aas
add
bound
mov
push
xchg
mov
je
addr16
inc
and
dec
shll
dec
movsl
mov
dec
fmulp
mov
in
fmull
test
dec
fldenv
push
mov
add
push
adc
add
mov
jnp
test
mov
fwait
loopne
pop
push
xchg
ret
ret
addr16
cmp
pop
test
mov
push
mov
mov
ja
movb
xor
sbb
or
and
pop
mov
xchg
pop
add
testl
mov
aas
loop
mov
pop
and
out
test
xchg
or
adc
fcmovne
fwait
add
xor
sbb
test
xchg
mov
cltd
sahf
xchg
stc
sarl
test
dec
inc
xor
das
bound
push
and
rdtsc
mov
add
lods
dec
xchg
js
stc
call
gs
xor
mov
rcl
xchg
pop
dec
sbb
or
and
sbb
adc
repz
pop
pop
mov
xor
shrd
xlat
push
cmp
xor
mov
pop
std
cmp
pop
fwait
adc
xchg
decl
ret
push
push
outsl
fstps
pop
mov
movsb
dec
and
jl
sbb
and
push
sbb
cmp
pop
cmpb
push
xor
jnp
pop
xor
cmp
sbb
xchg
mov
test
fdivs
ljmp
adc
stos
orl
pushf
fwait
jg
fwait
mov
mov
and
shll
mov
imulb
dec
fwait
and
mov
push
jecxz
cld
jo
lret
loope
cmp
outsb
or
xchg
scas
dec
or
fsubs
ror
sbb
sub
inc
mov
hlt
xor
mov
loope
sub
loop
out
outsb
nop
xor
rclb
mov
call
jle
push
cmp
mov
cmp
xchg
ljmp
mov
cwtl
call
xor
mov
pop
aas
frstor
xor
sbbb
pop
pop
gs
fptan
enter
mov
push
sbb
xchg
jnp
pop
std
ret
lea
popf
addb
loope
lock
pop
ds
icebp
fcmovnu
pop
stc
xchg
xlat
jno
dec
fisttpll
jno
inc
out
jb
test
push
xor
jae
push
jecxz
subb
inc
dec
cmp
and
fwait
in
jne
addr16
inc
lcall
cmp
jmp
sbb
jne
cmp
jbe
fiadds
cmpsb
mov
xor
bound
sub
mov
dec
mov
nop
cmp
xchg
push
popf
mov
mov
ljmp
mov
imul
sub
cmp
and
push
sbb
push
sti
mov
add
jmp
in
fldl
shlb
fistps
pushf
sub
cmc
bound
ret
sub
mov
jbe
inc
rorl
dec
push
sbb
mov
fldcw
dec
lods
cmp
arpl
aad
scas
dec
into
xor
dec
cmpsl
out
cli
pop
pop
jne
jl
sub
sub
lock
xor
ja
inc
lcall
push
push
add
imul
cmp
cmc
dec
fisubrs
imul
in
dec
mov
out
into
pushf
ljmp
mov
fimull
push
dec
add
sub
fnstsw
adc
and
add
lcall
jmp
pop
fwait
sbb
loop
sti
cs
mov
mov
jle
cld
mov
stos
xor
or
fcomps
adc
fs
mov
or
xchg
mov
je
and
popf
adc
sub
les
int3
pop
or
dec
or
mov
mov
subl
arpl
push
sbb
rcrb
pop
mov
or
push
rolb
lahf
outsl
xchg
mov
es
lret
shlb
shl
push
cmpsl
push
jl
hlt
daa
or
hlt
fisubrs
je
outsb
pop
push
push
add
addl
jp
stos
xor
sahf
shrb
pushl
inc
sub
imul
dec
subl
int
mov
test
shll
das
lods
pushw
lods
fistpll
icebp
mov
dec
cmpl
fxch
loope
aaa
mov
sarl
aad
push
jae
jae
mov
dec
int
xchg
icebp
in
inc
popa
enter
scas
mov
nop
cmp
das
scas
lahf
imul
mov
icebp
inc
es
popf
jp
test
fwait
cmpsl
test
sbb
imul
mov
or
jg
xor
neg
filds
out
cmp
jl
fimuls
adc
pusha
push
xchg
subb
hlt
test
push
arpl
add
test
leave
pop
out
sub
xchg
mov
add
push
xlat
xchg
mull
shrb
sbb
out
aas
outsl
rorb
sbbl
pop
imull
out
shlb
and
adcb
xor
out
mov
xchg
sarb
push
or
movsl
lea
xor
outsl
or
lret
adc
cltd
sub
push
fisttps
insb
add
cmp
cmp
or
outsb
fldcw
sub
xchg
dec
xor
imul
rcll
pop
add
cld
pop
nop
xor
inc
add
pop
arpl
sub
pop
xchg
xchg
mov
jne
add
or
aaa
fisubrl
xor
adc
mov
mov
fimull
jns
sbb
fwait
jle
mov
inc
test
push
aas
outsb
xlat
fcmovne
mov
dec
push
shr
or
fdivl
lods
in
push
cwtl
xchg
cli
xor
push
mov
and
mov
sbb
popa
scas
jle
rol
gs
pop
xor
xor
mov
dec
sar
sahf
xchg
lret
clc
lret
adc
mov
test
gs
xor
ljmp
repz
dec
movsw
pop
out
outsb
imul
popf
push
test
sbb
repz
pop
std
add
fptan
or
jno
lret
shll
nop
sub
mov
mov
faddp
fwait
mov
jl
mov
mov
jb
sbb
jl
push
test
into
adc
xchg
and
cmp
xor
push
ljmp
loop
sub
lahf
je
shrl
sub
sub
sub
adc
lcall
push
iret
lret
xchg
repnz
mov
pop
data16
gs
cmc
mov
push
xchg
adc
push
idivb
imul
les
ds
dec
lret
adc
imul
adc
adc
inc
push
dec
push
pop
mov
bound
dec
dec
bound
nop
roll
mov
xchg
pushf
mov
push
mov
out
push
stos
or
jecxz
fstpt
test
inc
sarl
and
jge
push
les
xchg
dec
dec
lods
inc
mov
sub
push
mov
pop
jl
pop
je
push
jbe
cltd
mov
mov
cmpsb
adc
dec
ret
dec
ja
mov
pop
xchg
and
daa
mov
lds
subl
mov
sarb
adc
dec
and
std
in
pop
dec
and
cmpl
cmpsb
push
shrb
stc
in
mov
insl
aad
jge
jle
sbb
movsb
test
adc
loopne
outsl
clc
adc
test
mov
mov
add
xor
sti
pop
push
setl
mov
insb
sub
popf
cmp
jns
xlat
je
xor
cmc
jne
cmpsb
push
mov
or
popa
adc
jle
int
addr16
cmpsl
roll
je
sub
in
mov
mov
add
rcrb
cmp
call
ds
sub
jne
sbb
mov
ljmp
daa
pop
pop
fcoml
sbb
xor
mov
xchg
aas
or
mov
stos
fisubrl
lods
add
mov
adc
push
mov
dec
jb,pt
arpl
popa
aam
es
gs
xchg
xor
cmpsl
out
inc
int
addl
mov
or
sub
cmp
pop
push
jl
into
push
dec
sbb
imul
mov
jne
imul
clc
dec
mov
pop
push
repnz
test
push
pusha
sbb
lds
pop
dec
jnp
inc
in
jno
out
xchg
xor
push
mov
movsl
inc
xlat
repz
push
sbb
cmp
cmp
adc
test
adc
and
clc
popf
loopne
push
movsl
cmc
push
or
push
pop
sti
ficoms
popf
dec
mov
std
pusha
psubsw
imul
pop
iret
aas
xor
int
dec
insl
ffree
stc
and
lret
jg
into
xchg
loopne
je
add
xor
pop
mov
mov
jge
movsl
test
push
jecxz
js
sbb
mov
add
mov
or
into
mov
into
js
neg
ret
mov
into
add
mov
movsl
sub
sub
sbb
les
mov
pop
imul
lret
pop
out
and
push
jb
or
push
and
pop
in
bnd
jne
das
mov
push
scas
repz
push
mov
fldcw
js
mov
into
daa
fisubl
cmpsl
cmp
mov
cmp
stos
push
mov
push
pop
inc
je
mull
xor
std
xor
mov
jnp
pop
fwait
inc
test
add
ss
shll
xor
sbb
aas
daa
leave
cld
add
imul
or
and
sbb
sub
clc
xchg
ja
adc
clc
dec
pushf
inc
test
lea
mov
call
sti
lret
push
in
mov
xor
add
outsb
stc
fbstp
mov
lds
pop
jg
mov
or
dec
dec
jns
and
dec
inc
push
loope
push
cs
dec
in
add
xorl
or
xchg
adc
adc
hlt
add
das
fdivrs
stos
jmp
test
jno
and
jl
insl
sbb
add
pop
hlt
jnp
xor
xchg
sub
outsl
pop
mov
or
or
daa
sti
sub
loop
and
xor
xchg
std
mov
ficoml
xor
cmp
sbb
test
in
aas
sub
cmp
fs
std
lock
fstps
mov
out
pushf
leave
fidivrs
fwait
sbb
pop
shrb
push
adc
jmp
mov
mov
repz
gs
ja
loopne
jae
xor
out
mov
sbb
fists
loop
push
xor
clc
sbb
outsb
jb
cmpsl
inc
cmpsb
pop
jl
in
mov
push
popf
jb
inc
jge
cmp
data16
pop
loop
xor
fidivrl
cwtl
stc
pop
pop
inc
jns
mov
enter
mov
int
fdiv
cmp
pop
stc
in
cmp
add
push
movsl
das
push
mov
and
aam
stos
dec
xor
xchg
jno
and
jns
sbb
addr16
cmp
movsl
inc
cld
xchg
dec
xor
add
inc
push
jecxz
pop
xchg
push
cmp
mov
and
loop
adc
xchg
xlat
jo
inc
or
movzbl
sbb
pop
xchg
lcall
test
nop
sti
scas
gs
fcoms
testb
sbb
or
mov
sarl
xor
es
ja
into
pushf
pop
in
dec
sbb
pop
mov
mov
orl
pop
loopne
xchg
pop
mov
arpl
ljmp
mov
out
sti
lret
mov
push
cmp
jmp
lret
sahf
cmp
fnsave
js
sub
stos
scas
fnstenv
fisttps
test
cmp
adc
clc
xchg
sbb
out
cmp
push
out
ja
stos
dec
daa
and
jle
inc
sti
sub
addr16
clc
push
adc
out
mov
dec
outsb
adc
pop
push
js
dec
les
int
jne
xchg
ret
push
push
popa
dec
pop
cmpsl
jmp
push
aas
rorb
xor
jmp
xchg
outsb
sbb
xor
in
xor
imul
sbb
dec
je
push
mov
xor
incb
jno
fisttps
int
out
jns
mov
dec
jg
cmp
cwtl
addr16
iret
stos
cmc
pop
jnp
xchg
add
scas
je
and
inc
ljmp
pop
call
dec
sbb
sub
inc
sub
push
or
adc
call
icebp
mov
sbb
inc
rol
push
mov
dec
add
and
ss
or
mov
xorb
push
xchg
mov
cwtl
jnp
fldl
or
bound
jnp
pop
cmp
or
sub
sub
js
inc
int3
add
add
mov
add
test
std
cmp
or
pop
shll
psrad
adc
insb
imul
andl
cmc
and
out
ret
loope
mov
popa
fwait
lds
insb
pop
das
jbe
pusha
lods
mov
add
std
rcr
inc
jmp
sbb
add
pop
outsl
lahf
push
fst
cmp
push
popa
icebp
lcall
in
mov
lds
and
jnp
dec
insl
and
dec
adc
jp
xor
and
arpl
xchg
ja
xlat
lock
push
jae
push
andb
push
aam
dec
mov
push
pop
mov
xchg
push
inc
push
rol
or
aaa
ret
int
pusha
negb
inc
fdivs
and
movsb
ss
mov
lea
das
imull
cmp
cmpsb
xor
xchg
aam
xorb
ja
aam
loopne
icebp
mov
and
lret
ret
fwait
insb
sbb
jne
pop
xor
loop
push
xor
mov
pusha
not
mov
fcmovnu
sbb
int3
dec
mov
addr16
inc
inc
lret
dec
and
cmpsb
push
hlt
test
fists
ds
call
inc
xor
jmp
adc
mov
and
mov
rorl
notb
hlt
mov
test
loop
addr16
xchg
ret
mov
rcrb
add
fcomps
push
popa
adc
loopne
adc
ret
cmc
jnp
or
das
insl
cmpsl
loopne
xchg
arpl
and
mov
push
int
cli
rorl
sub
fmuls
xchg
sbb
xchg
and
inc
jle
jle
pop
out
push
adc
jmp
xor
inc
shll
aad
fucomp
sbb
daa
cmp
jno
clc
dec
lcall
cmp
pop
xor
test
xlat
shlb
lds
lods
scas
mov
sbb
in
mov
fcomps
dec
dec
cwtl
mov
xor
mov
and
jge
lret
sahf
dec
mov
jmp
pushw
aad
stos
pop
push
pop
sti
pop
scas
ss
loopne
leave
movsb
scas
pop
cld
movsb
fstps
lods
xchg
fdivl
data16
pop
fcompp
subl
inc
iret
popf
fsts
sub
es
mov
in
shl
cltd
mov
xor
jae
xor
inc
pop
or
int
mov
decb
sbb
pop
sbb
and
jl
sub
push
out
shrl
ficoms
sub
cmp
sbb
rcl
dec
mov
inc
das
push
nop
cmp
cmp
mov
sti
adcl
leave
pop
push
or
addb
lods
icebp
pop
mov
push
inc
cmp
sarb
pop
daa
or
and
jle
adc
inc
fldcw
adc
test
mov
sub
push
pusha
pop
push
xchg
pop
push
sahf
and
cs
aam
mov
dec
in
daa
push
mov
pop
lret
mov
pop
sub
jnp
xchg
addr16
mov
insl
in
cmp
loop
iret
cld
stos
push
shlb
pop
shl
cmp
jnp
sarl
ret
dec
sbb
imulb
adc
xor
in
test
jg
adc
aad
jno
lock
pop
xchg
jae
or
and
xchg
in
test
repz
mov
adc
into
dec
ds
hlt
pop
xchg
int3
inc
cmp
mov
xor
cmp
jb
sub
mov
push
jge
xchg
out
daa
xchg
push
loope
lret
sbb
and
jg
sub
out
pop
sub
xor
or
dec
imull
fildl
sti
jae
movsb
mov
push
stos
repz
pop
gs
loopne
loop
mov
inc
sbb
insb
jae
andw
divl
xchg
cs
xchg
mov
inc
fisubs
fcmovnu
sti
dec
aam
cmpsl
jle
xchg
fstpt
pop
sbb
fsubs
movsb
inc
mov
jge
mov
xchg
push
cmp
xor
sarb
adc
mov
or
xchg
hlt
push
and
adc
jo
pop
pop
adc
pop
push
aas
mov
cmpsb
xchg
pop
pop
push
sbb
xor
lret
xor
inc
xor
hlt
adcb
push
je
inc
nop
mov
push
prefetch
lret
insl
inc
push
clc
ja
mov
mov
ds
cmc
mov
das
push
jle
incb
ss
cmp
out
push
test
mov
nop
cmp
inc
std
push
mov
inc
inc
mov
mov
dec
cmc
cmpsl
lcall
xlat
cmp
jp
je
dec
lret
lods
pop
xchg
mov
jb
in
add
cld
sub
pop
adc
jnp
les
mov
cltd
es
mov
lods
insb
xlat
addr16
jmp
movsb
adc
mov
adc
inc
push
add
repnz
jg
and
mov
dec
outsb
rclb
xchg
push
mov
cmp
add
inc
rcll
pop
adc
loopne
inc
mov
aad
test
xor
enter
fwait
clc
les
pop
cmpsb
pushf
adc
les
mov
push
inc
or
pop
add
test
mov
scas
mov
xor
clc
or
cltd
out
in
push
fisttps
fsubl
and
sbb
fadds
add
cs
lock
xor
jp
lods
lock
mov
in
sbb
cltd
in
jo
bound
cmp
or
into
popf
mov
pop
dec
aas
inc
int
ficoms
ret
dec
sub
push
pop
and
add
pop
aaa
aas
inc
jno
lea
mov
mov
pop
push
adc
fidivs
inc
push
mov
sarb
jbe
cmp
outsl
mov
rcl
dec
fucomi
push
lret
xor
lret
lret
fistl
loop
inc
dec
imul
pop
or
lahf
cwtl
sbb
or
inc
jno
out
or
rcrb
mov
lds
call
cmpsl
xchg
cwtl
xor
daa
mov
xor
pop
xchg
or
jbe
in
daa
sarl
jle
fprem1
xchg
in
mov
sbbl
push
sbbl
push
popf
aas
idiv
fwait
pop
repz
adc
lods
fldcw
cmp
xchg
xchg
clc
push
adc
mov
mov
imul
mov
scas
and
aaa
fcompl
adc
pusha
cli
into
ret
iret
ds
pop
jnp
cmpsl
rclb
jge
and
ret
arpl
mov
adc
or
jle
push
cmpb
lret
jnp
pop
test
iret
xchg
inc
jo
mov
xchg
mov
adc
xchg
sbb
fbstp
daa
iret
push
mov
xor
mov
lcall
aas
cmp
nop
push
sub
dec
movsb
push
push
mov
inc
ret
mov
cmpsl
rcl
pushf
stos
popf
movsb
or
inc
ret
push
xor
sub
movsl
dec
fwait
lds
pop
fstpl
cs
mov
cmc
push
inc
mov
lods
cs
xchg
lods
dec
lods
or
sub
sub
cwtl
push
xchg
jp
mov
out
inc
cld
fwait
mov
ljmp
mov
cwtl
cmp
mov
nop
push
stos
sbb
inc
in
loope
jmp
cmpsl
clc
das
subl
outsb
test
lods
jg
sub
jo
out
adc
cld
jno
scas
xchg
push
xchg
mov
outsl
repz
mov
jo
jl
int
push
mov
and
popa
and
gs
into
enter
std
imul
mov
repnz
lret
mov
push
out
sub
cmc
pop
and
xchg
sbb
aaa
sub
dec
mov
pop
xrelease
fidivl
jmp
repz
pop
cmp
stc
std
pop
leave
addr16
sub
push
xchg
cmc
mov
pop
in
sti
inc
push
dec
dec
js
fsubs
pop
cltd
imul
int3
cmp
clc
shlb
out
xchg
loopne
aam
adc
or
enter
cmc
pop
or
in
loope
pop
sbb
push
push
sub
enter
adc
mov
xor
in
out
mov
add
shlb
xchg
lahf
sub
icebp
cmpsl
std
inc
cmp
sbb
out
fstps
mov
es
and
xchg
imul
cmp
lahf
and
jo
movsl
ljmp
lds
xchg
inc
sarb
mov
icebp
dec
sub
and
fdivr
aas
push
add
mov
insl
lret
inc
xchg
inc
stc
repnz
rolb
pop
rorl
mov
stos
mov
adcb
inc
push
js
cwtl
and
fwait
insl
dec
push
arpl
stos
or
pop
pop
xchg
pop
cmp
fsubs
sbb
jl
outsl
mov
notb
out
mov
sarb
mov
addr16
pop
imull
inc
iret
inc
inc
sbb
push
nop
scas
sub
jnp
xor
push
xchg
out
xchg
mov
mov
mov
add
lods
xchg
movsl
jo
mov
iret
out
jge
mov
in
xchg
mov
out
lret
in
cwtl
enter
incl
loope
or
jmp
sub
dec
loope,pt
and
arpl
enter
jne
pop
jl
mov
inc
push
cmpb
mov
pop
fidivrs
xor
inc
out
jns
jecxz
dec
mov
sbb
mov
test
add
jecxz
push
mov
test
push
jl
push
outsl
pop
jne
inc
or
xchg
push
sahf
flds
dec
jge
pop
xchg
adc
dec
int3
adc
jecxz
imul
dec
sti
jae
jmp
lret
inc
add
ljmp
jae
repnz
fsubr
mov
inc
dec
ss
jg
out
jp
jns
mov
pushf
mov
jl
test
in
xchg
mov
js
je
jno
popa
sub
sbb
daa
ja
cmpb
loopne
push
dec
pop
cmp
add
cmpsb
into
jb
sahf
out
or
sbb
scas
outsl
xchg
dec
repz
jl
push
fstpl
sub
leave
xchg
jo
push
and
int
fwait
add
mov
outsl
sub
shlb
cmp
pop
xor
int3
js
xor
adc
lea
mov
clc
scas
xor
sbb
mov
lods
ss
adc
jbe
fists
add
pop
add
lahf
outsb
outsb
sbb
ret
and
xchg
xchg
enter
mov
dec
fcoml
jo
mov
inc
and
or
call
cmpsl
mov
fwait
test
int3
sarb
adc
cli
cmp
daa
cli
push
dec
es
jmp
jb
cmp
ret
jl
sub
int
sub
adc
and
sahf
es
sbb
inc
ret
cmp
aaa
pusha
mov
lock
sti
daa
shrb
xor
sub
dec
into
sbb
xchg
gs
arpl
scas
and
mov
stos
dec
imul
and
pop
fstp
addr16
sbb
cli
mov
stc
jae
inc
xor
sub
sbb
pop
and
xor
out
inc
popf
leave
fadd
pop
out
adc
sub
fisttpll
xchg
hlt
cs
and
stos
mov
fs
repnz
ja
add
lods
sbb
or
insb
cltd
cmp
outsl
outsb
outsl
mov
pop
jle
xchg
cs
rcl
mov
jnp
ficomps
adc
dec
jecxz
loopne
pop
xchg
rcr
cmpb
ds
or
sbb
stos
outsb
sub
cmp
xor
sbb
sahf
push
push
addr16
sbbb
rcl
xor
jb
push
mov
test
jge
fldcw
lahf
mov
lcall
push
out
push
out
or
sbb
push
add
dec
jmp
jb
mov
inc
pop
test
test
push
jl
push
adc
jns
inc
pop
xchg
sub
push
sub
outsb
inc
mov
push
sahf
push
lahf
jg
js
mov
xchg
sbb
push
push
loopne
js
fstl
roll
popa
sub
or
in
or
sbbb
add
sub
xor
sub
aam
pusha
jle
unpcklps
lods
inc
adc
mov
fcoms
cmp
pop
sbb
push
adc
mov
out
sbb
daa
out
mov
jns
lret
leave
xor
jne
shl
xlat
test
aaa
lahf
mov
inc
inc
mov
jmp
cmp
push
adc
pop
arpl
push
nop
into
sub
int
jbe
push
cmp
jbe
dec
out
dec
push
int
popf
jne
xchg
dec
add
and
in
cwtl
xchg
dec
fcomps
lcall
cld
in
sbb
jbe
pop
inc
mov
repz
xor
jl
sub
stos
cmp
xor
xchg
and
sub
imulb
fs
ficoml
ljmp
cmp
gs
cmp
dec
js
pop
mov
mov
xchg
mov
cwtl
inc
cltd
in
scas
cmp
pushf
mov
ss
js
je
push
dec
sub
pop
or
lahf
jnp
xor
out
ret
stc
adc
outsl
push
out
sbb
repnz
lods
testb
adc
push
int
idivl
mov
loopne
out
cmpsb
lods
fisttps
aam
jno
push
push
leave
or
sti
jle
enterw
push
jmp
and
jg
je
push
test
adc
movsb
adc
jp
ss
cmpsb
dec
fcompl
testb
lret
je
enter
lds
out
sub
in
lcall
das
mov
mov
xchg
dec
cmpsl
push
dec
outsb
adc
int
cmp
cmp
inc
dec
mov
mov
movsl
xchg
sbb
in
cmp
inc
les
sub
pop
pop
das
scas
fwait
imul
std
xor
js
iret
loop
fcmovnbe
int
out
dec
push
test
sub
loop,pt
int
rclb
cmp
test
and
mov
cltd
dec
das
fs
dec
add
cmp
addl
pop
outsl
rorb
mov
inc
mov
daa
dec
jo
cmp
or
cld
mov
shl
pop
bound
lods
pop
mov
mov
sbb
aaa
mov
jnp
adc
lret
mov
loope
movsl
jb
orb
add
outsl
mov
enter
pop
cmp
xchg
and
ror
or
cmp
cmp
mov
daa
sbb
aas
fidivs
std
push
pop
sbb
inc
cmpsl
sarl
sti
or
or
in
imul
push
mov
and
stos
andb
ja
orb
shll
xchg
shl
or
lock
mov
test
ss
mov
jle
fldcw
sbb
sub
inc
loop
add
int3
jge
in
popf
divl
jp
dec
fdivrl
lea
jl
test
sbb
push
jmp
jae
xor
mov
push
shr
dec
mov
inc
sbb
xor
xor
gs
adc
cltd
pop
outsl
add
xor
add
or
movl
inc
sub
cltd
test
mov
scas
dec
int
adc
or
dec
mov
and
js
fwait
insl
sub
dec
inc
cmc
outsb
and
mov
push
nop
xor
and
or
jmp
cmp
bound
in
mov
pop
or
aaa
rorl
aas
mov
shll
insl
and
movsb
mov
popf
pop
adc
in
mov
lahf
or
aaa
or
scas
lea
sbb
jne
inc
icebp
pop
insb
lea
sbb
mov
xor
sub
sub
mov
add
xor
dec
outsb
test
jns
out
mov
or
repnz
push
scas
mov
pop
js
int3
testl
cmpsb
adc
imul
int
cs
dec
cmpsb
gs
cmp
cltd
sbb
inc
jmp
xchg
fstps
pop
std
pusha
inc
inc
outsl
outsb
mov
pop
stos
pop
lds
xorl
mov
adc
mov
notl
fsubrs
cwtl
int3
ds
jl
call
add
jbe
dec
add
sub
hlt
and
sbb
out
jg
mov
repz
inc
cld
out
and
mov
sbb
les
leave
bound
add
loopne
scas
leave
shl
mov
cmp
jns
pop
je
out
jge
out
sub
les
sti
xchg
mov
mov
pop
popa
test
repz
pop
sub
fiaddl
lock
insb
js
jmp
mov
cmp
pop
aad
xor
lret
cmp
sbb
dec
cmp
repnz
cmpl
xorb
pop
xlat
loope
sbb
aaa
call
and
mov
ret
nop
insb
std
lret
xor
in
add
aad
ret
es
cltd
jle
cmp
jno
xchg
out
push
xorb
cmc
push
imul
or
push
add
adcb
push
dec
int3
dec
outsb
push
movsl
int3
rorl
adc
jb
lcall
rcl
and
lds
fs
enter
mov
lret
mov
jl
inc
push
push
push
out
mov
cmp
dec
mov
movsb
jb
test
inc
in
sbb
adc
outsl
dec
push
mov
or
es
xor
jecxz
push
loopne
or
leave
ljmp
lret
jg
mov
inc
xchg
add
ficomps
scas
fidivrs
setae
mov
push
scas
or
int3
add
lret
clc
dec
xor
inc
jge
mulb
and
push
jg
lcall
lret
int3
mov
adc
and
push
pop
jns
cwtl
testb
imul
adc
xchg
jo
fs
cwtl
mov
imul
cs
sar
insb
or
idiv
cli
ja
sub
mov
and
aaa
inc
dec
mov
int3
add
addr16
aam
fildll
fsubs
out
cmp
fsub
mov
or
push
mov
sar
pop
mov
push
shl
cmp
inc
mov
cmp
int
cmpsl
leave
sub
jl
rclb
pop
loope
fidivrl
lret
push
dec
int
sub
fnstenv
mov
leave
mov
ljmp
subb
es
sub
in
lock
ss
shrb
inc
pop
aam
imul
cmpsl
xorb
loopne
sub
xchg
cmp
mov
jg
addl
or
mov
jle
jg
add
aam
arpl
xchg
xchg
aam
stos
dec
bound
push
cltd
jne
subl
mov
repz
in
inc
hlt
mov
pop
mov
pop
mov
sbb
popa
shlb
test
aas
ror
inc
jnp
insb
adc
data16
addl
push
les
inc
mov
rcll
mov
pop
jle
lcall
bound
and
jl
loope
inc
mov
pusha
test
into
aam
pop
popf
sbb
jbe
arpl
xor
pop
mov
pop
std
dec
xlat
mov
hlt
movsb
mov
jb
lcall
bound
xchg
ret
in
lods
pop
add
jnp
ja
xor
addr16
ret
insb
sahf
push
dec
xchg
repz
jb
shrl
push
hlt
jg
add
push
scas
jge
mov
dec
and
pop
enter
xchg
stc
lcall
push
jl
in
sub
repz
dec
jecxz
fldenv
xor
add
cmp
daa
hlt
adc
fsts
cs
jo
jne
add
inc
pop
insb
scas
and
inc
ss
lcall
test
xchg
lods
pushf
int
push
fs
pop
and
out
dec
fcmovnu
or
jl
fwait
sub
xor
add
stos
in
int
inc
xchg
gs
mov
jno
xor
xchg
pop
pop
sahf
iret
fistpl
push
lahf
js
pop
cld
imul
mov
imul
add
bound
jmp
outsl
mov
cmp
in
mov
sbb
repnz
mov
jnp
pop
clc
inc
clc
pop
adc
xchg
dec
pop
mov
divb
push
pop
mov
nop
hlt
adc
xor
into
jecxz
mov
fsubs
movsb
cmp
incb
popf
mov
in
pop
mov
xor
add
cli
in
lods
mov
mov
jnp
dec
hlt
jno
dec
lods
mov
mov
cmpb
push
sub
xchg
pop
shll
xor
pop
jge
push
dec
outsb
mov
out
and
and
pop
jle
js
ret
stc
sbb
clc
dec
sti
mov
inc
iret
sub
ss
sub
in
sbb
cmpsb
stos
popa
pusha
lods
xchg
mov
cmp
into
jecxz
inc
jle
mov
dec
or
and
int
push
and
sbb
push
ficoml
es
cmc
dec
mov
inc
xor
jno,pn
leave
or
loop
testl
jle
pop
lcall
xor
iret
or
push
mov
dec
imul
inc
sbb
scas
mov
pop
jne
in
jg
push
jns
push
mov
xchg
mov
sbb
jne,pn
aas
push
mull
sar
mov
shr
jnp
mov
jge
mov
aad
push
xor
scas
fidivs
mov
xor
int3
leave
xor
gs
outsl
jae
mov
call
dec
cmp
xchg
push
push
aas
imul
and
push
and
cmp
dec
jg
and
mov
xchg
sbb
mov
movsb
outsb
mov
inc
cmp
add
mov
addr16
stos
imul
lock
cmp
mov
sbb
mov
or
and
aad
das
xchg
out
fs
dec
cmp
pop
fsts
nop
outsl
and
sbb
cli
inc
xchg
cmp
out
or
inc
xlat
movsl
pop
sbb
inc
jae
mov
scas
cmp
mov
sub
loope
inc
cmp
das
push
mov
mov
ss
call
add
cmpsl
pop
cmpsb
xchg
popa
enter
test
arpl
mov
insl
pop
jg
pop
test
fbld
addr16
or
inc
orb
jmp
xchg
cmp
lret
sub
pop
cmp
clc
add
mulb
aad
icebp
fstp
and
dec
leave
sbb
xor
mov
push
jmp
hlt
jge
xor
push
adc
xchg
sbb
inc
mov
lock
add
push
push
pushf
adc
movsl
jnp
inc
in
jb
cmc
ds
jp
jb
sar
scas
insb
mov
inc
adc
and
aam
shll
xchg
inc
ds
imul
sbb
popf
add
xchg
mov
jns
mov
aam
xlat
mov
clc
aam
lds
ljmp
repz
stos
das
je
int
leave
sbb
adc
lret
mov
cmp
xchg
mov
jg
fs
mov
sti
and
mov
adc
js
cmp
loopne
xor
push
fildll
int3
ret
lret
fdivrs
aam
fisubrs
out
xchg
mov
inc
and
popa
add
mov
sti
shll
mov
xchg
jne
jae
push
fsubrs
lahf
cmp
pop
adc
push
xchg
fwait
adc
int
xchg
and
adc
adc
lods
inc
xchg
icebp
push
sub
rorl
dec
mov
stc
adcl
or
mov
push
mov
es
dec
mov
hlt
mov
mov
int
scas
stos
or
in
popf
sahf
repz
loopne
push
inc
in
pop
ret
mov
push
sub
push
inc
mov
insb
push
push
cmpsb
inc
mov
add
push
xadd
outsb
add
inc
ja
jmp
sti
push
sahf
fistpl
cmp
outsb
lret
cmp
xor
ja
add
push
jge
mov
aas
stc
int3
xchg
ds
gs
sub
dec
sub
cmp
pop
ror
push
xchg
cmp
or
mov
xchg
add
mov
sbb
lcall
loopne
insl
push
fstps
mov
xchg
add
movhps
outsb
jbe
xchg
sarb
xchg
hlt
fsubl
mov
out
xchg
fwait
dec
or
fsts
xchg
mov
cmpsb
imul
imul
mov
clc
and
or
sbb
or
xchg
addb
psllq
inc
pop
imul
xchg
inc
inc
flds
sub
jbe
adc
xlat
cmpsl
xchg
sarl
cmp
inc
cmp
lods
pop
adc
rcrl
into
jb
and
push
push
add
out
jmp
out
and
fs
cmpsl
mov
pop
aam
fisubs
mov
inc
push
pushf
xlat
shl
push
mov
mov
lods
popa
ror
clc
jmp
popa
xchg
outsl
cmp
addl
lcall
out
dec
leave
fstl
xor
sbb
mov
int3
inc
mov
popa
and
subl
mov
add
or
pop
daa
xchg
xchg
inc
in
push
loopne
jp
cld
mov
xchg
adc
mov
or
inc
jbe
insb
or
daa
imull
pop
cmc
movsb
sbb
inc
and
cmp
jle
add
sbb
mov
out
out
sahf
movsl
push
mov
aam
lret
add
outsl
in
xor
dec
lods
outsb
pop
lcall
inc
or
aas
mov
insl
sub
stc
xchg
mov
xchg
add
movsb
fbld
shlb
pop
inc
insb
cmp
imul
push
jnp
ss
and
cmpsl
insl
les
out
cmpsl
mov
mov
or
adc
add
and
cmp
pop
int3
xchg
pop
mov
push
outsl
jnp
mov
inc
vmread
fstps
sbbl
stc
aad
push
stc
leave
mov
sar
jp
xchg
test
mov
inc
out
adc
dec
shlb
add
movsb
push
add
pop
pop
and
out
and
jae
or
ficomps
add
popf
adc
pop
repnz
sahf
insb
mov
cltd
mov
outsl
filds
call
inc
adc
and
adc
aad
adc
and
fcoms
into
mov
or
pop
hlt
and
iret
fildl
add
ret
cmp
into
shlb
inc
sub
xor
add
mov
test
outsl
xlat
shlb
and
inc
inc
and
into
lods
scas
lret
das
pop
dec
pop
push
icebp
and
std
loop
jbe
shlb
repz
mov
mov
inc
mov
icebp
lds
mov
std
push
cs
or
imul
pop
mov
sbb
pusha
sbb
scas
in
and
sar
cmp
sbb
and
cmp
lahf
rcr
mov
lahf
cmp
iret
mov
push
out
adc
fimull
mov
push
test
sbb
pusha
leave
and
sub
out
inc
repz
add
popa
mov
or
ja
loope
xchg
divl
jnp
cltd
push
daa
pop
mulb
mov
pop
sbb
sahf
cmpb
xorb
sbb
stos
mov
push
outsb
mov
sub
or
or
out
mov
mov
cltd
or
fimuls
jecxz
mov
lds
xchg
pop
xchg
adc
pushf
test
mov
repnz
es
sub
xchg
cli
dec
mov
fs
mov
in
xchg
clc
test
jmp
mov
mov
in
mov
sbb
data16
sbb
inc
pop
aas
out
adc
push
sahf
or
and
push
js
icebp
pop
add
sbb
push
xchg
jb
xchg
dec
or
lcall
cmp
nop
add
addr16
xchg
notl
lret
out
add
out
jmp
push
decb
in
jle
jge
add
and
dec
xchg
test
add
adc
pop
fwait
cmp
push
xlat
pop
ljmp
cmpsl
and
push
nop
mov
js
dec
sub
faddp
cmpsb
clc
inc
lds
leave
lods
push
aas
push
push
cmpsl
dec
xor
lods
enter
bound
scas
sbb
pop
addr16
mov
jo
lret
popf
sbb
add
xlat
push
test
ja
icebp
adc
fs
mov
mov
pop
pop
movsl
or
mov
xor
and
aas
or
or
xor
outsl
add
out
jg
bound
enter
push
aad
cmpsb
lret
cld
adc
lret
or
into
ja
fisubs
mov
out
push
push
in
xchg
loope
jg
cmp
mov
jg
cltd
adc
cmp
jmp
mov
xor
adc
sbb
aas
loop
xor
pop
xor
jb
fldl
bnd
sub
in
mov
fsubl
cld
mov
je
xor
imulb
fsubs
xchg
xor
mov
ljmp
loop
push
sbb
pop
sbb
imull
scas
mov
fstps
decb
sbb
movsb
lea
test
pop
enter
jb
out
fldcw
inc
ret
lods
mov
dec
in
mov
mov
sti
sbb
pushf
jmp
nop
mov
test
call
adc
mov
and
sub
lods
xorl
ss
int3
shlb
ja
divl
stos
loope
in
cwtl
call
add
xlat
aad
xchg
lret
enter
arpl
andb
icebp
mov
in
in
sbb
insl
or
pushf
dec
rcll
inc
int3
les
into
mov
sti
popa
in
insl
es
scas
fdivrl
je
data16
and
ja
das
das
add
fbld
cmpsl
test
rcll
mov
arpl
sti
outsb
jnp
icebp
into
dec
es
addr16
vsqrtps
push
jge
mov
pushf
repnz
xchg
and
hlt
mov
inc
dec
sbb
sbb
mov
lods
nop
dec
push
sub
pop
pop
mov
in
ret
adc
insl
jnp
push
lahf
mov
push
or
insl
bt
mov
push
imul
push
push
adc
xlat
dec
sti
push
fistl
pop
out
sbbb
pop
clc
rcrl
push
lret
lock
rclb
adc
nop
pop
gs
aad
lcall
test
mov
mov
pop
cmp
and
sub
lcall
xchg
xchg
dec
xor
fsub
mov
mov
arpl
insl
shr
loop
xor
dec
mov
or
push
test
repnz
call
xchg
inc
jne
lret
push
lcall
xchg
divb
pushf
pop
fidivs
pop
jb
push
push
mov
rorl
scas
arpl
ret
mov
and
test
inc
les
das
pop
arpl
popf
lea
cmc
sbb
aam
andl
adc
fucomp
out
pop
dec
scas
rcl
inc
dec
rclb
mov
mov
dec
stos
sub
loop
sub
lret
mov
xchg
adc
jecxz
mov
leave
or
dec
mov
mov
cs
and
adc
popf
bnd
ret
test
in
dec
xor
dec
pop
or
mov
xchg
jge
and
inc
lahf
popa
movsb
jae
lret
test
mov
jae
js
pop
sub
xchg
aad
pop
insb
xchg
fnsave
iret
adc
enter
pop
sbb
daa
aad
call
xor
mov
and
out
add
jle
push
jne
jg
add
mov
cmp
gs
and
or
in
shlb
and
dec
lods
add
cmc
sub
ret
imul
lock
ret
lock
icebp
inc
xor
inc
in
cmc
pop
or
cwtl
dec
pop
sbb
add
jg
or
repnz
sti
mov
repz
fcoms
xchg
sub
popa
stos
scas
push
in
xor
sub
enter
pushf
push
pusha
xchg
mov
sub
les
and
rcrl
out
scas
cmpsl
and
addr16
mov
add
pop
aam
dec
sbb
ret
bound
sti
push
xchg
push
or
add
add
shll
mov
push
sar
aaa
jb
mov
cwtl
cwtl
icebp
or
mov
inc
jge
loop
sub
call
dec
xor
pop
pusha
push
pop
sahf
movsl
mov
cmp
mov
pusha
add
pusha
or
mov
or
lea
and
dec
aaa
sub
push
pop
iret
sub
sbb
pop
pop
aad
jp
mov
int
stos
xchg
js
jno
sub
inc
push
inc
movsb
mov
dec
pop
cld
outsl
xchg
fisttpl
jo
pusha
xchg
paddb
lret
cmp
lret
push
fstl
xchg
push
jg
push
ret
mov
pop
loopne
or
jno
jae
leave
push
dec
adc
lahf
jecxz
dec
jg
incb
dec
sbb
js
shll
pop
daa
shlb
add
sub
sub
sarl
mov
loope
add
dec
jmp
in
xchg
mov
adc
xchg
lcall
lock
jecxz
cli
mov
sbb
dec
in
jg
inc
mov
decb
aaa
fdivr
insl
and
cmp
es
fidivl
shrb
mov
mov
inc
dec
lret
and
adc
adc
and
lret
icebp
lods
mov
jae
sbb
push
jge
jnp
jns
push
stos
int
and
call
jno
jge
into
mov
add
jns
dec
mov
mov
adc
jns
les
pop
jae
and
out
mov
popa
xor
lock
leave
out
sbb
mov
push
adcb
movsb
mov
lds
cmp
dec
lcall
jo
fbld
and
loop
add
insb
popa
add
cmpsb
cmp
sub
adc
les
movsl
je
xchg
and
jns
xchg
xchg
push
ror
push
adc
out
popf
adc
mov
xchg
fcoms
pushf
mov
aam
xor
adc
mov
inc
es
xor
ds
jmp
fidivs
ds
and
insl
mov
or
jl
push
add
je
loopne
movsl
mov
inc
cmp
enter
cmp
cmpb
sahf
push
aad
std
mov
sbb
clc
mov
inc
dec
mov
imul
and
rcr
add
add
clc
test
inc
int3
mov
sti
roll
xchg
inc
xlat
inc
in
insl
push
scas
sahf
xlat
in
and
dec
shl
fwait
dec
xlat
into
shll
add
outsb
aam
scas
jg
ja
xchg
je
test
cmp
pop
add
fwait
lahf
cs
jg
push
inc
movsb
outsb
mov
pop
sahf
test
loopne
rcrl
cmp
push
xor
scas
adc
cli
sbbl
push
add
push
or
push
insb
testl
mov
loop
testl
cmpsb
insb
insl
xchg
push
aad
dec
jecxz
stos
pop
es
pop
movsb
push
lret
adc
jo
cmpsb
and
add
aam
jo
jg
or
jo
mov
and
add
push
out
inc
loope
dec
fwait
mov
mov
xchg
fadds
mov
xor
or
xchg
ficomps
sahf
sbb
in
les
sbb
adc
in
bound
cmp
xor
and
or
mov
imul
int
daa
aaa
stos
jmp
and
mov
add
xor
and
filds
xor
in
xchg
add
pop
add
adc
inc
xchg
aam
inc
dec
adc
pop
inc
and
add
push
push
imul
ret
jmp
mov
dec
rol
int3
cmp
imul
add
push
int3
lock
lcall
scas
sub
aad
push
aam
sub
pop
iret
in
lods
fwait
dec
adc
push
inc
cli
out
xchg
nop
lds
andb
iret
sub
and
pop
push
xor
adc
dec
pusha
in
jne
jne
dec
es
arpl
pop
dec
xchg
sub
dec
lock
cs
sti
cmp
and
sti
or
cmp
mov
xor
pop
dec
ja
mov
inc
loope
sub
push
xorl
stos
pop
lahf
jmp
not
cmp
push
fwait
rcrl
jns
jecxz
or
fidivrs
cmp
add
test
in
fstps
push
pop
insl
push
cs
jg
adc
shlb
or
jge
aas
pop
lcall
mov
test
push
in
sub
mov
cmp
das
pop
and
pusha
mov
arpl
inc
loope
push
push
add
daa
or
mov
pop
stos
imull
test
sti
mov
mov
and
mov
jge
ss
mov
iret
sub
cmp
inc
ret
out
adc
cmpsl
stc
movsl
xor
loop
je
outsl
sub
sbb
or
ret
inc
gs
sub
xchg
adc
inc
outsb
gs
js
out
sbb
sub
sbbl
inc
push
dec
add
fwait
outsb
cmc
cmp
push
popa
push
mov
in
push
add
lods
fpatan
mov
stc
cmc
adc
xchg
scas
in
mov
xchg
shr
cmp
sahf
dec
fistpl
push
jo
cmpsl
jno
pusha
push
cmp
jo
xchg
cli
mov
lods
cmp
popl
xchg
rorl
stos
mov
jae
sub
clc
imul
data16
xor
push
pop
sbb
test
andb
out
xchg
jmp
mov
fidivrs
or
cmc
jo
frstor
js
insb
push
mov
fstpl
nop
icebp
jo
push
lret
dec
push
pop
mov
mov
sub
jle
outsl
pop
xlat
push
jne
lea
jmp
gs
xlat
mov
or
pusha
rorb
sub
mov
lahf
sahf
jle
cmpsl
rcrb
jge
dec
pop
adc
adc
sti
mov
jb
push
xchg
inc
xchg
sbb
mov
inc
pop
dec
fimull
sub
rolb
and
xchg
push
fcoms
cs
sbb
push
xchg
movsl
sti
loope
xor
test
push
sub
jnp
mov
sbb
mov
pop
or
into
std
inc
push
push
out
cmp
inc
stos
stc
push
pop
adc
dec
xchg
add
rclb
in
push
imul
mov
jp
hlt
mov
or
lods
out
cmp
dec
jne
and
xchg
xlat
xlat
inc
lods
xchg
add
clc
cmp
cmpsl
int3
cmp
inc
sbb
addr16
into
cli
ss
aad
mov
repz
cs
mov
adc
push
mov
pop
inc
in
stos
cmp
inc
mov
leave
mov
mov
mov
insl
fidivl
rolb
sub
adc
fcmovnu
fs
push
imul
cli
fs
les
pop
dec
fiaddl
and
icebp
xchg
pushf
inc
in
sub
sub
mov
add
orb
or
test
std
iret
pop
stc
scas
jl
dec
hlt
int3
xchg
xor
fsubrl
mov
cltd
adc
rol
js
pop
jne
sub
fnstenv
mov
and
fsubp
in
pushf
xchg
dec
into
xchg
icebp
arpl
out
aam
es
stos
or
gs
dec
std
hlt
int3
mov
aad
push
push
frstor
pop
cmp
imul
or
repz
fwait
add
mov
adc
clc
and
push
cld
xor
mov
sbb
lret
in
call
and
inc
pushf
xchg
inc
jb
aam
ljmp
push
xchg
mov
stc
mov
cwtl
cwtl
mov
pop
fnstcw
data16
add
push
dec
dec
test
ljmp
subb
xchg
mov
fistl
mov
mov
xorb
stc
nopl
loop
jle
or
push
movsb
adc
addr16
mov
mov
inc
dec
mov
add
adc
mov
loop
pop
cmc
inc
mov
mov
lret
insb
sbb
add
std
daa
popf
bound
inc
mov
insl
das
jmp
lret
xor
push
sbb
scas
pop
movsl
out
shlb
cmp
xlat
adc
testb
push
data16
dec
pop
arpl
shr
popf
in
lahf
popa
cmc
cmc
mov
aam
mov
push
cwtl
inc
scas
and
mov
and
into
stos
push
lock
xor
mov
or
lea
ds
ret
jno
lock
and
inc
push
push
stc
or
pusha
xor
arpl
add
and
xchg
in
jae
insb
adc
lahf
dec
cld
test
add
nop
lahf
and
outsb
out
xchg
outsb
test
add
call
pop
cmc
push
ja
push
sbb
gs
jge
and
pusha
popf
fisttps
popf
out
and
mov
in
fistpl
lret
sub
lret
repnz
sub
push
pop
mov
hlt
jns
or
sbb
loop
push
sbb
and
scas
push
fldt
jg
mov
dec
mov
popf
cmpsl
std
mov
stos
arpl
cmove
cmp
mov
insb
inc
dec
aam
xchg
insl
in
adc
xchg
xor
loop
shrl
sahf
pop
mov
repnz
dec
jno
inc
test
or
inc
rorb
fwait
cs
xchg
or
push
iret
xor
sarl
mov
sub
fiadds
test
fs
stos
ficoms
xchg
in
xorl
adc
adc
decl
add
repz
push
inc
pop
cmpsb
mov
mov
pop
xchg
jp
cmpl
jb
lcall
mov
mov
cmp
xchg
xor
xor
jb
sbb
movsl
cmc
jge
or
push
mov
jne
cmpb
adc
out
jo
xchg
popf
psubusw
test
jo
jbe
aaa
shr
std
jnp
push
fimuls
pop
fidivl
cmp
mov
lea
scas
cmp
push
cld
not
out
stos
in
dec
jnp
fisttpl
out
mov
into
fisttps
xchg
mov
movsl
pop
mov
mov
adc
into
dec
mul
xchg
sahf
adc
daa
push
mov
orl
dec
out
mov
pop
mov
fisttps
mov
repnz
rol
jl
fmuls
addl
clc
into
lock
push
push
movsl
mov
sbb
and
shrl
jbe
inc
xor
mov
sbb
nop
add
pop
xor
les
or
scas
push
inc
jb
arpl
fwait
jl
in
xor
jle
roll
add
dec
add
int
dec
or
movsb
lcall
scas
push
or
jno
les
addr16
into
hlt
rcrb
jecxz
push
out
dec
fwait
aam
ret
jecxz
pop
xchg
ret
add
popf
mov
cmp
xchg
movsl
jp
mov
inc
sub
mov
out
jmp
cwtl
add
insb
jecxz
cmp
mov
ret
add
sahf
in
roll
mov
in
dec
mov
lcall
out
rclb
cmp
sbbb
pop
mov
jb
lock
gs
mov
loope
pop
movsb
pushf
jmp
pop
or
int3
test
arpl
mov
stos
push
sub
ss
dec
adc
in
leave
aaa
cmp
imul
shl
xor
jno
mul
or
and
leave
loope
repz
pop
pop
xchg
add
dec
mov
out
hlt
mov
decl
xor
xor
pop
pop
and
push
fadds
test
enter
adc
addr16
mov
jae
stos
dec
sti
outsl
mulb
dec
inc
sahf
in
ret
cli
iret
lcall
in
xchg
xchg
xor
push
or
mov
insb
mov
pop
addl
gs
nop
or
inc
mov
adc
mov
dec
pop
pusha
aad
xchg
and
pop
in
dec
xchg
stos
outsb
cwtl
call
or
sbb
or
call
fldl
xchg
pushf
popa
fdiv
leave
into
pop
mov
dec
xor
adc
add
vpshufhw
popa
cld
jge
test
cmpsb
cmpsl
pop
sbb
push
dec
hlt
das
xchg
ficoml
mov
sub
movsb
rolb
xchg
pop
ret
std
xor
lret
xlat
lock
mov
ret
shr
mov
dec
pushf
out
pop
sahf
or
in
pushf
fdivr
testb
movsl
ret
xchg
dec
xchg
inc
sub
xchg
into
and
lcall
leavew
dec
fs
fistl
push
jns
dec
jl
and
fimuls
pop
popf
cmpsb
mov
sbb
mov
movb
add
ljmp
pop
mov
loopne
push
xchg
xor
add
jo
pop
mov
ret
xorb
cmp
and
xorl
out
mov
negl
mov
pop
add
arpl
cmp
push
mov
add
ret
push
push
in
jns
lret
dec
movsb
mov
add
fistpl
push
jne
movsl
mov
stc
xchg
mov
call
test
lcall
shlb
sbb
lret
out
mov
mov
es
movsl
jmp
push
es
mov
pop
xchg
sahf
aas
cltd
int3
popf
fs
or
ljmp
fistl
mov
lock
add
xor
test
int3
add
xor
push
ficomps
loopne
push
dec
movsl
and
movsl
or
pushf
pop
jnp
pop
xor
sbb
jo
ds
imul
out
test
sysexit
movsb
cmp
cmp
and
dec
std
xor
faddp
jno
gs
stos
push
pop
mov
in
mov
push
sahf
cwtl
pop
fidivrs
pushf
jne
pop
adc
cwtl
cmp
imul
dec
sbb
dec
dec
test
outsb
push
pop
xchg
mov
mov
testb
movb
sub
jl
mov
lcall
push
test
in
mov
shl
ja
add
mov
adcl
mov
jb
mov
dec
cmpsb
mov
nop
xor
and
adc
mov
int
or
inc
imul
jns
sbb
repz
cltd
jmp
or
mov
cmp
cld
inc
enter
mov
fcmovb
mov
sti
shrb
clc
pushf
xlat
mov
and
xchg
mov
mov
mov
mov
mov
aas
pop
icebp
jp
cli
cmovnp
ss
pop
mov
xor
mov
lds
or
ljmp
scas
call
scas
aaa
outsb
or
lock
adc
outsb
mov
xor
jno
pop
xchg
sbb
in
sub
vpaddw
das
arpl
aaa
cmpsb
imul
adc
ljmp
popf
cld
fstpt
es
xchg
mov
mov
dec
lret
fldenv
inc
cmpb
sub
es
dec
lds
or
mov
outsb
add
leave
scas
and
mov
push
loopne
pop
cmp
ficompl
xor
cmp
int
ror
push
jmp
xor
sbb
in
pop
int
mov
dec
ffreep
scas
jns
cmp
xor
mov
jne,pn
int
loop
mov
xchg
lahf
shlb
mov
insb
repz
into
sbb
jmp
out
inc
pop
int3
mov
js
inc
xor
andb
xchg
sbb
mov
sub
pop
addb
mov
fldl
mov
mov
out
pop
out
outsl
mov
into
inc
mov
sbb
lods
adc
push
aad
repnz
sbb
jb
push
cmpsl
enter
enter
shll
cmp
rclb
dec
decb
scas
or
popf
lea
mov
pop
fcoms
xchg
movsl
mov
outsb
and
cld
cmp
push
mov
test
pop
fcomip
xor
pop
xor
sub
stos
ret
jmp
jecxz
and
pop
mov
ss
mov
das
push
jmp
push
cmp
jno
and
dec
pop
insl
out
es
aad
lcall
push
mov
jg
decl
lahf
cltd
in
xchg
roll
lock
out
test
xchg
inc
pop
adc
std
and
push
push
fldt
mov
cmpl
mov
cmp
inc
mov
fdivrl
xchg
mov
push
mov
and
stos
xor
sub
rcll
jnp
inc
pop
lea
push
aad
xchg
mov
les
mov
pop
sbb
dec
imul
fcomps
not
dec
xor
imul
inc
or
shl
push
enter
mov
push
lahf
jl
or
add
jb
mov
xchg
add
jb
inc
scas
xor
lret
xor
ljmp
rol
shrl
repnz
jb
jecxz
dec
cmpsb
add
fbld
jne
inc
insl
mov
push
mov
idiv
imul
sbb
pop
es
push
fidivs
int3
int
out
loop
mov
xor
cmp
inc
add
add
push
xor
mov
int
inc
clc
inc
push
xor
shll
movsb
loope
fcoml
xchg
je
push
mov
mov
mov
lret
int3
inc
imul
rclb
lods
jmp
adc
ret
aad
stos
mov
aas
push
mov
pop
jns
ret
sub
add
test
popf
out
cli
addr16
jecxz
xchg
stc
sbb
inc
sub
xor
shlb
cmp
popa
mov
sahf
rol
cli
pop
add
test
mov
and
mov
xchg
mov
inc
cmp
sbb
andb
adc
mov
movsl
ja
jecxz
cmpsb
cmp
mov
sub
scas
mov
out
mov
sub
aam
sbb
nop
aas
cmp
in
adc
sti
xlat
mov
fucomip
cmp
pusha
leave
xchg
in
adc
adc
loopne
mov
push
roll
push
pop
mov
cmp
jge
mov
ljmp
sahf
mov
das
pop
cmp
push
iret
lods
cmpsl
pop
pushl
mov
cmp
or
cwtl
sarl
jle
cmpsb
cltd
pop
push
xchg
pop
adc
ds
dec
hlt
push
lods
sbb
scas
jp
pop
pop
fdivl
push
rclb
or
mov
jecxz
addr16
mov
mov
rcll
add
fwait
or
sub
stos
jne
dec
lock
dec
and
sub
in
xor
jecxz
xchg
data16
movsb
fs
movsl
pop
cmp
enter
nop
pop
dec
sbb
dec
imul
mov
mov
ret
imul
xcrypt-cbc
cmpsl
shlb
or
inc
inc
cmc
insl
push
dec
push
fldln2
aam
and
lds
jno
dec
insl
lahf
cmc
cmpsb
mov
xor
rclb
inc
pop
pop
ffree
sub
movsl
out
pop
lds
push
and
inc
adc
je
sarl
mov
enter
or
xchg
in
bound
mov
incb
pop
xchg
gs
clc
je
jo
pop
mov
mov
nop
movsb
lret
mov
outsl
mov
movsb
xchg
sbb
or
lret
dec
arpl
rcll
push
ret
addl
push
loop
jnp
push
push
mov
adc
je
push
std
cmp
shlb
xchg
xchg
adc
push
mov
roll
jp
fs
mov
or
adc
jg
icebp
add
nop
mov
inc
jb
cwtl
jmp
fcoms
mov
fldl
pusha
stos
inc
dec
mov
pop
lods
lret
sub
mov
ret
mov
bnd
jae
add
test
leave
push
movsb
push
dec
fsts
cmp
out
xchg
jnp
sbb
xchg
xchg
jecxz
xchg
ljmp
shrl
mov
test
sti
shll
aad
push
jl
push
sbb
int
jb
daa
andl
arpl
inc
inc
test
out
nop
pushf
add
pop
sub
imul
mov
jae
fistpl
sti
sbb
adc
mov
out
aas
cmp
pusha
push
dec
dec
lret
pop
push
sbb
fadd
mov
mov
ret
jmp
sbb
jne
fnstcw
outsb
mov
loop
nop
mov
nop
xchg
hlt
mov
sbb
test
notb
mov
inc
lcall
xchg
ss
mov
push
cmc
sub
orl
and
lds
js
movsl
add
mov
out
adc
and
fidivrs
fucom
jmp
dec
fcmovnu
mov
adc
mov
hlt
lcall
insb
and
xchg
pop
movsl
xchg
std
test
push
subb
jnp
xchg
pop
sbb
int3
rcrb
xchg
xchg
movsl
xor
iret
xchg
scas
mov
lret
mov
das
sbb
subl
cmp
stc
rol
and
or
inc
jmp
jg
and
mov
jge
out
mov
mov
ja
sarb
or
xor
and
push
movb
sub
rdmsr
dec
gs
loopne
mov
sub
fcmovb
inc
out
mov
dec
mov
int3
jns
xor
sbb
stc
insb
push
push
loop
ss
pop
test
in
jae
das
jle
movb
push
je
fisttpl
arpl
mov
lods
cltd
dec
mov
rorl
add
xchg
insl
mov
insl
ret
inc
das
cmp
pop
psllq
mov
mov
iret
lea
add
mov
imul
jmp
jo
add
mov
imull
mov
popf
fsub
clc
das
sbb
shlb
test
sahf
adc
ds
xchg
xchg
imul
sbb
and
fwait
sub
mov
fsubl
nop
inc
outsb
xchg
jg
push
jb
or
mov
leave
cld
ds
in
cltd
adc
add
popf
xor
add
dec
push
test
pop
mov
adc
pop
lds
pop
in
sbb
aam
push
out
lock
push
lock
pop
xlat
fsubs
inc
lahf
fwait
cmp
fmuls
imul
mov
daa
push
dec
mov
add
fnstcw
outsb
cs
jg
hlt
sbb
jge
xor
rclb
cltd
cmpsl
pop
cs
mov
repz
out
pop
inc
cli
test
jp
clc
imul
push
pop
cmp
repnz
loop
add
pop
pusha
jp
push
pop
ljmp
jns
pop
xlat
shr
ds
out
sbb
mov
xor
mov
sbb
pop
stc
inc
inc
pop
push
cli
jne
sub
dec
orl
jnp
add
js
mov
repnz
mov
jmp
lods
jp
adc
adc
ja
mov
pop
mov
adc
push
add
inc
and
rolb
rcll
mov
lcall
and
leave
xor
in
rcrl
lea
adc
lret
jne
neg
fisttpll
adc
jne
push
sub
cld
hlt
lock
add
scas
mov
xchg
outsb
jae
icebp
arpl
push
inc
shrl
mov
inc
les
sbb
out
cmpl
mov
or
imul
int
and
in
scas
sbb
inc
ljmp
mov
jns
stos
jecxz
sub
mov
int
sysenter
jle
or
sub
test
adc
jne
dec
hlt
add
fstpl
cs
daa
mov
or
jmp
mov
push
out
outsb
xacquire
addr16
pop
ss
cs
mov
repnz
int
sbb
fcomps
iret
and
cmp
int3
mov
inc
mov
call
insl
and
data16
or
stos
popf
jmp
mov
push
push
and
xor
inc
sub
bound
ficoms
add
inc
into
mov
inc
dec
bound
xor
inc
push
lret
nop
push
fs
into
inc
push
mov
popf
push
idivl
mov
or
push
mov
sarb
adc
test
add
jbe
pop
mov
stc
xor
cld
je
imul
in
roll
mov
sub
or
sub
in
mov
sub
lahf
pop
icebp
sub
inc
js,pt
adc
mov
cltd
adc
sbb
xor
mov
sbb
mov
dec
cli
rcrl
ret
sahf
xchg
data16
dec
mov
addr16
mov
sahf
mov
adc
pushf
shr
lods
add
adc
out
dec
subl
adc
lcall
inc
push
stos
cli
jo
or
and
or
shlb
mov
outsl
fisubs
and
or
mov
pop
xlat
mov
adc
lret
mov
or
ret
sub
mov
mov
fidivs
cmp
aaa
jl
fimuls
dec
pop
enter
fucomi
aaa
adc
cmc
in
js
xlat
and
dec
mov
insb
cld
sbb
ljmp
repnz
mov
adc
xchg
cmpsl
pop
or
dec
nop
sbb
sub
mov
mov
hlt
out
pop
jno
and
add
or
rcll
mov
loope
sub
rep
and
js
in
mov
mov
nop
movsb
lock
xchg
in
add
sarb
rorb
xor
in
test
cmp
dec
add
pop
mov
sbb
sbb
in
dec
sub
or
pop
popa
dec
jo
sti
mov
pop
cmp
arpl
scas
out
je
iret
xorl
and
movsb
leave
add
push
mov
cmp
movsb
inc
push
and
push
inc
repnz
popa
jno
fwait
xchg
lret
test
aaa
mov
addb
shlb
sti
inc
mov
cmpsl
lcall
sbb
jne
jb
add
mov
gs
int3
scas
int3
pop
clc
enter
inc
bound
rolb
out
mov
xchg
jbe
ds
sarl
int3
scas
fisubrl
das
enter
fimuls
xchg
cltd
xchg
push
sbb
lock
scas
push
mov
push
add
inc
arpl
xchg
push
sahf
cmp
push
or
hlt
fistps
mov
ss
or
stos
inc
and
sub
cmp
scas
adc
mov
mov
sub
mulb
jg
imul
test
aas
dec
out
cli
mov
in
dec
int
jns
jmp
repnz
dec
add
fwait
dec
mov
add
cmp
push
mov
idivb
movsb
aad
pop
fidivrs
jae
mov
scas
in
aam
div
dec
xor
pushfw
mov
gs
jmp
sti
mov
movsl
jo
in
push
jnp
out
aam
ret
fucomip
pop
stc
mov
add
push
push
mov
sub
arpl
sub
jecxz
dec
in
rcll
add
dec
push
test
lahf
xchg
xor
dec
adc
es
iret
inc
out
inc
cmp
mov
dec
adc
sarl
fs
pandn
ljmp
mov
cltd
inc
cwtl
hlt
int3
dec
idivb
into
popa
repz
xchg
bt
and
cld
hlt
insb
dec
pop
pop
out
push
shrb
jns
or
arpl
inc
mov
pop
mov
pop
loopne
popa
lret
adc
jmp
inc
sbb
sbb
sub
add
mov
in
aas
mov
insl
sbb
pop
and
pop
int3
enter
push
lock
sbb
mov
notb
mov
cmpl
cwtl
or
mov
adc
or
xlat
movsb
mov
movsb
lea
shrl
mov
sbb
push
int
cwtl
cmp
dec
out
inc
lods
leave
xlat
iret
out
sbb
push
push
mov
jbe
enter
inc
mov
mov
inc
addb
ret
cli
test
imul
fidivl
mov
decb
shl
mull
adc
mov
pop
iret
or
incb
mov
je
jns
jae
inc
cmpsl
cmpb
mov
xor
out
je
push
mov
add
out
mov
sbb
fwait
jo
dec
das
cltd
and
out
xchg
and
add
mov
jmp
test
fcoml
setb
xor
mov
int3
out
jae
movsb
cmc
cmpsl
xor
fwait
repz
insl
dec
inc
xlat
push
sbb
and
cmp
jbe
add
adc
push
sub
and
mov
lods
pop
scas
pop
push
popf
or
mov
adc
testb
jle
shrb
cs
mov
imull
stc
outsl
call
incb
in
popf
fmull
cmc
jmp
decb
cmc
push
sbb
push
cmp
mov
and
mov
adc
push
pop
js
scas
jnp
fisubs
jnp
aad
in
pop
xor
adc
mov
clc
add
jge
inc
inc
pop
cs
mov
mov
or
cmpsb
add
leave
push
jle
outsb
insb
daa
jecxz
ret
stos
out
push
sbb
into
xchg
sbb
xchg
adc
call
and
cmp
mov
shll
and
inc
cld
add
jb
xor
aam
in
mov
mov
dec
repz
pushf
test
xchg
ljmp
dec
mov
gs
cwtl
ss
dec
mov
pushf
lcall
fwait
push
push
mov
dec
and
push
sbb
and
pop
fdivrl
mov
shrl
dec
xchg
sub
pop
mov
mov
and
mov
xlat
ja
les
out
mov
mov
cmpb
mov
rsqrtps
dec
ds
ss
sub
daa
cli
in
mov
dec
pop
ret
lock
pop
and
pop
cmp
pop
cmp
inc
sub
out
movsl
cltd
test
adc
int3
cmpb
es
jb
xchg
inc
insl
fbstp
jl
neg
xchg
sbb
mov
stc
pushf
sbb
jecxz
dec
and
aam
out
insl
fwait
cld
mov
lea
sbb
rcll
jns
pop
lods
stos
shll
fbld
adc
or
and
xchg
inc
mov
nopl
call
push
sub
in
jmp
jle
jecxz
loope
pop
stos
push
dec
mov
or
lret
cmpsl
inc
fisubs
pop
shrb
or
divl
fnstsw
int3
push
repz
addr16
mov
ljmp
out
jae
jbe
mov
hlt
popa
rcrl
rol
sbb
enter
pop
aam
xor
cmpsl
leave
mov
push
testb
pop
add
daa
idivl
pop
les
movsl
inc
pop
mov
xchg
xor
pop
lock
mov
pop
pop
dec
cmp
and
pop
sbb
jge
push
test
dec
lret
enter
int
and
pop
mov
mov
cmp
stos
jbe
jle
or
pop
into
add
sub
out
push
test
jns
popa
cmp
andb
jecxz
data16
lods
ljmp
jp
ficomps
cli
aam
inc
rcrl
xchg
cmc
jmp
ds
xchg
cmpsl
mov
xchg
imul
cwtl
lahf
pop
add
loope
push
shlb
aaa
test
or
jl
mov
hlt
adc
clc
fnstcw
pop
mov
jge
xor
cmp
xchg
jnp
pop
cltd
push
outsb
inc
mov
imul
fnstcw
cwtl
xor
aam
mov
sub
out
mov
sbb
scas
pop
ror
mov
xchg
out
jo
xchg
push
mov
jcxz
pop
subb
mov
fadd
pop
sbb
outsb
dec
outsl
add
sbb
mov
mov
int
es
cltd
les
fisttpll
scas
push
aas
cmp
aam
jecxz
cmpsl
pusha
pushf
mov
add
fwait
dec
jns
je
mov
dec
stos
sahf
adc
mov
jo
shlb
lea
pop
cmpsl
pop
push
sahf
out
outsb
mov
xchg
mov
push
push
inc
dec
cmp
add
push
test
ret
fcomps
cld
fsubrs
movsb
inc
popa
sub
fcoms
lcall
icebp
inc
sub
push
into
pop
daa
lret
dec
mov
std
cltd
mov
jl
mov
sbb
xchg
in
pop
jle
cmp
mov
jbe
sbb
sbb
repz
mov
hlt
push
rcrb
push
lret
iret
inc
adc
cmp
movsl
sub
fwait
loope
loopne
data16
je
and
popa
out
scas
mov
inc
movsb
outsl
xchg
or
xchg
mov
scas
iret
leave
ja
arpl
outsl
cmpsl
sub
dec
gs
subb
sub
inc
addr16
mov
lock
push
mov
xchg
fs
xlat
es
or
movl
jb,pn
cmpsl
imul
loopne
ja
decb
cmp
inc
pop
sbb
pop
and
lret
xchg
and
mov
loop
or
ljmp
mov
inc
popf
mov
jmp
cmp
ja
adc
lods
into
or
add
cmp
mov
orps
fs
cmp
inc
imul
xor
mov
in
mov
popa
enter
add
clc
lcall
lods
dec
or
lods
out
adc
mov
out
out
add
pushf
sub
push
aaa
js
dec
dec
subl
xchg
sub
xor
push
adc
lock
adcl
add
das
aad
sbb
jp
push
test
mov
or
and
push
mov
inc
jns
pop
xlat
leave
mov
or
lcall
fxtract
je
sub
pop
mov
xchg
inc
in
cmpsl
jmp
in
outsb
pop
cmp
jae
testl
lahf
dec
add
add
adc
les
cmc
dec
test
mov
xchg
imul
pop
xchg
mov
jp,pt
aaa
push
jmp
pop
mov
mov
dec
dec
xchg
mov
test
roll
ret
inc
xor
mov
pxor
insb
jge
shl
ljmp
push
and
dec
add
cs
cli
xor
push
xchg
int
btc
push
mov
jnp
icebp
cmpsb
stc
mov
inc
ja
push
shlb
add
repnz
psubusb
mov
daa
das
xchg
nop
js
jns
out
test
leave
inc
jp
inc
push
lret
sar
dec
pusha
gs
jl
inc
loopne
push
xchg
push
jecxz
addb
push
pushf
adc
xchg
mov
and
movsb
push
in
movsb
insl
out
sbb
ret
jge
xor
mov
xchg
nop
jle
add
mov
loop
nop
int
mov
pop
sub
lcall
mov
icebp
mov
and
or
clc
std
out
mov
mov
repz
repnz
das
adc
xor
in
pop
jae
xorb
lcall
sub
pop
lea
lock
mov
jae
jb
pop
sub
sarb
add
push
push
push
jo
ja
add
inc
test
pop
or
pop
sbb
mov
int
rclb
decl
hlt
scas
bound
adc
js
add
and
daa
pop
leave
push
jmp
cltd
mov
pop
jmp
pop
in
pop
push
adc
lds
cmp
in
jo
mov
iret
xor
rclb
faddp
mov
sbb
xchg
xchg
xchg
sbb
ret
mov
sub
addr16
mov
xchg
stos
pop
cli
push
xor
ret
sub
pop
dec
je
cwtl
dec
xor
loope
pop
pop
shlb
aaa
xlat
push
or
jge
aam
and
push
neg
pop
cwtl
jb
dec
in
adc
lds
cmp
fcompl
cmp
pop
jl
out
add
adc
jecxz
xchg
dec
call
dec
iret
add
imul
std
mov
cmp
roll
lret
and
push
sub
mov
push
and
test
push
xor
insb
int
inc
je
lahf
jmp
notl
clc
andl
sub
ja
cmpsl
lds
mov
mov
xchg
lods
inc
mov
lahf
lds
push
scas
rcl
insb
fdivl
pop
push
mov
insb
and
cli
mov
push
xor
adc
es
je
xor
or
fadd
movsl
sti
movsl
inc
out
stos
xchg
fldt
xchg
push
imul
das
test
lcall
lock
lahf
sbb
xor
mov
int3
push
daa
or
push
js
pop
adc
pushf
fsubl
ljmp
push
xor
sub
aam
test
sub
fs
dec
inc
mov
xchg
mov
les
inc
or
xchg
xor
cwtl
sub
dec
fwait
sahf
mov
lret
out
and
pop
rcll
mov
test
mov
enter
jmp
push
dec
test
repnz
push
dec
stc
bound
jne
jns
repnz
insb
out
jmp
mov
test
inc
arpl
popa
test
mov
xchg
sub
lea
mov
inc
movsb
subb
pop
or
test
lds
lds
test
das
shll
adc
fsubs
out
loop
ljmp
pop
cli
xchg
push
add
cmp
mov
fdivs
addr16
push
mov
les
mov
jb
mov
das
sub
das
pop
sbb
xor
or
xchg
jb
jge
jecxz
sbb
push
sbbl
das
xchg
inc
shrb
out
inc
mov
ljmp
mov
aad
and
pop
jmp
jno
dec
or
cs
fists
sbb
orb
mov
fisttps
mov
xor
pop
lahf
push
adc
push
sti
arpl
or
incb
jne
rclb
dec
stos
imull
inc
push
mov
inc
adcb
ljmp
jne
jmp
loopne
test
jno
jbe
and
and
jae
shrl
xor
pop
and
sbbl
jne
mov
icebp
inc
lods
leave
lahf
fidivs
add
imul
or
and
cmp
mov
dec
fildl
mov
or
ds
and
pop
les
ds
adc
stos
ss
push
movsl
sbb
sbb
cwtl
shll
push
jecxz
xchg
int3
jp
xlat
enter
lock
jb
pushl
mov
mov
gs
add
fcmove
inc
ret
mov
gs
or
test
add
cltd
incl
fsubrl
inc
jne
iret
inc
push
push
rcl
jne
leave
loop
jns
cmp
and
mov
xor
inc
es
mov
pop
and
mov
xlat
movsl
gs
push
pop
shlb
stos
sbb
jp
xchg
lcall
push
add
movups
or
push
adc
fld
test
adc
in
pop
outsb
inc
push
stc
mov
pop
adc
sub
mov
pop
jae
ljmp
jle
dec
lods
cmp
cli
mov
mov
das
lea
das
loope
sbb
pop
xor
cli
mov
jb
jo
dec
rcr
dec
mov
mov
daa
inc
les
test
js
sub
and
fstp
lock
jp
sbb
in
push
mov
fcoml
lahf
fisubs
imull
pop
std
or
sahf
jecxz
inc
cmp
leave
std
cltd
cmp
xor
cmc
push
cld
sti
mov
ja
pop
pop
mov
cld
mov
inc
or
lock
scas
pop
mov
insl
insb
add
sub
pmullw
fwait
or
int
sbb
add
jne
and
mov
mov
loopne
sub
mov
ja
into
into
add
testb
sbb
jne
sbb
hlt
arpl
fildll
shll
pop
jle
hlt
aam
imul
jo
hlt
cwtl
into
pop
xchg
movsb
and
sub
cmp
push
dec
icebp
orb
inc
cwtl
imul
test
add
lock
pop
push
xchg
shll
xchg
xor
fs
jmp
insl
mov
mov
and
lods
gs
fiaddl
lock
or
sar
adc
mov
out
pop
mov
mov
sub
mov
or
mov
sbb
sub
add
ss
jns
mov
lods
mov
inc
sub
and
setbe
mov
mov
cmp
jne
cmp
jo
addr16
jb
lea
loopne
outsb
cltd
and
cmp
movsb
dec
dec
and
notb
push
mov
in
movsb
pop
cmp
test
dec
addr16
pop
and
movsl
imulb
mov
shl
jnp
add
sub
sbb
pop
jb
lock
adc
imul
xor
jmp
lea
clc
xchg
lret
repz
mov
mov
or
adc
push
cld
sbb
dec
aaa
out
enter
sbb
jne
adc
imul
push
pop
js
adc
lret
cltd
xlat
xchg
cmp
rcrw
mov
dec
sub
xor
add
mov
inc
ljmp
repnz
loope
cmp
bound
data16
sbb
scas
mov
test
mov
add
lea
sbb
ljmp
fisubrl
xchg
sub
scas
and
add
push
or
call
test
pop
rclb
or
cmp
mov
and
or
call
mov
pop
enter
loop
xor
out
leave
aad
mov
push
pop
push
iret
sti
daa
jne
mov
xor
sub
stos
jb
sub
lds
or
pusha
out
adc
in
ret
arpl
mov
push
push
adc
cmp
inc
mov
hlt
cmp
xchg
pushf
mov
sbb
mov
jecxz
sbb
add
fnstsw
mov
adc
xchg
sbb
jae
test
hlt
or
cmc
add
jae
sbb
sbb
mov
insb
dec
dec
push
arpl
push
rol
stos
sbb
mov
jecxz
addr16
out
cs
lret
inc
mov
std
add
cmp
pop
insl
in
stos
inc
xor
shrb
mov
and
sbb
flds
and
mov
les
imul
xor
loope
mov
iret
mov
adc
imul
mov
and
adc
jnp
mov
bound
pop
xchg
sbb
or
rol
shll
xchg
iret
lock
push
test
in
addl
dec
loope
in
dec
jnp
xchg
and
in
lods
iret
jns
xor
xor
hlt
enter
mov
cwtl
movl
sbb
not
daa
scas
scas
repnz
stc
pop
lahf
cmc
cmc
add
lret
cmp
mov
pop
popa
inc
xor
lods
jmp
lret
lret
test
gs
mov
push
call
in
std
loope
sahf
outsb
ja
popa
or
pop
inc
push
mov
jg
xchg
popa
add
sahf
inc
adc
inc
scas
cli
jecxz
fwait
adc
pop
mov
js
shl
mov
ffreep
addl
data16
and
adc
xor
add
jnp
or
fisubs
sub
adc
or
fdivr
fsts
movsl
cwtl
ficoml
pop
inc
call
jbe
dec
jbe
stc
push
mov
jb
xlat
xchg
or
adc
mov
hlt
popa
xlat
imul
ret
rcrl
mov
arpl
dec
mov
aaa
test
mov
in
stos
out
outsb
mov
cs
xchg
add
inc
mov
mov
or
nop
push
or
loope
popa
stc
cli
testl
int3
add
push
add
or
xchg
fidivrl
push
adc
xor
icebp
scas
outsl
addr16
out
mov
int
iret
sbb
xchg
cmpsl
mov
jp
push
pop
inc
cmp
andl
subl
cmp
xor
jnp
mov
mov
jecxz
lea
popf
shl
idivl
add
loope
mov
dec
and
clc
mov
pop
adc
sbb
shlb
scas
xor
dec
sbb
cmp
ja
es
dec
std
xor
jne
push
cli
pop
jo
stc
push
or
scas
popa
and
fisubl
mov
dec
in
scas
mov
dec
lret
and
xlat
adc
xor
rorb
push
mov
lea
gs
in
popa
lds
or
jg
mov
fs
jns
movsl
lods
scas
or
xor
nop
mov
add
mov
pop
jbe
in
insl
jnp
xchg
mov
add
notb
lcall
jnp
ror
ss
push
fstl
xlat
pop
jp
add
xor
stos
or
xchg
lods
mov
inc
adc
push
adc
adc
arpl
out
mov
setl
jo
rcrl
clc
lock
loop
cmp
nop
loopne
or
push
xchg
or
ret
or
fisubrs
pop
sbb
inc
inc
mov
lea
jo
mov
fwait
repz
daa
pop
idiv
ret
dec
mov
jg
push
push
xchg
cmpsl
xlat
repz
xchg
enter
mov
insl
pusha
out
dec
jge
mov
or
movsb
mov
enter
mov
sti
ror
aad
sbb
lock
mov
ljmp
sub
repz
xor
daa
xchg
jle
scas
insb
adc
mov
adc
int
sbb
sub
pop
stc
inc
inc
adc
fucomp
loope
cmp
push
sbb
inc
or
stos
sbb
orl
adc
mov
mov
jg
sbb
sti
pop
aad
ss
pop
mov
imul
nop
cmpb
mov
gs
cmc
mov
cmp
sub
fisttps
das
sub
and
mov
dec
insb
orb
mov
in
mov
repz
ds
test
rol
shrb
stos
mov
imul
mov
insl
test
adc
sbb
xor
jmp
int3
mov
fdivrs
xorb
js
or
pop
fdivr
in
shrb
lock
or
daa
fucom
mov
xchg
popf
fistpl
or
xchg
cmp
cmc
pop
sub
arpl
sub
jns
xor
dec
pop
insw
adc
sub
jle
dec
push
in
lods
mov
lret
popl
test
xchg
xchg
scas
adc
loope
cmp
dec
out
push
inc
fstl
jae
cmp
adcb
scas
cs
addr16
out
int3
loope
sbb
fs
es
pop
lods
icebp
or
adc
pop
mov
lret
inc
cmp
cmc
popf
push
lahf
mov
mov
jne
loope
pop
mov
pop
xchg
or
loope
inc
lcall
mov
xor
push
icebp
lret
or
ret
insb
into
js
arpl
pop
loopne
fcmovne
push
xchg
jno
push
scas
clc
outsl
test
adc
ficoml
int
insb
xchg
addb
adc
imul
xor
cmp
add
ficoms
hlt
xchg
pop
hlt
dec
adc
leave
adc
cmp
test
pop
shll
pop
jae
cmp
jecxz
mov
adc
mov
cmp
nop
icebp
pushf
ljmp
adc
into
add
xlat
push
xor
in
sbb
push
add
shlb
mov
aas
sahf
outsl
insb
loope
inc
sub
jae
int3
out
and
push
insl
int
mov
outsl
push
or
mov
or
dec
push
lock
pushf
dec
push
push
ja
mov
jmp
jo,pn
pop
cltd
shrl
adcb
dec
bnd
lock
cld
cmp
mov
lds
addr16
mov
jg
mov
addr16
jnp
shrb
rclb
pop
inc
push
or
ljmp
or
loopne
call
mov
insl
ljmp
imul
jae
loop
jns
adc
leave
xor
xchg
jge
push
insb
push
adc
test
pop
pop
scas
gs
enter
jmp
jbe
imul
xchg
hlt
xchg
mov
adc
repz
cmp
in
push
in
push
push
dec
cmp
insb
push
ds
ja
push
mov
pop
sbb
xor
shrb
push
lcall
sbb
test
addr16
pop
loope
mov
cmpsl
clc
or
fdivr
sahf
jae
lret
inc
idivl
adc
pop
loopne
lret
ret
jne
xlat
push
dec
jl
cmp
shlb
push
insl
push
mov
and
test
mul
sbb
mov
fistl
xchg
pop
lds
dec
scas
lods
aaa
pop
xor
jl
repnz
or
sub
lret
mov
adc
xchg
xchg
mov
sub
sbb
aaa
in
nop
inc
lea
or
mov
imul
fsubrs
fsub
fidivrl
js
sahf
scas
xchg
push
shlb
push
mov
repz
fldt
xor
jle
aam
push
xor
push
mov
push
sub
fisubs
jg
pop
iret
mov
js
call
nop
shll
mov
shl
outsl
cmc
mov
aam
sub
icebp
and
in
xor
cwtl
ds
lea
sub
jne
hlt
fisttps
std
xor
out
es
das
mov
jge
mov
add
loopne
mov
in
add
adc
adc
lds
sub
addr16
fcmovnb
xor
jbe
and
xchg
lods
movsb
das
push
inc
push
jg
mov
mov
adc
mov
xchg
xchg
jb
xor
mov
in
push
inc
mov
jae
mov
inc
loope
xchg
icebp
pop
and
scas
scas
imul
out
sub
inc
or
xchg
dec
shrb
mov
dec
push
in
inc
sub
mov
popa
xor
push
ret
mov
bound
mov
sbb
fcoml
popa
ljmp
jne
adc
lock
rclb
test
scas
or
mov
mov
or
mov
loopne
sarl
pop
push
je
push
insb
pusha
lret
sub
jle
leave
xchg
je
les
mov
fdivs
cmc
push
sbb
mov
pushf
pop
test
in
adc
or
daa
pop
movsl
pop
mov
js
loope
inc
sbb
pop
ficoms
jae
out
push
cli
jp
lahf
push
xchg
mov
fwait
test
test
xchg
sub
outsl
sti
push
jns
repz
lret
mov
cli
imul
cwtl
fsts
sbb
mov
dec
out
es
inc
push
mov
sbb
sbb
xchg
outsb
inc
jmp
cs
mov
pop
adcb
fnstenv
lea
shlb
ret
xchg
mov
arpl
push
push
daa
inc
sub
jnp
mov
out
jmp
fisttps
xor
jae
xchg
fdiv
add
cmpsl
xchg
data16
cmp
shll
rorb
xorb
mov
or
cmpxchg
dec
mov
pop
add
mov
repnz
xchg
shlb
shlb
xor
inc
xchg
fwait
in
mov
mov
nop
jle
jmp
imul
lock
aas
cmovs
sbb
lds
cwtl
out
out
popf
mov
enter
add
sub
xor
or
test
jl
std
lods
sub
lods
stos
iret
mov
add
cltd
mov
mov
sub
mov
sbb
not
iret
scas
sbb
hlt
insl
cmp
fidivrl
js
mov
stos
divb
mov
mov
fistpll
pop
xchg
dec
cmp
inc
pop
pop
mov
scas
push
mov
lahf
xchg
icebp
cmp
je
xchg
lret
test
push
push
sbb
fadds
fmulp
out
lock
dec
adc
xor
test
xor
lods
adc
sbb
cmp
movsb
push
xchg
fnstcw
xchg
push
popf
stos
mov
pop
jecxz
insl
bswap
jae
flds
movsb
adc
xor
shlb
cs
mov
add
inc
cmp
mov
std
and
fsubl
jl
dec
daa
sub
push
fcmovbe
xchg
outsl
js
loope
jle
inc
dec
cmc
lods
push
and
sti
fisubrl
mov
xchg
fcomp
sti
jbe
push
push
push
sub
stos
jo
sub
loope
arpl
cld
pop
mov
or
xor
and
add
cmpsb
xor
mov
mov
in
jp
scas
jl
mov
xor
mov
pop
stos
pop
cs
push
and
and
popf
cmc
stos
out
mov
movsl
arpl
insb
cmpsb
mov
adc
pop
mov
xor
mov
and
cltd
in
inc
jnp
daa
loope
cmpsb
mov
xor
add
and
dec
aad
mov
xchg
or
das
jbe
dec
sarl
fists
jo
pop
cmpsl
movsb
lret
insl
dec
stos
pop
mov
ja
into
mov
rclb
decl
addr16
rol
call
mov
inc
dec
pop
and
add
loopne
dec
add
and
sbbb
std
ret
jno
push
nop
enter
lods
lcall
add
sbb
ds
cmp
inc
sbb
or
cmp
andnps
pop
cltd
shrl
ds
ret
mov
sub
nop
and
repz
popa
pushf
mov
xlat
jne
mov
adc
shl
pushf
leave
add
mov
lcall
je
cwtl
outsb
push
push
in
rcrb
xor
sbb
notl
cmp
mov
js
jmp
pop
push
pop
xchg
repnz
rcll
mov
jae
imul
xchg
movsl
mov
sarb
and
cmp
push
jno
loopnew
mov
nop
aas
ror
mull
dec
add
pop
bound
inc
mov
xchg
in
adc
mov
and
fwait
mov
xlat
push
out
cli
or
pop
hlt
cmpsb
push
xchg
nop
xor
into
imul
nop
mov
and
adc
loop
inc
mov
scas
lds
mov
cmp
inc
cltd
loope
stc
and
push
adc
adc
and
adc
shrb
ret
ret
push
cld
mov
xor
or
adc
push
jle
lahf
cmpsl
sub
adc
xor
adc
dec
xchg
jmp
mov
cmp
hlt
push
loope
in
add
scas
fdivrl
inc
pop
push
mov
xchg
xchg
mov
xor
add
inc
xor
jno
pop
fcoml
nop
ja
xchg
inc
cmovg
lods
mov
aad
rolb
and
push
pop
sti
inc
gs
icebp
push
dec
pop
pop
sbb
mov
pushf
shlb
push
lods
push
or
push
cld
pop
push
xchg
fildl
lea
mov
push
fistpll
jle
shrb
in
sbb
fsubl
xor
sub
lods
mov
cmp
lods
sbb
insb
stos
test
dec
iret
push
sbb
sub
imul
jmp
test
mov
pop
mov
push
sub
les
nop
inc
cmp
int3
in
out
add
mov
or
fmuls
hlt
inc
faddl
inc
jge
add
loope
mov
adc
ret
loope
adc
test
push
mov
cwtl
sub
incl
addr16
jae
push
xchg
push
scas
pop
int
hlt
aaa
cli
in
fadd
scas
inc
mov
jp
pop
or
push
out
in
ss
cmpsl
nop
dec
pop
push
or
mov
mov
icebp
dec
dec
dec
insl
jmp
fcoms
push
sbb
sbb
stc
and
loop
mov
popf
adc
cmp
scas
mov
daa
insl
out
sbb
popf
lretw
dec
test
push
xlat
xlat
sub
out
jns
sub
outsb
mov
lret
arpl
lret
sbb
into
imul
push
fisttpll
mov
loope
mov
shrl
push
add
inc
loopne
fmuls
sbbb
jnp
dec
push
cs
jno
xor
xchg
push
mov
ja
xchg
sahf
xchg
scas
mov
mov
mov
stos
in
loope
and
jl
dec
push
xchg
mov
sub
lahf
dec
pop
adc
jo
sti
lock
andb
push
and
movsl
mov
aam
mov
xchg
ss
push
jb
mov
mov
cmp
mov
push
notb
jle
dec
mov
sahf
movb
addr16
pop
xchg
movsl
and
push
bnd
xchg
xor
cltd
stos
pop
xlat
sub
scas
adc
call
scas
lret
jbe
jo
mov
xchg
gs
fnstcw
mov
dec
jecxz
aaa
bound
push
fmull
or
test
fidivl
pop
and
cmp
add
push
or
loopne
cmp
lret
dec
cmpl
daa
cld
imul
fwait
scas
xor
int3
dec
mov
push
in
pop
push
xchg
add
cltd
xchg
dec
sub
xor
sbb
jo
idivl
roll
inc
bound
sbb
pop
lea
mov
jecxz
mov
pop
or
std
shl
cmp
push
inc
mulb
fwait
sub
push
sub
ret
cmovge
push
sub
jle
mov
test
xlat
mov
adc
test
into
out
aam
int
push
xor
je
mov
adc
jecxz
adc
fbstp
jp
test
push
and
mov
cmpsl
sbb
ss
in
push
pop
loopne
out
fcomps
daa
aam
bound
out
dec
jg
adc
mov
sbb
mov
sub
cmp
fcompl
and
jae
addr16
pop
pusha
out
adc
ds
push
mov
mov
jno
pop
shrb
insl
cmpsl
add
xlat
add
and
jmp
mov
fcmovnb
cmpsl
lea
adc
imul
daa
push
repnz
outsl
rcl
fwait
ja
movb
xchg
mov
bound
xor
add
xor
pop
or
inc
push
leave
stc
cmc
and
adc
movsb
mov
dec
jl
mov
repnz
xorb
xchg
push
mov
sub
push
and
test
mov
mov
jl
xchg
sbb
jge
inc
or
out
popf
inc
cwtl
sub
push
fidivrs
ret
mov
push
test
push
sbb
add
cmp
inc
movsl
cld
std
push
mov
rcpps
cld
lcall
adc
js
mov
or
in
enter
std
aad
into
call
cltd
jbe
adc
and
ss
mov
push
inc
lods
jns
cmpsl
imul
hlt
lret
js
inc
dec
loopne
push
jmp
dec
loop
rolb
test
outsl
pop
shrl
popa
shlb
sub
icebp
add
gs
sub
mov
inc
cwtl
shl
xchg
cltd
push
mov
out
mov
dec
pop
add
dec
dec
xchg
sbb
xor
pop
testl
xor
jo
fsts
xchg
or
xchg
push
in
pop
pop
add
mov
fmull
lock
mov
imul
mov
dec
cmp
jecxz
xor
mov
test
out
jb
rcll
notb
aad
int
push
sub
or
add
lret
cmp
cmpl
xchg
sti
sub
jno
addb
mov
loope
loope
mov
flds
jl
mov
sbb
pop
scas
repz
jl
call
dec
subl
popa
adc
sub
push
aam
outsb
test
fwait
imul
jns
in
cmp
lea
xchg
movsb
xchg
test
sub
xchg
popf
daa
pop
mov
or
pop
and
xchg
and
pop
pop
xchg
cli
pushaw
add
xlat
fisttpll
imul
push
inc
arpl
filds
fdecstp
xor
and
out
movb
lods
fistpll
ds
out
js
fsubl
mov
fcoml
sbb
xorl
repnz
fisubl
dec
sbb
mov
pusha
stc
add
mov
inc
and
out
pop
int
xchg
fnstsw
outsb
push
jno
adc
int
pop
sahf
enter
lcall
test
sbb
std
ret
rcll
add
xchg
nopl
loope
repnz
fsts
cs
int
movsl
adc
cld
mov
in
cli
push
imul
mov
xchg
adc
dec
cwtl
ds
dec
aas
sub
in
je
xor
pop
ret
dec
xor
imul
jge
inc
jge
xlat
aaa
icebp
roll
xlat
test
mov
lods
inc
movsl
insb
xor
in
adc
lods
ja
dec
lods
in
into
outsl
repnz
stc
mov
xor
mov
ret
xchg
xchg
dec
cltd
mov
and
jo
add
cmp
sbb
cld
icebp
sbb
mov
sbb
cli
not
push
je
cmp
bound
lcall
shl
fs
cli
out
aaa
pop
out
imul
dec
xor
mov
jg
fs
jo
fcmovnbe
sbb
lock
rclb
scas
xor
mov
cli
push
xchg
gs
hlt
or
arpl
movsl
xchg
inc
fimull
cmpb
ret
push
scas
xor
mov
mov
dec
adc
xchg
stos
mov
xchg
icebp
popf
add
lret
jbe
pusha
int3
jl
orb
jne
in
es
mov
or
mov
mov
mov
push
mull
stos
push
lods
mov
xor
push
xlat
push
scas
rclb
inc
push
and
pop
inc
or
cmp
dec
xor
lret
aad
repz
sbb
mov
shlb
jp
cmp
dec
repz
cmpb
in
or
in
adc
mov
dec
aaa
call
inc
in
dec
mov
mov
xor
in
jle
inc
sbb
jmp
int
aas
push
adc
dec
and
popa
in
std
cs
inc
cmpsb
mov
aam
push
sbb
into
push
or
and
adc
cmp
jnp
mov
loopne
popa
xchg
sub
gs
daa
shll
hlt
bound
lock
xchg
addr16
xchg
outsl
xor
imul
in
into
fwait
sub
jo
test
and
mov
jmp
in
call
repnz
inc
add
dec
sbb
lock
mov
subl
mov
popa
sub
test
sub
or
xchg
lds
das
pusha
repz
cmpsb
fisubrl
xor
mov
pop
call
stos
and
inc
aad
cs
mov
adc
aaa
add
clc
mov
es
or
push
cmpb
jecxz
mov
repz
ds
icebp
push
ja
lret
jl
mov
stos
cltd
cmp
in
mov
dec
aaa
and
stc
call
mov
pop
loop
ret
imul
lahf
add
mov
imul
loop
pusha
mov
cmp
jmp
inc
dec
call
lahf
sti
shlb
sar
jmp
inc
les
cs
dec
jge
insb
nop
jno
mov
iret
add
push
jp
in
mov
inc
dec
cs
push
lock
out
loopne
js
mov
int3
fs
les
arpl
cmp
sub
rcll
rorl
dec
in
xor
sub
push
imul
push
lret
cli
into
cmpsb
add
push
pop
pop
and
inc
gs
nop
jmp
das
imul
arpl
xor
dec
dec
lds
je
daa
ror
pop
inc
cmp
mov
sub
push
jnp
je
leave
dec
and
imulb
fwait
das
adc
repnz
adcb
xchg
lret
xchg
pop
and
jns
andl
cld
add
hlt
or
icebp
inc
jbe
xchg
inc
aad
cli
mov
aam
mov
cmpsb
pop
incb
fcmovnbe
dec
cmp
lcall
pop
mov
or
stc
mov
aaa
lahf
xor
adc
xor
fs
lcall
ja
jae
cmp
dec
ja
mov
xchg
and
sub
add
xor
div
je
push
fidivs
mov
sbbb
jae
out
fldt
pop
fadd
mov
rcrl
sub
jb
pop
int3
mov
lcall
mov
inc
movsb
pop
es
hlt
pop
loop
sbbl
push
cmpsb
pop
add
scas
and
adc
fwait
or
je
mov
xlat
test
outsl
outsb
in
adc
push
jb
pop
jne
push
push
scas
or
cmp
mov
pusha
scas
jnp
pop
inc
pushf
repnz
out
test
mov
imul
jae
test
sqrtps
sbbl
lcall
inc
stos
gs
aad
les
mov
dec
inc
in
mov
adc
js
data16
jbe
jno
xor
mov
lret
adc
dec
pop
cltd
mov
mov
mov
sub
andps
test
int
push
icebp
jp
sub
ljmp
scas
ja
sbb
roll
mov
pmulhuw
dec
insb
mov
xor
mov
repnz
hlt
dec
rol
not
mov
test
jp
repz
xchg
aad
aaa
add
iret
clc
jge
xchg
out
arpl
push
repz
sub
stc
mov
and
fildll
stc
outsb
pop
inc
in
push
cmp
test
mov
ds
int3
xor
push
nop
mov
xchg
ret
sub
ret
or
adc
test
fstl
xchg
into
or
jmp
cmc
test
add
mov
cmp
or
push
jnp
xlat
fcompp
push
sbb
movsb
and
xorl
xor
and
shrb
sahf
mov
fwait
or
scas
negl
out
movsb
xchg
ror
clc
mov
inc
inc
in
jmp
jg
mov
shrl
or
pop
add
push
cmp
cmp
sbb
outsl
sti
maskmovq
mull
push
adc
adc
pop
inc
insl
mov
mov
mov
sarb
sub
out
pop
jae
or
add
popf
out
jge
cmp
cmpsl
or
out
cmp
popf
outsb
movsb
mov
cmp
inc
cmp
mov
dec
nop
push
jb
mov
sbb
jb
ljmp
cmp
and
mov
pop
shll
loope
les
jl
push
les
scas
add
popa
sar
sbb
ljmp
cmp
jo
jp
and
pop
sbb
xchg
testb
mov
mov
fimull
jno
sbb
push
push
fwait
xlat
out
lods
icebp
pusha
fsubrl
or
push
mov
sbb
sbb
dec
insl
jmp
jge
push
pop
cmp
sub
jecxz
out
mov
fnstcw
inc
mov
jo
ret
cmp
pop
inc
ja
popa
repnz
mov
ret
test
and
loope
aaa
push
sbb
repnz
in
test
fs
in
rcll
mov
call
cmc
decl
shr
lock
mov
adc
cmp
sarl
fldl
int3
fidivl
cltd
out
mov
imul
repnz
leave
mov
shll
push
push
add
cmp
imul
mov
test
pop
aaa
xor
in
testb
sub
inc
jnp
insl
sbb
test
aaa
or
jp
cmc
inc
xor
outsb
jg
outsl
loopne
jle
dec
jno
fnsave
jno
je
fildl
jle
fcomp
je
inc
xchg
jne
repnz
rolb
sbb
mov
pop
and
iret
ret
mov
outsl
jp
mov
cmp
mov
sub
mov
lods
in
sbb
dec
gs
xchg
xchg
or
push
push
add
repz
js
sbb
sbb
add
pop
cwtl
cmc
xchg
and
out
add
imul
mov
in
aad
cmovg
cmp
add
mov
xchg
in
and
xorb
mov
in
cs
pop
inc
adc
enter
add
in
ret
inc
and
dec
cs
pop
cmp
jp
mov
repz
push
scas
inc
push
or
sahf
popl
sub
mov
add
ss
popf
jae
test
nop
push
pusha
add
pmaddwd
push
mov
sti
ret
and
lds
push
hlt
imul
in
jns
pop
lea
cltd
pop
adc
inc
scas
gs
dec
ja
arpl
test
pushf
cmp
loope
mov
mov
in
ss
mov
adc
sbb
loop
jo
xor
mov
fidivrl
mov
push
mov
out
popa
mov
jmp
adc
inc
and
xorb
test
scas
in
push
into
int
xor
out
dec
xlat
push
mov
pop
mov
insb
xlat
or
push
xor
mov
pop
and
inc
iret
pop
imul
and
in
adc
push
clc
mov
dec
or
insb
test
jecxz
xor
pop
xchg
btr
push
xchg
cmp
enter
ret
imul
push
in
sub
out
arpl
pop
bound
cmp
push
push
push
fdivl
dec
rorb
push
push
mov
addr16
clc
cmp
mov
lcall
pop
jl
hlt
cs
and
shrl
add
mulw
or
jne
jae
xchg
daa
fwait
cmpsl
cmp
daa
lods
mov
mov
shrl
lret
push
movsb
adc
repz
daa
lds
stos
jne
jge
std
push
fnstcw
inc
inc
in
cmp
out
push
scas
jge
xor
adc
adc
jne
sub
dec
ja
lret
into
lds
jae
test
lret
popf
mov
aaa
mov
cmpsl
popa
notl
push
xor
bound
mov
cmp
push
lcall
cmp
fsub
cmp
push
pop
pusha
insl
gs
out
shrl
addps
idivb
rcrb
mov
out
xchg
ret
add
lret
push
or
push
sbbb
test
call
xchg
andl
xor
cmp
fs
jmp
test
mov
mov
xchg
pop
mov
dec
and
adc
add
into
push
mov
jne
fists
cltd
pushf
mov
mov
daa
xchg
int3
jnp
xchg
and
mov
popf
cmc
xor
movsb
jg
and
stos
sub
and
movsl
and
push
push
and
dec
decb
adc
sbb
aam
push
les
inc
loope
sub
daa
std
fs
lret
std
push
repz
push
icebp
push
loopne
push
rcrb
jno
popf
mov
aaa
iret
test
sbb
pop
lret
or
in
mov
outsl
pop
inc
add
dec
mov
jns
mov
jle
xor
push
ret
mov
add
test
pop
cmp
dec
xor
jmp
push
mov
popa
test
cmpsl
sub
mov
adc
int
lods
std
cs
aas
repz
mov
clc
fsubl
dec
pop
andl
rolb
or
inc
movsl
cs
sbb
rcr
inc
and
xchg
inc
scas
test
jl
aaa
iret
cmp
xchg
xorl
movl
into
dec
movsb
pop
cmc
sbb
dec
adc
inc
ret
jge
mov
pop
xlat
xor
or
pop
cmp
insl
adcb
loop
xlat
jo
mov
sub
push
test
mov
pushf
into
gs
dec
into
or
cltd
stos
cli
pop
or
arpl
clc
in
pop
jmp
add
cld
add
aas
into
ljmp
ja
jp
pusha
stos
xchg
xor
jle
or
fildll
and
enter
push
cltd
cmp
mov
cmp
mov
xor
dec
in
push
xor
pusha
add
sahf
mov
jnp
repnz
xchg
push
adc
andb
scas
jo
adc
test
fwait
bound
cwtl
sub
mov
ret
cmp
std
cmpsb
add
cltd
mov
lretw
mov
inc
dec
dec
mov
fwait
ret
ss
sub
mov
cwtl
mov
pop
in
mov
jne
aad
pop
mov
cmc
inc
sahf
lret
inc
je
ljmp
sub
stos
cmp
jg
mov
nop
adc
jns
fdiv
mov
adc
xchg
xor
sbb
cmp
fists
pop
mov
test
inc
mov
adc
sbb
js
jl
dec
pop
stos
jecxz
fidivrl
xor
out
out
mov
cli
mov
lahf
xchg
pop
dec
call
mov
mov
xchg
mov
gs
pop
into
xlat
andl
test
cmpsl
sbb
mov
mov
popa
mov
and
xchg
push
sub
cmp
out
mov
mov
add
nop
shrl
sub
mov
outsb
mov
pop
mov
lods
sbb
mov
pop
add
decl
das
loope
lds
push
push
arpl
jl
es
mov
imul
mov
pop
adc
adc
add
movsl
lods
int
cmp
xlat
cltd
ss
add
divb
jbe
lods
xchg
mov
lcall
lock
ds
test
sbb
add
int
ficompl
cmc
mov
sbb
test
sti
ret
addr16
loop
inc
adc
jae
iret
mov
mov
je
cld
mov
movsl
ljmp
out
in
push
add
mov
adc
mov
inc
xlat
sub
movsb
pushf
enter
jge
fsub
inc
scas
jno
rcrl
xchg
cmp
cmc
push
add
mov
lret
pusha
add
push
cs
daa
dec
popa
arpl
adc
lds
movsb
add
xor
mov
insl
mov
xor
adc
test
sbb
in
pushf
arpl
cmp
jbe
cmp
adc
in
jnp
jge
sub
daa
jne
push
pusha
cli
sub
js
mov
test
pop
pop
sbb
test
arpl
lcall
xchg
or
and
inc
dec
mov
arpl
inc
outsb
mov
ljmp
fmuls
xchg
in
mov
cld
ja
pop
push
cmc
cmpsl
cltd
jbe
add
cmp
adc
aad
fistps
add
call
jae
loope
adc
jbe
cmp
mov
mov
jne
or
test
loop
test
dec
xor
fcompl
fisttps
dec
bound
rclb
and
loope
lock
movhps
adc
push
lret
pop
jg
sub
cmpsl
stos
imul
fsubs
fcomi
fmul
pusha
dec
jnp
pop
add
adc
xchg
stos
call
popf
leave
mov
out
cmpsb
push
mov
js
jnp
mov
jecxz
sti
dec
ret
aad
xchg
call
inc
insl
or
cmp
push
icebp
test
push
cltd
es
xchg
cmp
out
in
mov
mov
out
call
out
cmp
or
dec
ljmp
jb
mov
fsubrl
inc
mov
adc
sbb
adc
and
movsl
fsubrp
pushf
sub
mov
insb
mov
jb
adc
dec
xor
jnp
push
scas
dec
shl
sub
add
jge
leave
push
jg
or
aaa
dec
out
addr16
leave
in
sti
ja
pop
ja
mov
xchg
in
add
add
or
int3
out
lret
sub
stos
daa
push
pop
sub
and
cltd
notl
lcall
ljmp
lret
xchg
fs
outsl
out
std
inc
inc
std
or
movsb
mov
sti
xor
pop
sbb
call
int
xchg
fisttpl
mov
aad
mov
ds
and
mov
mov
add
test
and
inc
push
sbb
mov
sbb
stc
pop
inc
mov
dec
mov
mov
cmp
dec
popf
fidivs
jl
aam
incl
pop
les
in
add
add
push
cmpsl
fidivs
loop
sbb
xchg
jbe
pop
icebp
mov
fs
push
mov
int3
stc
cmp
jmp
stos
ror
mov
mov
cltd
sar
inc
push
sub
pusha
and
icebp
mov
out
cmpsb
adc
cmp
push
test
enter
cltd
lds
push
mov
inc
inc
hlt
xor
mov
shlb
ds
xchg
sbb
inc
movsl
adc
mov
pop
jnp
cmp
popa
fs
aas
or
jno
sbbl
shll
stos
push
jnp
dec
fwait
jae
mov
in
sbb
jg
loopne
mov
jnp
sub
mov
jge
test
add
and
mov
dec
adc
mov
shrb
sbb
fwait
and
cmp
sbbl
nop
add
fistps
shld
inc
mov
jno
pop
fs
pop
dec
xor
push
inc
inc
lret
ret
xor
pop
out
or
gs
aaa
hlt
mov
xlat
jae
lods
inc
daa
and
and
imul
and
xchg
scas
enter
inc
xor
ds
push
dec
jo
lret
fst
add
xchg
addl
scas
in
or
loop
push
cmpsb
rcrb
dec
mov
or
js
push
jge
shlb
xchg
push
add
add
out
inc
stos
loope
inc
cmp
testl
shll
cmp
iret
add
mov
push
enter
mov
pop
stos
xchg
fs
bound
test
and
rcl
push
fnstenv
dec
mov
mov
add
cwtl
mulb
aad
loop
inc
mov
pop
xorl
enter
jl
sbb
hlt
sub
xchg
or
outsl
adc
jmp
fsts
or
cmp
in
shlb
mov
push
stc
pop
inc
mov
cld
cmpsb
int3
cli
fld
mov
and
bound
sbb
idivb
cmp
fldcw
std
push
pusha
inc
ja
stos
push
mov
popa
andb
and
or
rorb
loop
pushf
imul
loopne
or
or
or
shll
xlat
xchg
clc
cmp
push
dec
adc
negl
sbb
adc
enter
je
jb
rclb
cmp
insl
xchg
push
rcl
cwtl
int
mov
adc
and
lods
add
push
push
sbb
repz
cld
icebp
mov
mov
ret
add
xchg
lret
mov
push
mov
jns
mov
adc
stos
dec
das
jbe
ja
js
sbb
lret
and
lret
or
mov
mov
nop
jns
clc
mov
scas
jns
pop
notb
mov
mov
repnz
into
mov
dec
out
or
adc
leave
std
mov
cmp
mov
adc
pusha
movl
mov
enter
test
movsl
or
xchg
xor
jp
call
fsincos
pop
scas
cld
add
jb
lods
dec
leave
test
dec
sub
cmp
mov
inc
pushf
imul
pop
dec
and
pop
pop
ret
js
mov
out
iret
stos
mov
dec
fsubs
and
jne
dec
and
add
pop
roll
pop
push
xchg
cmp
jmp
jg
out
lods
mov
ljmp
adcl
adc
dec
jns
fnsave
jo
fidivrs
std
nop
into
mov
loope
pop
fcomps
dec
adc
push
pushf
cmp
mov
cmp
cmp
pop
xchg
mov
sbb
push
pop
rcr
cld
pop
push
aad
je
pop
in
xchg
dec
mov
push
pop
push
pop
jnp
jl
sbb
std
data16
out
xor
inc
or
ret
loope
xchg
and
nop
shrl
push
xchg
inc
jmp
test
push
add
and
mulb
mov
sub
jb
sub
add
push
mov
idivl
push
leave
jmp
sbb
pop
test
gs
push
inc
mov
mov
fidivl
jae
mov
daa
pop
scas
aas
imul
test
arpl
mov
jns
pop
aam
pushf
str
xlat
add
sub
jne
fcmovnb
lahf
ds
loopne
sub
and
dec
pop
add
addr16
pop
shl
mov
int3
cmp
out
notb
out
add
sbb
gs
cltd
inc
insb
fs
and
lret
xchg
loopne
push
or
push
icebp
test
int
add
sarw
es
push
jl
inc
fwait
outsb
add
mov
iret
sbb
data16
jmp
sarb
pop
jmp
test
fistl
mov
ficoms
andb
push
out
pop
jo
pop
jno
nop
test
mov
mov
iret
aam
mov
mov
jl
loope
mov
inc
dec
pmaxub
jg
xlat
add
sub
mov
repnz
orl
push
fistps
aaa
and
and
gs
cld
and
outsl
outsb
mov
cwtl
cmp
scas
mov
sub
push
cmp
lahf
xorb
sahf
push
pop
data16
test
and
mov
push
lea
inc
imul
into
cmp
xchg
mov
push
mul
decl
loopne
jo
inc
mov
lods
sbb
loope
data16
pop
popa
std
and
xor
pop
cs
dec
sub
sub
mov
daa
adc
cmc
mov
scas
mov
sub
aas
jne
sub
gs
out
ficoml
dec
sub
cmp
xchg
or
mov
insb
andb
das
cmpsb
dec
ficompl
stos
or
jl
sub
imul
daa
cwtl
subl
lahf
mov
addr16
adc
mov
or
andl
mov
sbb
imul
inc
cmp
push
sbb
aam
leave
shrb
mov
in
test
jo
lret
insl
ficompl
sbb
ds
adcl
push
or
jl
and
add
fistpll
dec
inc
cmpl
rcrb
push
mov
dec
mov
pushf
addw
rcrl
dec
test
sub
jg
orl
xchg
push
ds
or
pop
popf
cmpsl
pop
ret
shll
jl
in
push
and
into
mov
std
inc
xchg
lods
mov
test
cmp
adc
dec
xor
push
icebp
dec
dec
ss
dec
or
push
imul
outsb
pop
mov
andb
sbb
add
or
test
repz
inc
jnp
insb
mov
lock
xchg
sub
mov
cwtl
fcmovbe
popa
addb
or
fwait
inc
sub
punpckhwd
cmp
pop
lods
jnp
shl
fwait
into
sub
inc
xor
add
dec
test
pusha
push
loope
aaa
mov
or
sbb
pop
mov
pop
sbb
cmp
pop
icebp
or
jnp
jle
inc
sti
dec
mov
test
imul
mov
push
jl
and
outsl
lea
xchg
lock
lea
jle
stc
xchg
pop
addr16
inc
push
mov
in
jno
clc
sub
test
lods
push
fnclex
adc
sti
add
jecxz
push
inc
aas
inc
sub
mov
jnp
js
cld
xchg
and
mov
mov
mov
mov
pop
dec
jne
imul
movl
pop
cmp
fsub
popf
mov
das
pop
push
fcomip
jp
test
add
cmp
xchg
cmp
push
lods
jo
lret
repz
out
dec
stos
and
sub
sub
xor
xchg
data16
inc
inc
jle
inc
hlt
pop
or
sbb
jbe
dec
push
add
mov
jg
loop
add
fiadds
ljmp
and
or
push
sbb
jp
sti
jno
cmpsl
sti
mov
adc
fcompl
pop
loopne
aam
lfs
adc
in
sub
lds
and
enter
mov
ja
xor
or
imul
sub
repz
outsb
lea
ja
jnp
pop
xor
outsl
cmc
sbb
movsl
loopne
adc
jp
xor
aam
out
test
es
dec
jl
inc
xchg
js
adc
cmp
push
imul
add
leave
adc
imul
insl
gs
jmp
and
sub
sbb
in
test
lcall
add
mov
push
or
mov
push
addr16
ss
out
and
nop
call
sub
ror
mov
sbb
and
fdivs
add
lds
clc
adc
leave
int3
loope
and
inc
xchg
dec
mov
aad
pusha
inc
cltd
daa
push
icebp
test
adc
inc
xor
call
mov
pop
test
pushf
add
xor
movzwl
mov
out
mov
repnz
daa
and
inc
jnp,pn
mov
fst
push
dec
sub
aam
cwtl
out
loop
pop
push
test
xor
nop
add
kmovw
add
inc
jle
cmpl
inc
inc
mov
movsb
lock
push
fucom
add
sti
notl
pop
or
aas
mov
add
sti
enter
or
shrb
push
pop
add
mull
fdiv
jp
cmpsl
lgs
out
inc
aad
xlat
in
push
push
push
sbb
mov
outsb
adc
sub
xchg
sbb
enter
jo
sub
in
in
mov
ret
sbb
and
iret
mov
test
dec
pop
mov
aaa
mov
cs
mov
idivb
imul
jnp
xor
mov
add
jo
inc
adc
xor
jmp
cmpsb
outsb
mov
jb
test
popf
aam
scas
xchg
mov
ret
mov
mov
je
leave
inc
cmp
iret
ror
lcall
add
mov
ret
fcoms
enter
fcomp
jmp
push
inc
je
fadd
jne
dec
bnd
add
or
adc
lret
dec
movsb
pop
lods
and
mov
fnsave
and
inc
arpl
adc
push
std
or
sub
add
ss
sbb
push
or
hlt
xlat
xor
andl
ficompl
mov
adc
ljmp
sbb
cltd
jle
pop
mov
mov
call
je
pop
cltd
pop
cmp
add
push
add
test
inc
imul
scas
movsb
pop
iret
cmp
jno
jge
ret
out
fidivs
testl
ja
and
adc
data16
cld
sbb
cmp
mov
mov
jp
jecxz
daa
jbe
xor
cmpsb
daa
xchg
repnz
sbb
into
cmpsl
jnp
add
xchg
jo
cmp
cmp
sbb
mov
rcr
cltd
xchg
popa
mov
sub
flds
xor
stc
push
inc
push
jne
mov
push
push
dec
mov
ljmp
dec
imul
sti
mov
mov
add
or
lret
mov
fstpt
xchg
mov
das
xor
movsb
mov
mov
push
popf
shrl
xchg
sbb
ljmp
fcoml
loope
add
mov
mov
ljmp
xchg
test
sbb
stc
adc
pop
xchg
and
pop
cmpsl
inc
add
jecxz
lods
mov
inc
mov
inc
add
xor
dec
icebp
inc
mov
push
test
and
adc
xlat
pop
push
pop
jg
xchg
pusha
jg
lods
pushf
scas
insl
outsl
push
loop
push
data16
inc
ret
in
popa
hlt
rol
or
lahf
loope
into
xchg
shl
fs
xor
insb
sub
test
in
sub
loopne
in
imul
adc
leave
or
movsl
jmp
mov
dec
imul
xor
or
arpl
pushf
lea
call
mov
fdivs
cs
pop
mov
dec
popf
inc
xchg
std
sbb
inc
int3
mov
push
dec
dec
mov
inc
sub
loope
in
testb
ljmp
scas
orb
cld
xchg
fwait
cmp
mov
fnstsw
lcall
mov
sti
ja
stos
cs
loop
fsubrl
adcb
push
fimuls
in
dec
popfw
rcrl
inc
icebp
and
sbb
jno
pushf
adc
sti
shll
dec
mov
add
sub
sbb
cltd
pop
and
fists
test
sarl
mov
jnp
lods
push
pop
or
lods
addr16
lret
mov
xchg
inc
push
das
fisubrl
sbb
push
aam
in
aam
popf
mov
inc
add
sub
ret
and
loop
inc
sub
mov
bnd
lock
roll
mov
stos
test
sub
fucomi
add
lods
mov
outsl
test
hlt
test
daa
inc
cli
cmp
stos
mov
pop
lock
into
dec
imul
xor
cmp
push
mov
dec
filds
setns
adc
mov
ss
icebp
aaa
sbb
mov
mov
sbbb
jg
pop
pop
fmull
push
flds
or
fisttps
mov
xor
lret
mov
push
jbe
ss
dec
inc
out
mov
or
push
cld
and
push
fwait
pop
xchg
outsb
sti
ja
ljmp
pop
out
push
cld
aaa
xor
icebp
aam
push
lea
adc
pop
lock
add
mull
lcall
aam
adc
jne
mov
lret
sub
and
pop
lret
fidivs
pop
in
sub
push
sub
lock
pop
mov
insl
incb
xchg
mov
call
cltd
or
add
repnz
test
popf
mov
sub
or
dec
xor
pmaxsw
push
lret
push
sub
imul
or
inc
push
adc
mov
pushl
shll
je
pop
jg
fcmovnu
hlt
xchg
pop
sub
jecxz
subb
mov
loopne
vandps
inc
pop
fs
insb
dec
inc
lcall
cmpsb
mov
xchg
mov
repnz
fistpl
and
je
mov
cmc
push
jle
and
inc
cmp
mov
dec
dec
out
xchg
lahf
sub
inc
adc
mov
push
or
mov
fisubrs
cmp
jne
sti
cld
rcr
je
mov
adc
mov
cmp
clc
mov
sbb
les
mov
dec
daa
cmp
cmp
cmp
clc
shll
je
cs
lods
xchg
imul
mov
lret
xor
add
jmp
or
lock
sbb
scas
ljmp
ret
clc
mov
push
shr
loopne
or
jmp
inc
sbb
mov
push
mov
push
rclb
mov
push
and
out
out
or
push
or
jmp
ds
sbb
mov
mov
loope
ss
setp
mov
rclb
jge
bnd
mov
enter
xchg
cmp
pop
mov
jecxz,pt
cmpsl
adc
call
add
lods
cmp
ss
or
jmp
into
pop
in
imul
mov
or
stos
mov
in
out
jns
pop
or
xchg
add
sti
lods
mov
js
pop
out
mov
jp
bound
jnp
out
push
inc
xlat
adc
in
mov
data16
out
loop
push
inc
ret
cmpsl
nop
popa
push
mov
repz
pop
jg
cmp
insl
cmp
xlat
cmp
les
add
or
or
je
ss
and
shr
fwait
xchg
in
loop
negl
int3
idivb
fstpt
clc
cld
xchg
ds
xchg
dec
incl
add
jg
aam
movsb
xor
and
add
ret
sbb
mov
mov
push
stos
push
add
lret
xchg
push
pusha
jns
cmp
inc
cmpsl
adc
jbe
pop
sbb
jl,pt
mov
xor
mov
int
mov
or
mov
bound
dec
sbb
inc
sub
stos
pop
push
seto
enter
mov
sbb
ret
and
es
jne
popl
fs
fistps
or
jbe
pop
ss
adc
adc
into
push
adc
and
pop
jno
mov
inc
pop
push
jnp
arpl
repnz
movsb
push
int
mov
dec
xor
pop
jnp
and
mov
das
add
scas
adc
sti
lods
ror
mov
jecxz
push
ja
test
push
jmp
hlt
fimull
push
in
adc
leave
push
or
ljmp
add
cld
repz
mov
test
xchg
push
fisttpll
loopne
push
xchg
or
xlat
cmpsb
es
stos
enter
sbb
fdivs
jo
pushf
sub
test
ljmp
sbb
test
gs
dec
sub
mov
pop
test
test
or
ror
arpl
pop
out
popf
mov
repz
inc
inc
mov
mov
mov
xor
xchg
data16
cmp
call
test
shlb
adc
repz
xchg
ja
je
sub
cmpsl
dec
sub
cli
pusha
test
adc
jae
sub
sub
lods
test
jle
rcl
push
popa
out
mov
push
mov
jne
pop
pop
dec
les
jp
lods
jae
xor
sbb
add
xor
mov
jo
jb
sub
push
es
pop
or
outsb
subb
push
add
jmp
cmpsl
or
push
std
sbb
hlt
or
push
mov
or
sub
insb
xorb
mov
stos
xchg
mov
sbb
nop
clc
fisttpll
in
out
and
and
jns
jp
adc
ret
les
fists
scas
inc
sbb
add
testl
fdivr
daa
mov
inc
int3
xor
mov
add
call
dec
sbb
mov
sti
sbb
loopne
fmul
fsubrl
out
adc
ds
or
pop
arpl
cli
ljmp
mov
jp
mov
mov
iret
pop
sub
sti
pop
repnz
xchg
out
test
push
jne
push
pusha
outsl
jae
aaa
aaa
popa
fmuls
sub
filds
aas
dec
and
fidivs
jae
rolb
xor
pop
out
push
jp
xchg
sbb
movsl
das
sarb
add
in
nop
dec
xchg
imul
in
insl
xchg
dec
cwtl
lds
mov
jb
push
or
inc
inc
in
or
mov
xor
test
ja
rclb
mull
dec
inc
sub
jmp
push
push
repnz
sub
and
out
subl
or
ret
mov
repnz
cmp
shrb
adc
add
and
rcrb
pop
les
mov
inc
add
jo
jns
add
push
imul
sarl
enter
stc
pop
ret
mov
rol
fnstsw
inc
ja
jg
dec
outsl
fadds
cmp
jle
mov
ffree
out
adc
scas
pusha
lret
enter
push
cmp
adc
aam
aam
add
xchg
hlt
outsl
cmp
les
aam
lret
push
dec
sbb
xor
and
xchg
inc
dec
mov
into
daa
cs
mov
in
jecxz
and
xchg
jns
pavgw
dec
mov
pop
hlt
test
insb
push
jge
fwait
mov
js
lock
xor
out
add
xchg
push
out
int
fnsave
movsl
pop
test
dec
jb
into
jns
fdivp
jo
pop
pop
push
adc
fwait
push
mov
clc
pop
dec
or
add
xor
adc
adc
jge
push
dec
cli
and
pop
sbb
movsl
pop
xchg
ds
shrb
cmpsb
mov
enter
sub
icebp
jo
cmpb
lahf
insb
xor
pop
push
pop
sbb
lock
push
dec
mov
sarl
jle
pop
inc
inc
lret
cmp
jle
sarl
scas
sbb
lret
cs
sbb
fstpt
fwait
pop
pop
insb
push
xor
sahf
imul
and
push
dec
jb
dec
cmp
xor
adc
jne
dec
lcall
sarb
xchg
fistpll
leave
sbb
push
push
push
inc
pop
mov
xchg
movsl
cs
stos
std
cmp
popf
push
loopne,pt
mov
jnp
cmp
in
pop
inc
insl
jbe
repnz
mov
push
inc
mov
fs
pop
je
into
inc
jne
idivl
hlt
test
aad
cmp
xorb
repz
ss
sbb
xchg
add
shlb
add
mov
inc
cli
pushf
test
jmp
and
movsl
test
loop
xchg
out
cmp
jge
mov
push
stos
cltd
imul
push
pop
xor
cmc
xor
jge
fcoms
cld
jno
cmp
cs
xchg
in
into
xor
sub
test
popf
in
addl
mov
mov
test
xor
and
xlat
cmpxchg
push
leave
adc
lods
js
sbb
js
fstl
add
gs
movsl
sub
dec
testb
repnz
lcall
dec
or
cwtl
pop
sti
xchg
pop
fistpll
ret
xchg
les
and
fidivrs
in
fdiv
mov
jmp
out
pushf
rcr
mov
mov
sahf
movsl
gs
lds
add
inc
push
mov
test
imul
aam
inc
popa
cli
mov
mov
xor
je
xchg
xor
jl
mov
les
and
mov
xorb
daa
inc
icebp
mov
les
popa
jl
mov
xor
adc
xor
jmp
and
mov
xor
stos
xor
adc
cmpsl
add
push
lcall
and
ret
add
gs
or
insl
lods
sub
mov
imul
xor
or
insl
pop
stos
pushf
push
jne
andb
lahf
lods
adc
mov
popl
adc
clc
mov
and
popa
lret
ficoms
jbe
jne
and
push
xor
push
fisubl
addl
push
insl
in
int3
add
and
out
stos
clc
psubusb
pusha
sub
mov
loope
out
ja
js
dec
pop
mov
pop
sbb
xorl
out
sahf
cmp
mov
rclb
popa
adc
iret
xchg
cs
xor
cmp
push
das
jl
xor
and
jae
cmp
insl
xor
mov
inc
cmp
mov
mov
and
push
cmp
iret
stos
outsl
test
mov
js
in
push
jle
cmc
dec
dec
push
sub
popa
insb
cwtl
aad
mov
lods
je
cli
lahf
das
fld
fpatan
and
dec
lcall
sahf
jg
pushf
and
jo
xchg
fcmove
adc
subl
push
jbe,pt
imul
pusha
add
popf
enter
testb
adc
push
pop
loop
xchg
add
hlt
popa
jae
mov
push
mov
out
xchg
roll
repnz
adc
push
push
mov
arpl
popl
fcmovb
rol
cmp
sbb
jno
roll
cmp
repnz
push
ljmp
mov
scas
xchg
and
mov
imul
push
mov
rcr
aaa
sbb
mov
mov
inc
fcmovne
js
in
xchg
adc
mov
insl
cmc
in
add
shl
lcall
pop
dec
xor
lcall
xchg
add
or
mov
xor
xchg
fdivr
mov
dec
movsb
bound
std
subb
push
loopne
hlt
ret
push
cltd
out
jge
jne
inc
pusha
sbb
cmp
sbb
test
pop
push
push
dec
push
fstps
mov
jnp
sub
push
pop
lret
pop
mov
cmp
cltd
ret
cwtl
pop
flds
rcrl
pop
pop
in
sub
subl
mull
int3
mov
and
jge
xchg
mov
movsl
mov
push
imul
mov
xchg
roll
lods
pushf
mov
adc
dec
inc
call
inc
mov
clc
shlb
mov
mov
and
sub
and
test
add
dec
ret
das
aaa
pop
sub
adc
jmp
dec
lcall
daa
xor
rorl
xor
jns
inc
fdiv
push
sbb
loopne
xchg
push
or
popf
cmpsb
jnp
in
fwait
sub
call
stc
sbb
cmp
jecxz
pop
xor
or
and
lahf
xchg
xchg
stc
aaa
sub
xchg
mov
in
xor
mov
sarb
mov
jg
into
xchg
fildll
mov
inc
push
aaa
mov
xchg
test
and
test
rol
mov
pop
jle
mov
inc
jp
mov
jl
push
cmp
mov
in
add
out
cmp
adc
mov
cli
push
sbb
outsb
and
push
out
sub
jno
mov
mov
cmp
stos
push
cltd
outsb
and
ficomps
mov
dec
dec
pushf
addl
rorb
inc
mov
enter
outsb
aas
or
sub
enter
pop
ja
jle
xor
popa
call
std
jmp
pandn
xor
mov
pop
mov
or
movsl
fdivrl
mov
xchg
sub
or
mov
xchg
mov
pop
sbb
lret
xchg
adc
add
fadds
mov
cld
mov
jne
xchg
sub
cmpb
mov
mov
xor
jns
pop
lock
in
popf
ret
jecxz
jmp
mov
jno
cmc
aam
xchg
xchg
fwait
adc
cmp
mov
mov
pushf
aam
mov
fucomp
mov
jl
dec
ja
mov
popf
mov
int
bound
mov
bound
dec
mov
cs
loop
and
addr16
or
es
mov
out
mov
outsb
inc
adc
push
sub
sub
add
or
xchg
or
std
out
pop
xchg
bound
aam
xor
int
and
push
xchg
pop
mov
les
dec
jne
js
lods
nop
mull
sahf
vunpcklps
inc
ret
das
xchg
cmp
mov
or
push
shrb
test
cmp
lahf
add
std
mov
push
jns
adc
lods
mov
shlb
xchg
iret
sub
xchg
pop
aas
js
test
push
dec
filds
stos
imul
out
inc
jbe
mov
mov
push
jo
stos
sahf
inc
and
inc
mov
or
dec
and
and
fdivp
addr16
lcall
das
popa
hlt
lods
je
int
mov
cmp
xchg
or
ror
pop
in
xchg
or
adc
mov
jg
xchg
jae
mov
push
das
scas
hlt
push
push
mov
xor
aam
filds
add
push
mov
jae
inc
push
ffree
jmp
xchg
icebp
insb
inc
pop
pop
mov
call
sub
jno
jnp
jecxz
xor
loopne
mov
pusha
les
jl
cmp
sbb
mov
stos
aam
jmp
cmc
in
xor
adc
xchg
pop
not
pushf
dec
imul
xchg
pop
cmpsl
clc
jg
std
cmpl
js
into
mov
jmp
movsl
or
fnstenv
jge
dec
stos
addb
orb
gs
mov
out
cmc
and
arpl
test
mov
jle
sbb
or
aam
add
xor
mov
mov
cli
add
adcl
sub
ss
repz
divb
test
scas
js
and
push
into
pop
loopne
aad
sbb
pop
scas
mov
dec
mov
jecxz
sub
repz
or
push
mov
test
stc
pushf
insb
shrb
cmpsb
dec
fsub
xchg
mov
lret
pop
add
push
adc
mov
and
jb
mov
lods
xchg
cmp
es
std
adc
mov
into
mov
fdivrp
pop
xchg
dec
mov
fwait
lods
or
movsl
movsb
notb
insl
mov
xchg
pop
jb
jge
jle
or
push
or
bound
jno
outsl
mov
out
aad
rorb
or
sbb
mov
in
fcmovnu
test
mov
jbe
sbb
push
scas
mov
dec
pop
and
hlt
call
dec
ss
lret
cmp
dec
ljmp
mov
or
outsb
mov
xor
adc
out
hlt
sbb
mov
popf
test
add
test
aad
xchg
ja
xchg
mov
cli
mov
repnz
imul
pop
in
mov
mov
lods
or
lods
cmp
ja
sbb
imul
fld1
adc
fbld
shrl
insb
rcr
push
cmp
jno
mov
sbb
fwait
dec
push
mov
push
fsubs
lds
pusha
mov
add
iret
mov
roll
cmp
dec
sub
ds
movsb
xchg
aaa
call
in
mov
es
push
out
cld
cwtl
cmovge
fdivrs
or
jb
cs
popf
int3
pop
addl
xlat
mov
mov
push
pop
xorb
sbb
and
xor
and
cli
inc
les
cmp
or
inc
cmp
lea
cmp
stos
js
insb
cmp
mov
test
popa
nop
mov
pusha
call
push
lahf
ljmp
mov
call
pop
xchg
cs
ss
pop
xor
nop
mov
push
cmp
xchg
and
cltd
fwait
mov
push
out
inc
out
fnsave
call
lods
lea
xchg
ud1
and
push
rorl
jo
dec
or
mov
rorl
lret
int
xor
push
inc
adc
sub
outsl
es
aas
les
mov
les
arpl
cwtl
aad
pop
lock
push
xchg
cmp
lahf
and
or
fs
das
test
iret
iret
daa
fisubrs
dec
jmp
stos
push
ret
ja
xor
daa
jmp
jbe
adc
mov
add
call
cmp
push
inc
js
cli
mov
fcomps
stc
je
xor
lock
dec
cmp
divl
repnz
xor
mov
push
das
mov
movq
jo
xchg
pop
xor
ficompl
nop
in
xor
and
mov
mov
dec
sbb
mov
test
adc
stos
cmpl
in
ja
movsb
pushf
dec
mov
mov
mov
fwait
imul
loope
mov
iret
in
dec
push
add
inc
mov
pop
pop
icebp
xchg
xor
lahf
mov
cltd
std
andl
cld
sub
pop
pop
sbb
dec
add
add
in
subl
jnp
jno
fwait
cmp
inc
or
pop
pop
cs
xchg
pop
lods
stos
test
mov
dec
stos
xor
cmp
bound
push
shlb
sbb
add
jbe,pt
insb
mov
popa
and
mov
lret
imulb
lret
movsb
sub
shl
subl
inc
add
test
jnp
push
fnstcw
test
ret
mov
sbb
xchg
and
jl
mov
sub
mov
mov
imull
jmp
cmp
inc
cmp
lcall
into
fdivrl
and
pop
adc
idivl
dec
add
test
cmp
cmpsl
xchg
push
int3
lea
gs
je
lret
cmp
mov
xchg
mov
fcomps
repnz
add
subb
sub
mov
pop
stc
sbb
push
mov
cmp
call
cmc
sub
aas
test
sbb
ja,pt
int3
inc
inc
movsb
and
out
mov
gs
arpl
sbb
adc
sbb
push
int3
jo
sub
cltd
inc
mov
mov
nop
xchg
sub
addr16
cmp
hlt
pushf
mov
push
inc
daa
xchg
cmp
jbe
lret
data16
jno
push
mov
or
fs
inc
mov
loopne
insl
sbb
test
dec
imull
sbb
shlb
insb
pop
adc
addr16
push
inc
jp
add
js
sub
clc
cltd
or
cmp
in
pop
js
enter
test
pop
lods
sub
adc
pusha
dec
xor
imul
loopne
mov
jp
mov
popf
ja
mov
mov
jno
push
and
mul
adc
popf
mov
inc
xor
or
ds
jae
enter
dec
and
enter
push
test
stos
mov
sub
add
arpl
addr16
cmc
adc
fstps
pop
cli
ror
sti
sti
pop
outsb
dec
fs
push
scas
xchg
inc
das
cwtl
idivb
je
mov
das
and
inc
icebp
push
ret
push
jo
idivb
xchg
fsubrs
mov
shlb
push
pop
mov
xchg
aam
push
xor
into
nop
outsb
ss
pop
sub
mov
lahf
js
mov
popf
adc
dec
nop
mov
and
aam
call
push
jmp
ja
adc
add
mov
jne
das
idivb
ja
cmpsb
cmp
mov
pop
inc
xor
push
imul
push
jbe
clc
or
push
movsb
call
lret
pusha
sbb
rolb
stos
mov
adc
sbb
xchg
mov
cmp
pop
mov
mov
int3
add
dec
xchg
cmp
cltd
sub
sysret
leave
jmp
inc
pop
shl
filds
imul
ljmp
je
fwait
fwait
repz
movsl
push
ret
cmp
inc
outsb
mov
call
mov
push
xchg
cmp
and
inc
push
repnz
int3
outsb
arpl
add
clc
push
fwait
leave
cmc
mulb
testb
fmull
sub
data16
rep
nop
nop
xchg
loope
movsb
nop
mov
pop
mov
cmp
lcall
pavgw
jecxz
mov
hlt
pushf
add
push
xchg
cmc
mov
jg
mov
xchg
add
push
mov
adc
arpl
dec
jnp
sub
aas
mov
ja
jnp
call
mov
sahf
xor
xchg
xchg
mov
outsb
repz
mov
fimuls
mov
add
mov
xor
lock
dec
mov
xchg
enter
mov
mov
in
dec
repz
pop
mov
in
test
shlb
arpl
scas
jecxz
and
xchg
dec
int3
xor
test
aad
imul
or
and
rorl
movsb
ds
scas
add
stos
je
push
cmp
insl
sbbb
insl
sbbb
sbb
das
shll
aaa
mov
sbb
stc
jns
clc
icebp
clc
jo
js
sub
add
adc
scas
and
mulb
icebp
loopne
dec
je
sub
stos
cmpsl
push
leave
ret
inc
pop
mov
cmc
insb
jl
bound
notb
jo
in
add
and
scas
ret
loop
mov
mov
lret
iret
hlt
movl
inc
jl
push
xor
dec
pop
sarl
inc
fldt
jp,pt
int
push
jl
sub
jp
add
mov
addr16
shll
mov
aad
jno
push
xor
repz
inc
or
lahf
jns
sarl
pop
sbb
imul
call
jl
mov
cmp
leave
outsl
outsb
jnp
jecxz
xchg
mov
lds
andl
aas
mov
lahf
and
loope
rcrl
iret
adc
jns
push
rorl
mov
adc
rcrl
and
inc
cmp
aam
dec
movd
mov
in
addl
mov
jns
icebp
or
movsl
test
icebp
or
in
sarb
and
int
sbb
fxsave
push
pop
in
xchg
xor
add
hlt
out
mov
push
sbb
lahf
mov
aas
push
cwtl
sub
mov
scas
mov
jecxz
jne
out
xor
stos
sahf
pop
aaa
out
mov
arpl
mov
aam
xlat
int3
push
xor
lds
xor
into
ror
lock
andb
pop
popa
test
xor
xlat
push
cmpsb
xchg
mov
jns
push
das
add
in
daa
lods
cmp
adc
cmp
out
lds
dec
daa
and
cmpl
nop
jnp
adc
mov
rcrl
mov
jge
sarb
leave
loop
cs
aad
pop
pushf
xor
cmp
jne
sbb
rcl
jmp
add
shl
inc
xorb
pop
aas
dec
pop
js
test
mov
mov
push
jbe
cld
mov
and
push
popa
das
sahf
out
push
add
dec
stc
inc
add
sbb
dec
inc
out
insb
push
cwtl
fld
fnstcw
ds
push
shr
and
stos
adc
mov
or
cltd
stos
push
nop
jge
push
jle
inc
inc
pop
cmp
and
pop
frstor
jbe
popf
inc
and
enter
jae
jle
or
shrb
subl
jmp
add
push
mov
xorl
cld
pop
sub
aad
jne
leave
pop
sti
cmp
pop
cwtl
ret
imul
int3
ljmp
cmp
sbb
xchg
enter
addw
das
xchg
scas
adc
notl
lcall
push
xchg
icebp
xchg
in
xchg
dec
shl
lret
sub
ja
cmp
cmpb
lahf
mov
cmp
pop
inc
or
aas
xor
sbb
call
int
mov
mov
push
in
xchg
movsl
les
ret
dec
sbb
mov
mov
imul
push
and
or
mov
insb
outsl
mov
sbb
xchg
adc
insl
mov
jns
pusha
xchg
inc
push
xchg
fadds
insb
enter
mov
cltd
jo
stc
add
cmc
popa
test
pop
inc
lods
and
jbe
mov
and
shll
das
imul
xlat
xlat
push
popa
mov
mov
and
fisubrl
adc
mov
scas
and
dec
mov
enter
call
rcll
mov
repnz
mov
ret
ljmp
call
subb
sub
pop
and
gs
add
arpl
xor
push
xchg
stos
cwtl
sbb
sbb
jne
movsb
mov
repnz
loop
leave
mov
add
mov
adc
push
bound
xchg
mov
adc
fistpll
mov
jl
inc
jp
daa
dec
push
adc
mov
movsl
repnz
loop
push
or
stc
mov
xchg
or
pop
cs
fsubr
or
nop
repnz
jns
lods
dec
inc
pop
pop
xchg
adc
bound
les
pusha
testl
fsubr
xchg
js
hlt
mov
into
mov
push
adc
scas
aaa
mov
fnstenv
rolb
pop
push
loop
push
jae
mov
adc
loop
cmpsb
int3
jno
add
sbb
xor
psubsw
xor
adc
adc
sub
rorb
adc
pop
out
push
and
pop
test
outsl
jns
lea
xchg
jle
xor
rcl
fiadds
pop
mov
jmp
cmp
cltd
dec
xchg
stc
sbb
rep
jmp
sahf
daa
mov
dec
xchg
mov
cmpsl
cltd
scas
xchg
mov
jmp
dec
push
xlat
data16
ss
lea
mov
jl
dec
je
jle
out
mov
add
adc
or
adc
sbb
sbb
ret
mov
pop
leave
mov
cmp
pusha
mov
sbb
pop
jbe
movsb
push
cltd
test
add
jl
jae
lret
jge
mov
jbe
cli
jo
insb
pusha
xchg
push
or
mov
cmc
ja
xchg
test
popa
dec
imul
push
int
addr16
jo
clc
outsb
and
sbb
scas
nop
shll
aad
jle
inc
aad
xchg
add
xchg
ds
push
mov
data16
das
out
sbb
xor
sbb
jecxz
dec
fdivl
mov
rcl
lahf
int3
lret
push
test
aad
adc
or
cmp
add
mov
das
sub
or
cmp
mov
add
push
add
add
les
jns
in
movsl
test
mov
fcomps
sub
jp
aaa
notl
or
out
sbb
cwtl
dec
adcb
xchg
cmp
inc
add
push
orb
push
pmulhw
pushf
or
jns
and
repnz
das
fldl
popf
push
jno
mov
push
mov
cmpsb
jg
mov
shr
mov
xchg
xor
mov
sbb
jae
add
push
imul
icebp
xchg
cs
xor
lret
mov
fcomps
movb
test
mov
sub
push
stos
xor
mov
mov
fisttps
ss
fs
daa
or
insl
sub
hlt
xchg
lahf
mov
fnop
hlt
mov
dec
mov
enter
and
outsl
cli
push
jnp
sbb
imul
and
inc
imul
adc
fisubs
pop
adc
sbb
jecxz
mov
push
add
fisttps
pop
cmp
arpl
jp
les
adc
cmc
mov
xchg
adc
in
sub
mov
jecxz
js
out
mov
ja
xchg
mov
repnz
mov
mov
insb
mov
ss
jnp
loop
aas
push
lcall
clc
jae
mov
xor
lods
loop
dec
pop
dec
mov
in
jg
clc
mov
shrb
xor
sarb
mov
dec
and
push
out
aaa
mov
sub
and
dec
mov
adc
adc
sbb
sbb
out
and
cltd
push
mov
inc
movsb
scas
mov
ljmp
xor
xor
shlb
call
cmpsl
add
lahf
adcl
push
in
push
lahf
add
std
sub
mov
pop
push
sub
mov
add
pop
fcoml
jge
xchg
in
and
push
xlat
or
loop
mov
pushf
nop
cwtl
pop
jns
imul
rcll
fisttps
bound
mov
jno
out
dec
mov
mov
mov
addl
lods
dec
adcb
inc
xchg
adc
xlat
aam
mov
xor
mov
fmull
stos
mov
and
sbb
or
je
xlat
lcall
push
cwtl
mov
lret
movsb
ficompl
enter
insl
icebp
or
cmp
jns
xlat
push
fisubl
stos
push
push
sub
lods
out
ret
sub
ficomps
pop
xchg
cwtl
ljmp
xor
or
cmp
mov
inc
or
jne
cmp
sbb
mov
arpl
ja
mov
insl
xor
out
popf
mov
pop
mov
xchg
scas
dec
xor
int3
out
clc
pop
xlat
stos
test
sub
xor
or
ds
fdivrp
call
nop
inc
fnsave
rclb
lsl
arpl
adcb
cmp
xchg
sbb
decl
cmp
sub
mov
orb
xchg
inc
mov
lret
mov
mov
adc
mov
or
pop
jnp
fisubl
out
or
lods
popf
sub
sub
xor
jb
and
jae
lea
bound
pop
inc
sub
add
push
and
cmp
add
cmp
mov
test
out
das
insl
fcomip
fsubrl
push
jl
inc
insb
xchg
inc
imul
loopne
jnp
ret
xor
xchg
add
fwait
out
xchg
lret
mov
daa
ds
ret
enter
push
mov
pushf
outsl
popf
dec
jbe
imul
mov
fisttps
push
or
je
insl
testb
cltd
mov
imull
out
nop
pop
sub
cmc
jecxz
dec
jne
icebp
adc
inc
mov
mov
pop
xchg
push
out
es
call
xchg
repz
lods
ja
fdivr
jne
sub
mov
push
or
push
or
je
in
inc
xchg
in
pop
cmp
test
cs
mov
fucomp
mov
mov
scas
in
xchg
sbb
dec
mov
xor
sub
pusha
fistpl
inc
cmp
iretw
outsl
add
ret
cwtl
imulb
fsubp
pop
push
lods
shlb
fcoms
mov
mov
ljmp
pop
rorb
push
and
adc
jne
dec
bound
xchg
popa
lock
ficomps
arpl
fsts
pop
ds
ds
xchg
or
not
jne
or
cmp
rorb
xchg
or
in
cmpsb
into
and
dec
imulb
jl
mov
adc
xor
dec
add
iret
sub
sarb
or
pop
aam
jp
ja
sbb
or
lods
orb
divb
sbb
jno
adc
xlat
les
push
jne
lahf
xchg
clc
inc
pop
or
mov
pushf
mov
cmp
testl
arpl
fldl
xchg
das
out
loope
jle
lret
in
cwtl
sub
rcll
jo
cmp
push
dec
jle
xor
adc
les
mov
clc
sub
jmp
jmp
lock
sub
jo
and
lret
cmp
pop
in
dec
test
in
jo
sbb
inc
mov
push
ljmp
sub
lcall
adc
pop
insl
popf
inc
lret
xor
nop
and
out
popa
lods
push
jmp
frstor
es
fdivs
xchg
cmp
outsb
lret
mov
pop
and
cltd
into
or
cmp
push
xchg
inc
data16
cmc
pop
aaa
inc
mov
call
popf
pop
sbb
js
xor
push
mov
add
mov
pushf
xchg
mov
movntps
out
in
dec
pusha
cli
dec
add
js
push
test
int3
mov
inc
adc
dec
enter
pop
sbb
mov
jp
cmp
jno
test
movsb
lret
movsb
addr16
test
mov
sbb
add
sub
test
pop
xchg
or
or
and
stc
popl
jmp
ffree
xchg
cmp
mov
ds
jae
inc
shlb
sahf
roll
sti
popf
test
daa
mov
cli
aas
sub
mov
ficoml
lret
sbbl
add
movsl
imul
xchg
push
cmc
push
or
sahf
xrelease
mov
xor
xchg
sbb
cmp
adc
faddp
clc
mov
sti
add
inc
repnz
and
push
or
adc
cmp
scas
je
pusha
shrb
inc
shl
dec
lcall
clc
inc
imulb
push
dec
in
push
push
jbe
fwait
pop
xchg
mov
jne
gs
adcb
lret
in
inc
fists
or
cs
out
sarl
aam
outsb
push
sti
loope
push
shl
sbb
cli
aad
shrb
xchg
int3
jno
clc
push
pop
fidivrl
fcmovb
xchg
cmp
fwait
lods
shl
int3
cmp
jno
sbb
sbb
or
loopne
or
lahf
cmc
stc
mov
test
mov
push
aaa
fistpll
stos
ret
rol
mov
jne
ret
and
mov
mov
dec
shlb
popf
cmp
and
or
lock
sahf
add
mov
mov
das
paddsw
ss
adc
mov
insl
cmp
xor
mov
mov
addr16
push
call
mov
adcl
pop
xor
mov
mov
xor
mov
into
sbb
pop
popa
lea
sub
adc
lcall
mov
pop
subl
roll
insl
xor
mov
aaa
jl
jbe
movsb
aam
sti
jno
or
cmp
cwtl
fdiv
insl
dec
aad
sbb
cmpsb
jo
and
pop
aam
pop
push
add
inc
and
jl
fldcw
aad
lahf
sub
adc
xor
inc
push
in
dec
lock
pop
lock
dec
xor
bound
push
sahf
scas
xor
out
adc
scas
sbbb
hlt
idivl
stos
div
shrb
imul
sbb
push
adc
xchg
jecxz
sbb
push
aad
or
pop
add
testl
pop
inc
or
mov
pop
cmp
inc
mov
test
addl
into
mov
jae
jns
fldt
rcr
fistps
lds
repz
ds
xchg
inc
pop
jge
pop
scas
adc
movsl
mov
sahf
leave
pop
out
lret
jecxz
in
jg
aaa
jnp
and
imul
inc
sar
loopne
push
fs
adc
xor
mov
dec
cmp
scas
dec
mov
inc
adc
mov
and
push
aaa
addr16
lret
mov
push
jae
mov
int3
setns
ror
sbb
pop
fisubrl
clc
inc
xlat
cmpsb
cmpsl
test
lret
jb,pt
or
mov
adc
mull
jb
lret
jg
pop
les
fdivp
xor
sub
push
leave
inc
cmp
pop
out
pop
aam
arpl
insb
dec
imul
aas
mov
sbb
addr16
repz
push
jl
xchg
sbb
and
xchg
movsl
jne
sti
js
push
mov
mov
cmp
addl
lods
and
mov
push
stos
in
jns
mov
mov
jp
leave
loope
test
ret
jle
xor
sub
into
cmc
mov
mov
arpl
pushl
add
and
push
cmpb
aad
mov
add
fcmovnb
fsubr
ja
cmp
lds
test
icebp
jg
push
in
fldl
jo
in
call
rol
cmp
cmp
add
push
xorl
repnz
dec
or
jns
mov
cltd
cmp
cli
ss
stos
pop
sub
mov
fs
ficomps
sbb
cs
inc
mov
xchg
fcmovne
pop
mov
adc
int3
adc
out
iret
les
les
xor
push
aam
fs
inc
ret
shlb
jae
dec
fiaddl
in
adc
mov
out
and
out
sti
les
or
jle
xchg
mov
lock
push
xchg
mov
jbe
xchg
and
lea
and
aad
mov
adcb
lret
movb
movsb
jle
push
test
hlt
xor
shlb
push
sub
or
adc
adcb
repz
mov
cmpb
idivl
in
outsl
stos
cmp
mov
jae
insl
or
xchg
ss
aas
mov
mov
mov
sub
fdivrl
dec
shll
lods
mov
jg
in
inc
insl
mov
into
sub
or
popl
fisubrl
jo
cmpsl
adc
mov
fisttpll
lock
or
lahf
sbb
shl
push
inc
xchg
lods
inc
push
mov
sub
xchg
jmp
sti
cmp
inc
lods
sub
sbb
in
add
jmp
out
xchg
loop
mov
inc
or
xchg
shlb
lret
repnz
sbb
fildll
pop
jecxz
push
test
das
push
mov
es
daa
test
loopne
jae
outsl
stos
insb
fdiv
sub
push
stos
inc
cs
xchg
movsb
mov
inc
std
mov
inc
mov
dec
mov
insl
dec
flds
in
aad
push
imul
and
jo
jl
dec
outsl
addl
and
lods
cltd
mov
or
push
sahf
out
jle
and
out
xor
sbb
mov
push
pop
sbb
mov
xor
xchg
nop
jmp
adc
out
push
add
mov
jmp
xor
cmp
dec
lret
lea
push
inc
into
xchg
outsl
sub
cs
cltd
insb
stos
sub
jle
in
pop
mov
fadds
lret
xor
or
popa
mov
cmc
nop
cwtl
mov
lcall
les
fs
lret
jecxz
mulb
and
and
outsb
jmp
cmp
fists
mov
jge
sti
lods
sti
adc
mov
nop
push
lds
dec
xor
jnp
inc
add
jne
xlat
mov
cmp
cld
jmp
mov
push
mov
fs
data16
insb
aad
cmp
sbb
out
imul
add
lcall
cmp
add
pop
stos
cmc
mov
jle
sarl
ret
xor
std
jno
pop
testl
add
cmc
ja
int
sub
xchg
xorl
out
mov
in
xchg
add
iret
xor
mov
hlt
mov
xchg
adc
mov
pushf
aam
mov
ret
adc
and
mov
outsl
daa
in
ret
fidivrl
pop
lcall
scas
lds
aaa
into
scas
dec
and
imul
decl
mov
comiss
mov
inc
mov
xchg
lahf
addr16
and
jmp
lods
out
idivb
fistl
js
and
mov
scas
call
dec
into
clc
outsl
shr
push
out
outsl
dec
and
pop
cmova
and
out
jp
adc
out
pop
adc
dec
outsb
call
test
adc
push
cmp
pop
mov
mov
and
push
not
sub
mov
and
xlat
cltd
and
shl
or
in
mov
enter
mov
adc
fadds
xchg
mov
push
jl
add
jno
mov
call
inc
out
in
inc
push
dec
pop
cld
test
stos
ja
fdivs
rorl
jae
shrb
cld
sub
pop
inc
xchg
mov
mov
outsl
inc
in
mov
push
or
shlb
subl
mov
mov
xor
arpl
dec
leave
loopne
dec
cltd
bound
cmp
and
mov
mov
scas
lcall
nop
mov
lock
xchg
sub
sahf
nop
test
in
jnp
dec
inc
test
fisttpll
lock
or
jb
cs
shll
push
repnz
std
lret
cmc
popl
imul
add
ja
aaa
adc
cmp
ds
or
mov
mov
mov
and
int
pop
stc
or
das
xor
pop
js
aad
mov
pop
ficompl
gs
scas
pop
mov
hlt
push
sub
fldcw
cmp
aam
xor
xor
movlps
pop
pop
sub
inc
or
xlat
sub
daa
add
or
arpl
dec
insl
add
dec
xchg
stos
cltd
sub
or
or
das
pop
les
movsb
pop
movsl
add
movsb
mov
or
inc
add
int3
jl
int3
cmp
xchg
mov
divb
adc
hlt
jl
loope
jmp
outsb
push
in
mov
mov
and
dec
lahf
and
rorb
mov
sti
pop
bound
dec
mov
shl
xchg
lret
in
pop
push
cmp
dec
sbb
lea
pop
jge
mov
jmp
insb
sub
lods
mov
push
movsl
or
xchg
inc
std
push
lcall
mov
mov
and
cmp
cmp
adc
lock
in
nop
mov
xor
js
mov
fstpt
loope
es
in
jle
xchg
call
xchg
add
jg
jns
xor
mov
xchg
jno
sti
sub
fcmovnb
adc
sub
mov
push
call
subl
in
adc
ret
loopne
fidivrs
mov
out
pop
dec
out
fsubl
dec
jne
push
xlat
jno
dec
in
out
lea
or
mov
push
fstpt
push
sub
in
sub
mov
cmp
xorb
rclb
cmpsl
or
pop
addr16
sub
or
xchg
popf
lock
in
push
outsb
orb
sbb
mov
jae
clc
push
add
mov
lds
scas
fcmovne
xor
inc
pop
fcompl
xchg
cs
mov
mov
inc
push
sahf
mov
xchg
mov
out
sbb
in
ret
std
cmp
jnp
adc
mov
ja
pop
add
push
jle
dec
rol
pop
mov
lcall
xchg
repz
pop
dec
sbb
cmp
push
lcall
jge
push
or
pop
xchg
loope
or
or
and
mov
jno,pt
jns
cwtl
jnp
mov
cwtl
push
fbstp
adc
cwtl
std
fsts
inc
mov
std
and
fldenv
wbinvd
fisubl
sbb
add
shr
lds
insb
out
jl
pop
xchg
mov
lods
bound
imul
loope
fstps
jno
test
xlat
out
inc
xorl
ror
fwait
movsb
das
sbb
hlt
mov
std
pop
push
xlat
inc
xor
sahf
gs
popa
xlat
xchg
fildl
add
or
test
mov
fimull
jae
stos
and
inc
xchg
dec
cld
xchg
lahf
push
stc
jnp
js
xor
rclb
into
daa
pop
in
jecxz
jo
in
test
sbb
loope
movsl
popa
mov
cli
jbe
add
js
or
push
xor
lahf
cmp
xchg
and
in
loope
push
mov
iret
int3
adc
fdivp
adc
cld
mov
sbb
divl
jae
adc
stos
push
in
cmp
pop
jne
stos
test
pop
imul
mov
fmulp
in
std
push
dec
adc
cli
xor
pop
nop
sahf
mov
sub
mov
or
in
jge
insb
stos
out
shll
imul
pop
enter
lcall
mov
add
mov
pop
push
jae
iret
stc
test
add
xchg
xchg
mov
lahf
sarb
mov
fldt
pop
xchg
adc
mov
test
cmpsl
or
and
add
fwait
in
es
mov
dec
in
test
mov
pop
mov
push
mov
jbe
mov
nop
cmc
aam
fists
pop
ret
or
fidivrl
inc
inc
lods
mov
mov
dec
fcmovne
out
sbb
cwtl
dec
jne
call
leave
adc
mov
jecxz
addr16
xchg
cmpsb
dec
imul
bound
xor
pop
add
jl
adc
leave
shlb
loop
push
dec
outsl
sbb
jb
dec
cmp
sbb
nop
mov
dec
and
or
cwtl
and
xchg
fnsave
sub
adc
test
jg
cmp
jle
pause
jge
adc
sub
pushl
dec
xchg
into
scas
mov
sub
mov
or
mov
mov
mov
cld
cs
sbb
ljmp
hlt
mov
arpl
jo
imul
sbb
mov
mov
sbb
rcrl
inc
int3
fsubrl
pop
daa
js
pop
mov
into
cmp
mov
into
push
push
pop
mov
xor
loope
and
jmp
and
dec
lds
daa
aaa
xchg
in
enter
sub
mov
imul
jp
icebp
mov
fxch
icebp
mov
stc
out
jmp
lds
mov
dec
xor
and
push
xchg
loopne
sbb
enter
sub
cmp
fisubrs
dec
and
mov
inc
arpl
xor
clc
dec
mov
push
xchg
dec
and
es
pusha
inc
outsl
imul
sahf
insl
cmc
incb
hlt
add
aad
cwtl
mov
mov
lcall
mov
or
lea
ret
jl
jp
cld
cmp
rcrl
cmp
or
add
push
jle
push
mov
jae
and
mov
cmp
repnz
loopne
jg
arpl
cli
push
aas
dec
adc
out
lret
pop
insl
scas
fisttpl
and
fstpt
push
push
adc
fcoms
mov
sahf
or
xor
mov
daa
push
mov
daa
call
in
pop
aam
stc
jge
add
iret
mov
loopne
data16
cld
outsb
and
outsb
jbe
rorb
cmp
loopne
int
mov
push
jae
jbe
cwtl
pop
push
dec
ljmp
ja
cmpsl
jae
or
cld
fistl
cmc
sahf
jmp
push
jge
cmp
and
fucomp
push
jp
xor
repnz
std
sub
pop
adc
invd
mov
idivb
cmpsb
out
adc
pop
and
mov
shl
sub
xor
arpl
leave
scas
pusha
repnz
and
push
ja
lcall
xchg
insl
aaa
xchg
ljmp
scas
xchg
dec
push
and
pop
inc
sub
lods
sub
pop
push
fwait
cs
in
movsb
int
out
and
pop
in
lcall
into
lds
push
sbb
xchg
std
insb
xorl
mov
iret
ret
cld
push
jecxz
cmp
push
jbe
icebp
movsl
adcb
xor
add
test
mov
cmp
imul
mov
dec
mulb
push
mov
scas
add
dec
daa
pop
repnz
xorb
mov
inc
gs
in
ret
lock
in
cmpsb
xchg
es
mov
stos
jb
ret
cmp
leave
mov
jl
ret
add
in
jmp
push
sti
es
mov
sbb
scas
mov
adc
push
jmp
pop
mov
mov
in
aaa
mov
mov
inc
mov
cli
mov
stc
mov
outsb
jno
std
lcall
jg
out
or
stc
loopne
das
in
dec
cltd
sbb
lret
mov
hlt
sbb
mov
cmpl
jle
cmp
pusha
inc
mov
jns
adc
arpl
loope
popa
mov
pop
stos
mov
cmp
sbb
clc
pop
sub
adc
repz
xchg
push
bound
mov
push
inc
das
sahf
add
adc
sbb
or
dec
rclb
xchg
fcoms
sub
jecxz
insb
xor
cltd
xor
xchg
push
lods
push
call
sub
in
lock
adc
out
jle
lcall
popl
sti
mov
lods
push
add
das
scas
mov
jnp
xchg
scas
sub
pop
or
sub
push
ficoml
movsl
push
dec
lds
es
jne
shll
mov
pusha
sub
bound
lret
pop
hlt
mov
dec
xor
test
xchg
data16
or
jbe
dec
adc
add
pop
loopne
enter
sbb
push
shll
into
sbb
mov
movsl
int3
push
xchg
in
loop
mov
lea
add
lahf
sub
cld
mov
cmpsl
test
in
inc
or
or
loop
pop
sub
pop
dec
dec
cmp
lcall
push
ss
and
call
jbe
sub
jbe
xchg
and
sbb
or
push
scas
std
sar
inc
xchg
je
sbb
stos
push
xor
add
sbb
ret
daa
add
in
clc
dec
sbb
es
ret
pop
and
pop
and
imul
jecxz
mov
push
out
or
rorb
adc
pop
clc
mov
mov
jo
cmp
adc
repz
insl
xchg
ret
inc
or
mov
jae
lcall
lahf
and
push
jne
jno
mov
pop
jecxz
popa
das
inc
fdivrl
cmpsl
aas
out
dec
mov
push
inc
push
je
xchg
jg
xchg
daa
mov
mov
sbb
repz
add
and
mov
and
mov
popf
test
jp
xor
pop
push
iret
outsb
cmpl
repnz
cmp
inc
sub
into
xlat
int
xor
and
sbb
fmuls
fstpt
inc
xlat
push
test
adc
mov
hlt
jle
xchg
sahf
lock
dec
loopne
enter
jbe
inc
xlat
aas
push
out
inc
adc
in
movsl
in
bound
aam
add
xor
jb
into
clc
cmc
aaa
btc
repz
or
sub
jbe
nop
sub
sbbb
cmpl
dec
dec
iret
jbe
je
arpl
xlat
pop
pop
xor
push
mov
imul
into
inc
shrl
xchg
je
cmp
jmp
je
add
xchg
sub
adc
mov
leave
cmc
fst
jae
inc
aas
outsl
into
dec
repz
inc
mov
rclb
in
ret
mov
out
jbe
mov
pop
into
inc
cmp
loopne
fsub
insl
push
mov
lea
push
mov
sbb
sbb
popa
out
mov
punpcklbw
cli
mov
enter
pop
push
lcall
push
ljmp
cmpsb
mov
sub
dec
sahf
xchg
adc
xchg
adc
and
andb
xchg
xor
inc
fucom
push
cmp
out
pushf
out
push
push
sbbb
sbb
pop
fimuls
or
and
outsl
repnz
jg
add
repnz
lock
push
leave
lods
dec
call
in
mov
in
in
stos
or
xchg
push
outsl
andl
test
cmp
add
add
fisubl
and
sbb
xor
mov
mov
inc
shlb
cli
push
push
into
xchg
cmpsl
cmp
lods
cli
sbbl
push
pop
xorb
filds
test
push
and
cmp
push
dec
and
mov
ret
js
xor
sbb
pusha
pop
add
mov
dec
adc
cmpxchg
mov
aam
jle
inc
pop
gs
in
xlat
ss
in
cli
xchg
lahf
sbb
imul
push
enter
arpl
pcmpeqw
and
into
add
sbb
add
lds
lock
clc
outsb
insl
imul
ja
inc
add
fildll
pop
sbb
sbb
xlat
nop
scas
add
jmp
pop
aad
push
dec
push
movsb
pop
inc
push
mov
repnz
je
cmp
icebp
adc
arpl
push
mov
mov
push
xchg
push
imul
les
test
icebp
mov
js
adc
cmpsb
jbe
loope
loop
and
push
rol
shr
or
mov
jb
imul
aad
cli
rcrb
or
aad
mov
dec
mov
xlat
mov
mov
mov
aas
inc
fstpl
mov
cmc
pushl
xlat
outsb
add
ja
insl
aad
mov
dec
pusha
cld
cmp
cmpl
adc
les
fdivrs
adc
fistl
xchg
call
and
cmc
or
push
aaa
stos
pop
in
out
add
cmp
xchg
js
inc
dec
aad
dec
jge
fadd
iret
dec
inc
scas
mov
mov
or
mov
cmp
or
sbb
or
repnz
lahf
sub
gs
cmc
es
call
pusha
adc
ds
sti
or
mov
push
repnz
adc
jle
add
bound
mov
mov
sub
enter
mov
xor
sub
add
ds
stos
in
out
adc
aad
aam
jmp
pop
cmpsl
push
and
xor
xchg
pushf
mov
and
and
jmp
or
loope
push
dec
xchg
add
ds
jb
mov
out
xchg
lahf
and
jo
int3
and
push
nop
ret
ds
idivl
mov
sbb
xchg
popa
test
push
pusha
psubq
add
fwait
inc
fwait
mov
lods
push
push
js
movsb
pop
popf
jno
xchg
roll
negb
jmp
jo
movsl
pop
jb
jne
in
and
or
sti
mov
pop
in
insb
pop
cmpsl
push
mov
mov
push
paddsw
xor
insb
pop
pusha
ljmp
xchg
push
leave
dec
jg
jbe
ljmp
inc
test
xchg
cmp
mov
mov
lahf
nop
or
mov
andb
dec
jbe
pop
push
adc
push
rclb
mov
jmp
les
sti
cltd
mov
fldenv
insl
push
pop
mov
sbb
push
out
xchg
pop
jne
pop
cmp
dec
imul
mov
lret
mov
cltd
lcall
mov
lcall
xchg
mov
rorb
hlt
sub
aas
out
out
xchg
or
call
repz
xchg
or
movsb
sbb
jmp
fwait
cs
jecxz
push
mov
cmp
cli
cmp
pop
dec
movl
xchg
xchg
aas
push
xchg
inc
mov
pop
cmp
pop
push
icebp
popa
dec
mov
dec
ds
ror
xor
sti
shll
sub
mov
cmp
pusha
sbb
insl
lret
scas
lods
ss
lret
scas
pop
ret
sub
fidivrl
sahf
adc
fadds
ds
stos
mov
pop
mov
int
popf
lock
mov
movsl
insb
clc
fcmovb
pushf
xor
mov
cmc
xchg
dec
or
cmp
mov
xor
pushf
lds
ds
pop
jb
mov
fbld
pop
sub
dec
mov
xchg
xor
std
pop
loop
cli
mov
mov
xchg
and
fdivrp
cmovne
jno
sbb
repnz
jp
insb
mov
cmp
in
shrl
test
push
insb
aam
cmpsb
iret
gs
neg
jno
imul
pop
aad
cli
mul
mov
loope
cs
jg
sub
cmp
pop
cli
stos
fcoml
inc
push
cmp
fbld
mov
jbe
rclb
inc
or
xchg
andb
int3
das
fnstsw
nop
shrl
ds
xchg
movsbl
test
fstl
cmp
mov
sub
imul
push
cmp
mov
ja
pushf
cmp
pop
xor
filds
mov
iret
adc
or
aas
and
push
imul
in
lcall
mov
or
test
adc
cmpxchg
aad
fdivr
cmp
add
je
jns
call
mov
xor
cmp
mov
dec
into
mov
leave
jbe
push
push
enter
fistpl
cmp
nop
scas
ficomps
inc
mov
sbb
scas
das
or
je
and
add
nop
lret
and
mov
jg
jno
jns
in
lds
invlpg
and
sbb
pop
out
int3
pop
and
mov
mov
mov
shll
fisttpl
je
lahf
dec
iret
sub
mov
push
mov
mov
cmp
push
sbb
mov
jmp
mul
dec
inc
cs
push
std
add
test
xor
ss
mov
mov
pop
imul
repz
pop
sub
xchg
lea
jle
ret
pop
test
in
pop
pop
or
xor
mov
xor
lcall
cmpsl
rep
dec
fsts
clc
inc
jae
mull
xchg
dec
sti
cmp
std
or
xor
mov
mov
mov
xchg
in
sbb
vfixupimmss
jne
xor
scas
and
test
sub
inc
loopne
roll
adc
inc
inc
mov
clc
addr16
push
fwait
sbb
push
push
fldenv
dec
arpl
xchg
test
test
jp
stc
cmc
or
out
sarb
stc
sub
jne
pop
sbb
in
push
mov
in
rcrb
mov
xchg
mov
mov
jae
enter
das
imul
adc
call
add
loop
adc
jnp
das
repnz
lahf
push
hlt
jae
loop
sub
push
icebp
imul
jno
je
in
cmp
popf
js
jle
push
subb
fnstenv
jge
popf
ljmp
push
xor
fcomip
subl
shl
mov
cmpb
pop
jl
lcall
jp
push
jmp
or
cltd
insb
dec
leave
jnp
jecxz
inc
sti
dec
movlps
sub
sbb
popa
push
xchg
jb
mov
pop
scas
dec
ret
xchg
adc
les
jmp
mov
mov
lret
push
pop
and
mov
sbb
xor
mov
movsl
add
test
mov
in
jle
inc
into
nop
cmp
sbbl
cmp
xor
inc
push
leave
mov
add
pop
shrb
jbe
das
fisubrl
xor
sbb
inc
loope
data16
dec
arpl
lock
and
shrb
ja
sub
push
shrb
xchg
icebp
jnp
jo
dec
sbb
mov
sbb
and
pusha
mov
inc
sbb
sub
xor
inc
jns
sbb
cmp
sub
jmp
sarb
mov
xlat
inc
inc
lcall
outsb
add
push
scas
add
imul
pop
vpunpckldq
ja
aad
jecxz
inc
sbb
mov
outsl
push
or
ss
pop
mov
pushf
inc
cmpsl
arpl
loopne
sarl
jmp
imul
sahf
scas
pop
js
pop
cmp
rol
enter
movsl
push
cs
adc
cmp
pushf
mov
ja
xor
fsubl
adc
push
xchg
movsl
push
cmp
add
inc
pop
jp
mov
or
push
lods
mov
adc
push
lret
das
repz
xchg
xor
add
fs
mov
lcall
mov
jge
popa
adc
test
xor
xor
imul
mov
repnz
mov
test
dec
jmp
out
fs
testb
pop
pop
enter
sbb
cmp
adc
push
mov
push
lds
pop
jne
dec
sub
fcmovbe
fldl
xchg
mov
cld
rcrb
inc
mov
loopne
loop
jecxz
jb
sbbb
mov
aad
leave
fwait
insb
jbe
mov
dec
outsb
jle
mov
or
inc
cltd
cmp
hlt
std
and
fcoml
push
xlat
push
mov
sbb
pusha
in
shrl
adc
mov
hlt
les
jo
scas
daa
jp
add
xchg
xor
int
cwtl
leave
mov
jecxz
subb
in
fimull
aas
xor
sub
mov
ret
pop
and
in
pop
adc
jmp
pop
xchg
cmp
arpl
inc
xor
lcall
push
test
add
cmp
fimull
mov
addl
cli
imull
fsubrs
pop
dec
xchg
mov
outsl
repz
cmpsb
inc
add
aam
ss
fxam
mov
jns
jbe
out
add
aad
int
mov
lret
sub
or
or
jns
pop
xlat
aaa
clc
out
pop
fadds
inc
andb
pop
or
jnp,pt
shl
jle
mov
loope
in
rcrb
test
sbb
dec
dec
xor
sub
jge
les
loopne
outsl
dec
mov
pop
inc
cli
fdivl
sub
adc
mov
xor
rcrb
in
enter
cmpsb
pop
cmpsl
out
xchg
or
fsin
add
jbe
dec
and
dec
adcl
stos
push
das
push
dec
enter
push
fwait
inc
mov
into
test
jno
xchg
adc
ret
add
and
mov
imul
add
fdivrl
mov
ret
ret
add
push
and
xchg
popa
fsubl
or
std
in
lods
cli
mov
aam
lods
mov
imul
mov
fsts
or
add
mov
adc
cmp
stos
aad
rcll
arpl
sub
lods
repnz
in
inc
mov
or
mov
dec
popa
jp
mov
sbb
leave
push
cltd
xchg
inc
push
leave
rcll
adc
loope
cmc
mov
inc
bound
lret
ret
sub
or
dec
jne
mov
mov
or
mov
es
rcr
adc
add
mov
jne
xchg
fstl
std
jp
lods
jmp
xchg
out
xor
in
pop
sbb
xchg
jnp
int
sbb
mov
int
hlt
rcrb
push
cmp
push
jecxz
enter
jl
xlat
cld
mov
fldt
std
add
or
in
loop
pop
popa
out
adc
xor
mov
sub
sahf
and
daa
jne
aad
shrb
mov
xor
pop
aad
pushf
inc
cmp
scas
cmp
and
imul
push
lock
test
adc
adc
leave
leave
pop
subb
pop
push
jno
mov
inc
cs
pop
jae
push
fwait
adc
out
add
mov
int3
andl
sub
xor
mov
push
mov
or
in
aas
fldt
mov
mov
in
add
push
cmpsl
inc
cmp
jge
dec
push
into
and
mov
add
cld
inc
pop
and
pop
arpl
jns
inc
mov
lock
aas
dec
adc
jnp
inc
into
or
test
add
dec
add
mov
adc
xchg
popf
orb
adc
jbe
sti
mov
push
mov
lods
sbb
scas
mov
stos
xchg
inc
cwtl
xor
cmp
loopnew
jne
stos
or
testl
pop
push
mov
lock
jle
mov
pop
cwtl
rcll
popf
sbb
daa
adc
push
and
js
in
scas
dec
adc
cwtl
test
lahf
sbb
jge
or
pop
cmpsb
mov
dec
push
and
imul
pop
cmp
cmp
push
repz
rcl
pushf
ljmp
cld
push
xor
inc
cmp
cld
mov
inc
mov
mov
and
xor
mov
push
inc
aas
sbb
inc
loop
mov
shrl
testl
and
cmc
sahf
jne
mov
outsl
std
mov
mov
movsb
sub
cmp
nop
stos
ljmp
pop
mov
das
aam
aam
jno
dec
test
sbb
cmp
mov
dec
gs
enter
sbb
adc
fwait
xor
xor
add
movsb
jge
enter
xchg
xchg
clc
mov
lds
cli
sub
inc
adc
pop
sbb
cli
dec
xor
fcoms
fsubs
inc
sub
mov
adc
ja
pop
loop
aad
in
mov
dec
in
jg
sbb
inc
mov
cmpsb
stos
iret
xchg
fldt
adc
and
and
mov
sbb
ss
mov
cmpsb
mov
xchg
rcll
into
cmpsl
jb
adc
and
bound
subb
add
fbstp
add
mov
inc
jge
xchg
lods
std
es
popf
dec
xchg
mov
dec
js
pushf
test
inc
mov
mov
xchg
popa
and
in
sbb
in
xor
add
pusha
adc
andb
imul
clc
xchg
inc
aas
ret
jg
mov
xchg
mov
lret
repz
repnz
inc
xor
mov
or
pop
sbb
xor
push
cwtl
jg
add
add
int3
sbb
roll
fisubrl
shrl
insb
and
cmp
jne
lods
push
scas
or
jo
push
or
gs
xchg
jecxz
call
or
push
dec
inc
das
stos
arpl
rol
push
jl
mov
adc
lods
imul
into
inc
jb
dec
scas
mov
sub
pop
jle
and
pop
andb
xor
sub
loop
inc
jl
mov
je
cmp
sahf
add
mov
sbb
idiv
dec
adc
dec
xchg
push
cld
lds
cmc
inc
dec
movsl
std
lret
xlat
or
or
pop
pop
pushf
cmpsb
jg
pusha
pop
mov
and
aam
inc
mov
push
mov
lret
mov
push
ds
scas
mov
popf
pushf
sti
cmp
and
mov
push
inc
sbb
dec
aam
dec
and
xlat
or
xchg
sahf
ss
fsts
push
jecxz
xchg
push
sub
mov
cwtl
movsl
mov
test
jge
pop
xorb
xlat
shl
push
clc
xor
in
loopne
sbb
push
test
add
jno
jle
bound
push
xchg
and
jp
push
jne
add
data16
insl
jl
sub
push
mov
push
addl
dec
ret
sub
jns
xor
dec
icebp
ss
push
imul
dec
testl
fnstcw
rclb
sub
pop
je
fisubs
cmpsl
loopne
adc
and
push
pop
inc
add
test
cltd
enter
jg
lea
mov
cmpsb
xchg
push
cli
inc
add
enter
or
pop
jmp
enter
jl
mov
xchg
and
sbb
or
and
pushf
in
xchg
dec
pop
mov
add
scas
add
lods
cmp
orb
mov
je
insl
hlt
cmp
pop
pushf
pop
orb
adc
mov
sub
js
jecxz
xlat
in
mov
inc
jge
mov
pop
jb
lea
test
in
or
mov
scas
loope
dec
dec
lods
mov
lcall
ret
mov
jnp
jno
xor
pushf
xchg
dec
fmuls
xlat
xor
shlb
arpl
icebp
rorl
out
or
push
mov
and
adc
add
sub
inc
scas
mov
jecxz
inc
mov
xchg
mov
cmp
dec
pop
push
mov
fwait
pushf
adc
sbb
imul
in
xchg
and
jbe
mov
and
popf
and
adc
cld
cmpsb
sub
sbb
pop
mov
or
mov
mov
push
xlat
int3
xlat
mov
leave
and
push
xchg
xor
add
mov
ljmp
popf
or
cmp
pushf
mov
shl
imull
inc
pop
push
gs
xorl
test
and
adc
adc
mov
push
gs
aad
mov
sbb
imul
mov
sub
inc
push
push
nop
xchg
int
mov
jl
xor
push
xchg
subb
shlb
mov
push
sbb
adc
fisttpl
fs
mov
or
test
xor
insb
push
fnstcw
out
fldenv
sub
ror
aaa
push
outsb
add
adc
fwait
cmpsl
mov
xor
ds
xor
imul
pop
popa
out
lods
jge
pop
sbb
push
outsl
inc
loop
mov
shrl
ret
in
test
sub
dec
add
outsb
push
jl
or
lret
xor
ss
inc
xchg
testl
jne
scas
out
scas
das
xor
push
ret
mov
add
outsl
test
cmp
fmull
popf
adc
cs
mov
ss
inc
push
mov
ss
pop
xlat
test
cmp
xor
rcrl
and
lods
pop
stc
jno
lods
add
inc
rcrb
pop
mov
fisubrs
std
mov
incl
and
inc
cli
icebp
mov
pop
sar
lods
or
scas
pop
push
pop
pop
push
jmp
jmp
out
aad
push
int3
aas
pushf
mov
dec
mov
sub
sbb
xchg
push
jae
fwait
popa
push
push
xor
pop
rcll
jne
lods
mov
int
sarl
into
inc
stc
jl
xlat
xor
xchg
lods
sbb
mov
xchg
mov
loopne
rcll
add
inc
xchg
test
dec
jge
jb
test
dec
xor
hlt
xor
fadds
cmc
inc
rclb
out
scas
sar
sahf
push
loop
push
mov
add
sbb
mov
mov
call
fs
or
mov
mov
xor
sub
pop
loopne
cmc
fdivl
repz
inc
mov
lds
loopne
mov
dec
inc
mov
js
loop
popf
mov
adc
insb
push
or
aad
inc
aaa
xor
cmp
jmp
and
sbb
push
sub
xor
jl
lcall
fisttpll
pop
sti
jo
adc
pop
mov
mov
and
jl
popa
ja
mov
and
sub
and
add
jp
or
lret
mov
pop
jns
sbb
ja
inc
pop
repnz
imul
push
sub
aaa
inc
movsl
adc
xor
mov
dec
fdivrl
sbb
jae
das
mov
cwtl
jns
mov
jae
movsb
jl
pop
mov
dec
cmpb
in
jmp
push
push
push
inc
xor
iret
mov
or
test
sarl
xor
scas
mov
ljmp
mov
jge
jmp
mov
icebp
bound
push
adc
fiadds
enter
out
xor
adc
pop
in
data16
mov
arpl
pop
pop
pop
mov
xchg
add
ret
pop
dec
sbb
mov
xchg
in
inc
adc
hlt
stos
lods
mov
gs
nop
insb
lahf
inc
mov
push
popa
clc
loop
arpl
enter
mov
out
pusha
jb
lea
stos
or
test
iret
inc
adc
or
loopne
jo
bound
insb
xchg
and
and
jae
in
shrl
mov
mov
adc
and
add
lcall
aas
xorl
nop
and
sub
mov
mov
shrl
xchg
les
inc
ja
jae
adc
fildl
push
lds
loop
scas
dec
adc
cmp
pop
pop
pusha
sbb
call
insb
or
inc
roll
inc
icebp
pop
mov
ret
je
inc
sub
aad
or
out
fbstp
enter
xchg
xchg
adc
jae
ja
push
aaa
iret
or
mov
or
push
pop
pop
sti
cmp
mov
outsb
add
mov
jbe
test
inc
test
fstl
pop
mov
and
xor
mov
fiadds
jns
and
cltd
cmc
mov
cmp
mov
jbe
xchg
orl
bound
cmc
test
es
inc
push
data16
test
iret
rol
sbb
scas
aad
pop
or
mov
nop
push
int3
aam
add
mov
mov
jp
repnz
dec
jg,pn
push
out
cmp
adc
inc
dec
pop
adc
loop
mov
inc
sbb
or
testb
and
dec
push
and
mov
push
xchg
rol
arpl
and
out
cs
outsl
aaa
push
scas
dec
mov
std
fildl
pop
aas
cmpsl
cmpsl
fstl
rorl
xor
aaa
stc
rolb
push
adc
push
stc
sarb
jmp
jg
jb
in
cmp
push
add
lret
cmp
pusha
dec
or
jl
insl
jge
or
js
adc
xor
inc
adc
inc
adc
mov
jmp
lret
orb
rcrl
hlt
dec
fs
icebp
mov
ja
ljmp
mov
aam
dec
xor
test
std
out
push
xor
sbb
stc
cmc
sbb
jns
cli
mov
and
and
into
adcl
pop
fwait
dec
sub
xor
je
test
push
out
lea
push
icebp
fadds
pop
dec
mov
aam
arpl
dec
cmpsb
lds
fisubrs
push
clc
int3
mov
push
cmp
mov
or
mov
xor
push
rolb
push
int
fdivrl
mov
mov
xchg
pop
jmp
lret
or
mov
mov
scas
int3
subb
mov
inc
nop
sbb
push
pushl
adc
xor
mov
or
jecxz
jge
fisttpl
jno
mov
pop
leave
mov
cmp
in
inc
cmpsb
push
adcb
arpl
jge
int
xchg
sbb
jne
lcall
popa
pop
aaa
repnz
clc
dec
push
inc
test
hlt
lahf
rclb
inc
mov
rcll
out
repz
addr16
cmp
sub
sahf
add
push
repz
inc
jo
loope
sub
push
fs
cmc
imul
xchg
jo
and
scas
aad
ret
stos
inc
test
loopne
js
push
cmp
jecxz
mov
jmp
or
std
pushw
or
es
adc
aam
adcl
sub
mov
mov
and
and
std
xchg
xchg
les
sub
js
shlb
sbb
xor
test
jge
push
push
repz
in
inc
imul
out
xchg
in
popa
inc
adcl
shr
push
adc
data16
mov
lahf
faddp
lret
leave
push
sbb
jecxz
popa
std
lds
sbb
and
fwait
xchg
cmp
xor
or
int3
add
adc
jb
cs
or
dec
add
shll
int
pop
arpl
jl
lds
or
sbb
add
cld
push
sub
pusha
xor
dec
jmp
rcrl
jno
sbb
enter
es
push
add
push
leave
or
jae
xor
mov
loope
mov
pushf
pop
dec
push
popf
fistps
dec
mov
je
xchg
int
psubd
clc
lds
movsb
inc
sub
mov
fistl
out
cwtl
out
movsb
jo
dec
jl
push
loope
pop
jmp
outsb
loopne,pt
jae
arpl
inc
fistps
dec
daa
sahf
lds
das
daa
dec
jmp
pop
imul
popa
jge
sub
out
adc
mov
xor
or
ret
fs
mov
xchg
mov
dec
adc
adc
insb
fisubl
xchg
mov
jno
test
sub
mov
cmp
push
jne
lock
xor
nop
stc
mov
or
dec
fmuls
inc
push
adc
inc
mov
std
lods
insl
ja
xchg
imul
into
orb
push
daa
stos
aas
das
push
jb
xchg
and
mov
jae
repz
notl
repnz
in
mov
jno
mov
cmp
repnz
mov
add
or
and
or
pop
pop
fs
dec
or
inc
aas
push
shrb
pop
mov
and
pop
push
pop
ds
jle
xchg
iret
xor
sub
jno
xor
sub
dec
loope
add
add
lret
jle
cmc
or
sub
sub
repnz
mov
push
inc
repz
dec
jp
orl
or
xchg
mov
movsl
out
movsb
ret
in
push
das
ret
push
adc
mov
aaa
and
stos
fldt
mov
leave
dec
shll
jo
push
pop
roll
xchg
or
and
aas
jno
mov
lahf
fiaddl
repz
insl
jne
and
mov
lock
push
mov
int3
fidivl
sub
push
ds
cmp
data16
fidivl
pusha
or
mov
pop
mov
loope
aaa
mov
pushf
scas
sbb
es
mov
sub
jg
cs
push
push
xor
mov
addb
insb
rolb
stos
loop
xor
mov
fildl
and
in
mov
xor
idivl
inc
jne
divb
dec
int3
mov
cmp
bound
mov
add
loope
jecxz
dec
mov
dec
adc
jns
add
test
dec
xor
mov
jo
mov
xchg
andl
insb
jne
sbb
xchg
xchg
inc
stos
jge
mov
in
push
pop
cwtl
repz
mov
lret
movsl
js
pop
movsl
xchg
test
dec
stos
jne
mov
or
hlt
cmp
xchg
push
push
jecxz
out
xor
or
push
jo
fwait
pop
lret
pop
fs
mov
test
in
jns
add
fnsave
push
mov
push
mov
jne
scas
jp
popa
mov
push
cmpsb
bnd
add
repnz
cmpsl
subb
cld
shlb
data16
dec
cmp
out
sbb
push
push
jl
outsl
mov
rclb
ds
shll
cmp
cmp
mov
repnz
xor
and
dec
adc
or
jg
cmp
dec
lcall
add
xor
adc
nop
inc
fcoml
mov
fwait
dec
push
stos
adc
push
ret
sbb
adc
sbb
mov
inc
cmp
aam
push
mov
dec
subb
inc
mulb
xchg
fimull
mov
sbb
popa
lcall
mov
cmpsl
mov
mov
out
aam
scas
das
add
cli
sahf
movsl
addr16
or
mov
push
mov
pushf
mov
int3
or
mov
pop
sub
lret
mov
aaa
sbb
test
leave
sub
push
and
push
stc
daa
filds
add
in
dec
adc
fdivrs
jle
fimuls
jp
repnz
roll
xor
es
mov
cmpsb
mov
push
inc
inc
enter
pop
aad
mov
sub
mov
das
sbb
inc
data16
fdiv
mov
sub
pop
js
push
push
xlat
cs
sub
insb
ret
mov
jg
das
push
push
cmp
addr16
mov
add
hlt
mov
in
fsubrl
icebp
mov
jb
mov
repz
ret
cmp
add
loop
add
dec
jge
add
xor
xchg
add
mov
push
dec
add
xor
mov
out
xchg
addr16
popa
mov
push
rcrb
cmp
sbb
test
cmp
xchg
shr
jne
push
adc
jns
push
lds
cli
rorb
mov
loop
xor
xchg
ret
xor
fs
mov
jge
xchg
xchg
ret
inc
jne
push
lds
dec
ss
cli
icebp
inc
mov
inc
inc
mov
pop
jmp
jno
sahf
out
push
es
enter
mov
mov
subl
lcall
push
xchg
push
mov
iret
fs
test
data16
add
sub
xlat
or
adc
jge
xor
fistl
jg
or
cmpsb
aas
sbb
inc
xchg
jle
mov
push
inc
movsl
loope
and
popl
inc
stos
push
sub
sbb
fwait
push
in
inc
sub
mov
mov
jecxz
fnstenv
cmp
mov
test
xchg
cmp
in
jge
shrb
cmc
push
and
cmp
mov
inc
pop
or
cmp
or
push
pop
enter
mov
imul
aas
rclb
movsb
adc
jp
addr16
es
fxch
inc
xor
push
pop
cltd
int
arpl
jnp
out
aad
push
cmc
push
pop
xor
cvtpi2ps
stos
clc
mov
outsb
xlat
sub
dec
imul
adc
push
xchg
cmp
in
adc
call
jge
and
ret
jns
in
add
repz
pop
movsb
xor
push
cmc
popf
sbb
sbb
test
xor
pusha
add
loop
xchg
jmp
sbb
sbb
fisubrs
and
cmpsl
stos
mov
testb
fcmovne
leave
test
lcall
mov
cmp
mov
test
in
insl
cs
cwtl
bound
iret
cmc
int3
pop
insb
testb
push
jl
adc
mov
or
cmp
add
call
xor
sub
mov
mov
mov
adcl
data16
cmp
iret
test
js
loope
imul
std
sub
or
mov
pop
aas
fstl
mov
or
xchg
test
test
adc
incl
mov
adc
and
repnz
faddl
lcall
pop
inc
mov
sbb
test
cwtl
lods
ret
fs
add
pop
mov
test
or
xchg
adc
dec
cmpl
sub
mov
or
mov
adc
daa
popf
push
or
rcll
movsb
mov
sbb
or
in
sbb
dec
xchg
mov
inc
sub
fiaddl
aas
cmp
bound
loop
adc
mov
rorl
jecxz
mov
sub
xchg
pop
ficoml
inc
lods
js
lock
aad
inc
mov
or
dec
lahf
lock
je
dec
mov
shrb
jb
pop
mov
push
mov
jno
loope
mov
pop
out
and
lret
mov
pop
push
push
movsb
push
inc
and
and
loope
push
pop
sahf
ficompl
pusha
sub
add
data16
mov
nop
out
cwtl
mov
xchg
jno
shl
jmp
stc
ds
lret
sbb
aad
data16
lods
hlt
jg
jno
add
or
mov
add
mov
scas
pop
push
out
mov
jne
mov
push
nop
adc
hlt
mov
xor
lods
adc
fstps
and
add
fdivl
and
dec
jo
ret
loop
xor
jl
lret
into
dec
dec
fistps
inc
cmp
jo
push
cli
mov
aad
int3
xor
je
pop
pop
cld
mov
cld
scas
punpcklbw
push
lea
data16
and
sbb
mov
and
push
ret
xor
xchg
push
jbe
cs
or
in
xchg
jmp
inc
and
pop
data16
jp
cmp
lds
mov
or
insb
clc
jns
mov
pusha
xchg
xchg
fidivs
sbb
jb
imul
repnz
push
adcb
push
cmp
mov
sti
ja
arpl
fs
sub
sub
ret
adc
ja
push
cs
or
jbe
pop
outsb
pusha
jecxz
xor
xlat
pop
mov
or
push
cmp
mov
jbe
xor
in
mov
insb
pop
add
pop
mov
loope
mov
jmp
inc
fldlg2
imull
in
pop
ror
lret
xor
pop
mov
iret
insb
in
dec
insb
stos
sti
in
jb
cmpsl
ror
sub
insb
dec
jo
imul
mov
mov
popa
sbb
inc
sbb
fsubp
scas
repnz
pop
cmp
cmp
cmpl
xor
dec
hlt
cltd
adc
dec
sub
sarb
pop
fpatan
adc
mov
fistps
jne
cmp
xor
aad
push
fcmovnb
lcall
leave
jmp
rolb
cli
add
mov
call
push
inc
xchg
mov
js
sub
dec
scas
cwtl
aad
mov
inc
ficoms
dec
mov
inc
test
rcr
hlt
addr16
mov
sti
push
xor
stos
cmpsl
sub
pop
scas
xchg
mov
xor
outsl
xor
xor
jb
mov
sub
or
std
lds
and
inc
inc
xchg
lock
xchg
popa
xchg
nop
push
or
cmpsl
sar
lret
push
ljmp
cltd
xlat
movsl
jecxz
cmc
cmpsb
gs
inc
push
sub
push
fs
lret
add
sbb
xorl
push
scas
bound
popf
push
aam
pop
push
cmp
inc
insb
imul
outsl
mov
test
xchg
jge
inc
mov
lahf
icebp
push
sahf
mov
xor
xchg
mov
cmp
push
stos
add
xor
xchg
cmpps
sub
rclb
dec
ret
xchg
jl
fidivrl
pop
in
push
mov
insb
mov
sbb
std
es
xor
icebp
stos
mov
jb
sub
mov
popf
xchg
xor
enter
push
mov
pushf
iret
pop
sub
mov
jp
mov
mov
xchg
pop
or
pop
in
call
push
insl
cwtl
fisttpl
xchg
ss
call
mov
sbbl
in
jne
push
sbb
je
dec
dec
and
xchg
sbb
aaa
cli
xor
aas
xchg
fnstcw
loope
out
xor
testl
or
or
and
pushf
jmp
pushl
push
adc
cmpsl
mov
orl
dec
dec
push
je
pusha
lock
mov
sub
xor
or
dec
aam
inc
mov
fwait
stos
imul
xchg
sbb
xchg
ds
push
jl
imul
ja
das
lahf
sbb
mov
sbb
lret
enter
iret
mov
call
xor
mov
out
fnsave
lea
inc
addr16
push
dec
xchg
lahf
cwtl
aad
leave
xor
push
in
out
lret
jp
stc
sbb
push
adc
mov
pop
jle
aaa
xor
and
jbe
dec
add
pusha
in
imul
ds
mov
xchg
add
loope
jp
dec
adc
movsl
std
loop
int
in
out
jns
add
push
and
mov
in
scas
cwtl
fisubl
add
push
cmpl
and
sti
mov
and
mov
lcall
movsb
cld
cmp
out
addb
mov
pop
dec
mov
xor
push
loopne
and
pop
xchg
into
pop
clc
outsl
test
ret
je
sbb
mov
jl
cmp
ljmp
int
inc
int
cmc
xchg
jl
es
ljmp
add
or
adc
int3
testl
or
and
cmpsl
rcrl
jbe
insl
jge
test
insb
xor
sar
mov
into
add
dec
ja
sti
int
mov
xchg
cli
imul
xchg
addr16
sbb
orb
sub
pop
dec
mov
cmc
sub
or
cld
popf
cmp
in
sbb
cmp
xchg
std
sub
push
push
inc
fwait
sub
sub
jns
fcmovb
push
arpl
gs
sub
sub
outsl
cmpsl
imul
movsb
movsl
mov
je
add
lods
push
daa
iret
xor
repnz
aad
rcrb
sbb
or
lret
sbb
fidivrs
adc
jnp
sarl
adc
div
sbb
xchg
adc
mov
and
scas
pushw
jae
test
sarl
push
xchg
push
mov
jns
popa
xor
cmc
popa
xor
pop
pusha
adc
inc
mov
dec
mov
push
aaa
test
hlt
rcrb
mov
and
imul
pop
adc
addl
in
xchg
rcll
js
push
inc
sbb
xchg
and
fldt
xchg
adcl
jns
test
xchg
inc
lock
out
mov
mov
push
out
scas
fisttpll
pop
insl
and
cli
mov
mov
push
add
enter
lods
movlps
hlt
add
mov
dec
inc
sub
or
pop
nop
pop
cmp
das
icebp
int
dec
xchg
jle
push
in
mov
lahf
mov
adc
jp
inc
shl
dec
push
lret
inc
inc
ret
insl
pop
pop
scas
sbb
push
lds
xor
push
imul
add
fwait
mov
call
xor
insl
jmp
dec
mov
mov
in
sub
inc
jb
pop
sub
sbb
fucomi
sbb
rolb
pop
and
mov
xor
push
pop
jmp
test
lret
hlt
stos
insb
movb
cli
pop
xor
out
pop
mov
pop
add
mov
sahf
ds
fwait
int3
dec
lods
dec
lea
stos
adc
jo
mov
cmp
xor
ss
mov
js
mov
ja
es
popa
dec
inc
sub
loope
pop
mov
fsubrl
ljmp
push
xchg
loope
faddp
or
sbb
adc
mov
sbbb
adc
lahf
in
test
dec
es
jecxz
xor
mov
xorl
mov
adc
jecxz
mov
and
jo
sub
pop
cmp
xor
or
mov
and
mov
loope
int3
lds
daa
loope
pop
mov
jl,pt
fsubrs
loopne
push
push
cltd
sbb
push
les
push
sub
push
adc
divl
pop
in
loop
fnstsw
icebp
rorb
xchg
pop
push
pop
xor
sti
mov
pop
jae
push
or
mov
pusha
push
lret
daa
or
sub
aad
sti
or
cltd
xchg
push
dec
xchg
push
je
fcoml
mov
sub
mov
mov
or
stos
shlb
test
xchg
outsl
subb
mov
mov
xor
rclb
call
pop
sbb
and
sti
xchg
nopl
xchg
fsubrl
mov
das
add
lret
ljmp
loope
xchg
cmp
or
repz
sahf
jnp
das
inc
fwait
xor
icebp
pop
lret
push
dec
rcl
add
jnp
mov
pop
push
out
ror
mov
mov
adc
fildl
les
jge
push
adc
stos
mov
and
jmp
mov
aad
cld
jb
xchg
sbb
pusha
adcb
sub
data16
dec
insb
dec
outsl
inc
cld
xchg
inc
push
test
xchg
dec
add
xor
mov
scas
outsl
mov
and
popa
mov
lret
xchg
lcall
xchg
sbb
cltd
sub
xlat
xchg
push
popa
daa
lods
xchg
int
cmp
mov
inc
mov
jle
pop
jmp
lock
js
mov
cmp
aam
dec
rol
icebp
imul
sub
lods
inc
inc
iret
dec
repz
rcrl
add
cld
cli
xchg
fisubs
mov
into
jno
mov
nop
jns
fcompl
loop
adc
xchg
vmovaps
jb
lock
shll
iret
cmp
popa
mov
cmp
dec
rorl
push
xor
fildll
shll
cmp
int
lods
inc
aad
inc
mov
mov
xor
insb
xchg
call
iret
xlat
adc
adc
idivb
clc
icebp
stc
cmp
xor
cmpsb
fxch
ja
inc
inc
in
pop
sbb
pop
sub
aas
and
nop
aas
sbb
js
jb
aad
cld
jge
imul
mov
dec
xchg
pop
fwait
pop
out
sbb
inc
push
aaa
inc
jp
loop
cmp
movsl
sbb
dec
int
jb
pop
adc
jne
imul
int
mov
lea
mov
cwtl
xorl
ret
push
push
mov
xor
pop
mov
and
out
dec
mov
mov
stos
loope
dec
sub
cld
jo
bound
sbb
aaa
out
fwait
xor
cmp
inc
cmpsl
mov
lods
popa
push
jmp
insb
faddl
in
ds
xor
scas
dec
xorl
ret
sbb
sbb
mov
mov
mov
testb
jns
sbb
mov
roll
daa
cmp
popf
sub
cmpsl
cmp
sbb
mov
cmp
cmp
inc
or
in
rcr
int3
add
popa
in
repnz
xlat
cmp
test
cmp
inc
xchg
jo
negb
fcomps
inc
test
sbb
jae
stc
pop
pop
in
leave
jg
int3
cwtl
mov
arpl
cli
imul
lods
xchg
fstpl
js
out
jbe
test
shrb
mov
sub
jb
fs
or
or
in
mov
push
xor
call
add
pusha
push
insl
mov
pop
mov
loop
cwtl
xor
std
dec
mov
test
xchg
repz
ds
into
jno
lahf
jno
stos
pop
cmpsl
outsb
jl
jmp
outsl
adc
test
loop
push
push
frstor
and
mov
jne
push
xchg
mov
cli
pushf
add
xor
into
je
push
add
adc
cmp
and
mov
mov
inc
add
add
cmpsl
pop
xchg
mov
js
enter
add
stc
inc
cmp
aas
and
and
stos
push
adcb
pop
loop
adc
sub
mov
cmpsb
and
lds
xchg
nop
clc
jmp
adc
out
xchg
pop
cld
jns
imul
or
scas
ror
lret
or
insb
imul
mov
inc
xor
subb
pusha
cmpb
xchg
mov
and
aas
xchg
in
in
lock
scas
imul
mov
rep
xlat
xchg
lret
pop
sti
mov
mov
mov
inc
or
das
xor
sahf
lcall
lea
push
jne
add
jmp
inc
clc
lock
and
add
bound
and
inc
inc
pop
push
sbb
push
clc
push
mov
sbb
inc
dec
jmp
xlat
repz
in
or
xchg
mov
imul
popf
adc
push
inc
adc
add
push
xor
out
test
je
jge
fildll
mov
stos
and
cwtl
cmp
mov
push
lret
inc
mov
sub
dec
das
sbb
ja
push
shrb
lea
xor
and
int
and
test
adc
scas
ss
cmp
lret
aas
scas
add
aas
jns
imulb
jge
cmp
mov
inc
insb
shlb
xchg
les
fistl
dec
test
sub
adc
into
jne
dec
nop
outsb
mov
mov
xchg
arpl
ret
jbe
addr16
sub
lret
je
push
scas
mov
xchg
and
xchg
jae
mov
test
fsubp
pop
push
or
fsubrl
mov
add
sub
mov
pushf
or
push
std
stos
pop
mov
cwtl
xchg
cli
sti
cld
popa
sti
add
ds
and
or
rclb
mov
bound
cltd
into
ljmp
lock
mov
pop
sub
mov
cmp
push
xchg
shlb
pop
mov
into
imul
jo
add
std
rorl
inc
ficoms
dec
pop
jmp
pop
repz
ret
orl
xor
pusha
add
fs
insb
jno
and
movsb
jg
or
cmpsl
and
or
clc
mov
xchg
andb
xorb
and
mov
sarb
fisubl
les
in
adc
lret
pop
neg
decl
test
sub
lret
push
push
loope
ljmp
idivb
dec
das
pop
scas
xor
std
out
test
and
add
clc
js
fcoml
nop
jge
and
inc
push
clc
loopne
push
iret
ror
xchg
xchg
aas
pop
sarl
pop
xchg
sub
jg
jb
xchg
jbe
adc
adc
mov
sub
fs
push
in
lock
mov
outsl
cmpsb
arpl
dec
mov
ss
lret
cli
xor
push
lret
sub
div
ds
pop
cmpsl
xor
sarl
jnp
push
fwait
push
sub
lcall
cltd
push
rol
aad
and
inc
mov
inc
cmp
orb
mov
out
clc
jne
cli
push
cmp
mov
and
cld
aaa
in
in
int
adc
fists
cld
pop
inc
adc
mov
xchg
or
or
pusha
sbb
dec
pop
pop
mov
sahf
jnp
sub
fidivrs
pop
sbb
daa
sbb
add
int3
popa
into
int3
int
scas
jns
xor
js
fs
stos
push
mov
lds
fnsave
mov
cmp
loopne
hlt
mov
mov
pusha
jae
jns
and
jecxz
fucomi
mov
iret
cmpsl
rcll
xor
xchg
sbb
jb
push
mov
sub
stos
mov
jmp
out
enter
cmpsl
lahf
ds
scas
lds
movsb
in
xlat
mov
jge
mov
mov
jecxz
adc
fdiv
cmp
pop
jae
cmpsb
addb
jmp
subl
clc
dec
or
in
in
mov
rcl
dec
fs
jb
movsb
ret
fnstenv
and
mov
or
pop
cmp
mov
mov
sub
sbb
imul
faddl
xor
stos
std
sub
push
xor
inc
aas
je
jp
popf
mov
sub
pop
stos
inc
call
lods
dec
sbbb
sub
mov
paddusb
jg
xorl
push
outsb
test
mov
cmpsb
pop
inc
imulb
je
lcall
fstl
fcmovu
test
mov
aas
adc
sub
fdivl
cmp
or
pop
imul
push
mov
fdivl
clc
cmp
jnp
ljmp
popf
pop
in
sahf
jne
movsb
xchg
pushl
adc
pmaxsw
push
bound
cmp
neg
insl
add
or
sahf
rcrb
lds
jne
jp
daa
dec
clc
das
test
pop
inc
sbb
lock
add
aad
xchg
fidivs
or
gs
mov
add
and
orb
push
or
dec
lods
stc
or
outsb
jbe
mov
adc
sbb
mov
dec
sub
test
jno
decl
sti
sbbl
and
movsl
shrl
dec
rcl
adc
scas
push
and
push
adc
and
inc
cmpsb
fmul
pmaxub
pushf
mov
add
les
ja
xchg
fistpll
pop
push
fistpll
sbb
and
fldenv
loopne
sbb
int3
int
sbb
fnsave
sahf
aaa
icebp
fstl
sbb
adc
loop
mov
outsl
cwtl
xor
and
adc
int
nop
enter
bound
push
or
mov
pop
adc
jecxz
cwtl
mov
fs
mov
sub
nop
sbb
ds
arpl
inc
mov
ret
in
sarb
subl
lcall
lret
cmp
mov
testb
jbe
icebp
test
mov
scas
mov
xor
data16
push
adc
cmp
pop
mov
xor
jb
insb
cmpsl
inc
adc
inc
dec
je
fwait
and
xorl
dec
std
mov
loopne
aas
psrlq
cmc
nop
jg
mov
pop
and
mov
dec
mov
stos
fs
dec
push
icebp
push
fdivrs
fnstcw
cltd
das
cltd
jno
jb
dec
vmread
add
and
mov
hlt
add
dec
dec
fdivrl
xchg
or
sbb
fsubs
testb
mov
or
sbb
es
push
aam
pop
jmp
and
or
popa
movsl
test
lods
xchg
cmc
push
aam
in
cs
loope
ret
fdivrl
cmp
mov
mov
cmp
xchg
insb
jne
jmp
fidivrs
jae
and
xor
not
hlt
sbb
ret
in
cmp
fdiv
sbb
mov
add
mov
add
push
fs
jp
sub
test
out
mov
cmp
pop
and
js
push
jge
sub
push
shlb
dec
adc
int
adc
push
inc
add
int
adc
sub
mov
cmp
test
sub
pop
jle
sub
jnp
lds
arpl
lods
cwtl
es
push
dec
test
dec
fdivrl
lds
mov
dec
scas
pop
mov
nop
xor
jns
xchg
and
mov
loopne
in
add
loop
cmp
or
js
scas
shlb
mov
mov
xchg
loopne
jnp
adc
jb
movsb
inc
jo
aad
hlt
mov
iret
popf
jo
repnz
pushf
int
in
call
loop
test
mov
jnp
lret
stc
movb
cli
xchg
movswl
stos
jae
push
or
jo
jmp
jbe
inc
mov
jg
repnz
fdivr
pop
aas
in
and
cmc
sar
cmp
sub
jne
test
push
mov
aad
pop
xchg
jnp
pop
sbb
xchg
sbb
sub
mov
outsl
mov
mov
pavgb
cltd
mov
inc
jp
dec
jae
add
mov
std
pop
sbb
int
jno
adc
cmp
out
push
xchg
xchg
sti
leave
inc
in
outsl
and
dec
sub
pop
mov
mov
mov
cltd
mov
push
dec
test
rcll
xchg
cmp
push
mov
call
lahf
pop
and
push
or
fidivl
sti
lret
hlt
push
push
add
fcmovnu
xor
das
dec
mov
push
rolb
add
clc
inc
leave
daa
enter
rcll
sub
test
mov
ret
sahf
popf
dec
push
mov
cmp
adc
imul
adc
aad
mov
sti
lret
push
scas
inc
in
iret
push
negl
xlat
mov
dec
cmpsl
push
ret
ficomps
ljmp
dec
mov
xor
mov
leave
shll
orl
jg
adc
push
add
imul
inc
mov
mov
and
cmp
int3
in
mov
cmpsb
out
dec
mov
jecxz
pop
xor
mov
jbe
clc
jg
dec
fwait
punpckldq
sbb
test
xchg
add
into
imul
sub
mov
or
fsubrl
ret
movsb
xchg
adc
xorb
mov
jge
pop
pop
add
pushl
mov
or
std
rcrb
cmp
xchg
cmc
iret
add
sbb
mov
mov
rolb
out
loopne
hlt
loop
fcoms
lret
enter
int3
pop
mov
pop
jecxz
dec
jg
lds
and
xor
jae
mov
inc
loop
push
xor
pop
mov
pop
pop
test
push
sarl
dec
int
in
ss
pop
movsl
push
out
int3
mov
lret
bound
ss
and
pop
push
stos
inc
jne
adc
push
sti
or
cs
or
pop
mov
hlt
cmc
mov
andb
xor
shll
test
es
imul
dec
push
in
dec
xor
ret
icebp
cmp
cmpsl
test
push
cwtl
aam
xor
cld
dec
ja
cmc
nop
outsb
adc
sub
imul
mov
insb
icebp
or
insl
mov
and
sub
inc
icebp
pop
sub
movsl
mov
js
pop
cmp
rorb
dec
inc
cmpsb
xor
insb
shrb
lods
push
or
fidivrl
arpl
and
or
cltd
mov
out
leave
fcmovnb
js
xchg
cmp
fists
sub
ds
push
testl
jmp
inc
outsl
daa
sub
jns
sahf
enter
mov
imul
jmp
mov
add
loop
inc
cmp
shll
sbb
jl
jo
ljmp
adc
mov
xchg
fs
mov
out
jo
popf
or
pop
leave
or
push
adc
jl
cs
sbb
add
fidivs
daa
int3
cltd
mov
outsl
or
loope
or
inc
dec
cmp
repz
aad
push
lods
add
shll
pop
aas
push
add
jno
popa
mov
xchg
sbb
iret
push
popf
pop
and
jo
roll
add
mov
inc
sbb
sbb
loop
iret
sub
mov
shrb
cwtl
pop
lods
xlat
and
outsl
les
leave
notl
stc
pop
xor
xor
dec
or
push
adc
icebp
xor
mov
xchg
cmp
cmp
mov
std
enter
push
push
fsubs
ficoms
dec
outsb
xchg
mov
add
cmp
fdivrl
mov
adc
mov
call
repz
push
jge
call
out
mov
lds
adc
fstpl
inc
lock
testl
aaa
jge
or
push
jnp
out
push
jmp
mov
and
fs
and
dec
aaa
jno
push
pop
out
lock
xchg
sub
psllq
inc
arpl
decl
arpl
mov
shll
pop
outsl
xor
push
xchg
jo
jl
and
bound
mov
xchg
cli
xchg
cli
push
out
lock
sbb
push
incb
dec
sbb
mov
daa
cmp
pushl
popa
pop
xchg
pop
jbe
shlb
std
popa
mov
scas
std
loope
bound
adc
insl
jo
iret
sbb
cmpsb
sub
xchg
inc
cmpsl
jnp
or
and
pop
cmp
aad
in
aam
xchg
push
inc
sbb
lods
mov
outsl
int
jno
xor
das
push
clc
pop
or
inc
cs
push
sti
dec
dec
repnz
test
cmc
dec
not
add
dec
add
dec
scas
jl
mov
push
repz
xchg
mov
sti
scas
lcall
mov
loop
out
add
sub
jle
mov
add
mov
lret
cmp
stc
mov
imul
xchg
inc
test
pop
arpl
inc
shrl
das
notl
gs
sub
sub
and
mov
rcr
add
jb
jp
push
lret
nop
pop
stos
into
inc
add
loopne
mov
jb
mov
add
popa
or
mov
inc
push
push
sbb
jne
inc
jb
dec
outsb
jp
bound
push
fisubrl
fbstp
scas
mov
pop
push
daa
repnz
lret
pextrw
sub
aas
vcmpps
mov
addr16
mov
ss
cmpsl
test
xchg
push
mov
and
adc
rcrb
xor
xchg
mov
test
add
push
mov
movsb
lock
jbe
imul
adc
mov
cld
push
pop
enter
jne
fadds
cli
dec
pusha
cmp
lods
je
xchg
or
sub
sti
push
jecxz
arpl
inc
dec
dec
movsl
mov
jbe
js
ljmp
xor
cwtl
push
inc
pop
movsl
cmp
mov
jae
push
or
xor
mov
mov
mov
imul
add
mov
mov
and
dec
pop
add
out
jno
in
mov
or
iret
jl
pop
sbb
rorb
pop
lods
stos
cs
jp
cmp
xlat
pop
push
adc
addr16
jne
inc
mov
js
mov
leave
into
aam
imul
daa
jbe
gs
lods
xchg
and
aam
or
subl
mov
test
dec
push
lret
ret
mov
jb
sbb
sarl
les
pusha
ja
fisubl
jb
push
nop
sahf
mov
scas
or
sub
imul
lock
jo
cmp
in
jae
mov
cmp
or
adc
fidivrl
sub
adc
mov
sbb
jmp
add
addl
cmpsb
add
ljmp
dec
cmpsl
xchg
pusha
pop
insl
loop
push
aaa
in
repz
cmc
adc
jmp
mov
xchg
mov
and
sbb
adc
dec
adc
push
loope
and
sar
testl
mov
jb
pushf
xchg
out
inc
push
mov
sub
fwait
mov
orl
fnstcw
xchg
mov
push
jmp
jecxz
adc
mov
jmp
jnp
sub
and
fsubrl
outsb
or
lea
js
mov
xchg
add
jne
jecxz
loopne
out
pop
fimuls
xlat
je
fcoms
popf
dec
subb
mov
icebp
xchg
hlt
ja
out
inc
std
das
xorb
mov
xor
rol
xchg
vmovaps
andl
sub
dec
aam
adc
adc
enter
movsb
or
pushf
xchg
mov
lock
mov
lret
shlb
cmp
adc
in
stos
xchg
test
jecxz
mov
mov
sbb
test
push
subb
jecxz
inc
sbb
fsubp
jg
mov
cmp
push
leave
repnz
jae
loope
insb
movb
in
and
and
pop
pop
or
cmp
into
adc
arpl
ret
daa
dec
fistl
and
lret
mov
inc
mov
popa
aad
pop
push
pop
jne
shrl
int
loopne
pop
aad
outsl
jge
mov
xchg
dec
and
cmp
mov
out
xchg
les
jl
and
and
mov
sahf
call
pop
pop
out
and
xchg
add
dec
repz
jns
or
xor
push
jnp
ss
jns
dec
fwait
les
mov
mov
adc
cmp
cmp
clc
mov
enter
pop
xor
stos
push
into
rorb
adc
movsb
cmpsl
icebp
xchg
mov
pop
lock
sub
out
cmp
int
je
sub
lds
mov
pop
adc
test
cli
fadds
inc
mov
mov
adc
ja
xchg
pop
sub
pushf
or
mov
xor
addb
mov
dec
xchg
dec
icebp
mov
test
fwait
xchg
outsb
das
out
mov
iret
lock
push
mov
scas
pop
in
pop
inc
and
adc
sbb
sub
out
lret
pop
sbb
or
xor
std
add
push
fimuls
aad
aaa
xchg
mov
xor
ja
out
push
sub
pop
pop
shrl
adc
in
je
mov
xchg
dec
fldt
or
jl
insb
mov
or
pop
dec
pop
bound
adc
ret
sub
mov
jl
sub
sub
xchg
dec
insl
and
pop
das
call
mov
pushf
push
mov
add
outsl
mov
cmp
push
push
pop
sti
adc
out
pop
mov
sub
push
pushf
fisubs
mov
loope
inc
jge
or
and
nop
rcrl
in
fiaddl
jbe
dec
xchg
cmpsb
idiv
imul
cmp
repz
cmp
push
iret
inc
mov
mov
cltd
test
fucomi
and
mov
divb
and
loop
lods
mov
adc
jmp
and
rorl
js
loope
lahf
inc
lret
sub
and
xchg
inc
jno
sbb
inc
lret
xchg
js
dec
fucomip
cmp
enter
cwtl
xchg
cmp
adc
movsb
fs
ljmp
loope
pop
add
lcall
out
push
pushf
jns
repz
roll
out
mov
aad
jle
hlt
enter
pop
mov
or
mov
jmp
fistpll
adc
or
pop
stos
test
loopne
push
xor
jle
pop
stos
inc
fstpt
fiadds
push
loope
lds
fistpl
xor
and
out
mov
xor
mov
arpl
pop
add
divb
inc
movsl
add
cmpsl
jne
jnp
sbb
in
cmc
inc
or
sbb
mov
cmp
sbb
shlb
sbb
je
inc
jnp
lahf
mov
popf
scas
test
pop
shll
out
lock
xor
rclb
and
fcomps
or
xor
rcrl
cli
mov
push
lods
dec
mov
xchg
loopne
pop
jbe
or
dec
lcall
repnz
push
pop
xor
fwait
shrb
imul
lea
popa
push
test
inc
dec
out
neg
dec
nop
insl
stos
push
push
push
leave
mov
mov
lods
mov
scas
push
cmpsb
add
orl
scas
mov
jnp
shrl
jg
js
pop
or
pop
pop
int3
dec
js
and
popf
cmpsb
dec
pushf
lods
testb
push
imul
push
das
fcmovnb
gs
xor
std
and
jne
cs
shr
jne
or
insb
add
stos
xor
pop
test
cltd
leave
xchg
scas
out
ss
push
mov
pop
xor
xchg
imul
fwait
and
and
repnz
push
mov
outsl
out
or
jae
lret
lea
pop
subl
pop
scas
int3
sti
push
xor
or
push
xchg
test
scas
cmp
push
out
test
ljmp
mov
fistl
clc
shlb
shrb
add
mov
or
inc
jg
adc
fbld
jle
sub
dec
mov
nop
jnp
dec
dec
gs
jg
mov
cli
pop
pop
repnz
aam
or
pop
sub
dec
int
out
je
and
mov
test
lahf
xlat
push
int
roll
loop
cli
xlat
add
pusha
push
jg
or
mov
xchg
es
sbbl
mov
sarb
xchg
gs
prefetch
or
addr16
push
icebp
or
and
mov
sbbb
lret
jle
and
xchg
loope
test
fisubrl
ja
jmp
icebp
repz
xchg
data16
int3
in
adc
fs
adc
fistpl
adc
sub
daa
movsb
std
lret
and
pop
cli
inc
and
xchg
sbb
cld
in
adc
xchg
jno
lcall
mov
es
push
cld
mov
scas
in
hlt
push
jecxz
ljmp
dec
sub
inc
daa
xchg
out
add
adc
out
inc
ficomps
bound
imul
dec
inc
out
leave
clc
push
mov
jo
mov
and
and
fmull
gs
or
push
cmpsl
fwait
sbb
push
xchg
rolb
jmp
sbb
ds
xchg
or
inc
adc
enter
ja
aam
or
or
clc
call
inc
dec
or
ljmp
xchg
sub
push
hlt
push
test
and
push
fildl
sub
xchg
lea
into
jo
fidivs
jae
into
pop
add
clc
inc
dec
xchg
mov
nop
fwait
pop
mov
dec
scas
xor
shlb
xor
pop
inc
test
pop
jnp
rcrb
pop
xor
pop
or
dec
test
stos
xchg
sbbb
xor
cmp
jecxz
mov
orb
and
mov
sbb
rcll
sbb
push
push
repz
daa
scas
daa
fdivl
das
and
cld
jne
jne
enter
lea
psrlq
sbb
imul
sub
adc
fisttpl
lcall
add
and
pop
dec
loopne
fs
nop
fs
adc
clc
shl
ja
lret
xchg
cmpsl
pop
cmp
test
cmp
sbbl
lret
outsb
out
sub
dec
push
xlat
sbb
movsb
int
mov
push
pop
adc
out
mov
cmpsb
icebp
fistps
pop
or
out
pop
add
in
cs
js
aad
inc
sbb
rclb
or
jae
mov
imul
ret
adc
cmp
sub
sbb
pmullw
pop
dec
fldenv
mov
orb
or
ret
dec
sarl
iret
mov
and
jmp
mov
cmp
push
out
outsb
lret
jno
outsl
add
mov
in
mov
pusha
mov
or
push
mov
cli
adc
add
dec
xor
les
pop
mov
jne
mov
test
pop
int
mov
push
rcrb
jl
stos
sub
movmskps
out
jle
xorl
aam
push
mov
or
out
addb
out
add
add
adc
mov
mov
out
insl
popa
mov
sbb
xchg
mov
xchg
pop
cmpsl
xchg
rclb
sub
mov
dec
xor
pop
jge
pop
jg
mov
imul
sub
push
jmp
shrb
in
pusha
and
in
lock
mov
jg
repnz
std
ret
addb
test
cli
add
test
iret
movsl
rcrb
or
rcl
sub
rcr
fistl
mov
jae
and
cmp
data16
das
sbb
xor
aas
in
mov
data16
les
mov
pushf
stc
pop
imull
jle
pop
jb
shll
xor
sbb
mov
outsb
fstps
mov
mov
dec
jae
cli
in
loopne
fwait
mulb
jl
jno
loop
cltd
and
fcompl
mov
shlb
lret
dec
mov
nop
insb
pop
lock
out
movsb
hlt
dec
mov
lcall
add
popf
jl
fstps
rclb
ret
insl
or
out
cmp
push
popf
jecxz
sarb
in
dec
jle
js
test
cmp
xchg
icebp
lcall
xor
fs
jae
lods
adc
aam
enter
cld
sub
decb
imul
xor
mov
int
js
adc
mov
lods
mov
aas
mov
stos
jmp
pop
mov
fildll
rclb
lods
insb
xchg
or
jns
xchg
fidivs
jbe
cmc
int
gs
inc
insl
push
lahf
insl
push
xchg
out
push
sub
lea
inc
popf
xor
xchg
jp
sub
push
xchg
add
adc
cmp
test
push
sbbl
subl
mov
pop
repz
push
enter
inc
out
mov
stos
bound
addr16
in
jb
cs
xchg
in
jl
movsl
in
adc
xlat
lea
insb
pop
das
push
scas
adc
out
jecxz,pt
mov
jecxz
cld
aaa
or
jge
inc
fdivrp
adc
repnz
sub
loope
adc
popf
lock
xor
mov
xchg
jmp
xor
icebp
pop
jne
push
jp
dec
shll
dec
mov
loopne
jns
js
out
adc
ret
push
push
leave
repz
cmp
rolb
or
dec
jb
cmpsb
add
repnz
daa
or
daa
fisttpl
gs
pushf
lret
dec
subb
jae
and
aaa
cmp
cmp
cmpb
sub
sub
aaa
dec
add
mov
mov
and
popa
shrl
mov
inc
int
movsb
aad
sbb
mov
sbb
dec
add
dec
fcompl
inc
aam
cmp
ffreep
mov
popa
scas
add
xchg
jg
sub
mov
mov
mov
jno
scas
mov
insb
int
pop
movsb
test
movsb
pop
sbb
lahf
and
in
pop
cmp
cld
mov
test
std
xchg
out
das
jae
mov
aaa
pushf
mov
mov
inc
pop
test
inc
js
or
sbb
add
jle
out
mov
jg
pop
xchg
scas
mov
lahf
lods
mov
xchg
ret
ds
push
xchg
mov
fdivrl
call
bound
adc
es
ret
les
pop
add
or
mov
push
adc
lds
mov
push
add
lret
int3
xchg
cld
pop
push
cli
mov
jp
cltd
mov
out
jo
or
aam
lods
popl
out
inc
je
js
stc
push
fiadds
aas
pop
mov
sbb
mov
addr16
push
mov
fisttpll
dec
adc
inc
div
hlt
cmp
push
push
adc
push
orb
or
in
or
pop
adc
adc
fisttpl
cwtl
dec
pusha
add
cmpsb
inc
mov
mov
push
bound
dec
xor
add
in
hlt
in
mov
sub
sub
lret
jns
idivl
lock
push
sbb
std
rcll
dec
cs
mov
cld
in
and
mov
bound
pop
aaa
jl
mov
imul
fnsetpm(287
and
xor
int
jno
cmc
cmp
add
loop
add
repz
dec
shll
sbb
xchg
jl
test
dec
push
push
int
push
lods
push
adc
lss
gs
les
stos
pop
push
scas
in
and
jnp
cs
push
mov
push
xchg
insl
add
rorb
xchg
push
jl
rcrb
jmp
cs
push
sbb
xor
push
in
insb
sub
insb
les
xor
jns
jns
or
repz
mov
movsb
popf
pop
ljmp
sahf
xchg
sbb
pop
adc
roll
jne
dec
adc
in
cmpsb
mov
daa
stos
sbb
mov
test
jae
pop
push
lock
scas
imul
lahf
imul
das
mov
sbb
mov
jnp
fiaddl
leave
adc
xchg
mov
mov
sub
mov
out
gs
dec
scas
es
and
push
sub
sar
or
fsts
jle
fimull
mov
pop
add
push
cld
repz
xor
push
les
insl
jp
outsl
insb
inc
in
and
xchg
mov
insb
dec
call
js
xchg
ret
ret
sbb
pop
jle
dec
fs
lock
test
pop
adc
lcall
stc
stos
xchg
cmp
mov
xchg
add
ds
das
lea
imul
fucomp
inc
sub
movsl
in
xlat
or
sahf
std
push
or
mov
shll
ret
jl
jp
dec
fcom
mov
rorl
bound
mov
pop
fadds
aas
jmp
inc
arpl
xor
mov
in
and
jmp
inc
fsubrl
inc
or
dec
adc
aam
into
inc
jbe
dec
jae
jge
adc
jno
stos
and
divb
insl
mov
mov
mov
cld
inc
adc
cmp
sbb
inc
sbb
adc
divb
adc
pop
jle
lock
fdivrl
test
fcmovnbe
int3
push
add
in
popf
pop
push
push
fwait
dec
add
sarl
mov
sti
cmpsb
rorl
sub
call
adc
mov
jnp
pop
pushf
mov
cmp
loope
and
sub
das
inc
and
jb
sbb
mov
js
jmp
sti
aam
jns
std
in
into
scas
jl
mov
inc
sub
lods
sbb
in
movsl
jnp
test
sub
mov
in
xchg
jne
movsl
xor
jl
jo
cs
adc
cmp
cmp
jne
test
dec
or
cmp
movsl
sub
in
cltd
mov
and
flds
rolb
pop
out
push
jle
mov
pop
loopne
lahf
call
cmc
pop
scas
mov
jo
jne
repz
pop
mov
sarl
movsb
imul
cmpsl
mov
lret
push
icebp
pop
setbe
push
jl
dec
adc
dec
mov
xor
rorl
jmp
or
mov
arpl
mov
loopne
popf
or
add
and
in
scas
pop
xchg
ss
jb
cmp
ss
loope
sar
jmp
xchg
pop
lcall
inc
ds
ud0
cmp
arpl
or
push
xchg
mov
out
jge
pop
mov
test
mov
lods
aad
mov
inc
push
in
leave
sbb
in
ret
adc
shlb
mov
mov
inc
inc
loop
ljmp
pop
sar
xchg
ja
mov
int
cmpsb
les
outsb
xor
repnz
sbb
push
inc
mov
xchg
mov
nop
or
or
into
jmp
movntps
repnz
loope
popa
pop
test
imul
mov
aas
pop
arpl
sbb
jb
sbb
inc
ret
jne
fidivrl
mov
imul
cmc
xor
lahf
mov
pop
pop
sub
pop
jbe
pop
fistpl
add
pop
and
jmp
adc
inc
jns
adc
scas
cld
into
mov
outsb
arpl
xor
out
xor
call
cmp
fwait
repz
test
fldcw
fimuls
aas
lods
jp
or
jo
movl
dec
push
jge
jg
xchg
sub
push
or
test
jmp
push
fildl
and
jmp
pop
inc
jg
cmp
ja
pop
push
je
and
ljmp
cwtl
cmp
nop
inc
ficoml
aaa
ds
int3
lret
mov
or
inc
fidivrs
aad
adc
cmpsb
scas
or
xor
and
aad
jl
aaa
stos
sbb
test
lds
jg
xor
cmp
dec
and
pop
add
push
sbb
cs
cmp
test
xchg
stc
fbld
movsb
sub
pop
jle
cmpsl
inc
pop
cmp
cltd
bound
pop
in
xlat
out
int3
push
push
sbb
je
test
add
sub
loopne
xor
lods
pop
mov
mov
jo
mov
je
push
or
adc
outsb
fiaddl
mov
adc
jge
jae
cmp
test
dec
adc
jns
ja
mov
shll
mov
rclb
add
pop
mov
mov
xor
and
aaa
les
mov
dec
dec
pop
aam
cmpsl
outsb
jns
in
pop
leave
pop
pop
gs
imul
in
inc
push
xor
add
sbb
fadds
sub
insl
rorl
aaa
adc
mov
lahf
jge
mov
inc
push
mov
andl
dec
cmpsb
inc
mulps
jmp
pop
pushl
divl
push
in
enter
mov
test
stos
inc
jge
leave
pop
inc
push
pop
sub
movsb
int3
add
movsl
ja
add
mov
shr
xchg
gs
fidivs
jo
sub
call
fs
mov
jmp
xchg
adcb
jb
jg
lcall
xor
sbbb
cwtl
les
sub
rcrl
loop
inc
mov
mov
add
xor
cmp
or
mov
hlt
repz
cmc
loop
lcall
ficoml
lods
aas
popa
xchg
ret
or
jns
and
jmp
pusha
mov
or
jmp
dec
outsl
add
sbb
inc
dec
pop
lret
loope
imul
in
xchg
fs
jmp
pop
push
push
fbstp
push
scas
push
lds
sar
shr
adc
sub
cmp
mov
add
ret
aas
mov
adc
mov
dec
dec
sbb
xchg
jns
andb
test
sbb
or
shlb
out
mov
test
cwtl
sub
int
xor
mov
mov
adcb
cli
or
mov
cmp
daa
mov
and
push
mov
mov
leave
mov
ds
push
nop
lock
sub
mov
add
decl
mov
cmp
mov
sti
sarb
mov
data16
lds
xchg
mov
loop
jnp
push
or
or
jmp
cmc
dec
xor
inc
int
cmpsl
push
cmp
popf
or
sbb
in
pop
or
pop
scas
insl
mov
and
sbb
sti
xorb
outsb
sbb
das
das
adc
fidivrl
fistpl
dec
rcrb
ljmp
cmpsb
pop
in
test
pop
test
data16
int
mov
xchg
lret
fsubrl
pop
push
popf
cmp
mov
mov
sub
mov
testb
in
mov
adc
fidivs
test
cmp
aad
or
adc
push
mov
xchg
jb
idiv
adc
adc
push
xchg
icebp
std
cli
dec
dec
scas
mov
mov
pop
imul
cmp
lock
fmuls
add
adc
cmpsl
pop
out
or
mov
in
cmc
inc
es
gs
das
and
mov
insl
mov
lret
jo
pop
scas
adc
loopne
mov
and
lods
jecxz
lods
shrl
and
add
sub
xchg
push
mov
push
sub
in
inc
pushf
or
and
das
inc
shll
cwtl
orb
in
add
jp
stos
xorb
test
jbe
enter
mov
fisubl
sub
dec
daa
cmpsb
or
addb
add
aaa
cmp
daa
dec
push
dec
jge
call
inc
sbb
or
in
pop
adc
jle
xor
jbe
or
bound
movsl
popf
addl
xchg
cli
pop
sahf
call
push
xchg
lods
das
mov
cld
xchg
ss
xchg
push
or
jne
aas
repnz
cmp
iret
movsl
nopl
xchg
mov
mov
lret
or
sbb
imul
ds
sub
mov
std
xchg
iret
scas
addr16
sbb
sbb
jle
sbb
mov
xchg
lret
insl
loop
aas
enter
jg
repnz
push
stc
add
xchg
data16
inc
inc
xchg
or
pop
in
sub
mov
jae
pop
cmp
scas
js
dec
fadd
into
push
out
add
push
push
mov
jbe
or
inc
dec
scas
pushl
fcom
daa
stos
movsb
cmpsb
push
cmpsb
fs
cmp
lock
pop
xor
mov
or
clc
push
sti
dec
add
jae
cmp
sahf
addr16
pop
lret
daa
int3
outsb
pop
enter
pop
cmp
jge
push
jmp
add
jmp
or
push
jp
imul
push
jecxz
popa
pop
and
xor
ja
imul
nop
ja
or
mov
out
cmp
mov
jo
xor
mov
vpmacssdqh
and
mov
je
xchg
fwait
lret
sbb
inc
imul
sub
pop
add
in
adc
xchg
outsl
not
add
xor
fldl
and
adc
mov
xor
jae
cmp
pop
repnz
mov
pushf
out
cmp
stc
and
mov
scas
adc
icebp
inc
sub
into
push
daa
fldenv
ljmp
sbbl
add
mov
cltd
sub
sub
data16
test
dec
push
jo
inc
and
add
mov
push
mulb
xor
push
lret
ds
cli
ljmp
inc
mov
dec
shrb
sub
jb
dec
stos
push
mov
inc
fiadds
jmp
les
movsl
sub
scas
inc
out
flds
sahf
jo
iret
xchg
ret
out
xor
mov
jl
xchg
cmpsl
cmpsb
sub
xchg
shlb
xlat
daa
insb
or
mov
xor
mov
add
mov
psrad
aaa
xor
outsb
jo
stos
mov
int3
mov
xchg
jno
mov
paddq
in
xchg
fbld
roll
add
jmp
xor
mov
cmp
jnp
adc
inc
mov
mov
inc
mov
pop
cld
xor
mov
push
hlt
jae
out
lahf
call
cmpsl
adc
sbb
ret
push
stos
ja
mov
mov
sti
fadds
in
insb
rol
cmp
lret
stos
adc
push
mov
dec
pop
inc
mov
jp
aam
jg
cmp
xor
sahf
mov
lret
mov
aaa
sub
pusha
aam
js
mov
mov
cmp
ljmp
in
mov
icebp
lcall
add
imul
add
mov
push
cmp
sahf
cmp
jno
cmc
sub
lahf
cmp
mov
lods
or
sub
cwtl
mov
insl
and
and
pop
std
sub
outsb
cmc
push
or
out
notb
inc
and
test
jl
and
inc
jle
aam
fdivrs
mov
pusha
lret
sbb
mov
negb
mov
mov
cmp
mov
adc
xchg
outsb
push
loope
idivl
les
and
in
mov
ret
mov
popa
out
pop
je
loopne
outsl
stc
or
add
fnsave
xor
stos
pop
or
and
push
jmp
bound
cmpl
leave
cs
jo
sti
push
jl
sbb
testb
cmp
mov
xchg
dec
xlat
mov
stc
sti
addr16
ja
stos
das
shrl
ja
mov
mov
cmc
insb
sbb
add
sbb
in
mov
jb
jnp
sub
inc
movl
gs
push
mov
test
jb
xlat
test
jecxz
mov
adc
fcom
cmp
mov
loop
dec
movsb
sbb
rclb
es
pop
push
shlb
hlt
add
arpl
push
std
icebp
inc
cltd
loop
cmovb
rol
push
xor
xor
sar
stos
enter
mov
minps
dec
mov
cld
mov
popa
cli
sbb
paddd
nop
ret
mov
mov
hlt
jp
jns
cmp
int3
jns
push
fsubl
les
jge
int3
into
inc
aad
xor
out
stc
cmp
test
dec
and
testb
mov
lret
inc
dec
jg
adc
cmp
scas
iret
and
mov
mov
lods
pop
idivl
or
loope
push
cmp
cmp
movsb
ret
ljmp
mov
or
fnstsw
and
cmpsl
inc
push
pop
test
mov
push
cmp
fstp
fs
xchg
cmp
nop
cmc
aas
adc
lahf
inc
iret
cltd
or
sbb
cmp
xchg
imul
xor
sub
jne
push
loope
and
movsb
out
mov
mov
psubd
inc
shl
js
ja
lcall
mov
in
outsb
jecxz
push
scas
inc
out
sbb
hlt
loope
imul
jl
cwtl
ret
loop
mov
mov
push
or
xor
sbb
ficoml
lea
icebp
dec
fmuls
bound
xchg
aam
shrl
pop
scas
xchg
sub
lods
cmpsb
loope
jge
call
shlb
sahf
mov
cwtl
and
and
push
cmc
out
es
mov
lods
test
roll
mov
shlb
test
jg
xor
sbb
add
dec
cmp
jns
es
sahf
arpl
stos
pop
pushf
fwait
in
xchg
or
data16
dec
lahf
mov
jb
mov
fidivrl
es
std
lcall
adc
bound
jo
mov
mov
and
push
addb
imul
gs
shll
adc
push
add
inc
push
add
cmc
loop
add
aas
mov
out
xor
mov
notb
in
clc
lock
mov
jecxz
into
pop
add
out
pushf
test
mov
das
jl
push
jmp
xor
jg
or
cmpsb
pop
push
je
pop
into
loopne
pop
out
push
cld
jp
arpl
cltd
fcmovnu
sti
xchg
xchg
sbb
rolb
orl
push
mov
mov
lock
into
cmp
lret
or
mov
cmp
pop
data16
ret
mov
add
int3
sbb
je
mov
fs
mov
gs
int
pop
cld
lahf
loop
jmp
ja
lcall
dec
dec
mov
and
int
pop
mov
adc
jns
dec
mov
fistl
sub
xbegin
or
push
mov
cmp
sbb
dec
out
icebp
and
mov
xor
fwait
nop
ret
push
imul
fisttps
cmp
adc
shl
xchg
ljmp
enter
gs
and
lds
pop
test
mov
dec
and
cmpsb
ud2
int3
sbb
jbe
or
js
lock
jns
push
test
xor
lock
out
int3
pop
fabs
jo
sbb
pop
out
sub
in
mov
gs
push
mov
xchg
imul
movb
sarb
pop
xchg
pop
and
lods
dec
push
jo
lret
dec
cmp
and
sub
xor
adc
cmc
inc
and
inc
outsb
sti
popa
cmp
push
hlt
shlb
ret
pop
xchg
and
call
cmp
int3
insb
jmp
fsubl
push
loope
jmp
sub
xor
pop
mov
inc
mov
add
lods
scas
sbbl
dec
daa
jne
cmp
stc
rclb
and
popf
dec
or
jbe
fildl
mov
cmp
in
adc
xor
scas
outsl
leave
or
divb
mov
repz
inc
cmc
adc
mov
movsb
int3
jae
ds
xchg
and
rcpps
push
jmp
inc
sahf
xlat
div
or
js
fbld
jae
test
push
iret
and
in
mov
mov
pop
mov
and
sub
sbb
outsl
sbb
jle
sub
scas
or
stos
inc
add
shrl
cmp
push
xchg
adc
inc
fnstcw
sub
cmp
xchg
aaa
call
ds
inc
or
mov
mov
mov
push
imul
in
sbb
xlat
shrl
popa
jbe
xchg
cwtl
jne
gs
scas
out
ret
mov
add
repnz
out
mov
in
xchg
lods
cmp
inc
lock
test
sahf
setge
daa
repz
jno
xor
xor
scas
push
and
ret
sub
push
cmp
mov
mov
sarb
ss
and
mov
push
mov
sti
fucom
push
lret
push
std
inc
test
loopne
shl
call
dec
movsl
fdivr
push
adc
mov
xchg
adc
pop
jp
push
std
scas
sahf
in
cs
mov
mov
pop
fcoms
ficompl
or
mov
out
hlt
push
loope
push
jno
shrl
loopne
sbb
sub
sbb
out
jnp
repz
in
mov
adc
jg
pop
rcr
cmp
arpl
stos
jns
dec
mov
jg
mov
outsl
lods
fisubl
ljmp
mov
inc
push
cmp
or
fwait
pop
sbb
cmp
loop
mov
inc
cmp
fistpll
xor
test
out
cltd
cmc
mov
sbb
jno
clc
adc
adc
jle
push
pop
sahf
ss
loope
rclb
xchg
add
movsb
mov
lret
jl
sbb
mov
push
sbbl
test
sbb
dec
xor
loope
mov
adc
cmp
jo
sub
inc
fidivs
sub
filds
or
mov
arpl
pop
jae
notb
jmp
jns
test
inc
sub
fldcw
inc
ficoms
pop
subb
les
out
pop
xor
ret
sbb
push
or
push
rol
jl
cmp
mov
mov
lods
push
cmpsl
inc
test
lret
clc
fdivrp
pop
testl
imul
rcrl
push
push
jp
mov
lds
xor
iret
mov
mov
push
div
fiaddl
aas
push
adc
mov
repnz
sub
xor
aam
cmp
jg
inc
mov
adc
mov
mul
dec
icebp
add
dec
std
mov
mov
cwtl
sub
out
or
mov
imul
inc
push
scas
push
aam
pushf
cmp
lods
xor
mov
aas
ror
repz
xchg
add
dec
xor
push
subb
mov
jo
mov
mov
adc
jp
imul
pop
adc
into
xor
adc
lods
sub
repz
jl
mov
jbe
lcall
pop
cld
adc
mov
shlb
adc
test
jb
sahf
ret
jle
negl
pop
test
lcall
stc
pushf
loopne
pop
les
loop
cmovg
loop
cmpsb
dec
outsb
xor
add
and
ret
repz
mov
mov
repnz
and
mov
fcoml
or
mov
mov
test
add
sbb
sti
lods
jbe
pop
mov
push
xor
fldcw
cmpsl
clc
cli
pop
sbb
cmpsl
ljmp
sbb
in
popf
out
ret
in
subb
and
mov
sbb
lret
mov
jmp
sub
jp
mov
dec
mov
mov
mov
fnstenv
and
pop
sub
je
lret
adc
jmp
pop
bound
sbb
les
dec
and
out
shrl
scas
jl
out
mov
xchg
push
dec
aad
jnp
push
jg
pop
mov
xchg
adc
add
sti
push
out
bound
dec
sbb
stos
pop
inc
outsb
into
xchg
push
loop
enter
lds
and
lret
sub
ud0
lods
xchg
fcompl
pop
push
stos
pop
push
cmp
xchg
xchg
mov
xchg
fcmove
repz
inc
js
aad
add
inc
lods
sbb
cmp
inc
or
adc
sti
mov
pop
fs
pop
push
into
testl
adc
cwtl
mov
inc
ljmp
mov
stos
cmp
rcrb
lret
ljmp
sub
fwait
jb
pop
in
jae
cwtl
dec
cs
mov
je
mov
decb
int
sub
xchg
in
ljmp
lods
pop
add
xlat
xor
pushf
aas
jmp
xchg
adc
push
loop
test
insb
fimull
test
insl
jmp
nop
add
das
lahf
xchg
test
sub
gs
aas
dec
neg
pop
loopne
cmc
decb
inc
loope
mov
adc
mov
and
shlb
ret
or
add
mov
xchg
and
test
aam
shl
add
clc
jp
rcr
add
inc
aam
or
push
in
movsb
cmp
int
das
mov
lret
gs
cmp
fwait
push
jne
push
push
jmp
clc
bound
imul
pop
rcrl
icebp
xchg
testb
shl
ljmp
cwtl
pop
je
out
xchg
sbb
sbb
fsubrl
lods
lea
push
fbld
jle
cltd
xor
mov
aam
scas
cmp
and
jge
lods
out
or
mov
mov
cwtl
fnsave
xor
ret
push
jns
call
mov
lret
aas
cmpsb
sbb
jno
jae
dec
pop
rolb
xor
push
inc
and
push
in
test
cmp
cmpsl
cli
push
adc
xlat
pop
sub
adc
push
into
dec
pop
adc
jmp
jle
or
mov
pop
mov
or
leave
jle
xor
les
cwtl
aas
fildl
mov
xchg
in
cmp
xlat
loop
aaa
or
push
mov
cltd
mov
enter
ret
das
mov
cmp
push
jns
leave
out
shll
fnstsw
sbb
pop
imul
jp
and
cmpsl
sbb
dec
cmpsl
sbb
scas
add
in
mov
cltd
es
add
enter
push
push
jp
nop
out
aam
pop
lods
movzwl
js
mov
es
insl
imul
ret
dec
xchg
imul
adc
lods
add
das
adc
dec
hlt
pop
mov
in
jmp
mov
or
mov
cwtl
loop
and
ja
mov
in
fs
shll
dec
mov
movsl
cmpsl
pushf
fbstp
xchg
sub
xchg
lods
scas
xlat
in
push
mov
dec
in
stos
sub
push
jmp
pop
add
pop
sub
lret
pusha
jecxz
flds
nop
add
pop
movsb
stc
lret
es
mov
clc
movsb
fisubs
cmp
pop
sbb
sbb
call
ret
insb
cmpsb
nop
adc
mov
or
pusha
fs
vmwrite
mov
fisubs
stos
or
dec
rcrw
icebp
lds
inc
sbb
pop
es
cli
fisttpl
adc
cmp
and
mov
mov
sbb
push
or
in
fcmovnb
loope
rorb
cmpsl
xlat
shll
insl
jnp
push
cmc
adc
aam
mov
mov
aaa
pop
cmpsb
bound
add
gs
pusha
inc
adc
adc
xor
add
orl
sbb
shll
mov
outsb
xchg
scas
mov
fisttps
inc
adc
sti
cmp
sub
mov
sub
jg
push
mov
mov
ss
ret
or
jae
ds
xor
dec
in
pop
inc
enter
gs
int
sub
cmp
or
sub
mov
mov
out
js
pop
or
cmp
cltd
push
into
movsl
into
push
in
mov
movb
jae
in
jb
xchg
jl
push
pusha
cmc
popf
push
shll
adc
and
jl
jge
stc
or
xor
insb
mov
andb
push
add
xor
call
jae
ret
jle
mov
xor
cmc
jl
cmc
push
lahf
cmp
subl
add
decb
js
adc
ja
xlat
inc
lret
shlb
inc
or
stos
ljmp
mov
and
in
mov
cmpsl
sarb
sbb
cmc
in
ret
out
cmp
fiadds
shll
adc
dec
pushf
adc
in
or
inc
jne
mov
xor
or
sub
mov
lock
pop
mov
xchg
cmp
xchg
inc
push
aad
adc
mov
xor
mov
xor
cmpb
sbb
ds
jae
jnp
jae
sub
paddd
adc
cmpsb
sub
in
leave
dec
push
and
icebp
aaa
roll
or
imul
add
addl
loopne
adc
jns
mov
scas
sbb
ja
test
add
push
push
and
js
stos
test
je
mov
ret
xor
push
in
lahf
imul
fimuls
xchg
arpl
pop
rclb
and
in
rcpps
ljmp
mov
and
pop
outsl
test
iret
xchg
enter
aad
push
lea
test
adc
pop
mov
mov
rcr
sub
pop
xchg
push
and
std
fldt
fildll
fs
sbb
jbe
mov
notl
pop
jno
dec
ret
test
std
adc
or
jecxz
xor
iret
mov
xchg
shrb
in
xor
cmpsl
cmp
je
pop
popf
out
adc
bound
std
xlat
jns
push
cmpb
js
mov
jmp
pop
mov
je
movsl
pop
sbb
lea
cmpsb
cs
dec
cmp
dec
mov
hlt
sbb
int
mov
dec
add
mov
es
xor
mov
test
cmp
or
outsl
popa
sub
cmpb
push
jno
dec
shrl
xchg
sub
cld
aas
sbb
out
or
pop
mov
rcrb
cmp
call
cmpsb
jp
or
cld
ja
loop
ror
cmp
mov
xchg
dec
add
and
or
ss
pop
cld
cmc
jmp
ljmp
movsb
jbe
pushf
dec
pushf
jg
xchg
or
inc
push
mov
sti
test
and
dec
adc
bound
sbb
push
lahf
and
pop
enter
in
mov
add
aas
xchg
jae
cmp
jne
push
jmp
push
jp
xchg
xlat
sbb
mov
aad
pop
xor
frstor
adc
iret
xor
push
add
aaa
or
adc
fists
repnz
call
sub
out
aam
push
aaa
les
jmp
div
imul
movsb
pop
xchg
fistps
lcall
js
pop
xchg
mov
sbb
push
jns
dec
or
ret
ffreep
rorb
mov
mov
sub
out
loopne
ret
mov
ret
into
xchg
scas
lods
inc
xor
repnz
mov
xor
subb
cmp
not
stos
dec
sub
arpl
push
jecxz
mov
add
lret
sbb
test
mov
negl
movsl
mov
sub
stos
and
push
shlb
cmp
mov
cld
jne
cli
sbb
arpl
call
lock
or
aad
inc
or
dec
loope
out
iret
jb
fimull
cli
into
xchg
scas
in
rolb
int3
gs
jg
pop
sti
repz
and
and
in
cmp
mov
jb
dec
jno
aas
dec
jp
adc
fcoms
dec
in
mov
sub
cmp
fcompl
add
mov
mov
lahf
notb
inc
popf
cmpl
push
cmc
or
xchg
jle
xchg
mov
cmc
call
loopnew
sub
ret
cld
es
test
mov
jle
sbb
dec
and
data16
push
test
push
cld
pop
sahf
xchg
push
roll
lds
push
sub
ss
cmp
or
jmp
or
sbb
loop
cltd
xchg
adc
jb
push
jmp
cltd
push
sbb
xchg
cmp
jg
and
xchg
and
push
idivb
je
call
mov
cmp
add
and
lods
movsl
pushf
jbe
out
lds
js
aaa
in
xchg
adc
add
aam
ror
xchg
and
jbe
fstps
insl
jp
fnstsw
mov
mov
xor
imul
pop
lcall
add
xchg
cmp
fdivp
icebp
jno
and
push
stc
aaa
cld
cmpsl
jg
std
push
mov
lahf
push
mov
jb
push
pusha
iret
out
js
rolb
inc
or
dec
fcmovb
mov
lcall
mov
push
mov
mov
mov
cmpsb
push
xchg
jmp
jne
add
dec
repnz
lods
stos
stos
daa
lea
xchg
mov
cmp
pushf
mov
inc
xchg
popa
mov
jmp
mov
leave
xchg
mov
cmp
test
addr16
mov
out
xchg
push
xchg
imul
scas
xor
push
adc
and
or
loop
mov
mov
fimuls
adc
or
mov
negb
or
pop
ret
mov
fwait
push
pop
mov
jg
cltd
or
jne
sub
sbb
aas
ss
dec
in
lret
jne
sahf
sub
sbb
push
call
push
mov
and
int
add
imul
rclb
out
xchg
add
lods
out
push
push
or
jmp
or
sub
aaa
sbb
imul
dec
mov
adc
cltd
mov
push
sbb
mov
add
psraw
inc
sbb
cwtl
mov
test
mov
xor
mov
addr16
into
xchg
cmc
cmp
or
xchg
mov
fs
jmp
push
mov
dec
cmp
inc
jb
popa
fldt
or
aas
mov
mov
jnp
test
cmc
shrb
mov
das
sub
mov
and
or
fmull
add
aas
sarb
dec
movsb
dec
add
aad
mov
push
xchg
fadds
mov
aam
into
loope
pushf
pop
xor
xchg
xor
mov
popf
pop
icebp
mov
int
pop
pmuludq
js
call
rcrb
jg
lret
pop
jne
sarl
scas
cs
adc
mov
jno
lea
sbb
xor
clc
adc
jge
push
adc
inc
pop
int
sbb
or
data16
cwtl
cld
in
in
pop
xor
or
mov
push
lods
aaa
mov
enter
rcrb
adcl
add
cmp
and
shrl
or
scas
mov
jle
push
jg
inc
mov
stc
bound
or
ljmp
packsswb
fnsave
jne
test
jno
arpl
xchg
push
insb
push
mov
dec
shll
mov
push
xor
push
ret
xor
mov
jno
add
mov
push
push
pop
scas
fld
cltd
push
das
std
mov
jle
mov
add
cld
lcall
mov
fsubrs
or
push
or
ja
dec
insl
lds
xchg
inc
in
enter
push
xor
add
test
sbb
jae
ja
aaa
test
repz
fcoml
lods
dec
outsb
lods
xorl
jns
xchg
in
aas
mov
ret
jl
jle
mov
ret
xlat
inc
dec
mov
iret
outsb
mov
out
shr
push
pop
pop
in
test
jb
fwait
inc
jmp
insl
fsubs
cmp
insb
cltd
sbb
arpl
test
jnp
repnz
lret
adc
sbb
insl
addr16
jle
fiaddl
mov
ljmp
out
sbb
out
add
push
lret
xchg
and
or
xor
cmp
jp
add
lcall
into
mov
xor
shrb
xchg
ja
xchg
mov
sub
lret
and
call
jecxz
mov
xchg
push
push
xchg
sub
fsts
push
cmp
and
insl
sbb
mov
hlt
inc
shll
pop
sarb
inc
int3
pop
subb
sbb
in
scas
shr
lods
out
sub
dec
nop
or
lret
imul
inc
cmpsl
ror
mov
xchg
jg
cld
pop
bound
mov
mov
aad
xor
add
sbb
int3
ljmp
jecxz
pop
test
scas
jb
push
mov
inc
cwtl
inc
insl
sub
xchg
divb
inc
adc
fdivrl
in
xchg
out
push
test
jbe
mov
clc
or
add
pop
pusha
imul
jp
lods
push
out
jo
push
outsb
inc
push
mov
clc
dec
je
jmp
or
mov
dec
jbe
and
cmp
inc
mov
cmpb
stos
push
call
sub
ds
jmp
adc
sbb
mov
loope
mov
xor
sbb
xchg
jnp
fiadds
arpl
dec
sub
pop
clc
sbbb
into
cmp
pushf
fbld
cs
push
movsl
inc
addr16
mov
loopne
adc
orl
test
mov
fbstp
add
std
jle
pop
dec
loopne
mov
sub
lea
shrb
mov
mov
mov
nop
cmp
or
xchg
add
sbbb
mov
pop
ljmp
repz
pop
arpl
dec
pop
adc
lds
jp
xor
lds
jne
or
dec
rorb
dec
mov
hlt
or
je
cltd
cwtl
fadds
sbb
insb
icebp
mov
add
xor
imul
ja
pop
or
jge
xchg
xor
lcall
push
cmp
mov
cmp
mov
xchg
jp
push
xchg
fildll
mov
cmpsl
lea
call
movsl
pushf
xchg
and
xadd
aam
jle
jg
xchg
testb
push
movsb
push
sbb
aaa
xchg
push
jle
test
xchg
movsb
lret
leave
or
pop
and
stos
movsb
js
sti
in
testl
hlt
sbb
data16
pop
test
cmp
ret
dec
jbe
jb
outsb
and
shr
daa
mov
fs
cmp
addr16
jmp
nop
jae
mov
jp
mov
jbe
sub
loope
push
push
outsl
mov
inc
push
ds
xchg
orl
cs
cmc
xor
push
lret
dec
xor
sbb
jbe
insl
mov
sub
call
es
mov
sbb
hlt
xchg
push
adc
repz
inc
arpl
data16
int3
inc
inc
and
inc
mov
vmovapd
jge
insb
adc
fisubl
xor
ss
fs
aam
fstpt
gs
imul
mov
insl
in
mov
dec
dec
xchg
popl
inc
or
icebp
mov
ret
adc
lret
mov
jne
or
jp
clc
mov
lods
lret
into
adc
xor
and
lcall
jmp
push
dec
data16
dec
mov
stc
out
dec
sbb
inc
mov
or
in
sarb
mov
dec
fisubrs
fdivrp
and
paddusb
jmp
and
in
and
lahf
mov
mov
icebp
aam
ficomps
dec
jl
fildll
stos
cltd
adc
inc
sbb
xchg
mov
or
xchg
lret
sub
cmp
jge
push
imul
jecxz
idivb
paddd
stos
inc
pop
fbld
int
loopne,pn
orl
xlat
adc
jle
dec
push
or
test
jne
repz
inc
add
jecxz
inc
adc
sarl
repnz
cmpsl
sbb
push
mov
mov
jmp
daa
adc
pop
xor
shrl
sbb
stos
mov
test
int
push
adc
in
dec
gs
pop
test
xor
jg
fisubrl
or
rclb
mov
lods
fldt
lahf
lds
fisttpll
push
imul
test
jno
sbb
sbb
lcall
mov
icebp
loopne
addl
jns
dec
je
dec
xor
xchg
mov
cltd
int3
or
push
add
subb
mov
jg
inc
mov
shll
testl
jo
movsl
sub
dec
sub
sub
shl
fsts
inc
test
sbb
fisttpl
stos
insl
dec
lods
into
bound
rcll
test
lods
mov
and
stc
xchg
repz
or
ljmp
add
xchg
cmp
cmp
sub
sarl
push
mov
fcoml
and
in
push
int
push
clc
or
mov
jno
fldlg2
push
loope
aad
mov
aas
mov
pop
dec
or
in
inc
add
add
sbb
sub
add
ja
icebp
adc
fdivrs
lcall
in
mov
add
xrelease
inc
mov
add
mov
mov
inc
and
dec
das
loopne
stos
das
orb
push
out
jecxz
mov
aam
push
xor
cwtl
jmp
cmp
ja
inc
and
jne
in
and
shrl
fcomp
add
fs
inc
clc
shlb
or
cmp
dec
adc
or
loop
mov
clc
or
out
mov
xchg
dec
adc
imul
sbb
in
push
imul
lret
lods
jne
mov
push
mov
adc
and
push
lret
mov
or
add
out
fsub
push
sub
adc
out
ljmp
es
loope
or
mov
mov
cmp
jno
push
ret
ds
jmp
mov
mov
stc
icebp
test
sahf
push
adc
loop
fdivs
sbb
adc
adcb
adc
leave
mov
add
xor
andl
mov
test
incl
in
ret
push
add
aam
insl
dec
sbb
daa
popa
pavgb
leave
cmpsb
in
sbb
mov
movsl
testb
adc
or
and
rcll
xchg
cs
inc
lret
sub
mov
mov
fldl
xchg
sbb
mov
or
jecxz
add
jne
ljmp
outsl
cmpsl
mov
inc
dec
dec
stc
mov
push
xor
or
xchg
iret
xlat
icebp
pushf
dec
ja
mov
xchg
push
insb
in
add
add
xor
ret
daa
mov
push
ljmp
inc
rolb
pop
aam
mov
shll
sbb
inc
fwait
xchg
sahf
in
push
scas
mov
mov
orl
notb
fs
sub
sub
aad
jns
fildll
xor
daa
sub
addr16
xchg
nop
sbb
jno
mov
fs
imul
clc
cltd
mov
movl
adc
mull
mov
cwtl
in
push
adc
incb
or
mov
mov
and
pop
aad
gs
push
das
loop
push
xchg
repz
aam
or
shlb
xorb
xor
or
sub
ja
das
xchg
mov
pop
outsb
ret
out
hlt
mov
sub
insb
scas
jns
xchg
pop
cmp
pop
inc
jge
mov
pop
lret
add
ret
mov
mov
subl
push
mov
adc
add
outsb
jmp
fs
lea
fadd
lods
push
sub
fidivl
pop
scas
jo
jnp
cmpb
addr16
add
sarb
ret
jmp
das
cs
jl
mulb
push
in
xchg
pushf
push
push
dec
pop
sub
mov
cli
fnsave
pop
mov
stc
pop
push
pop
and
jae
pop
mov
les
fsub
mov
sahf
enter
inc
in
shlb
hlt
cld
mov
mov
pushf
mov
rcrb
cmpsb
fmulp
cmpb
arpl
js
or
and
stos
es
dec
lret
out
cwtl
clc
int
xchg
addr16
or
aaa
lds
and
dec
push
rcrl
rorb
inc
leave
mov
bound
xor
nop
rol
xor
hlt
sahf
push
fisubl
inc
adc
jno
adc
std
jle
adc
mov
insb
dec
filds
test
mov
and
sub
fwait
pop
or
je
inc
test
jmp
ss
sub
mov
mov
icebp
dec
jle
push
sub
pusha
repz
jo
jbe
int3
xlat
mov
lock
test
and
and
jnp
mov
xchg
sub
aaa
sbb
mov
push
inc
jns
add
movsb
pushf
pop
int3
or
lods
push
cmp
negl
movsb
xor
out
lods
fistl
test
pop
push
das
sbb
mov
xchg
jns
push
lds
jmp
ret
sub
inc
jle
xchg
pop
xchg
xchg
mov
jmp
js
iret
push
pusha
xchg
xchg
xor
xor
and
repnz
into
push
dec
inc
scas
lret
jb
jbe
adc
pop
pop
test
fisttpll
shlb
ret
inc
sti
les
mov
lods
adcb
cmpsl
mov
stc
lock
jge
cld
lret
test
mov
mov
mov
outsb
jae
add
xchg
rcll
ror
or
fsts
pop
sub
fildll
xor
xchg
std
xchg
scas
pop
ror
pop
dec
sbb
xor
fiadds
mov
xchg
mov
mov
in
xor
lahf
popa
mov
push
out
cwtl
sub
mov
divb
aas
aaa
stos
data16
test
cwtl
in
and
cltd
xchg
sbb
cmp
inc
or
fnstcw
push
movsl
xor
lret
repnz
inc
sbb
add
push
out
popa
imul
in
out
mov
stos
and
icebp
ds
and
mov
and
loope
push
mov
jmp
cmpsb
sub
cwtl
xchg
fadd
push
inc
out
out
mov
outsb
jo
orl
push
test
pop
add
pop
out
jge,pt
mov
or
xchg
stos
sub
inc
add
ljmp
fsub
inc
add
cmp
sbb
or
imul
int
fcomps
mov
arpl
adc
pop
cmp
jl
push
das
repz
xor
xchg
inc
sub
jns
dec
int3
shrb
ret
leave
lock
sub
lds
dec
push
push
fs
popa
test
ja
mov
push
or
push
mov
ret
push
int
lock
mov
mov
sub
and
cmp
imul
out
lock
pop
aad
arpl
je
and
xor
lds
jno
adc
addr16
adc
adc
out
insl
inc
push
cmpsb
sbb
jae
and
out
adc
insb
sbb
dec
xchg
hlt
jbe
lds
sti
inc
add
jno
cmpsl
push
sub
test
jbe
fs
stos
push
inc
mov
xchg
sar
push
jp
mov
cmpsl
and
jp
xchg
cmpsb
push
js
sarl
sbb
mov
add
dec
push
popf
adc
popa
sbb
sub
gs
rcll
push
mov
mov
mov
mov
psubd
aas
cmp
cmp
fcomp
aaa
mov
push
aaa
scas
jg
pop
dec
pushf
xor
aaa
repnz
sarl
popa
jge
mov
ss
into
popf
insb
sahf
sbb
int
inc
pop
mov
lods
dec
or
xor
andl
popaw
pop
mov
call
imul
popf
sarb
push
lods
xchg
push
add
sbb
mov
fdivs
jb
repz
xor
add
mov
cmp
inc
inc
loopne
inc
mov
cld
dec
shrb
jns
pop
out
or
repz
and
mov
push
mov
test
insl
cwtl
ficoms
xor
mov
or
enter
adc
sbbl
xchg
clc
ljmp
stos
inc
or
and
lods
push
cmp
pop
or
push
adc
rcl
es
mov
mov
dec
std
add
stc
loop
faddl
cmpsb
jp
xchg
call
sbb
ss
jp
push
pop
mov
or
and
lock
incl
ret
clc
jns
push
add
adc
popa
outsb
int
cld
sub
or
mov
cltd
pop
lock
adc
and
pop
es
inc
movsl
dec
inc
add
jno
out
repz
pop
xor
idiv
mov
push
pop
repz
jp
in
andb
popf
lret
pushf
inc
add
jo
scas
les
loope
iret
mov
lods
pop
arpl
or
ljmp
pop
mov
xchg
and
add
add
lcall
inc
pop
in
lods
cld
mov
pop
add
adc
push
loop
js
fildl
and
push
stos
int
push
popf
mov
add
or
mov
dec
dec
inc
dec
add
mov
mov
loopne
aad
or
add
jae
jnp
xor
xor
inc
ret
push
or
movsb
je
rcl
loop
add
into
dec
jle
int
push
loop
pop
add
cmpb
out
dec
inc
in
dec
scas
das
mov
mov
add
faddp
pop
pop
sbb
fimuls
push
inc
loopne
fwait
popa
imul
je
cmp
cmp
fnstsw
imul
xchg
cmpsl
inc
lods
push
cmp
add
adc
add
cltd
fnstenv
mov
shl
fisttpl
jg
lods
cltd
out
lods
cld
mov
push
push
xor
int
out
and
out
movsl
leave
pop
jl
push
jbe
push
pop
aaa
push
xchg
loope
fldenv
shlb
push
ja
mov
cwtl
or
mov
pop
popa
movsb
sbb
out
dec
add
cmp
outsl
push
xchg
fdivrs
jmpw
xchg
mov
mov
mov
fistl
movsl
jbe
cmp
push
mov
inc
mov
sti
ljmp
pop
sub
aas
outsl
jp
das
lea
jb
and
sub
and
aad
bnd
xor
push
inc
jno
jbe
xor
sbb
sub
mov
arpl
adc
mov
fstps
clc
xor
cmpsl
mov
push
mov
or
sbb
xlat
das
or
dec
mov
adc
sub
and
sbb
mov
enter
mov
jge
popa
push
pop
adc
and
fmul
dec
adc
cli
cmp
jmp
inc
mov
xor
lahf
cmp
out
mov
mov
test
fdivr
popa
sub
adc
xchg
and
pop
lcall
andl
out
ss
push
inc
mov
cltd
inc
xor
test
int
jecxz
pop
push
inc
push
shrl
addr16
xchg
jo
repz
je
adc
stos
lret
and
sub
andl
lahf
push
mov
sti
and
js
adc
inc
call
dec
test
and
lcall
fisubl
scas
lret
cmc
lcall
js
aad
xor
mov
mov
lods
and
out
and
or
popf
push
adc
test
sahf
and
push
addl
push
add
sub
jecxz
adc
roll
cmp
movsl
daa
daa
mov
pushf
cli
adc
arpl
dec
or
add
mov
testb
loopne
mov
mov
push
mov
xchg
adcl
mov
movl
aad
lret
insl
adc
sbb
xchg
sub
ja
into
xchg
or
mov
aas
xchg
fcoms
push
pop
cmp
movsb
pop
pop
and
push
mov
jae
sti
mov
push
gs
xchg
outsl
xorb
cmp
jbe
sub
fistpl
mov
or
push
dec
stos
or
aam
test
xchg
icebp
dec
in
int
das
pop
out
ljmp
loopne
mov
pop
sub
jge
sub
js
xchg
fsubl
cmp
jbe
pop
js
inc
or
ja
testl
outsl
jo
fs
aaa
add
daa
test
lahf
pop
sti
fisubl
cwtl
push
pop
cmp
and
xor
push
push
cld
mov
lock
push
ds
mov
xchg
outsb
loope
int
sahf
xchg
cmpb
add
dec
ret
xchg
ja
ret
arpl
mov
repz
imul
add
push
inc
stos
in
int3
mov
rcr
out
cltd
jno
cmp
jnp
hlt
push
stc
js
xchg
popa
in
aam
xchg
pop
testb
dec
repnz
popa
jae
and
std
inc
pop
inc
xor
adc
aas
xor
movsl
call
lahf
enter
je
fdivrl
sub
push
and
cwtl
lcall
jae
test
mov
inc
inc
pop
mov
dec
lea
fdecstp
rclb
mov
xor
icebp
mov
jmp
jns
adc
push
mov
mov
out
je
sbbb
and
adc
mov
dec
int3
cwtl
outsb
jmp
and
mov
loopne
add
insl
cmpsb
gs
inc
push
lahf
aas
mov
cmp
clc
js
adc
ficoms
daa
push
mov
outsb
add
pop
cmp
dec
xchg
in
fwait
sbb
mov
xor
aam
cmp
ljmp
int3
rcrb
push
aas
pop
shlb
inc
call
repz
mov
mov
push
fs
push
xchg
sbb
sub
dec
add
bound
mov
insb
pop
scas
sbb
arpl
sbb
out
mov
mov
cmp
fmull
in
mov
sub
lock
push
in
bound
cmp
dec
fdivr
cmc
pop
fldenv
inc
lods
dec
cmp
and
adc
sbb
ret
enter
cmpl
lods
push
pusha
mov
adc
icebp
jne
popa
and
mov
adc
pop
pop
xchg
clc
and
test
push
inc
dec
fsubrs
push
mov
dec
mov
int3
lret
test
pop
xor
pop
pop
mov
aaa
or
mov
push
jns
cltd
pop
repz
insb
mov
jp
push
iret
rcrb
add
push
sub
pop
xchg
or
leave
xor
mov
aas
sbb
inc
and
andb
xchg
test
aam
in
cmpl
push
nop
enter
scas
jg
repz
xchg
jl
mov
adc
adc
ficoms
push
inc
loope
push
call
dec
mov
mov
sbbl
mov
shrb
push
imul
add
jg
leave
leave
addr16
test
dec
push
push
dec
inc
dec
or
xor
out
xchg
cmpsb
xorb
ret
or
out
out
push
sub
cmpb
xchg
imul
cltd
idivl
in
xchg
nop
jns
int
xchg
ficoml
adc
pop
shl
cmpsb
jo
adc
cli
xlat
cmp
push
xchg
nop
cmp
xchg
fnsave
movq
pop
cmp
enter
lods
lahf
or
mov
shlb
pop
adc
pop
sub
icebp
movsl
xor
dec
jnp
dec
or
stos
ds
bound
ljmp
adc
ss
outsb
iret
insl
pusha
add
push
das
cmp
xchg
jecxz
repz
pushf
in
cmp
ds
cli
sahf
fisttps
popa
cmpsb
leave
pop
or
jae
test
jle
push
ret
dec
arpl
mov
imul
cli
or
mov
aas
mov
test
aas
fildll
stc
or
push
and
jbe
insb
aad
out
dec
mov
test
jb
cmp
jecxz
fimull
mov
push
lock
out
scas
mov
scas
sub
mov
push
cmovne
cmc
xchg
or
lcall
xchg
ja
pop
scas
sarb
mov
sbb
orl
sub
mov
scas
mov
rclb
pop
push
dec
and
xchg
xor
lods
and
jmp
sbb
test
adc
xchg
and
cmp
lcall
loope
loop
push
sub
mov
jmp
out
outsb
push
lea
in
mov
jge
sub
sti
popf
mov
sub
ljmp
imul
out
add
iret
adc
adc
ret
outsl
in
ja
loopne
jge
test
mov
add
sub
jg
nop
out
xor
adc
sahf
neg
mov
pushf
icebp
je
jmp
hlt
ret
pxor
mov
cmc
mov
shr
jg
dec
jge
add
shl
push
movsb
xor
push
cmp
mov
pushf
add
or
dec
fimull
add
adc
xlat
scas
mov
fcmovb
sbb
mov
sbb
popl
test
sub
jecxz
xchg
pop
mov
popa
fidivl
daa
ja
mov
cmc
in
push
mov
mov
adc
mov
lock
inc
movsb
pop
outsb
cmp
jge
xchg
mov
int
imul
sahf
or
push
negl
in
roll
imul
dec
decb
sbb
push
int3
xor
cmp
mov
sub
test
mov
adc
jmp
cmpsb
push
sub
cli
xchg
sahf
cmp
aam
sbb
mov
pop
sub
jns
cli
cwtl
push
and
data16
xchg
mov
adc
jp
aas
out
xchg
and
dec
push
inc
aam
out
jmp
loope
movsl
sbb
pop
loopne
lcall
jp
in
xlat
mov
xor
cmp
pop
lcall
cld
call
push
xchg
inc
mov
push
sbb
imul
incl
mov
gs
outsl
xchg
sbb
out
xchg
in
mov
shlb
lock
mov
jbe
repnz
arpl
lcall
adcb
lds
add
cli
dec
out
insl
lods
ja
add
add
ss
movsl
popf
das
jle
ret
mov
js
xchg
hlt
movsb
sub
scas
adc
xchg
mov
cmp
lods
jmp
inc
nop
fdivrs
adcl
sbbl
aaa
aam
movsl
js
jbe
adc
push
pop
iret
mov
lods
lds
nop
fidivrs
sub
test
cld
adcb
in
int
pop
and
jg
add
mov
dec
jle
xor
add
dec
mov
nop
aaa
add
bound
jb
lret
push
gs
cld
in
decb
jbe
push
pop
jae
jne
jl
dec
fldenv
jg
inc
aas
pop
popf
mov
jns
test
adc
stos
xor
je
aas
fldenv
call
lret
adc
sahf
adc
daa
add
ss
inc
mov
fsubs
aam
inc
ljmp
mov
pop
cmp
test
das
stos
adc
and
arpl
jp
arpl
sub
lea
shl
dec
pop
add
arpl
jns
push
fsubrl
loop
push
jp
dec
mov
mov
inc
stos
inc
das
add
lods
or
std
rcr
mov
mov
cld
jg
add
mov
std
xchg
rorl
mov
pop
fsubr
inc
movsb
jb
lcall
add
mov
repz
stos
sub
sbb
dec
cltd
push
inc
in
jnp
cmp
inc
lret
add
cmp
and
jmp
push
push
push
out
lret
ja
fimull
jecxz
ljmp
loop
jge
lods
mov
rolb
cmpl
inc
out
add
add
aaa
dec
in
mov
jmp
loopne
icebp
fsub
loopne
push
mov
and
enter
pushf
cwtl
inc
outsl
sub
jp
mov
hlt
sbb
stc
movsb
xchg
add
pop
pop
push
pushf
add
push
mov
test
scas
pop
sti
jo
push
pop
in
call
lods
mov
adc
scas
popa
cmpsl
add
cwtl
sbb
out
pop
jle
lds
push
in
enter
lods
cld
pop
enter
add
adc
mov
ret
sub
xchg
cmp
inc
dec
jge
or
fnsave
xchg
movsl
in
sub
pop
sahf
jmp
xchg
jge
push
xchg
repz
aam
ss
int3
subb
sub
mov
sbb
scas
es
pop
in
push
cmpl
mov
mov
mov
push
pushl
inc
jns
clc
push
movsb
sbbb
xchg
data16
xchg
add
pusha
cltd
ljmp
cmp
jo
testl
in
add
inc
movsb
pop
dec
aam
repz
aas
lahf
outsb
inc
push
hlt
cmp
call
inc
mov
cld
xor
sbb
and
pop
inc
dec
lock
mov
jne
loopne
cmp
or
addl
into
ja
inc
sbb
inc
inc
mov
rorb
and
lea
out
push
rcrb
out
sub
fs
push
cmp
and
daa
xlat
xor
cmpsb
enter
mov
ret
test
pop
test
mov
ds
enter
movsl
stc
pop
push
and
cli
push
icebp
imul
sbb
mov
add
xor
push
pushf
or
scas
xorb
adc
mov
mov
mov
mov
mov
ror
jo
pop
and
xchg
jmp
cli
and
mov
dec
xchg
je
and
aam
test
jp
sub
mov
sub
out
in
scas
or
mov
mov
cmpsl
lret
icebp
mov
or
push
pop
mov
roll
mov
pop
ds
cmpsb
addl
cld
cmp
or
cmp
mov
xor
pop
lcall
sbb
loopne
insb
rorb
nop
dec
mov
pop
dec
sbb
movsb
int3
mov
inc
cltd
fsts
gs
pop
repnz
or
into
sbb
shlb
push
dec
scas
xor
cmp
sub
and
mov
shl
shrb
fwait
in
fidivl
mov
in
bound
mov
leave
cmp
xor
sub
leave
daa
jno
xchg
cmp
sbb
sahf
pop
cmc
andb
jl
scas
dec
lds
das
fsubs
mov
lods
add
mov
xchg
mov
or
aam
mov
lods
mov
mov
or
jne
mov
nop
mov
inc
enter
std
mov
mov
xchg
gs
jbe
mov
mov
inc
mov
push
xorl
out
inc
pop
aaa
fs
sbb
cmp
mov
dec
imul
jg
mov
sbb
fwait
sub
daa
dec
in
iret
dec
lahf
inc
addl
adc
fldl
cmp
push
push
and
test
push
into
in
sarb
add
in
cmpsl
insl
cmp
test
push
xor
pop
inc
sti
add
mull
inc
sub
into
push
adc
push
loopne
pushf
dec
popf
scas
shll
add
push
adc
pop
cld
lret
into
mov
mov
stc
xor
fisubrs
dec
sbb
sarb
loop
test
inc
pinsrw
out
add
ret
outsb
inc
data16
fs
lock
in
data16
sbb
lods
mov
fisttpll
xor
outsb
xchg
cwtl
cmpsb
popa
aaa
inc
insl
sub
faddp
mov
and
inc
add
adc
lds
ds
push
inc
ficoml
stos
popf
shll
sub
loopne
mov
dec
sub
adc
pusha
testl
inc
aaa
mov
sti
and
sbb
idivl
popa
jg
or
mov
push
or
pop
sub
xchg
loop
sahf
mov
jecxz
in
mov
pop
xlat
cmp
scas
cmp
mov
pop
sti
and
test
mov
xchg
into
add
push
sbb
jne
aam
adc
repz
mov
dec
push
lahf
stos
pop
sbb
sub
and
mov
mov
push
je
adc
push
push
sbb
or
mov
add
lock
jbe
mov
push
test
jecxz
pop
push
ja
and
dec
jecxz
jno
inc
push
arpl
xchg
and
push
outsb
mov
pop
cmovne
addr16
xchg
xor
jge
cli
inc
jbe
sbb
out
cmp
cwtl
imul
push
aas
sbb
loope
pop
rcr
mov
imul
out
pop
cltd
cltd
imul
inc
dec
arpl
pushf
jecxz,pt
subb
repz
sbb
cmpsb
mov
mov
call
pushf
and
inc
jae
dec
out
imul
ret
and
mov
adc
pop
lods
pop
sub
in
xchg
dec
sub
jmp
std
add
cmp
lcall
ret
mov
loope
xorb
rclb
push
inc
cmp
out
inc
push
scas
outsl
ss
sub
lea
push
lods
ljmp
xor
pushf
mov
xor
mov
int
dec
inc
push
filds
mull
cld
mov
mov
jno
hlt
insb
fisttps
fbstp
imul
or
cmc
cmp
ss
dec
lahf
test
outsb
scas
ds
mov
xchg
sub
shll
mov
mov
pop
lods
xchg
nop
mov
cmp
sti
inc
mov
and
push
cld
or
test
cmp
cmp
mov
push
insl
std
out
inc
jl
xchg
stos
daa
testb
popa
icebp
adc
adc
repnz
movsb
test
lret
scas
xchg
fiadds
ja
jp
xchg
mov
dec
js
and
mov
es
jg
out
jnp
cmp
xchg
dec
xlat
lcall
add
ret
dec
inc
jb
pop
es
inc
pop
xor
outsb
push
or
add
jbe
lods
adc
mov
jl
paddsb
inc
cmp
lea
pop
sahf
pop
aad
icebp
cli
pop
es
stos
lret
loope
jle
sub
sbbl
pop
cltd
adc
pop
cmp
out
ret
xor
rolb
out
pop
stos
es
xchg
push
enter
mov
sub
fs
mov
leave
mov
xchg
cmpsb
mov
js
xchg
mov
push
rclb
popa
mov
popa
bnd
sbb
popf
adc
cltd
push
mov
xchg
push
scas
xor
push
push
pusha
aad
dec
cmp
addr16
test
xlat
xchg
dec
ret
data16
cmp
push
jle
jmp
lret
xor
mov
and
xor
not
out
test
cwtl
std
cmp
xchg
ss
and
jnp
nop
test
fucomp
pop
inc
mov
push
cs
adc
in
push
inc
xchg
rorb
dec
push
out
dec
jmp
andl
je
cmp
mov
neg
jp
dec
jg
mov
xor
dec
lret
sbb
mov
dec
shlb
stos
popf
insb
fcompl
std
xchg
and
test
fxch
add
and
sub
lds
pop
mov
add
stc
scas
mov
push
xor
xchg
out
pop
dec
push
mov
mov
jnp
clc
cmc
fsubrp
dec
ljmp
ja
pop
mov
in
xchg
inc
push
imul
jo
jmp
daa
push
fidivl
push
or
andb
bound
int
push
idiv
jno
scas
pop
repnz
adc
cli
icebp
roll
and
pop
subl
das
shl
mov
out
jmp
fimuls
mov
sbb
dec
mov
shrl
push
pop
test
inc
imul
fbstp
jne
xchg
lret
negl
fcoml
or
enter
mov
repz
arpl
bound
push
test
sahf
inc
jl
sbb
push
push
cld
cli
cli
sub
lods
adc
testl
aaa
popf
xor
xor
sbb
imul
or
add
xchg
cmp
cmc
les
cli
mov
xchg
or
aam
fldcw
ret
mov
scas
andl
push
imull
ret
jno
mov
and
leave
xor
hlt
pusha
addr16
ja
mov
dec
sub
lods
or
cli
push
mov
cs
push
in
mov
sbb
iret
mov
and
and
jmp
dec
loop
sbb
inc
in
scas
int3
mov
inc
sbb
ret
cmpsl
sub
mov
push
scas
or
outsb
pop
push
xchg
xchg
add
mov
sub
sub
adc
pop
mov
lds
push
daa
dec
test
rorb
pushf
add
int
xor
ret
mov
push
push
jb
xchg
aaa
push
sub
adc
sbb
or
sbb
inc
arpl
mov
jb
jns
jp
mov
cwtl
xchg
sub
add
repz
rolb
inc
mov
add
push
jecxz
and
pop
mov
cld
mov
cmp
push
pop
mov
insb
xor
jnp
in
aaa
cmp
out
push
mov
jp
add
mov
int3
sub
and
adc
add
shll
out
dec
mov
sbb
js
inc
dec
sub
jns
jmp
cwtl
mov
push
lea
mov
xchg
arpl
repnz
fsubs
data16
mov
das
lcall
data16
ds
std
sbb
adc
mov
sub
sbb
lock
xor
push
out
sbb
sbb
lds
bound
cmp
push
repnz
or
push
fiadds
push
mov
xor
cld
ret
jp
mov
mov
add
xchg
push
xchg
pop
add
dec
inc
repnz
movsl
mov
dec
stos
adc
jb
inc
sub
push
je
xchg
push
iret
aas
test
mov
in
xorb
jne
ret
pop
xor
push
aaa
popa
out
cmpl
mov
movl
and
mov
jns
add
pushf
xor
aad
pop
lahf
sub
jnp
dec
push
adc
add
test
add
cwtl
lods
and
inc
push
pop
push
xchg
dec
xlat
orb
fcompl
dec
inc
mov
xor
or
mov
das
andl
bound
idiv
insb
mov
fldl
xchg
xchg
adc
or
mov
pusha
push
repnz
ss
pop
pop
shll
test
adc
insl
dec
dec
jo
push
cmp
stos
adc
inc
aaa
sarb
je
add
sarl
adc
lea
push
rcrb
mov
loope
push
inc
pop
pop
roll
jnp
mov
scas
add
hlt
xchg
mov
xchg
out
sub
jbe
adc
cmc
mov
iret
or
jle
xchg
aam
inc
repz
cld
dec
add
cmp
in
inc
hlt
xor
pop
mov
stos
mov
loopne
sahf
mov
xor
sub
pop
stc
jmp
jns
ljmp
or
or
add
sbb
clc
enter
dec
dec
insb
jge
jo
inc
sti
jne
fbld
xor
fdivrp
pusha
xchg
std
cmc
inc
mov
lock
fs
int
xor
pop
test
push
mov
mov
mov
cs
sbb
or
dec
push
in
scas
and
sbb
rcll
mov
into
jno
jns
add
fstp
xor
aam
mov
fildll
adc
inc
and
push
in
ret
cwtl
jmp
pop
push
dec
pushf
xchg
adc
jnp
push
notb
mov
adc
movsl
test
pop
push
xlat
into
out
sub
xchg
inc
add
mov
xchg
push
ret
es
in
xchg
cmp
mov
mov
xchg
jno
mov
xchg
and
or
and
movsl
dec
jl
xlat
call
fildl
mov
mov
daa
adc
lea
hlt
push
pushf
shll
in
mov
into
cwtl
insb
pop
insb
mov
dec
xor
mov
xlat
mov
sbb
xor
mov
mov
and
lea
cld
dec
loop
imulw
inc
ret
out
fs
insl
popa
sub
sbb
push
ds
jbe
mov
lret
loopne
cltd
push
mov
pop
and
outsb
scas
xchg
mov
out
sub
gs
xchg
mov
pop
jg
shrl
jecxz
sbb
mov
lahf
sub
aas
aas
aaa
dec
sbb
or
fbstp
insl
gs
dec
sub
and
icebp
pushf
int
lahf
lahf
jmp
lahf
or
leave
adc
jb
daa
xor
pop
lds
sub
movsl
push
xor
js
inc
stos
and
punpcklwd
and
push
imul
popa
xor
push
inc
popa
pop
sbb
push
fnsave
push
sbb
adc
adc
add
imul
in
rep
add
pushfw
in
push
xor
sub
pusha
bound
shlb
push
xchg
and
jge
je
add
dec
pand
mov
adc
or
cmp
inc
dec
pop
adc
lods
mov
push
mov
xchg
xlat
in
clc
inc
mov
and
and
dec
push
or
imul
sahf
test
pusha
scas
je
aas
scas
xor
push
int3
ss
push
mov
cmp
stos
leave
mov
adc
iret
pusha
loope
mov
or
test
pop
add
cmp
mov
inc
stc
push
jl
xchg
mov
arpl
cmp
or
dec
fimuls
jae
mov
leave
lcall
rolb
insl
rcrb
xor
mov
jae
xchg
mov
loope
sbb
cwtl
and
or
xorl
push
mov
xor
imul
ja
fistpl
lds
mov
jmp
insb
fnstsw
adc
test
xchg
inc
mov
add
inc
lods
lods
pop
int
jmp
ret
push
mov
push
xlat
jmp
insb
test
pop
les
ss
scas
lds
sbb
stc
sbb
sub
push
dec
xor
mov
dec
jb
mov
mov
lock
sbb
sub
inc
xchg
jge
jno
je
mov
xchg
mov
fwait
push
jle
in
movl
mov
jno
jno
fs
lret
in
mov
es
out
jns
or
inc
or
pop
cmp
in
iret
repnz
and
ljmp
sbb
clc
mov
inc
out
data16
push
or
adc
in
pop
sub
mov
out
cmp
mov
test
jg
jge
outsb
cmc
lcall
push
inc
int
and
jge
out
fstl
lods
or
data16
cld
mulb
mov
push
mov
push
hlt
dec
imull
xchg
cmp
xor
adc
xchg
lret
pusha
lock
cmp
cmp
push
lods
cmp
clc
hlt
cmp
jmp
cmp
mov
aam
shlb
mov
in
jno
sub
aam
jmp
imull
and
out
lea
rcl
cmpsb
and
sbb
aam
mov
pop
lock
push
push
add
into
cs
mov
hlt
movsb
imul
das
push
mov
shll
hlt
mov
adcb
mov
mov
call
and
sahf
or
bound
or
scas
adc
fsubr
sub
pop
icebp
sbb
and
adc
sub
add
xchg
outsb
push
and
das
mov
jl
mov
test
loopne
shlb
cmp
leave
adc
loopne
sub
cwtl
lcall
in
mov
loop
cmp
xor
add
in
testl
jno
inc
inc
data16
sarb
aad
cmpsl
rorl
pop
push
inc
adcl
mov
push
pop
mov
xchg
or
fwait
ljmp
pop
ss
jp
fnstsw
iret
mov
ss
iret
movsl
jge
push
pop
jl
adc
fsubs
mov
mov
or
dec
mov
push
popa
cwtl
movsl
outsl
outsl
xchg
mov
iret
lods
fwait
mov
add
movsl
inc
mov
lods
mov
xor
and
mov
xor
outsl
pop
inc
mov
jecxz
aam
jno
and
in
sbb
add
xchg
or
xchg
xchg
jno
jl
dec
cld
dec
and
xor
push
aam
loope
ret
cmp
ljmp
mov
mov
dec
adc
dec
les
lret
lds
lock
or
js
add
xlat
xchg
sub
ljmp
sub
stc
addl
addr16
pushf
mov
mov
sub
in
lcall
ret
popa
decb
dec
movsb
pop
loope
lods
push
in
lods
xor
mov
iret
fdivr
mov
mov
scas
pusha
jle
dec
call
push
jo
popf
nop
cmp
insb
mov
in
imul
and
fldcw
std
pop
fcmovbe
imul
aaa
adc
outsb
sub
xchg
jne
mov
mov
push
hlt
out
pop
mov
jl
fildll
xchg
outsl
out
pop
hlt
div
lds
push
push
or
push
push
xor
fdiv
ss
jnp
imul
out
test
pusha
cmp
data16
in
xchg
repnz
add
movb
icebp
pop
lea
mov
test
mov
pop
and
cltd
jg
hlt
jmp
lds
add
pop
outsb
sbb
mov
mov
lea
mov
popf
in
mov
mov
ficoml
adc
xchg
lcall
xor
add
adc
mov
in
mov
cmp
cwtl
mov
sbb
inc
and
movsb
sub
movsb
shll
inc
lahf
mov
dec
ljmp
jp
jge
sahf
movsl
pop
inc
or
test
sub
popa
xchg
xchg
jle
xor
add
inc
jns
inc
cmp
dec
mov
jl
aad
and
and
mov
sbb
jno
lea
nop
jge
mov
xor
fsubrs
lahf
in
pop
adc
outsl
cmp
or
es
mov
adc
incl
dec
mov
mov
dec
sbbl
mov
pusha
mov
ror
mov
add
fucomp
daa
sub
frstor
dec
clc
inc
mov
pop
xchg
dec
mov
pop
test
xchg
ja
pop
push
shl
push
test
bound
dec
loopne
lret
cltd
sub
xchg
lret
scas
xchg
adc
pop
jle
xchg
jbe
xor
dec
leave
test
and
fldcw
outsb
mov
fwait
cmp
mov
and
out
je
jae
xchg
push
bound
add
shll
mov
inc
dec
sbb
gs
mov
imul
pop
aad
call
es
inc
fisttpll
cmc
outsb
pop
cmpsb
cmp
pop
stos
fisubs
xchg
xchg
jecxz
xor
pop
ret
lock
sbb
dec
or
push
sbbb
pop
pop
dec
ja
pop
sbb
icebp
sbb
popf
out
fisubs
outsl
sub
cld
mov
cmp
fiadds
jbe
test
mov
out
or
mov
sub
movsb
leave
inc
inc
lea
mov
stos
dec
cli
dec
les
les
pop
rcrl
adc
mov
out
out
cmp
call
sub
lods
push
cmpsl
sbbl
adc
cmp
adc
inc
out
fistpll
xchg
lea
es
aam
cwtl
lock
pushf
xor
xor
jmp
push
loopne
jo
mov
push
inc
fwait
mov
ficoms
bound
push
outsb
mov
push
scas
and
inc
mov
sub
mov
ret
movsb
je
out
sti
pop
adc
add
jae
sbb
out
leave
imul
cmpsl
add
sbbb
int
icebp
icebp
insb
stc
ja
mov
cmc
in
out
mov
adc
pop
sbb
cmp
or
sarl
ds
mov
adc
lcall
push
int
cld
iret
rorb
mov
loopne
insl
and
and
mov
dec
lret
test
jp
xor
ljmp
cmc
sub
xor
and
movsb
ficoms
or
outsl
inc
in
in
int3
and
imul
insl
pop
cmpsb
stos
mov
out
mov
leave
push
cmp
in
je
mov
aaa
push
and
jle
mov
fnsave
cld
aaa
pop
stos
xor
mov
or
xor
xchg
or
je
int3
xchg
cli
lcall
mov
pop
popa
fcmovnu
mov
inc
adc
jl
jge
sahf
jae
jmp
or
xchg
inc
clc
scas
shl
test
push
and
inc
sbb
cmp
push
xor
mov
lods
mov
shll
cmp
shrb
and
sti
mov
push
and
cs
inc
and
or
mov
mov
aad
jg
jbe
mov
xchg
cld
jl
js
int
lcall
jl
ja
int
rorl
xlat
iret
or
hlt
or
lock
mov
rorl
pop
push
inc
daa
jb
fcmovne
int3
mov
jbe
cltd
jae
push
mov
popf
mov
dec
sub
aam
or
jp
push
jb
sub
sub
xchg
sub
jecxz
leave
out
shll
xlat
test
cli
mov
je
xchg
lret
and
jmp
test
subl
dec
sbbb
mov
mov
stc
or
fs
xor
les
cmp
push
test
loopne
inc
test
test
mov
add
xlat
dec
mov
jns
lock
xchg
jbe
adc
cmc
leave
mov
xchg
sbb
add
sbb
mov
sub
xor
rcl
xor
pushl
mov
roll
mov
js
push
rorb
inc
jns
mov
xchg
leave
scas
loop
pop
push
pop
push
call
scas
xchg
inc
xchg
xchg
add
jg
psubsb
or
mov
fndisi(8087
mov
cmpsb
add
pop
orl
aas
sbb
shll
fildll
and
dec
xchg
stos
mov
fstl
cld
mov
sbb
mov
jb
jecxz
add
imul
cwtl
stos
scas
sub
sbb
popa
jbe
or
mov
lcall
mov
jmp
push
decb
dec
inc
out
insl
scas
repz
and
leave
call
jne
js
movsb
bound
fsubs
dec
inc
sub
mov
lock
jge
in
mov
jne
mov
mov
rcrl
inc
insb
out
jecxz
mov
leave
jno
pop
dec
test
dec
pop
arpl
hlt
cmp
pop
push
frstor
mov
fildll
adc
scas
mov
jp
sti
fs
lcall
xchg
and
pop
fdiv
cmp
ret
rcrl
adc
aam
or
push
frstor
push
push
sbb
inc
push
aam
mov
call
fldl
push
enter
in
inc
into
sbb
call
test
add
jle
xchg
int3
call
test
mov
je
adc
push
sbb
fcoms
mov
movsb
enter
ds
ljmp
xor
fs
pop
add
dec
xor
xorl
mov
xchg
outsb
ret
jmp
iret
mov
ficoms
and
cmpb
dec
adc
xlat
and
sbb
mov
push
sbb
repz
xchg
sbb
jecxz
das
or
data16
fdivrs
call
stc
mov
mov
cmp
js
stc
and
xor
jbe
fucom
arpl
outsl
shlb
or
lea
jns
cmc
jns
out
cltd
dec
cltd
lret
loop
push
push
mov
or
mov
pop
jbe
jmp
fdiv
sahf
push
cmp
ret
dec
and
cmp
xor
in
sbb
clc
or
mov
test
fsubr
ficomps
aaa
xchg
add
fsts
pop
lea
mov
inc
jno
xchg
dec
movl
shl
sti
mov
xchg
enter
mov
or
mov
fldl
popl
les
or
pusha
test
cld
pop
ror
in
and
int
mov
repz
sbb
cmp
inc
enter
repz
in
lret
mov
stc
inc
or
jle
mov
scas
jo
mov
inc
add
mov
je
cmp
outsl
popf
inc
js
mov
mov
xor
pop
rcrb
in
or
jp
add
repnz
dec
lret
xchg
call
or
sbb
pop
rolb
lods
aaa
lret
daa
int3
rolb
test
push
xchg
stc
fcompl
bound
jbe
dec
test
je
sbb
lds
pop
mov
cmp
cmc
mov
into
cmp
fs
idiv
mov
or
loope
jo
stos
cmp
repnz
stc
or
cmp
or
push
pop
lcall
dec
clc
xchg
cmp
in
mov
scas
loopne
dec
dec
push
jae
lock
lea
imul
sbbl
sbb
stos
sub
sub
fidivrl
or
fldenv
subl
push
xor
shl
inc
jb
jl
and
ja
xchg
or
mov
mov
inc
jne
arpl
negb
jno
sub
adc
add
adc
ljmp
lods
test
pop
enter
rep
popf
divl
in
mov
sti
adc
orb
xor
push
xchg
stc
pop
out
mov
mov
outsl
mov
cs
fsubrl
mov
arpl
scas
mov
daa
push
pop
mov
subb
adc
mov
adc
popa
sub
push
cmp
jg
ljmp
pop
mov
dec
dec
mov
dec
or
aaa
cmp
xor
mov
scas
arpl
pop
cwtl
std
andb
dec
ss
inc
fs
insl
xchg
ret
repnz
push
ja
jg,pn
adc
sub
jecxz
and
sbb
pop
insb
movsl
test
fwait
xlat
cmpsl
xor
adc
div
xchg
sbb
pop
adc
pushf
jnp
inc
mov
cmpsb
adc
je
pop
adc
les
inc
mov
movsb
or
xor
inc
cmpsl
hlt
repnz
fcmovnbe
incl
or
dec
rcll
ret
inc
sti
adc
scas
mov
ja
add
lds
pop
cmp
call
mov
lods
sub
loop
in
dec
scas
in
jg
addr16
mov
movsl
xchg
pop
dec
sub
cwtl
lods
jmp
xchg
cld
out
mov
jb
mov
push
std
lahf
outsl
fsubs
xchg
add
fmul
mov
mov
or
dec
xchg
lock
jge
xor
dec
and
jmp
imul
shr
and
pop
stc
adc
xchg
dec
mov
cld
imul
pop
mov
mov
xchg
inc
pop
addr16
xor
dec
int
outsl
stos
int3
push
mov
jnp
inc
mov
fbstp
cmpsl
sub
push
mov
je
loopne
dec
jae
data16
mov
popa
mov
xor
dec
inc
push
clc
imul
lcall
loopne
mov
xor
push
sbb
movsb
mov
aaa
subb
out
push
je
mov
cmp
into
icebp
dec
cs
sbb
dec
aas
fwait
repz
aaa
and
movsl
pop
mov
fimuls
imul
ljmp
sbb
cmp
sbb
jecxz
mov
cwtl
dec
cmp
xlat
aad
mov
sbb
add
je
sbb
xchg
daa
mov
inc
mov
sbb
adc
mov
je
dec
pushf
cmp
ds
mov
imul
jge
cmpsl
mov
xor
cli
sub
mov
dec
push
mov
jle
cmpsb
lods
push
loop
shrl
cmp
sbb
cwtl
leave
and
or
sub
pusha
fcomp
jg
xor
popf
and
jns
jp
inc
and
push
iret
adc
dec
scas
dec
push
addr16
add
ss
sbb
mov
jns
idivb
imul
cwtl
jge
mov
lret
inc
faddl
jmp
push
dec
out
in
pop
adc
notl
mov
mov
pop
outsb
mul
daa
andl
mull
mov
xor
lret
popf
sbb
es
cmp
out
loopne
pop
sub
mov
sahf
adc
cmp
jl
mov
xchg
fbld
sub
push
jb
jl
popa
cmc
pop
fmull
mov
daa
cli
add
lcall
ffree
mov
testb
in
jg
daa
loope
xor
hlt
fldenv
fstps
inc
mov
dec
xchg
sbb
jae
imul
rcrb
and
push
push
test
mov
fsubp
arpl
out
das
arpl
lret
lods
sbb
call
xchg
jp
xor
aas
imul
mov
xor
cmp
and
pop
mov
pop
push
push
cli
roll
and
push
jns
imul
inc
sbb
pop
lods
fldcw
fisttps
loop
mov
pop
imul
call
sbb
lret
or
cli
or
incl
pop
pushf
sbb
fisubrs
inc
xchg
sbb
jb
stos
fsubl
xor
rol
inc
std
fiadds
xchg
cli
sub
xchg
scas
hlt
xchg
mov
xchg
cltd
mov
icebp
lods
es
lods
push
in
repz
arpl
sbb
aas
add
and
push
out
sti
push
jg
mov
xchg
push
mov
and
test
add
mov
lret
fsubp
cwtl
out
pop
dec
pop
push
mov
jge
or
clc
loope
adc
xchg
jne
fsubl
dec
lret
lret
jle
rclb
mov
adc
lea
push
push
bound
cmp
test
add
int3
lods
sub
repnz
fdiv
std
lcall
push
and
rorw
dec
xchg
js
scas
jbe
pop
clc
xchg
ds
in
out
jnp
sysret
push
jnp
xchg
adc
push
in
cmp
test
ret
enter
add
sbb
jo
sbb
mov
pop
push
mov
sti
fimull
push
sahf
cmc
popa
data16
movsl
jle
in
lds
loopne
dec
mov
clc
push
aas
enter
ret
sarb
dec
mov
push
mov
hlt
hlt
and
xchg
scas
div
cmpsb
scas
out
mov
outsb
pusha
shr
arpl
sbb
mov
pop
icebp
mov
in
add
fwait
enter
data16
xor
cmp
xchg
push
xor
xorl
insl
push
or
ds
pushf
loopne
mov
arpl
jg
mov
aad
sub
mov
popf
sbbb
gs
add
adc
lret
pop
stos
imul
movsb
jae
fdivr
inc
jmp
add
daa
xchg
dec
iret
sbbl
fsubp
subb
xchg
add
aaa
test
ret
mov
pop
mov
scas
xor
push
push
inc
std
add
hlt
mov
push
fidivrs
shr
shll
in
dec
cmp
add
fiaddl
fldcw
vmovddup
mov
pop
jne
filds
push
loope
ror
push
lock
enter
pop
sub
fildl
add
inc
push
adc
adc
ds
push
int3
mov
cwtl
icebp
dec
out
sub
movsl
dec
sbb
sub
insb
mov
dec
xor
fcmove
inc
mov
pop
rol
fisubs
pusha
dec
rclb
pusha
and
bound
xchg
cmp
out
pop
mov
mov
mov
insl
out
pusha
jmp
dec
mov
xchg
out
pop
cld
out
mov
mov
in
loopne
add
mov
xchg
scas
outsb
jno
lcall
rolb
pop
and
and
fisubrs
and
lds
clc
nop
push
rclb
pop
mov
xchg
pminub
pusha
and
mov
mov
xor
aas
mov
out
jmp
dec
xor
or
clc
inc
fisubrl
sarb
and
add
in
jns
cli
mov
jnp
idivb
insb
xchg
dec
pop
rclb
or
pop
xchg
sub
call
or
jle
sub
mov
sbbl
or
push
and
pop
adc
adc
mov
sub
push
sbb
add
jmp
jae
add
cmpsl
sbb
popa
add
int3
inc
mov
cmc
sbb
imul
punpcklbw
loopne
ds
jecxz
pop
leave
jp
mov
sub
fidivl
jg
jp
int
jbe
cmp
mov
xchg
fwait
or
jge
out
in
addr16
test
in
add
scas
dec
cld
xlat
sbb
out
and
dec
pop
icebp
mov
pop
sti
clc
mov
pop
and
outsb
cltd
in
int
pop
popa
add
cwtl
sub
packsswb
add
jmp
adc
hlt
pop
jmp
cwtl
movsb
ret
mov
add
arpl
cmp
push
cmp
push
pusha
jmp
inc
fidivrs
out
mov
aam
test
dec
cld
fwait
jo
sub
mov
es
ret
and
mov
subl
dec
hlt
push
push
cmp
clc
jmp
in
jae
sub
stc
xchg
hlt
mov
ficoml
jne
ficompl
cmpsl
inc
sahf
push
or
sti
or
xor
add
sbb
pop
cmpsl
push
leave
mov
mov
xor
pop
dec
sub
out
leave
out
mov
ret
addl
and
and
dec
sub
jno
lods
popa
stos
sub
jge
or
movsb
or
pop
sbb
cld
or
scas
push
es
lea
jg
mov
mul
or
inc
lahf
mov
loope
lods
add
sub
add
ds
or
fadd
or
jp
cmp
push
mov
jb
pop
or
pop
ror
call
lahf
pop
addl
or
test
int
sahf
cmc
mov
loop
loop
aas
push
fnstcw
cli
daa
mov
adc
test
mov
subl
adc
bound
rcll
dec
push
repnz
push
cmp
jge
jo
or
ljmp
test
test
int
out
or
cwtl
fsubr
jnp
adc
subl
pop
xlat
fists
add
test
cmp
subb
mov
addl
sti
mulb
inc
je
loop
inc
movsb
ja
popf
data16
test
test
jge
jne
xchg
ds
shlb
lahf
cmpsb
in
mov
fcompl
sbb
add
and
dec
mov
push
sbb
sub
push
pop
and
pop
mov
movl
icebp
mov
inc
lcall
jge
sbb
dec
mov
pop
and
xor
sub
inc
ret
aaa
stos
rcrl
test
mov
fimull
je
xor
add
push
movsl
in
or
js
leave
and
lahf
mov
mov
ss
and
adc
or
dec
fwait
or
xchg
lods
stos
and
or
popf
outsl
aas
mov
test
sub
add
jmp
cmp
xchg
jecxz
dec
call
push
cmc
mov
add
sub
jnp,pt
rcrb
adc
pop
nop
jmp
rcll
jmp
test
or
cmp
test
mov
cmp
mov
adc
rcrl
movsl
xchg
arpl
jo
sbb
push
test
xchg
cmp
sbb
icebp
aad
lahf
jb
sbb
iret
fimuls
jns
int
sbb
rclb
test
sbb
lods
adc
jb
mov
shl
int3
mov
mov
out
or
ljmp
aam
push
cltd
mov
lahf
mov
mov
sbb
adc
fwait
adc
sbb
lock
adc
adc
adc
add
push
xchg
aaa
orb
jns
fisubs
les
test
inc
push
jae
xor
pop
adc
movsl
sub
dec
lods
repz
pop
stos
pop
int3
push
cld
mov
mov
jbe
jecxz
adc
pop
and
mov
cwtl
add
roll
dec
sub
mov
pop
iret
cld
pop
mov
shll
fistpll
or
xor
mov
pop
js
push
in
popf
sbb
ja
adc
adc
dec
roll
shrl
pop
push
or
out
or
dec
popf
dec
pop
xor
xor
push
add
jnp
scas
imul
das
cmp
lea
mov
movsl
out
mov
test
cmpl
jne
pop
inc
dec
pop
add
std
push
xlat
pop
push
mov
jne
dec
outsl
jmp
lahf
lahf
jno
dec
fisttps
ret
sbb
dec
dec
addl
sbb
call
dec
mov
pushf
xorb
dec
in
pop
movsl
lds
jmp
pop
and
jns
sub
out
cli
popf
ret
cmpsl
sahf
push
inc
or
pop
mov
pop
pop
imul
lds
outsl
fbld
call
xor
lahf
pushf
fisubrl
mov
ljmp
cmp
mov
fxch
loop
lcall
add
jae
movsb
fcmovnu
push
cmp
nop
sbb
jg
push
xor
js
push
add
add
call
jecxz
cltd
ret
movsl
gs
xchg
push
rolb
lock
sub
ficoms
jb
sbb
xor
es
or
push
sbbb
mov
test
xchg
test
pop
add
sub
cmp
loopne
cmp
aam
sbb
sub
cmp
adc
jo
lods
and
xchg
dec
push
subl
sti
scas
push
mov
loope
pop
adc
or
cs
ret
pop
insb
push
addr16
mov
popf
pop
mov
shl
lods
sbb
shlb
push
imul
pop
mov
int3
add
mov
lds
je
push
mov
or
mull
pushf
lcall
inc
dec
or
aaa
out
mov
cld
int
stc
movsb
mov
push
dec
gs
pop
bound
lcall
stos
mov
das
scas
lret
mov
sub
jb
cmc
adcb
fcompl
inc
in
push
mov
xchg
mov
lret
dec
dec
jo
mov
shr
loope
push
into
dec
mov
and
test
mov
outsb
mov
pmovmskb
jo
sbb
cmc
mov
cmp
dec
adc
pop
or
and
dec
mov
hlt
jb
and
fstps
jno
cmp
int
inc
inc
repz
sub
inc
or
fsubrl
arpl
mov
loop
stos
pushf
arpl
jne
aaa
es
das
imul
xchg
aad
inc
ljmp
pop
in
outsb
and
in
mov
push
pusha
out
jle
mov
and
dec
cmpsl
sub
sbb
mov
imul
xor
dec
push
mov
ja
sbb
sub
int3
out
mov
roll
sbb
push
dec
fwait
test
sbb
clc
mov
out
fwait
or
in
xor
lret
fucom
jo
push
stos
lcallw
scas
push
aad
mov
hlt
rclb
lret
lahf
stos
fdivp
pop
out
mov
fimuls
int
inc
xor
loop
or
test
or
roll
andb
xchg
jle
push
push
xor
adc
push
push
adc
pop
rcrb
orb
mov
push
cltd
sbb
test
in
push
std
mov
lret
adc
mov
mov
or
xchg
mov
into
fs
add
dec
mov
pushl
lret
cli
pop
add
das
cmpsl
dec
sub
pop
push
dec
xchg
sahf
ss
jecxz
cmp
adcl
popf
and
push
sub
adc
loope
dec
in
popa
std
rorl
adc
dec
jmp
pop
inc
lock
mov
inc
cmp
jmp
frstor
rolb
repnz
test
scas
cs
lcall
xchg
jno
imul
jmp
xor
and
test
test
xlat
insl
pop
cmp
add
lds
and
ss
das
in
fstl
mov
sbb
into
jno
bound
or
cmpsb
sbb
xor
cmpsb
add
and
sub
mov
insl
inc
lods
jo
test
test
fists
inc
sbb
hlt
ds
push
or
jae
ret
cmp
mov
cmpsb
repnz
loope
out
jecxz
inc
popf
sti
inc
bswap
cmp
es
ret
push
or
xor
or
aad
sub
sbb
pop
mov
or
pop
addr16
pop
rorb
xor
stc
das
sub
xor
daa
pop
popf
push
dec
loope
push
loope
mov
pop
inc
or
les
cli
and
sbb
and
inc
les
adc
mov
ja
fs
jge
inc
enter
push
imul
cmp
jne
in
les
sbb
ds
bound
loope
xchg
in
ret
pop
std
jae
cmp
jg
das
adc
and
push
nopl
into
out
in
jl
aad
push
pop
adc
fdivs
je
mov
lcall
insb
icebp
fwait
xchg
sarb
fsub
jg
jge
popf
mov
jp
pop
inc
sahf
jge
dec
inc
nop
and
sahf
xor
xchg
in
rcrb
out
jg
xchg
xchg
pusha
test
xor
orl
out
jge
sti
das
dec
add
in
hlt
stc
mov
out
mov
fistps
push
scas
movsl
test
mov
dec
adc
call
pop
neg
in
adc
push
mov
mov
cltd
inc
mov
js
pop
push
and
jne
test
jle
push
inc
cli
and
mov
sub
enter
adc
dec
xchg
add
aad
inc
bnd
dec
push
xor
push
or
test
mov
daa
jno
int3
pusha
jle
pop
xchg
imul
sti
adc
sub
push
and
dec
mov
inc
je
xlat
lret
lds
cmp
inc
ds
fcmovnb
mov
pop
ret
xchg
push
out
xor
je
scas
loopne
imul
sbb
scas
mov
mov
sbb
cmp
xchg
jmp
mov
add
in
scas
dec
sahf
mov
push
inc
test
jnp
lea
lods
into
mov
mov
bound
add
push
sub
mov
shlb
inc
loope
dec
popf
popa
stos
or
andb
out
inc
pop
sbb
lret
dec
adc
arpl
shll
pop
dec
mov
mov
cmpsl
not
dec
iret
cli
into
sbb
and
div
mov
pop
add
add
and
pop
adc
js
cmp
inc
cli
push
or
idivl
pop
mov
je
ror
cmpsb
outsl
pop
or
outsl
xchg
orl
inc
out
cwtl
and
xor
ja
push
movsl
xchg
sbb
enter
jae
stos
dec
fs
jb
jl
mov
mov
adc
add
jge
repnz
mov
inc
mov
cs
in
enter
xchg
cmpl
mov
pop
pop
leave
movl
jp
sub
stc
rcrb
or
mov
jecxz
sbb
mov
pop
shr
xchg
scas
out
sub
inc
insb
lds
lods
arpl
adc
ja
mov
inc
inc
adc
sbb
push
ss
ret
sbb
inc
std
cs
push
or
mov
sbb
rcll
sahf
xchg
and
ljmp
jo
jmp
addr16
jg
xchg
popa
insl
int3
test
xor
xchg
rorb
mov
test
jge
insl
sti
jno
fsub
and
xor
aam
adc
imul
sbb
je
adc
inc
ret
scas
cld
xchg
clc
inc
add
jno
sahf
adc
or
jmp
jo
jecxz
adcb
je
add
xchg
sbb
fistps
cmpsl
push
adc
or
call
adc
stos
jo
inc
cmp
jns
push
sbb
add
inc
js
mov
mov
sub
imul
lods
mov
test
inc
lcall
push
daa
inc
pop
es
ss
std
xor
loop
add
outsb
mov
cmpl
add
add
mov
jbe
rclb
gs
lea
xor
push
mov
sbb
lods
fnstsw
mov
push
ss
cmp
int3
add
add
fstps
pop
fsts
xor
add
pop
cmp
mov
inc
loopne,pn
fs
jbe
insb
xchg
fdivrl
jnp
adcb
mov
or
rcrl
xchg
or
or
jl
xlat
push
mov
cmc
xor
sti
sahf
xchg
pop
adc
and
jno
fwait
data16
aas
jae
je
mov
mov
lret
bound
push
or
fcompl
mov
mov
xor
jne
fdivs
scas
push
or
shll
fwait
outsl
inc
mov
loope
xor
push
pop
lahf
mov
add
xor
test
push
ret
out
xchg
inc
call
adc
cs
fdiv
repnz
sub
mov
into
addr16
xor
loope
bound
loopne
and
cld
jae
icebp
lods
arpl
insl
dec
xchg
sbb
bound
mov
fsubl
cs
sbb
mov
and
inc
icebp
mov
cli
or
bound
pusha
inc
pop
ljmp
enter
cli
mov
mov
jns
pop
fisttpl
shr
arpl
fcmovnu
into
addl
loop
shrb
xor
das
imul
xor
push
bound
jne
stc
xchg
sbb
dec
sub
stos
cmpsl
xor
scas
or
xchg
enter
arpl
mov
shl
cmp
dec
mov
sub
mov
push
inc
int3
xchg
iret
mov
add
nop
mov
lds
test
out
dec
call
cmpsl
xor
mov
or
pop
cld
xchg
adc
mov
arpl
mov
adc
cmc
fdivl
push
aam
jne
and
aad
sub
cmp
xor
ficoms
stos
jbe
push
sub
add
mov
jae
xchg
pop
jno
push
sbb
pop
jge
and
iret
mov
inc
mov
jb
xor
jne
jp
sub
lods
lret
es
adc
inc
mov
cmp
mov
xchg
lret
jns
cmp
nop
iret
and
lods
faddp
movsb
repz
xchg
in
std
int3
fwait
rcrb
fdivrl
lret
aas
dec
ret
push
iret
dec
push
ja
mov
cmp
inc
xor
stc
fwait
in
add
jg
jns
push
mov
insb
dec
and
mov
xchg
je
ss
inc
shrl
adc
divl
xchg
daa
out
imul
shl
push
testl
inc
outsb
das
adc
sbb
jmp
in
cmc
jbe
pop
add
jb
icebp
fs
out
mov
push
lock
out
mov
aad
pop
sub
push
xor
aas
outsl
testl
cwtl
and
aas
cmp
xor
xor
hlt
cmp
inc
es
mov
push
sti
lret
mov
movsl
lahf
cmp
push
shl
out
cmc
mov
shrl
ror
ljmp
fidivrs
mov
sbb
pop
mov
lret
sbb
sbb
sbb
inc
gs
ss
insl
mov
dec
jle
ljmp
mov
lds
out
lds
dec
jp
pop
xchg
rclb
sbb
mov
ss
pop
dec
dec
push
int3
ss
xor
sub
std
jb
pushf
adc
incl
sti
aam
cmp
mov
cmpl
lret
fdivr
imul
in
mov
cltd
cmp
pop
ja
jg
jb
ror
sub
jns
arpl
std
fisttps
out
pop
and
pop
cmp
push
negl
adc
pop
loopne
lret
push
ljmp
out
mov
and
imul
lret
and
add
fistpl
inc
mov
loop
mov
inc
fisttpl
adc
hlt
popf
enter
out
cmc
push
jae
push
cwtl
cmp
sub
rcll
xchg
out
and
cmp
jo
cltd
mov
inc
cmp
sub
cltd
push
bound
nop
push
xchg
or
mov
xchg
cmp
and
inc
aam
mov
ret
pop
mov
add
shl
adc
ljmp
ja
fistps
jno
add
pop
imul
or
sbb
movsl
scas
xchg
dec
jmp
jb
out
cli
and
gs
imul
cmpsl
std
push
mov
call
mov
pop
imul
jb
out
push
fs
jmp
ljmp
inc
mov
adc
sbb
iret
outsl
hlt
xlat
push
sbb
fisubl
fwait
in
lea
sahf
and
inc
mov
daa
mov
xor
les
mov
insl
div
pop
mov
test
or
cmpsb
pop
dec
sub
cmp
cmp
stos
mov
add
pusha
mov
repnz
xchg
dec
mov
or
lods
xor
mov
push
jle
mov
or
sbb
hlt
and
shl
xor
push
dec
into
xchg
int3
lcall
std
mov
popa
xor
push
sub
xchg
xchg
mov
xchg
add
inc
repnz
repz
cmp
jae
pop
fsts
inc
inc
xchg
aad
addr16
les
jbe
and
sub
and
jp
int
movsb
sub
lahf
xchg
or
and
push
add
out
daa
repz
out
repz
xchg
mov
popf
and
xlat
or
mov
mov
xor
xor
xor
outsl
ret
fsubs
sbb
lret
iret
dec
lret
outsl
add
punpckhbw
in
leave
pusha
aad
cwtl
pop
testb
push
xchg
sub
bndstx
ficoms
incl
push
dec
and
pusha
sub
popa
xor
iret
mov
mov
or
je
imull
lahf
rorl
pop
inc
or
push
dec
bnd
jnp
xlat
mov
rolb
ds
nop
outsl
mov
push
sbb
pop
pop
cmp
loope
mov
sub
pop
pop
nop
test
daa
xchg
je
scas
pop
aas
xchg
cmc
push
sahf
outsb
cmpsb
cmp
je
dec
sbb
ret
gs
jge
out
rclb
push
pusha
mulb
cltd
aam
cmp
jb
rorb
in
push
pop
rcll
testl
lret
ret
pop
or
fmulp
inc
jp
xchg
hlt
sub
inc
je
in
adc
iret
rcll
lcall
fcoml
adc
push
enter
push
mov
sub
incb
adc
jle
inc
decl
pop
jae
mov
ljmp
mov
inc
jge
fidivrs
sarb
jecxz
mov
cmpsb
xchg
cmpl
mov
mov
xor
dec
int
ficompl
lahf
arpl
cld
sarl
es
sub
lret
sub
in
adc
xchg
das
dec
cmpsb
cmp
sti
lret
int3
pop
pop
lock
cmp
divb
cltd
cmpsb
sbb
and
repz
popf
jb
pop
scas
cwtl
pop
pop
lock
sahf
fnstcw
cmp
enter
scas
mov
incb
out
sbb
xor
cs
and
out
punpckhdq
rorb
outsl
rcrb
and
mov
adc
scas
int3
dec
les
mov
lretw
mov
repz
cmp
inc
sti
jl
and
or
into
mull
cld
xchg
jne
inc
or
xor
inc
mov
xorb
push
jecxz
test
out
push
dec
outsb
gs
aas
test
clc
or
cmpsb
pop
movl
sbb
aam
out
sub
leave
rcl
lret
scas
les
and
mov
sub
repnz
mov
push
mov
mov
jnp
pop
push
loop
das
lea
test
pusha
orb
into
hlt
es
xchg
jge
addr16
mov
js
cmc
pop
lds
cli
push
or
xchg
cmc
pop
jo
sub
test
in
arpl
aad
add
adc
cli
adc
loop
mov
movsb
aaa
adc
dec
pusha
icebp
dec
shll
shl
or
test
ljmp
fsubrl
loope
push
add
out
imul
sbb
pop
push
cs
jns
sahf
std
xchg
es
icebp
inc
out
mov
cmp
xchg
mov
mov
add
aas
push
out
push
push
pop
into
xor
ds
add
cmp
ja
in
test
pop
jp
aaa
dec
shll
mov
call
push
push
lret
cltd
jmp
imul
and
std
xchg
jnp
je
adc
mov
int
and
je
xchg
insb
cmp
and
arpl
xor
lahf
test
ss
mov
sub
mov
lret
inc
and
adc
pop
push
adc
stos
int3
sub
popf
arpl
push
lahf
scas
and
cmp
xor
adc
stos
test
in
pusha
sbb
gs
adc
jmp
sub
aam
push
inc
and
outsl
inc
jecxz
jb
lcall
fwait
add
adc
mov
sbb
cmp
sarl
inc
jnp
cmp
out
xchg
aas
sub
jo
or
cmc
test
repz
pop
out
outsl
les
rolb
in
rorb
xchg
ret
add
mov
jno
iret
in
shll
jge
in
or
imul
dec
fsts
call
dec
scas
mov
lods
sub
mov
jl
jo
xor
mov
cmp
add
sub
adc
insb
mov
andl
or
shrl
outsb
das
inc
lret
jmp
idivl
int3
outsb
dec
cmp
pusha
or
jbe
mov
in
repz
nop
jb
push
lods
nop
xor
push
lret
out
test
lret
adc
aad
xchg
jo
movsl
movsl
mov
aad
cli
inc
xchg
aaa
xor
cmpsb
ret
scas
jns
and
mov
pop
orb
sub
jl
sbb
pop
sbb
sbb
aaa
sub
gs
cmp
mov
js
fwait
ljmp
lret
inc
xor
dec
pop
sarl
push
imul
fwait
arpl
incb
xchg
push
add
sub
cmp
bound
xor
sti
and
cwtl
push
testb
sbb
out
pusha
add
aam
lock
cltd
movb
flds
lahf
inc
xchg
jg
sti
ss
add
movsl
xchg
pop
jnp
push
mov
adc
and
pusha
add
ss
outsl
or
out
xor
sub
div
xlat
jge
sub
or
rolb
xchg
mov
inc
ss
xor
and
pop
dec
mov
xchg
in
mov
pop
jns
sub
push
xchg
xor
std
lods
aad
add
xchg
loop
add
mov
scas
inc
sbb
lea
inc
jb
jmp
nop
mov
bound
xchg
lds
inc
ret
sub
std
out
xor
push
and
lcall
adcl
shll
lea
in
ss
jecxz
pop
sbb
cmpsl
stos
mov
pop
rolb
sub
add
outsl
xor
and
fisubrl
out
jg
xor
sbb
scas
push
sub
mov
mov
inc
lret
test
push
addr16
out
call
pop
dec
add
fs
mov
mov
aad
inc
in
inc
leave
arpl
inc
mov
inc
bound
inc
fs
sub
in
cmp
xchg
out
cmp
fnsave
jg
cltd
mov
lret
and
mov
sbb
aaa
mov
lea
jno
sti
pop
push
ja
jno
fxch
adc
pop
popa
nop
mov
sahf
js
mov
inc
lret
mov
pushf
jne
sar
mov
cmp
js
aad
adc
into
sub
and
in
sbbb
sbb
or
in
adc
mov
es
jg
cmp
fsub
shr
jp
sbbl
repz
fs
mov
push
mov
out
into
sbb
jg
add
dec
cmp
mov
scas
sbb
adc
jle
inc
daa
fdivrs
enter
aam
xchg
dec
and
aam
int
adc
les
jl
cs
clc
loop
push
dec
pop
inc
repnz
push
mov
test
inc
insb
loop
push
cmc
push
push
cwtl
mov
psllw
pop
push
jae
in
jbe
pop
fdivl
shll
daa
shrl
dec
addb
xchg
subb
cwtl
inc
cmpb
xchg
jno
enter
and
shrb
ss
sbb
test
js
mov
ja
cmp
stos
ret
fwait
pop
aam
sub
out
push
cmp
xchg
es
sbb
sub
mov
mov
movsb
mov
in
shrl
test
dec
xchg
sbb
fdivrs
movsl
fdivrs
mov
fldenv
cmp
sub
push
cmpsb
jge
push
mov
ja
call
inc
leave
xchg
bound
mov
push
les
cmp
or
inc
mov
mul
or
scas
jmp
jecxz
outsl
sarb
mov
pop
xchg
jb
pop
into
push
bound
divl
iret
and
and
sbb
cmp
inc
rcl
cmp
les
inc
bnd
ds
xor
les
test
loope
scas
mov
stos
shlb
lret
xor
imul
pop
popa
mov
cli
push
test
inc
incb
mov
dec
lds
pushl
xor
arpl
pushf
dec
ret
loopne
mov
xchg
faddl
aad
xchg
imul
aas
movsb
movl
push
mov
xlat
adc
in
gs
xchg
mov
jmp
js
and
unpckhps
add
mov
pop
fstpl
pop
sbb
mov
int3
mov
jae
enter
mov
outsb
lea
or
hlt
xabort
bound
fcoms
and
stos
ljmp
pop
test
repz
mov
push
sbb
xor
pop
cmp
loopne
pop
ljmp
out
js
mov
and
adc
push
inc
test
mov
inc
mov
add
xchg
frstor
addl
insb
push
mov
and
xchg
jne
loopne
push
iret
in
jmp
call
jle
pop
ds
mov
sbb
and
fsubl
and
cmp
shll
fmul
jb
cmp
mov
repz
shrb
andb
bswap
and
inc
aad
pop
lahf
inc
cwtl
adc
shrd
rorb
shll
cs
xlat
push
push
sbb
fwait
in
in
cmp
xor
mov
jae
pop
cmp
imul
rcll
cmp
ss
and
sub
xchg
jns
push
mov
and
rcr
xchg
stc
mov
ret
mov
sbb
add
inc
dec
enter
xor
aam
gs
cmp
jnp
sub
dec
sahf
aas
jg
push
movsb
jge
add
inc
mov
inc
mov
pusha
push
cmpsb
add
inc
jmp
inc
add
or
loop
dec
sub
xchg
test
sub
sbb
ret
sysexit
add
mov
bound
push
daa
lahf
dec
mov
insb
into
data16
and
scas
insl
arpl
rorb
mulb
lods
mov
fistl
cmpsb
shll
out
loop
out
cmpsl
ss
adc
mov
in
mov
imul
mov
jge
mov
adc
cwtl
int
mov
pop
inc
insb
je
mov
in
dec
pop
addl
sti
stos
mov
pushl
dec
mov
mov
icebp
or
jle
ljmp
lahf
test
aas
loop
and
mov
push
ljmp
out
rcrl
cmpsl
inc
xor
aam
es
push
into
rcr
cmpsl
pop
jmp
outsb
cld
cmp
mov
fs
mov
popa
xchg
jo
orl
fnstcw
push
push
out
push
jge
mov
rcll
inc
jg
add
in
out
xor
lock
ja
lret
xchg
or
jno
sub
mov
xchg
aam
dec
push
call
aas
or
xchg
ljmp
out
dec
fimull
sub
bound
add
dec
xor
mov
pop
dec
add
push
mov
mov
xor
sbb
clc
xchg
lret
mov
frstor
bound
inc
ds
and
dec
lock
sbb
pop
mov
mov
mov
insl
jns
jns
int3
add
lock
cmpsl
pushf
test
loop
push
push
lds
adc
mov
arpl
std
ljmp
shll
lock
repz
add
dec
in
movsb
sbb
and
pop
orl
lds
lock
icebp
xchg
pop
cmc
stc
sub
push
add
push
sti
lret
mov
xor
rcrl
insb
int
add
sarb
push
xchg
mov
dec
mov
cmc
rdpmc
call
push
fcompl
std
adc
jecxz
loope
aad
mov
or
push
and
cwtl
adc
stos
imul
inc
divl
popa
sti
jmp
imul
je
dec
cmp
adc
filds
aas
xchg
pop
std
mov
loopne
jno
push
adc
mov
test
addr16
mov
add
mov
mov
aas
cmp
mov
ljmp
mov
aad
rolb
cmc
arpl
cwtl
lds
lret
out
rclb
mov
daa
adc
push
mov
mov
adc
inc
sarb
xlat
loope
imul
hlt
mov
sub
inc
xchg
clc
sub
mov
movsb
push
rolb
inc
dec
xor
add
inc
or
popf
outsl
sbb
insl
or
insb
stc
jo
gs
out
mov
push
imul
mov
lret
stos
cli
in
clc
mov
mov
jle
lods
mov
add
lcall
xor
call
popa
subb
lret
mov
push
sbb
mov
jae
and
sti
pop
call
lds
fnstcw
ficoms
xor
test
ja
jns
lods
mov
pop
inc
add
adc
push
scas
lods
cmp
sar
icebp
in
insl
xor
mov
inc
mov
fidivs
ret
push
insl
add
icebp
mov
sahf
sbb
and
pop
xchg
push
xor
cmp
fwait
sub
mov
mov
push
xor
jle,pn
out
xchg
pop
ljmp
jbe
cmp
dec
and
xor
xchg
pop
jo
bnd
mov
sub
or
les
pop
jp
push
adc
push
sbb
jae
dec
mov
iret
add
jnp
addb
or
les
push
or
fdivrs
data16
pop
inc
mov
mov
popa
hlt
mov
ss
jmp
push
in
fnstcw
cli
loope
je
mov
or
inc
popf
outsl
mov
ss
xchg
xor
mov
and
add
mov
sbb
pop
xchg
jp
adc
lret
in
jae
mov
pop
out
addb
ja
bound
dec
pop
test
icebp
mov
push
xchg
push
movsb
adc
or
cmpsb
cmp
jnp
std
mov
fsub
call
add
jns
leave
fs
int
movsb
adc
out
lods
jno
loopne
inc
push
sub
ljmp
xlat
out
inc
addl
test
and
push
hlt
jg
inc
hlt
in
pop
xchg
sub
shrl
repz
ljmpw
mov
aas
jno
jg
push
mov
ret
outsl
mov
inc
cltd
bound
std
jo
fcomi
mov
xchg
out
outsb
fwait
jae
sbb
mov
push
jbe
das
push
int
daa
add
pop
testb
das
cs
push
mov
jg
scas
dec
mov
add
adc
leave
lcall
lret
mov
cmp
adc
mov
ret
js
sti
ljmp
movsb
dec
mov
loope
push
push
test
into
test
inc
mov
add
fxch
pusha
popaw
push
cli
jbe
or
sub
pop
push
mov
and
loop
mov
push
push
call
ret
and
push
ja
cmp
rcll
push
dec
mov
mov
jb
std
outsl
das
roll
out
aam
jg
sar
dec
fists
mov
dec
sub
dec
push
sub
mov
jecxz
in
mov
or
mov
pop
fisubrl
push
mov
pop
dec
cld
je
fs
xchg
mov
pop
out
aad
sub
sub
scas
push
add
add
fcmovu
divb
push
hlt
push
or
jne
inc
cmpb
mov
data16
sub
and
sub
inc
jge
inc
loope
cld
ficoml
push
shll
lret
adc
aam
or
repz
lods
bound
outsb
hlt
insl
pop
loopne
pusha
inc
repz
movntps
ret
fnstenv
jbe
jmp
ljmp
dec
lret
dec
arpl
out
jbe
pop
in
cmp
pop
pop
std
rcrb
es
in
aam
adc
in
je
and
cmp
mov
mov
lret
in
aam
sbb
aad
shll
mov
imul
jp
xchg
stos
pop
or
or
push
lods
dec
xor
mov
hlt
bound
js
cmp
xor
lods
nop
lea
and
jnp
sbb
pop
push
inc
ss
cmp
out
mov
clc
sbb
jno
mov
inc
jne
pop
aam
hlt
pop
ret
filds
lods
add
mov
jle
add
add
mov
negl
xchg
jbe
hlt
scas
into
popf
aas
jl
ja
insl
loope
cmp
sti
je
cs
cltd
scas
outsl
mov
fldl
cmpsb
cli
out
inc
cmp
lahf
xchg
fs
sti
popf
and
fiaddl
push
fchs
xchg
sub
movsl
xor
insl
aad
bnd
in
enter
push
sbb
jecxz
cmp
loopne
pop
mov
mov
push
into
push
mov
imul
fiaddl
push
fucomi
fsts
cli
xchg
cmp
push
or
or
inc
dec
inc
jecxz
iret
adc
xchg
cmp
out
ficompl
dec
stos
icebp
sbb
ret
insb
mov
and
inc
mov
sbb
mov
mov
jnp
scas
jge
testb
inc
mov
insl
rcll
inc
lods
std
pop
inc
jl
xchg
pop
pop
fdivr
xlat
adc
and
xor
jmp
aaa
mov
jl
adc
and
cltd
movsl
call
pop
sbb
cmp
fdivrs
outsb
jge
add
bound
scas
adc
xchg
jae
arpl
icebp
mov
mov
les
icebp
jp
push
add
sahf
mov
xchg
jmp
inc
daa
sbb
mov
cli
and
cld
jp
sub
outsl
outsb
rorl
es
mov
lea
loopne
jns
add
jbe
sub
rolb
test
loope
mov
mov
pop
mov
dec
cmp
lods
add
shrl
push
imul
nop
sti
jne
dec
inc
sbb
adc
out
ljmp
jne
mov
aam
out
cmp
fcomip
add
push
out
lds
add
mov
in
mov
mov
jno
push
ja
dec
out
stos
andb
cmp
sbb
and
ja
test
mov
xor
or
xlat
and
cmp
in
dec
jbe
cld
imul
sub
fs
jno
in
adc
fdivs
popf
les
test
dec
pop
stos
insl
jecxz
test
enter
jns
xor
ret
lahf
jnp
sbb
pop
out
xchg
jle
aad
cmp
cmp
mov
xor
mov
mov
clc
shll
bound
xchg
adc
fistpll
test
or
push
fcos
mov
push
dec
mov
icebp
shll
dec
bound
dec
mov
insl
pop
adc
out
mov
popa
or
ret
push
jl
arpl
minps
pusha
arpl
dec
push
clc
mov
popf
xor
lods
ds
iret
test
pop
inc
dec
xorb
jle
fistpll
dec
cmp
dec
sti
mov
jmp
and
sub
sub
push
data16
xchg
cmc
sbb
jnp
ret
movsb
push
test
cli
dec
add
out
in
xchg
xchg
imul
sub
dec
mov
and
dec
and
pop
or
aam
jl
iret
cmp
test
cmc
xchg
outsl
cmp
push
pop
ret
lds
fcomps
pop
or
jno
rorl
in
outsl
xchg
insb
xchg
sub
xor
mov
mov
and
mov
and
loope
pop
pop
dec
cmc
mov
out
mov
dec
xchg
shl
jb
mov
mov
lock
cli
jns
jp
inc
jmp
outsb
sub
and
sti
push
pop
mov
lds
subl
and
push
jnp
mov
test
sub
cmpsb
xchg
cwtl
cmp
xchg
cmp
imul
mov
and
aam
xchg
ljmp
stos
or
cmc
mov
adc
push
insl
xchg
mov
call
les
dec
loop
add
outsl
aad
fistl
cli
cmpsb
rcl
push
clc
xor
adc
mov
ret
into
scas
aas
xor
mov
cmpsl
push
jb,pt
mov
sub
adc
scas
out
imul
mov
inc
xor
add
aad
loop
pusha
sub
sub
push
test
push
out
inc
cmp
lahf
jbe
mov
xchg
sahf
adc
mov
jp
or
jmp
mov
pop
or
mov
pop
stc
bound
loope
and
mov
mov
ret
adc
lret
pop
mov
sti
lahf
xchg
inc
jne
push
dec
mov
test
xchg
stc
outsb
mov
xchg
mov
adc
fs
sbb
sbb
sbb
idivb
mov
push
push
out
jp
sbb
adc
mov
pop
jmp
push
or
xchg
lea
lds
incl
sbb
push
cwtl
stos
xchg
mov
adc
mov
jns
mov
xlat
cld
inc
sub
cmc
mov
dec
inc
das
fnstcw
cmp
xor
or
add
adcl
jmp
push
movl
xchg
jecxz
mov
test
repnz
dec
iret
fsubrs
mov
push
add
add
push
sub
aad
sbb
push
ja
xchg
test
scas
clc
insb
mov
les
iret
sub
mov
jae
rcrb
leave
mov
js
mov
scas
mov
iret
lds
iret
adc
add
pop
jns
mov
or
mov
pop
sbb
ds
stc
out
popl
ds
add
xor
or
dec
sbb
or
iret
xor
mov
pop
push
inc
xchg
inc
xchg
and
xchg
dec
cmp
pop
test
mov
add
inc
stos
cmpsl
mov
mov
or
add
int
sub
aad
sub
pop
pop
lahf
push
imul
push
pushf
stc
mov
xchg
test
jae
jg
sbb
popf
addr16
aaa
pushl
cs
cmp
stos
les
outsl
lcall
cmp
nop
ret
imul
out
dec
cmp
cmp
movsb
dec
repnz
loop
in
js
jmp
fst
fnstcw
mov
jb
je
push
jecxz
jno
inc
adc
js
ss
ja
movsl
adc
or
cld
test
adc
shll
push
aaa
xor
pop
add
insl
out
aas
out
mov
cmp
gs
cmpsl
jns
add
sbb
in
incb
adc
fnsave
sbb
xor
mov
in
mov
std
enter
jne
or
jno
clc
cmp
pusha
sub
lods
mov
pop
clc
test
or
cmp
adc
adc
dec
jmp
inc
pop
sbb
sub
test
pushf
cmp
xor
push
pop
enter
je
lret
adc
pop
cmpsb
scas
stos
fstpl
dec
arpl
push
xor
fsubl
cmc
mov
test
rorb
inc
sub
mov
cmp
cwtl
inc
fdivr
jl
jno
mov
dec
std
std
xchg
mov
xor
push
pop
xchg
cmp
or
lret
push
jge
sub
test
sbb
cmp
pop
xchg
dec
pop
lock
ror
pop
lcall
mov
int3
pop
push
mov
xchg
mov
pop
add
add
call
jmp
cwtl
cmp
icebp
adcl
dec
push
xlat
fldcw
rcr
ret
out
adc
push
inc
sub
xchg
pop
cmc
in
jge
xchg
xor
rcrl
aas
adc
je
xchg
xchg
mov
iret
ds
ja
sub
cltd
loope
sub
ds
rol
adc
xchg
int
mov
push
aas
inc
scas
xchg
sub
test
popf
adc
aas
xor
xbegin
insb
inc
ficomps
dec
mov
sbb
loope
push
mul
xor
inc
sbb
inc
cltd
scas
test
pop
cmpsb
addr16
repnz
xlat
fistpll
ja
or
xchg
mov
ror
xor
sbb
xor
pop
push
sahf
jmp
add
push
sarb
outsl
orb
mov
mov
jno
or
jns
jbe
aad
xchg
or
movsb
pop
jb
rcr
fcmove
pop
fildl
sarl
mov
push
and
mov
xor
inc
mov
cmp
xchg
adc
sbbb
adc
dec
stos
jecxz
subb
gs
jmp
pushf
and
push
orb
pop
add
jge
je
dec
jb
xchg
test
fcompl
mov
inc
movsb
jge
mov
fs
push
test
int
inc
add
int
loop
sbb
aam
adc
xlat
sub
xchg
mov
push
lahf
adc
xchg
out
in
mov
in
pop
mov
and
fidivs
or
sub
clc
xchg
or
jbe
outsb
or
jmp
mov
arpl
test
shlb
adc
cmp
and
clc
push
inc
cmpsb
dec
stos
fmull
jnp
push
stos
movsb
and
pop
cltd
test
les
or
es
scas
sub
sub
sahf
pop
test
mov
lock
in
dec
cld
sti
lret
sahf
push
movsb
jne
lret
mov
cmpsb
mov
push
add
xor
or
outsl
lahf
mov
or
xchg
sbb
and
cmpsl
stos
aam
sti
lock
adc
mov
jecxz
mov
jle
out
xchg
mov
fbstp
or
adc
and
mov
ror
insb
leave
sbb
inc
ljmp
dec
pop
imul
push
or
arpl
mov
icebp
adc
push
adc
mov
mov
bound
push
loopne
repz
and
aaa
jmp
out
inc
push
pop
jns
pop
xchg
jge
jp
or
push
mov
in
cmp
xchg
hlt
cmc
pusha
scas
movsb
jne
ss
mov
outsl
int3
jno
and
xor
mov
adc
nop
rorl
xlat
sub
ljmp
xor
cmp
dec
in
imul
mov
cmc
shlb
push
xchg
xchg
popf
mov
cli
in
dec
sub
inc
mov
add
push
push
and
int3
daa
adc
sti
dec
xchg
sub
mov
das
pusha
and
push
sub
add
test
js
fcmovne
dec
scas
repnz
fucomp
mov
sbb
ror
std
mov
push
test
fwait
pop
shll
fwait
dec
adc
push
fisttps
pop
leave
dec
xchg
xchg
scas
ss
gs
jge
jae
dec
push
mov
lods
stc
or
pop
mov
aad
dec
xchg
xchg
lahf
fcoml
movsb
out
jmp
jg
dec
xor
mov
fldl
sbb
les
adc
cmp
loopne
loopne
mov
shll
lods
daa
aad
and
daa
iret
xor
imul
or
dec
dec
mov
push
outsl
mov
push
cmpsb
xor
repnz
mov
fsubrs
sbb
inc
test
addr16
jno
dec
mov
leave
inc
push
insb
cmp
push
xchg
push
or
popf
stos
inc
test
pop
insl
scas
mov
movsl
or
mov
aas
dec
jge
xchg
dec
and
xchg
dec
out
sub
push
jno
ja
push
cmp
mov
inc
aaa
test
cmp
iret
xchg
and
not
pop
imul
jae
pop
mov
jg
subb
mov
dec
push
cmp
xchg
sbb
insb
lea
mov
xchg
and
mov
jle
fwait
mov
std
in
mov
movsb
inc
xchg
lcall
rcll
add
add
mov
popf
shr
pop
aas
stos
xor
loop
sub
adc
cmp
mov
xchg
pop
pop
mov
push
sub
in
mov
push
push
jbe
sbb
loop
pop
es
inc
mov
mov
pop
inc
iret
pop
call
xor
leave
jne
test
lret
gs
inc
jl
inc
xor
sbb
jmp
and
or
jl
out
and
ficoml
mov
or
jne
push
pop
roll
call
nop
cmc
lret
bound
sbb
pop
rclb
iret
sets
loope
jmp
cmp
test
adc
stc
hlt
ss
popf
movsb
out
repnz
sbb
aaa
dec
fnstenv
int3
lock
or
mov
lret
rclb
popf
mov
inc
pavgw
mov
pusha
jp
xor
xor
pushf
jg
jecxz
dec
pop
dec
test
push
cmp
int
cld
sahf
nop
push
js
add
cmp
aad
loope
cmp
fs
sbb
cmp
mov
test
lret
add
add
add
dec
fcom
stos
out
push
or
loop
andl
mov
sbb
leave
and
jnp
rorl
test
pop
sbb
lret
testb
lahf
aaa
and
hlt
cs
jne
int
lea
dec
shll
sub
js
mov
push
adc
in
mov
cmpsb
cmp
and
mov
lea
mov
mov
mov
sbb
mov
lcall
mov
nop
arpl
jns
and
hlt
cmpsb
add
into
mov
rcl
mov
xlat
insb
cltd
dec
fdivl
push
jbe
pusha
fstpl
push
mov
stos
lcall
ret
sahf
mov
mov
inc
pop
mov
mov
cwtl
xchg
ja
jecxz
jp
sbb
lods
stos
xor
push
sbb
lcall
fxch
pop
or
xor
in
cmp
jmp
jmp
mov
pop
es
fildll
jae
dec
inc
bound
and
int
dec
jo
aam
cmp
add
jo
pushf
in
leave
cmp
popf
pop
sub
fistps
xor
jns
cmp
push
insl
insb
dec
sbb
je
cltd
and
divl
cld
pop
jne
ljmp
in
sub
rolb
push
out
fwait
idivb
repz
in
or
sbb
in
sbb
in
cmpsb
inc
test
mov
das
call
mov
adc
or
fs
into
mov
scas
jnp
mov
fcompl
push
stos
repnz
xchg
imul
inc
inc
push
fs
jae
adc
push
frstor
dec
ret
cmp
int3
jp
out
clc
push
ja
sub
push
out
add
pop
add
test
jno
jns
ljmp
test
jb
mov
aam
adc
jo
lret
outsl
jne
lock
jbe
inc
add
push
cli
xchg
movsb
inc
sub
mov
push
setne
repz
xchg
sahf
mov
push
mov
shlb
sbbl
mov
fsubs
outsl
jl
insl
aad
je
fdivs
push
mov
scas
xlat
std
xchg
sbb
sahf
jl
idivl
inc
push
jmp
adc
es
jmp
out
inc
jns
test
pop
or
add
mov
inc
push
dec
adc
pop
addl
dec
out
sbb
and
lea
or
ds
ret
cmc
xchg
mov
rorl
mov
mov
sti
repz
sbb
aas
out
mov
inc
rcrb
out
inc
adc
cmc
pop
jge
hlt
rorb
cmpsb
stc
scas
jmp
ss
call
inc
or
xchg
and
mov
xchg
sub
pop
shll
or
and
loop
in
push
stc
clc
test
jecxz
adc
pusha
jle
ja
push
imul
xchg
jns
mov
fisttpll
movsl
adc
adc
mov
outsb
aaa
inc
rcr
cmpsl
aaa
mov
and
jne
jnp
xlat
cwtl
add
and
leave
or
sbb
adc
cmp
mov
add
out
xchg
test
mov
mov
inc
cmp
fwait
lret
ficomps
xchg
inc
sub
push
adc
repz
jecxz
dec
fiaddl
adc
xorb
lea
xchg
and
jl
test
cmpb
rcrl
test
push
insl
inc
enter
in
cmp
outsb
cld
lret
iret
insb
je
inc
incb
mov
add
dec
xor
mov
call
cmp
ljmp
insb
dec
pop
mov
fistps
in
mov
jl
fwait
call
sbb
sub
fdivs
data16
test
arpl
push
push
push
gs
jle
jecxz
in
stos
mov
push
pop
aam
adc
xor
fstps
popa
cmpsb
das
sbb
jno
insb
cmpsb
mov
pop
xlat
nop
dec
xor
daa
fildl
outsb
and
mov
je
and
mov
fnsave
clc
repnz
push
mov
out
jo
mov
sbb
addb
or
out
jns
inc
xor
or
cmpsl
pop
pop
sar
push
jecxz
mov
jg
adcl
cltd
hlt
lcall
outsb
stos
push
lock
pop
icebp
iret
xchg
testb
lret
lcall
lahf
pop
stos
ljmp
js
aam
adc
shrl
dec
mov
daa
push
pushf
fnstsw
jmp
aad
lcall
and
mov
xlat
cmpsl
cmp
bound
leave
lcall
aad
dec
inc
add
dec
aaa
sub
push
xabort
mov
and
icebp
test
stos
inc
cmp
dec
add
push
sti
mov
clc
lretw
and
mov
mov
dec
lcall
rclb
jge
lods
arpl
cmpsb
push
iret
popa
push
xor
ljmp
xlat
jmp
add
push
jmp
sbb
fcomps
xchg
sbb
dec
mov
cld
adc
dec
jecxz
push
ret
xor
mov
add
rclb
adc
push
aad
mov
inc
out
push
test
cmpsb
stos
stos
fidivrl
iret
sbb
std
jo
or
in
mov
pop
dec
lea
cltd
xor
into
push
sarl
xchg
imul
mov
cmp
sbb
out
aam
adc
mov
ret
test
mov
out
les
push
arpl
in
rorl
jb
mov
jg
test
jge
inc
mov
addr16
pop
or
bound
xchg
xchg
cmp
negl
sbb
xchg
scas
palignr
push
addr16
mov
aas
fcoml
lods
cwtl
out
out
fwait
xchg
cs
or
mov
je
push
test
nop
xchg
rorb
mov
int
ror
ret
mov
push
xchg
xor
movsb
jo
push
jg
jecxz
rcr
dec
push
clts
push
pop
loop
mov
adcl
dec
movsl
and
cmpsb
out
in
mov
mov
out
push
lea
out
xchg
enter
insb
clc
outsl
and
fidivrl
fwait
loope
cmpsb
pushf
fwait
aad
cmpsb
xchg
ret
es
sbb
mov
push
es
mov
int
nop
cmpsl
jnp
int
gs
aas
fwait
inc
lahf
or
adc
xchg
xor
out
outsb
sub
cmpsl
imul
in
jl
mov
orb
cmc
jbe
xor
jno
ds
or
mov
inc
pop
xlat
iret
inc
cmpl
sarb
cltd
push
jle
out
rcrl
outsb
or
jb
or
push
ficoml
push
pop
adc
nop
mov
xchg
and
mov
dec
movsb
sbb
mov
popa
into
xor
insb
aam
in
mov
test
shlb
lahf
div
call
decl
jg
or
sbb
divl
shll
sbb
add
fldenv
or
aam
xor
jbe
aam
xchg
je
call
inc
inc
dec
inc
sub
mov
push
jb
mov
call
xchg
push
push
adc
mov
fnsave
leave
xor
push
pop
xchg
and
fcomps
sbb
mov
add
andl
cmp
jle
pop
mov
push
popf
xor
das
pop
cld
loop
jecxz
out
outsb
pop
imul
stc
mov
out
add
xor
push
jbe
cmp
test
cmpsl
and
push
dec
or
pop
push
and
into
repnz
loop
cmc
mov
sub
xor
inc
repz
data16
xlat
movsb
cld
iret
jnp
or
clc
sub
sbb
cmpl
adc
and
mov
add
aas
and
cli
xorl
ret
arpl
xchg
aad
mov
dec
fwait
test
xchg
pop
push
pop
hlt
cmc
test
cmp
mov
pop
shrl
xchg
clc
add
push
sbb
lret
lds
inc
subb
pop
js
shlb
shlb
int
stos
sbb
xchg
es
stos
ret
adc
adc
jge
imul
mov
test
ror
inc
out
orb
inc
notb
mov
dec
pop
testb
mov
repnz
cmp
das
jno
xchg
std
push
fwait
jmp
cld
sbb
out
test
push
or
inc
scas
pop
mov
and
xor
push
adc
or
je
dec
out
xchg
dec
and
lea
mov
sbb
jae
test
pop
xor
ret
cmp
jle
movl
in
enter
stc
fadd
inc
je
in
jp
and
fstl
pop
fcmovb
pop
inc
push
push
out
fildll
sahf
adc
notb
mov
outsl
fstpt
daa
pop
loop
cli
or
jae
xor
idiv
mov
cmpsl
clc
xchg
mov
mov
mov
mov
out
pop
loop
adc
mov
aas
lea
add
mov
imul
imul
pop
hlt
push
cli
and
jg
mov
enter
stos
movl
inc
add
in
addl
or
jl
lods
sbb
push
lret
into
adc
mov
inc
push
mov
mov
mov
fwait
xorb
ss
push
imul
data16
fldl2e
lret
pop
add
das
push
clc
mov
test
jecxz
jl
fdiv
addr16
jecxz
adc
cwtl
xlat
adc
data16
push
cmpsl
mov
cmp
xor
call
lods
or
pop
in
jns
pushl
pop
aas
jg
dec
lahf
stos
je
ljmp
outsb
jb
sahf
pop
stos
sar
pop
jmp
inc
mov
pop
jae
pusha
cltd
mov
cmp
push
ret
add
cmp
push
daa
popf
pop
imull
imul
mov
fcom
add
add
fiaddl
and
mov
sbb
and
shr
addr16
in
sbb
pusha
sbb
ja
aas
ret
xor
mov
pop
sub
inc
inc
mov
scas
js
mov
cmpsl
xchg
cmp
push
add
stos
mov
inc
push
icebp
inc
mov
mov
movsb
nop
mov
test
in
lods
pop
push
mov
sub
dec
xchg
aas
xchg
insb
mov
dec
jno
dec
sub
imul
stos
cwtl
dec
mov
ficoms
ret
xchg
xchg
mov
aad
xor
out
imull
mov
adc
lds
xor
xchg
rcr
notl
fwait
xchg
jae
sub
jbe
adcb
mov
daa
mov
jg
mov
shlb
clc
fldenv
arpl
andps
lods
ljmp
sub
mov
loopne
aaa
add
xor
pop
gs
jg
mov
mov
push
out
insb
push
pushf
clc
push
xchg
mov
leave
aaa
out
lcall
add
lds
ljmp
iret
cwtl
mov
test
popa
jle
inc
cmp
mull
xchg
xchg
xor
cmpsl
xor
js
jp
iret
ret
xchg
leave
jp
sbb
js
jge
int
pop
xor
mov
out
scas
mov
out
ss
fisubrl
insl
ja
aas
dec
ret
int
inc
fwait
cmp
push
cli
lods
outsl
mov
or
mov
iret
sti
push
mov
loop
iret
cmpsb
test
fwait
dec
jo
in
das
sbb
pop
mov
push
or
or
push
out
mov
mov
lret
mov
xor
cmp
jge
mov
lds
out
outsb
nop
mov
fcmove
mov
add
dec
adc
pusha
inc
push
rorb
ljmp
cs
pop
jg
hlt
mov
shll
stos
dec
sub
push
adc
test
fwait
pop
push
sbb
pop
mov
orl
sub
push
push
addr16
jge
cmp
lret
and
test
push
pop
add
out
inc
dec
nop
pop
xchg
test
outsl
xchg
push
mov
xchg
cmp
movsl
int3
pop
and
xor
inc
movsb
jno
pop
and
ud2
imul
add
push
popf
aam
ljmp
pop
lock
inc
dec
lods
insb
adc
das
jnp
dec
fbstp
jne
adc
jns
or
push
or
stc
pop
jo
dec
mov
insb
dec
cmp
jne
leave
nop
inc
int
mov
mov
mov
dec
or
mov
jne
cltd
es
inc
xor
mov
jmp
inc
lods
sub
dec
sbb
and
std
inc
inc
fwait
pusha
inc
mov
push
hlt
scas
stc
insb
mov
lret
pop
in
sub
inc
mov
stc
daa
faddp
add
arpl
aad
fucomp
push
mov
mov
mov
mov
xchg
adc
inc
pushf
jne
movsl
test
sbb
idivb
mov
cld
xchg
jb
fstl
jmp
pop
out
sahf
xchg
dec
dec
pop
jl
fisttpl
lret
stos
test
nop
jmp
lods
push
mov
in
adc
lret
mov
push
jns
test
arpl
inc
xchg
and
aas
loop
xchg
icebp
push
xchg
getsec
mov
jnp
mov
ds
xchg
in
lds
adc
imul
std
mov
add
movsb
mov
aad
movsb
lret
pop
imul
mov
sbb
xor
loopne
and
mov
mov
mov
mov
xor
sbb
sub
int3
lods
ret
adc
pop
add
fldl
xchg
xor
lret
in
rcrl
lea
and
add
lods
mov
xchg
iret
ret
mov
dec
cmpsb
bound
jp
jo
jg
pop
scas
movsl
ljmp
rol
or
and
lret
dec
pop
pushf
mov
ds
pop
out
imul
enter
fcoms
mov
fiaddl
inc
sbb
adc
test
pop
inc
fsubs
scas
xor
mov
and
ret
lds
cmpsl
jmp
punpckldq
std
vmptrld
iret
sub
shrb
xlat
fnstsw
ljmp
in
xor
push
aaa
ljmp
int3
lods
aaa
jbe
popa
popf
out
cmp
fldenv
add
xchg
mov
js
ss
imul
lea
xor
mov
dec
rorl
mov
ds
mov
ds
xor
sub
jle
cmpsl
adc
outsb
push
dec
push
jp
test
jl
cs
iret
and
ret
jle
dec
xchg
adc
pop
icebp
mov
testb
xchg
push
into
or
mov
cli
mov
leave
xchg
call
cli
add
loop
mov
push
dec
lret
cmp
push
inc
mov
mov
ror
fisttpl
fadds
jg
mov
xchg
pushf
dec
jb
cmc
movsl
cmp
push
mov
xchg
sub
in
data16
jecxz
fcompl
xor
ds
add
cwtl
fstpt
stos
sahf
repz
mov
sub
pop
imul
cs
mov
insl
es
xor
xchg
test
push
cs
repnz
pop
or
lret
gs
push
mov
cmc
push
push
les
enter
call
popa
add
and
mov
fmuls
push
pop
cld
mov
push
fistl
xchg
iret
inc
jge
in
sbb
mov
cs
int3
andb
lods
sbb
popf
shr
pop
in
test
stos
xchg
movsl
nop
ror
sbb
pop
pusha
inc
call
xlat
xor
xchg
js
dec
in
out
xor
mov
out
lcall
push
test
xchg
ret
dec
fcoml
leave
pop
icebp
je
adc
cmpsb
hlt
fisttps
arpl
sub
inc
je
insb
ret
mov
or
popf
mov
lods
loopne
jnp
bound
jae
mulb
popa
jecxz
dec
mov
or
sub
or
orl
inc
cmp
inc
lds
sti
clc
dec
aad
das
mov
mov
add
ds
lods
inc
sub
cmp
push
test
cs
pop
nop
iret
and
int3
push
xlat
jb
mov
orb
shrb
lahf
lret
ret
into
pop
jecxz
cmp
xchg
pop
stc
push
or
scas
pop
mov
jge
and
cmpsb
push
idivl
xor
jp
sub
mov
sub
xorl
mov
mov
lret
outsl
add
adc
adc
sub
jae
adc
mov
mov
mov
xor
out
lock
xor
ret
in
push
test
and
push
aaa
jbe
lret
es
cld
out
adc
inc
cmpl
cmp
ss
sbb
sub
mulb
or
push
add
mov
xchg
xchg
xor
adc
dec
pushf
cli
add
mov
pop
push
or
mov
sbb
fs
fldenv
gs
pusha
es
pop
subb
xor
aad
pop
pop
mov
jns
out
pop
test
xor
shll
jp
fildl
das
out
into
in
jb
out
icebp
xchg
insb
repz
pop
xchg
mov
and
sub
addb
or
or
xchg
sbb
and
shlb
cli
int3
sbb
pop
push
test
mov
add
out
mov
dec
std
in
popa
out
inc
pop
inc
cmc
scas
push
push
mov
ret
xchg
cld
push
mov
repz
xor
shrl
mov
and
pop
cs
pop
test
pusha
and
or
xchg
mov
pop
xor
cmp
and
cmpsl
jae
jbe
scas
leave
or
fwait
arpl
enter
sub
mov
ljmpw
test
inc
jecxz
sub
dec
mov
mov
ja
jg
mov
inc
add
loopne
int3
xchg
jmp
outsb
xchg
fnsave
lcall
jno
leave
or
daa
add
add
cwtl
mov
jns
lahf
xlat
ret
mov
je
jle
fisubrs
repz
insb
out
mov
cmc
dec
push
push
inc
push
mov
mov
inc
mov
or
stos
jecxz
cmpl
dec
mov
movsb
aas
movsl
xchg
sub
and
ljmp
adc
mov
mov
out
inc
jae
test
outsb
mov
inc
cld
cmpsl
mov
inc
inc
cwtl
aas
xlat
pop
cmp
pop
cmp
int
shll
xor
dec
in
ss
lods
adc
das
xor
push
movsb
adc
cs
andb
xor
test
push
and
fadd
pop
or
test
or
jb
in
mov
mov
fdivp
push
jne
bound
xchg
stos
mov
popf
and
inc
dec
test
and
or
int
jns
xlat
pop
inc
mov
shr
mov
sti
adc
jmp
cmp
cmpsl
outsl
sub
push
mov
push
mov
outsl
pushf
pop
mov
xorl
xor
add
adc
adc
enter
bts
psadbw
mov
push
inc
rcll
push
push
out
inc
js
push
cwtl
sub
and
ja
es
cwtl
icebp
cli
movsb
xor
cltd
loope
pop
insb
repnz
leave
jl
out
mov
mov
jne
add
inc
int3
sahf
xor
scas
sbb
jmp
push
js
scas
inc
dec
in
stos
loopne
test
xor
testl
push
push
pop
fs
int
mov
inc
inc
sub
jno
imul
ret
push
cmp
push
stc
out
mov
dec
cmp
shll
push
or
xchg
jb
lahf
fidivl
sbb
leave
arpl
icebp
adc
dec
iret
lock
into
push
pushf
adc
gs
out
mov
rcll
push
popf
outsb
xchg
mov
push
jmp
arpl
push
lds
and
or
and
or
popf
in
ja
xchg
hlt
mov
mov
in
pop
test
popf
sub
xor
mov
add
fwait
ja
addr16
sub
pop
pushf
pop
push
dec
mov
clc
and
sbb
gs
mov
out
inc
mov
and
jns
push
push
lods
mov
xlat
pop
add
mov
loope
outsl
dec
dec
adc
and
xorb
iret
sbb
roll
sti
pop
jp
jl
push
loop
cmp
sub
adc
bound
xchg
std
jg
jnp
shrb
int
mov
fmuls
in
adc
fnstcw
xor
flds
push
pop
sbb
mov
cmc
jno
ljmp
jae
push
es
icebp
sbb
push
sbb
mov
or
mov
sub
lds
add
adc
dec
imul
mov
ljmp
clc
or
jo
mov
mov
push
les
movsl
xlat
mov
cmp
int
aas
and
dec
stc
jle
int
lds
add
xorb
jns
les
test
vaddps
add
xchg
mov
sub
adc
scas
shlb
add
push
inc
pop
cmp
aaa
sbb
mov
push
jge
cmp
jbe
xchg
int3
popa
push
push
test
stos
or
mov
jbe
mov
or
pop
xchg
lret
cmpsl
pop
into
xchg
mov
js
mov
xchg
frstor
xor
pusha
jb
add
sbb
fiaddl
xchg
mov
mov
cmpl
shrl
or
sub
jnp
jo
insb
fs
inc
mov
popa
lock
xchg
fstpt
cmp
sub
cld
mov
dec
mov
inc
lds
or
jp
sub
test
es
adc
jb
sbb
or
jae
xchg
push
and
push
pop
xchg
enter
cli
jl
stos
add
aam
adc
xor
sub
jno
xlat
sbb
out
mov
test
inc
xchg
xor
loop
add
daa
mov
stc
push
pusha
or
pop
inc
sahf
in
in
hlt
push
jp
xchg
pop
clc
lods
push
xor
add
mov
mov
adc
xor
aaa
push
jb
push
jle
test
je
mov
jb
insb
mov
into
push
test
shrl
jbe
outsb
sbb
adc
and
pop
push
ficompl
call
push
fwait
and
mov
cmp
insb
cmp
push
adc
cmp
dec
sbb
cmp
cwtl
jp
mov
jne
lea
sar
lock
stc
int3
je
das
and
push
xchg
stos
mov
inc
jmp
push
insl
cld
cltd
pop
loope
add
popa
stos
and
test
mov
jl
jmp
test
jns
mov
inc
xchg
fwait
and
jne
mov
mov
movsb
pusha
sbb
fs
mov
insl
jecxz
mov
addr16
and
jno
jo
or
out
cmp
loop
aam
orl
push
adc
sub
test
sbb
dec
je
xchg
mov
fcmovu
jnp
sbb
sbb
fidivrs
bound
sub
mov
sbb
fwait
pop
sub
jecxz
dec
in
lods
add
in
pusha
mov
jnp
jecxz
scas
test
roll
addl
cmp
adc
mov
or
imul
xchg
jmp
cmp
aad
test
adc
rolb
xchg
dec
pop
das
sti
add
lret
jp
hlt
jge
adc
pop
cltd
jg
fwait
xlat
adc
mov
xchg
test
dec
imul
cli
inc
data16
sub
mov
adc
sub
lret
loopne
jb
mov
and
xchg
call
dec
and
and
js
add
inc
xor
mov
iret
sbb
shrb
movd
push
lods
iret
in
push
pop
rcrb
lcall
pop
cmp
lock
addb
pop
adcb
jo
xchg
xchg
iret
jl
xchg
int3
pop
test
adcb
pop
nop
ja
and
in
addr16
jae
sub
inc
movsl
shlb
add
mov
and
mov
clc
inc
jp
and
push
loopne
jmp
add
or
rcll
cltd
sti
inc
cmp
jns
dec
sbb
xchg
mov
pop
cmp
mov
scas
ja
cwtl
adc
shl
mov
lock
and
in
add
pop
sub
cwtl
iret
inc
sahf
dec
aam
adc
js
or
mov
cs
sub
sub
rclb
ja
inc
ss
or
or
insb
jge
ret
ja
dec
mov
imul
jmp
or
pop
pop
cmpsb
or
inc
in
or
push
repz
out
mov
lods
insb
mov
push
sahf
add
push
popa
es
jmp
dec
fcmovne
dec
testl
repz
and
insb
add
mov
addr16
xor
daa
into
out
into
mov
jge
jl
aad
sbb
aaa
into
push
aad
add
insb
lods
das
lret
rcll
jp
add
testb
dec
mov
add
addl
test
pop
cmp
adc
pop
dec
sub
mov
cwtl
mov
loopne,pn
addl
testb
sbb
es
cli
aam
push
movsl
lods
in
scas
adc
push
test
bound
sub
jl,pn
aas
ret
int
pusha
or
sti
outsb
pswapd
adc
in
testl
ret
int
loope
mov
leave
stc
out
dec
fists
or
add
jns
push
jmp
adc
push
loope
xchg
jb
jne
int
sbb
lret
cmpsb
push
cs
and
sbb
pop
mov
loop
int3
dec
mov
jno
fdivrp
jg
ficoms
mov
test
cmp
pop
popa
xor
pop
cmp
scas
pushf
push
in
js
lcall
fists
xor
cmp
adc
lds
add
pop
mov
inc
sbb
push
aad
aad
push
xor
call
push
push
dec
xor
push
stc
dec
sub
imul
loop
lods
sbb
push
cs
sarb
xchg
or
push
mov
les
lods
cmpl
or
mov
add
and
push
sarl
sbb
pop
mov
pop
add
lea
pop
mov
bound
sbb
jg
ffreep
call
and
pop
inc
jnp
repnz
in
or
es
jmp
fdivrl
mov
stos
add
dec
popa
cmp
pushf
in
mov
in
inc
xor
fstps
xor
sbb
aaa
jmp
sub
mov
mov
mov
sub
pop
pop
pop
aad
popf
mov
sbb
jmp
sub
cmpsl
xchg
add
cmpsl
sbb
call
fldenv
cmp
mov
push
pop
add
in
pusha
mov
punpckldq
movsb
add
lret
cwtl
xor
pop
sbb
jns
addr16
inc
call
push
imul
adc
mov
leave
inc
dec
ds
mov
in
sub
stos
sbb
jae
test
cmp
sub
or
lret
xchg
sbb
repz
mov
jp
mov
push
imull
test
push
xor
mov
push
lret
and
xlat
mov
cmc
inc
pop
pop
add
stos
imul
and
dec
push
arpl
mov
cltd
iret
or
mov
mov
inc
jl
inc
scas
rolb
lret
push
lahf
mov
inc
je
pusha
mov
inc
hlt
sub
jne
gs
movsb
mov
jo
sbb
pop
sub
jle
pop
add
push
int3
ficompl
xchg
outsl
sbb
cmp
mov
lret
mov
inc
xchg
xchg
in
repnz
xchg
loop
cltd
or
pop
into
inc
fwait
movsl
loope
add
rol
xchg
dec
adc
ja
ss
jae
pop
ljmp
addr16
aad
adc
aad
fistpll
mov
xor
push
cmp
mov
iret
xor
les
xchg
pop
jno
lea
xabort
and
mov
loope
sub
aam
pusha
pop
xchg
ss
xchg
inc
mov
mov
push
fwait
cltd
jmp
cmp
xchg
aam
sbb
loope
shlb
jae
into
in
jg
imul
insb
jb
scas
or
pop
les
lret
pop
push
dec
push
lahf
imul
fadd
rcr
inc
push
cwtl
mov
sbb
push
lcall
ja
lock
ret
dec
inc
mov
outsl
je
mov
or
jae
or
movsl
outsb
jo
mov
add
inc
jl
aam
movsb
ja
mov
dec
jge
add
push
mov
pop
inc
lock
daa
or
push
cmpsb
mov
js
repz
add
in
imul
mov
mov
or
dec
xor
mov
mov
push
in
cmp
or
pop
ljmp
push
mov
pusha
cmc
jo
push
call
mov
pop
mov
pop
fs
xchg
scas
cmp
hlt
push
fdiv
sbb
sbbl
xor
lret
js
ljmp
inc
lret
shll
pop
stos
stc
push
sbb
hlt
loope
movb
mov
cmp
gs
test
lods
es
int
mov
sbb
mov
pop
or
lcall
cmp
xchg
loop
pop
nop
out
cs
xchg
test
inc
mov
movsb
mov
mov
add
push
or
aaa
scas
int3
push
mov
cmp
sbb
ds
or
push
repz
and
cmp
out
call
push
xor
add
lock
fdivp
pushf
xor
rep
mov
loopne
sub
sub
arpl
andb
outsl
or
loopne
in
inc
mov
push
and
jmp
in
mov
cmpsl
dec
div
jle
ret
test
lods
jns
cmp
push
xor
add
pop
push
mov
inc
dec
push
inc
aaa
cmp
repnz
adc
mov
dec
mov
out
aam
pop
mov
mov
aas
push
loop
xchg
sbb
sbb
dec
inc
pop
mov
cld
pop
addr16
mov
push
pusha
adc
mov
fiadds
mov
or
mov
push
cs
fistpll
adc
mov
sbb
scas
pop
scas
outsb
aaa
fcmove
pop
lcall
scas
jae
shr
or
ja
xor
dec
pop
and
and
adc
mov
or
hlt
out
repnz
pop
inc
loop
sub
mov
xor
repnz
aad
movsl
imulb
jae
inc
xor
dec
arpl
ljmp
pushf
pop
fistpl
es
inc
xlat
pop
in
pop
hlt
sub
bound
stos
sub
mov
aam
cmpsb
inc
add
out
test
pop
inc
shll
inc
xor
repnz
leave
sbbl
cmpsb
lahf
fsub
in
mov
ret
xchg
rclb
xor
loope
xchg
or
adcl
inc
xchg
lea
sub
jb
mov
sbb
add
or
dec
stos
cmpsl
popa
jg
shld
xchg
loopne
xchg
roll
fiaddl
and
pop
xchg
jnp
push
or
mov
mov
sub
popa
jmp
addr16
daa
push
xor
out
sbb
dec
out
cli
dec
jle
adc
lock
xlat
fld
sti
cli
call
js
jecxz
hlt
hlt
sub
or
xor
cmp
shl
mull
mov
das
mov
dec
roll
mov
jg
xchg
dec
add
iret
sarl
or
movsb
hlt
dec
jae
mov
push
xchg
mov
cltd
pop
sbb
mov
sti
test
sub
cs
add
lods
add
mov
add
xorl
inc
out
into
je
fstcw
or
aad
pop
in
popf
test
loope
shll
push
mov
adc
sbb
dec
cmp
out
mov
xchg
push
hlt
add
fmul
repnz
xor
ret
sub
push
cmp
add
pop
in
and
mov
pop
adc
jno
insl
cmp
pop
aad
subb
and
pop
inc
and
daa
mov
fidivs
dec
out
adc
je
pop
pop
sahf
idivb
cmc
fcompl
push
addb
mov
mov
rorl
stc
inc
fs
sbb
sbb
in
es
testl
sub
lds
xor
fnstcw
scas
aas
push
std
push
adc
jbe
rcrl
xchg
xchg
mov
pop
pop
hlt
jnp
cmp
cli
add
js
shl
jp
lcall
test
add
shll
shl
adc
push
mov
sbb
jns
add
xchg
aad
adc
lret
push
scas
pop
repz
push
sub
ficoml
jle
in
das
shl
es
xchg
add
lods
fcomp
cli
or
insl
enter
pop
jbe
and
xchg
movsb
dec
mov
pop
enter
add
insl
cmpsb
jge
mov
xor
and
cmpsb
jnp
sbb
and
dec
icebp
cmp
ret
scas
cs
sbb
or
push
pop
adc
fstpl
push
pop
pop
cltd
xlat
stc
inc
mov
out
les
pop
mov
shll
xchg
inc
movsb
in
mov
cli
adc
imul
inc
cwtl
movsl
push
mov
and
jo
add
xchg
sub
mov
mov
hlt
mov
lcallw
mov
mov
test
leave
cwtl
addl
push
repnz
xchg
inc
ja
sub
into
pop
outsb
push
repz
lods
jne
movsb
mov
inc
xchg
cmp
dec
dec
clc
insl
sub
pop
sahf
and
pop
test
pop
imul
inc
fdiv
xchg
sbb
lock
mov
xchg
sbb
dec
je
int3
je
cmpb
das
pop
adc
fisubs
insb
xor
ret
ljmp
and
and
push
cmpsl
sti
arpl
xchg
add
inc
pushf
inc
add
sub
pop
jo
mov
aad
cmp
ret
push
ret
mov
insl
ret
adc
loope
xchg
je
fisttpl
inc
sti
aas
mov
dec
sub
popf
pushf
scas
repz
cltd
jl
mov
loopne
and
jg
mov
test
les
imul
decl
iret
fcmovu
xor
jle
fstp
sbb
mov
push
or
xorb
repz
cmc
and
mov
fwait
enter
inc
mov
xor
scas
jns
cmp
rcr
subl
mov
xchg
dec
pop
sub
ja
imul
lds
outsl
out
ret
or
sub
cmp
lret
fnstenv
pop
int
iret
repnz
inc
shlb
sub
into
jl
pop
pop
mov
mov
push
movl
dec
nop
jno
int
push
or
roll
fs
out
mov
sub
inc
sahf
call
pushl
mull
mov
iret
pop
data16
mov
pop
push
add
inc
inc
vpsrlw
testb
mov
out
jmp
pop
sbb
fucom
jge
fwait
dec
dec
loope
pop
fnstsw
mov
push
shrb
xchg
push
or
popf
push
jl
mov
cmpsb
lahf
xor
lret
hlt
dec
loop
mov
push
xchg
cmp
push
and
or
jnp
jns
mov
mov
add
xlat
push
repz
div
and
lret
aad
roll
fistps
ret
imul
cltd
mov
pop
lods
pop
sub
movsb
mov
daa
dec
jne
jmp
inc
push
adc
arpl
mov
xchg
pop
xchg
stos
call
cwtl
push
add
or
cmp
mov
mov
notb
insb
pushf
pop
or
into
or
push
stos
pop
mov
lds
inc
fcoms
cmp
pop
fmull
les
cltd
imul
test
decl
clc
in
sbb
add
sub
stos
dec
mov
cmpsw
or
pop
fmul
std
xchg
mov
push
and
ljmp
and
scas
mov
enter
and
add
repz
pop
or
adc
jb
push
mov
mov
shrl
rolb
hlt
fisubl
mov
adcb
cmovp
fdivs
dec
leave
paddusb
or
lahf
mov
add
xchg
pop
cmc
aad
out
nop
femms
adc
sbb
imulb
add
lea
xchg
sub
cmp
jle
or
lret
ljmp
in
mov
or
and
jle
pop
pop
movl
dec
in
subb
mov
mov
insl
push
add
jo
outsb
insl
or
sub
jb
icebp
or
push
dec
fnstcw
dec
dec
cld
add
mov
xchg
pop
mov
mov
int
add
xchg
push
mov
aam
jg
cwtl
and
lret
dec
dec
adc
and
inc
jno
or
adcb
adc
adc
lahf
sub
xchg
jno
cmpb
pop
out
push
jl
loope
js
cmp
push
pop
cwtl
jnp
std
bound
icebp
in
sub
pop
jl
test
fbstp
hlt
icebp
mov
ja
loopne
cmpsl
int3
lock
in
xchg
jp
out
mov
fldcw
inc
out
sbb
mov
stos
cwtl
fdiv
outsb
arpl
test
xchg
loope
inc
lds
push
stc
sarb
jb
or
xchg
nop
or
fisttpll
xor
jl
mov
scas
mulb
les
add
in
xchg
adc
in
insb
pop
nop
shrb
mov
cltd
or
roll
push
xor
cwtl
lods
xchg
daa
dec
mov
xor
daa
jmp
pop
enter
adc
xor
and
mov
out
pop
add
insb
dec
jp
sbb
movsb
out
mov
mov
sti
ret
bnd
sub
pop
nop
xor
cmpsb
sbb
inc
or
sbb
sbb
jae
push
jge
mov
fs
mov
sbb
loope
push
aam
push
imul
cmpsl
addb
lret
xchg
jne
inc
xchg
mov
inc
hlt
aaa
xchg
add
jnp
cmp
test
fiadds
jl
repnz
dec
pop
insl
nop
sbb
sub
mov
mov
lods
adc
hlt
xchg
or
stos
or
ficoms
mov
loope
in
and
test
lods
pop
out
inc
mov
shlb
cmpsb
scas
push
mov
or
std
sbbl
out
cmp
fdivs
pop
xor
pop
fisttpll
and
add
gs
jae
insb
stos
scas
cmp
in
dec
sub
pop
jo
add
mov
adc
cmp
xlat
ret
add
jae
mov
cltd
fistl
dec
or
mov
into
cmpsb
pop
pop
pop
or
mov
dec
push
pop
fs
cmp
xlat
fidivrl
insl
pop
rorb
aam
mov
mov
addb
pop
shll
aam
data16
adc
xchg
jo
in
bound
sub
clc
popf
xlat
xchg
inc
dec
scas
nop
out
mov
adc
jge
clc
divb
pop
mov
vmovupd
mov
sub
std
jmp
ja
loop
cmp
adc
cmp
pop
clc
pop
das
adc
aas
imul
outsl
bound
inc
int3
imul
lea
cmp
mov
pop
mov
enter
cmpsl
stc
cs
and
lahf
push
pushf
push
cltd
fistl
cmpsl
dec
xchg
callw
sub
dec
movlps
out
sub
bound
add
add
mov
rcll
adc
jecxz
push
xchg
das
mov
inc
push
dec
jnp
cmp
dec
hlt
and
xor
xchg
sbb
inc
mov
scas
mov
fidivrl
clc
xor
push
jecxz
loop
and
jl
and
out
jne
cld
dec
push
cwtl
stos
lea
jbe
iret
pop
jno
push
dec
cmp
cwtl
in
inc
push
and
mov
or
cs
std
mov
cwtl
sbb
mov
loop
mov
shll
push
or
mov
push
pop
pop
in
aad
mov
pop
inc
lret
fsubs
ret
inc
movsl
xor
pop
shll
movsb
mov
pop
int
push
mov
int
cmp
mov
mov
xchg
into
add
ljmp
adc
jmp
jecxz
ret
adc
xchg
out
jp
jle
pop
mov
nop
pop
popa
sti
push
cmp
mov
ret
inc
mov
adcb
adc
cltd
cmp
pop
andl
lds
sti
jecxz
push
cmpsb
mov
imul
js
es
js
sti
mov
mov
push
xor
mov
shrb
out
mov
shl
jmp
xor
outsl
popf
xor
xor
jle
out
int3
cltd
add
lret
dec
or
push
and
aad
jge
lret
sub
cmc
push
cld
inc
adc
popf
cld
lcall
xchg
xchg
repnz
mov
rorl
insl
js
adc
sbb
aaa
mov
mov
adcb
push
push
sbbl
sub
dec
scas
push
cmp
mov
orb
pop
cwtl
bound
stos
pop
mov
lcall
test
pop
cli
fistpl
ret
pushl
loop
add
cltd
popf
lods
xchg
xchg
mov
or
sub
outsl
inc
in
push
push
pop
rol
stc
fstl
push
shr
inc
rcrb
jno
stos
jle
mov
test
or
or
add
push
scas
cmpsb
lret
ret
dec
push
mov
and
mov
pop
jo
mov
adc
push
std
fnsave
dec
mov
push
ljmp
addb
loope
jb
push
scas
pushf
and
scas
sbbb
loopne
inc
adc
or
push
sub
jns
push
adc
lret
xchg
sub
imul
mov
inc
push
fsubrp
fisttps
out
or
cmpsb
push
js
xor
cmpsl
ss
shrb
aam
enter
push
push
hlt
xor
aaa
push
mov
or
stos
jnp
shlb
sub
push
cs
pop
daa
stc
cmpl
xchg
mov
jbe
pushf
push
fldcw
cmc
mov
out
mov
aam
mov
mov
xchg
mov
std
or
xor
aaa
sub
sub
sbb
mov
out
clc
pusha
dec
and
mov
cmp
xlat
and
push
add
push
sub
sbb
movsb
mov
and
xchg
lds
push
jmp
ss
mov
cmpsl
out
pop
aas
sbb
test
jl
ss
lahf
pop
in
mov
push
mov
jp
lock
pop
rcrl
ss
subb
jo
lds
push
jne
int
push
das
lahf
lods
cmp
arpl
jg
dec
mov
cmpsl
test
sub
mov
lea
xor
push
or
lcall
movsl
cmp
mov
dec
pop
mov
test
or
test
mov
gs
pop
int3
hlt
test
and
push
mov
mov
clc
add
stos
ror
dec
mov
xchg
sbb
dec
dec
jg
outsb
ljmp
push
pop
movsb
mov
in
mov
xor
movsl
adc
imul
or
rcrl
push
in
add
test
mov
sbbl
pop
lcall
repnz
pop
outsb
shrl
dec
and
xor
jbe
lea
jne
add
mov
mov
cmp
mov
es
ss
and
pop
pop
fimuls
push
sbb
add
cmp
inc
nop
into
out
cs
pop
inc
aam
insl
int3
cltd
inc
outsb
rolb
cmp
inc
rcrl
sub
gs
negl
jbe
test
or
les
xlat
daa
ss
outsb
xchg
mov
mov
into
mov
jbe
mov
imul
lds
mov
mov
sub
add
adc
sbb
or
fidivs
nop
shlb
es
bound
mov
int
into
mov
adc
push
inc
pop
test
mov
jae
jb
xchg
shrb
das
push
fstpl
clc
in
cld
clc
sbb
call
out
sbb
in
sbb
lea
mov
ja
jo
xlat
imul
mov
cmp
mov
jno
std
aaa
cwtl
pop
xchg
insl
fbld
jl
outsb
add
dec
mov
and
movsb
stos
aad
lds
xchg
jo
fistl
outsb
sbb
out
insl
or
fwait
inc
adc
xchg
xchg
push
jns
xor
addb
daa
pop
or
cmp
xor
inc
xchg
out
neg
pop
into
push
xchg
pop
xor
mov
sub
xchg
pushf
or
cmp
nop
xor
lock
ficomps
jl
xor
jp
and
xchg
mov
arpl
add
mov
icebp
jae
mov
fdivrl
in
adc
sahf
pop
pop
jl
notb
or
aas
mov
ret
jp
sti
inc
mov
or
cmovbe
fsts
push
mov
stos
cmp
mov
fstpl
loopne
pop
and
test
mov
lahf
pusha
leave
mov
lcall
lcall
imul
xor
arpl
mov
jge
lcall
shlb
inc
push
pop
dec
mov
lret
jle
dec
jp
loop
xchg
inc
or
or
pusha
out
dec
call
ljmp
fwait
je
dec
jo
cmp
data16
pushf
or
out
jo
ja
mov
test
clc
ljmp
aam
pop
jo
xor
mov
loop
orb
cltd
pop
inc
xor
enter
loope
cmpsb
adc
or
dec
lahf
sub
jge
mov
lcall
add
out
arpl
cmc
test
xor
stos
popa
jp
test
xchg
fmuls
push
in
sub
out
lret
loop
push
push
repz
movsl
mov
mov
aad
jo
mov
sub
adc
test
dec
pushf
das
in
iret
fmulp
mov
pop
das
fidivl
loopne
notl
aad
mov
hlt
inc
mov
sub
mov
dec
and
xor
insl
ljmp
iret
cld
pushf
ret
leave
push
mulb
sarl
xchg
fwait
ret
clc
adc
push
cmp
outsl
ret
push
out
mov
scas
shlb
inc
cmp
sub
and
mov
xchg
aad
fwait
adc
popf
mov
imul
and
sbb
adcb
insb
insl
push
shrb
es
and
inc
inc
mulb
sbb
sbb
push
xchg
push
and
rclb
or
nop
jno
xchg
inc
inc
jns
jns
and
aas
mov
bound
pushf
sbb
cmpsb
sbb
and
cli
xchg
mov
sbb
jge
inc
dec
subl
stos
sbbl
outsb
dec
sub
dec
or
add
in
dec
pusha
enter
sti
pop
test
jl
jl
mov
push
insb
mov
or
inc
dec
adc
fidivs
and
push
dec
popa
pusha
dec
pop
or
shll
test
loope
dec
and
mov
mov
jno
dec
je
das
out
int
jle
jne
lods
arpl
or
jmp
ja
inc
cmc
lds
push
mov
or
test
jmp
xor
sub
andb
in
push
mov
push
jae
mov
pop
fldenv
popf
adc
inc
and
lea
xchg
repz
aaa
fidivrl
xchg
and
shlb
or
xchg
pop
jle
fimuls
mov
sub
shl
pushf
in
js
mov
mov
adc
xor
pop
pusha
ja
aam
and
out
clc
imul
mov
clc
shr
mov
in
push
inc
jne
xor
sarb
jle
outsl
pop
add
push
icebp
leave
fld
pop
inc
shlb
cmp
mov
and
cmp
orl
mov
shlb
cmp
sahf
jne
ret
cmp
dec
adc
add
jmp
pop
jnp
sbb
rcrl
ret
call
fmulp
in
imul
cmp
pop
xlat
xor
gs
gs
or
add
cli
xchg
push
ja
inc
dec
jp
stos
cmp
pop
sub
sub
ja
jge
call
adc
std
test
add
pop
arpl
enter
jmp
stos
sub
pop
and
cmpsb
in
jg
in
fmull
sbb
mov
sbb
imulb
and
in
sbb
jne
popa
stc
jbe
stc
sub
cmc
enter
pop
inc
repz
cmp
adc
sbb
imul
and
add
pop
adc
push
not
lret
dec
repz
repnz
jbe
inc
add
testl
adc
imul
in
jge
std
push
addb
dec
add
push
mov
out
cmp
aaa
xchg
and
enter
shrb
cmpsl
out
faddl
mov
lret
in
inc
push
gs
mov
mov
scas
repnz
inc
das
repnz
in
adc
popf
sbb
xor
call
sbb
loope
lock
incl
test
push
cs
lock
sub
mov
push
push
jp
rorb
loop
mull
mov
dec
mov
test
sbb
scas
cmp
jbe
pop
dec
sbb
daa
inc
xlat
push
leave
cld
pop
movl
movsb
adc
pushl
jae
fstl
das
shrl
out
sbb
xchg
mov
sbb
lret
cwtl
adc
xchg
lcall
add
insl
and
add
add
sbb
mov
add
jle
dec
into
or
adc
addl
out
sbb
dec
inc
sbb
mov
sub
or
shll
push
in
mov
adc
nop
xor
popf
aam
add
daa
into
fs
add
cmp
and
cmp
sub
int3
jg
pop
lods
idiv
imul
and
mov
inc
mov
mov
shll
sbb
fistl
mov
les
inc
sub
and
pop
mov
pop
iret
lods
mov
xchg
pop
sbb
enter
pop
cli
mov
std
shl
sbb
sub
and
stos
popa
sahf
xor
sub
mov
cwtl
lea
incl
push
imul
mov
int3
fs
leave
out
mov
aad
sarl
mov
lahf
or
les
int3
mov
dec
adc
into
lods
fidivl
aas
repnz
loope
adc
xchg
mov
push
sub
andl
mov
cmpsl
scas
insb
and
pusha
cmc
xchg
adc
imul
ret
icebp
cmp
mov
lret
xchg
push
jmp
xchg
fsubs
xchg
mov
out
repnz
and
inc
xchg
shll
pushf
jnp
xlat
cmp
clc
clc
movsb
int3
xor
int
pop
rcll
popf
repz
sub
inc
mov
adc
push
adc
lcall
pop
xor
call
call
fnsave
addb
mov
inc
jge
push
imul
popf
ss
popf
out
pop
movsl
cmp
push
xchg
sub
call
dec
inc
repnz
cmp
xor
and
push
adc
pop
sub
xlat
jnp
iret
fsubl
fsubs
inc
and
in
dec
push
pop
pop
mov
and
arpl
into
je
and
dec
xor
popa
add
xchg
fs
sbb
mov
sti
dec
jb
addr16
sbb
lods
jo
xor
add
add
mov
jae
xchg
mov
inc
addb
dec
sbb
leave
sbb
fcompl
loop
testl
sar
mov
outsb
iret
push
mov
mov
mov
xlat
aad
add
dec
cmpsl
mov
lea
and
adc
push
call
xchg
aam
or
test
mov
into
lods
clc
adc
imul
add
cmpsl
out
lods
lods
xchg
xchg
jge
pop
loope
push
mov
test
lcall
sbb
jecxz
adc
inc
jae
clc
pop
mov
stos
cmc
mov
sbb
mov
aas
mov
outsb
mov
ret
inc
bound
int
imul
inc
adc
int3
loopne
cld
clc
aaa
lcall
dec
sub
jne
cmc
and
sbb
ja
enter
mov
push
or
loop
adc
and
test
cli
mov
sub
adc
in
add
push
mov
mov
sub
out
xor
inc
or
mov
in
lcall
inc
jne
popf
ljmp
dec
jnp
mov
push
pop
decl
inc
es
jbe
push
arpl
mov
sahf
or
enter
fdiv
push
lret
push
movsl
shlb
pusha
jp
test
mov
shll
sub
cmp
arpl
push
imul
jnp
and
sbb
jmp
imul
leave
ret
shlb
xchg
mov
shll
pop
dec
sub
or
das
inc
fdivrl
pop
mov
add
movsl
and
xchg
shll
movsl
jle
aaa
xchg
sub
add
push
ja
loope
scas
pop
loopne
ja
jp
cmp
cmp
sbb
and
fiadds
dec
xor
js
pop
jge
cmpsl
lods
pushf
jg
les
xor
xchg
cmp
ret
iret
sbb
push
mov
icebp
outsb
int3
xchg
sahf
or
mov
sbb
jl
les
popf
shlb
das
rclb
repnz
push
add
adc
aas
adc
popa
jo
or
stc
sahf
pop
or
roll
movb
mov
sub
mov
pop
cwtl
in
dec
mov
js
and
fmul
pop
push
add
push
xor
cmp
mov
cmpsb
mov
popa
push
mov
pop
testb
cmp
sbb
ss
std
inc
sub
pop
push
bound
xchg
ret
loope
xorb
mov
lea
jle
mov
add
js
pop
int3
cmp
inc
push
call
out
int3
inc
aad
pop
negb
pusha
mov
sub
ret
pop
inc
decl
push
insb
push
xor
rcrb
shl
pop
sub
xor
push
out
dec
xor
loopne,pn
sbb
sbb
lds
shl
ja
out
cmp
sbb
mov
movsl
pusha
xor
push
stc
mov
xchg
aam
clc
std
data16
push
adc
ss
add
aad
adc
add
mov
cmp
add
and
and
push
jg
jo
negw
inc
xchg
dec
sub
ja
insb
push
push
adc
sti
bound
addr16
xchg
push
mov
sbb
sub
arpl
lret
ucomiss
in
and
cmp
xchg
inc
cmc
jp
mov
inc
or
scas
or
add
mov
mov
xchg
shlb
out
adc
jb
jns
aaa
and
add
into
aad
pop
das
js
mov
sbb
push
cwtl
inc
scas
ja
mov
and
das
adc
cmpsl
cmp
aam
hlt
out
add
jp
icebp
dec
pop
inc
cwtl
cmc
ja
fimull
cmp
outsl
jmp
sarl
repnz
lods
rcrb
insb
and
xchg
icebp
or
push
iret
fiaddl
mov
pushf
sbb
lds
and
fwait
orb
jbe
call
popf
push
fs
sub
ja
and
ljmp
sub
notl
shr
iret
inc
fsubr
and
es
jg
movl
repnz
outsb
mov
jmp
cmp
jge
and
daa
in
or
call
testl
push
test
test
insl
mov
mov
dec
out
daa
pop
out
lret
fucomip
or
orb
or
pushf
fnstsw
rolb
pop
cld
outsl
jno
jle
sub
cltd
dec
push
mov
shrb
aam
or
push
dec
mov
loopne
lahf
jns
push
hlt
int
jo
push
stc
fadds
in
rorb
and
jle
jl
js
rorl
cld
fcoms
faddp
mov
outsb
dec
test
mov
stos
jo
jmp
cmp
push
je
sub
nop
out
cmp
mov
add
jne
imul
mov
hlt
cmp
ds
fwait
push
mov
xchg
push
lock
xchg
mov
testl
mov
fldt
adc
push
fwait
cmpb
inc
sarb
inc
add
data16
jecxz
hlt
xlat
insl
roll
and
mov
jp
push
test
movsl
loope
clc
loope
repz
inc
sbb
cmp
js
ja
fsubl
stc
hlt
mov
test
mov
insb
leave
movsb
mov
mov
jae
push
repz
jnp
jecxz
loop
xor
dec
xchg
and
pop
xchg
data16
or
jns
cltd
push
pop
loope
xor
push
loop
enter
dec
push
sbb
push
iret
jae
daa
jmp
cwtl
add
cmp
cmpsb
xchg
jle
jo
pop
out
sub
lcall
aad
inc
push
out
enter
subb
mov
rcr
xchg
push
sahf
jle
xlat
push
shlb
cltd
push
nop
pop
fidivl
push
mov
or
or
mov
mov
enter
scas
mov
pop
lds
out
rclb
scas
push
cwtl
mov
out
lods
and
xor
bound
cmp
dec
dec
ja
add
and
or
mov
push
insl
mov
arpl
pop
fcomp
out
mov
sahf
sti
into
imul
mov
pop
hlt
mov
lods
clc
dec
push
or
mov
jno
je
scas
ss
lea
imulb
mov
daa
loop
xor
inc
mov
mov
xchg
push
fmul
std
movsb
adc
es
inc
xchg
cwtl
pop
repnz
arpl
adc
mov
adc
pop
sbb
dec
pop
shlb
add
dec
mov
sub
cmpsb
mov
stc
push
inc
push
sub
mov
aaa
out
pop
cltd
scas
aad
sti
cmp
repnz
lret
addr16
jmp
nop
push
sbb
outsl
mov
add
cmp
push
lahf
lock
jg
sahf
push
leave
sub
mov
mov
rolb
leave
loopne
jmp
out
pop
push
adc
fcomip
pushf
jns
cmp
mov
popa
push
pop
jge
mov
add
inc
sti
push
mov
cmp
pushf
out
mov
push
je
pusha
ror
test
jb
jecxz
insb
inc
jp
js
test
dec
aaa
jnp
inc
inc
lock
push
in
push
and
dec
subb
scas
pop
xchg
clc
cld
nop
dec
loopne
mov
shlb
mov
push
or
mov
out
inc
jp
pop
push
mov
pop
das
xchg
lods
mov
pop
adc
pop
jge
push
jmp
jbe
pop
inc
cmp
mov
cs
push
repz
stc
cmpsl
add
stc
popf
std
push
cli
cmc
pop
mov
push
dec
das
sub
mov
dec
cmp
mov
sub
sarl
inc
addr16
neg
rcr
pusha
movsl
mov
ror
xchg
push
insb
cmp
enter
sbb
sub
stos
jmp
mov
addr16
push
mov
movsl
shr
js
mov
mov
orb
or
mov
bound
push
sbb
scas
cmc
inc
xor
mov
cmp
adc
fstpt
mov
mov
into
push
in
add
lret
data16
sahf
clc
out
lcall
shlb
jbe
sti
xchg
sbbl
inc
inc
pop
xor
scas
pop
pop
push
push
push
insb
push
call
mov
popf
lods
ret
les
pop
push
sti
lret
ja
sbb
test
call
popa
push
data16
adc
mov
xorb
rcr
sub
mov
mov
pop
and
push
fldl
xchg
lods
inc
pop
imul
push
pop
pushf
and
jno
cli
fbld
sbb
adc
jae
pop
mov
push
test
stos
test
inc
sbb
lods
rcrb
pop
push
jmp
push
jecxz
dec
pop
daa
mov
dec
xor
repnz
push
iret
test
push
popf
add
inc
mov
and
in
adc
xchg
jle
outsb
or
mov
xchg
push
clc
push
jne
dec
sub
sbb
push
pop
sub
clc
jp
pop
dec
jbe
mov
sbb
xchg
mov
sub
cmp
scas
adc
add
cmp
pop
push
repz
aas
and
insl
xor
lret
pop
cmp
sbb
mov
enter
push
in
jbe
scas
scas
loop
add
pop
sbb
roll
xchg
mov
push
lods
mov
sti
cmp
aam
loope
cmpsl
je
xchg
movsl
pop
insl
sbb
loope
xchg
das
xor
popa
sti
or
sub
mov
xor
mov
jnp
in
mov
lea
pop
aas
or
jb
pop
dec
pop
loope
mov
shlb
and
lahf
push
jns
mov
es
xchg
xchg
out
mov
cltd
or
mov
xchg
adc
popa
sbb
sub
cmp
push
inc
inc
mov
divl
lahf
in
jae
mov
add
cmp
popf
adc
lret
incb
and
daa
scas
sub
in
cltd
mov
call
push
ljmp
mov
xchg
pushf
pusha
cmp
push
mov
movswl
sbbl
inc
and
lds
fadds
adc
and
and
insl
into
jge
cmp
shll
leave
push
loopne
aad
fcoms
dec
dec
in
and
ja
inc
pop
fbstp
in
sbb
xor
push
cs
jecxz
jbe
out
faddl
cmp
inc
inc
sbb
mov
aaa
xor
xchg
dec
sub
push
insb
jno
inc
pushf
dec
fs
xchg
mov
mov
fiaddl
xor
fmuls
or
cmp
sub
add
shlb
xchg
xor
fildll
fisubrl
jmp
xchg
fs
nop
nop
add
sub
adc
pop
push
and
jle
jbe
inc
or
inc
pop
push
or
js
sub
lcall
xchg
in
push
xor
rol
pop
mov
xchg
pop
out
push
fldcw
mov
repz
cmp
pushf
cld
xchg
test
fstpt
mov
jae
cmp
inc
xlat
clc
repz
xor
dec
cmp
lahf
out
xchg
fnstcw
or
pop
inc
mov
jo
mov
out
jne
add
inc
jp
lods
push
pop
inc
inc
mov
push
cmp
mull
aas
out
in
inc
dec
int
inc
xchg
xchg
out
popf
jb
pushf
cmp
js
rcrl
push
push
mov
and
inc
idivl
call
mov
push
dec
mov
jl
inc
gs
push
adc
or
push
jl
pop
pop
mov
mov
frstor
out
testl
mov
popf
in
xchg
sbb
mov
push
xor
sarb
inc
xchg
xchg
jl
pop
add
jnp
dec
out
pushf
lds
xchg
mov
sub
call
add
ja
sbb
leave
ud0
cmp
cmp
push
cmc
push
sahf
lea
or
pop
and
mov
pop
pop
aam
orl
push
negb
jb
dec
fimull
mov
out
cmp
dec
jp
jecxz
insb
inc
cmp
int3
jl
test
and
xor
and
fidivl
movsb
jne
cli
lods
mov
pushf
sub
cmp
loop
mov
daa
xchg
aas
xchg
sub
push
push
sbb
addr16
jmp
repz
mov
mov
bound
mov
xor
fistpll
xor
sbb
dec
call
test
lcall
adc
int3
sbb
int
jne
cmp
mov
jmp
hlt
jns
scas
popl
mov
lods
mov
mov
test
lea
inc
enter
ljmp
mov
sahf
shl
int3
mov
mov
rcrl
push
and
pop
or
xor
leave
inc
das
les
rorb
xchg
fmuls
das
adc
jbe
add
jecxz
dec
ljmp
inc
pushf
mull
mov
fwait
test
push
and
mov
xlat
jge
jbe
sbb
test
fwait
addr16
mov
mov
mov
lds
lret
mov
xlat
fstps
mov
int
ds
enter
mov
dec
jno
dec
icebp
inc
ret
or
dec
pop
in
mov
out
data16
pop
into
pinsrw
cmp
mov
xor
stos
pop
shlb
js
sub
xchg
aam
and
mov
inc
gs
stc
sub
and
xchg
adc
adc
sahf
jge
mov
jp
insl
push
stc
xor
cmp
jae
sbb
add
adc
repnz
sbb
add
fisubrl
lret
insl
xchg
push
inc
pop
push
xor
stos
lea
xor
loop
mov
shrl
push
adc
sub
scas
negb
adc
cltd
mov
fiaddl
push
fwait
push
test
ror
dec
jp
or
lret
fldl
and
movsb
push
push
inc
fnsave
int3
jns
std
testb
ds
dec
out
pop
scas
pushf
jl
div
and
xchg
push
mov
aas
es
fimuls
sub
into
adc
imul
jbe
xor
mov
hlt
das
xor
sbb
test
sbbb
fcmovb
lods
mov
aad
fnstenv
dec
inc
sub
jl
mov
aaa
sub
jp
dec
mov
or
movsb
int3
mov
jmp
jnp
cmp
or
inc
jnp
psubb
cmp
ss
rcrl
xor
inc
xchg
and
jae
cmp
jg
inc
stos
xor
je
pusha
in
push
out
dec
sbb
pusha
loope
nop
dec
cmp
sub
outsl
cmp
jmp
and
into
imul
xorl
xchg
and
jle
jecxz
mov
jb
add
dec
sub
push
mov
xchg
or
scas
push
mov
shlb
add
ljmp
sub
inc
mov
out
and
lcall
jmp
push
mov
addr16
rcrb
or
nop
sti
fs
dec
sbb
shll
sahf
into
mov
fistpl
lret
imul
lds
mov
dec
mov
cld
xchg
loop
cmc
jne
lahf
bound
pop
mov
outsb
jmp
pop
mov
sub
xchg
ret
insb
loope
xor
jns
pop
in
outsb
add
push
mov
jg
fiaddl
push
out
dec
xor
jo
lods
xor
push
out
jbe
fadds
rclb
imul
or
jnp
test
ljmp
popf
add
fisubrl
sbb
negl
nop
inc
sbb
lret
stc
pushf
loop
push
jl
mov
cmc
shll
sbb
rcrl
repz
dec
fwait
push
fwait
push
gs
pop
jb
dec
jne
loopne
inc
nop
mov
hlt
dec
and
dec
aam
xchg
push
xlat
dec
sbb
push
repz
in
stos
sub
int3
dec
fucom
fldt
dec
imul
inc
pop
mov
and
shlb
and
test
sbb
outsb
loopne
aad
xorb
stos
lret
aaa
or
mov
xor
pop
ret
inc
adc
pop
into
jne
mov
jl
test
lds
cli
xor
rorl
adc
subl
pop
mov
loope
clc
jbe
sub
or
push
pop
pop
lcall
pop
mov
mov
push
rcrl
nop
pop
popa
ret
mov
arpl
jle
call
jo
clc
repz
ljmp
divl
sbb
aam
fucomip
ret
mov
clc
ret
fidivrs
movsb
rcrl
roll
inc
cmp
and
or
jne
mov
test
movsb
nop
jns
aam
addb
cmp
out
fwait
test
mov
jmp
xchg
cwtl
xor
push
nop
imul
out
sub
lahf
popf
sarl
fidivl
push
dec
loop
loopne
jbe
pop
and
add
sbb
push
push
test
stc
add
ljmp
add
test
adc
jb
cmp
leave
push
rclb
cli
andb
jp
in
inc
lods
sub
and
mulb
stc
dec
mov
pop
cmp
sarb
jecxz
pop
adc
ljmp
add
mov
xor
sub
sbb
insl
fwait
sahf
hlt
mov
aam
mov
loopne,pn
iret
xchg
inc
cmp
je
pop
ss
dec
pop
fcomip
jno
mov
add
addr16
clc
adc
insl
dec
pushf
cmc
testl
mov
and
xchg
inc
sahf
outsl
pop
pop
dec
xchg
ja
fcmove
pushf
popf
scas
and
mov
mov
pushf
popf
mov
lret
movsl
and
popa
sbbl
sub
ljmp
jmp
xchg
add
cmp
jmp
hlt
add
pop
cmp
mov
out
sarb
movsb
mov
call
stos
test
xor
push
test
inc
mov
jbe
pusha
in
mov
mov
arpl
fnstenv
lds
sbbb
jo
sub
data16
mov
mov
push
inc
daa
inc
xor
sti
sbb
pop
imul
aas
inc
iret
jbe
ljmp
inc
insl
jecxz
stos
mov
or
mov
lock
mov
inc
push
push
xor
pop
or
repnz
mov
in
imul
mov
xsha1
cmpsb
or
ja
shll
jl
inc
cmp
scas
in
mov
mov
movsl
mov
push
adc
sbbb
sub
or
jle
out
push
rolb
pop
hlt
and
xchg
popa
mov
clc
imul
or
mov
push
push
sub
into
ds
lods
xchg
inc
mov
andb
ret
cmp
lds
fld
jecxz
dec
mov
mov
cld
add
sbb
adc
mov
xchg
or
pop
or
subl
frstor
sarb
sbb
insl
push
insb
push
lea
cmp
dec
cmpsb
lds
lock
inc
cmp
mov
inc
pop
sub
pop
mov
popf
in
lahf
insl
mov
xor
in
stos
mov
addr16
xchg
in
imul
movsl
insl
lcall
mov
sub
arpl
stos
adc
jecxz
call
or
pop
leave
mov
xor
les
dec
lcall
js
xchg
push
push
mov
xchg
sti
insb
mov
push
fidivrl
insb
cld
cld
cmpsl
dec
cmovge
ja
test
mov
cli
push
cmp
mov
pop
cmc
or
mov
and
je
aas
push
sub
mov
fcmove
jbe
pushf
jb
dec
loope
leave
cmp
adc
arpl
inc
or
mov
leave
jne
les
dec
mov
js
rclb
dec
ljmp
jp
ret
or
lcall
dec
cmpl
loopne
sub
push
out
les
adc
and
mov
sbb
lret
or
pop
sbb
ficoms
jb
andb
cmp
push
fcom
mov
and
sub
outsb
inc
ljmp
pop
paddb
subb
adc
cli
jg
jg
mov
bound
pop
pop
insb
push
movsb
sbb
push
loopne,pn
adc
mov
dec
lock
scas
cld
and
fidivs
xlat
addr16
pop
and
out
popf
mov
inc
out
cmp
push
pop
pop
dec
push
shrl
scas
scas
ret
jg
adcl
add
stos
data16
pop
andl
jge
popa
cltd
xchg
lods
cmp
sub
sub
mov
lea
imul
lock
sbb
jge
ret
pop
mov
dec
lcall
jno
das
push
cwtl
mov
sub
outsb
or
mov
mov
sahf
gs
insl
sbb
inc
xor
mov
pop
repnz
sahf
jbe
movsl
rcll
jns,pn
mov
lea
xchg
xchg
rcrb
sbb
mov
add
or
xor
xor
das
pop
pop
lock
test
lea
mov
sarl
and
sbb
fwait
sti
fstp
leave
add
lods
into
or
cld
xor
aam
je
mov
push
mov
ljmp
xor
and
adc
add
and
sbb
inc
inc
subl
cld
xor
and
and
fnstcw
inc
fucomi
je
add
add
jg
xor
lret
sbb
adc
push
in
mov
dec
pop
cmp
jg
jmp
jnp
test
jmp
jmp
mov
out
dec
clc
loope
ljmp
lea
inc
jmp
test
cmpsb
aad
adc
loop
les
pop
mov
mov
or
cli
pop
pop
test
push
adc
or
pop
xchg
mov
pop
stos
stc
xchg
push
loopne
fucom
dec
adc
sbb
sub
xchg
sahf
les
jp
sub
sbb
push
mov
push
out
sbb
lods
mov
mov
adc
lret
dec
push
movsb
xor
xorb
sbbl
jo
out
mov
test
addr16
push
std
dec
pop
fistps
lods
mov
and
ja
fsubrs
loope
js
test
cld
std
push
cwtl
jecxz
movb
pop
jp
das
pop
fwait
sarl
lds
mov
test
pop
ja
hlt
rcrl
jo
outsb
shrb
mov
sub
jg
inc
xchg
add
fsubrs
fcoms
and
xorl
int3
imul
push
rcrb
adc
and
mov
scas
ror
sub
mov
sbb
fdivr
das
sbb
add
adc
xchg
adc
xor
repnz
cmp
repnz
inc
cli
or
das
add
imul
inc
leave
jmp
out
inc
repnz
sub
fwait
inc
or
add
stos
sbb
sub
cmpsb
pop
push
push
cmp
jne
mov
pusha
pusha
mov
outsb
add
sub
sbb
orb
cli
sbb
jg
sbb
inc
mov
mov
jae
cmp
jo
test
add
jbe
insb
movsb
pop
cmp
ds
cli
movsb
mov
jle
jb
mov
ljmp
or
mov
insl
jmp
dec
into
negl
jno
jns
test
mov
adc
lcall
mov
mov
mov
add
cmp
in
adc
out
ret
add
dec
sahf
repz
mov
rcrl
add
jl
adc
fsts
adc
xchg
add
add
xlat
sub
and
out
mov
add
movsb
shll
sbb
fistl
outsb
add
sbb
pop
xlat
rclb
mov
daa
es
ss
es
jns
lret
sarl
cld
leave
dec
decl
movsl
mov
jb
out
cmc
cmp
aaa
ret
syscall
jb
mov
cmc
dec
mov
test
fcmovbe
fsin
adc
insb
mov
xchg
cmp
aaa
mov
inc
loopne
dec
mov
dec
sarl
jo
sub
mov
mov
in
push
xchg
xor
mov
xchg
add
or
fmull
repz
mov
outsb
aas
pop
in
inc
cmpsl
push
cltd
mov
inc
jae
cmpsb
sbb
mov
stos
inc
movsb
out
mov
fsubrs
sub
xor
dec
test
sub
into
jo
jne
dec
mov
fwait
mov
jg
nop
orl
pop
sahf
ret
in
popf
xor
iret
int3
jnp
subb
repz
push
mov
stos
in
stc
jnp
sbb
cmp
ljmp
inc
decl
daa
jmp
cld
push
xor
jbe
flds
dec
mov
cmp
jge
push
dec
andl
xor
lock
add
fistpll
je
mov
add
imul
hlt
in
push
es
mov
jge
and
add
pop
xor
jb
xchg
lods
mov
aas
lods
jno
and
ja
inc
inc
mov
pop
jle
mov
pop
js
sbb
mov
outsl
fstpt
or
int3
lret
push
xchg
movsb
mov
xor
mov
adc
ret
outsb
imul
rcl
adc
in
lret
lock
ds
add
fidivrl
inc
clc
enter
mov
pop
mov
cld
hlt
rolb
mov
cmp
sbb
clc
enter
cltd
sbb
pop
pop
in
push
pusha
in
int3
test
cmp
mov
xor
loopne
cmp
sbb
and
aaa
xchg
xchg
stos
lahf
push
stos
cmp
or
cmc
int3
outsb
sub
push
sub
loopne
sub
stos
pop
dec
mov
aam
jmp
mov
and
mov
xchg
or
arpl
mov
fcomps
sbb
dec
or
xchg
faddl
pop
daa
mov
fcmovnb
enter
push
and
push
xchg
lods
test
aad
xchg
fucomip
and
jp
jnp
mov
inc
lret
sahf
jg
push
int3
shlb
cmpsl
add
ret
mov
mov
test
das
mov
jecxz
imul
fdivs
test
jp
or
lret
icebp
and
sbb
jmp
aad
incl
mov
test
sbb
cmpsb
dec
fyl2xp1
jo
xchg
fs
fsubl
imul
stc
add
mov
inc
in
movl
cmp
xor
outsb
inc
ja
adc
sub
popa
mov
or
inc
and
sbb
cmp
rolb
push
adc
pop
xchg
xchg
sti
push
cld
push
jmp
cmpsb
inc
sub
ret
dec
pop
mov
cwtl
test
push
lds
xlat
sub
cmp
inc
insb
outsl
int
stos
xor
movsl
sbb
xchg
dec
push
shll
adc
adc
test
adc
mov
cs
loop
pop
rcrl
add
shrl
sub
jbe
arpl
xor
inc
into
into
mov
mov
adc
fiaddl
incl
sub
and
ds
dec
adc
outsl
bound
cli
shlb
push
sbb
popa
ljmp
in
xor
mov
mov
ljmp
stc
jno
insl
stos
pushf
shlb
cmp
fcomip
lock
pop
ja
bswap
xchg
adc
lret
test
pop
sub
lds
les
or
es
mov
sub
mov
out
ror
out
xor
push
mov
stc
sbb
mov
sahf
mov
ret
aas
insb
push
push
sbb
mov
vunpckhps
and
aad
pop
rorl
adcb
jg
mov
movsb
pop
mov
jge
mov
andl
xor
mov
sbb
cmp
movsb
or
and
mov
sarb
cmpsl
xchg
inc
jo
mov
sahf
mov
std
mov
mov
push
shll
and
pop
sub
cld
sahf
xchg
fs
pop
mov
loope
js
jp
stc
push
mov
aaa
stos
cltd
in
nop/reserved
push
aaa
packuswb
fbld
loopne
or
insb
pop
xlat
mov
aam
mov
xchg
or
subb
aaa
je
mov
jecxz
cmp
out
mov
iret
add
idivb
mov
xchg
lret
add
push
sub
xchg
subb
dec
repz
aas
xchg
mov
xchg
dec
lahf
imul
fimuls
and
pusha
dec
cld
mov
xor
in
lret
enter
and
rorb
sub
push
or
jb
call
mov
jno
sub
adc
lock
es
push
nop
push
pop
in
push
cmpsb
mov
ffreep
xor
mov
cli
sti
mov
pop
dec
out
sbb
std
pop
mov
into
jae
rorl
jg
mov
dec
adc
mov
adc
add
mov
mov
cmp
mov
lods
jns
rclb
sub
repnz
pop
sub
cltd
mov
in
or
mov
sub
mov
and
jae
lcall
push
outsb
bound
dec
aam
mov
inc
stos
roll
cli
fs
pop
sbb
gs
hlt
jae
lods
jmp
mov
mov
pusha
dec
outsl
hlt
nop
add
andb
mov
cli
cmp
out
ret
cmp
push
int3
push
sub
or
push
pusha
outsl
stc
in
inc
adc
sahf
loopne
out
rorb
in
xor
iret
mov
jns
jge
sti
stos
push
cld
ret
test
roll
bound
pop
add
lret
sub
in
addr16
fwait
xchg
orb
mov
orl
dec
notl
dec
js
mov
jo
adc
jg
and
stos
je
outsb
mov
xchg
filds
jb
and
adc
adcb
dec
daa
das
sbb
dec
cmp
adc
xor
xchg
scas
mov
xor
cmpsb
sub
mov
popf
dec
enter
sub
jb
push
arpl
xchg
sbb
aam
cmp
lods
xor
cmpl
enter
cmp
xchg
jle
and
and
jl
jg
add
rcrb
lods
cmp
lods
sub
mov
or
pop
mov
xor
out
leave
jecxz
or
push
movsl
fidivrs
sub
mov
dec
adc
fcomps
scas
daa
insb
mov
push
rorl
imul
adc
mov
popa
stos
lret
enter
hlt
add
imulb
imul
insb
sbb
arpl
inc
sarl
or
dec
push
in
dec
xor
loope
jg
push
icebp
fsubl
mov
mov
xchg
adc
pushf
pop
enter
hlt
loope
jge
xchg
testl
xor
shll
mov
jo
mov
dec
push
adc
inc
ret
cli
push
xchg
push
pusha
add
xchg
jbe
pop
loop
cmc
pop
cltd
xor
pop
mov
pop
sahf
test
mov
push
sbb
xchg
jp
mov
out
ja
mov
aas
inc
out
repz
shl
scas
jne
xchg
mov
je
mov
outsl
cmp
aam
cmpsl
mov
loope
mov
ss
or
outsb
mov
int
or
jecxz
cmc
dec
push
push
jge
push
push
lds
push
pushf
je
pause
rcll
xchg
dec
mov
cmp
mov
cmpsb
ljmp
xchg
pop
xor
arpl
mov
and
mov
pusha
ss
mov
cmp
dec
icebp
clc
insl
mov
push
jns
push
mov
add
scas
lock
adc
jge
ja
leave
cmp
lock
insl
repnz
stos
mov
shl
xor
push
jns
xchg
cltd
mov
cs
movl
fsubrl
cmpsb
xchg
sbb
xor
fwait
or
cmp
or
aad
rcr
lods
movsl
cmp
mov
enter
push
ljmp
cmp
xchg
sbb
jae
popa
cmpsl
cmpsb
sbb
adc
push
pusha
jb
repnz
rorl
push
fstl
fdivrp
adc
clc
dec
lret
sub
dec
test
psubsw
adcb
xor
daa
lds
push
sti
lods
imul
ficompl
cmp
mov
mov
cli
cmp
push
pushf
or
sbb
outsl
fdivs
jmp
jmp
lcall
sub
push
insb
std
daa
dec
shrb
rcr
sbb
inc
pop
fs
jp
iret
add
cmpsb
out
sbb
in
lods
sar
fistpll
std
and
mov
scas
add
jb
out
test
cmp
testb
loope
push
push
jecxz
imul
ror
mov
inc
leave
lcall
scas
hlt
fmul
pusha
js
lcall
es
mov
leave
stos
int3
test
jns
aam
rcll
push
cmp
clc
cmp
jp
adc
xchg
daa
repnz
jg
fs
pop
test
lock
lods
lar
ljmp
xor
mov
and
test
test
pop
lahf
jae
xlat
or
sbb
imul
call
sub
dec
mov
dec
mov
jns
imul
adc
mov
mov
mov
pop
enter
sbb
cmp
pushf
ds
mov
lea
test
stos
int3
mov
push
adc
fdivr
mov
test
aad
cmp
ljmp
lret
orb
outsb
dec
xchg
lahf
push
js
mov
addb
and
in
lret
ret
rorb
push
sub
push
repz
enter
shrl
arpl
mov
dec
imul
leave
fistpll
mov
lahf
sub
scas
mov
xchg
cmp
cli
cwtl
adc
mov
in
in
dec
xchg
stos
inc
fdiv
dec
mov
cmc
add
mov
jae
dec
fistps
cmp
inc
lret
jb
sarb
loope
cmp
out
cmp
xor
cmp
or
enter
mov
pop
popa
mov
xlat
mov
pop
lret
aad
enter
mov
test
xchg
insl
pop
xchg
pop
insl
pop
xor
inc
push
sbb
jl
push
or
loope
les
sub
and
xchg
ljmp
jl
lock
xlat
outsl
fadd
adc
or
jg
in
lods
popa
dec
fiadds
insb
sbb
cmp
shll
and
adc
sbb
sbb
xor
in
lods
sub
and
mov
test
mov
mov
outsl
sbb
or
fld
push
cwtl
out
std
stc
lahf
inc
cmp
xor
mov
dec
jmp
inc
mov
add
sar
rcrl
push
dec
movsb
jo
xor
xchg
cmpsl
popl
mov
jp
adc
xchg
mov
popf
fwait
cmp
out
push
lret
adcb
je
loop
add
lods
mov
add
call
jnp
inc
mov
push
loopne
cmp
or
ror
int3
std
push
push
int
sub
adc
mov
out
add
inc
dec
pop
fwait
push
ficoml
xor
lret
jge
push
push
sub
ja
loopne
mov
aas
call
rcrb
lahf
jnp
clc
pushf
sub
add
mov
jb
stc
xor
xor
inc
inc
add
pop
pusha
push
std
scas
mov
sbb
inc
jmp
mov
sarl
repz
ss
inc
roll
adc
lods
jbe
adc
sub
shrl
push
ret
fdivs
dec
aad
jmp
push
movsb
push
xchg
and
jno
dec
jbe
adc
scas
hlt
test
add
shll
shrl
sub
jp
or
lcall
cltd
daa
and
aad
pop
adc
xlat
pop
inc
repnz
cltd
roll
or
insb
sbb
xchg
js
les
into
scas
pop
push
jns
xor
mov
cltd
mov
inc
ss
in
js
fisttpl
daa
mov
ret
fidivrl
cmp
and
scas
test
mov
push
push
fbstp
ds
in
daa
scas
xor
sbb
lahf
imul
outsl
mov
std
mov
sbb
fsubrl
cmp
insb
ret
pop
movsl
mov
xchg
xor
jge
sbb
dec
test
mov
jns
mov
cmp
mov
loope
out
mov
cmp
jbe
and
lahf
inc
xor
lret
sub
int3
mov
add
mov
jae
ljmp
pop
out
outsb
dec
sbb
inc
push
add
sbb
aad
mov
mov
mov
mov
test
sub
pop
dec
js
out
subb
mov
bound
cmp
or
add
adc
out
sbbl
and
mov
testb
cmpsl
or
pop
popa
loopne
dec
enter
iret
xlat
inc
in
lods
shll
cmp
int
stc
subb
push
call
pop
insl
push
xor
inc
out
cmp
inc
pop
std
push
xchg
addr16
mov
test
add
out
sub
test
jno
jecxz
pop
dec
and
mov
pusha
add
test
in
test
mov
push
jb
xchg
push
jnp
mov
mov
pop
push
notl
or
adc
mov
js
int3
push
fdivr
inc
cltd
mov
addl
jb
pop
xlat
int3
adc
push
add
int3
sbb
xor
xor
xchg
out
les
and
cmp
pop
and
outsb
gs
pusha
dec
inc
inc
ss
pop
jno
mov
jb
mov
movsl
fdivs
rcl
inc
fiadds
les
sbb
mov
jae
inc
adc
mov
mov
dec
icebp
fnstsw
inc
sahf
shrb
es
push
in
dec
outsb
pop
testb
or
stos
dec
fsubrl
cwtl
out
bound
in
in
fstps
jns
fidivl
push
pop
dec
cwtl
mov
dec
loopne
dec
scas
add
neg
fistl
in
aaa
push
ret
mov
and
adc
cmp
pop
or
notl
cmc
push
mov
sbb
lcall
xchg
add
imul
lcall
outsb
pop
bound
mov
cmp
sti
or
fstps
jbe
fld
cld
popa
sub
jne
inc
test
rorb
loopne
pop
pushf
int3
cwtl
push
jb
in
cmpsb
cmp
dec
aas
xor
jecxz
ret
add
and
push
mov
mov
repnz
cs
movsb
fidivs
lret
dec
pushf
fwait
xchg
push
or
sbb
dec
and
scas
push
arpl
lahf
pusha
xchg
sti
les
shrl
lret
inc
pop
aaa
insb
push
rcrb
lcall
testb
or
cmp
shl
sub
test
mov
pop
dec
add
mov
add
sbb
sub
add
cmpl
lods
sub
mov
mov
jecxz
mov
test
jecxz
inc
xchg
pop
mov
stos
push
les
je
cmpsb
cmpsb
mov
xchg
inc
icebp
in
lock
jae
adc
fincstp
and
jg
dec
repnz
insl
movsl
sahf
mov
and
mov
lcall
push
mov
dec
and
repz
jge
scas
pop
push
xor
cli
call
cmpb
leave
popa
inc
fcoms
cmp
pop
iret
or
ret
sub
xchg
ds
mov
imul
mov
imul
fwait
or
scas
dec
add
ds
cmp
movsb
inc
xor
js
ss
mov
xor
rol
jns
xchg
sahf
inc
sbb
insl
push
and
pop
add
and
mov
lret
sarb
sbb
adc
movsb
inc
int
cwtl
jo
or
inc
add
push
cmp
sub
movsb
cmp
adcl
push
mov
adc
rclb
jl
sub
push
and
rcll
call
rcl
mov
mov
cmp
mov
mov
xor
adc
loop
xchg
sbb
cmp
outsl
xor
jge
jne
int3
mov
in
aaa
inc
pop
ret
or
pop
sbb
jae
sub
mull
fbstp
imul
jl
mov
pop
icebp
mov
jae
bound
cmpsl
loopne
test
adc
or
ljmp
fs
push
loopne
xchg
sbb
mov
cmp
jmp
std
iret
adc
pop
xor
jno
pop
jo
xchg
insl
mov
push
notb
add
jle
mov
in
xchg
and
scas
orps
test
ficomps
fsubrl
inc
outsl
icebp
std
or
sbb
sub
mov
ret
insb
mov
cli
cmc
mov
sahf
fisubl
or
jno
shr
js
sub
adc
inc
nop
out
popl
mov
adc
or
xchg
xchg
icebp
sbb
sub
cld
ror
stc
cmc
mov
xor
rorl
sbb
aam
lds
sbb
in
mov
sub
sbb
inc
adc
out
ficoml
insb
hlt
xchg
insb
xlat
icebp
sarl
fwait
adc
repz
push
push
inc
or
outsb
daa
popf
mov
mov
in
scas
jp
shll
sub
cwtl
mov
jne
sahf
and
sti
fidivrl
ss
adc
mov
and
dec
push
mov
cmp
sbb
outsl
outsl
xor
inc
or
rcrb
cmpsb
outsb
sub
fnclex
out
jp
popf
mov
lods
es
lock
pusha
adc
adc
scas
dec
xchg
mov
lahf
faddl
sbb
xlat
imul
xor
mov
fnsave
mov
sub
push
mov
lahf
sub
and
push
cwtl
xchg
mov
xor
js
mov
add
or
fcoml
ja
js
add
or
sub
inc
add
push
and
lret
aad
enter
repz
aam
outsb
jmp
cmpsb
fcoms
fsubl
dec
push
or
dec
fadds
in
cs
mov
mov
add
jne
adc
mov
sarb
xchg
jl
je
sbb
movsb
dec
mov
dec
lret
pop
pop
cwtl
push
subl
je
test
inc
mov
push
mov
int
push
iret
or
and
jmp
lahf
jae
mov
fdivrs
cmpsl
push
jno
cmpsb
add
sub
pusha
pop
push
mov
pop
mov
or
stc
jle
sbb
sbb
rcll
mov
mov
sub
movsl
gs
int
sub
lcall
xor
push
xor
push
lret
dec
or
shll
neg
push
adc
fwait
aam
fisubs
xchg
hlt
xor
test
jp
pop
outsl
jge
xchg
lock
xor
shll
sti
out
inc
jae
and
jne
pop
push
or
jne
stos
xchg
sarl
adc
outsb
arpl
roll
fmull
mov
mov
cmc
cs
fcomps
mov
xchg
mov
sbb
push
xchg
daa
inc
inc
int3
stos
dec
call
imul
xchg
mov
out
pop
fmull
jg
dec
lret
testl
addr16
fwait
jp
inc
sbb
mov
aas
repnz
pusha
mov
xchg
fldt
lret
into
add
xchg
int
je
in
inc
in
lock
mov
std
pop
add
and
mov
shlb
dec
outsl
ja
fisubl
test
mov
test
xchg
pop
push
cmpsl
xchg
bound
lods
fstpl
cmp
dec
mov
mov
call
loopne
mov
lcall
or
pusha
cmp
add
or
in
cmc
sub
ror
and
mov
xchg
bound
int
leave
mov
cltd
les
jmp
lea
sub
add
inc
lcallw
sbb
mov
addr16
aad
xchg
xchg
xchg
inc
pop
jae
inc
adc
mov
movsl
and
mov
test
mov
out
cltd
dec
in
dec
fistl
jo
js
xchg
sub
jne
mov
pop
jl
daa
mov
cmpsl
lcall
lods
jecxz
add
int3
in
stos
aam
rol
leave
cmc
in
xchg
push
rorl
rclb
addr16
sub
lret
out
jp
js
popa
xchg
int3
outsl
mov
daa
cmp
mov
mov
adc
sbb
mov
cli
fistl
adc
lcall
lds
adc
outsl
out
lds
dec
push
insl
int
out
jns
jne
lds
mov
or
scas
adc
adc
sub
cmp
dec
pop
movsb
xchg
imul
or
movsb
inc
test
push
xorl
adc
mov
sahf
dec
mov
mov
rorb
aad
pcmpeqb
daa
in
fwait
shr
sbb
sub
cmp
sub
fwait
insb
pop
enter
testb
mov
push
mov
data16
jecxz
jl
pop
mov
lds
sub
jecxz
sahf
cmpsl
cmp
add
sub
and
call
mov
jmp
mov
sbb
push
ficompl
cmc
lcall
push
add
and
and
scas
mov
sbb
push
lds
pop
sbb
lcall
inc
in
mov
inc
roll
and
mov
insb
jmp
sbb
push
jbe
or
jp
test
xchg
jp
mov
jl
test
cwtl
mov
dec
and
cmp
xor
bound
out
pushl
adc
out
add
call
mov
jge
dec
sbb
and
orl
leave
pop
push
js
ds
or
dec
pop
sub
inc
pushl
lods
sbb
xchg
lods
pop
je
cld
adc
outsb
daa
sbb
into
stc
data16
mov
mov
xchg
call
aam
test
mov
aas
rcl
or
lret
or
shlb
push
jo
inc
push
dec
xchg
pop
les
push
cmc
or
mov
out
mov
push
add
mov
mov
mov
mov
adc
xchg
out
push
aam
sarb
pop
stos
sahf
mov
push
jg
sbb
xor
ds
dec
inc
lret
dec
rorb
outsb
outsl
movsl
ret
jecxz
xchg
iret
jo
xor
ds
xchg
push
jno
xchg
mov
je
call
outsl
mov
adc
sub
mov
push
push
pop
clc
xchg
lods
rcrl
inc
pop
mov
mov
pusha
xor
sbb
dec
cmc
sti
iret
sub
dec
pop
stc
xchg
and
shll
inc
sbb
mov
imul
mov
lret
push
std
and
js
push
jbe
mov
mov
in
jp
inc
jnp
jl
dec
fdivrp
in
sub
sub
adc
repz
mov
iret
outsb
pushf
mov
shlb
popl
es
out
push
jbe
push
addr16
inc
sahf
mov
insl
push
leave
in
adc
mov
movsb
ja
or
jbe
mov
adc
or
xchg
mov
cmc
fldenv
loop
shll
ja
dec
addl
mov
jmp
or
roll
lcall
xchg
sub
sub
cmp
jg
cld
push
cmp
sub
insl
xchg
out
dec
jb
cmp
stos
push
mov
adc
push
xchg
cmp
fs
sbb
test
sbb
add
inc
fnstsw
dec
xchg
sti
and
pop
mov
repz
test
and
testl
pop
int
mov
out
fcmovb
and
and
inc
push
push
iret
pop
jnp
out
mov
jo
sub
lods
lret
jge
and
and
call
int
cmp
arpl
cmp
xor
jecxz
arpl
or
or
icebp
jmp
adc
sarb
mov
mov
fildll
ds
jp
fnstenv
shlb
repnz
adc
inc
jmp
in
test
mov
lods
jle
repz
inc
leave
cmp
push
sub
xchg
jg
mov
cmp
jno
pop
jb
shlb
fwait
idivl
and
xlat
push
xor
adc
sub
daa
jle
stc
pop
out
mov
stos
movsl
roll
flds
shlb
mov
jae
add
into
fistps
xorb
pop
xor
jns
hlt
cmp
test
test
push
dec
or
sbb
push
fiaddl
push
adc
cmp
repnz
inc
gs
inc
ds
aas
adc
sahf
inc
pop
jecxz
cmc
sbb
push
sahf
mov
flds
pop
sbb
out
xor
mov
mov
jnp
add
pop
mov
inc
jb
and
shrl
lret
in
cmpsl
and
pop
ds
mov
aaa
out
cmp
mov
jae
out
gs
pop
sbb
cli
jmp
adc
pop
orb
adc
roll
mov
pop
mul
js
push
pop
out
iret
and
jno
dec
sub
xor
dec
adc
jp
push
mov
mov
ret
add
pop
push
mov
test
ret
mov
pop
mov
js
jo
inc
push
pushf
add
add
pop
and
jmp
mov
jns
lock
mov
ljmp
cmp
arpl
xlat
scas
or
mov
outsb
adc
cmp
push
pop
inc
xor
les
and
lods
mov
or
jecxz
orb
jo
ret
dec
stc
dec
xchg
ss
in
jp
jb
pop
sbb
xlat
loop
xchg
or
cmpsl
es
addr16
mov
xor
fsubrs
inc
pop
xchg
xorb
push
enter
mov
push
xlat
add
xor
in
in
scas
in
cmp
ds
cmpsl
shll
test
jae
ljmp
cld
sbb
cld
stos
jne
pop
push
rcl
mov
adc
push
lds
push
fstl
pop
mov
movsl
scas
jp
clc
jle
mov
fidivrl
xchg
mov
addr16
dec
lcall
push
mov
add
push
sbb
and
into
insl
cmp
push
scas
outsb
dec
daa
icebp
push
sbb
sbb
add
dec
dec
psadbw
mov
jae
dec
sbbl
jge
sbbb
cli
cmp
and
jmp
mov
pop
int3
xchg
in
jno
pop
or
popf
test
imulb
add
dec
mov
stos
fsubrp
loop
adc
or
rcr
in
lock
movsl
in
mov
jns
jecxz
pop
or
adc
sub
das
fistl
push
mov
add
lcall
popa
out
push
or
push
dec
adc
enter
lea
pop
test
xor
dec
xor
leave
shlb
push
jb
leave
popa
pop
pusha
rcrb
rcrl
lcall
insl
push
push
insb
add
int
leave
mov
bound
mov
xchg
dec
jle
loopne
lds
xor
xchg
jmp
xchg
lret
jmp
jg
ficomps
imulb
mov
addr16
repnz
xor
pop
pop
xor
push
inc
cld
add
xlat
fistps
mov
call
sbb
repz
jae
and
pop
add
adc
das
sbb
dec
in
pushf
push
jle
inc
aas
clc
push
enter
mov
or
add
xor
iret
push
mov
jecxz
cmpsb
push
mov
loope
mov
sbb
sti
aaa
jae
add
addr16
shll
lods
sahf
mov
daa
sub
popf
test
jo
dec
iret
movsl
add
xchg
xchg
es
pop
scas
in
neg
adc
dec
ja
and
inc
xchg
lret
roll
js
mov
push
dec
jo
or
pop
and
imull
outsb
or
popl
es
imull
pushf
pushf
lret
jns
mov
leave
sub
insb
ud1
adc
xchg
je
cmp
rcrb
imull
out
add
sbb
mov
dec
in
in
shl
into
ficomps
dec
push
cmp
movsl
packssdw
push
add
gs
jmp
pop
out
inc
add
test
cs
mov
sub
fistpll
xor
rsm
xor
xor
push
push
outsb
es
xor
ljmp
inc
inc
xchg
mov
loope
sti
fld
jo
mov
jge
hlt
ret
lea
cmpl
jl
or
int3
mov
jne
push
mov
xchg
mov
arpl
icebp
inc
icebp
int3
push
push
mov
or
dec
bound
dec
sarl
cwtl
mov
loop
int3
add
outsb
call
loopne
xchg
xor
in
push
lahf
daa
push
and
xchg
cmc
sbb
and
arpl
orl
jae
cmp
sbb
std
jbe
faddl
pushf
push
cwtl
mov
in
daa
subb
inc
sbb
cltd
aad
xchg
pop
mov
fsub
xor
adc
add
mov
cmp
dec
sub
xchg
push
and
incb
enter
adc
jp
or
jnp
pop
or
mov
fisubrs
mov
and
mov
fbld
dec
cwtl
inc
sbb
inc
xor
mov
flds
fs
pop
jbe
out
adc
int3
shll
jmp
out
movsb
fwait
pop
jmp
mov
lret
or
in
leave
out
pop
and
mov
std
mov
jbe
inc
sbb
lods
jnp
arpl
add
movsb
je
sub
cli
sub
push
inc
sbb
loope
stos
rolb
xor
push
in
cmc
xchg
aas
cli
jno
or
or
out
gs
rcll
rclb
mov
sbb
xor
pop
adc
adc
lea
fildl
cmp
pop
cmpsl
inc
out
jmp
stos
lods
fldln2
push
aam
dec
mov
insb
out
pop
call
xchg
adc
pop
pop
pop
sbb
xor
je
out
aad
adc
andb
push
mov
adc
testb
pushw
add
mov
mov
dec
iret
dec
loop
jbe
xor
xor
pop
mov
jge
lcall
iret
xlat
sbb
dec
dec
mov
int3
cmc
inc
xchg
jmp
and
cmp
cmpsb
in
mov
fldenv
sti
ja
mov
pop
pop
pop
add
add
adc
and
xchg
in
outsl
mov
jno
mov
adc
cmp
mov
std
cmp
mov
mov
cltd
jnp
sbb
inc
jle
dec
xor
sbb
pextrw
bound
cmp
add
cmp
les
gs
loopne
sbb
cltd
sarl
cmp
add
sbb
aas
jbe
mov
aam
mov
lods
and
mov
inc
inc
pushf
sbb
repnz
bound
sbb
mov
push
dec
loope
call
shlb
xor
lret
frstor
xchg
mov
lds
inc
jl
jg
pop
inc
cld
inc
mov
jb
popf
in
loope,pt
loope
dec
xor
dec
aaa
stos
fnstcw
add
movsb
outsb
jo
lock
popa
sub
jecxz
nop
ss
push
rcr
jbe
pop
xor
in
das
push
mov
pop
enter
push
incb
ds
pop
pop
mov
sbb
das
lods
push
dec
mov
lods
mov
test
bound
enter
and
jns
js
push
fistps
and
adc
out
das
pop
mov
push
ds
or
dec
xor
add
jae
mov
mov
int
jne
std
xchg
cmp
popl
mov
inc
sub
push
push
daa
jp
adc
add
adcl
xchg
shrl
movsb
loope
rcl
push
push
jb
cmpsl
add
scas
data16
aad
shl
adc
icebp
test
mov
mov
dec
mov
pop
push
dec
hlt
shll
and
lds
or
int3
add
push
xor
push
sbb
stos
insb
fwait
andl
mov
idiv
xchg
loope
pop
mov
lret
dec
mov
dec
lods
fs
fmuls
inc
in
std
jmp
or
push
xchg
aas
cmp
add
jns
mov
pop
push
outsl
loope
add
movb
push
in
mov
mov
fistps
nop
cmp
adc
cmp
ljmp
aam
outsl
mov
mov
test
leave
push
add
dec
or
shlb
xor
mov
sahf
add
bound
push
and
and
fmull
push
mov
shrb
dec
cmpsl
jo
shr
mov
lods
and
aam
dec
mov
lock
xlat
aas
addr16
dec
push
repnz
rcr
xor
mov
push
in
out
ret
jg
dec
inc
push
sti
mov
je
jne
sub
xchg
xchg
cmp
sub
push
sub
jae
lret
pop
shll
mov
jge
push
hlt
or
out
mov
push
sbb
or
addr16
mov
xor
inc
sub
nop
stos
scas
ss
pop
loop
imul
xchg
outsb
fcoml
lds
ss
nop
adc
rcr
and
mov
and
adc
pop
movl
mov
rolb
ret
loop
lret
dec
xchg
adc
pusha
push
notl
jb
jnp
ret
jp
leave
jge
movsl
fcomps
ret
insb
enter
lahf
ret
int
mov
jb
fdiv
jmp
stos
lock
adc
pop
pop
outsb
and
mov
xor
and
add
mov
mov
xor
ret
ss
mov
jo
hlt
push
lcall
adc
cld
push
mov
jmp
int3
lcall
andb
clc
mov
std
jp
push
or
call
nop
inc
xor
lret
orb
clc
cmc
incb
or
mov
es
shll
adc
push
inc
aad
lea
pop
sbb
imul
and
enter
shlb
lock
lods
repz
daa
jmp
out
mov
inc
cmp
insl
fsubr
adc
movsb
adc
js
lock
aas
fnstcw
in
jo
lods
lds
ss
or
adc
mov
sub
push
pusha
fstps
push
and
loopw
push
hlt
dec
sub
iret
jecxz
push
aam
inc
push
icebp
in
pcmpeqb
push
in
dec
lahf
inc
inc
add
push
repnz
mov
test
inc
jg
push
add
sub
das
xchg
mov
leave
inc
lea
dec
dec
xchg
push
movsl
adcl
add
stc
mov
imul
lock
jb
jg
push
mov
pop
sub
nop
adc
sarl
mov
mov
or
push
push
imulb
inc
insl
cmp
mov
div
adc
push
jle
adc
dec
in
push
fmuls
jle
push
or
pop
cmp
push
sbb
test
inc
mov
pop
aaa
cmp
les
sbb
enter
loope
lods
push
mov
mov
pushf
jmp
pop
sub
push
cmp
jo
lret
push
in
fmul
sti
scas
out
stc
mov
pop
test
fcomps
add
sar
lcall
in
pop
jnp
inc
fisttpll
sbb
data16
pop
jg
inc
popa
pop
jl
cmp
xchg
or
in
pop
push
push
cmpsb
and
jp
push
xchg
std
outsl
fs
mov
cmp
fiadds
hlt
jmp
pop
sbb
xor
leave
dec
jecxz
cmpsl
jo
das
std
popa
lcall
in
inc
iret
inc
jb
adc
push
bnd
sub
push
xchg
sbb
jbe
pop
jbe
mov
ret
mov
or
jnp
push
inc
ror
pop
inc
mov
insb
out
add
test
pusha
and
add
out
jl
push
push
and
pusha
push
pushf
xchg
add
mov
jmp
pop
lret
mov
mov
mov
aam
test
mov
out
cmovae
mov
or
in
sti
mov
ja
and
aad
cltd
dec
jne
roll
cmp
and
aaa
xchg
pop
push
ficomps
or
mov
inc
inc
aad
cltd
call
aas
fcmovnb
mov
mov
lcall
frstor
xor
mov
jl
jmp
push
imul
xchg
jo
cmp
bound
lcall
pop
fidivl
adc
mov
les
cmp
and
fimuls
adc
mov
cmp
mov
mov
xorb
es
flds
inc
jmp
insb
icebp
test
shlb
jecxz
not
popf
push
or
sub
les
push
popf
insl
lret
mov
push
cmc
fbld
mov
fcom
mov
mov
out
mov
push
add
mov
scas
ficompl
std
inc
pop
cmpsl
cwtl
mov
stos
insl
fisubs
xchg
sbb
pop
fldl
gs
push
test
cwtl
shrb
insl
out
fisubrs
daa
out
cmovle
in
iret
pop
ret
mov
in
mov
hlt
cs
mov
mov
int
sub
fldenv
or
jmp
xor
add
jae
mov
movsl
stos
and
test
lds
and
inc
fbstp
add
int
mov
mov
stos
push
mov
and
imul
pop
shll
cwtl
mov
jne
pop
ja
inc
and
sub
inc
mov
dec
dec
sbb
and
or
lret
sahf
enter
xlat
icebp
xor
negl
add
mov
push
mov
jae
inc
shrb
and
xor
hlt
pop
mov
push
lret
add
dec
lods
dec
or
loopne
cmp
inc
xor
push
pop
cmp
mov
aam
outsl
lret
cmp
dec
add
xor
into
test
inc
ret
andb
fnsave
fdivp
arpl
cmc
xchg
out
pop
adc
sar
sbb
jnp
sarb
adc
xor
xor
pop
out
xchg
or
sub
call
in
mov
mov
xor
scas
daa
imul
jo
mov
pop
push
shrb
pop
mov
sbb
push
test
pop
jmp
xchg
sbb
lods
and
inc
mov
and
cmp
movsb
fstpt
mov
sub
push
inc
sbb
aad
xor
iret
sti
test
pop
sub
fiaddl
mov
sbb
or
jecxz
jl
inc
push
js
std
gs
bound
aas
adc
pop
test
pop
xchg
lea
pushf
sbb
jge
pop
or
iret
adc
ss
mov
mov
icebp
popa
xor
sub
aad
or
mov
les
add
cmp
adc
loop
pop
rcrb
dec
sub
mov
cmc
dec
inc
mov
lahf
or
lahf
or
push
ds
imul
cmpsl
and
cld
sbb
xchg
and
sub
and
push
popa
cmpsb
lea
cmc
repnz
jge
dec
jbe
sbb
cmp
add
sti
mov
cmp
dec
adc
mov
loop
xchg
lret
bswap
int
pop
inc
dec
add
cmp
adc
fdivl
push
inc
cmpsl
push
test
jbe
cmpsl
adc
lea
nop
sti
fistpll
cli
push
cmp
dec
jae
push
sbb
movsb
and
lahf
je
pop
jecxz
adc
das
aam
es
ja
xchg
fiaddl
cwtl
enter
sub
sbb
mov
lock
lahf
sub
pop
movsb
sbb
inc
rcrb
lock
vunpckhpd
sbb
lock
sbb
cmc
sbb
fildll
sbb
mov
neg
outsl
aad
mov
xlat
cli
jle
lods
pop
mov
push
jne
push
sbb
jg
sub
lcall
sbb
pop
cmp
cmp
rcl
xchg
hlt
into
jge
mov
in
popa
cmpsb
aam
or
sub
test
testb
in
adc
or
dec
mov
into
ja
add
lock
mov
cmp
in
loopne
add
loope
test
shlb
dec
xchg
sbb
stos
dec
mov
loopne
pop
mov
jmp
gs
pusha
and
movsb
fsubs
add
pop
xchg
mov
push
add
jge
fs
decl
mov
sub
jae
insb
cmp
pop
inc
cmc
adc
push
fimull
mov
xlat
mov
fadds
add
addb
fnstenv
xor
sub
out
sbb
and
rcrb
push
inc
adc
push
popa
pop
test
jnp
in
out
add
cmp
call
sahf
sbb
fstpt
jle
push
push
and
lcall
cmp
gs
and
inc
xchg
dec
jae
scas
xor
daa
adc
sahf
inc
iret
xor
cmc
testl
clc
jo
cmp
add
insl
mov
jg
out
scas
mov
push
xor
shll
imulb
or
adc
fimull
cmp
lea
pop
cmpsl
xchg
cltd
notl
cmp
add
adc
mov
insb
push
push
test
inc
push
mov
dec
jmp
nop
or
out
push
pop
sbb
nop
cmpb
sbb
sbb
pushl
jge
shlb
xor
sbb
push
jmp
cli
push
test
and
fs
xor
sbb
jl
cmpsb
lea
mov
fimull
pushf
sahf
or
xor
lds
stc
xchg
cmpsb
lret
xor
popa
cmp
adc
testl
or
lahf
hlt
inc
aad
jo
aad
std
aaa
sbb
push
mov
test
xchg
sub
cli
push
in
lcall
mov
stos
xchg
pop
fists
into
sbb
popa
shrl
jns
push
push
xchg
xlat
xchg
xchg
sbb
push
cmp
and
outsl
sbb
stos
push
mov
jl
or
aam
mov
jno
sbb
lock
pop
mov
sub
cmpsl
mov
push
jne
insl
push
shl
push
fwait
jns
lods
jmp
mov
cmc
xchg
pop
xor
cmp
push
loopne
insl
fcmovb
pop
jne
dec
sahf
add
push
sbb
movsl
aas
test
fimuls
andb
cmpsb
stc
shl
or
movsl
xorl
nop
popf
jl
mov
sahf
mov
jnp
aaa
popf
xchg
stc
mov
cld
add
add
xchg
fbld
push
or
cs
lock
xchg
imul
push
and
mov
sub
mov
iret
clc
jp
dec
and
int3
jns
in
stos
sbb
test
insl
repz
jne
lret
cmpl
jmp
sbb
add
out
sub
pop
dec
pusha
sub
xlat
fidivl
cmpsb
xchg
jmp
inc
sub
scas
jns
dec
mov
push
popf
in
cwtl
add
rorb
add
mov
mov
stos
leave
outsl
test
cltd
js
sub
mov
mov
jne
cmp
popa
jbe
mov
std
scas
or
sub
stos
ss
rclb
repz
xor
adc
push
dec
lods
mov
dec
mov
push
test
inc
jp
sub
sub
lret
stc
jmp
mov
pusha
push
leave
test
jle
xchg
or
fwait
push
push
sbb
lcall
cmc
pushf
or
insb
dec
and
mov
pop
adc
pop
xor
push
fisubl
push
jecxz
jmp
xor
std
out
jns
add
pop
lock
outsb
dec
push
js
or
dec
mov
sbb
insl
or
add
xor
testb
cmp
cmp
push
ret
adc
sahf
sbb
push
les
iret
bsf
cld
add
js
enter
movsl
dec
sahf
jg
mov
rcr
dec
or
xor
add
mov
or
rcrb
arpl
sar
lahf
or
dec
xchg
pusha
sbb
insl
jno
sub
cwtl
adc
xchg
jecxz
mov
cmp
out
popa
imul
fistpl
pop
push
shlb
lahf
mov
test
inc
sti
popf
divb
mov
movsl
and
add
dec
sbb
mov
jae
pop
imul
jmp
fisubl
loope
pop
dec
loop
hlt
js
and
rcll
sbb
push
mov
gs
icebp
pop
in
iret
aam
hlt
mov
xor
lods
sti
cld
cmp
xor
addl
mov
lcall
scas
inc
adc
lock
xchg
sub
push
cmp
push
inc
cwtl
mov
xchg
addr16
or
leave
sub
iret
rclb
aaa
nop
push
pop
ret
data16
and
dec
bnd
inc
inc
jp
insb
push
jo
mov
cs
sbb
inc
add
cmc
repz
mov
push
inc
pop
sub
push
inc
adc
in
popa
je
loop
xchg
dec
pop
fadd
outsl
cld
sbb
mov
inc
xor
imul
inc
add
push
rcll
int3
inc
or
dec
in
das
mov
mov
pop
ljmp
in
mov
inc
roll
loope
sub
sub
jmp
lcall
pop
fdivrl
stos
add
mov
push
push
aad
outsl
popa
xchg
lahf
xchg
jae
lahf
push
push
int
ljmp
lods
popf
pusha
cmp
jbe
sbb
fcom
lcall
adc
fisttps
aaa
rcr
dec
popa
fcmovbe
out
adc
cmp
xor
and
add
adc
dec
mov
dec
mulb
psraw
push
shlb
mov
add
iret
push
push
loop
add
stos
push
in
inc
sbb
pop
push
movsb
mov
addr16
cmpsl
jbe
fs
mov
xchg
pop
mov
ret
lahf
shll
push
outsb
pushf
push
mov
jmp
pop
sub
or
aas
push
cltd
fadds
push
adc
push
addr16
sub
jo
mov
loop
or
fcomps
adc
fcompl
mov
aas
lcall
fists
int
push
imul
pop
data16
push
lock
xchg
cld
data16
sbbl
imul
fadd
les
push
inc
mov
and
adc
jmp
imul
sbb
mov
loope
mov
pop
dec
mov
pusha
mov
fistpll
adc
jns
imul
call
lret
popa
test
xor
fidivs
or
mov
sub
jg
sti
xorl
les
fbstp
sub
sub
aam
fwait
loope
inc
jmp
incl
in
test
cwtl
xor
mov
dec
xchg
aaa
mov
mov
or
and
loopne
dec
imul
mov
sub
pop
psrlw
pop
stc
mov
loope
ret
or
pop
or
rcrl
jle
fimull
inc
pop
lahf
loopne
jno,pn
xchg
adc
int3
repnz
ds
mov
dec
or
test
pop
inc
fldenv
adc
or
pop
ja
mov
mov
cmp
dec
lcall
ljmp
scas
nop
jmp
sub
ret
aas
xor
mov
and
mov
cmp
mov
test
dec
inc
jb
jno
jmp
das
push
sbb
stos
insl
int
je
push
mov
fstl
mov
pop
in
push
inc
sbb
xchg
lahf
and
imul
inc
sbb
mov
xor
xchg
add
aas
pop
movsb
ret
insb
dec
rclb
out
dec
add
adcl
jge
adc
xchg
or
dec
pop
in
mov
scas
ret
test
outsb
mov
test
mov
loope
loopne
pop
jle
push
loopne
stos
sbb
add
jns
and
and
sub
lods
mov
xchg
fnstsw
dec
jmp
push
ja
or
in
fadds
fildl
shll
pop
sbb
std
xchg
xor
inc
mov
cli
addr16
and
sahf
ror
xchg
cmp
push
loop
jle
sbb
xchg
test
nop
inc
ret
or
xchg
notl
sbb
pop
mov
test
ret
stos
popf
insb
xchg
xor
adc
bnd
into
mov
mov
lahf
push
pop
or
push
inc
lock
cmp
gs
jmp
mov
jbe
lods
ljmp
xor
dec
jae
jae
dec
mov
mov
and
scas
lea
in
repnz
or
jo
stos
dec
lret
push
sbb
mov
rorl
jnp
int
popl
ss
and
loopne
inc
and
ss
jge
testl
dec
sbb
ljmp
xchg
mov
mov
movsb
pop
out
cmpsl
push
test
add
icebp
inc
loop
add
fcomps
dec
xchg
pop
loopne
pop
pop
pop
or
lds
inc
jl
or
sbb
in
push
mov
call
ljmp
mov
mov
dec
jl
adcb
add
sub
in
sub
test
mov
mov
add
push
mov
inc
test
xor
xor
mov
add
or
pop
int3
fchs
inc
cmp
rorb
xchg
mov
cmc
add
ds
add
inc
xchg
cmp
sbb
dec
leave
mov
ljmp
cmp
mov
jbe
push
push
jp
xor
in
in
repz
int3
or
pop
jbe
inc
push
cs
sbb
jb
arpl
in
mov
je
push
mov
sbb
add
outsl
jno
daa
in
mov
rcrl
stc
sub
scas
loopne
cltd
lcall
into
push
mov
loop
add
js
aad
mov
pop
xchg
pop
xchg
xchg
pop
sbb
sub
lret
mov
add
clc
cmp
fidivl
push
repnz
int3
pop
ret
add
ret
inc
inc
add
daa
cmp
sub
pop
iret
or
sahf
mov
fs
and
mulb
jb
mov
mov
adc
cmp
in
iret
leave
out
lea
and
push
mov
and
push
sarl
mov
cltd
in
js
mov
xor
rorb
iret
ffree
push
xor
inc
in
fldcw
sbbl
cmp
and
movsb
push
jmp
je
xor
imul
pop
cmp
shl
arpl
push
dec
pusha
fsubrs
cli
dec
and
sbb
push
loope
icebp
or
inc
repnz
and
mov
mov
adc
xor
bound
rorb
lods
leave
inc
mov
popf
inc
movq
xor
fidivrs
cmpsl
and
iret
or
cmp
xchg
pop
mov
xchg
cmp
add
fs
push
movb
dec
movsl
or
mov
sarl
out
and
loope
xor
mull
xchg
in
movsl
out
xchg
fwait
pop
jns
sbb
xchg
sub
jle
insb
sarb
out
or
insb
mov
sub
dec
test
or
les
es
add
xor
cmpxchg
jmp
inc
rcll
push
push
or
xor
into
cmp
mov
xor
mov
lcall
ficoml
outsb
dec
jbe
jo
jb
adcb
xor
ja
hlt
jge
orl
add
dec
mov
movq
daa
jno
popa
bound
jnp
into
jo
pop
rclb
push
pop
mov
lcall
push
das
pop
fldl
pushf
inc
pushf
jns
mov
lods
mov
jns
ds
dec
mov
push
push
repz
and
out
lock
lods
aad
push
imul
adc
stos
mov
add
imul
jns
mov
cwtl
lahf
inc
inc
inc
aad
cmp
pushf
fstpt
push
iret
mov
ltr
call
sub
or
outsl
mov
and
cld
iret
rcr
and
cmp
ror
jp
data16
loopne
push
out
jmp
inc
cmpsb
movsb
es
ljmp
hlt
enter
push
jbe
adc
sbb
cmp
cmp
aaa
mov
rorb
xchg
rclb
rorl
and
shrl
jnp
or
sbb
jns
xchg
addr16
lcall
mov
out
andl
mov
add
setb
loopne
lds
out
ret
popf
outsb
pop
mov
pop
loopne
or
aaa
xor
pop
out
jne
mov
fbld
sbbb
lds
sbb
adc
cmp
cmc
fwait
or
fdivrl
fninit
iret
dec
leave
mov
js
shll
inc
sar
or
mov
in
cld
or
aad
push
xor
not
loop
push
push
fcomps
out
movsb
jne
stc
cmp
out
rorb
les
fmulp
repnz
xlat
pop
mov
lcall
and
out
mov
cmc
mov
dec
jb
mov
jb
fisttpl
cmp
push
mov
fsubs
inc
icebp
and
cmpsb
aam
dec
lods
inc
test
adc
mov
dec
in
lds
cmp
xor
and
cmp
bound
insb
mov
insl
out
cmpsl
mov
push
sbb
out
lock
mov
fisubs
jg
dec
sub
out
fwait
lods
and
xchg
fldt
lock
pop
jg
mov
mov
fs
ds
imul
inc
test
das
xlat
cwtl
sub
cmp
jb
ja
stos
xchg
leave
jns
test
sub
add
push
scas
les
mov
rorl
and
jnp
scas
call
fisubrs
clc
lret
push
jg
cmp
xchg
fs
sbb
mov
arpl
mov
sub
jnp
sbbb
testb
push
aam
add
add
jnp
movsl
sub
push
pop
in
mov
lcall
das
out
cmc
xchg
mov
out
adc
je
mov
std
mov
call
cmp
int3
loope
arpl
negb
pop
test
fists
push
cmp
sub
ljmp
rclb
mov
lock
shr
add
dec
lea
push
in
mov
lods
test
cld
les
dec
or
xor
lret
sub
or
adc
and
sbb
je
addl
sbb
dec
add
dec
stos
lock
dec
insb
mov
jnp
insl
or
inc
imul
ja
hlt
ss
xchg
fildll
ja
mov
test
cmp
mov
mov
mov
clc
sub
adc
je
js
repnz
mov
push
mov
and
mov
stos
enter
mov
pop
add
cmp
mov
leave
insb
fcoml
cmp
xchg
imulb
gs
xchg
popf
jg
fstpt
and
jns
lods
lods
outsb
mov
pop
int3
mov
lock
pop
lahf
xchg
mov
call
inc
lcall
mov
dec
fisubrl
adc
arpl
loope
add
xor
sbb
sub
and
outsb
sub
fadds
mov
ret
imulb
jecxz
stc
fistps
mov
sbb
sbb
fwait
out
cmp
mov
sbb
mov
test
mov
nop
mov
jbe
popf
mov
add
call
mov
int3
sbb
mov
stc
mov
es
test
in
mov
bound
sbb
out
fidivrs
add
dec
mov
negl
sti
push
jb
cmpsb
movsl
sbb
push
fbld
mov
je
push
std
jg
xchg
fistpll
cmp
push
sahf
dec
jg
jo
sbb
fistpll
in
sub
das
inc
aas
fstl
mov
mov
pop
dec
push
mov
lcall
fidivl
or
pop
cld
add
mov
fmuls
lret
cltd
dec
or
add
pop
cmpsl
push
js
sbb
cmpxchg
cmp
test
ror
loop
xor
mov
push
cmp
and
jae
daa
cmpsl
mov
pop
adc
in
scas
mov
stc
lcall
lock
popa
jg
daa
sbb
ljmp
dec
jb
aad
fwait
outsl
jno
rolb
mov
clc
lds
dec
movl
cmp
and
movsb
daa
cmp
mov
add
xor
inc
push
jecxz
test
outsb
fcomip
sub
sahf
push
orb
iret
scas
aam
lock
mov
xchg
jmp
xor
add
inc
inc
lcall
enter
dec
imul
clc
inc
aaa
mov
xchg
das
cmp
imul
ror
sbb
or
fwait
and
loope
aam
sub
push
rcl
int
popa
or
into
inc
inc
pop
outsb
push
aam
mov
imul
push
incb
mov
mov
mov
insl
pop
in
js
xor
xor
push
push
mov
das
ja
sarb
mov
aam
into
or
push
mull
popf
jno
in
cmpb
je
test
stos
mov
sub
sub
loop
dec
mov
cmp
fmuls
lock
test
mov
or
dec
sbb
dec
movsb
gs
insb
fmul
stos
jmp
mov
fdivrl
push
lock
cld
aam
inc
nop
fwait
dec
adc
daa
mov
xlat
sub
pop
pop
sub
inc
in
inc
push
fmuls
xor
sub
loope
xlat
mov
sbb
push
cmp
scas
xor
icebp
es
sbb
fcompl
insl
xchg
rcrb
mov
inc
in
mov
inc
or
jnp
outsl
and
mov
cmp
push
dec
fmull
sub
ljmp
into
out
jae
into
push
test
xchg
sub
out
inc
jb
jo
pop
out
das
xchg
xchg
push
xor
dec
hlt
dec
push
push
mov
xor
or
cmp
sbb
dec
imul
andl
dec
adc
push
or
jbe
jge
mov
mov
push
scas
out
push
lret
push
xchg
clc
rcrb
in
and
scas
icebp
mov
sbb
leave
add
insl
outsb
loope
and
fcomp
push
es
into
inc
add
push
loopne
pop
mov
sub
sub
ror
dec
push
add
pop
out
pop
adcl
ljmp
push
or
jge
into
es
fstpt
pop
enter
cmpsl
loopne
in
sti
leave
push
pop
or
je
sti
insb
add
inc
cld
jno
mov
lret
cmp
jge
lret
xchg
jmp
in
gs
adc
mov
mov
int3
jecxz
and
test
push
ljmp
fistps
test
lret
xchg
negl
xor
js
sbbl
std
xorb
or
in
outsl
std
roll
test
nop
xchg
orb
cmp
sbb
pop
add
cld
jns,pt
iret
out
mov
mov
test
xor
sbb
lea
mov
pop
loopne
outsb
push
xor
or
dec
lea
and
out
mov
push
mov
pushf
push
xor
jne
das
clc
pop
dec
sbb
inc
outsl
jp
pushl
mov
mov
jp
xor
out
xor
xor
mov
push
call
mov
xchg
das
or
xlat
js
scas
inc
rcr
push
sub
jg
in
cmpsb
or
and
sbb
mov
subl
in
xorl
cmp
add
mov
jns
sbb
shr
jp
xchg
dec
int3
dec
add
mov
pop
test
imul
movsl
jnp
and
push
sub
xchg
add
mov
outsb
mov
mov
pop
mov
enter
xchg
cmp
popf
into
cmpsl
fbld
mov
mov
loop
cltd
push
inc
setb
adc
adc
ret
inc
pusha
int3
stos
pop
pop
in
insl
adc
mov
lods
jecxz
sub
outsb
loopne
xorb
das
cmp
jmp
aaa
mov
or
frstor
sti
mov
xchg
jle
orl
xchg
fmull
jno
mov
arpl
dec
dec
mov
cmp
cs
std
shlb
sbb
xchg
sbb
jno
or
ret
leave
inc
fistps
fs
repnz
clc
es
pop
mov
fs
mov
test
inc
ret
dec
sbb
jns
jp
mov
arpl
inc
inc
push
push
add
je
pop
ja
das
pop
fisubrl
pop
mov
xor
stos
dec
js
inc
cmp
cmc
lock
out
mov
push
daa
out
jns
add
sbb
cmpsl
ret
inc
loopne
dec
xchg
sub
inc
mov
popf
sahf
or
push
xor
lea
mov
mov
sahf
call
iret
mov
push
xor
frstor
adc
dec
dec
lds
xchg
mov
repz
push
mov
push
xchg
and
push
mov
sbb
push
in
xchg
mov
cmp
negb
pop
inc
fidivs
andl
lcall
int
loope
stc
dec
daa
add
mov
les
sbb
cmp
rorl
enter
adc
add
cltd
inc
loop
sbb
stc
lea
xlat
sbb
jge
push
cli
xchg
addr16
cld
cmp
aam
fisubrs
xorb
out
jp
movsl
icebp
inc
or
push
push
mov
xchg
in
pop
xor
sar
adc
inc
lret
lret
inc
sub
leave
lret
add
adc
imul
and
and
or
test
sbb
push
pop
push
inc
dec
lcall
sub
bound
xchg
mov
cmc
insl
adc
or
mov
adc
or
cmp
mov
shll
imul
cs
xchg
repz
movsl
pushf
scas
push
in
mov
inc
mov
rcrl
es
in
scas
cmp
out
xor
fnsave
hlt
xchg
push
cmp
sbb
imul
mov
aas
ja
add
jl
in
psrad
popa
je
jbe
insl
loop
pusha
xchg
cmp
out
dec
mov
je
jae
jmp
rcr
inc
sbb
xchg
int3
int3
mov
and
fbstp
pop
sahf
jge
push
iret
das
dec
into
out
lret
fs
filds
and
xchg
add
fidivs
or
mov
cwtl
pop
addr16
adc
movsl
in
xchg
push
add
js
cmpsb
in
pusha
inc
repz
imul
mov
sbb
mov
es
popa
leave
jge
out
fdivl
cltd
js
push
mov
aaa
out
mov
push
push
out
push
push
add
addl
mov
lea
lret
add
sbb
inc
mov
mov
xchg
mov
dec
int
cld
cmpsb
inc
xlat
xchg
xor
mov
sahf
xchg
enter
andl
cmp
and
push
in
adc
mov
iret
jne
mov
sbb
sub
popa
mov
sub
nop
out
test
insl
iret
movsl
sbb
dec
inc
cmp
fcmovbe
dec
mov
inc
ret
lahf
pop
inc
gs
stc
dec
inc
jp
xor
push
xchg
xor
jns
outsb
push
mov
cs
mov
sarl
insl
dec
jg
dec
mov
lods
push
and
push
pop
rcr
xchg
arpl
jle
cmpl
loope
sub
xor
fildl
cmp
addr16
jp
adc
test
mov
sahf
fucom
pop
ss
mov
dec
dec
sbbb
iret
jo
jne
sbb
lods
cli
out
push
xchg
aam
push
mov
mov
loop
cli
call
icebp
adc
pushf
fistl
idivl
push
ljmp
cmp
fisubl
test
lea
cld
xor
mov
mov
insb
test
ret
das
loopne
enter
push
es
idivb
scas
aad
dec
inc
dec
bound
lret
mov
outsb
cwtl
out
lods
pop
in
mov
adc
out
cltd
mov
adc
lds
xchg
add
pop
sbb
sbb
popf
lret
jnp
loope
shll
xor
data16
xchg
mov
mov
test
sti
sub
in
ret
sti
sbb
mov
jle
adc
lea
ffree
rclb
mov
test
dec
inc
flds
pushf
xchg
hlt
fsubl
xchg
fisubrs
cmpsb
mov
imul
mov
fldcw
mov
inc
xchg
out
or
jl
aam
test
dec
leave
pop
out
out
cmp
insb
fdivl
push
mov
loop
sub
add
mov
fistps
mov
in
hlt
inc
adc
jbe
daa
ficompl
test
mov
repz
inc
mov
and
dec
repz
test
mov
test
fdivs
and
test
cld
push
lahf
pop
sarl
int
daa
xchg
mov
rolb
xor
jb
fistl
shrb
and
jnp
lock
cli
data16
mov
pop
add
mov
sti
out
adc
rcll
jmp
das
xchg
adc
jle
cmp
insb
or
cmp
cli
lds
leave
xchg
dec
push
inc
and
pop
pusha
out
iret
imul
pop
icebp
and
inc
data16
dec
fsubl
inc
xor
enter
stos
push
sti
inc
jbe
lods
cmpsl
cltd
pop
push
in
or
sub
repz
sbb
imul
xchg
mov
stc
imul
xorb
mov
daa
sbb
ljmp
sub
inc
popf
cmp
dec
int3
mov
xor
stc
cmp
in
test
test
negl
lcall
js
adc
sub
push
cmp
arpl
xchg
push
or
out
test
push
lahf
rcll
sub
sub
cmpsl
xchg
mov
sahf
ret
in
sub
inc
mov
or
push
sbb
fcoml
lock
mov
cmp
push
incb
inc
pop
mov
repnz
shrb
mov
and
sbb
jno
push
outsb
jle
mov
pop
call
pop
in
aaa
sbb
cmp
jnp
jb
fs
lods
out
sub
jecxz
xchg
xchg
aaa
fcoms
popa
jmp
xor
add
mov
or
test
inc
push
test
xchg
inc
lods
sti
aas
int3
pop
add
aad
sahf
mov
adc
fdivl
test
push
clc
into
cmp
push
inc
inc
pop
lcall
stc
aad
sti
imul
mov
aas
pushf
lea
add
jg
js
lods
test
es
or
push
data16
lahf
jl
and
jge
jb
mov
or
cmpsb
ja
sti
xchg
jmp
mov
add
xchg
jo
lock
out
jmp
and
lds
rolb
jecxz
push
mov
dec
loop
push
sub
mov
add
push
xchg
lcall
dec
and
adc
sbb
nop
push
clc
jle
mov
mov
lea
hlt
mov
jb
cmpsb
call
gs
rcll
lds
sub
mov
cltd
and
popf
jnp
lods
xchg
push
push
in
fwait
rolb
fwait
hlt
pop
flds
into
out
insb
sub
inc
repz
inc
xchg
push
mov
ds
arpl
inc
movsb
xchg
pusha
mov
enter
incb
xlat
pop
insl
xor
mov
mov
sbb
std
push
push
imul
es
or
sub
mov
add
pop
sahf
int3
mov
enter
popf
lahf
cmp
arpl
in
sbb
sarb
negl
std
divb
or
stos
jne
enter
inc
inc
jp
fcoml
push
lods
imul
in
out
lods
stos
test
sub
ret
jge
loopne
mov
int3
or
sbb
pop
pop
adc
xchg
outsl
das
addr16
push
lea
mov
fistpl
adc
cmc
mov
pop
ffreep
xchg
pop
lret
sarl
mov
mov
sbb
insb
jmp
push
lods
sahf
aam
fwait
mov
jg
btr
mov
ret
cmp
push
inc
add
xchg
sub
loopne
jne
inc
pop
jle
lret
cmp
sub
aad
jp
fwait
xor
fstpt
push
jae
push
adc
add
and
lods
nop
daa
cwtl
add
inc
jae
movsb
xchg
in
pop
pop
test
inc
adc
xchg
mov
clc
or
and
sub
adc
outsb
mov
adc
lret
movsl
mov
jns
inc
xchg
int
out
mov
test
push
pop
int
xchg
push
cld
xor
xor
or
jne
cltd
scas
jae
fadd
push
aas
movl
pop
fcmovbe
mov
jb
inc
sbb
test
cmp
popa
mov
push
pop
xor
mov
push
pop
mov
out
add
hlt
xor
xor
push
fcmovnb
leave
jno
xchg
mov
loope
cld
out
repz
sbb
cmpsl
sti
push
cmp
cmp
push
xlat
jnp
outsl
lods
push
mov
xor
mov
and
mull
mov
out
je
pop
jns,pn
cmp
or
inc
and
mov
pop
sbb
mov
lret
clc
je
imul
jp
mov
rcrb
call
mov
mov
mov
cmpsl
mov
mov
out
lret
cli
or
adc
jo
and
fists
fdivrl
jb
push
sti
out
rorb
lahf
gs
dec
sar
fstps
fld
mov
stos
sub
push
jle
mov
pop
push
in
inc
shrb
stos
or
cmp
in
out
jmp
cs
add
getsec
add
rcrb
adc
test
mov
cwtl
mov
mov
add
mov
mov
ja
aaa
sbb
test
out
jl
jo
popf
xchg
push
jg
data16
mov
fwait
jnp
pop
push
sub
bound
sbb
xchg
mov
and
mov
arpl
dec
inc
aam
iret
insb
stos
fdiv
mov
mov
insl
cwtl
aaa
inc
daa
xor
jg
fldt
ret
adc
cmp
sub
lods
ds
lahf
mov
sub
sbb
fcmovnb
cmp
mov
in
jg
in
subl
out
add
mov
cmpsb
dec
xadd
mov
int
pop
movsb
xchg
add
push
pop
inc
cmp
imul
clc
imul
jmp
push
fistpll
jp
and
leave
sbbb
dec
ret
pop
push
lds
cmp
mov
and
push
dec
dec
push
adc
inc
push
fstpl
cltd
and
or
pop
fdivl
lahf
lods
mov
stos
enter
les
push
adc
add
adc
jo
dec
dec
idiv
xchg
out
addr16
push
loop
and
int
xchg
dec
push
xor
xor
dec
xchg
mov
add
mov
cmp
cmp
fsubrs
xor
sysenter
mov
lock
scas
xchg
icebp
inc
aaa
cli
stos
fdivl
jne
out
loopne
ds
outsl
push
or
mov
inc
mov
add
lods
xchg
insl
imul
adc
jg
cmp
jmp
movsl
add
mov
repnz
inc
or
mov
out
clc
dec
dec
lret
pop
xor
inc
inc
sbb
fmul
add
mov
insl
xchg
push
stos
mov
fstl
xchg
orl
icebp
fucom
mov
nop
aaa
imul
jp
mov
ficomps
aaa
xlat
stc
mov
pop
pushf
adc
mov
push
pop
cld
sbb
xorl
cs
fmull
ja
jbe
leave
mov
sahf
out
xor
lock
scas
or
es
clc
fwait
dec
pop
push
les
insb
outsb
xor
pop
mov
mov
sarb
imul
loopne
pushf
mov
cmp
adc
mov
sbb
jge
and
popa
cli
xchg
pop
sub
andb
sbbb
in
out
xlat
enter
push
mov
leave
arpl
and
jo
stos
or
and
int3
lret
sarl
jg
je
bound
shlb
shl
jnp
add
xchg
insb
cmc
push
xchg
out
sbb
pop
das
dec
ds
imul
stos
sbbl
enter
inc
insl
or
pop
xchg
orl
mov
lods
mov
aad
push
movsb
xchg
fs
cmpsb
xchg
and
adc
sbb
cmpsb
and
add
mov
insl
and
ja
inc
mov
loope
fs
sub
push
out
cwtl
stos
fisttps
hlt
cs
imul
adc
mov
testb
mov
ret
mov
add
es
vmread
incl
mov
je
enter
lea
fistpll
lahf
fwait
mov
inc
or
into
pop
cmp
movsb
stos
sub
jae
push
insl
iret
imul
fcomps
push
movsl
test
lret
push
stos
mov
fnstenv
xlat
sbb
cli
and
inc
and
popa
xchg
push
xchg
dec
dec
xchg
ja
ja
cmpsb
cmp
mov
lods
ja
sahf
enter
mov
cmpsb
ret
adc
int
mov
xchg
cltd
sti
dec
pop
lea
cwtl
in
iret
xor
outsl
mov
and
sub
inc
mov
xlat
jno
es
adc
sbb
sbb
mul
cmp
mov
inc
imul
daa
pusha
popa
in
lahf
addl
push
add
fwait
inc
shrl
sarb
xor
xor
loopne
or
test
jo
lods
addr16
fs
leave
das
push
mov
sti
push
jno
dec
sarb
int3
hlt
adc
scas
and
jecxz
popf
inc
sbb
and
int
push
lret
mov
sbb
mov
rcr
or
repnz
out
push
jg
adc
mov
and
out
mov
adc
jo
repz
xlat
pop
adc
fisubrl
add
lcall
cmp
cmpsb
mov
or
aaa
sbb
fmull
pop
xor
xchg
popa
jae
mov
pop
mov
jb
ja
sbb
mov
imul
inc
jo,pt
sub
pop
out
rcr
sbb
arpl
xlat
call
mov
xchg
cmpsb
pop
and
adc
push
fs
xchg
jns
lods
jne
pop
sbb
push
imul
dec
imul
cs
shlb
aad
sub
dec
into
adc
imul
lods
ljmp
subl
cmc
mull
addl
add
ss
rclb
xor
outsb
lcall
adc
or
push
push
dec
sbb
mov
mov
mov
test
push
push
jecxz
jb
loopne
in
inc
inc
out
movsl
jge
add
mov
pop
cmp
ret
cmpsl
movsb
fsubr
dec
jecxz
lcall
scas
lock
jo
and
xchg
mov
lret
popa
ds
pop
lds
insb
stos
inc
das
mov
in
or
xor
inc
jl
push
andl
inc
ja
pop
insb
mov
and
push
sub
jnp
arpl
fadds
mov
xor
sub
sub
pushw
call
mov
rcrl
sub
out
xor
cmpsb
ss
inc
sahf
xor
cmp
rolb
jp
outsl
inc
sarb
fucomp
cwtl
shll
inc
jns
dec
loopne
pop
rclb
dec
gs
shl
push
sti
addr16
xchg
or
out
jae
shr
and
cld
cmp
inc
lds
or
cld
cli
movsb
cmc
adc
inc
cmpsb
test
rcrl
mov
fsubrs
in
xor
pop
sub
or
adc
cmp
inc
stc
mov
and
xchg
mov
mov
enterw
imul
outsl
fistl
jmp
xchg
pusha
aaa
and
pop
mov
ljmp
inc
mov
push
in
push
add
gs
mov
sarl
cwtl
pop
mov
adc
into
lods
sbb
jae
fcmovnb
cmp
cmc
enter
popf
jge
xor
xor
ret
ljmp
xor
into
in
xchg
out
sbb
lret
jge
arpl
cmpsl
mov
push
cmp
sbb
sub
adcb
or
inc
lsl
jae
pop
lea
sub
dec
add
mov
mov
stos
dec
in
insb
sarl
cmp
ja
jg
or
popf
inc
push
roll
pop
xor
push
ss
lret
les
mov
dec
jp
aam
out
aad
or
and
mov
jo
jmp
push
sbb
popf
inc
xor
or
mov
je
inc
ja
insl
aas
mov
shl
lret
pusha
imul
pop
xor
pop
fcomps
pop
mov
push
fscale
inc
push
mov
int
add
int
scas
ret
mov
rolb
gs
std
xchg
ret
and
push
pop
jne
mov
mov
dec
push
les
outsb
into
fwait
loop
aaa
dec
out
mov
loopne
ret
test
neg
popf
mov
cmp
mov
adc
xchg
in
sub
sub
adc
mov
nop
shlb
or
jo
add
cwtl
xchg
xchg
ds
dec
arpl
push
jp
pop
push
xchg
int
mov
iret
dec
sub
movsl
inc
pop
and
inc
jo
jnp
pop
xor
add
mov
ss
or
dec
sahf
je
repz
push
push
ss
add
push
mov
mov
sbb
pop
fptan
call
hlt
sbb
sar
mov
xorl
repz
sub
push
dec
in
call
out
aam
jp
gs
outsb
xchg
add
dec
mov
xlat
inc
xor
add
ret
lcall
test
push
das
fisttps
inc
stos
loop
jecxz
loop
xchg
xor
stos
inc
cmp
push
dec
dec
aam
ljmp
iret
scas
xchg
inc
jp
sahf
mov
pop
fbstp
bound
lret
ficoms
add
mov
lea
inc
adc
pop
jl
mov
mov
dec
sbb
push
mov
inc
into
outsb
mov
and
hlt
push
or
push
mov
outsl
inc
pop
cs
lds
pop
pop
popf
out
jns
mov
orl
xlat
les
int3
adc
mov
sti
lahf
enter
jbe
daa
inc
and
testb
daa
cmpsb
repz
nop
ss
sub
repz
push
mov
test
push
fstps
pop
cli
adc
mov
sbb
push
fcoml
lahf
pop
xor
jle
sub
sbb
sbb
push
pop
jp
ja
pop
fld
je
jge
shll
into
sub
clc
adc
in
vpabsw
xchg
cltd
cmp
loopew
test
mov
stos
mov
mov
subl
xlat
xchg
test
in
xor
lods
out
pop
popf
fildll
sub
jne
add
aas
out
daa
clc
xchg
xor
cmp
call
pop
or
mov
in
push
jbe
sub
and
mov
xchg
dec
arpl
in
cmp
push
lock
call
out
xor
fldl
and
rol
repnz
xchg
fs
lahf
push
vmwrite
inc
movsb
loope
push
sub
mov
movsl
xchg
dec
xor
cltd
pop
mov
xchg
pop
arpl
cli
push
xchg
mov
dec
pop
lods
jmp
xor
push
clc
leave
xchg
je
or
lcall
add
fiaddl
pop
std
sub
icebp
into
popa
movsb
mov
lea
jge
sahf
dec
mov
jp
mov
outsb
leave
mov
adc
cld
adc
popf
stc
pop
mov
popf
in
mov
mov
push
mov
rol
shlb
outsb
dec
cmp
mov
pop
push
xchg
cwtl
cmp
mov
dec
loop
popa
jge
jbe
sub
pop
dec
mov
inc
outsl
movsb
cmp
insb
lret
imul
lcall
int3
mov
mov
xorl
push
cli
ret
mov
imul
pop
pcmpeqb
rcl
mov
subb
es
cmp
and
nop
or
mov
pop
jno
mov
cmpsb
jp
mov
sti
decl
lea
scas
and
cmp
push
andb
icebp
add
je
sub
cmp
test
sarb
xchg
inc
sahf
jae
pop
popf
cmp
pop
cmp
xor
mov
or
jmp
xor
fists
dec
push
mov
mov
int
adc
xor
sub
jo
mov
sbb
std
cmpsl
mov
push
or
dec
arpl
cld
aad
insl
inc
dec
cld
pusha
popf
cmp
aam
fisttpl
and
popa
add
adc
dec
fucom
mov
fdivrs
dec
int3
and
push
push
jb
cmp
mov
sbb
jne
sahf
mov
mov
or
mov
cltd
sbb
inc
movsb
add
scas
pop
cmp
push
outsl
xor
jno
lea
push
push
movsl
dec
pop
dec
xchg
mov
scas
adc
lcall
or
shl
stos
daa
adc
cmpsl
add
int3
or
and
dec
or
mov
scas
sbb
ljmp
in
or
pusha
sub
test
aam
into
dec
sub
dec
dec
mov
stos
out
xor
jnp
out
mov
xor
jge
shlb
adc
adc
and
and
in
sub
or
insb
out
out
mov
fucomi
inc
push
lret
pop
arpl
push
mov
adc
mov
mov
adc
pushl
adc
pop
enter
cmp
int
std
xor
mov
rcl
xor
dec
add
fimull
adc
xor
cld
xlat
sub
pop
inc
sub
pop
inc
div
sahf
ret
cmp
add
or
int3
add
jnp
xor
cmp
lcall
pop
clc
in
xlat
repnz
push
nop
icebp
xor
rolb
daa
xlat
jl
mov
xchg
add
push
push
adcb
leave
jo
addr16
dec
bound
adc
test
fisubrl
fnstsw
sti
sbb
adc
das
shrl
dec
sbb
inc
push
hlt
sub
test
out
sbb
and
xlat
mov
loop
sti
pop
enter
mov
inc
subl
cmpsb
pmulhw
sbb
lcall
xor
lds
sbb
leave
add
or
dec
push
shrl
imul
loope
sbbb
or
sti
pushf
fsubrl
pop
inc
insb
movsb
ret
inc
lret
jne
lea
xchg
insl
sub
popf
mov
mov
push
loop
adc
xor
push
mov
sbb
jle
pop
mov
mov
fdivrl
or
jp
fnsave
movsl
test
add
pusha
hlt
mov
sub
rol
cmp
cmpsb
shlb
repnz
es
lock
rcr
sub
jb
jl,pt
in
xchg
or
mov
cli
cmpsb
je
cmp
shrb
in
cmp
sarb
mov
call
scas
and
inc
aam
bound
fcompl
mov
sbb
ret
jae
and
mov
push
lret
loop
push
stos
pusha
inc
cmpb
ret
xor
or
dec
dec
xor
xorb
xchg
mov
mov
stc
pop
sbb
ror
pop
pusha
out
rorl
mov
inc
adc
into
insb
flds
in
testb
jp
xchg
neg
and
jbe
mov
ja
inc
mov
xchg
adc
or
adc
int
jp
and
sbb
add
lcall
push
std
mov
jl
movsb
loop
push
pop
pushf
je
stos
and
xchg
add
test
dec
into
push
vmulpd
in
mov
xor
sub
lret
shl
mov
xor
and
cmp
out
jl
ret
jnp
xchg
fcmovnb
out
xor
hlt
dec
mov
pop
test
nop
ret
int
adc
stos
pop
int3
mov
test
mov
jg
mov
xor
mov
jns
sbb
inc
push
fwait
jg
mov
jp
cmp
pop
mov
mov
icebp
pop
lds
stos
cli
in
mov
test
das
loope
sub
mov
in
push
daa
and
rcrb
and
test
mov
cmp
js
mov
sbb
xor
push
sub
dec
movsb
add
mov
xor
adc
mov
mov
xchg
sub
xchg
aam
mov
adc
fcoml
lock
sbb
call
nop
mov
add
push
cltd
sti
shlb
cmp
push
ldmxcsr
outsb
fwait
cld
xchg
cmp
dec
in
into
or
xor
ss
xor
frstor
out
les
aas
shr
je
cmpsl
inc
shrb
je
cmp
lcall
inc
sub
mov
lods
cmc
push
lea
xchg
push
sarb
mov
mov
pushf
in
adc
out
hlt
fsts
cmc
jae
mov
dec
pop
outsb
xchg
push
data16
loop
mov
xor
jmp
add
xchg
loop
mov
push
aam
pop
push
enter
and
das
lret
mov
xchg
xchg
pop
es
test
jle
aaa
rorl
xchg
popa
jo
xor
mov
dec
mov
outsb
sub
jb
or
jno
jne
fisttpll
inc
cmp
or
dec
addr16
fdivr
cmpsl
das
adc
push
lahf
xchg
cmpsl
xchg
repz
adc
hlt
gs
jo
insb
movsb
pop
sbb
in
std
iret
xor
sbb
ja
dec
fdivl
adc
adc
fdiv
sub
fbstp
mov
xor
inc
popf
jbe
sub
out
jb
mov
dec
nop
cmp
xchg
outsl
jmp
lods
addr16
test
cmp
jb
mov
test
mov
jbe
hlt
enter
mov
ljmp
leave
js
push
pop
inc
or
cs
mov
xor
and
jecxz
jno
icebp
or
shr
test
and
std
imul
imul
addr16
inc
mov
lods
movsb
push
jmp
sahf
or
mov
pop
mov
icebp
mov
cmpsl
sub
mov
mulb
test
stc
cmp
lea
pop
inc
nop
cwtl
dec
lock
lret
enter
cmpsl
loope
orl
adc
dec
ljmp
aaa
scas
mov
jne
in
rep
in
add
inc
mov
and
mov
in
test
jmp
xor
mov
in
jecxz
sarb
or
int
mov
iret
push
divl
mov
lret
js
xorb
and
dec
dec
sbb
cmp
mov
dec
enter
push
insb
cmp
jns
es
addr16
sbb
outsl
mov
sbb
icebp
test
push
and
pop
add
xchg
inc
lea
gs
sub
or
test
cmp
add
mov
mov
into
ret
pop
addr16
repz
push
stc
loope
cs
icebp
scas
inc
ds
cwtl
insb
fstl
cwtl
push
add
cmp
add
mov
idiv
mov
shlb
fs
dec
xor
ret
mov
lret
stos
xlat
xlat
mov
std
push
loop
cmp
addr16
pop
test
and
mov
call
add
dec
cmp
hlt
mov
negl
mov
jg
push
mov
adc
mov
dec
out
xor
loope
adc
xchg
out
jno
aam
jg
fiaddl
push
pushf
sub
sbb
xbegin
mov
xor
mov
cs
bound
test
adc
in
rcl
test
xor
sbb
out
sahf
xchg
dec
lods
daa
fwait
jmp
insl
mov
sbb
pop
jb
sbb
testb
and
jae
xchg
imul
js
mov
and
jno
push
mov
lds
out
int3
jnp
jg
popf
repnz
push
dec
std
xor
int3
lret
push
inc
insl
dec
and
loopne
jmp
inc
pop
outsb
adc
cmp
xchg
cmpsl
test
sarl
shrb
scas
jns
sbb
jl
mov
xchg
fistpll
inc
bound
fldt
push
add
cmpxchg8b
push
add
in
fdivrl
das
jo
or
and
in
xlat
mov
and
enter
testl
or
pop
test
sub
in
cwtl
or
adc
nop
out
xor
mov
dec
pop
or
jg
cmp
xchg
push
cwtl
test
inc
pop
cltd
sub
scas
pop
sub
sbbl
pusha
cmp
add
push
or
xor
dec
stos
adc
inc
pop
int
std
movsb
push
inc
xor
xchg
push
ljmp
cmp
mov
push
leave
orb
cmp
adc
nop
sbb
jmp
out
imul
adc
dec
pop
or
int
test
aad
sarb
sar
cmc
or
scas
or
scas
and
mov
xchg
push
push
pushf
out
test
outsb
out
sub
mov
pop
rdtsc
call
mov
negl
repnz
testl
loopne
inc
xor
pmaxsw
add
scas
mov
movsb
in
std
cwtl
xlat
adc
cmpsb
sbb
inc
out
test
dec
cmp
dec
in
std
xor
rcl
sub
test
inc
jns
pop
inc
and
mov
lods
sbb
mov
xchg
jno
mov
mov
jb
insb
push
in
and
hlt
or
sahf
popa
adc
fidivs
lcall
in
mov
pushf
add
dec
cld
cmp
and
sbb
out
dec
arpl
pushf
push
lcall
adc
test
xor
fidivl
andb
pop
pushf
rorb
cmpb
addb
adc
ds
pop
shrd
in
xor
mov
mov
or
stc
outsl
or
jmp
andl
imulb
jb
rcrb
aas
cmp
mov
fildl
cltd
and
sbb
punpckldq
mov
xor
or
std
and
sbb
add
dec
in
aam
mov
cltd
movsl
push
insb
les
inc
and
mov
btr
popf
sub
mov
lcall
inc
push
bnd
pushf
dec
jmp
pop
sbb
push
mov
push
insb
arpl
insb
ret
repz
arpl
data16
mov
or
fldcw
sarl
pushf
hlt
pop
cld
cmp
mov
mov
jbe
test
insb
fisttpl
pop
aas
std
leave
dec
sub
xchg
sbb
xor
repnz
rcll
cld
pop
and
adcl
pop
imul
daa
test
das
jbe
dec
lret
jb
inc
jae
pop
in
inc
add
push
push
cmpsb
fisttpll
push
jno
push
mov
jno
jmp
sbb
xor
ljmp
scas
ljmp
jmp
cmp
xlat
aad
ljmp
jl
jns
cmp
enter
xchg
add
pop
pushf
cwtl
mov
hlt
andl
out
lret
xchg
xchg
cmp
sub
inc
jne
inc
xor
push
xchg
mov
cmc
jns
pusha
add
mov
xor
pop
insl
lds
xor
jbe
in
mov
call
jle
out
nop
add
pop
sbb
lods
fldt
mov
adc
movsl
scas
rcrb
dec
and
cwtl
dec
or
mov
mov
cs
lods
inc
cmpsl
sub
push
xor
lcall
sub
push
roll
repz
aaa
xchg
cltd
cmp
sti
pop
es
lods
adc
push
cmpsl
sub
mov
sub
sbb
subb
orb
and
rcrl
xchg
add
addr16
and
pop
xchg
xor
jle
and
std
add
lahf
cwtl
sub
jno
jb
mov
adc
repnz
ja
mov
push
xchg
in
cmp
clc
cmpl
stc
fstpl
mov
dec
sub
jecxz
jne
jg
and
xchg
lret
add
xor
scas
test
or
mov
sub
leave
and
mov
pop
pusha
rcrb
or
add
sti
jne
mov
sbbl
mov
popf
cmpsl
add
jne
mov
xor
aaa
push
sbb
mov
hlt
test
push
jno
push
popa
sub
pop
cmpsb
ljmp
xchg
jne
imull
mov
movsb
dec
sub
shll
adc
sub
jnp
dec
push
outsb
xchg
loopne
mov
cmpsl
xchg
mov
xor
and
jae
mov
out
xor
into
xchg
out
sahf
sbb
and
mov
mov
daa
pop
imul
jle
and
add
es
orl
stos
or
adc
and
xor
jg
mov
xor
lret
sub
inc
aaa
mov
add
inc
push
movsb
loop
lock
insb
je
adc
imul
fistl
lds
movb
sbb
dec
arpl
dec
pop
jne
jno
stos
insb
insb
dec
in
pop
push
out
cmp
inc
imul
mov
mov
stos
rolb
lcall
sbb
int
xor
stos
call
mov
jb
rcrl
loop
xorl
and
add
cli
test
out
stos
or
push
mov
xchg
daa
and
stc
inc
adc
pop
out
xchg
sbb
movsl
or
jne
push
daa
pop
mov
cld
addr16
stos
adc
xchg
imul
push
cltd
rol
cltd
call
pop
jl
pop
mov
xchg
cmpsl
aas
xor
sub
adc
push
out
push
lea
ror
lods
ret
xchg
xchg
enter
jle
jl
push
lods
inc
stc
push
push
adc
and
lods
xchg
cli
cmpl
mov
jl
and
xorb
cmpl
ficomps
js
jno
push
push
sbb
xor
outsl
push
inc
mov
jl
lods
cmp
and
sbb
sbb
jnp
out
fidivrs
add
sbb
mov
loop
dec
pop
jno
jle
cmp
sub
jb
inc
cltd
movsl
push
push
movsl
out
or
add
outsb
ds
adc
mul
popa
fildll
and
dec
push
adc
mov
jle
out
psadbw
cmpsl
pop
push
mov
jp
mov
jne
push
sbb
push
inc
push
mov
fs
cmp
mov
push
xor
in
cld
push
mov
outsb
lret
cmp
stos
cld
xchg
jmp
cmp
and
imull
lods
stos
adc
push
cmp
movsb
popf
cli
fs
ja
nop
mov
in
bound
mov
sbb
adcb
or
sub
stos
mov
push
lcall
jp
mov
inc
mov
push
adc
cli
insb
mov
lahf
rep
sahf
lahf
scas
sbb
xor
lock
lock
add
cmp
jo
mov
jl
lea
add
shll
scas
in
pop
push
ret
rcll
dec
mov
lret
test
xorl
mov
xor
xchg
ss
pop
push
repz
js
add
imul
mov
sub
fistpl
cmp
and
popl
cmp
mov
addb
shll
adc
cmpsl
jb
push
jo
test
fstpt
add
rcrl
xor
pop
shlb
repz
dec
sahf
sahf
mov
cmovle
dec
mov
mov
cmc
pop
adc
sbb
mov
jle
xchg
push
loop
xor
or
dec
cmc
xor
mov
aam
sub
inc
cmp
dec
xor
es
in
jne
pop
sbb
push
das
mulb
push
mov
sub
rorl
fidivs
loop
push
push
aaa
sbb
sub
js
push
inc
push
jmp
lret
loop
fwait
xchg
stc
xor
inc
leave
adc
pop
sub
sbb
popa
mov
add
or
jbe
xchg
loop
ret
mov
fsubr
test
mov
stc
xchg
pusha
sub
pop
cli
xchg
subl
testl
mov
mov
and
cmpl
pushf
andb
pop
sbb
mov
call
push
pop
mov
push
cmc
push
push
pop
jno
aaa
ja,pn
dec
shl
dec
out
dec
pop
adc
pop
push
lods
push
repz
data16
xchg
pop
dec
mov
inc
arpl
push
pop
dec
jbe
movsl
leave
cmp
jns
cmp
movsl
int3
inc
arpl
rclb
or
scas
and
outsb
inc
inc
cli
ret
xchg
inc
mov
jp
mov
push
mov
pop
cmp
sahf
push
cmpsl
xor
cmp
xorl
cmp
sbb
dec
push
ds
push
mov
xchg
loopne
jo
jns
popf
out
clc
lock
cmp
imul
mov
mov
mov
mov
repnz
iret
cmp
fcmovnb
inc
ljmp
sqrtps
fisttps
rcll
fbld
mov
stc
mov
xchg
lock
std
lcall
jle
loop
cmc
cmp
mov
test
lea
repnz
icebp
mov
push
xchg
mov
es
cmp
mov
insb
cwtl
rcrl
pop
inc
add
out
das
push
xor
push
mov
mov
cmp
negl
mov
out
fdiv
jmp
inc
es
xchg
xchg
imul
ret
mov
stos
aaa
rclb
dec
mov
popf
or
lock
push
push
leave
mov
inc
xchg
lret
lret
aad
js
dec
mov
pop
sub
push
cmp
cltd
xor
fisttpll
test
mov
insl
fstpl
int
in
fwait
adc
loope
push
push
cld
xchg
mov
fimuls
notb
std
jmp
jbe
cmp
dec
add
rcll
int
into
test
inc
pop
arpl
dec
iret
pop
xchg
ja
in
outsl
xchg
ljmp
push
pusha
pop
pop
fdivrl
ret
mov
xorb
sub
ja
jbe
mov
test
je
enter
in
dec
jl
cmpsl
in
mov
hlt
or
add
dec
pop
pop
in
inc
shrb
test
loopne
jbe
fnstsw
pop
xchg
sbb
sub
jecxz
cmovge
fmull
fldl
fs
cmpb
aam
xor
ficoms
mov
xchg
xor
jge
mov
push
cli
cmc
call
lret
fwait
mov
xchg
dec
push
dec
stc
xor
in
push
xor
jae
aad
sbb
stc
mov
push
pop
or
sub
sbb
fldcw
adc
mov
iret
fs
inc
inc
pop
push
mov
outsb
lods
xchg
push
icebp
jmp
xor
mov
test
pop
pushf
into
sbb
pop
insb
inc
jecxz
test
pop
in
jle
or
test
cmp
cmp
in
outsl
dec
push
scas
nop
outsb
sbb
cmp
aaa
int3
arpl
inc
wbinvd
popa
mov
movsb
popa
pop
inc
and
mov
dec
loopne
ret
ret
xor
push
addb
out
outsb
lret
cmp
cmpsb
xchg
push
cmp
xor
add
out
xor
sti
push
xchg
mov
mov
pop
mov
sbb
push
jb
daa
pop
xchg
fistpll
into
fisttps
pop
and
sti
lea
adc
push
aas
mov
enter
and
stos
adc
cmp
cmpl
adc
push
aam
loopne
jmp
push
enter
negl
sub
jle
and
fadds
jns
mov
mov
das
mov
pop
shl
loope
inc
mov
fidivrs
scas
cs
sbb
pop
out
cmp
sub
dec
xor
dec
fimuls
daa
cmovb
ss
loope
jp
lods
or
push
mov
inc
popf
lahf
mov
aas
add
inc
dec
je
add
xorl
pop
push
add
mov
jl
out
testb
popf
mov
loop
mov
pusha
mov
imul
mov
pop
adc
cmpsb
dec
jbe
pop
mov
lahf
hlt
call
push
pop
mov
jae
and
dec
pop
pop
pop
jp
cmp
dec
xor
stc
sub
mov
mov
jne
sbb
in
in
test
add
mov
pusha
jge
mov
push
push
loop
cld
xor
sub
jnp
push
js
push
mov
int
inc
pop
jne
push
out
xor
lcall
data16
cmp
shll
and
inc
or
imul
push
jb
nop
fiadds
push
push
jg
scas
adc
in
sbb
xlat
mov
sub
xor
and
repnz
push
add
outsb
call
mov
xchg
cmpsl
xor
sbb
push
popa
xor
ficoms
xchg
xor
fisubl
or
cld
jne
jb
in
push
repnz
or
jp
je
inc
lods
and
add
in
fs
sbbb
aad
dec
push
sbb
fstpl
xchg
xor
pop
add
arpl
aas
sub
lahf
out
mull
in
jmp
ds
cmp
pop
or
mov
xor
popf
jge
lods
int3
imul
adc
ja
inc
lret
and
mov
lret
test
dec
cmpsb
insb
sbb
mov
repnz
xor
loopne,pn
pop
xor
cld
aam
icebp
jmp
lahf
div
mov
sub
pop
or
push
xchg
jbe
add
sti
fs
ffreep
cmpsl
hlt
jns
icebp
pop
call
fmuls
cld
jle
mov
or
movsl
mov
push
aam
out
cmpb
in
push
lcall
sti
sbb
mov
inc
sub
cld
and
shr
call
sbb
push
stc
leave
loop
pop
stos
fimuls
sub
je
les
lret
mov
filds
inc
pop
jns
mov
add
shrb
scas
jp
push
push
movsl
or
scas
jno
clc
xor
ret
outsb
lea
push
jns
lcall
lret
das
add
cltd
mov
mov
inc
sbb
mov
lahf
push
sbb
sub
inc
xlat
cmpsl
xor
xor
sbb
popf
popa
push
lahf
loope
dec
fsubl
push
sub
and
gs
mov
in
loop
adc
sahf
push
popa
dec
and
push
jg
mov
rorl
jo
adc
fnstcw
imul
inc
mov
push
mov
popf
cmpsb
or
lods
xor
adcl
xchg
pop
clc
dec
sti
pop
sbbb
jno
pop
pusha
jle
dec
mov
mov
sub
mov
xchg
ffreep
xlat
out
arpl
insl
mov
mov
imul
daa
mov
aad
push
insb
jp
mov
mov
in
push
sbb
ljmp
adc
sysexit
xor
push
jo
sbb
aad
mov
xor
xor
pop
pop
and
std
lock
dec
add
sbb
cmp
jmp
repz
out
fstpt
sbb
jmp
and
js
pop
pop
adc
idivb
pop
enter
dec
pop
nop
xor
inc
or
xchg
dec
movsl
fstps
mov
push
mov
mov
cwtl
cmp
push
adc
jmp
push
shll
sbb
sahf
mov
or
int3
jmp
daa
push
insl
sahf
adc
push
popa
loopne
lret
outsb
ds
dec
stos
mov
xor
iret
pop
sub
add
mov
mov
and
ljmp
rolb
lods
xchg
les
jecxz
sbb
fwait
js
jge
adc
adc
nop
push
xchg
cmp
fldcw
scas
icebp
and
push
je
cmc
mov
lret
cmp
aad
or
pop
add
push
ljmp
jp
xor
jno
mov
push
cmp
xor
sub
mov
pop
jmp
insb
rcll
jecxz
cltd
test
inc
and
xor
jecxz
movsb
hlt
add
xchg
add
fstpl
mov
lock
push
ja
insl
lcall
mov
jb
incl
data16
out
push
inc
jo
cs
sti
or
jae
dec
jnp
das
pop
lcall
inc
pop
nop
push
adc
mov
push
sbb
rcll
mov
inc
xchg
mov
inc
cld
and
add
inc
xor
jmp
and
cmc
imul
fs
jno
call
xchg
sbb
insl
add
and
outsb
push
rorl
ss
xchg
std
cltd
rol
scas
sti
div
mov
jns
test
jl
push
lods
outsb
jmp
or
push
or
data16
in
jns
leave
test
sarl
call
push
cmc
push
outsl
test
sub
adc
pop
and
aaa
mov
scas
mov
xchg
lret
xchg
call
fidivrl
cmpb
or
into
jmp
into
mov
and
inc
jp
and
cmpsl
insl
lret
sub
pop
scas
sbb
sbb
xchg
inc
adc
vmulpd
aam
sub
lea
sbb
jns
inc
sub
pop
dec
jno
lahf
test
xchg
mov
push
mov
add
push
sub
push
or
adc
lcall
fidivl
jg
mov
loop
dec
add
cmp
das
jb
lds
sahf
mov
mov
fdivr
push
mov
test
mov
aas
fbld
adc
into
cmp
inc
inc
roll
or
int
pop
in
mov
lahf
mov
mov
sub
aam
dec
dec
push
mov
add
jg
xchg
push
ds
sub
xor
lock
enter
jl
mov
sub
lock
dec
xchg
fnstcw
mov
xchg
mov
pop
sub
insl
andb
fiaddl
jecxz
notl
xchg
adc
sbb
push
cwtl
aas
lds
mov
rclb
insb
pop
sbb
sahf
imul
jmp
mov
dec
lock
push
daa
das
arpl
cmp
insl
dec
lds
dec
test
cli
and
pop
out
xchg
add
js
ja
mov
ficoml
add
or
pop
mov
mov
xor
in
xchg
ja
out
sti
outsb
outsb
je
int
mov
adc
mov
sbb
rclb
dec
outsb
pop
push
xor
cmc
xchg
data16
pop
jg
jle
sub
adc
lods
es
mov
loope
ljmp
mov
or
mov
jmp
repz
sub
push
inc
aad
loopne
clc
sbb
mov
pop
jnp
sbb
fxch
xchg
ja
aaa
mov
int
mov
sub
cmp
mov
outsb
insb
push
into
inc
lea
in
adc
xchg
sbb
sub
jne
dec
jbe
int
enter
clc
cmp
or
push
pop
fisubrl
xor
or
cld
cmp
popl
xorb
add
add
stc
repz
repz
xor
jp
jne
push
mov
xor
jbe
rcll
out
jnp
test
xlat
mov
add
xor
mov
push
shlb
xchg
mov
mov
cld
jecxz
enter
iret
repz
mov
aaa
mov
hlt
fwait
jne
jp
mov
jnp
fwait
jnp
pop
or
push
imul
cwtl
mov
movsl
out
sub
test
gs
jg
or
enter
dec
lods
xor
fwait
lcall
mov
pop
or
xor
jbe
xchg
push
adc
iret
push
test
cwtl
sub
adc
mov
or
or
ret
pop
mov
fmuls
mov
push
gs
roll
and
cwtl
or
imul
dec
fisttpl
sbb
adc
outsb
mov
jl
lods
fisubs
push
pushf
jle
out
push
scas
or
mov
xor
and
popf
js
xchg
stos
movsl
fidivrl
push
iret
pop
push
mov
es
push
repnz
out
or
mov
outsl
sub
mov
repnz
jecxz
int3
inc
mov
dec
xchg
sbb
xchg
cmpsb
jge
xchg
dec
repnz
jle
lock
out
in
icebp
push
repnz
jl
dec
test
inc
addr16
jns
sbb
push
decb
dec
sbb
pop
repnz
aam
insb
pop
pop
push
mov
leave
and
pop
dec
sub
xchg
sbb
pop
rclb
pushf
test
mov
cmp
outsb
dec
addr16
fwait
xchg
fcomps
popa
mov
pop
cld
cli
xor
stos
push
mov
sub
and
bound
ja
jno
inc
push
add
mov
push
jnp
or
jb
cltd
stos
aam
lock
stos
push
lock
jno
push
test
dec
mov
xchg
pop
dec
jb
jmp
inc
or
fdiv
lcall
fxtract
sub
es
mov
xchg
xchg
fcmovbe
mov
movsl
aad
dec
sub
in
jp
test
stc
repnz
or
xchg
pop
addr16
dec
aam
pusha
imul
inc
sahf
bound
inc
idiv
movsb
xchg
pop
push
lds
imul
push
jecxz
mov
sbb
stos
mov
dec
mov
sbb
subl
xchg
outsb
les
push
loop
pushl
pop
out
xlat
ss
pop
mov
fisubrl
sbb
insb
repnz
outsb
and
or
sahf
mov
ret
inc
outsl
xchg
lcall
roll
data16
divb
in
cld
aaa
pop
xchg
or
mov
xchg
je
fsubrp
out
mov
or
pushf
sbb
pop
dec
mov
push
sub
scas
jns
dec
leave
aas
xorb
lcall
ja
xor
xor
enter
or
bound
frstor
stos
xchg
pop
gs
mov
add
cmp
es
jmp
sbb
ss
mov
push
rorb
aaa
and
inc
inc
clc
out
je
sbb
xor
pmullw
push
lods
sti
push
inc
xchg
fsts
inc
mov
jns
mov
das
adc
popf
pop
push
sub
roll
push
sub
xor
insb
add
sahf
inc
orl
push
movsl
lods
lahf
sti
add
dec
std
jb
or
out
andl
push
arpl
das
loop
xchg
rcr
inc
add
pusha
fldenv
cwtl
mov
push
pop
sub
xchg
or
xlat
outsl
shl
pop
mov
inc
enter
lods
enter
call
inc
add
sub
addr16
push
xchg
insl
dec
lea
add
or
pusha
daa
fwait
call
jb
mov
push
ficoml
and
imul
xchg
out
push
jo
or
mov
insl
push
gs
jl
inc
xchg
inc
lcall
stos
jp
adc
pop
push
out
je
or
and
push
stos
mov
pop
icebp
mov
fidivrs
inc
xchg
fidivrl
cmp
sub
in
jle
mov
or
sahf
and
mov
leave
and
pop
in
loope
sub
fnsave
dec
cmp
sbb
es
jb
aas
rorb
ret
sbb
dec
xor
mov
push
inc
push
icebp
cmp
push
cmp
push
out
adc
push
sbb
sub
fs
sbb
or
sub
sub
mov
inc
add
sbb
jmp
int3
xchg
cli
jbe
mov
or
mov
div
jbe
movsl
inc
mov
sbb
outsb
negb
xor
ja
jns
fists
mul
fcoms
jge
fstpl
sub
mov
adc
or
movsl
jg
sub
cmp
jmp
push
leave
pop
mov
sub
jecxz
cmp
out
cld
mov
fs
jp
outsl
mov
ret
add
and
mov
outsb
cmp
mov
flds
adcb
out
aad
sahf
pop
loop
imull
aas
popl
lock
push
pop
test
cli
cmp
lret
sub
xlat
or
mov
add
cmpsb
bound
mov
add
repnz
arpl
clc
adc
mov
adc
inc
mov
cmpsl
ds
add
cltd
or
jg
scas
lret
lret
loope
ljmp
sub
mov
lret
mov
imul
mov
add
out
push
orl
jne
inc
cmp
inc
loop
push
lds
jmp
adc
sub
pmulhuw
stos
sbb
inc
mov
movl
push
adc
enter
xor
aaa
pop
add
mov
cmp
push
gs
dec
sub
in
in
lahf
mov
ljmp
lcall
mov
ficoml
fwait
sbb
in
in
pushf
inc
or
mov
dec
lds
fisubl
outsb
lea
xchg
pop
icebp
rcrl
out
aam
add
stc
cmp
scas
out
stos
or
jmp
ja
in
jns
fdivr
mov
and
int3
cli
or
loopne
xchg
rcr
movsb
leave
fiaddl
add
fwait
jnp
cmp
xchg
iret
sub
add
push
or
sbb
ds
cmp
je
das
jb
adc
xchg
inc
or
sub
sbb
sub
mov
mov
imul
push
insl
inc
imul
xchg
xlat
inc
jmp
sub
lods
sbb
out
xor
cmc
adc
push
pop
movsb
mov
cmp
jbe
cmp
mov
bswap
pop
push
sarl
sub
xor
fsts
repnz
adc
addl
sahf
adc
popa
dec
test
inc
lds
leave
mov
mov
dec
mov
and
mov
ret
push
or
faddl
sbb
call
adc
xchg
mov
int
cmp
cld
xor
mov
arpl
icebp
xor
push
out
jmp
out
shr
scas
add
out
sub
insb
jno
mov
xchg
jns
bound
ret
dec
push
hlt
sub
push
sub
xchg
and
in
cmpsb
into
adc
jecxz
popa
repnz
add
hlt
cmp
mov
mov
mov
and
push
pop
xchg
lahf
int3
ja
push
lods
sbb
cmpsl
sbb
shlb
stos
xor
into
out
in
inc
mov
pop
stc
lea
lahf
scas
lret
mov
mov
std
pmulhw
loope
pop
out
jns
cld
sbbl
mov
cmpsb
xor
fcomps
mov
xorb
les
sub
loop
and
sub
test
mov
sbb
out
and
pop
fldl
std
mov
xchg
lcall
andb
jo
sub
popf
rcr
test
sbb
fwait
mov
test
repnz
jns
pop
shlb
ret
or
call
clc
out
into
cwtl
pop
jns
xor
jl
inc
mov
cmp
mov
xchg
pop
ljmp
test
inc
xor
daa
into
lahf
xor
cld
mov
and
xchg
jecxz
mov
daa
add
jmp
fsubs
or
cli
mov
sub
gs
addr16
ljmp
mov
mov
out
inc
jecxz
mov
stc
push
mov
or
dec
pop
lods
lahf
sub
mov
insl
dec
push
push
mov
stos
pushf
icebp
aad
in
adc
mov
mov
cwtl
lds
xor
add
int3
ds
add
fs
mov
mov
push
pop
xor
popf
and
fldcw
movsl
les
imul
push
ljmp
cmp
out
add
mov
mov
add
daa
and
orl
push
mov
pop
add
fwait
stc
sub
mov
xchg
movsb
pop
outsl
xchg
lods
add
inc
das
fimull
inc
pushf
fistl
test
cli
mov
popf
xchg
and
xor
push
out
mov
dec
jecxz
mov
mulb
movb
in
jge
in
aam
shrl
adc
pop
test
insb
repnz
sub
lock
xor
pop
and
jg
mov
xor
xor
inc
addr16
xchg
dec
aad
and
out
dec
jg
mov
pmulhw
movsl
insb
sub
or
jp
movsl
mov
xchg
popa
scas
cld
or
aad
jp
push
jge
in
btc
sub
std
out
xor
shl
pop
stos
pop
stos
xchg
jno
sub
mov
fimull
add
xor
xchg
or
add
or
jg
xor
fs
out
pop
icebp
xchg
fidivl
incl
mov
jbe
rorb
sbb
outsl
cli
cltd
roll
dec
pushf
out
test
add
in
sbb
mov
cltd
repnz
stos
xchg
iret
jbe
int3
sahf
sub
in
bound
xor
jl
inc
sbb
pop
sub
push
mov
lods
mov
cltd
pop
xchg
jmp
jno
outsl
dec
je
mov
add
gs
mov
fwait
mov
adc
cld
andl
je
sub
hlt
cltd
mov
pop
pop
push
test
pusha
incb
add
cmpsl
lret
push
inc
cmp
mov
daa
icebp
pop
xor
mov
shll
mov
stos
gs
pop
ficoml
lods
jl
sbb
pop
outsl
xor
xchg
rorb
sub
outsb
ret
pop
in
sbb
nop
xor
in
and
mov
xchg
mov
sub
inc
shlb
js,pn
xchg
pushf
cltd
int3
mov
pop
scas
hlt
pop
das
push
adc
adc
mov
pop
push
loope
dec
sarl
xchg
pushf
sarl
xchg
cmpsl
adc
sub
jmp
iret
into
stos
xor
lcall
mov
pop
stos
ja
fstpl
repz
cmp
mov
mov
andl
mov
in
loop
enter
shl
pushf
push
jle
aam
test
lds
sub
sub
push
push
int
in
add
lds
xchg
xchg
psubq
sbb
or
sti
mov
cmp
push
mov
add
popf
repz
out
sub
test
jl
in
pop
lea
fldenv
fwait
imul
mov
xor
addr16
sub
hlt
mov
jecxz
pushf
jno
and
mov
or
aam
bound
inc
fwait
dec
dec
fwait
jmp
fisubrl
push
or
jns
ret
inc
push
loope
loopne
cli
cmp
mov
inc
jmp
mov
mov
call
mov
les
inc
xor
mov
ja
cmp
scas
xlat
ja
mov
push
xchg
and
inc
orb
xor
sbb
mov
rolb
or
jge
fbstp
daa
inc
fimuls
adc
pop
mov
sbb
dec
lret
imull
std
xchg
add
xchg
lods
in
push
push
mov
je
loop
cmpsl
ss
or
les
fadd
stos
fnstsw
push
ds
cld
int3
loope
clc
jg
cwtl
mov
jecxz
xchg
imul
xchg
cmp
nop
imul
add
jl
insb
insb
clc
das
pop
je
mov
sahf
scas
xchg
imulb
imull
sub
adc
adc
push
psrlw
incb
xchg
push
ret
jae
add
fxch
and
jg
or
xchg
pusha
mov
shr
mov
xchg
xor
sub
or
pop
fiadds
sbb
cli
and
into
call
clc
repz
jecxz
je
shl
and
push
sbb
dec
pop
int3
jbe
cmpsl
and
mov
pop
test
cmp
mov
test
mov
test
xchg
mov
out
scas
sub
jge
test
pop
dec
enter
mov
push
cmc
mul
mov
mov
clc
mov
push
lretw
aas
and
sti
dec
ret
sbb
rorl
xchg
and
add
icebp
les
inc
push
nop
arpl
outsl
ffree
sub
xchg
mov
ja
shl
push
jae
add
xor
in
pop
mov
add
mov
sub
and
es
sahf
adc
mov
mov
and
sbbl
push
dec
out
mov
pop
cmc
scas
in
lods
icebp
mov
dec
call
xor
sahf
ret
stos
nop
out
stos
and
mov
mov
and
in
mov
sub
mov
xchg
sbb
sbb
bound
adc
cs
test
icebp
xchg
test
hlt
inc
sbb
or
jno
insl
jmp
pop
push
out
dec
mov
decb
xchg
ljmp
loopne
jnp
mov
pop
xor
test
stc
or
repnz
aas
mov
cmp
int
aas
pop
mov
into
aad
js
fidivl
xor
sbb
test
lods
push
pop
je
sti
arpl
in
xor
mov
adc
fwait
jb
ret
sbb
orb
shr
roll
pop
lods
leave
jg
das
test
dec
lret
mov
cmpsl
inc
movb
push
jle
movsl
fisubrl
insb
sarl
adcb
jl
pop
test
jge
iret
fucomip
xchg
lock
ffree
mov
mov
push
sbb
jnp
mov
nop
xor
and
jecxz
or
xchg
subl
imul
inc
xor
and
inc
loop
repz
addr16
inc
lock
repz
sub
ljmp
push
loope
aam
add
fucom
xchg
mov
int
jg
push
es
cwtl
dec
push
jl
das
dec
pusha
lods
pop
fimuls
mov
sbbb
cmc
jb
xchg
lods
mov
inc
repz
mov
push
cwtl
stos
jg
jnp
mov
xchg
enter
dec
lahf
cmp
cmp
pop
and
test
jne
mov
lock
adc
sbbb
daa
xchg
xchg
les
mov
pusha
in
lock
and
sbb
pop
loop
ficoml
push
daa
sbb
add
mov
aam
jns
popf
cmc
loopne
mov
inc
bound
dec
pop
lret
hlt
ljmp
adc
test
and
jecxz
mov
push
ja
jns
xor
pusha
mov
xchg
test
out
int
xor
repnz
insb
adc
lret
sbb
test
repz
push
test
add
popa
add
mov
push
push
imul
pop
popf
push
jl
daa
sbb
pop
and
add
add
sarl
bsf
pusha
dec
mov
addr16
into
sub
adc
cwtl
arpl
lods
fstps
cmp
sti
xchg
and
cltd
adc
fisttpll
xor
mov
dec
ret
in
rorb
fmuls
jne
cmp
push
lret
push
dec
mov
jmp
sbb
mov
sub
mull
cmp
or
call
push
cmp
push
test
sub
lea
jge
dec
mov
jns
aaa
test
jbe
dec
int3
sub
sbb
sbb
push
mov
aam
lcall
repnz
xor
mov
push
aaa
aad
out
adc
xchg
dec
jae
call
lcall
jnp
sarb
leave
fsub
adc
lods
or
imul
sbbb
push
push
out
test
mov
aaa
pop
mov
mov
or
sub
clc
push
lea
jmp
aam
aas
rcr
movsl
ja
mov
nop
xor
cwtl
addr16
dec
jle
insl
mov
mov
ret
mov
shll
repnz
aaa
ljmp
adc
xor
popf
mov
negb
outsb
popl
jp
mov
addb
mov
sbb
loopne
out
xor
inc
out
jle
mov
jo
mov
lock
scas
in
mov
imul
testb
in
shll
inc
add
jnp
adc
mov
stos
jecxz
and
mov
outsb
mov
add
popa
adc
inc
jnp
js
sti
subb
loopne
pop
fnstenv
mov
jecxz
ret
push
fs
push
shl
add
mov
out
js
call
add
adc
repnz
mov
lea
sbb
stos
cmpsb
rcll
into
cmp
addr16
iret
inc
and
add
sbbl
mov
mov
fstpt
xor
dec
ret
das
out
and
icebp
mov
ret
lods
inc
pusha
outsb
pop
cli
xchg
daa
aas
sbb
mov
gs
pop
dec
in
cwtl
adc
xor
repnz
out
dec
sub
cmp
ja
call
xchg
aad
int
shl
xchg
test
mov
pop
pop
sbb
lods
fs
lock
jae
sarb
ja
outsl
inc
cltd
loopne
bswap
xor
and
xor
sbb
sub
arpl
imul
push
cmpsb
fwait
dec
jl
fcmovnu
push
and
cmpsb
or
add
jl
or
dec
mov
icebp
or
aaa
popa
adc
jge
sbb
sub
dec
nop
mov
push
cmc
outsl
popf
jno
das
push
fstpl
add
dec
les
mov
movsb
daa
cmpsb
push
push
sbb
mov
or
test
fsub
into
sub
ret
xlat
xchg
mov
bound
xor
push
cmp
je
and
xor
cltd
popf
pop
fwait
cwtl
push
mov
dec
jno
lret
push
mov
xchg
and
outsb
mov
push
cli
push
add
xor
insl
and
out
aas
xor
push
xchg
test
daa
lods
xchg
mov
hlt
dec
push
dec
cwtl
push
aam
nop
inc
push
push
out
cltd
pop
push
mov
and
mov
pop
iret
cmp
gs
or
xchg
in
rolb
mov
push
sbb
jno
inc
test
jecxz
pusha
out
es
js
out
leave
cmpl
movsb
cwtl
mov
sub
ja
dec
xor
scas
ja
in
fwait
xor
das
ds
dec
mov
mov
inc
push
stos
or
and
divb
mov
jae
push
int3
ss
arpl
mov
mov
clc
and
fld1
and
and
aad
scas
adc
mov
out
mov
popa
shlb
mov
push
mov
sti
or
jo
lea
popf
mov
ja
and
adc
inc
jnp
stos
sbb
push
jecxz
adc
lret
les
jge
stos
popf
inc
cmp
or
mov
cmp
mov
into
pop
push
mov
and
rolb
inc
adc
and
leave
xchg
fmulp
xchg
sbb
cmpsl
jo
inc
mov
ja
lcall
aam
add
dec
clc
sub
test
push
mov
cmp
repz
movb
fstpt
loopne
jp
aas
leave
inc
jle
out
les
dec
mov
pop
std
and
or
int3
cmp
ds
mov
push
lea
xchg
jp
pop
cwtl
jle
rorl
nop
pop
mov
mov
nop
mov
in
mov
lahf
inc
mov
fimull
jge
sahf
jle
imul
fsubl
xor
ja
adc
jbe
faddp
cld
jns
shrb
mov
sub
inc
js
sub
loope
fsubrl
cmp
mov
test
repnz
jp
xor
aam
cli
fbstp
ss
setb
into
cmp
mov
mov
pop
jge
ret
aam
pop
icebp
gs
daa
xchg
bound
fidivrs
imul
loopne
lea
les
inc
in
setl
pop
jae
pop
cmp
push
mov
pusha
stc
dec
loopne
nop
adc
dec
loop
lods
in
aas
xor
xchg
sarl
and
adc
or
dec
test
pusha
in
sbb
scas
mov
mov
xchg
popa
cltd
ss
shll
cwtl
loop
add
jae
mov
lds
or
inc
repz
cwtl
xor
sub
mov
xor
mov
mov
sub
inc
fsubp
out
sbb
sbb
into
aas
int
shll
mov
cmp
push
mov
sub
sbb
cmp
insl
int3
jmp
fistpll
pusha
enter
je
and
rclb
xor
sbb
mov
xor
lret
js
popf
xchg
inc
sub
lcall
sti
push
inc
pop
cmp
ret
gs
sub
shll
call
loop
mov
sti
dec
pusha
cmp
sub
daa
or
sub
enter
cmpsb
mov
add
push
or
imul
fwait
cli
push
test
inc
pop
es
push
push
mov
cmp
inc
mov
loop
aas
jns
inc
sub
jb
cmp
add
out
in
vmwrite
sbb
cwtl
add
fwait
std
pusha
xchg
xor
jne,pn
mov
outsb
jl
push
gs
lcall
clc
movsb
pop
push
inc
aaa
fs
jecxz
mov
popf
xchg
and
stos
cld
mov
lcall
ja
imul
add
pop
bound
inc
inc
lods
cmp
cmpb
subb
lret
sbb
xchg
pop
mov
dec
jo
leave
push
xchg
insb
xor
mov
xlat
outsb
enter
dec
dec
xchg
pop
int
popf
adc
mov
rolb
pop
rcrb
es
add
mov
hlt
test
inc
int3
push
stc
hlt
es
test
xor
out
sti
mov
push
mov
stc
dec
aaa
xchg
aam
xchg
add
mov
sub
testl
shr
or
adc
mov
loop
dec
mov
mov
lds
mov
pop
jecxz
div
out
mov
mulb
inc
loope
jg
popa
aad
cwtl
push
pop
data16
ret
fimuls
inc
in
inc
sbb
ret
pop
aam
aad
cmp
cmc
rorl
sysexit
iret
mov
add
xchg
mov
mov
jne
inc
jbe
mov
mov
jb
xchg
pop
hlt
jns
aas
fisttpll
fidivrs
int
pop
xchg
adc
shll
mov
mov
insb
jp
out
inc
jg
andl
mov
xchg
jmp
dec
push
lds
or
data16
mov
sub
sti
xor
or
push
pop
xchg
cmc
sbb
mov
inc
dec
xor
xor
xchg
mov
bound
xor
inc
xchg
jno
pop
int3
loope
mov
scas
movsb
sub
xorb
aam
xchg
mov
movsb
lods
rclb
out
dec
shll
sarl
popf
and
andl
jb
shlb
rcll
lret
in
icebp
add
das
push
xlat
push
fisubl
or
and
or
fcompl
ljmp
enter
test
mov
and
shr
nop
out
pop
movl
xchg
jmp
push
xchg
es
pop
jmp
add
sub
cmp
je
test
pop
xor
push
sbb
pop
lods
iret
movsl
rclb
rcll
pop
jg
bound
jl
jp
or
add
movsb
cmpsb
dec
mov
mov
mov
mov
clc
popf
xchg
add
outsb
iret
lods
cmp
xchg
les
movsb
lcall
out
std
lock
cmp
jge
mov
xorb
pop
adc
mov
add
mov
repz
mov
jle
negb
mov
push
add
add
clc
cs
jb
mov
jge
pop
out
pop
jle
icebp
sub
xchg
mov
xor
and
mov
mov
fnstcw
jbe
imul
or
aaa
mov
xchg
mov
hlt
push
jbe
hlt
push
jae
inc
popl
out
lret
movsl
imul
mov
inc
clc
jo
mov
mov
xor
or
test
repz
ja
icebp
popa
dec
je
push
push
jb
cmpsl
dec
jns
push
xchg
xchg
xchg
adc
hlt
iret
push
pop
mov
lods
rolb
insl
jl
movl
dec
cs
inc
and
pusha
leave
mov
mov
xchg
pushf
cmpsb
push
test
lret
ja
cmp
dec
inc
sbb
int
es
hlt
push
out
sahf
decl
mov
mov
adc
gs
jmp
mov
jle
adc
insl
sub
jnp
and
movsb
and
jnp
xor
adc
loopne
test
dec
jg
int
cmp
mov
xchg
push
mov
inc
jae
xchg
pop
and
mov
mov
mov
add
mov
popf
lea
adc
repz
dec
inc
mov
mov
cmpsb
jecxz
lock
mov
clc
jecxz
ror
scas
adc
adc
roll
pop
push
cmpsb
in
out
push
xor
shlb
and
std
hlt
mov
sarb
push
mov
scas
or
pop
xor
sub
outsb
inc
movsb
fsubs
cld
ljmp
repz
ret
ljmp
pop
int3
add
mov
ja
cmpsb
lret
mov
jl,pn
push
add
dec
xchg
add
test
pop
aaa
scas
push
sbb
xchg
mulb
adc
dec
adc
or
fs
add
mov
vcmpss
sahf
cmp
pop
arpl
jne
mov
mov
dec
mov
pop
rolb
add
or
cmpsb
dec
orb
adc
test
in
ror
hlt
repz
sbb
sbb
push
sub
jno
mov
pop
in
and
inc
ja
mov
fdivp
jo
mov
inc
mov
inc
fisttpl
and
sub
mov
test
jnp
xchg
xor
or
cmp
out
out
lret
dec
outsb
ljmp
mov
rol
arpl
jno
int3
into
inc
cltd
ljmp
mov
fldt
dec
xchg
mov
aaa
mov
ja
aam
sub
pop
mov
sbb
cmp
fstl
mov
idivb
push
and
iret
sbb
adc
xchg
imul
and
pop
lret
mov
jo
cli
ficoml
dec
loopne
negb
sbb
rcrb
lret
lcall
arpl
scas
popa
mov
jno
divb
jmp
sti
inc
xor
gs
cmp
sbbl
in
lods
lcall
jne
ljmp
call
popf
adc
push
pop
incb
stos
pop
pop
jmp
jb
leave
cmp
dec
sbb
sar
mov
sarl
inc
les
ss
inc
pop
loop
ds
jmp
jb
pop
stos
in
cmp
xchg
cmpsb
jecxz
lcall
dec
movsb
shlb
inc
mov
clc
dec
sarb
lds
adc
clc
arpl
xor
mov
mov
aad
inc
lods
loope
mov
test
push
movsl
jge
rorb
adc
xor
scas
sbb
es
jae
imul
adc
hlt
mov
es
cmp
sbb
sub
jbe
inc
leave
bound
jecxz
repnz
in
in
cmc
pop
add
jmp
push
jecxz
mov
psubusb
mov
xchg
pop
lahf
subl
enter
and
inc
std
mov
test
sti
cmp
mov
jns
or
push
dec
aad
mov
das
fs
rol
andl
ss
stos
or
lret
into
mov
pusha
je
dec
adc
lock
adc
jb
enter
push
and
or
add
shrb
add
aaa
xchg
cmp
ret
xchg
cmp
and
add
je
faddl
jecxz
stc
push
pusha
add
lret
leave
push
rolb
pop
mov
in
dec
adc
pop
icebp
xchg
addb
mov
cld
xor
addb
xchg
push
fdivl
push
data16
fisubs
add
sbb
lret
mull
cld
ret
aaa
xchg
xchg
jnp
xchg
mov
int3
fdivl
mov
jmp
out
fldt
jge
pusha
inc
loope
and
mov
inc
xor
mov
dec
pop
shll
add
arpl
inc
push
sub
cs
fiadds
fndisi(8087
sbb
xor
incb
das
repnz
adc
add
into
fiadds
jle
movsb
mov
les
fsts
push
dec
mov
sub
sbb
push
das
js
pusha
xchg
popa
dec
ret
sahf
add
xor
ljmp
or
jle
cmp
xchg
jno
xchg
inc
popa
cmp
jecxz
movsb
mov
sbb
xchg
movsb
loope
ja
jo
or
sub
insb
stos
mov
inc
leave
inc
daa
and
in
jnp
dec
jo
pusha
mov
jns
stos
nop
shrb
cmpsb
daa
mov
outsl
inc
inc
push
push
inc
test
and
call
dec
rcr
adc
or
in
lcall
mov
push
push
mov
sbb
xchg
sbb
imul
jg
pop
and
jecxz
lock
negb
fcompl
sbb
jmp
leave
stos
ljmp
arpl
je
out
out
jb
xchg
scas
and
rolb
mov
jp
arpl
repnz
or
push
stos
sti
fsubrs
and
lds
dec
mov
cmpsl
mov
shr
hlt
das
jno
pop
mov
ja
jo
dec
adc
jmp
sbb
fldl
ljmp
sbbl
pop
pop
mov
push
roll
das
fisubs
mov
mov
sarb
rcr
cltd
jg
mov
incl
in
bound
dec
fdivr
cmp
in
xchg
push
cs
sub
and
push
jno
mov
int
aad
scas
push
xor
pusha
jg
movsbl
sub
and
call
int3
pop
cmpsl
ss
jbe
aas
add
push
clc
in
cltd
inc
int3
xchg
mov
sbb
lds
scas
xor
push
lea
push
push
cltd
or
in
iret
movsb
xchg
jns
int3
push
cli
adc
das
popf
fstenv
or
jne
in
inc
dec
jp
sub
repz
movsl
xor
inc
pushf
mov
cmpsl
mov
aaa
and
je
mov
enter
fnstsw
lock
sbb
lods
out
ror
dec
pusha
pop
add
inc
aam
and
xor
or
movsb
push
push
popf
ret
js
xchg
aaa
jb
inc
xor
xchg
ljmp
sub
push
popa
call
orb
shl
mov
dec
scas
mov
andl
inc
xchg
repz
outsl
mov
aaa
fisttps
mov
or
mov
adc
inc
push
push
fsts
inc
add
fldenv
dec
dec
xor
popa
xchg
jno
aam
xchg
push
nop
xor
pusha
push
shrl
lods
inc
aad
mov
dec
and
je
subb
pop
divb
icebp
stos
xorb
or
fstl
pop
dec
add
rcrl
add
ret
nop
add
dec
adc
mov
xor
mov
imul
xor
stos
dec
mov
movsb
stos
inc
movsb
enter
or
jo
das
jo
into
jb
test
jle
scas
pavgb
xor
and
dec
imul
in
lods
push
imul
lods
pop
mov
nop
fsubrp
iret
sti
repnz
fdivrl
or
push
pop
ret
xor
xor
in
out
add
iret
aad
inc
sbb
repnz
lret
push
dec
xchg
add
fldenv
push
cltd
pop
in
push
dec
fidivrs
gs
bnd
lock
rcrl
mov
fwait
mov
sub
mov
xchg
fldenv
aad
and
leave
and
xor
insl
push
subl
mov
addr16
les
inc
or
aaa
dec
xchg
aad
or
dec
pushf
dec
pop
and
and
push
scas
jp
fucomip
ret
popa
mov
add
ret
test
lcall
repz
mov
adc
cs
push
shlb
inc
sub
jg
mov
or
in
cmpsl
mov
shll
xlat
or
cmp
in
xchg
push
cli
sub
out
and
jl
cmp
pushf
xchg
cmp
inc
add
pop
sbb
cmp
outsl
stc
aam
stos
stos
mov
movsb
inc
pop
mov
or
cmpsl
cmpb
ds
data16
pop
mov
dec
pop
xorl
shll
cli
out
inc
cs
aaa
dec
jle
enter
xor
cltd
in
arpl
mov
iret
idivb
je
jp
sub
cmpsl
imul
shrl
pop
jecxz
hlt
jmp
fisttpll
idiv
jmp
repnz
jbe
in
subl
mov
inc
jmp
sbbl
fildll
push
add
inc
je
inc
xchg
sarb
insl
inc
jmp
les
bound
push
and
iret
mov
and
or
jmp
xlat
not
iret
cmpsb
xchg
sbbb
mov
lock
decb
dec
fdivrl
jne
pop
xor
cltd
hlt
mov
xchg
sub
dec
lret
int3
fs
cltd
mov
adc
mov
push
std
inc
dec
std
decb
cwtl
push
sub
pushf
imul
adc
movl
jnp
or
gs
imul
jp
lahf
adc
cmpsl
mov
adc
inc
mov
mov
mov
cli
cmpsl
xor
test
jecxz
xchg
stos
and
call
push
inc
adc
add
adc
pop
imul
inc
cmpsl
mov
sbb
orb
fiadds
andl
pop
xor
aad
sbb
aam
sti
cltd
jge
hlt
lds
cmp
out
je
inc
dec
movsb
and
test
mov
es
ja
movsl
pushf
xor
lds
push
cmp
or
xor
out
jns
xor
fs
repnz
enter
mov
xchg
cmp
aam
dec
addr16
in
out
cmp
into
jbe
inc
dec
cmp
enter
sub
lock
jne
or
inc
daa
fs
or
sub
mov
pop
stc
xchg
inc
je
mov
sub
icebp
jnp
inc
xor
mov
push
mov
out
inc
dec
call
push
mov
cmpsl
mov
pop
movsl
dec
or
lods
mov
cld
out
xchg
and
mov
sbb
out
out
jb
sbb
clc
fs
xchg
cwtl
jnp
repnz
add
adc
jge
lcall
cwtl
adc
jg
xor
sbb
add
aaa
mov
and
cmp
fs
fs
add
push
sbb
test
xor
or
dec
sbb
repnz
xor
lahf
xchg
mov
mov
adc
inc
fildll
mov
mov
sbb
or
jae
mov
inc
imul
aas
sub
xchg
inc
push
sbb
adc
loopne
mov
int3
push
out
push
sub
int3
jl
and
pop
mov
pop
movsb
ret
push
or
mov
cmpsb
and
mov
jl
insb
push
dec
push
and
shlb
cmovnp
je
scas
lock
inc
ja
mov
fs
imul
test
loop
dec
loopne
iret
cwtl
mov
jns
cli
mov
mov
out
enter
xlat
sub
cli
mov
lahf
std
lods
sbb
mov
jge
movsl
mov
sub
arpl
xlat
movsb
imul
push
cmpsb
mov
jge
mov
mov
int3
mov
xchg
das
pop
pop
push
test
adc
dec
push
cltd
jle
test
pop
sbb
xchg
test
jmp
int
movsb
les
movsl
mov
and
push
mov
loopne
push
ljmp
fdivrs
push
adcl
jl
cld
lea
int3
test
stos
xchg
cwtl
cmp
call
push
and
aaa
xchg
mov
sti
sbb
ljmp
jge
pop
inc
sbb
sub
rcll
dec
imul
and
je
aaa
shrl
popa
call
add
cmp
stos
test
pop
movsb
xchg
fldenv
in
mov
xor
xchg
jne
jo
mov
or
imul
lds
lret
mov
in
add
filds
fnstenv
xor
lods
ja
scas
out
jp
adc
fnstcw
inc
and
add
xchg
xchg
loope
cli
leave
outsl
cmp
sarl
xor
adcb
xor
adc
fisubs
pop
add
push
int3
icebp
or
inc
sub
cmp
lea
aad
into
movsl
pusha
xchg
xchg
repz
jmp
fildll
lahf
imul
repnz
clc
roll
mov
lock
cmpsl
mov
pushf
dec
aaa
lahf
daa
pop
push
push
lret
cs
adc
and
jp
fst
cmp
jne
mov
ss
mov
mov
or
mov
xor
pop
lds
jnp
sbb
xchg
dec
mov
ja
pushf
shr
ret
push
shrb
xor
push
or
add
jo
call
or
adc
gs
loope
cli
aaa
scas
test
mov
pop
lret
or
repnz
mov
pop
fs
test
lret
or
movsb
mov
int
cmp
push
cs
aas
sbb
mov
outsb
hlt
sub
mov
jae
pop
adc
jbe
icebp
pop
lret
cmp
rcl
fidivl
mov
ret
test
iret
jnp
ret
cmpsl
mov
lods
fs
add
sub
icebp
push
lods
popa
push
icebp
into
add
out
push
fldenv
movsl
mov
data16
jg
lret
mov
test
mov
or
popa
mov
mov
lock
iret
and
sti
or
pop
inc
ja
rorb
jge
and
lds
cmp
add
and
adc
ror
lods
dec
movsl
scas
repnz
add
inc
jae
imul
js
adc
call
inc
mov
daa
cmp
or
cmc
jo
pop
push
or
pop
dec
stos
or
mov
sahf
and
dec
dec
fs
loopne
divb
cmpsb
imul
pop
cmc
xchg
xor
cmp
imul
loope
mov
dec
cld
lock
push
pop
sti
clc
xchg
push
out
push
addl
or
cli
mov
jmp
sbb
dec
movsb
cli
bound
or
inc
std
push
fwait
cmp
pop
xor
fsts
and
pop
mov
fldcw
fdivrs
imul
femms
and
sub
sbb
mov
repz
lret
push
in
int
sar
int
jmp
ret
add
xadd
xor
int
adc
arpl
lret
mov
iretw
mov
bound
stos
xchg
sbb
xlat
dec
xor
fildl
ljmp
sbb
dec
push
loope
sub
cmpsl
fwait
pop
bound
mov
or
dec
xor
pop
gs
adc
mov
aaa
es
push
aas
add
jge
ljmp
mov
or
or
dec
mov
mov
shlb
es
sub
icebp
pop
fcmove
sbb
sbb
movsb
aaa
repnz
push
clc
xor
orb
notl
push
inc
repnz
mov
hlt
dec
add
cmpb
hlt
sub
xor
mov
dec
andl
popf
incb
xor
int3
cmp
jne
pushf
push
mov
adc
repnz
cmp
xor
loope
insl
adc
jnp
enter
icebp
addr16
and
pop
adc
jle
fisubrl
inc
add
mov
shll
test
fcoms
jmp
popf
in
push
jle
cmc
add
add
cmp
or
mov
adc
mov
gs
and
mov
ret
push
lods
ljmp
pop
hlt
call
daa
fidivrl
inc
mov
ret
divl
cmpsl
test
push
or
dec
mov
cmp
stc
aas
in
hlt
push
xchg
or
pop
sub
pop
testl
enter
cmpsl
movsb
sbb
cs
push
imul
andb
loop
jns
loop
mov
loope
cmp
inc
lahf
jno
sbb
or
lea
adc
dec
sbb
cs
add
cwtl
mov
mov
and
lahf
inc
pop
cltd
mov
pop
xchg
loopne
push
jb
xchg
loopne
lods
lods
arpl
pusha
push
xchg
pop
jecxz
adc
sub
cmp
js
dec
add
mov
clc
mov
cmp
dec
xor
in
cmp
mov
test
loope
inc
subb
jbe
pop
xchg
pop
pusha
xchg
mov
decl
shrl
in
movsl
xor
add
insl
push
push
push
test
insl
hlt
outsl
test
ret
sbb
loopne
mov
mov
negl
jl
jmp
fwait
xor
mov
outsl
sub
mov
xor
ror
xor
data16
or
push
scas
mov
pop
dec
data16
or
shlb
sub
push
ret
cwtl
shl
lea
bound
aam
jo
sbb
bound
ret
dec
mov
jg
cmpsl
ja
aaa
adc
and
das
sbb
in
mov
les
int
push
push
push
addr16
stc
pop
and
mov
sbb
adc
mov
xchg
inc
xor
popl
push
std
imul
push
pop
adc
loop
mov
lods
xchg
pop
cmp
sub
fcompl
aaa
int
out
icebp
cmp
bound
jp
push
fbld
add
and
popf
adc
lods
sbb
in
cmp
cmp
and
push
out
loopne
add
sarb
das
and
pusha
imul
dec
mov
adc
adc
divl
and
mov
sbb
out
imul
jne
std
pop
jns
stos
pushf
aaa
xor
test
lret
adc
fcomps
rcrb
out
or
shlb
stos
jmp
dec
and
cmp
ja
sub
movsb
pop
mov
xchg
lret
mov
fdivr
jle
ret
mov
in
mov
push
in
sbb
fidivrs
iret
and
lret
icebp
sbb
mov
mov
sti
and
in
mov
sub
push
es
movsl
inc
cld
add
jp,pt
xor
imul
pop
xchg
push
xchg
into
or
andl
movsb
mov
cmpsb
dec
aaa
xchg
lcall
sbb
cmc
or
mov
enter
insl
nop
ret
imulb
call
stos
xchg
xor
mov
xchg
mov
dec
inc
mov
mov
pop
mov
insl
lret
lods
mov
in
test
add
mov
mov
jmp
sbbl
pop
and
jnp
cmp
jge
rcrl
into
test
subb
mov
and
divl
subb
das
sub
cmp
insl
sahf
enter
out
out
ret
pop
sub
inc
ljmp
lods
ret
dec
mov
push
push
int3
scas
jbe
lret
mov
dec
enter
rcrb
shll
ror
outsb
and
adc
mov
stos
test
adc
mov
adc
fwait
loop
push
jae
xchg
mov
jg
imul
ljmp
gs
xchg
cmp
sub
jb
cmp
xor
mov
les
jnp
jbe
mov
mov
inc
stos
mov
hlt
mov
lock
rcrb
xor
xor
xchg
push
push
ret
fiadds
dec
add
pop
jl
jae
outsb
dec
mov
out
push
orl
mov
clc
xchg
mov
add
dec
pop
shlb
enter
repnz
cmp
and
sub
jae
movsl
mov
loopne
add
or
push
clc
jnp
and
sub
sahf
mov
gs
push
les
mov
push
aam
shl
dec
mov
fstl
mov
jmp
fucom
or
cwtl
je
aaa
stos
xor
pop
mov
cli
outsb
nop
xlat
pop
out
sar
test
lret
std
mov
pop
adc
outsb
xchg
shll
std
movsb
test
test
mov
sahf
xor
loop
inc
out
ss
ret
int
andb
mov
adc
push
in
daa
lret
add
test
pop
dec
mov
mov
in
rclb
insb
pop
mov
mov
mov
enter
lods
aad
jp
inc
mov
jp
or
push
jge
outsl
adcb
ret
xchg
call
pop
imul
push
sub
push
aaa
mov
fdivr
gs
add
enter
stc
fimull
cmpsb
and
push
or
ss
imulb
fistpl
dec
add
fwait
aam
mov
cmpsl
mov
popf
loopne,pn
loopne
push
leave
das
mov
out
adc
dec
aad
adc
leave
push
mov
ss
dec
cmp
xor
pop
adc
dec
xchg
pop
pop
jne
push
roll
mov
sti
lock
and
sarl
mov
adc
sbb
push
aas
scas
sbb
mov
dec
repnz
shlb
and
outsb
dec
adc
les
insl
inc
xchg
mov
out
lods
jno
sbb
testb
ljmp
dec
test
sti
adcl
add
lret
cmp
repz
ljmp
outsb
or
push
adc
inc
lock
jbe
inc
or
sub
icebp
and
clc
es
arpl
scas
mov
sbb
or
mov
pop
jl
jp
stc
and
lsl
sbb
fcmovne
add
call
dec
sbb
arpl
adc
cs
pop
xchg
test
mov
cltd
cwtl
bound
add
mov
adc
or
add
xchg
fcmovnbe
pusha
xor
pop
xor
loop
push
roll
jl
je
cmp
or
cmp
xchg
stos
int
test
test
fisttpl
jnp
outsl
out
sbb
mov
dec
daa
mov
lods
data16
jg,pn
nop
add
inc
scas
cmp
in
pop
movsl
popa
sarl
xchg
or
aas
dec
imul
or
fmuls
inc
inc
mov
pop
in
mov
sub
out
mov
aas
aas
pushf
addr16
sub
pop
mov
xor
faddl
pop
shrl
xchg
inc
push
cs
adc
lods
loope
ds
movsl
rclb
jns
adc
or
fisubrs
push
fistps
mov
sbbb
fmull
mov
fwait
icebp
mov
sub
clc
lcall
mov
pop
fmul
jns
lcall
jmp
pop
dec
xor
jp
jbe
inc
jne
shr
jo
xchg
arpl
adc
xor
dec
std
in
cld
mov
scas
data16
sbb
add
lds
cmpsl
sub
int3
std
subl
pop
mov
sti
cmp
inc
fwait
pusha
stc
and
dec
lods
mov
loopne
pop
and
jge
jno
cmc
xlat
popa
lcall
and
sarl
push
jmp
lahf
ret
inc
fldt
in
jecxz
sub
add
stos
pop
mov
jle
mov
pop
repnz
fisubrl
rcrb
sti
dec
enter
or
leave
xchg
mov
xor
jb
xor
movsb
adc
inc
add
dec
mov
add
sbbb
fdivl
fmuls
mov
or
sbb
push
jle
or
repnz
rorl
adc
cs
adc
fucomip
out
andl
cs
jge
syscall
mov
leave
push
mov
lea
xor
stos
xchg
shrl
std
mov
rolb
sarb
dec
jg
jbe
shll
xlat
xlat
cmp
sub
and
mov
int
push
clc
xchg
mov
rolb
and
add
hlt
adc
flds
fstps
out
ljmp
pop
sbb
jge
cwtl
push
int
stos
jge
lret
cmp
in
iret
sub
sbbb
fisubs
sub
test
test
nop
sbb
ret
dec
dec
lea
in
insl
xchg
cmp
cwtl
filds
jns
push
loope
mov
xchg
inc
pop
lock
leave
or
jmp
lds
inc
xor
loope
js
ja
testb
movsl
inc
sbb
push
cli
das
test
inc
out
xchg
dec
das
lock
shl
lret
aad
sbb
loop
arpl
mov
movsb
fsubs
inc
mov
sub
fs
sar
daa
repnz
icebp
mov
fcmovb
ret
pop
inc
xor
imul
dec
mov
cmp
fs
jno
repnz
sub
shll
and
daa
cmp
and
cs
jle
sub
push
and
outsl
sbb
sub
jp
adc
lret
shlb
mov
mov
mov
pushf
xchg
xchg
sbb
jno
shr
shl
mov
nop
mov
mov
jge
sahf
mov
jns
add
inc
fsubrl
fidivs
pop
call
and
imul
push
fstpt
sarb
or
iret
sub
popa
pop
into
jne
rcrl
std
fwait
inc
xchg
lods
ret
xor
or
aaa
stos
jns
pop
mov
adc
out
dec
enter
popf
mov
cmp
ficompl
rcl
dec
clc
push
lock
mov
cmp
in
adc
mov
inc
push
adc
rcll
pop
or
mov
sbb
fisubl
cmp
sbb
and
xchg
push
push
inc
cmc
notl
jg
dec
push
movsb
cmp
dec
mov
arpl
mov
lahf
aam
mov
fs
or
sub
fstps
gs
popa
ss
imul
lods
clc
ljmp
mov
mov
je
adcl
aad
shll
dec
sbb
aaa
xlat
dec
sbb
push
enter
int3
or
cmp
das
jmp
frstor
sub
stc
out
ja
pop
rorl
into
xchg
push
insb
lods
cmpsl
pushf
outsb
movsl
das
lods
and
pmaxub
in
repz
ja
bound
pop
repz
shlb
cmp
das
repz
enter
enter
dec
push
cmp
loope
cmp
xor
mov
cmp
push
cmp
enter
loope
insb
jns
lret
dec
push
movsb
div
lods
loopne
sub
pusha
push
pop
ja
add
cwtl
mov
mov
cltd
jg
icebp
ljmp
cmp
cld
pop
cmp
sbb
xchg
cmp
shrb
inc
bnd
inc
pushf
sbb
scas
lahf
subl
or
lds
sub
pop
jae
and
aas
lret
sbb
mov
andl
clc
add
movsl
adc
hlt
xor
pop
shll
add
pop
fcoms
out
std
std
insb
shlb
mov
jle
dec
or
or
push
add
sub
or
push
xchg
or
testb
jg
push
fstp
dec
or
pop
call
pop
push
push
test
cld
jne
pop
lods
js
sub
iret
mov
lods
inc
and
scas
pusha
push
or
cwtl
push
lcall
adc
lcall
dec
repnz
mov
test
cmp
clc
jbe
fistpll
jns
incb
dec
xchg
adc
jo
gs
jnp
sbb
out
fistps
adc
leave
jmp
in
jae
ja
and
xor
or
jp
pop
adc
mov
bnd
sahf
fistl
ds
push
pop
add
js
mov
sarl
mov
nop
or
js
mov
or
aam
push
dec
inc
mov
adc
aaa
dec
int3
popf
jnp
aas
inc
cmc
stos
out
popf
adc
fadds
lods
xchg
andb
call
jb
mov
jbe
jns
cmc
adc
push
add
mov
imul
lea
mov
rolb
push
push
sbb
xlat
jbe
dec
add
adc
rclb
pop
subb
inc
and
mov
imul
lret
add
push
lret
xor
cld
xchg
sub
leave
lds
push
int
push
imul
and
mov
sti
add
mov
push
pop
or
and
movsl
das
push
decl
jl
xchg
mov
push
mov
or
lret
lret
jmp
ret
fdivrl
sti
adc
cmc
add
inc
mov
stos
mov
icebp
adc
addb
push
or
sbb
ds
pop
imul
adc
test
jbe
pop
or
das
out
mov
shrb
shlb
in
lods
loopne
arpl
xor
addr16
pop
out
add
xchg
dec
mov
inc
sbb
pop
xor
aas
inc
enter
cltd
mov
cli
enter
lret
mov
outsb
loopne
inc
imul
mov
mov
dec
mov
std
outsb
popl
int
mov
sti
pop
movsl
pop
cmp
ss
dec
xchg
scas
inc
lods
cmpl
in
pop
sbbb
add
xlat
inc
pop
ljmp
inc
or
hlt
dec
hlt
push
ret
das
rorl
pusha
js
aam
jbe
jmp
dec
jnp
fcoms
insl
xlat
mov
test
lret
ljmp
or
imul
inc
pop
movsb
dec
rolb
xchg
or
cmp
movsb
mov
loop
popa
in
data16
mov
stos
xchg
pop
lds
js
dec
jae
xchg
dec
rorl
adc
dec
inc
and
jle
jl
pop
aaa
inc
push
into
cwtl
or
stos
imul
enter
jb
and
nop
imul
cltd
lret
sbb
pop
cltd
inc
mov
lret
xor
xchg
mov
lret
jb
push
dec
dec
mov
fucomi
cmp
outsl
popf
fidivrs
mov
sbb
jae
push
jecxz
and
loope
sub
shl
pop
jnp
test
mov
lea
jns
bound
fistps
pushf
jecxz
xor
adc
scas
sub
mov
xor
mov
iret
dec
pop
mov
and
movsl
or
push
call
and
sub
dec
push
sar
push
mov
mov
sbb
lahf
filds
jecxz
daa
pop
out
sbbb
cmc
inc
jns
aad
push
cmp
jg
mov
mov
and
pop
sbb
cli
mov
jae
es
or
mov
cmpsl
jl
cmp
addl
daa
push
push
mov
jnp
dec
add
fisubs
mov
mov
sbb
dec
mov
push
inc
sub
out
sub
cmp
and
pusha
shrb
faddp
mov
daa
enter
pop
int
and
out
imul
adc
rcrb
mov
test
popl
xor
push
inc
mov
cmp
xchg
and
hlt
mov
jmp
fisubl
lcall
or
gs
int3
nop
push
js
int3
sbbl
out
out
add
xchg
or
into
cmpsw
xchg
cwtl
arpl
fdiv
mov
push
out
adc
xor
addl
dec
cmp
iret
lret
pop
inc
jmp
inc
cmp
ss
push
pmaxsw
scas
mov
sbb
mov
pop
std
cmp
mov
jg
ja
es
test
xchg
xchg
add
cld
es
lock
icebp
mov
jmp
push
nop
dec
jecxz
xchg
mov
xchg
rolb
and
mov
outsb
add
call
js
fisttpll
add
cmc
sub
sub
out
out
ljmp
in
andl
ret
cmp
jno
jmp
rcl
mov
lea
addl
inc
cmp
leave
and
jecxz
dec
sub
gs
clc
cmp
jle
cs
pusha
sbb
into
addr16
repnz
inc
xchg
sbb
mov
inc
inc
mov
lahf
shl
dec
mov
das
xor
lret
mov
adc
insb
push
dec
add
pop
imulb
es
mov
xchg
outsl
nop
je
push
xchg
sub
add
faddl
cli
cmp
sbbb
pop
ds
shlb
movsl
js
add
mov
je
inc
xchg
negl
mov
call
push
xchg
sub
out
dec
inc
pop
jnp
or
cmp
xchg
pushf
call
jb
js
mov
push
mov
adcl
adc
mov
nop
data16
cmp
push
out
fidivrl
jbe
lcall
repz
ret
xchg
cmpsl
mov
in
mov
add
or
jg
mov
insb
orb
inc
popa
repz
shll
mov
into
fstl
je
addr16
add
inc
jnp
jle
popf
je
aaa
call
cmc
mov
mov
mov
mov
push
fnstsw
lods
cmp
or
add
test
test
add
mov
push
jno
pop
clc
jae
nop
xchg
pop
in
mov
out
xor
inc
rcrb
shrb
dec
jle
int
cmp
jo
dec
mov
mov
arpl
fbstp
scas
rcrb
mov
or
stc
lock
or
and
inc
lds
nop
repnz
sti
jo
add
ret
pop
aad
push
jae
cmp
iret
pusha
lret
aam
daa
pop
cmp
int3
adcb
mov
add
fdivl
bound
adc
test
add
in
jnp
pop
cltd
shll
jge
lret
inc
popa
push
sub
and
imul
movsb
lcall
inc
std
mov
daa
dec
test
iret
cmp
and
jmp
xor
mov
sub
outsl
stos
mov
mov
pop
adc
lahf
cmp
xchg
cmc
notb
jmp
cmpsl
icebp
mov
cmp
pop
sarl
add
jle
cmp
pop
rcrb
mov
mov
xor
xchg
test
sub
mov
xchg
mov
les
xor
outsb
repnz
out
add
cmp
addr16
imul
jo
mov
mov
sub
fcoms
sub
sub
test
adcb
push
push
inc
ds
andl
iret
adc
mov
loope
add
clc
jecxz
rcr
mov
or
stos
es
cld
pop
dec
xor
ret
repz
insb
rcrb
pusha
xchg
mov
aam
sub
stos
lock
sub
add
pop
cmc
icebp
arpl
ljmp
sub
shr
inc
or
dec
pop
xchg
and
fstpt
cli
mov
pusha
mov
shll
push
ret
jo
lock
ret
cs
jl
jmp
jecxz
loopne
pushl
jp
lcall
lods
jl
add
mov
push
adc
bound
scas
sbb
mov
add
fincstp
adc
out
es
adc
clc
cs
and
icebp
ss
outsl
sbb
sub
scas
call
push
dec
cld
pop
xchg
dec
lds
jge
cmp
mov
cmp
dec
pushf
sub
mov
cltd
sbb
mov
jbe
into
mov
es
imul
adc
adc
lods
mov
jno
xor
xor
inc
adc
dec
push
sub
rcrl
mov
hlt
or
lock
xor
mov
fldenv
xchg
aaa
inc
loopne
xchg
popf
xor
xor
aaa
je
arpl
sbb
out
mov
push
adcb
movsl
inc
sbbl
inc
lahf
lret
mov
imul
mov
mov
outsb
inc
xor
add
cld
dec
dec
pop
adc
lea
xor
mov
ds
sbb
movl
or
jge
jo
sbb
mov
mov
adc
clc
hlt
mov
pop
adc
lods
leave
test
xor
mov
xlat
xchg
imul
outsb
mov
mov
sahf
test
sub
popf
shlb
mov
jge
push
push
cmp
xchg
sti
mov
sub
outsb
push
cmpsl
ljmp
mov
dec
sbbb
jae
cmp
into
or
sub
adc
adc
jb
mov
adc
popa
mov
ja
jg
sub
xor
jmp
jne
ss
fnstcw
loope
pusha
lahf
xor
jnp
stos
hlt
inc
sub
fists
jnp
lret
sub
arpl
inc
xor
mov
fadd
fisttpll
cmp
ds
push
ljmp
fdivrl
inc
pop
mov
movsl
in
bound
loope
cwtl
imul
sub
lret
add
in
mov
sub
inc
cltd
std
add
in
stos
add
jno
or
jbe
adcb
xchg
cmp
das
jns
inc
jg
inc
dec
in
sbb
sbb
mov
and
adc
or
js
or
stos
scas
mov
mov
push
mul
inc
ljmp
ja
adc
mov
or
inc
sar
int
dec
dec
xchg
ficompl
pop
ljmp
loopne
shl
and
or
outsb
push
adc
int3
rolb
packuswb
mov
testl
or
mov
inc
xchg
mov
stc
fwait
inc
pop
adc
and
lret
arpl
and
sbb
cmp
add
jbe
add
int3
popf
dec
ljmp
jmp
les
pop
and
stos
std
or
mov
adc
inc
adc
push
ja
out
xor
ljmp
push
jge
aaa
in
shl
pop
push
sub
lahf
int3
cmp
aad
pop
mov
mov
push
pusha
mov
ja
mov
cmp
pop
inc
or
lahf
push
lcall
dec
sbb
aam
test
jno
dec
scas
jo
adc
cmp
enter
push
arpl
jb
sub
sub
movsl
mov
arpl
test
outsl
clc
sbb
sub
std
sahf
out
sbb
out
rcrl
pushf
loopne
push
ret
cwtl
mov
sti
mov
pop
push
mov
outsb
mov
mov
iret
les
negb
es
mov
sbb
pop
sbb
or
pop
xchg
lock
jge
jecxz
or
jnp
jmp
mov
out
jl
cmp
jmp
imull
sub
and
inc
pop
adc
es
pop
cmpsb
out
ds
js
push
add
loop
xchg
sbb
mov
jge
movsl
adc
outsl
sbb
leave
push
push
xchg
add
pop
les
or
or
test
and
cs
dec
sub
jmp
and
cli
in
popf
mov
in
mov
mov
movsl
sbb
mov
testb
inc
repz
add
mov
aad
fs
inc
paddsw
adc
jmp
call
je
in
xchg
pop
in
push
or
sbb
jbe
int3
xorb
dec
mov
or
loope
daa
and
insl
cmp
add
jns
rcl
and
mov
mov
addr16
mov
xor
stc
ficomps
nop
aad
pop
dec
and
rcl
pop
xchg
dec
inc
fidivrs
std
cmp
jp
xlat
mov
scas
inc
popf
xchg
cmpsb
fisttpll
lds
rcrl
adc
or
ret
das
fcmovnbe
mov
inc
loopne
lds
in
fdivp
subb
cmp
pop
jecxz
mov
je
sbb
das
push
lret
ret
out
mov
jge
pop
dec
push
fstl
jno
mov
stos
loopne
jge
jecxz
jno
cmc
jmp
xchg
out
cwtl
inc
lahf
test
pop
cmp
mov
fdiv
addb
sbb
cmp
mov
xchg
insl
and
addr16
and
sub
clc
sub
int
mov
ja
sbb
or
mov
sbb
dec
mov
test
stc
lahf
mov
mov
mov
clc
cmp
lcall
jg
sti
mov
push
adc
ja
aad
add
call
stos
scas
jnp
sbb
dec
add
mov
clc
sub
sbb
mov
dec
mov
mov
pop
orps
mov
test
mov
fbld
mov
mov
out
xchg
inc
mov
adc
mov
orb
cld
pop
push
jae
mov
cmc
addr16
psllq
test
repnz
cmpl
push
stc
xor
xlat
jle
addb
cmp
ret
imul
pop
inc
idivb
fs
dec
fucomp
jmp
mov
jecxz
in
mov
jmp
ljmp
adc
loope
sbb
xchg
imul
out
lods
mov
aas
pop
sub
test
jne
js
int3
pop
cwtl
pushf
in
cmp
les
leave
sub
sahf
xlat
insl
popf
push
mov
fdiv
fisttps
lcall
ja
movsb
pop
xor
inc
jae
nop
mov
fsub
xchg
sbb
pop
cmp
fwait
pop
xchg
inc
loope
dec
xor
in
lret
in
shll
fs
sub
add
adc
mov
mov
sbb
mov
in
xchg
movsl
pushaw
popf
ja
and
mov
pop
cmp
std
frstor
es
jmp
xor
pushf
xor
into
sbb
clc
mov
cmp
pop
mov
sub
movsb
xchg
push
aad
mov
pop
adc
mov
push
xchg
cs
jbe
cld
and
cmc
cmc
dec
stc
sbb
add
sub
jno
push
loopne,pn
aas
mov
inc
ljmp
notb
and
xchg
vpandn
jns
leave
xchg
and
out
mov
xor
mov
mov
stc
xchg
or
mov
sub
xchg
xor
sti
mov
push
sub
lret
dec
jno
insb
in
adc
shl
mov
dec
js
cli
cmp
sbb
push
je
mov
push
mov
xor
std
xor
xor
xchg
and
lahf
mov
leave
jne
fdivrs
clc
xor
hlt
mov
mov
push
sbb
popa
lea
aam
push
cmpsl
xor
in
xchg
decb
inc
push
int3
pushl
loope
daa
mov
iret
insb
and
jns
inc
test
mov
test
loopne
mov
bound
xor
aam
adc
arpl
loop
stc
loop
mov
pop
or
or
ror
inc
std
jmp
adc
cmp
rcrl
pop
shll
imul
jno
std
push
aas
adc
cli
cmp
xchg
test
subl
adc
lahf
xchg
ja
es
leave
mov
scas
in
outsb
jns
and
stos
call
xor
xchg
fadd
xor
dec
lahf
mov
mov
xor
bound
jbe
inc
fsubrs
enter
xor
dec
leave
adc
insl
dec
cmp
or
dec
cmpsb
mov
cmpb
cmp
xchg
int
loopne
push
push
lock
cmp
cmp
pusha
fistps
lods
int
scas
jo
jbe
fidivrs
sbb
mov
sbb
fdivrs
adc
sub
mov
and
mov
lea
cmp
scas
jno
fs
adc
jmp
add
jae
push
mov
jecxz
mov
les
hlt
add
mov
arpl
arpl
jecxz
enter
push
loope
sub
ja
adc
arpl
cmpl
xchg
jl
pop
in
out
pushf
out
push
add
inc
adc
and
jle
pop
sbb
cmp
mov
addl
test
inc
sbb
notb
test
or
subl
lret
decl
faddl
popa
mov
ja
fisubrs
scas
lret
test
dec
or
cmp
scas
jo
adc
push
out
and
arpl
push
cmpsl
fwait
out
and
movsb
rol
push
nop
mov
jl
out
orl
mov
stos
lods
inc
xchg
jne
fimull
xchg
jbe
push
pop
sbb
js
aam
sbb
mul
cmc
es
cli
push
iret
ss
pop
arpl
xchg
fcoms
ret
xchg
push
shlb
stos
adc
add
out
sbb
pop
add
inc
popa
mov
add
dec
or
inc
cmp
sbb
add
iret
jae
decb
sub
push
mov
xchg
mov
sbb
lds
in
xlat
push
fucomp
mov
sarb
dec
jb
lcall
dec
or
cmp
push
xor
mov
xchg
fsts
mov
ret
fneni(8087
push
cmc
pop
sub
mov
cld
inc
or
cli
mov
mov
jge
fdivrs
ret
fistpll
jns
dec
add
lcall
or
jmp
aad
mov
lods
loope
fwait
loope
fiaddl
lahf
sbb
cli
and
sbb
clc
xchg
inc
mov
popa
outsl
sbb
mov
inc
pop
std
das
jle
arpl
in
popa
mov
fs
push
loop
cmp
xchg
orl
pop
mov
sub
sub
js
push
addb
loope
movsb
mov
inc
mov
inc
jp
fs
aad
mov
sub
aas
fistpl
mov
mov
rcll
in
daa
xchg
lock
sub
out
sbb
jl
addb
jge
stos
cmp
xchg
shll
into
rcll
nopl
sbb
or
mov
fidivs
std
adc
pop
mov
xor
hlt
and
mov
push
notb
mov
aaa
icebp
xchg
fstl
call
mov
shr
xchg
mov
rcll
xor
in
ret
jecxz
test
cmpl
sub
mov
pop
sub
cmp
mov
cltd
cltd
xor
repz
stos
adc
repnz
and
jbe
shlb
ja
ljmp
jmp
movsb
sub
push
enter
fstpl
mov
add
xchg
in
push
out
loop
das
inc
sbb
shll
leave
mov
shrb
js
push
or
neg
movsl
cmpb
popa
fimuls
inc
int
jno
jno
mov
jmp
jp
pushf
jnp
daa
pop
dec
sbb
jle
inc
call
or
bound
stc
xchg
imulb
or
cmpsb
negb
and
insb
into
push
int
or
into
inc
mov
mov
out
ficompl
jo
xchg
inc
ss
cs
aam
daa
fsubl
shrb
test
xlat
ja
lods
dec
mov
push
imul
pop
mov
test
jecxz
push
adc
push
imul
jmp
int3
movsb
xchg
aam
jns
adc
jmp
das
mov
push
mov
xchg
cmp
jbe
pop
cld
test
pop
fs
ret
sbb
sbb
pop
mov
fwait
test
xchg
hlt
dec
mov
mov
mov
flds
fstp
in
push
jg
imul
fwait
xlat
mov
mov
jb
sbb
mov
pop
pop
mov
xchg
mov
in
adc
movsl
dec
clc
xchg
lods
sar
dec
lcall
dec
cmpsl
dec
lahf
mov
xchg
mov
cmc
scas
inc
das
jnp
in
xlat
mov
xchg
das
inc
inc
jae
mov
push
mov
movsl
addb
adc
push
stos
and
dec
stos
ficomps
aaa
sub
outsl
sbb
in
pop
data16
dec
fidivrl
mov
mov
inc
andl
lret
sub
faddp
aad
shrb
mov
ljmp
xchg
adc
xchg
gs
in
aam
push
mov
mov
loopne
mov
lds
ficomps
test
icebp
mov
adc
and
rcrb
pop
ret
add
dec
popa
dec
aas
leave
mov
xor
mov
imul
shll
xor
jne
ss
or
mov
jp
fsubs
out
pop
test
or
leave
mov
mov
subl
call
sub
xchg
shll
dec
in
jns
push
imul
mov
inc
or
mov
inc
mov
push
push
popl
push
and
clc
and
mov
jae
sahf
addr16
sbb
shl
xor
jb
cmpsb
pushf
jae
outsl
ja
sbb
repz
andl
adc
xor
movb
cmc
mov
add
pop
fstl
sbb
lock
xchg
mov
dec
imul
rolb
test
mov
arpl
cmp
lret
mov
mov
mov
and
fst
lds
jbe
sub
iret
movsb
inc
iret
sub
fimull
sbb
jbe
add
enter
mov
xor
mov
shlb
shrl
lods
add
mov
xor
test
shlb
out
das
adc
adcl
popa
push
xchg
lods
mov
scas
xchg
push
nop
mov
mov
xor
and
outsl
adc
pop
adcl
jns
fwait
aas
lcall
xchg
pop
cwtl
aas
test
push
fstl
rcrb
mov
outsl
rorl
cmp
mov
xor
lods
lea
pop
mov
push
aad
jmp
ljmp
mov
vpunpcklbw
arpl
mov
or
push
mov
sbb
push
fcoml
inc
mov
mov
lret
cmp
jne
xchg
jb
out
sbb
mov
xlat
andl
arpl
and
cmpsl
aad
into
lret
insl
in
dec
out
lods
sub
pop
mov
mov
inc
sub
xlat
gs
dec
dec
lret
pop
popa
out
sub
iret
aaa
gs
mov
sbb
push
addl
fcomps
es
loopne
insb
push
mov
push
pop
xchg
pop
push
mov
orl
push
outsl
add
jb
or
pop
repnz
jge
and
pop
xor
test
push
mov
rcrb
out
popa
lds
xor
pop
rcrl
or
pop
cli
mov
mov
aam
sbb
ja
cmp
sub
xor
add
sbb
mov
popa
mov
ja
addr16
xor
mov
and
sub
shll
jge
lcall
jmp
ss
sahf
xchg
and
cs
or
cmp
hlt
int3
ror
popa
mov
ficompl
in
daa
ljmp
and
mov
sahf
xor
sub
mov
xchg
outsb
jbe
nop
push
dec
jb
push
push
and
jl
cmp
in
and
dec
xchg
mov
dec
aad
jle
stos
sub
ficomps
lret
pusha
inc
clc
mov
pop
xchg
jbe
bswap
xchg
sub
imul
adcl
fcomps
cmp
cmp
aaa
pop
or
and
ss
dec
orb
pop
outsl
pushf
lahf
inc
into
gs
jno
test
inc
hlt
cmpsl
fldenv
cmp
aas
movsb
aam
inc
fcompl
andb
aam
dec
iret
lods
push
fstps
mov
lahf
cld
shll
xor
je
ds
prefetch
or
repnz
sbb
add
cwtl
jno
pop
pop
imul
xor
shll
in
dec
sahf
sbb
sub
out
xor
dec
add
jl
std
pop
sbb
leave
pop
imul
cmp
mov
daa
cmpsb
mov
outsl
inc
jg
mov
fildll
ss
ss
cmpsl
and
lea
int
out
push
loopne
dec
std
nop
adc
or
sub
mov
and
cmp
jge
push
bound
mov
fwait
lret
pop
and
out
popa
or
or
in
out
xlat
aam
sub
dec
push
sub
out
or
sbb
cld
imul
aad
daa
add
mov
test
test
jb
add
loopne
xchg
add
xor
out
lahf
iret
rcll
jno
xchg
ror
xchg
mov
pop
inc
fcomps
cmpsb
into
rolb
imul
mov
xchg
and
mov
push
ds
push
xlat
jle
sub
cwtl
xchg
lods
mov
arpl
sarl
pop
mov
neg
scas
xchg
fisubrs
xor
out
xchg
mov
sub
stos
jnp
fs
fildll
mov
aad
dec
inc
lea
or
std
nop
call
inc
cld
sub
movsb
cltd
or
cmpsb
jnp
andb
cmc
push
test
sbb
in
pop
cltd
sbb
rorb
push
xchg
jp
sbb
scas
and
lock
ss
popf
jnp
xor
fnsave
sti
inc
add
and
repz
js
or
adc
cmp
sub
andb
nop
lds
in
in
adc
fdivp
lcall
mov
pop
mov
push
inc
mov
popa
cmp
or
sub
jnp
lods
mov
pusha
sbb
and
push
shll
repnz
mov
cmp
cmp
push
push
aaa
xchg
xor
jge
dec
lahf
dec
jae
push
popa
inc
xor
fcmovnb
sarb
shr
or
jno
push
cld
mov
add
lahf
arpl
jl
jp
or
mov
push
adc
movsb
out
sarl
aas
cli
shrb
and
popf
xchg
lahf
lea
js
pushf
adc
cmc
pop
fistpl
jne
cmp
ret
cltd
mov
fiaddl
and
cwtl
sbb
dec
and
jns
gs
push
mov
lahf
test
mov
js
push
add
ficompl
mov
mov
cmp
jne
jp
pop
dec
xchg
test
or
xchg
sub
inc
flds
mov
aas
nop
in
fcoml
repz
pushf
add
or
insb
xchg
pop
fcomps
or
setg
mov
out
jle
lcall
les
dec
add
push
outsl
inc
fists
lcall
jne
dec
pop
loop
testb
test
mov
pop
dec
inc
ljmp
dec
inc
outsl
add
sar
cmp
cmp
or
add
pop
sarb
rcr
sbb
lret
xchg
das
test
stos
sbb
inc
insl
stos
es
iret
jb
jno
js
adc
add
mov
cmp
xor
push
push
rcrb
lods
mov
jle
mov
gs
xor
dec
and
jae
shlb
ja
les
cwtl
cmp
flds
out
repnz
sti
movsb
div
popa
jecxz
je
mov
lahf
sahf
or
lea
cli
cmpb
push
sahf
jne
sub
test
cmp
rcrl
inc
inc
inc
jb
jae
ljmp
aam
pushw
jns
pusha
mov
aam
sub
mov
cmp
int
ret
push
push
in
and
cli
int
push
fwait
inc
cmpsl
out
or
or
div
leave
leave
sahf
stos
in
fsubrs
pop
mov
mov
clc
sub
mov
jp
adc
repz
out
add
pushl
add
adc
pop
mov
inc
inc
or
jecxz
fst
push
rclb
pop
sbb
adc
mov
or
push
inc
push
cmpb
rorl
mov
out
aaa
xor
hlt
inc
pop
aas
outsb
fsubl
insl
call
dec
hlt
jge
lret
div
inc
sub
or
mov
xchg
aam
pop
push
add
jbe
outsb
out
xchg
push
call
sbb
in
adc
inc
mov
pushf
cmp
add
xchg
mov
cmpsl
lea
call
sbb
mov
mov
inc
das
in
shll
or
mov
mov
sbb
rorl
neg
addr16
ret
push
pushl
adc
arpl
mull
decl
cmp
pushf
ret
test
cmp
dec
fs
enter
xchg
iret
mov
pop
shll
rorb
jle
jo
insb
cli
inc
cs
or
push
fcomip
js
or
pop
loopne
mov
sarl
xchg
add
pop
cmp
icebp
nop
insl
in
ds
lahf
out
cmp
add
or
or
cmp
mov
mov
inc
dec
sarb
mov
sbb
sahf
stc
and
lods
cmpsb
jb
add
je
sti
sbb
sub
add
pop
lahf
icebp
je
sub
push
leave
popf
mov
outsl
jae
fadds
add
dec
xchg
repz
daa
int
iret
xor
jns
in
insl
mov
cmp
imul
repnz
cmp
pop
mov
mov
xor
imul
into
push
mov
sbb
stc
test
dec
fs
popl
pop
push
rol
loop
mull
and
lcall
pop
cwtl
jb
mov
dec
pop
mov
cli
jl
sub
sub
sbb
call
les
cwtl
and
cmp
lods
adc
push
fs
mov
std
mov
aam
pusha
xchg
cmpsb
in
mov
push
leave
pop
stos
and
lret
xor
js
xchg
jb
sahf
rorl
jae
sbb
aas
maskmovq
divl
test
popf
mov
sbb
inc
out
sub
addr16
cmpsl
mov
lods
mov
inc
sbb
push
xorl
dec
jmp
pusha
cmp
les
jne
mov
ljmp
xorl
and
cmpsl
cltd
dec
adc
or
dec
loope
adc
lds
movzbl
imul
rcl
add
cli
icebp
or
test
inc
leave
fisubrs
gs
pushf
lods
loope
les
gs
xor
ret
mov
idiv
pop
pop
cltd
sub
jne
addr16
add
cmpsl
test
in
and
add
clc
push
ja
push
repz
fs
leave
adc
inc
test
sahf
xchg
gs
ds
push
adc
test
pop
sbb
loopne
scas
mov
inc
test
push
cld
inc
fimuls
cld
jo
mov
inc
data16
popf
sti
sti
pop
inc
sti
pop
mov
cs
into
cli
scas
aam
sbb
mov
xor
inc
in
ret
pop
adc
inc
in
push
sub
in
pop
lret
xchg
std
push
cmp
aas
inc
shlb
shll
sbb
ret
lods
inc
adc
xchg
scas
push
lahf
mov
sub
rcrb
std
cmc
pop
test
insl
dec
les
mov
mov
inc
das
push
lock
cmp
sti
inc
pop
mov
roll
aad
sti
pop
aas
xor
ds
jb
dec
outsb
je
cmp
dec
sub
pop
add
mov
mov
cmp
bound
call
sub
sub
mov
lea
leave
xchg
popa
mov
inc
dec
push
pop
cmp
int3
sub
ret
out
inc
mov
jge
mov
inc
fcoml
hlt
test
sub
imul
ret
mov
into
sbb
cmp
std
insb
sbb
push
add
pop
cli
cltd
push
jne
add
int3
daa
add
sbbb
inc
rorb
mov
fadd
outsb
xor
and
or
mov
ss
out
loop
out
sbb
or
mov
andl
lret
imul
imul
and
sub
push
sub
outsb
inc
test
inc
fimuls
mov
inc
rep
xchg
sub
mov
adc
xchg
cli
add
inc
jp
xchg
cmpsb
imul
cmp
out
cltd
sub
addb
loop
adc
pop
xor
xchg
imul
pop
outsb
mov
leave
lahf
xchg
mov
call
add
pop
imull
insl
shlb
cmp
sbb
inc
add
les
mov
shlb
sbb
cmp
aaa
outsl
hlt
in
sub
pop
jle
stos
jnp
push
js
xchg
test
xor
jnp
inc
loop
pop
ss
cs
aad
fldcw
or
jbe
data16
push
jo
mov
mov
sub
fisttpll
jbe
inc
insl
adc
enter
sub
bound
inc
pop
out
mov
test
cmpsb
xor
sub
mov
cmp
inc
arpl
pop
jmp
cmp
cmp
mov
data16
daa
fbld
nopl
and
out
push
imulb
into
aaa
repnz
movsl
mov
stos
test
movsb
push
push
cmp
jns
dec
lds
push
enter
push
lret
mov
hlt
mov
negl
std
jl
pop
das
fcoml
lret
pop
mov
and
icebp
sbb
call
jns
andl
gs
lcall
in
jns
inc
into
xchg
add
and
or
outsl
inc
and
ret
cmp
pop
cmpsb
fistpll
jnp
in
imul
or
pop
jg
xchg
push
mov
cmp
sub
mov
mov
movsb
pop
arpl
or
push
aad
ret
ja
inc
inc
lret
or
adc
shlb
out
or
dec
mov
ja
jmp
repnz
xor
stos
add
out
dec
mov
mov
aad
lds
cmp
insl
cmp
into
shrl
cmp
inc
js
fucomip
mov
mov
imul
and
and
fwait
shrl
call
mov
lods
mov
hlt
jecxz
lds
in
clc
xchg
mov
pop
bound
popf
rcl
adc
es
out
and
xor
jnp
call
adc
sti
cmc
inc
mov
inc
sbb
fldt
out
pop
xchg
mov
sub
ret
ret
push
les
cmpsb
cmp
sub
test
sub
inc
xchg
cmp
orb
mov
stos
fiadds
inc
out
imul
outsl
jb
mov
lock
or
and
ret
inc
sbb
pushf
rorb
fscale
jl
xor
adc
cmpsl
sbb
mov
addr16
xor
ds
fbstp
mov
adc
and
inc
dec
dec
stos
dec
fidivrl
je
imul
sbb
cmpl
popf
xor
aad
add
xchg
lods
xchg
clc
imul
stos
pop
js
mov
or
or
inc
std
sub
shll
adcl
movb
repnz
ds
jbe
ss
sahf
andnps
cmp
cmpsb
adc
in
int3
adc
push
cld
sub
cmp
mov
mov
nop
sahf
mov
or
aam
mov
mov
jmp
repz
mov
into
xchg
les
pop
pcmpeqd
sti
pop
xchg
jo
fdivrs
xchg
adcl
ljmp
jp
and
movsl
xchg
pop
sub
mov
mov
inc
adc
push
or
call
jno
pop
jo
movsb
push
pop
jp
dec
movsb
ret
in
adc
add
ud1
jl
int
sub
jnp
arpl
add
je
pop
pushf
add
test
mov
test
ds
les
in
mov
push
into
jno
mov
ds
movsl
xchg
adc
test
lea
mov
xor
sbb
scas
mov
jnp
rclb
adc
sarb
push
mov
orl
push
mov
ror
xor
xchg
pop
mov
inc
scas
jns
mov
mov
xlat
addl
mov
loop
imul
jns
gs
sbb
and
fsubs
or
pop
mov
adc
mov
add
fiadds
adc
cmpl
cmpsl
jno
push
test
stos
fidivs
movsl
call
inc
jnp
icebp
pop
std
cwtl
lcall
mov
dec
mov
mov
cwtl
insb
or
add
data16
xor
push
cltd
outsb
ds
sub
or
loop
xchg
inc
es
add
aaa
loope
rorl
out
subl
xor
arpl
jl
cmp
int3
push
stos
cvtps2pd
in
mov
rorl
jo
lret
adc
push
mov
stc
les
dec
pop
xchg
or
lea
daa
je
imul
push
push
mov
stos
mov
xor
fidivrl
sub
mov
ret
or
std
push
sub
fsubp
mov
xchg
xchg
insb
outsl
xchg
and
mov
out
stos
or
push
sbb
lods
out
mov
pop
or
mov
pusha
scas
lahf
popf
inc
sub
loop
popf
pop
out
insb
dec
or
addr16
lods
inc
lods
dec
mov
imul
addr16
sbb
inc
test
fbstp
pop
push
adc
imul
and
jns
mov
sub
pusha
push
jo
push
into
pop
push
cmp
or
cli
int
add
adc
pop
addr16
mov
xchg
cld
dec
frstor
call
push
popf
dec
cmp
xchg
add
lret
in
adc
xchg
mov
push
rcr
adc
adc
hlt
mov
je
fistps
mov
xor
xchg
mov
addb
push
cwtl
pop
das
enter
outsb
ss
cmp
jp
arpl
nop
sub
aas
mov
int
add
faddl
test
mov
pop
dec
pop
hlt
fsub
cmp
pop
insb
lods
mov
lods
scas
test
xchg
add
inc
aas
or
mov
adc
inc
lahf
mov
inc
sub
ret
mov
push
test
pop
leave
fdivrs
mov
ds
bound
loopne
lahf
inc
sub
repz
inc
call
jg
sahf
lds
fwait
stos
jbe
scas
sarb
lahf
mov
mov
mov
or
int3
test
ja
xchg
inc
add
je
xchg
out
lea
pop
adc
adc
mov
inc
mov
mov
xor
sub
push
enter
inc
outsb
xchg
mov
popl
mov
fisubrs
xchg
and
aas
xor
fwait
insb
pop
xlat
or
mov
mov
rcll
adc
cmp
imull
add
es
pop
out
in
mov
ret
mov
out
add
stc
ljmp
mov
pop
pop
mov
es
cvtdq2ps
push
cmpsb
add
sub
xchg
cwtl
in
jmp
push
mov
adc
jl
pop
lret
in
lea
xchg
cmpsb
neg
out
inc
scas
out
sub
arpl
imul
xchg
cmp
fwait
ret
jne
xchg
mov
mov
push
mov
inc
pop
repnz
lret
pop
imul
insb
mov
into
out
sahf
and
mov
sbb
and
xor
push
mov
push
mov
js
adc
xchg
sarb
pusha
inc
cmp
or
popa
pop
out
daa
add
outsb
test
daa
ja
cmp
cmp
sbb
movsl
push
jmp
int3
adc
fistpl
cmp
mov
addb
adc
int3
dec
or
pop
push
rclb
inc
pop
xor
xorb
pushf
inc
sub
call
lret
adc
test
rorb
lods
loop
or
lods
out
stc
add
adc
sub
xlat
fldt
add
pop
jle
jne
cmp
mov
addr16
sti
mov
inc
loop
xor
lcall
push
imul
scas
mov
je
fisubrs
pushl
arpl
enter
jge
push
lcall
xlat
push
loope
jmp
out
mov
cld
or
shrl
lock
sub
stos
cmpsb
xchg
sbb
jnp
dec
mov
or
leave
imul
mov
cmp
and
adc
fdivrs
xor
outsl
push
inc
addr16
cmp
jns
adc
pop
or
jmp
sub
roll
add
xchg
pop
mov
movsb
push
jl
rorb
xchg
adc
jmp
jle,pn
jns
ret
scas
or
and
inc
cmp
or
cwtl
scas
dec
dec
inc
pop
cmpsl
pushf
mov
xor
fmul
mov
adc
frstor
add
xchg
lods
movsl
out
jo
rcr
add
mov
cmp
aam
out
pop
jns
mov
inc
mov
rcr
pop
or
inc
jl
mov
hlt
jno
jl
cmp
insl
lds
out
adc
cmp
rcl
and
cmp
and
outsl
aas
leave
int
cmp
and
or
sbb
insb
push
xchg
sar
xchg
ja
add
jg
xchg
test
js
rclb
mov
xchg
pop
dec
in
test
sahf
jle
rcrb
les
movsl
or
dec
notb
mov
mov
push
outsl
pop
push
adc
in
xchg
imul
rolb
mov
icebp
add
sub
repnz
inc
mov
out
jp
js
es
test
xchg
daa
pop
cld
cmp
fstl
rolb
into
adc
mov
or
xor
cmc
imul
not
clc
dec
hlt
shlb
xchg
insl
add
mov
ds
or
dec
jns
jns
xor
int3
outsl
std
fwait
inc
pop
xor
mov
add
or
xchg
xor
int
push
shlb
sub
aad
mov
repnz
mov
mov
sbb
fsubr
xor
loopne
dec
stos
mov
ss
dec
jne
sub
xor
mov
mov
adc
out
dec
inc
cltd
test
pop
js
xchg
jb
xchg
lcall
push
and
fs
inc
xor
adc
dec
shlb
adc
int3
int
popa
mov
jne
dec
adc
push
dec
pusha
xchg
lods
mov
cwtl
sbb
loopne
jnp
popa
push
fcmovne
in
jmp
fcompl
test
call
pop
nop
or
ds
sub
or
adc
add
fisubs
mov
popa
rclb
mov
dec
lahf
sub
fnop
jecxz
mov
xor
daa
sub
movb
xchg
add
fisubrs
call
daa
outsl
xchg
sahf
and
cmpsl
adc
repz
pop
out
into
pop
insl
neg
or
xor
mov
lret
popa
lcall
insl
inc
push
int3
sbb
mov
es
inc
and
fcompl
sub
and
xor
std
inc
icebp
push
dec
xchg
adc
pop
push
jecxz
dec
mov
dec
stc
xor
add
mov
rcr
mov
cmp
push
mov
jbe
aas
push
push
cmc
scas
sub
jecxz
mov
bound
mov
xor
mov
cwtd
mov
test
mov
leave
hlt
mov
cmp
xchg
or
xor
jbe
push
dec
push
cli
in
sahf
loopne
mov
andb
popa
loop
xor
mov
aad
lret
popf
cmp
sbb
mov
and
jle
hlt
or
pop
inc
fisttpll
mov
fistpll
outsl
mov
push
adc
jecxz
dec
adc
pusha
add
pusha
cmp
mov
xor
insb
nop
ficompl
xchg
cld
fsubrp
outsb
pop
xor
or
mov
or
popa
ret
sub
rolb
or
xchg
int3
adc
stos
sbb
xchg
out
cmp
xlat
out
adc
cmp
add
shlb
dec
dec
stos
insl
mov
add
jge
sbb
or
sub
iret
insb
jbe
aam
cmpsb
lds
pushf
xchg
cmp
dec
lds
dec
pop
inc
repz
and
xor
stos
adc
xor
in
cli
aad
inc
jge
mov
and
test
xchg
test
add
pop
scas
mov
pop
sbb
push
in
xor
mov
ja
add
mov
pop
in
adc
pop
xor
insl
xor
cmp
gs
xchg
dec
jb
push
jp
out
sub
aaa
mov
adc
nop
or
je
loop
sub
jg
int3
mov
nop
adc
mov
push
aas
out
sub
jmp
pop
clc
and
xor
popa
in
jno
pop
mov
popa
pop
and
in
dec
cmp
push
pop
push
rcrl
in
shrb
cmp
ljmp
fbstp
jg
adc
pushf
in
xchg
mov
mov
rcrb
mov
inc
jae
and
mov
add
cmp
push
cmpsl
jge
in
repnz
adc
incl
aam
imull
mov
daa
in
es
and
pop
orl
jge
adc
xor
pushf
iret
popf
hlt
cmp
mov
fwait
mov
pop
mov
dec
stos
loope
into
sub
cli
dec
mov
dec
rcrb
lods
push
inc
outsl
icebp
or
lea
jo
ja
fwait
hlt
mov
adc
jmp
push
xorl
in
testl
lahf
enter
xchg
into
mov
fs
add
push
icebp
and
les
jge
test
and
sbb
dec
pop
rolb
jne
mov
mull
call
mov
jp
add
xlat
int
mov
std
dec
scas
sbb
jp
pop
jp
pop
mov
sbb
stos
xchg
xor
scas
inc
rorl
shl
cmpsl
mov
pop
test
aaa
mov
jl
mov
jns
in
jne
addb
mov
add
fistpl
js
cmp
sar
mov
pusha
add
xor
xlat
shrl
test
cmp
int3
jl
movsl
cmpsl
insl
mov
sub
mov
push
fbld
or
jg
aad
jmp
jle
call
ret
lea
cli
clc
cmpsl
add
notl
dec
mov
sbb
or
inc
aas
xchg
mov
sub
dec
popa
or
mov
adc
xor
incb
out
dec
fstpl
rcll
jns
sub
jbe
mov
pop
and
out
adc
mov
lods
aad
adcb
aad
int3
addl
lds
jb
push
xor
int
pop
orb
xor
and
and
xchg
cmp
sub
ret
lds
adc
sub
loope
adc
mov
out
data16
xor
mov
inc
test
mov
jnp
je
mov
inc
in
popa
inc
mov
int
adc
jo
or
test
mov
jmp
std
jmp
enter
pop
cltd
adc
test
pop
sahf
ja
mov
mov
pusha
ds
inc
repnz
fcomps
mov
pushl
jge
mov
andb
cmpsl
pop
dec
inc
jmp
sub
pop
outsl
cmp
mov
leave
jmp
std
imul
icebp
sbb
nop
movsl
movsl
lret
mov
or
push
add
xor
mov
leave
push
pop
mov
push
in
adc
scas
cmp
pushf
stos
fsts
mov
dec
push
jge
xor
flds
cli
jns
loop
cli
pusha
or
mov
cmp
sbb
inc
mov
scas
fisubrs
clc
dec
sysret
and
push
or
les
push
push
sbb
xchg
addr16
dec
or
cmp
cmpsl
fninit
jp
lret
pusha
test
cmp
adc
sub
addr16
mov
mov
add
jo
push
mov
test
jne
in
in
into
filds
fists
into
adc
jge
xor
idivb
sbb
mov
pop
es
cmp
mov
inc
or
cmc
or
push
ljmp
roll
sbb
sbb
cmpb
jnp
dec
xchg
mov
les
mov
add
sarl
adc
out
mov
adc
fidivl
aaa
js
mov
popf
xor
repnz
pop
lds
xor
push
int
xchg
or
lcall
shll
aaa
test
out
jge
in
mov
daa
mov
sub
sub
mov
xor
sti
jmp
cmp
jae
fstl
imulb
mov
cmp
aad
imul
loopne
loopne
fistpl
and
mov
sub
cwtl
push
out
pop
enter
stos
outsl
not
out
dec
bswap
sub
cmpsl
sub
cmpsb
out
dec
adc
scas
adc
mov
pushf
aam
in
repz
insl
test
sub
stc
rclb
mov
dec
inc
push
inc
inc
inc
inc
pop
push
lret
add
sub
pop
push
fiadds
mov
sarb
xor
cmp
jl
cli
sbb
jp
cmp
test
mov
mov
ss
xchg
push
jne
outsl
xchg
add
ljmp
fsubrs
adc
das
pop
cmp
push
adc
lret
pop
lds
or
xchg
mov
mov
sub
xor
mov
inc
push
cmp
outsl
sahf
and
pop
cmpl
cmp
cmp
idiv
or
orl
add
xor
iret
push
nop
mov
sbb
pop
mov
shl
fbstp
and
repz
flds
lcall
aad
xchg
cmpl
outsl
ret
in
test
test
xchg
rol
adc
data16
push
inc
enter
jp
mov
pop
mov
movl
xrelease
enter
inc
ret
popa
mov
out
das
loopne
nop
imul
jge
hlt
xchg
fs
dec
test
inc
dec
out
dec
repz
push
cli
pushf
xorb
add
mov
es
jg
ss
inc
xchg
xor
cmp
sti
push
inc
sbbb
ljmp
mov
imul
dec
dec
cmp
lahf
push
fistl
sub
lds
icebp
jne
push
cmc
ret
dec
mov
add
push
test
cld
cmp
cmp
sub
shll
mov
inc
push
mov
dec
rorb
out
out
and
in
ret
jb
mov
sbb
inc
and
jmp
aaa
jge
pop
push
pop
arpl
sub
mov
sti
adc
or
push
push
mov
lds
cwtl
add
push
cld
add
xor
lods
fbstp
sbb
mov
jl
mov
mov
aad
insb
mov
scas
jle
ja
mov
aas
movsb
push
xchg
push
mov
push
int
pop
aas
enter
int3
dec
mov
dec
aas
leave
cli
xchg
fidivrl
aas
inc
jg
adc
sbb
dec
dec
cli
loope
xchg
popf
xchg
hlt
mov
aas
mov
push
cmp
lods
aam
jmp
jae
pop
pop
push
andl
dec
xor
dec
mov
add
dec
jg
mov
mov
std
inc
rcll
push
jb
movsb
push
lods
and
pushf
imulb
loopne
imul
mov
sbb
addr16
xchg
cli
aad
pop
aaa
ret
jg
pop
std
out
jnp
sbb
lahf
mov
push
and
ljmp
mov
repz
insl
cmpsb
adc
out
jge
scas
repnz
xchg
sbb
pop
inc
mov
inc
test
iret
add
addr16
mov
cmp
jbe
push
imul
cmp
lods
mov
iret
call
js
jge
push
sub
add
shll
fcomps
add
jp
insl
ret
test
pop
pop
pop
inc
fists
mov
cmpsb
cmp
mov
aaa
ja
xchg
xchg
gs
mov
lea
mov
cltd
lahf
inc
mov
scas
mov
inc
mov
imul
enter
cmpsl
cld
cmp
outsb
cltd
push
inc
mov
hlt
mov
mull
cwtl
clc
mov
stc
mov
dec
push
sub
pop
pop
pop
out
pop
fmulp
cs
mov
iret
int3
ret
mov
fldl
jnp
jge
or
push
xor
inc
and
push
insb
adc
or
jbe
int
ret
jl
mov
jae
dec
add
sub
mov
mov
jbe
aaa
loop
jmp
cmp
sbb
xchg
cwtl
sbbb
mov
inc
jmp
rolb
cmovns
push
jo
ret
fsub
loope
ss
xor
mov
daa
pushf
xchg
and
data16
aam
cwtl
popa
mov
movsl
and
lea
test
jecxz
in
loopne
pop
sti
and
sar
call
add
push
shll
dec
es
in
aad
stos
or
xchg
cmp
lds
xchg
dec
xor
rclb
pop
sub
mov
or
pop
sarl
and
ds
movsb
mov
jg
cltd
xor
mov
inc
pop
mov
mov
aas
xchg
stos
inc
shrb
and
iret
or
gs
bound
stos
sbb
inc
ja
add
leave
add
fimull
lahf
in
push
mov
and
jg
sub
das
mov
aad
xor
je
inc
je
xchg
mov
fwait
sub
std
movsb
fsubr
loope
les
jp
sbb
pop
dec
fistpll
xor
pop
sahf
inc
or
pop
aas
sbb
sub
imul
sub
pusha
inc
lock
mov
sub
dec
xor
lret
clc
jg
sbb
in
push
sbb
or
test
lock
out
mov
xchg
ljmp
xchg
das
push
or
inc
int
cld
in
cmc
aaa
rcrb
xor
ds
push
imul
cli
jecxz
aad
sbb
pop
pusha
adc
aaa
outsb
test
dec
jno
dec
jae
imul
push
inc
subb
cmp
test
mov
mov
mov
loop
nop
push
nop
mov
ljmp
inc
mov
sahf
dec
push
clc
mov
cld
cs
call
mov
mov
sarl
jne
shrd
or
xor
dec
jmp
dec
lods
jae
xor
xchg
insb
mov
push
pusha
push
and
hlt
cmpsl
jb
cmp
xlat
dec
xchg
dec
in
imull
inc
rcll
sbb
jnp
mov
mov
fs
mov
sub
and
inc
push
cmp
int3
cs
push
int
movsl
test
ss
in
mov
sbb
xchg
shl
nop
fs
rorb
xor
enter
sub
std
sbb
push
movsl
push
or
gs
push
cmpsl
or
cmp
clc
push
push
mov
inc
stos
stos
lret
pop
and
test
fsub
lahf
xor
ret
loopne
and
mov
or
cwtl
je
repz
push
lea
movb
and
js
das
and
in
subb
sbbb
fnstcw
mov
fbstp
cmp
std
inc
jecxz
shrl
ljmp
inc
cmc
push
stc
dec
out
lret
and
sbb
fstl
jbe
into
lea
push
rcr
mov
inc
pop
mov
popa
and
xor
cmp
pop
scas
and
pop
shlb
mov
fistps
pop
repnz
mov
sarb
push
int3
into
ret
dec
pop
sbbl
push
lcall
push
mov
mov
imul
push
mov
cmovl
andb
xor
mov
dec
loop
push
adcb
sbb
or
pop
stos
push
rcrl
mov
jae
outsb
pop
mov
rol
push
cwtl
lahf
pop
adc
repz
xchg
movsb
jo
push
gs
mov
adcb
sarl
or
dec
std
js
pop
pop
in
xchg
fdivrs
lds
mov
adc
or
sub
mov
sbb
loopne
es
es
and
lock
imul
mov
int3
inc
fcomi
jnp
push
ret
jno
fldl
sbb
mov
into
popa
inc
daa
cmp
add
les
adc
jmp
mov
jmp
jp
js
mov
inc
jne
and
push
fmuls
adc
xchg
sar
xor
shll
out
push
push
or
jg
cld
fldenv
stc
mov
pop
adc
cmp
test
rcrl
outsl
adcb
fistpl
ljmp
push
jl
stos
mov
cmp
mov
inc
ret
cwtl
dec
push
test
dec
xor
test
xchg
pusha
pushf
cmp
into
jbe
sub
movsb
in
sub
sbb
add
icebp
mov
push
dec
cmpsl
push
mov
fistpll
jns
adcl
push
sbb
adc
jae
inc
aas
push
mov
xchg
dec
push
inc
push
stos
stos
mov
test
negb
mov
fwait
jg
std
sub
sub
ret
push
pop
lds
lea
jns
aaa
adc
bound
cli
lods
cmpsl
in
xor
js
iret
pusha
pop
stos
cltd
dec
test
hlt
test
incb
mov
pop
ror
mov
or
mov
xchg
call
dec
popl
fsub
mov
shlb
sub
jge
and
pop
daa
fistps
push
into
dec
cs
sub
lds
dec
adc
fcmovnu
cmp
jnp
cld
nop
aas
int3
lret
pop
fwait
add
out
das
mov
or
add
xchg
addr16
arpl
in
and
jbe
xor
jmp
fs
fldenv
movsb
das
pop
stos
mov
lret
shrl
dec
push
bound
or
cltd
test
sbb
mov
pushf
or
js
pop
xor
xchg
mov
shlb
xor
into
test
push
test
bound
or
sbb
aaa
lock
repnz
and
iret
inc
jle
xchg
adc
push
mov
or
cmpsl
in
mov
mov
sub
mov
adc
outsb
cmp
xchg
mov
cmp
sbb
inc
pop
imul
add
pop
out
inc
enter
jge
mov
mov
mov
or
dec
dec
jae
and
call
dec
mov
mov
neg
les
xchg
sbb
mov
add
inc
cs
scas
les
inc
repnz
icebp
and
inc
imul
jnp
sub
popa
sbb
xor
fsubl
xor
and
pop
inc
in
iret
push
loopne
ja
lret
int3
imul
mov
and
jb
stos
adc
jge
jb
scas
xchg
out
sbb
sbb
std
cltd
adc
cli
mov
mov
adc
or
pop
insl
cmp
and
pop
and
scas
repz
arpl
jmp
and
mov
adc
push
mov
test
xor
test
sbb
popa
loope
xchg
cli
addr16
nop
daa
movsb
adc
and
dec
test
push
push
loopne
cmpsb
jnp
ss
cmpsl
xchg
daa
dec
mov
cmp
aad
loope
fldt
inc
sbb
jo
in
out
jge
test
cmc
ret
and
pop
jae
mov
aad
ljmp
daa
out
ret
jmp
js
orl
insb
push
cmp
and
clc
add
xor
mov
add
aaa
das
cmc
push
sub
subb
ss
notb
ret
pop
adc
dec
cmc
bound
inc
sub
cwtl
sbb
test
fcoml
add
mov
adc
mov
dec
ret
xor
fstpt
sub
cmp
jb
popa
clc
test
shlb
jl
mov
mov
push
dec
mov
sub
ljmp
xchg
fsubl
xor
out
sub
ja
pop
in
popf
pop
out
inc
daa
xchg
or
jno
adc
pop
icebp
and
out
mov
shl
or
into
mov
mov
fidivrs
sahf
cmpl
sbb
in
push
pop
cld
cmc
xor
lea
push
test
jo
mov
cmpsl
pop
sub
mov
adc
and
or
fdivrp
dec
xor
dec
std
invd
lret
lcall
push
in
xchg
pusha
stc
hlt
test
int
sarb
loope
out
incb
mov
mov
movsl
int
shrb
dec
cmp
roll
jle
pop
cmpsl
pop
stos
add
outsl
pusha
mull
sahf
push
or
in
lds
inc
addr16
xchg
js
dec
int3
pop
lock
gs
mov
inc
jp
cmp
sbb
push
idivb
pop
mov
dec
repz
push
js
mov
insl
xorb
fbld
or
gs
mov
movsb
int3
push
dec
jge
das
shlb
mov
push
sahf
xor
or
repz
sar
popf
out
ja
gs
dec
mull
pushf
sub
enter
ret
or
xor
inc
dec
scas
push
sbb
jmp
or
mov
mov
inc
syscall
xlat
mov
movsl
stos
cmp
mov
lock
push
xchg
inc
push
test
loop
scas
loope
test
call
call
ljmp
add
loopne
loope
sbb
jg
mov
daa
das
stc
pop
jmp
ret
xor
inc
hlt
push
test
ja
jbe
in
mov
xor
data16
pop
inc
xor
mov
xor
stos
call
push
clc
movl
pop
mov
and
jno
call
mov
fildll
test
push
mov
stos
lret
out
or
daa
lea
ss
mov
orb
mov
sbb
jo
ja
inc
mov
cli
xchg
int3
lods
cmc
jns
aad
shrl
jle
cwtl
sub
ljmp
pop
lods
cmc
xchg
bound
js
pop
mov
jg
scas
add
pextrw
xor
aad
pop
inc
cmpl
cmp
frstor
cld
mov
sbb
negb
bound
stc
inc
or
dec
mov
fisubl
rcr
scas
pop
pop
and
lret
div
imul
lret
add
xorl
xchg
arpl
ljmp
add
out
int3
cld
stos
mov
mov
push
or
jg
ljmp
shll
add
test
inc
lret
call
fsubl
pop
xchg
shlb
jae
adc
sti
pushf
jo
sub
mov
loop
add
mov
push
shll
repz
outsb
cmpsb
fistl
dec
mov
popa
insb
sbb
ret
push
jl
pop
pop
cs
mov
jmp
fwait
movsb
mov
rclb
ss
dec
dec
lock
mov
imul
cmp
dec
sub
stos
int3
enter
pop
sub
pop
xor
xor
push
cmpsl
lahf
cmp
mov
inc
mov
stos
xor
jp
mov
xlat
jge
stc
lock
sub
daa
xor
imul
mov
das
mov
out
subl
push
stc
push
push
adc
dec
cmpsb
call
sub
dec
push
aad
add
call
mov
jbe
cmp
ret
or
sbbl
divl
push
stc
pop
mov
mov
adc
test
push
es
xor
mov
clc
dec
and
jge
ljmp
cmp
push
sbb
mov
int
lcall
cmp
fidivrl
outsb
adc
jmp
sub
xchg
nop
lahf
inc
cld
adc
lds
mov
xlat
push
imul
loope
mov
sbb
lds
shlb
insb
mov
and
jle
xchg
hlt
push
xchg
pop
insb
cltd
push
mov
adc
inc
xor
mov
push
xor
pusha
pusha
mov
or
add
push
into
cmp
cmp
in
mov
loop
or
push
mov
and
mov
out
mov
negl
in
mov
bound
ja
add
sahf
test
xchg
jnp
pop
popa
lea
jg
dec
jns
call
ss
xorb
mov
add
sub
testb
out
xchg
sbb
lea
jmp
xchg
imul
jne
rcrb
clc
jb
leave
mov
and
sbb
mov
and
arpl
ja
sub
xchg
sub
push
cmp
and
mov
xor
sbb
and
cwtl
sub
jnp
arpl
inc
and
int
dec
mov
mov
test
sub
insl
xor
fimuls
lret
xor
and
es
in
insl
cmp
cld
mov
inc
push
xchg
cwtl
xor
shlb
mov
push
xchg
fstpl
mov
rclb
adc
nop
mov
or
loop
jle
jnp
repnz
and
rorl
pop
lods
inc
addr16
hlt
movsb
jne
or
jbe
adc
daa
sbb
xor
xor
inc
pushf
into
xlat
pop
mov
jge
das
add
iret
mov
sarl
mov
insl
loope
fisubl
xor
push
dec
pop
dec
pop
and
lea
loop
or
or
sbb
sub
fwait
roll
add
rcr
test
jns
in
lods
inc
shr
cmc
mov
scas
in
pop
sbbl
mov
add
hlt
mov
push
stos
xchg
push
aas
sub
or
rcr
jle
mov
pop
push
xor
sub
pop
adc
adc
or
adc
test
js
cmp
jno
mov
sbb
sarb
out
stos
data16
scas
into
popa
pop
mov
add
mov
adc
out
lret
push
xor
inc
push
and
adc
mov
jp
jle,pn
dec
cmp
js
in
insb
cmp
add
jb
xor
lods
sbb
push
aaa
jle
shll
gs
in
mov
cmp
or
push
loope
dec
cmp
out
or
xor
inc
dec
mov
push
push
or
mov
inc
sub
cmp
push
into
loopne
lds
mov
ds
push
in
add
xchg
mov
adc
xchg
jb
ret
sar
add
push
inc
and
push
sti
jnp
dec
mov
imul
imul
jge
ljmp
loope
pop
fidivrl
popa
push
mov
aas
xor
shlb
xor
pop
jns
sub
test
mov
mov
mov
leave
xchg
dec
lods
mov
mov
push
mov
jbe
and
push
push
inc
push
xchg
lods
sbb
jl
into
pusha
js
test
lret
popa
int3
sbb
rol
push
icebp
repz
popa
fwait
add
je
movsb
sbb
cmp
xor
mov
shlb
or
pop
xchg
jae
sahf
fwait
inc
shrl
add
jmp
hlt
addr16
add
add
sub
movsl
sbb
fdiv
and
sub
dec
lahf
adc
fnstenv
xchg
push
dec
pop
xchg
ss
mov
jp
mov
xchg
pushl
sbb
test
xor
rclb
lcall
add
stc
adc
aam
jecxz
pop
gs
xchg
xor
pop
adc
subl
mov
jbe
and
push
in
sbbl
ljmp
loopne
leave
cld
nop
sbb
test
pop
mov
clc
sahf
sub
jno
pop
ljmp
repnz
sub
mov
fs
push
movsb
insl
pop
mov
ret
cmp
xchg
and
stos
lods
dec
push
clc
xorl
popf
pop
sub
xor
mov
adc
mov
cwtl
pop
imul
pop
or
push
and
mov
fs
or
pusha
in
add
mov
popa
insl
mov
sub
pop
push
int3
fwait
das
dec
sarl
ret
inc
lods
lahf
icebp
cmpsb
iret
xchg
and
push
aad
lods
add
push
lods
jbe
add
lods
scas
mov
out
jne
gs
lahf
fidivl
dec
xor
in
stos
insb
mov
lcall
pop
pop
xchg
mov
je
std
and
xor
inc
adc
leave
mov
sbb
in
mov
fistpl
xchg
outsl
mov
pop
mov
inc
inc
pop
test
sbb
inc
ret
in
data16
outsl
inc
pop
roll
sub
iret
xchg
push
je
lods
leave
inc
inc
dec
mov
pop
mov
mov
mov
mov
imul
popl
pop
sub
inc
cmpsb
punpckhdq
call
cvtpi2ps
pop
loopne
sahf
push
adc
xor
mov
and
repz
inc
test
push
sbb
mov
nopl
sahf
push
shll
js
out
stos
fisubrl
fnstenv
cmp
push
fistpl
sub
mov
push
ljmp
fisubs
push
sbb
xchg
ds
xor
pop
xorb
iret
xor
mov
divl
dec
fwait
jo
cmp
test
mov
inc
and
mov
sbbl
lcall
or
dec
insl
sbb
data16
and
lret
jnp
dec
jbe
rol
jp
jl
and
dec
mov
repnz
lods
jle
and
lahf
push
popf
pushf
fisubs
mov
fisubl
cmp
jno
add
fnstenv
ljmp
xchg
mov
push
js
sbb
xchg
mov
les
cltd
mov
push
or
sti
lcall
loopne
adc
test
mov
movl
sub
xor
mov
fucom
stc
clc
pop
push
add
xchg
ja
rcll
mov
pop
and
jecxz
scas
lea
stos
push
stos
xchg
movsl
push
push
gs
test
pop
cld
lahf
jbe
lcall
shll
loopne
lahf
sbb
inc
and
mov
xchg
push
fisttps
jmp
dec
lea
mov
pusha
mov
cmp
push
sahf
pushf
xlat
mov
jle
testl
push
push
in
mov
sbb
push
daa
cmpsb
xchg
adc
mov
push
cmc
or
pop
int3
inc
les
jmp
ret
or
cli
jnp
ja
cmp
xor
filds
loope
loop
adc
xchg
sbb
mov
out
add
mov
adc
repnz
inc
clc
jbe
add
xor
cwtl
pop
mov
dec
and
int3
jle
fists
mov
inc
cmp
lds
or
js
test
inc
push
imul
shlb
xor
fwait
mov
sbb
mov
inc
repz
pop
sub
and
lea
orb
in
aam
lcall
stos
add
fsubrl
stos
daa
lock
cmpsb
sub
mov
cmc
test
push
push
pop
xor
mov
loop
xor
jae
or
pop
addb
getsec
mov
jno,pt
cmp
adc
and
add
push
xchg
jo
out
cmp
arpl
dec
stos
and
sbb
sti
pop
int3
outsb
mov
jecxz
pop
mov
cwtl
jl
repnz
adc
je
popf
mov
push
xor
jmp
and
imul
out
gs
sti
inc
pop
cltd
insl
iret
pop
sbb
mov
jg
sbb
loop
pushf
push
jle
sub
jmp
mov
push
dec
ret
sbbl
and
movsb
mov
imul
mov
popa
mov
cmpsl
dec
ss
or
pop
lea
aas
mov
pop
jp
aaa
push
lds
xchg
xchg
sbb
js
and
ret
fmull
lods
pop
cmp
shlb
jmp
mov
mov
icebp
arpl
idiv
sub
cmpb
aas
popf
cli
cmpsb
fcmovnu
xor
fisubrs
sbb
insl
out
adc
in
aam
ja
mov
xchg
lea
cwtl
adc
fnstenv
mov
jae
sbb
cmp
xor
mov
orb
cwtl
add
andb
pop
test
es
les
cmp
adc
xchg
mov
inc
sbbl
cmp
aam
mov
push
mov
int
push
jle
mov
and
sbb
leave
cwtl
addb
aad
insl
jle
lea
lock
or
adc
out
or
push
flds
mov
sahf
repnz
push
sub
mov
repnz
cmp
and
pop
js
aaa
loopne
cmp
lret
sub
jmp
mov
test
push
in
xlat
out
ret
movsl
push
xor
mov
adc
inc
and
rorl
les
lret
sub
pusha
outsl
add
mov
xchg
icebp
or
add
mov
iret
jmp
ds
cmp
fs
mov
in
mov
aas
mov
fcomi
cld
in
mull
mov
or
mov
xchg
inc
add
pxor
rorb
stc
mov
mov
dec
and
lods
inc
aaa
cltd
bound
cld
test
adc
mul
in
aad
or
xchg
mov
int3
inc
in
leave
push
mov
out
jecxz
pushf
ja
inc
or
aad
xor
mov
sub
popf
aaa
xor
push
fwait
add
dec
stos
idivl
stos
ret
stos
popf
inc
push
cmpl
pop
sbb
adc
bound
xor
test
fsub
lods
xchg
test
or
lods
add
add
sbb
shl
sub
into
in
test
jp
cmc
pop
and
pop
or
and
push
and
pop
inc
xchg
mov
scas
sbb
inc
movsb
xchg
adc
adc
mov
rcrb
add
inc
push
aas
mov
clc
cltd
mov
arpl
js
cmc
cwtl
dec
int
jnp
hlt
lcall
gs
adc
mov
cmp
notb
out
sbb
das
inc
add
cmp
lcall
push
enter
cmpsl
adc
mov
aad
and
outsl
mov
adc
sbb
ret
imul
nop
push
pop
inc
jge
dec
int3
xor
or
xchg
cmp
and
mov
icebp
pushf
flds
push
jns
cli
add
bound
pop
bound
mov
push
push
pop
lret
mov
sub
dec
dec
xchg
cld
mov
and
add
add
mov
mov
sbb
xchg
jnp
add
sbb
jmp
cmpsb
cmpb
sbb
ret
subb
add
mov
roll
dec
mov
imul
fidivrs
and
cs
ret
mov
adc
out
sub
push
adc
xor
and
cmovp
sub
rorl
popa
enter
pop
cltd
imul
das
adc
lret
inc
mov
adc
cwtl
pusha
push
insl
mov
cmp
adc
nop
out
in
loopew
jle
add
xchg
in
mov
sub
popf
mov
es
hlt
push
xor
and
cmp
mov
or
int
xlat
mov
enter
push
pop
push
loop
sbb
ds
xorb
cmp
xchg
dec
in
mov
in
mov
rorb
sub
mov
mov
cwtl
movsl
sbb
dec
in
fldl
hlt
push
or
iret
les
lds
sub
xchg
xchg
ss
sub
mov
xor
lcall
test
add
movsb
push
stc
pop
clc
repnz
sub
add
int3
mov
cmc
arpl
cmpsl
and
loope
das
shrl
push
add
fisttpll
xchg
xchg
sbb
jo
sahf
loop,pt
push
test
push
popa
jle
nop
das
push
cli
lcall
adc
test
and
push
negl
stos
out
sub
aaa
pop
jg
sahf
ret
roll
push
test
mov
dec
cmp
ret
jo
imul
dec
mov
inc
lea
pop
mov
repz
jmp
out
aad
movsb
aad
cmp
xor
sub
enter
mov
enter
sbb
out
pop
mov
lea
addr16
addr16
mov
mov
cmpsb
fucomip
ret
cmpsl
fld
test
in
andb
dec
xor
stos
inc
push
mov
jmp
pop
mov
sbb
jno
push
adc
cli
inc
sarb
cmp
jbe
mov
cmp
loop
lea
mov
and
inc
js
pop
push
fisttpll
dec
rcrb
xor
dec
cld
loope
lahf
lds
cmpsb
push
out
sbb
ret
popf
inc
pop
inc
jo
mov
pop
xchg
dec
or
das
adcb
andb
cmpl
dec
mov
fcomp
push
jb
je
dec
rolb
add
ljmp
pop
cli
bound
stos
jp
mov
xchg
mov
pop
mov
aaa
sub
push
das
jecxz
fs
pushf
mov
sub
mov
aam
push
sub
lcall
cmp
or
inc
jle
fstps
sbb
and
sbb
dec
pop
mov
adc
ss
adc
pop
sub
lret
cwtl
movl
push
mov
addr16
push
dec
fdivrl
sub
lods
lea
sub
je
sbb
adc
dec
push
sub
iret
mov
pop
mov
test
xchg
inc
imul
mov
jno
or
xor
inc
fidivl
inc
xchg
inc
shll
orl
xor
std
push
repz
inc
pop
insb
push
gs
popa
jle
sub
movsb
push
jmp
sbb
roll
sbb
pusha
clc
add
mov
pop
imul
and
and
repnz
in
in
push
xor
jle
sub
xchg
and
cmp
imul
scas
divl
sub
mov
int3
pop
mov
inc
out
add
sub
xchg
xchg
pop
jae
into
fsub
inc
ret
mov
into
jg
xchg
push
mov
push
loop
mov
gs
pop
pop
xchg
or
js
cmp
sbb
push
test
mov
fs
ljmp
out
sub
wbinvd
xor
xchg
loope
mov
xorl
outsb
movsb
stos
dec
ja
cmc
mov
pop
loope
into
mov
cwtl
movsb
je
xchg
cmpxchg
ret
cmp
dec
xchg
loop
ss
mov
pop
daa
std
add
divl
or
pushw
out
fidivl
and
push
dec
shl
inc
lds
lcall
jmp
jnp
imul
frstor
lret
jge
dec
and
mov
in
andl
data16
imul
sub
push
push
aas
adc
pop
xchg
or
leave
cmp
fstpl
ds
shrb
mov
fistpl
sbb
popf
and
inc
fnstenv
stos
sbb
jo
insl
push
arpl
lret
fnstsw
movsb
sub
lods
and
pop
test
mov
mov
push
mov
mov
gs
adc
mov
xor
mov
call
insb
and
jne
aad
bound
sub
hlt
stc
das
push
inc
movsb
es
imul
add
push
int
mov
stos
std
mov
mov
lret
push
sub
inc
adc
mov
jecxz
mov
pop
cmc
push
icebp
inc
sbb
xchg
adc
xchg
pop
jne
sbb
push
std
xor
mov
push
out
sbb
pop
adc
data16
nop
fcoml
jnp
fisubrs
pop
pop
inc
repz
cmp
es
loop
inc
jae
enter
das
scas
cmp
push
mov
and
enter
in
das
inc
inc
or
es
jns
cli
jbe
add
popa
cmp
push
mov
pop
pop
xchg
jne
push
je
and
inc
test
mov
add
inc
jo
cmp
loope
adc
mov
pop
js
movsb
js,pt
in
jl
push
rol
fsubrl
xlat
int
mov
dec
neg
sti
fwait
push
mov
aad
ret
push
adc
mov
cmp
fcmove
adc
sbb
sbb
subb
enter
sbb
mov
nop
nop
mov
aas
int
lea
adcb
push
js
test
push
xor
or
in
stc
mov
push
push
test
les
int3
fnstcw
mov
mov
into
stc
mov
xchg
movsl
xlat
out
mov
ljmp
xor
in
jnp
inc
loope
dec
cmc
out
aad
test
jl
jl
xchg
aam
jbe
mov
icebp
inc
xor
inc
lods
pop
test
mov
imul
inc
fwait
js
icebp
push
enter
adc
jp
fsubs
pop
add
mov
lds
outsl
loopne
push
leave
stc
mov
adc
mov
enter
in
cmp
fincstp
or
stos
fisubrl
mov
pop
sbb
icebp
jne
pop
std
mov
dec
sub
and
mov
lods
les
popa
dec
pop
cltd
jl
jno
shl
dec
addb
out
push
add
dec
or
push
test
sub
pushf
jmp
aaa
jae
lods
comiss
fimull
pop
mov
scas
test
loop
repz
fldenv
or
dec
push
je
in
xchg
shlb
jl
xchg
ja
lcall
aas
scas
fdivs
loop
pop
data16
and
xor
push
adc
stc
pop
cld
popf
adc
fistpl
movsl
cmpb
cmp
and
mov
dec
dec
rcll
into
mov
mov
push
jp
xor
xchg
pusha
or
pop
cmpl
test
adc
pop
dec
repz
inc
inc
jge
cmpsb
jb
pop
xor
push
arpl
add
mov
lcall
imul
push
faddl
loop
in
insb
aas
mov
fistpl
or
inc
rcrl
daa
les
xchg
adc
mov
call
push
pop
rcr
sbb
xchg
loope
add
mov
loopne
pop
or
dec
adc
loop
int3
xchg
cmpl
mov
aad
mov
inc
mov
mov
repnz
add
loope
push
and
mov
nop
adc
mulb
mov
fcomip
lds
and
out
or
cmp
and
sahf
xor
mov
mov
insl
cmp
std
mov
popl
fucomi
add
adc
inc
aas
lcall
pop
icebp
push
pop
out
mov
out
das
inc
sbb
shll
bound
sbb
fimull
aad
subl
in
aam
out
adc
shll
pop
inc
in
push
xchg
sub
dec
and
inc
cltd
mov
outsb
xorl
adc
xor
insl
push
jmp
push
xchg
inc
pop
ror
ds
push
gs
adc
popa
hlt
in
mov
test
int3
jge
inc
xchg
xor
in
mov
loopne
lods
or
insl
int
push
fldenv
js
sub
and
and
mov
popa
push
test
fisubl
add
jmp
stc
mov
fnstsw
xor
xor
iret
jnp
dec
cmp
lods
inc
xor
popf
enter
dec
dec
fsubs
cwtl
add
xor
in
cmpsl
pusha
cmp
jbe
dec
pop
sbb
adc
loop
stos
mov
in
mov
or
cmp
or
bound
lret
cs
xor
cmp
out
inc
xor
mov
xor
cld
stc
pop
dec
sub
pop
xor
pusha
cmp
sub
es
or
scas
adc
lods
rol
sbbl
fdivp
lds
adc
xchg
out
cmp
sub
fdivrl
jbe
pop
push
inc
arpl
jns
das
pushf
mov
dec
or
adcl
jno
iret
cltd
mov
pop
es
fcmovnbe
stc
enter
adc
jmp
sbb
xchg
fwait
pop
int3
sub
sub
lea
mov
mov
dec
scas
repnz
xchg
dec
push
and
ds
and
sbb
shr
je
cmp
lods
cmp
pop
ja
rolb
and
or
jnp
int3
inc
mov
mov
pop
in
pop
jg
jne
push
fsubrl
jecxz
mov
mov
or
lds
fmuls
xor
push
cmc
and
mov
mov
rorb
mov
dec
push
dec
mov
jb
cltd
jb
cltd
data16
arpl
sub
cld
sbb
add
inc
dec
repz
pushf
dec
mov
mov
cwtl
rcr
push
or
and
jmp
fisttpll
gs
loopne
arpl
dec
in
fisttpl
pop
lds
dec
sti
sti
and
xchg
fsubrl
or
xor
cmpsl
pop
sub
inc
and
dec
outsb
xchg
movsl
fcmovnb
in
stc
inc
push
std
mov
pop
out
xchg
icebp
pop
cmpsb
ljmp
inc
inc
out
les
inc
push
dec
adc
aas
cmpsl
adc
aas
insl
dec
scas
lret
jle
mov
mov
lret
leave
fcoms
out
fcmovnbe
lods
xchg
imul
iret
ret
push
popf
clc
iret
dec
sub
inc
xchg
dec
adc
cwtl
pop
xchg
jl
xchg
cmp
push
shrb
pop
outsb
test
mov
push
inc
into
popf
and
or
cmp
ja
adc
ret
mov
and
jno
imul
cltd
sbb
fcompl
arpl
out
aad
outsl
mov
adc
ror
fnstsw
add
fcomip
inc
cs
xlat
std
hlt
cmp
sub
ja
scas
ds
int
cmpsb
push
pop
mov
cmp
in
sbb
push
test
sbb
mov
aas
pop
mov
leave
mov
rcrb
in
dec
sub
aas
int3
dec
nop
mov
shrb
jb
mov
adc
pop
fdivr
mov
sbb
cmp
lret
shrb
pusha
mov
shll
shr
add
cmp
or
or
dec
into
and
sarl
ljmp
cmp
lods
mov
cld
icebp
adc
fs
sub
or
inc
adc
mov
in
out
xchg
out
jl
xor
orl
dec
push
push
dec
das
xchg
cli
gs
xchg
sbb
fcoml
mov
jmp
cmp
movsb
adc
adc
call
pop
push
cmp
ljmp
in
cltd
jle
mov
repz
ret
xor
inc
sub
enter
out
or
shl
mov
lea
or
das
or
fcomip
dec
outsb
std
std
les
sahf
jmp
dec
cmp
in
ss
jnp
mov
rcr
addr16
insl
and
mov
push
sub
imul
push
mov
cld
cltd
imul
mov
loope
jp
push
jae
out
shrb
cmc
je
stos
test
cwtl
add
and
minps
and
in
mov
sbb
out
xchg
dec
arpl
mov
adc
jg
lock
stos
mov
jl
push
jbe
fwait
adc
fsubs
sub
xor
push
clc
fwait
pop
js
cmp
pop
in
or
lods
pop
arpl
sbb
repz
sbb
lret
loopne
shr
push
inc
enter
cmp
push
xor
popf
movsb
mov
imul
jmp
int
jb
xchg
test
dec
pop
mov
out
lock
in
mov
lods
and
pop
mov
push
cmpsb
mov
les
mov
jg
sbb
xchg
fcomi
jo
bound
xor
cli
sbb
imul
out
stc
dec
sub
xlat
nop
ret
cmp
dec
inc
jno
rcrb
loopne
dec
aad
xchg
nop
xor
mov
dec
sub
aad
inc
movsl
mov
mov
nop
sbb
cmpsl
fildll
or
mov
andl
sbb
repz
xchg
cmp
mov
das
inc
lahf
pop
imul
scas
adc
mov
add
and
adc
xchg
into
rcrl
les
push
mov
loop
bound
clc
push
xor
pop
insl
stos
cmpl
or
adc
fadds
jp
popf
xor
or
loope
cmp
and
stc
insl
add
pop
lds
add
mov
faddl
xor
sbbb
and
pop
out
data16
imul
xor
rcrb
jge
in
test
sbb
dec
addr16
mov
xchg
xor
shlb
stos
dec
or
xchg
mov
ret
or
sub
adc
add
frstor
popf
sub
pop
mov
or
testl
out
jnp
arpl
into
mov
int3
mov
test
aam
testb
or
addr16
ds
mov
xchg
sbb
sti
mov
jge
jge
in
loopne
rcll
mov
dec
lcall
testl
movsb
sbb
or
dec
lods
dec
pushf
mov
pop
arpl
fistl
dec
dec
jmp
add
push
add
add
adc
lcall
icebp
sbb
cmp
outsl
aad
std
or
jecxz
leave
icebp
scas
sbb
adc
push
mov
sar
je
mov
shl
push
stos
pop
mov
dec
pop
xor
into
push
rclb
or
ret
fwait
mov
push
push
push
push
dec
mov
jecxz
cwtl
std
sbb
lock
cmp
adc
xchg
stos
inc
xchg
xchg
jno
push
dec
aas
mov
inc
ja
sub
mov
fwait
jle
sub
sbb
pop
inc
or
inc
push
push
mov
aas
adc
dec
out
repnz
icebp
lcall
push
and
jl
mov
enter
repz
movsb
pop
pop
ret
xchg
out
inc
push
daa
or
repnz
mov
push
aad
imul
inc
mov
pushf
iret
xor
sbb
shr
mov
loopne
fisttps
jecxz
add
jge
sbb
jb
in
or
xor
and
out
or
xchg
pop
movsb
add
leave
cwtl
outsb
adc
push
xchg
lods
outsb
inc
mov
push
test
lods
cmp
jp
or
jl
xor
or
cmp
gs
pop
divb
xchg
mov
add
and
inc
pop
rolb
cltd
cli
xor
push
jae
push
push
push
cmpsb
imul
mov
adc
cmpsb
popf
mov
add
fldenv
pushf
jmp
cld
jbe
lods
stos
in
nop
std
push
pop
fistl
inc
bound
jns
jno
arpl
out
lock
outsb
sub
iret
mov
mov
sbbb
mov
add
adc
push
xor
fs
xor
loopne
pop
dec
and
jb
push
jg
xor
cmp
enter
fdivs
push
pop
lods
or
push
and
addr16
enter
xchg
mov
mov
mov
fs
cmc
xor
jae
aas
movups
lea
push
push
inc
out
adc
mov
mov
data16
xchg
mov
orb
pop
push
shl
sub
cmp
mov
repz
and
xchg
push
lret
inc
les
scas
jno
insb
push
cmp
mov
cli
dec
out
bound
push
xor
and
fistpl
jp,pt
and
call
and
cmp
push
aad
cmp
xor
inc
dec
push
ret
data16
mov
cmpl
mov
lcall
pop
rcll
enter
jmp
fstps
cltd
xlat
loopne
in
aas
push
cwtl
push
test
push
jg
xchg
fstpt
pop
pop
lds
leave
movsb
adc
add
mov
xor
int
cmpsl
data16
mov
sbb
aas
jle
popa
lea
out
stc
out
mov
push
dec
iret
push
and
imul
aaa
rclb
andb
push
dec
jle
out
mov
popf
and
mov
adc
mov
loope
in
add
fwait
xor
xor
ret
and
sub
pop
xorb
push
cltd
add
xchg
or
dec
fnsave
push
mov
sbbl
incb
jne
notl
xor
out
and
dec
push
mov
add
and
pushf
mov
or
cmp
mov
sbb
push
xchg
enter
loope
mov
mov
rolb
xchg
dec
movsb
ret
stc
inc
sub
xlat
leave
cld
cmp
call
repz
jbe
or
pushf
fcmovb
jns
pop
mov
cmpsb
cmp
cmc
lock
frstor
sub
aaa
mov
xchg
pop
cltd
inc
loop
dec
ja
inc
mov
std
test
xchg
sbb
ficompl
test
pop
mov
orl
sarb
fidivrs
pushf
leave
lret
call
xchg
xchg
loop
xchg
pushf
les
push
xchg
or
lods
pop
sbb
mov
cmp
test
and
cmp
in
jae
or
out
push
push
or
movsl
sub
xor
xlat
rorl
adc
into
stos
cmp
xchg
mov
roll
std
xchg
jge
addr16
sbb
fimuls
les
pop
shll
xor
fwait
and
push
roll
sub
js
sbb
mov
aam
inc
adc
mov
js
ffreep
inc
sub
pop
fidivrs
test
xchg
in
punpckhbw
ret
sbb
jns
mov
ja
mov
pop
pushf
inc
adc
mov
inc
call
out
mov
jl
push
ret
rcll
adc
adc
in
and
loopne
cmp
push
ss
fmuls
xchg
pop
testb
jecxz
scas
std
repz
out
stos
push
xor
adc
rorb
out
mov
repz
pop
pavgb
out
mov
and
adc
addr16
add
dec
sbb
cmp
mov
loop
enter
clc
jecxz
dec
pop
pop
xor
xor
jmp
mov
add
xchg
leave
add
adc
in
mov
sarb
stos
xor
cmp
std
mov
dec
fdivr
sti
dec
cmp
sub
sarb
pop
push
jg
call
outsl
out
cmp
imul
cs
xor
outsb
int
mov
in
sbb
enter
outsb
out
add
pop
into
loopne
loop
pushf
or
imul
fwait
shll
pushw
dec
dec
inc
jbe
xchg
adc
mov
pop
push
scas
pop
mov
jo
bound
addr16
jae
test
sti
and
mov
rcrb
pushl
icebp
gs
sbb
jmp
out
xchg
aaa
mov
rcll
leave
fnstsw
pop
in
and
sar
into
add
scas
and
out
clc
adc
sub
stos
xor
xchg
cmp
fdivr
push
xorb
rcll
adc
xlat
pop
idivb
lea
jno
test
pop
or
jnp
in
jb
pop
je
lods
jmp
fsubrl
sbb
adc
add
sti
adc
or
sahf
dec
mov
aaa
xchg
mov
or
inc
ficomps
pop
scas
or
mov
jmp
xchg
insb
push
lea
iret
in
fsubrl
cmpsl
push
fld
lods
dec
cmpsl
movsb
fs
stos
adc
xchg
pop
gs
pop
movsl
jle
lock
mov
sahf
xlat
mov
scas
in
and
cmp
sbb
push
mov
jecxz
out
mov
xchg
cmp
imul
in
xchg
xor
xor
lcall
ret
add
cmpsb
cmp
loope
and
sub
pop
pop
or
xchg
or
adc
mov
push
loop
popa
or
movsl
dec
in
cmp
idivl
xor
adc
scas
add
adcb
stc
or
jg
stos
jo
std
loop
lock
sar
jmp
std
mov
mov
pop
sbb
bnd
xchg
pushf
xchg
shlb
repz
add
jae
test
sbb
ds
icebp
int3
push
enter
ror
pop
loop
inc
cmc
repnz
sbb
out
inc
aas
les
xchg
lock
iret
bound
add
xchg
jb
dec
rol
jae
pop
xor
mov
loopne
arpl
ss
inc
ja
lds
movsl
inc
or
cmp
and
mov
das
cmpsl
jle
int
jno
mov
cmp
mov
addb
sub
aaa
push
stc
adc
mov
negb
sub
adc
arpl
add
pusha
jmp
jne
movsb
adc
gs
inc
dec
fisttps
test
fcompl
jb
popa
mov
adc
and
cmp
or
mov
aas
test
iret
leave
mov
mov
stos
test
lds
ror
daa
ret
xor
mov
je
add
mov
test
mov
jle
dec
push
xor
xchg
imul
dec
leave
scas
pop
ljmp
add
or
adc
sub
loope
jno
stos
mov
mov
enter
mov
xor
shl
sbb
out
fists
mov
sub
mov
in
adc
in
int
add
pop
fistl
scas
jl
nop
fbld
xchg
pop
loope
fsubrs
pop
test
lret
roll
inc
xchg
movsb
inc
mov
repnz
sti
or
push
out
rcl
pop
and
out
adc
std
xchg
ljmp
mov
inc
add
cmp
shrl
xchg
jne
pop
aas
ss
sub
lret
xor
push
shll
pop
fadds
test
mov
test
aas
sbb
test
jo
sahf
enter
fstps
sahf
jne
in
xchg
mov
pop
ret
jbe
push
xchg
sub
fnsave
mov
pop
mov
cmp
and
xor
mov
cmp
lea
int3
inc
hlt
in
movsl
pop
sbbb
jae
inc
fstpt
out
jnp
pop
loopne
cwtl
mov
daa
mov
fsubs
sub
popa
dec
mov
lahf
xchg
cmpsb
lock
std
pop
pop
out
lock
push
andl
popf
dec
push
in
lods
js
mov
iret
dec
adc
shl
das
and
inc
push
aad
rcrb
mov
mov
outsl
mov
mov
subb
aas
inc
fiaddl
int3
shrl
aaa
repz
vmread
push
dec
push
mov
lcall
xor
push
mov
dec
scas
xchg
pop
sub
and
jo
xor
in
dec
mov
xor
pop
cmpsb
lret
mov
cmpsb
sub
cs
mov
fwait
aas
je
cltd
push
push
mov
xor
adcl
ljmp
push
popf
testb
mov
loopne
fistl
fsubrl
push
test
push
outsl
xor
imul
stos
bound
and
mov
mov
mov
pushl
pop
sbb
push
aad
sub
aaa
mov
push
add
sub
data16
fcoml
test
dec
gs
jnp,pt
out
in
int
sub
jb
je
adc
cmpb
jnp
aaa
neg
mov
xor
lea
stos
loopne
out
sub
dec
rdtsc
push
lret
ljmp
xchg
fbld
dec
dec
dec
lods
lods
scas
adc
mov
mov
nop
lods
dec
add
pushf
jge
cmpsb
xorb
adc
imul
pop
jmp
fsts
xor
out
dec
scas
das
push
mov
mov
pop
fnsave
lods
add
iret
mov
rclb
cli
enter
push
jnp
mov
ja
pop
loop
inc
popf
and
andb
or
fstpl
dec
imul
add
lret
loopne
cli
jl
cmpsl
sbb
xchg
repz
mov
stos
push
das
or
addl
cmp
inc
mov
gs
outsl
lods
pop
mov
push
cmp
dec
xor
arpl
xorb
inc
xor
and
aam
repnz
ret
add
sete
inc
repz
aam
xchg
test
push
orl
mov
pop
jb
xchg
stc
cs
xchg
lds
leave
pop
fnstenv
cli
push
pushf
dec
mov
mov
xchg
fs
lret
push
mov
stos
loopne
jne
cmpsb
test
test
mov
pop
jne
cmpsl
add
ret
fisubrs
ret
es
addb
xchg
or
lock
fwait
lcall
shll
leave
addb
imul
mov
pusha
mov
push
mov
pop
out
xor
je
or
push
mov
cltd
xchg
xor
mulb
cmp
aaa
mov
dec
data16
cmc
lahf
adc
xchg
lds
push
subl
jp
int3
in
xor
ret
std
xchg
dec
jne
mov
mov
mov
xor
xor
imul
in
in
mov
dec
mov
mov
scas
lret
cmp
or
lea
std
es
mov
loope
int3
outsl
movsl
push
or
lods
cli
call
aad
xchg
fsubrs
dec
shl
imul
test
fucomip
out
xchg
jo
sar
mov
xor
fs
sarb
cwtl
adc
fs
test
push
sub
pop
xchg
addb
push
add
mov
stc
xchg
int3
in
add
cmpsl
call
lods
jns
jno
mov
stc
sahf
notb
pop
sub
popa
mov
xchg
mov
add
or
jb
test
or
pop
mov
inc
test
add
test
push
or
test
and
shlb
dec
test
xchg
int
mov
mov
inc
lret
es
sub
push
cmp
sub
imul
filds
jbe
lea
loope
das
stos
jle
mov
mov
and
inc
cmp
jmp
gs
mov
jmp
mov
jle
cld
lcall
jbe
je
mov
jbe
fsubs
and
fsubrl
jmp
notl
push
jmp
mov
xor
xor
mov
mov
les
xchg
sub
mov
rcrl
js
jmp
cmp
cmp
loop
stos
cmovnp
fstp
lock
out
addb
ljmp
sub
mov
shl
jbe
insl
and
xorb
push
call
or
lret
xor
dec
pop
jmp
ss
ret
mov
jecxz
and
pop
loope
inc
or
and
adc
push
mov
cmc
data16
subl
mov
frstor
stc
jb
pop
fcmovne
push
jne
stos
mov
nop
push
sti
cmpsl
sbb
mov
push
ret
lahf
xchg
push
and
pop
sar
xchg
ror
test
loopne
aam
inc
je
aas
or
xorb
mov
jmp
mov
pop
in
xchg
inc
sub
cltd
std
stos
xor
or
sub
out
into
adcb
and
adc
call
lahf
fnstsw
dec
jb
mov
inc
pop
dec
out
inc
repz
mov
cmp
fmull
lods
shl
and
in
cmp
sub
sbb
push
outsl
sti
cmpsl
ljmp
xchg
jg
mov
test
inc
and
cltd
inc
jecxz
cli
jp
out
cmp
movl
leave
stos
cmp
mov
pop
das
xor
cli
adc
aam
imul
push
cmp
data16
sbb
push
xor
xchg
add
or
dec
loope
popa
xlat
dec
mov
push
xchg
inc
or
shll
pop
scas
sbb
xchg
mov
pop
xor
jle
adc
cmp
lods
lods
inc
jp
dec
push
shrb
xchg
insb
repnz
xor
or
mov
or
xor
stos
cmpsb
sub
out
in
int
push
aas
xchg
xor
inc
rcrl
rolb
xchg
add
jns
and
adc
pop
enter
scas
loopne
cli
jmp
jle
fldpi
jmp
es
push
fistps
pop
sub
fcomps
pop
and
int
pusha
ds
sub
call
or
mov
push
pop
inc
leave
xchg
jae
cmp
js
cmpsl
cli
je
push
adc
cmp
dec
xchg
aas
orb
into
das
lcall
cwtl
mov
mov
jl
xchg
mov
add
push
adcl
int3
loopne
mov
push
rcrl
movsb
pusha
cld
sti
add
sub
cltd
and
dec
jbe
push
dec
xchg
fstl
jbe
inc
pop
sub
shrb
add
and
and
and
movb
xchg
and
lcall
dec
in
pop
adc
fldt
push
shll
imul
iret
mov
and
arpl
xor
ret
das
imul
mov
testb
imul
mov
mov
bound
hlt
pop
and
lds
mov
test
sbb
loop
mov
enter
lahf
push
jb
js
push
popa
test
loopne
inc
jnp
int3
inc
in
in
ss
arpl
mov
fmuls
cld
jno
stos
mov
pop
cwtl
mov
add
and
xchg
dec
dec
cmpl
lret
pop
adc
dec
pop
dec
jno
pushf
test
clc
add
aaa
cmp
pop
xchg
lea
icebp
lahf
fisubs
push
push
xchg
xchg
jecxz
imul
ljmp
pop
fs
movq
adc
adc
nopl
fs
xchg
mov
fcmovb
mov
xor
dec
mov
mov
leave
mov
fwait
push
adc
cwtl
ljmp
je
loope
inc
pop
and
xlat
in
xor
mov
push
imul
cmp
loop
xchg
or
cs
call
cmp
and
add
movsl
int3
xor
cmp
cs
push
ss
sarb
fisubrs
call
cmpsb
pop
out
int3
xlat
orl
clc
cli
or
pop
in
sahf
fcoms
dec
hlt
jbe
mov
pcmpeqw
sahf
jl
adc
aam
fcomip
mov
aam
push
mov
icebp
test
ret
lods
fildl
enter
fadds
inc
and
insl
scas
movsl
dec
xchg
inc
jmp
mov
sbb
mov
pusha
loope
xlat
repz
push
dec
xor
leave
lock
negb
aad
mov
sbb
dec
jb
test
enter
dec
and
add
sbb
sar
gs
popf
pop
mov
arpl
inc
jge
jae
jnp
lret
test
pop
fwait
test
cmp
xchg
sbb
xlat
sub
sbb
pop
jae
fiaddl
inc
jbe
in
pop
std
inc
push
iret
add
push
test
adc
std
mov
repnz
push
lock
xor
push
test
push
inc
outsl
into
loopne
xchg
mov
mov
push
daa
sub
mov
leave
bound
cmp
popf
ficoms
add
or
std
imul
xor
out
lods
aad
int3
jnp
fldt
das
ss
pop
cmp
pusha
lea
pop
std
lret
xchg
pop
mov
cltd
mov
call
xchg
jmp
mov
mov
cmpsl
std
push
ficomps
and
mov
push
aam
or
outsl
xor
insl
movsl
xchg
pop
dec
test
or
fimuls
mov
adc
cmpsl
adc
xor
es
or
sbbl
sub
push
sub
jno
push
fcmovne
or
push
pop
mov
sbb
addr16
or
out
mov
mov
out
inc
out
inc
push
push
dec
std
pop
dec
mov
rclb
incl
js
push
fstl
push
mov
mov
mov
loopne
pop
jb
and
jmp
push
cmp
xlat
aas
jns
pop
add
iret
mov
push
sub
mov
cmp
mov
mov
inc
insl
pop
sub
pushf
cmpsl
int
cld
out
sub
out
or
sbb
pop
or
andl
inc
std
sbb
lcall
push
inc
test
jb
add
inc
jns
push
dec
aas
cmovb
xor
cltd
jns
dec
cwtl
addl
or
xorb
rclb
mov
int3
sti
mov
fidivrs
mov
int
xchg
jle
imul
ficoml
mov
lahf
ss
daa
insb
scas
dec
pop
push
fidivrl
inc
inc
lds
adc
ljmp
push
cmp
dec
outsl
or
dec
les
pop
and
xchg
cltd
cltd
and
fsub
push
mov
push
jbe
roll
sbb
push
xchg
cmp
fistps
hlt
mov
jns
sar
xlat
xchg
stos
dec
fwait
pushf
aam
sbb
scas
rolb
jne
lock
mov
xor
sti
shrl
jmp
cli
js
jmp
mov
lods
xor
xchg
jle
add
fs
ljmp
lahf
scas
sub
mov
popa
sahf
mov
sbbb
dec
dec
in
mov
fwait
mov
or
ret
or
mov
cmp
sub
test
mov
cwtl
cmpb
mov
sub
mov
dec
repnz
push
inc
imul
js
sub
jle
into
fsub
outsl
or
xchg
dec
loope
fscale
mov
jg
cwtl
add
pop
subl
or
push
and
inc
mov
daa
cltd
mov
inc
sub
xchg
xor
in
and
cs
lret
fwait
int3
sub
fwait
mov
hlt
jp
jbe
cmp
bndldx
push
add
loopne
cmpsb
pop
cmpsb
xchg
xchg
js
pop
insl
scas
clc
add
xchg
lret
fsubrs
flds
push
cld
adc
adc
ljmp
sbb
or
jp
sub
rcll
and
jle
scas
stos
adc
xchg
push
mov
int
mov
lcall
push
in
jmp
popa
scas
xchg
sti
cmp
notl
or
pop
mov
mov
roll
mov
dec
addl
jecxz
mov
jp
mov
insb
push
shlb
xor
xchg
std
mov
pusha
adc
pop
push
kxorw
fists
loope
mov
pop
push
xchg
in
cmp
jbe
and
pop
les
mov
in
stos
inc
lds
les
cmp
xorl
mov
or
pop
popf
jmp
bndstx
sub
mov
popa
pop
or
push
push
pop
inc
in
jle
inc
xchg
adc
aam
mov
and
jmp
xchg
test
xor
jbe
jno
cltd
and
shrb
inc
call
jb
jne
push
repz
dec
or
iret
ljmp
mov
sbb
inc
clc
mov
lock
push
jnp
sbb
pop
push
sub
inc
sahf
ss
lods
xchg
mov
push
mov
add
inc
jnp
push
add
sarb
aad
imul
jle
pop
and
fistl
cmpb
out
dec
mov
loopne
fwait
lods
mov
jmp
mov
lea
cmp
mov
loopne
mov
cmp
xchg
push
movsl
cwtl
loope
fisubrs
pop
sbb
lock
rcrl
outsl
loop
rorl
cmp
cmp
adc
push
in
and
jg
ljmp
push
lcall
arpl
or
mov
cmp
jmp
filds
mov
lds
jns
mov
enter
daa
lods
dec
xchg
in
inc
dec
out
cltd
push
xchg
sub
cmp
or
sub
popw
loop
xchg
lahf
adc
out
add
mov
push
xor
jg
and
ljmp
or
mul
lods
lret
int
pop
and
push
push
jp
xchg
ljmp
jbe
outsl
pop
pop
pop
rcr
xor
inc
add
mov
or
or
cld
and
bound
xchg
hlt
fldl
xchg
mov
pop
pop
pusha
stc
cmp
movsb
faddp
jne
xor
fsubrs
out
or
mov
adc
stos
cmc
sub
dec
mov
lahf
xchg
mov
fcoms
sbb
jp
test
xor
cmc
add
daa
lret
xlat
inc
jp
pop
mov
push
repz
aaa
stc
daa
push
pusha
fmull
pop
mov
jle
scas
add
fnstcw
pushf
jp
ret
dec
jne
add
cmpsl
outsb
js
inc
aas
repz
xchg
ficoml
and
imulb
clc
jecxz
iret
sub
lcall
ds
pushf
mov
arpl
rol
adc
fmuls
add
inc
fwait
adc
sbbl
sbb
test
mov
and
mov
scas
popf
ja
out
adc
mov
push
outsb
rolb
xor
sbb
popa
int3
into
and
cmp
addr16
daa
idiv
mov
test
cwtl
sahf
out
lcall
dec
mov
test
sbbb
rorl
xchg
mov
test
add
sti
fs
dec
stc
aam
pop
test
test
outsl
adc
inc
mov
cld
inc
pop
cs
movsl
push
jge,pn
subl
test
aam
fsubrl
mov
mov
inc
stos
into
test
mov
pop
in
xchg
cld
jb
jg
cmc
xchg
xchg
or
bound
push
loop
push
xadd
int
cltd
scas
aas
sub
pop
mov
rol
xor
mov
pop
lea
xchg
ret
inc
push
inc
rolb
das
in
sbb
sub
pop
push
adc
adc
cs
jecxz
or
jo
xchg
andl
cmp
daa
xor
or
repnz
mov
or
xchg
in
pop
fcmovnb
icebp
add
dec
hlt
pop
frstor
push
cmp
leave
cwtl
dec
sub
scas
mov
cltd
mov
in
es
in
in
pop
jbe
pop
or
ds
cmp
mov
nop
adc
rcrl
nop
movsl
jp
out
push
sub
loop
sub
movsl
scas
push
js
scas
lahf
aad
dec
mov
test
lods
aas
sub
jb
mov
cld
aad
rolb
xlat
pop
in
or
jl
movsl
sahf
xor
inc
xlat
imul
mov
cmpsb
xchg
add
jb
loopne
int
lock
or
xor
mov
test
fisttpll
out
xor
inc
idivl
push
test
movsb
adc
imul
cmp
and
add
in
in
not
adc
ljmp
int
out
aaa
addb
psrlq
iret
dec
fsubrs
test
jge
stc
jbe
leave
sar
pop
iret
leave
cmc
lahf
fs
mov
lds
movb
xor
icebp
push
pop
in
pop
idivl
cmp
pop
jo
out
xchg
sbb
in
icebp
jle
pusha
clc
adc
mov
dec
das
fidivs
fdivl
es
jg
pop
fnstsw
cmpl
jg
push
scas
inc
xor
or
pop
xchg
push
cmp
repnz
fadds
sub
jno
testb
mov
add
arpl
fstl
aas
and
mov
test
and
mov
test
push
fwait
repnz
adc
int
clc
imul
or
mov
fiadds
fwait
push
nop
lods
fidivs
int3
mov
push
bound
sarb
fcmovnb
add
frndint
push
adc
icebp
out
mov
mov
cmp
mov
out
mov
mov
psubsw
xor
mov
xorb
push
push
les
movsb
mov
or
cmpsb
jno
ljmp
lea
loope
mov
cmp
push
or
dec
mov
notl
mov
lcall
iret
loopne
dec
insl
aad
movsb
fidivrl
pop
rcrb
ret
aaa
pop
xchg
jae
jg
jmp
fs
lret
sarl
cmp
shlb
or
mov
fnstsw
fldl2e
dec
int
movsb
push
or
xor
dec
mov
divl
mov
imul
push
pop
into
int
mov
push
or
and
leave
in
dec
stos
jae
clc
cmpb
mov
pop
xchg
std
add
xchg
add
loopne
fwait
pop
and
sbb
aam
pop
or
hlt
aaa
sbb
add
stc
cs
iret
cmp
js
xor
jnp
sub
addl
popa
inc
addr16
dec
ret
mov
sbb
pop
shl
push
daa
xor
mov
sbb
push
cmpsl
mov
jnp,pt
mov
xchg
and
roll
pop
aaa
sub
pop
and
mov
inc
lods
xchg
nop
push
mov
jmp
fldl
jge
xor
mov
dec
xchg
cmp
cmp
insl
test
aam
leave
dec
adc
mov
mov
mov
mov
iret
call
push
jp
fisubrl
mov
stc
test
out
add
xchg
enter
fcmovnb
or
xchg
cmpb
xchg
fwait
rcr
add
add
subb
fs
aad
cmp
jmp
cwtl
out
xor
ret
leave
push
pop
test
cld
jecxz
call
stos
add
cmp
push
sbb
mul
mov
scas
add
clc
imul
mov
or
dec
mov
pop
xchg
mov
pop
in
dec
xor
scas
pop
idiv
pop
test
adc
aaa
pop
jae
cmp
ret
sbb
cmpb
mov
push
push
iret
add
cwtl
repnz
mov
inc
testb
jge
mov
mov
or
divb
insl
add
xor
adc
inc
arpl
mov
sti
push
mov
add
mov
out
jmp
mov
xchg
lock
imul
insb
lahf
insb
pusha
loopne
mov
insl
pop
xchg
adc
ret
dec
inc
rcll
dec
test
add
mov
popa
pop
add
mov
fs
push
xchg
adc
push
cli
fstpt
out
mov
and
fnstcw
leave
cmp
jnp
adc
add
in
insb
mov
test
je
jp
sbb
ss
dec
movsb
test
xor
mov
push
add
push
lcall
adc
add
jg
jbe
rolb
mov
imul
sarb
mov
testb
pop
fwait
fs
cwtl
adc
aad
cmp
mov
dec
das
gs
mov
std
imul
fstl
gs
jne
push
movsl
mov
cmpsb
lret
out
dec
fiaddl
loope
jmp
fcmovb
pop
and
lds
push
xchg
ds
fwait
jmp
pop
insl
popw
sub
fwait
cmp
roll
push
dec
lahf
test
push
in
jmp
inc
repnz
xor
sub
inc
dec
pop
cwtl
in
scas
daa
mov
movsb
shl
pop
and
mov
pop
sbb
aas
adc
icebp
inc
inc
xchg
movsb
sub
nop
bnd
cld
pop
mov
add
popf
mov
mulb
mov
repnz
or
insb
pusha
scas
sbb
arpl
cltd
xchg
js
fisubrs
push
les
cli
pop
mov
adc
xor
jg
in
sub
pop
mov
mov
adc
inc
cwtl
scas
ja
test
iret
dec
jno
jp
jb
nop
push
bound
jb
jno
mov
cmp
inc
mov
repz
ss
mov
lods
movsl
ret
ficoms
loope
mov
and
inc
cmp
mov
and
jns
mov
ds
out
ja
cmp
sbb
sub
lods
test
cmp
add
xor
les
and
mov
mov
xor
jmp
jo
inc
int
cmpsl
adc
and
bound
xchg
lret
jbe
sub
xchg
shr
sahf
pop
leave
outsl
push
inc
test
push
adc
lret
loop
push
cmp
and
jnp
cmpsb
mov
lahf
and
jmp
pop
lds
xlat
and
fisttps
sbb
cltd
sar
pop
fmulp
push
das
add
mov
xchg
and
mov
in
xchg
inc
mov
test
cmp
addr16
sti
xchg
les
lods
jmp
daa
cli
push
icebp
xchg
sub
pop
outsb
push
cmpsb
mov
push
or
pop
inc
mov
mov
jge
popf
xor
mov
pop
dec
push
push
push
out
jo
lret
ds
push
orl
mov
dec
push
nop
enter
xchg
int3
cltd
mov
clc
jno
adc
cmp
fldenv
imul
sub
repnz
dec
jne
xor
daa
push
std
lds
xor
push
jp
xor
in
sub
fimull
pop
xchg
shrb
adc
in
pop
dec
addb
or
inc
shrl
roll
xorl
add
inc
and
jno
cltd
repnz
movsb
and
ja
push
aaa
cmp
pop
mov
cwtl
adc
dec
mov
sub
aad
cmc
sbb
test
outsl
mov
jg
int
ljmp
je
int3
adcl
scas
popa
xor
stos
jp
lock
jl
cmp
add
mov
xorl
push
sbb
mov
pop
scas
xchg
pop
xor
scas
adc
mov
mov
fdivs
lahf
xor
dec
pusha
mov
lock
adc
jns
in
push
mov
shr
nop
repz
test
pop
jb
jae
dec
int3
cs
adc
nop
movsl
dec
or
mov
or
inc
out
sbb
xchg
pop
js
cmp
call
xchg
inc
sub
and
fcomps
push
cmp
in
push
add
mov
jnp
mov
scas
ja
lock
das
imul
mov
movsb
xor
inc
or
dec
mov
mov
xor
xorl
divb
inc
jg
add
and
lods
mov
pcmpgtb
jae
cmp
aas
push
gs
sub
jmp
cmc
lret
popf
push
adc
add
ss
bound
jae
xchg
out
mov
mov
mov
int
nop
sub
mov
sub
jb
imul
cmpsb
pop
jmp
scas
movsb
insl
xchg
cltd
cli
add
lods
aad
cmp
in
push
orb
jb
sub
and
popa
aam
ja
and
inc
dec
cmpsb
mov
push
ja
and
into
mov
subl
mov
aaa
enter
jecxz
stos
lcall
dec
mov
js
and
mov
push
mov
out
ret
mov
xchg
bound
clc
mov
push
mov
shrb
lea
inc
loopne
inc
push
iret
mov
or
faddl
mov
fdiv
push
movsb
mov
xor
cs
xlat
jnp
or
aas
stos
or
and
xchg
mov
fwait
dec
scas
stc
stos
pop
xchg
mov
sub
cmpsb
mov
push
dec
sub
movsb
outsl
cmpsl
xchg
std
in
xor
mov
adcl
xchg
lahf
mov
mov
mov
push
aad
xchg
jns
pop
aad
cli
js
pop
leave
mov
inc
fwait
insb
cmp
dec
rcrb
adc
mov
fdivrs
sub
xchg
push
test
dec
sbb
loop
ffree
lds
cmp
repnz
in
jg
add
jae
icebp
xchg
gs
cmpb
cmp
ja
push
adc
sbb
jb
add
outsl
notl
ja
cld
aam
add
pop
push
outsb
pop
dec
cwtl
pushf
adc
and
mov
or
je
mov
xor
es
sidtl
iret
ret
add
test
pand
cs
ficomps
add
xor
imul
inc
xor
arpl
xor
enter
push
add
bound
rol
xchg
cmp
cmp
es
scas
push
fildll
out
aas
mov
das
aad
movsb
pop
test
push
loope
fwait
ret
cmpsl
out
es
xor
xor
pusha
in
or
mov
push
sbb
pop
xor
pop
pop
fsts
gs
mov
mov
popa
fnstenv
jmp
ret
sub
mov
add
stc
or
xchg
adc
sub
and
aas
mov
cmp
in
out
iret
mov
mov
cmp
in
fisubs
cmp
in
insl
and
jno
fsubrl
ret
xor
dec
jae
inc
gs
jnp
xchg
sbb
add
push
repnz
push
push
cmp
loope
jp
in
mov
xor
test
fsts
fsubs
jnp
push
clc
lret
cli
xor
mov
rcll
and
pushf
mov
pusha
enter
mov
mov
xor
cmpsl
call
icebp
add
xor
notl
xchg
jbe
cmpsl
sbb
rolb
push
mov
insb
mov
cmp
mov
mov
out
lods
imul
loop
cmp
jbe
outsl
in
je
mov
lret
repz
or
xor
inc
movsb
sbb
sbb
imulb
or
pop
xchg
int
orl
notb
into
lods
sbb
repz
fcomi
or
testl
aam
incl
adc
fwait
inc
or
xchg
and
jge
push
adc
test
dec
pop
adc
sbb
cmpb
pop
adc
or
aaa
push
mov
sub
or
inc
ja
ja
ja
aaa
je
and
sbb
fsubrl
jp
lods
jns
add
call
pusha
inc
idivl
fimull
dec
fcoms
push
sub
pop
jo
mov
cli
ds
rep
loope
divl
pop
rcl
push
vpmulhw
mov
sub
stc
jno
mov
xor
or
pushf
push
or
outsl
cmp
mov
mov
int3
ljmp
inc
out
es
inc
mov
push
clc
rcr
mov
cmp
jle
mov
bnd
inc
ret
mov
ljmp
jae
dec
push
repnz
nop
enter
inc
es
cmp
aas
pusha
xor
xchg
dec
mov
xchg
sti
dec
les
icebp
jnp
outsl
movsb
adc
mul
mov
fcompl
sbb
stos
xor
jns
rcrl
xchg
pop
sub
imul
jecxz
outsb
and
mov
dec
sub
ret
popa
test
fisubrl
aaa
and
imul
aad
loope
jmp
inc
lea
or
push
stos
add
in
andb
test
mov
lret
push
hlt
rorb
cmovno
and
adc
lods
inc
outsl
xor
ljmp
jle
aam
ret
pop
xchg
add
cmpsl
fistps
sbb
movsl
add
cmp
fstl
jp
jg
insl
fmull
or
fnstcw
mov
jecxz
push
jo
mov
jmp
adc
jmp
jae
ds
popf
cltd
sbb
dec
xor
repnz
inc
clc
push
push
fmull
pop
xor
in
push
push
fstpt
inc
inc
fucomip
test
jnp
pop
in
xchg
inc
xlat
iret
cltd
pop
cli
sti
psubb
push
cmc
mov
add
mov
popf
push
mov
les
jo
loope
dec
inc
mov
jb
iret
sarl
jl
xchg
fldenv
or
jge
loopne
ret
xor
and
std
cmp
js
outsb
pop
cmc
addr16
popf
js
sub
adcl
dec
mov
inc
in
test
sub
adc
jb
movsb
xchg
cltd
and
lock
lock
or
leave
sbb
mov
popf
cmp
out
lds
ja
add
pop
add
mov
dec
mov
xor
dec
mov
push
outsb
push
movsb
jne
or
sub
je
stos
sahf
das
sahf
xor
stc
pop
jnp
clc
mov
mov
pop
loope
aad
add
cmp
sub
pop
inc
pop
in
push
fistps
push
mov
gs
adc
add
dec
mov
add
inc
mov
pushl
sbbb
bound
cmp
daa
rolb
inc
sbb
sbb
sysret
ja
fnstcw
add
push
adcl
dec
jo
cmp
adc
mov
ret
xor
stos
lods
adc
ja
flds
push
pop
repnz
inc
ljmp
inc
mov
daa
mov
adc
pop
sbb
mov
sbb
push
test
arpl
sub
out
sbb
je
push
pop
lret
mov
lahf
xchg
push
arpl
inc
jecxz
lods
shr
inc
xor
fiadds
add
jno
push
popa
cld
pop
out
ds
and
adc
icebp
mov
repnz
rol
popa
push
aaa
add
arpl
push
insl
mov
loop
sub
or
lret
push
and
aaa
aad
aaa
add
divb
jge
ja
aam
fimull
pop
into
pop
leave
mov
std
outsl
mov
rolb
add
aad
dec
out
xrelease
mov
xor
push
nop
leave
inc
jo
xchg
lea
cmp
in
into
mov
sub
in
stos
adc
test
jecxz
cmpsb
sub
mov
pusha
stos
and
jbe
add
xchg
mov
sub
lds
and
sahf
inc
jo
dec
mov
xor
mov
inc
out
jge
std
in
rcl
mov
loope
int3
or
and
adc
lret
and
repnz
andb
cmp
xchg
test
cmp
int
cmp
cmpsb
sub
cmp
mov
stos
push
fildl
xor
mov
or
mov
test
fsubs
nop
fs
adc
dec
mov
dec
xlat
les
scas
daa
dec
pop
jge
arpl
into
jne
scas
xchg
out
out
in
add
pop
sbb
in
dec
idivl
orb
dec
mov
pop
push
jmp
or
dec
xor
xor
mov
sbb
add
and
cwtl
add
push
xchg
into
orb
add
gs
mov
push
in
mov
jmp
cwtl
push
call
mov
js
add
inc
fldenv
xchg
sub
scas
shrl
xchg
mov
in
ja
jbe
push
std
inc
pop
pop
insl
test
push
pop
adc
aad
sub
xchg
mov
iret
fcmovnb
sbb
xchg
mull
or
dec
test
push
add
dec
repz
repz
dec
or
sub
and
imul
sub
jno
sbb
mov
cmp
and
pop
hlt
mov
js
sub
and
add
push
stc
pop
or
add
xor
sub
mov
pop
xchg
jne
into
mov
add
mov
mov
pusha
in
push
pop
dec
insl
inc
mov
push
xchg
pop
outsl
cmp
mov
adc
fldcw
cmp
aas
pop
mov
in
jle
push
xchg
outsl
daa
or
scas
andb
cltd
adc
jmp
roll
int
sbb
xor
in
sub
fsubrl
sbb
ret
adc
nop
xor
xor
xchg
cwtl
jecxz
dec
push
lea
pop
fldt
clc
rorl
lods
mov
dec
xor
and
mov
lahf
lret
movsl
mov
ret
adc
mov
int
iret
fidivl
enter
dec
jp
jp
lcall
lret
jge
push
je
out
rcll
mov
rcrl
cli
notl
xchg
inc
mov
sub
mov
inc
push
je
sub
test
jmp
xor
daa
iret
mov
push
jnp
mov
shll
cmp
lea
out
les
es
push
rcpps
lahf
cltd
push
and
inc
sbb
jp
std
and
addl
out
ljmp
lahf
cmp
mov
ljmp
outsl
jbe
ja
dec
mov
fcmovne
cli
lock
out
mov
lret
movsl
out
fsubrs
lea
fisubrl
xchg
gs
sub
push
std
push
or
add
pop
aaa
push
jnp
notl
inc
out
jecxz
lods
xchg
pop
jmp
push
mov
stc
and
sbb
or
sub
iret
or
mov
das
pop
push
sbb
pop
or
add
lds
mov
add
das
fcmovnb
stos
pop
stc
jmp
xchg
je
test
mov
mov
jb
movsl
and
imul
cmp
jb
lret
fcom
js
cmc
xchg
clc
test
ljmp
pop
leave
add
mov
repz
or
mulb
cmp
into
mov
cs
push
add
mov
cmp
mov
loopne
aad
adc
stos
in
pop
or
movsl
nop
sbb
pop
pop
push
rcrl
mov
sub
hlt
jnp
clc
adc
and
xor
mov
jne
cmc
mov
pushf
adc
das
ds
sti
push
adc
xchg
xchg
push
or
push
pop
add
insb
mov
movsl
mov
es
arpl
push
incl
gs
push
fidivrs
dec
aas
es
xor
mov
adc
popf
mov
dec
fstps
cmp
lock
sbb
into
mov
fimull
mov
push
inc
repz
push
mov
xchg
xchg
flds
fstp
pop
jge
nop
addr16
cmp
mov
les
ljmp
xchg
aam
push
mov
lock
popa
insl
ljmp
pop
inc
pop
jae
out
push
mov
mov
mov
push
sbb
mov
adc
cmp
inc
dec
imul
xchg
loopne
mov
insb
nop
fistl
dec
mov
push
loope
aaa
mov
sbb
push
notl
lahf
shrl
iret
pusha
or
cmp
xor
int
jnp
inc
mov
cmpsl
cli
xchg
mov
imul
imul
addr16
scas
or
mov
pop
fbld
fsubr
lea
addr16
sti
fsts
xchg
out
out
gs
mov
jle
mov
sub
jecxz
push
mov
adc
mov
pop
pop
ret
or
lods
lock
dec
fcoms
xchg
push
xor
addr16
sbb
xchg
cmp
aam
mov
cwtl
aam
out
insb
add
stc
jns
mov
aad
leave
outsl
and
movsb
push
cmpsl
ss
mov
repnz
popf
subl
out
ficoml
hlt
ds
xor
dec
mov
ljmp
stos
sub
sbb
loope
xlat
lret
xchg
cld
jp
mov
mov
dec
rcll
leave
adc
adc
in
je
cmp
xchg
add
sbb
pushf
dec
jg
mov
out
dec
xchg
dec
push
shr
hlt
push
rolb
aas
lcall
leave
sub
xor
sti
pop
fs
insb
cmp
push
inc
push
imul
ljmp
xchg
pop
les
bound
push
xor
push
pop
mov
xchg
mov
or
daa
orl
les
xchg
cmpsb
sub
lret
imul
add
fldl
inc
sti
dec
xchg
pop
mov
js
jg
xchg
out
fldenv
sti
addr16
rcrb
aad
mov
dec
clc
sahf
pop
jnp
xchg
rcrb
mov
aam
mov
fbld
subb
repnz
xchg
add
aam
fiadds
jns
or
sbb
pop
cmp
cmp
mov
sbb
je
mov
mov
stos
xor
xchg
ja
repnz
jae
mov
adc
es
in
cwtl
mov
sbb
dec
adc
cwtl
push
jne
int
dec
and
shlb
rorl
sub
cmc
pop
jb
clc
es
fildll
insb
out
adc
inc
and
push
sbb
inc
jl
mov
sbb
dec
mov
inc
subb
test
push
clc
xchg
pop
ret
adc
or
cmp
aad
xchg
sub
outsb
enter
outsb
aam
mov
stos
mov
adc
repz
jno
adc
pop
data16
je
sahf
fisttpll
ret
je
clc
push
and
ljmp
push
aam
inc
mov
popf
push
and
mov
dec
imul
cmp
fsub
leave
imul
testl
mov
mov
add
lcall
and
cmp
add
inc
or
outsb
into
out
add
push
xchg
psubq
scas
cli
adc
dec
add
sbb
dec
clc
adc
loope
add
adc
out
das
enter
addr16
jnp
mov
jp
pop
xor
cmpsb
idivl
sbbb
adc
int
jb
mov
adc
test
cmpl
xor
daa
or
orb
or
popf
call
xchg
repnz
push
pop
xor
movsl
fnstsw
pop
xchg
jp
mov
or
neg
adc
shlb
pop
and
dec
sbb
xchg
pop
pop
sbb
sbb
fsubl
popf
scas
xor
jl
ret
jle
and
pushf
sbb
mov
pop
insb
push
movsl
es
jge
sub
jp
hlt
test
sub
adc
lods
mov
lret
push
or
shrl
jnp
cmp
aaa
hlt
out
dec
inc
mov
sub
in
and
jg
imul
adc
push
push
mov
icebp
xchg
call
adc
or
inc
das
aam
mov
push
sahf
shll
xchg
imul
loop
mov
or
push
jbe
mov
adc
test
mov
fcoml
xchg
xchg
sbb
pop
aas
test
repnz
in
call
dec
sub
and
push
into
test
inc
cmp
mov
scas
mov
mov
sbb
jge
fdivs
mov
sti
out
inc
push
je
ret
add
rorb
sbb
mov
xor
scas
mov
mov
scas
loopne
ss
stc
and
test
aas
orb
xor
push
adc
push
lret
lea
mulb
jle
repz
das
xor
in
sub
inc
nop
repz
rclb
icebp
inc
in
push
int3
pop
stos
test
push
sbbl
inc
and
and
clc
ret
out
fcmovb
jnp
jg
test
test
jo
imul
xchg
insl
xchg
das
mov
aas
sub
jl
mov
into
sbb
in
fildl
adc
or
cmc
fisubrs
inc
xor
add
mov
das
lahf
add
inc
and
pop
fsub
hlt
addl
cltd
movsb
jecxz
xor
mov
fstps
hlt
sbb
loopne
push
xorb
mov
inc
mov
pushf
inc
clc
jno
aaa
aaa
sti
sub
sub
and
xlat
orb
repz
dec
fs
roll
scas
xchg
sbb
adc
cwtl
lea
out
mov
add
mov
mov
cmp
adc
jecxz
xchg
scas
lods
push
fcomip
lret
push
popa
scas
or
test
or
or
pop
sub
adc
insb
xchg
mov
sub
mov
test
mov
fidivrs
push
inc
and
lods
add
jge
adc
xlat
push
jno
popa
int
mov
xchg
and
dec
rolb
sub
je
stos
or
das
mov
mov
and
pop
arpl
pop
fdivs
jge
jbe
jno
pop
movsb
clc
lds
lret
jns
pop
test
push
xor
js
iret
cltd
add
push
popf
jmp
ror
test
fsubrl
inc
push
sti
call
mov
dec
mov
push
in
mov
adc
fldcw
jle
jge
jecxz
or
test
lahf
dec
jne,pt
repnz
lahf
sbb
push
stos
sti
insb
push
inc
sbbb
dec
sbb
sti
mov
ficoms
mov
jecxz
push
clc
rol
shrl
push
cs
jno
fistps
push
lock
mov
stos
mov
cltd
pop
xor
xchg
mov
and
lcall
inc
call
fcoml
sub
push
mov
ret
adc
adc
jecxz
pop
or
sbb
or
lods
push
test
push
mov
out
leave
xor
pop
lods
aaa
mov
lea
arpl
inc
jecxz
aas
jae
pop
xor
push
shlb
cmp
popa
in
sub
or
mov
mov
pop
subb
adc
fimuls
xor
mov
cmp
in
jmp
mov
sub
sbb
push
adc
into
jle
inc
fst
add
popf
lock
iret
cwtl
pop
in
xchg
mov
sbb
xchg
punpckldq
mov
call
outsl
cmp
lea
std
xchg
mov
add
inc
sbbb
cmpsl
xchg
out
cmp
clc
fsubr
imul
push
lock
jo
or
jno
fwait
repz
jb
xchg
mov
ret
xchg
testl
rclb
dec
adc
sahf
clc
jb
sub
ret
arpl
loopne
sbb
call
adc
out
sub
push
scas
push
es
fldenv
mov
jg
mov
push
push
cmc
mov
sbb
lea
fwait
sbb
addr16
fisubl
fmull
push
adc
sbb
jb
jl
loope
xchg
sub
xchg
cmp
in
les
jbe
test
popf
jg
sub
push
mov
sarb
push
push
imul
subl
pop
mov
sbb
lea
mov
dec
cmp
or
add
sub
sub
xchg
idiv
mov
out
fdivrl
mov
cld
icebp
cld
mov
pop
jbe
push
mov
mov
scas
je
mov
sti
or
add
pop
adc
pushf
dec
insl
adc
popf
inc
xor
cmp
int3
xor
xchg
or
xchg
pop
lods
ja
adc
popf
xor
ss
into
xchg
nop
push
mov
sub
lods
xor
das
pop
pop
mov
jnp
pop
mov
push
imul
das
xor
test
mov
out
sub
inc
icebp
les
jecxz
arpl
test
out
mov
sbb
sub
inc
shlb
cmp
pop
sbb
addr16
je
lods
je
sub
mov
inc
das
in
imul
cmp
shll
push
les
jns
and
inc
mov
mov
jb
and
mov
cmp
cmp
imul
sub
jnp
jbe
jecxz
pop
pop
ljmp
push
mov
in
sar
dec
mov
xchg
xor
xorl
andl
add
or
push
ficompl
mov
pop
repz
push
mov
ja
mov
cmpsb
data16
aam
lret
xor
shll
fildll
lock
add
ja
jne
cmpb
sbb
dec
mov
movsb
out
push
loope
daa
lahf
imul
imul
roll
mov
mov
imulb
pop
sub
dec
imul
xchg
xchg
ret
xchg
mov
mov
loop
icebp
cmp
aas
cmp
sub
cmpl
mov
mov
push
shll
mov
push
lds
rorl
cmpsl
rorb
xchg
cs
lret
cmp
mov
arpl
cli
insb
or
inc
repnz
out
rcr
inc
add
test
movsl
adc
cli
les
jl
je
je
pop
mov
dec
fdivrl
cs
pop
jle
test
pop
popf
movsl
and
lods
dec
fcmovu
loop
arpl
fmul
nop
push
sbb
mov
inc
lret
and
adc
cmp
adc
addr16
jg
leave
out
gs
mov
bound
xchg
mov
fucom
ljmp
pushf
and
pop
xchg
adc
cmp
sbb
lds
aam
pusha
sbb
cmp
xchg
push
adc
sti
or
cli
sub
sub
cwtl
decl
das
cld
iret
cld
shll
adc
ljmp
sbb
jno
loopne
cmc
hlt
mov
cs
or
or
adc
sub
insb
jle
jmp
subb
dec
in
cwtl
scas
es
cmp
in
cmc
insb
cld
jne
sbb
fcompl
adc
insb
mov
das
sbb
out
dec
pushf
fiadds
push
xchg
push
push
or
mov
loop
mov
pop
enter
and
out
or
sbb
jae
fsubs
daa
jne
leave
stc
xchg
jecxz
inc
loope
in
push
dec
inc
pop
sbb
out
cli
lret
mov
add
mov
aaa
mov
jno
pop
cwtl
lea
add
pushf
sub
and
cltd
and
mov
sub
imul
andb
mov
outsb
rol
fwait
add
lcall
add
stc
sbb
and
push
pop
push
cmp
sbb
lea
repnz
out
shl
int3
cmp
or
rorl
dec
mov
ficoml
stc
ret
int3
fadds
inc
popa
jne
cwtl
pop
jl
outsb
xchg
fcoml
adc
out
scas
mov
fidivrs
xor
es
and
clc
xor
insb
mov
inc
push
pop
and
or
push
mov
add
mov
jg
pop
adcb
adc
pop
movsb
cmpsl
push
mov
insb
pop
push
cmp
xor
aam
in
xchg
repz
loope
xorl
jecxz
xchg
loopne
jns
jp
push
inc
or
mov
and
movsl
push
fucom
dec
loop
stos
jl
adc
mov
and
arpl
push
sub
cmp
xor
repz
mov
add
push
or
mov
sti
in
pushf
xchg
inc
inc
add
sbb
dec
cmp
fucom
dec
cmp
mov
xchg
or
add
in
insl
mov
pusha
clc
add
dec
aad
mov
adc
pop
lods
and
push
push
push
ss
lods
mov
mov
push
push
sbb
push
inc
jecxz
scas
mov
dec
cmp
addl
lods
lds
sbb
sub
jo
jle
clc
insl
cmp
push
xor
mov
mov
inc
std
sub
and
xchg
adc
and
dec
and
int
movsb
iret
inc
jnp
sub
adc
enter
ja
mov
stc
in
inc
or
mov
mov
clc
or
iret
dec
je
sbb
shll
test
inc
and
add
sbb
call
out
stos
mov
mov
cmp
movsl
in
sbb
mov
dec
pop
inc
jbe
push
fisubs
cmp
sub
and
inc
pop
adc
inc
rcrb
out
cmp
pop
and
sbb
fisttpl
pop
cmp
sub
adc
out
sbb
or
push
jp
in
js
inc
dec
enter
das
xchg
xor
mull
jmp
pop
fucom
sub
or
scas
add
aaa
pop
cltd
into
cmc
loopne
testl
repz
cld
mov
pop
sbb
out
mov
inc
lcall
outsb
imul
inc
pop
mov
scas
ret
adc
dec
push
iret
and
or
test
fisubs
and
cli
xchg
jae
setl
pop
jnp
ret
outsb
and
fistpll
mov
sub
push
and
jl
fs
adc
scas
dec
sbb
fistl
dec
or
sub
pop
call
test
pusha
jb
cwtl
loop
out
jp
sbb
je
mov
xor
push
fcomps
pop
xchg
cwtl
pop
sbb
test
insl
mov
adc
in
cmp
pop
sub
jl
sub
scas
xchg
out
mov
sbb
stos
xchg
pavgb
adc
and
dec
xor
rcl
test
adc
adc
fmuls
cmp
cmpsl
jl
sbbl
in
xchg
mov
ret
loope
and
cmp
xchg
jl
adc
test
test
dec
mov
mov
test
pop
and
mov
mov
iret
fildll
or
int3
inc
push
xchg
out
push
xchg
xchg
jbe
les
jl
dec
cmc
jnp
mov
dec
sbb
ds
mov
cmp
int
mov
adc
jbe
inc
int
mov
cmpb
stc
jmp
sub
dec
aad
mov
imul
mov
dec
popf
sbb
push
cltd
das
lds
and
push
adc
inc
fmull
cmp
jmp
dec
orl
nop
test
push
jo
sbb
pop
aam
dec
mov
pop
daa
aam
mov
jns
lock
mov
sub
cmpsb
ret
shll
fsubl
adc
push
cmpsb
lds
aaa
js
xor
js
pop
xlat
sti
fimull
add
mov
fwait
loopne
daa
test
mov
loop
xor
and
int3
lcall
pop
lds
jns
jp
pop
int3
fwait
rorb
xchg
mov
push
scas
push
jmp
sbb
in
mov
dec
or
xchg
sti
and
push
orb
or
pushf
push
adc
jmp
xchg
nop
data16
or
adc
repnz
sub
jmp
repnz
xchg
sub
mov
push
mov
fldcw
dec
jl
mov
mov
add
xchg
test
push
mov
andb
pusha
in
repnz
dec
js
jge
mov
xchg
cwtl
xchg
xchg
xchg
mov
movd
test
mov
xchg
push
jp
ja
cmpsb
test
or
imul
mov
dec
adc
adc
popf
pop
popa
loop
jmp
ljmp
mov
test
add
shlb
xor
imul
pop
and
mov
imul
push
adc
dec
adc
pop
js
jb
xor
pop
adc
clc
repnz
popf
xchg
cmovnp
mov
push
jge
mov
jo
enter
add
leave
aas
adc
sbb
sbb
adcb
enter
xchg
repz
cmp
jns
icebp
xchg
or
jmp
insb
pop
outsl
xlat
cmpsb
jno
repnz
mov
sti
pop
arpl
sub
sub
movsb
les
mov
fisttpl
lcall
mov
xor
pandn
psrlw
adc
movsb
adc
pop
pop
adc
daa
sub
pop
cmp
adc
push
and
fmull
pushw
clc
sbb
jp
mov
mov
mov
push
cmpsl
and
outsl
mov
add
mov
inc
clc
jmp
mov
lret
xor
outsb
dec
ljmp
jb
mov
jl
mov
je
jae
andl
out
lahf
xchg
inc
push
sub
and
xchg
sbb
jg
mul
sbb
repz
inc
lock
jae
insb
ja
cli
add
cmp
das
mov
inc
rcrb
daa
std
sarb
cltd
imull
fs
lea
loop
daa
andb
xchg
outsl
pushf
loop
pop
jno
in
cs
cmpsl
pop
stos
and
outsb
dec
cmp
jle
scas
or
push
sub
scas
sbb
lcall
shll
adc
add
push
out
movsb
pop
jae
hlt
sahf
inc
pop
sbb
adc
pextrw
cmp
pushl
shlb
mov
test
lret
enter
jnp
mov
inc
repnz
cmp
jmp
add
cmp
negb
popa
loop
in
pop
jo
pop
aam
insl
adc
in
insb
sub
push
mov
stc
shlb
mov
cmp
and
cmp
push
pop
add
mov
outsl
lods
adc
and
push
xrelease
mov
adc
cs
sub
push
push
jo
roll
xchg
jne
sub
test
mov
push
in
jl
fidivrl
insb
pop
inc
aaa
or
es
xlat
pusha
jno
or
jns
adc
test
fwait
outsb
xor
fsts
lret
sbb
sbb
and
lods
gs
insb
in
ss
push
movsb
mov
push
jge,pt
dec
insl
sarl
xchg
repz
cmp
imul
cltd
inc
rcrb
orl
les
or
icebp
jne
jp
add
push
xor
add
jg
xchg
insb
test
fisttps
cmpsl
pop
jge
enter
push
je
jecxz
adc
pop
lcall
push
shr
leave
xlat
xor
sbb
pop
cmp
incb
lock
jg
dec
mov
mov
inc
cmp
lret
xchg
adc
movsl
or
lods
paddw
inc
mov
pop
push
loopne
adc
popf
inc
adc
ja
in
xchg
loop
mov
popf
push
fcoml
popa
popf
js
mov
aam
mov
push
mov
and
fwait
inc
in
mov
sub
hlt
stc
cmpsb
push
addr16
mov
push
aaa
mov
test
je
ds
xchg
int
in
add
idivl
loopne
xchg
stc
or
les
xor
loopne
scas
add
fsubrs
xchg
icebp
jle
or
add
jbe
movsl
xchg
jmp
addr16
pop
std
shlb
fs
pop
fidivrl
in
mov
add
cmp
lods
mov
pop
cltd
and
sbb
push
movsb
sarl
ucomiss
sub
rol
push
jbe
cmp
stc
pop
arpl
jne
mov
test
add
lahf
jle
mov
or
dec
aad
adc
dec
sti
cmp
add
pushw
and
mov
cmpsb
je
movsb
leave
ret
jno
or
push
sub
out
ficoml
push
imul
mov
mov
repz
inc
ss
and
cltd
xorl
jnp
sub
adc
add
inc
sbb
jle
aaa
sahf
mov
rcl
gs
add
fldln2
dec
leave
mov
fs
sub
ljmp
xchg
shr
pop
sub
push
fsubrl
inc
xor
push
pop
fidivs
push
xor
mov
xor
and
jb
push
ds
pop
lods
fldcw
es
and
pop
es
pop
push
jge
jle
or
mov
xor
jge
add
and
adc
out
xor
test
enter
jns
jp
push
orl
pushf
cmp
imul
dec
push
adc
leave
nop
js
stos
gs
push
add
adc
and
lea
mov
out
test
loope
into
ret
pushf
sti
inc
cli
cld
push
mov
add
adc
imul
inc
adc
fsub
out
adc
pop
aas
fcoms
nop
insb
in
xchg
jo
shl
and
aam
hlt
dec
mov
pusha
pop
inc
sbb
ljmp
incb
pushf
outsl
jg
fsin
cmp
xchg
fisttpll
xchg
cli
aam
mov
jmp
xor
lret
sub
xchg
ficoms
mov
popf
scas
clc
mov
adc
test
das
push
inc
ja
push
push
addr16
jns
mov
pop
lahf
push
dec
sub
fwait
mov
lods
inc
aam
pop
inc
fistpll
fmul
adc
adc
mov
mulb
cmp
scas
or
push
jnp
pop
bound
and
outsb
cmp
call
fildll
adc
or
sub
or
aas
fsubl
push
hlt
ret
mov
sbb
push
adc
mov
loope
cmc
and
pop
cli
test
xchg
mov
repz
jo
fsubrs
ja
dec
cmpl
push
sbb
and
in
xchg
aam
cmp
add
mov
xor
lds
xorb
dec
inc
xor
mov
sub
xor
or
mov
jbe
data16
jbe
add
movsl
fldt
cmp
push
test
data16
inc
stos
js
sbb
jge
andl
push
cmp
mov
or
cmpsl
cwtl
push
push
lret
dec
pushf
sub
mov
jns
pushf
test
xor
lds
movsb
dec
cmp
cli
jmp
repnz
jnp
in
je
or
aaa
lock
inc
cmp
push
inc
imul
bound
cmp
cmc
ja
pop
loop
pop
and
jp
mov
pushf
aas
fists
stc
adc
nop
stos
mov
add
sub
mov
les
adc
sbb
mov
push
add
in
das
inc
jg
mov
add
and
push
cmp
jbe
fimull
pop
ds
aam
pop
shl
sub
mov
cwtl
pop
bound
sbb
test
stos
aam
cmp
cmp
scas
xlat
inc
mov
out
div
xchg
cwtl
out
pop
push
mov
enter
lods
cmc
ss
ss
pop
stos
xorb
push
push
cwtl
dec
sti
idivb
outsl
mov
sarb
outsl
fildll
jle
aam
enter
cmp
orb
test
sbb
jae
mov
int
dec
sbb
mov
mov
mov
jbe
sub
push
xchg
icebp
ret
dec
xor
and
mov
lea
stc
push
jecxz
push
add
fcom
popf
orw
sti
les
xor
sub
and
push
xor
jns
jl
call
adc
sbb
stos
movsb
mov
jp
jmp
xor
mov
cmpsb
add
dec
clc
leave
dec
and
ljmp
push
stc
hlt
mov
andl
je
jp
call
fs
movsl
rorb
push
fucomp
sbb
loopne
fmull
jae
cmp
ficoml
ss
adc
cmp
lret
test
push
hlt
iret
in
mov
mov
sub
cmp
lods
fstpl
ud2
push
pop
mov
idivb
pop
imull
push
push
gs
pusha
je
ret
push
mov
incl
loopne
setle
add
xchg
sbb
mov
adc
cmp
inc
outsb
dec
mov
push
data16
adc
imul
sub
pushf
mov
gs
das
lods
push
or
push
gs
dec
jns
dec
outsl
or
jmp
adc
in
clc
add
lods
sbb
cmpsl
inc
and
lock
fwait
je
cwtl
in
cmpsl
push
sbb
and
test
push
stos
sar
inc
xor
movsb
dec
fwait
xchg
or
imul
hlt
addr16
jle
ljmp
idivb
push
dec
push
imul
fisttpll
mov
jp
pusha
adc
dec
js
and
and
cmp
rcrb
mov
fwait
loope
sub
add
adc
kmovw
inc
mov
mov
push
adc
mov
xchg
fisubs
sub
ja
jbe
shrl
loop
rcll
push
pop
and
or
push
cld
xchg
sbb
outsl
ror
fidivl
pop
fldl2t
adc
cmp
jecxz
pop
fistl
push
std
notl
pop
fadds
cmp
sahf
sub
push
jp
jns
or
lahf
xchg
mov
and
mov
ret
sbbl
pop
cwtl
lods
and
push
jb
shl
nop
inc
mov
and
sbb
addr16
hlt
aaa
add
xor
jae
cmp
push
add
outsl
aam
pop
mov
sub
sbb
fidivrl
mov
xchg
das
fsubs
daa
sti
mov
ljmp
xor
shlb
mov
icebp
adc
insl
add
scas
pop
cld
xchg
sahf
cmc
mov
and
popf
std
fiaddl
push
cmp
dec
mov
cltd
mov
jecxz
cmp
add
sub
test
or
scas
push
xchg
iret
es
rolb
jecxz
call
clc
mov
mov
inc
sub
je
push
shlb
mov
les
pop
jge
popf
je
repz
cld
inc
push
mov
ljmp
into
inc
xchg
mov
push
cli
sub
arpl
fucomp
xor
and
adc
ret
js
push
and
cmpsb
movsl
push
cmp
sbb
cmp
pop
xchg
movsl
cmp
mov
mov
jno
cmp
sbb
sub
into
or
xor
mov
mov
bound
push
lock
or
push
mov
sub
stc
ss
pop
pop
int
in
das
roll
je
enter
stc
jne
inc
cld
add
cmp
adc
fcompl
je
mov
ss
push
mov
stos
int3
sub
scas
into
xor
sub
scas
arpl
adc
lcall
mov
adc
ret
ja
out
and
pop
fs
push
mov
and
jno
es
mov
jno
lcall
btc
sbb
es
jb
xor
adc
fwait
mov
push
mov
insl
sbbl
ds
lds
lahf
lds
jg
add
push
mov
stos
push
cmp
xchg
push
test
setl
dec
mov
adc
mov
loop
insb
mov
add
inc
adc
jne
cmpb
lret
pushf
subb
fsubrl
shl
pmaxub
xor
mov
sti
push
shl
stos
and
xor
dec
mov
stos
icebp
dec
xor
outsl
jbe
xlat
fdivrl
jbe
ror
xchg
sbb
sbbb
and
inc
icebp
mov
ret
in
fwait
int
mov
push
loopne
mov
xchg
or
and
xchg
lds
sbb
cmp
xchg
inc
faddp
add
loopne
in
mov
repz
stos
adc
fiaddl
pop
push
inc
cli
pop
sti
js
out
dec
mov
daa
loope
loopne
sbb
adc
jmp
dec
inc
fs
insl
movsl
jmp
loope
pusha
inc
mov
inc
pop
icebp
movsb
jbe
cmc
outsb
xchg
jns
enter
push
mov
insl
cs
mov
push
add
xchg
push
xchg
dec
mov
lods
xor
fninit
cmp
or
int3
adc
jge
adc
pop
and
push
inc
imul
mov
rcr
faddl
inc
pop
mov
jne
loop
inc
or
movsl
jne
adc
adc
mov
pop
or
sub
outsb
pop
and
mov
or
jmp
pop
loopne
cmp
insb
cmp
lock
ficoms
hlt
xchg
or
xor
movsl
in
test
test
pop
call
js
cmpsb
fbstp
out
fmuls
or
sti
hlt
shrl
movl
and
fildll
or
aas
outsb
cmpsb
sbb
lods
bound
dec
mov
mov
scas
out
sub
add
inc
xor
sub
pushf
xchg
add
pop
popf
jle
nop
xchg
pop
sahf
repz
mov
push
adc
aas
or
testb
leave
inc
jbe
mov
jecxz
sub
xor
mov
inc
mov
movsl
jmp
jp
push
dec
aaa
push
int
jae
lods
push
jmp
mov
sub
jge
and
or
idivl
jmp
add
jg
filds
push
ret
lcall
mul
sbb
sahf
jns
hlt
push
testl
mov
xchg
in
mov
inc
stc
adc
jbe
pop
scas
jge
ss
lea
sub
les
dec
inc
notl
mov
mov
add
pushf
push
cmp
add
les
cli
mov
ret
popf
mov
adc
jb
xchg
add
add
add
in
or
cmpsb
lds
or
mov
inc
sar
repz
xorl
sbb
hlt
fnstcw
fsts
jo
bound
or
inc
cld
imul
mov
lret
mov
mov
stc
aam
dec
insl
dec
mov
sub
add
repz
xor
add
iret
push
dec
aaa
sub
repnz
inc
dec
adc
outsb
mov
mov
push
fs
cmpsl
dec
std
cmc
clc
sub
leave
and
les
mov
push
or
inc
jecxz
push
adc
out
sub
repz
insl
cltd
pop
inc
fsubs
mov
mov
sub
je
mov
rcpps
adc
cmpsb
cwtl
ret
pop
mov
pushf
cltd
shll
or
pusha
push
pop
mov
xchg
jnp
sbb
lods
and
jne
xor
outsb
inc
out
jecxz
jmp
fstpt
mov
jl
addr16
aad
out
nop
mov
sbb
mov
aad
sub
std
xor
mov
push
mov
lea
mov
imul
mov
or
outsb
cmpsl
dec
iret
mov
mov
and
insb
adc
jae
mov
in
push
dec
into
mov
sbb
cs
ja
cmp
fmul
in
roll
mov
xchg
xor
push
jno
jo
scas
inc
aaa
sarb
inc
and
inc
sbb
or
sub
jae
dec
lret
push
fisubs
cmp
out
lret
testl
cli
mov
mov
xor
ret
int
pop
lcall
xchg
dec
dec
inc
xchg
jo
jge
ret
ja
push
aaa
rcrl
loopne
cltd
enter
pop
subb
arpl
aas
rcr
scas
sti
push
xor
movsb
test
stos
inc
inc
dec
fistpl
cmpsl
mov
dec
or
push
or
stos
add
call
sub
repz
fsts
xchg
add
andl
or
jae
notl
int
insl
mov
mov
lcall
add
movsl
orb
push
call
sub
movlps
fs
xor
cmp
stos
xabort
imul
add
push
imul
fmuls
and
and
pop
pop
cmp
pop
test
test
push
mov
mov
fsubrl
sbb
xor
xchg
outsb
jmp
jle
hlt
cmp
fdivr
jle
test
cmp
fwait
jge
mov
dec
mov
adc
imul
leave
mov
fsubrp
pop
int
repz
lds
jmp
push
jl
mov
jmp
fiadds
aaa
lds
mov
out
fwait
mov
outsb
notb
mov
mov
inc
nop
push
adc
arpl
imul
es
lods
ss
insl
ret
shl
out
mov
cld
fcoms
ljmp
inc
add
jecxz
cmp
into
push
test
cmp
scas
cmp
xlat
sbb
add
icebp
stos
sbb
mov
mov
adc
add
jne
or
test
filds
lret
adc
xor
inc
sarb
mov
lret
sarl
sub
and
or
add
movsl
jne
push
lahf
lea
addl
sbb
movsl
jp
push
pop
stos
pop
dec
popf
push
xchg
pop
int
mov
cmp
mov
out
mov
jnp
lret
inc
repnz
int3
cwtl
push
xchg
aam
xchg
push
sti
add
scas
push
or
arpl
mov
test
repz
std
or
int
bound
adc
jl
mov
jmp
fistpll
jle
gs
aam
dec
lahf
push
sub
aad
pop
clts
xchg
fcomp
add
or
movsb
movsb
roll
add
inc
pop
idiv
jle
lret
sbb
loope
cmp
mov
cmp
or
sbbl
test
cld
loop
ljmp
fbstp
shr
mov
lea
hlt
pop
enter
bound
sarb
das
mov
cli
mov
in
pop
inc
jecxz
mov
push
ret
mov
inc
fisttpll
mov
lods
push
cmpsl
lea
push
xchg
mov
aad
jno,pt
xchg
xchg
lret
xchg
and
jmp
popa
jg
sub
dec
add
push
mov
or
and
dec
in
out
jns
mov
mov
outsb
imul
int3
aad
xchg
mov
adc
out
xlat
sbb
movlps
xchg
or
int
lea
loop
in
xor
sub
das
lahf
lock
xor
fcompl
jo
fdivrl
insl
jl
out
and
lock
roll
aaa
jnp
daa
pop
mul
inc
or
into
cmp
and
cmp
mov
jl
icebp
sahf
repz
and
dec
push
xlat
xchg
call
jns
dec
or
pusha
sbb
mov
sti
sar
andb
in
ret
cmp
xor
scas
call
lret
adc
jg
jno
jnp
fsubrl
mov
or
push
lret
int3
push
clc
stos
inc
loop
add
mov
inc
jns
push
mov
push
jecxz
ffree
jecxz
insb
sbb
dec
es
adc
and
iret
inc
adc
pop
sub
and
gs
cwtl
or
push
push
jle
frstor
jge
popf
arpl
mov
in
pusha
mov
in
push
xlat
xchg
iret
mov
cmc
sbb
addr16
outsb
xchg
pop
adc
cmpsl
push
cli
add
lcall
pop
push
cmp
fnsave
inc
das
mov
or
int
or
outsl
sbb
int3
je
rorl
cld
jmp
pop
loop
sbb
push
roll
into
dec
fdivs
or
mov
fstl
and
dec
lock
and
out
fildl
push
lret
adc
push
mov
sahf
xlat
iret
dec
les
jl
cmp
test
pop
sub
xchg
push
inc
add
xchg
outsl
cmc
ljmp
xchg
je
enter
loopne
jo
in
mov
loop
pushf
into
and
insb
insb
sub
pcmpeqw
call
xor
dec
out
sysret
fcompl
fdivrp
xchg
addr16
and
sub
cli
cwtl
push
ret
dec
push
cltd
sub
testl
add
pop
dec
aad
out
ds
pop
jnp
xchg
add
into
lds
pusha
add
loope
sbb
xchg
push
imul
lahf
int3
mov
std
mov
mov
inc
cli
push
push
cld
loope
add
scas
inc
mov
or
pop
or
js
test
mov
sub
sub
xchg
adcb
adc
into
in
test
fnstsw
imul
jb
inc
mov
dec
scas
mov
mov
fldcw
push
repnz
mov
loopne
imul
cmp
or
mov
in
xchg
rclb
ficomps
xor
mov
jle
sub
cs
loopne
xchg
stos
addl
inc
or
jp
je
movsl
cmp
mov
mov
mov
out
aaa
cmp
scas
add
lods
adc
add
jae
jmp
sbb
and
jbe
and
mov
xor
cmp
sarl
jle
mov
in
mov
push
add
mov
mov
pop
leave
clc
inc
adc
mov
mov
mov
stos
cmc
fisttps
aaa
add
pop
lds
mov
hlt
les
loop
push
rcrl
movsl
cmpsb
es
clc
xchg
dec
rcrl
ror
into
imul
in
cmpsl
xchg
stos
fidivl
icebp
cmp
inc
cltd
mov
repz
add
fsts
and
lret
push
fs
decb
pop
rcll
xchg
adc
push
int
shl
out
xlat
push
rol
add
test
mov
pop
movsl
out
fimuls
rcrb
adc
dec
and
stos
dec
push
ds
push
insl
dec
and
gs
rcrl
lahf
fisttps
clc
xor
dec
pop
xchg
rorb
mov
jl
mov
sbb
pop
push
sub
and
inc
bound
cs
sbb
sbb
in
push
mov
pop
sbb
sub
je
jp
movb
sbb
sub
jmp
push
jge
add
add
pop
pop
add
lea
outsb
push
arpl
pusha
pop
xchg
push
mov
outsl
stc
sbb
aaa
jecxz
ficoml
pop
lods
sbb
pop
jmp
cmp
arpl
mov
movsb
or
lds
mov
pop
test
mov
dec
jecxz
icebp
push
xchg
jg
cmp
jns
stos
arpl
popf
movl
aad
fmuls
cwtl
xchg
pop
popa
cmp
sbbb
and
imul
add
xor
push
loopne
adc
lock
jbe
repnz
jl
out
outsb
xlat
cld
in
shlb
push
adcl
cmpsl
xchg
xor
ds
in
pop
popa
int
dec
incb
cmpsb
jp
mov
aaa
push
cmp
sarb
sbb
pop
pop
out
cs
add
push
jbe
pop
js
push
aaa
fcomps
or
icebp
sbb
outsl
loop
ljmp
pop
mov
nop
aad
xchg
enter
inc
movsb
cli
push
add
and
xchg
fwait
add
je
call
jmp
mov
popf
hlt
pop
repnz
mov
imul
adc
sub
arpl
test
jb
inc
stos
ficoms
sub
shr
mov
imul
fisubs
fcom
and
xchg
xchg
push
fildll
shll
mov
inc
jle
adc
arpl
test
daa
leave
paddw
gs
loope
push
push
out
pop
xchg
push
in
cmp
ret
mov
cmpsl
arpl
mov
daa
enter
mov
mov
les
int
pop
sbb
das
shrb
dec
pushf
dec
push
mov
ss
scas
cwtl
jl
insl
jno
je
ds
push
popf
push
test
lahf
mov
or
jae
push
pop
pop
mov
mov
jle
and
jno
add
push
insb
mov
xor
imul
xlat
inc
mov
repz
mov
imul
xor
cli
loop
mov
popa
hlt
push
stos
rorl
pop
inc
add
scas
xchg
cmp
jo
pop
or
mov
stos
or
daa
js
and
jecxz
push
mov
fnstcw
jmp
lret
jae
movsl
mov
jne
mov
shr
stos
sti
and
lret
mov
cmp
mov
imul
cltd
jb
ja
jae
hlt
mov
sahf
icebp
fdivrl
gs
out
stos
xlat
cwtl
das
mov
sub
leave
test
pop
insb
or
idiv
push
mov
or
roll
jge
push
xor
cmpsb
jp
nop
scas
sbb
sarl
fwait
jo
fmull
fsubrl
and
fucomip
pop
mov
xlat
mov
loope
jns
jge
test
in
push
aad
decb
pop
lret
rolb
out
jo
rcrb
add
test
push
push
or
int
cmp
and
push
es
das
add
xchg
filds
popf
mov
ljmp
lds
push
lahf
dec
rcr
popl
ret
jbe
test
pop
loop
jno
sti
ret
insb
sbb
push
idivl
cmp
dec
cmpsl
pop
xlat
xor
loopne
js
sub
aam
icebp
loop
movsl
fcomp
jno
shll
xor
mov
add
fsubs
add
add
repnz
lret
mov
pop
jmp
jb
sbb
lock
repnz
sub
xor
cmp
shll
adc
mov
mov
jbe
ds
cmp
out
mov
arpl
arpl
mov
pop
lcall
sub
sbb
lea
fidivs
jns
lret
and
add
out
xor
into
and
and
inc
dec
out
inc
and
ljmp
or
in
push
ret
iret
and
dec
and
dec
push
test
es
sub
test
lea
jmp
xchg
pop
xchg
popf
cmp
leave
test
sti
or
lds
pop
mov
fbld
pop
add
and
fwait
out
std
lret
imul
pop
int
fldt
cmp
cmpsb
dec
jne
mov
out
hlt
dec
pop
sbb
gs
mov
mov
ja
lahf
das
test
fiadds
lods
xchg
pop
int
jmp
insb
mov
mov
and
pop
jmp
xchg
subb
jae
test
add
dec
xabort
or
out
jne
cmp
add
add
sub
int3
add
inc
dec
aas
pop
jae
frstor
sub
cld
push
jne
jno
clc
lods
push
jecxz
sahf
nop
outsb
fdivrs
push
mov
and
push
mov
jo
xor
in
jmp
mov
pop
sbb
in
add
pop
lds
ret
sbb
lods
dec
out
jl
sub
jl
sub
ret
mov
or
pusha
addr16
xchg
pop
inc
mov
fwait
repnz
inc
pop
inc
in
pop
xor
loope
mov
ret
push
inc
dec
cmp
lret
movb
stc
int
mov
cmp
arpl
pop
sti
mov
mov
cs
cli
mov
movsl
mulb
loope
rcrl
dec
enter
shrl
pushl
movsl
xchg
push
mov
test
cmp
out
test
mov
xchg
cld
cmp
and
jno
out
sbb
das
push
mov
fnstsw
xchg
jecxz
arpl
pop
sarb
cmp
repnz
lret
inc
movsb
xchg
cmovp
loop
fimull
add
jnp
pop
mov
mov
xor
mov
and
mov
push
pop
jge
mov
icebp
loopne
lcall
mov
sbb
mov
outsl
into
out
xchg
shl
repnz
inc
lods
rcl
je
insb
push
cmp
xor
cmp
mov
test
xchg
sub
shlb
dec
int
aas
mov
xchg
push
insw
dec
sbbl
repz
test
cmpsb
idivb
mov
add
xchg
add
adcb
cmp
push
and
cmp
cmp
sub
mov
sbb
push
sbb
xchg
ljmp
das
inc
loop
mov
mov
mov
adc
mov
sbb
scas
add
pop
mov
lea
call
fists
or
push
mov
iret
xchg
add
fistps
subl
cmpl
addb
lret
inc
pop
lcall
insl
mov
in
test
cs
fists
cmp
fiadds
into
ret
xor
push
push
loopne
in
insb
enter
into
aas
out
test
or
dec
xchg
and
or
test
leave
sbb
aas
ret
mov
xlat
jle
sarb
imul
adc
ret
pop
stc
mov
test
insl
inc
xor
xchg
jge
pop
pop
and
aad
dec
jne
aaa
aaa
mov
fmull
mov
sbb
pushf
shl
insl
loope
mov
fsts
insb
cs
mov
and
xor
xlat
jno
lcall
mov
add
repnz
rorl
les
adc
or
aam
or
inc
and
pusha
ja
inc
mov
cmp
or
fdivl
out
negb
cmc
xor
sbb
inc
cmp
dec
orb
addr16
mov
aaa
imul
movsb
jne
arpl
les
add
mov
dec
jb
cmp
fimull
mov
cmpsl
push
cmp
insb
and
xchg
xchg
or
mov
dec
mov
int3
iret
xchg
push
and
push
inc
pop
and
icebp
mov
mov
clc
push
xor
idiv
loopne
add
sbb
aas
xor
sbb
stos
lret
bound
mov
subl
mov
out
loopne
add
in
sub
popa
roll
sub
mov
mov
dec
cld
and
fcoms
aam
jns
rolb
adc
adc
xchg
xchg
dec
out
icebp
dec
xchg
jb
cli
dec
push
push
jmp
aad
mov
loopne
cli
pop
push
mov
out
mov
loopne
aad
roll
fcoml
iret
leave
mov
and
mul
cmp
xchg
stos
in
outsb
movsl
dec
mov
xchg
arpl
stos
arpl
mov
imul
cmpb
sub
dec
jne
subb
xchg
inc
fcomps
sarl
ljmp
das
dec
sbb
std
gs
xor
pop
add
cwtl
xor
pop
jne
push
push
mov
mov
leave
and
mov
cmp
mov
sub
mov
bound
xchg
std
inc
mov
jb
roll
xor
mov
roll
scas
aad
mov
and
jae
xchg
jae
push
rorl
out
and
int
and
cltd
js
inc
sub
jmpw
rep
test
push
loopne
pop
jo
sarb
mov
xor
test
test
dec
lcall
pushf
sub
dec
inc
pop
lods
repnz
pop
cs
js
in
jmp
mov
ret
jo
lcall
xchg
insl
out
pop
roll
inc
aad
mov
cmp
dec
mov
jmp
call
inc
mov
pop
fs
fistps
sub
cltd
pop
nop
in
popa
jbe
and
daa
cltd
ds
in
sbb
sbb
fcmovb
xchg
add
sub
cmp
cmpsl
out
pop
mov
add
loope
repz
add
sub
mov
cli
fsubl
fcoml
lret
jnp
push
sub
pop
orb
mov
test
aaa
ja
push
jmp
mov
sub
jle
pop
addr16
dec
cmpl
stc
cltd
mov
adc
jno
in
cmp
fnstcw
pop
fistpl
cmc
push
pop
mov
daa
loopne
and
adc
mov
pop
stc
xorl
sbb
mov
pop
pop
xlat
sbb
inc
dec
mov
mov
stc
push
clc
mov
fsts
dec
or
rcll
sbb
xor
mov
fxch
mov
pusha
int3
cld
adc
outsb
xchg
imul
jg
fwait
push
sbb
mov
pop
lods
out
jecxz
insb
imull
or
or
inc
les
inc
int
sti
sbb
add
dec
lret
dec
loop
sbb
repz
xor
pop
xor
mov
and
xchg
sbb
jl
jne
lret
aam
dec
popa
xor
ret
jle
fs
jo
lret
loop
js
fbld
loop
or
orl
jecxz
lret
test
jmp
mov
sub
lock
mov
or
imulb
icebp
test
scas
xchg
out
or
aad
out
mov
sub
fmuls
idivb
inc
in
sbb
jo
or
call
adc
lods
inc
mov
cmp
orb
mov
orb
mov
cmp
fs
test
sub
popa
fstpt
push
adc
loopne
jno
js
sarb
xchg
fucomp
in
jae
in
xor
cmp
sahf
jnp
adcb
push
add
in
pop
pop
lahf
jno
lods
push
fidivrs
stc
jmp
xor
sbb
rcl
inc
mov
add
pop
pop
aam
pop
jns
scas
mov
inc
mov
and
inc
mov
jmp
jge
push
enter
xchg
xchg
mov
pop
jg
xlat
inc
shll
push
movsb
jg
adc
sub
jb
pop
into
jge
test
push
pop
inc
je
and
jne
imul
pop
idivb
xor
jp
test
mov
mov
xchg
mov
iret
in
mov
push
jle
jle
mov
cld
mov
pop
mov
outsb
cmp
movsb
xchg
add
push
and
daa
cmp
sub
out
cmp
sbb
fcmovnu
mov
pop
jno
ljmp
inc
inc
sbb
pop
leave
dec
xchg
sbb
fnstenv
and
das
pop
push
mov
imul
push
xchg
push
lods
insb
arpl
movsl
sub
lds
cmp
push
stos
push
movsl
dec
and
inc
cmp
sbb
mov
or
mov
push
inc
lock
sahf
mov
pusha
mov
pop
push
lahf
fisttpll
xor
jne,pt
stos
push
iret
inc
mov
dec
mov
ja
aaa
data16
lcall
jne
mov
sahf
and
push
loope
arpl
stos
jno
enter
or
xor
push
and
popf
push
adc
inc
les
outsl
cmpsl
xchg
push
fs
dec
fcoms
adc
adc
mov
out
imul
pop
jmp
jle
xchg
out
or
aas
sbb
push
push
mov
push
xorl
fs
push
pop
lds
or
das
xlat
daa
or
rolb
jge
rcrl
mov
xor
mov
xchg
mov
jg
pop
push
xchg
mov
aas
jmp
or
add
sti
fsub
mov
pop
jmp
icebp
jmp
push
cwtl
cwtl
jle
sbb
lret
sti
jnp
push
cmpl
es
dec
push
sub
mov
push
adc
dec
stos
imul
push
and
sbb
out
out
ret
jae
enter
jle
mov
xchg
adc
popf
fwait
xchg
mov
inc
leave
sub
xchg
fucomi
imul
adc
in
mov
mov
stc
jle
push
mov
test
mov
pop
xchg
push
imul
push
aas
or
aas
adc
jle
aaa
lds
movsb
sahf
clc
fnstsw
jnp
test
adc
mov
mov
jge
jae
mov
or
sbb
adc
sti
arpl
adc
mov
xchg
mov
jle
sub
mov
cmp
lcall
or
push
insb
adcl
stc
sbb
pop
mov
test
add
movsb
adc
jns
pusha
nop
gs
push
lahf
or
shrb
fnsave
out
fsubrs
call
dec
and
mov
fs
jno
cmpsb
or
in
jnp
and
out
loopne
xor
pop
sbb
fnsave
insb
jle
in
xor
mov
rol
push
push
dec
xchg
out
dec
sbbb
adc
inc
lock
sbb
popa
cld
xchg
popf
lods
bound
shr
ja
jp
pop
push
jle
sbb
jno
stos
dec
fisubl
push
ss
in
testb
and
or
pop
jp
lahf
pmovmskb
jl
pop
xorl
and
dec
arpl
or
movsb
xor
outsl
jl
mov
sub
imul
pop
lcall
out
and
cmp
xor
les
and
cmp
mov
lret
js
pop
pushf
and
add
pop
mov
adc
inc
enter
repnz
leave
daa
add
in
in
or
aam
xor
daa
xor
popa
mov
dec
mov
jge
cmc
dec
push
mov
lret
xchg
stos
out
jge
ss
mov
pop
inc
or
or
jle
sub
jae
shr
dec
ljmp
insb
and
jp
xchg
int3
arpl
adc
inc
dec
and
xor
push
loopne
data16
mov
inc
cs
inc
aad
pusha
sysret
xor
sbb
or
cmpsl
mov
hlt
adc
adc
jle
js
lods
mov
add
cld
xchg
mov
or
add
push
aaa
and
pop
push
fptan
dec
lds
movsl
leave
jbe
inc
add
aaa
andl
inc
lahf
addr16
push
sbb
jg
xlat
int3
daa
adc
jns
sbb
insb
les
push
loop
js
jmp
enter
ficompl
jns
or
in
aad
jne
xchg
ret
es
xchg
mov
outsl
pop
pop
lock
dec
sahf
push
loopne
ljmp
pop
adcl
aaa
stc
or
mov
inc
js
rcl
rol
dec
mov
mov
adc
imul
mov
mov
les
lcall
mov
push
je
lds
cmpsb
cld
jg
mull
testb
pop
adc
enter
adc
test
lahf
xlat
repnz
clc
call
jnp
fiaddl
in
repz
call
jno
mov
test
popf
cmpsb
inc
inc
ret
mov
and
and
fcomi
jmp
rcrb
xor
out
sub
aam
dec
xor
aam
test
sub
jnp
inc
dec
mov
pushf
mov
out
loope
sbb
sub
out
aas
xchg
xchg
fs
push
sahf
mov
sub
popf
jb
add
inc
dec
adc
flds
clc
rorl
sub
xlat
sbb
ss
add
xchg
pop
addr16
adc
push
cmp
lea
pop
lea
int3
xor
in
icebp
and
pusha
dec
inc
mov
inc
aam
add
xchg
lock
inc
jae
arpl
subb
rcrb
rol
lret
xchg
push
or
dec
aad
fdivrs
in
movsb
add
push
test
scas
imul
push
aam
aaa
xchg
add
fstl
cmp
mov
inc
shl
repnz
lods
cwtl
jg
xor
cwtl
push
push
mov
lea
inc
pusha
iret
cld
and
xchg
loop
dec
ds
pop
mov
outsb
pop
lods
in
shrb
dec
adc
xchg
scas
shll
stos
les
mov
repnz
lds
std
dec
mov
adc
push
xorl
inc
loopne
and
jns
in
jbe
je
jb
test
icebp
or
das
subb
insb
or
lcall
xor
or
mov
sbb
loope
js
and
jo
cmp
or
test
push
and
inc
lahf
aad
jl
and
daa
pop
jge
mov
mov
out
push
cli
outsb
lock
clc
int
jnp
sbb
sub
clc
cmp
stos
flds
mov
add
lods
loopne
mov
add
dec
imul
push
enter
mov
outsb
mov
fisttpll
xchg
addr16
push
xor
imul
and
pop
pop
push
int3
dec
pop
cli
lods
xlat
scas
shlb
sbb
jnp
mov
inc
and
pop
fucomp
enter
ret
ficomps
xor
dec
inc
outsb
inc
jge
xor
sbb
ret
mov
icebp
inc
es
adc
mov
or
movsl
pushf
xchg
dec
dec
call
mov
lds
adc
mov
ljmp
ret
or
jmp
xchg
into
ss
inc
mov
in
lcall
jp
test
orb
xchg
xor
icebp
pop
push
jmp
jg
sbb
jae
xchg
scas
jg
jg
imul
lahf
popf
int
sub
pop
xchg
mov
adc
adc
push
stos
aaa
out
add
bound
scas
adcb
mov
test
movsl
ss
jnp
xlat
test
jecxz
icebp
or
cmp
stos
xor
in
and
cs
mov
inc
or
mov
xchg
fwait
adc
lods
pop
repnz
lock
ja
inc
cmp
cmp
fmuls
ja
icebp
xchg
cltd
xor
test
jae
subb
pop
mov
out
xor
fisubl
rolb
jne
xorb
loopne
jge
loope
xchg
jnp
cmpsl
cmp
pop
xor
mov
rolb
xor
test
aad
xlat
stc
ja
mov
jno
loope
push
xchg
pop
push
mov
mov
or
mov
int3
divb
push
sub
jg
movsb
lret
test
mov
pop
cltd
int3
cmpsl
sbb
inc
aas
std
jmp
shlb
cltd
mov
cld
xor
jno
adc
inc
hlt
icebp
jno
lcall
cmc
xor
add
out
fmull
jo
add
adc
inc
js
shlb
push
jle
dec
ficomps
bound
jle
push
lret
popa
xor
xchg
rol
add
gs
decl
rolb
jp
push
fwait
dec
jb
jne
ja
test
ljmp
sbb
jbe
outsb
jl
mov
pop
call
enter
dec
mov
dec
loope
call
insl
xor
lods
insb
sub
push
fcmovnu
call
ret
clc
rorl
and
jno
rol
add
adc
cld
push
dec
dec
lods
scas
rorb
push
cmp
loope
lahf
adc
push
xchg
adc
cli
pop
pop
movsl
test
xor
repnz
str
out
mov
mov
sub
inc
shl
push
sub
movb
mov
jecxz
iret
cwtl
adc
std
cmp
dec
jmp
bswap
push
insb
sub
and
jg
scas
in
jecxz
mov
and
clc
sub
icebp
outsl
fdivr
inc
adc
push
fcompl
sti
or
cmpsl
xchg
pop
popa
mov
sbbb
xor
out
cli
mov
jmp
sbb
rol
cmp
pushf
xor
loop
xchg
dec
ficomps
and
push
mov
in
mov
lds
or
emms
cmp
push
and
xchg
popa
xlat
pop
push
loop
jp
pop
adc
pop
test
pop
sub
outsb
shlb
sbb
xor
fwait
adc
jo
mov
cld
or
mov
inc
jno
mov
adc
mov
inc
sbb
mov
js
push
sarl
cli
push
and
fidivrs
gs
das
and
jo
jp
hlt
mov
movsb
ds
adc
pop
dec
mov
mov
ret
test
cmp
rclb
das
nop
jl
xor
inc
dec
loop
mov
or
mov
or
push
je
rcll
xchg
jl
push
loopne
adc
scas
adc
inc
mov
mov
lret
shll
dec
push
xor
pop
or
sahf
testb
and
stos
data16
lret
or
xchg
sbbl
scas
mov
repz
jae
inc
mov
push
or
sti
movsl
adc
mov
rcll
bound
lds
add
and
bound
pop
rorl
push
call
pop
loope
pusha
xor
sbb
add
aad
xor
push
sti
xchg
lea
cwtl
dec
out
cmc
fwait
pushf
xchg
lret
fcoml
into
fldenv
jle
test
sbb
jle
mov
cmpsb
bound
xor
test
adc
xchg
or
sbb
pop
rcll
ljmp
mov
and
lcall
push
pop
out
jns
movsl
popf
pmulhw
and
mov
popf
mov
mov
or
fistps
push
rcrl
scas
repz
pop
insb
jmp
add
rcrb
cmpsb
xor
push
push
inc
mov
daa
bound
cmp
adc
dec
jle
shll
or
into
push
jl
jmp
lret
mull
pop
lock
rcr
pusha
stc
xor
pop
jg
cli
mov
and
xchg
sub
stos
or
loopne
jl
inc
cmp
in
xchg
imul
xor
jne
ljmpw
frstor
out
mov
dec
stc
popf
pushf
mov
nop
jbe
mov
and
int
inc
cmp
setge
xchg
int3
das
scas
cmp
pop
stos
sub
push
adc
ljmp
mov
inc
iret
nop
ds
imul
cmp
sti
or
imul
dec
jl
jbe
scas
adc
cld
adc
movsl
add
push
pop
sbb
in
lods
lea
mov
push
std
fs
or
out
xchg
sub
std
ret
clc
dec
in
enter
adcl
jl
fs
loop
and
add
adc
das
adc
ret
mov
xor
dec
jecxz
pop
xchg
flds
pop
xchg
sub
in
cmc
addr16
sub
dec
stc
adcl
and
add
es
sub
mov
sbb
hlt
lret
xlat
mov
jae
fdivl
fdivs
and
in
push
into
adc
adc
inc
sbb
sub
add
repnz
fstps
pop
jne
jnp
cmpl
pusha
insl
pop
in
ljmp
mov
int3
enter
mov
jo
adc
xchg
inc
repz
addr16
je
sbb
push
in
jb
sub
ljmp
ret
add
shrb
les
icebp
pop
xchg
sbb
lret
ffree
sahf
shr
std
lods
cmp
dec
mov
lret
lret
xchg
fldl
out
test
mov
lds
and
pop
push
test
pop
sub
or
outsl
mov
ffreep
or
incb
and
or
fistl
jb
rcll
arpl
xor
sbb
xorb
loopne
testb
jp
je
add
mov
es
sub
jecxz
and
cmp
xchg
js
loope
mov
jl
jno
push
sbb
sbb
fsubrp
sarb
into
push
fistps
cmp
sbb
xchg
push
pop
loopne
in
je
jne
outsl
packssdw
and
test
push
dec
xchg
dec
or
cwtl
push
jno
outsl
fistpl
stc
add
leave
sub
gs
push
jbe
int
push
add
les
xchg
fstpt
pop
aaa
rcll
int
mov
repnz
cmp
pop
jnp
daa
sbb
fcoms
cmpsb
popa
cmp
lret
shrl
xchg
shl
int3
rcl
mov
pop
and
or
lea
xchg
add
xchg
xchg
jge
cli
add
inc
je
stos
sbb
inc
add
pop
or
fnsave
or
scas
ljmp
jbe
jbe
daa
test
cli
mov
mov
cmp
imul
insb
inc
or
xchg
ret
lea
mov
mov
and
mov
stc
inc
lcall
cli
or
mov
jecxz
and
xchg
fistl
test
popf
pop
sbb
sahf
push
loope
add
pop
sbb
mov
inc
push
lret
nop
repz
mov
push
sub
mov
inc
fistpll
xor
nop
loope
xchg
repz
data16
pop
mov
aam
unpckhps
test
and
mov
js
fstps
popf
and
xor
mov
sbb
out
imul
out
push
test
inc
imul
scas
cmp
in
jmp
aas
dec
in
mov
adc
icebp
sub
or
mov
adc
lods
stos
mov
adc
mov
push
repnz
stos
out
pop
mov
fsubr
fstl
pop
or
aam
les
outsl
stc
sarl
dec
sahf
jmp
sub
lock
inc
out
push
aaa
arpl
stos
push
pop
add
or
pop
push
out
cmp
cmpsb
arpl
fsubrs
int
loop
sub
xchg
jne
test
icebp
xchg
add
pop
cmpsl
popa
mov
mov
ja
xorb
inc
push
hlt
sahf
sub
pop
mov
inc
sbb
xlat
insl
jp
dec
push
test
cmp
sbb
and
push
push
pop
decl
fisubrl
cli
cmp
jns
adc
mov
mov
rorl
lret
shlb
lret
mov
out
or
inc
idivb
loopne
xchg
ret
mov
mov
scas
js
loope
movb
scas
aas
insb
adc
cwtl
sbbb
sbb
loop
dec
aas
aas
dec
push
inc
sub
xchg
pop
cli
cmp
mov
jg
add
out
fldl
mov
cmp
pop
imul
cmp
int
rorb
jae
aad
inc
mov
in
push
cmp
sub
mov
sbb
push
cltd
test
out
pushf
and
hlt
cmp
sub
or
daa
lods
mov
cmp
pop
xor
mov
cmpsb
scas
mov
movsb
jge
mov
outsl
or
adc
xchg
xchg
sub
into
jmp
scas
xor
hlt
inc
mov
sbb
ret
std
rcrl
out
ja
loopne
adc
jecxz
pop
pop
rorl
cmpsb
or
dec
jnp
movsl
inc
out
fistps
jge
std
dec
add
ljmp
push
pop
cld
inc
repz
lds
popa
xlat
sub
push
inc
jg
in
dec
xchg
pop
leave
popa
or
or
pop
leavew
or
xchg
out
fwait
lock
jbe
jno
cld
lock
dec
mov
inc
mov
into
icebp
in
loope
in
imul
sub
push
rcll
mov
sub
mov
imul
int
daa
dec
sbb
sub
aas
adc
and
iret
inc
arpl
push
cmp
sbb
decb
fsubr
outsl
mov
pop
sahf
mov
hlt
xchg
xchg
sbb
iret
les
dec
cmp
subb
mov
cli
imul
dec
pop
jl
lds
or
jp
fidivrs
mov
enter
or
les
inc
sbb
ljmp
es
and
mov
adc
daa
enter
adc
scas
lcall
cmpsb
mov
repz
incb
icebp
sbb
setbe
dec
leave
sub
arpl
dec
out
lock
ljmp
xchg
dec
ficoms
out
inc
xor
lahf
jmp
scas
scas
sbb
adc
popf
movsb
cwtl
out
out
or
push
inc
cmpsl
mov
std
cmp
pop
inc
stc
imul
arpl
xor
call
out
rorl
inc
dec
test
pop
cmp
dec
sub
xor
pop
adc
mov
mov
add
lea
inc
sub
fdivr
in
mov
pop
or
rol
jae
rorb
push
pop
jmp
inc
inc
lcall
and
jnp
in
cltd
out
dec
push
lds
ret
and
movsb
gs
jne
adc
cmpsb
or
je
pusha
nop
xchg
movsb
jmp
outsb
lock
pop
clc
mov
ret
mov
shrl
dec
cs
adc
aas
jbe
fisubs
push
mov
fbstp
cmp
cli
fwait
cmp
inc
or
jbe
bound
loope
push
stc
lret
rcr
mov
cmp
aam
into
repz
mov
movsb
imul
mov
sub
fmuls
mov
aam
imul
fs
xchg
jbe
adc
sub
pop
xor
push
shlb
js
sub
mov
lods
cmpb
out
mov
push
xor
fidivrl
and
mov
test
js
jbe
shl
ljmp
or
push
mov
dec
in
out
das
iret
popf
test
mov
cmp
divb
pop
dec
mov
iret
fdivrp
xchg
test
lods
push
push
fsubr
xchg
ffree
out
or
mov
outsb
push
rol
movsl
ja
adc
out
dec
and
xchg
jge
aam
dec
scas
cmc
mov
es
pop
out
mov
push
cwtl
addr16
sbb
out
stc
repnz
rcrb
inc
jge
push
ds
or
loopne
xchg
mov
in
test
in
xchg
push
push
jecxz
push
xrelease
enter
mov
xchg
in
mov
aas
push
sub
xor
fisttpll
and
or
mov
cmpsb
mov
test
cmc
xchg
pop
push
inc
add
mov
cmpsl
jg
mov
dec
push
mov
sar
pop
je
xchg
loop
fistpll
cld
pop
xchg
testb
pop
cli
sub
pop
fidivl
fnstenv
das
mov
popf
arpl
sub
jle
in
and
mov
jl
test
rorb
dec
sbb
mov
lahf
and
addb
jnp
or
cwtl
jecxz
xchg
loopne
pop
push
movsb
xor
sub
cmpsl
mov
pop
add
cmp
xchg
enter
or
into
rcll
mov
in
and
push
stos
inc
and
jno
inc
outsb
pop
sarb
dec
xor
test
fstpl
mov
clc
cmc
push
and
and
cltd
push
adc
hlt
mov
into
testb
mov
mov
fstpl
dec
add
mov
das
xchg
jnp
pusha
dec
scas
jne
addr16
pusha
xor
pop
xlat
jnp
push
dec
sahf
shll
jo
sub
cmp
or
mov
mov
int3
sahf
mov
pop
push
fnsave
cmp
ds
sub
push
xor
negb
scas
pop
sbb
stos
out
jno
lret
xor
jns
stc
dec
scas
push
movsl
sahf
adc
pop
pushf
inc
cmp
xchg
mov
push
dec
ljmp
inc
and
pusha
mov
out
outsl
cmc
rcll
adc
mov
jle
push
push
xor
push
in
ret
out
xor
xor
push
hlt
fmuls
adc
xchg
cmpsb
dec
mov
test
mov
in
pop
loope
pop
arpl
adc
mov
cmp
out
inc
xor
pop
mov
in
shl
clc
je
sub
or
inc
mov
or
shll
imul
fnstsw
and
stc
and
loopne
xchg
or
dec
sub
adc
test
outsl
movsb
pushl
idivb
shlb
sbb
dec
clc
xchg
cmc
insb
xchg
insb
push
fwait
test
and
sub
lea
inc
xchg
andl
xchg
push
xorl
cmpsl
add
mov
inc
je
inc
mov
mov
cmc
lret
jp
std
dec
nop
adc
rclb
jp
mov
dec
in
add
lock
sbbb
jno
leave
push
jge
push
xchg
cli
and
mov
cli
mov
int
out
sub
nop
insb
stos
push
in
push
enter
addr16
icebp
jle
cwtl
divl
push
out
sti
push
mov
lds
orl
adc
sbb
inc
mov
stos
inc
cld
popa
jb
fimuls
add
and
inc
mov
mov
adc
data16
fwait
outsl
and
xchg
ficomps
and
pop
cmp
int
mov
fldt
cmpsb
fdivr
jg
out
push
xchg
xor
addb
push
sbb
sbbb
xchg
cs
jle
std
mov
jbe
adc
aam
xchg
mov
xor
dec
dec
xchg
stc
cmp
lods
xlat
popa
mov
mov
xor
call
cmp
out
movsl
loop
hlt
sbb
lret
nop
mov
out
loope
cmp
cli
lret
mov
xor
jbe
inc
adc
test
fnstcw
adcb
adc
lret
fbld
rorl
jae
add
inc
xchg
inc
cmp
mov
mov
xor
and
adc
in
pop
jae
mov
movsl
in
mov
sub
adc
adc
mov
lahf
fsubs
or
arpl
push
mov
xor
int3
into
lret
les
sbb
ds
cmp
push
push
pop
aad
loop
les
movsb
std
jnp
push
cmp
xchg
into
mov
add
lahf
xchg
js
sub
pop
xorl
mov
stc
insl
sbb
mov
mov
ja
imul
rcrb
ds
mov
fwait
push
mov
clc
dec
cmpsl
cmpl
lret
push
ret
pop
sti
loop
cwtl
ss
insl
adc
cmp
jle
xchg
cmp
shl
bound
lds
cmpsl
iret
sbb
jecxz
dec
pop
lcall
inc
push
xor
cmc
ret
or
sbb
int3
sub
out
sub
addr16
adc
test
stc
test
cmp
mov
mov
xchg
iret
inc
mov
nop
push
and
cwtl
lea
fidivrl
in
pop
nop
cli
fisubs
pop
les
xchg
ret
dec
mov
jae
pop
nop
mov
dec
add
jg
cmp
jge
lock
push
or
daa
ja
or
inc
movsb
scas
mov
sub
das
pop
std
cmpl
fistpl
in
out
push
or
jle
add
in
jg
jnp
adc
out
leave
push
mov
mov
add
mov
add
mov
jns
mov
pop
or
push
sbb
sbb
sahf
dec
jno
xorl
es
fwait
scas
jmp
cmp
sub
cmc
pop
jns
jmp
jmp
jecxz
ljmp
adc
outsl
lret
jle
inc
mov
cmp
incb
stos
enter
dec
sbb
rcll
jo
push
leave
xchg
andb
cmc
nop
cmpsb
fists
and
or
inc
arpl
loopne
je
cmp
dec
push
fistpl
lret
push
out
push
icebp
ljmp
rcll
movsl
daa
mov
rolb
aad
lcall
pop
enter
subb
mov
ss
imul
mov
or
pop
push
pop
sbb
imul
jo
jo
xchg
mull
test
cmp
adc
pop
dec
sub
or
imul
pushf
imul
sahf
adc
pop
add
wbinvd
cmpsl
cmp
pusha
or
je
xchg
out
pop
flds
ja
outsl
jp
into
mov
ja
stos
push
cli
jecxz
dec
daa
cmp
cld
add
jbe
jb
dec
jo
popa
adc
sbb
mov
xor
lcall
ja
ret
cmc
xchg
out
push
scas
sti
add
jns
movsb
call
call
sbb
mov
ss
xor
add
add
popf
xchg
fdivs
push
movsl
jae
pop
or
loop
enter
pop
into
lea
xchg
push
pop
sbb
add
inc
xchg
and
stos
ljmp
js
or
sub
xor
mov
xchg
mov
aad
std
dec
mov
pop
and
jb
stos
jmp
call
sub
mov
sbb
dec
or
push
and
sbb
scas
mov
fldcw
cmp
pop
jno
fldenv
sub
mov
adcb
hlt
xor
out
fadds
and
int3
mov
push
lret
jae
push
mov
pop
mov
and
inc
fistpll
test
jle
mov
lock
enter
xlat
dec
shlb
fldt
sub
add
mov
mov
adc
sub
push
pop
hlt
ds
loop
mov
imul
stos
inc
repnz
out
scas
cli
or
aaa
das
cmpsb
and
fidivrl
dec
inc
sbb
and
or
sub
lock
cmp
ret
insb
xlat
in
mov
pop
lods
fistpl
lea
sub
inc
jecxz
cwtl
push
mov
add
dec
xor
xchg
gs
dec
adc
mov
sti
mov
push
adc
pusha
cmc
in
xor
in
cwtl
ret
inc
mov
pop
xorl
push
mov
xchg
sbb
pop
test
xchg
neg
repz
movsb
scas
xlat
addr16
adc
aam
mov
mov
cmp
leave
jmp
inc
jmp
mov
shl
dec
je
shll
icebp
rcl
sub
cmp
mov
add
cld
or
jno
sahf
lock
sbb
lcall
pusha
gs
add
jecxz
dec
lods
push
xchg
loop
fistpl
dec
fs
push
pop
bound
aam
jecxz
addr16
inc
shr
popa
fs
mov
sbb
in
fmull
cmpl
rcl
pop
lret
arpl
jg
vpcomud
popf
adc
mov
or
xchg
and
jo
gs
pop
or
mov
ja
movsl
adc
xchg
ror
icebp
or
or
inc
aas
push
mov
cmovge
pusha
nop
pop
dec
loopne
xor
and
aaa
jnp
xlat
adc
adc
pop
push
cmp
mov
push
sub
ss
xor
push
cmp
xchg
testb
xchg
dec
gs
jmp
inc
pop
dec
fistpl
lret
imul
je
fists
and
inc
or
inc
mov
lock
lahf
xchg
xchg
adc
adc
add
jo
gs
jge
adc
notl
imul
add
out
loop
clc
sbb
les
push
icebp
popf
sub
mov
add
cmp
dec
or
pop
sti
and
lret
adc
repz
cmpsb
test
inc
clc
shll
push
mov
test
ja
fcmovne
lcall
out
mov
push
addb
sbb
scas
stos
call
movsb
fistl
ja
clc
jae
pop
sub
cs
pop
push
adc
nop
scas
adcl
and
ja
add
mov
popf
mov
cs
ljmp
call
mov
lea
test
pushf
lods
dec
jnp
jne
and
xor
lret
cltd
hlt
sbb
cmc
popl
shll
and
push
push
jns
inc
lock
mov
pusha
sbb
mov
xchg
daa
int
jno
inc
push
movsb
jnp
xchg
add
mov
ret
push
push
mov
mov
inc
ficompl
mov
out
stos
imull
push
push
cmc
mov
sar
mov
es
cmovb
and
das
out
and
pop
pop
hlt
pop
hlt
or
into
sti
or
mov
pop
adc
push
jg
or
cmpsb
jb
push
pop
mov
call
shll
mov
std
or
test
arpl
flds
push
loope
cs
cs
cltd
push
or
and
ffreep
testb
and
test
jmp
xor
fisttpl
mov
int3
inc
andl
push
sub
clc
stos
mov
movsl
dec
das
pop
mov
dec
cmp
jl
jnp
fnstsw
xor
push
call
popf
jl
fsub
insl
call
icebp
adc
xor
adc
inc
pop
stos
sub
adc
fs
push
test
out
or
mov
or
fcmovbe
dec
test
jmp
jecxz
or
mov
ds
hlt
push
dec
shlb
lds
int3
mov
aad
dec
insb
and
stos
rcrb
push
sub
bswap
xchg
pop
add
dec
jns
inc
clc
mov
ja
adc
test
pop
ret
pop
xchg
pushf
loope
icebp
mov
add
stos
sbb
dec
inc
cld
xchg
mov
push
shll
int3
rcl
push
xor
cmp
mov
jecxz
out
sbb
rcrb
jb
ds
adc
mov
fsts
cmp
es
jle
test
idivl
mov
ja
pop
fdivr
ja
rorl
mov
loop
loope
shll
es
and
push
cmpsl
mov
add
inc
aaa
sbb
push
int3
lea
adc
sbbb
lock
sbb
mov
mov
push
int
xchg
jecxz
arpl
adc
imul
fisttps
dec
mov
xorb
mov
dec
cs
jp
push
or
rcll
jns
mov
jae
testb
lds
pop
mov
jp
insl
mov
add
push
cltd
push
add
stc
pop
jle
incb
xor
sub
mov
adc
into
pop
mov
aaa
fdivs
rolb
jge
adc
popf
adc
push
or
mov
fstl
rolb
mov
sbb
js
add
in
cld
push
push
fs
adc
mov
pop
mov
fsubrl
test
pop
loop
lahf
adc
iret
stos
mov
fildll
addb
cld
adc
pop
sub
dec
shrl
xor
in
jo
mov
test
jmp
movsb
stc
xchg
cld
jg
outsl
or
add
pushf
xchg
leave
popf
xchg
pop
mov
push
out
fidivl
push
in
movq
mov
adc
movsl
movsb
test
xor
repz
subl
jbe
push
jmp
ror
mov
test
addl
lret
iret
jo
push
xor
pop
lret
jno
jle
lret
add
mov
push
and
pushl
in
cltd
push
dec
cmp
jp
shll
inc
xchg
xchg
adc
mov
stos
sbb
notb
push
dec
push
adcb
out
push
mov
lret
es
test
push
fldz
jno
add
arpl
icebp
pop
lods
sbb
sub
mov
push
inc
aas
pop
sbb
push
pushf
test
pop
dec
mov
or
cmp
sbb
leave
xor
lods
sub
into
and
xchg
addr16
pop
jne
scas
mov
arpl
fs
mov
inc
mov
mov
fcomps
cmpsb
pop
xlat
inc
pusha
cmp
out
out
xor
jecxz
adcb
insl
jg
scas
lcall
xor
pop
xchg
int3
and
dec
addr16
jnp
movl
rclb
xchg
les
scas
repz
cmc
mov
dec
mov
dec
dec
mov
mov
jp
hlt
sahf
addr16
xor
add
mov
jne
mov
and
stos
icebp
add
fldcw
test
adc
cld
movaps
push
fsts
adc
inc
mov
data16
stos
jge
mov
shll
or
add
std
out
ret
inc
xor
push
mov
in
into
pop
xor
cmp
xchg
sbb
sub
xchg
jae
bound
and
loopne
jae
xorb
iret
cs
xor
daa
inc
or
xchg
add
sub
sahf
jns
xchg
dec
ffree
mov
outsb
out
or
cmp
inc
adc
mov
push
out
cmp
push
cmp
jae
jmp
outsl
cmp
adc
stos
xchg
mov
and
mov
dec
test
lea
je
lea
lret
adc
dec
and
lock
push
xor
mov
jnp
mov
cmp
mov
xor
cmp
push
jae
jle
sub
fistpll
pop
aam
xor
mov
or
jo
in
inc
xor
xchg
icebp
and
ret
mov
jbe
testb
mov
pop
dec
outsl
jb
xchg
ror
adc
cmp
mov
mov
arpl
fcmove
adc
cmpsl
push
push
pop
jne
call
loop
mov
pop
aad
jno
mov
mov
rcrl
jg
mov
sbb
jle
js
mov
jmp
push
shll
push
mov
es
jle
cmp
pop
out
shl
iret
xchg
xchg
adc
lods
pushf
cmpsl
push
in
hlt
cmp
sbb
inc
popl
push
or
in
test
pop
cmc
sahf
jl
xchg
inc
add
inc
fldenv
sbb
xchg
ret
mov
push
cmc
or
icebp
cld
mov
dec
bound
or
cmpps
push
pusha
jnp
imull
dec
test
shrb
cmp
xchg
popa
xchg
rorl
rol
push
data16
sub
loopne
inc
imul
ds
or
test
mov
cmp
cmovb
cmp
lret
cmpb
xchg
enter
xchg
or
cmp
orl
push
push
pushf
xchg
push
lock
test
fsubl
popa
xchg
jns
mov
mov
xchg
jg
fmulp
inc
insb
mov
pushf
int
sub
pop
lods
je
fsubrl
sub
adc
jo
pop
insb
sbb
xor
inc
jb
xor
jge
xchg
mov
jge
jns
sub
xchg
jbe
mov
dec
xlat
pop
cli
flds
mov
dec
mov
jno
xor
sbb
fwait
subb
dec
pushf
adc
xchg
lds
push
icebp
inc
jnp
push
mov
xchg
pushf
outsb
and
shlb
lret
sbb
adc
xchg
push
xchg
out
lea
dec
or
or
mov
mov
pop
push
jno
jmp
loope
adc
push
and
enter
push
cmc
insb
push
and
repz
popf
adc
out
jns
lods
push
hlt
fisubl
sbb
cwtl
rcll
lcall
mov
xor
js,pt
lcall
scas
out
outsb
add
jo
cmp
push
mov
mov
sbb
mov
jbe
loop
sub
push
ja
adc
jo
daa
mov
cmp
add
pop
pop
adc
or
into
js
icebp
addr16
pushf
es
lret
mov
jg
js
subl
or
enter
idivb
mov
and
jne
mov
cmp
adc
adc
popa
mov
dec
inc
jmp
filds
jp
addb
ret
aam
inc
cmc
std
and
pushf
add
jmp
js
test
jl
xor
fwait
cld
std
mov
fxch
rorb
mov
shlb
cmc
sub
mov
mov
xchg
fcomp
push
ljmp
push
dec
push
rol
xchg
out
mov
push
jge
data16
pop
push
leave
stos
sub
cmpl
ret
shrd
push
in
cmp
dec
pop
adc
xchg
cmp
pop
stc
sub
lcall
adc
push
sub
ja
and
nop
roll
push
or
popf
ficoml
hlt
incb
and
sub
popa
mov
push
and
aad
jne
repnz
std
repz
scas
push
in
ret
cmp
shlb
inc
cs
push
mov
jl
mov
mov
xor
push
pop
out
cmp
popa
jmp
inc
cmpsb
sbb
pop
iret
jle
scas
cmpsb
into
iret
push
mov
jmp
push
insb
push
xchg
mov
call
out
pop
mov
dec
jmp
loop
inc
mov
xchg
out
sbb
fsubrs
xchg
inc
stos
loopne
mov
das
push
loopne
loop
imul
or
lcall
je
cmc
imul
xor
add
int3
sbb
mov
push
movq
dec
fucomp
add
into
mov
adc
mov
dec
pop
cs
mul
pop
mov
xor
xor
lock
xor
pop
xor
inc
jg
or
daa
pop
xchg
push
sarl
jge
sti
sbb
jbe
mov
mov
outsl
add
mov
mov
out
scas
imul
daa
inc
cmc
adc
repnz
sub
aad
xor
adc
ljmp
lcall
xchg
cmc
pop
aas
pushf
pop
cmp
cmp
sub
mov
sbb
fwait
jge
ljmp
cltd
cltd
jle
mov
std
and
aaa
dec
lea
call
jp
pop
scas
insl
out
jg
test
es
add
data16
lcall
mov
add
mov
ret
mov
andb
outsb
mov
cmc
in
aam
jp
dec
mov
or
lods
mul
mov
inc
fcoml
mov
pushl
jmp
out
fsubl
ffree
mov
adc
in
ja
inc
cmp
test
dec
rcrl
loopne,pt
fistps
fs
pop
pop
dec
daa
out
mov
jp
jge
pop
mov
out
sub
ficomps
inc
jl
das
pop
xchg
jnp
sti
fcmovnbe
lcall
cmp
cmpsl
add
ss
mov
sub
push
inc
mov
xchg
pop
mov
lock
decl
inc
js
inc
lods
adc
mov
add
dec
movsl
adc
pop
or
sahf
xor
sub
push
decl
in
sti
inc
lock
enter
mov
xchg
lret
fbstp
mov
dec
xor
in
ficomps
xchg
sar
mov
pop
jle
push
xchg
pop
push
gs
dec
push
jg
out
ss
pop
dec
jge
xchg
adc
dec
sbb
sbb
xchg
call
pushf
addl
ljmp
mull
ret
rdtsc
bound
lret
stos
rorb
mov
jp
jbe
les
mov
sub
jns
mov
insl
xchg
lea
ja
lret
cld
sbb
push
fdivs
repz
and
add
push
ret
or
push
stc
bound
andb
fwait
ja
push
add
mov
add
shr
lea
adc
push
mov
adc
imul
cmp
dec
ljmp
icebp
and
sbb
cmpsb
mov
bound
ret
xor
loopne
mov
das
rorb
in
std
push
add
push
insl
insl
adc
pop
mov
and
inc
int3
lock
pop
mov
dec
or
push
cmp
sub
divb
and
push
mov
add
arpl
addr16
cmp
mov
movsl
in
movl
nop
idivb
adc
hlt
fnstenv
pop
gs
pop
lods
movsb
gs
pop
add
jns
mov
into
outsl
dec
jns
fldt
fwait
mov
mov
inc
pop
or
and
xchg
lahf
testl
in
pop
jns
pop
cs
cmp
popa
cld
dec
mov
inc
sbb
mov
rcll
arpl
mov
jne
adc
jne
fstps
imul
xchg
and
mov
mov
out
adc
arpl
dec
aam
add
xor
push
push
test
enter
ret
dec
pop
inc
mov
mov
or
add
test
imul
fs
inc
mov
jne
lods
xchg
lret
mov
int
and
xor
nop
jle
sub
push
mov
insb
add
xchg
loope
and
rcr
adc
cwtl
cltd
pop
sti
jge
pop
pushl
mov
add
cmp
filds
inc
xchg
int
adc
in
jmp
lcall
jmp
cmp
aaa
loopne
xor
test
dec
mov
shrb
inc
addr16
test
push
dec
sarl
inc
push
sbb
or
push
cmp
mov
lds
test
push
stos
addr16
addr16
push
popa
jnp
adc
push
adcl
push
mov
inc
insl
loopne
sbb
mov
imul
int3
aas
lods
sub
push
iret
fnsave
add
mov
cmp
and
dec
ret
cld
ljmp
sbb
sbb
mov
and
xorl
push
bound
pusha
out
and
cmp
ja
sti
lods
lea
pop
arpl
daa
cmp
or
mov
push
in
jbe
pushf
xor
sbb
cmp
and
cwtl
fwait
bnd
repz
insb
dec
pop
cmp
in
push
push
mov
dec
movsl
clc
pop
mov
jg
loope
dec
es
iret
and
imul
inc
lea
into
movd
xorb
ss
cmpsl
push
jae
movsl
int
mov
rorl
push
les
xchg
test
lcall
xchg
into
sti
ret
xor
dec
mov
mov
xchg
mov
cmp
push
loope
dec
xor
cs
push
push
daa
adc
stos
loopne
mov
inc
inc
sti
xchg
or
dec
daa
mov
xchg
add
adc
mov
push
inc
cmc
xchg
incb
in
test
stc
cmp
push
jl
mov
arpl
hlt
jns
add
dec
push
lahf
lahf
aas
scas
vprotb
dec
sahf
add
add
mov
sti
cmp
out
pop
sbb
sub
jne
xor
sbb
stc
sbb
into
outsb
cmp
nop
mov
test
lret
outsl
lret
outsb
cmpsb
cs
pop
mov
xor
cmp
das
in
test
adc
jl
les
push
movsl
jl
fldenv
mov
leave
mov
fdivrl
ds
jbe
movsb
push
jae
cmc
pushf
scas
into
push
not
nop
cmp
jae
bound
sub
xchg
ljmp
test
mov
mov
pop
mov
mov
ds
in
lods
cmp
or
int
mov
cmp
xchg
push
test
out
cs
pop
imul
jno
adc
pop
dec
mov
fnsave
mov
mov
pop
mov
push
lret
push
dec
mov
xchg
aaa
inc
out
push
nop
stos
fisttpll
cld
jecxz
inc
and
xor
ficompl
sbb
push
fdivs
xchg
dec
scas
pusha
push
stc
fidivs
lcall
jp
daa
inc
aam
mov
sub
idivl
arpl
pop
sahf
push
cltd
mov
inc
pop
dec
loope
out
jg
ds
rolb
in
cltd
je
jg
and
cli
jg
cwtl
cmc
push
lret
out
subb
xchg
xlat
mov
popa
pop
inc
adc
jmp
jle
push
xchg
es
mov
add
fwait
pusha
lods
lahf
adc
pop
clc
ljmp
jnp
and
lock
push
xorl
or
mov
pop
js
pop
inc
add
into
iret
call
jae
and
sbb
cmp
pop
and
xchg
jns
data16
js
mov
lret
xchg
pop
sub
mov
fldl
outsl
fwait
xchg
loope
jle
dec
jg
cltd
mov
bsf
out
adc
outsb
push
jns
sub
insb
mov
cmp
je
inc
les
ds
hlt
stos
aad
js
jo
jno
xor
inc
stos
mov
lds
lock
js
push
pop
add
bound
test
sub
mov
jae
mov
xchg
shrb
shrl
adc
pop
sbb
lock
lock
out
mov
cmp
mov
test
push
jp
dec
stc
add
adc
enter
les
fidivrl
mov
jns
mov
cltd
loopne
je
jmp
fisubl
lods
in
xor
in
inc
sbb
add
jnp
and
jecxz
sahf
pop
sbb
loop
sub
fmul
xchg
push
cmp
and
lock
cmpsb
dec
mov
inc
shld
hlt
mov
out
mov
pushf
adc
pop
rcr
ret
mov
mov
iret
lock
and
inc
inc
test
and
cmc
in
ret
popa
ss
imull
pop
sahf
flds
icebp
mov
jmp
jae
mov
jo
dec
pop
xchg
mov
shl
pop
fcmovnu
lcall
or
adc
es
pop
push
adc
mov
xchg
push
mov
ds
cmc
adc
aam
xor
cli
add
testl
lods
xor
push
movsb
les
popa
cmc
les
jle
lds
fists
or
repnz
mov
testl
or
or
out
sbb
mov
sbb
xchg
in
in
jecxz
sub
push
scas
push
jb
sti
push
push
jo
sbb
cmc
xor
loope
aaa
std
lret
push
pushf
push
scas
in
int
or
xchg
aas
popa
ljmp
xchg
stc
lods
mov
jecxz
pop
add
jbe
nop
imul
movsb
sbb
sbb
fstpl
test
dec
cld
push
or
test
jecxz
cs
insl
sahf
mov
xchg
cwtl
cmp
cmpsl
stos
fcompl
iret
xchg
pop
lahf
inc
pusha
sbb
scas
xor
and
clc
cmp
adc
push
out
dec
je
fwait
dec
aas
dec
ljmp
xlat
rcl
adcl
mov
sbb
iret
cmp
and
fmull
in
fidivrl
int
lea
fs
insl
xor
ljmp
clc
cmpsl
in
xor
faddl
pop
movsb
insl
int
inc
in
jae
pusha
cmp
hlt
xlat
mov
mov
cmp
call
sbb
xor
lock
aaa
scas
mov
lea
inc
roll
aas
sub
sarl
push
ss
dec
out
jge
add
jmp
xor
or
out
out
adc
jmp
rorb
mov
jl
sub
aam
mov
inc
les
mov
movsl
fwait
adc
xor
or
gs
and
stc
or
ss
in
int
sarl
mov
dec
iret
fwait
jge
pushf
xchg
mov
adcb
cli
scas
dec
or
cwtl
jne
mov
push
add
mov
jle
mov
pop
sahf
jg
mov
ficomps
and
mov
fstps
inc
sub
inc
mov
repz
shlb
bound
xor
shll
mov
in
cmp
cli
leave
movsb
shll
mov
loope
pop
loope
sbbl
or
pop
add
xlat
sub
ljmp
sbb
lock
and
int3
sub
and
in
nop
outsl
cmp
xchg
and
pop
mov
test
push
sysenter
push
lods
mov
stc
test
mov
sub
pop
jne
inc
scas
call
or
enter
xor
aas
xchg
test
repnz
outsb
jge
cmp
mov
int
les
lret
int
notb
out
push
jae
jnp
sahf
add
notb
fidivl
divl
loopne
jp
dec
or
mov
addl
dec
adc
shlb
int
xor
mov
sbb
stos
xchg
xchg
aad
neg
jae
mov
shll
dec
jmp
in
mov
dec
or
iret
insl
jne
dec
fdivs
mov
imul
pop
std
xchg
sub
inc
pop
out
pop
push
add
in
jle
adc
loopne
std
movsb
mov
loop
pushf
dec
dec
jecxz
cmpxchg
fildl
arpl
mov
mov
xchg
adc
jns
call
stos
push
cmp
mov
fcom
scas
jmp
sub
mov
jecxz
aas
or
stc
jno
dec
cmp
loop
mov
mov
dec
inc
dec
icebp
test
mov
xor
xchg
xchg
lcall
and
addr16
jl
cmpsl
push
add
aad
mov
mov
mov
clc
ja
mov
ret
aaa
test
mov
inc
sbb
xchg
out
jp
arpl
cmp
fstpl
sub
sub
mov
jnp
mov
loope
jg,pt
mov
adcb
in
pop
in
xchg
das
inc
mov
xlat
fs
or
fdivr
push
pop
push
lret
sbb
push
mov
pusha
push
js
cmpsb
daa
mov
fadd
ljmp
cmc
push
jne
fwait
cmp
lret
add
push
mov
testl
inc
cmp
push
nop
movsl
int
mov
push
sub
push
xor
loop
rolb
and
inc
xor
fucomi
jne
or
jns
aaa
ljmp
mov
or
xchg
fwait
scas
and
lret
mov
sbb
fcoml
jmp
jle
and
fidivl
adcl
pop
pop
dec
mov
fiadds
les
jns
pop
sbb
sub
shld
adc
mov
repz
fidivs
xor
push
lret
xor
sub
ds
cmp
add
loop
fisttpl
xchg
jge
inc
mov
subl
je
cmpl
mov
add
loopne
addl
out
call
scas
pop
jno
mov
ret
mov
addr16
outsl
mov
lcall
push
jnp
testl
or
cmp
lea
je
repz
aam
dec
add
cmp
and
cmp
in
out
xchg
cltd
shl
aaa
test
jp
aas
test
or
xlat
push
movsl
xchg
loop
das
pop
mov
imul
lds
gs
mov
sub
sbb
scas
arpl
adc
xlat
adc
fbld
and
jl
int
fldenv
pop
sub
test
pop
insl
inc
mov
push
rcl
setp
inc
dec
jp
sbb
andb
sbb
add
rol
je
pushf
cmp
cmp
cwtl
repnz
rcrl
cmp
lods
sub
mov
mov
pop
out
cli
push
scas
xchg
add
xchg
test
nop
adc
adc
pop
pop
adc
sub
sbb
pop
jecxz
jl
cmpsl
inc
jle
xlat
ret
movsl
or
sti
stos
shrl
adc
mov
jle
lret
jp
lods
psubsw
popf
gs
push
pop
das
int3
outsl
pop
sub
lock
ficomps
cmpsl
sbb
dec
push
inc
add
insl
test
cld
in
xor
dec
pushw
and
shll
out
mov
arpl
in
neg
cld
xor
ja
xchg
cmp
popf
out
add
push
dec
mov
inc
mov
sti
add
add
aam
jmp
push
cmp
xchg
or
sub
lds
test
decb
mov
rclb
mov
sub
cs
aam
cli
push
test
push
mov
pop
adcl
sub
push
scas
add
shrb
nop
pop
and
outsl
jne
test
mov
inc
cmc
push
pushf
dec
popf
movsb
mov
test
or
lods
fisubl
enter
pop
shufps
fldcw
in
lahf
sbb
inc
stos
inc
adc
filds
sbbl
in
fmuls
lods
aaa
mov
out
sub
in
add
cli
dec
and
int
inc
sbb
pop
mov
inc
and
jnp
cmpsl
pop
dec
jbe
cwtl
xchg
mov
mov
mov
xchg
gs
or
cmp
dec
push
mov
imul
popa
cmp
rorl
add
sub
jge
add
sbb
lret
movsl
out
dec
jns
push
cmovo
shll
xor
popa
push
rcrl
mov
jo
adc
call
stc
test
inc
or
addb
ljmp
inc
dec
sub
or
insb
dec
frstor
push
jecxz
ficoml
xor
out
stos
es
and
mov
add
push
cmp
push
push
sbb
mov
shl
stos
mov
xlat
stos
jnp
leave
mov
sbb
pushf
in
pop
inc
mov
mov
jno
lock
mov
xor
lock
and
fnstenv
sarl
aam
test
loopne
push
or
icebp
mov
xchg
xchg
pushf
mov
fcom
xorl
push
popf
dec
xor
int
jecxz
dec
sbb
pusha
mov
fstps
and
inc
inc
aad
jl
or
jo
mov
aad
stc
sti
scas
jg
mov
mov
cltd
xchg
out
jne
mov
sbb
popf
mov
mov
mov
mov
inc
enter
paddw
js
pop
dec
int
lods
fiadds
push
test
add
xchg
fsubrs
ljmp
testl
jl
xchg
sub
add
push
leave
jmp
sti
or
enter
push
xor
out
add
les
xor
test
sbb
sub
or
insb
sar
dec
lock
lret
in
mov
fiaddl
push
out
mov
dec
mov
pusha
mov
testb
jne
sub
cmp
sub
test
into
and
clc
sbb
jmp
push
out
adc
ret
xchg
mov
pop
sti
cld
rcl
dec
and
push
cltd
shll
push
stos
or
push
and
ds
cmpsb
out
dec
jp
rol
fcoml
mov
jb
jb
mov
sub
fsubrs
mov
arpl
xlat
adc
add
xacquire
jl
jecxz
or
inc
in
and
add
add
aas
mov
fwait
xchg
sub
repz
cld
orb
adc
sbb
cmpl
and
mov
fs
push
pop
add
int
fnstenv
fwait
inc
or
pop
dec
scas
add
jcxz
push
outsl
pop
mov
inc
adc
jnp
ret
cmp
shl
imul
lahf
pusha
adc
push
mov
cld
jne
pop
fwait
pusha
push
daa
inc
jecxz
push
cmp
stos
lret
pop
cwtl
cmpsl
adc
imul
pop
cs
jp
mov
cmp
add
bound
mov
mov
adc
les
push
loope
scas
inc
test
repz
cmp
dec
pop
jp
loopne
aad
pusha
push
in
mov
push
inc
xor
pop
into
scas
movsl
mov
popa
dec
xchg
xchg
jno
mov
pop
loope
dec
iret
sbb
div
dec
outsb
cld
nop
fmul
mov
xchg
sub
jg
xor
mov
bound
int
sub
mov
cwtl
mov
jbe
mov
fdivs
ret
repz
add
xor
xchg
fcmovne
push
ja
test
push
or
insb
popf
repz
mov
es
jo
cmp
insb
scas
pop
mov
sbb
clc
xor
inc
out
push
jp
mov
dec
pop
gs
sahf
inc
or
leave
dec
mov
jecxz
mov
cld
sbb
jmp
cwtl
jae
inc
popa
ja
aaa
in
xor
sbb
xchg
push
loopne
mov
stos
pop
push
out
mov
fmuls
push
in
aaa
ds
mov
rcll
aaa
fisubs
sub
aam
lds
mov
and
es
cltd
jo
pop
xor
clc
cmpb
pusha
jo
fsubr
mov
or
les
cltd
dec
lods
mov
movsb
addb
adcb
aas
pop
das
loopne
dec
inc
dec
insl
xchg
mov
mov
push
jp
inc
mov
ffree
lcall
fistl
fcomi
xchg
pop
xchg
lods
or
aam
add
movsb
sub
int3
enter
mov
shl
jne
xor
les
stos
xor
or
push
fnstcw
cmp
xor
and
pop
cs
xchg
cmp
pop
push
xchg
das
sbb
mov
in
imul
roll
pop
add
in
sub
or
sbb
push
xchg
jnp
jb
xchg
repnz
test
test
insl
xor
push
jb
mov
or
outsl
sub
pop
insb
loopne
push
and
inc
rcr
imul
pop
mov
subb
sti
enter
xor
adc
sbb
push
push
stos
sub
fwait
clc
fnsave
jnp
aam
dec
lahf
into
xchg
or
sub
popf
gs
repz
pop
repz
add
cmp
pop
enter
ret
aaa
xor
cmpsl
data16
test
pop
jbe
sti
lods
call
push
nop
je
sbbl
xor
mov
aad
js
jb
mul
inc
nop
add
mov
dec
into
cmc
hlt
mov
xchg
daa
pop
push
inc
xor
mov
cmp
call
push
stc
push
dec
jg
xchg
in
sbb
push
cmpsl
insb
add
pop
insl
std
mov
lock
inc
cmp
and
pop
ja
jo
loop
dec
imul
sbb
push
cld
cmp
lock
mov
mov
xchg
jae
arpl
pop
jae
pop
shrb
vpshufhw
sbb
jno
adc
cmpb
push
push
and
jb
cmpsb
cmp
pop
dec
fmull
ret
adc
mov
scas
sahf
adc
push
dec
dec
add
movsl
out
adc
mov
int3
push
in
push
adc
adc
xchg
idivl
and
gs
pop
mov
xchg
inc
cmpsb
mull
repnz
pop
jp
in
iret
xlat
ret
xchg
jno
sbb
enter
outsl
push
movlps
int
xchg
push
clc
and
dec
aad
scas
dec
push
popa
std
pop
loop
mov
mov
jl
push
mov
push
push
mov
sub
mov
aaa
or
inc
cli
push
int
or
dec
shrb
mov
stc
je
xorb
mov
ljmp
das
daa
cmp
mov
inc
inc
push
nop
pop
lock
or
lcall
lcall
cli
push
movsl
jg
into
add
add
shlb
sarb
sub
pop
push
push
test
cmp
repnz
test
push
lret
add
test
lret
mov
xor
jecxz
cmp
out
call
xlat
mov
mov
mov
cmc
jecxz
inc
jp
jnp
scas
sub
es
push
cmc
in
or
cwtl
dec
push
andl
sbb
add
cli
pop
jae
in
lahf
inc
add
ss
mov
lods
push
push
or
mov
adc
loope
les
sti
or
inc
lods
push
fiaddl
cld
push
ja
pushf
into
add
das
xor
popf
repnz
sbb
sub
and
pusha
sub
fsts
jge
mov
lret
fsubr
stos
iret
daa
roll
adc
cmpsb
dec
jb
sbb
fisttpl
stos
mov
shrl
jae
dec
lcall
fsts
inc
push
mov
mov
imull
sub
cltd
in
and
aaa
sbb
jle
jl
sub
adc
pop
jg
sbb
pop
lahf
arpl
dec
aad
mov
filds
sbb
mov
lret
mov
jnp
fstpl
int3
lods
push
lods
lods
sub
pop
dec
lea
mov
cmpsb
jnp
faddp
dec
cwtl
and
aas
lret
clc
fs
rcl
cmc
mov
pop
mov
cltd
mov
sub
xchg
addr16
mov
push
xlat
mov
xlat
aas
scas
mov
adc
lods
jmp
jno
daa
not
and
jnp
sbb
into
push
shrb
add
jl
js
sahf
cmp
dec
inc
mov
scas
outsb
fs
cmp
jecxz
pop
pusha
popf
add
mov
adc
sbb
decb
push
pand
nop
or
dec
out
idiv
loope
out
jp
jbe
fisttps
push
ret
jnp
les
insb
pop
nop
push
xchg
scas
pushf
lds
mov
adc
into
cs
and
push
test
iret
inc
ret
mull
sbb
and
add
roll
outsl
sbb
pop
dec
lret
cld
rorb
out
mov
add
mov
fldenv
loop
data16
arpl
fwait
push
jl
mov
jno
xor
outsb
sarl
inc
cwtl
inc
in
or
insb
xlat
dec
clc
push
pusha
ret
adc
push
lcall
loop
cmp
inc
mov
xor
je
xchg
add
xor
mov
xchg
loope
fidivrs
xchg
adc
inc
sbb
jno
out
mull
jnp
xchg
xchg
mov
out
mov
aaa
adc
ljmp
adc
leave
dec
push
pop
pushl
je
inc
sbb
xlat
pop
ficomps
or
or
push
out
ss
jg
out
mov
cmc
ljmp
mov
mov
jns
jl
std
aad
repz
mov
dec
pop
test
pop
les
mov
ja
nop
mov
shrb
inc
shlb
inc
inc
daa
add
subb
fucom
jp
add
jp
and
and
adc
leave
mov
ljmp
adc
mov
insb
stc
out
out
sbb
xor
mov
add
and
sub
inc
xor
std
outsb
dec
push
xor
mov
test
jecxz
ds
outsb
bnd
sbb
popa
sti
xchg
gs
testb
mov
repnz
popa
sub
incl
pop
mov
out
jecxz
sub
xor
add
or
push
sbb
add
loopne
inc
inc
enter
fiadds
jb
movl
jne
cmp
mov
mov
lret
sub
loope
pop
jge
stos
mov
lret
ja
sbb
sub
or
fcmove
pop
mov
div
push
cmp
aas
dec
push
lds
dec
cmp
sar
movsl
pop
incl
sbb
jb
inc
rcll
inc
mov
mov
xchg
test
aad
icebp
add
push
xlat
cmp
inc
fldcw
daa
mov
adc
aam
cmp
pop
dec
pop
shl
rorl
sub
shrl
xchg
cltd
xchg
int3
sub
in
push
movsb
pop
insl
aaa
sbb
mov
ret
sbbl
xor
dec
fwait
mov
clc
mulb
dec
bound
leave
test
arpl
call
imul
pop
mov
mov
jge
daa
loopne
mov
or
fwait
ds
rcr
aad
inc
inc
dec
imul
push
mov
jp
pusha
stc
sti
mov
and
les
testb
xorl
pop
xor
out
cmpsl
or
out
daa
mov
lret
je
or
add
xor
dec
loop
fsubrl
xchg
movsl
adc
push
in
mov
out
lret
xor
testl
dec
dec
sbb
or
stc
mov
jp
jns
cmp
test
push
mov
mov
lret
xchg
jb
ja
mov
aaa
insb
sbb
pushf
lret
out
mov
cli
xchg
shlb
xchg
pop
jg
fimuls
cmp
jno
cltd
jb
jp
adc
out
mov
xchg
and
int3
lds
mov
mov
mov
add
push
mov
xchg
pop
xchg
jae
mov
pop
sti
jmp
mov
pop
xchg
jbe
enter
mov
test
aaa
fwait
cwtl
inc
cmp
mov
jbe
ss
adc
repnz
cmpsl
dec
dec
pop
jno
test
stos
sub
lret
mov
pop
sbb
xchg
je
stc
inc
addr16
rcl
fsubrl
out
jge
fsubr
mov
xor
outsb
cld
cmp
xlat
mov
popa
lock
imul
xchg
popf
shrb
jbe
int
out
push
add
push
int3
pop
addb
std
int
je
sbb
pop
loopne
in
pop
aad
adc
pop
popa
dec
std
lret
push
enter
mov
sbb
push
adc
and
dec
loopne
mov
pop
pushf
jmp
adc
sub
mov
aas
push
mov
push
mov
sbb
dec
shr
in
in
stc
lock
jmp
pusha
dec
inc
cwtl
pop
mov
pop
shlb
and
cli
mov
stc
sahf
jbe
es
pop
in
push
loope
push
cmp
dec
pop
or
aad
aam
aaa
lea
in
xchg
insl
sbb
out
inc
adc
mov
fwait
jecxz
jmp
ret
cmc
fnstenv
icebp
test
sti
fwait
sub
push
dec
cmp
push
jl
add
fldt
out
sub
mov
out
sub
xchg
int
clc
ja
fbstp
and
dec
or
test
dec
sbb
push
scas
fisubrs
cmp
push
sub
mov
pop
xchg
inc
jno
std
shr
xchg
xchg
rcrl
out
jmp
cmp
mov
xchg
pop
test
subb
xchg
add
mov
pop
and
aam
xchg
movsl
push
in
or
push
js
mov
push
or
ficompl
stc
rcll
jb
sub
push
adc
ja
jp
bound
or
and
pop
je
in
lock
adc
push
in
xchg
loop
in
push
jb
inc
test
sbb
icebp
push
sbb
mov
sahf
push
lods
xor
pusha
scas
push
xchg
xchg
nop
adc
jno
mov
mov
jne
jp
rcll
mov
pop
outsl
out
add
cmc
clc
hlt
cmp
dec
sub
hlt
js
adc
scas
jo
loopne
stos
in
loope
xor
bound
mov
js
pop
cli
jle
ret
and
subb
mov
pop
add
aas
fdivrl
sub
push
inc
repnz
and
icebp
mov
arpl
je
lret
inc
into
pop
popa
mov
aam
xchg
cmpsl
adcl
popa
dec
lods
hlt
popa
fsubrs
sbb
dec
push
xor
in
ss
add
dec
out
push
imul
or
lods
mov
repnz
jge
adc
jecxz
inc
sbb
sub
cli
imul
mov
ds
or
rcl
pop
and
lods
jns
jo
dec
loop
mov
pop
sbb
cmp
add
cmc
and
repz
adcb
push
out
jbe
xchg
jnp
cmp
push
lods
roll
daa
lret
jae
les
adc
cwtl
mov
test
frstor
add
fcoml
pop
push
out
dec
cmp
and
mov
stos
ja
shl
push
mov
rcrl
xor
push
dec
mov
sub
mov
xor
ret
mov
mov
ds
sbb
movsl
add
hlt
mov
or
arpl
cmp
scas
dec
dec
inc
lods
out
sbb
pop
and
inc
push
adc
insl
jne
int3
es
or
mov
ret
cmp
das
lods
or
stos
xchg
adcb
inc
pusha
faddl
mov
fcomi
adc
lods
out
jge
cmpsb
cld
pop
aas
xchg
fidivl
pushf
mov
hlt
mov
inc
std
lods
ret
ss
fbstp
inc
sbb
pop
bound
sub
mov
pop
addl
daa
testb
adc
insb
push
xchg
pop
mov
inc
pop
cmpb
xchg
adc
call
mov
push
push
xchg
cwtl
ja
sarl
adc
adcb
mov
lahf
ret
xchg
mov
or
inc
aas
cmp
push
fs
dec
or
xor
popf
ret
daa
pop
repnz
pop
lret
imul
mov
pusha
inc
push
adc
fnstcw
bnd
sahf
sti
shrb
int
data16
lcall
sub
lret
test
icebp
mov
push
add
dec
jle
jbe
mov
jns
xchg
arpl
stos
imul
push
pop
loop
mov
lcall
outsl
adc
inc
jbe
lahf
rcrl
cmp
decl
push
mov
xor
inc
xchg
xchg
imul
and
movsl
mov
lods
out
out
imul
lods
sbb
scas
add
push
push
inc
fidivrl
xor
add
into
sarl
sbbl
test
sub
lcall
adc
inc
push
xchg
cmc
or
dec
leave
cmp
orb
push
xchg
iret
cmp
aas
scas
and
and
inc
testl
int3
clc
cltd
jl
sub
and
dec
mov
jl
inc
insl
dec
mull
pop
xchg
jecxz
ljmp
jnp
test
jae
lahf
sbb
faddl
mov
xchg
ffreep
into
mov
and
lret
push
pop
fldlg2
or
jae
dec
inc
aas
lock
xor
gs
sahf
xor
aad
testb
inc
shrb
pop
dec
and
push
or
jge
lods
call
iret
or
loope
or
jbe
cmp
mov
dec
shrb
fsubp
call
pop
xchg
scas
or
xchg
movsb
lret
push
sub
das
nop
fistpl
jno
imul
in
popa
xor
loopne
sub
push
imul
sahf
pop
jmp
sbb
cs
mov
cltd
ja
insb
loopne
clc
dec
mov
xor
xchg
cmc
push
popa
pop
das
sub
fnstenv
xchg
test
xor
out
fists
xor
imul
jns
cmpsl
sbb
add
dec
out
test
mov
dec
into
jb
icebp
fmull
add
pop
mov
int
sub
fwait
in
test
sbb
in
cmc
lods
xchg
mov
mov
jns
cbtw
jb
lods
add
or
xchg
push
loop
jge
dec
sbb
out
rcll
enter
ret
sub
dec
fwait
stos
movl
pmulhw
cld
cltd
xchg
pop
dec
push
test
mov
daa
aas
fsubr
inc
or
movsl
sahf
add
push
cmp
pusha
jmp
andb
mov
cmp
inc
or
loopne
jae
jo
inc
mov
in
xchg
mov
cli
mov
adc
and
adc
pop
ficoms
dec
loopne
test
rcl
in
sub
inc
clc
xor
push
jae
xchg
paddusb
mov
out
pop
lea
iret
out
xorb
mov
dec
mov
jge
add
xlat
arpl
jnp
out
jae
jae
cmp
mov
cmpsb
out
or
mov
jmp
cli
imul
dec
lret
ds
jno
adc
dec
in
ficompl
cmpsl
lret
cmp
push
in
iret
sbb
shrb
scas
lcall
lahf
inc
js
outsb
mov
mov
stos
sbb
arpl
dec
fistps
mov
sbb
ficoms
pop
in
in
jns
in
bound
fisubs
adc
mov
sahf
out
clc
loop
sbb
fdivs
outsb
loop
mov
lods
mov
stos
inc
int3
dec
xchg
jmpw
add
jb
iret
insl
or
xchg
pop
and
sub
inc
test
mov
or
in
pop
mov
inc
jbe
mov
xchg
lahf
out
mov
lds
lret
and
push
xor
aaa
ds
js
insb
stos
mov
pop
adc
push
and
das
lret
popf
and
andl
mov
sub
mov
sahf
fisubs
notb
xchg
and
popf
in
mov
or
cmp
dec
scas
ret
jne
aas
test
xchg
push
sub
sub
mov
mov
sbb
mov
fdivs
sti
jbe
or
popa
imul
loope
xchg
adc
shr
mov
addr16
and
fwait
sbb
lret
sub
mov
jg
xchg
ss
pop
inc
in
inc
mov
xchg
and
repnz
mov
mov
arpl
neg
xchg
and
pop
pop
pop
fldenv
clc
push
xor
mov
xchg
lods
addr16
imul
pop
jnp
lret
int3
jmp
imul
cmp
jl
and
in
xor
aas
mov
push
mov
addb
loope
mov
imul
insb
pop
jecxz
ja
adc
jmp
sahf
sbb
jecxz
jg
int3
outsb
lret
jne
cmpsl
decb
dec
leave
dec
lcall
divb
mov
jp
sub
pop
xchg
sub
push
adc
xchg
sbb
movsl
cmp
jecxz
call
aas
loop
andps
icebp
rolb
mov
adc
pop
or
dec
inc
loopne
cli
jmp
out
in
and
add
rcrl
cmp
sub
clc
mov
enter
inc
inc
fisttpll
loopne
lock
sahf
xchg
jno
js
mov
fwait
cmpsb
int3
movsb
lahf
imul
rorb
adc
dec
ss
push
fisubrl
jne
mov
hlt
lahf
pop
repnz
xchg
mov
pop
fxch
mov
cld
sbb
pop
mov
imull
cmpsl
aas
outsl
fistl
push
cwtl
sub
inc
sub
push
lods
dec
outsl
andl
cmp
int3
lock
pop
pop
jb
cld
lea
int3
xlat
in
cmp
mov
ljmp
push
cltd
decl
mov
in
insb
adc
add
fidivrs
negb
aam
outsl
xchg
mov
jmp
leave
push
dec
lods
mov
movsb
jmp
sarl
jo
fst
xchg
pushf
repz
sub
fildl
adc
pop
mov
mov
enter
sbb
ret
and
cld
stos
ja
dec
jo
cmp
orl
adc
ja
xchg
bound
inc
cmpsl
dec
dec
arpl
outsl
xor
push
andb
enter
shll
cld
loope
jnp
mov
das
aas
insb
je
sbb
into
and
gs
dec
sub
sbb
sbb
out
call
and
les
or
in
lock
test
fcoms
aam
xchg
cmp
daa
add
std
or
jmp
adc
and
repz
cltd
sbb
dec
imul
js
cwtl
scas
mov
fs
add
jnp
andb
cltd
ja
data16
cmc
cmp
insb
or
lret
push
push
sbbb
lret
mov
pop
xchg
dec
mov
mov
lret
outsb
outsb
xchg
js
cmp
rcl
xor
jmp
ljmp
cwtl
jo
mov
lea
out
insb
and
sub
shlb
cmc
popl
dec
add
mov
ss
or
shl
pop
mov
xor
xor
mov
scas
leave
pop
jg
sub
pop
adc
sub
rcrl
ret
sbb
adc
dec
test
movsl
xor
insb
or
pop
dec
insb
push
cmp
inc
mov
testb
into
dec
out
dec
pop
lods
mov
xor
and
lods
sbbl
and
adc
fs
fcompl
sbb
notl
lods
cs
dec
incb
call
push
test
inc
mov
sbb
adc
pop
andl
mov
or
rolb
iret
ret
bound
int3
shrb
inc
pop
dec
icebp
xchg
addr16
ljmp
sbb
or
xchg
insl
pop
xor
faddl
lea
insl
sub
pop
cmp
cmc
repz
adc
fsubrs
jne
sarb
ja
pop
push
lock
addr16
mov
lods
stc
shlb
test
daa
xchg
inc
push
push
mov
lahf
lea
mov
mov
lods
je
inc
roll
dec
fistpl
aam
add
scas
add
adc
cmp
pusha
rorb
cmpsl
mov
pop
jle
cmp
in
in
fstps
mov
daa
daa
test
jg
inc
clc
mov
xchg
push
jle
mov
fs
push
and
ja
inc
adc
adc
sub
or
repz
shll
out
add
insb
xchg
cmc
call
mov
lods
mov
sti
or
movsb
mov
imul
sub
fldt
js
push
mov
and
xor
int3
stos
push
pop
sub
sbb
sahf
mov
nop
popf
cmpxchg
loopne
pop
and
mov
pop
cmp
loopne
xchg
mov
xchg
and
sahf
pusha
sub
aam
add
add
inc
outsb
shrl
xchg
cmpsb
sub
xchg
orl
mov
mov
lods
enter
sbb
mov
cs
adcb
dec
stos
addr16
imul
mov
xlat
fcompl
jbe
xchg
or
pusha
fwait
cld
inc
imul
xor
pop
movsl
cmp
jb
lcall
nop
pop
arpl
inc
xchg
mov
negb
jmp
imul
push
xchg
ljmp
dec
out
mov
repnz
jp
or
inc
negb
inc
out
push
mov
adc
or
and
sbb
mov
daa
bound
and
xchg
fwait
scas
out
xchg
shlb
xorb
movl
rol
xchg
pushf
add
rol
fildll
or
inc
popf
push
xchg
pop
sub
sub
inc
cmp
out
dec
push
mov
pop
dec
mov
inc
lret
mov
push
out
repnz
sub
and
jnp
test
lahf
into
stos
fiadds
dec
dec
cmpsl
inc
sbb
or
push
retw
cmpsl
mov
mov
bound
cmpsl
lret
push
roll
iret
enter
and
arpl
push
imull
pop
sub
xchg
or
jo
pusha
test
cmp
sub
and
sub
xor
test
or
cmpsl
jnp
push
cmp
jb
add
mov
pop
adc
mov
pusha
cmp
and
cmc
jns
lods
data16
xor
jge
iret
outsl
scas
fstpt
jnp
sbb
arpl
mov
cltd
ret
insb
rclb
sub
aam
sbb
fiadds
das
stos
push
fstps
clc
outsb
xchg
test
in
movsb
inc
iret
adc
push
dec
pop
xor
outsb
sti
fisubl
iret
repz
add
cmp
mov
ret
sbb
icebp
es
loope
nop
dec
dec
cmp
cmp
fucomi
decb
jns
ljmp
popf
mov
jp
or
iret
jb
push
sub
rorb
aad
cmc
cmc
cmp
dec
lea
nop
shlb
adc
lods
and
fisubl
add
xchg
add
mov
sub
imull
add
xor
sbb
xlat
cmpsl
adc
cmp
aaa
jnp
xor
or
popf
in
lea
mov
pop
mov
dec
movsb
sub
int
sub
inc
fisttpl
adc
cmp
popf
sub
mov
jae
and
shlb
clc
aas
lahf
dec
add
lds
mov
xchg
jecxz
inc
fsts
cmp
movsl
insb
xor
xor
inc
push
aaa
or
pop
aaa
add
jg
stos
jp
adc
cli
jge
xor
sub
inc
push
xchg
lods
faddp
aam
call
sub
addb
call
cmc
mov
sbb
xchg
or
cld
add
inc
gs
in
aaa
inc
mov
jmp
imul
pop
push
ds
mov
cmp
push
in
push
pop
jbe
mov
push
cmpsl
fbld
cltd
jne
fidivrl
rcrb
outsl
mov
adc
push
pop
add
adc
cltd
incl
xor
pop
call
lcallw
and
cmp
pushf
inc
mov
cmpl
aaa
dec
call
dec
data16
or
pop
pusha
inc
test
mov
nop
fwait
and
jmp
dec
ret
out
mov
stos
movsl
test
int
jmp
add
and
mov
sbb
in
sbb
push
test
imul
pop
dec
jg
imul
int
cmc
cli
roll
sub
inc
enter
cltd
inc
or
and
push
rclb
xchg
mov
gs
lock
lcall
add
cmpsb
lret
inc
jne
aaa
jg
mov
icebp
xchg
push
jb
jo
shlb
sub
push
jb
push
ljmp
inc
add
lods
movsl
int3
mov
xchg
ds
push
push
lcall
mov
jmp
rcl
out
mov
add
or
mov
pop
icebp
xlat
decb
pop
cmp
add
je
test
mov
cli
lods
pop
xchg
inc
cs
sub
xchg
call
add
cmp
pop
push
jl
mov
push
dec
cld
sbb
lds
xrelease
fisubrl
daa
push
add
insl
adc
movb
pop
pop
xchg
cmp
pop
adc
int3
lcall
loopne
xchg
mov
jo
insb
std
lcall
xor
xchg
pop
jmp
iret
or
push
jge
dec
ja
sbb
dec
sbb
notl
xor
xlat
cmp
aaa
sub
jp
add
aaa
test
repnz
ja
push
fbstp
pop
xchg
sbb
rcr
ret
data16
dec
jecxz
je
ljmp
cmp
lea
shll
leave
sbb
andb
in
aad
std
dec
les
fstl
or
and
hlt
jge
and
cmpsl
sahf
add
push
cmp
repnz
mul
sub
ret
or
movsb
jg
cmp
cltd
add
fwait
outsb
sbb
pushf
cmp
add
dec
pop
push
mov
lea
dec
imul
mov
leave
jae
nop
sbb
decl
adc
dec
fadds
jge
loope
pop
repz
xor
ret
adcb
jnp
or
add
adc
mov
xchg
sti
mov
dec
sub
mov
xchg
mov
into
rolb
hlt
pop
scas
lock
fdivs
lds
hlt
fiadds
xchg
out
mov
ficompl
push
mov
movaps
lcall
fimuls
xchg
xchg
inc
les
out
mov
adc
inc
mov
pop
scas
dec
xchg
sub
mov
sbb
push
mov
mov
and
lret
xchg
loop
arpl
test
repz
sbb
fldenv
scas
cmpsb
inc
xor
or
cs
fwait
dec
inc
push
and
xchg
test
loop
push
or
sbb
mov
ljmp
ljmp
imul
in
cmp
mov
jp
cmp
mov
add
push
fs
outsb
sbbl
outsl
loopne
or
jl
pop
repz
mov
fisubrl
roll
mov
fildll
add
jbe
mov
add
cmpsl
lcall
rolb
fisttps
test
cwtl
xchg
pop
adc
or
mov
pop
push
push
leave
dec
sub
fs
lds
push
mov
incb
push
jns
imul
add
or
cli
jo
adc
aaa
mov
mov
sahf
push
repnz
outsb
push
or
jmp
jne
cmpsl
push
push
leave
fucomi
lret
sbb
fdivs
or
out
mov
shll
orl
mov
inc
mov
lea
test
imul
dec
mov
aaa
push
pop
sub
das
mov
sarl
ljmp
xchg
xchg
mov
inc
sub
lds
mov
ret
mov
insb
cmc
js
jecxz
movsl
xchg
inc
xchg
push
inc
xchg
mov
sub
cmp
data16
dec
pop
les
dec
dec
inc
dec
aam
add
push
int3
repnz
add
popf
std
jo
sub
sub
hlt
in
stc
or
mov
mov
addr16
hlt
xchg
mulb
or
or
scas
jmp
data16
push
out
es
sub
adc
movsl
pusha
or
clc
mov
js
pop
loopne
or
mov
inc
inc
std
ljmp
add
rolb
jmp
fsubr
mov
leave
push
scas
sarl
xchg
loope
outsb
xlat
scas
or
jno
sti
lods
fsubl
push
imul
shll
add
shlb
push
cmp
insb
mov
mov
out
repnz
sti
movsl
mov
xchg
xchg
jge
cmpb
ret
jle
mov
inc
frstor
adc
lods
int
not
inc
cmp
jbe
xor
adc
out
dec
adc
fcomp
shll
lds
test
lea
xor
xor
mov
pop
les
imul
or
fsub
xchg
mov
fldt
push
cmpsb
add
xor
in
movsl
repnz
adc
adc
mulb
mov
aaa
movsb
fisubrl
rcl
sub
cmc
mov
aas
gs
xor
push
jbe
fcomps
push
pop
int3
push
sarb
cli
inc
lret
in
hlt
mov
pop
dec
stos
orb
or
mov
fisttpll
jbe
push
mov
mov
sbb
mov
mov
push
test
add
xorb
shrb
pop
mov
in
push
mov
and
add
outsl
dec
lea
jbe
dec
pop
pop
sub
insb
imulb
jbe
push
cmp
shll
inc
or
mov
sub
imul
arpl
sub
jb
cmp
xor
rcrb
sbb
push
push
scas
sub
pop
mov
xchg
cmp
fstl
mov
aam
xor
imul
mov
inc
fisubs
test
xor
sti
mov
xchg
hlt
push
cld
mov
aaa
xor
push
cmpsl
sbb
sub
pushf
mov
in
inc
stos
push
out
xor
insl
fidivrs
inc
sbb
mov
sub
enter
sub
aas
loope
dec
or
inc
add
lods
cmp
cli
mov
mov
push
pop
arpl
or
mov
test
pushf
int
xor
ja
dec
fsts
aas
sbb
pusha
sub
sbb
sub
call
imul
lahf
cmp
push
fstps
loope
roll
pop
mov
jne
mov
push
xchg
jo
outsl
rcr
xchg
add
in
fisubs
frstor
mov
mov
mov
add
or
sahf
push
pop
pop
mov
dec
test
pop
pop
mov
out
imul
out
jns
out
stos
clc
shlb
push
andb
push
lea
lods
inc
sub
push
or
xor
jl
bound
leave
addr16
pop
pop
clc
jnp
dec
and
sbb
stc
addr16
sbb
jnp
dec
ja
fisubrl
sub
dec
imul
xchg
cmp
mov
xor
test
pop
lea
and
adc
pusha
les
std
mov
pop
sbb
push
pop
sub
ret
fistps
mov
mov
add
mov
dec
xor
push
push
xlat
mov
sbb
and
sbb
mov
addb
cmp
add
ror
jmp
test
scas
ja
std
ljmp
dec
loope
fisubrl
das
add
data16
repz
roll
and
add
popa
rcrl
in
fdiv
rclb
mov
add
shrl
inc
pop
and
js
outsl
adc
xchg
dec
and
pop
push
imul
out
mov
pushf
fs
gs
sub
adc
sub
add
mov
jmp
in
push
dec
mov
xchg
jb
lds
mov
jbe
xchg
cmp
insl
addb
push
imul
in
xor
and
push
in
leave
in
lods
fucomi
jb
mov
inc
pop
cltd
mov
dec
clc
jmp
mov
loope
xchg
push
dec
jg
lods
push
push
or
cmpsb
xor
xchg
pop
mov
ror
outsb
mov
aam
dec
sbb
gs
or
imul
ja
fldt
mov
adc
addb
divl
pop
adc
pusha
dec
enter
mov
hlt
pop
cmp
filds
sub
jnp
out
push
cmp
mov
dec
fmuls
dec
fimull
inc
mov
dec
lock
or
sub
nop
mov
xor
fdivrl
test
int
pop
and
mov
cmp
lock
xchg
aad
dec
arpl
lods
jne
pop
dec
jne
movsl
pop
jae
les
inc
adcl
arpl
sbb
data16
daa
xchg
adc
dec
jle
jae
aas
stos
sbb
jo
push
pop
fstpl
push
or
int3
pop
int
xchg
inc
mov
cmpl
xchg
clc
smsw
pop
add
dec
inc
loope
ret
mov
mov
movsl
mov
test
ja
addr16
pop
lods
lcall
or
or
scas
sbb
jns
in
out
push
idivb
sti
dec
idivl
add
jne
js
les
or
jno
dec
xchg
and
enter
nop
add
ret
push
int
mov
icebp
adc
adc
push
fdivr
movsl
in
inc
jl
mov
or
cltd
stc
lret
adc
sbb
jmp
xlat
nop
iret
aam
sarl
mov
xor
xchg
xor
xchg
inc
cmpl
mov
les
jecxz
cmp
xchg
das
hlt
lret
sub
xchg
add
mov
scas
movsb
push
ud0
add
adc
aad
cmpsb
sbb
cwtl
inc
stos
jbe
popa
cmp
xchg
push
mov
dec
out
sub
test
pushf
fsubs
cmp
inc
xchg
repnz
cmp
testb
cmc
xchg
in
bound
pop
repz
scas
icebp
movsb
pop
mov
in
add
mov
ret
dec
orb
mov
pop
out
mov
mov
push
xor
mov
dec
dec
into
and
or
sti
cs
addr16
adcb
sub
xor
sbb
in
dec
sub
mov
inc
adc
lods
cmp
jns
loop
adc
insl
fbld
jge
shlb
rcl
iret
mov
fldt
cmp
cltd
or
pop
mov
mov
loope
xchg
or
jne
int3
and
sbb
push
fwait
movsb
mov
cli
push
xchg
push
or
xchg
add
inc
cmpsl
add
push
insb
dec
rorl
rclb
or
jbe
mov
ss
test
daa
loopne
push
movl
pop
mov
divl
das
lods
stc
shr
pop
mov
and
and
mov
cwtl
pusha
ljmp
cmp
mov
mov
dec
fsubrl
out
insb
addr16
fstpt
sub
jb
outsb
inc
incl
mov
iret
in
and
jns
lods
mov
dec
ret
aam
xor
ja
dec
mov
popa
addr16
jo,pt
push
xchg
shlb
inc
mov
and
sahf
adcl
rcl
xchg
popa
popf
mov
xor
out
aam
daa
aad
addl
dec
pop
testb
je
lock
mov
enter
in
dec
and
add
pop
imul
sub
mov
xor
imul
mov
ret
testl
add
shrb
mov
mov
js
inc
data16
xchg
pop
pop
insl
pop
xchg
and
mov
mov
test
movsb
adc
pop
roll
jns
test
scas
aad
mov
orb
lret
push
pusha
inc
daa
sahf
push
add
es
cmpsb
jmp
movsl
addl
pop
popa
pop
mov
filds
mov
fisttpl
mov
cmc
mov
pushf
xorl
dec
lahf
sbb
xchg
mov
pop
mov
cs
pusha
inc
in
iret
lcall
insb
ljmp
test
pop
je
sub
and
cmp
rcrb
bound
cmp
push
dec
or
cmp
adc
sub
xchg
js
outsb
dec
sub
jbe
cli
cmp
cmp
jle
xchg
jmp
adc
ret
pop
dec
dec
jp
pop
iret
cmp
mov
mov
arpl
inc
enter
lret
into
std
jne
mov
xchg
dec
adc
adc
jmp
sub
call
and
nop
test
scas
cmp
in
arpl
leave
call
xchg
mov
lret
mov
test
stos
ja
loopne
insb
inc
in
xchg
jbe
add
out
fldl
pop
daa
int
mov
cwtl
adc
lea
cmp
in
push
dec
lret
mov
stc
cmp
or
push
jno
adcl
jecxz
or
push
mov
dec
jb
lds
idiv
sub
mov
mov
or
ljmp
push
sub
in
out
and
cs
in
or
in
mov
sbbb
dec
stos
stos
cltd
sbb
out
inc
ss
push
cmp
xchg
lcall
loope
xchg
cltd
add
push
cmp
aad
sbb
out
cmc
test
les
sbb
or
xor
push
in
lahf
enter
ror
jg
pushf
cmpsb
mov
mov
fidivs
jmp
xchg
and
je
arpl
bound
and
inc
mov
lock
dec
dec
xor
pop
lock
jg
add
lods
jne
jmp
inc
mov
dec
sahf
iret
jb
imul
mov
xchg
dec
fs
jo
and
inc
cld
ja
es
pop
cli
rcr
jnp
loop
nop
pop
xchg
or
and
repz
jmp
jo
mov
aaa
push
cwtl
jp
lahf
inc
adc
lahf
jmp
xorb
cmp
mov
dec
lods
add
jl
out
test
push
inc
fdivl
test
lds
aaa
in
cmpsl
pop
pop
or
add
dec
js
inc
aam
enter
lret
adc
mov
es
cmpb
jmp
bound
daa
in
mov
pop
dec
jg
xchg
sub
dec
lcall
cld
clc
fildll
sbb
pop
mulb
mov
out
pand
lock
mov
stc
insb
dec
push
not
stos
lret
ds
out
scas
popf
dec
mov
sbb
or
sub
add
sbb
adc
xchg
fisttpll
pop
outsb
aaa
icebp
ret
call
dec
sub
or
out
push
xchg
sub
or
loop
gs
mov
into
rorb
pop
cli
dec
loopne
xor
inc
andl
xor
xchg
inc
shrl
addl
sti
inc
mov
push
sti
cmpsl
lahf
clc
mov
icebp
lcall
inc
jnp
jp
ss
cmp
popf
add
aad
pop
push
dec
iret
inc
mov
aaa
outsb
repz
sub
mov
xor
adc
gs
and
xchg
jbe
test
mov
bound
rorb
cmp
or
push
lock
jg
mov
testb
cmp
arpl
cli
add
in
cmp
adc
xchg
insb
call
sub
std
jecxz
push
mov
pop
insl
push
aaa
mov
fwait
mov
jo
sbb
mov
inc
lret
lahf
int3
lods
mov
gs
pop
aad
jbe
mov
pop
and
incl
xchg
subl
pop
jmp
les
mov
dec
loope
and
in
inc
test
cmp
add
rcl
push
nop
repnz
lea
mov
inc
push
mov
bound
push
push
imul
pop
or
fisttpll
inc
cmpsl
shlb
mov
dec
scas
les
mov
mov
or
fsubs
inc
adc
mov
or
xor
enter
push
mov
enter
lcall
adc
adc
adc
cmp
xchg
jmp
adc
sub
mov
mov
ds
fsubrs
inc
push
scas
jg
fisttpl
lds
mov
xchg
scas
push
orl
inc
testb
mov
cmpsb
mov
fldl
rcll
mov
jnp
jge
inc
lods
mov
inc
add
test
dec
dec
add
insb
push
movsb
outsl
adc
pushf
mov
lods
ret
jbe
cltd
lods
lea
sarb
adc
flds
jge
mov
enter
push
pshufw
push
gs
aam
loopne
int
stc
jmp
rorb
popf
or
je
mov
push
xor
int3
cwtl
imul
mov
xchg
adc
and
jae
sti
xchg
push
push
sub
jg
cmp
nop
cltd
mov
and
divl
in
push
lods
sub
roll
jmp
jae
mov
into
int
aam
notb
repz
pop
inc
ret
sahf
xor
lret
sbb
cmpsl
push
pop
cli
jo
fadd
lahf
sub
repz
dec
fistpll
jnp
testb
or
or
mov
mov
jge
pop
sub
fstps
pop
jne
std
popf
mov
push
push
shrb
pop
popf
and
fwait
inc
mov
dec
sbb
jne
xor
outsl
mov
stos
mov
cwtl
push
pop
inc
mov
xchg
mov
in
pop
fisttpll
jno
rcrl
es
daa
push
rcr
add
pop
push
mov
mov
xchg
bound
dec
dec
inc
inc
mov
push
inc
mov
frndint
and
push
pop
in
sub
ret
sbb
jae
arpl
mov
or
ljmpw
mov
mov
dec
orb
and
mov
idiv
sti
inc
push
xlat
je
cmp
and
mov
shlb
arpl
add
jns
mov
orl
fdivs
mov
mov
stos
add
in
xchg
rorb
fstps
lock
xchg
xchg
es
aaa
stos
pop
adc
es
lret
loopne
sahf
fiaddl
lcall
int
jnp
dec
addr16
xor
stc
jne
or
jne
add
adc
sbb
repnz
jecxz
hlt
sub
repz
repnz
daa
add
aad
outsl
cmpl
sbb
xchg
pushf
loope
fwait
sbb
ds
jnp
mov
sub
pop
test
or
fwait
lods
rcrb
test
clc
test
clc
adc
mov
mov
push
icebp
leave
mov
pop
add
fbstp
fstp
test
std
mov
adc
dec
dec
mov
xchg
aam
les
inc
jle
adc
shrl
and
mov
inc
sbb
dec
or
dec
test
pop
pop
push
jl
mov
xor
jmp
nop
insb
push
xor
jo
xor
cmp
inc
xchg
rolb
or
js
test
fcomps
lret
mov
pop
dec
and
repnz
pop
mov
mov
push
loop
and
jecxz
jo
repz
pop
enter
je
scas
xor
pop
jl
add
or
rolb
arpl
cwtl
gs
dec
add
or
pop
pushf
dec
push
push
adc
xchg
int3
loop
jmp
push
pop
icebp
sbb
jne
in
movsb
pushf
mov
cltd
loop
loope
push
jne
mov
je
inc
xchg
xor
data16
xor
repz
jl
xor
sbb
xor
sbb
pop
arpl
xor
inc
insb
rcrb
sub
jmp
add
lods
in
fstp
out
cs
imul
push
jne
pop
xchg
cmpsl
aad
cmpsl
bound
sarb
in
xor
loop
push
mov
sub
mov
out
mov
sub
pop
shl
movsl
sbb
sub
repnz
adc
and
sbb
ds
xchg
shrl
sbb
sub
insl
dec
mov
repnz
lods
paddsw
fisubs
or
roll
mov
fidivs
iret
cmp
shrb
scas
pop
dec
pusha
lock
add
cmp
xchg
inc
mov
pop
dec
pop
cmpsb
gs
push
ret
sbb
mov
mov
inc
jecxz
mov
push
push
stos
jge
xchg
ret
lcall
pop
cmpsl
out
mov
cmpsb
push
or
mov
fnsave
aad
pop
add
int
cmp
mov
adc
call
cwtl
lds
pop
push
mov
and
xor
or
cwtl
out
push
out
aas
and
jl
or
adc
sbb
add
sub
mov
push
jnp
mov
gs
shrl
mov
stos
jl
fldenv
imul
int3
xchg
fcomp
sti
push
jg
lods
adc
fsub
or
cmpsb
lret
insb
jo
pusha
mov
call
dec
inc
and
add
fs
out
mov
dec
lods
repnz
enter
lea
call
or
mov
and
pop
sahf
arpl
cmpsl
lahf
jg
dec
push
out
jo
lods
sub
mov
push
or
pushf
sarb
shlb
adc
lock
cmpsl
mov
sahf
fsubl
inc
mov
fwait
pusha
aam
pop
xchg
lock
lods
lds
cmp
adc
arpl
xor
adc
push
lods
fists
das
in
xchg
std
jae
scas
mov
int3
inc
icebp
and
sbb
jg
add
jmp
inc
mov
orb
jno
into
and
into
es
pop
data16
shrb
call
and
dec
inc
jge
push
mov
sbbl
xchg
push
cmp
insb
xchg
outsb
stos
fucomip
adc
repz
std
and
jbe
fsubrs
test
adcb
inc
xchg
addr16
push
out
lret
xor
lods
sub
int
xor
cmp
pop
xchg
out
lahf
arpl
out
cmpsb
ss
mov
and
mov
sarb
jp
clc
add
add
mov
clc
sub
dec
or
push
lahf
popf
orb
pop
cmpsl
mov
pop
or
test
pusha
test
jnp
jp
adc
adc
sahf
fwait
and
xor
push
sbb
negb
nop
cmpl
stos
adc
dec
clc
mov
pushf
lret
dec
mov
dec
scas
inc
outsl
adc
call
inc
imul
cld
test
jnp
dec
sbb
mov
stos
fdiv
call
sub
mov
mov
cmp
jmp
adc
jg
test
push
rclb
imul
pop
faddl
fldt
aas
cmp
popf
je
inc
mov
jmp
inc
enter
and
jecxz
movsl
cmc
or
jge
pop
fwait
xchg
sub
repnz
push
xchg
rclb
push
mov
cltd
push
dec
mov
sub
xor
sub
mov
arpl
cs
pop
jl
imul
dec
push
std
push
cmp
adc
cmpsb
cmpsb
rcr
cmp
subb
and
ljmp
adc
push
bound
lods
mov
mov
or
rcrl
cmpps
aaa
mov
jge
mov
stos
xchg
lock
pop
je
xorb
and
mov
das
out
test
rol
sti
add
or
outsl
mov
push
fldt
bound
rorl
xor
and
push
sti
cmp
cmpsl
push
sub
mov
cli
mov
adc
aad
cli
add
cmp
in
imul
std
mov
hlt
js
mov
les
or
push
cltd
adc
sbb
fs
jg
dec
fsts
stc
stos
lahf
add
idivb
lea
faddl
push
fmull
inc
sti
push
pop
ds
push
add
sbb
fwait
imul
lods
loopne
ffree
fdivr
push
fiadds
xchg
xchg
shll
ret
lds
movsl
aam
pop
lods
dec
pop
ljmp
mov
mov
ss
push
mov
out
out
jnp
jge
ret
inc
jl
in
pop
adc
das
test
sbb
fists
xor
imul
inc
daa
xor
pop
test
mov
dec
cli
imul
ss
fwait
jmp
aas
xlat
call
int3
je
mov
out
stc
int3
xchg
push
fmull
iret
mov
and
int3
dec
call
mov
mov
mov
loope
dec
iret
xchg
push
icebp
in
pop
mov
movsl
adc
cmp
ret
aaa
mov
ljmp
es
xlat
test
cmp
je
xchg
int3
xchg
call
outsl
rolb
lret
arpl
mov
xor
in
lret
aas
adcb
js
jp
outsb
jnp
jo
aaa
pop
sub
loopne
mov
ds
fdivrs
lret
jecxz
cmc
fcoms
mov
out
je
imull
sahf
fstl
and
orl
das
mov
xchg
mov
fsubp
mov
pop
mov
xlat
sbb
in
sbb
mov
adc
test
push
rclb
out
rcll
lods
inc
cmpsb
add
pop
push
xchg
lahf
or
add
pop
int3
sbb
xchg
xorl
faddl
repnz
mov
mov
testb
jle
cmp
cltd
cmp
enter
mov
dec
mov
pusha
xchg
imul
fcmovu
dec
jp
adc
sbb
filds
js
dec
subb
int
imul
outsl
fbstp
push
ret
outsb
dec
repnz
mov
ljmp
push
lock
sbb
adc
aas
xor
cld
inc
xor
out
dec
sbb
cmp
pop
xchg
scas
sub
adc
es
xlat
movsl
scas
jb
out
mov
fistpl
scas
fwait
iret
pop
cmc
fcompl
or
sub
xchg
pop
adc
fsts
mov
in
imul
ja
sbb
lret
fists
ret
ljmp
cmpsl
lret
out
out
cmp
jnp
push
pop
or
cmp
mov
jg
mov
cmp
fadds
popf
and
inc
ror
test
xor
pop
lret
jne
pop
dec
and
leave
lods
dec
pop
stos
sbbb
rcl
mov
out
insl
cmpsl
mov
cmc
jge
push
in
jge
outsb
outsb
into
daa
imul
sti
test
lds
std
aas
inc
jmp
cmp
fwait
inc
xchg
rclb
mov
icebp
add
nop
es
push
stos
push
mov
scas
adc
pop
fs
sub
dec
and
stc
or
stc
aaa
jno
adc
ret
sbb
out
movsb
xor
movsb
stos
sub
popa
dec
test
loop
ds
adc
out
cmp
movsb
push
dec
cmp
int
xor
enter
mov
imul
mov
push
push
jno
scas
cmpsl
test
pop
nop
cld
gs
roll
push
out
push
mov
mov
or
fwait
push
mov
ror
and
jle
fisubl
mov
dec
push
shlb
in
sbb
lahf
std
daa
test
mov
pushf
and
sti
push
pusha
mov
std
cwtl
sbb
icebp
mov
and
push
pushf
test
into
or
inc
pop
cmp
icebp
xor
push
in
pushf
imul
rcrl
pop
pop
mov
outsb
faddl
pop
dec
jbe
lods
sub
lret
mov
fidivrs
lods
cmpsl
lcall
pop
xor
stos
shrl
ds
cmp
push
loope
add
xlat
cltd
inc
mov
sub
sbb
lods
je
jb
and
pop
fistpl
dec
dec
xchg
sbb
xchg
sbb
data16
pushf
pop
scas
repnz
js
xor
mov
and
mov
inc
jge
xchg
cltd
jmp
loope
mov
js
andl
xchg
fsubrl
repnz
scas
inc
outsl
xchg
fs
dec
ljmp
test
fldt
xchg
pop
outsb
lahf
hlt
mov
jle
test
fdivs
cwtl
pop
lods
and
lods
cld
popf
mov
shl
repnz
pop
jb
cmp
xchg
xchg
xlat
das
jl
adc
or
jnp
xor
sub
fisubrs
xchg
scas
es
jmp
xorb
out
jb
push
push
das
sahf
adc
movsb
push
rcll
sar
cmp
inc
dec
fcmovnbe
sbb
jae
loope
mov
add
fwait
add
jno
push
movsb
jl
adc
dec
in
out
pop
insb
test
cld
xchg
dec
jmp
imul
bound
xchg
int3
mov
mov
xchg
fistl
inc
and
fdivp
mov
bsr
sub
dec
sub
push
mov
push
xor
xor
bound
negl
test
movsb
sbbl
imul
push
mov
arpl
pop
push
das
sti
jnp
or
adc
out
test
daa
and
int3
inc
out
cmc
xchg
hlt
sub
mov
push
loop
mov
or
and
mov
pushf
leave
cmp
mov
lea
mov
outsl
add
lahf
mov
dec
push
rcll
insb
out
out
xchg
dec
shr
cmc
lock
scas
jle
cmpsl
imul
xor
mov
or
mov
jl
xor
ror
mov
push
xchg
rcrl
add
outsl
mov
sub
adc
bound
push
jbe
mov
js
lahf
pop
out
out
movsl
adc
jns
inc
or
jb
js
xchg
sti
sub
or
sbb
rcrl
in
movsb
shl
scas
fs
jns
icebp
cld
mov
scas
subl
push
lds
mov
mov
js
sbb
fldenv
push
stc
push
pushf
push
xchg
or
dec
sub
dec
cmp
jb
adc
push
xchg
scas
out
in
xor
out
xchg
mov
mov
dec
fstpl
and
pop
adc
test
cmp
xlat
push
mov
push
fbstp
xor
sub
repz
xchg
push
std
fimuls
lret
dec
aas
xor
lods
add
jle
fisubrs
push
adc
rorb
movsl
xor
mov
cli
ds
movsb
xchg
push
repnz
dec
int3
and
push
mov
lock
push
pop
jmp
cli
fstl
fdivrs
and
sub
hlt
add
outsl
pop
mov
das
cmpsl
inc
jo
roll
push
add
mov
pop
or
inc
jbe
add
xchg
cmpsb
mov
cli
repz
iret
ror
cmp
cmp
sahf
lea
mov
lock
sub
lock
xchg
xchg
lret
lods
dec
notl
and
mov
inc
js
lret
jmp
pop
aaa
xlat
ret
out
xchg
and
push
pop
mov
or
icebp
xchg
and
aam
and
dec
das
mov
mov
or
cmp
sbb
ret
mov
cmc
out
mov
cmp
mov
in
loope
cmp
fistpll
test
lods
cmp
lret
xorl
and
sub
dec
jo
imul
push
inc
xchg
and
xchg
jecxz
jb
mov
popf
inc
push
add
outsl
add
xor
sub
cmp
push
repnz
fidivrl
jnp
jl
mov
enter
leave
in
fs
pop
mov
mov
xchg
pop
push
outsl
add
jae
mov
lock
cmc
ds
push
add
mov
aam
xor
sahf
ljmp
or
xchg
mov
mov
lods
or
rcrb
push
aas
int
outsl
pop
shr
xchg
fcmovbe
xchg
rolb
mov
cs
dec
idivb
into
push
mov
jle
mov
aaa
push
pop
scas
or
mov
cmpl
dec
dec
mov
jno
xor
cli
cmpsl
add
flds
cmpsl
js
push
fmull
cli
add
add
inc
lcall
scas
ret
dec
mov
in
mov
push
scas
cmpsb
sbb
or
fisubs
bound
mov
mov
xchg
stc
stos
call
xchg
nop
flds
inc
iret
mov
sub
mov
push
mov
dec
mov
subb
pusha
push
clc
popa
clc
repnz
es
nop
cmp
pop
dec
sti
push
cmp
movsl
dec
divb
xchg
lods
int3
lahf
jae
mov
ss
push
sbb
imul
lods
mov
xchg
ja
jle
adc
inc
aas
dec
pop
mov
scas
das
ud0
mov
cmp
jnp
dec
adc
mov
mov
outsl
scas
popl
bound
xchg
xor
in
dec
stos
lds
inc
ror
push
cmp
repnz
arpl
imul
bound
add
pusha
mov
ljmp
mov
sub
add
fidivrl
dec
jae
mov
ds
sti
fs
fwait
cs
dec
mulb
pop
lea
inc
stos
shrb
sub
cmpsl
sub
mov
or
push
inc
and
mov
movsb
xor
notl
int3
fldt
stc
fwait
mov
jno
add
cltd
mov
xchg
xorb
sbb
dec
xchg
fstpl
imul
outsb
into
sub
add
rcrb
cltd
cwtl
test
adc
imul
adc
jg
int3
es
add
cmp
push
mov
xlat
sti
jg
mov
push
or
outsl
punpcklwd
lds
push
xor
xchg
push
xchg
jbe
aad
mov
loope
pop
andb
or
and
mov
inc
xor
mov
ret
lock
jp
out
dec
push
mov
mov
gs
pushf
and
js
repnz
xorb
xor
xchg
repnz
cld
mov
sub
and
insb
or
or
mov
in
inc
inc
pop
jae
add
add
xchg
lcall
fistpl
mov
scas
and
pop
push
aam
inc
mov
or
in
fcoml
hlt
pushf
xor
imul
mov
outsl
adc
loop
or
negl
stos
jo
and
inc
push
or
ret
inc
pop
fbld
sbb
mov
aaa
xchg
cmpl
cmpsb
mov
jge
inc
cltd
lock
and
ja
ret
push
mov
pushf
ret
data16
jecxz
es
inc
fs
sub
jg
loop
xor
imul
inc
push
scas
ficomps
cmp
test
xor
push
loopne
pop
xlat
scas
inc
and
fwait
mov
cmpsl
xor
inc
imul
mov
jbe
orl
fbstp
or
shll
imul
jle
icebp
xor
inc
pop
rcr
add
adc
stc
mov
int
rorl
xchg
mov
shll
add
js
gs
dec
mov
jmp
jg
jle
outsb
mov
mov
hlt
imul
ret
rcrb
jo
insb
pop
mov
and
cmp
negl
adc
ret
adc
mov
lcall
dec
cmpsl
cmpl
addb
int
jmp
xor
cmpsb
in
mov
mov
and
xor
lock
mov
and
jmp
cmp
mov
fwait
push
push
inc
push
popaw
or
xchg
dec
lods
mov
cltd
in
movsl
mov
clc
and
movsl
out
stos
js
shll
pusha
lret
addb
xor
dec
je
mov
jle
mov
pushf
adc
in
repnz
shrb
mov
jno
adc
jne
add
stc
dec
pushf
fdiv
mov
adc
in
enter
pop
add
jp
inc
repz
cli
lock
hlt
jg
addr16
testb
adcb
shll
fdivrl
dec
jnp
mov
das
pop
or
loope
sarl
testl
addb
add
lds
jo
xor
inc
into
lds
mov
xchg
pop
sub
cmp
cmpsb
mov
sti
gs
in
add
or
push
mov
sarl
cmc
jb
mov
jmp
jne
out
pusha
xchg
mov
sbb
lahf
sbb
pcmpgtb
push
decl
in
fistl
cs
leave
push
mov
cmpsl
das
and
mulb
lods
or
xor
arpl
stos
bound
cld
cmpsb
sub
in
push
sti
xchg
aaa
add
sub
jne
stos
sbb
mov
sub
outsl
jl
cld
push
jp
mov
sub
aaa
clc
data16
and
dec
outsl
pop
loopne
add
lret
jb
jnp
jmp
mov
mov
xor
sahf
pop
fisubrl
xor
inc
cwtl
and
out
pop
and
inc
sti
hlt
cmp
xchg
call
cmp
xchg
and
ss
or
pop
push
sub
sub
adc
xor
push
pop
push
mov
cmp
fcompl
inc
ret
sahf
mov
popa
mov
fs
mov
add
clc
and
mov
aaa
nop
xchg
test
push
xchg
out
es
loopne
mov
idivl
or
sub
sub
pop
jo
lods
in
es
paddsw
jp
int
jno
add
sbb
aaa
dec
cmp
roll
imul
pop
std
or
mov
cmp
fcoms
adc
pop
sub
inc
adc
and
andl
dec
or
inc
test
mov
sub
in
test
cmp
fmulp
and
lcall
gs
pop
test
repnz
lods
inc
jecxz
dec
fstl
repz
sbb
push
add
adc
cs
addr16
xchg
sbb
push
ret
lret
push
push
cli
pop
adc
aas
inc
stc
insl
leave
lea
mov
aas
stos
sbb
adc
call
pop
nop
xchg
outsb
mov
jb
push
jl
call
adc
test
cmp
scas
dec
mov
cli
jp
push
and
push
push
les
add
xor
nop
mov
push
sbb
dec
aaa
sbb
sub
fcoms
push
popf
outsl
cmp
shlb
or
aas
mov
sbbl
push
insb
and
mov
sbb
xor
mov
popa
orl
cwtl
imul
ds
push
movsl
hlt
sub
cli
daa
and
sbb
jnp
sbb
mov
dec
cmp
mov
adc
mov
mov
and
push
push
stos
xor
sbb
mov
sbb
xlat
pop
jne
mov
and
sub
jp
fsub
ret
mov
add
fcmovnu
popa
pop
and
mov
jae
dec
aad
jo
lahf
fwait
mov
mov
outsb
imul
add
add
aam
pop
sub
or
xor
ds
in
push
pop
or
js
sub
jbe
pop
cmp
add
mov
mov
stos
sahf
cmp
mov
ficoml
pop
add
xor
push
xchg
mov
icebp
mov
sbb
scas
js
and
shl
or
sub
jmp
inc
jle
lret
dec
sbb
or
push
push
out
cmp
dec
ss
stos
xchg
mov
insl
enter
push
sub
xchg
xlat
xor
mov
cmp
shll
sub
aad
xor
xor
sahf
cmpsb
add
mov
shll
mov
clc
in
pop
stc
push
jp
xor
cwtl
scas
pop
pop
push
sbb
out
jl
int3
and
in
outsb
rcrl
insl
cs
shr
xlat
out
or
lea
popa
pop
les
arpl
mov
xchg
push
in
sub
cmp
push
clc
mulb
rcl
call
push
inc
or
outsb
mov
jnp
jl
xchg
out
test
nop
imul
out
mov
push
arpl
test
std
xchg
sbb
mov
dec
and
lret
lret
or
mov
cmp
jp
jecxz
mov
jns
sbb
call
in
andl
cwtl
jge
pop
aaa
mov
leave
repnz
dec
xchg
mov
popf
xchg
test
lret
cli
std
adc
push
ljmp
pop
pop
push
dec
insb
jbe
data16
dec
pop
je
mov
aaa
mov
mov
cmpsl
ljmp
repnz
adc
mov
push
popa
mov
fidivrs
aas
mov
mov
js
pop
sub
stc
lahf
dec
cmp
mov
push
sbb
fucom
pop
test
cmpsb
test
xor
dec
ja
shlb
nop
dec
outsb
jmp
or
dec
rol
and
pop
pop
jge
cmpsb
jecxz
xor
cmc
cli
inc
movsl
sub
movsb
pop
inc
ret
adc
xor
shr
cmp
idivb
xchg
insl
enter
lods
loop
mov
fildll
dec
ret
xchg
push
mov
test
inc
lods
cmp
shlb
out
jle
aas
pop
pop
jne
jle
movsb
mov
sub
or
xchg
arpl
mov
and
aaa
dec
and
sbb
dec
test
xchg
mov
and
clc
ret
shlb
clc
mov
imul
popa
jl
inc
cmp
jge
cmpsl
cmp
jns
cmp
jne
inc
cmp
pop
ljmp
jne
sub
mov
inc
stos
add
cmp
and
sub
lcall
test
movsb
popa
sub
dec
lret
jb
int
inc
xchg
lea
popa
or
xchg
stc
out
push
rcrl
insl
sbb
std
mov
mov
loope
outsl
inc
push
rcrl
mov
daa
mov
pop
xchg
jae
loope
in
insb
fcoms
pop
imul
add
jge
push
mov
mov
jle
jge
sbb
mov
ss
mov
push
or
xchg
jb
lea
enter
and
jns
mov
xor
mov
imull
inc
xorb
daa
shlb
push
inc
xchg
inc
inc
xchg
call
decl
inc
out
test
cmp
mov
sbb
int
lea
sub
out
stc
sub
mov
xchg
sub
cmpsl
mov
push
cmc
arpl
dec
mov
test
rclb
cwtl
sbb
repnz
dec
dec
lret
mov
push
or
jns
pop
inc
lock
mov
addl
fcoms
mov
enter
sbb
or
shll
cmpb
std
test
mov
jecxz
ljmp
loopne
bound
mov
ljmp
push
stos
mov
mov
push
loop
xor
in
xchg
je
insb
mov
mov
aaa
imul
stos
and
push
xchg
mov
subb
je
xor
mov
in
mov
jns
ret
test
test
sbb
ret
js
pop
mov
jl
divl
hlt
js
jnp
mov
push
jmp
sub
les
pop
loope
push
add
jns
stc
mov
xor
inc
mov
xlat
out
std
out
add
insb
lea
jle
cmpb
inc
into
push
out
pop
cmp
out
enter
nop
push
dec
sub
sarl
test
xchg
cmp
push
push
mov
cmp
mov
mov
pusha
cmp
xlat
cmpsl
lds
les
mov
adc
dec
enter
leave
cmpsl
popf
sahf
mov
sub
fadds
and
inc
inc
mov
lcall
and
testl
ret
nop
adc
adc
sub
cmpps
icebp
dec
sub
fwait
adc
jmp
dec
lds
sub
mov
add
mov
test
data16
add
call
pop
lret
mov
and
fstl
dec
hlt
outsl
add
daa
aad
adc
cmp
or
imul
icebp
sub
cmc
xchg
cmp
gs
ss
mov
fs
mov
inc
mov
outsb
push
adc
dec
mov
dec
cmpb
or
jae
pop
xor
fwait
jb
and
dec
dec
adc
loop
push
dec
jmp
push
pop
push
fwait
mov
dec
nop
xchg
dec
in
xor
enter
dec
popf
add
dec
xchg
sub
add
push
lock
mov
jmp
mov
lds
push
add
xor
xor
aaa
adc
dec
add
roll
dec
inc
stc
mov
inc
mull
pop
mov
mov
adc
ret
mov
or
lods
dec
sub
jecxz
fldl
dec
ss
fmull
jne
xchg
out
in
xor
inc
mov
push
inc
popa
and
sarb
jl
leave
or
outsl
push
lcall
jb
pop
repnz
mov
sbb
pop
and
dec
mov
cltd
jmp
aas
and
xorb
sbb
cmp
sub
xchg
mov
dec
sbb
xor
lcall
sub
inc
nop
sub
pop
pop
daa
test
pusha
inc
xor
and
test
rorl
pop
addl
fstpl
and
ret
ds
dec
mov
imul
shlb
aam
hlt
cmpsb
sub
fcoml
dec
mov
lahf
sarl
cmpsb
adc
pop
jle
cli
sub
dec
cwtl
and
push
aas
je
xor
or
icebp
xchg
mov
dec
popf
and
js
jge
pop
ss
push
mov
inc
cmp
pop
cmpsl
pop
pop
sahf
jg
imul
mov
je
and
push
jg
call
cltd
add
nop
mov
sbb
xchg
loop
jno
into
mov
leave
lret
fimull
adc
mov
sbb
adc
fcompl
in
imul
mov
sbb
push
aad
arpl
dec
lea
dec
or
nop
gs
push
cmpsb
jbe
and
and
mov
or
lret
pop
ret
ret
movsl
stc
scas
mov
adc
cli
and
leave
test
pop
xchg
shlb
xor
mov
pop
push
arpl
js
xlat
cmp
and
mov
lret
sbbb
mov
sbb
cmp
into
sbb
imul
add
mov
sub
or
adc
pop
out
cmp
not
mov
fbld
cmc
cmp
push
leave
and
sbb
pop
sbbl
addr16
std
dec
add
inc
pop
and
xor
dec
test
pop
cmpsl
push
push
pop
dec
rclb
push
push
test
ret
pop
jmp
jg
xor
jmp
cmc
or
and
call
scas
enter
nop
pop
cli
subl
inc
or
sub
push
nop
mov
iret
filds
lods
cli
mov
jno
xor
dec
shl
shlb
pop
fisubrs
sub
ss
jmp
mov
insb
jae
sbb
sahf
sbb
adc
pop
mov
lcall
jle
push
je
loope
lret
lea
out
packsswb
jg
mov
jbe
cmp
jno
mov
movsb
rolb
out
inc
sbb
sbb
clc
push
ljmp
jo
mov
sub
enter
repz
mov
lea
cmovs
sbb
stc
cmpsl
not
cmp
lods
fs
lea
inc
sbb
dec
mov
sti
or
iret
arpl
jmp
repz
popf
lret
subl
jbe
stos
out
ljmp
adc
sub
mov
out
in
rcpps
jg
loop
popf
test
sbb
popa
mov
inc
jle
cmc
outsb
insb
mov
cld
or
cmp
aaa
lahf
mov
int
add
sub
in
daa
stc
in
outsb
jge
pop
jp
push
cmp
or
or
jp
and
and
adc
and
ds
fwait
inc
xchg
sbb
movsl
pushf
notl
int
add
cmp
loopne
js
stos
sti
jo
adc
nop
sub
stc
lea
mov
add
fildl
adc
das
jbe
dec
adc
dec
or
xor
in
loopne
test
lret
cmp
mov
inc
imul
into
or
xchg
sbb
fisubrs
jo
cli
outsl
popa
icebp
pop
lea
lods
das
mov
sbb
andl
call
push
adc
mov
xor
cmp
sbb
and
add
sbb
mov
xchg
out
mov
jl
inc
sub
mov
dec
dec
loop
jp
xchg
mov
insl
imul
mov
and
decb
add
xchg
ret
mov
test
lea
loop
in
mov
cmpsb
xor
mov
dec
lock
inc
movsb
into
cmc
jecxz
xlat
lea
repnz
lock
call
add
pop
fidivs
lods
clc
aam
mov
xchg
mov
jmp
inc
int
pushf
xchg
xchg
xor
imul
insl
push
mov
mov
and
or
inc
sbb
pop
inc
orl
mov
xor
je
sub
aaa
in
aad
and
frstor
or
fwait
pop
je
dec
mov
dec
add
pusha
lcall
mov
mov
add
push
mov
in
movsb
dec
pop
jo
mov
daa
mov
dec
outsl
hlt
or
mov
mov
sub
push
lret
lds
jns
and
and
bnd
sbb
test
mov
lods
pushf
xor
hlt
test
in
incb
lds
aad
fs
fstpl
push
add
or
mov
mov
lret
lock
popa
in
pop
push
sub
pop
das
test
xchg
scas
das
pop
cmp
lcall
std
rorb
jno
and
movsb
pushf
ret
movsl
daa
arpl
repnz
iret
mov
iret
outsl
cmp
jnp
push
and
bound
gs
jne
inc
or
push
enter
mov
jmp
xor
fisubrl
and
lea
lods
idivl
scas
sahf
adc
jo
aas
pushf
roll
imul
pushf
sbb
mov
leave
mov
mov
pushf
mov
popa
dec
test
scas
pop
cmp
bound
push
movsb
mov
xchg
popa
push
dec
mov
jg
sarb
sub
jne
pop
fisttpl
jae
mov
jo
cs
inc
faddl
cmp
push
mov
jge
dec
sbb
ss
stc
push
sbb
imul
sub
jg
arpl
aam
lahf
push
arpl
mov
adcb
mov
cmpsl
jo
push
pop
xor
sub
bound
iret
push
and
and
and
cmc
xor
rol
out
xor
jnp
in
lahf
mov
xchg
dec
xchg
fwait
rcrb
leave
inc
mov
sub
pop
cmpsl
arpl
out
adc
xor
sub
mov
push
scas
ror
push
add
mov
daa
jge
jo
in
pusha
push
jae
loop
in
or
adc
and
jmp
fisubrl
add
jbe
faddl
mov
aam
mov
add
mov
xchg
jp
push
mov
or
jne
xchg
icebp
fisttps
imul
mov
scas
mov
roll
movsl
mov
insb
cmp
adc
dec
inc
lahf
loope
push
es
cli
cmp
ja
daa
sub
pushf
adc
sbb
scas
cmc
dec
jl
pop
outsb
jo
mov
test
adc
iret
and
inc
ficoml
imul
ret
push
pop
inc
call
dec
lea
adc
push
jecxz
sbb
and
mov
pop
mov
aad
push
pop
sbb
jb
mov
cmc
aas
pop
lods
mov
inc
cmp
je
jb
jb
pop
ss
std
mov
sbb
bound
ret
test
and
sub
add
xchg
cwtl
sub
inc
sbb
int3
sbb
stc
dec
insl
xor
rol
or
jb
ret
and
divl
xchg
xchg
xor
shll
cmp
mov
stos
xchg
mov
ja
or
cli
inc
aam
cld
dec
shlb
mov
and
mov
push
ljmp
xor
incl
dec
shll
pop
cmp
fisubrl
sti
movsb
inc
loop
and
jns
push
stc
push
daa
lret
es
push
pmaxub
fadd
inc
jnp
ljmp
js
xchg
mov
cs
fisubl
adc
push
sub
push
gs
fidivs
js
mulb
int
imul
pop
pop
addl
movsl
mov
or
pop
dec
stc
add
cmp
jl
xchg
sbb
cld
or
jmp
dec
rcrb
mov
sub
inc
push
inc
mov
outsb
cli
outsl
cltd
lret
push
icebp
je
cmp
add
xchg
shrl
or
mov
xlat
sahf
add
pop
addb
pop
aam
lock
cld
inc
ljmp
ljmp
mov
aad
add
xor
lock
shlb
add
inc
les
flds
sbb
int3
insl
pop
mov
mov
lret
inc
sub
popa
out
inc
dec
mov
test
push
pop
or
sti
insl
inc
fdivrl
ficoms
push
inc
jl
jmp
dec
icebp
xchg
test
mov
jle
bound
lret
sbb
ret
push
lcall
xchg
lcall
mov
lcall
pop
sub
popa
mov
sbb
pop
int
addr16
dec
addr16
cmp
xchg
fmuls
sbb
inc
in
adc
cmp
mov
xchg
dec
int3
enter
push
add
mov
add
or
fstl
das
popf
push
mov
jbe
sub
inc
and
and
and
sahf
scas
mov
pop
mov
clc
or
add
ljmp
mov
repnz
pushf
data16
push
mov
or
mov
sbb
outsb
add
pusha
mov
out
popf
fsubrl
hlt
imul
cmp
xor
aaa
jmp
add
fs
push
leave
jmp
mov
mov
inc
ljmp
lock
mov
sub
lea
pusha
cli
mov
inc
in
popf
mov
or
sbb
jge
dec
imulb
sub
xchg
or
mov
fcompl
sub
or
xchg
mov
push
mov
enter
and
pop
and
sbb
sbb
xor
mov
loope
or
test
popf
xor
jnp
mov
fldl
cmp
pop
ja
pop
push
xchg
dec
mov
and
add
xchg
pushf
outsb
pmaddwd
test
shll
shrl
aas
cs
dec
dec
ret
pushf
mov
inc
lahf
xchg
jnp
nop
fsubl
scas
push
faddp
xchg
push
out
push
pop
iret
mov
idiv
loop
and
insb
mov
adc
std
mov
push
or
push
and
arpl
cltd
xchg
inc
out
pushf
add
inc
inc
or
xchg
out
in
sub
mov
and
xor
fdivrs
mov
je
pop
push
and
mov
fstl
roll
popa
hlt
roll
out
cmp
add
xor
xchg
fwait
int3
scas
je
sbb
loop
mov
cmp
jecxz
add
jb
cmp
lcall
test
bound
or
movsl
and
push
mov
hlt
fimuls
push
aam
inc
xchg
adc
sbb
mov
inc
push
sarb
sub
sub
and
mov
stos
inc
sub
shll
loop
stc
xor
jae
imul
dec
sbbl
mov
jle
cltd
adc
sbb
cmp
push
mov
je
push
mov
pop
mov
jle
cmp
iret
bound
repnz
out
sbb
mov
mov
xchg
or
test
fcom
lret
insl
rep
add
outsb
mov
insl
mov
dec
aas
mov
stos
int3
stos
cmp
ja
xorb
inc
add
es
sbb
push
lock
fiaddl
lods
aam
popa
xchg
pusha
andb
pop
xor
sub
inc
fwait
cmp
lea
mov
add
imul
movsb
pushf
pop
inc
lods
or
scas
lock
lcall
mov
xchg
dec
cltd
dec
push
xchg
icebp
imul
add
call
xchg
pop
dec
cmp
adc
subl
sub
repz
lahf
test
mov
addb
mov
dec
leave
in
sub
bound
mov
sbbb
out
xorl
mov
aam
cmpsl
daa
fadds
daa
add
jl
gs
shrl
or
dec
sub
lods
scas
adc
dec
cmp
inc
cld
mov
mov
xor
mov
lahf
mov
in
and
push
xchg
or
mov
fisttpll
push
das
push
sub
inc
and
mov
jl
pop
in
dec
in
aas
xabort
adcl
xchg
sbb
pop
xor
sbb
xchg
sti
out
pop
lods
push
or
shrl
mov
xchg
dec
aas
sahf
add
push
cmp
inc
xor
push
and
push
insl
shl
cmp
pop
pop
addr16
push
jmp
shrb
jbe
js
mov
and
adcb
out
rcrl
insb
push
and
mov
iret
and
mov
and
adc
movsl
enter
insl
imul
insl
adc
jg
lcall
lahf
add
orl
mov
jl
in
sub
jno
xchg
xchg
mov
inc
sub
outsl
sub
test
push
faddl
mov
push
cmp
hlt
je
push
ljmp
or
bound
je
ret
xchg
lcall
jl
sbb
jl
mov
xorb
mov
std
out
daa
loope
inc
and
fisubs
mov
out
dec
dec
bound
xor
aaa
pushf
shrl
sbb
lods
sub
test
adc
mov
movsl
jl
roll
ds
and
inc
push
fsubr
xchg
call
mov
xchg
add
add
mov
cltd
lcall
dec
pushf
loope
jno
nop
sub
fadd
pop
mov
mov
mov
fs
clc
mov
sti
xchg
nop
scas
add
dec
jmp
mov
cltd
jecxz
rolb
push
sub
fdivr
insl
bound
pop
je
jl
xor
insl
testb
sarb
filds
pop
inc
pop
mov
inc
sbbl
les
jg
sub
mov
nop
sub
push
les
cld
pop
push
cmp
pop
sbb
fbstp
xchg
xchg
in
pop
cmc
sbb
outsl
cwtl
xchg
fcomps
add
test
jne
lret
mov
sub
ficoms
mov
loopne
sbb
leave
mov
mov
ljmp
mov
iret
fcmovu
std
sbb
and
lret
sahf
dec
cltd
cmp
ds
andl
push
lret
mov
jne
xchg
ficomps
pop
adc
imul
dec
int
push
faddp
mov
lahf
mov
stos
jbe
mov
and
cld
sub
in
popa
cs
or
aaa
dec
orb
jge
lcall
xchg
push
imul
lahf
and
sbb
cmpsl
mov
mov
cwtl
xchg
sub
xor
push
les
push
xchg
cmp
enter
pop
or
test
push
sbb
sub
repnz
arpl
add
pushf
jns
das
je
mov
cmp
shll
jge
dec
push
mov
or
add
fnstsw
fmuls
cmp
mov
pop
or
popa
cltd
fimuls
dec
ja
jle
pop
lret
rorb
mov
push
loopne
and
rcl
inc
idiv
les
loope
div
sbb
ja
jae
jp
pop
mov
lea
loop
push
push
jbe
cmp
test
dec
xor
lods
mov
inc
or
repnz
xor
or
xchg
cltd
and
mov
jge
inc
mov
xrelease
mov
jno
repnz
lods
jae
xchg
sbb
push
mov
mov
stos
jae
mov
jae
mov
and
cmp
leave
fwait
sub
jo
add
and
out
das
xorl
mov
mov
jmp
call
aad
sbb
mov
xor
in
int3
data16
nop
sti
loopne
push
pop
or
cmp
mov
adc
clc
xchg
aad
aaa
fsubr
inc
inc
sub
sub
cmp
cli
popa
rorl
fbstp
and
jne
jge
dec
adc
inc
dec
push
ljmp
adc
out
jnp
mov
mov
pop
jbe
int
push
push
lock
sahf
push
add
pop
lea
sub
test
xchg
aam
pop
pop
ljmp
shrb
pop
push
insb
test
lods
sub
or
jne
pop
dec
pop
test
imul
dec
jg
xchg
jmp
aas
loop
jmp
push
xchg
mov
lods
mov
dec
push
jae
jb
xor
fadd
cli
xlat
dec
jne
lret
into
jns
andb
xlat
je
or
mov
aas
xchg
mov
std
int3
jo
lds
das
sbb
sub
lahf
push
or
sbb
mov
pop
push
loop
and
enter
sbb
dec
jp
pusha
pop
add
pusha
xchg
inc
or
adc
xor
or
inc
mov
lock
es
stc
test
je
lcall
xor
jae
mov
mov
mov
lods
mov
jbe
fcoml
in
push
shrb
ds
icebp
outsl
and
int3
imul
rorl
decl
mov
pusha
mov
shll
push
test
cmc
push
repnz
mov
shr
das
lret
cli
mov
and
leave
jae
cs
lcall
iret
cwtl
lds
fistl
push
filds
das
inc
mov
push
sarb
out
addl
add
mov
lds
inc
xchg
leave
xlat
test
sub
mov
adc
pusha
xor
add
xchg
mov
ret
or
xor
sbb
jecxz
cmp
pop
popf
lret
mov
mov
test
mov
std
jmp
ljmp
scas
dec
cmp
cmp
shrl
jle
mov
or
inc
pop
das
dec
loopne
jnp
and
dec
subb
cmp
mov
dec
xchg
test
cmp
mov
adcb
push
lcall
jge
sbb
xchg
adc
testl
cmp
adc
xor
mov
lock
mov
outsb
sub
pop
testb
jbe
cmp
or
fcomps
sbb
dec
dec
loope
push
stc
add
fcomps
push
mov
push
cmpsl
or
popf
push
bound
es
xor
adc
sbb
sub
lret
jmp
in
mov
xchg
or
mov
icebp
movsb
dec
idivl
fwait
arpl
xchg
ss
mov
jnp
cli
or
lock
repnz
and
stos
inc
push
xchg
xchg
mov
jge
add
cld
inc
daa
pop
aas
nop
sti
int
pop
push
mov
ret
xchg
dec
imul
in
lret
psubusw
rolb
push
mov
aas
ljmp
cmpsb
aas
jecxz
mov
bound
dec
mov
fpatan
add
daa
mov
xor
push
lods
not
imul
repz
aas
outsl
mov
insl
aam
stos
add
ja
leave
jns
ret
loopne
js
cmp
rorb
xchg
divl
test
ljmp
out
pop
lret
cmc
repnz
icebp
movsl
cwtl
mov
ds
ja
dec
pop
int3
mov
rclb
add
rorb
adc
cmp
bound
mov
or
sub
popw
adc
xor
mov
inc
mov
add
sbb
jno
out
inc
cmp
sbb
lret
push
jbe
popf
mov
mov
fwait
lret
test
xor
xchg
fwait
inc
insb
ljmp
repz
in
mov
ds
inc
and
into
dec
outsl
xchg
mov
dec
fildl
mov
aam
jb
xlat
cmp
stos
imul
jp
dec
pop
adc
stc
push
into
cli
add
pop
fs
rorb
mov
xor
and
jmp
popf
cld
mov
sbb
fistpll
repz
mov
ret
loope
and
inc
sbbl
adc
pop
jl
shlb
imul
xchg
adc
xor
xor
test
in
or
sahf
jmp
inc
sub
insb
data16
enter
aas
cmp
mov
add
pushw
push
out
aas
out
jmp
je
dec
or
inc
movsl
mov
adc
aaa
mov
lds
repnz
xor
mov
xchg
outsl
push
lds
sub
and
lahf
popf
xor
sti
out
dec
sahf
mov
mov
jle
jmp
fwait
lea
mov
orl
loopne
into
repnz
out
jp
push
xchg
push
cwtl
loope
iret
es
ret
test
sbb
mov
mov
sub
lock
xchg
and
xor
movsb
daa
clc
subl
insb
jnp
pop
add
push
lds
ret
cmpsb
outsb
mov
adc
xchg
cmpsb
push
scas
pop
inc
and
imul
or
xchg
in
sti
out
cwtl
stos
adcb
movsb
and
push
mov
cltd
and
gs
nop
imull
pop
xchg
subl
mov
mov
pop
loope
inc
clc
fimull
adc
adc
mov
out
repz
movsl
xchg
aad
lock
lret
sub
sub
mov
std
imul
gs
aas
stos
jle
adc
gs
jae
and
push
icebp
popf
or
jge
xchg
jecxz
in
inc
out
xchg
mov
in
imul
js
pop
aad
es
push
mov
jbe
js
lods
stos
jle
pop
mov
push
ret
shlb
push
icebp
out
rcr
ret
mov
rcrb
mov
or
test
imul
ds
add
divb
scas
loop
in
popa
aaa
stc
clc
dec
movsl
sbb
mov
ss
jp
xchg
xlat
cmpsl
movb
mov
push
jno
loope
add
fwait
std
cmp
cmp
sub
in
xor
les
jns
movsl
ja
push
mov
notb
out
lods
movsl
or
aas
insb
incb
cmp
das
add
adc
push
adc
mov
stos
lods
and
mov
jo
cmp
push
sbb
xor
mov
jbe
mov
add
and
daa
sbb
in
sti
fdivs
incl
fdiv
push
out
das
sti
aam
movsl
icebp
cmc
je
inc
int
adcl
sub
xor
lds
mov
inc
ficomps
jbe
sahf
and
lea
out
cli
lret
mov
aaa
lret
xchg
pop
add
push
fcmovnu
xor
outsb
jnp
inc
adc
adc
fcoms
or
xchg
sub
pop
dec
fabs
ss
rorb
xor
pop
fwait
lcall
jle
dec
jno
mov
pusha
inc
cmp
pop
push
fildll
hlt
mov
pop
iret
out
inc
xor
mov
jnp
outsb
xorb
mov
mov
lret
lcall
jmp
stos
ror
mov
insb
or
push
test
jl
pop
daa
aaa
pop
xchg
push
xor
adc
cli
push
adc
add
ja
mov
jl
pop
cmp
fbld
push
mov
dec
jae
out
lcall
popf
and
pop
fldl
or
in
pop
js
popf
inc
divb
lds
push
cwtl
incl
xchg
les
in
sbb
call
in
fcomip
emms
xlat
sbb
jmp
inc
xor
mov
outsb
jl
out
inc
shll
notl
push
arpl
pop
lcall
outsb
jmp
cltd
mov
mov
sbb
and
adc
sub
repz
mov
scas
cmpsb
insl
out
push
cmp
aaa
faddl
inc
dec
nop
std
push
add
xchg
pop
insl
ds
push
cmc
adc
jl
cmpl
jne
push
push
mov
and
sub
scas
push
fldl
push
cld
cs
dec
outsl
sbb
pushf
adc
addb
mov
xchg
sub
lods
divl
ljmp
iret
push
cmp
das
jns
sar
dec
sbb
test
jmp
sbb
inc
cmp
inc
sub
or
xor
jne
adc
jp
pusha
pop
mov
cmpsl
fmuls
adcl
test
mov
sub
push
insl
inc
adc
lahf
fldenv
iret
add
imul
push
and
pop
push
xor
pop
sbb
into
adc
test
or
pop
dec
mov
sar
adc
jecxz
mov
pop
movsl
xor
inc
adc
sbb
dec
jnp
dec
sti
push
mov
ja
gs
sbb
in
push
adc
imul
pusha
movsl
add
shlb
mov
pop
dec
imul
movsl
jg
bound
arpl
or
jno
dec
into
mov
mov
icebp
out
and
sbb
in
jo
ret
inc
or
das
adc
fstpl
imul
pop
je
mov
bnd
and
and
and
mov
mov
test
sahf
lods
pop
daa
enter
jo
sub
mov
mov
inc
jle
mull
scas
sbb
fldl
repz
jns
nop
pop
iret
sub
mov
aas
pop
fcmovu
push
pusha
pop
jns
cmp
mov
pop
cs
jle
xchg
iret
inc
mov
bound
rclb
fistl
lcall
mov
pop
aas
and
mov
roll
dec
rcr
arpl
movsb
jbe
ljmp
cltd
or
js
and
data16
lods
mov
dec
pop
inc
push
xor
jae
or
cmp
test
aam
push
or
inc
dec
dec
xchg
and
shll
xor
sar
jecxz
and
cmp
push
sahf
rcl
mov
adc
js
mov
dec
jge
push
push
pop
das
dec
fimuls
mov
xchg
or
sbb
inc
xchg
xor
loope
test
add
in
or
jbe
lret
cltd
in
dec
mov
xchg
inc
in
push
jmp
out
push
or
rcrl
ss
repz
in
mov
mov
orb
lods
adc
pop
mov
pop
into
clc
inc
popa
cmp
push
out
in
mov
js
jmp
xchg
dec
inc
mov
mov
rcrb
rol
adc
mov
aam
cmp
aam
outsb
xchg
data16
imull
mov
adc
fadds
hlt
cmp
sbb
sbb
adc
adc
ljmp
lods
and
push
enter
xchg
push
jo
push
fidivrl
mov
ljmp
pop
jle
mov
mov
ret
lret
pop
push
inc
pop
out
pop
inc
outsb
inc
xchg
leave
leave
pop
mov
ret
pop
fdivrs
sub
and
mov
dec
sbb
aaa
inc
mov
jg
add
scas
sbb
mov
sahf
xor
fdivrs
mov
outsl
pop
repnz
or
ror
dec
stos
aas
cmc
out
clc
inc
jp
shll
pinsrw
xchg
stos
jns
out
lea
std
xchg
arpl
push
or
sbb
daa
lahf
sbb
push
aad
daa
sbb
mov
outsl
ret
push
sbb
sub
outsl
push
adc
pop
cmp
testb
into
jbe
popf
and
ret
cmc
ja
pop
inc
cmp
cmp
jbe
mov
add
int3
aam
mov
xchg
cli
ror
cmpsl
das
out
mov
inc
mov
loop
lcall
cmc
push
xchg
inc
sub
sbb
push
imul
xor
out
je
jecxz
push
or
cmp
lods
xor
inc
jg
dec
in
out
data16
jns
int3
out
and
stos
js
mov
test
addb
adc
mov
jae
mov
xor
orl
and
cmp
cltd
sub
cs
or
jmp
cmp
jo
test
jp
xlat
add
test
jb
fnstsw
or
mov
sub
or
push
nop
jl
or
mov
leave
sbb
dec
or
cmpb
cli
mov
into
sub
push
sub
and
mov
sarb
adc
cld
mov
push
cmc
adc
inc
addb
dec
mov
pop
ss
lock
jns
test
mov
test
popf
es
aam
adc
les
and
jns
add
cmp
int
int
js
repz
cmpsl
rorl
and
fs
loop
push
in
out
rclb
movsl
mov
mov
xchg
sbb
or
rolb
cmp
push
cmp
mov
adc
in
out
cltd
cmp
sub
sbb
sub
pop
add
cmc
push
mov
and
jp
xchg
mov
fldt
idivb
fdivrs
std
shlb
dec
lods
mov
loop
inc
or
push
data16
stos
hlt
add
imul
sbb
pop
outsl
jle
or
into
arpl
push
inc
bound
jns
cwtl
fdivrs
pop
xchg
testl
fdivrs
pop
jne
js
popa
loopne
nop
add
pop
cmp
add
lcall
cmp
loop
or
ja
pusha
mov
shrb
inc
enter
loopne
mov
inc
pop
lret
xchg
lds
outsb
imul
pop
mov
hlt
aas
arpl
xorb
add
xchg
and
sbb
and
stos
lret
pop
lcall
ret
mov
stos
aam
mov
xor
shll
xchg
push
mov
adc
lea
inc
clc
test
jle
je
je
in
pop
jecxz
clc
push
cmpsl
jae
jmp
ljmp
xor
int
insl
cmpsl
sub
pushf
sub
loope
mov
mov
add
in
mov
mov
test
cmc
out
in
adc
rcrb
cmpsb
movsb
sbb
cmpsb
ficoms
mov
push
cmpsl
inc
aas
in
nop
xchg
pop
sub
test
inc
jmp
jb
jae
dec
stc
adc
add
mov
lock
lock
lahf
cmp
imul
cs
lds
add
lret
mov
lea
lods
sub
mov
mov
subb
mov
xor
xlat
imul
dec
sub
adc
push
das
imul
ja
sub
add
push
xchg
lret
cmpsl
jns
out
adc
mov
fistps
lods
xor
cmp
jmp
jnp
pop
pop
lea
int3
ret
jbe
lods
mov
mov
xor
fisubrl
out
rorb
mov
xor
imul
xchg
sbb
add
or
pop
into
push
div
cmp
ret
jge
xchg
adc
dec
roll
repnz
lods
sbb
cltd
inc
sub
xor
int3
lds
adc
scas
mov
insl
adc
and
test
aad
ja
cmp
mov
sub
dec
inc
fsubr
cmp
inc
jo
out
hlt
dec
or
pop
cmp
cmc
sar
pop
push
xchg
pop
dec
incl
into
mov
push
test
cmpsl
test
fdivrs
sahf
inc
add
add
mov
mov
and
sarb
lret
rcr
mov
fcompl
mov
lret
sub
and
xchg
add
pop
mov
rcll
xor
aas
dec
dec
and
add
or
or
loop
out
push
mov
aam
sub
add
fcomi
mov
fnstenv
or
cmp
imul
fnstsw
adc
jb
push
xor
push
add
aam
jo
mulb
fbld
in
imulb
mov
push
mov
jno
cmp
out
pop
xchg
call
inc
jne
xor
xor
mov
push
cmp
lods
cltd
inc
cli
cmp
loop
sahf
cmpsb
dec
or
mov
pop
std
popa
mov
lret
lcall
mov
call
mov
insb
add
out
pop
mov
mov
or
mov
jp
jae
js
or
ret
mov
fnstcw
aad
icebp
push
fnstcw
cmp
sarb
or
xlat
lods
loop
and
jno
shlb
stos
enter
loop
mov
push
fimull
jno
or
jg
pop
shrl
push
jp
int3
or
cmpsb
dec
repnz
mov
hlt
cld
sbb
es
mov
subb
jmp
test
outsb
out
ret
cmpsb
rorb
shrb
sub
js
movb
in
fwait
push
sub
loop
mov
xlat
xor
sub
je
scas
cmpsb
xchg
mov
mov
fimuls
jl
add
adc
inc
jnp,pt
stos
xlat
xlat
xchg
sysret
dec
dec
adc
pop
xor
scas
xchg
inc
add
in
push
mov
fcmovnbe
shl
cmp
fadds
jne
xor
hlt
test
loop
out
jbe
mov
fsubl
mov
dec
fs
mov
sbb
mov
xor
call
int
dec
xorl
ljmp
gs
inc
add
mov
xchg
ret
sbb
xchg
cmp
mov
xchg
rclb
imul
adc
paddusw
neg
xchg
sub
sbb
es
popaw
rcll
push
int
pop
jmp
or
lret
push
jo
adc
mov
cs
mov
xor
inc
xchg
push
jmp
pop
and
add
aaa
ror
fstpt
xchg
xchg
cmp
ss
xchg
inc
sbb
lds
ja
adc
test
int3
pop
and
leave
test
outsb
fdivp
pop
lods
jns
jns
mov
and
cmp
bound
sbb
cmpsl
fwait
xchg
inc
mov
scas
xchg
mov
xchg
mov
adc
and
lods
push
into
push
and
mov
pop
out
xor
popf
sub
mov
sbb
mov
iret
pop
xor
jnp
dec
das
jg
call
sti
stc
xchg
pop
pop
xchg
mov
cli
xlat
cmp
in
jb
out
xchg
fstpl
dec
dec
and
repz
ss
jp
lret
fidivrs
pop
loopne
mov
in
inc
enter
out
jmp
lret
push
daa
mov
mov
cltd
sbb
mov
fdivr
fisubrl
fwait
push
hlt
test
or
and
cmpsl
push
mov
shl
mov
mov
fisubl
xlat
repz
data16
cmp
pop
std
cwtl
cmpsb
aam
scas
in
mov
aaa
nop
jp
in
xchg
pusha
mov
mov
push
or
push
mov
imul
cltd
mov
rolb
scas
cmc
lods
in
je
mov
loop
xorl
sub
and
ret
inc
inc
adc
icebp
jmp
adc
arpl
push
sub
je
pop
push
mov
sbb
cmp
xchg
or
xor
jp
mov
repz
pop
jno
jl
cltd
jne
daa
mov
push
in
fs
leave
add
into
mov
icebp
shlb
es
jmp
mov
jo
inc
and
or
mov
push
aad
jg
sub
popl
jne
jecxz
into
xchg
pushf
cltd
jae
sub
adc
out
xchg
mov
adc
jbe
pop
out
cmp
jnp
cs
pop
inc
xor
jae
sbb
dec
aam
in
int
cmc
inc
xor
out
loope
inc
lods
jno
mov
jbe
push
push
loope
nop
repz
adc
nop
out
pushf
dec
inc
mov
sub
mov
xchg
mov
iret
mov
mov
or
in
ret
jp
or
repz
ret
jmp
fs
dec
stos
and
adc
sub
mov
stc
adc
push
call
push
adc
data16
xchg
xlat
cmpsb
mov
and
iret
test
stos
test
mov
lods
pusha
cwtl
mov
int
xchg
mov
in
push
inc
jne
xor
cs
ret
in
mov
std
js
stos
lahf
push
das
and
into
xchg
push
es
sbb
cs
fnsave
add
xor
xchg
out
push
adc
stc
ret
mov
insl
xchg
mov
push
mov
inc
inc
pop
cmp
je
lcall
and
popf
addr16
outsb
cmp
rclb
pop
jns
inc
pop
or
notb
inc
js
in
inc
hlt
sub
int3
adc
xchg
or
arpl
les
pop
dec
jbe
gs
sub
push
es
lds
push
sbb
cmpsl
pushf
test
sub
ljmp
sbb
popf
aad
sbb
push
cmp
lret
xchg
sub
cmp
dec
hlt
push
push
insb
inc
les
mov
aas
xchg
mov
xchg
pop
add
loope
or
push
dec
je
push
lods
jns
xchg
test
loope
xchg
in
lods
fs
mov
inc
inc
les
aam
jp
test
into
ds
test
addr16
inc
and
les
in
mov
pusha
add
or
inc
xor
mov
sub
lret
push
int3
xchg
push
mov
lds
mov
and
push
lcall
adc
sahf
in
mov
fcmovu
inc
lahf
in
jmp
add
sbb
mov
push
rorl
mov
xor
mov
repz
xchg
inc
andb
inc
adc
jne
jno
or
sub
mov
mov
fdiv
xor
addr16
and
dec
addr16
or
mov
cld
mov
xchg
enter
mov
xor
lods
gs
ljmp
cmp
pop
gs
imul
sarl
outsl
sub
jo
push
cmp
mov
and
hlt
js
popf
sarl
repz
cmp
and
xchg
inc
xor
fwait
pushf
mov
sub
and
xor
js
adc
je
xor
int3
xor
je
enter
test
lods
testl
dec
push
push
dec
ljmp
sbb
cmp
sub
and
pop
gs
les
loope
and
inc
mov
mov
or
stos
and
rcrb
mov
mov
xchg
ljmp
out
dec
add
push
stos
fsubs
not
mov
mov
mov
lret
adc
cmp
adc
cwtl
jns
mov
jno
daa
lcall
mov
ror
fidivs
jns
lcall
xchg
or
in
popa
or
lds
outsb
sub
dec
push
and
fcmovne
push
xor
pop
jle
testl
repz
in
adc
add
cmp
push
lods
enter
mov
xlat
inc
sbb
pop
push
fdivrs
or
fidivrs
test
mov
out
pop
cld
dec
mov
repnz
aas
mov
mov
fsubs
and
mov
dec
xor
push
in
add
adcb
rcr
icebp
xchg
adc
into
cltd
idivb
cld
mov
enter
push
arpl
add
jge
lret
dec
es
dec
xor
call
idivb
mov
inc
aam
clc
mov
mov
pop
fcompl
ret
jbe
imul
arpl
pop
cld
push
sub
negl
xchg
outsl
cmp
aaa
xchg
dec
scas
je
pop
adc
add
xchg
mov
xor
stc
ret
call
push
test
enter
pop
ds
sub
sti
xchg
popf
dec
enter
mov
les
pop
ret
cmpsl
popf
pop
dec
in
cmp
fldl
fsubrl
inc
into
jnp
or
xchg
pop
jo
push
clc
repnz
dec
adc
jg
fmulp
scas
push
or
inc
cmp
push
mov
dec
int3
add
sti
dec
nop
sub
and
test
inc
xor
outsl
add
adc
xchg
jnp
sub
sub
mov
aas
bound
xchg
repz
sahf
out
into
and
sbb
fnstenv
jne
movsl
cwtl
adc
andb
into
push
ljmp
rcl
insb
gs
xchg
push
mov
repz
mov
fisttpll
mov
pop
mov
pop
or
add
insb
int
in
daa
jb
fs
pop
jo
mov
das
rolb
sahf
xor
sti
xchg
add
inc
cmpsl
mov
jle
pop
jnp
lret
inc
ret
jg
jb
aam
xchg
scas
xchg
mov
rorb
imul
sub
and
push
out
inc
leave
jo
cmp
push
mov
mov
sahf
arpl
lcall
jmp
or
clc
les
stos
pop
scas
push
jne
mov
jp
or
or
inc
fwait
xor
lods
push
mov
hlt
mov
lods
nop
push
cmp
push
add
cmp
xor
loopne
push
leave
loopne
loope
gs
push
mov
lods
pop
mov
push
pop
popf
out
xor
into
adc
mov
out
push
int
and
inc
push
insl
idivb
adc
adc
mov
fadds
or
pop
call
mov
data16
mov
pop
xchg
cmp
cld
and
xchg
jecxz
push
aaa
cld
mov
cmp
rclb
jmp
dec
imul
adc
repnz
es
jle
adc
inc
cmp
out
ret
mov
fstpt
dec
test
loopne
out
mov
out
sbb
ret
fs
mov
xor
jae
push
repnz
das
jne
aas
mov
adcb
xchg
mov
in
push
cltd
lcall
inc
pop
into
adc
push
dec
sahf
repz
popa
cmp
ljmp
imul
cmp
mov
mov
outsb
enter
mov
rcll
imul
shlb
lahf
repz
lock
call
ret
adc
xchg
jnp
mov
dec
xchg
pop
add
adc
fs
lret
sbb
push
sub
lahf
adc
dec
popf
xchg
pop
push
sub
or
or
mov
popf
rcrl
insl
hlt
push
rep
or
testb
jb
and
jg
xor
cmpsl
cmpsb
stos
xchg
push
cli
sbb
xor
xchg
xor
mov
mov
jp
mov
popf
stc
fistpl
or
fistpll
mov
jo
sub
daa
dec
mov
out
movsb
les
mov
not
sub
les
xorl
repnz
mov
clc
call
add
stos
pop
and
cmp
repz
push
and
imul
push
xchg
xchg
and
xor
fiadds
repz
mov
cmp
adc
mov
mov
mov
cmp
dec
xor
pop
ljmp
bound
cmpl
enter
adc
sahf
ja
fcoml
or
mov
lahf
or
pop
dec
sti
add
lods
pop
aam
ljmp
add
adc
cs
out
leave
adc
dec
into
xchg
mov
adc
lret
cmc
cmc
test
lahf
incl
popa
out
ret
mov
nop
xor
adcb
jmp
xor
sbb
push
nop
ret
mov
inc
sub
stos
aaa
push
push
dec
add
movsl
cli
in
jecxz
pusha
movl
or
cmp
inc
imul
into
ret
pop
xchg
pop
jmp
push
leave
pop
in
testb
push
adcb
mov
movl
cmp
and
cld
divl
dec
sbb
in
mov
inc
or
sbb
lcall
insb
outsl
mov
or
pop
jecxz
lods
add
lahf
int3
icebp
popf
insl
ljmp
jecxz
ds
pop
mov
lret
popf
sbb
xchg
jno
push
jmp
aaa
nop
mov
imulb
std
test
mov
out
fs
call
dec
arpl
in
or
leave
dec
jle
in
aad
dec
out
shlb
xor
insl
les
cli
push
xor
jecxz
js
inc
cltd
pop
adc
es
cli
mov
dec
and
inc
scas
scas
stos
pop
and
mov
movsl
pop
jne
loope
mov
jmp
push
addb
repnz
xor
clc
std
and
out
es
and
cld
stos
aad
jb
cmp
aad
dec
mov
insb
iret
pop
cmpsb
sbb
push
fwait
nop
cli
int
cmp
mov
push
and
dec
xorb
cmp
sbb
lcall
les
inc
dec
gs
push
insl
mov
sub
push
jp
test
lods
movsl
xchg
or
bound
pop
xor
rol
xlat
pop
out
cwtl
sbb
icebp
pop
scas
push
xor
pop
sahf
and
subl
and
xchg
adc
es
jns
fidivl
subb
dec
mov
mov
test
mov
cmp
and
sahf
inc
roll
adc
iret
jmp
jmp
cwtl
sbb
or
adc
rcll
sbb
inc
insl
mov
pop
adc
or
stc
stc
jle
add
enter
xchg
cwtl
mov
in
test
jp
call
pop
shrl
jp
repnz
mov
jmp
and
push
clc
in
add
sbb
lods
jo
push
out
cwtl
adc
lret
cmp
shrl
sti
outsb
fldcw
push
adc
gs
adc
push
cmp
divb
sahf
xchg
pop
mov
sbb
sub
lods
imul
out
int3
movsl
xchg
fistps
mov
pop
jae
push
fadds
and
push
out
mov
cli
or
jge
movsl
out
jne
scas
mov
test
fidivrs
push
rcr
mov
and
push
pop
sbb
push
mov
cmpsb
pop
adc
jle
cmp
inc
inc
clc
ficompl
pop
jecxz
into
jne
adc
mov
push
inc
xchg
sub
sti
cmp
popa
pop
out
popf
outsb
nop
fwait
cltd
pop
in
xchg
out
pop
out
sub
or
adc
push
pop
push
xchg
adc
push
push
cmpsb
or
loope
cld
inc
sti
push
pop
std
xchg
and
lea
lods
push
fdivp
in
push
pop
in
lret
ficompl
orl
pop
ss
add
and
cmpsb
lret
add
push
sbb
fcompl
mov
repnz
mov
scas
lds
pop
into
xor
adc
jle
xor
mov
or
jns
or
inc
jmp
ja
push
test
iret
jne
pop
jo
int3
jns
sar
pop
sahf
jecxz
fmull
idiv
inc
cmp
dec
rcrl
xchg
xchg
sbb
xchg
in
dec
lods
test
out
mov
add
push
or
xchg
bound
cmp
pop
add
sub
adc
call
call
push
jae
pushf
ljmp
dec
jp
jb
add
xor
repz
mov
fldt
and
mov
arpl
inc
add
adc
ror
and
fildl
xchg
pop
in
push
xor
add
insl
jns
scas
cmc
adc
movsbl
cwtl
sarb
stos
or
mov
ljmp
sub
shlb
push
pusha
dec
add
je
mov
int3
cwtl
movsl
cmp
or
pop
aad
in
push
pop
repz
dec
mov
inc
dec
jecxz
xor
pusha
mov
int3
mov
inc
hlt
pop
ret
lret
sbb
push
xor
int3
jae
mov
insl
popa
and
frstor
or
pop
pushf
incb
out
ds
psubsw
sub
push
icebp
push
fisubrs
mov
add
and
xchg
pop
jne
test
daa
and
pusha
mov
mov
jmp
xor
cld
cmp
jmp
sbb
mov
test
or
daa
sbb
bound
enter
lock
fildl
es
orb
outsl
jle
push
add
xchg
dec
push
jmp
fsubrs
push
ret
aam
mov
jl
adc
jmp
in
mov
int3
jg
mov
in
dec
int
filds
push
inc
in
jmp
cmpsl
cli
sti
mov
ljmp
inc
mov
mov
cmp
les
repz
cmpsb
lds
lock
push
mov
jecxz
pushf
loope
mov
in
fldt
pusha
decb
iret
scas
mov
cmp
test
dec
xchg
xor
cs
sub
jmp
je
cmpl
jno
insb
loop
mulb
lea
inc
or
xor
pop
or
mov
mov
jmp
sub
jmp
in
out
xor
xchg
das
iret
das
and
js
pushf
mov
mov
mov
push
or
mov
pop
stos
xor
xchg
popf
filds
icebp
mov
rol
call
xorl
and
outsl
mov
mov
aaa
cs
fnstsw
lea
push
mov
in
dec
test
xor
jmp
int3
scas
push
mov
inc
xor
ja
sub
outsb
rcrb
jl
in
leave
inc
mov
mov
mov
xchg
mov
in
xlat
mov
icebp
test
inc
das
cmp
jne
mov
cmp
xchg
adc
inc
scas
xchg
mov
sub
sbb
cltd
and
lret
push
stc
data16
dec
jecxz
sbb
std
or
int
push
xchg
repz
xor
pop
cs
push
sbb
push
xchg
adc
ljmp
rcrb
xor
xchg
and
int3
pusha
push
mov
clc
push
or
sub
sbb
mul
rcr
in
cmp
vhaddpd
jmp
std
sub
mov
in
xchg
adc
add
sbb
inc
inc
and
and
xchg
outsb
negb
int
ljmp
mov
push
out
imul
fxam
cmpsb
nop
xor
add
mov
mov
test
jno
sarl
dec
cmp
dec
les
lock
pop
add
xchg
outsb
insb
test
xchg
mov
mov
xor
adc
cmp
into
sub
sahf
adc
sbb
imul
sub
lods
sub
movb
lds
enter
sub
push
jb
xchg
aam
scas
icebp
popa
test
push
mov
mov
test
std
lods
mov
xchg
and
pushl
jl
popf
inc
jg
inc
mov
xor
dec
jo
mov
mov
pop
iret
sub
sub
jle
test
ret
pusha
and
sti
add
imul
xchg
add
mov
addb
ljmp
sbb
sbb
sub
cmp
sbb
add
je
add
stc
cmpsl
movb
xchg
jl
ficoml
and
adc
cs
imul
jl
and
js
sub
daa
ret
out
lahf
xchg
dec
sub
lcall
sahf
test
xchg
xorb
fbstp
dec
push
mov
sbb
popf
mov
lea
fildll
cmp
add
insl
xchg
cld
and
add
jbe
popa
jecxz
shr
pop
mov
mov
adc
addl
in
popf
xor
xchg
out
cli
xor
mov
fwait
ljmp
lds
mov
mov
out
fldl
test
repz
add
sar
fists
test
cwtl
push
dec
arpl
test
jmp
incb
xchg
push
ja
or
xorb
or
mov
push
xor
inc
sub
xor
xchg
das
addr16
iret
retw
sub
lock
mov
and
and
sbb
mov
jns
mov
jmp
xor
popf
stc
push
jno
cmp
dec
lds
adc
jg
insl
sbb
push
mov
lcall
jle
adc
in
adc
aaa
lds
and
xor
notb
sbbb
sarl
sbb
add
sbb
pop
pop
jnp
fldl
or
ljmp
xchg
mov
and
and
out
cltd
sarb
xchg
xchg
push
aam
fisubs
fsub
mov
inc
ss
into
pusha
jecxz
testb
add
xor
sbb
or
lods
xor
jns
insl
cmp
inc
aaa
push
and
stos
je
nop
add
jp
cmp
push
lret
std
mov
mov
xchg
mov
adc
xchg
mov
add
mov
in
clc
iret
mov
ret
gs
nop
cmpsb
xor
bound
adcl
jae
repnz
push
fiaddl
fidivrs
loope
fsubs
test
cli
mov
jne
jb
cmp
dec
and
mov
out
shrl
outsl
and
pusha
aam
test
pop
mov
jp
push
push
sbb
ja
and
sahf
aam
das
or
fwait
movsb
popa
loop
pop
test
testl
mov
add
lret
push
subb
je
ja
jno
xchg
adc
outsb
sbb
cs
fldt
dec
call
mull
and
test
stc
xor
out
pushf
pop
cmp
std
jne
adc
scas
push
sbb
hlt
jl
xor
inc
movsl
mov
mov
lds
or
cmp
sarl
jle
jl
xchg
jecxz
aaa
repz
dec
mov
test
pop
int
cmp
xchg
mov
sbb
xchg
sbb
pop
into
imul
adc
scas
sbb
cmp
mov
sbb
loope
push
add
ja
aaa
ret
xor
popa
in
je
xor
fwait
daa
fsubrs
imul
mov
ds
loope
push
fwait
inc
sub
add
mov
daa
push
rcll
test
mov
pop
pop
xlat
xchg
pushf
ss
mov
add
xchg
idivb
int
dec
jecxz
or
rorl
dec
gs
adcl
repz
ss
mulb
mov
insb
xor
addr16
ja
mov
sarb
fdiv
sub
cmp
and
mov
outsb
arpl
lods
push
cmpsb
imul
sub
jnp
mov
popf
jb
mov
push
arpl
dec
mov
inc
jle
fimuls
cmp
decb
lea
mov
dec
test
dec
lods
sbb
or
jg
mov
sub
shll
lea
sbb
pop
out
cld
je
and
mov
ret
packsswb
sarb
scas
ret
and
or
cld
insl
lock
jo
mov
lock
in
insb
orb
int
adc
rolb
aaa
dec
or
sahf
nop
mov
out
mov
hlt
cmpsb
adc
pop
push
popf
push
inc
cmp
stos
stos
daa
cmp
mov
dec
jmp
push
or
divb
outsb
addb
std
cmp
out
push
and
mov
sbb
cltd
lea
xchg
jmp
in
mov
pusha
pop
mov
push
mov
mov
ja
scas
mov
pop
pop
push
imul
cmp
imul
int3
push
xchg
and
ss
dec
aas
and
mov
loopew
push
push
jo
or
push
into
sbb
test
addr16
push
push
lea
int3
push
test
pop
xor
or
pop
aam
xchg
shll
fisubrs
xchg
dec
sbb
orl
fsubrp
ds
xlat
out
sbb
leave
lods
adc
imul
push
xlat
push
jp
inc
js
mov
mov
test
inc
bound
cld
stc
and
cmpsl
adc
aaa
jmp
mov
imul
jg
pop
sahf
fbstp
aaa
lds
out
ds
fcmovnb
into
add
int3
jo
lock
mov
pop
sbb
lcall
je
rcr
test
bound
cwtl
sbb
jp
add
lock
pop
aas
sbb
add
shlb
push
cmp
inc
shl
mov
mov
aas
clc
jnp
pop
inc
ficompl
dec
jmp
std
xor
pusha
jne
dec
decl
dec
mov
das
mov
inc
xchg
sub
leave
mov
pushl
mov
sbb
push
loopne
dec
cmp
aam
xchg
lahf
pop
fadd
pop
xchg
cmp
adcl
out
fistl
imul
js
stc
sbb
imul
add
mov
pop
lahf
sub
insl
nop
pop
ljmp
adc
inc
ret
sub
mov
inc
jb
dec
notb
pop
mov
in
push
mov
stos
sbb
adc
xchg
push
mov
jae
sahf
loopne
lret
nop
repnz
fwait
jne
rcrl
aad
fsubr
mov
aas
out
fistps
mov
sahf
mov
loop
arpl
add
xor
push
mov
pop
dec
sbbl
mov
dec
sbb
cwtl
cmc
stos
popa
pop
sub
xor
fs
mov
cmp
outsl
mulb
sub
xchg
fsubrl
cmp
pop
test
jl
scas
push
mov
cmc
mov
xor
cmp
pop
and
rorb
add
dec
lahf
movsb
and
ja
popf
cmp
rorl
push
pop
jns
add
mov
fld
xor
jle
ds
sbb
and
outsb
add
mov
lods
repz
cmpsl
enter
dec
jecxz
addr16
jo
xor
mov
ss
leave
sub
cld
adcb
test
mov
rcrb
imul
fistpll
adc
pop
xor
lahf
and
rorb
add
inc
xorl
in
cmc
stos
and
push
push
cmp
enter
loope
inc
and
leave
sbb
jle
test
jp
inc
push
adc
xor
add
int
pop
push
and
int3
cli
dec
pop
jne
push
in
push
cmpsl
rolb
xor
xor
push
dec
pop
and
jb
mov
xchg
cmp
push
enter
js
test
imul
sti
fs
lret
inc
aaa
add
lret
or
leave
add
mov
sti
sub
jg
mov
lds
sbb
jo
pushf
sub
dec
xor
insb
jb
in
mov
jg
xchg
dec
sbb
or
bound
jbe
shlb
in
adc
adc
into
test
xchg
mov
push
insl
adc
call
sbb
mov
or
cmp
push
int3
rolb
push
mov
outsb
sbb
push
jge
aaa
xor
out
pop
dec
push
pop
lds
int
jle
les
orl
int
or
ret
sbb
pop
fcoml
pusha
popf
jne
bound
das
lods
adc
cwtl
mov
mov
and
push
sub
jnp
xchg
push
mov
sbb
mov
jl
add
fldenv
je
push
add
dec
movsb
or
jg
dec
sbb
lret
leave
dec
mov
jg
loop
cmc
pop
in
nop
mov
mov
sub
mov
cmp
pop
pop
pop
test
scas
idivb
xor
loop
imul
aam
mov
aaa
ret
clc
gs
mov
shll
sahf
pop
inc
popa
xchg
push
sub
cmp
mov
orl
cmp
push
outsl
push
fadd
enter
lea
and
test
jae
je
sbb
inc
inc
add
loop
arpl
outsl
rclb
adc
ljmp
add
mov
fisubrs
imul
mov
adc
dec
sub
out
jne
lods
push
int3
iret
push
loop
ljmp
sub
fisubs
lea
cmp
adc
outsl
pusha
mov
xlat
mov
mov
sub
dec
mov
mov
daa
negb
xchg
jecxz
xorb
mov
fbld
xor
dec
loop
push
xor
aad
in
dec
lcall
xchg
mov
mov
daa
push
rcr
sbb
dec
ljmp
mov
xor
xchg
and
mov
sbb
enter
movsb
and
mov
dec
leave
push
lds
pop
les
xchg
cmpb
jno
sbb
pop
hlt
icebp
and
test
sbbb
in
inc
jno
mov
dec
pusha
sub
stc
or
xlat
lods
jno
popf
ret
cld
std
out
mov
mov
or
xchg
bound
fisubl
lcall
jp
sbb
xchg
cli
scas
fldt
jo
stos
dec
pop
ss
into
sub
mov
adc
insb
es
or
into
in
mov
push
add
aaa
mov
adcb
fisubrs
xor
inc
lret
aas
stos
mov
enter
pop
js
movsb
repz
daa
sbb
addr16
dec
mov
ljmp
lea
es
mov
stos
push
data16
fwait
ljmp
mov
lret
sub
add
test
outsl
cmp
mov
push
test
ror
adc
xor
sub
xor
fsubs
ss
dec
clc
mov
loopne
pop
jns
dec
push
cli
or
call
fdivrs
lods
sub
mov
lret
pushf
aaa
push
mov
inc
mov
xor
sahf
inc
rcrb
mov
sarb
sahf
stos
in
mov
mov
fisttpl
mov
pop
jne
insb
aam
adc
xor
pop
xor
fcomps
and
outsl
adc
icebp
gs
mov
das
xchg
adc
inc
push
jno
pop
xchg
shll
leave
push
aas
sahf
dec
insl
call
cmp
insl
adc
subl
hlt
enter
or
push
int3
testl
jge
push
adc
loop
mov
mov
shll
mov
enter
push
sbb
jmp
adc
inc
xor
idivl
jl
fdiv
arpl
xor
roll
mov
mov
sti
add
mov
call
lcall
cmpsb
mov
arpl
xor
xchg
jge
cmp
movsb
inc
mov
sbb
cmpsb
jns
gs
inc
popf
les
arpl
mov
call
pop
mov
sub
mov
icebp
icebp
pop
ljmp
je
sub
push
dec
dec
add
sub
mov
pop
ficompl
xor
push
mov
in
call
xchg
push
cltd
pop
mov
sbb
js
push
adc
pop
arpl
mov
jg
ljmp
dec
mov
sbb
and
test
mov
cli
cs
dec
sub
lods
adc
xchg
cs
adc
movsl
xchg
xchg
pop
je
jne
dec
jb
arpl
pop
inc
pop
dec
pop
inc
sbb
scas
pop
jecxz
insb
fimuls
pop
sub
dec
mov
popa
pushf
movsb
xchg
insb
push
mov
cmp
push
loopne
inc
outsb
cld
sti
jle
adc
bound
shlb
adc
jns
es
adcb
xorb
out
xchg
orl
sub
xchg
mov
mov
pop
dec
lods
xchg
jne
jo
sti
xchg
scas
lock
dec
nop
mov
inc
xchg
orl
movsl
sarb
or
clc
inc
dec
mov
or
xor
insl
sub
pusha
xor
fildl
ss
adc
lea
clc
mov
or
loop
imul
test
scas
push
or
lea
push
shlb
lea
mov
leave
outsb
xchg
jmp
iret
adc
les
push
or
loope
or
iret
outsl
fwait
std
jnp
jnp
inc
sbb
fmuls
or
pop
daa
lea
pop
int3
mov
mov
mov
mov
jecxz
add
pop
mov
outsl
dec
aam
xchg
add
jmp
in
movsb
mov
xor
leave
gs
push
aam
mov
jl
test
adc
into
jmp
lea
or
ljmp
and
shrl
int
sbb
pop
push
push
sahf
adc
scas
cmp
add
inc
or
mov
pop
out
xlat
lret
mov
in
lahf
jae
and
jl
test
and
adc
jae
andl
icebp
fnsave
jg
aam
sarl
mov
dec
xor
mov
mov
pushf
fnstcw
cmpsb
in
in
dec
jns
shr
xor
ret
cmp
jbe
fistl
jo
lret
or
mov
mov
jbe
jg
repz
stos
je
and
mov
pop
repnz
addb
cltd
sub
cmp
push
bts
mov
xor
or
mov
sar
xor
sar
inc
mov
ret
mov
imul
xor
xor
cmp
adc
mov
shll
rcrb
sub
jnp
cmpl
mov
cli
cmp
mov
aaa
xor
xchg
xor
cmp
insb
add
xchg
pop
lcall
fldenv
les
adc
pop
leave
sbb
cmp
jo
sub
push
rorl
push
mov
jae
sbb
adc
cmp
fldenv
sub
mov
pusha
scas
and
aad
adc
push
shrb
add
shll
icebp
sbb
cmpsb
dec
or
enter
adc
dec
inc
aaa
sub
inc
popa
or
dec
cmp
fs
mov
inc
jo
and
push
jle
int3
and
push
out
stos
dec
rclb
pop
ja
out
mov
sub
mov
sub
adc
mov
test
and
dec
pushf
out
lret
cmp
cmp
push
lds
xchg
xor
lods
jl
sbbb
bound
test
dec
inc
adc
jbe
xchg
imul
push
lahf
aas
nop
sub
sub
inc
mov
cs
rorb
lock
jb
mov
mov
sahf
daa
add
mov
jle
adcl
dec
mov
lock
pushf
fimuls
andl
cli
cltd
cmp
adc
out
icebp
mov
mov
xor
jae
dec
out
subl
pushf
inc
cmp
mov
or
inc
iret
pop
sub
pusha
dec
jle
popa
cmp
and
mov
push
cmpsb
push
cmovb
xor
iret
push
enter
mov
inc
ret
daa
ja
notw
mov
sbb
filds
popa
add
and
jle
mov
dec
inc
leave
jns
mov
outsl
test
js
adc
mov
sbb
pop
or
cmp
aad
and
mov
inc
daa
jg
imul
xchg
and
or
mov
sub
jo
call
mov
mov
jb
mov
shr
xchg
xchg
and
mov
cli
out
loopne
mov
push
ret
cltd
cmp
pop
loope
and
jle
into
xchg
pop
into
addl
mov
cmc
lret
mov
lock
dec
mov
sub
sti
sub
xchg
pop
push
xor
add
push
push
add
mov
pop
call
lods
fisubs
lock
cmc
popf
cmp
jo
mov
mov
popa
xor
clc
out
ret
cmc
push
push
mov
shrb
cmp
mov
push
cmpsb
mov
mov
bswap
dec
fldcw
imul
jb
fistpll
push
fidivl
sub
roll
shl
cs
jns
imul
jl
mov
xor
fwait
int
gs
hlt
cmpsb
dec
push
cmpsl
and
sub
outsl
out
cmp
push
inc
jl
and
cmp
arpl
xchg
pop
movsl
stos
imul
mov
addr16
or
jno
ffreep
inc
movsb
xchg
mov
pop
jnp
push
mov
popa
test
cli
adc
mov
pop
dec
mov
js
or
dec
sahf
sbb
mov
push
sahf
push
push
dec
addr16
sbb
mov
sbb
mov
lds
adc
ss
int
cld
adc
mov
fnsave
jge
cmpsb
das
adc
add
mov
push
bound
adc
lock
inc
add
or
mov
mov
cmp
rcrl
add
popa
mov
sbb
cld
or
xchg
pop
sub
ljmp
cmc
xor
ss
mov
testl
inc
fisubs
inc
push
mov
jl
push
sbb
rcrl
pop
dec
and
or
jo
jecxz
stos
inc
push
fwait
xor
aaa
pop
push
jmp
pusha
add
inc
test
or
and
cmovl
mov
mov
sub
insb
push
mov
push
push
or
xor
inc
xor
popf
sub
adc
imul
or
je
in
loop
out
push
cltd
sarb
mov
in
rorl
jnp
mov
lock
scas
or
pop
out
jg
jmp
inc
outsb
or
call
cmp
adc
popa
cmp
jp
xor
push
mov
pop
push
pop
push
or
mov
mov
jmp
mov
jmp
icebp
fsts
stos
loop
xor
ss
add
ficoml
loop
push
dec
mov
cmc
mov
cmpsb
ja
push
mov
lods
daa
pop
push
data16
xorb
fcmovbe
ljmp
xchg
test
inc
push
dec
inc
and
xlat
mov
call
sahf
scas
inc
mov
fisubrs
scas
rol
ss
cwtl
mov
or
rcl
pusha
movsb
mov
dec
jo
imul
dec
sub
add
ljmp
jmp
cmc
or
inc
push
xor
add
push
cmp
xchg
divl
stos
insb
cmpsl
in
lods
mov
movsl
fidivrs
test
cmp
orl
ja
sbb
jbe
sub
inc
sarl
sub
roll
orb
out
lock
push
dec
ret
adc
movsl
cmp
icebp
ss
arpl
add
xor
shrb
mov
mov
movsb
dec
add
mov
or
inc
and
in
mov
imul
mov
dec
std
test
pop
sbb
sub
mov
pop
or
adc
test
pushf
nop
inc
mov
mov
inc
add
pop
sub
iret
fcompl
cs
cmp
cmp
rcl
fs
insb
cs
pop
aas
dec
cmp
repnz
push
aad
test
push
out
sub
or
sbb
add
pop
dec
add
andb
das
push
stos
test
cmp
sbb
popl
mov
sarl
adc
inc
cmp
lods
cmp
push
mov
jl
out
inc
mov
jecxz
xchg
sahf
lods
push
sbb
and
rorb
addb
sub
xor
xchg
int
xor
and
lret
cli
mov
roll
or
and
cmpsl
mov
arpl
dec
aam
and
hlt
fisubs
loop
mov
jnp
inc
popf
or
cli
ffree
jnp
push
shll
cmp
mov
shrb
pop
jg
sub
xchg
cwtl
cmpsb
mulb
ljmp
push
push
scas
xchg
mov
negb
inc
lea
fidivl
xchg
mov
mov
pop
xor
add
jmp
loop
push
jno
cmp
mov
add
fwait
mov
cld
cmp
mov
add
outsb
jnp
in
out
and
mov
punpcklbw
mov
fs
movb
out
xor
pop
adc
hlt
fcoms
rol
fst
sub
cmp
lea
pusha
enter
lahf
enter
shll
out
in
insl
cltd
ss
cmp
lock
out
js
sbb
cwtl
mov
push
mov
push
push
stos
das
dec
pop
mov
cmpsl
pop
cmp
leave
enter
pop
pop
ds
mov
pop
sbb
fwait
lods
test
lea
mov
nop
outsl
xchg
push
std
sub
fstl
iret
testb
lock
dec
addr16
inc
lahf
andb
jp
enter
xor
lahf
jg
in
mov
outsb
push
int3
movsl
hlt
mov
pop
js
es
aaa
xor
sub
sti
mov
lret
jmp
mov
cmp
fsubrl
fbld
mov
jno
clc
repnz
pop
push
cmp
sub
xor
xor
mov
push
mov
dec
std
add
hlt
icebp
and
mov
pop
add
sub
aam
jg
push
push
les
add
xor
jnp
out
shlb
pop
sbb
mov
sahf
inc
stc
mov
mov
es
ja
jo
mov
movsb
dec
xor
and
hlt
push
or
inc
lahf
jp
mov
fistl
pop
pop
rcll
sub
aaa
mov
sbb
jae
xchg
cmp
dec
aaa
cmp
loope
movsl
ret
sbb
inc
dec
mov
ds
scas
imul
cmpsl
xchg
in
stc
jbe
stc
popf
inc
pushf
push
clc
movsl
add
cwtl
je
ficompl
mov
fucomi
in
imul
push
mov
inc
jmp
scas
in
popa
aaa
icebp
popf
or
pop
push
fdivl
mov
xchg
jb
lret
repz
cmp
cli
adcl
mov
mov
flds
lret
xchg
orb
movsb
call
dec
cmpsb
jae
mov
fwait
pop
add
mov
sub
or
aam
adc
fldenv
mov
mov
in
jp
loopne
sbb
lcall
mov
sbb
adc
inc
js
or
insb
outsb
fstps
push
subl
stos
rcrb
ss
sbb
imull
inc
ret
xchg
xchg
loop
not
mov
ret
xorl
pushf
out
rcl
push
inc
loopne
ret
xchg
ja
mov
rcr
insl
mov
dec
cmp
sub
mov
lret
js
pushl
xor
out
pop
xor
call
push
sub
mov
push
negb
flds
imul
xchg
cmp
cld
fmuls
mov
popf
arpl
je
out
mov
test
fwait
mov
push
fisttps
xorb
dec
cmp
enter
xchg
inc
jle
lock
jge
push
sbb
xchg
adc
lret
and
mov
lock
pop
adc
insl
mov
nop
pop
daa
in
xlat
xor
dec
jae
adc
xor
out
sbb
sub
adc
cmp
dec
add
int3
mov
sarl
addr16
mov
aam
aam
fidivs
inc
xchg
insl
pop
sbb
inc
dec
push
negl
dec
dec
sub
mov
fimuls
jmp
int3
sahf
cmp
inc
int3
dec
adc
sbb
push
js
lret
std
xor
mov
dec
es
repnz
lds
push
arpl
pop
sbb
std
mov
mov
cli
fwait
cmp
adc
out
outsb
dec
test
add
rolb
cmpsl
shrb
cmpsl
sbb
push
mov
mov
xchg
push
mov
jb
dec
pop
jg
mov
das
rcrl
scas
cmp
lods
cmc
dec
cmp
ret
adc
repnz
xor
fldl
mov
mov
cmp
adc
popf
lret
dec
xchg
aas
lock
dec
inc
add
sti
fnstcw
dec
in
xorb
jecxz
dec
jne
lahf
loope
cld
adc
mov
push
dec
iret
pop
rcl
lea
scas
and
xchg
in
xor
frstor
pop
cltd
sbb
dec
pop
loope
mov
xchg
inc
pop
pop
inc
mov
arpl
pop
and
cmp
rolb
xor
in
testl
rcl
mov
mov
cmp
outsl
jb
jecxz
mov
adc
int
bound
out
js
sbb
inc
and
cld
lods
xchg
and
and
idivl
popf
xor
mov
inc
std
pop
jge
and
add
pop
xchg
loop
ds
aas
bound
fistps
push
ds
xchg
sti
fdivrl
dec
imul
mov
stos
mov
in
flds
jbe
mov
hlt
lds
pop
aad
push
push
xchg
in
adc
das
leave
dec
fst
and
cmp
and
out
out
fndisi(8087
sbb
imul
icebp
loopne
in
call
ja
ljmp
pop
out
stos
push
inc
fcmovnb
dec
lods
push
cltd
gs
popa
inc
push
das
ds
js
cmp
sahf
mov
scas
addr16
in
or
xchg
fsubrs
or
aaa
add
mov
adc
push
jno
xchg
pop
scas
xor
jae
cmpsl
push
fisubrl
out
jle
lods
add
inc
mov
inc
pop
xor
inc
in
gs
pop
cwtl
stos
decb
icebp
xchg
xchg
faddl
jnp
and
push
cltd
and
imul
and
imul
xchg
cmpsl
icebp
sbb
lcall
xchg
int
lea
in
push
int
xchg
lahf
sti
inc
add
fbstp
loope
xor
add
int3
aad
int
mov
mov
sbb
jecxz
or
out
cmc
jmp
lock
pop
inc
jg
addr16
int3
dec
fs
cmp
or
aas
lret
out
in
imul
sub
xchg
ds
popf
push
jmp
stos
or
or
aam
mov
imul
in
addr16
mov
push
cmpsb
xchg
mov
sbb
and
out
xor
and
push
rcrl
jne
ret
test
jmp
xor
xchg
inc
mov
mov
cltd
sbb
cmp
pop
mov
push
jae
shll
xchg
mov
leave
negl
testb
mov
sub
inc
dec
or
je
popl
cmc
mov
xor
out
in
loopne
adc
icebp
int
sub
xor
cmc
add
push
mov
andl
cmpsb
mov
jne
fsubrp
and
jge
and
cmc
daa
push
js
popf
lahf
mov
xor
dec
das
gs
mov
jae
cli
mov
movsl
inc
mov
push
sti
jae
lock
mov
push
sub
in
mov
mov
sarb
nop
push
jbe
and
inc
hlt
mov
jbe
ucomiss
inc
pop
and
into
lahf
mov
add
or
mov
jno
and
lret
enter
mov
insl
aas
pop
lahf
push
mov
dec
and
test
cld
negb
pop
push
inc
jp
cmpsl
push
xchg
jl
test
lahf
loope
jg,pt
jecxz
xor
shll
mov
jno
and
call
pop
rcrl
or
daa
xorl
ret
in
scas
jbe
in
imul
jo
xchg
xchg
pop
sti
cmp
in
daa
mov
hlt
adc
xchg
jmp
dec
mov
dec
lahf
ja
sti
fisubs
cli
and
fwait
hlt
xor
mov
push
sub
rolb
js
mov
pop
rolb
roll
push
push
inc
mov
out
pop
sbb
fcmovb
push
jb
push
lds
jbe
jno
mov
loope
xchg
lcall
idivb
inc
xchg
out
push
arpl
lock
bound
inc
faddl
jne
jl
movsb
sub
addl
xor
enter
fildll
pop
fldlg2
sahf
xor
xchg
mov
xchg
imul
xchg
mov
popa
mov
push
jecxz
mov
fldt
movsb
push
lods
pop
pop
dec
mov
dec
out
push
inc
aaa
inc
imul
jae
and
mov
push
outsb
sbb
dec
push
adc
inc
aas
add
test
xor
cmc
dec
das
fcomi
std
fdivr
sub
cmpsl
sbb
decl
imul
aam
enter
lcall
mov
fs
pop
push
jl
sahf
sub
mov
mov
rcr
mov
cmp
or
jp
sub
mov
daa
adc
rcrl
add
or
fisubrl
incl
int
jb
aad
adc
or
addr16
clc
mov
loopne
pop
push
fdivl
stc
imul
outsl
pusha
roll
mov
xchg
mov
adc
sub
fwait
popa
inc
addr16
xchg
sti
cmp
mov
mov
cs
les
loop
imul
add
mov
ret
testl
pop
mov
inc
and
idivl
mov
inc
push
lods
xchg
mov
test
inc
scas
das
inc
xchg
stos
arpl
dec
sub
adc
roll
add
fscale
loope
add
add
loop
imul
cld
stos
add
add
jnp
xchg
pop
out
sbb
or
inc
lods
je
jecxz
cmpsb
mov
xlat
cmp
push
push
sbb
mov
orb
mov
mov
mov
sti
sbb
out
lods
out
cmp
push
outsb
dec
cmpsb
inc
lahf
aam
xchg
pop
mov
cmp
jb
vmovups
jg
pop
in
cmp
lret
mov
lahf
aad
adc
testl
sbb
xlat
bound
cmp
mov
scas
jmp
addr16
outsb
out
jne
addr16
mov
dec
test
popa
cmpsb
xlat
pop
leave
cmp
aam
dec
rorl
xchg
adc
orb
lock
add
dec
cmc
or
sbb
jbe
cmpsb
sbbb
jo
es
push
aas
mov
and
dec
xchg
cmpsl
ljmp
pcmpgtb
xchg
xchg
pop
jg
fadd
pop
andb
cmp
pop
sub
xlat
xchg
cmp
pop
push
adc
lea
stos
fldl
xor
push
adc
jnp
cwtl
add
add
call
jno
sbb
push
lret
lret
cmovg
and
and
xchg
and
pop
shll
jmp
pop
and
pop
nop
lcall
dec
ja
mov
xchg
xchg
js
sbb
iret
mov
stos
daa
push
cmp
adc
jno
xchg
shl
lods
mov
mov
loop
jnp
icebp
lahf
dec
stos
or
mov
mov
mov
sbb
data16
cltd
or
into
inc
jl
xor
mov
jns
arpl
mov
or
and
ja
cmp
fstl
dec
negb
call
add
dec
rorb
adcb
mov
sahf
sub
jbe
fistpl
adc
xchg
jno
nop
ljmp
iret
out
and
and
cld
inc
pop
js
cmp
out
pop
ja
js
cmpsb
addr16
imul
jo
cmpsb
sub
pusha
fidivl
enter
push
inc
outsl
jp
cmp
aad
mov
pop
pop
inc
cltd
cmp
nop
dec
mov
pushf
xor
shll
xchg
dec
adc
loop
push
ds
mov
ljmp
loopne
or
dec
pop
and
nop
sub
and
adc
cmp
xor
xchg
dec
inc
adc
insl
push
rclb
pop
jno
fimuls
jo
lahf
ljmp
lea
stos
dec
pop
or
arpl
mov
and
and
cwtl
pop
push
decb
inc
inc
insl
jl
in
dec
push
jl
outsl
mov
adc
mov
jns
roll
sub
fdivrl
mov
xchg
out
imul
daa
in
test
dec
pop
push
lock
sbb
rcrl
outsb
lds
shll
popf
aad
dec
jg
inc
test
loop
cwtl
dec
xor
sub
in
mov
pop
push
aad
outsl
xor
testb
fabs
add
push
xchg
mov
pslld
dec
sub
push
insb
jp
out
add
or
outsb
das
mov
decb
in
sbb
fidivrs
sbb
push
lret
shll
imul
push
push
daa
aam
add
cltd
in
push
js
out
arpl
push
loopne
ret
pop
add
xchg
fstps
cwtl
pavgw
and
insb
jnp
test
jg
sub
in
or
jge
fnstsw
aas
push
adc
insl
cwtl
stos
pop
daa
jno
inc
jnp
repz
movsl
pop
lods
add
lods
pop
sub
add
mov
and
das
dec
stc
lcall
enter
fstp
or
pop
xchg
add
lock
jmp
nop
add
mov
ret
shll
mov
inc
sub
movsl
rclb
pop
inc
insl
cmp
push
aas
adc
lea
push
fdiv
pusha
pop
int3
mov
sub
cwtl
jbe
lds
push
shll
push
push
cmp
and
jae
or
test
xor
mov
aas
lahf
outsb
sub
jns
pop
mov
adc
pop
enter
push
sub
negb
hlt
and
cmpsl
cmpsl
jno
push
addr16
or
push
push
push
mov
add
and
adc
or
sub
add
fisttps
sbb
sub
outsl
test
shr
repz
xor
lds
cmp
ror
test
or
mov
fstl
add
iret
mov
insl
jno
cmp
aas
or
aas
maskmovq
imull
loopew
push
mov
mov
test
mov
aad
add
dec
ret
adc
es
push
test
arpl
or
mov
test
adc
movl
out
outsl
sub
xor
inc
aaa
xchg
jg
inc
lcall
adc
mov
push
sbb
in
inc
out
and
testb
fwait
leave
gs
ror
addr16
cmpsb
fwait
call
add
mov
sbb
es
mov
inc
test
andb
push
movsb
jle
inc
jecxz
mov
xor
imul
jb
add
cmpsl
mov
in
notb
xor
cmp
andb
lods
movsl
popf
addr16
imul
dec
outsl
pop
pop
es
xor
push
fdivs
pop
mov
popa
cmpsl
sub
fidivrs
pop
orl
or
pop
xor
lret
loope
arpl
ja
adc
dec
push
sbb
jno
aam
in
mov
cmp
jae
movsb
shl
aad
push
std
fstpl
mov
jb
icebp
mov
fsubrs
int
dec
dec
movsb
fdivrl
add
wrmsr
call
in
shrb
sub
mov
je
add
adc
clc
jl
inc
and
call
in
shrl
inc
repz
sahf
sub
shlb
shlb
ja
pop
sbb
lods
loopne
cld
mov
shl
push
shlb
sub
fsubrp
pop
add
mov
jne
fists
and
leave
call
jnp
repz
movsl
sub
push
into
cmpl
int3
into
adc
int
loope
push
dec
call
aad
jmp
lret
inc
mov
repz
fisubrl
pop
jle
jle
push
lea
jmp
mov
mov
push
xchg
aad
add
mov
xchg
adc
out
mov
adc
xor
jecxz
mov
mov
sub
loope
xor
jno
and
std
push
scas
mov
iret
rorb
aam
or
insl
pop
dec
arpl
cmpsb
cmc
outsl
add
xchg
enter
inc
daa
mov
cld
or
lea
daa
pop
cwtl
adc
imul
cmpsb
sti
mov
nop
fabs
sbb
cmp
dec
mov
cmp
dec
das
xchg
hlt
ss
pop
insb
flds
mul
fstpt
mov
mov
in
pop
pop
adc
add
pop
scas
adcb
inc
stos
loopne
jecxz
in
repnz
jecxz
fnstenv
mov
inc
mov
push
adc
sub
lea
call
movsb
mov
adc
push
adc
mov
inc
mov
out
and
or
adcb
pop
lcall
ds
xchg
cli
push
scas
lret
jp
arpl
inc
in
hlt
ljmp
arpl
xor
jae
lock
pop
push
daa
mov
mov
xor
lds
jne
movsl
push
outsl
addr16
stos
dec
pop
loopne
mov
js
sub
mov
pop
mov
in
sahf
iret
jne
mov
shrb
pusha
jae
inc
in
fisubrl
dec
pop
xchg
dec
bound
or
rcr
mov
inc
ret
stos
xlat
test
lds
sub
cld
mov
das
adc
filds
and
push
pop
cli
mov
cwtl
and
imul
mov
inc
sbb
clc
mov
daa
outsb
cld
adc
xchg
aaa
ss
clc
flds
fbstp
cmpsl
xor
arpl
add
imul
or
dec
iret
xor
mov
neg
hlt
add
or
arpl
jge
xchg
jb
arpl
mov
and
insl
pusha
sub
cmp
cmp
jnp
cmp
xchg
pusha
out
roll
xchg
jle
adc
ja
xor
mov
shrl
enter
stos
mov
cmp
adc
sti
repnz
aas
shlb
jle
xchg
xchg
sbb
rorl
dec
loope
das
pop
hlt
hlt
mov
fmull
pop
sub
lcall
lret
nop
mov
cli
int3
jns
xchg
sar
dec
push
in
and
inc
mov
xor
es
cmp
dec
lods
add
sbb
or
rcrb
pop
sub
movsl
bound
inc
adc
sub
mov
lret
scas
add
das
sbb
imul
jae
lods
pop
out
fscale
lods
cmp
int3
xlat
add
les
into
cs
lret
in
add
sub
sbb
push
and
sarb
and
and
out
shrb
push
imul
cmp
insb
xchg
fstps
icebp
mov
add
inc
divb
push
adc
pop
lret
mov
jae
xchg
mov
jle
cmp
arpl
push
pusha
movsb
push
daa
and
sbb
adc
xchg
dec
call
xchg
jl
iret
mov
gs
hlt
lahf
push
and
sub
jle,pt
xor
pushf
adc
mov
dec
push
adc
jecxz
adcb
cli
jp
xchg
pop
ret
mov
aad
cmp
mov
sbb
je
daa
jo
or
xor
std
adc
ret
gs
push
dec
ljmp
add
cltd
adc
or
and
loop
sahf
and
test
and
pushf
outsb
pop
xor
jle
or
mov
xchg
jnp
lods
mov
inc
dec
arpl
jecxz
movsl
scas
pop
lds
or
and
lea
aad
aad
cmp
pop
mov
dec
gs
jne
xchg
fldt
test
xchg
dec
adc
jo
movsb
test
loopne
cs
mov
dec
inc
jecxz
adcl
add
es
into
cld
loope
adc
lods
pop
mov
out
insl
or
cmc
lock
inc
imul
pushf
stos
push
mov
lock
mov
outsb
mov
popa
fwait
pop
lods
movsl
out
les
adc
in
mov
jp
jg
jnp
into
gs
fwait
stc
arpl
test
icebp
test
sbb
lds
in
gs
shrl
sahf
jmp
sub
mov
std
dec
mov
shr
jne
inc
sbb
push
and
cmpsl
jp
jne
adc
or
scas
fsubs
mov
push
and
or
sub
sub
call
test
dec
inc
cwtl
xchg
pop
and
jecxz
mov
pusha
fdivrl
pop
mov
in
dec
imul
loopne
and
xchg
cltd
or
mov
scas
cmc
dec
cmp
push
dec
cmc
insb
movsb
xchg
jmp
iret
call
jb
adc
pop
inc
or
es
enter
xor
rol
fdivr
int3
repnz
xor
iret
push
iret
dec
stos
rcll
jl
jns
insl
aas
and
push
adc
sbb
test
dec
imul
xchg
je
xor
in
lret
fldt
sbb
es
push
dec
lock
fbld
push
jge,pt
pop
shlb
mov
leave
clc
out
sub
fmull
shl
es
dec
outsl
or
insb
ljmp
inc
pop
pusha
scas
xchg
in
clc
sbb
aas
shll
test
jle
daa
std
int
daa
aas
push
test
out
jg
or
call
loop
dec
enter
test
imul
fmul
mov
push
xchg
sbb
pop
mov
flds
fists
ret
fildl
xchg
dec
das
add
push
mov
mov
std
push
pop
mov
pop
pop
pop
push
test
xor
xor
aas
sbb
cmpsb
loopne
inc
scas
shl
xor
sub
pop
sbb
push
cmp
pop
mov
cli
stos
push
push
mov
iret
pop
jmp
xor
enter
icebp
xchg
movsl
repnz
and
pop
cmp
dec
push
js
cmpsb
xchg
rol
cli
pop
jecxz
and
add
inc
cmp
mov
pusha
xchg
movsl
and
jbe
cli
jnp
inc
sbb
inc
rcll
push
sbb
mov
mov
sub
call
sbb
adc
int
cltd
ljmp
mov
lock
xor
pop
xlat
call
inc
in
lock
push
dec
jb
xchg
jl
aas
mov
and
in
jp
pslld
lahf
dec
or
or
stos
scas
mov
repnz
dec
dec
fidivs
shl
sbb
fidivrs
repnz
ret
std
mov
out
lea
je
inc
jmp
lea
inc
mov
scas
aad
sub
or
push
or
cld
and
push
and
inc
ds
add
stos
scas
scas
xlat
adc
sbbl
jle
mov
sbb
dec
out
xor
adc
pusha
test
mov
sti
push
pop
pop
and
mov
pop
je
jb
test
push
mov
xor
idivb
pop
inc
cmpb
push
cmp
clc
push
mov
into
jle
pop
test
popf
je
das
into
and
dec
stos
xchg
addr16
dec
mov
movsb
add
ja
fildl
add
mov
insl
xlat
das
dec
daa
stc
aam
jmp
ljmp
imul
mov
pop
inc
orb
sub
mov
mov
or
dec
mov
lahf
nop
or
adc
sub
paddsw
lahf
sbb
lods
enter
jg
into
pop
mov
shrb
mov
xchg
cmp
push
xchg
jns
in
mov
orb
loopne
test
lcall
dec
nop
ret
sbb
jmp
imul
inc
pop
jne
scas
popf
jb
adc
pop
aam
xchg
push
push
adc
lahf
js
pop
pop
test
aad
or
mov
sub
jge
adc
fs
and
cmpsl
add
cmpsl
jmp
jo
cmpsb
jl
outsl
mov
push
dec
dec
inc
fldcw
jns
clc
imul
lods
inc
out
adc
adc
movsb
push
sub
mov
ljmp
lret
cmp
adc
imul
cwtl
cmpsl
xchg
pop
dec
sub
push
jl
inc
or
mov
cwtl
leave
dec
icebp
mov
or
fisttps
jnp
cmc
add
pusha
xor
cs
cmp
mov
stos
sahf
xor
test
movsl
fcoms
mov
and
jge
cli
push
lock
mov
test
lret
push
xor
dec
ret
fcompl
aam
cmc
add
fmuls
and
sbb
mov
shll
loop
pop
movsb
xchg
adc
or
mov
xchg
imull
ficompl
cmp
or
orl
lea
push
pop
shll
repnz
jbe
jb
jmp
jo
lods
jp
or
push
and
push
or
popf
mov
push
inc
mov
loope
js
lahf
cmpsl
hlt
lods
lods
adc
sti
fcoml
movsb
lret
into
bound
ljmp
jo
cmp
lret
pop
out
imul
pop
pop
jnp
add
cld
ret
fbstp
adc
mov
cmc
pop
dec
lcall
scas
mov
sub
pop
out
lahf
je
sbb
roll
xchg
cmp
movsl
sub
bound
jp
dec
sbb
in
out
jmp
mov
addr16
jg
ret
mov
insl
sti
sub
cmovb
cmpsl
ret
dec
or
jmp
ja
mov
push
push
and
fdivs
lock
or
adc
ret
lahf
in
iret
test
pop
jmp
jo
mov
push
pushf
dec
repz
stc
ret
push
jb
xchg
adc
jne
lret
test
mov
mov
pushf
push
jecxz
jge
jbe
orl
or
aam
ret
mov
or
cltd
ds
adc
xchg
movsl
sbb
test
xor
inc
pop
inc
ds
aam
mov
mov
xchg
sahf
lcall
inc
addr16
stc
out
mov
in
adc
sbb
or
iret
add
adc
dec
jg
dec
add
xchg
div
fst
mov
lods
jg
xchg
cmc
and
and
sti
std
aad
mov
aas
adc
inc
aam
xchg
cmpl
jae
inc
jno
fildll
push
xor
fildl
add
inc
mov
shrb
and
imull
lret
lret
mov
lods
mov
fldenv
cltd
pop
rolb
adc
mov
dec
sahf
subl
ss
xchg
test
pop
out
mov
faddl
in
jl
mov
aam
adc
cmova
xor
imul
xor
dec
icebp
inc
pop
mov
outsb
mov
adc
add
test
jmp
mov
cmp
inc
clc
jl
ja
sub
mov
or
jns
out
xchg
mov
or
adc
mov
movsl
lcall
mov
les
xchg
or
mov
sub
arpl
dec
jne
xchg
lds
adc
mov
push
aad
cmp
and
fwait
cmp
sub
ret
iret
push
adc
rcl
inc
push
sti
inc
jns
inc
leave
dec
dec
pop
scas
and
sti
lret
ja
fsubs
jbe
cmp
jl
inc
mov
push
aam
dec
mov
jnp
mov
jae
repnz
push
mov
cmp
sub
pop
mov
mov
notb
out
out
cmpl
dec
mov
movsl
cmp
mov
mov
dec
andl
mov
into
mov
jne
jnp
aaa
mov
sbb
fstl
daa
jge
in
jg
es
cwtl
push
sti
pop
jns
adc
dec
pusha
add
and
fldcw
jne
pop
lcall
sub
fsubl
push
cmpl
inc
les
lahf
fs
xchg
test
imul
add
shl
cmp
std
mov
push
push
push
or
or
pop
leave
jno
arpl
mov
shrl
lea
inc
push
push
pop
inc
cs
push
jbe
xor
sub
xor
push
out
roll
add
test
sub
jmp
iret
cmp
adc
les
cmc
ds
sbb
pop
lea
imul
xchg
mov
lea
mov
mov
adc
push
lcall
popf
dec
addb
adc
imul
addl
add
lea
adc
mov
xchg
mov
sbb
jle
and
loopne
fiaddl
xchg
aas
stos
mov
dec
imulb
rorl
xchg
mov
lea
add
and
outsl
mov
mov
into
or
lcall
or
pop
cli
push
jb
sti
scas
dec
and
les
mov
std
xchg
out
test
out
cmp
cmpsb
inc
adc
inc
dec
insb
add
push
push
pop
std
xchg
jb
pop
cmp
es
sub
pop
sahf
sbb
outsb
imul
sub
fs
out
xchg
dec
inc
rcrb
adc
mov
hlt
inc
idivl
insb
mov
fs
add
mulb
mov
pop
pop
sub
loopne
xchg
jg
xchg
inc
nop
stos
and
int
ss
cmp
aad
repnz
ss
es
and
inc
xorl
xchg
and
fs
out
shll
adc
stos
and
and
mov
inc
sub
into
test
ja
bound
lea
popf
loopne
and
jl
test
lahf
mov
ret
sub
pop
call
sub
stc
push
fwait
or
add
loopnew
in
int3
movsb
jno
mov
or
sub
fdivp
adc
adcb
stos
lea
jnp
inc
les
ret
cs
jmp
fmul
and
fwait
ja
xor
push
adc
out
aad
outsb
pop
jb
mov
rcll
or
inc
addb
xor
add
dec
outsb
mov
out
dec
sbb
mov
xchg
dec
arpl
scas
popf
ljmp
cltd
add
add
std
inc
sar
ror
daa
push
xor
xchg
scas
push
lds
lds
repz
xchg
jnp
arpl
jge
inc
inc
addr16
add
sbb
and
rorl
cmp
ret
xchg
fildl
and
cmc
in
fmulp
imul
add
fisubrl
xor
sbb
xlat
lret
mov
and
push
cmp
mov
and
iret
leave
pop
and
push
clc
and
popa
xchg
cld
push
bound
mov
dec
test
mov
pop
cmp
xchg
mov
out
and
or
ret
lahf
dec
mov
sub
xlat
and
cmp
mov
push
push
mov
lea
arpl
movsl
cltd
jnp
add
pop
psraw
in
mov
cmpsl
movsb
cld
adcl
mov
pop
call
icebp
mov
dec
jecxz
or
pop
mov
push
mov
sub
and
mov
pop
xchg
cmpsl
inc
loopne
fmulp
out
jp
into
jne
sbb
cmp
cmp
jmp
in
loope
or
jmp
loopne
xorb
daa
jns
inc
inc
ret
subb
movsl
gs
ds
stos
jecxz
cmp
push
mov
nop
sub
jnp
inc
mov
inc
es
jmp
fsubr
pop
aas
lret
sti
call
rcr
out
out
and
mov
iret
call
pop
loope
add
and
mov
hlt
and
insb
call
data16
stos
jl
sbb
sbb
lods
lcall
test
jb
cmp
xor
leave
pop
lods
stc
arpl
sbb
fucomi
mov
push
pop
sbb
fmull
or
lret
pop
sbb
sarb
rcrl
inc
mov
leave
sub
sbb
add
pop
sub
orb
int
fst
xchg
sub
movb
test
fistl
push
xor
pop
outsl
adc
cli
cwtl
xchg
sbb
pop
push
out
cwtl
stc
inc
adc
pusha
dec
fsts
xchg
push
mov
int3
mov
inc
sub
std
push
fiadds
popa
flds
jp
mov
clc
mov
adcb
fsubs
filds
outsl
or
fiaddl
les
jo
int
dec
loope
jne
push
in
je
repz
addl
les
ror
inc
xchg
mov
mov
inc
pop
out
jmp
push
sbb
jmp
sbb
xor
stos
mov
sbb
and
loop
fs
mov
imul
fadds
mov
push
out
mov
or
popf
xchg
rolb
scas
jp
jmp
test
dec
in
xor
movsb
in
fcompl
rcll
lods
outsl
inc
push
fistl
nop
and
dec
dec
cmp
mov
inc
fsubl
pop
push
jbe
ljmp
pop
sub
jmp
mov
pop
push
jnp
lahf
xchg
sub
lret
push
ret
push
jle
mov
divb
mov
add
sub
insl
js
dec
mov
sti
or
inc
push
lahf
sti
imul
or
mov
cmpsl
stos
shrl
cmpsl
pop
and
fwait
push
sbb
cmp
jge
in
lret
push
aam
and
loope
sbb
inc
or
out
jae
inc
cmc
and
cmpsb
subl
imul
sbb
xchg
pop
insl
lods
sub
mov
icebp
mov
xor
mov
adc
mov
pop
ljmp
xchg
scas
pop
add
push
sti
es
cmc
out
cmp
cs
stc
sbb
popa
rorb
and
pop
dec
out
jo
negl
adc
movsl
data16
adc
out
fstpl
scas
repz
imul
pop
pop
push
sbb
push
insb
int
test
sahf
pop
daa
sbb
addr16
jge
popf
in
sbb
cmp
sahf
mov
adc
subl
lret
or
enter
icebp
mov
dec
sar
add
lea
ds
jecxz
pop
xor
adc
pop
testl
lret
mov
nop
leave
jnp
lea
aad
sub
pop
adc
clc
psubd
jg
fs
ret
outsl
jbe
mov
inc
mov
pop
sbbl
or
popa
adc
stos
xor
test
je
cmc
int
scas
popf
imul
sbbl
scas
mov
mov
divl
xor
or
insb
push
sbb
pusha
outsb
sti
hlt
mov
enter
xorb
outsl
std
aas
movsb
les
popa
aas
xor
cmp
cli
push
pop
add
popf
fnstsw
push
rclb
mov
inc
popa
stos
dec
movsb
inc
xor
ljmp
sbb
mov
and
scas
mov
or
xchg
out
push
pop
xchg
mov
and
and
imul
jns
je
stc
ss
pushf
cmpl
push
mov
cmp
mov
or
insb
pop
ss
mov
mov
sub
imul
jae
lods
aaa
jecxz
and
adcb
adc
lds
cmp
je
pop
sbb
pop
fisubrs
mov
sbb
sbb
mov
dec
imul
or
mov
add
pop
push
cli
mov
sub
cmp
xlat
xlat
nop
fmulp
jmp
insb
or
repnz
push
cmp
into
jno
popa
lret
stos
je
xor
and
xchg
push
sub
aad
roll
rcll
sub
sub
int3
adc
loop
mov
popa
cmp
jp
mov
jge
add
adc
pusha
mov
ljmp
das
pop
enter
in
cmpsl
mov
lcall
and
or
and
pop
pop
out
inc
inc
jno
jp
or
movsl
and
ljmp
lret
sbb
sahf
pop
and
lods
xchg
mov
xchg
mov
adc
jae
xorb
lahf
cmpsl
cmp
pop
pop
dec
stos
or
dec
test
mov
notb
outsb
push
and
sub
push
int
cld
and
repnz
insl
sub
out
mov
mov
outsb
lds
decl
push
mov
subb
pusha
arpl
xor
xchg
sahf
cmp
xor
dec
repnz
divl
jg
and
inc
clc
cmp
push
xor
sub
cmpl
or
push
jg
xchg
icebp
cmc
jmp
lahf
aam
add
push
lret
lods
pop
mov
dec
rcrl
lock
push
add
xchg
aad
nop
test
xor
sbb
cwtl
ljmp
xor
mov
loope
xor
mov
sbb
add
imul
mov
sbb
xchg
int
jmp
js
ja
xor
push
sub
xor
imul
push
add
sbb
pop
shlb
dec
jp
pop
pop
and
xchg
or
in
jno
and
stos
imull
xor
sbb
or
jbe
mov
data16
xchg
inc
out
ficompl
je
add
and
push
adc
or
jno
arpl
adc
push
push
pop
in
add
push
dec
jmp
or
jbe
dec
and
jne
xchg
push
mov
mov
inc
ljmp
pop
mov
pop
loope
mov
cmpsl
ror
add
stos
iret
push
fimuls
jno
sti
insl
or
inc
cmp
and
shrl
adc
inc
jb
mov
pop
js
xchg
test
pop
int
xor
filds
lcall
push
xchg
dec
mov
add
mov
ljmp
xor
test
inc
mov
insl
fnsave
sbb
push
inc
xchg
or
jno
xchg
inc
scas
and
lods
push
bound
cli
push
mov
cmp
xchg
sbbb
arpl
daa
mov
mov
dec
loopne
jp
pop
and
pop
cltd
xchg
or
fstl
lcall
adc
fnstsw
sahf
data16
rep
mov
rorb
mov
pop
dec
aaa
ljmp
push
popf
ja
adc
mov
mov
cmc
idivl
cmp
lea
stos
inc
sbb
insl
cmp
push
sub
mov
fbstp
test
out
movsb
imul
sub
cmc
sub
lods
push
in
mov
mov
or
fildl
xchg
out
sbb
inc
inc
add
cld
clc
aas
jge
data16
loop
add
adc
mov
pop
add
cs
jl
mov
fisttps
xor
push
call
sbb
dec
mov
cli
push
mov
mov
cmp
mov
xor
inc
mov
out
add
lahf
mull
pop
sarl
jmp
shlb
call
imul
or
imul
int3
call
mov
aaa
pop
std
in
fisubl
inc
mov
repz
roll
jge
jne
shl
add
aad
mov
std
shrl
xchg
inc
roll
jbe
jl
add
outsb
jns
aad
inc
test
daa
sahf
cmp
clc
mov
mov
outsl
in
pop
in
cwtl
shrl
mov
or
add
repz
dec
int3
mov
dec
xchg
in
mov
xchg
adc
scas
je
out
xchg
out
fcompl
push
cmpsl
mov
add
iret
imulb
inc
out
aaa
ljmp
sub
or
je
pushf
ret
ret
inc
mov
mov
shl
popf
dec
mov
out
add
jae
test
xchg
push
sbb
cmpsb
cmp
icebp
subl
cmc
and
lods
in
and
xlat
es
ror
cmp
stc
sub
sti
pushf
cwtl
xchg
mov
pushf
sbb
inc
push
mov
or
xchg
mov
arpl
out
xor
inc
loopne
es
xor
inc
sbb
jp
mov
cmc
dec
out
and
mov
jno
xchg
push
xchg
shrl
dec
xchg
arpl
lds
bound
mov
je
loopne
mov
jo
mov
add
inc
xchg
jl
cmp
jo
mov
adc
enter
sarl
cwtl
scas
or
mov
inc
push
scas
and
dec
les
inc
std
inc
cmp
sub
popf
xchg
mov
fst
js
sbb
sub
ret
lret
popa
add
mov
sub
test
out
scas
dec
fisttpl
out
sbbl
daa
enter
cmc
and
out
dec
adc
shll
add
rclb
insl
fsubrl
cmp
popf
sbb
push
xchg
sub
outsb
jns
push
fdivl
push
les
lock
mov
popf
scas
loop
stc
in
add
nop
pop
xor
arpl
sbb
loope
popa
bound
push
out
adc
nop
adc
inc
rcll
cmp
ljmp
xor
leave
test
push
and
ja
jmp
sub
push
pop
mov
les
fdivp
dec
cmp
inc
push
popf
xchg
loope
fwait
xor
fistpll
cmc
dec
mov
add
lret
out
popa
leave
and
inc
xchg
cmp
inc
outsl
xchg
mov
nop
rclb
sub
and
fs
jmp
inc
bound
add
arpl
cmp
mov
adc
and
jle
xor
or
arpl
sbb
jnp
dec
jge
mov
push
push
mov
mov
jae
pushf
mov
fisubrl
jg
inc
das
dec
test
sahf
jmp
push
xorb
insl
push
xor
in
jnp
mov
or
sub
sub
adc
xchg
cld
outsb
jae
or
pusha
test
in
fildll
xchg
push
cmpsl
and
cmp
lea
or
pop
pop
mov
xor
push
movb
sub
jns
stos
fnclex
loope
mov
lret
adc
jp
dec
adc
jo
jbe
popa
push
pop
das
gs
cmp
push
inc
fistpll
gs
jb
push
aad
jbe
xor
xor
inc
aad
inc
dec
ret
ss
mov
xchg
mov
pop
jne
pop
fdivrs
mov
inc
mov
and
adc
and
sub
pushf
jae
jge
mov
fsubrp
cli
mov
dec
push
xchg
inc
ret
cmpl
adc
adc
clc
xor
pop
mov
subb
mov
pop
das
sbb
repnz
dec
shl
xchg
cld
in
outsl
fisttpll
scas
shrb
fcmovne
frstor
jg
popa
fistpll
inc
lods
adc
push
lret
cmp
xchg
sbb
xchg
leave
adc
dec
data16
sbb
xchg
jl
fcomip
adc
mov
pushf
dec
inc
adc
or
fcoms
out
sbb
lds
lods
xchg
ret
mov
jo
push
pushl
ret
jbe
scas
mov
out
imul
mov
jle
and
jbe
in
or
outsl
cmc
xor
lods
mov
xchg
xchg
lods
iret
lods
push
jmp
adc
aaa
sbb
ss
es
shll
mov
stos
movsl
inc
hlt
push
push
add
or
out
mov
xchg
and
sbb
in
inc
jb
sub
pusha
pop
and
aaa
push
jmp
ret
test
jo
sbb
jbe
xchg
inc
jp
in
lock
dec
leave
cmpsb
popa
les
cmp
fcmovb
inc
stos
pop
test
aas
jbe
jo
adc
sarb
cwtl
test
fistpl
jns
bound
push
nop
mov
sar
xchg
xchg
cwtl
pop
xor
push
subb
fwait
hlt
jno
das
pop
pop
or
lock
mov
mov
jae
mov
mov
shrl
cmpsl
jg
mov
out
or
popf
data16
add
lea
sub
fnsave
jb
fucomi
cmp
dec
inc
inc
cmp
icebp
jnp
cmp
mov
mov
inc
pop
inc
pop
adc
inc
cld
fimull
mov
dec
and
adcb
mov
mov
cld
adc
stc
dec
ret
and
fwait
mov
pushf
pop
push
and
mov
lret
lods
out
fidivl
pushf
int3
sbbb
and
pop
jmp
sub
xchg
dec
gs
addr16
xchg
jle
cli
push
cmp
mov
or
loop
enter
fdivl
out
outsb
mov
adc
fwait
ss
sub
bound
xchg
sub
sti
cmc
push
dec
cmp
je
movsb
or
mov
and
addl
add
inc
iret
loop
adc
mull
rolb
fs
cmp
sbbb
movsb
lock
push
into
test
lds
test
xor
dec
dec
lea
stos
push
lahf
adc
jae
xor
pusha
xchg
lock
incl
sbb
jecxz
loope
loop
dec
jb
or
mov
les
or
je
int
adc
addr16
roll
and
jg
pop
outsb
mov
cmp
lret
pop
repz
and
sub
repnz
idivl
adc
pop
aad
or
push
sub
daa
ja
and
mov
pusha
xor
xor
into
shrl
lds
push
aaa
sbb
xchg
and
pop
sub
fs
mov
and
mov
push
add
mov
mov
or
mov
popf
mov
jle
leave
or
mov
push
repz
sbb
mov
pop
and
iret
out
pushf
ljmp
jne
cmp
stos
xor
fstps
sahf
mov
inc
mov
out
fldenv
sub
jbe
jo
ucomiss
inc
lock
out
sbb
out
cltd
insb
mov
and
push
or
inc
and
and
ret
into
inc
dec
push
das
fildll
push
cmp
dec
push
pushf
pop
rcll
adc
xchg
push
jns
sarb
and
stos
leave
cmp
jmp
dec
repz
add
js
push
subb
imul
mov
xor
sbbb
sub
mov
cwtl
int
lods
shrb
jmp
mov
xchg
out
dec
insl
cmpsl
pop
xlat
xchg
push
idivb
das
xor
dec
push
jecxz
out
mov
cmpsb
cwtl
clc
imul
sbb
imul
inc
lret
push
cli
stc
mov
fstl
jmp
inc
ljmp
dec
js
pop
pop
xchg
xchg
jb
clc
iret
pop
outsb
cmovne
dec
push
or
pusha
push
clc
aaa
dec
insb
push
and
gs
je
fsts
icebp
scas
int
sub
push
xchg
xchg
jae
mov
xor
stos
loop
push
and
adc
jp
dec
mov
xchg
xchg
add
das
in
clc
sahf
xor
adc
push
pop
mov
and
dec
xchg
mov
cli
shrb
roll
lock
decb
nop
inc
adc
out
test
subl
pop
xchg
push
fsubrs
mov
push
and
shlb
add
imul
in
lcall
inc
mov
popf
movsb
fsubrl
rolb
fisttps
pushf
jle
add
addr16
pop
adc
xchg
add
popa
lock
pop
mov
pop
test
scas
lret
lahf
call
repz
mov
mov
push
cmp
or
jae
push
mov
ret
mov
xor
mov
loop
push
mov
in
je
mov
cmpsl
xchg
test
fwait
jo
cmp
outsb
push
sarb
push
subl
stos
fadd
inc
dec
std
mov
xchg
mov
adc
fdivrs
xchg
popa
inc
sub
lods
xchg
idivl
lea
pop
lds
dec
jg
icebp
mov
inc
popl
sub
movsl
fwait
daa
mov
mov
xor
jno
push
lea
mov
imul
cmp
or
add
mov
inc
outsb
imul
aas
jnp
mov
lods
mov
andl
jecxz
mov
js
add
and
and
inc
jp
xor
inc
mov
pop
and
in
cmp
arpl
insb
sub
mov
shlb
dec
sub
imul
imul
leave
jmp
jle
in
shll
movsl
add
rcl
int
xorb
xor
decl
out
shrl
fnstenv
adc
push
dec
xchg
leave
fildl
cs
arpl
mov
sub
inc
repz
xchg
pop
pushf
inc
jg
fdiv
movsl
pop
xchg
xchg
mov
int3
and
faddp
imul
fisubrl
mov
mov
inc
mov
ljmp
call
mov
addr16
js
mov
inc
dec
stos
or
ss
push
mov
xor
clc
dec
cs
fisttpll
jbe
dec
xrelease
or
nop
insb
lahf
flds
pusha
rcrl
test
stos
push
es
jle
mov
push
mov
adc
and
push
or
xor
dec
and
or
pop
mov
into
lret
sbb
cmp
jl
xor
mov
inc
jl
imul
push
pop
jae
pop
adc
test
sahf
lcall
mov
aaa
adc
mov
sbb
mov
lret
or
dec
aad
out
sub
push
pop
xor
mov
out
adc
pop
in
rclb
stos
mov
loop
push
addr16
or
nop
cmc
jmp
sbb
cmp
sub
lods
inc
lret
push
push
fcomps
xchg
mov
push
adc
out
sbb
lods
loope
das
push
sub
das
cmp
stc
xchg
loopne
dec
xchg
loop
pop
pop
or
adc
arpl
lods
fdivrl
inc
stos
shl
int3
xor
add
add
jmp
cmp
jge
push
bswap
iret
pop
testl
sub
adcl
lock
xchg
cmp
test
pop
inc
add
dec
mov
test
adcl
mov
cmp
std
dec
pop
je
daa
stc
sbb
testb
imul
push
mov
out
cmp
lock
shll
mov
mov
aaa
mov
mov
pop
outsl
movsl
or
mov
cs
mov
cmp
jecxz
mov
push
arpl
xor
in
lods
xor
mov
loope
mov
dec
mov
jbe
and
sub
rcr
xor
lds
cs
nop
aam
or
jns,pt
mov
add
sbb
jg,pt
popf
inc
sahf
popf
cltd
aas
jo
dec
mov
or
and
jg
cmp
roll
test
pop
cmp
adcb
mov
fs
adc
inc
sbb
or
pop
xchg
rol
mov
cs
pop
loop
push
mov
push
adc
adc
xor
add
daa
out
test
cmp
xchg
push
xor
sub
das
cmpsl
mov
jmp
mov
mov
mov
pop
dec
xor
shl
data16
jl
pop
rcrb
mov
je
in
test
test
jge
roll
mov
in
pop
pusha
xor
cmc
jle
or
push
mov
pop
or
testb
inc
enter
jle
jae
sahf
push
fidivrl
push
adc
cld
cmp
in
repnz
sub
push
jns
scas
std
or
lods
repz
pop
insl
jne
mov
clc
xchg
hlt
pop
xchg
lods
push
adc
idivl
mov
xchg
lcall
call
xchg
xchg
pop
inc
adc
inc
stos
int3
std
aas
sarb
mov
inc
mov
sti
orl
or
fidivs
lea
xor
repnz
fwait
add
addr16
mul
or
orb
inc
test
mov
js
xor
mov
cmc
shl
inc
loope
xchg
andb
fimull
popa
enter
in
xchg
iret
or
xchg
sub
mov
and
in
bound
jp
data16
leave
into
jbe
mov
inc
cmp
fs
adc
into
pop
js
and
mov
dec
fnstsw
mov
das
in
dec
pushf
enter
or
mov
ds
xlat
clc
icebp
sub
icebp
addl
xchg
adc
and
and
and
mov
js
cld
fadds
xor
dec
jo
dec
or
aaa
cltd
inc
push
or
cmpsb
lret
out
adc
imul
cmp
push
sbb
addr16
add
fcomp
push
inc
in
or
pop
jnp
pop
imulb
add
ja
ljmp
out
dec
loop
xchg
sbb
stos
pusha
pop
jae
cmpsl
xchg
add
push
hlt
outsb
or
sub
dec
cmp
fbld
fstl
les
cs
sub
insl
jp
mov
sbb
shll
xor
inc
setp
out
jecxz
cltd
lods
lock
xchg
cld
scas
std
mov
xor
leave
fisubs
inc
or
push
hlt
aad
ljmp
mov
in
ljmp
dec
jle
sbb
ret
and
xchg
jmp
int3
jns
enter
jmp
xchg
mov
mov
adc
lea
pop
pusha
loopne
test
cmc
sbb
loope
out
cmp
pop
cmpsb
sub
mov
sbb
xlat
and
les
movsb
sbb
mov
or
push
cs
popa
cli
xlat
popf
ss
cld
mov
or
mov
cs
aam
and
inc
mov
xor
mov
xor
inc
out
fstpt
frndint
aam
dec
mov
pop
sete
mov
xchg
testl
daa
je
lahf
mov
fldl
pop
mov
loope
and
mov
mov
mov
lahf
int3
in
leave
jmp
xchg
mov
adc
add
and
pop
xor
mov
inc
inc
or
xchg
out
jb
jb
call
pop
cmpsl
sub
pop
sti
sub
pop
faddl
push
mov
movsb
or
and
outsl
scas
mov
lahf
ds
outsl
fildl
jmp
out
push
and
sarb
mov
sbb
and
int
sahf
push
fs
add
sub
push
repnz
dec
dec
outsl
stc
cli
movsl
and
popf
addl
or
es
and
adc
and
jmp
pop
mov
shlb
mov
out
mov
cmpsb
pop
inc
jmp
imul
shrl
cli
aaa
or
add
mov
ret
xor
mov
cmc
aad
add
ja
and
push
lea
pop
jnp
add
sub
adc
cld
rolb
imul
test
dec
sti
dec
sbb
dec
jns
addl
cmp
sti
mov
xor
mov
loop
scas
lock
mov
sbb
mov
cs
xchg
mov
pop
mov
xchg
sahf
push
sarb
cmpsl
cli
mov
pop
fcompl
popf
inc
cs
jge
pop
mov
das
nop
cmp
dec
xchg
and
xchg
cli
cwtl
lods
pop
push
std
lock
cld
sub
dec
jecxz
lock
movsb
bnd
or
add
out
xor
jo
sbb
pop
mov
pop
xor
inc
out
cmp
push
int
jb
jmp
imul
out
addr16
or
stos
sbb
popf
leave
inc
push
pop
push
aam
sbb
and
ret
ljmp
cs
and
jp
popf
mov
fwait
adc
cmp
fmul
inc
xchg
add
cmc
mov
fdivs
divb
fadd
xchg
adcb
cld
fistps
in
hlt
es
inc
mov
fmull
lea
xchg
and
gs
pushf
test
stos
pusha
rcll
gs
cmp
out
cli
adc
jb
pslld
insl
push
xor
adc
xor
xor
stos
in
xchg
outsb
cmp
lret
ficoms
push
or
or
pop
outsl
ja
xor
std
aam
sub
jae
lcall
cmp
aaa
arpl
sbb
leave
cmp
out
test
push
cmp
into
adc
sub
sahf
insb
mov
mov
cld
test
adc
cmpsl
mov
jmp
sub
pop
decb
inc
xchg
or
popf
push
mov
push
push
inc
push
movsl
pop
xchg
das
test
push
jmp
inc
jae
dec
hlt
pop
dec
ret
dec
push
rcr
adc
cmpsl
push
aas
or
or
stc
lahf
xchg
gs
imul
movl
movsb
sbb
loopne
dec
out
xorb
adc
push
cld
mov
add
sbb
cmpsl
lret
repz
adc
pop
jmp
add
cmp
cmp
xlat
add
xchg
mov
bound
frndint
pop
and
pop
pop
mov
mov
test
gs
or
adc
popf
movsl
xchg
and
dec
fbstp
jg
or
push
pop
jae
sub
jl
mov
mov
fwait
push
rcll
sbb
inc
std
xchg
mov
inc
hlt
imul
mov
pop
test
lock
push
test
adc
dec
pop
cld
mov
mov
xor
mov
sar
push
jnp
ret
call
mov
mov
mov
cmp
lods
icebp
sub
mov
mov
jb
fistpll
jbe
push
sub
cmp
ds
and
sub
fsubrl
je
mov
dec
fadds
fwait
shr
mov
rorb
push
xchg
sbb
inc
jmp
out
stc
ss
and
push
daa
jg
enter
stos
xchg
adcb
xchg
pop
adc
mov
lcall
les
dec
mov
or
mov
pushf
es
xchg
cmc
mov
or
js
popa
xchg
stos
es
push
pusha
xor
sub
lods
aad
xor
fs
out
xchg
sbb
mov
jae
iret
inc
data16
push
icebp
mov
int3
push
repz
ret
inc
jle
call
mov
dec
cmp
jmp
pop
test
nop
test
andl
and
sub
adc
nop
aas
test
pop
jnp
fistl
sbb
push
jge
push
dec
mov
mov
and
fsubp
push
popf
mov
nop
add
sub
pusha
jno
sub
xchg
cld
sbb
add
sbb
dec
sahf
scas
and
aad
xchg
sbb
stc
gs
aaa
jns
jl
mov
jae
dec
in
xor
cmpsb
out
add
ljmp
stos
imul
cmpsl
or
sbb
or
fdivp
push
cmp
and
mov
mov
cmp
lcall
xchg
das
or
add
jo
imul
push
arpl
popf
in
ja
dec
push
mov
mov
gs
iret
ss
push
test
into
mov
push
xor
and
jecxz
xchg
jg
xchg
pop
mov
cmp
push
adc
rcrb
adc
push
test
ss
sub
sub
or
loop
imul
rclb
push
xor
repnz
xlat
push
inc
adc
lret
subb
lds
pop
or
dec
outsb
scas
loopne
xchg
push
cmp
mov
mov
cmpsb
jb
or
call
ds
loope
test
jle
sahf
scas
push
sbb
xor
mov
in
adc
inc
push
repnz
xchg
cmp
aad
imul
ds
dec
icebp
inc
pusha
gs
insl
push
mov
sbb
xor
imul
mov
and
push
or
bound
pop
int3
lea
mov
pop
mov
leave
push
push
mov
nop
fs
in
dec
shll
and
loop
aad
inc
ret
push
jge
dec
pop
add
or
push
js
sub
push
inc
mov
jecxz
pop
mov
lods
cmp
xor
or
or
in
sbb
fcmovnbe
lock
jb
pop
mov
movsl
lret
xor
sub
jmp
add
push
int3
jmp
sub
xor
adcl
pop
pop
inc
mov
aam
add
inc
pop
xor
inc
stos
xor
ss
cld
dec
push
jnp
je
sub
fisubs
pop
test
xor
push
pusha
repnz
leave
mov
leave
xchg
mov
popa
stos
inc
pop
cmpb
or
push
or
push
cmp
dec
xchg
out
in
jmp
mov
sbb
loope
mov
push
mov
arpl
xor
iret
pop
int
je
pop
mov
fwait
push
enter
cld
mov
je
loop
cmc
stos
or
jmp
out
fidivs
jns
mov
cmp
cli
mov
out
jge
pop
mov
aaa
loopne
loope
in
mov
jecxz
popf
lret
popf
movsl
and
stos
fstpl
xchg
adc
or
sub
js
and
jg
push
and
xor
xor
mov
insl
daa
icebp
add
mov
int3
test
pop
shll
pusha
pop
mov
mov
pop
les
daa
add
and
jnp
gs
inc
inc
loopne
into
xchg
adc
aaa
fsubl
xchg
or
adc
ss
cmc
cltd
or
insl
mov
jnp
sahf
inc
mov
clc
out
sbb
mov
push
icebp
mov
mov
shll
into
pop
test
lret
in
or
call
aaa
test
idivl
push
ret
xor
add
je
add
test
push
and
mov
cmp
push
push
loop
lock
ret
mov
push
xchg
cmp
rep
les
mov
mov
xor
test
sub
push
mov
mov
xchg
mov
pusha
mov
mov
mov
imul
xchg
inc
mov
cltd
pop
das
inc
pop
cs
in
movsl
adc
into
jmp
xchg
cmp
dec
or
pop
and
rorb
fs
xchg
mov
lret
cmp
adc
aad
loope
dec
call
jo
in
popa
fucomp
stos
xchg
cli
adcl
mov
test
inc
pop
adc
add
pusha
xor
or
push
or
push
scas
into
inc
add
xor
into
and
xchg
call
add
pop
rorl
ja
hlt
clc
jecxz
mov
rcrl
repnz
pop
inc
xor
jg
popf
dec
jo
jle
data16
xor
pop
scas
jno
cmp
xor
mov
mov
addl
sbb
fcmovne
mov
sub
xor
pop
aam
xor
mov
out
movsb
lret
mov
jo
loopne
repnz
cmp
xor
xchg
push
adc
call
int
test
xchg
ret
mov
loope
jbe
push
push
aaa
pop
cmp
addr16
std
sub
out
add
mov
and
ss
mov
mov
aam
push
push
fs
push
call
pop
out
cmp
jle
pusha
lods
or
dec
and
movsb
js
cld
inc
push
xor
xor
or
daa
ret
aas
call
jecxz
xchg
mov
loopne
mov
xor
push
scas
jle
stc
stos
fbld
stos
jp
sarl
outsb
inc
mov
or
jns
mov
jns
es
inc
mov
inc
inc
incl
cwtl
xor
jmp
idivb
jmp
and
jns
dec
push
lods
stos
xor
rcll
fsub
mov
xor
fiadds
mov
push
or
xchg
cmp
adc
mov
or
sbb
call
aaa
adcb
xchg
mov
inc
and
popf
dec
xor
ljmp
push
mov
sbb
stc
mov
into
jno
sbb
adc
xor
inc
jo
inc
mov
jge
fnstenv
ret
push
cld
daa
dec
mov
mov
push
push
pop
xchg
daa
popf
mov
cld
push
xchg
shrl
fmul
pminsw
dec
dec
lods
mov
aas
jae
mov
add
out
and
mov
xchg
mov
mov
sbb
into
mov
or
or
push
int
mov
sbb
add
stos
and
xchg
xchg
imul
xchg
xor
sub
jle
outsb
pop
fildll
and
or
cmp
dec
clc
ja
jl
jecxz
jo
insl
and
adc
mov
mov
mov
push
popa
cwtl
pop
push
ds
out
shll
lods
mov
mov
gs
sub
jp
cmp
mov
cmp
fmuls
jb
xchg
in
cmp
pushf
repnz
mov
mov
addr16
inc
cmpb
and
addr16
lea
xor
add
popl
roll
push
out
shlb
push
in
nop
mov
jmp
cmp
in
shll
add
inc
mov
and
loop
mov
mov
repz
jne
hlt
rol
xor
sar
cmpsb
pop
push
mov
pop
test
mov
inc
insb
hlt
pop
outsl
cmpsb
dec
sub
sub
mov
push
fwait
aad
pushf
pop
cmpsb
out
adc
mov
xchg
lahf
jno
inc
fmuls
mov
call
adc
jl
cli
jo
bndldx
pop
divl
mov
mov
cmp
stos
mov
sahf
xor
jp
jmp
pop
test
xlat
inc
inc
fcmove
and
pop
ret
divl
data16
dec
je
pop
dec
and
fdivp
mov
ficoms
cs
iret
adcl
scas
cmpb
movsl
xlat
imul
or
popa
fcmovu
enter
dec
iret
inc
dec
pop
sub
lret
mov
pop
inc
sub
mov
jne
cmpsl
jecxz
mov
iret
rclb
xor
xor
sub
out
mov
push
sub
mov
int
lock
mov
mov
mov
sbb
decb
add
mov
xchg
mov
jno
pop
add
nop
sbb
cs
test
daa
es
out
or
shrl
lret
push
into
cmp
roll
cld
lods
jle
shrl
leave
rcr
mov
outsb
sahf
dec
lahf
cld
sbb
push
xchg
mov
les
inc
sbb
js
test
add
adc
mov
cli
dec
sbb
fxch
sbb
inc
pushf
ret
aam
sbb
add
insb
movsb
int3
xchg
dec
call
repnz
rol
std
cs
sub
mov
out
sahf
sbb
push
cwtl
xchg
into
inc
cmp
cmp
add
mov
xchg
fidivrs
pop
out
pop
xchg
sbb
in
flds
sbb
push
push
mov
inc
xchg
mov
and
dec
loope
ja
pop
movsb
push
das
xlat
and
push
orb
mov
xchg
sbb
xor
cmp
and
jecxz
int
fwait
loopne
enter
fstps
xor
repnz
xlat
fmul
mov
lea
mov
sbb
movsb
sub
and
jl
sahf
lock
fadds
sarb
in
mov
inc
mov
loopne
bound
lods
pop
or
pop
mov
sbb
adc
dec
pop
test
sbb
sbb
adc
sub
rol
ret
mov
mov
testl
mov
mov
lods
aaa
or
mov
iret
out
push
jne
int3
xlat
hlt
push
cmp
dec
ljmp
lahf
adc
in
mov
sbb
push
mov
out
std
pop
sbb
loope
cwtl
xchg
sbb
ljmp
fldenv
pop
les
pop
xchg
lret
nop
outsl
mov
sar
pop
xchg
arpl
inc
and
sbb
out
int
imul
dec
les
std
mov
jle
pop
sti
cli
or
test
shl
js
add
arpl
ret
loope
or
daa
xchg
pop
enter
push
push
movsl
cwtl
mov
cs
push
mov
push
jmp
cmp
pop
dec
cmp
lcall
std
inc
inc
je
jb
scas
dec
pop
pop
sub
lods
repz
pop
pop
fadds
fcmove
out
xorl
dec
adc
bnd
mov
push
sbb
sbb
push
pop
add
iret
and
inc
pushf
je
leave
xchg
xor
je
imul
lods
or
cwtl
out
mov
jge
sub
adc
pushf
jge
and
in
je
stos
mov
push
jo
addr16
inc
adc
pushf
fsub
cmpsb
es
jb
pop
inc
test
dec
mov
sub
ja
aaa
rcr
jno
push
cld
into
xchg
ja
adc
and
shl
sub
leave
je
je
ds
pop
ja
mov
jmp
or
mov
cmp
add
cmp
xor
arpl
imul
and
clc
pusha
mov
xchg
clc
inc
sbb
fcomi
aad
out
dec
dec
rorl
lds
xchg
lds
int
push
jl
xchg
cmp
cld
xchg
jo
popa
xlat
fmull
std
push
sti
dec
push
add
xchg
in
jecxz
mov
jae
add
push
ja
leave
or
cmp
outsl
and
add
sub
add
dec
sbb
les
or
dec
xchg
adc
int3
xchg
jg
test
cmc
push
xchg
popa
shlb
mov
leave
lods
mov
std
add
loop
xor
mov
daa
adc
and
pop
insb
xchg
fstpl
xchg
lods
outsl
ljmp
movsl
inc
stos
mov
lahf
loop
pop
dec
ds
mov
xchg
pop
mov
insb
pushf
xchg
sarl
fwait
sub
jmp
mov
fucomi
fs
fs
push
xor
add
adc
inc
loopne
mov
jge
pop
pushf
adc
repnz
pop
pop
xchg
or
ds
mov
mov
sbb
push
adc
aad
movsb
scas
adc
sbb
jae
daa
sub
mov
sti
iret
into
in
test
outsl
imul
jbe
repz
or
in
scas
jb
sub
jnp
fs
mov
mov
sbb
add
xor
fisubs
inc
jge
xchg
push
loopne
xor
inc
xchg
cmc
enter
push
arpl
pusha
sub
xchg
cltd
jecxz
jns
enter
push
ds
call
cltd
enter
xchg
mov
in
push
cmc
cli
jb
loop
cmp
mov
popf
outsl
fwait
dec
pop
sub
cmp
push
aam
sarl
dec
jecxz
subl
cld
fucom
in
xchg
push
jae
sbb
std
lret
in
mov
push
mov
call
jecxz
dec
iret
dec
adc
push
clc
xlat
into
je
clc
pop
mov
or
adc
lea
inc
bound
jl
pop
or
push
inc
xchg
adc
ja
test
dec
sub
ret
cmp
out
pop
and
and
in
adc
lret
xor
int3
bound
mov
mov
mov
add
cld
push
push
push
inc
jmp
mov
and
stos
pop
pop
push
pop
fldl
or
mov
and
dec
pop
int
jbe
call
sbb
stc
dec
je
ficoms
or
jmp
push
nop
mov
sbb
mov
test
adc
push
add
icebp
adc
xchg
test
xchg
loope
jecxz
sti
mov
pop
popf
in
cmp
mov
lds
pop
cltd
negb
outsb
test
test
lock
and
cmpsb
imul
xchg
adc
adc
fistpl
popa
pop
divps
dec
inc
shl
sub
and
cwtl
jnp
add
shrl
cmp
mov
mov
cltd
js
ret
xchg
inc
sub
mov
jnp
andb
mov
mov
sub
sub
arpl
pop
addr16
jmp
cmc
loope
lods
popf
add
mov
mov
mov
inc
mov
lock
nop
push
and
movsb
jmp
jecxz
or
cmp
mov
push
aas
adc
movsl
call
fs
xchg
and
lods
lods
cli
adc
xor
loope
repnz
dec
push
aas
inc
sahf
dec
jg
rcrb
mov
mov
pop
lods
lcall
cs
loopne
xchg
pop
and
dec
adc
xchg
or
popf
jecxz
cltd
pop
pop
mov
and
pop
sbb
mov
mov
push
or
xor
push
test
out
dec
xor
loopne
fadds
lods
aaa
outsb
cmp
xor
sbb
in
das
divl
in
xchg
test
mov
pop
push
cmpsb
cmp
ret
pop
mov
sbb
jns
insl
mov
lods
into
dec
leave
fld
iret
aaa
dec
jecxz
xor
pop
sahf
jecxz
in
mov
adc
insb
dec
fidivrl
incb
cmpsb
sub
xor
adcl
cmp
out
xchg
js
arpl
lcall
add
jns
sub
mov
mov
mov
mov
xchg
sbb
pop
push
mov
aas
jp
mov
mov
xor
data16
dec
test
aas
adc
mov
cmp
pop
push
rolb
jge
push
lods
adc
mov
cmp
jecxz
push
mov
lcall
pop
movsb
mov
divb
ss
inc
pop
pop
dec
outsb
add
xor
sub
jl,pn
outsb
sbbb
pop
mov
jle
movsl
lds
jae
loopne
and
cmp
repz
jle
xchg
lret
mov
sub
dec
pop
xchg
xchg
das
lret
inc
adc
mov
inc
shr
lock
add
aad
inc
dec
roll
mov
into
push
jge
stos
movsl
repz
fistl
xor
mov
push
imul
xor
cwtl
mov
xchg
push
mov
or
pop
inc
pop
in
add
jnp
push
and
je
pop
mov
fisubl
adc
inc
sahf
pop
arpl
mov
pop
mov
pop
loop
mov
push
pop
sub
mov
and
ss
gs
sbb
sbb
out
jg
mov
xor
push
ljmp
in
rorb
sbb
adc
test
insl
add
test
ret
les
dec
hlt
cltd
cwtl
mov
mov
adc
push
inc
inc
ljmp
pop
bound
mov
push
mov
outsl
push
jns
stos
add
inc
sbbb
push
push
sub
pop
jns
jno
mov
dec
sahf
push
cwtl
inc
daa
inc
imul
sub
ret
xchg
add
cs
adc
and
xchg
in
lret
xchg
sub
js
imul
mov
jnp
repz
dec
pop
fists
jle
int3
push
sbb
jp
jp
and
clc
mov
xchg
sbb
sub
lds
stos
mulb
js
lods
in
ja
lret
mov
je
push
dec
ds
mov
mov
push
or
rcr
xor
sarb
cmp
sbb
loope
pmulhuw
lcall
loopne
lock
cmpsb
lcall
inc
and
pop
pop
cli
cltd
push
das
addr16
add
outsb
shrb
out
sbb
mov
push
aaa
clc
push
cmp
stos
inc
cmp
lods
or
shl
cmp
dec
mov
dec
pop
pusha
xchg
sbb
push
out
jne
loop
cmp
adc
or
push
jo
push
outsl
not
mov
lods
cmp
mov
xchg
push
scas
and
mov
leave
xchg
push
addr16
loope
push
out
mov
pop
int3
cwtl
in
testl
jnp
in
nop
xorl
shrl
popf
push
push
pop
out
cmpsb
fsub
ret
cmp
cmp
mov
popf
ficomps
fmul
jl
loop
inc
sbb
mov
je
cmp
pushf
sbb
pop
jo
sub
jl
dec
and
mov
pushf
inc
in
xor
mov
sahf
cmpsl
ja
orb
out
int3
push
icebp
shrl
inc
cli
lds
adc
xlat
push
jns
mov
clc
movsb
inc
cmp
push
xchg
imul
dec
jle
fadd
xchg
ret
movsl
iret
mov
push
inc
test
cld
xor
sbb
add
into
repnz
mov
mov
stos
repnz
shll
add
hlt
std
loope
scas
mov
inc
push
rclb
mov
jbe
dec
jnp
jo
lods
insb
data16
xchg
outsb
outsb
jl
dec
sub
sbb
lock
btc
sbb
in
das
fdivs
mov
lock
stos
dec
and
mov
jg
mov
mov
fwait
inc
insb
mov
inc
lea
pop
mov
fcmovnb
inc
jae
pop
mov
lret
xchg
mov
mov
mov
testl
lahf
lahf
cmp
add
jae
xchg
insb
mov
mov
sub
xor
daa
sbb
sub
dec
sbb
out
lret
adc
jae
push
je
cmpsl
scas
mov
xchg
and
mov
shlb
cmc
jp
lcall
dec
mov
cmpsb
imul
adc
fidivrs
and
dec
sub
sub
xchg
or
fcmove
inc
pop
sbbl
add
adc
shl
jno
faddl
jg
insb
jmp
xor
dec
lods
add
and
cmc
mov
push
push
dec
popa
dec
or
cmpsb
and
mov
scas
cmpl
dec
lods
into
cli
xor
cltd
xor
adc
out
jp
test
and
adc
aaa
int3
mov
inc
ds
adc
mov
mov
mov
popa
addr16
dec
pop
divl
pop
sub
xor
daa
mov
mov
scas
lret
xor
dec
les
inc
adc
adc
popa
pop
std
push
adc
test
pop
add
loop
and
hlt
jmp
in
fldt
mov
inc
xor
cmpsb
fdivrs
xor
sub
pop
jo
jne
cmpsb
cmp
cld
fdivrs
lret
mov
fsubrl
push
lods
pop
push
dec
pop
shll
lret
jb
imul
rolb
gs
sbb
mov
mov
clc
lret
jg
js
inc
lods
and
xor
xchg
adc
loop
push
test
push
int3
hlt
loope
dec
jle
cmpl
inc
xor
jnp
pop
test
inc
fmuls
ficoms
sub
mov
cli
dec
aam
mov
jb
stc
mov
insl
dec
push
inc
data16
insl
rclb
mov
fsubrl
outsl
rcl
pop
loopne
aas
inc
mov
and
ret
mov
inc
inc
pop
out
repz
hlt
cmpsb
fcmovnbe
adc
mov
jae
pop
dec
push
cmp
imul
hlt
call
mov
repnz
mov
stos
adc
and
testl
cli
fistl
pusha
mov
loop
ret
xor
fadds
dec
cmpsb
test
popa
inc
jmp
jg
xchg
hlt
xor
xchg
mov
or
in
add
dec
rcrl
lea
ja
pop
movzbl
jo
push
dec
push
dec
arpl
cmp
or
jb
inc
push
ret
sub
outsl
pop
bound
adc
out
jle
mov
das
and
xchg
incb
cmpsb
aaa
popf
jo
push
dec
cmp
out
cld
dec
jle
or
and
sub
testb
xor
inc
out
pop
inc
cli
lods
mov
inc
imul
sub
inc
and
inc
add
popl
sbb
dec
lock
xor
lret
ljmp
push
xor
testb
es
mov
aad
xlat
addl
xchg
lss
add
imul
pop
lock
pop
pop
stos
xchg
pop
into
clc
loopne
rolb
push
cmp
or
test
je
shr
mov
inc
int
and
jge
add
call
inc
jo,pn
adc
popa
pop
sahf
sub
push
lahf
sbb
shrl
fwait
ja
mov
jns
int3
pop
xchg
jno
xor
mov
loope
movsb
negl
or
jb
jno
dec
xor
lret
push
repz
jo
fsubrs
push
lret
sbb
in
jmp
adc
dec
loope
icebp
jo
xchg
arpl
cmp
mov
cmp
pop
push
add
xchg
adc
sub
jno
les
outsb
outsl
mov
or
ljmp
popa
mov
dec
mov
mov
mov
inc
push
or
cmp
ret
dec
adc
lds
addl
and
mov
xchg
shlb
sti
das
mov
rcrb
push
imul
pushf
adc
fs
xchg
stos
mov
aad
pop
mov
pusha
in
dec
testl
add
aad
das
and
xchg
add
cwtl
adc
push
push
std
imul
dec
push
xchg
inc
mov
lret
fs
sub
sbb
arpl
mov
or
test
loopne
xchg
sahf
dec
add
adc
rcrl
xchg
fabs
inc
mov
xor
inc
jl
imul
repnz
shll
pop
je
add
addr16
int3
test
inc
out
xor
push
push
sbb
mov
add
pop
rcrl
fmull
fsubs
insb
ja
adc
xchg
xchg
out
push
adc
js
popa
shll
jnp
enter
sbbl
lods
sbb
lods
mov
mov
and
ficoml
cmpsl
in
scas
insl
test
cld
repz
push
icebp
pop
sti
lret
cmc
mov
fidivrs
or
xor
mov
insb
pextrw
lret
out
mov
lods
cmp
jne
clc
and
cltd
lock
ret
mov
pusha
clc
or
sahf
movsb
and
dec
lret
mov
fwait
movsb
inc
jbe
and
fistpll
add
rorb
mov
or
push
repz
push
outsb
shl
mov
mov
lock
mov
jg
or
insl
sub
add
jecxz
push
or
clc
mov
sub
xor
fists
push
sub
mov
add
inc
add
push
pop
push
xlat
and
dec
jne
mov
jbe
aad
mov
xor
adcl
popa
jecxz
call
inc
les
xor
pop
outsb
xor
stc
mov
test
sbb
out
inc
dec
sti
aaa
test
out
test
cld
out
cli
mov
pop
or
clc
xor
shl
ret
cs
xor
out
pusha
loop
lock
mov
outsl
into
push
int
stos
jmp
push
rolb
fcmovne
sub
jno
dec
xchg
xchg
jo
push
dec
test
cmpsl
test
mov
mov
mov
daa
dec
in
testl
add
xorb
out
sbb
sub
lahf
popf
nop
sub
pushf
push
mov
test
jne
or
mov
mov
cmp
lcall
out
mov
das
adcl
sbb
xor
shll
push
sub
add
mov
arpl
ljmp
mov
outsl
cwtl
dec
popf
push
adc
add
cmp
shll
filds
mov
push
cmp
adc
cmp
push
inc
mov
sbb
outsb
sbb
and
out
xor
xchg
sbb
lcall
addl
loopne
jbe
mov
into
aaa
fbld
out
or
push
sub
add
jno
scas
jecxz
jmp
xchg
adcl
cmp
movl
lahf
mov
aam
xchg
paddsw
shll
jmp
adc
je
sbb
cmpsb
jmp
int
cli
cmpsl
dec
mov
push
dec
lods
or
sbb
out
pop
es
xor
repnz
std
loopne
inc
andb
mov
pop
mov
lods
jne
fstpt
mov
add
dec
mov
cmp
insb
mov
xchg
test
loopne
nop
jp
orb
loop
js
lods
sahf
popf
call
jmp
lock
inc
inc
push
adc
and
loopne
enter
fbstp
push
jns
push
ret
ss
push
cwtl
loope
jbe
rcll
mov
rolb
jne
aam
mov
inc
pop
rcr
ss
xor
and
outsl
shlb
xor
incb
and
fmulp
lcall
ljmp
pop
cwtl
sbb
adc
icebp
mov
cmp
aam
mov
iret
pop
sar
pop
mov
pop
outsl
ret
push
sub
fdivl
daa
fs
mov
leave
stos
fstps
mov
gs
fidivs
test
xchg
jae
push
in
loope
jbe
stc
shlb
aam
mov
aas
dec
cmpl
int3
lcall
mov
imul
mov
lcall
fcomps
nop
das
std
ss
pop
add
mov
pop
jecxz
neg
pusha
and
test
and
out
jle
nop
psubb
sub
outsl
or
fnstenv
in
fs
sbb
inc
gs
test
adc
jns
jg
cltd
aaa
les
xchg
lods
push
loop
dec
sti
cmp
jge
push
ljmp
add
lods
mov
mov
jnp
frndint
adc
enter
inc
lods
mov
test
cmc
jge
xor
push
xchg
or
cli
dec
pop
jecxz
xor
add
popa
lcall
pop
movaps
in
out
fcoms
xchg
mov
imul
inc
mov
nop
shrb
mov
imul
xchg
shlb
sbb
add
scas
ret
in
test
jne
or
pop
test
arpl
cmp
fcomi
mov
inc
mov
cmpsb
jge
mov
pop
inc
mov
push
dec
mov
jecxz
xchg
jne
mov
lods
enter
js
mov
in
hlt
jbe
xchg
sub
icebp
mov
and
inc
mov
daa
int3
pusha
pop
outsb
mov
mov
dec
dec
fabs
mov
sub
push
mov
aaa
call
aas
out
test
pminsw
xchg
mov
fmull
add
das
sbb
xor
sub
hlt
hlt
mov
mov
cld
sti
jne
mov
fwait
shrl
fwait
scas
fidivrl
inc
push
or
rorb
push
gs
cmp
rol
mov
out
sbb
sub
jnp
push
inc
inc
out
stos
ret
cli
int3
enter
mov
mov
cmp
lret
arpl
xchg
test
testb
pop
out
xor
sar
jb
loop
cmpsb
or
pop
in
inc
mov
scas
push
in
mov
lea
mov
test
jl
nop
mov
cmp
cmpsl
scas
into
dec
fimuls
and
and
mov
adc
or
lods
pop
popa
sub
and
xchg
xor
stc
sub
mov
and
daa
popa
sbbb
push
dec
xchg
xor
mov
sub
and
das
std
fbld
mov
sbb
mov
fsubp
cmp
out
out
int3
pop
sub
jl
xor
sub
in
pop
sbb
aaa
mov
loop
call
add
xor
mov
jns
jge
out
rorb
push
mov
sub
and
xor
adc
sub
loop
jp
inc
aas
and
leave
sub
scas
test
mov
movsl
add
rcll
das
out
popf
arpl
loope
jne
or
rcrb
std
sub
ret
clc
pop
call
xor
dec
adcl
dec
mov
adc
cmp
das
imul
notl
out
mov
adc
das
adc
stos
sahf
pop
dec
gs
test
jecxz
sub
test
mov
shlb
lret
push
nop
shl
xchg
rcr
dec
xor
add
push
fnstsw
arpl
inc
jb
push
imul
or
mov
outsl
es
add
adc
mov
das
pop
hlt
push
lea
repnz
push
mov
lahf
add
mov
push
adc
mov
inc
mov
xor
loop
and
add
mov
xor
rclb
cmovs
and
rcl
cmp
mov
dec
fdivs
test
lods
lret
arpl
aad
out
dec
arpl
xchg
loop
pop
dec
sbb
xor
mov
repz
dec
cmp
adc
push
mov
jo
sub
aaa
inc
adc
pop
pop
and
push
out
pop
fiaddl
push
popf
orl
test
insb
add
orb
lds
movsl
cld
adc
dec
fs
jbe
test
dec
sub
cmp
mov
cmp
xor
xchg
jmp
imul
in
or
mov
or
sub
icebp
mov
push
and
pop
pop
sub
or
sbbb
inc
rorb
or
ds
enter
mov
pop
push
dec
stos
xchg
cs
adc
xchg
pop
loope
ss
push
aas
clc
mov
xor
sti
js
test
cltd
jbe
or
test
enter
mov
push
repz
lcall
xchg
and
test
shll
nop
sub
ljmp
mov
outsb
lret
xchg
sbb
jmp
and
push
jno
mov
divps
les
rcll
mov
leave
pop
cmpsb
popa
outsl
pop
insb
stc
dec
mov
cli
loopne
ja
aaa
and
xchg
mov
inc
shrl
mov
mov
push
leave
and
and
stc
popf
jge
mov
xor
xchg
lahf
jae,pn
test
arpl
outsb
sub
out
flds
mov
das
pusha
call
mov
jno
mov
dec
mov
shlb
lods
fmul
push
adc
cmp
sbb
jp
imul
imull
jno
mov
movl
aas
mov
cmp
mov
and
arpl
lcall
adc
dec
rorl
mov
pop
out
or
arpl
mov
xor
adc
sti
adc
movsl
add
jae
push
jb
cwtl
lods
in
adc
scas
mov
sahf
xchg
nop
xor
push
pop
lret
lret
popl
adc
sbb
xchg
pop
or
pushf
hlt
repnz
add
emms
lret
sbb
ret
repz
adc
imul
call
out
fucomi
cmp
sbb
inc
push
stc
or
cs
lea
jle
movsl
xor
lret
sbb
push
mov
data16
xor
xchg
add
in
dec
pop
cmpsb
test
xchg
cltd
cwtl
mov
imul
adc
ret
pop
xlat
mov
mov
jle
cmp
sub
ret
and
adc
mov
inc
add
inc
sub
mov
and
and
arpl
in
push
xor
add
mov
push
mov
jmp
xchg
iret
xor
scas
adc
mov
add
gs
ss
sub
jae
ret
sub
xor
mov
cmpsl
jmp
loope
int
movsl
mov
loop
in
test
bound
pop
mov
cmpsb
leave
fnstsw
fs
call
xlat
mov
xlat
je
jp
xlat
insl
dec
inc
std
data16
mov
push
js
pop
add
jb
lds
jne
popf
addr16
mov
push
mov
xchg
fwait
sub
dec
jmp
mov
add
mov
xor
test
xchg
icebp
stos
jne
jge
xor
ja
dec
xlat
cmp
mov
imul
hlt
jbe
pop
test
movsb
sti
bound
cmpsb
mov
or
pop
jne
cpuid
sub
xchg
jecxz
loop
aam
jno
sbbb
cld
add
js
mov
inc
loope
daa
aaa
je
lods
js
adc
and
iret
pop
mov
mov
cmp
fisubl
or
mov
push
adc
or
xor
jae
fyl2x
out
pop
test
stc
mov
push
sub
std
xor
sub
mov
mov
add
xor
sbb
mov
mov
inc
cmp
loopne
jo
fimull
mov
aas
pop
les
push
add
sub
and
cli
mov
jg
and
xor
and
and
mov
xlat
stos
shrb
jl
pop
xchg
push
and
mov
jnp
push
cltd
jbe
sbb
inc
cmp
push
push
mov
push
adc
jbe
insb
xor
cmp
movsl
cmpsb
popf
xor
and
sahf
pop
into
dec
hlt
mov
cmp
out
sbb
jne
out
mov
cmp
xchg
out
bound
adc
jae
outsb
dec
loop
jne
test
cmpsl
sub
iret
xor
sub
loop
ret
mov
sub
imul
jo
lret
xchg
or
lahf
dec
mov
dec
inc
aam
ljmp
sti
sbb
cmp
test
bnd
mov
xchg
ljmp
push
dec
fsubrs
jae
push
cmp
xchg
pop
and
push
mov
or
clc
sbb
fcmovu
insl
xor
aaa
fcomps
xor
sbb
dec
cmpsb
ficompl
loop
sti
mov
add
scas
cmp
jmp
adc
imul
and
add
nop
push
stos
clc
sbbl
or
sti
outsl
pop
jnp
lret
int
mov
call
sbb
js
popa
sub
pop
adc
mov
jg
jo
and
jns
mov
loope
ss
insb
ret
and
test
lock
std
cli
jl
sbb
push
mov
jmp
enter
jle
nop
push
lods
cmpsl
ret
pushf
mov
cs
loop
mov
dec
pushl
fnstenv
pop
cli
pop
outsl
out
dec
in
mov
dec
pushf
out
jp
push
and
lfs
add
gs
ret
add
insl
inc
add
into
ds
xor
sub
and
pop
add
push
jecxz
push
popa
fidivrs
or
std
sbb
adc
sub
lods
imul
arpl
xor
ss
sti
out
ss
push
xchg
cmp
xlat
jb
fs
and
push
ss
mov
cmp
shll
adc
fs
jbe
cwtl
jb
mov
xadd
adc
push
add
xor
aaa
dec
inc
in
jmp
add
mov
daa
pushl
mov
rcrb
push
cmc
mov
enter
ret
mov
and
std
and
int
push
jnp
in
push
out
inc
or
mov
and
cmpsl
sbb
mov
std
das
sbb
mov
mov
mov
lahf
lret
xlat
mov
xchg
mov
andl
pop
cmpsb
dec
lahf
popf
adc
call
jecxz
push
mov
in
xchg
cmpb
adc
repz
push
dec
and
adc
outsb
jmp
hlt
xor
push
popf
outsb
cmpsb
jmp
fwait
cld
dec
jg
pop
in
sbb
lret
sub
pushf
push
cmpb
gs
int3
jmp
cmpsb
mov
dec
mov
pushf
and
clc
dec
xor
push
out
mov
lahf
push
hlt
sbb
in
rclb
outsl
lock
lea
scas
or
mov
pop
jnp
rcll
outsb
repz
and
jno
ror
mov
out
in
push
fwait
scas
hlt
mov
xor
insl
or
ffreep
jns
fcomps
mov
lods
mov
jmp
lods
movsl
sbb
sub
sti
faddp
sbb
mov
andl
cmp
outsb
push
daa
push
jns
shll
cmpsl
jbe
and
mov
or
bound
call
sbb
outsb
scas
outsl
xor
adc
add
out
idiv
push
sub
lock
push
add
inc
les
jbe
push
jg
jno
jp
shrb
in
out
adc
icebp
fldt
add
add
xorb
dec
xchg
fxch
cmp
xchg
xchg
iret
xlat
jmp
icebp
add
hlt
pop
jo
mov
xchg
test
mov
movsb
dec
sahf
movsb
out
roll
mov
xchg
lahf
add
std
adc
or
add
insl
mov
dec
jbe
xchg
lret
in
std
movsl
dec
ds
sbb
xor
popf
adcl
arpl
stos
mov
sub
daa
mov
inc
xchg
js
mov
fwait
mov
fiadds
in
lahf
sub
outsl
insl
orb
pop
mov
ja
mov
rcrl
loope
mov
cs
mov
aaa
mov
leave
lods
cltd
fistps
dec
mov
je
loopne
dec
pop
jbe
pop
dec
pushf
cltd
pushf
and
insl
jb
mov
subb
js
and
fistpl
mov
cmp
and
and
outsb
das
stos
dec
pop
les
sub
mov
xchg
inc
push
push
cli
arpl
shl
mov
lock
push
daa
not
xchg
jno
iret
adc
dec
rclb
mov
inc
cld
cmpsl
adc
pop
push
imul
repnz
adc
jle
mov
xor
jmp
clc
push
loopne
icebp
mov
movl
ja
into
shll
test
or
sbb
sarb
stos
sbb
nop
inc
xlat
test
jle,pt
add
xor
cmpb
hlt
in
pop
or
inc
sub
test
push
cmp
lret
fnstsw
fstl
lret
les
negl
dec
insl
pop
or
notb
pop
sbb
cmp
mov
mov
mov
jo
mov
cld
dec
stos
mov
sbb
sub
enter
lock
jmp
mov
rorl
cwtl
mov
jno
sti
gs
xor
test
js
popa
ss
dec
fidivl
or
dec
cmp
in
cmp
push
pop
mov
loopne
xchg
pop
pushf
add
fbld
aad
sbb
mov
out
pop
addl
and
in
pusha
pop
std
movsb
mov
inc
jbe
rcrb
xchg
jge
test
pop
adc
adc
loope
shr
pop
movsb
cmp
pop
subb
mov
inc
adc
or
pop
repz
pop
sub
std
scas
lahf
pop
lret
lea
insl
cmp
mov
repz
lret
mov
dec
mov
push
or
xor
jne
mov
test
or
add
pop
roll
scas
push
out
mov
in
sub
or
andb
rolb
jmp
mov
xchg
lea
sbb
push
mov
push
dec
sarb
jns
sbb
lds
pop
hlt
push
out
add
in
ja
or
inc
dec
jmp
xor
pop
xor
lods
out
nop
pop
jne
inc
add
dec
lds
sub
insl
dec
icebp
or
out
add
call
dec
out
jmp
or
imul
sub
outsb
aaa
mov
loope
mov
lahf
mov
imul
arpl
mov
sar
jg
add
jnp
mov
stos
push
or
std
cmpb
dec
pushf
js
out
mov
aad
cmpsl
sbb
inc
fmuls
sub
dec
loopne
cs
mov
aad
aad
jno
inc
sub
jne
shrl
clc
lret
jmp
mov
push
ljmp
pop
push
jbe
push
add
mov
xorb
mov
stos
mov
mov
out
pop
add
mov
scas
mov
js
mov
xchg
jg
outsb
test
addr16
or
add
mov
out
xor
sti
into
xchg
jle
cmp
leave
xchg
sbb
push
insl
clc
daa
jecxz
add
nop
pop
sbb
mov
js,pn
sbb
pop
ss
push
negb
aad
fcomps
repz
repnz
sbb
mov
sub
cli
sub
stos
dec
fxch
inc
sbb
rcrb
cltd
movsl
mov
insb
scas
jno
scas
pop
xchg
sbb
or
xor
rcpps
mov
and
pop
lret
cmpsl
mov
pop
into
mov
jp
clc
ret
repnz
cmpsl
or
movsb
jge
xchg
push
fisttpll
cli
dec
dec
lret
and
adc
int
ror
lahf
mov
pop
fildl
outsl
lods
andb
insl
into
ret
je
test
add
and
push
xchg
fwait
add
inc
aam
xchg
movsb
jbe
fidivl
fbstp
cmp
jnp
xchg
movl
push
movsl
mov
gs
ja
rcrb
mov
push
fwait
out
fiadds
or
mov
mov
and
cmp
mov
jb
fnop
mov
pop
inc
jo
iret
pushf
xor
cmpsl
stos
add
rorl
or
cmp
hlt
test
sbb
sbb
lret
rclb
pop
cmp
out
mov
add
sub
push
std
add
pop
cmp
gs
cmp
rep
xor
popf
push
std
jg
inc
inc
inc
lock
lret
dec
xor
cmp
push
aaa
sbb
mov
push
pop
sbb
cwtl
jno
mov
mov
lret
xor
cmp
cmpsb
push
inc
fwait
daa
mov
mov
out
pop
mov
jno
xlat
inc
loop
ret
pop
pop
and
cmp
inc
js
jbe
mov
in
push
cli
push
fmulp
out
outsl
sub
aad
or
pop
or
fsub
jg
mov
call
or
js
andb
jno
lahf
inc
loop
jbe
xlat
sbb
cmp
mov
jecxz
cmp
jmp
adc
lcall
mov
fldcw
stos
jnp
gs
add
xchg
ja
shlb
shrb
loope
dec
xchg
push
push
cltd
or
sub
cmp
add
dec
inc
mov
cmpsb
int3
dec
inc
xchg
mov
mov
xchg
cmp
xchg
jmp
and
ja
sarl
in
lods
std
loop
lods
and
out
gs
inc
mov
popa
hlt
dec
mov
push
lcall
inc
adc
stos
fisubs
cmp
ljmp
adc
xor
lock
sbb
ja
push
pop
cmp
int3
or
mov
xchg
mov
inc
or
jns
aas
pop
arpl
dec
in
cmpl
dec
jnp
mov
pop
sub
je
leave
scas
pop
sub
cmp
dec
aam
sbb
pop
jl
filds
mov
gs
push
sub
loopne
sub
lds
inc
sbb
mov
push
sub
push
xchg
out
sahf
ljmp
lods
mov
adc
call
xchg
aaa
out
xchg
decl
sbb
call
mov
ret
test
inc
cmp
jp
add
xor
mov
pushf
ret
aam
push
sbb
dec
cmc
jnp
call
rorb
loopne
lods
pusha
mov
mov
cmp
mov
mov
cmp
jno
and
ret
aas
adc
pushf
test
jp
adc
push
push
push
jbe
aaa
mov
addr16
mov
inc
jg
lds
repz
pusha
sbb
xor
push
pop
and
push
popa
jmp
jmp
or
cmp
cmc
sti
sbb
flds
xchg
mov
xor
shrb
mov
bound
inc
les
sbb
cmc
loop
mov
mov
ficoml
pop
ficoml
push
mov
dec
and
xor
out
cmp
push
sbb
jecxz
lods
inc
mov
pop
loop
dec
je
pop
and
and
daa
jae
in
das
or
cmp
cmpsb
xchg
xchg
pop
nop
adc
mov
dec
out
mov
das
dec
xlat
push
mov
xchg
pushf
int
xor
xor
mov
inc
inc
adc
enter
and
fxam
inc
ja
fsubrl
scas
mov
test
fdivl
pop
mov
imul
xchg
inc
xchg
lods
out
cwtl
adc
in
pop
push
in
in
mov
out
mov
lods
xor
stos
test
jecxz
cmpsl
and
xchg
lods
pushf
cmp
cli
and
and
in
pop
and
cmp
lods
fidivl
out
cmc
dec
jb
test
jb
out
cmc
push
loopne
into
push
xchg
leave
js
lock
ljmp
mul
repnz
subb
dec
and
pop
and
adc
pop
inc
aam
jp
xor
fldcw
xchg
sub
jnp
movsl
push
shrb
jnp
cltd
xchg
in
jnp
test
cmpsb
shrb
pop
xlat
cld
in
sub
in
mov
inc
cli
sarb
push
loope
leave
xchg
outsb
mov
or
dec
inc
mov
dec
jo
icebp
lods
sbb
push
sbb
sbb
pop
jae
mov
into
lock
iret
mov
into
lea
fldenv
push
dec
repnz
stc
out
ds
out
sub
and
in
ret
dec
outsb
xchg
cmp
mov
cmc
std
jg
adc
loop
rcll
dec
jbe
fistpl
in
fs
hlt
dec
jg
hlt
xor
cld
jge
and
mov
cmp
cmp
imul
popa
orl
push
out
inc
int
dec
mov
jp
sub
inc
dec
jne
fiadds
sar
je
mov
mov
push
add
xchg
repnz
iret
sbb
mov
and
mov
fildll
das
jbe
pop
pop
fidivrs
test
aaa
xchg
add
inc
pop
fstp
lret
imul
or
pop
ret
jb
adc
shll
popa
clc
jge
das
dec
lahf
stos
imul
mov
push
or
and
pusha
push
jnp
pop
stos
sbb
xor
push
fmuls
mov
pop
dec
xor
jb
cmc
scas
sahf
jae
dec
xor
and
dec
inc
shlb
jmp
clc
movq
loop
sub
and
xor
adc
dec
adc
inc
inc
adc
ljmp
sbb
push
mov
lock
adc
lods
mov
aas
lahf
out
mov
jb
test
repz
hlt
mov
test
pushl
jmp
push
jne
rcrb
jmp
in
cmp
cld
popa
mov
and
test
add
andb
pop
arpl
fidivrl
pop
cmp
xlat
mov
iret
mov
dec
in
into
xor
cmp
pushf
inc
out
les
push
mov
mov
dec
mov
xorl
mov
push
and
ret
movsl
push
pushf
call
int3
fists
push
es
pop
insb
mov
xchg
cmp
dec
adc
sub
dec
insb
rol
mov
jbe
inc
mov
inc
ljmp
push
xchg
and
or
xchg
push
in
push
mov
loopne
mov
enter
cmp
inc
mov
fnstsw
xor
pop
adc
fs
cmp
fldcw
andnps
push
mov
push
xor
push
pop
or
pop
test
gs
roll
sahf
dec
pop
xchg
inc
icebp
cli
lret
jnp
cmp
jge
lret
call
repz
insl
subl
aas
mov
test
hlt
imul
and
pop
push
sbb
mov
inc
xchg
rclb
mov
or
dec
adc
adc
outsb
ret
mov
xchg
jno
push
mov
mov
and
inc
test
jl
and
cmpsb
mov
imul
int3
mov
pop
pop
pushf
or
ljmp
mov
imul
movsl
jae
mov
fwait
cs
insb
mov
scas
dec
jne
xor
cmpl
mov
mov
and
rolb
sarl
push
ljmp
mov
or
ljmp
arpl
das
sub
pop
ret
adc
and
xchg
cmp
bound
outsb
add
pop
enter
shr
and
nop
fadds
jl
loopne
mov
testb
sub
jge
cmc
or
adc
into
sub
mov
fnstsw
cld
xlat
hlt
mov
scas
xchg
push
xor
and
and
push
lcall
mov
test
jne
jmp
push
daa
sub
std
enter
mov
xchg
icebp
insl
cmp
mov
cmp
movsb
adc
mov
or
sub
mov
subb
inc
lahf
movsl
repnz
std
lcall
xchg
adc
mov
in
imul
or
aam
jp
shlb
subb
aas
jmp
pop
lock
or
jge
hlt
inc
adc
inc
dec
shlb
sub
lods
in
add
cltd
pop
lods
xchg
rclb
sbb
ret
ja
arpl
icebp
inc
inc
cs
or
cli
push
or
push
add
int
popf
cmp
leave
xchg
fadds
and
imul
aad
fwait
stos
mov
fdiv
pushf
fisttpll
push
sbb
mov
fisubrs
pushf
js
and
sbb
cmp
jmp
pop
cmpsb
imul
xchg
mov
xlat
in
push
cwtl
xlat
mov
sar
cmp
or
push
je
imul
js
outsb
jae
std
mov
in
mov
lods
mov
jecxz
jbe
ja
dec
push
xor
add
or
inc
push
mov
xchg
inc
lcall
popf
xchg
jne
push
push
cli
jns
sub
dec
mov
mov
ja
push
popa
in
inc
and
xchg
adc
mov
and
and
xor
and
jp
sbb
mov
js
icebp
dec
dec
xchg
dec
mov
or
cli
ja
push
dec
testl
sub
or
mov
cmpsl
dec
dec
js
fisubl
sbb
inc
gs
out
sub
xor
lret
cli
sub
push
jns
push
push
mov
pop
fldenv
hlt
mov
dec
sub
js
jl
adc
cmp
scas
push
xor
movb
ss
xor
cwtl
cmpsb
cld
fst
jp
xchg
int
out
shr
ficoms
lahf
orl
mov
test
in
stos
loop
jo
xchg
xchg
xlat
xor
mov
ret
cwtl
jbe
test
adc
rcrl
movl
pop
pop
stos
fdivrp
lods
fidivs
and
push
mov
mov
adc
popf
xor
push
sub
in
mov
pop
out
or
xchg
stos
add
movsl
mov
fstps
dec
gs
mov
cltd
xchg
jl
dec
dec
aas
mov
lcall
std
data16
ljmp
cli
movsl
mov
lock
ret
mov
pop
dec
mov
cmc
xlat
daa
out
test
pop
dec
test
enter
or
mov
out
movsl
or
jno
add
and
pop
pop
fstpl
push
sub
cli
jmp
mov
loope
lcall
add
mov
ret
mov
mov
cmp
js
mov
push
into
aaa
lret
in
rolb
test
add
lds
push
lds
stos
and
inc
inc
or
cmc
js
jae
call
mov
or
xor
fstp
adc
int
mov
xchg
sahf
jo
xchg
mov
addr16
cmp
lds
sbb
mov
mov
lcall
mov
and
shr
jae
faddl
xchg
pop
jecxz
jmp
and
inc
inc
add
cmp
xor
mov
jmp
rolb
mov
jae
jecxz
inc
pop
pop
xchg
lret
mov
push
sbb
mov
adc
mov
jns
rorl
shl
in
xchg
cmp
mov
clc
mov
mov
adc
dec
or
sub
movsb
push
dec
nop
in
movb
faddl
mov
or
cmp
pop
mov
das
loopne
pop
cs
test
cmp
add
scas
fsubrs
fdivs
imul
imul
xchg
jno
fsubrs
and
jl
xchg
popf
stos
sbb
jo
ja
pop
mov
negb
mov
sub
nop
adc
pop
and
inc
std
pop
sub
lret
out
and
or
dec
mov
adc
and
and
outsl
lock
fistpl
mov
xchg
cmp
adcb
lret
inc
insl
sahf
xchg
popa
dec
out
aad
js
dec
inc
pop
xor
sub
sbb
jle
adc
ret
jnp
sbb
daa
fiaddl
cli
hlt
adc
es
cmpsb
in
popa
jns
mov
pop
shll
int
pushf
arpl
lds
ljmp
dec
in
fdivrs
std
xor
cmp
testl
pop
pushl
cmpsb
xchg
repnz
xor
or
mov
loopne
mov
inc
mov
push
push
aaa
mov
mov
mov
dec
imulb
lods
subb
adc
push
jns
sub
sbb
mov
cmp
cs
add
add
cmpsl
mov
dec
xlat
lcall
stos
aaa
cs
ljmp
shrb
fdivp
cmp
mov
push
pop
jns
mov
dec
insl
push
push
pop
repnz
push
popf
xor
bound
jo
popa
xchg
cld
js
jmp
lods
movsb
jno
outsl
cmp
xor
push
dec
mov
add
pop
mov
jecxz,pt
addr16
sahf
or
mov
aaa
lret
loopne
or
adcb
iret
mov
mov
arpl
adc
add
imul
ljmp
nop
push
adc
adc
jne
inc
xchg
imul
jns
ret
dec
add
arpl
push
add
je
cmp
leave
cmp
popa
mov
cmp
mov
pop
sbb
push
fwait
cwtl
pusha
sub
icebp
jg
sub
push
sub
rolb
sub
call
add
scas
addr16
mov
mov
and
push
cmp
xchg
push
and
adc
and
cmp
cmp
dec
xor
xor
out
arpl
outsl
dec
xchg
lds
pusha
mov
out
loope
cmpsb
and
shlb
dec
inc
icebp
out
dec
adc
daa
in
inc
jnp
push
dec
or
jg
mov
ds
andl
jbe
jns
push
scas
or
push
mov
subb
icebp
rcrb
fadds
ficompl
int3
int
xchg
jmp
mov
int3
push
je
xchg
mov
xor
int3
jp
dec
cmp
dec
and
pushf
xchg
out
cmpsl
mov
sub
testl
sub
ja
pop
sar
xchg
or
fcoms
ret
int
mov
int3
fwait
sbb
xor
in
pop
mov
ljmp
repnz
lcall
and
sbb
push
add
cmp
mov
fcomps
fisttpl
rcll
adc
dec
fdivr
sarb
push
sub
sbb
int3
mov
mov
insb
out
orb
adc
xor
add
push
or
sub
ss
aas
xchg
movsl
scas
vmovss
inc
scas
rcl
xor
sub
sbbl
clc
pop
aad
lret
cmp
loop
mov
mov
es
pop
adc
add
bound
fsubl
sbb
or
cmp
sub
jnp
sub
xorl
cld
push
clc
mov
call
je
aas
mov
sub
bound
push
mov
mov
adc
xor
inc
pushf
sbbb
cwtl
mov
clc
jl
add
icebp
mov
das
mov
mov
mov
lods
int3
pop
push
and
movsl
sti
lea
sbb
mov
dec
pusha
add
je
mov
sahf
pop
push
test
fisttps
fnsave
ficoms
rolb
std
ret
add
cmp
lcall
dec
imul
cmp
cmp
inc
stc
ss
test
sub
and
jle
mov
xchg
es
call
push
outsb
jmp
test
inc
iret
xchg
outsb
cmp
cmp
adc
dec
or
pop
ss
push
lret
and
dec
cld
fidivrs
lret
cwtl
out
stos
inc
add
inc
pushf
push
movsb
rorb
pop
nop
je
movsb
ljmp
and
inc
fwait
cltd
rclb
cld
repnz
xchg
mov
sahf
push
pop
ss
mov
arpl
fists
jbe
mov
jnp
cmp
outsl
or
lcall
jmp
pop
xchg
out
mov
xchg
nop
pop
dec
loope
fstpt
icebp
arpl
mov
xchg
hlt
sti
sbb
push
lcall
mov
or
fs
dec
test
push
loope
jp
icebp
cmpsl
mov
adc
fnstcw
lahf
xchg
pop
or
sbb
pop
pop
subb
mov
mov
push
scas
or
inc
sub
mov
xor
mov
push
cwtl
test
loop
into
movsb
imul
and
sbb
stos
xchg
xor
outsl
adcl
xor
je
in
xchg
pop
sbb
dec
fldl
testl
enter
mov
pop
sbb
mov
mov
sbb
fists
push
lret
jb
jbe
loope
add
ret
data16
adc
into
mov
or
pop
jge,pn
adc
movsb
jno
xor
inc
cmp
dec
adc
scas
inc
xchg
jp
enter
pop
mov
icebp
and
and
jl
jb
xchg
call
movsl
cltd
mov
call
mov
mov
mov
fwait
or
nop
out
movsb
and
cmp
pop
xor
sbb
xchg
lret
adc
movsl
or
or
mov
pop
and
out
mov
or
aaa
push
add
loop
cmpsl
mov
sarb
data16
mov
fiadds
xor
mov
or
imul
inc
add
fmuls
ficompl
fmuls
addr16
pop
cmpsb
mov
test
sub
shl
mov
add
cmpsl
push
imul
mov
lds
xchg
push
push
pop
mov
cmp
and
aas
sub
fdivl
sub
fmuls
sti
sub
add
mov
jl
stos
xor
xor
fisubs
stos
pop
leave
jp
sub
ret
int3
sahf
push
mov
mov
xor
mov
movsb
adc
out
out
stos
aad
or
jne
aas
xor
pop
dec
jecxz
ljmp
lds
inc
mov
push
cmp
rcrb
addr16
mov
leavew
ja
inc
xchg
movsb
and
mov
int3
add
sahf
cmp
cmpsb
lds
xchg
dec
bound
and
cmpsb
jne
stc
and
lahf
outsl
movsl
jmp
mov
shlb
std
fsubrs
mov
xlat
popl
je
cmp
sbb
adc
mov
pop
xchg
inc
jo
aas
add
sub
add
pusha
lahf
mov
xlat
inc
sbb
mul
jnp
xor
stos
gs
adc
movsb
lods
pop
insl
mov
inc
push
push
xchg
xor
sahf
rclb
rcl
jl
push
push
mov
imul
push
pop
fstpt
in
lahf
push
int3
psubusw
or
adcb
insb
mov
sbb
add
negl
mov
mov
jp
xlat
mov
push
inc
fcoms
cmp
mov
cmp
jns
lret
sub
aad
in
es
fnsave
ret
mov
inc
xlat
mov
out
ljmp
sbb
pop
fidivrs
sahf
in
sbb
mov
test
mov
xchg
pusha
cmp
jle
lcall
xchg
or
inc
icebp
iret
ficoml
and
push
movsl
imul
or
mov
inc
jg
cmpsb
mov
out
jo
jp
addl
dec
faddl
mov
das
es
pusha
and
pusha
sahf
arpl
jmp
xor
dec
mov
ja
adc
inc
mov
sub
movsl
shll
mov
outsb
in
mov
jge
xor
ja
mov
in
push
pop
lds
adc
and
push
scas
jns
xchg
stc
enter
push
mov
loopne
aad
dec
or
clc
adc
lock
mov
or
scas
mov
cmp
lcall
test
and
popa
xchg
fs
int
cmp
sahf
sub
mov
xchg
add
mov
push
nop
mov
notrack
jecxz
pop
repz
es
pop
test
or
lret
cmp
adc
xlat
fistpl
and
xchg
negb
or
std
cmp
fimuls
sub
mov
imul
mov
cmp
jno
xor
push
mov
fwait
cmp
push
xchg
iret
out
int
or
imul
sbb
mov
jno
pop
pop
fwait
pop
jp
or
sub
cltd
sar
scas
aam
push
cmp
xor
mov
addr16
xchg
arpl
jle
push
pop
mov
cs
mov
test
mov
or
or
sbb
les
insb
push
xchg
loopne
xchg
das
leave
and
adc
shrl
mov
mov
and
adc
mov
fcoml
mov
arpl
mov
xor
rcll
adc
popa
imul
adc
mov
xor
outsb
adc
adc
xchg
cld
repnz
adc
push
aas
push
xlat
sbb
xor
jb
mov
jle
cmp
pushf
mov
xor
mov
push
inc
and
xor
outsb
xchg
jg
xchg
push
jecxz
std
push
add
push
mov
mov
imulb
movsl
mov
fimull
xor
push
or
mov
iret
ljmp
faddp
adc
jbe
les
or
arpl
mov
cmc
jns
aaa
aad
dec
stc
out
popf
inc
je
dec
mov
mov
xor
sub
sub
jbe
inc
jne
xor
or
mov
xchg
mov
outsb
sarb
dec
add
ds
or
pop
or
mov
jno
and
jge
sub
out
sub
mov
mov
fsubl
inc
cmc
push
add
jbe
lds
cli
mov
and
adc
enter
call
mov
lea
adc
push
incl
sbb
or
jbe
push
and
xchg
repnz
hlt
cmpsl
cltd
fildll
int
mov
and
call
jle
les
ret
xchg
lea
or
or
pop
sbb
pop
fsubrs
ljmp
stos
cmp
or
pop
shrb
xchg
xchg
mov
sub
add
mov
add
dec
lret
mov
xor
jno
add
sti
mov
jg
sbb
out
mov
ficoml
jmp
loop
stos
imul
lret
add
shrb
mov
mov
dec
dec
mov
pop
fnstcw
inc
outsl
insb
push
ret
mov
or
stos
and
sub
add
imul
repz
fimull
into
dec
xor
subb
mov
lods
sub
lcall
popa
nop
insb
cs
jge
out
lock
fs
cmpsb
imul
jecxz
push
push
ret
loopne
pusha
mov
cs
pop
xchg
imul
fcoml
sub
jp
lods
mov
pop
fldt
pop
xchg
stos
mov
icebp
mov
pop
jl
mov
int
lods
xchg
ret
or
pushf
aad
out
adc
jae
mov
push
loopne
stc
xor
xor
sub
jb
dec
dec
in
hlt
mov
sahf
sarl
cli
jecxz
mov
pop
iret
popa
or
or
stos
repnz
test
rcr
cmpb
jo
add
bound
mov
int3
neg
ds
pusha
pushf
in
push
cmc
push
cmp
data16
mov
loope
test
test
add
sub
incb
out
lret
mov
pop
fnstcw
cmp
std
jbe
jp
mov
sarl
shl
dec
sbb
andl
imul
aam
push
mov
or
mov
or
arpl
enter
aad
pop
aam
arpl
mov
inc
jbe
stos
pop
dec
pop
xchg
gs
mov
jg
fiaddl
xchg
pushf
sbb
out
stos
mov
push
in
dec
fldenv
int3
mov
pop
cmp
pushf
add
call
mov
rcrb
mov
mov
xchg
bound
sub
add
mov
fcmovnu
cmpsl
into
mov
pop
fadds
inc
mov
loope
adc
aad
fwait
and
daa
pop
cmp
sbb
shlb
test
bound
xor
sbb
stc
ja
movsb
push
daa
outsl
mov
mov
mov
sbb
dec
push
pop
in
cmp
jne
fimull
inc
cmpb
in
adc
nop
adc
push
int3
leave
outsb
add
cmp
movsb
enter
mov
out
leave
aad
sbb
sub
xchg
xchg
sbb
fbld
mov
aas
rorl
out
aam
stos
test
daa
xchg
addb
jge
push
mov
jbe
int
or
mov
sbb
icebp
hlt
or
ja
fwait
xor
fildl
ja
mov
mov
addr16
sub
jg
std
cmp
movsb
jno
aaa
mov
push
jge
jnp
sub
fildll
sbb
and
and
fs
or
jb
rclb
pop
ljmp
popa
aad
pusha
fildll
insb
jmp
cmp
bound
pop
cld
cmc
dec
sub
dec
xchg
fwait
movsl
int
or
add
sub
icebp
xor
add
data16
add
xor
xchg
dec
aad
pusha
bound
rorb
pusha
dec
in
andb
imul
into
fidivl
lds
dec
pop
faddp
push
jo
test
mov
lods
sbb
dec
xor
ja
lret
sub
fs
ja
pop
shr
cmp
mov
gs
lods
daa
std
pop
rcrb
pop
std
push
ror
xor
sbb
icebp
mov
pop
lock
mov
shl
int
pop
xchg
in
mov
xchg
addl
mov
data16
adc
sub
pop
jmp
sahf
push
rcrl
and
pop
and
lcall
repnz
repnz
sub
adc
lods
jbe
out
mov
inc
mov
adc
adc
push
xor
push
mov
dec
and
sbb
xchg
sub
jno
popa
in
mov
rolb
gs
sbb
mov
test
add
ja
mov
cmp
sbb
mov
inc
pop
add
xchg
scas
pushf
xchg
lods
push
cli
into
out
or
push
js
cmp
xchg
iret
and
fmuls
sub
cmp
mov
inc
pop
fwait
dec
mov
lret
sbb
jp
mov
cmpsl
mov
jmp
jle
mov
push
iret
movsb
and
call
sub
mov
pusha
sbb
imul
jne
hlt
push
mov
jg
and
pop
daa
in
fxch
mov
dec
mov
jns
aas
mul
jmp
jle
or
cmp
imul
mov
xor
pusha
xchg
mov
cld
add
mov
fs
rcrb
jne
or
loop
sub
lahf
sub
mov
mov
adc
aam
jbe
inc
cmpsl
jmp
int
inc
jle
out
inc
inc
sub
int3
lock
cld
iret
mov
jno
enter
dec
sbb
push
dec
mov
or
add
xchg
cmp
cmp
mov
push
jecxz
mov
in
sbb
enter
mov
loop
mov
cmp
mov
cmp
and
lods
mov
pop
and
sahf
call
mov
xchg
popa
js
ss
sub
pop
repnz
jecxz
mov
sar
imul
or
and
bound
and
dec
mov
rclb
lahf
xor
mov
cmp
jno
lock
sub
inc
mov
gs
push
pop
adc
xchg
or
mov
rcr
adc
xchg
mov
sub
daa
fiadds
mov
sbb
stc
leave
inc
xchg
dec
jge
pusha
push
jo
rclb
lcall
and
jecxz
pusha
cwtl
out
stos
test
cld
push
outsl
add
jge
inc
xor
daa
cs
pop
jnp
jg
and
xchg
andl
lock
mov
shll
or
push
movsl
xchg
test
inc
push
call
cli
lret
lcall
pop
ss
dec
hlt
jmp
add
sbb
ss
or
sbbl
outsl
mov
in
std
add
cmp
aas
inc
mov
xor
addr16
cmp
setg
sbb
lret
repnz
jl
fwait
add
arpl
inc
xchg
jbe
gs
xchg
fcomp
sub
orl
sarb
pop
dec
mov
push
ret
pop
shlb
inc
imul
in
pop
push
sti
sub
sbb
jmp
cmp
adc
dec
mul
aam
xchg
test
call
sbb
sti
cmpsb
cmpsb
jle
inc
inc
jl
push
addr16
sbb
dec
data16
mov
xlat
insb
cwtl
or
icebp
or
push
xchg
das
loop
aas
lock
add
sbb
sub
scas
cwtl
or
test
push
int
daa
and
ret
jne
pop
rcl
fidivrl
es
cmp
add
ss
or
or
fildl
daa
std
lcall
xor
mov
scas
pop
or
pop
gs
jns
gs
add
dec
push
pop
mov
dec
dec
jecxz
test
xchg
lcall
push
xorl
lcall
lret
sub
loop
dec
ret
sbb
scas
nop
sub
and
jmp
mov
lret
jb
pop
fisttpll
mov
mov
mov
in
dec
cmp
shlb
pop
mov
cli
xor
lock
mov
sub
xor
xlat
mov
xchg
loop
imul
int3
int3
push
insb
add
push
stos
fadds
gs
dec
sbb
lret
out
lods
out
mov
dec
js
test
cmpsb
and
pop
nop
sub
gs
les
cmp
arpl
xor
mov
sbb
and
sbb
xor
jmp
pop
hlt
cmpsb
xor
fistpll
or
bound
je
cld
testl
lods
sub
mov
mov
push
fsts
push
inc
out
push
sub
out
into
xchg
jle
add
pop
clc
pushf
out
fistpl
cmp
ret
cmp
push
mov
test
pop
insb
and
jg
js
stos
or
mov
stc
aad
or
aas
rolb
aam
loop
push
sub
fst
pop
push
les
bswap
sbb
cmovnp
mul
in
xchg
loop
jecxz
add
sub
xor
je
xchg
bound
adc
jns
sub
mov
cmovnp
ljmp
gs
in
outsl
scas
into
mov
loop
fidivrl
xchg
and
in
cld
mov
pop
pop
loopne
shr
fwait
inc
ds
fmuls
xchg
mov
es
js
mov
filds
int
lods
scas
out
xchg
sub
mov
cmp
mov
jp
pop
leavew
add
cmp
mov
and
pop
add
clc
mov
mov
cmp
inc
lds
cmp
mov
cmpsl
inc
dec
sti
add
add
aaa
mov
pop
jne
mov
inc
mov
sbb
push
mov
pop
dec
das
xchg
test
nop
add
cmpsl
pop
xlat
mov
loope
pusha
enter
rclb
and
sbb
in
mov
pop
les
lcall
fwait
pop
fs
mov
and
push
repz
je
lock
movsb
aaa
push
dec
push
add
or
push
xchg
lds
iret
cltd
or
xorl
in
hlt
push
aad
sbb
sarb
or
jg
adc
ljmp
cltd
jl
jne
roll
and
mov
ja
adc
pop
mov
dec
lcall
insl
adcl
push
xchg
jae
mov
or
leave
jne
lods
in
aam
aas
add
or
sbb
mov
mov
xor
pop
cmp
jbe
adc
pusha
and
adc
cmp
sbb
mov
ljmpw
stos
pop
std
ja
in
xchg
jmp
shll
movsl
clc
mov
iret
pop
sub
in
outsl
mov
mov
sub
int3
cmp
faddl
adcb
shlb
and
jb
jb
subl
adc
sub
mov
inc
lods
mov
lret
push
push
xor
add
out
mov
repz
jle
in
inc
sub
mov
adc
inc
enter
jns
loopne
int3
mov
inc
push
je
into
xchg
mov
and
jp
fnstcw
pop
je
mov
sub
fwait
sub
aas
pop
and
pushf
mov
sub
pushf
mov
adc
fdivrs
pop
and
adc
aas
jno
cmp
mov
cld
xor
jmp
jne
test
push
loop
fdivrs
xchg
mull
test
dec
mov
repz
push
cltd
stos
jno
jecxz
shr
cwtl
inc
sbb
test
add
mov
popa
xchg
subl
cmpsl
test
rcr
xor
add
add
jmp
dec
mov
adc
lret
ljmp
sub
pop
push
jae
ret
and
aaa
push
or
fxch
xor
jecxz
ret
insl
pusha
pop
inc
ds
pop
push
rorb
jmp
inc
in
dec
adc
movl
lock
movsb
rorb
inc
sbb
pusha
xchg
jo
push
in
dec
les
jecxz
or
mov
outsb
pop
lahf
repnz
shlb
sbb
stos
leave
pusha
xor
jecxz
push
mov
jno
jo
adc
sbb
cld
mov
sub
pop
jb
sbb
std
inc
lcall
aas
negl
cmp
stos
filds
xchg
fildl
mov
push
mov
mov
fisttpl
inc
inc
xor
inc
js
in
or
and
mulb
pop
xlat
push
sahf
xor
repz
bound
pop
xchg
inc
push
adc
scas
mov
mov
ficoml
xchg
scas
push
cmpsb
xor
ret
lock
in
out
push
cmc
xchg
repz
enter
mov
or
xor
or
xchg
ds
cli
mov
push
or
jmp
sahf
mov
mov
xor
xchg
enter
fwait
mov
dec
mov
pop
sub
les
sub
and
push
jns
push
fsubp
pop
in
fimull
movsb
cmp
lcall
push
jp
xor
mov
add
sbb
ljmp
lds
in
jnp
sbb
jmp
call
jle
inc
adc
into
mov
call
or
test
ja
jmp
add
lock
xchg
push
fistpl
add
gs
mov
dec
adc
lock
add
addb
imul
push
sarl
add
jmp
stos
lret
in
bound
mov
dec
imul
rclb
and
jae
sub
push
aam
aaa
insb
cmp
mov
insl
insb
shl
fwait
stos
out
js
movsl
xchg
test
or
rorl
jle
test
xchg
fstps
lds
dec
adc
sahf
aam
xor
dec
cld
xorl
pop
xor
ret
lret
sub
lods
sbb
aam
adc
mov
leave
push
push
xor
or
inc
pop
shrl
pop
fistl
enter
test
push
mov
sti
jns
cld
or
outsl
cs
push
sti
xchg
popf
ds
enter
lea
lret
add
inc
pop
add
sahf
pop
arpl
mov
repz
fadds
or
out
dec
or
mov
xlat
and
jo
xor
push
leave
mov
dec
xor
push
call
ja
sbb
push
into
popa
sbb
sbb
movsl
dec
sbb
mov
sahf
fwait
test
adc
mov
loop
push
es
test
ret
mov
nop
sbb
es
and
divl
mov
or
mov
ret
mov
dec
rol
xor
iret
mov
pop
scas
inc
cmp
out
sti
aad
mov
int
jne
add
cmp
adcl
rolb
xorl
movsl
dec
cmp
lcall
pop
aad
or
add
xor
push
jecxz
add
pop
lock
pavgw
lret
mov
stos
jbe
shlb
pop
fwait
mov
lds
push
gs
jbe
mov
fdivrl
inc
adc
daa
scas
or
aam
mov
mov
lret
cs
cmp
sub
adcl
mov
cmp
in
fwait
outsb
xor
iret
inc
cltd
and
inc
adc
lock
mov
xor
pop
cwtl
pop
ljmp
jl
dec
cmp
in
in
jmp
mov
mov
push
jne
xor
lcall
ja
mov
or
out
das
xor
pop
mov
js
jle
jecxz
dec
dec
outsl
xchg
jecxz
js
jne
imull
jmp
inc
inc
int
mov
mov
cmpsl
xorl
add
fs
jne
sub
sbb
sub
cld
sbbb
jno
xchg
dec
jno
fiadds
cltd
pop
imul
imul
adc
in
jno
out
push
sub
xchg
sbb
add
cs
arpl
gs
mov
xorb
mov
pop
inc
mov
cli
ret
daa
and
jge
scas
pop
das
test
mov
or
inc
push
xor
cmc
iret
iret
xchg
or
jae
jmp
into
fimuls
cmp
and
xchg
cmpxchg
arpl
jnp
mov
sub
leave
jno
mov
mov
cmpsl
leave
call
or
lcall
test
xchg
stos
push
das
push
es
push
xchg
push
dec
repz
nop
aad
lock
mov
out
cmp
add
push
out
and
aam
sbb
xchg
mov
imul
int
mov
adc
push
sbb
mov
cmpsl
sbb
stc
nop
xchg
mov
rol
cmp
cmp
hlt
inc
sub
gs
jnp
or
ret
jge
hlt
fmulp
mov
pusha
xchg
push
aad
mov
sbb
pop
jnp
push
jns
dec
cli
test
les
outsb
into
or
insl
jae
cwtl
sbb
or
inc
jecxz
mov
aaa
add
or
mov
cltd
fdivs
and
mov
dec
push
and
mov
fdivrs
lcall
xchg
fiaddl
xchg
mov
mov
aas
cmovg
or
into
xchg
sub
and
pushf
or
mov
dec
add
sbb
test
fists
sbb
push
xchg
xlat
fdivs
mov
rdtsc
pushl
gs
push
mov
fsubrl
mov
inc
das
mulb
jne
push
xor
dec
jle
cmp
ss
sbb
and
fs
cltd
fstpl
cmp
or
subb
in
filds
dec
xor
repz
mov
cmp
pop
add
lret
rcrl
fcomps
push
mov
repz
sub
xchg
pushf
stos
nop
lret
pushf
xor
lret
xchg
popa
aas
test
repz
hlt
stos
test
xchg
push
test
sub
push
popf
xchg
gs
outsb
xchg
xor
daa
cmp
pop
push
lret
inc
cmpsb
pop
cld
xchg
push
jno
shll
mov
sub
or
pop
push
pop
cmp
cmp
pop
pop
xchg
xchg
xor
sahf
dec
int3
dec
loopne
iret
cld
repnz
lds
cmp
movsb
pop
pop
jo
cltd
inc
xorl
test
ss
aaa
xor
pop
fiaddl
repnz
mov
imul
and
fildll
and
sbb
hlt
add
stc
mov
adc
mov
enter
sub
pop
mov
jge
push
or
mov
inc
imul
xchg
aam
je
pop
mov
add
cmpsb
je
mov
std
add
add
rcll
adc
sbb
enter
ret
sbb
inc
scas
aad
js
push
sub
jp
mov
push
jecxz
cmpsb
jle
nop
adc
xor
push
jbe
sub
xchg
aam
jp
xchg
rolb
stos
inc
inc
pop
jg
sbb
adc
test
cmp
scas
add
not
movsl
pop
push
jnp
adcl
jmp
cmc
sub
adc
in
pushf
ret
xchg
aaa
cmpsl
fidivrl
fldl
ret
push
add
jnp
testb
rclb
mov
mov
xlat
sbb
aam
add
pop
dec
stos
jecxz
int3
adc
insb
scas
jle
sti
popf
cmp
js
out
lcall
mov
repz
addr16
test
enter
jecxz
add
mov
xchg
or
stos
inc
jbe
jno
xor
or
xchg
in
sbb
decb
jp
stos
add
shlb
adc
test
loopne
jge
fwait
pop
add
roll
jns
jmp
fcompl
jno
xor
add
sub
fisubrs
int
in
push
mov
out
ds
xor
mov
or
sub
jno
roll
xchg
fildl
adc
jl
and
pop
mov
in
and
push
lods
leave
cmpb
jno
and
pop
xor
idivb
arpl
jmp
xor
lds
repnz
inc
imul
jg
sub
mov
sbb
pop
arpl
imul
fisttps
cli
mov
xchg
dec
insl
popf
notb
dec
inc
jno
loop
int3
cmp
daa
sub
enter
push
xchg
in
dec
pop
je
sub
sub
enter
adc
jg
das
sbb
mov
dec
cmp
and
xor
inc
adc
mov
mov
pop
dec
pop
rorb
pop
bswap
pop
pop
mov
jne
adcl
or
out
dec
addb
aas
jge
ja
pusha
ljmp
jae
outsb
mov
jle
dec
jb
xchg
xchg
xorl
xlat
leave
fwait
pop
dec
push
shll
add
xlat
repz
sbb
cmp
jg
test
push
loop
and
fdecstp
bound
pop
or
loopne
push
mov
bnd
cmp
jno
pop
pop
test
test
stos
add
push
pop
ret
test
in
mov
cltd
mov
pop
cmc
rorl
bound
leave
setnp
mov
push
loope
push
or
sub
out
adc
cmpb
fsts
jae
jecxz
bound
das
adc
popa
sub
in
dec
in
add
mov
push
outsl
jle
and
pushf
sub
cmpsl
cmp
aaa
adc
imul
xchg
addr16
sbb
add
shlb
and
sub
sti
repz
idivb
fmull
bound
mov
pop
stos
pop
ret
aad
inc
decb
jns
sahf
adc
mov
mov
push
fdivl
sub
mov
pop
jmp
jae
cltd
insb
orl
loop
cmp
push
push
bound
adc
rclb
mov
or
pop
lret
mov
int
ja
or
mov
xlat
jb
neg
ret
icebp
or
pop
mov
dec
xlat
fidivl
cmpsb
xchg
sub
ret
xchg
dec
mov
fbld
jmp
add
pop
mov
ror
mov
test
lret
sti
cmc
jo
shll
push
and
ss
inc
loopne
cmp
pusha
bound
sarb
daa
cld
arpl
xor
ret
mov
sbb
mov
add
xor
or
aaa
mov
inc
jmp
push
aaa
test
lret
ds
push
mov
push
shrl
sbbl
sub
dec
test
sbb
xor
aad
push
dec
adc
scas
inc
push
sbb
push
cltd
fsubl
lret
aam
iret
push
fldcw
xor
test
mov
out
sbb
jnp,pn
mov
lahf
fs
sbb
adc
mov
xchg
xor
jns
shlb
inc
and
cmc
jp
call
xchg
out
cmp
jne
and
mov
jecxz
cmp
xorl
mov
in
mov
pop
aas
push
negl
outsb
xor
sub
cmp
jno
xchg
clc
mov
dec
xor
push
adc
test
xor
out
push
inc
xchg
mov
add
gs
ret
push
cmp
repz
enter
push
jne
xchg
hlt
cmp
mov
jb
stos
out
pop
xor
and
icebp
cmp
icebp
in
movsb
fcoms
mov
daa
cmp
cmp
jmp
enter
ja
push
in
arpl
or
out
mov
cmp
mov
stc
loop
repnz
lea
mov
icebp
test
push
pop
mov
mov
scas
fsubrl
add
mov
dec
mov
cmp
sbb
jae
xchg
mov
fldl
loope
mov
arpl
push
push
inc
jns
adc
xchg
in
add
adc
push
aaa
push
je
inc
sbb
into
or
adc
andl
or
test
lea
aam
cmp
fldcw
inc
mov
inc
iret
clc
or
dec
bound
int
dec
mov
mov
add
lods
jne
test
mov
in
push
cwtl
js
xchg
mov
aad
cli
add
mov
push
cld
cmp
and
fwait
mov
xlat
lret
mov
add
stc
and
sub
fistl
dec
mov
and
mov
or
mov
ja
sbb
gs
lcall
sub
aad
ret
cmpsl
aam
sbbl
jo
push
sub
lret
aas
xchg
pop
shlb
leave
xor
xchg
fbld
ret
movsl
xchg
loop
sbb
mov
repz
mov
sub
sub
dec
pop
fucompp
sub
popf
fldcw
ror
and
shlb
jecxz,pt
fidivs
repz
push
and
arpl
mov
lea
mov
sub
cmp
test
push
or
jo
rcrl
sarb
in
stos
jge
addr16
lds
mov
cltd
dec
push
mov
addr16
test
sub
push
lret
jnp
repz
popa
lods
dec
ss
stos
jno
stos
push
mov
jge
int3
dec
test
sahf
cmp
and
mov
cmp
cmp
dec
sub
add
jmp
pushf
popa
int
jne
enter
xchg
sahf
mov
jl
push
xlat
stc
or
add
out
inc
idivl
inc
xor
insl
shll
nop
add
inc
fbstp
lcall
xchg
lahf
int
cld
and
cmpsb
jnp
aas
dec
popa
je
sahf
or
jno
mov
xor
pop
cmp
loop
mov
sti
push
adc
mov
das
inc
xchg
add
lea
imul
sbb
in
jp
pop
or
loop
and
mov
in
call
out
icebp
outsl
add
or
je
je
test
addr16
and
pushf
stos
popa
shll
icebp
adc
bound
into
cmp
xlat
push
sub
scas
add
arpl
inc
nop
out
mov
add
cmpsl
add
mov
pop
clc
rep
popf
mov
testl
push
and
stc
lcall
sbb
nop
ret
lods
add
lret
adc
outsb
jbe
pop
subb
jb
xchg
lret
hlt
movsb
nop
sbb
dec
and
pop
or
cmc
dec
cwtl
test
std
jge
adc
repz
xor
pop
pop
cmpsb
sbb
jecxz
scas
jb
fucomi
fucomi
popa
cmpsb
ret
fcoms
mov
fmull
or
or
out
rorb
rolb
push
insb
xchg
hlt
inc
test
imul
lods
xor
dec
mov
xor
sbb
mov
push
cmp
cs
push
imul
stos
mov
dec
es
lea
cmp
pop
add
push
test
sbb
sub
lcall
gs
push
dec
push
popa
xor
sbb
xor
mov
pop
mov
ret
cmpsb
cmpsb
sub
jns
insl
dec
aas
cmp
gs
aad
mov
or
cmp
push
lock
sub
hlt
push
jne
ret
flds
cmp
scas
push
or
fdivrl
pusha
cli
iret
decb
lods
lcall
subl
aaa
clc
incl
dec
and
jne
add
push
jecxz
add
sbb
inc
and
dec
and
and
inc
pop
inc
inc
sarl
and
xchg
lcall
push
sbb
fdivr
into
in
cmp
ss
xor
xor
test
mov
xorb
xchg
inc
push
push
aad
inc
mov
out
mov
dec
xchg
jnp
inc
push
push
xchg
dec
lods
out
div
nop
xor
lcall
jecxz
dec
xchg
mov
mov
adc
into
jne
push
lcall
sbb
adc
push
cmc
les
cmp
dec
leave
pop
jo
shrb
cmp
adc
rep
cmp
pop
xchg
and
ljmp
push
xorl
loop
mov
mov
cwtl
adc
cmpsb
push
stos
in
mov
aaa
mov
imul
dec
es
jnp
mov
jge
mov
push
repnz
hlt
outsl
movsl
push
in
sbb
xor
in
popf
rorl
and
leave
loope
xor
xchg
sti
lods
andb
test
xlat
cmp
jle
loop
ss
and
mov
xlat
jne
testb
cmp
ret
push
pop
aaa
test
mov
jmp
push
jmp
xchg
push
adc
sbb
push
andl
mov
jmp
dec
push
jmp
push
mov
cmp
jmp
adc
adc
mov
in
stc
in
dec
fnsave
push
pop
aam
adc
sbb
int
lds
pop
into
sub
mov
xchg
call
pop
mov
sbb
jne
fcomp
adcl
fldt
scas
out
ss
or
xor
cltd
lahf
test
subb
lret
mov
cltd
sub
rorb
or
fsubs
loopne
pop
fdivs
mov
loop
xor
pop
ja
xchg
test
cmp
inc
add
decl
mov
leave
loope
pop
fidivs
jno
and
addr16
adc
repnz
xor
and
das
pop
test
cmp
clc
inc
nop
sbb
mov
iret
mov
gs
fbld
iret
rorb
dec
cmc
push
jns
mov
rolb
hlt
mov
in
sub
push
lret
lahf
out
ret
xlat
push
push
pop
dec
dec
mov
mov
sbb
jge
shll
inc
pop
jnp
sahf
dec
sti
sbbb
xchg
mov
idivl
xchg
loope
aaa
ja
fstl
add
jae
push
xchg
aaa
add
pop
negl
or
push
xchg
mov
or
repnz
fidivl
adc
jo
gs
sub
lock
daa
test
out
push
insb
and
dec
in
cltd
in
push
loop
mov
or
or
orl
xor
gs
pop
outsl
xchg
rorl
mov
dec
and
in
in
sti
mov
pusha
lret
loopne
cmp
pop
mov
adc
pop
pop
inc
or
jl
dec
fstpt
add
popa
loop
out
mov
mov
fcoms
dec
xchg
sub
repnz
movsb
sahf
pop
lods
push
jmp
lods
push
mov
sbb
loopne
and
push
test
daa
ljmp
outsb
pushf
iret
addl
cld
or
popa
in
cli
adcb
xchg
xor
je
in
xchg
insl
out
test
ljmp
xor
ds
lret
in
cmp
gs
in
jle
mov
or
cmp
sbbb
xlat
lds
mov
add
rcr
paddw
xor
mov
inc
dec
inc
and
cmpsl
jae
sbb
xor
out
or
mov
les
jl
dec
sub
dec
pop
pop
out
adc
sbb
aam
cltd
mov
and
add
fistpl
sub
inc
aad
mov
sbb
popw
lea
dec
arpl
jbe
pop
stos
aam
or
bound
inc
pop
cmp
jle
cmc
xor
mov
and
aad
icebp
pop
mov
mov
test
sbb
aad
push
mov
int3
mov
push
lock
jbe
cwtl
pop
dec
push
aam
out
cmp
lock
mov
decb
mov
mov
xchg
mov
fldenv
push
push
pop
rolb
les
adc
dec
movsl
aas
lock
sti
mov
xchg
xor
dec
aam
and
neg
and
jg
cs
nop
mov
or
lahf
add
inc
cmp
daa
jbe
pop
cmp
sti
jo
pop
fisttps
xor
and
mov
mov
cmp
sbb
ret
and
mov
add
push
add
fwait
sbb
lcall
cli
dec
inc
dec
je
xor
hlt
jp
jo
inc
sti
imul
sub
xchg
adc
insb
lahf
xchg
adc
push
mov
js
pushf
xchg
sbb
mov
stos
les
iretw
loop
testb
sub
mov
lea
mov
jmp
pop
lea
pop
addr16
cmp
push
xchg
ret
int
lcall
jns
push
clc
adc
int3
inc
ret
call
pop
repnz
inc
sub
aam
dec
xor
test
loop
scas
jg
fistps
sti
adc
popf
pop
or
push
loope
aam
scas
add
sub
or
lods
cmp
imul
mov
clc
shll
sub
into
mov
push
and
mov
addr16
mov
xchg
adc
or
out
xlat
mov
dec
adc
call
pop
sti
inc
adcl
cmpsl
out
dec
mov
mov
push
cli
stc
add
sbb
jb
push
movsl
jns
fwait
imul
stos
pop
call
adc
mov
mov
ljmp
push
mulb
test
adc
cmp
aad
bound
mov
popf
inc
gs
lea
out
xchg
int3
test
inc
cmp
lods
mov
insl
push
bound
or
jnp
cld
lret
xchg
aas
adc
es
inc
jg
aas
cltd
sub
pop
daa
cmp
sbb
out
mov
rolb
dec
mull
cmp
and
aaa
subl
mov
cs
xchg
sbb
test
out
out
test
add
mov
jbe
pop
adc
insl
jp
mov
test
inc
dec
pop
lea
and
fidivl
mov
and
push
adc
cmpsl
or
movsl
push
push
fdivl
mov
sub
cmpsl
cmp
mov
shl
push
jb
and
cmpsb
jb
jmp
inc
mov
rorl
std
lahf
xchg
fistpll
sbb
stc
and
and
or
lock
fdivs
cld
pop
in
dec
adc
add
fs
fdivrp
bound
addr16
jl
xchg
xchg
inc
adc
lock
or
push
mov
adc
and
loopne
cmp
xor
jns
cltd
das
roll
mov
roll
sahf
or
aad
ffree
lret
in
push
sub
out
fisttpl
jecxz
shrl
mov
sub
pop
mov
xor
or
shrl
subb
inc
loopne
lret
cltd
dec
push
fiadds
idivl
mov
mov
inc
pusha
cmp
adc
push
dec
jno
mov
ljmp
les
popw
in
out
imul
and
or
fdivl
or
out
icebp
aaa
push
pop
aas
test
fdivrl
in
pop
in
loop
ja
mov
and
xlat
jmp
push
fwait
or
cltd
dec
sbb
cltd
cmp
push
adc
mov
adc
lahf
call
stos
mov
insl
aas
divb
push
dec
xchg
ja
push
jecxz
mov
jns
aam
out
lods
fdiv
lods
and
bound
mov
pop
popa
lds
push
cmp
adc
pop
cmovne
les
imul
add
xor
inc
decl
adc
iret
lock
or
mov
inc
adc
adc
jae
sbb
idivb
lock
dec
push
cmp
lahf
xlat
cmp
aam
pop
and
cli
jne
sbb
adc
arpl
cmp
hlt
dec
jo
pop
lds
js
mov
mov
lret
push
stos
mov
mov
pop
inc
mov
insb
add
sbb
dec
icebp
xchg
sbb
mov
movsl
popa
inc
sarl
imul
cmp
jecxz
xchg
aad
sbb
push
dec
xor
cmpsl
push
cmp
mov
repnz
out
push
push
cwtl
mov
xor
push
mov
scas
mov
push
or
add
rorl
xchg
dec
sti
add
ds
inc
js
imul
inc
dec
mov
scas
movsl
mov
in
test
xchg
fnstcw
jl
inc
adc
fistl
xor
shlb
lds
xlat
adcb
div
testl
cmp
lahf
sti
loopne
repnz
lret
mov
adc
lods
aaa
mov
pop
repz
adc
adc
rorl
cld
adc
lret
xchg
lret
cmp
loope
xchg
adc
out
aad
into
push
hlt
push
and
fstpt
ss
adc
xchg
hlt
adc
shrl
daa
and
dec
sub
jmp
fcmovb
pop
fisttpll
clc
push
lds
loopne
lods
in
inc
mov
push
xchg
jns
xchg
jg
sub
add
mov
mov
daa
mov
pop
js
mov
loop
flds
cwtl
icebp
ljmp
sbb
mov
je
ds
inc
push
aaa
mov
push
push
mov
dec
in
adc
subl
mov
dec
mov
fildll
mov
out
outsb
add
aam
dec
and
mov
adc
lods
jno
stos
and
ret
sbb
add
push
mov
aas
xor
add
mov
adc
into
mov
stc
call
int
pop
fs
bound
add
mov
sbb
push
dec
dec
jg
shr
jbe
push
sti
sahf
jg
test
outsb
cmp
inc
mov
mov
lcall
sub
or
push
push
inc
in
std
pop
mov
addr16
nop
cmp
imul
fwait
popf
jae
jbe
enter
jp
pop
repnz
adc
paddusb
dec
aam
push
dec
xchg
cwtl
insl
sbb
stos
cmp
mov
add
xlat
xchg
cmc
pop
jge
xor
divb
and
aas
pop
pop
xor
js
outsl
fmull
sbb
pushf
popf
into
sub
lret
lea
lahf
sub
jp
mov
add
imul
pop
pop
pop
sbb
mov
dec
jns
mov
loope
mov
jmp
sbb
add
or
int
lcall
out
cltd
jbe
pop
shr
dec
and
leave
js
aam
lahf
and
inc
pop
xor
and
adc
jle
push
xor
sbb
add
test
clc
ret
push
inc
add
mov
cmp
lahf
and
mov
ret
pushf
icebp
andb
lret
push
cmp
and
subb
jle
sub
mov
xor
test
fmull
popa
jl
test
vpcmpeqb
push
movb
je
fdivs
mov
into
icebp
dec
pop
arpl
inc
sbb
jge
lods
cmc
or
mov
lods
inc
pop
push
mov
push
mov
pop
inc
fwait
sub
aad
roll
shlb
jnp
sbb
shll
and
out
push
shll
mov
into
mov
jo
sbb
adc
ret
dec
xchg
xor
sub
arpl
mov
shl
mov
lds
pop
jb
sub
loopne
push
sub
outsl
popf
or
and
pop
xchg
clc
cmp
je
jmp
scas
xchg
lea
cwtl
jp
bound
mov
stos
orb
into
jl
and
jl
adc
jno
aas
mov
daa
jmp
bound
fisttps
insb
ljmp
adc
sbb
add
movl
in
cmp
cmpsl
mov
xchg
push
dec
mov
mov
xchg
subl
xor
adc
jbe
faddp
mov
sub
rcll
bound
jg
dec
mov
jle
cmp
xchg
sbb
sub
cli
mov
lret
std
iret
fstps
out
jae
aas
aas
leave
pushf
mov
popa
pop
inc
rolb
and
ljmp
lock
jecxz
dec
aas
jle
mov
mov
mov
pushaw
outsb
aam
push
iret
jl
lods
sbb
lret
push
xor
leave
loope
mov
and
xchg
cld
inc
popa
scas
call
jl
ljmp
xorb
mov
mov
sbb
stc
sbb
mov
lea
ja
fs
cs
cmp
jbe
mov
and
sub
pushf
add
test
xchg
outsb
cmp
dec
push
movsb
mull
mov
lret
ret
int3
aaa
push
inc
mov
and
dec
and
repz
xor
sti
mov
cmp
jbe
aas
add
fstl
mov
cmp
or
or
leave
scas
cs
sbb
mov
jge
jno
data16
in
or
xor
and
popf
sub
add
ljmp
mov
xor
xchg
xchg
xor
xchg
aam
test
dec
out
pop
and
divb
sbb
pusha
inc
dec
add
out
or
out
mov
es
and
scas
adc
or
in
push
sbb
sbb
and
lods
shlb
cmp
gs
aad
mulb
rcll
dec
gs
shl
out
push
dec
inc
pop
scas
mov
iret
and
mov
mov
rcl
fidivs
mov
daa
push
dec
dec
mov
pop
lret
aam
call
pop
xor
popa
sbb
push
pusha
je
sub
push
jb
nopl
add
pop
dec
icebp
inc
lcall
push
test
cmpsb
adc
mov
inc
clc
dec
movsl
ret
jns
insb
cmp
in
cs
push
divl
mov
dec
mov
sbb
js
or
pop
andb
mov
sti
cli
movsb
dec
push
sar
insb
fldcw
adc
aaa
mov
popa
pop
push
sub
ljmp
mov
pushf
cmp
insb
pop
or
fnsave
fcmovb
push
scas
inc
mov
ret
test
icebp
inc
push
sahf
fmuls
xchg
outsl
xor
and
adc
popa
aaa
cmp
shrb
mov
mov
and
mov
mov
cld
jl
sub
sub
mov
ret
repnz
sbb
add
cwtl
ss
scas
fsts
das
xchg
insl
aas
andl
imul
or
jge
xor
push
rcr
dec
mov
repnz
pusha
mov
or
cli
loope
adcl
sbb
dec
xchg
repz
xchg
jo
arpl
mov
or
test
xchg
mov
xchg
cwtl
leave
adc
aaa
ds
jl
das
mov
adc
sahf
xchg
mov
nop
das
mov
hlt
fwait
subl
add
cs
repz
minps
jecxz
jno
xor
jne
jle
cmc
mov
daa
hlt
inc
xlat
subl
xchg
pop
mov
adc
mov
mov
repnz
movsb
test
subl
jl
cmp
cmp
les
mov
jl
jecxz
ss
popa
cltd
js
jne
lock
mov
fistpll
inc
bound
cmp
dec
lret
rcrl
das
aad
cs
outsl
xor
outsb
out
pusha
push
jae
fmull
ljmp
aad
xor
or
lea
mov
lods
sub
push
scas
jecxz
mov
inc
mov
dec
push
mov
xchg
ss
cltd
dec
movb
jg
cmp
inc
icebp
sbb
jns
mov
leave
cli
rclb
addr16
mov
aaa
dec
dec
xchg
fisubl
push
psubw
ret
xlat
les
xchg
test
xchg
add
mov
mov
inc
jo
imul
mov
xchg
push
mov
adc
add
imul
lcall
pop
lea
adc
cli
push
dec
fwait
xor
in
rcrb
pop
ds
push
test
sbb
sbb
cmpsb
pop
xchg
push
cli
inc
mov
in
mov
lods
xchg
push
in
cmp
sub
mov
loopne
fildll
inc
aam
cmp
lret
push
sbb
inc
mov
add
sbb
sbb
dec
or
xor
dec
mov
push
or
stc
pop
adc
jnp
adc
mov
aad
loop
sarb
aad
lret
into
imull
es
xchg
mov
xor
popa
pusha
roll
ficompl
pop
sbb
or
mov
pop
outsb
mov
dec
adc
leave
lods
xchg
push
jl
test
cld
xlat
pusha
pop
loop
cltd
pop
inc
cmc
cmpsb
jbe
nop
or
cmpl
lcall
add
jno
popf
sbb
mov
loope
aam
cmp
dec
ret
lods
push
push
mov
fdivrp
jmp
inc
data16
ljmp
int3
mov
sub
lahf
xchg
adc
in
cmp
lahf
rcr
jmp
mov
lods
and
ss
clc
pop
add
dec
mov
pop
dec
mov
mov
shll
or
call
fdivs
or
dec
pushf
pushf
jge
adc
lret
fisttpl
xor
popa
in
hlt
mov
inc
repnz
cvtps2pd
lea
jbe
lods
or
adc
adc
ret
inc
sub
jmp
pusha
jmp
in
ljmp
lds
jns
in
hlt
sbb
push
xor
pop
mov
and
or
ljmp
mov
stos
jnp
es
pop
mov
hlt
lret
les
outsb
fabs
push
xchg
xorb
stos
xchg
int3
or
pushf
inc
loope
mov
pop
jo
push
mov
scas
dec
imul
mov
ja
inc
fists
rolb
repz
frstor
add
pop
cltd
aad
cld
inc
push
push
xchg
add
jb
mov
dec
nop
arpl
test
stos
sub
pop
push
fmull
or
jg
mov
roll
cmpb
fwait
movd
lds
mov
xlat
aad
sub
outsb
dec
fistl
mov
je
jecxz
gs
stc
in
cmp
xlat
int
ss
dec
cwtl
dec
gs
jo
push
popa
ds
lret
mov
jae
in
jp
pop
aaa
push
dec
mov
mov
sbb
daa
mov
out
xchg
dec
iret
add
add
or
jns
repz
pusha
out
jo
jae
icebp
sarb
mov
dec
push
jmp
fisubrs
and
adc
sbb
jne
or
rorl
jae
push
add
inc
mov
cmp
add
pop
icebp
jl
push
xchg
add
clc
pop
addl
mov
jmp
out
insl
or
and
test
lds
cmc
sbb
mov
push
movsb
cmp
bound
fld
data16
or
pop
lods
imul
push
adc
jle
ljmp
xchg
push
add
push
addr16
push
mov
push
cmc
ret
les
push
mov
cmpsb
add
jns
add
jo
mov
das
dec
out
sub
inc
sub
sub
dec
sub
daa
in
outsb
and
repnz
stos
xchg
je
arpl
pop
out
push
cmp
mov
call
jne
xchg
jns
out
clc
and
jae
jecxz
add
cmc
clc
fsubl
in
mov
shrb
ficoml
outsb
out
lret
add
xchg
xor
pop
and
test
sarl
mov
orb
mov
mov
cmp
or
add
cs
bound
pop
out
data16
stc
in
jge
sub
push
es
inc
adc
lret
add
test
les
pushf
les
sbb
add
adc
ret
dec
inc
pop
pop
in
fstpt
out
loopne
ret
xchg
addr16
fwait
sti
pop
imul
mov
stc
aas
pop
dec
shr
mov
xchg
jmp
cli
mov
and
syscall
jae
outsb
incb
rol
or
jo
les
xchg
rorl
jle
push
jbe
and
frstor
cmc
cmp
mov
into
fs
adc
jne
push
mov
sbb
je
add
faddl
ficoms
sbb
int3
push
or
mov
aaa
or
cmpl
cld
shlb
iret
pop
pop
add
es
jge
push
xchg
icebp
into
fs
sub
dec
ret
insl
das
xor
cmc
mov
sbb
mov
jns
mov
cmpsl
xchg
push
lods
cmp
adc
inc
cmpsl
jl
mov
cs
out
push
adc
outsl
sbb
lods
lea
aas
xchg
out
pop
pushf
xchg
in
pop
adc
outsl
test
int
push
mov
adc
sub
or
into
cmp
sbb
out
mov
cmp
inc
cmp
loope
cltd
jecxz
xchg
dec
ss
aam
jno
in
aam
rorb
lock
jns
xchg
mov
mov
push
push
xchg
std
mov
sbb
push
ret
mov
call
xor
lret
scas
ss
jnp
es
leave
les
mov
pop
mov
stc
ret
xchg
xlat
insl
repz
movsb
shll
cwtl
and
lods
cs
gs
fwait
es
adc
ja
test
aam
mov
cmc
xor
cmpsb
adc
sti
rclb
pop
cmp
xchg
out
dec
imul
dec
fnsave
pop
fdivs
sub
fisttps
adc
inc
jmp
mov
cld
rcl
push
mov
inc
add
lret
add
mov
jge
sbb
xor
lret
mov
dec
mov
jecxz
pop
inc
loop
test
xchg
sub
adc
iret
into
mov
cmp
adc
loop
pop
xor
pop
sub
mov
divb
cmp
fadds
jnp
ja
out
aas
std
push
mov
lcall
daa
sbb
mov
and
ficoms
jp
mov
jbe
mov
mov
xchg
jl
mov
adc
xchg
dec
cli
dec
mov
cli
loop
cmp
cmp
or
mov
mov
mov
in
mov
mov
jp
mov
aas
ljmp
sbb
jnp
cmp
in
xchg
pop
arpl
sub
inc
ficoml
loope
mov
dec
imul
mulb
pusha
xlat
pushf
push
xor
push
loop
cli
xchg
jns
adc
sbb
daa
add
sbb
out
sahf
dec
cld
roll
mov
mov
cmpsl
add
sbb
cmpsb
pop
dec
pushf
lahf
mov
push
loopne
aam
icebp
inc
dec
das
dec
xchg
sbb
mov
int3
int3
dec
stc
and
icebp
sub
sub
or
dec
mov
and
orb
jge
out
dec
push
out
iret
cmp
push
sub
lahf
sub
mov
mov
ret
pusha
aam
jbe
push
call
and
sub
mov
and
clc
or
sub
xor
std
cmp
jne
incl
sub
and
xor
pmulhuw
sbb
gs
popa
icebp
nop
adc
leave
and
fisttpl
jmp
lret
push
or
mov
push
xlat
mov
test
jno
pop
jg
dec
dec
mov
fwait
cltd
subl
inc
jae
lret
push
sbb
add
or
mov
in
lret
leave
test
dec
add
add
cmp
pushf
inc
fisubl
adc
mov
lret
xor
jae
lcall
push
popf
xchg
mov
adc
mov
gs
cwtl
jae
lret
aaa
lahf
aas
adc
mov
mov
jmp
push
in
mov
mov
fcoml
inc
push
mov
add
lahf
push
sub
cs
scas
and
mov
sub
jle
cmpb
mov
mov
mov
repnz
inc
mov
pop
jecxz
adc
xchg
stos
loopne
jg
lock
or
mov
lcall
lods
cmp
out
xchg
cmpsl
shl
lea
lcall
stos
xor
mov
pop
iret
lods
sub
rcrb
xor
add
shlb
cmp
fdivs
add
mov
mov
sub
jmp
cli
inc
jnp
cmpl
mov
loope
data16
dec
aas
daa
and
cmp
ljmp
mov
xor
cmp
sub
mov
xor
jl
lret
cmpl
aad
pop
jae
testl
lahf
and
fldt
xchg
inc
fildll
adcl
xor
stos
adc
cmp
cmp
jle
or
test
sub
mov
hlt
std
or
lods
imul
dec
mov
ja
js
mull
lahf
or
jecxz
add
dec
cltd
fwait
ret
loop
dec
dec
mov
popf
inc
xorl
push
out
stc
mov
outsl
shr
ja
ret
cs
cs
scas
ret
dec
ss
call
fisubl
stos
sbb
rcrb
cmp
push
jae
mov
ret
inc
push
push
je
lcall
fdivr
push
fwait
mov
or
inc
shufps
test
stc
and
enter
pop
pop
ret
sbb
push
xchg
outsb
mov
sbb
and
inc
mov
mov
xchg
push
in
sar
repz
jl
std
push
xor
mov
sbb
popa
inc
sbb
mov
inc
add
jno
xor
xor
popf
in
push
inc
pop
mov
xor
push
and
pop
sbb
sti
push
mov
lods
cmpsb
je
push
pushf
push
jge
cmp
arpl
fdivrs
push
or
mov
enter
ja
dec
jmp
and
ret
insb
add
add
ljmp
jp
cwtl
jle
pop
inc
cwtl
mov
cltd
jbe
cmp
push
out
xchg
dec
fmulp
fcoms
test
inc
int
cmpsl
ja
scas
dec
out
test
mov
sub
popa
fwait
pop
mov
nop
push
int3
or
mov
enter
in
adc
mov
mov
or
daa
shlb
lcall
push
xchg
clc
out
sub
jecxz
cmp
test
pop
inc
xor
subb
clc
or
xchg
jp
or
jno
xchg
cmpsb
addr16
dec
mov
pop
lahf
in
xchg
add
loop
ds
sbb
cs
lds
push
popf
cwtl
push
xchg
mov
cmpsl
lahf
ds
cmp
pushl
or
jmp
xchg
cwtl
jg
test
sub
sub
inc
mov
add
add
nop
loop
xchg
cmpsb
decb
adc
bound
leave
aaa
mov
sub
sbb
jg
and
add
std
mov
cmc
icebp
sahf
sub
pop
loopne
and
jecxz
outsl
mov
sub
mov
push
or
jne
into
jno
fwait
or
in
mov
fwait
lahf
in
mov
fnstenv
addr16
mov
call
movsb
jns
xor
mov
cs
mov
out
ret
mov
loope
push
xor
inc
outsb
push
xchg
mov
xor
loope
fbstp
shr
jno
push
sbb
mov
sub
push
or
notl
add
mov
into
xor
jno
mov
repnz
iret
and
cwtl
fistpl
lods
je
aad
imulb
pop
cmp
or
pushf
in
xchg
outsb
xchg
inc
imul
loope
cmp
xchg
inc
sbb
cmp
out
inc
test
int
lods
hlt
sub
icebp
test
mov
lea
movb
inc
inc
and
jecxz
and
mov
mov
inc
xchg
fiaddl
jge
pop
stos
push
lock
movsb
sub
jmp
mov
ret
and
dec
adc
outsb
mov
cmp
loop
ror
addr16
clc
imul
or
lahf
sub
fcomps
pusha
xor
call
mov
mov
pop
mov
add
mov
mov
enter
and
sbb
sarl
fcmovb
push
xchg
pop
ss
push
ficoms
aam
aaa
loope
mov
ja
push
ljmp
mov
movsb
mov
fisubrl
inc
test
call
mov
subb
popa
std
lds
in
mov
bound
cs
stos
mov
adc
pop
and
aaa
outsl
adc
jge
aam
push
push
dec
mov
or
dec
mov
cmpsl
or
jp
jg
mov
fstpl
cmp
inc
enter
fnsave
fldt
xchg
aad
push
test
add
pop
aas
adc
pushf
add
pop
xchg
push
loop
fnstcw
dec
push
xlat
mov
lahf
and
push
mov
push
or
loop
scas
pop
pop
xor
scas
fwait
inc
mov
incb
jg
loope
lcall
jne
orb
xchg
outsl
ds
mov
xchg
xor
push
stos
or
sahf
push
sub
pop
dec
shrb
mov
sahf
push
imul
sub
xor
nop
shlb
rcll
shlb
repz
jle
scas
hlt
int
shll
cld
jecxz
jb
iret
dec
jbe
push
dec
leave
fimull
idivl
loopne
insb
xchg
sub
push
in
cltd
cmp
sarb
daa
int
in
dec
ds
mov
add
test
lahf
jno
icebp
lahf
pop
sub
push
dec
push
nop
jnp
or
les
sbb
jecxz
ss
repnz
ss
iret
mov
inc
pop
pop
out
jg
fsubl
inc
in
arpl
int3
or
inc
lret
sbb
out
xor
test
dec
and
popf
dec
mov
sub
and
mov
fcoms
cltd
xor
jno
popf
cmp
pop
hlt
sub
pop
adc
in
js
and
fistps
or
pop
sub
mov
push
icebp
leave
mov
mov
push
or
push
pop
push
repz
sbb
mov
ja
loop
mov
aaa
fcomps
xchg
mov
xor
addr16
outsb
lahf
mov
mov
sub
enter
mov
push
pop
sahf
inc
popa
mov
fistl
insl
mov
test
insb
clc
sub
cs
sbb
popa
fidivrl
sahf
movsb
insl
mov
fsubl
loop
lock
sbb
les
mov
or
mov
mov
mov
jo
inc
test
les
bound
ficoms
xchg
in
add
adc
xchg
sti
cs
icebp
aas
cltd
mov
fistps
mov
push
or
push
mov
or
sub
sti
loopne
push
stc
jb
inc
in
cli
pop
decl
cmp
in
std
test
cmc
push
sbb
pop
or
mov
test
icebp
aad
add
inc
hlt
push
dec
mov
cmp
adc
xchg
push
bound
mov
lahf
adc
push
enter
jb
pop
cli
mov
int3
hlt
adc
lods
in
pushf
out
mov
add
das
pop
mov
fsts
stos
ffree
push
inc
jbe
fbstp
mov
rcrl
xchg
scas
roll
mov
aas
pminub
lods
sahf
scas
push
cmp
ja
or
pop
adc
jg
xchg
pop
jo
scas
add
lea
push
std
cld
in
enter
nop
jl
hlt
mov
dec
sbb
adc
repz
jns
sbb
notl
jmp
test
and
aam
lock
shlb
lods
mov
ror
ds
lea
pusha
fwait
inc
lret
add
xchg
or
cmpsb
push
inc
sub
pop
mov
and
incl
xchg
sti
sbb
dec
xor
sbb
mov
fs
add
mov
inc
ds
into
lea
jno
cmc
sbb
mov
insl
lea
aad
stos
loop
int3
pop
mov
add
inc
xor
xor
loopne
or
adc
push
jle
mov
and
pop
scas
jno
out
enter
daa
jp
pop
out
out
cld
das
stos
mov
icebp
mov
jnp
xor
xchg
call
pop
mov
pusha
pop
leave
clc
test
cld
jns
add
cmp
push
movl
xchg
cmp
mov
jno
adc
mov
out
push
mov
loopne
jbe
rcrl
popl
cmp
adc
outsl
xchg
jle
push
sbb
lods
mov
fcmovbe
adc
movsb
sub
inc
sbbb
std
cmc
ja
in
push
std
xor
lret
cmp
mov
sti
mov
push
fimuls
mov
ja
aas
fdivl
out
mov
cmpl
popa
das
fistps
xor
movsb
aas
sbbb
push
inc
lods
sub
scas
adc
sbb
jle
into
pushf
and
aam
pop
data16
dec
dec
xor
scas
lods
outsl
or
adc
push
or
repz
mov
imul
mov
pop
cmp
mov
es
push
scas
outsl
lods
loopne
lcall
xlat
mov
hlt
pop
xchg
pusha
stos
or
mov
jne
or
jg
add
dec
pop
cmpsb
jo
in
imul
mov
and
jae
lcall
wrmsr
imul
cmp
and
push
cmp
pop
jns
in
cmp
push
cs
mov
push
ret
add
fisubrs
xchg
push
cmpsl
sbb
sbb
ret
pop
push
outsb
loopne
adc
pop
lret
out
int3
cltd
pop
loope
clc
shll
jl
inc
jge
cmp
cmp
xlat
in
out
push
movsl
movl
mov
pop
lods
mov
rcr
jge
adc
aaa
add
sahf
jbe
jg
out
xchg
push
imul
add
aad
inc
stos
dec
ret
fisubl
lods
ret
mov
push
in
dec
mov
push
mov
adc
push
jnp
addr16
mov
jp
jmp
mov
das
pop
mov
nop
inc
pop
xchg
pop
pop
xlat
call
stos
mov
dec
sti
sbb
inc
sbb
ficoml
mov
push
test
add
pop
loop
outsl
rclb
mov
rol
xor
jecxz,pn
cld
fisubs
in
mov
daa
xor
jmp
out
cmp
or
mov
popa
sti
popl
push
jg
push
mov
mov
sub
inc
xchg
jbe
fs
xchg
inc
jp
mov
sti
in
jl
in
shll
call
and
jge
pop
jae
maxps
xchg
push
loop
into
mov
in
inc
adc
mov
sub
fcomps
xchg
or
jnp
sahf
mov
loopne
iret
adc
jmp
xlat
out
insb
mov
out
xor
hlt
repz
push
dec
pop
mov
mov
mov
or
shrb
xchg
in
scas
jecxz
out
pop
out
or
xchg
std
mov
push
inc
int
cltd
in
push
insl
inc
lods
dec
in
leave
aam
cmc
jmp
adc
add
test
testl
jnp
push
jp
pop
out
mov
in
adcb
lds
lret
xchg
daa
xchg
sub
lcall
aad
rcll
rolb
jo
xor
push
out
sub
sub
jg
aam
add
add
in
sbb
inc
call
push
add
std
into
cmp
jmp
xor
mov
xchg
fcomps
inc
shll
push
cmp
mov
icebp
push
outsb
adc
insb
call
imul
sub
test
mov
sub
xchg
fimull
cmp
int
sarl
fistpl
jmp
add
ds
jb
mov
pop
mov
insb
popf
das
lahf
test
pop
push
pop
adc
mov
add
pop
lock
jl
pop
jnp
xor
mov
jle
clc
mov
sbb
fdivrl
iret
lahf
fildll
cmp
mov
movsb
mov
pop
rorb
cli
js
xlat
jmp
nop/reserved
pop
xchg
je
outsl
arpl
pop
sbb
mov
mov
lea
testb
rcrl
loope
push
sar
leave
in
mov
repnz
cmp
pop
lcall
fnstcw
pop
call
ds
cmp
mov
setge
ffree
aad
call
pushf
bound
icebp
test
and
lea
test
cli
sbb
movsb
cld
in
fistps
test
push
bound
sahf
pop
mov
aam
inc
sahf
ficomps
inc
inc
je
sahf
push
stos
out
mov
dec
imul
or
mov
push
outsb
dec
mov
cltd
test
pop
jnp
and
js
pop
out
or
xchg
sub
mov
pop
fadds
inc
aam
jae
out
adc
fwait
movsb
data16
jle
rorl
loope
cld
cwtl
stos
xchg
gs
loopne
cmp
mov
loopne
dec
cmp
cwtl
pop
push
add
xor
or
lret
inc
and
loopne
pop
adc
adc
aaa
mov
addb
xlat
mov
movsb
pop
jo
shlb
outsb
repnz
lahf
and
loop
gs
xor
cwtl
jbe
jge
ss
add
les
lock
jecxz,pt
xchg
mov
mov
fs
dec
jle
jns
daa
fcmovnu
call
imul
add
inc
lods
gs
mov
or
lret
scas
jnp
push
cwtl
mov
fsubs
xchg
fistpl
rcrb
shrb
pop
fidivrl
gs
adc
movq
test
sti
and
pop
in
sbb
xchg
xchg
mov
inc
lret
cmp
adc
fcoms
sub
shll
daa
xchg
aad
inc
inc
ds
fwait
xchg
int
lock
popf
xor
cwtl
xchg
mov
repz
cmp
inc
cmp
lds
and
popf
mov
pop
test
mov
and
jnp
xchg
gs
xor
mov
insl
dec
es
pop
inc
loopne
or
shll
mov
adc
loopne
and
add
adc
imul
inc
add
mov
shl
mov
dec
pushf
das
cmpsl
push
les
insb
int
fcmovnu
add
in
xchg
mov
push
xchg
dec
inc
mov
into
pop
mov
sbb
call
sbb
or
call
adc
js
add
jg
fisubs
fs
xor
das
jecxz
mov
mov
or
leave
xor
out
mov
js
cltd
mov
lods
gs
fs
inc
dec
shll
pushl
daa
adc
in
js
popf
cli
iret
sub
pop
je
popa
hlt
and
adc
or
sub
ljmp
jbe
ficomps
cltd
in
push
mov
dec
loopne
addr16
shlb
pop
cld
test
jns
stc
imul
adc
imul
pop
nop
orb
subl
insb
jmp
ds
dec
scas
addr16
inc
je
mov
aaa
mov
aam
fists
subl
je
fisubrl
insb
and
dec
dec
shlb
mov
lahf
js
mov
test
scas
xor
fcoms
jmp
mov
loop
mov
xlat
push
pushf
xchg
cmp
fisttpll
sbb
mov
je
push
mov
shl
mov
daa
mov
or
push
ds
arpl
loop
sahf
subb
andl
jnp
movsl
pop
or
jno
mov
loope
xorb
aad
jne
fiadds
dec
xchg
cmpsl
inc
mov
in
pop
dec
addb
aaa
push
rcrb
inc
jae
fimuls
int
add
in
mov
jle
sti
push
scas
push
lea
rcll
lea
inc
dec
jl
jl
ret
movsl
mov
pop
fiaddl
iret
sbb
daa
ss
jo
insl
inc
sub
stc
pop
adc
mov
iret
stos
add
ds
cs
sub
in
orb
repz
inc
out
popa
jecxz
xor
fldenv
ret
add
int3
je
hlt
jne
and
mov
cltd
dec
hlt
aam
inc
pop
sbb
add
sub
and
jne
rcll
cmp
add
imulb
lea
sub
mov
scas
loop
or
fldenv
mov
or
fdivp
inc
cmpsb
mov
mov
mov
mov
cmp
push
adc
rclb
scas
cmpsl
mov
shlb
push
call
fbld
test
inc
push
mov
xor
das
ret
jns
xor
push
bound
adc
pop
cmc
out
sub
jae
inc
jmp
imul
sub
sti
xchg
cmp
scas
test
nop
push
xlat
mov
add
lcall
sub
enter
outsb
push
dec
mov
mov
negb
cmp
adc
aad
mov
cmp
push
pusha
loope
iret
hlt
outsb
loopne
push
jbe
cmpsl
insb
sub
pop
pop
mov
mov
pop
out
sarl
scas
mov
int
or
outsl
imul
lock
xchg
push
out
inc
and
decb
mov
jmp
and
push
inc
jo
decb
loope
std
fwait
movsl
mov
cmp
cld
aam
fwait
sub
pop
loop
dec
cmp
mov
test
add
mov
addr16
add
fidivrs
pop
into
pop
xor
and
add
push
in
xchg
ja
pushf
lods
mov
rorb
xchg
aad
push
rcll
loopne
pushf
cmp
addr16
test
enter
nop
jnp
mov
not
fsubrs
mov
sub
xor
jo
leave
rolb
adc
cmp
sub
outsb
jb
mov
cld
push
aaa
pop
ljmp
mov
and
cmpb
sbb
mov
fdivs
popf
sbb
fdivrs
mov
pop
test
test
int3
sahf
xchg
cmp
xorb
mov
jge
std
cmp
add
shlb
mov
popf
sarb
cmpsb
mov
push
dec
or
mov
mov
out
imulb
mov
push
out
dec
xor
and
lret
pop
fisubrl
sti
dec
push
and
pop
cwtl
mov
pop
lahf
or
or
cmp
sbb
pop
fcomip
ret
adc
mov
mov
leave
rcrl
ss
sub
andl
pop
inc
pop
aam
fsubrs
push
out
movsl
into
lock
mov
sbb
imul
cmpsb
ret
push
and
pop
add
fcmovb
imul
cmp
out
test
and
dec
xor
mov
jns
dec
shl
fldt
test
push
aaa
lods
jae
and
movsl
lea
pop
clc
dec
and
xor
xorb
dec
lahf
movsl
inc
pusha
aam
ss
fdivl
clc
jmp
sbb
fcom
jno
data16
std
int
lock
fadd
testl
stc
scas
dec
mov
mov
test
aam
cmpsl
shrb
scas
sbb
rol
out
xorl
not
aas
in
sub
pop
lods
mov
es
add
mov
push
xchg
fucom
lret
test
repnz
add
push
lret
xchg
cmp
bound
xchg
dec
pop
mov
cmpsl
icebp
scas
repz
sbb
repz
fdivs
jb
lods
in
xor
and
fwait
dec
aam
dec
lahf
inc
pop
mov
mov
add
push
xchg
mov
xchg
shr
frstor
jp
das
mov
push
jg
mov
mov
mov
outsl
gs
lret
outsl
jg
mov
icebp
ds
out
mov
outsb
mov
mov
incl
jle
push
push
push
inc
dec
pop
jmp
jb
push
jae
inc
dec
les
gs
in
lret
stos
ret
mov
fs
lock
sarb
push
sub
fwait
mov
pop
daa
outsl
mov
push
jmp
xor
mov
aam
mov
out
push
leave
enter
mov
xchg
inc
fs
outsb
xor
popf
out
nop
outsb
outsl
push
aad
cmp
movsl
dec
insb
imul
ljmp
jp
fstps
cmpsl
sub
fcom
xchg
cmpsb
jb
test
add
cwtl
inc
fisttpl
ljmp
cmp
inc
push
sbb
mov
sub
cmp
sub
fisttps
rcll
mov
scas
scas
imul
fcmovnb
rorl
fcomp
jno
xor
inc
mov
add
xchg
mov
or
clc
mov
loop
cmp
mov
dec
pop
mov
mov
sahf
fsubrp
fnstcw
lcall
push
pop
mov
sub
jno
push
inc
in
xor
pop
sbb
mov
bound
mov
ficoms
and
jb
sahf
sbb
xchg
push
lahf
ss
fcomip
sub
popf
lret
loop
add
pop
lods
fsubrs
mov
into
push
cmp
inc
cwtl
fstp
pop
xchg
cmp
out
push
mov
sbbb
pop
ss
test
in
jbe
aad
push
sar
inc
xor
inc
mov
cmp
cmp
fstpt
jmp
stos
xor
pop
mov
movsb
outsb
adc
into
or
mov
scas
clc
ja
dec
ficoms
rclb
push
nop
cmp
into
lds
sub
push
xor
das
dec
push
mov
or
cmp
inc
loope
mov
or
inc
ljmp
loopne
fbstp
adc
dec
jno
iret
pop
aas
add
mov
ss
pop
and
sbb
cmp
testb
lahf
or
imul
add
andl
sbb
mov
jae
sub
out
cmp
adc
insb
mov
jns
data16
mov
sub
push
pop
sub
aaa
fimull
xchg
cmc
dec
cs
call
dec
out
mov
mov
sbb
and
and
or
push
and
leave
and
pop
out
pop
fsubr
xchg
incb
mov
scas
xchg
in
sub
daa
sub
insb
push
or
sub
fstp
and
sbb
add
loopne
lahf
addr16
cmpsb
and
xchg
inc
dec
pop
in
pop
inc
xchg
mov
ljmp
mov
lods
scas
inc
js
lret
sbb
mov
push
scas
sub
pop
cld
or
aas
fwait
jg
mov
push
pusha
imul
mov
jb
cmp
jp
icebp
xchg
lea
dec
imul
jno
push
not
dec
add
es
adc
call
clc
jmp
lock
in
or
test
sub
mov
cmp
pop
int3
mov
test
pop
inc
aad
mov
ret
fnstsw
bound
pop
inc
push
test
xchg
into
aam
fiaddl
cmpsl
int
imul
xor
sysexit
into
xor
lods
dec
sbb
mov
aas
ds
aam
stos
or
push
or
jecxz
or
jmp
cmc
fistpl
cmp
jae
mov
clc
subl
mov
jmp
xlat
dec
fdivl
mov
iret
loopne
jo
dec
jge
jecxz
cmpsb
push
push
mov
adc
cmp
jmp
aad
aas
fidivl
outsl
sbb
pop
cmp
mov
loopne
repnz
ror
lds
lods
imul
mov
mov
out
test
mov
mov
mov
mov
lret
jge
test
frstor
bnd
pop
and
test
pop
and
pop
sbb
shr
data16
mov
mov
pop
or
jbe
add
ret
sbb
aam
mov
mov
and
xor
int
fs
mov
in
mov
dec
dec
mov
fsts
cmp
or
imul
cltd
fistpl
pop
mov
jl
in
inc
push
cmp
jo
xor
aam
push
or
xor
inc
aaa
dec
clc
sbb
pop
test
xchg
aaa
lock
hlt
xchg
jmp
xchg
inc
popf
mov
rclb
sti
jno
adc
ja
xor
mov
mov
push
popa
and
aas
pop
inc
cltd
lret
cli
lea
out
ja
dec
andb
and
push
mov
add
lahf
fbstp
es
jecxz
inc
inc
loopne
sbb
pushl
mov
fs
sbb
dec
mov
enter
mov
fmull
and
scas
push
inc
outsb
xor
mov
pushf
pop
adc
pop
push
orb
xor
cmp
sbb
je
cmp
fisubs
imul
sub
dec
adc
dec
sub
push
sub
adc
push
in
mov
es
bswap
mov
xor
pop
bnd
xchg
pop
dec
mov
mov
mov
addl
dec
stos
cmp
mov
add
adc
mov
stos
bound
stc
pop
inc
cmp
jno
adc
es
out
push
pop
fs
cmp
xchg
sub
pop
add
lods
mov
cltd
dec
fldt
pusha
sub
mov
cmp
and
xchg
cs
pop
enter
push
add
xchg
and
aas
mov
jecxz
pop
insb
adc
or
jmp
pushf
push
ficomps
xor
fst
daa
cmp
dec
cmp
or
in
dec
mov
leave
dec
test
sbb
call
pop
shr
loopne
fnstenv
frstor
pop
sbb
xor
les
cmp
mov
scas
xor
daa
pop
pop
mov
adc
mov
dec
test
jns
aam
xchg
mov
and
out
sub
push
mov
mov
sub
mov
push
cmpsl
jo
adc
inc
gs
lods
dec
pop
sahf
les
aad
out
pop
mov
scas
jns
xchg
jg
mov
iret
es
aas
push
sub
into
ljmp
push
sub
sbb
pop
sub
out
cmp
jle
or
pop
bound
jg
mov
push
je
mov
inc
insl
ficoms
push
xchg
adc
or
enter
jbe
pop
lea
sbb
out
jmp
outsl
cmp
sub
mov
mov
icebp
mov
insl
add
repz
sub
scas
fldenv
sub
or
je
hlt
push
xchg
lcall
adc
mov
popa
push
pop
mov
test
pop
leave
lock
cmp
out
cmp
mov
dec
cmp
imul
xor
imul
or
ss
shr
movsb
cmp
test
aad
clc
jae
xor
xchg
out
dec
sbb
cmp
movsl
mov
fidivrl
pop
cmp
mov
pusha
sti
dec
mov
sub
shlb
adc
icebp
jo
lret
xor
mov
and
mov
les
ds
std
movups
xlat
stos
xchg
mulb
mov
insb
mov
dec
mov
jg
mov
out
jecxz
or
inc
push
cmp
mov
sub
inc
sub
lahf
pop
cmpsb
out
push
add
loope
add
call
jp
mov
test
arpl
or
cmp
in
loop
push
out
jns
sbb
scas
testl
popa
add
in
jo
sub
pop
rcrb
loop
test
jle
ret
fidivl
mov
adc
in
mov
mov
into
mov
xor
pop
mov
xlat
sbb
mov
cld
sub
out
or
mov
lret
dec
adc
mov
dec
xchg
bnd
addb
fstp
cli
mov
sub
sti
scas
cmpsl
lock
incb
in
iret
mov
std
adc
mov
std
sbb
push
sbb
into
sbb
int
mov
out
inc
in
jg
sarb
mov
cmpsb
in
jnp
outsl
aaa
fisubs
xor
dec
mov
adc
rolb
je
pop
add
nop
add
jns
mov
push
push
cmp
mov
pop
out
scas
add
sbb
adc
cmp
mov
scas
pop
push
add
xchg
xlat
jge
sbb
cmp
xor
fwait
and
out
inc
xor
dec
mov
cltd
subb
mov
adc
cli
push
popf
xlat
adc
inc
mov
push
add
cmpsl
adc
out
lds
sub
xor
jle
orb
lods
cli
js
inc
fistps
xchg
movsb
mov
sbb
jae
daa
sbb
stos
fidivl
imul
add
test
pop
jnp
xor
and
das
mov
push
or
lahf
mov
out
mov
cmp
fistl
mov
out
lock
dec
or
mov
jp,pt
push
adc
jp
jecxz
xchg
push
negl
or
out
mov
mov
sub
pusha
jl
repnz
sbb
inc
jnp
mov
sahf
cmp
lahf
adc
test
adc
popf
and
xor
dec
ror
data16
push
jns
jp
fsubrs
cltd
enter
pop
push
fs
lahf
xor
dec
push
add
rcrb
push
rolb
rcrb
movsb
mov
mov
jb
dec
mov
negl
add
or
and
cmp
fldcw
xor
push
movsl
add
int
xchg
mov
insb
xor
notb
inc
pusha
aad
xor
test
in
imul
cmp
cltd
cmpsb
xor
pop
sbb
and
cltd
sbb
lods
shlb
and
push
dec
lds
icebp
addl
ret
out
rcrl
enter
hlt
cli
insl
sub
shl
test
fistps
test
push
pop
mov
out
pcmpgtw
sub
inc
jecxz
add
cmp
mov
cs
ja
pop
pop
add
jecxz
add
push
mov
xchg
sub
cwtl
imul
sub
mov
fs
cmpsl
aam
test
adc
ljmp
lods
xchg
xchg
stos
mov
push
xchg
leave
repz
cmpsb
mov
push
lcall
cld
adc
push
imul
add
call
movsl
jae
pop
arpl
subl
ficomps
jne
insb
dec
movsl
popa
rcll
mov
subl
imul
test
pop
sub
fs
mov
add
imul
or
push
mov
shlb
xchg
daa
mov
add
dec
aas
mov
jle
pop
sbb
pop
pop
stos
push
sub
mov
loop
scas
arpl
in
cld
rcrb
mov
arpl
clc
mov
lods
mov
fiaddl
jge
xchg
ficoml
sub
inc
inc
or
or
data16
in
std
pop
mov
xchg
mov
cmp
outsb
popf
out
mov
scas
loope
pop
aaa
mov
test
adc
xchg
fidivrs
dec
jb
lock
mov
out
push
pushf
dec
shll
enter
ror
repnz
mov
add
and
or
rorb
negb
scas
mov
fisttps
hlt
sbb
rol
sub
das
push
loopne
es
aaa
mov
sti
out
dec
shrl
cmpsb
mov
int3
xchg
sub
nop
cltd
cmp
stos
pop
jbe
xor
dec
sbb
inc
clc
push
and
bound
cmp
sti
adc
mov
xor
mov
push
sub
cmp
cmp
push
dec
mov
divps
jbe
xor
push
loope
jns
or
ja
insb
mov
mov
push
xchg
inc
sub
pop
jmp
jle
add
insl
and
sbb
cmpsl
xchg
in
add
in
jne
pop
paddsw
or
lahf
xchg
and
mov
or
push
pop
add
jno
and
and
dec
jns
rorl
scas
ds
adc
jl
sub
cmc
test
cmpsb
adc
push
out
and
daa
loope
les
pop
pushf
push
jae
repnz
in
add
call
sbb
mov
mov
sub
in
sbbl
aad
dec
inc
and
ljmp
jp
adc
sti
pop
xor
sub
xorb
cs
scas
mov
mov
aad
or
repz
aas
cwtl
insl
jae
pop
push
in
mov
ljmp
add
loop
add
lahf
enter
and
leave
icebp
fcoml
mov
in
cmp
mov
xlat
nop
and
xchg
addl
stos
adc
jb
rorb
jl
pop
or
cld
cmpsb
dec
fildl
fcoml
ss
pop
stc
neg
add
sbb
daa
lds
scas
sbb
out
shlb
mov
std
adc
cmp
call
out
cmp
cld
mov
cld
dec
and
test
aad
xchg
adc
mov
pop
jecxz
and
jge
out
cmpsl
data16
in
sbb
inc
add
fwait
sbb
movl
push
mov
mov
push
scas
cmp
jg
pushf
arpl
stc
shrb
pop
mov
fdivs
cs
mov
mov
push
mov
imul
ds
frstor
arpl
dec
fstpt
mov
xchg
lea
cmp
pusha
pop
mov
arpl
push
aas
sbb
or
dec
cli
daa
ret
push
add
inc
add
mov
pop
lea
xor
leave
sub
push
insb
ljmp
je
xchg
int3
es
outsb
int3
sbb
mov
inc
popa
dec
lock
and
out
add
fstpl
stc
lahf
or
xadd
mov
mov
mov
sub
shlb
into
and
push
xor
add
cmp
dec
cmp
inc
mov
scas
movsb
cmp
and
mov
adc
push
inc
enter
ret
aam
dec
push
jg
adc
fcoms
pop
mov
test
mov
inc
sahf
inc
popa
and
dec
sar
test
mov
xchg
sti
daa
push
xor
bound
mov
jmp
xor
push
sbb
ljmp
js
adc
ret
test
mov
stos
mov
stos
adc
cmp
es
insb
inc
rorb
mov
out
decl
inc
jno
sub
jae
dec
lret
add
xchg
cmp
mov
aaa
stc
adc
out
push
cmpsb
fwait
cmpsb
or
imul
pop
inc
or
out
fcoml
jg
aad
ljmp
cmpb
mov
jl
call
jge
mov
mov
lds
mov
inc
push
inc
sbb
add
or
ja
roll
push
cmp
fildll
xchg
inc
pop
dec
push
js
pop
jg
cmp
inc
pop
pop
push
bound
mov
push
push
xchg
jae
or
adc
push
dec
movsb
sbb
or
push
dec
sub
scas
push
je
test
cs
mov
outsl
push
inc
scas
ret
movsb
push
inc
pop
add
fdivrs
inc
xchg
mov
testl
cs
pop
rcr
rep
push
movl
in
cmpsl
mov
cmp
mov
inc
rolb
popa
mov
mov
or
xchg
jns
arpl
lods
leave
mov
and
jmp
test
push
aad
in
push
xor
out
sbb
shl
xchg
mov
and
or
cwtl
mov
xor
xchg
mov
shrl
fstpl
sarl
xor
cmpsl
aaa
fisubrs
jle
sub
aaa
fcomi
xchg
cs
dec
jge
ret
lock
xchg
sub
test
fdivrl
mov
pushf
mov
out
mov
das
scas
movsl
jno
call
pop
repz
and
adc
in
mov
xchg
xchg
in
cltd
nop
cltd
ret
addb
ret
data16
fcomps
add
dec
stos
repz
mov
inc
fdivrp
push
cli
iretw
lock
fcmovnu
jecxz
or
xlat
stos
lock
pop
xor
sar
sub
std
ljmp
je
lds
in
xchg
inc
mov
jbe
fcoms
rcll
fsubs
xchg
outsb
ret
jno
aas
sti
mov
sbb
hlt
pop
pushf
add
cmp
lods
jb
aam
lret
sti
rcrb
adc
divb
fsubs
or
loope
xchg
push
fwait
xchg
loope
add
int3
xchg
int3
fnsave
sbb
push
in
mov
enter
popf
jns
adc
jb
dec
and
fs
mov
inc
lock
push
les
pop
lahf
test
enter
leave
fadds
adc
hlt
in
cmp
mov
int3
xchg
mov
xchg
mov
aam
mov
jo
inc
push
sahf
cwtl
arpl
decl
xor
cmp
sub
cld
push
dec
lcall
push
add
lcall
or
fcomp
xchg
addr16
lahf
inc
mov
sbb
rorl
mov
das
das
in
dec
mov
xchg
lods
sub
push
adc
mov
mov
imul
pop
adc
js
dec
lsl
sub
imul
nop
mov
mov
fldenv
imul
scas
mov
outsb
stos
jb
xchg
jp
inc
pop
js
int3
pop
fists
mov
cmpsl
jecxz
mov
mov
cmp
push
mov
xor
cmp
pop
lea
sub
dec
cmp
xchg
jo
fisubs
hlt
xor
jo
into
mov
ret
cmpsl
mov
ss
imul
mov
out
insb
xor
pop
push
mov
pop
mov
imul
inc
mov
icebp
add
cmp
mov
xchg
mov
mov
add
sbb
mov
push
jne
scas
cmp
loope
xchg
fsts
jge
xchg
pop
arpl
test
das
call
mov
mov
inc
inc
or
lret
pop
sub
rorl
cli
push
jg
out
and
inc
js
push
cwtl
jle
stos
loope
sti
inc
cmp
mov
test
xchg
and
and
mov
scas
cs
jbe
scas
scas
int3
dec
jb
aas
int3
pop
mov
insb
add
mov
cmp
push
and
hlt
lcall
scas
cli
mov
scas
aaa
lods
pop
bound
lret
test
out
sbb
adc
in
and
in
mov
mov
stc
and
pop
out
outsb
mov
xchg
xor
and
mov
jge
mov
pop
or
mov
out
cmp
xor
xchg
cltd
inc
xchg
push
xor
rcrb
repnz
clc
test
cmpl
adc
mov
inc
adc
rcrb
orl
shlb
decl
pop
push
sbb
inc
dec
fisubrs
jo
cmp
sbb
xor
in
xor
sub
dec
daa
repz
add
and
xlat
in
xchg
jnp
xchg
push
pop
icebp
and
push
iret
out
dec
ficoms
pushf
and
lcall
cwtl
es
jno
push
out
cld
stc
sub
dec
rcr
sbb
pop
push
decl
lret
adc
add
pop
push
ss
push
lret
popf
movsb
inc
rorl
gs
dec
pop
scas
mov
aad
cmp
xchg
lods
push
sbb
xor
std
das
pop
add
push
fistps
inc
mov
pop
jmp
mov
xlat
je
test
lods
inc
sbb
or
testl
sahf
xchg
outsb
add
in
call
pop
xchg
cltd
push
jl
inc
iret
arpl
popa
mov
mov
xchg
repz
mov
cmp
xchg
pop
jl
daa
mov
je
aas
mov
daa
shll
sub
insb
push
div
jp
decl
fidivrl
ja
push
jg
loopne
or
sbb
jnp
pop
xor
das
and
pop
sbb
les
mov
pusha
pop
fs
loopne
lds
inc
daa
and
adc
mov
pop
pop
jmp
jecxz
adc
ljmp
movsb
jno
push
mov
and
sub
jmp
push
mov
out
mov
sarb
cltd
rclb
mov
loopne
or
xchg
sahf
push
loop
lcall
jge
fdivl
dec
out
out
jp
scas
cmpsl
icebp
and
orb
aam
push
push
add
out
and
ret
sti
push
fwait
pusha
pop
loope
mov
lods
xor
mov
pop
cld
xor
dec
lret
cmpsl
sub
sub
sub
xor
adc
pop
rol
or
loopne
sub
loop
rep
xor
ret
mov
int
sahf
lcall
popf
nop
jecxz
mov
out
es
inc
push
paddb
std
sub
inc
stc
outsb
sub
xchg
es
adc
adc
xchg
adc
nop
mov
sub
inc
subl
jb
clc
xor
in
or
push
xchg
push
and
bound
cmp
hlt
push
aas
bound
int3
sbb
scas
xor
cmp
testl
adc
inc
mov
lds
mov
lcall
push
clc
mov
subl
jae
insl
mov
push
or
dec
lods
test
rcrl
pop
pop
or
sbb
mov
out
outsl
in
or
pop
sbb
test
inc
movsl
push
lods
imul
cs
dec
push
fwait
mov
and
lock
jle
cmp
push
pop
repnz
scas
pusha
and
mov
js
push
sub
mov
sti
mov
rorb
scas
push
and
sahf
iret
mov
jmp
inc
mov
in
cmpsb
or
adc
out
notb
mov
decb
testb
fsubl
pop
enter
sti
inc
iret
lods
cmc
in
lret
and
mov
jne
adc
ret
jmp
fcmovnu
xor
or
in
and
pop
cmp
push
ficoms
xor
cli
xor
lods
mov
pop
fimull
push
dec
push
mov
ss
adc
sub
je
pop
xchg
out
cli
out
cmp
cltd
flds
cmovbe
gs
jmp
pop
adc
sub
loopne
icebp
es
daa
jns
sarb
aam
push
das
repz
xchg
xchg
pop
inc
fildll
add
or
mov
xchg
push
pop
dec
aas
inc
cmp
push
imull
enter
and
mov
aad
dec
les
insb
sti
movsl
shlb
mov
lods
sub
sbb
rcl
fs
jge
lret
dec
shl
push
pop
cltd
sti
xor
fisttpl
fwait
pop
ret
out
sub
cmpsb
jp
push
repnz
test
push
enter
mov
mov
andb
int3
sti
lods
push
ret
and
jb
jnp
mov
and
fildll
adc
and
xor
mov
cmpsb
xchg
std
mov
push
leave
jo
pop
dec
insb
insl
adc
jle
addr16
ret
jg
jl
xchg
cmpsl
loopne
aad
jg,pt
in
mov
mov
and
push
in
stc
cmpb
insb
xor
xchg
push
or
push
xor
adc
test
ljmp
pop
sarb
call
sti
or
jne
test
notb
iret
mov
cs
outsl
push
das
ds
enter
arpl
push
out
inc
and
adc
adc
fdivrl
lahf
int3
and
std
mov
std
push
inc
leave
in
lods
pop
je
sti
and
sbb
loop
fildl
lock
out
ret
or
mov
push
dec
lahf
jb
pop
xchg
or
cmp
insl
inc
cmpsb
xchg
test
xor
mov
test
pushf
fsubl
bndstx
add
sbb
out
xor
sub
dec
pop
dec
jl
jg
pop
into
cmc
cmc
je
inc
aad
cmp
xchg
fwait
adc
in
dec
fsubrs
aad
sub
pop
mov
cltd
loopne
or
inc
mov
push
push
and
xor
sub
sahf
and
sbb
jbe
mov
adcl
shrl
out
or
js
jne
push
cs
pushf
aaa
and
fcom
dec
jg
lcall
adc
pop
mov
xchg
int3
mov
or
aad
test
in
in
jg
fisttpl
mov
and
mov
or
lret
adc
repnz
outsb
pop
pop
mov
test
stc
aas
ss
pusha
inc
and
jmp
test
xchg
lret
mov
jbe
repz
icebp
push
mov
xchg
cmp
cltd
mov
cs
jp
loop
loope
cmc
push
push
les
inc
jge
xchg
shrl
call
insb
sti
and
push
fstpt
adc
inc
dec
mov
daa
push
pop
sub
pop
jae
repnz
sbb
adc
fdivl
add
das
lods
inc
mov
rcl
mov
mov
add
add
pusha
sbb
stc
or
outsb
mov
aaa
cmpsl
lret
xorb
je
fsubrs
xchg
es
mov
dec
ret
inc
iret
mov
cmc
gs
test
mov
fsub
call
xchg
daa
imul
js
dec
jmp
pop
push
mov
shr
sub
flds
cwtl
jno
add
setl
and
mov
mov
xchg
xchg
sub
jnp
aas
add
shrd
xchg
mov
lcall
mov
es
pop
shlb
bound
sbb
out
dec
lock
pop
xor
pop
dec
into
push
xor
ljmp
movsb
mov
push
aas
sarl
testb
sbbb
daa
jb
out
iret
jnp
int
sahf
jecxz
mov
call
and
out
mov
and
movsl
in
sahf
sbb
push
add
insb
mov
in
notl
mov
mov
dec
movsb
inc
xlat
cld
adc
push
fmull
mov
jno
fbld
lock
loopne
adc
cs
cmp
stos
sub
out
push
dec
daa
gs
movsb
out
add
lods
xor
adc
mov
xor
xor
rolb
adc
fbld
roll
int
xchg
mov
adc
add
ja
out
inc
jne
sti
mov
or
je
mov
aad
push
jl
and
jecxz
adc
xor
pop
daa
jae
movsl
enter
mov
pop
mov
inc
or
scas
out
inc
cmp
mov
shll
cs
cmc
ret
inc
into
lock
cwtl
popf
data16
clc
jl
outsl
mov
mov
lret
cmp
pop
out
push
push
aaa
jg
mov
idivb
movsl
mov
aas
movsb
rorb
lea
or
inc
inc
arpl
jecxz
lds
cmpsb
xchg
jns
add
sti
xor
adc
movsb
imul
dec
pop
or
inc
pop
sub
xor
repz
sub
cmp
xchg
test
jl
mov
jecxz
outsb
std
xor
jmp
mov
or
pusha
push
xor
jns
dec
jg
xchg
dec
cmp
adc
inc
push
test
lods
rol
add
jb
pop
add
test
loopne
sbb
test
fwait
xor
push
jb
or
push
lret
pop
fiaddl
inc
push
sub
iret
sub
out
dec
xchg
push
stos
push
int
mov
adc
fbstp
push
lret
es
mov
fcoms
cmp
neg
test
mov
jb
jo
sbbl
inc
lcall
sub
outsl
sub
adc
popl
jle
ljmp
xchg
sahf
mov
mov
xchg
addr16
negb
mov
add
mov
xchg
ret
add
leave
in
ror
adc
insl
inc
insb
cmp
cmp
dec
fwait
enter
ds
lock
mov
aam
movsl
cwtl
or
xchg
or
ret
jno
fbld
fnstcw
push
daa
out
xchg
xchg
jge
test
roll
add
mov
push
cmp
sbb
cmpsl
cmp
push
js
stos
das
adc
out
es
sub
fldl2e
xchg
insl
insl
addr16
fwait
jns
les
das
aaa
int
ret
aas
cmpsl
jae
inc
mov
shlb
stc
icebp
call
dec
gs
xchg
sahf
pop
sbb
test
stos
sub
lcall
sub
scas
xchg
push
dec
sbb
add
sbb
lds
xchg
cmc
cmpsb
call
or
aas
and
or
call
rorb
xor
mov
adc
cltd
clc
js
ds
js
imul
ret
push
push
nop
mov
mov
imul
add
mov
xchg
es
fisttpll
push
xchg
mov
and
mov
call
out
xchg
sbb
cwtl
and
ret
aam
mov
mulb
mov
push
xor
inc
orb
cmp
dec
xchg
aas
and
ds
dec
add
add
dec
repnz
sbb
dec
decl
mull
mov
outsb
fwait
cmpsb
xchg
jge
ja
cmpsl
mov
popa
cmp
inc
xor
adc
and
test
mov
sub
out
dec
cli
xor
stos
xor
dec
lods
divb
xchg
int3
mov
xor
jno
adcl
mov
shll
fsubrp
adc
mov
push
adc
push
pop
ret
sub
mov
lret
mov
cmp
enter
push
push
fsubrl
js
inc
shlb
in
and
xchg
pop
fyl2x
decb
jge
jns
rolb
scas
dec
stos
xor
jne
and
cmp
movsb
push
jb
add
roll
xor
pop
loopne
xor
jge
push
pusha
mov
add
cs
adc
cmp
pop
inc
stos
lahf
xor
mov
xorb
or
fstl
ss
popf
cmpsb
mov
inc
arpl
cmpsb
lret
repnz
jno
aam
and
testl
sbb
sbb
loope
mov
cltd
mov
addr16
xorb
popf
je
push
rorb
mov
mov
sbb
pop
mov
lods
cmp
push
cmp
cmp
out
mov
mov
adc
pop
and
dec
xchg
and
mov
mov
loop
dec
and
or
sbb
dec
bndldx
les
xchg
cmpsb
js
clc
cmp
outsb
cmp
hlt
inc
sub
jecxz
pop
loopne
cwtl
xor
push
fwait
sbb
loopne
fcmovnb
push
cltd
pop
jo
test
hlt
sbb
push
mov
mov
sub
mov
fs
test
gs
lret
dec
ja
icebp
mov
mov
xor
mov
sbb
fcomi
imul
insl
lds
push
outsl
mov
aad
icebp
jbe
mulb
push
add
lret
cs
hlt
mov
iret
imul
jmp
xchg
pop
mov
js
decb
andl
xchg
arpl
sub
pop
andl
dec
test
mov
test
lret
pop
ret
push
xor
jne
jbe
sub
cli
lret
adc
jl
mov
push
jne
cmp
dec
xor
ljmp
and
int3
fs
rcr
and
subl
xlat
xchg
aam
inc
ret
dec
cmpsb
outsl
imul
and
and
fldt
daa
fsubs
dec
mov
lock
rcrb
into
xchg
and
imul
add
daa
sbb
rcl
add
xor
pop
mov
inc
inc
imul
or
push
int
addl
mov
mov
addl
rol
jbe
push
bound
mov
sub
push
mov
cmpsb
imul
int3
mov
mov
frstor
xor
dec
inc
in
sub
orb
fwait
out
push
daa
xorb
mov
cwtl
movsl
xchg
xchg
jecxz
test
jge
stc
call
aas
imul
or
mov
gs
pop
int3
adc
sub
outsb
out
gs
repz
xchg
hlt
adc
add
mov
addr16
adc
ss
outsl
faddl
jecxz
xchg
outsb
pop
jmp
stos
loopne
pop
cwtl
stc
xor
and
imul
adc
pop
stc
mov
adc
lret
je
fs
loope
test
mov
sbb
stc
xor
sbb
add
in
adc
xchg
stc
inc
les
cmp
mov
push
adc
daa
adc
jns
jne
and
xor
or
add
push
xor
push
lahf
mov
lahf
mov
xor
sahf
cmpsl
and
sub
test
xchg
cwtl
mov
xchg
repnz
jne
sbb
push
cwtl
dec
cwtl
std
fsubrs
and
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
test
adc
cmp
pop
nop
test
push
mov
or
mov
popf
mov
sbb
std
and
inc
mov
mov
out
das
aas
mov
sti
mov
mov
adc
add
das
xor
scas
xchg
dec
or
lea
jno
addr16
aad
rcll
mov
push
or
mov
sub
leave
inc
sub
outsb
push
add
ds
mov
pop
divl
out
in
call
push
movsb
mov
cmp
enter
mov
jnp
xchg
aad
test
sbb
fdiv
pushf
mov
push
std
cld
sahf
test
or
andb
mov
lret
push
hlt
icebp
loope
mov
jg
out
jmp
xchg
dec
adc
mov
int3
clc
mov
inc
dec
cli
push
enter
xchg
sbb
ret
leave
pop
push
stc
outsb
jns
lret
aas
dec
or
mov
adc
sub
dec
jae
dec
insb
lahf
dec
cmpsb
int3
sub
sahf
cmp
push
and
imul
test
lock
xor
push
cmpsl
add
pushf
mov
add
ficompl
andl
sub
stos
xlat
inc
lcall
mov
push
xchg
cmp
icebp
ds
in
clc
cs
mov
jbe
push
push
das
add
cltd
rclb
cli
shlb
xor
scas
subb
pop
pop
mov
and
dec
or
bound
xor
fistpll
sub
lock
push
int
add
mov
mov
out
loopne
sub
imul
shlb
fs
lea
dec
adc
mov
daa
mov
loope
push
dec
xchg
gs
cwtl
inc
or
test
and
xchg
mov
in
pop
xor
fisubl
cmp
lahf
clc
stos
adc
cmpsb
push
sti
and
popf
and
mov
ja
xchg
es
sub
leave
call
sbb
xchg
adc
aaa
repz
and
arpl
mov
stos
js
out
adc
mov
mov
stos
fcmovnbe
in
cmpl
add
lret
pop
xor
pop
cmp
adc
iret
add
subb
and
push
and
and
cmp
addr16
fwait
pop
push
push
std
push
out
sbbb
cmc
test
push
mov
in
test
xchg
mov
mov
std
cmp
cmp
jp
lcall
pop
scas
pop
in
outsb
inc
sub
jmp
sarb
out
pusha
push
add
ds
lret
xor
lretw
pop
mov
adc
int3
jge
test
lea
push
pop
xchg
xor
inc
xchg
xor
popa
test
push
aaa
inc
add
scas
sbb
and
xchg
mov
std
ja
mov
aas
nop
mov
lret
andb
int3
scas
inc
stos
or
xchg
test
mov
pop
call
jno
pop
lea
jne
and
ss
sub
jg
test
inc
mov
sbb
and
dec
jnp
fcomip
xchg
mov
sbb
mov
push
je
push
push
jecxz
out
fadds
sub
sub
lcall
pusha
xchg
mov
push
push
fldenv
test
lock
ret
ret
sarb
sbb
scas
test
and
push
inc
clc
cmp
not
js
xor
lret
dec
stc
ret
or
int
adc
or
add
pop
enter
leave
sti
dec
outsl
ficoml
jmp
ss
jbe
push
xchg
shll
stos
inc
lock
sbb
mov
sbb
jae
push
sub
mov
push
aam
jle
in
and
lods
jbe
mov
leave
or
aas
adc
dec
aad
addr16
ficoml
fcomps
addr16
mov
push
sbb
adc
loopne
or
sub
dec
out
or
out
shll
add
cmp
push
xor
loopne
cmp
push
jl
sbb
inc
push
or
push
mov
sahf
aas
dec
ljmp
push
jecxz
popa
test
jns
lds
add
ljmp
cmpsl
dec
mov
cmp
inc
sbb
push
sbb
mov
xor
push
decb
pop
cmpsl
xchg
adc
or
adc
outsb
pop
inc
push
in
sub
sub
mov
sahf
test
jne
xchg
cltd
loopne
mov
cmp
in
les
fadds
inc
sbb
pusha
mov
repz
jb
push
add
jo
adc
dec
loop
lahf
aam
jne
pusha
movsl
por
lcall
add
divl
in
mov
xor
pop
repnz
mov
mov
daa
xor
xor
addl
add
adc
sub
adc
stc
adc
or
mov
in
xchg
ret
sub
test
mov
addl
ja
scas
je
call
loop
pop
cmp
jle
insl
stos
jecxz
pmullw
cmp
repz
jo
into
outsl
cld
je
into
iret
xchg
fildll
leave
ret
xchg
testl
pop
mov
pop
inc
shl
push
mov
int3
hlt
push
mov
test
sub
mov
adc
xchg
sub
xchg
sub
xchg
repnz
mov
fdiv
loopne
jb
xor
fisubrl
inc
or
xor
das
aaa
jg
sbb
loop
xchg
push
cmpsl
in
add
push
adc
mov
loopne
roll
scas
push
xor
pop
mov
aaa
xchg
std
addr16
decl
cmpsl
mov
xlat
stos
repz
push
data16
or
jge
jp
inc
daa
or
je
ret
repnz
jbe
cltd
jle
xor
leave
xchg
dec
jb
cmp
or
xchg
pop
loope
mov
out
idivl
pop
outsb
mov
sahf
int3
push
adc
outsl
clc
and
mov
mov
out
pop
pusha
push
pop
xchg
and
hlt
mov
mov
sbb
repnz
imul
ret
push
and
or
cltd
cltd
jnp
js
push
fnstcw
xchg
jl
cmp
loop
adc
xor
int
mov
pop
dec
pop
adc
out
std
popf
jmp
adc
cmpsb
dec
loope
scas
sub
fwait
add
jg
jno
popa
push
mov
dec
imul
jo
loop
arpl
cmp
push
xor
and
ret
jb
dec
enter
movsl
cwtl
push
mov
rcrb
fists
mov
sbb
mov
shll
push
mov
shrb
cmp
mov
mov
out
or
xchg
sbb
bound
mov
cli
mov
lods
cli
cwtl
aam
add
mov
sbb
push
jecxz
and
push
sub
test
adcl
outsl
out
inc
movsb
popa
dec
iret
push
insb
movsb
scas
or
mov
pop
xchg
xchg
xchg
sar
lds
jle
aaa
xorl
cmpb
cmp
add
int
sbb
jns
mov
pop
aaa
dec
inc
xchg
test
push
shlb
lret
movsb
mov
jb
sub
sub
sub
fidivrl
lods
hlt
ret
xchg
cmp
call
mov
pushf
cs
insb
mov
xchg
in
insb
into
adcb
inc
ss
inc
mov
inc
push
cmpsb
fucomip
and
sbb
loop
loope
lods
data16
aaa
xchg
hlt
xchg
ret
fiaddl
mov
adcl
mov
das
add
jae
adc
push
shll
inc
test
sti
into
xlat
bnd
sub
dec
daa
lock
add
enter
jns
mov
mov
inc
cli
in
loopne
lea
jecxz
cmpl
mov
out
and
in
gs
and
test
jb
xor
and
add
movsl
cmp
movl
jge
repz
outsb
push
mov
std
push
xchg
xchg
mov
sbb
leave
push
loop
push
pop
in
jns
sbb
leave
aas
mov
fdiv
add
add
add
and
adc
scas
push
add
push
pusha
cs
add
stos
fcmovnu
lock
ljmp
push
jl
push
xor
mov
out
ja
pop
inc
push
cmc
cmc
je
stos
sbb
popf
js
fcomp
adc
mov
sbb
push
jns
jno
cmpsl
cmp
or
or
pop
test
out
push
sub
sbb
push
sbb
daa
pop
notb
fdivrs
pop
imul
or
scas
outsb
mov
dec
push
dec
pop
pushf
or
scas
daa
sarb
repz
aaa
inc
lods
scas
dec
cs
ret
inc
push
lock
xorb
jo
ds
and
sbb
out
jo
mov
roll
sarb
pop
test
push
fs
ret
cmp
add
jae
mov
sbbl
std
pop
pop
add
dec
mov
fisttps
nop
sbb
dec
dec
cmp
push
cld
jmp
mov
iret
xor
shlb
mov
mov
pop
xchg
jns
filds
pusha
es
cli
mov
dec
clc
or
fs
dec
dec
inc
lock
cmp
mov
js
jle
mov
testl
lahf
sarb
sub
mov
adc
ret
in
mov
xchg
adc
adc
outsb
mov
adc
mov
or
gs
hlt
shrl
xor
std
mov
lds
outsb
fwait
xor
nop
xchg
jnp
xlat
inc
pop
xchg
fcmove
loop
out
loope
cmc
rcl
stos
pop
jbe
pop
xchg
or
inc
clc
call
loope
sti
add
xlat
sar
orl
pop
push
subl
mov
add
sub
add
mov
mov
andb
inc
js
lea
add
push
out
nop
inc
mov
insl
lock
pop
rclb
call
xchg
test
test
adc
call
fstl
pop
loope
leave
add
rclb
out
out
icebp
popf
mov
aad
inc
enter
pusha
clc
adc
dec
cmpsl
mov
subb
pop
mov
ds
popl
mov
mov
cmpb
push
insl
sahf
jnp
mov
cmc
fistpll
jge
pop
lock
outsl
pop
jle
push
loope
faddl
mov
insb
or
inc
popf
dec
cld
pop
xchg
leave
mov
mov
jp
xlat
jo
cltd
and
call
dec
clc
mov
jno
jecxz
xlat
stc
jl
adc
bound
rclb
sbb
jnp
mov
dec
xor
mov
push
cmp
push
rclb
inc
enter
jb
pop
sbb
ja
add
mov
repz
mov
xlat
scas
cmp
test
hlt
sbb
repnz
adc
sub
ljmp
push
pushf
fldt
cmpsb
or
cmp
fnsetpm(287
cmp
sub
ficoml
pop
adc
push
shl
les
pop
popf
gs
mov
nop
pusha
and
dec
and
imul
fbld
push
lock
sbb
popf
xchg
lds
nop
aas
and
pop
or
loopne
sbb
leave
xlat
cwtl
std
dec
xchg
dec
popf
dec
pop
push
icebp
inc
cmp
jecxz
stos
lods
sbb
leave
dec
cmpl
lcall
mov
xchg
loop
mov
jb
push
dec
dec
test
mov
int3
mov
cwtl
push
mov
pop
mov
xor
cld
dec
popa
adc
mov
out
jbe,pt
jge
enter
lea
sti
cmp
mov
scas
jp
jo
mov
push
shl
movsl
mov
ret
sub
mov
push
addr16
fsubp
pop
inc
cmp
sbb
mov
scas
repz
out
dec
repz
xchg
repnz
xchg
decl
int
in
dec
or
sbb
mov
es
add
jl
push
es
xchg
cltd
pop
in
push
xlat
test
fs
test
mov
pop
jno
in
mov
add
test
movsb
push
std
add
jp
insl
cmp
dec
stos
das
mov
dec
xor
cmp
std
xor
inc
lcall
push
lea
neg
adc
lods
inc
cmpsl
cli
mov
stc
iret
add
ja
lea
pusha
pop
lcall
xor
cmp
adcb
stc
dec
les
lods
loope
push
cli
pop
cli
jne
push
mov
cli
jl
xchg
xchg
sub
xchg
jmp
push
outsl
test
dec
mov
ficomps
or
cmp
add
dec
dec
xchg
int3
lock
cmp
cltd
jle
push
xchg
xchg
jns
scas
pop
fisubrs
pop
and
lock
stos
les
push
icebp
negb
mov
cmp
into
mov
decl
inc
and
xor
addl
mov
mov
fwait
push
mov
insl
test
clc
push
aas
jg
cmpsl
adc
aas
xchg
and
xor
das
das
jecxz
and
inc
popf
xchg
dec
push
or
clc
mov
test
mov
cwtl
pop
aam
pop
in
jg
pop
xor
int3
cli
incl
add
outsb
adc
test
inc
lret
xchg
aas
fistl
loopne,pt
fsubrp
adc
sub
mov
and
mov
shr
sbb
mov
incb
cmp
movsl
inc
leave
pop
jl
cmp
out
mov
jmp
je
mov
stc
jne
xchg
xor
dec
add
cmpsb
insl
out
mov
call
push
mov
lea
aaa
into
dec
mov
sahf
pop
mov
xchg
cmp
mov
pop
pop
sahf
ret
loopne
and
pop
xor
adcb
stc
inc
add
push
jl
shl
lcall
call
ss
xor
mov
fidivs
cmc
lahf
fstps
dec
jle
out
add
adc
dec
mov
mov
lret
bound
inc
rcrl
or
add
mov
negl
pushf
or
insl
clc
int
mov
xchg
in
lret
paddusb
sarb
cmpl
idivl
xorb
shr
cmpl
ficomps
cmpsb
imul
and
mov
fbld
and
mov
xor
out
jo
insl
sahf
in
and
pop
adc
aaa
pop
add
cmp
out
xchg
cwtl
lcall
adc
jne
sbb
daa
bound
xchg
cmc
outsb
aaa
add
lcall
xor
movsb
dec
pop
jle
cs
xchg
inc
call
cmpsb
in
int
repz
inc
sti
int
icebp
xchg
cmc
xlat
adc
fisubrs
push
sbb
shl
jp
das
stos
jne
out
and
ljmp
inc
mov
xor
outsl
push
xchg
int
inc
rorl
fdiv
sub
pop
jg
and
stos
or
es
xor
scas
and
jne
inc
movsl
sbb
pop
dec
lods
jmp
dec
jo
out
mov
mov
les
xor
dec
cmp
jnp
pop
push
ret
jge
add
rcrl
inc
rorl
ljmp
mov
popf
mov
ja,pn
lea
loope
es
imul
sub
sbb
jns
inc
loope
pusha
ret
fcoms
sbb
pop
sub
int3
test
out
sub
xchg
stos
mov
jge
cmp
leave
fbld
dec
push
mov
sbb
sub
inc
xchg
ds
movups
iret
cmc
jmp
xchg
or
inc
push
movsl
push
daa
mov
incl
jns
push
fwait
or
out
orl
xchg
stos
inc
inc
mov
data16
push
ficoml
fs
mov
jmp
mov
mov
clc
inc
and
sahf
addr16
std
mov
pop
push
cld
xchg
imul
adc
sbb
ja
fsubrs
xchg
shlb
loope
sbb
fucomp
das
faddl
loope
adc
jl
lods
cmp
fldenv
mov
in
pop
or
sub
add
jmp
lahf
push
in
int
mov
sub
mov
cwtl
inc
xor
xchg
adcb
fdiv
jmp
sbb
mov
imul
inc
test
repnz
xchg
fildll
xor
pop
dec
inc
pop
push
lds
xchg
imul
cmp
mov
xor
add
mov
mov
sub
jg
test
clc
xor
dec
mov
idivl
mov
mov
cmp
stc
jbe
mov
sbb
add
fcmovnu
jnp
jp
ret
icebp
mov
dec
gs
subb
mov
pop
pop
or
sti
cmp
pop
adc
xchg
imul
clc
call
into
cmp
inc
adc
dec
inc
push
addl
xchg
pop
shrl
inc
fcmovbe
cmp
mov
pushf
jge
test
call
mov
push
inc
mov
cmpl
subb
in
in
leave
inc
push
sub
cmp
stc
pop
outsl
xchg
addb
mov
cld
xlat
imull
enter
xor
call
int
fmuls
push
cltd
test
nop
sbb
mov
cmp
mov
cmp
sub
xor
inc
push
push
xor
xchg
and
int3
mov
add
lds
jmp
jmp
sbb
cmp
xchg
fwait
pop
pop
dec
mov
or
inc
icebp
fwait
mov
sbb
dec
jl
mov
fcom
ja
fs
pop
adc
xor
jmp
int
or
or
sub
xchg
mov
inc
mov
jae
addr16
imulb
ret
sbb
stc
out
push
jns
scas
or
sbb
int
adc
jmp
mov
push
mov
sbb
adc
pop
fwait
int3
pop
lret
pop
sbb
out
fs
je
xlat
and
stos
mov
bound
sbb
fnstenv
and
mov
fsubrl
roll
mov
test
vsqrtss
mov
inc
sbb
and
cmp
mov
sub
mov
in
mulb
roll
lcall
iret
inc
mov
sbb
cmc
jb
loop
cmp
daa
mov
lret
rcrb
add
add
dec
repnz
pop
cmpsl
pop
out
pop
xchg
mov
dec
repnz
cld
ds
in
mov
fadd
stos
pop
rcll
add
pop
mov
mov
cmp
push
cmp
in
arpl
mov
cmpsb
jo
scas
dec
popf
and
mov
cltd
mov
cmp
jle
cmp
mov
pmovmskb
jecxz
test
scas
lcall
les
push
mov
add
cltd
pop
xchg
or
into
inc
cltd
aaa
scas
push
test
cs
dec
in
out
pop
lret
jnp
cmp
sub
xchg
mov
push
lock
test
stos
add
lds
pop
jbe
and
adc
cmp
data16
jns
dec
and
cmp
out
xchg
in
xchg
and
cmp
cli
out
push
pop
nop
ret
cmp
and
push
add
repz
repnz
and
dec
in
push
lock
popl
xor
fildl
adc
fstpl
outsb
imul
dec
xor
in
xor
fbstp
pop
xor
sbbl
push
jne
pop
sub
mov
or
pop
les
rcrl
daa
pop
pop
cmp
cmp
aam
mov
lahf
rorb
fimuls
push
gs
jo
out
jmp
and
jecxz
inc
inc
add
add
call
fistl
push
nop
insb
out
xor
jbe
movsl
rcrb
and
in
jb
xchg
xchg
mov
push
mov
sti
or
test
cmpsl
pop
stc
cmp
shrb
loopne
cmp
dec
arpl
push
mov
loop
inc
aas
dec
add
inc
into
pop
dec
xchg
shlb
aaa
xchg
cmpsb
sbb
push
mov
neg
lret
int
xor
aam
ret
mov
fstp
insl
rcrb
sbb
dec
cmp
add
lahf
icebp
idiv
adc
lock
sbb
rorb
pop
test
xchg
aad
adc
je
dec
jg
leave
jo
dec
add
pop
test
push
sahf
or
jmp
jmp
scas
std
mov
scas
inc
sbb
jge
xor
out
cmp
stos
cmp
js
ds
pop
cmp
mov
cmp
shr
aaa
sbb
sub
rolb
or
xlat
es
xchg
push
arpl
jecxz
fwait
and
test
pop
cwtl
pop
mov
add
xorb
mov
cmp
xor
aaa
mov
xor
rcr
subl
dec
arpl
xchg
into
xor
sbb
sbb
mov
iret
lds
das
dec
enter
mov
in
mov
mov
xlat
and
insl
scas
inc
es
pop
lds
xor
jbe
out
dec
shrl
imul
add
sbb
sub
ror
mov
test
or
mov
mov
jge
ja
sbbb
sbb
or
inc
clc
adc
mov
les
das
jp
out
jmp
sub
leave
outsl
mov
push
mov
je
dec
add
push
fnstcw
insl
jno
rolb
gs
outsl
outsb
push
push
sbb
xor
orl
sahf
cmc
aaa
ficoml
lahf
cmp
cmpsb
adc
arpl
out
push
dec
stc
rcr
repz
icebp
ljmp
xchg
sub
js
mov
pop
test
add
in
pop
fisubrs
dec
xchg
sub
jle
es
bsr
sub
popa
mov
stos
in
out
nop
add
mov
cli
pop
in
insl
mov
mov
pop
adc
loop
jb
inc
repz
and
or
xor
sbb
fstp
mov
sti
push
lock
mov
xchg
or
fs
arpl
cld
shr
mov
scas
jl
mov
arpl
xchg
das
sbb
sbb
fisttpll
jne
je
mov
ficoml
in
inc
pop
push
xchg
cltd
dec
mov
and
cmp
mov
jno
adc
roll
cld
out
call
xchg
aad
sbb
push
loop
icebp
sahf
pop
popa
jo
push
lds
and
xor
inc
xchg
or
push
xor
ficoms
cmpsb
fisttpl
out
out
shl
push
mov
andb
jg
mov
aad
xchg
adc
add
and
fisubs
adc
iret
xchg
or
call
mov
add
outsb
push
mov
mov
sub
nop
in
push
push
xchg
bound
pop
mov
ja
loopne
fucom
pop
pop
inc
iret
mov
adc
cld
test
outsb
and
fdivrs
dec
inc
mov
insb
jmp
xchg
pop
mov
xchg
jae
testl
leave
sub
mov
repnz
lea
mov
push
jl
sub
pop
or
daa
xchg
inc
das
xchg
or
clc
sub
cmpb
sub
lds
xchg
cmpxchg
mov
movsb
movsl
xchg
sub
lods
rclb
mov
std
test
lds
ds
mov
sbb
out
add
movsb
and
dec
sub
mov
daa
inc
lahf
inc
ss
fistl
push
sub
jl
div
scas
xor
cs
cmp
movsl
cld
sub
push
int3
hlt
or
or
xchg
imul
push
cmc
icebp
cli
fistl
add
test
xor
jg
cmp
hlt
stos
sub
cmp
insb
outsb
pop
aaa
cmpl
mov
lret
pusha
xchg
test
sbb
mov
dec
pop
xchg
imul
cmc
xor
sub
cmp
rorl
pop
pop
in
inc
mov
imul
ret
pop
mov
and
or
cmp
sub
stos
jne
push
jp
lcall
or
fstl
addl
adc
ljmp
dec
push
push
dec
pusha
fmul
lcall
lods
mov
outsb
push
and
scas
pop
mov
mov
sub
mov
jb
fs
adcb
test
xchg
xor
mov
jl
push
sbb
insl
add
mov
nop
addr16
sub
and
sbb
fsubp
push
fisubs
pusha
and
jmp
jg
rol
or
ret
fmuls
fdivp
in
sbb
and
pop
subb
ret
fld
push
add
jge
push
arpl
mov
xchg
pusha
int3
push
pop
call
jo
cmpb
adc
mov
cmpsb
data16
mov
jecxz
mov
mov
adc
sti
and
movsb
aam
mov
mov
fiadds
or
inc
cltd
lea
pop
push
xor
jbe
std
fsubrl
js
mov
out
adc
and
sub
in
lahf
daa
clc
sbb
lcall
divl
xchg
pop
jo
mov
push
mov
cmp
push
call
cmc
jne
fisubrl
cld
jo
shrl
mov
imul
in
icebp
dec
mov
cmc
pop
push
adc
adc
jmp
clc
mov
xor
idivb
inc
push
insl
gs
xchg
mov
xor
add
mov
add
mov
shll
xchg
cmp
cmc
mov
loope
xchg
mov
adc
lcall
and
sub
mov
jb
sar
jle
aas
stc
movsb
and
sbb
in
aaa
mov
fwait
jnp
fstl
mov
push
adc
add
push
lds
sbb
jle
mov
mov
add
pop
xlat
jnp
xchg
jno
cmp
and
inc
jle
sub
push
mov
mov
jae
out
mov
inc
cmp
pop
xchg
xlat
pushf
mov
outsl
sbb
add
or
mov
subl
push
pop
repz
jl
dec
push
outsl
addl
bound
out
imul
test
pop
nop
orb
inc
xor
inc
bound
in
lret
or
mov
cmpsb
mov
cs
adc
pop
mov
inc
bound
dec
ret
imul
mov
aad
sbb
data16
lods
jg
lahf
dec
movsl
cld
add
lds
cmc
or
jg
xchg
gs
lods
dec
roll
mov
cmpsb
fwait
int
sub
pop
push
lret
popf
jae
mov
mov
or
cs
fwait
test
inc
jle
jbe
into
jae
add
filds
loope
mov
data16
push
pop
je
xchg
lret
cmpsb
cld
push
fs
das
dec
mov
jl
std
cmp
fbld
inc
cmp
in
movsb
bound
mov
push
mov
mov
in
lds
iret
testb
sbbl
jbe
arpl
xchg
dec
xor
dec
rcrb
inc
add
dec
stos
stc
mov
iret
fs
xorl
in
dec
mov
add
imul
kmovd
pop
push
subl
sub
sahf
movd
jg
cs
mov
and
cmp
cmp
sub
cmp
mov
popa
add
mov
jge
outsl
xor
add
stos
xlat
loop
stos
adc
scas
ja
shll
mov
and
push
ds
sbb
inc
dec
inc
push
mov
xchg
icebp
or
xchg
sarl
inc
jl
loope
or
sub
movl
mov
jmp
lock
pushf
gs
cs
sbb
adc
mov
out
pop
je
addr16
dec
xchg
ss
das
lods
xor
jle
jno
push
add
inc
lods
sbb
lock
or
stos
jo
mov
mov
pop
adc
xor
lods
into
stos
mov
mov
sbb
cwtl
cmpsl
push
jo
stc
push
cmpsb
in
push
test
push
stos
mov
add
lods
repnz
xor
dec
es
inc
lret
lock
out
xorl
ja
faddp
fmuls
lods
sub
inc
pop
cmpsb
add
mov
inc
stos
test
cmp
pop
jno
out
iret
xor
sbb
es
inc
fistpl
add
adc
inc
mov
lret
sbb
lea
mov
fsts
test
icebp
jmp
add
aam
sub
pop
lea
push
outsl
xchg
insl
fucomi
fcmovnb
jns
pushf
mov
scas
pop
jge
enter
insl
faddp
xor
sub
jmp
mov
rol
dec
les
test
mov
xchg
enter
outsb
mov
int3
ja
add
add
loop
imul
pop
mov
icebp
cmp
xchg
pushf
jbe
inc
xor
and
mov
leave
popf
jo
sbb
xchg
or
int3
mov
sti
cwtl
cwtl
lahf
inc
lods
add
and
cmp
sbb
push
sub
add
add
add
add
inc
xchg
add
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
or
mov
add
